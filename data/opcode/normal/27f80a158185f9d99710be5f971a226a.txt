(bad)
(bad)
(bad)
call
push
push
mov
mov
mov
mov
call
pop
lea
sub
(bad)
(bad)
call
and
shl
add
mov
mov
mov
mov
lea
mov
repz
dec
add
adc
jne
mov
push
add
je
outs
and
add
add
or
or
(bad)
fistp
mov
ret
sbb
ss
add
clc
cmp
jae
leave
add
add
test
pop
mov
mov
bswap
mov
bswap
push
lsl
(bad)
dec
push
bswap
push
push
mov
mov
mov
pop
sbb
add
and
sub
mov
mov
mov
add
lea
fldcw
push
mov
(bad)
fstp
std
mov
mov
loopne
xor
mov
sbb
mov
mov
mov
cmps
jmp
adc
dec
sbb
sbb
xchg
mov
(bad)
dec
leave
push
inc
sbb
shl
dec
leave
add
and
sti
(bad)
call
retf
and
xor
ror
mov
add
ror
add
sub
xor
push
mov
cld
ror
mov
xor
mov
add
mov
(bad)
(bad)
inc
add
and
add
xor
add
add
cmp
jne
mov
pushf
inc
and
mov
retf
jg
inc
mov
test
shr
ror
xor
xor
ror
add
out
out
mov
shl
imul
add
test
int
popf
ret
iret
aas
pop
mov
js
(bad)
jne
fdivr
(bad)
inc
sbb
mov
add
add
add
add
mov
mov
mov
out
fwait
scas
jecxz
dec
or
sbb
sbb
mov
(bad)
inc
push
adc
inc
adc
pop
sbb
dec
sbb
push
adc
sbb
dec
jg
jmp
sub
or
adc
sbb
and
pop
pop
pop
pop
in
enter
jmp
nop
add
or
(bad)
call
xchg
inc
aaa
jno
sti
shl
ret
icebp
adc
pop
movs
cmp
(bad)
(bad)
(bad)
call
pop
sbb
cwde
stos
pop
fadd
pop
adc
test
and
jge
push
je
mov
and
dec
xchg
shr
xchg
out
(bad)
popf
ror
mov
jmp
dec
fdivr
(bad)
(bad)
jmp
stc
jbe
push
ds
ins
(bad)
xor
(bad)
jg
mov
inc
xchg
cmps
aad
(bad)
(bad)
(bad)
jmp
push
sub
adc
or
cs
ins
sub
adc
or
or
cs
(bad)
(bad)
dec
ret
sub
xchg
mov
data16
mov
call
cdq
(bad)
test
(bad)
(bad)
push
push
push
shl
ja
daa
mov
mov
mov
sbb
dec
stos
fmul
(bad)
(bad)
(bad)
dec
pushf
pop
rep
cs
outs
arpl
test
add
mov
(bad)
mov
movs
idiv
(bad)
jmp
mov
add
add
push
add
or
push
or
xor
jmp
bound
imul
jb
outs
jae
outs
jb
and
js
ss
inc
push
pop
push
(bad)
(bad)
(bad)
call
inc
dec
push
and
and
jo
jb
inc
outs
jo
outs
jae
ins
outs
jb
ds
or
sbb
jecxz
pop
outs
bound
mov
xor
ds
jecxz
out
push
jbe
pop
sbb
(bad)
push
add
lea
mov
bswap
mov
bswap
stos
repnz
dec
ja
bswap
and
sub
adc
adc
jle
xor
xor
pop
sbb
mov
xchg
mov
sbb
cmp
sbb
push
sub
inc
dec
dec
mov
enter
mov
push
cmp
push
push
pop
push
xlat
mov
mov
sub
retf
repz
jb
cmp
ror
xor
mov
add
jge
adc
sbb
idiv
mov
outs
add
add
xor
or
lds
jmp
xor
hlt
aad
push
and
add
mov
sti
fnstsw
adc
repnz
stc
ror
and
test
push
xor
(bad)
sbb
iret
push
out
add
ror
mov
mov
xor
sti
loope
xor
or
call
addr16
(bad)
fnstsw
push
or
lock
or
sahf
inc
into
pop
popf
push
sub
dec
sbb
and
dec
leave
mov
in
dec
and
retf
cmp
lahf
pop
sub
add
jae
xchg
adc
adc
das
cmp
mov
(bad)
mov
push
xor
dec
(bad)
scas
or
adc
in
mov
scas
sbb
and
pop
out
push
popf
push
xor
sbb
and
or
or
mul
pop
scas
push
and
scas
sbb
fadd
cmp
rol
scas
or
mov
xchg
or
adc
jae
pop
inc
push
jl
lahf
mov
enter
and
sbb
scas
or
int3
jne
add
(bad)
scas
adc
inc
mov
shl
push
or
scas
shl
arpl
inc
scas
and
mov
lods
outs
scas
rcr
push
mov
add
rol
pop
xor
add
and
jbe
mov
sbb
lods
rcr
ins
fld
mov
rcl
pushf
arpl
scas
rol
shl
arpl
pop
scas
jg
rol
adc
adc
mov
sbb
pop
mov
add
les
push
retf
inc
and
aad
inc
and
int3
pop
mov
sti
js
add
or
inc
out
add
mov
mov
out
popf
or
sti
ja
sub
repz
mov
adc
xor
or
xor
xor
adc
and
dec
mov
xor
sub
add
xchg
xchg
inc
push
loope
jo
sub
dec
call
movaps
dec
(bad)
ja
out
xchg
inc
aaa
or
cmc
adc
cli
add
or
and
sub
and
mov
aas
mov
mov
push
loope
jp
xor
and
test
sub
xchg
push
add
push
adc
or
jno
enter
(bad)
addr16
dec
or
xor
pop
sub
or
lahf
xchg
or
mov
or
dec
sbb
xor
xchg
sub
mov
fs
rol
cmps
add
shl
adc
xor
xchg
sub
inc
add
sub
loope
inc
cmp
inc
xchg
fs
adc
dec
xor
fs
xor
in
and
syscall
dec
and
xor
cmovl
cmovs
and
inc
xchg
and
push
adc
loope
and
adc
in
dec
mov
adc
or
and
fwait
xor
dec
or
or
push
xchg
inc
adc
sub
enter
push
addps
dec
cmp
dec
andps
cmp
inc
add
or
and
sbb
movntps
addr16
pop
xchg
inc
pusha
inc
push
or
enter
mov
cmp
dec
cmp
xchg
and
cmovo
stos
pavgb
nop
test
or
xchg
inc
adc
or
adc
les
push
push
inc
adc
aas
jno
ret
push
cwde
and
add
and
add
sub
rcl
xchg
inc
adc
xor
shl
push
push
and
sbb
and
movlps
inc
adc
sub
adc
pop
push
xchg
inc
cmp
adc
adc
or
adc
or
and
inc
adc
xchg
jno
adc
sbb
rol
adc
mov
and
es
add
add
cmps
or
or
pop
pop
es
pop
or
pop
cmp
dec
and
add
add
adc
std
mov
mov
or
adc
pop
and
das
sbb
dec
cs
xor
scas
sbb
xadd
cmp
jb
push
adc
or
pop
out
mov
or
or
mov
das
loopne
sub
mov
inc
lock
and
add
fstp
movq
add
add
and
add
psllq
mov
push
fs
cmp
or
pop
mov
jle
adc
(bad)
loopne
fbstp
jmp
idiv
xor
jg
and
repnz
(bad)
sti
or
fistp
and
js
nop
add
mov
das
loope
retf
mov
adc
sti
xor
xor
palignr
xor
mov
add
adc
retf
and
(bad)
out
scas
or
or
add
sub
aam
mov
(bad)
mov
or
xor
(bad)
pop
xor
add
ror
and
(bad)
jg
(bad)
pshufd
xor
setne
push
xor
ror
pxor
add
scas
jae
jmp
or
(bad)
or
retf
mov
mov
mov
ins
adc
mov
out
outs
test
mov
mov
cli
sub
or
test
mov
xor
into
jne
fldenv
jae
adc
sti
bound
xchg
and
xor
adc
add
jne
sahf
aad
movs
inc
or
je
inc
or
jl
into
xor
push
or
out
mov
add
cmp
inc
and
jo
push
xor
clc
dec
div
lock
(bad)
jne
xlat
or
mov
sub
retf
outs
mov
ds
add
bound
mov
call
push
mul
ins
jne
std
cs
int
popf
jnp
cli
sub
test
out
mov
icebp
sbb
jg
in
ficom
cwde
sub
adc
add
pushf
popa
test
or
cld
loop
jno
outs
mov
push
outs
clc
lock
cmp
loope
and
ds
add
aaa
sti
xor
or
sti
iret
add
xchg
xchg
cld
or
cld
clc
pusha
cwde
adc
cld
sbb
sub
sti
test
xor
xor
adc
xchg
fadd
mov
cmp
int3
or
or
mov
cld
push
adc
xor
adc
cmp
cld
sbb
cmp
jnp
adc
adc
sbb
sti
or
jo
adc
inc
sti
dec
sti
cmp
sti
cmp
pushf
shl
adc
mov
pop
(bad)
adc
and
icebp
repz
adc
cmp
out
sti
mov
mov
jecxz
outs
stc
out
cli
fwait
lock
jl
cmp
loop
idiv
psubb
inc
cmps
inc
clc
xlat
stc
inc
dec
jo
sti
jp
loope
movs
pop
inc
jb
je
clc
ret
loope
add
cmp
sti
mov
sar
xlat
ja
popa
or
sar
cli
cld
dec
pop
enter
dec
or
xor
pop
test
cld
cs
loope
jb
clc
xlat
idiv
repnz
dec
xor
cs
in
std
clc
mov
jo
cmc
loopne
push
outs
cli
cmp
outs
mov
push
cmp
jecxz
stc
cwde
inc
mov
(bad)
or
pushf
dec
cld
push
iret
cmc
test
nop
loopne
cld
clc
ret
loope
add
and
test
imul
fs
xor
pop
push
dec
jo
and
clc
or
ret
sti
cs
and
cmc
clc
sbb
xor
cli
pop
jmp
dec
clc
push
cmp
not
sbb
adc
sbb
jne
nop
or
in
add
sbb
sbb
es
fmul
dec
push
add
les
dec
mov
mov
and
les
test
pop
mov
lods
fsub
jne
lods
xchg
mov
outs
test
or
int
mov
and
clts
ret
mov
outs
leave
add
mov
loopne
add
repz
and
push
push
xchg
xchg
jo
dec
inc
or
or
aas
push
scas
repz
test
inc
inc
loopne
xchg
cwde
test
sbb
xor
jbe
inc
sbb
or
cdq
add
and
repnz
repnz
push
mov
out
mov
adc
fcom
sbb
mov
and
jno
sbb
add
and
pusha
ret
inc
adc
pop
les
je
mov
jae
dec
push
mov
aaa
mov
test
or
cmp
inc
inc
sbb
arpl
test
add
or
and
fadd
add
push
inc
mov
adc
inc
mov
add
imul
mov
dec
pop
(bad)
pop
pop
shl
retf
sti
mov
lock
dec
and
pop
add
cs
adc
out
(bad)
frstor
sbb
jle
mov
and
(bad)
loopne
push
fs
sub
push
add
ror
ja
sbb
pop
pusha
shl
out
pop
push
hlt
xor
lea
sti
add
cli
outs
pop
add
add
and
dec
jns
loop
add
vpshufb
vpaddd
vpshufb
(bad)
(bad)
ffreep
icebp
(bad)
ins
adc
jmp
loope
jge
vpackuswb
ins
and
je
inc
pop
xor
inc
push
vpalignr
mov
shrd
vpalignr
sti
cmps
sbb
aam
sbb
adc
adc
vmovdqu
stos
rcl
vpslld
mov
shrd
sti
xor
fs
mov
sti
cli
pop
ffree
into
mov
and
and
sti
jbe
sbb
adc
vpxor
daa
push
inc
cmc
or
mov
out
jmp
fmul
mov
test
in
sbb
daa
shl
adc
push
(bad)
fstp
add
fld
sbb
shl
sbb
jnp
mul
cmp
les
add
fxch
adc
or
jbe
cmp
adc
xor
daa
clc
push
xor
popa
mov
xchg
test
ja
rol
or
out
daa
mov
or
jo
call
pop
stc
adc
jns
or
mov
in
mov
or
cdq
mov
or
xchg
mov
push
cld
or
cs
les
lock
clc
or
out
and
imul
jecxz
psubq
jno
pushf
or
loopne
or
popa
inc
dec
(bad)
push
iret
in
not
div
clc
mov
clc
inc
out
sbb
ret
rcr
div
xor
xor
sbb
push
inc
idiv
popf
int3
clc
shl
or
clc
or
or
adc
js
add
daa
clc
sbb
loope
sbb
out
push
idiv
mov
sbb
ins
inc
div
js
jo
xor
add
stos
mov
mov
imul
test
jae
sub
jne
lock
sbb
or
or
jle
mov
cmp
ror
mov
into
vpsadbw
lock
div
loopne
not
movs
or
clc
div
movs
adc
clc
lock
movs
test
adc
lock
div
inc
dec
ret
(bad)
aam
js
mov
add
dec
dec
div
in
rcl
dec
xor
lock
clc
lock
xchg
loopne
dec
clc
lock
or
sub
add
jne
fcom
and
loopne
clc
lock
xor
imul
(bad)
fbld
imul
scas
mov
adc
(bad)
fdivr
es
ja
jne
in
add
dec
add
out
adc
lock
add
lock
test
fsubr
or
test
lock
ins
bound
neg
scas
jne
idiv
sub
add
div
dec
push
bound
call
cdq
icebp
cvtps2pd
pop
addr16
or
xor
mov
or
int3
(bad)
cwde
pop
inc
aas
mov
pusha
push
out
add
test
pop
inc
mov
and
and
jae
dec
mov
lahf
push
inc
push
popa
pushf
cmp
sahf
es
mov
je
int3
or
scas
leave
dec
mov
data16
jo
inc
add
dec
leave
push
push
scas
test
mov
lods
adc
inc
push
xor
xor
inc
and
dec
push
add
dec
add
add
jb
int
adc
adc
inc
xor
sub
cmp
cli
push
sbb
push
nop
jne
lods
or
fsub
xchg
or
ror
retf
or
push
inc
pop
retf
mov
inc
mov
add
cmp
test
mov
pop
inc
pusha
inc
or
ror
adc
push
and
inc
and
in
inc
and
bound
add
mov
xchg
lods
mov
test
in
ret
stc
outs
vpunpcklwd
shl
cld
ja
int3
add
in
jmp
or
es
pop
ret
or
adc
(bad)
inc
or
adc
test
je
ret
push
push
add
mov
test
push
sub
pop
call
mov
dec
pusha
pop
pop
sbb
nop
jl
stc
adc
dec
pop
enter
add
xchg
push
inc
mov
push
add
mov
add
jl
push
shr
xchg
jl
mov
rcl
add
mov
jmp
jmp
pop
out
or
or
pop
in
cmp
mov
adc
in
or
adc
ja
rol
adc
sub
sub
pop
adc
add
mov
add
inc
add
mov
push
mov
stc
add
call
pop
mov
mov
ins
idiv
into
call
xor
push
add
adc
pop
out
mov
mov
test
xor
push
add
push
daa
(bad)
(bad)
(bad)
push
jl
mov
pop
pop
ret
pop
mov
cmp
jne
xor
pop
ret
lea
mov
xor
leave
jne
sub
pop
ret
pop
sub
jg
sbb
lods
push
or
add
or
jae
add
xor
inc
jmp
push
push
adc
(bad)
(bad)
(bad)
mov
push
mov
lea
push
push
call
mov
call
mov
fdivr
cmp
and
cmp
dec
call
push
or
shl
lds
and
mov
push
mov
push
je
mov
cmp
dec
adc
jg
fnstsw
adc
mov
xor
lea
dec
pop
push
push
push
lea
add
inc
adc
inc
pop
in
sti
call
add
add
push
mov
inc
or
dec
dec
pop
mov
push
mov
mov
pop
pop
xor
pop
dec
mov
push
cld
aas
popa
xchg
mov
push
sub
mov
mov
cld
add
(bad)
call
inc
test
adc
mov
js
add
jnp
inc
add
sub
test
adc
jg
dec
or
mov
pop
dec
clc
sbb
jnp
pop
mov
ret
pop
or
std
push
idiv
popa
and
adc
inc
enter
mov
inc
mov
icebp
inc
dec
dec
mov
and
cmp
jne
sbb
cmp
mov
or
das
inc
add
mov
int
sbb
or
or
cmp
(bad)
jg
mov
je
mov
jmp
or
pop
popf
lock
mov
sbb
les
mov
pop
rol
cmp
add
lea
lock
pop
lock
lea
mov
push
push
iret
inc
mov
aas
or
dec
and
dec
and
mov
pop
pop
mov
js
pop
xor
mov
in
xchg
and
mov
mov
and
je
mov
(bad)
std
lea
mov
add
sbb
or
pop
cmp
aaa
jge
fs
or
(bad)
sbb
not
dec
push
xchg
inc
mov
inc
jmp
push
push
and
icebp
push
lea
mov
dec
lea
push
ret
ffreep
mov
jne
mov
push
mov
or
mov
add
mov
test
je
push
mov
sub
mov
sbb
pop
or
pop
rcr
pop
stos
pop
xchg
aad
and
stc
test
mov
mov
lea
jle
inc
push
push
push
or
sbb
rol
push
jns
xor
daa
popa
or
dec
mov
cmp
je
cmp
mov
repz
push
and
shl
and
sbb
pop
pop
mov
sbb
jecxz
xor
popf
(bad)
mov
cmps
sub
dec
cmp
je
cmp
mov
adc
mov
xor
jmp
push
push
call
pop
pop
pop
cmp
push
inc
test
push
xor
popa
test
cs
lahf
pop
mov
movs
fisttp
and
cmps
mov
jnp
sbb
sbb
sub
adc
push
dec
or
push
popa
pop
out
fmul
inc
icebp
push
dec
dec
ja
or
mov
or
ret
imul
inc
jns
add
inc
rol
add
pop
pushf
test
jle
dec
ss
inc
js
iret
mov
push
dec
fadd
push
(bad)
push
aaa
sub
in
out
push
xor
popa
lahf
std
add
pushf
add
sub
or
jmp
(bad)
add
push
inc
(bad)
fcomp
push
es
les
add
sar
mov
mov
cmp
jae
mov
inc
je
cmp
(bad)
aas
or
jmp
test
je
mov
mov
xor
xor
cld
mov
mov
dec
pop
dec
jle
out
cli
xor
jge
ror
inc
adc
shl
pop
adc
(bad)
(bad)
jmp
ror
dec
or
inc
fadd
cmp
jbe
test
je
lea
mov
push
cmc
jecxz
add
dec
lods
jbe
jg
aas
test
add
add
push
push
cmp
cmp
inc
add
sub
mov
mov
std
pop
jmp
xchg
sti
imul
pcmpeqd
cmp
lahf
sub
mov
arpl
test
add
jmp
mov
or
push
mov
xor
mov
inc
or
mov
xchg
add
push
lods
adc
adc
(bad)
mov
(bad)
(bad)
mov
test
mov
cmp
jb
sub
cmp
cmovb
cmp
cmp
dec
sti
imul
mov
jmp
push
ror
popf
imul
xchg
dec
xor
pop
shl
ret
push
push
clc
inc
pop
mov
aas
or
push
cmp
xor
cld
idiv
mov
je
ss
push
mov
pop
or
pop
mov
push
push
sub
jecxz
jb
addr16
add
dec
(bad)
dec
(bad)
xchg
or
mov
loope
das
adc
dec
lahf
jmp
mov
fldenv
sbb
adc
(bad)
sbb
adc
add
pop
rol
(bad)
inc
adc
mov
inc
rol
add
add
cmp
in
loop
push
cmp
jb
mov
adc
data16
ds
je
sbb
(bad)
std
ret
jl
cli
push
lea
xor
lea
push
and
jmp
movs
pop
and
add
xchg
mov
jne
cmp
ja
(bad)
dec
jae
push
ins
add
jmp
cmp
je
cmp
jae
mov
adc
lock
push
retf
adc
pop
mov
jno
in
or
add
xor
cmp
pop
ja
sbb
sbb
neg
bound
or
sub
mov
xadd
shl
orps
(bad)
pop
xlat
mov
add
pop
cmp
jbe
mov
xor
jo
adc
sub
int3
int3
les
(bad)
jmp
push
mov
cmp
je
push
(bad)
pop
dec
mov
cmp
jge
add
dec
xor
dec
pop
fidiv
and
dec
add
into
and
sbb
or
mov
inc
or
dec
mov
out
jg
push
cmp
jbe
retf
jmp
xor
mov
add
adc
jne
shr
cmp
jbe
pop
(bad)
mov
scas
fdiv
lea
jmp
push
pop
lea
jno
sar
mov
pop
pop
test
je
fild
pop
xchg
icebp
je
push
push
dec
jmp
call
xor
mov
popa
cld
(bad)
call
pop
mov
pop
pop
out
add
fdivp
outs
fdiv
jle
leave
je
cmc
mov
dec
and
or
jne
in
mov
xor
or
into
je
in
dec
cs
paddd
or
sete
mov
mov
pop
in
fdivp
mov
dec
aam
push
mov
arpl
in
sti
out
cmp
mov
pop
jmp
pop
ret
and
pop
xor
and
adc
je
popa
ins
pop
xchg
mov
ret
fnstsw
or
rcr
xor
inc
cmp
hlt
(bad)
out
jle
add
pop
xor
jl
and
push
jle
or
push
(bad)
jg
jg
cmp
jbe
sub
sbb
jmp
xor
mov
jg
sbb
add
jne
push
pop
jmp
out
test
cmp
je
inc
xor
sbb
add
inc
xor
mov
push
xchg
idiv
(bad)
cmp
inc
jg
jl
test
jne
mov
push
and
ret
jo
shrd
cmp
jne
test
xchg
out
shl
push
cmp
xchg
fsub
jmp
cmps
jmp
(bad)
int3
ja
call
add
mov
or
popf
jecxz
mov
(bad)
mov
shl
jne
dec
fnsave
jae
leave
cmp
cmc
(bad)
aas
jbe
ja
pop
push
pop
pop
mov
test
jne
jmp
dec
mov
xor
cmp
sub
mov
test
jle
mov
(bad)
dec
mov
mov
lea
mov
mov
mov
movzx
jmp
test
fucomip
fisttp
push
or
fs
or
leave
cmp
je
xchg
(bad)
call
jb
mov
add
cmp
jne
mov
sub
sar
pop
inc
mov
mov
ror
inc
add
mov
rcr
and
and
and
push
loop
call
pop
pusha
push
push
mov
mov
or
or
(bad)
inc
gs
js
mov
lea
pop
pop
aam
pop
cld
mov
inc
pop
mov
lea
push
push
add
xor
push
or
mov
mov
(bad)
jg
jl
idiv
push
push
push
push
add
dec
je
call
cld
mov
mov
mov
mov
jmp
cld
inc
jmp
push
call
clc
or
push
dec
(bad)
(bad)
call
pop
pop
mov
std
push
sub
push
xor
mov
arpl
hlt
cmp
and
adc
dec
imul
or
or
add
jg
mov
lea
call
xor
push
call
jnp
mov
int3
jne
clc
mov
push
push
hlt
(bad)
jne
(bad)
std
call
push
xchg
or
cmp
pusha
add
cmp
pushf
xlat
add
fdivr
stos
sub
cmp
loop
out
push
mov
pop
pushf
lea
(bad)
push
not
dec
nop
or
aas
test
fbstp
neg
aad
dec
push
sub
mov
xchg
lea
rep
or
idiv
jge
lea
shl
movs
xor
mov
clc
aas
(bad)
adc
lea
push
lea
lea
clc
(bad)
jg
push
call
fistp
fisttp
push
inc
(bad)
(bad)
fstp
push
mov
lea
xor
mov
ret
je
xor
je
mov
or
lea
(bad)
(bad)
cmp
mov
mov
pop
mov
lea
dec
inc
push
mov
mov
push
push
daa
adc
mov
mov
sub
mov
cld
mov
pop
cwde
mov
icebp
fidivr
add
pop
lea
mov
mov
(bad)
cmp
push
push
push
cmp
(bad)
mov
inc
push
pushf
and
jp
ror
ja
mov
add
stos
push
cmps
stos
fcomip
push
stos
stos
mov
push
mov
call
js
cmp
jne
div
mov
xor
push
lea
nop
pop
dec
adc
jmp
or
mov
mov
push
adc
cdq
popa
adc
lea
cmp
pusha
dec
push
mov
cli
mov
stos
xchg
add
mov
pop
sbb
rcl
dec
sbb
cmps
pop
mov
(bad)
push
adc
xor
and
adc
inc
(bad)
ins
pop
cs
ret
dec
(bad)
push
ja
or
mov
sub
push
inc
adc
push
sbb
je
xor
imul
scas
fs
pusha
call
orps
push
pop
cmp
mov
sti
jne
mov
pop
xor
mov
pop
inc
shr
(bad)
pop
movs
call
mov
push
dec
xor
mov
aam
(bad)
jmp
pop
adc
pusha
das
movs
mov
loope
dec
inc
movs
xor
adc
xchg
jae
push
push
lea
movs
lahf
xlat
mov
pop
mov
shl
adc
cli
and
loopne
mov
sbb
mov
ins
rcl
xchg
cli
ret
jle
addr16
in
push
sbb
pop
sbb
sbb
ror
idiv
add
or
fmul
rcl
and
or
mov
cmp
add
push
clc
daa
daa
inc
or
lea
mov
or
das
and
and
rcl
sbb
in
leave
jae
icebp
es
mov
pop
sbb
jmp
cmps
cmp
push
repnz
into
inc
and
add
dec
jle
bound
sbb
js
shld
and
cmp
ja
mov
jb
jmp
or
jmp
dec
std
sbb
mov
movs
dec
sbb
push
sub
pop
test
movs
sbb
movs
lea
or
test
pusha
jne
pop
cmc
sbb
and
call
mul
xor
mov
mov
pop
gs
and
(bad)
mov
push
xor
retf
cli
cli
jb
sub
ja
popa
rol
sbb
fsubr
push
jmp
cmp
sbb
lea
sub
xor
pop
pop
fadd
pop
lds
and
test
sub
iret
pop
cmp
or
sub
mov
out
and
jmp
dec
ror
push
out
shl
jmp
pop
xchg
test
movs
jmp
pop
inc
enter
push
fcomp
cmp
or
(bad)
dec
or
xor
enter
adc
inc
adc
or
and
push
es
pop
aam
mov
mov
loope
mov
cmp
add
push
mov
push
mov
jmp
enter
aaa
les
mov
jne
sti
or
xor
pop
shl
inc
movs
inc
mov
pop
pop
lock
cmp
mov
mov
cmp
jae
and
cmp
or
mov
mov
and
sbb
mov
movzx
cmp
je
ins
(bad)
jmp
xor
ja
mov
add
cmp
jb
or
pop
sti
sbb
sub
or
rcl
jmp
ror
and
test
or
in
cdq
mov
out
cli
outs
push
sbb
movzx
mov
shl
push
sahf
or
shr
jg
or
rep
adc
rep
pop
jl
push
push
push
push
xor
(bad)
(bad)
ffreep
mov
sbb
pop
add
ror
mov
mov
data16
(bad)
(bad)
mov
mov
push
and
sub
xor
inc
or
cs
cmp
xchg
pop
fbstp
mov
mov
mov
loope
pop
inc
jmp
sub
pop
je
std
aaa
cld
or
jbe
call
dec
and
and
inc
mov
cmp
adc
cmp
vmwrite
adc
cmp
or
cmp
and
jle
add
mov
pop
pop
and
lahf
das
dec
sub
mov
add
push
lea
call
push
or
mov
mov
cmp
fstp
lahf
mov
pop
ret
(bad)
mov
add
lock
ret
lea
or
or
push
pop
cmove
ret
mov
(bad)
add
xchg
or
cli
aas
imul
call
pop
jne
mov
ret
mov
jne
(bad)
aas
cld
loop
inc
sbb
mov
rcl
(bad)
cmp
jae
mov
ret
out
stos
jecxz
add
jmp
dec
pop
cmp
je
push
pop
cld
jg
inc
cmp
jae
mov
mov
loopne
xor
add
inc
(bad)
mov
add
add
or
sbb
jg
mov
add
popa
or
pop
jecxz
xlat
and
or
mov
inc
imul
call
xor
lea
mov
mov
mov
push
push
jg
dec
jl
push
lea
and
jle
add
inc
icebp
(bad)
fcomip
sub
jne
push
inc
xor
push
pop
mov
mul
seto
neg
or
or
dec
push
pop
and
mov
xor
hlt
jp
push
data16
dec
add
add
dec
inc
inc
or
leave
pop
mov
inc
cli
push
aas
or
in
cmp
jge
jle
call
dec
cmp
jne
push
push
fistp
pop
push
sub
mov
aas
call
int
data16
mov
sub
add
jg
call
jmp
xor
mov
pop
test
je
lea
pop
aaa
push
pop
pop
addr16
arpl
inc
bnd
add
cmp
out
loope
push
call
xchg
sub
lea
xor
(bad)
lea
pop
mov
les
and
test
push
pop
(bad)
shl
sbb
ins
push
outs
or
popf
mov
pop
or
call
dec
push
adc
mov
pop
lea
mov
adc
mov
jmp
movzx
mov
mov
inc
or
in
les
push
adc
cmp
jne
push
sub
pop
sub
fisttp
jno
ret
pop
dec
mov
jg
mov
xor
sub
inc
shr
push
maskmovq
imul
and
mov
push
mov
into
ror
inc
pop
pop
cmp
mov
pop
adc
sub
mov
mov
mov
add
jmp
dec
test
mov
cmovs
mov
mov
iret
lock
pop
jmp
pop
inc
cld
add
rol
xlat
pusha
or
sub
mov
jmp
adc
mov
out
mov
inc
mov
lea
inc
in
xchg
inc
mov
cmp
jne
pop
ja
or
dec
sti
or
cld
and
mov
lea
inc
or
or
hlt
cmp
movzx
cmovne
mov
xor
mov
aad
test
movs
(bad)
sti
mov
add
inc
movs
dec
pop
sar
or
inc
lock
mov
sbb
adc
add
sbb
jnp
(bad)
jne
pop
daa
test
add
push
jmp
fist
push
mov
mov
adc
add
add
mov
mov
fadd
push
mov
push
push
std
push
call
pop
and
or
jmp
jle
pop
into
jne
enter
dec
mov
or
call
sub
dec
push
push
mov
repnz
push
push
push
mov
rol
jge
popa
mov
or
push
jmp
jnp
or
jnp
mov
mov
outs
or
push
aad
dec
add
ins
mov
mov
push
aaa
add
mov
movs
pop
and
push
mov
fiadd
mov
mov
lea
jmp
ret
jl
jge
repz
inc
inc
in
inc
fdivr
lahf
out
out
mov
and
cmp
pop
lea
jle
fnstsw
jne
push
mov
add
push
mov
rcr
sub
lea
das
xchg
mov
ja
dec
mov
in
xor
mov
lahf
sti
mov
xor
lock
inc
test
es
xchg
mov
adc
nop
ins
push
mov
xor
mov
sub
fisttp
mov
je
mov
popf
loopne
mov
xor
inc
pop
stos
push
push
mov
lea
mov
jg
inc
nop
mov
push
push
add
mov
out
adc
fisttp
lea
push
fwait
and
(bad)
or
jo
jp
das
clc
cmp
add
dec
mov
std
mov
pop
inc
mov
push
mov
jmp
jnp
jg
test
cmove
adc
sbb
icebp
mov
pop
pusha
pop
cmp
loope
xor
(bad)
(bad)
std
(bad)
xor
test
clc
adc
push
call
pop
hlt
push
mov
sbb
(bad)
mov
test
pop
adc
push
cmp
(bad)
call
or
loopne
push
call
retf
push
inc
ret
xor
mov
inc
xor
lock
and
push
push
sbb
sub
pushf
mov
ret
mov
adc
add
xor
and
adc
adc
xor
sbb
sub
add
fucomip
test
sbb
xchg
js
fadd
or
enter
add
inc
xchg
add
mov
aaa
jne
jecxz
sti
dec
xchg
inc
cmps
or
sbb
(bad)
(bad)
pop
push
mov
xor
pop
push
mov
mov
sub
jb
jge
and
dec
mov
dec
test
es
push
push
add
mov
lock
cli
or
cld
mov
loopne
mov
pop
or
sbb
mov
add
jge
mov
adc
xor
xchg
call
pop
or
sbb
lods
sub
add
cld
dec
push
push
push
push
push
lea
mov
neg
(bad)
loopne
xor
mov
lea
mov
ja
mov
mov
mov
mov
inc
(bad)
mov
test
pop
(bad)
jne
mov
push
pop
ffreep
adc
cwde
mov
je
pop
xor
mov
call
cmovg
mov
fs
in
cmp
aaa
lea
mov
cmps
cmp
and
(bad)
and
pop
dec
or
fld
sbb
out
ret
xchg
xor
cmp
je
mov
stos
jg
int
mov
and
sar
jmp
mov
jmp
mov
mov
add
mov
mov
and
or
mov
mov
push
inc
mov
xor
add
lea
lods
add
cmp
(bad)
es
cmp
mov
inc
test
loope
lea
mov
pop
repnz
leave
mov
sub
add
(bad)
cmp
dec
xchg
inc
mov
repnz
add
xchg
(bad)
mov
lods
pusha
jo
arpl
jge
add
in
jle
inc
mov
push
push
push
sbb
fadd
jmp
(bad)
sub
fadd
jbe
cmp
in
mov
int3
push
push
sbb
pop
addr16
(bad)
outs
jmp
push
ins
xchg
fsub
jp
push
sbb
push
loop
pop
xor
fdiv
dec
push
mov
in
iret
jmp
jno
mov
sbb
pop
daa
retf
pop
ret
mov
mov
(bad)
loop
push
call
mov
call
mov
dec
mov
ret
add
mov
mov
aam
push
hlt
mov
xor
xor
mov
dec
dec
mov
mov
jg
test
je
icebp
fwait
(bad)
sbb
add
pop
mov
mov
dec
rcr
pop
mov
dec
jg
add
clc
jg
(bad)
mov
cmp
push
sbb
je
and
mov
push
sti
mov
lea
add
add
(bad)
push
adc
adc
sub
sbb
mov
sub
mov
add
jmp
(bad)
std
stos
xor
sbb
mov
out
cmp
je
mov
mov
ja
call
mov
add
add
and
dec
jnp
xlat
dec
ins
jl
push
(bad)
jmp
test
popa
or
pop
mov
mov
pop
mov
ret
mov
xor
sbb
mov
les
xor
sbb
adc
inc
mov
test
sbb
idiv
mov
mov
test
je
mov
call
and
dec
mov
mov
std
sub
stc
adc
pop
test
xor
pop
or
add
jmp
retf
cmp
add
ds
pop
repnz
je
add
adc
repnz
iret
loopne
add
mov
or
adc
pop
pop
add
cmp
mov
add
pusha
or
lock
mov
add
mov
mov
adc
jl
cmp
and
push
dec
xor
mov
shr
loop
mov
push
stc
or
xchg
adc
ja
mov
sbb
mov
out
cmp
inc
xor
push
add
inc
mov
inc
xor
outs
ins
adc
jecxz
dec
add
inc
clc
mov
shr
adc
in
ja
cmp
lea
jl
and
pusha
mov
push
mov
(bad)
loope
xor
lea
cmp
mov
cmp
cli
add
mov
mov
mov
pop
iret
mov
movzx
push
push
push
fbstp
into
push
jle
and
push
mov
push
les
ins
outs
popf
jge
inc
push
jnp
jne
push
and
mov
call
sbb
inc
cmp
cmp
je
mov
push
sbb
loopne
movs
jl
or
or
sub
shl
jl
adc
xor
cmp
mov
mov
mov
cmp
xchg
ja
cs
mov
jne
mov
out
sbb
pop
or
ret
jne
jo
sbb
push
je
mov
mov
adc
sbb
fld
mov
lea
mov
sub
sar
gs
sub
(bad)
dec
cmp
jae
lea
mov
mov
mov
mov
lea
mov
mov
jg
sti
fild
jne
xor
jmp
aas
mov
mov
add
shr
lock
dec
call
push
shl
jne
aaa
cmc
(bad)
jg
rcr
shr
jne
aaa
or
add
jo
lea
push
push
mov
mov
stos
or
dec
fcomp
mov
sbb
adc
add
out
pop
movs
add
out
(bad)
dec
clc
mov
add
mov
mov
mov
mov
and
adc
jne
push
sub
fstp
jae
jecxz
mov
sub
cmp
mov
lea
mov
and
adc
mov
sub
sti
ja
jae
sbb
push
arpl
leave
sub
mov
add
fucomip
out
popf
popa
or
adc
push
sbb
bound
fidivr
mov
jmp
cs
mov
add
sar
sub
pusha
mov
inc
add
sub
push
mov
or
jo
aaa
jne
xchg
mov
pop
pop
mov
jmp
cmp
inc
sbb
push
mov
or
mov
cmp
jbe
mov
cli
je
cmp
je
std
mov
cmp
jne
(bad)
inc
xor
cli
je
cmp
icebp
fisttp
mov
mov
movzx
jmp
jmp
btc
pop
mov
xchg
jp
mov
stos
pop
(bad)
(bad)
call
mov
dec
push
mov
mov
lea
cmp
jae
mov
jmp
test
(bad)
out
shl
sub
and
(bad)
ja
cmp
jbe
cmp
push
(bad)
(bad)
cmp
mov
mov
sub
sar
mov
sbb
jle
lds
jp
dec
inc
push
push
mov
cld
jg
out
dec
and
inc
xor
sbb
je
pinsrw
adc
je
cmp
jne
mov
cmp
or
sbb
add
and
pop
call
add
clc
cdq
add
adc
jmp
ja
and
cmp
pop
adc
mov
and
or
mov
mov
push
addr16
(bad)
mov
jg
cmp
ja
cld
mov
sar
add
lock
push
dec
mov
adc
rol
jge
test
push
or
enter
lea
push
inc
and
fistp
or
pop
mov
mov
ret
sti
test
je
mov
pop
push
rol
pop
(bad)
jl
(bad)
div
retf
jg
jae
mov
sub
add
aaa
ins
clc
cld
and
adc
je
cmp
ret
das
imul
adc
pop
mov
(bad)
call
bound
pop
sbb
jne
add
push
adc
mov
mov
in
out
leave
inc
inc
cmp
dec
jne
cmp
jg
test
repnz
or
inc
out
ja
fwait
push
mov
jbe
fisttp
mov
or
xchg
inc
(bad)
out
add
or
(bad)
call
and
xchg
inc
cld
iret
dec
xchg
cld
mov
pop
add
inc
cmps
je
adc
inc
enter
or
jno
jmp
sub
nop
and
cmp
fild
inc
xor
inc
ret
cmp
jge
sub
dec
inc
and
inc
inc
ins
or
je
cmp
cmp
sbb
xor
and
cmp
psubsb
test
push
push
lea
lea
lods
xchg
adc
cmp
inc
pop
pop
mov
js
(bad)
clc
lea
mov
push
aaa
mov
jo
push
icebp
ins
adc
mov
and
mov
pop
add
in
pop
lock
mov
cmp
je
call
ror
mov
push
fld
in
xlat
test
add
aaa
inc
dec
sbb
mov
mov
add
mov
(bad)
fnclex
cmp
add
xchg
inc
in
or
js
dec
push
xor
inc
jne
test
enter
or
jbe
mov
das
inc
push
ror
fst
and
mov
bound
pop
mov
xor
mov
(bad)
jmp
lea
mov
mov
lea
lea
mov
mov
lea
mov
inc
and
sub
inc
sub
(bad)
pop
push
xor
sbb
(bad)
in
clc
dec
cmp
mov
shl
sub
sar
jmp
push
ficom
jne
push
cmp
jne
cmp
je
mov
inc
hlt
fcomip
cmp
cmovb
stc
push
push
lea
cli
pop
mov
sub
push
inc
out
loopne
jp
inc
lds
shr
add
and
rol
hlt
pop
ja
popf
xor
mov
andnps
lods
dec
adc
(bad)
mov
xor
add
add
sbb
cld
push
mov
fmul
xchg
or
aas
adc
sar
jno
adc
mov
adc
adc
in
adc
test
adc
clc
add
push
sub
test
stc
mov
and
add
jno
syscall
dec
mov
pop
pop
pop
div
fidiv
sbb
jge
lock
mov
pop
test
(bad)
dec
mov
mov
movzx
push
push
push
push
ds
push
and
inc
and
jecxz
push
(bad)
or
pop
int
xor
mov
sti
sar
lea
iret
and
sysenter
mov
inc
and
mov
mov
mov
push
mov
je
call
jmp
adc
je
call
lea
push
sub
call
out
dec
and
or
mov
sub
adc
cmp
mov
(bad)
push
mov
cmp
jbe
sub
jmp
xor
mov
loop
jb
sub
push
dec
cmp
imul
cmps
pop
add
les
sub
call
adc
inc
fnstenv
jl
xor
nop
or
sbb
inc
cdq
push
push
inc
(bad)
mov
sbb
push
push
xor
je
xor
or
(bad)
aas
and
and
push
push
push
push
dec
cmps
mov
cmp
jmp
sbb
jp
pop
jo
ror
xchg
mov
outs
or
dec
sbb
stc
push
push
push
mov
add
and
push
bound
xchg
sbb
jmp
push
push
cdq
push
test
mov
xchg
cmp
addr16
mov
ja
adc
jne
add
jp
repnz
nop
xor
add
bnd
sbb
push
sbb
or
in
xchg
mov
pop
out
and
test
pop
out
adc
(bad)
cmp
cmps
push
cmp
jnp
mov
jl
mov
test
jg
jl
(bad)
mov
test
jne
push
pop
xor
test
jl
push
pop
ins
cli
(bad)
(bad)
jg
cmp
ja
mov
fld
mov
cdq
sub
mov
sbb
pusha
adc
(bad)
out
out
fild
add
cmp
jbe
add
fmul
std
(bad)
mov
test
jnp
fcomi
fxch
jbe
mov
fchs
jmp
xor
(bad)
(bad)
fmul
fcomi
or
sub
jmp
fxch
cmp
mov
sbb
stc
add
and
jae
fstp
fld
ja
and
push
fstp
jmp
fstp
fild
jbe
mov
(bad)
idiv
inc
inc
xor
adc
retf
jb
ret
xor
or
(bad)
neg
retf
adc
pop
sub
jbe
fnstcw
rcr
fiadd
jg
(bad)
mov
test
je
fchs
mov
push
push
fstp
push
movs
and
push
push
push
mov
push
aam
dec
inc
mov
call
sbb
cmps
mov
xor
mov
loopne
dec
sbb
add
fsubr
add
in
rcr
jle
sub
and
adc
scas
fwait
mov
(bad)
or
inc
and
sahf
add
push
and
dec
and
lock
mov
cmp
enter
mov
inc
mov
jge
cmp
jae
ror
ret
pushf
or
adc
fwait
inc
xor
sbb
fwait
dec
and
inc
fwait
cmp
es
cmp
sub
ror
sbb
xor
(bad)
(bad)
ss
sub
sbb
fwait
adc
and
adc
sub
ret
push
out
push
or
pop
push
or
icebp
xor
or
iret
pop
xor
icebp
push
mov
dec
adc
retf
jb
or
repnz
wrmsr
hlt
fadd
lea
sti
mov
cs
xchg
push
adc
dec
and
push
jmp
mov
or
mov
sub
push
lea
add
lea
inc
adc
adc
add
nop
mov
push
pop
pop
fiadd
and
mov
xor
lea
mov
adc
out
ss
mov
pop
ins
push
or
jmp
out
shl
mov
cmp
les
mov
(bad)
(bad)
sti
dec
je
mov
inc
test
pop
and
dec
adc
add
sub
jg
std
leave
je
mov
inc
div
add
and
test
je
cmp
out
aaa
cld
jmp
setne
cmp
pop
push
lea
ror
rcr
cmp
pop
or
mov
jmp
adc
popa
sub
pop
cmove
sbb
push
movzx
push
addr16
pop
(bad)
mov
add
stos
fs
call
mov
or
icebp
and
fisubr
icebp
(bad)
push
fldenv
mov
push
test
je
mov
cmp
je
cmp
jne
xor
inc
inc
or
mov
ret
(bad)
jg
mov
xor
and
cmp
ja
cmp
jne
ins
mov
add
cmp
jne
mov
push
jno
cld
inc
push
pop
push
and
xchg
or
mov
addr16
or
push
and
adc
cmp
and
mov
ja
scas
sbb
add
daa
mov
jbe
mov
xchg
call
push
dec
add
push
xchg
mov
adc
rcl
sti
push
jne
pop
(bad)
outs
inc
xor
ss
push
or
sbb
call
push
push
es
rcl
push
sub
sbb
out
ja
sbb
mov
pusha
mov
dec
xlat
fild
xor
xchg
push
adc
outs
ja
inc
sub
adc
sti
inc
inc
and
lea
gs
push
mov
push
push
lea
bsr
mov
dec
jg
adc
inc
out
xchg
adc
jne
cmp
sbb
mov
or
pusha
push
out
scas
jmp
enter
inc
push
mov
push
xor
outs
daa
push
push
cmovae
push
cmp
je
ja
(bad)
out
loop
test
jle
movsx
mov
sub
cmp
jae
cmps
and
fnstenv
inc
push
push
jg
inc
add
lock
mov
ja
xor
dec
mov
rcl
jl
jnp
and
lock
idiv
xchg
and
add
lahf
add
adc
hlt
call
jne
popf
mov
test
test
inc
add
mov
mov
push
fmul
xor
dec
jo
cmp
jmp
das
mov
xor
sbb
and
daa
xor
xor
mov
imul
push
std
mov
inc
out
xor
jmp
(bad)
ins
sub
and
std
fld
inc
and
jae
sub
std
(bad)
adc
add
push
push
push
movs
xor
push
and
jmp
or
push
cmp
addr16
ins
adc
jp
mov
fmul
out
aam
outs
push
push
mov
and
push
setne
and
jmp
or
push
mov
mov
test
add
inc
test
push
add
inc
mov
(bad)
(bad)
(bad)
dec
je
mov
inc
jmp
mov
mov
add
mov
and
(bad)
fnsave
hlt
cmp
mov
jmp
or
add
je
mov
jmp
test
dec
shl
not
and
or
mov
mov
sbb
idiv
dec
and
inc
or
push
and
or
mov
push
jb
shr
and
push
jge
cmp
sbb
cmp
cmps
inc
shr
fbstp
rcl
jmp
loopne
fsub
mov
movs
in
xchg
and
adc
cmp
dec
jmp
cmp
dec
imul
mov
fs
mov
mov
adc
mov
xor
or
and
fs
retf
sbb
push
sbb
push
leave
mov
gs
jmp
inc
call
movs
pusha
cmps
cmp
xor
out
adc
imul
scas
adc
add
mov
inc
or
cmp
dec
ins
jp
add
or
push
sti
and
outs
or
shl
jne
or
mov
jb
push
push
hlt
push
loop
pop
iret
call
mov
and
and
add
cmp
dec
xor
or
push
(bad)
mov
div
mov
movzx
lea
fwait
(bad)
jmp
add
out
pop
add
or
pop
movs
add
xor
push
cs
cmp
sub
mov
cmp
je
inc
jmp
jne
mov
push
mov
adc
call
add
jo
leave
fstp
xchg
test
jge
add
or
add
inc
adc
clc
or
sbb
sub
add
mov
cs
fmul
cld
and
dec
mov
add
push
add
xor
aad
aas
and
add
mov
jmp
cdq
clc
scas
sub
call
add
push
loopne
test
push
push
ficom
cmp
out
mov
jge
sub
aam
xchg
loopne
mov
lock
jne
pop
add
imul
sub
(bad)
and
pop
pop
cmp
je
mov
mov
imul
inc
inc
mov
call
sub
pop
pop
xchg
or
call
push
ja
push
int3
fiadd
push
hlt
push
mov
mov
(bad)
mov
mov
pop
mov
mov
push
pop
mov
dec
lock
ins
loop
add
stos
ja
add
xor
sbb
movzx
dec
js
add
push
je
cmps
mov
jl
ror
jne
jne
ret
hlt
inc
jne
mov
shl
push
cmp
fdivr
jmp
inc
gs
cld
inc
cld
mov
sti
push
frstor
dec
(bad)
xchg
cmp
jae
sub
sar
hlt
add
test
pusha
out
xor
add
add
xchg
dec
mov
or
cld
pop
sub
xchg
(bad)
call
xor
test
jg
jl
cmp
ja
xor
xor
jmp
sub
aaa
push
dec
ret
cmp
test
and
jg
xor
xchg
out
dec
jne
or
mov
ret
inc
dec
icebp
out
jg
test
jne
mov
push
xchg
xor
mov
scas
call
push
lds
push
pop
jmp
sub
ins
inc
cld
add
cmp
ins
popf
push
adc
ret
or
push
xor
push
and
and
outs
push
leave
push
push
mov
push
pop
mov
clc
and
mov
stc
jbe
lock
dec
fmul
hlt
popa
xchg
js
pop
jecxz
lea
and
mov
dec
sbb
add
or
mov
mov
cld
stos
cli
(bad)
xchg
dec
add
dec
xor
loope
stc
inc
je
sahf
inc
jo
arpl
jle
aad
je
push
outs
mov
test
jg
sbb
enter
or
clc
mov
push
pop
test
jl
(bad)
leave
je
mov
mov
mov
mov
push
mov
xchg
inc
jne
or
or
mov
push
clc
add
call
mov
test
je
mov
mov
test
jne
inc
movs
inc
jb
test
or
imul
and
mov
add
jmp
mov
shl
dec
sbb
add
or
or
push
(bad)
dec
jg
adc
dec
cmp
jne
push
jle
aam
push
pop
push
stc
daa
mov
add
cmp
push
push
test
pop
std
xchg
nop
es
cmp
ret
in
pop
push
mov
or
jp
lea
in
stos
mov
push
fs
sar
hlt
push
push
cmp
xchg
or
inc
mov
and
or
xor
pop
rep
into
leave
(bad)
(bad)
jg
sbb
or
adc
inc
or
add
mul
lea
push
ret
xchg
pop
sub
(bad)
(bad)
pusha
or
pop
sar
cmp
add
dec
neg
mov
dec
and
push
pop
xchg
mov
invd
or
bound
in
jle
mov
sbb
pop
pop
push
xchg
ret
enter
or
pop
lea
push
test
or
call
sub
mov
mov
inc
dec
jne
pop
pop
pop
ret
sub
xor
bound
and
test
icebp
inc
outs
scas
and
or
call
add
push
outs
xor
mov
add
jg
add
or
add
mov
dec
inc
mov
sbb
les
pop
and
add
or
lahf
lock
mov
push
dec
add
in
and
xchg
dec
mov
pop
add
cld
rcl
aaa
xor
pop
cld
mov
jge
add
mov
jmp
bound
inc
in
call
jge
icebp
imul
push
shl
add
clc
mov
dec
imul
loop
cmp
push
cmp
mov
leave
inc
popa
add
shl
sub
mov
push
push
fdiv
inc
neg
or
add
pop
jne
mov
push
adc
jo
std
push
fimul
arpl
cld
out
or
add
mov
push
push
popa
mov
mov
test
fmul
pusha
add
mov
jnp
mov
xchg
sub
adc
cmp
add
or
in
add
jbe
and
imul
sti
fldcw
sti
or
das
in
std
add
or
std
sub
push
pop
push
arpl
pop
push
jbe
push
inc
call
xor
lahf
inc
aas
inc
fs
nop
dec
xor
gs
inc
(bad)
or
mov
gs
push
fs
mov
xchg
dec
and
imul
enter
push
mov
enter
scas
loop
or
xor
retf
cmp
icebp
out
clc
addr16
inc
int3
mov
or
pop
pop
push
lea
mov
pop
jae
lea
push
add
or
pop
jmp
adc
mov
lds
test
cmp
jecxz
cld
jmp
mov
cmovae
test
jne
mov
sub
call
add
ret
adc
add
rol
sar
call
pushf
adc
enter
ror
dec
ins
dec
xchg
cmp
mov
lsl
mov
arpl
test
lea
push
sub
add
and
call
cs
push
jno
fiadd
mov
xor
out
(bad)
frstor
repnz
lods
loope
ror
pusha
mov
dec
clc
test
or
dec
rcl
test
or
test
gs
call
hlt
mov
add
mov
daa
xchg
push
call
call
cmp
gs
cmove
xchg
mov
adc
add
int3
jns
jne
and
xlat
or
dec
add
mov
rcr
and
ror
push
push
cs
shl
mov
jmp
punpcklbw
dec
add
jp
lods
mov
mov
xchg
sbb
jno
enter
mov
add
or
mov
sbb
cmp
iret
cmp
in
xchg
sbb
adc
xchg
adc
push
add
mov
push
mov
repnz
jge
mov
add
test
push
push
lea
clc
add
or
test
jmp
add
addr16
mov
add
sub
mov
fist
inc
and
mov
add
cmp
mov
jne
sbb
stc
je
jp
inc
jae
sub
(bad)
fiadd
inc
push
lea
pop
pop
in
sbb
jmp
push
push
movs
nop
or
cmp
xor
push
push
xor
and
mov
pop
mov
aam
jg
jg
in
and
stc
xor
mov
je
mov
push
lea
mov
std
inc
loopne
adc
xor
test
neg
inc
adc
rcl
push
mov
lea
add
jne
mov
(bad)
sti
jmp
mov
push
mov
cmp
ja
loop
jne
mov
shl
mov
pop
or
call
cmp
jae
mov
mov
lea
cmp
mov
scas
mov
jg
inc
in
cmovae
sub
mov
push
push
mov
add
call
add
mov
sub
mov
mov
add
jg
mov
mov
in
idiv
dec
mov
lods
enter
inc
mov
xor
add
add
mul
cwde
cmp
jmp
adc
pop
inc
pop
mov
aad
les
repnz
or
push
adc
ror
sti
add
inc
mov
mov
ror
add
(bad)
(bad)
mov
out
jge
cmp
cmovb
sub
mov
mov
cmp
cmovb
test
clc
mov
sub
mov
clc
(bad)
mov
cmp
ja
fsubr
jbe
sbb
mov
add
and
push
or
and
addr16
cmp
push
test
pop
je
cmp
jb
mov
or
inc
or
jne
add
nop
inc
pusha
clc
adc
or
(bad)
das
cmp
jb
mov
xor
push
pop
sbb
inc
xchg
push
sti
sar
aaa
jge
ror
shl
sub
mov
mov
jmp
mov
sti
addr16
push
adc
mov
push
cmp
add
add
cwde
push
and
sahf
ins
int
retf
ja
xor
cmp
addr16
or
adc
out
dec
out
push
adc
ret
fcmovu
aad
das
or
push
xor
(bad)
fcomp
jne
add
mov
or
push
inc
in
or
mov
ins
or
popa
add
sbb
aas
bound
dec
add
fcomi
or
add
add
(bad)
sbb
ror
pusha
add
sub
sbb
fiadd
and
mov
inc
into
inc
push
mov
popf
imul
les
sub
mov
xor
pop
sbb
ret
arpl
lods
jb
add
jg
pop
xor
jg
fist
jne
push
fldcw
push
hlt
dec
or
in
push
pop
mov
lea
mov
in
cli
fist
sahf
inc
and
add
pop
mov
ja
mov
mov
jmp
gs
mov
stc
push
dec
les
sbb
pop
lods
xchg
add
push
test
xor
idiv
das
imul
and
or
mov
inc
cmp
push
sbb
and
loop
mov
ja
pop
add
leave
push
mov
div
icebp
jne
adc
(bad)
mov
xor
or
mov
push
sar
inc
add
sbb
jmp
retf
mov
inc
ret
pop
es
sti
push
jg
add
cld
push
or
and
sar
jmp
push
cmp
jne
mov
add
dec
jne
xor
popa
movzx
adc
sbb
and
inc
jmp
pop
movs
sub
cmp
(bad)
cmp
push
push
mov
lea
push
mov
add
call
mov
and
sbb
pop
call
cmp
push
xor
retf
mov
and
jne
fistp
add
cmp
add
ja
xchg
and
aaa
out
bound
add
out
mov
js
(bad)
inc
jbe
loopne
or
or
add
add
js
or
mov
stos
or
add
sub
add
popa
push
mov
push
sbb
push
inc
add
xor
and
sbb
sbb
push
or
cmp
cmp
pusha
add
outs
sub
push
jb
or
jne
cmps
cmp
or
sub
data16
jle
add
add
popf
add
jo
cmp
push
jl
push
bound
jl
iret
ror
adc
pop
sub
(bad)
fild
cmp
je
push
push
int3
add
(bad)
pop
mov
and
and
xchg
inc
jmp
push
push
gs
popa
xchg
mov
je
(bad)
sub
shl
fld
mov
mov
adc
mov
sub
inc
pusha
daa
lea
xor
push
adc
jle
dec
push
fsub
adc
fmul
push
push
aaa
mov
jae
add
cld
cmp
loope
pop
cmp
inc
lds
pusha
in
dec
dec
or
sub
je
dec
je
dec
je
jnp
pusha
imul
jo
adc
push
jp
pop
iret
test
inc
push
mov
pop
or
outs
push
push
lea
mov
jae
(bad)
adc
mov
out
das
(bad)
idiv
cld
dec
lea
push
aam
inc
mov
ja
pusha
jnp
dec
out
xor
(bad)
push
rol
ffreep
add
pop
push
push
push
fstp
cmp
add
lea
ja
leave
and
lea
lea
add
jbe
fbld
enterw
pop
adc
int3
aam
jge
sar
and
fnstenv
pop
inc
imul
jbe
mov
pushf
inc
lea
add
xor
icebp
adc
mov
cdq
and
in
or
pop
sub
push
xor
in
lock
add
xor
test
je
mov
mov
call
fnsetpm(287
call
dec
push
mov
add
add
and
jae
pop
and
and
cmps
cmps
jmp
pop
loope
(bad)
data16
pop
push
call
or
add
push
call
fucomip
mov
mov
call
mov
(bad)
inc
lea
xor
mov
mov
mov
mov
pop
inc
fmul
xor
ja
dec
sub
xor
jl
pop
dec
lea
mov
push
or
dec
pop
mov
mov
mov
out
ja
loopne
mov
test
add
mov
mov
add
and
add
ins
adc
jl
ja
nop
or
(bad)
xchg
or
mov
dec
mov
enter
mov
mov
aaa
xchg
rcr
cmp
cld
mov
cli
or
mov
sbb
pop
lea
fidivr
sub
mov
in
mov
add
mov
adc
cmp
cmp
lea
lea
or
and
fdiv
add
dec
push
dec
pop
jge
fdiv
dec
das
lea
pop
xor
neg
push
fimul
dec
jl
dec
dec
add
add
shr
sub
mov
push
push
mov
fidiv
cmovo
sub
pop
xchg
loopne
scas
mov
lea
popf
push
xor
dec
add
pop
pop
test
mov
push
pop
and
and
lods
cmp
daa
add
pop
in
test
sbb
cmp
pop
les
or
sbb
out
dec
push
mov
lea
add
jle
mov
popf
xlat
addr16
pop
pop
jp
push
in
sbb
sbb
add
lods
mov
add
aam
fcom
ret
cmp
(bad)
je
pop
out
(bad)
arpl
xor
mov
lea
dec
fadd
xchg
or
adc
push
push
mov
lea
mov
sub
mov
add
pop
pop
(bad)
clc
(bad)
mov
cmp
lea
cmovae
push
push
push
(bad)
js
push
fmul
jne
jl
add
bound
jnp
lea
(bad)
fisttp
gs
icebp
push
pop
push
push
aaa
mov
in
(bad)
dec
inc
or
out
push
iret
fcmovu
outs
clc
aaa
outs
push
lea
adc
daa
mov
lea
add
xchg
gs
pop
xor
test
jns
and
jbe
lods
jo
arpl
mov
add
inc
sbb
add
xchg
aas
inc
fcom
enter
adc
std
std
mov
mov
push
sbb
jmp
cwde
lods
xchg
or
jecxz
shl
dec
test
push
xor
mov
or
std
test
jns
lea
aam
out
neg
mov
out
pop
out
adc
scas
or
fist
out
je
and
or
sbb
int3
sbb
jae
jl
jmp
les
inc
push
jp
jecxz
cmp
mov
jne
lods
loopne
fbstp
dec
and
aas
sub
fild
add
rol
inc
cmp
jo
cwde
mov
sbb
and
fwait
jo
mov
lea
and
cmp
jge
push
adc
add
ins
fs
clc
add
mov
hlt
mov
lods
(bad)
add
int3
lea
and
pop
(bad)
jp
sbb
lahf
xlat
je
xchg
cmp
add
dec
icebp
dec
icebp
push
and
js
xchg
mov
neg
adc
and
xor
les
inc
mov
dec
push
gs
jno
dec
add
pop
pop
dec
and
sbb
xor
mov
dec
cmp
xchg
and
xor
inc
and
inc
and
sar
lea
push
sub
add
jmp
push
out
dec
sbb
adc
push
xor
sbb
and
adc
(bad)
lea
xchg
sub
cmp
inc
addr16
call
push
or
sub
outs
xor
pop
mov
mov
call
pop
ins
jmp
add
pusha
add
or
mov
mov
sbb
xor
out
std
in
loopne
jnp
jbe
xor
test
in
daa
sbb
sbb
ins
mov
xchg
sub
es
repnz
push
inc
jb
not
je
call
jle
inc
or
je
imul
dec
mov
clc
add
sbb
cld
xor
or
add
test
mov
(bad)
dec
cmp
add
sbb
push
jne
jl
add
cmp
or
jl
jo
lock
and
add
jno
and
inc
push
adc
adc
loopne
or
pop
(bad)
or
push
(bad)
aad
aas
or
or
ret
outs
popf
or
ret
je
push
and
lds
inc
aaa
(bad)
and
or
inc
xchg
es
cmp
and
mov
les
cld
sub
ins
add
std
add
ins
mov
aam
jne
jle
cmp
and
jb
shl
inc
or
icebp
xor
mov
dec
pop
push
jmp
(bad)
mov
and
mov
mov
xor
mov
pop
mov
mov
pop
mov
adc
test
je
or
mov
ffreep
dec
icebp
and
cmp
cmp
or
out
and
sub
jle
fiadd
or
or
out
xor
jge
das
jmp
mov
xchg
outs
push
xor
add
pop
mov
enter
rol
add
cwde
push
push
mov
iret
xchg
je
mov
loope
mov
sbb
ror
test
add
js
test
in
sub
popa
aad
sti
add
clc
retf
or
fs
cmp
mov
imul
xor
inc
out
imul
and
jmp
jmp
xor
in
add
push
test
push
pop
popa
out
mov
shl
sbb
adc
add
add
hlt
xchg
sbb
push
jns
cli
(bad)
cmp
(bad)
xor
sar
inc
aam
and
call
sbb
sbb
or
hlt
xchg
xchg
add
push
lock
sahf
adc
ret
fcomp
inc
push
sub
mov
pop
push
mov
inc
xchg
shl
sub
fst
sbb
push
fistp
xlat
xor
sub
cmovae
mov
and
xchg
stos
push
ret
loope
lds
out
xchg
ins
(bad)
dec
dec
pop
or
arpl
push
out
sbb
mov
repz
pushf
jmp
xor
(bad)
call
inc
push
je
xor
pushf
cmp
and
xor
adc
fwait
mov
jge
xor
and
jne
les
call
mov
xor
aam
push
push
xchg
into
sub
imul
sbb
sbb
in
dec
xchg
loopne
rol
add
add
pushf
arpl
mov
pop
repnz
je
sti
jmp
fld
add
sbb
sbb
mov
rcr
outs
sbb
hlt
push
mov
sbb
xchg
hlt
push
les
pop
cmp
or
aad
cmp
fld
jl
ficomp
or
iret
cmp
xchg
and
mov
aas
clc
ja
push
mov
xchg
xor
stc
(bad)
out
loopne
inc
xchg
mov
mov
mov
push
mov
mov
mov
mov
outs
(bad)
and
cmc
or
test
je
aaa
in
mov
test
cmps
test
jne
and
cmp
adc
xchg
sar
add
scas
jg
cmp
dec
fdiv
mov
mov
sbb
add
sbb
vmwrite
cmp
sbb
adc
adc
xchg
fld
cld
push
sub
out
jmp
and
test
je
cmp
je
sbb
push
mov
push
adc
adc
xor
and
xor
xor
pop
and
dec
sub
rol
aaa
cmp
jbe
mov
push
stos
rcr
das
retf
mov
int3
je
je
sub
test
ja
pop
inc
shl
jnp
mov
push
and
out
push
sti
clc
lea
jle
arpl
cmp
push
mov
xor
shr
jno
test
imul
mul
or
xchg
dec
sbb
fwait
clc
sbb
pop
add
jae
test
aam
(bad)
call
je
mov
test
jne
mov
jne
push
lea
(bad)
inc
mov
pop
lea
sti
adc
jae
arpl
or
outs
js
cmp
mov
outs
mov
adc
mov
sti
jg
mov
out
shr
add
add
outs
jo
mov
pop
sbb
and
cmp
btc
xchg
adc
mov
or
dec
cmp
sbb
enter
inc
sbb
data16
in
add
xchg
or
mov
and
cmps
dec
in
mov
sbb
add
loope
cmp
add
pushf
or
aas
mov
cmp
mov
add
stc
adc
rcl
rol
sbb
sub
pmaxub
fld
sar
push
fcom
jne
loope
mov
nop
jle
mov
and
mov
js
jae
inc
and
jnp
(bad)
js
aam
sbb
test
int
dec
push
or
test
scas
mov
push
das
push
ds
(bad)
and
jecxz
test
mov
test
mov
mov
popf
xlat
in
jo
enter
dec
icebp
aam
dec
ja
adc
aam
add
shl
pop
out
jae
sub
or
and
add
dec
jecxz
sbb
or
pop
or
and
into
cmp
fcomp
jle
cmp
dec
lahf
fs
test
xchg
sbb
mov
mov
fisttp
mov
sbb
push
add
cmp
jp
cmp
ret
in
cmp
test
ret
sti
pop
sti
xor
mov
sbb
test
adc
shl
clc
and
push
in
out
xchg
and
xor
rcl
push
sbb
stos
mov
sub
clc
xor
push
xor
je
jb
xor
xchg
dec
mov
xlat
mov
(bad)
scas
(bad)
mov
mov
or
mov
aas
add
pop
cmp
jp
add
mov
cmp
ror
out
push
inc
and
les
je
imul
inc
mov
je
mov
jg
imul
jmp
imul
(bad)
pusha
call
push
push
push
sbb
mov
mov
loopne
aaa
les
and
(bad)
mov
outs
push
es
test
dec
lea
xor
mov
rcl
loop
add
movs
sbb
cmp
stos
sbb
out
dec
(bad)
cwde
mov
jne
push
push
add
cli
sub
mov
or
and
push
lock
mov
lds
mov
jecxz
mov
(bad)
(bad)
mov
lods
push
and
inc
out
shl
mov
mov
int3
mov
sbb
aaa
mov
mov
mov
or
jbe
inc
xchg
xlat
mov
mov
arpl
ror
inc
out
push
fisub
popf
xor
sar
jg
xor
je
outs
ja
inc
fs
mov
cmp
mov
adc
xor
movs
add
into
sar
movs
imul
ret
and
jb
jg
jns
mov
inc
cmp
stos
jl
or
add
add
retf
ss
mov
cdq
loope
ins
inc
mov
push
int3
loope
add
xor
add
call
sub
inc
adc
and
rol
add
arpl
add
mov
and
mov
push
(bad)
adc
cmps
jns
push
and
shl
sbb
push
and
or
cmp
push
pop
movs
add
add
sbb
or
sbb
jmp
mov
shl
and
mov
and
movs
jmp
mov
addr16
adc
add
out
fild
jo
cmp
jo
test
test
add
mov
cmps
dec
cmp
inc
aad
jp
xchg
and
shl
mov
pusha
bound
pushf
les
mov
inc
ret
cmp
cmc
fs
enter
retf
mov
xor
jg
es
dec
or
xor
sbb
inc
mov
jns
inc
ficomp
sbb
or
or
jae
mov
(bad)
and
xchg
ss
jns
pusha
(bad)
adc
inc
adc
inc
das
je
inc
xchg
jle
or
xchg
jg
add
inc
and
adc
cli
inc
nop
pushf
jmp
xor
cmp
jns
sbb
out
mov
and
cmc
(bad)
hlt
cmp
jo
add
loopne
ja
adc
shl
dec
(bad)
cmp
test
xor
iret
jo
(bad)
jg
xor
inc
je
cmp
mov
mov
push
pop
daa
lock
mov
add
sub
inc
shl
test
or
adc
add
dec
or
inc
adc
add
icebp
sub
cmp
loopne
jmp
or
cli
out
out
xchg
add
ficomp
jno
xor
push
sub
les
cmp
add
bound
pop
jmp
fs
adc
and
mov
ja
cmp
and
lock
xchg
lock
lods
and
pop
and
xor
inc
rol
adc
add
inc
inc
push
inc
aaa
in
lds
sub
xchg
dec
lock
xchg
push
(bad)
push
add
mov
data16
(bad)
dec
(bad)
jo
xchg
fiadd
sub
and
rdpmc
aam
dec
fimul
jle
xchg
adc
clc
jmp
push
lea
movs
cwde
push
aam
inc
cmp
mov
inc
and
push
mov
mov
mov
lea
cmp
cmp
sbb
xor
ret
(bad)
mov
dec
mov
push
push
rcl
(bad)
mov
cmp
jne
mov
cmp
je
or
idiv
rol
dec
push
push
inc
add
jmp
dec
pushf
js
mov
lods
pop
ss
adc
push
push
add
sub
dec
fwait
sahf
jae
lds
cmp
pop
fistp
and
popf
jecxz
arpl
je
pop
mov
ins
add
fisubr
pop
lock
pop
and
(bad)
enter
add
maskmovq
daa
mov
jp
push
dec
mov
sub
lods
imul
adc
push
push
push
mov
ss
push
cmp
add
and
add
loope
sub
test
out
pusha
int3
leave
dec
into
pushf
loope
add
sete
pop
and
je
neg
stos
cmp
neg
popf
xchg
cmp
(bad)
push
add
in
sub
cmp
pushf
and
and
in
jp
js
sbb
test
cdq
xchg
ss
cmps
inc
sbb
xchg
add
xchg
mov
sbb
jb
and
into
add
into
sub
dec
cwde
loopne
sbb
(bad)
mov
push
(bad)
shr
xor
gs
(bad)
fcom
push
xor
add
xor
fs
fsubr
sar
leave
sub
cs
jae
jbe
aaa
sbb
fiadd
sbb
ja
mov
or
jo
or
inc
add
push
push
cdq
pop
test
dec
jo
fmul
mov
test
mov
(bad)
pop
pop
add
xlat
out
lock
jo
jo
push
stc
inc
xor
inc
xor
or
dec
or
dec
cmp
add
je
mov
add
arpl
(bad)
and
ror
pop
or
mov
(bad)
mov
setns
stc
test
imul
ror
jl
pushf
and
lea
or
fisub
or
cmps
cmps
mov
pop
xchg
jp
xchg
xchg
cli
mov
mov
mov
adc
jmp
dec
push
push
(bad)
cmp
cmp
push
push
cmp
adc
sub
inc
(bad)
dec
sti
pop
or
inc
lds
sub
push
pop
mov
dec
add
jne
dec
jae
push
or
sub
popf
fs
or
cmp
inc
movs
adc
ds
mov
xor
jo
popf
bound
ret
mov
hlt
bswap
mov
cli
mov
hlt
or
and
test
je
pop
test
sti
clc
sub
push
jo
add
ja
sub
add
add
or
es
pop
pop
or
xor
and
inc
lds
xor
enter
pop
mov
push
je
jge
sbb
jno
addr16
xchg
arpl
cwde
or
call
add
add
add
ja
sbb
cmp
in
sbb
pop
cmp
push
push
not
mov
aas
inc
and
je
dec
add
ret
pop
pop
jo
inc
call
pusha
dec
add
pop
daa
gs
lock
aas
neg
sbb
inc
mov
xchg
add
push
pop
add
pushf
sbb
mov
out
pop
std
sub
(bad)
inc
mov
into
and
xchg
gs
add
pop
inc
popa
lods
sbb
inc
and
add
push
adc
push
retf
retf
and
popa
add
and
add
push
sbb
xor
push
lods
cmp
lock
add
adc
fistp
int
ror
(bad)
adc
push
cmp
ficomp
dec
xor
cmp
fsub
mov
pushf
push
cld
sbb
or
inc
ins
mov
loope
jbe
int
or
push
push
mov
lahf
in
jo
cmc
jno
or
pop
add
pop
and
jmp
cli
loope
out
(bad)
mov
std
sbb
mov
aam
cmp
adc
cdq
lds
jg
jmp
xor
push
lea
jo
sbb
add
int
push
sbb
xor
push
ret
movs
movs
cmp
aas
mov
iret
popf
xor
push
(bad)
dec
xor
cmp
add
mov
jnp
loopne
mov
out
ins
push
push
pusha
and
inc
add
test
inc
jmp
push
mov
add
push
inc
add
jge
rcr
push
mov
or
pop
inc
pop
sbb
mov
mov
sub
pop
pop
fmul
outs
or
pop
add
xor
add
cmp
jne
add
mov
fld
dec
push
add
mov
push
add
imul
call
out
push
xchg
xchg
mov
add
test
je
inc
rol
add
mov
icebp
fdivr
jo
dec
dec
icebp
mov
lea
push
(bad)
push
loopne
ds
jecxz
shl
lea
mov
adc
mov
and
daa
and
je
push
pop
aas
in
rol
imul
add
aaa
mov
add
ins
push
push
pop
rcr
jbe
push
mov
scas
inc
lahf
mov
add
fld
or
dec
ins
hlt
sti
lock
call
sbb
call
sbb
pop
cmp
je
not
fdiv
add
jae
int3
retf
out
ins
nop
cmp
xchg
mov
test
jns
and
int
adc
xchg
mov
push
mov
test
les
jo
or
je
jbe
adc
and
fisttp
sbb
int
in
dec
lea
lds
push
inc
adc
inc
fisubr
sub
or
jo
pusha
push
add
or
push
imul
sub
or
sub
xchg
sbb
sub
in
dec
inc
sub
sub
fist
add
int3
push
mov
clc
cwde
loope
and
sub
lea
mov
push
ret
sti
call
in
jo
cmp
test
push
mov
sbb
xor
out
push
sbb
arpl
sbb
enter
arpl
add
addr16
xlat
inc
adc
add
xchg
and
push
iret
arpl
or
adc
lods
xor
pusha
daa
cmp
fbld
test
xchg
cdq
comiss
sub
mov
das
ins
pop
mov
das
xchg
cmp
lds
in
pusha
mov
in
std
ja
test
jae
sub
cwde
mov
in
add
xchg
das
dec
and
jno
mov
les
xlat
inc
mov
jl
sbb
push
and
cmp
pusha
inc
add
mov
cld
sbb
mov
int3
cmp
fwait
inc
pop
and
ret
and
les
inc
adc
jae
pop
xor
and
arpl
(bad)
dec
and
sub
sub
test
or
ret
add
jp
cmp
or
sub
cwde
mov
dec
ror
mov
xor
xlat
mov
sub
(bad)
cmp
pop
and
sar
add
mov
cmp
int3
sub
icebp
pop
int3
dec
xchg
cmp
mov
jnp
lahf
push
call
sbb
iret
push
out
sub
pusha
iret
mov
repnz
and
clc
sbb
mov
pop
rol
(bad)
call
push
clc
push
mov
lea
push
lea
mov
adc
inc
or
les
ret
pop
cld
iret
push
lea
mov
ja
es
imul
scas
movs
aas
in
push
lds
add
add
or
sbb
add
clc
sub
mov
jle
hlt
clc
mov
ror
jmp
or
jge
mov
jle
aas
sub
fadd
loopne
(bad)
out
push
sbb
leave
jne
mov
sub
cdq
idiv
clc
test
jne
add
jnp
cmp
test
js
and
sub
loopne
pop
cmp
jge
sbb
add
sbb
inc
loopne
add
cmp
or
dec
jmp
sub
mov
dec
inc
xchg
cld
push
es
pop
cmp
jl
push
push
inc
push
fsubr
and
mov
pop
out
and
aaa
adc
mov
inc
dec
enter
jl
jbe
loopne
les
shr
cmp
fs
push
lea
push
jg
es
aaa
lea
movs
dec
inc
lea
mov
test
sub
(bad)
push
test
bound
loopne
lea
and
and
or
push
sub
push
dec
or
lea
inc
xor
inc
xchg
ds
stos
enter
jge
add
ror
xchg
je
ins
cdq
les
jo
pop
add
add
dec
enter
fucomip
mov
sub
sub
fs
add
mov
hlt
test
mov
push
or
aaa
pop
push
adc
pop
sub
mov
add
add
or
adc
push
mov
(bad)
sub
add
je
adc
dec
push
xor
test
ins
ja
cld
sub
je
test
mov
inc
add
add
inc
cmp
jge
mov
sub
pop
jno
lock
xor
sbb
ret
mov
sub
adc
dec
adc
lock
push
push
push
in
popa
adc
cmp
scas
or
push
and
pushf
sbb
enter
mov
pushf
adc
ss
repnz
dec
inc
aas
ret
adc
push
mov
or
out
sbb
mov
shl
inc
sar
clc
and
adc
dec
lods
mov
jmp
and
lea
out
jae
or
push
lea
adc
les
and
inc
enter
lea
(bad)
push
pop
out
inc
jo
cdq
sbb
loopne
bound
xchg
mov
xchg
adc
call
bound
lods
xor
xor
inc
or
or
inc
adc
(bad)
(bad)
dec
shr
pop
dec
loopne
jbe
push
fs
and
adc
adc
mov
xchg
adc
xchg
jp
pop
rol
je
lock
mov
adc
sub
lea
mov
xchg
adc
rcl
and
add
ins
mov
fs
ins
stc
icebp
sub
lock
imul
cmps
mov
push
and
lock
and
inc
add
mov
push
add
fwait
jp
and
and
loop
adc
imul
int3
lods
mov
push
fisttp
xchg
add
inc
xor
ror
and
mov
cli
mov
icebp
clc
push
loopne
aas
mov
pop
xor
mov
enter
test
je
enter
pop
jge
pop
sbb
dec
icebp
dec
lods
loopne
retf
push
sbb
arpl
pop
sbb
lahf
in
sub
(bad)
jecxz
test
jnp
sbb
stos
pop
pop
push
adc
and
push
and
pushf
sahf
ret
jo
je
push
lea
jne
and
xor
jbe
cmp
sbb
test
aaa
adc
add
cmp
lock
fistp
and
cmp
xor
and
jl
xor
push
sub
adc
push
out
push
(bad)
retf
add
lods
addr16
cmp
cli
add
mov
mul
xchg
test
je
ss
ja
add
cdq
hlt
or
adc
xchg
lock
sbb
loopne
sahf
xchg
in
aam
or
test
je
xor
rcr
jae
sbb
mov
jb
mov
mov
scas
pushf
ins
cmp
loopne
leave
loop
jle
xchg
je
or
mov
and
jp
out
push
xchg
add
add
mov
addr16
popa
pop
out
xchg
mov
or
test
test
inc
inc
ds
adc
jbe
or
sbb
push
rcl
shl
popa
test
popa
inc
sbb
jne
cs
push
dec
jb
and
mov
rol
bound
(bad)
cmp
je
arpl
pop
lods
push
sbb
mov
sar
push
fstp
add
mov
test
je
mov
dec
dec
add
fs
pop
aad
or
add
add
or
mov
pusha
add
xor
jae
in
sub
sbb
jns
add
mov
add
retf
cli
loop
and
stos
xor
dec
and
push
mov
xor
cwde
xchg
or
adc
lea
mov
jge
outs
and
pop
mov
xor
test
pusha
mov
pop
pop
setne
add
aam
pop
idiv
and
sub
lea
rcr
mov
jnp
daa
loope
sbb
out
ret
or
(bad)
mov
or
lds
jbe
sub
push
mov
add
mov
mov
inc
jb
test
pop
sahf
in
js
adc
sbb
inc
dec
push
mov
pop
jbe
out
rol
(bad)
sbb
mov
push
pop
popa
pop
push
loopne
inc
or
xor
cmp
inc
add
jge
or
jg
mov
pop
pop
jb
mov
cmp
and
jl
add
or
push
scas
add
mov
push
push
lods
pushf
mov
pop
call
scas
or
and
inc
mov
scas
fbstp
inc
or
ror
mov
(bad)
fild
sub
or
lock
rep
xchg
mov
add
xor
xor
test
je
mov
cmp
jne
add
add
sbb
jne
push
sbb
or
test
lea
inc
sete
ins
sub
inc
cmc
sub
jecxz
stos
call
adc
(bad)
loopne
std
add
int
sbb
je
add
adc
je
adc
dec
stos
push
mov
cmp
jne
inc
or
rol
fwait
test
or
inc
and
jne
sbb
popf
add
dec
sbb
je
inc
pushf
xchg
stos
xor
sbb
sbb
push
and
inc
jp
add
pushf
(bad)
aad
hlt
inc
adc
or
push
push
or
sbb
shl
sbb
push
xor
xor
js
sub
aad
jb
jo
bound
fcomp
inc
and
mov
stos
inc
bound
hlt
ins
dec
jp
rol
and
je
pop
jo
pushf
ret
cdq
in
dec
add
dec
sti
lds
or
push
mov
jge
push
mov
mov
cmp
fnstcw
dec
mov
mov
cs
inc
inc
ds
mov
cdq
lock
(bad)
jg
push
push
push
pop
dec
in
mov
cmp
je
mov
mov
lea
mov
(bad)
jbe
(bad)
push
mov
out
gs
push
sub
cdq
sbb
outs
push
mov
dec
sub
add
pop
sub
push
sahf
cmp
pop
mov
add
sti
or
or
cmp
in
sub
sbb
or
pop
inc
and
jae
iret
mov
push
dec
sub
mov
cli
ja
rcl
push
dec
push
and
push
mov
push
jp
test
sub
sbb
dec
xchg
xor
inc
and
lea
lds
add
adc
jl
sub
aaa
cmp
adc
sti
ja
je
pop
jle
jle
push
lea
outs
test
xor
mov
and
xor
stc
cmp
in
adc
add
and
or
dec
jne
push
or
mov
jle
fwait
call
dec
cmovae
addr16
sbb
mov
test
ja
and
xor
movs
retf
sbb
or
push
add
jmp
sub
inc
dec
test
dec
pop
lds
xchg
dec
and
xchg
sbb
aad
or
push
pop
dec
enter
or
sar
mov
cmp
je
(bad)
gs
arpl
push
and
hlt
jg
push
sub
lea
mov
addr16
test
mov
mov
or
pusha
adc
ja
jl
jecxz
pop
push
push
dec
sbb
int3
neg
fisubr
jb
mov
test
and
adc
inc
cdq
push
fcmovnu
add
int3
call
test
push
rcl
(bad)
movs
or
daa
push
mov
or
(bad)
out
xor
and
add
cmp
push
or
adc
inc
mov
jbe
sbb
jb
mov
xor
or
stc
rcr
loop
mov
shl
inc
ficomp
fiadd
and
or
mov
(bad)
push
dec
(bad)
sbb
imul
push
or
or
cmp
fs
movlps
adc
test
xchg
xlat
inc
es
adc
mov
idiv
je
dec
cmp
je
jnp
push
push
add
not
mov
ds
lea
clc
mov
sar
mov
dec
nop
sub
xor
inc
cmp
je
add
imul
inc
ss
ret
and
adc
ret
jb
jbe
xchg
cld
push
shl
aas
mov
mov
mov
sbb
je
movs
add
lea
sbb
hlt
cmps
xor
add
mov
shl
or
and
jnp
(bad)
and
dec
ja
inc
adc
jno
adc
and
retf
xor
cmps
sbb
(bad)
out
add
xor
inc
cmp
jl
push
mov
jo
inc
es
jle
test
adc
je
and
cmp
ret
add
test
es
mov
loopne
mov
dec
push
ins
xor
sbb
add
add
mov
test
out
sahf
sbb
jmp
add
or
xor
lea
adc
ror
test
ins
mov
dec
mov
push
(bad)
push
add
pop
cmp
jbe
lahf
jo
jne
xor
push
shr
loopne
jbe
mov
sbb
stos
push
push
sbb
mov
and
fist
pushf
and
aaa
or
imul
test
sub
mov
out
(bad)
jp
call
cld
scas
pop
xor
scas
(bad)
fsubr
jge
xchg
movzx
test
mov
bound
add
inc
fsubr
aas
adc
sbb
add
cmp
jb
jmp
mov
rol
add
cwde
add
mov
cmp
jl
gs
xor
cmp
mov
sub
out
loop
and
pop
xor
or
jp
dec
or
test
push
and
mov
out
mov
out
js
(bad)
test
add
pushf
or
sahf
ss
sbb
leave
xor
cmp
xor
les
sti
and
sbb
push
mov
stos
imul
push
push
lock
push
ja
mov
aas
cld
dec
je
or
jne
pop
enter
jnp
or
int3
pop
jnp
or
or
bound
loopne
push
push
aaa
pop
loop
addr16
add
mov
lods
push
(bad)
in
std
jp
push
out
cdq
cmp
sbb
jge
loopne
mov
or
test
adc
jge
xchg
sbb
je
and
inc
and
mov
aad
and
ret
jnp
arpl
push
push
pop
mov
shr
adc
jl
jo
movzx
push
loope
sub
pop
aam
ins
and
sbb
lea
adc
and
je
loopne
(bad)
push
or
xor
ja
(bad)
jmp
and
popa
(bad)
and
sbb
js
xchg
lea
push
sti
loope
int
mov
test
cmp
popa
pop
cmp
mov
iret
xor
hlt
mov
popa
jl
jl
outs
xor
inc
adc
xchg
adc
repz
mul
cmp
cld
or
add
ins
neg
ja
sbb
or
cmp
test
sbb
xchg
dec
xor
imul
push
pop
ja
loope
sti
mov
fadd
or
add
jle
clc
add
add
or
xchg
mov
sbb
lods
xchg
inc
dec
add
mov
add
add
bound
xchg
adc
in
add
or
push
cwde
xchg
xchg
mov
add
push
repnz
or
ss
fisub
mov
shr
push
mov
adc
pop
push
push
adc
pop
sbb
dec
das
lods
pop
jl
jecxz
lahf
nop
pop
repnz
inc
jl
test
and
test
adc
pusha
enter
out
xchg
sbb
sbb
and
cdq
push
xor
das
js
and
ror
mov
push
out
mov
mov
data16
mov
push
mov
popf
pop
cld
out
leave
inc
jns
push
rol
fcom
nop
and
pop
inc
dec
pop
sbb
outs
rcr
push
inc
dec
mov
cwde
adc
xchg
or
hlt
enter
cmps
add
add
rcl
xchg
mov
inc
or
int3
xor
pop
ret
sbb
mov
rol
push
inc
movs
adc
cmp
or
es
dec
dec
adc
ret
lea
aad
ret
nop
adc
or
aad
in
lea
adc
xchg
xor
retf
xor
cs
xchg
or
add
call
mov
jne
cmp
jne
test
je
add
mov
jne
fild
and
push
cmp
add
sbb
cs
inc
add
shl
stos
or
call
enter
adc
sbb
xchg
push
xor
jne
add
or
outs
cmp
push
dec
ja
add
fst
add
pushf
dec
jns
inc
add
out
adc
sbb
inc
xchg
dec
mov
hlt
mov
aad
cmovs
cmp
adc
shl
push
push
pop
cwde
mov
mov
or
cmp
cmp
in
scas
adc
je
jne
or
sbb
cmp
pop
je
cmp
shl
push
(bad)
test
sbb
add
or
jp
nop
add
repnz
or
or
dec
push
xchg
dec
adc
mov
mov
lock
and
inc
mov
pusha
adc
mov
add
add
sar
das
sub
push
push
mov
mov
push
mov
fist
mov
lea
dec
fwait
add
push
sub
int3
adc
stc
out
push
jl
sub
inc
inc
sti
fist
icebp
mov
or
inc
push
mov
(bad)
(bad)
push
rcl
ror
cld
and
adc
cmp
add
out
add
add
leave
xor
les
test
lods
jmp
je
jae
dec
ds
fist
sbb
sub
call
inc
mov
push
jmp
sbb
and
dec
xor
jle
mov
mov
imul
cmp
dec
and
mov
push
dec
jmp
xor
pop
jle
int
jl
stos
pop
les
mov
inc
mov
xor
(bad)
push
jmp
mov
push
fmul
fsub
sub
fild
add
jmp
scas
in
inc
js
push
rcl
add
loop
call
pop
jge
ret
mov
add
jl
sbb
mov
sbb
clc
add
xor
fdivr
add
inc
pop
imul
push
mov
mov
cmp
mov
test
je
push
inc
repnz
out
(bad)
push
add
je
add
lea
cmove
out
mov
xchg
cmp
add
call
inc
and
cmp
pop
mov
(bad)
pushf
popa
in
popa
add
pop
or
ret
ret
mov
pop
jns
jnp
lds
outs
or
mov
fdiv
pop
xor
xchg
xchg
aaa
pop
dec
inc
pushf
loope
daa
inc
imul
jb
sub
pop
and
mov
clc
int3
and
xor
push
jo
mov
mov
fiadd
call
adc
and
das
or
imul
out
adc
test
sbb
call
xchg
adc
aas
xor
int3
cmp
xor
jo
inc
and
push
pusha
mov
not
ror
mov
jb
leave
xchg
loopne
mov
nop
test
test
je
fnstenv
je
xchg
mov
mov
pop
test
call
push
push
cmps
mov
jb
push
or
ins
or
and
cmp
pop
or
(bad)
fldenv
add
xor
add
dec
and
lahf
cmp
mov
xchg
jo
jnp
adc
adc
rol
and
adc
or
mov
fldenv
push
add
sub
push
xchg
shl
or
in
and
(bad)
fisub
add
pop
xor
retf
or
adc
fstp
or
stos
or
mov
push
adc
rcr
mov
or
cmp
inc
jne
inc
aaa
sub
ss
nop
aaa
sub
inc
add
dec
mov
std
add
int3
jge
push
je
mov
in
push
add
push
cmp
push
sbb
ret
add
in
jne
iret
jge
mov
adc
adc
mov
pop
push
ret
dec
cmp
sbb
fbstp
mov
stos
cmp
and
fs
push
mov
mov
and
sbb
clc
sub
in
test
jle
add
dec
ret
xchg
js
add
pop
add
and
sub
xor
js
jo
cmp
(bad)
xchg
in
mov
les
push
sbb
in
or
or
ins
push
in
cld
les
call
cmp
xor
lea
mov
dec
inc
int3
push
adc
add
movs
sub
in
dec
inc
call
lea
push
push
cmc
push
lea
and
out
cld
ret
dec
nop
add
daa
jnp
sbb
cld
jmp
adc
mov
lods
pop
pop
xor
jo
ss
push
fs
sbb
sar
jne
jne
adc
mov
fadd
pop
out
fsub
loopne
and
mov
and
jge
jl
sub
(bad)
mov
mov
adc
push
adc
int3
adc
dec
retf
or
push
cli
mov
push
push
test
add
cmp
or
neg
jne
stos
xchg
lock
and
push
jge
popa
cwde
pop
loopne
mov
adc
mov
ins
adc
hlt
inc
and
pop
mov
and
adc
xchg
add
pop
xchg
fdiv
jle
mov
xchg
mov
loopne
js
loopne
out
cld
scas
sti
adc
mov
sbb
pop
sbb
add
sbb
test
call
(bad)
pusha
cmp
push
xor
push
sbb
sbb
sub
inc
jne
fwait
rcl
jmp
mov
sbb
mov
fs
mov
jo
inc
cmp
inc
pcmpgtd
fiadd
cli
in
push
sbb
push
neg
xchg
pop
or
scas
and
sbb
mov
add
test
call
xchg
jne
inc
adc
cmp
or
sub
adc
add
push
call
push
jl
dec
add
sahf
cdq
cmp
test
(bad)
jmp
mov
and
jmp
(bad)
fisub
sbb
enter
push
add
mov
loopne
scas
push
neg
xor
xor
fcom
data16
add
add
mov
(bad)
and
test
mov
dec
mov
(bad)
sub
daa
xor
mov
rcr
(bad)
sub
dec
xor
adc
sub
in
ret
add
jecxz
test
adc
push
out
pusha
add
inc
fs
sub
mov
and
and
pop
pop
int3
dec
and
dec
loopne
push
dec
add
(bad)
pop
cmps
sub
add
xor
gs
pusha
test
mov
jne
push
icebp
pop
jo
(bad)
test
push
mov
and
rcl
and
mov
add
pusha
cmps
retf
sbb
add
cmps
adc
xor
xchg
pop
xchg
adc
add
cmc
cli
xchg
adc
adc
add
nop
in
push
pop
test
je
xchg
movs
add
and
(bad)
out
mov
ins
sbb
jb
cmp
jl
adc
nop
and
aas
jne
repz
mov
movsx
test
cmp
mov
(bad)
jno
inc
jg
push
cli
or
push
push
adc
dec
add
pop
mov
and
mov
adc
xor
loope
out
mov
rcr
sub
dec
mov
mov
or
mov
in
sbb
inc
push
mov
nop
pop
push
push
dec
or
shl
sti
adc
sahf
xchg
jne
cmc
fiadd
jne
mov
clc
sub
mov
push
jno
push
or
push
xor
jecxz
adc
mov
sub
mov
ficom
test
add
jecxz
push
add
iret
call
xchg
lea
ret
jo
inc
(bad)
shl
fisubr
mov
js
fs
jbe
neg
add
test
lds
mov
mov
inc
aad
dec
sub
xchg
pushf
and
or
inc
mov
xor
fsub
pop
pop
xor
mov
or
fs
add
mov
pushf
and
adc
pop
push
sbb
sahf
jo
in
popw
test
and
jnp
rol
cs
mov
loope
pop
pop
xchg
ins
or
mov
jle
adc
mov
cmp
pop
pop
jl
ins
fdiv
add
mov
push
and
sar
adc
add
mov
sub
stos
push
mov
mov
jnp
and
push
int3
lea
push
scas
mov
mov
mov
mov
pop
adc
sahf
stos
sbb
(bad)
and
(bad)
call
fs
mov
pushf
mov
ds
outs
setne
xor
sbb
fmul
xchg
rol
pusha
ins
cmp
mov
leave
add
pop
mov
pop
and
leave
sub
sub
or
or
xchg
loope
retf
inc
add
test
inc
je
out
loope
in
pop
add
dec
test
add
loope
fiadd
js
mov
inc
loop
mov
add
js
ror
xor
and
xchg
jmp
push
shl
adc
push
adc
push
cmp
std
sub
push
lea
arpl
div
or
dec
jne
cwde
sub
psraw
dec
rol
adc
fmul
xor
jno
pop
ins
and
ja
sbb
adc
sub
mov
dec
adc
xchg
push
and
dec
push
and
hlt
push
test
cld
das
jp
aas
or
fstp
mov
mul
repnz
inc
jo
jne
and
shl
or
pop
push
rcl
sub
in
lods
jns
xor
mov
rol
jne
and
jl
sbb
and
xchg
sti
sbb
lods
sub
and
mov
adc
mov
xor
(bad)
ds
mov
jb
xor
push
outs
mov
and
nop
mov
cmp
mov
stc
mov
xlat
aad
cmp
sbb
mov
fst
adc
push
jo
rol
test
mov
adc
cmp
add
mov
sbb
and
cmp
push
push
cmps
mov
sbb
retf
add
js
sbb
sub
push
or
xor
clc
jg
mov
or
xor
jmp
mov
jo
add
adc
retf
add
adc
xlat
les
dec
(bad)
repnz
aam
dec
xchg
adc
das
rol
(bad)
fild
test
(bad)
in
out
into
and
mov
test
fwait
adc
and
dec
in
mov
adc
sbb
adc
dec
sbb
std
sbb
bound
pop
push
jle
xchg
test
inc
ret
vunpckhps
add
push
push
push
push
outs
dec
mov
adc
mov
je
xor
push
cs
pop
inc
rcl
pusha
and
scas
outs
push
add
push
test
xchg
and
pop
cmp
adc
call
add
add
sbb
daa
mov
rcr
pop
adc
ror
shr
cmp
mov
test
jne
cmp
js
and
jl
cmp
or
dec
jne
sti
pop
and
add
ficomp
(bad)
ds
jmp
push
sbb
mov
add
and
xchg
add
hlt
sbb
mov
lock
push
lea
int
rol
push
not
pop
mov
push
xor
mov
add
sbb
int3
dec
inc
aam
mov
sub
pop
xchg
sbb
std
push
outs
ret
adc
jge
sbb
adc
pop
add
inc
gs
cmps
(bad)
lea
jl
test
push
into
rol
adc
paddusb
adc
adc
add
xor
xor
std
mov
cmp
je
add
push
(bad)
dec
inc
xor
xchg
push
call
mov
neg
sbb
and
ficom
jle
push
mov
or
or
and
adc
out
shl
sbb
xsha1
cmps
push
or
inc
ret
test
add
xlat
inc
push
xlat
xchg
push
xor
add
jg
mov
cmp
xlat
sbb
test
repz
(bad)
xor
(bad)
and
adc
rol
pop
add
cmp
test
rol
jno
xor
jge
or
js
or
int
mov
lods
je
mov
icebp
mov
mov
push
add
dec
add
inc
arpl
dec
and
fadd
lea
stos
fdivr
div
fld
push
lds
or
dec
add
jg
adc
pop
mov
push
adc
cmp
jle
int3
xor
psubusb
std
mov
or
lea
add
or
sub
or
nop
fmul
fld
inc
lock
inc
and
sub
(bad)
jne
push
xchg
sbb
add
and
ja
inc
xchg
aaa
cs
sub
sbb
aas
cs
push
call
mov
std
pop
dec
dec
test
pop
mov
sbb
int3
lock
lahf
sub
and
int3
addr16
adc
xor
es
xchg
ret
cmp
sub
sar
add
cs
sub
add
je
adc
test
adc
xchg
push
or
jge
imul
dec
adc
cs
jo
mov
mov
mov
add
and
xor
add
add
pushf
or
jl
sub
sbb
sbb
xchg
movs
push
or
pop
adc
cmp
dec
push
loop
mov
dec
jnp
sbb
es
sub
mov
into
icebp
push
or
neg
(bad)
js
and
jae
or
and
and
imul
cmp
fadd
ja
add
enter
add
inc
aaa
mov
and
rcr
cmp
jo
loop
jne
mov
cs
sub
inc
js
cmp
or
addr16
mov
pop
aam
loope
mov
stos
add
mov
cmp
addr16
out
cmps
add
std
add
test
dec
dec
clc
jbe
fcom
add
js
inc
fadd
sbb
xchg
mov
data16
mov
mov
adc
push
fwait
push
sbb
int3
out
dec
push
dec
popf
jo
pop
pop
inc
in
adc
jae
bound
pop
pop
cmp
js
out
retf
imul
mov
dec
xchg
add
aaa
xchg
and
push
mov
fsub
loope
push
mov
mov
test
mov
jo
hlt
xor
push
mov
push
xchg
and
inc
mov
fldcw
pusha
jbe
test
dec
das
xor
add
mov
sbb
ja
call
dec
popa
xor
adc
sub
adc
mov
pushf
imul
cwde
or
clc
sub
and
or
inc
add
xchg
or
shl
inc
add
dec
retf
fs
out
outs
mov
mov
xor
sub
pop
pop
iret
sub
xor
and
cmc
mov
je
lea
mov
mov
lea
clc
xlat
(bad)
out
or
inc
or
add
sbb
js
mov
and
je
or
inc
test
push
lea
loope
adc
test
pop
adc
sub
pop
add
stos
pusha
or
push
sub
xchg
and
cs
mov
dec
add
out
call
add
jmp
movzx
push
je
jo
mov
cmp
out
xchg
add
ins
push
inc
dec
push
push
xor
mov
sub
add
push
xchg
dec
jmp
sbb
in
pop
and
fdiv
add
add
out
and
jne
mov
add
loopne
int3
xor
cmp
loopne
xor
or
or
or
ss
push
loope
or
add
jmp
xor
push
lea
loope
jo
jne
shl
ss
fistp
cmp
les
mov
and
call
(bad)
jae
fist
or
je
dec
aad
xor
cmc
fist
cmc
add
(bad)
cmc
mov
mov
add
sbb
or
inc
cmp
adc
fsubr
push
sub
jnp
mov
xor
jbe
mov
xchg
cmp
mov
clc
je
mov
or
mov
xor
and
les
inc
or
call
mov
mov
xor
push
jo
push
cmp
gs
enter
mov
pop
inc
push
xor
sub
(bad)
xor
fstp
push
add
xchg
push
mov
push
xchg
sbb
or
xchg
mov
imul
add
add
cwde
or
mov
add
add
addr16
mov
cmp
mov
test
call
call
adc
mov
cmp
push
push
rcl
sbb
aaa
push
sub
jo
xchg
int
and
sbb
rcr
push
pusha
call
jmp
push
jbe
xchg
ins
adc
push
in
sar
mov
jb
add
cmc
jb
add
imul
adc
mov
and
mov
jg
repnz
jmp
jno
out
cmp
push
sbb
pop
pop
jb
shl
inc
push
cmps
add
push
add
ss
mov
cmp
fcom
jne
call
or
add
mov
xor
adc
pop
in
jae
ficomp
mov
pop
dec
push
add
cmp
mov
mov
mul
adc
add
mov
jo
retf
cmp
jne
inc
ja
xlat
or
add
mov
or
xor
add
mov
aas
inc
mov
(bad)
(bad)
(bad)
jg
(bad)
cdq
call
shl
push
mov
test
xor
push
or
inc
inc
xchg
sahf
push
aam
dec
mov
xchg
and
outs
add
push
pop
cmps
mov
inc
pop
mov
push
mov
gs
pusha
dec
dec
push
add
in
stos
dec
inc
xchg
adc
adc
aas
inc
lds
test
sub
aad
add
xor
enter
mov
loopne
xlat
jnp
sub
cld
scas
iret
inc
add
ins
lock
je
xor
and
pop
and
xchg
inc
retf
mov
outs
cmp
sbb
push
mov
or
jl
mov
fs
or
cmp
add
mov
and
or
sahf
adc
adc
addr16
mov
sub
sub
inc
test
adc
int3
dec
std
adc
adc
cmp
cwde
sub
clc
call
mov
je
jp
adc
jae
xchg
(bad)
fdiv
das
inc
out
or
add
or
into
xor
add
inc
xchg
xchg
mov
imul
lea
and
add
add
mov
pop
mov
iret
addr16
mov
cmp
test
add
test
xchg
les
lea
retf
jno
pushf
or
adc
xor
inc
sbb
cwde
mov
(bad)
adc
add
jne
adc
mov
loope
or
in
sub
jae
or
push
cmp
add
adc
lds
sub
dec
jg
and
popf
dec
cs
ret
or
cmp
jne
add
sbb
jmp
cld
sbb
popf
sub
inc
fs
adc
out
pusha
inc
mov
inc
dec
or
div
fisttp
pop
loopne
dec
jb
lock
icebp
xor
inc
mov
xchg
mov
loopne
jecxz
mov
jle
test
jmp
xor
(bad)
or
inc
test
add
mov
xchg
dec
xor
dec
test
je
mov
add
fwait
or
push
lods
pop
loopne
js
adc
pop
push
or
stos
push
out
cmps
ffree
push
push
pop
dec
xor
mov
xchg
(bad)
mov
push
(bad)
pop
push
sbb
push
mov
fdivr
hlt
ret
test
loope
cmp
fs
test
push
inc
add
sbb
or
sub
popa
(bad)
in
jmp
in
iret
call
xor
mov
inc
lahf
mov
push
lahf
mov
mov
mov
xchg
popa
pusha
mov
lahf
mov
inc
xchg
or
das
push
enter
jl
mov
rcl
mov
test
and
icebp
add
push
push
add
jmp
sbb
push
daa
and
mov
inc
mov
test
outs
ja
jl
ret
outs
int3
sbb
cs
test
mov
movs
lahf
adc
jne
lea
sbb
popa
mov
loopne
or
xor
adc
shr
cmovne
sar
lahf
popa
inc
retf
push
in
lods
jmp
xor
dec
jbe
inc
sbb
test
and
jne
adc
out
nop
std
retf
adc
jl
shr
cwde
je
inc
loop
icebp
gs
jl
pop
add
je
push
jmp
je
push
pop
arpl
cmps
(bad)
and
dec
icebp
je
int3
mov
es
or
and
xor
xchg
setns
iret
cmp
jnp
cmp
popa
(bad)
pop
or
jg
push
fs
xchg
dec
cmp
lea
sub
inc
aam
mov
dec
xchg
jmp
call
jne
cmp
sbb
cmp
sbb
xchg
mov
shr
jbe
call
loopne
test
lods
out
inc
push
ret
ret
lea
sub
mov
xor
ins
mov
neg
xchg
or
adc
push
pop
add
push
add
or
jo
in
sbb
cs
mov
mov
and
push
dec
adc
jle
xchg
cmp
or
adc
jnp
pop
lock
fst
jge
mov
xchg
imul
sar
inc
jge
pusha
mov
jmp
(bad)
or
repnz
lods
rol
pop
push
push
add
fild
hlt
mov
sbb
mov
sbb
pop
inc
mov
jnp
out
xor
nop
pop
sbb
movs
sbb
sbb
imul
push
ss
cmp
lods
outs
mov
jbe
mov
push
es
cmp
sti
mov
cs
jmp
sbb
test
lahf
adc
push
fcomp
or
pushf
jmp
xor
sti
mov
jmp
push
mov
adc
mov
add
dec
adc
add
mul
aas
add
inc
pop
cmp
sbb
adc
ja
pop
mov
push
lea
mov
inc
mov
bound
into
mov
adc
jne
js
cmp
call
in
or
push
loope
or
and
out
sub
sub
lock
stos
(bad)
ret
inc
jl
and
xor
das
(bad)
xchg
fistp
xchg
cs
jg
jmp
jae
add
ret
icebp
add
push
and
xchg
jecxz
(bad)
lock
cmp
add
in
sub
cmp
dec
mov
(bad)
adc
mov
ret
(bad)
jmp
dec
or
sbb
add
mov
mov
and
int3
lea
or
adc
mov
pmaxsw
mov
ficomp
xchg
cli
jle
inc
outs
jp
push
jne
xor
and
mov
mov
dec
xor
mov
mov
mov
lea
pop
jnp
jmp
stos
cmps
fidiv
inc
xor
sub
neg
cwde
out
add
lea
out
aas
in
jge
push
or
clc
cmp
dec
nop
add
add
lea
jg
psubq
sbb
popa
lea
push
xor
inc
loop
xor
push
add
dec
mov
cmp
je
xchg
in
or
push
mov
(bad)
and
cmps
(bad)
(bad)
frstor
or
retf
jmp
mov
mov
cmp
fstp
mov
daa
mov
xchg
lds
add
imul
outs
and
cwde
inc
mov
xor
ins
pop
loopne
add
enter
inc
and
inc
(bad)
test
jmp
push
pop
retf
add
int3
sbb
jg
or
mov
or
cmp
data16
repz
mov
add
jne
inc
xor
arpl
addr16
jne
xchg
push
dec
mov
push
xchg
dec
lock
add
int3
cmovae
adc
les
icebp
or
sbb
fdivp
xor
cmp
dec
cmp
adc
fldenv
inc
xor
push
or
or
stos
dec
cmp
xor
out
or
push
add
sub
cmp
bound
lods
add
test
psubusb
inc
or
test
inc
push
jmp
cmp
sbb
pop
push
loopne
jnp
into
or
mov
outs
mov
stos
sbb
bound
pop
sbb
adc
scas
xor
add
clc
xchg
sbb
cmp
sbb
mov
loopne
(bad)
neg
nop
or
push
pushf
jo
sub
icebp
xchg
xchg
add
dec
pop
mov
mov
in
sar
pop
iret
mov
jl
and
add
mov
and
pop
lds
es
add
retf
in
add
jne
cmp
jne
cmp
inc
rcr
div
shr
or
std
xchg
sub
fisttp
adc
and
sub
jnp
lea
push
push
ror
mov
push
mov
push
add
and
adc
mov
mov
shr
push
ja
in
mov
push
add
push
adc
lods
aad
xor
mov
lea
jl
add
fwait
xchg
lods
or
hlt
(bad)
push
jb
lahf
xor
js
adc
call
add
repz
je
lds
dec
xor
in
and
and
mov
mov
adc
je
aam
std
out
outs
test
cmps
add
mov
mov
xor
mov
inc
mov
adc
test
(bad)
mov
fwait
adc
es
and
fsubr
imul
rol
sub
les
xor
inc
adc
jg
sahf
daa
rcr
push
pop
sub
shl
dec
in
xchg
push
loopne
imul
or
cmp
push
lea
inc
lods
add
jmp
or
push
mov
cmovae
mov
mov
test
or
or
loopne
shr
scas
pop
pushf
mov
mov
fisttp
pop
test
push
add
(bad)
jmp
das
or
cmp
push
push
into
jno
mov
jl
ror
adc
mov
xor
or
mov
add
dec
xor
jne
rol
dec
and
dec
and
test
or
sub
data16
mov
arpl
or
inc
clc
scas
cmp
jne
mov
fcom
movs
mov
add
int3
add
jo
pop
adc
(bad)
jmp
push
inc
lea
ret
sahf
or
je
stc
das
cmp
inc
movs
sti
add
add
mov
int3
adc
(bad)
shl
pop
inc
and
popa
lea
int
lea
int
sbb
dec
dec
mov
(bad)
call
stos
pop
inc
clc
(bad)
(bad)
push
mov
or
pop
xor
mov
xor
mov
rep
lea
mov
xchg
mov
pop
call
add
push
push
mov
pop
mov
cld
pusha
adc
sbb
xor
sbb
cld
iret
dec
or
sub
cmp
pop
xor
xor
fild
jbe
pop
lock
push
add
sbb
lea
pop
inc
mov
dec
or
or
ror
mov
mov
sar
xor
lea
push
imul
test
sysexit
lods
mov
jne
mov
loopne
(bad)
cmp
je
int
sub
(bad)
(bad)
call
jne
test
ret
and
scas
dec
call
aam
mov
or
lea
mov
pop
push
int3
pop
ret
fsubr
mov
dec
mov
sub
pop
push
push
push
add
xchg
ins
inc
lds
test
test
mov
xchg
xor
arpl
cmp
and
push
pop
add
outs
mov
test
jmp
mov
mov
sbb
imul
mov
cdq
and
ret
(bad)
(bad)
mov
mov
push
add
test
xor
fs
ds
ja
xor
loopne
mov
sbb
(bad)
or
sbb
add
fs
retf
sbb
pop
sar
(bad)
inc
fsub
cld
inc
sar
cmp
lea
xor
mov
cmps
add
leave
mov
add
shl
xchg
retf
fsubr
rol
mov
add
and
xor
cmp
mov
cli
mov
push
ror
sbb
test
jle
lea
add
mov
push
jecxz
mov
cmp
add
loop
sbb
sbb
jle
and
sbb
lea
xor
icebp
aad
(bad)
call
pop
sub
and
xor
clc
cmp
cmc
ins
inc
xchg
test
adc
dec
mov
or
xor
cmp
cmp
lds
adc
and
add
xchg
and
adc
dec
and
ret
push
lea
mov
loopne
ja
(bad)
fmul
inc
xchg
jo
sbb
xor
enter
outs
ins
outs
pop
into
sbb
cmp
pusha
loope
add
test
pop
jae
in
jnp
lea
lea
jp
push
jp
inc
jmp
mov
das
push
jl
mov
adc
loopne
jg
or
and
out
test
and
adc
or
adc
icebp
jle
jle
mov
mov
test
ret
mov
dec
mov
cs
adc
stos
les
pop
sbb
xor
and
mov
cld
shl
je
xlat
loop
and
xlat
cmp
dec
lea
mov
test
inc
xor
pop
push
and
adc
dec
daa
push
mov
inc
cld
push
ja
jne
jmp
dec
add
jnp
lock
icebp
add
fistp
jge
push
push
fcom
add
push
mov
mov
pop
mov
test
je
lods
inc
mov
test
fst
lea
pop
int3
adc
lea
push
push
(bad)
pop
mov
in
mul
nop
mov
sar
cmp
cmp
jb
and
inc
sbb
jbe
dec
sbb
jns
(bad)
lea
jmp
cmp
jge
push
test
je
out
mov
adc
je
and
aaa
mov
push
call
jp
jl
(bad)
mov
push
inc
xchg
sbb
hlt
or
mov
inc
add
adc
nop
sub
popa
adc
rol
jbe
cld
cmp
test
int
test
test
mov
mov
jmp
(bad)
xor
(bad)
mov
mov
adc
mov
fnsave
call
push
(bad)
aas
xor
jno
movs
ja
inc
push
dec
gs
sbb
sti
adc
lea
add
add
dec
add
push
lea
out
pop
dec
mov
mov
cmps
aam
xchg
add
sub
mov
sar
xor
and
fs
adc
hlt
pusha
mov
dec
pop
xor
xor
add
mov
lea
nop
mov
cli
ror
push
lods
push
push
sbb
dec
xor
jne
dec
add
sbb
pop
inc
cld
or
lea
test
je
add
daa
and
inc
add
add
push
dec
sbb
hlt
(bad)
cmp
je
add
push
mov
sti
sub
pusha
inc
in
mov
or
je
call
adc
add
mul
push
push
inc
das
jmp
or
jg
jg
inc
mov
cmp
push
sub
ror
or
add
add
add
mov
mov
sbb
repz
adc
pop
dec
inc
inc
(bad)
sbb
pop
and
mov
add
add
push
sbb
je
mov
mov
inc
mov
jb
push
pushf
or
rol
mov
loop
mov
rol
into
jne
inc
mov
pop
adc
pop
mov
dec
fwait
adc
mov
cli
sbb
inc
and
rcr
cld
sbb
dec
jne
push
and
add
lock
sbb
dec
xchg
sub
or
add
push
or
adc
jbe
lods
or
dec
push
loope
sub
dec
sti
mov
or
push
xor
sbb
dec
adc
mov
inc
adc
sbb
je
adc
and
or
or
enter
push
add
inc
inc
inc
sub
and
and
add
add
mov
(bad)
out
sbb
and
mov
push
sbb
sub
out
or
and
ja
dec
mov
loop
dec
mov
push
inc
cmp
repnz
mov
xchg
push
or
and
pushf
adc
push
adc
mov
je
mov
mov
jle
push
push
std
inc
push
mov
mov
mov
loope
mov
dec
mov
(bad)
add
lea
es
inc
sub
or
push
pop
dec
add
mov
or
(bad)
mul
add
or
test
je
or
ja
and
mov
popa
fimul
or
mov
rol
jbe
inc
mov
shl
push
rol
inc
sub
cmp
fisttp
int3
add
add
cmc
push
mov
clc
int
push
test
je
xor
inc
iret
add
out
out
mov
sti
call
(bad)
(bad)
(bad)
mov
je
mov
cmp
je
mov
cmp
jae
mov
mov
add
(bad)
(bad)
jg
mov
sub
or
mov
test
je
mov
mov
lea
cmp
jae
sti
xor
cli
dec
mov
mov
add
or
and
in
sar
aaa
mov
ja
xor
sub
add
mov
mov
mov
mov
adc
push
mov
addr16
je
xchg
jge
mov
in
inc
inc
jne
or
and
inc
jne
adc
sar
xor
mov
mov
sub
add
clc
fisttp
sub
mov
add
add
jg
and
and
std
sub
add
mov
mov
stos
and
pusha
jp
ds
pusha
mov
jmp
adc
call
sub
add
sub
inc
adc
adc
es
xchg
and
sub
adc
ja
in
push
cmp
aas
add
cmp
je
test
jne
mov
inc
daa
sbb
or
or
mov
mov
jmp
xor
mov
jmp
call
(bad)
push
adc
mov
mov
mov
neg
push
mov
mov
add
mov
movzx
jmp
test
call
clc
add
sub
je
cmp
ja
cmp
jbe
cmp
(bad)
mov
mov
sub
mov
inc
push
in
(bad)
lods
movzx
pop
or
and
or
fs
adc
sub
mov
inc
pop
adc
mov
inc
mov
sbb
xchg
retf
push
lds
dec
mov
mov
scas
and
js
inc
into
inc
sub
dec
cld
add
sub
retf
pusha
aaa
mov
add
outs
je
adc
out
mov
push
mov
ret
inc
and
dec
sbb
fisttp
ret
mov
leave
inc
push
aaa
je
mov
outs
enter
and
adc
mov
sti
sub
jg
out
jne
push
xor
sub
mov
les
xor
and
and
or
add
add
cmp
call
shl
sbb
and
sbb
inc
inc
jg
inc
sbb
add
jg
adc
dec
in
push
adc
pop
push
adc
adc
fld
dec
js
je
mov
clc
iret
aad
xor
div
ins
and
lea
inc
sub
and
cmp
jg
(bad)
call
jge
mov
cmp
jae
cmp
ja
sub
push
cwde
sbb
clc
(bad)
fstp
std
cmp
jne
push
mov
dec
xchg
and
leave
je
imul
add
add
in
add
pop
jmp
and
ja
push
push
and
add
cmps
outs
mov
xor
and
sbb
jbe
jnp
pop
pop
and
inc
dec
sbb
push
jl
out
loopne
push
inc
(bad)
icebp
cmp
je
inc
dec
das
mov
idiv
mov
cdq
inc
or
mov
mov
pusha
loope
bound
dec
push
outs
(bad)
cwde
sub
clc
jae
and
sar
cmp
add
inc
or
sub
dec
push
mov
cmp
add
push
jmp
sbb
inc
sbb
cli
fist
or
add
or
sti
jne
adc
nop
mov
inc
adc
dec
add
or
mov
ret
lea
ds
mov
cmp
jbe
cmp
ja
sub
cmp
jne
sar
push
push
call
add
jmp
adc
je
mov
inc
movs
add
pop
leave
(bad)
aaa
cmc
adc
sbb
aaa
mov
mov
or
dec
mov
(bad)
in
aaa
mov
adc
cmp
ja
push
arpl
cwde
cmp
xor
into
mov
mov
push
push
inc
sbb
pop
adc
mov
mov
pop
mov
add
add
cmp
jne
lds
cmp
push
jns
jno
add
add
xchg
inc
or
rol
inc
jge
sub
or
dec
or
ds
aad
mov
pop
cmp
push
xlat
lock
mov
mov
xchg
ja
xor
shl
loop
test
add
inc
or
ss
inc
xor
or
and
popa
ret
jne
mov
lea
ins
test
inc
std
mov
mov
adc
jbe
pop
ror
jae
shl
mov
loope
mov
add
mov
or
imul
inc
pop
adc
fwait
or
cmp
mov
inc
mov
out
inc
push
clc
or
or
ror
mov
(bad)
mov
push
add
push
pop
adc
jne
and
adc
lock
push
and
inc
jl
sbb
or
cmp
cmp
stos
jmp
adc
sar
jbe
pop
les
daa
jo
dec
push
les
loope
add
and
push
sub
push
mov
sbb
jb
sub
jmp
aam
daa
pop
and
inc
or
add
add
aad
daa
fnstenv
pop
pop
xchg
cmp
(bad)
out
(bad)
mov
jne
cmp
ja
mov
loope
mov
pop
adc
retf
jae
sub
push
std
(bad)
fnstcw
pop
adc
xor
inc
sub
add
enter
jg
mov
sbb
mov
add
ret
mov
movzx
cmp
test
dec
jne
xor
repnz
inc
mov
popf
jge
jmp
jb
mov
jmp
dec
or
stc
sub
lea
add
jmp
push
les
icebp
aas
add
dec
pop
adc
cwde
push
inc
sbb
cmp
test
rcl
jne
call
xor
cmovb
hlt
mov
push
fisttp
add
enter
mov
mov
sub
pop
fdivr
cmp
mov
ins
pop
stc
push
(bad)
or
ins
xor
pop
push
push
jmp
push
or
push
aad
jo
mov
push
add
sar
dec
xor
mov
sbb
and
loopne
ret
jmp
push
mov
mov
add
rcr
jae
sub
mov
mov
stos
stos
stos
or
stc
add
sub
lea
sbb
cdq
pop
idiv
mov
sbb
call
shr
sub
cmp
jae
xor
jmp
mov
cmovb
mov
enter
ret
push
xchg
sub
add
pushf
pop
or
push
iret
(bad)
xor
add
mov
pop
aad
adc
pop
cmp
inc
call
mov
mov
and
(bad)
dec
sar
jmp
jae
sub
push
mov
sar
shufps
jb
sub
add
cmps
sti
push
sar
mov
shr
sub
cmp
pop
mov
cmovb
push
ret
sbb
clc
mov
xchg
cmp
pop
sar
sbb
jg
fild
sub
pop
sar
mov
sub
adc
sub
inc
sar
push
repnz
pop
clc
cmp
pop
pop
stos
pop
adc
adc
jnp
sub
sbb
jno
jb
sbb
mov
sbb
sbb
sub
mov
mov
xor
jp
shl
int3
and
adc
push
iret
push
inc
fwait
push
sbb
push
and
ds
or
add
scas
stos
or
in
pop
daa
and
push
iret
cmp
mov
mov
inc
and
xor
rcr
shr
push
rcl
int3
cmp
xor
or
dec
aaa
adc
rep
inc
ror
and
dec
cwde
lea
cmp
sbb
add
dec
sub
xor
hlt
mov
jmp
enter
fs
xor
inc
jmp
mov
inc
fs
add
mov
mov
and
push
xchg
push
or
push
mov
sub
push
inc
into
ja
mov
push
cwde
test
sbb
sub
jp
and
xor
sbb
and
add
into
dec
add
inc
mov
sub
or
mov
ret
mov
aam
add
into
loopne
add
adc
xlat
sub
add
fsubr
retf
add
dec
dec
loopne
push
add
daa
loopne
xchg
add
(bad)
jmp
aam
mov
jbe
test
je
lea
push
push
inc
cli
push
gs
stos
jo
inc
or
inc
shr
lea
mov
sbb
or
and
cmp
arpl
xchg
mov
dec
or
shr
out
sub
lahf
push
mov
push
mov
dec
add
push
add
sbb
pop
ja
cmp
dec
cld
pop
mov
push
mov
bnd
pop
push
pop
je
jg
add
mov
push
(bad)
mov
ins
pop
mov
pop
stc
or
add
sub
xor
jmp
add
ja
dec
arpl
mov
bound
push
sbb
push
adc
jb
mov
cmp
ror
push
test
cmp
or
xor
test
add
add
sti
or
or
jnp
dec
or
imul
cmp
repz
cs
push
push
ds
neg
mov
adc
cmp
push
jnp
inc
enter
add
fild
push
sbb
das
add
and
adc
les
mov
and
stos
bound
adc
out
cwde
mov
push
push
push
sar
and
mov
test
je
and
cmp
je
aaa
(bad)
jle
or
outs
push
mov
pop
mov
lea
mov
sti
sti
dec
mov
mov
mov
add
mov
pop
add
mov
je
push
fisttp
iret
mov
out
data16
and
retf
xchg
sub
push
shl
xchg
cmp
rcl
jg
sbb
push
pop
or
in
icebp
mov
add
fmul
inc
hlt
push
pop
jmp
lods
clc
(bad)
call
sbb
fadd
clc
cmp
jne
mov
mov
mov
sub
fist
push
sti
aam
sbb
je
push
pop
and
lods
ficom
mov
imul
or
mov
pop
mov
add
jo
inc
cld
sbb
add
mov
or
add
xor
adc
ror
je
and
inc
or
push
iret
jne
or
add
mov
push
loopne
push
inc
push
pop
sub
jl
push
mov
cmp
je
mov
test
je
sub
(bad)
fild
clc
add
add
cmp
jne
loopne
jge
pop
cld
ror
popa
mov
aaa
adc
sti
sbb
fidiv
sub
mov
mov
nop
in
out
out
lea
int
inc
hlt
or
inc
into
ret
mov
add
scas
jge
mov
loop
fcomip
jg
and
mov
arpl
shl
shl
pop
mov
ficomp
(bad)
dec
dec
cld
add
add
cmp
xor
sub
(bad)
mov
push
fdivr
inc
clc
add
jmp
loopne
out
add
mov
mov
add
pop
mov
(bad)
ret
loope
pop
mov
fstp
mov
call
sbb
adc
jbe
xchg
dec
js
sbb
inc
fnstsw
sbb
push
sbb
jb
push
sbb
loopne
add
xor
inc
cmp
xchg
ja
imul
scas
pop
daa
daa
les
add
cmp
adc
add
adc
or
ret
or
cmc
mov
jmp
je
mov
lea
add
out
mov
sub
adc
jl
mov
mov
aas
or
dec
and
mov
mov
push
call
mov
cmp
dec
and
xor
ror
ja
ret
and
inc
and
sbb
lock
cmp
jo
mov
push
adc
mov
cmp
out
dec
mov
fisttp
mov
ins
sub
retf
push
inc
out
cmp
add
fnstenv
mov
in
adc
inc
jg
in
adc
jmp
cmp
xor
or
mov
fucomi
inc
inc
(bad)
cmp
adc
push
inc
inc
inc
mov
xor
xor
add
push
jmp
adc
nop
push
jmp
jmp
xor
push
rcl
(bad)
les
popa
dec
adc
jmp
aas
sub
add
ins
adc
push
adc
inc
inc
xchg
jbe
jl
add
adc
or
sahf
mov
and
add
and
icebp
add
mov
pusha
movs
or
retf
dec
dec
inc
inc
push
cmp
pop
cmp
jo
sbb
bound
pop
mov
pop
cmps
aas
add
jle
sbb
scas
sub
adc
xor
(bad)
or
jb
mov
scas
adc
xor
jno
adc
mov
ret
lock
dec
movs
adc
push
push
jmp
inc
xchg
xor
mov
ins
daa
inc
inc
add
ins
inc
push
out
jnp
lock
test
leave
test
leave
cmp
push
hlt
sbb
or
jge
out
mov
(bad)
cld
scas
xor
mov
and
inc
mov
lods
push
adc
repz
ret
adc
movzx
mov
dec
inc
dec
jne
push
mov
arpl
jnp
push
(bad)
popf
and
inc
loopne
push
jbe
xchg
push
push
mov
push
and
mov
cmp
(bad)
(bad)
adc
mov
mov
fdivr
outs
fsubr
and
pop
inc
adc
mov
ret
inc
pushf
aam
ins
(bad)
(bad)
(bad)
(bad)
mov
push
or
adc
sbb
and
inc
sub
out
(bad)
dec
xor
test
xor
sbb
sbb
jle
mov
fwait
inc
or
jle
cwde
sub
sbb
pop
cmp
sub
push
xchg
(bad)
(bad)
inc
ja
shl
push
test
or
xchg
xchg
scas
push
pop
dec
adc
ja
xchg
mov
cmp
push
sbb
(bad)
stos
inc
fs
aas
ins
neg
cmp
mov
pop
je
jo
(bad)
pop
(bad)
push
mov
mov
mov
inc
clc
arpl
mov
add
push
add
add
mov
jmp
adc
adc
mov
jmp
mov
mov
mov
int3
std
dec
mov
push
or
xor
add
sti
jg
sub
push
or
jmp
mov
mov
inc
dec
adc
push
push
push
ss
test
add
jg
mov
or
sub
mov
push
adc
or
push
add
mov
push
mov
push
(bad)
(bad)
out
dec
aaa
and
adc
push
pop
and
mov
cmp
jbe
sub
jmp
xor
xchg
mov
push
cmp
xchg
add
add
or
add
push
cmp
inc
es
je
push
xchg
pop
and
mov
mov
xor
inc
add
mov
cwde
inc
fild
ss
xchg
inc
mov
into
std
mov
or
rol
or
and
je
mov
push
scas
mov
dec
inc
pop
add
(bad)
push
fisubr
mov
push
push
mov
mov
mov
cmp
je
xor
(bad)
mov
je
add
jne
adc
and
lea
mov
sub
add
cmc
push
stos
inc
jmp
je
mov
(bad)
ja
aad
mov
sub
mov
mov
add
icebp
jne
neg
mov
jmp
inc
sbb
xor
scas
loop
cld
push
sbb
lea
aaa
add
mov
cmp
fisubr
or
sub
inc
cmp
push
or
pop
test
dec
rol
dec
and
aas
std
xor
inc
adc
jbe
mov
sub
adc
inc
adc
imul
js
call
push
femms
cmp
ja
popa
mov
js
push
nop
sbb
inc
jne
push
inc
ja
sbb
add
(bad)
push
jae
les
mov
mov
adc
push
mov
add
js
cld
cmpxchg
test
or
add
push
mov
xlat
add
cli
clts
add
cld
sbb
adc
mov
jnp
jne
jmp
jne
inc
push
(bad)
(bad)
inc
clc
add
call
test
je
mov
inc
mov
adc
and
ret
xor
mov
cmp
int
daa
add
add
sub
setnp
sar
fistp
push
rol
cmp
shr
sub
or
fcom
cs
(bad)
addr16
fisttp
or
push
add
sar
cmp
mov
syscall
lock
inc
mov
cmp
jae
mov
mov
cmp
jne
fwait
mov
or
ret
adc
retf
adc
inc
icebp
inc
mov
sub
test
cmp
jo
and
loope
call
icebp
or
xor
loopne
push
and
mov
rcl
adc
fld
lock
add
add
and
dec
add
xchg
inc
add
jnp
(bad)
dec
std
sub
add
mov
dec
xchg
and
and
mov
mov
mov
push
std
push
or
xor
jge
dec
inc
mov
aam
mov
fldcw
mov
outs
mov
bound
outs
mov
ret
jae
push
mov
dec
dec
sub
xor
sar
mov
mov
outs
test
je
cmp
mov
and
out
add
push
pop
shl
jg
or
jge
je
mov
push
or
repz
ret
pop
pop
or
call
loopne
test
cmp
add
and
xchg
xchg
adc
popa
and
or
ret
jecxz
dec
jmp
adc
pop
ds
push
xor
push
sub
inc
and
or
sbb
cmps
and
lock
push
(bad)
aas
test
add
mov
push
in
out
xor
add
push
add
ins
xor
stc
out
sbb
ja
adc
dec
lds
neg
pop
sbb
inc
shl
loopne
in
sub
add
add
outs
rcl
push
push
in
or
sbb
jp
fs
and
outs
and
dec
sbb
mov
push
push
mov
mov
mov
jmp
out
jp
ja
mov
dec
test
sets
sbb
add
ss
add
(bad)
adc
cmp
loopne
aam
push
push
retf
cmp
ja
mov
test
cli
inc
add
jmp
ins
push
pop
in
jne
outs
sub
das
add
or
data16
jne
jmp
xor
add
cmps
adc
mov
cmp
movs
cmp
ret
ss
add
and
iret
call
je
lods
(bad)
jae
jle
adc
add
pop
jns
int3
and
mov
adc
or
xchg
sub
xor
data16
lahf
or
mov
push
cmp
adc
mov
test
aam
jp
adc
jne
hlt
js
ret
cmp
cmp
arpl
push
push
add
retf
adc
add
xor
inc
sub
add
and
add
pop
daa
sub
nop
push
pop
dec
test
ret
push
mov
jbe
push
push
icebp
xor
shl
adc
sbb
out
and
sbb
add
add
push
sbb
je
movs
scas
adc
retf
pop
fwait
scas
fiadd
sub
je
jno
lea
jo
test
pop
sbb
cmp
lds
inc
(bad)
aam
mov
daa
inc
inc
push
add
add
cmp
fs
or
xor
add
push
xchg
jnp
fs
push
push
outs
adc
test
xor
adc
loope
xchg
(bad)
sub
add
sbb
aas
push
mov
push
inc
(bad)
es
fmul
add
out
jno
add
movs
or
enter
jge
(bad)
jbe
lea
daa
mov
xor
shl
or
inc
mov
or
ror
add
add
popa
jmp
or
aam
sbb
or
pusha
or
std
cs
jbe
mov
mov
or
inc
std
fnstcw
dec
add
jb
xchg
sbb
retf
cld
cmp
out
(bad)
aaa
cld
or
fisttp
inc
sti
movntps
sub
cmp
jbe
cmp
or
or
inc
jo
sub
push
xchg
retf
adc
call
ja
xchg
dec
fisttp
sub
dec
and
push
mov
ja
pop
ss
sbb
outs
mov
loopne
add
dec
lea
add
jae
or
and
adc
cmp
and
sub
cwde
push
gs
inc
add
lods
inc
adc
add
inc
sub
sbb
mov
and
jmp
push
adc
daa
sbb
setne
or
or
inc
ror
and
enter
push
retf
or
je
pop
jmp
lar
stos
(bad)
stos
fdivr
stc
jb
stc
sbb
jb
in
(bad)
sub
cmp
cwde
inc
fisub
mov
cmp
mov
mov
mov
dec
in
add
mov
add
or
sti
jmp
mov
jae
push
out
sub
cmp
jno
mov
push
cmp
je
pop
xor
mov
push
jmp
retf
and
inc
add
xor
out
jmp
add
or
mov
test
add
jmp
test
je
ret
push
jbe
jbe
xor
imul
mov
fdivr
shl
jge
scas
xchg
call
push
sub
mov
fwait
cwde
and
sbb
mov
test
add
(bad)
mov
mov
stos
lea
add
jno
dec
cmp
ja
inc
iret
jne
jno
mov
adc
inc
add
jb
xor
ret
pop
or
int3
cmp
out
cmp
fsubr
test
mov
and
int3
cmp
jno
push
and
daa
mov
fdiv
shl
lock
or
gs
inc
out
ds
sub
test
mov
or
add
push
shl
inc
or
das
popa
jo
aas
rcl
push
xor
or
add
mov
test
stos
jnp
scas
loop
cld
mov
sub
je
adc
sbb
push
push
mov
pusha
scas
xor
sbb
mov
pop
int3
dec
mov
stc
and
xchg
or
aam
push
shr
or
pop
mov
sbb
mov
mov
pop
or
sbb
cmc
jmp
pop
push
mov
jnp
xchg
adc
ror
mov
xchg
inc
adc
(bad)
dec
jae
mov
jmp
mov
mov
mov
mov
pop
or
mov
jg
mov
data16
jae
jne
mov
jns
inc
inc
adc
out
(bad)
cmp
jne
mov
mov
mov
add
jmp
fs
inc
sub
cmp
jne
mov
jmp
mov
sub
jne
mov
fbstp
lock
mov
mov
mov
inc
call
mov
fbstp
jo
jne
mov
jle
fst
mov
jl
fs
iret
mov
or
jnp
test
or
call
hlt
jmp
xor
inc
jbe
jne
push
add
inc
and
jo
jmp
cmp
dec
popa
fld
dec
imul
or
je
mov
pop
pop
in
pop
stos
push
ret
mov
pop
leave
mov
mov
mov
or
mov
call
push
xor
jmp
cmp
dec
or
arpl
imul
mov
enter
dec
addr16
mov
xor
mov
(bad)
out
dec
mov
add
pop
jmp
adc
push
lea
test
je
lea
loopne
pop
jmp
or
mov
add
call
jbe
pop
or
push
push
push
dec
aaa
mov
lea
mov
xor
xchg
add
stc
add
cmp
call
jg
enter
aam
int3
sub
pop
push
xor
dec
cmp
or
xchg
jne
xor
pop
push
sar
push
adc
into
shl
add
dec
fadd
mov
push
mov
lea
sub
lea
xchg
dec
adc
xchg
jo
adc
fild
push
lea
call
push
sub
xor
jnp
and
lea
mov
mov
js
and
inc
fsub
mov
ror
lea
cwde
xor
pop
and
adc
add
lea
retf
mov
push
add
cmp
mov
xor
mov
daa
mov
mov
jno
ret
pop
xor
add
retf
sub
mov
push
cld
nop
lods
ret
scas
add
xor
jg
mov
mov
fnstenv
mov
pushf
push
mov
xchg
dec
jl
mov
mov
sub
lea
loope
pushf
aam
xchg
jg
outs
mov
jnp
and
ror
add
jg
add
inc
push
push
cmp
jmp
cmp
mov
adc
adc
mov
pop
add
ins
(bad)
xchg
add
loope
or
or
mov
mul
add
lods
cmp
push
inc
sbb
adc
adc
add
or
mov
push
les
add
pop
rol
add
and
xor
jecxz
cmp
mov
retf
fldenv
stos
leave
and
pop
cmp
jne
jg
ror
mov
mov
xchg
sub
xchg
add
sbb
das
adc
loopne
xchg
push
mov
rol
jbe
hlt
call
mov
lea
mov
push
push
inc
movs
add
mov
fld1
jne
ror
loope
inc
adc
push
push
mov
mov
pushf
pushf
add
push
hlt
mov
xchg
rcr
outs
push
and
aas
adc
xor
add
inc
les
(bad)
mov
add
std
ds
cmp
sbb
cwde
cmovae
push
cwde
xor
and
(bad)
aas
inc
xor
sub
inc
shr
cmp
cmova
jg
mov
cmp
jne
push
pop
mov
add
cmp
inc
inc
cmp
jne
mov
aad
jl
cmps
push
ja
cwde
sbb
out
and
mov
mov
inc
inc
cwde
push
adc
loopne
add
mov
in
xchg
ss
cmp
xchg
and
aam
mov
test
and
or
xchg
shl
not
mov
ret
jg
xor
push
fmul
cmp
sbb
lahf
add
fld
push
out
push
or
add
sbb
ja
push
dec
lea
jge
or
fcom
out
test
and
adc
jae
mov
(bad)
sub
adc
out
movs
dec
pop
add
mov
outs
mov
loop
add
fisubr
jno
call
push
push
mov
mov
pop
adc
add
bound
test
jne
or
sub
push
rol
leave
aad
add
add
sbb
sbb
adc
loope
mov
das
and
mov
stos
inc
fcom
add
push
mov
xor
cli
pop
add
neg
(bad)
mov
arpl
sbb
pop
pushf
xor
ds
push
add
psrlw
mov
push
sub
inc
es
or
pop
test
pop
xor
aam
mov
in
mov
or
push
or
dec
or
mov
daa
inc
enter
or
enter
daa
out
test
fild
and
push
popa
mov
inc
dec
push
mov
inc
or
mov
mov
cs
fadd
xor
xchg
push
setnp
mov
ret
pop
jge
add
xchg
aaa
xchg
mov
pusha
lea
jl
push
test
mov
or
loope
inc
aam
daa
jnp
dec
xor
cmp
scas
int3
push
and
jb
popa
xor
sub
(bad)
aam
sbb
enter
int
xor
jns
std
adc
retf
and
add
mov
sbb
test
add
arpl
mov
les
push
add
(bad)
pop
lods
shl
ds
mov
add
pushf
sti
mov
mov
clc
test
push
mov
clc
and
mov
add
mov
add
push
push
push
jnp
xor
jae
ins
dec
xor
pop
sub
jo
sub
daa
inc
mov
and
dec
cmp
arpl
call
test
add
es
into
xor
xchg
push
mov
and
sub
push
lea
dec
in
mov
or
mov
adc
jne
test
add
in
sub
pop
and
mov
or
adc
mov
or
(bad)
repz
cmp
cmp
(bad)
pop
pop
lods
aas
out
push
(bad)
rol
mov
fs
sti
das
jmp
lea
test
leave
adc
pop
fmul
mov
test
adc
fwait
dec
and
push
and
loope
mov
test
add
into
mov
add
sub
std
daa
sub
(bad)
inc
mov
stos
push
sub
jle
mov
xchg
mov
jne
jp
mov
loopne
in
push
xchg
in
mov
sub
leave
cmps
add
xor
push
xchg
and
inc
xor
xchg
mov
dec
add
xor
sub
js
push
adc
stos
sar
cmps
sbb
xor
or
push
mov
cmp
add
mov
mov
or
shl
mov
in
push
cmps
or
jg
add
loopne
add
arpl
pop
mov
pop
ret
cmp
jno
pop
fnsave
or
push
mov
ret
jle
sbb
fs
add
push
ja
lea
jg
or
and
adc
or
(bad)
sbb
bound
jmp
jmp
xor
pop
mov
call
push
xor
pop
or
sbb
mov
test
jne
lea
jle
xchg
mov
sub
xchg
ins
dec
push
push
pop
dec
and
mov
fistp
mov
cmp
rsqrtps
jno
in
and
xchg
adc
mov
sub
loop
test
add
rol
adc
mov
lea
push
mov
sub
fistp
aas
cwde
jl
adc
sub
mov
ret
je
jp
pop
out
cmp
xor
stos
or
(bad)
mov
cs
xor
sub
xchg
inc
add
adc
inc
xor
xchg
iret
add
test
test
dec
ins
sub
lock
xchg
and
shr
push
jle
jb
inc
repnz
cmp
ss
and
push
mov
mov
mov
test
pop
bound
add
add
dec
cwde
xchg
jo
sub
pop
cld
fcomip
sbb
pop
sub
sbb
xchg
lock
je
xchg
adc
jp
dec
fnstenv
je
lea
out
and
add
icebp
or
je
and
push
add
mov
(bad)
or
or
mov
and
or
sahf
mov
xor
xor
dec
stos
dec
cdq
jle
adc
lock
sbb
adc
jbe
lea
push
jecxz
sbb
movs
xchg
mov
push
add
mov
dec
std
or
push
cmp
and
pop
jo
or
xor
iret
ret
sub
inc
popf
add
cdq
add
and
pop
inc
neg
or
add
retf
xchg
je
push
je
inc
rol
aam
xchg
int3
adc
xchg
aad
cmp
sbb
cmp
and
and
add
and
jb
push
sub
and
call
jne
cmp
cmovb
sub
dec
add
inc
adc
aam
add
(bad)
(bad)
dec
jmp
push
push
lea
xchg
sbb
mov
out
test
stos
cmp
setne
jl
adc
cmovb
test
cmovne
pop
jg
shr
xchg
sub
out
jg
inc
push
cmp
nop
clc
push
add
call
int3
add
mov
mov
mov
jmp
cmp
je
add
cmp
jne
fwait
dec
push
lock
mov
xchg
cmp
cmps
in
push
je
sub
dec
mov
mov
cmp
je
sar
push
ins
cmp
adc
cmp
je
mov
jmp
mov
sub
inc
lea
sub
and
push
push
push
adc
and
sub
adc
stos
adc
pop
or
add
out
dec
inc
lock
mov
mov
sub
lock
inc
cld
mov
add
xor
adc
add
dec
and
or
inc
or
jno
push
push
mov
xchg
cmp
or
sub
lea
or
or
dec
stos
movs
inc
in
lea
or
or
cwde
stos
sbb
jmp
mov
mov
xor
inc
inc
and
ret
push
pop
(bad)
aad
pushf
out
pop
inc
fstp
cmp
sahf
inc
add
or
nop
mov
inc
mov
sbb
adc
push
repnz
lea
lea
add
sbb
dec
les
adc
rcr
pop
or
or
shl
lds
outs
rol
ror
ins
mov
adc
xchg
sbb
aaa
cmp
or
and
(bad)
call
jge
mov
mov
mov
adc
call
icebp
sub
aaa
add
add
mov
lea
push
neg
push
cli
fwait
jb
mov
cmp
hlt
out
call
push
jl
xor
mov
mov
dec
mov
push
mov
xor
mov
and
jp
xchg
fs
cli
add
push
mov
mov
data16
dec
rcr
inc
add
clc
push
inc
cmp
or
add
push
add
push
inc
stos
or
ret
jns
test
adc
shl
(bad)
xor
cmp
pop
add
mov
lock
pop
pop
jbe
mov
mov
jns
je
test
sub
add
jge
xchg
iret
xchg
fwait
in
push
add
imul
nop
shl
or
add
loop
mov
adc
clc
test
cmp
push
push
and
and
xor
push
xchg
adc
push
sbb
jl
push
mov
xchg
mov
add
out
mov
ret
pop
dec
or
out
(bad)
push
push
mov
xor
jle
lock
cs
mov
dec
scas
into
dec
cmp
xor
bound
ror
leave
inc
xor
mov
imul
mov
mov
push
sub
fsubr
pop
or
stc
push
sbb
sbb
clc
inc
nop
ds
call
enter
lea
sbb
jbe
cli
push
mov
or
lds
mov
xchg
int
jle
dec
or
and
shl
xchg
pop
mov
push
push
jae
test
mov
add
call
xor
mov
imul
jge
or
adc
jns
mov
pop
or
cmp
push
dec
adc
and
enter
call
or
ja
add
sbb
push
xchg
inc
or
mov
mov
daa
cld
test
add
aas
xor
es
add
dec
add
fidivr
sar
dec
enter
xchg
call
dec
push
mov
push
xor
jne
(bad)
mov
jbe
ja
mov
shl
cmc
or
add
dec
or
aaa
push
xor
mov
sar
cmp
mov
je
push
sbb
add
sar
icebp
mov
mov
lea
mov
pop
dec
inc
sub
call
or
(bad)
mov
jmp
popf
push
fadd
movs
or
mov
fst
add
mov
test
push
adc
jl
and
pop
add
or
add
loop
jmp
sub
mov
test
inc
jge
add
xor
mov
xchg
js
jle
mov
loopne
mov
xor
pop
mov
push
push
mov
bound
pop
icebp
inc
or
xchg
lods
call
push
adc
mov
add
xchg
dec
jbe
or
pusha
add
xchg
add
out
or
jmp
jge
push
cwde
clc
dec
jne
mov
and
sar
dec
adc
mov
cmc
out
cmp
repz
je
push
push
fwait
into
push
mov
ror
test
push
scas
or
cmp
out
add
stos
add
jae
push
hlt
inc
push
out
mov
mov
sub
or
jmp
mov
xchg
out
in
adc
inc
fidivr
aad
jbe
hlt
in
fcom
aad
rol
in
dec
inc
movups
lahf
add
xchg
mov
into
mov
fsub
mov
sbb
and
adc
mov
add
and
add
ja
add
add
(bad)
adc
clc
xchg
sub
lea
mov
jmp
mov
inc
cld
das
push
pop
push
add
sahf
in
test
jne
(bad)
es
add
arpl
adc
icebp
or
sbb
cmp
neg
mov
jmp
fst
mov
inc
clc
mov
mov
ret
push
mov
pop
aad
mov
xchg
les
lea
lods
jae
test
sub
inc
ins
ret
pop
add
push
fidivr
push
push
mov
test
je
push
mov
xchg
cwde
cs
sub
outs
stos
add
mov
xchg
push
dec
clc
jg
pop
add
je
pop
and
add
pop
sub
and
push
pop
aas
fsubr
jno
cs
push
icebp
fild
ror
pop
ret
add
inc
mov
dec
cmp
lock
add
adc
stos
or
mov
shl
mov
lea
sbb
inc
push
xchg
sbb
mov
add
mov
in
pop
inc
scas
sbb
ja
jbe
out
mov
into
sub
and
mov
mov
dec
and
mov
sub
sbb
xchg
aam
mov
mov
mov
inc
xchg
ins
out
mov
je
pusha
imul
jmp
or
or
adc
enter
(bad)
pushf
retf
mov
into
adc
add
add
dec
mov
sbb
call
or
loope
add
add
or
idiv
pop
out
xchg
mov
mov
pop
pop
xchg
adc
dec
cmp
fild
mov
push
call
sbb
test
je
sbb
dec
sbb
fsubr
lea
pop
or
inc
jo
or
and
or
mov
mov
xchg
mov
adc
test
or
sub
sbb
icebp
fs
xor
inc
sbb
pop
imul
ins
push
dec
push
dec
adc
add
inc
push
push
shl
loopne
jno
jae
mov
pop
inc
push
pop
pop
sbb
push
mov
add
adc
dec
or
adc
mov
loopne
cli
pop
cli
stc
xor
push
inc
xchg
ins
lea
xor
add
inc
mov
mov
mov
mov
clc
dec
mov
mov
mov
mov
mov
mov
es
push
(bad)
mov
pop
js
xor
xor
or
ja
push
cmp
xchg
ins
test
push
cld
inc
sbb
jne
jmp
lahf
xor
or
dec
sbb
and
jmp
inc
into
(bad)
lds
cmp
aad
sti
add
inc
mov
mov
push
das
sbb
(bad)
jne
pop
mov
add
jle
enter
out
pushf
mov
add
and
adc
push
jae
and
div
clc
lahf
xor
mov
and
fcomp
iret
and
mov
cld
jg
rcl
aam
dec
add
inc
or
add
sbb
lods
bound
cwde
pop
mov
(bad)
fs
mov
cmp
jo
out
push
push
jge
cmp
cli
sub
push
jo
test
(bad)
daa
rcr
ins
xchg
stc
xor
adc
mov
aad
clc
ror
add
xchg
clc
add
xchg
xor
clc
sbb
icebp
jg
dec
aas
pop
mov
pop
test
je
and
push
mov
push
(bad)
cmc
inc
inc
or
add
mov
push
or
mov
jbe
lea
push
mov
pop
int3
sub
pusha
adc
test
push
dec
sub
jo
and
shl
fmul
mov
in
push
xchg
pop
xchg
loop
adc
dec
aas
repz
mov
jne
add
sbb
mov
sub
out
mov
into
shr
and
dec
and
mov
mov
lea
cmp
les
(bad)
xor
mov
je
dec
jne
into
js
aaa
jne
push
jns
or
adc
dec
cmp
inc
cmps
mov
jl
test
jne
pop
cmp
adc
hlt
sbb
pop
push
mov
push
and
(bad)
inc
inc
or
dec
adc
shr
add
call
ja
out
dec
pop
mov
push
data16
mov
jg
and
lea
add
mov
sub
fdivr
cmp
add
push
xchg
stos
dec
sbb
daa
push
mov
cmp
out
mov
lea
pop
pop
sahf
pop
adc
add
inc
adc
popa
push
(bad)
pusha
cmp
rol
lock
adc
cmps
dec
inc
(bad)
jb
cmp
jae
inc
call
dec
sub
cmp
jb
loop
and
fisttp
shr
add
mov
sbb
and
adc
fmul
aaa
jg
scas
or
mov
mov
shl
(bad)
(bad)
inc
shl
mov
lea
sub
add
mov
and
add
push
push
scas
or
jmp
stos
dec
clc
lea
cmp
ja
mov
push
out
mov
imul
ret
daa
sub
push
xor
inc
hlt
inc
mov
sub
or
lock
int3
xor
rep
mov
sub
out
(bad)
jmp
mov
mov
shl
or
jbe
xor
aaa
mov
sub
add
push
mov
add
les
js
mov
test
retf
mov
dec
jge
inc
pop
add
popf
loop
add
or
cmp
mov
xchg
pop
or
add
not
int
repnz
xor
adc
xchg
popa
sbb
pop
lds
mov
jo
mov
popf
ins
or
add
out
stc
movs
dec
push
retf
add
jl
pop
ss
push
les
add
adc
mov
adc
pop
adc
pop
mov
jb
sbb
adc
dec
xor
or
in
retf
outs
mov
push
push
call
lea
push
outs
and
push
mov
mov
mov
(bad)
call
mov
mov
movsx
and
shr
push
or
lds
inc
aad
stos
jmp
lea
mov
test
jg
dec
xor
jmp
jl
cmp
lea
inc
(bad)
inc
push
cmovae
push
aam
sti
fistp
enter
xchg
add
neg
push
sbb
push
inc
cmp
ficom
sbb
call
sbb
or
icebp
mov
cld
cs
dec
or
and
push
add
aaa
ins
jo
lock
mov
sub
je
dec
adc
add
inc
push
pop
loopne
out
fdivr
lea
push
ret
jo
jecxz
mov
mov
xor
cli
or
cdq
or
data16
out
dec
mov
mov
xchg
jne
(bad)
icebp
loop
rol
or
adc
fnsave
mov
inc
or
fiadd
test
aam
mov
mov
hlt
jne
push
push
sub
adc
fbstp
add
add
sub
mov
or
call
jne
into
cld
add
add
hlt
sub
push
xor
push
je
pusha
(bad)
mov
fisttp
cli
push
sbb
dec
inc
add
(bad)
mov
or
cwde
ret
and
mov
add
js
xchg
push
mov
push
push
push
push
dec
and
push
mov
sub
js
lock
pop
icebp
mov
or
lods
push
fsub
cld
push
fld
xor
mov
and
loopne
push
mov
mov
jmp
pop
jmp
mov
lea
push
mov
mov
or
and
inc
fcomp
sbb
test
mov
or
pop
mov
hlt
adc
test
mov
inc
in
or
inc
ins
lea
in
mov
and
inc
and
test
ins
mov
adc
cdq
xor
inc
xor
push
aaa
cmps
(bad)
fdivr
add
adc
add
xchg
jg
push
fidivr
aaa
jl
in
aas
movs
test
je
pop
iret
lea
jbe
movs
adc
out
out
and
add
push
push
push
mov
push
sub
pop
mov
add
pusha
and
mov
inc
jp
out
loopne
adc
mov
push
out
fwait
lods
xor
mov
adc
xchg
add
fnstsw
in
add
mov
pop
sar
push
mov
push
mov
ror
inc
fs
jge
ret
mov
or
popf
jmp
ds
adc
push
or
iret
cmp
push
mov
jns
outs
push
cmp
jl
mov
fist
dec
test
add
mov
ins
sub
or
stc
ficom
lds
mov
lea
loopne
xor
stc
push
fstp
sbb
add
jb
out
mov
xor
mov
mov
push
(bad)
jmp
mov
sub
mov
rol
movs
sub
mov
lea
shr
mov
add
inc
ror
shr
push
in
fistp
mov
mov
cmp
add
push
jne
(bad)
sbb
stos
sbb
xchg
add
mov
mov
ret
mov
js
add
lea
lea
mov
lods
sahf
in
sub
add
neg
xchg
stc
lock
mov
test
mov
fdiv
add
inc
inc
sbb
dec
in
ds
fwait
call
inc
ror
loopne
in
(bad)
dec
test
add
test
nop
pop
push
push
add
inc
fwait
xchg
je
mov
cmp
xor
cmp
sbb
je
(bad)
inc
xor
stos
jo
cwde
imul
popa
rol
mov
add
je
loope
movs
enter
loop
sar
push
jecxz
pop
xchg
mov
addr16
clc
inc
add
aam
cmp
adc
aam
nop
mov
mov
stos
movs
mov
mov
sub
mov
add
xor
xor
pop
push
push
fs
xor
cwde
dec
mov
jmp
(bad)
test
je
fild
inc
pushf
in
push
test
repz
loopne
int3
jo
movs
pop
inc
je
movs
and
pop
lds
push
or
push
adc
jecxz
jmp
cmp
fdivr
xor
xchg
cdq
and
push
and
cwde
scas
push
or
loope
or
jecxz
dec
xor
cmp
mov
in
movs
push
push
mov
sub
enter
xchg
or
fcos
adc
jecxz
jmp
inc
xor
adc
inc
or
loope
cmp
cld
cmp
std
push
pop
push
dec
fs
outs
mov
cmp
or
and
add
xor
add
and
sub
and
aas
jmp
mov
mov
(bad)
test
je
pcmpeqw
push
aas
mov
mov
(bad)
ja
mov
push
mov
mov
push
cli
jnp
loopne
fild
and
jne
pop
cli
std
pop
add
add
add
fisttp
data16
fwait
pop
cmp
je
mov
lea
and
js
mov
jmp
sbb
hlt
lea
cmp
jne
add
mov
in
mov
imul
std
mov
add
sbb
lock
sbb
dec
push
adc
lods
mov
add
aam
cmps
dec
sbb
mov
lods
jbe
fdivr
je
sbb
(bad)
jmp
lea
mov
mov
mov
pop
lea
mov
pop
add
jnp
jmp
loope
mov
jns
dec
inc
xchg
cmps
fadd
in
int
dec
out
outs
sub
ror
and
or
mov
popa
and
mov
adc
or
push
jge
adc
pop
xor
or
add
mov
scas
pop
and
cmp
push
push
mov
xor
cmp
add
or
dec
test
arpl
push
cmp
ror
aas
push
add
dec
into
push
xchg
mov
cmp
adc
mov
jbe
(bad)
sbb
pop
xchg
lds
rol
test
outs
push
(bad)
nop
jb
in
add
dec
push
mov
call
pop
add
in
lea
push
clc
cmp
movs
dec
xor
mov
mov
mov
das
clc
jmp
inc
ins
mov
mov
mov
cmp
sahf
std
add
pusha
add
mov
add
mov
sub
jl
js
(bad)
(bad)
jg
mov
mov
movzx
movzx
shl
or
or
inc
jmp
add
or
push
jo
nop
clc
sub
cdq
dec
lea
xchg
jp
sbb
cdq
adc
sub
inc
clc
out
(bad)
mov
lods
xor
jmp
mov
sub
sub
push
add
aas
xor
inc
or
add
movs
aaa
clc
es
pop
push
push
and
fsub
(bad)
push
aad
clc
test
jmp
sub
mov
mov
ins
ret
mov
lds
(bad)
call
mov
mov
cmp
jne
sbb
push
push
popa
inc
ret
inc
lds
out
leave
pop
mov
push
lea
add
push
pop
lods
add
pop
in
dec
mov
push
push
push
add
cdq
cmp
adc
not
push
loop
sbb
mov
sub
xor
ins
adc
(bad)
mov
inc
cld
mov
add
mov
dec
add
push
cmp
std
aaa
inc
mov
mov
setne
cmp
fcomip
jbe
mov
mov
jmp
lea
leave
mov
mov
mov
test
jne
test
je
xchg
mov
test
add
jecxz
jge
(bad)
(bad)
jg
movs
mov
mov
add
mov
cmp
jne
inc
cmp
push
xchg
test
or
jbe
inc
jno
mov
push
xor
mov
loopne
(bad)
cld
cmp
je
cmp
jne
cmp
jbe
lea
test
(bad)
outs
sub
dec
add
ins
push
add
syscall
dec
push
add
jmp
mov
mov
lock
adc
(bad)
popa
and
jno
out
cmp
or
(bad)
xchg
loope
add
cmp
jne
test
push
sbb
inc
jo
(bad)
and
loopne
or
push
sbb
pop
push
cmps
sub
jmp
mov
pop
test
cmp
inc
xor
jo
jge
inc
loopne
add
cld
out
inc
lock
mov
das
mov
fdivr
and
or
je
dec
(bad)
das
lods
xor
push
leave
loopne
mov
loopne
inc
sti
out
loopne
push
mov
xor
inc
push
add
and
sub
mov
adc
test
mov
loope
mov
aad
inc
push
inc
dec
ja
ds
neg
sbb
sub
adc
clc
out
sub
cmp
(bad)
je
mov
out
sub
push
pushf
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
sub
mov
inc
dec
not
sub
js
stc
mov
mov
jmp
int
add
add
aam
cmp
jne
mov
hlt
sub
jle
je
lock
inc
(bad)
add
adc
dec
jmp
call
pusha
stos
mov
mov
int
out
jmp
add
xor
mov
call
daa
cmp
fcomip
mov
fs
lea
dec
mov
push
jg
cmp
jmp
dec
push
push
mov
jbe
cmp
jne
je
nop
imul
xor
jg
outs
mov
sub
call
(bad)
fist
and
dec
lods
push
push
(bad)
(bad)
fild
sub
les
sar
mov
jne
push
je
sar
fstp
call
(bad)
mov
inc
int3
bound
add
cli
mov
hlt
lock
push
xchg
in
sub
mov
addr16
ror
sbb
adc
mov
movs
rcr
pop
mov
outs
cli
fild
pop
mov
mov
mov
inc
or
push
pop
add
lock
call
cmp
or
ins
out
xor
fstp
test
bound
mov
test
and
or
(bad)
pop
and
stos
jle
mov
add
pushf
jl
jle
inc
loope
pop
push
shl
js
sub
call
stc
call
push
mov
jl
sbb
or
mov
xor
push
fadd
mov
add
cli
pop
push
nop
add
mov
int3
push
mov
mov
sbb
mov
lea
xor
mov
lea
arpl
add
(bad)
or
shl
jmp
mov
repnz
sub
js
leave
sbb
mov
enter
xchg
pop
dec
sbb
test
add
dec
dec
inc
inc
adc
in
leave
js
push
std
sbb
cmps
push
push
xor
lea
sub
push
imul
daa
lea
mov
dec
adc
aas
inc
shl
in
mov
idiv
dec
adc
adc
or
daa
cmp
add
inc
mov
popa
inc
lock
lea
pop
scas
ja
push
or
lea
and
mov
je
(bad)
mov
add
mov
test
mov
dec
(bad)
or
pop
inc
push
adc
adc
nop
add
iret
dec
adc
mov
mov
pusha
or
or
xor
in
adc
imul
xchg
or
push
shl
pusha
add
fld
ret
sbb
inc
sub
sbb
jg
pop
mov
push
push
mov
or
outs
mov
mov
cs
or
popf
push
dec
sbb
dec
icebp
pop
push
lea
rcr
cld
dec
xor
jge
jne
mov
icebp
cwde
add
hlt
add
adc
push
lds
(bad)
mov
push
push
js
neg
add
jle
sahf
sub
adc
mov
xor
mov
pop
cmp
cmps
mov
push
mov
adc
push
stos
clc
push
and
sbb
cld
aaa
xor
add
mov
xchg
shl
pop
dec
scas
hlt
(bad)
fs
clc
sbb
add
popf
fnstenv
cmp
cdq
push
adc
nop
pop
(bad)
shl
adc
push
jne
add
pop
mov
mov
(bad)
or
std
pop
addr16
or
pop
add
pop
adc
rol
dec
and
imul
arpl
pop
mov
into
mov
mov
adc
inc
mov
mov
dec
(bad)
jmp
jo
inc
je
pop
js
pop
jl
lahf
or
xchg
pop
mov
push
mov
mov
lea
push
push
mov
call
mov
mov
pop
test
add
cmp
fwait
mov
pop
adc
cmp
or
pop
inc
xor
push
add
mov
push
and
enter
mov
push
mov
(bad)
loopne
loop
push
push
and
test
mov
inc
add
dec
xor
iret
add
lods
xor
adc
or
je
cmp
test
fsub
pop
and
jg
icebp
add
cmp
dec
popf
call
jg
mov
mov
lea
pop
mov
add
jno
sbb
or
lea
pop
neg
pop
cdq
outs
enter
push
xor
(bad)
mov
test
pop
shl
sbb
mov
sub
cld
and
mov
loope
xor
mov
adc
ja
dec
push
dec
pop
mov
add
in
adc
add
adc
dec
rol
ja
and
loop
lock
ja
lock
or
test
mov
inc
leave
lea
mov
adc
pop
(bad)
out
mov
jp
pop
cmps
add
retf
ja
sub
mov
and
inc
mov
xor
aas
add
lock
ret
stc
dec
icebp
mov
jg
inc
cmp
sbb
lea
add
inc
add
adc
and
hlt
add
adc
jle
call
push
push
mov
xchg
fmul
xor
mov
xchg
test
ds
mov
push
and
push
adc
inc
and
fiadd
mov
cmp
push
cmc
xchg
loopne
repnz
stos
dec
add
popf
jne
lmsw
push
iret
add
dec
sub
sub
mov
and
add
xor
add
retf
jne
pop
xor
icebp
or
xor
cmps
sbb
dec
jge
je
mov
in
shr
dec
cmp
or
adc
adc
pop
in
sbb
sbb
xor
inc
dec
xor
add
ss
or
cmp
jns
ins
mov
mov
adc
add
lea
sahf
push
sbb
stos
ds
add
xchg
sub
ret
inc
cmp
adc
into
test
mov
add
mov
pop
aaa
aad
or
push
push
jne
mov
or
mov
sbb
mov
mov
retf
cmc
fistp
ss
mov
test
mov
cmp
iret
adc
pop
cvttps2pi
loope
ja
neg
shl
mov
and
xchg
jmp
inc
jle
cmp
jmp
pop
and
push
hlt
add
pop
jle
test
sub
add
ror
inc
mov
cmc
sub
push
xor
mov
ins
sahf
sbb
add
push
and
scas
sti
inc
cmp
js
mov
push
cmp
jl
dec
jg
mov
dec
and
add
push
inc
ror
sub
enter
xor
push
mov
fwait
or
aaa
sahf
jno
mov
xor
or
add
push
mov
into
pop
xchg
xchg
xor
xor
adc
add
in
sub
in
movs
pop
(bad)
movs
(bad)
and
bound
xor
arpl
or
(bad)
ficom
cmp
enter
and
jo
mov
dec
lahf
dec
sbb
adc
dec
cmp
jns
jnp
and
push
sub
push
gs
cmp
push
ret
inc
mov
cmp
dec
add
push
push
ja
out
fwait
push
sub
and
mov
mov
mov
push
and
sub
dec
stc
out
dec
pop
push
popa
adc
imul
cmp
sbb
or
sahf
xchg
pop
mov
push
cli
aaa
jnp
xor
test
jnp
into
cmp
inc
add
sub
ins
mov
pushf
ffree
xchg
ja
mov
jb
pushf
jno
cmp
pop
jl
lea
repnz
mov
jmp
stos
dec
add
inc
jbe
mov
in
ret
push
add
cmp
out
cmp
xor
sbb
dec
jno
out
rol
xor
mov
xchg
xor
cmc
push
mov
mov
cvtpi2ps
push
sbb
sbb
mov
sahf
push
xor
ds
push
push
xor
inc
and
inc
and
add
sbb
mov
out
dec
sbb
inc
sbb
cmp
call
and
test
out
xor
add
jl
mov
add
out
add
test
xchg
cld
mov
and
je
or
push
sbb
aam
imul
mov
aad
push
mov
or
push
xchg
mov
ret
mov
pop
gs
cmp
jne
push
jge
adc
add
mov
and
inc
fst
inc
out
in
push
inc
add
sbb
jp
add
dec
and
pop
loope
sbb
sbb
and
mov
push
or
mov
mov
movs
and
jae
cs
push
xor
or
fstp
sahf
hlt
xor
push
mov
js
mov
push
push
add
inc
ds
loope
pusha
or
cmp
je
push
pushf
mov
lahf
pop
out
cdq
stos
nop
shl
xchg
xor
repz
js
mov
pusha
outs
nop
push
and
add
sbb
mov
mov
dec
ret
test
pusha
gs
out
test
jns
and
push
or
pusha
adc
cmp
mov
mov
xchg
mov
or
mov
mov
add
adc
loopne
inc
mov
dec
lds
movs
sub
cmp
adc
popa
and
inc
into
pop
pop
jae
and
add
push
xor
push
(bad)
fsubr
shl
rcl
rcr
or
dec
push
ss
xor
add
sbb
inc
mov
and
push
sub
jae
repz
and
pop
sub
or
add
lea
(bad)
adc
inc
adc
ret
cmp
pop
test
sahf
and
adc
xor
dec
xor
add
les
sbb
loopne
or
mov
shl
add
mov
add
dec
sub
xchg
retf
inc
pusha
clc
sub
push
in
jmp
add
sbb
test
(bad)
and
retf
mov
popf
mov
fcom
inc
dec
cmp
adc
cmc
sbb
mov
clc
or
adc
jmp
shl
outs
sbb
and
lock
cmp
loop
cmp
dec
inc
adc
test
inc
cmp
fsub
pop
aad
daa
pop
in
inc
ret
sti
adc
lahf
mov
mov
mov
add
call
adc
cdq
pop
sub
cdq
push
loope
inc
sbb
add
add
dec
pop
ds
jbe
inc
and
pop
rcr
std
sbb
sbb
mov
outs
sub
mov
cmp
je
lods
mov
loope
lahf
pop
adc
lods
add
loopne
add
adc
adc
xor
mov
test
test
test
add
loope
inc
adc
pop
sbb
cmp
dec
mov
push
jbe
sbb
mov
cmp
inc
pop
cmp
jl
adc
(bad)
sub
add
jmp
cmps
fld
xor
sbb
and
push
or
mov
inc
mov
inc
gs
mov
pusha
arpl
and
fbstp
push
add
adc
pop
mov
add
inc
je
inc
and
fcomp
sbb
adc
out
stos
std
mov
test
je
lea
push
call
or
xor
xor
(bad)
or
add
sub
jnp
xor
xchg
mov
push
mov
add
movs
jl
mov
and
in
aaa
je
(bad)
aas
mov
cli
push
rol
dec
sub
mov
out
pop
add
retf
popf
mov
arpl
cmp
bound
mov
xor
and
inc
sar
stos
sbb
jl
out
mov
jecxz
and
in
test
rcr
mov
mov
popa
push
adc
iret
cdq
mov
or
es
inc
pushf
and
add
mov
imul
push
or
inc
inc
mov
cmp
out
dec
inc
popa
mov
mov
fs
out
and
es
or
mov
push
shl
addr16
jno
add
push
pop
push
aas
shl
add
mov
out
sub
sub
sub
int3
sbb
clc
mov
sub
imul
mov
add
lods
test
xor
pusha
xchg
jge
xchg
pop
fld
inc
mov
or
sbb
inc
sbb
cdq
mov
pop
dec
js
sub
int
jo
jg
nop
frstor
sahf
rcr
cwde
movs
cwde
fadd
add
int3
push
out
xchg
mov
lea
pop
xchg
adc
leave
inc
push
cmp
mov
and
or
cmp
das
repnz
add
das
aas
fistp
cld
inc
mov
xor
mov
or
lds
mov
enter
loopne
add
xchg
(bad)
mov
mov
mov
fadd
inc
push
pop
fs
lea
adc
sti
pop
inc
loopne
data16
cli
retf
and
dec
adc
mul
push
sub
fdivr
es
dec
xor
xor
add
adc
mov
mov
mov
sbb
fisttp
fisub
(bad)
ror
rcr
mov
push
lea
aad
xchg
sahf
mov
mov
jae
add
and
pop
or
or
or
adc
inc
mov
push
dec
cmp
loope
sbb
inc
xor
ret
cmp
xor
adc
add
adc
ret
loopne
push
jg
mul
rcr
ins
gs
rcl
mov
outs
addr16
sbb
push
mov
sbb
rcr
pop
shl
lock
ret
mov
mov
sahf
fimul
xchg
aad
lahf
cwde
(bad)
inc
or
clc
sbb
add
mov
pop
xor
adc
ret
and
out
das
je
icebp
push
pop
gs
pop
out
nop
xor
mov
cwde
or
inc
je
cwde
es
push
mov
rcr
rcr
xor
ret
lahf
sbb
add
dec
xchg
repnz
jae
or
ror
and
sahf
adc
xchg
dec
push
mov
(bad)
and
or
and
adc
lea
mov
xor
add
shl
mov
xchg
(bad)
pop
icebp
mov
pop
push
mov
jmp
mov
or
sbb
or
or
inc
inc
pop
pop
or
xchg
or
fsubr
or
dec
(bad)
mov
adc
cmp
or
add
and
fxam
jg
daa
xchg
test
and
cmp
fisttp
sub
in
push
mov
out
add
add
test
mov
inc
mov
and
add
cmp
mov
dec
shl
icebp
je
shl
dec
cmp
les
adc
add
sti
mov
xor
and
sbb
or
ins
adc
sub
xor
inc
mov
pop
test
mov
fstp
adc
daa
push
jb
mov
mov
add
sbb
adc
test
or
push
or
fcomp
add
cmps
js
and
das
jecxz
cdq
cmp
in
or
mov
sub
and
or
mov
or
test
inc
jle
inc
neg
je
push
dec
rcl
sbb
xor
push
add
test
pop
xchg
and
cmps
not
mov
cmp
ja
pop
and
xor
inc
add
outs
lock
push
pushf
sti
add
add
call
jo
sub
or
xchg
mov
sub
test
aas
aam
lock
popf
clc
jl
add
mov
ins
ror
adc
pop
fdivr
and
and
jne
adc
and
dec
and
shl
mov
fld
inc
mov
jno
std
cmp
stc
cmp
stc
je
fucomip
outs
xor
push
test
ja
test
xchg
xchg
sbb
mov
push
mov
push
mov
cmp
sahf
xchg
sub
mov
or
dec
hlt
faddp
or
cli
hlt
jecxz
sub
sub
mov
ins
fiadd
xchg
mov
aad
and
mov
mov
jbe
sbb
jnp
push
add
setne
inc
movs
dec
adc
fnsetpm(287
xor
lock
mov
and
rcr
jmp
mov
sar
sub
xor
inc
sub
(bad)
xchg
mov
xor
test
adc
jle
mov
cmp
or
xchg
sub
push
frstor
hlt
shl
mov
lods
push
aas
inc
aam
test
inc
adc
dec
push
test
and
inc
clc
mov
bound
push
or
and
add
add
xor
test
inc
jo
cmp
je
out
jne
pop
xor
sub
inc
retf
inc
mov
aam
int3
repnz
shr
and
movs
pop
adc
cmp
add
add
cmps
add
mov
ins
sbb
xor
fnsave
(bad)
retf
mov
jmp
aas
inc
sub
sbb
bound
out
scas
sub
sub
sbb
icebp
sbb
push
mov
push
pusha
xor
jbe
loope
xor
popa
pop
push
ficomp
add
cli
add
pop
mov
add
outs
cdq
out
jmp
xor
rcr
jl
sti
popa
inc
sbb
daa
push
rcl
mov
inc
mov
add
pop
cmp
or
and
push
push
pop
lods
cmp
xchg
jae
or
or
pushf
pusha
mov
pusha
and
jno
add
sbb
xchg
adc
xor
add
add
inc
adc
pop
cld
push
adc
mov
mov
lock
xor
outs
jmp
dec
mov
push
adc
or
xor
or
xor
or
scas
xor
push
push
lea
cmp
minps
adc
mov
sub
movs
dec
mov
xor
jno
ja
xor
pop
cld
movs
pop
adc
call
add
sar
clc
push
mov
add
sti
push
hlt
or
or
and
test
lahf
cmp
push
lods
ror
ret
out
xchg
icebp
push
sgdtd
stos
pop
jo
test
jo
xchg
adc
mov
jno
pop
cmp
cmp
and
add
adc
adc
cli
dec
mov
test
retf
sub
xchg
mov
sbb
daa
add
aas
mov
push
mov
jmp
test
test
and
sub
dec
(bad)
idiv
jns
dec
add
add
inc
adc
inc
and
mov
in
inc
or
and
adc
add
lea
sbb
mov
mov
pop
pop
cmp
lods
mov
sti
and
loopne
mov
nop
ret
out
xchg
push
sbb
jmp
and
push
adc
jecxz
jmp
jmp
fnstenv
neg
dec
push
rcl
je
add
pop
test
dec
enter
scas
fdivr
hlt
add
out
jno
jae
xor
jae
and
aas
fild
sbb
mov
pop
pop
fst
add
sub
dec
mov
frstor
adc
jp
movs
cmp
cmps
pop
adc
hlt
inc
ins
and
mov
mov
or
adc
push
aam
lea
inc
xor
sub
mov
dec
add
inc
rcl
push
inc
sub
test
jo
xor
add
pop
inc
scas
sbb
imul
inc
jle
adc
mov
sbb
ret
inc
push
hlt
mov
push
call
dec
popa
xor
sbb
xor
aaa
pop
mov
push
mov
add
jnp
add
adc
xor
xlat
outs
rol
or
adc
test
adc
xor
cmp
pop
pop
pop
xor
dec
fsub
pop
js
xchg
sbb
mov
rcl
push
or
mov
or
cmp
cmp
sbb
mov
xor
add
push
jae
mov
loop
mov
rol
inc
rcl
or
inc
or
test
cmp
call
mov
mov
sub
int
shl
inc
pusha
mov
inc
or
or
lahf
sbb
cmp
and
outs
or
add
loopne
lock
lods
rcl
inc
lahf
mov
push
daa
into
jecxz
jmp
nop
push
push
mov
in
shl
add
adc
leave
adc
call
inc
adc
inc
in
xchg
add
inc
call
xor
inc
inc
sub
adc
cmp
mov
xor
and
inc
out
retf
or
fucomip
inc
dec
add
loope
lock
in
mov
push
pop
mov
in
or
push
mov
bound
sbb
or
adc
cmp
cld
add
add
dec
and
imul
mov
pop
jl
push
clc
adc
shl
cmp
rcr
inc
cmp
dec
pop
or
stc
jmp
(bad)
xor
imul
add
lods
imul
fxch
or
and
add
sbb
jl
add
movs
sub
cwde
jl
sbb
ficom
cmp
adc
inc
pusha
pop
add
pusha
call
mov
adc
retf
xchg
inc
cmps
ret
adc
cmp
adc
les
lods
mov
call
addr16
jcxz
push
test
pusha
bound
adc
push
mov
xor
(bad)
bound
lahf
ret
loopne
add
sahf
(bad)
xor
jle
je
nop
add
xchg
test
cmp
int
or
movs
adc
test
or
sbb
mov
(bad)
enter
and
push
adc
into
xor
xor
push
xor
xor
shl
cmp
cwde
loopne
xor
pop
jo
mov
shl
push
aad
lock
xchg
je
mov
and
inc
lds
or
xor
(bad)
bound
push
cmp
dec
add
sub
gs
sub
push
cmp
push
pushf
lock
dec
loope
pop
bswap
cmp
mov
or
dec
sbb
mov
mov
inc
push
sub
cmps
sbb
mov
inc
and
inc
fld
fcmovb
test
dec
in
pop
psllq
daa
(bad)
sub
push
pop
dec
cmp
fcom
push
cmp
iret
cmp
pop
popa
ins
add
test
retf
cs
push
sbb
mov
adc
xchg
test
add
and
inc
pop
pop
mov
adc
test
jns
aas
adc
in
shr
in
icebp
dec
test
test
push
cmp
xchg
xor
inc
push
dec
ret
les
pop
pop
nop
and
cwde
adc
cmp
les
push
out
or
dec
or
and
sub
adc
in
pop
add
out
js
imul
js
xchg
in
ficomp
mov
xor
sub
repz
dec
xor
mul
nop
int
xor
jmp
test
push
sbb
cmp
mov
ja
test
push
push
or
pusha
cmps
xchg
push
fidiv
nop
jp
sbb
and
sub
adc
into
in
or
sbb
rcr
loopne
push
or
jo
mov
loope
jp
retf
mov
pop
movs
or
and
jp
jmp
test
or
mov
mov
movs
or
jp
and
add
and
adc
int3
lea
fisub
or
ficomp
sbb
clc
(bad)
in
scas
test
out
mov
add
mov
inc
mov
je
jl
(bad)
jnp
xor
cld
xor
cs
jl
dec
sub
adc
and
loope
sub
fucom
xchg
es
scas
mov
les
adc
or
fs
or
xor
cmc
inc
cmp
(bad)
in
jle
dec
std
in
fmul
js
sbb
gs
(bad)
sub
sub
cmp
outs
push
xor
push
pop
ret
loopne
bound
sub
bound
jb
neg
and
sbb
add
jae
adc
or
arpl
xchg
add
or
add
rol
fist
pop
popf
mov
sbb
cmp
inc
xchg
jge
std
cmp
jne
and
xor
das
cmp
ins
addr16
cmp
cs
adc
test
ret
fmul
adc
add
js
or
loope
(bad)
hlt
pusha
dec
punpckhdq
sub
and
daa
mov
neg
enter
jae
inc
lds
mov
stc
push
push
mov
adc
fstp
mov
and
stos
sbb
jae
mov
lea
push
inc
rcl
ja
fist
dec
enter
cli
jle
das
mov
test
cmp
lds
sbb
(bad)
push
sub
mov
push
mov
xor
xchg
mov
fcomp
cld
and
icebp
mov
push
adc
cmp
dec
js
sbb
add
dec
xor
mov
add
(bad)
fwait
inc
fnsave
push
push
mov
mov
and
push
int3
mov
mov
xor
pop
push
cwde
fcom
mov
retf
loope
mov
jb
mov
push
mov
add
add
jne
rcr
add
adc
xor
inc
ret
aas
add
outs
mov
adc
inc
and
xor
(bad)
inc
or
dec
add
mov
ds
popa
adc
dec
and
jmp
cmp
mov
sbb
ins
push
mov
outs
cmps
or
inc
repz
mov
aad
sbb
or
stos
mov
lea
jns
add
mov
ret
loop
dec
cld
retf
inc
mov
sub
bound
inc
xor
and
add
inc
mov
mov
ds
and
ja
test
fnstcw
fimul
test
cld
jg
push
mov
cmp
jne
mov
jbe
sub
jnp
cmp
rol
mov
add
inc
cmp
ja
sub
ins
push
out
ret
movs
lea
sub
mov
jg
add
sar
lea
jmp
pop
add
clc
add
shl
clc
nop
std
sub
xor
sub
cmp
jnp
and
aas
sbb
std
or
add
retf
sub
cwde
jmp
rol
pop
and
pusha
mov
shl
push
push
cmp
adc
add
pop
mov
fisttp
inc
jp
je
push
rol
add
hlt
out
push
jl
ret
mov
test
clc
mov
push
popf
adc
pop
jbe
and
sub
xor
xor
cwde
cmp
inc
mov
or
rcr
cmc
neg
inc
sbb
inc
or
mov
or
(bad)
jae
call
stos
ss
mov
sub
cmp
jb
add
mov
out
add
(bad)
adc
mov
cmps
push
repz
test
in
ins
cmps
adc
mov
inc
or
rcr
push
les
in
ja
push
and
push
loopne
inc
sbb
sub
mov
jmp
mov
jbe
inc
or
add
stc
mov
mov
dec
ret
jae
add
retf
out
and
jle
ror
push
not
icebp
lea
push
mov
jb
icebp
mov
push
(bad)
mov
icebp
test
push
mov
lea
adc
sbb
xchg
jnp
(bad)
pop
mov
retf
add
into
rol
in
fs
outs
jbe
add
fcom
pop
in
dec
mul
test
mov
mov
inc
call
cmp
je
mov
loop
jne
mov
push
mov
(bad)
in
pop
sub
out
mov
mov
icebp
mov
mov
add
push
imul
or
xor
add
test
pop
jmp
and
add
pop
push
cld
fistp
std
xor
test
sete
mov
sub
push
mov
mov
mov
and
stos
sub
and
sbb
pushf
jl
inc
adc
cli
sub
push
push
mov
pop
pushf
sti
add
xlat
mov
jg
add
dec
sbb
jne
mov
add
in
pop
dec
addr16
mov
add
enter
lods
std
es
add
mov
pusha
pop
push
sub
add
stc
dec
out
dec
fst
push
mov
add
call
pop
bound
inc
xchg
arpl
shl
in
out
or
adc
movsx
add
loope
jne
jae
mov
(bad)
cmp
je
sub
bound
rol
divps
test
cmp
mov
jns
and
xor
call
mov
ja
add
adc
mov
call
ds
jb
add
mov
mov
or
imul
call
sub
mov
mov
mov
add
and
sbb
jne
test
(bad)
lea
add
and
addr16
fsubr
call
je
loope
mov
fsub
jns
dec
and
push
cs
lods
cmp
xchg
add
cmovge
out
add
xchg
mov
sbb
ds
pop
sbb
inc
pop
sbb
xchg
and
sbb
mul
and
or
xchg
inc
rcr
pop
pop
mov
inc
pop
je
jbe
test
push
xchg
cmps
and
xor
or
jae
inc
add
add
movs
and
and
add
mov
and
xor
mov
lea
add
mov
inc
cld
(bad)
dec
jne
mov
jmp
lea
mov
mov
mov
pusha
stos
sbb
sbb
pop
xchg
(bad)
pusha
mov
inc
int3
inc
fst
les
or
mov
ud0
pusha
enter
fstp
dec
scas
push
add
push
push
mul
sbb
pusha
add
fild
dec
adc
pusha
or
jmp
adc
nop
fs
add
cmp
call
xchg
hlt
mov
add
push
lea
inc
adc
ret
add
sbb
and
aas
inc
inc
fld
rcr
mov
sbb
hlt
cmovne
mov
movzx
(bad)
adc
clc
or
xchg
arpl
jmp
add
pop
cld
mov
mov
xor
(bad)
cld
mov
add
fs
rol
pop
adc
or
ror
add
jmp
xchg
ret
adc
add
add
adc
push
je
dec
ss
xchg
mov
cmps
add
repz
movs
fcom
xchg
sub
movs
enter
dec
mov
std
inc
sub
inc
adc
and
xchg
stc
mov
jle
pushf
ins
mov
mov
push
mov
fld
cmc
push
rcr
sub
adc
mov
clc
inc
jo
xor
mov
das
(bad)
cld
(bad)
test
in
cmp
mov
dec
icebp
fcom
mov
push
or
sbb
out
mov
pop
pop
push
xor
push
lea
std
inc
rcr
rcl
sysenter
mov
mov
call
mov
push
mov
popa
scas
dec
cmps
and
(bad)
push
not
add
push
jb
test
call
xor
or
pushf
sar
mov
lea
sbb
ja
int
dec
in
(bad)
cmp
in
add
xor
test
jns
pop
movs
call
jns
add
out
test
je
je
loop
xor
jecxz
adc
in
mov
movs
push
shl
add
pushf
sub
fiadd
jge
jle
shl
xor
inc
push
sub
push
pop
es
jns
mov
loope
adc
pop
push
adc
cmps
or
ficomp
in
add
xchg
adc
outs
addr16
aaa
in
mov
pop
or
rol
inc
mov
fbld
test
push
xlat
pop
sub
call
or
shl
add
inc
push
loope
clc
add
cmp
xchg
aaa
xor
in
nop
imul
push
mov
cmp
jge
hlt
mov
arpl
sub
push
mov
cmp
xchg
push
hlt
(bad)
adc
call
adc
fsub
pusha
push
inc
out
dec
adc
hlt
jl
and
in
push
mov
adc
add
dec
add
or
(bad)
inc
test
dec
sbb
push
inc
mov
jne
(bad)
cmp
jne
push
push
lea
mov
jmp
push
lea
pop
push
sub
rcr
aam
push
mov
lock
pop
leave
int3
in
imul
ror
mov
or
inc
sbb
cmp
jp
jmp
inc
fs
out
mov
(bad)
push
mov
or
mov
test
lods
fild
jmp
mov
dec
aad
inc
aad
xor
add
cmps
add
lods
push
cs
mov
or
add
sar
into
adc
mov
push
mov
iret
shl
call
pop
nop
add
inc
cwde
mov
movs
pop
jl
inc
add
clc
call
dec
xchg
mov
cli
les
inc
mov
dec
mov
int3
inc
jne
in
fadd
test
mov
sub
or
icebp
xor
and
test
add
pushf
call
jle
add
enter
push
cmp
push
dec
sub
fdivp
fucomip
push
push
pop
cdq
mov
idiv
mov
or
aad
mov
inc
icebp
ret
or
(bad)
jae
add
std
retf
add
lea
mov
lods
arpl
push
into
or
inc
lods
or
jmp
push
xchg
add
jle
cmp
rcr
das
into
push
sub
cdq
aaa
push
icebp
scas
mov
sub
fld
sbb
sbb
inc
add
cmp
jne
hlt
daa
or
mov
inc
lock
mov
jmp
pop
out
ret
sbb
lea
push
push
retf
inc
add
dec
inc
aam
imul
pop
cmps
cmp
retf
jno
inc
xchg
ja
add
pop
add
add
mov
loope
xchg
fstp
stos
cmps
mov
sti
mov
jne
jo
or
xor
xchg
add
add
clc
add
cmp
aad
cmc
icebp
mov
rcl
int
xor
adc
jg
clc
cmp
cli
adc
retf
clc
sbb
in
rcl
ret
mov
fsubr
jmp
or
cdq
push
pop
idiv
jbe
call
pop
fmul
mov
sub
mov
cdq
mov
push
inc
cld
aam
(bad)
cmp
clc
test
je
mov
mov
cdq
idiv
mov
test
jne
mov
(bad)
jg
inc
clc
cmp
jge
test
jle
imul
imul
aas
sar
cld
add
lea
mov
cmp
cmove
cmp
je
mov
add
call
dec
adc
push
dec
adc
inc
jecxz
mov
adc
dec
lock
mov
sub
push
out
mov
call
pop
add
jmp
cli
(bad)
mov
xor
add
cmp
jne
mov
push
dec
pop
sub
mov
mov
ins
add
sti
add
pop
or
cdq
aam
idiv
pop
or
add
das
xor
or
add
adc
adc
jae
lds
in
or
sbb
por
inc
adc
push
inc
je
push
push
or
std
mov
pop
jmp
icebp
pop
adc
or
add
jmp
adc
push
clc
sub
ret
ds
mov
mov
sub
mov
sub
mov
mov
mov
mov
jmp
mov
inc
add
inc
adc
push
sti
mov
jmp
cmp
scas
outs
cmp
jae
cmp
je
lea
xor
jg
(bad)
mov
shr
cmp
cmova
push
sub
add
ja
std
inc
mov
mov
mov
lea
fs
add
addr16
push
push
push
dec
mov
dec
or
adc
(bad)
mov
sub
lea
xor
mov
xor
sub
(bad)
dec
mov
repnz
mov
mov
mov
inc
inc
cmp
add
pop
pop
fistp
or
add
or
push
ins
(bad)
pop
ret
fild
mov
mov
cmps
pop
je
popa
cli
inc
cmp
mov
gs
dec
xor
adc
sub
mov
inc
add
fs
mov
fsub
or
add
clc
sub
xchg
fucomp
mov
jecxz
push
mov
xor
lahf
jge
(bad)
(bad)
call
inc
adc
adc
mov
mov
mov
ins
mov
mov
lea
mov
mov
(bad)
(bad)
(bad)
jg
xor
mov
mov
mov
mov
mov
mov
mov
mov
lea
lock
dec
add
adc
push
mov
xor
cli
or
sub
jl
sub
dec
shr
outs
mov
mov
mov
push
movzx
ins
dec
mov
pop
xor
push
ror
mov
jg
add
lds
adc
lea
push
push
fwait
loop
cmp
or
cmp
dec
sbb
gs
fwait
sbb
aad
iret
cmp
(bad)
fmul
push
add
dec
dec
push
cmp
or
push
inc
je
xchg
mov
cmp
and
fnstcw
neg
xor
enter
inc
aam
inc
add
inc
fsub
add
loopne
sahf
push
add
frstor
lods
mul
mov
je
and
push
adc
and
push
das
mov
add
jl
dec
push
or
adc
push
mov
test
je
xor
(bad)
sub
adc
cmps
(bad)
(bad)
push
or
lea
sub
adc
and
dec
add
xor
xor
ror
imul
sbb
mov
arpl
adc
cwde
cld
push
pop
mov
mov
pop
cld
cmp
je
adc
(bad)
or
out
call
(bad)
leave
sub
jmp
push
xor
cmp
push
jmp
dec
fwait
loop
ins
test
add
mov
(bad)
jmp
add
jl
clc
add
or
add
ret
(bad)
(bad)
cmp
mov
mov
mov
mov
or
pop
sar
pushf
and
add
mov
jg
ficom
setbe
sbb
mov
test
add
je
push
jl
mov
dec
push
inc
cmp
inc
les
in
xchg
pusha
mov
cmp
push
mov
sub
xchg
fstp
das
and
js
outs
xchg
sub
inc
sub
inc
fstp
movzx
es
mov
ret
push
jge
hlt
fcomp
int3
push
(bad)
dec
xchg
hlt
dec
cmp
mov
inc
mov
inc
xchg
dec
push
ret
cmp
xchg
dec
inc
or
test
or
adc
xchg
sub
scas
xchg
mov
fsub
or
jg
add
jmp
lds
or
xchg
pop
push
xchg
test
pusha
push
cmp
das
in
or
inc
xchg
shl
and
popa
in
inc
add
inc
jb
cmp
enter
and
or
and
adc
mov
inc
ins
shr
int3
adc
inc
sub
add
mov
xchg
inc
push
mov
cwde
push
xchg
add
lea
(bad)
xlat
clc
add
cmp
push
add
test
mov
add
mov
push
pop
mov
stc
mov
test
(bad)
je
outs
cmps
loopne
std
add
lea
xchg
mov
xchg
ins
clc
jg
add
pop
adc
xchg
loopne
inc
add
aaa
xchg
jae
jb
jno
imul
test
cmp
push
add
or
pop
push
cmp
cmp
or
push
mov
mov
hlt
lods
call
mov
mov
xchg
sbb
sub
jmp
sub
out
imul
pop
add
cmp
jle
jle
aas
add
test
adc
jo
ja
fist
jne
adc
jmp
cmove
lea
add
fadd
pop
mov
adc
pop
sahf
inc
test
lea
pop
inc
pop
inc
les
push
pop
push
test
adc
mov
mov
lea
gs
and
inc
pop
cmp
push
js
dec
xor
sahf
mov
sub
fwait
xor
xchg
push
div
xor
add
fcomp
(bad)
aam
out
in
dec
in
dec
lea
mov
inc
push
and
cs
push
mov
cmp
cmp
dec
lea
outs
sbb
and
fcomp
out
(bad)
pop
daa
push
pop
inc
and
pop
or
outs
leave
lahf
cmp
pop
xchg
adc
lea
pop
adc
pxor
sbb
push
pop
daa
push
pop
jge
add
xchg
xchg
inc
mov
cmp
pop
xchg
fmul
sbb
mov
psubd
dec
dec
xor
and
mov
jb
xor
div
pop
je
cdq
jnp
mov
pop
adc
cmp
xchg
js
pop
(bad)
in
mov
or
(bad)
cmps
lea
jge
cwde
sbb
out
aas
add
lea
inc
shl
bound
xor
push
test
or
lods
xchg
call
sahf
gs
out
shl
pop
nop
push
or
cmp
jne
add
mov
cmp
sbb
xchg
sub
jp
jbe
pushf
adc
test
lods
dec
test
inc
lahf
cmp
aaa
pop
xchg
sub
bound
jb
sti
mov
int3
mov
and
test
xor
cdq
or
jmp
(bad)
jne
cmp
test
xor
dec
outs
xchg
pop
lea
outs
test
mov
shl
mov
pop
outs
daa
push
xor
iret
push
outs
or
hlt
cdq
xor
lea
mov
pop
mov
and
pslld
daa
push
pop
or
jp
pop
out
enter
sub
pop
in
cmp
and
jnp
fmul
and
push
into
jno
lahf
pop
or
aad
xor
pop
cmp
das
neg
and
mov
and
or
xchg
iret
push
pop
push
pop
neg
adc
sbb
outs
pusha
das
adc
and
jl
or
call
mov
cmp
sbb
ret
fmul
and
mov
aas
sbb
lea
gs
or
or
out
pop
adc
dec
xor
loop
icebp
dec
lock
push
mov
out
popa
inc
jnp
xchg
sbb
dec
or
mov
add
add
sbb
lea
popa
fstp
mov
dec
xor
leave
cld
pop
mov
jb
sub
call
fnstenv
adc
lea
xor
into
inc
aam
push
nop
adc
rcl
push
add
call
and
call
sbb
and
and
push
mov
hlt
add
inc
jae
and
push
icebp
aam
ror
push
cmps
repnz
aam
and
inc
fwait
cmps
fs
test
les
arpl
and
cmps
dec
fidivr
adc
stos
xor
xchg
or
in
push
adc
das
push
shl
div
push
les
adc
jae
fdiv
movs
jo
inc
and
inc
in
or
xor
cwde
jge
pop
pop
test
fdiv
mov
xchg
int
pop
ret
xchg
or
mov
dec
xor
shl
jne
mov
pop
add
cmp
lea
ror
fild
rol
sbb
push
cmovae
loop
les
push
add
add
int3
lea
inc
or
mov
test
je
cmp
int3
pop
cmc
stos
arpl
cmovae
stos
cmc
div
inc
xor
jl
mov
xor
xor
xor
and
retf
js
xor
test
add
je
sub
sub
arpl
or
lea
sbb
and
sbb
xor
jg
imul
and
jmp
sbb
or
pop
in
jl
sbb
push
lods
mov
imul
cmp
add
nop
mov
push
inc
push
test
imul
fs
push
int3
retf
add
mov
test
add
(bad)
pop
ins
cli
mov
mov
bound
mov
lea
mov
mov
mov
in
mov
test
(bad)
mov
mov
mov
movs
mov
mov
mov
add
add
push
jmp
jae
adc
movs
pop
xor
movsx
sub
inc
shl
test
mov
add
add
add
mov
ds
data16
jg
add
outs
test
push
ret
dec
movs
cs
mov
cmp
je
xor
lea
jg
cli
out
push
push
push
add
or
test
xchg
cmp
push
cmp
(bad)
add
jl
shl
add
pop
in
push
sub
fadd
xor
or
pop
jle
and
pusha
push
add
sub
fsubr
les
neg
(bad)
xor
push
sub
xchg
jnp
mov
xor
(bad)
push
fisttp
mov
mov
push
mov
mov
mov
sbb
aas
add
add
jbe
jb
test
sub
dec
je
jne
sbb
(bad)
push
popa
sbb
fistp
cmps
fadd
ss
lds
sub
mov
mov
dec
jmp
jge
add
jle
add
add
je
lea
push
fiadd
imul
mov
sbb
jge
add
jle
add
inc
push
add
and
sar
cmp
je
lea
jmp
inc
lds
cmp
or
xchg
sub
jecxz
adc
dec
sbb
sub
xchg
lods
push
inc
clc
cmp
jge
jb
push
cmp
jl
dec
xor
mov
pop
jmp
push
or
and
clc
mov
ja
add
xor
arpl
adc
pusha
pop
sti
inc
jo
enter
or
jae
xchg
dec
pop
and
dec
shr
cld
push
lahf
lea
or
enter
jecxz
or
jge
or
push
cmovae
rol
jbe
mov
xchg
inc
dec
add
iret
pop
mov
cdq
call
ins
pop
ret
dec
fcmovbe
add
push
push
call
sub
inc
sbb
pushf
loopne
loopne
jbe
pop
push
mov
cmps
lea
cmp
mov
sub
jnp
adc
call
or
sbb
cmps
or
stos
dec
ins
mov
dec
je
cmp
xor
cmp
sete
sub
je
dec
je
sub
xchg
cmps
adc
sbb
jmp
js
push
aad
pop
pop
sub
mov
mov
xor
add
xchg
outs
mov
or
int3
sub
or
dec
xor
pop
dec
gs
in
enter
scas
gs
inc
adc
xor
pop
mov
inc
mov
test
test
ror
xchg
shl
inc
mov
xor
pop
add
hlt
adc
sub
or
test
popf
mov
shl
aaa
(bad)
test
push
hlt
add
pop
xchg
or
jle
sbb
loope
call
xchg
xor
or
add
inc
gs
movs
test
cwde
pop
xor
or
push
pop
rcr
inc
sub
dec
pop
mov
inc
clc
sbb
mov
xor
je
les
in
and
add
jmp
inc
adc
sub
daa
movs
mov
sub
mov
cmp
sbb
jne
xor
dec
or
add
iret
pop
adc
inc
jp
add
mov
jmp
push
sbb
psrlw
push
add
mov
add
ret
arpl
sub
push
jmp
call
add
adc
(bad)
pop
mov
dec
in
sbb
imul
or
push
into
xor
add
inc
add
add
add
pop
out
add
sub
cmp
inc
cmp
mov
add
sbb
ja
mov
js
out
add
adc
or
push
ss
or
and
xchg
std
xchg
or
mov
inc
add
lock
test
add
shl
test
cwde
lds
aas
mov
test
rcr
add
test
or
je
mov
or
add
xor
mov
mov
dec
inc
mov
inc
test
enter
arpl
xor
fs
inc
or
test
xchg
or
je
adc
arpl
leave
enter
add
push
aam
gs
xor
dec
jle
add
jge
mov
cld
bound
sbb
les
outs
or
neg
inc
jmp
adc
push
dec
int
rcl
and
adc
jg
popf
dec
push
loopne
je
ins
push
lds
push
invd
lea
push
loopne
inc
(bad)
jge
call
push
push
push
call
jnp
pop
mov
loopne
repz
pop
and
cmp
mov
sub
and
inc
xor
in
xchg
sub
ds
je
mov
fist
add
je
mov
mov
mov
shl
(bad)
mov
fst
add
add
and
inc
cmp
cli
fcmovnu
mov
nop
sub
lea
loopne
(bad)
std
gs
pop
xchg
jg
add
ja
or
ret
inc
clc
add
mov
mov
ja
inc
lock
ror
sbb
dec
ror
xor
mov
mov
push
pop
mov
movzx
push
push
push
mov
adc
xor
or
mov
sub
clc
xchg
cvttps2pi
sbb
int3
ja
xor
adc
shl
mov
sbb
div
push
lea
add
mov
cmp
pushf
sbb
pop
mov
and
outs
cmp
mov
test
xor
push
hlt
adc
mov
pop
into
pop
xor
mov
mov
sbb
or
add
lds
js
add
push
pop
push
icebp
dec
mov
sub
(bad)
pusha
js
jmp
addr16
mov
sbb
(bad)
repnz
test
jbe
pop
inc
adc
mov
inc
and
test
je
adc
dec
and
inc
push
fild
lods
mov
add
add
cmp
add
mov
aad
and
cmp
je
cmp
jecxz
mov
push
call
add
mov
or
sub
mov
mov
xor
cmp
aaa
in
mov
fnstsw
xchg
lea
scas
jae
fmul
sub
popf
jno
mov
push
inc
stos
sti
std
and
xchg
or
test
into
enter
idiv
xor
inc
add
das
jmp
lock
inc
cmp
xchg
jne
xor
xchg
retf
jne
mov
push
cmp
jne
add
inc
add
inc
fwait
sub
xchg
shr
mov
or
push
adc
mov
cmc
shr
cmps
lock
sbb
adc
push
adc
jae
cs
add
add
dec
inc
add
xor
jl
sete
jp
out
and
or
add
or
pop
adc
addr16
sbb
rcl
retf
mov
sbb
inc
inc
fwait
jne
inc
jl
inc
ror
jne
mov
and
jge
add
xor
pusha
push
and
out
int3
mov
or
js
xchg
loope
and
cmp
and
add
push
and
je
inc
adc
or
(bad)
inc
jne
mov
or
sbb
add
je
mov
jae
dec
sbb
sub
inc
push
scas
stos
xchg
add
jne
in
mov
mov
sbb
mov
add
sub
add
arpl
call
mov
dec
add
pushf
cmp
sub
mov
ja
jo
and
jmp
cdq
and
dec
aad
imul
or
leave
add
test
adc
add
out
add
jp
sub
push
add
rol
dec
sbb
fisttp
stos
popa
xor
inc
(bad)
jl
cs
jns
fbstp
mov
xor
pushf
movzx
xor
aad
dec
stos
sub
ds
pop
or
xchg
mov
and
push
mov
sbb
add
mov
enter
rcr
and
mov
arpl
inc
add
push
push
xor
mov
push
push
or
push
enter
lea
int3
les
or
sbb
ins
push
push
xchg
xlat
dec
push
push
inc
mov
add
and
pop
push
and
int3
jo
and
push
or
xchg
cdq
ret
in
adc
push
enter
test
push
inc
dec
add
or
adc
mov
mov
push
push
sbb
push
dec
or
ret
push
mov
inc
and
lock
xor
mov
push
mov
fcomp
xor
nop
xor
idiv
add
xchg
inc
out
gs
pop
mov
add
popf
stos
jnp
shl
add
call
(bad)
in
push
das
pushf
data16
xor
ficom
mov
inc
fsubr
and
test
es
call
mov
(bad)
idiv
inc
imul
lea
or
add
sub
dec
sub
scas
js
xor
sbb
fcomp
and
xor
(bad)
(bad)
in
sub
inc
cld
mov
mov
sub
je
pop
xor
pop
push
lea
pop
xor
push
mov
fiadd
add
imul
repz
pxor
fdivr
lea
pop
jmp
les
das
enter
add
out
and
addr16
push
push
push
push
push
call
test
cld
jl
lds
(bad)
movzx
arpl
cmc
out
dec
mov
mov
mov
pop
or
dec
ret
or
push
mov
pop
pop
hlt
pop
cmp
idiv
(bad)
mov
clc
inc
push
cmp
je
mov
and
mov
inc
cld
lock
push
call
ds
push
inc
je
cmc
test
je
dec
inc
out
test
or
or
les
add
lahf
add
cli
jl
pop
mov
jb
pushf
xor
xor
add
ficom
jle
mov
ret
add
cli
test
iret
jo
push
sub
cmp
inc
mov
jns
add
ss
sar
push
pop
inc
mov
mov
mov
rcl
and
pop
aad
add
push
add
add
jg
adc
add
dec
adc
or
clc
call
cmp
in
jge
jbe
xor
adc
mov
mov
and
stos
lea
adc
mov
mov
inc
imul
inc
or
xor
adc
popa
add
jg
sahf
push
push
mov
lea
push
push
mov
jne
sub
inc
adc
jmp
inc
xor
ja
loop
add
adc
(bad)
jg
movs
test
inc
or
or
add
sbb
mov
add
lods
or
outs
std
fwait
mov
mov
mov
push
mov
push
mov
hlt
fisttp
add
add
fist
popa
jo
pop
mov
js
mov
push
add
fwait
mov
xor
jnp
dec
cmp
into
retf
jge
lahf
or
out
xchg
lods
and
add
mov
mov
pop
or
mov
mov
and
lea
add
cmps
clc
stos
outs
stos
dec
loope
dec
xor
out
pop
repnz
test
add
add
ins
adc
cmp
mov
xor
mov
pop
fmul
dec
dec
sbb
adc
jg
cmp
pop
or
test
push
xor
push
icebp
ja
(bad)
call
lea
push
lea
mov
push
lea
dec
add
sbb
mov
and
fmul
adc
mov
pop
inc
icebp
dec
imul
jbe
inc
loopne
fist
aad
mov
mov
add
push
or
jl
push
push
inc
push
or
paddd
rcr
mov
sub
xchg
xor
adc
mov
mov
cld
in
or
lahf
test
cmps
jo
shl
movs
adc
lahf
sti
jmp
data16
add
retf
ds
les
pop
sub
(bad)
rcr
(bad)
movs
mov
test
inc
adc
push
push
or
aas
test
push
pusha
test
or
push
stos
xor
dec
add
cmp
jne
cmp
add
pushf
lea
mov
aam
cmp
jo
mov
push
stos
and
cmp
stos
mov
add
call
fwait
in
ins
and
jmp
inc
sub
scas
sub
pop
std
inc
rcl
pop
adc
push
pusha
rcl
mov
stc
aas
je
cli
es
mov
mov
mov
mov
and
sbb
hlt
inc
mov
fwait
mov
fcomip
inc
or
mov
add
stos
cmp
add
add
lea
push
ins
or
mov
push
mov
mov
push
and
or
jo
outs
dec
cmp
push
cmp
add
stos
sub
xor
cmp
sbb
cmp
mov
fnstcw
stos
stos
or
xor
sub
cmp
je
mov
jle
sar
xchg
inc
sub
xor
std
lods
add
sbb
xor
xchg
xor
sbb
cmp
cmp
or
dec
(bad)
out
xchg
mov
and
fwait
jmp
mov
(bad)
push
(bad)
sbb
xor
xor
mov
add
mov
(bad)
shr
pusha
jo
mov
add
les
sub
pop
mov
and
add
pop
xchg
push
daa
lods
sub
lock
and
or
lea
scas
sbb
or
mov
push
sub
inc
add
mov
dec
rcl
add
xor
pop
adc
inc
cwde
add
adc
push
hlt
test
not
fmul
xor
xchg
add
mov
lods
jo
out
cmp
sub
jo
xor
es
pop
sbb
cwde
pop
cdq
mov
jge
push
or
cli
sbb
mov
xor
and
clc
add
pushaw
sbb
ret
outs
aad
dec
dec
lea
leave
and
sbb
xor
dec
and
sbb
dec
stos
sbb
add
outs
inc
sub
test
jne
nop
inc
ins
xor
add
xchg
es
mov
ror
stos
movs
push
mov
sbb
lods
int3
cld
push
xchg
add
dec
ds
cmp
ror
pop
scas
add
xor
jbe
or
push
jle
cs
jne
add
jp
nop
stos
and
mov
(bad)
pop
dec
into
pop
and
int
push
or
sbb
xor
mov
lods
sub
scas
cli
out
or
push
ror
jnp
inc
and
jb
out
bound
mov
cmp
push
shl
push
cmp
jne
push
push
push
xchg
or
mov
cs
jge
inc
por
push
call
int
pop
rol
xchg
cmp
jne
pop
and
push
test
add
inc
xor
xor
or
mov
sub
or
rol
push
and
and
add
sub
pop
lock
inc
or
pop
push
dec
adc
cmp
cmc
jmp
lea
das
aaa
lea
enter
inc
(bad)
and
mov
push
lds
add
mov
mov
mov
cmp
dec
fild
jle
popf
ins
push
(bad)
push
push
inc
ins
sbb
dec
inc
popf
mov
or
mov
add
in
adc
add
outs
add
push
fcom
mov
mov
jg
aaa
stos
push
pop
add
sub
lea
mov
(bad)
inc
fwait
test
outs
retf
pop
mov
mov
mov
mov
or
sub
xor
ret
push
push
sbb
mov
or
clc
clc
in
mov
jmp
adc
outs
popf
add
cs
and
adc
lea
push
cmp
lea
pop
jne
inc
std
push
push
call
pop
pop
sbb
sbb
cdq
jp
(bad)
mov
jg
add
mov
push
outs
push
clc
push
push
sbb
push
cmp
call
les
ja
mov
stos
or
pop
(bad)
out
vmovdqu
mov
dec
std
mov
mov
or
push
dec
and
mov
mov
or
paddusw
jg
test
cmp
jl
jg
cmp
jbe
cmp
jl
or
fbstp
icebp
jbe
push
push
stos
jg
inc
or
sub
(bad)
jg
jl
cmp
jbe
jmp
push
push
sbb
std
(bad)
aas
xor
jg
cmp
jae
xor
inc
jmp
inc
pop
fmulp
cmp
sbb
and
and
xchg
ins
jmp
ds
(bad)
call
pop
jbe
lock
add
pop
mov
push
sbb
ja
ds
pop
pop
jmp
xor
xor
pop
fiadd
dec
add
add
jl
call
or
xor
pop
jg
xor
arpl
xlat
stos
mov
ja
rcr
add
es
sub
in
mov
sbb
wrmsr
cmp
loopne
inc
cld
xchg
xor
sub
inc
cld
mov
inc
push
aas
add
mov
jo
fisttp
add
lds
xchg
push
push
icebp
inc
add
mov
popf
push
test
mul
adc
ret
pop
loopne
mov
and
push
pop
adc
pop
and
push
fist
lods
ins
lea
jg
push
add
out
inc
jo
(bad)
(bad)
push
dec
ja
stos
or
dec
xor
jg
inc
dec
push
mov
mov
sub
rcr
out
dec
pushf
sbb
mov
mov
push
je
cs
int3
ds
mov
and
sub
ficomp
mov
mov
adc
sub
aas
sbb
and
rcl
mov
fdivrp
jne
xchg
sti
(bad)
fdivr
jne
push
push
push
cmc
push
out
in
sbb
movs
retf
retf
idiv
popa
pushf
xor
mov
test
xchg
or
adc
inc
jmp
dec
(bad)
and
push
mov
sub
(bad)
jl
cld
push
pop
in
js
and
mov
cmp
jnp
sbb
mov
mov
mov
or
jge
mov
xor
mov
arpl
pop
cmp
adc
out
jmp
mov
jb
pop
popa
push
mov
call
stc
lahf
mov
lea
mov
mov
mov
pcmpeqb
out
mov
je
jmp
sbb
lea
or
jae
lds
jl
add
cld
mov
pop
jle
les
dec
lods
add
fild
lea
push
mov
mov
inc
ds
add
mov
xor
pop
int
push
inc
xchg
mov
and
mov
push
stos
inc
int3
sub
push
add
ss
or
nop
in
bound
dec
sub
lods
mov
add
lods
rol
sbb
cmp
stc
add
sti
scas
or
lods
enter
(bad)
push
sahf
clc
pop
mov
lea
add
sbb
xor
xchg
icebp
cmp
mov
or
icebp
xor
cmps
mov
add
das
lock
out
popa
sub
mov
fsub
push
push
in
scas
out
(bad)
mov
pop
lods
mov
mov
push
mov
cmp
leave
dec
pusha
xchg
scas
sbb
inc
sbb
iret
push
mov
test
cld
pop
sbb
mov
scas
xor
mov
add
cdq
test
fwait
sbb
sbb
mov
jge
pop
pop
dec
and
mov
retf
xor
scas
or
add
daa
stc
mov
mov
stc
mov
dec
push
mov
rcl
aad
inc
aam
mov
loop
adc
push
neg
inc
inc
add
mov
cmc
jg
cmps
jg
inc
test
cmp
add
or
inc
mov
lea
or
stc
mov
jo
and
pop
mov
lea
push
hlt
adc
sub
ror
mov
sar
add
cmp
je
sub
js
mov
pusha
je
mov
arpl
mov
outs
ret
in
dec
mov
fadd
jp
pushf
in
int3
push
push
inc
(bad)
scas
int
call
add
sbb
add
cmp
mov
jne
fild
cmp
test
std
jb
pop
(bad)
mov
push
data16
xchg
int3
jae
cwde
or
or
adc
jp
mov
loopne
std
jecxz
fs
push
inc
and
add
mov
call
dec
xchg
aad
test
stc
sub
rdmsr
dec
icebp
and
cmp
dec
inc
adc
inc
ret
and
push
repnz
add
rcr
ja
or
mov
dec
mov
cmp
add
outs
std
push
xor
push
mov
aaa
ins
jmp
mov
push
push
ror
push
mov
out
cdq
sbb
push
add
mov
lea
lea
dec
push
lea
mov
enter
or
xchg
add
adc
mov
cmp
outs
and
lea
add
clc
pop
pop
pop
mov
test
mov
ficomp
sahf
add
and
movs
add
xchg
cmp
mov
adc
jo
scas
push
mov
adc
inc
or
movs
and
test
xor
test
push
pop
hlt
adc
(bad)
lds
mov
outs
loop
mov
inc
push
shl
add
jne
fld
lods
clc
or
adc
jae
lea
add
pop
add
cmps
xor
adc
lds
add
jnp
sub
mov
bound
inc
not
je
icebp
adc
xchg
xor
sbb
loopne
les
mov
mov
(bad)
int3
and
cmps
addr16
loopne
mov
scas
sbb
retf
or
xor
jmp
add
lea
push
inc
mov
xor
ret
int3
add
ror
aaa
in
or
int3
lea
add
clc
pusha
adc
icebp
mov
lds
icebp
mov
xor
outs
sbb
push
push
and
shl
jp
loop
mov
fimul
inc
add
iret
pop
call
inc
adc
cmp
neg
je
dec
cs
push
or
inc
mov
inc
aas
adc
fmul
jl
sahf
inc
in
and
adc
outs
cmp
mov
add
mov
call
addps
adc
add
adc
jo
sahf
loope
sahf
mov
or
or
push
mov
jl
inc
stos
mov
push
mov
mov
adc
mov
cmp
mov
pop
mov
call
pop
cwde
add
fmul
sub
repz
mov
pop
retf
add
jmp
loope
cmp
and
push
mov
cmps
test
scas
sbb
add
sbb
lea
cmovae
add
in
mov
inc
lock
and
out
or
ror
jne
mov
outs
and
cdq
outs
cmc
jo
inc
int3
sbb
popa
mov
fidivr
movs
fild
push
mov
xchg
mov
sahf
xor
add
cmp
mov
push
inc
or
adc
jmp
add
ins
mov
pop
sbb
push
lahf
test
or
rcl
adc
sldt
xchg
out
pusha
loopne
(bad)
test
je
aaa
jbe
inc
add
push
sub
adc
pop
and
(bad)
ja
ds
push
lea
std
and
pop
icebp
cmp
or
xchg
ret
call
add
out
fs
and
add
xor
loopne
daa
adc
inc
lds
sbb
push
add
pop
shl
add
adc
mov
lds
ins
outs
inc
es
inc
dec
ins
push
cmp
xor
push
jg
sub
xor
lea
add
sub
(bad)
loope
fwait
out
aam
out
sub
pusha
pop
cli
cmp
jbe
xchg
adc
push
stc
sbb
sbb
inc
add
fisttp
xchg
mov
xor
adc
outs
addr16
test
xor
addr16
xor
nop
ror
or
pushf
or
shr
fnstenv
xor
jge
call
outs
push
add
cmp
lock
cmp
sub
pop
inc
cmp
loopne
pop
scas
cmp
leave
mov
add
fiadd
jecxz
mov
pop
sbb
mov
sbb
es
sub
jne
push
and
ja
or
jge
or
cmp
fimul
ret
fbstp
test
sub
loope
add
inc
call
add
pop
mov
jmp
fwait
and
test
push
push
jb
imul
jmp
adc
mov
cmp
in
pop
adc
test
test
pusha
outs
cwde
adc
or
dec
mov
add
add
in
xor
lds
sbb
sbb
call
sbb
mov
out
sbb
sub
cwde
lds
pop
daa
xchg
or
and
dec
pop
(bad)
adc
rol
mov
add
fs
test
outs
das
daa
or
int3
test
sub
mov
adc
nop
jno
adc
pop
push
cmps
mov
movs
pop
push
aas
adc
push
mov
xor
inc
dec
inc
icebp
ret
cmp
fdivr
sar
test
pop
jne
cmp
jne
cmp
add
cmp
hlt
jne
mov
into
cmp
je
gs
idiv
ror
jne
inc
mov
xor
mov
movs
sbb
test
loopne
or
adc
loop
push
push
imul
mov
jno
movs
ret
ret
inc
mov
push
popa
imul
dec
dec
test
call
sbb
jnp
rol
add
push
add
and
dec
fs
mov
push
xchg
add
mov
loope
inc
or
movs
lods
(bad)
movs
mov
mov
sub
sti
sub
lods
add
or
outs
and
test
sbb
jae
jbe
loopne
lods
jle
jne
pop
pop
sbb
add
(bad)
xchg
xchg
cmps
cmp
cmp
push
lea
aas
jmp
dec
cmp
add
fs
mov
add
or
mov
cmc
aaa
ror
je
(bad)
cmp
test
cmp
mov
jl
cmp
pop
and
adc
aad
dec
push
stos
outs
(bad)
pop
ret
stc
xor
mov
mov
cld
shr
cmp
sbb
inc
push
mov
xchg
inc
push
jo
xchg
cmp
in
mov
and
lea
mov
gs
cmp
lea
ret
sti
xor
push
add
lea
mov
add
lea
mov
add
out
mov
dec
pusha
inc
mov
and
or
dec
xor
mov
lea
cld
inc
call
ror
aad
or
jmp
cmp
inc
sub
(bad)
pop
xor
mov
fdiv
inc
mov
pushf
or
adc
add
js
loope
mov
mov
xor
mov
mov
xchg
xchg
fimul
hlt
cmp
add
sbb
mov
cwde
pop
test
cli
mov
xor
lea
loopne
popa
sbb
pushf
movs
pop
pop
jne
jmp
lea
test
lea
jae
pop
mov
pusha
pop
mov
xlat
mov
and
or
lea
out
mov
lea
lods
lea
in
and
lea
add
add
idiv
fmul
or
ds
shr
or
or
test
pop
inc
dec
mov
lea
sbb
in
add
push
mov
jmp
sbb
mov
xchg
sub
cmp
jmp
pop
or
and
push
cmp
xor
xor
(bad)
sub
or
jmp
xor
cmp
mov
add
jg
aad
lea
jne
ret
sub
popa
or
mov
mov
adc
js
xchg
cld
push
cmp
(bad)
xchg
push
mov
call
fild
jmp
add
dec
add
fist
add
jl
push
cmp
xchg
mov
mov
retf
mov
aaa
gs
dec
or
sub
mov
lea
jae
push
movs
fdiv
mov
movntq
scas
mul
inc
cmp
xor
and
add
push
push
inc
jo
ret
arpl
sub
shl
push
mov
mov
setbe
lods
fnstenv
pop
jmp
dec
div
jl
xchg
push
test
push
je
xor
pop
add
ds
test
retf
cli
sahf
xor
lea
pop
mov
sub
int
cli
jecxz
inc
neg
test
jmp
xor
jo
mov
(bad)
xchg
xor
(bad)
out
xchg
out
xor
pop
loopne
pop
and
and
xor
jecxz
cli
or
lea
cmp
sbb
ds
es
cli
leave
add
and
repnz
sbb
mov
jmp
pop
mov
iret
dec
add
mov
push
cs
mov
into
lea
adc
pop
push
out
fisubr
scas
nop
sbb
sbb
and
or
jmp
pusha
mov
fwait
push
(bad)
push
or
mov
dec
sar
fadd
jne
jne
daa
lds
and
mov
int3
or
jmp
or
push
bound
xor
call
mov
mov
call
dec
je
dec
je
inc
mov
inc
jmp
sbb
test
add
adc
jmp
cvtdq2ps
sbb
add
enter
mov
or
inc
jge
test
sete
mov
adc
add
ds
pop
xchg
sahf
mov
inc
aad
bound
add
mov
xchg
xor
adc
cmps
pop
adc
pop
sbb
adc
ins
cmp
call
shl
data16
lea
adc
inc
imul
xor
add
sbb
dec
dec
in
dec
or
push
mov
and
cmovb
adc
mov
adc
into
mov
out
rcl
(bad)
data16
mov
push
mov
or
jmp
fdivr
mov
push
cmc
mov
push
adc
push
or
mov
sub
push
push
pop
mov
jne
inc
xor
add
add
cld
call
and
aaa
push
push
dec
jae
aas
in
fs
push
push
push
mov
xor
push
mov
push
add
sbb
xor
fmul
test
dec
inc
cmp
jne
and
bound
fmul
dec
je
push
or
fwait
mov
push
xchg
out
pop
sub
adc
push
or
aad
jge
add
pop
or
mov
mov
push
sub
xor
and
pop
or
in
push
lea
mov
jge
jle
push
mov
mov
mov
arpl
les
bound
jp
arpl
pop
js
fstp
adc
ins
mov
push
call
and
pop
jnp
clc
mov
push
mov
gs
addr16
jl
jmp
mov
or
mov
scas
test
adc
js
jbe
xor
xor
adc
cld
mov
push
call
fwait
fwait
aam
and
stos
mov
int3
nop
aaa
adc
icebp
xor
mov
xor
push
xor
nop
cmps
cdq
xor
cmp
add
xchg
add
in
dec
add
aad
aam
in
fld
nop
or
fist
dec
call
xor
cmp
je
lea
out
sbb
mov
inc
int3
push
pop
mov
cmp
jne
mov
cmps
sahf
add
rep
push
xor
out
adc
icebp
xor
push
push
add
sbb
lds
and
int
jl
push
cmp
mov
push
jmp
jo
and
lahf
xor
inc
mov
clc
loopne
xchg
sbb
cmp
int3
xor
inc
adc
rol
or
lea
push
icebp
mov
mov
cli
rcr
inc
mov
and
dec
mov
and
cmp
dec
cld
scas
inc
rcr
call
and
dec
mov
push
mov
out
mov
jl
jne
sbb
xor
mov
inc
mov
lea
(bad)
call
mov
push
lea
mov
mov
mov
(bad)
ja
fild
dec
fs
push
mov
add
add
scas
stos
and
ds
xor
lea
xor
inc
inc
inc
js
inc
inc
lock
les
push
mov
inc
and
dec
adc
int
xchg
xchg
jo
pop
nop
push
or
jae
arpl
and
xor
sub
sti
sbb
lea
push
popa
jo
mov
dec
imul
inc
adc
add
popa
mov
mov
mov
out
ja
mov
sahf
add
test
pushf
inc
cmp
add
cmp
je
push
ret
push
jl
mov
mov
mov
aas
loop
ins
mov
mov
test
je
(bad)
fs
ja
push
in
mov
aad
fdiv
adc
add
mov
adc
or
cli
std
push
add
nop
call
push
adc
lahf
push
push
or
xor
mov
push
mov
mov
icebp
jbe
mov
je
inc
cmp
je
test
fld
mov
sar
sub
arpl
iret
push
mov
call
mov
fcom
mov
rol
adc
add
cmps
push
sub
repz
sbb
inc
or
jl
xor
push
inc
pop
inc
loopne
test
adc
xor
(bad)
and
and
ins
dec
push
ret
sub
cdq
mov
and
sbb
rcl
or
lock
div
sub
shl
dec
pop
push
inc
mov
sbb
xchg
mov
mov
loop
mov
or
push
cmp
and
arpl
mov
sbb
inc
pusha
or
xor
sbb
loope
inc
add
xchg
jge
ds
xchg
popf
mov
xor
mov
jns
loopne
push
push
popa
xchg
cwde
mov
add
out
in
pop
mov
xor
mov
in
mov
dec
cwde
xchg
ret
das
and
adc
mov
inc
pusha
aas
inc
add
aam
xchg
sbb
leave
adc
jo
mov
jp
mov
dec
inc
mov
inc
and
pushf
movs
xor
push
xchg
pusha
loopne
sbb
js
popa
jb
cmp
out
ret
pop
push
rcr
and
inc
repnz
je
dec
cld
out
fild
push
lea
sbb
and
aaa
push
les
lea
mov
imul
push
xchg
nop
mov
popf
or
sub
mov
xchg
inc
inc
xchg
push
pop
ret
xchg
add
lea
mov
cmp
or
pop
ret
mov
or
jo
cmc
add
dec
inc
std
jmp
xor
mov
mov
mov
cmp
jne
sub
mov
lea
mov
in
fcomp
add
or
imul
data16
pop
sbb
cmc
jle
jne
or
mov
xchg
pop
loope
add
push
mov
push
mov
adc
or
fs
bound
test
loope
add
push
dec
xor
add
add
mov
push
push
popf
push
popa
mov
push
and
lods
cmps
jo
cs
inc
push
es
lock
jb
cs
sbb
push
call
ins
scas
add
setbe
add
imul
xor
cmp
fidiv
mov
inc
pop
fwait
adc
cmp
or
mov
add
ins
adc
hlt
dec
push
jp
(bad)
shl
push
mov
add
lea
push
add
aad
xchg
mov
mov
jl
xchg
lock
adc
adc
mov
aad
xchg
xchg
sub
adc
sub
xor
add
ds
add
dec
daa
add
sub
push
ret
dec
and
mov
add
add
mov
(bad)
call
lea
pop
or
mov
or
add
or
push
les
(bad)
arpl
dec
js
sub
pop
push
rcr
shl
push
add
xor
xchg
adc
dec
jmp
or
addr16
mov
push
test
mov
mov
push
inc
jge
push
and
and
mov
(bad)
xor
arpl
cmp
jne
add
pusha
and
adc
je
cmp
cmp
mov
xchg
mov
push
sbb
lea
or
repnz
sti
pop
je
xor
push
pop
nop
mov
fimul
sar
xchg
pop
dec
icebp
xor
mov
cmp
leave
ret
adc
mov
dec
push
jmp
and
mov
add
out
jl
adc
rol
add
mov
and
jo
inc
inc
repnz
adc
pop
push
repnz
rcl
in
fldcw
cmc
push
mov
daa
mov
mov
mov
lea
shl
inc
lahf
add
arpl
add
dec
leave
retf
mov
mov
jmp
mov
cmc
pop
(bad)
jae
mov
stc
mov
fs
adc
sbb
imul
pusha
or
fs
push
cmp
cmp
jl
cld
call
inc
dec
mov
mov
mov
pop
dec
dec
jle
ja
jecxz
in
push
mov
pop
sbb
cmp
mov
push
hlt
add
add
or
fisttp
sbb
loopne
and
psubsb
mov
dec
pop
cmp
jmp
icebp
into
xchg
cmp
pmulhw
mov
pop
add
sbb
mov
cmp
add
mov
nop
cmp
mov
ret
add
mov
je
adc
and
dec
sub
cmc
jg
xor
jae
and
adc
xor
lea
add
inc
lds
imul
jnp
push
jg
je
cmp
cmp
jle
cmp
je
mov
jmp
outs
inc
adc
adc
rol
inc
jg
lea
push
loopne
pop
(bad)
xor
cmp
inc
pop
add
add
or
iret
xor
mov
mov
ret
mov
mov
xchg
add
pop
sbb
pusha
sbb
push
inc
cmps
adc
sub
das
inc
pusha
adc
add
sbb
lods
or
xchg
mov
loopne
cli
arpl
dec
mov
jl
add
call
inc
push
cmp
je
push
and
add
add
stc
cmp
adc
push
stos
sti
sahf
movs
mov
jb
iret
jbe
pop
mov
add
les
(bad)
sub
or
sbb
xlat
lods
mov
sub
or
(bad)
fild
push
nop
push
push
cmc
inc
sbb
mov
jge
cwde
or
aaa
pop
scas
xor
rol
push
addr16
in
test
lods
adc
data16
and
add
jne
add
add
xor
and
call
inc
inc
xlat
popa
js
sbb
ficom
mov
ror
sub
iret
mov
imul
js
xor
popa
fcmovnb
gs
or
js
add
je
mov
pop
add
and
push
mov
pop
adc
pop
jo
push
adc
mov
loop
pusha
in
or
and
int3
mov
mov
mov
adc
stos
mov
push
push
bound
add
adc
and
and
stos
sbb
out
pop
aas
sbb
sub
cs
sbb
sbb
scas
fwait
adc
pusha
pusha
sbb
xchg
jb
outs
mov
push
pop
test
mov
in
sbb
add
add
fs
and
push
push
inc
and
xchg
ret
lds
pop
js
xchg
in
shl
test
mov
mov
cmp
xor
inc
jl
add
cmp
add
or
dec
inc
lea
lods
sbb
sub
mov
je
cmp
xchg
jae
pushw
dec
(bad)
mov
sbb
add
pop
push
je
loop
xchg
pop
or
ja
pop
push
je
paddw
loop
pop
dec
je
push
call
pop
lea
add
pop
je
(bad)
mov
pop
pop
push
mov
mov
sub
sar
test
jg
out
shl
fs
add
inc
add
cmp
jb
mov
aaa
leave
test
push
push
pop
cmovg
lea
icebp
(bad)
pop
je
js
data16
mov
fnstenv
lds
sbb
jge
mov
(bad)
jmp
push
mov
push
pop
cmp
jne
cmp
jne
mov
jg
aas
test
jne
xor
je
cmp
add
adc
pusha
add
jo
lahf
mov
test
inc
mov
ja
dec
and
sub
inc
icebp
mov
or
inc
or
mov
jp
rcl
add
daa
add
sub
and
pop
pop
shl
pop
add
xor
mov
mov
pop
mov
cmp
je
pop
cmp
cmpxchg
cld
fild
enter
cmp
je
jg
push
je
cmp
ja
jg
rol
add
pop
cmps
ja
pop
adc
test
fucomi
inc
cmc
call
inc
or
adc
outs
fldcw
es
add
sbb
dec
loopne
add
adc
(bad)
movs
inc
push
fsub
lock
xor
adc
daa
and
xor
adc
movs
nop
jnp
sbb
pop
and
mov
cld
mov
test
dec
sub
add
addr16
jg
bound
mul
sbb
test
mov
mov
ds
and
mov
mov
pushf
and
sbb
sti
push
xchg
imul
cmp
xchg
unpckhps
mov
and
sbb
jae
or
xor
aas
clc
outs
push
jae
mov
cmp
jge
inc
(bad)
loopne
or
iret
das
dec
push
push
(bad)
push
mov
add
pushf
aam
cli
or
push
call
adc
sub
or
bswap
adc
push
test
push
ins
or
mov
sub
lods
mov
add
mov
outs
jle
jmp
jle
push
push
and
sub
xchg
adc
jno
aaa
sub
test
dec
add
xor
xbegin
pop
push
jmp
sub
push
jmp
pop
loope
and
imul
mov
jmp
mov
jmp
(bad)
ins
mov
jmp
mov
xchg
mov
outs
cli
dec
mov
add
mov
test
daa
mov
and
and
(bad)
jg
rol
jns
add
ret
mov
and
and
loopne
mov
inc
push
adc
es
popa
inc
jg
cmp
je
cmps
inc
adc
or
add
add
cwde
jp
adc
sub
enter
cld
mov
adc
aad
push
ja
mov
sbb
add
push
sti
aas
and
cmp
jne
pop
push
pop
sbb
mov
lea
clc
mov
jbe
cmp
inc
clc
retf
std
stos
jmp
(bad)
out
jo
adc
add
fiadd
js
or
lock
cld
adc
sub
adc
add
stos
xchg
ret
mov
in
and
mov
dec
addr16
inc
loopne
call
mov
mov
adc
stos
call
sbb
fwait
loopne
mov
gs
ja
lods
or
add
inc
(bad)
mov
add
rcl
push
mov
retf
xchg
push
shl
pop
adc
pop
fmul
js
pop
clc
sub
(bad)
out
cli
push
push
mov
jle
cwde
mov
push
push
mov
mov
call
adc
pop
mov
lea
push
ret
bt
sub
inc
inc
mov
add
mov
or
dec
jl
mov
mov
enter
push
outs
xchg
sti
cmova
push
lea
outs
sub
dec
or
lea
jne
sub
cmp
sub
test
or
ins
sub
enter
mov
jle
adc
pop
mov
mov
popa
add
adc
shr
mov
lea
or
test
add
add
add
adc
inc
push
call
cwde
pop
cmp
je
cmp
je
cmc
push
mov
(bad)
fdivrp
nop
lea
push
push
nop
push
push
push
add
push
pop
stos
mov
xor
push
push
add
in
sahf
scas
pop
push
or
inc
xchg
je
jg
pop
pop
cmp
je
push
lea
push
dec
dec
nop
push
add
jae
pop
or
hlt
sub
ins
in
mov
stc
loope
jmp
adc
dec
clc
loopne
or
push
gs
inc
sbb
(bad)
jle
mov
xlat
xor
inc
xor
clc
mov
sbb
fist
pusha
daa
mov
fstp
fnstcw
fild
or
je
or
fild
cmp
mov
fmul
or
cld
pop
add
cmp
push
je
mov
push
mov
je
repz
stos
add
cmp
cdq
lea
add
add
add
xchg
imul
push
pop
sbb
push
xor
inc
loop
pop
add
push
mov
lea
mov
and
ja
push
or
mov
rsm
icebp
cmp
push
mov
jne
jmp
add
pop
cmp
mov
push
push
inc
hlt
inc
mov
pop
or
sar
mov
mov
loopne
and
mov
add
or
mov
add
push
lock
and
sar
xchg
xor
fild
add
sar
xor
mov
mov
shr
and
ret
adc
(bad)
jae
mov
jmp
add
cmp
cmovb
push
inc
fwait
aas
je
cmc
aas
ja
outs
adc
retf
or
pop
mov
inc
add
je
and
aaa
lea
push
lds
repz
jnp
jne
or
jne
mov
sub
and
push
in
ja
pop
int
pop
mov
add
inc
mov
fdivr
cmp
clc
(bad)
(bad)
mov
mov
lea
mov
lea
daa
add
fnstcw
push
push
bound
call
cmp
je
cmp
je
push
fld
inc
aad
add
add
add
xor
mov
jg
adc
lea
xor
lea
test
jne
mov
mov
test
je
lea
mov
mov
mov
pushf
test
js
or
inc
jl
cmp
pop
push
sti
cmp
inc
pop
cs
xchg
push
cmp
xchg
xchg
push
or
sbb
adc
lea
jmp
push
jo
test
mov
pop
pusha
loopne
add
inc
adc
out
js
add
adc
icebp
or
cli
sub
iret
in
fisttp
ret
fist
dec
clc
test
je
mov
idiv
mov
dec
retf
cmp
jge
test
jle
lea
icebp
(bad)
add
mov
mov
mov
ror
mov
mov
dec
icebp
mov
mov
mov
sub
(bad)
(bad)
(bad)
dec
lea
mov
sub
cmp
lea
mov
cmovl
cmp
jne
mov
and
pop
sti
ins
hlt
add
mov
idiv
cmp
(bad)
sbb
mul
pusha
sub
add
jmp
sti
adc
punpcklbw
hlt
xor
mov
cmp
jbe
test
shr
add
inc
add
push
or
out
pop
mov
adc
xor
stc
push
push
sbb
mov
fdivr
(bad)
dec
in
mov
mov
mov
mov
mov
lea
push
push
and
ror
mov
jno
(bad)
jg
dec
fcomp
or
add
dec
loopne
dec
or
mov
shl
int
shr
outs
add
test
mov
sub
mov
adc
hlt
jge
call
cmp
(bad)
call
movs
sbb
leave
push
pop
lea
mov
mul
seto
neg
or
dec
push
mov
push
and
hlt
mov
jmp
push
push
push
dec
dec
push
call
xor
inc
xor
sub
jne
push
(bad)
arpl
jp
shr
lods
test
inc
stc
mov
mov
mov
push
cmc
add
(bad)
in
outs
dec
dec
cli
cmovb
push
div
mov
ret
jne
mov
cmp
test
add
add
add
call
lock
fstp
add
call
mov
adc
lock
ss
fnsave
inc
enter
mov
xlat
and
cmps
(bad)
cmp
mov
xchg
loopne
fs
and
fs
xlat
xor
cmps
in
add
stos
or
jg
int3
push
push
in
adc
push
scas
daa
jns
push
mov
scas
enter
les
sti
pop
inc
inc
add
mov
mov
jmp
sbb
push
mov
jmp
je
(bad)
push
mov
pusha
in
cmp
add
sub
pop
fwait
mov
push
push
mov
push
add
push
lea
pop
mov
mov
or
aad
(bad)
loopne
lods
(bad)
adc
sar
sub
je
dec
je
dec
jecxz
jbe
test
mov
jmp
xchg
mov
inc
lahf
iret
scas
icebp
mov
mov
mov
aaa
mov
jg
icebp
mov
or
lock
test
push
push
fdivr
jg
push
push
fmul
xor
jg
ins
mov
outs
or
cmp
push
xchg
jne
lods
std
mov
push
push
add
popa
adc
xor
mov
and
or
adc
(bad)
adc
lods
pop
sbb
je
sub
jnp
mov
mov
fist
sbb
push
mov
add
idiv
mov
pop
popa
les
stos
pop
mov
add
push
push
cdq
clc
pop
(bad)
dec
cld
mov
xor
pop
sar
and
jge
mov
mov
(bad)
fist
inc
or
inc
add
dec
or
or
push
mov
push
mov
pusha
loopne
inc
in
mov
rol
std
cmps
dec
arpl
call
push
xlat
arpl
inc
dec
in
xchg
pusha
lock
nop
pop
fist
jge
push
xchg
jp
scas
jmp
push
mov
fcomp
js
jne
pop
enter
aaa
gs
fsubr
lahf
push
call
dec
adc
push
bound
adc
pop
call
lea
xor
stos
stos
stos
xchg
inc
clc
lea
push
mov
test
mov
mov
psubb
arpl
cmp
je
sbb
and
scas
ret
adc
push
and
xor
test
jmp
test
out
ins
push
mov
dec
lock
pop
clc
mov
pop
hlt
or
inc
clc
inc
add
nop
test
jg
pop
push
addr16
push
add
sub
push
push
pop
inc
xlat
enter
adc
add
sbb
push
ret
add
sub
or
arpl
bound
movs
jmp
pop
jne
pop
push
push
add
inc
dec
pop
in
or
inc
in
in
jmp
mov
enter
sub
lea
mov
mov
mov
out
test
adc
mov
mov
mov
push
fdiv
and
les
loopne
(bad)
out
call
jmp
xor
mov
mov
enter
inc
add
ins
add
adc
pop
push
sbb
mov
aas
aas
inc
add
inc
adc
and
pop
add
push
das
or
mov
pop
addr16
call
xor
xor
pop
cmp
inc
mov
(bad)
push
dec
mov
mov
push
push
mov
mov
jle
pop
pusha
push
push
(bad)
xlat
out
push
into
push
mov
jae
inc
sbb
add
or
inc
or
mov
cs
pop
or
mov
hlt
jbe
popa
inc
lock
pop
xchg
push
sbb
fs
pop
sbb
and
call
mov
dec
sub
jbe
call
cmp
push
jmp
push
push
dec
add
ins
push
mov
xchg
scas
xchg
fisttp
out
daa
pop
test
lea
xchg
mov
test
idiv
aas
fdivr
pop
push
je
push
call
mov
cmp
or
push
ds
lahf
out
pop
dec
dec
dec
cmp
inc
inc
lea
scas
test
cmc
and
repz
dec
pop
sar
pop
sbb
sbb
cmp
or
iret
repz
sbb
pop
adc
adc
pop
adc
adc
xor
sbb
in
xchg
add
stos
aad
gs
and
mov
push
add
mov
pop
ret
push
push
push
je
and
lods
sub
lods
fwait
xor
adc
pop
jmp
sub
sub
adc
xchg
rcl
push
pop
loopne
adc
push
and
call
and
jmp
test
(bad)
xor
cmp
pop
setne
inc
push
or
ja
fs
adc
or
add
cmovne
sub
jg
jno
test
mov
sub
sub
lds
loop
arpl
sub
add
nop
sbb
push
xor
inc
test
sbb
sbb
dec
les
or
or
inc
enter
dec
inc
xchg
ins
mov
mov
loopne
test
jmp
pop
jmp
cmovae
push
push
clc
fs
aas
add
loopne
push
mov
mov
sub
in
mov
scas
inc
call
xchg
mov
jle
add
sbb
jl
fisttp
mov
xor
inc
arpl
cld
ror
push
cmp
or
add
push
add
jne
mov
mov
xor
in
into
adc
scas
cmp
lea
push
push
pushf
or
sub
inc
jg
rcr
mov
mov
scas
sbb
xchg
add
mov
test
jne
test
inc
loop
add
pop
inc
pusha
ret
or
mov
dec
call
inc
ins
mov
or
push
push
push
mov
jp
pop
push
push
push
dec
xor
test
dec
mov
inc
les
mov
jle
sti
mov
add
inc
ds
fnstsw
bound
xor
push
lea
adc
stc
pushf
lahf
cmp
sub
add
mov
sub
mov
cmp
cmp
add
and
js
cmp
dec
jno
inc
mov
or
lock
cwde
fnsave
daa
pop
mov
inc
mov
or
aas
jg
std
arpl
cmp
push
push
and
call
stos
xchg
daa
invd
xlat
mov
pop
cdq
or
jg
xchg
cmp
je
push
xchg
and
push
push
push
pop
push
pusha
sbb
add
add
jge
fmul
(bad)
or
ud0
call
(bad)
cmp
mov
mov
sbb
je
push
int
pop
add
repnz
adc
dec
sub
mov
push
adc
gs
je
inc
sbb
xor
call
cmp
je
push
cli
(bad)
aas
adc
xchg
pop
jmp
mov
cmp
jne
pop
jmp
adc
adc
js
sub
xchg
call
and
cmp
enter
xor
xchg
xor
mov
cmp
xchg
jmp
or
mov
jne
call
loopne
or
cmc
mov
pop
popa
mov
gs
inc
aam
or
jne
mov
push
popf
hlt
mov
mov
pop
rol
sbb
ficomp
cmc
(bad)
shr
add
push
adc
inc
push
mov
cmp
je
loope
inc
icebp
sub
mov
les
shl
jmp
lock
cmp
xchg
test
stos
push
popa
leave
or
pusha
in
int3
shl
jp
ins
push
mov
or
sti
xchg
cmp
fs
mov
in
push
mov
pop
imul
lock
hlt
mov
sub
neg
push
mov
fsub
inc
fmul
out
push
push
lea
fcomip
(bad)
adc
jae
mov
xchg
pusha
lock
cld
dec
mov
gs
jnp
add
push
pop
xor
lea
adc
inc
outs
movs
push
push
push
(bad)
push
jne
ja
push
xor
mov
push
push
push
push
mov
into
push
call
les
push
mov
aam
cmp
pop
movs
sbb
dec
lea
cmp
jnp
mov
enter
data16
or
cmp
sbb
das
jbe
nop
mov
ror
pop
push
adc
mov
inc
fcomp
xor
mov
add
sbb
(bad)
jl
mov
lea
pop
mov
xor
jne
movs
mul
movs
movs
push
fsin
add
hlt
jmp
xor
or
inc
pusha
push
neg
add
cmp
jne
adc
ja
aam
push
and
cmp
dec
or
sbb
das
stos
xor
sub
arpl
cmps
inc
fist
jge
add
pusha
retf
xchg
and
pop
inc
int3
pop
or
lock
mov
(bad)
nop
leave
push
shl
xchg
pop
push
mov
loop
cmp
cmp
mov
call
in
shl
movzx
or
push
push
cs
call
push
xor
mov
push
push
(bad)
(bad)
retf
jmp
sub
jmp
push
(bad)
(bad)
fcomp
or
ror
or
icebp
jle
push
push
adc
inc
inc
shr
sbb
lock
cmp
jge
sub
icebp
fstp
sub
jne
and
sbb
adc
xor
or
sub
xchg
or
mov
cwde
mov
pop
fwait
push
mov
push
aaa
popa
test
cmp
dec
cmp
dec
ja
add
mov
add
fld
or
fs
pop
loopne
scas
mov
jb
mov
push
add
lea
call
(bad)
xor
pop
push
lea
movs
dec
std
cmp
push
rol
push
sub
lahf
and
mov
lea
dec
icebp
xlat
lds
push
jl
mov
into
sbb
mov
mov
push
(bad)
pop
fadd
shl
add
pop
or
mov
call
loopne
pop
aas
les
stos
movs
sub
or
add
push
push
les
fcmovnb
or
mov
enter
mov
xor
add
inc
rol
add
sbb
jnp
add
stc
not
loopne
fsubr
test
dec
fcomp
sbb
mov
adc
sbb
push
add
ret
add
sbb
sbb
mov
sbb
(bad)
push
jle
lea
push
adc
shr
push
fdivr
mov
aad
in
push
js
inc
mov
xchg
dec
xor
mov
test
mov
icebp
in
xor
cmp
mov
pop
cmps
push
imul
lds
loop
daa
pop
sete
xor
and
inc
add
mov
xor
mov
test
retf
cmp
xchg
fmul
push
scas
sbb
les
pop
mul
fiadd
leave
dec
imul
loope
leave
adc
jg
fcomip
cmp
add
push
out
mov
dec
jns
inc
dec
call
inc
in
xsaves
hlt
in
push
push
lods
add
pop
stos
nop
gs
test
test
add
inc
outs
push
add
cmp
sti
jb
xor
je
jl
mov
push
push
jnp
iret
jmp
push
pop
add
inc
inc
cld
jno
sti
add
push
push
loopne
or
cmp
push
add
loop
cwde
clc
mov
ret
jle
cmp
cmp
dec
mov
mov
cmp
fdivr
and
jg
je
mov
cmp
jne
add
jne
xor
jmp
sbb
xor
enter
push
push
lock
mov
in
mov
(bad)
out
or
sar
and
lea
loopne
les
mov
jg
dec
cmp
mov
pop
pop
push
ror
ror
movs
and
add
mov
and
adc
not
and
push
xchg
mov
fistp
push
xor
cmp
jnp
jns
test
int3
add
(bad)
push
lea
push
cmp
xchg
push
ins
je
cmp
or
je
add
call
adc
push
femms
pop
nop
add
stos
pop
xor
test
push
or
push
lods
mov
loope
or
add
or
mov
test
inc
shr
xchg
sub
adc
add
sub
sar
mov
dec
stos
or
mov
mov
sub
loopne
sbb
daa
clc
cmp
jmp
push
jmp
lea
inc
scas
or
push
pop
xchg
or
dec
inc
adc
push
in
sbb
mov
jbe
add
mov
(bad)
fisttp
mov
push
call
test
je
mov
out
cmp
ret
mov
cmps
je
or
lahf
lea
sbb
js
jno
mov
xchg
ja
mov
push
mov
mov
jne
jb
std
dec
jg
mov
push
pushf
inc
lahf
call
inc
inc
sahf
rcl
fistp
add
add
push
jecxz
pop
xor
mov
pop
push
call
push
cwde
call
mov
mov
test
je
push
mov
pusha
mov
gs
aad
aas
je
jne
bound
push
fsub
push
int
push
enter
sahf
mov
call
fwait
test
ret
push
add
inc
sar
adc
cwde
push
xor
cld
mov
fdivr
push
inc
push
push
(bad)
test
adc
mov
add
mov
xor
push
lea
imul
inc
cwde
sub
inc
mov
mov
mov
jge
dec
mov
push
inc
mov
push
mov
retf
or
or
mov
xchg
mov
pusha
(bad)
fld
sub
push
fcomp
and
cmp
push
mov
or
test
cs
dec
add
sub
adc
aas
fs
mov
jg
push
jmp
cmp
jne
push
cmp
jne
push
mov
rcr
cli
mov
call
mov
not
arpl
bound
fsub
mov
add
add
or
aas
push
es
sub
cmc
mov
push
mov
mov
xor
and
pop
inc
ror
int3
xchg
jl
call
pusha
push
xchg
hlt
aam
aam
aas
xor
inc
dec
push
sbb
test
mov
adc
std
push
loope
lock
adc
sub
inc
pusha
dec
je
jg
je
sub
jne
mov
push
movs
mov
pop
mov
pop
add
lock
add
mov
push
and
mov
push
mov
add
add
add
cdq
add
test
push
mov
xor
push
fs
int3
je
into
push
and
popa
mov
(bad)
test
dec
mov
mov
pop
mov
int3
mov
jmp
adc
add
or
dec
add
sub
leave
and
push
cmp
and
call
movs
and
aam
inc
adc
jne
imul
push
push
mov
shl
inc
dec
sbb
dec
cmp
adc
or
xchg
mov
mov
out
cmp
sub
dec
pop
mov
sbb
dec
add
inc
and
mov
cmp
cmp
je
xlat
jecxz
outs
retf
repz
add
mov
push
das
mov
add
push
mov
(bad)
push
xor
push
mov
xchg
xchg
retf
push
push
loop
hlt
sbb
cmp
mov
pop
push
test
cmp
inc
jg
xor
cmp
cmp
add
mov
jne
xor
cmp
and
or
push
and
repz
call
dec
mov
(bad)
push
jne
cmp
add
xor
jmp
mov
xor
test
pop
fist
std
lds
and
or
int3
cmp
mov
sbb
jne
ficomp
sub
push
add
push
cmp
mov
dec
cmp
mov
test
push
mov
icebp
mov
lea
mov
movs
sbb
gs
jl
sub
push
push
adc
dec
inc
in
pusha
sbb
rcl
popa
mov
jl
movzx
push
cdq
jo
add
xchg
sub
add
lea
jae
mov
stos
bound
jl
add
js
rcl
dec
add
xchg
xchg
sbb
fwait
add
or
jl
jmp
adc
clc
and
mov
push
adc
mov
or
add
fbstp
scas
pop
das
outs
sbb
add
call
add
pop
jecxz
pop
call
or
aaa
into
jne
xor
cdq
dec
ja
and
sbb
aaa
adc
and
sbb
je
add
shr
add
cmp
sbb
inc
repnz
call
mov
js
stos
dec
(bad)
xor
xor
inc
xor
add
shl
clc
dec
cmp
popa
or
fadd
hlt
sub
es
mov
add
push
or
push
call
xchg
mov
and
lds
icebp
pop
jecxz
fimul
push
pop
cmove
push
xchg
outs
inc
sub
jo
cld
adc
jl
push
pop
add
dec
lea
cmp
les
pop
mov
jle
cs
cmp
mov
add
lea
push
enter
cmps
add
sub
mov
sbb
loopne
das
mov
mov
and
push
(bad)
(bad)
push
scas
or
mov
sub
adc
mov
dec
fcomip
push
aad
dec
dec
add
lods
test
je
(bad)
jmp
pop
lds
inc
rcl
pop
pop
je
and
adc
and
push
nop
test
mov
jecxz
int
stos
cwde
add
xor
(bad)
dec
cs
cmp
imul
sti
or
push
push
mov
loop
xor
test
push
jle
push
pop
add
inc
gs
fwait
sbb
cmp
test
add
sub
or
jg
fisttp
mov
mov
and
or
jb
neg
outs
mov
pop
ds
shr
mov
push
push
mov
ret
leave
inc
add
jle
popa
mov
sbb
xor
mov
add
inc
cmp
mov
and
xchg
or
pop
and
add
(bad)
mul
adc
push
neg
lods
sub
xchg
push
or
xchg
lds
inc
add
adc
or
add
ret
sub
je
retf
call
xor
cmc
test
or
mov
pop
inc
in
cdq
idiv
inc
pop
adc
push
adc
push
and
test
ficom
into
mov
sbb
push
xchg
adc
pusha
js
push
into
pop
fst
pop
rcl
leave
jmp
mov
scas
adc
imul
cmp
jl
add
mov
cwde
jae
and
cmc
jne
mov
push
push
test
enter
xor
mov
sbb
jl
cwde
rol
lahf
xor
loopne
jb
sbb
shl
xor
jmp
ficom
mov
mov
add
mov
jno
mov
and
sbb
daa
cmp
clc
daa
cmp
mov
in
dec
and
inc
and
sbb
jg
mov
movs
(bad)
out
or
and
loop
add
jmp
rol
into
adc
into
mov
stos
cmps
dec
lea
sbb
pop
imul
push
pusha
cmp
push
and
daa
push
mov
jmp
loope
in
call
cmp
and
test
test
push
hlt
sub
dec
movs
ja
add
xchg
and
push
icebp
sub
jnp
ficomp
add
push
pop
pop
jnp
mov
adc
pushf
sbb
sahf
in
xor
push
push
nop
mov
jecxz
or
sbb
sub
ret
fsubr
xor
sbb
inc
cmp
mov
idiv
add
rcr
xchg
push
xor
pop
das
cmp
cmp
lock
pop
xor
cmp
sbb
popa
fdivr
inc
xchg
daa
cmps
cmp
je
ret
stos
sbb
adc
mov
ret
adc
out
cmp
lods
mov
mov
mov
adc
xchg
or
add
ss
jle
or
cmp
fdivr
repnz
popf
dec
add
js
jne
loop
gs
fsubr
fs
ret
pop
and
clc
mov
aas
and
jg
inc
pop
out
sub
add
inc
and
sar
mov
sbb
sub
fs
push
pop
sbb
test
dec
and
push
inc
xor
add
push
push
jne
pop
scas
sti
xor
push
sub
lahf
add
je
xor
std
push
or
call
js
loopne
je
fisub
or
inc
push
push
and
adc
inc
pop
and
sub
mov
push
mov
cmp
aam
cmp
inc
mov
cmovge
push
mov
mov
pop
mov
idiv
push
movs
add
aad
out
dec
inc
and
mov
ret
dec
or
add
js
test
pop
sub
gs
arpl
in
jns
jl
lds
xor
jge
cmps
mov
scas
cmpxchg
inc
pop
mov
adc
mov
push
xor
mov
xor
cs
outs
lds
inc
or
xor
mov
outs
push
sar
(bad)
jle
cmp
sub
inc
ins
ret
mov
jle
xor
hlt
sub
hlt
adc
test
push
jmp
or
jne
ds
ins
push
and
pop
fisubr
and
or
mov
mov
cmp
je
dec
and
or
sbb
xchg
cwde
in
inc
sahf
sub
dec
mov
(bad)
sbb
push
xor
loopne
ja
add
jne
or
rol
adc
jge
push
cs
inc
out
out
push
push
jmp
inc
or
cmp
fdivr
cs
jp
call
dec
jne
imul
cmp
(bad)
adc
fs
lock
push
push
das
inc
push
(bad)
xor
addr16
inc
icebp
fs
jne
push
pop
sub
push
icebp
ja
jnp
pushf
pusha
in
inc
stos
mov
stc
in
scas
sbb
cmps
dec
cmp
or
mov
push
pop
je
cmp
cmp
ja
test
inc
in
sub
pop
add
jmp
sbb
fbstp
xchg
or
xor
push
inc
js
add
mov
cmp
clc
mov
push
mov
inc
sbb
add
cli
ret
or
xchg
jo
dec
xor
in
jae
std
arpl
aam
sbb
xor
fcom
add
adc
inc
jmp
enter
push
les
cwde
popa
sar
leave
sbb
xor
popa
addr16
pusha
ret
mov
pusha
aaa
mov
mov
and
data16
dec
pop
jge
clc
or
sub
sub
dec
daa
arpl
pop
jb
xor
ins
mov
mov
bound
pop
mov
es
xlat
aas
cdq
fwait
xchg
and
jmp
test
je
mov
sbb
xchg
outs
cmp
and
dec
and
add
or
mov
mov
xchg
jne
push
call
cs
pop
imul
mov
clc
xchg
(bad)
movs
cmp
je
mov
mov
clc
adc
test
sbb
add
inc
je
push
or
dec
hlt
call
push
and
jne
xor
jns
cmps
jne
sbb
mov
push
pop
adc
and
cmp
outs
xor
push
ficomp
and
pop
loope
mov
mov
call
cmp
test
xor
mov
sbb
ds
push
adc
and
out
add
and
mov
pop
cwde
mov
call
jle
xchg
mov
scas
js
push
test
je
mov
and
or
add
xchg
inc
and
mov
or
gs
div
fisttp
jp
mov
adc
sub
hlt
add
lock
mov
mov
out
or
mov
cmp
or
cmp
loope
pusha
in
push
push
ja
add
dec
adc
mov
lock
call
push
push
push
push
mov
div
in
add
pop
cmp
enter
sar
adc
or
and
loopne
xor
inc
aam
mov
add
cdq
mov
or
outs
jp
pop
bound
lar
clc
or
inc
enter
inc
je
enter
jbe
xchg
sbb
or
imul
je
adc
or
test
gs
push
(bad)
push
dec
rcl
adc
pop
jo
aas
add
push
lock
dec
mov
jne
push
mov
ret
cmp
ror
jg
lds
dec
adc
lea
rcr
inc
bound
mov
mov
xor
sti
adc
jl
js
pop
push
jmp
jle
ficom
mov
mov
mov
sbb
je
fldcw
leave
shl
out
xchg
(bad)
push
cmp
push
xchg
adc
or
xchg
push
push
test
xor
sbb
add
pushf
sub
out
and
xor
sub
fadd
shl
arpl
sbb
or
add
inc
adc
mov
mov
inc
outs
mov
in
adc
inc
and
mov
mov
je
cmp
inc
dec
and
or
adc
add
sbb
cdq
xor
mov
or
mov
adc
xchg
cmp
cmp
push
mov
push
inc
unpcklps
or
xor
rol
push
cmp
aaa
lods
sub
jo
pop
jle
cmove
stos
mov
outs
mov
jae
pop
and
pop
jae
pusha
add
popa
into
sbb
adc
jns
jae
mov
mov
add
dec
dec
jbe
loopne
ja
sub
push
mov
je
rol
mov
dec
je
sub
jne
shr
test
sbb
lahf
jnp
push
and
and
cwde
int
jl
xor
jp
lahf
jp
movs
imul
push
movs
movs
fs
sbb
cmp
popa
push
jo
pop
pop
jmp
pop
adc
mov
loopne
fist
or
inc
sub
xor
push
ds
scas
not
dec
aam
jg
cmp
jne
push
push
push
mov
mov
mov
and
imul
not
mov
jp
push
dec
jo
test
dec
icebp
sbb
dec
test
inc
or
cmp
mov
push
dec
pop
dec
loop
inc
scas
pop
in
or
cmp
push
mov
les
scas
imul
adc
adc
jne
push
cwde
inc
add
inc
mov
sub
sbb
jl
test
imul
(bad)
ds
and
daa
inc
test
dec
jl
dec
inc
mul
rep
dec
cmp
js
mov
jo
je
mov
lea
fdivr
push
cdq
sub
mov
das
rep
mov
adc
inc
inc
adc
sti
sar
sub
jbe
cmp
sub
shr
clc
mov
push
sar
scas
jnp
out
pop
clc
lea
add
lea
push
adc
imul
hlt
sbb
jo
cmps
xchg
lock
mov
mov
adc
xor
and
lock
rcr
cmp
push
mov
ror
test
jnp
ret
adc
scas
fdivr
retf
retf
mov
push
retf
push
pop
xlat
mov
mov
and
sub
jae
fs
mov
(bad)
in
jl
sar
push
fwait
sbb
sar
mov
lea
mov
add
lahf
in
lahf
loope
icebp
pop
rol
je
lea
push
rcr
mov
adc
mov
lahf
out
ret
arpl
cmc
inc
mov
mov
sub
push
loop
pop
sub
or
shl
rcr
fisub
cmp
ds
or
add
pop
icebp
fwait
out
push
cmp
je
jge
fadd
pop
mov
(bad)
aas
add
call
int3
push
mov
cmp
push
not
or
push
call
mov
jo
rol
and
mov
add
push
mov
rcl
sub
addr16
js
add
ss
shl
mov
addr16
adc
fstp
retf
ror
pushf
sub
mov
mov
test
je
push
mov
xor
mov
shr
inc
and
add
add
mov
cdq
jbe
and
add
jmp
(bad)
sub
inc
retf
push
push
mov
push
std
(bad)
(bad)
jl
mov
and
pop
pop
cmp
ja
shr
or
sub
add
(bad)
(bad)
push
or
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
(bad)
(bad)
(bad)
push
dec
or
or
add
mov
cmp
lea
mov
jne
mov
clc
mov
mov
jmp
mov
mov
fwait
(bad)
push
push
mov
stc
push
lea
push
mov
into
adc
dec
cld
mov
push
mov
inc
shl
mov
push
mov
mov
pop
pop
mov
and
popa
sub
mov
mov
mov
xchg
ds
push
mov
lea
mov
mov
call
jg
sti
pop
cmp
jne
pop
fwait
jbe
lock
loope
pop
jo
data16
add
xor
cmp
push
adc
sbb
lock
push
adc
sbb
ds
add
(bad)
pop
lea
xchg
mov
test
cs
pop
mov
mov
addr16
mov
adc
rcr
(bad)
(bad)
arpl
sub
dec
push
mov
push
mov
mov
mov
sub
add
mov
mov
mov
jge
cmp
(bad)
jg
mov
mov
mov
sub
sar
cmp
jae
fist
dec
aas
sar
sub
adc
lds
repnz
sar
xor
mov
mov
shr
and
retf
je
(bad)
dec
jae
mov
jmp
add
cmp
cmovb
out
sub
clc
add
ja
stos
jnp
add
mov
xor
push
mov
mov
enter
sub
or
int
mov
mov
fwait
cli
jg
test
or
mov
mov
dec
add
mov
jne
mov
push
push
sub
mov
addr16
dec
lea
push
push
test
push
xor
je
add
mov
clc
cmp
outs
movs
scas
xchg
push
pop
sub
mov
inc
add
inc
test
push
mov
mov
add
enter
cmp
jae
mov
shl
mov
add
push
lock
neg
cmps
mov
add
ret
inc
sub
je
test
je
mov
add
dec
jne
or
add
std
mov
xor
add
inc
add
jge
mov
sub
or
or
in
cmova
(bad)
dec
xor
jne
jmp
mov
mov
pop
cld
pop
push
cld
push
sub
mov
mov
cld
fdivr
out
jo
sti
cmp
je
sub
sub
mov
mov
adc
icebp
popa
lea
cmp
je
mov
invd
add
mov
inc
pop
mov
mov
pop
pop
lea
sbb
add
clc
fst
sub
inc
push
or
bound
or
jne
mov
mov
jmp
mov
mov
lea
jb
cwde
in
je
mov
push
xor
imul
mov
mov
push
or
sar
or
add
ss
push
movntps
sub
mov
mov
mov
mov
add
ror
and
mov
pop
test
pop
test
fsubr
cmps
pop
out
mov
sub
inc
jle
idiv
xor
cmp
cmova
jne
sub
movs
add
add
rcr
add
mov
dec
jle
mov
jno
sbb
add
mov
ja
or
push
cld
mov
and
mov
inc
movs
pop
(bad)
cmp
je
mov
imul
jnp
cmp
je
sbb
sub
mov
cmp
je
mov
mov
mov
jmp
fnstsw
dec
add
adc
add
add
cmp
jne
mov
mov
inc
(bad)
dec
mov
jmp
push
cmp
mov
cmc
mov
out
fnstsw
jmp
cmp
jne
and
sbb
inc
jp
mov
out
(bad)
je
xchg
or
jp
and
mov
ret
cmp
call
add
and
std
add
dec
add
dec
mov
jmp
in
or
fld
xchg
mov
fucomi
(bad)
push
lods
jns
fadd
fstp
fld
mov
fild
test
adc
fdiv
sbb
icebp
fstp
jbe
cmp
lods
jae
shl
jmp
adc
add
clc
(bad)
jg
daa
mov
mov
cmp
je
push
push
mov
mov
mov
mov
push
sbb
lea
add
xor
mov
call
adc
mov
(bad)
adc
or
pop
stos
inc
adc
xor
ror
add
xor
or
push
jge
mov
cdq
inc
ja
or
jne
or
inc
mov
ror
cs
mul
ss
and
mov
mov
sbb
pop
or
inc
add
push
mov
pushf
(bad)
in
pop
mov
xor
xor
mov
cli
mov
cmp
push
out
mov
or
mov
jmp
mov
push
add
lea
mov
or
fisttp
and
and
fdivrp
inc
cmp
cs
sbb
mov
jno
test
movaps
dec
in
out
mov
je
adc
and
push
adc
lods
cmp
es
cmp
ror
push
sub
adc
inc
sub
mov
mov
int3
jge
pop
arpl
inc
(bad)
and
jne
mov
fnstenv
cmp
sub
ret
test
add
pop
clc
popa
or
adc
and
mov
(bad)
(bad)
jmp
dec
adc
mov
or
mov
out
mov
add
sbb
mov
inc
cmp
dec
clc
add
jae
lea
add
push
in
inc
push
push
jbe
inc
call
inc
hlt
add
mov
(bad)
cmp
pop
daa
jne
loope
sub
mov
inc
cld
inc
add
mov
mov
aas
inc
out
sbb
aaa
aas
cmp
pop
lea
loopne
aam
mov
inc
imul
out
adc
mov
mov
push
push
sbb
cld
pop
in
jbe
pop
cmp
jge
or
adc
or
xor
outs
adc
or
lods
add
and
rcr
mov
(bad)
or
cmps
cwde
mov
jg
xor
mov
lea
mov
add
cmp
jne
sub
push
sar
jne
das
ss
aam
xor
push
(bad)
cmp
mov
rcr
sar
mov
jns
inc
fs
aas
push
mov
inc
loopne
call
(bad)
fist
mov
xor
lea
mov
push
outs
dec
sti
mov
mov
push
fs
dec
test
inc
lods
je
mov
call
pop
mov
(bad)
mov
call
cwde
mov
out
loop
add
or
aaa
xor
icebp
mov
cmp
stos
inc
add
mov
jne
mov
add
loopne
dec
xchg
push
add
cmps
jnp
into
jle
mov
scas
dec
push
adc
dec
xor
or
jge
dec
push
push
push
pop
pop
scas
mov
clc
lea
icebp
add
mov
jns
add
(bad)
sbb
and
adc
and
mov
push
mov
call
and
mov
lea
sub
sar
jmp
jo
out
add
cmp
(bad)
sbb
fs
mov
enter
and
push
adc
stc
adc
add
and
mov
xor
push
add
jmp
ins
pusha
outs
push
in
jmp
hlt
xchg
add
stos
add
add
mov
mov
dec
das
adc
adc
mov
jecxz
xor
dec
push
cmp
inc
add
jne
mov
lock
test
jne
adc
test
mov
scas
or
xor
add
ret
icebp
jmp
shr
jmp
xchg
add
mov
adc
stc
sub
stos
and
add
ins
mov
sub
cli
imul
adc
pop
rcl
iret
xor
loope
mov
push
jo
mov
add
push
mov
sub
adc
mov
ja
lods
mov
push
ret
pop
imul
push
inc
add
xor
imul
sbb
add
jae
loopne
jmp
adc
shl
add
jae
mov
ss
cmp
jmp
sbb
rol
loopne
jg
push
push
pop
lea
rep
pop
pop
je
lea
push
(bad)
loopne
jb
dec
test
rol
jmp
add
or
and
mov
mov
jl
adc
mov
pop
or
scas
sbb
or
loopne
or
inc
mov
sbb
add
mov
lds
inc
inc
bswap
aam
add
mov
lock
daa
and
inc
stos
sub
ss
aam
or
and
stos
mov
xor
mov
loop
hlt
rcl
mov
dec
ss
mov
aaa
xchg
jl
data16
dec
xor
ror
jb
mov
out
add
cld
sbb
mov
jb
and
or
dec
dec
call
jmp
push
or
cmp
loopne
into
sbb
add
jne
push
push
gs
out
adc
mov
call
mov
add
pop
pop
scas
shl
pop
frstor
pop
add
or
sar
and
mov
dec
int3
(bad)
(bad)
mov
xchg
ror
mov
lea
add
fdivr
add
(bad)
(bad)
jg
mov
inc
cld
mov
mov
cmp
jae
cmp
ja
mov
sub
sar
or
dec
lock
push
sub
and
std
mov
jmp
push
add
rcr
(bad)
call
add
mov
sub
sar
add
or
fist
(bad)
inc
add
call
popa
js
clc
jp
fidiv
fld
dec
add
int3
xchg
lea
test
xor
shl
pusha
mov
in
xchg
mov
add
sti
adc
jns
movs
hlt
fnstsw
ja
mov
dec
cmp
(bad)
fdivr
push
sbb
lods
mov
inc
sbb
popf
jnp
sti
mov
cmp
sbb
mov
popf
sti
fld
adc
test
or
add
test
fdiv
neg
lea
xor
sub
aam
test
dec
mov
jo
mov
dec
addr16
std
add
ror
das
pusha
into
push
and
or
sti
dec
loope
or
test
jns
or
test
hlt
(bad)
jmp
icebp
mov
push
push
mov
lea
cmps
mov
mov
push
cli
pop
or
inc
and
pop
and
inc
adc
sub
pop
xor
add
jno
hlt
mov
pop
add
jl
fcomp
pusha
jae
jb
adc
push
mov
adc
lea
mov
sbb
mov
test
cmp
push
adc
jecxz
pop
es
sub
loop
mov
inc
test
lea
ins
fstp
pusha
sub
or
sub
or
mov
jge
ja
add
mov
and
sub
xchg
icebp
fs
into
lea
push
xor
dec
inc
mov
push
xor
std
xchg
add
cmp
mov
aad
push
push
jl
mov
mov
mov
aaa
shr
inc
jl
push
mov
pop
pushf
js
sub
jbe
or
add
js
push
dec
(bad)
(bad)
mov
inc
sub
inc
sub
sete
mov
xor
cmp
outs
add
add
inc
inc
or
mov
or
add
test
inc
ret
mov
aas
mov
mov
mov
test
jne
adc
fisttp
pop
cmps
add
cmps
sti
mov
cmp
rcl
and
inc
pusha
mov
mov
retf
jne
mov
in
push
push
jmp
mov
sub
pop
js
add
lahf
jb
push
push
push
or
or
jb
mov
ror
cmp
jge
push
add
jnp
sbb
in
std
jmp
and
leave
fs
or
in
add
push
pop
add
xor
push
push
mov
lds
out
mov
int3
adc
aad
mov
lea
int3
sub
ins
mov
ror
lock
add
push
push
into
push
adc
mov
loop
cmp
int3
aas
cmp
pop
adc
xor
pop
movs
je
std
sbb
add
in
add
mov
mov
add
gs
mov
mov
in
call
inc
and
inc
jl
push
and
mov
ins
push
lea
ja
shr
jnp
mov
adc
(bad)
je
jle
add
jmp
out
adc
leave
and
push
pop
mov
add
lea
push
mov
je
cmc
ror
push
mov
inc
mov
lea
mov
and
inc
xor
dec
call
add
mov
add
int3
lods
cwde
push
add
sbb
sub
jmp
xchg
test
mov
cwde
pop
test
lds
and
sbb
or
and
in
stos
test
pusha
or
xlat
pop
jmp
mov
mov
les
add
xchg
adc
leave
push
push
push
jae
loop
mov
xor
cmp
int3
push
outs
pusha
cmps
rcl
inc
pop
push
mov
jbe
inc
je
shl
lods
ror
or
iret
xchg
test
push
sar
mul
xor
mov
cmp
scas
fwait
pop
mov
or
and
pop
mov
test
push
cmps
jno
loopne
jecxz
rcl
mov
push
mov
push
mov
lea
xor
fwait
rol
out
cmp
lods
ret
(bad)
pop
push
loope
loop
add
push
push
js
mov
inc
in
sahf
or
xor
inc
iret
xor
and
add
mov
sbb
fisttp
mov
fld
popa
(bad)
aas
mov
adc
xor
inc
loopne
(bad)
jmp
xchg
ss
test
pop
ins
pop
les
je
mov
lahf
xor
xor
or
jp
mov
pushf
xchg
stc
cmp
xlat
leave
cmp
mov
clc
popf
outs
loop
xor
jmp
and
jnp
add
pop
cmp
lds
in
and
add
or
push
sub
jg
mov
test
mul
jns
sbb
call
mov
clc
xchg
dec
adc
lds
mov
push
adc
and
and
jle
push
mov
cmp
mov
jne
mov
iret
mov
clc
js
rcr
cmp
je
mov
lock
add
fmul
lea
jb
mov
mov
std
xor
cmc
lock
adc
add
sbb
fmul
call
add
mov
add
cmp
je
mov
sub
sub
mov
add
add
add
mov
(bad)
(bad)
call
cmp
jne
sub
cmp
jne
mov
jmp
add
cmp
jne
xor
pop
pop
inc
ret
sub
jb
rol
sub
mov
adc
jge
mov
inc
mov
stos
shr
sbb
mov
sub
jl
sbb
jl
add
shr
je
or
bound
into
sahf
or
test
adc
cmp
mov
cmp
fadd
mov
sbb
push
push
das
stos
loop
je
inc
aam
pop
or
mov
nop
and
or
mov
lea
xchg
mov
add
mov
ja
ret
and
pop
mov
out
adc
push
push
pop
pop
aam
lea
rcl
pop
push
cmc
pop
ja
jg
fcomp
or
xor
mov
in
hlt
mov
clc
loopne
inc
mov
adc
sub
pop
cmc
mov
jae
add
or
test
sbb
cs
std
popf
or
and
lods
jmp
lea
jns
jg
inc
adc
xchg
mov
push
in
and
jmp
jbe
shl
and
jp
pop
fimul
inc
movhlps
inc
mov
sub
fsub
mov
inc
jnp
lods
push
(bad)
fist
mov
or
(bad)
and
adc
or
mov
pop
xchg
xchg
dec
das
sete
jbe
push
inc
push
adc
add
sbb
add
je
in
cmp
(bad)
cld
add
sbb
xchg
cmp
out
xor
outs
into
jge
adc
or
xor
xchg
lar
add
lods
lea
push
lea
jl
push
shl
sbb
adc
adc
test
jnp
cmp
and
sbb
(bad)
mov
mov
or
mov
add
stos
push
and
cmp
adc
inc
into
mov
push
fnsave
mov
pop
push
mov
mov
pop
mov
clc
mov
xor
lods
aaa
push
icebp
xchg
in
sbb
dec
xchg
add
sbb
or
rol
mov
loopne
fsubr
jmp
push
cmp
dec
icebp
mov
out
mov
ret
hlt
adc
dec
xor
cmps
and
int3
lods
sbb
push
or
mov
inc
jno
push
or
add
push
cmc
pusha
xchg
push
call
jbe
push
call
in
shr
inc
int3
aam
xchg
sub
mov
lea
shl
fbld
mov
inc
lods
mov
hlt
arpl
adc
add
jae
jmp
outs
add
test
adc
add
jmp
fist
add
push
(bad)
loope
mov
mov
inc
int3
mov
push
mov
lea
mov
test
inc
pop
dec
sar
pusha
call
xor
push
call
cs
test
popa
mov
int3
sahf
and
int3
inc
mov
inc
xor
out
cmp
push
mov
mov
and
cwde
pop
dec
data16
fidivr
not
xchg
push
mov
repnz
adc
lahf
mov
inc
test
add
cmp
test
scas
and
ror
ret
xchg
cmp
mov
jb
imul
pop
shl
sbb
mov
dec
xchg
push
mov
mov
and
push
mov
jns
sbb
dec
retf
xlat
stos
push
adc
sub
mov
je
popa
retf
adc
jno
mov
hlt
fstp
xor
shl
jmp
mov
popa
bound
dec
jmp
add
lods
mov
xor
hlt
lea
stc
scas
xlat
stos
cld
ret
jle
adc
push
push
pusha
std
(bad)
jmp
push
mov
sahf
pop
push
retf
jnp
and
add
das
mov
push
adc
pop
sub
pop
or
and
mov
add
add
test
inc
or
inc
adc
leave
call
sub
lea
mov
push
in
out
push
in
(bad)
fld
out
pop
push
loopne
adc
mov
mov
aam
cwde
push
sub
add
adc
les
outs
xchg
cmp
inc
mov
or
icebp
scas
xor
fimul
fucomip
lods
push
push
lea
push
push
inc
jg
out
mov
xor
cmp
pop
out
push
or
xchg
imul
mov
int
or
inc
xchg
xchg
popf
add
or
int3
out
dec
pop
push
mov
std
add
mov
xor
rol
add
cmp
jmp
fdiv
ror
jmp
dec
inc
pop
in
rol
add
ret
cmps
in
shr
or
push
ret
stos
xchg
das
pushf
cwde
sub
pop
lock
adc
sub
mov
les
mov
mov
add
inc
inc
add
add
and
or
dec
mov
lea
push
fdivrp
pop
pop
add
ror
sbb
mov
lea
mov
add
push
push
popa
push
add
ret
adc
jmp
test
sub
mov
lea
lods
mov
adc
jbe
rcl
or
cmp
popa
cwde
adc
call
mov
or
test
push
mov
jg
lods
mov
lea
push
jb
push
inc
cld
mov
xor
fisttp
add
outs
in
push
push
int
jmp
daa
xor
sub
mov
pop
and
in
out
mov
enter
jbe
cmp
add
ficomp
ffreep
jns
dec
popa
js
clc
cmp
or
adc
bound
(bad)
std
add
loop
lock
cmp
jo
in
xchg
or
xor
pop
xor
mov
adc
mov
adc
pop
and
mov
lea
mov
mov
xor
fs
sbb
adc
add
or
xor
xlat
imul
mov
or
xchg
mov
push
test
fs
enter
xor
dec
call
mov
inc
adc
inc
(bad)
pop
cmp
jge
mov
fisubr
mov
fstp
jmp
push
rol
arpl
push
adc
inc
mov
scas
(bad)
dec
gs
rsqrtps
push
add
in
dec
push
xor
jge
push
mov
fwait
and
fs
push
mov
clc
cmp
mov
xor
ret
xchg
sbb
sbb
cmp
pop
shr
mov
push
add
fisttp
loope
jle
jnp
mov
loopne
hlt
push
add
sar
fs
sbb
xor
or
cli
mov
push
push
movs
add
inc
xor
add
movs
xor
mov
or
cmps
lea
sar
dec
dec
pop
cmp
inc
lock
pop
fmul
inc
mov
and
add
fscale
push
aaa
xchg
sbb
xor
pop
pusha
(bad)
xor
xchg
xor
in
aad
or
mov
fbstp
jmp
(bad)
and
sbb
mov
shl
test
popa
inc
push
cld
sbb
jno
je
loopne
outs
push
push
mov
add
daa
lds
outs
jmp
push
jns
mov
(bad)
imul
push
push
jb
ficomp
and
and
adc
(bad)
into
inc
ror
mov
nop
push
inc
aam
sbb
and
(bad)
push
pop
leave
aam
push
rcr
xlat
lea
mov
push
in
mov
lds
aaa
jl
(bad)
pusha
mov
jecxz
sbb
and
inc
retf
mov
push
(bad)
hlt
mov
lods
inc
loope
xor
outs
xlat
inc
loopne
pop
cmp
jg
cmp
pop
or
loopne
dec
mov
mov
leave
mov
shl
and
add
(bad)
sbb
scas
cwde
inc
inc
adc
inc
das
push
adc
xchg
push
cli
pusha
icebp
daa
xlat
loope
jmp
(bad)
(bad)
jl
add
gs
call
and
or
and
sub
add
dec
add
pop
cdq
fmul
xchg
aad
bound
push
mov
or
test
(bad)
jo
adc
xchg
mov
jl
sbb
pop
fisttp
test
xor
mov
ins
in
retf
xor
xchg
movs
add
fisubr
mov
(bad)
xor
pop
(bad)
sub
inc
and
jmp
test
xor
jo
pop
mov
cmp
cmp
sbb
ja
sahf
shl
push
leave
mov
pop
pop
add
sub
in
dec
pop
enter
jp
aaa
mov
shl
inc
les
xchg
and
and
test
mov
mov
mov
cmp
fwait
clc
sbb
fstp
pop
arpl
sgdtd
scas
or
mov
xor
or
jbe
and
or
mov
mov
clc
xor
adc
xchg
gs
shl
loopne
jle
xor
outs
add
dec
lea
mov
jmp
mov
jg
sub
or
or
fistp
xchg
mov
jg
adc
or
or
and
xchg
cmp
jne
mov
sub
(bad)
mov
jge
fbstp
push
jp
xchg
stc
in
test
je
imul
inc
cmp
rol
sub
push
pop
sub
sub
sub
pop
push
sbb
cmp
push
bound
or
push
inc
mov
add
or
ins
push
mov
push
add
add
mov
sub
mov
push
add
mov
push
mov
test
adc
sub
sar
cmp
jbe
sub
lea
jmp
jae
mov
push
sub
fld
add
sub
xor
dec
clc
sub
je
int3
push
dec
add
rcl
pop
lea
mov
adc
and
pop
or
jg
fwait
push
mov
sar
cmp
jae
inc
inc
jmp
jg
dec
(bad)
shr
sar
fsubr
sub
xchg
pop
push
push
aas
add
fld
dec
mov
mov
sub
and
push
(bad)
push
push
ror
lea
add
les
push
sar
push
cmp
inc
lahf
or
inc
mov
pop
sbb
inc
push
cwde
or
dec
jne
add
inc
or
inc
jg
das
push
sbb
add
or
mov
les
(bad)
neg
imul
ret
sub
neg
sbb
je
inc
xor
adc
push
ror
gs
sbb
adc
not
(bad)
add
add
in
jb
icebp
dec
lods
add
mov
sub
inc
pushf
jl
jge
inc
jne
inc
adc
add
adc
clc
je
pop
push
push
push
inc
mov
add
adc
cmp
je
loopne
shr
ds
cmp
jae
xchg
mov
shr
mov
push
dec
outs
mov
xchg
jae
ud0
clc
cmp
cmovb
jl
(bad)
pop
out
out
push
pop
and
mov
ja
inc
pop
test
je
cmp
ja
push
mov
jae
mov
dec
xor
sbb
push
push
inc
lea
call
ret
add
mov
add
xor
xlat
or
add
sahf
or
push
scas
sti
(bad)
aas
ret
dec
or
push
or
xor
adc
rcr
push
push
test
adc
inc
or
push
les
mov
pmullw
push
or
shl
add
fwait
xchg
mov
ret
ret
cmp
xchg
sub
arpl
mov
enter
inc
dec
sub
fistp
jge
or
es
aam
add
pavgb
add
sub
dec
push
mov
add
sub
push
ret
push
cmp
aam
inc
or
sbb
cmp
sbb
mov
xor
sbb
neg
jp
sbb
or
inc
cld
push
cmp
push
bound
xor
(bad)
cmp
cld
jne
cmp
je
xor
mov
pop
push
inc
je
mov
loopne
mov
bound
and
popf
adc
mov
inc
sub
dec
std
mov
xor
cmp
adc
mov
outs
push
aam
add
and
xor
dec
or
movs
push
leave
adc
sbb
lea
push
ja
ds
and
dec
icebp
push
xchg
lea
rol
sbb
lea
add
add
lods
lea
aad
and
ret
push
popa
push
add
mov
xlat
adc
push
sbb
cdq
call
cmc
scas
push
xchg
sub
and
add
lds
and
and
push
dec
mov
mov
push
adc
adc
mov
xlat
push
ror
dec
aaa
or
inc
mov
sub
rol
mov
ucomiss
sub
dec
in
(bad)
ror
(bad)
mov
dec
jbe
dec
adc
jmp
push
popa
and
add
add
cmp
xor
push
dec
inc
in
daa
dec
mov
push
mov
mov
in
fdiv
das
imul
fiadd
cmp
pop
ret
push
hlt
push
push
sub
adc
xor
pop
and
push
jae
cmp
push
adc
or
ss
popa
push
pop
jne
stos
add
fsubr
pop
ret
inc
xor
dec
pop
xchg
mov
adc
add
push
fst
pusha
pop
ret
cmp
dec
test
loope
xchg
call
lahf
fwait
dec
and
pushf
mov
inc
rcr
inc
mov
adc
(bad)
mov
xor
or
add
iret
push
inc
push
push
rol
jmp
movs
push
mov
push
mov
mov
or
push
mov
aad
call
mov
or
mov
pop
mov
add
xor
or
add
dec
sub
cmp
cmps
fist
xor
dec
mov
add
fdivr
jo
in
out
xchg
lea
add
xchg
call
mov
adc
mov
lea
pop
push
sub
jne
cmp
in
or
adc
mov
push
cs
mov
out
mov
daa
pop
mov
pusha
stc
mov
dec
jl
aam
and
mov
shr
push
out
aaa
push
leave
imul
add
push
(bad)
fidivr
cwde
sub
mov
ds
or
dec
sub
xor
cdq
out
add
in
sub
push
pushf
xchg
sub
inc
sbb
enter
dec
mov
inc
add
sub
test
clc
(bad)
push
push
xchg
mov
add
mov
jne
push
les
std
retf
sti
pop
sub
je
fld
aas
push
add
xor
adc
ss
push
sub
cld
cmps
call
or
test
sbb
fs
adc
cmps
rol
sub
pop
mov
xlat
sub
push
test
loop
in
std
dec
add
add
bound
add
mov
xchg
enter
(bad)
mov
sar
fmul
mov
add
mov
rol
jno
lea
xor
clc
mov
jbe
js
and
add
or
cld
inc
(bad)
mov
into
bnd
mov
pop
aam
push
xor
inc
cdq
fwait
jo
out
and
add
jne
iret
movs
retf
in
out
add
je
leave
inc
cmp
sbb
pop
and
jne
sub
jl
jae
pop
cmp
jb
ret
or
call
and
out
retf
movs
fsubr
mov
pop
push
or
push
aad
mov
lahf
mov
mov
jne
mov
xchg
(bad)
cmp
shr
or
add
adc
scas
sub
sbb
(bad)
outs
nop
cmp
push
cli
push
stos
cmps
mov
pushf
ins
lea
dec
mov
sub
(bad)
in
add
jo
add
mov
lock
sbb
inc
sub
push
push
out
jo
cmp
push
or
test
jo
fld
clc
add
adc
fistp
in
mov
out
add
test
stos
(bad)
and
inc
inc
fist
push
mov
dec
je
sbb
pop
mov
ins
push
add
mov
iret
mov
and
(bad)
je
lea
jg
stos
retf
jnp
sub
adc
inc
add
add
or
bound
sahf
add
cmps
mov
inc
push
test
pop
ins
clc
jmp
ja
mov
bnd
sub
and
clc
mov
xchg
lea
xchg
out
pop
test
mov
xchg
mov
lock
xlat
out
xchg
fild
fsub
mov
sub
arpl
mov
dec
test
cmp
sbb
in
in
push
and
inc
and
push
add
sbb
lock
sbb
sti
fstp
and
jne
adc
retf
jne
pop
outs
not
mov
sub
add
test
pop
jmp
pop
pop
add
mov
adc
pusha
loop
scas
add
pop
out
add
pop
cmp
or
mov
in
mov
clc
jae
add
cmp
cld
xchg
test
add
dec
fadd
lock
jne
add
push
cmp
add
and
test
push
lods
pop
push
int3
ror
and
hlt
aad
and
mov
push
pop
push
jb
mov
jmp
scas
ins
pop
pop
add
cmp
sub
add
xchg
or
adc
adc
test
sub
cmps
sub
int3
push
adc
outs
int3
push
repnz
jnp
(bad)
push
pop
call
cld
pop
and
bound
xor
sbb
and
pusha
cwde
or
outs
outs
mov
fcom
add
test
push
sbb
sbb
fistp
sti
mov
sbb
or
jmp
cmps
cmp
cmps
pusha
es
lahf
mov
cmp
cmp
sub
sub
jne
or
pop
jnp
jnp
or
xor
rcr
pop
push
adc
js
pusha
cld
add
mov
cmps
xchg
or
jns
int3
cmp
xchg
loopne
iret
cld
setno
movs
mov
and
loopne
xchg
xor
mov
push
shl
aas
shrd
(bad)
push
cmp
pop
dec
dec
cmp
or
(bad)
fisubr
push
push
adc
adc
add
push
cmps
jo
lock
xchg
ins
or
add
cld
mov
pop
les
push
push
adc
jg
fcmove
push
je
push
cmp
jb
retw
clc
iret
in
outs
outs
push
mov
xchg
and
inc
aas
je
mov
ds
add
test
js
mov
or
fcomp
fild
js
mov
je
mov
pushf
mov
add
jne
mov
jnp
lods
fiadd
mov
push
mov
mov
jmp
or
and
into
test
dec
test
out
ja
nop
fdiv
mov
cmp
leave
rol
cmp
mov
sub
inc
popf
xchg
inc
ja
or
mov
mov
pop
inc
je
pop
jmp
adc
adc
add
jbe
pop
mov
in
mov
(bad)
into
cmp
jae
mov
movs
or
test
sbb
not
stos
sub
xor
dec
pop
dec
rol
popf
je
idiv
pusha
push
or
jecxz
mov
add
sti
push
or
sbb
jae
mov
jl
xchg
ins
mov
xchg
add
je
je
cs
jns
das
inc
xor
sub
sub
or
fsubr
lock
std
dec
sbb
mov
mov
adc
or
and
push
mov
js
adc
dec
mov
cmp
(bad)
push
or
in
mov
add
(bad)
and
adc
retf
enter
in
or
jp
and
je
or
fidiv
and
je
and
jno
ja
ja
dec
cwde
push
add
test
sub
packssdw
xchg
mov
mov
in
popf
inc
add
jae
or
pop
ret
and
mov
pop
and
mov
pop
ret
nop
mov
push
and
pop
(bad)
fwait
or
jns
shl
rcr
pop
mov
adc
icebp
sbb
je
ds
pop
cmp
mov
movs
stc
jle
xchg
adc
out
shl
pop
pop
(bad)
(bad)
jmp
arpl
sbb
add
add
add
xchg
pop
add
xor
lock
cli
fld
ret
sub
cmps
add
je
ins
and
add
inc
es
mov
enter
outs
and
adc
and
mov
not
dec
mov
or
pop
and
sbb
mov
popf
or
inc
add
or
fistp
sahf
and
inc
cs
in
sbb
add
add
leave
adc
int
cmp
sbb
scas
jnp
cmp
pop
or
movs
ficomp
(bad)
(bad)
(bad)
scas
(bad)
add
inc
icebp
fnsave
push
sbb
jne
push
push
xchg
cmps
and
jmp
adc
mov
mov
jbe
or
div
xchg
add
add
adc
pop
adc
add
sbb
jl
nop
fstp
fimul
or
push
loopne
mov
mov
xchg
add
or
pop
sub
add
or
or
and
add
inc
les
cmp
mov
and
inc
pop
sbb
add
inc
push
push
mov
inc
mov
or
stos
dec
ror
loop
mov
adc
iret
call
(bad)
aas
mov
(bad)
mov
lea
push
push
and
inc
push
inc
push
adc
xchg
test
and
lds
mov
dec
adc
mov
les
inc
lahf
outs
jmp
pop
adc
lahf
mov
aas
out
or
int3
add
adc
pushf
mov
adc
jl
cmp
mov
add
xchg
nop
mov
pop
push
retf
sub
cmp
cmp
cs
pop
mov
sub
push
hlt
gs
push
inc
inc
clc
es
shl
add
lock
sti
rcr
push
or
mov
xchg
sub
nop
mov
add
outs
(bad)
xor
loope
add
adc
cs
push
cmp
loope
adc
add
nop
cmp
sbb
and
adc
aad
adc
xchg
inc
and
loope
aaa
ins
mov
jl
cmp
retf
mov
mov
aad
xchg
call
cmp
or
mov
xchg
push
push
or
xor
pop
jo
rol
shl
sub
retf
pop
mov
into
inc
mov
and
cmp
nop
test
sbb
push
or
xchg
cmps
add
jae
cmps
bound
test
scas
mov
or
mov
jno
pop
mov
ja
cpuid
pop
mov
cmp
ret
js
sbb
test
stos
ret
xchg
jl
sbb
push
popa
out
cmps
int3
xor
pop
add
inc
sar
dec
add
fwait
xchg
fwait
adc
xor
add
xor
mov
mov
sub
cmp
sub
fdiv
(bad)
add
xchg
je
cwde
sti
ret
inc
std
sub
push
nop
xor
mov
rol
add
inc
(bad)
dec
call
dec
and
loop
std
mov
adc
add
shl
cmp
adc
pminsw
loopne
les
mov
popa
fcomp
(bad)
neg
adc
mov
pop
mov
je
push
sbb
cdq
adc
inc
xlat
cs
xchg
add
test
je
mov
inc
add
push
inc
dec
adc
jb
stos
sbb
mov
stc
test
pop
sbb
or
or
pop
push
or
cmp
neg
shl
lods
test
mov
mov
add
pop
jecxz
adc
and
add
std
fiadd
or
push
arpl
or
rol
mov
je
lea
gs
pushf
outs
fiadd
add
mov
inc
mov
push
test
inc
xor
les
push
mov
xor
or
mov
xchg
inc
(bad)
sbb
add
jg
push
cwde
mov
jne
mov
adc
xor
xchg
fild
push
xlat
cmp
addr16
adc
fcom
into
loopne
pusha
xchg
je
dec
xchg
jo
cmp
cmp
sbb
push
adc
(bad)
fucomp
add
fld
push
push
lods
lea
inc
xchg
mov
fbld
fucomip
xor
lea
push
and
cmp
(bad)
test
cs
fmul
inc
or
inc
add
call
xor
mov
test
xlat
xor
cmp
pop
pop
sar
push
ins
fs
jle
or
jne
jge
stc
imul
cdq
ins
fmul
pop
or
adc
dec
mov
and
or
sahf
add
stos
push
not
test
xchg
and
push
pop
jmp
lock
mov
pop
add
adc
out
sbb
popa
mov
cmps
mov
jo
mov
add
push
mov
add
or
pop
dec
add
xchg
mov
add
add
enter
push
into
jne
test
fwait
mov
adc
add
push
mov
mov
imul
add
ja
xor
inc
call
in
push
fs
call
jmp
jmp
mov
or
sub
push
sbb
push
xor
fiadd
sti
es
lods
test
add
ins
push
fbld
add
or
fisttp
adc
inc
les
lea
push
xor
clc
lds
mov
add
pop
cmp
mov
sbb
lea
push
push
cmps
mov
sbb
fadd
mov
cmp
je
ins
xchg
shr
ins
les
pusha
jp
ss
jbe
mov
jp
jae
ret
add
popf
add
mov
mov
inc
mov
sti
push
lds
sub
adc
push
adc
jge
add
push
add
push
push
xor
lods
mov
or
mov
test
pusha
adc
inc
rcr
pop
clc
(bad)
fwait
mov
mov
jb
mov
mov
scas
pop
into
xchg
jg
sub
out
fld
push
adc
or
sbb
iret
push
sbb
sbb
test
jne
(bad)
xchg
stc
out
inc
add
push
lock
jnp
adc
clc
pop
inc
(bad)
test
je
pop
or
and
mov
hlt
out
cmp
sbb
je
push
stc
jl
lea
mov
xchg
pop
pop
ret
inc
je
fcom
popf
je
jno
sub
(bad)
cmp
add
icebp
cmps
xchg
xchg
sbb
or
ds
addr16
js
or
sbb
clc
mov
push
push
adc
add
xor
xchg
mov
fist
shl
or
pop
inc
inc
loope
test
es
push
pushf
jnp
sbb
or
pop
inc
dec
hlt
sbb
shl
retf
lds
jo
mov
jbe
ja
jg
push
push
adc
lock
jbe
or
mov
cmp
jo
adc
rcr
push
stos
mov
jle
ss
inc
xor
in
out
sub
mov
push
outs
js
sahf
add
ror
xor
inc
int
or
mov
mov
in
clc
pop
mov
nop
sub
mov
push
push
jo
out
mov
into
loopne
mov
sub
push
cmp
pop
mov
stos
js
jl
mul
mov
cmp
push
pop
dec
xor
dec
pusha
aas
jl
shl
clc
sub
inc
add
ins
mov
loop
call
nop
or
cmp
cmp
pusha
sub
sbb
sbb
movs
pop
gs
mov
and
iret
inc
cmp
pop
mov
add
pop
pop
call
mov
mov
pop
and
lock
pop
pop
cmp
lock
mov
fs
sub
add
jns
or
inc
retf
fmul
sbb
adc
stos
lea
into
cmp
xor
xchg
add
xchg
jge
jb
adc
and
push
push
dec
mov
and
pop
cmp
icebp
or
scas
push
ror
inc
icebp
cwde
adc
mov
ja
or
leave
push
inc
xor
push
push
test
jne
or
or
push
mov
mov
add
inc
sub
jb
mov
push
dec
mov
mov
inc
cmp
jne
call
xchg
add
dec
cld
dec
mov
push
jmp
dec
pusha
sub
in
inc
mov
xlat
fdivr
outs
xchg
imul
cmp
cmp
push
cmove
dec
popa
pop
rcr
leave
sub
(bad)
mov
push
push
ins
int
jmp
stos
clc
mov
mov
mov
push
mov
mov
add
adc
aam
jo
or
ret
pusha
lahf
pop
into
rcl
push
(bad)
cs
loopne
iret
push
push
inc
xchg
lea
(bad)
int3
jmp
ins
inc
std
out
mov
mov
mov
test
je
call
pop
sub
pop
loopne
imul
mov
popa
jge
mov
push
std
push
cmp
push
mov
or
cli
fdivr
aaa
mov
add
jle
dec
pop
repnz
dec
aam
jmp
sbb
pop
jmp
sbb
test
je
out
xor
cmp
add
repz
ins
mov
shl
xor
inc
sbb
pop
mov
push
mov
cli
push
push
mov
or
shl
mov
mov
movsx
pusha
and
cmp
mov
lea
jo
dec
pusha
inc
pop
jb
adc
stos
or
sbb
xor
mov
or
add
adc
sbb
pop
or
mov
xor
jmp
xor
mov
(bad)
push
or
call
push
mov
cmp
jne
mov
push
push
xchg
cmp
or
pop
sbb
xchg
mov
call
repz
aam
add
sbb
mov
push
call
popf
xchg
sbb
cmp
jmp
aaa
push
dec
inc
ret
dec
cmp
adc
sub
out
inc
in
addr16
sbb
sbb
xchg
fcomp
push
lea
ss
jae
fcom
(bad)
fcmovnb
add
(bad)
mov
inc
arpl
push
jl
test
and
les
ror
push
adc
push
jl
scas
push
out
sbb
lea
ja
lock
cmove
and
push
test
pusha
inc
aam
xor
ret
jne
fadd
and
dec
xor
xchg
xor
fimul
mov
push
jb
adc
mov
out
loope
dec
dec
push
add
push
push
mov
stos
sub
mov
add
adc
lods
(bad)
imul
push
test
in
sbb
sbb
popa
mov
rcr
or
fistp
jne
push
mov
push
pop
push
dec
ret
in
fs
cmps
adc
movs
add
in
bound
and
mov
xor
mov
mov
rcr
retf
ret
cmp
je
add
rcl
sub
inc
ret
xor
add
shr
mov
push
push
push
xor
mov
(bad)
jmp
mov
mov
push
mov
mov
adc
pusha
adc
clc
pop
adc
mov
enter
and
adc
push
pop
or
daa
push
push
fdivr
nop
push
mov
mov
shl
push
out
push
cmp
lods
mov
arpl
mov
call
call
jo
sbb
pusha
es
push
hlt
sub
cmp
push
inc
daa
repz
mov
add
loope
(bad)
pop
mov
cmp
jne
cs
pushf
jge
add
sbb
cmp
dec
and
adc
out
push
add
retf
sub
and
into
pop
lods
add
cmps
addr16
inc
push
popa
and
add
cdq
and
pop
push
push
loope
inc
mov
retf
cmp
push
sti
mov
xor
or
adc
pop
(bad)
icebp
js
add
adc
rcr
adc
and
xor
mov
dec
add
push
hlt
push
add
and
push
push
pop
nop
push
xchg
and
lds
jo
ret
test
adc
add
call
or
and
ret
inc
je
dec
xor
inc
xor
icebp
pusha
adc
xor
imul
pusha
sbb
push
and
mov
leave
aaa
push
push
sub
and
movs
mov
inc
or
ror
add
and
adc
xchg
rcr
sub
cmp
sbb
push
cdq
ficom
cmp
mov
aam
cmp
mov
mov
xlat
inc
add
mov
sbb
je
aaa
jne
push
test
push
cwde
stos
inc
push
mov
adc
rol
sbb
push
and
add
xchg
sbb
pusha
sub
(bad)
sti
fbstp
data16
js
and
(bad)
je
cmp
je
rcr
test
or
push
push
adc
movs
xor
jns
cmps
int
pop
or
sub
pop
xor
or
mov
xor
jmp
mov
es
mov
add
sbb
sbb
pop
adc
js
xor
lds
adc
or
shl
add
lds
jmp
popa
enter
xchg
ss
pop
(bad)
stos
je
mov
jb
jge
rcr
psrlw
leave
mov
inc
mov
push
mov
cmp
lea
mov
loop
test
push
and
adc
push
je
push
std
sbb
mov
xor
push
push
jmp
jo
cmp
jno
and
inc
mov
in
aas
inc
outs
lock
enter
add
inc
in
nop
(bad)
push
push
xor
or
vlddqu
jbe
push
cmp
add
cmp
adc
and
(bad)
jecxz
xchg
add
ror
inc
inc
shl
or
in
mov
icebp
push
fidiv
ds
inc
jno
mov
pusha
and
mov
mov
sbb
push
inc
add
sub
mov
ins
hlt
std
sbb
jae
pop
and
cmp
test
sbb
jnp
add
test
rcl
xor
loope
mov
and
out
or
loopne
add
adc
popf
adc
je
adc
lea
out
sub
mov
xlat
xchg
xor
adc
mov
in
sbb
adc
out
inc
sbb
mov
mov
add
cmps
sbb
sbb
push
and
idiv
lds
push
mov
cmp
jne
jl
pop
or
cmp
add
push
pop
pop
mov
rol
dec
and
sub
nop
rol
dec
or
add
adc
jae
rol
out
mov
inc
add
push
mov
adc
dec
add
add
shl
sbb
(bad)
call
inc
mov
mov
mov
cmp
jne
mov
out
inc
add
or
in
jg
je
mov
jmp
mov
stos
or
adc
out
ret
adc
sub
jns
jl
aad
arpl
rcl
xor
stos
and
ret
and
inc
adc
dec
sbb
fild
clc
mov
into
adc
inc
mov
add
mov
push
std
aas
mov
push
lea
push
jmp
mov
add
sub
test
int
repz
jp
add
adc
lods
je
pusha
mul
dec
or
sbb
lds
(bad)
sub
dec
mov
sete
push
jmp
lea
shl
xor
pop
inc
(bad)
leave
int3
add
sar
sbb
and
xlat
adc
inc
push
ins
call
ins
cmp
call
js
jecxz
or
sbb
cmps
xchg
ins
mov
mov
push
pusha
clc
inc
cmc
push
push
mov
mov
jge
xchg
sbb
(bad)
out
enter
pop
ret
test
je
mov
pop
call
jmp
sub
and
mov
stc
lea
dec
fldcw
push
retf
dec
in
int3
idiv
dec
cmp
pop
pop
xor
mov
lds
mov
mov
sbb
and
cs
push
mov
mov
xor
xchg
test
pop
push
or
mov
inc
mov
fadd
and
loopne
inc
(bad)
pop
lea
out
and
(bad)
cli
mov
jbe
add
pop
(bad)
add
add
push
jmp
addr16
and
add
inc
mov
sbb
or
shl
inc
cld
lfs
add
sbb
std
into
ror
jge
add
mov
push
adc
adc
and
pusha
adc
jmp
dec
clc
sbb
dec
or
lea
mov
mov
mov
push
jl
clc
mov
lea
dec
retf
lahf
sti
jg
mov
inc
xor
lea
int
dec
mov
jae
dec
and
or
mov
jl
in
push
lea
cmp
xlat
ja
pop
adc
mov
and
adc
push
adc
xor
aam
push
fmul
add
adc
fistp
mov
nop
fldcw
mov
inc
ror
dec
dec
ret
retf
loopne
lock
adc
rcl
and
add
retf
adc
mov
xchg
push
jns
push
hlt
sti
lea
pop
dec
mov
aas
mov
add
int3
mov
dec
jmp
pop
test
lea
pshufw
dec
and
jnp
pusha
push
hlt
inc
or
add
cmp
or
cld
mov
or
mov
or
pop
push
loopne
rol
out
add
inc
add
push
call
lea
jno
cmp
push
in
and
xchg
loope
stos
(bad)
xor
dec
int3
xor
jb
shl
mov
or
push
mov
pushf
sub
xor
push
add
int3
test
rol
cmp
jb
pop
inc
add
jmp
inc
push
push
xor
mov
lahf
inc
aam
jns
mov
cmp
jne
outs
xadd
adc
lds
add
cmps
pop
in
jmp
inc
jne
jb
loop
cmp
stos
push
pop
jae
add
je
push
retfw
iret
dec
aaa
mov
sub
dec
rcl
sbb
mov
cmp
mov
mov
scas
adc
sub
mov
jae
cmc
or
jne
call
in
call
mov
mov
call
inc
xor
push
sub
mov
mov
mov
mov
cmp
and
jnp
sbb
aad
(bad)
mov
fld
add
jmp
cmp
fmul
xor
call
pop
inc
xchg
loope
xbegin
pop
add
push
cmp
mov
mov
data16
mov
jmp
mov
cmp
push
sete
and
xor
and
pop
mov
enter
mov
aas
fadd
add
mov
push
test
add
add
or
push
push
lea
push
adc
add
push
adc
mov
sub
sbb
xlat
jo
cmp
and
inc
loopne
call
rol
enter
sbb
xlat
mov
adc
call
cmp
cs
and
out
jmp
push
cmp
fmul
test
or
push
sub
je
dec
jg
push
lea
xor
mov
cwde
and
clc
mov
les
or
add
sbb
inc
rcr
(bad)
mov
js
mov
cwde
and
xor
mov
pop
adc
xor
add
add
push
mov
cmovne
mov
out
retf
push
push
enter
test
mov
push
add
pop
or
and
or
mov
mov
dec
ja
adc
jmp
pop
sbb
inc
cwde
or
mov
sub
shl
dec
(bad)
push
xlat
dec
jne
push
xchg
mov
adc
xor
mov
sti
out
addr16
lea
mov
aam
inc
pop
int3
push
lea
sbb
mov
inc
in
add
sbb
adc
mov
pop
inc
adc
xor
ret
mov
dec
pop
fdivr
mov
pop
mov
inc
sub
mov
adc
xor
mov
loopne
aam
push
hlt
push
lea
add
mov
test
out
jle
push
jl
pop
or
loopne
stos
aaa
add
adc
ds
inc
and
or
fs
sbb
js
add
mov
lods
call
sub
lea
scas
inc
xchg
pop
xor
xor
mov
arpl
jle
jmp
pop
cmp
lea
cmovae
push
loopne
lea
pop
push
inc
je
jmp
inc
cmp
mov
jae
mov
mov
lea
sub
push
enter
jae
or
enter
hlt
cmps
loopne
enter
adc
dec
in
cmp
cmp
inc
lods
xchg
push
xor
cmp
xchg
mov
jo
cmp
test
cmps
dec
push
aam
in
test
fisttp
xadd
movs
adc
jl
pop
cmp
(bad)
jmp
stos
lea
add
add
iret
push
cld
mov
sar
xchg
js
cmp
ds
cmps
adc
call
test
mov
adc
ja
mov
sbb
xchg
ret
cmp
mov
adc
call
mov
mul
cli
cmp
shl
je
push
push
adc
sbb
add
les
scas
mov
push
add
or
jg
nop
xor
mov
test
add
ficom
stos
(bad)
fcmovbe
test
lea
mov
jb
lock
dec
mov
and
inc
int3
push
push
adc
mov
mov
sub
push
ret
and
popf
push
add
jle
adc
ror
push
add
push
push
(bad)
add
pmaxub
and
in
les
lock
mov
test
xchg
sub
pop
xor
push
mov
inc
push
xor
dec
adc
jmp
pop
aaa
fmul
ja
add
dec
fmul
jg
sbb
pop
fnstsw
push
loop
add
pop
jecxz
das
and
dec
sbb
push
retf
(bad)
dec
mov
loop
dec
fdiv
sar
jecxz
or
(bad)
into
nop
sbb
mov
sub
lock
pop
and
nop
cmp
xchg
add
add
call
test
setne
dec
push
push
popa
add
xchg
add
es
jae
and
mov
xor
fadd
push
mov
retf
mov
sub
daa
push
push
fisubr
sub
les
cmp
sbb
adc
cli
push
mov
ret
add
jne
inc
cs
loopne
inc
shl
add
fldcw
or
je
mov
neg
je
cs
dec
inc
mov
cmps
dec
mov
dec
add
lods
shl
xlat
push
or
or
cmovbe
daa
dec
push
loop
fnstsw
sub
mov
mov
xchg
add
sub
cdq
and
rcr
bound
sub
add
sbb
and
and
loope
xor
test
mov
mov
mov
int3
fist
call
add
hlt
push
jbe
mov
cwde
mov
jbe
sub
iret
sub
mov
(bad)
cs
and
std
adc
mov
pop
rcl
loop
cld
fwait
jbe
lods
xor
and
setne
or
xor
dec
inc
(bad)
fisubr
aam
add
adc
pusha
out
enter
jg
mov
or
mov
lea
adc
mov
or
ds
jmp
mov
xor
call
bound
push
nop
mov
pop
mov
hlt
ds
(bad)
loope
jg
jge
scas
rep
mov
lea
dec
ror
outs
mov
sub
pop
fdiv
clc
add
mov
cmp
mov
and
cmp
jl
xchg
in
jl
dec
daa
mov
adc
mov
adc
je
cwde
cli
mov
and
das
movs
cmp
or
mov
jne
or
ja
cmp
loop
setl
push
pop
jl
jb
push
xor
test
lea
ins
adc
pop
push
inc
cmp
pop
or
inc
sub
jne
imul
push
add
gs
es
sar
sub
js
or
ror
ret
adc
into
sbb
mov
jmp
push
adc
sbb
jge
jl
ds
jg
mov
push
adc
div
jge
retf
stos
and
push
pop
sbb
push
push
sub
mov
nop
push
pop
mov
push
dec
push
shl
dec
jl
add
inc
mov
cld
jg
pop
jl
sar
fstp
std
(bad)
(bad)
dec
test
inc
(bad)
inc
je
dec
int
dec
adc
(bad)
or
jge
call
add
dec
xchg
pop
push
out
mov
dec
rol
cdq
mov
jl
nop
add
cwde
or
fild
jge
jge
add
scas
inc
sbb
es
(bad)
cmp
sete
mov
push
push
push
push
call
aam
pop
dec
jo
cmp
cmc
test
and
lock
fsubr
sbb
push
adc
fucomi
jnp
aaa
add
gs
and
arpl
aas
jle
add
test
clc
lea
fmul
push
pop
in
cmp
and
fmul
xor
in
inc
add
lock
fbstp
mov
and
sbb
xor
aam
add
cmp
mov
leave
mov
sbb
and
shl
fistp
and
or
inc
(bad)
and
das
xchg
inc
das
movs
adc
cmp
fadd
add
add
arpl
sbb
jb
mov
push
lea
imul
xor
push
daa
xchg
dec
and
fs
dec
xchg
imul
cdq
cmp
test
arpl
xor
test
(bad)
cs
mov
inc
aam
jns
lea
scas
mov
lock
lea
xor
mov
mov
mov
mov
cmp
je
push
inc
xchg
add
jmp
add
adc
ret
pusha
inc
sub
(bad)
outs
jae
jg
add
in
mov
mov
xchg
mov
fist
in
lea
mov
push
stc
mov
push
sbb
xor
mov
sbb
add
jne
out
sbb
dec
je
or
repz
lds
push
xor
call
adc
js
or
or
sbb
popf
cmp
je
cwde
pop
mov
js
push
cmp
(bad)
add
shl
cmp
dec
jns
lock
push
jnp
mov
push
inc
push
add
cmp
loopne
inc
push
enter
push
lea
and
sub
cdq
sbb
push
popf
stos
xor
icebp
test
push
repz
out
in
stc
mov
pop
adc
xor
push
push
push
or
mov
movs
sbb
mov
mov
jmp
lock
mov
ds
cmp
add
scas
aad
dec
add
sbb
dec
xor
inc
sbb
mov
cmovae
add
adc
push
xor
sub
cmp
cmova
stc
(bad)
dec
cmp
jne
mov
inc
inc
cmp
jne
int3
loopne
lea
lock
mov
iret
cs
iret
shl
popa
out
int
add
adc
sub
lock
in
test
inc
add
jbe
add
idiv
lods
mov
push
xor
jb
fimul
sahf
xor
cli
mov
mov
xor
adc
je
fldcw
out
adc
pop
int3
fldcw
lea
xchg
loopne
clc
push
xchg
push
push
adc
std
mov
dec
xor
shl
sbb
fadd
inc
iret
jb
cli
and
fidivr
and
dec
push
sub
iret
sub
ret
or
icebp
push
cli
(bad)
into
shl
jne
cmps
dec
idiv
adc
je
jl
jecxz
sbb
push
push
pop
je
repz
add
xlat
imul
push
or
std
sbb
icebp
loop
jo
xchg
lahf
mov
pusha
xor
cmps
imul
cmp
jp
xor
ds
sub
or
inc
imul
lock
adc
add
mov
sbb
and
test
inc
fld
imul
mov
out
inc
aaa
push
aam
sbb
mov
xor
xor
shr
mov
sub
ja
mov
pop
idiv
mov
xchg
pop
inc
dec
pushw
add
xor
and
add
mov
mov
push
mov
jmp
add
cmp
(bad)
sub
int3
inc
push
push
ins
pop
add
call
push
sqrtps
ins
sbb
mov
push
imul
stos
bound
or
xor
(bad)
daa
and
push
add
jge
dec
add
and
add
mov
pop
mov
adc
pop
xchg
bound
pop
add
or
push
and
pop
and
mov
hlt
cmp
je
mov
xor
mov
ret
inc
shr
adc
cmova
and
test
clc
movzx
push
(bad)
fist
call
mov
add
test
loop
dec
add
mov
mov
pop
scas
adc
stos
sub
push
mov
bound
inc
add
sub
sub
or
or
jae
jmp
cmp
add
call
pop
repnz
ret
dec
push
add
pop
or
and
adc
xor
test
adc
push
add
sbb
add
aad
xor
retf
stos
sbb
sbb
mov
or
in
mov
add
jl
stc
test
pusha
aam
cmps
sbb
mov
pushf
xor
retf
inc
jnp
adc
or
inc
lods
xor
test
xor
pusha
pop
test
cld
ja
inc
cmp
cmp
jl
push
push
mov
fcmovbe
adc
mov
sbb
add
add
fiadd
or
repnz
cmp
mov
je
sbb
dec
add
pop
sbb
add
aas
repnz
lods
lea
jmp
int
test
jl
add
cmp
dec
inc
lock
and
cmp
sub
fimul
xor
and
cmp
ins
jl
or
retf
cli
inc
and
add
push
mov
test
out
ins
es
retf
bound
loop
rol
and
sub
jg
cs
inc
or
jne
pop
and
cmp
test
jne
jp
xchg
and
rol
adc
adc
mov
scas
xor
sub
mov
aad
int
inc
and
jb
bound
(bad)
pushf
jge
pushf
mov
mov
fsubr
mov
inc
loope
cwde
cmp
jbe
and
push
cmp
ja
push
sbb
push
pusha
xchg
das
ja
shl
inc
aas
cmp
dec
and
(bad)
in
stos
out
shl
rcr
and
mov
cmps
sub
fcomp
pop
rol
sbb
or
test
dec
loopne
cwde
sbb
fsubr
inc
push
adc
add
cmp
cmp
jl
sbb
add
add
push
hlt
adc
fnsave
sub
in
adc
es
adc
add
adc
xchg
mov
push
or
mov
add
push
mov
or
in
je
test
sub
pusha
push
cmp
sbb
inc
mov
add
jb
cmp
jge
add
xor
pop
adc
add
out
call
sub
sbb
mov
cmp
jne
pop
call
aaa
je
push
mov
inc
pushf
mov
cmc
nop
pop
jb
mov
cmc
dec
mov
sar
mov
cwde
and
xor
mov
xor
mov
mov
pop
push
in
(bad)
(bad)
jg
mov
pop
cmp
je
push
pop
cmp
je
cmp
je
out
xor
mov
movs
mov
js
out
sub
sbb
sets
(bad)
aaa
cmp
mov
mov
jle
mov
jecxz
lock
mov
lea
mov
inc
sar
sub
jmp
push
test
push
xor
cmps
cmp
mov
mov
xor
fld
xor
jg
lea
loop
jne
push
dec
nop
or
dec
sbb
lea
jne
adc
mov
push
mov
jne
pop
int3
push
sub
test
push
movs
pop
ja
or
out
ja
fist
(bad)
xor
mov
jmp
dec
inc
scas
ds
push
mov
xchg
cmps
sub
jmp
in
add
or
fstp
add
inc
mov
retf
int3
mov
je
out
std
daa
mov
mov
test
je
pop
rcr
cli
adc
xchg
jge
(bad)
in
xlat
adc
add
push
or
adc
push
pop
pusha
or
dec
cmp
and
cli
mov
les
test
jno
icebp
push
mov
or
sub
mov
lea
mov
lock
mov
adc
mov
mov
sar
push
push
lea
jae
or
call
cli
sahf
je
jp
ja
(bad)
icebp
cld
push
sub
data16
push
(bad)
es
add
mov
lea
push
cli
push
mov
dec
and
add
add
inc
add
retf
cmp
cdq
sbb
(bad)
or
call
arpl
out
es
test
add
push
or
(bad)
stos
jno
loop
sbb
fisttp
imul
jmp
or
inc
inc
xor
sub
push
dec
fdiv
add
popf
adc
and
dec
adc
not
and
and
add
add
adc
lea
mov
or
nop
in
or
add
jge
out
ins
in
pop
nop
cs
fisubr
ret
je
xchg
fist
xor
pop
sbb
adc
pushf
mov
popa
add
stos
add
inc
jmp
add
inc
dec
add
(bad)
mov
inc
and
das
adc
jo
js
cmp
add
shl
inc
push
xor
js
gs
push
in
fsincos
add
shl
push
movs
jg
pop
dec
aas
jne
aaa
xor
push
mov
push
mov
stc
cmp
or
mov
loop
add
(bad)
push
adc
popa
jmp
in
push
push
xor
push
xchg
add
dec
pop
sbb
pop
repz
push
pop
lock
and
lock
mov
pop
mov
adc
adc
bound
add
loopne
push
push
mov
sbb
add
add
out
call
inc
or
and
jmp
cwde
scas
sbb
mov
sub
into
or
stos
mov
test
cmps
je
mov
fcomp
inc
nop
jo
push
adc
out
sbb
push
std
je
and
xchg
xor
movs
aaa
cmp
add
imul
jbe
xor
mov
jmp
mov
sbb
rol
pop
daa
add
push
adc
pusha
loop
dec
xor
cld
jmp
mov
pushf
add
lea
and
push
add
and
lea
and
inc
mov
push
push
call
ins
pusha
push
clc
rcr
sub
jne
shr
pop
in
fild
outs
out
mov
pop
repz
ret
repnz
inc
mov
outs
rcl
adc
jne
inc
pusha
jl
test
cmp
jne
rol
stc
popa
and
push
push
je
jo
jmp
aaa
add
lea
push
push
sbb
aaa
clc
push
lea
mov
push
push
add
cmp
aaa
dec
push
push
lea
out
add
add
jmp
inc
cmc
pop
pop
in
jne
pusha
pop
push
ds
inc
inc
and
xchg
add
mov
ret
add
fdiv
dec
cld
mov
in
inc
add
inc
mov
xor
inc
lock
loope
arpl
js
in
popf
in
push
popa
and
sbb
popa
test
fiadd
outs
aaa
je
sbb
iret
inc
shl
sar
push
push
(bad)
mov
movs
pop
sbb
dec
je
jmp
cli
mov
add
add
add
lea
adc
push
mov
(bad)
sar
sub
cmp
pushf
jp
xor
push
je
outs
push
gs
mov
add
pop
cwde
loopne
lock
lea
mov
sbb
mov
cmp
je
sbb
sbb
add
sbb
mov
nop
hlt
push
movs
and
js
and
mov
pop
shl
les
sub
inc
gs
mov
xor
mov
mov
mov
or
pop
les
daa
sub
je
inc
inc
mov
xor
sub
(bad)
fild
mov
mov
jmp
mov
mov
mov
fdiv
mov
pop
add
stos
loope
xchg
push
lea
mov
push
and
les
addr16
mov
test
mov
jl
mov
xor
push
push
push
push
add
sbb
push
mov
call
push
or
jne
jle
dec
stos
loop
fs
popa
loopne
jge
add
rcl
adc
popf
mov
daa
cli
pop
sbb
inc
loopne
push
jmp
push
mov
push
lods
sub
test
js
sbb
push
mov
fiadd
pusha
ds
mov
xchg
cmps
es
mov
fsubr
pop
mov
push
jmp
or
push
cmc
cmovne
xor
and
in
outs
jne
into
or
shl
lahf
adc
xor
add
jecxz
mov
dec
cld
push
or
cs
fnstsw
dec
push
icebp
mov
out
pop
lea
pushf
push
mov
or
or
inc
push
(bad)
fdivr
dec
mov
xor
sub
sbb
xchg
pop
lds
div
shr
pop
je
loopne
dec
ds
push
or
dec
mov
lea
jb
movs
aaa
in
std
call
fidivr
and
inc
adc
pusha
js
mov
enter
mov
xor
mov
loope
sub
xchg
xor
add
popf
loopne
mov
push
mov
enter
out
pop
push
push
mov
add
push
push
lea
es
ins
sub
inc
fstp
push
lea
push
(bad)
mov
or
adc
add
push
call
cmp
jne
mov
shl
add
popw
sti
xchg
ds
push
push
inc
push
push
cmp
test
aas
mov
inc
push
push
xchg
push
and
push
loopne
aas
out
std
dec
xchg
xor
cmp
cmp
cmp
push
adc
jne
lea
push
int3
shl
adc
mov
add
lea
add
or
shl
add
inc
add
cmp
mov
rol
mov
adc
(bad)
out
pusha
aaa
cld
or
add
test
or
add
imul
loopne
lahf
cmp
adc
dec
imul
push
scas
or
mov
lds
or
pusha
inc
adc
aaa
or
scas
cdq
fstp
push
add
or
rcr
ins
loop
sub
js
dec
js
mov
mov
inc
fnstenv
push
sbb
jne
pop
ret
xchg
mov
dec
(bad)
shl
push
imul
or
push
cmp
aas
mov
jmp
push
xor
clc
sbb
rol
inc
sbb
(bad)
ja
or
mov
mov
jl
dec
add
mov
jmp
dec
push
in
adc
inc
sbb
or
mov
mov
mov
leave
push
mov
mov
xchg
(bad)
in
adc
rcl
cmp
daa
rol
pop
or
ror
add
push
push
lea
aas
xor
jo
clc
aaa
into
sub
mov
sar
push
add
jae
cld
mov
or
mov
or
jge
retf
mov
push
push
push
push
push
daa
ja
psrlq
push
mov
enter
inc
ror
or
mov
pop
pop
pop
pop
mov
jne
push
cmc
dec
cli
mov
or
add
pusha
dec
cmp
sbb
stc
adc
pop
xor
jmp
xor
jne
sub
pop
cmps
add
inc
mov
jmp
mov
ror
in
in
fwait
push
cli
or
aam
jle
mov
inc
add
or
inc
aaa
jge
idiv
mov
mov
jae
xor
lea
neg
je
adc
cwde
and
in
sbb
in
into
and
lea
cmps
(bad)
xchg
popf
or
sbb
cld
cmp
je
out
inc
add
jl
in
popa
cmp
add
and
pusha
adc
cmp
jb
mov
lea
and
sub
adc
int3
cmovae
cs
and
xchg
outs
xor
inc
sbb
add
adc
pop
add
add
pop
inc
xor
shl
add
gs
push
aad
stos
in
push
add
(bad)
dec
inc
sbb
inc
pushf
jne
mov
cmp
jne
mov
cmp
je
push
lods
mov
push
cli
push
push
or
in
fdivrp
cmp
push
ret
loopne
test
(bad)
(bad)
call
neg
pop
sbb
ins
cwde
and
and
fsubr
dec
add
push
or
mov
inc
test
sbb
sbb
in
daa
or
xchg
retf
pop
into
xchg
add
pushf
lea
adc
mov
mov
adc
je
adc
or
ins
stc
jae
call
or
pop
pop
push
pop
data16
cmp
(bad)
inc
cmp
add
jmp
cmp
je
cmp
jne
movzx
or
mov
cmp
jne
fisttp
sub
out
jae
cmp
test
and
sub
add
sbb
push
jnp
jmp
je
test
mov
jae
cs
je
sbb
push
and
dec
fsincos
iret
push
je
mov
mov
sbb
fimul
(bad)
sub
mov
sar
je
movzx
call
or
add
pop
loopne
mov
lahf
xchg
jg
std
adc
inc
cld
mov
idiv
ret
jb
push
pop
jg
inc
jmp
inc
pop
dec
test
cmp
je
(bad)
fist
inc
cmp
jb
mov
jne
cmp
jne
cmp
jne
mov
je
mov
mov
shl
xchg
mov
cmp
jne
sub
hlt
push
inc
call
cli
cmp
jne
push
push
cmp
cld
adc
mov
rol
hlt
lea
cld
cmp
jne
add
or
test
add
fucomip
push
jbe
xor
jno
icebp
mov
jg
pop
mov
jne
xor
jmp
push
es
arpl
pop
xor
xor
xchg
ret
adc
cld
dec
sbb
mov
sub
sub
lea
cli
test
jne
das
inc
add
mov
and
mov
ins
cmps
push
add
aam
test
xor
rol
or
sbb
inc
push
aam
push
push
cli
mov
pop
push
mov
pop
xor
or
cmp
push
and
div
inc
mov
mul
call
sahf
pop
add
xor
idiv
inc
je
push
int3
jl
add
adc
xchg
cmps
icebp
pop
xor
add
and
jmp
push
loopne
mov
jo
mov
mov
mov
ror
xchg
inc
add
fild
add
enter
retf
inc
inc
jge
mov
retf
test
je
(bad)
adc
loopne
cmp
jne
and
aam
fsubr
and
dec
out
mov
mov
jle
sbb
les
gs
sbb
icebp
lea
scas
cmp
or
cmp
and
cmp
fild
pop
cmp
pusha
add
mov
add
out
mov
adc
das
loopne
add
inc
push
or
mul
or
pop
loopne
mov
jle
add
nop
je
jo
scas
clc
cmp
push
cmp
inc
inc
sbb
push
pop
shl
outs
or
repz
fwait
sub
jo
pop
lods
rcl
aad
imul
ror
aam
and
(bad)
mov
mov
loopne
fiadd
xchg
or
pop
mov
daa
or
xchg
cld
push
aam
inc
jo
mov
xor
or
jl
dec
je
dec
je
dec
je
mov
mov
xchg
inc
hlt
loope
xchg
add
add
mov
clc
(bad)
leave
or
call
inc
fiadd
sub
xor
and
shl
push
pop
pop
or
or
xchg
jl
shr
clc
hlt
ror
add
dec
inc
mov
xor
adc
push
popa
push
push
adc
and
add
pop
adc
push
(bad)
(bad)
(bad)
fist
maxps
push
add
lea
mov
mov
mov
mov
cmp
sbb
jle
mov
dec
mov
mov
jl
xor
mov
outs
or
mov
mov
and
aam
sahf
stos
push
push
aad
sahf
in
mov
lds
adc
mov
les
mov
pop
pop
lods
lea
fisubr
enter
mov
dec
sti
lea
jge
cmp
or
pop
and
xchg
(bad)
div
ror
inc
mov
call
jmp
mov
ret
push
push
idiv
dec
std
and
and
das
mov
or
sbb
outs
pop
mov
in
movs
outs
xchg
or
and
jne
mov
pushf
xchg
test
je
push
ja
popf
inc
add
out
add
rol
stos
push
jmp
mov
or
or
push
das
ja
popf
sbb
rol
lea
popa
sbb
add
mov
push
inc
cmp
cmps
sbb
pop
mov
push
test
lds
mov
inc
dec
in
imul
adc
jne
out
loope
pop
daa
xor
add
fistp
push
int
mov
(bad)
inc
fdivr
pop
shl
sbb
or
and
imul
in
(bad)
(bad)
fdivr
inc
lahf
fsub
test
gs
jbe
mov
mov
add
stos
mov
jo
pusha
xchg
inc
div
mov
push
mov
push
push
add
je
push
ret
push
mov
pop
ja
sub
cmp
sahf
pusha
aaa
sbb
sbb
mov
inc
pop
out
xor
push
jmp
mov
pusha
adc
dec
test
clc
out
inc
lods
xchg
ffree
push
shr
push
mov
std
mov
aam
cmp
cwde
push
popa
sbb
mov
push
lsl
into
jmp
test
cwde
pop
add
jo
push
add
cmc
cmp
mov
mov
push
push
xchg
push
popf
aam
adc
add
cmps
add
sub
lods
or
xor
and
cmp
cld
mov
jae
and
xor
push
mov
shl
sbb
lahf
cmps
pusha
jo
frstor
sub
add
dec
jl
pop
jnp
add
ss
ins
dec
ins
mov
inc
sub
out
adc
inc
sub
add
test
sub
std
mov
lock
popf
bound
jmp
mov
pusha
js
pushf
mov
retf
cmps
out
loope
adc
or
mov
adc
aaa
or
xchg
adc
inc
cmc
lea
sbb
push
fabs
mov
pop
data16
shl
inc
dec
cli
sbb
repnz
out
and
add
aad
jne
adc
sbb
dec
mov
cwde
push
rol
in
cmp
bound
inc
or
data16
mov
sbb
cs
mov
sbb
test
push
hlt
mov
btr
jmp
sub
mov
movs
stos
es
rcr
outs
push
aas
or
fwait
rol
and
xor
push
mov
or
inc
enter
add
mov
int
cmps
add
or
aaa
dec
lods
scas
xadd
pushf
push
enter
loop
aam
and
clc
scas
mov
sub
add
mov
or
rcl
add
sub
push
xor
and
jno
aas
cs
packssdw
(bad)
sbb
jne
mov
add
ins
and
mov
cmp
xor
cli
add
dec
aad
bound
dec
test
je
xor
(bad)
inc
je
test
je
cmp
je
mov
jne
(bad)
xchg
push
repz
mov
ret
mov
jmp
inc
push
lea
jg
nop
and
push
loop
loope
mov
xchg
out
jecxz
fisttp
ret
loopne
lods
mov
fwait
xchg
cmp
or
test
cwde
sbb
int3
mov
in
out
js
dec
mov
(bad)
dec
mov
pop
movs
mov
int3
mov
mov
and
jmp
out
pop
mov
lahf
push
ror
stos
jno
mov
fdivr
mov
sti
inc
hlt
loopne
push
(bad)
dec
mov
mov
lea
push
ins
test
sbb
adc
jne
mov
rcr
les
inc
je
mov
cmp
int3
fcmovb
aas
outs
sub
dec
ja
lock
xor
mov
pushf
dec
bound
jnp
sbb
jmp
neg
sbb
pmaddwd
es
inc
adc
and
dec
jnp
sub
(bad)
add
push
pop
shl
jge
sbb
jne
shl
adc
or
cmp
out
out
adc
lds
and
addps
stos
pop
add
loopne
dec
mov
test
popf
clc
jg
call
mov
mov
out
ret
test
pop
movs
mov
inc
xor
push
push
ret
pop
call
xor
fld
and
fild
test
xchg
sub
je
inc
enter
les
or
ds
add
xor
adc
adc
push
mov
sar
mov
mov
xor
sub
inc
mov
and
loop
xor
mov
scas
retf
loopne
mov
xor
xchg
mov
bound
clc
(bad)
jne
push
add
jle
bound
leave
in
mov
sbb
and
pop
cmp
je
xor
and
and
leave
inc
popa
loopne
add
leave
pop
xor
mov
data16
leave
ins
or
and
mov
into
dec
je
cmp
je
add
test
sbb
or
xor
mov
popf
inc
loop
dec
xor
scas
and
sub
cwde
mov
add
mov
rol
jne
lea
cwde
test
dec
sub
dec
sub
xor
sub
and
loopne
push
pop
jg
and
nop
pop
xchg
sub
or
je
popa
add
out
retf
retf
(bad)
and
loope
or
inc
ret
cld
sahf
pop
nop
je
add
sbb
and
or
in
xor
xchg
dec
loop
je
aad
and
popa
loop
push
xor
mov
and
jbe
push
sub
add
ins
dec
and
xchg
adc
loopne
ror
jmp
and
dec
jl
push
pop
pusha
sub
xchg
in
pop
fcom
or
neg
mov
pop
mov
lods
cdq
or
push
lds
jge
add
inc
ss
test
xor
xor
fld
rcl
jo
inc
pop
adc
and
mov
mov
pop
clc
clc
or
pushf
xor
cmp
push
icebp
lahf
jmp
push
(bad)
(bad)
scas
cli
mov
call
push
adc
pop
in
adc
dec
xchg
pop
push
icebp
ja
pop
add
mov
sbb
and
jmp
les
inc
in
cmovae
push
call
sbb
jnp
cmc
mov
dec
in
clc
push
mov
cmp
add
mov
xchg
stc
bound
subps
sbb
ja
and
loope
sbb
push
repnz
idiv
out
cli
shl
cmp
xor
push
pusha
mov
(bad)
daa
adc
add
addr16
loope
dec
add
pop
int3
inc
enter
dec
inc
les
outs
cmp
in
and
dec
mov
and
add
sbb
out
dec
or
cmp
mov
push
(bad)
pop
cld
mov
loope
(bad)
nop
mov
icebp
cmps
test
push
add
popa
pop
adc
pop
xor
mov
std
jl
jnp
jle
test
mov
push
lods
test
mov
sbb
xchg
cmp
je
sbb
inc
loope
(bad)
ins
mov
push
int3
stos
adc
inc
outs
adc
fst
cmp
add
cmp
add
loope
xor
lock
mov
inc
mov
sbb
mov
add
jae
mov
push
mov
ret
aaa
sbb
clc
mov
xchg
or
cmp
aas
fs
adc
loop
mov
mov
inc
mov
jmp
outs
inc
adc
(bad)
fdivr
mov
add
mov
mov
and
scas
add
cmp
jne
or
jae
lock
or
cli
mov
push
xor
lea
inc
add
je
add
xchg
test
sbb
mov
or
and
pop
dec
outs
xor
pop
jecxz
or
lea
cmp
pop
in
sbb
dec
dec
movs
loope
enter
inc
sub
loope
out
mov
movs
xor
rol
dec
xor
xchg
inc
shl
les
dec
adc
(bad)
inc
or
mov
push
mov
mov
mov
jmp
xor
or
sbb
inc
and
mov
inc
push
pop
xchg
daa
shl
pop
pop
dec
add
int3
pop
pop
pop
add
or
add
pop
mov
rol
inc
lea
xor
jmp
mov
pop
fst
fmul
xchg
ins
mov
xchg
loopne
sbb
inc
sbb
inc
lods
loopne
pop
ror
lock
stos
xor
and
inc
test
cmp
add
adc
cmp
(bad)
jg
adc
push
push
mov
xor
mov
cmp
psllw
stos
test
pop
rol
push
push
pop
(bad)
loopne
mov
cld
push
iret
jne
ror
xchg
jnp
jo
pop
mov
inc
xlat
mov
(bad)
xchg
sbb
shl
xchg
outs
mov
ret
or
inc
loopne
mov
test
add
fcomp
dec
xor
and
mov
cmp
jae
adc
es
hlt
push
pop
inc
loopne
movs
jl
movs
add
xchg
sbb
psubd
addr16
test
retf
loop
ins
or
fdiv
inc
loope
das
xchg
add
test
fimul
dec
mov
pop
push
mov
add
in
cmp
ja
dec
cdq
pop
idiv
mov
mov
jmp
mov
and
leave
je
imul
add
scas
aaa
pop
add
pop
or
and
adc
add
pop
add
fwait
or
adc
or
pop
mov
pop
mov
mov
stos
cmp
outs
lea
leave
adc
jo
or
xor
imul
paddsb
lea
xor
jmp
push
call
mov
add
sub
loope
push
inc
aad
or
add
cmp
xor
test
add
mov
adc
stc
add
sub
lea
mov
(bad)
(bad)
inc
push
cdq
pop
idiv
mov
shr
sub
cmp
jae
xor
jmp
add
cmp
cmovb
cmp
dec
jo
push
mov
mov
add
sub
dec
push
and
dec
leave
mov
mov
or
inc
mov
add
call
ds
stos
or
dec
cld
pop
jmp
test
je
push
inc
cmp
cmp
push
pop
add
add
cmp
jne
mov
mov
out
stos
pushf
add
test
cld
aas
push
push
sti
je
push
pop
dec
xchg
push
add
cmp
jne
mov
(bad)
add
imul
mov
pop
push
icebp
pusha
inc
mov
cld
dec
mov
add
scas
and
ins
push
mov
push
xchg
xor
enter
push
jb
sbb
xchg
sub
add
sub
ja
scas
adc
add
es
pop
mov
(bad)
in
sbb
ret
push
call
sbb
or
push
in
in
and
ret
xor
mov
xor
cld
pop
push
push
lea
mov
push
or
lods
and
loopne
dec
add
cmp
add
dec
add
push
aam
les
cs
test
sub
mov
adc
pop
adc
add
loopne
xor
js
fsub
jecxz
cs
inc
ror
push
pop
adc
add
lea
in
fist
shl
mov
mov
xor
mov
mov
inc
push
hlt
and
inc
sub
adc
out
(bad)
and
push
add
lods
xchg
sub
js
push
lea
call
in
fidiv
popa
inc
mov
call
mov
push
adc
pushf
mov
mov
ins
(bad)
(bad)
dec
mov
pop
adc
loop
outs
mov
loop
(bad)
loop
sbb
or
jne
push
or
aas
loope
daa
or
or
and
push
add
pop
aam
sbb
mov
mov
or
leave
mov
(bad)
and
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
jmp
mov
mov
lahf
sub
dec
lods
mov
mov
mov
cmp
je
push
push
aam
jmp
icebp
jg
shr
add
add
inc
pushf
(bad)
jmp
xor
mov
add
jne
jo
sbb
push
pop
dec
inc
xor
test
jp
test
adc
push
sub
sbb
ins
jnp
push
or
or
or
pop
inc
jecxz
sbb
xor
add
stc
push
pop
cs
lea
pop
push
xchg
outs
or
call
or
push
dec
mov
add
push
push
xchg
imul
jecxz
bound
and
mov
add
test
sbb
adc
lock
je
add
jae
cmp
xchg
mov
and
shl
cmp
mov
mov
add
jle
push
adc
pusha
xor
push
cmp
je
adc
inc
scas
add
imul
add
mov
xchg
sbb
mov
fild
aas
cmp
sbb
push
data16
push
jmp
hlt
ret
add
or
mov
and
je
ror
push
push
push
lea
add
mov
inc
js
push
push
pop
and
pop
dec
add
out
add
mov
inc
je
sbb
clc
mov
aas
add
push
icebp
add
push
inc
fiadd
cwde
std
inc
sub
push
push
push
sub
fnsave
push
jno
aas
aad
fstp
out
fdivr
sub
jg
pop
mov
xor
stos
out
test
inc
adc
inc
mov
inc
xchg
inc
leave
mov
mov
mov
cmp
adc
pop
ror
fistp
sub
push
lea
rol
jmp
push
je
inc
test
push
pop
push
push
push
xor
adc
push
dec
cdq
cmps
clc
xchg
or
mov
mov
out
xor
mov
mov
or
add
inc
test
mov
mov
(bad)
mov
mov
mov
out
add
push
cs
sbb
jno
mov
mov
test
std
or
lods
lea
add
mov
inc
mov
outs
mov
push
mov
and
add
dec
pushf
sub
mov
and
daa
sbb
cmp
ss
and
je
or
popf
and
pushf
push
mov
jp
ss
or
mov
nop
sub
lods
lea
pusha
jp
fstp
scas
push
sbb
add
push
lock
push
ja
les
sbb
les
ja
xor
inc
inc
out
adc
dec
test
ror
add
mov
pop
mov
fdivr
inc
cmp
(bad)
std
push
mov
push
sub
pop
ror
adc
mov
add
(bad)
loopne
dec
int3
pop
test
sti
neg
pushf
push
lea
mov
push
add
rol
mov
dec
cmp
cmp
mov
call
loopne
(bad)
in
adc
retf
rcr
inc
mov
clc
xlat
jae
not
mov
test
pop
cmp
adc
mov
cwde
xchg
enter
dec
mov
sub
mov
mov
xor
leave
and
pop
push
or
sub
mov
aas
or
adc
aad
das
out
jmp
add
and
add
add
cmp
loopne
sbb
mov
sub
xor
push
in
mov
push
mov
xchg
icebp
dec
push
push
jge
inc
push
ja
ja
or
aam
in
jle
retf
loopne
(bad)
add
mov
fs
ja
xor
dec
jp
fidivr
mov
and
in
mov
test
stos
(bad)
ins
(bad)
out
rcl
bound
add
neg
adc
push
push
jb
mov
lea
cmp
jne
inc
xor
aad
int
es
mov
adc
inc
pop
stos
in
xor
rcr
ss
ret
mov
and
imul
mov
dec
push
push
mov
cli
xchg
push
loopne
and
add
add
add
test
push
xor
jb
mov
jno
shl
jle
fucomi
sbb
mov
sub
jae
mov
popf
push
icebp
sbb
push
gs
inc
add
bound
and
inc
push
mov
push
mov
mov
cmp
(bad)
lock
and
mov
push
xchg
inc
call
ds
mov
int3
and
inc
cld
imul
add
jae
aas
and
ja
jne
cmp
jne
mov
inc
hlt
mov
push
pop
std
cmp
js
je
add
jmp
sub
cli
mov
push
dec
jo
push
jne
std
jmp
mov
mov
call
cmp
inc
add
add
call
outs
jmp
lahf
mov
mov
imul
fsub
push
mov
push
mov
jmp
daa
(bad)
aaa
adc
sub
pop
add
push
div
mov
pop
mov
pop
jno
pop
add
sub
les
outs
and
adc
lock
push
imul
jg
or
mov
mov
cmp
jae
cmp
ja
mov
xor
xor
enter
ficomp
mov
add
push
js
mov
add
fwait
or
and
mov
ret
add
pop
pop
push
jo
pop
pusha
xchg
mov
and
cdq
shl
mov
inc
sub
or
mov
jge
lea
add
mov
and
div
(bad)
mov
add
mov
adc
add
inc
pop
jge
neg
data16
push
mov
iret
or
iret
out
adc
mov
jg
add
adc
dec
pop
movs
stos
mov
pop
mov
jg
call
int3
add
and
add
int3
retf
xor
and
mov
and
add
(bad)
out
jo
hlt
(bad)
cmp
jne
lea
cmp
je
sbb
dec
xor
or
clc
add
push
add
push
and
mov
mul
jo
jle
adc
push
(bad)
in
jle
jmp
jle
push
push
push
in
lods
(bad)
jg
adc
jne
add
sbb
cmp
je
and
inc
push
or
ret
test
add
cmp
pop
loopne
cmp
mov
or
inc
cmp
jmp
inc
mov
cmp
jge
scas
js
or
adc
rcr
mov
(bad)
icebp
pop
push
lahf
stos
xor
hlt
mov
sbb
add
inc
dec
les
dec
inc
mov
inc
rcl
jo
inc
jno
jl
mov
pushf
xor
sbb
test
in
push
and
or
xor
sub
adc
(bad)
and
fs
add
movs
sbb
shr
fcom
xchg
mul
outs
lock
add
jecxz
add
or
xchg
test
inc
sar
lea
mov
add
mov
add
shr
cmc
popa
test
sub
add
or
dec
inc
sub
fs
push
cmp
pop
aas
push
adc
popa
push
fst
or
and
push
add
adc
mov
add
dec
nop
and
test
cmp
jb
cli
outs
je
and
inc
push
push
cli
add
mov
and
retf
aad
cwde
sbb
imul
test
push
inc
pop
retf
(bad)
(bad)
jne
mov
add
inc
push
push
sbb
js
cmp
add
or
dec
cwde
mov
ret
dec
push
in
push
lea
or
add
sbb
mov
test
addr16
fmul
je
sub
ret
or
cmp
and
imul
aad
das
dec
int3
in
pop
test
out
or
cmc
into
jnp
cmp
movs
jle
add
push
or
inc
aam
add
mov
add
ret
jo
mov
pop
xchg
nop
sub
int3
sub
mov
inc
adc
push
fldcw
pop
inc
je
aam
push
mov
add
inc
je
dec
pop
popa
fs
mov
and
or
xor
(bad)
mov
jl
(bad)
jne
cli
adc
jl
push
push
adc
sub
mov
test
cmps
or
sub
loope
push
test
test
cmove
push
popa
add
mov
add
inc
push
in
pusha
push
add
dec
and
call
jmp
pop
test
je
int3
add
sub
cmp
test
out
int
add
in
in
dec
add
es
outs
mov
or
pop
and
dec
add
leave
or
scas
dec
jge
inc
loope
ret
adc
pop
inc
fs
mov
jbe
mov
push
push
aas
mov
or
dec
shr
mov
rcr
es
dec
push
(bad)
jmp
(bad)
out
retf
mov
mov
mov
mov
xor
mov
mov
mov
push
mov
retf
pop
mov
adc
pop
mov
jmp
inc
inc
sub
xchg
dec
dec
and
rol
or
and
(bad)
aas
sbb
push
add
je
or
or
dec
xor
mov
outs
mov
pop
dec
in
adc
in
sbb
adc
jo
lds
adc
mov
and
(bad)
sbb
cli
fisttp
arpl
mov
out
jl
rcl
and
bound
adc
push
pop
add
ja
lea
add
xchg
adc
pusha
pop
xor
movups
(bad)
test
lea
sub
mov
and
mov
rcl
push
cmps
test
add
mov
cmp
add
stos
fcomi
add
dec
cmp
adc
test
adc
cmp
jle
xor
leave
sbb
push
leave
mov
push
pop
sub
imul
int3
add
sub
es
pusha
jno
xor
add
pusha
push
scas
jl
movs
dec
fdiv
xor
bound
data16
inc
lods
sbb
jo
and
loop
sbb
gs
and
mov
enter
lods
mov
fst
xor
push
leave
loope
call
lock
push
clc
sbb
xor
mov
cdq
and
mov
jmp
dec
and
dec
cmp
add
ror
adc
pusha
je
dec
mov
loop
cli
add
rol
sahf
or
mov
ins
push
out
in
add
add
jbe
dec
rol
loopne
out
fs
add
add
push
pop
fsub
and
test
sbb
push
repnz
add
loopne
enter
aas
add
adc
lea
cmp
jne
sub
jo
(bad)
pop
pushf
test
mov
push
dec
ret
xor
sub
add
sub
test
inc
cmp
push
xor
add
mov
frstor
or
test
sbb
mov
pop
mov
out
jmp
je
add
add
shl
and
push
pop
dec
dec
mov
call
mov
or
inc
push
adc
dec
push
inc
inc
test
int3
push
test
outs
or
pop
adc
vmovntps
inc
cmps
test
enter
or
es
or
ret
js
sub
test
jns
loopne
add
hlt
xor
sub
les
inc
xchg
in
xchg
(bad)
mov
scas
out
inc
(bad)
xor
cmps
addr16
jmp
push
or
push
shl
cmp
push
inc
and
loopne
loop
nop
sub
or
shl
pop
lahf
(bad)
xor
jne
adc
push
or
mov
and
and
or
call
aaa
sbb
test
je
add
test
push
loope
mov
in
stos
je
jb
add
inc
and
sbb
adc
sub
pop
cmp
add
fisttp
fcomip
push
xor
ja
push
xor
ins
std
xor
cmp
add
cwde
(bad)
outs
mov
xchg
adc
fild
sbb
outs
mov
(bad)
mov
scas
inc
push
clc
add
dec
inc
xor
movs
mov
js
xchg
scas
mov
add
mov
test
inc
mov
sub
mov
and
jge
xor
mov
sub
xchg
xor
adc
nop
or
leave
and
xchg
cmp
out
lods
sbb
jmp
pop
add
jns
dec
inc
and
sbb
add
push
idiv
dec
ret
adc
jno
push
push
sbb
pop
mov
push
loopne
mov
inc
pop
adc
or
jne
jg
rcl
je
clc
lea
mov
dec
jmp
fadd
clc
sbb
jne
mov
add
ja
inc
hlt
mov
push
mov
or
mov
mov
lahf
imul
cmp
add
adc
and
aad
mov
xchg
add
or
popa
aaa
rol
repnz
pop
pop
mov
(bad)
imul
or
enter
push
ja
xor
inc
add
icebp
aaa
adc
into
add
mov
pop
jmp
mov
sbb
add
add
pop
push
aad
and
mov
dec
imul
sub
sar
out
sub
and
push
xchg
aas
sar
sub
(bad)
aam
(bad)
jb
lea
jl
nop
xor
not
or
(bad)
mov
mov
shr
sub
cmp
jae
xor
jmp
add
cmp
cmovb
sbb
or
imul
icebp
out
ss
nop
mov
mov
sub
and
push
add
push
sar
(bad)
or
loop
nop
outs
in
lea
push
je
stc
ficomp
fwait
and
shl
fadd
mov
push
mov
push
push
sbb
sbb
pcmpgtb
mov
int
cmp
cmp
jae
inc
add
ror
outs
and
lea
adc
mov
jne
sub
and
(bad)
out
es
push
sbb
lea
xor
or
in
jbe
push
push
pop
push
les
cdq
inc
adc
jg
push
push
add
cmp
pop
je
inc
add
jg
dec
cld
mov
mov
lea
mov
mov
inc
add
das
shl
push
push
push
cmp
pop
and
push
pop
add
adc
adc
inc
adc
sbb
push
call
push
and
sub
push
push
xchg
xor
add
pushf
mov
mov
pusha
sub
cmp
ror
xchg
add
mov
pusha
jge
mov
pop
leave
and
fwait
sbb
lods
add
popa
test
adc
je
(bad)
and
loop
call
out
xchg
and
aam
inc
mov
and
push
inc
mov
mov
sub
dec
xor
stos
mov
push
mov
cwde
push
add
adc
pop
mov
in
push
push
jl
popa
mov
inc
popa
mov
stos
enter
xor
rol
ja
inc
popf
push
inc
add
mov
inc
inc
repnz
les
dec
adc
xor
push
mov
int3
and
lea
or
push
cmp
inc
sar
imul
jge
jb
mov
rol
div
pushf
mov
jge
fistp
inc
daa
mov
and
daa
lods
loopne
out
pop
xor
mov
push
push
push
mov
daa
mov
xor
cmp
or
ss
jbe
sbb
xor
adc
or
sbb
loopne
icebp
or
or
clc
inc
sub
sub
movs
call
mov
sti
mov
mov
mov
xor
adc
call
pop
clc
pop
cmp
mov
jmp
cmp
(bad)
(bad)
jg
and
jb
mov
jmp
lea
adc
nop
std
cli
mov
je
in
out
sub
jne
mov
push
pop
or
(bad)
(bad)
mov
dec
mov
inc
mov
dec
movs
mov
mov
mov
cmp
push
mov
dec
lahf
sti
xor
xchg
dec
rol
outs
sub
or
idiv
pop
inc
(bad)
push
mov
mov
mov
push
aam
(bad)
mov
daa
add
and
stos
mov
iret
imul
mov
adc
push
pop
lds
or
or
adc
(bad)
jmp
test
je
clc
cmp
jbe
je
cmp
adc
call
imul
jmp
push
mov
dec
inc
jo
and
loopne
cdq
xor
lea
cmp
lea
fimul
or
xchg
pfnacc
xor
jae
push
cmp
cmp
(bad)
xchg
jecxz
push
add
lea
dec
xor
inc
jge
loope
add
jbe
cmp
shl
inc
call
inc
inc
cmp
jb
jmp
xor
jl
add
(bad)
xor
lock
mov
push
and
sbb
push
lea
push
adc
mov
adc
cwde
lea
add
stc
push
push
push
jnp
sbb
cmp
push
mov
mov
sbb
jbe
pop
push
in
add
hlt
cmps
nop
add
or
ror
dec
aaa
cmp
adc
pop
dec
add
mov
mov
or
mov
test
xor
push
sbb
mov
icebp
cmp
je
push
cld
jmp
retf
add
add
add
je
mov
inc
cwde
call
dec
imul
push
jbe
push
mov
pop
push
dec
std
fisttp
jle
add
test
mov
mov
add
ret
xor
xlat
pusha
or
xor
adc
jmp
out
xchg
retf
(bad)
ror
add
popa
push
add
sub
xchg
fs
and
pop
push
cmp
jne
cdq
cwde
icebp
push
or
lea
adc
inc
or
xadd
dec
jne
sub
jae
sub
fild
pushaw
pop
shl
inc
add
rol
repz
or
adc
mov
aaa
ret
jbe
sub
(bad)
push
xor
or
cmp
add
add
sti
(bad)
fstp
(bad)
jne
cmp
je
push
push
push
adc
jmp
sar
inc
xchg
mov
and
sbb
fiadd
mov
push
add
mov
sub
(bad)
cmovs
mov
xchg
daa
sti
psubsb
push
sub
push
or
or
shr
push
xor
cld
lea
std
(bad)
(bad)
clc
push
push
mov
call
test
jns
push
pop
jmp
cmp
jne
cmp
or
(bad)
mov
mov
mov
jmp
sbb
xchg
fwait
(bad)
pop
mov
pop
adc
mov
pop
scas
test
push
push
xor
cmp
test
add
add
mov
jge
xor
imul
stos
xor
push
push
ja
int
into
push
xor
fld
push
push
mov
call
inc
pop
in
scas
add
pop
pop
popa
sub
push
popa
mov
hlt
mov
jno
xor
adc
add
fnsave
lahf
jo
jmp
sub
mov
mov
push
movs
add
mov
xchg
pop
pop
cmp
clc
outs
mov
adc
test
jne
mov
adc
lahf
inc
rol
mov
dec
lea
jge
sbb
leave
aam
out
pop
push
mov
cwde
cli
ja
mov
mov
jmp
mov
or
xchg
inc
inc
mov
mov
push
push
inc
adc
push
sar
jle
cld
push
mov
dec
push
mov
sbb
add
push
sbb
sbb
pop
xchg
jmp
inc
shl
cld
add
add
add
test
sub
jecxz
add
push
cld
or
dec
hlt
mov
push
mov
jmp
push
call
lock
js
mov
cmp
mov
mov
or
push
adc
xor
ss
sbb
add
ss
imul
or
retf
mov
lea
push
push
push
call
cmp
idiv
sahf
shr
or
xor
inc
fwait
sbb
dec
and
xchg
cmp
mov
retf
pusha
push
cmp
pop
cs
jo
dec
shl
ror
in
push
pop
jmp
push
push
add
push
adc
hlt
push
mov
jbe
jmp
sti
add
add
push
loopne
dec
aam
jmp
dec
jmp
gs
cwde
adc
or
outs
lock
mov
sbb
enter
popa
adc
push
or
sub
dec
or
or
inc
push
ds
cmp
sbb
mov
call
and
xchg
daa
and
inc
jne
jmp
mov
inc
sti
add
or
dec
add
jecxz
and
jge
add
add
pop
in
inc
movs
call
ret
cmps
je
lea
test
and
xor
(bad)
fdiv
push
dec
cmp
mov
cld
sbb
cmp
sti
icebp
and
dec
loopne
adc
mov
ss
add
sub
sar
push
in
inc
sub
cdq
nop
adc
fdiv
outs
sahf
xor
or
mov
popa
enter
fdiv
(bad)
push
add
jne
lea
sbb
or
sbb
(bad)
call
or
call
dec
sbb
push
xor
mov
push
add
(bad)
cld
lea
push
push
dec
call
jnp
pop
arpl
cmp
ret
or
jle
pusha
scas
and
dec
and
mov
push
repz
std
daa
rol
or
(bad)
mov
xchg
jmp
xchg
sti
mov
jns
jg
mov
fadd
aad
mov
push
fst
aaa
jb
xor
cld
jns
and
outs
sub
xchg
mov
and
push
loopne
add
call
inc
and
adc
call
and
fadd
xchg
jecxz
sub
ret
fld
sbb
add
and
(bad)
pushf
xor
daa
clc
mov
add
arpl
cs
dec
pushf
push
push
and
loopne
dec
loopne
cmp
pop
pop
cmc
or
stos
push
inc
popa
popa
pusha
sbb
dec
std
pusha
pop
add
jg
adc
inc
or
mov
mov
not
lea
adc
ror
inc
(bad)
cmp
lea
rol
adc
sbb
and
cmp
jne
loope
add
add
mov
int
mov
jmp
sub
push
push
inc
mov
dec
sub
cli
or
mov
add
adc
xor
sub
jbe
repz
xchg
test
je
cmp
and
cmp
jne
lock
xor
xchg
dec
std
mov
and
cmps
inc
push
push
sahf
movs
mov
jae
test
or
ror
in
loopne
dec
hlt
adc
inc
rol
mov
pop
and
rol
push
push
hlt
out
loop
mov
adc
mov
jb
pop
sub
(bad)
or
lea
push
push
push
call
mov
cwde
ror
pop
xchg
mov
test
jne
pop
arpl
(bad)
mov
sbb
push
push
cld
adc
jb
fcomp
or
add
add
inc
cld
leave
sbb
push
inc
clc
or
mov
sbb
add
push
add
push
fwait
pop
push
les
add
add
mov
sub
adc
mov
sbb
sub
sbb
adc
pop
push
mov
out
cmps
ret
sbb
jge
movs
push
cmps
and
jo
ja
jne
push
popa
cdq
cmp
adc
mov
popa
lds
and
lea
mov
das
movs
call
mov
aaa
rcl
xchg
xor
cmp
jne
sar
push
and
(bad)
out
daa
sbb
xor
xchg
jns
mov
inc
jp
test
add
push
call
scas
mov
call
add
ins
dec
xchg
dec
ins
clc
ret
jne
popf
mov
or
push
cmp
mov
(bad)
jg
movzx
mov
sub
push
rcr
jl
(bad)
jmp
ror
lock
cmp
je
mov
lea
sub
xor
sub
inc
or
inc
or
mov
(bad)
(bad)
(bad)
jge
mov
cmp
je
mov
inc
inc
inc
cmp
jne
mov
pop
mov
sbb
sbb
out
and
xor
inc
in
push
sbb
in
(bad)
sbb
jnp
push
sbb
sbb
dec
sar
aad
sub
push
addr16
in
and
shr
cmp
mov
lock
cmp
dec
cld
mov
sub
pop
adc
ret
push
pushf
pop
cmp
sbb
dec
add
pushf
fdivr
mov
dec
mov
cmp
mov
inc
in
sub
add
pop
lods
mov
mov
and
mov
std
inc
outs
cmp
add
mov
push
jmp
and
lea
sub
cmps
add
ffree
mov
test
xor
mov
sbb
pop
pop
mov
cmove
xor
inc
cmp
push
jne
mov
jmp
inc
stos
or
inc
arpl
addr16
mov
push
aaa
js
xor
cli
push
adc
iret
mov
add
pop
push
push
pop
aam
push
idiv
pop
stos
js
fmul
and
push
push
mov
call
xor
cmps
lea
into
fcom
dec
pusha
iret
push
lock
cmp
mov
mov
push
cld
mov
js
and
add
mov
je
imul
mov
jmp
pop
xchg
test
js
mov
lea
pop
push
cmp
add
gs
mov
ins
pop
out
lock
inc
or
fs
dec
xor
mov
inc
jmp
xor
inc
push
mov
add
dec
mov
and
and
push
js
movsx
int
neg
cmp
add
adc
ret
sbb
xor
jae
sub
stos
add
aas
sub
and
imul
or
fbld
aaa
add
and
mov
scas
imul
push
scas
jnp
add
mov
push
repz
cwde
fdivr
push
push
lods
mov
test
push
es
jnp
sbb
shl
jnp
jge
jb
mov
je
out
cld
sbb
pop
mov
out
outs
push
mov
mov
ins
or
jmp
imul
ret
add
and
pop
addr16
sbb
lods
jmp
cmp
mov
and
adc
cmp
jg
and
inc
js
adc
pusha
rcl
or
adc
add
push
add
(bad)
test
scas
cli
adc
or
jb
popa
or
add
add
inc
sbb
outs
in
bound
push
stos
dec
and
jbe
and
(bad)
xor
aad
or
arpl
jmp
popf
test
ins
das
dec
and
sbb
push
push
adc
add
js
pop
nop
push
sbb
sbb
add
and
(bad)
aad
dec
lea
mov
add
js
or
inc
and
adc
push
sub
js
cmp
sti
lock
jne
dec
je
mov
int3
xchg
cmp
es
and
je
jle
adc
lods
in
jne
jns
sbb
jne
or
scas
add
push
mov
or
push
xor
xlat
or
mov
adc
or
jbe
adc
je
adc
push
mov
sub
test
mov
adc
add
mov
inc
xor
add
test
iret
fisubr
add
push
lock
fs
pusha
or
(bad)
out
dec
ror
in
stos
lea
mov
adc
(bad)
call
in
call
push
push
inc
pop
jg
(bad)
push
lea
mov
les
add
pusha
xor
loop
inc
shl
xchg
push
ja
add
inc
and
stos
jmp
xchg
popa
loopne
and
dec
ja
mov
sbb
jmp
sbb
push
call
sub
pop
sti
lds
adc
mov
adc
push
push
in
js
inc
push
inc
mov
rcl
adc
in
and
adc
inc
mov
mov
xchg
fs
xchg
mov
mov
fsubr
sbb
add
push
mov
bound
push
inc
out
jl
and
daa
inc
mov
jle
pop
aam
(bad)
jmp
data16
unpckhps
sbb
shl
dec
dec
add
rol
push
push
popa
rcl
sbb
mov
push
dec
add
pushf
add
push
adc
dec
dec
jmpw
loope
jecxz
scas
add
and
lods
add
push
adc
cld
rol
dec
frstor
push
or
adc
clc
hlt
push
(bad)
in
out
xor
or
or
stos
adc
adc
out
retf
inc
and
cmp
inc
mov
add
push
add
stos
ja
and
push
xor
out
xor
or
xor
cmp
pop
sub
rcl
in
dec
aam
(bad)
inc
and
pop
push
push
pop
or
sbb
rcr
rol
push
rol
pop
add
retf
push
mov
shr
loopne
and
pop
pop
inc
pop
cmp
mov
test
leave
loope
es
xchg
mov
arpl
xor
test
add
sbb
cwde
clc
inc
and
dec
icebp
add
inc
dec
js
xchg
lds
mov
push
ror
xor
lea
mov
mov
daa
inc
xor
int
call
arpl
jo
sbb
push
fistp
iret
xor
test
sar
mov
push
sbb
mov
add
cli
cmp
je
sbb
mov
adc
xor
cmp
jae
ret
push
jne
dec
mov
jecxz
mov
cmp
mov
pop
sbb
dec
in
call
push
pop
js
and
push
sbb
and
mov
imul
adc
(bad)
aas
add
inc
cmp
jb
and
scas
icebp
mov
movzx
ror
adc
mov
adc
div
add
mov
jae
sub
xchg
mov
and
and
mov
xchg
je
mov
jae
sbb
sbb
inc
out
sbb
mov
and
adc
jmp
js
xor
add
wrmsr
jo
jnp
or
mov
and
xlat
xor
sahf
fs
sahf
add
es
jbe
ret
mov
mov
mov
jecxz
movs
push
inc
mov
and
or
js
jb
push
adc
ret
add
pop
add
test
jne
cmp
and
out
out
adc
pop
push
pop
cmovne
and
cmp
rcr
push
(bad)
cmp
mov
aaa
mov
or
mov
or
rcr
add
mov
ins
or
(bad)
xchg
lea
mov
fild
or
or
rcl
and
fcom
or
push
dec
out
out
mov
or
xchg
adc
dec
inc
xor
xchg
pop
cmp
(bad)
ja
push
mov
push
sets
xor
sub
mov
bound
add
add
inc
lock
ja
adc
cmp
fdivrp
mov
mov
je
jle
cmp
cmp
out
push
jne
push
jmp
push
pop
jmp
push
jmp
push
pop
mov
rcr
and
test
add
mov
movs
sar
xor
das
add
pop
in
sub
jne
out
pop
adc
jnp
jecxz
xor
inc
loop
inc
sbb
stos
jle
je
jp
mov
mov
loopne
fild
push
sub
call
sub
cmp
popa
cmp
std
je
movzx
or
sub
cmps
jns
xor
sub
adc
int
or
shr
or
lock
or
and
and
push
push
call
mov
adc
js
cs
sbb
or
push
xor
push
scas
rol
adc
inc
popa
js
mov
or
jg
rcr
cli
jns
add
jle
dec
cld
push
movsd
movsd
mov
or
fsubr
push
(bad)
call
or
xor
stos
pop
add
xchg
hlt
pop
dec
add
add
fs
add
push
pop
push
mov
push
mov
pop
mov
mov
test
je
mov
pop
lock
movs
test
or
add
pop
push
pop
pusha
mov
test
xor
loop
mov
ret
jns
in
mov
add
xchg
inc
(bad)
sub
xchg
rcl
jle
adc
pop
and
inc
push
push
sub
rol
lds
sar
(bad)
jmp
dec
push
call
lea
lea
movs
int
sbb
cmp
adc
push
sub
js
mov
inc
and
mov
inc
push
push
fdivr
movs
mov
movs
movs
movs
adc
data16
pop
test
pop
jge
movs
cmp
dec
jmp
add
cld
adc
sub
mov
lea
adc
arpl
push
mov
out
(bad)
fiadd
jmp
push
pop
mov
rol
adc
shl
cmps
jge
add
fs
mov
fcomp
mov
mov
push
hlt
sti
push
dec
fnstsw
call
sub
aaa
mov
sub
(bad)
adc
sbb
sbb
in
loopne
gs
fs
sub
aam
xlat
xchg
sbb
aam
lea
mov
fucomi
outs
js
jo
mov
xchg
add
adc
test
mov
jne
fmul
jbe
inc
and
inc
add
es
jb
fnstenv
lods
adc
cmps
and
mov
call
das
pop
push
push
pop
cmp
ret
sbb
pop
or
shl
add
ds
and
sar
pop
mov
shl
and
push
pop
push
lahf
mov
js
movs
cmps
scas
xor
inc
xchg
dec
inc
or
sbb
adc
sub
test
lea
cmp
push
pop
xchg
sbb
and
mov
jo
mov
add
adc
cmp
adc
jne
sbb
je
sbb
(bad)
sbb
jo
jbe
mov
dec
or
mov
or
test
(bad)
push
inc
in
cs
xchg
add
sbb
sbb
sub
push
cmp
jbe
xor
add
dec
mov
pusha
loop
jl
push
cmps
aaa
adc
mov
push
frstor
sbb
push
push
jae
xor
ja
push
or
and
lock
iret
mov
retf
mov
shr
rol
not
jns
cmp
mov
fcomp
lea
pop
inc
popa
test
mov
clc
cmp
arpl
jg
aas
inc
mov
leave
cmp
mov
push
push
adc
sbb
xor
dec
fadd
call
js
cmovs
jmp
mov
jg
jo
lods
jne
cmp
jne
add
or
add
in
sub
(bad)
xlat
ror
rcl
add
sub
test
xchg
dec
das
jb
push
inc
add
aaa
xor
les
inc
and
scas
and
ret
rcl
ins
jmp
call
mov
clc
sbb
push
mov
or
push
mov
fldcw
or
dec
sub
adc
push
and
add
mov
inc
push
pusha
fwait
pop
icebp
cmp
and
mov
or
add
sub
je
dec
je
cmp
mov
pop
mov
mov
rcl
inc
sub
push
push
or
fwait
push
xchg
outs
js
jle
jmp
push
sub
xchg
sbb
(bad)
and
pop
or
adc
retf
and
(bad)
jbe
push
mov
push
sbb
adc
cmp
ror
xor
xchg
inc
xchg
clc
adc
xor
add
cmp
or
sbb
and
pusha
add
jne
icebp
sbb
sar
xor
ror
enter
adc
push
pop
in
or
mov
popa
push
inc
js
int
inc
cmp
push
sub
jl
inc
push
ja
add
push
push
cmc
cmp
sbb
or
sub
inc
inc
cmp
inc
lods
cdq
int3
outs
(bad)
sub
sbb
dec
push
in
mov
jbe
rcl
retf
mov
out
test
or
or
add
clc
cmove
cmp
inc
ror
fs
xchg
sbb
inc
(bad)
adc
adc
push
push
add
loope
sub
or
in
jo
les
sbb
lods
fmul
jbe
test
mov
je
pop
fmul
(bad)
(bad)
sti
pop
dec
shl
imul
es
dec
ins
xchg
frstor
jne
or
lahf
or
add
mov
pusha
sbb
mov
jo
adc
(bad)
aam
jo
adc
stc
xor
out
and
xchg
pop
sub
call
pop
into
test
xchg
test
fs
(bad)
cld
lds
jmp
fimul
mov
test
add
test
add
sbb
or
cld
ins
xor
je
sub
xor
enter
jp
push
dec
adc
movs
out
dec
sahf
int3
lock
adc
dec
cli
rcl
add
push
int3
movs
inc
sub
sbb
mov
cmps
ret
inc
scas
mov
jo
jge
push
call
cmps
jmp
into
and
and
jecxz
pop
mov
xchg
loope
jp
and
mov
push
mov
mov
jg
jo
sahf
add
fcom
or
loopne
sub
xor
jl
dec
sar
inc
and
cmp
loop
xchg
(bad)
jb
pusha
push
add
(bad)
(bad)
retf
dec
add
add
(bad)
(bad)
mov
add
je
ror
fadd
mov
inc
sbb
cli
fidivr
adc
dec
fist
in
add
fild
inc
cmp
ret
xor
sub
dec
add
or
mov
sbb
ret
es
mov
aas
out
fadd
push
nop
push
add
test
pop
cmps
xchg
adc
call
cmp
js
xor
inc
xor
aas
pop
js
ja
sbb
dec
pop
aad
push
xchg
inc
mov
enter
pop
leave
or
cmp
out
or
mov
sub
arpl
fmul
test
aas
pusha
push
hlt
push
pop
mov
push
add
jmp
or
mov
push
pop
push
push
test
and
mov
push
movs
push
out
pop
cmp
test
cdq
clc
int
mov
mov
movs
push
push
sub
push
inc
sbb
sbb
cwde
inc
and
movs
popf
stos
sbb
sub
jne
and
leave
js
and
jmp
add
test
pop
xchg
and
ins
mov
mov
xchg
mov
ret
es
rol
push
xchg
xchg
and
xchg
inc
dec
js
xchg
pushf
sti
and
inc
retf
mov
adc
or
and
jae
and
pop
add
fdiv
pop
pusha
nop
pusha
js
inc
pop
or
cmp
pop
aam
sub
add
add
jo
jecxz
(bad)
push
xchg
sub
lock
mov
inc
inc
and
aam
fidiv
inc
jmp
jl
lock
addr16
in
mov
popa
adc
call
cmp
test
mov
nop
add
je
mov
nop
or
(bad)
mov
push
add
fldenv
fucomip
je
js
jmp
mov
cmp
cmp
dec
xor
add
or
ror
mov
jmp
dec
retf
sbb
out
sbb
jb
in
adc
cwde
arpl
mov
push
or
pop
test
data16
mov
push
sbb
adc
in
sub
adc
rcl
std
jg
adc
inc
xor
and
mov
push
push
push
ja
rcr
mov
call
push
jl
(bad)
ja
pop
xor
inc
dec
sbb
push
adc
ja
cdq
inc
and
cmp
jl
jno
adc
or
pusha
ja
add
push
pop
mov
mov
and
add
sbb
pop
inc
mov
inc
pushf
xor
sub
jmp
aam
adc
dec
jo
(bad)
cli
sub
je
dec
inc
add
je
cld
call
push
push
sets
xor
test
je
test
xchg
mov
cmp
mov
cmps
mov
dec
sbb
mov
and
jp
add
add
out
call
jecxz
xchg
lods
loop
add
sbb
add
ss
mov
je
jo
or
aad
push
inc
mov
daa
div
(bad)
mov
jp
iret
loop
nop
push
mul
adc
das
mov
add
or
jmp
test
jns
ds
xchg
push
pop
add
mov
add
cmp
sbb
ror
jo
jae
sbb
es
jo
cmps
xor
movs
add
popf
(bad)
cmp
icebp
aam
and
dec
xlat
test
je
das
jo
push
std
retf
jp
xchg
jecxz
xor
dec
fbld
xor
xchg
and
addr16
adc
mov
and
in
leave
lock
nop
arpl
mov
pop
mov
and
mov
dec
lds
cmp
push
cmc
and
jne
fsub
inc
gs
mov
ret
and
pop
stos
pushf
cmps
lock
adc
push
call
loope
outs
test
int3
jle
ret
inc
push
arpl
arpl
ret
movs
sti
inc
and
movs
inc
inc
mov
stos
inc
add
test
call
xor
adc
inc
pop
add
imul
std
pop
ins
mov
add
cmp
mov
out
adc
add
lods
je
mov
fmul
or
je
test
sub
imul
or
sub
add
add
adc
ret
nop
(bad)
push
mov
or
and
push
pop
add
cwde
and
dec
inc
xlat
(bad)
sub
pop
add
sub
jo
retf
les
cmp
aaa
mov
push
adc
mov
pop
sbb
jge
jge
adc
mov
inc
and
or
mov
add
stos
lods
adc
add
push
call
push
loopne
or
and
dec
test
les
hlt
lahf
adc
and
sbb
push
or
mov
and
mov
or
adc
mov
mov
jo
sbb
pop
inc
push
push
xchg
push
pop
push
or
add
or
push
in
push
sub
push
inc
push
dec
xlat
gs
pop
add
mov
sub
add
xchg
test
data16
ja
test
cmp
push
or
xchg
jmp
pusha
and
lods
inc
sbb
js
mov
xor
scas
and
(bad)
js
adc
and
and
and
test
(bad)
jge
(bad)
mov
ja
sub
mov
sub
mov
cmp
sbb
jae
(bad)
xor
cmp
pop
ja
enter
fdivr
sti
add
es
sbb
push
cli
sbb
and
push
push
add
xor
jge
or
sbb
xchg
jne
xor
js
jo
fdiv
xor
je
sbb
(bad)
loopne
mov
and
jl
scas
sbb
add
cmp
mov
js
sbb
sbb
loopne
pop
mov
aas
adc
or
pushf
and
cmp
inc
ret
cmp
and
imul
iret
sub
js
ret
movsx
inc
inc
ja
adc
and
out
xchg
js
mov
js
mov
cwde
xor
inc
rol
jmp
dec
pusha
or
mov
loopne
add
adc
test
and
lahf
test
inc
and
mov
and
and
sbb
jno
movs
or
adc
add
mov
pop
cmp
push
and
mov
add
mov
adc
pop
cwde
push
inc
fdivr
call
and
call
pusha
mov
cmp
movs
mov
adc
pop
pop
rol
es
add
cmp
shl
ret
xor
sahf
xchg
mov
call
stc
(bad)
or
add
mov
pop
push
xor
push
or
sbb
call
ds
adc
leave
cmp
inc
loopne
mov
sub
sbb
adc
add
xchg
xlat
add
call
mov
push
mov
retf
scas
dec
repnz
push
sbb
(bad)
mov
mov
retf
mov
mov
push
xor
js
and
pop
pusha
(bad)
aas
or
and
jne
add
cmp
add
pop
je
hlt
adc
mov
inc
aad
stc
xor
add
inc
loop
rcr
(bad)
cmp
mov
sub
div
inc
int3
mov
mov
mov
add
ins
cli
push
push
mov
arpl
pop
aad
sub
inc
inc
rdmsr
mov
mov
mov
mov
xchg
cmp
adc
rcl
cs
cmps
fs
or
jo
pop
fimul
push
and
enter
test
stc
(bad)
(bad)
sbb
jo
add
dec
aas
mov
call
sbb
cdq
ret
fs
mov
cmp
mov
jo
movs
fs
cwde
lods
jmp
add
sbb
xchg
sahf
sbb
xchg
xor
adc
mov
sbb
je
jp
adc
mov
add
ret
mov
mov
push
hlt
je
adc
mov
add
mov
retf
and
dec
cmps
js
sti
jg
fstp
cmp
je
jle
push
pop
cmp
push
add
fmul
je
arpl
mov
loop
shl
loop
push
lds
mov
or
xorps
mov
push
aaa
add
or
push
shl
sbb
xchg
ins
xor
movups
cdq
jecxz
or
adc
test
lods
push
sub
mov
shr
or
sub
push
pop
adc
je
and
es
cmp
ror
sar
add
fnstcw
mov
cmps
and
sbb
shr
pop
xor
stos
stos
data16
fild
popa
xor
mov
and
sub
into
inc
retf
stos
jb
out
jl
sbb
and
sub
(bad)
cmovne
sub
push
sub
cmp
shr
loopne
and
ss
int3
adc
xor
mov
mov
adc
add
cmp
mov
and
ror
mov
sub
dec
push
cmovne
call
ins
add
push
fnstenv
add
sub
dec
inc
dec
dec
and
or
or
and
test
xchg
iret
adc
fs
dec
ins
fwait
mov
dec
mov
loopne
shr
sti
lahf
push
into
les
mov
adc
rol
cmp
pop
inc
lds
add
das
xor
jle
nop
adc
sbb
adc
mov
adc
cmp
push
mov
adc
or
sub
sub
or
adc
push
push
xor
jo
inc
add
add
add
dec
push
push
cmp
jmp
lea
cmps
out
nop
inc
stos
push
pop
pop
(bad)
mov
dec
loopne
pusha
inc
cdq
cmp
jb
loope
hlt
jne
push
(bad)
ins
sub
lds
inc
xor
or
and
(bad)
jge
mov
pop
and
sbb
jo
sbb
dec
sub
or
out
lea
push
mov
ror
ret
(bad)
mov
inc
inc
push
jno
movs
and
add
les
test
push
sbb
inc
fldenv
lds
dec
rcl
sub
mov
cdq
or
cmp
xor
or
aaa
jb
idiv
mov
dec
nop
popa
cwde
push
rcl
out
nop
fwait
js
xchg
xlat
out
fsub
out
clc
adc
outs
cmp
sbb
inc
cmps
ret
stc
pop
sub
iret
dec
pop
push
daa
inc
cmp
sub
adc
clc
add
test
je
sub
js
fnsave
out
(bad)
clc
pop
mov
stos
bound
iret
or
and
cwde
and
pop
mov
call
pop
nop
mov
cmp
cli
or
int3
icebp
and
out
je
movs
cli
aam
push
sar
iretw
inc
les
lods
ret
das
mov
bound
das
test
shr
add
xchg
std
lahf
inc
cmp
shl
push
add
out
in
loop
cmp
sbb
fstp
jno
xchg
dec
(bad)
je
rol
adc
add
adc
test
out
pusha
cmp
or
add
and
fnsave
cmp
dec
pop
(bad)
sbb
mov
or
lea
sbb
inc
mov
fild
mov
sub
cmp
je
mov
cwde
inc
loope
mov
scas
(bad)
aam
imul
call
mov
push
outs
push
repnz
je
clc
push
or
xor
mov
bound
jne
inc
and
adc
jle
out
mov
xor
xchg
jle
or
inc
fst
nop
cmp
add
rcr
push
shl
mov
xor
cli
adc
push
push
push
test
push
push
movs
push
add
adc
pusha
cmp
clc
frstor
sar
jne
adc
push
into
inc
jno
pop
pop
test
ds
cmp
arpl
lea
pop
push
fs
or
add
mov
mov
and
call
std
inc
add
inc
add
inc
or
or
inc
or
add
mov
out
pop
ja
inc
or
inc
adc
(bad)
aas
adc
mov
mov
mov
sub
push
jg
mov
mov
or
in
cmp
sbb
push
lds
scas
ds
mov
xor
hlt
seto
inc
sbb
push
cwde
jbe
and
test
dec
mov
sbb
add
mov
pop
mov
mov
test
dec
lods
outs
jne
aaa
inc
mov
and
adc
jne
gs
push
xor
les
les
outs
sub
sub
mov
push
mov
inc
cld
or
test
sub
outs
stos
mov
cdq
jmp
ja
sbb
xor
push
xor
(bad)
mov
push
push
add
adc
mov
es
add
(bad)
push
adc
mov
call
dec
aaa
add
lods
into
je
fwait
add
jge
adc
sbb
pop
(bad)
lods
xlat
jl
js
fcom
fsub
stos
add
pop
inc
ret
fdivr
(bad)
sbb
and
push
retf
inc
xor
inc
fmul
push
hlt
cmp
mov
je
mov
ret
test
mov
scas
add
popa
out
add
scas
adc
(bad)
in
adc
fld
sub
popf
or
scas
xchg
movs
sub
aas
push
lds
je
cmp
jb
dec
push
jl
les
(bad)
out
fidiv
arpl
loopne
push
mov
push
sbb
jae
jne
out
sub
or
add
sbb
les
dec
xor
jmp
mov
sbb
cmp
ret
sbb
adc
stos
cli
cmp
add
add
xor
sbb
aad
push
adc
adc
mov
pop
mov
cmp
xchg
popf
push
mov
mov
jae
adc
or
inc
int3
and
psubb
inc
mov
adc
sub
cli
or
shl
dec
inc
xchg
call
fdivr
inc
jne
xor
cmps
arpl
les
imul
cmp
jb
inc
push
adc
xor
push
add
clc
jbe
cmp
fdivrp
aaa
add
inc
ror
push
push
ret
fucomp
cmp
add
or
test
jne
pop
xor
or
cmp
imul
xor
inc
inc
(bad)
adc
inc
mov
inc
adc
loopne
jae
test
(bad)
inc
mov
xchg
out
sbb
in
jg
jle
int
ins
mov
test
test
int3
jge
pop
out
imul
les
fisub
pushf
sbb
xchg
cmp
pop
out
pop
mov
outs
add
pusha
cmp
pusha
cli
les
je
and
in
lea
sub
inc
push
xchg
ret
push
mov
sbb
test
mov
mov
cmp
rcr
mov
shr
and
jne
sbb
push
push
cli
mov
pop
(bad)
test
jne
loopne
fcomp
cmp
jbe
fmul
pop
sbb
jmp
lea
out
xor
push
lock
sub
adc
xlat
gs
lea
pop
fidiv
loope
add
in
lea
sbb
ss
scas
or
xor
or
xchg
inc
test
nop
ficomp
jbe
fsubr
push
aaa
scas
adc
xor
mov
jo
(bad)
xor
push
sub
xchg
imul
mov
mov
pop
adc
nop
(bad)
mov
xor
mov
jae
jg
lds
or
mov
push
push
inc
bound
call
bound
je
pop
(bad)
xlat
bound
push
pop
xor
add
mov
outs
int3
leave
and
mov
cmps
add
jmp
mov
test
fstp
test
je
pop
pop
mov
dec
push
(bad)
or
ret
test
je
mov
cmp
pop
pop
xor
sbb
mov
inc
xor
mov
dec
sub
ja
dec
push
push
fist
push
pop
out
jne
dec
stos
sbb
mov
push
fucomi
and
ds
pushf
add
cld
mov
push
mov
call
dec
push
js
fadd
mov
(bad)
jne
xor
pop
sbb
mov
popa
mov
out
dec
add
xchg
sbb
sub
les
lahf
popa
jmp
and
es
pop
and
fld
addr16
cli
add
mov
jne
je
mov
(bad)
in
push
fcomp
outs
sub
les
aas
mov
push
inc
mov
add
add
rcl
ja
adc
fsub
adc
lea
add
sub
aas
lock
jmp
ror
sar
mov
leave
mov
xor
lea
push
push
mov
inc
push
sbb
test
cmp
or
aam
inc
adc
cmps
pop
jge
mov
je
push
mov
bound
adc
inc
add
in
push
out
(bad)
push
hlt
stos
jle
push
and
add
aas
mov
lea
mov
add
data16
sti
aaa
pop
cmc
sub
sar
mov
nop
imul
jnp
adc
stc
add
mov
adc
loopne
cmp
mov
or
push
jb
add
nop
mov
neg
push
das
sub
pop
dec
pop
adc
nop
jecxz
pop
std
cmp
push
xchg
and
out
cld
and
jbe
adc
lock
jle
mov
push
xorps
mov
mov
test
fdivr
out
add
adc
rol
das
test
jne
lea
pop
adc
sbb
outs
ins
dec
fcomp
push
cmp
sub
je
push
xor
inc
test
pop
pop
mov
in
pop
int3
jle
push
call
jmp
(bad)
sbb
cmc
icebp
fs
dec
add
inc
mov
movs
(bad)
leave
xchg
and
sbb
ret
jecxz
mul
add
add
cmp
xor
das
out
fadd
xchg
sub
mov
rol
sbb
mov
add
dec
int3
jne
cmp
jb
not
mov
mov
pop
dec
push
jl
shr
inc
or
and
add
ds
push
inc
test
xchg
ret
xor
sub
mov
or
loop
cmp
jmp
or
add
mov
pop
pop
je
adc
add
dec
xchg
push
ret
pop
mov
sbb
xor
or
ret
push
sub
jne
call
imul
add
adc
fs
pop
sbb
neg
jnp
cmps
sub
sub
sub
mov
sbb
in
mov
daa
loopne
mov
jmp
mov
mov
icebp
cmp
je
popa
fmul
push
adc
inc
add
fcom
je
sub
dec
or
das
sub
push
jl
lea
(bad)
pusha
and
stos
or
mov
and
mov
lea
(bad)
dec
aam
jmp
ror
lods
adc
adc
adc
or
xor
lea
or
inc
and
enter
push
fild
cld
sub
add
pop
inc
or
lea
out
call
jmp
loope
mov
push
mov
dec
std
or
mov
mov
push
and
mov
mov
sar
mov
inc
sub
jne
jmp
adc
mov
inc
sbb
push
cmp
sbb
sbb
cmp
xor
push
mov
int
fisub
mov
add
retf
adc
test
adc
or
inc
push
pop
cwde
test
js
(bad)
loopne
mov
jo
or
sar
or
jne
xor
ror
(bad)
xor
sbb
jl
pop
aaa
lock
lea
and
or
cld
cmp
or
idiv
or
add
sti
gs
adc
in
jmp
popf
cmp
cli
mov
add
mov
inc
add
in
sbb
jae
popa
push
hlt
cwde
lahf
shl
adc
inc
pavgw
push
inc
divps
mov
dec
dec
xchg
adc
jg
lea
loope
loop
or
iret
(bad)
in
shr
aas
lea
or
jo
jne
(bad)
lea
pop
dec
push
adc
xchg
fwait
daa
ret
call
fadd
iret
lock
inc
mov
les
loop
lahf
pop
ror
cwde
push
or
sub
test
and
pop
and
cmp
leave
jmp
(bad)
push
out
dec
cld
pop
mov
pushf
std
rol
jae
pusha
pusha
je
push
ja
add
adc
inc
clc
mov
push
push
push
nop
jmp
push
lock
arpl
sub
push
add
cli
adc
xchg
outs
je
mov
and
or
jne
dec
and
cmp
test
dec
sbb
dec
jg
fbstp
or
test
je
cmp
or
dec
push
outs
loopne
add
stc
sub
jle
loop
inc
sbb
inc
in
push
and
icebp
jle
ss
inc
aam
lods
xor
sbb
inc
xchg
inc
scas
popa
mov
outs
pop
aaa
jo
fdiv
leave
mov
clc
mov
add
add
test
mov
add
pop
xor
js
cmp
add
and
sbb
add
adc
mov
xor
loop
imul
adc
push
in
sbb
dec
cld
push
(bad)
frstor
inc
cs
test
xchg
je
mov
jmp
or
push
inc
mov
arpl
sbb
push
or
sbb
mov
inc
adc
add
lahf
das
ins
inc
inc
add
mov
adc
or
pop
jo
pusha
mov
add
cdq
jecxz
push
push
add
mov
mov
mov
cmp
adc
or
push
fsub
pushf
jmp
sub
icebp
movs
pop
and
push
(bad)
jp
ret
fmul
push
inc
inc
popa
dec
cld
mov
dec
push
mov
clc
push
clc
mov
add
or
jne
cmp
jne
je
sub
rcr
cld
pop
dec
out
add
add
push
adc
cmp
cmovb
mov
push
push
inc
push
call
pop
xchg
jnp
push
cmc
cs
add
cmp
je
jecxz
lea
test
je
xor
or
hlt
or
push
push
test
mov
push
data16
das
aaa
std
cmps
fbstp
(bad)
sbb
mov
mov
test
neg
push
add
mov
jnp
push
pop
mov
ret
xor
xor
xchg
and
or
adc
mov
pop
jb
cmp
pop
mov
xchg
je
imul
or
add
fcomp
xlat
js
mov
adc
add
mul
add
cmp
mov
(bad)
cmp
push
pop
xor
dec
icebp
cmp
je
sbb
cli
push
shr
call
push
pop
test
dec
adc
push
jae
imul
ins
mov
mov
pop
ss
adc
mov
mov
jmp
add
scas
hlt
pop
in
xor
cmp
jmp
inc
jp
cmp
(bad)
pop
mov
cmps
pop
mov
xor
mov
adc
in
mov
cmp
add
shl
arpl
add
arpl
mov
pop
push
or
mov
mov
cmp
je
xlat
pop
ja
mov
(bad)
(bad)
dec
mov
nop
mov
cmp
jne
add
add
dec
jne
xor
xor
test
xchg
ret
sbb
and
inc
psrad
push
out
lahf
xor
test
sete
mov
cmp
lock
adc
sbb
dec
ror
aaa
ja
push
push
cmc
add
dec
cli
cmp
fadd
jge
or
or
mov
sbb
mov
xchg
jmp
ret
je
lahf
jmp
das
sub
mov
cmp
sub
imul
ret
push
jb
mov
push
inc
hlt
cmp
inc
or
mov
imul
and
je
call
mov
cmovae
cmp
je
movzx
adc
pop
aaa
add
fs
lea
hlt
fcomp
add
in
cmps
in
nop
mov
scas
sub
sbb
jb
push
retf
jae
add
lea
movs
pop
mov
push
arpl
add
or
aas
nop
mov
sub
mov
mov
jne
mov
inc
adc
sub
add
(bad)
aaa
mov
ins
or
mov
push
inc
out
mov
push
push
mov
jo
mov
cmp
mov
or
cmp
je
loopne
adc
and
mov
popf
jmp
fmul
gs
fistp
int3
mov
cmp
inc
call
add
retf
push
push
sbb
pop
adc
aas
ret
es
pop
mov
mov
es
inc
les
cmp
lea
pop
dec
mov
mov
retf
push
cmp
pushf
mov
pop
cli
in
or
add
rcr
lock
test
test
iret
or
inc
pop
(bad)
push
mov
add
mov
push
mov
test
je
(bad)
jg
push
or
movzx
lock
jne
xlat
sbb
sub
or
sar
push
xchg
clc
(bad)
je
movzx
enter
pop
push
add
mov
imul
jp
out
shl
data16
adc
xchg
movs
ja
cld
mov
jne
mov
or
or
xchg
inc
adc
ss
in
jl
aam
jo
and
in
pusha
fld
mov
mov
in
int3
mov
jl
mov
mov
mov
iret
add
xor
sub
movs
clc
icebp
mov
xor
mov
fbld
or
sbb
fmul
sti
fwait
or
(bad)
adc
inc
or
(bad)
rcr
jg
or
xchg
in
or
(bad)
inc
pop
les
je
mov
mov
mov
stos
sub
retf
imul
mov
or
xlat
add
mov
pop
add
imul
or
shr
add
cmp
jae
xor
mov
add
lock
(bad)
(bad)
(bad)
(bad)
jmp
cmp
jne
movzx
cmp
jb
cmp
jbe
cmp
loopne
cmp
jb
cmp
ja
add
mov
xor
push
cwde
xchg
xchg
mov
push
sub
ret
or
add
test
adc
add
enter
add
xor
mov
(bad)
push
ins
push
mov
add
jne
mov
scas
push
cmp
je
add
shl
pop
in
sbb
adc
mov
push
push
sbb
jb
stos
ins
scas
sti
ja
jl
jne
mov
jmp
add
jo
mov
loop
xor
in
pop
test
lahf
cdq
sti
pop
not
fstp
sbb
and
mov
mov
sub
adc
clc
jmp
xchg
pop
js
mov
jge
cwde
std
add
mov
nop
adc
add
(bad)
aas
push
or
xor
dec
je
movzx
nop
cmp
inc
jmp
or
cmp
jb
mov
ret
mov
dec
mov
push
jmp
loope
ds
js
std
sbb
sub
fdivr
loopne
pop
sub
in
or
push
call
push
popa
loop
lock
mov
sbb
inc
into
in
test
pop
add
push
das
pop
sub
lods
jle
mov
cmp
cmp
mov
cmp
ja
jns
clc
popa
jge
jp
or
and
call
imul
jmp
adc
shl
dec
add
and
mov
push
sbb
repnz
pop
(bad)
jg
xor
adc
mov
mov
cli
dec
inc
mov
cmp
je
sub
mov
std
(bad)
mov
sub
mov
movzx
test
or
cmp
jb
ja
mov
add
mov
cmp
jne
sub
neg
pop
sbb
test
sbb
fmul
dec
sub
xchg
test
xchg
test
and
push
or
pop
mov
add
ret
mov
clc
lahf
dec
ja
mov
or
mov
pop
mov
or
inc
add
fdiv
mov
jmp
push
sub
int3
scas
sub
add
mov
dec
xor
mov
inc
add
inc
inc
sar
push
lea
push
jmp
test
(bad)
(bad)
js
add
cmp
je
add
inc
(bad)
enter
cmc
shr
xchg
xor
outs
inc
jg
loopne
lahf
mov
jb
or
and
jb
dec
sub
int3
neg
or
sub
push
adc
xor
cmp
jp
xor
push
push
sbb
repz
retf
inc
mov
sti
push
scas
sbb
pop
push
(bad)
(bad)
or
adc
jbe
xchg
pop
inc
adc
pop
add
or
or
push
push
pop
lea
xor
add
and
sti
dec
inc
call
add
pop
stos
ret
xor
(bad)
cmp
jne
test
jne
xor
pop
test
lods
into
cmps
dec
jge
mov
dec
cmp
jne
int3
shl
add
std
dec
jmp
movzx
adc
inc
or
sub
aas
pop
nop
sbb
dec
scas
jl
aas
pop
cmps
jnp
or
sub
pop
push
hlt
out
out
push
push
jmp
push
xor
mov
mov
jmp
jmp
int
xor
mov
data16
mov
ficomp
jge
push
push
pop
pop
mov
les
and
mov
jmp
push
(bad)
sbb
sbb
add
ins
mov
iret
mov
rcl
fmul
je
dec
add
test
cmp
out
out
mov
jb
add
test
add
int3
mov
cmc
dec
in
push
or
push
dec
pop
mov
push
mov
inc
ins
sbb
lea
lea
outs
inc
into
lock
add
sub
ja
stos
push
fsub
add
test
jne
xchg
add
and
mov
and
add
inc
sub
push
cmp
int3
push
push
adc
add
jl
mov
xchg
ja
nop
hlt
sbb
(bad)
std
shr
lea
or
leave
jne
sub
bound
xor
and
call
mov
jnp
cmp
ja
sti
(bad)
std
add
or
add
inc
lock
mov
ror
fcom
inc
enter
nop
movs
mov
inc
es
mov
sub
ficomp
pop
lds
loope
mov
mov
lods
stos
out
out
fdivr
leave
jmp
inc
fsub
aas
fs
cmp
cmp
add
data16
loopne
add
mov
out
jl
ins
pop
pop
ret
cmp
loop
scas
cmp
jb
fsub
jle
and
loopne
or
adc
push
popa
sub
push
loope
test
les
sti
cld
xor
or
mov
adc
mov
clc
or
mov
jo
lods
jp
cmp
dec
dec
push
inc
nop
outs
mov
mov
addr16
cld
sub
add
cwde
inc
fwait
or
mov
add
pop
lods
mov
mov
add
test
xchg
mov
jb
in
xchg
mov
inc
or
scas
mov
inc
and
xor
cmps
outs
push
cmp
and
ss
in
or
loope
cld
sbb
inc
adc
jnp
cld
jae
inc
inc
stos
add
arpl
pop
or
inc
dec
lea
test
je
loope
mov
enter
(bad)
fcomi
ja
or
dec
mov
jmp
jle
cs
test
dec
jb
dec
jmp
or
pop
lods
out
inc
mov
add
sub
xor
in
call
repz
sbb
in
cmp
add
out
mov
lea
adc
xchg
adc
cld
xor
jge
add
cmp
push
lea
inc
inc
pop
mov
push
out
or
cmp
sub
mov
pop
vaddsd
mov
mov
sub
mov
hlt
imul
lea
rol
add
add
mov
into
push
push
add
int3
aam
pop
jne
push
cwde
js
cmps
mov
mov
dec
xchg
stos
call
out
add
int3
mov
imul
cld
fsubr
xchg
lea
push
push
dec
retf
retf
icebp
or
das
iret
mov
scas
cmp
cmp
mov
xor
and
lock
and
and
xchg
mov
inc
and
xchg
pushf
jae
cwde
mov
mov
les
sub
dec
(bad)
in
and
fist
sub
jge
movs
push
lock
arpl
(bad)
shl
cmp
inc
test
inc
adc
test
aam
test
cmp
je
push
mov
pop
and
cmp
xor
jnp
out
add
xchg
add
int3
dec
cld
pusha
clc
cdq
or
mov
leave
fisubr
call
xor
dec
jle
push
cmp
or
sub
icebp
hlt
cmp
pop
xor
and
sbb
sbb
xor
retf
xchg
(bad)
shl
adc
jbe
jo
test
test
adc
push
jg
xchg
add
repnz
add
pop
mov
div
mov
jb
mov
and
nop
ret
mov
or
ficom
mov
or
iret
or
adc
lock
daa
lds
hlt
aam
lea
push
inc
push
loope
cmc
aam
rcl
xchg
into
fdiv
inc
mov
das
push
fs
push
mov
outs
test
cmp
jb
sbb
and
inc
movzx
sub
jbe
or
call
push
xor
movzx
dec
je
nop
cmp
aas
dec
cld
pop
or
enter
rcr
push
cmp
jbe
or
mov
xor
adc
jne
ror
das
pushf
movzx
cs
xchg
jmp
sbb
cmp
xor
dec
je
mov
jno
sar
or
shl
aaa
(bad)
mov
in
add
fsub
xchg
push
add
adc
or
push
cmp
fcmovbe
sti
fmul
rcl
push
sub
adc
das
mov
mov
add
stos
js
enter
add
ins
xor
pop
sub
push
inc
aaa
fdiv
rcl
dec
inc
mov
pop
loopne
jl
add
inc
xchg
pop
or
test
mov
mov
add
in
pop
fwait
cli
aaa
adc
xor
sub
inc
shr
sbb
icebp
inc
jg
(bad)
dec
das
cmp
jne
mov
cli
fist
xor
cmp
jne
mov
add
dec
shl
mov
push
inc
out
dec
pushf
call
mov
arpl
lods
jmp
inc
cli
mov
lea
adc
xchg
adc
in
jmp
mov
sub
retf
pop
pop
and
push
retf
and
retf
test
and
or
scas
and
inc
lea
adc
sbb
or
and
shl
clc
cmp
je
sbb
(bad)
fadd
test
pop
mov
pop
cmp
jne
test
jne
cvttps2pi
ja
pop
mov
ret
jge
aad
push
cmp
add
mov
fdiv
jne
ja
test
mov
shl
cmp
je
outs
pushf
or
fs
sbb
cmp
xor
(bad)
cmp
fs
xchg
mov
add
scas
lds
adc
xchg
add
sbb
inc
es
push
mov
cmp
dec
aas
mov
add
pop
adc
fcom
fimul
mov
inc
in
adc
sbb
push
retf
push
inc
mov
jno
dec
(bad)
push
add
leave
retf
mov
mov
jmp
mov
aas
or
or
push
ds
pusha
sbb
sti
les
pusha
or
add
mov
xor
ins
adc
in
ds
pop
add
push
or
adc
sub
mov
push
mov
fmul
test
sbb
sbb
je
dec
jnp
mov
and
mov
addr16
cmp
pop
rcr
nop
enter
pop
add
xor
das
jge
and
push
push
xchg
lea
dec
call
popa
ror
add
pop
or
pop
icebp
jmp
test
jle
push
inc
lea
retf
mov
add
rcr
push
add
mov
sbb
jg
mov
jb
and
or
mov
cmp
mov
jne
push
add
sbb
pop
jmp
or
add
inc
add
dec
mov
jbe
push
lea
lock
cld
wrmsr
call
jmp
mov
sbb
clc
jg
sti
mov
movzx
cmp
pop
and
hlt
lea
neg
adc
xor
clc
je
dec
sbb
xor
mov
call
cld
mov
pcmpgtd
or
inc
inc
cmp
jb
mov
mov
cmp
ja
dec
push
mov
mov
mov
jmp
xchg
sub
mov
or
dec
out
jbe
adc
sbb
add
dec
mov
adc
ja
add
xchg
inc
aas
outs
loop
scas
or
(bad)
fiadd
mov
cmp
jmp
push
lea
shl
retf
or
mov
sbb
ja
(bad)
mov
add
and
mov
or
aas
in
cli
rcl
push
outs
push
lahf
mov
call
shl
mov
or
mov
adc
or
xchg
lea
cmp
jae
aaa
cld
out
dec
je
cmps
mov
movzx
cmp
je
mov
jne
or
aas
push
aas
add
sar
pop
mov
pop
mov
add
and
pop
pop
mov
adc
jg
pop
test
stc
push
popa
add
mov
and
lea
push
xchg
jo
lods
sti
lea
nop
and
js
(bad)
jmp
jl
push
sar
lock
(bad)
sbb
cmp
pop
int3
lock
jg
push
add
ficom
cmp
ja
mov
pop
inc
je
or
cmp
cmp
push
jo
or
das
push
mov
add
jne
mov
adc
adc
inc
or
cmovb
or
mov
loope
out
retf
ja
sub
cmp
cmovb
adc
call
ret
lea
mov
movzx
mov
call
cmp
jne
add
jbe
aaa
mov
sar
dec
jne
add
fist
jb
mov
sub
sar
xchg
pop
icebp
xchg
je
mov
add
clc
je
xchg
sub
loope
ins
out
pusha
jmp
jmp
cmp
aaa
add
cmp
adc
sti
pop
cmp
pop
cmp
sub
fsub
mov
sbb
mov
rol
js
push
mov
pushf
sbb
dec
push
cmp
add
shl
jl
je
or
ja
push
push
cli
mov
sub
mov
cwde
sbb
add
lods
jp
clc
jg
cmovne
test
mov
retf
and
and
stos
mov
fmul
imul
mov
mov
ret
adc
inc
or
adc
or
xor
aam
out
mov
inc
push
mov
xlat
test
cmovne
dec
add
pop
adc
or
push
into
mov
fistp
add
mov
shr
not
and
pop
ins
jne
or
out
into
std
ja
add
je
or
xor
or
inc
(bad)
or
je
or
cmp
shl
mov
add
pop
xor
add
sub
xor
add
add
or
fidivr
(bad)
clc
adc
popa
test
pop
clc
mov
ret
ret
mov
or
cli
loope
or
sbb
js
call
setne
mov
lods
cwde
or
ret
or
inc
and
adc
popa
inc
and
imul
and
mov
or
mov
lea
and
xor
add
(bad)
(bad)
out
pop
add
or
sbb
(bad)
call
mov
mov
xor
pop
enter
jne
(bad)
jg
fmul
mov
ret
xor
pop
lock
mov
in
or
ja
jmp
cmp
ja
mov
add
(bad)
jmp
inc
shl
fisub
adc
and
jo
daa
sti
int
sbb
nop
cli
stc
clc
sti
out
jecxz
cmp
je
cmp
(bad)
test
adc
xchg
sub
sub
push
pop
mov
cmps
dec
sub
add
clc
enter
mov
or
aaa
mov
xchg
mov
push
call
pop
cmps
(bad)
nop
sti
retf
xchg
ins
xchg
shr
sbb
pop
dec
sar
add
js
mov
jne
arpl
fs
cmp
add
or
add
add
xchg
ins
jbe
add
add
ins
push
or
or
cwde
ror
dec
or
cmp
(bad)
iret
sbb
int
jne
mov
bound
ret
add
adc
into
add
adc
ja
jno
adc
inc
lods
in
xchg
xorps
push
pop
add
inc
xchg
xor
jmp
(bad)
xchg
jge
jmp
push
push
adc
push
jl
imul
popf
inc
adc
inc
inc
sub
cmp
jne
sbb
dec
and
and
gs
or
xor
add
stos
mov
sbb
sar
inc
and
shl
jne
lea
outs
mov
in
scas
bound
ja
lock
xchg
mov
inc
add
leave
xlat
hlt
pop
push
cdq
xor
adc
(bad)
daa
sbb
jne
push
adc
test
mov
xchg
jae
adc
adc
arpl
mov
sbb
xchg
jge
dec
hlt
mov
sbb
shl
sbb
mov
jge
stc
enter
inc
call
cld
loopne
shr
adc
loopne
pop
and
scas
cmp
inc
jne
inc
sar
(bad)
fbstp
js
mov
idiv
sbb
mov
or
inc
mov
mov
add
and
jb
int3
sbb
sar
inc
int3
outs
sbb
icebp
(bad)
pop
or
push
add
out
outs
cmp
mov
rcr
xchg
add
inc
adc
jae
push
sbb
push
out
push
push
ffree
inc
jnp
out
call
in
add
sub
lods
mov
adc
adc
das
sub
iret
cmp
in
sahf
mov
sub
mov
mov
icebp
ror
mov
mov
mov
push
push
mov
mov
mov
jg
jno
add
mov
mov
mov
mov
repz
div
movq
push
nop
add
add
mov
sub
push
ret
adc
sbb
mov
xor
sbb
push
clc
add
fwait
mov
into
cmp
mov
test
sar
push
push
push
push
push
push
shr
push
shrd
arpl
add
ror
fcom
push
daa
sub
push
add
ror
rol
or
mov
xchg
scas
sbb
jle
je
pop
call
push
mov
adc
add
add
adc
push
xor
mov
mov
int3
adc
inc
outs
push
std
jne
mov
clc
lahf
xor
inc
add
sbb
inc
in
mov
ja
pop
sbb
push
test
jne
outs
cli
mov
js
(bad)
dec
je
mov
lea
test
je
js
add
ins
and
push
inc
add
dec
add
dec
xchg
and
sti
call
mov
add
cld
pop
mov
mov
pop
pop
add
iret
or
add
xor
into
jg
push
xchg
mov
pop
test
daa
jl
inc
icebp
dec
or
dec
dec
jmp
ret
mov
lea
mov
mov
(bad)
add
ficomp
mov
mov
or
mov
dec
add
or
lock
adc
pop
dec
or
retf
cmp
jne
aaa
cmc
(bad)
cmp
mov
jmp
inc
push
mov
hlt
push
shl
dec
add
aaa
mov
pop
mov
pop
mov
loop
jg
test
(bad)
jne
mov
jmp
mov
mov
mov
cmp
fstp
mov
or
mov
retf
inc
mov
jl
mov
pop
cmp
add
and
pop
das
mov
push
stos
jo
in
int3
jb
inc
test
dec
add
adc
inc
adc
add
js
pop
jmp
mov
xor
inc
push
push
mov
int3
add
lock
push
jo
lds
jl
jne
dec
test
nop
add
xchg
adc
mov
or
lock
add
inc
inc
add
pop
enter
ins
shl
or
mov
adc
in
fdiv
dec
outs
or
pushf
add
lods
pop
enter
add
or
mov
and
mov
cmp
jg
xor
push
adc
arpl
sub
es
pop
jnp
mov
fiadd
cmc
add
inc
add
ret
push
or
add
sbb
mov
ja
out
sub
add
or
loopne
mov
jne
cs
mov
mov
pop
mov
call
inc
into
add
mov
int
pop
push
inc
loop
cmp
stos
test
xor
call
mov
lea
je
add
ja
or
pop
call
sbb
add
fmul
sub
adc
push
sbb
fsub
push
add
or
or
xlat
xor
mov
jmp
mov
add
adc
mov
mov
dec
cmovb
(bad)
inc
call
jns
xor
jb
jne
cmp
jb
add
dec
daa
test
je
in
mov
sbb
xor
and
es
dec
popa
xor
mov
jecxz
inc
sbb
push
sbb
cwde
mov
imul
sub
sbb
das
punpckhdq
mov
ret
dec
mov
push
leave
add
push
push
call
sbb
mov
test
sbb
mov
mov
sub
pop
into
cmp
and
mov
and
xchg
adc
dec
pop
sar
in
and
test
mov
jg
add
lea
call
mov
lea
je
or
cmp
je
mov
or
inc
in
push
pop
inc
in
lock
cmp
scas
sbb
adc
dec
sbb
or
fimul
faddp
xchg
fdiv
ins
mov
test
xchg
cdq
daa
jo
lock
push
push
jl
add
push
lea
loop
cwde
cwde
ins
cmp
les
and
pop
ror
sbb
adc
jns
xchg
add
rdpmc
or
dec
sbb
test
sbb
jne
push
push
push
inc
test
js
movzx
mov
cwde
out
and
push
inc
add
adc
xor
cmp
dec
les
sub
add
loopne
adc
cmp
adc
retf
and
jnp
or
loope
(bad)
push
mov
jg
xchg
retf
jae
cmp
cmp
lock
or
inc
or
inc
cld
dec
mov
adc
(bad)
dec
xchg
cld
fild
push
mov
lea
xchg
inc
lock
xchg
push
in
fadd
sbb
mov
inc
pop
pop
lea
and
push
mov
mov
clc
das
ret
lock
les
push
adc
dec
scas
(bad)
lods
sbb
jg
jne
or
mov
push
rcr
pushw
adc
fistp
add
jne
icebp
je
push
push
test
push
ret
cmp
outs
dec
push
lock
jne
cmp
jo
clc
arpl
fstp
pushf
inc
or
movd
in
cmp
je
mov
movs
push
popf
rol
xchg
cs
mov
pusha
xchg
mov
xchg
or
scas
mov
push
mov
jae
movd
(bad)
out
jp
rol
pop
addsd
mov
or
sbb
jae
mov
rcr
sub
dec
sbb
dec
(bad)
push
cmp
jae
shl
jmp
cmp
push
test
add
inc
cld
mov
nop
fnstenv
push
lds
mov
mov
mov
cmp
je
mov
or
and
stos
sar
or
or
mov
pop
pop
adc
cmp
jo
add
or
(bad)
push
mov
sub
mov
jo
lock
clc
add
clc
mov
mov
ror
sbb
ret
sbb
(bad)
(bad)
pop
stos
jo
fidivr
or
lea
mov
mov
sub
mov
outs
cld
fiadd
je
xor
retf
fs
inc
loope
xlat
lahf
cmp
push
sar
jne
sub
push
mov
mov
pop
sar
push
lea
add
xlat
aad
les
loop
fild
scas
mov
mov
lea
push
call
push
mov
ret
sti
pop
inc
add
test
je
pusha
jl
push
or
outs
mov
sub
inc
or
pop
shl
sub
mov
int
add
add
ja
add
dec
repz
rcl
pop
cld
cmp
pop
nop
add
loop
push
or
sub
je
mov
mov
push
cmps
adc
and
ins
loopne
jmp
shl
mov
sub
add
shr
cmp
cmova
rcr
(bad)
call
iret
jne
jmp
push
mov
mov
sub
push
mov
push
push
cmp
loop
or
or
sbb
sub
mov
sub
mov
jne
mov
(bad)
push
call
je
dec
mov
add
push
shl
and
mov
hlt
mov
enter
adc
call
push
push
mov
mov
jno
xor
or
dec
dec
call
xor
dec
or
into
cmp
jne
cmp
ja
jmp
dec
or
inc
xor
adc
jmp
sbb
xchg
inc
adc
mov
add
xor
xor
sbb
sub
sahf
mov
mov
inc
enter
outs
icebp
push
dec
fs
dec
push
or
add
mov
out
jmp
add
sub
jmp
adc
rcl
push
sub
je
push
adc
mov
dec
jne
(bad)
call
or
or
sahf
fwait
jl
and
or
add
or
das
mov
(bad)
adc
dec
fmul
fwait
test
or
mov
mov
mov
and
mov
push
cmp
jne
mov
dec
push
paddsb
fmul
mov
dec
dec
and
test
dec
pop
or
mov
test
jg
jl
cmp
pop
lock
ja
loopne
mov
mov
jmp
sub
sbb
jg
adc
lahf
cmp
je
test
dec
icebp
jl
jg
jnp
mov
inc
jecxz
push
fmul
inc
and
mov
(bad)
jle
dec
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
mov
movzx
jmp
movzx
mov
mov
push
call
cmp
jne
fdiv
jg
or
fadd
inc
xor
adc
es
imul
or
mov
push
xor
mov
cs
or
or
adc
jmp
lea
jmp
mov
xchg
mov
loopne
fnsave
mov
inc
or
inc
or
(bad)
mov
mov
or
cmp
cli
enter
pop
mov
mov
and
je
bound
call
ret
cmp
adc
pop
dec
xor
test
(bad)
pop
dec
in
push
dec
and
add
add
xor
mov
inc
mov
jp
inc
fadd
and
ret
(bad)
inc
jne
jmp
call
mov
mov
inc
dec
xor
mov
adc
call
pop
push
jno
inc
cdq
call
sub
dec
popa
xchg
or
jmp
int
enter
in
push
lahf
xchg
add
xor
push
push
lea
mov
lea
mov
mov
mov
push
(bad)
mov
mov
clc
mov
or
inc
xchg
add
or
and
dec
or
mov
in
aas
adc
jge
(bad)
int3
mov
dec
mov
mov
sbb
mov
sub
push
mov
mov
adc
mov
adc
push
push
xchg
mov
adc
lahf
sahf
add
mov
add
fisttp
jbe
(bad)
icebp
call
or
add
push
inc
push
and
jbe
or
sub
xor
cld
int3
mov
iret
add
ror
aam
adc
lea
jmp
nop
sub
jmp
and
dec
mov
and
sar
push
call
add
test
idiv
scas
mov
add
je
cmp
push
cli
lds
js
inc
aas
jmp
fstp
popa
outs
idiv
add
mov
bndstx
call
push
xchg
fld
mov
xor
or
ins
add
mov
xor
ja
(bad)
enter
push
call
pop
adc
and
outs
bound
stos
cli
add
mov
arpl
daa
cmp
jo
mov
popf
adc
lea
push
cmp
push
jg
add
push
daa
popa
xor
add
mov
shl
lods
push
pop
in
jne
push
mov
jmp
sbb
shl
or
cmps
retf
mul
push
xchg
jl
ja
add
push
mov
leave
call
gs
push
sbb
inc
and
icebp
and
ss
ffree
add
lods
sbb
inc
adc
cmp
pop
jmp
sbb
fiadd
push
inc
cmp
sbb
sbb
outs
add
mov
mov
jg
dec
loopne
outs
mov
inc
add
dec
cmp
or
pop
cmp
cmp
or
iret
je
pop
sbb
mov
faddp
cmp
sub
mov
pop
(bad)
mov
and
hlt
jg
retf
push
push
or
add
adc
fcomp
dec
add
mov
cmp
iret
mov
push
push
push
or
pop
hlt
xchg
push
movs
call
cmp
adc
scas
movs
pop
cmovne
mov
adc
aaa
icebp
cmp
inc
or
ret
cmp
or
dec
out
call
and
inc
(bad)
add
or
cmp
rol
jne
jmp
cdq
jnp
dec
in
ret
and
and
push
push
add
adc
xchg
cmc
adc
dec
xchg
mov
mov
or
xchg
and
adc
cmp
jne
sbb
call
mov
sbb
pop
aas
into
sar
push
push
or
add
aaa
std
ror
mov
add
or
inc
loopne
cdq
sbb
add
call
mov
popa
and
popa
psubd
add
push
jge
xor
mov
add
ins
inc
rol
stos
or
je
cmp
sbb
or
js
je
dec
cmp
sub
rcr
push
dec
lock
push
je
mov
inc
mov
add
mov
call
push
add
dec
mov
jnp
sub
repz
(bad)
jmp
je
(bad)
cmps
nop
inc
mov
call
ret
sar
add
in
mov
sbb
sub
sub
jmp
push
pop
in
push
xchg
enter
sti
inc
push
add
and
xchg
inc
jno
ret
add
mov
dec
sbb
adc
xor
test
jne
pop
pop
push
cld
aad
jo
lods
adc
mov
cmps
add
mov
jg
test
jne
push
sub
adc
mov
add
rol
mov
jmp
xor
mov
mov
data16
inc
push
dec
adc
into
lea
inc
retf
jmp
inc
cmp
jne
cmp
xor
cmps
mov
add
add
mov
adc
cld
sub
sub
add
xor
cmps
and
pop
add
push
movs
ret
or
mov
fsub
daa
in
cli
adc
retf
or
add
sbb
fsub
cmp
push
add
ins
test
sbb
inc
adc
ins
or
shl
mov
push
push
add
sar
shl
push
int3
add
and
or
adc
in
sub
dec
xor
mov
cld
add
(bad)
dec
mov
lea
lods
mov
ret
es
neg
and
cmp
inc
cmp
mov
cmovle
js
(bad)
ins
out
inc
add
push
mov
add
adc
mov
int3
ror
call
pop
cmp
jne
mov
icebp
jmp
lea
add
shl
ror
lea
cs
inc
ja
imul
jmp
mov
je
inc
add
push
jbe
jmp
inc
mov
jae
push
push
das
mov
add
mov
mov
dec
add
push
sub
cdq
add
fsubr
mov
and
xor
mov
or
cmp
mul
ja
mov
fdivr
cmp
push
push
fild
inc
xor
or
or
mov
add
(bad)
push
mov
add
push
call
push
test
jmp
xlat
sbb
push
dec
call
mov
push
pop
lods
push
arpl
test
dec
pop
push
bound
jae
mov
inc
aas
cmp
test
mov
inc
aad
iret
push
rol
test
clc
adc
or
or
gs
jnp
or
inc
enter
add
fadd
mov
push
bound
mov
or
dec
je
push
push
movs
cmp
and
add
jmp
hlt
inc
clc
add
mov
rcl
imul
neg
dec
or
cmp
sub
test
mov
push
and
xchg
add
push
push
or
xor
dec
lea
(bad)
jmp
stos
cmp
mov
pop
pop
mov
loop
xchg
fisttp
or
jg
test
add
cld
add
test
inc
loopne
cmp
test
jne
pop
aam
or
pop
push
or
cmp
sbb
adc
shr
or
retf
jmp
jecxz
lea
push
test
cli
fisubr
(bad)
sbb
jno
inc
mov
add
pushf
dec
test
sub
dec
inc
mov
xchg
bound
xchg
mov
cmp
xor
cli
mov
sbb
inc
mov
pushf
mov
xchg
sbb
and
pop
cmp
mov
add
scas
and
rol
xchg
popa
pusha
add
mov
mov
pop
add
cmps
mov
lods
fadd
pop
add
bound
adc
pop
jae
jnp
mov
imul
push
in
fistp
pop
ja
mov
dec
imul
add
ret
mov
add
in
mov
sub
pop
iret
and
je
cld
inc
or
(bad)
jmp
mov
sbb
fidiv
push
push
push
or
add
mov
mov
sub
mov
mov
sbb
icebp
push
mov
daa
sub
jae
push
and
push
lea
aas
or
dec
adc
mov
out
imul
jge
push
add
test
adc
std
fs
mov
pop
mov
mov
sub
cmp
jbe
mov
sub
add
cmp
jb
xor
(bad)
mul
jmp
xorps
dec
push
scas
pop
jne
push
add
fs
adc
fild
mov
loopne
mov
fmul
retf
xor
xor
adc
test
xor
pop
xchg
les
add
push
(bad)
xor
xor
inc
js
xchg
lea
xchg
in
mov
mov
jb
xor
push
stos
mov
fs
mov
xchg
add
int
int3
mov
xor
das
push
add
int3
xor
mov
inc
stos
in
adc
mov
sbb
jg
or
ja
add
mov
mov
or
fdivr
rol
pop
mov
add
rcr
inc
or
aas
inc
mov
shr
and
cli
(bad)
(bad)
aas
lea
sub
mov
add
cmp
jae
push
push
fidiv
add
lods
mov
add
pushf
(bad)
aaa
cld
sbb
push
push
push
or
jge
mov
lods
das
fbstp
fmul
push
das
pop
mov
pop
push
push
mov
lahf
test
cmp
inc
or
cmp
or
movq
push
lds
add
dec
and
and
mov
cmp
subps
inc
mov
fwait
add
movs
mov
push
(bad)
pusha
icebp
(bad)
inc
mov
lods
(bad)
fdivr
jbe
xor
inc
dec
in
fmul
mov
pop
test
adc
push
mov
push
mov
push
mov
mov
mov
pop
cld
or
mov
mov
loopne
push
inc
xor
add
lea
add
mov
sub
add
mov
cli
(bad)
mov
xor
or
shl
add
lea
add
in
out
dec
ret
ror
shl
sub
(bad)
inc
(bad)
lea
add
mov
xor
ror
mov
add
dec
and
xor
(bad)
jg
ror
jnp
add
add
ror
add
mov
mov
mov
(bad)
and
xor
add
add
xchg
inc
adc
repz
(bad)
xchg
jle
test
add
add
sahf
imul
inc
sbb
mov
mov
out
add
adc
test
inc
sbb
out
std
(bad)
mov
jl
add
sbb
clc
mov
mov
idiv
(bad)
sbb
jge
fcomp
and
aas
div
jo
pop
enter
ret
lea
mov
add
mov
ret
or
(bad)
and
xor
add
std
pop
(bad)
inc
inc
sub
sub
ret
xchg
(bad)
std
(bad)
dec
lsl
and
mov
xor
add
add
mov
lock
xor
mov
add
and
mov
xor
pop
xchg
and
nop
imul
or
jmp
inc
ret
xlat
mov
mov
repnz
(bad)
(bad)
lea
mov
inc
xor
pop
cmp
mov
xlat
ins
js
inc
mov
add
add
fcmovb
ror
push
dec
cmp
(bad)
(bad)
fidivr
mov
fadd
ror
or
jg
fcomip
add
xor
adc
add
add
jns
rol
add
xor
lock
mov
inc
mov
rol
fadd
lock
mov
jg
rcr
inc
shl
rol
add
xor
add
add
pop
or
adc
(bad)
and
(bad)
in
inc
hlt
push
adc
add
inc
call
and
or
sti
shl
add
aaa
test
aas
out
loope
add
test
(bad)
pop
cmp
(bad)
push
ret
add
lea
rol
add
ins
ret
add
xchg
in
popa
ret
mov
xchg
in
mov
pop
inc
add
mov
fcos
(bad)
mov
jae
rol
add
xor
mov
(bad)
fucomp
cld
inc
pop
mov
ret
fld
outs
addr16
ror
mov
lea
ror
das
push
add
xor
fistp
add
mov
ror
add
xor
xor
add
(bad)
cmp
inc
dec
hlt
add
rol
add
xor
add
mov
rol
push
mov
dec
ret
popa
popf
ins
jp
adc
(bad)
dec
adc
cmp
std
add
push
or
push
mov
add
add
test
sub
js
push
pusha
dec
mov
mov
mov
movs
push
movs
cmp
mov
(bad)
jle
sub
dec
fcom
daa
mov
in
lock
movs
add
cmp
aam
add
push
pop
add
add
call
lock
out
rol
xor
sbb
add
mov
push
(bad)
call
add
add
add
rol
jae
cmp
fwait
push
gs
lods
les
ror
add
or
dec
dec
xchg
loope
rol
rol
retf
jl
or
mov
jmp
inc
add
ja
(bad)
or
icebp
or
cmp
mov
(bad)
ss
push
cmp
lock
(bad)
pop
or
pop
pop
gs
fiadd
fld
int3
or
icebp
pop
hlt
and
jl
hlt
out
inc
rcr
test
lock
test
repz
mov
out
(bad)
adc
(bad)
or
jg
outs
mov
inc
add
push
test
sbb
mov
ror
(bad)
or
mov
xor
sbb
add
jecxz
xchg
mov
add
repz
repnz
pop
imul
mov
adc
or
sub
push
add
sbb
lahf
sbb
ret
(bad)
add
outs
mov
retf
add
or
daa
call
icebp
aas
add
cmp
in
ror
(bad)
call
cmp
(bad)
jae
inc
popa
jmp
add
mov
and
je
mov
sbb
rcl
mov
inc
or
fdiv
push
push
push
popa
cmps
out
jno
pusha
pop
push
adc
fiadd
jp
and
add
sub
cmp
jb
push
rol
sbb
jmp
or
or
ret
jl
dec
add
mov
ja
or
adc
inc
add
inc
and
pop
mov
fadd
inc
cmp
das
femms
jmp
add
dec
inc
loop
or
or
cld
out
leave
inc
push
cld
dec
jne
push
pop
and
inc
inc
dec
jne
push
push
sub
shl
shl
das
test
push
mov
(bad)
call
mov
sar
jbe
test
je
push
lea
cmp
ja
mov
cmp
jae
and
inc
add
test
je
mov
into
push
push
mov
adc
inc
popa
call
push
mov
clc
ja
sti
dec
pop
or
test
jne
pop
cmp
mov
pop
test
sbb
and
xlat
add
xor
pop
push
ins
fldcw
arpl
or
add
or
push
ret
rol
pop
add
pop
sti
push
or
mov
xchg
or
push
cli
pop
(bad)
mov
call
iret
sbb
inc
rol
add
(bad)
aas
test
cmp
ja
rol
jb
mov
mov
jmp
mov
xor
jg
dec
in
xor
(bad)
dec
adc
inc
add
inc
inc
jb
sbb
ud2
adc
add
dec
adc
je
(bad)
(bad)
jne
mov
test
movsx
cmp
je
movzx
test
mov
out
jns
add
jb
mov
mov
pop
jp
(bad)
mov
inc
jmp
cmp
jne
and
clc
dec
and
jge
add
std
inc
or
cmp
jne
cmp
dec
pusha
out
jne
add
and
adc
mov
inc
add
mov
nop
or
stos
jo
cmp
pop
add
or
(bad)
out
jg
xor
push
or
add
push
test
je
loop
movsx
inc
or
add
dec
in
push
jne
sbb
and
mov
sub
(bad)
jg
iret
xchg
enter
push
or
dec
adc
rol
jb
mov
jne
aam
xor
sub
xor
cmp
cmova
adc
std
jmp
movsx
lea
inc
or
cmp
jne
and
pop
sbb
imul
pop
pop
lea
pop
ret
out
jl
rol
mov
jbe
push
lea
jno
adc
gs
enter
or
inc
shr
or
inc
lea
jg
pop
and
inc
adc
(bad)
jg
mov
rcl
div
pop
adc
push
(bad)
(bad)
(bad)
dec
clc
sbb
mov
movsx
movzx
cmp
jne
inc
cmp
jb
pop
pop
aam
cmp
ret
pop
pop
cdq
sbb
sub
push
rcl
push
jo
aam
pop
or
inc
cli
add
jmp
test
(bad)
out
pop
xor
cmp
je
jb
inc
adc
jne
mov
cmc
jnp
(bad)
xor
mov
add
ja
dec
sub
(bad)
cmp
ja
cmp
je
push
xlat
lods
test
je
cmp
fidiv
mov
mov
xor
fdiv
sar
jg
aaa
pop
mov
xchg
clc
mov
lea
cmp
psllw
pop
sti
test
add
add
push
cmp
jne
mov
xchg
or
test
inc
std
scas
(bad)
loopne
lea
jg
jg
xor
and
push
xor
cmp
mov
sti
fbstp
cmp
cli
or
iret
mov
das
jnp
bound
test
je
sub
push
push
pusha
fisttp
and
push
push
inc
inc
inc
(bad)
out
fdiv
jne
dec
clc
push
clc
rdpmc
leave
mov
add
cmp
je
(bad)
(bad)
(bad)
out
xchg
xor
cmp
lea
movsx
inc
lea
lea
cmp
jne
dec
dec
mov
retf
fmul
imul
push
dec
sub
jg
sar
pop
hlt
mov
mov
nop
mov
cdq
sub
mov
sar
cmp
lea
jae
lea
scas
add
dec
clc
stos
stc
test
jg
add
fidiv
or
mov
push
arpl
fadd
scas
out
cmc
push
icebp
call
cmp
call
adc
sub
mov
xchg
rol
or
xchg
add
sbb
je
dec
and
push
and
jmp
xor
add
dec
push
mov
cmp
ss
or
mov
mov
add
lds
mov
neg
pop
inc
imul
cmp
je
xor
push
add
(bad)
ds
paddw
outs
mov
repnz
sar
mov
scas
mov
pop
jae
cmp
jne
outs
mov
clc
add
and
sub
rcr
or
inc
inc
add
cmp
leave
hlt
call
push
into
inc
(bad)
jae
xor
jmp
add
ror
push
adc
mov
mov
aas
ja
jae
add
mov
or
mov
mov
add
retf
add
in
mov
ins
mov
add
adc
push
jae
xchg
mov
nop
sub
xchg
mov
and
xor
jmp
test
je
push
out
mov
jae
and
test
mov
or
cdq
dec
call
xchg
call
sub
add
icebp
fcomip
aas
mov
inc
add
add
lock
cmp
jne
loop
inc
or
stos
sbb
add
popa
stc
fsub
ss
and
add
add
add
mov
dec
sub
or
push
sub
leave
into
retf
je
mov
mov
cli
into
ins
cli
(bad)
mov
sar
bnd
cmp
je
push
push
mov
pop
pop
dec
add
je
adc
fidivr
jo
xor
scas
inc
cld
mov
sub
push
xchg
loopne
out
push
imul
inc
aam
neg
(bad)
mov
dec
adc
sub
ins
rol
test
cmp
adc
cmp
jne
xchg
daa
lea
add
mov
mov
adc
sub
test
out
mov
mov
or
mov
ret
lods
mov
add
ins
mov
or
push
repnz
sar
pop
movs
lea
sbb
fwait
sbb
cli
adc
push
xchg
adc
add
rcl
and
jg
add
pop
jmp
fadd
cwde
outs
rcl
push
and
jge
cmp
jb
fild
mov
loop
sbb
in
adc
into
cmp
ds
xlat
dec
out
dec
add
jbe
mov
add
nop
int3
cmp
add
add
pop
inc
in
inc
ret
pop
add
inc
enter
fsubr
outs
or
add
mov
ret
jo
shl
jp
xchg
and
lea
pop
adc
add
adc
push
adc
inc
in
push
shl
inc
loopne
push
dec
bound
rol
je
cmp
test
or
(bad)
aas
adc
adc
pop
mov
pop
dec
mov
sub
sbb
repnz
mov
or
imul
out
sub
and
add
ds
mov
inc
div
sub
cmp
sub
push
loope
clc
cvttps2pi
pop
dec
test
dec
push
call
and
shr
inc
lea
mov
lock
cmp
lock
mov
je
add
push
data16
ficom
fcmovu
add
push
fcmovu
cmp
adc
fcmove
inc
add
sub
adc
xchg
pusha
ret
iret
and
mov
shl
or
fwait
sub
jne
mov
push
out
js
pop
icebp
push
call
adc
ins
in
mov
or
repz
(bad)
(bad)
jge
add
mov
jne
push
push
mov
(bad)
aas
call
ret
mov
push
mov
mov
cmp
jne
lea
push
and
or
and
pop
test
into
adc
add
cmp
mov
mov
cmp
jbe
sti
ja
push
or
jge
add
sbb
fwait
pushf
test
inc
or
inc
cld
aaa
lea
mov
hlt
mov
movs
lock
cld
(bad)
(bad)
in
lea
cmovae
mov
mov
sub
mov
je
mov
cs
xor
jbe
or
or
add
push
leave
add
ja
loopne
(bad)
mov
or
push
lock
jmp
mov
fdiv
sti
or
sti
jae
test
adc
pop
xor
out
or
jnp
outs
or
sti
sub
jp
push
add
mov
bound
xchg
xchg
inc
dec
adc
fdiv
lock
loopne
outs
or
jge
jb
in
sub
je
mov
enter
aad
ret
lea
or
test
xor
ror
sbb
fsub
sbb
inc
hlt
pusha
in
push
clc
pop
or
inc
into
dec
cmp
inc
or
xchg
in
jbe
cld
push
push
mov
cld
mov
mov
jbe
xor
inc
out
push
sub
mov
adc
mov
add
jp
dec
jne
push
in
sbb
mov
sbb
mov
and
inc
push
push
in
arpl
cpuid
push
(bad)
les
sbb
je
jnp
sbb
scas
outs
out
jp
add
inc
add
and
and
aaa
mov
js
pop
add
call
lea
sbb
ss
in
sub
clc
jg
retf
out
or
xor
add
sub
push
loopne
outs
xchg
aaa
add
add
dec
in
cmp
sub
sub
jne
clc
dec
jae
dec
clc
pop
cmp
jae
mov
inc
jp
(bad)
pop
pop
mov
sahf
dec
mov
inc
in
pop
mov
mov
cld
mov
xor
mov
mov
dec
push
xor
das
out
and
and
pusha
jnp
push
(bad)
icebp
or
add
xchg
repnz
test
call
pop
mov
icebp
or
fild
dec
inc
je
add
push
dec
je
pop
test
dec
xchg
adc
js
inc
inc
adc
xchg
add
test
jne
sbb
push
fiadd
jge
jmp
mov
cmp
je
mov
scas
push
add
ret
inc
jae
lahf
xor
add
clc
add
push
push
cmp
adc
retf
mov
xchg
(bad)
or
inc
adc
ret
adc
inc
or
push
fsubrp
push
and
call
or
add
in
sbb
in
fs
mov
add
xchg
sub
mov
pop
jo
adc
jg
mov
jle
mov
sar
je
into
rol
mov
push
mov
push
inc
xor
mov
sub
mov
je
push
popf
mov
mov
movsx
sub
cmp
ja
outs
loopne
clc
add
mov
push
inc
fimul
(bad)
rol
or
jle
sub
push
push
push
add
inc
cmp
jb
pop
out
push
inc
lds
stos
add
mov
popa
jmp
das
lock
mov
jb
sbb
cmc
rcl
jmp
loopne
retf
or
fidivr
movs
mov
add
ins
loopne
adc
add
xor
mov
jmp
je
mov
cmp
je
xor
sar
(bad)
push
ss
or
push
push
jmp
inc
cwde
mov
cmp
es
sar
inc
fdivr
(bad)
aas
adc
cmove
xor
mov
test
pop
setne
or
inc
scas
wbinvd
ins
test
sete
push
fwait
imul
jo
xor
xchg
test
pop
cmovne
cs
mov
jmp
fisubr
test
add
ss
push
mov
inc
outs
test
mov
jmp
mov
and
iret
and
outs
js
pop
addr16
xor
xor
mov
jl
xchg
xor
add
cmp
fadd
(bad)
sbb
and
and
jmp
es
xor
sub
call
(bad)
mov
or
cmp
je
mov
sub
mov
mov
lea
cmovs
hlt
mov
ret
dec
mov
mov
shl
inc
cmp
jne
iret
pop
ret
sbb
and
mov
xor
movzx
movzx
push
xor
popa
dec
dec
mov
into
cmp
pop
fdivr
shl
add
cmp
jne
push
dec
push
jg
fbstp
gs
(bad)
je
sub
in
or
or
mov
mov
mov
add
dec
xchg
or
cmp
jne
pop
mov
adc
inc
fsubr
fimul
sbb
not
fild
(bad)
dec
push
iret
or
mov
test
je
inc
inc
cmp
jb
and
jle
dec
mov
mov
cmp
je
inc
push
jne
shr
adc
out
xchg
in
and
cmp
pop
add
push
or
add
in
adc
popa
jo
adc
aas
jg
add
cmp
sbb
add
pushw
add
pop
movs
add
add
enter
jae
mov
add
pop
pop
lods
sbb
cmp
or
dec
mov
mov
inc
adc
push
adc
movs
or
push
push
out
imul
stos
adc
and
clc
and
inc
push
pop
(bad)
lahf
sub
ds
ins
jbe
push
inc
sbb
pop
sbb
push
mov
cmp
cmp
je
and
enter
or
pushf
sbb
dec
femms
xchg
mov
xor
pop
push
add
bound
pop
ins
dec
clc
xchg
cmp
add
stos
test
pop
in
fs
mov
pop
in
gs
pop
pusha
or
pop
push
aaa
cmc
dec
sub
test
ins
push
mov
cs
ret
inc
add
mov
xchg
stc
loopne
add
je
sub
fstp
icebp
pop
retf
add
ret
mov
jmp
xor
cmp
arpl
sub
sub
and
xchg
lea
fsubr
xchg
loope
mov
std
in
pop
ins
(bad)
jg
mov
mov
adc
or
push
icebp
jne
neg
jne
lea
call
adc
dec
bswap
sar
movs
push
push
dec
popa
mov
outs
or
test
adc
pusha
add
pusha
stos
and
mov
seto
mov
dec
pop
push
add
inc
pop
aad
mov
mov
xor
dec
adc
mov
mov
mov
sub
sar
(bad)
xor
dec
mov
dec
adc
add
mov
sar
adc
adc
jb
(bad)
cmc
mov
push
pop
je
fiadd
adc
xchg
cs
or
out
and
jle
ds
int3
hlt
mov
and
pop
mov
push
jl
push
lea
jbe
push
dec
push
adc
aaa
mov
mov
es
add
sbb
ja
sbb
mov
add
je
adc
cli
mov
inc
add
and
mov
rcr
mov
js
xor
adc
jne
lea
std
mov
mov
lea
push
push
sbb
add
dec
add
cmp
mov
inc
cld
movs
mov
fadd
ja
sar
jp
add
shr
sub
add
shr
cmp
cmp
push
pop
jle
mov
(bad)
inc
add
or
(bad)
jne
jmp
mov
mov
jns
shl
push
sub
mov
mov
push
mov
shr
fwait
inc
and
inc
clc
add
or
lea
sub
inc
(bad)
ffreep
pop
inc
or
call
shl
adc
jne
fistp
mov
mov
retf
cmp
jne
mov
mov
pusha
sbb
dec
mov
add
push
(bad)
pop
or
test
rcr
inc
shl
adc
or
(bad)
jmp
and
in
pop
lea
pop
pop
and
push
add
adc
pop
sbb
rcl
call
jne
lea
aas
mov
sbb
int3
jmp
push
push
iret
adc
mov
push
lock
or
hlt
or
mov
jae
mov
inc
je
push
adc
not
call
jmp
mov
mov
(bad)
xor
sbb
inc
adc
add
(bad)
lods
pusha
call
es
xor
push
ins
popa
inc
mov
add
xor
add
xchg
adc
dec
fistp
push
push
xor
xor
sbb
jmp
rdpmc
rol
push
inc
loope
repz
ret
test
fist
enter
shl
pusha
inc
retf
retf
call
and
aad
xor
iret
push
sbb
mov
test
jne
cmp
ja
mov
int3
ret
push
jle
std
dec
(bad)
jae
sub
cmp
ja
popa
add
ret
add
and
mov
jecxz
sbb
test
je
jne
js
mov
loopne
lds
inc
lock
sbb
push
call
xor
fisttp
repz
jmp
cld
push
adc
xchg
out
xor
jb
xlat
jg
push
mov
lahf
fwait
mov
(bad)
ja
push
in
lods
cmp
jae
mov
cmp
pop
int
jg
jmp
mov
add
push
syscall
adc
(bad)
lea
cmp
jae
mov
xor
movsx
push
push
pop
pop
xor
jo
test
adc
inc
shl
in
jg
mov
sub
push
neg
lds
add
mov
adc
adc
or
and
mov
int
dec
in
or
scas
scas
dec
int3
xor
cmp
inc
icebp
jg
dec
adc
fnstenv
sub
leave
mov
mov
add
or
jne
cmp
pop
mov
adc
dec
ja
lock
sti
sbb
dec
por
mov
and
fsubr
test
arpl
stos
cmp
push
dec
sub
xchg
repnz
mov
mov
inc
add
add
inc
or
mov
jbe
sub
inc
gs
pusha
push
mov
aam
(bad)
call
mov
mov
lahf
daa
jp
(bad)
std
push
add
add
or
sar
setne
mov
call
push
jmp
inc
inc
add
or
rcl
ret
lock
ins
inc
sbb
lea
std
mov
mov
mov
pop
mov
or
mov
add
jg
std
xchg
jmp
xorps
or
mov
lea
jb
pusha
or
test
push
xor
aas
jne
movq
(bad)
(bad)
(bad)
shl
daa
movzx
ficomp
clc
push
je
cmp
jne
mov
retf
add
adc
ret
add
hlt
jae
mov
add
push
or
sqrtps
jmp
je
cmp
jne
jns
cmp
jne
cmp
jne
cmp
jne
mov
and
sbb
jmp
mov
shr
not
and
mov
jmp
inc
lock
cmp
imul
not
and
movs
imul
or
add
(bad)
fadd
push
push
fwait
mov
add
inc
add
dec
call
mov
das
ja
retf
cld
aam
fs
cmps
std
mov
mov
adc
inc
add
lea
add
jge
add
and
(bad)
cmp
add
add
add
add
add
cwde
mov
add
dec
cmp
mov
add
arpl
dec
sbb
lock
shl
cmc
outs
fmul
pop
push
pop
add
shl
jmp
sub
jle
sbb
lock
jbe
ss
add
inc
jbe
mov
out
push
adc
pushf
mov
cmp
cdq
jle
push
les
shl
sub
leave
jle
xor
xchg
cli
ret
div
fisttp
and
adc
inc
aad
mov
inc
or
call
and
cmp
inc
add
popf
rol
or
dec
mul
xor
je
mov
retf
pop
push
sbb
jne
shr
je
daa
mov
(bad)
(bad)
inc
lea
cmp
ja
sub
jmp
lea
cmp
dec
loopne
dec
push
jmp
lea
push
sub
dec
out
mov
js
lea
cmp
ja
sub
dec
lahf
cmp
or
sbb
jle
dec
mov
pop
shl
or
lea
push
mov
inc
mov
test
sti
jb
mov
pop
mov
pusha
cmp
xor
sub
push
mov
and
mov
sbb
add
out
(bad)
aas
cmp
je
mov
or
mov
sub
jb
clc
add
lea
test
adc
add
pop
jg
dec
mov
xchg
cs
jmp
mov
jmp
test
jne
mov
int
fdivrp
pop
mov
mov
jmp
mov
push
mov
cmp
push
cmp
mov
jne
stos
dec
inc
add
xor
pop
stos
or
test
add
mov
sub
adc
clc
cmp
ja
cmp
xor
pop
aam
cmp
clc
jnp
or
mov
pop
xor
inc
mov
inc
adc
or
sbb
jg
mov
mov
push
mov
sub
inc
jbe
cmp
jne
(bad)
jg
sar
add
or
inc
fdivr
add
in
sub
repnz
add
test
mov
scas
push
lods
mov
lea
movs
mov
push
inc
mov
cmp
dec
out
push
movs
and
js
mov
push
into
pop
adc
add
addr16
lea
mov
add
xor
lea
mov
loope
add
(bad)
aas
pushf
movzx
shr
mov
mov
and
pop
sti
daa
push
movsx
and
sbb
inc
cmp
jb
cmp
adc
mov
pop
out
jb
add
gs
push
inc
ret
std
mov
sbb
das
pop
jo
add
enter
in
xchg
test
int3
dec
push
into
mov
jl
adc
add
sbb
mov
sub
pop
jb
inc
adc
mov
jge
(bad)
(bad)
jg
stos
add
fldpi
or
rcr
xor
sub
lea
cmp
cmp
cmp
loop
out
inc
jmp
lea
xor
add
mov
mov
scas
add
out
fwait
mov
dec
test
nop
cli
mov
lods
mov
push
lea
dec
addr16
push
dec
and
enter
ins
std
lods
dec
stos
mov
adc
lea
sti
scas
aas
push
mov
dec
sahf
je
lea
std
add
xor
xchg
(bad)
data16
add
mov
mov
add
push
lea
mov
cwde
mov
xchg
mov
xchg
and
mov
xchg
sub
xor
rol
mov
push
(bad)
dec
jne
cmp
xor
mov
jmp
cdq
mov
xor
xor
push
sti
lock
sub
sbb
mov
jo
add
inc
cmp
push
out
fcomip
dec
iret
pushf
mov
mov
mov
mov
ja
dec
aam
enter
jge
sub
adc
(bad)
inc
xor
mov
or
mov
mov
jne
cmps
pop
sar
sbb
push
mov
pop
mov
and
pop
dec
stc
push
dec
inc
xchg
xrelease
sti
push
mov
and
xchg
in
es
add
xor
ffreep
fnstenv
ja
pop
fcom
clc
add
pop
cdq
mov
xor
sub
lea
outs
sub
mov
outs
cmp
pusha
icebp
mov
scas
lea
add
(bad)
inc
sub
add
mov
mov
test
jne
cmp
jge
aaa
iret
retf
pop
aaa
test
adc
fcom
fmul
retf
(bad)
sar
adc
ds
in
add
cmp
(bad)
cmps
stos
fadd
iret
(bad)
(bad)
mov
or
fist
inc
fmul
loopne
pop
add
jle
mov
popa
mov
mov
dec
mov
xchg
loopne
push
adc
cld
(bad)
loope
adc
test
ja
shl
push
or
mov
mov
pop
in
ins
pop
sub
adc
lds
vpmacsswd
outs
clc
sub
pop
clc
add
mov
mov
or
jne
add
retf
push
mov
cmp
push
popa
xor
mov
retf
lahf
jg
jp
loope
push
xor
jl
add
add
adc
sbb
ret
sub
cmp
jle
cmp
jne
mov
cmp
je
cmp
inc
je
pop
jne
add
mov
and
add
xor
cmp
je
mov
enter
(bad)
clc
jl
jne
test
jne
shl
mov
movzx
inc
sub
cmp
jne
and
and
add
lahf
inc
mov
jg
mov
inc
leave
xor
pop
mov
cmp
jl
nop
mov
push
cmp
ja
lea
add
mov
movzx
imul
das
outs
ret
mov
and
add
jg
mov
emms
add
jg
clc
adc
pop
and
adc
loop
hlt
or
cmp
jne
pop
mov
sub
mov
push
mov
cmp
je
mov
ret
outs
xchg
mov
sti
je
mov
mov
cli
xchg
ja
jb
cmp
ja
add
or
(bad)
adc
jne
mov
add
lock
add
adc
inc
cdq
cwde
enter
outs
inc
jmp
inc
inc
outs
emms
sar
mov
push
inc
movzx
ja
sbb
mov
and
add
fmulp
dec
or
invd
fs
pxor
arpl
mov
push
popa
pop
inc
out
jns
(bad)
leave
mov
xchg
mov
add
outs
add
dec
ins
add
mov
aam
dec
adc
sub
add
jmp
mov
push
mov
push
mov
lea
jns
jmp
cmp
je
in
out
(bad)
dec
cmp
cmp
pop
(bad)
mov
sbb
add
mov
shld
shl
cmp
add
lock
shld
add
mov
scas
sbb
cdq
add
adc
mov
or
cmp
jne
jae
add
out
inc
iret
xchg
push
xor
mov
outs
mov
je
movzx
iret
cmp
mov
inc
xor
cmp
jne
jmp
sbb
mov
cmp
mov
push
and
add
cmp
loopne
xlat
inc
pop
pop
sub
std
ret
cmp
jne
inc
and
jnp
into
xor
push
sbb
adc
outs
das
push
adc
sub
and
push
pop
jl
or
xor
pop
aam
pop
and
dec
mov
or
test
jnp
push
adc
xor
jmp
rol
imul
sub
sub
popa
punpcklwd
add
jle
mov
and
mov
(bad)
and
(bad)
jle
(bad)
push
jg
mov
bound
ja
mov
lahf
std
dec
adc
call
mov
push
jge
(bad)
sub
push
pop
adc
mov
add
mov
cld
or
inc
aaa
in
push
push
sub
dec
(bad)
retf
pop
cmp
jne
mov
xor
add
adc
inc
cld
push
aad
shl
add
hlt
pop
jmp
mov
jmp
mov
jl
pop
jg
xor
mov
add
add
iret
sub
pop
inc
or
pmullw
jo
cmp
jg
loopne
add
jp
inc
mov
sbb
pushf
stos
mov
jns
aas
push
std
call
sub
jae
mov
cmp
ja
sub
aaa
rcr
ror
push
out
or
(bad)
jmp
stos
mov
sub
mov
inc
pop
pop
mov
cwde
sbb
mov
add
ds
jne
push
mov
jp
jl
mov
jae
mov
or
xchg
dec
inc
aaa
mov
push
mov
dec
sbb
inc
std
ja
jmp
mov
mov
xor
pushf
xor
add
cmp
mov
sti
adc
jnp
pop
test
add
daa
lea
mov
mov
cmp
(bad)
jp
rol
aas
and
inc
pop
push
push
push
popf
inc
(bad)
mov
push
push
lea
mov
call
mov
lea
or
mov
test
je
enter
mov
mov
rcr
sbb
call
jmp
mov
push
add
push
push
inc
sbb
and
aad
add
stos
mov
(bad)
das
adc
mov
mov
mov
mov
xor
rol
add
xor
mov
mov
add
dec
or
dec
or
iret
or
cmp
push
push
cmovne
xchg
jg
pushf
mov
adc
push
adc
outs
(bad)
mov
pop
mov
mov
pop
inc
add
dec
jge
(bad)
cmp
arpl
nop
mov
inc
lds
mov
and
mov
adc
pop
movhlps
lahf
adc
mov
mov
mov
or
pop
sbb
retf
lahf
cmp
adc
fimul
sbb
or
pop
test
mov
xchg
ret
pop
int
lds
add
outs
sti
inc
idiv
mov
je
cmp
sbb
out
sbb
or
cld
pop
push
icebp
(bad)
jne
push
lea
dec
loope
popf
dec
mov
mov
mov
cmp
mov
jbe
les
call
mov
inc
adc
out
sbb
jae
sar
xor
rcr
cmp
mov
or
pop
sbb
ja
shrd
hlt
(bad)
shl
pop
mov
mov
or
pop
dec
push
cld
(bad)
out
or
(bad)
add
mov
jmp
mov
mov
(bad)
(bad)
jg
rol
mov
mov
mov
cmp
jne
push
mov
pop
or
dec
cmp
sub
jmp
mov
xor
mov
mov
mov
adc
out
or
or
inc
dec
into
std
cmp
rcl
add
push
dec
jo
sti
idiv
add
adc
add
mov
mov
sbb
js
cmps
add
xor
or
adc
sub
mov
out
mov
add
push
or
and
retf
inc
cmp
adc
jbe
sbb
mov
or
mov
add
jns
into
xchg
cmp
add
or
in
fistp
int3
or
add
shr
push
or
rol
hlt
add
adc
adc
mov
mov
dec
adc
xor
mov
or
push
sahf
(bad)
sbb
push
mov
lods
(bad)
(bad)
cmp
sub
mov
push
mov
push
mov
mov
mov
mov
loope
clc
call
sbb
inc
adc
lock
mov
add
push
adc
pop
adc
or
mov
fist
or
sti
mov
cmovb
test
je
sub
jb
mov
cmp
call
add
mov
add
out
cmp
je
mov
(bad)
(bad)
inc
cmp
jne
cmp
je
mov
cmp
jne
cmp
je
mov
cmp
jne
and
cli
(bad)
cli
push
inc
add
inc
add
rcr
lock
(bad)
jmp
xor
test
jne
cmp
jae
or
test
setns
fimul
(bad)
(bad)
popa
out
sti
setne
adc
pop
mov
pusha
movs
call
outs
mov
ficom
fwait
mov
jl
cmp
inc
add
inc
inc
add
inc
call
inc
adc
push
xchg
cwde
rcl
sbb
test
je
mov
dec
dec
jg
or
lock
je
in
mov
mov
mov
jne
cmp
sbb
push
mov
mov
add
or
add
cld
addr16
or
add
mov
mov
jg
call
add
int3
mov
xor
fwait
and
or
adc
jno
mov
fistp
sar
push
push
jmp
inc
scas
pushf
stos
ret
xchg
inc
xchg
mov
cmp
add
pop
inc
in
pop
sbb
cmp
je
call
add
out
push
add
cs
cmp
jne
mov
pop
pop
xor
push
pushf
jnp
push
dec
addr16
push
pop
pusha
aas
cmp
div
out
sbb
sub
or
pop
push
pop
lahf
push
sbb
dec
cwde
and
pusha
and
out
push
pop
(bad)
std
add
pop
dec
adc
or
inc
neg
hlt
sbb
add
mov
mov
add
mov
stos
pop
jg
int3
cmp
ret
cmp
into
or
pusha
stos
imul
retf
adc
jo
or
dec
pop
mov
sbb
jmp
sub
push
pop
push
nop
(bad)
nop
retf
xchg
pop
jmp
ss
mov
aam
inc
hlt
mov
arpl
data16
fld
cmp
jle
fwait
or
dec
dec
hlt
in
scas
mov
sbb
jg
mov
rol
push
add
pop
adc
mov
out
and
sbb
push
mov
aaa
call
add
sbb
inc
mov
lea
in
add
sub
mov
push
xor
adc
adc
mov
mov
fs
cmp
mov
push
mov
inc
sub
mov
inc
inc
add
test
aaa
pusha
mov
mov
xor
mov
mov
adc
add
push
rcl
mov
sbb
je
movs
pop
fld
sub
inc
cmp
jo
lock
mov
jecxz
loope
add
xor
pusha
add
push
lods
in
dec
nop
cmp
movs
in
push
mov
in
xor
adc
add
adc
in
xchg
lds
rol
outs
pop
out
add
sub
loope
jmp
dec
adc
fdivr
pop
jle
push
pop
pop
mov
jl
inc
or
dec
or
xlat
dec
pushfw
sbb
mov
push
or
js
aaa
adc
cs
lea
push
ret
cmp
loope
scas
add
lahf
pop
lahf
push
add
add
mov
add
pop
pop
ret
dec
jg
add
enter
jnp
xor
mov
cmp
jne
cmps
out
ja
dec
push
cmp
inc
lahf
ins
adc
(bad)
cmps
inc
ret
pop
sub
jmp
js
mov
addr16
nop
and
cld
cmp
cmp
adc
pop
sub
sub
mov
xor
mov
sub
add
imul
pop
sbb
cmc
gs
lea
mov
mov
(bad)
mov
punpckhbw
(bad)
aaa
gs
push
lea
lea
add
sahf
mov
add
inc
or
sti
out
pop
clc
jae
jg
cmp
les
push
rol
dec
sbb
or
repz
sahf
sub
add
sbb
jmp
int3
push
repz
adc
add
pop
add
icebp
(bad)
mov
lea
lea
cmp
je
mov
fadd
fild
add
mov
or
inc
or
mov
sbb
inc
or
xlat
(bad)
imul
inc
inc
inc
or
jmp
adc
outs
out
push
push
push
adc
int3
mov
cmp
je
mov
cmp
cmovb
push
push
fcomp
cmp
jp
push
jmp
sbb
inc
sbb
clc
and
(bad)
cmp
mov
push
lea
mov
push
push
jecxz
clc
loopne
add
rcr
sbb
ss
stos
push
dec
(bad)
fwait
jns
out
sub
add
test
mul
push
jne
jb
pop
jnp
loope
add
outs
pop
inc
add
or
rcl
aad
push
inc
mov
mov
mov
inc
inc
es
push
mov
je
shr
inc
or
cld
adc
add
jmp
cs
inc
add
jne
mov
mov
jno
pusha
inc
scas
shl
mov
je
mov
jp
mov
out
sub
dec
in
je
sbb
jg
in
add
adc
out
sbb
add
cwde
sub
add
xlat
jmp
cdq
in
add
sbb
out
and
inc
out
cmps
mov
jbe
stc
add
fadd
dec
or
pop
and
dec
dec
into
adc
dec
jl
and
fs
adc
fs
adc
in
add
test
mov
jl
or
adc
xchg
sub
lea
into
rcr
or
cld
jg
cmp
mov
or
cli
inc
or
das
adc
dec
inc
add
fld
push
add
and
dec
lahf
push
dec
or
jg
fild
mov
inc
aam
mov
test
push
and
sbb
jne
inc
test
inc
shl
or
dec
lea
push
scas
test
push
lea
add
or
jns
mov
fld
in
test
inc
cwde
inc
outs
sub
inc
test
inc
sub
(bad)
fiadd
inc
mov
inc
daa
jne
lea
cmp
lock
fist
popa
push
push
call
adc
ror
icebp
adc
add
mov
clc
pop
inc
dec
lea
mov
jle
ins
and
lea
jge
add
pxor
or
push
push
and
ja
fidiv
or
cmp
je
imul
movs
pushf
jmp
ja
pusha
xchg
cmps
adc
jge
or
mov
jg
add
inc
inc
adc
fwait
or
jp
and
mov
mov
xor
lea
dec
mov
sub
add
mov
add
data16
imul
aaa
xchg
mov
js
mov
nop
add
mov
xor
mov
or
pop
xchg
pop
adc
add
jae
fwait
out
vpshlb
mov
xor
jmp
mov
sub
rol
pusha
add
gs
jmp
add
xchg
test
sub
loopne
add
scas
mov
jge
xchg
push
push
adc
cli
mov
or
ss
push
fmul
call
push
ds
mov
push
mov
add
mov
ins
or
out
sbb
xchg
shl
push
aas
fist
test
dec
test
aad
add
push
lahf
jns
int3
mov
or
inc
pushf
cmps
add
cmp
pop
add
adc
clc
pop
xor
mov
jmp
test
jne
and
cs
fdiv
mov
sete
inc
adc
scas
mov
js
mov
sbb
inc
cwde
mov
test
jle
xchg
daa
cwde
jb
push
test
xor
dec
dec
cwde
mov
(bad)
call
pop
mov
dec
mov
push
test
inc
sar
adc
xchg
push
lea
push
mov
imul
cs
mov
mov
test
jmp
cmp
sar
mov
lea
dec
mov
inc
idiv
push
mov
jge
test
je
and
lds
rcr
push
jb
dec
jge
sbb
push
mov
(bad)
push
dec
inc
mov
mov
mov
mov
into
dec
mov
dec
adc
dec
movs
cmp
mov
cld
and
dec
adc
stc
mov
arpl
es
mov
dec
adc
nop
mov
mov
cmp
sti
dec
mov
jne
add
add
sbb
jne
xlat
add
or
ss
adc
lock
dec
add
dec
add
and
out
and
dec
add
xchg
mov
mov
cmp
out
clc
es
or
jmp
test
js
jne
mov
(bad)
mov
lea
jmp
mov
mov
lea
cmp
je
(bad)
push
ror
mov
test
mov
out
std
add
adc
add
jl
lods
into
mov
cli
sbb
ror
adc
fild
jmp
mov
lea
mov
push
icebp
or
(bad)
push
push
dec
(bad)
sbb
lea
jl
dec
cwde
popa
cmp
mov
pop
loopne
cmps
dec
jmp
cmp
mov
inc
mov
mov
jle
sbb
or
call
dec
add
cs
push
mov
and
call
pop
jnp
dec
cdq
not
and
inc
mov
sbb
mov
lea
(bad)
dec
mov
mov
xor
pop
jno
dec
add
push
lock
jbe
mov
add
mov
mov
add
and
(bad)
jno
add
jne
lds
js
cdq
mov
loopne
xor
adc
adc
mov
adc
mov
and
cmp
jbe
push
and
inc
jp
shr
or
mov
xchg
jmp
cs
xor
mov
push
clc
lods
push
adc
or
test
mov
ret
mov
jg
test
pushf
fdiv
jle
jbe
je
jne
aaa
test
or
int3
call
enter
jo
pop
out
add
cmp
fstp
div
lds
(bad)
push
test
enter
sub
jne
or
add
adc
(bad)
rcl
cwde
xchg
in
push
xor
inc
push
(bad)
or
xchg
in
jle
or
mov
sbb
adc
mov
or
sub
mov
nop
mov
inc
clc
fisubr
movs
add
cmp
dec
mov
mov
les
ret
inc
pop
pop
or
xlat
pop
xchg
int3
and
mov
into
cmp
movs
jmp
arpl
inc
nop
sbb
add
cmp
mov
popa
cli
dec
nop
jb
(bad)
mov
and
das
push
or
mov
scas
inc
jbe
js
(bad)
loopne
sub
push
repnz
fild
inc
les
lock
inc
rol
jb
xchg
or
ror
xchg
sub
jmp
push
aas
push
jge
inc
adc
jge
add
dec
xor
punpckldq
data16
and
int3
fwait
sub
cmp
sub
mov
sahf
out
mov
push
ror
mov
mov
mov
mov
je
mul
add
and
adc
push
push
cmp
rcl
push
jbe
mov
xor
call
or
or
mov
test
ror
(bad)
sar
mov
sbb
mov
or
or
(bad)
inc
shl
push
pop
(bad)
jb
lock
push
push
mov
sub
pop
push
xor
jle
sub
(bad)
mov
jle
or
hlt
das
or
mov
ret
shl
test
aad
push
in
push
cwde
pushf
add
dec
and
adc
add
push
mov
jmp
das
and
mov
pop
out
push
call
xor
xchg
sub
pusha
jb
mov
iret
(bad)
sbb
lea
add
aaa
out
mov
lock
mov
call
add
enter
push
mov
les
sti
dec
push
xchg
test
and
inc
cld
aas
cmp
jb
mov
jmp
add
enter
add
int3
xor
dec
rol
fucomp
sub
loope
add
sbb
mov
cwde
jg
mov
sbb
pop
movs
sub
push
mov
std
popa
retf
adc
sub
cdq
sub
mov
xchg
sbb
jnp
retf
pusha
inc
pop
popa
add
and
iret
mov
and
cmps
mov
into
std
sub
ret
movs
sbb
outs
mov
cmp
std
ret
dec
adc
cmp
inc
cld
cmps
cmp
std
and
inc
mov
adc
pusha
js
fs
and
(bad)
cmp
(bad)
jmp
lea
xor
cmp
pop
clc
fadd
jnp
xor
pop
adc
das
push
(bad)
mov
call
and
adc
sbb
out
sub
push
retf
add
sub
into
cmp
mov
mov
xchg
and
or
mov
pop
sub
aam
movs
pop
or
je
xor
das
push
mov
aaa
inc
cmps
adc
mov
paddq
jge
jmp
mov
dec
inc
push
mov
inc
pop
pusha
sub
jnp
add
nop
and
mov
dec
and
mov
push
mov
mov
test
bswap
xchg
call
je
sbb
xor
shl
(bad)
cld
aaa
xor
inc
lock
mov
lds
cli
dec
div
jne
lea
push
push
push
mov
mov
sub
(bad)
mov
inc
adc
inc
or
add
mov
sbb
cmp
pop
pop
ins
mov
push
shr
mov
call
pop
jmp
scas
mov
ret
adc
push
js
xchg
and
aaa
adc
fisttp
pop
and
inc
pushf
mov
int3
push
or
jne
push
xchg
jns
push
mov
bound
das
dec
cmp
sbb
push
push
ja
or
fild
outs
xor
mov
xor
mov
push
(bad)
dec
lds
mov
cmp
jle
sahf
aas
mov
sbb
inc
and
pop
into
cmc
or
loopne
adc
test
cmp
wrmsr
enter
cmp
ja
dec
(bad)
retf
daa
cli
shr
add
cmp
push
in
sbb
push
fdiv
repnz
stos
pop
fmul
ret
mov
test
add
stos
ss
push
cmp
mov
inc
enter
cmp
pop
pusha
push
popa
inc
fsubrp
dec
add
jne
idiv
int3
jne
and
jo
clc
mov
mov
jo
cmp
sbb
call
dec
add
adc
stos
push
mov
xlat
inc
clc
mov
and
sbb
test
inc
inc
mov
lea
push
psubusb
fcom
lods
mov
push
cmp
inc
jge
mov
cmp
je
inc
test
(bad)
sbb
loope
les
push
rcl
xor
int
mov
imul
(bad)
(bad)
lahf
push
loopne
xchg
nop
cld
lahf
mov
popf
les
inc
inc
mov
bound
adc
cli
adc
or
dec
jbe
leave
push
mov
rol
cmp
je
(bad)
push
xlat
pusha
loop
jno
push
xor
xor
and
shl
jne
out
cdq
push
popa
or
cld
cmps
inc
loope
mov
xor
test
fdiv
mov
pop
mov
fs
pop
int3
push
push
loop
and
cmp
outs
dec
add
mov
test
add
mov
scas
stos
popa
inc
dec
pop
inc
dec
scas
or
dec
xor
sbb
jl
scas
push
and
mov
mov
out
(bad)
dec
adc
je
cmp
jmp
ror
dec
pop
pushf
mov
mov
push
stos
add
or
mov
adc
pop
sbb
mov
pop
lahf
(bad)
cmp
inc
push
inc
test
shr
and
mov
adc
add
or
or
add
inc
repnz
mov
mov
(bad)
lds
fcom
add
in
ret
int
push
xor
add
mov
pushf
test
push
int3
mov
jmp
clc
mov
and
mov
call
out
mov
push
pop
ins
pop
mov
or
and
inc
mov
cmp
xlat
popf
and
xchg
jb
mov
jmp
stos
mov
enter
test
stc
(bad)
aas
push
cmps
cmp
cmp
jne
sbb
jle
cmp
jae
(bad)
(bad)
out
add
and
jne
inc
cmp
jb
mov
adc
out
mov
je
and
(bad)
out
push
fsub
jns
jne
add
shr
add
add
ja
adc
push
pop
pop
mov
jg
dec
mov
jbe
jne
mov
lea
aad
ins
pop
mov
mov
cmc
dec
jnp
jg
sub
add
and
cmp
xlat
sti
pusha
add
movzx
mov
xor
enter
out
test
lea
bnd
inc
fsubr
jnp
cmp
inc
push
inc
inc
cwde
pusha
or
ja
mov
add
inc
loopne
arpl
arpl
in
add
popw
inc
adc
dec
adc
push
xchg
pop
and
xor
cdq
add
adc
lea
mov
mov
push
adc
aas
mov
mov
mov
cmp
bswap
shl
and
adc
and
cmp
inc
in
adc
add
jno
mov
mov
cmp
je
mov
mov
mov
cmp
psubb
test
je
mov
sub
add
add
scas
loopne
cmps
mov
add
jae
cmp
xor
outs
inc
cmp
jne
cmp
add
inc
(bad)
stc
push
inc
add
inc
(bad)
stc
add
sub
inc
add
inc
mov
cs
jne
gs
cmp
jae
push
adc
push
pop
inc
je
jnp
or
iret
or
test
add
jg
ja
adc
cmp
je
mov
jg
aad
add
mov
in
push
push
lea
(bad)
jg
hlt
pushf
pop
jg
mov
lea
mov
cmp
jne
mov
je
inc
xchg
sbb
inc
or
mov
imul
sbb
aam
sbb
cmp
sub
mov
je
mov
inc
inc
cld
lock
jne
out
jns
pop
ret
mov
rol
jno
dec
push
adc
cmp
pmaxub
loope
inc
pop
stos
jmp
mov
ds
aam
mov
mov
mov
add
jl
(bad)
retf
out
lds
sbb
jmp
push
jge
mov
mov
lea
jmp
or
(bad)
push
lds
inc
je
mov
mov
ds
push
mov
jne
push
mov
rcr
movs
je
add
mov
xchg
mov
cli
lahf
inc
or
adc
imul
stos
xchg
cmp
add
enter
mov
das
jb
and
imul
adc
add
and
mov
xchg
aam
pop
add
dec
mov
(bad)
xchg
scas
dec
add
jmp
and
(bad)
jle
add
cmp
dec
int3
imul
mov
xchg
and
mov
jo
rcl
push
jecxz
cmp
add
lods
add
jecxz
cmc
arpl
mov
sub
push
mov
dec
inc
icebp
sti
cs
dec
fmul
push
aas
inc
shr
sar
lea
pushf
mov
mov
and
sub
dec
adc
out
call
inc
lea
mov
or
dec
mov
int3
test
mov
cld
mov
jmp
dec
jecxz
push
or
jl
add
adc
inc
int3
add
push
jne
add
jg
mov
pusha
jge
jmp
mov
sub
xchg
jmp
nop
fcom
inc
add
aas
push
push
pop
or
cld
pop
mov
ja
mov
mov
lea
shl
lea
jge
(bad)
neg
mov
call
dec
iret
mov
shl
mov
sub
add
inc
add
sub
pop
mov
lea
cmp
test
pusha
shl
fwait
add
jmp
xchg
cmp
outs
test
ja
add
repz
mov
(bad)
xchg
push
in
cmp
add
bound
xor
or
jge
add
cmps
or
outs
or
lock
pop
pop
lea
mov
xor
ret
call
sub
mov
push
mov
mov
add
rol
(bad)
jmp
lds
cld
mov
mov
cmp
cmovb
sub
aaa
rcl
pop
mov
sub
jb
mov
cmp
pop
pop
mov
xor
or
push
clc
dec
xchg
or
clc
pop
dec
or
or
mov
(bad)
(bad)
mov
push
jne
cmp
jae
mov
mov
jmp
mov
mov
fwait
add
aaa
cmp
outs
(bad)
(bad)
call
mov
sub
movs
mov
mov
push
mov
add
add
call
push
es
xchg
add
push
add
jg
inc
icebp
or
jbe
inc
add
adc
push
mov
adc
xchg
int3
adc
add
or
pop
add
push
lea
(bad)
out
cs
pop
pop
mov
jns
jmp
push
jl
add
(bad)
jmp
mov
mov
sbb
std
jp
cmp
jne
adc
add
add
dec
(bad)
push
js
jmp
cmp
jne
mov
jmp
mov
mov
cmp
jne
sub
int3
std
add
(bad)
jmp
mov
leave
or
je
scas
stos
ja
dec
adc
dec
or
test
pusha
push
icebp
arpl
mov
mov
mov
jo
scas
stos
mov
mov
(bad)
mov
xor
or
pop
mov
mov
mov
(bad)
(bad)
mov
jmp
cmp
jb
mov
mov
mov
jae
sbb
add
bound
inc
add
add
test
jmp
jle
inc
add
inc
add
mov
mov
mov
or
dec
enter
add
test
add
add
je
sub
cmp
cli
fwait
mov
push
cmp
jne
mov
fadd
mov
and
adc
mov
out
mov
or
cld
fdivr
mov
cmp
jne
cwde
or
add
push
icebp
adc
cmp
test
inc
or
inc
or
inc
or
daa
push
inc
or
sti
mov
call
inc
ins
out
sbb
and
cs
push
sub
mov
loop
mov
mov
enter
xor
or
jge
mov
jl
mov
add
arpl
mov
or
push
adc
inc
add
jle
rcr
add
retf
mov
inc
mov
in
outs
fcomip
fwait
sahf
outs
push
in
mov
push
mov
xor
jne
cmp
and
push
stc
add
mov
(bad)
mov
out
fist
xchg
mov
mov
add
ret
call
test
js
add
push
or
jp
sbb
das
jg
add
fcomp
sbb
push
add
adc
inc
or
sub
arpl
je
mov
push
retf
aaa
xchg
dec
add
sbb
cmp
jne
mov
pop
lahf
in
pop
vpcmpeqd
das
push
mov
jb
xlat
or
cmp
adc
aas
jecxz
je
mov
jmp
mov
add
cli
jmp
fbstp
mov
inc
cmp
jne
fs
jae
push
cld
mov
cmp
fs
das
cdq
push
add
sbb
xchg
sbb
mov
mov
in
adc
ds
jmp
je
mov
mov
mov
mov
or
inc
cs
mov
dec
or
mov
xor
ret
xor
in
pop
adc
add
jmp
inc
add
add
or
dec
or
nop
retf
test
mov
pop
dec
dec
call
mov
cmp
xor
push
add
iret
das
(bad)
shl
fld
add
add
jns
jne
scas
xor
pusha
cld
js
xor
call
mov
cmps
aaa
xor
jne
mov
push
xor
mov
and
jns
adc
xlat
pop
cmp
inc
inc
push
xor
scas
and
add
sub
aas
jne
jmp
leave
sub
xchg
inc
pop
xor
xor
call
mov
cmp
jg
loopne
inc
inc
jg
mov
mov
retf
js
enter
mov
adc
cdq
xor
jno
cs
es
ficom
xor
add
loopne
xor
pop
lahf
push
hlt
fwait
retf
push
pop
adc
pop
sub
add
mov
or
test
inc
adc
mov
call
test
add
push
mov
rol
mov
sar
push
push
push
jmp
(bad)
call
and
push
jo
fadd
jns
xor
(bad)
sub
or
test
js
ds
push
(bad)
in
inc
ror
jo
jle
dec
std
jl
push
mov
lea
cmp
mov
xor
sub
(bad)
dec
xchg
inc
adc
add
adc
push
inc
xor
das
mov
jle
jl
in
cwde
xchg
push
jmp
mov
pop
int3
inc
ffree
push
push
fwait
and
cmp
jl
test
je
dec
add
or
jae
retf
or
scas
call
or
xchg
pop
push
and
push
iret
sub
(bad)
addr16
test
idiv
push
rcl
neg
push
push
mov
in
cmp
mov
or
push
push
dec
adc
mov
sbb
aaa
inc
icebp
test
jns
std
or
movs
mov
xor
add
mov
adc
push
sbb
lea
mov
push
(bad)
sub
and
clc
pop
and
test
je
cmp
daa
or
sti
lds
add
test
pop
rcr
push
mov
rep
adc
data16
mov
rep
push
aad
hlt
(bad)
fstp
out
lods
mov
push
test
je
and
lea
xor
push
inc
xor
jo
in
pop
div
xor
ds
dec
inc
add
cs
(bad)
fld
add
je
cmp
adc
xor
gs
push
sub
sbb
test
je
xor
sub
mov
js
loopne
scas
xchg
adc
out
inc
pop
xlat
popf
stc
retf
test
nop
test
add
xor
or
and
sbb
pop
and
sar
pop
and
add
or
das
mov
inc
pop
ins
repnz
mov
cmp
in
mov
cvttps2pi
cwde
mov
pop
add
sbb
mov
xor
pop
pop
mov
add
(bad)
aam
pavgb
outs
popa
push
xor
jno
sahf
adc
sahf
push
mov
mov
and
sbb
add
adc
mov
(bad)
mov
pushw
mov
pop
sbb
outs
pop
sbb
xchg
add
call
sbb
pop
cli
out
adc
or
sar
inc
sub
push
jmp
ret
in
push
sub
add
(bad)
fsubr
xchg
cld
pop
dec
and
xchg
inc
in
mov
jmp
or
sbb
or
sub
dec
and
ja
icebp
mov
xor
or
add
adc
adc
cmc
pop
add
sar
jmp
add
hlt
scas
stos
mov
lea
cmc
add
clc
call
(bad)
push
and
test
dec
and
push
sub
ror
dec
shr
and
(bad)
(bad)
std
add
enter
ss
call
dec
jne
mov
pop
adc
test
pop
rcr
jnp
inc
call
inc
or
push
icebp
xchg
sbb
dec
inc
fwait
or
nop
mov
rcl
jl
jne
push
mov
and
sbb
pop
leave
js
lea
add
pop
ins
mov
jl
sbb
fmul
sti
adc
fldcw
add
cmp
call
test
cmovne
mov
mov
sub
cmp
jb
cmp
jae
fcomip
push
(bad)
(bad)
cmp
jb
jmp
mov
sub
shr
mov
fsub
mov
and
add
ja
test
add
mov
inc
aas
push
lock
lea
mov
sar
lea
or
sub
add
sar
lea
cld
aaa
push
(bad)
add
or
pop
(bad)
fdivr
aaa
mov
adc
mov
mov
cmp
ja
inc
call
(bad)
xor
xlat
mov
lea
push
push
call
add
sub
and
lock
je
cmp
stos
mov
test
cs
dec
mov
mov
jmp
lea
inc
add
aam
(bad)
popf
inc
js
add
clc
lea
sub
add
sbb
loope
mov
mov
sbb
je
mov
xor
push
lock
mov
inc
add
ins
add
mov
xchg
stos
add
xchg
sbb
pop
inc
out
cmp
cmp
jnp
or
mov
jno
movs
xor
data16
cmp
outs
neg
and
dec
adc
cmp
retf
jle
jge
jle
sbb
add
test
xchg
or
pop
cdq
js
sub
sbb
out
into
icebp
xchg
setb
shr
jmp
cmp
ja
add
ins
(bad)
mov
jb
lea
dec
inc
or
jle
mov
cli
ja
rcl
call
sbb
add
push
push
push
add
daa
jo
xchg
mov
mov
add
or
pop
pop
call
or
les
bound
mov
arpl
adc
loopne
mov
add
inc
loopne
shl
inc
adc
and
aaa
push
add
int
cld
das
movs
mov
add
xor
adc
fmul
and
test
movs
dec
lods
mov
jmp
ror
mov
mov
jmp
stos
mov
sub
scas
sub
lea
jb
je
sti
in
push
jno
mov
ror
jb
add
xor
(bad)
add
and
adc
pop
pop
rcl
fcom
jge
mov
pop
xor
push
daa
mov
cmp
xor
test
lock
in
or
push
fmul
or
mov
inc
mov
xor
mov
mov
retf
xor
dec
in
adc
dec
inc
lea
push
xchg
stos
jbe
mov
dec
and
xor
dec
jne
(bad)
xor
mov
(bad)
adc
push
dec
mov
call
sub
add
in
mov
mov
mov
movs
out
mov
lea
sub
pushf
mov
pop
jmp
fwait
add
or
cwde
add
inc
lds
sub
pusha
jmp
fbld
outs
sbb
(bad)
movups
sbb
pusha
clc
push
mov
sbb
bound
push
dec
aam
cld
dec
mov
mov
test
je
push
add
or
mov
adc
leave
push
push
sbb
sbb
mov
jmp
and
lods
ret
iret
push
jg
rol
lea
iret
mov
mov
pop
or
inc
hlt
mov
jmp
push
push
push
mov
pop
test
aam
lods
or
stos
add
sub
bound
jb
sbb
sbb
inc
xor
xchg
adc
pop
pmaxub
sbb
out
(bad)
jg
adc
or
mov
pop
ret
mov
or
je
dec
xchg
je
dec
jne
adc
sbb
mov
ror
inc
or
pop
add
je
ja
add
pushf
mov
mov
les
je
cmp
je
es
dec
jne
pop
pop
mov
add
leave
test
or
jle
sbb
adc
jne
jae
add
sub
sub
fistp
rcr
jle
add
mov
push
iret
sub
ss
add
mov
cmp
jne
xlat
push
addr16
test
cmc
mov
xchg
add
mov
xchg
jmp
add
popf
(bad)
adc
leave
add
dec
push
dec
cdq
sub
xlat
pop
inc
xchg
add
jbe
mov
std
cmc
add
mov
inc
lock
(bad)
mov
mov
add
mov
dec
adc
test
into
(bad)
div
div
pushf
sbb
repnz
sbb
cwde
dec
sbb
scas
je
add
inc
jo
push
in
or
cmp
and
mov
and
aad
xor
mov
pop
mov
sub
push
push
push
inc
sub
jmp
and
or
mov
jecxz
push
and
cmp
inc
inc
jne
int
sub
jg
pusha
cmp
call
mov
hlt
(bad)
dec
mov
cmp
jae
mov
mov
test
jne
imul
out
loopne
add
xchg
js
jae
mov
sbb
pop
sbb
mov
inc
fld
ret
xlat
lea
add
fisttp
push
test
out
mov
sub
fistp
call
sbb
xchg
das
aas
cmp
bound
xchg
xchg
push
add
mov
sar
jl
iret
or
xchg
je
mov
lea
cmp
jne
mov
cmp
dec
cmp
ror
mov
mov
mov
pop
cmp
je
push
lock
push
shl
adc
adc
adc
hlt
mov
call
je
in
dec
outs
lea
cld
jmp
pop
mov
ins
test
(bad)
aas
add
jns
mov
lea
mov
(bad)
mov
mov
into
ror
push
loopne
call
lea
push
adc
cwde
cmp
and
or
out
icebp
or
xchg
sub
pop
ror
and
cmp
xor
push
lea
push
outs
loopne
mov
mov
dec
adc
mov
or
out
mov
imul
mov
ins
mov
jo
pop
sbb
call
jecxz
dec
retf
jo
out
dec
sub
lea
popa
add
mov
loopne
mov
mov
popf
adc
mov
inc
sbb
jb
stos
dec
mov
inc
fmul
or
call
and
mov
cmps
and
jne
cmp
push
mov
push
pop
jmp
mov
push
sub
cmps
call
add
mov
daa
xchg
dec
pop
lahf
jecxz
adc
mov
adc
shl
add
retf
addr16
xor
ret
scas
push
push
add
ror
mov
push
outs
sub
push
pop
sub
mov
inc
jne
mov
aaa
les
clc
adc
jge
push
jp
lods
push
mov
out
test
sub
fist
or
push
clc
cmp
dec
dec
hlt
cmovae
push
mov
fild
cmp
dec
std
and
push
cwde
mov
arpl
xchg
clc
xor
adc
pop
cld
mov
aam
into
std
sbb
mov
jmp
adc
mov
div
mov
adc
lock
loopne
pop
or
pop
add
push
mov
cmp
shr
or
cmp
stos
mov
push
add
adc
jne
xor
rcl
push
mov
cmp
(bad)
inc
popa
add
scas
inc
hlt
test
aas
lock
mov
mov
nop
xchg
lea
mov
lea
cmovae
aaa
jno
jge
lea
jne
push
test
push
push
lea
push
(bad)
(bad)
jg
rcl
sub
je
sub
je
xor
jmp
mov
pop
cli
inc
add
in
mov
cmovae
sub
je
inc
test
fdiv
prefetcht1
push
outs
loopne
mov
les
cmp
jne
ret
add
loope
cmp
in
push
ror
mov
pop
pop
leave
or
mov
mov
lock
popa
sub
and
add
cmp
mov
push
jge
mov
aaa
lods
je
cmp
jne
ins
fsubr
fdiv
hlt
je
(bad)
mov
test
inc
ret
pop
jne
das
jmp
mov
mov
ss
adc
pop
add
push
add
aaa
pop
sub
sub
pop
jg
or
sahf
jg
or
lea
cs
(bad)
dec
rol
inc
add
add
inc
or
inc
adc
jmp
scas
(bad)
inc
mov
lea
mov
lea
mov
aas
mov
add
adc
out
adc
inc
or
sbb
mov
test
je
lea
sbb
mov
jo
(bad)
adc
and
push
push
xchg
pop
push
dec
add
or
add
or
out
sbb
inc
xchg
xor
sub
inc
mov
or
dec
adc
add
test
mov
test
and
rcl
xchg
or
iret
stos
pusha
cmp
mov
add
aaa
mov
mov
mov
or
inc
cmp
jle
movzx
jmp
xor
leave
and
lods
inc
or
add
dec
in
jbe
fdiv
cmp
fsub
jne
stos
cmp
inc
cmp
enter
aam
jg
sub
rol
popa
lea
sub
push
es
rol
sar
ror
and
lea
jne
in
je
in
pusha
pop
jne
mov
add
lahf
add
mov
or
pop
adc
xor
and
jne
fs
(bad)
je
push
jmp
push
jl
sbb
push
mov
sbb
or
enter
adc
adc
inc
push
mov
cld
mov
pop
ret
int3
push
mov
popa
ret
call
cmp
jno
mov
sub
jns
adc
jg
mov
xor
jp
lea
mov
cmp
(bad)
(bad)
inc
je
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
add
pop
add
fcomp
mov
sbb
or
(bad)
pop
sbb
push
jne
xor
jmp
ror
fdivr
jbe
xor
mov
test
shr
cmovne
(bad)
fld
adc
dec
add
adc
mov
lea
std
lea
mov
adc
inc
xor
inc
inc
mov
mov
inc
and
mov
or
adc
jle
mov
pop
lods
mov
or
mov
or
std
and
or
out
sub
mov
dec
mov
or
aaa
(bad)
inc
mov
sbb
into
add
sbb
inc
mov
cld
or
push
mov
sbb
sub
loopne
xor
pop
adc
jecxz
jo
dec
scas
pop
mov
cmp
cmovb
pusha
pop
scas
dec
dec
adc
inc
or
dec
and
mov
dec
out
sbb
pop
les
cmp
push
push
aas
icebp
sub
lods
(bad)
pop
and
iret
add
mov
call
test
je
pop
xor
into
mov
call
pop
dec
add
jg
add
fwait
jne
push
adc
stc
cdq
gs
adc
sbb
add
pushf
mov
add
mov
inc
adc
xchg
push
mov
test
mov
mov
xchg
into
pop
pop
pop
add
fs
pop
mov
pop
gs
rol
wrmsr
xor
enter
adc
stc
push
cli
ret
mov
(bad)
xchg
xor
push
mov
lea
cmp
jae
lea
mov
mov
xchg
sbb
jecxz
mov
jnp
mov
cmp
dec
and
sbb
inc
out
push
(bad)
(bad)
cmp
jne
mov
mov
mov
sub
mov
inc
sub
adc
aad
sub
(bad)
mov
les
or
cmp
cmovne
pop
pop
mov
ret
outs
mov
nop
cmp
fstp
and
or
scas
faddp
aas
mov
fmul
fmul
lea
cli
xchg
call
add
push
push
xor
dec
loope
pop
push
mov
or
in
push
js
or
clc
add
mov
dec
in
call
nop
xchg
xchg
mov
cmovae
call
sar
test
cmp
jne
test
jne
jb
(bad)
inc
xor
loope
and
fsubr
pop
or
and
or
xor
outs
stos
jg
retf
cmp
or
mov
mov
jmp
or
cwde
add
and
add
icebp
out
(bad)
mov
shl
je
mov
cmp
mov
and
inc
(bad)
cmp
jne
add
fucomip
int
add
pop
dec
xor
sbb
inc
ret
(bad)
out
sbb
cmp
je
cmp
jne
pop
outs
inc
lock
movzx
inc
fbstp
and
(bad)
fst
lea
cmp
je
mov
cmp
sti
add
dec
pop
mov
pop
or
inc
mov
mov
sub
(bad)
stc
xor
mov
mov
or
mov
ret
movs
fwait
jle
push
out
cmp
mov
inc
(bad)
dec
les
xchg
dec
cmp
mov
mov
call
add
adc
ja
call
cmp
jne
cmp
je
mov
add
das
arpl
std
enter
inc
or
inc
adc
jmp
dec
inc
sub
inc
xchg
sub
push
mov
lock
aas
test
icebp
push
xor
sbb
adc
bound
pop
push
mov
sbb
arpl
push
mov
or
test
shl
adc
ret
mov
jne
nop
je
push
push
push
push
sbb
rcl
push
mov
or
mov
aad
cmps
adc
or
pusha
mul
cdq
data16
add
loopne
push
aas
adc
dec
pop
dec
push
jl
loop
dec
adc
adc
sub
out
rol
pop
clc
inc
or
add
add
push
mov
mov
pop
das
test
sub
mov
fcom
inc
clc
movs
push
clc
out
inc
cld
je
jb
adc
ja
enter
pop
fldcw
fs
je
push
hlt
add
hlt
cmp
mov
inc
pop
into
mov
dec
aam
mov
push
and
cld
js
and
pop
mov
and
loope
push
dec
imul
cmp
jne
(bad)
cli
dec
cmp
or
jne
nop
xor
push
push
push
shl
jl
sahf
mov
retf
stos
(bad)
push
jo
adc
or
xor
pop
call
push
enter
sbb
cmp
or
(bad)
cli
add
lea
fist
or
ret
add
or
pop
add
push
sbb
pop
gs
cmps
xor
scas
add
rcr
(bad)
jle
mov
jp
mov
adc
(bad)
stc
mov
push
push
rcl
inc
jo
and
stos
sar
ret
mov
imul
pop
push
(bad)
(bad)
aas
data16
pop
mov
mov
lea
cmp
jae
lea
mov
mov
add
add
inc
xchg
and
sbb
xor
add
xchg
ds
mov
arpl
add
aam
mov
in
mov
push
and
sbb
or
sbb
add
push
cwde
add
xor
mov
xor
and
cmp
jo
out
jecxz
fdiv
xchg
add
sbb
sbb
push
push
fcom
in
jb
inc
out
iret
jne
push
imul
sahf
pop
sar
jecxz
cmp
addr16
mov
jne
sub
sub
add
sub
push
test
into
or
ss
and
mov
xor
adc
enter
jmp
lock
test
jle
iret
push
movsx
aam
add
dec
push
pop
rcr
push
mov
xor
loopne
cmp
and
sar
mov
xor
push
sbb
arpl
(bad)
push
pop
pop
push
mov
adc
rcl
and
mov
push
sti
(bad)
push
jge
mov
movzx
xor
imul
movzx
xor
add
add
ud2
add
mov
xor
imul
or
stos
clc
and
or
sbb
mov
mov
or
scas
add
dec
pop
mov
mov
add
push
adc
inc
add
dec
or
add
pushf
scas
sbb
dec
and
shrd
cli
pop
mov
test
ja
in
cmp
pop
mov
or
add
xchg
das
inc
or
or
or
add
and
dec
cld
ss
push
mov
push
test
jne
mov
mov
mov
lea
test
mov
lea
adc
mov
mov
mov
hlt
jg
cmc
add
call
mov
mov
call
inc
adc
ret
add
xchg
or
jg
sub
or
call
push
push
daa
pop
dec
lods
mov
(bad)
cmp
jne
jg
pushf
push
gs
mov
xor
add
pop
xlat
loopne
into
mov
aas
nop
test
fistp
ror
or
sbb
lock
sub
sahf
mov
jno
or
mov
adc
adc
mov
les
ret
mov
call
imul
or
or
cmp
loopne
and
inc
or
jne
sbb
ret
mov
add
aaa
mov
cmp
out
adc
inc
lea
mov
push
cwde
out
mov
cmp
je
mov
mov
mov
inc
adc
rcr
add
in
mov
enter
fadd
sbb
cli
(bad)
sub
add
jl
div
stos
sbb
jl
push
out
pop
jmp
lea
add
adc
clc
test
jne
jae
clc
std
mov
je
cmp
lea
add
stos
test
test
aas
add
lea
ins
push
mov
cmp
sub
adc
or
in
iret
or
jne
adc
ins
mov
and
add
sbb
xor
pop
add
ret
pop
pop
or
add
daa
fsubr
call
dec
push
push
idiv
repz
push
or
lea
call
jae
je
cmp
jo
popa
test
push
int3
adc
dec
mov
adc
fmul
jl
pop
ret
xchg
mov
pop
pop
add
xor
add
fnstsw
(bad)
mov
push
lea
push
mov
ud0
outs
js
mov
pop
add
xor
fcom
call
mov
xor
and
adc
xor
call
loope
inc
xor
mov
rcl
arpl
pop
lea
sub
push
dec
xor
imul
cmp
je
addr16
sub
mov
fcomp
in
loopne
cmp
cmp
mov
icebp
inc
adc
icebp
jmp
dec
or
add
pushf
mov
lea
push
lea
adc
and
sub
jl
mov
sbb
mov
mul
mov
jmp
daa
mov
dec
lea
or
adc
lea
dec
jmp
dec
daa
sub
mov
push
lea
loope
jae
js
cmp
not
inc
mov
jg
xchg
mov
and
(bad)
fst
add
add
das
cmp
je
mov
adc
xchg
pop
sbb
cmp
cmp
pop
pop
pop
aaa
jmp
and
inc
inc
test
or
mov
mov
lahf
push
mov
stos
(bad)
jmp
dec
lahf
mov
mov
add
and
jne
cmp
mov
or
pop
sahf
jae
mov
mov
(bad)
pop
adc
add
jle
imul
cmps
mov
(bad)
and
inc
sub
mov
adc
mov
add
xchg
pushf
call
int3
int3
lock
jg
or
lock
sub
add
or
or
add
xchg
mov
sub
or
cmp
inc
jo
sub
sbb
dec
add
mov
(bad)
mov
fisttp
cmp
xchg
add
add
js
pop
adc
inc
mov
push
lea
sbb
jl
and
inc
pushf
jge
and
and
push
push
data16
inc
rcr
mov
inc
sbb
xchg
or
pop
mov
les
mov
jg
mov
pushf
cmp
and
fcomp
inc
lods
xchg
into
data16
pusha
dec
add
add
add
or
push
shr
cwde
nop
dec
cld
dec
lahf
push
neg
or
mov
push
adc
push
inc
add
mov
jbe
add
test
adc
pop
aas
and
or
push
mov
dec
inc
xor
hlt
mov
scas
push
add
add
jne
push
inc
ret
or
adc
or
mov
push
out
pop
jne
cmp
jb
add
into
cmp
stos
test
dec
in
jb
das
xor
mov
fcom
jl
cmp
jae
jmp
add
push
push
sub
pop
add
pushf
or
inc
ins
mov
daa
mov
(bad)
call
add
or
lea
daa
imul
fistp
pushf
(bad)
jne
ror
or
inc
loope
or
retf
es
mov
and
ins
not
jecxz
push
push
xor
add
push
int3
or
add
ret
add
jg
mov
and
mov
loope
adc
sbb
pop
pop
cld
daa
xchg
ror
out
addr16
mov
aam
in
lods
sbb
ret
imul
add
sbb
out
mov
or
in
push
push
jne
xor
xor
inc
jle
mov
mov
or
pcmpgtw
test
call
xor
pop
fnstenv
sbb
dec
add
push
mov
mov
sub
imul
mov
or
dec
add
sar
mov
mov
inc
mov
xor
cmp
cmovb
and
or
mov
inc
mov
lock
xor
mov
test
je
cmp
aas
fst
lea
add
mov
nop
and
inc
push
rcr
jbe
push
xchg
test
out
into
les
mov
mov
sub
retf
sti
cwde
lods
imul
add
cmps
retf
jg
icebp
mov
sub
jne
je
mov
ror
push
jne
fadd
fild
nop
mov
pop
lods
and
(bad)
hlt
mov
add
or
sub
push
es
cmp
fcom
bound
(bad)
stc
cmp
add
repz
add
mov
lea
into
jae
das
cmp
fsubr
pop
and
jmp
rcr
or
cmp
jb
lea
outs
add
or
add
(bad)
fucomip
pop
ret
shr
and
iret
iret
or
mov
jg
mov
cmp
jae
mov
cmp
ja
sub
pop
add
jl
inc
and
jne
dec
clc
add
mov
lea
iret
lea
jmp
push
ror
inc
add
or
fs
mov
add
sbb
add
cdq
cmp
add
rcl
mov
add
add
scas
mov
jl
inc
or
mov
xor
sbb
mov
std
nop
or
mov
xchg
push
mov
add
or
adc
pusha
xchg
pop
lea
sahf
pop
aad
sub
mov
lea
lds
add
jne
or
mov
or
adc
jmp
arpl
or
lea
xchg
xchg
cmps
(bad)
xchg
mov
loopne
movs
push
dec
jnp
lahf
push
inc
mov
dec
pop
mov
mov
jmp
inc
xor
fimul
lea
sbb
(bad)
cs
outs
xlat
xchg
mov
mov
aad
std
scas
add
or
loopne
lea
inc
in
cmc
in
jmp
sbb
loope
push
add
jb
push
loope
pop
scas
sub
xchg
add
adc
sub
and
cmp
add
das
cmp
add
jle
mov
add
mov
(bad)
cli
scas
test
push
lea
mov
cmp
movs
or
and
dec
add
sbb
add
mov
add
outs
pop
cld
shr
and
rcr
xor
pusha
mov
icebp
mov
pop
pop
adc
lds
add
add
outs
adc
mov
or
add
sub
je
push
inc
mov
lea
dec
and
push
xor
push
xchg
dec
fild
aas
dec
add
mov
lahf
jle
adc
arpl
or
xchg
pop
popa
pop
cmp
imul
mov
adc
dec
and
add
and
mov
add
stos
jmp
lea
enter
mov
mov
inc
add
shl
jg
rol
aad
jb
cmp
lea
je
ja
int3
jl
icebp
or
jo
fbld
push
enter
(bad)
call
sbb
adc
lahf
mov
push
mov
sbb
push
push
or
test
jne
pavgb
div
xchg
jge
jne
shl
mov
pop
and
push
loope
cmp
je
inc
mov
jne
mov
sub
cmp
jae
mov
inc
je
mov
lahf
and
dec
enter
sbb
mov
push
icebp
sbb
inc
mov
pop
adc
fbstp
mov
mov
inc
xor
jmp
jg
icebp
and
aas
test
lea
mov
mov
and
stc
mov
mov
pusha
neg
push
add
je
bound
pushf
ins
pop
mov
mov
(bad)
aas
pop
adc
sbb
(bad)
jmp
lea
mov
add
outs
js
mov
scas
mov
push
mov
cmp
add
sahf
mov
add
je
cmp
add
or
in
or
push
or
ret
out
ins
test
(bad)
mov
add
sahf
mov
mov
jl
adc
dec
adc
add
in
and
jmp
out
ror
push
push
push
push
inc
dec
add
mov
call
shl
push
push
lea
ds
sub
or
idiv
hlt
stos
loop
pop
clc
sbb
call
dec
ficom
mov
lea
or
and
je
pop
je
jne
adc
jns
mov
cli
push
add
bound
aam
sbb
inc
and
rep
stos
and
mov
loop
jg
mov
jl
loopne
dec
and
add
mov
rcl
add
cmp
adc
aam
jg
out
and
pop
test
je
mov
dec
and
arpl
mov
lahf
cmp
or
(bad)
adc
in
fild
or
xor
je
ds
aam
imul
inc
or
inc
push
and
aaa
cld
stos
cli
push
and
call
add
jg
cmp
les
into
imul
sar
jp
cli
mov
cmp
jne
scas
cmp
cmp
add
mov
sar
scas
shr
mov
lea
push
lea
pop
add
data16
pcmpeqb
inc
fadd
jmp
sete
mov
sbb
dec
pop
push
dec
lahf
mov
lea
lods
push
fnstsw
add
add
mov
and
push
call
sub
aad
pop
add
push
inc
enter
(bad)
jg
add
inc
add
jo
cmp
je
mov
dec
sbb
push
lea
sbb
sbb
rcl
sti
sub
das
cld
push
addr16
sub
in
jg
idiv
add
sbb
adc
jb
sbb
push
enter
test
or
in
ins
jne
mov
dec
nop
pop
jne
mov
xchg
add
jle
push
mov
scas
fsub
pop
test
xchg
imul
jle
dec
add
push
xchg
js
push
jbe
xchg
jmp
push
push
sar
xor
jae
mov
cmp
jl
pop
adc
mov
lea
outs
xchg
nop
pop
xor
mov
iret
jne
outs
and
or
(bad)
ins
mov
cmp
ja
jb
pusha
and
inc
or
jns
xor
call
ror
movsx
mov
push
mov
cli
inc
scas
add
or
out
data16
rcr
or
pop
aas
or
stc
and
js
dec
jl
enter
mov
sbb
push
pusha
adc
iret
mov
rdpmc
ror
sbb
add
push
(bad)
int
push
inc
jge
outs
add
lods
mov
add
cs
cmps
fsub
cld
lea
adc
xchg
cmp
ds
cmp
jg
in
push
and
fdivr
or
pop
dec
adc
jne
(bad)
push
add
lea
push
push
push
inc
xor
clc
and
jne
inc
out
adc
(bad)
out
push
jae
and
popf
jnp
adc
mov
adc
adc
sub
mov
call
into
loopne
ss
cld
jg
dec
popa
sub
(bad)
in
adc
cmp
add
jecxz
inc
gs
cmp
mov
test
add
je
and
adc
xor
jae
mov
(bad)
int3
out
test
loop
xor
xlat
cmp
clc
mov
daa
push
shl
dec
mov
adc
and
or
fistp
retf
test
jbe
movs
sbb
dec
mov
inc
sbb
add
jae
loopne
mov
ror
pop
ror
pop
mov
enter
pop
sub
mov
adc
mov
xor
loop
lods
jb
popa
jo
aaa
pop
push
push
mov
xor
loopne
xor
pop
add
or
push
and
sub
(bad)
pop
pop
sub
ret
add
add
loope
inc
and
(bad)
dec
or
or
inc
adc
lods
cmp
ja
test
inc
sbb
or
mov
and
push
add
ins
cmp
xor
cmp
nop
add
add
mov
xor
iret
mov
push
fadd
add
add
add
or
cld
sbb
movsd
add
dec
scas
or
adc
jbe
xlat
mov
xor
or
cmps
dec
sub
(bad)
jle
xorps
push
pop
and
adc
xchg
or
gs
mov
add
lock
fucom
and
inc
add
cmp
rcr
(bad)
int3
xor
bound
pop
inc
or
push
lea
add
sbb
fist
push
push
lds
rcr
inc
and
lahf
test
xchg
int3
aam
xchg
dec
das
dec
fcom
or
dec
sub
mul
mul
and
inc
lock
sbb
jns
shl
(bad)
or
das
or
pop
out
dec
add
sahf
mov
or
push
sub
inc
icebp
add
mov
(bad)
daa
imul
in
inc
push
xchg
push
ins
mov
ja
je
sbb
push
mov
mov
mov
adc
push
mov
aad
cmps
or
jmp
adc
push
out
inc
fwait
inc
pop
popa
sub
imul
push
add
sbb
xchg
lods
stc
adc
sbb
cmp
mov
mov
aaa
outs
pop
shl
mov
jle
data16
add
mov
push
das
sbb
mov
scas
push
lea
inc
add
sti
and
pop
les
(bad)
out
sbb
inc
aas
cli
inc
cld
jg
push
add
imul
and
add
pop
push
push
mov
retf
adc
icebp
cdq
or
in
dec
or
cmps
pushf
ret
sbb
cld
push
nop
cmp
rcr
cwde
add
movq
out
add
jae
movq
cwde
mov
ror
push
xchg
jmp
push
or
ret
jmp
adc
bound
mov
les
lods
ret
or
movs
xchg
int
sbb
int3
push
or
out
out
inc
data16
pop
imul
and
call
nop
fst
int3
ins
dec
xor
cs
and
ja
int3
mov
push
push
lea
mov
cmp
je
mov
mov
hlt
xor
sub
adc
pop
and
and
adc
aaa
jne
mov
sbb
inc
cmp
xor
ficom
aas
and
xchg
and
cmp
or
pusha
xor
adc
pusha
cwde
lock
push
data16
adc
dec
cmp
or
stos
or
dec
mov
inc
fnstcw
or
mov
outs
add
jl
cld
jmp
xor
pushf
mov
leave
or
pop
adc
jg
push
mov
lea
pop
cld
mov
mov
pop
sbb
inc
pop
xchg
inc
adc
inc
clc
enter
je
inc
int3
lds
mov
or
add
cwde
or
cld
push
add
inc
add
je
dec
jne
loope
mov
or
test
je
push
jecxz
xchg
push
and
aaa
ins
bound
fs
ins
inc
or
add
add
ffreep
test
je
mov
daa
xlat
dec
or
pop
mov
pop
cdq
leave
rcr
sbb
sbb
and
adc
dec
sub
loopne
xchg
stc
xor
push
mov
mov
shr
and
clc
(bad)
cmp
pop
or
adc
or
or
aas
or
adc
(bad)
call
add
lods
xor
aam
dec
cmp
ja
mov
sub
sar
cmp
iret
and
pop
inc
or
dec
rol
cwde
mov
mov
jmp
and
dec
jge
or
test
or
add
test
add
inc
add
cmp
(bad)
inc
clc
pop
and
push
push
dec
xchg
mov
mov
pusha
push
push
push
lock
pop
aad
mov
pusha
pusha
(bad)
cmp
pop
push
push
inc
ret
adc
inc
scas
adc
stos
and
imul
addr16
shr
sub
mov
push
mov
fldenv
mov
cmp
je
xchg
jle
jg
ror
inc
mov
mov
cmp
ret
pop
mov
or
test
adc
jg
jg
adc
adc
add
add
call
in
(bad)
mov
or
inc
cld
cmovb
test
je
sub
std
inc
inc
xlat
jb
jg
dec
rol
add
mov
out
cmp
add
mov
out
inc
mov
out
inc
xor
inc
icebp
xchg
in
inc
clc
cmp
jb
div
sar
clc
push
test
call
add
adc
xchg
add
mov
pop
ins
mov
jne
out
in
pop
and
push
mov
mov
or
inc
lds
xor
inc
aas
xchg
test
jne
cmp
clc
mov
out
sbb
jne
or
jp
nop
jp
sbb
inc
sub
xor
scas
inc
dec
scas
adc
(bad)
cmp
add
cmp
add
push
cld
fild
dec
je
dec
je
dec
jne
mov
push
push
mov
or
je
mov
lea
push
mov
call
adc
adc
cs
in
lahf
test
jnp
cwde
test
cmp
push
xor
fcomp
push
cmp
clc
cmp
adc
jl
rcl
cmp
jmp
daa
or
push
jmp
adc
inc
push
fadd
mov
mov
imul
cmp
(bad)
and
push
lds
or
cmp
je
mov
push
cmp
mov
add
jae
jne
add
lock
and
or
add
outs
sbb
push
rcr
sbb
sbb
je
xor
or
int3
push
push
aam
adc
jne
sahf
mov
inc
mov
aas
push
inc
jle
cmp
lea
mov
(bad)
call
mov
fmul
and
inc
inc
int3
cmp
cmovb
push
imul
jb
pop
addr16
mov
in
mov
lds
inc
xor
lods
and
mov
pop
pop
ins
ror
retf
add
and
retf
mov
add
xchg
out
sub
and
mov
loop
sub
add
adc
mov
std
(bad)
jg
mov
sbb
inc
mov
add
mov
pop
lods
mov
sub
or
push
or
clc
inc
les
adc
les
(bad)
popa
mov
inc
mov
mov
in
dec
push
add
sbb
inc
mov
add
loopne
outs
sub
std
lea
call
shl
scas
sub
add
cmp
adc
mov
xchg
pop
adc
aas
cmp
mov
aas
sub
outs
out
push
push
call
dec
(bad)
push
jb
cmp
cmp
mov
lea
jmp
mov
mov
mov
inc
mov
add
inc
or
inc
sub
push
mov
mov
push
aad
in
xor
test
(bad)
sub
pop
jo
fild
test
jne
mov
inc
mov
push
inc
in
sub
out
clc
mov
inc
pushf
stos
mov
dec
jg
dec
lds
imul
mov
mov
es
xchg
xor
xor
mov
sbb
or
push
or
enter
jb
cli
mov
jmp
ins
ins
dec
and
ja
or
aam
inc
enter
or
add
xor
jmp
test
add
xor
xchg
push
inc
mov
or
and
std
push
loopne
sub
jns
add
mov
mov
xor
pushf
push
xchg
jecxz
mov
out
mov
lock
add
out
or
push
cmp
jne
movd
repz
add
sti
fstp
cmp
pop
clc
add
ror
add
xor
jne
cmp
jg
xor
inc
mov
aas
arpl
add
sub
cmps
rcl
mov
dec
lahf
xor
imul
iret
dec
adc
lea
sub
mov
aam
sub
outs
cli
push
ds
cmp
clc
jle
div
push
xchg
data16
adc
jmp
into
jo
add
push
pop
xchg
mov
rol
lahf
push
push
lea
mov
push
xchg
push
push
inc
add
arpl
scas
and
test
jne
sbb
jae
loopne
add
push
lock
add
dec
jmp
dec
je
mov
out
jge
sub
mov
mov
or
jb
pusha
into
lds
sub
add
bound
adc
rol
mov
inc
loopne
scas
mov
ret
pop
stc
mov
mov
pop
pop
inc
add
sbb
pop
rcl
push
ror
je
mov
frstor
ret
ret
test
je
cmp
add
adc
mov
or
hlt
mov
sbb
lea
push
lds
mov
js
call
cmp
inc
xchg
and
cld
push
es
outs
pop
sub
adc
dec
dec
cld
sbb
shl
dec
adc
ror
sub
and
dec
sbb
enter
mov
sub
mov
mov
mov
sti
adc
mov
lea
les
inc
pop
rol
push
mov
bound
push
xchg
add
mov
jo
je
and
lds
stc
add
ins
int3
push
push
mov
mov
mov
mov
call
mov
pop
sub
push
sub
add
dec
pop
push
pop
test
inc
or
inc
or
clc
add
clc
pop
inc
jbe
mov
mov
add
mov
mov
mov
mov
lock
mov
sub
icebp
call
inc
or
lea
sub
and
push
pop
shr
mov
inc
or
pop
adc
xor
in
cmps
fcomip
inc
mov
lea
push
push
mov
mov
jns
push
mov
mov
add
mov
in
add
push
test
lods
push
in
rol
ret
or
cmps
or
adc
dec
and
inc
jge
cmp
(bad)
sbb
push
inc
pop
push
push
out
fs
add
sbb
mov
ins
inc
mov
call
push
fsubr
mov
pop
mov
cdq
and
or
push
cmp
add
inc
cwde
add
or
cmp
aas
lea
push
or
adc
aaa
mov
fild
mov
(bad)
adc
jae
mov
dec
dec
js
mov
jmp
mov
cmps
jne
mov
cmp
jne
ss
adc
sbb
mov
mov
in
mov
add
add
aad
inc
add
in
jg
adc
mov
push
mov
mov
in
fcomp
fdivr
adc
fldcw
inc
sbb
add
mov
jecxz
or
adc
mov
xor
arpl
adc
sub
mov
mov
or
lahf
mov
cmp
je
retf
add
dec
(bad)
adc
inc
and
(bad)
push
pushf
call
jmp
mov
add
not
fwait
jle
mov
aad
add
pop
ret
icebp
jbe
sbb
mov
dec
sub
clc
test
(bad)
(bad)
push
scas
retf
lods
mov
add
or
(bad)
mov
or
jae
stos
xor
add
inc
jo
in
xor
nop
aad
jg
and
jecxz
xor
push
push
mov
xor
clc
cmp
jne
xor
add
lea
sub
mov
add
lods
jge
jb
sub
cwde
or
pop
dec
jbe
push
xchg
outs
int3
mov
fisttp
call
aaa
and
mov
inc
push
lea
vpcomw
xor
cs
inc
lock
call
inc
cdq
mov
les
mov
test
add
pop
sbb
pop
add
cdq
push
aaa
mov
ja
inc
or
cmp
sub
jl
xor
loop
mov
les
js
xchg
push
mov
xor
add
das
push
push
fs
pop
push
(bad)
ror
add
mov
add
ret
mov
add
adc
pop
xor
mov
mov
dec
add
adc
aaa
fadd
add
(bad)
es
or
or
ds
jbe
sbb
iret
jp
xor
retf
js
iret
lds
mov
push
enter
iret
push
fsub
rcl
nop
pop
sbb
adc
pop
add
cs
pop
das
call
in
outs
or
and
daa
test
fmul
push
outs
sbb
jno
shl
jg
pop
mov
std
pop
rcl
ror
push
aad
aas
aam
push
mov
mov
pop
loopne
or
dec
adc
rol
inc
loopne
sub
sub
inc
cmp
xchg
or
jle
pusha
mov
lea
xlat
push
jne
inc
or
inc
pop
cmp
sub
dec
push
icebp
mov
(bad)
dec
push
lods
aas
push
xor
iret
mov
lock
cmp
jne
mov
push
mov
pusha
mov
dec
mov
mov
jbe
jle
mov
dec
xchg
and
aaa
dec
js
add
mov
push
add
jbe
scas
fisub
add
mov
inc
mov
sub
add
push
cmp
mov
mov
add
push
cmp
add
or
inc
cdq
loopne
sbb
sahf
add
jb
aam
adc
push
rol
adc
je
add
shl
arpl
iret
sub
iret
add
push
mov
adc
add
pop
adc
iret
add
adc
add
ss
adc
out
ins
hlt
sbb
ins
adc
pusha
add
mov
rol
mov
add
push
sbb
push
mov
es
cmc
and
push
into
add
sbb
loop
jnp
sbb
nop
mov
pop
ret
xor
shl
xor
shr
mov
or
dec
or
xchg
or
xor
scas
clc
adc
in
cmp
and
inc
clc
pusha
shl
in
ret
inc
into
(bad)
(bad)
ds
rcl
jne
lea
jge
movups
test
or
test
mov
push
into
add
or
add
adc
and
(bad)
cmp
mov
enter
clc
test
loope
add
jne
test
adc
ret
push
push
push
inc
inc
sbb
icebp
xor
(bad)
(bad)
pop
dec
mov
mov
lea
xchg
pop
sbb
cmp
add
and
push
ja
mov
push
lea
(bad)
ja
mov
mov
push
sub
test
in
push
pushf
out
retf
mov
sbb
fsubr
fwait
xor
(bad)
sbb
xor
neg
fld
call
fisttp
or
out
scas
sti
aas
jmp
push
call
or
aaa
xor
push
lds
scas
push
lea
arpl
mov
add
int3
push
xchg
fbstp
mov
add
aam
sti
xchg
add
dec
add
push
cld
mov
clc
push
lea
js
mov
icebp
jmp
adc
clc
push
and
loopne
loope
pop
retf
sbb
mov
cmp
dec
or
sbb
les
mov
pop
aam
mov
jle
into
add
inc
push
lea
dec
inc
frstor
gs
imul
mov
adc
(bad)
ficomp
xor
dec
std
aam
pop
pop
mov
inc
push
xchg
in
mov
jne
push
push
(bad)
jmp
lea
loopne
or
or
or
or
aad
loope
(bad)
lods
pop
jb
push
and
rol
push
adc
je
mov
or
jae
sar
and
mov
(bad)
es
mov
hlt
or
test
add
popa
inc
popa
pop
jns
mov
or
add
push
jecxz
jp
add
inc
add
push
test
mov
aas
jmp
ficom
jge
push
inc
std
pop
mov
and
add
in
and
sar
xlat
ja
push
data16
(bad)
fst
mov
add
inc
add
add
pusha
xchg
add
add
add
daa
jg
push
sar
imul
add
jnp
inc
pusha
mov
inc
test
scas
sub
jg
cmove
xor
cmp
mov
mov
dec
inc
shl
lods
mov
cmps
or
dec
sbb
add
push
mov
ja
sbb
push
inc
mov
cmp
inc
mov
cmp
je
or
inc
ret
add
sar
add
or
retf
sub
push
push
push
arpl
movs
pusha
push
outs
or
add
pop
mov
mov
jns
lea
in
add
inc
aad
jae
xor
mov
sub
or
mov
jl
push
movzx
lea
inc
push
adc
fdiv
outs
fidiv
jae
mov
dec
add
cmp
push
sbb
jmp
(bad)
jp
inc
nop
push
cmp
inc
sub
outs
add
sbb
sbb
lea
fwait
mov
int
pop
push
lea
pop
xor
sub
add
sub
js
rol
push
imul
push
push
sar
adc
cmp
je
fwait
jne
fdivr
inc
mov
pop
mov
pushf
vmread
mov
xchg
mov
or
jo
jp
cld
lods
aam
add
loopne
and
xor
sbb
push
cmp
jb
or
mov
or
cwde
add
gs
jmp
das
ror
adc
ret
shl
add
aaa
and
pop
push
mov
(bad)
push
or
push
push
test
jl
jg
test
jb
test
mov
or
ja
mov
leave
xor
mov
push
test
cmovne
xor
test
pop
sete
or
pop
cmp
ja
iret
inc
lock
jmp
or
mov
jmp
pusha
dec
shl
inc
add
aaa
ds
push
loopne
outs
sbb
loop
lea
mov
in
aas
dec
sbb
inc
or
sbb
add
pop
adc
aas
out
cld
adc
inc
pop
adc
pop
pop
xor
push
cmp
(bad)
or
mov
(bad)
dec
mov
and
test
push
shl
sub
inc
cdq
popa
mov
mov
mov
mov
in
sbb
mov
push
add
mov
gs
dec
iret
and
cli
jae
das
test
xchg
xlat
ret
int3
add
push
std
out
cmp
sbb
xor
ret
mov
out
add
call
retf
sti
ret
add
mov
push
inc
loope
cmp
je
inc
pop
jne
shr
adc
jne
add
jle
jmp
test
setne
test
je
adc
mov
(bad)
push
sub
add
add
mov
jbe
(bad)
jmp
pop
jae
cmc
push
iret
add
inc
or
or
adc
aas
inc
adc
gs
mov
clc
add
adc
and
std
lock
push
out
mov
dec
or
adc
cmp
fwait
sub
push
mov
stos
out
sbb
dec
add
xchg
shl
cld
cmp
rcr
dec
push
mov
mov
ret
ret
mov
lea
cmp
add
mov
aaa
jae
push
inc
jnp
add
fstp
jne
sub
inc
leave
adc
jo
adc
mov
sahf
xor
jb
add
push
adc
jae
push
dec
sar
pop
adc
inc
mov
inc
(bad)
mov
test
je
push
add
or
in
inc
loopne
xor
mov
ja
ror
add
mov
cld
cdq
hlt
xchg
push
dec
jae
sar
pop
mov
pusha
outs
arpl
inc
sub
je
add
or
jp
dec
mov
inc
add
ja
scas
pop
inc
fmul
jle
fcom
mov
mov
test
jne
mov
mov
pop
sbb
push
sbb
aas
push
mov
test
inc
in
shl
add
imul
sbb
data16
mov
inc
xor
enter
js
shl
imul
mov
cmp
inc
xchg
mov
push
sub
cld
jp
ins
sbb
inc
adc
js
and
out
jge
jne
inc
xchg
lock
inc
adc
dec
push
nop
add
or
ins
and
dec
mov
jne
out
mov
mov
cmp
fisttp
rol
sbb
cs
mov
pop
ss
or
je
mov
lea
sbb
sub
pusha
je
ja
adc
ins
fadd
je
into
sub
(bad)
cld
sbb
ret
mov
sub
mov
(bad)
fistp
cmp
test
int3
or
jnp
lods
addr16
dec
pop
add
cmp
jae
clc
inc
clc
jae
sub
mov
adc
loopne
imul
jle
fwait
add
add
out
cmps
add
dec
or
sbb
aas
mov
out
adc
and
pop
adc
xchg
mov
jle
les
aas
add
add
cmp
dec
icebp
(bad)
lahf
add
mov
ret
or
push
push
jg
aam
add
test
add
pop
pop
mov
xchg
ret
push
stos
sbb
jae
mov
or
add
jp
xor
aaa
cld
and
out
lea
and
add
add
push
push
push
mov
xor
add
jae
adc
(bad)
mov
lock
test
mov
loopne
jne
add
mov
adc
fist
sub
mov
cmp
mov
sub
repnz
mov
mov
mov
mov
cli
adc
idiv
mov
cdq
idiv
push
jne
sbb
fdivr
fimul
lea
icebp
push
xor
lea
cmp
lea
lock
(bad)
dec
add
ret
mov
push
lea
lea
mov
cmp
cmove
lea
test
lea
inc
or
push
jge
inc
dec
jg
push
fiadd
sub
inc
sbb
loop
cmp
aam
mov
dec
lahf
mov
dec
mov
push
addr16
jecxz
jge
mov
shr
into
mov
aad
dec
int3
repnz
fnstcw
sar
pushf
add
jmp
sub
lea
ret
xor
cmp
jne
fadd
push
push
rol
inc
fdiv
push
pop
test
aas
cmps
leave
sub
mov
or
fild
stos
dec
add
jge
jns
inc
fiadd
lahf
sti
(bad)
push
out
mov
movzx
push
push
mov
sbb
in
mov
out
sub
pop
(bad)
mov
mov
cmp
jne
mov
pop
pop
pop
and
out
cmp
loope
and
dec
cld
pop
adc
aad
or
jg
dec
aam
popa
or
std
adc
into
mov
cmp
movzx
sbb
shl
xchg
cmc
outs
ret
or
adc
fld
sahf
add
loopne
pop
mov
push
add
xor
mov
test
adc
jl
dec
jne
sbb
out
loopne
add
mov
and
sub
or
mov
pop
bound
loope
shl
add
les
inc
jne
inc
mov
les
push
mov
aaa
push
mov
out
and
icebp
cmp
je
xchg
(bad)
sbb
sti
push
and
cmc
jne
push
fidiv
enter
rol
aad
sub
pop
mov
sub
jbe
mov
jg
add
mov
mov
or
lock
sub
cld
out
ds
shl
push
mov
mov
cmp
je
(bad)
sub
jne
push
ds
add
outs
pop
mov
mov
sub
xor
adc
mov
gs
aad
jmp
loopne
pop
into
les
sbb
push
push
(bad)
mov
xor
cmp
je
nop
adc
push
daa
mov
sub
inc
es
inc
cmp
push
mov
fist
dec
fbstp
cld
loop
popa
push
push
and
sbb
das
lods
jbe
add
es
pop
mov
or
push
cld
and
out
sub
push
cmp
cmp
jne
pop
xor
adc
das
sub
push
cmp
mov
arpl
je
ja
call
int3
iret
xor
inc
sbb
fsub
int3
lahf
xchg
dec
or
inc
and
add
neg
dec
adc
bound
add
and
fnsave
push
pop
mov
mov
push
aam
push
xchg
inc
xlat
mov
mov
mov
sbb
or
test
clc
pop
repz
adc
into
bound
push
push
outs
(bad)
jg
loop
xor
xor
outs
sub
ja
push
lea
sub
inc
aas
clc
shl
xor
add
push
ud1
das
sub
add
or
(bad)
and
mov
lahf
das
sub
or
push
pop
outs
fcomp
fmul
ins
add
xor
sbb
dec
subps
push
xor
add
adc
les
mov
ja
scas
push
push
push
inc
jg
and
dec
add
adc
add
imul
mov
mov
imul
(bad)
jmp
jae
mov
pop
add
or
pop
pop
jns
xchg
aad
cmp
mov
(bad)
(bad)
push
pusha
adc
pop
pop
cs
adc
mov
ds
xor
dec
and
stos
push
pop
or
shl
add
add
adc
popa
adc
add
cmp
int3
rcr
jo
pushf
mov
mov
mov
mov
add
popf
mov
dec
add
mov
(bad)
mov
add
adc
xor
mov
mov
xor
xor
and
push
cmc
aaa
lock
and
je
mov
mov
aas
stos
dec
pop
ret
mov
xor
and
or
je
ret
xor
test
mov
setne
inc
add
(bad)
jae
xor
adc
call
jg
or
or
(bad)
(bad)
jge
sub
sbb
mov
xor
xor
and
xor
jle
dec
daa
movs
out
adc
or
(bad)
call
or
or
mov
cmp
jne
mov
jg
loop
mov
mov
popa
mov
mov
and
cmc
cli
push
cmp
ret
sub
push
pop
ins
jl
lods
push
fbld
cmp
pop
push
add
clc
push
sub
jne
fld
scas
ret
mov
call
divsd
pop
jmp
movups
fnstsw
pusha
cs
add
rol
js
pop
adc
jg
or
add
pop
mov
idiv
mov
call
add
fcom
mov
pusha
or
push
or
es
or
fisubr
stc
shr
outs
dec
mov
dec
add
mov
or
hlt
jo
pusha
call
adc
ficom
dec
or
fist
jg
xor
mov
push
ins
or
sar
add
bnd
jle
cwde
sub
and
sbb
pop
or
adc
imul
iret
push
mov
mov
add
sub
inc
mov
jle
inc
in
lea
and
xor
sub
jg
cs
dec
add
ret
add
xor
mov
test
(bad)
stos
xor
je
cwde
call
and
loopne
add
call
fist
or
and
adc
into
inc
push
sbb
into
sar
sub
pop
add
or
or
jmp
clc
outs
je
dec
push
lahf
xor
movs
mov
daa
mov
rcr
sbb
pop
sete
movs
jne
pop
or
dec
leave
lods
mov
sbb
push
mov
mov
and
out
jb
test
jl
test
jae
movups
(bad)
das
rol
pop
movdqu
out
sti
aaa
xchg
hlt
mov
mov
shld
and
ss
push
out
adc
xor
shld
clc
dec
push
cmps
in
add
mov
inc
lock
retf
mov
cmp
je
(bad)
test
bound
adc
push
arpl
inc
aas
(bad)
fldenv
or
mov
push
mov
xor
or
mov
inc
add
lock
repnz
mov
push
test
sbb
pop
mov
fild
and
(bad)
mov
addr16
mov
sbb
pop
test
out
pop
or
or
shl
neg
jnp
shl
sbb
hlt
in
push
loop
and
push
and
sub
test
arpl
hlt
adc
sbb
loope
clc
push
je
leave
jne
(bad)
pop
or
jecxz
lahf
pop
add
movs
push
push
pop
std
pusha
fidiv
lods
aad
mov
push
mov
adc
pushw
dec
adc
ret
lods
sub
and
ja
inc
pop
add
inc
or
retf
ds
and
sub
or
xor
fs
add
stos
mov
add
pop
pop
xchg
jmp
cmp
pop
ja
mov
retf
pop
in
sbb
(bad)
int
mov
fsubr
add
js
(bad)
fmul
add
sbb
lahf
add
lea
adc
or
jmp
adc
lea
sub
in
cmp
jl
jg
cmp
jbe
add
sbb
gs
neg
call
add
add
je
or
mov
movs
cmps
push
call
mov
arpl
retf
xor
outs
in
mov
je
sbb
xchg
lahf
enter
mov
ins
mov
dec
sub
cmp
shl
jb
shl
jb
add
cld
ja
push
xlat
or
jg
pcmpeqw
pop
mov
cwde
add
(bad)
push
sbb
jmp
clc
ja
and
pop
or
xor
mov
rcr
inc
les
test
pop
xor
pop
add
add
push
ins
enter
push
sbb
jp
ret
mov
add
add
cs
xor
lea
adc
dec
bound
push
jo
jo
cmp
rol
jmp
add
pop
or
adc
movs
add
jle
adc
arpl
xor
push
call
popa
and
loope
sbb
sahf
(bad)
stc
pop
jmp
or
clc
push
les
and
jmp
mov
je
xchg
mov
lods
aad
mov
fstp
add
ucomisd
pop
dec
dec
cmps
or
daa
xlat
les
cld
mov
retf
inc
aaa
cmp
icebp
inc
pop
pushf
add
leave
pop
fs
sub
into
mov
in
and
xor
sbb
cld
xor
lahf
nop
call
dec
clc
sub
loopne
sub
mov
sbb
cld
lods
cmp
test
jl
fdivrp
sbb
pop
or
sbb
add
das
push
and
mov
push
mov
jns
in
add
test
push
pop
popf
jg
jl
ret
add
xchg
push
jo
pop
pushf
add
popa
jo
cmp
jmp
inc
cs
dec
shl
cmp
int3
adc
sbb
clc
std
or
add
cmc
cmp
or
call
out
mov
cmp
jg
rcl
cmp
neg
jnp
das
mov
jbe
mov
pop
mov
add
fsub
jl
push
js
pop
fcom
mov
push
cmp
test
or
pop
jl
mov
mov
pop
sbb
loopne
pop
mov
pop
push
push
push
sbb
mov
lock
mov
cli
mov
and
mov
fdivr
adc
dec
jge
pop
outs
xlat
fwait
or
xor
mov
enter
pop
jg
adc
rol
pop
aad
(bad)
lock
fcmovne
xor
pop
pop
rol
cmp
dec
cld
push
push
adc
add
or
mov
jg
mov
movdqu
sbb
adc
push
mov
pop
mov
sbb
sbb
add
or
mov
ja
dec
pop
adc
push
or
or
call
mov
adc
add
ficomp
fild
push
rol
push
rdtsc
or
sbb
pop
and
pop
arpl
loop
sbb
rol
sub
cmps
sbb
hlt
mov
add
clc
pop
std
add
clc
sub
xor
hlt
push
mov
mov
mov
push
push
int3
and
arpl
mov
dec
popf
loope
hlt
sub
push
mov
aad
mov
inc
sub
mov
add
arpl
cmp
std
fdivr
inc
enter
cmp
das
rcr
or
out
pop
cmc
cmp
add
ret
sub
pop
sbb
stos
mov
mov
xor
loope
add
xor
jo
xor
xor
pop
and
mov
add
dec
add
mov
add
(bad)
sbb
add
ret
add
or
or
add
fadd
inc
adc
mov
cmp
or
sbb
push
add
ret
inc
push
dec
dec
adc
inc
les
test
aam
jne
mov
test
jne
pop
mov
mov
mov
ins
rcr
mov
xchg
ror
(bad)
jmp
inc
or
push
mov
lea
push
mov
(bad)
mov
sub
mov
add
cmp
jne
add
retf
xchg
scas
xor
mov
mov
mov
jmp
mov
sub
and
aas
inc
(bad)
aad
inc
enter
mov
mov
mov
test
sbb
std
dec
retf
test
mov
add
fwait
add
shr
push
mov
std
push
mov
shr
inc
mov
push
or
xchg
data16
and
or
sbb
je
loopne
scas
lea
in
dec
movs
push
xor
or
fild
(bad)
jae
cmp
ja
xor
jecxz
cli
jg
sbb
icebp
mov
jne
mov
test
psadbw
icebp
jg
lea
mov
lea
mov
jo
jne
or
loope
je
test
xchg
jae
ss
je
mov
add
add
nop
xor
or
out
or
inc
dec
leave
cli
daa
mov
push
loopne
cli
push
jmp
adc
and
les
inc
push
mov
jno
push
imul
jmp
jg
retf
mov
mov
jmp
inc
mov
mov
push
sbb
push
add
aas
inc
add
dec
mov
mov
cmp
and
dec
sbb
mov
and
jg
inc
jb
xor
add
and
mov
aas
sbb
aas
xchg
retf
lds
inc
add
push
cmp
mov
mov
adc
push
iret
jmp
ret
push
xor
mov
inc
cmp
cmp
daa
add
mov
clc
dec
pop
fist
adc
push
push
lea
fcomp
pop
mov
mov
or
pop
inc
push
jnp
sbb
inc
mov
ss
cli
jge
inc
inc
fdiv
or
mov
dec
mov
mov
sbb
adc
xor
lea
setno
(bad)
jmp
push
call
cmp
sti
sbb
push
push
add
push
jge
adc
push
lock
inc
xor
addr16
fild
mov
sub
sar
cmp
xor
pop
lods
mov
mov
test
je
mov
mov
mov
not
lock
and
adc
sub
lock
mov
mov
add
and
test
inc
mov
int3
mov
retf
mov
hlt
or
movzx
fs
test
out
add
ja
jne
mov
loopne
fsub
add
xchg
dec
fmul
leave
pop
lahf
xlat
sub
push
xor
inc
pusha
fist
scas
int3
inc
or
mov
mov
inc
or
and
push
xchg
xchg
inc
or
xchg
pusha
clc
and
xchg
pop
in
jne
xchg
dec
into
mov
or
inc
dec
xchg
(bad)
or
adc
mov
push
push
loope
dec
daa
lea
push
mov
or
clc
je
js
add
adc
xchg
mov
and
xchg
cmps
leave
sbb
adc
les
mov
xchg
or
dec
ret
je
xchg
pop
sub
mov
sbb
and
xchg
cmp
loopne
aam
sar
arpl
sub
inc
lods
das
cmp
and
dec
adc
loop
xchg
and
and
adc
push
loop
nop
and
inc
retf
add
inc
jne
jne
inc
dec
sbb
jne
cmp
adc
push
mov
stos
scas
dec
push
mov
jge
push
add
test
xor
push
xchg
or
mov
adc
jmp
cmp
loopne
iret
pop
mov
mov
call
xlat
add
inc
aam
add
lea
cmp
jne
adc
pop
ret
pop
aaa
add
mov
test
je
aaa
adc
shr
dec
cld
and
inc
mov
mov
dec
mov
inc
fadd
mov
scas
jge
inc
lock
je
inc
dec
mov
adc
adc
add
inc
sti
sub
inc
dec
sub
imul
mov
sar
pushf
inc
out
(bad)
inc
add
dec
pop
sub
jle
lea
push
push
sub
adc
lock
fld
(bad)
lahf
pop
push
push
and
shr
mov
add
int3
sbb
clc
sbb
jg
dec
dec
sub
add
xor
stc
push
inc
cld
sbb
clc
dec
inc
ins
cmp
cmc
arpl
dec
add
(bad)
fld
sbb
or
jne
push
push
mov
mov
movzx
push
mov
jne
xchg
jmp
add
add
mov
popa
dec
or
push
repz
push
lds
push
out
xor
mov
stos
(bad)
mov
lea
(bad)
std
pop
mov
mov
push
mov
fdivr
mov
mov
fist
mov
adc
mov
add
mov
in
ret
adc
mov
mov
rcl
cld
out
push
push
mov
fdivp
jmp
(bad)
jmp
xlat
add
cmp
jae
cmp
ja
push
fcmovbe
push
add
shl
je
mov
call
add
adc
inc
mov
fsub
inc
xlat
retf
test
mov
mov
pop
inc
or
cwde
push
or
enter
dec
mov
mov
call
pop
or
ror
push
test
or
ror
xchg
cmp
lock
sbb
sub
ror
jo
add
mov
mov
cmp
je
mov
ror
dec
or
or
icebp
jne
mov
xchg
pop
movs
clc
and
sbb
inc
add
dec
inc
inc
add
call
add
inc
or
mov
jle
ror
inc
xor
add
pop
mov
cmps
add
das
fcom
mov
pop
sbb
or
std
pop
ja
shl
imul
je
fwait
mov
iret
je
push
or
mov
add
add
cmp
sar
iret
jne
mov
and
add
push
mov
add
sti
xchg
adc
mov
push
mov
mov
inc
cli
push
mov
mov
sub
imul
push
mov
call
(bad)
std
xor
cmp
jae
sub
and
out
mov
icebp
sbb
sub
cmp
jb
sub
sbb
jmp
idiv
inc
cli
cmp
jae
xor
cmp
pop
cmovb
pop
pop
and
jbe
jmp
ins
popa
les
inc
out
mov
push
or
in
pop
(bad)
cmps
clc
add
mov
sar
mov
(bad)
sti
mov
xchg
cmp
adc
imul
fdivr
ficomp
adc
sar
(bad)
inc
imul
ja
(bad)
pop
mov
pop
sbb
rcl
or
lds
xchg
ret
js
or
mov
lea
jne
test
or
jg
fcomip
cmp
jbe
les
(bad)
pop
shl
add
cmp
test
mov
mov
sbb
fldcw
mov
mov
pop
cld
aaa
push
cmp
push
mov
inc
js
les
retf
retf
jne
std
push
mov
sub
jge
and
(bad)
sti
xor
or
add
sub
xchg
add
imul
cmp
shl
ret
or
in
xchg
or
ja
push
or
mov
pusha
inc
add
jo
inc
sar
sub
or
inc
or
cmps
in
push
add
push
mov
pop
pop
pop
push
mov
mov
mov
push
push
or
jge
lea
jno
std
inc
lea
shl
add
lea
push
(bad)
(bad)
cmp
lea
shl
lea
add
shl
add
pop
adc
jge
movdqu
test
mov
inc
sbb
sub
inc
sub
sub
inc
sub
(bad)
jbe
xor
ins
jl
pop
fcomip
xchg
mov
inc
jne
lea
mov
(bad)
cmp
xor
xchg
inc
inc
rol
repz
push
lea
push
push
(bad)
or
pop
inc
call
clc
mov
mov
call
inc
sub
inc
std
mov
mov
dec
push
call
loopne
aad
cmp
fidiv
enter
jg
bound
xor
or
dec
loopne
imul
retf
lods
lea
push
ja
not
rol
loopne
imul
mov
inc
cld
push
std
xor
lea
push
aaa
icebp
out
dec
inc
sti
inc
xor
xor
xor
jbe
xor
(bad)
sbb
out
xor
out
cmp
push
inc
mov
popa
adc
pop
jle
pop
loope
add
jge
lea
lds
sar
cmp
jge
jmp
push
shl
repz
cwde
rcl
pusha
mov
lods
push
or
cmps
ds
in
dec
(bad)
sub
mov
lahf
das
xor
or
sbb
or
dec
rol
hlt
cwde
jo
xor
hlt
cwde
hlt
inc
sub
inc
jle
cmp
fbstp
sbb
mov
add
test
je
mov
das
jae
inc
call
lods
push
lea
sbb
hlt
jge
loopne
rcr
cmc
push
adc
outs
jo
mov
ret
jne
mov
test
add
or
out
stc
lea
push
and
add
inc
mov
inc
inc
jg
js
adc
push
cwde
push
xor
sar
cld
pop
pop
or
lea
mov
mov
mov
add
sub
scas
mov
mov
inc
mov
add
xrelease
pop
popa
ja
or
movs
cli
mov
lea
mov
adc
neg
pushf
pop
inc
fadd
inc
pop
push
lea
mov
add
pusha
adc
inc
fs
push
push
mov
sub
mov
cmp
jbe
pop
xchg
or
jmp
js
mov
aas
add
or
call
cmp
(bad)
mov
mov
js
pop
je
push
mov
cli
jg
jmp
inc
xchg
fmul
lea
in
pop
or
neg
and
xchg
and
int3
or
ja
sbb
sbb
xchg
inc
outs
sbb
mov
test
je
mov
pop
add
add
or
xchg
xor
fmul
stos
ret
push
pop
rcl
sub
int3
(bad)
mov
jl
into
aaa
pop
dec
mov
mov
or
je
addr16
out
pop
inc
test
jg
in
sbb
jp
and
mov
cmp
mov
mov
ds
aas
adc
push
xor
lea
add
jp
cmp
jne
mov
shl
sub
loop
test
je
inc
cmp
jl
ja
adc
mov
sub
test
dec
popf
lea
mov
jae
pop
add
sahf
sub
std
lea
mov
or
adc
cwde
leave
inc
cli
outs
sbb
(bad)
jmp
sub
sar
mov
mov
add
inc
dec
call
aad
adc
push
(bad)
out
adc
adc
out
or
test
ins
cwde
sti
pop
outs
cmp
je
icebp
pop
mov
dec
adc
test
mov
out
(bad)
push
cmp
je
cmp
je
add
cmp
jne
jmp
adc
lea
dec
push
add
mov
sub
xor
mov
add
dec
adc
mov
(bad)
fst
inc
out
shl
push
hlt
fistp
inc
push
push
add
bnd
cmp
mov
or
daa
dec
and
sar
lea
xor
add
mov
cli
sbb
mov
call
mov
cmps
int3
cmp
mul
or
dec
mov
adc
cs
xchg
xor
cmp
lea
(bad)
clc
sbb
enter
cmp
or
add
fidivr
xchg
add
mov
loop
rcr
add
xor
ja
call
scas
test
adc
mov
mov
inc
ja
cmps
cld
push
xor
add
add
xor
mov
test
sub
pop
pop
inc
push
pop
jp
test
sbb
and
jo
sbb
shl
lea
add
sub
xor
mov
inc
jl
(bad)
adc
add
and
add
jmp
lea
lahf
pushf
in
cmp
lock
add
stos
dec
cmp
inc
loopne
mov
jbe
inc
pop
ins
rol
loopne
(bad)
inc
or
inc
or
dec
push
pusha
lea
jp
push
inc
mov
pop
rol
mov
mov
cmp
jnp
cmp
je
mov
mov
dec
addr16
jne
call
inc
dec
into
loopne
inc
in
inc
and
adc
pop
verw
or
inc
or
mov
inc
adc
inc
or
clts
je
fmul
das
add
pop
test
je
sub
fs
test
jnp
pop
pop
or
addr16
lds
add
stos
(bad)
call
movs
push
mov
mov
cmp
je
mov
cmp
je
add
cmp
xor
out
jne
pop
add
addr16
jo
and
ds
cmp
push
add
jle
add
jbe
clc
aaa
lock
inc
je
push
call
add
mov
fldcw
mov
cmp
add
jle
jmp
push
lea
imul
push
push
add
push
dec
clc
push
sub
call
sbb
mov
jge
popf
push
or
xchg
cld
test
je
in
iret
ja
jmp
mov
add
call
xor
les
push
jbe
stc
ret
ret
push
or
push
lds
xor
push
aaa
xchg
mov
push
js
or
mov
sbb
jmp
adc
call
adc
dec
mov
les
js
or
sub
ror
clc
add
push
fs
or
xchg
and
in
xchg
in
sbb
in
mov
sub
out
push
push
cwde
jb
sub
lea
je
mov
addr16
jne
aam
pop
dec
push
add
cmps
xor
sub
(bad)
and
sub
lea
idiv
rcr
pop
stos
and
mov
jg
sub
and
mov
test
adc
inc
test
mov
mov
cmovne
mov
mov
mov
sbb
aam
push
ror
sub
lea
cs
dec
fsubr
sub
in
dec
movzx
and
mov
inc
std
mov
inc
icebp
mov
mov
adc
inc
sbb
jmp
inc
mov
add
int3
or
je
(bad)
lea
add
xor
ja
hlt
loop
outs
bound
xor
ror
add
cwde
sbb
mov
xor
std
inc
hlt
test
jle
fwait
pop
dec
movs
movdqu
icebp
leave
sar
and
(bad)
fcmovnbe
sbb
mov
inc
rol
jbe
popf
call
jne
sub
pushf
sti
add
lea
test
sahf
pop
cmp
jne
mov
mov
test
setne
jg
push
dec
mov
mov
push
repnz
test
dec
in
dec
dec
add
push
or
mov
cmp
cmp
or
fs
jmp
out
sub
mov
jbe
add
retf
mov
les
dec
adc
pop
jle
add
mov
cmp
jne
test
mov
add
cwde
inc
jl
push
push
push
add
sbb
mov
dec
adc
jmp
icebp
push
ret
sub
mov
cmp
les
jno
retf
add
dec
(bad)
in
(bad)
test
outs
push
bound
bound
and
add
cmp
sbb
ins
repz
or
cmp
je
jo
inc
sar
or
inc
cld
cmp
jl
jg
cmp
jbe
lea
(bad)
ja
mov
or
add
dec
jl
and
sbb
sar
pop
pop
mov
xor
and
xor
mov
out
fidiv
add
or
ret
mov
mov
add
jge
add
mov
mov
push
fiadd
and
jno
jl
cmp
sub
fidivr
pop
pop
mov
xchg
cmp
rcr
mov
in
bound
dec
add
xor
xor
pop
cmp
pusha
inc
lahf
push
sbb
pushf
jo
aad
mov
ret
jo
aaa
ror
add
cli
lock
xor
and
setg
mov
cmp
je
fcomp
mov
cmp
xlat
mov
jo
sar
jo
mov
mov
jae
push
mov
ins
add
jne
mov
shl
inc
and
test
pop
ror
sub
pusha
cdq
push
(bad)
mov
mov
aaa
scas
add
adc
adc
jnp
rcl
xchg
xor
cmp
(bad)
in
pop
mov
xor
sahf
mov
pop
lods
add
ficom
xchg
mov
mov
retf
(bad)
inc
mov
mov
inc
xchg
and
in
rcl
xchg
stos
sub
dec
add
push
int3
push
icebp
mov
sbb
adc
push
inc
cmp
pusha
xor
push
lea
push
shl
fnstsw
test
outs
push
pop
pop
or
add
dec
sub
mov
adc
dec
std
pop
cdq
dec
xchg
outs
mov
or
xchg
or
add
jmp
sahf
mov
mov
push
or
int3
lds
adc
pop
sbb
daa
shr
or
sub
das
mov
pop
xchg
call
sub
inc
dec
push
and
push
les
inc
add
adc
call
rol
inc
clc
dec
mov
xchg
gs
popa
pop
ret
add
lea
or
push
pop
fs
fnstsw
add
pop
fbld
mov
in
cs
mov
out
sbb
inc
adc
fstp
push
(bad)
pop
mov
cld
push
xchg
pushf
or
int3
push
inc
push
syscall
jno
fcmovbe
pcmpeqd
mov
je
and
pop
cmp
out
push
dec
push
sbb
adc
dec
or
cli
add
and
cmp
std
xchg
pop
push
dec
les
sbb
pop
pop
js
out
or
sbb
jmp
xor
sub
lea
pop
add
mov
jae
pop
fwait
(bad)
loopne
call
sub
pop
ja
push
fadd
aaa
mov
jle
add
cli
push
cli
push
xchg
mov
arpl
add
iret
or
outs
jo
loopne
pop
aas
jne
ret
mov
inc
sub
dec
and
mov
out
in
mov
add
dec
xor
adc
xchg
shl
mov
into
add
adc
mov
test
je
adc
out
mov
and
lea
inc
fmul
fiadd
inc
test
mov
lea
or
add
push
lea
mov
push
mov
push
sti
push
sbb
add
push
or
mov
aaa
std
fiadd
jne
push
mov
or
lods
push
push
inc
out
loop
fild
push
mov
push
sar
mov
ret
int3
mov
mov
(bad)
shl
xchg
inc
cwde
xor
mov
mov
mov
les
push
mov
(bad)
ins
add
inc
lock
stos
push
leave
jo
les
les
mov
add
ja
je
jo
stos
add
inc
sar
add
or
rol
icebp
inc
or
inc
jo
inc
mov
jo
inc
int3
adc
or
push
jno
xchg
xchg
jno
(bad)
inc
or
jge
and
and
jno
mov
mov
jno
or
ss
jl
inc
mov
lea
xor
xchg
xor
mov
fadd
add
jl
jnp
test
inc
in
xsave
and
mov
and
jge
push
jnp
and
(bad)
sar
add
pop
ror
pop
mov
xor
adc
pop
xor
sbb
cmp
mov
or
xor
and
fs
mov
cmps
out
clc
(bad)
xor
jge
mov
add
out
ror
rcl
lock
out
fsubr
fnstenv
rol
add
mov
inc
pop
nop
jmp
dec
add
icebp
jne
or
dec
jmp
js
js
mov
rol
jge
add
pop
pop
sar
push
inc
xchg
cmp
je
push
push
push
in
cmp
out
in
xor
inc
pusha
or
mov
mov
sbb
test
or
pop
pusha
adc
push
or
add
adc
add
mov
push
inc
aas
or
das
pop
js
or
cmp
lods
out
or
xchg
inc
mov
mov
ja
push
and
push
adc
add
add
add
inc
movs
in
mov
xor
call
out
mov
sbb
nop
nop
or
and
retf
pop
sbb
xchg
adc
add
mov
mov
and
and
lock
cmps
pop
and
jg
push
mov
jmp
rol
add
call
std
adc
jne
jne
in
adc
and
mov
(bad)
sub
push
js
sub
or
outs
adc
push
adc
xor
je
dec
pusha
clc
jg
push
mov
sub
test
mov
push
je
iret
leave
and
add
jns
add
push
jns
ss
adc
lea
inc
push
add
hlt
add
or
mov
mov
(bad)
push
fisttp
add
mov
shr
adc
add
or
add
add
rol
shl
push
loopne
or
inc
cmp
ja
(bad)
cmp
cs
ja
mov
adc
dec
or
inc
or
rcl
dec
ror
dec
(bad)
xor
sbb
sbb
test
inc
jmp
dec
adc
movq
add
mov
sub
outs
jmp
sub
push
sub
inc
lock
cmc
pop
leave
lock
add
stc
add
mov
cmp
ja
sub
out
mov
jl
fild
fisttp
mov
or
pop
lea
push
movs
jg
pushf
sbb
and
xor
pushf
inc
add
jg
paddusw
imul
cdq
loop
das
push
in
add
mov
push
ret
pop
adc
push
adc
je
pop
adc
pop
push
in
sub
pop
cmps
push
shl
push
push
jb
popa
mov
jmp
add
fld
and
mov
idiv
inc
ror
and
jne
xor
inc
pop
out
and
pop
lods
add
xor
push
mov
xor
(bad)
cmp
test
fcom
and
jl
xchg
int3
pusha
data16
outs
scas
ror
adc
(bad)
cs
(bad)
(bad)
cmp
pushf
cmp
dec
mov
mov
sub
jle
and
push
jbe
shl
lea
daa
push
add
out
or
stc
pop
xchg
add
outs
pop
das
sub
mov
mov
push
inc
dec
pop
dec
push
adc
out
and
mov
push
mov
movzx
push
mov
inc
adc
loop
mov
lock
inc
mov
mov
jg
outs
mov
mov
lea
adc
jg
icebp
or
and
push
call
sbb
and
adc
add
sub
cmovs
push
mov
mov
cmp
je
inc
sub
imul
jne
shl
sbb
out
es
xchg
mov
aam
(bad)
push
imul
adc
lock
call
jmp
je
dec
je
dec
jne
jg
mov
pop
lea
xor
jmp
jbe
mov
adc
add
out
pop
push
ins
lea
es
cmp
fwait
jnp
cmp
test
lea
bound
push
and
pop
sti
or
add
je
cmp
js
ins
fwait
(bad)
push
inc
mov
xor
shr
xchg
js
and
or
mov
and
imul
jne
lea
cmp
xor
test
jns
shl
fisttp
push
mov
push
call
dec
outs
rcr
movsx
(bad)
ffreep
sub
add
aas
sub
adc
repnz
xor
push
push
fcom
mov
sbb
pop
xchg
jl
or
mov
inc
xchg
hlt
adc
jne
adc
cdq
push
jbe
fwait
test
cld
sub
or
push
push
dec
ror
mov
sub
jle
and
push
and
inc
mov
inc
dec
or
jmp
and
(bad)
icebp
and
mov
shl
out
fsubr
and
add
ja
fsubr
mov
ffreep
cmps
mov
adc
pop
movs
mov
sbb
inc
xor
fisttp
sub
aas
imul
in
cmps
cdq
jb
test
je
jne
jo
movzx
popa
pusha
push
add
add
cs
and
mov
out
mov
rcr
cdq
add
jge
(bad)
mov
sbb
test
iret
mov
push
or
and
sbb
add
mov
adc
push
out
xor
or
sbb
sbb
shr
inc
test
setns
test
je
call
add
add
sti
out
mov
jb
xchg
add
push
push
push
call
nop
add
jg
adc
lahf
add
mov
jle
lock
push
fmul
pusha
cwde
sbb
inc
or
jae
test
sub
mov
push
mov
jmp
ins
js
mov
in
aaa
adc
je
mov
push
not
push
push
shl
add
mov
mov
and
js
add
pusha
lods
popa
outs
and
out
xor
cmp
setg
lock
add
in
aaa
add
sbb
loop
and
sbb
adc
dec
fcmovnb
test
aas
sbb
jno
test
je
sub
adc
iret
add
(bad)
imul
jge
(bad)
in
fidivr
and
push
push
push
rcl
in
jge
push
sub
mov
or
clc
cmp
inc
(bad)
out
inc
adc
xchg
pop
pcmpgtd
jle
mov
push
pop
pop
add
out
pusha
push
mov
rcl
jge
jp
inc
mov
and
and
adc
dec
test
xor
leave
mov
lea
or
and
add
push
adc
lods
mov
add
(bad)
pop
mov
mov
(bad)
push
or
sbb
cmp
push
lods
mov
add
leave
mov
(bad)
fisttp
add
lea
loope
mov
or
in
pop
pushf
test
je
pop
repz
jmp
pop
pop
in
pop
xor
cmp
test
je
test
mov
push
(bad)
ret
xor
push
mov
push
inc
mov
test
dec
sub
jl
sbb
mov
lods
adc
movs
in
cwde
inc
lods
push
cld
loope
inc
xor
clc
push
test
pop
inc
clc
or
push
arpl
dec
sar
test
cmp
add
jb
test
mov
stos
and
mov
add
or
ret
and
test
inc
loopne
cld
xorps
push
movdqu
pop
and
loop
jnp
sub
mov
mov
fbstp
adc
std
xor
rol
mov
pop
adc
xchg
imul
in
push
or
lahf
icebp
sbb
and
icebp
push
fstp
mov
add
das
push
and
push
adc
arpl
or
test
jle
mov
lods
clc
cli
outs
dec
stos
popf
lods
jae
clc
or
test
jae
xchg
dec
xchg
rcl
pop
data16
imul
in
cmp
jns
mov
push
cmp
inc
hlt
add
inc
rcr
std
enter
jmp
and
lods
sbb
push
pop
test
sbb
inc
sbb
inc
and
push
xor
rol
out
lea
cmp
je
mov
add
add
stos
add
sub
add
das
dec
cli
xchg
sbb
or
jne
mov
sbb
clc
cmp
add
mov
pop
stos
xchg
rol
rcr
xor
push
push
icebp
cwde
cmp
or
push
add
dec
lahf
inc
(bad)
jg
ret
es
lea
push
lea
push
push
push
push
fs
std
adc
sbb
adc
add
adc
ret
push
dec
jecxz
and
pop
mov
pop
add
ret
mov
push
inc
mov
stos
adc
cwde
add
ror
jne
sbb
add
add
call
lds
cmp
mov
jl
push
outs
int3
inc
jmp
movs
mov
jp
rcl
adc
inc
mov
pop
push
pop
jge
lea
xor
dec
nop
xor
enter
ret
sub
cld
sub
cmp
aaa
das
mov
and
mov
adc
and
iret
mov
fcom
add
mov
lods
adc
lea
test
push
lea
iret
adc
push
adc
sbb
push
scas
mov
test
fild
push
push
mov
push
test
mov
jne
cmp
leave
lea
cmovo
aam
mov
dec
jg
dec
add
or
lea
mov
adc
cmp
iret
push
retf
stc
inc
sub
push
and
stos
xor
push
mov
xor
and
add
mov
and
add
push
add
pop
mov
pop
inc
cmp
xchg
push
pop
cmps
push
and
rcl
add
push
and
jp
jne
add
repnz
vmread
pop
sub
stc
pusha
push
hlt
out
push
mov
mov
add
(bad)
call
hlt
mov
test
inc
dec
cld
cmp
je
cmp
jne
cmp
jne
mov
test
aas
dec
mov
ja
add
sub
shl
pop
or
lea
je
push
push
mov
ss
xchg
dec
pop
mov
(bad)
loopne
inc
mov
mov
add
add
add
movs
test
fisubr
adc
and
xor
mov
xchg
xchg
lock
adc
fistp
adc
xchg
add
or
or
pushf
jl
mov
jg
lahf
adc
inc
adc
mov
mov
jmp
xor
mov
adc
mov
pop
scas
xchg
jo
ins
or
add
push
stc
push
lea
or
push
and
sbb
dec
sbb
add
adc
mov
call
cwde
mov
shr
scas
fdivr
scas
pop
pop
mov
inc
sbb
xor
enter
sub
fcom
pop
inc
add
jnp
mov
loopne
(bad)
jno
and
adc
sub
pop
sub
shl
add
pop
into
jo
xchg
sbb
out
mov
cmps
sub
loopne
lea
jbe
cmps
retf
pop
or
in
xor
pop
lock
add
mov
mov
loopne
push
push
ret
mov
fisttp
adc
jns
test
cmp
loopne
sub
retf
xchg
sub
in
(bad)
xor
or
pop
loopne
(bad)
jle
test
je
lea
fisttp
pop
idiv
das
sub
shl
add
je
adc
xor
dec
jo
pusha
mov
xor
or
inc
outs
push
cmp
mov
je
jns
loopne
adc
or
add
push
xor
mov
das
inc
mov
mov
pop
in
cmp
lea
pop
adc
or
mov
mov
adc
test
mov
mov
lea
sub
add
cwde
fwait
dec
icebp
lock
push
pop
push
xor
mov
or
add
dec
add
adc
lea
add
out
push
loopne
mov
jnp
push
push
push
dec
push
lea
mov
jmp
cmp
loop
adc
inc
or
clc
shr
or
add
aad
mov
test
ret
xor
dec
hlt
inc
push
lahf
push
jne
xchg
sbb
inc
test
sbb
xor
loopne
and
cs
pusha
leave
pop
add
jbe
pop
lds
or
lds
push
dec
jmp
fwait
inc
loop
mov
sbb
and
add
(bad)
add
dec
pop
je
pop
push
call
imul
loopne
xor
or
mov
mov
adc
push
inc
call
ror
jne
xor
jmp
add
cld
mov
add
push
jns
push
fild
pop
or
push
add
or
push
adc
push
adc
adc
mov
dec
in
cmp
outs
mov
add
fsubr
out
shr
jb
mov
or
add
mov
pop
mov
psadbw
shr
mov
pop
cmp
jbe
mov
lea
and
loopne
ret
sbb
adc
ret
iret
inc
fs
add
jno
test
(bad)
sti
push
push
inc
or
or
inc
or
mov
add
in
fst
pop
xor
(bad)
mov
inc
mov
pop
(bad)
mov
add
cmp
mov
or
shl
or
ror
or
add
jns
(bad)
ffree
sbb
nop
je
push
or
in
pop
xor
push
push
pop
mov
stc
fldenv
jbe
fsubr
add
add
and
(bad)
inc
add
mov
mov
mov
add
mov
cmp
jbe
add
ja
mov
jbe
add
(bad)
(bad)
inc
and
sub
mov
cmp
lea
lea
cmovae
cmp
mov
jmp
lea
and
mov
cmp
sub
cmp
mov
enter
test
ror
fidiv
mov
add
add
add
push
add
push
dec
sub
mov
mov
xor
or
xchg
(bad)
push
pinsrw
aas
adc
sbb
(bad)
mov
cdq
cmp
jne
cmp
jne
push
test
js
scas
mov
(bad)
(bad)
call
sub
cmp
jb
mov
lea
and
add
cmp
jb
lea
pop
mov
mov
sub
add
leave
sub
jmp
stos
maxps
rcl
or
cli
push
xor
ret
mov
cld
ret
mov
add
not
cmp
push
jns
mov
sub
cmp
jae
pop
mov
ss
inc
mov
mov
add
cmp
jb
(bad)
into
inc
add
push
add
lock
or
or
mov
dec
pop
push
cmc
add
push
scas
mov
(bad)
(bad)
call
mov
mov
sub
cmp
jb
mov
add
and
add
cmp
jae
mov
jmp
ins
call
aaa
imul
mov
sub
stos
or
adc
push
nop
or
scas
or
test
mov
inc
scas
dec
or
xchg
pop
jmp
pop
add
mov
xor
(bad)
push
mov
(bad)
xchg
loopne
call
mov
push
test
xchg
in
jae
push
xor
add
int
jo
test
mov
jno
sub
push
cmp
jb
mov
lea
lea
dec
clc
and
aaa
jge
mov
mov
jns
lea
add
stos
aaa
mov
cld
cmp
cmp
or
add
pushf
test
je
ja
call
xchg
pop
test
push
xchg
cmp
mov
sbb
call
cs
or
out
mov
aas
cmp
mov
mov
push
cmp
mov
add
push
popf
or
adc
test
xor
cld
sub
pshufw
fldcw
sbb
cmp
add
dec
aas
aaa
sbb
cli
loope
inc
ror
push
cmp
mov
pop
mov
lea
sub
xchg
push
xchg
inc
test
mov
or
push
inc
cmp
adc
xchg
cmp
inc
mov
ss
adc
xor
gs
inc
jmp
and
jns
add
inc
adc
je
mov
cmp
add
sbb
xor
rcr
pop
out
xor
push
je
mov
mov
lock
mov
inc
xor
fcmovbe
sub
scas
sbb
cs
sub
hlt
jp
(bad)
add
push
push
cdq
popf
out
test
dec
hlt
aaa
fwait
mov
pushf
jp
push
adc
cmp
hlt
and
xchg
or
es
ret
jmp
aas
cmp
cmp
lahf
int
jle
add
jb
sub
inc
adc
jne
mov
(bad)
(bad)
aas
call
inc
or
jmp
retf
mov
mov
dec
adc
push
in
ins
or
and
cmc
pushf
mov
or
jbe
jb
push
neg
adc
mov
repnz
(bad)
cli
or
sub
bound
sub
add
jmp
cwde
mov
mov
cmp
sete
jmp
enter
xor
push
pop
retf
add
xchg
xchg
scas
dec
jnp
cmp
or
xchg
loop
add
popf
sub
dec
or
adc
xor
add
xor
outs
in
data16
call
jbe
dec
sub
inc
pop
push
in
data16
push
push
lea
sahf
pop
rcr
out
or
inc
dec
push
loopne
xchg
jnp
inc
and
add
out
or
add
ss
sub
or
lahf
push
repz
jae
and
test
shl
popa
cmc
or
jg
pop
mov
sub
jle
inc
es
or
inc
or
jmp
mul
xor
sbb
dec
jb
sub
jg
adc
push
cmp
(bad)
aad
mov
out
adc
mov
inc
push
stc
add
fisttp
mov
add
cld
js
and
mov
lea
push
add
cmp
or
test
pushf
add
jo
ins
lock
aaa
loopne
setg
inc
adc
add
fld
or
sub
mov
mov
add
sbb
lock
cmove
cs
mov
popf
mov
jb
sahf
in
xor
xor
out
inc
mov
outs
iret
push
(bad)
fldcw
mov
inc
sub
ins
(bad)
test
sub
mov
mov
sbb
test
sbb
mov
in
test
mov
pop
loope
sti
iret
cmps
cld
ja
pusha
aad
out
sub
xor
push
mov
mov
jge
movs
cmp
or
int3
push
mov
cmovne
cmps
inc
dec
sub
aad
cld
cmp
dec
push
dec
ins
lea
(bad)
or
ja
lea
pop
xlat
jne
je
jle
adc
test
pop
sti
shl
inc
xchg
add
jmp
mov
(bad)
xor
leave
mov
inc
bswap
adc
cmps
xor
add
or
xor
jg
dec
sbb
ror
sbb
cmp
add
add
inc
shl
and
push
mov
or
test
mov
sbb
mov
adc
mov
or
pop
or
lock
daa
stc
add
adc
mov
fimul
pop
adc
cmp
cdq
inc
sub
in
jp
cmp
pop
push
dec
enter
push
div
les
sub
mov
adc
and
pop
out
xchg
jno
sbb
jmp
push
mov
sar
inc
jae
jb
fmul
adc
mov
dec
or
push
lods
add
test
not
or
add
jmp
iret
leave
ins
mov
push
mov
add
jge
dec
xchg
mov
addr16
mov
add
cmp
dec
inc
mov
dec
lahf
mov
push
mov
dec
mov
mov
xor
std
inc
push
leave
push
push
sbb
sbb
push
cli
xchg
in
jg
mov
outs
call
mov
jmp
sbb
xchg
mov
add
dec
push
xchg
add
or
mov
(bad)
cmp
mov
jae
mov
push
sbb
sbb
and
cmp
jl
pop
(bad)
pop
sar
push
jne
mov
rol
aam
or
sub
call
mov
iret
push
add
or
leave
add
pusha
inc
je
les
inc
ins
pop
adc
adc
mov
push
lds
mov
sbb
mov
mov
aad
inc
pop
lea
jmp
inc
adc
jmp
jae
dec
out
clc
jg
mov
add
je
xchg
and
push
and
out
aaa
and
inc
push
inc
gs
test
gs
add
mov
(bad)
cld
inc
aad
sbb
(bad)
cmp
sub
mul
push
inc
inc
movs
jl
inc
xor
test
test
iret
add
or
pop
pop
pop
jmp
lock
or
iret
add
add
mov
xchg
mov
adc
dec
mov
cmp
jne
test
mov
movq
sbb
or
xor
sub
mov
sbb
and
std
mov
mov
mov
not
jno
xlat
mov
mov
and
and
mov
dec
mov
mov
mov
cdq
add
adc
add
jbe
sbb
mov
addr16
add
push
out
and
outs
nop
mov
test
jle
add
push
and
jne
add
push
mov
aad
pop
cmp
pusha
pminsw
add
clc
outs
sub
cmp
pop
push
xor
add
inc
and
jecxz
rcr
mov
mov
mov
(bad)
adc
inc
sub
out
aas
sbb
popa
je
inc
xor
mov
cmp
je
sbb
test
or
pop
scas
add
in
pop
test
push
pushf
add
inc
cmp
adc
jbe
scas
adc
mov
ds
pop
add
inc
push
add
cmp
cwde
add
aas
push
scas
push
add
cmovne
mov
push
adc
inc
aas
retf
mov
adc
loope
jmp
sub
inc
mov
into
adc
mov
mov
(bad)
jge
call
push
xor
movq
pop
retf
mov
mov
test
adc
inc
sbb
cmp
(bad)
outs
mov
sub
adc
into
shr
dec
inc
in
add
or
in
push
ret
inc
mov
or
movs
sub
outs
add
inc
clc
add
adc
add
cld
(bad)
out
inc
jg
test
jb
test
jl
jg
test
jb
test
jg
inc
(bad)
push
mov
mov
clc
push
push
push
push
push
mov
mov
mov
stos
clc
aaa
xor
add
mov
mov
dec
inc
jo
icebp
add
aaa
xchg
nop
mov
or
pop
add
fdivr
cli
push
add
js
xchg
add
adc
rol
jp
xor
(bad)
xor
jle
or
push
inc
inc
mov
movs
or
mov
pop
mov
xor
mov
jne
mov
or
sar
scas
or
nop
cs
shr
pop
ror
pop
ja
push
lock
mov
in
loope
or
aaa
data16
or
cmp
and
movs
(bad)
hlt
xor
xchg
scas
and
xchg
add
add
mov
sbb
imul
adc
adc
lock
cmp
jl
mov
and
mov
inc
or
cmps
sub
and
inc
int3
cmp
add
mov
mov
and
pop
dec
inc
or
inc
mov
dec
inc
or
cmp
loop
test
sbb
push
add
inc
clc
sub
mov
sar
cmp
mov
cmovae
or
sbb
outs
or
ja
jb
mov
(bad)
(bad)
mov
jge
cmp
jbe
cmp
jae
lea
cmp
ja
inc
call
cmp
jb
pop
pop
xor
mov
in
clc
pop
jmp
cmp
jae
cmp
jae
lea
enter
(bad)
(bad)
lock
cwde
or
sar
add
xchg
add
iret
ja
add
fist
out
pop
fsub
add
stos
inc
cmp
mov
(bad)
add
mov
add
add
cmp
cs
mov
or
nop
inc
jmp
mov
call
lea
lock
es
and
fsubr
jg
jne
jne
shl
(bad)
lea
or
dec
fcomp
test
test
aam
jnp
lea
cmp
xor
add
enter
add
jne
jb
dec
cmp
sbb
mov
mov
test
(bad)
push
mov
sub
cmc
add
popa
and
bound
test
aas
xchg
aad
mov
mov
add
cs
sbb
mov
cld
xor
inc
sub
aas
outs
xchg
inc
daa
or
jmp
mov
xchg
aas
dec
pop
xchg
adc
add
das
xchg
xchg
fwait
push
clc
loopne
sar
or
cmp
je
push
lea
scas
fsin
dec
inc
sbb
gs
dec
je
cs
mov
push
fbld
mov
mov
(bad)
xor
mov
out
faddp
mov
pop
movzx
mov
or
in
add
xchg
inc
popf
ret
and
cli
stos
retf
push
xlat
fisttp
or
movs
or
inc
pusha
push
sti
jnp
push
ds
cs
pop
sub
outs
push
or
jmp
fld
and
mov
xor
add
push
in
mov
mov
iret
mov
clc
add
add
nop
or
in
pusha
mov
add
xor
xor
push
push
movdqu
push
mov
lea
xor
mov
cpuid
mov
push
hlt
(bad)
dec
or
sub
les
sbb
inc
mov
dec
aam
dec
adc
pop
enter
add
int3
xor
cwde
std
pop
push
push
int3
cmp
jb
adc
sub
jg
inc
adc
ret
jbe
mov
or
inc
int3
cmc
mov
inc
jmp
cmp
jae
push
add
jbe
push
nop
dec
mov
ja
sbb
ins
add
pop
gs
cmp
(bad)
pushf
stos
test
aaa
(bad)
(bad)
cmc
add
jmp
leave
mov
outs
cdq
add
(bad)
inc
inc
movs
fstp
add
pop
lea
lea
leave
sbb
sbb
and
mov
mov
mov
sar
mov
sar
mov
(bad)
inc
ret
mov
and
and
add
mov
mov
mov
mov
cld
ja
out
sar
xor
sar
or
(bad)
adc
inc
adc
out
(bad)
(bad)
push
sti
mov
mov
shr
and
mov
mov
shr
and
shr
mov
sub
mov
mov
sbb
mov
jns
and
and
mov
es
out
mov
ret
push
add
push
pop
or
add
and
pop
push
push
sbb
lea
xor
shr
and
and
jg
mov
and
jmp
xor
mov
sub
dec
cmp
pop
add
mov
dec
cmp
int3
mov
mov
jg
(bad)
lock
mov
cmp
mov
mov
jp
shl
jge
or
pop
mov
(bad)
adc
cmp
clc
jle
mov
in
lock
aaa
add
or
dec
test
lock
nop
test
shr
clc
es
dec
adc
cmp
in
(bad)
je
push
cmp
inc
movs
add
mov
add
inc
clc
pop
ja
pop
add
jecxz
mov
mov
pop
dec
dec
cld
loop
inc
and
or
mov
lea
push
out
(bad)
out
and
add
rol
fdivr
mov
sti
adc
inc
enter
cs
and
cwde
cmp
push
mov
mov
movs
jp
aaa
cmp
sbb
dec
push
mov
aas
push
xor
dec
inc
push
inc
int
add
cli
push
aam
test
call
mov
comiss
jb
push
jmp
aas
div
leave
adc
movups
pop
enter
inc
movs
lods
out
cmp
sbb
cld
pinsrw
pop
pushf
or
pushf
ucomisd
lahf
test
jp
push
leave
pop
xor
sub
out
int3
gs
cmc
test
mov
fdivr
or
outs
call
add
mov
lea
lea
fcmovnbe
iret
adc
push
ins
in
mov
shr
sbb
gs
sbb
jb
es
cmp
mov
outs
fsubr
add
mov
idiv
adc
cmp
jne
push
cmp
sub
jnp
jae
sub
sbb
ins
in
pop
js
cs
sub
dec
add
or
xor
sbb
in
or
je
rep
push
mov
out
push
and
dec
mov
add
push
mov
pop
int3
nop
mov
sti
aaa
icebp
or
pop
and
add
(bad)
ja
adc
push
test
and
aad
add
push
push
mov
mov
mov
cmp
je
mov
cmp
mov
je
cmp
je
mov
jbe
xchg
rcr
iret
push
sbb
in
dec
neg
pop
add
shl
scas
mov
push
jmp
mov
add
mov
jne
xchg
dec
add
jno
cmp
sets
mov
mov
jne
inc
in
pop
push
std
gs
mov
sub
and
jb
adc
dec
(bad)
xchg
jle
push
xor
mov
jo
lea
mov
add
(bad)
cmp
ins
mov
mov
cmp
je
inc
nop
pop
je
mov
sub
js
add
and
cmc
test
je
pop
cwde
ins
cdq
sbb
outs
jmp
addr16
cmp
add
(bad)
add
in
out
or
cmp
ret
xchg
dec
adc
mov
in
mov
movs
mov
lea
in
cmp
push
aaa
je
push
cmp
or
jp
arpl
fstp
add
mov
neg
mov
mov
clc
cmc
lea
call
mov
cmp
jne
xchg
adc
inc
add
mov
in
jmp
jmp
xor
movs
fnstsw
mov
xchg
loope
nop
inc
push
(bad)
cld
les
mov
sub
inc
dec
cld
xor
in
(bad)
(bad)
jg
std
dec
add
add
loop
add
mov
add
sbb
pop
cld
mov
add
cmovb
cmp
add
sub
je
and
push
mov
add
and
push
push
mov
mov
inc
ja
cld
pop
icebp
sub
inc
adc
je
jae
push
and
add
cmp
ss
out
mov
mov
jnp
sti
sbb
ret
shr
or
mov
fst
push
cli
pushf
mov
pop
test
mov
pop
je
lea
pop
inc
adc
pop
adc
iret
push
call
or
rcl
sbb
data16
mov
or
loop
jns
stc
out
add
int
dec
mov
or
retf
je
jg
icebp
sub
push
adc
push
mov
cmp
je
movzx
nop
cmp
je
outs
mov
hlt
add
cmp
jne
pop
pop
ret
xor
add
retf
loop
inc
out
aaa
test
and
lods
mov
fs
loop
std
inc
mov
mov
cmp
je
xchg
ret
push
push
mov
mov
adc
out
and
dec
test
je
push
push
mov
push
pop
enter
fld
push
add
inc
mov
dec
movs
add
pop
jp
sub
xor
xor
jne
adc
movs
jae
das
or
jae
dec
sbb
push
sub
jmp
adc
shl
or
pop
add
call
mov
push
lea
lea
mov
lea
jg
push
mov
sub
push
movzx
lds
test
jae
shl
jb
pop
push
repz
sub
mov
pop
aas
sbb
cdq
sub
getsec
cmp
shl
jo
(bad)
mov
xor
push
cmp
je
dec
cmp
sti
ja
inc
xchg
add
shl
pop
sub
sar
pop
pop
ret
mov
inc
add
sub
ret
adc
and
orps
jne
add
jmp
jmp
inc
leave
clc
xchg
ret
cmp
jne
mov
lock
mov
in
mov
test
inc
inc
test
add
adc
fsincos
adc
xor
aam
adc
add
inc
mov
(bad)
out
mov
out
mov
cmp
jae
mov
mov
pop
sar
cmp
into
jb
test
adc
xchg
mov
aas
pop
mov
adc
sub
push
cmp
std
inc
jae
mov
mov
nop
cmp
jne
test
jge
inc
idiv
add
push
mov
adc
jae
mov
mov
cmp
mov
sbb
push
xor
js
inc
add
je
inc
and
repz
ss
mov
xor
add
or
inc
jo
xchg
pop
sub
jmp
mov
bound
test
pop
xchg
ja
dec
js
mov
sbb
adc
adc
jg
and
fist
jg
shl
mov
loope
call
adc
inc
cld
add
jne
lea
mov
lea
inc
mov
push
push
lea
inc
add
(bad)
jne
cmp
add
push
hlt
sub
pop
test
adc
mov
inc
aas
adc
and
aas
or
or
add
adc
sub
retf
mov
les
ret
mov
jge
lea
test
inc
movs
scas
and
fld
and
or
clc
ja
aaa
xor
leave
mov
test
je
inc
and
fst
shl
mov
mov
and
mov
xor
dec
adc
jo
mov
and
dec
cld
aam
pop
inc
retf
push
fcmovb
mov
mov
fiadd
lea
inc
mov
(bad)
dec
cmovae
pop
mov
mov
cmp
jne
and
dec
or
xor
popa
je
pop
push
pop
popf
mov
ffreep
mov
inc
adc
inc
or
inc
retf
dec
add
push
rol
or
or
mov
xor
std
cmp
je
inc
or
jb
xchg
and
aam
or
push
sub
ror
fimul
outs
jb
movq
cmps
mov
das
jne
or
adc
jmp
xchg
mov
inc
or
push
add
adc
inc
add
jne
jbe
dec
lea
aas
add
mov
movzx
cmp
lds
out
dec
and
mov
add
dec
pop
sbb
xchg
cmp
mov
xchg
adc
dec
es
call
adc
cmp
mov
cmova
sub
cmp
cmova
nop
add
mov
mov
daa
push
mov
sbb
sub
ffree
call
push
or
push
stos
add
push
mov
jg
pop
out
sub
xor
sbb
xor
and
ror
inc
xchg
xor
dec
mov
xchg
or
inc
pminsw
loopne
mov
mov
add
sbb
int3
outs
xor
add
das
lds
push
push
movzx
add
adc
or
push
ja
add
mov
mov
xchg
out
jo
xchg
sbb
cmp
pop
shr
and
pop
jmp
icebp
inc
and
xchg
inc
into
jmp
arpl
inc
add
movs
fcomp
scas
pusha
or
adc
jb
cwde
cmp
movs
add
cmp
popa
lock
add
enter
jo
add
cmp
int3
push
push
enter
popaw
dec
push
mov
push
lea
cmp
add
loopne
dec
lahf
and
sbb
sbb
mov
pop
xchg
add
add
inc
lods
lea
mov
inc
shr
pusha
cmps
rcr
inc
xor
ja
pusha
add
add
shr
or
das
lea
(bad)
or
shr
xor
ror
fwait
jbe
ja
mov
(bad)
mov
jno
cmps
and
call
aam
inc
sbb
xchg
mov
pop
mov
inc
outs
enter
ds
ret
int
and
push
mov
icebp
pop
int3
das
lahf
push
call
push
adc
mov
outs
fist
cmp
das
mov
dec
add
add
inc
inc
cld
lea
push
push
jmp
mov
ror
add
lds
in
jg
sub
dec
push
ja
movs
mov
inc
mov
or
orps
inc
jb
or
sub
push
pop
call
mov
push
fild
int3
add
mov
cmp
shl
fcom
inc
mov
mov
jl
iret
call
sbb
test
leave
add
aaa
sbb
(bad)
adc
push
push
jo
in
mov
nop
push
aad
lock
dec
adc
(bad)
mov
mov
stos
push
enter
fnstenv
push
sub
push
aaa
popf
add
mov
test
push
mov
(bad)
xlat
add
jno
jae
(bad)
(bad)
mov
jmp
mov
mov
sbb
in
pop
cmp
je
mov
mov
cmp
jae
enter
xor
push
or
leave
cmp
pop
daa
pusha
fadd
(bad)
push
push
lods
or
pop
add
stc
je
mov
lea
loopne
mov
push
rcr
or
or
and
sub
lock
mov
je
mov
add
add
fcmovnb
mov
xchg
lea
mov
mov
or
ror
xchg
adc
jge
mov
inc
mov
mov
inc
in
mov
mov
aas
ins
add
jne
or
push
in
add
mov
sahf
mov
jle
adc
stc
mov
cmp
dec
xchg
and
jb
mov
mov
lea
cmp
je
mov
cmp
je
mov
cmp
jne
mov
xchg
stos
test
je
outs
out
jmp
sbb
aaa
mov
mov
cmc
add
out
push
inc
je
cmp
mov
sbb
call
inc
sbb
jne
sbb
loope
mov
mov
sbb
lock
add
mov
add
mov
les
dec
add
add
add
and
aas
pop
je
add
jb
push
jb
xchg
retf
or
or
or
inc
dec
retf
mov
add
mov
aaa
mov
aas
nop
cmp
jmp
add
add
fstp
adc
pop
lea
push
sbb
mov
fld
mov
xlat
inc
add
je
add
xor
pop
mov
mov
mov
(bad)
std
pop
push
cmc
inc
add
inc
inc
pop
cmp
jne
mov
xor
loop
stos
pop
cmp
jne
and
adc
mov
add
pop
or
sbb
add
jbe
nop
push
leave
int3
jbe
jns
sbb
xor
inc
cmp
sbb
sbb
sub
jl
add
xor
(bad)
pop
(bad)
fs
dec
inc
leave
je
push
ret
jno
(bad)
ins
inc
push
mov
xor
mov
js
pusha
xor
into
mov
push
jb
inc
into
mov
mov
inc
sbb
sub
sbb
mov
mov
dec
hlt
mov
mov
mov
mov
cld
mov
jne
out
mov
(bad)
jmp
add
or
dec
adc
xchg
ret
sbb
pop
xchg
ret
rcl
jmp
mov
hlt
sbb
fmul
aas
inc
test
pop
push
push
push
or
icebp
lea
mov
lds
or
(bad)
lahf
jp
jmp
add
add
push
test
cld
jmp
adc
add
out
call
int
pop
push
cmp
inc
add
iret
sbb
add
inc
add
outs
scas
mov
mov
loope
or
sub
jbe
je
(bad)
leave
cmp
shl
sub
inc
adc
or
lods
mov
cmp
ja
adc
js
push
inc
mov
sub
cmps
add
mov
or
sbb
daa
jmp
or
clc
mov
mov
out
nop
xchg
cs
mov
or
cmp
movs
jg
clc
mov
mov
aaa
push
or
add
inc
cdq
push
cmp
jne
adc
mov
cli
ja
rcr
add
inc
cwde
cmp
mov
mov
mov
or
sbb
add
pop
lock
call
imul
inc
mov
(bad)
(bad)
dec
inc
push
mov
mov
je
cmp
jg
jl
cmp
(bad)
(bad)
inc
jae
mov
jmp
cmp
jl
jg
cmp
ja
mov
cmp
jg
jl
mov
cmp
adc
sbb
ds
mov
mov
jmp
cmp
jg
jl
cmp
jb
cmp
cmp
cmp
ja
mov
(bad)
outs
inc
cmp
jg
inc
sbb
inc
sub
mov
mov
push
jmp
push
rcr
fnsave
rol
mov
xchg
test
mov
mov
mov
sbb
or
adc
push
push
jmp
lea
retf
push
pop
push
mov
mov
mov
cmp
jl
jg
cmp
(bad)
(bad)
(bad)
push
cmp
jg
jl
cmp
ja
mov
cmp
jl
jg
mov
cmp
jb
mov
jg
adc
jne
xchg
lds
sbb
mov
mov
cld
outs
aas
push
add
jecxz
mov
popa
add
inc
inc
inc
scas
dec
mov
pop
jnp
lea
fild
or
and
or
push
fld
iret
push
mov
or
jno
mov
or
add
icebp
push
(bad)
outs
mov
lea
sbb
fcom
dec
sbb
and
add
(bad)
sbb
inc
or
je
fwait
xlat
dec
(bad)
mov
xor
sub
dec
mov
cmp
inc
test
stos
and
mov
sub
imul
or
mov
inc
jne
or
add
(bad)
int3
push
add
test
or
push
add
inc
push
cmp
adc
push
mov
jbe
mov
mov
pusha
mov
neg
push
push
mov
push
push
scas
loopne
div
lea
ror
xchg
test
test
test
push
rol
adc
dec
dec
add
sub
mov
cmp
repz
cmp
or
and
movq
repz
inc
xchg
mov
call
mov
sbb
inc
and
and
(bad)
(bad)
fild
loopne
lea
push
lea
call
mov
mov
mov
(bad)
out
adc
popa
pop
inc
cmc
push
mov
cmps
pop
lea
and
cmp
rcl
cli
(bad)
invd
test
je
daa
or
enter
jmp
mov
mov
dec
or
pop
lods
mov
or
sbb
and
inc
int3
mov
push
add
dec
mov
pop
(bad)
mov
les
les
bound
rcr
cmp
mov
push
inc
shl
mov
lds
or
cmp
push
mov
mov
mov
add
inc
pop
fs
sub
dec
cld
mov
pop
outs
pop
add
adc
push
dec
push
dec
mov
and
fiadd
push
push
or
jne
sti
sub
nop
cmp
jne
pop
lea
push
inc
adc
add
inc
add
lds
inc
or
inc
cmp
mov
pop
cmp
push
std
jg
sbb
inc
je
dec
je
push
lea
and
and
sar
mov
je
jl
inc
pop
lea
mov
jg
test
sbb
repnz
jle
cld
push
inc
lea
or
mov
cmp
pusha
inc
popf
inc
js
xor
dec
and
xchg
cmc
mov
sub
add
pop
add
mov
inc
sbb
aas
mov
push
mov
mov
lds
xlat
in
push
xchg
jbe
mov
inc
pop
xor
add
adc
inc
add
pop
jmp
ror
je
call
or
inc
fcmovnb
sti
pusha
mov
mov
or
or
adc
mov
mov
pop
dec
add
mov
dec
jne
adc
aas
rol
inc
pop
das
xor
and
jo
in
and
fnsave
xor
jl
fmul
lock
loope
mov
pop
sbb
inc
push
mov
(bad)
fadd
pop
pop
int3
cmp
jne
cmp
jne
cmp
inc
push
jne
mov
ret
xor
jg
and
jg
gs
pop
dec
push
push
xor
mov
dec
pop
clc
icebp
mov
pop
sub
inc
or
fistp
sub
push
mov
jo
mov
out
xor
(bad)
mov
xchg
sti
adc
aad
mov
in
xor
adc
outs
cdq
pop
mov
mov
xor
add
or
jne
in
mov
loopne
in
mov
fcmovnb
sbb
jo
jo
sbb
ins
sbb
pop
push
inc
iret
xchg
mov
cmp
xor
in
mov
pop
daa
in
sbb
jae
and
loope
mov
mov
jmp
mov
es
mov
test
je
(bad)
(bad)
test
in
inc
je
xor
jmp
lods
xor
adc
hlt
add
sub
in
mov
pop
sbb
ja
lea
push
push
push
mov
mov
cmp
pop
jg
sbb
jae
outs
jbe
xlat
call
neg
int3
test
jne
lea
mov
jmp
cmp
je
cmp
je
or
ret
ds
cli
dec
and
lea
out
jle
dec
xchg
cld
dec
jne
pop
(bad)
fbld
push
push
mov
cmp
jl
mov
push
or
lock
cmp
jbe
ror
push
hlt
mov
mov
outs
jp
add
mov
adc
cli
shr
pop
mov
repnz
int3
push
add
in
dec
inc
adc
dec
and
mov
mov
mov
les
mov
sub
lock
ret
jge
and
sub
sti
pop
jg
outs
inc
dec
push
lea
dec
test
inc
jmp
add
dec
pop
cmp
mov
cmp
je
dec
test
jne
and
cmp
cmps
jle
or
inc
dec
dec
cmp
sbb
test
or
ins
stos
mov
les
push
inc
inc
push
ret
daa
mov
and
dec
cmp
add
jl
in
dec
leave
sbb
fild
clc
add
cmp
xchg
ins
aaa
fwait
scas
and
dec
or
jnp
mov
jne
push
pop
pop
xchg
inc
aaa
xor
daa
push
pop
or
mov
and
cmp
aas
aas
movs
adc
aas
lea
call
aas
add
mov
xlat
mov
jne
lea
cmp
adc
sub
inc
jmp
ror
mov
cmp
je
mov
sub
inc
test
cmp
jne
mov
mov
ficom
out
rcr
cwde
and
sbb
pop
outs
push
pop
cdq
add
(bad)
shl
mov
push
mov
mov
mov
test
jno
jge
mov
or
jb
jge
mov
lea
cmp
je
xor
add
les
xchg
and
test
pop
inc
cmp
sub
jns
mov
mov
sbb
push
outs
mov
inc
fadd
pop
adc
inc
adc
cmc
dec
add
add
pop
push
lock
mov
add
call
(bad)
in
add
pop
lea
mov
fcom
aam
and
enter
and
xlat
mov
gs
fist
sahf
pop
mov
mov
call
call
xchg
push
add
cmp
dec
mov
push
push
push
(bad)
jmp
add
iret
ja
pop
sti
push
call
or
inc
adc
in
and
adc
fmul
or
xor
adc
xchg
inc
push
push
mov
add
add
aas
push
adc
ret
jne
xor
rcr
ds
adc
mov
jno
mov
inc
mov
es
pop
cdq
iret
add
push
pop
fist
add
retf
add
and
sub
adc
fld
loopne
test
lea
push
out
jne
sub
pop
pop
(bad)
and
jnp
dec
mov
test
sub
js
add
in
sub
add
fdiv
fld
push
and
stos
push
mov
adc
sub
test
adc
in
mov
xor
jmp
outs
lea
mov
mov
push
lea
(bad)
inc
shr
fmul
adc
je
and
dec
fmul
ds
mov
inc
fdivr
push
push
add
adc
inc
les
movs
sub
out
mov
hlt
pop
jmp
jge
jge
add
add
gs
rol
cli
mov
movs
cld
fld
je
mov
cmp
mov
out
sub
adc
adc
call
xor
sbb
sub
out
or
and
add
(bad)
jo
add
popa
cli
xor
hlt
(bad)
fcomp
icebp
in
dec
mov
mov
mov
inc
mov
mov
and
sbb
int
sbb
pop
push
push
cmp
mov
xor
cdq
jb
cdq
or
or
mov
ret
pop
xabort
mov
push
mov
inc
(bad)
in
xchg
add
mov
(bad)
test
adc
jo
push
push
cmp
inc
add
sub
lea
mov
or
or
les
in
dec
push
dec
pushf
add
mov
adc
mov
mov
mov
mov
test
je
push
jmp
sub
add
movzx
pop
lods
stos
or
pop
test
dec
not
jbe
(bad)
add
inc
jo
add
loope
in
cmp
mov
ins
call
xor
ins
inc
inc
cmp
int3
push
xor
jmp
xlat
or
cwde
add
sar
mov
push
in
or
add
or
sbb
pop
mov
xor
(bad)
loop
cmp
cmc
(bad)
jmp
add
cmp
pop
dec
cmp
jae
cmp
jne
mov
mov
mov
(bad)
and
iret
popa
icebp
(bad)
jo
xchg
add
mov
xlat
out
mov
jne
scas
or
inc
inc
std
mov
lea
adc
push
ret
push
push
push
mov
sbb
retf
jp
push
rol
sbb
mov
sbb
or
mov
add
add
adc
inc
add
fistp
mov
jne
rcl
xor
dec
push
inc
push
test
mov
cmp
sbb
cld
fmul
xlat
mov
int
test
pop
js
adc
call
fwait
loop
leave
jns
(bad)
push
sub
inc
and
xchg
add
loopne
shl
dec
adc
or
sub
and
mov
in
cmp
or
pop
in
cmp
mov
jo
cli
sti
lea
mov
push
push
pop
or
and
jmp
out
or
test
cmp
mov
sub
(bad)
call
or
mov
dec
jle
sbb
adc
lea
sbb
test
adc
sbb
cld
scas
or
pusha
test
jne
jbe
mov
jo
push
mov
pop
mov
pop
mov
mov
add
shl
and
mov
push
mov
mov
jno
fadd
(bad)
call
mov
add
jb
leave
(bad)
aad
pop
sbb
jo
mov
lods
les
mov
dec
push
xchg
mov
push
xlat
(bad)
aas
mov
sub
mov
mov
sbb
mov
sub
(bad)
enter
sti
out
add
cmp
and
fcomp
scas
and
aaa
add
out
adc
pop
aas
or
in
int3
add
add
push
call
rcl
mov
mov
hlt
mov
mov
adc
fmul
inc
mov
xchg
inc
rol
lahf
mov
(bad)
es
add
rcl
fist
pop
add
(bad)
fist
push
(bad)
cmp
je
lea
mov
cmp
je
sbb
mov
or
adc
mov
jp
push
rcl
repnz
sbb
jmp
loopne
or
fmul
push
shl
sub
and
push
pop
movsx
push
jmp
mov
inc
and
ror
mov
add
in
test
mov
lea
adc
mov
jbe
or
fcom
jae
daa
popa
fsubr
mov
outs
jl
test
pop
or
mov
je
add
sahf
add
fs
mov
in
mov
mov
xor
sub
cdq
mov
mov
inc
cdq
or
or
mov
mov
sub
and
mov
test
add
push
pop
ja
adc
push
mov
sub
mov
jo
and
mov
lea
mov
sbb
(bad)
push
add
push
enter
test
push
add
xchg
adc
sub
push
push
xlat
jno
sar
or
jge
add
call
jno
mov
mov
cmp
add
and
xor
adc
sub
jle
rcl
or
sbb
mov
fsub
dec
xchg
inc
jmp
or
fcomp
jge
je
add
jo
mov
bswap
mov
inc
sar
(bad)
mov
inc
fmul
je
or
sar
mov
mov
mov
mov
das
and
add
pop
add
aaa
lds
movs
cmc
pushf
push
call
mov
mov
test
adc
shr
inc
je
push
clc
pushf
mov
mov
test
(bad)
lea
adc
call
(bad)
out
sbb
icebp
and
sbb
jl
push
aaa
sti
and
fsubr
mov
add
in
xchg
ret
dec
dec
lea
pop
ficom
in
push
je
out
mov
push
fbstp
dec
lea
mov
stos
shr
add
hlt
adc
cli
out
adc
pop
mov
jge
mov
sti
pop
mov
sar
mov
inc
movs
sbb
jge
inc
loopne
sbb
mov
cmp
je
mov
xchg
add
cmp
dec
in
or
popa
jno
mov
sar
sub
sub
mov
lods
ror
test
outs
call
pop
dec
je
call
(bad)
loope
and
(bad)
call
dec
cld
jmp
push
adc
inc
cmp
sbb
inc
out
into
out
jns
fdiv
aaa
ins
in
push
mov
and
add
clc
leave
lods
add
inc
xchg
jge
xchg
std
ins
lea
xor
loope
xor
or
bt
dec
cld
inc
fmul
cmp
jge
aad
mov
mov
pop
sub
mov
sub
test
cmp
cld
pop
and
sub
into
repnz
std
pop
and
inc
dec
je
dec
je
mov
je
and
adc
and
and
dec
mov
mov
sub
jl
sbb
pop
dec
cdq
xor
jmp
sbb
inc
in
mov
cmp
je
lea
add
aas
iret
jge
push
into
mov
add
lock
fld
inc
imul
jp
dec
jl
nop
ret
dec
mov
add
xor
add
in
lahf
jno
push
dec
lock
or
jae
lods
js
jp
pop
sbb
xchg
sbb
aaa
push
sar
mov
mov
mov
mov
add
call
sbb
adc
div
cmovno
adc
cmovl
mov
sub
pop
pop
push
jne
adc
out
mov
mov
dec
cmp
jge
mov
mov
data16
fild
clc
mov
mov
pop
movs
jge
rol
outs
or
hlt
inc
dec
add
pusha
inc
outs
lock
mov
cmp
je
xor
adc
pop
cvtps2pd
pusha
adc
adc
fsub
mov
or
pop
shr
arpl
push
in
ror
add
push
mov
lock
mov
(bad)
retf
jle
adc
jo
dec
jnp
call
call
in
inc
sbb
pop
mov
dec
test
inc
mov
xor
jb
mov
stos
pusha
imul
inc
add
test
ds
push
iret
push
cld
mov
cmc
je
mov
rcl
adc
mov
movs
jl
add
retf
jg
add
mov
cmp
rol
push
jne
adc
rcl
jne
add
add
cli
push
or
stos
or
jmp
adc
iret
inc
cmp
inc
sahf
add
mov
push
lock
mov
call
inc
and
dec
adc
popf
sbb
inc
fwait
inc
add
add
push
mov
inc
int3
clc
xor
dec
or
jp
mov
dec
xchg
or
pop
push
inc
test
lahf
cmp
aaa
push
inc
mov
fs
shl
iret
andnps
push
(bad)
mov
sbb
je
mov
sti
xor
jp
and
mov
cld
push
add
and
adc
pop
or
push
cmp
add
pop
lods
sub
ret
aas
inc
movs
daa
stos
add
adc
aas
adc
in
sbb
xor
scas
das
add
sub
pushf
mov
push
push
test
loope
int3
fbld
dec
dec
add
sub
and
lea
lea
aas
jp
arpl
in
inc
sbb
fist
bound
and
je
repz
jg
out
push
mov
push
mov
mov
cmp
jae
push
sub
iret
ja
xor
cmp
(bad)
adc
dec
arpl
mov
lea
add
add
add
sub
push
call
clc
and
cmps
(bad)
aas
nop
(bad)
push
push
lea
mov
mov
push
ret
jmp
push
adc
nop
mov
push
add
and
lea
(bad)
cmp
neg
in
push
lea
xor
inc
test
mov
or
pop
jne
jne
inc
and
dec
fucomi
add
scas
add
test
aas
popa
mov
jne
add
or
cmp
xchg
jo
push
mov
xor
inc
push
call
mov
xor
loop
push
call
in
add
lahf
in
pop
mov
cmp
je
and
push
mov
push
call
call
cmp
(bad)
lock
sti
(bad)
js
mov
push
mov
add
xor
push
push
mov
call
jg
inc
lock
call
add
inc
add
add
sbb
dec
mov
dec
mov
lock
pop
std
and
adc
inc
cld
aas
push
add
into
fsubr
aas
pusha
add
adc
push
(bad)
sbb
push
push
dec
or
fldenv
push
loopne
inc
popa
add
or
inc
cmp
push
call
lahf
call
sbb
push
add
mov
pop
cli
jae
scas
push
mov
push
aas
mov
daa
or
push
adc
mov
clc
out
and
push
out
xor
xor
push
pop
shl
call
rol
jbe
shl
push
test
test
dec
cmp
mov
ret
das
sbb
add
mov
or
pop
push
add
sub
pop
adc
idiv
jne
pop
add
push
mov
sbb
rcr
ret
or
or
xor
sub
ffree
adc
sub
mov
mov
lahf
pop
add
add
sbb
cmp
lea
push
mov
call
loopne
inc
call
movs
sbb
lds
add
pop
mov
push
or
ret
mov
pop
fld
clc
call
mov
mov
mov
call
push
es
mov
ret
mov
fsubr
add
fisttp
lea
push
mov
add
mov
mov
rcl
arpl
pop
pop
mov
aas
and
mov
push
push
mov
mov
lds
or
pop
out
cmp
cmp
add
pusha
and
pop
mov
dec
and
lahf
sub
(bad)
push
std
push
mov
lea
aas
adc
add
retf
mov
mov
call
adc
mov
imul
jnp
adc
adc
dec
retf
imul
xchg
jb
mov
push
inc
rcl
cmp
inc
rcl
(bad)
jg
push
jmp
jne
and
in
add
pop
inc
push
cmp
push
enter
push
inc
lods
xor
jno
mov
(bad)
out
ds
sahf
jne
xor
jge
push
pushf
push
mov
lea
push
movs
daa
adc
jge
cmovg
cmp
mov
cmovg
add
add
pop
cmp
pop
mov
inc
mov
push
add
adc
jne
mov
add
int3
push
cmp
push
mov
mov
test
je
mov
push
call
outs
mov
xor
imul
fstp
xchg
test
sbb
lea
mov
add
jg
push
lea
mov
jne
mov
lea
push
(bad)
inc
pushf
push
push
or
ret
add
call
(bad)
cmp
jae
mov
add
lahf
and
(bad)
cmp
jb
push
mov
movs
inc
mov
or
adc
movups
adc
add
imul
xchg
sub
push
add
and
jmp
push
add
push
ret
loope
add
add
sub
or
ds
push
pop
pop
pop
adc
ret
cmp
push
rol
popfw
adc
push
rol
ror
ja
(bad)
mov
add
dec
std
mov
clc
or
sub
sbb
add
in
sbb
mov
sub
lahf
xchg
shr
mov
add
or
lahf
ins
mov
dec
inc
xchg
inc
sbb
and
pusha
adc
mov
or
cmp
xor
and
pop
cmp
das
dec
mov
jg
mov
cmp
mov
call
idiv
mov
inc
sbb
shl
ror
add
mov
sbb
in
or
lea
sub
pop
in
push
mov
add
or
ss
push
call
or
mov
inc
push
xor
adc
sbb
ins
or
mov
inc
(bad)
mov
mov
test
inc
je
jb
or
fs
or
xchg
ins
adc
adc
fist
pop
and
push
cmp
ja
mov
rol
push
add
jecxz
jb
das
dec
icebp
mov
rcr
inc
ret
adc
jne
inc
push
pop
add
add
sub
xchg
ins
mov
pop
aad
add
sub
or
add
cmps
imul
icebp
cs
push
iret
mov
or
pop
rol
test
pop
inc
fwait
mov
mov
push
push
mov
(bad)
jg
pop
jb
addsd
cvttsd2si
sub
test
jle
into
jle
pop
stc
or
pushf
mov
dec
jp
std
test
jg
adc
xchg
cmp
int3
sub
popf
dec
and
jg
mov
mov
mov
xor
cmp
inc
rol
sbb
inc
lods
or
aam
test
adc
add
add
es
das
das
mov
mov
cmp
dec
sub
push
pop
jle
inc
mov
mov
add
or
mov
inc
add
push
in
adc
hlt
cmp
lea
pop
inc
pop
aam
pop
mov
adc
adc
inc
sub
(bad)
sbb
arpl
push
mov
sbb
add
loope
or
ins
xchg
push
cmp
sbb
add
pop
adc
mov
jo
xor
push
add
jno
int3
add
add
adc
xor
mov
cmp
jge
je
hlt
jne
xor
int3
add
jne
mov
inc
adc
pop
jge
in
popa
push
push
push
push
and
inc
int3
pusha
mov
mov
cmp
jle
lea
mov
call
ja
adc
jge
mov
mov
push
pop
mov
je
inc
push
inc
and
mov
pop
add
or
inc
pop
pop
sub
push
in
icebp
cmp
je
cld
inc
cmp
push
pusha
pop
and
or
add
mov
mov
push
or
pop
mov
jle
mov
pop
das
inc
adc
xor
aam
sbb
in
sbb
or
pusha
push
daa
jmp
mov
sbb
mov
inc
fcom
inc
pop
sub
inc
mov
or
dec
aad
pop
or
mov
mov
mov
mov
ror
shr
test
je
push
fild
std
or
je
push
jmp
bound
retf
leave
sbb
mov
mov
stc
mov
imul
push
mov
push
(bad)
dec
push
les
or
fild
or
adc
(bad)
push
shr
inc
jo
inc
xchg
sub
lods
call
je
lock
inc
xor
test
add
pop
aad
add
stc
mov
mov
adc
cmp
sbb
adc
push
aas
cs
lock
into
mov
in
cmp
cdq
add
pop
enter
mov
enter
hlt
outs
mov
push
add
add
push
sub
push
or
adc
add
ja
adc
mov
mov
mov
inc
inc
add
push
push
mov
cmp
aaa
ins
and
mov
adc
or
ret
inc
enter
jb
dec
rcl
jmp
mov
fisttp
aas
push
push
loopne
mov
pop
popa
jae
lea
mov
push
mov
and
xor
pop
jb
aad
dec
sub
je
mov
push
mov
and
or
mov
(bad)
pop
xchg
jmp
mov
fdiv
mov
dec
mov
dec
lock
adc
ror
lock
jle
imul
mov
add
or
into
pop
mov
dec
sub
call
arpl
inc
add
adc
(bad)
add
inc
(bad)
jne
pop
cmp
in
dec
or
lock
clc
jl
lea
ja
(bad)
dec
aas
add
cmp
cmovae
vpsubb
retf
scas
sbb
scas
or
jecxz
inc
push
and
cmp
push
loope
mov
jl
mov
cld
push
mov
push
in
jo
(bad)
xchg
adc
sbb
add
fistp
sbb
push
inc
add
xor
cmc
icebp
xor
fdiv
add
cmps
add
mov
fadd
push
in
cmp
jmp
fist
mov
jge
ja
pop
adc
or
inc
loopne
sar
pop
pushw
mov
lea
mov
into
rcl
inc
in
jne
push
fild
add
rcr
add
arpl
fcomp
add
aas
pop
sbb
push
cmovl
clc
jg
fdivr
mov
cmp
jl
dec
mov
xor
jge
push
test
sbb
or
sbb
xchg
or
adc
ins
dec
push
rcr
push
mov
mov
add
fst
or
pusha
rol
pop
sbb
fild
(bad)
push
dec
je
add
mov
mov
mov
out
or
cmp
mov
inc
adc
shl
dec
iret
sub
push
push
fadd
pusha
jmp
sti
cmp
cmc
pop
and
stc
mov
mov
mov
add
out
icebp
dec
or
pop
movs
test
popa
and
out
outs
out
or
and
in
in
adc
stos
mul
push
(bad)
mov
mov
mov
mov
fisttp
loope
ficom
mov
and
fmul
xchg
inc
retf
mov
adc
mov
mov
jno
mov
inc
les
jg
inc
sahf
add
add
inc
inc
enter
ins
push
inc
sahf
pop
mov
(bad)
push
rcpps
push
cmp
inc
enter
iret
add
mov
inc
call
cmp
jb
(bad)
fucomp
mov
test
jne
add
and
mov
or
cdq
mov
mov
cmp
clc
fmul
ror
cs
cdq
cmp
jne
imul
test
jg
or
push
out
push
adc
push
push
(bad)
loopne
test
fadd
inc
mov
dec
sub
cmp
(bad)
ret
js
mov
cmp
mov
push
adc
cdq
loopne
fwait
enter
pop
xchg
pushf
xor
es
pop
mov
outs
push
out
sbb
jb
inc
enter
mov
ins
dec
and
add
or
bswap
je
jb
mov
ret
sbb
jmp
lods
jbe
dec
mov
pusha
and
and
imul
push
jmp
jbe
fwait
dec
mov
test
push
test
adc
push
call
xchg
inc
icebp
adc
inc
mov
add
or
pop
jl
push
neg
push
fcom
cmp
jle
or
and
mov
stos
jg
js
sub
adc
jne
mov
movs
sbb
add
add
jge
mov
sbb
sub
jmp
jnp
and
inc
mov
dec
fist
or
stc
mov
outs
ror
push
add
pop
jmp
jo
das
(bad)
jp
mov
(bad)
adc
(bad)
mov
push
mov
cmp
or
loop
(bad)
cmp
mov
jge
mov
mov
and
dec
jge
loope
ja
out
add
call
outs
mov
rcl
es
mov
mov
(bad)
(bad)
call
jmp
ror
jge
mov
mov
add
push
cmp
outs
rol
adc
push
cmp
movups
sub
mov
movd
cvtdq2pd
pop
pop
popf
jbe
movaps
scas
sbb
adc
adc
divsd
xor
add
mov
pop
inc
dec
or
lock
leave
dec
mov
or
pop
pop
dec
enter
dec
or
call
inc
push
push
xor
icebp
or
inc
sahf
sbb
pop
push
aam
sbb
push
mov
push
push
pop
inc
outs
rol
dec
mov
and
cs
mov
push
fst
push
or
dec
add
(bad)
jmp
and
mov
mov
mov
xor
je
mov
cs
nop
cmp
push
in
dec
pop
out
cmp
or
int3
or
mov
jo
(bad)
jl
add
jae
mov
adc
test
push
inc
and
mov
sbb
in
(bad)
clc
je
ret
sub
push
push
(bad)
rol
and
push
add
adc
dec
cmc
inc
in
pop
mov
or
inc
cmp
sbb
pop
add
aad
test
sar
inc
test
inc
mov
cmp
std
mov
dec
dec
or
call
lods
dec
call
repnz
mov
add
add
movs
cmp
xchg
gs
or
mov
leave
jge
jbe
pusha
cdq
add
aas
int3
sub
dec
and
icebp
sar
xor
test
add
mov
sar
fs
jnp
rcl
lock
push
clc
mov
enter
fisttp
push
mov
mov
push
mov
push
mov
mov
mov
rcr
pop
call
inc
lock
xor
jmp
retf
add
pop
fld
push
in
inc
mov
or
lds
es
and
inc
or
inc
sub
mov
loop
mov
movs
das
sub
fsub
xor
or
sti
jmp
jl
jg
pop
adc
push
push
je
and
sbb
mov
add
add
sar
dec
cmp
paddd
cmp
movapd
stos
mov
sub
subsd
sbb
call
push
or
add
and
fstp
xor
lods
adc
sub
jmp
inc
lock
int3
sub
pop
or
(bad)
jle
mov
jmp
inc
into
inc
mov
sub
mov
ror
sar
nop
or
mov
pop
pop
ret
cmp
mov
sbb
add
(bad)
pop
pop
hlt
mov
jmp
mov
sub
sar
dec
cmp
jbe
fld
sub
sbb
lds
xor
jg
push
clc
mov
mov
sub
dec
pop
in
inc
fld
ror
stos
push
mulsd
neg
pop
retf
adc
fnstsw
add
mov
dec
ins
fadd
clc
jns
fstp
fidiv
mov
adc
xchg
jne
pop
out
iret
out
int3
cs
jecxz
mov
sbb
add
inc
jno
fist
push
cmp
dec
xor
mov
cmp
dec
xchg
jne
nop
cmp
push
pop
fwait
js
jno
mov
call
or
cmps
retf
lahf
push
or
sar
mov
pop
adc
stos
sub
mov
push
xor
hlt
mov
inc
lock
push
mov
push
adc
ins
iret
mov
xlat
or
(bad)
push
add
and
adc
mov
ret
call
call
push
sbb
sub
mov
mov
push
mov
push
xchg
fadd
ds
test
fiadd
adc
(bad)
rol
pop
into
stc
adc
sbb
sbb
add
call
les
in
inc
or
add
dec
lods
add
xchg
das
push
sbb
scas
fadd
outs
fbstp
dec
je
inc
push
jb
mov
mov
jno
stos
mov
mov
cmp
fwait
(bad)
mov
mov
mov
mov
sti
xorps
xchg
sqrtps
jne
pop
outs
jp
enter
adc
sub
aas
jb
add
xor
sbb
inc
or
adc
sub
aaa
lahf
outs
mov
leave
adc
pushf
jle
fld
pop
mov
stos
ret
cmp
rcr
dec
sub
jae
js
cs
popf
outs
test
inc
xor
push
push
push
mov
daa
add
mov
sbb
inc
push
add
jae
jmp
movs
je
and
(bad)
pop
movs
addr16
arpl
scas
inc
add
inc
movs
mov
mov
test
jne
mov
test
iret
pop
je
mov
xor
inc
add
xor
aad
xchg
dec
add
cmp
xor
rcl
push
dec
mov
inc
aad
push
daa
adc
dec
popf
cmp
mov
cmova
push
mov
idiv
jb
push
mov
rcr
or
push
mov
mov
test
add
add
scas
not
inc
mov
inc
add
(bad)
adc
inc
(bad)
(bad)
or
pop
mov
mov
cdq
sub
mov
mov
dec
xchg
aam
dec
mov
push
push
push
stos
push
or
or
cld
ja
inc
shl
not
jae
mov
mov
jmp
add
and
push
mov
push
push
mov
(bad)
cmp
jb
mov
fistp
int3
add
inc
out
jne
dec
cmp
jae
mov
add
ror
into
lock
sbb
pop
sbb
mov
(bad)
mov
or
mov
and
sub
or
mov
idiv
(bad)
push
jmp
(bad)
fsub
xor
push
push
mov
call
sbb
pop
les
inc
pop
popf
adc
sar
inc
and
sbb
or
mov
add
mov
adc
add
push
mov
aam
fcomp
push
loopne
sar
mov
bound
inc
les
test
je
mov
mov
cs
pushf
sub
jecxz
bound
push
test
mov
loopne
into
inc
aam
cmp
in
js
dec
mov
inc
push
jne
add
lock
call
add
dec
loopne
add
xor
dec
dec
mov
lods
popf
scas
adc
test
(bad)
mov
or
lods
jmp
inc
mov
ja
push
mov
xor
mov
adc
or
aas
inc
or
cmp
sub
push
inc
and
loop
cmp
jb
jb
push
mov
mov
mov
add
or
mov
push
or
out
jg
mov
cmp
jne
or
out
bound
mov
inc
ja
inc
stc
out
outs
adc
push
gs
push
and
dec
inc
sar
or
and
dec
push
and
and
scas
sub
imul
xor
inc
push
mov
cli
call
xchg
(bad)
mov
inc
cmp
xor
mov
jb
pop
aaa
add
or
mov
pop
or
cwde
imul
loop
jecxz
std
dec
cmp
mov
pop
add
mov
aad
add
cmp
xor
jns
cmp
add
(bad)
test
in
jle
iret
pop
pop
mov
stos
push
cmp
cdq
out
psubsw
pop
pop
jne
and
jmp
or
or
jne
add
adc
fild
jne
mov
inc
ins
loopne
xchg
add
mov
cmc
and
sub
or
rcr
stos
cmps
mov
or
pop
es
adc
pop
add
push
inc
arpl
pushf
add
ror
call
fistp
cld
mov
setne
push
push
push
mov
mov
adc
add
lea
and
inc
les
cmp
idiv
cmp
(bad)
mov
cmps
push
inc
xor
and
sub
sub
xchg
push
test
lock
daa
add
sub
or
dec
bound
add
loopne
add
mov
and
inc
aam
xchg
and
js
sbb
inc
into
push
daa
ins
or
or
in
xor
lahf
das
iret
sbb
mov
ja
mov
mov
sub
jg
and
push
(bad)
arpl
adc
mov
fs
inc
lds
xchg
pop
jmp
je
sub
push
sub
ins
test
push
push
sub
mov
push
iret
cmps
and
andps
sub
inc
sub
add
clc
add
cmp
call
pop
jae
add
loop
popa
add
add
icebp
xchg
jle
lahf
pop
arpl
jmp
sbb
and
lahf
push
bound
sub
sti
jmp
cwde
stos
pop
push
push
push
mov
mov
push
jb
inc
inc
std
std
jg
shl
inc
clc
xor
push
lea
mov
leave
rcl
adc
or
das
sbb
aam
dec
mov
jge
add
sar
jge
mov
ins
inc
nop
inc
jmp
or
ret
mov
and
cmp
mov
fs
jecxz
shl
fild
in
sbb
in
mov
add
mov
or
fmul
add
adc
fmul
hlt
(bad)
(bad)
inc
inc
cld
cmp
jg
jl
cmp
jae
mov
sub
mov
lea
sbb
jne
mov
cmp
in
pushf
jmp
xor
sbb
mov
mov
mov
push
div
jmp
mov
mov
or
inc
lock
add
xchg
lea
jmp
push
mov
or
popa
call
mov
adc
mov
in
mov
je
push
lea
dec
mov
dec
cmp
(bad)
pop
push
sub
mov
push
jbe
jg
retf
call
stos
add
fadd
jle
or
stos
dec
es
je
mov
in
push
mov
stos
or
add
cdq
jbe
sub
add
xor
ror
nop
outs
int3
adc
popa
pushf
call
xchg
jge
cmp
je
push
inc
fild
jne
sub
push
inc
and
xor
mov
mov
sar
or
and
sti
jne
jge
push
ins
sbb
add
dec
sub
xchg
xor
inc
or
add
add
mov
mov
push
stos
add
pop
xor
mov
pop
inc
or
inc
adc
sub
adc
mov
adc
ror
pop
sbb
mov
neg
mov
lea
std
and
push
fs
cmc
sub
adc
mov
mov
push
sbb
rol
push
mov
mov
pusha
les
dec
enter
test
loopne
(bad)
psubb
mov
lahf
sbb
lock
lock
dec
fcom
icebp
mov
imul
inc
rcr
cwde
ins
mov
dec
ss
(bad)
add
mov
test
jmp
mov
adc
and
test
or
js
dec
push
popa
add
mov
sub
inc
mov
or
enter
test
out
mov
cmp
ja
mov
sub
call
sub
xor
mov
and
add
mov
(bad)
push
adc
lods
dec
fimul
add
mov
sbb
sbb
repz
inc
sbb
pop
push
push
je
add
test
and
mov
add
inc
out
dec
lahf
mov
and
mov
inc
add
cmp
jne
popa
push
rcr
call
xor
add
outs
push
lea
test
std
or
aam
push
fucomi
sbb
sbb
ss
dec
sub
nop
adc
cmp
(bad)
(bad)
push
or
add
inc
xlat
nop
imul
add
fnstsw
push
inc
add
sub
leave
cs
pop
mov
mov
add
or
data16
cld
mov
mov
mov
add
sub
rol
inc
loopne
je
sahf
mov
jne
lea
pop
mov
adc
ret
arpl
call
pop
mov
push
push
mov
or
mov
sub
or
xor
mov
cmp
je
inc
(bad)
scas
cmp
lea
cmove
pop
mov
(bad)
mov
inc
hlt
and
xlat
and
sbb
xor
loope
sbb
ss
jns
xor
test
mov
pop
mov
jne
addr16
ja
mov
neg
xchg
aad
mov
sub
pop
push
push
mov
push
add
dec
clc
jb
fcom
aam
xor
lock
shl
push
add
je
mov
cmp
je
jecxz
(bad)
inc
cmp
je
cmp
jmp
mov
cmp
je
cmp
jne
dec
inc
inc
f2xm1
jg
scas
dec
dec
mov
ret
xor
test
pop
pop
sete
pushf
push
adc
sub
(bad)
ffree
pop
in
cmp
jne
inc
dec
xor
jne
push
pop
test
test
jne
or
je
(bad)
in
leave
dec
push
popf
cmc
cmc
fild
arpl
and
div
in
pop
in
call
enter
outs
and
idiv
sub
add
(bad)
fdivr
push
in
or
fs
dec
push
sub
mov
sbb
rol
add
leave
je
add
test
mov
add
inc
rol
add
push
add
mov
mov
mov
xor
aam
ds
ds
mov
add
pop
sar
mov
leave
and
xor
push
test
mov
xchg
test
ficom
adc
adc
add
mov
push
push
xor
(bad)
dec
sbb
mov
mov
lea
cmp
jg
or
iret
mov
mov
(bad)
(bad)
jmp
dec
and
cmp
ja
jmp
mov
inc
movzx
and
shl
or
cmp
adc
jge
and
jmp
mov
jg
out
pop
mov
sub
or
sbb
scas
add
test
mov
cmp
(bad)
push
jl
mov
and
cmp
jne
cmp
jne
test
jle
cs
jl
and
adc
(bad)
inc
add
mov
inc
cmp
ja
lods
mov
jl
add
stc
push
mov
out
sub
dec
lock
mov
dec
(bad)
inc
xor
xor
add
jne
and
inc
aad
sub
jg
mov
sbb
mov
clc
cmp
jge
sub
xchg
pop
(bad)
aas
add
ja
fistp
jl
mov
sub
mov
cmp
or
xlat
xor
xor
xor
ror
mov
aaa
xor
test
aas
push
mov
add
mov
add
pop
pop
sbb
aas
sbb
pop
test
pop
pop
add
add
mov
jb
or
jg
and
push
mov
aad
test
jmp
add
jmp
push
mov
pop
shl
lea
shl
popf
sbb
jmp
push
xor
(bad)
div
mov
clc
add
sar
add
mov
test
jmp
fstp
inc
mov
pop
or
in
jmp
test
xchg
pop
in
sbb
hlt
(bad)
call
add
xor
cs
je
sub
inc
adc
data16
call
dec
xchg
dec
(bad)
fdiv
add
dec
mov
push
mov
pop
daa
dec
ror
out
and
lea
mov
dec
mov
das
sbb
dec
or
inc
mov
call
push
add
shl
mov
lock
loopne
shl
outs
mov
or
add
call
sub
mov
cmp
jge
mov
sbb
mov
shr
dec
lock
mov
fwait
cli
sti
jg
or
mov
lea
shl
sbb
lock
aad
inc
add
lds
rcr
sti
(bad)
jg
sti
jbe
mov
sub
jmp
xor
sub
je
outs
xor
push
cmp
shr
mov
mov
shl
or
push
dec
shr
sbb
pop
or
pop
mov
cwde
jae
and
push
fucomp
into
add
stos
pop
clc
cwde
cld
cs
popa
loopne
or
in
and
stos
jg
ret
xor
movsd
cwde
aaa
call
leave
mov
mov
mov
mov
dec
hlt
pop
dec
mov
add
stos
sbb
mov
add
popf
xor
ss
fmul
popa
xor
dec
mov
add
inc
push
add
lahf
add
add
outs
add
mov
push
or
enter
mov
in
inc
std
dec
add
ror
dec
rol
push
jecxz
push
test
push
dec
or
dec
in
adc
dec
adc
add
mov
sub
add
jno
inc
lock
mov
push
add
dec
cmp
rcr
neg
test
push
pop
or
test
jle
mov
xor
fs
mov
push
push
push
cmp
push
add
mov
push
xchg
mov
adc
xchg
mov
mov
fnstcw
pop
inc
sbb
test
push
mov
jl
test
push
push
push
dec
dec
cmp
jne
clc
jg
outs
or
adc
fstp
pop
in
jle
mov
dec
lock
jne
adc
jg
add
add
(bad)
mov
in
jl
mov
mov
mov
mov
cmp
jge
pop
idiv
adc
mov
push
jne
mov
xor
les
test
jmp
cmp
jge
jbe
sbb
lahf
std
pop
push
or
cmp
xchg
jle
or
les
pushf
iret
xlat
xor
mov
idiv
dec
xorps
movsd
test
jns
sbb
jne
mov
dec
pop
add
xchg
jg
add
inc
imul
in
(bad)
pop
mov
xor
inc
jle
xor
add
add
je
adc
mov
pop
inc
loopne
dec
std
rcr
outs
mov
adc
call
aaa
add
lea
lea
add
mov
lea
cmp
jne
cli
aas
mov
jbe
mov
sub
(bad)
jmp
out
or
add
add
rol
inc
mov
add
or
mov
sbb
aas
or
and
dec
add
test
sbb
add
push
aam
inc
cmc
mov
push
push
dec
mov
add
sbb
dec
(bad)
shl
mov
or
mov
shr
jmp
(bad)
jg
gs
mov
test
mov
setne
or
inc
inc
mov
jmp
mov
pop
cmc
jo
ss
add
jae
loopne
mov
cmp
cmps
jg
pop
lea
or
(bad)
in
push
lea
dec
lods
mov
push
push
sub
shl
sub
sub
mov
(bad)
dec
pop
xor
dec
adc
ror
push
xor
lods
or
(bad)
mov
xor
inc
popf
pop
mov
lea
sar
(bad)
jbe
mov
js
dec
shl
push
ss
(bad)
(bad)
mov
in
mov
mov
add
mov
add
mov
lea
(bad)
mov
add
mov
mov
inc
adc
fmul
add
mov
call
pop
xor
sub
sbb
sub
mov
sbb
add
lea
dec
add
and
add
cmp
jb
mov
sub
(bad)
jg
add
shr
cmp
cmova
mov
xor
outs
jmp
(bad)
push
dec
cmps
dec
mov
rcr
jl
inc
jb
xor
add
lea
dec
cmp
je
mov
sbb
in
mov
jo
push
(bad)
cmp
fmul
adc
or
pop
mov
sbb
rol
cmp
inc
jne
out
jp
add
or
sub
and
shl
outs
sub
test
push
es
clc
daa
add
pop
mov
loope
xchg
clc
mov
int
mov
sub
adc
call
sar
cmp
jge
inc
sbb
add
daa
lock
shl
pop
push
push
push
sti
stos
and
cld
dec
cld
add
ret
push
push
scas
xor
push
sub
lock
or
(bad)
dec
icebp
mov
mov
lea
inc
mov
test
jne
mov
test
push
daa
xchg
push
pop
xor
fs
sbb
xchg
fwait
add
mov
cmc
mov
pop
dec
(bad)
pop
mov
mov
dec
push
lea
push
lea
aas
jo
in
out
jbe
test
cld
mov
movs
mov
shr
mov
mov
adc
lods
adc
inc
add
je
or
sub
sbb
add
mov
or
pop
mov
add
cmp
jle
mov
mov
ja
sub
shl
lea
shr
or
jmp
mov
fwait
in
or
adc
movd
and
out
pop
push
lock
mov
mov
addps
or
fisub
sub
or
jb
cmps
sti
adc
cmp
mulsd
pop
jb
mov
cmps
ja
aas
pcmpeqd
pop
cmps
fcomi
dec
sub
ret
sub
add
xor
sbb
or
add
pop
mov
add
bound
das
jmp
jbe
rcr
sub
dec
push
ins
(bad)
mov
jmp
mov
neg
xor
push
mov
js
jle
push
adc
inc
mov
mov
jmp
sub
imul
in
neg
mov
sub
cmp
jle
cmp
mov
jle
and
imul
inc
add
call
inc
in
mov
es
jmp
mov
out
and
dec
add
mov
test
cmovle
lds
shr
jmp
scas
push
add
rol
dec
mov
jmp
cmp
loopne
fwait
push
in
pushf
or
push
mov
into
push
ins
dec
adc
mov
mov
cmp
ja
mov
dec
mov
movaps
mov
fs
push
mov
ror
jns
and
call
loope
jp
sbb
clc
add
adc
lar
pop
push
sbb
inc
shl
and
out
push
pop
inc
pop
adc
loope
(bad)
out
mov
xor
fmul
cmp
dec
cmp
xchg
push
xor
pop
movaps
gs
enter
inc
or
jmp
cmp
aaa
sbb
out
jbe
test
(bad)
pop
cld
sar
mov
fisub
rcl
(bad)
pop
mov
sbb
add
ss
xlat
rcr
add
mov
inc
movs
sub
out
fadd
enter
lahf
int
push
or
push
hlt
pop
mov
ja
push
xor
lock
ja
mov
jb
and
into
mov
inc
ja
xchg
(bad)
nop
push
jl
or
jg
stos
adc
xchg
cmp
lea
pop
inc
or
mov
test
js
cwde
aad
ror
and
add
xchg
enter
cld
jmp
pop
lods
sub
into
push
sahf
adc
scas
pop
adc
jecxz
mov
mov
dec
arpl
pop
push
movs
jmp
in
mov
inc
retf
xchg
add
lock
hlt
das
ror
xchg
mov
pop
inc
inc
or
mov
cmp
jge
jne
int3
add
outs
and
rol
sti
dec
jbe
xchg
scas
xchg
sti
pop
or
fstp
fidivr
sub
retf
fnsave
jo
xchg
dec
(bad)
add
xchg
cmp
je
inc
aaa
int3
pop
pop
sti
fsubr
iret
dec
cmp
ret
mov
mov
mov
fbstp
ror
(bad)
(bad)
dec
aas
xor
xchg
mov
pop
push
inc
add
ror
fidiv
and
test
out
cwde
retf
hlt
push
pop
cmp
(bad)
pop
ret
xlat
dec
pop
pop
pop
fwait
or
psubq
fisttp
je
inc
call
leave
fwait
arpl
or
sub
cmp
test
push
cwde
cmp
mov
cmp
je
int3
cmc
mov
or
idiv
pop
cmps
inc
mov
movs
push
pusha
mov
xor
call
cli
or
in
aas
cmp
lock
inc
je
mov
add
fsubr
inc
enter
sub
(bad)
clc
add
push
mov
sub
lds
fmulp
add
inc
loopne
mov
mov
clc
or
push
loopne
ret
inc
mov
sub
sub
sub
clc
mov
and
dec
fistp
fdivrp
push
je
push
dec
dec
cmp
push
stos
or
jne
xchg
push
es
add
pop
mov
popa
pop
out
mov
sub
mov
enter
mov
sbb
cmovno
outs
sub
hlt
sub
add
ficom
clc
in
je
data16
pop
cld
jne
mov
test
loopne
sbb
je
inc
xabort
shl
mov
dec
clc
push
add
mov
or
ret
mov
enter
pusha
mov
jb
mov
lods
les
lock
btr
add
imul
push
push
out
jns
inc
pop
inc
(bad)
fimul
adc
jno
inc
push
push
mov
aad
adc
dec
cmp
jne
cmc
sbb
mov
mov
mov
or
jg
into
daa
pop
outs
test
jg
cmp
je
add
add
js
inc
add
push
fadd
push
xor
jns
aad
and
clc
sbb
sub
add
lea
fcomp
hlt
int3
in
xor
xor
dec
or
adc
sbb
mov
je
push
push
or
mov
lock
add
ficom
inc
or
lea
outs
and
test
jl
rol
push
mov
push
push
push
jl
jne
in
loopne
out
add
mov
inc
fimul
or
into
push
pop
cmp
add
mov
js
add
test
mov
push
sub
fild
push
push
movs
test
jne
or
or
jge
je
test
retf
add
mov
hlt
xchg
jle
mov
adc
dec
in
je
push
add
jg
or
cmp
jne
adc
cs
fsub
xlat
cmp
int3
dec
cmp
ret
fadd
ror
fucomip
mov
cmp
mov
pop
jmp
lock
fld
or
add
cmp
jle
les
push
xor
nop
mov
inc
cli
adc
(bad)
jne
ins
movs
test
mov
mov
inc
gs
inc
mov
mov
inc
or
in
adc
lea
test
cmp
iret
adc
je
or
adc
in
and
sbb
adc
pop
iret
cwde
adc
pop
adc
dec
cld
or
add
imul
sbb
pop
adc
jmp
lock
or
push
jl
dec
or
cmc
or
out
jmp
cmp
push
test
jl
aam
mov
mov
ja
(bad)
dec
(bad)
shl
add
stos
clc
test
punpckhwd
sahf
std
mov
xor
inc
mov
or
jle
shl
add
push
aaa
xchg
int3
ss
mov
into
add
cld
mov
shl
mov
mov
mov
imul
or
leave
mov
pop
jge
mov
pop
mov
movzx
jne
fstp
mov
dec
jmp
rcr
adc
lahf
sub
dec
fsub
adc
xchg
push
dec
mov
mov
jg
mov
push
push
mov
lea
movzx
xor
lea
ffreep
jno
(bad)
adc
mov
adc
jne
or
jns
stos
inc
add
je
cmp
outs
adc
add
inc
cs
hlt
cmps
(bad)
fbstp
je
and
mov
cld
jg
out
fiadd
imul
test
es
add
call
dec
clc
shl
or
jmp
addr16
sbb
inc
hlt
fcmovnb
inc
stos
add
cmps
cld
(bad)
out
jmp
sub
mov
bnd
lea
mov
mov
and
lea
mov
mov
inc
cmp
adc
inc
push
or
sbb
add
je
mov
rol
outs
fmul
idiv
aaa
aad
rol
sub
arpl
ret
test
je
sar
dec
add
shr
or
mov
dec
shl
leave
jne
and
adc
mov
or
ror
add
jmp
add
jmp
add
or
or
into
loopne
mov
push
sar
pop
adc
dec
add
call
(bad)
(bad)
add
pop
hlt
cmp
jle
add
inc
cmp
jg
je
fcomip
add
lea
test
jle
mov
sub
fsub
lea
mov
mov
mov
lea
addr16
mov
mov
inc
jge
inc
mov
cdq
sub
xor
mov
push
lahf
out
mov
lea
shl
retf
or
mov
mov
add
rol
cmp
ret
jb
mov
mov
test
je
inc
jmp
das
or
cld
mov
cld
cmp
jb
mov
lea
add
pusha
mov
das
into
sbb
(bad)
fisttp
adc
sub
and
cmp
jge
mov
mov
mov
xchg
cld
mov
adc
dec
hlt
lea
mov
cmp
jge
mov
ins
stos
xor
add
(bad)
(bad)
out
jo
xchg
sub
add
shr
cmp
mov
cmova
(bad)
cmp
mov
pop
mov
fiadd
jo
cmp
jb
(bad)
lea
clc
ret
adc
xchg
mov
(bad)
js
out
(bad)
jg
mov
jae
mov
add
js
pop
lock
je
xorps
or
mov
sub
mov
test
dec
jmp
(bad)
jg
ins
push
call
add
or
add
cld
inc
inc
or
inc
cld
lea
adc
mov
cli
scas
or
outs
fdivr
inc
clc
jb
mov
call
push
aaa
inc
cld
cmp
jb
mov
jb
inc
adc
jmp
ret
add
lds
dec
cmp
lea
scas
xchg
hlt
push
dec
test
jg
mov
mov
(bad)
pmuludq
xchg
mov
or
push
mov
mov
lea
cld
mov
mov
cdq
mov
mov
pop
call
push
mov
ja
movs
scas
(bad)
lea
mov
adc
or
mov
mov
inc
mov
push
cmp
(bad)
ror
or
call
or
mov
je
cmp
jl
mov
xchg
and
adc
mov
repnz
bnd
ret
add
lea
mov
xchg
mov
mov
xor
or
orps
ja
rcl
push
push
sub
or
jg
mov
mov
inc
mov
test
je
mov
sbb
add
lock
cmps
pop
xor
sub
inc
cmp
and
je
push
inc
push
and
xor
and
and
or
out
imul
pop
jg
and
cmp
jne
sbb
inc
sub
push
neg
fwait
and
nop
sub
add
and
fmul
adc
shl
ror
cli
dec
gs
mov
adc
jl
pop
mov
cs
jne
call
inc
cmps
sbb
xchg
ja
aad
jnp
add
js
dec
add
or
add
dec
pop
(bad)
and
add
mov
test
xor
test
test
in
mov
inc
add
mov
jne
out
push
dec
in
add
or
out
or
pushf
cli
and
pop
xor
call
ja
rcr
or
push
pop
rol
xor
adc
mov
jo
lahf
pop
xor
call
pop
ret
gs
lea
mov
push
lea
mov
mov
mov
jmp
mov
xor
lea
jo
div
adc
jo
mov
mov
pop
dec
data16
xchg
add
jne
mov
cmp
stos
out
scas
call
or
mov
jmp
push
xchg
call
sbb
dec
hlt
adc
xor
loopne
(bad)
call
inc
push
cld
sub
mov
call
inc
(bad)
cld
sbb
and
(bad)
loop
(bad)
(bad)
(bad)
cmp
jbe
mov
mov
mov
cmp
jne
sub
cmp
jbe
or
aas
cmc
fbstp
dec
cmp
ja
scas
inc
or
push
mov
push
movs
push
dec
mov
and
mov
sti
mov
pop
mov
ret
jo
ja
mov
xor
add
adc
lahf
inc
scas
jnp
inc
test
shr
mov
jns
fld
movs
mov
mov
mov
cmp
lea
jne
sub
cmp
jbe
cmp
jne
or
ret
ja
and
jo
fstp
adc
aaa
ins
test
scas
push
mov
xor
hlt
(bad)
cmp
pop
or
push
cmp
jb
lea
add
inc
(bad)
movs
(bad)
aaa
cmp
jbe
mov
mov
and
je
add
inc
fidivr
ror
fnstcw
or
pop
mov
fld
add
push
into
(bad)
fnstenv
cmp
and
mov
fldcw
clc
mov
add
push
ja
test
loopne
mov
lea
pop
daa
inc
test
mov
std
mov
cmp
lea
imul
aad
mov
pushf
cmp
neg
jb
ins
lock
mov
mov
cmc
push
dec
mov
(bad)
sbb
jge
jle
arpl
dec
mov
push
push
jge
(bad)
(bad)
jg
jo
mov
cmp
jl
add
jmp
mov
add
add
cmp
(bad)
out
inc
idiv
sub
sub
mov
dec
cmp
dec
sbb
mov
rcl
sar
inc
add
xorps
push
movapd
push
ror
inc
or
clc
push
jge
push
movups
movsx
inc
cmp
ja
std
pcmpeqb
push
fs
mov
jne
lahf
sbb
jmp
mov
aas
add
test
(bad)
(bad)
call
pop
mov
cmp
jne
mov
cmp
mov
xor
test
mov
pop
es
mov
lea
inc
cmp
jg
cmp
jge
lea
lea
lea
jmp
cmp
jge
lea
or
add
adc
call
in
dec
shl
inc
hlt
mov
sub
mov
add
cmps
sub
(bad)
cs
arpl
mov
(bad)
daa
sub
sbb
cwde
or
cmp
sar
xchg
inc
or
cmc
das
jge
lea
cmp
ja
std
inc
aas
pusha
div
push
jge
jmp
lea
mov
fsubr
(bad)
push
inc
sub
xor
je
add
cmp
jle
mov
lea
(bad)
(bad)
out
adc
mov
pop
lea
add
jmp
cmp
jg
lea
sti
pop
cld
mov
leave
dec
jne
jecxz
jne
mov
mov
inc
in
daa
out
push
push
icebp
push
inc
lea
add
mov
sbb
mov
jge
adc
lea
sbb
mov
pop
or
(bad)
dec
clc
sbb
sbb
gs
cmp
jne
out
in
cmp
jne
cmp
je
or
std
mov
mov
imul
or
call
add
in
and
fadd
ja
out
sub
out
dec
jo
or
and
loopne
mov
jl
and
enter
div
jmp
lock
lea
lea
int
jge
push
inc
pop
inc
pop
retf
in
out
ffreep
xchg
imul
add
jle
mov
ja
cmp
je
xchg
call
jmp
mov
mov
sub
add
test
int3
cmp
imul
inc
or
add
out
mov
cld
(bad)
(bad)
mov
(bad)
and
movzx
out
(bad)
jmp
mov
add
aad
mov
inc
mov
aaa
push
cmp
and
retf
popa
movsx
jg
lock
inc
test
pushf
xlat
mov
jbe
mov
mov
sti
dec
add
pop
sbb
ja
or
mov
div
lea
jmp
pop
cld
dec
rcr
clc
movsd
or
ja
clc
jns
lahf
mov
pop
fnstcw
cmp
inc
add
lods
std
cmp
jne
push
jnp
pusha
lds
sub
add
lock
sbb
pop
pop
xor
or
inc
icebp
push
je
in
inc
mov
mov
test
movd
cmove
push
inc
push
xor
(bad)
add
dec
adc
outs
addsd
fadd
imul
sbb
add
xchg
jle
movs
cmp
outs
jne
inc
out
jmp
stos
fist
cmps
shr
cmp
addr16
cmp
mov
mov
test
push
jg
dec
shl
cs
pop
inc
ret
shr
lock
lea
cmp
cmp
es
jge
fwait
sub
sub
xor
xor
shl
pop
imul
int3
mov
xor
or
sti
or
(bad)
mov
mov
jp
mov
mov
and
je
(bad)
jnp
push
push
dec
jp
clc
and
je
je
cmp
inc
pop
add
sar
in
jo
jp
jle
lahf
das
cmp
sub
xor
clc
inc
fcomi
shl
jg
movs
jbe
sub
dec
jl
inc
pop
inc
clc
lods
mov
and
mov
stc
add
mov
push
data16
nop
sbb
jbe
mov
push
call
hlt
ja
pop
out
add
push
add
or
mov
fdivr
jge
mov
out
pop
mov
clc
and
lea
add
adc
cmps
push
ins
js
(bad)
add
inc
dec
or
jle
daa
jbe
jmp
or
clc
add
test
(bad)
sti
jg
mov
adc
push
mov
jg
mov
mov
jle
cmp
jl
inc
ja
or
stc
xor
add
adc
(bad)
ja
jmp
shl
and
add
pop
jmp
push
hlt
sbb
ret
adc
add
ucomiss
call
leave
push
mov
cmp
hlt
aaa
aad
jle
enter
jge
out
mov
ror
dec
sbb
(bad)
(bad)
cmp
jg
cmp
jl
lea
cmp
jne
dec
jmp
push
inc
sub
add
mov
dec
cmp
dec
cmovg
clc
mov
out
stc
or
or
mov
rcr
jge
xor
lahf
mov
mov
xchg
mov
dec
inc
lea
cmp
jl
cmp
add
(bad)
jge
inc
dec
shr
mov
ffreep
int3
les
lea
dec
jne
std
lahf
mov
jne
push
push
push
push
push
push
jl
add
sbb
mov
mov
adc
ja
mov
lea
clc
add
dec
or
push
fisub
lea
push
xor
pop
cmp
pop
cmp
add
mov
sbb
mov
ror
and
mov
loop
dec
mov
jmp
and
mov
outs
inc
loopne
add
pop
sub
sbb
add
jmp
sub
lock
sub
dec
add
inc
aas
arpl
jg
add
(bad)
(bad)
jge
add
mov
mov
add
and
cmp
pop
mov
cmovl
cmp
cmovg
jle
sub
sub
sub
(bad)
icebp
das
jb
test
jle
jg
dec
cmp
jne
in
jb
jmp
and
into
das
adc
push
fadd
xlat
inc
pop
jl
or
repz
sbb
int3
jle
dec
sar
dec
cmp
jecxz
cmp
shr
popa
into
inc
add
sbb
adc
push
outs
out
or
inc
cmp
sbb
and
fmul
inc
or
add
out
out
fcom
dec
push
adc
mov
sub
jne
in
jl
aad
cmc
add
inc
or
lea
or
inc
adc
and
lock
mov
enter
dec
shl
mov
sub
add
sbb
(bad)
mov
inc
cmp
jle
test
jle
pop
mov
xchg
je
push
aaa
xchg
aad
jl
imul
out
jbe
push
or
pop
fsubr
les
scas
fstp
mov
mov
inc
adc
inc
adc
loopne
sub
add
jmp
fdiv
call
inc
loopne
or
imul
outs
xor
mov
dec
adc
gs
mov
comiss
jb
cmp
out
in
in
(bad)
cmp
fs
movaps
jmp
mov
mov
push
xor
test
into
popf
sbb
ds
xchg
adc
cmc
call
xorpd
mov
and
add
jg
test
inc
sub
sub
sbb
adc
mov
mov
add
inc
push
int3
sub
mov
rcr
inc
aaa
dec
cld
add
xor
mov
jne
cmp
je
or
out
pusha
push
cmp
mov
sbb
ins
cmp
xchg
loop
je
pop
jbe
or
clc
jbe
ja
and
and
fdiv
fcomp
add
push
pusha
aaa
adc
cmp
sar
pmaxsw
ja
dec
pop
dec
jb
movaps
enter
jg
cmp
rol
inc
into
add
stc
imul
imul
into
jo
ss
push
jb
ret
mov
loope
push
fmul
cld
mov
adc
test
in
fsubr
fsubr
arpl
inc
clc
call
push
outs
sub
and
xchg
sbb
jne
jo
sub
retf
ds
lock
or
shr
iret
sbb
xchg
or
ja
ja
or
iret
icebp
popf
dec
mov
mov
icebp
pop
enter
dec
mov
push
dec
adc
nop
test
ja
sbb
(bad)
jmp
add
int3
addps
mov
clc
mov
pop
mov
mov
ficom
ds
cmp
je
rol
ror
push
ja
jge
and
mov
mov
or
xor
pop
xlat
push
cmc
xchg
mov
add
inc
pop
add
les
ins
arpl
jmp
test
aad
mov
hlt
sti
sti
add
fs
mov
test
je
outs
(bad)
je
xchg
sub
sub
clc
ds
out
inc
test
loopne
test
clc
(bad)
jp
mov
jle
jp
push
jae
nop
loop
push
push
mov
loop
out
mov
add
xchg
leave
or
leave
adc
or
dec
inc
rep
cmp
or
or
push
imul
sti
xadd
out
sbb
jg
push
adc
jne
cmp
lea
sbb
aam
push
push
jbe
retf
out
xchg
jo
je
ja
test
mov
jg
xchg
jo
jg
out
or
xchg
pusha
jecxz
sub
(bad)
adc
fbld
clc
pop
jmp
add
loope
or
nop
xor
push
push
lock
push
lea
mov
sub
scas
push
push
arpl
jmp
push
fsubr
ficom
mov
mov
mov
jbe
jecxz
jg
push
fsub
retf
inc
aad
clc
rcl
cmps
mov
mov
cmp
leave
je
adc
xchg
lods
xor
lea
pop
cmp
push
push
add
(bad)
adc
shr
add
pusha
add
(bad)
push
add
push
adc
add
jnp
push
add
dec
mov
push
push
jb
fbstp
add
ret
(bad)
out
(bad)
repnz
mov
sub
(bad)
pop
or
adc
sbb
or
add
mov
and
cmp
clc
add
add
add
dec
(bad)
jmp
mov
cmp
inc
mov
cld
ja
es
scas
fisttp
mov
lea
push
rol
or
inc
in
lock
ret
push
cmp
call
fsubr
rol
(bad)
(bad)
(bad)
out
stos
inc
test
jg
mov
inc
test
jns
neg
mov
mov
mov
ja
mov
add
shr
rep
mov
and
rep
or
data16
cmps
inc
or
outs
shl
jg
data16
and
sbb
aam
sbb
jne
cmp
int
cmp
cs
sbb
out
test
cmps
sti
xchg
imul
ror
mov
cmp
rep
push
sti
mov
sti
lock
add
je
mov
inc
add
or
push
mov
jne
dec
mov
outs
jns
mov
add
neg
push
sub
std
jo
sar
dec
or
mov
outs
aas
mov
inc
lea
add
cmp
jle
mov
dec
cdq
idiv
mov
lea
mov
inc
test
popf
mov
(bad)
jle
mov
imul
dec
sub
lea
add
mov
sbb
adc
pop
mov
pop
je
adc
mov
or
xchg
pop
mov
push
dec
cmps
sub
push
mov
push
push
inc
jne
mov
clc
add
aas
mov
mov
ret
push
cmps
sub
clc
mov
pop
xchg
mov
test
sbb
adc
rcr
mov
mov
or
jno
call
sar
mov
mov
les
jb
push
xchg
aas
movs
imul
and
int3
mov
jge
into
push
adc
in
mov
clc
cmp
dec
push
xor
call
add
xor
pop
add
sub
cmp
dec
pushf
aaa
pop
icebp
loope
dec
mov
xchg
rcr
sbb
inc
mov
dec
push
xchg
or
add
jl
pop
je
inc
gs
pop
test
cmp
ja
cwde
fst
aam
and
inc
mov
xor
push
add
xor
adc
inc
test
add
nop
add
sub
add
enter
test
popa
fsub
sub
sbb
test
pushf
mov
or
int3
push
ror
sbb
add
or
ret
fbstp
push
mov
add
and
mov
or
retf
xchg
ficom
sub
enter
rol
cmp
mov
push
fwait
inc
push
mov
jecxz
cld
outs
stos
imul
add
cmp
ja
icebp
add
mov
mov
pusha
dec
out
popa
movs
mov
push
or
jo
sbb
sti
mov
push
sbb
or
setbe
push
mov
or
push
add
or
push
nop
ins
and
jl
pop
add
push
pusha
mov
sahf
arpl
jae
or
mov
jnp
push
inc
push
in
sub
push
inc
add
mov
cmp
dec
pop
push
add
xor
sub
int3
adc
or
fsubr
in
pop
data16
ss
or
bound
dec
stos
xor
adc
call
pop
mov
lea
mov
(bad)
aaa
push
mov
enter
ja
mov
xor
add
mov
inc
lea
imul
mov
in
clc
(bad)
xor
js
cmp
test
add
xor
mov
fadd
jecxz
lea
pushf
lea
cmp
test
inc
aas
push
xchg
mov
jne
lea
out
push
dec
mov
(bad)
pusha
mov
mov
(bad)
push
dec
pop
xchg
int
aad
out
in
or
test
pop
and
dec
fsub
inc
jg
dec
fstp
pop
mov
sub
dec
pop
add
and
pop
push
dec
and
mov
enter
dec
sbb
data16
data16
inc
call
cmps
xbegin
push
push
xor
jle
jnp
fs
ins
push
lea
loope
mov
in
mov
and
stc
sub
sub
sub
jnp
cli
push
add
add
lea
sub
adc
call
out
inc
cli
arpl
add
inc
ins
mov
leave
std
jo
(bad)
aam
add
sahf
imul
add
jb
sbb
xchg
lea
pop
jb
loope
xor
fs
fcom
bound
and
push
test
xor
dec
cwde
test
fcomp
add
cmp
bound
(bad)
push
push
je
das
and
mov
jge
pop
inc
mov
test
adc
or
or
or
sub
cmps
jecxz
std
sub
rol
sbb
push
or
or
sbb
inc
daa
xor
jb
mov
cmp
or
mov
nop
jo
add
mov
ret
mov
jmp
cmps
jbe
sbb
dec
push
jbe
mov
or
ins
pop
xor
cmp
jne
enter
push
pushf
aam
and
mov
loopne
xchg
and
xchg
in
add
push
add
add
outs
js
push
jo
add
imul
mov
push
ins
or
lods
pop
add
ins
cwde
add
add
outs
mov
mov
sub
fsub
xor
mov
sbb
push
jno
add
jb
das
mov
adc
clc
call
add
push
pop
or
or
or
push
movups
adc
inc
fwait
cmp
(bad)
pop
movs
sbb
xchg
xor
mov
(bad)
(bad)
dec
mov
test
je
mov
push
mov
cmp
jb
shr
cmp
ja
cmp
je
push
inc
adc
add
add
stos
loop
out
adc
add
stos
adc
jle
dec
ds
xchg
xor
pop
pop
mov
pop
dec
mov
aas
bound
adc
pusha
xor
jmp
lea
push
aam
dec
cmp
ja
cmp
je
inc
add
test
pop
sti
and
je
jno
mov
outs
mov
(bad)
(bad)
mov
movsx
inc
mov
cmp
jb
lea
cmp
jae
push
push
push
dec
or
cdq
xor
adc
enter
leave
or
mov
dec
pop
cmp
loopne
adc
loopne
add
int3
adc
stos
call
mov
test
sbb
out
or
movzx
lea
mov
xor
push
cmc
jne
test
inc
add
inc
or
es
dec
out
mov
add
nop
cmp
jne
lea
shl
mov
adc
ret
inc
jmp
out
ret
sbb
ficom
mov
mov
dec
jb
cmp
movs
cmp
movs
jbe
pop
pop
xor
pop
jge
shl
sti
jg
and
push
mov
jmp
mov
mov
add
sahf
loopne
sbb
sbb
and
push
push
pop
test
push
sub
cmovg
adc
jge
lea
cmp
ja
(bad)
jg
sbb
adc
mov
mov
jmp
mov
pop
or
cmc
arpl
push
sub
cmp
in
cmp
sar
mov
in
or
jmp
mov
mov
mov
shr
jae
inc
add
femms
fwait
std
lahf
or
loopne
add
inc
jmp
daa
push
xor
jecxz
adc
call
or
aas
or
mov
add
sbb
xchg
and
pop
sbb
and
or
mov
inc
mov
jl
stos
cmp
jle
jb
inc
push
add
das
pop
sbb
pushf
mov
into
loopne
xor
pop
or
push
lods
fist
popf
mov
aad
and
test
test
std
lea
cmp
adc
nop
mov
enter
pop
ret
push
sub
sar
adc
test
pop
adc
ja
mov
in
call
or
push
xor
mov
jmp
mov
or
fld
scas
sub
adc
or
mov
sbb
and
sar
mov
mov
pop
inc
fiadd
mov
sub
or
or
inc
inc
jge
movs
ret
mov
cmp
pusha
jne
nop
add
add
cli
push
jae
push
jo
add
inc
adc
mov
cmp
(bad)
(bad)
inc
or
call
jmp
cmp
je
cmp
fmul
add
push
enter
add
add
aas
add
add
or
cmps
mov
sbb
jne
mov
jo
or
lea
mov
mov
mov
sbb
or
ret
out
icebp
cmp
ja
aas
inc
add
jle
daa
cmp
je
inc
mov
out
push
loopne
push
mov
push
sbb
push
test
je
mov
mov
push
jbe
out
iret
cmp
adc
mov
add
jg
inc
jmp
mov
aaa
push
test
je
cmp
je
inc
inc
icebp
arpl
mov
push
push
fs
mov
mov
(bad)
xor
int3
push
push
mov
push
mov
mov
and
inc
jmp
mov
pop
ret
push
fist
dec
fs
mov
sub
in
je
or
add
push
std
mov
mov
mov
or
push
call
cmp
(bad)
sbb
mov
or
add
call
pop
adc
dec
push
mov
call
outs
dec
mov
xchg
dec
push
fs
les
enter
out
push
(bad)
jmp
dec
jne
cmp
jne
sbb
jb
int3
add
fs
js
ins
jmp
mov
(bad)
jmp
push
pop
loopne
or
sbb
cli
push
loopne
sub
xchg
sub
add
jg
inc
lahf
jne
xor
ds
fistp
push
push
pop
jge
add
in
neg
pop
mov
imul
ficomp
das
lahf
sub
outs
add
add
imul
add
jne
mov
cdq
mov
cmps
cmp
inc
sub
dec
inc
fist
in
push
push
push
jmp
fcom
mov
std
out
mov
adc
rcr
add
add
adc
push
lahf
lock
xchg
loope
add
jo
or
cld
xchg
and
xchg
pop
inc
je
xchg
add
pop
push
movs
inc
adc
mov
sub
cdq
or
les
lea
add
bsf
in
test
push
clc
test
push
lea
mov
pop
and
jne
mov
mov
cmp
(bad)
fbld
push
fadd
mov
(bad)
int3
and
mov
ret
(bad)
xchg
dec
hlt
lea
push
nop
in
ins
or
call
pushf
mov
mov
lea
or
jne
mov
loop
add
push
rol
xor
mov
sub
sub
lock
lea
test
sbb
inc
pop
xor
hlt
mov
mov
fbstp
or
and
inc
sub
or
mov
cdq
xor
or
call
mov
mov
js
or
push
mov
cmps
jge
or
push
(bad)
(bad)
(bad)
(bad)
lods
jnp
add
mov
mov
lea
mov
mov
pop
mov
pop
js
test
mov
or
daa
ins
or
mov
sar
loopne
or
and
jl
clc
xchg
int3
add
shl
fdivr
jne
push
adc
int3
repz
or
mov
aas
or
call
mov
adc
out
or
(bad)
or
mov
or
stos
xchg
jecxz
ja
clc
add
jl
inc
scas
adc
mov
(bad)
xchg
jae
ror
pop
fldl2t
mov
mov
call
mov
sbb
fist
inc
sub
add
inc
gs
jmp
sub
fst
add
fdiv
push
push
dec
pop
jle
adc
cmp
cmp
jg
jl
cmp
jae
adc
jg
or
stos
shl
dec
sub
shr
out
jge
mov
setg
pop
adc
push
(bad)
inc
dec
mov
mov
mov
mov
mov
add
add
add
lock
mov
mov
les
add
jle
sbb
mov
cmp
jg
mov
mov
mov
mov
jbe
pop
push
sub
rcl
or
cmps
and
pop
inc
fcomp
or
iret
push
mov
loopne
jle
(bad)
push
cdq
dec
inc
nop
dec
sbb
adc
pop
enter
inc
or
loop
or
loop
and
sub
mov
out
stos
dec
je
loop
push
xor
mov
add
lea
or
loopne
loopne
aam
fadd
mov
and
test
test
add
jg
dec
dec
jae
cmp
lds
mov
fucom
jb
push
fmul
inc
or
add
rol
push
or
inc
adc
pop
adc
inc
loopne
jo
test
in
test
jl
jg
test
sub
push
pop
aam
add
sub
mov
mov
push
lea
push
push
push
push
mov
sub
jge
add
or
fild
dec
xlat
in
sbb
fisub
jae
inc
mov
loopne
std
add
xor
jae
rol
jl
call
dec
ret
out
inc
jo
dec
cmp
repz
loop
lea
sub
add
inc
cmp
or
add
pop
mov
mov
inc
add
pop
push
jnp
cmp
push
sete
jg
or
(bad)
jmp
push
sub
add
jg
add
cmp
jne
test
je
sbb
ins
cmp
inc
add
push
inc
test
(bad)
push
mov
(bad)
push
or
jnp
add
mov
jmp
(bad)
mov
dec
sahf
jle
mov
lea
mov
sub
jecxz
or
pop
ror
fdivr
mov
mov
iret
fucom
cmp
cmp
push
pop
inc
jl
cli
pop
jmp
pop
sub
push
push
adc
xor
loopne
clc
adc
push
push
lea
cmp
fdiv
icebp
add
std
mov
lock
adc
mov
call
and
add
or
sahf
ins
sahf
jmp
dec
jmp
add
aaa
push
add
inc
or
push
mov
iret
dec
add
cmps
fld
push
add
cmp
cmps
or
and
sbb
add
addr16
add
aas
adc
dec
mov
ror
jnp
dec
outs
or
push
cs
pop
js
sti
frstor
add
or
pop
add
mov
mov
push
mov
mov
test
lods
add
fst
pop
fwait
mov
lea
mov
out
(bad)
or
sbb
sbb
jmp
inc
je
cmp
xor
pop
push
scas
das
add
pop
stos
push
sbb
sub
aad
cmp
adc
inc
cmp
add
stos
test
dec
sub
ror
dec
sub
add
inc
xor
mov
xor
mov
lock
cmp
or
pandn
adc
sbb
(bad)
or
and
das
add
adc
addr16
or
mov
inc
dec
pusha
push
(bad)
or
mov
test
inc
in
enter
icebp
sub
lahf
mov
mov
push
xor
inc
add
popa
int
pop
mov
test
je
test
jne
mov
mov
mov
lea
mov
add
or
outs
lods
add
add
outs
add
add
pop
sub
cmp
mov
sbb
inc
add
pop
mov
mov
pop
push
popa
retf
cmp
adc
int3
mov
(bad)
and
cs
and
fdivr
inc
rol
faddp
inc
sub
cmp
sahf
and
cld
push
mov
scas
and
rcr
mov
lds
mov
add
shl
arpl
pusha
inc
adc
push
fwait
and
scas
xchg
arpl
adc
adc
add
mov
or
adc
xor
fcmovbe
in
dec
popa
pop
sahf
mov
icebp
test
sbb
mov
aad
inc
and
or
(bad)
sub
cmps
int3
sbb
sub
mov
inc
mov
aas
sti
sbb
inc
add
(bad)
cmp
je
mov
mov
and
jne
push
mov
cdq
add
ja
mov
or
push
add
lahf
mov
xor
lods
movq
mov
ret
pop
add
js
push
loopne
jbe
fs
and
sbb
push
movzx
or
mov
daa
or
dec
popf
imul
int
and
aas
dec
aaa
and
sub
sub
dec
mov
add
push
lea
lea
inc
cmc
mov
fidivr
adc
fwait
sbb
pop
lock
cmp
pop
fwait
and
add
add
jne
jmp
or
add
sbb
dec
xor
fsubr
add
lock
and
sub
pop
je
sub
mov
aad
and
or
mov
sub
inc
jge
jge
add
movs
outs
jmp
sbb
test
cmovne
mov
dec
push
add
lahf
mov
inc
(bad)
(bad)
pop
xor
lock
and
inc
shr
or
inc
cmp
cmova
test
nop
cmp
and
and
sub
(bad)
fwait
outs
pop
cmp
jne
mov
ins
pop
pop
test
push
and
xor
lea
sub
repnz
or
xor
or
inc
xor
scas
rol
xchg
lods
test
pop
xor
addr16
mov
dec
mov
mov
cmp
push
mov
daa
add
add
inc
ins
mov
inc
aad
push
lea
pop
dec
and
cmp
je
dec
inc
sbb
push
movdqu
mov
and
fmul
cmp
mov
dec
xchg
jne
mov
mov
cs
(bad)
mov
adc
jne
(bad)
xor
jmp
inc
and
pushf
repnz
cwde
add
xor
pop
push
push
shl
arpl
cmc
cmp
je
push
popa
js
(bad)
(bad)
call
dec
hlt
mov
mov
not
and
mov
and
mov
mov
out
dec
cmp
jne
jne
push
popf
test
test
sub
push
leave
lea
xchg
jmp
mov
jmp
mov
or
std
(bad)
inc
mov
inc
push
xchg
pushf
mov
push
call
aaa
aas
in
push
add
push
mov
push
cmps
ret
cmp
mov
or
inc
or
adc
inc
dec
push
dec
shl
sub
xchg
mov
xchg
or
sbb
xchg
jmp
mov
or
je
or
inc
fmul
std
inc
sbb
mov
lea
mov
sbb
ins
icebp
and
fucomi
cld
fstp
test
jg
aad
xorps
add
comisd
jbe
inc
loope
cmps
sbb
mov
call
adc
sub
test
jns
mov
xchg
int3
popf
arpl
push
das
and
push
add
mov
or
dec
mov
inc
xor
xchg
gs
shr
test
movzx
imul
push
enter
stos
cwde
and
or
dec
cld
push
nop
int3
mov
cmp
call
fcom
and
and
fdiv
cwde
jmp
and
push
mov
pusha
inc
fld
cli
xor
inc
fisttp
out
dec
jmp
sbb
pmullw
test
inc
arpl
sub
xchg
arpl
iret
xchg
loopne
lea
(bad)
arpl
in
rol
and
inc
adc
pop
mov
test
addr16
inc
enter
int3
jl
pop
adc
je
ja
push
push
add
enter
add
dec
jne
test
mov
or
add
mov
out
rcr
inc
or
or
mov
dec
or
xlat
sar
or
clc
movs
std
adc
inc
mov
scas
sbb
stos
sahf
popa
shl
xor
dec
bound
rcr
pop
mov
push
mov
lea
push
xor
sbb
cld
push
cmps
scas
dec
out
push
cmp
and
jno
aad
push
cmp
jne
xchg
add
pop
or
or
mov
xchg
rcr
sar
sahf
dec
sti
clc
inc
cmps
mov
push
cmc
std
add
add
push
jg
aas
inc
rol
add
jo
loopne
je
cmps
pop
je
sub
push
or
lock
push
add
in
adc
(bad)
mov
cmp
outs
jp
idiv
mov
xchg
or
fnstsw
jmp
pop
pop
inc
aad
call
cwde
add
ret
add
add
jae
push
xchg
pop
pop
jbe
mov
push
push
lea
js
push
scas
js
in
jl
mov
add
sbb
inc
mov
mov
jge
or
inc
mov
push
aad
cmp
inc
mov
sti
jg
dec
inc
gs
push
push
push
push
add
rol
inc
sbb
out
push
xor
mov
loopne
jge
pusha
adc
pop
pusha
inc
push
push
sar
iret
pop
cmp
sbb
add
ret
(bad)
cmp
cmp
je
mov
cmp
push
icebp
fwait
or
loopne
mov
add
adc
dec
push
es
and
enter
sub
push
cld
xchg
add
js
sbb
jbe
iret
dec
fnstsw
add
gs
shl
pop
fldcw
mov
(bad)
push
push
imul
dec
icebp
mov
test
add
lock
or
pusha
jmp
adc
mov
mov
push
(bad)
jg
jno
inc
xor
jmp
cmp
add
inc
sbb
or
sbb
(bad)
in
mov
jmp
push
push
inc
inc
fnstsw
stos
xor
push
add
mov
jmp
shl
ret
pop
mov
mov
ds
add
ret
push
and
push
or
add
shr
xor
(bad)
rol
mov
ret
daa
mov
pop
and
jnp
push
cmp
lea
jle
sti
loopne
xor
smsw
or
xor
aad
xor
push
push
loopne
xchg
xchg
dec
jne
xor
jmp
mov
jmp
sub
fadd
int
setne
sub
sbb
sbb
jo
mov
aas
push
mov
je
(bad)
jecxz
(bad)
cmp
scas
push
jne
push
pop
xchg
jmp
dec
out
sbb
arpl
daa
add
mov
xchg
popa
mov
mov
pusha
or
or
aaa
sbb
mov
ror
rcl
and
add
and
mov
fcomp
add
add
or
or
or
mov
push
adc
xor
inc
cmps
outs
aas
mov
mov
js
inc
lock
sbb
inc
mov
cli
clc
add
mov
rcr
out
cld
jmp
ror
mov
movs
call
adc
in
rol
mov
jnp
ret
jle
push
dec
mov
dec
add
push
or
sti
mov
inc
add
inc
or
retf
jbe
jae
pop
repz
int3
and
mov
adc
push
add
std
ret
push
push
adc
or
in
push
gs
cmp
shr
ins
xor
dec
inc
push
push
push
loopne
jno
inc
repnz
adc
fsub
clc
add
add
pop
push
jne
sbb
mov
xchg
mov
(bad)
cmp
dec
gs
je
mov
xor
(bad)
jge
add
js
add
inc
xchg
sbb
daa
les
or
or
mov
sbb
(bad)
jg
cmp
lock
cmp
jne
jmp
ja
mov
je
mov
lea
push
push
aas
test
adc
mov
jne
jbe
jo
and
out
sbb
retf
sub
iret
push
and
sbb
dec
dec
add
sub
adc
in
(bad)
into
adc
cmps
(bad)
jge
sub
and
push
push
cld
call
adc
inc
je
cmp
mov
shr
add
jne
inc
popa
pop
popf
cmp
movups
jmp
xchg
in
sbb
in
mov
jb
dec
or
adc
xchg
push
adc
push
call
inc
xchg
int3
pop
mov
add
stos
jmp
in
loop
push
or
adc
inc
add
mov
loopne
sub
jae
ret
dec
xor
and
dec
and
movs
push
sub
cdq
add
and
scas
add
mov
add
retf
mov
mov
mov
xor
test
loopne
ret
jle
mov
push
jbe
sti
mov
mov
or
and
leave
jne
xor
mov
cs
adc
std
ins
sub
ss
or
ret
adc
sub
call
mov
js
jg
(bad)
fcomp
mov
loopne
mov
or
aam
fs
and
pusha
bound
mov
or
add
outs
repz
aas
adc
fst
sbb
sbb
pop
sti
push
mov
das
out
mov
pop
jl
mov
mov
add
pop
adc
jno
inc
adc
dec
add
push
add
and
rol
fwait
push
add
mov
cwde
cli
push
push
test
pop
inc
mov
push
dec
lahf
add
mov
(bad)
jnp
cmps
sub
lahf
sbb
movs
or
xor
dec
loopne
cmp
adc
add
lahf
mov
out
inc
lahf
sub
jne
inc
jo
inc
lahf
mov
jae
adc
mov
dec
adc
and
and
jne
push
push
push
dec
adc
mov
inc
pop
lock
int
dec
or
dec
ret
mov
or
fsub
add
in
or
xchg
jae
test
jne
cmp
xor
cdq
dec
pop
call
mov
adc
aad
fwait
int3
cmp
jne
mov
cmp
ja
adc
or
mov
add
imul
shl
add
xor
stos
fisttp
inc
add
xchg
fdivr
add
adc
add
xor
cmp
cmp
inc
arpl
(bad)
out
jb
mov
adc
ja
jb
cmp
jae
outs
sub
inc
aam
adc
rcl
xchg
std
push
das
cmps
sub
cld
push
cmp
je
dec
hlt
add
pop
push
pop
add
ja
arpl
cli
ja
pop
enter
jne
sti
(bad)
jge
cmp
je
pop
push
push
add
xor
dec
and
cdq
dec
mov
mov
cmp
push
and
mov
ins
les
scas
push
jg
push
jg
mov
mov
mov
loop
mov
test
je
cmp
ja
jb
call
cmp
jae
fucomi
add
leave
test
sete
dec
sub
mov
jmp
cmp
jb
cmp
or
add
pop
add
nop
sar
add
jne
cmp
ja
jb
lock
mov
inc
mov
cmp
jo
mov
xchg
jne
or
popa
call
mov
mov
mov
fwait
add
or
addr16
hlt
jb
jo
je
mov
out
mov
mov
mov
pop
mov
push
adc
ds
adc
push
pushf
add
cmps
dec
call
add
push
test
test
dec
mov
out
adc
inc
mov
mov
push
xor
mov
cmp
pop
jae
fucomip
add
adc
sub
into
test
sub
pop
and
shl
add
inc
adc
pop
cmc
adc
add
scas
add
call
mov
mov
mov
xchg
mov
mov
mov
cmp
ja
pop
jp
add
cmps
ja
mov
ret
je
and
call
mov
daa
jmp
cmp
jae
lea
mov
push
lea
push
push
add
sbb
inc
or
ins
mov
pop
pop
add
fcomp
jg
dec
jle
or
inc
add
push
mov
cmp
jae
loopne
add
adc
lock
rcl
push
dec
mov
jne
inc
rol
mov
pop
or
mov
or
jne
loope
or
jne
and
retf
add
sbb
mov
jg
(bad)
or
inc
cld
push
dec
movs
dec
adc
je
cmp
dec
lock
inc
loopne
xor
arpl
cmp
adc
and
inc
lahf
out
sub
add
pop
or
std
jg
add
add
or
in
push
add
mov
adc
push
imul
and
push
and
into
sbb
aas
js
sbb
(bad)
gs
push
iret
sbb
or
jo
push
cld
nop
std
frstor
je
mov
jae
into
xor
call
jae
(bad)
sti
xchg
or
xor
pop
ret
push
ss
jecxz
xor
into
setne
mov
rol
out
adc
push
jg
push
xor
mov
inc
push
inc
jp
or
mov
or
mov
dec
push
pushf
xor
xor
lock
ret
jg
mov
mov
dec
outs
mov
stos
add
cmp
mov
or
ret
out
aaa
lock
mov
or
mov
jmp
or
call
push
mov
cmp
jne
or
in
and
dec
xchg
cld
fild
dec
jo
pop
mov
adc
cmp
push
popa
sbb
iret
dec
imul
loop
sar
push
add
jecxz
(bad)
fstp
or
cld
pop
cwde
stos
inc
lods
movs
cld
mov
cmp
jne
jge
xchg
mov
jge
mov
lahf
in
mov
aaa
cld
cmp
fist
lea
push
lds
push
mov
pop
retf
aaa
popf
aaa
cmp
je
popf
mov
push
and
call
jne
mov
cmp
jne
mov
lea
push
mov
or
push
add
mov
repnz
pop
test
je
fadd
mov
xor
fistp
popf
cmp
je
mov
loopne
cli
repz
jmp
outs
push
mov
mov
loopne
inc
or
mov
jne
mov
cmp
add
nop
xchg
enter
or
and
or
inc
mov
mov
or
push
or
or
(bad)
dec
pop
or
adc
or
push
push
add
push
or
lea
imul
stos
mov
or
mov
pop
int
aaa
pusha
jns
dec
or
inc
or
arpl
xchg
inc
mov
adc
pop
lods
or
mov
add
mov
ds
outs
cmp
js
mov
pop
pop
cmp
je
hlt
cmp
jb
ja
mov
fdiv
pop
in
jne
outs
mov
lea
fdiv
mov
fwait
adc
push
xchg
shl
mov
ret
fs
mov
inc
sbb
ds
xor
(bad)
sub
xor
push
add
mul
add
sbb
add
bound
add
add
gs
jp
add
add
xlat
mov
jb
mov
jl
ret
sbb
ss
adc
cmps
mov
pusha
adc
lea
adc
xchg
gs
sub
mov
mov
or
pcmpgtw
lods
xor
or
sub
adc
fnsave
sub
call
sbb
add
xor
and
call
into
mov
ins
subps
in
leave
jnp
xlat
fcomp
xor
sbb
popa
dec
mov
add
inc
test
je
push
add
push
sbb
fdiv
std
add
pushf
add
pop
nop
and
push
sbb
or
dec
or
repnz
fisubr
inc
jle
stc
mov
lea
push
mov
mov
(bad)
inc
adc
aad
add
outs
and
hlt
loopne
xor
dec
add
fild
outs
push
or
push
inc
cld
addr16
lea
int3
jle
sbb
(bad)
pop
dec
push
push
push
cdq
add
xor
push
sub
adc
mov
adc
mov
jmp
fist
loopne
cmp
fisubr
push
pop
pop
fsub
push
cmp
add
test
jne
pop
and
add
les
sub
mov
(bad)
dec
add
retf
sbb
shr
or
sub
add
mov
lea
mov
and
sbb
test
cmp
jne
inc
(bad)
xchg
(bad)
jne
mov
jmp
jmp
mov
cmp
je
xchg
mov
sub
popa
fldcw
add
xor
xor
nop
pusha
(bad)
pop
fist
pop
inc
or
pop
call
push
(bad)
jae
mov
shl
je
pop
pop
jl
add
cmp
mov
add
xor
out
ret
loop
pop
push
cmp
jne
push
push
(bad)
out
mov
mov
dec
jne
dec
and
mov
sar
sub
mov
add
adc
push
add
push
or
retf
jne
and
pop
dec
jo
mov
jmp
or
pop
inc
mov
jo
or
inc
and
retf
mov
and
popa
pop
popa
push
ror
sbb
push
push
sub
or
jo
jbe
add
or
or
(bad)
add
jg
or
add
and
cmp
lock
pop
test
xchg
add
movhps
push
push
mov
bound
imul
push
cld
mov
xchg
and
adc
neg
or
add
adc
test
sub
push
add
or
rol
es
cmc
(bad)
jne
pop
pop
retf
mov
inc
push
loopne
ss
cs
test
mov
add
jno
pop
das
jg
push
adc
or
or
je
jns
push
lea
psubb
inc
rcl
mov
pushf
push
push
pop
fcomip
stos
rol
adc
in
pop
pop
sahf
mov
adc
pop
mov
sbb
ret
dec
sub
(bad)
sub
xor
and
stos
and
popa
test
dec
lea
push
mov
xor
pusha
pop
daa
or
mov
and
mov
mov
adc
sar
lea
rcr
push
or
jmp
mov
add
mov
ins
inc
mov
aad
cs
(bad)
fnstsw
loop
jp
fmul
add
mov
ret
mov
mov
call
(bad)
jecxz
mov
nop
or
lea
mov
test
add
mov
call
push
pop
adc
inc
mov
inc
ror
xchg
xor
mov
push
add
fisubr
mov
adc
and
push
mov
(bad)
iret
add
fsubr
dec
and
lea
mov
dec
js
inc
(bad)
mov
add
add
inc
jg
inc
push
add
pop
push
adc
lea
jno
add
je
scas
inc
aam
inc
and
mov
inc
rol
push
enter
sub
jl
mov
inc
fdivr
cs
cld
lea
adc
push
lea
das
stc
adc
fmul
cdq
enter
not
test
ja
pushf
adc
fiadd
aam
and
lea
add
ins
test
(bad)
adc
push
mov
cmp
mov
fld
push
lea
pusha
add
rol
mov
mov
mov
out
cld
cdq
(bad)
sbb
xchg
xor
lea
pop
push
hlt
sbb
sbb
lea
xor
dec
adc
or
inc
cmc
lea
push
ja
lods
call
sub
rcr
jae
rcr
leave
fcomp
push
cmp
mov
xchg
sub
ins
mov
sbb
mov
push
adc
push
in
repnz
xor
retf
pop
mov
fadd
adc
xchg
dec
mov
test
hlt
xchg
je
push
jmp
cdq
cmp
adc
add
push
pushf
sbb
sbb
je
push
jmp
push
inc
adc
loopne
dec
cmp
mov
test
pusha
adc
lea
xchg
pushf
and
and
sbb
lock
adc
movs
mov
and
cdq
rcr
pop
ret
mov
inc
xchg
ins
xor
cwde
(bad)
enter
shl
push
into
stos
jb
(bad)
mov
adc
adc
add
push
aam
xor
jle
mov
push
inc
cmp
xor
clc
aaa
cdq
(bad)
gs
mov
xchg
mov
or
jnp
add
(bad)
mov
cmp
jne
or
sub
jg
push
loopne
popa
add
call
jnp
gs
arpl
dec
cld
daa
push
add
jne
fidivr
pop
fmulp
mov
mov
mov
cmp
je
jmp
mov
cmps
add
hlt
push
cmps
push
fild
sbb
push
push
mov
or
and
les
jo
fadd
pusha
and
sbb
and
push
in
popa
mov
pop
hlt
or
outs
mov
aas
push
lea
and
mov
mov
sub
cmp
and
out
pushf
call
push
lahf
jmp
adc
mov
pop
mov
ffreep
sub
mov
or
xchg
es
mov
ja
xor
std
shr
mov
push
add
mov
push
lock
jne
mov
xor
dec
mov
(bad)
imul
sbb
add
inc
hlt
xor
mov
or
push
jl
xchg
and
shr
mov
test
inc
lea
popf
and
or
lea
jo
and
add
sbb
mov
inc
pushf
or
mul
mov
lea
retf
dec
jbe
add
jle
inc
or
es
jbe
inc
inc
adc
fcomp
and
and
pusha
pop
mov
and
push
inc
lea
inc
fisubr
enter
mov
mov
add
fadd
adc
xor
add
push
mov
neg
adc
int3
add
mov
jge
int3
push
add
and
xor
cmp
loop
dec
or
cli
pop
cmp
test
push
add
pop
(bad)
cld
fistp
jl
mov
shl
sub
or
dec
add
xor
mov
inc
pop
inc
mov
loopne
inc
mov
dec
add
aaa
fld
push
sub
ja
mov
push
movs
test
push
add
adc
mov
lea
out
idiv
ror
mov
mov
mov
mov
mov
jns
mov
adc
fadd
orps
or
jmp
cmc
jmp
pop
or
inc
lea
pusha
pusha
pusha
(bad)
or
adc
adc
inc
fsubr
push
mov
int3
aaa
cs
das
mov
out
js
push
xor
push
mov
out
push
and
cmp
adc
cmp
and
mov
push
in
js
push
jne
nop
add
push
lea
adc
cld
push
mov
mov
lods
sbb
push
js
xchg
mov
pusha
inc
and
sub
je
inc
leave
stos
sbb
fnstcw
leave
jne
xor
mov
and
push
jo
mov
push
ds
push
call
xchg
mov
dec
sub
movzx
movzx
(bad)
xor
mov
sbb
enter
scas
dec
(bad)
arpl
imul
adc
push
push
push
mov
inc
sbb
cli
or
ja
dec
mov
call
cmp
cmp
xorps
mov
push
inc
sbb
cmp
bound
xor
std
sbb
sbb
dec
cmp
jmp
sub
push
cwde
pop
inc
(bad)
call
test
push
jecxz
pop
add
mov
aam
cmp
adc
xor
repnz
push
ins
scas
lahf
mov
jmp
push
push
mov
mov
cmp
je
nop
push
jmp
push
mov
pop
add
cmp
jne
push
fimul
cdq
rol
or
sbb
cmp
mov
pop
ret
out
inc
mov
cdq
loopne
inc
ror
in
mov
(bad)
je
mov
push
push
sub
test
or
and
fmul
fistp
mov
in
sub
out
out
std
clc
mov
je
cmp
sub
jge
lahf
jnp
push
mov
jge
lds
(bad)
cmc
jge
jae
leave
cmp
xor
cmp
in
or
push
jae
loope
lea
mov
hlt
pop
or
mov
mov
jnp
inc
shl
mov
lea
add
and
xor
dec
aam
lock
mov
push
cmp
jbe
ja
mov
xor
ror
adc
je
jmp
cmp
jae
or
ja
lahf
mov
mov
jne
(bad)
dec
(bad)
call
mov
sub
dec
fnstcw
fild
jmp
push
jmp
cmp
scas
and
adc
(bad)
out
push
sbb
dec
add
std
sub
out
xchg
mov
cmp
jne
add
jb
retf
inc
les
adc
(bad)
hlt
lahf
mov
fs
add
cmp
push
adc
or
retf
mov
pop
leave
adc
and
or
lock
shl
inc
mov
sti
xor
add
adc
xchg
sub
add
jo
fidiv
sbb
mov
popa
mov
xchg
outs
mov
push
xor
inc
out
push
mov
js
mov
arpl
push
shr
xlat
add
imul
push
mov
jbe
add
jne
lea
jno
mov
push
xchg
je
popa
jge
fistp
not
or
ror
jle
cmp
or
mov
mov
icebp
sbb
cld
sbb
in
push
jecxz
(bad)
cmp
loop
mov
mov
add
fbstp
push
(bad)
mov
pop
mov
iret
and
sbb
or
adc
aam
xchg
xchg
push
pop
mov
and
push
lea
mov
jmp
mov
cdq
mov
adc
xchg
gs
shl
jge
fadd
mov
stos
into
gs
jne
fcom
xchg
inc
add
push
pop
inc
sub
test
in
(bad)
fmul
mov
add
inc
addr16
bound
test
jg
push
mov
inc
inc
or
and
ja
cmp
pop
or
test
je
and
mov
cmps
ins
xlat
cdq
add
outs
rol
mov
pusha
jg
icebp
adc
or
dec
or
add
cld
adc
add
loop
popf
popa
push
inc
leave
jne
inc
inc
and
inc
sahf
add
mov
mov
and
(bad)
mov
movzx
and
inc
or
mov
clc
shl
fcomi
mov
rol
sub
and
out
pop
(bad)
(bad)
(bad)
(bad)
(bad)
or
ror
or
mov
mov
mov
(bad)
call
inc
xor
inc
movs
mov
mov
mov
mov
add
adc
add
mov
ror
mov
aam
dec
or
sub
jne
mov
ins
leave
pop
push
adc
cmps
and
xor
add
call
inc
inc
add
test
je
cld
dec
push
lock
test
je
xor
cmp
pushf
mov
mov
adc
aaa
xor
mov
xor
add
jne
jmp
xor
mov
mov
mov
data16
add
sbb
in
sbb
and
pusha
daa
xor
push
cmp
call
neg
mov
mov
adc
neg
mov
sbb
mov
lea
imul
jmp
xor
mov
inc
lock
mov
dec
cwde
mov
push
(bad)
in
inc
inc
pop
or
(bad)
mov
dec
(bad)
mov
dec
mov
sub
inc
mov
mov
or
inc
loopne
in
fidiv
cmp
je
test
cmp
jmp
das
push
into
in
mov
add
pop
aas
sub
pop
seta
lea
mov
imul
mov
lahf
adc
cmp
push
fs
mov
mov
xchg
(bad)
call
jmp
hlt
loop
adc
lea
retf
adc
mov
dec
mov
out
call
inc
inc
test
out
push
scas
int3
add
cmp
jne
mov
bound
sub
xor
jl
push
lea
sub
jne
pop
mov
dec
dec
loope
jmp
ins
mov
(bad)
sbb
inc
mov
test
je
(bad)
mov
jl
push
push
push
push
loop
mov
les
jne
jecxz
add
test
xchg
in
inc
or
mov
inc
retf
push
adc
sbb
in
jno
mov
and
mov
add
or
ret
sub
push
js
add
es
xchg
into
inc
push
mov
or
pushf
push
nop
push
mov
idiv
sub
push
push
movs
push
int3
adc
lods
call
ret
icebp
ja
hlt
mov
cmp
push
movzx
mov
inc
jecxz
inc
ror
lock
fwait
cmp
add
ror
cmp
je
lds
mov
je
jg
adc
pop
cs
push
(bad)
add
and
nop
(bad)
(bad)
inc
adc
jb
in
xor
or
or
fidivr
nop
add
daa
and
lods
cmp
test
push
push
clc
ret
and
jl
cli
push
lea
mov
test
push
jbe
add
outs
cli
sbb
add
test
je
mov
mov
in
push
pop
push
push
or
add
mov
loop
je
mov
mov
fs
movzx
or
mov
ret
dec
or
adc
push
pop
dec
test
rol
push
shl
lock
je
push
data16
div
je
cmp
je
push
je
cmp
jne
mov
mov
jmp
or
aad
mov
mov
mov
mov
inc
add
sbb
push
addr16
test
xor
sbb
cld
mov
cld
ret
sub
adc
rol
mov
mov
call
test
je
mov
sbb
lea
xor
mov
mov
les
arpl
rol
neg
mov
pop
jne
aam
outs
jbe
(bad)
adc
jnp
pop
inc
pop
inc
in
push
repz
or
pop
aas
(bad)
cli
cs
mov
push
pop
mov
mov
loopne
inc
nop
inc
sbb
adc
or
cld
add
popa
mov
mov
jbe
test
jno
les
push
lea
gs
xchg
cmp
das
bound
pop
xchg
lea
and
in
xor
xor
lods
in
mov
cmp
shr
mov
mov
add
mov
or
rol
lods
mov
mov
(bad)
jg
mov
jmp
xor
mov
dec
shr
and
mov
mov
and
mov
push
test
mov
mov
sub
mov
add
adc
dec
inc
lods
lahf
or
test
sbb
add
inc
or
dec
loopne
sub
shl
and
cs
lods
dec
push
ret
scas
loop
adc
shr
shr
scas
cld
and
pop
mov
ins
sbb
inc
call
jne
jne
mov
shl
mov
mov
and
jmp
sub
inc
mov
das
test
sub
ds
sbb
mov
adc
or
push
popf
or
dec
call
call
mov
mov
mov
dec
adc
lea
mov
cmp
in
xor
stos
mov
xor
inc
jne
pushf
push
(bad)
jge
sbb
mov
push
pop
int3
mov
add
inc
int3
mov
push
add
test
cld
add
mov
mov
push
xor
push
inc
les
add
data16
sbb
push
sub
popf
lods
xor
fmul
loope
and
add
xchg
push
add
shl
dec
sbb
mov
lods
shl
lahf
out
or
sbb
outs
jne
or
mov
mov
mov
lea
fstp
bound
xor
std
ins
ja
jae
jb
push
inc
jne
rcl
mov
enter
cmp
mov
mov
push
fst
stos
mov
dec
clc
push
inc
xchg
dec
loop
mov
(bad)
push
push
mov
nop
sbb
inc
out
push
and
and
add
mov
mov
pop
adc
push
sbb
mov
fs
je
mov
dec
jbe
or
push
(bad)
cmps
and
out
outs
push
push
pop
push
daa
mov
pop
pop
or
sbb
ret
xor
push
adc
mov
mov
aas
push
retf
js
jg
int3
test
jne
mov
pop
ret
pop
inc
lods
push
iret
jl
mov
push
xchg
mov
ror
inc
mov
bsf
inc
or
xor
(bad)
(bad)
(bad)
dec
sbb
add
push
add
add
add
test
jne
xor
jmp
loop
adc
sbb
or
inc
inc
cmp
jb
stos
ja
dec
mov
call
dec
add
std
arpl
mov
mov
cmp
jne
dec
push
add
push
add
dec
push
pusha
mov
pusha
dec
adc
lea
outs
mov
cld
mov
sti
fs
or
jae
(bad)
jge
in
sbb
fistp
das
mov
mov
add
add
cmp
pop
pop
int3
fisttp
mov
and
push
cmp
das
xor
or
mov
fiadd
push
add
mov
or
lea
movzx
pushf
lea
aaa
rol
add
push
cmp
rcr
add
dec
jne
xor
add
push
push
add
mov
call
xor
jo
cmp
inc
mov
inc
adc
out
sbb
outs
call
add
je
pop
pop
dec
(bad)
and
or
mov
pop
adc
sbb
mov
sbb
cmp
pop
cli
inc
add
mov
mov
push
xchg
aas
fadd
in
daa
push
imul
push
fnstenv
les
ret
pop
pop
ror
pop
add
sbb
inc
add
retf
add
adc
mov
push
xor
test
pop
inc
cld
pusha
push
cmc
fwait
xor
imul
adc
mov
rol
xor
out
pop
std
aaa
and
je
push
mov
mov
push
sub
mov
dec
rcl
ins
or
xchg
shl
sub
inc
or
push
or
pop
sub
xlat
rcl
add
push
adc
mov
ja
cmp
jp
mul
outs
rcl
fdiv
xchg
inc
fmul
or
adc
push
aaa
sti
lds
inc
sub
xor
pop
outs
inc
dec
and
cld
mov
mov
pop
add
or
lahf
or
push
push
mov
(bad)
les
inc
mov
inc
rcr
fs
jp
adc
adc
pop
scas
or
dec
aas
sub
sbb
lea
popa
rcl
inc
adc
lea
pop
or
push
ins
cmp
fwait
std
cmp
dec
inc
fdivr
jne
or
out
fcomp
cmp
inc
dec
dec
adc
jg
cmp
inc
push
cmp
je
cmp
cmp
call
add
ret
adc
movs
and
cld
pop
push
add
push
pop
add
inc
add
mov
scas
mov
sahf
jge
inc
test
cwde
mov
syscall
(bad)
push
push
fisttp
or
fdivr
out
mov
(bad)
jns
(bad)
int3
push
adc
add
neg
pusha
aas
add
jmp
dec
mov
cmc
stos
out
std
or
stos
mov
xor
hlt
mov
ins
lea
mov
push
(bad)
loop
jo
inc
push
mov
push
sbb
jg
out
stos
dec
sub
sar
sbb
mov
mov
(bad)
leave
inc
dec
mov
mov
call
pop
repz
xor
in
dec
add
dec
push
popa
mov
jne
xchg
sub
das
adc
inc
icebp
xor
cmp
test
mov
jne
push
and
cmp
fild
mov
jmp
pop
add
or
mov
mov
call
inc
fld
jecxz
clc
push
or
mov
out
pop
sbb
adc
mov
mov
sbb
pop
lahf
ins
xor
push
call
sub
push
out
mov
fwait
stos
jg
add
jl
pop
adc
movs
cld
cmp
jb
mov
mov
mov
inc
cmovne
cmp
lea
fdivr
movs
mov
inc
cmp
jb
pop
(bad)
out
mov
ret
sub
cmp
pop
mov
xchg
call
rol
mov
mov
mov
mov
call
add
sub
push
loope
cmp
jmp
in
push
outs
lock
sbb
adc
sbb
lea
sbb
or
push
mov
jmp
inc
xor
mov
dec
cwde
push
cwde
mov
mov
inc
movs
lea
xor
adc
add
mov
mov
sbb
test
test
je
imul
mov
iret
inc
or
retf
outs
sar
mov
mov
mov
cdq
or
cld
cmp
pop
push
mov
xchg
push
call
iret
push
push
xor
or
lods
sub
inc
sbb
and
push
inc
mov
adc
or
dec
or
rol
push
add
xor
mov
xor
add
hlt
push
mov
and
lods
nop
sub
sbb
ins
and
or
jne
push
jmp
ret
call
ss
jmp
pop
and
mov
pusha
sbb
xor
dec
pop
inc
cmc
jmp
pop
mov
push
mov
mov
movd
add
sti
pop
mov
or
pinsrw
add
cdq
addsd
(bad)
mov
pop
enter
sbb
bound
pop
inc
cld
add
or
pop
jae
add
mov
lea
cmp
std
cld
push
push
lea
dec
adc
push
(bad)
(bad)
aas
xor
cmp
adc
jae
cmp
je
mov
mov
mov
pusha
push
inc
ss
xor
jg
adc
test
call
mov
mov
add
mov
stos
or
mov
add
repz
push
mov
stos
mov
dec
sub
mov
outs
imul
jne
pop
push
xchg
add
(bad)
(bad)
jg
push
add
push
mov
mov
mov
mov
dec
cmp
movhps
or
mov
cmp
sub
sbb
jo
dec
add
mov
inc
aam
push
loopne
pop
mov
or
push
jl
shl
int
push
lea
or
aas
sar
sbb
mov
fistp
cmp
shl
inc
mov
push
pop
je
mov
mov
mov
add
push
cmp
nop
cmc
pop
xchg
test
cld
dec
jne
mov
mov
mov
sub
sar
adc
xchg
jmp
ins
mov
lea
mov
or
add
lsl
dec
xchg
aas
sar
mov
mov
jl
loop
js
pop
push
fstp
add
movq
dec
add
push
add
add
je
push
mov
dec
mov
(bad)
cmp
jne
pop
mov
cs
add
push
lea
jne
sbb
inc
jae
aad
pushf
nop
or
add
push
pop
cmp
sbb
jno
push
mov
std
movs
xor
adc
add
jp
loopne
xchg
push
mov
push
mov
mov
mov
mov
inc
add
cmp
je
and
adc
inc
sbb
pop
not
mov
jne
mov
test
fild
dec
mov
and
mov
adc
imul
inc
arpl
or
(bad)
push
mov
fwait
aad
dec
or
test
test
int3
add
sbb
sub
in
or
mov
sub
cwde
test
or
and
add
nop
(bad)
cmp
je
les
outs
aas
lea
add
lock
inc
mov
call
mov
or
clc
mov
and
icebp
push
movzx
sahf
add
add
inc
inc
adc
leave
dec
inc
add
xor
imul
loop
or
add
add
add
mov
inc
mov
cmp
jne
mov
cmc
(bad)
(bad)
(bad)
jmp
mov
mov
cmp
je
mov
cmp
je
mov
mov
jmp
mov
mov
sbb
nop
sub
or
push
push
cmp
dec
in
jmp
cmp
je
xchg
cmp
mov
mov
mov
lods
mov
leave
sahf
mov
jo
je
and
pop
popf
(bad)
push
(bad)
aaa
inc
mov
mov
cmp
jne
cmp
jne
jo
inc
push
pop
mov
sub
mov
mov
mov
or
mov
out
or
xchg
inc
lea
ret
pop
xchg
aas
mov
pop
inc
or
inc
or
ror
mov
or
inc
sbb
or
or
push
add
(bad)
jmp
retf
add
sbb
cmp
mov
mov
or
inc
adc
mov
ja
outs
jmp
sbb
mov
add
aaa
push
mov
mov
cmp
rsqrtps
call
lock
je
mov
sbb
mov
pop
add
jne
sub
inc
movs
sub
test
jne
inc
xlat
shl
mov
and
jg
mov
mov
pop
retf
in
movs
js
fs
or
iret
add
mov
js
mov
add
jmp
mov
xor
mov
test
rol
or
inc
xor
imul
aaa
adc
adc
stc
and
cmp
jmp
inc
rol
or
lea
mov
mov
icebp
(bad)
call
mov
mov
lea
mov
mov
cmp
outs
ret
pop
jne
mov
or
mov
or
lea
cmp
cmp
nop
push
jb
outs
ret
mov
lock
cmovb
test
je
sub
jb
push
add
cld
add
pop
jne
xor
push
jle
mov
out
cmp
pop
jne
cmp
jg
dec
inc
add
cmp
add
cmp
loope
icebp
inc
add
jmp
xor
dec
sub
aaa
push
adc
ret
jb
xor
cmp
ud0
das
dec
adc
jge
mov
jmp
or
adc
adc
ror
mov
cmp
mov
and
icebp
cld
(bad)
mov
nop
push
and
fbstp
cmp
push
jne
adc
add
icebp
lea
add
es
adc
fcomp
push
adc
adc
mov
inc
or
dec
adc
shl
stos
jmp
inc
add
call
inc
fnsave
ret
dec
jmp
mov
adc
dec
and
add
ffreep
pop
cld
mov
shr
and
xor
cmp
push
or
jg
adc
pop
and
mov
lea
aam
adc
pop
pop
or
outs
inc
adc
fnstenv
push
aaa
cmp
jecxz
ja
inc
sub
or
push
add
push
or
mov
add
push
outs
or
sub
ins
or
sub
into
sub
mov
mov
or
bound
stos
call
pop
xor
xchg
in
fwait
jb
inc
in
add
daa
aas
mov
out
fidiv
int3
sub
or
fcmovnbe
adc
dec
push
mov
movs
stos
dec
push
rol
add
outs
mov
lea
add
mov
add
fwait
and
mov
push
call
outs
jne
add
mov
test
je
outs
ss
or
aaa
jp
add
jge
into
or
jg
pop
out
les
ds
push
lods
or
test
inc
lock
js
mov
lea
adc
mov
clc
sub
(bad)
fmul
xor
mov
test
mov
icebp
aaa
inc
pusha
inc
push
cli
push
push
pop
or
mov
pop
sti
(bad)
fistp
xchg
pop
pop
ret
pop
xorps
mov
pop
movdqu
or
jg
lea
das
push
ins
and
or
in
test
jns
data16
and
push
xchg
je
sub
or
ret
push
adc
in
push
push
push
gs
or
push
push
call
test
setns
cmp
int
dec
and
sub
or
ja
push
mov
mov
inc
neg
push
jnp
jmp
popf
sbb
push
hlt
pusha
mov
clc
jecxz
add
push
push
cmp
test
jg
aam
add
adc
je
jg
or
adc
jno
dec
aam
and
mov
xor
test
mov
add
add
es
mov
xchg
pop
dec
lea
call
pop
nop
push
mov
dec
or
lods
sbb
dec
icebp
sbb
cs
cmp
rcl
pop
push
mov
add
xor
paddb
add
(bad)
cmp
out
mov
mov
shr
mov
mov
pop
mov
mov
xor
adc
cmp
je
cmp
jne
jmp
cmp
xor
xor
push
mov
mov
test
mov
mov
inc
lock
or
inc
add
aad
mov
add
adc
and
jmp
stos
jbe
(bad)
dec
or
or
add
dec
adc
and
sbb
mov
jno
fsubp
dec
push
cmp
outs
dec
push
retf
outs
sub
inc
hlt
cld
cld
xor
jb
in
jno
push
sar
out
mov
pop
add
ds
je
mov
(bad)
cli
xchg
sub
iret
or
popf
fmul
ss
sbb
shr
sbb
dec
inc
add
mov
dec
stos
es
xor
adc
inc
xchg
out
out
stc
mov
cmp
jb
mov
fild
jne
cmp
je
xor
mov
mov
icebp
jg
loop
cmp
and
mov
add
js
add
lea
dec
add
jo
inc
sbb
test
or
imul
div
sub
jmp
or
sbb
test
scas
mov
sub
add
call
fiadd
mov
in
adc
mov
nop
and
xor
or
(bad)
outs
pop
xchg
dec
sbb
mov
inc
sbb
sbb
or
call
adc
jne
lea
mov
and
cli
push
in
pushf
pop
cmps
adc
in
pop
add
adc
pop
pop
or
mov
add
mov
fist
add
(bad)
adc
or
dec
or
cmp
sar
scas
fsubr
add
cli
dec
pop
mov
add
push
jl
popa
add
xchg
add
jp
push
movs
test
pop
sbb
jmp
enter
lea
push
or
int3
int
or
(bad)
cmp
mov
in
(bad)
repnz
mov
and
cmc
dec
dec
aad
cmp
iret
pop
push
shl
xlat
imul
sub
in
lea
mov
inc
push
les
mov
ins
cmp
cmc
or
push
(bad)
iret
call
aaa
xor
hlt
sub
pop
pop
iret
inc
cwde
jg
add
xchg
aas
adc
and
push
lea
add
mov
lea
add
xor
std
and
add
push
mov
test
popa
or
mov
jg
ret
pop
in
push
daa
jl
push
arpl
add
enter
mov
iret
lock
push
jno
dec
push
mov
mov
and
jo
je
mov
das
sbb
cmp
(bad)
dec
push
je
mov
cmp
jb
lods
sar
daa
jmp
lea
mov
in
jle
(bad)
loopne
jl
add
adc
dec
add
add
xor
in
add
xchg
test
push
dec
push
call
inc
or
cld
xchg
pushf
mov
push
push
add
push
lea
xor
test
ds
int3
int3
das
mov
rcl
and
ret
dec
mov
xchg
cld
lahf
or
test
rcl
xor
xor
call
mov
mov
pshufw
mov
rol
es
sbb
dec
add
sbb
sub
js
out
jmp
out
pop
mov
pop
mov
inc
lock
xchg
mov
pop
add
adc
pop
mov
lahf
cmp
xadd
or
add
int3
mov
adc
outs
gs
fadd
push
gs
mov
rol
bound
push
add
and
mov
sbb
ds
mov
ins
nop
mov
enter
xchg
popf
stos
mov
jne
push
mov
inc
inc
inc
shr
enter
or
jge
fsubr
push
mov
ins
rcl
lock
push
pop
nop
and
ret
push
in
pushf
push
es
mov
int3
lods
or
add
inc
xor
aam
dec
sub
repz
adc
or
add
sar
and
pusha
add
inc
fadd
call
loopne
add
sbb
clc
call
and
shl
retf
loopne
push
lea
fcomp
or
pushf
ins
mov
lods
js
push
mov
jne
xor
jmp
mov
add
add
push
inc
aas
repnz
dec
push
call
dec
or
(bad)
cmp
jae
or
jmp
xchg
or
push
fstp
dec
xchg
ret
neg
pop
sbb
add
ss
in
xchg
jne
out
and
cld
sti
add
xchg
rcl
cli
jg
xor
shr
call
mov
pop
xor
pop
pop
ret
sbb
outs
call
and
jle
mov
pop
cld
stos
push
pop
xor
mov
ret
xor
imul
push
adc
test
xchg
dec
xchg
rcl
div
int3
std
stc
call
std
(bad)
xor
enter
jne
imul
jg
add
mov
dec
pop
cmp
dec
cmp
add
jp
add
cmp
popa
out
popa
push
add
xchg
sbb
adc
mov
sub
inc
ror
sti
sbb
out
add
sar
jmp
(bad)
lock
jge
pop
je
call
push
jl
jmp
xor
pop
sbb
pop
push
ds
ret
std
rcr
or
inc
fmul
push
pop
inc
ins
hlt
aas
xchg
popw
arpl
xor
or
inc
push
push
ror
rcr
nop
or
retf
add
aam
pusha
and
iret
push
xor
aaa
mov
jge
inc
mov
(bad)
jg
add
add
push
jle
add
add
cmp
jge
mov
cmp
je
and
call
adc
shl
test
sbb
(bad)
pusha
or
xchg
test
inc
add
mov
mov
mov
add
push
out
cld
mov
push
(bad)
(bad)
mov
mov
mov
pop
mov
lahf
or
mov
jg
jmp
adc
sub
aas
pop
xor
xor
or
in
inc
lock
add
sub
pop
inc
sbb
ins
mov
sub
aam
or
inc
or
mov
mov
jne
sahf
mov
jnp
push
ja
call
inc
clc
cmp
je
mov
pop
pop
inc
cld
ret
pop
inc
mov
push
scas
sbb
mov
add
add
jl
jne
mov
ss
ja
pusha
add
jmp
push
xor
jne
cmp
(bad)
clc
jmp
push
(bad)
mov
shl
call
jno
daa
clc
jmp
push
call
push
js
jmp
hlt
push
mov
push
sbb
loopne
add
jne
(bad)
cli
shr
add
shl
shl
int3
mov
or
jo
add
scas
movs
(bad)
out
add
or
inc
les
shr
mov
mov
lea
add
cld
and
sub
sar
mov
fs
fild
gs
je
xor
cmp
lods
cmove
loop
and
mov
mov
mov
adc
jo
jmp
and
cmp
je
mov
cmp
push
jo
sbb
(bad)
enter
add
(bad)
pop
adc
pop
lea
or
cmps
push
out
sub
into
loop
loope
sbb
push
push
mov
push
cmc
sub
iret
mov
xchg
or
pop
or
push
inc
cwde
(bad)
xor
inc
cld
mov
dec
mov
xchg
out
add
push
std
adc
and
fiadd
test
sti
push
xor
sbb
xor
and
jg
xchg
outs
pop
and
adc
xchg
loope
sub
jne
les
cmps
jne
pop
les
outs
ret
fnstenv
xchg
outs
loopne
icebp
pusha
lahf
mov
push
pop
out
or
nop
lahf
sbb
ret
and
sbb
aas
dec
inc
sbb
gs
ret
add
mov
mov
mov
or
dec
mov
cmp
ins
fbstp
sub
repz
push
cld
adc
test
into
cmp
enter
mov
push
mov
xor
add
pop
jne
lea
mov
pop
mov
lahf
cmp
jne
jmp
adc
cmp
retf
rcl
idiv
jmp
cmp
or
add
gs
inc
shl
and
mov
lahf
nop
and
dec
and
jno
mov
arpl
sub
in
pop
sbb
add
dec
sbb
mov
ins
lea
pop
cvttps2pi
ins
sub
sub
mov
xor
ja
test
je
retf
mov
sub
ret
jns
pop
and
or
mov
push
sub
mov
stc
mov
mov
test
aaa
inc
adc
add
std
shr
adc
or
je
mov
mov
add
inc
xor
add
mov
rol
cmp
mov
jge
sub
push
mov
or
push
and
sub
mov
xchg
or
je
mov
(bad)
ja
rol
mov
std
adc
xchg
mov
jl
pop
lea
push
push
xchg
or
mov
adc
add
je
jle
xor
test
mov
inc
inc
xor
mov
sbb
or
or
sbb
(bad)
and
push
mov
call
mov
in
mov
dec
std
clc
push
mov
adc
add
popf
mov
sub
or
fidivr
mov
loopne
add
adc
inc
sbb
add
xor
aas
push
pop
or
push
shr
pop
(bad)
push
cmp
retf
xchg
jl
call
lods
int3
cmp
shl
test
add
sbb
pop
cwde
test
pop
mov
inc
std
add
add
inc
imul
pop
cld
or
mov
lea
push
in
loopne
jg
pop
xchg
cmp
dec
aam
scas
mov
sbb
add
xchg
test
dec
xchg
or
js
stos
adc
sub
mov
jge
mov
cmp
les
push
mov
(bad)
fnstcw
push
ja
push
lea
push
dec
loopne
add
add
or
stos
sbb
mov
mov
lods
pushf
mov
cmp
je
or
dec
push
inc
or
pusha
and
push
push
jg
loope
pop
add
dec
or
jb
jmp
mov
mov
punpcklbw
sbb
fcom
ins
mov
dec
adc
loopne
int
js
js
mov
out
push
push
push
xchg
shr
jle
sub
mov
enter
fmul
scas
div
sar
inc
adc
inc
rcl
add
add
jl
shl
cs
js
jle
sub
push
or
nop
jecxz
loop
(bad)
in
pop
ret
scas
add
push
sar
gs
(bad)
mov
add
add
pusha
cwde
jge
push
mov
call
mov
and
jle
mov
or
mov
or
mov
push
mov
(bad)
repnz
call
call
or
test
pop
jge
pavgb
loop
and
adc
stc
ret
int3
pop
mov
inc
int3
lea
mov
jmp
sbb
mov
dec
enter
pop
int3
hlt
into
ds
pop
cs
cdq
push
mov
clc
inc
mov
shl
mov
clc
add
mov
sbb
sub
adc
mov
les
mov
add
or
jae
mov
add
add
add
mov
add
lea
push
arpl
out
and
push
stc
sbb
mov
or
retf
stos
xor
add
hlt
rol
mov
lahf
ja
loope
push
pop
les
xor
jp
invd
cmp
sar
outs
loope
mov
je
mov
and
or
inc
jge
aaa
std
adc
sub
push
push
mov
push
or
jg
into
fs
test
jle
dec
scas
jle
arpl
clc
push
push
aad
dec
add
jl
inc
fdivr
push
mov
jbe
mov
mov
push
add
test
and
cmp
jae
sub
inc
ins
ror
adc
or
push
jne
popa
mov
jmp
int
pop
rcl
cmps
push
pop
inc
jmp
or
mov
jmp
neg
add
jl
push
sbb
ja
xor
cmc
add
mov
jge
dec
xor
and
sub
add
inc
adc
adc
cmp
adc
(bad)
in
(bad)
push
push
adc
push
cmp
ja
je
cmp
je
jae
std
push
cmp
jne
imul
mov
push
adc
xor
and
(bad)
int3
lds
test
sbb
pop
add
add
add
add
pop
loop
sbb
mov
or
mov
xor
std
pop
or
adc
ffreep
inc
inc
xchg
push
pop
pop
fsub
std
push
data16
add
je
push
shr
jmp
dec
add
cmp
mov
data16
sti
jg
rol
add
test
push
push
adc
clc
or
inc
(bad)
pop
pop
das
pusha
lahf
xor
or
(bad)
mov
cs
adc
mov
add
in
inc
inc
and
mov
mov
lea
push
adc
or
test
mov
add
int3
cwde
push
lock
jg
outs
sub
push
sbb
mov
pop
jne
rol
pusha
inc
jno
pop
in
adc
adc
out
retf
out
(bad)
sbb
jg
je
and
push
adc
ret
inc
adc
and
adc
adc
mov
rol
jae
inc
outs
add
lods
sbb
add
adc
(bad)
sbb
je
mov
js
add
xchg
scas
sti
scas
das
mov
mov
or
xor
sbb
cmp
imul
add
xor
adc
add
add
pop
mov
sbb
cmp
pop
inc
sbb
mov
ret
test
pop
mov
or
mov
sbb
or
inc
cmp
inc
inc
inc
fdiv
push
pop
pop
or
(bad)
fcomp
push
or
sbb
dec
cmp
loopne
pop
xchg
fld
inc
push
xor
pop
add
loopne
inc
cmp
iret
std
icebp
enter
test
je
and
jecxz
mov
das
sub
mov
cs
and
add
shl
push
mov
call
mov
test
xchg
add
and
adc
jmp
std
fst
test
xor
ins
and
or
enter
pop
lahf
mov
mov
inc
pop
push
mov
jno
jmp
mov
push
(bad)
es
push
jp
in
pop
adc
stos
scas
jge
or
dec
add
push
test
call
cli
pushf
lea
mov
lea
mov
mov
pop
mov
mov
ror
jne
aaa
cld
push
mov
or
mov
fisubr
sbb
inc
adc
push
push
cmp
xchg
cmp
movs
pop
nop
or
add
add
inc
stc
mov
fiadd
jecxz
fstp
and
or
xor
lods
sbb
lods
mov
cmp
loop
mov
add
into
jno
cld
jg
mov
and
xor
(bad)
in
stos
pop
xor
sbb
jle
lods
xor
sbb
data16
call
mov
fsubr
or
mov
pop
inc
lock
(bad)
sbb
adc
mov
(bad)
(bad)
cli
dec
call
je
sub
mov
dec
sub
daa
nop
add
mov
dec
shr
and
and
or
inc
mov
mov
push
call
pop
dec
cmp
fst
repnz
mov
mov
xchg
and
inc
sub
push
dec
xchg
push
lock
pusha
sbb
jg
and
add
mov
mov
jmp
xor
iret
lods
inc
js
mov
mov
inc
jmp
mov
xor
dec
cmp
dec
sub
push
and
adc
push
add
dec
or
jno
mov
fadd
sbb
or
int3
int3
lahf
or
adc
and
add
iret
mov
or
sub
add
push
jge
mov
int3
dec
add
dec
nop
pop
jmp
jge
inc
shl
das
mov
cmp
and
push
push
dec
add
mov
sub
clc
mov
test
clc
mov
jg
pop
mov
aas
data16
xchg
fild
or
dec
mov
cmc
icebp
sahf
jnp
and
adc
ins
test
enter
push
cld
loope
rcl
dec
rol
or
and
call
push
add
push
or
mov
dec
mov
mov
mov
mov
inc
mov
clc
push
iret
loopne
or
test
mov
sub
cmovbe
pop
in
pop
lea
add
adc
mov
shl
in
cld
(bad)
jmp
cld
add
mov
mov
mov
mov
movdqu
movdqu
add
das
popa
cld
aaa
cmps
clc
mov
push
mov
call
jge
add
sar
mov
push
mov
test
cmovne
mov
mov
sub
cmp
jb
cmp
jae
scas
jno
mov
pop
shr
mov
mov
add
lea
pop
and
aas
ja
pusha
and
scas
dec
mov
mov
lea
adc
mov
cmp
ja
sub
add
outs
jp
inc
or
lea
vandnps
or
adc
mov
cmp
ja
inc
daa
inc
sar
mov
sar
sub
mov
call
push
or
xor
or
jb
xchg
cli
rep
les
iret
inc
sar
dec
cmp
xchg
push
idiv
out
iret
cmp
inc
add
dec
or
sub
add
sar
lea
mov
les
lea
inc
div
or
push
into
std
ins
pusha
mov
cmps
add
sbb
repnz
push
or
arpl
call
shl
lock
push
mov
mov
push
jno
jmp
in
cmp
add
pop
test
dec
fdivr
pop
adc
xor
pop
inc
add
lea
shr
push
stc
and
cld
mov
mov
sub
fcom
icebp
daa
test
sbb
pop
movs
loop
jmp
add
jmp
inc
cld
or
lock
neg
ror
mov
or
or
inc
or
or
ja
jmp
or
fist
or
sbb
adc
int3
add
bswap
pop
push
pop
pop
pop
outs
sub
nop
and
fistp
ret
push
push
(bad)
movntps
add
(bad)
adc
mov
jle
enter
cmovae
sbb
adc
pop
pop
mov
push
call
jno
rol
adc
pop
and
mov
and
push
push
add
xadd
mov
aas
add
jl
fidiv
(bad)
cmp
cmp
jle
push
mov
pop
push
add
outs
inc
ss
and
shl
or
sar
lea
mov
das
or
(bad)
ffreep
pop
mov
or
loopne
cmp
mov
mov
mov
out
inc
std
xchg
xchg
mov
mov
jb
sbb
jge
movs
loopne
pop
bswap
mov
ret
or
cmps
add
outs
dec
mov
sub
or
inc
push
adc
push
xor
and
jg
pop
sub
je
test
push
xchg
cmp
mov
es
ja
icebp
pop
adc
xor
scas
(bad)
cdq
jp
mov
sub
popf
mov
pop
adc
add
jecxz
sub
mov
popf
retf
push
mov
mov
xchg
jne
ja
mov
lea
lock
lea
push
mov
lock
add
inc
add
inc
lock
push
add
push
fadd
fild
inc
hlt
jmp
neg
and
ror
sub
vmread
mov
inc
out
bnd
cmp
jge
dec
mov
mov
lea
je
xchg
or
inc
add
push
adc
or
mov
cld
sbb
push
lea
mov
cmc
out
pusha
add
in
loopne
retf
mov
add
inc
je
xor
les
call
mov
push
shl
sbb
sbb
arpl
cwde
add
and
xor
cmp
jb
fs
aas
dec
mov
test
adc
add
cs
inc
movups
adc
leave
push
aam
in
pop
push
xchg
and
push
mov
mov
mov
aam
sbb
cvtpi2ps
jne
test
inc
in
or
mov
mov
pop
enter
lahf
push
push
push
and
pop
push
int3
or
pusha
mov
or
mov
div
jo
not
pushf
aaa
addr16
bound
or
cmp
fbld
xor
popa
pop
push
pushf
fcomp
sub
dec
mov
cli
sbb
sbb
pop
pop
cmp
jne
cmp
jne
mov
jnp
sbb
dec
jne
mov
and
mov
or
cld
stos
xor
adc
dec
or
out
pop
rol
in
or
cmp
mov
ja
movs
retf
mov
push
xor
mov
jbe
je
dec
aas
add
inc
mov
or
addr16
inc
mov
(bad)
stos
and
sbb
stos
scas
or
push
aad
lock
jne
sbb
int3
push
leave
pop
or
adc
aas
std
sbb
add
dec
mov
push
aad
stos
inc
pop
mov
mov
jmp
add
or
add
lahf
das
mov
jg
mov
pop
aaa
cmp
jne
cmp
jne
push
pop
ins
mov
push
add
fist
minps
mov
jne
rcr
sbb
sub
out
lahf
push
je
jmp
iret
adc
mov
mov
mov
clc
rcl
mov
push
les
das
jle
add
mov
push
mov
mov
loope
enter
mov
push
mov
(bad)
mov
adc
add
adc
lock
or
mov
shrd
and
add
add
xor
shr
or
movzx
or
jg
mov
movs
ret
cdq
test
sub
movs
repnz
or
inc
out
dec
movhps
adc
or
out
or
or
pop
pop
sub
call
bound
add
daa
inc
cmp
in
push
loopne
clc
cmps
mov
jne
xor
pop
mov
adc
cli
sbb
xchg
mov
mov
push
hlt
ret
and
xchg
call
inc
pop
sub
rcl
sbb
or
icebp
cmps
jg
sub
cld
dec
jne
dec
pop
lea
fwait
add
movs
jg
pop
mov
sub
inc
std
xchg
dec
pop
sbb
adc
ja
jne
hlt
call
cmp
sar
pop
push
push
clc
(bad)
push
pop
lea
movzx
movzx
xor
shr
mov
movzx
xor
movs
push
movzx
xor
adc
mov
(bad)
xor
xor
push
dec
jne
and
push
jmp
pop
adc
test
fwait
jb
inc
or
dec
icebp
mov
mov
sub
push
mov
sub
sar
and
lock
xor
cld
inc
sbb
stc
invlpg
add
jne
inc
add
cmp
jb
inc
mov
mov
sbb
pop
pop
xchg
sbb
xor
cmp
or
pusha
es
jl
mov
out
pop
mov
or
jbe
add
cli
test
xlat
sbb
mov
jno
mov
xchg
cmp
mov
inc
aaa
mov
jb
mov
test
dec
sub
dec
js
sub
sar
dec
pop
push
hlt
cmps
push
mov
(bad)
stos
mov
sbb
or
or
sub
or
(bad)
call
mov
mov
mov
mov
sub
adc
(bad)
cmp
add
add
jae
adc
aad
sbb
jae
cmps
add
(bad)
rcl
int3
cdq
jae
in
inc
in
mov
jl
dec
or
daa
fwait
inc
ds
cmp
push
inc
or
cmp
jae
jge
loopne
mov
jecxz
or
iret
pop
int
jb
imul
or
inc
or
aad
shr
inc
push
push
adc
movs
lods
cwde
lds
ret
or
iret
clc
jg
xor
push
call
mov
pusha
ja
mov
mov
or
(bad)
mov
(bad)
cdq
fcom
xor
mov
retf
push
loopne
push
das
fcomp
ret
pop
rcpps
cmp
jbe
adc
push
iret
hlt
lock
cmp
inc
cmp
adc
mov
add
inc
ss
shl
jne
cmp
inc
add
jne
call
out
dec
mov
je
neg
add
push
mov
inc
push
call
leave
(bad)
pop
pop
cld
inc
ss
inc
cmp
jb
jbe
push
daa
add
rcr
jecxz
adc
mov
cmp
sbb
inc
fcom
inc
mov
loope
fild
mov
leave
je
(bad)
push
adc
mov
sbb
xchg
test
adc
add
test
mov
jmp
add
adc
sqrtps
jbe
or
arpl
jmp
je
jno
dec
cmp
jge
call
repz
cmp
jl
(bad)
mov
mov
shr
add
mov
cmp
je
cmp
jg
jmp
mov
jmp
cmp
mov
lock
out
fadd
fistp
push
ins
call
add
jo
xchg
sbb
iret
or
push
sub
mov
push
mov
and
stos
ror
loop
enter
jbe
mov
push
sub
xchg
push
jecxz
loopne
push
fisttp
loope
hlt
mov
das
sub
and
jg
(bad)
adc
inc
cmp
pop
dec
xor
or
inc
inc
and
inc
sar
cmp
mov
jg
mov
test
jle
or
adc
out
add
sub
movzx
(bad)
(bad)
call
add
mov
add
shl
xor
shl
xor
mov
shr
add
test
jg
fistp
adc
sbb
add
movsx
in
fdivr
add
loope
xor
shl
xor
xor
or
adc
adc
mov
or
shr
dec
cmc
add
lea
push
shr
jg
into
into
sbb
or
jmp
cld
pop
add
pop
pop
ret
in
mov
mov
push
adc
mov
nop
loopne
adc
xchg
pop
jne
dec
cmps
data16
leave
jne
push
push
out
or
lock
push
fadd
mov
add
add
fisub
xor
cmp
sahf
and
sbb
add
jo
in
sbb
mov
dec
push
xor
cmp
jae
or
outs
sbb
xchg
push
daa
mov
or
sub
mov
fwait
add
adc
call
and
mov
arpl
push
push
inc
dec
sub
mov
outs
push
pop
xchg
stos
jle
dec
fist
mov
sub
add
push
bound
jb
js
pusha
int3
dec
xchg
leave
loopne
mov
pop
imul
ret
cmp
mov
sbb
push
push
ficom
pop
push
hlt
add
mov
cli
jg
push
cmp
jne
mov
add
lods
adc
jp
or
pop
adc
mov
push
test
jns
in
add
add
iret
push
bound
jg
sbb
jp
shl
pop
adc
dec
or
jnp
mov
add
add
ja
repnz
iret
lahf
push
push
into
inc
ror
sbb
xchg
jns
xor
fidiv
leave
fxch
mov
and
es
test
je
sub
sub
imul
push
push
(bad)
pop
pusha
push
in
cmp
jg
or
aaa
dec
cld
mov
cmp
mov
pop
jno
pushf
and
xchg
fs
sub
xor
shl
or
xor
cmp
cmp
cld
cmp
xor
pop
fild
adc
fcmovnu
and
ror
(bad)
jmp
adc
inc
fsubr
xchg
(bad)
mov
push
test
sub
push
or
jbe
add
jne
inc
sbb
and
mov
scas
inc
cmp
mov
cmp
jae
sbb
sub
jns
dec
pop
add
pop
hlt
xor
test
outs
sbb
and
or
add
data16
pop
inc
sbb
mov
add
lea
cmp
and
add
lea
push
lea
mov
ja
and
and
add
sub
lods
add
cmp
nop
xchg
inc
mov
add
call
jge
hlt
cmp
pop
sub
or
push
add
shl
jmp
test
jns
or
add
icebp
scas
mov
add
pop
or
or
or
mov
adc
pop
push
push
mov
mov
adc
dec
push
fldenv
icebp
aad
push
pop
and
or
lods
dec
mov
pop
lea
lock
sbb
pop
mov
dec
scas
adc
cmp
scas
and
sbb
pop
rol
data16
and
pop
test
aaa
mov
add
es
push
xor
pop
jne
popf
sbb
sub
leave
sub
dec
dec
jmp
clc
and
movs
das
inc
or
ret
and
mov
das
and
inc
add
sbb
les
sub
ss
data16
pop
push
inc
push
sub
pop
rcl
(bad)
jg
ror
push
xor
or
pop
sub
mov
add
inc
call
(bad)
enter
loopne
add
int
push
jne
xchg
xor
(bad)
jne
cdq
call
sbb
mov
add
push
adc
das
jmp
add
lea
push
lea
pop
outs
or
mov
mov
ret
xor
xchg
shr
sbb
fwait
mov
fbld
loop
inc
loopne
lea
popa
mov
rol
mov
inc
mov
dec
mov
lock
push
adc
or
adc
push
idiv
mov
lahf
(bad)
mov
xchg
mov
lea
data16
xor
outs
xchg
adc
sbb
stos
loop
cmc
jae
mov
in
add
xchg
dec
stc
jnp
add
sbb
leave
ret
add
iret
mov
mov
mov
cmp
jne
jg
push
push
mov
mov
outs
add
sub
sub
mov
stc
mov
js
push
ja
je
inc
inc
mov
pop
sar
gs
mov
jmp
mov
mov
add
(bad)
cmp
inc
sbb
jo
jmp
das
loope
pushf
inc
adc
sub
and
pusha
xchg
movs
jmp
add
push
and
pop
and
sbb
xchg
out
xor
std
retf
or
(bad)
cmp
pop
or
test
jne
mov
mov
mov
ficomp
adc
xor
jb
loopne
pop
xchg
(bad)
push
mov
push
mov
mov
into
push
mov
mov
call
dec
adc
adc
dec
jb
mov
jmp
mov
push
call
or
test
(bad)
fist
inc
pop
adc
(bad)
jne
adc
push
rol
repnz
or
push
dec
add
dec
add
xchg
dec
add
dec
inc
add
inc
cmp
dec
scas
inc
or
xor
cmp
mov
js
mov
mov
stos
cmp
jnp
and
(bad)
(bad)
call
jmp
add
pop
or
popf
pop
mov
and
xlat
add
mov
inc
sub
add
bound
mov
push
push
rol
sub
push
or
rcl
cmc
cmpeqps
mov
mov
aas
in
sub
mov
cmp
ja
or
add
add
fsubr
add
mov
sbb
jmp
ja
sbb
jmp
mov
mov
xchg
jb
xchg
lods
lgs
xor
fs
sub
add
inc
sbb
aaa
sti
call
mov
test
jne
xor
jmp
cmp
or
mov
lea
into
mov
dec
fwait
add
xor
shr
or
or
add
fst
or
sahf
dec
js
add
ror
std
pop
push
jno
fucomi
xor
mov
mov
gs
seto
neg
or
push
mov
jnp
sub
adc
aas
(bad)
jmp
lea
mov
inc
test
adc
jp
push
shl
pusha
addr16
push
mov
mov
sbb
or
fbstp
adc
or
pop
inc
adc
pop
mov
mov
add
ds
mov
(bad)
xor
and
pop
dec
add
arpl
add
pusha
icebp
mov
mov
push
sbb
push
add
cs
push
mov
sub
ucomiss
movs
out
out
push
xor
lahf
adc
and
push
repnz
add
sbb
addr16
add
out
in
loop
inc
jmp
inc
xchg
ret
and
or
add
xor
das
ds
sbb
xor
inc
in
xor
pop
or
fucomip
das
pushf
push
adc
jae
mov
rcl
inc
(bad)
push
mov
mov
mov
mov
loop
add
push
pop
in
loop
dec
clc
mov
mov
shr
mov
mov
shr
or
test
ret
xchg
xchg
add
pop
das
sub
ror
and
push
ret
gs
cmp
xchg
xchg
cdq
mov
mov
mov
add
aam
rcl
or
mov
je
(bad)
push
mov
(bad)
adc
mov
mov
or
mov
add
clc
retf
out
loopne
inc
leave
sub
adc
xlat
je
ja
aad
iret
test
or
ror
add
cmp
jne
js
jmp
outs
(bad)
(bad)
call
scas
mov
mov
mov
mov
xor
and
xor
mov
xor
add
(bad)
fucom
add
inc
add
shl
dec
or
push
sub
xchg
loopne
inc
jmp
mov
arpl
adc
jmp
std
jmp
add
and
js
test
je
push
mov
push
push
push
jmp
add
add
mov
popf
sub
add
leave
test
sub
push
and
adc
and
jbe
push
and
adc
push
shl
or
dec
sub
push
inc
adc
sub
test
jbe
call
sbb
or
push
aas
inc
and
jg
nop
mov
sub
push
cmp
out
dec
cmp
jbe
push
push
cmp
(bad)
sbb
add
fbld
and
jg
xor
add
add
pushf
nop
inc
mov
popa
push
add
add
test
std
es
iret
ss
mov
cmp
in
ret
cmp
cmp
dec
cmp
pop
aad
pop
test
adc
dec
xor
addr16
mov
xor
lea
sbb
xor
cmp
xor
adc
test
sub
loope
pop
add
xor
xchg
in
add
lea
adc
inc
sbb
inc
and
lahf
xor
pop
cmp
(bad)
mov
xchg
add
stc
jne
push
mov
hlt
(bad)
(bad)
stc
cmp
je
cmp
je
pop
mov
mov
pop
jle
nop
mov
test
add
inc
add
je
or
mov
mov
lea
mov
loopne
add
les
or
pop
das
add
sbb
mov
xor
mov
ret
bound
add
cdq
fiadd
cmp
addr16
xchg
rol
mov
call
sub
and
xor
aaa
jg
ja
push
adc
lea
mov
pop
xor
adc
push
adc
adc
ja
(bad)
push
adc
cmp
inc
or
xchg
ret
cmps
enter
mov
(bad)
out
jp
inc
inc
add
xor
inc
add
dec
adc
inc
or
mov
inc
cld
sbb
push
add
into
mov
inc
inc
add
inc
or
cmp
mov
int3
mov
jnp
and
ds
pop
cli
push
lea
outs
or
setne
cmp
inc
shr
or
xchg
cli
test
xor
sub
into
mov
jne
pop
leave
ret
test
xor
inc
pop
(bad)
sbb
adc
or
adc
les
dec
mov
xor
popa
and
inc
xor
inc
mov
inc
sbb
pusha
sub
add
push
ror
xor
adc
add
scas
adc
mov
jge
mov
cmp
je
or
or
jp
in
leave
jne
shr
and
and
inc
adc
push
sahf
ja
inc
mov
and
mov
fiadd
aas
rcr
add
push
or
or
loopne
add
das
sbb
clc
adc
pop
es
scas
call
es
icebp
xor
adc
clc
pushf
mov
pop
adc
mov
cmps
inc
push
cmp
push
mov
mov
cmp
je
xchg
lock
jmp
pop
adc
lahf
dec
dec
fisubr
clc
cld
sbb
sub
pop
xchg
cld
aas
pop
xor
push
out
jne
movs
enter
sbb
mov
movs
xchg
scas
sub
je
fcmovnb
inc
cwde
sbb
call
push
rol
push
lea
mov
sub
test
or
inc
arpl
inc
shl
push
mov
lea
mov
(bad)
push
dec
lods
lea
mov
aam
pop
les
mov
loop
movs
dec
dec
lahf
cmp
mov
adc
pop
jbe
sar
jg
cmp
jne
cmp
jne
lea
pop
cmp
xor
cld
movs
fwait
mov
xor
movs
shl
xor
sub
push
mov
jb
cmp
jne
adc
sbb
iret
retf
add
push
mov
jbe
hlt
sbb
push
outs
(bad)
sub
sub
push
pop
inc
xor
sbb
ins
js
ror
mov
aam
(bad)
popa
mov
pop
(bad)
xor
push
push
daa
scas
lea
mov
jecxz
dec
and
into
je
dec
or
add
std
sbb
and
cmp
sbb
cld
out
dec
rol
mov
pop
cmp
mov
xor
mov
inc
xor
mov
sub
mov
cmp
je
(bad)
std
ror
jmp
mov
mov
test
jne
pop
enter
cld
cmp
jne
adc
and
adc
add
pop
xlat
jb
mov
add
ins
jmp
or
aas
or
pop
mov
sbb
xchg
or
push
pop
push
scas
sub
fwait
fs
scas
mov
jno
jno
or
xor
push
or
jno
ds
inc
sbb
fcomp
test
dec
test
mov
push
jg
cmp
cmp
mov
rcr
fucomip
loop
jb
sbb
add
(bad)
inc
in
fcomip
cmp
jne
mov
cwde
nop
fild
cmp
push
rol
adc
inc
ror
sti
clc
add
inc
les
or
or
loopne
enter
mov
dec
cmp
ret
mov
add
sbb
(bad)
jb
in
inc
ret
mov
mov
add
ds
mov
jne
or
or
fcomp
xor
cs
lods
jbe
(bad)
mov
mov
test
pop
xor
call
pop
mov
sbb
loopne
lds
sub
les
or
sub
add
enter
in
jae
dec
test
mov
and
sub
popa
xor
jne
or
loope
sub
sbb
lahf
jbe
sub
and
bound
dec
xor
sub
(bad)
dec
sbb
ins
cmp
lea
inc
jmp
dec
mov
mov
add
or
out
add
pusha
adc
and
cmp
sbb
cmp
and
add
mov
mov
add
cmovp
add
add
xchg
test
mov
and
mov
nop
push
loop
pusha
pop
pop
xchg
lahf
(bad)
xchg
add
out
retf
push
add
shl
add
add
add
mov
mov
jne
inc
adc
adc
nop
mov
mov
cmovne
push
or
jl
mov
inc
or
push
stos
fwait
dec
push
ret
out
inc
pushf
repnz
jo
pop
dec
jne
and
push
cld
sar
sub
sbb
or
ficom
in
pop
fdiv
inc
jo
add
and
or
or
add
jle
add
or
dec
call
cmp
sete
test
jne
mov
jmp
add
retf
cmp
jne
call
inc
in
inc
adc
loopne
push
cmps
or
push
loopne
movq
pop
dec
adc
fcom
add
inc
add
icebp
outs
in
arpl
add
adc
inc
or
sbb
push
je
adc
inc
or
pop
lock
jo
sub
fidivr
fcom
push
push
push
add
aas
add
add
cld
mov
push
mov
lea
jae
clc
push
call
scas
mov
cmovae
mov
add
pop
cmp
xor
call
add
mov
mov
sbb
push
push
add
or
add
in
std
xchg
push
mov
push
push
lea
push
lea
inc
add
(bad)
mov
popf
aas
or
movq
ins
add
cmp
std
ret
jne
(bad)
mov
adc
mov
sti
loope
into
adc
push
lahf
frstor
pop
inc
dec
inc
mov
or
cmp
arpl
mov
push
add
into
rcr
cmp
sbb
jb
mov
movs
js
mov
mov
ins
loop
or
ret
cmp
jb
lea
or
sub
mov
mov
push
call
jno
ds
mov
or
fstp
adc
or
jne
sbb
push
pusha
loopne
sub
jg
xchg
adc
(bad)
mov
mov
test
js
mov
xor
jmp
mov
xor
mov
mov
call
fmul
adc
ror
ret
jmp
mov
xor
mov
mov
mov
adc
enter
fwait
clc
pop
adc
mov
jmp
fimul
cmp
pop
sub
or
push
jbe
in
jmp
int3
add
pop
mov
(bad)
jmp
fcom
mov
mov
push
mov
push
jbe
stos
fisttp
loope
pushf
add
or
push
sub
sbb
sbb
and
and
mov
dec
pop
mov
pop
dec
pop
fmul
add
rol
mul
ss
dec
push
lods
pop
pop
jecxz
xor
pop
movsx
jne
ss
mov
add
sbb
mov
js
dec
add
ret
adc
call
sbb
adc
fwait
test
jne
cmp
jne
xor
inc
inc
mov
inc
cli
enter
push
mov
pop
xchg
add
inc
add
dec
add
adc
fcomip
addr16
sub
jle
mov
jmp
mov
div
xor
or
aas
pop
call
xor
inc
push
inc
or
ret
adc
shl
cmc
lds
sub
and
ss
inc
mov
xor
ds
pop
or
idiv
xor
push
test
jle
clc
cmp
jmp
xchg
cmp
je
inc
add
(bad)
jl
mov
or
into
pop
mov
in
inc
xchg
test
or
sbb
and
retf
ja
fadd
cmp
dec
or
inc
test
push
mov
dec
jb
cld
es
mov
test
js
outs
jge
xor
push
test
jle
mov
lea
cmp
je
inc
mov
clc
push
cld
hlt
cmp
jne
bound
lds
sbb
push
push
push
inc
out
fisttp
add
jne
pop
data16
(bad)
scas
jg
push
cmc
add
mov
ret
dec
dec
or
inc
ja
mov
pop
rol
inc
iret
in
loopne
cli
enter
add
je
add
test
or
lea
mov
cmp
or
adc
cmp
and
or
pop
out
adc
fcom
inc
(bad)
scas
icebp
movzx
inc
push
inc
sub
leave
inc
inc
sbb
lea
adc
adc
cmp
adc
and
mov
sti
add
add
in
call
lea
mov
jne
push
std
push
fs
inc
or
jmp
sub
inc
mov
(bad)
cld
es
add
adc
jmp
loope
xor
add
cmp
push
retf
scas
adc
popa
push
jg
add
sbb
int
sbb
cs
inc
adc
mov
push
xor
mov
mov
add
add
mov
sub
inc
mov
sbb
inc
add
int3
lahf
nop
and
mov
in
add
adc
imul
or
mov
fist
inc
cld
lea
adc
dec
add
or
push
xchg
and
loope
inc
push
and
sub
ja
cmp
cmps
and
jne
push
push
call
add
sub
(bad)
jbe
call
jns
push
(bad)
fld
ret
and
lea
add
xor
pop
pop
inc
retf
call
call
shr
jl
mov
sbb
dec
test
add
addr16
aaa
(bad)
lahf
xor
ds
mov
fwait
mov
out
cmp
jecxz
or
jmp
loopne
adc
mov
dec
int3
mov
push
dec
or
data16
adc
jg
inc
loopne
inc
add
cmp
jl
test
out
loopne
jne
nop
arpl
repnz
ror
mov
adc
movzx
dec
mov
mov
imul
stos
dec
push
sqrtps
std
aas
dec
dec
inc
test
mov
pop
not
inc
inc
adc
into
out
dec
dec
pop
jo
fisttp
retf
push
push
mov
or
mov
and
push
push
ret
aam
push
aas
cdq
dec
adc
xor
and
shl
adc
and
test
wbinvd
add
and
mov
jg
add
daa
jb
fbld
enter
cs
sbb
mov
loopne
hlt
push
dec
adc
dec
adc
or
ja
fcom
(bad)
jbe
push
bound
ins
mov
inc
push
add
cmp
sbb
cmp
lahf
cmp
jne
or
into
call
add
mov
cmovp
sar
outs
test
or
test
push
cld
comisd
jbe
mov
or
sub
cmp
sbb
push
inc
in
push
ror
clc
push
leave
jb
cmp
xchg
mov
cdq
push
xor
enter
(bad)
aas
test
lea
mov
cmovne
add
lea
push
push
pop
push
inc
xor
or
scas
dec
push
add
dec
xor
push
(bad)
jmp
aaa
jb
pop
dec
jmp
pop
dec
or
sbb
aas
ins
or
pop
cld
mov
mov
scas
out
sub
mov
sahf
mov
mov
mov
(bad)
(bad)
dec
inc
adc
adc
and
and
inc
and
inc
dec
mov
mov
aaa
lock
mov
mov
test
push
mov
mov
mov
test
inc
pop
mov
test
je
jg
pushf
jl
inc
push
mov
push
mov
sub
adc
push
or
push
cmp
push
mov
or
cld
mov
mov
mov
mov
mov
ja
add
push
add
or
sti
add
and
or
pusha
adc
add
dec
push
mov
mov
inc
mov
scas
pop
adc
sub
adc
mov
push
push
push
pushf
mov
jecxz
add
inc
pop
mov
mov
arpl
push
or
inc
jl
(bad)
(bad)
out
adc
test
push
rcpps
push
sbb
rcr
pop
pop
std
call
inc
or
push
dec
mov
mov
mov
push
mov
inc
inc
sbb
sub
inc
mov
scas
pop
add
xor
dec
xor
or
dec
sbb
inc
push
inc
xor
(bad)
aas
ret
sub
inc
cmp
ret
and
dec
ret
mov
mov
ffreep
cmps
cmp
inc
cmp
pop
sub
inc
sub
loope
inc
add
mov
mov
mov
mov
mov
pop
add
aaa
push
mov
sub
test
cld
cmps
loop
mov
sahf
and
dec
add
pop
add
and
jnp
dec
ret
add
mov
inc
cmp
add
fs
or
push
dec
cmp
jl
xchg
das
jge
mov
lea
lea
lea
lea
mov
lea
test
inc
jno
add
add
dec
and
adc
and
add
add
and
je
mov
and
mov
dec
je
aaa
adc
add
mov
(bad)
cmp
clc
dec
cmp
cld
mov
add
and
mov
inc
sbb
cli
fwait
clc
call
dec
sbb
jmp
xor
add
cmp
jne
mov
pop
inc
dec
mov
sar
jle
repnz
jb
dec
dec
lea
stos
sub
dec
sub
cmp
mov
and
cmp
cmp
ja
or
inc
inc
dec
cmp
les
or
xchg
sbb
(bad)
mov
jb
mov
retf
or
je
mov
jae
add
xchg
mov
out
repnz
add
push
adc
cli
ja
cmp
cli
jg
mov
cmp
jmp
mov
push
sub
(bad)
push
add
in
mov
xchg
cmp
neg
pushf
jb
mov
mov
fwait
stos
loop
add
mov
test
je
mov
push
sub
(bad)
(bad)
jmp
push
push
mov
int3
inc
mov
add
add
mov
sbb
or
cmp
xor
push
or
out
sbb
mov
inc
cmp
inc
dec
and
cld
inc
cmp
je
cmp
je
mov
ror
jne
sbb
xor
sar
mov
cmp
jl
jne
jb
jg
lahf
push
mov
sub
mov
xor
ds
mov
mov
push
ss
adc
cs
jne
xor
scas
or
call
and
sub
sbb
mov
pop
jge
fs
mov
push
lock
dec
xor
ins
dec
sbb
xlat
test
mov
sub
je
inc
and
test
inc
ja
mov
mov
pop
aam
jmp
pop
inc
fist
into
add
mov
cmc
jmp
xchg
mov
je
add
mov
cdq
or
fild
bound
push
lea
std
pop
test
pop
push
mov
test
je
mov
xor
aas
in
pop
push
add
xchg
sub
mov
mov
loopne
cmp
mov
sar
aas
mov
das
inc
push
add
mov
lods
inc
lock
mov
test
je
xor
ja
adc
push
(bad)
pushf
cmc
and
inc
sbb
pop
push
stos
cmp
mov
fist
sbb
inc
add
fmul
dec
add
pop
cmp
nop
or
retf
jmp
sbb
(bad)
fist
je
mov
mov
cmp
jne
mov
jmp
mov
or
call
stos
pop
or
out
xchg
jne
pop
adc
push
outs
pop
pop
data16
add
retf
outs
or
add
sub
pop
imul
add
mov
pop
mov
sub
jle
loope
pop
adc
outs
add
mov
mov
sar
test
mov
mov
mov
and
fwait
jo
jne
or
add
fidiv
push
shl
(bad)
(bad)
call
adc
jb
cmp
jb
mov
cmp
jb
xor
mov
idiv
test
sete
jmp
mov
or
ror
xchg
sbb
jns
outs
fwait
mov
fnstsw
cmp
jb
cmp
inc
inc
add
push
add
daa
je
mov
shl
mov
inc
mov
adc
scas
pop
jle
add
mov
mov
retf
sub
add
cmp
andnps
aas
sbb
mov
jmp
lea
call
ins
into
push
adc
adc
imul
mov
div
cmp
xchg
dec
or
inc
loopne
sbb
and
push
setb
test
mov
mov
dec
clc
nop
dec
pop
pop
add
mov
push
mov
rol
xchg
les
test
push
or
inc
sbb
or
or
add
test
lahf
dec
mov
(bad)
mov
mov
lea
(bad)
mov
clc
lds
or
mov
data16
popa
cmp
test
scas
cmp
sbb
xchg
dec
adc
add
xadd
push
test
je
pop
inc
outs
inc
inc
mov
call
jmp
xor
mov
cmp
push
cld
add
ret
lock
mov
das
pop
inc
mov
adc
data16
add
cld
mov
in
or
lock
sti
mov
cld
mov
inc
pop
popa
add
sbb
sbb
aam
xor
inc
cmp
sub
add
enter
and
lods
adc
pusha
push
lock
pop
mov
mov
jg
mov
push
jne
mov
sbb
inc
jo
shl
iret
mov
dec
push
fisttp
mov
retf
jne
mov
cmp
or
add
je
or
cmp
cmps
sub
sbb
pop
cld
sub
adc
mov
comiss
lods
adc
int
mov
test
stos
je
push
lea
mov
push
or
test
lds
push
jno
bound
xchg
mov
inc
or
dec
sbb
push
mov
lahf
iret
dec
push
mov
jb
adc
ror
ds
mov
add
sbb
in
nop
daa
icebp
fwait
jmp
adc
add
ret
sbb
jg
push
aad
popa
ret
iret
or
mov
push
iret
push
test
je
push
mov
push
sbb
push
sub
fadd
sar
adc
jno
dec
sbb
inc
in
dec
in
push
push
outs
or
(bad)
push
mov
lea
sub
sahf
or
and
sbb
cmps
push
push
push
push
push
fist
adc
test
jmp
aam
dec
in
xchg
jmp
dec
ret
int3
not
cli
inc
aaa
pop
lea
push
lea
push
push
call
mov
sub
mov
sbb
pop
retf
add
pop
lahf
pushf
lea
(bad)
sar
sbb
inc
repnz
or
mov
xchg
mov
mov
icebp
sbb
ficom
or
push
daa
fadd
pop
and
add
test
and
mov
adc
call
mov
mov
ret
inc
sbb
mov
js
or
pop
push
push
xor
mov
mov
mov
push
jbe
lock
dec
lock
pop
add
test
or
jle
or
ins
nop
pop
repnz
sub
inc
out
arpl
dec
add
lea
inc
pop
stos
or
pushf
in
xchg
sar
loopne
clc
data16
or
jb
push
mov
or
xchg
mov
enter
adc
push
push
out
pop
mov
push
push
adc
lea
or
iret
aas
inc
sbb
test
add
test
sub
push
xor
(bad)
js
(bad)
sbb
(bad)
addr16
in
aad
std
dec
xchg
mov
loop
rol
mov
xchg
scas
scas
ret
xor
adc
pop
into
pushf
or
inc
in
mov
add
lods
stos
sar
loope
(bad)
adc
fdivr
ror
cmp
cmp
mov
adc
lock
cmp
loopne
pop
add
std
cmp
ins
mov
inc
rol
push
sti
bound
xor
pop
lock
push
test
lods
test
inc
loope
cmc
test
(bad)
(bad)
out
in
dec
les
lea
sbb
fucom
dec
aas
adc
cmp
aam
add
popf
loope
ficom
jg
inc
fcom
dec
or
dec
fmul
(bad)
jo
pop
mov
fmul
popa
sbb
push
sub
xchg
and
inc
test
mov
dec
rol
int3
mov
mov
aaa
add
or
push
fadd
add
mov
sub
ret
ja
adc
lea
(bad)
jg
inc
fmul
add
jne
mov
cmp
lea
cmovb
add
mov
mov
call
(bad)
(bad)
cmp
jne
mov
xor
mov
mov
div
push
or
mov
add
rcr
ja
lea
rol
fadd
add
adc
push
add
adc
push
add
inc
sbb
dec
mov
sar
call
and
loopne
push
jle
dec
cmp
adc
mov
cmp
les
pop
xor
pusha
xor
push
(bad)
aam
add
test
push
test
je
pop
pop
xor
cmp
pop
rcl
addr16
jne
inc
jg
mov
adc
add
cmovno
or
and
gs
in
daa
test
ret
push
inc
xchg
ret
mov
loopne
mov
lods
outs
out
mov
mov
mov
or
addr16
inc
xchg
jbe
inc
adc
inc
sbb
jo
adc
scas
(bad)
loope
jl
aaa
jl
lea
add
mov
lea
retf
mov
(bad)
ficomp
and
shr
sub
cmp
and
mov
sub
pop
stos
cwde
shr
fwait
push
push
test
push
cs
pop
mov
mov
ret
sub
adc
femms
add
shl
aam
js
add
out
clc
loopne
mov
stos
inc
fwait
lea
mov
add
sub
mov
push
push
mov
xchg
(bad)
and
mov
jle
or
push
push
jge
popa
cwde
and
pop
cdq
div
ror
inc
in
push
loopne
and
dec
push
jl
or
cld
xor
pop
test
je
jnp
ja
or
js
mov
fiadd
retf
add
push
lea
pop
jno
push
push
popa
push
rdpmc
or
int3
cwde
mov
push
lea
or
daa
mov
sub
(bad)
push
lea
clc
mov
jge
rol
mov
or
cmp
jg
or
fstp
add
sbb
inc
in
mov
mov
inc
or
or
retf
lea
mov
push
inc
arpl
push
lods
jmp
push
sbb
out
pop
inc
sbb
push
inc
daa
pop
mov
scas
aas
gs
push
ss
lea
ja
jmp
sar
ror
ret
gs
test
jne
dec
imul
or
add
add
pop
arpl
out
adc
dec
(bad)
cmp
movzx
mov
mov
scas
add
dec
lea
inc
mov
call
add
mov
das
sbb
out
dec
jb
in
cmps
dec
mov
pop
mov
sbb
dec
or
shl
cmovne
lea
mov
call
mov
mov
cmp
je
adc
mov
cmp
je
jp
xchg
add
icebp
jne
jl
push
cmp
je
jne
xor
loope
or
adc
push
xchg
pop
cld
outs
dec
and
or
push
mov
push
or
xor
push
loopne
pusha
xor
or
bound
mov
in
call
mov
push
stos
mov
nop
or
ret
cmp
pop
dec
std
pop
xor
mov
mov
aad
leave
ja
out
movs
(bad)
push
push
push
xchg
aad
lea
rcr
mov
sbb
add
inc
push
lahf
fild
add
jo
arpl
mov
addr16
stos
dec
xchg
fs
push
sar
sbb
mov
je
mov
mov
mov
push
push
scas
pop
mov
stos
sub
lahf
pop
push
cwde
push
pop
fidiv
jne
sub
cmp
and
push
push
mov
adc
popf
dec
cld
mov
add
imul
xlat
cmp
jne
inc
sar
push
out
mov
mov
jmp
mov
sbb
fadd
cmp
bnd
loop
test
mov
mov
mov
sti
mov
add
dec
ja
ins
mov
inc
add
xor
sar
mov
mov
mov
mov
mov
ret
ja
mov
mov
or
inc
mov
sub
inc
scas
test
scas
dec
jno
and
nop
push
and
cli
xchg
bound
pop
lods
mov
push
jl
in
xor
pop
add
xor
lock
and
adc
push
aas
add
or
ja
aad
mov
pop
pop
loopne
add
ret
outs
pop
or
adc
es
enter
mov
cmp
je
push
jo
ja
push
push
mov
xchg
mov
mov
jb
lea
outs
mov
call
sub
scas
pop
dec
sub
jns
mov
and
adc
add
and
pop
adc
js
xor
retf
xor
fcomp
add
addr16
or
gs
mov
mov
adc
out
pushf
jno
dec
lea
(bad)
push
mov
jg
jne
mov
arpl
and
int3
loopne
add
repnz
mov
add
jne
pop
pop
or
js
jg
push
pusha
(bad)
push
mov
jecxz
lea
aad
js
test
add
out
sahf
mov
xchg
mov
xchg
aas
jg
rol
dec
push
mov
xor
lea
dec
cmp
add
loop
test
cmp
add
enter
inc
mov
pop
mul
cmp
sbb
test
mov
sub
sar
lahf
and
add
(bad)
jae
ret
aas
ja
push
(bad)
inc
jnp
xor
js
mov
mov
inc
scas
sbb
cmp
jb
cmp
mov
xchg
call
jmp
adc
dec
inc
and
js
ja
sbb
add
(bad)
sti
scas
jno
add
jae
cmp
icebp
aas
ja
push
push
ret
mov
add
sbb
pusha
jb
dec
and
mov
mov
or
pop
iret
push
xchg
and
sbb
mov
nop
jecxz
fs
inc
inc
or
xor
jne
lea
push
push
ret
push
or
ins
sbb
hlt
adc
adc
pop
add
fsub
inc
mov
mov
adc
push
mov
push
pop
lock
mov
or
mov
sbb
call
jb
fcmovne
sub
mov
or
vunpcklps
mov
and
mov
pop
and
ss
daa
xchg
mov
das
sub
outs
mov
or
and
add
das
out
ja
adc
test
pop
imul
push
mov
stos
xchg
pop
and
or
stc
popf
pop
icebp
dec
or
add
add
pusha
retf
bound
fsub
mov
in
loopne
aam
add
sub
push
jmp
adc
mov
cli
inc
xchg
(bad)
mov
shl
shl
xor
mov
add
push
xor
(bad)
jmp
or
mov
pop
dec
pop
es
xor
pop
jb
inc
mov
inc
lea
push
jg
(bad)
xor
push
mov
push
push
pop
test
bound
enter
xor
sbb
xchg
mov
pop
jo
mov
loope
sbb
ja
and
fild
loopne
mov
adc
pop
in
pop
pop
mov
mov
scas
pop
(bad)
push
adc
js
std
fwait
add
pop
or
adc
ja
or
lock
push
sbb
sbb
test
push
nop
mov
mov
js
inc
jne
jae
aaa
dec
lea
xor
and
pop
jo
mov
jmp
or
stos
(bad)
clc
mov
cmp
jae
xchg
cmp
ja
sub
and
or
sub
dec
inc
test
je
mov
sti
add
inc
daa
pusha
inc
pusha
mov
dec
sbb
jg
add
ret
add
and
jae
and
lea
lods
and
out
dec
push
push
clc
and
xbegin
push
clc
jp
aas
hlt
mov
mov
xor
mov
inc
cmp
sbb
and
add
test
mov
adc
sbb
push
jl
or
pusha
or
cs
outs
pushf
mov
xchg
fild
inc
and
push
mov
mov
sbb
sbb
mov
push
push
les
jg
fsub
or
ins
loope
add
enter
mov
jo
scas
in
mov
add
outs
push
adc
add
jne
push
outs
cmp
fld
(bad)
ror
adc
push
std
sbb
stc
dec
add
adc
fcom
pop
mov
cmp
ficom
inc
pop
mov
mov
inc
jne
cmp
jne
and
jb
lods
and
int3
repnz
fbstp
imul
push
lea
add
out
jmp
js
mov
ret
jo
ds
pop
mov
mov
stc
inc
jne
pop
cmp
adc
mov
stc
sub
mov
add
iret
imul
icebp
xchg
inc
pop
mov
imul
dec
push
outs
push
loopne
push
push
ret
lea
std
ja
jle
cmp
je
mov
mov
inc
icebp
out
fdivp
jae
ds
mov
es
mov
lea
and
std
lods
jmp
stc
xor
sahf
push
mov
pop
cmp
jmp
sub
cmps
lea
hlt
add
or
je
imul
xor
daa
mov
out
clc
scas
es
push
out
jbe
mov
or
inc
popa
lock
cmps
or
clc
je
xchg
push
xchg
adc
ret
nop
inc
(bad)
mov
enter
or
sbb
dec
or
iret
pushf
sti
int3
mov
inc
fucomi
out
fmul
sbb
add
loopne
ds
pop
inc
and
outs
(bad)
aas
mov
iret
or
loope
pop
push
lods
mov
sti
or
push
sbb
inc
or
inc
cmp
sbb
and
mov
mov
rol
psrlq
enter
inc
add
mov
pop
jl
mov
inc
mov
mov
dec
wbinvd
add
jmp
aaa
fld
push
pop
outs
lods
dec
pop
mov
push
aas
mov
mov
jns
out
xchg
cwde
add
(bad)
dec
dec
dec
mov
mov
push
lea
mov
cwde
mov
mov
dec
add
aam
pop
dec
pop
inc
sub
in
enter
pop
sub
fidiv
push
mov
mov
les
mov
inc
push
sbb
pop
xor
dec
outs
adc
movs
pop
lods
push
push
mov
rol
adc
shl
aas
or
popa
mov
aaa
and
adc
lds
jae
es
into
sbb
adc
pop
cmp
jne
jmp
test
cmps
inc
fisub
pusha
pop
push
and
cmp
mov
es
inc
mov
aaa
loope
jne
mov
jae
jg
pop
inc
scas
inc
add
add
ret
xor
in
fadd
ret
pop
in
xor
push
out
(bad)
dec
jns
push
push
nop
mov
cmp
je
push
mov
inc
adc
inc
sub
(bad)
mov
sti
fist
sub
sar
cmp
jae
push
pop
mov
pop
dec
inc
pushf
sbb
xor
push
cmp
jae
or
inc
or
into
jo
sti
xchg
(bad)
popf
jb
xor
scas
pop
mov
mov
add
idiv
xor
or
xor
mov
add
cmp
jb
pop
fnsave
lods
es
pop
adc
add
push
pop
xchg
mov
dec
mov
xor
mov
pop
gs
inc
jo
sub
iret
pop
cmp
cmp
pop
fidivr
test
adc
lahf
push
sub
mov
sbb
mov
mov
add
fldenv
xchg
jge
pop
jmp
mov
mov
out
inc
add
mov
inc
outs
dec
xor
not
jg
xchg
int3
add
mov
sub
mov
xor
mov
mov
push
push
xor
mov
ja
loopne
adc
inc
mov
dec
ficom
push
push
pop
ins
sbb
cmp
adc
cwde
ror
xor
push
ret
jno
stos
mov
ret
sbb
test
dec
pop
jnp
add
cmp
pop
cmovb
pop
push
int3
ret
adc
int3
es
add
out
jg
sar
push
mov
mov
mov
sub
aas
(bad)
jbe
fldcw
repnz
push
push
cmc
in
fcomip
lea
push
sub
les
mov
dec
jae
xor
add
mov
cmp
cmp
(bad)
mov
sub
sar
sub
je
push
mov
add
dec
jne
mov
mov
sub
xlat
sub
lea
mov
push
adc
adc
inc
add
lods
mov
cmp
rdmsr
mov
les
sub
jg
add
out
mov
gs
mov
adc
inc
dec
pop
jge
push
sbb
adc
mov
mov
scas
jmp
stos
mov
cmp
jne
pushf
cmp
cmovb
sbb
cmps
jbe
mov
xor
adc
test
and
popa
out
iret
into
jne
in
mov
icebp
(bad)
jg
pop
ret
lea
cmp
jne
mov
push
lea
add
pop
test
fs
mov
mov
push
call
lea
inc
inc
push
scas
add
iret
push
ds
je
cmps
xchg
std
pop
mov
push
push
mov
aam
pop
or
xchg
adc
jb
or
dec
or
mov
and
test
stos
and
cmp
iret
pop
cmp
es
fisttp
(bad)
aas
dec
lock
mov
mov
mov
mov
mov
and
addr16
add
add
push
ffreep
jmp
mov
test
mov
cmp
mov
cmovb
repnz
sub
mov
adc
add
push
jne
jmp
add
or
cmp
add
push
jne
add
stc
inc
add
inc
lahf
stc
out
sub
add
inc
add
mov
and
imul
test
js
jne
jl
fdiv
je
sbb
xor
xchg
shr
(bad)
js
and
or
movs
pop
mov
mov
xchg
mov
out
jbe
adc
push
ret
jb
xor
jg
jmp
mov
test
(bad)
push
je
mov
mov
lock
mov
sbb
or
pop
xchg
clc
fbld
push
mov
jmp
xchg
(bad)
aaa
push
out
jle
mov
cmp
mov
jp
shr
popa
push
lods
dec
mov
jne
jb
aas
inc
jl
push
inc
pop
(bad)
cmp
std
out
outs
sbb
dec
lock
push
push
adc
and
mov
sub
mov
inc
push
hlt
xchg
into
inc
push
push
mov
mov
int3
adc
or
inc
sub
mov
aas
xor
mov
cmp
jmp
lahf
addr16
dec
call
inc
add
pop
push
add
icebp
adc
push
push
mov
nop
add
js
js
jl
test
addr16
add
fstp
adc
xchg
mov
aad
int3
inc
mov
add
adc
inc
add
out
sbb
fist
shl
push
pushfw
xor
push
mov
xchg
sbb
neg
xchg
je
test
or
add
inc
xor
add
jge
or
jnp
inc
add
dec
add
mov
cmp
jb
adc
push
xchg
push
mov
mov
into
cmp
test
and
pop
adc
mov
dec
xor
inc
jo
mov
mov
or
ror
mov
adc
xor
je
adc
add
dec
mov
mov
push
mov
adc
adc
add
int3
mov
cmp
je
xchg
icebp
in
add
or
sbb
sbb
add
add
mov
mov
out
stos
inc
dec
mov
es
scas
pop
pop
jg
in
lea
cwde
xor
test
call
dec
int3
dec
test
push
data16
aas
popa
pusha
sbb
std
pusha
call
in
sar
xor
repz
mov
jbe
sub
clc
or
pusha
scas
inc
adc
clc
sbb
mov
mov
mov
sbb
xchg
ret
mov
test
push
int3
add
lea
test
adc
aaa
adc
(bad)
mov
push
push
cmp
ja
pop
inc
add
mov
mov
or
sub
xchg
dec
mov
inc
jmp
sbb
stc
stc
sti
dec
jmp
push
pop
jmp
push
pop
stc
stc
stc
stc
test
push
pushf
jmp
mov
dec
enter
stc
stc
stc
fsubr
cmp
jmp
cld
jmp
mov
es
push
lock
sbb
pop
sub
mov
mov
or
dec
lods
lea
mov
mov
lea
loop
inc
pcmpgtd
(bad)
jg
add
inc
sbb
inc
fadd
jns
mov
(bad)
(bad)
jg
lods
xor
mov
add
cmp
je
mov
push
push
cmp
xor
stos
dec
sub
and
inc
ret
sbb
clc
jl
mov
mov
xor
clc
add
call
std
mov
mov
jl
add
add
(bad)
(bad)
inc
add
jle
mov
mov
jmp
mov
mov
lea
popa
inc
push
cld
(bad)
(bad)
inc
cmp
push
push
cmovae
cmp
push
cmovae
push
push
push
push
push
cli
sub
cli
ror
mov
call
cmp
sbb
jmp
push
repnz
or
jg
mov
jns
imul
mov
pop
xchg
add
xchg
pop
add
xchg
pop
or
cmp
dec
push
jmp
scas
imul
add
loop
lsl
xor
add
adc
add
mov
adc
or
or
iret
dec
add
or
or
adc
adc
adc
scas
arpl
and
arpl
inc
cld
cmpxchg
mov
jne
inc
jl
push
test
jne
pop
cmp
sub
sar
jmp
mov
lea
dec
hlt
mov
push
lea
int3
pop
scas
sbb
xchg
inc
adc
sbb
add
dec
push
xchg
or
add
sbb
mov
jmp
mov
jg
rol
add
bound
cld
mov
mov
lea
mov
add
inc
dec
cmp
jb
push
mov
push
jne
and
jmp
paddusb
push
inc
clc
out
mov
push
(bad)
inc
mov
mov
mov
pop
sbb
cmp
in
dec
iret
push
mov
mov
sbb
es
or
js
sbb
sbb
and
call
stos
mov
(bad)
inc
lea
push
lea
push
push
loopne
cmp
les
adc
and
add
inc
cmp
pop
and
sti
das
pusha
mov
jae
jp
mov
sti
sti
sub
shl
jb
push
xchg
outs
pop
xor
out
rol
test
sub
add
mov
and
or
sub
shr
pop
push
mov
jo
jmp
test
je
push
push
test
dec
sbb
sbb
jge
adc
mov
pop
push
(bad)
shr
pop
pusha
xor
jns
lahf
aas
shl
out
mov
pop
nop
or
ds
jne
sbb
and
outs
cmps
inc
or
xchg
xchg
adc
jge
or
add
or
sbb
gs
push
mov
mov
and
cmpxchg
xchg
or
idiv
data16
lea
fcmovb
or
punpckhdq
mov
inc
adc
inc
sbb
mul
retf
pushf
test
pop
sub
es
mov
inc
or
call
out
fiadd
test
adc
sub
adc
inc
sbb
inc
sbb
inc
sbb
ror
mov
mov
cmp
jae
inc
xor
clc
mov
(bad)
(bad)
inc
inc
xor
or
jbe
test
jne
mov
or
je
mov
mov
and
and
or
fcomip
inc
mov
sbb
ret
sbb
sar
inc
sbb
push
sbb
sbb
inc
mov
shr
push
iret
and
xchg
loopne
shl
add
sbb
add
mov
inc
sub
clc
jb
xchg
pop
ret
setl
push
jne
add
or
add
xchg
push
test
dec
cdq
and
add
sar
lea
icebp
push
push
push
add
mov
jno
mov
cmp
aas
mov
mov
or
call
xchg
inc
push
mov
or
ret
push
mov
inc
mov
mov
mov
or
jne
push
add
out
arpl
push
cwde
cmp
push
push
call
(bad)
and
and
push
xor
sbb
in
lds
jne
jg
in
push
sub
mov
push
adc
inc
icebp
cmp
adc
shl
stos
or
cld
inc
jmp
mov
mov
add
xor
ret
sbb
add
inc
aas
pop
out
ja
add
xor
mov
mov
sub
mov
jns
lea
iret
cmp
stos
pop
inc
adc
or
in
mov
jb
ss
mov
cs
sbb
mov
mov
aaa
sar
xor
repz
(bad)
enter
mov
fimul
pop
fs
xor
out
mov
int3
fild
mov
aaa
in
std
fwait
bound
nop
inc
mov
mov
aaa
mov
xchg
cwde
popf
push
sbb
mov
jne
push
ins
or
jne
and
std
push
push
or
inc
rol
shl
dec
sbb
xor
push
mov
inc
aam
ss
stos
sbb
xchg
sbb
pop
or
mov
xor
mov
cmp
cmp
sbb
mov
ja
push
pop
fwait
std
call
mov
push
and
mov
mov
and
test
xor
cmc
pop
les
add
xor
cmp
or
sbb
mov
and
add
mov
sar
int3
adc
out
jg
and
sub
or
movs
mov
mov
or
pushf
clc
jle
(bad)
(bad)
js
pop
mov
lea
jg
in
sti
rep
push
cmp
les
mov
adc
push
inc
sub
sub
mov
pusha
lock
in
pop
mov
mov
lods
push
xor
aas
sbb
or
ror
mov
int3
rol
shl
ja
push
inc
mov
cmp
rol
outs
mov
(bad)
cli
fadd
or
or
movs
stos
jo
popa
sbb
lahf
popa
push
and
popa
aas
popa
loope
lock
je
outs
pop
xchg
mov
out
pop
adc
sahf
add
or
xchg
repz
push
inc
lock
lea
push
dec
jne
or
jne
mov
fcmovbe
xor
adc
jle
test
jle
iret
mov
bound
mov
data16
sbb
test
retf
mov
dec
pusha
sbb
inc
test
jle
test
jne
data16
or
mov
in
and
mov
ret
rcl
adc
push
mov
fimul
hlt
pop
mov
mov
add
or
inc
lahf
cmp
push
outs
(bad)
sahf
shl
ins
add
shl
mov
inc
(bad)
adc
jnp
movs
sub
adc
pop
addr16
into
mov
add
sbb
mov
rol
lds
nop
popf
mov
inc
repnz
add
iret
les
dec
inc
or
in
add
popa
add
mov
xchg
inc
xchg
jne
adc
push
mov
push
push
inc
fwait
jmp
xchg
popf
adc
xor
pushf
lahf
add
dec
or
pusha
das
pushf
ja
int
enter
mov
test
dec
inc
popa
jo
sub
add
mov
jmp
scas
mov
push
jns
push
scas
packssdw
add
mov
sub
adc
add
mov
mov
jne
xor
sub
mov
aad
inc
mov
test
pop
push
in
pop
les
cld
ret
xor
mov
mov
test
aas
test
sub
push
inc
or
jg
jbe
mov
and
sbb
mov
add
sub
ror
inc
xor
fs
daa
add
sbb
aam
dec
sub
inc
cmc
and
add
adc
inc
adc
sbb
cli
or
inc
clc
jnp
lods
sub
clc
add
test
or
je
adc
hlt
clc
add
test
lea
add
fiadd
pop
xchg
das
push
fadd
pop
add
xor
test
je
cmp
adc
cmp
(bad)
dec
jae
lahf
sbb
arpl
jne
jg
add
ins
xor
pop
hlt
nop
mov
je
lock
jne
and
cs
dec
ror
retf
push
pop
mov
dec
sub
out
jp
push
jle
mov
jmp
pop
xor
sub
inc
mov
call
or
sub
and
pop
pop
sub
jne
test
jne
xchg
aaa
ins
call
jmp
pusha
jne
test
add
jl
sbb
and
push
mov
sub
(bad)
loopne
xchg
lea
pop
cld
jmp
pop
mov
jne
sbb
sbb
pop
mov
in
xor
ja
or
dec
cmps
jg
cmp
addr16
xor
shl
mov
mov
push
call
adc
add
and
fistp
mov
add
ret
xor
dec
es
pop
ret
or
pop
vmovdqa
inc
jge
push
add
add
and
adc
adc
mov
inc
loopne
(bad)
(bad)
dec
(bad)
mov
mov
add
test
jne
cmp
or
(bad)
jmp
cmp
je
or
test
push
cld
jmp
and
cld
cld
dec
mov
in
adc
outs
inc
adc
mov
mov
cmp
sub
lds
test
mov
cmp
je
mov
add
icebp
adc
jge
fmul
sbb
aas
or
lea
add
cmp
ja
inc
push
or
les
add
ds
inc
inc
inc
cli
shl
in
je
ins
cwde
push
and
dec
into
mul
popa
xchg
adc
jbe
scas
int3
add
fdivr
out
mov
fnstcw
arpl
fs
push
sbb
bound
mov
jae
dec
sbb
sub
es
sti
push
mov
mov
out
mov
dec
pushw
adc
popf
adc
ja
sub
xchg
in
jne
jg
je
push
cmc
adc
or
js
jo
hlt
aaa
daa
and
inc
adc
inc
sbb
sub
add
sbb
add
pop
inc
mov
jo
je
out
pop
or
inc
aam
cmp
test
or
mov
mov
sub
cwde
jle
retf
inc
or
(bad)
ja
iret
cmp
or
adc
loope
icebp
outs
repz
inc
and
dec
sub
sahf
mov
or
sbb
inc
test
pop
pop
je
cmp
stc
mov
mov
cmp
je
cmp
jne
lea
mov
out
(bad)
mov
sub
lea
cmp
inc
arpl
clc
xchg
pushf
inc
add
dec
mov
jp
into
mov
add
sar
cmp
ja
and
mov
lods
mov
sub
out
loopne
pop
push
inc
loopne
lea
fcom
jge
sub
pushf
add
sub
mov
jne
dec
jno
loopne
(bad)
fmul
adc
xor
call
add
sbb
add
cld
dec
sbb
dec
and
int3
sbb
add
add
fisttp
std
dec
inc
test
je
je
cmp
mov
push
mov
inc
ret
cld
jp
rcl
nop
sub
xor
xlat
aam
sub
add
sahf
sbb
mov
push
sub
adc
retf
sar
(bad)
fs
pushf
xchg
std
dec
je
ss
test
jne
stos
mov
and
jne
mov
push
mov
push
les
mov
cli
mov
mov
pop
jmp
mov
push
aad
xor
pop
movs
sbb
rcl
lods
pop
rcr
cmp
or
sbb
loopne
fdivr
mov
repz
add
adc
dec
xor
ins
jno
out
es
rcl
inc
enter
enter
cmp
je
dec
inc
adc
inc
cs
sub
rol
add
mov
inc
sub
inc
push
lea
dec
push
inc
push
cmp
add
push
les
(bad)
mov
mov
mov
add
movsx
(bad)
ffreep
(bad)
call
mov
cmp
jb
mov
add
cmp
jae
push
push
inc
jg
les
push
xor
imul
mov
add
add
inc
lds
retf
cmp
sbb
adc
(bad)
(bad)
cmp
ja
hlt
mov
and
(bad)
add
test
jg
cli
pop
jne
jne
lds
mov
jo
push
aam
jb
sbb
dec
and
push
fs
out
dec
mov
test
je
mov
inc
jo
jb
(bad)
mov
add
add
cmp
ja
and
movs
mov
add
or
pushw
cmp
dec
mov
mov
lea
jge
es
leave
add
inc
je
into
adc
inc
cmp
mov
cmp
mov
add
mov
lea
out
mov
xchg
int3
mov
add
push
and
cmps
dec
je
std
mov
into
push
adc
and
inc
in
pop
movs
push
fs
rol
sub
(bad)
inc
hlt
add
add
sub
jb
es
mov
inc
jecxz
inc
jecxz
push
cmps
jns
inc
push
nop
mov
pop
das
add
add
or
inc
push
nop
or
and
xchg
int3
jmp
dec
cld
xchg
popf
movs
or
jmp
cmp
je
inc
test
je
mov
cmp
dec
add
jb
montmul
cmps
inc
call
adc
add
push
push
dec
adc
push
call
adc
cmp
add
adc
inc
jmp
lea
mov
cwde
push
pop
adc
xchg
dec
sbb
cld
(bad)
jmp
sbb
xor
daa
or
fild
pop
in
sbb
xor
das
xor
arpl
pusha
jmp
es
pop
push
in
adc
loopne
push
fs
add
mov
push
adc
jmp
jge
div
int3
or
sub
and
fldlg2
loope
dec
inc
fist
fadd
mov
mov
mov
dec
sar
mov
mov
inc
aam
add
mov
bound
sub
pop
xchg
or
pop
mov
push
add
cmps
mov
shl
add
mov
add
movs
add
sbb
or
xlat
lea
and
add
xchg
cmp
out
add
or
or
or
out
shl
or
jne
push
jnp
ja
sub
push
pop
push
mov
sub
idiv
pop
cmp
dec
or
xor
pop
dec
xor
xor
add
test
cs
xchg
or
adc
and
and
int3
call
call
in
push
push
je
add
mov
add
xor
add
push
dec
mov
in
mov
mov
and
adc
(bad)
inc
inc
hlt
add
jne
fcom
ret
xor
test
fstp
lea
or
xchg
inc
or
mov
cmp
sbb
scas
sub
push
add
lock
in
cmp
test
sub
and
mov
inc
(bad)
mov
in
mov
je
test
mov
lods
and
fwait
mov
test
inc
shl
mov
lea
aaa
loope
rcr
push
xor
jno
sti
add
test
and
out
adc
pop
into
repnz
inc
hlt
dec
cmps
xchg
sbb
add
ja
or
dec
xor
loopne
inc
call
or
lock
mov
and
jp
and
jo
adc
jl
mov
hlt
jmp
xchg
sar
je
jle
inc
or
jmp
adc
sti
add
fwait
sub
sar
add
mov
clc
or
adc
inc
or
adc
pop
or
dec
sbb
add
pop
mov
pop
jmp
pop
push
adc
xor
ret
add
push
mov
mov
frstor
add
dec
inc
fisttp
adc
pop
push
adc
add
cmp
rcl
loope
push
cmp
ja
mov
aas
mov
inc
loopne
arpl
push
out
(bad)
fdivr
push
adc
retf
push
loopne
inc
mov
sbb
dec
aaa
div
sbb
loopne
fistp
enter
mov
shl
and
or
mov
inc
adc
push
xor
sub
or
jnp
cmp
movs
xor
sbb
lock
pop
or
push
jo
sbb
call
push
inc
push
xor
mov
div
xchg
adc
pop
iret
push
icebp
sbb
jmp
pop
loopne
and
sbb
scas
jmp
loop
adc
loopne
adc
inc
fbstp
sbb
int
adc
pop
jg
in
mov
sbb
sbb
dec
dec
cmp
jne
mov
inc
cmp
ja
xlat
dec
lock
or
cli
das
jne
adc
into
mov
(bad)
(bad)
(bad)
out
dec
or
mov
aam
inc
(bad)
cmp
je
cmp
je
fcomi
jbe
je
rsqrtps
repz
inc
mov
push
jmp
das
cmc
adc
ds
mov
inc
dec
neg
ss
das
je
mov
cmp
or
leave
push
outs
push
mov
fisttp
ds
lods
and
fbstp
(bad)
xchg
jae
sar
pop
or
dec
or
mov
cmp
ja
fild
inc
mov
inc
sbb
cmp
cmp
push
cmp
jbe
cmp
je
sbb
inc
xor
stos
(bad)
cmc
ret
mov
jmp
xchg
pop
test
mov
adc
jb
pop
outs
jg
fucomp
pusha
stos
jae
int3
add
stos
add
adc
add
add
ret
pop
add
add
add
add
sbb
(bad)
pop
jp
call
add
cmp
fwait
xor
sbb
sub
inc
cmovae
mov
mov
mov
lea
add
xchg
add
mov
and
or
inc
xchg
push
lahf
push
sbb
add
or
sub
pop
or
inc
in
push
push
add
jle
sar
add
div
clc
mov
es
or
add
ror
dec
cwde
push
loop
mov
mov
data16
pop
stos
or
mov
inc
mov
cwde
or
inc
xor
jg
adc
push
out
ja
test
std
mov
mov
test
jne
test
and
jmp
iret
mov
push
mov
ror
sbb
ja
add
add
fs
cmp
fadd
adc
add
or
js
xchg
xchg
sbb
xor
xor
jbe
pop
jbe
mov
aaa
jmp
xchg
lods
fsubr
add
add
jmp
inc
lahf
clc
inc
cmp
mov
mov
mov
jo
imul
add
mov
sti
pop
cmp
pop
lods
xchg
add
cmps
imul
cmps
imul
inc
adc
in
rol
adc
jmp
or
pop
push
add
or
or
or
popa
lahf
mov
jb
cmp
jle
lea
aad
clc
arpl
add
rcr
out
data16
add
push
mov
pop
add
lods
push
xor
push
test
jne
mov
jge
test
adc
mov
je
je
pop
lock
or
jge
sbb
push
enter
mov
jg
ins
jge
rcl
lea
mov
add
inc
jg
and
dec
push
into
imul
(bad)
(bad)
jmp
and
cmp
jne
mov
cmp
dec
inc
outs
div
add
adc
xor
pop
lods
sub
push
pop
mov
les
or
add
ja
or
inc
cmp
ja
inc
or
pop
mov
aam
(bad)
fwait
jecxz
adc
inc
sbb
mov
xor
or
out
test
sub
lds
push
test
cmp
xor
pusha
shr
dec
cmp
mov
cmp
jne
fcom
sahf
mov
(bad)
pop
mov
push
retf
mov
jmp
cmp
jne
sub
push
adc
test
je
adc
xchg
pushf
mov
cmp
cmp
scas
nop
cmp
jne
mov
mov
call
adc
sbb
xchg
mov
clc
or
(bad)
test
mov
mov
cs
jl
or
ins
or
or
(bad)
jg
call
and
inc
adc
inc
adc
and
xor
jg
mov
add
mov
add
je
inc
ret
add
daa
(bad)
push
xor
mov
mov
inc
mov
lea
xor
push
sub
mov
cmp
sbb
inc
mul
and
sbb
sbb
or
jbe
test
push
shl
jne
cmp
jle
cmp
mov
or
fistp
add
or
lock
add
test
jne
push
jo
and
adc
pop
mov
lea
stos
fwait
push
jbe
sbb
pushf
sub
cmp
add
pop
inc
mov
add
inc
scas
stos
cmp
adc
in
push
lds
jns
aas
xchg
or
jg
sbb
xor
and
fidiv
lock
xor
adc
adc
hlt
cmp
xchg
inc
sub
adc
clc
daa
pop
fnstcw
cld
mov
mov
jg
mov
inc
and
mov
mov
pop
scas
ja
shl
lea
or
add
add
inc
cld
add
and
adc
dec
push
and
je
sar
dec
push
add
fild
mov
push
mov
add
jmp
jl
and
inc
inc
into
or
movups
sbb
pcmpeqw
mov
adc
and
cmps
dec
adc
cdq
ret
add
sub
add
lods
push
adc
data16
and
cmp
adc
adc
mov
add
inc
or
inc
or
inc
sbb
jg
lds
les
add
mov
lea
mov
push
call
popa
idiv
sbb
pop
mov
push
push
call
cmp
inc
bound
and
xchg
shr
xchg
out
lahf
sub
lea
aam
or
add
pusha
outs
inc
dec
lea
push
dec
mov
mov
stos
fucomp
mov
inc
cld
adc
cmovns
mov
dec
neg
stos
loop
dec
xor
mov
mov
or
add
iret
xchg
inc
test
xchg
ret
and
ret
adc
mov
ins
pusha
(bad)
push
sti
lahf
pusha
cmp
mov
mov
mov
mov
pop
and
add
adc
push
mov
nop
and
pusha
inc
cmp
add
rol
pop
mov
jl
or
xchg
pop
dec
xlat
or
or
aas
jecxz
arpl
push
and
sbb
xchg
retf
loop
sub
ds
cmps
push
or
inc
or
rol
movs
pop
lds
or
test
mov
popf
lea
push
mov
in
inc
inc
add
jne
out
push
call
push
and
push
outs
clc
push
or
sub
dec
cdq
mov
ins
rol
lock
les
iret
call
jmp
test
push
or
pop
je
or
adc
inc
xor
push
add
inc
mov
sbb
xchg
or
jecxz
sub
xor
das
inc
or
xor
shl
cmp
je
call
inc
clc
cmp
sbb
je
pop
mov
mov
cmove
(bad)
mov
je
cmp
je
test
pop
jne
mov
(bad)
mov
dec
add
gs
and
push
pusha
cli
sbb
sub
push
pop
fcom
mov
ds
mov
mov
or
std
(bad)
dec
movsx
mov
cmp
jb
lea
cmp
jae
push
mov
push
sub
push
pop
cdq
mov
dec
dec
cmp
shl
adc
add
clc
add
cmp
jl
movs
push
movsx
mov
test
sbb
adc
clc
orps
mov
cmp
lock
cmp
lea
add
adc
mov
mov
sbb
and
in
movs
in
inc
push
cmp
syscall
(bad)
(bad)
(bad)
mov
cmp
je
nop
mov
movsx
cmp
je
cmp
jne
(bad)
(bad)
jmp
loopne
push
or
xor
dec
inc
cmp
jae
mov
push
push
cmp
test
add
jne
add
cmp
jne
pop
pop
jmp
pop
sub
cmp
jle
mov
ret
mov
add
mov
jge
push
inc
adc
jg
cmps
xor
mov
mov
cmp
jne
push
lea
push
add
aas
mov
xor
cmp
sete
leave
adc
(bad)
je
sbb
std
fcomip
push
lea
lds
mov
cmp
jne
inc
mov
inc
push
add
loop
push
push
test
mov
jne
fisub
clc
mov
sbb
and
xor
(bad)
jne
cmp
jne
sub
xor
push
sub
and
mov
jae
xchg
inc
mov
push
bound
cwde
jmp
and
sbb
inc
or
outs
and
outs
jne
je
sbb
mov
adc
mov
xor
jl
cmp
fwait
cld
ror
push
mov
sbb
jl
push
pop
lock
call
in
fidiv
dec
push
push
push
je
add
mov
(bad)
(bad)
lea
xor
mov
mov
lea
push
push
lea
add
je
and
adc
and
lahf
pop
mov
jle
adc
jmp
mov
call
add
ins
push
push
or
dec
push
inc
inc
aaa
cli
pop
fnstsw
aas
icebp
pop
mov
lea
cmp
and
call
ja
mov
cmp
je
jae
push
push
add
clc
jmp
adc
mov
mov
in
xor
inc
sub
cmp
pop
out
jge
cmp
ret
sub
mov
shl
movs
xor
mov
push
call
mov
mov
aam
ret
pop
inc
sbb
adc
or
add
inc
add
push
adc
or
outs
or
push
cli
adc
div
add
hlt
fcomp
mov
(bad)
(bad)
clc
add
call
fadd
push
scas
in
inc
add
mov
push
xlat
jg
and
cmps
call
test
jmp
lea
mov
add
arpl
xor
sub
dec
adc
rcl
call
or
(bad)
pop
adc
aad
sbb
pop
push
icebp
mov
rcr
adc
xor
lock
aas
pop
das
(bad)
mov
xor
jb
push
(bad)
push
mov
mov
and
cmp
ja
or
shr
sub
inc
add
pop
xchg
cld
mov
pop
mov
push
in
mov
mov
push
mov
mov
scas
mov
add
div
je
add
mov
adc
mov
clc
add
jg
add
mov
sbb
das
(bad)
or
cmp
add
mov
jne
add
dec
jmp
dec
add
dec
nop
pop
push
add
dec
add
dec
inc
pop
test
jne
mov
cmp
jb
je
cmp
je
mov
ffreep
jge
and
sub
sub
or
push
mov
mov
mov
mov
jmp
cld
mov
mov
icebp
(bad)
inc
retf
mov
cmp
jne
mov
adc
aas
push
stos
ss
repnz
cmp
pop
mov
das
or
add
(bad)
mov
dec
or
mov
retf
test
pushf
or
sub
xor
mov
jno
add
or
test
mov
push
push
lea
test
js
fdiv
lea
add
mov
(bad)
cmp
xor
mov
mov
or
push
jb
mov
push
cmp
push
lock
lea
push
cmp
sub
pusha
sub
call
jmp
adc
jb
cmp
setne
and
sub
dec
js
ror
in
pop
jmp
imul
jle
ret
lea
fild
xchg
dec
hlt
cmp
hlt
inc
rol
inc
lea
or
jbe
mov
xor
hlt
inc
fsubr
icebp
add
lea
test
je
jmp
ret
test
add
mov
lods
mov
lea
or
mov
shl
inc
mov
xchg
ins
adc
ins
or
mov
and
push
movs
clc
in
dec
mov
mov
loop
ror
iret
aad
inc
(bad)
sbb
mov
push
jnp
add
(bad)
loop
fs
jge
(bad)
sbb
jne
mov
(bad)
fdivr
fwait
and
(bad)
or
lea
dec
addr16
aaa
loope
sub
mov
push
(bad)
fld
push
mov
push
mov
mov
sub
mov
dec
cmc
mov
je
mov
test
(bad)
cwde
rcr
mov
lea
sbb
inc
mov
cmp
mov
icebp
stos
pop
sar
jns
sub
cmp
jb
dec
inc
add
stos
cmp
stos
pop
push
cmp
pop
(bad)
stos
mov
pop
mov
cmp
test
stc
jl
daa
jmp
pop
add
add
push
push
push
lods
jp
fadd
mov
inc
(bad)
scas
mov
push
lea
aad
sub
mov
mov
dec
ins
mov
dec
inc
nop
leave
test
das
push
xchg
out
push
inc
(bad)
push
dec
pop
nop/reserved
sbb
or
lds
sahf
(bad)
sub
add
and
inc
and
neg
nop
popa
(bad)
or
mov
(bad)
(bad)
aas
ja
lea
xor
fs
mov
or
fcom
lea
xchg
fwait
jmp
leave
inc
pop
les
cmp
add
mov
push
inc
or
or
pop
fild
call
mov
ret
mov
mov
and
gs
add
test
je
lock
mov
push
or
(bad)
je
inc
sbb
add
jg
add
dec
jne
pop
lea
shr
scas
sahf
and
out
mov
inc
mov
das
sub
daa
add
mov
or
pop
jmp
add
mov
mov
mov
retf
add
cmp
imul
add
and
inc
sar
push
add
add
loopne
add
inc
lock
xor
push
lea
(bad)
jmp
call
mov
jecxz
or
pop
mov
mov
mov
mov
and
mov
inc
add
and
in
sahf
add
adc
pop
cmp
imul
jnp
mov
add
lahf
lods
nop
movs
add
push
lahf
push
aam
ds
mov
inc
rcl
sbb
call
cmp
jle
xor
pop
inc
push
push
adc
pop
or
js
or
out
or
mov
movlpd
jmp
xchg
in
or
loopne
push
push
out
in
cld
(bad)
out
add
pushf
jl
jmp
lea
adc
or
sub
or
inc
push
mov
add
idiv
and
inc
cdq
cmp
sbb
sub
test
es
push
and
add
enter
or
inc
and
les
retf
inc
inc
or
pop
(bad)
fcom
fild
popa
inc
lock
push
push
mov
cmp
aad
mov
xor
cmp
push
mov
jl
xor
xchg
jbe
outs
inc
inc
push
in
mov
mov
push
mov
aas
(bad)
jmp
sbb
inc
add
pop
(bad)
and
inc
or
pop
retf
jo
mov
imul
add
rcl
hlt
inc
sub
push
lea
mov
push
push
pop
inc
push
mov
push
lea
push
call
and
pop
aam
imul
add
inc
or
and
jmp
cmp
and
or
adc
mov
and
add
mov
mov
inc
sbb
iret
leave
jl
rcr
fcomp
(bad)
jmp
push
cmp
push
mov
test
lods
js
mov
and
rcl
add
push
test
adc
jmp
cmp
xor
inc
add
or
inc
inc
mov
nop
ds
repnz
or
pop
sbb
(bad)
(bad)
jge
jnp
add
push
cmp
jbe
push
mov
sti
push
mov
adc
pop
jmp
xchg
jbe
clc
mov
inc
cmp
inc
xor
rol
jecxz
adc
mov
cmp
jb
cmp
add
push
ins
(bad)
jl
sbb
add
aam
push
push
jle
xor
fcomp
retf
iret
adc
pop
cmp
je
mov
cmp
jl
add
inc
xor
cmps
pusha
addr16
(bad)
retf
mov
(bad)
(bad)
mov
jl
aam
add
shl
ror
test
inc
cmps
pop
(bad)
dec
ret
lea
add
lock
lods
cmp
mov
je
adc
jmp
or
or
mov
add
in
cmp
ret
lahf
(bad)
push
mov
jo
clc
jno
mov
ret
lock
and
mov
or
out
pop
cmovl
and
movq
mov
movdqu
mov
out
loopne
ss
mov
and
cld
xchg
into
call
aas
and
je
adc
(bad)
cwde
mov
inc
add
add
jmp
pop
add
cmp
cmp
or
dec
dec
inc
int
int
nop
cmp
push
int
int
add
scas
push
das
stos
mov
fistp
jae
rol
sub
inc
add
add
xchg
push
mov
jb
add
push
call
adc
shl
test
mov
or
(bad)
sub
pop
ret
sti
fisttp
cmp
lahf
pop
imul
sub
ja
lea
add
mov
pop
adc
stos
mov
inc
aaa
movs
test
cwde
and
lea
in
sub
lahf
pop
mov
cmp
adc
push
sub
outs
loop
adc
dec
iret
iret
mov
cs
fild
sub
push
push
cmps
add
jns
sub
sar
rol
dec
std
mov
xor
mov
mov
adc
mov
hlt
mov
add
jo
ja
icebp
fistp
push
pusha
mov
add
cld
add
rol
add
jg
dec
push
loop
xor
xchg
bound
mov
pop
mov
mov
call
pop
inc
fisttp
mov
and
enter
aaa
cmc
call
mov
inc
test
jne
sub
icebp
loope
mov
push
retf
mov
in
xlat
sub
test
js
jg
xor
aam
and
nop
das
cmp
mov
cmovae
inc
push
push
lock
mov
stc
inc
outs
(bad)
jg
fld
cmp
xor
adc
inc
fadd
je
add
and
add
sub
cmps
dec
std
dec
or
addr16
out
ja
or
or
fdivr
test
(bad)
(bad)
jmp
or
or
sbb
ins
ss
or
or
add
shl
cli
(bad)
call
mov
sub
sub
and
mov
and
mov
stos
dec
cmp
je
pop
(bad)
(bad)
jg
or
rcl
adc
cmp
jne
pop
mov
lea
add
push
lea
push
arpl
jl
xchg
push
push
into
popa
pop
stc
or
jecxz
test
push
daa
in
mov
dec
(bad)
sbb
dec
ss
mov
lea
cmp
adc
inc
push
lahf
add
inc
xor
and
dec
mov
lea
mov
lock
mov
lea
rcr
dec
mov
mov
call
pop
int
into
or
cmps
movs
das
or
cmp
add
lea
mov
lea
aad
inc
xchg
mov
push
les
rol
add
retf
cmp
jg
fiadd
mov
sub
enter
add
add
pop
stos
jns
fbld
pop
inc
or
mov
mov
cmps
pop
jo
pop
pop
mov
(bad)
mov
sbb
push
cmp
je
adc
sbb
popa
popa
repz
or
dec
fadd
in
loopne
sbb
mov
sub
pop
and
mov
cmp
fsub
lock
test
in
mov
inc
jmp
mov
sbb
lods
sub
(bad)
scas
or
je
jmp
sbb
cmp
mov
pop
lock
mov
movs
daa
nop
jle
test
pop
pop
pop
sub
sbb
adc
retf
mov
dec
inc
pop
jle
add
sub
add
xor
jp
inc
ja
inc
test
enter
inc
inc
in
add
sub
jbe
or
sub
jne
mov
inc
outs
cmp
and
sbb
add
fadd
inc
xor
inc
(bad)
push
js
xchg
ret
push
into
mov
(bad)
cmp
mov
ja
jge
add
xchg
ins
iret
sub
push
loopne
sar
add
xlat
jl
dec
in
or
adc
add
les
cmc
sub
push
xor
jo
adc
das
add
test
xor
mov
push
add
or
sub
jno
add
inc
into
or
ret
pop
scas
and
clc
test
mov
je
cld
pop
sbb
jb
push
into
rol
sbb
push
mov
add
xchg
pop
lea
(bad)
repz
and
and
and
(bad)
lahf
or
lea
push
in
adc
xchg
iret
sub
push
add
push
add
(bad)
mov
sub
lea
fist
iret
shl
jecxz
cwde
sub
push
hlt
xlat
fbstp
inc
xchg
adc
leave
push
push
out
dec
add
xchg
or
lods
add
scas
sub
and
add
sub
jne
cmc
add
sub
es
sbb
adc
jae
or
lods
mov
pop
(bad)
push
inc
add
in
pop
add
add
and
push
push
or
add
test
rol
adc
jecxz
pop
mov
loopne
repz
in
push
lds
les
lea
fcomip
push
cmp
mov
xor
push
adc
popf
xor
mov
cli
xchg
jl
add
sti
mov
ror
(bad)
mov
push
lea
fs
(bad)
inc
push
and
shl
imul
in
cmp
fstp
add
and
cli
add
jl
cmp
sub
outs
add
je
lea
xlat
ret
pop
(bad)
jl
shr
sbb
lahf
cli
push
add
mov
sbb
pushf
out
cmp
xchg
lea
lds
adc
add
inc
out
clc
mov
mov
jmp
mov
fadd
pop
mov
inc
sub
mov
and
dec
loopne
test
add
push
mov
sub
sbb
mov
adc
push
lock
mov
retf
fcmovb
bound
sti
xor
test
mov
inc
retf
sub
enter
cmps
test
add
movs
and
or
pushf
cwde
or
sub
loopne
or
add
xor
xor
ins
mov
movs
inc
cmp
lea
shl
mov
jl
xchg
popa
mov
jge
jnp
sub
push
push
push
div
test
in
fcom
les
int3
add
sub
xlat
scas
push
push
add
(bad)
sbb
pushf
mov
push
xor
cwde
jb
lds
add
mov
adc
test
adc
xor
mov
mov
jb
jmp
xchg
and
pusha
in
add
mov
inc
xor
adc
movs
sti
push
mov
movsd
ror
cdq
pusha
outs
mov
cmp
aas
cwde
ins
fcomp
sub
jge
xchg
loop
push
loopne
add
fdiv
push
pusha
or
pop
shl
push
jmp
ja
(bad)
jecxz
call
cdq
inc
push
je
cwde
dec
xor
inc
loop
ds
movs
out
enter
mov
jbe
stos
loopne
jbe
mov
mov
jb
push
jmp
hlt
stos
cmp
mov
mov
pop
or
jp
fdivr
mov
popf
dec
mov
mov
test
cmc
ret
ret
icebp
sar
jmp
(bad)
fnstcw
pop
fstp
add
fimul
pop
(bad)
rcr
(bad)
jg
add
fmul
pop
fsub
add
add
std
fcomp
add
pop
add
rol
and
xlat
not
xchg
pushf
pop
sub
adc
pop
dec
dec
cmp
call
or
xor
pop
push
dec
call
popa
pextrw
pop
lahf
pop
cwde
jo
cmp
mov
add
movdqu
cmc
mov
mov
aam
call
out
loop
mov
add
mov
mov
mov
mov
mov
or
stos
mov
stc
ins
ffreep
(bad)
aas
test
pop
loopne
mov
mov
mov
and
je
shr
ret
adc
add
fstp
out
or
loopne
or
mov
mov
mov
pop
sbb
jne
rol
sub
adc
or
shr
rcl
cmp
push
sbb
jg
int3
inc
push
and
mov
jg
add
mov
and
shl
sub
int3
iret
xchg
(bad)
xor
bound
les
test
cmp
(bad)
mov
xor
inc
mov
(bad)
dec
out
mov
mov
mov
inc
add
mov
mov
mov
push
test
inc
push
sub
clc
inc
mov
and
sbb
inc
jb
pop
add
lods
cmp
pop
or
inc
xor
jb
mov
movzx
mov
sub
and
rcl
jbe
jne
push
neg
mov
add
push
jno
test
xchg
jmp
fst
mov
lea
jmp
jge
mov
mov
mov
adc
xor
rep
or
mov
jae
mov
ja
hlt
cmp
in
mov
sub
mov
jg
rcr
jne
dec
inc
mov
and
(bad)
out
(bad)
(bad)
jge
add
mov
lea
xor
xor
cld
rol
mov
dec
jne
mov
inc
inc
xor
mov
xor
inc
sbb
jnp
adc
push
inc
and
or
inc
and
dec
or
inc
lock
sbb
jge
(bad)
mov
mov
mov
cmp
jae
mov
not
(bad)
(bad)
(bad)
jmp
ror
jmp
cmp
jb
cmp
jae
mov
or
mov
and
and
ja
out
out
sbb
mov
xor
xor
xor
mov
jmp
sub
mov
mov
adc
sbb
and
add
mov
mov
sbb
add
mov
call
(bad)
(bad)
dec
add
inc
mov
mov
mov
mov
mov
ror
cmp
data16
ret
mov
mov
mov
jb
adc
mov
add
inc
or
inc
sar
add
mov
add
cmp
sub
fs
(bad)
lea
enter
adc
fisttp
adc
pop
xor
jecxz
or
ficomp
push
jle
hlt
movq
test
dec
cld
inc
loopne
add
pop
mov
lods
ror
pop
jmp
adc
add
inc
(bad)
call
dec
mov
mov
inc
mov
mov
out
test
cmp
add
xlat
jecxz
ret
mov
mov
sar
int3
inc
or
push
cmc
jno
pusha
ror
xchg
jg
xor
jbe
xor
xor
mov
mov
hlt
add
sbb
pop
add
inc
and
fild
lds
and
dec
mov
inc
adc
(bad)
and
mov
and
push
ret
ret
pop
xchg
(bad)
cld
daa
ret
add
pop
(bad)
xchg
out
ja
adc
(bad)
pusha
mov
rol
mov
ret
add
fstp
jg
sbb
inc
or
jmp
(bad)
jmp
sbb
mov
adc
out
aad
mov
pop
call
mov
sbb
movs
push
adc
cmp
(bad)
mov
out
push
mov
mov
mov
mov
inc
sbb
mov
add
sbb
add
test
sub
and
(bad)
cmp
lock
or
adc
push
push
push
out
push
arpl
or
mov
xor
push
mov
sbb
push
jne
mov
jmp
out
xor
pop
out
add
mov
call
dec
in
outs
and
push
sub
push
lods
pop
inc
lock
loop
shl
adc
aas
push
mov
iret
mov
sbb
cmp
add
mov
lds
call
ja
sbb
cmp
dec
hlt
xor
shl
mov
pop
push
add
sbb
and
outs
mov
rcr
arpl
lds
and
inc
push
lods
xor
sbb
adc
mov
ss
add
dec
sti
scas
loop
xchg
push
push
call
rcr
and
mov
cmp
pop
add
mov
nop
sbb
or
cmp
sbb
and
jg
mov
inc
adc
pop
adc
enter
(bad)
out
(bad)
call
cmp
je
add
cmp
jne
mov
adc
push
push
lea
mov
sub
xor
loopne
(bad)
inc
add
ror
inc
inc
add
add
add
add
ja
jno
div
pop
pop
shl
xor
add
outs
push
sub
mov
(bad)
(bad)
xchg
lea
or
add
(bad)
mov
pop
inc
scas
cld
arpl
mov
jb
mov
sbb
in
or
dec
sub
mov
mov
mov
add
push
push
ins
jo
(bad)
pushf
jl
(bad)
inc
or
push
mov
lea
push
mov
call
jp
cld
jl
inc
adc
mov
mov
mov
mov
or
sbb
out
push
add
xchg
fcomp
mov
xchg
push
add
xchg
out
sar
xchg
adc
push
or
je
retf
cmp
mov
in
mov
push
adc
add
icebp
mov
mov
bound
aad
imul
(bad)
sti
mov
inc
lea
push
mov
sbb
mov
mov
mov
mov
loope
lea
add
lock
adc
rcl
adc
(bad)
adc
mov
pop
js
sbb
cwde
sub
add
and
cmp
mov
sbb
jo
push
hlt
rol
mov
push
mov
lds
rol
idiv
pop
call
jle
shl
pushf
mov
bnd
mov
mov
add
or
or
mov
cmp
mov
jle
inc
cld
xchg
jl
shl
dec
add
adc
dec
clc
adc
pop
sti
mov
fwait
jo
fdivr
pop
test
call
ficomp
or
mov
jl
(bad)
and
sbb
(bad)
sub
call
in
cmp
lea
inc
pusha
popa
(bad)
out
mov
(bad)
mov
mov
inc
dec
or
inc
jbe
(bad)
leave
outs
mov
adc
adc
sub
xchg
adc
add
neg
mov
leave
adc
jge
popf
pop
sub
mov
add
sub
jmp
jecxz
in
dec
add
add
mov
cmp
or
xor
and
das
add
ret
adc
div
mov
fdiv
push
arpl
mov
out
mov
xor
and
cmc
jg
mov
cmp
je
cmp
ffreep
fstp
clc
pop
mov
cmp
jne
lea
les
pop
jp
jg
shl
sub
sbb
lea
lock
jle
pop
push
aam
xchg
lods
cli
in
inc
add
sub
inc
ret
mov
mov
push
cwde
dec
add
adc
jmp
fadd
mov
cmp
jne
cmp
jne
pop
pop
shl
(bad)
je
mov
sub
mov
test
dec
clc
lea
test
pop
xor
test
mov
pop
test
or
push
out
sub
mov
add
fdiv
add
lea
push
mov
dec
adc
popf
xor
nop
adc
pop
mov
inc
sub
or
adc
out
and
xchg
adc
sub
sub
or
pop
sub
loop
aam
dec
repnz
xchg
add
test
sub
push
xlat
sbb
mov
ret
add
fst
or
popa
or
int
(bad)
adc
(bad)
push
jl
pop
sar
inc
(bad)
jmp
mov
pusha
add
or
mov
mov
push
call
cwde
clc
cmps
add
adc
adc
shl
add
inc
inc
mov
jmp
add
xchg
add
xor
cmps
ss
sbb
mov
inc
add
adc
je
push
es
rol
retf
in
ret
stos
pop
nop
cmp
in
je
lahf
adc
leave
pop
in
add
fdivr
add
jge
add
imul
cmovne
dec
jne
adc
cs
mov
or
dec
and
arpl
fcmovnb
montmul
cmps
add
adc
loopne
inc
stos
push
lea
lods
xor
pusha
rcl
mov
aas
mov
and
mov
inc
test
push
push
lea
xor
mov
lea
pushf
add
stos
fwait
add
dec
mov
cmps
xorps
pushf
ja
jb
ror
cmps
add
pushf
or
lods
xor
rol
mov
lea
add
mov
jnp
cld
push
hlt
push
call
lods
push
add
xor
mov
add
sbb
stos
push
sbb
mov
(bad)
xor
nop
dec
mov
push
inc
ins
pop
loope
mov
cld
outs
jmp
mov
mov
mov
rcl
xor
fisub
lock
cmp
sbb
adc
dec
adc
pop
dec
repz
clc
stos
inc
pop
(bad)
scas
stos
outs
and
add
push
cmp
pop
pop
in
dec
ror
ret
mov
sub
mov
mov
push
and
pop
(bad)
add
adc
pop
add
pop
push
push
enter
ret
(bad)
mov
sub
sbb
and
mov
sbb
test
jne
sbb
add
or
into
mov
scas
jg
mov
adc
das
sbb
sub
push
cwde
test
ret
pop
add
lahf
inc
adc
aaa
inc
clc
add
xor
mov
add
jp
ja
pop
cmp
pop
gs
adc
sub
adc
loopne
mov
mov
stos
dec
inc
add
lods
or
icebp
inc
hlt
or
fmul
leave
add
ins
test
xchg
test
push
mov
(bad)
cmovne
pop
js
push
je
popa
sbb
sub
sbb
and
dec
mov
bound
add
je
repz
pop
pause
add
adc
push
mov
loopne
test
imul
add
push
inc
jmp
adc
into
dec
loope
xor
add
je
mov
xor
sbb
call
dec
loope
fcmove
push
push
(bad)
cmp
dec
or
push
or
les
mov
xor
inc
mov
sbb
push
scas
pop
es
push
les
mov
(bad)
jl
jg
add
inc
or
mov
jns
push
xchg
ror
sub
cmp
ja
movzx
jmp
jmp
adc
pop
jge
adc
add
sahf
fcom
je
jmp
mov
mov
lea
add
sub
add
push
ss
cld
mov
push
lea
push
cmp
in
enter
add
xor
mov
lea
pop
push
mov
or
or
dec
call
adc
add
mov
push
mov
adc
xchg
xor
rol
sub
push
lea
add
cmc
ret
loopne
dec
mov
add
push
mov
add
and
test
inc
dec
in
inc
sub
push
mov
jb
push
std
and
clc
mov
mov
pop
cmc
pop
cmp
cmp
jne
mov
and
mov
sub
mov
or
jg
add
add
es
add
adc
loope
lea
neg
dec
jnp
loop
cmp
xor
cld
or
call
push
jo
mov
out
push
cmp
cmc
pusha
inc
sbb
and
mov
add
mov
fmul
mov
xchg
pop
sub
cmp
fcom
lea
push
push
pop
fld
or
pop
pop
cmp
sbb
in
lea
push
dec
idiv
xor
jl
jae
inc
add
xchg
pop
(bad)
pusha
add
aaa
bound
ret
fmul
inc
add
lods
add
or
(bad)
xor
sub
and
int3
sub
ins
in
iret
out
adc
add
lahf
pop
or
pop
or
mov
jae
and
ins
adc
push
add
je
test
and
push
or
push
mov
push
cmp
shl
and
pop
pop
add
inc
or
inc
or
rcl
ror
pop
mov
push
lea
movs
pop
and
cmp
mov
mov
dec
movs
mov
clc
pop
aas
push
push
or
repz
xchg
add
test
iret
cmp
loope
cli
in
jns
lea
push
xchg
ror
sar
js
add
loopne
call
stc
cmp
(bad)
fiadd
loopne
ja
in
push
push
jge
sbb
mov
and
scas
jmp
loopne
inc
mov
push
movs
mov
es
es
dec
mov
pop
cwde
inc
xchg
or
add
shr
into
inc
push
or
scas
lea
pushf
hlt
aas
and
add
push
and
xor
es
loopne
xor
sbb
clc
push
xor
mov
cdq
and
(bad)
or
ret
aaa
sar
push
call
and
loop
mov
nop
or
ror
pusha
sbb
or
loope
sub
mov
or
or
cmovo
cli
mov
push
mov
inc
call
pusha
ret
dec
adc
aas
sub
cld
fbstp
cmp
mov
in
jne
push
mov
cli
(bad)
dec
push
jle
mov
sbb
mov
cmp
jl
ins
jg
cmp
jbe
sbb
push
jl
jbe
mov
mov
mov
call
xchg
push
or
mov
mov
xorps
mov
sbb
xor
mov
js
xor
sar
and
jge
mov
ffree
cmp
mov
add
cld
jl
jg
cmp
jb
mov
sub
jge
xchg
fcom
jne
dec
cld
fstp
xor
push
outs
call
call
je
inc
aam
les
fdiv
movq
repz
pop
and
push
push
(bad)
xor
jg
out
and
xor
sbb
sbb
jns
sbb
cmp
shr
or
loopne
push
pushf
mov
and
sub
adc
stos
push
leave
or
push
sbb
stos
loope
sub
jmp
ss
adc
or
inc
add
clc
add
cmp
push
sub
call
push
jmp
mov
or
inc
dec
and
scas
je
push
movs
inc
mov
xchg
sbb
sbb
or
mov
jo
add
daa
aaa
sar
jne
jmp
cmp
je
lea
stc
xor
enter
dec
inc
cli
mov
test
fisttp
inc
clc
mov
add
repnz
jno
push
cmp
jne
mov
jmp
dec
and
pop
cmp
(bad)
aas
xlat
pop
cmp
xor
sub
dec
add
mul
rol
inc
or
je
pop
mov
mov
inc
or
dec
xchg
or
clc
or
inc
or
dec
adc
adc
jg
mov
push
push
push
push
lea
push
call
mov
xchg
or
jne
mov
sub
xor
sub
shl
mov
mov
pop
or
push
lea
pop
shl
les
pop
ret
or
sar
xor
arpl
pop
nop
pop
add
neg
adc
mov
mov
add
ds
inc
xchg
popf
(bad)
call
and
xor
adc
mov
push
push
add
sub
mov
mov
push
call
jmp
cwde
stos
and
cmp
xor
(bad)
xlat
loop
rcr
(bad)
pop
push
push
mov
and
adc
inc
adc
popa
inc
hlt
in
xchg
adc
les
mov
add
inc
or
or
inc
or
cmp
add
leave
inc
or
mov
inc
xchg
dec
mov
pop
sti
mov
xchg
xlat
ja
cmp
(bad)
or
or
push
mov
jl
ja
or
mov
push
mov
sbb
stos
lods
cmp
sub
inc
cld
push
push
leave
ficom
aas
push
cmp
xor
push
or
mov
ret
push
cld
out
dec
bound
shl
xor
jne
inc
aas
push
mov
dec
sub
adc
pop
and
sbb
sahf
pop
pop
mov
aas
push
ins
or
scas
popa
inc
rcr
mov
lahf
pop
jmp
mov
imul
fdivr
pop
dec
jno
cmp
xor
push
xor
test
ds
adc
je
mov
and
jbe
fldcw
or
mov
iret
or
push
adc
mov
cmp
jne
cmp
jne
add
jno
sbb
push
inc
syscall
hlt
pop
add
or
loope
sbb
or
xor
pop
cmp
out
movs
fild
test
add
push
add
icebp
mov
jmp
out
clc
lea
mov
adc
mov
lea
or
ja
sbb
mov
push
push
popf
add
lea
adc
cdq
mov
call
and
xor
pop
ret
out
mov
loope
inc
cmp
jb
data16
mov
xchg
xor
cdq
push
shr
cmp
add
cmp
or
push
mov
push
mov
retf
call
push
push
mov
inc
mov
add
xor
sub
mov
sar
(bad)
call
cmp
jbe
mov
mov
push
arpl
fiadd
pop
mov
lea
sbb
sub
sbb
or
dec
out
cmp
shl
xchg
inc
and
mov
mov
mov
or
int
inc
push
push
inc
mov
push
inc
xor
pop
jmp
retf
test
cmp
(bad)
push
mov
daa
mov
dec
shl
push
call
adc
mov
call
dec
ret
fsubrp
daa
xor
or
in
loope
out
scas
mov
lea
xchg
adc
or
fucom
push
fbstp
or
arpl
push
fcomp
mov
popf
mov
or
cli
jae
je
test
and
js
je
push
push
add
mov
and
imul
and
push
mov
cmp
aaa
inc
ror
push
jmp
add
std
pop
push
mov
sbb
lock
sbb
es
outs
mov
add
cmp
jge
mov
jle
ds
mov
and
div
cdq
add
mov
rol
jne
mov
jne
rol
sti
add
xor
and
or
add
push
add
mov
xor
repz
aad
fistp
aam
pop
stos
add
mov
or
mov
pop
lahf
mov
jmp
push
push
clc
xchg
popa
mov
(bad)
lea
mov
call
icebp
sbb
push
add
imul
jne
or
(bad)
addr16
mov
adc
out
or
cmp
add
(bad)
sbb
or
sbb
inc
jle
jmp
cmp
jb
push
adc
rol
call
mov
inc
mul
inc
inc
add
enter
and
out
out
inc
lea
sub
add
adc
mov
inc
add
loop
sahf
sti
adc
or
and
cmps
pop
mov
push
jo
or
mov
push
aad
lahf
cmp
cmp
sub
mov
or
push
sti
push
add
jg
push
push
push
push
call
add
outs
clc
inc
rol
or
or
dec
jmp
fstp
popa
xchg
push
es
mov
cld
mov
jge
aam
mov
adc
inc
pop
lock
aas
jbe
push
sbb
dec
std
xor
outs
nop
arpl
pop
popf
cmp
pop
xor
loop
add
push
ror
out
fadd
pop
xor
(bad)
(bad)
inc
add
jmp
mov
mov
cmp
jne
cmp
add
into
(bad)
jmp
test
je
cmp
je
int
in
pop
jmp
bound
or
jl
pop
mov
pop
inc
jg
fadd
adc
cmp
into
pop
push
and
and
test
or
jp
lods
aaa
(bad)
dec
iret
sub
or
outs
adc
call
into
in
stos
sub
icebp
fild
mov
gs
adc
push
mov
pusha
sbb
aad
mov
mov
jmp
jae
xlat
mov
push
or
inc
mov
add
mov
aas
ins
adc
push
ins
push
push
test
adc
lods
mov
fsub
mov
xchg
data16
(bad)
inc
inc
lods
or
psubq
inc
movs
mov
push
iret
mov
mov
add
setl
(bad)
mov
xchg
adc
mov
les
or
sbb
movs
mov
xor
lea
sbb
or
push
fld
inc
clc
loopne
div
lods
mov
and
add
add
pop
mov
fs
add
mov
xor
shl
adc
pop
jae
adc
fldcw
push
push
fwait
push
or
xor
mov
cmp
push
mov
adc
sbb
inc
ins
mov
mov
das
cmp
mov
stos
jb
sub
inc
pop
mov
pusha
push
fs
jb
push
fsubrp
xor
pop
jg
push
(bad)
or
add
xor
sbb
xchg
or
pop
mov
(bad)
mov
add
xor
push
mov
test
pusha
jno
icebp
je
push
mov
push
mov
push
push
clc
adc
jmp
mov
daa
pop
inc
and
dec
dec
imul
jb
push
je
and
lods
sub
xor
mov
cmp
je
inc
and
fistp
jge
or
mov
sahf
mov
mov
adc
mov
leave
(bad)
out
sub
scas
lea
adc
fdiv
pop
add
add
xlat
add
ret
inc
add
xlat
mov
call
xchg
lea
mov
or
pusha
xlat
loope
mov
xchg
les
mov
mov
inc
pop
popa
test
inc
push
pop
and
mov
or
bound
jge
ins
je
pop
adc
cld
inc
or
pop
fild
xchg
stos
mov
retf
mov
hlt
fild
pop
arpl
or
mov
xorps
push
push
shr
inc
loop
and
cld
add
jge
add
test
sub
adc
test
jbe
push
scas
sub
movs
push
aam
add
add
mov
lea
mov
add
mov
add
hlt
mov
sbb
jl
sbb
stos
mov
cs
inc
dec
push
cmps
or
mov
or
popa
inc
mov
clc
sbb
aaa
aad
leave
dec
and
push
ja
dec
or
sbb
inc
hlt
dec
xor
jb
jne
xor
or
mov
inc
mov
mov
mov
cld
mov
pop
lock
pop
add
inc
jns
push
dec
sbb
rcr
or
or
ins
push
pop
femms
lds
or
std
iret
adc
sbb
pop
lahf
sub
pop
ret
jb
push
shl
loopne
jns
test
or
sbb
mov
mov
fadd
(bad)
(bad)
lea
lea
push
lea
std
mov
mov
lea
sub
repz
or
pop
std
adc
jb
pop
out
dec
mov
nop
cmp
into
mov
push
push
mov
push
push
add
add
pop
hlt
icebp
or
mov
mov
adc
rcl
push
fnstsw
cmp
cmp
push
lea
lea
mov
add
dec
cmc
sub
xchg
js
retf
push
dec
lea
add
push
push
mov
mov
repnz
xor
add
imul
sbb
call
(bad)
arpl
(bad)
inc
push
push
jle
mov
fmul
dec
mov
pop
add
lds
aas
push
lea
add
bswap
and
inc
fisubr
out
bound
add
cmp
push
lods
mov
fidivr
xchg
and
retf
(bad)
sbb
mov
mul
xchg
(bad)
xor
xor
sbb
(bad)
int3
fwait
pop
pushf
test
jbe
mov
jmp
cmp
pop
xor
or
icebp
shr
inc
ror
icebp
dec
push
add
sbb
aas
add
cmp
mov
mov
xor
mov
cmp
adc
add
out
pop
push
or
push
or
loopne
push
popa
test
cmp
push
mov
ror
test
(bad)
xor
pop
nop
mov
dec
mov
add
loopne
mov
cmp
je
mov
pop
pop
bound
dec
int3
lea
lea
inc
mov
pop
push
jne
adc
mov
enter
sbb
add
or
jbe
and
(bad)
out
mov
inc
add
lea
pop
inc
jne
mov
and
lahf
es
sub
add
add
mov
(bad)
mov
rol
jmp
mov
inc
sub
cdq
mov
mov
lea
mov
xchg
mov
pop
or
sbb
leave
mov
fist
sbb
add
mov
mov
adc
add
mov
mov
lea
adc
cmp
mov
jmp
mov
add
mov
mov
(bad)
inc
retf
mov
pop
or
or
dec
adc
inc
adc
push
loopne
repnz
inc
and
idiv
aam
dec
fmul
or
add
jmp
mov
xor
in
sub
lea
inc
call
or
rcl
scas
dec
mov
push
dec
clc
add
xchg
ret
adc
cmps
popf
inc
or
adc
mov
pop
mov
pop
adc
pop
fwait
lahf
xor
aad
mov
mov
in
inc
sbb
inc
and
inc
inc
push
jbe
rol
mov
mov
jle
push
iret
stc
test
je
mov
add
mov
loopne
dec
iret
(bad)
inc
add
(bad)
mov
aas
(bad)
push
cmp
rcr
retf
jns
add
mov
das
mov
and
in
rcr
mov
test
js
jmp
add
mov
or
or
pop
or
mov
jo
add
cmp
mov
sbb
sbb
mov
dec
and
popa
js
push
add
xchg
jge
ins
push
push
dec
jne
adc
cmp
jne
call
cmp
push
jne
push
sbb
outs
and
cmp
jl
xor
sbb
push
pop
dec
adc
std
cmp
add
add
add
add
daa
push
adc
xor
cli
int3
jne
clc
ret
jno
mov
aam
call
jmp
popa
mov
loopne
movq
cmp
je
mov
pop
ret
out
or
push
add
adc
ret
adc
push
push
or
in
push
mov
mov
or
imul
ja
jbe
sub
ja
std
fbstp
imul
movs
mov
mov
mov
inc
cmp
inc
mov
inc
xchg
mov
inc
mov
clc
out
jbe
inc
shl
rol
inc
movs
movs
aad
push
arpl
into
push
push
(bad)
xor
pop
imul
sldt
jmp
inc
fdiv
jns
push
sbb
or
mov
push
xchg
arpl
ja
jge
add
test
add
in
mov
sub
or
jb
cld
mov
sub
jl
(bad)
sbb
rol
push
push
test
mov
(bad)
cmp
add
sub
inc
les
xor
mov
adc
pop
sub
test
pop
scas
cmp
jne
xchg
push
fidivr
add
mov
fucomi
ja
pop
hlt
jne
mov
push
push
lea
mov
pop
jbe
cmp
jmp
popa
lea
sub
lods
out
(bad)
outs
or
arpl
xchg
mov
jae
jg
movs
arpl
or
mov
mov
mov
push
pusha
clc
ss
mov
lea
cwde
push
xor
and
sbb
add
mov
dec
scas
mov
push
movzx
push
add
out
sahf
push
or
je
iret
jg
push
movzx
add
lea
fwait
adc
xor
push
lods
sub
or
mov
push
mov
and
xor
fcomp
add
fdiv
or
mov
mov
or
xor
and
hlt
jge
dec
inc
into
add
add
clc
cmps
add
or
test
mov
push
push
push
add
add
adc
sub
xor
mov
and
clc
sbb
mov
(bad)
clc
xor
add
lds
add
and
jmp
or
mov
jne
pushf
ds
jne
xchg
or
repnz
push
jge
add
push
lea
push
leave
push
pop
sbb
retf
arpl
pusha
adc
repz
cmp
loop
or
sbb
aam
ins
push
test
jne
push
jo
add
into
inc
add
sub
cli
outs
or
je
mov
add
mov
sub
hlt
je
scas
xchg
adc
and
in
adc
jmp
mov
push
or
fmul
inc
repnz
fwait
das
or
mov
mov
jae
mov
fdiv
(bad)
pusha
dec
push
cmp
inc
fcom
xor
jne
and
test
mov
ret
xchg
fcom
or
add
or
arpl
add
sub
sahf
add
sbb
inc
add
int
jmp
shl
loopne
retf
cmps
out
lds
mov
ja
sub
cwde
cmp
pop
mov
sbb
adc
mov
xor
mov
rol
pop
aas
sub
mov
sbb
push
mov
xor
mov
and
(bad)
in
mov
mov
mov
mov
mov
push
push
add
sbb
jo
shl
clc
xchg
stos
and
pop
pop
mov
jg
sar
cmp
sub
cmp
jmp
mov
lea
mov
lea
mov
pop
jmp
dec
xor
les
pop
add
call
xor
mov
mov
mov
jp
push
add
mov
adc
ret
mov
aaa
lock
pushf
cmp
jne
call
xor
test
sbb
and
lahf
push
ror
sbb
xor
loopne
inc
lods
add
add
cmp
(bad)
mov
leave
es
fst
add
dec
sbb
jne
pop
jnp
and
ror
sbb
sub
xor
push
sar
jl
or
mov
xchg
add
mov
pop
push
fist
or
xchg
test
jne
dec
sbb
and
cld
out
or
pop
fdivr
and
fs
aad
dec
shl
add
pop
mov
sub
sar
mov
cmp
jae
add
sub
cld
jmp
push
out
inc
adc
or
add
dec
jne
clc
pop
inc
in
inc
and
push
or
aaa
mov
dec
xchg
cmp
jbe
pop
pop
and
mov
sbb
and
out
cwde
add
cmp
cmovne
pop
mov
aaa
mov
(bad)
adc
add
pop
inc
hlt
adc
or
fcmovnbe
xor
cs
cmp
hlt
mov
jne
mov
xor
cmp
dec
std
dec
sbb
xor
fisttp
sub
inc
or
pop
(bad)
out
clc
inc
lock
jb
mov
mov
movs
daa
mov
jmp
and
cmp
ins
call
mov
mov
(bad)
aas
shl
push
mov
push
xor
or
jmp
(bad)
pop
hlt
(bad)
jmp
inc
out
mov
mov
mov
mov
add
std
xor
mov
dec
adc
out
mov
jmp
inc
cmp
mov
cmp
ja
and
cmp
pop
cmp
pop
inc
shl
or
sar
push
sbb
xchg
push
ror
mov
push
jge
cmp
cmp
call
sar
test
jne
mov
mov
and
inc
(bad)
lea
shl
cmp
jae
mov
mov
jg
adc
cmp
jne
inc
add
jmp
ja
mov
cmp
test
jne
xor
inc
cmp
(bad)
dec
and
add
fild
cmp
jb
and
inc
xchg
and
add
enter
mov
(bad)
mov
add
ja
push
or
arpl
sub
adc
push
or
add
adc
pop
or
inc
inc
stc
or
add
pop
pop
or
or
pop
cmp
dec
inc
mov
mov
sub
add
hlt
and
jo
push
ror
call
add
push
dec
repnz
inc
mov
scas
inc
int3
and
sub
test
or
(bad)
lods
mov
fiadd
mov
add
inc
sub
call
cmp
aas
push
jl
inc
les
or
and
dec
ja
or
in
and
out
push
pushf
jle
call
jmp
or
dec
xor
add
mov
pop
pop
mov
and
pusha
fmul
or
push
jo
loopne
inc
adc
dec
or
inc
test
add
cmp
dec
test
and
test
push
push
lea
ret
dec
mov
pop
add
cmp
leave
pop
push
std
dec
add
test
cs
cmp
jb
cmp
je
push
cmp
stos
loopne
sub
in
mov
mov
add
pop
cmps
inc
(bad)
hlt
data16
inc
lods
or
call
dec
and
and
imul
jge
cmp
in
push
xor
adc
cmp
jne
ja
mov
cmp
jne
jne
sub
movs
mov
stos
mov
ror
xchg
mov
or
lock
cwde
aam
rol
ror
xchg
adc
cmp
ja
dec
shl
sub
out
(bad)
frstor
(bad)
aam
retf
xchg
xor
sti
(bad)
mov
ja
cmp
jb
and
fwait
xor
pop
ins
mov
add
mov
adc
add
sbb
cmp
jb
je
push
lock
js
fwait
cmc
(bad)
jb
fmul
bound
or
pop
test
or
push
push
sub
mov
mov
dec
or
mov
push
adc
cs
jne
mov
sub
into
ja
mov
inc
jns
cmp
(bad)
mov
jge
cmp
jne
cmp
jne
(bad)
cmp
(bad)
push
mov
push
call
mov
shl
les
aad
add
mov
cmp
cmp
push
mov
mov
sbb
push
mov
mov
mov
sub
cmp
jne
jb
push
fidivr
sub
sub
in
arpl
imul
test
jae
adc
jne
add
mov
inc
jne
or
sub
cmp
jbe
test
inc
dec
movs
add
or
ret
sub
mov
out
sbb
ss
mov
call
push
pop
and
jbe
or
push
hlt
leave
adc
push
les
pop
push
sub
(bad)
iret
les
xor
cdq
mov
je
or
imul
adc
fimul
mov
cmps
add
add
xchg
pop
mov
add
rcr
or
pop
adc
mov
les
sub
lods
push
iret
or
mov
mov
dec
mov
xor
push
push
xor
mov
hlt
push
outs
or
cmp
ud0
out
mov
mov
and
mov
xorps
sub
movdqa
xor
(bad)
sub
push
cmp
movd
and
ret
mov
pop
dec
or
sbb
punpckldq
or
fbstp
fnstsw
aam
retf
in
(bad)
(bad)
jmp
int
jmp
cmp
sbb
jge
std
(bad)
jecxz
(bad)
jb
sbb
(bad)
fcomp
loopne
jmp
push
add
or
loopne
xor
xor
cmp
jae
mov
ret
sub
cmp
jb
mov
mov
sub
rcr
lea
sub
lds
jmp
jmp
scas
popa
pop
(bad)
jg
add
lea
add
dec
iret
pop
hlt
or
mov
inc
or
add
lea
add
jno
push
mov
jge
mov
lods
into
push
jg
adc
mov
xor
test
je
mov
add
cmp
je
inc
add
adc
dec
cmp
jb
mov
pop
mov
mov
add
iret
add
and
or
mov
in
psrad
jb
push
iret
mov
mov
dec
fmul
pop
dec
call
mov
mov
scas
cmp
or
clc
into
inc
xor
push
and
jg
jg
mov
push
or
push
cmp
ja
mov
and
sbb
call
adc
mov
add
mov
sar
sub
dec
aad
dec
add
sub
sbb
and
adc
jmp
aaa
stos
sub
and
shr
jmp
sahf
mov
test
je
dec
mov
std
(bad)
jg
push
mov
lea
mov
movzx
mov
and
jbe
(bad)
(bad)
fmul
and
mov
inc
mov
cmp
xor
rol
jb
test
jne
(bad)
inc
sub
dec
dec
mov
out
and
dec
or
or
dec
fmul
or
push
add
jne
cmps
mov
test
cmovg
adc
jne
cmp
mov
test
mov
and
jnp
jae
pop
jb
adc
jae
ja
mov
mov
lea
mov
adc
cmps
jnp
es
jge
je
dec
pushf
xor
inc
cwde
dec
gs
pop
pop
pop
dec
push
or
cmp
mov
inc
add
xchg
and
xchg
or
add
mov
ds
cmp
loopne
je
adc
jl
fdivr
pusha
les
xor
jnp
rcl
fs
out
sbb
aaa
repz
inc
pop
xchg
cli
test
std
(bad)
jmp
jns
addr16
stos
popf
dec
outs
test
js
mov
mov
and
push
fwait
jo
mov
cdq
test
ja
ja
add
enter
mov
test
fld
inc
mov
jbe
mov
cli
outs
ret
inc
mov
dec
mov
and
sbb
sbb
jb
adc
pop
aas
or
mov
inc
int3
sub
inc
pop
out
ja
adc
push
pop
inc
clc
cld
jmp
test
mov
or
aam
(bad)
cmp
push
ja
mov
push
(bad)
fild
add
add
mov
test
js
fisttp
fmul
aam
add
add
(bad)
dec
loop
pop
aam
push
mov
push
test
push
mov
call
dec
out
cmp
outs
mov
dec
mov
jne
(bad)
pop
adc
jnp
add
fucomp
jo
jp
pushf
daa
dec
mov
add
fucomi
fadd
mov
mov
lea
and
adc
xchg
rol
xor
out
in
(bad)
in
ja
adc
outs
fmul
scas
(bad)
push
jle
add
or
xor
mov
inc
sahf
pop
inc
outs
jo
outs
xchg
or
inc
mov
pextrw
rol
jb
hlt
fcomip
aam
sub
mov
jne
mov
cmp
and
sahf
fist
inc
outs
test
mov
pop
js
test
psubd
dec
cmp
jne
mov
xor
stc
mov
mov
mov
sbb
je
inc
add
inc
(bad)
(bad)
mov
test
js
inc
cmp
jb
mov
cmp
je
loopne
mov
ror
daa
pop
push
inc
or
xchg
mov
loopne
mov
pop
ror
nop
unpckhps
or
mov
adc
loopne
mov
add
or
inc
in
lahf
or
loopne
add
sub
jb
lea
or
push
movs
clc
(bad)
in
inc
je
sbb
xchg
sbb
mov
adc
retf
cmp
push
sahf
sbb
cs
dec
add
adc
call
inc
aaa
sub
cs
int
ss
(bad)
mul
rcl
clc
mov
add
lahf
rcl
or
cmp
inc
lahf
mov
mov
movs
sbb
jge
lea
push
jg
adc
sbb
sbb
cmp
mov
hlt
add
mov
aas
leave
add
cmp
je
sbb
pop
ret
mov
out
add
fcom
loopne
push
clc
inc
out
sbb
lods
xor
jne
test
adc
rcr
ret
jne
sbb
pop
inc
and
and
mov
xor
test
ret
dec
lods
inc
xor
sar
aad
cmp
out
adc
bound
enter
test
xchg
add
adc
loop
aad
or
dec
pop
pop
dec
fdivr
inc
clc
or
je
lea
sbb
repnz
inc
adc
inc
clc
adc
jge
sub
ins
xor
push
add
out
jge
xor
or
jne
adc
inc
aaa
mov
push
pop
loopne
or
dec
adc
(bad)
cmp
push
jne
test
jne
jnp
shl
cmc
sub
cmp
inc
cli
(bad)
mov
setne
shr
mov
mov
inc
cmp
jb
jne
adc
or
mov
ja
inc
sub
das
inc
jae
arpl
call
or
add
or
xor
test
jne
jb
sbb
mov
leave
retf
inc
adc
test
xor
jge
nop
cli
jmp
inc
xor
je
aas
add
add
add
cmp
in
into
jb
cmp
test
pop
adc
je
mov
mov
sbb
dec
add
or
inc
inc
ss
pop
pop
pop
inc
or
hlt
and
mov
push
adc
xor
lds
test
cmp
jae
cmp
jne
cmp
je
inc
jmp
inc
inc
cmp
jb
sbb
inc
shl
cmp
pop
cmove
pop
mov
pop
call
lahf
or
mov
out
fmul
push
push
pusha
xor
out
jno
mov
mov
pop
pop
ret
cmp
add
cmps
lock
pusha
cli
push
cmp
je
mov
lea
push
jo
outs
inc
cmps
inc
cld
xor
or
pop
mov
mov
retf
jmp
adc
inc
call
xor
sbb
push
or
es
push
xor
or
cmc
sbb
cmp
mov
push
call
jmp
jb
xchg
and
cmp
xor
push
adc
jne
fcomp
or
inc
cmps
add
mov
aas
sub
or
inc
add
push
cmps
mov
pusha
in
movs
mov
jne
mov
sar
push
in
push
cmp
jne
test
jne
loope
outs
shl
mov
dec
xor
xor
adc
aaa
sbb
cmp
jne
rcr
in
cmp
(bad)
push
lea
call
cmp
push
push
and
cmps
in
push
aaa
cmp
and
push
mov
adc
pop
pop
hlt
or
std
pop
dec
lock
mov
or
outs
outs
pop
scas
call
cmp
jne
out
pop
and
daa
xlat
cmp
fld
cld
mov
cmp
loop
(bad)
sbb
mov
add
ss
daa
int3
ds
loope
inc
lods
jle
add
and
iret
loop
xchg
add
jecxz
dec
jne
dec
xor
ja
jge
mov
or
sti
inc
loopne
test
mov
push
call
inc
call
mov
idiv
or
jne
loopne
test
or
test
lea
cmp
ja
add
cmp
inc
int3
jmp
sub
inc
dec
mov
test
jne
pusha
clc
xchg
push
lea
push
cwde
mov
je
retf
add
push
lea
mov
push
test
in
jge
dec
std
scas
lock
xor
jo
shl
jl
jo
mov
push
shr
push
retf
in
jle
xor
sbb
inc
aaa
sbb
lahf
or
xor
dec
jne
mov
test
je
jp
movq
pop
out
pop
ins
hlt
push
inc
sub
push
jmp
iret
cmp
jne
cwde
and
or
dec
test
inc
push
jne
add
fld
mov
mov
rsqrtps
arpl
inc
aad
test
adc
ja
inc
add
cmp
jb
and
sbb
sbb
inc
ss
enter
call
aas
xor
push
push
int
mov
mov
add
adc
push
cmp
test
aam
or
sahf
jl
fdivr
push
mov
push
dec
xor
lds
pop
lahf
test
dec
cmp
dec
rol
aas
xor
xor
xor
mov
pop
inc
adc
add
pop
inc
icebp
es
inc
add
mov
sbb
inc
or
sete
mov
dec
xor
mov
mov
mov
mov
mov
mov
mov
mov
add
clc
inc
sti
add
inc
add
mov
jle
ja
dec
push
aaa
add
or
add
inc
pop
pusha
imul
add
call
mov
inc
add
cmp
jb
push
fsub
push
xor
inc
and
(bad)
add
xor
or
sbb
pop
or
ss
sti
or
push
push
pop
sqrtps
or
inc
ror
jbe
ret
xor
les
mov
add
xchg
js
dec
cld
mov
bound
addr16
cmp
inc
add
jg
push
movzx
icebp
push
or
and
dec
or
add
inc
shr
mov
inc
jl
or
mov
movzx
dec
movzx
and
cld
cdq
shl
iret
adc
fwait
jbe
or
pop
adc
xor
pop
jmp
pusha
add
arpl
ja
lock
mov
jne
mov
test
dec
aas
rol
or
fimul
fidivr
ja
or
ror
mov
sub
rcr
or
test
jecxz
test
addr16
cmp
dec
cld
jae
pop
mov
stc
sbb
adc
adc
lahf
adc
cmp
push
push
push
daa
jo
add
inc
mov
mov
xchg
adc
adc
sbb
jmp
and
js
jg
mov
(bad)
mov
shl
cli
pop
mov
lea
and
cmp
jb
mov
jnp
sbb
sbb
or
imul
or
cmps
adc
sbb
xchg
ror
jmp
call
and
aaa
out
or
jbe
retf
(bad)
cwde
jmp
add
sub
aas
xor
jo
test
pop
pop
pop
mov
cmp
jne
mov
mov
and
pop
bound
dec
ucomiss
add
leave
cmp
jbe
outs
mov
lahf
adc
or
mov
aad
hlt
jb
pop
pop
retf
push
push
jmp
cld
call
add
and
and
jg
add
and
cmps
push
shr
out
add
mov
cdq
movs
outs
cmp
mov
cmp
ja
icebp
fisttp
cmp
jmp
call
add
push
lea
(bad)
jbe
push
add
cmp
aaa
(bad)
mov
push
and
lea
inc
mov
out
push
sbb
push
sbb
cmp
push
xchg
sbb
xchg
mov
test
sub
add
clc
sar
addr16
adc
cmp
add
bound
add
cmp
test
(bad)
(bad)
cmp
pslld
dec
push
and
cmc
test
je
jecxz
retf
and
add
or
add
jmp
mov
jl
out
test
lahf
push
xchg
arpl
cmp
jne
test
jne
adc
sbb
sbb
jne
jbe
jg
jge
mov
add
lea
and
push
push
dec
lahf
aam
fadd
push
sbb
fmul
mov
add
pop
movs
in
(bad)
jg
test
pop
add
add
cmp
jb
mov
jnp
inc
cld
jmp
cmp
jne
jnp
dec
or
cdq
ret
je
cmp
fidivr
data16
push
sahf
test
jo
inc
ret
sub
sub
mov
jbe
cmc
test
adc
pop
and
bound
cmc
repz
jmp
push
pop
dec
and
enter
jmp
lock
sbb
lock
test
pop
xor
ja
fistp
mov
inc
and
mov
dec
in
dec
jae
cld
and
inc
in
lahf
inc
adc
hlt
mov
pop
test
outs
js
push
cmp
jbe
fs
aam
mov
lds
sti
aaa
dec
or
outs
loopne
int3
mov
cld
mov
mov
mov
in
mov
mov
mov
mov
call
std
outs
cmc
call
inc
fdiv
jmp
clc
mov
push
cmp
mov
clc
rcr
(bad)
out
sbb
sub
mov
sbb
mov
mov
mov
ror
sub
inc
in
inc
or
push
push
or
mul
xor
pop
sbb
fimul
push
mov
xor
cmp
jbe
mov
mov
mov
ja
aaa
icebp
mov
mov
mov
or
out
adc
daa
pop
ror
icebp
pop
sub
xor
dec
add
cmp
and
jle
jne
add
test
jmp
pop
fcomp
mov
outs
jne
cmp
(bad)
jne
jmp
jecxz
and
cmc
out
mov
push
adc
jge
sbb
mov
je
out
push
fnstenv
pop
adc
call
jg
mov
jne
cmp
sbb
add
adc
inc
outs
mov
inc
jmp
std
pop
add
mov
pop
inc
sbb
or
push
out
(bad)
out
lahf
and
mov
loop
pop
in
ret
sub
dec
pop
push
xchg
jne
xchg
jmp
and
add
int3
inc
mov
div
adc
cmp
sti
je
and
mov
sub
cmp
mov
(bad)
rol
stc
inc
stos
or
jbe
rcr
test
or
sbb
aas
pushf
int3
xchg
inc
add
jg
sbb
arpl
xor
test
aad
inc
ret
pop
or
or
pop
cld
lods
or
not
(bad)
call
mov
movzx
add
shl
or
cmp
jl
bound
ret
test
loopne
sbb
sbb
or
push
add
and
ja
mov
cmp
jne
mov
bnd
aam
inc
in
(bad)
inc
iret
xor
cmp
clc
es
adc
mov
lock
add
push
sub
xchg
adc
inc
add
pop
mov
pop
jecxz
test
push
or
rcr
jne
mov
cli
jmp
ins
pusha
pop
and
inc
add
add
sub
xor
add
clc
pusha
add
add
test
movs
jmp
add
cmp
mov
cmp
jbe
and
lods
adc
mov
add
jae
jge
bound
(bad)
fwait
jns
dec
clc
inc
xor
mov
(bad)
cmp
jb
das
loopne
es
or
push
and
cmps
mov
dec
hlt
nop
sbb
(bad)
es
dec
call
das
mov
jmp
lea
repz
xchg
jb
mov
add
rcr
push
ret
es
fwait
mov
inc
or
test
xor
cmp
jbe
mov
and
inc
sub
mov
(bad)
mov
jae
loop
out
call
or
hlt
mov
add
js
add
and
push
and
or
ror
fiadd
rcr
mov
sbb
mov
lea
cmps
outs
cmp
push
or
xor
add
nop
push
and
mov
xor
jbe
mov
xor
add
(bad)
neg
mov
pop
mov
cld
mov
inc
or
cmp
jb
cs
xor
jmp
inc
int3
add
les
jmp
std
add
in
pop
ret
lea
or
inc
jge
add
in
movs
cmp
loop
or
mov
mov
cdq
mov
rcr
ins
jbe
dec
mov
cmp
int
push
inc
add
shr
add
pop
ret
add
sub
mov
pushf
das
les
push
xor
dec
pop
adc
jne
xchg
jo
ret
jne
cmp
je
js
nop
and
les
mov
jp
pusha
mov
add
ss
icebp
out
mov
push
push
or
pop
mov
ud1
push
test
je
cld
mov
lea
clc
or
inc
or
cmp
inc
or
or
jne
xor
mov
test
loopne
fsubr
fiadd
or
mov
je
adc
jno
push
mov
add
inc
out
fidivr
shr
lahf
cmp
mov
inc
jo
add
inc
adc
out
jle
jp
retf
inc
jmp
xchg
dec
das
push
mov
dec
push
std
(bad)
inc
sub
jne
cmp
jbe
mov
cmp
jbe
(bad)
out
or
pop
mov
lea
push
push
push
mov
and
push
(bad)
mov
inc
sbb
push
jae
mov
lea
add
pop
jnp
add
(bad)
(bad)
ffreep
popf
pop
or
shl
adc
adc
sub
pop
jbe
cmp
mov
mov
xchg
std
push
adc
mov
pop
inc
or
mov
pop
std
lea
add
pusha
(bad)
jmp
pop
and
push
mov
mov
sub
jne
mov
pop
pop
mov
dec
cld
mov
jmp
jnp
lea
cmp
cmova
add
push
ss
cmps
jbe
call
add
ror
xor
pop
aad
or
add
div
dec
inc
add
pop
dec
or
rcr
loop
jmp
push
and
mov
or
call
not
mov
lahf
xor
mov
mov
and
shr
dec
not
and
xor
mov
jle
dec
shr
and
dec
not
and
shr
and
inc
mov
mov
call
mov
adc
jle
movzx
shr
xor
lea
mov
and
or
add
mov
clc
mov
adc
or
push
in
inc
cld
aaa
add
sar
test
sub
add
sbb
inc
mov
lea
call
rcl
xchg
push
les
push
outs
adc
jle
xchg
sbb
jbe
add
loope
push
cmp
sbb
es
mov
cdq
pop
dec
inc
and
xor
out
call
loop
xor
test
add
xchg
inc
xchg
add
test
jmp
ja
jns
or
cmp
ja
pop
ror
cmp
ret
mov
or
or
add
push
jne
cmp
jne
mov
push
pxor
jp
add
jae
ret
cmp
jne
cmp
jne
(bad)
push
jb
cmp
ja
cmp
jne
cmp
jne
cmp
adc
aaa
xor
add
mov
cmp
jne
ja
icebp
pop
sub
cmp
fistp
add
je
jbe
mov
sbb
dec
je
loop
xor
lea
lods
mov
rol
(bad)
call
add
add
cmp
jne
cmp
jne
cmp
jne
jp
jne
std
(bad)
frstor
add
ins
push
jne
cmp
jne
cmp
jne
aaa
ja
fmul
mov
add
add
test
pushf
mov
and
mov
cmp
jne
mov
or
mov
jge
jle
or
jp
cmovne
or
clc
and
push
cmp
(bad)
(bad)
inc
dec
mov
mov
and
xorps
sub
movdqa
mov
movdqu
add
lea
scas
sti
outs
mul
aam
or
cmp
jb
pop
retf
std
xchg
add
aam
movd
or
add
or
mov
dec
call
outs
ja
out
pop
cmp
inc
in
(bad)
jae
mov
mov
adc
enter
jb
mov
lea
mov
mov
xor
(bad)
jmp
out
add
adc
add
adc
add
cmp
jb
push
aad
dec
clc
mov
jne
fcomp
std
int3
mov
hlt
cmp
(bad)
mov
jae
cmp
mov
adc
add
pop
adc
cdq
(bad)
add
mov
pop
or
xchg
push
mov
push
mov
xchg
push
jne
pusha
add
xor
push
mov
sbb
inc
or
or
clc
and
jbe
cmp
pop
ret
pushf
inc
aas
lahf
jb
outs
and
test
jne
or
lock
clc
lahf
and
ja
jb
add
add
jae
mov
inc
pop
jne
or
cld
add
add
ins
cmp
and
add
loopne
and
add
sub
fld
fild
outs
mov
push
fisttp
jne
push
movs
jb
test
pop
es
push
push
push
dec
and
or
sbb
(bad)
fist
sbb
dec
and
mov
adc
hlt
pop
stos
mov
push
lea
leave
clc
pop
loope
xor
call
inc
inc
or
jb
mov
cli
mov
push
push
mov
sbb
pop
ja
add
cmp
cmp
mov
xor
stc
sar
mov
and
push
inc
sub
dec
xchg
jp
mov
dec
add
and
bound
scas
adc
jl
aas
fnstsw
in
jp
jne
jl
mov
inc
push
(bad)
(bad)
inc
fadd
div
mov
mov
cmp
je
in
or
je
cmp
xchg
sar
inc
test
dec
cld
cmp
jne
cmp
jne
shr
je
jecxz
loop
push
add
shl
ss
jno
mov
(bad)
and
loope
retf
push
adc
mov
outs
or
stos
jo
and
sbb
cmp
outs
pop
xchg
rol
mov
sbb
pop
pop
pop
jnp
adc
push
ret
mov
adc
or
or
sub
repz
cwde
sbb
test
or
inc
mov
adc
mov
jg
push
mov
xchg
pusha
lods
and
push
mov
pop
or
and
adc
fsub
push
pop
mov
inc
xchg
mov
xor
call
movs
mov
jb
push
cmp
jae
and
inc
ins
sub
idiv
imul
dec
xchg
mov
daa
push
inc
xor
sbb
and
mov
nop
adc
or
or
cmp
add
adc
mov
ror
mov
push
dec
lea
and
add
and
and
mov
jne
xchg
mov
add
iret
push
sub
les
jecxz
adc
fdiv
idiv
je
aad
call
inc
xor
add
mov
in
aad
adc
add
pop
or
dec
adc
inc
fmul
mov
pop
and
aam
push
mov
mov
mov
xchg
mov
add
mov
mov
xchg
mov
call
xor
test
je
or
cmp
enter
mov
and
out
jmp
retf
enter
mov
cmp
sub
add
jge
push
pop
dec
mov
pop
(bad)
mov
cmp
pop
pop
pop
inc
std
add
adc
dec
fmul
mov
jne
jne
jl
mov
dec
rol
jno
sub
jo
mov
or
mov
or
test
adc
inc
rcl
add
push
push
push
inc
jne
mov
lock
push
call
push
pop
add
stos
push
es
cmc
xor
imul
fdiv
pop
ins
sbb
sar
push
push
dec
aaa
pop
cmps
lahf
cmp
ret
adc
cmp
xor
jge
cmc
pop
push
push
(bad)
pop
int3
lea
mov
(bad)
sbb
jge
cmp
mov
push
test
mov
or
or
(bad)
scas
push
jge
mov
mov
(bad)
(bad)
or
jg
inc
add
cmp
jae
xor
inc
jp
or
pop
pop
sar
sbb
inc
sbb
sbb
(bad)
(bad)
fmul
mov
mov
jmp
jne
ja
mov
or
dec
cmps
or
jle
sub
pop
add
mov
mov
loopne
jne
retf
loopne
jge
pop
mov
or
mov
loopne
mov
retf
mov
mov
pop
dec
push
add
inc
gs
or
jne
mov
cmp
jne
inc
push
pop
test
cmc
xor
inc
mov
jmp
mov
cmp
idiv
push
push
and
jne
fadd
dec
rol
dec
jne
push
les
push
(bad)
sbb
adc
jne
inc
mov
cmp
sbb
std
(bad)
push
rcr
rcl
pop
pop
mov
inc
push
adc
xchg
adc
inc
sbb
dec
cld
mov
adc
repz
and
cmp
sbb
dec
push
adc
mov
adc
xchg
lock
mov
shr
shr
and
push
and
push
(bad)
(bad)
call
add
je
dec
jne
cmp
jb
jne
cmp
jae
push
xor
fiadd
jne
cmp
jb
call
or
or
jb
jne
cmp
je
leave
jne
ja
outs
pop
iret
jmp
xor
xor
jmp
cld
(bad)
ja
call
sub
or
inc
cld
pop
mov
jecxz
inc
clc
pop
cmp
(bad)
stc
adc
inc
hlt
inc
lock
ins
mov
push
mov
push
push
jae
(bad)
(bad)
inc
pushf
pop
mov
xor
push
popf
pushf
pop
xor
push
popf
and
cmp
je
push
test
adc
and
mov
js
sbb
inc
icebp
jl
or
aaa
leave
or
inc
sbb
imul
test
es
push
mov
push
xor
retf
jg
jg
invd
xor
mov
in
add
pop
clc
jne
(bad)
(bad)
(bad)
dec
or
mov
cmp
je
add
inc
add
cmp
jb
pop
pop
or
leave
pushf
stos
loopne
pop
ret
rol
add
xchg
jae
fist
or
or
cmovnp
ret
add
jmp
rol
or
dec
jne
adc
(bad)
jg
dec
mov
shr
mov
xor
sub
adc
mov
jg
jmp
daa
shr
das
mov
out
xor
dec
sbb
mov
add
adc
dec
mov
jne
imul
stos
sbb
pop
add
(bad)
scas
enter
in
push
test
dec
and
(bad)
mov
add
xor
mov
mov
imul
es
or
not
test
test
or
nop
add
stos
push
xor
add
outs
xor
aad
test
and
jg
pop
xor
cmp
push
shl
or
inc
clc
mov
cmp
jl
mov
loope
sub
mov
cmp
or
(bad)
sub
inc
xlat
mov
mov
lea
(bad)
fadd
mov
shl
cmp
je
cmp
jne
or
idiv
je
xor
dec
jne
mov
xor
cmp
and
xchg
rol
idiv
icebp
je
xor
repz
(bad)
(bad)
lahf
inc
cmp
jne
movzx
lea
jmp
cmp
lea
(bad)
out
and
inc
clc
punpcklbw
jmp
shr
clc
xchg
dec
scas
retf
cmp
jae
mov
sub
shr
ret
push
jae
mov
cmp
jo
jp
shl
or
or
dec
mov
or
inc
mov
mov
mov
sub
sub
and
fcomp
mov
mov
jae
and
mov
push
pop
(bad)
(bad)
fld
clc
inc
mov
cmp
sbb
adc
xchg
(bad)
pop
mov
add
push
cmp
mov
(bad)
cmp
ja
xchg
sbb
adc
mov
add
loop
or
or
add
push
push
sub
sub
mov
inc
cmp
je
call
or
sti
mov
adc
cmp
je
shr
xor
shr
call
pop
pop
leave
adc
int
scas
das
xchg
or
mov
add
and
addr16
retf
inc
adc
lea
pop
push
or
add
mov
add
mov
cmp
jae
lea
div
cld
add
fdiv
cmp
jb
sbb
mov
(bad)
fild
std
sub
cmp
jae
jbe
xor
jmp
dec
shl
(bad)
out
(bad)
out
pop
je
movzx
mov
sub
cmp
add
or
je
cmp
jne
cld
and
add
cmps
sti
ja
mov
or
inc
jmp
adc
mov
es
add
add
or
add
call
and
pop
pusha
movzx
movzx
lods
mov
add
mov
or
cmp
pop
lea
add
jmp
mov
sub
sub
test
je
mov
mov
lods
mov
sub
mov
cwde
jmp
jge
mov
shr
mov
clc
jno
adc
call
inc
mov
hlt
shl
dec
xor
jmp
(bad)
(bad)
jmp
retf
lock
and
dec
mov
not
mov
push
jle
out
mov
sbb
or
add
mov
mov
or
adc
ret
pop
inc
in
jno
mov
ret
pop
cwde
cmp
cmp
and
adc
push
or
dec
jnp
add
add
lea
adc
(bad)
(bad)
mov
xor
cmp
jne
movzx
movzx
jle
cmp
mov
ror
or
or
loopne
aas
std
out
test
je
add
add
jmp
sub
dec
add
out
mov
lahf
dec
cmp
popf
mov
cmps
or
sub
(bad)
jbe
pop
pop
or
add
xlat
or
mov
(bad)
(bad)
call
aas
jle
add
dec
or
(bad)
mov
sub
sub
cmp
jbe
lea
pop
push
hlt
or
pop
int3
mov
cmp
sub
add
(bad)
push
(bad)
cmp
jae
cmp
jae
cmp
adc
pusha
or
mov
loop
add
sub
jb
test
inc
enter
push
mov
mov
ret
test
aam
ror
mov
xchg
shl
mov
dec
and
dec
outs
imul
dec
std
call
push
and
mov
mov
mov
mov
fadd
(bad)
jmp
mov
mov
mov
sub
(bad)
(bad)
call
and
leave
mov
mov
mov
mov
mov
and
mov
ror
jmp
add
retf
loopne
ret
xor
mov
inc
jge
inc
jae
movzx
jns
rcl
pop
pop
adc
ror
dec
sbb
sbb
xlat
sub
add
test
mov
add
or
(bad)
aas
(bad)
es
mov
test
cmp
cmove
movzx
cld
(bad)
cmp
push
movs
shr
mov
shl
add
imul
sbb
add
lock
jae
jg
cli
add
dec
inc
retf
jns
push
je
add
xchg
mov
mov
test
or
mov
ja
cmp
jae
mov
add
pop
(bad)
mov
xchg
add
jmp
sub
sub
imul
add
loopne
xor
lea
push
mov
cmp
(bad)
(bad)
call
pop
call
jne
sbb
and
sub
add
cmp
add
clc
mov
clc
movzx
cmc
es
mov
pushf
sub
add
fisttp
and
lea
jnp
retf
mov
mov
daa
mov
movzx
or
inc
popa
adc
mov
rcr
pop
sub
inc
add
mov
jmp
sub
lods
ret
ror
mov
and
mov
xchg
les
and
(bad)
call
mov
inc
mov
inc
inc
fcom
xor
in
inc
dec
inc
cmp
sbb
push
(bad)
or
jae
pop
icebp
ja
outs
aas
add
aaa
mov
sub
pusha
add
(bad)
xor
adc
jg
add
in
je
mov
data16
xlat
shr
(bad)
cmp
jae
scas
jnp
cli
xlat
hlt
aas
(bad)
ds
mov
retf
dec
loopne
sbb
mov
ja
rol
add
jae
mov
data16
and
addr16
mov
int
dec
daa
or
mov
hlt
jle
jmp
retf
mov
mov
inc
cmp
enter
inc
sbb
and
add
out
jmp
clc
mov
xor
pusha
mov
into
sub
(bad)
popa
clc
cmps
sub
and
mov
jbe
add
mov
imul
and
outs
cmp
(bad)
sahf
lock
retf
xchg
mov
xchg
mov
nop
or
sub
(bad)
cmp
pop
sbb
mov
mov
add
ja
aam
push
ror
aam
push
hlt
cmp
cmp
add
push
xor
lea
fnsetpm(287
lods
sub
add
add
imul
mov
movs
or
add
retf
cwde
xchg
ins
pop
mov
jb
pop
sub
mov
dec
add
add
out
jg
retf
sub
mov
mov
sbb
ror
mov
cli
or
push
in
outs
mov
xchg
inc
nop
push
pop
in
fnstcw
jae
in
xchg
outs
loopne
or
mov
sbb
and
loopne
adc
mov
out
jecxz
call
cmp
jb
mov
sub
mov
add
mov
(bad)
scas
or
jb
hlt
sub
or
jg
ret
rol
add
loope
add
mov
adc
out
push
or
inc
inc
jmp
add
mov
mov
dec
mov
jmp
jbe
add
and
add
repnz
add
adc
not
popa
or
dec
pop
stc
adc
jg
or
add
jmp
push
add
xor
mov
push
call
inc
inc
cmp
jb
mov
shr
and
aam
loop
dec
or
mov
cmp
packssdw
cli
rol
rcl
adc
in
lea
sub
ret
and
(bad)
jp
loopne
dec
pusha
sbb
fcomp
pop
add
rol
jmp
add
out
mov
add
mov
add
dec
jb
aas
std
mov
mov
jg
clc
jne
lds
pusha
sbb
pop
sub
cmc
(bad)
jmp
shr
pop
sub
mov
shr
neg
add
and
add
pop
ja
dec
retf
mov
shl
mov
imul
or
sbb
test
enter
pop
jmp
fsubr
mov
or
mov
shl
or
cmp
pop
fcom
push
push
idiv
mov
jmp
imul
icebp
in
lds
sbb
add
add
add
and
jmp
(bad)
xor
xchg
stc
cmp
push
or
fmul
add
call
fwait
test
jne
cmp
jmp
cmp
jae
mov
adc
pop
or
cmps
or
add
clc
push
dec
cmp
je
fidivr
retf
fnstcw
jne
(bad)
cmp
fcomp
rol
pop
scas
fsubr
push
fsubr
pop
in
add
lea
cmp
ja
add
int3
sub
add
lea
mov
mov
mov
mov
(bad)
(bad)
call
cs
and
fmul
or
xor
inc
cmp
cmove
dec
jne
sub
(bad)
out
mov
mov
lea
mov
sub
pop
mov
or
cmp
jb
lock
(bad)
dec
push
mov
xchg
push
sbb
and
inc
sub
inc
fmul
dec
mov
mov
mov
mov
mov
mov
mov
aad
jle
xchg
xor
jmp
lock
jmp
pop
add
xor
push
(bad)
(bad)
dec
sub
push
mov
sub
push
mov
mov
mov
mov
test
je
cmp
xor
and
mov
sub
dec
cld
mov
mov
cmovb
loopne
call
cmp
push
mov
push
mov
jne
mov
push
retf
(bad)
(bad)
mov
xor
sub
retf
dec
test
je
cmp
add
(bad)
jmp
sub
add
mov
mov
inc
dec
jne
pop
mov
mov
inc
inc
lock
and
mov
les
push
cmp
dec
imul
stos
and
repz
jae
add
mov
clc
inc
add
dec
add
scas
add
mov
shl
add
jmp
pop
add
ss
mov
push
push
mov
call
push
xor
rol
mov
pop
mov
xchg
pop
xor
or
outs
andnps
mov
push
mov
mov
mov
mov
jg
and
push
add
cmp
test
push
or
nop
cmp
cld
je
sub
out
cld
(bad)
mov
jp
xor
pop
inc
dec
jne
add
aaa
popf
cmp
jb
pop
add
test
lods
dec
mov
jg
mov
pop
movzx
cld
or
or
and
jb
mov
inc
lock
and
inc
ja
xor
loopne
cmp
and
sub
inc
and
test
adc
test
push
loope
into
cmp
cmp
je
mov
mov
pop
push
shl
add
jle
mov
ss
or
std
rep
mov
add
jo
mov
ret
add
inc
pop
mov
out
pop
lock
test
jne
cli
adc
or
pop
lea
add
jmp
push
mov
mov
or
dec
test
je
cmp
jne
retf
ret
pop
mov
push
mov
pop
dec
cmps
mov
lahf
mov
sub
add
jmp
mov
clc
cmp
jae
cmp
jae
mov
inc
mov
inc
adc
push
adc
sbb
or
lds
cmp
push
lea
add
lea
mov
jne
outs
jne
aad
and
fistp
fdivr
jb
dec
mov
clc
push
movs
add
mov
popf
ss
push
pop
test
in
je
mov
imul
pop
pop
pop
pop
(bad)
pop
add
lods
aam
inc
fst
(bad)
call
sbb
and
ja
jge
jle
push
push
in
shl
add
sub
lahf
in
ins
push
cmp
jne
fiadd
rcl
in
aaa
mov
xor
(bad)
popa
dec
xchg
xchg
add
sub
add
push
push
jmp
les
(bad)
icebp
punpckldq
or
or
inc
outs
mov
add
inc
fild
sbb
mov
fwait
mov
add
pop
mov
pop
int3
cmovae
adc
and
je
mov
xchg
adc
push
or
or
pop
adc
mov
xor
inc
and
sub
mov
or
inc
(bad)
fbstp
cmp
shl
sti
dec
mov
and
clc
mov
push
mov
cmp
inc
dec
clc
push
mov
mov
mov
sub
je
jae
imul
or
pop
mov
out
or
inc
xor
ja
imul
daa
mov
push
sub
mov
jp
sar
(bad)
jg
jp
add
cmp
je
mov
test
jne
mov
mov
mov
mov
(bad)
mov
sub
shr
mov
jl
call
shl
mov
dec
and
or
jecxz
sar
jg
sbb
push
or
dec
adc
push
aad
pop
lods
xchg
call
scas
call
fst
out
inc
cmp
jae
mov
jb
sub
pusha
push
jno
cmp
sar
mov
xchg
shl
add
fidiv
jmp
cdq
movzx
pop
cmc
call
dec
or
add
cwde
mov
and
pop
jbe
aas
fsub
xor
xchg
sbb
jge
jae
inc
or
in
xchg
or
imul
sub
shr
xchg
mov
retf
add
les
cmps
idiv
div
add
mov
pop
hlt
mov
inc
or
sahf
cli
add
not
sub
jecxz
cmp
sub
scas
mov
cld
jo
sub
or
cmp
dec
inc
inc
jg
adc
out
push
jle
(bad)
mov
cld
cmp
jae
ret
mov
ror
mov
je
jge
cmp
std
adc
aaa
xor
dec
dec
cmp
xchg
cmp
ficom
or
shr
or
sub
push
push
int3
add
adc
in
mov
aaa
cmps
sub
add
icebp
jmp
int3
add
jo
xor
cmp
mov
cmp
mov
mov
pop
and
sub
fstp
add
loope
or
and
push
out
jmp
pop
dec
movs
cmp
add
and
retf
inc
add
clc
les
or
adc
jo
or
aaa
cld
cmp
jb
xchg
sub
add
push
add
dec
loopne
jae
mov
sbb
cmovb
outs
je
rcr
int3
inc
adc
add
addr16
mov
movs
daa
pushf
fild
sti
inc
jb
sub
cmp
or
xor
dec
aas
cmp
jae
mov
and
add
inc
or
shl
mov
sub
lea
add
cwde
mov
add
mov
(bad)
fstp
shr
mov
sub
sub
dec
jne
add
pusha
loop
add
ret
fisttp
jae
cmp
loop
mov
das
call
cmp
or
pop
inc
pop
jb
call
scas
jge
adc
adc
jle
clc
fistp
movzx
movzx
inc
enter
mov
mov
(bad)
cmp
cmovb
mov
mov
cmp
jb
aas
nop
movzx
or
out
sar
jnp
cmp
push
or
inc
or
ror
add
xchg
jg
pop
inc
in
pop
adc
mov
fdiv
(bad)
fild
jne
or
jmp
movzx
mov
imul
outs
imul
push
cmc
aam
idiv
(bad)
mov
mov
lea
push
push
shr
push
mov
mov
cmp
cld
pop
adc
sub
add
cmp
(bad)
adc
push
mov
mov
enter
iret
add
loopne
jns
cmp
lods
je
jno
inc
js
jle
mov
cmp
je
icebp
cmp
data16
push
jne
adc
cmp
je
cmp
je
mov
cmp
je
retf
adc
loope
fsubr
lock
sbb
mov
mov
add
pop
dec
mov
sub
mov
sub
dec
cs
out
dec
xor
ja
add
lds
adc
dec
jl
leave
js
out
dec
inc
(bad)
cmp
mov
je
xor
mov
mov
mov
sub
mov
cmp
push
out
push
hlt
add
(bad)
(bad)
push
jge
in
mov
call
adc
cdq
or
sbb
and
add
es
out
jmp
shr
sub
(bad)
ja
mov
add
jecxz
add
in
add
(bad)
add
sub
mov
mov
jg
sbb
mov
movzx
xor
shr
and
add
inc
cmp
sete
xor
jne
fucomp
out
or
xchg
stos
jne
jle
or
int3
or
(bad)
neg
push
inc
outs
xor
js
add
jle
(bad)
icebp
xchg
inc
push
push
cmova
push
inc
jge
add
pop
sbb
xor
mov
add
dec
adc
hlt
adc
sbb
jbe
test
sub
sub
pushf
outs
mov
mov
lahf
je
(bad)
mov
sub
cmp
jne
cmp
jne
cmp
sub
push
mov
cmp
cmc
add
test
js
je
mov
je
pop
pop
(bad)
adc
and
pusha
push
sbb
pop
and
add
add
cmp
xchg
adc
sub
iret
inc
mov
lock
and
or
fld
and
mov
and
pusha
jp
fisttp
jle
and
(bad)
out
js
dec
pop
dec
mov
test
jne
mov
in
dec
call
jbe
mov
jmp
pop
cmp
cdq
push
aad
loopne
shl
mov
cmp
mov
adc
xchg
or
in
fdiv
hlt
daa
adc
icebp
jnp
or
inc
test
xor
cmove
sbb
inc
jo
jmp
jle
adc
inc
jo
adc
inc
jl
pusha
cmp
pusha
or
xlat
nop
hlt
add
adc
push
shl
adc
ss
cmp
jae
scas
push
jp
push
mov
sub
sti
push
mov
adc
add
pop
pop
mov
ret
mov
dec
pop
pop
call
data16
or
add
ja
or
je
dec
jo
mov
mov
dec
es
and
pop
ins
jns
pop
xchg
inc
adc
hlt
cmps
jg
pop
sbb
inc
adc
hlt
pop
movs
and
mov
mov
or
sub
push
add
add
mov
push
sbb
ss
jae
and
mov
(bad)
push
push
call
call
mov
dec
inc
scas
mov
adc
adc
jne
test
cli
(bad)
jg
jge
add
mov
jb
cmp
ja
mov
mov
add
pop
inc
xchg
fadd
fild
(bad)
out
push
add
adc
mov
adc
mov
fdivr
mov
cmp
aam
ret
ja
pop
inc
and
jns
mov
mov
cmp
jne
cmp
jne
imul
push
imul
out
das
sub
(bad)
(bad)
push
popa
js
push
mov
test
je
cmp
je
call
into
add
sbb
add
sub
sahf
(bad)
(bad)
push
sbb
pop
dec
jg
loope
iret
lea
mov
test
add
dec
daa
test
mov
shr
jmp
call
out
(bad)
push
scas
mov
mov
mov
mov
or
inc
push
das
sub
imul
stos
add
add
sar
outs
repz
ret
pop
sbb
inc
fnstenv
pop
inc
cld
inc
push
push
push
lea
jmp
xor
mov
fadd
push
sbb
aam
call
add
add
mov
(bad)
cmp
inc
movs
jge
add
call
adc
inc
lds
cmp
(bad)
jl
adc
pop
adc
add
addr16
mov
add
call
mov
push
mov
or
gs
jecxz
pop
dec
je
sbb
loope
nop
push
or
adc
loope
add
fdiv
cdq
jl
jg
mov
pushf
in
push
mov
inc
xor
add
loopne
std
inc
adc
ret
aaa
push
inc
jne
or
cmp
enter
adc
push
pop
or
fsub
adc
push
sub
push
dec
lahf
mov
mov
mov
repnz
sbb
mov
add
test
je
sbb
xchg
mov
popf
mov
call
cld
or
xor
inc
pushf
mov
push
(bad)
adc
push
(bad)
sub
inc
loopne
fdiv
sub
lea
push
std
cmp
push
mov
add
inc
add
mov
sub
or
mov
inc
add
lods
jl
push
or
int3
add
cmp
sete
cmp
jne
test
inc
fdiv
ret
les
xchg
sbb
and
cmp
test
sbb
sbb
push
test
pop
arpl
jle
push
xchg
dec
in
inc
dec
in
adc
fdivr
push
sete
jmp
mov
fbstp
jge
add
test
mov
inc
lds
je
cmp
(bad)
pop
ja
xchg
repz
int3
pop
mov
jmp
mov
push
in
cmp
ss
jbe
nop
rcr
or
inc
adc
and
aas
test
add
sub
and
ret
xchg
xchg
repnz
dec
adc
add
pushf
sub
arpl
cmp
popa
and
inc
jb
ret
and
and
inc
xlat
into
adc
xchg
scas
in
xchg
push
les
or
inc
bound
push
or
or
mov
adc
mov
mov
rol
xchg
je
mov
dec
outs
dec
or
or
in
lods
test
push
mov
fwait
ins
push
cmp
sahf
push
ins
test
push
adc
jmp
jmp
xor
or
ins
mov
fcom
test
sbb
rcr
add
pop
leave
js
mov
push
mov
mov
push
into
pusha
mov
mov
sahf
in
int3
mov
ins
cwde
or
dec
pop
and
ja
movs
(bad)
cmp
pusha
mov
loopne
es
or
jg
dec
outs
jnp
sbb
mov
mov
xor
push
sub
push
push
fst
popf
fistp
lea
xor
or
inc
in
rcl
adc
je
cld
sub
sahf
frstor
or
je
inc
mov
jle
push
xor
dec
rep
xchg
cmp
or
test
bound
std
or
idiv
mov
test
push
test
jo
mov
or
mov
loopne
jl
lea
fistp
add
lea
jl
mov
neg
mov
call
mov
push
outs
mov
pop
stos
and
out
jle
clc
out
mov
test
shl
mov
add
leave
arpl
ror
pop
shr
and
xchg
lods
and
and
add
mov
add
jl
int
scas
jmp
inc
lea
mov
sti
call
cmp
lea
cmps
xchg
jne
cmp
mov
call
lea
cld
fistp
ffree
ds
xor
int3
pop
inc
jno
push
push
push
xor
ss
xor
sub
adc
xchg
pop
lahf
lds
hlt
scas
out
mov
add
ror
push
je
stos
add
adc
add
lea
push
mov
or
or
or
andps
xchg
sub
paddq
dec
push
mov
xchg
sbb
add
fmul
aam
dec
or
or
cmp
sub
push
fild
pop
fcmovne
sub
int3
sbb
sbb
jg
cmps
enter
int3
add
inc
xlat
add
lea
(bad)
mov
add
or
lock
cwde
push
movs
cwde
mov
jmp
and
mov
lea
lea
mov
into
mov
call
leave
adc
stc
or
mov
(bad)
sub
ror
and
in
mov
inc
sbb
(bad)
mov
inc
cwde
pop
(bad)
in
je
jnp
(bad)
push
inc
call
sub
add
or
aam
or
fadd
addr16
or
and
push
and
lea
mov
(bad)
or
cmp
xchg
sub
ficom
icebp
pop
test
mov
or
dec
fcmovb
mov
and
adc
adc
std
xchg
and
arpl
rcr
hlt
push
imul
push
pop
popa
(bad)
ffreep
cmps
mov
lea
nop
mov
cmp
jne
cmp
jmp
shl
mov
cmp
jne
add
add
adc
mov
out
daa
push
mov
or
xchg
xchg
(bad)
ror
jg
adc
and
pop
jl
mov
or
sub
adc
cld
push
add
push
push
pop
cdq
sbb
lods
not
mov
dec
xchg
add
push
push
sbb
pusha
mov
je
ss
ret
or
adc
add
sub
aas
(bad)
cmp
add
mov
pop
data16
jg
and
mov
ins
adc
mov
jne
aaa
gs
or
dec
shl
mov
sub
sbb
icebp
je
repz
push
jnp
repnz
sahf
repnz
jb
mov
push
add
pusha
jno
cmps
sbb
fwait
add
cmp
mov
sar
cmp
fnsave
jmp
xchg
mov
mov
cmp
jb
cmp
loopne
jns
(bad)
jne
or
mov
hlt
pop
fwait
or
clc
jmp
cwde
mov
mov
loopne
jg
clc
push
push
inc
aam
scas
shl
add
or
fadd
and
aad
mov
inc
push
pop
je
enter
add
sbb
sub
es
fsub
neg
and
and
shl
ror
es
les
jge
pop
push
mov
or
rcr
or
pop
adc
and
test
add
stos
add
stc
push
push
loopne
aam
xchg
add
lea
dec
sbb
jl
or
imul
jns
aas
add
test
or
add
out
or
adc
or
mov
aaa
inc
pusha
aam
fisttp
test
lea
xchg
push
xor
inc
fadd
ja
xor
cmp
mov
jne
pop
add
cmps
cmp
fmul
sbb
bound
sahf
js
ret
ret
hlt
scas
imul
sti
ret
fcmovnb
xchg
ret
(bad)
(bad)
call
rcl
mov
xor
test
mov
mov
cmovne
mov
mov
cmp
mov
or
cmp
test
mov
mov
jne
add
xor
lds
cmp
jne
and
push
aam
(bad)
lods
push
push
movzx
je
ja
adc
inc
aam
inc
retf
adc
or
retf
and
inc
cmp
(bad)
(bad)
fadd
xchg
lea
xor
mov
add
mov
and
push
cld
sbb
adc
jne
jbe
(bad)
jmp
mov
ret
(bad)
aas
jnp
sar
and
sbb
and
ret
push
or
mov
jb
cmp
inc
mov
jmp
ja
fst
add
test
or
pusha
and
mov
je
fmul
inc
xchg
push
dec
jg
jae
inc
adc
add
add
mov
and
mov
sbb
shl
cmp
aam
in
enter
mov
enter
inc
xchg
sbb
dec
in
add
js
sub
(bad)
ror
xchg
sahf
nop
aad
push
fdiv
add
stc
or
pop
out
pop
mov
mov
add
mov
retf
adc
mov
nop
jl
jo
mov
dec
add
push
mov
pop
nop
cwde
add
or
mov
or
or
test
jbe
mov
xchg
into
invd
cmps
mov
or
in
cmp
iret
pop
xchg
mov
mov
mov
std
mov
or
push
add
add
mov
test
xchg
mov
sbb
cmp
cmps
mov
test
fsubr
pop
cwde
ret
inc
out
xchg
mov
mov
loopne
mov
adc
add
pop
push
inc
jge
add
jmp
mov
test
jne
mov
(bad)
jmp
dec
add
xor
push
push
fistp
sti
lea
arpl
in
lods
lea
arpl
neg
dec
or
mov
dec
lea
pop
inc
(bad)
adc
lea
push
push
das
or
int3
test
mov
sti
mov
and
mov
lea
or
or
push
ror
sub
adc
pop
xor
push
xchg
pop
lds
dec
cwde
sbb
jae
lock
inc
nop
cmp
je
cmp
nop
and
inc
dec
call
nop
mov
jb
loop
lods
adc
sub
xchg
fmul
test
mov
test
push
test
inc
mov
loop
test
sub
dec
sub
sub
or
mov
pushf
add
adc
ret
pop
std
adc
mov
pop
inc
add
sbb
pop
mov
xor
dec
add
mov
and
cmp
adc
arpl
push
xor
nop
xor
das
mov
xlat
cmp
pop
lea
out
push
adc
popa
ins
inc
clc
dec
inc
(bad)
push
nop
(bad)
add
dec
cdq
cmp
xchg
sbb
xchg
mov
adc
or
sub
sub
test
xchg
mov
aaa
mov
jp
sub
mov
inc
in
push
popa
sub
(bad)
cmp
push
adc
test
cli
adc
loope
sub
pop
dec
pop
jnp
push
shl
cmp
inc
in
and
rcr
loopne
sbb
data16
aam
pusha
and
and
outs
dec
retf
add
xor
rcl
dec
push
cmp
cs
stos
jg
pop
div
repnz
jg
jns
sahf
mov
mov
push
inc
fldz
std
hlt
push
lea
es
cmp
dec
mov
jb
sub
movs
int3
js
imul
mov
loop
jnp
mov
or
jb
dec
mov
lea
push
mov
or
add
jae
mov
pop
mov
lods
inc
pop
pusha
test
sbb
retf
call
adc
loopne
pop
inc
mov
jae
sbb
je
mov
mov
mov
adc
and
(bad)
and
and
mov
dec
(bad)
push
pop
pusha
sub
icebp
and
sbb
das
xchg
fcomip
push
jb
mov
loope
cld
nop
sub
push
xlat
add
(bad)
mov
xor
or
adc
lahf
lock
lea
jle
icebp
adc
add
push
rol
pusha
inc
(bad)
ins
jo
test
dec
cmp
or
xlat
and
arpl
ins
sub
or
add
add
jno
mov
(bad)
push
aas
mov
cmp
jae
mov
cmp
ja
hlt
in
inc
sub
mov
jp
pusha
inc
jge
pop
cld
sub
push
add
add
xor
add
pop
pop
aas
cmp
outs
ret
push
call
jg
adc
inc
or
(bad)
int3
mov
retf
pusha
add
and
sub
fmul
and
sub
(bad)
loope
aas
and
clc
push
xchg
sbb
xor
push
cmps
add
popa
sbb
aas
push
inc
stos
sbb
adc
dec
or
pop
xchg
xor
cmp
mov
adc
aad
std
cmp
jne
dec
or
arpl
mov
je
mov
adc
mov
cmps
test
imul
cdq
and
mov
nop
call
dec
add
lea
push
push
jge
scas
sti
(bad)
xchg
fdiv
cwde
lock
push
aaa
push
adc
and
neg
sub
push
icebp
add
xchg
sub
mov
ja
inc
jo
push
add
push
rcl
sbb
sbb
test
jne
sbb
sbb
pop
or
cmp
dec
in
int
push
dec
mov
mov
cmp
pop
add
push
mov
ja
cmp
jb
sub
push
mov
inc
loopne
add
imul
mov
(bad)
(bad)
clc
push
mov
mov
mov
jmp
or
mov
push
jge
dec
test
je
call
adc
retf
push
adc
aas
push
adc
xchg
clc
or
adc
push
popa
movs
dec
cmp
ins
ja
sub
popa
and
push
les
mov
sbb
jmp
add
outs
mov
sar
mov
lea
div
mov
adc
es
xor
mov
(bad)
mov
das
or
jne
push
jbe
add
xchg
or
movups
cwde
jg
mov
(bad)
sub
cmp
or
add
add
fist
adc
adc
mov
xchg
or
pop
hlt
or
repz
lea
jnp
fild
push
or
aas
lods
jae
test
cld
(bad)
inc
test
add
les
lea
add
mov
inc
xor
test
or
or
(bad)
xor
rcr
imul
xor
add
jg
add
(bad)
cmp
je
push
push
inc
or
add
out
adc
push
aas
neg
enter
cmp
sbb
push
ins
mov
outs
outs
or
ja
or
mov
lods
aas
cmps
addr16
iret
jl
in
cwde
test
inc
jae
push
ds
or
pushf
push
lea
push
push
inc
popa
mov
aas
push
add
(bad)
jne
and
and
xchg
loopne
ds
daa
jae
out
jmp
cmp
mov
je
pop
jb
sub
lock
cmp
jmp
xor
push
pop
mov
push
pushf
(bad)
enter
pop
ud2
cmp
jl
add
inc
dec
jmp
and
sbb
sbb
jo
add
and
mov
add
push
or
mov
clc
dec
and
inc
push
lea
movs
cmps
stos
xor
mov
lock
push
add
popa
sar
imul
cld
or
cld
or
(bad)
mov
inc
int3
adc
and
pop
int3
adc
mov
mov
sub
pushf
add
les
sbb
mov
xchg
add
pop
mov
push
pop
sbb
xor
pop
scas
clc
push
(bad)
cld
rol
outs
dec
mov
mov
xor
dec
adc
mov
sbb
ror
je
aam
xor
add
sar
adc
pop
adc
aas
jmp
or
hlt
pop
dec
test
fist
les
repz
ins
add
jbe
jbe
lds
popa
int3
push
or
int
mov
cmps
jge
movs
or
push
xchg
add
pop
add
rol
pop
scas
sub
es
and
add
test
pop
lock
mov
idiv
inc
hlt
pop
sar
ror
aam
or
pop
or
(bad)
aas
hlt
xor
popf
fmul
push
shl
in
sbb
fldenv
int3
push
push
jmp
outs
inc
jge
dec
mov
jbe
and
dec
je
adc
xchg
mov
mov
icebp
lea
call
xchg
pop
sub
fst
mov
das
call
je
ss
in
jbe
mov
dec
inc
shr
pushf
icebp
mov
sar
add
sub
pop
push
ja
sub
push
leave
sub
data16
mov
add
rol
cmp
mov
jp
or
pop
rcr
add
lods
push
rol
icebp
push
push
(bad)
and
xchg
ret
es
repnz
adc
sahf
rcl
pop
mov
push
mov
cmp
clc
add
and
cmp
push
sub
(bad)
ins
std
pop
das
and
dec
mov
lea
mov
add
add
sbb
dec
mov
es
jno
int3
sbb
dec
add
push
push
push
mov
call
add
pop
and
xchg
bound
lea
jae
or
je
inc
inc
add
dec
and
dec
out
fcmovnb
jl
jbe
cmp
je
ins
mov
dec
add
test
cmp
(bad)
out
sbb
dec
fistp
shl
inc
cmp
mov
fs
add
rcr
add
aas
sub
jne
or
sbb
dec
fidivr
mov
or
fiadd
cmp
sar
nop
add
inc
cmp
jae
push
(bad)
call
add
lock
mov
lods
in
stos
pop
cmp
mov
mov
retf
adc
out
out
shl
loope
dec
sub
(bad)
popa
add
stc
jge
in
gs
lahf
sub
hlt
sbb
xor
mov
movs
xor
aas
sbb
jne
and
jge
mov
or
rcr
call
add
test
add
mov
sahf
std
scas
add
dec
pop
sbb
sahf
or
and
or
jge
add
js
dec
pop
pop
mov
or
mov
mov
add
cld
adc
add
ja
add
pop
push
lea
jl
push
mov
push
ror
cmp
or
sbb
inc
mov
sbb
int3
inc
lahf
inc
mov
add
xor
add
inc
xlat
sar
inc
mov
mov
and
cmp
imul
adc
mov
ins
xor
sbb
inc
lods
inc
aaa
mov
adc
cmp
loopne
or
ja
cmp
aas
mov
cmp
test
mov
std
adc
(bad)
in
jmp
push
mov
es
fiadd
xchg
mov
ffree
and
test
lea
iret
xchg
fwait
xor
mov
adc
mov
pusha
out
cmp
repnz
sub
sbb
add
mov
cmp
aaa
inc
mov
add
xchg
mov
int
jo
or
fild
sbb
inc
fisttp
jb
and
jmp
xchg
add
and
push
xchg
retf
(bad)
std
movs
ret
jo
pop
loopne
ins
add
cld
arpl
mov
adc
push
jg
xchg
popa
xor
pop
and
inc
test
popf
test
mov
aas
test
jns
jl
or
imul
popf
cld
xor
ja
cmpxchg
adc
pavgb
push
jge
mov
push
jge
seto
retf
adc
js
loop
push
and
aad
jne
loop
mov
into
aam
pop
mov
mov
rcl
inc
sub
and
xor
adc
cmp
mov
lea
ja
mov
add
int3
sbb
std
pop
mov
push
mov
mov
test
mov
or
aaa
adc
mov
lea
retf
push
push
mov
mov
mov
call
mov
mov
inc
pusha
sbb
push
mov
mov
inc
cmc
and
xor
mov
fnstcw
pop
adc
repz
rcr
mov
mov
mov
add
add
jg
std
sub
adc
std
jmp
inc
sbb
pop
jne
xor
push
push
(bad)
fisttp
out
pop
jle
outs
gs
iret
lea
sub
add
pusha
lahf
sbb
data16
cmp
sbb
push
cmp
cmp
fsub
push
mov
add
or
fwait
mov
xchg
or
or
test
fwait
nop
and
or
push
inc
xor
cli
fist
outs
or
fsubr
or
je
add
mov
pop
adc
jge
mov
mov
dec
clc
mov
and
push
lock
jg
or
std
mov
push
push
pop
call
sbb
cmp
lea
sub
sub
push
and
fnsave
add
cwde
rcl
je
mov
jmp
mov
or
lahf
mov
mov
mov
xor
arpl
push
call
cmps
int3
jmp
or
fld
mov
lock
adc
jne
sahf
and
call
repnz
mov
and
addr16
mov
mov
out
ins
mov
fdiv
pop
and
mov
add
dec
mov
sbb
and
push
movs
mov
(bad)
add
shr
or
mov
push
js
test
mov
mov
gs
add
adc
sbb
mov
xchg
ror
dec
jbe
dec
inc
sub
and
inc
test
sbb
add
call
and
in
fild
pop
rol
or
pop
push
xchg
fcom
jmp
dec
loopne
sbb
pushf
(bad)
loope
test
add
or
inc
mov
xchg
sub
jge
mov
(bad)
nop
out
cmp
mov
enter
enter
mov
mov
clc
and
and
cdq
test
and
pusha
cmp
and
inc
js
sbb
fwait
mov
test
gs
dec
loope
push
stos
cmp
and
mov
stos
ins
icebp
or
pushf
inc
add
(bad)
mov
xor
push
xor
mov
mov
mov
mov
cmp
jbe
push
push
xor
nop
mov
add
test
arpl
add
sbb
push
push
sar
mov
call
sbb
push
(bad)
jmp
or
adc
push
push
(bad)
fist
inc
mov
sbb
call
pop
adc
add
scas
data16
inc
enter
or
je
mov
out
test
inc
add
mov
icebp
sbb
mov
je
mov
sar
movs
mov
mul
push
cmp
jbe
scas
jmp
loop
dec
inc
add
push
xchg
adc
or
add
jae
jb
icebp
shl
adc
shl
sub
pop
add
ret
inc
cs
ror
(bad)
jg
cmp
je
cmp
je
cmp
jno
hlt
or
je
sbb
sti
idiv
or
pop
ret
add
add
pop
ret
inc
mov
lds
sub
sub
mov
lea
lea
add
mov
faddp
test
or
test
xchg
add
loopne
jle
xor
add
test
lahf
sub
add
inc
adc
inc
sbb
inc
lea
add
sbb
add
push
inc
enter
jb
sbb
test
(bad)
enter
mov
xor
test
sbb
add
lea
loopne
lds
mov
ss
or
mov
push
add
call
pop
mov
stos
adc
or
add
adc
mov
stos
dec
nop
mov
mov
xor
(bad)
sub
fiadd
ins
loopne
xor
punpckhbw
out
and
pop
cmp
sub
pusha
sahf
add
cmp
cmp
aam
fs
(bad)
push
inc
add
xor
cmp
cmove
and
mov
mov
and
jne
bound
dec
icebp
push
aad
ret
dec
dec
push
push
jnp
retf
loopne
and
jp
jmp
xchg
div
and
mov
call
and
and
mov
test
sbb
test
bswap
cdq
js
inc
jl
and
popa
test
cmpxchg
add
jo
dec
test
sbb
mov
lea
jg
mov
pop
pushf
das
inc
fadd
(bad)
shl
inc
add
dec
hlt
mov
daa
das
(bad)
fwait
mov
dec
test
lea
inc
xor
cmps
push
rcl
push
rcl
jmp
leave
jmp
test
jne
dec
cmp
mov
test
pop
push
dec
and
lea
jne
sub
xchg
push
push
inc
lds
cmp
push
ins
adc
pushf
or
loopne
popa
sbb
push
inc
xchg
loopne
sbb
push
push
pop
test
xlat
sub
loope
add
mov
sbb
mov
xchg
sbb
test
dec
ret
mov
mov
(bad)
arpl
mov
and
adc
pop
cmc
ret
ret
xchg
ja
jbe
push
xchg
jmp
pushf
popa
jnp
pop
adc
jb
call
(bad)
cs
fmul
in
mov
adc
(bad)
in
add
push
inc
(bad)
loopne
sub
and
pop
les
cmp
stc
push
rol
and
repnz
or
inc
cli
xchg
popf
ror
je
lea
jmp
push
jl
and
cmps
es
push
adc
add
and
dec
mov
mov
add
jmp
sbb
pop
add
fcomip
daa
icebp
or
xor
jg
mov
ja
mov
das
mov
into
lea
adc
cli
pop
repz
test
and
jb
loop
push
in
sahf
cmp
pop
sbb
neg
pop
rcr
int3
inc
ss
add
in
fsubr
xor
dec
and
paddd
xor
test
xor
popa
sub
popf
ror
test
(bad)
or
mov
fstp
sub
adc
mov
xor
ins
and
popf
ret
aas
aad
adc
fadd
xchg
mov
cmps
add
and
xor
cmp
cmp
inc
add
mov
mov
mov
sbb
sbb
mov
inc
xchg
xor
push
cmc
sbb
add
mov
mov
xlat
adc
inc
mov
les
adc
das
or
es
adc
mov
aad
sub
(bad)
and
lock
clc
inc
mov
inc
hlt
add
pop
add
sub
jge
xchg
test
pop
std
mov
add
das
mov
add
scas
sbb
push
cli
push
or
lea
push
mov
inc
call
mov
test
dec
add
bound
out
sub
jb
enter
arpl
(bad)
loopne
cmp
dec
push
sub
out
xor
addr16
shl
push
pop
sub
and
pop
test
jb
stos
scas
push
out
les
push
ret
and
stos
push
sbb
test
(bad)
or
lea
les
icebp
xor
mov
mov
mov
inc
mov
sub
lea
adc
sbb
dec
push
sub
mov
test
and
mov
dec
inc
paddsb
shr
cdq
push
push
movs
pop
out
mov
jmp
test
push
(bad)
fistp
jecxz
or
mov
lea
push
cmp
cmp
mov
adc
mov
jmp
hlt
inc
(bad)
in
add
dec
and
or
add
popf
add
je
pop
ffree
ffree
add
add
pop
mov
sub
loope
adc
cmp
movs
mov
jne
inc
cdq
jae
fadd
mov
test
scas
xor
aad
dec
and
data16
pop
pop
jae
add
xor
mov
push
xor
popa
xor
push
jns
lock
adc
les
lea
daa
sbb
adc
jg
or
xchg
sub
call
lea
ja
mov
jmp
xchg
in
or
les
mov
add
add
bound
xchg
cmp
jb
push
jne
push
lea
sub
jmp
xchg
or
fucompp
dec
push
scas
xor
out
retf
jp
ja
push
adc
int3
or
hlt
retf
add
into
mov
or
xchg
push
lock
mov
add
xchg
pop
inc
adc
mov
xor
(bad)
sti
jno
jae
test
mov
cmp
jae
mov
lea
(bad)
ret
mov
sub
push
adc
dec
add
add
cmp
mov
mov
and
out
and
jge
dec
add
arpl
add
sub
std
addr16
je
add
cmp
xchg
movs
or
cmp
fwait
loope
js
xrelease
jg
xor
push
xor
into
and
cmp
inc
in
int
and
sub
adc
add
xor
xor
inc
xor
js
jbe
xor
mov
and
pop
xor
js
inc
in
sub
jle
(bad)
and
nop
or
mov
pop
ja
inc
push
outs
mov
test
sub
(bad)
sahf
imul
lea
and
outs
add
xchg
push
inc
(bad)
dec
jae
mov
cmp
ja
sub
xor
jmp
add
test
dec
mov
stos
sub
sbb
adc
pusha
mov
and
mov
out
fs
sub
mov
add
cmp
sbb
mov
loope
sahf
sub
dec
xor
in
sbb
icebp
jle
xor
fsub
mul
sub
and
popa
cmp
test
inc
or
cmp
dec
adc
outs
ss
and
lock
inc
add
cmp
add
add
adc
add
xor
ss
or
cmp
xor
sub
add
in
push
popa
fadd
inc
or
inc
js
jo
ss
sub
sub
jge
cmp
rol
es
and
ss
(bad)
xor
xchg
in
add
or
sbb
xor
or
int3
lock
dec
ss
js
ss
ins
adc
push
ins
in
je
dec
js
inc
pop
ss
push
cmp
(bad)
push
ret
rol
jb
(bad)
idiv
xor
addr16
sub
ss
mov
rcl
lea
mov
pushf
mov
xor
sbb
pusha
xchg
dec
xor
cmp
dec
fstp
aam
test
push
inc
xchg
and
dec
ficom
or
or
push
mov
cs
adc
lea
adc
ror
pop
push
cmp
je
sub
adc
inc
xor
sbb
or
mov
inc
push
cmp
lea
mov
cmps
and
sub
jo
cmps
mov
adc
cmp
pop
mov
js
push
cmp
add
xor
in
or
fsubr
push
mov
cmp
adc
icebp
jg
dec
pop
mov
iret
push
lea
movs
or
jo
push
repnz
icebp
(bad)
stos
jb
inc
rcl
fs
je
mov
push
add
jnp
mov
jno
cmp
jae
push
push
pusha
jp
inc
add
xor
mov
push
jae
mov
add
les
inc
xor
mov
pop
or
and
stos
or
pop
add
pop
jne
test
je
push
in
out
push
sbb
sub
adc
sub
add
mov
cmp
mul
and
dec
das
je
dec
push
aam
outs
arpl
mov
or
(bad)
mov
xchg
mov
xchg
(bad)
mov
lea
and
cmovge
jmp
les
ret
arpl
inc
cmp
add
call
and
mov
add
xchg
add
xchg
xor
mov
test
push
or
sbb
mov
jge
pop
cmp
sar
xor
or
mov
test
inc
jo
pop
mov
lea
(bad)
js
xchg
scas
add
and
hlt
jae
lahf
outs
cmp
sub
out
mov
inc
inc
xchg
(bad)
add
mov
add
addr16
icebp
jbe
mov
push
and
sbb
fild
sub
out
add
and
iret
sbb
mov
ret
add
icebp
cmp
or
or
jo
add
dec
push
inc
add
in
cmp
test
sbb
add
pop
sar
xchg
jne
mov
mov
mov
mov
dec
mov
adc
and
inc
adc
jns
shl
les
or
or
lea
and
aas
adc
pop
test
je
sub
ins
dec
and
stos
add
call
sub
jne
mov
rol
je
jmp
pop
data16
push
inc
adc
pop
pop
push
or
wbinvd
pop
or
inc
add
call
sbb
xor
or
mov
or
lods
sahf
mov
sar
push
push
push
mov
sub
push
sub
jae
push
sub
aaa
or
adc
je
dec
lea
adc
jge
adc
push
mov
sbb
mov
sub
ins
inc
add
inc
dec
or
lea
aas
dec
or
xor
mov
inc
les
or
pop
push
push
jo
or
ins
and
out
in
jecxz
xor
dec
jge
(bad)
adc
sub
lock
jns
push
adc
sub
inc
sahf
inc
adc
add
push
add
push
ror
(bad)
aas
add
inc
mov
push
push
push
lea
inc
cmp
push
or
cmp
pop
lea
jge
scas
push
rol
mov
jns
or
add
xor
add
push
lea
cmp
inc
inc
sar
pop
pop
xchg
lods
in
push
cmp
jle
xchg
push
frstor
push
or
stos
mov
pop
adc
les
push
cmp
rol
jle
cmp
nop
adc
and
mov
add
add
push
mov
lods
add
mov
fmul
inc
or
(bad)
mov
adc
and
adc
test
push
push
and
lea
mul
mov
test
sbb
test
in
lea
mov
sbb
inc
loopne
or
test
mov
sbb
mov
adc
rcl
pop
loopne
inc
loopne
test
cld
push
mov
cwde
test
jne
push
in
jo
fiadd
and
jle
ja
jge
and
jne
cmp
mov
idiv
inc
aas
jne
das
push
jne
lea
inc
pop
rcl
dec
cmp
and
add
push
cmp
inc
gs
mov
sbb
imul
js
lock
jnp
jmp
mov
sbb
mov
add
jl
je
lea
ret
leave
sbb
mov
test
jne
aas
fisub
sbb
sbb
clc
pop
dec
aas
ret
nop
cmp
add
xchg
call
add
cmovne
mov
add
fmul
shl
test
imul
mov
or
jle
cmp
mov
(bad)
or
lea
add
pop
jge
mov
call
mov
jmp
push
push
push
call
push
(bad)
push
or
std
sub
pop
nop
or
sub
retf
nop
mov
add
add
sub
dec
xor
add
aaa
add
add
out
xor
movs
lea
cmp
lea
(bad)
or
push
jmp
fwait
out
push
call
sub
or
call
cmp
xchg
je
cmp
or
inc
imul
ret
loope
add
jmp
sbb
or
lea
and
or
or
adc
dec
ret
rol
pop
inc
jmp
push
mov
add
inc
std
add
call
icebp
popa
inc
outs
movzx
jg
cmps
aas
ds
or
mov
or
push
aam
(bad)
adc
and
add
sar
popa
js
clc
jp
test
mov
mov
add
call
call
mul
mov
seto
test
test
je
add
pop
test
je
mov
gs
dec
bound
test
je
aaa
mov
into
ins
pushf
cmp
leave
xchg
sbb
hlt
out
mov
jne
dec
push
inc
call
mov
jns
(bad)
scas
dec
mov
hlt
out
les
mov
push
push
cmp
rol
push
call
add
and
ror
sti
in
push
inc
mov
add
jg
lods
add
xchg
cmovno
and
push
loope
test
xor
pop
arpl
adc
dec
pop
pop
jge
mov
mov
(bad)
xor
push
cmp
jbe
jmp
adc
shl
mov
jb
mov
xor
mov
jmp
mov
or
ror
sbb
jbe
or
ins
fild
out
xchg
pop
rol
daa
xadd
dec
mov
pop
ret
dec
push
adc
addr16
and
sbb
fistp
les
stos
mov
rcr
push
add
push
xor
je
push
rol
xor
pop
inc
jo
jno
sub
push
aad
fadd
mov
rcr
dec
in
fmul
mov
pop
sar
fadd
add
loopne
jne
cmp
xor
push
sahf
or
pushf
std
sbb
jo
arpl
lods
inc
popa
lahf
add
adc
adc
and
shl
lea
adc
(bad)
mov
sbb
jge
add
movs
pop
xchg
cmp
in
or
pop
xor
and
repnz
pop
adc
mov
mov
mov
or
fadd
dec
test
shl
pop
fs
call
rcl
repnz
add
and
push
dec
call
ret
xor
hlt
sti
adc
dec
push
adc
pop
adc
daa
test
jecxz
pop
add
push
push
push
xchg
mov
fwait
mov
hlt
retf
adc
and
push
push
mov
cmp
adc
add
fsub
xor
inc
cld
sub
mov
push
jg
xor
pop
adc
inc
loopne
inc
add
pusha
inc
sbb
add
inc
or
mov
fdivr
retf
test
sbb
loope
adc
retf
test
je
jg
jnp
xchg
xor
ins
pop
xchg
add
push
sbb
pcmpeqb
mov
pop
mov
stos
add
mov
pop
inc
(bad)
sti
or
pop
mov
sub
dec
jle
push
inc
or
inc
dec
fst
add
lods
ss
and
enter
mov
cmps
out
xchg
add
pushf
xor
or
mov
sbb
(bad)
ja
cmp
je
adc
mov
les
int3
push
inc
mov
icebp
les
mov
xor
push
xorps
mov
mov
repz
ror
scas
sar
mov
mov
inc
je
and
rol
mov
push
(bad)
push
cli
sbb
mov
push
sub
mov
add
in
fisttp
pop
xchg
jo
in
jne
and
dec
mov
xor
push
movs
in
inc
mov
clc
push
lea
inc
mov
aam
mov
xor
pop
pop
cmp
movs
or
pop
sub
mov
sub
pop
(bad)
sbb
push
push
push
lea
or
sbb
mov
dec
lock
add
inc
cwde
cs
cmp
je
out
inc
fbld
dec
sbb
pusha
dec
push
lea
push
xor
pushf
mov
add
sub
adc
or
push
and
add
push
aad
dec
or
(bad)
dec
sahf
jmp
add
rol
jl
les
xor
sub
and
rcr
jmp
mov
push
(bad)
mov
or
push
lock
cmp
push
into
push
loope
dec
mov
mov
test
(bad)
ror
ja
mov
xchg
pusha
jg
sbb
cmp
inc
mov
clc
mov
test
dec
sub
mov
inc
pushf
push
cmp
out
mov
add
lea
adc
retf
clc
mov
sub
hlt
cmp
je
(bad)
or
jne
ror
adc
mov
inc
les
(bad)
mov
inc
dec
stos
cmp
mov
push
das
xchg
ret
icebp
data16
mov
loope
test
adc
or
out
cmps
add
mov
stos
fsub
jp
jnp
adc
pop
jle
jnp
add
push
pop
rcr
(bad)
xor
movhps
ja
sbb
push
lock
mov
bound
jae
stos
push
xchg
mov
xchg
loopne
and
stos
dec
mov
sbb
fisttp
adc
iret
loop
jb
pop
pop
mov
cli
jle
adc
mov
clc
mov
add
add
and
adc
push
or
mov
jle
in
movs
mov
rcl
gs
push
adc
lds
ins
xchg
adc
ret
pop
ret
inc
aas
add
(bad)
push
jne
call
or
pusha
test
aad
aas
dec
xlat
sub
dec
add
xor
jg
xor
push
mov
push
mov
adc
add
sbb
cmp
mov
jmp
mov
or
jmp
pop
pop
sbb
adc
mov
jecxz
mov
or
cmp
mov
lahf
leave
push
mov
push
mov
lea
(bad)
mov
mov
add
cld
jnp
jmp
mov
je
mov
jmp
add
mov
or
retf
repz
ret
and
mov
mov
mov
cmp
js
aaa
adc
(bad)
jmp
cmp
jne
mov
jmp
xor
cmp
sbb
inc
into
dec
pop
mov
and
mov
and
push
je
mov
ds
mov
inc
push
sub
mov
mov
sar
inc
or
or
shr
into
xchg
cmc
xor
or
pop
mov
push
test
pop
cmp
jne
sbb
jno
xchg
fsubr
push
retf
add
dec
out
outs
push
push
rol
cdq
add
or
dec
or
push
clc
mov
mov
mov
(bad)
scas
test
push
cld
mov
cmp
mov
mov
cmp
je
enter
jg
es
outs
pop
mov
cmp
jne
mov
mov
jne
mov
mov
push
mov
add
mov
in
dec
or
jne
mov
std
pusha
dec
or
je
or
mov
push
(bad)
cmp
push
inc
add
and
push
mov
mov
fsubrp
mov
push
mov
mov
and
mov
mov
jmp
jns
cmp
add
push
js
ins
out
fisttp
sbb
mov
mov
(bad)
push
push
xor
test
cwde
sbb
jmp
and
jno
int
rol
push
nop
add
hlt
(bad)
cwde
cld
cmp
and
push
inc
movs
inc
inc
sub
xchg
inc
call
push
pop
mov
sbb
fbstp
and
mov
mov
clc
mov
sub
add
and
mov
out
leave
or
push
dec
sbb
aad
jge
adc
iret
and
add
push
lea
pop
test
je
pusha
inc
out
and
mov
(bad)
jbe
inc
mov
in
add
push
mov
lea
pop
mov
and
lea
adc
add
push
sub
pop
mov
jle
inc
cdq
mov
ins
add
add
mov
dec
sar
enter
pop
pop
ret
mov
add
and
outs
sub
dec
xchg
mov
es
dec
pop
mov
sbb
test
js
popa
adc
cmp
jbe
cmp
push
mov
loope
arpl
add
dec
lods
mov
push
into
push
xchg
adc
es
inc
(bad)
out
mov
dec
in
mov
or
jg
pop
mov
test
dec
lods
push
push
push
out
dec
retf
add
mov
jge
lea
push
jb
dec
add
inc
add
add
test
(bad)
je
inc
sub
xor
jl
add
and
retf
add
and
loopne
inc
inc
out
jle
js
add
sub
cs
lea
les
push
xchg
into
adc
xchg
fwait
pop
(bad)
mov
sbb
push
mov
(bad)
aas
adc
mov
mov
jmp
add
add
adc
cmp
sbb
add
add
or
adc
mov
es
add
add
adc
adc
add
inc
adc
mov
loop
stos
cli
xor
les
add
push
cli
sub
outs
loopne
cli
sbb
cmp
xor
inc
jmp
mov
arpl
pop
dec
push
xchg
mov
das
stc
clc
jp
(bad)
je
and
mov
cmp
ja
fld
or
cwde
dec
xchg
test
xor
call
xchg
(bad)
jmp
add
and
inc
test
jo
jb
mov
inc
mov
out
cwde
(bad)
mov
sbb
in
pusha
push
hlt
inc
leave
mov
inc
dec
add
inc
sbb
or
inc
test
bound
call
jno
mov
(bad)
(bad)
xchg
sub
imul
mov
sar
mov
shr
add
mov
shr
sub
cmp
test
push
xor
cmp
cmovb
mov
cmp
icebp
movaps
push
sahf
pop
add
pop
mov
lock
sti
daa
cmp
add
adc
dec
test
mov
(bad)
jmp
inc
jle
jne
lea
push
push
push
push
aas
sti
daa
sub
mov
cwde
or
(bad)
cld
imul
mov
add
retf
pop
mov
push
push
sbb
xor
mov
xor
cmp
add
sbb
add
mov
lea
test
sbb
add
ror
inc
add
mov
cs
in
stc
ja
test
imul
add
mov
adc
into
jae
sub
and
jmp
dec
std
ret
mov
sbb
add
les
in
dec
or
mov
ss
(bad)
add
jg
in
mov
sub
cmp
pop
inc
dec
xchg
ja
fld
clc
gs
add
pusha
xor
adc
jg
in
mov
lea
iret
mov
push
lea
mov
mov
in
push
push
push
(bad)
mov
mov
dec
pop
call
cmp
test
inc
and
hlt
in
or
or
fild
sbb
xor
inc
xor
inc
add
inc
inc
mov
mov
sub
pop
dec
dec
dec
inc
sub
jp
repz
cmp
retf
push
push
imul
pop
jb
inc
xor
xor
xchg
push
imul
and
jg
push
inc
add
add
or
push
mov
add
scas
or
inc
clc
mov
jbe
in
inc
cmp
or
iret
add
das
adc
push
lea
and
push
push
lods
or
aad
dec
mov
icebp
outs
pop
test
jne
adc
outs
pop
call
mov
cld
jne
call
mov
cli
pop
push
std
mov
pop
ret
lahf
and
push
sbb
inc
scas
or
dec
mov
mov
dec
or
in
cmp
loopne
inc
push
stc
push
lea
clc
aas
mov
dec
nop
cmp
jne
mov
lods
dec
mov
int
add
pop
mov
ds
pop
pusha
rcr
loopne
cmp
clc
push
stos
sbb
jle
(bad)
mov
dec
inc
inc
test
sbb
lods
test
add
sbb
push
enter
push
lds
dec
add
rol
xor
mov
jne
into
aaa
add
add
add
loopne
ja
dec
lea
jo
xor
pop
das
mov
and
inc
les
cmp
(bad)
mov
jne
test
lea
scas
and
in
jne
jmp
sub
and
or
xchg
xor
jbe
inc
mul
adc
add
jo
or
mov
add
out
sub
push
ss
push
push
test
cld
test
and
xchg
or
xchg
lea
sub
out
jmp
mov
inc
sbb
gs
xor
cmp
(bad)
arpl
push
lds
mov
push
inc
mov
mov
repz
cmp
shl
mov
add
or
add
jmp
inc
cmc
add
dec
or
arpl
retf
stos
mov
cld
(bad)
pop
inc
fcomip
xchg
jle
ins
mov
ds
je
inc
iret
(bad)
dec
push
sbb
mov
add
push
push
push
push
push
push
jmp
mov
xor
adc
call
sbb
and
in
adc
rol
and
add
loop
repz
(bad)
call
push
push
push
mov
mov
xchg
imul
icebp
popa
lock
pop
je
fadd
adc
test
(bad)
je
mov
call
cdq
mov
mov
in
sahf
sub
xchg
or
mov
rcl
xchg
lock
or
sub
add
adc
ror
bound
mov
data16
shr
cmp
cmp
lea
jl
sbb
jmp
sbb
jmp
push
jp
dec
not
dec
cmc
xchg
or
in
xor
inc
cmp
and
mov
sub
add
jge
dec
jle
jge
lods
int3
jmp
arpl
push
loope
dec
cmp
lea
out
jae
adc
mov
or
call
jne
not
lods
xchg
retf
sahf
cmp
cmp
jne
mov
mov
hlt
mov
xchg
sbb
pop
adc
inc
push
mov
mov
aad
test
nop
jae
mov
mov
or
sub
sahf
sub
jl
(bad)
or
clc
arpl
fs
push
idiv
stos
daa
or
pop
(bad)
fild
add
test
jle
push
mov
push
add
fs
jne
call
inc
sar
push
adc
lea
adc
loop
adc
mov
pop
bound
cli
mov
push
adc
pop
test
pushf
jmp
xor
or
ror
pop
sbb
and
fsub
sbb
mov
out
mov
(bad)
push
or
cmps
dec
push
rcl
retf
mov
sub
mov
pop
mov
inc
mov
mov
lea
mov
and
xor
mov
js
inc
adc
mov
mov
push
popa
jl
fwait
ror
test
dec
mov
sub
jmp
cli
adc
dec
mov
dec
movs
ss
and
dec
in
adc
or
in
cmp
xchg
push
xchg
aas
mov
les
pop
fld
or
call
inc
inc
loope
in
add
pop
jne
add
call
lea
mov
mov
add
inc
cwde
out
clc
jg
xchg
lea
mov
mov
pop
je
popa
or
scas
push
pop
jg
lods
mov
rcl
jne
call
cmp
mov
and
jne
lea
lahf
arpl
mov
push
(bad)
fild
mov
cmp
add
pop
add
mov
jmp
mov
or
cmp
jne
data16
jge
and
or
lock
jb
out
or
xchg
adc
adc
in
in
mov
popa
or
push
cld
or
push
add
push
in
sub
sub
add
popa
test
adc
jne
sahf
push
push
fdiv
or
out
or
mov
(bad)
sbb
dec
add
arpl
fs
pop
pop
enter
fmul
in
cdq
push
bound
mov
push
sbb
lds
mov
mov
outs
lea
adc
or
les
iret
dec
lea
iret
cmp
fs
lahf
sbb
jb
mov
outs
inc
adc
lea
xchg
mov
jmp
(bad)
out
shl
in
pop
adc
clc
push
xorps
push
adc
icebp
add
adc
test
je
icebp
(bad)
push
add
mov
add
adc
test
ja
jb
cmp
ja
push
push
hlt
dec
mov
push
or
hlt
ins
mov
cdq
cmp
jne
cmp
jne
test
into
(bad)
cmp
lods
or
test
jp
(bad)
mov
push
add
rcl
mov
xor
sub
cmp
cmova
add
retf
adc
mov
call
push
sbb
or
cmp
jp
adc
in
mov
pop
add
push
cmc
ja
mov
pop
pop
mov
(bad)
mov
ret
pop
ret
sub
fsub
inc
(bad)
or
mov
push
push
ss
lds
(bad)
pop
loope
adc
adc
or
or
jne
adc
inc
add
pop
pusha
adc
int3
fistp
arpl
(bad)
pop
scas
scas
test
add
mov
sub
shr
mov
mov
push
mov
push
enter
mov
jl
loope
sub
jge
lea
hlt
popf
jae
aaa
sub
iret
cmovae
add
or
dec
je
push
push
push
push
lea
or
int3
cmp
sar
push
sub
loopne
inc
mov
xchg
adc
mov
pop
adc
call
int3
iret
mov
push
adc
lods
loope
inc
ret
mov
retf
pop
fsubr
sub
or
imul
test
add
test
add
jne
mov
jnp
sub
jmp
rol
lea
test
xchg
sub
out
call
cmp
dec
add
(bad)
pop
push
jmp
cmp
outs
ins
push
xchg
std
(bad)
int3
adc
push
pushf
push
jge
les
in
push
xor
popa
mov
and
mov
sbb
cmp
rcr
pop
cmp
mov
jmp
pop
jg
cmp
call
push
xor
nop
or
cmps
jp
cdq
add
popa
jbe
addr16
push
jmp
cmp
daa
pop
add
jb
push
out
outs
adc
fsub
adc
neg
outs
les
push
jne
or
add
add
sbb
mov
lea
add
mov
dec
in
iret
jae
or
jno
jmp
lods
je
cmp
jne
push
add
add
in
aas
jmp
xor
mov
push
push
push
mov
mov
mov
mov
aas
cmc
mov
jne
push
stos
enter
bound
int3
add
and
loop
test
xchg
sub
movs
dec
xchg
bound
lahf
mov
ret
add
inc
dec
jo
lods
test
push
out
xor
inc
add
arpl
in
push
push
bound
sbb
cmp
jbe
ja
ins
out
enter
jns
push
js
adc
cmp
std
xchg
or
jne
or
sbb
cmp
stos
xor
shl
loope
add
mov
xchg
pusha
lea
(bad)
mov
add
add
inc
adc
lahf
call
mov
inc
or
inc
add
rol
inc
(bad)
xchg
push
mov
lea
mov
adc
jle
je
pop
add
mov
loop
push
mov
dec
loopne
lea
sub
add
(bad)
outs
push
push
pop
out
or
add
pusha
push
lea
cmp
aas
adc
adc
mov
push
jo
aad
test
mov
sub
loop
jl
push
stos
lahf
jnp
(bad)
mov
and
out
movs
nop
xor
add
sub
rol
and
aam
push
xor
mov
push
push
push
lahf
fld
sbb
call
je
or
inc
sbb
or
add
popa
jle
cmp
jne
push
push
hlt
jo
cmc
lea
xor
sub
add
outs
or
adc
sbb
xchg
inc
daa
add
jno
inc
popf
ss
lods
ja
adc
push
call
push
jne
push
push
cmps
pop
or
xor
mov
(bad)
jle
pop
movs
cdq
or
add
cmps
pop
xor
and
inc
mov
or
pop
cmp
cli
mov
add
or
push
add
mov
test
add
adc
adc
fs
shl
inc
jbe
loopne
sub
int3
dec
inc
cmp
xor
jmp
int3
cmp
dec
add
jnp
add
outs
daa
pop
mov
jg
jae
clc
pop
ret
xor
xchg
sub
push
xchg
jbe
sub
pop
pop
push
xchg
xor
adc
pop
in
loopne
xchg
and
xchg
pusha
lds
push
test
jmp
sbb
or
and
inc
dec
adc
push
hlt
dec
inc
add
inc
imul
clc
or
test
bound
es
test
xor
leave
push
dec
xor
(bad)
fiadd
pop
xor
int
hlt
push
and
out
mov
or
add
sbb
je
(bad)
lea
and
cld
jp
std
jne
pushf
test
xchg
hlt
add
sbb
push
sbb
mov
out
xor
mov
out
lea
push
push
xchg
xchg
test
push
push
int3
cmp
add
inc
cmp
lods
js
mov
and
js
inc
or
loopne
adc
mov
out
retf
or
out
sar
int3
adc
nop
push
push
mov
add
mov
adc
inc
add
push
(bad)
fisttp
and
inc
fcmovne
stos
pop
lods
add
cld
pop
or
sbb
add
mov
xor
add
add
pop
xchg
jmp
mov
push
mov
xor
js
inc
cld
push
cmc
std
fwait
mov
add
(bad)
fistp
cmc
cld
mov
xor
sub
sar
cmp
mov
sbb
and
je
cmp
je
loopne
inc
int3
fimul
cli
int3
dec
jge
add
add
outs
fdiv
fcomp
cmps
jnp
sbb
xchg
or
fidiv
mov
push
add
pushf
test
jne
cwde
pop
pushf
pop
neg
es
fs
add
imul
lea
add
je
and
cvtpi2ps
and
push
rcl
xor
retf
mov
push
jg
xchg
dec
in
in
dec
push
(bad)
dec
xor
fmul
sbb
lea
and
push
jge
aaa
neg
cmp
je
and
ins
ficom
push
push
dec
fsub
adc
mov
imul
xor
xor
shl
sub
inc
inc
mov
xor
or
js
iret
dec
data16
call
mov
aam
int3
cmovae
fadd
cwde
dec
and
inc
sbb
setno
inc
pop
jne
xor
jmp
mov
inc
ret
int
imul
sar
sbb
jmp
mov
lea
out
or
lock
leave
jne
sub
sar
lea
stos
xlat
(bad)
(bad)
dec
add
jl
push
mov
cli
or
sbb
or
push
mov
psubq
mov
test
fist
mov
or
adc
mov
or
in
aas
push
out
pushf
push
lock
cmp
je
or
out
out
pusha
js
mov
je
loope
and
and
jbe
addr16
sar
or
push
(bad)
rcr
imul
inc
jl
je
cmc
or
add
sub
dec
mov
add
movdqu
ffreep
xlat
inc
movq
scas
mov
adc
inc
les
inc
and
inc
ror
jmp
mov
cwde
mov
cmp
cmps
pop
mov
test
cmp
mul
nop
push
add
xchg
fnstcw
sbb
lea
jmp
jbe
mov
std
xchg
loope
pop
cdq
mov
mov
pop
jl
push
mov
mov
cmp
je
mov
js
div
push
push
rol
int
in
imul
inc
ss
imul
not
scas
mov
add
fnstenv
push
cmp
jne
test
jg
mov
outs
ret
test
mov
es
out
xchg
push
lea
push
mov
add
out
push
or
and
js
mov
jg
cld
push
cmp
xor
adc
lea
add
scas
add
inc
pop
test
cmp
add
fild
cmps
dec
jo
aas
inc
je
or
cmp
test
mov
aaa
cmp
fstp
push
adc
jl
int3
xor
jne
rol
call
in
jnp
les
mov
cmp
ds
mov
jne
adc
(bad)
and
into
pop
push
enter
or
adc
daa
js
call
cmp
pop
loope
enter
sub
dec
add
ret
add
mov
test
je
and
jmp
dec
inc
inc
and
inc
or
ficomp
call
mov
stos
repz
aas
or
loopne
add
jg
mov
inc
or
inc
add
test
add
rdtsc
push
push
pusha
or
lea
xchg
in
pop
xchg
test
fs
fld
mov
leave
cs
jge
mov
mov
mov
mov
aad
clc
je
mov
sbb
arpl
cld
add
or
lock
dec
xor
jo
inc
push
leave
rol
ss
cmp
lds
jae
loop
clc
sbb
jae
push
out
or
int3
outs
dec
mov
ja
mov
int
push
add
es
repz
aas
cmp
je
and
add
adc
add
push
xchg
adc
jp
sbb
push
lds
add
cmps
loop
(bad)
sbb
push
sbb
mov
xchg
sub
je
jmp
data16
inc
or
push
push
enter
fist
inc
push
push
add
add
adc
pop
cmovae
mov
sar
sbb
xor
and
jne
dec
bound
mov
push
loopne
mov
adc
mov
jmp
mov
mov
(bad)
cmps
test
daa
jnp
test
or
adc
popa
or
mov
push
je
xchg
addr16
xchg
sti
cs
inc
sbb
push
fistp
sub
mov
pusha
mov
add
push
ds
jbe
add
in
or
xor
retf
push
jnp
icebp
jg
inc
in
das
(bad)
adc
cmp
add
fsubr
test
cdq
xor
mov
add
add
push
rol
push
ret
in
mov
xor
inc
sub
fadd
test
push
rcr
mov
icebp
fimul
push
out
add
lods
add
je
in
int
ret
(bad)
push
or
and
mov
fbstp
add
push
adc
mov
mov
jno
push
sti
pushf
add
or
cmp
mov
mov
pop
lock
mov
dec
cmp
inc
or
add
sub
sbb
adc
mov
mov
cmc
jne
mov
pop
fidiv
dec
push
and
sbb
sub
xchg
and
out
(bad)
jg
lea
lea
mov
mov
mov
add
mov
jmp
mov
mov
out
fwait
xor
fcomp
(bad)
mov
ror
add
cwde
or
mov
cwde
aam
mov
xor
mov
xor
mov
dec
test
xor
cwde
scas
shr
fstp
ds
mov
lods
mov
jmp
js
or
sbb
js
or
mov
or
stos
call
adc
mov
je
fisttp
mov
fwait
mov
cmp
je
dec
dec
jb
push
mov
inc
fstp
inc
add
add
leave
(bad)
mov
mov
pop
clc
jne
dec
push
and
test
or
pushf
add
clc
scas
xchg
dec
cld
xor
pop
je
rol
adc
add
lods
test
retf
(bad)
mov
push
push
mov
cmp
and
cmp
pop
mov
inc
icebp
xchg
mov
cmp
jae
in
jle
mov
dec
adc
mov
and
pop
mov
clc
cmp
je
lea
mov
push
push
push
adc
jnp
inc
(bad)
stos
mov
mov
adc
lahf
mov
jb
adc
xchg
or
inc
retf
add
into
cmp
ja
cvtps2pi
adc
adc
test
mov
sub
or
cmps
mov
push
add
ds
or
inc
adc
ins
cmp
or
add
push
inc
xchg
clc
push
add
mov
cmp
shl
cmp
cld
push
xlat
jne
scas
xchg
sahf
push
or
dec
push
shl
inc
mov
ficom
pop
pusha
mov
nop
arpl
lods
add
lock
int3
int3
mov
adc
sbb
pop
cmps
dec
stos
mov
call
mov
sub
inc
dec
icebp
mov
add
add
dec
inc
frstor
inc
rol
dec
mov
or
add
inc
add
dec
cmp
inc
js
pop
inc
je
cmp
je
not
in
(bad)
fld
rcl
call
add
push
push
mov
xadd
sahf
and
add
adc
pusha
sub
jmp
ret
push
push
push
add
push
mov
(bad)
fmul
clc
cmp
je
cmp
mov
pop
pop
test
je
mov
mov
ret
ss
sub
sub
cmps
mov
dec
outs
sub
in
mov
push
pop
ret
pop
ja
cmp
adc
loope
pop
and
adc
add
adc
adc
mov
or
pop
or
int3
lods
scas
push
xor
xchg
cmp
sti
mov
add
retf
adc
fmul
mov
sub
das
ds
ret
mov
or
popa
js
push
mov
jecxz
add
inc
mov
push
sbb
or
sar
ret
shl
sub
pop
mov
scas
jle
call
rcr
cmc
xchg
shl
pusha
pop
mov
lea
mov
jne
rcl
adc
lock
dec
and
jns
jmp
mov
or
jmp
jo
cmp
cli
lods
(bad)
pop
add
adc
scas
add
dec
hlt
cdq
sub
(bad)
dec
clc
mov
test
je
inc
mov
inc
lea
cmp
fnsave
pop
mov
retf
xor
push
sub
mov
call
cwde
int3
pusha
sub
inc
xchg
xor
daa
xor
adc
out
hlt
sbb
or
das
mov
lods
sbb
call
dec
or
rcl
push
movzx
movzx
xchg
test
(bad)
(bad)
(bad)
je
mov
add
add
push
mov
mov
cmp
jb
mov
add
cmp
jb
arpl
mov
shr
shl
push
add
lea
add
lock
pop
popa
(bad)
push
shl
(bad)
call
inc
or
mov
push
add
lea
mov
(bad)
jg
jg
shl
cmp
je
jmp
cmp
jne
cmp
jne
mov
ja
dec
test
jns
and
xchg
cmp
add
jg
lea
jmp
imul
out
(bad)
(bad)
pusha
xor
test
jne
pop
xor
pop
pop
ret
pop
test
inc
add
mov
sub
popf
and
inc
and
or
sbb
mov
push
loope
jge
sbb
cmp
add
push
mov
jecxz
mov
out
sbb
push
je
mov
mov
jmp
push
mov
cld
jb
xchg
add
rcl
or
pop
xor
pusha
call
inc
adc
call
and
jo
inc
loopne
call
or
mov
adc
push
adc
ds
and
add
ds
mov
mov
cwde
lock
cld
mov
mov
cmovne
clc
inc
xor
cmp
ret
jmp
mov
xor
mov
or
mov
jne
jae
and
loope
and
jge
jo
mov
shl
or
jb
add
dec
xchg
add
add
pop
std
cmp
jne
add
cmp
scas
and
xor
adc
inc
sbb
test
clc
sbb
mov
mov
lea
sub
mov
loope
aaa
adc
xchg
je
push
adc
ja
mov
mov
dec
mov
sub
cwde
add
dec
push
sbb
cld
sub
mov
and
mov
rcr
imul
lahf
sti
and
mov
xchg
cmp
cwde
push
push
xor
scas
mov
jne
test
xor
jle
inc
jb
add
push
jmp
dec
or
enter
xchg
dec
sbb
scas
adc
stos
adc
add
mov
and
push
bound
cs
mov
mul
mov
cmc
(bad)
(bad)
add
mov
add
cmovne
or
cdq
jae
jb
cmps
push
or
mov
into
jne
mov
jnp
jecxz
fs
in
mov
add
xor
call
fs
ins
and
jmp
pop
and
enter
pop
or
data16
mov
fwait
mov
or
xor
jne
clc
cmp
popa
and
mov
fnsave
pop
push
dec
or
ins
mov
cbw
push
repnz
mov
daa
xchg
loope
adc
sbb
dec
mov
std
lea
lea
jae
or
push
retf
jmp
mov
add
and
gs
mov
pop
dec
xor
add
sub
push
push
sbb
sbb
test
jnp
xor
nop
(bad)
cmp
xor
sbb
shl
add
pop
or
mov
xor
add
mov
inc
and
cmp
jae
std
(bad)
inc
mov
inc
mov
mov
cmp
je
inc
cmp
(bad)
jg
call
cmp
jne
inc
xor
mov
inc
jmp
test
je
mov
cmp
jb
pop
fild
pause
inc
rcr
sbb
mov
cmp
mov
dec
cmp
xor
or
dec
fimul
or
lods
gs
iret
out
rcl
fsubr
mov
inc
add
push
nop
and
adc
add
push
rcr
adc
fdiv
call
rol
gs
pusha
sub
pusha
add
mov
or
nop
and
adc
inc
adc
out
cdq
pop
popa
add
inc
nop
dec
or
repnz
mov
or
push
push
les
mov
add
adc
sbb
or
mov
mov
or
or
into
push
cmc
mov
nop
add
call
lock
mov
out
mov
into
mov
mov
mov
mov
mov
cmp
scas
mov
outs
add
sub
adc
cli
push
sub
mov
mov
mov
outs
mov
mov
mov
aam
inc
inc
mov
mov
dec
mov
mov
clc
mov
mov
mov
dec
outs
inc
cmp
movq
or
(bad)
ja
jg
jl
push
mov
mov
retf
pusha
adc
and
inc
add
pop
mov
xlat
and
clc
add
add
add
lods
jge
es
inc
or
mov
dec
pop
mov
xlat
sub
jno
and
fwait
dec
mov
sbb
or
jmp
pusha
push
jo
aas
adc
leave
add
jp
add
mov
mov
cmp
pop
mov
dec
jne
into
add
inc
push
sub
sbb
pushf
enter
mov
adc
(bad)
mov
xorps
add
shl
loopne
or
test
cmps
scas
cli
or
push
clc
lea
mov
mov
mov
fdivr
cmp
je
test
adc
mov
xor
push
adc
and
bound
inc
or
push
and
std
or
mov
jne
cmp
ins
loop
je
popf
dec
in
ret
cmp
push
aad
add
cmp
inc
clc
add
sbb
or
adc
or
cmp
jb
sub
jmp
push
sub
or
loopne
adc
fst
and
neg
adc
pushf
xor
ret
lock
push
or
adc
std
mov
clc
adc
push
pop
hlt
push
cwde
adc
outs
pushf
add
jecxz
sbb
lods
mov
in
or
cwde
pop
pop
sub
xor
pop
cpuid
adc
and
dec
sbb
push
dec
xor
cmp
adc
inc
jg
add
clc
xchg
pop
inc
ret
mov
and
pop
fstp
mov
test
je
cmp
push
dec
lea
sub
jbe
rcr
xor
sub
cmp
mov
cld
mov
sbb
adc
mov
mov
adc
add
push
add
(bad)
fs
push
shl
sub
cmp
mov
ja
sub
ja
mov
or
mov
into
popf
add
cmp
out
cmp
jnp
jne
cmp
mov
imul
sbb
outs
inc
jl
bound
push
(bad)
mov
mov
mul
(bad)
call
lock
movs
dec
push
or
in
movs
loopne
cli
jg
cmp
jne
mov
cmp
mov
jg
add
mov
adc
fld
fldenv
and
jle
or
(bad)
(bad)
mov
add
inc
in
imul
add
inc
lock
int
adc
inc
hlt
mov
add
mov
dec
ret
add
pop
add
add
(bad)
xchg
xor
cmp
or
mov
nop
dec
cmps
add
cmps
inc
add
add
rcr
mov
je
pop
jl
add
or
enter
ret
les
or
addr16
mov
jb
mov
mov
jne
stos
dec
adc
inc
add
push
push
jg
lahf
daa
pusha
mov
test
cmp
sbb
fcmovnb
inc
test
push
push
leave
mov
clc
mov
cmc
pop
mov
xlat
cmp
push
push
pop
inc
std
adc
call
movs
jb
in
pusha
ss
xor
mov
mov
or
add
inc
or
adc
add
mov
push
push
(bad)
shr
jmp
mov
add
or
push
push
push
pop
pusha
mov
sbb
je
and
mov
push
jmp
push
or
ins
test
sbb
mov
(bad)
sub
fidiv
mov
mov
lea
sbb
ja
sbb
mov
lea
mov
inc
jnp
push
rcl
mov
rep
adc
rep
loope
push
in
std
divps
shl
std
sub
or
mov
aam
loopne
fisttp
pusha
mov
sbb
arpl
arpl
test
je
push
or
or
adc
pop
imul
sub
inc
add
cmp
mov
push
rol
adc
jns
les
sar
push
push
push
mov
and
test
mov
aam
pusha
out
and
mov
and
xor
inc
aam
or
mov
mov
out
call
cmp
movzx
cmovne
push
mov
ss
cmp
and
and
push
imul
inc
(bad)
aas
sub
cmp
clc
mov
add
xor
jno
push
mov
mov
nop
mov
cmp
cmps
mov
jg
jmp
mov
lea
mov
inc
test
adc
test
mov
cmp
aas
xor
add
ret
ret
lahf
push
sub
jb
mov
cmp
dec
cmc
jne
add
call
clc
cld
je
ficom
dec
daa
cmp
dec
add
dec
sub
adc
fwait
dec
cmp
clc
adc
push
adc
inc
add
inc
add
inc
xor
(bad)
and
fidiv
xor
cmp
es
pop
ja
adc
inc
pop
or
(bad)
mov
clc
bound
(bad)
mov
mov
cmp
jae
mov
mov
pop
inc
aaa
adc
adc
xor
inc
or
xchg
imul
fld
ja
mov
or
cmp
pop
add
mov
test
js
shl
mov
ja
mov
push
mov
cs
sbb
arpl
xchg
int
or
push
(bad)
cmp
add
adc
pushf
sub
sub
lea
outs
inc
adc
or
call
dec
adc
cld
or
shl
loopne
mov
inc
lock
out
fld
lea
mov
test
pop
(bad)
mov
cld
test
fmul
cld
jecxz
ja
mov
mov
fist
jmp
(bad)
rcr
jg
retf
mov
or
fstp
hlt
aaa
lods
add
cmp
xchg
stos
push
add
cwde
add
push
or
dec
int3
je
and
mov
mov
or
les
jge
ret
push
shr
adc
inc
aaa
fwait
sbb
mov
push
mov
xchg
inc
jno
sbb
jnp
xor
ror
movs
test
ins
(bad)
adc
add
mov
inc
or
int3
int3
jae
add
fistp
xchg
mov
shr
inc
and
aaa
xor
push
jo
and
mov
adc
jbe
jmp
or
inc
push
mov
adc
mov
jp
stos
movq
xchg
pop
mov
pop
adc
push
sbb
call
dec
pusha
scas
xchg
pop
push
das
scas
sub
int
or
lods
adc
mov
sub
add
sbb
addr16
pop
ins
imul
jo
xor
xchg
in
adc
lea
push
pop
(bad)
scas
dec
popf
aam
shr
sbb
push
rcr
dec
or
push
sub
aas
or
mov
mov
xchg
(bad)
ins
and
mov
xchg
sahf
jg
loope
inc
mov
popf
shl
sbb
add
pop
inc
lods
sub
mov
ins
sahf
or
fsubr
mov
inc
sahf
sbb
jno
and
sub
cs
or
jecxz
sub
push
daa
nop
(bad)
inc
loopne
add
and
pop
push
(bad)
cmp
outs
shl
or
cmp
outs
enter
out
fs
das
stos
and
push
call
or
js
adc
lock
outs
adc
pop
cmc
inc
ret
outs
mov
pop
pop
int3
rol
sahf
je
repnz
xchg
aas
clc
mov
adc
lock
inc
test
pop
fadd
pop
adc
cmp
rcr
popa
sbb
enter
sbb
sbb
ret
imul
outs
fistp
sbb
iret
test
out
mov
inc
(bad)
adc
add
adc
aam
ror
sub
push
(bad)
sbb
dec
lea
sub
mov
mov
mov
push
jl
adc
test
gs
dec
dec
pusha
cmc
add
stos
(bad)
mov
add
or
xor
mov
les
inc
loope
neg
add
xchg
fild
cld
and
scas
sbb
lahf
push
stos
lds
fs
sbb
sbb
call
clc
jne
loopne
push
shl
pop
jl
jne
or
push
or
pavgb
pop
bound
push
mov
bound
mov
sub
and
inc
inc
cmp
je
jb
mov
in
pop
xor
and
xchg
rcr
aas
fs
push
popa
and
or
aam
sbb
cmp
or
cmps
xor
jmp
lea
retf
shr
pavgb
add
add
mov
loop
xchg
call
fld
sar
ret
jne
or
scas
sub
cwde
jmp
cmp
dec
std
adc
jne
mov
jb
cmp
sbb
pop
mov
in
popa
fsub
and
pop
loope
push
add
inc
mov
push
mov
xlat
add
dec
push
xor
aad
mov
loopne
test
add
into
push
cmp
test
dec
xchg
mov
mov
mov
sbb
mov
dec
and
xchg
mov
js
fmul
cmp
xchg
es
add
inc
xlat
adc
je
fstp
add
inc
sbb
push
cmp
or
nop
ins
add
sbb
ja
(bad)
fdivr
repnz
push
add
int3
mul
ror
mov
push
push
sub
mov
or
jecxz
sahf
jge
mov
adc
jnp
mov
jmp
test
je
jbe
pop
fwait
sbb
scas
sbb
scas
jae
add
int3
add
sbb
cld
mov
jp
and
int3
add
push
mov
sub
sbb
adc
sbb
test
jne
(bad)
call
test
jns
sbb
xchg
mov
add
pop
sbb
adc
push
mov
push
adc
jmp
cmp
(bad)
lea
mov
sub
mov
or
adc
pushf
mov
xor
cmps
adc
mov
cmp
xchg
pop
add
mov
xor
sbb
bound
stos
mov
jne
pop
ret
adc
pop
jbe
cwde
sahf
inc
das
sub
or
movzx
mov
push
mov
mov
xor
mov
ret
mov
mov
mov
push
fist
cmp
and
jg
jns
dec
or
inc
cdq
and
mov
push
inc
movzx
push
and
pusha
push
adc
arpl
test
jne
(bad)
rep
mov
data16
cwde
lea
mov
or
lock
out
rol
data16
and
js
popa
add
inc
and
adc
sub
mov
and
bound
fsubr
je
sub
push
push
mov
add
and
ss
inc
bound
lahf
mov
sub
mov
adc
or
pop
sti
shl
ret
add
add
arpl
(bad)
jle
nop
pop
or
add
fcom
hlt
out
dec
jne
or
inc
add
in
push
xor
aas
add
inc
add
test
(bad)
(bad)
jmp
push
(bad)
fadd
ds
pop
add
and
and
sbb
aas
aas
lods
dec
add
pop
cli
aam
loopne
add
add
push
outs
sbb
call
pshufw
add
add
or
call
(bad)
mov
mov
ja
jne
aaa
cli
cld
mov
add
arpl
lock
pop
and
and
mov
or
rcl
jns
pop
ret
sbb
push
in
lods
lea
push
push
movzx
ss
inc
hlt
adc
scas
sub
and
jne
adc
pop
test
jne
xor
and
inc
xor
ror
outs
das
push
cwde
sti
enter
add
jmp
jp
jle
add
push
lea
enter
sbb
(bad)
cli
sbb
int3
rol
jb
jl
daa
pusha
cli
or
lock
popf
or
in
arpl
push
push
cmps
xbegin
fistp
inc
dec
pop
retf
add
jmp
sbb
cmp
and
lahf
pop
and
es
or
div
push
or
lods
pusha
rcr
or
das
push
add
or
cdq
pop
push
mov
adc
mov
jmp
add
push
mov
add
sub
or
cmp
jmp
mov
xor
lea
or
inc
sub
and
or
and
in
xchg
xchg
add
mov
xor
add
(bad)
xchg
jge
or
add
aam
cmp
enter
mov
cmp
xchg
lods
and
adc
mov
retf
xor
adc
push
xchg
cmp
cld
sub
test
(bad)
jmp
mov
popa
sub
dec
mov
sub
add
sub
add
retf
push
push
adc
iret
push
sub
add
mov
xor
mov
in
or
js
and
sub
cwde
enter
test
fs
ror
xor
fst
xor
mov
scas
in
adc
cwde
popa
adc
xchg
sub
popa
fwait
movs
push
fsub
movs
and
xor
push
xor
push
movs
pop
jne
sub
es
mov
dec
and
xor
mov
(bad)
pop
mov
ins
xor
fwait
enter
popa
push
xchg
in
es
xor
and
xchg
inc
inc
inc
int3
mov
fwait
enter
shl
mov
dec
es
aam
and
sub
aam
es
loopne
add
or
mov
ror
popa
sbb
xor
enter
test
push
xor
aaa
xor
mov
in
dec
clc
xchg
push
xor
mov
popa
sub
les
cmps
mov
gs
inc
sub
fst
pop
or
xor
mov
xchg
pop
dec
xor
inc
inc
adc
push
inc
ss
pop
fld
popa
sbb
xor
aas
xor
jne
dec
fs
mov
sub
xor
aam
es
xor
mov
and
popa
repnz
dec
xchg
pop
dec
lods
ins
inc
xor
adc
and
sub
or
mov
das
xor
and
and
xor
adc
xchg
pop
and
sub
lods
in
and
gs
dec
sub
dec
sub
xor
aam
rol
enter
jo
sub
sub
in
and
sub
jmp
xchg
dec
lds
push
inc
mov
iret
adc
jmp
pushf
pop
push
and
jg
daa
retf
or
add
ins
mov
dec
ins
mov
cli
push
mov
daa
push
popa
das
mov
inc
push
popa
dec
mov
dec
xchg
dec
mov
xor
push
push
push
(bad)
call
mov
daa
retfw
adc
mov
add
(bad)
push
lahf
and
mov
and
xchg
cmp
inc
inc
(bad)
clc
or
cld
mov
add
mov
mov
and
call
cmp
je
xor
adc
cmps
lea
call
sti
cmp
jbe
or
inc
add
inc
aaa
adc
jae
inc
lods
add
mov
mov
or
pushf
push
inc
test
sbb
sbb
dec
add
add
bound
and
jmp
std
cmp
inc
mov
(bad)
push
out
test
je
cmp
je
push
stos
xor
mov
xor
ds
(bad)
jne
xor
call
clc
retf
mov
add
and
retf
push
push
pop
add
xchg
pop
test
inc
push
sbb
add
outs
push
icebp
popf
outs
add
mov
nop
test
aas
pop
out
mov
push
push
mov
dec
jl
or
add
cmp
je
mov
aaa
movs
std
add
ror
mov
push
mov
or
mov
push
pop
cmp
popa
mov
xlat
and
add
lods
loop
inc
rcl
mov
sbb
sbb
sub
std
(bad)
jne
cmp
je
push
mov
add
dec
dec
sbb
xlat
push
pusha
sub
sub
sub
fadd
mov
movs
aas
cdq
enter
push
jnp
xor
pop
mov
test
add
add
iret
pop
sub
add
int3
lea
call
inc
add
ja
(bad)
jae
xchg
lods
push
push
mov
jle
test
add
inc
hlt
mov
not
fsub
test
jmp
fdiv
or
adc
pop
jl
ja
in
cld
xor
inc
pop
jno
jne
mov
ret
mov
jl
cmp
mov
add
scas
push
movs
mov
and
or
or
je
xor
mov
je
icebp
je
push
ret
mov
sub
inc
sub
js
rcr
mov
std
sub
call
sub
pusha
sub
dec
mov
dec
mov
pusha
out
outs
and
popa
inc
mov
fwait
sub
or
mov
add
xchg
push
addr16
mov
mov
xor
sbb
push
call
add
outs
pop
inc
xor
test
xchg
jmp
push
cmp
mov
xchg
xor
mov
pop
cmp
enter
arpl
mov
xchg
xchg
lods
dec
or
daa
test
push
icebp
add
cmp
xlat
mov
sbb
add
je
add
loopne
fcmove
ficom
(bad)
div
or
mov
cmp
add
outs
fwait
add
ins
or
cs
add
push
jmp
or
inc
out
int3
add
and
add
xor
clc
and
out
aaa
pop
dec
stc
push
ss
or
sub
fld
add
ds
ror
rol
std
and
fistp
mov
push
push
add
add
pop
sub
dec
mov
mov
imul
test
je
xor
mov
add
(bad)
div
cmp
je
adc
lahf
push
adc
or
push
outs
mov
bound
and
dec
push
(bad)
fld
(bad)
xor
or
sbb
div
leave
test
cwde
daa
push
lea
mov
add
or
arpl
xor
and
(bad)
dec
lahf
out
push
test
jne
mov
mov
mov
imul
cmps
adc
jne
mov
icebp
add
jae
xchg
push
daa
or
ss
or
les
ja
pop
les
aas
iret
test
(bad)
push
sti
int
adc
div
cmp
out
call
push
jge
cmp
mov
mov
cmp
jae
or
lods
mov
jne
and
fldenv
test
mov
jne
xor
push
sar
mov
jne
push
popf
mov
pop
xchg
sbb
in
and
adc
dec
xor
cmp
mov
xor
frstor
pop
jno
ret
sti
ss
xor
fs
or
clc
test
jne
(bad)
(bad)
mov
add
mov
push
push
xor
mov
movzx
mov
test
outs
cmp
jle
xor
cmps
dec
cmp
enter
push
cmp
jae
cld
lock
adc
jns
add
add
jmp
xor
push
push
js
(bad)
cmp
cmp
inc
mov
add
cmp
jl
xor
pop
sub
call
mov
sbb
jbe
xor
imul
lock
ret
lahf
es
sub
movs
dec
movs
or
cli
inc
add
test
jg
ja
mov
inc
cmp
jbe
mov
(bad)
push
lea
add
push
sbb
mov
sbb
xor
push
push
call
add
mov
aas
fs
lea
mov
or
mov
fwait
aaa
outs
fiadd
and
mov
and
(bad)
mov
and
mov
or
push
push
mov
call
push
jg
mov
imul
jp
inc
ins
add
outs
and
dec
fadd
mov
dec
xor
test
add
(bad)
mov
inc
add
retf
jmp
mov
(bad)
mov
std
pop
or
dec
add
shr
cmp
jb
push
pop
ret
mov
mov
jle
mov
inc
shr
mov
mov
xchg
mov
or
add
or
out
into
mov
inc
add
pop
mov
or
sbb
sbb
pop
pop
jae
mov
or
movhps
out
sbb
mov
or
inc
out
pop
adc
sbb
mov
lea
pop
cdq
mov
mov
add
sbb
sbb
mov
adc
mov
int3
pop
mov
test
xchg
cdq
jecxz
aad
inc
xchg
add
mov
push
push
loope
fwait
bound
mov
mov
or
(bad)
call
mov
mov
mov
mov
cs
mov
mov
mov
or
pop
add
mov
(bad)
mov
scas
outs
or
fdivr
enter
inc
and
push
(bad)
dec
mov
shr
add
push
outs
cmp
jae
lea
loop
(bad)
sbb
push
mov
inc
sub
rcl
cmp
or
out
nop
add
pop
mov
mov
pop
sub
add
push
sub
push
add
push
xlat
call
repz
sbb
inc
jne
(bad)
(bad)
sbb
mov
shr
lahf
sbb
push
call
call
push
add
sub
jmp
mov
test
je
push
push
push
sbb
pop
retf
add
in
dec
je
mov
stc
inc
call
mov
mov
test
adc
and
push
mov
mov
cmc
sbb
adc
inc
mov
add
and
push
xor
add
nop
push
mov
lea
lea
mov
mov
(bad)
(bad)
out
out
mov
and
inc
sub
inc
xor
inc
inc
add
aam
(bad)
or
lea
jo
inc
enter
add
xor
pop
mov
inc
sub
(bad)
sbb
and
inc
dec
mov
jno
ja
shr
push
(bad)
adc
cmp
je
jo
aas
mov
xchg
xor
jne
(bad)
(bad)
jmp
mov
cmp
jb
mov
jmp
lea
movzx
cmp
jb
cmp
je
pop
mov
inc
cmp
jb
jge
rol
outs
inc
mov
xlat
dec
xchg
push
xchg
or
jne
or
add
sbb
arpl
dec
jge
imul
or
dec
adc
cwde
inc
sbb
xchg
test
in
fcomp
sub
loopne
retf
lahf
enter
sbb
push
push
mov
mov
mov
push
push
inc
sbb
stos
sbb
inc
cli
adc
cmp
mov
adc
test
in
dec
pop
out
and
inc
adc
adc
add
(bad)
push
push
lea
or
test
in
cmp
mov
xor
loopne
cmps
jb
mov
jle
jo
loope
add
inc
sub
mov
add
sti
push
push
lea
and
fsub
shl
jge
sbb
mov
ret
inc
ret
test
(bad)
cli
jae
mov
mov
(bad)
pusha
push
push
mov
or
adc
lea
movs
and
add
xor
out
fld
push
jmp
ins
xchg
nop
(bad)
dec
dec
adc
jp
sub
cmp
jbe
mov
mov
hlt
cmp
jb
movs
push
push
ret
mov
outs
mov
fwait
add
jmp
sbb
mov
inc
add
stc
loopne
aaa
push
xor
jge
xchg
cmp
and
mov
inc
je
or
or
std
mov
ror
mov
mov
lods
xor
mov
push
add
pop
add
mov
push
inc
fild
push
add
inc
sub
aas
clc
xor
loopne
out
mov
mov
aas
aad
sbb
inc
scas
or
sub
jb
dec
stos
bound
mov
or
stos
add
sub
dec
mov
inc
stos
cmovae
inc
jno
mov
(bad)
pop
dec
or
or
dec
xor
addr16
cmp
cmps
popa
iret
sub
or
call
retf
xor
test
dec
or
movs
adc
push
call
les
jle
aad
push
inc
cmps
shl
call
inc
in
lds
mov
jge
inc
ins
or
jge
add
test
add
adc
mov
xor
and
adc
or
or
and
and
adc
push
jmp
mov
push
jmp
call
loope
mov
mov
test
sbb
add
inc
inc
mov
inc
or
jbe
mov
mov
mov
push
ret
adc
add
call
xor
ja
test
rcl
xchg
xchg
add
push
movs
fs
inc
data16
rol
(bad)
jmp
mov
mov
cmp
je
sub
mov
ins
(bad)
jecxz
mov
and
(bad)
jmp
fstp
push
push
cmps
pusha
je
add
pop
leave
dec
sbb
jo
and
or
movs
cmps
loopne
sub
mov
stos
mov
dec
movs
pop
scas
in
pop
mov
std
mov
scas
cmp
jb
xor
in
and
gs
xchg
movs
ret
imul
popa
aam
add
mov
mov
aas
or
fucomi
jae
push
mov
(bad)
and
jg
mov
inc
hlt
mov
mov
in
loope
shl
loope
mov
stos
push
mov
shl
cmps
int3
loop
and
icebp
or
dec
sbb
push
add
mov
pop
pop
add
cmp
adc
xor
test
sbb
(bad)
jae
shr
mov
adc
adc
(bad)
sar
inc
cmpps
sub
or
pop
imul
add
aam
aam
sub
adc
popf
push
push
jg
scas
mov
(bad)
aaa
add
inc
pop
into
pop
pop
test
jp
outs
jne
jecxz
ret
sbb
push
push
push
test
(bad)
sahf
or
push
dec
mov
or
(bad)
(bad)
inc
xor
add
sar
jne
cmp
jne
push
mov
mov
mov
mov
sub
cmp
out
loopne
into
ja
jae
sub
mov
add
fmul
ins
pushf
outs
fiadd
mov
push
jnp
mov
mov
inc
add
(bad)
or
je
jbe
test
aaa
jne
fldcw
adc
sub
mov
in
clc
xchg
test
hlt
pop
test
lea
sbb
enter
mov
sub
fdivrp
push
mov
lea
mov
add
and
cmp
sub
xor
sbb
lar
(bad)
add
mov
and
sbb
mov
sar
jl
jg
or
inc
mov
outs
inc
loop
mov
inc
movs
test
je
push
lea
cmp
mov
or
jne
xor
aas
cmp
ja
cmp
je
push
push
xchg
aaa
adc
dec
lods
test
je
cmp
rol
(bad)
dec
inc
movs
mov
xor
push
push
mov
lea
push
mov
add
gs
cmp
lock
mov
mov
mov
xchg
add
push
sub
test
mov
add
rcr
mov
repz
inc
mov
mov
jne
call
pop
outs
pop
sub
add
leave
or
dec
movs
lock
xchg
fsubr
jp
push
sbb
(bad)
mov
mov
pop
add
hlt
test
mov
jge
add
inc
test
push
frstor
or
mov
sub
or
and
aaa
mov
or
and
jne
(bad)
pop
jmp
jecxz
pop
sbb
add
add
in
call
adc
mov
mov
and
jmp
sti
pop
sbb
fst
lea
mov
(bad)
std
or
mov
pop
ins
test
push
(bad)
daa
add
test
add
shl
mov
hlt
push
lea
sbb
and
inc
aam
adc
mov
test
test
outs
or
test
add
ja
mov
test
or
jno
inc
xchg
test
add
add
out
(bad)
add
mov
cwde
test
pcmpgtb
test
stos
loopne
es
add
lods
cmp
movs
lahf
push
lea
ss
xor
dec
adc
in
and
idiv
push
or
sbb
gs
mov
out
pusha
scas
push
sbb
jnp
or
xor
je
clc
test
loopne
jmp
in
add
add
or
push
mov
adc
inc
add
lds
je
adc
mov
test
push
inc
fadd
or
or
js
cmp
mov
cmp
les
and
cld
stos
loopne
inc
nop
lea
mov
adc
ja
mov
icebp
pop
add
daa
add
mov
retf
pop
mov
in
test
test
stos
xor
jl
mov
push
fsub
test
shl
mov
in
movntps
mov
sub
in
fbld
push
mov
jl
aad
mov
and
ret
data16
xor
mov
jg
add
lea
add
sar
mov
and
xor
(bad)
out
adc
pop
add
test
xchg
xchg
ret
test
je
push
jle
fs
lods
and
fisttp
pop
dec
push
cld
pusha
arpl
and
arpl
mov
add
mov
(bad)
push
mov
adc
cmp
pop
dec
mov
xchg
jg
rol
pop
into
or
loopne
gs
and
adc
mov
jb
mov
push
das
push
xchg
dec
jmp
mov
fsubr
and
loopne
out
sbb
xor
mov
dec
adc
add
sub
je
adc
add
aaa
push
aas
push
push
push
push
push
pop
jge
es
rcr
add
add
add
(bad)
inc
add
cmp
imul
cwde
xor
ja
mov
jne
lock
ret
nop
push
shl
adc
sbb
inc
aas
pop
xchg
sub
dec
sbb
or
mov
dec
mov
loopne
pop
jge
xor
mov
xchg
adc
(bad)
push
mov
inc
mov
mov
push
pusha
lea
ror
dec
add
enter
adc
cld
scas
sub
mov
add
add
mov
push
add
pop
push
push
xchg
mov
and
push
or
das
cmp
jae
push
mov
mov
sub
dec
cmp
jb
sub
sub
add
or
mov
std
(bad)
cli
shr
sub
pop
cmp
jae
xor
cmp
xor
or
add
adc
popa
loopne
pop
shl
fistp
inc
or
in
sbb
mov
adc
dec
add
mov
dec
add
inc
mov
add
dec
into
or
cmp
jne
or
rcl
pop
push
mov
lea
adc
xchg
mov
loopne
cld
call
or
pop
mov
mov
xor
cmove
(bad)
fistp
xor
and
je
test
jne
aas
fidivr
xor
or
mov
push
pop
imul
sti
or
cs
clc
adc
mov
fsubr
and
push
xor
inc
fdivr
jg
push
mov
clc
cmp
push
mul
dec
out
push
ror
add
test
je
jmp
push
aad
ret
jg
fst
cmp
inc
add
inc
xor
jne
and
arpl
sbb
test
sti
(bad)
inc
add
mov
adc
cmp
jne
cmp
aas
sbb
mov
add
jns
jg
mov
lea
(bad)
pop
test
mov
jns
jne
jmp
inc
inc
add
lahf
push
cdq
or
mov
test
jbe
or
add
sub
jne
retf
jle
and
jmp
daa
outs
adc
dec
lock
xchg
xor
movs
inc
daa
sbb
es
dec
adc
sbb
mov
outs
mov
and
das
nop
mov
push
xchg
or
push
mov
aam
ss
adc
push
int
jo
sahf
jl
push
push
scas
stos
sqrtps
or
jg
push
xor
push
mov
int
je
dec
inc
or
cmp
add
inc
or
jle
mov
push
jle
push
out
clc
or
leave
je
or
dec
inc
(bad)
mov
(bad)
std
iret
or
mov
mov
push
(bad)
mov
sub
pop
mov
mov
pop
mov
cmps
fcomip
push
inc
or
mov
je
cli
jbe
aas
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
lea
mov
lea
cmovb
sub
sub
push
mov
add
add
mov
mov
jb
ror
mov
add
ja
out
mov
(bad)
sub
outs
mov
mov
sbb
jle
pop
pop
adc
int3
cmp
outs
push
inc
push
sub
add
mov
pushf
mov
jp
sti
inc
call
xor
and
add
mov
nop
clc
addr16
mov
push
mov
popa
mov
add
xor
mov
mov
xchg
xor
push
push
adc
inc
sbb
mov
push
mov
adc
push
push
push
daa
add
inc
iret
add
outs
xor
test
push
je
push
lea
push
push
in
xor
push
call
inc
aad
shl
inc
pop
cmp
mov
sti
mov
xor
retf
(bad)
mov
cmp
(bad)
xor
push
arpl
and
sbb
mov
mov
call
mov
mov
and
mov
mov
jg
adc
xchg
inc
inc
cmp
and
add
mov
adc
push
inc
pcmpeqb
mov
cmp
cmovb
xor
inc
pop
and
je
stos
inc
adc
sbb
mov
shl
jle
adc
jge
jecxz
(bad)
ffreep
outs
sub
push
push
push
mov
call
dec
cli
cmp
push
lea
hlt
ja
mov
push
mov
and
out
lock
sub
jae
icebp
jbe
sub
jmp
xor
test
jne
jmp
test
ja
adc
sti
push
xor
inc
clc
pop
adc
ins
cmp
je
lea
mov
test
pop
push
xor
sub
adc
cld
(bad)
(bad)
loopne
pop
dec
and
fimul
add
inc
cmp
jbe
gs
inc
adc
test
or
mov
pop
mov
dec
push
and
or
add
dec
xor
aas
stos
dec
fld
in
or
and
mov
cs
std
jg
ret
push
push
xor
cmp
jbe
pop
pxor
test
fidivr
add
sbb
or
mov
xchg
push
or
adc
sar
mov
push
or
and
jge
jb
and
std
cdq
mov
pop
or
leave
sbb
xchg
rcr
popf
movs
ret
jno
stos
aas
jb
mov
scas
mov
addr16
pop
stc
or
inc
or
fwait
dec
inc
lock
pop
lds
inc
mov
pop
inc
push
daa
add
or
(bad)
out
fsub
push
imul
mov
mov
mov
test
jne
(bad)
fcomip
sbb
inc
mov
cmp
jb
lea
cmp
fstp
push
add
cmp
jae
daa
sti
sub
xor
nop
(bad)
call
out
inc
mov
fiadd
mov
cmp
jbe
mov
test
je
(bad)
(bad)
jg
pop
cmp
mov
cmovbe
xor
mov
mov
lea
test
inc
in
push
ret
xchg
lahf
dec
push
mov
add
rol
and
or
retf
jb
jg
(bad)
dec
jbe
add
cmp
jae
sub
cmp
cmova
push
mov
cmp
jbe
mov
cmp
pop
cmova
cmp
cmova
add
imul
inc
fs
inc
or
inc
daa
inc
xchg
adc
outs
clc
add
push
sbb
leave
jo
cmp
je
mov
out
push
pop
lds
add
pop
out
pop
mov
adc
sbb
push
add
add
nop/reserved
jne
mov
or
inc
das
and
push
adc
aaa
inc
loopne
pop
sub
(bad)
or
fist
mov
add
push
adc
adc
sar
add
sub
cli
or
ret
push
call
mov
cli
mov
lods
or
push
cmp
dec
mov
push
or
inc
call
fwait
sbb
jmp
push
lea
or
test
inc
outs
pop
retf
xchg
cdq
or
pop
pushf
push
adc
mov
fld
fs
cmovne
mov
jle
xor
addr16
sbb
jnp
gs
call
pop
movs
sub
add
adc
jo
and
mov
mov
ror
rcl
xor
cli
add
sbb
scas
lods
icebp
scas
jb
jne
add
fistp
mov
(bad)
pusha
cwde
lock
jne
sub
into
push
add
les
fwait
mov
and
movs
or
test
je
or
aas
dec
jae
lods
retf
pop
test
pop
nop
ffree
or
xchg
test
into
ins
leave
sub
inc
in
jae
ds
or
or
sbb
and
or
fwait
jb
and
(bad)
inc
clc
imul
inc
pop
mov
lock
iret
shr
loopne
or
ror
dec
jbe
add
jne
sbb
lock
ror
mov
cld
pop
sbb
and
or
in
mov
mov
inc
inc
in
ss
jge
jmp
bound
test
add
push
jne
cmps
and
or
pop
inc
test
icebp
fiadd
sbb
inc
or
addr16
cmp
ja
mov
adc
mov
in
jnp
cli
cld
sub
jae
add
add
cmps
(bad)
cmp
dec
cld
mov
lea
push
push
pop
sub
jmp
inc
add
push
xchg
(bad)
aad
jg
cs
or
inc
or
push
dec
arpl
and
fwait
adc
test
in
adc
cmp
ret
cmps
cmp
ret
mov
add
cmc
fs
xor
push
push
aas
add
clc
push
adc
ret
aas
fs
cmp
jne
push
pusha
sub
div
xor
in
popa
push
cmps
or
pop
mov
mov
clc
rcr
cmc
add
lahf
inc
clc
adc
lock
mov
fst
or
inc
xchg
nop
mov
sar
inc
or
dec
call
(bad)
(bad)
(bad)
dec
jge
adc
in
cmovae
push
mov
push
push
cmp
or
or
jns
iret
add
sub
loope
sub
mov
in
repz
nop
add
inc
fnsave
pop
jmp
and
les
cmp
jb
xchg
push
outs
or
jne
add
out
je
or
pop
push
test
cmp
je
scas
sub
hlt
or
sbb
adc
bound
inc
push
mov
cmps
ja
mov
std
adc
mov
pop
pop
imul
pop
add
retf
movs
loopne
push
xor
ds
xor
jns
push
xchg
sbb
push
push
mov
xor
mov
sbb
(bad)
lahf
or
mov
mov
mov
call
or
push
cmp
dec
sbb
push
test
mov
mov
cmovne
adc
jo
cs
lds
(bad)
xlat
sbb
fcomp
push
add
in
shr
add
dec
or
push
mov
mov
and
xchg
mov
es
sar
xchg
add
sub
add
adc
lea
dec
xchg
dec
aas
push
lods
inc
inc
aam
xor
mov
jne
push
xor
enter
and
lea
add
(bad)
jmp
jle
movzx
mov
inc
add
cmp
jb
pop
jp
lods
inc
mov
push
and
sbb
xor
add
sbb
and
add
and
jne
adc
push
jo
adc
jns
hlt
mov
aaa
(bad)
out
inc
inc
mov
dec
or
inc
xlat
inc
js
hlt
mov
(bad)
pop
add
call
pop
xor
cmps
lods
call
rcr
sub
inc
cld
inc
dec
add
mov
cmps
push
jmp
and
mov
and
sbb
mov
sub
dec
call
mov
ins
loopne
and
dec
clc
jne
mov
mov
jns
mov
lock
push
add
out
out
dec
jg
out
add
inc
cld
add
add
sub
pop
hlt
lea
xchg
push
sbb
mov
lods
and
push
out
or
mov
jge
sub
mov
mov
test
je
test
add
sar
jle
pop
das
sbb
out
xor
cli
inc
(bad)
mov
cmp
mov
call
adc
lock
xor
add
jno
jg
cmp
je
fild
inc
mov
cmp
fadd
mov
sbb
test
and
mov
xchg
stos
or
or
je
in
fcomp
jl
jae
and
pop
inc
or
es
call
add
add
or
jb
and
test
pop
mov
mov
cmp
ret
out
(bad)
in
je
shr
xor
movs
inc
in
mov
nop
jmp
push
inc
in
iret
wbinvd
into
adc
(bad)
cmps
(bad)
cmp
push
cld
movzx
sbb
enter
sbb
scas
out
xchg
jb
inc
rcl
lock
dec
dec
add
add
jl
push
add
jns
lock
or
ror
cdq
cmovne
xor
sub
cmp
cmova
lea
cmp
add
xchg
ror
aas
cld
mov
or
mov
cdq
inc
add
inc
call
sub
shl
jmp
out
(bad)
sbb
int
cli
adc
sub
xor
mov
push
cld
aas
inc
or
fmul
xor
dec
add
dec
in
xor
xor
enter
jbe
xchg
and
sbb
mov
hlt
int3
aam
xor
dec
or
pop
pop
add
arpl
cmps
fisttp
mov
sub
xacquire
cmp
or
pop
lock
shl
add
mov
cli
inc
je
mov
dec
or
movs
lock
loopne
xor
jmp
cmp
loopne
idiv
sub
cmp
mov
ret
xchg
imul
mov
daa
lock
add
pop
fst
shl
push
dec
jp
mov
fwait
pop
push
pop
ds
scas
or
(bad)
sub
mov
inc
adc
mov
jg
aaa
ins
loopne
push
fcom
loopne
inc
fmul
test
cld
mov
js
pop
or
or
adc
push
xchg
jae
pop
add
push
dec
pusha
sub
and
mov
mov
pushf
add
fstp
pop
aaa
cdq
sbb
sub
add
or
out
adc
add
fdiv
push
jmp
je
xor
xor
adc
cmovs
ja
test
add
outs
push
cli
inc
add
outs
addr16
jmp
sub
fsubr
push
sub
loop
cmc
outs
or
sbb
cmp
(bad)
add
stos
or
xor
add
or
adc
xchg
or
enter
sub
push
or
ror
and
push
cli
and
cld
je
push
push
pop
jmp
data16
div
sbb
jbe
les
jno
adc
(bad)
fld
mov
jb
xchg
call
pusha
cmp
and
or
or
rcr
and
test
aas
cli
fist
mov
mov
inc
clc
sub
cld
scas
sti
cmp
adc
cmova
test
pusha
jp
or
jg
cmp
jne
cs
sbb
rol
sbb
xor
pushf
sub
into
std
fadd
fist
fdiv
pop
push
jecxz
cmp
out
out
clc
pop
clc
sete
xlat
test
add
pop
movs
or
push
push
addr16
mov
and
imul
(bad)
jmp
cmp
mov
mov
push
or
sbb
lea
fs
add
ficom
xor
sub
and
pop
stos
ret
mov
lea
scas
mov
mov
add
(bad)
out
popf
sub
push
sar
push
lea
push
push
adc
adc
sbb
popa
js
sar
mov
push
pop
dec
xchg
iret
shr
xlat
test
fcomp
mov
inc
(bad)
fmul
or
push
jg
es
mov
sbb
call
push
jne
out
push
and
dec
push
out
stc
adc
clts
add
or
adc
xor
(bad)
and
inc
in
push
push
sub
call
fld
mov
pushf
jnp
jl
jne
and
or
loopne
push
and
call
push
mov
mov
test
jne
ret
dec
xchg
pop
lea
xor
jge
les
dec
mov
mov
mov
push
and
or
mov
shl
cmp
ret
mov
xor
sub
call
loopne
div
lock
push
cdq
mov
sub
shl
(bad)
fdiv
cld
sbb
push
bound
push
cmp
dec
in
ret
and
dec
xchg
push
sub
movq
xchg
xor
scas
mov
mov
mov
add
jl
push
inc
or
mov
mov
mov
adc
add
(bad)
mov
shr
cmp
dec
or
cmp
into
cmp
xchg
daa
or
mov
mov
mov
xor
sub
add
inc
es
ja
sub
loop
mov
mov
jg
push
addr16
mov
js
int3
push
xor
sti
and
add
enter
pusha
or
arpl
fadd
xlat
enter
in
jl
cmp
imul
xor
pop
stc
sbb
xchg
dec
nop
xchg
cwde
and
cmp
pop
or
push
push
mov
and
lock
inc
shr
mov
or
(bad)
mov
add
mov
add
add
mov
jnp
add
es
jge
mov
js
cwde
sbb
fdiv
push
jmp
inc
fmul
in
jge
jecxz
jmp
mov
jne
lea
mov
lea
push
push
push
push
xor
mov
ror
je
or
or
jbe
ss
jl
not
and
lea
scas
dec
or
idiv
outs
jl
mov
lea
push
push
call
sbb
loop
lahf
cdq
inc
sbb
jne
sbb
push
push
(bad)
push
cmp
pusha
adc
inc
xchg
jge
jle
popa
js
xor
shrd
push
xchg
mov
add
lahf
cmp
mov
mov
or
loopne
call
mov
outs
jl
dec
or
dec
lock
jne
cmp
je
cmp
je
mov
cmp
call
dec
cld
cmp
jne
cmp
jne
mov
pop
mov
mov
mov
jne
push
jmp
ds
push
add
scas
or
rcr
bound
mov
mov
aaa
adc
add
pop
or
in
mov
cmp
jne
repz
(bad)
setg
test
and
mov
add
jae
add
mov
adc
adc
mov
mov
and
jnp
test
and
mov
cld
(bad)
fdivr
(bad)
dec
sar
jbe
mov
add
data16
sub
sti
push
jns
mov
inc
adc
mov
mov
and
icebp
aas
adc
add
add
mov
(bad)
sbb
xchg
mov
add
ss
arpl
clc
lea
mov
arpl
cld
psllq
je
shl
xor
pop
movs
loope
les
adc
push
test
fs
add
loopne
mov
adc
jne
les
push
out
cmp
mov
or
not
jbe
pop
int3
sbb
push
icebp
push
adc
retf
push
pop
int
push
push
mov
push
adc
or
add
dec
mov
inc
mov
add
add
(bad)
mov
(bad)
(bad)
(bad)
call
je
adc
jl
or
ror
jbe
cmp
jb
rsm
cli
(bad)
and
add
repz
mov
xchg
add
jb
push
xor
push
daa
cmp
sbb
sar
add
add
and
std
loopne
test
test
xchg
pop
bt
(bad)
out
(bad)
push
mov
sub
lea
mov
lea
adc
jae
movq
sub
lea
sbb
(bad)
jge
xchg
mov
int
jmp
dec
hlt
lea
pop
pop
adc
(bad)
sti
mov
lea
cmp
shl
cmp
(bad)
movq
sbb
je
scas
loopne
ret
push
int
jg
jmp
jg
jge
lea
(bad)
(bad)
sub
dec
clc
lea
lea
outs
xchg
mov
pop
fs
pusha
das
or
jae
test
cld
lea
mov
or
in
and
push
outs
clc
lahf
in
push
push
add
stc
adc
movq
adc
call
jmp
bt
loope
cld
pop
and
nop
test
loopne
jne
mov
jmp
cmp
jb
rep
jmp
rcr
mov
stos
jb
and
add
mov
ja
mov
and
mov
xlat
std
cmp
add
(bad)
int3
add
xor
and
mov
mov
mov
mov
mov
imul
add
(bad)
pop
int3
(bad)
and
and
ss
add
and
add
mov
lahf
xor
shl
test
xor
jg
fs
mov
mov
pop
call
shr
in
lock
popa
shl
cld
lea
ja
fiadd
push
mov
dec
(bad)
cmp
pop
out
nop
loopne
inc
and
pop
pop
ret
nop
shl
icebp
or
adc
fnstenv
pop
adc
push
sbb
je
cld
lea
test
clc
arpl
test
ja
inc
mov
neg
enter
imul
leave
sub
mov
sbb
dec
inc
add
ror
cmp
sbb
ret
cdq
jle
sub
sub
mov
jae
pusha
add
jae
ret
pop
add
(bad)
adc
jle
jae
pop
xchg
xchg
add
or
jmp
sub
imul
adc
imul
imul
push
and
add
pusha
push
aaa
test
rcr
adc
(bad)
adc
mov
add
push
mov
and
pusha
(bad)
cmp
rcl
adc
shr
je
push
scas
dec
pop
rcl
mov
nop
fwait
pop
shr
ror
jg
jg
fucomi
jbe
outs
inc
outs
push
add
pusha
jle
and
fwait
int
adc
jg
jg
jo
mov
gs
outs
jmp
mov
shr
test
je
cmps
popf
mov
(bad)
jg
sti
lock
call
dec
jne
and
je
inc
jmp
push
mov
pop
call
xor
dec
jne
mov
and
je
add
jno
inc
dec
jne
aas
pop
mov
jmp
mov
push
dec
inc
mov
sub
push
mov
xor
test
mov
shr
dec
jne
pop
cli
mov
stos
push
push
mov
push
mov
jbe
xor
jno
mov
cli
jmp
into
add
ret
and
xor
pop
ret
push
cmc
cs
fwait
or
in
and
cli
or
and
out
xor
mov
cmp
jg
mov
sub
addr16
loopne
bound
jae
push
dec
fs
cld
jmp
out
mov
mov
mov
mov
cmp
jb
add
dec
sub
jb
(bad)
mov
pop
cmp
jae
sbb
or
mov
mov
sti
(bad)
lahf
js
aam
or
pop
call
inc
adc
(bad)
jb
adc
inc
push
lea
xor
adc
loop
gs
add
and
aaa
adc
ss
mov
fcomip
fcomp
cmp
mov
jns
in
sub
xor
xchg
or
push
ss
adc
and
loope
inc
jns
mov
dec
not
mov
and
and
or
mov
cmc
push
xor
pop
ret
in
imul
push
jg
xchg
pop
test
push
les
push
push
arpl
ret
or
outs
int3
sub
push
push
xor
lea
push
pop
loopne
(bad)
ja
pop
rep
cmp
jne
push
retf
pop
mov
out
ficomp
cli
or
jmp
pop
jno
push
mov
xchg
adc
add
in
jl
ja
jg
mov
add
pop
dec
js
mov
mov
jmp
loopne
loopne
and
push
push
(bad)
pop
pop
sbb
in
inc
adc
mov
dec
pop
mov
adc
pop
add
lahf
loop
mov
mov
jne
pusha
mov
jne
test
and
loopne
aas
jbe
fnsave
rol
add
ficom
sub
or
mov
ror
mov
mov
add
jmp
std
in
jbe
and
rcr
adc
and
sbb
cs
daa
cmp
mov
ja
rcr
mov
jne
aad
jo
or
push
xlat
xor
cmp
sbb
adc
je
mov
add
std
mov
jmp
sub
cmp
je
stos
hlt
add
(bad)
(bad)
inc
shr
xor
jmp
mov
mov
jmp
movzx
cmp
jne
mov
cli
(bad)
mov
ret
inc
add
rcl
add
mov
in
mov
inc
arpl
adc
(bad)
aas
(bad)
dec
jmp
movzx
movd
pop
or
inc
jae
lea
je
add
jb
call
(bad)
and
in
sbb
pop
sbb
fisttp
icebp
aad
sar
jb
add
jne
and
adc
jbe
push
pop
fmul
and
cmp
scas
out
dec
jo
mov
mov
mov
mov
jl
mov
test
mov
pushf
data16
js
mov
jo
mov
mov
jo
mov
adc
mov
jo
or
cwde
lea
outs
lods
outs
clc
jo
mov
(bad)
and
adc
mov
pop
jge
cwde
and
rcr
sti
outs
outs
nop
mov
xchg
fild
or
outs
mov
add
imul
mov
add
bswap
ror
fwait
(bad)
sbb
push
inc
xchg
fdecstp
mov
add
sbb
cmp
in
sbb
out
int
test
adc
ret
cld
movs
mov
fcomp
jae
scas
dec
or
push
iret
fwait
(bad)
call
cmps
add
shl
add
stos
add
jmp
lods
or
jg
mov
add
bt
jae
mov
add
pop
mov
mov
and
xor
sub
xlat
movzx
mov
cmp
jne
sbb
dec
je
xor
add
test
cmps
xor
test
je
cmp
retf
inc
cdq
fimul
leave
jne
or
dec
(bad)
fadd
push
pop
mov
retf
push
sar
(bad)
sub
movzx
mov
mov
mov
clc
test
jne
data16
jmp
(bad)
cmp
in
int3
int3
les
mov
mov
loope
loopne
test
sub
test
movzx
(bad)
mov
jne
jno
fadd
jmp
jbe
test
jne
lea
and
sti
cmp
ja
mov
cmp
jne
sub
jbe
lea
(bad)
(bad)
(bad)
inc
and
test
ja
ret
jl
jb
(bad)
jl
pop
paddsb
and
fwait
ins
jmp
or
ret
fdiv
(bad)
jmp
clc
pop
test
jne
scas
jmp
cmp
jge
mov
fs
mov
push
in
or
cmps
pop
mov
push
outs
mov
inc
push
call
add
sar
mov
sti
fild
lea
cmp
mov
aaa
std
sbb
add
hlt
mov
push
mov
add
jl
mov
sbb
mov
cmp
jb
mov
out
and
sbb
rcr
mov
add
jmp
hlt
push
hlt
or
enter
nop
in
cmp
push
sub
pop
or
pop
ret
or
shl
idiv
fldcw
jb
movs
ss
sbb
(bad)
push
fs
pop
aas
in
cmps
cmp
lds
imul
dec
or
adc
adc
lea
pusha
push
jne
sub
cli
pop
adc
repz
mov
push
push
push
mov
out
inc
sbb
mov
push
je
xor
mov
mov
sbb
jo
inc
shl
inc
jmp
push
mov
pop
mov
mov
push
aas
inc
pop
cdq
retf
pop
push
mov
(bad)
loope
pop
cld
inc
in
push
push
xchg
inc
add
(bad)
mov
push
cmp
das
cmp
je
jne
adc
adc
or
mov
push
ss
stos
pusha
push
push
push
mov
mov
popa
cmp
xchg
or
fild
mov
and
push
add
adc
repnz
rol
mov
xchg
shl
pop
mov
fmul
in
push
in
sar
or
rol
push
push
push
popa
dec
and
shr
fcos
or
cld
adc
inc
test
push
add
mov
jecxz
mov
inc
js
les
jg
ds
sahf
popf
mov
inc
jg
sub
loopne
imul
or
push
gs
cmp
add
inc
rcl
lahf
mov
sti
add
or
sti
inc
jne
or
icebp
(bad)
out
(bad)
je
mov
jmp
add
inc
(bad)
cmp
ja
and
mov
mov
sahf
or
add
clc
dec
pop
and
mov
mov
or
mov
dec
mov
or
inc
adc
add
cmp
or
dec
jle
vmrun
push
inc
jb
or
mov
jmp
sub
or
dec
clc
mov
pop
sbb
mov
or
lahf
scas
mov
or
test
imul
or
sar
mov
adc
pop
das
jmp
push
ror
test
mov
loop
xor
jne
sub
in
adc
test
inc
push
jae
mov
dec
xchg
sub
(bad)
sti
inc
or
je
psrlq
pop
mov
mov
mov
mov
popf
jg
xor
retf
jg
mov
shl
stos
or
data16
ror
pop
xor
inc
cld
push
mov
(bad)
lahf
mov
jae
inc
cmp
or
rcr
add
adc
dec
dec
stc
push
lea
fadd
fisttp
push
in
in
mov
scas
xor
push
popa
call
cmp
mov
sbb
cli
jg
push
or
fist
pop
or
pusha
and
mov
ret
scas
or
ror
cmc
fsub
cmp
sub
popa
(bad)
jne
xor
inc
lock
push
ins
mov
jno
add
fmul
dec
jne
jg
js
retf
cmp
mov
or
inc
add
sidtd
mov
je
push
push
cmp
push
(bad)
fcomp
sbb
xor
jg
add
mov
adc
push
fsubr
mov
push
pop
ret
cwde
(bad)
adc
jmp
push
pop
test
cmp
sbb
jae
push
arpl
add
aam
push
adc
retf
clc
scas
pop
push
and
sub
mov
add
push
xor
inc
or
nop
add
out
iret
jge
nop
aas
dec
mov
test
push
mov
pushfw
add
mov
mov
dec
retf
xchg
fist
inc
cld
mov
test
push
mov
push
cwde
cmp
mov
out
adc
add
js
sub
jecxz
jno
punpcklwd
mov
jmp
pop
mov
scas
add
in
jbe
mov
dec
add
and
or
xor
fld
mov
cmp
push
sbb
jg
or
not
and
jbe
add
rol
adc
inc
cmp
jb
pop
add
sbb
(bad)
adc
inc
pop
push
mov
popa
xor
enter
mov
sahf
out
loopne
xchg
push
mov
adc
clc
div
add
call
jb
add
mov
pop
adc
push
jb
mov
popa
or
stos
mov
in
jl
add
mov
int
push
dec
clc
mov
push
fadd
fdivr
out
out
pop
loope
jb
ss
add
pop
je
cmova
aaa
sub
adc
(bad)
jmp
jnp
inc
fmul
fdivr
dec
in
add
scas
mov
mov
sub
ret
mov
mov
jmp
jnp
scas
mov
mov
les
xchg
fsub
rcl
mov
push
dec
jne
fcmovu
jbe
inc
ins
add
std
adc
sub
xchg
pop
je
adc
add
scas
mov
pop
ret
push
inc
pop
add
movs
adc
fwait
call
or
mov
add
je
xor
jmp
mov
add
mov
cmp
jle
jne
xor
sbb
push
jbe
cmp
ret
inc
mov
push
cmp
or
mov
jle
cmps
add
adc
js
adc
sar
sbb
sbb
(bad)
les
mov
or
or
and
jae
mov
adc
ss
mov
cmp
adc
add
loopne
pop
sbb
push
push
push
mov
out
mov
test
jne
ror
mov
mov
mov
shl
pop
or
cmp
gs
in
mov
mov
test
jmp
jge
add
femms
sbb
and
or
push
iret
cld
inc
xchg
mov
movdqa
js
mov
test
cmp
push
iret
test
test
add
in
mov
adc
ret
js
dec
add
jae
mov
sbb
and
push
pop
xor
inc
add
dec
shl
push
dec
inc
cmp
sub
xor
sub
iret
ss
fstp
out
test
xor
cmc
iret
mov
jns
adc
les
iret
out
mov
stos
sbb
sub
or
mov
xchg
iret
stos
popa
cwde
and
push
push
sub
add
add
ret
lds
pop
iret
pop
xchg
shl
fadd
loopne
lock
jl
add
stos
or
xor
dec
and
sub
sti
dec
fdivr
stos
push
fwait
inc
add
out
xor
(bad)
paddsw
adc
iret
stos
jp
(bad)
(bad)
add
mov
cmp
fbstp
movzx
call
adc
jl
or
stos
jmp
daa
cmp
jl
dec
or
mov
cmp
jb
neg
jg
jge
jg
sub
mov
mov
mov
sar
add
push
adc
and
jp
push
rep
test
xor
or
jmp
mov
lahf
lods
xor
add
dec
push
jnp
js
mov
aaa
or
in
xor
rdpmc
ror
or
inc
jne
frstor
lods
out
pop
into
(bad)
xor
and
(bad)
shl
or
xor
dec
in
dec
pop
xor
or
ds
aaa
inc
les
les
ror
sub
cmp
add
cmc
dec
sar
(bad)
cld
xchg
jmp
push
call
fcom
jne
xor
pusha
push
adc
or
mov
lods
repz
add
inc
aas
jne
mov
jno
mov
or
ds
iret
add
xchg
add
test
pop
cmp
jne
mov
sahf
aad
push
shl
not
aam
mov
cmp
ja
mov
ja
lock
loop
and
push
cmps
push
in
mov
clc
mov
or
jne
and
mov
push
mov
jmp
push
cld
pop
clc
add
push
pop
popa
or
(bad)
jb
mov
pop
sbb
cmp
mov
stos
jmp
popf
adc
dec
and
xor
cmps
scas
sub
mov
inc
jmp
cwde
cmp
rcr
mov
cmp
mov
sub
cdq
dec
inc
scas
lds
(bad)
jmp
cmp
jae
mov
sar
mov
and
shl
mov
fistp
dec
mov
loopne
jne
sub
clc
mov
sbb
shr
and
or
out
loopne
cli
scas
into
pop
inc
push
out
out
imul
add
out
and
cmps
mov
push
pop
ret
push
ja
mov
retf
mov
push
xor
sub
and
or
pop
cmp
je
jp
cmp
jne
test
push
add
add
add
test
je
or
scas
mov
bound
pop
cmp
je
aas
or
mov
std
(bad)
cmp
ror
pop
mov
rcr
add
inc
cmp
push
jg
bound
retf
cmp
xchg
je
xor
mov
cmps
ud0
adc
clc
add
pop
shl
add
sub
mov
cmp
jne
test
xor
push
push
lea
ret
cmp
or
out
inc
es
lock
lds
lea
ror
sbb
or
enter
je
stos
cwde
ret
sbb
jo
lahf
add
or
dec
jne
and
push
sub
or
pop
or
sbb
mov
adc
add
sub
adc
inc
inc
add
add
mov
jge
in
outs
cmp
add
add
cmp
jae
add
cmp
fist
xor
dec
mov
aas
add
(bad)
inc
icebp
xchg
add
xor
mov
mov
movd
sbb
push
je
(bad)
(bad)
jmp
add
jmp
mov
mov
mov
bound
aaa
loop
jle
ud0
(bad)
neg
inc
inc
mov
shl
add
repnz
push
inc
out
sub
inc
sti
push
enter
ret
std
test
je
mov
add
(bad)
jg
jae
mov
or
and
add
xor
fisttp
cli
btc
into
and
shl
sbb
mov
pop
adc
jbe
inc
test
mov
pop
add
lods
(bad)
int
(bad)
(bad)
mov
inc
or
mov
mov
iret
addr16
clc
mov
sar
cmp
push
add
je
cmp
jg
push
push
je
add
xor
sub
je
dec
je
dec
jne
push
push
std
loope
hlt
jmp
push
push
jmp
push
push
dec
popa
adc
push
fucomp
or
push
shr
mov
inc
cmp
rcr
sbb
and
stc
(bad)
adc
and
ja
stos
(bad)
jmp
test
js
xor
dec
(bad)
mov
div
add
pop
ror
scas
sbb
dec
div
pop
push
mov
mov
jg
xor
xchg
cmp
push
out
(bad)
jmp
push
mov
jne
sub
je
dec
je
dec
jne
push
call
push
push
aaa
mov
xor
pop
call
pop
or
push
add
mov
add
or
adc
mov
xchg
outs
cmp
aas
jo
fnclex
pop
ret
mov
fnstsw
arpl
or
adc
or
or
jnp
add
jo
jne
fstp
cmp
lds
and
cmp
(bad)
lea
sub
or
mov
int3
push
push
push
xor
mov
or
jge
inc
add
fiadd
std
add
(bad)
inc
and
sbb
xlat
lds
xchg
sbb
or
jne
inc
sbb
mov
shl
icebp
mov
or
pop
shr
inc
or
push
jg
jmp
rcr
shr
rcr
or
jne
pop
lock
mov
(bad)
(bad)
push
sbb
out
shl
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
popa
add
push
neg
neg
sbb
pop
pop
pop
jb
out
out
mov
or
add
add
loope
jae
out
push
push
mul
jb
pop
adc
mov
mul
add
pop
sbb
sar
psubsb
imul
(bad)
cmp
je
nop
jmp
test
je
outs
jp
dec
or
xchg
push
mov
pop
pop
sbb
lahf
adc
pop
loope
retf
or
sub
std
and
cmp
jne
xor
je
fdivr
std
call
sub
test
jle
push
push
pop
aad
pop
inc
or
pop
cmp
jne
xor
std
mov
jmp
or
and
call
dec
or
add
xchg
jnp
lahf
inc
sti
add
dec
loope
fsubrp
add
(bad)
ficomp
jmp
arpl
push
mov
stc
mov
mov
out
lock
and
jne
and
icebp
daa
dec
hlt
xor
mov
xchg
mov
jge
xlat
in
add
inc
jg
jecxz
test
je
pop
fadd
xlat
mov
jg
sbb
jne
cld
mov
sub
pop
inc
cdq
jmp
test
jne
and
je
sbb
jle
clc
jne
or
cwde
mov
inc
jmp
jge
and
mov
push
push
cmp
ins
mov
pushf
movs
push
xor
popa
mov
je
nop
mov
push
(bad)
add
movs
push
jecxz
je
mov
je
mov
inc
sbb
test
test
add
or
sbb
aas
leave
cmp
ja
mov
imul
loop
jmp
ins
dec
sbb
add
add
cmp
mov
and
push
mov
je
xchg
(bad)
adc
cmp
jae
mov
mov
push
sub
add
inc
jne
clc
dec
std
(bad)
cmp
sub
sub
add
add
jmp
cmp
jb
sub
push
rcl
mov
test
or
dec
inc
clc
jmp
dec
sub
mov
clc
mov
cmp
cmp
sbb
or
fidivr
shl
jmp
in
movsx
adc
or
jmp
inc
dec
mov
enter
xor
inc
or
cmpxchg8b
mov
inc
adc
mov
mov
sub
mov
div
mov
pop
and
je
aam
ins
mov
push
and
sub
mov
xor
push
xor
dec
jmp
enter
xor
ret
retf
pop
sub
xor
push
jnp
push
inc
aad
mov
lea
push
inc
test
cwde
jl
adc
movs
push
jno
lods
mov
call
or
jg
div
pop
add
adc
push
jae
(bad)
dec
leave
push
pop
cmp
jl
jg
cmp
ja
pop
push
mov
out
mov
xor
test
hlt
lea
jbe
add
or
adc
(bad)
outs
add
xchg
or
adc
(bad)
(bad)
jmp
pop
add
push
test
jl
jg
cmp
jbe
mov
cdq
sub
lea
dec
in
mov
push
sbb
mov
push
mov
jno
leave
ror
outs
jmp
clc
je
popf
mov
je
dec
test
inc
in
cmp
out
neg
push
lock
adc
inc
sbb
adc
add
ret
mov
xor
mov
je
mov
add
(bad)
xor
cdq
mov
sub
sbb
aas
mov
es
jmp
mov
jnp
repnz
sub
pop
loop
outs
dec
(bad)
mov
cmp
ret
les
sbb
mov
and
test
(bad)
or
pop
jns
xor
les
sub
sti
mov
adc
sbb
add
sbb
test
sbb
xchg
test
jl
jg
sar
aaa
and
mov
add
push
cdq
pop
idiv
add
mov
add
out
idiv
sub
cmc
jl
jae
add
pop
jmp
test
jg
add
mov
out
test
imul
sbb
dec
adc
mov
out
push
rcl
inc
mov
add
mov
sbb
rol
shr
loopne
inc
outs
adc
(bad)
(bad)
push
mov
icebp
mov
pop
jl
jg
cmp
ror
dec
or
push
add
adc
sti
push
int
add
loop
mov
push
jo
call
sahf
ss
je
je
and
aad
inc
xor
leave
add
mov
leave
jne
sbb
cmp
or
inc
mov
or
lods
inc
movs
inc
in
push
mov
mov
push
xor
mov
dec
push
jne
mov
adc
lds
leave
jne
mov
xchg
xchg
retf
sub
mov
adc
call
sar
ins
mov
adc
sar
(bad)
ror
pop
adc
fcmovnbe
sti
cmp
je
sbb
fild
not
test
jne
pop
push
pusha
in
(bad)
mov
fwait
test
je
mov
fcomi
inc
sub
jl
mov
jge
sbb
push
add
test
fdivr
mov
test
je
clc
out
sub
xor
mov
cmp
mov
sbb
adc
cmp
cmp
(bad)
aas
adc
sbb
ror
out
add
add
mov
je
test
je
(bad)
xchg
sbb
xchg
cmp
leave
and
out
mov
xor
xchg
sub
dec
adc
xchg
out
mov
xchg
mov
mov
or
aas
pushaw
mov
fcmovnb
cmp
sete
mov
cmps
(bad)
mov
cmp
inc
add
(bad)
std
add
inc
hlt
mov
mov
push
and
test
int3
jae
je
mov
fmul
inc
and
(bad)
add
test
cdq
adc
add
std
jge
test
jmp
push
push
sub
adc
mov
in
pop
push
push
push
mov
nop
push
ss
jo
push
push
int3
daa
mov
bound
inc
push
mov
or
jnp
sti
xchg
bound
xor
jno
out
dec
mov
fadd
icebp
ret
out
xor
cmp
jl
call
je
push
lea
dec
mov
pop
adc
or
sahf
stos
dec
cmp
in
stos
test
out
test
mov
jbe
frstor
jne
call
push
dec
mov
xor
cmp
ret
add
shrd
in
pop
xchg
int
cmp
(bad)
or
pop
pop
(bad)
icebp
or
mov
pop
je
push
out
lock
les
mov
xchg
pop
jl
push
adc
sub
mov
mov
mov
adc
mov
cdq
mov
sub
adc
leave
add
or
test
pop
dec
js
sbb
mov
clc
mov
mov
(bad)
dec
push
xor
lea
mov
mov
test
std
aas
cmp
jae
mov
inc
inc
mov
or
(bad)
(bad)
mov
and
aam
pop
or
and
(bad)
arpl
inc
cmp
jb
shr
push
neg
popa
sub
lea
lea
or
ret
add
addr16
pop
mov
mov
les
adc
out
and
test
push
mov
sti
jne
jb
(bad)
dec
or
mov
jmp
mov
bnd
daa
push
jbe
push
mov
push
sub
mov
mov
jae
cmp
cmp
aas
(bad)
adc
xor
mov
add
or
mul
sbb
sub
push
push
push
push
adc
sbb
cmp
out
pop
repnz
and
sbb
popf
es
(bad)
adc
ret
sub
sbb
addr16
cdq
mov
icebp
fst
cmps
mov
retf
mov
(bad)
cmp
jae
movzx
out
add
mov
cmp
jg
push
pop
mov
or
xrelease
push
jo
add
pop
jb
xor
lea
push
sub
push
or
lea
rcr
push
mov
push
push
push
fsubr
jmp
gs
leave
mov
jmp
sub
lea
test
rcl
and
(bad)
fldcw
dec
cmp
jg
jmp
adc
pop
nop
pop
and
fisttp
(bad)
call
pusha
clc
adc
bnd
repz
data16
xchg
dec
mov
dec
add
into
push
push
xor
mov
cmp
idiv
call
jmp
push
rcl
lods
sbb
out
and
(bad)
aas
and
or
xor
jmp
leave
push
ret
push
test
and
and
clc
es
add
icebp
mov
mov
push
cld
push
mov
xor
mov
in
(bad)
aas
mov
add
xor
je
sub
je
adc
jne
adc
shl
add
aaa
xchg
inc
adc
fucomip
sbb
rol
xor
repnz
(bad)
(bad)
(bad)
mov
or
retf
mov
add
xor
xor
add
and
aaa
fnstsw
dec
cld
pop
and
jmp
sbb
jmp
jmp
xor
(bad)
pop
lea
pop
ret
lea
pop
add
sar
mov
or
pop
loopne
pop
loope
mov
sub
push
push
xor
lea
sub
(bad)
jge
pop
xor
mov
rep
pop
test
daa
push
lea
mov
call
or
(bad)
dec
pop
js
mov
push
push
and
add
push
mov
mov
mov
out
or
in
mov
jo
jae
add
push
or
dec
movzx
mov
aaa
inc
pslld
jo
add
jo
add
xchg
mov
sldt
ja
movdqu
pxor
pcmpeqw
add
(bad)
mov
xlat
rol
adc
shl
ret
aas
or
adc
or
scas
mov
ror
jmp
adc
sbb
xchg
aam
mov
mov
enter
sub
int3
in
mov
pop
jmp
movsd
sbb
jmp
sbb
rol
loopne
or
enter
movd
and
dec
add
cmp
fwait
cvtss2sd
cmp
jne
xor
adc
clc
comisd
jbe
xor
mov
stc
pextrw
jae
fs
add
pop
rcl
(bad)
jb
ds
jbe
jae
div
add
and
lock
(bad)
out
out
and
ja
xorpd
or
fstcw
mov
test
pop
shl
pusha
xor
mov
add
test
test
and
and
mov
jb
cmpsd
(bad)
fild
fcmovnbe
por
psrlq
sbb
psubq
pop
(bad)
mov
psllq
or
adc
psrlq
pcmpgtd
xor
punpckldq
(bad)
cmp
scas
in
aaa
xor
xlat
xor
dec
into
adc
icebp
and
out
out
add
inc
xor
xlat
adc
jae
add
fild
js
or
je
jle
jae
sbb
cmp
out
ret
mov
jns
sar
test
cli
or
sub
inc
add
jmp
mov
mov
jle
inc
and
repnz
adc
adc
fstp
add
jo
ret
loopne
fs
inc
test
(bad)
rcr
aaa
(bad)
shl
shl
je
outs
js
add
call
xor
gs
stc
add
push
mov
push
sub
pop
cmp
add
sbb
das
retf
shr
test
or
and
and
out
sub
and
adc
ss
call
jecxz
hlt
jnp
aam
pop
or
add
loopne
shr
outs
or
mov
ret
jbe
(bad)
mov
shl
cvtsi2sd
shr
and
outs
mov
pop
outs
inc
stos
sbb
mov
or
adc
test
dec
bsr
sub
jmp
call
jae
xor
mov
or
arpl
into
mov
fstp
pop
pop
sti
cmp
call
and
nop
aam
ret
out
cmp
cli
out
ret
xchg
ret
test
jge
mov
neg
adc
neg
xor
push
push
mov
jmp
add
cmp
ror
and
push
lods
retf
sub
aad
jo
lods
mov
test
xor
or
push
mov
sar
lds
push
ss
daa
loopne
std
inc
clc
sub
in
cmp
ja
lods
pop
ret
lea
in
push
pop
cmp
sbb
and
add
pop
ret
mov
in
sub
add
dec
or
inc
or
(bad)
push
test
jne
cmps
or
mov
mov
mov
mov
mov
mov
outs
loopne
(bad)
cmp
je
mov
jo
mov
cmp
mov
mov
pop
dec
inc
pop
je
mov
push
lock
inc
jo
or
mov
out
(bad)
mov
jo
add
or
mov
addr16
or
and
fcom
aaa
jae
lock
(bad)
push
and
mov
inc
or
mov
mov
mov
enter
adc
pop
mov
push
cld
dec
clc
and
sar
inc
fmul
inc
in
xor
or
cmp
mov
pop
dec
lock
xor
mov
push
jg
(bad)
jg
add
mov
jmp
mov
inc
and
shl
and
push
popa
fwait
or
push
push
push
push
fcom
jb
and
push
pop
and
leave
add
sbb
pop
adc
mov
test
and
or
ins
sti
jg
bound
push
nop
and
or
clc
xor
xchg
add
and
les
pop
ret
xor
or
and
in
add
aas
adc
xor
xchg
add
push
mov
int
sub
push
into
cmp
cmp
push
and
call
sub
test
mov
jge
adc
or
jmp
jne
div
mov
cmp
imul
ror
dec
or
outs
xor
lock
jne
mov
inc
shr
add
jge
xor
inc
adc
bound
enter
mov
out
das
mov
and
adc
lahf
pop
loope
call
add
test
movq
adc
jne
(bad)
jg
js
cmp
jbe
mov
lea
ja
or
in
sbb
clc
(bad)
jne
or
ja
pop
mov
mov
jmp
mov
push
push
xchg
mov
adc
xor
sub
inc
loopne
push
sbb
sub
(bad)
(bad)
cmp
dec
cld
mov
jmp
test
jns
xor
mov
sub
and
add
mov
jnp
movs
call
cmp
gs
xor
push
test
push
in
icebp
push
xchg
adc
mov
sub
push
add
cs
sub
shr
pop
mov
adc
cld
das
push
lea
mov
push
es
xor
daa
sub
sub
sbb
test
js
fimul
mov
mov
mov
add
loopne
iret
sbb
and
sub
or
add
push
add
ret
jmp
sub
mov
mov
setge
sub
pop
inc
add
sahf
sub
add
push
cmp
pop
ret
mov
je
push
xor
rcl
rcl
jne
and
sbb
mov
inc
xchg
or
sub
pop
jnp
sub
dec
cmp
sub
push
inc
lds
xor
je
cmp
jb
push
shl
sbb
push
push
add
add
sbb
cs
add
test
sub
push
pop
jae
(bad)
sbb
push
or
jmp
ret
(bad)
jmp
daa
cmp
loop
daa
mov
push
mov
inc
dec
sbb
add
or
inc
sar
cmp
je
cs
jg
or
and
pop
and
ss
in
and
sti
mov
mov
in
ror
add
push
push
or
jge
add
inc
jmp
cld
dec
in
rcr
sar
xchg
sti
nop
add
push
push
and
push
fnsave
outs
mov
loopne
pushf
test
xor
xor
add
dec
sub
sub
pushf
dec
(bad)
(bad)
jg
inc
jne
pmullw
cli
push
cli
(bad)
je
mov
sar
jle
mov
sar
std
gs
add
inc
and
jne
sub
std
cs
ret
pop
shl
add
jp
jmp
mov
and
je
dec
inc
adc
fwait
inc
sub
dec
js
mov
movzx
loope
mov
mov
ret
dec
push
cmp
or
lahf
test
xchg
jl
call
(bad)
pushf
les
push
and
mov
and
in
add
shr
and
and
sub
inc
adc
ret
pop
ins
prefetch
xchg
jo
(bad)
cmps
popa
jno
fist
aas
push
mov
mov
xor
inc
jmp
mov
test
hlt
retf
pusha
adc
or
mov
int3
fcom
rol
retf
sub
je
mov
test
je
sbb
inc
mov
test
je
pop
arpl
cmc
fwait
push
jne
cmp
jbe
mov
je
or
dec
retf
je
and
cwde
inc
add
imul
fld
mov
mov
test
je
js
popf
addr16
icebp
cmps
(bad)
ror
cmp
ss
push
dec
ins
test
sar
push
(bad)
dec
jmp
cmp
jb
test
je
xor
cmp
idiv
push
mov
push
mov
pop
ret
idiv
sub
sub
jmp
adc
add
ja
push
push
test
push
fisttp
mov
ja
sahf
add
(bad)
jg
push
fadd
inc
cld
sub
mov
jmp
sub
cmp
je
(bad)
fistp
mov
mov
inc
dec
mov
dec
mov
dec
adc
dec
xor
fisttp
test
mov
popa
rol
ret
xor
add
adc
add
adc
ja
and
jmp
jmp
icebp
and
add
fnstsw
fcomp
mov
jge
je
cmp
je
push
xchg
jp
scas
shl
data16
jns
jecxz
or
mov
push
out
test
je
sbb
psubusw
mov
jmp
addr16
adc
or
dec
add
mov
fild
mov
push
frstor
xor
sub
xor
adc
mov
add
inc
(bad)
inc
movs
je
fsub
push
cld
out
(bad)
outs
and
aad
xor
mov
pop
mov
add
add
jo
fadd
popa
or
hlt
sbb
lock
mov
(bad)
mov
or
or
loopne
mov
push
test
jp
shr
mov
loopne
cli
test
xchg
sti
sbb
add
and
aaa
mov
mov
fcomp
fnstsw
sub
idiv
add
jl
mov
test
test
dec
(bad)
(bad)
mov
out
movs
mov
xor
out
std
popf
int
shr
cmp
jne
outs
arpl
and
je
sub
sub
in
add
mov
lock
push
mov
cmp
jne
sub
test
adc
(bad)
scas
add
add
xchg
lods
push
push
test
sbb
mov
and
mov
inc
lds
ins
inc
mov
xchg
ror
xor
(bad)
(bad)
dec
retf
mov
cmp
jne
lea
cmp
jae
lea
cmp
jne
mov
jmp
movzx
mov
mov
dec
add
inc
xlat
ror
lea
cmp
int3
jmp
adc
jmp
cmp
jne
inc
inc
cmp
jb
mov
mov
and
sbb
in
sbb
add
mov
fld
or
fimul
aam
sub
add
push
leave
pop
test
or
loope
test
sub
aas
cld
mov
shl
xchg
ror
enter
cmp
out
(bad)
inc
sbb
not
and
mov
stos
mov
cmc
xchg
add
inc
ret
inc
or
pop
or
jns
and
(bad)
pop
stos
mov
adc
cmps
mov
test
je
test
add
adc
pop
std
mov
iret
fidiv
loope
add
xor
out
jmp
(bad)
adc
add
pop
push
cmps
mov
add
cdq
xor
in
shl
add
inc
fucomp
and
sbb
fldenv
mov
push
fstp
loopne
dec
les
xor
(bad)
out
clc
adc
adc
or
(bad)
(bad)
je
cmp
jne
dec
and
jmp
push
mov
dec
dec
jmp
xor
mov
test
je
xor
and
mov
push
jbe
(bad)
(bad)
fnsave
pop
or
add
mov
pop
adc
xor
ins
outs
add
push
mov
or
out
dec
pop
test
jns
mov
test
je
jne
jg
test
je
test
inc
sbb
mov
ja
call
test
mov
ret
adc
dec
call
shl
mov
jmp
inc
nop
jb
mov
pop
fmul
pop
shl
rcl
xchg
inc
mov
mov
stc
cli
or
add
adc
and
mov
or
add
test
push
inc
mov
pop
jae
neg
arpl
cmp
je
jnp
jne
add
push
cmp
loopne
jle
add
or
cmp
out
or
or
aad
mov
dec
and
ret
mov
je
cmp
je
adc
mov
sbb
inc
jno
aaa
fcomp
enter
mov
jmp
or
mov
dec
sbb
dec
sub
mov
mov
pop
xchg
ffreep
xchg
shl
add
lock
aad
mov
push
mov
mov
rcr
adc
repz
mov
ret
fld
cmp
push
and
enter
mov
adc
icebp
sbb
mov
js
stos
jg
dec
and
test
arpl
arpl
mov
sbb
or
sub
dec
push
sbb
mov
pop
test
jl
jg
rcr
mov
jmp
(bad)
retf
or
mov
adc
mov
jg
retf
push
or
mov
sub
or
jmp
jne
imul
push
cmps
adc
jmp
test
jg
xor
cld
outs
jl
test
jae
mov
jno
cmp
jl
stos
les
jo
test
mov
pop
rcl
or
inc
and
dec
std
std
jg
jge
mov
mov
and
cmp
jne
test
add
lods
sub
or
ds
dec
adc
clc
sbb
neg
in
push
push
add
add
fsin
sbb
loopne
add
push
lea
sub
push
pop
or
and
clc
push
mov
pop
xchg
mov
mov
ret
sub
jmp
cmps
adc
add
movzx
mov
and
cmp
pop
jne
test
loopne
ja
mov
jne
add
ja
mov
add
ret
test
addr16
jmp
or
pop
add
test
pop
push
call
mov
jb
adc
retf
inc
and
sbb
mov
sbb
and
int
adc
shl
dec
and
inc
and
idiv
xor
dec
jns
jmp
mov
sbb
add
or
nop
enter
sti
mul
xchg
add
(bad)
sar
out
jbe
push
cmp
or
inc
and
sbb
pop
or
or
je
dec
jns
pop
jmp
mov
inc
mov
jmp
test
adc
or
scas
pop
and
mov
and
test
add
jne
sbb
clc
jg
fs
fdivr
or
test
jmp
movq
movaps
nop
out
(bad)
mov
clc
psrlq
movd
andpd
test
mov
cli
shl
ror
test
ret
(bad)
mov
psllq
cmp
jg
movq
daa
mov
ret
ucomisd
jnp
mov
aam
or
fmul
ss
adc
xchg
cmp
adc
xor
fistp
cmpltpd
cmp
jl
cmp
xor
pop
xor
pop
pushf
data16
imul
out
popf
mov
orpd
sub
mov
or
pop
sub
popa
or
push
sbb
pop
jo
inc
inc
and
mov
jmp
mov
or
push
push
mov
iret
pop
or
or
adc
or
dec
ret
push
add
adc
add
test
jne
out
adc
movlps
unpcklpd
stos
xor
xor
inc
pop
rep
cld
dec
(bad)
and
inc
add
sub
sub
or
sbb
or
pop
dec
pop
xlat
in
fisubr
pop
into
xor
subpd
pop
ror
and
jge
mulpd
or
clc
addr16
or
loope
sar
adc
je
push
jno
xchg
and
sbb
mov
mulsd
addsd
adc
mov
stos
lock
or
jae
cs
sbb
cmp
unpckhpd
add
mov
pop
add
ja
dec
ret
add
ret
sub
fstcw
data16
ja
or
retf
data16
mov
sar
sub
jecxz
out
imul
mov
in
inc
jae
mov
adc
into
jecxz
or
fisttp
je
or
xchg
mov
rcr
adc
data16
jp
call
add
fldcw
add
dec
enter
jl
stc
mov
jae
cmp
je
xchg
cmp
cmp
jmp
xchg
ja
jb
mov
cmp
jae
and
movs
fstp
mov
sbb
or
add
test
or
adc
mov
cmp
jae
jl
or
xor
(bad)
mov
sbb
pop
lods
adc
test
jg
test
ja
cmp
jne
aas
lock
or
mov
cwde
or
loopne
mov
popf
and
adc
test
xchg
cs
add
mov
sub
add
lahf
iret
add
sub
ret
xor
xchg
adc
call
sbb
int
loop
xlat
sub
mov
sbb
push
jmp
mov
mov
test
(bad)
and
and
cmp
fbld
sub
push
sub
hlt
popf
fndisi(8087
cmp
les
xor
loop
and
cmp
xchg
or
dec
add
cvtsi2sd
cmp
test
or
sar
(bad)
stos
cmp
cmove
lahf
mov
sub
(bad)
xor
jmp
xchg
movaps
mov
pop
cmc
jns
mov
pop
mov
daa
lea
popf
enter
scas
imul
sub
or
adc
sub
adc
sbb
add
(bad)
repz
out
fwait
xorpd
cmpsd
(bad)
xchg
ja
mov
bound
mov
loope
mov
sub
inc
xor
push
ret
ret
pusha
and
mov
ret
mov
xor
dec
rdtsc
divsd
daa
loopne
addr16
push
push
loope
mov
sar
add
dec
mov
test
jp
stc
fidiv
mov
pop
leave
cld
stc
dec
push
inc
and
sub
xlat
jne
jns
jae
and
mov
je
cmps
cmps
mov
or
inc
inc
mov
lea
mov
add
ss
inc
inc
add
je
add
sub
mov
add
xor
ins
push
pop
dec
or
inc
or
inc
add
jne
cdq
rcr
fcomp
cli
mov
cld
mov
daa
inc
je
pop
lea
cmovl
add
add
mov
add
(bad)
in
out
(bad)
mov
mov
xchg
jle
jle
mov
cmp
imul
loopne
sub
je
push
mov
add
push
push
push
ins
fadd
into
in
mov
(bad)
mov
push
mov
mov
cmp
je
push
jbe
cmp
pop
or
jne
data16
fcomip
(bad)
dec
cmp
jne
je
jmp
std
xchg
neg
add
sbb
ss
retf
mov
mov
pop
push
or
xor
daa
inc
hlt
test
dec
lock
mov
sbb
jbe
fs
push
dec
xor
pop
sahf
and
adc
xchg
pop
shr
add
mov
fs
add
inc
mov
xchg
push
and
sub
rol
outs
call
mov
mov
push
sub
push
sub
push
mov
mov
sbb
(bad)
in
rol
ret
mov
push
pop
pop
jb
call
mov
pop
push
pushf
(bad)
fnstsw
mov
lock
sti
pushf
xchg
mov
sub
push
in
add
jg
rol
mov
addr16
or
fcomp
adc
test
je
or
loopne
test
lea
loope
shl
lea
jae
jae
cmp
aaa
and
add
mov
add
cmp
ss
loopne
fmul
dec
idiv
push
je
mov
push
pop
sub
je
add
pop
sub
jne
enter
cmp
retf
dec
idiv
enter
mov
mov
cld
jmp
push
dec
out
dec
pop
pop
add
mov
mov
jmp
mov
clc
inc
sub
je
sub
je
dec
je
xor
ins
mov
jae
jae
jmp
or
call
or
dec
jae
xor
inc
js
cwde
(bad)
jg
fs
inc
fadd
fstp
push
fdiv
or
ds
cmp
je
cmp
je
cmp
mov
sbb
inc
pusha
mov
and
sbb
mov
mov
mov
mov
sub
mov
mov
mov
add
and
sar
jge
imul
mov
and
inc
sbb
outs
shl
ficomp
cwde
popa
add
cld
call
dec
and
ja
push
call
pop
jmp
adc
pop
loopne
jge
popf
lahf
inc
jae
sbb
lahf
adc
pusha
and
hlt
out
adc
push
mov
mov
arpl
inc
or
sbb
jb
je
imul
jp
(bad)
inc
or
shl
imul
add
cmp
jae
sbb
mov
xlat
aas
and
lods
add
mov
sbb
pusha
test
lea
push
hlt
adc
(bad)
(bad)
call
loop
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
repz
dec
add
movzx
jmp
mov
movzx
push
or
jbe
(bad)
inc
add
test
je
cmp
je
movzx
pop
movzx
aaa
pop
pop
jg
jne
pop
fcomip
sbb
jmp
dec
lock
push
loopne
repnz
mov
add
retf
mov
rol
or
mov
cli
ja
lock
inc
lock
cmp
inc
pop
cmp
cmps
ficomp
cmp
ret
fnstcw
push
push
cmps
ret
adc
jmp
je
cmp
je
jmp
movzx
xchg
mov
or
mov
lea
adc
les
movzx
lea
(bad)
je
movzx
adc
shr
jo
sbb
pop
mov
and
add
inc
add
dec
jo
test
dec
cmp
repz
pop
adc
and
sar
cmp
test
jne
push
jo
pop
aad
aad
retf
push
icebp
fnsave
in
(bad)
je
inc
test
cld
sub
and
rcl
pop
push
in
or
adc
sbb
icebp
dec
(bad)
sub
test
pop
mov
(bad)
inc
adc
push
shld
shl
ret
mov
xor
and
shl
ret
add
sub
retf
or
add
stc
ret
add
dec
xor
mov
cmps
mov
cmp
mov
pop
xor
jno
jmp
dec
jne
cmp
jne
xor
jmp
dec
cmc
test
mov
(bad)
fnsave
pop
xor
mov
jmp
jb
or
adc
add
in
pop
pop
ret
push
mov
push
mov
cmp
xor
clc
push
sub
call
and
and
icebp
enter
add
pop
push
dec
je
dec
jne
hlt
jg
jmp
add
pop
jne
std
mov
shr
mov
pop
jmp
and
add
push
and
xchg
std
dec
xchg
xlat
clc
push
dec
je
movzx
movs
dec
push
add
movzx
sub
adc
xor
inc
add
sub
rol
loopne
or
rol
mov
jo
add
push
fisttp
(bad)
call
shl
sub
movdqu
pxor
pcmpeqb
cmps
xor
pop
xlat
retf
push
(bad)
cld
aas
cli
scas
fmul
mov
xor
cmp
cmovne
cmp
aaa
std
mov
push
mov
pusha
push
or
je
jb
retf
je
and
(bad)
jmp
fcom
ret
shl
push
or
mov
inc
std
aas
jnp
ror
add
jge
shl
(bad)
mov
and
(bad)
rol
add
sub
push
rol
pop
mov
(bad)
(bad)
(bad)
out
mov
je
test
je
cmp
je
test
je
shr
adc
xlat
push
iret
jmp
pop
mov
cmp
std
push
cld
(bad)
jg
add
in
sub
mov
xor
movzx
pop
mov
clc
xchg
mov
ret
div
pop
adc
rcl
jbe
pop
sar
mov
pop
cmp
lock
push
dec
cmp
jg
jns
fadd
pinsrw
cmp
je
add
push
jae
sti
mov
dec
clc
mov
mov
inc
aas
fs
cmp
or
jmp
jae
lahf
mov
adc
mov
mov
mov
mov
cmp
inc
add
aaa
inc
call
adc
or
mov
ror
aam
xor
inc
out
out
fld
test
(bad)
fdiv
push
and
fistp
and
cmp
je
popa
push
add
add
mov
xchg
push
xchg
jne
jg
push
fisttp
movd
pop
fwait
mov
nop
fs
mov
test
or
por
rcl
add
(bad)
ror
clc
shr
lea
sub
test
dec
ror
test
movzx
cmp
jne
mov
addr16
and
pop
add
sbb
ss
sbb
mov
jne
fcmovnbe
(bad)
fldz
pusha
int3
dec
std
jmp
push
loopne
add
add
test
clc
in
clc
je
out
ss
dec
push
push
add
add
jmp
cli
add
jmp
jg
push
ret
jmp
mov
mov
mov
sub
mov
cmc
dec
daa
retf
test
je
push
hlt
movzx
movzx
sub
mov
xchg
outs
inc
clc
jne
add
cmp
jne
jmp
leave
cmp
je
ins
pusha
(bad)
add
inc
movzx
sbb
jne
rol
jecxz
dec
test
and
test
ins
jmp
outs
into
loopne
jo
movs
je
xor
cmp
mov
pop
sbb
adc
push
pusha
test
data16
lahf
push
dec
sub
mov
inc
shr
fnstsw
idiv
xchg
subps
mov
sbb
jbe
stc
dec
fidivr
xor
ror
and
or
mov
add
cld
add
push
jne
mov
popa
add
push
jae
add
cmp
arpl
push
xor
movs
and
mov
out
add
cmps
and
mov
in
xchg
sar
or
adc
adc
push
add
bound
std
jmp
ja
mov
ret
das
and
pop
mov
mov
iret
mov
mov
xor
stc
(bad)
mov
mov
pmovmskb
and
bsr
add
popf
(bad)
frstor
mov
shl
add
push
sbb
and
shl
xor
sub
push
xchg
and
dec
and
pop
and
ret
ret
jbe
shl
shl
ffreep
add
ja
(bad)
retf
inc
je
jmp
test
inc
adc
out
dec
mov
call
lea
cmovb
jne
inc
mov
fild
xchg
ror
psadbw
pop
add
shl
jl
and
jne
sbb
fdivr
ffreep
adc
test
je
bsf
add
jmp
cld
mov
push
scas
add
neg
sub
mov
std
or
je
jle
jnp
ret
(bad)
cld
push
lea
mov
add
mov
jae
mov
sbb
jg
dec
add
jg
adc
or
or
adc
pop
mov
and
lods
push
sbb
add
or
pop
inc
mov
pop
pop
sti
loopne
adc
add
adc
stos
xchg
jg
fist
int3
call
jle
mov
add
or
push
inc
lds
mov
or
push
adc
cld
mov
mov
pop
jmp
outs
clc
daa
or
add
call
inc
std
add
aaa
add
(bad)
clc
push
push
push
add
push
push
add
aam
mov
mov
jmp
cmp
je
addr16
lahf
popf
sbb
call
inc
clc
je
mov
adc
and
ret
scas
push
inc
enter
sub
movs
(bad)
mov
clc
sbb
add
mov
sti
or
mov
jp
and
push
dec
mov
cmp
mov
pop
mov
data16
cmp
popf
jmp
push
scas
or
call
pop
pop
sub
mov
jmp
or
test
or
cmp
inc
add
das
pusha
gs
stos
imul
in
cli
jmp
push
cmps
push
cld
adc
add
push
inc
cmc
jg
in
adc
push
xor
push
sub
inc
cmps
scas
cmps
jg
adc
push
std
mov
call
inc
shl
or
inc
cwde
sti
aas
ret
nop
jne
mov
sub
push
pop
mov
(bad)
cmp
pop
push
les
cmp
pop
mov
aas
ins
loopne
adc
shr
or
adc
mov
push
inc
sbb
ret
dec
push
lea
psubusb
dec
movzx
sub
xor
sbb
cmps
fxtract
pushf
pop
mov
push
add
pop
push
retf
movzx
inc
fimul
mov
inc
lea
out
loopne
jmp
cmp
je
sub
pop
mov
inc
xor
out
jne
std
das
adc
rcr
cmp
je
and
add
std
sar
cld
inc
loopne
inc
in
inc
in
adc
inc
push
call
rol
or
fdiv
jg
inc
fldenv
or
mov
pop
mov
jmp
sub
movzx
push
cmp
fimul
cli
mov
mov
push
rol
sub
div
inc
mov
pop
mov
xchg
cmp
es
mov
fsubr
ds
fisttp
je
jbe
mov
jmp
pop
sti
or
es
mov
fs
(bad)
adc
push
adc
xor
les
jge
pop
and
xor
push
rcl
into
sub
xor
sub
mov
cmp
push
push
adc
nop
push
and
add
test
rol
mov
(bad)
call
push
imul
add
mov
shr
and
mov
popa
rcl
cmp
sub
sub
jmp
ja
jmp
test
aad
jb
sbb
add
call
(bad)
out
stc
or
cmp
jg
(bad)
movzx
lea
xor
jmp
test
mov
add
push
or
aad
jmp
jmp
mov
or
jmp
or
jne
aaa
mov
loop
push
ss
or
mov
or
dec
movzx
push
pop
mov
adc
jle
cmc
bound
sbb
jmp
push
pop
mov
or
add
dec
cmp
xor
jne
movzx
add
adc
jmp
xor
shl
jne
mov
mov
out
loop
xchg
rcr
jne
push
pop
cmp
ja
jmp
es
lea
ins
jbe
sti
jge
sub
test
adc
loopne
xor
jmp
and
add
push
pop
es
sahf
jmp
cmp
ret
xor
shl
cmps
push
xor
inc
cld
cmp
jb
jne
cmp
jbe
mov
or
icebp
dec
lods
jmp
imul
add
sub
push
adc
add
pop
test
jne
push
add
sti
mov
fadd
xor
sub
sub
cmp
jb
sub
jg
add
retf
(bad)
jmp
test
push
pop
setne
sub
jg
add
add
fistp
ret
icebp
xor
ret
sub
fs
rcr
mov
push
inc
pop
psllw
std
ss
inc
push
rcl
or
or
ss
inc
inc
add
adc
mov
test
xor
inc
and
adc
shl
push
push
cmp
adc
add
sbb
sub
adc
mov
xchg
pop
mov
(bad)
jmp
push
mov
and
sti
add
fcomip
or
clc
xor
pop
adc
push
loopne
mov
add
pop
icebp
cmp
ror
lea
lahf
adc
popa
adc
out
popa
adc
pop
js
pop
push
icebp
cli
or
dec
xchg
jne
lock
test
add
sbb
or
dec
or
inc
aad
adc
add
cld
add
les
adc
jbe
scas
dec
loopne
inc
shr
add
dec
push
push
cld
ins
push
dec
adc
xor
shl
adc
mov
test
rol
jmp
push
adc
jo
add
cmp
jo
adc
out
push
push
pop
adc
or
fsubp
ret
fild
sbb
add
sub
dec
aaa
outs
shl
pop
add
inc
lods
mov
mov
sub
imul
loopne
push
mov
mov
call
(bad)
out
add
hlt
mov
inc
mov
mov
mov
mov
cmc
inc
pop
test
add
push
push
or
mov
test
call
sub
xchg
jmp
dec
sbb
(bad)
std
in
cmp
jge
xchg
jne
mov
pop
mov
mov
cmp
push
and
dec
fdivr
pop
mov
enter
inc
ror
aam
clc
mov
cld
fmul
loopne
std
jg
test
mov
mov
cmps
pop
add
mov
xchg
add
inc
enter
test
xor
test
cmp
adc
adc
jle
add
mov
push
call
pop
sub
pop
fs
jg
mov
mov
mov
mov
fadd
or
cmp
aas
cld
fwait
or
mov
mov
and
inc
push
out
jle
icebp
adc
dec
int3
mov
cmovle
adc
std
idiv
cmp
jge
cmp
jle
pop
pop
mov
dec
nop
test
mov
out
adc
mov
cmc
cmp
js
ja
cmp
jbe
jp
jnp
inc
cmp
cli
int3
ror
ror
std
movd
cld
mov
jmp
out
push
ss
lods
ret
xchg
mov
xor
mov
and
or
dec
adc
ret
out
mov
push
mov
and
movs
cs
std
inc
add
mov
mov
push
xchg
retf
int
loopne
and
mov
mov
inc
popf
pop
mov
dec
add
add
into
mov
fsub
mov
cmp
jne
cmovle
xor
les
xor
or
pop
movlps
and
add
mov
add
rol
out
int3
into
sub
mov
cmp
je
mov
frstor
loope
sub
clc
cld
sub
cmp
jmp
jle
dec
add
mov
xlat
inc
clc
out
and
in
inc
lahf
or
enter
push
jmp
lsl
sbb
or
dec
loope
adc
pop
mov
push
pop
mov
(bad)
mov
loopne
movs
sub
adc
push
adc
jae
inc
mov
mov
call
mov
div
je
test
je
fild
add
push
push
adc
loopne
xlat
xlat
std
inc
sub
mov
cld
or
or
jmp
inc
or
jl
sbb
fist
add
push
mov
sub
fndisi(8087
or
or
pop
mov
hlt
cmps
fstp
push
cld
je
xchg
iret
std
jg
rcr
pop
jmp
retf
sbb
ja
je
call
push
dec
jb
jl
or
pusha
daa
xchg
jo
inc
mov
sub
lea
and
je
sbb
in
jmp
push
pop
jle
adc
je
dec
adc
mov
out
aaa
push
jne
push
ror
cmp
idiv
popf
(bad)
mov
idiv
arpl
lea
push
call
cmp
jne
or
mov
test
pop
xchg
in
dec
call
push
push
push
cwde
push
or
test
xchg
inc
push
call
inc
push
dec
add
mov
in
inc
push
pusha
or
push
fs
adc
fs
adc
sbb
fs
les
fs
inc
and
and
and
pop
mov
and
xor
xor
xor
ins
jecxz
adc
cmp
test
mov
cmp
and
inc
inc
inc
loopne
ins
inc
inc
push
hlt
dec
mov
in
push
adc
fs
push
inc
pop
sbb
pusha
adc
or
sbb
ins
jecxz
sbb
mov
adc
scas
add
das
sar
mov
mov
ror
xchg
jecxz
pop
ret
retf
arpl
or
mul
mov
sub
pop
push
pop
and
ret
hlt
mov
sbb
adc
sub
push
xor
inc
or
add
or
je
cdq
xor
in
jae
xor
cpuid
mov
push
popf
inc
push
or
call
add
dec
or
in
dec
lock
adc
imul
xor
dec
push
or
sar
push
or
neg
push
sbb
pop
inc
push
pop
cpuid
mov
out
ss
in
and
and
cmp
je
into
std
mov
add
je
cmp
push
push
add
je
adc
stos
ffreep
mov
jne
or
add
psadbw
xchg
jae
jmp
adc
pop
jl
push
xor
lea
jg
fucom
pop
imul
(bad)
mov
pop
add
dec
or
sti
mov
mov
ret
add
iret
add
xor
outs
sub
shl
mov
dec
or
(bad)
dec
sbb
push
jae
add
int
add
je
sti
mov
je
or
jae
add
inc
xor
daa
test
je
or
cmp
loopne
sbb
pop
push
and
or
cmps
cmp
retf
add
pop
ret
test
mov
xor
bound
(bad)
push
push
xor
push
fisttp
fs
pop
inc
icebp
sti
test
jne
cmp
inc
inc
add
or
add
rcl
jg
sbb
add
jmp
inc
jmp
sbb
imul
std
and
fld
pop
jbe
in
adc
test
ins
ret
pop
inc
mov
cmp
inc
pop
icebp
xchg
dec
cmp
cmp
je
ret
ja
sbb
dec
mov
mov
dec
adc
(bad)
mul
add
adc
or
sti
pop
mov
mov
lea
sub
add
add
out
add
shl
inc
cld
xor
push
mov
call
dec
mov
(bad)
(bad)
(bad)
call
cld
sub
shl
lahf
mov
pop
(bad)
in
push
xor
dec
mov
xor
shl
adc
jns
add
(bad)
mov
clc
add
test
inc
mov
xor
mov
mov
mov
ins
adc
add
mov
xlat
add
jno
loop
lahf
je
inc
push
push
push
push
push
movs
or
fadd
je
push
or
mov
test
fst
mov
jmp
sbb
mov
pop
pop
test
jne
cmp
je
push
xchg
push
pushf
mov
nop
add
mov
(bad)
std
adc
(bad)
aad
add
test
jne
and
mov
or
add
mov
mov
add
adc
add
cmp
shl
imul
sbb
sub
jne
xor
jbe
pop
mov
pop
adc
ins
popa
jne
inc
pop
mov
sti
adc
scas
popa
add
and
or
pop
adc
jnp
arpl
test
mov
mov
cmp
pusha
sub
test
hlt
add
aaa
push
and
int3
sub
fld
jle
adc
ret
lea
fadd
push
mov
push
or
push
cmp
sub
xchg
test
fsqrt
ins
sbb
cmc
mov
test
add
(bad)
fucomip
jae
daa
and
test
jne
cmp
jne
jmp
mov
fsubr
jmp
push
je
leave
push
push
(bad)
fstp
fld
dec
pop
jmp
mov
inc
inc
xor
fld
fldz
fnstsw
fnstsw
push
test
jp
fstp
in
adc
ficom
jne
movzx
test
ja
lds
test
fldenv
add
(bad)
(bad)
fnstsw
test
jne
aas
dec
(bad)
(bad)
push
inc
push
adc
add
mov
test
jns
or
or
ror
je
cli
(bad)
mov
or
and
mov
jo
mov
out
or
jle
fstp
sbb
push
adc
fstp
mov
movzx
adc
out
or
dec
mov
pop
lea
outs
push
mov
inc
adc
jge
mov
lea
mov
es
jg
fstp
or
mov
fstp
call
iret
jne
push
out
iret
inc
aad
inc
pop
adc
jne
ud0
or
mov
mov
cmp
jne
or
ja
push
jmp
mov
inc
or
sbb
add
add
into
fild
push
fild
add
jmp
test
je
pop
ret
test
je
push
jmp
mov
inc
lock
pop
pop
ret
movzx
and
add
arpl
adc
fdivrp
sbb
cld
push
mov
lea
push
out
or
loopne
push
adc
and
mov
sbb
adc
or
inc
and
push
lea
fisttp
sub
add
adc
pop
sbb
adc
pop
inc
rol
pop
jne
and
dec
sub
fstp
or
fld
cmp
inc
jl
popf
add
jmp
sbb
push
aaa
or
jo
add
(bad)
mov
test
les
pop
pop
xor
add
adc
stc
and
mov
push
mov
and
push
cld
pop
mov
adc
je
fistp
out
pop
and
repz
sub
add
and
das
sbb
add
cmp
inc
sbb
add
sbb
jmp
mov
test
shl
je
sbb
je
cmp
jne
stos
fldenv
cld
out
fcomp
fnstsw
fucomp
cmp
les
adc
cvttps2pi
jmp
adc
inc
push
push
or
pop
inc
or
fstp
and
mov
bound
push
xor
hlt
mov
inc
inc
fld
fldz
fucompp
jle
add
and
(bad)
add
shl
fst
out
mov
(bad)
(bad)
aas
dec
or
push
hlt
fldz
cmp
jge
xor
fmulp
inc
jmp
fcompp
xor
adc
inc
jne
inc
mov
mov
or
outs
add
inc
(bad)
inc
or
sar
hlt
test
hlt
outs
loop
je
or
inc
shr
test
pusha
je
(bad)
(bad)
out
mov
ins
clc
dec
jne
fld
test
je
fchs
mov
fstp
sbb
icebp
(bad)
jmp
xor
inc
test
pop
je
push
adc
mov
adc
and
adc
out
jecxz
rol
add
jecxz
cmp
loopne
clc
push
sbb
push
cmp
dec
bound
cmp
or
pop
push
and
outs
les
push
lods
pminsw
in
arpl
leave
mov
inc
and
mov
fisubr
xor
jbe
dec
add
push
mov
dec
cwde
inc
or
adc
rcl
or
mov
jg
or
test
je
or
or
test
jb
dec
into
adc
ds
jl
test
inc
or
dec
es
(bad)
cmp
shl
not
xor
and
xor
enter
or
or
call
add
call
mov
add
shr
adc
ret
adc
mov
inc
mov
test
cld
or
ret
pop
repnz
inc
or
ret
test
xchg
jbe
add
ret
push
jmp
xor
sub
or
jmp
iret
push
push
mov
and
or
mov
jmp
push
es
sti
std
or
jmp
and
cld
mov
mov
jge
aad
cmp
sbb
jmp
std
sar
ds
enter
or
or
mov
(bad)
out
(bad)
fbld
mov
shl
xor
and
xor
adc
pop
and
ja
cld
mov
and
mov
fnstcw
imul
jle
or
add
pusha
pusha
sbb
fld
fstp
jmp
push
xchg
cmps
sti
std
inc
and
and
fstp
std
sbb
dec
or
fld
fstp
aad
add
sbb
add
lods
arpl
inc
or
je
or
cmp
dec
or
add
add
add
mov
mov
pop
and
sub
je
dec
je
dec
je
dec
jne
or
std
jmp
mov
and
and
jnp
jmp
maskmovq
test
out
and
mov
shr
and
cmp
dec
jne
and
jmp
mov
and
in
ret
ret
jmp
or
sbb
aam
call
pop
fld
fstp
jmp
fld
fstp
pop
daa
add
ja
sbb
je
add
pop
ja
in
pusha
adc
xchg
cmp
push
or
in
and
call
cmp
inc
cmp
jl
jmp
mov
mov
mov
test
je
sub
inc
call
clc
inc
adc
inc
in
push
mov
push
xor
ja
mov
mov
xlat
ja
in
cwde
sbb
(bad)
call
mov
pop
clc
(bad)
pop
sub
in
es
pop
jmp
xor
mov
inc
and
jne
or
or
or
paddsb
jae
add
test
sub
out
inc
je
(bad)
nop
add
ldmxcsr
jmp
fist
mov
inc
shl
adc
je
xor
ret
push
out
popf
add
xor
std
ja
(bad)
mov
loopne
mov
out
call
out
adc
fnstsw
fnclex
movsx
xchg
test
pop
xchg
fnstcw
pusha
(bad)
(bad)
fistp
and
and
or
movzx
mov
fldcw
sub
add
je
aas
push
pop
mov
std
cmp
pop
or
loopne
cmp
popf
mov
and
or
ins
jb
fldz
fld1
fdivp
fstp
xor
aam
xor
mov
aas
pop
movs
mov
mov
test
ss
loopne
sbb
add
ja
inc
popa
sbb
je
pop
push
jle
or
loop
retf
adc
add
mov
adc
inc
or
push
sub
out
sbb
jb
std
inc
inc
or
hlt
mov
push
cmp
stos
(bad)
imul
or
inc
cmp
jne
cmp
pop
nop
call
test
push
or
pop
les
inc
sbb
call
leave
jle
push
out
outs
and
mov
inc
or
ja
add
(bad)
jmp
cmp
je
cmp
je
mov
mov
jns
add
cmps
jle
rol
and
shr
inc
leave
shl
push
dec
or
jmp
repnz
cdq
sar
xchg
mov
lahf
jp
fdivr
pop
or
or
shr
push
jmp
xor
sbb
dec
loope
xor
shr
or
imul
retf
sbb
cmp
or
stos
loopne
mov
cmp
ja
mov
mov
push
mov
leave
clc
daa
stos
loopne
jge
push
test
js
sub
loopne
ds
test
addr16
mov
cmp
push
repnz
mulps
push
les
or
push
mov
lock
or
mov
pop
adc
xadd
test
jl
cmp
xor
mov
inc
sbb
(bad)
jne
sbb
push
push
pop
imul
jmp
mov
ror
arpl
mov
xor
mov
mov
in
sbb
sub
push
es
inc
pop
cs
add
mov
push
push
ret
jbe
inc
popf
inc
sar
pop
leave
test
jns
js
movs
and
not
mov
adc
nop
jl
sahf
and
add
dec
pop
push
out
lea
sub
sub
aaa
add
dec
fisttp
lock
adc
mov
in
mov
mov
push
out
mov
mov
add
mov
fst
pop
into
adc
test
jne
(bad)
mov
pop
mov
push
mov
mov
inc
or
jne
fwait
add
push
je
add
jmp
fistp
test
inc
xor
(bad)
in
(bad)
nop
pushf
and
jne
enter
test
mov
ja
mov
xor
mov
jl
or
adc
mov
ffree
mov
out
mov
lahf
xor
test
js
loopne
pop
ja
movsx
call
or
enter
mov
dec
movsx
mov
mov
fdivr
jnp
mov
clc
add
cmp
ja
xchg
out
or
addr16
or
sbb
arpl
push
inc
mov
push
dec
aaa
icebp
(bad)
(bad)
or
sub
je
sub
je
sub
out
je
adc
ds
scas
jne
or
xor
fs
or
jmp
jno
test
(bad)
jmp
or
jmp
cmp
jne
mov
add
icebp
jg
mov
xchg
add
test
fnstcw
lea
or
sbb
(bad)
out
jo
data16
pop
sub
test
cmps
push
sti
dec
js
add
adc
push
in
inc
add
cmp
je
cmp
je
inc
add
sti
inc
cmp
jne
and
into
jnp
and
cmp
jne
inc
adc
add
cmp
xor
retf
adc
and
push
aas
mov
cmp
jne
mov
and
adc
addr16
daa
and
cmp
pop
cdq
and
nop
xor
aas
pop
(bad)
cld
sti
jmp
stos
pop
add
cmp
je
test
cmp
test
sbb
cmp
icebp
and
sub
cdq
push
movzx
push
imul
(bad)
out
loop
mov
push
mov
stos
cdq
mov
inc
mov
pop
push
inc
shl
(bad)
aaa
xor
fs
pandn
xlat
test
cmp
jg
call
std
je
dec
dec
je
add
dec
dec
jne
add
jne
push
jmp
mov
mov
or
and
rcr
div
push
daa
outs
clc
into
lds
add
ret
xor
data16
loopne
call
loopne
sahf
jne
sbb
retf
mov
cmp
je
mov
mov
cmp
ret
adc
test
test
mov
push
loop
cwde
(bad)
jl
mov
or
rdpmc
ror
cmp
test
out
dec
jne
sub
sar
outs
sub
call
scas
mov
mov
je
repz
call
xor
mov
cld
push
push
das
and
push
fcom
int3
and
fild
stc
je
(bad)
idiv
jmp
mov
mov
outs
ret
(bad)
ins
adc
jl
aas
(bad)
movs
push
or
test
je
mov
test
je
movsx
(bad)
jecxz
test
sub
enter
sar
leave
mov
xchg
push
mov
pop
push
dec
cmp
jg
aaa
cmc
sbb
and
pop
mov
std
(bad)
dec
mov
(bad)
inc
cmp
je
cmp
jne
xor
add
add
sahf
xchg
jmp
add
shl
mov
stos
or
sub
mov
jmp
mov
clc
mov
out
shr
pop
jbe
js
xchg
sti
add
jne
fist
mov
add
fndisi(8087
sub
xor
cmp
std
mov
adc
cmp
jmp
cmp
jle
mov
cmp
pop
add
fwait
jle
adc
out
lea
sidtd
add
cmp
movs
sbb
or
push
lock
adc
inc
cld
mov
cmp
(bad)
outs
shl
push
dec
lea
inc
call
push
mov
mov
add
and
(bad)
add
mov
dec
sbb
and
sub
pop
pop
cmp
addr16
cmps
and
loopne
mov
ds
ret
test
mov
inc
inc
pop
and
inc
test
sub
je
xchg
popa
ret
fucomi
add
test
push
je
and
mov
pop
mov
fisttp
mov
push
rcr
add
mov
pop
or
call
pop
icebp
xor
es
not
sbb
mov
sti
jmp
jg
outs
clc
adc
xor
jmp
mov
mov
adc
(bad)
xor
jl
cmp
jae
neg
adc
neg
mov
shr
nop
test
sar
xor
inc
jmp
jg
and
jecxz
add
add
ror
push
mov
mov
dec
mov
call
sar
je
mov
push
push
(bad)
inc
fisttp
xor
push
add
stc
cmp
add
push
jo
push
dec
mov
jmp
mov
add
dec
aaa
popf
push
add
sub
jmp
pusha
mov
jmp
push
xchg
mov
jmp
dec
cmp
je
js
xlat
add
(bad)
cmp
maskmovq
mov
dec
inc
jl
push
xor
jmp
and
pop
dec
addr16
imul
sbb
sub
icebp
mov
xchg
push
and
(bad)
sub
test
jne
leave
inc
push
in
pop
scas
or
mov
and
sub
cmp
and
int
push
and
loop
inc
or
fadd
test
xchg
cmc
inc
push
ret
loopne
into
in
push
lahf
lock
mov
mov
cmp
test
jle
mov
dec
mov
jnp
loope
(bad)
push
push
lea
mov
cmp
repz
cmp
fisubr
pop
lods
sbb
push
into
nop
mov
mov
jne
jmp
mov
hlt
sub
and
jnp
mov
pop
and
leave
js
iret
je
iret
les
fsubr
or
xor
pop
push
push
mov
mov
retf
jo
daa
test
idiv
dec
jecxz
add
mov
lds
pusha
push
sub
mov
jmp
add
and
add
add
outs
call
int3
add
and
push
mov
sub
push
stos
mov
outs
jmp
(bad)
fld
clc
pop
xor
mov
test
(bad)
lods
mov
popf
or
pop
mov
adc
add
bound
jp
popf
jb
daa
js
inc
inc
pop
adc
popf
push
add
test
not
sub
je
movzx
mov
hlt
pop
mov
pop
mov
push
mov
add
xor
test
sbb
(bad)
pop
aaa
not
or
jmp
mov
pop
xor
fcmovnb
add
jae
push
push
pop
dec
dec
fst
movzx
or
adc
cmc
and
push
pop
push
pop
or
into
xchg
jb
pop
aaa
imul
or
movs
sub
into
lahf
das
cmp
inc
adc
cmc
mov
adc
mov
stc
jns
and
ret
xor
test
sbb
xor
sbb
or
stc
pop
push
pop
clc
inc
adc
arpl
push
cld
cli
mov
add
neg
dec
imul
fwait
push
sbb
repz
fsub
mov
pop
popf
jp
sub
pusha
popa
pop
(bad)
icebp
lods
mov
jns
or
mov
mov
add
and
(bad)
mov
dec
je
cmp
je
push
pop
cmp
je
cmp
mov
test
sbb
push
pop
jne
sbb
xor
neg
and
fcom
popa
xor
mov
cmp
jne
cmps
(bad)
out
and
jg
xor
push
js
inc
pop
test
push
inc
clc
xor
xor
push
test
aas
pushf
jnp
cmp
test
fwait
or
je
repnz
je
dec
sbb
or
cmp
xchg
fisttp
push
lods
je
loopne
push
dec
jp
(bad)
jb
cmp
jnp
ror
pop
jo
scas
call
adc
dec
outs
movs
sbb
test
mov
dec
and
aam
jge
pop
pop
dec
sbb
sbb
call
mov
add
inc
jb
mov
jno
dec
sti
cmp
and
test
mov
pop
adc
cs
cmp
sbb
pop
and
call
mov
(bad)
icebp
cli
mov
mov
mov
div
gs
je
leave
mov
jnp
in
fisttp
shl
mov
rcr
scas
outs
(bad)
or
sar
scas
push
mov
jnp
pop
je
inc
sbb
xor
inc
mov
(bad)
aam
lahf
inc
cmp
jl
or
mov
fnstenv
jbe
pop
and
push
movzx
pop
add
xchg
mov
frstor
sub
test
sbb
jbe
xor
lds
lea
sbb
fimul
jo
lea
rcr
test
jns
mov
mov
inc
sbb
sbb
add
inc
ss
xor
mov
pop
movsx
out
adc
inc
mov
xor
movs
mov
movsx
bndldx
and
add
mov
inc
xchg
jb
movs
ja
cmp
sub
jae
xchg
mov
daa
push
or
test
and
in
push
jge
and
test
push
push
cmc
test
shl
sub
clc
mov
(bad)
xchg
xchg
or
xchg
sub
ja
bound
xor
jne
push
aam
jmp
xor
nop
jp
stos
mov
and
inc
xchg
xchg
stos
jecxz
push
out
aam
xor
inc
stc
stos
js
xchg
cmp
push
in
inc
retf
or
cmp
dec
lea
and
das
stos
cs
dec
inc
clc
push
fdivr
shrd
add
sub
jb
mov
lods
mov
popa
rol
lods
push
frstor
xchg
lods
jnp
xor
fmul
pop
push
fst
movs
rol
fwait
sub
xor
in
enter
xchg
jmp
retf
add
cmps
mov
sub
loope
xchg
movs
mov
ss
pop
cmps
ds
jmp
mov
pop
fs
mov
clc
mov
clc
jne
mov
sbb
nop
call
fwait
loopne
cli
or
mov
push
cmps
mov
lea
push
xchg
mov
dec
jmp
xor
mov
cmc
and
lea
sbb
movs
or
leave
je
jmp
dec
mov
xor
push
jmp
mov
mov
mov
test
je
xor
dec
cmp
je
add
test
jne
sub
hlt
in
into
sar
dec
cmp
inc
cli
retf
and
or
aaa
mov
push
pop
or
and
sbb
sub
mov
rol
sbb
mov
push
push
in
call
mov
jmp
jb
mov
jecxz
sahf
sub
sahf
pop
sahf
fwait
sub
call
dec
(bad)
mov
and
data16
xor
xchg
dec
and
adc
into
mov
cwde
les
sub
and
adc
stos
or
test
ins
imul
pushf
test
enter
push
inc
mov
repz
sub
sbb
push
jecxz
push
div
(bad)
mov
and
mov
mov
aam
cmp
lock
lahf
adc
test
js
je
add
and
or
sbb
mov
movs
dec
ret
in
adc
fldenv
jo
push
jb
hlt
jg
test
inc
mov
cld
mov
call
dec
das
xor
test
push
inc
popa
sbb
push
and
sub
add
das
xor
or
add
sub
outs
push
sti
sub
or
comiss
(bad)
(bad)
out
add
push
push
inc
push
mov
lock
mov
test
je
or
or
push
mov
mov
(bad)
jl
mov
sub
cld
dec
push
lea
pop
cmp
je
mov
loopne
cld
cmp
pop
cmp
je
mov
adc
adc
rcl
add
push
jl
inc
pop
loope
add
fbstp
sub
cmp
xor
mov
pop
mov
or
push
mov
sbb
pop
adc
mov
xchg
punpcklwd
daa
loope
pop
pop
mov
sbb
sbb
cli
pop
push
call
pop
out
xor
push
inc
mov
sbb
add
xchg
mov
jae
ret
adc
or
add
jle
and
xchg
sbb
cwde
aas
idiv
sti
in
test
call
sub
push
pop
lock
add
lea
jle
cmp
sbb
cmp
jne
loope
scas
mov
inc
or
addr16
and
jg
cmps
mov
sbb
add
(bad)
adc
inc
or
xchg
popa
or
shl
out
outs
clc
aaa
je
mov
push
push
or
push
mov
jns
mov
rcr
pop
mov
or
mov
add
jl
mov
xor
cmp
test
mov
mov
jecxz
pop
cmp
mov
ret
jns
adc
test
add
popf
mov
pop
add
pusha
mov
sbb
ss
lock
dec
test
dec
dec
jo
and
sbb
xor
mov
pop
or
add
and
(bad)
bound
cmp
sbb
fwait
and
or
inc
ins
stos
or
xchg
fbstp
add
and
loopne
or
(bad)
jmp
div
mov
jns
lock
inc
pop
xor
mov
cmp
je
push
mov
aaa
xchg
sbb
inc
add
cmp
pop
jne
cmp
xlat
inc
dec
cmp
mov
pop
inc
pop
retf
adc
mov
dec
clc
push
inc
cmp
je
push
cli
cmp
nop
mov
push
sub
xor
push
sbb
cmp
inc
inc
in
xchg
inc
inc
inc
dec
push
mov
jle
add
mov
jo
sbb
pop
push
icebp
sbb
push
push
ror
jle
cwde
std
mov
push
aas
cmp
cmp
cld
sbb
adc
jle
out
js
xor
and
cmp
cmp
cmp
adc
mov
push
or
aas
add
sbb
xor
cmps
cmp
int3
lock
xor
add
lea
or
or
les
mov
in
xor
xlat
pop
ret
push
jns
js
aaa
cld
mov
cmp
lea
push
mov
adc
je
inc
cmp
mov
rcr
add
not
or
fisttp
jne
xor
popa
adc
ret
pop
mov
add
mov
and
xor
inc
mov
mov
push
add
mov
xchg
jmp
inc
and
inc
xchg
push
and
mov
data16
out
mov
push
mov
mov
test
outs
pop
(bad)
shl
or
push
jnp
not
sbb
inc
cmp
ret
or
cmp
or
mov
sbb
(bad)
xor
ret
push
or
mov
lahf
mov
jecxz
xor
sbb
rol
mov
pop
pop
inc
cmp
mov
or
cmp
sar
(bad)
std
dec
adc
jge
push
pop
mov
add
aaa
inc
sbb
add
mov
xchg
dec
inc
test
je
outs
and
or
stos
scas
add
cmp
jl
or
mov
xor
adc
xor
les
cld
and
add
mov
shl
jge
push
mov
(bad)
ja
dec
cmp
push
fdiv
cmp
or
adc
(bad)
pop
push
jg
popa
mov
mov
sub
(bad)
push
mov
test
je
cmp
je
aas
std
ja
sub
push
xor
and
pop
add
push
cmp
jl
in
jg
fcomp
je
cmp
jne
push
dec
aam
(bad)
or
mov
pop
pop
push
inc
or
xor
add
fistp
mov
push
scas
cwde
(bad)
std
pop
mov
jge
xor
cmp
sbb
xchg
out
and
add
mov
or
test
add
pop
inc
cmp
cmp
xchg
imul
and
shr
into
mov
jo
arpl
jp
out
xchg
pop
outs
inc
arpl
fsub
xor
mov
rcl
add
or
push
mov
add
es
or
adc
mov
xor
pop
sub
mov
dec
push
and
push
mov
push
mov
test
sar
mov
add
mov
je
push
(bad)
jmp
push
jae
cld
(bad)
push
push
sbb
or
popa
pushf
xor
push
sbb
adc
dec
xchg
or
add
or
or
(bad)
adc
mov
or
mov
dec
dec
jne
inc
(bad)
adc
shr
fistp
(bad)
lea
jmp
add
cmp
jbe
mov
push
dec
cld
(bad)
test
lods
(bad)
fs
or
mov
or
inc
sbb
inc
xchg
je
lock
inc
shl
mov
add
je
test
push
push
loopne
lock
inc
in
cdq
daa
fistp
js
mov
jne
data16
add
pop
mov
mov
(bad)
dec
retf
pop
mov
mov
sub
add
xor
mov
mov
pop
add
cld
push
push
mov
fcom
outs
push
out
sbb
movs
je
mov
sub
mov
cld
iret
cmp
jge
sbb
pop
test
dec
lock
mov
shl
out
enter
mov
fstp
sti
je
sub
jl
mov
and
cs
push
push
mov
or
add
or
dec
int3
je
push
out
adc
adc
retf
aad
xchg
dec
xchg
adc
(bad)
test
jae
stc
jb
mov
loop
or
sub
add
sub
sbb
inc
rcl
(bad)
xor
adc
cs
pusha
jo
je
hlt
or
push
and
push
xchg
inc
push
mov
mov
cwde
jecxz
test
add
test
fdivr
sbb
scas
aam
adc
sti
loope
jle
push
neg
sbb
push
cmp
jne
pusha
add
(bad)
cmp
je
ret
popf
mov
ret
push
inc
idiv
je
cs
(bad)
(bad)
fstp
std
ins
dec
inc
clc
mov
xor
push
push
cmps
xor
lea
add
pop
mov
(bad)
icebp
inc
cmp
jne
push
adc
cmp
je
mov
pop
inc
jl
pop
adc
das
inc
pop
mov
adc
sbb
dec
aas
inc
movaps
lock
jg
pop
cmp
jae
ror
xor
sysenter
fiadd
jle
inc
ja
add
jmp
xor
ss
jne
and
or
retf
sub
stos
cmp
mov
ret
sti
clc
je
push
pop
inc
cmp
jne
lea
push
mov
adc
push
ja
jo
or
jne
sbb
sbb
sub
gs
inc
inc
pop
mov
hlt
mov
out
adc
cs
or
push
sub
fbld
shl
(bad)
jno
push
lahf
cmp
je
int
or
or
mov
jmp
out
adc
xor
sti
std
clc
push
or
mov
cmp
fsubrp
xor
mov
push
mov
int
cld
xor
mov
rol
xor
dec
jmp
mov
mov
xor
(bad)
pop
add
nop
mov
hlt
xor
(bad)
or
push
test
lea
add
mov
in
jl
or
adc
dec
test
clc
jmp
push
outs
xchg
sbb
fwait
ss
inc
xor
cmc
es
mov
jae
push
ja
popf
mov
enter
add
cmp
jne
test
fadd
pop
inc
lahf
je
call
inc
dec
mov
mov
jmp
shl
sbb
cld
cmp
jne
inc
push
jecxz
and
fcom
add
leave
jne
xchg
jmp
mov
inc
add
jmp
cmp
je
in
or
inc
or
cmp
mov
mov
and
fild
pop
mov
mov
mov
aaa
xor
int
shr
pusha
jnp
mov
jne
out
daa
jbe
adc
and
lock
(bad)
jmp
ret
adc
data16
pop
inc
and
sub
fucomip
call
mov
add
jbe
and
adc
fst
cmc
adc
cld
mov
push
pop
add
adc
cld
pop
imul
lods
pop
mov
inc
dec
or
adc
add
pop
inc
das
test
add
leave
into
or
sbb
idiv
into
adc
inc
push
aad
ret
push
push
push
xor
and
fild
stc
jge
push
jmp
inc
cmp
je
mov
cmp
je
cmp
cmc
dec
sub
je
cmp
je
xor
jmp
mov
xchg
dec
repnz
xor
or
jmp
mov
call
xor
inc
inc
mov
nop
(bad)
mov
or
add
test
je
mov
pop
push
hlt
sbb
call
(bad)
inc
dec
je
sub
je
sub
cmp
jne
mov
inc
cld
pavgw
sbb
adc
sub
es
mov
ret
inc
jne
adc
(bad)
fistp
inc
clc
sub
in
test
jne
and
and
or
or
fsubr
je
jne
push
and
(bad)
(bad)
(bad)
jmp
sub
je
sub
je
dec
je
mov
sub
jne
test
add
add
jne
or
shl
inc
mov
ja
and
jmp
or
inc
or
clc
ja
packuswb
or
fdiv
loope
push
add
fcom
test
mov
std
add
push
push
jnp
call
push
inc
daa
das
test
and
(bad)
mov
je
cmp
jne
scas
inc
or
cli
out
(bad)
mov
jne
add
jl
add
jmp
jae
mov
ficomp
or
add
inc
add
and
pop
cmp
pop
(bad)
(bad)
inc
mov
jae
cmp
jne
push
adc
jmp
add
cdq
aad
ja
fcomp
mov
out
xor
mov
mov
mov
sbb
dec
xchg
js
mov
loop
cmc
rol
inc
or
neg
sar
dec
fdivr
mov
(bad)
jmp
add
idiv
div
sub
int3
fst
jecxz
pop
jecxz
imul
adc
push
pop
xchg
je
add
push
push
add
scas
pop
mov
add
or
call
clc
pop
jb
ja
loopne
arpl
or
in
push
scas
and
in
test
aam
add
xchg
xor
pop
or
mov
pop
test
adc
jns
clc
add
test
mov
je
(bad)
pminsw
retf
mov
push
inc
sbb
and
push
xor
push
icebp
mov
jbe
fwait
(bad)
test
mov
jne
inc
mov
ret
mov
inc
push
je
cmp
addr16
outs
mov
stc
inc
sbb
jbe
adc
out
fild
aaa
in
or
jne
mov
sub
sub
push
inc
add
push
popa
or
mov
(bad)
ds
mov
add
shl
jne
test
out
(bad)
mov
adc
add
aaa
clc
push
xchg
sub
ffreep
scas
jle
(bad)
lock
dec
jmp
call
dec
mov
sbb
je
inc
cmp
clc
jb
push
lea
sti
push
lea
loopne
push
or
mov
pop
mov
pop
daa
jo
or
jg
mov
ror
mov
dec
add
add
test
sar
cmps
add
mov
cmp
jb
mov
add
cmp
jb
loopne
jg
cmp
jb
cmp
pop
fmul
aad
enterw
aad
or
scas
mov
or
sub
adc
iret
mov
or
push
dec
mov
dec
jl
push
xchg
sub
sti
push
add
add
les
mov
cli
mov
shr
cmp
add
add
push
aam
sub
xor
or
(bad)
adc
sete
mov
iret
or
pop
shr
lock
ja
jp
cld
rol
lahf
rcr
xor
cmp
stos
or
push
sbb
xchg
sbb
sti
ret
jg
xor
push
mov
or
sahf
add
pop
cmp
jb
ret
(bad)
js
paddsb
stos
outs
inc
mov
lods
push
add
cmps
cmp
jmp
lods
fwait
mov
dec
add
mov
xor
(bad)
push
mov
xor
xchg
push
cdq
daa
fsub
add
push
jmp
add
jp
ret
lahf
fisttp
mov
ret
jb
std
mov
jne
push
jne
(bad)
pop
mov
fdiv
shr
movs
lds
call
call
loope
push
dec
adc
add
push
sub
dec
push
cmps
adc
adc
ror
bound
push
je
retf
mov
jp
push
xor
ss
lahf
adc
gs
mov
aas
or
jmp
cmp
jne
xor
adc
adc
add
mov
xor
sub
xor
(bad)
or
push
ror
jnp
lods
mov
or
stos
push
and
stos
stos
(bad)
out
mov
add
mov
inc
dec
jne
lea
lock
mov
inc
dec
jne
xchg
int3
sub
adc
mov
(bad)
call
call
inc
popa
cmp
fild
mov
call
lock
out
mov
ja
inc
cmp
jb
mov
add
pop
adc
and
pop
movzx
jmp
cmp
jae
(bad)
mov
and
ret
add
mov
test
jne
push
pop
lea
push
mov
push
pop
jmp
leave
cmp
test
jge
pop
push
sbb
push
xchg
mov
(bad)
jmp
and
std
pop
jbe
daa
and
retf
movzx
push
cmp
sbb
mov
add
loope
jl
and
test
sub
pop
mov
mov
jmp
push
lea
dec
mov
add
in
shl
(bad)
sti
cmp
ja
inc
adc
cmp
add
or
pop
in
jmp
lea
mov
jmp
mov
mov
dec
pop
mov
mov
inc
adc
adc
sub
ret
icebp
push
mov
call
sbb
ja
je
mov
sub
and
and
aaa
test
aaa
and
cmp
test
je
push
jne
aad
add
cmc
sahf
sub
mov
pop
mov
jp
jne
mov
cmps
fiadd
push
adc
pop
popf
jp
shr
iret
iret
jmp
jmp
jae
mov
shl
cmp
je
mov
mov
(bad)
mov
mov
jo
mov
rep
div
gs
push
outs
pop
hlt
mov
arpl
xchg
and
jg
(bad)
adc
mov
cmp
pop
and
or
add
(bad)
test
jne
std
and
test
or
mov
mov
mov
adc
jp
mov
(bad)
(bad)
jp
jp
mov
into
mov
cmp
jge
data16
pop
dec
mov
call
imul
outs
jge
mov
mov
loopne
jecxz
cmp
xor
xor
cmp
in
or
pop
or
sbb
dec
lds
adc
xchg
jg
jp
cmp
xor
sbb
cmps
(bad)
jmp
cmp
jne
cmp
popa
(bad)
sti
add
dec
sbb
stc
xchg
inc
add
adc
call
ror
icebp
test
jne
add
dec
das
pop
xor
push
dec
push
xor
mov
out
or
cli
cmp
je
shl
xlat
add
cmps
cmp
sti
call
mov
sti
jmp
ret
push
mov
daa
call
daa
popa
cmp
add
lea
js
scas
inc
adc
pop
add
xor
mov
js
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
aaa
(bad)
call
jmp
pusha
add
cmp
jbe
add
cmps
fisttp
aam
mov
inc
dec
jne
dec
aaa
push
cld
ss
xchg
dec
mov
pop
jle
sub
xor
lea
aaa
icebp
int
jo
aas
cmp
shl
adc
test
dec
jne
dec
pushf
cdq
imul
mov
out
fdivp
inc
loopne
or
inc
in
mov
je
mov
jmp
xor
jmp
cmp
jae
mov
push
sbb
mov
ja
loope
add
shl
in
in
mov
aas
push
shl
inc
inc
push
mov
mov
add
hlt
mov
lea
mov
lea
mov
fmul
mov
lods
pop
cmp
xor
cmp
cld
mov
(bad)
call
inc
mov
cmp
jne
mov
cmp
loopne
repz
and
adc
and
add
shl
add
dec
push
pop
or
jmp
dec
imul
inc
ror
push
mov
cmp
ror
test
lea
cmp
jb
or
loopne
jae
sbb
xor
repnz
mov
or
inc
jl
ins
cmp
jne
mov
loopne
push
call
push
addr16
push
sub
cmp
jg
mov
mov
cmp
jne
pop
mov
and
call
std
add
ins
jl
cmp
mov
jne
mov
es
fld
or
cmp
jo
ins
jmp
cmp
nop
adc
jmp
or
mov
and
mov
cmp
adc
cld
jmp
cmp
fild
jmp
cmp
in
out
mov
and
cmp
jmp
cmp
ja
pop
jbe
add
jbe
push
call
pop
mov
jmp
push
inc
add
out
out
push
pop
pusha
pusha
mov
and
push
push
inc
ins
xor
js
add
and
or
add
fadd
jecxz
into
lods
dec
cmc
pop
test
fmul
mov
cmp
jae
(bad)
jg
sub
and
mov
and
mov
pop
and
or
mov
mov
aas
fadd
jp
jmp
lea
mov
cmp
je
(bad)
jmp
mov
stc
sub
sar
inc
fadd
ror
push
icebp
mov
mov
sbb
test
ror
push
shl
fisub
pusha
mov
jne
or
mov
mov
push
pop
mov
mov
cmp
jge
mov
stos
xor
pop
cmp
je
mov
mov
jb
in
aas
adc
adc
and
rcr
std
pop
mov
mov
mov
dec
mov
mov
push
mov
mov
mov
jnp
dec
in
jbe
inc
ret
add
mov
jmp
mov
into
fadd
cmp
clc
cmovae
add
or
inc
push
neg
cmp
int3
neg
icebp
fwait
mov
push
(bad)
shr
jge
leave
mov
addr16
ja
xor
push
push
je
movsx
or
lods
push
(bad)
(bad)
cmp
add
test
jne
push
pop
jmp
lea
in
ret
add
lea
ins
jmp
jne
sti
dec
dec
popa
adc
cmp
mov
ss
jne
push
inc
jmp
cmp
jne
and
pop
or
sbb
ss
(bad)
and
push
std
mov
push
push
mov
mov
test
cld
add
cmc
and
pusha
sahf
jne
rcl
push
push
pushf
mov
dec
jnp
xor
push
xor
xchg
jge
inc
loop
mov
test
jb
aam
(bad)
out
outs
add
add
push
adc
jg
cld
jg
or
mov
add
inc
aas
jae
std
outs
or
mov
je
jae
lea
add
add
ror
ss
or
add
sub
sbb
ret
aas
lea
push
inc
inc
dec
and
outs
cli
stc
jb
add
mov
adc
xchg
add
mov
or
inc
mov
or
mov
fwait
scas
scas
out
or
or
jg
test
inc
or
dec
jno
push
push
pop
cmp
jne
ffreep
call
xor
test
push
sete
mov
sbb
add
mov
mov
into
xchg
dec
xchg
sub
mov
(bad)
cmp
je
add
or
lahf
mov
xchg
jmp
(bad)
cmp
je
out
cmp
cs
pop
xor
shl
mov
clc
inc
push
fstp
add
inc
mov
je
test
pop
pop
jne
test
jne
cmp
push
pop
cmp
or
sti
jno
push
or
mov
lock
jmp
or
mov
pop
add
(bad)
pusha
ja
nop
push
or
cld
je
mov
sbb
je
sub
or
xor
jne
inc
sbb
pop
dec
sbb
jmp
push
mov
scas
sub
in
or
xlat
sti
paddd
pop
scas
cmp
je
inc
addr16
stc
pop
scas
add
xchg
cmp
lea
icebp
(bad)
jo
lea
pop
test
je
lock
push
inc
cmp
lea
popf
xor
fidivr
rol
aas
inc
pop
mov
jne
add
lea
xor
in
mov
dec
inc
jg
sbb
(bad)
mov
xor
mov
xchg
mov
inc
outs
add
shl
mov
stos
jb
add
cmps
and
pop
loop
ror
jl
je
push
or
sahf
ss
mov
add
std
outs
idiv
jmp
pop
sub
mov
pop
ret
cmp
mov
and
jmp
adc
gs
add
push
mov
ja
(bad)
mov
(bad)
cmp
je
test
je
not
inc
ss
lea
rcl
cmp
sbb
hlt
mov
test
loop
inc
xor
popa
mov
or
arpl
dec
lock
call
xor
xor
cmp
jne
mov
test
jne
mov
or
shl
or
mov
pop
cwde
cmp
pop
push
ror
inc
jge
inc
push
xor
push
in
loope
push
mov
cmp
je
add
push
clc
pop
lock
sbb
pop
retf
bound
(bad)
or
or
or
and
iret
dec
inc
pop
mov
pop
push
sbb
mov
clc
mov
add
clc
mov
push
pop
popf
cmp
ja
adc
(bad)
je
sbb
aam
rcl
inc
mov
rcr
ja
xor
adc
outs
shl
mov
popa
jo
add
mov
and
sti
js
fiadd
mov
je
movdqa
add
add
adc
inc
or
pusha
jo
mov
adc
aaa
mov
shr
je
jl
mov
dec
adc
test
jmp
jle
add
adc
mov
inc
dec
sti
mov
push
pop
pop
ret
neg
add
sub
push
mov
and
dec
jne
shr
add
aam
inc
pop
and
push
stos
jo
mov
push
fmulp
rcl
pop
xor
push
loopne
and
or
cs
mov
ins
pop
push
jne
cmp
mov
mov
inc
lea
cmp
ja
lea
std
add
data16
je
(bad)
xor
xor
push
test
lahf
sbb
mov
popa
(bad)
addr16
jmp
mov
sbb
push
(bad)
bound
call
sub
je
add
lds
cmp
shl
mov
add
aaa
or
scas
dec
in
pop
or
push
and
pop
mov
push
mov
or
ja
lds
xchg
(bad)
dec
pusha
inc
add
fdiv
pusha
or
cwde
mov
leave
push
add
aaa
inc
xor
call
mov
mov
push
inc
add
clc
push
cmp
je
cmp
je
sbb
(bad)
out
or
and
inc
xor
inc
inc
mov
jne
xchg
test
sbb
add
mov
push
jb
mov
ror
rol
adc
pop
shl
fld
push
push
pop
xor
mov
add
or
inc
sub
ins
loope
mov
and
adc
fbstp
out
sub
jge
les
xor
test
out
daa
add
mov
popa
sbb
mov
jle
in
int3
xor
cld
adc
loop
aam
in
or
(bad)
sbb
cmp
adc
add
and
sub
cmp
jne
add
movs
shl
jne
sti
pop
cmp
popa
mov
rcr
add
ja
sar
add
push
and
icebp
(bad)
(bad)
adc
dec
and
push
push
push
push
push
push
inc
and
mov
fs
add
fbstp
mov
mov
sub
sbb
std
or
(bad)
(bad)
je
inc
xor
add
repnz
lock
push
lea
lea
mov
mov
cmp
jne
ret
mov
or
and
adc
les
shr
pop
popa
mov
xor
test
add
or
cmps
mov
sbb
(bad)
jnp
mov
push
push
push
pop
and
pop
cld
pop
and
mov
ret
push
icebp
adc
mov
push
push
push
cld
(bad)
call
sub
add
push
push
push
push
mov
xor
xor
xor
xor
xor
call
push
loop
adc
jmp
mov
leave
pop
(bad)
jmp
data16
inc
or
push
push
fs
or
movs
xchg
std
lahf
xor
push
push
push
pop
mov
loop
fadd
or
sub
sbb
jns
lock
mov
test
je
push
inc
out
jbe
sbb
(bad)
jne
out
sub
add
or
pop
mov
lea
adc
mov
je
mov
jg
and
sub
ja
mov
jns
xor
mov
pop
mov
out
call
cmp
inc
hlt
pop
add
push
push
clc
push
loop
cmp
mov
jmp
push
hlt
test
xlat
ror
push
push
rcl
popa
imul
inc
lock
mov
jmp
outs
pop
pop
jmp
cmp
jle
enter
xchg
jle
pop
nop
and
rcl
jmp
pop
push
add
test
lock
jl
jge
nop
add
cld
pop
inc
sbb
sub
rol
clc
gs
sbb
(bad)
(bad)
clc
inc
je
cmp
jne
push
push
jmp
(bad)
jp
int3
sub
ret
jae
cmp
je
pop
push
lds
or
add
xor
sbb
shl
jp
sbb
clc
aas
push
mov
xor
jne
mov
adc
rcr
inc
add
div
fisttp
ins
or
mov
fdiv
sti
sbb
or
(bad)
jne
(bad)
jmp
lea
mov
cmp
ja
or
pop
cmp
pop
mov
imul
push
les
adc
adc
adc
mov
pop
cmp
sar
jne
push
cmp
je
lea
push
ins
mov
add
lea
push
imul
push
xchg
stos
call
cmp
sub
mov
push
sbb
add
mov
add
sub
stc
ins
iret
shl
maxps
(bad)
call
loopne
shl
mov
cmp
stos
bound
lea
rol
je
out
test
sbb
neg
push
jg
(bad)
dec
and
and
xor
or
mov
(bad)
sti
mov
jne
sub
add
add
or
js
enter
popa
call
jmp
mov
cmp
mov
mov
movs
mov
jmp
mov
mov
std
daa
sub
mov
mov
mov
inc
inc
jmp
inc
call
add
xchg
and
mov
aaa
mov
inc
test
push
add
inc
adc
shl
outs
cli
sti
mov
and
pop
adc
add
mov
(bad)
and
cmp
add
mov
jnp
push
inc
call
ror
lods
mov
add
call
frstor
or
dec
test
add
(bad)
inc
mov
push
cmp
jbe
push
lea
pop
mov
cmp
je
out
(bad)
inc
add
out
mov
cmp
je
sbb
jne
add
mov
add
out
(bad)
jmp
inc
mov
jmp
inc
mov
push
sub
xor
(bad)
test
hlt
cmp
jne
jne
xor
pop
ds
jo
push
mov
mov
mov
dec
sub
fsubr
dec
clc
sbb
js
jg
cmp
jb
(bad)
jg
in
loopne
add
xlat
jmp
or
neg
(bad)
mov
xor
inc
xor
retf
or
sti
pop
push
push
push
push
dec
sbb
xor
div
mov
mov
add
adc
push
and
inc
jnp
inc
push
and
add
mov
cmp
cmp
fmul
push
loope
aaa
mov
pop
test
into
push
rol
xor
cdq
sahf
mov
mov
sbb
shl
ja
pop
sbb
push
adc
call
ret
jg
push
or
inc
or
pop
test
cmp
je
mov
aam
rcl
outs
(bad)
rol
adc
pop
pop
mov
jmp
sub
sub
sar
mov
add
xchg
sbb
xor
cmp
(bad)
mov
add
mov
ret
sub
add
push
pop
inc
sub
aam
and
outs
mov
lea
jecxz
mov
mov
mov
cmp
jmp
push
je
mov
dec
jns
neg
test
fs
cmp
jl
mov
cdq
idiv
add
std
rcr
push
add
mov
fadd
pop
je
cmp
jne
push
add
or
cmp
(bad)
xor
add
add
cmp
scas
mov
rcl
mov
adc
cli
mov
push
pop
push
push
rcl
add
or
adc
pop
nop
out
dec
inc
mov
mov
mov
mov
fadd
jmp
loop
not
lock
(bad)
mov
or
cmp
je
in
cmp
jmp
push
sub
arpl
setg
sub
lea
push
lea
xor
fdivp
ror
rcr
iret
add
ja
adc
xor
aas
or
mov
mov
pop
sbb
jo
add
jbe
imul
aas
ja
dec
es
lea
ins
sbb
inc
and
into
les
test
sbb
je
je
pop
cmp
pop
add
ins
mov
out
(bad)
and
cmp
je
pop
cmp
jne
mov
push
jo
jmp
mov
pop
add
lds
add
sar
idiv
pop
dec
inc
pop
jmp
add
test
jle
adc
mov
aas
mov
(bad)
push
cmp
imul
clc
neg
jmp
neg
cmp
jl
mov
cmp
adc
jmp
and
std
adc
or
es
cmp
leave
xchg
push
mov
add
or
ret
jmp
adc
pop
adc
int
push
fdivp
test
test
inc
fdiv
push
aam
call
xchg
scas
mov
shr
lods
imul
pop
bound
stos
sbb
ins
shl
mov
add
(bad)
jp
shl
sbb
(bad)
or
outs
jl
jp
lock
xor
dec
cmp
mov
mov
nop
lea
cmp
je
mov
sub
lea
jne
mov
mov
jg
dec
cmp
pushf
rol
inc
adc
es
je
mov
inc
test
jne
dec
mov
mov
test
sub
pop
mov
nop
jecxz
push
call
push
pop
(bad)
call
adc
outs
popf
xor
lea
mov
fs
loopne
mov
xchg
cmp
je
sub
jne
bound
or
jg
std
cmp
je
cmp
pop
add
dec
cmp
je
xor
or
add
push
inc
inc
mov
neg
pop
ror
mov
outs
xor
xor
push
popf
or
inc
icebp
mov
cld
mov
jmp
jl
mov
loopne
mov
pop
or
adc
ret
push
mov
inc
aaa
cmp
push
stc
or
out
dec
test
mov
into
mov
icebp
sbb
cmp
sbb
sar
ja
push
jns
xchg
pop
inc
mov
mov
mov
mov
inc
add
pop
cmp
fisub
fldz
fcomp
jnp
sbb
xor
loopne
jo
hlt
je
sbb
and
mov
push
lea
fldcw
idiv
adc
pop
ret
push
push
add
add
neg
adc
loopne
mov
ret
jnp
hlt
push
(bad)
dec
dec
add
inc
mov
cmp
ret
inc
inc
and
mov
inc
imul
xchg
or
out
js
lods
mov
and
shl
outs
mov
daa
sti
movsx
and
je
and
sub
cmp
sbb
je
lock
popa
mov
adc
jo
scas
cwde
xchg
lahf
popf
mov
in
xchg
or
sub
cmp
add
xchg
mov
and
or
push
mov
fwait
cs
push
jo
sub
in
xor
std
mov
nop
inc
and
stos
rcl
mov
es
pop
ror
inc
xchg
sub
sub
nop
sub
cs
out
jp
and
(bad)
xchg
stc
push
mov
sub
(bad)
jge
or
jb
mov
cmps
or
shl
sbb
or
cmp
(bad)
sti
inc
push
(bad)
push
push
pop
cmp
jl
jg
cmp
jbe
push
or
add
xor
add
mov
lods
add
mov
clc
push
pop
lea
mov
add
call
jne
cdq
idiv
push
mov
mov
mov
cdq
idiv
push
sub
or
hlt
(bad)
jg
loop
add
sar
add
add
cdq
mov
mov
mov
jge
inc
inc
or
push
add
sbb
(bad)
(bad)
jmp
mov
add
adc
xor
inc
test
jg
jl
test
jae
mov
(bad)
mov
mov
and
dec
or
inc
jne
xlat
je
dec
hlt
test
jne
lea
or
fcomp
cmp
jmp
mov
mov
xor
add
or
psadbw
dec
pop
mov
push
mov
cdq
push
cmps
add
mov
add
inc
mov
repnz
or
mov
xor
inc
loope
(bad)
(bad)
cmp
jge
inc
cmp
jl
dec
mov
dec
sub
xchg
push
inc
mov
mov
js
cmp
add
add
push
add
outs
push
shr
jg
aas
or
push
push
adc
(bad)
jg
mov
add
cmp
fdiv
ror
pop
pop
dec
mov
mov
or
sub
push
out
adc
call
add
adc
fcom
mov
jb
hlt
adc
jmp
pop
xor
adc
cmps
call
push
test
dec
push
mov
or
push
aad
jne
or
ror
dec
inc
jno
fwait
push
push
mov
fistp
paddusw
cmc
test
lods
push
clc
mov
jge
or
jne
pop
xor
test
lahf
add
daa
sbb
movzx
sbb
push
pop
movs
mov
mov
jle
jne
and
mov
pop
call
adc
push
push
mov
add
sbb
xor
dec
dec
cmp
in
shl
pop
sub
dec
and
push
push
push
jmp
push
adc
fs
push
push
cmp
add
add
mov
push
inc
pop
cmp
out
add
push
pop
xor
push
inc
pop
cld
xlat
add
pop
push
push
push
push
inc
inc
out
jns
xor
push
push
push
push
cli
pop
xor
dec
mov
pop
mov
(bad)
(bad)
inc
mov
sbb
xlat
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
mov
movs
pop
cli
cmp
jl
cmp
jg
cli
(bad)
(bad)
(bad)
cmp
jle
cmp
jge
xor
jmp
imul
add
add
imul
jnp
sar
jne
sti
inc
test
(bad)
std
xor
popf
shr
or
pushf
shr
pop
retf
mov
xor
or
mov
out
or
pop
in
pop
fmul
aam
pop
int3
mov
pop
addr16
add
adc
lea
retf
lock
les
add
add
lea
add
mov
jbe
inc
enter
xor
jmp
adc
sub
xchg
out
les
inc
hlt
lock
js
pop
je
mov
mov
sbb
push
add
push
add
and
and
mul
sbb
add
mov
ja
mov
xchg
push
and
mov
das
mov
jge
sub
je
jno
fstp
push
jl
scas
lock
mov
inc
cwde
pandn
mov
test
ss
jge
imul
hlt
mov
retw
jle
add
in
push
cmp
mov
adc
pop
jle
lds
jne
sub
adc
push
rcl
push
mov
push
mov
fwait
mov
push
push
mov
push
adc
mov
ja
mov
jmp
sub
ret
cmp
shl
jo
cmp
sti
lea
cs
add
es
mov
mov
imul
mov
or
pop
(bad)
sbb
ins
jns
cmp
jne
(bad)
push
push
push
mov
add
ja
dec
jb
inc
add
cmp
jne
mov
add
or
js
imul
xor
mov
cmp
je
cmp
jl
cmp
jg
inc
push
xor
mov
mov
mov
jl
aas
cmp
sbb
and
add
xor
inc
inc
xor
and
and
stos
add
je
neg
or
cmp
je
mov
bound
fbstp
xchg
test
adc
or
push
pop
push
push
pop
cmp
push
mov
mov
push
push
paddb
adc
scas
push
mov
mov
jl
jne
mov
xor
sbb
sub
test
je
mov
shl
mov
daa
inc
jnp
push
jmp
or
inc
lea
call
mov
lea
inc
imul
lods
sub
pushf
(bad)
inc
mov
mov
mov
cdq
pop
idiv
imul
sub
cmp
jg
add
add
add
cmp
xorps
test
bound
xchg
out
jg
or
ret
push
cdq
pop
idiv
xchg
sbb
cs
xchg
and
sub
aas
out
push
jmp
dec
mov
clc
jle
sub
jmp
loope
fs
push
dec
(bad)
ror
jmp
fmul
test
jge
imul
outs
clc
and
add
aad
inc
sub
shr
add
add
in
sub
inc
xor
inc
sub
adc
or
inc
lods
push
and
aam
mov
imul
sti
mov
cmp
push
add
dec
add
mov
or
enter
enter
rcr
cmp
xor
pushf
test
out
sub
cmp
cmp
jg
or
push
js
cmp
leave
js
frstor
loope
shr
adc
or
aam
push
mov
loop
mov
jb
push
mov
icebp
fadd
mov
xchg
inc
retf
test
mov
cmp
pop
leave
and
popf
in
mov
jge
je
outs
or
jmp
push
add
and
call
bound
inc
inc
pop
mov
sub
scas
or
or
rcr
jge
mov
mov
inc
or
and
(bad)
push
and
xor
push
add
(bad)
aas
xor
iret
call
mov
jne
(bad)
mov
jmp
push
lea
scas
add
aad
jne
bound
shr
ret
cmp
jmp
mov
and
out
dec
rcr
std
cmps
mov
cmps
xor
in
adc
pop
sbb
test
je
cmp
jne
xchg
fs
mov
or
rcl
mov
jns
xor
mov
adc
push
movzx
rcl
push
data16
and
lea
push
inc
loopne
adc
mov
cmp
jle
inc
or
and
aam
push
jo
ja
in
sahf
inc
adc
test
xchg
dec
pop
je
cmp
je
mov
jmp
xor
rcr
std
mov
lock
push
push
push
ja
add
fdiv
push
movs
push
push
retf
pop
cmp
cmp
(bad)
xchg
push
cs
add
jecxz
ror
(bad)
jmp
pop
ins
adc
or
jne
mov
aas
jmp
push
and
add
out
and
ins
ja
sub
or
sub
ja
mov
popf
or
rol
mov
dec
jmp
cwde
mov
inc
scas
call
mov
mov
inc
cld
movzx
mov
sldt
mov
mov
and
add
inc
lods
push
sub
jnp
inc
add
inc
call
ds
jmp
push
cmp
(bad)
clc
mov
mov
pop
jmp
xor
mov
mov
inc
inc
out
sub
add
loope
jg
jl
pop
jge
les
adc
inc
hlt
dec
cmp
je
mul
std
dec
fs
cld
rol
loopne
inc
or
(bad)
sbb
daa
or
in
mov
push
add
mov
mov
mov
sub
xchg
cmp
fdivr
xchg
mov
or
adc
jmp
gs
mov
inc
mov
xor
pop
cmp
xor
ret
push
jb
push
lea
hlt
or
or
jne
mov
sub
push
mov
in
mov
int
jecxz
or
movs
sub
and
pop
or
xor
sub
pop
cmp
je
push
or
mov
push
jl
or
push
stos
pop
and
cmp
je
test
sbb
in
and
dec
test
jnp
sub
enter
xor
push
adc
inc
inc
sub
cmp
aaa
add
jne
lea
cmp
je
push
push
lea
std
push
mov
es
ror
test
mov
or
les
dec
aaa
add
or
or
jecxz
lea
movzx
mov
arpl
pop
test
jne
cmp
jae
loope
fnstenv
push
push
push
jmp
cmp
jne
ret
push
sbb
push
arpl
cli
cmp
adc
xor
pushf
fnsavew
pop
adc
std
jmp
push
pop
cmp
je
sub
or
or
jg
jne
add
inc
loopne
mov
jae
or
retf
push
push
retf
inc
ins
mov
out
ja
pop
cmp
je
push
lods
mov
rep
and
xchg
seta
xchg
push
sub
or
call
inc
mov
add
pop
scas
lds
and
push
lea
and
mov
inc
mov
mov
pop
jge
leave
mov
enter
adc
popf
inc
and
cmp
add
sbb
add
add
test
sti
dec
inc
jne
cmp
jne
mov
fcmove
into
or
push
sub
mov
daa
inc
(bad)
add
cwde
sbb
dec
cli
scas
(bad)
idiv
mov
lds
push
push
cmp
xor
test
jae
loop
je
or
sub
inc
ins
test
pop
lea
mov
push
cmp
out
mov
fwait
sbb
and
mov
push
push
je
dec
inc
icebp
jmp
push
cmp
cmp
mov
or
jg
fisttp
test
and
out
pusha
cmp
jecxz
add
pop
push
adc
mov
cmc
test
outs
in
pop
pop
sbb
loope
and
lea
adc
and
popa
mov
mov
sbb
imul
shr
sahf
sub
mov
sbb
add
repz
sbb
mov
mov
xor
pusha
mov
lock
adc
je
mov
fadd
sbb
ins
pop
je
arpl
(bad)
lods
jmp
mov
mov
adc
push
sqrtps
mov
sub
jb
sbb
sbb
inc
push
in
popf
inc
xor
xor
es
mov
cmp
test
jmp
jle
push
lea
lea
push
mov
dec
mov
inc
cmp
jl
arpl
inc
mov
push
or
in
add
add
xchg
es
(bad)
fist
loop
cmp
or
and
push
push
cmp
clc
mov
inc
rcl
test
or
loope
add
jbe
or
sbb
gs
fadd
int
push
mov
and
in
mov
inc
xchg
in
loopne
je
das
cmp
mov
jle
push
popa
ja
ficom
add
xchg
push
jge
std
out
jbe
inc
jo
jne
cmp
add
lahf
dec
push
into
adc
cmp
fwait
xor
mov
mov
cs
mov
inc
je
cmp
sub
xchg
loopne
(bad)
adc
jne
in
int
jmp
jne
cmp
pop
not
scas
enter
out
cmp
and
test
mov
cmps
push
add
mov
fwait
xchg
mov
fdiv
rcr
push
lea
mov
mov
(bad)
(bad)
jmp
xor
ja
cmp
push
push
push
mov
xor
mov
lea
mov
mov
push
shl
jl
inc
hlt
lea
fld
adc
push
push
neg
mov
mov
xor
fild
and
push
mov
add
out
das
popa
mov
push
les
cmp
(bad)
in
jl
cmp
jne
mov
mov
adc
clc
xor
sub
push
mov
dec
mov
mov
xor
int
add
loopne
push
pop
sbb
sbb
jmp
mov
pop
clc
(bad)
not
or
mov
push
in
push
dec
dec
sbb
dec
adc
lods
xor
push
add
sub
dec
add
adc
test
adc
fdivr
loop
mov
mov
(bad)
adc
push
xchg
test
jl
mov
xlat
test
add
sti
adc
dec
jne
cmp
add
mov
cmp
ud0
adc
mov
and
xor
sbb
mov
jbe
je
cmp
sbb
add
mov
jge
xor
das
out
jb
cmp
or
cmp
clc
je
(bad)
fcom
jmp
sti
xor
jle
mov
cdq
jns
into
xor
mov
fsubr
sbb
test
jne
jns
push
inc
hlt
push
jne
loop
sti
add
lea
add
cmp
mov
add
cmp
inc
jae
lock
sub
mov
push
push
aaa
sbb
jo
in
lahf
jae
pop
inc
mov
jbe
mov
or
pop
jne
mov
test
push
push
push
lea
or
sti
outs
push
lea
cmp
neg
dec
add
ja
inc
adc
not
sar
bound
inc
push
and
out
and
adc
xchg
jne
(bad)
sahf
std
cmp
lods
jmp
fadd
push
inc
xor
fld
adc
inc
sahf
test
inc
push
(bad)
xchg
inc
ret
xchg
out
mov
cdq
adc
(bad)
cs
mov
loop
jecxz
popf
inc
std
iret
cmp
add
and
test
sub
fcomp
inc
icebp
in
or
jecxz
jmp
out
je
adc
or
push
jg
fwait
std
mov
jmp
and
inc
lea
lea
pop
jl
test
mov
addr16
mov
adc
jne
mov
mov
test
inc
add
loopne
adc
or
jecxz
cmps
(bad)
jmp
xchg
fsub
mov
cli
inc
mov
sbb
cmp
mov
push
jmp
cmp
dec
popf
sbb
mov
cmp
jne
loope
and
pop
xor
cmps
mov
mov
cmps
adc
inc
sbb
cmp
test
cmp
push
sbb
cmp
in
dec
mov
mov
mov
mov
pushf
inc
clc
inc
mov
mov
mov
(bad)
mov
jp
cmp
jl
mov
add
cmp
jne
out
add
ja
mov
jg
ror
xchg
int
lea
cmp
je
call
and
rol
jg
in
push
pop
add
inc
inc
pop
inc
rcr
push
mov
or
inc
or
push
push
add
(bad)
ror
adc
mov
or
or
sbb
fstp
or
ins
or
inc
mov
sub
scas
inc
loop
mov
mov
or
add
fwait
mov
jmp
mov
or
push
call
out
sahf
jmp
stos
pop
je
call
shl
push
mov
mov
dec
sub
into
mov
in
jg
pop
pop
fmul
mov
cmp
leave
push
jo
push
or
shr
jecxz
xor
push
or
mov
mov
push
xor
sbb
xchg
inc
or
mov
add
pop
dec
or
mov
lock
sub
sub
add
adc
test
dec
inc
cs
or
je
mov
or
dec
mov
pop
test
or
add
sbb
dec
or
push
aam
nop
or
push
sbb
mov
cmp
jne
sar
mov
or
and
ror
push
cmp
xchg
dec
inc
shl
movs
adc
lods
xor
or
add
mov
xor
and
mov
push
inc
push
enter
push
xor
inc
enter
or
rol
inc
or
outs
call
add
call
adc
movs
mov
cmp
push
inc
mov
add
add
inc
adc
pop
and
push
and
adc
and
add
push
xchg
retf
sbb
and
adc
and
inc
or
xor
dec
fisttp
jb
adc
push
sub
sbb
test
adc
mov
add
mov
or
add
rcr
add
(bad)
adc
xor
mov
cwde
das
add
js
std
push
add
sub
xchg
adc
clc
pop
cdq
nop
and
or
pop
adc
mov
jne
add
lock
pop
push
mov
fcom
mov
test
adc
adc
dec
add
jmp
inc
adc
in
dec
inc
adc
nop
adc
les
jno
mov
inc
loope
ret
add
add
xor
movs
adc
add
test
xchg
sbb
adc
or
les
and
and
call
push
test
push
pop
jg
cwde
push
enter
es
or
push
dec
inc
adc
test
sbb
dec
or
add
adc
pop
test
jb
(bad)
dec
test
pop
jne
cmp
mov
cmps
push
adc
mov
adc
je
dec
and
pop
(bad)
push
xchg
inc
push
test
or
out
sbb
nop
add
xchg
dec
fidiv
push
add
call
std
es
setb
inc
or
inc
or
cli
sbb
add
xor
pop
push
jge
loope
pop
or
call
mov
rol
inc
(bad)
dec
adc
push
dec
ss
std
aas
int
aas
push
idiv
lock
mov
mov
sub
daa
adc
aas
adc
and
dec
jmp
clc
mov
jmp
and
pop
test
jle
mov
push
push
sbb
mov
dec
push
rcl
adc
les
inc
or
(bad)
inc
cmp
jne
cmp
jne
push
push
push
sbb
fstp
cmp
aas
push
inc
jne
mov
mov
popf
push
mov
je
test
mov
sbb
push
add
or
adc
or
cmc
add
stos
bound
sub
jmp
mov
mov
push
push
dec
push
cmps
(bad)
outs
movs
mov
jmp
daa
pop
jmp
inc
adc
out
xor
xchg
aaa
fcom
aad
pop
cmp
je
aad
jg
ja
mov
push
sar
pop
and
pop
shl
add
pop
pop
mov
add
dec
cmp
jne
or
ja
mov
jne
pop
or
inc
or
jne
mov
lock
dec
movzx
inc
mov
jmp
push
loopne
add
or
addr16
pop
sbb
add
adc
inc
rol
ret
add
pusha
cli
(bad)
and
or
mov
jmp
aas
ds
jl
jge
ficomp
and
loopne
fimul
and
popf
aaa
mov
mov
xor
mov
inc
push
inc
pop
cmp
in
rcl
mov
icebp
mov
and
add
xor
mov
out
mov
add
add
cmps
(bad)
inc
mov
cmp
jg
jl
cmp
jae
stc
and
fisub
ins
or
jg
lea
add
mov
mov
add
add
rcl
test
pop
push
mov
mov
mov
call
sub
mov
sbb
mov
pop
cmp
test
pop
jg
add
test
mov
nop
xchg
(bad)
(bad)
pop
mov
dec
cmp
mov
push
mov
jecxz
test
adc
sbb
and
test
sub
in
adc
outs
dec
jnp
mov
mov
pop
out
mov
mov
sub
push
cmp
mov
mov
(bad)
mov
lea
lahf
int
int
loop
push
push
push
push
adc
mov
sar
jl
jb
neg
mov
xchg
sub
div
cmp
jne
lea
shr
enter
jbe
mov
push
adc
pushf
adc
cmp
inc
mov
jmp
cmp
jne
inc
mov
cmp
jle
mov
or
jne
mov
xor
ds
mov
adc
mov
cwde
add
test
jl
pop
xor
push
mov
sub
add
(bad)
xchg
dec
and
je
adc
mov
xchg
popf
sub
shl
shl
pcmpeqw
or
sbb
add
mov
sub
cmp
fisttp
pop
mov
arpl
and
lea
inc
cmp
jb
mov
or
pushf
add
add
jae
cld
add
ins
popf
or
(bad)
inc
and
daa
sub
cmp
ja
jmp
push
inc
adc
jnp
cmp
mov
or
pop
add
jne
mov
inc
shr
sub
sbb
pop
adc
(bad)
adc
sbb
test
xchg
add
ds
xchg
dec
xchg
cmp
or
test
js
or
aam
pop
inc
cmp
jo
push
lock
push
mov
push
mov
(bad)
(bad)
jg
inc
adc
rol
xchg
jp
push
hlt
jmp
cmps
add
and
inc
add
sub
adc
jmp
in
inc
adc
mov
xor
add
(bad)
mov
pop
xor
mov
mov
mov
and
and
test
mov
test
pop
add
and
pushf
mov
mov
aam
jmp
out
push
mov
inc
sbb
fdivr
push
add
jnp
mov
push
pop
sbb
loope
je
shl
test
jne
or
fmul
cmp
ror
add
jg
inc
adc
mov
dec
jne
mov
ss
fild
inc
lock
adc
(bad)
lock
inc
add
pop
push
lidtd
test
jne
or
and
test
mov
adc
scas
push
mov
clc
jl
mov
retf
aaa
jmp
loope
inc
sbb
lock
pop
mov
or
xor
mul
dec
ins
mov
cmp
je
dec
leave
js
adc
dec
(bad)
fist
dec
cmp
mov
mov
je
adc
mov
cmp
je
test
adc
sub
push
sub
jne
sbb
es
push
xor
lahf
mov
pop
mov
mov
mov
pop
je
sub
pop
add
test
je
cmp
push
sbb
inc
clc
fbstp
mov
cdq
add
push
lea
shr
inc
jmp
push
cmp
sbb
adc
mov
cwde
sbb
or
jmp
dec
mov
lea
rcr
loopne
dec
in
sub
cmp
in
std
lea
push
push
dec
inc
out
dec
ds
in
test
js
ja
stos
pop
mov
add
mov
test
jns
push
sbb
popf
sti
aas
lock
dec
lock
add
add
add
mov
or
(bad)
lea
mov
cmp
jae
bound
test
cmp
je
mov
inc
pop
movs
mov
cmp
pop
or
clc
jae
lea
or
mov
(bad)
cmp
movs
out
push
mov
inc
jmp
or
add
jae
push
cmp
jl
out
xor
mov
sti
ja
test
or
add
push
or
repz
mov
jmp
cmp
jne
daa
and
cmp
sub
dec
(bad)
or
jne
(bad)
or
sub
(bad)
sub
jne
ret
mov
or
pop
in
inc
jne
or
or
mov
add
(bad)
sub
dec
add
pop
sub
push
pop
in
xchg
dec
dec
pop
(bad)
jg
js
inc
cli
cmps
out
mov
xor
inc
cmp
data16
(bad)
jg
lock
jg
cmp
jb
dec
inc
movzx
sbb
pop
fadd
or
add
stos
and
dec
add
icebp
jg
addr16
cmp
jne
add
jmp
cmp
retf
je
mov
inc
xchg
or
cmp
jl
sbb
sti
out
sub
and
jne
adc
es
and
mov
push
cdq
push
push
arpl
inc
jmp
mov
xchg
outs
sub
popa
lods
(bad)
fdivr
je
push
js
xor
cmp
setne
add
cwde
dec
sar
mov
adc
cmp
je
ficom
cmp
je
mov
mov
test
sbb
mov
mov
mov
cdq
mov
sub
mov
sar
lea
syscall
(bad)
cmp
jae
push
mov
inc
lahf
mov
xor
(bad)
je
mov
add
sbb
inc
cmp
jae
add
mov
clc
fldcw
and
retf
test
add
mov
daa
sbb
push
pop
cmp
in
icebp
and
cwde
ret
rol
mov
movzx
std
dec
add
shl
jecxz
jns
daa
mov
add
cli
sub
add
sbb
(bad)
push
jmp
shr
mov
or
mov
add
loope
loope
or
push
outs
cmp
test
or
pop
(bad)
fisttp
adc
push
cmp
jne
ret
cwde
fucom
lea
jmp
pop
or
inc
clc
push
sbb
loop
scas
rol
in
jge
jb
ins
pop
jmp
aas
adc
fadd
inc
int3
cmp
mov
mov
mov
mov
sub
mov
dec
push
add
cmps
daa
repnz
pop
cmp
cld
mov
sub
cmp
cpuid
jg
clc
test
cli
(bad)
push
jmp
test
mov
icebp
inc
imul
movs
mov
add
stos
lahf
das
mov
or
jg
inc
and
stos
xor
inc
xchg
mov
pop
xchg
sub
inc
js
dec
pop
inc
std
mov
(bad)
jmp
mov
sahf
mov
push
push
mov
or
je
(bad)
fadd
push
push
inc
push
sbb
outs
pop
xor
(bad)
push
lea
or
and
jae
sar
pop
je
enter
jmp
call
shl
push
mov
cmp
mov
mov
test
or
mov
sub
adc
or
inc
sbb
dec
mov
mov
and
mov
inc
test
leave
push
aas
call
jle
mov
xor
es
push
mov
nop
or
stos
ja
xchg
push
push
mov
mov
movzx
and
mov
cmps
mov
movsx
sti
sar
cmp
loopne
pop
cmp
add
add
je
push
std
out
add
add
jne
or
mov
arpl
inc
xor
or
jbe
jmp
sbb
and
xor
addr16
jmp
and
add
add
inc
pop
ret
neg
sbb
and
(bad)
sbb
xor
mov
mov
adc
push
and
jle
je
jp
call
push
mov
enter
add
ins
loopne
inc
adc
out
cli
sbb
ret
pushf
ror
test
add
(bad)
fadd
push
pop
sub
je
inc
sbb
call
add
adc
paddusw
dec
sub
jne
or
add
mov
mov
mov
out
loop
and
(bad)
fcomp
pop
call
fld
push
fstp
call
es
xchg
sbb
add
xor
cmp
mov
sub
xor
jmp
inc
xchg
jge
add
push
lods
add
or
sbb
(bad)
aas
in
push
sbb
jmp
sub
je
dec
je
dec
je
dec
je
sub
inc
aad
les
test
in
adc
ret
cmp
dec
xchg
xchg
fstp
adc
mov
and
and
mov
lods
sbb
sti
adc
call
jmp
cld
mov
cld
(bad)
inc
pop
fldenv
add
jmp
or
lahf
jl
adc
xchg
add
mov
and
push
or
(bad)
adc
pop
movs
fmul
fst
addr16
ins
ret
test
jmp
or
shl
fisubr
fld
lea
inc
adc
xchg
cmc
dec
adc
mov
fld
fstp
call
scas
jge
xchg
imul
add
call
adc
call
mov
sti
inc
pop
aam
xor
xlat
mov
inc
dec
call
fnstsw
pop
cmp
mov
and
enter
adc
xlat
je
in
and
(bad)
sbb
xor
jp
pop
sbb
xor
xchg
jmp
push
or
pop
jmp
and
(bad)
(bad)
jg
add
push
sub
fadd
fstp
fstp
push
push
jmp
call
ffree
add
fst
and
aam
add
adc
fst
jle
jle
stc
inc
clc
push
test
jne
inc
fxch
xlat
or
inc
fimul
adc
add
mov
inc
dec
mov
and
popw
mov
mov
mov
clc
adc
je
dec
xor
add
add
pop
pop
cli
(bad)
add
pop
ret
repz
add
jle
add
jo
(bad)
dec
maskmovq
sbb
and
lea
jle
xor
xchg
sbb
lea
scas
pop
fdivr
or
lea
mov
lods
cmp
add
pop
js
add
jmp
and
nop
cmp
js
out
aas
sub
add
test
push
test
sbb
push
dec
dec
test
xor
add
dec
inc
fidiv
add
ret
(bad)
fidiv
inc
and
loopne
mov
test
sar
retf
je
push
add
fxch
fldenv
and
pop
out
add
test
push
mov
add
sub
jmp
test
mov
clc
add
push
and
jnp
add
shr
and
fsubr
push
cmp
lds
or
push
add
sub
getsec
and
cmc
pop
mov
cmp
or
adc
dec
pop
sub
sub
or
pop
and
mov
and
jmp
or
push
or
shl
or
adc
mov
loopne
push
xchg
fild
add
shl
jge
ror
or
xlat
jl
add
pop
add
bswap
je
mov
add
dec
test
add
pop
or
in
daa
cmp
(bad)
mov
jo
mov
in
and
inc
je
push
add
je
jmp
lea
dec
xor
jmp
rol
inc
dec
std
cld
test
mov
pushf
xchg
sub
push
push
cmp
inc
add
mov
mov
loop
daa
lea
add
call
ja
add
movzx
jmp
outs
dec
cmp
jmp
cmp
jae
bnd
mov
cmp
or
fs
test
push
cmc
movzx
mov
add
jmp
jno
inc
xor
cld
pusha
out
inc
out
jne
xor
add
mov
cld
inc
lds
mov
pop
mov
(bad)
and
push
movs
sbb
imul
loopne
lds
mov
cmp
je
call
leave
(bad)
jns
cmp
lea
jl
mov
pop
out
sbb
mov
xor
sti
or
inc
hlt
out
push
adc
inc
and
sub
(bad)
adc
xchg
ror
(bad)
fmul
out
mov
xor
ss
jle
push
xor
lock
out
loopne
div
sbb
add
lea
cmp
jbe
mov
lea
inc
dec
push
mov
sbb
std
fisttp
or
test
je
mov
push
add
or
outs
idiv
aas
je
mov
add
mov
jmp
add
fld
iret
jle
rcr
push
jg
shr
or
js
in
or
ins
popf
pop
fld
jg
inc
sbb
inc
neg
je
mov
test
je
jg
cmp
cmp
lahf
std
cmp
aas
test
jle
iret
test
lea
es
inc
push
add
int
adc
ficom
mov
int
je
mov
int
or
xchg
je
push
sub
psubsw
cmps
fdiv
lods
jb
and
cmp
jne
push
push
jmp
dec
ja
(bad)
sub
fmul
or
pop
push
mov
lea
cwde
dec
cmp
push
add
dec
arpl
mov
push
lea
inc
push
jmp
cdq
jl
mov
add
xor
and
pop
lock
into
or
cmp
jne
mov
mov
push
push
lock
scas
push
add
leave
je
sbb
mov
mov
(bad)
call
scas
es
mov
je
or
je
add
add
dec
(bad)
cmp
jb
cmp
ja
add
cmp
or
(bad)
cmp
jne
sub
jne
jg
call
xor
cmp
je
mov
neg
mov
pop
pop
test
outs
jb
pop
and
ror
xchg
shl
(bad)
fwait
or
rcr
adc
add
in
cmp
(bad)
mov
lea
cmp
sub
cmp
lock
sar
loopne
jb
mov
test
lea
push
add
push
xchg
adc
in
adc
pusha
adc
adc
mov
mov
imul
mov
xor
mov
push
add
jbe
imul
push
leave
sub
mov
ret
jb
add
aas
icebp
(bad)
(bad)
(bad)
mov
xchg
adc
mov
fist
adc
out
add
sub
add
jmp
mov
push
jo
fadd
xor
test
add
mov
mov
inc
or
sub
lds
add
aas
push
mov
xchg
xchg
mov
adc
adc
fwait
test
fmul
enter
mov
enter
cwde
je
sbb
xor
add
and
fisubr
rcl
enter
dec
test
mov
in
adc
enter
and
inc
lock
push
data16
xor
push
cmp
cmps
ret
stos
dec
pushaw
sub
inc
aam
dec
data16
loopne
aam
std
(bad)
call
pusha
mov
imul
inc
add
loope
mov
test
fs
bound
adc
loope
js
imul
(bad)
(bad)
ror
pop
xor
jae
test
mov
jmp
out
mov
aam
sub
sbb
fcmovnbe
loop
mov
int
jbe
movs
dec
pop
and
fninit
cld
push
inc
add
xor
and
adc
dec
aam
fs
shl
push
jo
mov
adc
adc
or
cmp
dec
test
test
aam
dec
adc
dec
pop
add
lea
(bad)
popf
test
(bad)
fstp
arpl
inc
test
rcr
pusha
sub
push
xchg
movs
add
xlat
inc
sub
adc
pop
or
lock
inc
add
and
mov
and
inc
aam
stos
lds
and
aam
ror
sub
lock
arpl
ss
js
daa
adc
test
sub
lea
inc
test
(bad)
aam
cmps
bound
sbb
push
test
call
sbb
ins
dec
sbb
sbb
inc
or
inc
add
out
aam
push
jl
jmp
add
call
aam
mov
mov
mov
mov
adc
or
sub
cmps
sub
sbb
test
aam
sub
mov
aam
xor
adc
adc
test
mov
push
adc
dec
loopne
push
adc
xor
jbe
mov
rcl
aam
pop
mov
and
push
lock
push
sbb
adc
sub
push
imul
inc
cmp
inc
add
xchg
cmp
mov
sub
push
add
sar
aam
adc
scas
inc
test
rcl
add
inc
jo
adc
add
dec
test
ss
xor
jp
scas
pop
add
sub
or
mov
and
sbb
les
lock
or
aam
test
push
addr16
pop
aam
mov
xchg
push
aam
cmp
add
and
lock
mov
clc
cmp
add
push
rcr
aam
iret
hlt
dec
push
sar
inc
inc
aam
push
lea
repz
add
mov
sbb
inc
hlt
call
push
inc
add
pusha
test
lds
sub
aam
es
shl
out
and
aam
or
aam
out
add
movs
add
adc
or
add
stc
cmps
sti
lahf
nop
add
mov
jne
test
dec
sub
mov
jecxz
mov
mov
test
(bad)
call
das
dec
js
mov
mov
mov
inc
movzx
jp
les
mov
jne
mov
lds
enter
mov
inc
mov
loop
jo
jmp
inc
mov
mov
fstp
xor
outs
sub
daa
cmp
push
push
mov
xor
or
jne
mov
adc
or
cwde
push
push
call
jmp
hlt
fstp
pop
adc
jmp
stc
lahf
jne
mov
cmp
pop
leave
ret
loopne
add
jmp
outs
sahf
adc
mov
pop
push
cmp
pop
adc
jg
xchg
jnp
or
pop
jne
mov
test
add
push
iret
daa
add
push
push
daa
add
sahf
xor
and
or
sbb
dec
add
add
dec
add
(bad)
je
mov
mov
cmp
test
adc
(bad)
xlat
lock
call
pop
test
in
mov
add
or
mov
dec
in
jmp
lock
mov
sbb
add
push
push
push
sub
adc
push
add
inc
test
jge
ja
hlt
jg
inc
fmul
sbb
outs
ss
mov
inc
aam
cmp
mov
jl
add
mov
mov
ins
mov
or
mov
pop
cld
xor
inc
mov
mov
into
adc
outs
sub
push
es
mov
inc
inc
das
cld
ror
movs
push
adc
mov
push
xchg
cwde
lods
add
push
adc
fild
cmp
mov
(bad)
(bad)
jmp
jb
mov
mov
cmp
jbe
imul
mov
cmp
fld
mov
or
jg
imul
mov
mov
mov
sbb
loopne
or
cmp
jb
push
push
sahf
inc
xor
mov
les
mov
mov
add
inc
out
fwait
enter
sti
into
add
fmul
lock
test
dec
ror
cmc
leave
int3
cmp
jle
in
cld
adc
jne
cmp
popf
loope
(bad)
daa
mov
cmp
jne
test
je
test
xchg
jecxz
jmp
(bad)
test
pop
std
mov
in
push
mov
in
sbb
cmp
cmp
pop
add
jo
cmp
mov
or
fdivr
and
or
xor
push
int3
je
outs
fdivr
dec
popf
push
pusha
sbb
mov
cmp
mov
jne
push
jmp
push
push
pop
xchg
lahf
dec
and
ss
rcl
inc
add
push
sub
sbb
jmp
jo
push
les
cmps
and
call
mov
xchg
imul
sbb
adc
mov
stos
xchg
adc
sar
mov
fistp
xor
mov
call
inc
or
(bad)
jl
shl
add
cdq
jne
cwde
sti
popf
jne
aaa
cmp
or
ja
ror
test
cmp
jne
test
je
call
add
inc
mov
add
popa
jnp
imul
jne
jp
adc
jne
add
xchg
fmul
jb
bound
cwde
enter
xor
or
pop
ins
shl
dec
push
mov
sub
or
pop
pop
test
jne
mov
cmp
jle
mov
sbb
add
dec
or
inc
shr
or
test
jne
add
sbb
pop
jl
cdq
int
aad
ret
push
or
scas
adc
and
mov
test
or
or
mov
data16
out
clc
or
jbe
fcom
inc
lock
push
jge
jg
outs
add
push
dec
lock
cmp
jae
test
push
adc
in
lea
mov
mov
cmp
jg
sbb
inc
hlt
jg
imul
dec
pop
fwait
in
mov
mov
mov
mov
iret
cli
fist
add
and
jbe
mov
push
push
lods
aam
fdivr
sub
in
sub
(bad)
mov
mov
test
jg
pop
loope
out
ja
adc
outs
add
jmp
push
mov
ss
dec
jg
push
push
and
pop
or
test
mov
clc
mov
inc
add
mov
mov
rol
or
and
mov
mov
and
mov
cmp
std
xor
push
fisubr
and
int3
xor
pop
cmp
mov
or
jne
push
jmp
mov
jg
pop
cmp
jne
jmp
push
pusha
ins
and
int
add
push
sbb
jg
in
push
dec
add
lea
mov
push
popa
cmps
sub
add
(bad)
fldcw
mov
js
cmp
sbb
push
into
mov
mov
or
inc
faddp
pop
mov
or
test
ret
cmp
cmp
cmp
mov
call
xlat
aam
inc
add
push
mov
xchg
(bad)
push
aas
dec
dec
inc
loopne
sub
and
adc
push
adc
or
xor
movs
bound
ret
mov
inc
clc
add
(bad)
ins
(bad)
(bad)
jmp
clc
mov
cmp
jae
lea
mov
cmp
jl
cmp
jg
mov
mov
shl
mov
jle
mov
pop
add
sub
mov
jne
and
push
add
mov
test
jne
mov
xor
push
(bad)
cwde
leave
test
jno
ret
cmp
dec
clc
addr16
add
clc
cmp
jb
retf
test
call
mov
push
test
je
xor
mov
cmp
jle
rcr
cmp
ja
or
call
jle
push
jne
xor
aas
jecxz
add
mov
fcom
mov
stos
ret
(bad)
icebp
mov
dec
frndint
xor
iret
(bad)
call
sub
inc
add
mov
cmp
jl
pop
adc
push
pop
sub
adc
dec
mov
inc
je
mov
add
test
js
mov
mov
mov
add
add
or
or
dec
xor
xor
jmp
lea
add
cld
pop
inc
aas
mov
push
push
push
mov
out
cmp
xchg
inc
or
pop
dec
jne
push
lea
push
das
pop
call
push
iret
lea
push
fadd
add
mov
sbb
xor
fwait
sub
push
add
jmp
mov
std
mov
mov
test
je
or
les
mov
jns
jg
xor
test
js
add
add
dec
add
dec
out
test
jns
clc
dec
test
cmp
mov
test
call
mov
aam
pusha
add
lods
wbinvd
or
inc
pusha
jmp
mov
call
jp
xor
aad
push
push
inc
cmp
shl
and
cwde
call
sub
bnd
loopne
shl
jmp
test
je
pusha
popa
outs
xor
sbb
push
xor
mov
push
pop
cmp
xor
and
push
(bad)
cmp
call
sbb
cmp
inc
leave
sbb
arpl
sub
cmp
adc
js
xchg
cmp
mov
sbb
mov
push
add
out
jo
test
dec
int3
pop
loope
mov
mov
cmp
cld
je
push
test
cmp
sbb
push
sbb
mov
mov
xchg
out
inc
dec
movs
adc
push
pop
jmp
push
loope
xchg
jo
popf
jl
and
inc
adc
jo
add
pop
mov
inc
lar
pop
jmp
push
pop
fadd
(bad)
cmp
je
cmp
jle
adc
jo
xor
inc
std
retf
loopne
fnstsw
cmp
je
push
mov
sbb
add
inc
or
je
xchg
(bad)
pop
mov
popa
or
jl
add
pop
mov
jo
in
sub
add
cmp
dec
loopne
jbe
jo
add
fistp
xlat
jl
hlt
push
cs
sbb
mul
jmp
pop
jne
cmp
je
cmp
sbb
lea
(bad)
jb
test
jne
int3
test
je
cmp
cmovo
pop
cmp
jne
jne
push
push
inc
mov
add
pop
mov
ins
cmp
jne
inc
(bad)
call
jno
je
cmp
jne
cmp
jb
cmp
loopne
add
jbe
mov
mov
pop
mov
movzx
loopne
outs
popa
and
jne
dec
xchg
push
call
xor
or
ins
jmp
adc
loope
add
retf
adc
add
jnp
dec
push
(bad)
(bad)
(bad)
ror
lea
cmp
je
test
xchg
or
(bad)
inc
cmp
push
add
ret
lea
dec
push
inc
adc
icebp
jg
test
je
test
je
add
add
or
je
jne
rcr
add
add
inc
pop
xor
push
inc
sbb
mov
aad
push
and
and
jne
jg
rol
xchg
xor
add
test
je
rcr
out
(bad)
call
jne
adc
cmp
jne
add
push
test
inc
adc
mov
xor
ret
jmp
inc
jmp
ret
mov
neg
add
push
lock
jne
mov
test
jge
mov
into
dec
ret
mov
add
jmp
(bad)
enter
push
push
and
jbe
add
mov
mov
sub
cmp
jne
cmps
mov
cdq
inc
add
or
pop
ret
sbb
and
cmp
pop
dec
aad
pop
shr
lds
retf
call
sbb
and
shr
test
je
mov
add
jnp
ss
adc
jmp
pop
inc
xchg
pop
mov
or
xchg
sub
pop
(bad)
das
and
fimul
inc
dec
inc
(bad)
out
loope
dec
jne
jmp
sub
mov
mov
push
stos
(bad)
ja
mov
call
jne
cmp
jne
imul
inc
add
add
mov
add
leave
bound
jmp
mov
sub
add
adc
add
retf
loop
add
jne
adc
cmp
sbb
xlat
mov
and
mov
mov
or
mov
dec
pop
shr
jge
jne
push
push
mov
sbb
call
inc
xchg
or
adc
sbb
inc
loop
xchg
sbb
stos
cwde
push
xor
mov
add
ret
clc
sub
pop
icebp
iret
or
lea
jmp
lea
cmp
jle
xor
push
add
push
inc
xor
mov
ss
sar
push
pop
cmp
fsub
or
cwde
(bad)
dec
dec
(bad)
(bad)
je
jns
lea
jle
cmp
jle
jmp
mov
adc
dec
mov
mov
or
sbb
and
shl
pop
ret
enter
adc
sbb
inc
jp
pop
jmp
push
pop
push
inc
inc
adc
je
je
cmp
xor
pop
xchg
dec
or
cmp
sar
clc
idiv
mov
or
push
push
test
pop
test
jle
adc
jge
stos
aam
int3
push
outs
sub
or
inc
add
mov
popa
push
adc
rcr
xchg
xchg
xlat
jo
adc
xchg
pop
and
iret
or
dec
lahf
or
aam
mov
and
push
push
das
push
add
lds
jne
aad
pusha
inc
lock
push
mov
xor
out
sub
jle
add
jmp
and
in
xor
test
add
add
data16
call
sub
mov
xor
and
sub
in
mov
xor
shr
dec
jg
stos
cmp
mov
stc
mov
stc
call
jmp
push
pop
movzx
cmp
inc
hlt
or
ret
adc
adc
(bad)
call
shl
cmp
je
movzx
movzx
pop
sub
pop
jp
jg
add
cmp
jne
mov
fcomip
or
and
mov
jmp
mov
mov
dec
fldcw
out
mov
in
mov
fnstsw
jg
inc
out
xor
fwait
mov
stc
rol
mov
mov
xlat
movsx
and
fsub
add
add
jmp
data16
addr16
arpl
in
adc
rol
mov
xchg
std
add
mov
test
in
in
les
sbb
fstp
mov
fstp
(bad)
jbe
neg
fldz
ret
push
call
aad
lods
add
pop
adc
je
jmp
ds
add
leave
sub
add
fldenv
pop
jmp
or
faddp
push
cmp
fistp
ss
cmp
ret
adc
mov
or
je
(bad)
pop
inc
(bad)
fist
(bad)
loopne
inc
loopne
inc
sbb
add
fst
fstp
jg
scas
inc
repz
adc
inc
call
out
sub
sub
push
test
(bad)
mov
cmp
je
fldcw
leave
(bad)
call
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
(bad)
(bad)
dec
add
add
or
mov
fldcw
ret
test
je
or
je
mov
mov
and
repnz
lock
out
aaa
push
cmp
jg
add
add
sub
or
(bad)
fnstsw
mov
and
or
loope
(bad)
mov
fld
add
sub
or
add
(bad)
and
jmp
sub
pop
ret
push
cmp
mov
and
fnstsw
or
and
aas
test
fdiv
pop
ret
sub
and
inc
and
add
jge
iret
push
jmp
adc
jo
pop
pop
and
jne
pop
sbb
cli
sbb
push
sbb
pusha
xor
out
int3
cmp
aaa
fdiv
inc
loope
sbb
mov
fcomp
xchg
mov
or
sub
mov
(bad)
fst
popa
add
sub
jmp
jmp
test
push
add
mov
adc
mov
add
dec
jge
shl
or
push
popf
jg
aas
and
mov
jmp
push
or
pop
sub
inc
lock
out
mov
mov
mov
shl
(bad)
pusha
mov
loopne
push
push
xor
sub
push
and
pop
mov
or
adc
mov
call
addr16
dec
jmp
lea
mov
outs
and
or
push
mov
dec
adc
push
and
sub
fdivr
loopne
(bad)
je
cmp
jne
xor
scas
js
mov
push
mov
add
and
fmulp
add
push
pop
icebp
or
sbb
xchg
fimul
sbb
push
cmc
adc
shl
dec
pop
push
push
mov
fcom
push
icebp
mov
mov
mul
mov
pop
add
jmp
mov
nop
push
das
lock
and
and
mov
xor
cmp
jbe
dec
sub
sbb
xor
lahf
push
push
ror
or
push
hlt
out
ror
ret
sub
ret
xor
pop
mov
loopne
outs
clc
jg
test
jne
push
ins
aad
mov
mov
je
adc
(bad)
je
and
adc
mov
and
cmp
cwde
pusha
mov
int
cmp
add
mov
sbb
mov
pop
pop
shl
add
pop
icebp
or
add
je
popf
lea
push
out
adc
cmps
mov
dec
jne
jle
dec
js
mov
mov
mov
xchg
sti
inc
mov
movzx
inc
mov
jmp
movsx
and
nop
test
sbb
jne
jl
enter
add
dec
js
mov
idiv
pcmpgtd
jmp
movzx
xor
fs
mov
sub
push
mov
test
lock
popa
push
fwait
add
xor
push
inc
push
in
mov
adc
adc
push
fs
sbb
sbb
fs
inc
or
adc
push
and
cmp
push
sub
inc
push
fs
xor
fs
dec
cmp
dec
inc
cmp
sti
sub
inc
adc
leave
push
push
mov
mov
mov
cmp
cmp
pop
cmp
das
jne
mov
mov
mov
aaa
ins
in
push
push
push
mov
or
sub
inc
push
jne
xor
pop
in
add
outs
sub
add
pop
test
jne
aaa
add
jbe
fiadd
push
xchg
stos
pusha
inc
je
sub
jne
push
in
push
jl
push
jl
jmp
xlat
pop
icebp
(bad)
mov
xor
adc
ins
or
in
(bad)
adc
dec
or
adc
adc
push
or
sti
fwait
add
push
push
sub
stc
sbb
pop
add
sbb
inc
hlt
in
or
sbb
push
push
push
std
add
add
push
sub
sbb
std
jmp
sub
push
xor
cmp
push
push
sub
push
mov
push
push
pop
sub
pop
ins
pusha
sbb
push
push
push
sbb
push
push
cmp
(bad)
push
push
in
mov
pusha
mov
imul
pop
inc
test
sbb
inc
addr16
push
ins
or
dec
dec
push
mov
dec
dec
sbb
(bad)
je
loopne
cmp
sbb
test
mov
jbe
mov
mov
(bad)
popf
test
adc
mov
std
(bad)
(bad)
(bad)
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
dec
inc
jg
cli
lea
aam
aas
xchg
stos
jmp
retf
push
pop
rep
mov
out
loopne
add
inc
mov
mov
mov
adc
cmp
inc
push
push
mov
mov
ret
jle
inc
or
xor
mov
fwait
mov
and
or
mov
mov
mov
rcr
add
sub
sub
sbb
adc
push
pop
xchg
test
out
mov
js
ror
add
(bad)
adc
dec
sbb
mov
enter
shl
hlt
adc
clc
xchg
add
or
xor
xor
pop
push
xchg
and
shr
dec
out
add
lock
mov
aaa
inc
xor
loop
cli
pop
add
test
push
mov
mov
mov
pop
pop
call
and
arpl
adc
jne
(bad)
jmp
add
clc
xor
pop
xor
es
mov
mov
ins
paddq
xor
inc
xchg
sbb
xor
mov
es
cmc
or
xchg
in
mov
push
push
push
movs
or
pop
into
cmc
push
push
push
popa
sbb
xchg
mov
inc
push
jbe
xor
pop
and
sbb
dec
clc
call
test
adc
pop
xchg
pop
pop
jmp
mov
mov
ror
mov
arpl
xor
xor
fist
sub
sub
dec
sbb
jnp
sub
xchg
out
pop
mov
xor
mov
push
sbb
(bad)
div
mov
pop
clc
retf
pop
xor
(bad)
jo
loopne
pop
and
rcl
or
ins
je
pop
and
inc
push
and
push
jl
jbe
mov
dec
mov
jbe
pop
rcr
mov
push
cmovo
fs
pop
xor
mov
mov
cmp
clc
adc
inc
push
lds
mov
or
mov
and
sbb
or
rol
push
cmp
push
test
add
push
enter
daa
fs
push
or
jo
xchg
les
in
push
jb
bound
push
add
ret
push
int3
inc
push
ins
ror
or
or
jae
fmul
adc
push
push
xor
daa
or
sub
mov
adc
shr
mov
or
int3
and
sbb
retf
push
push
add
adc
push
adc
or
int3
adc
or
or
inc
add
int3
adc
int3
fisttp
(bad)
ror
or
adc
ret
or
adc
or
or
sbb
fisub
and
or
cwde
add
sub
xchg
cwde
stos
and
push
xor
xor
xchg
sub
and
inc
inc
add
add
or
add
ss
xor
xlat
or
sub
xchg
push
and
xchg
pop
jb
mov
or
pusha
inc
cwde
stos
and
rcl
cmp
fld
mov
inc
add
outs
imul
adc
inc
out
adc
ins
adc
mov
mov
call
fistp
pop
jmp
mov
cmp
sbb
sub
je
test
mov
or
pop
add
mov
mov
or
jbe
dec
cld
push
aam
lfs
add
push
push
lea
idiv
add
add
dec
or
push
dec
push
lock
or
adc
iret
xor
adc
xor
xor
xor
mov
push
push
sub
mov
mov
arpl
inc
scas
(bad)
push
aaa
mov
daa
and
sub
xor
xchg
sub
inc
mov
xor
jne
push
(bad)
es
push
and
inc
and
xchg
adc
push
push
or
adc
inc
pop
inc
outs
pusha
push
push
dec
inc
adc
enter
inc
adc
push
(bad)
inc
dec
adc
xchg
std
sbb
push
push
push
push
push
adc
repnz
push
push
push
pop
push
push
inc
test
pop
push
push
push
push
pusha
push
push
cld
dec
jle
adc
dec
push
jge
adc
xchg
pop
fnstcw
cmp
je
push
pop
ins
and
js
push
push
jl
push
pop
push
outs
pusha
push
push
movs
push
mov
sbb
push
push
ja
push
push
cmp
xor
push
retf
scas
sbb
pop
pop
xchg
in
pop
inc
not
inc
xor
push
push
push
sbb
jl
push
or
mov
cli
push
push
push
pop
pmaxub
jle
push
push
sbb
in
push
push
push
and
and
push
sar
sub
jle
dec
xor
xchg
dec
push
ret
sbb
lea
dec
mov
test
push
xchg
add
push
movs
pop
rol
ret
sbb
ror
mov
(bad)
fwait
hlt
add
push
sbb
imul
xchg
ror
add
xor
add
push
enter
dec
aas
or
push
aam
push
std
and
push
pop
jecxz
push
js
ficomp
mov
adc
jge
pusha
inc
in
pop
push
push
pusha
shl
push
pop
push
loop
fwait
hlt
push
push
sbb
shl
and
in
push
mov
push
push
cmp
push
push
pop
pop
ins
shl
dec
push
push
sbb
sbb
mov
push
add
movs
adc
push
push
ins
dec
daa
push
push
pop
mov
popf
or
sbb
pop
pop
test
add
or
iret
add
or
lods
or
dec
lods
push
sbb
add
lods
adc
pop
daa
les
sub
mov
rcl
push
pop
pusha
ret
cmp
fistp
sbb
mov
mov
mov
popf
or
sbb
xchg
icebp
jp
add
cwde
add
(bad)
mov
sbb
add
lods
pop
push
sbb
add
pop
das
daa
sbb
sub
mov
xor
push
mov
inc
sbb
fdiv
sbb
mov
mov
pop
sar
sbb
or
push
das
popa
sahf
loop
clc
mov
ror
or
adc
dec
and
inc
push
pop
adc
xchg
inc
mov
sar
push
push
mov
mov
add
retf
mov
inc
aam
call
xchg
loop
mov
lea
jecxz
pop
ror
adc
dec
je
mov
sub
lea
xchg
push
dec
pop
pop
loopne
or
dec
cmp
je
cmp
jne
push
jp
jne
add
push
test
je
push
pop
or
mov
and
jg
cld
sub
inc
xchg
jge
adc
add
sub
dec
pop
scas
or
mov
push
lahf
and
fld
ror
dec
fmul
mov
test
jne
cmp
je
aas
idiv
or
lea
jge
add
pop
add
pop
jb
mov
lea
xor
push
mov
std
or
mov
test
je
mov
dec
or
leave
je
mov
sbb
pop
pop
or
and
add
dec
jne
pop
ror
sub
inc
xor
dec
jne
and
jne
mov
and
lds
shr
inc
out
jp
in
ins
push
push
or
jmp
(bad)
push
adc
adc
cmp
jle
cmp
jne
js
add
mov
sub
mov
sub
push
adc
jmp
(bad)
std
inc
cmp
jne
cmp
je
mov
or
push
push
pop
inc
xchg
test
inc
add
jne
add
mov
mov
dec
lock
sar
push
(bad)
jmp
cmp
jne
dec
dec
jne
test
js
and
add
add
mov
add
inc
(bad)
movzx
sub
push
enter
mov
mov
mov
mov
lea
mov
add
outs
jle
mov
dec
test
and
mov
and
inc
adc
mov
mov
mov
shr
mov
clc
mov
or
inc
imul
jl
push
and
push
jl
pop
push
retf
sbb
(bad)
mov
cmp
(bad)
scas
inc
jl
mov
or
mov
cmp
adc
mov
inc
hlt
pop
and
mov
push
push
aam
(bad)
fdiv
push
push
or
push
jl
sub
bound
push
mov
or
or
cmp
jmp
cmp
je
inc
in
mov
or
mov
xor
(bad)
aas
sti
aam
dec
inc
push
ror
ffreep
jmp
rol
(bad)
jmp
mov
push
call
test
call
dec
pop
mov
call
push
pushf
sub
mov
mov
dec
or
rol
cli
ja
les
addr16
mov
and
outs
enter
push
adc
(bad)
mov
les
push
int3
mov
data16
mov
movs
mov
pop
mov
cwde
outs
cli
jne
mov
rcr
mov
(bad)
scas
loop
or
add
mov
pop
test
jne
call
cld
xor
sub
out
js
mov
and
scas
or
jo
and
pop
in
xor
test
clc
push
jne
pop
cld
or
mov
cmp
pop
lea
je
adc
(bad)
add
pop
add
mov
mov
mov
and
popa
out
mov
mov
mov
mov
mov
xchg
mov
or
mov
in
mov
out
iret
loopne
dec
mov
and
pop
mov
jg
int
test
je
mov
mov
cmp
je
loopne
fist
aam
sbb
add
push
pop
lea
(bad)
mov
and
jmp
cmp
je
cmp
(bad)
inc
cmp
cmp
jne
imul
rol
sbb
cmp
mov
je
mov
and
(bad)
out
hlt
sub
mov
add
cmp
mov
mov
je
cld
jmp
add
and
push
pop
or
bound
dec
add
cmc
fdiv
add
mov
add
jl
mov
or
xlat
rol
or
xor
sub
fcos
outs
mov
mov
jmp
add
(bad)
call
cmp
mov
jne
inc
jmp
push
mov
cmp
shl
aam
jne
aam
sti
into
frstor
pop
inc
add
or
jmp
push
mov
cs
out
inc
add
cs
mov
inc
pop
in
jae
add
mov
mov
xchg
outs
add
inc
shr
inc
int3
loope
xor
or
pop
dec
add
ror
sub
fiadd
jle
(bad)
push
jne
mov
sub
push
mov
mov
ret
add
popa
jne
pop
cmp
popa
fs
push
les
and
adc
hlt
dec
test
(bad)
sub
adc
add
and
out
mov
cmp
jne
mov
inc
add
sub
jbe
out
in
push
fdiv
ss
mov
xchg
adc
js
fstp
pop
pop
push
sub
popa
and
pop
pushf
retf
add
inc
std
mov
push
or
pop
inc
nop
in
imul
pop
mov
xor
cmp
xor
jne
mov
repz
call
lock
movzx
test
je
inc
mov
test
inc
add
aaa
inc
leave
shl
movzx
or
mov
or
sbb
mov
daa
or
mov
jle
inc
add
leave
adc
mov
add
or
mov
cmp
ret
fcomp
mov
icebp
cmp
rcl
or
xchg
dec
mov
cmovg
sbb
scas
aaa
push
mov
movq
mov
inc
cmp
test
je
shl
ret
or
cmp
jne
(bad)
(bad)
adc
test
jmp
or
test
jne
mov
xchg
movs
clc
(bad)
inc
or
cmp
add
push
je
mov
mov
dec
sub
adc
or
and
jmp
cmp
je
cmp
je
mov
inc
inc
ja
add
dec
jne
mov
mov
jmp
inc
inc
mov
and
or
idiv
jne
cmp
je
sbb
mov
loope
inc
add
neg
sbb
and
rcr
push
add
pop
retf
or
pop
adc
inc
mov
test
adc
lea
arpl
mov
xor
or
out
dec
jmp
test
jne
add
push
ds
inc
or
xor
or
sbb
cmp
add
jmp
xor
in
and
xor
push
push
hlt
sar
sbb
push
xor
mov
jmp
in
push
dec
les
rep
aad
sahf
daa
push
mov
cld
je
add
out
xchg
push
push
push
add
das
movs
fisub
xor
mul
jns
cmp
je
addr16
cld
xchg
adc
mov
retf
cwde
(bad)
push
mov
adc
pop
imul
push
adc
in
cdq
out
inc
adc
inc
xor
ret
arpl
adc
popf
(bad)
jae
mov
es
push
cmp
enter
adc
push
cmp
pusha
adc
jne
push
ds
call
jns
and
push
push
push
push
push
pop
dec
call
and
in
add
add
or
lahf
add
es
xor
mov
dec
loopne
add
(bad)
cvtps2pd
adc
push
inc
add
mov
icebp
cmp
cmp
je
(bad)
and
adc
mov
inc
je
mov
mov
mov
and
add
loope
or
add
jmp
or
jo
loopne
je
sbb
mov
mov
fadd
mov
add
je
sbb
push
and
dec
loop
mov
push
cmc
or
pushf
icebp
or
xchg
fist
inc
xor
fsub
jmp
xor
jmp
and
popa
int3
cdq
add
add
add
xchg
repnz
pop
push
lahf
sti
or
push
push
sti
jg
ja
adc
dec
in
xchg
adc
xor
cmp
jne
nop
jg
loop
or
and
adc
inc
mov
add
lods
(bad)
xor
daa
movzx
aaa
hlt
(bad)
dec
push
lock
inc
push
mov
test
pop
je
loope
movzx
(bad)
(bad)
inc
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
mov
or
inc
movzx
cmp
mov
inc
dec
ret
push
jmp
add
add
(bad)
adc
pop
dec
xchg
add
fbstp
shl
shl
inc
movzx
cmp
jne
test
mov
je
mov
push
test
jmp
sbb
and
dec
adc
pop
add
stos
loopne
sti
ret
lock
dec
add
arpl
sbb
retf
xor
mov
rcr
sub
inc
cmp
inc
sub
add
ret
xchg
jmp
adc
push
addr16
mov
add
push
movzx
dec
call
or
mov
sub
loop
fcomip
push
movzx
mov
jne
mov
or
adc
adc
in
mov
jne
and
push
shl
mov
call
mov
mov
or
ja
sbb
jno
ja
add
jmp
adc
jb
add
jg
ja
push
jmp
mov
xor
inc
or
adc
mov
or
arpl
jl
inc
cld
sbb
jle
(bad)
fadd
jne
add
dec
cdq
jb
jmp
mov
dec
add
fcomp
xor
gs
jp
inc
cld
inc
mov
out
pop
test
jns
inc
adc
cmp
adc
add
add
jmp
data16
in
std
out
mov
push
adc
inc
or
adc
adc
add
fwait
adc
cmp
rol
mov
clc
jl
inc
jo
jo
rcr
and
dec
ror
or
pushf
and
push
inc
adc
sbb
or
push
adc
sbb
loope
or
xor
aas
pusha
pop
mul
je
sar
dec
jne
test
je
sub
mov
lock
mov
lea
leavew
add
out
xor
xchg
cs
mov
data16
jo
imul
jmp
imul
xchg
ret
clc
fsub
push
push
cmc
jp
ja
xor
mov
push
xor
push
pop
std
mov
dec
cmp
jne
push
push
pusha
add
or
sub
jne
xchg
cmc
cmp
push
add
cmp
push
and
test
mov
push
test
ror
stos
(bad)
test
sub
rcl
inc
push
xor
inc
test
xor
movups
push
popa
adc
fxch
dec
int3
daa
icebp
jle
add
inc
fs
aas
pop
mov
loope
ror
sub
sbb
cmp
in
je
push
pop
jbe
js
popf
push
imul
mov
lahf
jle
adc
leave
jle
mov
je
or
xchg
dec
jle
je
pop
xchg
imul
sbb
rcr
out
scas
shl
das
bound
call
add
push
push
lea
aad
dec
push
push
push
call
adc
test
fild
jg
adc
add
lea
push
inc
adc
and
xchg
outs
ret
adc
or
push
sbb
jge
cmp
mov
sbb
aas
sub
gs
mov
adc
sbb
dec
cld
dec
sbb
push
not
inc
add
and
sbb
pop
pop
add
fadd
dec
pop
imul
(bad)
jg
inc
lea
inc
xor
mov
jmp
loopne
add
and
adc
mov
and
adc
pop
shl
retf
outs
and
aaa
or
inc
mov
cwde
mov
push
test
xor
int
sub
arpl
push
cmp
or
lock
cdq
call
test
jne
mov
xchg
adc
inc
sbb
(bad)
cld
add
and
sbb
sbb
push
xor
push
call
add
or
pop
mov
call
jmp
xor
inc
and
mov
sbb
test
push
add
paddsb
fs
or
psubq
or
ss
fist
test
inc
enter
add
adc
loopne
pop
dec
mov
mov
push
cld
call
jmp
mov
jmp
add
sub
mov
call
dec
adc
test
jne
test
sub
adc
inc
cld
push
cdq
rol
sub
cld
out
cli
and
rol
push
pusha
or
mov
or
cmp
(bad)
add
scas
stos
fist
clc
jmp
(bad)
(bad)
(bad)
out
inc
jmp
push
or
push
push
pop
push
pop
mov
sub
je
add
and
sub
jne
add
mov
jmp
mov
push
hlt
add
push
add
loop
add
add
mov
add
(bad)
jg
je
cld
or
and
mov
(bad)
fbld
jmp
push
jmp
push
pop
jmp
cmp
shl
add
add
je
cmp
mov
call
outs
or
add
inc
mov
push
call
fwait
mov
je
fadd
shl
inc
sbb
ror
inc
and
std
jmp
add
dec
hlt
add
cmps
pushf
shl
adc
retf
out
mov
or
and
test
mov
pop
or
jmp
jecxz
outs
xor
adc
test
clc
push
sahf
lock
add
loop
add
add
push
mov
sar
jne
xor
push
test
sbb
mov
push
adc
and
mov
out
clc
(bad)
lock
dec
clc
sti
mov
and
cmp
jne
pop
add
outs
push
loope
jg
jne
mov
push
inc
sub
xor
push
inc
xor
out
adc
push
mov
pushf
mov
inc
pop
pop
retf
pop
push
push
mov
scas
int
daa
inc
lods
mov
movs
cmps
push
(bad)
inc
xor
ret
inc
jmp
add
jo
into
cli
in
enter
mov
mov
mov
or
mov
mov
cmps
fwait
ds
mov
and
ret
dec
(bad)
out
add
mov
jne
mov
rol
call
add
std
cmp
mov
and
mov
inc
lock
inc
adc
sub
mov
aad
cmp
push
(bad)
scas
into
dec
sub
adc
fmul
or
dec
mov
cmp
jne
inc
aam
or
out
les
adc
addr16
sbb
mov
push
addr16
rcl
mov
and
push
or
or
mov
mov
mov
popa
inc
cmp
pop
sub
add
je
cmp
out
or
add
mov
jmp
std
sbb
jb
retf
jne
push
add
add
dec
je
jmp
jne
js
inc
clc
mov
pop
add
jmp
push
push
or
jne
and
pop
cmp
jbe
je
inc
push
cmp
add
sub
dec
push
imul
loope
push
dec
or
inc
clc
ja
(bad)
(bad)
jmp
lea
push
fistp
or
test
ret
mov
add
and
test
cmp
retf
fdiv
pop
mov
imul
dec
mov
scas
into
pop
push
and
ret
adc
stc
(bad)
inc
add
push
push
push
and
fadd
dec
fnsave
inc
push
fnsave
(bad)
xchg
jnp
xchg
dec
iret
je
retf
jne
inc
cmp
cmp
mov
mov
hlt
lahf
sti
out
mov
add
mov
rcl
push
dec
inc
in
add
not
mov
mov
add
mov
add
cmp
jg
mov
mov
cli
loop
mov
push
xchg
out
(bad)
and
inc
(bad)
and
xor
mov
mov
dec
test
add
jmp
gs
std
dec
jg
enter
and
cmp
jne
cmc
mov
add
sbb
dec
or
and
and
xchg
dec
push
js
pop
out
sub
scas
pop
pop
push
pop
mov
xchg
ret
jne
icebp
inc
fwait
dec
nop
shr
or
lahf
pop
xor
shr
retf
pop
test
call
sbb
sbb
scas
aaa
imul
and
add
xchg
test
fmul
inc
test
cmp
cmc
jl
aad
clc
push
fild
or
test
(bad)
push
cmp
movs
pop
cmp
pop
and
sub
pop
xor
dec
cld
inc
icebp
(bad)
adc
push
and
bound
icebp
add
inc
ja
and
popa
xor
inc
jno
cmp
adc
aas
push
lea
jmp
mov
in
je
cmp
je
mov
inc
cmp
jbe
lea
mov
mov
out
inc
shl
inc
test
or
jmp
mov
and
mov
lock
mov
cmp
mov
mov
jmp
sbb
push
mov
jmp
(bad)
(bad)
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
nop
sbb
clc
ret
call
cmp
icebp
adc
pop
inc
or
sub
jmp
test
add
add
or
pop
or
stos
(bad)
mov
cli
lea
bound
pop
add
mov
or
mov
mov
fidiv
stos
jle
lea
mov
mov
push
push
push
pop
mov
cmp
aas
jle
lea
push
push
mov
inc
jp
inc
sbb
arpl
sbb
push
test
push
sar
jle
cmp
push
and
mov
cmp
jb
jp
add
shr
test
outs
int3
cmp
and
clc
xchg
push
mov
or
jp
add
les
sub
(bad)
cmp
adc
jbe
mov
mov
test
jle
mov
rol
or
(bad)
(bad)
pop
and
int3
mov
push
lea
mov
and
mov
test
je
movsx
in
(bad)
call
inc
jmp
push
pop
mov
inc
dec
test
jg
ins
mov
js
cmp
mov
(bad)
(bad)
jl
jmp
mov
dec
cmp
je
inc
cmp
jne
inc
jmp
add
rcr
scas
sbb
movups
rcr
push
push
add
push
inc
aaa
jae
mov
push
outs
or
fisttp
push
add
iret
mov
and
enter
fnsave
aaa
in
push
mov
mov
test
je
cmp
adc
add
and
dec
(bad)
jmp
test
jne
sbb
mov
and
and
mov
adc
std
or
pop
lea
rdtsc
cld
(bad)
(bad)
(bad)
dec
shl
or
shl
or
mov
mov
mov
mov
test
js
mov
jg
add
mov
add
mov
mov
pop
or
mov
add
mov
jns
mov
inc
sub
clc
pop
in
xor
mov
fld
sub
cmp
das
adc
push
add
lea
push
push
xchg
(bad)
out
cmp
adc
adc
ror
std
or
outs
cmps
mov
mov
leave
loop
add
mov
pop
aaa
sub
out
std
adc
push
cmc
mov
xor
pop
mov
dec
add
(bad)
mov
add
push
xor
xor
or
test
adc
and
push
scas
sbb
inc
add
popa
or
sbb
mul
or
sbb
sub
fwait
xor
lock
push
sub
or
sar
adc
sbb
sbb
dec
test
and
outs
(bad)
das
lods
rcl
jmp
ret
xor
xor
push
call
pop
cmp
idiv
and
sbb
inc
mov
loopne
lock
je
inc
or
lds
jns
and
jb
dec
stos
mov
mov
ret
or
mov
cmp
call
xor
cli
add
cs
and
sbb
sub
push
jne
inc
add
and
add
cli
cmp
sub
add
xor
mov
or
outs
loopne
push
mov
mov
jne
mov
lock
or
add
push
lea
cmp
jne
push
aam
je
aas
add
mov
push
xchg
jo
test
push
mov
or
jbe
inc
mov
push
push
and
mov
push
jmp
leave
ja
xor
sub
and
inc
std
push
mov
ror
pop
imul
loopne
test
scas
and
or
pop
cmp
je
(bad)
test
mov
mov
mov
inc
mov
pop
sahf
loopne
cmc
fnsave
adc
and
(bad)
ss
xchg
or
mov
adc
loope
push
mov
or
(bad)
add
int3
push
push
push
pop
add
bound
test
push
cmps
je
jmp
push
push
retf
ss
int3
push
jmp
fwait
enter
add
cmp
je
mov
lea
(bad)
(bad)
mov
movzx
movzx
jmp
mov
inc
movzx
sar
add
cmp
iret
jo
(bad)
push
nop
jne
push
add
adc
(bad)
adc
or
mov
mov
fmul
or
jnp
dec
enter
les
mov
jle
test
aaa
call
add
and
clc
lea
mov
mov
jge
clc
rol
cmp
cdq
in
addr16
ret
adc
fsubr
or
ds
cmp
push
pop
in
sbb
or
in
mov
add
test
je
or
lock
jne
ja
or
add
push
mov
mov
out
push
add
push
retf
and
test
xchg
xchg
adc
mov
mov
mov
inc
cmp
stos
(bad)
ror
inc
jne
and
jl
add
jns
jl
(bad)
lds
cmp
adc
mov
adc
push
rol
pop
mov
sahf
std
fmul
add
call
cmc
jo
rol
(bad)
je
or
lock
add
dec
jb
jo
and
je
pop
cmp
jne
or
mov
add
call
inc
lock
test
add
inc
add
and
dec
fdivr
(bad)
and
add
mov
sub
dec
mov
mov
(bad)
nop
cmp
jle
pop
jmp
inc
in
fmul
add
hlt
clc
inc
les
inc
fcom
mov
push
out
add
mov
jg
push
or
movzx
movzx
and
add
mov
inc
jmp
mov
mov
cmp
jne
or
mov
inc
mov
jmp
cmp
je
add
dec
inc
test
js
popf
cmp
je
(bad)
(bad)
(bad)
jmp
sbb
add
xor
or
je
pop
(bad)
jmp
jmp
push
pop
jmp
cmp
jne
and
sbb
cmp
jne
shl
or
add
ja
mov
jp
add
fmul
inc
jae
inc
in
movzx
lods
cmp
ficomp
add
or
inc
and
push
je
popf
lea
cmp
movsx
dec
mov
leave
cmp
jae
lods
retf
mov
add
or
inc
adc
fstp
push
add
mov
ja
mov
sbb
push
clc
add
ret
or
mov
call
or
fucomi
dec
mov
jne
test
jne
mov
and
outs
sbb
aam
jne
cmp
dec
cmp
jg
mov
aas
inc
add
test
push
mov
fbld
add
fist
je
neg
jmp
lock
aam
cmc
call
push
mov
daa
cmp
and
cmp
jne
push
jmp
jbe
add
mov
into
(bad)
movs
push
mov
jmp
add
test
push
add
dec
je
cmp
(bad)
mov
pop
lods
adc
cmp
mov
sti
and
and
je
jl
(bad)
clc
movzx
sub
je
xor
in
lahf
ror
idiv
or
add
movzx
movzx
and
js
inc
push
aaa
aam
(bad)
and
inc
add
enter
setg
sbb
or
gs
test
cmp
es
inc
add
jg
inc
add
into
dec
pop
xchg
or
nop
or
nop
stos
add
mov
mov
xor
or
and
push
ret
je
ins
movzx
and
nop
sbb
mov
mov
fcom
nop
jns
or
or
nop
push
enter
and
or
dec
or
nop
(bad)
out
fild
pushf
inc
or
or
nop
mov
push
mov
dec
or
adc
arpl
dec
push
movs
inc
dec
mov
pop
cmp
int3
fisttp
or
pop
xlat
loopne
push
sub
adc
pop
movs
cmp
rcl
int
or
dec
adc
xchg
push
loope
pop
call
cmp
es
jae
out
nop
shl
adc
mov
and
call
pop
pop
popa
mov
and
inc
sbb
sbb
xor
nop
sbb
push
xor
dec
sbb
nop
push
and
xchg
add
in
fcomp
mov
and
nop
int3
sbb
inc
sbb
inc
sbb
sbb
nop
fsubr
(bad)
cmps
lahf
dec
jle
inc
sbb
rcl
and
inc
push
or
nop
inc
mov
mov
(bad)
(bad)
dec
push
pop
sub
add
add
cmp
jae
add
add
cmp
ud0
mov
and
add
xor
mov
cmp
(bad)
and
cld
and
ja
rcl
jecxz
dec
in
jae
sub
and
cs
cmps
out
lahf
inc
dec
out
ja
jne
out
jns
mov
cmp
fcomp
sbb
call
pop
dec
sub
jmp
imul
pop
jae
or
jmp
loop
sar
mov
cmp
xchg
in
push
pop
xlat
mov
in
push
in
and
out
out
sub
out
xchg
in
sar
adc
lock
lock
pusha
int
or
jle
icebp
and
sbb
pop
ins
mov
pop
dec
repnz
mov
mov
mov
out
adc
mov
mov
mov
or
add
cmp
cs
cmps
jae
and
test
pop
out
xchg
mul
not
aas
mov
cmp
cs
popf
stos
push
stc
mov
stc
and
dec
out
and
cli
popa
pop
out
sti
xchg
sti
and
xchg
clc
mov
cld
cmp
je
cmp
cld
dec
adc
jne
xor
pop
xlat
ins
std
dec
std
sbb
add
(bad)
and
call
test
pop
push
or
mov
xor
mov
cmp
mov
push
scas
in
in
shr
push
xor
in
sub
or
inc
clc
pop
ja
inc
out
inc
out
out
mov
pop
(bad)
adc
jb
jo
mov
xor
in
and
add
ins
xchg
xor
sbb
(bad)
(bad)
(bad)
dec
jmp
pop
dec
cmp
sub
jg
sub
mov
inc
mov
sub
popa
mov
and
xchg
inc
add
mov
and
inc
out
xchg
out
ret
out
push
sub
lock
adc
and
add
push
fsubr
xchg
inc
push
in
pop
lods
inc
repz
xchg
repz
mov
jmp
nop
xor
cmp
outs
or
adc
std
mov
cmp
jg
mov
xchg
out
int
mov
aam
sub
and
or
dec
sub
mov
and
inc
sti
cs
ja
sbb
mov
cld
mov
sbb
xchg
test
sbb
xchg
out
push
xor
pushf
dec
cmp
(bad)
pop
or
je
and
loop
or
sar
das
xlat
mov
je
pusha
ret
call
lea
mov
adc
out
adc
adc
lahf
(bad)
cli
out
add
data16
mov
inc
(bad)
mov
data16
and
inc
jmp
push
xor
sbb
call
cmp
stc
fucomi
cmp
sbb
bound
lahf
shr
fsubr
xchg
lahf
xchg
scas
mov
and
and
dec
popa
mov
xchg
addr16
inc
or
xchg
lahf
cmp
ins
push
into
sub
lahf
xchg
pop
pop
mov
and
clc
or
fsubr
mov
pop
je
jmp
inc
test
nop
in
inc
mov
movs
imul
and
or
dec
stc
lds
or
and
inc
cli
cs
mov
or
push
dec
and
lahf
cs
mov
data16
and
push
or
mov
(bad)
cmp
je
jb
xor
(bad)
loope
loope
pop
pusha
jne
loope
pusha
xor
loop
push
and
sbb
dec
push
ja
dec
popa
stos
imul
inc
in
and
mul
int3
ret
sub
int
sbb
call
aaa
test
sbb
xchg
pop
and
mov
cmp
xchg
div
sub
int
push
fs
adc
push
out
cmc
dec
popa
mov
cli
dec
push
xchg
enter
fbld
inc
in
xchg
imul
or
xchg
add
or
push
push
cmps
mov
arpl
dec
push
xchg
xor
dec
(bad)
out
and
inc
icebp
pop
addr16
out
mov
add
add
xchg
loope
or
pop
imul
dec
pop
xchg
inc
clc
fst
and
inc
cmc
cmp
test
imul
imul
je
inc
dec
and
sbb
mov
dec
outs
or
push
mov
stos
cmp
inc
stc
xchg
test
repz
sub
mov
push
xchg
dec
popa
mov
and
xchg
imul
pop
imul
push
mov
clc
je
push
push
and
xor
dec
or
mov
movzx
sub
je
mov
(bad)
push
lds
jno
jno
mov
jno
mov
jbe
inc
add
and
dec
mov
mov
xchg
push
gs
jg
add
xchg
mov
xchg
mov
mov
or
mov
movzx
ret
mov
or
movzx
inc
add
fiadd
dec
and
dec
outs
sub
mov
inc
add
movzx
jg
push
(bad)
adc
shl
inc
or
and
out
(bad)
dec
sub
or
test
or
mov
add
sub
nop
call
adc
or
lea
or
add
sub
or
add
out
or
cmc
add
and
add
daa
jecxz
pop
inc
scas
jmp
or
xchg
add
das
mov
mov
paddq
arpl
push
(bad)
cmp
movzx
movzx
sub
jne
jg
call
push
ret
or
sub
je
pop
pop
test
jns
or
push
sar
(bad)
jmp
jle
xor
inc
mov
fidiv
shl
(bad)
(bad)
call
push
mov
cmp
je
mov
movzx
mov
test
je
movzx
mov
(bad)
out
mov
or
(bad)
dec
push
test
jne
xor
add
aas
imul
sahf
(bad)
pop
sub
pop
sar
pop
dec
xor
mov
cmp
aas
test
or
rol
inc
or
repnz
(bad)
adc
sbb
movzx
and
push
adc
popa
lock
popf
test
adc
add
jl
add
test
push
push
or
fnstenv
pop
test
add
sbb
or
lea
xor
and
lock
adc
shl
dec
cld
xor
cmp
jb
ins
mov
dec
ficom
or
pop
inc
mov
sar
in
ins
dec
stc
mulps
rol
adc
pop
mov
je
push
and
or
or
mov
push
add
out
aaa
test
ss
mov
xor
les
or
je
or
or
jne
sub
test
out
add
rol
add
mov
mov
call
movzx
xchg
cmp
jb
add
or
out
add
or
ja
inc
jmp
mov
stos
sub
xchg
push
into
inc
add
sar
inc
lea
xor
cld
(bad)
inc
leave
and
add
push
std
adc
or
inc
or
loope
aaa
cmp
add
out
xchg
retf
jne
out
dec
push
mov
bound
mov
je
sbb
inc
inc
jne
or
mov
jne
push
lea
call
test
jne
inc
add
xchg
push
push
dec
out
out
jg
imul
dec
or
jmp
sub
jne
retf
add
(bad)
dec
cmp
test
je
add
pushf
mov
iret
mov
and
shl
dec
adc
(bad)
out
out
test
(bad)
sbb
and
push
add
std
pop
and
xor
inc
jmp
cs
pop
pusha
(bad)
ds
out
xchg
cmp
fsubr
jg
xor
cmp
je
or
cmp
out
push
pusha
cmp
pop
xchg
shr
adc
add
nop
(bad)
jnp
je
imul
inc
or
(bad)
sahf
mov
xchg
pop
test
xor
cmc
lahf
mov
and
lock
cmp
jb
push
adc
cmps
sub
pop
ds
add
lea
dec
(bad)
(bad)
(bad)
call
or
push
inc
int3
push
add
aas
jne
and
inc
jmp
lea
cmp
or
movs
cmp
mov
push
mov
sbb
and
icebp
mov
inc
shl
inc
std
leave
shl
ret
jmp
push
mov
je
adc
adc
cmp
push
mov
add
add
mov
je
int
test
fldcw
or
cs
add
cmp
ja
adc
jb
jne
xor
pop
add
xor
and
pop
inc
pop
mov
or
pop
push
in
pop
inc
ja
adc
or
mov
repz
fsubr
add
int3
lock
into
push
xor
outs
xor
push
mov
xor
test
jecxz
lahf
cmp
or
cld
lea
pop
cmp
fstp
std
or
push
stc
add
and
inc
xchg
leave
mov
push
sbb
outs
in
inc
mov
pop
sbb
outs
stos
mov
pop
jne
push
push
in
fwait
(bad)
out
or
cwde
sbb
push
push
mov
xor
aaa
push
mov
or
ins
aaa
xor
add
iret
jle
push
lea
test
cmp
test
mov
call
(bad)
jae
test
sbb
(bad)
fwait
adc
mov
xchg
jb
mov
test
stos
cmp
jo
ror
push
add
inc
fst
ins
out
(bad)
push
xor
push
push
push
sub
or
mov
sbb
xchg
ret
and
das
or
lahf
mov
jne
push
cmp
cs
ss
jl
pop
ss
push
push
mov
or
add
cli
add
mov
push
rcl
mov
dec
sbb
out
sub
jo
aad
cmp
push
mov
push
xlat
mov
and
mov
lock
inc
push
add
inc
cmc
add
pusha
and
sti
and
inc
jmp
sub
mov
jmp
mov
or
mov
mov
rol
pusha
pop
jbe
add
add
xor
xchg
push
adc
cmp
mov
hlt
jp
add
add
or
or
fisttp
push
inc
jnp
pop
mov
out
retf
or
inc
cwde
cmp
arpl
adc
pop
iret
push
ds
mov
daa
pop
push
push
or
pop
imul
or
je
pop
popa
add
daa
add
pop
mov
data16
in
lods
add
(bad)
stc
or
xchg
ds
dec
mov
nop
mov
outs
adc
inc
out
xchg
loopne
adc
repz
loope
adc
or
popa
add
inc
xor
js
add
and
jne
lds
dec
sbb
jns
cmp
je
and
icebp
ja
clc
or
push
test
jne
push
pop
and
push
xor
(bad)
icebp
inc
bound
or
push
inc
cld
outs
or
out
pop
cmp
mov
test
jg
pop
add
or
mov
add
mov
addr16
mov
pop
addr16
cmp
xor
lods
in
imul
push
(bad)
(bad)
push
in
call
arpl
inc
adc
cmp
je
(bad)
xor
add
fdivr
push
jmp
cmp
jne
retf
xor
jne
clc
mov
or
xor
ret
cmp
jne
iret
xor
or
add
add
dec
in
mov
repnz
mov
add
sub
sbb
imul
loopne
adc
inc
inc
cld
inc
mov
push
xor
cmpps
aad
je
push
push
pop
lea
mov
add
out
loopne
jmp
jo
push
add
mov
rcl
out
add
aaa
jne
movs
mov
jb
push
mov
mov
aaa
and
pusha
dec
test
cmp
and
add
sub
scas
push
dec
cwde
ds
sub
lods
mov
nop
fmul
aad
test
adc
shl
aaa
xor
or
popf
cmp
jb
int
jg
pusha
sbb
clc
mov
mov
inc
gs
call
or
ja
and
or
cmp
je
sbb
mov
fmul
daa
dec
mov
imul
fild
push
inc
xor
test
js
push
test
je
lea
(bad)
fbstp
sar
imul
mov
push
mov
dec
adc
lods
mov
lock
ja
out
shl
pop
mov
add
add
sbb
or
or
lea
jmp
aaa
jnp
cmp
jle
pop
xor
test
pop
sete
or
inc
mov
sub
mov
cmp
inc
pop
xor
retf
lea
retf
hlt
pop
inc
or
lock
inc
jne
or
fmul
mov
lea
xor
mov
xor
jne
mov
pop
and
push
ficom
dec
lock
push
and
mov
adc
or
cmp
inc
test
lock
jo
sbb
pop
pop
pushf
push
stos
dec
adc
leave
arpl
ss
pop
dec
into
jmp
and
adc
or
adc
adc
inc
rol
adc
nop
ins
jg
mov
lea
aad
mov
imul
jo
js
sub
jp
pop
ret
mov
aaa
loop
ficom
fld
push
rcr
enter
jg
inc
jno
addr16
icebp
push
aam
push
mov
xchg
fmul
mov
imul
mov
cmp
sbb
pop
lock
xlat
dec
xor
push
lds
add
push
iret
adc
mov
mov
mov
pop
adc
or
pop
inc
cld
fstp
fnstsw
cmp
movs
sub
fcomip
dec
and
fstp
movq
(bad)
inc
dec
leave
ret
movlpd
lock
or
sub
pause
pop
adc
pinsrw
sub
push
mov
adc
into
xor
mul
lds
addr16
ret
fst
sub
push
push
sbb
test
xchg
addr16
call
push
sbb
mulps
sub
addsd
adc
fld
pop
ret
enter
je
push
pusha
pandn
sub
pop
add
sbb
ja
mov
and
add
cmp
pop
add
or
psrlw
and
or
add
jle
sbb
ret
add
add
xchg
cmp
or
ret
xchg
shr
add
add
jmp
std
idiv
out
nop
xor
jg
push
cmp
jne
mov
lock
pop
fisttp
sub
sti
sub
ret
push
sub
mov
sbb
fdivr
mov
nop
inc
jae
push
cmps
in
xor
test
dec
sti
jg
mov
in
jne
fxch
fyl2x
jmp
adc
(bad)
pop
xor
fldl2e
fmulp
int3
dec
cmp
inc
ins
xchg
test
add
icebp
test
mov
add
std
or
pop
jmp
daa
neg
std
(bad)
jge
shl
cmp
je
not
dec
loope
scas
sbb
add
jge
shl
popa
or
ret
fld
push
pop
add
push
jg
fwait
pusha
inc
jne
fyl2x
add
add
(bad)
ret
or
jne
ret
fldlg2
jmp
cmp
or
and
ins
imul
fimul
pop
adc
fldz
cmp
jne
xchg
inc
jle
ins
cmp
push
or
in
jmp
fnstsw
mov
push
hlt
pop
fxch
or
jne
js
xor
ficomp
jno
sbb
(bad)
cmp
jp
adc
enter
ja
outs
fcompp
fsin
lock
xchg
sbb
ins
mov
loope
hlt
test
lock
cld
fcomp
fistp
sbb
rcr
adc
cmp
loopne
je
loopne
bound
fs
clc
add
jmp
sub
mov
add
mov
mov
jmp
les
add
and
in
call
fild
shr
push
fstcw
lock
(bad)
call
je
or
fidiv
dec
retf
jmp
leave
fst
sub
cmp
cmp
dec
add
add
mov
dec
or
add
dec
or
xchg
dec
add
sbb
mov
sti
mov
jb
add
fst
dec
xor
cmp
je
cmp
je
or
movsx
mov
sti
fadd
xchg
mov
add
imul
xsavec
mov
add
clc
dec
xchg
fldcw
ss
sar
(bad)
(bad)
jmp
lock
jecxz
cmp
je
jmp
pop
xchg
int3
(bad)
adc
jmp
inc
add
cmp
add
enter
push
jae
aam
jmp
sub
jb
mov
push
rcl
push
jne
push
mov
popf
sub
ret
call
inc
adc
jne
cld
lea
lea
jmp
add
jne
lea
movs
movs
fstp
(bad)
ror
jnp
push
inc
mov
or
lahf
mov
pop
fld
xchg
lock
js
retf
mov
adc
fimul
jmp
add
mov
mov
and
jne
or
mov
dec
mov
or
movs
fmul
mov
mov
fld
jmp
dec
mov
aas
dec
mov
or
push
add
xlat
or
rcl
or
(bad)
and
ret
or
mov
test
xlat
dec
jl
prefetchw
sub
mov
scas
push
push
in
push
and
loope
cmp
or
loop
es
or
jno
(bad)
js
adc
or
in
add
sub
push
repnz
or
int3
add
pop
sub
unpckhpd
fild
jp
add
inc
or
and
popa
jmp
je
cmp
div
sub
or
dec
ret
push
lds
mov
pusha
add
or
rol
or
pop
inc
in
or
call
in
dec
pop
loop
jbe
sbb
ins
dec
and
les
add
or
or
test
loope
sbb
mov
rol
mov
inc
jl
jg
cmps
lea
push
nop
fucomi
push
push
push
movzx
xor
mov
aas
add
or
rcr
inc
mov
fist
mov
sub
mov
mov
dec
mov
or
mov
shl
cdq
inc
clc
cmp
jg
(bad)
push
mov
mov
cmp
jne
inc
cmp
jl
es
add
ror
std
stos
stos
stos
push
pop
rcpps
mov
lea
lea
mov
movs
dec
mov
(bad)
(bad)
(bad)
jmp
mov
movs
lea
mov
cdq
movs
pop
and
add
sar
mov
and
jns
cld
(bad)
(bad)
dec
leave
loopne
sub
xor
inc
mov
mov
or
shl
push
pop
test
je
ja
mov
shl
not
por
pop
xchg
lock
inc
cmp
jl
outs
pop
out
mov
int3
cdq
push
pop
and
add
or
push
ja
jae
dec
or
inc
sub
jns
shl
mov
mov
dec
enter
inc
rcr
enter
mov
pop
jb
cmp
jae
stos
jbe
pop
aam
and
mov
add
out
(bad)
sub
add
clc
mov
mov
jb
out
test
or
jns
lods
mov
mov
cmc
or
lea
cmp
jge
adc
into
lea
cli
(bad)
jbe
jmp
cmp
je
inc
inc
sar
sub
adc
ret
test
ja
sbb
enter
mov
ror
cmp
movq
adc
push
fmul
ret
sti
out
add
and
adc
mov
movs
call
mov
arpl
mov
ror
mov
pop
sub
push
cld
pop
mov
mov
call
mov
mov
shr
or
and
adc
inc
inc
loopne
fidivr
inc
les
add
fld
sub
les
(bad)
(bad)
cmp
jl
mov
mov
pop
jmp
mov
sub
dec
jns
mov
inc
or
loope
iret
xchg
into
aam
fdiv
sub
xchg
xor
push
inc
shl
mov
jmp
int3
or
inc
es
jmp
mov
mov
push
cdq
retf
movq
xchg
and
loopne
mov
loope
lock
xor
inc
shl
mov
mov
add
inc
loopne
inc
aas
rol
fdiv
shr
leave
je
xor
mov
mov
push
daa
jns
xor
or
mov
retf
or
rcr
in
jg
or
jmp
dec
fmul
push
aas
(bad)
call
not
mov
pop
sub
not
push
test
rol
jns
ins
fdiv
fdivr
loopne
inc
and
daa
cmp
jl
mov
jl
(bad)
jle
push
test
push
fistp
into
jl
js
jmp
xchg
cld
inc
adc
mov
mov
icebp
cmps
rol
sub
cs
cs
stos
hlt
mov
push
shl
mov
scas
int
movs
pop
inc
ror
shl
daa
mov
jne
adc
mov
sahf
mov
clc
and
fild
xor
push
call
and
fnstcw
icebp
mov
mov
adc
out
rol
js
mov
jmp
xlat
mov
mov
test
or
mov
inc
stos
mov
fist
push
clc
mov
mov
inc
iret
pop
mov
shl
mov
shl
mov
sbb
and
jne
cmp
inc
hlt
xchg
loopne
dec
jmp
cmp
jne
mov
mov
mov
inc
jmp
and
jno
je
add
or
pop
pushf
add
inc
xor
rcr
adc
jno
inc
jb
push
xor
add
add
push
add
sub
lahf
inc
es
pop
jno
add
jb
xor
push
test
sub
jecxz
add
inc
or
or
inc
cwde
(bad)
(bad)
call
push
mov
mov
pop
nop
push
lea
mov
mov
test
jmp
pop
pushf
mov
cmp
fwait
(bad)
push
xor
mov
daa
mov
mov
mov
mov
cmp
je
cmp
inc
push
fisttp
je
or
jmp
mov
inc
mov
cmp
ja
push
fmul
popa
cmp
inc
iret
cmp
ja
push
pop
dec
jmp
mov
mov
(bad)
inc
jne
push
pop
jmp
movsx
sub
je
in
cmp
dec
je
sub
jne
ja
jmp
push
mov
nop
jmp
push
mov
mov
enter
jbe
cmp
bound
lods
cmp
(bad)
stc
sub
stc
sub
xor
stc
inc
jle
inc
jle
sub
push
adc
fs
ja
sub
push
sti
pop
jbe
push
pop
push
jbe
dec
push
je
pop
push
mov
test
pop
mov
movs
mov
push
jl
mov
mov
cmp
cmp
push
into
lock
sub
inc
mov
inc
jmp
inc
pop
and
ror
sar
mov
mov
add
test
mov
test
sbb
mov
test
pusha
pop
fincstp
fistp
pop
test
jne
dec
jne
mov
mov
dec
inc
or
fmul
jge
test
inc
push
ss
out
push
sbb
addr16
add
inc
jle
mov
jle
sbb
ja
jnp
sbb
ror
ja
jmp
add
pop
pop
lea
mov
xor
push
adc
and
sar
(bad)
fild
or
jbe
pop
or
retf
inc
push
jmp
jge
jbe
pushf
jmp
cmps
je
sub
cmp
jle
jmp
stos
pop
jbe
sbb
std
out
fsubrp
mov
pop
and
inc
push
mov
add
or
push
cmc
(bad)
fild
inc
push
pop
dec
cmp
jne
jmp
(bad)
push
ins
repz
jmp
cmp
jg
imul
movsx
add
add
cmp
jg
jp
arpl
jmp
mov
jae
out
stos
mov
das
or
sbb
dec
(bad)
(bad)
(bad)
fbld
cwde
mov
mov
test
je
cmp
jbe
mov
cmp
jl
(bad)
sti
out
out
inc
mov
mov
dec
push
inc
loop
jmp
or
ror
movs
sub
mov
jne
dec
inc
push
je
mov
lea
push
push
xchg
call
call
mov
add
test
jns
neg
add
pushf
out
add
mov
or
jne
test
or
dec
dec
cmp
jl
inc
(bad)
pusha
test
out
mov
pop
adc
test
repz
jmp
mov
mov
add
sar
mov
mov
and
shufps
fld
add
cmp
jb
mov
lea
lea
in
movs
movs
movs
dec
cmp
cld
dec
mov
or
xor
mov
sub
(bad)
call
cli
sub
ror
mov
lea
add
jg
movzx
adc
jne
cmp
jae
cmp
inc
push
adc
mov
jl
jbe
stc
mov
or
sub
inc
test
jg
jne
sbb
cmp
jne
call
and
int
shl
jne
inc
test
sub
cmp
jne
cmp
std
(bad)
(bad)
push
add
fcomp
inc
mov
movs
test
jle
lea
lea
(bad)
out
js
push
les
inc
pushf
mov
(bad)
jmp
mov
imul
mov
add
cmp
jb
cmp
jae
(bad)
push
cmp
dec
cld
test
je
inc
sub
add
fucomp
(bad)
dec
(bad)
jg
mov
mov
mov
add
inc
dec
imul
dec
fadd
add
mov
test
jle
test
js
aaa
adc
shr
mov
add
or
add
push
les
sar
mov
or
add
xor
retf
cmp
lock
mov
mov
neg
movzx
into
xchg
jmp
add
pushf
mov
shl
lods
mov
(bad)
call
ins
mov
inc
mov
inc
mov
loope
shr
shr
or
push
js
cmp
into
push
test
pusha
pop
je
retfw
or
cmp
add
mov
mov
ja
sbb
(bad)
inc
add
add
mov
cmp
jne
mov
mov
mov
fidivr
cmp
stos
jmp
mov
inc
jmp
inc
push
fsubrp
add
fcmovb
clc
shr
mov
pop
or
cs
lods
push
cli
push
(bad)
aaa
cld
jb
xor
mov
cmp
les
xchg
ror
push
(bad)
jg
inc
int3
jmp
pop
(bad)
or
dec
sahf
jmp
xchg
xor
dec
retf
jne
jmp
xor
xor
pop
les
mov
test
push
cmps
adc
xchg
movzx
(bad)
mov
shr
(bad)
jle
(bad)
jmp
xor
mov
mov
cld
ror
mov
(bad)
jmp
sbb
or
push
stos
loop
fisttp
rcr
jge
or
mov
mov
mov
push
scas
out
pop
mov
jmp
add
cmps
stc
out
or
add
cwde
add
pop
sbb
xchg
jns
into
sub
mov
push
mov
adc
xor
adc
icebp
and
xchg
fld
pop
or
adc
inc
or
icebp
pop
push
add
adc
mov
push
or
mov
out
pop
mov
add
add
rol
mov
add
test
sub
add
add
jg
mov
sub
mov
cmp
je
and
cmp
stos
dec
add
ja
into
jb
pop
sub
aam
mov
in
cdq
cmp
rol
test
lea
dec
mul
and
sbb
push
mov
je
push
mov
and
imul
or
inc
add
cmps
adc
(bad)
daa
and
mov
pop
pop
pop
cmps
loop
out
std
cmp
push
lock
pop
int3
push
pop
ret
mov
ss
call
loopne
or
ret
push
inc
clc
lahf
add
lea
sub
or
mov
xor
cmp
test
in
(bad)
retf
push
out
push
mov
aas
mov
push
enter
push
jg
inc
adc
jae
push
movzx
mov
dec
je
dec
je
dec
je
pop
and
inc
stos
adc
call
sub
push
jmp
(bad)
fadd
jmp
push
jmp
push
jmp
cld
xchg
push
lea
movlps
or
inc
mov
adc
dec
cmp
je
cmp
je
cmp
je
aas
or
fild
jmp
mov
fld
push
add
rcl
sar
mov
inc
sar
push
and
or
cmp
push
mov
xchg
outs
test
les
je
jp
ror
push
call
adc
or
sbb
inc
inc
shr
and
add
sbb
rol
or
xchg
pop
add
sahf
sub
bound
dec
or
in
ja
mov
cmps
or
sbb
loop
push
xor
into
adc
adc
mov
jg
add
inc
adc
pop
mov
add
sub
push
jne
xor
adc
dec
mov
jb
icebp
cld
lea
sti
dec
jl
push
mov
or
ret
or
pusha
dec
rcr
pop
xor
jg
or
xor
test
je
push
mov
cmp
and
cld
inc
cli
push
jne
push
push
push
push
sub
push
sar
inc
push
push
push
ds
push
js
pop
in
out
mov
mov
sub
ror
cld
push
and
cmp
movs
loopne
sti
inc
mov
jmp
or
rcr
shr
inc
ror
adc
mov
loop
mov
(bad)
scas
mov
out
mov
dec
in
xor
add
push
adc
addr16
push
or
adc
adc
dec
loop
movzx
dec
mov
inc
movzx
add
mov
add
not
inc
movzx
xchg
or
adc
xor
adc
(bad)
call
mov
mov
inc
movzx
mov
mov
inc
out
xchg
iret
sbb
adc
pop
shl
movzx
or
mov
xor
push
add
enter
inc
mov
cmp
sbb
int3
xor
call
sbb
in
or
gs
add
in
aas
adc
add
push
mov
push
test
je
sar
or
adc
hlt
movs
div
faddp
fist
jb
xor
cmp
loopne
inc
fstp
jb
jne
or
push
mov
cld
pop
mov
std
outs
or
or
cmp
je
sahf
jb
je
add
mov
sub
add
add
jae
push
add
icebp
pop
fcomip
inc
jno
fld
int3
add
cdq
out
adc
int3
rol
mov
(bad)
sub
js
pop
sub
js
cmp
je
push
cld
push
stos
jbe
push
jl
pop
jne
mov
(bad)
cmp
pop
imul
inc
cld
scas
inc
repnz
add
push
add
loope
push
xchg
cs
out
cmps
mov
enter
jne
mov
inc
add
(bad)
jl
xor
dec
aas
jae
or
push
or
mov
ins
push
setb
jecxz
or
dec
fs
cld
mov
add
mov
xchg
stos
(bad)
or
je
pop
stos
fwait
js
and
rcr
dec
adc
je
inc
sbb
pop
sbb
fisttp
retf
add
mov
inc
xor
cli
das
ds
and
push
sub
adc
adc
adc
pop
(bad)
jo
add
cmp
addr16
popf
mov
or
pop
jne
or
nop
adc
rcl
or
in
or
leave
mov
test
je
cmp
je
lea
inc
cmp
jne
push
push
lea
(bad)
retf
xor
fistp
fcmovnu
push
je
push
cmp
adc
xchg
push
in
sbb
pop
mov
movs
in
ins
mov
ret
ret
pop
pop
push
jle
mov
jb
std
push
xor
mov
push
or
inc
jmp
cli
inc
arpl
mov
mov
cmp
je
test
je
sub
mov
retf
sub
sar
neg
test
ret
sub
pop
or
pop
bswap
in
pop
mov
imul
test
mov
inc
dec
xor
mov
(bad)
lea
push
push
ret
sub
jmp
push
add
pop
ret
movs
and
xchg
mov
aam
push
stos
jmp
xor
sub
les
or
dec
sbb
mov
loop
jmp
aaa
mov
push
xchg
and
inc
mov
mov
mov
test
lock
imul
sbb
or
jmp
cmp
jge
mov
outs
das
jmp
mov
sub
xchg
call
pop
lds
dec
loopne
sar
div
push
mov
add
inc
cdq
sub
sbb
mov
jle
in
dec
call
leave
cmp
shl
cmp
jb
lea
inc
add
sbb
jne
sti
sbb
mov
cmp
jb
cmp
jbe
clc
cmp
jne
jmp
movs
daa
pop
lods
xor
cmps
lahf
mov
xchg
xor
and
cmp
jbe
call
pop
push
movs
in
or
add
sbb
enter
adc
sar
lds
push
push
icebp
cmp
jb
add
ret
cmp
and
xor
xor
(bad)
jns
jne
push
jl
in
ficomp
test
out
jmp
xchg
in
mov
mov
lds
sbb
xchg
xor
mov
pop
mov
mov
xor
mov
aaa
push
mov
inc
test
pop
outs
push
hlt
push
push
xchg
adc
cmc
cmps
dec
xlat
mov
xor
inc
fcomp
gs
pop
aam
enter
mov
popf
mov
mov
call
sbb
or
push
inc
test
jne
dec
sub
mov
mov
mov
push
and
pop
xchg
dec
or
add
imul
inc
mov
inc
inc
movzx
xor
push
mov
pop
jl
sbb
push
mov
and
mov
int3
add
mov
adc
lock
fmul
int3
sti
aas
mov
jne
inc
test
je
mov
jmp
add
push
fwait
cmp
int
adc
push
clc
cmp
jne
dec
add
add
mov
xchg
sar
and
add
mov
mov
dec
sar
mov
cmp
xchg
ja
xchg
enter
mov
cmp
jne
je
(bad)
cmp
call
jmp
cmp
mov
or
inc
int
fnstsw
push
jmp
cs
add
inc
lea
push
popf
(bad)
cmp
rol
test
inc
add
mov
pushf
push
mov
js
movzx
mov
shr
mov
shr
xor
mov
mov
cmp
pusha
mov
mov
dec
mov
mov
ret
add
mov
les
cld
mov
clc
dec
pop
mov
and
movsx
neg
mov
mov
xchg
test
jns
neg
pop
inc
mov
sbb
add
mov
jmp
mov
sar
add
mov
cmp
iret
mov
stc
or
inc
les
mov
inc
jmp
call
movs
test
inc
mov
(bad)
mov
push
mov
mov
cmp
mov
mov
mov
mov
mov
(bad)
jg
std
mov
jae
cmp
mov
jae
out
adc
jge
ja
call
xor
in
inc
test
icebp
out
aas
jne
test
jne
test
mov
icebp
or
shl
aad
xchg
pop
mov
push
pmuludq
out
jb
jne
lea
lea
outs
inc
sub
aam
mov
fcomip
(bad)
inc
movzx
movzx
imul
mov
mov
lea
cmp
add
push
(bad)
(bad)
cmp
jae
xor
inc
jmp
mov
mov
(bad)
xlat
dec
inc
rcl
jmp
out
jg
sub
dec
dec
mov
test
jg
loopne
jne
mov
leave
cmp
test
xchg
fwait
clc
push
inc
jge
fild
(bad)
scas
jne
mov
jle
test
scas
inc
jno
jg
mov
mov
shr
test
rol
mov
or
cld
add
xor
out
mov
out
test
scas
(bad)
jg
ret
jg
add
adc
mov
mov
neg
xor
movzx
add
adc
jg
mov
inc
mov
test
je
inc
mov
mov
ret
mov
shr
or
mov
out
shr
or
dec
mov
push
icebp
out
inc
hlt
imul
add
jge
pop
call
pcmpgtd
mov
mov
mov
nop
(bad)
clc
mov
ja
and
sti
repnz
dec
out
cmp
fs
mov
inc
ret
repz
mov
test
(bad)
jge
push
cmp
jae
repnz
js
mov
cmp
fcom
dec
out
mov
jmp
add
sbb
adc
inc
movs
cld
into
cli
sbb
mov
outs
mov
mov
mov
mov
idiv
(bad)
dec
aas
dec
mov
mov
ins
shr
(bad)
jb
es
inc
add
inc
fimul
cld
pop
cmp
and
mov
and
clc
sbb
and
mov
add
stc
lods
gs
inc
mov
jo
inc
test
inc
pushf
jae
mov
out
gs
push
push
imul
jno
push
cmp
je
mov
lea
push
mov
pop
mov
test
jle
xlat
(bad)
call
jge
lea
lea
mov
mov
movzx
pop
imul
mov
shl
cmp
pushf
lea
cmp
sar
rol
cmp
inc
pushf
mov
xor
add
nop
add
jg
mov
dec
inc
int
mov
mov
jecxz
mov
inc
dec
mov
test
jg
adc
sbb
jae
mov
mov
dec
sbb
(bad)
cwde
test
js
test
rol
add
(bad)
mov
icebp
xchg
jne
or
out
(bad)
jg
mov
mov
push
pop
inc
jle
mov
jmp
adc
test
sub
aad
inc
and
xchg
sbb
mul
(bad)
inc
ror
fistp
cli
jmp
mov
jl
cdq
pop
jmp
test
mov
test
sbb
pop
hlt
mov
mov
pop
adc
shr
or
or
shr
(bad)
fdiv
call
dec
test
push
lock
push
test
mov
add
test
jo
inc
or
not
in
lock
jne
xor
ret
cmp
repnz
mov
aam
fwait
aam
ret
icebp
cmp
sbb
lahf
sar
inc
sbb
mov
mov
mov
pop
sbb
adc
mov
je
cwde
dec
jge
or
mov
dec
(bad)
mul
inc
or
inc
add
rol
add
inc
add
mov
mov
mov
clc
jle
mov
sar
cld
out
adc
push
mov
hlt
(bad)
(bad)
fistp
pop
mov
mov
shr
add
shr
add
add
or
or
sbb
std
call
call
jge
mov
fs
cli
outs
jo
jns
neg
and
jle
mov
mov
shr
cmc
scas
aaa
in
ins
loope
push
or
shr
arpl
dec
mov
jmp
inc
pop
scas
loope
push
std
cmp
adc
jne
inc
mov
add
sbb
dec
jge
mov
mov
mov
lea
and
lahf
jmp
mov
xchg
dec
rcr
lea
mov
or
cmp
retf
test
mov
or
retf
icebp
mov
iret
cmc
enter
inc
add
push
and
add
cmps
fisttp
je
inc
mov
push
cli
sub
jae
inc
add
mov
mov
std
jg
push
mov
pop
mov
mov
lea
or
test
ja
repz
mov
inc
call
pop
jmp
cdq
mov
mov
mov
adc
fidivr
mov
mov
cmp
jl
jmp
cmp
jne
mov
dec
cmp
jae
add
sbb
(bad)
jmp
push
inc
mov
sub
sub
mov
movsx
mov
mov
sti
cmp
jne
cmp
int3
ja
adc
stc
pop
xor
daa
sub
fistp
mov
xor
jmp
mov
push
push
push
mov
(bad)
test
je
or
fdivr
test
jo
or
je
hlt
into
adc
adc
add
rcl
or
sub
(bad)
mov
mov
pop
cmp
je
cmp
je
cmp
mov
adc
jmp
or
dec
push
add
retf
pop
add
add
mov
xor
jne
or
enter
lds
icebp
or
sub
(bad)
outs
xor
pusha
in
xor
test
je
push
pop
test
mov
or
leave
add
(bad)
out
dec
inc
xchg
add
add
leave
add
scas
or
lock
sub
es
sub
stos
adc
idiv
sti
xchg
jmp
or
jmp
add
add
mov
jae
jne
lock
mov
add
ret
(bad)
mov
movs
not
and
and
or
cmp
rcr
push
test
pop
mov
jb
mov
ins
clc
(bad)
sub
xor
lds
into
into
into
sbb
lahf
xchg
into
into
movzx
mov
and
je
sub
mov
je
pop
lea
into
cmps
jmp
inc
xlat
cmp
outs
mov
out
add
je
jmp
dec
add
sbb
clc
mov
adc
jl
add
add
scas
mov
inc
hlt
xor
test
jns
test
je
lock
clc
dec
push
adc
or
add
or
or
mov
mov
sar
cli
or
dec
leave
leave
pop
cwde
leave
cmp
inc
and
cmc
pop
sub
je
sub
sub
sub
add
clc
(bad)
ins
jo
aam
add
add
mov
and
or
xchg
(bad)
xor
fist
jp
mov
call
pop
inc
pusha
scas
mov
(bad)
test
aad
retf
adc
add
xlat
popf
or
ret
jecxz
and
popf
inc
loope
add
mov
test
mov
mov
jmp
mov
jmp
in
stos
add
add
dec
fucomp
or
lahf
pop
or
push
ja
pop
and
mov
gs
(bad)
je
mov
mov
mov
mov
cmp
fnstsw
sub
jne
or
jmp
or
loopne
or
adc
push
cld
mov
add
mov
lods
mov
rcl
test
dec
push
pop
mov
je
push
dec
test
shl
xchg
push
mov
mov
push
add
pop
cmp
ja
mov
lahf
or
push
ror
(bad)
add
jns
or
neg
sbb
retf
dec
or
lock
call
fisttp
or
or
pop
cld
js
cld
inc
add
jmp
add
data16
add
loopne
jo
fwait
and
(bad)
jb
push
cmp
and
sbb
xor
push
add
sbb
mov
mov
xor
adc
fisubr
xor
jnp
out
add
add
mov
dec
or
jb
push
add
pop
(bad)
cld
(bad)
jg
div
rol
cmp
jg
jl
cmp
jae
jmp
push
inc
and
jl
dec
mov
adc
inc
jne
test
jns
push
push
jmp
into
test
push
in
jne
jle
sub
dec
and
dec
or
jg
inc
mov
ja
jno
sub
jle
repz
jno
jo
(bad)
inc
adc
or
inc
ins
ror
or
inc
hlt
outs
xchg
mov
sbb
fsubr
or
pop
inc
test
je
cmp
jb
add
test
sub
call
lahf
push
xor
mov
dec
cs
ret
add
fistp
adc
mov
cmp
mov
lahf
scas
mov
pop
pop
test
jne
fld
adc
inc
or
xchg
xor
fstp
ja
mov
lock
push
clc
fld
and
daa
out
push
or
pop
pop
and
xlat
jmp
fstp
push
pop
sub
cmc
out
mov
inc
push
xor
fabs
mov
adc
cmp
jne
jne
fld1
fcom
fistp
test
jp
fstp
fstp
fld
iret
sub
jbe
mov
jne
(bad)
out
sbb
inc
ds
jge
out
pop
scas
fcompp
push
cmp
push
pop
add
jbe
or
neg
sbb
push
fcomp
test
test
je
scas
pop
fmul
cmp
pusha
jo
sbb
jne
sub
cmp
(bad)
mov
pop
fcom
mov
jp
adc
jo
cmp
jne
fchs
jmp
dec
jp
(bad)
or
mov
jmp
mov
popa
ffree
push
cmp
(bad)
fwait
mov
xor
mov
lock
mov
mov
mov
cmp
jbe
gs
mov
sub
hlt
lea
mov
mov
outs
test
or
shl
clc
mov
lock
dec
mov
(bad)
(bad)
jg
add
add
adc
lock
mov
add
or
mov
add
mov
xor
mov
outs
cli
mov
in
leave
inc
mov
test
je
mov
xor
dec
addr16
lea
cmp
out
add
jae
or
xor
push
call
push
mov
into
in
retf
cld
ja
rol
add
shl
ret
hlt
ja
jp
(bad)
jge
add
and
add
mov
xchg
popf
jg
(bad)
out
pop
adc
mov
mov
mov
lea
push
inc
lidtd
mov
je
je
nop
shr
xchg
and
inc
and
inc
aas
jnp
loopne
cmp
dec
adc
inc
or
test
(bad)
inc
test
(bad)
(bad)
dec
sar
push
or
mov
mov
mov
ja
inc
fbstp
adc
call
shl
nop
add
mov
mov
ja
fdivr
paddw
mov
test
cmp
mov
(bad)
sar
mov
add
or
add
loopne
out
sub
cmp
mov
inc
mov
or
add
pop
rol
cmp
scas
or
repz
(bad)
pop
add
call
sbb
sbb
clc
test
and
ret
or
and
dec
ret
jb
pop
sub
dec
cmp
and
adc
inc
shr
and
push
cmp
mov
adc
jb
inc
or
test
or
pop
add
add
pmuludq
or
push
push
rol
mov
sar
addr16
mov
lea
mov
lea
inc
inc
pop
ret
add
inc
hlt
in
add
out
mov
ins
xchg
mov
mov
adc
fist
or
push
lea
rep
mov
push
mov
fimul
(bad)
jg
mov
leave
cmp
sete
mov
mov
push
adc
fwait
call
retf
sar
and
mov
rcl
jo
jmp
or
inc
cmp
add
fs
sub
push
push
push
fistp
cmp
je
xchg
or
out
loop
jmp
ret
mov
dec
xor
cld
xchg
and
push
and
push
push
push
aas
or
fimul
add
lock
je
or
ret
adc
mov
ja
add
sbb
inc
std
push
(bad)
add
push
sbb
or
adc
mov
inc
iret
test
add
push
add
(bad)
mov
enter
adc
push
jmp
mov
mov
mov
out
dec
inc
push
icebp
cmps
lea
push
jl
cwde
jg
(bad)
fst
loope
ret
ins
push
pop
and
leave
cmp
pop
sub
mov
sub
pop
call
cmp
cdq
cmp
je
cmp
je
in
(bad)
(bad)
jg
and
test
je
cmp
push
mov
je
inc
cmp
jne
sub
inc
jo
or
cld
push
or
add
push
push
or
dec
pop
pop
mov
push
and
xor
dec
(bad)
inc
outs
clc
inc
add
jg
mov
or
xor
fcmovnb
jg
icebp
out
add
or
enter
add
add
icebp
jmp
or
mov
pop
pop
push
mov
add
test
jg
mov
mov
call
mov
cmp
xor
mov
push
push
pop
jno
fstp
(bad)
jnp
jge
jmp
push
or
jmp
mov
dec
mov
or
xchg
shl
jne
push
jae
xchg
mov
pop
and
add
gs
add
mov
push
lea
and
lods
fs
jmp
daa
adc
jnp
pop
and
lahf
clc
mov
xor
mov
dec
and
pop
mov
inc
lea
push
xor
push
adc
add
outs
sahf
mov
push
inc
and
cmp
fist
push
add
push
mov
in
sar
ret
daa
sub
gs
sbb
scas
fstp
push
je
dec
cld
pop
mov
push
add
sub
sub
pop
sbb
nop
push
lahf
adc
mov
mov
add
jg
inc
cmp
je
lea
mov
or
mov
inc
mov
mov
jg
ds
ud2
push
push
push
mov
mov
jmp
push
push
rcr
push
or
in
pop
rol
mov
cmp
not
dec
sar
inc
shr
dec
test
je
or
jo
mov
push
mov
fisttp
out
mov
sahf
mov
stos
sbb
mov
add
icebp
and
mov
nop
(bad)
lahf
sub
pop
pop
ret
push
(bad)
stc
mov
inc
and
not
xchg
sbb
xor
(bad)
inc
dec
clc
jl
pop
cdq
sub
enter
add
inc
or
ds
cmp
jge
imul
scas
cmp
nop
adc
adc
pop
js
ror
nop
jns
ret
mov
push
movs
add
cmp
xchg
bound
mov
mov
cmp
je
mov
clc
out
mov
mov
add
mov
pop
mov
inc
mov
mov
pop
shr
and
loopne
daa
or
fiadd
and
adc
movzx
xor
scas
fcom
pop
xchg
mov
push
imul
out
data16
pop
jae
lea
test
in
jle
sub
cdq
jmp
ins
ror
and
jo
rol
add
or
cmc
stos
scas
mov
mov
stc
adc
je
aad
mov
push
test
dec
mov
xor
ret
std
sbb
jmp
mov
mov
lea
rep
mov
mov
dec
enter
inc
push
(bad)
(bad)
(bad)
fdiv
mov
pop
je
mov
cmp
jbe
(bad)
loopne
sbb
push
push
push
push
push
push
pop
fdiv
sbb
mov
test
jmp
mov
or
and
imul
mov
movzx
mov
mov
mov
jg
shr
inc
shl
test
je
mov
lock
call
enter
push
mov
push
in
xchg
fs
mov
je
xor
leave
sahf
std
pcmpeqw
jne
jnp
lea
inc
inc
paddsb
push
daa
jne
cmp
sahf
cmp
add
mov
and
and
hlt
pusha
push
jo
(bad)
rol
adc
jmp
hlt
pusha
mov
and
xlat
or
addr16
ror
mov
add
add
sbb
rcr
push
mov
js
or
mov
add
mov
mov
mov
mov
dec
sbb
xchg
or
push
pop
or
or
jae
mov
cmp
mov
int3
lea
add
add
add
inc
add
sbb
mov
mov
mov
retf
mov
inc
add
rol
cli
or
or
dec
shr
adc
push
mov
mov
(bad)
(bad)
dec
pop
jmp
xor
mov
mov
inc
(bad)
jne
lea
push
test
push
mov
adc
push
cmp
jne
(bad)
jg
sub
cmp
movzx
je
movzx
shl
or
mov
cld
push
stc
jae
add
add
push
movsx
sahf
sbb
push
or
ret
or
sub
sar
push
adc
ret
jb
inc
add
inc
lahf
repnz
pop
call
and
push
mov
in
add
sbb
jmp
add
or
jo
add
lock
stos
dec
adc
ja
ja
xor
arpl
mov
and
and
inc
add
pmuludq
shr
(bad)
push
mul
or
or
add
lock
add
jg
cs
test
je
test
je
call
(bad)
jl
shl
or
out
sbb
sbb
scas
aad
jl
lock
div
push
mov
add
adc
je
push
jmp
push
mov
pop
mov
inc
push
jmp
addr16
aam
sbb
sub
push
mov
stos
and
call
aaa
jo
mov
stc
or
pop
pop
dec
add
je
inc
dec
push
dec
xor
fist
sub
and
and
aam
push
fmul
ja
cmps
adc
or
lods
daa
ins
int3
lds
mov
or
adc
ret
int3
rep
add
push
repz
nop
xchg
jp
cmps
rcr
mov
adc
inc
or
out
call
adc
or
adc
aad
inc
add
or
cs
pop
arpl
mov
shr
ret
mov
xor
sub
movups
jle
mov
mov
mov
mov
popf
jne
sbb
(bad)
aam
dec
sub
sbb
rcl
adc
imul
jmp
and
pop
cmps
jo
mov
outs
sbb
rcl
push
pop
xchg
add
xor
push
or
inc
call
or
imul
mov
mov
mov
mov
(bad)
sub
add
mov
idiv
jnp
jmp
bswap
push
call
pop
and
mov
push
ins
add
xchg
jmp
adc
rcpps
jbe
mov
add
das
(bad)
cmp
mov
sahf
and
clc
push
jg
cmp
xor
push
xchg
loopne
lods
mov
pop
fst
add
repz
jno
and
push
cwde
lock
dec
clc
es
fmul
(bad)
jge
jnp
call
arpl
push
repz
add
or
ja
fiadd
push
mov
fsub
and
adc
push
push
or
or
or
pop
sbb
test
or
mov
popw
inc
mov
pop
mov
sub
lock
mov
js
ror
xor
inc
sar
inc
cld
mov
dec
rcl
scas
add
dec
retf
mov
add
and
add
mov
or
ja
mov
jecxz
add
ret
(bad)
fwait
cli
jb
cdq
lock
sub
loope
mov
fadd
dec
or
pop
ret
(bad)
push
mov
call
imul
dec
jo
scas
push
push
js
int3
pop
outs
ret
sbb
or
(bad)
out
int3
add
adc
ret
jl
inc
cld
pop
nop
mov
mov
mov
inc
call
and
(bad)
fld
test
popf
jmp
in
adc
sbb
mov
fidivr
daa
mov
fistp
and
cmp
inc
in
mov
mov
push
lock
movdqu
movdqu
cmp
add
push
or
in
xor
xchg
pop
mov
mov
jo
push
popf
and
sbb
push
jbe
lea
cld
pop
scas
dec
fsubr
inc
or
or
add
std
aad
add
pushf
jl
lea
enter
cmps
mov
sub
mov
mov
(bad)
adc
out
fld
adc
mov
and
fmul
xor
add
shl
dec
push
imul
hlt
lods
mov
and
enter
and
mov
je
adc
sti
cdq
loope
imul
es
and
mov
fcom
pop
add
outs
xor
adc
sbb
es
pop
inc
or
pop
add
push
xor
dec
or
fnstsw
push
adc
arpl
dec
xchg
adc
and
dec
dec
push
push
ffreep
inc
sub
icebp
xchg
ja
sub
or
adc
ja
add
sbb
push
mov
repnz
les
neg
xor
mov
rcr
in
cmps
retf
inc
push
(bad)
(bad)
jmp
add
pop
in
mov
mov
push
mov
mov
call
dec
push
std
sbb
push
mov
mov
xor
test
lock
or
inc
mov
xchg
xchg
jns
cmps
loop
(bad)
je
mov
stos
(bad)
call
mov
and
arpl
add
dec
add
mov
add
ds
or
leave
fcmovne
pop
fiadd
pusha
push
test
jne
push
push
push
push
cmp
call
and
or
and
pop
add
daa
je
adc
lock
fs
xchg
jb
ret
adc
mov
sbb
cs
mov
jno
adc
add
sbb
fsub
mov
aas
xor
nop
lock
add
xchg
inc
mov
mov
xor
adc
lahf
push
sub
inc
adc
scas
jl
dec
in
inc
test
and
loop
out
xor
out
in
add
in
push
push
add
adc
push
add
dec
aam
and
loopne
xchg
xchg
(bad)
xor
adc
push
dec
out
mov
mov
ret
push
inc
pop
or
xor
or
pop
push
mov
push
push
fcom
inc
(bad)
gs
test
xor
or
push
cld
popa
dec
pop
(bad)
mov
mov
lea
add
cmp
push
sar
add
add
mov
(bad)
pop
or
mov
inc
mov
push
mov
and
push
dec
and
inc
inc
or
aas
push
lea
mov
jecxz
sub
sub
retf
jbe
xchg
je
adc
inc
cmps
out
stos
stos
mov
add
(bad)
pop
mov
fdiv
movzx
pop
int3
dec
xor
ja
fbld
dec
clc
add
ss
outs
sbb
jne
call
stos
adc
sub
and
fdiv
cmp
popa
jecxz
push
mov
lea
mov
stos
mov
shl
sub
push
push
mov
retf
adc
and
fadd
cmp
or
lods
out
and
aaa
js
jge
pop
in
(bad)
ds
cmp
in
sbb
mul
mov
push
lea
cmp
add
mov
adc
ror
ret
loope
pushf
test
je
push
sub
adc
loopne
inc
fmul
inc
mov
dec
add
push
mov
cmp
push
adc
or
jne
out
cmp
shl
fcmovnb
fwait
out
push
push
pop
ret
mov
lea
call
pop
sbb
adc
jg
mov
add
ins
add
iret
and
dec
pop
add
adc
mov
je
mov
outs
(bad)
jg
ret
sbb
shl
add
jne
in
cld
pop
icebp
(bad)
popa
add
add
pop
int3
jmp
pushf
mov
mov
repz
lea
ror
jp
push
lea
mov
pop
fdivr
mov
push
or
pushf
add
cmp
pop
cmp
cmp
mov
fbld
add
sbb
push
sub
jo
mov
pop
test
lea
les
imul
in
clc
push
push
push
push
xchg
pushf
sbb
cmp
bound
stos
add
aad
dec
aas
cmp
lea
ret
dec
push
push
cmp
mov
sbb
inc
xchg
push
add
rcl
lods
sbb
fstp
mov
cmps
popf
mul
cld
(bad)
dec
sub
call
sar
or
pop
inc
clc
sbb
mov
cmp
push
adc
sub
sbb
push
sub
lock
lea
ds
lock
push
clc
(bad)
ins
add
popf
inc
or
shl
or
int
push
ret
add
sti
and
mov
or
xor
mov
mov
cli
mov
mov
fisttp
mov
adc
and
xchg
mov
add
sti
dec
int3
mov
jmp
adc
or
lods
xchg
cmp
add
scas
push
push
pusha
sub
or
inc
mov
retf
cwde
xchg
outs
jmp
lea
or
test
fadd
pop
mov
(bad)
dec
xor
push
or
cld
push
inc
addr16
stc
fucom
enter
add
int3
xor
add
scas
push
and
inc
push
or
add
xor
imul
lahf
dec
fnstenv
add
test
loop
out
(bad)
mov
mov
push
mov
inc
fcom
jge
je
mov
mov
out
popf
push
or
jge
inc
push
push
lods
sti
xchg
(bad)
ffreep
mov
jne
xor
jmp
mov
lea
jmp
lea
mov
ja
mov
ret
cmc
sub
sar
push
dec
push
ins
jmp
movd
or
fcomip
add
jmp
fwait
xor
add
ja
(bad)
dec
shr
mov
lea
mov
add
push
cmc
shl
sub
sar
push
push
and
inc
jne
mov
loope
add
into
add
mov
jb
out
pop
mov
int3
mov
call
and
loopne
dec
jmp
jmp
add
push
push
mov
and
scas
sub
mov
mov
mov
push
out
jmp
mov
xor
or
das
pop
xor
xor
xchg
xchg
xor
fild
scas
mov
pop
xor
sbb
inc
cmp
in
lods
cdq
sub
add
or
fisubr
push
(bad)
punpckhdq
or
sahf
std
or
call
sub
popa
or
push
call
rol
scas
loop
scas
fs
add
inc
je
test
jge
mov
push
push
sbb
outs
adc
pusha
cmp
jle
mov
dec
pusha
call
xor
adc
sbb
mov
mov
leave
and
or
shl
cmp
and
push
inc
or
ror
stos
and
xor
leave
pop
fcomp
repnz
lock
lea
push
mov
leave
pop
mov
(bad)
inc
test
jne
mov
mov
lea
mov
test
pop
xor
std
je
mov
lea
pop
je
fnstsw
adc
push
push
push
adc
adc
(bad)
sbb
inc
add
xor
sbb
or
shl
mov
jg
in
cmp
adc
push
inc
fld
adc
or
jae
aam
pop
mov
xchg
fwait
cwde
ror
dec
add
add
inc
sbb
adc
pop
in
cmp
(bad)
out
sbb
pop
xchg
scas
mov
mov
mov
mov
mov
(bad)
dec
sbb
sbb
inc
push
sbb
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
mov
push
inc
(bad)
mov
inc
inc
push
inc
mov
xlat
push
jne
ins
mov
add
test
jg
lea
mov
jns
ja
rcr
jmp
push
or
dec
add
sbb
enter
cmps
add
lea
or
test
je
and
in
push
push
(bad)
loop
adc
mov
add
push
rol
or
out
ds
mov
mov
cdq
mov
cdq
add
or
pushw
add
(bad)
mov
(bad)
mov
xchg
jmp
xchg
jae
jno
or
xchg
xchg
and
xchg
sbb
or
and
ret
and
adc
jnp
add
mov
jmp
enter
mov
push
out
sbb
sbb
popa
pushf
mov
dec
lock
dec
or
div
jne
fdivr
out
inc
inc
or
inc
cmp
and
(bad)
fisttp
ror
cmp
je
pop
mov
add
pop
or
sbb
or
cmp
shl
xchg
fnstcw
inc
push
mov
cmp
jne
dec
mov
dec
push
mov
in
push
push
call
adc
mov
sub
ja
mov
jno
ret
xor
inc
jl
inc
in
ffreep
add
inc
ins
cmp
push
shl
jnp
inc
xor
cs
xor
jmp
or
add
inc
sbb
dec
sbb
out
hlt
adc
mov
cmps
out
adc
jmp
or
or
jo
outs
or
jp
scas
loopne
ins
jmp
sub
arpl
int
shr
loope
mov
and
clc
loope
or
push
daa
sbb
mov
jno
mov
cmp
int3
std
lahf
add
push
sbb
inc
or
xor
enter
mov
movs
pop
add
pop
lahf
push
mov
popa
(bad)
aas
jb
xchg
mov
mov
scas
lock
lea
push
push
dec
sub
call
mov
dec
xor
add
add
adc
leave
sub
xlat
sbb
loopne
inc
sub
cld
dec
jo
and
adc
test
pop
setne
dec
mov
pop
(bad)
imul
mov
inc
ja
push
add
call
daa
mov
xor
mov
mov
enter
inc
loopne
lahf
pop
lea
cli
mov
mov
jae
push
mov
push
push
push
push
pusha
pop
inc
push
push
lea
fst
add
push
or
cld
push
in
pop
pop
jg
fnstcw
sub
bound
ins
cmp
xchg
sbb
das
sub
clc
scas
or
aas
mov
mov
sbb
push
push
cwde
lock
sbb
shl
out
add
mov
push
sbb
in
ins
mov
sbb
pop
push
xor
jp
jg
cmp
jno
int
sub
mov
push
icebp
inc
mov
cmp
int
push
push
and
add
sar
sar
adc
in
add
je
lahf
or
push
xor
push
or
sbb
popa
int3
inc
sbb
stos
mov
(bad)
lock
cdq
jge
bound
cld
push
(bad)
(bad)
addr16
jbe
and
ror
add
jp
js
in
std
es
cwde
je
or
mov
inc
cs
mov
pop
sbb
lock
add
mov
(bad)
lock
inc
push
push
xor
ret
and
sbb
dec
cmp
ja
out
out
cmp
test
and
stos
or
imul
int
dec
cmps
mov
scas
or
scas
mov
add
pop
push
xor
je
ret
add
test
add
std
add
test
dec
ror
push
sbb
or
or
push
int3
or
out
and
jo
push
pop
add
or
jo
sub
loope
jle
xchg
push
cmp
sbb
popa
int3
jecxz
jle
sbb
pop
ret
push
sbb
int3
popw
stos
fist
and
daa
add
int
push
aaa
inc
cmp
mov
sub
mov
mov
jmp
outs
sub
hlt
mov
cmp
sbb
adc
(bad)
jmp
sbb
and
push
cmp
je
test
je
mov
jnp
add
sbb
fcom
scas
(bad)
es
shl
push
mov
jbe
push
mov
add
or
ja
popa
int3
retf
ret
int
lds
pusha
xor
mov
ret
popa
pusha
xor
inc
mov
jno
pop
leave
push
data16
mov
je
popa
mov
mov
cld
and
or
pop
jmp
popa
scas
xor
xlat
xor
dec
inc
sbb
movs
sbb
cmp
add
cwde
jno
add
pop
adc
icebp
pop
adc
inc
and
mov
mov
xlat
mov
out
mov
cs
mov
pop
mov
xchg
je
cmp
je
cmp
test
mov
mov
push
xor
push
and
push
js
sbb
ins
jge
test
cwde
popf
push
push
adc
fistp
lea
mov
mov
push
adc
pop
call
or
add
(bad)
mov
pop
outs
mov
push
mov
in
ret
xor
and
std
and
std
ret
mov
cwde
movs
add
cld
pop
sar
jg
cmp
jle
add
sti
dec
mov
mov
mov
cmp
je
mov
je
mov
and
inc
cmp
jne
jmp
mov
push
push
cmp
int3
add
or
ret
fcos
or
jge
sub
or
push
xor
or
add
adc
pusha
cmps
pusha
mov
add
inc
or
mov
push
inc
and
add
add
xor
xor
pop
push
test
sbb
cmp
pop
ins
and
loopne
popa
(bad)
pushf
movups
xor
dec
popf
jmp
jnp
or
ins
jns
adc
mov
push
mov
pop
cmps
cmp
outs
fnstenv
jne
pop
push
push
(bad)
jo
mov
jg
cmp
cwde
mov
pop
test
in
pushf
cmp
fsubr
dec
dec
test
cmp
jge
mov
mov
daa
mov
into
push
push
mov
sub
(bad)
out
add
mov
mov
(bad)
cmp
je
push
push
add
jae
call
mov
xchg
movs
add
leave
and
cmp
sbb
inc
lock
lea
mov
or
mov
add
lea
loopne
rol
in
push
add
jmp
mov
mov
ins
xor
xchg
push
push
cmp
aaa
bound
sub
or
mov
jne
jbe
movs
or
or
int3
inc
mov
jbe
aad
xor
adc
in
inc
shl
add
pop
mov
(bad)
out
mov
push
push
pop
scas
adc
inc
(bad)
xchg
add
dec
jle
cmp
idiv
xor
lea
jb
mov
push
ds
push
inc
push
push
xor
lahf
daa
and
push
pop
mov
push
or
cmps
arpl
dec
(bad)
jg
dec
pop
cmp
sbb
mov
lea
cmp
jne
cmp
jmp
(bad)
jne
ins
add
add
pop
cmp
je
mov
mov
push
mov
mov
nop
jecxz
adc
inc
add
dec
psubd
sub
xor
xor
adc
xchg
dec
fsub
xchg
jmp
es
jg
in
dec
and
daa
mov
or
(bad)
call
mov
mov
mov
mov
mov
or
inc
and
inc
inc
mov
loopne
jg
inc
mov
adc
or
mov
test
outs
or
or
xor
inc
xor
pusha
(bad)
add
xlat
mov
adc
inc
jge
dec
mov
mov
cmp
add
or
pop
test
or
add
scas
arpl
shl
add
push
push
mov
test
add
adc
fdivr
xchg
push
xor
and
das
push
aas
and
push
sbb
mov
inc
mov
mov
cmp
in
and
add
out
hlt
xchg
ss
lock
jne
cmp
lea
push
fisttp
push
push
xchg
jl
arpl
clc
bound
(bad)
mov
mov
inc
inc
and
mov
xor
add
xor
mov
jno
sbb
add
adc
inc
sbb
jbe
push
mov
inc
shl
aad
or
jp
inc
inc
clc
lock
add
mul
push
seto
neg
or
add
inc
dec
or
add
cmp
daa
mov
mov
dec
js
mov
xor
lea
add
mov
jns
int3
fild
fdiv
mov
fistp
pop
sbb
shl
add
push
push
push
das
xor
jno
xchg
jo
rcr
sbb
jbe
inc
mov
jmp
mov
jmp
ins
fsub
jmp
add
push
push
lea
dec
push
jns
jno
push
inc
dec
sbb
lods
inc
sbb
jge
sub
mov
push
push
shl
add
sub
push
sbb
lock
iret
pushf
add
xchg
scas
dec
push
sbb
iret
pushf
push
or
mov
sbb
adc
xor
pop
(bad)
mov
clc
mov
clc
sub
je
sub
add
and
xor
adc
push
jne
push
mov
mov
dec
cld
mov
push
pop
mov
test
je
cs
call
mov
lea
mov
test
je
mov
lea
hlt
push
std
or
mov
cld
mov
mov
sub
(bad)
pop
scas
ja
jb
lea
and
pop
pop
mov
mov
pop
push
pop
inc
in
stc
fmul
mov
iret
inc
(bad)
fcomip
mov
push
adc
sbb
popa
shl
add
cmp
je
push
push
mov
ja
push
sti
lea
mov
ins
add
cmp
fwait
(bad)
(bad)
fnsave
xor
movq
sub
mov
imul
xor
cli
push
jge
inc
mov
shr
add
data16
add
push
(bad)
daa
mov
and
jecxz
jg
adc
or
ret
mov
pop
ret
das
mov
xchg
inc
add
mov
ins
and
add
dec
arpl
arpl
or
test
inc
adc
push
mov
daa
cli
sahf
adc
add
mov
sub
inc
and
or
icebp
xor
push
dec
stc
push
lea
mov
lock
mov
shl
mov
sbb
rol
mov
leave
and
aaa
or
mov
mov
xor
sub
jbe
mov
dec
mov
jbe
jnp
lar
inc
pop
mov
inc
dec
push
inc
into
jne
jmp
inc
push
add
push
inc
push
icebp
adc
push
sbb
cwde
lea
cmps
test
lahf
pop
cwde
mov
pop
pop
ret
int3
push
mov
ret
shl
push
push
les
inc
leave
loop
into
mov
loope
lds
mov
adc
cmp
je
mov
nop
sbb
jne
pop
push
xchg
outs
test
cwde
dec
pop
ret
or
out
jbe
jg
add
inc
dec
dec
(bad)
(bad)
pop
cmp
in
cmp
dec
mov
mul
aas
inc
inc
xchg
mov
ss
mov
int3
(bad)
mov
(bad)
push
call
cmp
mov
mov
jmp
inc
xor
cwde
sub
or
cmps
sbb
or
push
test
test
test
or
ins
clc
sub
mov
inc
(bad)
cmps
add
bound
(bad)
sti
adc
dec
popa
test
inc
add
bound
or
mov
out
dec
add
rcl
adc
icebp
(bad)
mov
dec
or
mov
cmp
jne
mov
jmp
cld
(bad)
call
inc
mov
cmp
jne
mov
lea
lea
shl
add
jmp
dec
sbb
(bad)
loope
xchg
cmp
jb
and
inc
adc
inc
outs
cli
frstor
lea
ja
jae
push
mov
aad
pop
sub
ss
mov
mov
ja
push
cs
call
lds
mov
add
mov
pop
or
add
aad
ins
and
pop
adc
pop
aaa
sub
mov
and
adc
push
dec
cld
jnp
aas
stos
popa
xchg
inc
cmp
mov
lea
push
push
call
mov
loopne
rcr
add
inc
inc
in
pusha
loopne
and
(bad)
dec
test
mov
sbb
mov
cmp
je
aas
jne
pop
push
push
xchg
pop
mov
(bad)
adc
or
jg
bound
pop
push
xchg
lds
and
(bad)
iret
js
mov
inc
sub
and
lea
mov
sub
cmp
jne
mov
call
push
push
arpl
inc
or
inc
pop
(bad)
int3
mov
ret
clc
sahf
retf
ins
sub
mov
and
adc
sub
adc
sar
inc
movs
stos
or
in
jne
js
inc
xor
stos
jmp
jbe
les
test
pop
pop
mov
cmp
(bad)
fcomip
stos
dec
or
jle
or
mov
inc
je
das
and
fld
sar
clc
adc
and
dec
int3
cmp
xchg
cmp
mov
mov
mov
xor
push
xor
fld
add
pop
loope
hlt
add
ins
out
hlt
aas
mov
ins
in
in
outs
in
dec
mov
imul
or
jo
(bad)
div
or
sub
cmp
jb
int3
loopne
inc
dec
mov
iret
adc
sub
add
pop
mov
cs
dec
fisttp
xchg
sbb
mov
cmp
push
vmwrite
jge
push
leave
xor
mov
jb
and
jmp
pop
call
test
(bad)
enter
push
mov
call
cmp
mov
in
(bad)
int3
jne
lea
out
cmp
js
jecxz
jne
and
push
mov
dec
xor
(bad)
sbb
test
je
inc
dec
and
(bad)
test
push
mov
call
xchg
mov
outs
mov
ja
mov
add
inc
or
inc
xor
push
sbb
jb
mov
je
or
aas
sub
or
cmp
(bad)
inc
shr
and
mov
dec
dec
dec
test
sar
sar
or
mov
outs
xchg
repnz
mov
sbb
(bad)
out
push
mov
movzx
mov
int3
sbb
test
sub
xlat
call
ins
hlt
jne
sub
pushf
stos
sbb
mov
icebp
sub
and
jmp
add
adc
add
lea
neg
inc
or
addr16
mov
dec
fdiv
rcl
test
or
push
ja
push
mov
in
aad
mov
add
xchg
sbb
fcomp
mov
or
add
ja
neg
je
lea
add
movs
call
pop
retf
loop
(bad)
push
mov
mov
and
push
add
je
push
call
adc
and
jle
push
xor
ja
mov
pop
pop
mov
in
mov
int3
add
sti
mov
push
xlat
enter
ins
inc
iret
ss
outs
cmp
mov
scas
mov
lea
mov
mov
mov
adc
minps
test
sbb
inc
or
pop
(bad)
add
mov
shl
inc
mov
push
fbld
iret
mov
or
lea
mov
dec
sub
or
adc
mov
dec
sbb
inc
push
push
add
dec
div
(bad)
mov
push
sub
mov
je
push
xor
(bad)
aad
dec
and
jnp
(bad)
addr16
inc
rcl
enter
push
mov
xchg
lds
mov
xchg
test
ins
lods
loope
add
inc
mov
xor
xor
or
aaa
push
xchg
dec
test
sar
test
je
enter
jnp
xor
xor
pop
in
add
pop
ins
scas
or
add
retf
sub
cmp
ja
jae
sub
mov
add
test
pushf
in
sbb
push
push
test
mov
mov
add
add
dec
dec
into
lds
test
mov
outs
xor
push
pop
icebp
add
mov
mov
test
ja
test
jae
or
jne
sub
shl
enter
sbb
int3
or
test
mov
sub
inc
sti
lods
or
ins
adc
push
sbb
sbb
xorps
movlpd
sbb
(bad)
dec
sti
mov
mov
jmp
mov
fidiv
mov
cmp
mul
cmc
jb
sub
dec
mov
or
mov
jmp
mov
add
dec
call
cmp
jne
mov
mov
mov
cmp
pop
aam
inc
xor
xlat
jg
xor
lock
or
loopne
mov
xor
add
in
push
sub
mov
loop
mov
or
test
dec
dec
pop
xor
sti
lock
pop
aam
push
pop
loope
outs
fisttp
fdiv
adc
ret
adc
cld
and
xchg
xchg
adc
pop
outs
add
test
mov
pop
ret
fimul
inc
call
imul
jno
ror
dec
fcomp
mov
xchg
inc
fcom
cli
xor
mov
cld
(bad)
push
add
mov
mov
adc
mov
cmp
jb
sbb
fsubr
and
inc
hlt
jb
out
fadd
inc
shl
inc
add
mov
jecxz
add
sbb
jne
mov
push
call
mov
sbb
or
push
mov
sub
push
mov
ret
jmp
dec
clc
mov
push
sub
mov
fcomip
hlt
add
xchg
mov
adc
inc
push
out
mov
fcom
std
adc
sbb
adc
adc
cld
test
jne
outs
test
jne
inc
jl
adc
mov
jg
mov
cmp
jae
mov
mov
and
scas
push
stos
push
cmps
mov
sub
sbb
dec
or
in
sbb
ror
outs
sub
out
pop
lock
sbb
ins
ja
jb
jne
mov
cs
bswap
clc
mov
mov
add
jne
mov
fadd
mov
or
mov
in
mov
aad
jl
adc
cmp
fidiv
mov
sbb
rol
sub
mov
sti
std
stos
outs
xor
es
dec
add
in
push
dec
cmp
je
or
pop
wbinvd
inc
test
shl
xor
jne
in
pop
push
dec
popa
sbb
sti
outs
cmp
mov
(bad)
jnp
push
mov
dec
hlt
shrd
shr
mov
or
stos
cmp
je
mov
hlt
jae
pop
mov
je
pop
movs
(bad)
push
mov
push
or
cmp
mov
stc
mov
or
add
jae
push
xor
push
adc
jne
cmp
and
or
jg
mov
jne
cmp
jae
sub
push
cdq
adc
jle
test
sub
and
ret
pop
xchg
aaa
and
(bad)
sbb
dec
lock
xor
cdq
aad
push
loop
push
std
mov
lea
mov
jne
sub
(bad)
call
or
lods
enter
or
shl
or
lahf
adc
(bad)
xlat
sub
inc
or
ja
pusha
mov
add
pop
call
xor
test
je
mov
push
push
aad
push
mov
cmp
push
cmovne
xor
and
push
pop
cld
(bad)
call
(bad)
mov
add
fmul
jns
fs
xor
mov
cmps
pop
push
push
push
xor
mov
jle
push
jge
push
dec
add
adc
or
xor
push
retfw
fadd
fldenv
je
dec
sub
cmp
fst
adc
jmp
mov
inc
aad
pop
and
(bad)
cmp
jae
aas
ins
dec
jne
mov
cmp
psubd
xor
cwde
inc
iret
enter
and
and
add
push
leave
mov
je
xor
lods
jmp
add
sbb
mov
sbb
jne
popa
and
inc
mov
mov
sbb
push
adc
add
and
mov
xor
cmp
adc
call
test
jne
cmp
rcl
xor
lar
pop
test
out
xor
cld
push
scas
cld
call
(bad)
xor
cmp
jne
test
je
out
add
mov
inc
cdq
mov
xor
sbb
xchg
in
cmp
(bad)
jbe
push
jl
xchg
les
push
pop
lock
xchg
add
inc
in
mov
jae
aaa
xchg
call
push
shr
sub
fwait
push
xor
fdivrp
ret
xor
mov
sbb
scas
out
fwait
and
or
stos
popf
push
push
mov
push
xchg
mov
sbb
push
dec
push
pop
sbb
dec
movhps
sbb
xor
mov
sti
or
jae
or
out
or
jns
add
or
or
shrd
stc
cli
sti
lock
jo
or
je
outs
mov
inc
clc
push
mov
or
sbb
out
sahf
cmp
xchg
and
pop
sbb
push
push
add
pop
inc
xor
ret
pop
mov
sahf
jo
jo
retf
sbb
and
jne
pop
sub
mov
test
cmp
sbb
xor
pop
push
inc
cwde
jnp
jno
mov
inc
inc
call
mov
rcr
gs
mov
mov
mov
xor
inc
mov
mov
aam
add
js
gs
push
jp
mov
ret
sub
and
test
sbb
stos
les
add
call
cmp
pop
add
add
mov
jne
mov
ret
sub
add
add
bound
lock
jno
mov
(bad)
mov
loopne
add
les
pusha
mov
jb
jne
aas
(bad)
push
push
pop
dec
mov
mov
cmp
lea
mov
cmovb
add
push
dec
or
mov
sub
mov
lea
mov
dec
jne
mov
in
(bad)
(bad)
dec
or
push
add
push
or
fimul
pop
pop
xor
mov
test
in
and
jae
dec
scas
cmp
repz
sbb
lock
loop
adc
mov
hlt
mov
mov
jge
mov
shl
xor
add
cmp
jne
cmp
cmc
sbb
mov
and
add
std
pop
adc
mov
fcomp
or
ret
add
outs
xor
repnz
in
out
test
dec
and
and
ret
or
jg
mov
iret
mov
mov
(bad)
push
inc
loop
mov
movzx
add
imul
inc
mov
(bad)
jmp
shr
xor
shr
sub
adc
mov
mov
xor
imul
mov
cld
mov
ret
mov
inc
mov
push
push
fucomip
push
push
dec
xchg
mov
cwde
mov
mov
mov
mov
lock
dec
add
add
das
xor
xchg
(bad)
(bad)
cmp
mov
mov
jl
mov
lock
jmp
arpl
icebp
xor
xor
icebp
mov
(bad)
mov
outs
fldcw
mov
ret
jg
in
dec
inc
enter
fadd
retf
imul
repnz
leave
or
sub
xrelease
fs
cs
sar
dec
call
int3
ss
hlt
mov
fs
leave
in
pop
add
imul
pop
test
push
clc
lock
shl
pusha
clc
cmc
outs
pusha
clc
fldenv
sub
mov
leave
clc
data16
or
fs
mov
(bad)
(bad)
cs
cmp
or
xchg
push
fimul
jmp
sti
enter
or
xor
ret
pusha
mov
test
dec
imul
bound
pusha
aaa
bound
aas
jle
sbb
addr16
mov
push
mov
or
ret
jmp
mov
mov
add
dec
retf
pop
and
inc
fistp
mov
or
and
xor
jmp
mov
add
xor
test
addr16
and
inc
or
out
dec
test
je
push
push
mov
mov
adc
adc
mov
std
rol
and
inc
xor
mov
(bad)
inc
mov
add
imul
mov
shr
xor
shr
xor
sti
sub
xor
mov
pop
jne
ror
jo
and
push
push
fist
sahf
mov
je
jl
sahf
add
pop
lds
ss
sahf
fsubr
fadd
imul
(bad)
mov
add
xchg
in
adc
adc
mov
mov
xor
mov
pop
imul
cmps
mov
adc
jnp
lods
add
mov
pop
adc
ja
xor
inc
mov
add
cmp
test
jnp
xor
mov
ins
enter
(bad)
sub
add
leave
(bad)
cmp
cmovne
add
dec
adc
mov
push
pop
adc
xor
rcl
jmp
pop
sub
mov
xor
outs
mov
fwait
nop
or
push
rcl
push
push
push
mov
push
daa
sub
nop
fdivr
je
mov
pop
xor
enter
neg
push
ret
xchg
mov
cmp
clc
or
add
cli
jge
push
or
xor
test
je
call
lea
cmp
ja
fisttp
add
mov
fmul
mov
add
adc
mov
cmps
dec
cld
cmp
add
fbstp
mov
fs
or
mov
mov
sub
mov
sbb
mov
sub
mov
sbb
test
jb
ja
cmp
jne
pop
mov
jge
sub
sub
push
add
mov
mov
lock
adc
push
loopne
pop
cmp
jne
lea
test
fwait
ja
(bad)
jle
dec
cmp
jne
cmp
jne
push
add
mov
inc
jg
jmp
cdq
add
hlt
adc
or
xchg
fnsave
jne
mov
fisttp
rcr
pop
add
ja
fild
sub
push
ins
mov
push
push
jl
inc
hlt
add
mov
or
and
sbb
rcl
adc
lock
inc
cld
xor
push
push
push
push
mov
inc
clc
xchg
sahf
or
rcr
or
jo
fisttp
je
aaa
mov
mov
into
inc
add
into
mov
ror
mov
mov
iret
and
jge
mov
jmp
dec
mov
scas
nop
fbstp
ret
(bad)
mov
mov
xchg
or
or
push
cmp
adc
mov
mov
mov
adc
or
mov
jne
mov
clc
mov
pandn
cmp
jb
(bad)
sub
mov
or
cmps
push
dec
cld
pop
(bad)
lock
or
je
add
outs
jp
and
jne
cld
test
ja
inc
call
cmp
jne
lea
sub
lock
fdivrp
test
jne
sub
jge
add
mov
test
sub
jae
jne
js
imul
aad
add
in
lea
cmp
rcr
adc
or
aaa
mov
int
adc
mov
fisubr
out
push
or
mov
or
cmp
jb
add
mov
in
(bad)
(bad)
inc
shr
shl
add
shl
mov
inc
add
shl
add
shl
or
sbb
mov
ud0
sar
cmc
jge
xor
push
push
push
push
mov
shr
or
jae
je
adc
mov
retf
fucomi
aaa
xor
push
inc
push
fisub
cmp
jne
xor
jmp
sbb
push
cmp
mov
(bad)
lods
fadd
sahf
push
fs
adc
inc
xor
out
ds
adc
out
add
pop
mov
addr16
dec
jbe
add
mov
test
je
mov
mov
mov
fcmovnb
dec
add
xchg
or
fistp
iret
xor
mov
and
jmp
sbb
mov
jne
movzx
mov
jae
xchg
sbb
sahf
es
adc
and
imul
cmp
ror
sbb
xchg
jg
push
cmp
in
mov
je
or
mov
inc
jle
adc
and
clc
lock
sbb
sti
gs
cmp
add
(bad)
sbb
div
mov
jne
enter
pop
or
adc
loopne
add
add
cld
dec
out
add
sbb
loopne
add
jmp
adc
jecxz
sub
sub
dec
inc
dec
dec
adc
je
jmp
cdq
xor
andnps
pop
adc
pop
mov
xor
mov
sbb
fadd
or
xor
add
add
ins
mov
push
dec
sbb
imul
inc
cmp
mov
inc
and
xor
cld
push
cdq
sbb
les
add
pop
mov
mov
ret
inc
je
and
movs
and
sub
or
pop
push
and
mov
jp
mov
or
jnp
pop
fsubr
sub
push
mov
shl
dec
inc
and
fisubr
and
jae
and
and
neg
cmc
pop
test
jne
mov
cmp
pop
inc
xor
shl
rcl
sub
inc
push
push
lea
push
xor
dec
jl
push
cmp
xchg
(bad)
dec
push
add
ss
add
mov
mov
xor
adc
xchg
(bad)
sbb
out
mov
mov
mov
mov
inc
pop
lods
sub
out
into
fdivr
mov
jne
cmp
jb
jo
push
clc
mov
jmp
addr16
adc
dec
pop
int
mov
add
push
jne
mov
push
fbstp
shr
mov
(bad)
cmp
les
adc
and
in
outs
test
push
mov
(bad)
or
iret
outs
and
or
and
xchg
add
push
lds
ret
in
adc
imul
enter
(bad)
or
dec
mov
cmp
aam
mov
cmp
je
ror
push
mov
jne
mov
jne
(bad)
call
add
pop
inc
jne
sbb
mov
or
in
inc
inc
push
add
out
ficom
loopne
mov
push
push
(bad)
or
mov
aam
mov
sub
add
test
movs
cmp
rol
add
in
add
and
mov
out
inc
cs
fild
mov
add
push
idiv
fadd
test
inc
and
mov
mov
mov
mov
push
jmp
mov
mov
scas
aam
mov
pop
cdq
add
adc
jb
mov
shl
mov
jb
cmp
push
or
push
cmp
add
and
aas
adc
mov
mov
or
inc
adc
push
sub
ror
cmp
cmps
mov
mov
mov
mov
xor
loop
es
in
mov
or
add
jg
pusha
or
enter
and
out
(bad)
call
out
mov
inc
push
repz
dec
pop
add
push
es
xchg
jge
ret
dec
push
dec
pop
xor
dec
dec
add
push
sbb
sti
int
inc
out
(bad)
(bad)
jmp
mov
inc
jl
out
data16
cmp
jne
adc
and
add
jbe
sbb
mov
or
fwait
jg
jno
sbb
fs
cmp
jb
mov
jmp
jb
test
or
inc
ror
cli
(bad)
jmp
test
jle
movsx
mov
lea
cmp
or
adc
stos
mov
add
shr
call
add
sbb
ror
shr
xor
enter
shrd
mov
push
out
jb
or
fldenv
mov
clc
push
add
and
pop
ficom
xchg
or
inc
add
mov
ret
mov
pusha
and
or
push
xor
cs
(bad)
ja
dec
fcomp
loope
fwait
lock
add
lea
add
mov
stos
or
add
in
out
ror
jmp
ds
push
aas
sbb
mov
jge
inc
or
push
xor
sub
aad
fcom
adc
push
les
test
out
fnstenv
(bad)
ror
push
push
adc
and
pop
sbb
in
in
sbb
jl
adc
push
fidiv
leave
mov
leave
xchg
jmp
je
mov
cmp
or
popa
cli
jge
sbb
cmps
dec
loopne
and
adc
or
lahf
add
cmps
in
mov
adc
mov
stos
xchg
adc
inc
hlt
jo
aad
pop
std
add
or
stc
mov
mov
shrd
cwde
and
jp
not
cmp
je
jg
les
mov
std
add
je
xor
adc
push
and
adc
test
out
sar
clc
xchg
inc
es
in
mov
or
sti
push
movs
jb
popf
jmp
adc
push
shl
pop
clc
add
sti
fdivr
jne
mov
and
test
cmp
pop
add
pop
mov
bound
fwait
pop
mov
adc
ins
mov
jb
(bad)
clc
and
sub
jmp
call
push
mov
push
add
mov
jle
movs
adc
inc
ja
dec
imul
jmp
movdqu
ja
inc
mov
movdqu
std
jg
movd
mov
movq
mov
dec
xchg
ror
dec
shl
(bad)
mov
add
mov
in
std
dec
push
loopne
inc
jne
push
into
sub
cmc
int3
mov
into
std
out
push
sbb
push
ror
mov
mov
push
scas
pusha
psadbw
mov
or
sub
push
(bad)
mov
sbb
cmps
pop
pop
xor
aaa
adc
hlt
cmp
jne
retf
lock
shr
int3
test
inc
hlt
jb
or
add
sub
and
adc
out
ror
les
mov
add
dec
xor
(bad)
(bad)
clc
out
jg
jbe
and
or
push
sub
jne
and
jle
xor
call
jo
mov
out
mov
mov
sbb
push
hlt
mov
mov
stc
(bad)
popa
xor
add
adc
pop
dec
inc
mov
or
push
or
cmp
mov
(bad)
mov
test
inc
and
(bad)
mov
stos
ret
lock
cmovne
stos
push
pop
cmp
jmp
mov
mov
jns
mov
inc
test
jne
sub
cmp
sub
or
fld
arpl
pop
inc
mov
sbb
or
out
or
stos
fidiv
add
xchg
dec
cld
and
inc
dec
mov
stc
or
sub
or
adc
or
cmp
or
fadd
je
add
shl
cli
push
bound
xor
outs
adc
rcr
push
xchg
cbw
inc
adc
or
mov
gs
add
cld
loopne
mov
and
test
repz
add
(bad)
mov
sub
adc
mov
mov
icebp
mov
dec
push
lods
enter
add
xor
aaa
xor
push
adc
dec
xor
les
dec
mov
inc
mov
and
dec
or
cmp
inc
icebp
xor
pop
xor
in
xchg
sub
xchg
cmp
dec
or
mov
or
shr
and
ins
mov
jmp
adc
sbb
push
popf
or
mov
pop
mov
(bad)
jnp
inc
sbb
shr
push
pop
jno
mov
nop
leave
pop
dec
call
enter
push
sub
ins
shl
xor
sub
adc
and
and
cmp
mov
data16
and
clc
neg
mov
pop
lahf
cmp
inc
mov
dec
and
mov
fldenv
fmul
or
cmp
sub
in
dec
and
dec
daa
or
or
inc
mov
dec
push
pop
stos
test
or
shl
mov
test
mov
inc
fs
leave
push
mov
or
pop
push
mov
(bad)
push
xor
leave
sbb
inc
retf
mov
mov
inc
cmp
jb
push
int3
push
jge
mov
and
je
mov
fisub
cmc
fs
jg
iret
mov
inc
mov
cmp
jb
and
je
mov
sub
sub
ror
xor
add
pop
mov
(bad)
xlat
push
ror
loopne
rol
sbb
sub
mov
xchg
or
jnp
jae
or
and
jl
fadd
inc
cmp
xlat
or
addr16
add
sbb
ins
xor
jg
mov
cmp
(bad)
inc
inc
pusha
mov
mov
mov
test
jle
neg
push
sar
push
loope
push
push
push
push
push
mov
pop
mov
and
mov
inc
mov
fld
adc
push
fsubr
and
lods
push
mov
inc
lock
in
push
lea
or
ins
inc
push
fdivr
mov
mov
push
jns
cli
psubsb
jbe
sub
(bad)
je
add
ret
nop
or
add
pusha
mov
pop
sbb
and
dec
daa
rol
add
or
pop
pop
mov
add
adc
add
adc
mov
sub
cmp
inc
xor
mov
aaa
push
mov
inc
add
and
dec
jne
sar
mov
cmp
(bad)
cmp
and
cmove
mov
add
cmp
adc
mov
mov
addr16
push
mov
sub
xchg
add
jnp
in
cs
inc
jne
xchg
mov
or
(bad)
jle
cmp
cmovb
xor
add
add
mov
or
cmp
jb
push
sub
sub
add
add
add
ja
pop
lock
add
pop
sbb
adc
inc
mov
pop
mov
push
mov
(bad)
or
ret
mov
inc
push
sub
fisubr
mov
push
cmps
push
lea
js
mov
dec
adc
sar
mov
jne
cmp
sbb
inc
out
dec
adc
(bad)
out
dec
push
lahf
dec
jge
mov
adc
jle
or
std
fist
fisttp
and
aas
jne
or
or
pop
ret
xor
ret
mov
mov
push
out
(bad)
stos
add
jb
and
add
or
rol
(bad)
fwait
mov
not
or
and
xor
inc
sbb
jo
inc
out
ret
fisubr
das
xor
mov
out
cli
jmp
cmp
jne
mov
jmp
xchg
or
(bad)
jg
sub
mov
cmove
mov
or
sbb
add
or
clc
ds
jo
cmp
mov
dec
lods
add
xor
pop
ins
xor
fdivr
push
jmp
and
sbb
dec
je
add
sub
or
jo
cmp
push
mov
dec
ret
fld
or
add
(bad)
(bad)
mov
outs
ins
scas
and
pushf
les
jbe
int3
or
cmp
and
mov
and
div
cmp
je
sbb
jmp
push
nop
dec
push
mov
push
xor
pop
jge
inc
mov
(bad)
lea
mov
mov
movzx
cmp
(bad)
inc
xor
cmp
je
mov
loopne
dec
jo
inc
adc
add
rol
add
movs
hlt
inc
adc
clc
call
add
cwde
mov
div
shr
add
add
call
mov
jp
and
out
je
mov
cmp
push
test
adc
mov
js
clc
push
pop
clc
and
xor
call
call
or
scas
packuswb
adc
cmp
aaa
pop
or
push
xor
ja
ret
sbb
inc
and
push
add
push
out
jmp
pop
mov
push
mov
fst
cli
or
push
add
inc
mov
je
sar
cmp
lods
cmp
jns
dec
ins
mov
mov
mov
pusha
push
ret
rcl
add
not
mov
fldcw
je
jo
or
into
clc
cmps
test
mov
add
mov
inc
adc
test
je
inc
mov
inc
loopne
push
sbb
ror
push
fs
add
push
push
jne
aam
xor
pop
jmp
mov
call
adc
or
push
(bad)
mov
inc
fdiv
inc
jo
jne
test
ins
ja
mov
shl
dec
sub
mov
dec
fmul
pop
loopne
pop
(bad)
adc
inc
mov
or
inc
add
loopne
aas
in
lds
and
dec
inc
fs
jmp
test
jne
cmp
mov
pop
jle
or
adc
test
je
sub
xor
mov
loop
xor
sbb
xchg
aas
add
cdq
and
or
jmp
shl
ror
in
test
mov
and
ins
mov
cmp
jbe
push
dec
cmp
push
lds
add
inc
add
cmp
jb
sub
cmps
or
or
push
push
push
push
loop
stos
fisttp
test
sub
push
gs
aaa
add
(bad)
jmp
dec
mov
mov
test
sbb
push
paddd
aad
mov
aad
cmp
or
push
inc
cmp
je
mov
push
int
mov
test
jne
pop
sub
push
push
pop
add
jo
push
or
cmp
jne
retf
(bad)
cmp
cmp
sbb
mov
jmp
jae
aam
push
pop
fwait
sub
enter
stos
pop
jmp
lea
xor
loop
cmp
in
shl
inc
adc
mov
test
jmp
push
inc
stos
retf
loope
inc
ins
inc
or
lods
mov
mov
jne
sbb
cmp
ja
mov
cmp
jo
jbe
mov
and
lock
ja
push
adc
jle
(bad)
int3
add
jmp
inc
adc
ret
jbe
sbb
cli
and
xchg
sbb
or
popa
jmp
push
mov
add
ret
pop
clc
dec
inc
dec
leave
je
mov
frstor
sbb
add
ds
and
push
jp
pop
xor
imul
xchg
or
test
cmp
adc
mov
or
inc
jb
ret
lock
and
sub
pop
shl
mov
mov
aam
leave
je
(bad)
mov
test
movlhps
mov
mov
ja
add
pop
in
and
mov
jae
test
inc
mov
repz
outs
(bad)
out
js
add
xchg
and
mov
add
dec
jne
test
je
push
cli
push
jne
push
mov
lea
push
push
push
push
push
push
push
mov
mov
add
test
mov
test
mov
cmp
jne
aaa
dec
data16
xchg
add
clc
nop
cmps
fcom
lock
stos
addr16
(bad)
out
jp
lds
aam
add
fucomp
adc
icebp
mov
(bad)
addr16
jno
push
push
push
pop
fcomp
mov
test
je
out
dec
inc
adc
aaa
inc
inc
mov
xchg
lea
cmp
paddd
jmp
mov
mov
test
jle
push
mov
mov
test
je
clc
inc
in
inc
sbb
je
aaa
jne
push
mov
out
sub
popa
nop
dec
mov
and
(bad)
mov
sbb
ret
jne
adc
jmp
mov
xchg
or
or
add
adc
ret
cdq
pop
or
(bad)
xlat
pop
push
push
fbstp
mov
push
adc
sbb
pop
add
add
and
mov
mov
cmp
or
push
jmp
sub
pop
xor
add
jle
push
stos
cld
aam
pop
add
(bad)
mov
and
jmp
inc
xor
jbe
push
sbb
cmp
ja
popf
add
mov
inc
rcr
(bad)
test
rcr
inc
sbb
add
cwde
shr
(bad)
sbb
push
add
inc
or
sar
inc
fmul
outs
mov
xchg
jle
add
fst
add
cmp
push
popf
or
lods
xor
or
or
(bad)
fstp
icebp
inc
dec
pop
in
mov
les
mov
inc
and
lea
je
mov
sbb
shl
arpl
mov
sar
adc
pop
inc
push
add
inc
push
sub
push
imul
lods
mov
pop
inc
dec
adc
pop
adc
inc
jle
push
push
std
es
push
cmps
cmp
inc
sbb
add
add
(bad)
jg
fisttp
add
sub
sub
xor
jns
add
mov
mov
mov
xor
test
mov
or
into
pop
inc
ret
sub
call
sahf
sar
inc
pop
mov
jmp
mov
fwait
lea
sahf
(bad)
push
add
clc
xchg
xor
xor
cmp
push
sub
push
cld
cmp
test
ss
and
lods
sti
(bad)
cld
into
lock
xor
mov
pop
cmove
pop
mov
dec
or
xchg
rcr
add
mov
pop
ret
add
test
adc
je
and
cmp
mov
(bad)
clc
inc
adc
ss
and
add
add
fst
or
pop
cmp
jb
xchg
movzx
(bad)
cmp
pop
adc
mov
mov
mov
jl
sbb
add
shl
cmp
ror
aas
inc
push
xor
mov
dec
mov
dec
mov
iret
mov
mov
arpl
add
gs
movzx
shl
mov
and
dec
mov
sbb
xor
inc
and
(bad)
xor
add
mov
mov
push
test
call
xor
cmp
mov
movzx
je
jmp
sub
pop
cmp
ja
push
push
lock
out
mov
mov
add
mov
sub
clc
jp
(bad)
sti
sbb
add
clc
sub
mov
fist
and
lock
jg
adc
dec
movzx
movzx
inc
std
arpl
pop
enter
clc
movzx
jae
sbb
jmp
shr
(bad)
(bad)
lea
push
daa
loopne
add
xor
mov
dec
xchg
pop
sbb
sub
mov
jmp
out
cmp
aad
mov
sbb
jne
int3
lea
(bad)
jl
cld
add
leave
mov
je
enter
test
and
loope
or
ret
js
dec
movs
pop
add
and
xor
and
adc
push
aas
adc
mov
dec
pop
test
mov
jo
les
dec
leave
mov
adc
cs
or
add
mov
push
or
xchg
movzx
shl
jbe
jmp
test
(bad)
mov
add
mov
mov
in
xchg
jge
mov
mov
fstp
test
sub
xor
inc
dec
or
dec
rol
jle
shl
sti
add
inc
les
add
movs
pop
cmp
shl
xchg
inc
add
cld
cld
cmp
jne
and
cli
pop
cmps
mov
mov
sbb
adc
into
call
mov
ins
test
and
scas
pop
je
add
mov
hlt
cmp
inc
ret
push
lods
add
cmp
xor
sbb
adc
push
sbb
mov
sub
pop
iret
jb
ror
ret
cld
retf
xchg
mov
xchg
sbb
cmova
add
test
dec
mov
cmc
jne
mov
in
push
jb
aam
pop
jmp
sub
hlt
lods
out
dec
inc
jae
sub
and
sti
cmps
clc
add
loopne
add
jne
add
add
call
pop
or
mov
xor
or
dec
xor
inc
icebp
jge
idiv
jne
fcmove
or
dec
shr
mov
shr
test
je
sahf
jae
xchg
fild
jne
dec
aas
jnp
mov
aam
dec
mov
jmp
sar
xchg
repz
or
rol
pop
xchg
cmp
dec
pop
pop
test
leave
dec
and
(bad)
mov
dec
in
mov
ret
lea
fisttp
cmp
fisub
or
adc
lock
ins
mov
jnp
icebp
mov
iret
jmp
scas
cmp
mov
daa
or
shl
into
xor
and
lock
push
iret
pop
enter
arpl
jl
push
lock
dec
(bad)
fmul
test
add
int3
aad
or
mov
xchg
inc
stos
outs
add
test
sti
push
mov
test
cwde
shl
add
fimul
cwde
mov
outs
cld
mov
pop
sbb
cmp
sbb
or
push
pop
mov
push
dec
and
mov
mov
xor
push
pop
test
mov
add
xor
clc
inc
xchg
dec
pop
cmp
push
xchg
or
inc
push
test
dec
clc
add
rol
and
(bad)
or
mov
enter
leave
adc
adc
call
divps
or
add
add
or
mov
mov
(bad)
out
push
cmps
or
cmp
ja
or
je
dec
aas
add
push
jne
push
mov
cmp
cmp
jne
sub
jg
add
or
sbb
mov
xor
mov
idiv
push
cld
mov
push
cmp
jne
sbb
jne
inc
(bad)
sub
mov
add
mov
mov
inc
mov
mov
lahf
add
or
or
mov
test
cmova
or
mov
inc
fnstenv
out
sbb
dec
or
lea
jmp
or
jge
scas
imul
add
jmp
or
bound
add
inc
(bad)
(bad)
jg
xor
in
dec
and
inc
sub
fstp
leave
and
neg
sbb
and
add
shl
in
mov
or
adc
out
adc
rcl
or
sbb
push
call
mov
pop
jb
sub
mov
add
or
cmp
cmp
adc
ret
add
mov
inc
cmp
xor
ja
xor
adc
xor
adc
push
(bad)
(bad)
out
add
js
add
push
push
call
mov
xor
sub
aaa
add
(bad)
sub
shl
add
ret
je
mov
nop
mov
cmp
jge
add
mov
jmp
xlat
cli
push
setne
pop
jo
cmp
loopne
or
cmp
aam
mov
bound
loope
retf
add
shr
inc
mov
shl
sub
arpl
fadd
les
xor
movzx
push
or
pop
test
inc
add
sti
shr
(bad)
xchg
cmp
jle
inc
jne
(bad)
sbb
outs
movzx
les
or
inc
and
mov
(bad)
cmp
jne
and
or
cmp
jbe
ss
push
add
push
adc
movzx
xor
retf
inc
cs
fnstcw
je
imul
adc
test
inc
and
dec
or
jb
mov
ins
push
cs
jbe
(bad)
dec
cmps
int3
data16
inc
adc
push
out
mov
ror
test
enter
mov
jae
mov
mov
aaa
pop
ret
push
add
sub
fidiv
sti
(bad)
jg
je
mov
mov
movzx
mov
lea
mov
mov
adc
aas
jmp
jne
jmp
mov
xor
ret
ret
adc
jae
adc
cmp
adc
ret
ret
or
jne
je
xchg
ret
add
mov
mov
bound
jecxz
test
add
cmp
jbe
or
lods
adc
out
clc
std
push
adc
inc
adc
adc
mov
xor
ins
out
inc
xor
adc
arpl
cmp
je
push
aas
ror
fs
adc
ja
call
xor
sbb
jne
cmp
jg
cmp
je
mov
or
or
inc
add
push
rol
add
xor
sbb
sbb
add
cmp
add
jo
push
iret
and
jg
add
jne
fwait
or
sbb
push
pop
sub
cmp
add
add
add
sbb
dec
add
leave
je
sub
je
mov
xchg
or
test
sbb
cwde
adc
xor
sbb
(bad)
in
add
add
out
xor
fcom
fdivr
add
loopne
cmp
mov
test
cmp
add
jo
inc
popa
or
int3
dec
jmp
cmp
xlat
sbb
xchg
push
or
sub
add
sbb
sti
add
dec
xor
mov
mov
test
mov
push
push
std
call
mov
xor
adc
sub
mov
je
test
or
inc
sbb
inc
std
test
sub
dec
sub
xor
packuswb
test
daa
jb
mov
fisttp
xor
xor
xor
xor
in
pop
out
inc
or
(bad)
sub
xchg
jmp
(bad)
jg
data16
mov
neg
mov
xor
cmp
pop
clc
icebp
and
mov
or
es
pop
pop
mov
mov
cs
mov
sub
iret
push
mov
jne
ret
adc
std
(bad)
out
add
jmp
je
cmp
je
cmp
je
cmp
loope
inc
push
mov
push
cmp
je
cmp
div
mov
or
jbe
add
push
stos
push
mov
mov
cmp
sbb
xchg
cmp
sbb
gs
jbe
test
popf
call
std
cmp
out
add
add
push
mov
jle
dec
ins
mov
add
jne
fisttp
cmp
jne
clc
jne
lea
add
cmp
add
ins
inc
and
or
mov
dec
out
xor
add
inc
and
or
mov
out
(bad)
fistp
push
mov
cmove
mov
test
jns
jp
push
jg
neg
jmp
cmp
jle
pcmpgtd
sub
mov
dec
cmp
call
cli
jmp
jge
or
lea
cmp
ja
loope
stc
or
xchg
or
add
xchg
or
and
add
jmp
out
add
or
push
cmove
lock
pusha
mov
inc
cld
mov
mov
inc
(bad)
adc
mov
inc
and
or
adc
sahf
jno
xchg
lds
jne
or
and
inc
sbb
test
add
xor
or
ror
dec
dec
stos
stos
stos
stos
mul
pop
add
shr
push
push
mov
xor
xchg
add
fwait
push
push
les
adc
mov
add
mov
adc
mov
lea
jo
stos
repnz
call
dec
sbb
cmp
mov
loopne
icebp
div
add
mov
aaa
aad
adc
ror
cmp
mov
(bad)
(bad)
clc
or
push
cmp
mov
test
je
mov
pop
hlt
inc
mov
shr
push
lea
mov
lea
add
mov
dec
mov
mov
ror
and
sbb
in
mov
cmp
hlt
mov
xchg
push
sti
pop
pop
bound
mov
nop
sbb
or
cmp
inc
xor
mov
scas
and
ret
or
test
inc
or
call
jp
push
jbe
inc
sub
push
mov
fcomp
test
data16
mov
loopne
addr16
push
call
jns
mov
mov
cmp
outs
add
cmovne
mov
jmp
arpl
fisubr
mov
pop
ret
call
hlt
loopne
arpl
jae
and
ret
dec
jecxz
mov
mov
sti
cmp
jmp
pop
shr
neg
mov
sbb
add
pop
mov
mov
(bad)
cmp
dec
mov
mov
jmp
or
mov
mov
shl
or
sti
lods
clc
dec
sbb
shl
xor
inc
dec
std
call
pop
mov
mov
shr
lea
mov
inc
sub
mov
inc
dec
jne
sti
fs
ins
push
dec
inc
jmp
imul
sar
sub
adc
and
add
inc
add
inc
or
(bad)
push
inc
popf
and
cmps
(bad)
mov
rol
fmul
mov
sbb
inc
inc
test
inc
clc
add
cmp
jb
mov
arpl
mov
(bad)
jns
xchg
mov
push
adc
adc
pop
mov
test
je
sbb
into
jbe
loop
dec
test
jae
jne
cmp
xchg
push
fwait
mov
(bad)
cmp
mov
rol
sub
mov
dec
cld
mov
add
mov
cmp
adc
mov
mov
sub
mov
dec
adc
test
je
mov
inc
inc
cmp
jb
test
or
aas
lea
cmp
je
mov
bswap
test
jne
mov
pop
adc
mov
xchg
ret
test
gs
aas
repnz
out
or
mov
sub
shl
xor
aam
mov
jo
add
adc
or
sbb
and
(bad)
mov
mov
psrlw
ret
repz
scas
xor
fwait
mov
inc
dec
xor
cmc
add
dec
pop
mov
xchg
add
mov
retf
stos
pusha
es
add
jb
hlt
jns
cmp
adc
cmp
jb
mov
xor
(bad)
inc
add
(bad)
mov
movzx
lea
cmp
jne
mul
dec
add
outs
add
add
mov
inc
or
xchg
enter
push
out
jg
and
mov
ret
add
cli
cmp
cmova
jge
gs
ss
adc
bound
jmp
push
jg
movzx
pop
sub
xchg
rcl
sub
sub
pop
mov
xchg
es
ror
rcl
sub
adc
cwde
jl
in
adc
pop
rol
add
push
shr
adc
push
outs
loopne
sahf
mov
mov
xor
mov
(bad)
shr
inc
rol
sub
or
mov
les
pop
add
mov
pop
mov
mov
mov
pop
lea
movzx
lea
cmp
jb
sub
std
dec
shr
mov
dec
jne
dec
mov
lea
inc
dec
sub
jg
mov
cmp
jbe
sub
mov
jmp
loop
add
icebp
add
jne
sub
leave
je
mov
add
rcr
popa
pushf
mov
inc
jmp
mov
add
call
pop
movhps
and
daa
add
mov
mov
cmova
mov
(bad)
fld
ror
push
cmp
jne
push
push
adc
push
jmp
push
push
pusha
pop
inc
mov
sbb
ror
push
push
(bad)
inc
sub
mov
das
dec
or
or
dec
or
je
mov
push
mov
inc
adc
popf
or
mov
add
push
sti
add
sub
add
jne
cmp
cmp
push
mov
jne
mov
sub
shl
mov
jae
sub
mov
inc
enter
push
add
cli
inc
xor
or
mov
push
push
ins
lea
xor
test
add
stc
add
push
cmp
inc
mov
add
cld
inc
dec
sbb
jno
cmp
cmova
sub
fcom
xor
ja
add
cmp
ja
sub
sub
pop
daa
or
(bad)
xor
and
int3
mov
add
add
lds
and
rcr
mov
or
movzx
jae
jg
or
add
sbb
xchg
xor
push
mov
add
scas
call
push
or
sub
xlat
inc
mov
mov
sub
rcl
jge
mov
inc
hlt
lea
retf
xchg
clc
mov
cwde
cmp
jbe
sub
add
out
jle
sbb
movs
lea
push
jle
dec
fdiv
dec
clc
std
sti
inc
dec
add
out
jb
mov
dec
mov
aas
cmp
clc
inc
or
dec
fmul
mov
in
jmp
mov
mov
add
jmp
aaa
mov
mov
xor
loope
shr
and
cmp
jne
out
clc
mov
cmp
jne
(bad)
cmp
jmp
mov
cmp
jne
clc
mov
cmp
jne
(bad)
inc
add
jne
lea
mov
inc
cmp
jne
or
jne
stc
in
dec
add
add
pop
add
dec
ds
jne
pop
jne
add
cmp
jne
aam
mov
xor
inc
push
and
lock
movzx
retf
and
ret
mov
adc
shl
sub
lea
std
cmp
lea
jle
mov
mov
stos
(bad)
stc
mov
cmp
jge
ror
fcom
xor
dec
loopne
retf
or
mov
cmp
and
jg
jbe
dec
jne
cmp
cmovbe
dec
mov
loopne
push
or
shr
mov
pusha
inc
cld
or
or
sub
dec
add
stc
cmp
jge
mov
outs
mov
mov
gs
add
mov
jne
mov
sub
or
ss
call
push
sti
xor
inc
add
mov
xor
fist
jg
test
jne
pop
(bad)
mov
fistp
and
sbb
add
call
push
xchg
push
push
push
rcr
jg
jg
sti
pop
sbb
push
cwde
scas
test
jne
xor
pop
jnp
popf
jmp
sbb
adc
jo
cwde
xchg
(bad)
not
push
mov
sbb
pop
or
ret
add
inc
xor
jg
dec
xbegin
push
cmp
jb
fwait
movs
mov
shr
xor
mov
and
(bad)
scas
mov
shr
and
ja
mov
adc
add
cmp
cwde
mov
movzx
(bad)
mov
xor
cwde
xor
add
adc
retf
mov
sbb
das
or
jmp
mov
sbb
inc
and
xor
xor
movzx
or
retf
mov
shr
jnp
bound
idiv
or
ret
or
inc
out
inc
xchg
push
cmp
pop
or
adc
add
fwait
lods
mov
(bad)
or
retf
cmp
cmp
out
and
inc
(bad)
and
icebp
pop
adc
mov
out
popa
pop
(bad)
sti
or
cld
adc
call
test
mov
push
or
mov
aaa
jne
sti
cmp
xor
cmp
add
clc
scas
(bad)
jb
mov
shr
pop
xor
sub
push
xor
pop
adc
and
mov
ret
mov
pop
dec
xchg
aas
ror
pop
cmp
aam
pop
jo
je
pop
in
dec
or
fsubr
lea
inc
or
pop
cmps
dec
add
das
push
mov
gs
loop
lock
mov
xchg
dec
pop
adc
icebp
(bad)
ffree
out
adc
ja
cmps
xor
movzx
add
cmp
sub
adc
pmaxsw
shr
jmp
or
cmp
inc
mov
adc
test
je
idiv
rol
jg
add
add
dec
jne
dec
mov
jno
pop
xor
pop
shr
or
add
ret
shl
pop
or
js
mov
js
fnsave
jge
cld
jmp
jecxz
jmp
scas
nop
sub
and
push
sbb
pop
add
pop
add
sbb
add
push
fs
inc
push
pop
or
nop
inc
push
sbb
or
pop
sbb
lsl
add
loop
ja
dec
test
(bad)
(bad)
fsub
xlat
imul
add
adc
cs
lock
mov
shl
xor
adc
sub
jbe
pop
pop
sub
movzx
movs
add
inc
loope
jbe
mov
shr
retf
shl
push
pop
pop
mov
mov
(bad)
push
scas
inc
or
mov
inc
or
pop
ins
loopne
pop
push
mov
push
mov
adc
(bad)
(bad)
sbb
add
loopne
or
or
adc
push
or
mov
pop
jmp
add
mov
adc
mov
mov
sbb
arpl
out
call
mov
jmp
lea
mov
mov
cmp
bound
or
sbb
xor
mov
add
jae
(bad)
rol
jge
fsubr
dec
ror
loop
ss
add
loopne
data16
aas
es
shl
jecxz
or
xchg
add
pop
(bad)
xor
mov
movs
popf
pop
pusha
js
mov
fistp
pop
sub
(bad)
pop
cmp
add
mov
cmp
jne
jg
ins
das
or
fisttp
jo
add
pop
sub
pop
movs
or
lods
lea
hlt
fild
xor
mov
xchg
add
ror
ret
mov
jmp
ja
pop
push
add
add
shl
dec
je
mov
push
jp
mov
mov
cmps
xor
mov
cmp
je
push
mov
push
cmp
mov
lea
leave
xchg
xchg
bound
mov
ja
inc
(bad)
retf
cwde
mov
inc
push
out
sbb
out
add
push
lea
arpl
or
mov
mov
cld
inc
push
mov
out
inc
int3
loopne
or
push
lea
fmul
les
stos
add
nop
mov
push
ror
mov
cs
adc
dec
sbb
ds
xor
or
std
in
shl
movq
js
fild
dec
mov
sub
out
mov
push
add
mov
mov
lock
or
mov
mov
dec
or
aas
jl
xor
loope
add
sub
std
shl
push
cmp
daa
mov
xchg
adc
and
cmp
mov
shr
mov
pop
push
rcl
mov
rcr
es
aas
and
fadd
fadd
sub
lods
pop
jnp
jne
push
ficom
adc
sar
pusha
dec
hlt
mov
cmp
jae
cmp
mov
addr16
test
mulpd
jle
inc
cmp
inc
cmp
jmp
test
xchg
dec
out
jle
mov
jnp
add
xchg
bound
(bad)
pop
pop
push
mov
(bad)
jg
inc
in
push
adc
xchg
or
hlt
and
std
jmp
ja
mov
dec
add
mov
(bad)
js
cmp
leave
leave
and
jbe
pop
jb
inc
jne
sub
cmp
jge
lea
idiv
inc
adc
enter
mov
call
leave
add
dec
adc
mov
test
sub
xchg
or
mov
mov
mov
mov
xor
mov
mov
mov
nop
cmp
dec
pop
jnp
je
call
mov
mov
mov
and
sub
and
inc
mov
inc
cmp
jl
pop
cmp
call
cmp
jge
inc
mov
jmp
jne
jmp
in
sbb
inc
hlt
mov
mov
(bad)
div
or
mov
mov
sub
sub
jl
pop
retf
mov
inc
mov
push
jmp
inc
jl
idiv
xor
dec
add
push
(bad)
mov
sub
add
test
icebp
jle
dec
mov
fdiv
push
mov
mov
adc
mov
mov
data16
(bad)
add
mov
mov
cmp
push
pop
fisttp
shl
mov
push
mov
jnp
inc
add
mov
inc
push
push
sub
or
xor
and
lea
jbe
imul
push
mov
jg
cmp
add
mov
fadd
mov
mov
adc
std
fist
cmp
add
add
sbb
mov
push
mov
mov
inc
mov
mov
and
cmp
mov
or
(bad)
movzx
lea
mov
retf
movzx
mov
add
shl
or
fist
(bad)
jg
mov
inc
mov
mov
mov
or
or
adc
inc
mov
dec
pop
shr
lea
add
mov
sbb
mov
push
add
adc
jle
scas
call
mov
cld
movzx
push
xchg
mov
mov
mov
sub
cdq
cmp
mov
jle
xchg
sbb
movzx
aas
sbb
shl
cmps
mov
cmp
mov
jmp
test
xchg
nop
pusha
add
(bad)
cmp
mov
mov
mov
mov
mov
or
outs
aad
cmp
sub
mov
xchg
sbb
xor
ret
and
adc
push
aas
add
mov
mov
(bad)
fild
or
retf
shr
movzx
mov
xchg
fwait
std
pop
outs
dec
lea
out
dec
add
cld
test
data16
sub
scas
adc
push
push
out
dec
cld
inc
adc
cli
lock
mov
push
mov
or
or
out
sub
xchg
push
shr
xor
push
popa
test
lea
pcmpeqd
xchg
or
add
lea
cmp
push
jmp
or
loopne
cmp
mov
add
or
into
jle
str
inc
loop
sbb
cmp
icebp
out
xor
mov
addr16
pop
mov
fst
dec
mov
pop
rol
int
sub
cmp
hlt
xor
loop
clc
es
adc
push
dec
shl
inc
or
inc
test
or
mov
pop
sbb
in
not
adc
xadd
je
and
(bad)
or
(bad)
cmp
dec
sub
or
or
cli
dec
jne
mov
inc
push
xor
lea
fwait
(bad)
(bad)
inc
cmp
jne
inc
shr
add
cmp
jle
cmp
mov
mov
sub
push
sar
mov
pop
push
icebp
jg
cmp
jne
inc
add
sbb
loop
xor
inc
push
pop
dec
ja
cmp
jg
in
sub
getsec
add
mov
sbb
jmp
dec
jne
and
in
dec
add
inc
movdqu
xor
or
push
std
pop
sbb
xor
pop
clc
mov
add
mov
mov
(bad)
std
(bad)
daa
push
jge
mov
sub
lea
pop
add
clc
add
mov
fidiv
(bad)
cmp
mov
leave
lea
add
mov
add
dec
sbb
retf
(bad)
fisttp
inc
call
pop
clc
cmp
jg
(bad)
(bad)
sti
pop
inc
jl
mov
sub
mov
sbb
jbe
mov
add
icebp
(bad)
mov
add
mov
imul
add
pop
add
sbb
push
sbb
jbe
(bad)
push
jp
dec
loopne
dec
adc
jne
aaa
aad
lea
add
pop
mov
hlt
mov
dec
iret
lea
aaa
loope
clc
mov
dec
jne
lea
dec
xchg
je
add
mov
mov
sub
data16
sar
add
test
jg
lods
mov
rol
add
lock
clc
or
lea
sub
das
inc
cld
aaa
cmp
retf
je
mov
sub
mov
mov
mov
add
jg
or
jne
out
jecxz
mov
out
add
dec
adc
outs
popa
adc
or
push
mov
mov
add
mov
add
add
movzx
mov
inc
cmp
jle
pop
cld
or
test
js
(bad)
movzx
test
dec
ret
je
(bad)
push
fmul
fdiv
ror
fdiv
inc
shr
or
add
test
jg
ror
add
xchg
clc
jle
or
aaa
pop
pop
and
dec
pop
jne
push
mov
mov
push
test
cld
dec
jne
sar
add
sbb
fdivr
mov
in
mov
sbb
mov
jb
cmc
sub
in
adc
or
jecxz
out
and
mov
enter
sub
test
inc
das
mov
lea
mov
jge
mov
daa
fbstp
movzx
stos
cdq
dec
cmp
jb
fisttp
cmp
mov
push
ja
xchg
fadd
inc
pop
adc
movzx
pop
mov
ja
mov
cmp
jb
mov
stos
jg
in
sbb
fwait
add
cmp
jle
xchg
pop
mov
jg
dec
adc
mov
adc
ins
or
or
push
aaa
lock
mov
add
std
(bad)
dec
dec
or
in
js
in
or
add
add
imul
retf
aam
inc
adc
retf
inc
(bad)
sbb
xlat
inc
jg
jge
mov
cmp
jge
add
leave
je
cmp
cld
je
into
adc
xor
adc
or
or
xor
mov
test
jmp
cmp
or
jmp
mov
scas
add
add
dec
jne
in
inc
mov
or
cmp
outs
loopne
or
mov
(bad)
(bad)
(bad)
(bad)
jmp
pusha
inc
cmp
pop
mov
or
lock
xor
add
cmc
mov
jmp
mov
mov
lea
pushf
jl
mov
lock
xor
adc
mov
or
push
mov
sbb
jne
in
jp
pusha
call
mov
add
ja
jmp
fstp
sbb
and
xor
mov
sbb
jge
pop
pop
push
mov
(bad)
push
add
xchg
mov
jl
clc
lahf
adc
xchg
inc
cmp
xchg
mov
adc
mov
fwait
dec
push
add
jecxz
adc
mov
adc
icebp
xchg
inc
or
les
inc
mov
pop
xor
mov
add
jo
(bad)
out
pop
xor
lea
lea
test
jne
mov
aas
inc
fild
leave
daa
rol
push
ss
adc
inc
cld
cmovae
in
mov
(bad)
fidivr
dec
test
sbb
lea
(bad)
jmp
cmp
mov
xor
jne
adc
movs
xchg
jg
push
or
cmc
or
psraw
fwait
jbe
dec
leave
clc
test
test
ror
jg
mov
xlat
mov
cmp
jle
sbb
mov
jb
push
inc
das
lock
das
jmp
mov
inc
mov
and
cmc
addr16
dec
movzx
ret
(bad)
aad
sub
mov
ds
movzx
jne
sbb
nop
pop
test
mov
ds
mov
lea
mov
ret
add
mov
xchg
lea
jae
rol
ret
jae
adc
sti
or
(bad)
sbb
cmps
shr
mov
or
cmp
xchg
xchg
or
pop
or
leave
and
aaa
and
add
neg
pop
adc
and
pop
(bad)
fst
test
push
jbe
jnp
add
rdmsr
push
imul
push
lea
jo
(bad)
daa
jge
rol
mov
xor
mov
call
stos
push
add
mov
loope
inc
push
mov
es
cld
call
inc
jae
and
and
inc
call
in
adc
lea
xor
pop
cpuid
rcr
mov
mov
mov
mov
test
clc
test
je
mov
add
add
xor
jl
movups
xor
je
pop
fs
mov
xor
shl
mov
loopne
push
pop
dec
je
call
jmp
and
enter
xchg
add
mov
push
mov
cmp
jmp
push
mov
mov
mov
sub
push
mov
push
movsx
sub
xor
cld
data16
lods
loopne
bound
jg
loopne
adc
mov
in
and
jle
add
iret
stc
and
popa
int3
inc
bound
inc
int3
push
lea
das
mov
mov
mov
sub
mov
adc
mov
and
outs
popa
shl
(bad)
inc
call
psubusw
movdqu
sub
jne
xor
daa
adc
retf
push
sub
xor
mov
cmp
je
cmp
inc
loop
mov
or
add
addr16
movs
xchg
inc
jb
push
sar
stos
add
movzx
pop
mov
(bad)
dec
cmp
jb
xor
sub
cdq
cli
inc
add
sub
or
imul
jle
sti
or
rcl
or
sub
add
pop
dec
mov
sbb
add
add
fs
add
bound
and
ret
sbb
inc
jae
mov
sub
cmp
in
nop
or
xlat
push
jp
adc
daa
loop
pop
cmp
jae
pop
cmp
add
mov
scas
push
pop
push
ins
inc
adc
mov
pop
ret
pop
cmp
mov
adc
out
mov
les
mov
inc
stc
jge
ja
shl
cmp
pxor
adc
retf
add
jl
popf
sbb
or
in
cdq
jmp
rcr
outs
and
cmp
fistp
ins
shl
psrldq
sub
into
outs
out
adc
push
sti
add
adc
fst
fisttp
xchg
sbb
scas
cmp
ror
in
ficom
adc
rol
shl
adc
inc
sbb
sub
inc
sub
or
fild
stos
adc
dec
(bad)
inc
xor
jnp
mul
inc
dec
rcl
inc
add
mov
inc
push
ja
(bad)
nop
adc
add
jo
ins
add
icebp
(bad)
adc
xor
in
push
push
pop
neg
and
je
pop
add
sub
popf
or
and
sub
fmul
inc
(bad)
out
lea
add
imul
mov
call
call
pop
dec
psubq
jne
sbb
mov
inc
loopne
inc
fcomip
popf
jp
inc
js
inc
shr
test
and
neg
shl
jecxz
lock
mov
inc
xor
fld
pop
and
xor
jg
sar
dec
cmp
adc
push
enter
mov
outs
adc
sar
inc
stc
mov
clc
(bad)
adc
lock
push
lds
mov
inc
xor
out
mov
xorps
pop
inc
push
out
repz
out
ss
add
pop
and
popa
xor
je
out
aam
call
sub
dec
inc
sahf
jg
or
or
(bad)
ds
dec
(bad)
aaa
jl
aas
mov
ja
lea
outs
outs
and
inc
nop
push
lea
sbb
rcl
xlat
cdq
call
cmp
mov
jo
out
je
adc
fistp
sbb
fisubr
test
je
add
ins
loop
sub
mov
js
data16
ror
jg
in
lea
mov
pop
arpl
aad
pop
ret
imul
sub
cmp
call
or
rcr
mul
lock
outs
call
cld
outs
push
stos
mov
adc
jne
adc
add
add
sbb
pop
mov
fidiv
js
jnp
popa
outs
int
pop
add
jno
xor
rcl
jbe
cmpxchg8b
push
sbb
push
xlat
dec
and
icebp
outs
jmp
mov
sub
sti
rcl
(bad)
adc
add
cmp
(bad)
idiv
push
lea
xorps
push
push
sub
test
xchg
sahf
push
loope
inc
clc
outs
dec
in
ror
cmp
mov
cmp
fldcw
sbb
mov
adc
rcl
add
rcl
aas
fdivr
or
pop
outs
dec
mov
inc
jg
lahf
mov
jb
mov
dec
jo
sbb
pop
adc
ins
or
or
mov
dec
shl
xor
aaa
jge
cmp
adc
push
inc
fstp
jo
mov
adc
aas
push
adc
(bad)
inc
add
jnp
inc
or
add
jne
icebp
shl
push
pop
add
xlat
adc
outs
adc
inc
ret
xchg
jg
movaps
into
mov
xorps
sub
and
add
jg
outs
adc
or
out
(bad)
fmul
push
clc
sbb
jae
jg
outs
pop
or
and
movq
sub
push
pop
xor
mov
push
out
mov
dec
adc
loopne
in
dec
or
ds
shl
ja
outs
ret
outs
loope
pshufb
adc
cmp
add
mov
pop
ins
int3
in
jg
xor
shl
sub
(bad)
and
sbb
sahf
add
es
jne
cmp
add
shr
int3
or
and
cli
or
les
push
ror
jb
push
nop
repz
jae
add
jg
inc
adc
cvttsd2si
leave
ret
in
(bad)
jmp
adc
and
and
cmp
je
sub
sti
(bad)
jg
and
fld
fst
fistp
fild
mov
mov
lock
out
jle
cmp
jmp
fstp
mov
xor
sub
out
(bad)
(bad)
(bad)
(bad)
jg
rol
es
rol
jmp
sbb
in
fiadd
jmp
and
ret
mov
frstor
js
aaa
sbb
jg
inc
cld
lea
mov
lock
sbb
add
jmp
sbb
add
lea
mov
adc
and
mov
adc
dec
or
and
(bad)
call
add
call
ret
push
or
mov
ret
sbb
push
dec
adc
xchg
mov
add
cld
mov
mov
imul
test
test
push
call
aad
sti
dec
std
inc
push
ja
push
or
and
xor
dec
call
mov
mov
or
ins
adc
dec
cli
std
add
push
xor
mov
add
out
push
push
xor
pop
int3
call
jne
cmp
je
call
cli
jmp
in
push
call
push
cmp
pop
in
adc
add
jp
or
out
outs
or
or
add
xor
or
leave
mov
or
push
dec
popa
pop
add
add
int3
inc
cmps
pop
mov
int3
mov
ret
mov
into
pop
mov
fadd
pop
xor
xchg
ins
int
cdq
in
cmp
jo
mov
add
data16
adc
pop
or
jo
outs
rol
pop
mov
pop
or
push
xchg
xor
or
js
outs
rcr
mov
dec
ss
pop
call
pop
pop
cld
sub
fsubr
push
pop
call
mov
pushf
jo
pushf
dec
(bad)
add
and
test
outs
cld
and
(bad)
sbb
cmps
pop
mov
dec
jecxz
mov
bound
ror
push
fdivr
jmp
std
fld
jmp
or
jae
popf
int
push
(bad)
cdq
mov
xor
or
sub
add
int
cmps
call
and
xor
rol
pusha
mov
dec
jo
nop
rcl
xlat
jne
sti
daa
loopne
add
aaa
inc
das
inc
pop
mov
fadd
add
add
add
adc
(bad)
dec
xchg
mov
or
adc
or
add
scas
js
or
out
xor
push
add
fnstsw
or
or
add
in
add
or
pushf
das
push
adc
add
outs
ja
add
pop
sub
pop
add
add
(bad)
(bad)
(bad)
cmp
imul
ins
popa
jbe
pop
ja
jb
imul
jae
ins
(bad)
(bad)
(bad)
jmp
ss
popaw
ins
ins
bound
imul
outs
ins
imul
pop
bound
gs
sbb
aas
imul
gs
pop
jne
imul
arpl
ja
jg
imul
gs
and
and
jg
jmp
and
je
and
adc
push
jb
je
outs
and
out
dec
jns
sub
and
add
outs
jne
and
jae
jmp
dec
outs
ins
jns
ja
outs
je
push
popa
add
pop
int3
adc
add
adc
cmp
out
fwait
sbb
jp
add
add
xor
and
es
jmp
push
add
add
add
add
sti
jg
cmp
inc
ins
outs
jae
add
push
gs
add
pop
inc
gs
outs
addr16
sbb
jne
ins
push
(bad)
ins
popa
je
ins
aas
cs
xor
jb
jb
cs
imul
dec
outs
std
rcr
icebp
popa
ins
imul
jne
push
test
push
imul
gs
dec
push
sti
bound
arpl
jb
arpl
push
add
rol
add
lock
shr
push
add
cwde
xor
add
jo
dec
popa
outs
fs
gs
gs
imul
jg
pusha
add
inc
add
or
inc
add
dec
add
fbstp
push
dec
dec
inc
dec
push
push
inc
push
dec
dec
dec
inc
add
push
inc
dec
adc
(bad)
jg
dec
dec
dec
dec
push
dec
add
add
jne
addr16
ins
add
mov
add
add
push
inc
dec
push
inc
add
pop
and
pop
mov
outs
lods
and
xor
pop
sub
add
ja
ud0
gs
imul
out
mov
pop
inc
pop
add
lds
imul
(bad)
(bad)
dec
(bad)
fs
je
outs
outs
add
xor
xor
xor
ss
cmp
inc
inc
inc
inc
(bad)
mov
daa
sub
cmp
add
loopne
in
(bad)
mov
pop
and
pop
add
sbb
inc
and
sar
outs
imul
daa
je
popa
test
pop
in
dec
jo
mov
ins
outs
arpl
ud0
gs
gs
jae
es
lock
xchg
hlt
add
aaa
mov
add
and
add
outs
data16
add
ret
add
jg
inc
nop
add
and
add
mov
fbld
add
add
cmp
add
pop
xlat
std
add
cmp
add
daa
fst
add
add
aad
inc
int3
xlat
add
add
dec
aaa
std
ja
je
sub
gs
add
shl
(bad)
fld
add
xor
and
and
jne
ins
gs
outs
and
outs
outs
and
dec
fbstp
aas
and
jno
gs
jne
je
jae
(bad)
mov
mov
popa
jae
jne
push
jmp
popa
ins
jne
cmp
and
pop
stos
push
sti
fnstsw
jae
arpl
ins
pop
pop
ins
imul
jo
mov
pop
add
ret
clc
and
add
pavgb
mov
pusha
add
mov
mov
mov
inc
add
das
xchg
pop
aaa
xor
adc
adc
jae
movhps
or
add
arpl
mov
lsl
scas
or
adc
add
sbb
pop
pop
pusha
cmp
mov
sysret
xchg
or
test
and
pop
test
inc
add
xchg
xchg
pop
sub
xor
jns
ins
mov
lods
jne
push
arpl
ficom
cmc
std
sbb
cdq
add
ins
mov
stos
pop
pop
cmp
(bad)
jmp
call
push
popa
jae
push
jne
inc
jbe
adc
pop
pop
sti
dec
jb
add
ret
ret
push
inc
add
outs
or
ins
(bad)
ins
ret
jo
jo
push
ss
ins
gs
add
inc
pop
data16
mov
add
pop
add
cmp
addr16
outs
outs
jo
cmp
pop
jge
pop
sti
push
outs
jae
sbb
sub
stc
dec
cmp
test
mov
(bad)
(bad)
out
add
ins
mov
mov
lea
int
sbb
add
jae
imul
fwait
out
mov
imul
ret
jbe
jne
jo
sbb
add
push
lods
nop
push
rdpmc
dec
ins
pop
pop
outs
les
popa
je
push
les
add
sbb
xchg
(bad)
addr16
outs
gs
popa
das
outs
gs
or
pop
pop
sahf
xor
add
mov
and
je
sbb
int3
dec
les
je
jo
outs
or
xor
sbb
cmps
rol
add
sub
add
stos
sti
lods
rep
out
mov
das
pop
cld
sbb
icebp
jg
fdivr
add
pop
or
jne
shl
icebp
add
ret
call
add
add
cmp
daa
fidivr
out
test
inc
stos
lods
xchg
hlt
jmp
jae
jno
outs
arpl
pop
inc
gs
mov
cli
lock
outs
ins
inc
add
gs
dec
or
(bad)
mov
jae
bound
sub
sub
pop
adc
data16
outs
ja
push
dec
sbb
fstp
cmp
cmp
dec
outs
outs
gs
cmp
pop
aas
or
jne
imul
inc
gs
popa
jns
dec
fld
adc
popf
and
jb
or
add
add
or
jmp
aaa
xor
or
xchg
out
std
and
outs
clc
jp
add
cmps
(bad)
push
add
(bad)
xchg
std
lock
(bad)
out
inc
cmp
push
inc
ds
cmp
jb
add
mov
es
adc
outs
addr16
ins
cmp
and
(bad)
mov
gs
ins
cmp
add
jmp
sub
popa
addr16
cmp
add
jg
mov
and
add
or
pop
(bad)
adc
mov
sti
pop
dec
dec
push
push
dec
inc
push
inc
dec
xchg
dec
dec
dec
inc
inc
push
pop
adc
inc
dec
dec
dec
inc
inc
dec
adc
push
xor
mov
ret
push
push
inc
push
push
inc
adc
jne
std
ror
and
dec
ret
sar
xor
and
pusha
cli
scas
outs
dec
or
add
imul
sbb
inc
or
add
or
or
adc
push
sbb
add
mov
add
sbb
pop
pop
adc
scas
jmp
and
and
adc
aaa
add
mov
adc
xchg
(bad)
xor
push
adc
lahf
cs
outs
arpl
jae
inc
neg
adc
dec
imul
icebp
(bad)
dec
fsubr
cs
add
sub
imul
pusha
mov
add
sar
cmpps
push
jge
add
outs
add
js
bound
cmps
inc
fdiv
pop
inc
add
push
in
xor
lock
adc
inc
jb
imul
clts
xchg
sub
xchg
or
add
and
add
add
loopne
add
mov
jne
imul
imul
(bad)
call
inc
add
(bad)
(bad)
aas
inc
or
or
or
or
or
add
and
and
and
and
cld
(bad)
jmp
add
and
and
and
and
and
and
and
add
xor
or
cmp
add
in
fld
ret
punpckhdq
pop
fidivr
rcl
arpl
add
mov
pop
mov
jbe
aaa
pop
fwait
outs
mov
ins
inc
in
xor
(bad)
xor
(bad)
(bad)
(bad)
push
imul
and
jns
inc
inc
add
jbe
add
dec
ins
shr
idiv
(bad)
jmp
pop
loope
inc
mov
inc
push
out
loop
in
dec
inc
xchg
aad
push
iret
lock
call
pop
outs
add
inc
cmc
stc
aas
jmp
xor
sbb
jae
(bad)
(bad)
(bad)
jg
dec
adc
xchg
mov
pushf
cmp
cmps
test
and
dec
cmp
shld
popf
xchg
mov
mov
dec
or
lods
sub
push
popa
bound
sub
sbb
sti
scas
inc
imul
scas
inc
psllq
add
dec
add
enter
mov
aas
xchg
xor
iret
aas
popa
inc
outs
arpl
jns
push
adc
rol
jg
aas
xor
add
das
clc
pop
or
push
push
inc
pop
add
sbb
xchg
push
fild
sbb
add
lock
je
gs
dec
(bad)
pop
out
inc
loopne
inc
sbb
rcl
xor
(bad)
cli
jg
dec
imul
sub
imul
fcmovb
call
and
gs
push
imul
rcr
inc
popa
jb
sbb
dec
inc
je
jb
bound
gs
jno
pop
cs
jo
popa
je
pop
sbb
adc
adc
sbb
cmps
push
mov
jg
gs
fs
popa
je
iret
push
jg
std
mov
cli
test
add
test
cmp
push
and
ins
out
add
jae
popa
add
inc
ja
or
jne
jo
push
and
ja
mov
hlt
add
and
sub
xchg
sbb
les
(bad)
sbb
add
xchg
loopne
push
mov
or
ins
mov
gs
(bad)
and
test
jmp
xor
push
jne
jo
outs
jb
mov
lds
sbb
cmp
dec
gs
jo
push
xchg
lock
cwde
mov
pop
cdq
pop
cdq
jne
jo
dec
sub
and
sub
aaa
pop
ins
outs
arpl
dec
hlt
je
and
push
gs
call
sub
jae
jb
arpl
loop
outs
cmp
popa
ins
sahf
jns
jae
dec
sbb
outs
jb
gs
gs
out
(bad)
push
gs
ins
pop
and
arpl
jae
and
pop
pop
inc
jmp
(bad)
inc
inc
inc
dec
push
pop
pop
inc
push
dec
push
push
push
add
ins
gs
and
icebp
mov
push
mov
sub
jbe
rcl
sbb
clc
out
push
ret
gs
shr
pop
mov
sbb
push
addr16
pop
push
(bad)
mov
add
mov
int
and
sbb
jne
cmps
cmp
outs
sub
test
dec
pop
into
push
pop
out
jnp
pop
ins
popa
imul
arpl
add
pop
xor
xor
out
mov
sub
ins
jae
sbb
call
mov
bound
pop
arpl
inc
add
jb
add
mov
pop
imul
jo
pop
adc
div
outs
popa
add
gs
cmp
pop
push
ins
fmul
mov
add
mov
adc
outs
jbe
jb
test
fwait
sbb
pop
je
add
gs
(bad)
std
cmps
mov
add
outs
sub
and
push
outs
add
ins
popa
je
dec
cmp
outs
rol
push
sub
lahf
cmp
shl
aam
loope
repz
or
push
ja
or
push
and
pop
arpl
jg
popa
ins
imul
and
pop
push
jns
je
js
xchg
inc
push
outs
idiv
arpl
je
outs
and
(bad)
mov
lods
and
and
je
sbb
push
push
outs
outs
popf
arpl
push
test
push
pop
inc
hlt
outs
xlat
aas
nop
and
je
jb
aaa
gs
gs
jb
clc
aaa
aas
add
jae
jo
nop
in
(bad)
out
ja
inc
outs
fs
and
dec
dec
dec
jae
and
and
fcos
jmp
inc
sub
arpl
imul
and
arpl
cmp
outs
dec
je
ins
inc
jg
or
inc
retf
pop
jne
xor
add
inc
pop
out
add
push
pop
dec
pop
jb
sti
scas
fild
and
jne
xor
inc
pop
ret
jae
cmp
xor
imul
or
push
popa
jb
cmps
add
mov
cmps
in
gs
inc
push
jb
push
popa
imul
mov
push
add
inc
ins
ins
xor
cli
add
pop
add
pop
or
add
or
ins
xlat
in
add
pusha
pop
add
mov
adc
add
or
add
adc
pop
adc
out
pop
mov
adc
adc
jle
pop
mov
mov
add
mov
push
and
pop
mov
pop
inc
daa
cmp
add
adc
(bad)
(bad)
(bad)
fist
sub
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
(bad)
dec
fdivr
jmp
rcl
mov
sub
mov
(bad)
call
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
(bad)
(bad)
jmp
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
(bad)
(bad)
(bad)
jmp
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
push
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
mov
add
(bad)
and
or
adc
stos
sbb
data16
(bad)
(bad)
(bad)
inc
jbe
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
(bad)
dec
pop
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
(bad)
(bad)
(bad)
call
imul
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
(bad)
(bad)
(bad)
jmp
dec
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
(bad)
(bad)
(bad)
jmp
outs
xor
mov
sar
add
in
add
pop
dec
or
cmp
(bad)
(bad)
push
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
inc
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
(bad)
(bad)
(bad)
dec
arpl
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
(bad)
(bad)
(bad)
call
or
inc
push
imul
xor
sbb
push
imul
(bad)
(bad)
call
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
mov
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
jmp
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
cmp
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
(bad)
(bad)
(bad)
inc
fs
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
dec
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
(bad)
(bad)
call
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
(bad)
(bad)
call
mov
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
(bad)
(bad)
jmp
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
(bad)
jmp
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
(bad)
(bad)
push
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
(bad)
(bad)
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
out
pop
sbb
add
push
add
jnp
xchg
jmp
cmp
dec
cmp
xor
pop
pop
xor
push
push
lahf
and
cs
jne
imul
jae
jp
addr16
jbe
leave
pop
pop
sub
stos
pop
cs
jg
out
adc
sub
add
cs
das
int3
sbb
jae
out
scas
fisttp
push
leave
fbld
rcl
pop
mov
bound
sub
pop
xlat
cmc
mov
aaa
pop
ds
mov
cld
cmps
(bad)
jo
je
cmp
jae
outs
add
data16
outs
mul
push
adc
repz
call
outs
jb
dec
movs
push
lds
gs
fs
inc
in
int
jae
xor
stos
cmps
js
ins
ins
jne
add
mov
outs
add
sub
aam
out
xchg
or
and
js
js
add
dec
xlat
adc
jbe
add
addr16
pop
cmp
pop
jl
and
sub
imul
rol
mov
data16
daa
pop
std
mov
inc
pop
add
lock
outs
int3
cdq
cmp
retf
inc
inc
push
add
push
adc
pop
push
popa
outs
popa
addr16
jne
xchg
jb
in
sahf
pop
jae
popa
jb
and
push
adc
cs
sbb
push
fcomp
sar
inc
jb
jae
je
jo
dec
or
add
mov
sbb
mov
imul
inc
fnstenv
cmp
lods
cmp
xchg
dec
pushf
cmp
jae
and
aaa
les
pop
outs
jo
aaa
mov
outs
add
xchg
add
add
scas
mov
jns
jo
jae
sbb
ja
jp
daa
pop
jnp
jo
jmp
call
pop
jno
jne
push
test
jbe
inc
or
jecxz
sbb
js
sbb
test
dec
dec
push
and
push
dec
inc
dec
inc
dec
push
inc
inc
aaa
outs
pop
scas
mov
iret
jns
jnp
mov
jmp
out
pop
jne
dec
(bad)
push
inc
add
outs
push
add
imul
pop
adc
(bad)
call
and
jne
jne
gs
fnstcw
shl
sub
jecxz
adc
lea
out
add
add
add
sbb
sti
call
pop
pop
dec
push
dec
inc
push
pop
inc
push
lahf
pop
pop
pop
inc
dec
push
jmp
inc
dec
inc
inc
sbb
inc
add
dec
add
call
fistp
or
mov
mov
or
paddusb
sti
sbb
outs
imul
outs
ja
jg
mov
arpl
jbe
gs
addr16
add
jo
scas
mov
outs
gs
movs
jb
mov
jb
jae
push
xor
jbe
into
cli
add
fs
add
add
mov
jne
jo
jb
jne
add
mov
add
popa
add
cs
add
pop
push
imul
cmps
movsx
cmps
fsub
or
jb
inc
or
mov
jb
add
fs
je
iret
data16
fisttp
imul
outs
arpl
and
arpl
(bad)
gs
dec
outs
je
sbb
push
popa
jae
mul
dec
add
dec
push
and
enter
mov
sub
pop
push
mov
jp
push
push
inc
add
cmp
lds
idiv
dec
pop
dec
xor
push
test
cmp
dec
mov
mov
movhps
push
outs
popa
jo
push
or
mov
push
inc
outs
xor
jge
add
sbb
add
mov
or
dec
or
mov
pop
add
xchg
loopne
sar
add
aam
add
pop
mov
adc
mov
add
xchg
push
add
mov
pop
push
add
push
cmp
pop
aas
gs
fwait
xchg
inc
aas
pop
lods
and
pop
mov
dec
fldcw
xor
(bad)
fild
stos
pusha
dec
imul
sub
arpl
jne
outs
or
add
pusha
das
pop
push
pop
add
das
cmp
mov
mov
mov
aad
mov
mov
mov
add
and
ret
jg
ret
pop
jae
jae
popa
ins
popa
sar
jo
jbe
cmp
jne
imul
pop
iret
push
shr
fs
fiadd
lods
push
je
lods
fbstp
cmp
ins
imul
xor
pop
rcl
and
and
and
ficom
and
sub
icebp
test
jnp
jae
or
pop
aad
(bad)
out
and
jo
pop
bound
jae
jae
add
dec
cmps
push
jo
ret
pop
sti
add
sub
adc
or
in
pop
dec
test
in
idiv
hlt
fcom
inc
add
in
push
jge
xor
lahf
icebp
adc
mov
mov
jae
pop
and
xor
cld
fistp
push
pop
in
adc
pop
in
and
or
pop
pshufw
jae
push
outs
outs
pop
or
mov
test
add
frstor
add
jae
dec
and
popa
ja
mov
dec
imul
add
pop
(bad)
jne
push
dec
cmp
xor
or
push
add
clc
sbb
inc
xor
add
lds
add
aaa
jo
dec
imul
adc
or
lods
aas
pusha
jg
add
je
xor
add
push
jne
fs
add
ja
jb
dec
cmp
jb
sub
sub
inc
mov
jo
and
mov
push
jb
sbb
out
shl
push
add
cmp
jmp
pop
or
mov
add
add
sub
ss
rcr
sbb
sbb
sbb
push
sbb
jg
jg
dec
outs
push
push
pop
or
mov
or
add
sbb
push
ret
sbb
add
sbb
jo
out
push
cmp
outs
pop
jae
arpl
outs
imul
jae
add
add
add
inc
cld
xchg
add
add
cmps
arpl
jae
sub
outs
jb
sub
xor
mulps
gs
gs
or
outs
les
ins
mov
inc
into
push
add
add
add
dec
add
add
push
add
or
xor
ss
outs
aas
cmp
add
add
gs
popa
add
jae
push
and
mov
paddsw
dec
add
imul
inc
and
cs
cmp
das
pop
dec
call
add
sahf
inc
arpl
pop
mov
lahf
int3
gs
adc
loopne
xchg
imul
ja
outs
inc
sbb
sbb
sub
lods
xchg
xor
jo
sub
dec
mov
jno
inc
je
mov
and
(bad)
aas
pop
icebp
outs
ins
and
sbb
imul
cmp
sub
imul
test
pop
mov
ins
daa
ins
jo
mov
ret
sbb
and
ja
div
jae
cmp
pop
add
pop
inc
push
inc
push
dec
pop
dec
inc
inc
push
pop
dec
dec
inc
stc
add
jmp
add
or
scas
mov
imul
ror
add
add
cmp
xlat
adc
push
fadd
fwait
sbb
sbb
add
or
push
lahf
pusha
and
push
mov
pop
inc
pop
push
add
pop
adc
mov
add
inc
push
scas
stos
fist
imul
jge
sub
mov
imul
xor
jge
leave
xchg
mov
je
jmp
pop
inc
push
je
cmova
je
aas
div
or
add
sub
gs
xor
pop
xchg
je
fild
sti
pop
pop
jo
popa
imul
jmp
popa
je
pop
jne
popa
addr16
jae
jbe
jb
les
cmp
imul
lahf
int3
ins
sbb
jne
popa
jb
push
add
mov
or
(bad)
in
lahf
or
jbe
inc
add
cs
out
sbb
out
imul
jge
xchg
xchg
scas
sub
icebp
fs
xor
fnsave
(bad)
dec
or
rol
add
jno
xor
or
xor
sub
je
icebp
sub
cmps
and
loope
mov
xor
mov
add
xlat
arpl
add
xor
or
jp
and
add
out
jae
jne
jg
aas
pop
sub
xor
idiv
xor
dec
push
cmp
mov
pop
xor
adc
and
fcmovne
outs
loope
and
dec
outs
addr16
or
inc
out
push
inc
push
inc
sub
sar
xor
arpl
jbe
pop
imul
dec
mov
and
fsub
lods
(bad)
(bad)
jmp
and
and
fs
and
pop
and
inc
inc
push
inc
cmp
push
mov
sub
cmp
add
and
adc
xchg
ja
pop
add
sbb
jg
jae
lods
dec
and
outs
addr16
ins
jne
add
int3
shl
add
or
sbb
xchg
jecxz
clc
stos
or
aam
xchg
clc
mov
add
push
mov
mov
xchg
add
push
cld
inc
mov
mov
add
inc
shr
gs
xlat
test
lds
mov
je
imul
test
inc
gs
cmp
xchg
sub
jae
ins
je
daa
push
add
sbb
fxch
pusha
xor
test
cmp
fneni(8087
out
add
add
inc
scas
arpl
hlt
sti
adc
daa
and
sub
push
mov
inc
outs
jae
inc
add
sub
daa
add
inc
ins
lea
arpl
and
inc
out
pusha
enter
(bad)
rcr
push
paddusb
idiv
and
dec
sbb
and
jmp
mov
popa
outs
fs
ret
stos
and
sbb
inc
mov
das
xrelease
mov
and
imul
addr16
sbb
int3
(bad)
and
sbb
pushf
mov
outs
add
dec
outs
outs
push
add
cld
xor
inc
imul
add
(bad)
call
xor
pop
push
dec
inc
push
dec
dec
inc
push
dec
inc
xor
loope
shl
data16
mov
ins
dec
sbb
jae
sbb
fisub
or
mov
ja
mov
das
pop
jb
mov
jb
inc
or
and
mov
(bad)
xor
pop
pop
lods
cmp
loope
fwait
(bad)
gs
push
ret
test
dec
push
inc
inc
inc
fisttp
sub
in
xor
adc
mov
clc
add
outs
outs
and
jge
add
adc
xchg
hlt
add
dec
fwait
mov
or
outs
adc
test
dec
jg
adc
or
adc
adc
jmp
mov
add
inc
outs
add
in
mov
add
imul
fst
scas
add
and
iret
or
outs
jb
add
out
stos
and
gs
jae
fs
pop
outs
jb
dec
push
dec
inc
dec
dec
inc
dec
inc
jg
add
dec
inc
dec
movs
add
push
inc
push
or
cld
push
dec
dec
dec
add
mov
xchg
mov
fstp
outs
pop
xchg
xor
or
arpl
and
sbb
add
xchg
es
add
jmp
aam
neg
inc
jmp
loope
xor
sbb
dec
push
adc
add
sbb
std
(bad)
inc
sbb
add
sbb
loopne
or
inc
add
shr
xor
llwpcb
lock
dec
add
cdq
dec
or
mov
outs
outs
je
js
ror
pop
push
jb
outs
idiv
ror
mov
cmp
push
push
bound
push
imul
les
sbb
xor
push
cmp
pop
das
mov
int3
stc
adc
sub
in
es
cmp
or
jns
gs
(bad)
(bad)
lock
add
push
popa
outs
imul
shl
jle
add
mov
add
mov
mov
adc
push
xor
inc
jmp
sahf
add
out
das
imul
gs
ficom
out
ins
add
sub
pop
out
pop
jne
sub
imul
aas
sub
mov
adc
add
push
in
sbb
cmp
sub
dec
push
dec
push
adc
call
jbe
jb
push
mov
add
mov
fs
mov
jo
gs
imul
jmp
push
jae
(bad)
inc
adc
adc
je
jae
imul
arpl
mov
add
test
jae
outs
ins
or
outs
gs
in
push
and
outs
je
jne
and
inc
push
loop
nop
xor
xor
xor
xor
and
stc
stos
cs
jo
xor
pop
aas
fs
pop
pop
xor
push
jl
mul
outs
sbb
mov
mov
inc
pop
push
enter
sti
popa
push
jb
fs
je
inc
mov
ret
aas
sti
pop
popa
jne
outs
test
push
add
outs
jb
lock
jmp
imul
adc
mov
pop
ins
adc
mov
pusha
fldcw
jbe
popa
add
pop
push
outs
je
sbb
bound
loope
loopne
xchg
mov
and
add
mov
mov
jae
ja
dec
cmps
mov
outs
popa
ins
popa
gs
ins
push
cli
fucomp
mov
scas
add
dec
outs
ja
ins
outs
mov
mov
int
add
pop
data16
lahf
cli
rcr
ins
add
mov
imul
gs
add
imul
pop
jbe
xchg
and
push
mov
pop
outs
inc
imul
lahf
jns
cmp
add
or
scas
cmp
(bad)
pop
jb
pop
ins
xor
outs
pop
dec
pop
sqrtps
inc
and
add
dec
outs
outs
add
jne
and
jl
scas
fdiv
popa
jp
ins
add
addr16
(bad)
jbe
xor
xchg
data16
arpl
jbe
jmp
or
imul
imul
ja
xchg
daa
imul
push
dec
xlat
inc
jnp
dec
jp
cmp
call
ret
cmpxchg
outs
sub
xlat
jne
jb
add
out
aas
outs
outs
add
outs
sbb
inc
mov
ins
jbe
add
jnp
push
call
daa
imul
xlat
jne
fist
data16
add
mov
jae
push
inc
xchg
bound
pop
push
out
fnstsw
gs
jb
ins
add
jo
sub
pop
xlat
sbb
sbb
imul
das
popf
jae
adc
xor
xchg
movntps
popa
xlat
jne
add
je
add
imul
lahf
ins
xor
std
pop
arpl
shr
jb
jae
addr16
jo
jne
jae
(bad)
xor
in
repnz
lods
(bad)
adc
add
xchg
cdq
rol
jb
sub
jne
retf
jle
outs
arpl
outs
push
push
add
lds
add
jae
xor
cmp
add
sub
add
and
fld
ins
mov
and
rcl
dec
pop
popa
pop
outs
rcr
mov
add
inc
adc
push
pushf
mov
push
sbb
lods
pop
jl
add
popa
jo
int
pop
xchg
aaa
cmc
jb
je
outs
add
cmp
add
add
test
push
arpl
and
fs
inc
call
jne
add
pop
je
pop
push
in
jge
lea
pop
sbb
shr
and
add
outs
(bad)
mov
add
arpl
outs
pop
outs
imul
shr
pop
cwde
add
ret
adc
iret
gs
push
lods
dec
add
jae
fwait
cmp
pop
pop
push
mov
scas
rcr
mov
push
add
out
ins
in
mov
adc
push
pop
sub
jmp
or
cmp
bound
sub
jb
jns
sub
(bad)
call
push
inc
imul
pop
pop
iret
cmp
ins
sub
sar
es
cmp
adc
cmp
aaa
xchg
(bad)
popa
jo
imul
das
outs
arpl
shr
jl
cmp
sub
mov
outs
arpl
jb
mov
xor
pop
add
pop
dec
ja
in
push
and
add
sub
sbb
sbb
dec
pop
adc
inc
popa
jae
xor
sub
jns
add
mov
inc
cmp
adc
add
pop
jmp
bound
gs
xchg
cmp
gs
je
jbe
fs
bnd
and
sbb
cli
test
mov
imul
or
mov
sbb
cmp
and
or
loope
ja
and
popa
ins
ins
shl
xor
addr16
sbb
fisub
mov
inc
mov
cmp
in
and
dec
pop
dec
and
cmp
mov
and
xor
pop
loope
add
cmp
push
ins
jae
inc
inc
pop
or
inc
inc
mov
inc
inc
push
dec
(bad)
(bad)
sub
inc
inc
or
adc
sbb
dec
inc
dec
inc
inc
push
and
pop
idiv
or
xor
sub
mov
xchg
dec
inc
inc
cmp
in
push
(bad)
xor
or
inc
push
push
pop
popa
arpl
(bad)
lock
stc
pop
add
xor
cmps
retf
or
es
push
inc
ret
lods
jae
mov
pop
jno
gs
bound
push
addr16
ret
xchg
xchg
xorps
ret
fsub
xor
fwait
adc
rol
outs
sub
fs
xor
jae
jae
jae
mov
sub
jp
xchg
cmp
imul
push
dec
je
iret
cmp
and
pop
in
shr
and
push
push
fs
push
mov
aad
adc
mov
add
(bad)
call
mov
setbe
and
adc
ss
cmps
lods
adc
icebp
jno
mov
pop
cmc
(bad)
(bad)
(bad)
call
rcl
mov
loop
(bad)
cmp
dec
dec
pop
xor
test
movq
(bad)
jmp
movs
cld
dec
mov
inc
jb
push
dec
inc
dec
dec
xor
outs
nop
loop
aaa
aas
adc
(bad)
(bad)
jmp
xchg
fs
xchg
pop
inc
jnp
xchg
dec
mov
cmps
in
xor
mov
scas
xlat
pop
sbb
das
movs
jmp
pushf
loope
pusha
retf
add
(bad)
or
(bad)
(bad)
call
pop
jnp
mov
lahf
mov
repnz
jge
mov
inc
mov
xchg
cmp
push
jle
(bad)
(bad)
add
inc
dec
dec
push
push
inc
inc
add
arpl
js
rol
jno
pop
jne
add
call
cwde
adc
(bad)
js
je
and
mov
and
adc
add
add
add
or
popa
xor
adc
std
jae
add
loopne
pop
lock
(bad)
out
inc
sysret
pop
xor
packsswb
or
jbe
jle
aas
sbb
xor
add
add
or
add
pop
or
(bad)
fist
add
add
add
add
add
add
add
inc
inc
inc
je
mov
ud0
(bad)
aas
jmp
cmp
push
xchg
inc
or
sbb
add
inc
jg
pop
or
add
mov
pop
xor
or
add
mov
mov
pop
pop
test
or
jmp
clc
pop
or
or
add
addr16
xor
jmp
out
add
cmp
sub
inc
adc
call
inc
xchg
cmp
sahf
mov
clc
(bad)
(bad)
jg
or
mov
adc
push
push
push
lds
sub
es
push
movs
aas
jnp
jmp
enter
pop
dec
jne
push
mov
jmp
ds
xor
je
adc
add
out
dec
idiv
jg
jmp
enter
inc
xchg
jnp
pop
cmps
call
pop
mov
add
(bad)
(bad)
call
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
(bad)
(bad)
(bad)
jnp
lock
lds
call
bound
test
cmp
jb
add
(bad)
(bad)
(bad)
mov
mov
jmp
mov
cmp
imul
call
aam
add
(bad)
(bad)
dec
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
(bad)
(bad)
(bad)
push
out
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
(bad)
(bad)
(bad)
push
aaa
mov
add
cmps
test
add
mov
mov
jne
cmp
add
(bad)
(bad)
(bad)
dec
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
(bad)
(bad)
dec
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
(bad)
(bad)
inc
mov
mul
or
add
adc
cmp
mov
or
add
(bad)
(bad)
(bad)
jns
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
(bad)
dec
sub
fwait
int3
and
mov
add
pop
out
shl
popf
push
sub
dec
xor
mov
inc
outs
add
loop
arpl
fld
stos
add
push
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
(bad)
(bad)
inc
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
(bad)
inc
sub
cmp
fild
add
and
call
(bad)
(bad)
(bad)
jmp
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
call
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
(bad)
(bad)
fild
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
(bad)
(bad)
(bad)
inc
pop
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
(bad)
(bad)
(bad)
jmp
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
(bad)
(bad)
(bad)
mov
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
(bad)
(bad)
(bad)
push
imul
xchg
retf
xchg
ja
mov
call
(bad)
call
and
cmp
adc
or
scas
add
mov
bnd
or
(bad)
(bad)
(bad)
dec
fstp
xlat
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
(bad)
(bad)
(bad)
jmp
test
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
(bad)
(bad)
push
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
jmp
mov
test
dec
sbb
mov
jnp
xchg
cld
or
call
mov
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
(bad)
(bad)
dec
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
verw
cld
call
mov
fcom
(bad)
push
aas
(bad)
movups
out
cmp
add
xlat
mov
cdq
or
cwde
adc
add
(bad)
inc
ins
xchg
add
fs
add
xchg
popw
inc
or
add
sahf
and
clc
pop
pop
adc
(bad)
cmp
aas
loopne
cmp
aas
xor
xchg
push
repz
pusha
sti
sbb
sbb
scas
pop
ins
or
adc
stos
and
jg
idiv
fs
es
push
lds
aas
adc
and
aaa
lock
mov
lds
mov
aad
push
jp
cwde
cdq
cdq
leave
pusha
lock
loopne
adc
fdiv
inc
cmp
or
pop
xchg
out
popa
ror
pop
pop
push
sysret
or
in
scas
in
pop
pop
inc
sysret
mov
psubusb
pop
pop
jb
ud2
jbe
pop
push
sysret
lods
jmp
mov
data16
pop
dec
sysret
sbb
pop
cwde
(bad)
pop
mov
pop
inc
sysret
in
jmp
ss
call
dec
sysret
cli
call
sbb
ud2
jbe
pop
sbb
pop
shl
pop
mov
data16
pop
mov
pop
ror
jbe
sysret
add
jbe
in
popa
pop
ret
pop
or
ror
pop
inc
sysret
fwait
cmp
pop
retf
pop
fsub
push
mov
pop
push
ja
push
sysret
out
fsub
in
pop
mov
pop
pusha
xchg
inc
nop
in
mov
adc
pop
loop
mov
xchg
dec
pop
mov
pop
sbb
push
(bad)
pop
mov
pop
and
pop
mul
dec
ret
sbb
or
mov
sysret
je
pop
fsub
push
dec
sysret
and
push
fwait
cmp
pop
pop
shr
popa
ror
test
pop
pusha
xchg
pop
nop
in
mov
ss
adc
ret
or
in
pop
push
or
pop
retf
cmps
sub
popa
ror
test
pop
pusha
xchg
inc
prefetcht1
in
mov
and
pop
scas
pusha
inc
add
jmp
cmp
test
(bad)
aas
adc
mov
leave
fidiv
call
fwait
jp
aas
xlat
out
daa
fldcw
and
ret
cmps
aas
shl
test
pop
(bad)
(bad)
(bad)
(bad)
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
cmp
push
out
mov
inc
push
push
cmp
ror
ins
xchg
mov
dec
jns
(bad)
(bad)
jmp
cmp
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
out
dec
mov
pusha
or
cdq
ret
or
jns
dec
dec
sub
dec
les
mov
(bad)
mov
movs
test
out
mov
(bad)
aas
in
(bad)
xlat
push
jg
push
push
or
(bad)
(bad)
mov
aas
mov
bound
add
call
pop
addr16
aas
cmp
jg
call
test
sub
jmp
aaa
outs
call
push
mov
inc
out
(bad)
(bad)
(bad)
(bad)
mov
sub
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
(bad)
mov
jnp
add
sar
inc
or
out
xor
sar
mov
(bad)
(bad)
(bad)
dec
sbb
cmp
sub
test
cmp
loop
sar
ret
(bad)
(bad)
(bad)
out
adc
dec
push
sbb
sar
add
add
ret
aam
(bad)
(bad)
(bad)
mov
dec
pop
outs
inc
adc
mov
cmp
sbb
(bad)
(bad)
aas
rcr
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
out
(bad)
(bad)
(bad)
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
out
xor
xchg
cwde
fdivr
push
das
push
pop
data16
pusha
add
add
fnstcw
inc
imul
(bad)
mov
icebp
fnstcw
pop
inc
repnz
fld
adc
call
call
adc
xchg
inc
fstp
(bad)
mov
xor
(bad)
sbb
sahf
int
fcmovnu
push
aas
push
fwait
xchg
outs
mov
jg
(bad)
mov
fdivr
ret
call
(bad)
fcomip
call
(bad)
cmove
sub
psraw
aam
aas
std
sbb
sub
(bad)
push
js
shl
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
lock
(bad)
sub
call
(bad)
push
adc
movs
and
aas
mov
cwde
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
out
mov
rcr
dec
cs
jmp
loope
out
sub
adc
mov
push
loope
ret
shl
movs
or
push
addr16
(bad)
dec
out
aas
stos
cmp
add
aas
jnp
dec
outs
clc
(bad)
out
outs
push
cld
aas
cmp
push
sahf
ja
aas
jns
xor
sbb
stc
sub
loop
in
mov
popa
cmp
dec
xor
pop
jecxz
xor
bound
fwait
dec
clc
(bad)
(bad)
inc
jecxz
mov
inc
sbb
fld
jecxz
mov
mov
fist
andps
imul
test
int
mov
sbb
aas
test
cld
(bad)
std
sub
mov
iret
pop
arpl
aas
lods
retf
aad
(bad)
xor
repz
(bad)
call
test
xchg
test
adc
and
xor
shl
fwait
es
sub
aas
leave
mov
push
sbb
xchg
ins
in
sahf
outs
shr
jmp
cmp
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
mov
dec
mov
xor
dec
sub
aas
adc
sub
mov
mov
add
icebp
add
or
inc
ins
jae
ins
ins
outs
arpl
xchg
add
or
gs
inc
gs
or
cmps
ficom
inc
jb
je
push
gs
pop
mov
add
js
idiv
fcom
rcpps
popa
jo
outs
jb
adc
cmps
mov
popa
jb
outs
je
sub
loopne
aas
sbb
or
mov
leave
das
adc
pusha
push
and
stc
pop
xor
jae
inc
pushf
sbb
mov
inc
pop
arpl
or
adc
adc
call
inc
push
push
imul
push
gs
jb
data16
dec
inc
jne
pop
dec
add
outs
jb
sahf
and
jmp
jb
stos
mov
mov
ins
bound
imul
add
inc
adc
inc
inc
imul
add
inc
outs
jne
push
jns
je
ins
jae
sbb
dec
jb
lock
dec
xchg
jg
inc
gs
in
int
cvttps2pi
xor
jae
jb
sub
jg
add
aas
dec
jae
popa
ins
imul
inc
dec
popa
jo
je
dec
add
idiv
in
jecxz
popa
arpl
addr16
adc
imul
jbe
dec
ss
movs
loop
iret
popa
cmp
popa
das
inc
cmp
pop
push
add
push
(bad)
js
add
ja
ins
outs
add
mov
jae
(bad)
(bad)
lahf
arpl
pop
je
punpcklwd
pop
sbb
(bad)
out
popa
sbb
sbb
mov
jae
jb
add
(bad)
clc
imul
and
arpl
ins
and
outs
outs
xchg
popaw
(bad)
imul
neg
aad
add
fs
ins
add
enter
pop
push
data16
data16
add
pop
jns
add
fisub
pop
add
sbb
outs
gs
and
add
ret
push
clc
sub
add
sar
cdq
pop
or
add
add
push
add
(bad)
(bad)
std
jg
add
push
add
add
add
inc
inc
add
push
and
and
push
(bad)
jne
call
or
aaa
xor
push
push
pop
mov
push
out
add
add
js
and
pop
add
or
add
(bad)
(bad)
fisttp
add
add
outs
add
outs
add
add
add
add
imul
push
popa
je
fs
jns
pop
pop
and
(bad)
out
or
outs
or
das
jb
(bad)
fsubr
mov
jb
add
dec
popa
outs
add
fstp
jmp
add
jb
inc
jo
pop
jns
dec
jae
jne
add
addr16
jo
dec
arpl
outs
jbe
inc
arpl
sbb
cmp
sti
xor
enter
jmp
pop
sar
aas
gs
inc
ins
popf
shl
add
jae
push
gs
mov
push
outs
or
aas
fstp
sub
dec
add
push
jae
div
dec
dec
das
fs
jns
add
dec
and
fs
jns
dec
dec
cmp
cmp
sbb
jne
(bad)
mov
push
js
push
add
or
mov
inc
add
das
out
neg
cmp
cmp
dec
aas
cmova
adc
mov
popa
add
dec
outs
add
in
fnstenv
and
addr16
outs
jne
ds
xchg
adc
popa
mov
dec
jae
sahf
and
loope
mov
loopne
jae
mov
add
dec
rcl
jo
fiadd
add
dec
mov
add
pop
xchg
cmp
jne
mov
(bad)
xor
ret
out
lds
in
and
jne
add
ins
std
iret
cmp
jb
add
sbb
add
mov
int
seta
ret
out
sub
ficomp
push
push
test
imul
ja
dec
add
jns
jns
jnp
mov
pcmpgtb
and
add
push
dec
add
adc
jg
add
dec
add
add
xchg
pop
add
lds
jno
add
arpl
popf
jmp
bound
arpl
push
jnp
mov
add
pop
jnp
push
les
iret
popf
add
add
sbb
cmp
loop
ss
add
dec
inc
dec
inc
inc
fwait
das
mov
std
add
mov
ret
jp
jb
scas
or
mov
pop
popf
jge
or
clc
adc
add
push
adc
mov
fdiv
adc
pop
add
push
sbb
pop
pushf
cmp
(bad)
rcr
lds
sbb
lock
lock
add
cmp
pop
inc
sahf
cmp
mov
mov
leave
mov
js
or
or
sub
inc
cld
idiv
mov
mov
pusha
push
add
add
add
in
sub
add
cs
movs
shl
add
or
jne
and
sbb
pusha
xchg
xor
fdivr
add
adc
mov
dec
push
outs
inc
add
sbb
clc
popa
lahf
or
add
or
les
bound
add
push
cmp
sub
jns
rcl
sti
sbb
jb
outs
sbb
je
push
lahf
add
sbb
adc
push
popa
sbb
je
sub
sub
push
xchg
jae
ret
cmp
enter
xor
sti
mov
xchg
test
inc
pop
ror
bound
setg
jo
xor
mov
fwait
dec
pop
pop
loope
cmps
arpl
imul
mov
dec
push
jmp
pop
test
jne
and
int
jmp
inc
lahf
inc
jne
shl
daa
xlat
outs
sub
or
inc
inc
scas
jae
in
jno
int3
pop
dec
mov
mov
xor
xor
call
retf
inc
lods
and
js
cmp
sub
cmp
sbb
sbb
jo
popf
and
jmp
mov
mov
ins
sbb
sbb
dec
nop
pushf
pop
xor
sbb
cmp
pop
ss
jne
jp
ja
inc
pop
mov
add
das
or
lods
sub
outs
ret
adc
(bad)
aas
pop
gs
cmp
mov
gs
mov
sub
imul
jmp
not
sahf
sub
add
adc
xor
and
jmp
xchg
and
outs
add
jnp
lahf
retf
imul
and
ja
dec
jo
ins
lahf
sti
push
sub
loopne
mov
adc
gs
ret
int3
cmc
test
imul
xchg
mov
or
scas
and
pop
and
add
dec
jo
jp
mov
pop
xor
or
xor
and
jp
adc
inc
adc
dec
pop
xor
test
xor
xor
das
xchg
mov
mov
jno
sbb
sbb
jmp
jnp
pushw
ror
pushf
xor
push
sar
out
push
mov
lea
adc
push
mov
ret
xor
daa
out
push
and
add
add
xchg
iret
pop
ja
out
jne
out
int
or
jmp
or
add
or
imul
daa
sub
push
cmp
(bad)
(bad)
shl
stos
sub
arpl
pop
jo
mov
inc
dec
popa
pop
pop
test
dec
sub
inc
jne
loopne
jo
int
(bad)
aam
sbb
dec
loope
inc
pop
ins
dec
jo
xor
popa
in
stos
out
cmp
ror
push
mov
sub
jl
arpl
cmp
sub
pop
adc
je
add
imul
inc
add
inc
pop
dec
ret
adc
fcom
sbb
sbb
ins
and
cmp
pop
adc
pop
pop
sbb
jecxz
push
emms
in
and
inc
fwait
sub
std
adc
add
add
add
pop
rol
jno
ins
aad
dec
sbb
pop
ret
pop
in
mov
dec
adc
dec
popa
in
aam
in
dec
or
or
fwait
outs
shl
jp
das
imul
sar
push
sub
sub
push
aas
ror
jmp
bound
push
add
call
lea
stos
add
iret
push
or
or
dec
repz
cmp
push
lea
sub
rol
sbb
xchg
or
bound
mov
sbb
add
nop
xchg
xchg
xchg
or
popa
pop
mov
add
push
mov
out
and
js
iret
or
rcl
arpl
mov
inc
or
push
mov
add
dec
(bad)
jg
jl
dec
add
sub
xor
jne
dec
outs
outs
push
pop
cwde
loopne
jne
push
gs
push
sbb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
mov
push
pop
add
or
fdivr
dec
and
ins
loopne
or
or
push
cmp
test
pop
xor
or
addr16
xchg
out
dec
out
fs
dec
mov
pop
add
dec
push
pop
inc
add
dec
or
mov
stos
lahf
pop
push
add
movs
sub
out
scas
jmp
push
sub
aam
sbb
add
push
xor
fcomp
inc
das
push
movhps
inc
icebp
inc
add
add
add
push
pop
or
xlat
push
movups
adc
(bad)
(bad)
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
and
cmp
(bad)
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
call
mov
pop
pop
pusha
adc
imul
jo
jb
mov
push
jne
ja
jns
jnp
jge
jg
cmp
cmp
or
add
add
add
fsubr
loopne
sbb
stos
sti
add
sbb
mov
aas
jae
xor
pop
pop
retf
jno
icebp
pusha
inc
clc
pusha
dec
mov
clc
ret
movs
add
and
(bad)
outs
push
add
add
adc
add
(bad)
(bad)
inc
add
xor
or
sub
cmp
add
movs
fistp
mov
push
(bad)
and
or
pusha
push
push
js
jo
jo
lahf
add
(bad)
lods
sub
(bad)
inc
or
(bad)
pop
add
(bad)
retf
and
in
and
cmps
pop
or
dec
add
sbb
push
out
add
scas
jmp
pusha
xchg
pop
jo
pop
js
pop
(bad)
lahf
push
jmp
mov
add
cmp
mov
fst
inc
aaa
mov
addr16
test
pop
mov
or
xchg
and
cmp
popf
or
enter
fdiv
aas
loopne
jmp
sbb
sbb
lock
(bad)
xor
jb
add
call
mov
adc
and
inc
mov
xchg
fisubr
fidiv
sar
lock
cmp
and
ficom
pop
pop
mov
add
pusha
add
push
mov
fidivr
add
adc
mov
fimul
aas
or
nop
sub
fnstenv
push
aaa
pop
mov
sub
cmp
shl
enter
rol
xor
fsub
addr16
or
call
or
rcr
add
pop
sbb
add
push
movups
sbb
into
retf
mov
pop
sub
pushf
in
push
xchg
pop
xor
cmp
adc
pop
or
dec
mov
add
int3
add
or
or
pop
add
pop
add
jo
in
add
sub
add
jmp
cmp
pop
xchg
xchg
or
mov
arpl
rcl
or
les
ror
fcom
call
adc
push
adc
hlt
adc
or
add
or
leave
xchg
addr16
prefetcht2
pop
and
xor
cmp
repnz
sbb
push
sbb
dec
sahf
ins
pop
js
test
jns
in
nop
and
daa
dec
sahf
cmp
es
daa
fsubr
in
in
xchg
sub
sub
sub
or
and
sub
cmp
fild
inc
call
pop
repnz
mov
pop
push
cmp
cmp
mov
cwde
movs
das
test
(bad)
mov
loope
inc
bsf
sahf
cmp
test
inc
paddq
inc
clc
inc
in
xchg
inc
loop
inc
adc
dec
sahf
cmp
repnz
dec
inc
dec
dec
dec
leave
xchg
daa
dec
pop
push
fs
jo
cmp
repnz
push
mov
gs
scas
daa
dec
sahf
mov
add
(bad)
or
loopne
pop
retf
pusha
push
or
in
or
mov
clc
or
jecxz
lds
or
adc
nop
pop
sub
cmp
enter
fcomp
jecxz
sbb
daa
dec
cmp
inc
iret
(bad)
cmc
in
imul
pop
enter
xchg
daa
aam
loopne
in
or
sahf
cmp
clc
sbb
add
sbb
sub
jne
in
pop
ror
cmp
inc
pop
push
jnp
pop
inc
sbb
or
push
sahf
cmp
sbb
or
and
in
add
test
aaa
mov
in
mov
xadd
pop
int3
or
sbb
(bad)
jns
cmp
add
or
or
pop
sahf
cmp
repnz
and
xor
cmp
cmp
add
add
or
or
jo
and
mov
mov
sahf
std
or
mov
pop
mov
dec
sahf
std
add
or
lock
cmp
shl
out
add
or
sbb
pop
test
cmp
or
add
or
cmp
pop
in
(bad)
jns
or
or
pusha
or
mov
jge
ins
or
xor
or
test
pop
addr16
leave
nop
or
or
mov
lock
fadd
cmp
ror
int3
add
out
cmp
in
dec
or
lock
loopne
mov
push
or
or
and
adc
rol
out
sbb
xor
out
mov
test
add
cmp
sbb
out
mov
mov
ficom
out
mov
daa
push
and
iret
jl
popf
pop
cwde
ror
movs
test
lahf
mov
out
fmul
sub
das
loopne
pop
inc
addr16
or
out
push
jmp
add
call
and
pop
sbb
ficom
call
adc
sar
call
call
mov
dec
jg
adc
call
jo
jno
xor
daa
jl
call
js
js
addr16
xchg
add
jne
call
lods
jg
mov
scas
aas
les
sbb
lock
jge
fmul
call
addr16
mov
mov
jp
mov
push
push
adc
jbe
adc
test
(bad)
xor
sub
and
dec
add
je
jmp
clc
mov
ror
sbb
sub
in
jmp
cmp
and
xchg
push
in
dec
inc
je
mov
xchg
daa
iret
sahf
daa
mov
rol
push
popf
and
mov
cmps
or
xchg
loopne
or
add
pop
into
out
pop
sbb
jmp
pop
mov
pextrw
popf
daa
cmp
pop
dec
fild
push
mov
pop
pusha
addr16
out
pop
ins
(bad)
pop
fisub
jmp
ficomp
(bad)
jbe
imul
jnp
mov
mov
pushf
ficomp
mov
enter
(bad)
mov
mov
dec
add
sar
int3
scas
cmp
fsub
or
in
(bad)
mov
pop
fistp
stos
jmp
mov
or
test
mov
add
add
adc
faddp
pop
popf
mov
sti
xchg
jp
sub
in
pop
sub
dec
jmp
jnp
mov
cmp
inc
stos
fimul
cmp
mov
jne
addr16
mov
iret
shl
loop
push
jmp
add
inc
ja
ins
adc
pop
jl
fstp
fwait
jmp
mov
shl
daa
jmp
xchg
test
inc
sbb
sbb
das
mov
push
out
push
rcr
lock
popf
add
mov
push
aaa
(bad)
test
inc
retf
fidiv
jmp
rcr
push
cmp
add
or
cld
mov
mov
aam
or
or
adc
(bad)
(bad)
stos
push
dec
xor
xchg
fbld
and
sub
fmulp
or
inc
inc
fisttp
cmp
or
inc
fsub
inc
jg
push
jne
in
pop
push
pop
aad
dec
jmp
paddsb
call
ret
call
loopne
in
mov
shl
paddusw
push
das
call
sub
lock
hlt
add
iret
xor
mov
sub
pop
cmp
inc
popf
pop
call
push
sti
movs
stos
in
clc
pop
dec
fiadd
pop
pop
in
add
inc
xchg
pop
fild
call
je
push
popf
stos
cmp
sub
pop
xor
test
adc
in
inc
dec
stos
xor
addps
(bad)
push
sbb
push
ror
mov
scas
inc
xor
jno
cwde
retf
push
in
rcl
sub
mov
ins
inc
xor
pop
(bad)
mov
jbe
lahf
aaa
hlt
cmps
pmaxsw
pop
jbe
sub
and
cmovno
mov
dec
loopne
mov
push
add
cmp
fisttp
mov
dec
sub
mov
xchg
addps
movups
out
add
ja
pop
jo
pmaxsw
icebp
lods
cmp
mov
fxch
test
xchg
rdpmc
add
mov
aaa
mov
iret
stos
cmp
out
lods
sub
mov
pop
mov
dec
or
rol
daa
sbb
neg
out
call
pop
out
cs
das
jmp
or
adc
mov
mov
mov
dec
jbe
inc
stos
push
sub
mov
or
fisttp
cs
and
sub
aas
add
fs
pop
int
sbb
pop
adc
mov
push
cmc
pop
scas
pop
movs
dec
shl
out
sbb
add
stc
(bad)
cmp
cmp
pop
jae
arpl
mov
add
imul
mov
cmps
js
arpl
lahf
pop
es
and
and
pop
fld
jae
lea
sahf
sub
pop
icebp
jae
sbb
imul
iret
push
and
jne
jae
add
addr16
lahf
pcmpgtd
mov
jmp
add
push
jbe
int
ins
push
popa
add
or
or
pop
jnp
sbb
sbb
cmp
(bad)
int
and
push
mov
addr16
inc
pop
ret
out
ret
ins
sub
jae
pop
ins
push
sti
push
sar
fild
jae
jecxz
mov
paddb
test
sub
add
sbb
aas
pop
aas
pop
sub
or
arpl
jmp
adc
cvtps2pi
inc
add
(bad)
mov
jg
loopne
add
jmp
jecxz
pop
jae
pop
sbb
pop
out
sub
lock
(bad)
mul
pop
jns
or
js
cmp
sbb
add
out
or
mov
push
das
pop
cmp
fadd
sub
mov
or
imul
out
mov
sub
loopne
add
jbe
leave
add
repz
inc
mov
cmp
push
xchg
jecxz
dec
cmps
fwait
push
rcr
gs
inc
jno
cmp
push
mov
dec
sub
aad
out
cmp
out
imul
outs
sub
push
ds
adc
out
pop
mov
adc
loope
jmp
out
out
jecxz
sbb
pop
inc
mov
jnp
pop
sub
add
or
das
pop
mov
js
and
aas
(bad)
cmps
mov
mov
sub
jmp
mov
cmp
and
imul
xor
js
icebp
js
push
out
pop
js
in
lock
retf
sti
popf
xchg
ja
popf
xchg
adc
push
xchg
or
aaa
sbb
cmps
ret
pop
ins
pop
or
add
dec
xor
das
pop
jne
lea
daa
pop
xchg
xchg
dec
inc
pop
inc
push
cmps
(bad)
popa
xor
jns
in
add
lock
das
jno
cdq
jecxz
add
inc
add
daa
mov
jnp
ins
push
inc
xor
dec
popf
add
or
inc
sbb
add
add
inc
mov
fdiv
xor
outs
fsub
loopne
fwait
jae
push
sub
xor
aaa
aaa
jecxz
mov
inc
push
adc
dec
js
jecxz
jecxz
fcomp
inc
and
push
mov
cmp
retf
jno
jp
inc
add
sbb
add
fild
pop
(bad)
sbb
aas
inc
add
rol
push
jge
scas
out
mov
mov
sbb
and
add
dec
(bad)
cmp
jbe
jnp
xchg
jbe
fwait
lds
arpl
xchg
cmp
xor
inc
xchg
mov
fisttp
arpl
ret
inc
pop
das
add
mov
icebp
mov
arpl
into
push
xchg
or
xchg
lock
aas
arpl
mov
popa
adc
xor
lds
dec
pop
push
push
mov
cmp
aaa
push
inc
test
mov
adc
push
jns
test
jnp
scas
dec
xor
fldenv
stos
mov
(bad)
sub
popa
adc
mov
push
add
test
or
inc
ins
jae
sbb
fbstp
and
or
dec
aas
and
or
add
dec
outs
popa
int
cmp
leave
inc
cli
sbb
mov
lahf
(bad)
and
add
mov
das
call
mov
ret
sbb
int
or
dec
(bad)
pop
test
imul
shr
in
push
mov
mov
xlat
data16
bswap
adc
or
add
bound
or
or
pop
or
cmp
or
sub
push
addr16
imul
dec
and
or
pusha
fsub
or
or
or
cmp
pop
ror
mov
lods
add
jb
out
ins
add
xchg
or
out
jg
leave
or
loope
add
or
mov
in
cmc
xor
add
add
or
ja
cmps
xchg
sti
sub
cmp
neg
arpl
fcomp
shl
cmp
mov
or
xor
stos
addr16
stos
mov
xchg
(bad)
data16
fisub
into
and
or
sbb
jo
shl
mov
ret
or
or
movnti
jp
sbb
sbb
or
pop
ror
int3
and
pop
pop
xor
inc
fisttp
jne
in
aam
or
sbb
ins
pop
push
cwde
mov
or
or
pop
or
or
inc
mov
push
cmp
jnp
pop
add
jne
or
sub
inc
pop
ds
ror
jo
sbb
out
jnp
mov
and
or
sbb
popa
add
data16
or
test
adc
jno
je
or
sub
xor
mov
movs
pop
lahf
pop
mov
xor
or
pop
cs
lea
fs
jne
(bad)
ror
mov
xor
sti
(bad)
xchg
add
sub
push
xor
das
cmp
test
dec
pop
imul
jnp
or
or
ret
and
sbb
test
in
adc
pop
(bad)
push
cmps
(bad)
imul
fild
jbe
push
out
das
int
or
adc
adc
das
or
fadd
inc
ret
add
popa
inc
(bad)
mov
jo
outs
add
loopne
adc
in
ins
loop
push
imul
or
call
sub
std
pcmpgtd
inc
in
shl
jmp
(bad)
cmp
cmp
aaa
fwait
int
jg
cmps
or
das
fwait
std
or
cmps
pop
sahf
loope
and
mov
sub
lsl
jnp
push
nop
int
sbb
gs
add
pop
arpl
(bad)
xchg
dec
das
pop
or
bound
out
jae
das
pop
data16
push
add
leave
sub
call
fbstp
jne
ja
push
add
sub
add
inc
push
pop
pop
xor
inc
sub
pushf
mov
mul
add
push
les
sahf
jmp
ud2
mov
lock
push
sub
mov
shl
add
and
jbe
scas
jmp
mov
ja
mov
addr16
mov
(bad)
mov
repz
sbb
jg
jae
add
and
je
add
bound
addr16
cdq
stos
loop
sar
xor
fimul
leave
std
sahf
test
aas
or
or
add
add
add
aas
jg
das
ds
mov
add
inc
pop
and
into
add
cwde
jle
pop
test
add
mov
mov
sub
rol
cmovs
adc
test
xor
adc
fld
sbb
add
mov
jns
add
or
pop
sub
jmp
sbb
scas
scas
sub
and
pop
or
ins
pop
inc
add
in
add
pop
cmp
test
and
int
(bad)
rol
push
or
adc
ins
add
or
in
and
adc
or
add
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
(bad)
(bad)
(bad)
jmp
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
(bad)
(bad)
jmp
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
and
add
test
clc
stos
ins
push
fcos
jg
dec
xchg
xor
sub
sub
stos
sbb
js
fild
rcl
pop
addr16
jbe
push
add
push
add
and
dec
out
inc
add
push
mov
push
std
inc
outs
js
imul
inc
adc
je
out
jmp
mov
gs
mov
in
inc
sub
add
mov
pushf
inc
push
je
push
adc
or
bound
add
mov
inc
add
sbb
dec
lea
mov
sar
add
add
sbb
jmp
in
push
or
pop
jae
cmp
pop
mov
inc
scas
inc
or
dec
fs
or
push
cmp
adc
das
int3
jns
pop
icebp
pop
add
std
adc
add
dec
fldpi
sbb
or
sahf
mov
or
std
rcl
inc
lock
std
loopne
mov
cmp
or
dec
hlt
sahf
cmp
or
add
jo
adc
mov
cmp
or
sahf
mov
or
push
call
or
and
mov
jmp
das
add
in
or
(bad)
jmp
push
dec
scas
jmp
retf
fdivr
or
sub
pop
or
push
cmp
sbb
cdq
pop
or
arpl
test
fdivr
mov
add
or
or
sbb
test
or
add
jnp
add
imul
test
add
mov
pop
dec
push
mov
cmp
and
(bad)
lock
loope
xchg
or
or
inc
js
xchg
or
push
in
or
add
cmps
loop
jp
mov
add
pop
mov
add
adc
sub
fimul
mov
in
scas
fwait
add
or
ja
xchg
or
dec
xchg
sub
mov
mov
das
retf
loopne
pop
pop
sti
outs
rol
or
pop
and
repz
add
inc
add
jae
ja
cdq
xor
pop
int
mov
adc
xor
inc
icebp
adc
adc
sub
test
sbb
jb
push
cvtps2pi
leave
mov
pop
mov
add
mov
mov
jno
daa
inc
push
jmp
xor
dec
aad
and
add
pop
icebp
jecxz
test
add
addr16
cwde
bound
or
test
outs
and
and
sbb
aaa
push
push
out
cmp
leave
icebp
xchg
jb
nop
or
add
jae
xchg
cmp
(bad)
mov
pop
pop
test
pop
scas
mov
aad
or
mov
xor
popa
push
and
adc
push
adc
mov
add
add
or
add
xchg
(bad)
adc
cwde
dec
cmp
pop
pop
scas
and
add
dec
lods
(bad)
mov
xchg
iret
sbb
aas
add
sbb
push
or
xchg
jb
jo
ror
aad
push
popa
mov
xor
and
cmp
cdq
jno
loopne
or
ret
test
inc
int
sub
popa
or
jne
xchg
addr16
popa
out
xchg
inc
out
(bad)
pop
mov
addr16
fstp
adc
add
pop
jb
ja
jecxz
ds
mov
stos
outs
xchg
pop
pusha
mov
(bad)
imul
add
mov
mov
pop
out
leave
xor
jne
cmc
push
mov
(bad)
rcr
pop
(bad)
or
push
shr
jecxz
jae
inc
mov
and
iret
adc
retf
inc
ret
ret
mov
popf
or
sbb
pop
push
xchg
xchg
cmp
cmp
cdq
inc
sti
mov
xor
enter
aam
sahf
add
popa
and
call
imul
cmp
jnp
pop
icebp
sbb
aas
scas
push
push
es
pop
mov
cdq
daa
out
cmp
mov
int
clc
jp
dec
push
inc
jbe
push
retf
imul
xor
mov
xor
and
push
jb
fadd
xor
aas
(bad)
fistp
inc
in
or
cmp
mov
cmps
or
dec
popa
mov
add
aad
xor
inc
push
ror
xchg
fwait
add
lea
test
mov
xor
cmp
jae
pop
jnp
xlat
jmp
pop
cmp
sub
std
add
add
(bad)
push
or
pop
dec
inc
jg
push
add
inc
add
cmp
mov
and
sahf
(bad)
rcl
or
and
in
or
cld
or
or
scas
sbb
ret
add
mov
add
loope
xchg
rol
movs
mov
aad
or
dec
cmps
add
or
add
add
or
or
cmp
sbb
pop
fs
sbb
sub
xchg
add
ror
cmp
and
pop
lock
mov
int3
inc
jmp
mov
add
add
adc
or
jb
push
xchg
jnp
les
adc
call
js
(bad)
retf
inc
mov
rol
femms
add
cmp
test
add
xchg
inc
(bad)
jg
inc
fadd
ror
xor
cmp
xor
adc
js
daa
pop
xchg
imul
imul
das
pop
or
sub
sub
mov
add
arpl
or
js
(bad)
call
or
adc
add
or
adc
or
mov
jmp
aas
xchg
sub
movs
jg
test
adc
jmp
mov
or
inc
div
inc
or
jmp
cli
cwde
sbb
xchg
std
push
add
loopne
add
jo
fstp
inc
int
push
or
add
fistp
bound
xchg
add
dec
movs
xchg
movs
mov
out
push
ins
or
add
inc
andps
std
push
or
bound
retf
or
adc
or
imul
(bad)
stc
cmps
imul
or
mov
or
add
add
pop
xor
dec
shl
inc
inc
dec
adc
push
pop
pop
add
sbb
mov
or
nop
add
add
jmp
add
add
sub
cmps
imul
popf
(bad)
pop
aas
pop
xchg
or
jbe
fstp
add
pop
mov
mov
pop
mov
popf
retf
pop
pop
retf
pop
fmul
in
into
in
mov
sbb
or
pop
arpl
inc
sbb
fistp
imul
sbb
outs
sbb
imul
scas
sbb
aam
or
clc
add
push
dec
sbb
sbb
call
sbb
or
sbb
jne
cmp
inc
sbb
push
cmc
inc
jne
adc
div
mov
arpl
ins
add
jo
jae
lahf
fidiv
sti
pop
pop
jae
or
imul
or
pop
popaw
jae
sbb
jbe
arpl
or
add
arpl
pop
gs
bound
jo
jb
mov
sbb
push
outs
test
popa
jmp
imul
mov
outs
gs
(bad)
mov
ins
gs
add
add
cmp
add
cmp
push
cmp
pop
add
outs
jo
jb
sar
fwait
into
add
or
add
xor
cmp
sbb
ds
sub
add
cmp
inc
in
repz
es
jmp
jl
sub
sub
sub
call
or
push
cmps
or
jbe
hlt
loopne
pusha
ja
pusha
jbe
or
daa
add
cld
ins
and
outs
pushw
add
(bad)
mov
je
arpl
addr16
jb
test
sti
int
cld
outs
or
sbb
adc
adc
fwait
dec
adc
imul
add
add
inc
and
outs
sbb
adc
fnsave
gs
or
lahf
popa
jb
aas
pop
mov
cvttps2pi
imul
pop
movs
xchg
and
add
mov
lock
jbe
and
jo
popa
arpl
out
pop
push
pop
and
jo
pusha
gs
add
cmp
jecxz
mov
and
cmp
lock
outs
jo
sub
cmp
sbb
outs
xor
inc
dec
add
push
push
mov
mov
mov
push
mov
js
pop
push
or
pusha
outs
ins
outs
imul
inc
cwde
mov
pusha
or
mov
sbb
sbb
add
cmp
inc
test
dec
or
or
push
loop
jg
sub
popa
ins
out
imul
mov
and
xchg
gs
je
into
cdq
stos
xchg
mov
sub
sbb
adc
or
dec
or
test
call
mov
fild
mov
inc
and
arpl
imul
sbb
ins
popa
jae
sbb
sub
sbb
jb
jns
sub
add
cmps
imul
sbb
xor
add
xor
push
dec
inc
iret
inc
inc
add
xor
dec
dec
mov
fisttp
and
adc
pop
or
and
adc
sbb
or
or
out
adc
or
in
or
and
jo
and
jnp
add
cmc
mov
and
or
adc
inc
loopne
pop
or
cmp
jecxz
pushf
cmp
je
cmps
sysenter
(bad)
or
loopne
rcl
xchg
inc
pop
loope
add
inc
or
add
push
dec
das
pushf
sbb
and
frstor
loopne
and
xchg
pop
out
and
(bad)
xchg
or
cld
adc
or
and
sub
into
mov
mov
add
je
sub
pop
les
jae
push
aas
fstp
push
mov
aaa
add
or
sti
xlat
cmp
or
nop
inc
xchg
daa
dec
sahf
mov
sbb
repnz
or
and
aaa
xchg
daa
dec
sahf
dec
push
push
repnz
mov
lods
dec
shr
dec
sahf
cmp
cmp
dec
clc
inc
and
repnz
or
sbb
sub
inc
cmp
dec
sahf
cmp
dec
fs
test
in
xchg
cmp
or
adc
mov
cli
or
or
mov
movs
or
push
or
sahf
lock
js
pop
test
sahf
lock
adc
movs
push
out
pop
push
or
les
pop
pop
aas
mov
add
clc
loopne
sbb
xlat
and
ret
mov
pop
popa
mov
pop
es
adc
cmp
es
(bad)
xor
push
cmp
loopne
ret
(bad)
es
jmp
push
jl
pop
add
es
out
and
cmp
es
addr16
addr16
jmp
call
mov
sbb
daa
or
clc
xor
daa
sub
or
mov
xchg
fisttp
jecxz
icebp
or
ins
mov
pop
jp
daa
push
xor
mov
or
mov
add
pop
and
mov
aam
iret
daa
rcr
daa
rcl
or
or
hlt
push
shl
fisttp
rcl
sub
ja
sub
inc
lock
pop
or
sub
add
adc
or
aas
adc
out
sti
or
ror
imul
sbb
je
clc
or
loopne
cli
or
or
cld
sbb
sub
sar
scas
or
sub
inc
lock
and
or
into
add
pop
fs
inc
lock
or
sub
inc
(bad)
ins
imul
outs
imul
push
imul
and
arpl
call
js
and
and
mov
pop
pop
fs
and
xchg
adc
mov
inc
inc
bound
jns
imul
xchg
mov
inc
jg
ins
jo
pop
outs
jbe
and
mov
jne
daa
outs
jo
lea
outs
jae
adc
outs
dec
xor
pop
add
mov
xor
loopne
adc
popa
imul
cwde
outs
outs
jne
push
ret
push
ret
cwde
sub
je
jns
popa
addr16
imul
test
popf
aam
dec
imul
aaa
mov
add
out
pop
add
jae
and
pop
jo
sub
fs
outs
xor
xchg
or
imul
ret
push
(bad)
or
push
fdivr
jns
push
fld
add
popf
stos
xchg
outs
or
cs
jo
cmp
popa
fs
das
jns
ret
dec
xor
jb
jae
add
daa
inc
jb
xchg
retf
adc
int
add
sti
sub
imul
pop
jnp
ret
jno
mov
add
outs
pop
add
add
je
jne
jb
popa
arpl
aas
test
stc
cmps
add
adc
cmp
mov
imul
popa
fcom
pop
sub
cmp
jae
add
mov
gs
and
or
cmps
pop
sub
ret
fwait
mov
mov
outs
ja
inc
int3
push
inc
add
popa
xor
pop
mov
pop
inc
xchg
jae
pshufw
xor
outs
ins
js
add
outs
nop
outs
(bad)
in
(bad)
lahf
lods
popa
pop
jae
arpl
xchg
mov
cli
ret
push
add
push
inc
cld
mov
imul
adc
push
pop
pop
jb
ja
jne
fs
bound
push
sar
loope
push
dec
adc
add
imul
cdq
movd
inc
mov
inc
jae
rcl
add
cld
pop
add
xchg
call
movaps
and
rcr
inc
push
ret
mov
mov
bound
xchg
mov
jo
mov
and
call
addr16
inc
inc
pop
and
adc
ins
gs
fwait
sbb
aas
cmc
cmp
imul
sub
inc
repnz
ret
sar
mov
and
out
add
imul
sar
ins
outs
jbe
imul
mov
and
outs
popa
addr16
jo
jo
imul
jb
ins
xor
inc
loop
sbb
gs
and
mov
add
and
inc
(bad)
pusha
mov
push
push
ss
pop
mov
xchg
inc
adc
(bad)
adc
imul
aas
stos
out
icebp
outs
imul
test
test
out
adc
cmp
retf
aad
sbb
jl
popa
ins
mov
sbb
sbb
(bad)
sar
add
fwait
clc
xor
pop
pcmpeqb
retf
mov
pop
ror
jno
dec
or
adc
inc
mov
ss
pop
xchg
imul
pop
je
sbb
and
cmp
sbb
add
pop
mov
mov
test
rol
out
ins
cmp
jae
cmp
sahf
or
xor
addr16
fwait
aaa
popa
fs
imul
rcr
ret
(bad)
jne
je
jns
push
ror
popa
outs
addr16
stos
and
je
jb
arpl
mov
add
je
js
xchg
fcomp
dec
ja
fadd
pop
retf
and
xchg
leave
dec
daa
xchg
pop
movq
xor
or
jae
xor
mov
push
add
jne
lods
dec
shl
fild
adc
(bad)
pop
fild
or
inc
imul
jo
sti
add
xor
movs
pop
pop
inc
pop
inc
iret
sbb
stos
add
lock
out
cwde
sti
sub
or
repz
bndstx
arpl
ds
das
add
xor
nop
add
xor
and
cs
call
cmps
mov
pushf
add
rcr
and
pop
and
cmc
ja
daa
fstp
pop
mov
add
xchg
pop
sldt
jo
call
push
scas
mov
stc
fld
bound
add
or
sub
add
jge
outs
loopne
in
or
add
add
or
(bad)
fadd
loop
fistp
add
into
add
add
sub
add
pop
popa
pop
sub
lock
pop
pop
pop
push
add
adc
cmp
ja
(bad)
dec
popf
cmp
sbb
xchg
sbb
adc
xor
mov
jle
add
jge
test
push
sahf
in
retf
add
lahf
xor
fucomip
retf
lahf
pop
pop
dec
add
daa
(bad)
aas
pop
add
add
add
push
rol
add
add
push
movs
add
xor
jg
add
push
mov
add
dec
scas
add
push
or
neg
inc
inc
add
push
(bad)
add
add
jbe
pop
fiadd
repz
leave
ja
push
add
loope
fist
pusha
add
adc
xor
xor
add
lock
sub
jbe
std
pusha
push
add
pusha
shl
pusha
pushf
or
add
sbb
mov
loope
add
or
jle
mov
add
jnp
add
jp
add
add
xor
mov
outs
clc
add
jg
out
call
jbe
mov
std
add
ja
test
add
cld
(bad)
popf
and
and
or
or
or
or
and
pop
and
push
inc
sub
sbb
pop
push
adc
adc
adc
adc
str
adc
dec
dec
inc
cs
add
in
inc
add
pop
or
add
sbb
add
sbb
sbb
cmp
xor
xor
add
and
add
mov
add
push
adc
nop
inc
cmp
loope
(bad)
jg
cs
sub
cmp
dec
mov
fistp
inc
add
loop
push
inc
sub
test
or
xchg
popa
jne
xchg
in
bound
dec
xchg
sbb
add
jo
movs
or
xchg
or
aaa
outs
mov
ins
add
mov
dec
push
loope
jg
leave
inc
test
pop
pop
adc
pop
(bad)
jo
fucomip
inc
pop
mov
pusha
pop
mov
dec
mov
popa
outs
je
cs
gs
jo
xor
lock
inc
scas
movzx
or
and
mov
ja
jo
mov
mov
push
jne
sbb
outs
inc
xor
shl
and
je
dec
add
push
imul
test
jae
je
outs
cmp
and
data16
sbb
test
(bad)
push
test
ret
cmp
adc
jbe
cmp
push
arpl
jo
fist
jae
sub
stos
daa
and
cmc
out
sub
je
dec
jl
or
dec
dec
pop
jne
fadd
push
pop
retf
pop
inc
mov
sbb
fwait
pop
push
push
pop
pusha
xor
or
xor
add
mov
adc
xor
js
sub
mov
adc
popa
add
mov
(bad)
call
push
gs
shl
push
les
outs
or
xor
xor
arpl
xchg
adc
add
or
or
inc
add
cdq
sti
add
add
push
add
clc
fstp
add
or
loopne
call
or
add
and
add
or
add
stos
jae
pop
and
cmp
fistp
and
(bad)
(bad)
(bad)
call
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
(bad)
(bad)
(bad)
inc
ror
fxtract
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
(bad)
(bad)
(bad)
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
(bad)
(bad)
(bad)
inc
(bad)
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
(bad)
(bad)
(bad)
call
cmps
popa
ja
mov
out
repz
gs
fisubr
lahf
(bad)
(bad)
(bad)
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
call
jno
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
(bad)
(bad)
(bad)
inc
cmp
mov
(bad)
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
(bad)
(bad)
jmp
xchg
push
fild
mov
lea
fnstcw
mov
dec
hlt
(bad)
(bad)
(bad)
(bad)
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
ja
pop
mov
(bad)
(bad)
jmp
mov
cwde
xlat
ficom
test
loope
xchg
retf
cli
cmc
pop
xlat
bound
out
(bad)
(bad)
(bad)
jns
fidiv
dec
pop
pop
adc
push
sbb
adc
and
inc
and
out
(bad)
(bad)
(bad)
jmp
jl
or
push
fs
dec
mov
lahf
mov
and
cmps
xor
mov
lods
out
sar
(bad)
(bad)
(bad)
aas
mov
adc
ins
mov
xchg
adc
jle
push
jns
das
mov
(bad)
(bad)
(bad)
jmp
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
(bad)
std
(bad)
jl
rcl
cmp
mov
js
mov
test
cwde
cmp
test
cwde
and
cli
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
(bad)
(bad)
(bad)
inc
shl
add
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
pop
push
(bad)
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
(bad)
inc
mov
push
mov
push
(bad)
push
hlt
out
les
fdecstp
jmp
(bad)
(bad)
(bad)
(bad)
call
imul
pushf
sub
sub
lods
dec
jo
outs
sbb
sub
loope
fisub
pop
(bad)
(bad)
(bad)
inc
jg
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
(bad)
(bad)
(bad)
(bad)
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
pop
xor
jae
xor
mov
jo
cmc
shr
add
mov
arpl
cli
retf
(bad)
(bad)
(bad)
(bad)
jmp
ror
mov
stc
lea
scas
or
lea
mov
test
and
pop
ins
(bad)
(bad)
(bad)
(bad)
cmp
les
adc
sub
dec
add
sar
push
or
cmp
(bad)
jmp
cwde
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
(bad)
(bad)
(bad)
cli
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
(bad)
jmp
outs
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
xchg
movs
dec
(bad)
(bad)
(bad)
(bad)
mov
movs
daa
sub
repnz
fdivrp
shl
out
mov
sar
(bad)
(bad)
jmp
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
mov
lds
or
jbe
dec
div
lahf
adc
jb
and
(bad)
inc
add
test
pop
mov
or
jmp
retf
push
mov
lea
(bad)
(bad)
inc
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
push
xchg
fmul
or
(bad)
(bad)
cmp
mov
in
push
ja
pop
sub
das
sbb
fild
push
mov
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
dec
jp
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
(bad)
(bad)
jmp
add
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
(bad)
(bad)
(bad)
(bad)
fld
adc
nop
in
and
(bad)
xor
daa
leave
pop
sub
and
mov
and
(bad)
(bad)
call
mov
sub
fidivr
sub
ds
sbb
sub
call
jmp
lea
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
(bad)
(bad)
inc
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
(bad)
std
retf
mov
mov
ins
fdivrp
cmp
nop
cli
outs
ins
xchg
push
push
xor
(bad)
(bad)
push
jg
bound
adc
sub
shr
aam
cmps
gs
fs
(bad)
(bad)
dec
retf
xlat
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
retf
or
xchg
mov
dec
(bad)
(bad)
(bad)
jmp
call
test
shl
inc
xor
inc
jae
cmovo
out
inc
(bad)
(bad)
(bad)
call
push
xor
mov
mov
mov
clc
push
mov
adc
push
(bad)
(bad)
(bad)
call
jle
push
call
push
and
in
pop
mov
movs
pop
xor
jmp
add
sub
outs
pop
(bad)
(bad)
(bad)
jmp
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
inc
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
(bad)
(bad)
(bad)
mov
mov
sar
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
push
pop
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
idiv
(bad)
(bad)
dec
dec
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
(bad)
(bad)
(bad)
jmp
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
sar
(bad)
(bad)
call
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
mov
adc
test
dec
retf
lahf
lds
adc
leave
je
inc
int3
inc
ins
xchg
(bad)
(bad)
(bad)
call
rol
iret
sub
xchg
scas
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
(bad)
(bad)
(bad)
push
jmp
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
dec
xor
xor
dec
mov
or
(bad)
in
popf
or
(bad)
(bad)
inc
and
mov
push
pop
and
push
adc
fadd
arpl
(bad)
(bad)
cmp
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
(bad)
(bad)
(bad)
call
lods
outs
lods
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
(bad)
(bad)
jmp
dec
mov
mov
pop
dec
adc
mov
mov
fidivr
jg
(bad)
ficomp
mov
inc
gs
stos
out
scas
mov
push
xchg
(bad)
(bad)
(bad)
jmp
xor
fidiv
fcomp
and
out
sub
fs
outs
add
(bad)
(bad)
(bad)
call
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
(bad)
(bad)
jnp
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
iret
sbb
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
(bad)
call
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
ja
adc
(bad)
(bad)
jmp
jmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outs
(bad)
(bad)
(bad)
dec
xchg
or
(bad)
jge
inc
aad
sar
dec
rcr
(bad)
lds
xchg
lahf
mov
inc
(bad)
(bad)
(bad)
(bad)
std
mov
xchg
(bad)
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
(bad)
(bad)
(bad)
push
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
(bad)
(bad)
inc
shl
cmp
das
retf
jnp
dec
ja
mov
push
add
dec
mov
(bad)
(bad)
(bad)
jmp
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
(bad)
(bad)
(bad)
fild
xchg
js
sub
pop
outs
xchg
add
cmp
call
pop
xchg
sub
(bad)
(bad)
inc
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
push
jno
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
(bad)
(bad)
(bad)
call
scas
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
(bad)
(bad)
(bad)
(bad)
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
jmp
(bad)
(bad)
(bad)
cmp
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
dec
pop
or
xchg
movs
loope
mov
das
sub
dec
dec
cmc
scas
repz
(bad)
(bad)
jmp
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
(bad)
(bad)
(bad)
call
dec
xchg
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
(bad)
out
mov
pop
push
mov
(bad)
(bad)
dec
ret
mov
fld
push
jmp
xor
(bad)
and
push
mov
(bad)
mov
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fcos
(bad)
(bad)
call
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
(bad)
(bad)
(bad)
jmp
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
(bad)
(bad)
jmp
stc
xor
xchg
inc
fidiv
call
mov
lock
imul
call
test
(bad)
cs
mov
call
mov
loope
into
cs
(bad)
(bad)
push
test
inc
out
add
add
pop
std
pop
jmp
icebp
and
(bad)
(bad)
(bad)
inc
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
(bad)
(bad)
(bad)
call
loope
push
adc
cmp
adc
mov
jle
cmp
(bad)
(bad)
jmp
and
mov
mov
jno
ds
outs
sub
mov
(bad)
(bad)
(bad)
inc
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
mov
jp
or
xchg
popa
mov
fdivrp
ja
xor
cdq
or
(bad)
(bad)
(bad)
mov
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
(bad)
(bad)
(bad)
dec
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
(bad)
(bad)
(bad)
(bad)
ficomp
fcmovbe
jge
fucom
jmp
aam
push
adc
(bad)
adc
imul
mov
(bad)
(bad)
(bad)
(bad)
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
(bad)
(bad)
push
add
ror
aam
ror
mov
xor
mov
ins
fstp
stc
(bad)
(bad)
(bad)
inc
fsubr
fistp
(bad)
or
pop
fnstenv
lods
push
fiadd
cmp
xlat
push
cmp
call
and
and
mov
movs
movaps
mov
or
or
mov
or
(bad)
(bad)
(bad)
jmp
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
(bad)
(bad)
jmp
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
(bad)
(bad)
(bad)
call
jg
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
(bad)
(bad)
(bad)
dec
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
(bad)
(bad)
(bad)
(bad)
jl
fstp
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
(bad)
(bad)
jmp
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
rol
jae
add
pop
fisttp
jno
daa
add
mov
or
(bad)
(bad)
(bad)
inc
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
(bad)
(bad)
push
mov
xor
mov
mov
add
sar
(bad)
(bad)
call
popf
shl
add
es
jecxz
or
xchg
cmp
push
(bad)
(bad)
(bad)
jmp
xchg
or
popf
or
scas
daa
jge
sahf
mov
setae
mov
push
(bad)
(bad)
(bad)
(bad)
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
(bad)
(bad)
dec
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
jle
fadd
les
repnz
(bad)
(bad)
call
mov
push
addr16
mov
fisttp
ss
fmul
sbb
dec
test
(bad)
(bad)
(bad)
jmp
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
push
push
int3
or
xchg
mov
add
mov
lds
or
sub
(bad)
(bad)
(bad)
inc
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
(bad)
(bad)
(bad)
dec
pushf
or
test
jb
test
add
xchg
mov
jp
jnp
sub
(bad)
(bad)
(bad)
cmp
aad
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
outs
cmp
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
(bad)
(bad)
call
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
(bad)
(bad)
(bad)
inc
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
push
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
les
mov
sub
pop
inc
(bad)
call
or
mov
sub
(bad)
(bad)
(bad)
call
xor
bound
fs
lds
pop
cmps
xchg
xchg
(bad)
enter
sar
(bad)
(bad)
inc
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
(bad)
(bad)
(bad)
(bad)
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
(bad)
inc
test
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
(bad)
(bad)
call
inc
and
call
shl
ret
fiadd
gs
pop
scas
stos
inc
(bad)
(bad)
(bad)
inc
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
(bad)
(bad)
(bad)
call
mov
jo
jno
imul
sub
mul
sbb
jne
pop
mov
sti
push
(bad)
(bad)
(bad)
inc
jns
mov
cmp
jns
push
dec
mov
pop
fisubr
cmp
jns
add
jmp
inc
ret
xchg
push
sbb
xchg
adc
mov
cmp
lds
(bad)
mov
cmps
(bad)
adc
add
inc
xlat
xor
cli
bound
mov
(bad)
(bad)
(bad)
jmp
aas
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
(bad)
(bad)
jns
sbb
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
out
out
retf
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
(bad)
(bad)
(bad)
aas
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
(bad)
(bad)
jmp
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
sbb
call
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
(bad)
(bad)
(bad)
inc
add
ins
jo
fdiv
adc
out
movs
add
test
mov
push
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
sbb
fnstsw
(bad)
(bad)
(bad)
inc
bound
(bad)
lds
(bad)
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
(bad)
call
imul
jns
shl
lods
clc
pop
sbb
inc
sub
data16
loope
(bad)
(bad)
(bad)
inc
pop
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
(bad)
ficomp
cmp
call
imul
or
stos
test
jg
sbb
mov
(bad)
(bad)
(bad)
inc
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
sar
(bad)
(bad)
jmp
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
(bad)
(bad)
(bad)
cmp
adc
push
test
cwde
inc
jle
test
ror
cmp
(bad)
(bad)
jmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
(bad)
(bad)
(bad)
(bad)
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
(bad)
(bad)
(bad)
jmp
lods
ins
dec
xchg
outs
jne
mov
call
or
push
aas
sub
(bad)
(bad)
(bad)
(bad)
mov
sbb
mov
daa
repnz
mov
mov
(bad)
out
and
loope
or
cmps
sar
mov
jle
shl
imul
inc
cmp
ja
fsub
mov
sar
(bad)
jle
hlt
out
push
or
test
mov
adc
xor
call
push
add
pop
pop
or
jmp
lea
(bad)
(bad)
inc
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
(bad)
dec
pop
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
(bad)
call
imul
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
(bad)
call
jp
dec
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
(bad)
(bad)
(bad)
(bad)
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
(bad)
(bad)
push
adc
frstor
in
and
out
xor
es
dec
dec
and
cdq
and
(bad)
(bad)
jmp
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
(bad)
jmp
aaa
mov
shl
div
pop
scas
jb
xor
jbe
dec
sub
jb
(bad)
(bad)
push
fwait
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
(bad)
jnp
retf
mov
inc
xchg
cli
fisubr
nop
jmp
push
in
pop
push
(bad)
(bad)
jmp
cmp
arpl
aas
popa
sub
push
cmps
xlat
aam
fs
mov
addr16
lea
retf
and
mov
dec
dec
xchg
jne
dec
fisub
dec
sbb
retf
dec
pop
mov
(bad)
(bad)
(bad)
dec
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
(bad)
(bad)
(bad)
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
adc
(bad)
(bad)
(bad)
call
jle
pop
loop
call
pop
in
xchg
xchg
pop
sub
add
inc
pop
(bad)
(bad)
(bad)
call
das
ins
loope
sbb
loop
iret
out
jecxz
movs
(bad)
cmp
pop
out
fldcw
mov
(bad)
jmp
jp
add
out
in
paddsb
hlt
popa
call
in
mov
jmp
ss
(bad)
(bad)
(bad)
jmp
lock
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
(bad)
(bad)
(bad)
clc
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
(bad)
(bad)
(bad)
push
dec
dec
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
(bad)
(bad)
(bad)
(bad)
fdiv
dec
in
imul
test
fdiv
shl
add
mov
jo
(bad)
(bad)
(bad)
call
and
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
rcl
xchg
retf
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
(bad)
(bad)
(bad)
dec
add
inc
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
(bad)
(bad)
call
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
ja
adc
(bad)
(bad)
call
mov
pop
mov
mov
sbb
mov
cmp
(bad)
dec
call
sbb
out
(bad)
rol
cmps
arpl
(bad)
(bad)
inc
loop
mov
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
(bad)
jmp
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
(bad)
(bad)
jmp
les
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
(bad)
(bad)
push
xlat
and
adc
test
xchg
pushf
xor
loopne
mov
(bad)
aas
cmc
mov
mov
or
mov
mov
out
(bad)
bound
(bad)
(bad)
(bad)
push
and
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
(bad)
(bad)
(bad)
fucom
fbstp
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
(bad)
(bad)
(bad)
jmp
int
outs
es
lods
jg
sub
movs
mov
xchg
rcr
mov
(bad)
inc
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
in
pop
(bad)
(bad)
(bad)
dec
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
ja
sub
jmp
(bad)
(bad)
(bad)
jmp
inc
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
jg
outs
test
or
(bad)
(bad)
call
ins
cld
rcr
lahf
ror
and
lds
sub
mov
inc
and
(bad)
(bad)
(bad)
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
(bad)
(bad)
dec
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
loopne
retf
das
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwde
cmc
cld
sar
(bad)
(bad)
(bad)
call
push
fidiv
sbb
mov
inc
sub
mov
cmp
(bad)
(bad)
(bad)
(bad)
jg
sar
xchg
outs
pop
hlt
cmp
test
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
(bad)
(bad)
(bad)
push
push
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
(bad)
(bad)
(bad)
stc
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
(bad)
(bad)
(bad)
jmp
imul
cwde
and
push
aaa
out
push
add
inc
clc
mov
jmp
js
(bad)
(bad)
inc
loopne
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
(bad)
in
sbb
bound
and
inc
(bad)
(bad)
(bad)
dec
enter
jo
mov
nop
push
stc
mov
in
pop
cmp
cmp
xor
(bad)
(bad)
jmp
or
cmp
movs
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
call
and
leave
dec
ror
sar
add
push
movs
not
cmp
(bad)
(bad)
(bad)
jns
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
aaa
push
mov
xor
xor
(bad)
and
stc
popa
call
mov
(bad)
(bad)
(bad)
fsubr
or
push
sbb
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
test
sbb
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
inc
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
(bad)
(bad)
(bad)
push
es
jmp
(bad)
mov
or
mov
lock
bound
fwait
push
mov
(bad)
(bad)
(bad)
fist
cs
push
es
mov
cld
mov
adc
push
ja
ss
adc
jmp
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
(bad)
(bad)
(bad)
inc
into
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
(bad)
(bad)
dec
repz
in
test
adc
ja
mov
ret
add
cmp
cdq
(bad)
(bad)
(bad)
jmp
mov
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
(bad)
(bad)
call
sbb
ds
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
lods
stos
sti
(bad)
jp
mov
push
icebp
add
imul
ja
fmul
call
push
add
sub
gs
dec
popa
jb
add
lahf
inc
(bad)
outs
mov
pop
jb
data16
add
sbb
adc
imul
outs
je
ins
mov
add
or
in
gs
imul
push
ins
and
mov
and
or
or
scas
xor
add
sbb
adc
adc
sbb
and
xchg
push
pop
sbb
sbb
sbb
scas
mov
inc
cmp
test
jno
or
dec
fmul
add
cs
jbe
add
sbb
xchg
mov
add
add
adc
adc
adc
test
or
mov
popa
and
mov
in
mov
sbb
xor
fs
push
and
add
int3
push
inc
add
out
int3
cmp
add
add
push
out
pop
add
add
add
pop
push
out
sbb
dec
inc
push
cmp
fadd
pop
add
pop
add
cdq
mov
add
sahf
cmp
xchg
mov
cs
neg
dec
lahf
fwait
jnp
or
or
mov
xor
rol
dec
int3
sub
ins
dec
shl
fdivr
dec
shl
jl
add
inc
ret
bound
xor
loop
xchg
push
shl
xor
shl
jb
or
dec
retf
push
shl
fidivr
add
shl
jp
call
add
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
movs
gs
xchg
call
mov
cmc
imul
imul
imul
sti
outs
adc
or
adc
or
xchg
pop
xchg
push
push
imul
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
push
gs
pop
daa
shl
cmps
cmps
addr16
shl
xchg
xchg
xor
shl
push
xlat
xlat
aaa
shl
ja
dec
shl
(bad)
(bad)
xor
shl
dec
iret
iret
das
shl
outs
outs
dec
shl
lahf
lahf
xor
shl
pop
(bad)
aas
shl
jg
xor
aaa
dec
(bad)
inc
add
add
and
xor
rcl
push
xor
dec
shl
pop
cmp
inc
and
shl
je
shl
inc
ret
and
arpl
jns
add
fcomp
lds
adc
cmps
imul
cmps
imul
cmps
imul
cmps
imul
imul
push
and
dec
add
or
push
add
and
add
stos
lahf
xor
rcl
stos
pop
nop
mov
push
in
jnp
adc
add
adc
jo
add
out
add
fidivr
sbb
outs
imul
mul
pop
pop
push
push
dec
xchg
jne
dec
add
add
or
inc
mov
inc
and
ror
add
lods
or
xchg
hlt
sub
push
add
(bad)
xchg
inc
(bad)
add
call
rcl
or
cmp
or
mov
push
or
xchg
add
or
lea
or
or
add
sbb
stc
popa
xchg
(bad)
popa
int
inc
push
add
test
(bad)
add
add
push
xchg
adc
sub
ins
add
jmp
je
cs
jo
pop
ins
add
push
add
add
push
add
outs
gs
arpl
imul
jnp
mov
adc
dec
bound
cmp
bound
and
inc
mov
fnstenv
pop
rcr
pop
outs
data16
scas
xchg
push
stos
imul
jp
outs
addr16
add
and
mov
and
add
inc
pop
addr16
mov
add
push
add
add
dec
add
adc
test
test
and
inc
jmp
and
mov
push
inc
sbb
sti
pop
cmp
nop
add
movd
add
cwde
and
inc
add
push
lds
mov
je
pop
push
sbb
add
dec
gs
(bad)
call
xchg
iret
adc
dec
cs
gs
ins
sub
inc
shr
jmp
mov
in
push
jne
or
sbb
fild
inc
out
add
add
outs
add
xchg
xor
mov
nop
add
add
ins
or
xor
adc
xor
repnz
movs
and
and
popaw
ins
push
sar
jb
je
jne
ins
adc
std
lods
and
add
dec
addr16
and
sbb
cmp
aaa
mov
imul
sbb
mov
adc
jmp
shl
sub
xchg
or
adc
imul
gs
loopne
inc
lds
inc
gs
and
outs
fs
jmp
push
add
add
pop
push
and
cmp
add
imul
ins
add
inc
xlat
push
gs
add
jo
jmp
imul
pusha
sbb
or
pop
add
cmps
ins
sbb
stos
or
sbb
lods
jne
inc
mov
pop
adc
add
enter
jne
std
pop
push
sbb
dec
mov
ror
or
retf
cmp
push
fcom
inc
cmp
dec
and
adc
mov
rol
addr16
cmp
cdq
(bad)
dec
cmp
add
xchg
push
je
jnp
cwde
jmp
jmp
add
push
ds
inc
shl
adc
and
jmp
fadd
mov
retf
jbe
mov
dec
mov
inc
int3
in
pop
ret
outs
mov
jo
pop
inc
leave
cmp
push
jno
jae
ins
inc
sbb
inc
add
fs
jbe
call
pop
add
add
sbb
push
inc
nop
cmp
mov
push
mov
add
xor
jmp
add
cmp
adc
add
add
ins
lods
iret
adc
ins
pop
rcl
daa
mov
sub
test
imul
sub
mov
imul
xlat
adc
and
xchg
aaa
add
stos
fisub
add
ror
jne
cmp
das
adc
ins
xchg
sub
adc
pushf
or
sub
push
inc
out
xchg
mov
js
ins
jae
adc
ret
imul
adc
out
xor
ret
icebp
ja
jnp
into
jle
xchg
lea
xor
addr16
add
fwait
and
movs
ja
add
jae
jmp
cli
jp
lock
add
or
adc
mov
gs
nop
sub
sar
fwait
adc
ret
and
js
ret
imul
mov
xor
mov
arpl
adc
(bad)
mov
test
cmp
aas
adc
adc
add
xor
js
daa
add
call
fwait
dec
jae
outs
ja
xor
jg
push
icebp
add
inc
mov
or
scas
scas
and
jno
mov
and
or
xor
arpl
add
js
pop
inc
aaa
mov
mov
sbb
mov
daa
and
jmp
add
data16
ja
daa
push
daa
pop
scas
mov
por
jnp
mov
xchg
xchg
or
and
mov
imul
cmp
jae
lds
xor
(bad)
xor
sub
fst
out
sbb
jecxz
add
mov
pusha
cmps
pop
sub
mov
mov
sub
and
jae
test
sbb
movs
and
aas
(bad)
ror
inc
nop
jmp
xor
add
in
xor
jnp
iret
add
gs
popa
out
leave
inc
inc
in
pop
aad
ins
test
push
dec
mov
cmp
add
or
inc
jmp
retf
add
or
(bad)
in
arpl
outs
jb
cmp
pop
add
jne
ss
and
test
xor
pop
add
imul
add
jbe
jo
scas
cs
arpl
add
test
outs
push
push
xchg
push
jmp
dec
dec
jo
je
lock
jns
pop
fs
fs
and
lods
mov
push
shr
dec
dec
inc
sbb
std
icebp
adc
in
data16
in
add
add
mov
pusha
pop
je
cmp
cwde
add
pop
gs
addr16
sub
inc
out
ror
jae
jnp
xchg
adc
imul
inc
out
push
inc
pop
dec
imul
jmp
sub
loop
add
cmps
out
inc
pusha
sbb
jmp
push
jmp
test
cmps
push
mov
and
out
add
stos
and
dec
push
cmc
add
push
iret
pop
stc
inc
jne
jmp
mov
fcom
test
(bad)
fnstsw
inc
and
ret
and
jns
push
pop
rep
push
gs
scas
inc
imul
imul
push
mov
dec
add
xchg
ror
add
jno
cmp
sub
stos
mov
and
ja
push
sbb
outs
neg
arpl
jecxz
adc
out
or
mov
pusha
mov
int
push
jo
imul
loop
cmps
mov
inc
sbb
lods
and
mov
aad
data16
mov
dec
adc
outs
popa
mov
cmp
sub
add
pop
lea
or
xchg
cmp
add
sbb
dec
pop
adc
fnstcw
imul
addr16
ins
out
dec
jo
adc
int
cmp
bound
mov
inc
adc
sbb
fwait
sub
leave
jmp
xchg
test
test
cmp
mov
mov
push
pop
mov
push
popf
loopne
loopne
xor
xor
iret
out
loopne
or
dec
das
dec
adc
xchg
mov
mov
div
scas
sub
loope
jo
dec
mov
push
cmp
in
addr16
dec
cwde
add
loope
pop
cmps
jb
mov
inc
xor
adc
dec
cwde
rol
inc
outs
aaa
ja
dec
add
dec
sbb
movs
pop
add
xchg
inc
cs
js
sub
cli
push
add
fisttp
fistp
cmp
ja
or
add
out
add
mov
push
cdq
pop
dec
pop
sub
pop
add
jo
push
scas
jo
add
test
out
test
add
xchg
mov
mov
mov
scas
outs
out
cmp
cmp
add
mov
add
inc
addr16
inc
sbb
pop
hlt
ret
sub
fcomp
mov
(bad)
pop
jnp
pop
sub
ins
popa
or
mov
jns
jae
scas
ins
fst
adc
pop
mov
es
inc
sub
jg
add
mov
and
sub
outs
mov
rcl
outs
lods
sub
data16
stos
mov
popf
push
iret
jge
push
and
adc
adc
push
add
adc
add
rol
scas
push
loopne
sub
add
push
dec
adc
ret
adc
add
pushaw
add
mov
ret
fwait
xor
cmp
and
inc
scas
stos
sub
stos
shl
ja
call
add
xchg
cmp
test
mov
pop
ja
pop
cwde
cmp
pop
mov
data16
mov
xchg
imul
inc
ret
call
call
jns
sbb
inc
sub
rol
xabort
pop
and
outs
sub
push
or
cmp
push
sar
daa
or
push
add
ins
cmps
adc
jb
imul
or
lds
jg
add
inc
jae
push
push
push
outs
out
xor
and
aad
mov
gs
cmp
sub
push
cmp
mov
frstor
and
sub
mov
xor
inc
dec
push
jo
and
add
adc
jns
mov
adc
(bad)
enter
(bad)
cmp
xchg
mov
and
outs
ins
or
outs
ins
pushf
jmp
imul
jo
gs
aad
aam
xor
outs
adc
push
xlat
retf
pop
test
jb
(bad)
data16
shl
xor
push
test
addr16
inc
std
iret
and
outs
jne
and
outs
jecxz
inc
or
sbb
loop
push
icebp
popa
jl
gs
sub
aas
cmp
mov
aas
test
adc
gs
gs
sub
bound
dec
adc
outs
repnz
outs
or
(bad)
jmp
jae
ins
outs
je
inc
outs
aaa
test
lds
(bad)
or
ins
gs
aas
mov
lea
xor
add
xchg
outs
ja
idiv
jae
pop
adc
icebp
invd
jne
gs
adc
sti
ret
sbb
mov
lods
add
loopne
push
and
jae
into
adc
pop
sub
jno
fdiv
xor
aad
push
jo
fucomp
add
cmps
imul
mov
frstor
and
cld
add
mov
outs
bound
outs
add
jb
add
pushf
mov
cmp
loope
sar
ficom
push
loopne
cmp
jbe
add
in
and
jo
fadd
sar
fsub
ror
enter
shl
mov
mov
fs
js
xor
arpl
dec
outs
cmp
inc
lahf
add
adc
dec
and
add
mov
cld
dec
iret
mov
dec
and
and
popa
mov
aam
mov
in
add
add
add
and
ins
imul
jp
add
jge
push
fisttp
and
adc
out
mov
(bad)
fild
setb
and
mov
lea
add
imul
add
xchg
mov
outs
arpl
loope
inc
fidiv
data16
test
pop
je
jae
and
push
imul
add
das
cmp
retf
inc
cmp
outs
jo
inc
add
icebp
sbb
popa
js
dec
jnp
mov
gs
ja
pop
in
shl
add
push
cmp
dec
fist
push
inc
xchg
or
pop
dec
cmps
cmp
xor
mov
push
and
push
je
jns
push
outs
imul
and
dec
out
imul
sub
dec
cmp
xor
fwait
inc
nop
mov
push
push
sti
mov
add
and
mov
add
add
shl
je
or
out
dec
add
push
jae
or
push
add
dec
sbb
jecxz
sbb
or
fs
fdivr
arpl
fwait
ins
outs
jbe
pop
cmp
sub
push
jb
jo
inc
int
fs
ret
dec
sbb
arpl
sbb
outs
inc
jne
cmp
jne
jb
loope
add
pusha
add
and
loopne
push
lea
mov
cmp
outs
xchg
jo
pusha
(bad)
pusha
cwde
es
sub
repz
xor
fld
cli
arpl
fiadd
sub
add
scas
mov
or
imul
rcr
data16
mov
mov
and
mov
xchg
cwde
and
cs
inc
jb
xor
inc
mov
bound
out
daa
fild
xor
aas
and
push
inc
shl
(bad)
pop
ss
inc
or
jl
add
inc
pop
or
add
and
ret
push
add
ins
ins
inc
out
add
add
(bad)
push
mov
add
add
dec
xor
add
jg
pop
fisttp
add
inc
add
pop
es
sub
out
cmp
push
cmps
jnp
add
cdq
cmp
push
pop
ins
ror
add
pop
mov
inc
jae
sub
outs
outs
add
adc
jb
or
sub
push
imul
adc
jmp
cmp
out
adc
jne
imul
aam
or
cmp
dec
outs
gs
inc
js
ins
outs
jb
imul
gs
add
rol
or
add
xor
imul
push
and
add
dec
xor
push
dec
pop
cmp
xor
xor
(bad)
inc
inc
and
push
dec
push
dec
inc
push
inc
dec
and
and
(bad)
mov
inc
dec
push
pop
and
jl
inc
dec
dec
inc
and
arpl
das
imul
and
dec
dec
dec
push
push
and
inc
dec
and
out
add
and
xlat
push
and
(bad)
dec
and
cmp
int3
dec
and
and
pop
mov
mov
add
dec
dec
sbb
sub
pop
jle
pop
enter
inc
dec
push
dec
and
push
shr
and
iret
ins
mov
repz
jnp
or
jg
pop
retf
inc
fs
and
iret
cmp
jb
jl
(bad)
xor
add
mov
pop
loope
add
daa
ds
adc
dec
gs
xchg
and
mov
pusha
sar
inc
inc
sbb
sbb
inc
rol
rol
add
inc
and
test
fisttp
retf
dec
sbb
mov
inc
adc
mov
xchg
inc
enter
inc
pop
movs
ins
popa
(bad)
dec
push
cmps
jae
sbb
aas
push
or
test
mov
inc
or
aaa
lods
mov
and
(bad)
scas
push
push
lods
pop
jmp
xor
cmp
push
jl
arpl
out
jns
sub
cmp
inc
mov
rcr
out
or
popf
ds
sbb
(bad)
fs
pop
or
inc
ds
inc
inc
xor
loope
pusha
gs
fcmovnb
push
adc
add
gs
jmp
jg
mov
test
jne
es
pop
sub
sub
cmps
and
cmp
inc
dec
cmp
call
mov
inc
gs
arpl
imul
daa
and
je
inc
outs
fs
adc
fs
es
outs
je
dec
outs
inc
arpl
push
daa
jg
add
xor
int3
aam
push
popa
outs
add
and
fiadd
mov
ret
aam
test
pop
outs
cmp
outs
xchg
and
add
mov
pop
inc
js
enter
fadd
or
pop
rcr
outs
je
jb
ror
ins
ins
mov
and
in
add
lock
jbe
into
cmp
ds
outs
and
or
ret
popa
jo
jae
je
add
jmp
fidivr
retf
add
cmp
add
push
pop
sbb
cmps
and
ins
(bad)
jg
sub
add
or
push
dec
adc
ja
mov
adc
xor
and
sbb
aas
and
retf
pop
add
aas
movs
loop
dec
popa
inc
add
add
inc
icebp
add
inc
inc
mov
add
add
inc
add
mov
add
mov
fadd
add
cmps
mov
add
nop
add
arpl
lahf
aad
mov
and
or
xor
cmp
xor
push
xchg
adc
sub
lds
outs
gs
add
adc
xchg
test
add
(bad)
gs
mov
jb
jo
cmovns
inc
in
cmp
scas
pop
cmp
jno
std
fwait
push
jno
inc
imul
push
jg
rcr
dec
ins
jne
push
inc
sbb
sar
mov
push
jb
and
sbb
and
mov
jae
mov
pop
addr16
imul
movs
(bad)
pusha
(bad)
cmps
xor
xchg
test
sbb
or
xchg
call
add
mov
fst
mov
fs
iret
add
outs
outs
imul
push
leave
test
inc
ror
popa
imul
and
out
mov
(bad)
hlt
add
mov
pop
adc
add
xchg
add
imul
ja
call
(bad)
mov
add
jns
pop
add
stos
out
sub
xchg
imul
add
ins
sub
xlat
aam
lods
inc
gs
add
fdiv
jp
jae
add
ins
aad
add
pop
adc
inc
add
cwde
fisub
pop
mov
ins
cdq
les
jae
pop
pusha
sub
loopne
add
dec
sub
cmp
cmc
pop
ror
inc
aas
xor
cmp
jb
inc
rcr
mov
xor
mov
push
rol
and
ins
(bad)
stos
arpl
cmp
xor
ins
gs
pop
nop
rcr
in
bound
je
or
cmp
sbb
aad
mov
in
popa
xor
je
popa
arpl
jg
adc
jne
arpl
mov
add
jb
mov
pop
push
test
jae
outs
clc
jo
sub
sti
and
sbb
xchg
iret
adc
daa
fs
inc
dec
jbe
jb
outs
bound
cwde
or
sub
or
ins
cmp
aad
outs
outs
cdq
fwait
sbb
add
dec
out
ss
loopne
add
sub
sub
mov
or
cmps
and
sub
pop
push
add
sub
bound
jae
shl
retf
pusha
(bad)
cmp
popa
outs
outs
je
adc
shl
mov
pop
sti
adc
ror
add
jb
mov
cmp
add
jae
sub
cmp
movs
jae
cmp
outs
arpl
pusha
mov
or
sub
push
ror
dec
push
inc
idiv
sub
dec
(bad)
sbb
imul
imul
inc
push
and
jb
js
cmp
inc
jns
sub
add
cmp
xor
outs
inc
mov
inc
inc
outs
or
fdivr
aas
add
int
add
sbb
pop
nop
xor
jae
xor
adc
stc
pop
ret
outs
push
inc
sub
adc
add
mov
jno
gs
add
add
ja
xchg
punpckldq
call
adc
pop
push
inc
maxps
sub
arpl
adc
imul
pop
or
add
and
or
and
mov
cmc
loopne
shl
and
loop
bound
lods
xlat
cmp
adc
mov
sbb
stos
sbb
jp
inc
and
add
jecxz
and
sar
add
mov
sbb
inc
cdq
inc
or
lock
xor
cmp
daa
add
and
aas
pop
xor
and
inc
sbb
xor
and
xor
ins
ret
jb
popa
cmps
enter
push
sbb
xchg
and
add
add
je
sub
xchg
cmp
or
ror
add
sar
repz
add
mov
shl
dec
popa
shl
cmp
popa
inc
jo
jns
add
xor
xlat
popa
pop
lods
stos
sub
mov
je
and
cmp
add
push
gs
(bad)
pop
jo
or
or
or
data16
gs
xlat
push
mov
mov
nop
sub
pop
shl
adc
fwait
or
xor
or
ins
add
cmp
and
adc
xor
inc
(bad)
aas
push
mov
fild
add
sbb
fist
retf
xor
pop
jp
dec
rcr
pop
add
dec
sub
dec
out
pop
or
push
fsub
iret
jp
addr16
xchg
cmp
add
out
sub
data16
js
push
mov
jae
retf
test
enter
pusha
xchg
popa
je
dec
dec
pop
xlat
ror
je
shr
inc
or
ins
jae
jb
mov
dec
sbb
mov
stos
scas
or
inc
pop
pop
mov
test
adc
push
dec
mov
inc
outs
fs
mov
daa
push
stos
xor
test
or
and
fs
hlt
jae
cmp
stc
xor
jb
add
arpl
jg
addr16
and
add
pop
dec
add
fwait
jb
pop
push
add
and
je
jecxz
mov
outs
jb
arpl
inc
cwde
sbb
pop
lea
gs
aas
ja
cmps
jo
xor
mov
pop
cmps
jae
(bad)
mov
loopne
push
mov
fcom
sahf
pop
int3
psllq
mov
mov
gs
in
fwait
jo
cmp
push
xor
ins
dec
fucomip
push
mov
and
dec
add
add
and
push
mul
cmp
dec
lods
jmp
aaa
sbb
pop
jne
ins
pop
ss
mov
xor
test
xor
xchg
push
popa
jb
movs
sub
mov
xor
popa
mov
fidivr
or
in
mov
int3
leave
pusha
dec
icebp
jns
add
and
mov
mov
push
loopne
leave
or
pop
jmp
outs
push
adc
icebp
pop
mov
and
or
dec
add
cwde
test
cmp
test
adc
push
dec
mov
mov
pop
stos
and
sbb
(bad)
mov
out
jmp
outs
jb
jmp
or
inc
test
pusha
push
ja
imul
scas
ficom
dec
outs
popa
ins
pop
cmp
shr
inc
inc
outs
pop
xchg
retf
pop
and
and
scas
pop
push
test
sbb
ins
add
aaa
dec
rol
jmp
popa
and
data16
fadd
push
xchg
add
adc
cs
xchg
aaa
jp
sbb
and
inc
(bad)
xchg
sub
and
je
xor
mov
jb
push
xor
sub
push
pop
jae
ret
in
lods
inc
add
das
push
outs
jg
mov
ret
(bad)
push
jae
jne
ret
push
add
(bad)
add
mov
sti
int
fs
sbb
xchg
sahf
jg
jnp
adc
and
fldenv
jnp
and
xchg
pusha
clc
outs
adc
popa
push
push
add
scas
jg
scas
inc
xor
shl
cld
outs
and
push
fsubr
fs
sbb
dec
dec
cmps
in
aaa
mov
nop
pusha
mov
es
hlt
dec
cld
push
(bad)
sbb
arpl
gs
push
or
xor
jnp
push
aam
outs
gs
gs
jns
and
pop
shr
inc
imul
or
(bad)
daa
nop
dec
or
or
mov
sbb
add
jb
push
jb
add
and
add
ins
loope
shl
add
sbb
jns
push
ret
(bad)
mov
ins
mov
cmp
jne
cmp
das
add
add
add
popf
jb
mov
in
and
push
cwde
jmp
jae
mov
and
adc
push
ret
fcmovnu
sbb
aas
aad
iret
inc
mov
das
test
or
shl
fs
into
add
jecxz
add
gs
neg
inc
add
add
dec
add
mov
fs
mov
mov
and
jp
add
bound
dec
call
dec
loopne
xchg
adc
mov
add
dec
add
sub
push
das
das
idiv
xor
xor
jo
jae
aas
jo
adc
mov
sbb
fiadd
jns
jae
sbb
jb
arpl
push
ror
addr16
push
sub
fs
ins
outs
outs
call
sub
inc
xchg
jae
jecxz
push
lock
add
jne
addr16
outs
sbb
dec
outs
sbb
sbb
ins
lahf
and
test
aad
mov
test
mov
cmc
lds
fs
sbb
push
add
cld
retf
mov
jb
and
add
add
sbb
add
dec
and
jl
imul
xor
retf
cmp
add
push
movs
dec
fld
mov
cwde
test
add
or
in
inc
and
pop
leave
fbld
rol
add
pop
dec
pop
ins
outs
push
or
jecxz
push
mov
xor
add
popa
imul
jbe
mov
add
adc
aas
jae
adc
and
jo
imul
ins
gs
or
inc
mov
adc
jae
pop
dec
mov
push
popa
ins
ins
cmps
inc
add
add
fwait
push
sbb
ins
jnp
int3
adc
lds
or
popf
jae
imul
je
jae
fs
and
push
jp
gs
and
mov
pop
mov
(bad)
cld
outs
mov
sbb
ins
pop
add
mov
int
xchg
cmp
into
gs
xor
inc
add
and
xor
cmp
cmp
push
or
sub
cli
add
mov
add
push
inc
add
mov
fcomp
test
push
(bad)
scas
pop
mov
pop
rol
les
inc
pop
dec
sbb
add
jmp
jae
push
int3
jl
fs
add
pop
add
jo
sub
or
rcr
jb
shl
adc
inc
in
push
xor
gs
mov
popa
inc
xor
pop
sahf
fldcw
ins
sbb
dec
outs
dec
in
inc
xor
inc
sub
cmp
aam
adc
fist
cwde
adc
pusha
push
fcomip
jns
push
dec
outs
jno
gs
and
ror
push
jb
lds
mov
inc
mov
adc
sub
push
push
inc
xor
sbb
dec
jb
xlat
sub
or
jo
je
push
ret
xor
xlat
rol
add
inc
and
add
nop
mov
add
inc
add
cmp
imul
pop
push
das
fs
push
xor
mov
pop
add
and
add
xchg
cli
dec
test
add
and
add
retf
sbb
ins
popa
jo
popa
cmp
adc
and
xor
inc
xor
sbb
add
and
imul
add
add
pushf
and
adc
push
lds
not
push
mov
inc
(bad)
daa
(bad)
gs
inc
inc
sub
adc
inc
popa
lock
jno
call
loopne
adc
fiadd
pop
imul
mov
cmc
or
add
add
xor
add
cwde
dec
cdq
jbe
jl
sbb
pop
add
and
aas
xor
or
in
popa
les
adc
xor
lea
and
inc
xchg
movnti
push
imul
add
popa
das
jb
inc
push
addr16
sbb
daa
punpcklwd
outs
jg
pusha
sub
sub
cmp
adc
sbb
and
sub
xor
mov
add
es
unpckhps
push
adc
faddp
and
ja
je
jae
je
xor
leave
push
outs
inc
mov
packsswb
sbb
mov
sub
inc
adc
cwde
inc
inc
data16
sub
sbb
sar
hlt
je
ja
jae
mov
movs
xchg
inc
pop
xchg
cmp
mov
and
popa
test
adc
add
or
pop
and
push
add
jb
add
mov
inc
or
and
pop
loope
pop
inc
outs
movs
inc
cmps
add
lods
sub
xchg
popf
ret
aas
jne
fdiv
or
sub
ins
add
add
pop
push
jmp
popa
adc
iret
push
out
iret
sub
add
pop
pop
and
scas
adc
ja
fidivr
xor
pushf
add
addr16
jne
and
imul
or
mov
push
dec
add
sbb
jb
inc
and
add
pop
cs
inc
or
stos
fs
cmc
sbb
push
test
imul
and
pop
imul
addr16
adc
mov
or
clc
arpl
pop
arpl
arpl
jecxz
cdq
sbb
and
inc
jmp
cdq
jmp
cmps
mov
xchg
add
sub
and
fs
mov
ret
mov
push
shr
iret
xor
push
jae
jb
jbe
mov
addr16
adc
jg
sub
and
and
push
cmp
cmp
jne
je
ins
and
es
xchg
imul
and
mov
ins
scas
loopne
lods
js
shl
mov
sub
sbb
dec
popa
inc
jg
sbb
dec
add
add
mov
outs
loope
add
ins
call
arpl
std
adc
aas
add
jl
pop
add
add
arpl
mov
aaa
fild
rol
add
add
pusha
xor
aaa
push
jmp
mov
push
add
je
add
jno
sbb
scas
jmp
or
inc
pop
jae
push
icebp
push
pushf
dec
push
push
dec
dec
dec
push
add
dec
inc
push
inc
push
lock
dec
push
add
dec
dec
push
push
inc
dec
cmp
push
inc
dec
inc
dec
nop
mov
jmp
cmp
std
(bad)
adc
inc
outs
ins
ins
outs
outs
jo
mov
cmp
mov
lahf
jae
adc
stos
js
outs
cmc
or
or
ins
in
call
dec
jae
xor
dec
or
add
dec
mov
xor
push
imul
add
xor
dec
add
pop
test
rcr
or
push
xlat
sbb
jo
mov
add
jo
sbb
(bad)
sbb
pop
add
xor
push
push
jmp
loop
mov
ja
pop
add
(bad)
je
push
(bad)
dec
jo
push
add
xor
mov
mov
mov
mov
shl
imul
add
inc
popa
or
and
outs
add
or
pop
or
rol
inc
test
xor
pop
movs
xor
or
xor
add
push
ret
cmps
and
loopne
xor
jo
push
enter
imul
or
mov
fwait
dec
repz
or
add
push
das
sbb
inc
push
gs
mov
sbb
jbe
addr16
popa
sbb
inc
inc
inc
inc
push
mov
outs
idiv
out
push
push
pop
cmovbe
dec
pop
push
inc
inc
dec
inc
inc
inc
push
add
push
or
jg
inc
inc
dec
inc
inc
add
and
jae
bound
mov
sub
xor
or
or
and
fstp
outs
sysenter
pop
or
mov
pop
ss
add
add
mov
pop
call
out
xchg
jmp
out
pop
or
add
pop
xlat
inc
pop
xchg
pop
dec
xchg
pop
call
jne
rcr
icebp
setge
or
xor
pop
mov
mov
mov
in
pop
mov
jmp
test
outs
cmps
pop
outs
test
mov
add
pop
cmp
icebp
pop
fld
cmp
add
add
adc
mov
mov
lock
cmp
sti
mov
pop
das
or
mov
jae
jae
sbb
stos
or
mov
or
or
ficomp
test
ret
fidiv
iret
or
std
(bad)
jecxz
add
test
add
cmp
pop
icebp
push
inc
cmp
add
imul
pop
sub
(bad)
(bad)
fistp
pop
push
inc
push
dec
dec
dec
dec
and
add
and
and
jae
add
pop
jne
and
add
mov
xchg
(bad)
out
mov
push
sbb
pop
repnz
loopne
test
cmp
sub
or
inc
jae
sbb
scas
popa
in
push
vmovdqu
push
add
push
js
bound
dec
and
outs
add
mov
fstp
popf
xor
stos
popa
ins
outs
addr16
mov
shl
jnp
sub
cld
popa
ja
jns
add
jo
out
or
xchg
push
or
pusha
push
xor
arpl
ret
pop
add
push
xchg
add
add
and
xchg
mov
mov
pusha
add
push
sbb
imul
jmp
cdq
mov
ds
add
retf
inc
rcl
adc
aaa
mov
test
or
or
xor
push
xor
push
scas
or
sbb
and
jb
gs
xor
add
ins
ins
fs
sub
dec
ror
dec
gs
stos
call
pop
shr
aad
jb
sbb
push
mov
xchg
and
pop
scas
sar
jo
pusha
mov
jae
scas
std
and
cmps
add
and
mov
mov
imul
mov
imul
jae
jne
jae
push
mov
lock
arpl
push
rol
out
push
fcom
and
xor
lds
int3
and
and
pop
aaa
xor
jne
je
je
je
jae
mov
jae
xchg
cmp
(bad)
mov
mov
add
jle
cwde
mov
or
push
add
jae
mov
push
bound
adc
loop
loope
jl
xor
stos
pop
xchg
add
xor
or
leave
sub
mov
add
push
pop
cmp
daa
loop
sbb
push
jne
xchg
add
cmp
popa
je
dec
gs
pusha
pop
adc
fdiv
outs
xchg
lahf
jecxz
xchg
lock
pop
adc
sbb
outs
jae
fsub
pushf
mov
in
adc
mov
jb
popa
jae
outs
sub
nop
pop
pushf
mov
ds
in
ret
dec
jnp
popf
add
retf
out
mov
gs
outs
fs
adc
sbb
jmp
jae
push
ja
pop
inc
xchg
or
lahf
pop
inc
cmc
and
outs
stos
jbe
xchg
mov
and
into
or
pop
push
test
invd
pop
mov
dec
lock
fstp
cmps
bound
sub
add
pusha
inc
pop
gs
add
and
xor
sub
mov
mov
popa
ins
pop
pop
div
popf
adc
arpl
xchg
sbb
jo
inc
and
test
rol
lds
add
cli
add
ret
add
call
inc
or
sub
mov
adc
repz
push
pusha
mov
sub
sbb
inc
das
inc
add
or
aaa
mov
in
das
inc
and
xchg
mov
js
cmps
(bad)
imul
or
outs
outs
jae
adc
test
jl
add
dec
add
call
icebp
add
call
or
xchg
jmp
add
add
add
in
xchg
add
in
pop
(bad)
popf
add
imul
jo
stos
(bad)
fadd
push
ret
mov
and
add
add
dec
xchg
xor
div
or
je
and
add
add
add
cli
mov
cmp
imul
gs
lock
push
pop
mov
in
add
cmp
or
loop
andnps
(bad)
and
xor
inc
dec
dec
inc
inc
inc
push
cmc
push
add
push
mov
sbb
add
or
outs
mov
fs
and
fwait
test
or
ins
ins
xlat
adc
inc
inc
pop
and
ror
imul
inc
push
ror
imul
in
push
mov
adc
jae
cmp
add
jae
in
inc
int3
popa
jb
sbb
not
jae
div
ins
mov
cmp
or
inc
lods
dec
jge
pop
lods
and
pop
adc
and
out
out
add
and
ja
dec
xor
mov
mov
jb
data16
inc
add
inc
push
scas
jl
add
add
and
and
jmp
out
push
dec
mov
repnz
sub
rcr
mov
sbb
js
mov
aaa
int3
push
adc
xchg
dec
and
add
add
repnz
pushf
xor
mov
jmp
and
or
adc
jmp
push
or
jb
gs
jmp
and
ins
imul
mov
popa
mov
mov
test
or
pusha
mov
jo
arpl
dec
add
and
sub
es
push
call
cwde
outs
and
imul
jb
ins
push
jns
push
out
test
cmp
daa
loopne
ret
pop
nop
inc
fs
add
xchg
jae
je
add
add
call
popa
inc
outs
addr16
es
dec
xor
imul
lods
gs
js
adc
adc
add
sbb
jb
xor
shr
ja
xchg
mov
bound
or
ret
push
das
popa
je
or
pusha
cs
mov
test
add
mov
and
outs
jne
sub
ss
jae
inc
cmp
pushf
jmp
ds
xchg
popa
adc
stos
or
push
js
rol
jae
sub
dec
repz
mov
add
dec
sbb
das
sbb
inc
jo
ficom
inc
and
inc
out
push
iret
imul
cmp
jo
je
or
test
pop
mov
and
mov
sub
jo
mov
ret
or
lods
pop
inc
addr16
pop
jb
mov
sbb
add
fwait
cmp
hlt
xchg
test
inc
or
sbb
ficom
scas
outs
outs
arpl
pop
cwde
sub
mov
pop
push
and
inc
and
xchg
pushf
add
pop
add
fsubr
and
mov
xchg
stos
rcl
xor
stos
jo
cwde
adc
fs
and
and
aaa
stos
inc
mov
loope
ror
push
xor
xor
add
add
sub
xchg
jge
ficomp
mov
add
ja
sub
inc
jecxz
xchg
dec
adc
mov
pop
pop
push
adc
jb
ins
popa
dec
(bad)
inc
add
jae
je
popa
je
push
dec
push
and
xor
mov
fsub
les
sub
popf
jo
cmp
mov
inc
gs
outs
je
sbb
ret
jle
dec
inc
popa
bound
test
(bad)
push
cmp
inc
nop
rcr
mov
add
mov
push
aad
test
pop
fnsave
pushf
dec
ins
push
add
and
test
adc
in
mov
sub
inc
je
scas
cmps
inc
and
pop
shr
pop
and
cmp
jo
push
test
adc
and
add
aaa
add
cwde
mov
imul
cmp
iret
loopne
add
inc
bound
jb
sbb
scas
push
and
mov
xor
(bad)
fwait
push
mov
adc
loope
imul
hlt
dec
sbb
rol
loope
dec
xor
adc
sbb
add
aaa
inc
or
je
movd
add
rol
mov
sbb
add
gs
jge
and
loope
and
inc
or
sbb
test
sbb
jmp
(bad)
jp
inc
popa
arpl
enter
push
js
push
mov
add
cmp
outs
sbb
add
mov
adc
gs
popa
jb
shl
jo
es
inc
add
mov
adc
es
xchg
test
pushf
add
dec
dec
push
push
ror
and
and
xlat
and
pop
xor
add
dec
ins
outs
pop
addr16
or
or
or
popa
mov
mov
and
mov
mov
add
(bad)
outs
rol
add
mov
cmp
and
cmp
push
wbinvd
and
mov
sbb
int3
add
and
mov
(bad)
fsubr
cdq
cmp
leave
dec
and
inc
add
xor
je
jb
dec
sub
jmp
dec
gs
or
in
push
pop
inc
rcl
jo
cld
out
cmp
push
xchg
pop
or
pop
xchg
xchg
pop
mov
push
dec
outs
add
sbb
xor
pop
add
adc
push
arpl
pop
addr16
sub
jb
add
xor
inc
jae
jno
dec
inc
xchg
add
fwait
mov
arpl
pop
mov
sub
pop
fild
add
test
cmps
add
mov
outs
pop
xchg
gs
je
pop
call
mov
jae
mov
pop
adc
push
pop
and
cmp
pop
out
and
retf
arpl
retf
sub
cmp
enter
(bad)
div
das
push
jb
xor
je
popa
mov
and
pop
xor
add
xchg
sbb
ins
(bad)
mov
sub
and
and
je
inc
jmp
std
or
imul
push
mov
sub
ins
pop
inc
lock
pop
enter
(bad)
aas
pop
push
add
add
pop
fld
add
icebp
add
push
push
pop
cmp
or
pop
inc
add
rol
dec
ret
std
retf
mov
lahf
cwde
sub
aaa
mov
stos
jo
sbb
ins
shl
inc
dec
imul
cmp
adc
scas
mov
test
enter
and
sbb
ret
dec
push
aas
pop
nop
mov
dec
or
push
test
ins
pop
popa
dec
test
stos
push
push
inc
inc
or
add
stos
imul
xor
popf
test
inc
(bad)
pop
sbb
sub
add
test
xchg
mov
pop
ret
push
out
int
and
aas
mov
add
in
and
or
sbb
xor
lds
ja
xchg
sub
push
out
ret
pop
push
movs
cmp
bound
bound
add
and
gs
cdq
or
inc
les
outs
and
ror
push
add
mov
inc
jl
je
pop
add
dec
dec
shr
gs
jge
mov
lods
mov
mov
inc
cmc
add
outs
dec
add
adc
aaa
adc
push
pop
add
test
sbb
xchg
pop
(bad)
mov
nop
add
add
lods
fbld
add
add
sub
es
arpl
and
inc
xchg
cmp
jae
push
mov
jae
pop
or
pop
mov
inc
inc
adc
mov
sbb
or
inc
cmp
(bad)
mul
or
and
cmp
outs
add
lods
xor
js
jns
add
and
fadd
sbb
imul
fcom
add
cmp
je
cmc
push
dec
push
add
xor
adc
cwde
add
std
add
(bad)
jg
inc
dec
pop
adc
mov
mov
clc
xchg
add
sbb
imul
mov
add
mov
add
sbb
add
fstp
fwait
adc
sbb
add
sbb
rol
push
jae
jb
add
jae
push
inc
or
pop
neg
and
js
gs
out
add
push
mov
xor
add
add
pusha
inc
pop
jecxz
mov
and
and
call
add
daa
inc
and
xchg
push
xchg
adc
jmp
pop
add
jno
add
mov
add
and
sub
add
fisubr
gs
cdq
and
ret
lahf
sbb
push
sahf
icebp
or
fs
cld
aas
inc
ss
gs
jb
push
dec
and
je
call
test
aas
and
outs
jo
gs
cmp
out
mov
add
add
add
jno
inc
add
inc
xchg
jp
scas
daa
sbb
loopne
jb
int
mov
adc
nop
add
adc
xor
addr16
dec
sbb
pusha
mov
sbb
test
push
inc
scas
ins
jecxz
cmps
gs
mov
add
cmp
in
loop
(bad)
inc
adc
adc
aaa
ret
fwait
sub
cmc
pop
xchg
inc
pop
or
adc
jmp
inc
jnp
push
les
jne
add
int3
push
mov
ins
popa
dec
fst
sti
mov
loope
adc
pusha
(bad)
cs
rcl
or
and
mov
arpl
inc
imul
pop
push
scas
or
punpcklwd
cmp
test
and
stos
push
adc
lahf
popw
out
sub
push
push
add
add
pop
mov
nop
mov
cmps
push
jbe
add
leave
sub
mov
mov
push
add
mov
aaa
loopne
jp
push
dec
sbb
jae
jmp
pusha
das
dec
pop
xor
gs
push
int3
xor
imul
or
cdq
outs
and
mov
and
nop
out
pusha
push
mov
add
(bad)
add
lds
push
adc
and
in
popf
sbb
lock
adc
add
add
not
daa
inc
adc
retf
arpl
mov
and
into
sbb
ja
inc
cmps
scas
mov
add
push
das
jnp
push
jnp
sub
xor
pop
out
jo
daa
shr
popa
je
aad
and
outs
jae
mov
push
sub
outs
add
xchg
inc
jmp
gs
ins
jbe
push
popa
cld
outs
mov
add
pop
add
add
mov
inc
add
push
add
outs
push
add
dec
mov
dec
xlat
mov
rcr
sbb
mov
and
stc
inc
or
adc
dec
call
das
or
adc
mov
adc
xor
gs
mov
cmp
loope
add
je
mov
pop
lds
fild
inc
pop
mov
and
inc
outs
data16
popa
jb
cmp
loopne
add
push
rol
ret
add
fs
cmp
pop
ins
outs
add
stos
add
add
je
fs
bound
xchg
add
add
add
fld
sbb
pop
nop
xor
mov
dec
pop
dec
dec
inc
jle
cpuid
shr
jns
popf
rcr
jo
enter
xchg
mov
loope
aas
in
mov
inc
inc
push
push
add
push
dec
push
add
inc
dec
dec
dec
lds
push
pop
dec
inc
dec
jae
popa
mov
daa
push
adc
dec
inc
dec
pop
dec
xchg
add
inc
push
dec
inc
fild
jg
push
fcomip
inc
rol
or
icebp
cmp
mov
or
push
es
mov
push
popa
jbe
push
sub
jae
push
dec
outs
or
add
mov
and
add
add
xor
sbb
je
add
es
adc
add
mov
mov
xchg
pop
cmps
push
mov
sbb
ja
dec
add
and
imul
sub
cmp
xchg
pop
stos
and
push
adc
sbb
sbb
outs
pusha
inc
dec
shl
popa
xchg
sub
call
and
push
and
dec
jo
ret
pop
xchg
cmp
cmp
dec
gs
outs
gs
stc
fild
adc
push
hlt
call
push
add
add
jp
add
jl
mov
mov
adc
inc
sbb
ret
ins
outs
add
cmp
into
pop
jo
inc
rcl
sbb
stos
(bad)
fadd
std
inc
(bad)
add
clc
mov
push
sar
cli
shl
inc
jno
sar
js
adc
mov
jb
arpl
add
out
and
retf
inc
inc
clc
jnp
cwde
sub
and
mov
add
sub
stos
add
add
add
jg
add
add
shl
ret
pop
scas
xchg
jne
mov
inc
inc
cmp
ja
cmp
and
(bad)
cmp
dec
int
add
and
dec
scas
mov
xchg
sub
dec
shl
fnstcw
(bad)
test
or
into
mov
iret
retf
and
xchg
sbb
add
imul
es
inc
and
das
jmp
dec
std
repz
inc
inc
add
pop
pop
enter
outs
and
and
sbb
outs
jb
sub
mov
jmp
add
rcl
mov
(bad)
les
jmp
les
mov
mov
loopne
dec
(bad)
jae
jmp
and
jae
scas
xchg
retf
jno
pusha
inc
mov
mov
je
jg
jbe
xchg
add
push
add
sub
pop
jg
xor
sub
sbb
push
sub
sbb
mov
inc
icebp
mov
jg
jne
ins
adc
or
mov
adc
inc
xor
add
jae
jno
adc
pop
pushf
aad
and
pop
sti
push
shl
cmps
retf
add
sbb
(bad)
sub
addr16
inc
inc
pop
dec
dec
dec
mov
or
add
pop
inc
pop
push
inc
dec
inc
pop
push
(bad)
sbb
dec
inc
je
inc
push
dec
push
std
dec
out
dec
or
dec
inc
pop
inc
dec
inc
dec
add
or
std
aas
mov
jg
arpl
dec
push
dec
push
dec
dec
dec
jae
mov
dec
push
push
inc
inc
pop
cmp
pop
leave
push
ror
sbb
or
inc
push
dec
push
push
dec
push
push
xor
pusha
pop
inc
rol
push
push
inc
sbb
push
xchg
and
and
xor
add
or
jmp
cmps
imul
mov
jmp
(bad)
jmp
stos
cmp
das
js
ins
outs
jb
das
jae
js
nop
inc
jno
push
jae
ins
int
popa
ins
pop
mov
arpl
(bad)
xor
pop
(bad)
jg
add
cmp
and
or
add
(bad)
dec
adc
outs
jb
inc
stc
lea
jnp
adc
cwde
ds
cli
int
fst
sahf
xchg
inc
test
sub
rcl
sub
sbb
dec
scas
sbb
scas
pusha
dec
mov
sbb
shr
movs
sub
outs
inc
add
inc
mov
adc
inc
cwde
mov
mov
pushf
and
pushf
aaa
js
test
pop
dec
and
outs
(bad)
mov
lods
add
add
test
add
scas
enter
and
jno
fwait
inc
add
mov
add
mov
mul
aaa
mov
push
jecxz
pop
add
jg
mov
inc
add
pop
movs
(bad)
(bad)
cmc
push
pop
xor
inc
xor
jle
add
add
and
fisttp
or
or
xchg
mov
cmps
add
test
sub
sbb
add
retf
push
cmp
addr16
push
shr
pop
pop
jbe
xchg
test
xchg
stos
sbb
adc
add
add
xor
inc
icebp
mov
add
add
mov
push
add
jo
inc
add
cmp
sub
push
xor
or
jae
push
mov
push
inc
inc
dec
cmp
cmp
fidiv
cli
ds
mov
lock
(bad)
(bad)
sub
add
add
mov
add
ror
add
aam
(bad)
(bad)
push
rol
add
cmps
add
xlat
jg
movs
stos
das
test
xchg
and
aas
aam
test
(bad)
(bad)
jg
xor
adc
mov
fcomp
(bad)
dec
sbb
(bad)
(bad)
(bad)
dec
mov
bound
fidiv
hlt
inc
mov
mov
retf
dec
bound
cdq
test
mov
retf
cmp
lock
push
cmps
dec
rol
add
mov
iret
sub
and
mov
xor
fcompp
sbb
xchg
outs
and
jns
cs
adc
daa
or
push
push
movaps
ins
xchg
and
add
adc
push
xchg
outs
arpl
popa
data16
das
ret
test
out
push
outs
inc
inc
push
inc
pop
inc
inc
and
inc
and
cmps
push
push
shl
lea
out
call
out
inc
sbb
sti
mov
xor
fstp
xchg
add
add
loopne
push
add
clc
mov
xchg
stos
pop
push
stos
loop
or
(bad)
cmp
or
popa
inc
xor
or
jp
add
jg
pop
or
add
add
test
add
gs
adc
sub
adc
pop
add
rol
or
sub
push
loope
rol
push
jae
(bad)
aas
sti
adc
or
movs
dec
adc
push
push
inc
push
mov
pop
jge
and
arpl
fimul
pop
dec
inc
push
(bad)
pop
inc
sub
outs
jne
pop
push
gs
gs
jae
ja
xchg
add
addr16
nop
int
inc
outs
jnp
jo
fdivr
push
push
in
add
push
fmul
adc
or
test
add
inc
pusha
(bad)
and
add
push
add
lock
adc
sahf
jae
cvtdq2ps
repnz
push
add
mul
pop
or
adc
dec
fcomp
or
test
adc
repnz
fmul
repnz
add
mul
push
push
and
sub
lds
out
push
push
sub
push
sbb
and
pop
enter
jle
jae
sbb
daa
xor
pop
imul
pand
enter
dec
and
fs
and
push
out
mov
add
clc
cmp
adc
repz
mov
pop
nop
addr16
dec
push
out
retf
cmp
dec
mov
pushf
adc
add
scas
repz
inc
push
int3
fwait
dec
mov
dec
cmp
mov
pop
lfs
pop
fsub
mov
jmp
fmul
push
adc
lock
(bad)
mov
add
or
add
dec
push
inc
aaa
cmp
push
xor
inc
or
pop
out
addr16
dec
dec
pop
add
mov
loopne
addr16
hlt
fcomp
dec
fwait
hlt
mov
pusha
scas
sbb
add
pushf
dec
lods
add
mov
jb
cmp
int
shl
dec
jae
push
hlt
sub
xor
push
and
push
or
dec
test
or
adc
pop
or
scas
mov
sbb
cmps
mov
add
push
(bad)
shl
mov
retf
jecxz
push
or
xor
dec
movs
jecxz
out
ja
push
push
enter
enter
jae
add
or
jecxz
and
add
dec
cwde
jae
aaa
daa
push
out
pop
int3
or
div
cmp
cmp
neg
(bad)
test
push
push
sub
mov
push
xor
je
idiv
not
push
sub
(bad)
mov
and
out
dec
cmp
rdpmc
and
push
ror
mov
xlat
and
jne
xchg
sub
sbb
neg
jno
es
adc
jmp
xor
add
dec
push
push
pushf
repz
maskmovq
mul
mov
test
push
or
mov
aas
sbb
add
leave
(bad)
push
push
pop
neg
cmp
inc
fcom
adc
cld
das
jne
lds
xor
fs
enter
clc
cmp
push
pop
and
loop
jns
frstor
ins
adc
and
aas
pop
or
adc
or
pusha
adc
add
jg
jae
add
arpl
retf
out
pusha
mov
xor
(bad)
cmp
enter
(bad)
pop
clts
sub
jg
mov
pop
test
aas
popa
shl
in
aas
or
mov
and
sub
dec
out
or
or
mov
add
or
xchg
sbb
or
lds
adc
sbb
add
or
daa
loopne
arpl
or
push
dec
in
mov
arpl
xchg
(bad)
mov
inc
arpl
sub
fadd
or
xchg
str
lahf
das
and
imul
sub
mov
sbb
add
or
movs
int3
add
movs
loopne
pop
xchg
or
icebp
pop
lahf
and
shr
shr
or
xchg
add
mov
daa
fadd
aad
mov
add
fdiv
xchg
es
(bad)
neg
sti
dec
sbb
mov
push
add
mov
daa
ret
fisubr
sbb
push
and
or
je
iret
mov
enter
and
retf
pop
aad
ss
fcomp
(bad)
mov
aas
and
and
fst
popa
xchg
or
(bad)
mov
loope
aas
mov
cdq
or
push
std
aas
cs
ss
sub
stos
pop
lahf
jg
sbb
cmp
pop
pop
loop
mov
or
out
add
xor
or
jo
xchg
or
fwait
pop
pop
ss
adc
cmp
pop
aas
inc
inc
std
adc
or
jnp
jge
add
cmp
daa
cmp
fmul
add
cmp
ds
ss
adc
pop
outs
aas
fisubr
dec
dec
(bad)
aas
inc
in
xchg
mov
lahf
sar
dec
dec
add
dec
mov
add
add
dec
sar
aas
clc
pop
inc
inc
push
ret
sbb
pop
fnstenv
jecxz
inc
pop
pop
jl
rcl
pop
aas
pusha
cmp
test
and
lahf
xchg
pop
fld
pop
jg
lahf
sub
and
out
fist
jl
pop
lahf
and
pop
add
xchg
or
cmp
not
or
push
pop
jnp
popf
sbb
test
and
rcl
aad
fist
pop
or
daa
pop
enter
push
out
or
pop
add
daa
iret
mov
adc
shl
add
shl
pop
jmp
or
or
adc
xchg
mov
cld
cmp
ficom
add
cld
and
add
cs
jnp
inc
add
or
daa
mov
pop
or
repnz
shl
push
mov
pop
scas
add
add
add
push
add
and
inc
push
(bad)
mov
mov
sbb
rcr
add
aad
and
push
call
or
jg
or
adc
dec
scas
add
or
or
adc
scas
mov
mov
call
adc
ret
mul
je
in
adc
test
push
add
push
push
add
sub
mov
fwait
enter
push
add
cmp
fwait
inc
or
out
add
(bad)
stos
push
add
rol
mov
add
out
sar
inc
add
cli
inc
or
(bad)
jg
jo
or
je
push
add
push
add
pop
sub
pop
js
mov
inc
call
jmp
test
fidiv
xchg
pop
lock
cmps
imul
sub
pop
outs
cli
push
inc
rcr
pop
add
dec
jae
jo
push
push
icebp
and
dec
idiv
inc
and
push
push
js
arpl
gs
aas
mov
sbb
jo
outs
push
imul
or
dec
or
inc
das
dec
in
(bad)
inc
lods
inc
outs
jb
mov
adc
inc
jb
ins
dec
inc
mov
push
inc
xor
bound
adc
dec
imul
gs
outs
inc
jb
jbe
xchg
adc
sub
add
(bad)
mov
push
add
adc
jge
mov
or
or
adc
aas
add
and
add
jb
adc
pusha
inc
adc
aaa
inc
adc
mov
xor
adc
pop
mov
ud0
mov
xor
push
xor
add
ds
add
js
ror
xchg
mov
add
(bad)
sbb
lods
add
enter
or
mov
adc
mov
std
or
add
xchg
add
or
xchg
jnp
outs
jne
ins
sub
imul
call
inc
outs
je
jne
dec
popa
jne
push
push
retf
ins
inc
ror
sbb
push
fadd
xchg
loope
pop
shl
ins
(bad)
pop
or
adc
inc
add
pop
mov
add
push
or
out
cmp
adc
mov
das
or
sysret
add
in
mov
or
adc
adc
sbb
sbb
and
and
sub
xor
cmp
cmp
dec
add
add
dec
jp
lds
cdq
push
add
add
push
rcr
add
fwait
stos
fcom
add
add
xchg
add
inc
inc
in
mov
pop
adc
popa
add
inc
or
mov
lds
mov
push
xor
push
idiv
add
add
outs
mov
out
cmp
push
xor
outs
mov
add
jnp
add
pop
add
mov
pop
add
pop
and
push
clc
or
xchg
lock
fwait
pop
adc
pop
pop
add
or
jg
add
inc
mov
jne
add
jae
push
hlt
jo
pop
xor
cmps
ja
add
and
pop
call
stos
or
scas
call
enter
mov
sbb
or
push
cmp
test
jp
ret
push
movntq
adc
add
push
mov
adc
inc
pop
psrlq
test
add
adc
iret
push
cmp
add
jae
pop
or
add
mov
pop
pusha
xor
or
scas
neg
mov
iret
inc
add
sbb
outs
pop
add
push
add
pop
add
xchg
pop
sub
cmp
cmc
sbb
bsf
outs
xor
jae
pop
iret
lahf
out
xor
lds
ja
jl
sbb
add
mov
jae
add
(bad)
stos
(bad)
pop
add
add
sub
out
sbb
pop
add
cmp
stos
and
pop
or
or
mov
mov
add
dec
or
sbb
and
add
sbb
or
xor
(bad)
pop
inc
pop
aas
add
out
push
sbb
mov
push
xchg
subps
pusha
mov
pop
rol
ins
adc
call
repz
test
pop
aad
mov
xchg
dec
pop
pushf
add
sti
inc
mov
mov
lock
aad
aas
pop
mov
or
mov
call
mov
sysret
shl
adc
mov
add
or
int3
and
jecxz
inc
cmp
dec
and
or
inc
shl
push
push
pop
dec
shl
js
xor
xor
cwde
movs
test
shl
mov
add
enter
mov
xlat
in
add
call
ss
clc
add
jg
or
adc
sbb
cmps
imul
inc
rcl
je
pop
dec
mov
setae
mov
xchg
mov
add
arpl
sub
xor
jne
out
pop
mov
repz
outs
mov
je
out
mov
xchg
pop
push
mov
cmps
sti
pop
xlat
sar
cld
add
or
and
shl
rol
rcr
xchg
add
cmp
add
mov
fild
dec
cmp
(bad)
popf
sub
or
mov
add
cmp
push
xchg
mov
daa
or
add
aas
cmp
sbb
fdivr
pop
adc
sysret
enter
adc
sysret
ficomp
neg
sbb
pop
or
jnp
fs
sysret
sbb
pop
xchg
mov
add
clc
mov
rol
fcmovnb
mov
or
add
add
adc
cmp
add
add
ins
pop
add
retf
mov
inc
loopne
add
add
(bad)
mov
(bad)
or
adc
mov
sbb
ss
add
add
(bad)
and
outs
and
cmp
call
add
mov
inc
add
jle
pop
mov
cmp
test
shl
add
cdq
add
enter
pop
mov
inc
inc
idiv
mov
mov
in
call
xor
shl
push
cmp
push
ficomp
and
pop
fisubr
add
in
inc
loopne
add
xor
or
dec
add
pusha
or
shl
loop
inc
hlt
lock
imul
pusha
or
adc
inc
fld
sub
aas
add
inc
mov
scas
loopne
push
push
jbe
cmp
(bad)
repnz
inc
add
sub
enter
arpl
add
fdiv
push
push
xchg
repnz
inc
and
add
or
adc
popa
mov
imul
(bad)
test
xor
cmps
imul
call
add
and
enter
add
add
jmp
adc
xor
dec
ins
push
lods
(bad)
fdivr
sbb
lock
add
xchg
inc
mov
movs
pusha
adc
aas
or
mov
adc
and
nop
ret
adc
loopne
add
add
(bad)
(bad)
mov
or
scas
add
dec
and
(bad)
mov
sub
add
enter
xchg
cmp
cli
or
or
ret
(bad)
in
cmp
hlt
adc
mov
stc
daa
add
leave
sbb
into
sbb
ror
and
sahf
mov
(bad)
(bad)
(bad)
jmp
test
lds
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
(bad)
(bad)
(bad)
(bad)
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
(bad)
(bad)
(bad)
call
imul
(bad)
div
jl
mov
popf
sti
jmp
stos
push
inc
mov
(bad)
(bad)
(bad)
push
sub
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
(bad)
dec
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
cli
(bad)
(bad)
(bad)
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
mov
add
int
int
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
(bad)
(bad)
(bad)
jmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
(bad)
(bad)
(bad)
jmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
(bad)
(bad)
(bad)
push
and
loop
mov
jp
popa
push
pop
sar
jl
mov
das
(bad)
(bad)
(bad)
(bad)
inc
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
ds
(bad)
(bad)
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
inc
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
sar
(bad)
(bad)
jmp
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
hlt
(bad)
(bad)
call
and
dec
dec
gs
std
or
in
ficomp
frstor
adc
inc
stos
mov
pop
add
ins
dec
or
pcmpgtb
aas
pop
into
xchg
inc
(bad)
pushw
or
or
iret
add
push
sar
imul
sub
xor
cmp
sub
add
(bad)
(bad)
push
cs
and
popa
jne
gs
and
outs
aaa
adc
ja
bound
inc
imul
and
(bad)
push
and
dec
and
inc
dec
push
push
and
push
inc
push
push
inc
inc
mov
lahf
imul
scas
or
ror
push
lds
push
mov
fld
or
jnp
dec
and
add
sub
adc
pop
adc
add
or
aaa
or
or
push
inc
arpl
mov
das
jo
out
or
jbe
adc
dec
adc
or
pop
or
fadd
or
or
xor
add
in
jg
inc
aam
and
bound
push
ins
add
sub
sub
add
add
mov
jle
out
adc
mov
(bad)
bound
pushf
sub
loop
jnp
mov
or
or
or
sbb
mov
mov
pop
xchg
mov
jg
pop
add
icebp
pop
int3
add
daa
pop
or
pop
adc
pop
adc
int
adc
(bad)
pop
loop
adc
cmp
or
cmp
add
jbe
test
and
mov
aas
das
xchg
inc
fldcw
imul
sub
or
pop
js
xor
into
dec
push
ins
cmps
inc
clc
xor
add
or
cs
mov
mov
test
cmp
or
das
jnp
pop
outs
rol
outs
test
jnp
gs
rol
push
add
jo
in
mov
mov
or
add
pop
stos
daa
cmp
jae
sti
sahf
ins
cwde
rcr
jno
iret
mov
pop
jb
or
mov
pop
jae
pop
or
out
popf
mov
jae
fistp
add
out
and
js
sbb
and
outs
loop
test
pcmpeqb
in
or
adc
or
cmp
hlt
or
adc
add
aaa
aas
jne
inc
imul
pop
cdq
pop
jne
add
adc
push
mov
add
test
mov
pop
or
pop
jbe
lahf
push
pop
mov
jbe
pop
inc
jo
or
jbe
jmp
pop
pop
ja
ja
pop
and
fcom
js
add
add
arpl
lods
je
pop
mov
js
out
mov
pop
pop
add
or
and
or
add
addr16
or
ja
js
adc
pop
int3
mov
jns
inc
and
neg
lahf
jns
push
pop
add
ret
sub
mov
jns
in
pusha
mov
adc
jns
adc
out
cmp
or
jp
fdiv
push
jp
sbb
pop
jge
test
or
mov
add
cmp
or
(bad)
xlat
std
scas
and
or
add
pop
or
retf
jge
add
packuswb
retf
mov
(bad)
adc
outs
ds
or
or
or
pop
mov
sti
xor
les
or
enter
jae
unpcklps
enter
pop
ins
add
cmp
add
pop
out
push
sbb
aas
dec
bswap
scas
aas
pusha
aas
aaa
enter
setno
clc
lahf
mov
shl
or
int3
adc
mov
push
add
loop
inc
and
adc
inc
pop
add
(bad)
jmp
or
mov
sbb
sbb
pop
pop
inc
test
pop
and
je
aas
pop
push
cmp
inc
dec
shl
dec
daa
stos
test
out
jg
xor
loop
adc
shl
aas
or
jae
dec
inc
jmp
aas
inc
push
pop
arpl
cmp
cmps
test
lea
add
invlpg
test
das
sbb
sti
and
bound
pop
sbb
je
pop
sub
and
test
call
jns
stos
add
in
pop
inc
add
push
jge
sub
jae
or
ss
fcom
push
adc
popa
ins
ins
outs
arpl
aas
ins
outs
imul
test
ins
gs
inc
sub
outs
jne
pop
outs
pop
jb
outs
addr16
mov
push
sub
jb
inc
pop
fsubr
inc
pop
pop
inc
popa
arpl
pop
(bad)
std
(bad)
fldenv
ds
imul
fstp
inc
sti
add
mov
arpl
fs
push
jecxz
and
push
arpl
cmp
rcl
aas
and
inc
inc
loopne
jg
and
aas
and
jne
pop
jo
je
inc
push
aas
push
aad
test
bound
pop
imul
jb
inc
push
inc
push
jb
imul
dec
add
sub
jnp
jne
arpl
addr16
xor
inc
inc
inc
dec
and
popa
outs
fcomp
aad
pop
push
sbb
pop
retf
sub
and
xlat
pop
push
jo
pop
push
fldcw
(bad)
cmps
jmp
mov
mov
or
or
pop
and
xor
or
test
sub
and
rol
dec
add
and
test
add
sar
pop
mov
popa
jp
or
add
jmp
jl
or
or
pop
gs
or
fbstp
sub
jae
xor
cmp
or
sti
ja
ja
data16
inc
inc
or
jns
or
or
mov
push
imul
or
sti
imul
ins
(bad)
jbe
or
ins
adc
out
mov
or
xchg
jo
jo
sub
out
push
or
or
push
jae
jae
jmp
jmp
jae
jae
or
dec
je
or
scas
jmp
pop
jne
jne
jbe
jp
sub
leave
mov
push
sub
mov
add
adc
jo
inc
daa
adc
out
cmps
or
add
xlat
cmp
or
dec
add
cmp
add
add
sub
arpl
add
(bad)
rcl
imul
sbb
inc
mov
scas
add
pop
jo
shl
and
adc
and
jnp
add
add
jns
shl
jnp
inc
xor
gs
xor
add
pop
jae
and
add
sbb
jae
jbe
outs
add
sub
mov
jae
cmp
dec
push
daa
pop
test
add
outs
in
adc
xor
add
inc
test
leave
xchg
adc
sub
xor
sbb
or
dec
addr16
fcomp
add
popa
adc
add
pop
aaa
cmp
or
sbb
or
lods
push
pop
mov
imul
cmc
lods
js
mov
sbb
push
outs
add
or
pop
lds
je
add
add
popa
lahf
sbb
fiadd
sbb
loop
loope
movs
mov
pop
and
out
jb
xor
mov
fxam
or
inc
dec
inc
ret
pop
mov
dec
sbb
add
inc
inc
push
or
icebp
sub
or
(bad)
icebp
iret
add
inc
cwde
sub
jge
jae
pop
test
inc
adc
mov
push
out
(bad)
dec
and
add
int
mov
jb
and
popa
push
adc
xchg
jg
add
mov
scas
xchg
and
and
ja
js
rol
dec
add
xchg
jmp
sbb
ror
dec
xchg
mov
pop
xor
add
push
or
adc
scas
inc
or
mov
pop
pop
sbb
popa
neg
loope
outs
int
and
les
sbb
retf
mov
and
pusha
out
ss
add
pmaddwd
inc
add
xor
popa
and
sub
pop
pop
xchg
sar
add
pop
dec
and
add
out
sub
sar
xor
sub
xor
mov
add
add
sub
mov
es
(bad)
sbb
inc
add
mov
in
aas
cmp
or
inc
add
and
outs
inc
inc
add
mov
jmp
jae
and
movs
ins
mov
ret
and
dec
xor
inc
xor
adc
out
mov
and
add
leave
push
mov
pop
inc
dec
pop
imul
mov
repz
inc
inc
sub
mov
inc
add
aaa
dec
std
or
inc
or
aaa
lds
outs
mov
xchg
cmp
dec
push
adc
cmp
xlat
fwait
ret
mov
push
imul
and
icebp
mov
and
js
daa
xor
jmp
or
jb
adc
ja
mov
cdq
pop
ss
fld
push
rcr
add
pop
push
out
and
and
ins
jne
arpl
sbb
test
popa
add
cmp
jno
and
sbb
jmp
pop
dec
pop
xchg
(bad)
cmp
gs
sub
xor
je
jl
leave
repz
cmp
xchg
and
xlat
sub
and
mov
xor
add
and
inc
mov
fwait
imul
xchg
arpl
pop
shl
sub
adc
in
ins
mov
lock
and
js
test
mov
or
dec
dec
push
aaa
pop
fdivr
sub
cmp
sbb
push
sbb
mov
daa
sub
adc
or
and
mov
sub
jb
shl
xlat
arpl
jnp
push
add
les
adc
pop
push
inc
add
jmp
and
sbb
ret
lods
sbb
add
adc
lahf
ins
rol
(bad)
and
jae
arpl
mov
fwait
aad
push
jo
and
inc
movs
xor
icebp
jo
test
add
gs
or
imul
xchg
pop
mov
and
inc
das
loope
push
out
add
mov
jg
lock
mov
stc
xchg
ja
maxps
(bad)
jnp
adc
scas
(bad)
dec
aaa
xchg
daa
mov
inc
and
cmp
cdq
add
sbb
or
ror
jecxz
sbb
cmp
fist
sbb
push
cmp
inc
and
test
mov
or
popf
popa
sbb
xchg
inc
push
fdivr
stc
ret
iret
lea
cmp
(bad)
addr16
inc
inc
addr16
sbb
sub
dec
or
add
fnstcw
loopne
mov
or
sbb
(bad)
cmp
cmp
mov
sub
or
mov
add
push
in
popa
xchg
stos
in
mov
ins
ins
mov
aaa
pop
cmp
and
ret
or
adc
sbb
rol
mov
inc
adc
sbb
fld
(bad)
xor
sub
sbb
lods
fiadd
add
mov
jno
rol
ret
add
sub
mov
add
mov
cmp
test
mov
sub
or
shl
lock
inc
pop
and
ror
sbb
mov
cmps
sbb
add
test
and
sub
cdq
out
add
xchg
jecxz
sub
dec
outs
adc
lea
rcr
xchg
aas
inc
jge
and
push
mov
loope
add
dec
out
cs
popa
xor
push
xor
mov
and
loopne
jmp
lods
sbb
(bad)
adc
and
jne
scas
ud1
stos
fld
mov
dec
fisttp
adc
jne
pop
xor
inc
daa
add
int3
imul
lea
inc
(bad)
add
or
call
xchg
shl
aaa
push
aaa
mov
retf
in
sub
jnp
pop
iret
push
jecxz
sbb
inc
xchg
add
lds
add
push
mov
rcl
xchg
inc
adc
mov
jnp
loopne
pop
fwait
push
icebp
jae
and
add
test
inc
pop
xor
popf
ja
push
xchg
add
sbb
add
or
inc
in
sbb
add
dec
jo
nop
loope
outs
popf
sbb
jge
add
sub
test
hlt
dec
int
and
in
pusha
add
rol
div
out
pop
and
sbb
cmp
add
call
fisub
xor
push
cmc
jnp
or
sbb
and
fisttp
xor
xor
cmp
cwde
sub
pop
aas
outs
out
dec
push
je
add
mov
and
sti
pop
sbb
das
repz
add
add
call
jae
ret
dec
add
add
add
xlat
loope
popf
dec
mov
out
icebp
es
add
outs
or
sub
mov
jns
dec
add
aas
xlat
jge
mov
add
pop
add
fisttp
das
inc
inc
mov
pop
pop
call
pop
add
dec
fisubr
sbb
rcr
adc
popa
add
mov
add
and
inc
test
add
stos
push
sbb
sti
xor
xchg
(bad)
iret
out
cmp
movs
push
pop
or
sbb
add
sbb
ret
xchg
push
iret
das
inc
clc
retf
adc
xlat
ins
add
gs
cmp
add
add
add
fs
sub
imul
pop
mov
(bad)
and
mov
es
add
sub
in
in
add
lods
outs
popa
add
adc
cmp
ins
and
and
addr16
popa
cmp
xchg
and
xchg
mov
and
add
pushf
xor
pop
ins
in
stos
mov
outs
add
js
sub
mov
push
jmp
test
push
js
xchg
sbb
daa
jecxz
pop
fstp
movs
fnsave
iret
push
add
jge
push
sbb
lea
mov
neg
pop
add
pop
jecxz
ror
daa
xor
xchg
loope
ja
jmp
inc
inc
ret
bound
adc
sbb
xor
js
loope
retf
and
or
or
mov
pop
mul
fnstenv
jge
daa
lods
jp
addr16
fwait
int3
jne
lock
adc
je
mov
dec
scas
jmp
or
lds
pop
cmp
xor
test
xchg
icebp
mov
cmp
jne
add
in
xor
push
inc
add
dec
push
jns
icebp
xor
aad
cld
cmps
cld
mov
or
or
fwait
outs
or
inc
xor
std
push
loope
pop
add
fstp
imul
outs
add
jne
pop
add
pop
and
adc
test
js
jmp
adc
popa
pop
inc
jg
jge
pop
add
add
cmp
pop
fsub
xor
frstor
xchg
cmc
shl
xor
or
jp
pop
cmps
or
add
xchg
xor
adc
inc
xor
pop
jb
out
mov
mov
adc
cmc
ins
gs
cdq
mov
(bad)
or
xchg
inc
movlps
cmc
aas
add
test
or
xor
sbb
pop
xor
mov
(bad)
pop
outs
lea
cmp
in
imul
or
jae
test
das
push
int3
push
cmp
sbb
add
push
or
mov
pop
jge
jae
push
inc
cwde
shl
and
jp
js
cmp
cdq
xor
sbb
nop
sar
es
mov
ja
and
jns
imul
jmp
jmp
mov
rcr
add
xchg
ret
dec
jl
cmp
add
movs
mov
ja
xchg
jp
or
in
pop
stc
pop
pop
pop
jle
pop
add
(bad)
mov
add
ins
mov
test
loope
imul
shr
or
adc
pusha
add
icebp
jno
sbb
pop
adc
cmp
mov
adc
fdivr
adc
push
test
lds
aad
call
fldcw
cmp
fdivp
aad
stos
and
jmp
lds
xchg
lea
mov
in
add
(bad)
pop
imul
sub
in
cmc
xchg
sbb
jg
add
add
mov
sub
jno
int
ins
loopne
add
adc
jp
sub
jle
(bad)
fwait
ror
mov
imul
rcl
ins
push
xchg
add
cmps
and
dec
cmps
pop
add
mov
sbb
pusha
popa
jo
gs
hlt
fnstenv
mov
mov
inc
mul
cmp
xchg
sub
imul
add
popa
pusha
mov
push
dec
pushf
pop
das
push
sbb
xchg
shl
xor
aas
jno
or
in
test
add
outs
add
cmp
test
mov
jne
xchg
jp
in
add
sbb
jmp
jns
pop
mov
cld
jns
scas
mov
ins
test
pusha
push
push
gs
add
das
push
cmp
jmp
pop
cdq
test
add
xor
xchg
xor
test
clc
clc
lea
arpl
lds
js
and
aas
mov
jg
sti
imul
push
outs
or
cmc
fbstp
mov
lahf
sbb
fs
add
mov
sbb
ret
or
mov
mov
(bad)
mov
daa
retf
leave
and
test
xchg
mov
add
jno
or
mov
or
ror
dec
imul
mov
xchg
int
(bad)
iret
sti
shl
sub
xchg
or
add
cdq
adc
cli
call
loope
xor
inc
aas
cdq
gs
outs
dec
das
fstp
cmps
iret
sub
jp
push
push
pop
cmps
sbb
(bad)
cmc
sub
js
ret
loope
add
and
mov
gs
enter
jno
mov
pop
push
imul
mov
popa
sub
ins
ja
xchg
xor
ins
stos
add
xor
or
test
dec
adc
aas
push
pop
add
push
cmp
pop
aad
jmp
ror
xlat
adc
in
test
rcl
inc
popa
aaa
sub
add
push
gs
mov
xchg
xor
jg
ja
mov
js
push
dec
inc
jge
sub
inc
adc
sbb
xor
shl
xor
clc
loopne
push
and
cmps
popa
dec
in
or
jecxz
mov
test
cmp
xor
fnstsw
cmps
mov
xor
cmc
push
out
aad
lds
loopne
addr16
out
aaa
adc
idiv
sbb
pop
add
add
add
add
aaa
jg
add
inc
add
cmp
add
add
add
add
out
scas
sti
aas
add
push
add
add
add
sbb
sub
add
sub
jbe
icebp
inc
add
add
and
cmp
mov
add
add
add
sub
adc
inc
add
dec
inc
mov
xor
aaa
xor
das
xor
push
mov
sub
add
fisttp
add
cmp
int3
inc
ret
pop
add
dec
cmp
pop
and
push
cmp
ins
popa
or
mov
pop
xlat
jge
aaa
inc
dec
dec
add
add
aaa
gs
push
pop
ret
popf
dec
xchg
adc
and
sbb
push
dec
std
lock
and
das
pop
xor
dec
les
pop
xlat
push
cmp
scas
clc
sbb
xor
jae
sbb
pop
and
mul
xchg
and
xor
dec
add
add
mov
fisttp
add
stc
jo
sbb
dec
(bad)
mov
rcr
cmp
pusha
leave
inc
inc
and
add
stos
xchg
xor
sar
stos
jo
ja
xor
fstp
lahf
jmp
jle
and
aaa
jnp
dec
inc
adc
mov
push
add
add
pop
inc
ins
or
mov
sub
sbb
pxor
add
xor
cmp
xor
jae
xor
xor
inc
add
inc
addr16
push
fmul
pop
inc
arpl
add
inc
mov
or
xor
inc
cmp
rcl
loope
not
xor
xchg
mov
sti
jecxz
(bad)
aas
add
cmp
sbb
outs
mov
xor
neg
xor
inc
lods
cmp
inc
or
adc
out
out
xor
cdq
push
movs
fdiv
leave
lds
and
ds
shl
or
cdq
cmp
add
add
add
or
mov
sbb
adc
adc
sbb
loope
in
xor
jae
jns
movs
jne
add
add
sti
xchg
dec
cmp
repz
lds
push
js
sbb
xchg
ds
pop
and
arpl
pop
xor
jecxz
imul
inc
add
xchg
dec
out
adc
add
xlat
adc
cmp
stos
jecxz
cli
fwait
add
shr
sub
lds
adc
xor
xor
xor
dec
xlat
out
cli
rcr
xor
cmp
cmp
sbb
dec
ins
add
ins
xor
repz
hlt
rol
test
xchg
ret
(bad)
dec
push
dec
cmps
and
mov
dec
(bad)
jns
in
call
mov
ja
rcr
fcomp
aas
add
dec
es
loopne
xchg
loope
push
inc
ja
inc
or
lea
sbb
lds
and
dec
mov
cmp
mov
imul
scas
and
popa
(bad)
repz
adc
ret
cmp
or
rcr
ror
leave
jne
add
aaa
and
xor
cmp
test
mov
aas
adc
nop
cwde
pusha
inc
dec
add
test
xor
xchg
icebp
add
adc
sbb
mov
push
adc
int
add
pusha
cmp
cmp
xor
out
cmp
xor
xor
es
clc
(bad)
xor
mov
imul
loope
cmp
cmp
xchg
cmp
mov
adc
and
xchg
jge
add
mov
xchg
xor
mov
sub
sub
imul
in
in
(bad)
inc
or
xchg
cmp
sub
ret
xchg
dec
dec
cmps
xchg
dec
xchg
inc
mov
popa
sub
xlat
retf
cmp
mov
xor
and
sbb
pop
jnp
sub
js
adc
xchg
call
cmp
jecxz
js
jne
sbb
push
mov
jae
jbe
jge
add
sub
add
inc
call
dec
push
pop
adc
sbb
cmp
sub
das
sub
sub
popa
push
aas
aad
js
cmc
sbb
push
cdq
ds
adc
sti
dec
jae
xchg
neg
inc
call
inc
add
cmp
rcl
jno
xchg
aam
ror
add
(bad)
fsub
and
adc
jge
dec
(bad)
dec
sub
mov
leave
int3
sbb
inc
adc
jge
dec
add
cmc
cmp
pop
cmp
push
jmp
inc
cmp
rcl
xor
sysret
or
leave
jae
mov
(bad)
jmp
and
inc
or
call
imul
stc
xor
xchg
mov
pop
add
(bad)
daa
and
mov
stos
popf
add
in
xor
pop
or
cmp
fld
push
sysret
pop
xor
(bad)
(bad)
pop
fwait
sub
sar
cmp
xor
add
jns
ja
retf
push
and
jnp
fadd
lahf
xor
test
ror
outs
adc
dec
jmp
cli
sahf
mov
aas
cdq
cmps
dec
or
or
icebp
daa
test
cmp
ins
jne
ret
int
cmp
mov
rcl
daa
and
lahf
cmp
push
sbb
add
push
int3
arpl
xchg
aad
dec
pop
xchg
hlt
and
inc
jmp
add
and
stos
sti
xchg
or
sub
sbb
push
inc
xchg
mov
mov
js
imul
ror
push
sbb
jp
push
mov
push
inc
repz
push
mov
xchg
sub
mov
add
xor
adc
cdq
test
xchg
cmp
xchg
pop
clc
adc
add
add
xchg
unpckhps
or
stos
dec
(bad)
pop
fcom
push
(bad)
jecxz
sbb
std
and
lds
and
cmp
sub
add
push
add
neg
jg
aaa
(bad)
aaa
pop
add
daa
in
arpl
outs
shr
add
ror
dec
or
lock
push
or
fist
out
xlat
mov
dec
cmp
push
scas
push
(bad)
(bad)
stos
dec
adc
stos
in
adc
fadd
imul
rol
mov
cmp
ret
jge
outs
aas
movs
bound
dec
iret
jae
movs
or
pop
mov
fiadd
cmc
std
shl
inc
jns
aaa
lds
xchg
nop
cli
add
sub
imul
loop
pop
pop
pop
xor
push
dec
jo
jns
aaa
jecxz
(bad)
loope
mov
aas
cmp
adc
mov
das
in
jae
and
push
ds
cmp
inc
test
cmp
mov
add
or
mov
lea
cmp
jae
aas
and
dec
xbegin
inc
inc
mov
dec
mov
add
and
sbb
jmp
xor
pop
pop
or
mov
jno
rcl
jg
add
sub
outs
jno
jmp
mov
shl
test
inc
jae
sti
sbb
cmp
add
fild
loope
lds
cmp
xchg
dec
mov
jg
loopne
mov
das
sti
aas
cmp
jo
push
cmp
dec
repz
add
js
unpckhps
or
cdq
jmp
call
and
sbb
mov
(bad)
add
xor
mov
das
inc
sub
sub
ret
xor
sub
call
xchg
or
sar
or
and
cmp
jo
mov
add
addr16
xchg
dec
jne
add
or
jnp
push
daa
xlat
lock
xor
adc
sub
loopne
test
in
mov
or
jae
or
jl
push
aas
(bad)
add
mov
xor
retf
sbb
jl
sub
out
or
jno
lods
out
cmp
sbb
fdiv
scas
arpl
add
inc
xor
test
je
loop
fstp
pop
cmp
loop
xor
add
cwde
add
(bad)
and
push
iret
jge
xor
(bad)
out
jmp
and
xchg
lods
je
and
mov
movs
or
loope
xor
push
ret
arpl
xor
cmp
pop
sbb
add
sbb
cmp
adc
adc
ret
jae
out
clc
jnp
cmp
xchg
aas
cmps
and
das
jo
scas
imul
xor
es
wrmsr
jg
xlat
mov
inc
or
aam
sbb
imul
cmp
cmp
rol
mov
stos
shl
add
add
popf
inc
xor
cmp
jecxz
push
inc
mul
jne
sbb
loopne
xlat
popf
icebp
xor
das
pop
mov
inc
sub
dec
(bad)
gs
push
std
inc
adc
hlt
shr
test
imul
(bad)
dec
lea
out
in
sbb
adc
and
das
push
repz
inc
outs
jge
cmp
inc
mov
ja
lds
add
pop
pop
mov
mov
adc
imul
rol
ss
inc
inc
cmp
xchg
sbb
mov
test
jmp
and
xor
sar
mov
xor
dec
cmp
cmps
add
xor
push
addr16
and
push
sub
sbb
inc
add
or
(bad)
sbb
sbb
push
fucomp
ins
cmp
lock
inc
cmp
mov
test
or
stc
dec
std
mov
push
stos
adc
or
add
loope
mov
and
sub
add
shr
push
xchg
cmp
xor
lock
sbb
movs
xchg
xchg
dec
inc
addr16
or
int
test
or
pop
test
add
add
lea
pop
ret
inc
jmp
daa
add
sbb
sbb
xchg
fild
fwait
jecxz
xchg
loopne
pop
mov
ret
imul
int
loope
and
xchg
mov
lods
xor
xor
(bad)
movs
inc
add
leave
mov
xor
mov
es
call
inc
or
jp
jnp
inc
xlat
sbb
or
adc
push
les
es
inc
test
dec
cmp
pop
push
js
and
xlat
inc
das
sub
inc
lea
and
sbb
push
or
cmp
inc
add
push
cmp
cmps
dec
adc
and
popa
add
nop
sub
jge
xor
push
scas
push
and
addr16
xor
mov
fadd
inc
retf
jo
loopne
sbb
adc
js
sbb
and
fmul
cmp
add
or
jne
js
cmc
inc
add
push
ret
repz
cmp
in
xor
dec
cmps
int
idiv
sub
and
loopne
icebp
xor
jo
add
jmp
iret
sbb
bsf
dec
pop
shl
push
sahf
push
mov
jnp
xchg
push
inc
inc
(bad)
retf
data16
arpl
cmc
cmps
jnp
shl
cmp
fadd
add
outs
outs
add
jnp
mov
in
scas
xchg
jmp
jecxz
cmps
adc
clc
add
add
mov
jmp
loopne
fld
lock
rcl
test
stos
xchg
sbb
test
gs
ret
daa
cmps
es
ret
imul
rol
add
mov
ret
sbb
lds
ret
lds
cmovle
jo
inc
mov
or
ins
idiv
sbb
mov
ins
daa
imul
dec
xchg
ret
loop
jae
and
retw
pop
sti
stos
jnp
dec
cwde
cmp
rol
adc
rol
mov
inc
sub
mul
int
xchg
or
int
dec
inc
stos
mov
(bad)
fild
mov
(bad)
add
push
xor
xchg
inc
pop
ret
js
dec
fistp
cmps
dec
cmc
cmc
xor
xchg
lock
out
add
mov
lahf
aas
scas
mov
stc
in
popf
add
push
push
mov
fwait
dec
int
loopne
inc
cmp
mov
aaa
inc
mov
out
add
and
scas
or
ret
cmp
(bad)
loope
jnp
stos
imul
gs
sbb
js
pop
dec
cmp
add
icebp
cmp
mov
jmp
pushf
sbb
out
cmp
test
pop
or
inc
ret
push
mov
pop
pop
scas
(bad)
and
not
mov
sub
inc
jns
cmp
fbstp
ins
mov
jp
fild
cmp
xor
aas
sahf
aaa
fwait
cmp
add
loope
shl
jmp
pop
neg
add
adc
jl
cmp
xor
inc
sub
xor
je
imul
sbb
mov
pop
fldcw
(bad)
call
jbe
popf
xchg
test
int
mov
or
je
(bad)
inc
mov
or
add
or
add
or
and
xor
mov
scas
scas
sbb
push
jae
pop
push
xchg
sub
push
dec
mov
(bad)
or
xchg
stos
inc
mov
and
psraw
sahf
mov
or
adc
mov
lods
ror
out
mov
or
add
xlat
jge
test
es
mov
stos
or
add
cmp
lods
or
test
sbb
mov
pop
scas
and
sar
xchg
mov
inc
sbb
pop
imul
mov
dec
and
inc
or
stos
push
fwait
pop
jne
jmp
or
(bad)
faddp
fstp
aad
add
mov
sbb
pop
(bad)
xor
neg
add
add
mov
lods
adc
pop
test
jns
mov
loopne
outs
ss
xor
inc
mov
jnp
or
aaa
idiv
dec
pop
ret
mov
mov
movs
pop
lods
out
jae
lds
or
cmp
mov
add
scas
movd
int
fcmovnb
or
jne
or
and
sbb
xchg
cmps
or
pusha
sbb
cmc
sub
(bad)
mov
aas
std
mov
inc
fild
mov
jae
dec
mov
scas
or
push
ins
jnp
inc
fild
mov
sub
or
popf
mov
sub
sbb
or
adc
fnsave
loope
cmc
ret
inc
sbb
ror
popa
test
and
test
jp
mov
outs
lds
hlt
xor
and
jmp
or
mov
retf
or
xor
xchg
pop
mov
shrd
add
iret
dec
jns
aas
adc
jmp
fwait
and
scas
mov
mov
or
sub
add
mov
imul
gs
fisub
jge
push
mov
in
mov
cdq
mov
ja
xchg
mov
adc
and
ja
or
adc
cmp
xchg
addr16
aaa
jl
xor
xchg
je
xchg
lahf
int
mov
cmp
lahf
loope
retf
arpl
push
xchg
mov
test
gs
or
int
or
(bad)
adc
out
sub
pop
push
fst
push
mov
fidiv
sar
and
int3
pop
add
cmps
sbb
dec
cmp
xchg
inc
call
shr
ja
ret
lock
mov
mov
das
scas
mov
jnp
mov
sbb
pop
xor
std
or
mov
and
xor
xchg
dec
or
inc
sub
mov
xor
xchg
stos
out
mov
in
xor
icebp
or
outs
popa
xor
and
nop
inc
lds
mov
lock
aaa
xor
pusha
loopne
xor
add
sub
xlat
add
xchg
dec
jnp
cmp
or
sbb
in
lds
pop
(bad)
sti
or
add
int
out
int
pusha
adc
gs
mov
push
and
(bad)
or
jmp
inc
mov
scas
pmaxsw
cwde
add
and
or
or
lahf
or
xchg
jecxz
and
(bad)
jge
dec
movs
mov
fistp
jo
jno
add
imul
jne
iret
cmp
stos
and
lods
movs
push
or
and
mov
pop
mov
arpl
mov
or
add
lods
jnp
int
add
inc
inc
xlat
retf
(bad)
inc
movs
or
xor
fwait
adc
inc
mov
movs
stos
loope
test
mov
jmp
mov
add
loope
test
cmp
hlt
xor
jno
cmp
jbe
fisttp
fwait
cmp
add
dec
or
and
pop
mov
fbld
xchg
ins
test
call
mov
test
mov
mov
xchg
in
sbb
and
inc
inc
aas
inc
test
gs
clc
push
stos
out
adc
(bad)
add
mov
and
hlt
adc
pop
das
mov
or
imul
js
inc
mov
cmc
enter
jge
xor
push
xor
pop
cmc
rol
inc
and
gs
jmp
add
dec
or
xlat
scas
(bad)
(bad)
mov
add
stos
imul
in
sub
or
jns
adc
and
mov
ret
gs
ret
mov
or
outs
into
cmp
xchg
jge
popf
rol
add
pop
add
pop
ret
cmp
push
ins
mov
pop
dec
fmul
mov
mov
inc
or
in
pop
lahf
in
xor
js
scas
mov
mov
shr
xchg
xor
dec
sbb
pop
lea
cmp
sub
jp
cmp
cmp
cmp
stos
cmp
sbb
add
out
sar
inc
and
cmps
pop
jns
cmp
(bad)
gs
or
popa
iret
jne
outs
loope
test
stc
adc
and
xor
add
sub
lods
pop
ins
jp
int
mov
test
aam
jo
push
ror
fild
out
or
lea
and
xchg
xchg
ret
aas
cmp
and
or
add
cdq
xor
ret
fiadd
sbb
adc
bound
rcl
sbb
push
scas
lahf
mov
pop
cwde
dec
arpl
sub
rcr
shl
xor
frstor
arpl
pop
daa
add
sbb
test
jo
push
in
test
xlat
fiadd
ret
daa
pop
or
adc
in
sti
loopne
sub
or
cdq
loopne
popa
leave
or
sub
leave
scas
push
ja
je
xchg
outs
cmp
cmps
and
leave
pop
aas
cmp
sub
lea
mov
push
xor
jno
xchg
cli
cmp
mov
xor
xchg
jecxz
jecxz
js
dec
aas
adc
pop
cs
push
xchg
add
pop
pop
jge
gs
dec
popf
push
jmp
cmp
and
lock
adc
xchg
mov
jo
adc
mov
adc
inc
add
adc
lds
loope
cmp
add
pop
add
stos
fmul
popa
add
cmp
push
cmp
cmp
push
add
fwait
ss
outs
mov
add
data16
add
add
retf
mov
add
mov
das
or
cmp
sbb
jae
lds
repz
add
inc
push
scas
or
inc
loopne
xor
sti
mov
sbb
push
xor
add
mov
add
jae
adc
inc
loope
sbb
lods
icebp
adc
xchg
and
cmp
rol
pop
adc
add
add
push
icebp
paddsw
push
adc
loope
inc
aaa
dec
xchg
repz
push
xor
and
xchg
cmp
les
call
mov
or
inc
cmps
icebp
sub
xor
cmp
pop
outs
jns
add
add
adc
lock
das
add
adc
ret
xchg
sbb
fsubp
cmp
xchg
xchg
add
push
push
popa
push
add
push
popa
mov
push
add
push
lds
sub
and
and
sub
push
aaa
jmp
imul
and
pusha
add
xchg
mov
or
outs
test
jnp
xor
ins
mov
cmp
cmp
sbb
ror
push
aaa
xchg
and
adc
cmp
ins
sub
mov
mov
sbb
jecxz
imul
push
sub
ins
jae
add
mov
nop
repz
loope
add
jb
add
and
sbb
hlt
adc
push
jecxz
je
push
pusha
mov
cwde
stos
ret
lahf
sbb
retf
sar
dec
or
sbb
sti
pop
jno
inc
mov
das
sbb
(bad)
sub
pop
or
gs
xor
or
and
add
shl
sahf
out
or
or
pop
pop
pop
imul
inc
push
mov
or
pop
sbb
adc
mov
fidivr
arpl
xchg
jnp
sbb
cmps
jg
add
pop
xchg
and
dec
mov
xor
mov
mov
add
loope
icebp
jnp
and
aas
sbb
add
dec
add
ins
add
xlat
arpl
push
push
adc
add
mov
cmp
std
xor
jecxz
out
lahf
jecxz
repz
cmp
jne
fnstenv
push
and
sub
mov
shr
mov
stos
popa
and
inc
and
jge
adc
aad
neg
add
pop
mov
loop
sub
inc
inc
test
cmp
mov
jbe
adc
mov
popa
cmp
daa
xlat
call
sbb
mov
add
jmp
daa
push
cmp
jae
lahf
jne
das
mov
sbb
je
or
pusha
ret
cdq
mov
push
xchg
xchg
cmp
jmp
xchg
ins
xchg
and
mov
daa
pop
das
add
add
ins
cmp
sbb
mov
adc
sub
in
jne
retf
push
jo
retf
pop
dec
cdq
cmp
scas
ret
xchg
mov
dec
adc
sub
cmps
aad
xchg
xor
call
dec
push
je
int3
cmp
(bad)
adc
xchg
das
sbb
inc
push
pop
xchg
loopne
push
pop
sbb
out
add
inc
daa
mov
sbb
cmp
(bad)
or
pop
xchg
jg
add
icebp
arpl
or
outs
ins
add
popf
es
ret
ja
ins
(bad)
popa
and
(bad)
pop
(bad)
adc
cmp
pop
gs
lea
movs
sub
and
sbb
jecxz
in
int
sub
push
adc
cmp
xor
cmp
pop
je
rcl
xor
scas
xor
cmp
add
jge
push
imul
ret
jns
popa
add
adc
jae
adc
sti
js
(bad)
retf
jno
inc
jne
xor
jmp
push
mov
les
pop
es
xor
icebp
loop
lods
aad
dec
scas
inc
das
das
xchg
aas
stos
mov
xchg
mov
arpl
xchg
mov
xchg
sbb
pop
push
inc
movs
in
aas
fbld
popa
inc
daa
adc
mov
loope
sub
shr
or
xchg
arpl
jae
cmp
(bad)
sti
lds
pop
xor
jecxz
shl
push
sbb
add
call
sub
add
arpl
cmps
inc
popa
cdq
cmps
cwde
xor
pop
cmp
pop
mov
sub
loope
mov
push
push
adc
ins
(bad)
cmp
sub
loopne
inc
jp
jecxz
xor
rcr
push
push
mov
sbb
push
out
inc
rol
push
scas
retf
add
sbb
jno
push
outs
and
cmp
aaa
arpl
ret
add
mov
bound
xchg
adc
cmc
icebp
js
clc
jge
(bad)
add
popf
jnp
add
imul
shl
rol
test
cdq
or
(bad)
lods
xor
addr16
jne
rol
fldenv
test
loopne
out
icebp
xor
pop
jno
shl
popa
mov
iret
mov
cmps
frstor
dec
pushf
push
push
sbb
nop
cwde
hlt
fisub
gs
pop
adc
add
or
fimul
xchg
js
cdq
retf
in
xchg
sahf
xor
jb
sub
jo
pop
jns
rol
sti
push
(bad)
jnp
or
ja
cmc
js
dec
xlat
fstp
adc
adc
xor
inc
sub
and
jnp
jne
push
mov
dec
jp
dec
add
int
adc
setnp
add
cmp
aaa
imul
shl
cli
cmp
adc
or
push
nop
xlat
(bad)
mov
and
lods
cs
rcr
into
push
push
jmp
push
ret
jmp
fabs
push
pop
mov
std
sub
adc
pop
push
popf
cmp
mov
or
lahf
dec
fstp
loopne
xchg
adc
jo
add
mov
lds
mov
cdq
cmp
pusha
test
stos
ja
mul
sbb
addr16
jno
shr
sbb
out
dec
ret
enter
in
fs
jmp
retf
add
pusha
fwait
dec
inc
mov
(bad)
aaa
movs
mov
stos
add
xchg
push
out
mov
movs
and
cmc
mov
shr
pop
or
pop
(bad)
and
mov
dec
cmp
add
fnstenv
pop
xchg
push
dec
daa
int
add
mov
adc
test
test
aaa
or
std
add
int
shr
add
(bad)
out
push
mov
call
fld
lds
or
sbb
pusha
or
enter
stos
pop
xor
inc
add
loopne
push
les
cmc
jge
push
ja
push
add
rcl
clc
and
push
xor
outs
jecxz
inc
mov
mov
adc
adc
lods
aas
js
in
mov
add
and
imul
xor
add
push
push
and
pop
out
add
jg
xchg
push
sub
add
lea
adc
sbb
mov
sbb
pop
sbb
mov
push
pop
das
adc
test
in
in
cmp
jp
sbb
scas
pop
xor
add
in
call
imul
out
sbb
aas
shl
jecxz
arpl
inc
push
dec
pop
imul
mov
mov
or
popa
jecxz
outs
test
inc
ror
mov
loope
and
jae
cdq
pop
ins
push
es
jmp
mov
std
sbb
adc
mov
addr16
add
push
cmp
mov
lahf
outs
and
jge
sbb
xchg
out
cmc
call
jae
pusha
es
mov
imul
pusha
xor
dec
mov
sti
dec
outs
pop
inc
loope
inc
iret
adc
or
cmp
fwait
jle
in
add
sub
pop
les
int
jae
mov
scas
and
mov
jp
nop
mov
mov
and
inc
popf
sbb
dec
jg
push
jl
(bad)
mov
mov
sub
in
add
sbb
cmp
xor
xchg
repz
sbb
jne
or
je
jecxz
or
call
jge
add
jp
int3
shl
aaa
jne
push
pop
fst
xor
setge
and
jo
push
mov
sbb
sbb
xor
xor
js
xchg
xor
in
in
mov
(bad)
xor
or
jbe
shl
loope
xor
xchg
pop
mov
rep
mov
pop
adc
dec
addr16
mov
inc
pop
jbe
mov
in
push
sbb
sbb
mov
dec
popa
inc
ja
into
cmc
adc
pop
retf
loopne
js
imul
das
pop
test
popf
fadd
mov
jne
sbb
dec
das
or
inc
adc
lahf
sub
je
pusha
cmp
xor
mov
std
pop
ror
lock
lds
sub
jmp
call
dec
jmp
cmp
cdq
and
sbb
cmp
pop
push
mov
fisttp
shr
les
idiv
add
retf
pop
jnp
lea
ins
add
cmps
sub
das
loope
add
popa
cmps
jns
out
test
popa
inc
jge
in
pop
shr
cmps
es
xchg
mov
or
push
push
or
ret
jecxz
loope
sahf
fbstp
test
pop
cmp
cmp
add
rcl
push
stc
(bad)
adc
cmp
imul
les
mov
sbb
test
push
mov
and
adc
adc
mov
ror
cmps
cdq
sbb
cmps
inc
pop
xchg
icebp
push
outs
add
sbb
jle
or
jl
outs
xor
lock
jbe
xchg
cmp
sbb
dec
adc
out
xchg
jo
ret
add
pop
add
push
adc
aad
shr
movs
sub
add
xchg
add
outs
aad
mul
daa
add
adc
pop
jno
adc
sar
cmp
xor
mov
aaa
mov
xchg
adc
pop
icebp
pop
inc
mov
mov
popa
and
loope
iret
sub
push
cdq
imul
pusha
test
(bad)
inc
sbb
adc
sahf
push
and
lea
sub
icebp
push
out
sub
or
jp
mov
jnp
mov
les
sub
xor
inc
xchg
pop
jno
adc
sbb
iret
add
imul
in
jne
test
and
cmp
das
rol
ja
inc
pop
pusha
cmp
sbb
enter
xchg
xor
lock
jne
sbb
je
push
sbb
cli
add
loope
pop
sbb
lods
jne
add
lahf
jecxz
mov
leave
rol
inc
(bad)
add
cmp
lahf
sub
sbb
lods
cmp
sub
loope
pop
pop
and
xlat
lds
popa
repz
loop
and
cmp
bound
pop
xchg
popa
jno
add
pop
popa
in
cmp
pusha
or
sbb
mov
mov
sub
mov
shl
aam
or
adc
dec
shr
sbb
in
xchg
jp
cmp
std
lock
stc
arpl
add
aam
jbe
xchg
sbb
xor
jge
pop
sub
js
inc
add
xchg
adc
or
inc
imul
jno
pop
sbb
inc
cmp
mov
call
xor
sub
pop
dec
dec
jo
mul
xor
mov
pop
and
cmps
popa
sub
jmp
outs
and
push
std
mov
dec
pop
cmp
sti
aad
sar
add
or
push
inc
dec
xor
xor
xchg
mov
and
leave
mov
fbld
add
mov
jbe
pusha
neg
jmp
push
repz
les
popf
mov
push
cmc
pop
or
or
mov
ins
pop
pop
sub
xchg
jae
pop
sub
loopne
cmp
gs
fidiv
fist
hlt
imul
mov
cmp
cmp
sti
das
adc
or
cmp
add
or
jno
add
call
inc
xchg
stc
ins
mov
popf
in
mov
mov
test
shl
setae
push
jnp
cwde
loop
aas
out
mov
push
mov
push
jne
je
xchg
jp
add
std
pop
int
mov
jo
fisttp
(bad)
pop
mov
add
jmp
imul
mov
and
cmp
or
cdq
sbb
pop
or
out
test
adc
jae
ins
punpcklbw
mov
faddp
push
inc
pop
mov
adc
icebp
lock
mov
les
mov
push
cmp
sub
lds
inc
cdq
dec
add
xchg
xlat
and
shr
add
cmp
adc
or
popa
xor
test
jno
add
or
loope
scas
xor
and
pop
sbb
(bad)
pusha
std
lods
push
dec
add
int
inc
mov
xor
or
loop
push
std
jecxz
add
aad
fild
aad
push
sbb
or
adc
stos
cli
jecxz
add
sbb
ret
mov
jb
mov
mov
daa
and
jp
arpl
jb
sub
and
mov
adc
mov
sbb
std
ins
and
xor
sub
in
add
mov
or
push
jecxz
shl
popa
jae
cmp
mov
xor
fcomp
sbb
(bad)
pop
(bad)
das
or
push
mov
and
inc
mov
sbb
xor
pop
dec
add
add
add
jnp
cmp
mov
jns
fs
shl
imul
mov
cmp
push
add
dec
lock
inc
inc
jmp
fistp
neg
or
inc
and
cmp
cmovnp
dec
add
stos
sbb
outs
lods
fbld
xchg
mov
dec
mov
xlat
pop
push
mov
push
cmp
xchg
sbb
pop
push
add
icebp
inc
dec
add
ror
loopne
mov
xor
adc
mov
stos
and
add
pop
ror
xor
pop
ins
xor
cmp
loope
add
push
push
or
inc
mov
add
lea
sbb
ja
push
pop
xor
cmps
retf
xor
ins
(bad)
mov
inc
and
and
adc
and
sbb
jae
pop
cs
ins
dec
mov
sbb
cli
or
jg
add
add
xchg
mov
in
inc
adc
gs
jle
icebp
xchg
fnstcw
leave
movs
dec
jo
xchg
add
mov
inc
mov
pop
pusha
mov
imul
add
or
push
scas
aaa
jnp
fnstcw
pushf
xor
popf
loopne
or
adc
test
push
inc
add
jecxz
and
add
ja
pop
mov
out
cmp
sub
leave
pop
and
loopne
inc
daa
mov
jmp
adc
shl
xchg
jnp
es
aas
add
xchg
mov
loope
jp
gs
addr16
es
adc
add
shr
lock
cmps
in
or
push
jo
fst
in
or
xrelease
pop
xor
stc
or
mov
adc
rol
cmp
adc
in
or
mov
dec
dec
and
scas
mov
jne
js
or
out
icebp
imul
fiadd
sar
lds
pop
and
add
cwde
pusha
test
sub
sbb
pop
movs
pop
jo
mov
cmc
cmp
in
adc
xchg
add
pop
xchg
jecxz
sub
nop
nop
inc
clc
cmp
test
push
mov
jecxz
cmp
movs
adc
sub
jnp
test
inc
cmp
sbb
push
sbb
pop
lsl
iret
or
rep
xor
and
gs
prefetch
or
addr16
ret
movs
pop
out
int3
or
jae
xor
push
pop
jge
push
add
data16
mov
lods
add
xor
fwait
sub
pop
push
jbe
or
js
retf
ja
daa
xor
das
cdq
int
and
cmp
js
ja
cmp
add
sar
jge
adc
and
pusha
or
test
je
div
jne
mov
add
add
adc
sbb
pop
ret
dec
int
xor
sub
dec
dec
data16
loopne
mov
lea
cmp
or
mov
in
fsub
aad
std
ret
aas
icebp
(bad)
jnp
push
dec
pop
pop
and
(bad)
jne
add
add
fnsave
sbb
fwait
ja
ja
in
sbb
pop
or
dec
add
ret
loope
test
gs
dec
mov
xchg
gs
hlt
loop
sub
std
jns
cmps
loopne
pop
imul
test
adc
dec
cwde
sub
adc
or
mul
add
arpl
cmp
mov
data16
mov
mov
add
add
xchg
in
sub
ret
xchg
aas
pop
mov
jmp
das
push
adc
rcl
add
jmp
jp
gs
popf
js
xor
add
pop
retf
cmp
pop
cmp
xor
adc
ret
jge
mov
xor
jecxz
loope
pop
sub
loop
popa
mov
xor
lods
out
pop
(bad)
neg
ins
das
cmp
int
or
add
popa
int
mov
scas
push
repz
ins
inc
cmp
ja
fadd
xor
mov
xor
or
sbb
cmc
sub
ret
dec
pop
jg
inc
sub
add
sbb
pop
xor
dec
aas
rol
arpl
pmaddwd
push
cmp
das
arpl
mov
ja
in
das
or
fs
out
leave
call
iret
add
cmp
dec
cmp
test
and
fs
data16
adc
mov
ja
cmps
xor
test
test
jecxz
jp
loop
jecxz
or
inc
xchg
xchg
in
fdivp
add
push
les
aam
xor
aaa
add
dec
mov
jne
add
inc
rcl
mov
js
xor
add
nop
push
out
retf
cmp
sbb
js
xor
ss
arpl
or
xor
jecxz
mov
mov
mov
dec
pop
and
fldenv
outs
jge
push
or
or
iret
clc
pop
add
add
pop
daa
and
pop
movs
dec
xchg
in
iret
addr16
add
mov
lods
loope
ror
cmp
and
push
mov
mov
add
sbb
(bad)
stos
add
sbb
imul
cwde
stos
es
add
popf
mov
sub
stos
xor
dec
(bad)
add
pop
jo
mov
rcr
pop
sahf
sub
pop
(bad)
imul
add
adc
xor
jnp
cmp
(bad)
(bad)
bound
push
push
dec
push
mov
popf
call
xor
jb
cld
add
inc
sbb
js
mov
jp
dec
jne
mov
arpl
iret
jae
outs
ins
dec
cmps
cmp
(bad)
jg
mov
xlat
add
sub
outs
add
dec
and
jae
or
sti
pop
rcl
cmps
mov
xor
adc
js
repz
test
and
and
shl
pusha
les
icebp
jns
aad
sbb
pop
adc
and
outs
jbe
data16
mov
rol
pop
dec
fnstenv
fsubp
mov
dec
push
sbb
das
dec
push
das
pop
jne
and
sti
pop
cmp
inc
sub
arpl
sub
idiv
dec
inc
pop
loopne
retf
std
bswap
adc
mov
mov
mov
ja
inc
(bad)
cmp
cmp
pop
mov
retf
or
ja
int
aaa
popa
and
loop
xchg
or
push
out
add
popa
jmp
mov
loop
jp
pop
popa
sub
das
gs
inc
out
addr16
jecxz
shl
adc
fadd
sub
outs
add
and
in
retf
lds
sbb
sub
fsubr
hlt
xor
addr16
add
or
movs
adc
pop
sbb
out
sbb
sub
loop
cmp
data16
cmp
push
jg
adc
adc
add
jecxz
std
xor
xor
movs
jae
cmp
and
int
shl
push
loope
adc
xchg
jae
push
xchg
mov
inc
lock
sub
leave
cmp
lahf
pop
stc
push
jmp
adc
push
aad
pop
jae
sbb
xor
and
push
test
xor
test
push
and
std
push
add
shr
and
dec
jne
xor
adc
add
cmc
sbb
ret
test
mov
pop
jmp
jo
shr
dec
popa
add
dec
ja
push
add
aas
ret
js
xchg
dec
add
jnp
ret
push
cmps
and
pop
cmp
aam
sbb
loop
retf
mov
or
adc
lock
and
add
jecxz
cmovle
pop
dec
(bad)
jecxz
popf
push
mov
ins
add
add
xchg
rcl
dec
or
add
rcr
sbb
mov
retf
adc
imul
sahf
sti
adc
sub
bound
and
push
xchg
cdq
clc
mov
jo
ja
aas
add
pop
jge
sbb
dec
retf
cmp
xchg
popf
adc
das
sbb
daa
jp
xor
jns
stc
push
aad
sbb
jge
cwde
add
or
mov
out
cmp
push
sbb
jge
push
or
int
mov
aaa
jo
popa
or
mov
(bad)
mov
dec
push
call
pop
pop
and
stc
jb
jnp
add
int
inc
add
xchg
mov
or
push
shr
push
movs
and
mov
popf
pop
inc
add
rcl
lea
imul
les
inc
pop
cmp
mov
out
mov
mov
sbb
call
jo
mov
adc
int3
loopne
jmp
ror
sbb
mov
leave
dec
call
in
(bad)
faddp
inc
inc
sub
inc
adc
or
adc
js
push
daa
je
and
cmp
popa
or
adc
jmp
lds
ret
fisubr
or
mov
jae
adc
jb
mul
jp
cwde
(bad)
in
jno
cmp
adc
daa
adc
or
xchg
test
push
sbb
push
sbb
pop
sub
test
mov
mov
mov
sub
fwait
pop
or
inc
sbb
(bad)
and
fld
in
pusha
mov
inc
hlt
dec
dec
cmp
add
fstenv
rol
or
scas
push
in
xor
dec
ret
jecxz
add
sti
mov
stc
outs
mov
jo
xor
das
test
add
cdq
mov
rep
pop
push
xchg
mov
lock
gs
aaa
pop
xchg
movs
outs
add
mov
jecxz
mul
int3
pusha
push
inc
iret
xor
ret
xchg
cmp
or
xor
xor
int
lock
test
sbb
push
cmp
mov
dec
xor
pop
add
ja
dec
and
xchg
das
add
sbb
jo
fnsave
pop
sub
push
(bad)
jnp
push
adc
xchg
gs
pop
ja
jmp
fst
rol
pushf
jno
in
mov
mov
cmps
out
pop
out
(bad)
inc
js
pop
jae
pop
adc
cmp
and
add
fimul
cmps
dec
pop
mov
sub
and
cmp
cmp
pop
movs
leave
xor
inc
jns
cwde
jo
cdq
inc
sbb
mov
fwait
or
adc
pop
andnps
pop
cmps
cmp
lahf
inc
mov
jecxz
gs
cmp
adc
cmc
js
sub
sub
stos
mov
xchg
sub
dec
cmp
mov
leave
fwait
rol
jmp
in
loop
test
cdq
imul
das
and
or
sbb
and
sbb
xor
ret
sti
mov
push
fistp
add
inc
cmp
jecxz
adc
mov
dec
add
cmp
jmp
ret
cmp
or
test
and
nop
ficomp
imul
cmp
add
in
push
or
loop
(bad)
xchg
cmp
xor
out
jo
rol
push
and
shl
jae
xor
mov
adc
mov
jg
test
in
out
dec
pop
add
int3
fsub
repz
loope
add
ret
or
cmp
xchg
retf
rcl
or
outs
add
adc
adc
add
ret
test
mov
(bad)
test
out
pop
xor
adc
inc
and
shl
xchg
inc
(bad)
(bad)
cmp
int
out
inc
jne
push
repz
rol
xchg
or
jecxz
add
(bad)
jmp
ficom
repz
das
push
push
dec
test
rcl
lock
sbb
das
adc
les
cmc
fwait
cmp
hlt
cmp
mov
(bad)
xor
sub
ins
mov
xor
mov
mov
inc
mov
add
push
test
(bad)
jns
ret
mov
pop
dec
jae
sub
mov
dec
cmp
jge
adc
add
int
push
out
sar
jo
pop
je
inc
pop
sub
inc
popf
add
add
add
mov
and
je
fld
mov
mov
add
add
mov
fld
add
add
cmp
xor
mov
add
add
call
inc
inc
mov
ret
mov
dec
jmp
mov
add
add
das
mov
scas
xor
mov
add
cdq
fstp
and
out
mov
ja
mov
(bad)
ror
nop
jmp
rcl
mov
test
and
gs
jmp
enter
xchg
xor
mov
pop
add
pop
xor
cmp
mov
adc
sub
dec
cmp
das
inc
add
xchg
imul
mov
xchg
inc
add
sbb
sub
xchg
test
and
imul
and
xchg
popa
mov
mov
xor
(bad)
fnsave
xchg
mov
add
xor
mov
mov
push
fmulp
add
add
rcl
sbb
(bad)
cmp
push
sti
add
add
sbb
add
mov
mov
outs
mov
icebp
push
daa
sbb
mov
mov
loope
add
scas
jmp
dec
mov
leave
add
ret
ja
jns
mov
cmps
les
into
pop
cwde
mov
pop
jae
lahf
jmp
test
add
mov
pop
xlat
retf
mov
xor
jecxz
test
cmp
pop
scas
and
iret
fldenv
add
and
dec
jmp
shr
loope
pop
mov
xor
inc
xlat
icebp
sub
(bad)
add
int
adc
ret
add
cmc
and
repz
lock
(bad)
and
rcr
aad
add
ins
(bad)
retf
mov
or
or
or
fld
jge
mov
lahf
adc
nop
addr16
adc
add
ret
scas
call
movzx
neg
mov
mov
mov
jecxz
js
mov
imul
int3
arpl
sub
and
lods
and
pop
mov
int
mov
push
push
and
(bad)
xor
sbb
pop
mov
pop
add
popa
add
sbb
pop
mov
ss
sar
scas
add
add
mov
sbb
pusha
popf
push
scas
mov
or
mov
lods
scas
imul
icebp
mov
neg
or
inc
xor
sbb
stos
icebp
dec
mov
lea
(bad)
int
loopne
hlt
mov
and
(bad)
lock
iret
sbb
lock
sub
sub
jbe
or
loope
daa
lock
cmp
and
dec
es
add
(bad)
mov
jne
popa
add
push
rol
pop
mov
or
sub
add
and
mov
push
mov
into
add
jbe
jmp
cmp
jo
inc
sub
pop
fcom
ret
xor
cmp
mov
mov
sub
jne
repz
mov
and
pop
jmp
mov
mov
iret
inc
js
sar
outs
shr
in
idiv
xchg
adc
cwde
lds
jno
repz
data16
cmp
loope
dec
js
xor
mov
scas
mov
into
(bad)
into
and
stc
mov
mov
scas
mov
xchg
push
mov
xchg
push
ja
jae
add
push
ret
dec
js
loopne
sti
xor
hlt
cmp
add
inc
sbb
das
loope
iret
and
sub
loope
dec
jecxz
push
adc
mov
adc
cmp
pop
mov
pop
sub
(bad)
mov
pop
mov
and
shl
sbb
jecxz
pop
xchg
push
in
or
xchg
aas
mov
push
mov
loope
jns
dec
cmp
cmc
lds
add
add
push
(bad)
je
sub
cs
jp
xchg
(bad)
lods
arpl
aad
or
popa
mov
mov
mov
in
sti
cmp
cmp
data16
addr16
jp
(bad)
add
jne
ja
(bad)
loope
adc
or
inc
mov
mov
xor
pop
cmp
rcl
mov
adc
mov
mov
test
ffreep
mov
out
add
and
iret
icebp
sbb
div
sbb
aad
clc
inc
loopne
lods
and
mov
xchg
dec
icebp
mov
pop
scas
inc
call
call
mov
sub
push
ja
scas
inc
xchg
mov
mov
dec
pop
out
add
jno
cmp
sub
cmp
ret
inc
cmp
xchg
or
add
mov
push
scas
lds
loope
loopne
inc
mov
rol
push
dec
es
test
mov
push
xor
imul
xor
mov
pusha
add
adc
and
ss
shl
cmp
and
rcl
dec
cmc
lock
and
sbb
cdq
push
and
scas
leave
jnp
mov
es
(bad)
push
(bad)
jmp
imul
inc
mov
add
cmp
pop
add
frstor
add
xlat
fsubr
xlat
imul
jmp
mov
iret
xchg
mov
out
les
pop
push
adc
stos
adc
dec
scas
and
add
rol
lods
shl
jne
cwde
or
popa
xor
imul
cmp
ret
fnstenv
imul
add
add
scas
(bad)
pop
push
lds
mov
or
push
mov
int
and
mov
pushf
xor
jmp
rcr
dec
ret
ud1
cmp
pop
iret
sub
xor
jae
and
mov
lods
out
mov
pop
xchg
or
test
xchg
xor
adc
pop
jmp
(bad)
fxch
pop
shl
pop
(bad)
push
sub
stc
push
xchg
cmc
mov
sub
dec
loopne
jo
arpl
(bad)
sbb
add
addr16
jno
or
mov
add
or
imul
lahf
ins
xchg
push
jmp
pop
mov
jnp
int3
xor
and
adc
adc
push
js
lds
out
xchg
es
pop
mov
xor
mov
pop
mov
cmps
aad
std
js
xchg
and
sbb
std
add
popf
mov
adc
pandn
xchg
add
sbb
adc
fldcw
and
sbb
mov
dec
inc
outs
add
jno
add
adc
sbb
inc
movs
pop
(bad)
jns
push
xor
or
add
inc
jo
mov
sub
daa
add
adc
ins
daa
iret
inc
xchg
add
push
gs
mov
dec
sti
adc
mov
ror
dec
(bad)
in
xor
dec
add
mov
and
jo
rcl
adc
sbb
mov
bound
mov
jne
or
in
mov
add
fisttp
(bad)
or
enter
add
inc
mov
cdq
arpl
sbb
inc
pop
adc
mov
xchg
enter
xor
sbb
pop
and
movs
xchg
add
adc
mov
pop
cmp
add
cmp
jno
fwait
scas
rcl
in
jae
cmps
jb
jnp
jb
xor
dec
aad
add
outs
iret
loope
add
gs
push
inc
and
dec
mov
inc
cmp
jae
mov
dec
inc
cmc
mov
add
add
call
aas
mov
push
mov
in
sbb
add
add
mov
js
jno
jmp
fs
push
out
jae
sbb
pop
pop
stc
jmp
or
sub
ret
pop
stos
ins
dec
popa
or
mov
shl
ret
popf
stos
(bad)
xor
out
and
xor
and
js
jecxz
imul
pop
dec
add
and
add
(bad)
repz
ror
xor
(bad)
fs
add
sbb
xor
push
add
cwde
stos
xor
xor
popa
mov
sbb
add
jne
xchg
sbb
mov
orps
and
mov
push
retf
pop
sub
sbb
stos
loop
cwde
pop
arpl
test
add
ins
setno
xor
and
(bad)
push
xchg
iret
pop
or
inc
cs
stos
add
push
daa
cmp
dec
neg
retf
stos
sbb
popf
and
nop
sbb
xchg
icebp
push
add
sub
sbb
pop
lds
and
test
mov
push
xor
sti
xlat
inc
mov
add
aad
aaa
int
xor
in
outs
xor
push
jne
aam
inc
aas
add
inc
gs
pusha
add
outs
pop
imul
lea
and
test
jne
hlt
or
or
rcpps
and
ss
cmp
add
xchg
or
jg
cdq
dec
pop
ret
pop
cmps
sub
adc
inc
retf
aad
fld
mov
rcl
or
mov
stc
cmp
jle
add
or
jmp
imul
add
add
xchg
inc
sbb
icebp
and
jp
retf
mov
xchg
mov
or
lock
aad
sbb
or
enter
jno
fdivr
test
adc
in
adc
push
daa
or
or
cmp
xor
mov
xor
outs
add
mov
(bad)
ins
add
loop
test
pop
add
mov
add
jo
adc
adc
or
xchg
push
sbb
or
add
sbb
aas
loope
ret
loope
sbb
pop
add
loopne
scas
shl
mov
mov
es
sbb
pusha
stos
js
sti
inc
cmp
jno
inc
inc
ins
je
dec
sub
loope
sahf
mov
mov
push
shr
cmp
pop
out
or
pop
jecxz
jnp
adc
js
add
inc
xchg
ja
sub
mov
mov
inc
mov
mov
jb
mov
jne
or
mov
dec
jnp
test
inc
sbb
clc
pop
or
leave
push
mov
cdq
iret
inc
lds
jmp
adc
xor
jecxz
add
push
ins
add
enter
aad
jno
js
sbb
dec
cmovbe
rcl
and
dec
imul
(bad)
loope
mov
sbb
xor
dec
dec
dec
cmp
push
or
push
mov
add
add
add
add
pop
sub
mov
dec
std
xchg
out
xchg
pusha
sub
add
jg
jp
cmp
in
outs
add
inc
(bad)
push
jg
daa
sbb
sub
xor
ds
and
add
xchg
push
push
inc
(bad)
(bad)
(bad)
ja
mov
jb
pop
aas
test
adc
mov
gs
popf
dec
push
out
or
cmp
push
das
xor
inc
rcr
mov
pop
ins
or
mov
mov
add
aad
daa
pusha
xchg
push
das
jge
aad
sbb
aas
mov
shr
pusha
mov
pop
js
call
das
lds
xor
es
dec
ret
popa
mov
sbb
cdq
mov
xchg
pop
in
outs
xchg
int3
es
mov
mov
jmp
jg
outs
and
popa
push
inc
mov
and
inc
sti
retf
ds
pop
mov
mov
xor
dec
cmp
mov
adc
es
inc
xor
dec
mov
inc
pop
cmp
xchg
pop
xchg
sbb
pop
and
ja
or
xor
imul
add
loope
call
push
sbb
xchg
adc
pop
aad
fwait
push
pop
mov
sub
daa
mov
push
push
xor
mov
nop
hlt
mov
inc
mov
(bad)
iret
pop
es
adc
adc
ret
inc
sbb
lds
pop
das
loopne
sbb
int
sbb
jmp
test
daa
mov
jo
cmp
fwait
mov
sbb
or
sbb
push
mov
inc
out
shl
(bad)
sbb
mov
inc
(bad)
int3
push
cwde
pop
imul
sub
inc
loopne
imul
push
jnp
pusha
mov
fld
adc
jnp
xchg
add
push
adc
pop
ret
gs
cmp
popa
lea
adc
add
and
jno
inc
mov
jnp
dec
es
pop
sbb
inc
xor
mov
and
int
and
and
add
mov
leave
sub
jge
and
cmp
leave
dec
jmp
and
test
pop
fistp
std
adc
add
in
popa
inc
cmp
xor
jo
sti
pop
xor
xor
push
push
push
mov
xchg
pop
xchg
adc
cmc
das
cwde
and
mov
cmp
cdq
sbb
rcl
jmp
mov
and
(bad)
jo
xor
or
retf
xchg
xor
xor
sub
call
lds
pop
pop
test
and
cmc
and
mov
mov
test
inc
add
cmp
mov
ror
loope
gs
dec
add
or
pop
popa
add
data16
mov
add
outs
mov
mov
and
fnstenv
add
aas
xchg
cmp
jne
shl
jl
jmp
add
popa
iret
dec
push
inc
mov
add
cmp
xchg
and
movs
cmp
mov
popa
cwde
add
inc
inc
lea
sbb
imul
mov
jecxz
retf
xchg
adc
addr16
loope
xor
mov
jp
sub
cmp
gs
out
inc
and
aad
cmc
add
inc
add
addr16
test
xchg
(bad)
in
iret
adc
mov
cmp
mov
neg
add
jb
ret
stc
dec
add
jp
out
mov
inc
iret
inc
add
rol
and
sbb
icebp
loope
and
cmc
mov
jb
and
dec
daa
sub
jbe
(bad)
aaa
pop
leave
adc
mov
xchg
adc
pop
shr
xchg
or
cmp
dec
adc
sub
pop
popa
sbb
inc
push
dec
push
push
jp
in
xchg
sti
pop
xchg
or
pop
cmp
jmp
out
loopne
add
cmp
shl
sub
enter
jmp
cmp
and
add
lods
pop
mov
stos
scas
adc
jno
sbb
movs
or
cli
lods
and
cwde
popa
add
xor
cmp
add
lahf
jb
jo
and
dec
gs
jmp
sbb
dec
mov
jae
add
iret
inc
push
mov
adc
jecxz
pop
jno
and
and
xor
xor
xchg
daa
sub
cmp
scas
mov
mov
add
add
imul
jmp
add
fnstcw
popf
jg
cmp
dec
mov
lahf
pop
call
(bad)
or
add
aad
inc
pusha
test
push
xor
gs
mov
ja
cmp
fst
sbb
loope
add
add
adc
and
add
mov
pop
icebp
pusha
xchg
outs
stos
mov
jmp
or
adc
or
lds
inc
sbb
inc
xlat
mov
or
lahf
add
adc
popf
mov
sbb
cmps
inc
inc
shl
mov
das
pop
cmp
pop
push
mov
adc
add
inc
or
shl
ja
cmps
xchg
lock
push
rcl
out
pusha
sub
mov
ret
or
jnp
dec
retf
adc
test
test
das
imul
out
jne
sbb
in
inc
lea
sub
dec
mov
push
and
js
fistp
lods
stc
jae
rol
adc
inc
or
or
sub
add
cdq
cmp
rol
add
lods
mov
inc
mov
pop
pop
lds
imul
jne
(bad)
dec
sbb
xor
test
cmp
jnp
dec
adc
nop
mov
inc
ficomp
add
add
jo
iret
loope
ja
retf
push
lock
jne
ja
adc
ror
pop
jae
add
loop
and
imul
cmp
sar
xor
rcl
or
mov
cmc
pop
adc
call
jmp
and
cmp
int
add
mov
shl
add
adc
shl
pop
xchg
imul
adc
mov
les
movs
inc
add
cmp
shr
cwde
cdq
mov
inc
add
pushf
jo
daa
lahf
imul
add
loop
js
leave
sbb
movs
jecxz
mov
push
xor
add
stos
adc
rcr
pop
push
add
pop
das
push
and
pop
xor
jno
add
or
loopne
js
fcmovnbe
out
pop
out
nop
lods
(bad)
dec
dec
scas
(bad)
popa
(bad)
mov
fwait
jno
mov
das
push
pop
stos
sbb
mov
jnp
in
enter
xor
loope
xlat
retf
mov
add
adc
out
or
push
sbb
pop
or
add
test
dec
fstp
and
fnstcw
dec
paddw
call
xchg
pop
out
jmp
dec
pop
faddp
test
jecxz
sbb
jns
out
jbe
hlt
cmp
add
jo
fist
fild
es
dec
jg
add
jnp
push
or
imul
shr
cmp
retf
xor
jae
jb
mov
scas
je
test
mov
add
jno
mov
shl
sar
adc
push
or
add
loopne
arpl
mov
jne
mov
mov
ror
gs
rcl
js
pusha
jbe
add
lea
adc
cmp
pop
sbb
ins
inc
pop
lock
out
loopne
popf
lods
add
(bad)
and
jmp
or
aad
mov
adc
mov
jnp
(bad)
adc
cmp
imul
jne
in
dec
sbb
mov
dec
or
pop
stos
dec
mov
xor
jge
jns
sbb
pop
mov
add
icebp
xor
imul
cmp
inc
stc
inc
dec
cmp
add
popf
xchg
rol
arpl
outs
mov
cs
dec
lock
jecxz
pop
les
jmp
cwde
ror
pop
mov
mov
cli
add
dec
adc
cdq
(bad)
cmp
inc
loope
adc
dec
sub
shl
aam
jne
and
add
ror
cmps
test
lea
or
sbb
stos
and
adc
jecxz
std
inc
imul
dec
or
test
inc
push
cdq
outs
sub
adc
lock
xchg
xor
push
out
out
dec
jno
in
and
push
jne
xlat
icebp
or
sbb
xchg
fild
push
sbb
aad
xlat
pop
xchg
adc
gs
push
add
cmp
pop
arpl
adc
pop
xlat
test
lods
(bad)
popa
and
lds
adc
rcr
add
jmp
inc
icebp
add
in
(bad)
sti
hlt
cmp
sbb
pop
xor
jo
shl
bt
xchg
loop
pop
mov
pushf
pop
mov
cmc
pop
dec
jb
xor
(bad)
pop
nop
mov
lea
cmps
mov
int
test
pop
jecxz
out
adc
das
vmwrite
push
sbb
dec
add
push
scas
adc
movs
pop
ret
shl
cmp
add
adc
xchg
fist
loope
loopne
mov
mov
ret
inc
dec
sub
add
mov
xchg
rol
cmp
fmulp
mov
dec
xor
and
push
sbb
(bad)
inc
sub
jnp
mov
jae
rcr
jecxz
jno
test
bswap
cmp
(bad)
mov
and
and
jae
(bad)
sub
cmp
fisub
mov
gs
sub
cmp
out
loope
je
out
sar
pop
add
push
cmp
aas
add
mov
jmp
mov
(bad)
push
mov
cmp
shl
jmp
or
lock
mov
and
add
mov
loope
add
add
add
sub
xor
arpl
cmps
test
pop
add
mov
mov
rol
inc
and
jp
or
shl
loop
pop
pop
and
dec
fisttp
popa
ret
iret
cmp
adc
add
aaa
inc
imul
pop
dec
nop
xor
mov
xor
dec
cmp
fist
test
scas
jge
xchg
or
lds
stos
ret
jb
add
and
ret
repz
shl
xor
adc
cmp
iret
add
mov
adc
inc
adc
cmc
jno
mov
les
adc
sbb
retf
ja
or
mov
loopne
js
popa
mov
loopne
out
daa
dec
push
cmc
dec
mov
xchg
outs
or
js
shl
jae
loope
dec
adc
sub
icebp
mov
or
add
mov
int
stc
adc
sub
arpl
dec
and
pop
and
out
imul
cs
inc
or
or
inc
cmps
xor
push
push
outs
xchg
bound
je
dec
mov
popa
jne
xor
add
or
and
xchg
cmp
push
add
ret
xor
repz
lds
hlt
push
cmp
scas
sbb
or
packsswb
popa
add
adc
add
cmp
ins
mov
movs
jo
or
mov
stos
pop
xchg
mov
xor
adc
andnps
or
lock
sbb
cmps
sbb
in
mov
retf
pop
adc
sub
inc
sar
push
dec
mov
int3
push
pusha
retf
jnp
stc
std
shl
sbb
add
push
xchg
mov
cmp
sbb
add
popa
gs
rcl
xchg
popa
mov
cmp
arpl
jmp
not
ins
and
xor
inc
and
iretw
adc
push
lahf
jmp
mov
add
iret
outs
pop
fsubr
fwait
mov
shr
dec
mov
int
or
sbb
sbb
sbb
inc
jp
push
xchg
add
dec
inc
iret
jne
or
cdq
jae
dec
xchg
lahf
call
jae
mov
dec
jno
add
(bad)
adc
scas
push
xchg
xor
dec
inc
jecxz
lock
not
add
mov
popa
mov
and
ss
sub
or
int
mov
xor
(bad)
movs
ret
inc
arpl
xor
jno
and
inc
loopne
dec
dec
pop
mov
jo
daa
jge
mov
icebp
loope
fstp
add
or
xor
adc
sbb
mov
cmc
mov
out
add
or
(bad)
jmp
or
xchg
imul
xchg
int
pop
mov
cmp
lock
fstp
jmp
adc
and
pop
mov
lea
mov
iret
ret
inc
adc
rol
add
inc
or
mov
add
add
fwait
dec
add
pop
push
push
adc
jnp
lock
mov
dec
add
daa
stc
push
aas
leave
mov
shl
add
jbe
in
shl
loopne
imul
jae
and
scas
xor
ret
fstp
jne
inc
and
ins
add
add
xchg
je
ret
add
pop
push
cmp
gs
jmp
add
jns
sub
sub
repz
adc
adc
and
cmp
sti
sub
out
je
not
leave
adc
stos
std
and
addr16
test
add
and
js
xchg
cmp
or
push
(bad)
rol
add
dec
imul
inc
aam
dec
cmp
add
test
pop
inc
cs
scas
cmps
fsubp
fs
cmp
sbb
outs
add
lock
imul
jp
sbb
mov
test
push
cmp
daa
jno
push
mov
test
and
sahf
add
mov
xchg
or
mov
sbb
push
iret
add
daa
jne
lock
xchg
mov
sbb
jg
jae
fwait
popa
les
sub
je
(bad)
ret
inc
xchg
dec
cmp
addr16
inc
outs
mov
add
xor
jns
daa
ror
pushf
sbb
adc
lock
cmp
in
and
or
cmp
stos
dec
ja
add
lahf
lds
iret
adc
mov
sbb
add
and
sbb
std
imul
xchg
add
xor
loope
les
inc
loope
ret
add
add
dec
pop
push
scas
mov
jnp
mov
sub
jne
cwde
cmp
(bad)
adc
jmp
stos
xchg
jnp
icebp
and
js
jnp
daa
push
mov
dec
push
or
mov
jns
add
push
in
adc
aas
and
stc
aad
(bad)
out
inc
and
dec
cmps
gs
iret
and
pop
add
xchg
cmp
sbb
in
loopne
and
popf
xor
add
pushf
cmp
xchg
jmp
dec
add
cmps
fucomi
xor
aas
daa
gs
test
mov
or
test
and
xchg
aad
ret
repz
popf
ret
dec
sub
or
out
cmp
fstp
sbb
dec
adc
inc
pusha
dec
sbb
cdq
adc
out
xor
cmp
inc
fld
mov
addr16
push
jbe
iret
arpl
pop
xchg
nop
add
adc
xchg
ret
call
and
xchg
add
xchg
cmc
lods
in
jmp
in
iret
imul
sub
xlat
inc
out
imul
mov
adc
shl
aas
sar
cmc
jb
imul
sub
shl
lds
popa
fsub
pop
ret
pop
push
mov
jecxz
scas
dec
jnp
das
push
adc
pop
mov
or
xlat
fild
inc
add
push
and
add
out
xor
xchg
or
jno
sbb
outs
sbb
mov
xor
xor
adc
lock
sbb
(bad)
mov
xor
pop
sbb
or
cmc
push
and
loope
jmp
jnp
test
(bad)
popf
jae
cmp
xchg
adc
or
shr
push
and
rcr
push
sbb
xchg
dec
xchg
sbb
adc
data16
xor
mov
les
cmp
pop
int3
es
jge
sub
dec
es
dec
push
push
sub
cmp
loope
pop
(bad)
imul
fild
jmp
mov
outs
(bad)
push
ret
pop
sbb
cmp
pop
xchg
sub
and
sbb
stos
shl
and
jmp
and
in
scas
cdq
inc
outs
shr
jae
ja
int3
adc
adc
pop
inc
aas
pop
daa
movq
xor
cdq
pop
sbb
aad
adc
or
ja
add
jo
das
imul
and
adc
arpl
push
mov
pop
inc
or
lds
js
xchg
idiv
add
pop
es
pop
add
add
cli
ret
lahf
in
xor
popa
pusha
leave
pop
or
daa
pop
xchg
lahf
xchg
or
and
dec
adc
xor
outs
shl
mov
or
data16
pop
or
jno
add
push
sub
adc
ret
xor
or
ins
in
aaa
inc
out
iret
popa
mov
popa
add
add
dec
sbb
sbb
ret
daa
xchg
ror
cwde
cli
push
ror
pop
(bad)
adc
xchg
pop
fbld
dec
cmp
pop
add
lock
das
add
add
xchg
push
js
push
js
jmp
push
ins
cmc
pusha
inc
xor
lock
icebp
inc
mov
sbb
cmp
lahf
xor
daa
xchg
jno
(bad)
jnp
ficom
xlat
add
scas
fidiv
aam
pop
dec
pop
xor
icebp
xchg
popf
jmp
add
adc
js
fsubp
xor
jae
cmc
sbb
cmp
gs
adc
add
mov
int
cmc
(bad)
or
ins
push
xor
out
pop
test
jns
fistp
cmp
jo
push
neg
imul
push
iret
add
or
jmp
xlat
loope
sub
xlat
ret
inc
cwde
lock
dec
(bad)
dec
shl
and
and
xlat
jecxz
xor
rcr
push
shl
push
xchg
ss
test
xlat
jb
out
cmp
add
mov
xchg
out
mov
xor
xchg
and
scas
test
sbb
mov
pusha
test
add
or
sub
inc
js
sbb
jno
lock
pop
int
or
sbb
or
mov
gs
cmp
(bad)
test
cmp
xchg
popw
lea
aas
and
rcr
rcl
loope
loopne
cdq
in
imul
out
or
mov
sbb
and
adc
lods
add
loopne
pop
std
pusha
dec
xchg
add
inc
add
adc
dec
adc
retf
or
ret
push
push
and
je
xor
dec
dec
popf
add
adc
add
arpl
pop
mov
push
cdq
lods
or
data16
adc
jp
das
pop
pop
jmp
push
cmp
inc
inc
mov
add
mov
pop
mov
sub
and
push
imul
in
add
add
or
push
test
sub
inc
outs
cmc
mov
ror
cmovno
push
mov
inc
and
mov
movs
imul
jne
rol
mov
lahf
cmp
sbb
das
or
lahf
xchg
fwait
test
push
mov
imul
or
loope
aaa
test
cmp
push
add
and
in
retf
jecxz
mov
sub
adc
mov
xchg
retf
adc
sub
loop
jb
sub
xchg
push
out
sbb
dec
and
pop
adc
adc
pop
je
jae
adc
aas
add
lock
or
adc
retf
data16
wbinvd
mov
cdq
push
adc
shr
push
cmps
loope
add
sbb
push
sbb
jmp
retf
std
cmp
adc
test
retf
push
jno
out
adc
mov
jmp
mov
or
stc
ret
inc
icebp
push
pop
jle
addr16
adc
pop
ss
sbb
lahf
lods
popa
cmp
add
inc
sbb
rol
add
dec
mov
dec
mov
daa
daa
into
xchg
icebp
push
jnp
dec
and
cmp
pop
aad
or
xor
shl
sar
jge
dec
inc
pop
pop
inc
mov
out
and
mov
(bad)
cmp
jb
mov
inc
mov
movs
mov
or
or
add
add
jge
ins
arpl
js
jg
sbb
aas
xor
outs
add
dec
repz
sbb
and
or
sbb
adc
loopne
inc
xchg
inc
aad
pushf
dec
jno
movs
and
sub
pop
jae
test
xor
add
xor
pop
pop
and
dec
shl
loope
pop
dec
fbstp
add
sbb
xchg
mov
ins
sub
push
mov
addr16
icebp
sbb
push
inc
sub
and
sbb
xchg
pop
js
pop
rol
mov
test
sub
cdq
imul
loopne
or
sbb
out
cmp
icebp
push
out
fwait
adc
arpl
push
and
popa
pusha
scas
addr16
pop
fisttp
jns
add
push
cmp
(bad)
mov
popa
xlat
imul
scas
ret
cmp
sub
and
add
or
fldenv
add
sub
mov
xor
pop
pop
ret
mov
jecxz
shl
cmp
div
ja
mov
stc
jnp
fwait
leave
add
in
mov
jb
add
sbb
(bad)
mov
mov
inc
pop
push
(bad)
push
xchg
or
inc
arpl
add
or
dec
or
xor
pavgw
cmp
xchg
imul
ret
sbb
and
fwait
gs
add
jmp
aaa
jbe
jno
sub
or
sub
add
sbb
retf
iret
jno
add
inc
lods
mov
test
(bad)
sub
imul
rol
jnp
mov
popa
sbb
xchg
inc
pop
push
cmps
xchg
adc
in
adc
ja
nop
jb
and
jo
mov
daa
imul
loop
and
dec
addr16
xor
jns
ja
sub
loopne
sbb
sub
fwait
jp
lds
mov
in
cmp
xchg
push
in
arpl
or
ja
or
dec
xor
push
or
pop
sbb
sub
pop
or
xchg
dec
mov
cmp
add
jg
xchg
xchg
imul
xchg
cmp
arpl
pop
adc
and
or
xor
cmp
(bad)
ror
add
rol
lods
outs
test
adc
and
mov
fbstp
ja
das
add
sub
cmp
cwde
loopne
out
nop
or
fnsave
cmp
mov
sbb
adc
cmp
xlat
jecxz
test
popa
fsubr
(bad)
imul
add
js
push
scas
loopne
xchg
(bad)
test
mov
xchg
xchg
mov
adc
sti
loope
cdq
mov
cmp
push
xor
sbb
fldenv
popa
cmc
mov
js
rcr
adc
xchg
pop
sub
js
pop
ret
mov
xchg
sub
dec
data16
popa
mov
inc
pop
xlat
pop
ins
aas
mov
jecxz
mov
inc
call
stos
rol
pushf
xor
gs
or
push
mov
das
inc
sbb
adc
fisubr
mov
xor
adc
pop
push
mov
add
lock
sub
sbb
and
add
sbb
dec
push
imul
addr16
xchg
jnp
scas
sbb
add
push
add
sub
sub
xchg
cmp
mov
popf
jae
cmp
imul
aad
sti
cmp
mov
ja
imul
aad
add
mov
sti
fisttp
divps
hlt
lods
mov
arpl
scas
shl
pop
and
enter
add
add
lahf
xchg
icebp
jo
pop
out
inc
sbb
sub
mov
sub
lahf
and
ja
mov
cmp
sbb
addr16
retf
xchg
aad
rcl
ja
push
cmp
ins
or
inc
jecxz
js
push
je
and
mov
cmp
or
sti
jge
xchg
mov
mov
push
cvtdq2ps
imul
xchg
mov
jmp
and
dec
ss
paddsw
add
mov
adc
retf
push
daa
pop
sbb
xor
in
mov
sbb
cmc
retf
add
add
pop
pusha
add
inc
das
push
cmc
jmp
or
mov
xor
sbb
mov
fld
pop
pop
push
xlat
jae
adc
inc
add
xchg
aaa
inc
mov
inc
gs
jmp
jne
out
xchg
mov
jge
ja
adc
and
jbe
fldenv
add
pop
fneni(8087
inc
sub
mov
dec
mov
xchg
std
ds
pop
adc
push
lds
jg
mov
add
cmp
push
add
aas
adc
mov
add
sbb
fild
adc
add
adc
inc
xchg
movs
xor
push
popf
push
adc
test
leave
cmp
call
mov
jmp
retf
(bad)
pop
mov
ins
(bad)
sub
call
xor
adc
xchg
cmp
inc
dec
icebp
retf
mov
jecxz
add
retf
arpl
inc
aad
jmp
jmp
push
shr
test
ret
xor
das
mov
outs
les
dec
cmp
jmp
lds
pop
imul
add
je
dec
add
std
xchg
cmp
dec
xor
pop
or
push
mov
lahf
imul
lds
movs
jmp
pop
pop
pop
popf
jecxz
cmp
push
out
jnp
mov
mov
jns
test
pop
add
jmp
test
ud2
inc
mov
cmp
das
jmp
lea
dec
js
or
adc
sub
jbe
test
xor
add
pop
cmp
add
add
push
dec
aad
stc
fmul
push
ret
adc
mov
add
sub
adc
sar
mov
inc
add
call
scas
neg
sti
fxch
sub
les
and
pop
xor
add
add
mov
dec
daa
shr
jo
cdq
add
xchg
mov
add
xchg
call
or
xor
mov
xchg
iret
test
xchg
clc
add
sbb
xchg
xor
cmps
cmc
imul
push
cmp
mov
imul
imul
dec
mov
cmps
pop
test
pushf
rcl
fwait
sbb
mov
lods
cmp
repz
fdivrp
ja
lea
add
add
push
push
pop
jnp
lods
xor
lock
fldcw
xlat
jmp
std
sub
mov
leave
aaa
sbb
sub
inc
call
retf
add
add
sub
lods
test
neg
adc
(bad)
add
or
out
shl
fsubrp
je
psllq
or
shl
xchg
mov
shl
push
xor
xchg
shr
or
pop
test
iret
rcl
aas
or
mov
not
enter
pop
fstp
inc
jne
or
or
repz
jecxz
jae
add
inc
lds
mov
pop
jmp
js
js
psllw
loop
rol
popa
and
xor
jmp
mov
js
js
jb
loope
push
jp
cmp
push
imul
daa
in
int
or
add
mov
add
ret
jae
fadd
call
or
jg
mov
popa
mov
cmc
pop
fnsave
mov
mov
jmp
mov
mov
add
or
add
lea
adc
and
test
fucom
add
dec
inc
add
mov
jno
push
xchg
(bad)
stos
mov
ret
arpl
fs
sub
out
mov
(bad)
push
add
cmp
movs
sub
popa
adc
sub
inc
outs
jbe
lods
adc
ret
and
cmc
jg
lgs
ins
and
in
lock
loopne
sub
enter
ins
xchg
js
in
xchg
push
rol
or
add
cmp
and
pop
int3
bound
sbb
popf
jp
addr16
idiv
adc
mov
mov
xlat
jmp
je
sbb
xchg
inc
pop
xor
inc
pop
outs
add
and
jecxz
xor
sbb
sub
lods
in
loope
push
loop
jecxz
imul
jmp
cmps
inc
sub
sub
mov
xchg
push
or
jo
(bad)
jnp
ret
lds
out
fild
pop
and
mov
mov
ret
(bad)
push
adc
aaa
out
add
das
push
imul
xor
pusha
fs
mov
ins
inc
imul
jmp
out
popa
test
jno
jg
hlt
mov
cmp
popf
sub
and
mov
jmp
add
add
add
or
and
cs
inc
aaa
div
rol
ins
inc
dec
out
rol
sbb
xchg
mov
lea
adc
loope
pop
jp
stos
ret
das
in
popf
mov
jno
out
shl
lea
or
out
inc
mov
sub
pop
movs
sub
pop
push
and
mov
jb
and
jno
jae
push
(bad)
add
mov
(bad)
test
sbb
xchg
enter
lahf
clc
xchg
adc
popa
(bad)
push
packssdw
mov
(bad)
pop
std
pop
das
xor
mov
ins
cmp
lods
push
daa
mov
in
mov
cmp
sub
inc
ret
popf
adc
hlt
add
aas
pop
or
sbb
jp
(bad)
ffreep
dec
jno
sub
mov
or
test
bswap
xor
lds
dec
dec
inc
loope
xor
mov
add
add
add
test
sub
cmpps
loop
lds
lea
dec
les
add
loope
mov
add
mov
mov
test
mov
cmp
and
in
test
cmp
mov
loopne
gs
cmp
add
mov
ret
sub
loopne
add
push
sahf
add
enter
xchg
or
adc
dec
xor
dec
out
jno
add
ret
sbb
loope
test
xchg
std
jmp
enter
ins
xlat
or
(bad)
adc
adc
bound
jge
add
add
aaa
sub
popf
and
or
lds
adc
mov
(bad)
sar
jecxz
pushf
js
pop
aas
xlat
pop
cmp
jmp
gs
adc
dec
sub
dec
sub
sti
mov
add
jge
cmc
mov
or
ret
sbb
psrad
lods
sbb
and
push
test
add
add
add
cmp
mov
sub
movaps
jnp
out
scas
push
inc
inc
or
adc
add
lock
inc
test
popa
add
dec
mov
dec
push
out
leave
xchg
adc
sub
and
pusha
lds
inc
rcl
push
xor
je
mov
add
mov
sbb
test
std
pop
mov
pop
inc
xor
sbb
cmp
push
add
shr
jo
lds
adc
cmp
sbb
add
jle
out
packuswb
xchg
stos
lds
stos
pop
and
gs
inc
pop
pushf
pop
scas
xor
mov
inc
in
xchg
cmc
mov
ret
jmp
sbb
and
add
xor
pusha
and
sbb
femms
int3
loopne
pop
mov
adc
aaa
or
adc
add
sub
push
ja
adc
push
addr16
fisttp
sbb
in
das
mov
or
xchg
adc
ja
inc
scas
push
retf
ja
jno
in
xchg
rol
or
in
mov
loope
adc
mov
sub
dec
(bad)
sbb
sbb
idiv
adc
push
sbb
mov
xor
or
inc
cmps
gs
gs
hlt
sbb
add
jmp
bound
or
outs
data16
add
add
push
push
sub
inc
lahf
rcr
adc
jecxz
dec
pop
jae
rol
push
or
inc
(bad)
popa
imul
pop
rcr
stos
xlat
popa
add
out
add
sub
icebp
pop
add
sbb
push
cmp
ins
add
add
sbb
in
cmp
and
out
cmp
cmps
xor
xchg
mov
pop
sub
repz
wrmsr
pop
add
pop
pop
xor
sbb
cmc
jns
mov
das
and
and
pop
xor
or
or
fxam
inc
dec
xor
mov
aaa
daa
or
sbb
push
dec
pop
xor
adc
and
xor
cmp
call
loope
lock
sub
lds
jge
pop
popa
out
arpl
retf
sbb
ja
push
xchg
test
mov
shl
push
(bad)
xchg
mov
add
and
popf
jp
or
cmc
aad
cmc
push
test
scas
das
das
and
loopne
data16
ins
adc
loopne
xchg
adc
mov
retf
adc
sbb
daa
lahf
sbb
sub
mov
mov
pop
mov
sub
jne
ret
and
adc
adc
int
mov
mov
fwait
aad
dec
das
xchg
aad
outs
hlt
js
(bad)
mov
adc
or
xor
test
sub
arpl
add
or
cmp
inc
pusha
mov
mov
sbb
(bad)
jno
shl
shl
fstp
(bad)
in
push
inc
adc
iret
adc
mov
add
adc
dec
loopne
stos
es
mov
(bad)
mov
inc
mov
xlat
fwait
jno
dec
cmp
lods
cmp
iret
mov
popa
inc
or
cmp
xchg
ins
pop
jecxz
push
xchg
inc
rcl
and
and
mov
test
pand
mov
xchg
and
(bad)
(bad)
lods
sbb
(bad)
retf
push
shl
sbb
jg
or
push
out
mov
inc
out
adc
sbb
xor
push
ror
test
loopne
call
pop
mov
mov
jne
shl
outs
sar
sub
inc
mov
loop
imul
mov
test
pop
icebp
ins
sbb
xor
ret
sbb
rcl
loope
not
shr
pusha
test
icebp
sar
jne
ins
cmps
and
arpl
ret
mov
or
das
dec
sbb
add
pop
cdq
jg
cmp
xor
sbb
push
dec
jo
pushf
daa
jg
and
sahf
add
add
xor
jl
adc
das
and
jns
dec
mov
lea
xchg
mov
mov
ret
adc
and
xchg
or
adc
ret
(bad)
cdq
xor
and
and
pop
movs
sub
pop
jmp
sub
hlt
cmp
dec
cmp
std
paddsb
das
cmc
add
xor
add
pop
(bad)
and
repz
lods
push
test
dec
ret
sti
add
inc
stc
inc
xor
lods
(bad)
aaa
cmp
cmp
adc
stc
loopne
js
aas
cdq
jmp
cmc
loop
mov
dec
out
ja
test
sub
test
cmps
jns
pop
add
std
gs
div
add
test
pop
mov
or
data16
in
js
or
jb
cmp
rol
add
xor
mov
loope
js
cmps
dec
adc
and
adc
das
sub
cmp
or
add
push
sbb
test
pop
les
ja
push
lock
mov
in
lahf
and
push
add
mov
sbb
lea
xor
or
das
or
or
jmp
sub
push
lock
fwait
aaa
ret
mov
and
add
and
and
pusha
mov
push
sub
test
add
outs
in
or
jb
adc
and
int3
add
mov
pop
ret
out
aad
xor
pop
sbb
adc
cmps
out
ins
mov
ja
std
push
ret
push
mov
cmp
pop
loope
std
leave
dec
adc
push
(bad)
push
push
pop
push
ret
stc
add
sub
dec
cld
mov
jmp
push
pop
mov
lds
mov
add
ins
cmp
cmp
sbb
inc
mov
call
arpl
(bad)
add
dec
adc
movs
movs
arpl
xchg
mov
push
int
xchg
adc
shl
jb
sub
jmp
icebp
repz
push
cmp
pop
adc
test
cmc
call
pop
adc
jb
loop
dec
adc
and
sbb
xchg
add
xchg
xor
or
leave
popf
es
pop
push
add
sub
add
dec
out
sub
mov
adc
mov
cli
add
loop
and
popa
mov
cmp
loope
ret
push
out
pop
idiv
pop
aad
rcr
je
mov
rol
rol
outs
xor
sbb
add
sbb
jo
lds
sub
or
(bad)
imul
popf
retf
jae
adc
mov
jp
das
mov
leave
jo
in
icebp
jnp
rcr
jb
arpl
sbb
cmp
fcom
jecxz
add
sbb
pop
jo
sti
dec
daa
das
or
cmp
lea
xchg
and
sahf
mov
cwde
mov
icebp
sbb
dec
btc
ret
adc
pushf
lods
(bad)
pop
add
(bad)
dec
popf
jnp
js
inc
aas
scas
cmp
(bad)
not
xchg
jmp
and
xor
ins
add
push
add
and
mov
aas
add
in
push
ret
out
daa
push
sar
mov
add
add
and
imul
test
cmp
aaa
inc
adc
mov
mov
mov
icebp
cwde
int
mov
(bad)
pop
xchg
add
xor
inc
sbb
push
lock
pop
aas
add
push
sbb
stos
outs
arpl
or
inc
adc
(bad)
rol
sub
arpl
rcr
mov
and
pop
add
and
jmp
mov
mov
xchg
dec
and
adc
in
ror
in
jecxz
ror
pusha
sbb
pop
test
and
int
in
test
rcr
xchg
add
mov
dec
mov
sbb
js
push
pop
(bad)
das
sub
(bad)
fwait
mov
(bad)
jecxz
jmp
and
sub
inc
rol
inc
push
inc
xchg
mov
inc
push
or
push
mov
sbb
popa
out
dec
mov
popa
and
sub
out
shr
cmps
pop
imul
cmp
jecxz
ins
mov
xor
retf
fucomp
cmp
push
or
cmp
push
mov
sbb
loopne
or
xchg
inc
stos
push
cmp
xchg
fnclex
cmc
sbb
xchg
inc
inc
jnp
inc
sub
(bad)
imul
add
shl
xor
add
lds
or
shl
das
or
mov
pop
and
adc
jmp
push
out
pop
ins
(bad)
pop
or
adc
cmps
mov
inc
sbb
or
imul
sub
jmp
jp
add
mov
mov
sub
ja
ins
sbb
scas
popf
mov
stc
xchg
push
xor
gs
pop
jb
dec
hlt
cwde
rol
lea
and
or
sbb
xchg
adc
out
xchg
pop
int3
xchg
jne
popa
mov
mov
cmp
jmp
add
push
or
add
xchg
pop
inc
cmps
popa
dec
mov
cwde
cdq
push
xchg
add
jmp
mov
mov
sbb
retf
ret
aad
add
int3
inc
and
popa
sbb
add
jno
cmp
or
or
cwde
fwait
addr16
addr16
xor
inc
imul
imul
jne
sahf
stos
sub
imul
or
ret
adc
test
xchg
lock
fldenv
or
call
dec
mov
jg
dec
cmps
adc
add
sbb
jecxz
inc
jmp
cmp
cdq
cmc
cmp
(bad)
retf
lahf
pushf
scas
xchg
aaa
iret
leave
mov
mov
xor
mov
sub
sbb
in
xor
ret
mov
psubsw
(bad)
int3
push
mov
jp
icebp
adc
mov
test
or
cmp
inc
jmp
pop
lock
shl
sub
xor
cmp
push
cmps
aaa
ret
fld
call
add
hlt
add
pop
or
shl
es
imul
loope
test
pop
loope
push
ret
scas
add
mov
push
or
push
sub
cmps
lods
or
add
lea
jne
loope
push
xchg
jne
adc
xchg
mov
inc
icebp
and
pop
push
push
inc
retf
arpl
sbb
pop
xor
adc
inc
lea
shr
es
rol
jnp
xchg
ins
ins
jle
je
lahf
imul
xor
jmp
out
shl
mov
fstp
or
dec
add
(bad)
push
shl
std
mov
ret
cmp
(bad)
setle
sub
dec
fmulp
inc
mov
loopne
nop
sbb
loopne
arpl
add
xor
dec
stos
adc
jecxz
jns
push
mov
pop
inc
mov
jns
daa
ror
xor
loope
mov
pop
mov
add
das
push
cdq
sub
add
leave
das
inc
sbb
fistp
lahf
inc
adc
push
pop
mov
xor
push
inc
popa
loop
add
sub
icebp
sbb
sub
xlat
popa
leave
adc
push
call
add
push
add
loope
sub
cdq
test
loopne
popf
and
sbb
sbb
popa
add
scas
movs
cwde
mov
adc
sub
loope
cmp
iret
shr
mov
or
repz
xchg
loopne
jo
fist
cs
push
xchg
sahf
stos
and
mov
rcl
push
bound
sbb
or
dec
xchg
jnp
or
movs
and
fadd
unpckhps
cmps
sbb
sub
inc
add
fadd
add
loopne
xor
adc
xor
inc
sub
loopne
(bad)
aas
cmp
push
mov
jmp
inc
add
rcl
jnp
ja
adc
cmp
retf
mov
loope
cmp
sub
push
arpl
and
jmp
sub
or
xlat
pop
adc
ficomp
cmp
push
push
add
jne
loop
cmp
mov
in
cmp
push
xchg
(bad)
mov
rep
das
ins
popf
mov
push
daa
ins
add
add
lods
ror
test
and
aaa
pop
mov
cmp
add
dec
fbstp
xchg
fbld
adc
mov
arpl
mov
xchg
icebp
pop
pop
or
imul
cmp
std
jmp
add
std
sbb
cwde
loopne
sbb
in
ret
ret
loope
inc
push
jne
pop
repz
inc
stos
and
push
pop
aaa
add
add
cwde
xlat
daa
inc
fmulp
shl
in
ret
cmp
inc
xor
mov
loope
test
jg
ret
xchg
push
add
test
std
mov
sbb
in
adc
sbb
or
sar
xor
jecxz
out
jp
jnp
and
push
push
pop
xchg
in
in
dec
xchg
push
pop
adc
call
adc
push
(bad)
fldenv
xchg
or
dec
add
loop
jp
add
test
stos
pop
cmp
(bad)
iret
jecxz
pop
cmp
aas
sub
and
pop
sbb
stc
ins
sbb
jmp
bound
sahf
aad
stos
jne
jae
int
cmp
push
clc
fisub
daa
clc
shl
addr16
aas
movs
imul
sub
jmp
jo
pop
pop
scas
int
in
mov
retf
das
dec
ins
std
or
jbe
test
or
push
loopne
or
call
leave
mov
loope
pop
fsubrp
mov
or
mov
inc
test
iret
je
hlt
pop
(bad)
or
dec
popa
mov
ja
or
push
sbb
sub
cwde
adc
pusha
scas
and
mov
xchg
dec
pop
sub
pop
add
test
pusha
lahf
pop
jae
push
mov
mov
loopne
lods
fldpi
inc
arpl
jl
popa
test
or
sbb
pushf
sbb
icebp
fs
ja
push
or
inc
sub
sbb
popa
and
aaa
jo
mov
popa
push
rol
aas
add
frstor
add
mov
xor
xchg
sub
retf
sub
sbb
xchg
mov
pop
movs
inc
jmp
test
lds
call
inc
pop
jmp
add
cmp
xchg
push
xchg
inc
rcl
movs
jmp
adc
fbstp
rcl
out
cmp
(bad)
jmp
mov
adc
cmc
sbb
dec
inc
push
adc
and
xor
jnp
aad
mov
loope
mov
jge
inc
cwde
push
jne
push
rol
arpl
or
and
inc
mov
ins
mov
loopne
xchg
cmp
mov
dec
cwde
and
js
pop
adc
pop
inc
xor
fmul
sub
retf
dec
(bad)
push
out
xor
rcl
repz
aam
push
test
push
idiv
pop
jo
popf
pop
and
add
popf
cmp
icebp
jp
push
in
dec
(bad)
cmp
leave
or
inc
and
or
push
jg
pop
les
(bad)
mov
hlt
cmps
inc
xor
cdq
pop
fidiv
sar
push
cmps
jae
movs
xor
and
mov
push
cmp
fiadd
mov
fst
xchg
push
call
inc
push
pop
push
fldenv
add
pop
or
sub
xchg
push
xor
cdq
call
add
aaa
add
push
add
loope
cmp
cmp
bound
dec
mov
add
add
sbb
psrad
dec
push
aaa
loope
sub
mov
xlat
out
icebp
lods
cmp
aaa
gs
pop
packsswb
sbb
cmc
xor
ret
lods
(bad)
xchg
mov
mov
cdq
std
ins
stos
ret
rol
ins
pop
mov
cmc
mov
mov
add
call
jns
jp
push
and
sbb
mov
xchg
or
call
stos
mov
mov
ins
jo
adc
pop
dec
vpaddq
and
add
and
or
inc
in
aaa
mov
sbb
lds
pushfw
ficomp
mov
xchg
int
shl
xor
dec
adc
dec
js
shl
add
mov
frstor
add
xchg
sbb
mov
dec
pusha
pusha
(bad)
int
add
or
pop
cmp
add
jo
xor
js
jp
pop
fnstcw
or
repz
ds
daa
jg
aam
adc
pop
out
push
cmp
loope
shl
cmps
mov
repz
popf
sahf
add
out
mul
push
mov
adc
scas
inc
in
(bad)
sbb
out
sbb
cmps
xchg
xchg
adc
xor
cmp
jno
(bad)
loope
cmp
push
in
jnp
jp
or
aam
cmp
push
sub
gs
xlat
mov
or
pop
or
bound
xor
xor
cmp
inc
jnp
inc
pusha
adc
sbb
add
mov
xchg
loope
js
inc
sub
push
cwde
les
dec
ins
fs
ja
sbb
lds
ret
ror
xchg
aad
fs
sub
pushf
jo
pop
inc
inc
xchg
jecxz
and
inc
xor
neg
daa
adc
outs
dec
add
call
in
daa
daa
lds
outs
ret
cmps
inc
(bad)
test
mov
pop
xchg
and
stos
sbb
loopne
sbb
jmp
jecxz
loope
cmp
imul
movq
push
add
cs
sbb
sbb
mov
not
xor
lods
lods
dec
mov
add
icebp
test
ret
js
cmp
jmp
ret
loop
inc
sar
mov
pop
dec
xchg
xchg
pop
aaa
mov
adc
push
nop
clc
loopne
mov
fsubrp
adc
sub
cmp
inc
(bad)
jnp
cmp
pop
popa
add
loop
cmps
popa
mov
sbb
dec
pop
jae
xchg
or
dec
call
pusha
xor
sub
push
pop
sti
(bad)
(bad)
inc
or
or
or
pop
or
xor
xor
add
and
inc
or
or
pop
push
test
or
add
cmps
cmp
or
or
sub
cmp
fadd
push
add
xlat
jge
sti
das
dec
dec
aas
inc
or
pop
inc
inc
in
add
push
or
add
not
sbb
cmp
inc
or
mov
pop
dec
or
xchg
add
sub
and
scas
and
add
or
icebp
sub
or
sbb
xor
(bad)
std
(bad)
add
and
and
add
ja
ins
(bad)
clflush
inc
xor
inc
xlat
cmp
sub
fwait
sbb
mov
push
aaa
add
add
ja
adc
and
xor
aas
inc
jo
mov
or
xchg
es
mov
or
mov
or
add
add
or
ret
or
add
or
or
or
ja
std
adc
and
sub
xor
or
sbb
mov
mov
or
add
das
out
push
or
inc
inc
add
fnsave
push
adc
pop
pop
jo
sbb
das
or
xlat
jne
jo
xchg
cmp
or
das
popf
pop
adc
sub
sub
mov
ja
mov
adc
add
add
add
sar
and
jmp
sub
lods
jmp
and
inc
(bad)
aas
xor
adc
out
inc
xlat
mov
adc
ins
out
or
mov
and
mov
push
rcl
cmp
sbb
jmp
cmp
jne
mov
or
(bad)
jne
inc
ja
or
adc
xor
lahf
cmp
and
xchg
mov
and
add
popa
ins
in
leave
out
xor
sbb
xor
sbb
push
mov
int
lea
imul
mov
push
outs
fldenv
or
xor
hlt
popa
push
sbb
add
mov
sbb
adc
das
xlat
jmp
repz
sbb
push
out
cli
clc
jno
test
xchg
dec
or
sbb
loope
gs
lods
inc
movs
xchg
faddp
in
repz
lar
jmp
or
jg
sbb
lds
std
mov
xor
jne
add
and
fisttp
add
jo
push
add
into
jo
push
add
inc
jp
hlt
das
pop
repz
out
test
push
scas
mov
out
xor
mov
je
rol
jg
jnp
jecxz
and
adc
inc
jo
mov
mov
in
cmp
jne
pop
add
pop
or
sub
jmp
or
inc
es
sub
xchg
jnp
inc
stos
cmp
or
loope
rol
dec
and
aas
dec
cmp
sbb
and
jecxz
push
mov
pop
inc
jecxz
add
sbb
push
cmps
cmps
aad
jno
jecxz
mov
rcl
outs
add
add
lds
xor
imul
pop
fwait
outs
test
scas
aas
lahf
pop
lds
jns
jbe
adc
mov
scas
pop
popa
sar
cmp
es
xor
adc
xchg
out
mov
push
sub
adc
test
das
popa
js
shl
inc
shl
clc
jb
sbb
xor
fstp
xor
mov
adc
add
daa
(bad)
cmc
(bad)
adc
in
rcr
and
add
mov
shr
ins
lods
pop
gs
cmp
add
pop
outs
add
jge
adc
mov
ss
adc
and
sub
ret
bound
adc
xlat
add
aas
(bad)
out
jmp
stos
dec
popa
icebp
sub
mov
test
dec
jge
xor
add
addr16
daa
cs
ja
lods
and
minps
push
scas
xor
jmp
cmp
mov
pop
inc
or
dec
shr
and
sbb
dec
dec
add
or
xchg
dec
or
jbe
sub
jmp
jmp
sub
and
fbld
add
cmc
mov
fwait
mov
or
push
out
test
and
sub
or
aaa
push
cmp
cmp
dec
in
aaa
dec
xor
xor
or
mov
(bad)
lock
xor
fld
and
(bad)
push
(bad)
(bad)
fist
stc
ret
push
scas
test
cmp
std
jl
das
pop
adc
sub
int3
mov
inc
enter
and
xchg
mov
or
cli
adc
dec
gs
mov
push
push
mov
test
jmp
and
rol
xchg
cmp
sti
sbb
xor
xchg
add
imul
mov
sub
pop
pop
std
jg
xor
cmc
pusha
repz
aaa
arpl
or
clc
jo
(bad)
cmp
popf
jno
gs
jecxz
xor
adc
push
cs
icebp
xor
jecxz
test
ins
cmp
add
out
das
mul
sub
jne
ret
sbb
sbb
mov
or
pop
pop
mov
sbb
dec
mov
ins
dec
and
loopne
xchg
sbb
or
fistp
fnstenv
or
popa
xor
jns
push
and
mov
xor
sbb
cwde
push
inc
aas
sbb
jno
or
(bad)
jmp
dec
jp
mov
xor
cmp
mov
xchg
sbb
shl
jbe
(bad)
rcl
shr
sub
push
out
rcr
addr16
dec
or
dec
or
adc
xor
popf
jmp
lahf
and
or
mov
aaa
mov
pop
dec
sbb
or
sbb
ret
or
or
(bad)
fimul
add
or
iret
xor
or
pop
adc
rol
ja
sbb
mov
sbb
xor
xor
dec
shl
push
mul
and
pop
mov
jecxz
test
popa
ror
cmps
jp
push
add
jo
mov
inc
adc
loope
dec
sub
mov
out
cmp
test
push
cmp
retf
rol
popf
nop
cli
or
or
mov
movs
and
adc
xchg
pop
add
out
lea
movs
mov
dec
dec
sbb
ins
rol
adc
inc
or
xor
repz
and
add
loope
dec
add
add
in
adc
xchg
push
loope
mov
cmp
rol
and
inc
sbb
jae
add
add
stos
movs
stos
jle
scas
push
pop
push
add
push
or
adc
sbb
dec
add
pop
outs
add
aad
mov
test
push
pop
push
sub
add
mov
sub
jne
aaa
push
cmp
push
jb
xor
inc
jecxz
mov
imul
cmp
push
shl
inc
add
push
jb
sub
add
scas
loope
fld
sahf
sub
jmp
cmps
inc
dec
and
cmp
add
sub
sbb
stos
cli
cmp
push
sub
adc
mov
adc
dec
std
gs
add
pop
pop
dec
aad
jo
jne
add
pop
push
sbb
out
push
add
rol
pop
popa
add
adc
data16
cmp
xchg
pop
or
es
jmp
pop
imul
ret
pop
sbb
shr
repz
adc
jle
sub
outs
add
aaa
adc
(bad)
jmp
xchg
popa
xor
push
xor
mov
inc
enter
movs
xchg
les
cmp
inc
rol
sahf
mov
add
sbb
or
pusha
mov
test
inc
inc
and
cmp
or
jecxz
mov
rcl
jecxz
and
addr16
xor
stos
xlat
rcr
rol
and
xor
xor
shr
xchg
add
or
int3
add
aaa
adc
sbb
rol
shl
xchg
mov
movdqa
adc
and
sub
rcr
lea
dec
js
sub
cmc
js
mov
enter
ja
cmps
ror
retf
aaa
adc
inc
es
add
push
cwde
xor
dec
sar
popa
ret
pop
add
sbb
xor
push
sar
jne
sbb
rcr
add
dec
das
movs
and
sbb
push
push
sub
sbb
lds
(bad)
sub
xchg
and
imul
arpl
jg
xchg
and
test
or
scas
inc
push
imul
ret
xlat
jecxz
jmp
dec
xor
stos
call
add
fwait
popa
arpl
cmp
leave
inc
lea
xchg
push
sahf
or
fwait
addr16
inc
imul
add
lds
or
pop
ret
sbb
push
stc
arpl
sbb
add
cdq
jmp
xor
add
inc
sub
cmp
push
(bad)
cdq
lahf
add
add
xchg
test
jmp
out
cli
imul
xor
add
jmp
and
cwde
mov
jns
or
cmp
pop
das
or
push
outs
cmc
cmc
add
mov
adc
xor
adc
(bad)
jns
add
xchg
push
sbb
aad
add
int
mov
add
or
xchg
loope
push
in
out
add
pop
mov
xor
loopne
jo
adc
sbb
adc
daa
and
add
shl
jl
and
pop
retf
inc
add
pop
ret
cmp
sbb
sbb
lods
and
and
xchg
xor
pop
jecxz
xor
adc
pop
aad
ret
aas
push
cwde
mov
pop
mov
mov
cmp
js
popa
dec
add
push
sub
in
push
xchg
mov
mov
pop
je
cmp
adc
sbb
test
retf
push
sub
inc
rol
loope
dec
cwde
sbb
xor
inc
clc
and
cmp
jo
test
xchg
jo
add
int
or
hlt
inc
ret
(bad)
icebp
shl
js
xlat
bound
mov
dec
and
es
(bad)
(bad)
(bad)
cmp
popf
or
cmps
rcl
and
mov
cmp
xor
int
out
adc
push
cmp
pop
ret
aaa
or
mov
dec
adc
push
aam
daa
mov
push
add
fsubrp
jnp
mov
lahf
pop
and
mov
jns
push
add
dec
pop
or
mov
lahf
cvtpi2ps
lds
ret
jp
cmp
js
jno
outs
mov
jnp
adc
cdq
mov
xlat
or
or
pop
cdq
data16
mov
rcl
pop
outs
add
pop
sbb
adc
int3
pop
push
stos
arpl
sub
shr
call
add
mov
jne
inc
add
jae
sbb
mov
mov
and
pop
pop
lods
sbb
lds
sbb
js
sub
push
and
add
add
xor
mov
arpl
adc
ret
stos
test
popa
mov
and
int
sub
popa
or
add
pop
jbe
fsub
mov
jo
inc
push
std
popa
push
scas
and
push
daa
ret
fldenv
outs
scas
pop
sub
push
mov
pop
aad
shr
dec
mov
out
sar
popa
cmp
cmp
push
ret
add
adc
push
imul
test
mov
mov
push
out
ins
(bad)
rol
data16
add
push
mov
loopne
aaa
xchg
shr
xor
mov
sbb
gs
sbb
pop
and
aad
push
pop
push
sub
inc
mov
mov
mov
or
scas
and
cdq
xchg
sbb
popa
popa
xchg
sub
and
dec
xchg
nop
dec
iret
mov
aad
mov
imul
jecxz
fcom
addr16
cwde
pusha
and
mov
imul
loope
xchg
and
dec
fsincos
add
mov
jp
ja
jnp
sub
ret
jae
push
outs
sbb
or
stos
inc
xor
popf
dec
xor
shl
xchg
es
and
push
xlat
jno
and
sub
jg
adc
pop
inc
cmp
jmp
les
add
add
xor
add
sub
bound
gs
mov
mov
mov
pop
xor
pop
popa
ja
dec
loopne
sbb
rdpmc
pop
jp
push
(bad)
popa
dec
dec
test
pop
sbb
add
shr
jo
sub
cmp
aaa
lods
sbb
push
or
mov
(bad)
xor
daa
test
and
sbb
imul
rcr
jmp
push
mov
cmp
sub
(bad)
xchg
shl
cmc
jo
icebp
fist
sub
pop
cmp
cwde
add
and
push
setne
xor
inc
arpl
xor
test
and
mov
inc
mov
cmp
popf
popa
cdq
mov
sub
mov
inc
add
daa
das
popa
xor
fwait
mov
adc
shl
les
dec
sbb
mov
add
or
inc
pushf
sub
inc
inc
cmp
push
lods
xor
(bad)
sysret
cwde
or
adc
xchg
daa
inc
pushf
cmp
inc
in
dec
loop
jae
movs
aad
int3
clc
add
and
mov
js
push
xor
ins
mov
and
cwde
mov
sbb
int3
push
xor
cmp
ret
xor
add
aas
loopne
arpl
imul
xchg
add
mov
ins
add
add
sub
in
xor
retf
mov
lahf
lea
xor
adc
popa
mov
add
and
ficom
or
xchg
addr16
repz
rcl
and
cwde
cmp
push
adc
pop
inc
imul
das
(bad)
not
add
sub
rcr
inc
pop
or
push
pusha
cmp
sbb
fwait
cmp
mov
es
lock
test
xchg
fistp
push
cwde
adc
pop
jae
adc
ja
push
add
dec
add
rcl
add
cmp
inc
jo
jne
cmp
and
and
add
bound
or
shl
ins
repz
js
loop
rcl
fcmovnb
pop
jno
pusha
cmp
daa
dec
jp
jno
mov
xchg
add
bswap
jge
cmps
jmp
popa
fild
jns
movs
pop
xor
push
das
dec
add
add
ret
adc
mov
cmps
pop
dec
fbstp
lea
rcl
repz
fwait
add
ins
add
int
stos
rol
add
cmps
jle
inc
xchg
or
cmp
stos
pop
pop
or
mov
out
movs
dec
cmp
dec
inc
jl
or
popa
add
dec
cmp
pop
neg
mov
packsswb
idiv
jns
xor
xchg
and
pop
rcl
loope
add
mov
pushf
pop
sbb
popa
cmp
sbb
or
in
fwait
in
aad
jecxz
and
loope
xchg
jae
imul
mov
and
bound
punpcklbw
xchg
int
aas
inc
pop
cmc
aas
sub
icebp
cmps
popa
add
xor
retf
enter
iret
add
push
mov
mov
add
outs
add
dec
sub
out
add
add
ja
push
adc
(bad)
and
lds
cmp
add
jp
sub
pushf
leave
daa
sub
sbb
add
pop
pop
jp
and
aaa
pop
inc
les
lea
dec
daa
pop
stc
adc
push
jo
inc
dec
lds
adc
stos
xor
sub
gs
outs
mov
leave
inc
mov
aas
jb
xchg
dec
add
add
gs
ret
cmp
jge
loope
aad
js
lods
adc
or
dec
cmp
jmp
sbb
cmp
popa
pop
add
xchg
add
and
iret
cmp
add
xchg
pop
xor
push
add
lods
sbb
or
jno
mov
mov
push
out
ins
dec
imul
xchg
retf
sub
dec
(bad)
add
out
sub
mov
push
cmovae
pop
outs
mov
sbb
xlat
add
mov
loope
sbb
fild
cmp
movs
jno
imul
test
cmc
cmps
add
int
dec
add
sub
jo
push
not
test
jae
or
loope
mov
inc
andps
inc
cmp
mov
cmc
cmp
push
test
adc
pop
push
jp
xchg
pop
jae
push
nop
mov
test
psubusw
call
inc
cmp
nop
cs
and
stc
popa
add
jecxz
nop
js
xchg
inc
mov
and
cmc
ror
loope
inc
hlt
sub
add
add
and
inc
ret
adc
mov
pop
inc
pop
xchg
imul
mov
ret
loope
inc
sub
iret
push
dec
xchg
xchg
test
arpl
inc
add
mov
addr16
cdq
jne
cmp
jb
sub
pop
cmp
add
add
scas
pushfw
arpl
loopne
stos
shl
pop
cwde
clc
js
cmps
loope
je
or
add
in
(bad)
loope
xchg
inc
adc
mov
pop
not
rol
popa
lahf
std
addr16
add
cmp
sbb
pop
pop
out
mov
call
or
sbb
push
sbb
jns
sub
retf
inc
ret
push
add
fld
fcmove
hlt
or
daa
and
iret
inc
les
rcr
ror
hlt
jp
sub
xchg
pop
adc
mov
add
pop
mov
sbb
and
fwait
push
test
cld
pop
add
xchg
adc
js
aad
lea
std
aas
cmp
cmp
loope
push
push
pop
jmp
mov
xchg
xor
sbb
push
jp
pop
(bad)
add
test
sbb
dec
cwde
jmp
jmp
xlat
daa
or
cmp
fst
cmp
pop
or
xchg
sbb
ins
gs
retf
bound
leave
jb
test
pop
movs
sub
push
jno
shl
jecxz
or
ror
popa
xor
push
out
xchg
adc
jo
inc
ret
inc
retf
jmp
adc
or
adc
and
adc
mov
stos
add
imul
outs
sbb
inc
adc
loopne
cli
add
sub
jp
mov
gs
adc
and
pop
cli
arpl
fwait
mov
imul
das
popa
fdivr
dec
cmp
rcr
ss
int
add
icebp
mov
push
fdiv
cmp
mov
push
cs
cli
loopne
das
inc
and
xchg
sbb
adc
jnp
sbb
xor
mov
xor
inc
mov
xchg
mov
push
mov
add
sbb
jmp
mov
mov
jnp
fiadd
leave
loop
sub
xchg
mov
mov
and
js
js
jae
lds
and
add
imul
add
xchg
sbb
call
shr
aam
add
mov
sbb
pop
pop
jg
mov
or
loopne
mov
loopne
rol
dec
neg
out
loope
jge
lods
or
in
imul
add
(bad)
jp
dec
or
add
lods
adc
pop
cmp
(bad)
out
jecxz
rol
shl
xchg
mov
iret
jge
and
popa
inc
add
xchg
jp
rol
pop
cmp
ja
or
or
pop
or
xor
dec
jb
jge
cmc
push
mov
jns
add
nop
pop
sti
popf
adc
mov
icebp
mov
or
jne
cmp
cmp
movs
inc
fldcw
adc
repz
add
add
cmpps
pop
pusha
xor
add
lds
pop
xor
add
push
push
in
(bad)
loop
adc
aas
pop
ins
mov
push
daa
mov
push
add
pop
es
cmp
arpl
pop
sbb
loop
jmp
push
sub
adc
call
ror
je
mov
inc
push
cmp
sar
cmps
xchg
sub
add
loop
das
outs
jmp
cmp
addr16
test
xor
in
daa
or
int3
inc
push
dec
shrd
sldt
adc
and
adc
rol
xor
shr
cmp
mov
jo
daa
lea
jne
jns
aas
stos
mov
imul
imul
imul
addr16
xor
add
mov
jl
test
leave
and
das
sbb
xchg
xor
loop
sub
int3
xor
shl
xor
fild
in
sub
jmp
fidivr
inc
jge
pop
pop
int
sbb
adc
iret
ja
cmp
jno
xchg
cmps
fldlg2
mov
ret
mov
mov
ins
xchg
jmp
adc
in
or
sbb
push
ret
cmp
or
js
shl
push
xchg
jg
adc
mov
dec
mov
lds
cmp
inc
stc
xchg
repz
and
push
(bad)
or
rol
iret
adc
or
leave
mov
xchg
stos
add
(bad)
loope
jp
add
inc
cmps
fs
cmp
sbb
pop
sbb
sbb
cmps
sbb
retf
cmp
xor
(bad)
push
pop
jmp
push
(bad)
mov
aaa
mov
std
(bad)
xor
neg
test
inc
das
inc
push
or
inc
ror
aaa
mov
add
inc
push
adc
add
jae
xor
ror
push
fld
push
ret
sbb
push
(bad)
cmps
popa
xor
jbe
ja
xor
(bad)
mul
sbb
sbb
in
inc
jo
mov
xor
addr16
js
sbb
aas
dec
out
rcr
mov
loop
push
daa
xchg
imul
add
loope
pop
mov
mov
sbb
(bad)
sub
xor
in
mov
ret
loope
mov
and
mov
push
cmp
stos
data16
ret
jmp
loope
sub
adc
inc
adc
push
ror
adc
cmc
pop
jnp
mov
in
push
aas
test
adc
out
rol
adc
mov
(bad)
jecxz
imul
int3
stc
in
and
mov
mov
retf
xor
jecxz
jle
in
inc
push
cmp
cmp
icebp
cmp
pop
popf
loope
loop
sbb
iret
cmp
outs
rol
ret
sub
fild
cmp
sub
in
push
mov
jne
pop
jnp
pop
or
cwde
shl
inc
jmp
pop
out
cmp
push
jmp
nop
or
mov
fistp
inc
cwde
or
imul
and
inc
cmp
lock
and
or
scas
inc
retf
adc
add
or
test
add
ret
loope
retf
sub
lods
addr16
imul
cmp
das
sub
jecxz
movs
scas
and
cmp
push
adc
data16
outs
lods
das
(bad)
fwait
xor
mov
or
adc
add
cmc
cmp
in
mov
sub
cmp
shl
push
pop
cmp
pop
int
hlt
imul
add
jno
pop
fbstp
fwait
mov
push
pop
jae
sub
sub
dec
in
xor
ret
sub
push
sbb
ret
cmps
sbb
push
sbb
scas
dec
mov
aad
mov
push
out
lods
pop
das
add
pop
cwde
mov
add
(bad)
jecxz
js
sub
mov
push
add
scas
mov
sbb
mov
add
add
fwait
kmovb
dec
int3
es
jg
xor
mov
lods
fabs
dec
jo
mul
scas
cdq
push
cmp
sar
add
push
(bad)
mov
mov
add
mov
add
jmp
movs
mov
cmps
and
add
stos
ror
add
sbb
mov
jnp
sbb
adc
ja
popf
mov
xchg
add
popf
popf
xor
sbb
fisubr
jae
dec
js
idiv
mov
or
sbb
loop
xor
cmp
(bad)
jmp
mul
cmp
ins
ss
fwait
popa
aad
inc
int3
js
pop
(bad)
js
pop
dec
inc
sub
xchg
cmp
popf
popf
dec
xchg
mov
rol
pop
xlat
arpl
add
arpl
loope
fistp
mov
loope
mov
sbb
and
(bad)
sub
xchg
sub
inc
mov
mov
add
shl
or
out
mov
stc
cmp
pop
cmc
rol
icebp
push
pop
and
in
push
cmp
push
popa
mov
jmp
ins
leave
mov
add
fnstsw
and
or
or
addr16
lahf
xor
and
add
push
or
pop
xor
cmp
sbb
(bad)
shl
jg
dec
sbb
xlat
add
inc
add
push
leave
adc
cmps
js
jecxz
add
fwait
rol
popa
in
repz
xor
gs
aam
and
mov
(bad)
ja
xor
inc
gs
xchg
push
sub
add
js
mov
jecxz
rol
pop
pop
or
js
es
cmp
push
push
dec
lahf
lahf
aaa
das
push
rol
sub
or
aad
adc
jp
add
test
or
adc
stos
xchg
jecxz
fiadd
add
(bad)
js
jo
sbb
and
loop
arpl
test
and
imul
and
sahf
iret
retf
cmp
pop
sub
icebp
loop
inc
sub
mov
inc
popa
cdq
daa
(bad)
push
add
add
sub
out
icebp
mov
popf
js
add
sbb
and
mov
cmovg
aad
aas
dec
daa
fiadd
add
aam
add
dec
sbb
pop
dec
sar
mov
xchg
push
xchg
and
scas
inc
pushw
imul
mov
sbb
in
or
ret
add
xlat
imul
add
lods
movs
and
sub
outs
das
mov
cmp
aas
ret
stos
xchg
and
jge
and
in
pop
sub
adc
and
push
jae
sbb
jne
aas
mov
mov
mov
inc
xlat
inc
outs
sub
inc
push
daa
dec
inc
pop
popf
imul
cmp
mov
inc
jp
out
sub
jnp
mov
test
add
pop
shl
(bad)
arpl
cs
popa
js
outs
mov
jnp
or
jno
stos
cwde
add
or
mov
adc
push
cdq
or
imul
sbb
inc
jo
das
jnp
popf
sbb
pop
pop
pop
pop
sbb
cmp
xchg
and
push
in
xor
jno
sbb
jnp
cmp
sub
in
cmp
adc
popa
sar
and
sub
loopne
xor
pop
jne
pushf
or
sub
jne
loop
js
scas
pop
inc
cmp
popa
test
out
lock
dec
stos
fidiv
xlat
adc
dec
(bad)
add
xchg
ja
dec
js
and
add
push
daa
add
sub
lock
mov
or
inc
sbb
pop
loop
popa
scas
mov
out
test
sbb
dec
pop
pop
repz
xor
and
dec
out
adc
test
or
dec
popf
fnstsw
mov
stos
mov
fiadd
dec
shl
cmc
add
add
cmc
pop
cmp
pop
int
mov
or
push
popf
popf
cmp
fisubr
push
sbb
movs
xor
pusha
(bad)
fwait
lock
push
fisttp
popa
sub
sub
add
add
inc
cmc
pop
add
sbb
test
test
(bad)
fild
jecxz
fwait
jno
jne
or
ret
sbb
call
ds
push
inc
push
cmp
or
or
mov
jecxz
or
popa
mov
shl
call
cdq
ret
mov
sbb
cmp
push
mov
ret
adc
xor
cmp
mov
mov
aas
ror
gs
push
sub
scas
ja
div
pop
stos
jge
jo
test
xchg
mov
add
push
fbstp
adc
push
add
(bad)
outs
ja
pop
sub
add
xchg
sbb
add
in
dec
jp
dec
imul
jnp
pop
mov
and
test
mov
push
add
sahf
mov
sbb
cmovge
sbb
aas
jge
push
sub
out
dec
neg
jnp
std
icebp
cdq
jge
cmc
xor
(bad)
jmp
push
imul
les
stos
aaa
adc
add
push
xchg
icebp
call
dec
movnti
add
xor
pop
es
dec
xchg
inc
push
dec
js
imul
mov
test
add
test
daa
fidivr
jo
aad
mov
inc
and
loope
sbb
and
(bad)
add
push
mov
jnp
xor
dec
int
es
mov
cmp
data16
fld
push
mov
gs
add
shl
add
pop
pop
cmc
fst
adc
inc
mov
mov
xor
popa
add
dec
or
add
mov
sub
adc
hlt
cmp
ins
add
pusha
add
and
push
adc
or
pop
(bad)
jl
sbb
stc
inc
pop
aas
cmp
in
in
mov
jmp
jno
scas
mov
or
xor
sbb
ret
inc
xchg
daa
pop
inc
cmp
pop
popf
jns
fstp
push
inc
jp
jnp
icebp
or
dec
neg
outs
add
or
bound
jnp
push
push
out
jno
test
leave
inc
ret
or
sbb
push
movs
add
cmp
push
adc
add
inc
lahf
add
daa
(bad)
popf
mov
cmps
fstp
jnp
cmp
jmp
dec
ret
mov
es
and
int3
data16
repz
jae
cmp
shl
btr
sub
and
aas
add
mov
cmp
mov
inc
fucom
js
loopne
out
(bad)
jg
mov
add
jg
mov
inc
cmp
in
imul
js
jmp
mov
loope
dec
pop
adc
sub
fcomip
xchg
cwde
bound
packuswb
jnp
adc
dec
sbb
retf
xor
or
loope
dec
pop
mov
nop
cwde
hlt
inc
mov
mov
adc
sbb
push
ret
adc
stos
aas
imul
idiv
xor
test
xchg
out
pusha
mov
xchg
stos
and
nop
mov
inc
adc
xor
fmulp
add
pusha
mov
test
cmp
(bad)
jmp
frstor
jno
sbb
inc
push
push
pop
push
aad
pop
addr16
lea
cmps
dec
sub
loopne
jns
or
mov
push
shld
push
xchg
shr
mov
ret
mov
push
xchg
push
inc
sbb
add
and
fcom
add
dec
dec
cvtps2pd
fwait
sar
pop
int3
data16
fistp
pushf
sbb
popa
nop
imul
xor
add
stos
imul
xor
jne
repz
or
add
xor
cmps
mov
jmp
xor
push
adc
xor
jecxz
std
shr
adc
loopne
jecxz
pop
xchg
mov
cmps
push
ret
mov
retf
int
pop
push
cmps
mov
loope
jae
rcr
in
sub
imul
jecxz
jae
popf
in
movs
add
or
loope
rol
adc
lahf
sbb
push
dec
nop
cmp
movs
sti
mov
push
repz
xor
xor
add
adc
mov
add
inc
xor
std
add
add
add
cmovle
cdq
xchg
xor
add
adc
outs
xor
push
sub
mov
push
punpcklwd
(bad)
fnstsw
dec
xor
push
jae
xor
add
xor
cdq
das
jnp
sti
(bad)
dec
jg
add
mov
push
daa
(bad)
scas
sti
outs
mov
adc
mov
in
(bad)
retf
aaa
add
mov
ins
pusha
fwait
out
mov
add
clc
or
cs
pop
push
dec
push
outs
xor
out
frstor
cmp
or
or
call
dec
xor
jno
push
xor
loope
inc
add
sbb
outs
(bad)
jns
int
mov
imul
mov
add
sti
out
out
aas
dec
xor
iret
scas
xor
int
xor
mov
mov
enter
push
(bad)
jmp
sbb
sub
jb
ins
xchg
xor
or
test
pop
xor
xor
test
xor
push
pop
xor
test
add
push
aas
cmp
outs
int
adc
(bad)
call
jne
dec
imul
xor
push
xor
jle
or
dec
xor
inc
push
xor
sahf
bound
jecxz
xor
xor
mov
cld
addr16
sbb
pop
or
shl
pop
and
xor
xor
push
pop
mov
jo
mov
out
mov
aaa
sbb
jmp
xor
pop
mov
push
inc
and
(bad)
fld
jns
addr16
je
xor
aad
test
imul
(bad)
jne
mov
aaa
scas
sti
(bad)
in
pop
add
ret
jno
add
mov
mov
mov
mov
xor
imul
mov
pop
add
jae
push
outs
xor
adc
mov
xor
xor
pop
sar
adc
add
xor
xlat
xchg
cmp
xor
or
xchg
push
xor
inc
mov
jne
fadd
and
(bad)
fld
mov
push
pop
jmp
cmps
(bad)
mov
pop
jmp
dec
push
fs
scas
inc
enter
or
sbb
xchg
fwait
adc
test
xchg
pop
xor
(bad)
inc
sub
xor
arpl
dec
outs
ror
cmps
js
(bad)
jg
and
in
add
(bad)
pop
push
jge
cld
pop
ja
xor
fisttp
jecxz
pop
or
xchg
xor
push
sbb
imul
fdiv
mov
cmps
mov
push
je
and
scas
xlat
jg
push
xchg
dec
xor
pop
or
dec
or
sbb
nop
jno
(bad)
fnstcw
mov
mov
test
or
call
mov
leave
(bad)
push
pop
loope
mov
push
mov
push
add
cmp
popa
sub
pop
pop
mov
cmc
retf
and
in
xor
pop
js
movs
imul
xchg
xor
pop
or
xor
bound
push
or
jmp
xlat
mov
xor
fst
ud0
dec
sbb
pop
or
lea
pop
data16
jmp
movups
cmp
jmp
pop
adc
loope
fistp
and
mov
mov
outs
xor
add
or
add
in
sub
call
inc
rcr
adc
cmps
cmovl
enter
mov
lahf
sub
gs
or
fild
xor
add
adc
stos
mov
pop
test
dec
xchg
repz
(bad)
or
xor
pop
adc
jne
add
scas
in
ror
scas
popa
cmp
push
pop
or
dec
xor
push
ret
aas
and
daa
and
mov
xchg
imul
pop
sub
xor
outs
pop
mov
gs
push
mov
xor
test
loope
pop
mov
pop
test
jmp
xchg
xor
arpl
pusha
push
loopne
add
cmp
imul
arpl
or
leave
lock
jae
fstp
ss
mov
fnstenv
ret
pop
and
xor
jmp
jmp
ja
dec
jp
adc
mov
retf
mov
sbb
jle
ds
icebp
data16
fcom
fwait
imul
aas
pusha
add
add
or
inc
pop
xor
dec
loop
nop
lods
sti
lahf
in
inc
js
outs
add
ror
rol
mov
xor
bound
jl
add
inc
ret
jecxz
aaa
jb
pop
cld
add
xor
and
ins
cli
pop
repz
mov
inc
cmp
pop
push
adc
or
inc
lahf
mov
cmp
inc
add
sbb
mov
inc
inc
add
add
push
add
and
or
mov
inc
mov
push
add
add
add
jbe
push
adc
inc
add
xchg
add
xor
add
xor
dec
daa
xor
sti
and
cmp
xchg
(bad)
jne
pop
add
and
sub
push
xor
das
mov
sbb
retf
push
das
sub
add
mov
xlat
push
inc
pop
xor
sbb
aas
aaa
add
add
stos
enter
retf
xor
adc
call
std
ret
and
mov
adc
or
pop
adc
mov
mov
mov
adc
inc
sub
xor
and
pop
and
not
jns
add
push
ss
inc
xor
jmp
xor
or
faddp
sub
add
xor
clc
mov
add
aaa
add
mov
xchg
add
inc
add
mov
daa
cmp
xor
sbb
push
shr
push
and
xchg
inc
add
add
and
leave
dec
jno
mov
mov
xor
inc
sbb
adc
adc
hlt
seta
scas
add
inc
push
cmps
cmp
cwde
add
pop
cmps
inc
add
leave
mov
xchg
jae
inc
push
mov
fwait
out
jne
sahf
sti
xchg
dec
jne
adc
scas
test
push
sub
ret
fldcw
xor
pop
xchg
adc
cmp
and
and
inc
adc
sbb
test
inc
xor
int
inc
adc
mov
dec
mov
add
aam
push
mov
cmp
retf
out
jb
cwde
push
sti
inc
add
xchg
mov
add
and
add
lods
bound
inc
inc
imul
push
out
adc
or
adc
in
out
or
add
inc
cmp
test
pop
xor
jmp
xor
or
sub
mov
jno
std
out
add
add
(bad)
adc
popa
ret
dec
mov
jae
add
daa
jmp
mov
push
scas
jmp
xchg
daa
iret
out
or
pop
inc
adc
jnp
jecxz
cmp
push
lods
or
fwait
(bad)
sbb
retf
comiss
ins
shl
sbb
sbb
ret
aaa
das
push
pop
xor
adc
jns
sub
adc
add
cmp
xchg
lods
ja
jnp
mov
idiv
fucomip
aaa
add
push
sub
lods
in
test
or
cmp
aas
mov
mov
pop
inc
xchg
std
push
ffreep
jno
aas
cmp
repz
sar
(bad)
add
sbb
dec
ror
or
and
adc
xor
sbb
repz
retf
pop
xchg
sub
sbb
data16
and
popf
cmps
and
push
mov
in
popa
xor
or
retf
popa
mov
stc
push
sbb
icebp
push
out
push
adc
stos
out
test
mov
inc
mov
and
je
cmps
test
leave
push
sbb
push
sub
lods
and
lods
out
imul
fldenv
and
test
fwait
imul
imul
ss
sub
mov
mov
mov
or
shl
adc
fiadd
ja
and
popf
inc
add
fiadd
sub
sbb
inc
mov
and
xor
(bad)
or
inc
add
icebp
mov
jg
jnp
loopne
adc
jp
inc
and
xchg
cmp
scas
cmp
push
outs
xor
jmp
cmp
nop
pusha
cmp
inc
mov
inc
sub
rcr
add
jnp
and
loopne
pop
push
and
and
cmp
push
push
push
cmps
sbb
cdq
mov
cmp
cmp
in
ret
mov
and
add
and
jne
js
js
push
pop
mov
adc
scas
inc
(bad)
mov
scas
test
ja
mov
add
pusha
push
add
in
lock
fld
aas
pushf
xor
addr16
adc
adc
and
push
imul
lods
xchg
inc
add
pusha
ret
add
add
inc
mov
xor
cmp
lds
pshufw
inc
mov
shl
add
call
xor
jmp
sub
inc
inc
mov
fcmovnbe
popa
popa
jo
pop
jns
hlt
push
jmp
rcl
dec
(bad)
movs
cwde
or
xchg
fucomip
loopne
lock
pop
sbb
inc
xchg
inc
mov
aam
sbb
and
sbb
adc
inc
movs
ror
pop
emms
scas
fnstcw
loopne
sub
cmp
sub
mov
sub
loope
test
(bad)
mov
js
jne
scas
fnstcw
xor
push
icebp
push
les
or
xor
cmc
pop
mov
scas
outs
jge
nop
cmp
jns
or
mov
shl
mov
aad
jmp
sbb
movs
dec
jp
fmulp
pop
inc
add
xor
daa
push
sub
mov
or
push
adc
dec
and
sub
pusha
mov
stos
jmp
ret
push
inc
ins
test
arpl
mov
sub
cmp
sub
xlat
pxor
jne
cmp
mov
fidiv
adc
dec
js
pop
lds
xor
pushf
pop
push
mov
jno
inc
popf
cmp
pop
fcomp
xchg
cmp
daa
test
in
jo
or
mov
cmp
cmp
and
xlat
pop
cmp
add
pop
icebp
jmp
popf
popf
and
mov
xlat
sub
mov
fldenv
jnp
add
popf
mov
pusha
ret
cmp
jno
cmp
popf
lds
jg
rol
cmp
add
jp
pop
arpl
cmp
add
xor
cmc
sti
jnp
popa
inc
test
mov
or
jmp
add
in
inc
xchg
or
xor
and
test
shl
icebp
cmp
cs
repz
arpl
sub
push
add
mov
jle
outs
pop
add
dec
aas
xor
push
lods
arpl
adc
arpl
xor
inc
mov
push
jecxz
pop
mov
pop
pop
icebp
xor
and
sbb
jns
gs
cmp
pusha
loopne
xor
popf
push
xor
js
nop
sub
add
add
add
call
and
pop
into
add
push
(bad)
js
lock
inc
add
call
add
mov
inc
(bad)
and
aaa
fistp
cli
pop
je
lods
mov
jmp
(bad)
push
mov
out
scas
shl
push
add
fnstenv
lds
shl
call
pop
aad
lods
and
sub
(bad)
pop
add
add
xor
add
mov
inc
popf
or
vpsubb
fdiv
add
add
std
popf
loope
mov
add
pop
inc
and
and
fst
add
adc
add
mov
pusha
aam
fild
sbb
out
(bad)
fucomip
cmp
scas
clc
test
(bad)
and
or
jl
mov
add
pop
cmp
fdivr
xor
pop
rcr
(bad)
(bad)
std
mov
test
ds
xor
mov
(bad)
xor
and
add
popa
lock
xor
and
inc
out
(bad)
je
jle
mov
push
and
xor
lods
and
mov
mul
fild
inc
stc
(bad)
xor
and
out
add
sbb
pop
jns
enter
lock
mov
adc
or
in
mov
pop
mov
adc
fistp
push
lds
adc
pop
add
or
aad
out
das
in
pop
or
sbb
jo
adc
add
add
xor
xchg
push
sub
(bad)
leave
cmp
jno
lock
jmp
adc
rcl
add
ror
ror
call
xchg
adc
push
add
lods
sbb
or
adc
pop
(bad)
sub
sub
nop
(bad)
cmp
ret
pop
shl
sub
and
mov
adc
sbb
pop
aad
ret
cmp
add
add
sbb
sub
pop
lods
rcr
sbb
jg
or
mov
and
dec
(bad)
pop
mov
jae
jae
leave
call
inc
push
pop
cmp
inc
loope
pop
shr
cmc
das
xchg
(bad)
pop
adc
xor
pop
mov
mov
movs
ret
lods
or
cmp
cmp
fst
sub
mov
aad
cmp
setg
(bad)
and
or
add
bswap
mov
jnp
sub
jg
lock
dec
movs
in
cs
xor
mov
cmp
dec
(bad)
sar
paddb
cld
pop
aad
mov
gs
out
pop
adc
icebp
loope
in
into
adc
mov
xchg
(bad)
cmp
jg
mov
mov
(bad)
or
and
sbb
mov
adc
test
xchg
mov
fstp
pop
aad
mov
inc
sbb
jecxz
gs
into
pop
aad
lods
cwde
daa
or
fist
imul
mov
adc
push
or
arpl
and
in
sub
sbb
rol
les
mov
hlt
and
popf
test
add
lods
lea
dec
iret
cmp
pop
dec
cmp
lds
out
(bad)
call
test
pop
aad
lods
mov
adc
pop
int
test
push
pop
aad
rcl
sbb
pop
leave
popf
sub
movs
mov
leave
jnp
rol
mov
popa
cdq
cmp
add
cmp
lods
push
fnstenv
pop
mov
inc
clc
mov
cmp
xor
out
shl
stc
jg
inc
inc
js
movs
ret
movs
ret
xbegin
mov
fst
cmp
dec
out
or
mov
mov
(bad)
and
gs
movs
and
fadd
xchg
sbb
(bad)
fstp
lahf
bound
xlat
lods
add
pop
into
stos
jmp
jg
pop
jmp
xor
aas
mov
cmp
test
jle
and
push
and
add
(bad)
and
shl
test
mov
add
sbb
add
aaa
pop
ret
push
(bad)
(bad)
fnsave
add
jg
dec
jne
sub
cmp
sub
imul
lods
rol
push
inc
mov
lods
in
lock
call
mov
gs
mov
lock
pop
sbb
lods
movs
xchg
test
mov
lds
rol
rcl
in
leave
aas
xchg
addr16
adc
(bad)
std
sub
sbb
push
and
and
and
int
or
ret
add
popa
add
adc
fldcw
or
mov
xor
mov
inc
cwde
add
adc
in
pop
xor
pop
or
mov
arpl
add
push
and
aad
xchg
inc
lods
fmul
and
jne
sub
add
xchg
inc
mov
add
out
xor
fst
jae
add
and
add
inc
loope
jo
packssdw
adc
in
or
mov
xor
or
push
dec
das
lds
inc
add
adc
adc
lds
pop
scas
ret
sti
jmp
jp
inc
aas
cmp
push
fistp
and
cmps
(bad)
push
or
inc
mov
ret
push
xor
arpl
add
mov
pop
push
rol
jae
lea
sbb
or
int
add
pop
ror
lods
jns
ret
iret
push
mov
add
sbb
add
mov
inc
add
xor
fwait
cmp
jmp
or
rol
add
add
jmp
ret
and
adc
or
sbb
test
ror
add
add
jnp
add
mov
pop
push
or
push
out
shl
retf
inc
fld
pop
add
or
icebp
rol
popa
das
ins
lods
sbb
aaa
or
xor
ret
add
jne
or
mov
adc
jmp
sbb
and
or
xchg
shl
and
inc
cdq
div
add
push
sub
fnstsw
mov
imul
mov
ror
push
pop
movs
dec
iret
fnstcw
xor
pop
add
test
bound
repz
fiadd
fwait
sub
xor
aaa
retf
and
fbstp
fadd
test
fcomp
or
pusha
add
xchg
in
out
inc
dec
add
call
xlat
inc
(bad)
jg
jp
add
xchg
jns
test
and
aas
dec
dec
pop
div
scas
add
jp
mov
inc
test
add
ins
cmp
data16
adc
inc
jg
mov
add
add
mov
add
gs
fsubp
je
cmp
inc
cdq
cmp
or
sbb
add
lods
in
jno
shr
and
pop
shl
push
iret
inc
adc
stos
pusha
aad
and
lds
cmp
jp
jne
jp
xchg
fnstsw
aam
add
rcl
pop
test
in
scas
fabs
ins
or
rol
push
punpckhwd
test
pop
stc
scas
jecxz
test
push
inc
adc
test
xchg
or
and
movs
mov
cs
fbstp
push
test
fcomip
loope
sbb
test
xchg
mov
test
dec
add
ins
push
xchg
call
sbb
mov
inc
or
loope
jne
test
sub
ja
sub
cdq
bound
push
or
pop
dec
sbb
jo
xchg
inc
fild
xchg
out
icebp
fistp
test
loop
or
sbb
xlat
shl
inc
add
leave
cmps
sti
ror
xchg
jb
mov
test
out
fild
inc
cmp
shl
aaa
cmp
aas
lds
mov
test
jno
add
jbe
cs
mov
mov
scas
mov
ja
inc
(bad)
test
test
push
cmp
add
or
jecxz
jecxz
xchg
add
test
(bad)
dec
stc
bound
cs
push
mov
retf
call
xorps
add
push
adc
pop
lods
or
xor
jecxz
mov
aas
setne
fnstsw
cld
cmp
dec
popa
add
push
pushf
push
and
fldcw
xor
outs
jge
pop
enter
(bad)
fcmovnb
loope
and
call
pop
nop
loopne
pop
mov
dec
test
adc
call
adc
retf
das
dec
lea
push
lock
out
pop
lods
std
cmp
mov
aaa
add
jmp
loope
add
addr16
pop
xchg
or
xchg
push
dec
sbb
sbb
xor
adc
ins
popa
mov
push
imul
mov
and
inc
mov
daa
push
cmc
dec
jnp
cmp
lds
cmp
shl
inc
add
mov
pushf
push
jbe
arpl
jmp
cmps
inc
aaa
ror
pop
inc
dec
out
jno
ror
cmp
push
inc
or
add
pop
jae
adc
stc
pop
mov
pop
dec
and
add
or
cmp
enter
or
jne
cmp
lea
cdq
push
jo
lock
or
ret
jge
adc
or
or
pop
and
das
add
loop
call
cmp
(bad)
push
mov
inc
dec
cwde
sar
popa
popa
(bad)
cmp
xchg
shl
sub
int3
jp
in
and
jne
xchg
addr16
dec
daa
pop
xchg
out
sti
lods
mov
shr
popa
dec
cmp
aad
inc
mov
fsubr
shl
lds
xchg
(bad)
adc
xchg
sub
or
pop
sub
lahf
adc
(bad)
repz
popf
fsubp
xor
mov
mov
jae
sti
shr
dec
sub
dec
mov
test
jae
mov
lods
jnp
cwde
icebp
push
xchg
mov
pop
scas
push
(bad)
ror
fwait
inc
(bad)
icebp
jp
aaa
mov
ret
stos
push
sar
mov
jb
(bad)
jl
sbb
cwde
test
add
mov
sti
imul
mov
xchg
mov
sti
mov
xchg
add
mov
popa
stos
fidiv
mov
cmc
lahf
or
cmp
add
test
cmp
addr16
add
ret
xchg
xor
lahf
(bad)
jmp
xor
(bad)
pop
scas
fimul
jns
inc
jp
in
add
mov
mov
cmps
pxor
adc
or
iret
loopne
mul
popa
(bad)
mov
retf
call
xor
mov
jge
jno
ret
pop
test
adc
loopne
mov
imul
or
mov
push
or
xor
(bad)
inc
or
jne
and
or
dec
leave
test
fwait
jo
xlat
mov
inc
xor
push
cmp
add
jg
sbb
dec
add
imul
shl
jno
jg
or
dec
add
add
dec
add
add
dec
xchg
test
add
add
cmc
gs
xchg
hlt
cmp
adc
cmc
push
jmp
movs
cmp
test
test
test
cmp
outs
sbb
loopne
xlat
push
jecxz
sbb
retf
adc
jge
push
dec
cmp
aad
pop
add
push
aad
add
jmp
lea
popf
ret
add
cmp
(bad)
cmp
sti
dec
jo
cmps
push
xor
inc
mov
aas
mov
add
ja
or
push
inc
imul
or
add
ja
popa
add
inc
rcr
add
add
add
mov
aaa
add
pop
push
iret
adc
aas
jg
pusha
or
mov
xor
push
mov
push
mov
add
add
std
xchg
sbb
jecxz
cmps
imul
gs
adc
xchg
outs
add
ja
pop
push
imul
add
jne
stos
ret
das
and
aad
add
sahf
imul
(bad)
mov
adc
ss
jne
jnp
retf
push
lock
xchg
xlat
test
lods
rcr
ret
test
jecxz
setg
icebp
js
ror
ins
adc
outs
add
add
call
pop
fs
dec
retf
sbb
inc
dec
mov
dec
mov
loop
cmp
sbb
ror
add
sub
inc
add
test
cmp
adc
ins
(bad)
push
adc
sbb
add
push
and
push
sub
xchg
popa
ins
dec
xchg
mov
add
dec
gs
jne
or
xor
into
xchg
xor
adc
xchg
jno
sub
add
mov
xchg
add
daa
pop
sub
icebp
xor
add
push
das
jae
jne
inc
push
pop
pop
add
js
scas
push
and
sbb
popa
sub
xor
sub
xchg
sub
je
rcl
aaa
jno
add
xlat
fnstcw
jb
pop
xor
push
jae
inc
shl
add
xchg
xor
jne
pop
aaa
imul
fld
jecxz
dec
cmp
add
loopne
pop
push
add
fld
mov
popf
sbb
in
cmc
jecxz
jp
(bad)
gs
add
pop
and
bswap
fisub
lds
add
add
in
or
adc
sub
sbb
or
in
xchg
cmp
dec
imul
sbb
jmp
mov
push
pop
xchg
(bad)
test
mov
mov
xor
mov
mov
cmc
dec
inc
fucom
mov
div
adc
das
add
add
push
lods
lds
add
xchg
sub
psllw
and
movs
ret
loope
and
rcr
mov
(bad)
mov
xchg
outs
ss
or
mov
cmps
aaa
pop
dec
or
inc
addr16
jnp
add
xchg
repz
es
jno
add
mov
inc
push
lea
iret
jo
sub
pop
ret
loopne
or
adc
pop
jge
or
cmp
jp
xor
fst
mov
xor
sar
loopne
and
icebp
adc
add
cmp
in
fisubr
jecxz
or
das
jmp
pop
push
sahf
cmp
mov
pop
cmps
or
int3
push
cmps
and
pop
pop
dec
cmps
jno
adc
sbb
add
jno
scas
dec
lock
jno
aad
inc
xchg
pop
or
dec
mov
push
sbb
add
test
xor
cmp
inc
loope
retf
imul
add
add
or
jmp
add
sti
xor
outs
xchg
dec
jbe
ins
mov
xchg
jp
cmp
and
addr16
fdiv
adc
xor
in
xchg
sub
add
push
sub
pop
xor
out
in
mov
push
loopne
sub
xor
int
mov
or
aad
in
test
add
leave
dec
pop
inc
fs
jmp
dec
cmp
jmp
xor
fisttp
adc
mov
adc
cmp
loope
int3
cmp
cmps
imul
or
popf
push
xor
sub
add
rol
jmp
in
imul
prefetch
test
xor
popa
add
dec
shl
sub
int3
imul
outs
jmp
popf
dec
mov
fld
jno
xchg
hlt
call
adc
test
push
ror
inc
cwde
xor
mov
adc
add
mov
sub
fs
mov
sub
jns
add
rol
add
mov
ins
outs
pop
je
bndldx
xchg
mov
out
icebp
imul
dec
cwde
adc
lods
xor
jge
inc
pop
pop
pop
or
push
retf
(bad)
das
fisubr
jecxz
add
or
mov
in
stc
(bad)
je
cmp
rol
xor
mov
dec
lea
or
int3
test
and
sub
xchg
push
dec
xchg
sub
es
jge
std
add
cmp
sub
mov
xlat
imul
stc
push
push
pop
fs
and
fmulp
aad
mov
jp
jge
push
or
xor
movs
dec
cmp
aaa
sub
sbb
pop
sbb
mov
das
and
dec
add
sbb
add
or
and
push
fisttp
dec
cmc
cmp
push
jmp
sahf
comiss
push
sbb
mov
(bad)
lds
dec
daa
add
sbb
xchg
cmp
inc
adc
repz
sub
popa
dec
add
cmc
cmps
cmps
push
cmp
add
pop
inc
xchg
popa
mov
rol
addr16
jge
xor
add
adc
add
mov
add
jmp
and
mov
ret
push
add
jg
loopne
mov
xor
arpl
cdq
ret
imul
nop
mov
mov
mov
pushf
sbb
ja
inc
inc
sar
int
add
pop
ins
cmp
inc
popa
cmps
xchg
or
hlt
cmp
add
pushf
mov
and
mov
das
cmp
push
movs
pop
aad
call
adc
sbb
sub
adc
add
movs
jmp
xor
push
and
lock
mov
icebp
out
ret
dec
pop
xchg
add
out
aad
popa
and
cmps
ret
loope
leave
icebp
jge
std
loopne
pop
mov
push
sbb
mov
aaa
rcl
push
add
add
jnp
sub
adc
xor
sbb
mov
imul
xchg
jae
test
fidiv
ja
cmp
mov
add
and
sbb
inc
inc
frstor
lahf
jns
fwait
cmp
and
add
int3
bound
mov
sbb
adc
dec
and
add
rcr
sti
add
cmps
push
loope
dec
add
test
push
mov
jo
nop
movs
iret
pop
add
xchg
xchg
cmp
js
push
xchg
pop
mov
cmp
mov
popa
mov
and
mov
test
dec
mov
rcl
mov
pop
arpl
mov
jo
fcomp
das
icebp
int
mov
mov
pop
adc
add
(bad)
mov
sub
outs
or
and
in
popa
xchg
icebp
push
xchg
xor
sbb
jecxz
xor
pop
(bad)
loope
push
mov
xor
vphadduwq
hlt
sahf
adc
sbb
add
test
push
ins
in
xor
mov
int
ja
pushf
push
xchg
dec
mov
mov
push
cdq
and
adc
and
leave
cdq
imul
jnp
jns
dec
popa
add
dec
add
or
or
imul
xor
cmp
add
rol
mov
cmp
jb
mov
and
add
imul
and
push
pop
test
inc
outs
or
test
inc
and
mov
add
scas
sbb
jmp
shl
sub
jo
mov
xchg
add
retf
mov
and
cmp
lea
pop
test
xor
jo
fmul
pop
int
sbb
pop
ss
add
inc
test
pop
cmp
mov
add
inc
cmp
popa
ret
js
ret
mov
test
cmovae
mov
pop
cmp
sbb
xchg
push
sti
mov
and
std
mov
ror
cmp
leave
repz
loope
add
loope
movs
adc
repz
add
cmp
js
push
xchg
lds
aaa
inc
pop
adc
in
test
dec
mov
jo
sbb
adc
adc
popa
add
sbb
(bad)
jecxz
iret
ja
jb
sub
jg
add
and
inc
pop
popa
adc
push
xor
nop
aad
adc
dec
fld
add
cmp
xchg
ror
rol
adc
rol
cmp
lock
sbb
and
push
add
add
in
push
loopne
xor
aaa
mov
and
mov
add
adc
lds
aad
dec
xor
cmp
pop
(bad)
jo
out
or
femms
cmp
mov
sub
xor
add
test
add
add
in
mov
sti
cmp
ja
adc
and
outs
lahf
aas
loope
or
add
xchg
jne
cmp
jno
rol
adc
jne
ja
pop
iret
(bad)
fistp
int3
pop
adc
push
int
fild
dec
inc
das
dec
xchg
inc
stos
push
sbb
or
js
(bad)
jmp
pmaxub
xchg
stc
gs
dec
js
call
not
sub
or
inc
rol
sub
mov
jmp
ret
test
inc
mov
(bad)
push
ret
xchg
dec
(bad)
mov
push
push
test
das
inc
inc
in
loope
add
xor
push
pop
inc
mov
fs
push
mov
xchg
aas
push
mov
dec
adc
sub
jmp
cmp
or
mov
lock
(bad)
sub
cmp
shl
fwait
scas
xchg
or
pop
add
gs
das
test
ins
aaa
test
ins
and
xor
sub
test
fadd
pushf
or
pop
scas
jmp
sbb
outs
push
outs
fnstenv
mov
pop
adc
popf
sbb
cmp
ret
xlat
loope
push
xchg
mov
push
(bad)
movs
pop
xchg
push
lock
imul
adc
pop
shl
jae
jne
shl
retf
adc
xchg
hlt
es
scas
fst
pop
repz
inc
js
(bad)
push
ins
mov
sbb
mov
inc
adc
xchg
cmp
movs
test
pusha
add
pop
sub
xchg
test
dec
cwde
xchg
dec
fwait
adc
int
mov
retf
and
mov
add
test
or
pop
mov
int
cmp
pop
or
test
fstp
loope
push
cmps
or
add
or
lea
lods
mov
stos
cmp
popa
dec
push
xor
push
(bad)
fdivrp
movntq
out
inc
add
std
jo
pusha
gs
dec
adc
movs
mov
(bad)
jnp
and
jmp
test
push
dec
and
and
jmp
and
inc
leave
fst
mov
fwait
jmp
adc
jnp
push
cmps
xchg
(bad)
pop
movs
mov
xchg
mov
pushf
push
(bad)
adc
or
cmp
daa
sub
cmp
ja
jne
inc
push
ret
cmp
mov
int
or
loop
cwde
lds
aad
sbb
data16
push
mov
rcr
xlat
call
fmulp
inc
(bad)
cmp
jne
push
sub
fild
add
sbb
cmc
and
add
cmp
add
and
wrmsr
add
add
add
sbb
xchg
lods
popa
add
add
add
dec
add
lds
push
add
add
sbb
xor
add
add
add
sub
cmp
and
fild
pop
push
iret
inc
loopne
ja
sbb
inc
xor
shr
xor
add
test
or
icebp
loope
mov
inc
add
aaa
ds
mov
add
cwde
xor
lods
sub
push
scas
lea
pop
or
push
adc
and
sti
sbb
add
aaa
lods
add
mov
dec
add
loope
stos
pop
add
adc
mov
test
popa
inc
and
add
in
pop
aas
add
or
add
and
add
and
pop
mov
imul
xchg
jo
mov
jo
add
mul
fwait
icebp
test
jns
ror
push
ret
div
lock
inc
xchg
xor
mov
int
and
and
lds
inc
xor
xor
add
pop
and
mov
movs
cmp
jg
inc
add
add
add
add
push
mov
cmp
mul
cmp
xor
inc
shr
ds
xchg
mov
sub
fdiv
iret
xchg
ret
cmp
dec
add
and
fstp
xor
mov
pop
movs
xchg
sub
xchg
mov
pop
jg
mov
(bad)
addr16
fxch
add
out
sbb
cmp
mov
xchg
out
push
mov
cdq
sahf
mov
jge
inc
call
test
xor
pop
sbb
inc
adc
cdq
cs
xchg
xor
mov
xchg
add
inc
daa
xor
add
neg
leave
cmp
aaa
mov
fiadd
inc
shl
shl
or
adc
inc
sbb
loope
leave
sbb
sbb
adc
add
repz
xchg
sbb
push
rol
mov
bound
dec
xchg
retf
mov
xchg
xor
lods
test
popa
and
jae
cmps
dec
jmp
or
jo
int3
mov
popa
add
inc
js
ss
stc
daa
(bad)
cdq
ret
push
out
ret
push
cmp
pop
sbb
mov
lock
xchg
or
int
shl
imul
dec
mov
mov
cmp
xchg
sahf
loope
inc
pop
cmp
add
add
adc
fnstenv
adc
in
or
aam
cmp
arpl
cmc
pop
inc
inc
sbb
mov
inc
in
out
mov
add
add
add
or
fwait
xor
cmp
push
ret
ja
dec
add
ds
cmovle
add
cmp
lds
dec
fwait
or
retf
call
movs
sbb
jge
jnp
add
jo
cmps
ret
mov
in
cmp
jmp
inc
dec
and
pop
pop
pusha
cwde
bound
pop
add
jno
mov
add
xor
sub
iret
xchg
add
jecxz
adc
or
inc
pop
xchg
dec
xchg
shl
pop
gs
shr
sub
push
dec
add
add
ret
cwde
pop
xchg
sti
sbb
xor
out
shl
adc
pop
sbb
stos
jbe
icebp
js
out
jnp
adc
xor
add
xor
add
ins
xor
push
(bad)
cmp
imul
int3
push
out
ror
push
test
cmovno
xor
les
xchg
je
pop
adc
popa
gs
(bad)
shl
(bad)
shl
pop
fldl2t
xor
cmp
repz
cmp
mov
add
jae
pop
pop
femms
pop
xor
inc
mov
jecxz
cmp
and
xchg
sbb
pop
pop
inc
or
fmul
sbb
loope
adc
stc
or
fldpi
mov
ss
loope
movs
inc
aas
fnstenv
add
not
and
push
cmp
lock
add
ror
inc
pop
and
in
imul
push
inc
jl
push
xchg
icebp
and
sbb
nop
mov
jo
jno
xor
xor
push
or
js
xchg
fcomip
add
fisttp
mov
popf
mov
and
and
mov
sti
mov
dec
push
xor
xchg
inc
push
pop
or
cmp
mov
ret
jcxz
loopne
push
push
loope
icebp
sub
pop
xchg
loope
push
imul
and
add
add
dec
mov
pop
fnstenv
cmc
jns
inc
add
gs
mov
jge
and
add
xchg
fistp
cmp
dec
sbb
or
cmp
push
jg
cmp
leave
sbb
and
rcl
jmp
aas
lds
xor
push
aaa
aas
or
lock
or
iret
adc
and
in
mov
mov
out
or
mov
mov
xor
daa
adc
mov
addr16
jno
lods
ret
mov
jmp
push
adc
xchg
ror
hlt
dec
cmps
push
sti
ja
sbb
popf
dec
out
inc
mov
inc
pop
pusha
or
inc
aas
cmp
cli
and
retf
mov
cmp
pusha
mov
stc
push
or
jnp
fnstenv
das
xchg
xor
jg
fwait
cwde
xor
data16
lea
ret
xor
pop
jp
and
sbb
mov
loope
emms
or
xchg
push
daa
es
aas
dec
imul
push
ret
xchg
stos
inc
fistp
xchg
nop
or
sbb
sbb
inc
mov
pop
popf
jmp
test
xchg
or
loopne
(bad)
xchg
popa
xor
ret
add
sbb
aas
leave
inc
and
sbb
mov
ret
jns
lea
pop
inc
icebp
pop
lods
sbb
add
sti
pop
dec
cmp
push
stos
aaa
mov
cmp
mov
mov
xor
inc
add
sbb
nop
cmp
cmp
or
fwait
sbb
retf
inc
jbe
or
js
test
and
inc
stos
pop
xchg
cmp
popf
fdivp
cmp
call
iret
mov
jge
sbb
push
int
sbb
pop
adc
or
lods
inc
xor
dec
jl
aas
out
sbb
mov
fld
or
mov
test
sub
xchg
and
stos
or
pop
or
xor
popf
cmp
inc
add
daa
sysret
xchg
xor
and
cdq
push
add
xor
jl
and
mov
inc
xor
cmp
jo
sbb
and
call
adc
repz
addr16
lods
test
cmp
add
mov
push
sub
pusha
mov
pop
sbb
push
mov
add
jmp
sub
sub
xchg
mov
pop
rcl
icebp
sahf
mov
test
or
lds
pop
xchg
pop
add
jne
add
adc
sub
add
or
inc
not
sbb
push
adc
pop
and
in
jmp
mov
mov
pop
pop
int
adc
mov
and
aad
loopne
or
dec
pop
pop
cdq
add
scas
retf
cmp
mov
or
pop
(bad)
cdq
and
frstor
add
add
pop
data16
or
jno
push
and
sbb
and
sbb
dec
jns
cwde
add
out
sbb
inc
imul
and
lock
es
fild
or
test
cs
aaa
inc
mov
adc
adc
or
add
lock
inc
les
ins
data16
jnp
loopne
jns
add
sti
js
inc
xor
adc
movs
mov
and
mov
mov
push
dec
mov
pop
lock
ret
fmulp
inc
scas
sets
jecxz
iret
inc
in
xchg
jne
retf
mov
xchg
imul
or
(bad)
addr16
pop
shr
sbb
sub
jne
xchg
cwde
jmp
sub
push
sub
cmp
and
(bad)
aaa
sbb
rol
movaps
sub
fldcw
test
or
xor
cmp
cmp
adc
or
pop
xor
jo
ins
ja
gs
push
cmp
popa
mov
sub
xor
test
mov
cmp
out
ja
aaa
xchg
add
sar
rcl
shl
scas
(bad)
cmp
sbb
scas
cmps
sub
shl
and
adc
xor
mov
js
js
sub
jecxz
jne
leave
mov
cwde
xor
and
out
push
push
add
mov
es
ret
add
sbb
inc
cmc
push
outs
xor
xor
test
clc
in
inc
frstor
test
sbb
ins
(bad)
outs
popa
or
adc
fnstcw
lea
cmp
xor
sbb
imul
retf
xor
sahf
sub
adc
or
inc
add
dec
push
out
sbb
fwait
cdq
ret
add
sub
scas
ficomp
sbb
sbb
adc
cdq
mov
jno
test
inc
js
and
sbb
sub
neg
jne
mov
fidiv
ja
pusha
pusha
lock
shr
icebp
pop
adc
sbb
push
sbb
jmp
mov
sbb
xor
xchg
sbb
scas
out
sbb
pop
stc
jnp
sub
sub
cmp
ret
mov
cmp
ins
mov
push
test
test
xchg
pop
lahf
pusha
and
pop
retf
sti
pop
data16
jmp
add
mov
xor
mov
loopne
aaa
jns
or
jp
push
pop
ins
iret
ins
xlat
loope
and
popa
or
cmp
out
jae
outs
(bad)
jmp
xor
lock
mov
test
ins
fwait
or
popa
add
pop
(bad)
mov
daa
dec
adc
ret
test
or
sbb
pusha
adc
scas
cmp
and
aas
inc
sub
fstp
jns
xlat
ret
cmp
and
or
mov
inc
loopne
or
xor
xor
daa
test
aas
sbb
push
shl
gs
test
adc
outs
jecxz
xor
mov
and
xor
sub
cs
lods
fidiv
pop
pop
aas
inc
mov
jae
cmps
mov
mov
sti
xchg
push
inc
cmps
pop
mov
and
and
add
inc
xor
jecxz
mov
lods
adc
fimul
cmps
mov
(bad)
adc
imul
jmp
ret
dec
in
repz
inc
mov
sub
jmp
test
inc
gs
mov
pop
pop
inc
push
outs
jge
ror
lea
add
dec
sbb
xchg
adc
retf
pop
mov
or
je
or
(bad)
cmps
xor
cwde
mov
cmp
inc
js
lds
rcl
mov
pop
push
pop
jmp
popa
cmp
lods
jno
mov
pop
and
(bad)
ins
add
(bad)
mov
xchg
adc
dec
or
loope
add
pop
ret
fisub
mov
fimul
icebp
faddp
sbb
adc
sbb
jae
popf
and
cmps
cmp
jnp
dec
pop
ins
jecxz
loopne
adc
pusha
and
adc
add
xchg
out
in
fidiv
inc
out
adc
loop
test
pop
add
adc
popa
nop
or
ss
mov
int3
data16
stos
dec
test
scas
dec
xchg
sti
das
push
mov
and
dec
sbb
add
call
loopne
in
xchg
and
js
or
sub
push
push
loop
adc
pop
dec
add
mov
adc
inc
jae
dec
ror
cmps
pop
lds
jbe
jmp
xchg
addr16
mov
aaa
fidivr
jmp
mov
inc
mov
mul
dec
les
popa
gs
or
pop
outs
(bad)
icebp
xor
add
jae
std
xor
jne
xchg
jnp
add
add
push
add
mov
outs
xchg
add
inc
adc
clc
arpl
add
jbe
fld
idiv
jb
aaa
imul
pop
adc
push
out
sbb
loope
test
shr
popa
mov
lea
gs
pop
adc
add
jmp
xor
xchg
and
pop
xchg
aad
rcl
out
test
push
icebp
jae
(bad)
loop
or
inc
ret
cmp
sbb
push
sub
mov
jmp
push
sbb
mov
lods
add
loope
jmp
inc
mov
scas
adc
sbb
inc
jne
cmp
cs
mov
dec
or
gs
cmp
pop
sub
adc
jmp
aas
inc
pusha
inc
test
dec
frstor
add
sbb
and
rcr
mov
imul
mov
mov
mov
aad
mov
icebp
lock
popa
xor
or
add
addr16
icebp
jp
popf
iret
sub
repz
add
js
mov
sti
and
cwde
lock
sti
push
stos
xchg
jno
cmp
adc
loope
and
sub
xchg
movs
push
lahf
push
mul
aad
vpshaw
and
sub
inc
shl
mov
add
xchg
inc
scas
mov
sub
fisttp
iret
imul
outs
add
add
dec
int3
pop
nop
mov
loop
or
xchg
cmp
test
mov
or
adc
cmp
sti
shl
xor
push
sbb
sbb
fstp
mov
jo
scas
adc
shl
test
test
out
frstor
xor
push
inc
push
cmc
xlat
mov
sbb
mov
push
pop
dec
or
in
and
pop
add
xor
mov
mov
enter
ror
xchg
push
outs
mov
pop
adc
sysret
add
or
or
jp
sub
outs
mov
shl
cmp
push
aaa
iret
or
outs
sbb
inc
pop
daa
sub
jle
or
in
mov
mov
adc
push
mov
mov
sub
pusha
pop
jmp
dec
xor
or
jnp
shr
pop
cmps
fucomip
or
cmp
cmova
or
or
adc
js
and
add
out
sar
pop
out
iret
ja
imul
mov
pop
cli
and
jo
stos
jg
add
add
loope
cmp
mov
movs
test
daa
push
jecxz
adc
jl
js
cmp
sub
inc
ja
cmp
jmp
pop
xchg
sub
idiv
sbb
and
neg
sbb
adc
push
cmp
jl
(bad)
popa
and
push
mov
pop
je
add
pop
jecxz
push
shr
dec
scas
test
inc
ins
xchg
mov
inc
xchg
push
aaa
inc
mov
pusha
retf
jp
aas
mov
adc
in
mov
mov
add
jno
popa
inc
sahf
sub
xchg
iret
xor
adc
adc
sbb
push
sbb
add
inc
hlt
outs
cmps
pop
push
xor
jno
add
lock
pop
push
inc
rol
mov
out
push
jbe
sti
xchg
pop
jmp
adc
inc
and
ret
loope
stos
imul
push
jo
add
sbb
fisubr
loopne
pop
addr16
jb
shl
test
rcl
fwait
cmp
hlt
dec
cwde
sub
inc
xor
sbb
test
dec
pop
pop
add
mov
out
mul
sub
and
js
add
mov
ja
jne
mov
or
mov
test
add
jmp
xchg
in
test
dec
add
popa
sub
in
mov
test
ror
mov
je
stos
and
scas
jae
and
sub
xlat
es
inc
lds
sub
ins
add
loope
inc
cmp
add
xor
sar
jae
shl
stc
pop
shl
in
ret
rol
popf
vmread
scas
test
pop
pop
aad
call
xor
or
or
gs
loope
inc
sbb
jo
clc
shr
scas
int
add
int3
pop
es
popf
or
sbb
sub
shl
cmp
cs
mov
lock
adc
push
sbb
test
or
dec
pop
rcl
retf
xor
cwde
mov
scas
inc
lds
dec
pop
mov
sbb
lock
dec
lods
popf
inc
cmp
mov
in
int
shl
sub
mov
inc
cmp
add
jmp
aad
lock
setns
sbb
rcr
adc
or
ins
arpl
jp
or
mov
mov
jnp
add
ret
fsubp
mov
adc
add
cmps
cmp
clc
jg
pop
xchg
dec
cmps
xor
cmp
jg
lock
(bad)
movs
das
popa
sbb
and
sbb
pop
xlat
push
sbb
mov
aaa
xchg
push
dec
cdq
rol
push
ret
out
push
sub
add
neg
not
lods
icebp
sahf
test
adc
jecxz
adc
cdq
jnp
ret
adc
imul
fild
jne
imul
lds
and
jnp
pusha
pop
fisttp
pop
pusha
adc
jg
xor
cbw
enter
add
jo
and
add
or
jne
sbb
push
cmp
or
lods
bound
ret
jbe
sub
iret
adc
aad
leave
adc
jg
jecxz
ins
mul
icebp
cmc
imul
ffreep
rcr
imul
add
and
cmc
(bad)
stc
cmps
jecxz
ins
fldcw
xor
and
cmps
adc
add
and
xor
rol
aam
test
pop
cmp
sbb
es
pop
sbb
add
push
sub
push
cdq
and
sub
adc
das
jnp
test
add
les
add
jp
sub
fst
cmp
cmp
or
retf
in
push
add
js
retf
inc
and
add
int3
aas
dec
mov
mov
xor
lods
loopne
mov
pop
ret
or
push
aas
(bad)
mov
dec
jne
push
push
scas
mov
add
mov
add
shl
push
loop
loope
aad
outs
add
or
and
pop
mov
sub
dec
and
fld
inc
fstp
push
mov
add
push
dec
push
xor
cmp
xchg
outs
cmps
add
mov
imul
and
or
add
mov
mov
js
jge
adc
fwait
inc
push
popf
jb
stos
or
and
in
out
popf
sbb
sub
cmp
iret
or
mov
lock
add
jg
push
inc
cmp
mov
cdq
mov
xchg
or
inc
popf
shl
ret
and
xchg
sbb
popf
lahf
dec
cmp
inc
aad
int3
sahf
and
(bad)
imul
pop
adc
push
bswap
sbb
inc
int
or
mov
ja
sbb
imul
and
das
ror
and
inc
pop
add
and
cmp
add
or
adc
es
outs
aaa
mov
dec
adc
mov
push
or
shl
call
jnp
push
and
jo
cwde
adc
xchg
sbb
or
icebp
pop
mov
add
inc
or
add
sbb
das
jecxz
iret
icebp
rcl
adc
pop
sbb
or
mov
retf
enter
ins
mov
cmp
jno
icebp
xchg
rcr
and
inc
cmp
pop
add
sbb
xor
dec
add
imul
xchg
or
xchg
or
neg
ret
(bad)
mov
add
rcl
add
sbb
xor
or
add
cmp
fld
(bad)
or
and
aaa
in
xlat
add
icebp
ret
pop
add
data16
sbb
cmp
std
lea
push
enter
push
add
test
add
fidivr
xor
test
push
or
lods
int3
inc
mov
cmc
sbb
dec
sbb
add
int
xchg
mov
arpl
inc
fmul
icebp
popa
ret
dec
pop
(bad)
or
mov
mov
repz
stc
das
xor
lds
cmp
xchg
in
dec
or
ret
test
(bad)
loope
jmp
fidivr
or
dec
pusha
(bad)
icebp
and
jg
(bad)
xor
cmp
sbb
retf
gs
sbb
mov
int
fnstsw
sub
fiadd
leave
jae
stos
mov
frstor
sahf
sbb
stos
or
cmp
pop
jo
in
test
push
shr
push
ret
sub
dec
int3
es
cmp
sbb
mov
and
loope
or
mov
mov
add
retf
aaa
xor
popa
xchg
pop
mov
mov
add
sub
pop
das
cmp
add
xlat
arpl
call
sub
xor
and
popa
(bad)
cmp
sub
jecxz
ja
gs
lock
lahf
cdq
aas
mov
xor
ja
cmovle
adc
test
aaa
loopne
loopne
and
pusha
inc
inc
or
ror
mov
iret
mov
push
push
(bad)
out
imul
movs
mov
fstp
or
rol
lea
mov
add
(bad)
fldpi
shl
add
rcr
cmc
sub
(bad)
div
out
mul
sbb
ins
xchg
xor
sbb
lahf
or
fistp
outs
dec
loope
add
fwait
enter
gs
mov
jnp
jecxz
xor
rol
xchg
xor
loop
jmp
or
das
or
inc
mov
cmp
add
aad
dec
popa
lea
sti
add
sbb
fiadd
scas
js
hlt
out
lea
add
pop
mov
and
adc
push
mov
test
pop
cmps
lahf
cmp
adc
shl
aas
jnp
jecxz
data16
mov
ret
arpl
jecxz
lds
mov
lods
mov
ins
outs
data16
add
sbb
xchg
cmp
mov
pop
neg
or
add
(bad)
in
inc
mov
cmp
adc
icebp
dec
jne
sti
scas
imul
jo
jecxz
movs
or
or
or
js
pop
loope
pop
ret
aas
fnstcw
std
cmpxchg
xchg
cmps
aas
pop
leave
inc
mov
push
aaa
outs
fstp
and
pop
imul
popa
push
xor
pop
int
cwde
or
xchg
or
pop
or
sahf
jmp
mov
mov
push
loope
loope
loope
cli
xor
je
dec
mov
out
mov
fistp
cmp
loopne
ja
jecxz
mov
xchg
or
addr16
jg
inc
add
adc
xor
js
es
jmp
add
cmp
or
dec
adc
dec
cmp
push
ret
jns
dec
(bad)
xchg
sti
inc
popa
loope
test
fdiv
(bad)
cmp
call
add
js
cmps
mov
adc
dec
mov
je
and
mov
or
jmp
popf
dec
push
icebp
or
pop
add
push
js
dec
out
lods
sbb
push
imul
inc
or
mov
xchg
ins
movs
or
sub
push
push
mov
sbb
icebp
icebp
(bad)
pop
add
aaa
cmc
push
push
xchg
sar
loope
cwde
lahf
lahf
mov
ja
cmp
push
add
cmp
(bad)
aas
and
mov
or
mov
inc
mov
sbb
out
int
lahf
int
jp
fisub
jecxz
xchg
inc
in
cmp
add
add
loope
test
push
inc
retf
adc
inc
inc
push
mov
jecxz
sub
sub
push
mov
add
add
movs
sbb
sti
or
mov
adc
and
xor
std
int
inc
in
mov
or
adc
cmc
add
les
add
mov
lea
push
or
add
inc
xchg
or
and
jg
cmc
adc
popa
jno
test
dec
mov
adc
xor
xchg
lea
xor
and
addr16
int
adc
pop
rcl
lock
mov
inc
mov
out
jb
retf
cwde
add
shl
test
dec
je
(bad)
pop
scas
jne
clc
loop
retf
dec
jb
adc
(bad)
mov
gs
xchg
retf
mov
out
mov
cmp
leave
stc
inc
retf
lods
nop
sub
push
add
test
add
fwait
jno
add
(bad)
push
adc
or
loope
test
xchg
add
sbb
add
jp
loopne
dec
mov
adc
adc
int
sub
sbb
and
outs
or
das
cmp
inc
pop
aam
inc
int
pop
cmp
sbb
inc
shl
stc
sub
(bad)
out
aam
add
xchg
jno
(bad)
imul
and
add
sbb
dec
std
sbb
xchg
xor
ret
xor
scas
cmp
and
xor
dec
mov
jg
pop
les
rdmsr
test
and
push
push
adc
inc
clc
add
popa
mov
pushf
es
popa
lahf
lea
test
pop
adc
xor
push
out
mov
cmc
push
add
jmp
cmp
xchg
inc
inc
mov
xor
ror
les
fidiv
and
xor
add
push
cmps
gs
inc
sbb
jmp
cmp
sbb
push
pop
inc
adc
aad
push
xor
icebp
mov
aas
xchg
rol
bound
and
push
arpl
jecxz
xor
dec
inc
adc
add
call
test
arpl
iret
adc
inc
inc
pop
js
inc
enter
dec
shl
or
sub
dec
scas
jnp
inc
int3
dec
and
inc
arpl
add
cmp
sbb
(bad)
inc
push
ret
sub
xor
and
and
xor
movs
arpl
shl
das
and
push
(bad)
or
popa
adc
push
mov
adc
aaa
shl
push
inc
daa
adc
test
xchg
or
lea
sbb
retf
push
mov
les
xor
stos
fbstp
test
sub
vmovlpd
push
pop
aas
mov
inc
jo
xchg
pop
pop
(bad)
leave
add
sbb
jg
mov
sbb
iret
dec
cmovle
dec
in
inc
js
js
mov
add
mov
pusha
adc
add
add
fwait
sbb
adc
mov
sar
es
inc
out
mov
push
mov
popf
sbb
movs
retf
cdq
fld
sbb
cmp
push
adc
mov
and
cmp
rol
jno
push
xchg
xor
and
(bad)
in
leave
and
popa
imul
or
mov
popa
fwait
mov
retf
popa
ror
dec
stos
sar
push
daa
pop
mov
retf
xchg
mov
or
fnstenv
dec
cwde
mov
and
cmp
pop
pop
ret
cmc
push
das
push
jo
pop
gs
imul
loopne
xor
pop
(bad)
mov
imul
cdq
es
jp
scas
pop
rol
jo
icebp
dec
xor
js
lds
and
lock
aad
loopne
js
add
daa
int
or
loope
cmp
xchg
pop
jo
pop
jg
cmp
sbb
popf
xor
ins
sub
(bad)
ja
dec
xchg
aam
or
add
das
sbb
xor
pop
aaa
sub
jno
shl
in
aas
ja
add
jmp
cmps
pop
dec
or
or
loope
pop
push
(bad)
xchg
adc
arpl
mov
xor
add
push
sbb
xor
jg
mov
int
les
inc
ins
(bad)
loope
jnp
sub
mov
aaa
jge
das
dec
hlt
or
sub
fcmovnbe
mov
jp
daa
push
pop
and
mov
popa
add
mov
fiadd
arpl
mov
add
and
add
imul
sbb
jae
fidiv
adc
sbb
es
shr
sbb
and
inc
(bad)
popa
xor
inc
mov
sbb
or
pop
and
cmc
arpl
mov
mov
mov
ret
jno
pop
and
add
ret
imul
jecxz
test
dec
data16
jp
adc
push
jne
pop
in
xlat
jne
jo
fcmovnbe
jmp
dec
lahf
and
dec
mov
popa
or
retf
iret
pop
xchg
push
mov
inc
shl
loope
adc
adc
out
mov
jmp
add
sbb
or
ret
pextrw
dec
pop
shr
add
and
lock
ror
cmps
cmps
mov
cmp
add
test
in
push
inc
and
push
inc
add
sub
mov
or
or
(bad)
mov
or
pop
or
add
or
adc
or
es
xor
dec
or
add
or
and
pop
aaa
mul
or
xor
or
mov
fdiv
inc
adc
inc
or
das
xor
push
or
sub
xor
mov
jns
das
pusha
(bad)
lods
add
and
xlat
std
and
xor
or
cdq
aas
or
retf
inc
or
jne
jo
test
or
(bad)
sbb
fbstp
and
or
push
adc
cmp
sub
inc
adc
xor
das
add
ja
or
inc
or
inc
dec
imul
mov
sbb
xor
scas
mov
adc
pop
sbb
lea
sbb
lods
int3
outs
adc
ja
pop
not
(bad)
iret
cdq
sub
pop
sar
pop
and
and
xchg
xchg
adc
inc
or
or
cmp
dec
or
sub
inc
or
add
and
sub
or
(bad)
pxor
sub
or
or
and
sub
xor
(bad)
xor
and
shr
xchg
cmc
adc
pop
iret
js
cmp
cmc
pop
gs
xor
add
or
adc
sbb
and
mov
mov
or
lahf
xor
or
add
test
xor
jns
jne
inc
add
sbb
add
pop
ret
xor
sub
adc
and
cmp
cmp
xor
cwde
add
xor
and
ds
dec
adc
sbb
cmp
(bad)
mov
stos
sub
jecxz
outs
mov
or
xor
jns
cmp
fsub
ret
mov
fnsave
push
adc
jno
and
push
lods
stos
jp
xor
in
ins
and
xchg
add
pop
popa
mov
addr16
xor
ret
push
push
xlat
std
xchg
xor
jnp
sbb
imul
shl
jg
leave
pop
adc
cmp
and
pusha
push
arpl
iret
or
add
xchg
dec
mov
xchg
or
aad
sbb
daa
adc
push
xor
jae
rcl
shl
pop
dec
add
sub
and
pushf
sub
mov
add
popa
test
adc
push
jno
or
scas
test
int
test
imul
sbb
or
jae
add
mov
mov
push
pop
aad
jne
imul
adc
add
call
arpl
imul
mov
add
xlat
jno
inc
and
inc
(bad)
add
jge
adc
jae
jmp
or
(bad)
test
es
sub
jae
fmulp
xor
pop
cmp
lea
jmp
add
dec
or
sub
sub
imul
sbb
shl
lahf
xchg
lods
mov
inc
or
cwde
hlt
dec
sbb
adc
add
jns
adc
xor
sbb
xor
cmp
pop
pshufw
sar
jmp
jo
xchg
xor
pop
arpl
out
xchg
inc
jno
sbb
test
sbb
out
inc
sub
fistp
pop
cs
pop
cmp
xor
lahf
jmp
ror
pop
or
dec
std
cmp
push
retf
outs
xor
sub
dec
rcr
inc
cmc
or
ret
div
add
popa
or
aas
lea
mov
sub
add
cmp
or
stos
or
cmp
pop
dec
pop
sti
pusha
sub
js
jg
std
and
sub
jmp
ret
xchg
test
sub
add
icebp
in
add
dec
and
push
mov
push
aas
movs
inc
add
mov
or
lods
xor
cmp
mov
xchg
pshufw
sbb
ret
xchg
movs
adc
jo
stc
paddw
or
out
adc
and
xor
add
xor
sbb
or
ret
sbb
loop
push
or
inc
adc
js
lock
xor
xor
jmp
dec
shl
jge
sbb
sbb
dec
pop
gs
push
pop
adc
out
inc
fstp
dec
add
test
lods
addr16
pop
dec
cmp
dec
or
imul
xor
jmp
add
(bad)
sbb
pop
xchg
xor
adc
and
or
scas
jo
or
xchg
add
sahf
cmp
mov
sub
fld
ret
sti
pusha
mov
or
mov
cmp
or
loope
sbb
adc
cmp
inc
xchg
jg
aas
or
popa
or
mov
push
cmp
lock
or
mov
pop
mov
inc
int3
xchg
ret
loope
ror
pinsrw
sbb
daa
xor
pushf
or
aaa
jmp
test
xchg
js
iret
add
and
cmc
int
mov
add
add
rol
(bad)
sub
shr
pop
das
add
ins
cmp
or
frstor
or
or
pop
adc
xor
fldcw
or
inc
cwde
xor
xchg
sub
rcl
fs
adc
es
clc
popf
jo
das
mov
adc
rcr
dec
inc
and
xlat
rol
mov
mov
jne
mov
xchg
cli
xchg
sub
add
mov
pop
or
xor
fmul
sbb
lods
sub
dec
fmul
xchg
xor
sbb
cdq
xchg
cmp
ror
das
fist
int3
add
loop
mov
jl
ds
cmp
inc
lock
lea
std
add
cmp
test
jae
aaa
adc
xchg
sbb
aaa
mov
push
jge
outs
fadd
pop
leave
aad
das
aas
jo
add
mov
(bad)
or
cmp
sub
jns
cmc
cdq
mov
add
xor
retf
or
sbb
adc
dec
retf
push
dec
das
jne
imul
and
leave
ror
and
das
pop
push
pop
or
or
or
push
mov
leave
jns
and
mov
shr
inc
in
push
push
mov
dec
mov
rol
imul
xor
dec
mov
and
loopne
fst
jmp
mov
es
mov
aas
mov
jge
and
jo
xor
and
cmps
xor
and
sub
xor
add
and
mov
(bad)
cmc
pop
xchg
fst
and
push
push
jp
push
cmp
rol
std
add
not
pop
ja
add
in
test
lds
and
in
ja
inc
add
add
push
and
sbb
aad
cmps
jo
cmps
lds
enter
mul
fwait
jp
xchg
pop
cmp
movs
fist
icebp
xchg
adc
popa
pop
or
sti
jns
inc
xchg
or
and
ret
mov
in
or
loope
mov
pop
dec
mov
nop
scas
and
push
add
in
mov
pop
xor
or
mov
adc
mov
lock
pop
push
add
mov
dec
cmc
mov
retf
jmp
mov
or
pop
xchg
aaa
shl
ja
pop
add
add
stos
call
cmp
xor
or
out
ins
push
add
push
push
loopne
ds
lods
add
add
adc
imul
xchg
ins
cmp
add
pop
add
stc
inc
mov
add
add
shl
inc
int
add
(bad)
es
jne
imul
cmp
mov
mov
adc
imul
xchg
push
xchg
inc
cmpxchg8b
add
mov
inc
lock
int
push
inc
or
cmps
jmp
push
add
gs
sti
ins
add
add
(bad)
out
sbb
jo
mov
xor
jo
sub
jo
neg
xchg
js
mov
fwait
push
add
movs
js
ja
pop
pop
add
inc
add
mov
sbb
dec
push
add
cmp
cmp
add
mov
jns
(bad)
sti
outs
data16
add
and
(bad)
xchg
mov
mov
add
dec
and
mov
shl
jecxz
xchg
and
xor
jle
and
ret
add
in
stos
jp
push
push
xor
xchg
imul
in
inc
push
cmp
daa
inc
aad
pop
sbb
add
pop
cmp
stos
push
out
sbb
cmp
in
ins
jecxz
add
jmp
cmp
jne
sub
inc
in
jg
pop
xchg
jne
push
inc
imul
mov
mov
xor
push
mov
push
push
dec
rol
rcr
pusha
add
popa
add
or
mov
inc
sub
adc
stos
scas
xlat
retf
adc
or
js
cmp
out
fs
imul
xor
or
cmp
cmps
xor
push
add
cmp
add
xchg
lea
iret
adc
xchg
std
cmp
leave
rcl
pop
adc
add
add
mov
pop
inc
adc
and
mov
or
mov
ret
pusha
push
and
addr16
or
loopne
cmp
idiv
xchg
cmp
xchg
sti
loope
loopne
in
inc
lds
inc
mov
push
in
sti
rcl
mov
pusha
sti
leave
add
int
popf
repz
mov
sbb
popa
add
add
ret
push
inc
dec
daa
cmp
adc
xchg
inc
pop
lock
adc
iret
cmp
pop
pop
add
data16
ret
daa
adc
pop
push
cmp
sub
push
xchg
xchg
mov
add
jno
popa
push
stc
dec
es
sub
cmp
cmp
pusha
or
push
pop
lock
test
rcr
xor
and
scas
xlat
shl
je
shr
sub
test
xor
push
lods
outs
cdq
adc
push
mov
or
jg
cmp
and
jne
retf
push
mov
pop
inc
hlt
sbb
mov
ret
and
sbb
and
add
and
xchg
xchg
shl
scas
popa
fwait
push
fsubrp
(bad)
in
xor
imul
mov
mov
xchg
push
pusha
dec
call
add
jnp
sub
inc
stc
and
add
icebp
push
cmp
popa
cmp
or
add
pop
sbb
jnp
jmp
sub
cdq
and
jnp
cmp
dec
jo
mov
add
loop
aad
shl
in
loopne
mov
jo
jae
jns
and
adc
add
sbb
cs
or
sbb
cmp
pop
add
sbb
mov
lahf
sti
popa
xor
push
or
neg
(bad)
loope
iret
aas
jmp
sbb
dec
adc
add
xor
sbb
pop
iret
retf
adc
mov
pop
fstp
out
dec
pop
dec
xor
inc
add
dec
sbb
push
jecxz
int3
js
mov
adc
test
mov
ret
push
aas
mov
test
inc
lods
fld
jnp
pusha
imul
ja
push
mov
push
mov
mov
xchg
test
or
aaa
rol
cmc
test
icebp
jge
xor
or
xor
xor
sbb
adc
dec
inc
bound
ret
mov
dec
inc
add
add
sbb
mov
popa
jmp
add
xor
push
push
inc
xor
ret
cmc
outs
adc
push
pop
mov
or
aaa
dec
inc
sbb
jle
stos
bound
and
arpl
stos
in
mov
arpl
popf
bound
in
rcr
add
mov
popa
add
popa
jns
pop
loop
xor
push
in
dec
jo
hlt
lds
jmp
cmp
imul
hlt
arpl
loopne
push
jl
cmc
call
jecxz
lock
jbe
popa
dec
(bad)
push
bound
mov
jae
xor
loope
cwde
xor
imul
rcl
push
push
fst
push
xor
sub
sar
mov
call
xor
loope
push
call
jecxz
push
imul
jecxz
pusha
push
adc
sub
pop
cmp
add
adc
jg
jp
xor
imul
cmp
xor
js
or
push
mov
xchg
imul
xchg
add
mov
dec
add
loopne
lods
sbb
inc
sub
imul
int3
jp
or
or
cmp
jg
dec
add
(bad)
sbb
pop
mov
mov
addr16
sar
jne
retf
repz
inc
je
push
fld
fiadd
push
sbb
cmp
jmp
daa
adc
aas
not
jbe
test
pop
arpl
xchg
or
arpl
xlat
ins
xchg
mov
mov
mov
xchg
sub
sbb
das
ret
cmp
push
inc
out
ffreep
dec
js
mov
add
retf
mov
push
sbb
or
stos
inc
ret
test
jmp
and
ja
bound
pop
cmp
mov
out
adc
mov
pop
movs
inc
cmp
mov
add
push
fbld
leave
sbb
add
dec
jb
mov
popa
adc
(bad)
in
add
ins
add
dec
add
add
push
add
mov
mov
lahf
xlat
rcl
or
adc
cmp
jmp
rol
or
or
mov
sub
xchg
icebp
or
add
lds
aad
push
cld
xor
add
or
mov
jo
pop
xchg
outs
add
loope
ja
add
jecxz
pop
push
in
xchg
pop
(bad)
jnp
mov
es
js
jb
jnp
cmc
dec
add
daa
add
jno
or
jb
(bad)
xchg
out
or
mov
ds
dec
mov
lds
int3
jb
push
cmps
or
cmp
ffree
xor
inc
and
pop
ror
stos
sub
sub
int
mov
xor
popf
jb
or
popf
xor
jecxz
xchg
test
test
lds
pop
dec
xor
or
sub
mov
ret
sub
dec
mov
push
sub
pop
(bad)
sti
or
jnp
dec
inc
xor
inc
sbb
adc
mov
push
cmps
cmps
jmp
aam
std
pop
or
sbb
inc
test
jae
mov
(bad)
xlat
cmp
inc
hlt
xchg
cdq
fnstsw
pusha
lds
add
pop
cmps
mov
and
sar
mov
pushf
push
out
test
dec
inc
jp
daa
pop
add
pop
outs
sub
add
add
fsub
adc
or
inc
adc
jp
mov
clc
sbb
cmp
sub
push
jmp
dec
das
and
sbb
pop
inc
sbb
sbb
fisubr
xchg
add
xor
sbb
ret
js
cmc
cmp
and
pop
lds
sub
jnp
xor
imul
mov
mov
jnp
xlat
dec
mov
inc
push
call
add
add
jecxz
pop
imul
pop
(bad)
jne
xchg
or
or
or
jno
sbb
inc
inc
mov
inc
hlt
add
sbb
add
pusha
add
rcr
lock
test
loope
sbb
and
or
cmp
mov
inc
jns
adc
push
xchg
lock
ror
jge
ins
jne
inc
cmp
aaa
fwait
jnp
add
daa
add
js
(bad)
cmp
inc
mov
pop
push
pushf
js
ret
push
xchg
jae
scas
inc
and
jno
cmp
dec
jb
js
push
or
nop
push
inc
arpl
mov
jo
push
les
mul
int
movs
in
add
or
xchg
cmp
popf
pop
sbb
inc
push
and
outs
sbb
lock
test
mov
shl
mov
das
cmp
ss
pop
outs
imul
dec
inc
movs
icebp
icebp
(bad)
stos
ret
popa
push
lds
scas
jmp
(bad)
push
xor
pop
dec
xchg
imul
loope
cdq
mov
in
shl
cmp
xchg
and
add
inc
test
cdq
sbb
add
std
inc
push
neg
jnp
push
cmp
pop
xchg
adc
mov
dec
test
add
loope
leave
in
xchg
inc
mov
sbb
aad
sub
sbb
inc
xor
pop
adc
prefetchwt1
pop
(bad)
je
jae
sub
gs
icebp
xor
lock
or
pushf
or
mov
ret
mov
leave
mov
shl
push
jo
sbb
inc
sar
add
cmp
inc
std
(bad)
xor
mov
jne
adc
mov
sub
mov
mov
iret
add
mov
xor
jns
or
daa
or
hlt
loopne
dec
jne
and
ror
gs
or
mov
cmp
ins
fs
add
xlat
xchg
push
jne
mov
pop
xor
pusha
or
adc
scas
mov
dec
add
xlat
ja
pop
mov
stc
daa
aad
xor
test
jg
outs
add
popa
test
push
gs
mov
sbb
movs
xchg
cmp
stos
xor
rcl
js
jne
imul
loopne
shl
lds
imul
hlt
ret
pop
sbb
adc
xchg
sub
ds
movs
aas
das
ins
add
add
iret
fistp
movs
cmp
and
add
faddp
adc
and
xchg
mov
mov
mov
cdq
mov
or
sbb
(bad)
xchg
mov
ret
or
sbb
xor
xchg
sbb
sub
xor
fs
adc
or
test
dec
xor
xor
jmp
pop
inc
hlt
and
movs
add
pop
pop
(bad)
mov
loope
mov
dec
mov
xchg
gs
or
push
fwait
xor
sub
adc
pop
pushf
call
add
ins
das
xchg
ret
cmps
cmp
(bad)
jecxz
fnstcw
test
popf
arpl
sbb
xor
fldcw
jnp
ja
sbb
out
aad
mov
in
adc
std
sbb
das
std
and
xchg
and
mov
and
lea
push
inc
sub
hlt
fstp
xchg
retf
xchg
inc
pop
out
aad
sub
or
sbb
sub
iret
fistp
stos
jp
xchg
sbb
and
cs
fst
mov
push
xchg
mov
mov
dec
xchg
out
mov
aaa
loope
(bad)
jne
ret
push
arpl
inc
mov
pop
int
mov
imul
or
xchg
and
pop
daa
stos
outs
outs
sbb
xchg
cmp
es
inc
xlat
or
loop
imul
sub
mul
xchg
or
xor
es
stc
in
(bad)
xlat
or
add
xor
pop
pop
xchg
add
and
pop
add
inc
jne
icebp
pop
ss
(bad)
sar
arpl
adc
or
gs
or
cmp
jo
in
addr16
iret
add
xchg
xor
dec
xor
popa
inc
or
sbb
inc
or
das
pop
fbld
sub
pop
mov
and
add
cdq
retf
and
sbb
jae
ja
pushf
stc
popa
mov
in
cmc
fisubr
adc
xor
ins
push
adc
ror
loop
pop
out
test
add
jecxz
add
push
xor
popa
(bad)
fild
add
cmp
pop
cmps
ss
es
repz
dec
icebp
pop
add
mov
mov
and
sbb
sbb
inc
int
sti
push
cmp
mov
or
mov
stos
ins
adc
sub
int
add
cmp
(bad)
shl
or
xor
and
jne
pop
sbb
dec
cmp
push
mov
mov
lahf
and
sub
dec
test
shl
cmc
jb
out
sysret
and
jnp
dec
jecxz
push
or
hlt
cmp
sbb
xchg
test
adc
shrd
imul
push
sbb
cmp
imul
loope
inc
cwde
mov
bound
jmp
movs
dec
call
inc
pop
adc
mov
pop
dec
(bad)
mov
xchg
cmc
sldt
mov
jae
and
push
and
sbb
imul
add
shl
pop
leave
and
pop
pushf
lods
add
add
or
inc
ins
test
neg
icebp
js
and
(bad)
jecxz
aas
sub
mov
test
jns
std
iret
xor
add
jae
mov
inc
pop
add
add
and
jg
adc
(bad)
mov
or
sbb
jecxz
mov
arpl
mov
cmp
lds
pop
add
adc
push
cmp
or
xchg
jae
psrlq
add
push
mov
inc
add
adc
xchg
add
add
adc
outs
add
ret
push
push
sub
popa
jne
push
sbb
dec
scas
add
(bad)
xor
es
inc
imul
mov
js
adc
jne
popa
adc
jnp
sbb
arpl
jecxz
inc
cmps
sbb
push
iret
add
add
ja
mov
cmp
and
xor
sub
xor
xor
push
and
sbb
lds
(bad)
sbb
cmp
jmp
push
xchg
lods
xchg
popa
outs
mov
jp
mov
dec
js
dec
fnstenv
fbstp
inc
shr
xchg
mov
test
mov
and
or
mov
push
cmp
and
popa
sub
jns
mov
mov
pop
scas
lea
sub
shr
sti
xchg
ret
out
(bad)
push
pop
mov
(bad)
jo
aam
xchg
sbb
fwait
xchg
add
in
loopne
or
jnp
adc
daa
int
adc
std
imul
sbb
nop
xchg
addr16
jge
movs
pop
icebp
inc
int
pusha
and
cwde
jge
cmp
nop
bound
imul
jmp
daa
loope
add
xchg
cmp
loopne
pop
pop
iret
mov
jb
dec
dec
(bad)
loope
push
int3
jp
sub
push
dec
mov
dec
xor
mov
sar
inc
pop
popa
rcl
push
add
sti
pop
mov
daa
cmp
pop
shr
and
jo
mov
rcl
jae
or
push
jne
xor
dec
pop
jmp
push
retf
add
inc
or
dec
mov
fwait
cwde
jo
adc
ins
iret
test
movs
in
movs
xchg
loop
add
arpl
scas
fwait
rol
and
and
inc
pop
pusha
mov
out
rol
bound
dec
mov
lds
push
movs
divpd
adc
mov
inc
push
hlt
loopne
cmp
imul
shl
mov
fimul
adc
int3
push
int
cmc
mov
in
les
push
jmp
scas
(bad)
xlat
inc
mov
sbb
icebp
sti
fwait
cmp
pop
inc
arpl
std
js
push
xor
(bad)
adc
dec
jo
movs
cmp
imul
imul
mov
test
jo
loope
sub
inc
mov
sub
or
add
cmp
pop
ja
pop
shr
fisub
sub
outs
cmp
jno
dec
outs
addr16
test
and
mov
or
addr16
add
add
pusha
xchg
cmp
jno
dec
mov
cmp
mov
push
cmps
inc
xchg
adc
cmp
call
sbb
js
jp
jge
leave
or
pushf
pop
jge
pop
or
mov
jge
cmp
aad
fnstenv
add
xchg
and
test
xchg
jge
mov
loopne
and
mov
mov
add
add
retf
and
sub
xor
mov
rol
add
cli
popa
push
xchg
jbe
add
cmp
loope
popa
dec
adc
mov
sbb
sub
inc
out
adc
mov
mov
cdq
stos
dec
inc
repz
ret
mov
xchg
or
aad
adc
add
sub
das
movs
sbb
or
add
jp
inc
adc
inc
jg
ret
fisttp
jmp
mov
add
test
mov
add
add
imul
dec
icebp
cwde
arpl
mov
push
sbb
js
cmp
out
jns
or
popf
pop
sub
add
ins
popa
out
mov
jmp
jo
sub
(bad)
cmp
stc
psubw
sub
retf
std
dec
js
xor
and
xchg
inc
or
or
xchg
test
or
mov
push
cdq
cli
je
inc
popf
mov
push
xlat
ins
cmp
sub
daa
loope
pusha
ret
test
ss
pop
hlt
sbb
add
cmp
aas
pop
iret
add
ror
sbb
inc
jg
adc
xchg
aad
outs
xor
je
ja
add
adc
mov
sub
add
imul
push
mov
out
pop
add
aad
cmps
push
dec
mov
sbb
arpl
push
cmps
das
add
sbb
out
mov
stos
sti
xor
gs
ja
popf
jne
pop
adc
cmp
je
sbb
add
imul
add
clts
jmp
icebp
or
shl
test
cmp
int3
fidivr
cwde
and
arpl
jae
or
lahf
and
and
leave
(bad)
retf
adc
das
add
mul
cmp
jo
stos
stos
or
adc
fwait
inc
lods
pop
jg
pop
xchg
push
rol
ret
adc
xchg
ret
fld
aas
shr
adc
arpl
sub
call
inc
adc
and
mov
xchg
popf
inc
sbb
adc
adc
shr
arpl
out
inc
scas
dec
or
xor
neg
xor
jb
cmps
pop
inc
adc
push
or
fnstcw
movs
(bad)
inc
or
out
cdq
std
cmp
adc
mov
sbb
sbb
xor
lea
inc
psubsw
and
retf
push
rol
fst
fadd
add
cli
xor
cmp
mov
add
retf
mov
add
mov
adc
neg
aas
sub
stc
and
shl
aad
loop
and
xchg
fwait
push
pop
ins
add
push
xor
push
pop
in
mov
inc
sbb
icebp
in
fidivr
js
daa
xor
rol
dec
mov
outs
scas
(bad)
in
xor
ret
mov
sub
out
xor
inc
(bad)
lds
loope
xchg
jge
pusha
mov
jae
addr16
dec
add
test
jg
fldenv
add
xchg
add
inc
and
dec
iret
jge
ja
inc
adc
inc
icebp
fwait
and
mov
sub
and
jno
dec
sbb
psrad
in
sbb
nop
mov
cmp
xor
mov
mov
pop
xchg
vpsrlw
push
setns
nop
sub
add
mov
arpl
pop
sbb
add
inc
(bad)
icebp
xchg
adc
std
popf
cmp
pop
sar
ins
jne
xchg
jmp
movs
cdq
data16
add
or
mov
adc
jmp
pop
push
sub
xchg
add
push
sbb
test
ret
add
das
popa
sar
adc
cmp
pop
inc
in
sti
je
iret
dec
sbb
sub
adc
xchg
bound
inc
aaa
mov
add
es
mov
mov
outs
add
inc
arpl
jb
cmp
call
sub
sub
dec
add
in
jo
jno
or
mov
jnp
or
aad
icebp
out
je
xor
push
aaa
and
ror
aaa
xchg
push
bound
mov
ins
add
xchg
test
sbb
adc
add
cmc
aaa
sar
mov
add
cmp
or
(bad)
aam
popa
cmp
les
dec
inc
popf
xchg
add
popa
cmp
xor
cmps
xchg
cmp
push
aad
pop
mov
dec
pop
fild
add
add
adc
and
cmp
cmp
je
dec
(bad)
iret
sbb
or
(bad)
and
sbb
scas
mov
cmp
mov
dec
sub
push
ret
sub
dec
cmps
test
sbb
jg
or
dec
cmp
xchg
sbb
mov
push
mov
fwait
les
imul
in
loopne
pop
xchg
in
cmp
test
pop
mov
push
xchg
push
mov
and
dec
(bad)
xchg
aas
cmp
add
push
inc
outs
les
mov
jno
jo
shl
inc
xchg
pop
mov
arpl
adc
aaa
pop
or
mov
ret
sbb
ret
popf
scas
adc
shl
sbb
sub
pop
pop
daa
imul
jno
inc
std
iret
xor
addr16
or
inc
mov
sub
cmp
add
repz
daa
xchg
jo
popa
out
push
push
mov
fwait
and
in
sub
aad
out
out
das
ffree
add
icebp
fidivr
int3
lea
popa
daa
pop
ret
sbb
fbld
imul
adc
mov
sbb
push
ins
shl
ins
cmp
push
xchg
push
out
mov
ins
inc
sbb
aad
ja
add
fist
push
xchg
rol
push
sub
popf
int
xchg
push
push
xchg
sbb
inc
cmp
cmp
imul
xchg
xchg
js
(bad)
int
icebp
jmp
xor
rol
shr
call
pop
cmp
mov
fld
xchg
clc
dec
inc
xchg
arpl
inc
dec
test
pop
adc
and
add
adc
dec
add
add
iret
dec
push
inc
add
and
mov
inc
gs
sub
inc
add
add
mov
xchg
jl
push
xor
or
dec
imul
pop
arpl
xchg
mov
inc
popa
stos
xor
and
rol
add
daa
sub
or
aaa
jmp
add
inc
daa
push
sub
out
lods
cmps
or
or
inc
add
add
add
add
inc
sub
mov
and
dec
add
add
push
add
sub
xor
mov
pop
and
vfrczpd
mov
add
loop
add
xor
mov
das
add
out
cmp
push
add
out
loop
pop
push
jo
out
or
sbb
jnp
mov
or
rcl
jae
adc
sub
add
add
adc
and
push
pusha
leave
and
lea
adc
sub
sbb
cmp
pop
push
sub
and
adc
dec
add
pop
adc
outs
and
cmp
cmp
sub
sbb
(bad)
dec
add
pop
add
adc
mov
mov
test
and
mov
mov
add
loope
ret
call
test
or
xchg
movs
loope
ret
jne
xor
icebp
inc
cmp
sbb
dec
jbe
cmp
add
add
dec
imul
adc
popf
adc
cmp
lods
jae
imul
mov
pop
push
mov
int
mov
daa
mov
test
sbb
mov
adc
inc
movs
sub
data16
ins
jae
dec
or
sub
sbb
cmp
idiv
inc
inc
xchg
dec
dec
ja
adc
aaa
cmp
pop
sbb
adc
jo
loope
and
test
cmp
popa
and
pop
jbe
pushf
popa
adc
clts
sub
aas
push
cmp
pop
or
ret
xchg
add
retf
push
xchg
add
or
mov
add
out
mov
popa
xor
lahf
mov
and
test
add
dec
pop
xlat
adc
adc
push
xchg
adc
mov
fidiv
dec
(bad)
push
pop
sbb
mov
lods
xor
xor
mov
rcl
or
xor
jmp
jbe
fdiv
push
add
repz
ja
mov
mov
adc
dec
add
xchg
mov
dec
add
jmp
mov
mov
test
lods
sub
lock
sbb
lock
ret
lods
sbb
mov
add
(bad)
push
rol
ret
jmp
pop
dec
popf
rol
pop
ret
cmp
mov
jae
dec
sbb
mov
cmc
hlt
js
and
push
pop
push
inc
mov
ror
jne
xor
cmp
pop
sub
push
aas
add
gs
add
xchg
cmp
jbe
add
in
not
loop
or
loopne
inc
xchg
pop
push
sbb
mov
jge
add
push
scas
xlat
int3
not
jnp
imul
arpl
adc
stc
add
push
movzx
xchg
pop
pop
setle
jmp
inc
jg
sahf
test
add
icebp
loopne
cmps
pop
loope
pop
sar
test
imul
pop
outs
sbb
and
pop
add
test
imul
adc
add
psllw
loope
or
loope
sbb
mov
pop
xor
ins
or
loope
inc
test
push
cmp
pusha
xchg
adc
cmps
pop
push
mov
inc
add
jo
lock
mov
add
or
loope
sub
imul
fcomip
xor
adc
inc
add
or
mov
cmp
xchg
addr16
movq
mov
jo
push
test
cmp
scas
sub
jmp
jnp
inc
inc
cmc
jno
add
adc
in
call
daa
pop
pop
lea
rcl
mov
adc
arpl
popf
lahf
dec
out
add
sbb
sub
mov
inc
fisttp
sub
inc
scas
cmp
loopne
mov
idiv
jnp
jmp
mov
mov
cmps
or
ret
andps
mov
adc
pop
mov
dec
sub
push
sbb
fisttp
mov
add
jmp
cwde
adc
mov
paddsw
loopne
movs
lahf
pop
and
or
push
pop
add
inc
cmps
aaa
and
add
adc
dec
sbb
sbb
xor
inc
loopne
adc
add
add
xchg
xlat
mov
and
mov
cmp
adc
pop
push
and
xchg
push
popa
mov
push
pop
inc
addr16
ds
nop
push
iret
inc
dec
lahf
das
sub
(bad)
mov
and
ds
sahf
jb
or
les
xchg
sub
adc
jns
or
test
das
ret
add
mov
hlt
dec
iret
mov
pop
adc
inc
or
jge
shr
movs
dec
nop
mov
add
or
mov
sub
inc
xchg
xchg
jg
sub
pop
add
sbb
jno
add
hlt
cmp
or
in
sbb
dec
push
and
cmc
push
mov
pop
jp
ret
and
push
xchg
xor
clc
add
inc
add
cmp
cmp
xor
bound
or
cmp
or
sbb
push
test
push
mov
imul
cmps
inc
ret
imul
cmps
adc
xchg
add
test
iret
inc
mov
ror
pop
sbb
sbb
ja
sub
and
(bad)
out
sbb
js
lods
lods
int
cmp
xor
popa
sbb
sbb
adc
sub
les
jne
sub
or
adc
dec
test
pop
fwait
std
or
and
jecxz
or
and
xchg
dec
add
cmp
lods
cmp
xor
test
inc
std
inc
aaa
ds
dec
push
cmp
add
add
jnp
push
mov
rol
mov
ror
jge
scas
inc
add
jecxz
fnstsw
jmp
add
and
xor
xchg
cmpps
push
xchg
mov
adc
retf
xchg
or
add
add
add
push
les
rol
or
mov
in
or
pop
imul
in
add
push
shr
adc
add
ins
das
inc
sbb
push
jns
sbb
mov
push
test
bound
jne
pop
pusha
and
stos
fwait
add
or
mov
mov
xor
add
dec
loope
and
sbb
pop
xor
aad
adc
out
fiadd
mov
adc
fldcw
xor
mov
lea
mov
sbb
or
gs
in
ret
xor
pop
leave
dec
sbb
xor
adc
or
outs
push
mov
sub
sub
loope
or
xchg
add
ret
cmp
pop
jno
jns
add
mov
movs
or
loope
xchg
add
inc
jle
lea
cli
arpl
aad
or
popa
call
push
mov
sti
xchg
jecxz
sub
popa
add
add
push
cmps
add
aaa
add
add
jnp
bound
jnp
push
cmp
add
mov
in
mov
push
jp
arpl
sbb
mov
lea
daa
ins
jns
add
mov
leave
mov
pop
scas
sbb
jo
imul
or
cdq
daa
add
add
add
test
je
sbb
call
adc
or
imul
inc
mov
aaa
add
sub
js
mov
mov
sbb
in
adc
les
bound
jno
mov
sti
mov
sbb
and
push
add
dec
ror
or
xor
inc
push
adc
sub
scas
ins
mov
or
mov
ja
adc
aaa
push
aad
add
add
or
cdq
or
popa
and
sub
sbb
test
test
pop
arpl
int3
inc
sub
add
push
call
mov
dec
test
add
retf
or
xchg
in
add
add
stos
imul
push
xchg
mov
imul
jnp
imul
ret
sub
dec
jmp
xor
or
popa
leave
int
adc
inc
out
loopne
mov
rcr
mul
addr16
xor
ja
jmp
jno
enter
dec
es
adc
cdq
fnsave
cwde
add
inc
shl
sub
cmp
xchg
mov
add
inc
cs
mov
xor
add
adc
ins
or
rol
cmp
pop
fs
aas
jmp
(bad)
jmp
cmp
call
popf
mov
int
outs
mov
add
adc
cmps
das
xchg
repz
add
sub
sbb
frstpm(287
xchg
xor
call
loopne
cmp
jecxz
add
hlt
call
mov
cmp
fmul
pop
mov
mov
sub
xchg
cdq
jmp
xchg
iret
movs
cli
xchg
ret
sbb
mov
fwait
lea
in
adc
cmp
jnp
cmp
xor
mov
pop
sub
addr16
or
push
mov
loope
arpl
daa
leave
push
or
push
sub
add
aaa
adc
sbb
add
cmp
pop
movs
xchg
and
add
popf
xchg
jb
aaa
sub
stc
jae
cli
adc
inc
cwde
sbb
popaw
add
adc
xchg
pop
jnp
mov
neg
mov
imul
add
pop
xchg
jge
imul
mov
lock
mul
mov
pop
sub
dec
daa
in
add
adc
inc
sub
popf
push
add
jns
lock
xlat
and
lds
sbb
add
add
mov
xchg
jae
or
jae
shl
xor
jno
int3
ror
repz
and
sahf
add
imul
imul
xchg
stos
jbe
pop
push
(bad)
cli
add
cdq
pop
addr16
pop
in
jp
pop
in
pop
mov
sbb
aaa
or
xrelease
ins
add
retf
popa
mov
inc
(bad)
jecxz
test
dec
mov
das
mov
sbb
leave
sub
(bad)
xor
adc
and
scas
std
inc
push
xchg
jp
pop
xchg
or
cmps
xchg
cmc
push
pop
pop
xor
mov
mov
fisttp
cmps
and
aaa
ror
inc
sbb
loop
fmulp
jmp
pop
jne
push
add
imul
gs
jae
inc
cmps
popa
out
jmp
pop
add
(bad)
jns
pop
and
or
xor
xchg
pop
inc
fst
or
ror
adc
add
mov
adc
outs
cmp
shr
mov
out
and
mov
mov
sbb
adc
xor
mov
xchg
push
fwait
add
sub
shr
lds
pop
adc
arpl
sbb
adc
retf
mov
cdq
push
xor
xchg
jne
es
je
push
push
out
mov
and
cmpxchg
mov
cmc
dec
or
loop
scas
sbb
push
es
pop
outs
mov
add
ror
add
aaa
popa
cdq
ja
sbb
mov
cmp
iret
mov
cmps
dec
ret
fisubr
dec
mov
add
inc
cmp
loope
lods
enter
aas
xchg
rol
mov
fisubr
jne
scas
data16
inc
add
jl
fs
dec
sub
pop
add
ret
out
out
mov
sbb
sti
xchg
test
cmp
adc
adc
mov
popa
jo
sub
and
jmp
rcr
xchg
jnp
push
jg
popa
out
(bad)
xlat
ror
push
mov
cmp
(bad)
out
xchg
inc
scas
and
pop
xchg
sbb
mov
or
or
cmp
add
test
jmp
cli
test
add
sub
mov
sub
mov
pop
add
mov
add
and
pop
cdq
arpl
es
ins
add
push
idiv
mov
cmp
sbb
mov
loopne
sti
loope
lods
loopne
ficom
dec
or
cmp
dec
pop
push
(bad)
aaa
sub
push
outs
add
mov
outs
mov
cdq
clc
sbb
add
aas
dec
test
xor
lock
pop
scas
adc
mov
add
add
mov
add
cmp
adc
lahf
ror
pop
pop
push
sub
call
retf
xor
push
sbb
(bad)
or
rcr
adc
cmps
js
jo
xchg
xor
inc
inc
jecxz
sbb
push
mov
(bad)
adc
loopne
xchg
mov
cmp
add
add
add
add
pop
xor
sbb
pop
pop
sub
inc
(bad)
dec
hlt
add
mov
inc
add
iret
inc
sub
cmp
sti
or
jnp
push
sbb
xor
cmp
or
enter
icebp
push
add
sub
stc
cmp
add
xor
inc
repz
es
pop
addr16
sbb
xor
add
lock
in
in
loope
mov
addr16
sbb
cmp
lods
jge
xchg
jae
mov
or
popa
dec
in
ret
imul
pop
aas
xchg
xchg
jae
xor
cdq
popf
iret
inc
mov
mov
daa
daa
pop
in
ror
inc
cmp
mov
lds
pop
jmp
out
cmp
scas
imul
sbb
pop
lods
add
push
outs
enter
mov
push
add
add
add
sbb
leave
mov
sti
pop
scas
add
jp
out
pop
sub
cmp
push
adc
or
xor
or
lea
cmp
inc
add
jb
xor
cmp
mov
aad
pop
xor
add
add
and
sub
and
mov
jecxz
push
or
push
jnp
mov
cwde
jae
loope
and
sbb
jae
xchg
jmp
inc
xor
adc
jbe
mov
add
inc
adc
dec
jmp
sbb
cmps
xchg
mov
mov
push
retf
es
xlat
xor
fcom
mov
and
cwde
fnstsw
arpl
repz
icebp
push
scas
or
ffreep
jecxz
js
loop
imul
and
test
xchg
inc
xchg
cmp
fild
inc
add
add
ja
bound
cmc
js
mov
mov
mov
inc
xlat
mov
push
es
push
xchg
inc
add
push
or
jmp
inc
mov
ret
or
lea
mov
das
out
cmp
aam
fst
xor
es
and
or
aad
jnp
xor
les
dec
jne
ret
adc
xor
push
xor
add
push
xorps
dec
loope
pusha
and
cmps
iret
xor
daa
js
sbb
popa
int
push
mov
add
in
pop
jmp
in
mov
cdq
jge
sbb
inc
cmp
adc
ss
jbe
and
icebp
push
adc
sbb
dec
cwde
or
pop
jo
vrcpps
cwde
xor
xlat
cmp
mov
xchg
xchg
cmp
call
ret
inc
jo
je
add
dec
cmp
cmp
cmc
ja
or
ret
xchg
xor
pusha
shr
xor
retf
inc
add
pushf
fsubp
or
xor
mov
rcr
lods
mov
or
pop
jns
xor
push
jmp
add
sahf
add
outs
xchg
xor
dec
js
xor
or
popa
mov
pop
pop
lods
sbb
sbb
push
xor
je
and
xor
push
rcl
cmp
xor
dec
lds
sbb
add
ret
add
es
cmps
scas
ins
cmps
iret
inc
sbb
pop
das
adc
iret
xor
sub
mov
jp
shr
cdq
inc
ror
fisttp
(bad)
addr16
out
jecxz
test
dec
arpl
cmp
fistp
xchg
fistp
icebp
xchg
lds
xor
add
daa
arpl
dec
sar
pop
leave
mov
adc
loope
scas
leave
addr16
adc
dec
pop
xchg
add
add
and
cmps
arpl
loope
or
mov
jae
inc
mov
add
int3
adc
inc
push
xor
mov
mov
adc
inc
pop
scas
and
jo
cmps
and
daa
pop
ins
inc
in
shr
cli
loope
loope
add
inc
add
cmp
mov
cmp
(bad)
loope
cmp
aaa
xchg
sbb
push
inc
push
xchg
xchg
jg
(bad)
sbb
inc
add
sbb
ror
outs
dec
inc
add
jns
add
add
pop
xchg
(bad)
inc
cmps
loope
mov
mov
or
lock
pop
inc
cmp
cmc
jmp
aaa
loope
sub
call
or
inc
in
mov
inc
cmc
int
(bad)
cmp
push
and
pop
jo
cmc
xor
cwde
adc
mov
add
push
ins
adc
xor
xor
adc
sbb
cmps
imul
cmps
mov
gs
push
in
add
repz
icebp
retf
pop
or
and
inc
sub
icebp
retf
cmps
or
inc
cmps
cmp
movs
popf
sahf
cmp
pop
or
cmp
adc
loopne
jb
addr16
cmp
in
inc
loopne
movs
sub
adc
arpl
int
and
jmp
fst
cmp
les
lea
dec
mov
add
jnp
test
das
aam
xor
pop
add
adc
frstor
aaa
icebp
pop
sub
xchg
or
sbb
dec
retf
test
popa
movs
cmps
ret
jecxz
popw
int
repz
leave
pop
cmp
pop
sbb
idiv
push
retf
add
shr
add
mov
or
pop
ret
or
test
push
push
aaa
sub
movs
or
jne
sbb
add
xor
or
jge
pop
sub
outs
or
ret
inc
sbb
je
pop
movs
jo
int
lahf
and
adc
and
push
cmps
ins
xor
xchg
pop
fisub
arpl
mov
or
sbb
xchg
adc
rcr
or
push
sub
pushf
cmp
fld
cmp
loopne
pusha
inc
mov
rol
fist
add
data16
mov
and
push
inc
jecxz
add
ror
xor
inc
or
lock
arpl
aaa
adc
add
mov
jne
ror
add
add
inc
or
sub
rcr
test
push
add
add
lahf
inc
and
push
xor
and
jnp
pop
sub
jbe
inc
and
dec
add
or
shl
cdq
or
pop
out
push
pusha
and
outs
push
dec
add
popf
mov
in
pop
push
add
and
out
gs
jmp
dec
gs
inc
inc
sub
mov
in
jb
gs
pop
add
xchg
icebp
div
adc
mov
jns
pop
xchg
mov
pop
push
xor
test
ss
out
test
or
and
fwait
cmp
add
les
or
and
and
arpl
xchg
mov
xor
lods
movs
jge
add
(bad)
imul
add
add
(bad)
icebp
retf
or
ret
inc
push
push
mov
sar
xor
lock
aad
xor
add
iret
inc
and
pmaddwd
add
add
add
sub
pop
and
sub
jmp
test
iret
sub
push
iret
daa
popf
xor
sbb
ins
leave
in
test
dec
lods
jo
adc
and
retf
or
pop
xor
push
mov
adc
outs
sbb
enter
ss
je
jae
loope
or
outs
daa
mov
xchg
mov
faddp
inc
iret
pop
jns
imul
sub
js
xor
add
sbb
cmp
xchg
adc
cmp
xchg
add
add
arpl
cwde
mov
or
push
cmc
pop
popa
arpl
or
dec
mov
shl
add
or
push
aas
and
sbb
fucomip
hlt
mov
aas
adc
stc
xchg
mov
ja
xor
ret
dec
cwde
lock
pop
ins
add
shr
mov
ret
jnp
addr16
jg
das
xchg
sbb
ins
iret
popa
adc
loope
pop
pcmpgtb
xchg
cwde
jmp
jae
add
inc
mov
sub
scas
dec
shr
ret
test
adc
add
popf
push
sub
mov
icebp
xchg
cmp
or
test
cmp
push
mov
adc
mov
add
xor
loopne
sbb
loope
dec
cmp
mov
add
add
out
scas
or
les
and
jae
mov
inc
sti
lds
movs
popa
or
out
in
mov
rol
xchg
int
test
adc
fwait
lock
idiv
mov
jmp
div
add
mov
std
adc
mov
pop
adc
add
leave
or
or
jno
pop
loopne
adc
pop
adc
sub
adc
cmp
and
mov
data16
adc
imul
push
lods
jno
popa
das
or
dec
in
sub
sbb
cmps
ja
inc
test
xlat
sbb
inc
ret
imul
pop
ins
dec
add
jmp
(bad)
jmp
shl
and
sub
cmp
call
add
movs
inc
and
cmp
add
add
add
xchg
out
or
(bad)
and
add
push
or
popa
pop
add
inc
cmp
fcomip
sbb
or
and
inc
sar
and
or
fst
icebp
push
das
add
aas
cmc
sbb
push
cmp
jns
pop
mov
scas
xchg
cmp
(bad)
loope
xor
addr16
rol
stos
push
jae
(bad)
(bad)
std
dec
mov
cmp
xor
sbb
sub
pop
(bad)
or
addr16
add
les
cwde
adc
frstor
inc
js
fistp
xor
pop
jecxz
mov
cmp
rol
adc
rcl
sbb
lahf
sub
sbb
arpl
and
jne
arpl
sbb
gs
outs
add
test
inc
inc
aad
jmp
loope
jnp
sar
idiv
call
pop
push
inc
pop
cdq
stc
int
push
sbb
xor
in
ins
add
sub
mov
cwde
add
rol
push
cmp
dec
aaa
data16
and
or
adc
mov
sub
sbb
jb
xchg
or
icebp
int
adc
out
sub
sub
lahf
or
dec
adc
sbb
in
dec
mov
pop
rol
imul
mov
cdq
fnstcw
xor
xchg
fiadd
or
inc
push
popf
cmp
dec
dec
rol
jns
pop
or
add
std
je
inc
lock
sbb
fwait
loopne
test
test
add
xchg
sbb
adc
and
mov
pop
and
pusha
pop
lahf
mov
lock
and
xor
add
jno
sti
pop
sbb
jo
and
loop
mov
pop
icebp
jmp
popa
scas
and
jecxz
cmp
pop
popa
cmp
lds
lahf
lock
(bad)
adc
xchg
cmc
jp
jnp
mov
mov
sub
lock
mov
mov
loop
inc
dec
ins
sub
jnp
sub
rcr
call
scas
fstp
dec
sti
dec
test
aaa
or
xchg
ror
and
retf
lahf
xchg
jp
es
cmp
mov
cmc
pusha
or
jne
lds
xchg
sub
adc
sbb
iret
addr16
cdq
addr16
add
test
push
and
addr16
fs
lods
ins
jge
lahf
sbb
cdq
loopne
xchg
rcl
jp
pop
pop
xor
and
retf
push
movhps
adc
mov
add
call
mov
lock
cmc
adc
xchg
sbb
cdq
and
lea
push
aaa
in
cdq
sub
mov
xor
dec
out
icebp
jb
xchg
jnp
and
test
inc
xor
cs
jne
dec
out
xor
les
test
scas
mov
and
sub
rcl
xchg
test
and
imul
shr
cmc
cmp
xchg
add
jl
jbe
aaa
test
adc
dec
xor
push
int
mov
add
jno
adc
loop
leave
arpl
xor
dec
retf
cmp
add
pusha
jecxz
setne
sbb
or
mov
loopne
pop
or
add
push
cmp
jmp
dec
test
imul
cmps
test
push
and
pop
push
dec
and
mov
shl
xor
fisttp
je
add
std
mov
mov
lea
mov
sub
or
sbb
out
out
mov
add
ror
add
jns
xor
and
test
pop
push
xor
iret
push
xchg
sub
jne
or
in
imul
add
mov
getsec
mov
jp
or
pop
push
xor
popf
sbb
mov
iret
popf
mov
loope
mov
out
inc
rcpps
jecxz
popa
inc
sub
push
or
mov
mov
dec
dec
sbb
jmp
imul
cmp
add
aas
icebp
imul
scas
and
jnp
adc
shl
int
and
imul
mov
in
xlat
popa
outs
add
loop
push
lds
inc
cmps
cmp
(bad)
fwait
or
iret
add
xchg
pop
push
cmp
int3
sahf
mov
test
push
sub
pop
and
add
nop
and
cmc
loop
jnp
sbb
int
mov
sbb
lods
mov
das
jecxz
ret
ret
or
inc
js
cmp
jnp
add
pop
pop
outs
jecxz
test
lahf
or
add
or
add
popa
addr16
popa
add
adc
mov
sub
jno
cmp
inc
mov
cmp
test
add
cmp
leave
sbb
sbb
out
inc
cmp
or
in
add
sbb
sub
out
loop
adc
leave
sbb
aam
cmp
pop
dec
lea
and
sbb
sub
and
sbb
shl
pushw
mov
pop
mov
and
add
pop
add
jmp
adc
push
mov
sbb
adc
leave
ror
inc
inc
popf
lods
sbb
adc
in
cmp
add
test
loop
sub
out
xchg
pop
out
out
sub
add
test
stos
sbb
fsubrp
sbb
outs
mov
sub
inc
call
mov
fld
bound
scas
rol
and
les
or
ja
pop
retf
popw
mov
xchg
add
aam
gs
stc
adc
or
retf
pop
sbb
or
test
rol
jecxz
popa
push
(bad)
aas
add
dec
nop
jae
faddp
pusha
gs
cmp
inc
adc
jecxz
fucomi
outs
outs
dec
scas
push
in
pop
push
ret
jp
lahf
inc
dec
lea
nop
inc
add
(bad)
sub
pop
rol
pop
push
int3
lea
ja
xor
jnp
jae
mov
mov
inc
js
push
xor
shl
and
repz
add
aaa
adc
aam
mov
retf
cmps
jno
sbb
add
and
or
adc
adc
jmp
pusha
add
lahf
and
cmps
(bad)
daa
add
icebp
fist
add
cmps
aaa
rol
lods
adc
in
hlt
push
xchg
pusha
rcr
lods
fnstenv
adc
push
xor
lds
jb
imul
dec
dec
ret
addr16
and
icebp
test
add
gs
(bad)
sbb
jne
ins
adc
daa
fisubr
loop
push
pop
push
or
mov
jne
stos
rcl
cli
imul
xor
cmp
mov
jp
add
or
pushf
lock
adc
scas
pop
dec
lahf
xlat
jae
add
out
dec
jnp
sbb
mov
push
or
xlat
das
dec
add
das
mov
xor
pop
in
jae
es
dec
add
ror
mov
jnp
pcmpgtb
xchg
mov
inc
sar
xor
xor
jbe
push
inc
sub
xlat
sbb
cmps
xlat
cmp
or
out
jns
lods
jne
dec
rcr
pop
pusha
sub
int
add
add
sbb
dec
dec
jg
je
and
add
add
mov
or
add
pop
adc
xchg
or
rol
pop
popa
xchg
div
aaa
inc
xchg
leave
int
es
jne
jge
es
cli
xor
imul
mov
jmp
pop
scas
pop
sub
not
sbb
cmps
retf
ja
iret
add
push
inc
sar
mov
fistp
in
cwde
adc
hlt
dec
out
sti
fld
test
int
(bad)
jmp
imul
fld
adc
cmp
stos
cmp
jnp
ret
push
xchg
add
xlat
push
mov
aam
rol
(bad)
xor
lds
jecxz
lods
shl
ins
dec
xor
inc
adc
add
add
mov
sbb
sub
push
cmps
pop
pop
scas
push
sbb
mov
cmp
sub
pop
jno
cmp
mov
add
ins
mov
pop
or
and
adc
or
es
xchg
call
mov
add
and
jmp
daa
jmp
hlt
ficomp
retf
rcr
cmp
(bad)
dec
pop
add
ret
aaa
or
jge
sbb
hlt
add
and
jmp
adc
xor
shl
stc
mov
pop
popf
xor
loope
adc
repz
sbb
aaa
dec
jne
or
lds
mov
data16
cmp
mov
(bad)
xchg
pop
add
addr16
lea
sbb
xor
mov
adc
push
xor
jae
stos
and
lahf
test
mov
or
or
add
(bad)
out
movs
or
add
or
or
out
outs
or
or
mov
mov
enter
les
adc
fstp
xchg
and
push
inc
mov
mov
aaa
jae
xchg
test
sub
call
test
movs
pop
scas
mov
adc
add
or
or
pop
loope
idiv
xlat
or
sbb
dec
mov
aas
ja
inc
stos
pop
stos
or
sbb
mov
xchg
jae
cmc
and
scas
pop
pop
cmp
or
add
inc
adc
add
inc
addr16
cmp
aas
xor
inc
jl
dec
add
test
xor
scas
shl
sti
xchg
lods
add
rcr
loope
ror
cdq
xchg
stos
inc
movs
and
ja
or
cmc
sbb
sub
mov
out
jae
out
mov
cmps
mov
cmp
inc
mov
add
fwait
add
and
xchg
and
add
or
popa
xchg
add
int
shr
fnstcw
dec
sub
add
retf
ins
mov
push
sahf
loope
or
pop
(bad)
in
jno
and
xor
lock
or
int
mov
pop
cmp
mov
scas
mov
pop
ss
scas
pop
jne
fdiv
fsubr
arpl
add
inc
fwait
sub
xchg
out
inc
scas
mul
push
mov
int
jno
and
cmp
mov
ror
or
push
and
jecxz
xlat
jo
pop
(bad)
sub
xlat
stc
or
dec
mov
out
loopne
jo
add
xor
pop
mov
and
mov
popf
push
(bad)
repz
mov
sub
popa
cmps
xor
retf
and
sbb
jns
add
cmps
cmp
ret
or
std
out
add
jno
(bad)
ror
pusha
mov
movs
mov
jno
retf
jmp
fadd
adc
retf
or
(bad)
mov
xchg
add
lds
xor
mov
fld
dec
inc
out
mov
mov
cmps
mov
or
sbb
jae
or
fcmovne
sbb
sar
pop
and
dec
ret
fidivr
ror
retf
imul
movs
ret
out
in
jp
sbb
jns
retf
xchg
xchg
int
mov
add
xchg
xlat
ret
call
loopne
in
sub
(bad)
loope
shl
jge
push
sbb
adc
add
jns
push
mov
dec
dec
addr16
jno
jae
jp
popa
pop
mov
arpl
mov
push
aas
popf
xchg
pusha
js
icebp
popf
ret
arpl
fwait
js
xor
dec
fidivr
cwde
ds
rcl
mov
popf
cmc
dec
neg
dec
mov
les
add
push
adc
mov
pop
add
pop
cmp
inc
loop
xlat
scas
mov
push
or
xchg
shr
mov
pop
mov
push
ret
or
hlt
dec
sbb
or
dec
loop
mov
loope
mov
sbb
jecxz
aad
movs
push
xchg
sbb
outs
ret
fldcw
neg
addr16
call
add
jne
test
leave
mov
dec
scas
mov
mov
popa
cmps
and
fwait
xchg
popa
ret
jnp
rol
mov
test
cs
call
mov
aas
leave
jg
adc
cmp
pop
dec
dec
loope
jae
in
outs
xlat
add
jnp
pop
mov
add
xchg
sub
popa
cmp
or
jge
or
imul
outs
repz
sub
adc
leave
rol
sbb
or
xchg
push
mov
test
pop
out
xlat
xor
lahf
scas
aas
sub
mov
fild
mov
jmp
jbe
jnp
add
push
out
(bad)
mov
dec
mov
fbld
xor
or
jo
xchg
nop
xchg
and
lock
retf
sbb
push
pmovmskb
mov
aaa
mov
loopne
mov
or
push
(bad)
das
es
movs
fsubrp
cmp
mov
jl
ret
(bad)
and
shr
std
daa
sbb
or
scas
push
es
rol
sbb
or
scas
(bad)
jecxz
sub
xchg
jne
add
pop
inc
scas
mov
mov
icebp
sub
pop
mov
fdiv
push
mov
or
jno
iret
nop
nop
mov
mov
mov
movs
cdq
cmps
sbb
aad
stos
or
lahf
add
mov
outs
pop
mov
lods
xor
add
pop
or
scas
xor
mov
cmp
sub
pop
or
lds
jge
aas
dec
inc
daa
lea
inc
std
imul
sub
mov
dec
adc
mov
xchg
xor
add
mov
sbb
and
xchg
pop
fstp
xchg
jae
shr
dec
repz
ja
jmp
sti
dec
mov
and
sbb
inc
js
cmps
ret
imul
xor
lahf
imul
lds
mov
cmp
(bad)
dec
lods
test
test
mov
shl
or
loope
pop
mov
popf
stc
jno
pop
xchg
sti
and
ins
fdiv
out
loope
cmp
inc
inc
aaa
inc
scas
fld
ins
and
xor
punpcklwd
ins
(bad)
xor
test
mov
cmp
pop
scas
push
lods
test
mov
pop
sbb
cmc
sbb
add
cmp
cmp
aas
xchg
or
adc
dec
or
pusha
ret
pop
inc
xchg
loopne
sbb
pusha
or
push
daa
mov
xchg
aaa
(bad)
xor
imul
add
loopne
loop
push
test
mov
or
adc
shl
arpl
jae
xchg
or
outs
aad
push
xor
outs
jg
jo
shl
jmp
sbb
js
das
ret
add
in
jno
cmp
cmc
rcr
xchg
or
lods
dec
scas
adc
add
fwait
mov
add
aaa
mov
retf
sbb
in
inc
jl
lods
sbb
mov
(bad)
fnstenv
xor
mul
pop
dec
mov
test
add
lds
jge
cmp
push
jg
or
cmp
inc
add
add
add
daa
pop
or
or
or
and
add
xor
or
add
pop
inc
or
add
or
(bad)
or
or
aas
xlat
fst
sub
or
jnp
pop
icebp
sbb
adc
or
xlat
jge
jmp
add
or
or
or
or
or
add
xor
add
add
or
arpl
xor
add
or
out
mov
cmp
and
scas
jmp
mov
sub
pop
daa
leave
mov
mov
add
pop
aas
or
adc
pop
out
jns
or
outs
or
sbb
stc
sahf
int
sbb
and
or
mov
dec
cmps
jecxz
adc
jge
add
jo
ja
and
add
and
pop
xor
add
sub
es
cmp
jno
ror
outs
pop
fs
adc
pop
lea
sub
sub
cmp
bound
pop
or
fild
pop
not
sti
mov
inc
pop
cmp
mov
repz
jle
or
and
mov
mov
das
xor
pop
add
add
xchg
mov
xor
or
mov
fdiv
daa
imul
mov
add
loope
mov
sbb
icebp
inc
clc
lods
or
pop
or
mul
mov
arpl
mov
or
test
mov
adc
fnsave
pop
daa
es
inc
das
inc
or
div
shl
xor
and
xor
cmp
scas
jnp
dec
xor
aas
jecxz
int3
jne
dec
inc
(bad)
xchg
movs
push
sbb
(bad)
cmp
popa
mov
jns
jg
out
ds
push
inc
or
ret
leave
jno
or
shl
and
pusha
lds
aas
or
mov
dec
out
loope
dec
mov
shr
mov
fbld
shl
fisttp
cmp
popa
cmp
jge
and
mov
sbb
aas
or
adc
fwait
mov
dec
sbb
leave
scas
sti
mov
and
lock
push
and
fs
retf
push
pop
sti
lods
dec
cwde
int
cmp
or
or
das
cmp
dec
mov
dec
or
fild
out
inc
cmp
and
ja
jne
add
jmp
pop
pop
idiv
or
add
daa
xchg
and
cmp
pop
pop
and
ins
leave
sbb
pop
mov
or
loope
or
or
ret
dec
xlat
lock
xor
dec
and
inc
ja
xor
js
push
in
push
or
and
jne
daa
cmp
dec
dec
ds
adc
retf
sub
out
inc
lds
lock
cmp
or
addr16
xor
shr
push
shr
xor
adc
dec
xchg
mov
or
adc
dec
popa
push
ror
sbb
gs
sub
addr16
add
mov
js
fbstp
or
cmovae
rol
loope
add
fist
nop
lds
push
mov
xor
sub
mov
imul
aad
in
xor
loop
loopne
and
and
and
xor
call
push
inc
or
(bad)
or
xchg
out
or
shr
cmp
cmp
add
mov
cs
pop
pop
das
stos
inc
inc
js
call
or
pop
and
fnstsw
cmc
inc
fwait
aas
xchg
ins
xchg
imul
scas
jnp
psrlq
jae
outs
sbb
ret
sbb
push
push
xchg
es
xor
xor
pop
add
shr
inc
or
cwde
loopne
cmc
cmp
sbb
loopne
out
sti
retf
adc
jp
cdq
sbb
jge
sbb
xor
mov
das
adc
sub
test
(bad)
mov
mov
popf
xchg
fucom
adc
mov
fwait
aad
or
cs
out
out
sbb
dec
adc
pusha
out
mov
leave
rol
mov
xchg
inc
or
popf
and
fld
adc
mov
xlat
jmp
or
inc
pop
and
icebp
(bad)
loope
or
xor
enter
lods
neg
dec
pop
add
or
push
add
rcl
xchg
add
add
ret
xor
jmp
and
ja
pop
scas
pop
mov
cmps
mov
adc
(bad)
cmp
jmp
inc
leave
push
mov
sub
loopne
or
fistp
(bad)
loopne
inc
ds
dec
stc
inc
jge
mov
iret
dec
dec
out
xor
cmp
and
sub
or
aas
xor
adc
add
aas
cmp
test
leave
stc
int
lock
mov
ret
das
mov
retf
xor
jmp
dec
jg
sub
cs
pop
sbb
pop
mov
add
test
imul
cmp
push
out
lds
push
pushf
or
cdq
sub
test
arpl
inc
adc
sub
or
cmc
aas
or
cmp
mov
adc
clc
aas
sub
jg
mov
jge
xchg
lds
xchg
sub
push
pop
scas
mov
loopne
clc
dec
xor
scas
ret
pop
iret
inc
adc
rol
sub
adc
push
or
fld
pushf
lds
icebp
in
or
jo
jne
sbb
pop
add
and
inc
or
xor
pushf
and
push
push
fucom
and
cmp
movs
adc
dec
cmp
pop
push
das
inc
repz
dec
jo
lods
popf
pop
test
dec
xchg
pop
dec
dec
add
push
mov
sub
neg
shl
pop
pop
retf
pop
xor
in
add
outs
add
or
pop
addr16
pop
push
sub
sbb
pop
push
mov
cmp
jns
lahf
jecxz
repz
xor
aad
adc
or
mov
xchg
scas
ror
es
(bad)
int3
in
jmp
sbb
loope
inc
aas
add
mov
shr
add
and
xlat
xor
push
xor
js
mov
into
loopne
adc
clts
or
inc
sbb
or
add
sub
dec
jmp
jl
out
das
add
fmul
retf
out
test
(bad)
jno
jg
sub
icebp
aaa
or
xchg
dec
or
ret
pop
pop
cmps
sbb
fwait
es
and
retf
aad
inc
push
xor
xchg
cmp
ja
inc
test
(bad)
or
xchg
xor
loope
stos
dec
jnp
adc
xor
cmps
cdq
jo
xchg
mov
add
(bad)
repz
lds
sbb
dec
add
in
or
imul
jae
inc
add
or
(bad)
aad
mov
push
xor
mov
or
sbb
arpl
cmps
dec
ret
jmp
push
xchg
outs
not
mov
push
pop
xor
aaa
push
data16
(bad)
mov
ja
mov
idiv
dec
xchg
es
aaa
fld
mov
add
jmp
mov
movs
adc
and
adc
div
pop
xor
jae
popf
cmp
leave
mov
es
xor
dec
cmps
rol
adc
shl
cmp
clc
dec
mov
add
add
cmp
mov
xchg
jae
aaa
add
xor
mov
loope
cmp
idiv
xchg
sbb
adc
adc
ja
push
daa
push
adc
add
pop
push
xor
and
push
and
push
add
inc
or
neg
inc
push
or
dec
push
push
add
or
mov
push
sub
push
and
add
pop
push
xor
add
inc
push
sub
cmp
ja
dec
push
xor
cmp
adc
adc
mov
push
mov
(bad)
aaa
sahf
sti
(bad)
push
sub
push
add
int3
cmp
add
sub
addr16
or
leave
aaa
sbb
mov
lds
or
push
inc
mov
mov
add
or
and
xchg
lmsw
push
or
dec
sbb
and
add
(bad)
sub
or
or
xor
adc
inc
or
je
pop
dec
(bad)
pop
sub
push
inc
or
and
or
sbb
or
or
sub
push
aas
xor
or
sbb
and
sub
mov
adc
add
sbb
and
jne
push
sbb
inc
addr16
mov
dec
jmp
sbb
and
and
dec
xor
sbb
add
dec
inc
mov
sbb
cmp
xor
xchg
and
sub
jo
arpl
xchg
out
or
mov
add
test
(bad)
sbb
gs
sbb
sub
xor
push
push
sbb
pushf
fild
xor
xchg
or
shr
xlat
lea
and
pop
imul
jo
push
push
and
push
mov
cmp
dec
adc
adc
cdq
push
xchg
(bad)
and
and
xor
cmp
ds
pop
stos
sub
add
and
fsub
sbb
add
faddp
or
sbb
fild
mov
aas
dec
sub
jo
popa
adc
daa
jno
and
xor
cmp
inc
push
add
jo
jbe
sub
jecxz
div
gs
in
shl
adc
jmp
push
setae
je
fisttp
push
inc
push
pop
outs
inc
or
retf
dec
push
sbb
fwait
or
call
mov
fbld
push
push
xchg
daa
in
movs
xchg
leave
adc
cmp
or
lods
add
cmp
stc
adc
jnp
inc
(bad)
pop
xchg
sub
xchg
adc
and
push
add
test
and
daa
ins
mov
and
sub
rol
aaa
sbb
mov
sbb
dec
inc
and
or
adc
pop
fwait
pop
inc
(bad)
ror
add
popa
add
cdq
test
mov
push
or
ret
sbb
imul
mov
and
or
sbb
mov
inc
dec
dec
ror
push
cwde
call
das
and
jne
std
and
fsubr
jecxz
jl
inc
inc
pop
cmp
jae
or
or
mov
sbb
daa
xor
pop
add
js
daa
(bad)
and
sbb
test
movq
add
(bad)
ret
add
jo
jecxz
test
and
sub
into
push
scas
out
pop
push
sbb
adc
ret
push
cwde
xor
pop
(bad)
or
and
push
sbb
shl
inc
and
sbb
mov
test
sbb
(bad)
and
(bad)
jb
movd
fwait
dec
mov
test
jge
mov
shl
popa
cli
pop
inc
xlat
jmp
icebp
sbb
cmc
sub
adc
dec
cwde
sahf
std
sub
aad
inc
add
pop
adc
icebp
sbb
outs
inc
or
outs
test
lods
cmp
push
idiv
ret
inc
cmp
cdq
cdq
and
push
jmp
out
or
(bad)
sti
test
sbb
cmp
or
mov
shl
dec
inc
adc
mov
xchg
mov
inc
pop
lods
out
sub
adc
shl
sbb
sti
lea
pop
sub
xchg
fcom
mov
pop
inc
push
or
xchg
rol
jo
inc
inc
pop
out
sub
xor
push
and
adc
pop
dec
(bad)
arpl
or
sbb
retf
mov
or
popa
fs
jnp
push
loopne
out
and
idiv
cmp
xor
cmp
or
or
xchg
test
les
and
loope
inc
adc
and
xor
add
and
shl
dec
cmp
sbb
inc
fld
mov
add
push
sub
out
add
test
pop
xor
sub
adc
inc
aas
pusha
add
jo
jne
or
popa
mov
cmp
xlat
sbb
push
push
jns
sub
lock
dec
lahf
and
and
lgs
test
push
and
adc
mov
add
mov
nop
adc
mov
push
xor
es
add
or
movs
pop
mov
adc
(bad)
mov
xlat
jne
ins
daa
xchg
adc
popa
pop
and
enter
add
push
rol
xchg
sbb
xchg
shl
fsub
xor
or
ins
adc
ss
imul
sbb
and
push
dec
and
jb
and
sub
push
adc
sbb
push
mov
add
add
pop
jne
add
xor
xor
dec
or
daa
in
sbb
push
popa
mov
popw
icebp
xlat
out
mov
gs
std
jne
xor
daa
lds
xchg
xor
cmp
adc
push
mov
and
jmp
mov
or
outs
test
xor
xor
sbb
daa
lods
call
inc
push
scas
retf
push
in
or
adc
mov
ins
add
cdq
sub
jae
in
fmul
inc
add
dec
jns
xor
jb
data16
fs
pop
or
mov
add
push
or
push
gs
je
pop
add
add
adc
or
xor
dec
daa
add
adc
and
fild
add
or
dec
xor
and
pop
add
iretw
add
pop
pop
jecxz
ret
cmps
add
add
pop
pop
add
pop
add
fld
popa
cmps
xor
ins
lea
call
jp
cmps
add
inc
test
out
xchg
add
lds
add
or
pop
dec
lock
dec
pop
imul
sub
mov
add
jo
mov
xor
nop
arpl
int
adc
cmp
stos
(bad)
cld
add
aaa
inc
movs
lahf
add
cmp
rcl
sub
add
add
add
pop
add
ret
jno
add
sub
fisttp
jb
mov
loop
add
add
and
add
cmp
dec
movs
adc
push
scas
cmp
inc
pop
adc
out
stos
or
mov
pop
and
loopne
sub
lods
es
mov
push
pusha
out
icebp
adc
pop
add
cdq
add
cmp
ins
add
jge
rcl
loopne
jge
add
sar
imul
adc
jle
cmp
arpl
push
jns
push
mov
stos
test
or
push
aaa
sub
sub
js
inc
or
or
cmp
mov
add
out
aas
aad
outs
add
or
imul
sbb
sub
inc
push
add
maskmovq
adc
fst
push
jmp
pop
add
inc
push
cs
xor
push
jmp
and
xchg
jnp
adc
pop
adc
add
or
inc
xor
cwde
pop
call
sbb
scas
in
or
and
cmp
lds
add
or
inc
lods
cmc
push
and
mov
mov
dec
mov
xchg
push
xchg
and
adc
mov
mov
rcl
ins
sbb
dec
add
inc
shl
das
adc
add
syscall
lock
xor
mov
add
sub
push
jb
gs
push
jge
cdq
and
push
or
pop
jae
cmps
mov
sub
jnp
out
sub
(bad)
and
push
arpl
sbb
inc
shl
js
push
cmps
ret
inc
push
cmc
push
add
inc
jae
shl
cmp
or
add
movs
das
or
nop
arpl
or
arpl
and
imul
dec
inc
iret
cmp
aam
or
sub
retf
pop
jmp
fsubrp
mov
arpl
mov
add
add
sbb
adc
outs
jnp
add
or
adc
ins
fstp
rcr
adc
ret
leave
and
pop
xchg
mov
inc
add
das
sbb
add
dec
or
jnp
popa
sbb
jp
cwde
fwait
and
jnp
pop
pavgw
cmp
inc
mov
pusha
loop
and
js
popa
popa
and
push
cmc
or
xor
add
cwde
aaa
mov
adc
add
adc
fstp
imul
aas
imul
xchg
pop
imul
mov
jae
movs
dec
push
out
pop
inc
mov
jge
mov
test
rol
jp
push
push
push
add
jae
or
test
cmp
push
das
std
jnp
push
and
mov
sbb
pop
dec
pop
fld
pop
dec
cmp
movs
sub
icebp
pop
pop
rol
(bad)
adc
mov
push
xchg
inc
ficomp
sbb
xor
add
cmps
shl
mov
popf
arpl
or
inc
les
add
pop
xchg
cmp
inc
dec
cmp
add
xchg
inc
add
add
mov
imul
bound
ins
or
jns
loopne
outs
and
jnp
pop
add
xchg
test
ret
mov
pop
inc
and
sbb
sub
and
pop
push
add
jge
mov
lahf
addr16
loope
js
xchg
xor
jae
cmps
pop
mov
adc
xor
pop
cmps
push
push
inc
arpl
xchg
mov
icebp
or
dec
sbb
gs
lock
imul
and
and
js
push
(bad)
jne
mov
in
outs
sar
pop
mov
sbb
dec
gs
add
pop
jp
lods
ror
add
cmps
and
jmp
sbb
push
aaa
add
or
lahf
jg
and
pop
addr16
xor
loop
loope
rol
(bad)
cmp
sbb
popf
cmp
xor
mov
adc
dec
js
or
mov
mov
or
push
sub
out
lds
xlat
retf
gs
jnp
movs
inc
sub
xchg
ins
and
xor
jnp
dec
out
out
sbb
add
jmp
or
ret
popa
mov
je
sbb
jecxz
arpl
sbb
imul
pop
int3
add
daa
dec
loopne
and
adc
jb
cmp
sbb
or
call
or
aam
pop
add
push
out
jns
add
mov
add
mul
outs
xchg
out
jno
lsl
imul
add
sub
adc
clc
pop
gs
sub
push
cmp
cmp
fwait
in
and
popf
dec
push
ret
mov
aad
aaa
sbb
rol
cmp
jne
dec
lds
add
daa
fisub
xor
xor
cli
outs
gs
xchg
xchg
inc
stos
mov
cmp
push
ret
imul
div
jne
rcl
adc
shl
push
xor
mov
fst
add
mov
sbb
jo
sbb
mov
iret
daa
add
cmp
dec
pop
add
jge
scas
cmps
or
add
jae
test
jo
int3
popa
in
dec
adc
div
jo
push
xchg
or
imul
jno
stos
mov
mov
or
loope
leave
push
or
sbb
scas
fxch
xchg
mov
sbb
cmp
sbb
nop
jp
add
lods
xchg
and
push
add
sbb
test
mov
jno
xchg
mov
xor
ret
push
adc
mov
lahf
mov
adc
hlt
das
aad
push
inc
mov
gs
or
inc
mov
cmps
push
or
es
and
int3
sti
push
xchg
push
(bad)
loope
pop
sub
xor
jl
and
xor
jge
add
add
stos
dec
dec
adc
stos
sbb
and
lods
or
cmps
push
add
add
ret
and
add
add
test
xchg
mov
push
sar
add
mov
add
add
add
xor
add
cmp
in
dec
push
mov
mov
mov
mov
adc
push
add
adc
or
push
pop
mov
inc
mov
inc
or
push
mov
xor
sbb
packssdw
test
push
xchg
sub
mov
scas
sub
mov
mov
and
mov
cmps
lds
or
add
sub
push
lea
and
daa
adc
inc
push
mov
das
sub
pop
test
adc
mov
es
or
add
xchg
mov
xor
sub
xor
xor
jae
or
and
xor
add
pop
cmp
cmp
rol
sbb
xor
movs
sub
icebp
mov
sbb
pop
and
sbb
adc
pop
daa
test
out
lock
test
push
xchg
inc
xchg
fisttp
sbb
xor
push
fwait
aas
rcl
ror
test
aaa
sub
inc
xor
add
and
xchg
sub
int3
push
gs
dec
arpl
add
adc
ds
mov
js
sub
pop
inc
gs
call
mov
lods
loopne
jb
addr16
cmp
and
mov
test
pop
fbstp
cld
mov
push
add
outs
dec
fst
add
dec
push
in
jmp
mov
adc
rol
adc
jmp
mov
stos
dec
fwait
lods
jnp
cmp
(bad)
mov
or
les
mov
sbb
or
mov
add
adc
xor
sahf
lds
mov
or
sbb
dec
add
inc
sbb
xor
fs
imul
popa
adc
xchg
push
jge
cmp
imul
mov
pop
cmps
add
xchg
push
add
and
pop
or
inc
add
add
add
lahf
pusha
push
cmp
xchg
and
add
out
pop
outs
add
pop
(bad)
pop
xchg
and
and
mov
add
mov
pop
stos
jp
mov
and
out
aas
daa
pop
cmp
inc
call
das
fild
(bad)
push
cdq
or
adc
fisubr
xchg
or
xchg
jnp
push
dec
xchg
cmp
or
push
cmp
fild
ffreep
pop
adc
lds
add
add
adc
aad
sbb
and
pop
ret
xchg
dec
inc
fnstcw
adc
test
in
mov
add
cmps
pop
test
add
repz
rcr
fistp
dec
inc
adc
push
inc
or
pop
cmp
movs
or
ret
es
xor
xchg
push
adc
loope
sbb
cmp
inc
ror
scas
stos
sar
or
sub
and
std
inc
push
jmp
xor
dec
add
add
xor
aas
add
add
or
xchg
xor
pop
and
(bad)
icebp
cmp
inc
rcr
add
or
retf
add
sbb
popa
ret
loopne
mov
(bad)
sub
pushaw
stos
shl
adc
cdq
xlat
xor
pop
adc
mov
add
pusha
sbb
int
add
jne
inc
les
cmp
sub
daa
daa
popf
ror
js
ret
xor
add
cmps
pop
shl
aad
adc
pop
xlat
or
dec
iret
dec
ds
xor
pusha
stos
xor
mov
aas
and
and
pop
test
loop
icebp
scas
and
loopne
shl
sbb
or
xor
outs
push
sub
jecxz
test
and
cmp
cmps
inc
inc
mov
push
push
mov
or
mov
add
mov
adc
and
add
jo
push
push
push
sbb
scas
out
data16
jnp
mov
push
rol
add
xchg
adc
add
push
cwde
or
sbb
sub
outs
mov
add
add
icebp
(bad)
(bad)
lds
push
mov
jmp
fwait
seta
cmp
inc
in
imul
inc
or
add
lds
loopne
xchg
rol
fidivr
adc
mov
adc
mov
mov
adc
(bad)
jmp
ins
sub
loope
add
gs
add
push
mov
ja
xor
inc
add
ror
loopne
daa
outs
add
es
pop
cmc
(bad)
retf
ret
fwait
cmp
add
jne
push
inc
cmps
add
ror
out
out
jo
cmps
mov
loopne
pop
repz
mov
inc
pop
and
loope
mov
adc
xor
shr
out
xor
mov
scas
push
call
dec
pop
(bad)
jnp
jb
pushf
jo
xchg
mov
iret
xor
xchg
xchg
jae
add
inc
in
loope
test
out
lea
or
dec
es
mul
jnp
jae
dec
xchg
push
cmp
loope
or
or
add
jmp
or
jns
xor
arpl
inc
sbb
mov
retf
imul
sbb
xor
adc
fst
popa
add
adc
pop
bound
mov
inc
test
out
mov
adc
loopne
dec
sbb
loope
mov
inc
mov
xchg
pop
sub
or
mul
dec
leave
js
add
lea
mov
dec
sub
push
and
js
xlat
xchg
mov
add
push
cmc
cmp
cdq
mov
(bad)
xchg
sub
adc
push
cmps
sbb
ret
pop
icebp
daa
jmp
pop
dec
push
lock
jnp
push
push
mov
out
gs
jno
aaa
xor
push
popf
dec
inc
sar
cmp
and
mul
mov
jne
xchg
mov
pop
aad
adc
dec
lds
and
out
mov
xor
jmp
sub
sti
mov
lods
ins
ret
pop
mov
sub
push
cdq
inc
jmp
xor
stc
cmp
pop
cmp
scas
inc
mov
mov
sar
mov
lds
sar
xchg
mov
frstpm(287
aas
add
pop
adc
retf
xor
or
or
(bad)
push
inc
test
add
fst
or
jmp
aas
dec
and
das
pop
lea
fwait
push
sbb
xchg
push
add
xor
cwde
jnp
xchg
outs
mov
and
stc
retf
adc
mov
add
pushf
fisub
xchg
mov
push
out
movs
ret
mov
stc
mov
cwde
sar
sbb
pop
add
shr
inc
add
lds
pop
pop
outs
add
cwde
sbb
add
push
test
add
aas
jge
lds
mov
push
inc
add
rcl
pop
pop
adc
xchg
mov
enter
sub
(bad)
rol
mov
mov
adc
rol
push
pop
add
sbb
popa
xlat
mov
add
adc
mov
jae
mov
or
nop
add
add
(bad)
fwait
add
add
jo
cdq
test
outs
pop
pop
inc
cmps
out
cmps
dec
dec
sub
ret
das
dec
outs
cwde
or
jnp
mov
mov
add
adc
fs
sbb
push
add
pop
dec
pop
push
jno
loopne
imul
dec
mov
adc
pop
inc
xchg
jns
and
add
jns
add
pop
sbb
mov
popa
push
lock
mov
aaa
lds
mov
mov
out
ins
inc
dec
dec
add
push
icebp
inc
and
cmc
dec
(bad)
xchg
sbb
sub
xchg
xor
mov
pop
dec
popa
or
fstp
and
cmp
ins
inc
or
ja
rol
jae
add
cmp
jmp
sbb
mov
rcl
popa
dec
mov
clc
adc
push
pop
mov
cmp
inc
xchg
xor
dec
jo
and
sub
add
adc
jne
leave
and
icebp
rcl
sbb
and
inc
adc
lock
scas
jecxz
add
cmp
inc
jo
adc
and
(bad)
adc
dec
xchg
or
inc
pop
inc
or
mov
or
push
adc
and
sub
aas
(bad)
loop
sub
mov
loopne
arpl
(bad)
and
loope
in
test
jae
and
imul
sbb
add
ins
loope
xor
aaa
imul
mov
push
cmp
(bad)
iret
mov
mov
add
mov
pop
inc
pop
test
arpl
iret
(bad)
cmp
add
js
clc
fiadd
cmp
cmps
ja
xor
test
jmp
sub
push
mov
(bad)
verr
fucomp
retf
rol
add
jo
dec
xchg
and
mov
sbb
add
add
fcom
inc
or
jmp
popa
sbb
xchg
mov
xor
out
fwait
mov
aas
imul
inc
lea
inc
loopne
dec
add
add
pop
ins
mov
ins
jbe
and
call
pop
test
shl
xor
push
adc
and
cmp
sub
sub
lea
sbb
aas
push
adc
add
test
pop
pop
xchg
pop
dec
adc
add
xor
jecxz
and
iret
inc
lds
mov
fwait
pop
pop
cmc
shr
xchg
add
arpl
add
mov
pop
pop
add
adc
pop
jmp
loopne
gs
aad
jg
nop
dec
adc
dec
sbb
or
jecxz
test
xchg
push
aad
pusha
add
xchg
lahf
xor
mov
inc
lds
push
out
jmp
scas
iret
mov
push
cmp
push
cmp
sbb
(bad)
in
or
adc
fadd
jecxz
cmp
push
cmp
cmp
sub
add
add
mov
push
popf
jo
adc
and
add
call
sbb
pop
jmp
add
inc
iret
cwde
and
push
inc
push
jmp
js
cmp
sti
xchg
in
and
scas
pop
add
sbb
cvtdq2ps
xchg
rol
cmps
xor
iret
cwde
mov
adc
icebp
push
sbb
jmp
leave
jae
aad
jmp
imul
mov
sbb
add
adc
lock
test
lds
adc
add
jge
sbb
stc
iret
shl
add
imul
sbb
lds
add
ds
rol
sub
push
js
mov
push
lds
cmp
inc
adc
addr16
sub
pop
pop
addr16
dec
jmp
pop
pop
dec
pop
xchg
dec
cmp
daa
inc
mov
jp
mov
fldcw
xchg
mov
mov
rol
mov
jecxz
jne
xor
xor
cmp
rcl
add
mov
dec
pop
xchg
mov
pop
jmp
cli
mov
sti
ds
xchg
and
shl
das
cmps
mov
adc
sub
ud1
(bad)
(bad)
ret
inc
test
push
les
sbb
popf
ret
jne
inc
sub
xor
loope
out
gs
sbb
xor
add
add
jne
cmp
cmps
lds
mov
ret
add
jo
lock
mov
aaa
mov
outs
scas
or
fnstsw
add
pop
xchg
xchg
icebp
xor
add
(bad)
jnp
stc
xchg
pop
fild
sahf
jecxz
movs
dec
mov
adc
add
push
add
std
jno
inc
mov
(bad)
pop
add
push
dec
popf
sbb
das
inc
sub
ror
fbstp
push
test
cld
mov
and
fsub
popa
add
int3
loopne
push
ror
adc
lods
dec
mov
push
mov
int
and
div
scas
movs
sbb
cmp
shl
or
loope
sbb
add
and
js
and
pop
addr16
sbb
push
sub
int3
je
pop
ins
jae
test
adc
sub
aaa
mov
lods
ja
cmp
lea
cmp
loope
sahf
jecxz
icebp
cmp
retf
fdivp
iret
pop
and
fmulp
add
sub
sub
(bad)
jecxz
adc
ins
inc
jp
mov
sbb
pushf
add
loope
sbb
mov
dec
std
pop
rol
mov
add
inc
add
xor
les
jns
sbb
std
xor
push
aaa
or
push
and
daa
and
repz
rol
scas
cmp
out
mov
inc
daa
push
(bad)
push
test
ret
leave
imul
push
xchg
pusha
push
push
movs
xchg
scas
outs
test
mov
int
add
or
push
or
loope
push
xchg
pop
pop
xor
inc
jp
pop
lods
mov
xor
shl
mov
inc
lods
add
mov
cvtps2pi
sbb
cmp
xchg
ret
dec
mov
mov
scas
rol
repz
pop
add
pusha
inc
inc
push
loope
lock
pusha
or
jnp
xchg
dec
pop
or
mov
cmp
cmp
jge
jg
add
xor
cmp
movs
add
loop
sub
inc
test
xchg
cmp
push
icebp
retf
(bad)
mov
or
pusha
mov
and
retf
inc
mov
jle
out
jo
pop
sbb
add
shr
dec
xor
add
leave
neg
arpl
sub
dec
add
in
add
out
sub
loopne
imul
mov
inc
sub
adc
cmp
aas
add
dec
add
push
jns
fild
repz
out
add
ror
inc
add
jb
shr
mov
pop
movs
push
arpl
or
scas
jbe
or
arpl
jne
mov
popa
ins
idiv
mov
push
test
(bad)
ficomp
add
push
popf
adc
imul
xlat
loope
jnp
add
push
lahf
shr
mov
sti
or
add
push
popf
out
sub
les
push
add
ds
stc
add
xor
pop
adc
fwait
sbb
lods
adc
mov
inc
scas
xchg
xor
add
sbb
int
add
and
sub
push
(bad)
fadd
mov
add
js
xor
out
push
ins
rcr
jne
add
add
fs
add
add
pop
popa
clc
push
push
movs
jnp
push
xchg
sar
lock
imul
push
jecxz
xor
pop
ins
add
push
and
inc
sbb
xchg
lods
push
fistp
inc
pop
add
xchg
retf
test
dec
(bad)
push
call
adc
lods
xlat
fst
sar
popa
add
add
add
(bad)
lock
ret
jmp
mov
mov
adc
sbb
add
add
add
add
(bad)
add
mov
sbb
cwde
jmp
xor
or
fstp
sub
in
adc
mul
out
fs
pcmpeqw
jno
add
add
xchg
pop
in
jae
sbb
sbb
xchg
add
arpl
add
pop
mov
inc
loope
fisub
mov
scas
pop
or
add
adc
mov
iretw
jge
add
pop
jmp
shl
sbb
jbe
arpl
pop
jecxz
test
mov
xchg
sahf
loope
push
adc
xor
gs
pop
ret
pop
or
lods
sahf
test
adc
hlt
leave
stc
sbb
inc
add
pop
sbb
adc
adc
adc
out
jae
je
push
sub
and
xchg
ret
add
xor
icebp
sbb
jecxz
lods
arpl
mov
jno
add
ins
add
test
mov
stos
sub
popf
pop
add
imul
inc
(bad)
int
or
and
add
in
xchg
or
cmp
pusha
inc
jne
arpl
jg
imul
and
pop
clc
bound
stc
sysexit
jb
arpl
loopne
jg
add
jg
add
sbb
out
add
loopne
adc
sbb
(bad)
sub
adc
aad
add
rcr
or
lods
push
add
sti
jecxz
inc
cmp
jne
test
push
sbb
popf
mov
and
mov
xor
leave
push
add
cs
jnp
stos
fidiv
das
imul
or
adc
cli
pop
packuswb
aas
add
jmp
jo
dec
fwait
ret
or
cmp
and
cwde
shr
idiv
add
jg
add
fld
lock
mov
jge
cli
add
mov
outs
test
sub
add
add
add
push
mov
ret
scas
sub
or
je
scas
cmc
mov
arpl
cmps
push
add
jo
fwait
pop
dec
aad
and
mov
enter
(bad)
imul
pop
(bad)
pop
adc
in
arpl
dec
loopne
xlat
dec
jns
stos
or
pop
add
stc
shl
cmp
adc
jge
out
rol
mov
popf
and
sub
push
xchg
int3
bound
pop
add
jg
add
mov
adc
jnp
push
rcr
movs
pop
maskmovq
idiv
jns
icebp
or
add
int
mov
int3
push
scas
loop
and
dec
sbb
adc
adc
pop
cmp
rcl
ds
pop
pop
pop
out
arpl
xchg
je
xor
sbb
jl
icebp
ins
add
pop
icebp
mov
xor
cmp
cmp
dec
pusha
or
dec
sbb
or
imul
jmp
(bad)
mov
loope
cmp
mov
jno
bound
cmp
cmp
imul
(bad)
sar
(bad)
arpl
add
pop
jge
push
daa
shl
std
add
shl
imul
mov
sub
mov
xchg
and
gs
jmp
and
fwait
addr16
sub
mov
aaa
inc
jp
or
stos
mov
and
add
xor
test
movs
nop
js
shr
jmp
or
fimul
mov
push
lock
retf
es
xchg
dec
add
inc
adc
xchg
jmp
adc
sbb
pusha
ret
call
mov
out
inc
aaa
mov
inc
popf
sbb
stos
je
arpl
cmp
pop
out
pop
jne
mov
jg
adc
dec
push
loope
dec
xlat
push
or
xchg
dec
leave
add
adc
sar
xor
lods
adc
inc
rcr
cs
(bad)
adc
pop
ffree
lahf
je
rol
adc
fwait
aas
fild
pop
ss
jo
iret
jg
cmp
dec
or
or
push
push
scas
mov
inc
js
aaa
sub
ins
add
jnp
scas
xor
cmp
arpl
push
scas
lea
mov
frstor
jno
mov
add
dec
add
add
loope
add
lds
add
scas
push
fwait
xchg
mov
std
add
loope
pop
xor
mov
pop
movs
or
jg
mov
or
jnp
cmp
repz
sub
ss
into
cmp
jp
aas
test
dec
xor
cmc
cmp
push
shr
cmp
sub
or
hlt
jmp
lods
gs
ins
and
fbld
and
cdq
pop
add
js
jecxz
stos
cmp
push
(bad)
sbb
daa
sub
add
sbb
icebp
popa
jbe
add
mov
sbb
sbb
fdivr
mov
imul
popa
pusha
cli
xchg
dec
std
pop
adc
out
sbb
lock
cmp
mov
test
mov
fwait
aas
sbb
or
xchg
ins
add
test
xor
mov
lds
aaa
loope
mov
or
movs
and
mov
outs
pop
retf
push
push
inc
push
outs
dec
add
jmp
add
stc
loopne
pop
inc
adc
adc
inc
nop
bound
or
xor
jno
add
movs
cmp
scas
adc
bound
adc
sbb
leave
xchg
jl
ja
mov
add
mov
inc
ror
hlt
push
cmp
xchg
lods
lods
xchg
shr
cmp
(bad)
adc
imul
xor
icebp
mov
or
or
pop
adc
add
outs
js
mov
add
push
mov
add
data16
fwait
out
fistp
add
dec
sub
mov
cmc
push
jae
inc
ja
pusha
or
punpcklwd
cmp
test
(bad)
pusha
les
addr16
imul
or
mov
add
pop
xchg
popf
cmc
(bad)
pop
push
adc
cmps
jle
add
push
add
inc
push
push
add
mov
mov
loope
add
mov
dec
mov
adc
lea
push
adc
add
cmp
inc
or
jg
loopne
dec
gs
push
pop
(bad)
mov
dec
fcomp
movs
mov
enter
aaa
inc
adc
into
adc
cld
pop
gs
dec
jle
mov
outs
arpl
jnp
add
push
stos
dec
jg
popa
(bad)
dec
jne
pusha
mov
sbb
pop
test
inc
push
and
jge
and
mov
cld
jg
dec
dec
push
mov
mov
jg
jle
sar
add
add
popa
and
bound
(bad)
(bad)
inc
push
or
(bad)
and
or
mov
jb
or
adc
js
jge
pop
add
js
jg
push
adc
dec
inc
bound
sbb
(bad)
std
jg
sbb
and
pop
into
fs
test
or
imul
(bad)
jnp
or
jbe
sub
bound
push
pop
dec
push
or
add
jb
or
mov
cmp
popa
inc
pop
and
sti
jl
jle
dec
xchg
in
push
jecxz
xor
push
pop
call
add
push
fs
in
xchg
jnp
sbb
add
mov
das
or
cmc
popa
sbb
mov
bound
add
test
pop
add
dec
ret
outs
pusha
mov
sbb
sub
cmp
jg
mov
add
pop
ja
mov
push
call
stos
jmp
add
adc
cmp
pop
push
inc
addr16
xchg
add
add
add
dec
aas
or
ret
sub
add
imul
(bad)
mov
pop
lea
xor
bound
mov
call
lea
inc
add
jbe
jmp
add
fsincos
fild
dec
sub
or
bound
push
cli
pop
in
push
(bad)
ret
loope
xor
pop
and
cmp
adc
aad
xchg
std
out
add
xchg
or
mov
(bad)
push
mov
add
fsubrp
xchg
xchg
sbb
add
out
xchg
adc
addr16
in
jle
push
test
xor
add
dec
std
push
or
fbstp
cld
ltr
dec
add
and
dec
mov
sub
add
or
adc
fdivrp
jg
pop
push
add
arpl
add
ltr
out
mov
gs
push
sbb
adc
pop
pusha
pop
xor
jmp
jbe
push
pop
sahf
pop
mov
pop
sub
imul
sar
cmp
jecxz
dec
mov
or
loopne
push
push
addr16
std
lahf
xchg
push
push
lea
or
push
bound
push
aas
xor
mov
dec
std
sub
or
outs
jg
bound
and
push
push
loopne
mov
add
outs
mul
add
fild
lea
das
xor
bound
(bad)
(bad)
jb
xchg
inc
lods
add
add
mov
xchg
pop
xor
sbb
test
cmp
pop
pop
push
or
icebp
bound
add
add
and
and
add
adc
xor
mov
(bad)
sub
inc
aas
or
sub
xor
aam
dec
add
fist
bswap
cmc
pop
arpl
imul
add
(bad)
dec
popa
scas
mov
daa
maxps
add
idiv
arpl
dec
or
stc
or
dec
push
mov
daa
xchg
ds
clc
adc
push
mov
fisttp
(bad)
aas
es
inc
push
sbb
add
dec
add
sub
daa
push
pushf
jle
mov
jl
or
jle
loopne
fisttp
adc
xchg
loope
and
and
test
jmp
mov
out
lea
sub
cwde
sub
loop
jo
sub
gs
clc
data16
add
cdq
test
pop
(bad)
out
add
sub
ins
test
or
xchg
xor
inc
cdq
and
mov
inc
push
dec
dec
jne
nop
std
or
mov
and
sbb
dec
js
(bad)
arpl
or
mov
or
test
sub
pop
cs
add
and
mov
ret
or
or
sti
jns
xchg
or
pop
cld
dec
loop
adc
add
dec
das
jbe
adc
ret
adc
outs
and
pop
(bad)
(bad)
jnp
das
mov
ds
or
sbb
or
jno
pop
test
add
jbe
push
or
add
mov
call
add
pop
pop
or
cmp
or
pusha
dec
mov
adc
sub
adc
jbe
and
out
(bad)
loope
sub
or
test
pushf
js
cmp
cmp
mov
jge
addr16
std
jo
adc
dec
cmp
das
(bad)
fild
gs
xor
dec
or
es
mov
sbb
add
nop
jne
pop
cmp
sar
scas
xchg
push
mov
jno
dec
cld
scas
jge
loope
test
imul
adc
sti
mov
cmp
xor
adc
outs
es
or
loope
add
mov
test
push
add
popa
ds
loope
or
sbb
push
in
sub
push
sar
sub
pop
push
bound
data16
xchg
stos
(bad)
call
test
xchg
pop
aam
fisttp
or
or
or
fild
pop
retf
jp
dec
push
dec
std
push
adc
sub
push
or
sbb
aad
ins
fcos
or
lea
fwait
push
dec
and
push
mov
out
xor
adc
sbb
cdq
sbb
jl
mov
pop
pop
jmp
add
or
pop
xchg
mov
call
dec
sbb
xchg
mov
icebp
push
test
(bad)
and
clc
jg
cmp
dec
movs
add
adc
data16
in
call
jbe
sub
(bad)
jae
xchg
movs
mov
jmp
cld
rcr
std
and
and
or
mov
dec
pop
or
pop
add
out
aam
dec
push
or
xor
mov
mov
sbb
or
(bad)
jg
add
or
pop
push
push
sbb
mov
and
push
outs
or
add
adc
mov
shl
xor
frstor
cmp
adc
or
and
ins
sub
pop
inc
les
xor
or
icebp
sahf
xlat
loope
xor
mov
retf
inc
data16
pop
jne
add
es
mov
call
jle
cld
retf
mov
xchg
ins
or
not
push
ret
xor
dec
add
test
aas
inc
mov
add
push
das
gs
mov
(bad)
(bad)
in
test
cmp
inc
adc
or
add
xor
sub
nop
sub
or
dec
pusha
xor
addr16
mov
adc
adc
out
and
int
add
sub
add
dec
sub
dec
add
cdq
outs
xchg
test
and
jo
adc
jne
rol
add
fist
jo
xor
or
jo
fwait
add
jo
iret
pop
or
xchg
mov
add
fwait
add
xlat
cmc
dec
add
outs
add
inc
outs
add
mov
fabs
mov
xchg
dec
or
mov
gs
mov
das
mov
addr16
dec
adc
dec
add
adc
not
cmp
test
jbe
inc
add
or
push
add
shl
cmp
add
push
sub
cwde
ja
cmps
and
mov
push
push
popf
popa
add
sar
push
adc
enter
adc
mov
sbb
(bad)
int3
jo
fild
lds
jnp
or
lods
inc
out
cmp
jmp
leave
sub
xor
adc
sbb
xor
stc
jnp
(bad)
in
inc
mov
xor
wbinvd
loope
xor
dec
addr16
ret
add
jns
fidivr
mov
sti
ficomp
ret
jns
jo
and
test
fbld
out
xor
loope
not
jns
iret
punpcklwd
arpl
pop
sub
sub
(bad)
imul
les
leave
pop
adc
jo
dec
ins
add
pop
add
sbb
mov
and
sbb
pop
adc
cmp
lea
or
add
cmp
pop
jp
adc
inc
mov
jne
imul
sbb
mov
jg
xor
popa
xor
push
add
mov
(bad)
add
inc
adc
test
mov
retf
xchg
inc
cmp
inc
pop
mov
xchg
add
add
jp
jecxz
rcl
jno
cmp
jmp
inc
inc
arpl
pusha
mov
xchg
(bad)
loope
bound
inc
popa
mov
cmps
push
pop
popa
add
add
aaa
js
sub
test
add
daa
dec
cmp
or
or
arpl
mov
or
adc
xchg
adc
pop
cdq
jmp
iret
inc
jno
outs
push
aaa
mov
add
inc
adc
xchg
daa
add
cmc
sahf
and
xor
rol
ja
push
test
pop
mov
(bad)
imul
aaa
aad
push
or
sub
mov
(bad)
imul
scas
push
and
daa
popa
jae
cmp
dec
mov
fsubr
add
xlat
push
sub
loope
xchg
jnp
or
xor
aaa
xchg
daa
es
inc
push
jns
cmp
add
loop
cmp
leave
pop
adc
and
lds
and
in
les
test
pop
xchg
addr16
adc
xor
inc
in
lock
pop
xchg
outs
pop
dec
out
shl
or
jp
dec
ja
fwait
mov
cmp
push
ja
cmp
sub
add
adc
mov
dec
adc
jp
adc
adc
das
push
out
les
icebp
daa
ficomp
leave
xchg
sbb
fisubr
xchg
in
stos
xchg
add
mov
and
or
xchg
addr16
jo
pushf
push
pop
sbb
es
push
or
sahf
mov
jg
mov
pop
dec
outs
in
(bad)
jmp
mov
mov
jge
loopne
js
sbb
adc
mov
pop
sbb
sub
sbb
sub
movs
imul
shl
jo
aas
ja
js
(bad)
fwait
repz
sub
shr
es
popf
sar
push
sbb
push
imul
scas
ins
in
out
xchg
(bad)
sub
js
ret
(bad)
dec
imul
or
push
sub
mov
ror
xchg
cmc
xchg
fimul
aaa
and
inc
xor
dec
xchg
xor
push
pop
les
cmp
or
push
jne
pop
popa
xchg
add
adc
adc
jp
stos
aaa
lods
push
jbe
add
shl
sbb
outs
lds
adc
mov
cmp
inc
mov
gs
loope
dec
mov
pop
scas
push
daa
push
aas
loope
loop
imul
jmp
jmp
aaa
sub
sub
lds
pop
jmp
add
daa
pop
mov
ret
test
sub
dec
out
xor
xor
mov
push
sbb
lahf
mov
loope
cmp
add
push
int
dec
add
popa
test
in
ffreep
popa
(bad)
or
imul
popa
fsubr
stos
sub
inc
(bad)
jnp
stos
adc
in
test
cmp
push
xchg
and
cmps
jnp
scas
xor
shr
mov
add
pushf
dec
mov
add
jecxz
jecxz
fist
xor
or
push
sbb
(bad)
jnp
mov
popf
pop
dec
aad
sbb
arpl
mov
push
les
pop
fist
mov
dec
lds
push
inc
and
lahf
std
sbb
call
ss
adc
js
sti
cmp
dec
mov
ret
and
icebp
push
es
aaa
aas
dec
std
jp
cli
push
cmp
std
mov
xchg
adc
scas
ja
and
jbe
int
inc
es
add
addr16
or
popa
sbb
js
jge
gs
and
push
xchg
test
cmp
add
int
popf
ficom
mov
out
cdq
cmp
jge
push
pop
inc
pushf
int
dec
mov
adc
and
dec
add
sti
sub
loop
ja
inc
pusha
call
sub
jnp
mov
pop
dec
call
xor
imul
mov
loope
(bad)
xor
rol
call
add
inc
arpl
cmp
dec
jge
adc
add
loopne
inc
icebp
pop
loope
cmp
addr16
dec
(bad)
sbb
fwait
inc
jp
popa
xlat
sti
inc
jno
adc
cmp
mov
in
jnp
and
or
and
jnp
aad
ret
xor
xor
ins
aad
mov
sbb
pushf
retf
cdq
(bad)
or
add
xor
push
ss
(bad)
(bad)
dec
arpl
bound
xor
xor
xor
popa
cmp
fs
cmp
(bad)
sti
(bad)
(bad)
jmp
bound
xor
cmp
arpl
inc
or
add
or
pop
(bad)
out
(bad)
add
push
sbb
je
outs
data16
(bad)
(bad)
push
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
jmp
inc
push
js
in
popf
ins
ja
aad
(bad)
neg
dec
and
adc
dec
xchg
pop
mov
call
lds
mov
fist
fs
adc
add
ds
xchg
mov
mov
pop
lods
cs
(bad)
(bad)
jmp
inc
pop
imul
add
(bad)
aaa
cdq
cdq
cmp
xchg
(bad)
and
cdq
cmps
test
(bad)
(bad)
mov
popf
jne
push
es
stc
(bad)
fsubp
loope
add
(bad)
call
int
(bad)
cli
(bad)
lds
or
in
sub
push
aas
sub
popa
push
outs
mov
dec
(bad)
retf
mov
jns
xor
dec
mov
xchg
repz
mov
dec
push
(bad)
(bad)
(bad)
dec
shl
jns
xor
mov
xor
and
mov
in
xchg
inc
dec
cmp
(bad)
dec
push
call
push
fwait
jle
inc
inc
jbe
add
push
pusha
rol
aad
cs
repz
das
in
(bad)
(bad)
(bad)
call
or
cld
xchg
cmp
bound
mov
push
sub
(bad)
(bad)
jmp
sahf
pop
pop
mov
outs
std
pop
push
in
xchg
mov
mov
jae
(bad)
(bad)
jmp
dec
push
xor
clc
cmp
push
loop
jne
jne
es
sub
fstp
sub
mov
inc
outs
jmp
mov
lods
mov
scas
xor
adc
nop
inc
xchg
(bad)
(bad)
(bad)
jmp
dec
pop
lock
test
add
pop
push
add
aad
push
je
inc
adc
or
jo
popa
push
pop
addr16
rcr
jae
aad
lock
out
(bad)
(bad)
(bad)
call
xor
push
test
lahf
xor
pop
retf
test
pop
in
outs
(bad)
(bad)
(bad)
call
jmp
inc
stc
movs
dec
stc
mov
outs
inc
lds
pop
seta
ret
scas
xchg
jb
mov
cmp
int3
inc
push
mov
jo
jmp
pop
cmps
add
push
stos
fsubr
mov
xchg
(bad)
(bad)
inc
mov
aad
xchg
je
pop
xor
push
adc
outs
retf
sbb
pop
pop
add
mov
(bad)
(bad)
(bad)
call
pop
in
sub
mov
push
call
jecxz
lds
cld
xor
(bad)
push
ud0
(bad)
push
add
and
mov
mov
mov
(bad)
(bad)
call
pusha
jno
push
movhps
ja
jb
dec
add
xchg
fs
push
mov
(bad)
(bad)
in
mov
sub
aam
sbb
cmp
mov
je
shr
scas
cs
mov
mov
push
push
(bad)
(bad)
(bad)
jmp
cmps
loopne
stc
jmp
push
es
xor
pop
push
mov
test
ja
xor
(bad)
(bad)
inc
sar
stos
stc
cld
je
mov
sub
fsubr
ret
call
or
sub
mov
(bad)
(bad)
fiadd
pop
pop
sbb
(bad)
fstp
cmc
retf
popa
jnp
cmp
pop
pop
xchg
inc
rol
(bad)
(bad)
inc
ror
xchg
jmp
mov
aad
jl
mov
jp
push
xor
push
(bad)
xor
test
(bad)
(bad)
(bad)
jmp
pop
pop
mov
pop
(bad)
bound
and
adc
jo
pop
rol
imul
sub
call
data16
sti
push
xor
inc
jne
outs
push
push
loop
jbe
js
add
pop
add
(bad)
(bad)
(bad)
inc
push
xchg
ror
aad
mov
iret
scas
jecxz
xchg
dec
mov
jle
pop
push
test
xor
(bad)
(bad)
(bad)
jmp
(bad)
ss
leave
imul
sub
or
je
mov
(bad)
inc
adc
in
xor
jmp
(bad)
std
jge
jg
(bad)
lods
(bad)
fstp
data16
into
(bad)
(bad)
(bad)
jmp
pmullw
pusha
call
jbe
es
setle
pop
aaa
cmp
add
int3
pop
(bad)
(bad)
(bad)
jmp
adc
shl
mov
mov
push
sub
adc
mov
shr
(bad)
in
(bad)
or
std
mov
loop
cmp
in
jae
ins
pop
retf
push
sub
sahf
mov
inc
jecxz
test
(bad)
(bad)
push
jge
dec
dec
fucomi
jne
aaa
jmp
xor
aas
aas
xor
sbb
sbb
(bad)
(bad)
(bad)
call
retf
pop
cmc
cmc
sbb
addr16
aaa
cmp
push
enter
cs
(bad)
(bad)
jmp
movs
loope
jne
dec
jmp
inc
mov
add
jecxz
(bad)
(bad)
(bad)
push
xor
loopne
iret
mov
pop
mov
hlt
in
les
jno
jne
pop
mov
inc
mov
dec
sbb
enter
popf
mov
retf
pop
mov
mov
cld
in
out
(bad)
(bad)
(bad)
jmp
sbb
sbb
mov
js
adc
outs
xlat
cs
faddp
add
(bad)
(bad)
(bad)
inc
pop
pusha
pop
cmp
sub
xor
iret
pusha
retf
shr
clc
jp
(bad)
(bad)
(bad)
call
ins
movs
scas
addr16
add
sbb
jb
push
or
ret
pop
sbb
cmps
inc
inc
mov
(bad)
(bad)
(bad)
inc
or
jns
mov
daa
sbb
jnp
push
aaa
xchg
imul
bound
xchg
xchg
jns
dec
idiv
(bad)
(bad)
inc
(bad)
mov
mov
out
fidivr
and
stc
cmp
pop
sbb
push
or
(bad)
(bad)
push
sub
pop
push
mov
push
xlat
jmp
sti
(bad)
outs
fisttp
pop
stos
(bad)
(bad)
(bad)
dec
push
inc
inc
and
imul
mov
cmp
push
retf
(bad)
(bad)
(bad)
js
cwde
idiv
jbe
push
fwait
repz
hlt
rol
and
xchg
xchg
xchg
hlt
ins
add
(bad)
(bad)
(bad)
push
or
popa
xchg
movs
adc
push
adc
call
mov
pop
pop
pop
dec
(bad)
(bad)
(bad)
call
add
mov
ret
enter
sbb
imul
dec
mov
stos
xor
(bad)
(bad)
(bad)
mov
or
push
imul
test
(bad)
movs
retf
cmp
xchg
adc
dec
rcr
(bad)
dec
dec
jmp
gs
push
inc
xchg
retf
imul
aaa
dec
mov
(bad)
(bad)
inc
jmp
pop
mov
leave
mov
pop
sti
fst
dec
push
cmp
sub
js
jne
push
cmp
(bad)
(bad)
call
imul
lods
ins
nop
stos
push
ret
les
jmp
cmps
out
mov
jmp
sub
adc
and
mov
test
or
clc
sub
(bad)
(bad)
(bad)
jmp
push
pop
push
xchg
test
jge
mov
sbb
test
outs
xchg
sti
or
or
(bad)
(bad)
(bad)
inc
in
dec
(bad)
mov
rol
pop
push
sbb
push
es
xchg
mov
sub
test
dec
(bad)
(bad)
(bad)
call
mov
mov
cmc
cmps
fild
in
stos
sub
mov
cwde
sahf
inc
fwait
and
aaa
(bad)
(bad)
(bad)
(bad)
std
stos
stc
sbb
pop
add
add
lahf
mov
sub
not
movs
and
(bad)
(bad)
(bad)
push
cmp
outs
outs
(bad)
push
fidiv
bound
cmc
out
sub
cli
int
mov
(bad)
(bad)
jmp
push
push
gs
cli
icebp
(bad)
mov
retf
pop
mov
add
out
dec
sub
out
inc
ins
(bad)
(bad)
(bad)
call
push
xchg
popf
xchg
or
leave
shl
adc
or
sbb
(bad)
(bad)
(bad)
jl
repnz
cli
nop
fnsave
aas
test
push
test
sub
xor
stc
and
(bad)
(bad)
(bad)
jmp
pop
pop
xchg
cmp
dec
push
jne
inc
popa
mov
sbb
inc
xchg
sbb
in
jbe
(bad)
(bad)
dec
inc
jmp
push
test
(bad)
rcr
lea
mov
(bad)
scas
jmp
(bad)
push
in
sub
lods
mov
push
sub
xchg
scas
test
inc
fnsave
lods
out
adc
mov
cdq
inc
pop
movs
add
mov
inc
lahf
jp
dec
cdq
jnp
cmps
cdq
or
(bad)
(bad)
(bad)
(bad)
cmp
inc
cmp
xchg
in
sbb
sbb
push
or
mov
inc
dec
inc
(bad)
(bad)
(bad)
push
jmp
test
xchg
sti
lea
js
and
ins
mov
repnz
jo
mov
(bad)
(bad)
(bad)
push
fisttp
addr16
mov
adc
dec
push
icebp
out
inc
or
jmp
or
mov
(bad)
(bad)
(bad)
jmp
adc
xor
jbe
mov
ret
or
aaa
jp
jnp
inc
and
and
out
mov
(bad)
(bad)
jmp
xchg
js
icebp
stos
lods
cmp
in
xchg
inc
inc
es
(bad)
cmp
push
lods
cmp
lods
jne
or
(bad)
inc
ja
leave
out
and
xor
push
loopne
adc
ins
stos
neg
lods
(bad)
(bad)
(bad)
call
add
mul
dec
call
push
(bad)
rcr
jne
loopne
cli
(bad)
(bad)
(bad)
jmp
cmp
cmp
(bad)
mov
lds
mov
ss
push
mov
pop
xchg
mov
(bad)
push
add
cmp
aam
xor
and
xchg
dec
sbb
gs
cmp
pusha
outs
test
(bad)
(bad)
dec
adc
test
retf
xor
rol
and
dec
xchg
cs
(bad)
(bad)
(bad)
(bad)
push
jbe
xor
scas
in
or
lahf
mov
mov
outs
push
mov
jmp
call
call
jns
jnp
pop
icebp
jae
hlt
rol
pop
lds
push
xchg
js
and
(bad)
(bad)
(bad)
jmp
mov
outs
pusha
cmp
clc
add
push
loop
imul
in
push
and
(bad)
(bad)
(bad)
(bad)
jns
dec
xchg
jle
inc
or
test
popf
cmp
dec
js
loope
(bad)
and
(bad)
(bad)
dec
cmpxchg
mov
mov
dec
cld
sti
jnp
jne
mov
test
pop
cmc
mov
(bad)
call
mov
adc
push
iret
jle
mov
test
mov
icebp
mov
loopne
mov
(bad)
(bad)
(bad)
(bad)
mov
push
xchg
outs
loop
call
push
dec
mov
bound
mov
dec
mov
(bad)
jmp
mov
cli
mov
retf
mov
fild
pop
adc
cs
push
jns
(bad)
(bad)
(bad)
(bad)
mov
das
jno
ficomp
pop
pop
cwde
enter
inc
dec
inc
ins
lds
stc
in
(bad)
(bad)
(bad)
dec
lods
adc
jmp
in
cmp
test
in
dec
dec
lds
pop
dec
fmul
(bad)
(bad)
(bad)
jmp
jno
popf
inc
(bad)
out
push
inc
pusha
(bad)
jp
jmp
lahf
retf
pop
bound
adc
jg
inc
scas
test
(bad)
(bad)
(bad)
jmp
(bad)
adc
push
xor
add
hlt
adc
aam
cmp
std
retf
ret
(bad)
(bad)
fsub
imul
add
(bad)
shr
cs
call
sbb
xchg
aas
sti
(bad)
(bad)
(bad)
(bad)
fidiv
mov
add
mov
bswap
fnstenv
cmps
push
in
push
pop
(bad)
(bad)
(bad)
call
pop
jge
inc
jno
push
inc
ss
or
adc
and
sub
out
aas
out
in
(bad)
(bad)
dec
or
or
test
xchg
dec
mov
jo
mov
ds
(bad)
(bad)
(bad)
call
test
mov
sub
movs
std
jmp
add
pop
jmp
sahf
repz
(bad)
(bad)
call
mov
shr
jns
hlt
out
imul
into
and
ret
cmp
pop
pop
es
ret
pushf
mov
mov
jl
mov
xor
jns
xor
les
lock
lea
call
sub
mov
loope
add
or
mov
fmulp
int3
clc
mov
stmxcsr
(bad)
call
stos
jns
cs
jbe
std
sub
fcomip
sbb
push
jne
out
fadd
pop
(bad)
(bad)
(bad)
inc
inc
jge
mov
pop
cmc
cmp
adc
jnp
xchg
and
jg
scas
outs
(bad)
(bad)
(bad)
call
or
jle
aas
and
mov
ret
repz
rol
(bad)
retf
stos
add
in
(bad)
(bad)
(bad)
(bad)
cmp
mov
mov
mov
push
les
(bad)
mov
ins
sub
in
pop
das
add
jle
jmp
(bad)
aam
bnd
imul
(bad)
(bad)
(bad)
mov
aad
enter
sbb
jge
or
push
fld
stc
xor
hlt
and
jmp
pusha
lea
mov
push
cmp
xlat
mov
out
aas
pop
mov
mov
(bad)
(bad)
call
repnz
pusha
push
add
pusha
dec
dec
cmc
lods
sbb
lods
jno
push
inc
xlat
(bad)
(bad)
(bad)
inc
clc
jmp
cmp
pop
ja
dec
int3
mov
or
or
inc
fdivr
call
outs
dec
ret
arpl
aad
je
movs
mov
mov
sti
cmc
sbb
pop
mov
jnp
xor
push
(bad)
mov
inc
aas
cs
inc
ja
sub
fcomp
int3
mov
or
(bad)
(bad)
(bad)
cmp
pop
or
daa
xchg
xchg
mov
ror
pop
mov
gs
cli
fimul
call
inc
out
push
or
jne
pop
sub
sub
xchg
dec
icebp
cs
(bad)
(bad)
(bad)
jmp
jmp
lds
adc
add
pop
push
push
xchg
sbb
fs
push
add
scas
repz
(bad)
(bad)
mov
out
and
in
jp
jns
les
fcomp
jle
outs
(bad)
(bad)
(bad)
call
jns
mov
jae
imul
jmp
popa
stc
outs
nop
sti
ja
in
shr
mov
(bad)
(bad)
(bad)
call
jb
or
aam
or
mov
xchg
mov
mov
or
add
add
(bad)
(bad)
jmp
push
xchg
xor
pop
mov
in
call
mov
(bad)
(bad)
jg
xor
ror
add
or
pop
cmp
cs
cmp
pop
dec
ins
ja
(bad)
(bad)
(bad)
inc
jmp
jbe
adc
dec
(bad)
stc
out
mov
div
ds
pusha
fwait
push
sub
pop
pop
div
(bad)
(bad)
cmp
pop
mov
call
or
adc
jno
dec
add
call
jp
push
fstp
daa
retf
push
pop
cmps
retf
add
xchg
mov
aam
rol
(bad)
(bad)
jl
leave
lock
cld
test
sbb
mov
mov
add
int
aas
retf
daa
rol
into
mov
mov
inc
dec
inc
scas
inc
pusha
add
(bad)
jmp
sub
and
outs
jae
and
jb
gs
outs
je
popa
outs
and
mov
jae
outs
data16
jbe
and
jb
dec
jo
jb
or
(bad)
aas
fs
je
jo
or
gs
cmp
gs
xor
jae
loopne
jmp
arpl
gs
ins
jns
and
xchg
test
pushf
push
jl
sbb
idiv
jmp
ins
jne
imul
and
imul
jbe
jae
outs
outs
mov
and
aaa
scas
es
(bad)
outs
int3
pop
stos
ins
and
bound
inc
arpl
fdivr
jmp
jb
arpl
gs
gs
and
jne
fdiv
and
inc
and
xchg
outs
push
jg
arpl
popa
ins
and
popa
arpl
jg
jg
bound
imul
inc
push
jb
jb
cmp
(bad)
(bad)
jg
imul
xor
xor
and
ins
outs
sub
dec
outs
jb
popa
push
out
jg
jg
jns
popa
arpl
jo
popa
outs
inc
fs
imul
xchg
mov
push
ss
xchg
mov
and
jb
bound
jle
dec
mov
je
shl
bound
mov
adc
lods
add
and
jb
cmp
sti
ja
jae
sub
lods
imul
xor
gs
pop
jnp
or
pop
test
push
outs
lods
cmp
and
call
pusha
cmp
and
arpl
popa
bound
jg
pushf
or
jae
arpl
call
lock
je
shl
and
jne
adc
arpl
gs
fistp
ja
and
mov
jo
jae
nop
xchg
outs
fwait
std
mov
sahf
and
and
je
cmp
das
xor
ss
out
cs
jb
arpl
and
ss
fdiv
mov
ins
popa
imul
ja
ins
and
and
outs
cmp
ss
xchg
adc
and
or
or
cmp
or
dec
jo
pop
arpl
vmptrld
ins
gs
dec
xchg
mov
add
xor
jnp
int3
repnz
fs
std
out
(bad)
jmp
jae
popa
ins
ins
popa
in
jo
outs
arpl
loope
push
popa
ins
outs
and
shl
mov
xlat
rcr
sbb
mov
and
mov
jle
push
gs
into
fs
mov
fadd
aad
pop
jmp
xchg
je
addr16
and
cmp
and
sub
idiv
add
xor
inc
imul
push
xlat
fnsave
xor
or
and
mov
sub
popa
cld
jns
mov
je
cmps
ja
inc
jb
mov
mov
fs
fcos
pop
lds
outs
ja
ins
outs
popa
fs
das
push
ins
xchg
retf
pop
adc
gs
add
xor
outs
or
xchg
outs
fs
jb
aas
add
and
push
je
arpl
imul
fs
jae
arpl
sbb
sbb
ins
sti
jb
jae
outs
int3
mov
push
jnp
out
retf
jae
jo
ins
imul
inc
test
xor
and
and
dec
inc
imul
adc
ja
imul
and
sbb
jne
ins
out
xchg
sub
dec
test
outs
jne
push
sbb
push
int3
ins
imul
(bad)
jg
jne
bound
gs
je
jb
inc
data16
das
jae
adc
popa
jb
sar
ret
jg
sub
popa
jne
outs
in
arpl
jne
fs
ins
lock
shl
popa
ins
imul
rcr
bound
adc
data16
loope
adc
out
mov
or
xchg
loop
cdq
icebp
cmps
mov
fs
je
and
adc
(bad)
stos
jmp
and
mov
mov
sub
lea
out
xor
outs
sub
ret
sub
outs
outs
(bad)
and
pop
bound
ja
mov
outs
addr16
jb
xor
cs
and
fimul
addr16
fs
data16
popa
jbe
xor
xor
js
lds
retf
(bad)
or
xchg
arpl
sub
push
aaa
xor
scas
xor
xor
sbb
arpl
xchg
push
iret
jo
jbe
mov
cmps
jns
and
mov
stos
addr16
daa
popa
outs
jns
sub
test
outs
xor
mov
fidiv
stos
clc
cmp
adc
shl
loopne
fcomi
clc
mov
and
jae
gs
(bad)
xor
jl
jb
popa
arpl
cmp
pop
jo
jb
icebp
prefetcht2
fdivr
pop
and
jb
xlat
mov
cmp
popf
ins
popa
imul
fsub
jb
cmps
mov
stos
popa
ins
push
fxch
mov
outs
imul
ficomp
push
fisubr
adc
dec
mov
ret
cmp
mov
mov
xor
dec
ret
in
or
pop
xchg
data16
aaa
and
scas
outs
add
xchg
jnp
leave
lds
xchg
dec
sbb
mov
mov
sbb
gs
outs
outs
outs
arpl
jae
push
push
mov
push
cmps
jae
je
jae
bound
adc
js
enter
retf
mov
lds
pusha
call
ins
ins
push
add
xchg
and
sbb
call
sbb
adc
sbb
outs
cmp
or
sbb
xor
xchg
mov
jecxz
xor
jae
and
adc
(bad)
pop
cmp
jb
popa
outs
imul
or
and
jae
jb
inc
cmp
loope
pop
xchg
push
or
xor
frstor
jae
shl
xor
inc
js
dec
push
leave
jge
ins
outs
ja
aaa
and
push
std
cmp
sub
and
dec
xor
and
ds
imul
pop
and
mov
jae
test
xor
push
imul
imul
bound
pop
ror
push
icebp
nop
xchg
jo
imul
inc
sbb
sub
mov
and
imul
mov
arpl
and
push
and
jb
lea
std
adc
adc
add
jecxz
dec
mov
gs
bound
add
push
ret
jne
sbb
xlat
and
je
icebp
sbb
je
and
jb
push
out
nop
xor
outs
stos
dec
int3
shr
or
adc
(bad)
or
jbe
outs
je
outs
popa
outs
push
shl
scas
sbb
in
xchg
add
xchg
lock
mov
ja
shl
pop
sub
adc
cmp
test
mov
outs
shl
in
jl
cmps
test
ins
dec
xchg
or
or
cs
rcl
hlt
stc
push
jo
sbb
xchg
sbb
movs
or
addr16
sbb
sub
inc
rol
popa
popf
in
cmp
lea
popa
ja
icebp
js
jnp
imul
je
pop
ret
jns
popa
jns
cmp
shl
mov
cmp
xchg
or
leave
xor
sbb
jno
fs
bound
popa
sbb
jo
jo
(bad)
jb
gs
jb
inc
out
outs
mov
adc
mov
mov
mov
sbb
or
sub
mov
bound
leave
adc
fdiv
aam
mov
and
ins
and
push
ror
xchg
lahf
setge
dec
adc
cdq
jb
push
jge
popa
jbe
jb
outs
mov
js
movs
and
popa
jne
imul
sub
inc
sbb
jae
xor
adc
popa
in
mov
add
sub
dec
inc
stos
enter
or
jae
je
jo
inc
pusha
or
in
loope
sub
inc
sub
xchg
sub
mov
and
ins
mov
icebp
and
shr
pusha
sbb
or
call
jns
mov
mov
in
xor
(bad)
call
in
shl
and
nop
and
jae
xor
jbe
jae
out
fld
push
jl
or
xor
call
xor
or
into
(bad)
cmp
fistp
push
loope
clc
into
rcl
and
outs
fmul
lods
je
iret
out
or
shl
rcl
lock
sbb
mul
ins
jns
mov
push
inc
jb
sub
cmp
inc
outs
push
(bad)
pop
scas
in
sub
and
out
(bad)
imul
mov
mov
jne
cmp
sar
mov
or
jne
adc
xor
xor
sbb
xor
mov
clc
arpl
outs
adc
mov
mov
rol
jge
or
jb
fs
pop
mov
fs
(bad)
fcomip
out
and
arpl
jne
pop
jb
jno
imul
jo
outs
cmp
mov
aaa
jne
pusha
popf
add
dec
popf
push
jae
out
data16
dec
mov
int3
inc
test
jo
iret
inc
shl
mov
xchg
inc
xor
wrmsr
cmp
and
adc
dec
add
mov
ja
xchg
ss
jb
(bad)
inc
ja
(bad)
fadd
jne
push
xor
jb
lods
cmp
mov
adc
jbe
gs
imul
mov
inc
and
dec
dec
sbb
pop
jae
pop
jo
lock
jo
dec
ss
fs
cwde
loop
adc
push
or
mov
sbb
xor
adc
stos
gs
pop
and
ins
jo
inc
xor
call
div
test
(bad)
adc
ins
popa
das
xchg
or
sub
clc
xchg
outs
gs
ins
inc
inc
outs
jp
arpl
outs
outs
and
outs
xlat
rol
xor
ins
and
(bad)
pop
mov
cli
leave
fwait
loopne
add
loopne
pop
jg
ins
fmul
mov
jns
and
xchg
sbb
jl
dec
mov
loop
ja
shl
push
ret
sub
sbb
rcr
jb
fs
je
sub
dec
xor
pop
popa
mov
mov
push
pusha
mov
and
gs
ins
popa
dec
mov
call
aaa
jecxz
popa
je
mov
outs
push
and
adc
nop
popa
ins
and
ret
leave
cld
xchg
or
xchg
arpl
and
or
or
outs
mov
fs
(bad)
in
xor
imul
ins
gs
or
enter
jp
retf
dec
xlat
push
int3
inc
dec
add
lahf
jecxz
adc
add
sub
sub
xlat
ret
mov
jne
test
mov
jecxz
and
lods
pop
mov
(bad)
aas
push
push
push
push
imul
jne
cmp
popf
jg
jne
gs
adc
(bad)
cmp
into
je
xor
jne
fs
fwait
jo
dec
je
retf
popf
sub
ror
scas
jb
imul
jae
xchg
aad
(bad)
mov
jbe
adc
je
dec
imul
ins
inc
mov
dec
push
lods
push
xlat
cmps
and
outs
fs
shl
ins
dec
outs
fstp
adc
aaa
mov
jne
ins
js
and
outs
gs
push
jecxz
push
jae
gs
cmps
or
pop
or
cmp
cmps
aam
into
cdq
push
ret
sub
sub
daa
pushf
jnp
in
pop
jne
je
outs
adc
fcomp
or
arpl
jno
popa
add
lock
push
inc
xor
jb
cwde
or
dec
nop
mov
jbe
fwait
nop
dec
xor
push
fmul
jo
and
outs
or
adc
mov
gs
addr16
dec
out
xchg
xor
mov
shr
inc
lods
or
add
mov
and
aad
outs
jo
gs
lds
test
ja
add
pop
pop
adc
and
test
loopne
popf
loop
pop
xor
add
inc
arpl
sub
jp
(bad)
push
sub
aaa
outs
jo
test
dec
sti
test
inc
or
daa
stos
gs
rol
data16
and
ror
cmp
jae
or
xor
repnz
or
mov
jb
movs
pushf
retf
rol
mov
jb
and
pop
or
add
mov
push
push
inc
ret
jmp
mov
mov
or
ins
aaa
or
aaa
gs
xchg
loope
gs
popa
ins
cmp
pop
call
imul
push
arpl
gs
rcl
cmp
pop
jl
and
mov
mov
jno
pop
xchg
dec
inc
mov
xchg
outs
imul
cdq
popa
outs
cmps
fs
aaa
(bad)
outs
outs
mul
adc
fdiv
inc
or
inc
or
das
sub
sub
cs
daa
ins
cmc
inc
aas
clc
inc
push
jae
and
(bad)
sar
push
xchg
and
mov
fnstenv
je
jae
adc
push
xchg
add
ins
loope
adc
es
loope
je
icebp
pop
jb
cmc
sbb
xchg
scas
into
pop
fstp
ins
jae
mov
add
inc
outs
cs
mov
sbb
and
mov
jmp
and
sahf
push
ffreep
(bad)
gs
jae
and
gs
sar
popa
ins
jo
imul
retf
bound
or
mov
inc
loop
popa
jae
and
xchg
mov
sbb
and
sahf
sti
mov
adc
jnp
jno
outs
jne
out
les
enter
xor
psrld
mov
adc
enter
ins
cmp
outs
ins
test
xlat
push
adc
sub
push
sub
push
inc
dec
or
cmp
jb
sub
xchg
xor
(bad)
les
cwde
and
mov
pop
stos
aaa
and
xor
hlt
cmp
outs
arpl
loopne
cmp
daa
fs
(bad)
and
push
pop
xor
ret
outs
and
adc
xor
push
push
aaa
mov
jmp
and
and
gs
adc
fiadd
jne
arpl
(bad)
popa
shl
popa
ret
cwde
jb
jmp
ret
popf
dec
cmp
push
jo
xor
push
idiv
arpl
lods
or
jnp
add
push
das
cs
js
in
sbb
push
cmp
fneni(8087
jns
outs
jb
inc
or
mov
int
test
xlat
dec
popa
and
mov
aas
jg
jns
xchg
test
inc
mov
cmp
js
aam
rcr
(bad)
add
sbb
stos
xor
outs
ins
imul
out
cmp
sbb
xchg
mov
leave
or
cmp
xor
adc
das
lods
or
mov
imul
add
sub
mov
pushf
push
cwde
imul
ja
dec
stc
and
cmp
test
adc
xchg
pop
movs
and
inc
and
stos
jg
dec
push
sub
mov
je
adc
mov
xchg
es
ins
mov
call
outs
ins
ins
jns
sub
dec
dec
test
ret
sar
xor
jae
outs
lods
jbe
or
jmp
jo
ret
and
gs
jmp
pop
inc
sar
bound
mov
bound
jne
pop
es
ja
dec
pop
(bad)
imul
push
retf
imul
push
jo
jae
sub
mov
mov
add
mov
inc
mov
xchg
addr16
outs
outs
outs
jns
lahf
call
je
arpl
dec
adc
leave
push
cmps
call
jbe
jge
cmp
cmp
pop
arpl
ins
popf
pop
xor
add
and
xchg
push
and
dec
enter
adc
adc
xor
xor
mov
fsub
and
call
push
or
jg
aam
sub
cmc
and
or
test
cmps
inc
pusha
les
data16
inc
jle
sub
or
or
cmp
push
cmp
push
add
pop
pop
xchg
adc
sar
outs
ret
inc
popa
arpl
outs
outs
imul
outs
outs
addr16
pop
xor
push
mov
jae
pop
cmp
xor
and
leave
or
dec
push
std
test
jae
mov
bound
add
inc
sar
inc
lods
leave
cmc
fisttp
jb
outs
popa
ins
push
fdiv
and
(bad)
loopne
mov
scas
pop
ins
popa
outs
addr16
ins
add
ror
push
sahf
xchg
jne
dec
push
xor
mov
imul
add
push
mov
ins
fnstsw
js
or
fs
sbb
xlat
cs
push
jo
and
add
sub
fstp
cmp
cld
xor
jb
arpl
jbe
inc
adc
sbb
mov
ror
shl
xchg
and
ret
inc
add
and
xchg
adc
scas
and
jbe
sub
std
cmps
push
popa
ret
and
xchg
jae
jb
sbb
ret
sub
loope
adc
cdq
ror
pop
xor
ins
je
cmp
add
daa
ins
clc
xor
popa
adc
bound
xor
sub
bound
ror
mov
ret
int
and
jo
int
push
add
cmp
push
imul
cdq
or
gs
mov
gs
wrmsr
xor
retf
in
das
or
nop
xchg
pusha
and
push
cli
fs
ret
sbb
sahf
jge
shl
inc
pusha
call
shr
adc
add
jae
xor
pusha
cmps
dec
push
push
dec
stos
jp
cs
mov
push
fs
int3
add
xchg
rcl
popa
loop
daa
mov
popa
arpl
and
sbb
div
gs
and
xor
fdivr
xchg
je
sub
popa
mov
shl
aaa
sbb
outs
add
frstor
dec
cmp
gs
xchg
mov
jo
outs
jb
xchg
and
std
pop
imul
adc
add
int
in
xor
idiv
in
cs
scas
or
adc
jb
dec
outs
imul
data16
mov
xor
out
inc
cmp
lods
lahf
shr
adc
sub
and
fs
loopne
ins
int
dec
outs
fwait
xor
inc
mov
sbb
mov
cdq
and
ss
enter
jmp
mov
lea
jb
jbe
xchg
pop
(bad)
ja
dec
and
cmp
ss
inc
mov
fisubr
stos
dec
adc
jae
arpl
adc
les
add
and
xor
cmp
cmp
or
sbb
sub
test
xchg
xlat
push
xor
and
cmp
into
xchg
mov
retf
ret
scas
push
cld
sahf
dec
je
fcomp
xor
push
sbb
imul
lahf
and
mov
push
icebp
and
xchg
and
je
outs
fs
fiadd
xor
mov
and
es
or
aaa
movs
inc
outs
add
dec
jge
(bad)
js
fcomi
imul
fs
jbe
ja
mov
jbe
jae
adc
add
xchg
and
and
ins
imul
sub
or
sub
inc
mov
ja
je
arpl
jne
jecxz
xchg
jecxz
and
inc
test
and
imul
fcmovnbe
test
sub
jne
cmp
dec
test
pop
idiv
cmc
xchg
cmp
xchg
loope
outs
popa
ins
data16
inc
cmp
add
inc
nop
lock
cli
and
aad
push
pop
push
pop
icebp
mov
xor
rol
pop
sub
movs
(bad)
imul
mov
dec
dec
and
cdq
add
aad
jno
sbb
je
cmp
shl
xor
jns
cmp
pop
xor
sbb
sub
push
out
enter
adc
in
sbb
outs
(bad)
pop
loopne
(bad)
mov
pop
aam
and
jle
aad
push
xor
or
sbb
jmp
(bad)
aam
pop
jb
add
add
neg
jb
or
mov
mov
push
adc
adc
dec
mov
leave
inc
lahf
adc
or
je
inc
test
jge
outs
pop
xchg
ret
jle
sub
and
lds
dec
ins
mov
sbb
clc
mov
cwde
and
and
jne
ret
xor
ins
dec
(bad)
jno
jb
popa
jb
jb
out
adc
cmp
xchg
push
jae
cmp
cmps
xor
faddp
shl
jo
je
add
or
loopne
cmp
ins
gs
out
jmp
cmp
pop
jae
sub
mov
inc
rol
fwait
cmc
pop
punpckhbw
or
or
(bad)
jb
or
adc
mov
rcr
pop
cmp
sbb
sub
and
push
ret
and
mov
popf
sub
fisttp
outs
outs
sub
es
push
sub
sub
xchg
sub
ins
jo
hlt
in
jns
out
push
jl
popa
popa
(bad)
mov
or
add
mov
sbb
pop
cmp
xor
cmc
sub
and
out
gs
imul
cmp
or
adc
or
xor
adc
fwait
or
and
retf
cmp
gs
arpl
sbb
cmp
push
pop
mov
lds
inc
sbb
jge
dec
jae
xor
xor
and
fnsave
ss
aaa
sub
push
cmp
xor
add
sbb
test
iret
ds
xor
mov
ficom
or
cmp
stos
ins
popa
imul
outs
data16
jb
je
sti
(bad)
jmp
dec
inc
and
inc
push
push
inc
push
inc
and
inc
and
push
push
dec
inc
inc
push
and
sti
aas
(bad)
push
dec
push
dec
inc
inc
inc
adc
sbb
inc
dec
dec
and
push
inc
dec
push
dec
sub
inc
dec
dec
inc
in
(bad)
dec
dec
dec
dec
push
sub
inc
pop
push
push
inc
push
or
push
dec
dec
inc
inc
sub
(bad)
(bad)
(bad)
jg
push
inc
push
push
push
dec
push
pop
sub
dec
dec
inc
dec
push
inc
dec
dec
inc
and
push
dec
dec
push
push
and
jbe
dec
dec
dec
pop
aas
and
fs
inc
dec
inc
and
dec
inc
sub
dec
dec
dec
sub
aas
inc
fdivrp
out
dec
dec
push
sub
dec
inc
push
inc
dec
mov
dec
dec
dec
push
pusha
inc
dec
push
dec
std
(bad)
(bad)
out
and
inc
and
push
push
dec
inc
push
dec
inc
push
and
push
push
dec
push
inc
and
push
push
dec
inc
inc
inc
push
push
inc
inc
pop
adc
scas
inc
push
mov
(bad)
mov
push
inc
push
dec
push
inc
inc
inc
mov
push
push
inc
pop
mov
push
push
dec
inc
push
and
dec
dec
pop
jle
dec
pop
ret
mov
scas
push
and
ja
fisubr
dec
push
scas
and
and
jp
push
inc
jg
jg
push
arpl
jnp
inc
push
sub
push
push
fwait
inc
and
std
mov
sub
push
push
inc
inc
lods
sti
push
inc
inc
or
pmaxsw
push
and
dec
daa
mov
push
clc
jg
inc
inc
dec
inc
dec
dec
inc
inc
inc
dec
dec
inc
and
push
dec
push
inc
dec
inc
popa
ret
xchg
and
push
and
mov
inc
pop
mov
and
jp
pop
adc
dec
xor
inc
stos
push
and
pop
in
(bad)
mov
pop
push
push
dec
pop
and
inc
push
and
jne
dec
dec
push
push
xor
push
add
and
leave
jo
jle
jge
dec
pusha
jae
call
daa
dec
dec
dec
push
inc
push
push
push
push
push
xchg
or
ret
inc
push
inc
or
rcl
hlt
sbb
inc
dec
dec
sbb
dec
push
cmc
push
xchg
lock
mov
pop
and
sbb
das
inc
push
dec
inc
inc
fiadd
and
xor
popa
xor
inc
inc
push
cmp
inc
inc
push
inc
pop
inc
inc
push
push
inc
inc
dec
(bad)
outs
cld
and
fiadd
push
dec
push
dec
inc
sub
nop
and
mov
push
iret
and
inc
dec
xchg
ret
popf
ficom
dec
and
push
sbb
sbb
cmp
dec
fs
nop
mov
lock
inc
push
push
xchg
lea
rol
sbb
or
push
push
inc
push
aas
icebp
or
or
push
out
jnp
xor
loopne
and
dec
imul
cmps
aad
or
inc
dec
dec
and
mov
mov
dec
dec
and
dec
xchg
leave
dec
cli
dec
inc
inc
dec
inc
jo
loope
outs
js
js
push
inc
dec
cmp
or
(bad)
adc
push
lods
dec
xor
inc
inc
push
and
call
mov
xchg
fistp
and
inc
xor
and
dec
cmps
push
ins
jmp
dec
dec
push
pop
push
inc
or
xchg
retf
adc
jge
jg
dec
dec
dec
inc
sub
push
inc
dec
xor
ja
xlat
or
push
sub
push
pop
fwait
cmp
dec
inc
cs
dec
movs
dec
push
xor
xchg
jne
jbe
push
movs
dec
inc
inc
dec
dec
in
call
inc
sub
push
push
xchg
and
(bad)
shl
scas
(bad)
xlat
jl
shl
and
dec
scas
jg
dec
push
sti
stos
inc
and
push
dec
in
sub
cmp
dec
gs
movs
pop
out
and
and
dec
clc
push
dec
mov
pop
cmp
jb
xchg
adc
test
je
push
inc
dec
inc
ins
retf
push
sbb
aas
mov
aad
inc
mov
dec
push
dec
push
add
xor
push
dec
inc
pusha
sbb
xchg
icebp
pop
sub
pop
es
mov
jmp
dec
push
gs
inc
das
sbb
vrcpps
sub
xor
dec
dec
inc
mov
shr
mov
jbe
push
push
dec
mov
pusha
add
shl
push
xchg
jp
sbb
pop
cwde
in
add
dec
mov
retf
sbb
cmp
and
jp
dec
push
pop
and
sub
fiadd
pop
adc
popf
cmp
adc
or
add
dec
dec
push
shl
int3
xor
xchg
mov
pop
pop
out
aam
adc
inc
jmp
stos
add
dec
and
dec
or
popa
pusha
adc
ret
mov
adc
popf
cmc
ret
test
call
adc
ins
and
adc
mov
push
add
inc
stos
xor
and
adc
pop
div
xor
dec
add
(bad)
outs
je
jae
or
ins
rcl
pop
push
retf
fistp
mov
mov
inc
sbb
sbb
mov
mov
outs
pop
fnstcw
add
pop
mov
mov
jb
and
arpl
jo
pop
jno
gs
shr
and
mov
jb
cmp
inc
push
push
push
cmp
dec
retf
jae
mul
adc
xchg
jmp
push
aam
rcl
test
and
mul
loop
scas
loope
jb
xor
fidivr
int3
aad
add
cmps
sbb
add
push
sti
bound
sub
jne
jae
shl
or
push
aam
push
outs
daa
fstp
ja
jnp
pusha
adc
jb
add
les
(bad)
rol
popa
or
xchg
adc
add
(bad)
sub
mov
outs
je
sub
xor
and
cmp
daa
inc
jae
jae
adc
out
jmp
add
fmul
mov
sub
jle
mov
inc
arpl
outs
fs
inc
adc
test
sbb
and
pop
shr
jne
out
bound
fldenv
adc
pop
mov
push
call
pop
pusha
adc
add
and
leave
sub
sbb
inc
jo
bound
add
pushf
inc
pop
sbb
sub
ret
add
add
out
or
je
jb
popa
je
outs
gs
jbe
outs
ins
dec
outs
outs
rcl
call
dec
or
and
fidiv
or
mov
xchg
jae
imul
and
jb
sbb
popa
push
fisttp
retf
outs
push
imul
mov
inc
ins
outs
outs
gs
jns
fs
imul
mov
ja
jne
xchg
gs
and
popa
fs
cmps
mov
icebp
push
xor
fs
int
cmp
jnp
jo
pop
retf
es
jns
jns
add
adc
lods
loopne
or
fcomp
retf
pushf
cld
xor
arpl
sbb
je
addr16
jo
and
outs
outs
popa
mov
call
push
jo
cmp
sub
jb
mov
adc
push
xchg
imul
pop
dec
mov
and
ins
jo
jns
mov
push
xor
mov
addr16
inc
jb
test
jb
and
cmp
imul
and
add
add
pop
push
dec
sub
adc
mov
fnsave
jl
mov
outs
jne
stos
push
imul
or
aaa
adc
int3
pusha
loop
xor
rol
add
mov
cmp
imul
sahf
push
icebp
aas
pushw
popf
test
mov
cmp
ret
aam
mov
loope
adc
ret
ja
cwde
and
loope
adc
ds
and
or
jne
je
jns
push
outs
imul
and
outs
jbe
in
mov
adc
je
adc
xchg
loop
mov
gs
popa
ins
and
ins
gs
and
std
imul
js
sar
sub
je
and
and
aam
xchg
jb
outs
lock
imul
cs
or
js
xor
ins
jne
iret
stc
add
push
pop
in
je
cli
lahf
je
or
je
mov
jb
ins
gs
arpl
jge
push
cmp
jae
loope
outs
scas
jmp
imul
sub
and
jne
(bad)
cmp
out
sub
add
adc
sbb
jns
inc
cmps
fs
adc
push
imul
gs
ins
imul
popa
mov
sub
outs
je
push
ss
bound
imul
imul
cmp
jne
gs
gs
sti
jb
outs
pop
push
or
int3
pop
cmp
je
inc
dec
jae
cmp
adc
sub
div
xor
mov
test
jbe
popa
jae
push
xchg
jecxz
bound
inc
popf
ret
sbb
and
and
xchg
icebp
and
sub
jo
push
in
jle
ja
loope
jno
add
(bad)
adc
jb
gs
mov
cmp
imul
push
xor
std
leave
mov
jno
outs
jne
movs
jbe
imul
gs
aas
cld
jbe
shr
mov
and
inc
call
outs
imul
xchg
dec
ds
jo
shl
repz
es
jo
pop
je
out
adc
xchg
adc
fisttp
xor
push
or
lock
outs
fs
je
cmp
cmps
push
and
pop
adc
gs
cli
dec
jno
pop
fs
jb
ins
outs
bound
retf
hlt
ja
jmp
push
ret
adc
sub
sub
repz
adc
push
fisttp
in
lods
and
sub
fmul
(bad)
and
out
int
and
pop
push
pop
aas
inc
jmp
or
and
xor
fdivrp
jmp
pop
gs
jae
fs
jo
imul
cmp
and
cdq
mov
and
gs
mov
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
xor
sub
cmp
(bad)
(bad)
sti
xor
xor
xor
cmp
cmp
xor
xor
cmp
es
into
xor
xor
and
pop
(bad)
retf
inc
pusha
pop
xor
inc
adc
inc
shr
jmp
jge
and
sub
sbb
bound
ret
sbb
mov
push
iret
jo
inc
outs
maxps
pop
cs
dec
sub
mov
or
fistp
pop
jo
je
pop
inc
dec
test
das
push
jnp
inc
mov
std
popa
ins
push
je
ins
jge
sub
add
outs
imul
cmp
xchg
or
gs
dec
(bad)
std
mov
pop
fisubr
test
pop
bound
std
jg
mov
push
jb
fs
je
popf
or
fs
pop
fisttp
jecxz
imul
(bad)
pop
int3
shl
jo
pop
add
mov
sar
outs
jo
jae
popa
arpl
jl
sti
inc
and
cmp
popaw
ins
jae
push
jae
outs
ja
jae
ret
pop
mov
fcomp
xchg
push
addr16
out
jae
xchg
dec
jmp
gs
gs
push
cs
je
jae
es
sbb
and
je
jne
cmps
ja
and
test
aas
arpl
xchg
xor
push
and
xor
ins
xlat
jmp
outs
je
outs
jo
add
cld
popa
jno
gs
adc
js
leave
mov
dec
dec
fbstp
into
inc
std
or
ins
pop
push
test
ja
fs
sbb
cmp
xchg
add
in
outs
and
and
adc
cs
mov
mov
lds
sbb
mov
call
retf
and
add
mov
adc
imul
frstor
addr16
aas
fs
jae
jae
push
sbb
sbb
aas
sbb
jb
les
jmp
cmp
mov
das
cmp
leave
sahf
data16
popa
jae
pop
jo
popa
jo
pop
sbb
sbb
cmp
in
sar
ins
jne
imul
arpl
and
das
js
inc
arpl
popa
jbe
sub
adc
je
jo
cmp
ret
push
and
and
xchg
xor
add
xchg
or
xchg
mov
dec
aaa
add
aas
adc
adc
mov
popa
and
int3
shl
inc
dec
rol
ins
and
xor
lar
xchg
inc
cmp
add
push
test
jo
sub
and
push
data16
bound
pop
mov
pusha
push
push
xor
pop
cmp
jae
xchg
jae
xor
jecxz
adc
jae
jne
(bad)
js
sub
addr16
push
leave
jbe
ja
jb
xor
inc
gs
das
jb
jb
sbb
div
jns
lods
jne
push
ins
ins
data16
pop
cwde
sbb
fstp
leave
leavew
inc
sub
and
inc
sub
daa
das
add
das
das
icebp
jne
addr16
ins
imul
mov
outs
mov
sub
popa
addr16
rcl
mov
sbb
jbe
bound
test
bound
mov
sub
es
ja
ins
ja
pop
addr16
je
ins
jmp
mov
jbe
push
ins
popa
bound
cmp
mul
gs
or
mov
(bad)
call
arpl
mov
or
add
or
add
stos
sbb
retf
dec
add
pop
push
loopne
mov
std
mov
or
jp
add
dec
add
jg
mov
sbb
add
mov
mov
call
inc
or
add
fwait
add
add
jne
sbb
(bad)
jmp
cmp
add
add
add
pop
push
add
shr
sti
inc
add
inc
dec
dec
add
add
add
inc
add
arpl
sbb
outs
add
push
xchg
stos
sub
add
add
leave
sub
and
pop
mov
or
cmp
sbb
jno
inc
adc
add
and
add
push
in
retf
imul
inc
add
xor
daa
add
push
and
xor
sar
mov
jno
mov
daa
scas
or
cs
(bad)
jbe
sets
add
add
add
adc
jmp
adc
add
jae
or
add
cmp
inc
das
cmc
data16
adc
pop
call
fist
jmp
sbb
shl
and
pop
add
sub
add
stos
enter
sub
jne
dec
popa
pop
adc
cmp
jl
mov
add
add
add
push
inc
push
sbb
shr
and
outs
add
sub
add
add
mov
add
add
add
add
sub
or
imul
push
mov
add
add
ss
adc
or
push
or
xchg
add
sbb
out
cmp
ret
xor
push
inc
push
sbb
pop
inc
aad
movhps
add
push
adc
add
jge
inc
or
add
add
dec
(bad)
inc
add
inc
or
jb
mov
add
jmp
mov
leave
and
push
sub
repnz
sbb
adc
sbb
mov
mov
ins
inc
add
lea
cmps
dec
mov
push
(bad)
fs
rol
mov
ja
sub
ror
xchg
jge
test
or
add
add
in
mov
call
inc
add
add
add
add
and
push
inc
xor
mov
mov
fnsave
mov
mov
int
add
jp
sub
pop
out
jae
aas
mov
rol
mov
leave
icebp
add
lahf
addr16
outs
das
lea
(bad)
xchg
sub
pop
cmps
or
add
mov
(bad)
mov
add
das
sbb
and
pusha
lods
test
mov
cmp
in
(bad)
sbb
add
inc
inc
cwde
cmp
jae
in
pusha
jbe
jge
inc
xor
and
adc
cmp
cmp
adc
cdq
jne
inc
in
or
(bad)
add
(bad)
std
add
or
adc
mov
and
add
add
or
add
add
jne
ja
and
call
add
and
add
add
add
add
test
addr16
bound
add
xor
push
or
cwde
stos
mov
enter
test
xor
push
xchg
inc
push
cmp
addr16
rol
push
add
push
ror
add
add
add
cs
stc
add
sti
inc
add
adc
lods
jmp
add
(bad)
sub
push
mov
or
inc
retf
inc
cmp
call
xor
cmp
jmp
into
inc
pop
outs
inc
xor
mov
xor
loope
fld
mov
pusha
add
cmc
mov
jno
mov
adc
add
xor
xor
add
scas
xchg
jbe
shl
sub
push
fmul
cwde
adc
jbe
ds
adc
loope
add
add
inc
add
sbb
add
sub
adc
dec
inc
cmp
call
add
adc
sbb
mov
inc
cli
stc
jne
dec
add
or
out
sbb
or
frstor
dec
shl
pop
add
mov
inc
mov
daa
dec
jmp
ins
xor
add
add
add
adc
or
arpl
add
mov
sbb
or
xor
or
or
push
test
or
mov
mov
inc
jno
mov
or
jae
inc
inc
add
repz
(bad)
call
jge
push
gs
ret
jo
sub
loop
sbb
push
jle
(bad)
(bad)
jmp
inc
or
xlat
(bad)
cld
push
cmp
imul
xchg
imul
or
inc
fwait
xchg
sbb
push
cmps
xchg
push
xchg
hlt
fiadd
loopne
je
jle
repz
(bad)
(bad)
inc
loope
jnp
cmp
mov
jns
iret
repz
jge
imul
sbb
(bad)
(bad)
(bad)
cmp
xchg
mov
mov
setb
mov
adc
mov
push
mov
call
cmp
mov
mov
stos
push
iret
pushf
cmp
mov
(bad)
in
hlt
hlt
hlt
pop
leave
leave
leave
push
fwait
int
(bad)
(bad)
call
mov
shl
or
fistp
addr16
xor
(bad)
(bad)
jg
sahf
cmp
sti
in
fnstenv
es
sbb
xor
int3
add
xchg
push
jecxz
cmp
(bad)
in
fcom
cwde
xchg
xchg
test
dec
add
add
cmp
jle
outs
outs
mov
(bad)
call
mov
je
mov
xchg
fwait
aaa
outs
jle
sti
imul
das
adc
call
test
mov
mov
mov
mov
(bad)
push
cmp
daa
xlat
arpl
(bad)
(bad)
dec
shl
mov
jmp
xchg
enter
fucomp
inc
pop
pop
(bad)
(bad)
(bad)
push
push
sbb
and
leave
mov
shl
pop
lea
test
rol
(bad)
(bad)
inc
mov
imul
das
mov
lods
xchg
xchg
xchg
jns
dec
sahf
pop
dec
arpl
(bad)
(bad)
(bad)
inc
lds
in
add
imul
cmp
cmp
clc
pop
leave
ret
ss
jmp
sahf
movs
adc
xchg
xchg
push
ss
push
cmp
and
sbb
fnstsw
(bad)
(bad)
(bad)
jmp
xchg
mov
and
and
ret
ja
in
fistp
test
jge
(bad)
(bad)
inc
mov
or
mov
mov
test
adc
or
retf
mov
(bad)
(bad)
(bad)
call
cmp
rcl
aam
(bad)
imul
pop
and
lods
movs
es
xchg
add
(bad)
(bad)
sub
les
int3
mov
idiv
xchg
jmp
(bad)
(bad)
(bad)
call
and
mov
or
aas
adc
inc
pop
jb
sub
test
arpl
fadd
ds
scas
pop
mov
(bad)
(bad)
(bad)
jmp
imul
fld
pop
or
js
mov
add
ret
push
push
(bad)
(bad)
(bad)
push
ds
(bad)
aam
dec
mov
inc
pop
data16
aad
inc
xor
test
xchg
sahf
(bad)
(bad)
(bad)
(bad)
ds
pop
ins
repnz
sahf
xor
fwait
push
out
retf
imul
jmp
xor
in
(bad)
(bad)
push
test
adc
jmp
aad
and
mov
mov
jmp
mov
cmp
(bad)
inc
push
mov
loop
push
or
daa
idiv
pop
out
shl
pop
dec
inc
ins
add
push
push
(bad)
(bad)
(bad)
jmp
movs
cs
dec
mov
test
imul
lahf
xchg
or
fnstcw
cmp
mov
inc
adc
sub
into
xchg
inc
dec
push
dec
ds
push
inc
jae
push
cld
ds
fcomp
pop
shr
(bad)
jmp
js
and
jl
aas
sub
cdq
cmp
aad
push
icebp
(bad)
retf
mov
scas
jne
stos
stc
sub
(bad)
(bad)
jmp
aam
sbb
add
inc
mov
dec
or
xor
xor
ins
(bad)
(bad)
(bad)
(bad)
jg
mov
mov
(bad)
cli
jecxz
js
add
loopne
sahf
loopne
adc
neg
aaa
add
mov
(bad)
call
mov
mov
test
or
dec
stos
jno
sbb
loopne
add
loopne
ja
inc
lods
test
(bad)
(bad)
(bad)
(bad)
fist
int3
fdivr
and
push
(bad)
fdivr
lahf
aam
mov
jbe
xchg
sbb
adc
fcmovnbe
data16
neg
lods
sub
ret
sbb
pop
mul
sahf
ds
(bad)
(bad)
(bad)
(bad)
ds
push
adc
adc
cdq
xor
call
fs
inc
cmovae
aaa
(bad)
(bad)
(bad)
dec
stc
(bad)
lock
fwait
(bad)
push
aas
pop
ja
sub
test
or
les
test
(bad)
(bad)
push
add
sbb
sub
mov
inc
jecxz
test
add
push
jp
inc
or
(bad)
(bad)
jmp
ror
inc
mov
jg
add
or
xor
(bad)
(bad)
call
or
pop
les
or
or
or
jle
loopne
adc
mov
repnz
(bad)
(bad)
(bad)
call
cmp
ret
sub
xchg
add
out
xor
rcr
test
mov
loop
inc
ds
adc
(bad)
(bad)
(bad)
call
movs
arpl
scas
pushf
push
pusha
push
pusha
jne
das
sar
add
sub
jmp
sub
int
push
(bad)
fisub
sbb
ins
push
sbb
pusha
loopne
(bad)
(bad)
push
mul
loopne
pop
pop
add
mov
cdq
popa
sub
call
arpl
(bad)
(bad)
jmp
push
inc
jns
lock
pop
mov
out
inc
xor
fstp
(bad)
fdivr
sub
jecxz
retf
(bad)
jmp
mov
test
push
outs
or
add
bound
sbb
inc
(bad)
(bad)
(bad)
(bad)
(bad)
jl
add
xchg
xor
clts
or
adc
cmp
sbb
or
pop
int3
and
clts
mov
(bad)
(bad)
(bad)
fucomi
pop
push
outs
pop
shl
daa
add
mov
into
pop
push
pop
mov
(bad)
retf
aad
aad
addr16
sbb
(bad)
(bad)
(bad)
jns
outs
icebp
pusha
mov
sub
fsubr
daa
arpl
pop
dec
repnz
fucomi
retf
(bad)
(bad)
(bad)
mov
fcomi
sub
pusha
sub
retf
push
push
fs
push
ins
mov
(bad)
(bad)
(bad)
push
cs
test
or
in
sbb
cmp
add
enter
and
jge
ret
(bad)
(bad)
(bad)
(bad)
jmp
out
loope
adc
jns
xchg
pusha
cmp
enter
xchg
and
mov
shl
(bad)
(bad)
(bad)
call
enter
mov
mov
inc
mov
xor
pop
fisttp
(bad)
(bad)
dec
icebp
cmp
or
aam
xchg
xchg
ss
or
cmc
leave
sub
(bad)
(bad)
(bad)
(bad)
jmp
xor
daa
adc
sub
cmp
jae
stc
dec
(bad)
sti
push
jmp
loopne
fs
mov
ds
rol
repz
(bad)
(bad)
(bad)
dec
mov
push
xor
or
pop
push
dec
push
rcr
mov
sbb
xlat
test
or
(bad)
(bad)
dec
sbb
push
retf
jmp
lea
or
push
aam
ja
add
leave
add
(bad)
(bad)
jmp
cmp
(bad)
mov
icebp
mov
cwde
xchg
mov
out
ret
clc
mov
cmp
(bad)
(bad)
dec
aaa
xchg
sub
mov
int
sub
mov
dec
xlat
test
outs
or
(bad)
(bad)
jg
call
popa
sbb
mov
enter
and
movs
arpl
add
rcl
(bad)
(bad)
(bad)
(bad)
mov
mov
test
jb
xchg
add
test
fisub
das
cmp
loop
push
jl
and
(bad)
(bad)
jmp
and
dec
push
xchg
test
jge
sub
dec
lahf
adc
call
(bad)
(bad)
inc
mov
dec
push
ja
out
jge
mov
jmp
xor
out
(bad)
(bad)
(bad)
push
loopne
fild
pop
or
jl
shl
mov
out
and
sub
jecxz
rcl
(bad)
(bad)
(bad)
jmp
jecxz
mov
lods
add
call
mov
icebp
int
aaa
adc
(bad)
(bad)
(bad)
inc
push
nop
jl
pop
dec
xchg
sub
push
inc
xor
enter
(bad)
inc
dec
dec
outs
in
push
jnp
pop
ds
lds
cmp
mov
mov
std
stos
(bad)
(bad)
(bad)
jmp
cmp
shr
and
mov
shl
rcl
(bad)
dec
ror
clc
sti
sbb
mov
lds
popa
sbb
dec
(bad)
(bad)
(bad)
jmp
sub
leave
xchg
ss
adc
or
mov
daa
add
mov
ins
jmp
(bad)
(bad)
dec
aas
lods
ret
nop
push
icebp
mov
mov
add
mov
inc
mov
adc
out
aad
(bad)
(bad)
(bad)
inc
mov
jecxz
imul
sbb
and
(bad)
mov
or
lock
inc
mov
cmp
push
or
(bad)
fdivr
loopne
adc
dec
inc
add
add
mov
add
fild
test
add
add
push
or
arpl
ja
or
push
push
or
or
or
adc
adc
movups
push
or
adc
adc
sbb
sbb
sub
add
jg
pop
add
pop
pop
popf
sbb
adc
sbb
(bad)
dec
sub
inc
add
or
xchg
add
add
adc
add
add
adc
inc
add
add
add
add
add
add
fiadd
or
add
std
(bad)
(bad)
jmp
add
into
stc
lahf
xchg
repz
fdiv
push
push
jno
jns
inc
sahf
jp
pusha
out
jg
(bad)
(bad)
(bad)
cmp
cmp
lahf
icebp
mov
mov
mov
mov
adc
mov
int
fxch
mul
das
lea
aas
iret
leave
call
mov
jg
(bad)
jp
iret
sbb
out
push
and
push
or
rol
(bad)
mov
enter
call
mov
in
jo
adc
xor
jo
out
(bad)
(bad)
(bad)
stc
jno
int
jp
mov
retf
std
cmp
push
fnstsw
jl
and
lea
retf
idiv
(bad)
jmp
jns
repz
ins
mov
out
sti
mov
or
mov
pop
imul
(bad)
aas
test
mov
int3
(bad)
jge
push
fwait
xor
int
jno
mov
jp
cmp
(bad)
jne
push
cld
into
(bad)
xor
push
dec
int
sbb
push
pop
je
sahf
call
sbb
scas
xchg
inc
out
pop
fld
jl
cmp
fchs
add
push
jb
stos
stc
lahf
das
(bad)
lahf
jno
iret
xchg
(bad)
(bad)
(bad)
jl
scas
xor
stos
mov
int
stos
(bad)
jecxz
cmp
rcr
in
mov
(bad)
(bad)
(bad)
call
sub
inc
call
aaa
retf
fwait
ins
dec
push
test
out
pop
(bad)
(bad)
push
jecxz
shl
stc
jge
jns
xchg
mov
inc
sub
push
jl
lahf
das
(bad)
(bad)
(bad)
jmp
iret
rcl
cmp
cli
rol
add
xchg
out
jb
pop
ret
xchg
dec
jb
aad
outs
stos
(bad)
(bad)
push
iret
retf
repz
xor
jnp
call
jnp
cmc
enter
xor
(bad)
(bad)
(bad)
call
cld
xacquire
hlt
out
cmp
inc
xadd
repz
push
stos
mov
(bad)
(bad)
out
inc
inc
jle
out
(bad)
fnsave
xor
inc
cs
repnz
push
inc
push
mov
(bad)
cld
das
fisttp
mov
xchg
rol
sbb
repnz
dec
pop
mov
shr
aad
mov
jbe
(bad)
(bad)
dec
test
pop
or
int
in
mov
in
sahf
mov
add
ds
popf
mov
jmp
mov
je
jmp
cmp
js
xor
outs
aad
aad
xchg
(bad)
(bad)
dec
ins
push
in
push
xchg
iret
cmp
mov
nop
cmp
(bad)
(bad)
jmp
fdivp
cmps
jbe
mov
cs
sbb
cmps
sti
movs
sbb
scas
in
jge
mov
or
sbb
dec
jne
addr16
and
mov
push
(bad)
xchg
ja
pop
aas
aam
inc
(bad)
(bad)
(bad)
fbld
dec
sub
aam
retf
retf
mov
ret
aas
aaa
bnd
jmp
jle
cmps
add
pop
inc
das
(bad)
neg
pop
add
pop
xor
out
sahf
cmp
jno
pop
je
jae
cmp
jne
cmp
fstp
and
clc
inc
movs
jnp
add
sub
in
add
mov
iret
out
aaa
cld
(bad)
stc
outs
in
mov
xor
push
adc
adc
aad
cmp
(bad)
(bad)
cmp
inc
sar
or
repz
mov
pop
jne
dec
pop
jo
jg
(bad)
jmp
out
mov
fcom
jnp
rol
test
xor
into
inc
jg
(bad)
(bad)
std
repnz
cmp
test
mov
dec
mov
sbb
xchg
fstp
lock
push
sar
mov
jmp
sahf
xlat
dec
je
adc
pop
popa
retf
sti
push
jmp
ds
add
sbb
scas
cdq
xor
mov
cli
xor
cli
or
jmp
lock
cmp
add
(bad)
add
jg
cmc
inc
add
int3
jge
clc
add
adc
rcr
adc
scas
pushf
jnp
pop
add
inc
push
(bad)
or
push
xor
neg
das
pop
add
test
(bad)
jno
or
add
jp
pop
psubw
hlt
fild
cli
cmc
add
lock
xchg
adc
jo
pop
ins
iret
ds
xchg
sti
fiadd
add
sti
jmp
sub
dec
scas
xchg
sbb
(bad)
add
xor
and
push
fxch
pushf
outs
sbb
ja
jp
cmp
adc
inc
imul
aad
fidivr
aas
(bad)
jmp
jae
pop
dec
scas
cmp
in
jne
es
bound
mov
sbb
jns
repz
stos
jnp
and
dec
rcr
dec
and
imul
(bad)
cmc
pop
adc
ja
call
dec
es
mov
idiv
fidiv
push
inc
xchg
push
push
jb
xor
(bad)
pop
cs
mov
xchg
test
push
dec
mov
jge
mov
mov
mov
xor
adc
jne
stc
and
(bad)
fisttp
inc
adc
xchg
and
not
gs
adc
dec
je
scas
out
(bad)
mov
lods
sub
push
in
or
retf
push
prefetch
mov
cs
sar
lds
pop
add
sub
add
sti
(bad)
inc
push
pop
in
add
add
add
and
sub
rol
or
add
out
add
add
adc
mov
(bad)
jle
push
or
add
lods
adc
out
or
inc
sub
sub
out
or
imul
xor
lods
sub
xor
adc
fimul
sub
push
test
push
add
(bad)
mov
lods
stos
mov
mov
pop
push
mov
xchg
(bad)
aas
call
scas
scas
mov
int
dec
push
cmp
ins
jnp
xlat
dec
loop
mov
cmp
pop
pop
ins
lods
jnp
lds
dec
fnstsw
fs
mov
jge
jne
ins
ss
mov
mov
arpl
fistp
(bad)
jns
stc
ins
add
ud0
push
ins
shl
mov
and
sbb
leave
xor
lahf
xchg
push
mov
(bad)
(bad)
push
jmp
fistp
mov
inc
(bad)
fstp
dec
inc
in
lods
pop
es
add
(bad)
(bad)
jmp
cmp
imul
rcr
xchg
pop
fidivr
jl
jbe
xlat
fwait
(bad)
(bad)
(bad)
mov
neg
or
stc
cmp
imul
or
(bad)
(bad)
call
out
jmp
data16
push
xor
cmp
lods
stos
pop
fwait
pop
hlt
(bad)
(bad)
jmp
or
jbe
cmc
cdq
mov
scas
or
stc
jp
hlt
xchg
ss
dec
push
stc
(bad)
(bad)
(bad)
fistp
cmps
(bad)
hlt
cmp
push
mov
xchg
fstp
imul
mov
(bad)
sub
(bad)
dec
inc
mov
push
mov
mov
ins
cmp
call
ja
inc
push
push
in
pop
bound
pop
pop
int3
pop
icebp
mov
shl
ffreep
(bad)
out
jp
(bad)
xor
icebp
rcl
jle
jns
popf
out
fcmovbe
aad
jp
mov
(bad)
fistp
(bad)
jns
faddp
popf
sbb
shr
cmc
jb
aam
(bad)
(bad)
(bad)
mov
data16
neg
mov
scas
push
lods
data16
in
mov
out
call
in
hlt
lods
out
call
cs
adc
fs
repz
(bad)
(bad)
cmp
mov
scas
sahf
xchg
mov
movs
loop
dec
mov
lods
mov
retf
(bad)
(bad)
fcomip
call
xchg
mov
fisubr
mov
aam
call
cmps
jmp
popf
jae
fistp
cmp
mov
call
jmp
(bad)
fcomip
call
mov
xchg
scas
xor
and
sbb
imul
sahf
(bad)
(bad)
(bad)
(bad)
fsubrp
das
mov
ins
das
pop
mov
add
aaa
mov
cdq
mov
test
adc
xlat
jmp
jmp
sar
retf
mov
mov
adc
jmp
pop
test
lock
jne
fwait
das
xor
xor
out
test
out
dec
dec
(bad)
(bad)
push
fld
xor
pop
rcl
mov
cmps
inc
adc
mov
(bad)
leave
into
das
pop
xlat
mov
into
sbb
(bad)
out
das
add
sbb
or
pop
scas
sub
adc
(bad)
(bad)
call
add
jp
hlt
mov
sub
out
adc
add
add
shr
out
(bad)
jg
mov
add
add
repz
nop
add
cmc
pop
shl
aaa
add
adc
or
sahf
inc
add
cmp
add
xlat
(bad)
and
daa
outs
lods
clc
out
(bad)
fdivr
(bad)
sub
stos
push
add
imul
jae
imul
mov
(bad)
rcr
xor
adc
or
add
jmp
add
add
add
add
add
add
(bad)
cmp
aad
adc
add
and
inc
push
and
push
pop
xor
(bad)
inc
popa
adc
push
jno
adc
xor
add
(bad)
(bad)
inc
add
add
dec
dec
add
lods
fidivr
out
push
hlt
jne
mov
mul
cwde
out
mov
jg
call
cld
pop
stc
dec
adc
push
(bad)
sbb
(bad)
(bad)
(bad)
call
fist
icebp
enter
mov
pop
mov
mov
push
jge
hlt
sti
inc
sahf
(bad)
(bad)
(bad)
call
cmp
sti
aaa
icebp
scas
and
add
dec
stos
xor
data16
lods
pop
ss
stos
(bad)
push
(bad)
(bad)
(bad)
call
xchg
sti
mov
hlt
sbb
jmp
push
mov
sub
sbb
(bad)
jne
(bad)
(bad)
(bad)
mov
(bad)
jg
cdq
rol
and
out
enter
out
stos
cmp
fadd
repz
out
pop
adc
pop
jg
mov
(bad)
cmc
scas
inc
outs
dec
add
repnz
test
add
and
(bad)
(bad)
(bad)
jnp
js
fadd
icebp
mov
cs
jle
add
pop
xlat
cmps
sub
jmp
(bad)
jnp
rcr
pop
dec
mov
aas
fld
jmp
stc
jmp
(bad)
mov
cmp
(bad)
(bad)
(bad)
jmp
push
fist
fcomp
adc
lods
int3
repnz
into
daa
gs
mov
inc
dec
iret
fistp
add
push
sbb
and
push
in
sbb
jmp
mov
sub
jo
lods
push
jne
leave
fnclex
mov
xor
loopne
arpl
pop
inc
lods
idiv
(bad)
(bad)
(bad)
clc
and
ds
fst
push
pop
jg
(bad)
ja
lods
mov
aad
cmp
cld
(bad)
(bad)
(bad)
inc
cmp
dec
pop
repnz
mov
sbb
sahf
xor
rcr
repnz
cmps
mov
(bad)
(bad)
(bad)
(bad)
std
dec
fwait
jae
pop
dec
std
dec
mov
mov
test
stos
(bad)
sbb
pop
test
test
dec
(bad)
(bad)
(bad)
inc
fidiv
int3
inc
add
in
cmp
stc
ins
mov
(bad)
mov
inc
enter
dec
cdq
and
(bad)
fdivr
fisttp
xchg
ret
jge
aaa
sbb
cmp
push
(bad)
(bad)
(bad)
dec
add
ss
fisubr
ret
mov
ds
es
les
or
(bad)
call
ins
xchg
dec
imul
and
rcl
loop
adc
sub
lock
xchg
jecxz
(bad)
(bad)
dec
cmc
jmp
jle
jge
loopne
mov
sub
pop
inc
rcr
inc
ja
mov
jle
(bad)
(bad)
inc
scas
xchg
cli
sbb
in
sub
jl
and
push
mov
jae
push
adc
dec
fdivr
(bad)
(bad)
(bad)
stc
aas
sub
fs
in
mov
mov
cmp
sti
sbb
jmp
inc
in
(bad)
(bad)
(bad)
inc
(bad)
or
in
mov
mov
cmp
jle
cmp
add
in
mov
sub
(bad)
(bad)
(bad)
fistp
push
mov
imul
and
into
mov
mov
stos
aas
sbb
(bad)
(bad)
(bad)
call
xchg
inc
dec
test
or
pop
hlt
test
repz
pushf
aaa
loope
and
js
fisub
jg
lea
xchg
clc
xor
aas
inc
sahf
jle
mov
inc
pop
inc
mov
(bad)
jmp
loopne
aad
push
out
pop
mov
inc
xchg
inc
mov
(bad)
(bad)
(bad)
call
loop
mov
sahf
dec
jle
jne
xchg
jg
xlat
mov
pop
cdq
cmp
dec
repnz
(bad)
(bad)
(bad)
jmp
jmp
ins
icebp
ins
mov
jmp
arpl
test
push
arpl
(bad)
(bad)
push
imul
in
fs
enter
sbb
mov
sbb
ja
sub
adc
call
js
imul
cmp
cmps
or
fistp
or
(bad)
(bad)
(bad)
jmp
out
add
pusha
ins
sub
jecxz
mov
es
jp
jle
(bad)
out
(bad)
aam
fstp
cwde
aam
stos
inc
jecxz
in
xchg
jl
(bad)
jge
mov
ds
(bad)
(bad)
(bad)
cli
popa
scas
cmp
ds
push
sbb
cwde
jecxz
add
xchg
loop
sbb
jl
mov
std
jmp
(bad)
(bad)
dec
pop
pop
jg
fwait
jmp
add
dec
fisttp
add
inc
cld
(bad)
(bad)
(bad)
jmp
or
mov
xchg
pushf
js
pop
push
xadd
adc
shl
push
(bad)
(bad)
(bad)
jmp
push
stos
add
hlt
clc
push
dec
stos
sub
add
inc
add
and
inc
cwde
jno
out
jg
inc
scas
pop
xchg
fbld
mov
in
inc
pop
mov
sbb
mov
sbb
(bad)
(bad)
push
cli
cmp
jge
cmps
test
icebp
icebp
sbb
shl
xchg
cmp
xchg
sti
in
push
mov
out
(bad)
fbld
push
js
in
sub
mov
(bad)
(bad)
jmp
gs
add
aam
nop
imul
adc
in
(bad)
jbe
pop
push
cdq
pop
mov
shl
(bad)
(bad)
(bad)
inc
ror
dec
mov
sbb
jecxz
jge
scas
xchg
cmp
std
xor
out
in
mov
ja
aas
aas
and
cld
jmp
cmc
hlt
or
cmp
adc
jge
mov
in
push
test
(bad)
(bad)
(bad)
call
monitorx
out
mov
test
sbb
bound
in
or
(bad)
push
jne
out
js
loope
in
sub
pop
or
lock
mov
(bad)
(bad)
inc
in
mov
mov
dec
mov
jg
mov
loop
out
inc
cmps
xor
xlat
imul
(bad)
(bad)
(bad)
dec
bound
scas
dec
pusha
movs
mov
repnz
hlt
cli
mov
sbb
add
(bad)
(bad)
(bad)
call
retf
ins
retf
shl
jp
in
fld
cmp
pop
cmp
jecxz
jge
cli
stos
rol
jo
inc
out
leave
(bad)
(bad)
(bad)
(bad)
cld
inc
push
call
aas
dec
es
and
adc
dec
fcmovnu
lock
push
int3
movs
(bad)
(bad)
(bad)
call
and
dec
out
leave
repz
es
cld
pop
add
jg
cmp
das
out
mov
(bad)
push
fsubr
push
out
fmul
and
icebp
hlt
pop
mov
jle
jmp
or
outs
pop
push
xor
cmp
pop
lds
inc
in
aad
fst
enter
mov
scas
mov
(bad)
fild
(bad)
(bad)
(bad)
dec
pop
pop
or
xchg
in
pop
inc
inc
enter
out
sub
and
aaa
sub
(bad)
(bad)
call
(bad)
xchg
stos
into
aad
pop
(bad)
fdivr
jne
mul
dec
fldcw
sar
(bad)
(bad)
fidiv
adc
rcr
int
les
ret
cmp
in
enter
mov
sub
(bad)
(bad)
(bad)
jmp
sub
sub
push
lea
sbb
mov
pop
push
aad
adc
(bad)
(bad)
(bad)
call
movs
cmps
fcmovnbe
mov
add
sbb
add
jl
push
enter
scas
out
sbb
in
sbb
(bad)
dec
les
mov
idiv
pop
gs
pop
aas
xchg
push
iret
je
int3
fist
jge
push
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
inc
aam
stc
mov
mov
fld
push
js
les
rcl
fdivrp
(bad)
(bad)
jmp
fld
retf
out
cmp
sti
add
jns
jge
push
outs
xchg
out
lahf
or
(bad)
(bad)
(bad)
mov
mov
ret
das
jg
lahf
icebp
addr16
jb
mov
popa
cmp
pop
(bad)
(bad)
(bad)
push
les
ds
add
or
mov
mov
retf
cmp
mov
mov
pop
movs
mov
jecxz
pop
(bad)
movs
out
test
cmp
ss
(bad)
(bad)
call
jne
jg
xchg
je
ja
xor
mov
clc
cs
add
xor
mov
inc
(bad)
(bad)
(bad)
dec
mov
and
sbb
fdiv
aas
xor
add
fnstsw
imul
mov
ss
and
addr16
xchg
retf
add
cmps
adc
out
data16
(bad)
(bad)
(bad)
aas
adc
mov
aaa
sub
xor
in
(bad)
fcomi
add
inc
xor
std
sbb
(bad)
(bad)
(bad)
call
add
fmul
adc
push
cmp
aad
adc
jmp
add
(bad)
(bad)
(bad)
call
out
lock
jmp
mov
dec
lock
icebp
aaa
ins
outs
(bad)
jg
loopne
ss
or
(bad)
(bad)
jle
mov
jns
mov
out
les
jb
push
sbb
cmps
in
in
fld
(bad)
(bad)
inc
add
(bad)
xchg
movs
nop
add
stc
ins
sbb
movs
sti
xchg
mov
mov
jg
daa
push
cmps
adc
repnz
in
aaa
fld
into
inc
call
test
xchg
inc
leave
push
call
sub
push
cdq
and
popa
mov
call
and
push
sub
ror
in
xchg
out
add
xchg
xchg
les
adc
in
fbld
or
loopne
outs
xlat
nop
jb
ins
cld
push
ss
(bad)
(bad)
call
or
aad
nop
jl
and
cmp
pop
(bad)
movs
into
enter
rol
leave
daa
int
(bad)
(bad)
(bad)
dec
enter
lods
push
xchg
int3
dec
sub
clc
inc
fwait
pop
add
cli
push
ins
adc
jl
(bad)
(bad)
(bad)
(bad)
cmp
add
(bad)
jle
cmp
jle
jmp
mov
int3
mov
sar
pop
(bad)
(bad)
(bad)
dec
mov
sti
and
mov
loope
adc
jbe
sbb
adc
sub
jmp
dec
ficomp
mov
mov
push
scas
scas
xchg
imul
xchg
push
mov
test
mov
call
(bad)
jmp
or
out
cmp
add
(bad)
cmp
and
daa
dec
pop
adc
and
adc
icebp
fcom
sahf
sti
jno
pop
and
cld
sub
mov
inc
inc
loope
lods
push
push
and
js
dec
int
add
in
daa
in
jl
cmp
(bad)
(bad)
(bad)
cld
dec
aad
sub
jb
lock
xchg
lods
ds
add
popf
add
loop
(bad)
(bad)
jmp
data16
mov
stc
xor
daa
daa
sub
dec
sar
add
mov
add
adc
(bad)
(bad)
jmp
test
push
pop
jl
xor
mov
mov
push
mov
pop
jl
sti
(bad)
(bad)
(bad)
(bad)
jmp
int3
in
test
push
adc
in
les
test
dec
sti
test
jg
fidivr
inc
or
push
or
(bad)
(bad)
jmp
sbb
sub
xor
mov
sti
les
sub
(bad)
sub
(bad)
dec
loopne
sub
retf
jmp
cs
lds
inc
mov
in
mov
(bad)
(bad)
(bad)
call
jne
add
leave
sahf
ins
ja
stos
dec
jle
cmp
out
pop
inc
mov
jp
ss
(bad)
(bad)
(bad)
sti
adc
jp
out
and
aas
inc
inc
mov
fimul
xor
pop
mov
jbe
(bad)
(bad)
(bad)
push
sti
inc
aam
cmp
mov
in
lods
cmps
mov
pop
mov
and
add
(bad)
call
pop
jno
and
outs
pop
lea
cmp
inc
mov
aaa
pop
in
adc
jg
in
fsub
sbb
inc
sahf
(bad)
(bad)
(bad)
call
cwde
sub
ss
mov
inc
imul
xchg
or
mov
in
std
loope
clc
inc
push
(bad)
(bad)
call
or
je
sbb
pusha
mov
je
sub
or
cli
jge
(bad)
(bad)
(bad)
(bad)
fstp
push
mov
and
not
outs
adc
cmps
je
sbb
int3
jbe
jmp
call
fidiv
int3
cwde
push
aas
xor
xor
xor
mov
aam
div
dec
iret
push
xchg
or
inc
fdiv
and
push
aaa
jmp
sbb
mov
or
(bad)
(bad)
(bad)
call
jb
pushf
(bad)
scas
mov
cmps
sub
dec
xor
mov
ss
push
dec
gs
arpl
lock
(bad)
(bad)
jmp
mov
adc
inc
rcl
mov
xor
fwait
pop
scas
aam
(bad)
outs
push
jmp
(bad)
(bad)
push
and
mov
icebp
in
icebp
cmp
sub
jno
pop
sbb
cs
repnz
(bad)
call
adc
setae
hlt
int3
dec
int3
push
sub
stos
sbb
(bad)
(bad)
(bad)
inc
dec
xlat
(bad)
sbb
les
mov
mov
retf
out
(bad)
iret
sahf
rcr
(bad)
jmp
aam
dec
outs
out
fnstcw
xor
mov
sub
ins
cmp
pop
(bad)
(bad)
(bad)
push
sub
in
daa
outs
mov
loop
and
xchg
jns
mov
ins
test
add
dec
pop
inc
adc
shl
and
xchg
jno
mov
xor
push
fbstp
outs
jo
jae
data16
(bad)
(bad)
jmp
test
sub
mov
pop
jmp
xchg
fdivr
hlt
jmp
dec
pusha
(bad)
(bad)
(bad)
call
jle
or
cmc
add
push
pushf
out
jecxz
stc
jne
movs
pop
cmp
(bad)
push
hlt
cmp
mov
mov
iret
sub
ins
les
sub
ret
mov
inc
neg
lods
ins
xchg
(bad)
(bad)
(bad)
(bad)
clc
xor
je
int3
push
mov
div
sbb
enter
inc
mov
push
jnp
push
data16
(bad)
call
push
cmp
iret
(bad)
fwait
ds
sbb
xor
jmp
(bad)
(bad)
(bad)
dec
dec
xchg
or
jo
mov
add
popw
clc
jmp
jl
(bad)
(bad)
(bad)
inc
mov
cmp
push
sti
imul
lods
pop
daa
call
and
sub
in
sub
cmps
inc
pop
int
in
shl
sub
xor
in
into
mov
stos
scas
and
(bad)
(bad)
push
ds
cdq
or
and
xchg
xor
add
aaa
cwde
or
add
movs
mov
(bad)
(bad)
(bad)
call
mov
lea
add
sub
jbe
xchg
fdivr
dec
ret
xor
mov
(bad)
(bad)
(bad)
push
sbb
sbb
scas
add
xchg
pop
push
js
sbb
pop
loop
jne
mov
adc
mov
(bad)
(bad)
(bad)
dec
ret
call
xor
in
add
idiv
fidivr
rcl
(bad)
(bad)
(bad)
call
test
mov
inc
cmp
pop
popa
loopne
sub
shl
rcr
push
(bad)
(bad)
(bad)
jmp
mov
pop
rcl
push
mov
out
and
sbb
add
jmp
pop
mov
bound
test
sbb
sbb
xlat
cmp
pop
(bad)
(bad)
(bad)
push
dec
leave
test
jno
mov
out
xor
ins
dec
mov
aaa
push
cwde
pop
in
mov
and
(bad)
jmp
ins
inc
fidivr
pop
dec
hlt
cdq
jae
sbb
sbb
pop
cld
ja
repz
stc
(bad)
sti
fcomp
and
jecxz
popa
xchg
mov
jb
inc
jae
inc
mov
jecxz
sbb
leave
mov
outs
add
push
loope
std
in
test
jmp
cmp
stos
xor
loop
fcomp
jns
fwait
xor
(bad)
(bad)
(bad)
(bad)
dec
adc
xchg
bound
movs
repz
mov
ins
(bad)
jbe
(bad)
(bad)
(bad)
inc
aad
call
imul
sbb
jno
div
push
jo
out
jbe
(bad)
(bad)
jmp
not
(bad)
ins
in
inc
pop
inc
jge
xchg
jns
push
pop
fst
xchg
(bad)
loop
cmp
aad
add
lahf
mov
shl
outs
sub
adc
jl
movs
repnz
cmp
dec
dec
and
xchg
(bad)
(bad)
(bad)
(bad)
fimul
add
ret
aam
push
pop
or
xchg
jbe
(bad)
data16
push
cs
pusha
(bad)
(bad)
(bad)
call
mov
popf
ds
inc
fdivr
add
sub
ja
movs
js
mov
(bad)
(bad)
(bad)
jmp
add
outs
xor
lock
pop
ja
loop
lds
xlat
mov
or
(bad)
(bad)
(bad)
dec
add
sbb
les
int
xchg
cmp
(bad)
cmp
dec
jecxz
and
mov
(bad)
(bad)
jmp
popa
pop
ror
push
push
ins
or
dec
cmps
mov
mov
outs
ja
dec
(bad)
(bad)
(bad)
(bad)
out
cli
mov
dec
pop
sbb
mov
or
aad
mul
adc
dec
js
(bad)
(bad)
(bad)
call
data16
retf
xchg
xchg
loope
pop
lds
mov
pop
retf
ret
test
adc
(bad)
(bad)
(bad)
aas
xor
mov
aad
bound
fs
push
push
cmp
push
outs
in
mov
(bad)
(bad)
push
mov
jp
xor
stos
dec
pop
rcl
fsub
fs
out
xor
retf
inc
div
(bad)
dec
imul
aaa
cs
cli
mov
mov
dec
push
(bad)
(bad)
push
push
adc
leave
jae
and
push
xchg
imul
aaa
movs
adc
pop
xchg
in
cmps
gs
(bad)
(bad)
(bad)
(bad)
mov
inc
sbb
ret
fiadd
in
xor
jl
and
add
xor
test
(bad)
(bad)
call
(bad)
xchg
pop
fst
shl
fucom
inc
scas
stos
jg
sub
gs
ds
mov
xchg
fist
clc
imul
test
lahf
inc
mov
retf
mov
mov
jle
dec
jge
retf
sbb
sbb
jl
arpl
add
add
out
xor
cmp
lock
(bad)
(bad)
(bad)
jmp
in
cbw
push
adc
retf
int3
in
xor
cld
add
in
scas
dec
es
pop
in
retf
mov
(bad)
(bad)
(bad)
jmp
xor
dec
dec
cmps
and
mov
repz
in
retf
ror
mov
(bad)
(bad)
(bad)
cmp
or
or
(bad)
int
cwde
lock
gs
iret
(bad)
out
cmps
pop
sbb
push
sub
cmp
ret
and
test
enter
fcomp
pop
inc
jp
xchg
mov
push
jecxz
cld
cmp
gs
int3
test
ds
and
xchg
(bad)
sbb
and
(bad)
(bad)
push
mov
sub
jns
aad
pop
es
loop
lods
shl
dec
xchg
xchg
out
mov
(bad)
(bad)
(bad)
jmp
and
mov
shld
add
sbb
dec
sbb
mov
sbb
(bad)
(bad)
dec
adc
fnstsw
(bad)
sbb
inc
or
in
sahf
xchg
jp
xchg
xchg
test
test
(bad)
(bad)
jmp
cdq
fbstp
stos
retf
das
xor
lods
and
in
inc
cdq
pop
sbb
push
dec
pop
in
sbb
inc
arpl
mov
jmp
cdq
jns
shl
jmp
adc
fdivr
(bad)
(bad)
push
pop
mov
mov
inc
fld
cwde
repz
jle
jmp
dec
push
cmps
sar
(bad)
jmp
push
in
sbb
add
jmp
sbb
scas
mov
cdq
jne
sub
cdq
adc
jmp
ror
mov
sub
test
adc
outs
cs
adc
ds
(bad)
cmovle
(bad)
(bad)
(bad)
jmp
sbb
inc
pushf
cmps
ss
jno
aad
push
mov
adc
cmp
push
cmc
jecxz
movs
sbb
(bad)
(bad)
(bad)
call
pushf
xor
or
cwde
sbb
push
mov
arpl
stc
push
xchg
cmp
(bad)
(bad)
push
aad
(bad)
xchg
mov
leave
cwde
retf
pop
jbe
pop
(bad)
mov
sub
and
stos
dec
mov
push
mov
(bad)
(bad)
(bad)
(bad)
out
cmc
cmp
aas
jp
(bad)
ds
cld
xor
sbb
sub
fdivp
out
(bad)
(bad)
call
sub
test
into
jmp
pop
sub
mov
daa
dec
mov
and
(bad)
(bad)
call
rol
adc
xor
cmp
jmp
push
call
sbb
fldenv
dec
sbb
push
ror
pop
pop
jbe
mov
add
or
retf
(bad)
push
bound
sub
jbe
and
xchg
bound
(bad)
(bad)
(bad)
(bad)
(bad)
fimul
cld
dec
inc
mov
push
retf
mov
mov
repnz
pop
fcmovnu
(bad)
(bad)
(bad)
jmp
xchg
cwde
enter
adc
add
(bad)
xor
data16
jno
mov
shl
(bad)
(bad)
(bad)
call
test
lds
mov
addr16
push
mov
dec
cwde
inc
arpl
jnp
mov
xchg
int3
(bad)
(bad)
(bad)
call
jge
lods
mov
mov
pop
jno
pop
adc
mov
push
ja
cmps
push
imul
(bad)
(bad)
call
and
imul
sbb
xchg
repz
sub
push
jle
mov
(bad)
(bad)
inc
dec
out
js
xor
pop
imul
sub
xlat
test
arpl
mov
gs
(bad)
(bad)
dec
data16
pop
and
int
xchg
add
mov
xchg
jp
(bad)
(bad)
dec
adc
retf
fs
cmps
rcl
mov
dec
add
ins
lea
stos
pusha
scas
(bad)
(bad)
(bad)
push
out
out
test
popa
or
int
jno
and
(bad)
(bad)
jmp
cmp
outs
inc
pop
mov
cmp
jmp
xchg
dec
cmp
(bad)
(bad)
(bad)
jmp
repnz
repnz
retf
mov
sahf
inc
xor
push
retf
mov
fnstenv
mul
sahf
dec
(bad)
(bad)
(bad)
jmp
dec
imul
lahf
lea
(bad)
(bad)
sti
hlt
fisubr
imul
jmp
jl
mov
(bad)
adc
jno
mov
sub
inc
repz
add
call
(bad)
call
jl
push
lods
mov
pushf
fwait
clc
lds
fmul
enter
(bad)
(bad)
dec
out
xor
sbb
sti
dec
pop
mov
dec
push
xchg
xchg
push
(bad)
(bad)
(bad)
call
mov
mov
(bad)
ds
repz
data16
cmps
inc
lock
and
sbb
cld
mov
(bad)
jne
mov
fcmovu
dec
xor
jl
test
xchg
mov
add
dec
(bad)
(bad)
(bad)
jmp
mov
and
into
nop
xchg
(bad)
inc
pop
aad
cmc
call
add
push
mov
xchg
inc
das
xchg
xchg
mov
sbb
loop
push
dec
inc
dec
sbb
into
test
(bad)
(bad)
(bad)
call
fisttp
arpl
jo
(bad)
pop
in
repz
mov
aaa
fs
(bad)
(bad)
(bad)
push
push
push
gs
pushf
les
push
gs
and
jns
mov
retf
(bad)
(bad)
frstor
dec
cmp
fistp
ins
aam
mov
xor
mov
add
in
sbb
(bad)
(bad)
(bad)
call
cli
inc
xor
jp
xlat
ror
push
pop
popf
inc
sahf
mov
outs
aam
(bad)
sbb
(bad)
(bad)
push
retf
ds
sub
and
mov
add
or
sub
add
(bad)
(bad)
(bad)
jmp
(bad)
addr16
dec
mov
and
cmp
ret
shr
lods
(bad)
sub
ins
inc
cmc
dec
dec
adc
add
pop
and
aam
jno
in
sub
cmp
jbe
jecxz
retf
ret
dec
inc
(bad)
(bad)
(bad)
inc
cmp
enter
dec
mov
sub
rol
inc
mov
loopne
(bad)
(bad)
inc
xchg
cmp
enter
xchg
shl
pop
test
fs
add
stos
cmps
ficom
sbb
inc
push
adc
mov
neg
mov
in
scas
movs
popf
sbb
cmp
push
push
pop
(bad)
(bad)
(bad)
dec
dec
mov
ret
xchg
dec
sub
out
pushf
push
mov
ds
(bad)
das
aad
stos
add
fs
(bad)
(bad)
push
cmp
mov
add
pop
mov
xchg
jae
sbb
sub
inc
std
shl
imul
dec
and
fistp
sbb
sub
(bad)
(bad)
(bad)
call
mov
inc
xchg
(bad)
test
ss
inc
xchg
jle
xchg
rol
push
cmc
sbb
les
(bad)
(bad)
jmp
ins
and
int3
retf
aam
loop
inc
jmp
daa
aaa
enter
mov
xchg
movs
pop
and
(bad)
(bad)
(bad)
(bad)
cmp
ds
cli
mov
jle
mov
movs
dec
lock
mov
lahf
mov
(bad)
(bad)
(bad)
jge
mov
xchg
int3
pop
jg
clc
mov
into
sub
cld
mov
pop
(bad)
(bad)
(bad)
(bad)
dec
stos
out
clc
pop
pop
sbb
scas
sub
shl
add
ror
cmp
dec
xor
(bad)
(bad)
(bad)
(bad)
cmp
inc
pop
cmp
mov
jl
adc
cmp
iret
or
aam
bnd
(bad)
(bad)
(bad)
jmp
mov
push
ss
repz
and
lods
xor
into
mov
dec
(bad)
(bad)
(bad)
dec
lods
mov
xor
les
mov
mov
xchg
mov
aam
xor
xchg
nop
hlt
mov
(bad)
(bad)
(bad)
inc
ins
ins
sbb
(bad)
int
sti
(bad)
and
jg
(bad)
fnsave
add
mov
push
(bad)
(bad)
(bad)
push
add
mov
cmp
retf
push
test
mov
out
xchg
rol
in
add
(bad)
(bad)
(bad)
dec
(bad)
stos
xor
loop
pop
jbe
aaa
lods
int3
rcl
(bad)
or
jl
xor
gs
outs
(bad)
(bad)
(bad)
(bad)
jnp
ins
imul
hlt
jmp
jmp
ret
ss
daa
xchg
(bad)
adc
retf
(bad)
jmp
sub
div
data16
pusha
jmp
pusha
loope
pop
aam
sbb
jne
test
xlat
(bad)
(bad)
(bad)
call
dec
(bad)
mov
pop
mov
fisubr
xchg
mov
repz
sbb
(bad)
(bad)
(bad)
call
mov
mov
xor
inc
and
xor
sub
les
jnp
xchg
movs
inc
jo
fs
mov
jbe
popf
imul
ret
(bad)
(bad)
call
push
retf
(bad)
cdq
dec
and
sar
mov
(bad)
sbb
pusha
or
leave
loope
adc
call
dec
xor
push
cmp
lahf
xor
leave
pop
cmps
les
push
pop
leave
mov
into
inc
into
stc
cmp
sub
cs
xchg
cmovge
das
ds
sbb
push
sbb
(bad)
(bad)
dec
dec
bound
mov
aad
call
fcmovu
mov
lahf
dec
xchg
xor
(bad)
(bad)
jmp
loopne
stos
sbb
xor
iret
mov
push
enter
ins
mov
cli
mov
jmp
mov
(bad)
sbb
imul
xor
je
out
(bad)
ins
mov
(bad)
(bad)
(bad)
mov
or
inc
adc
aad
pop
in
enter
in
daa
xor
pop
xor
(bad)
(bad)
(bad)
jmp
(bad)
xchg
sub
in
mov
shl
mov
dec
out
out
mov
xchg
aad
retf
(bad)
inc
inc
fadd
arpl
outs
fwait
nop
cwde
std
cmp
les
dec
pop
outs
mov
aaa
int3
mov
jne
pop
sbb
arpl
(bad)
(bad)
call
(bad)
hlt
fnstsw
sbb
mov
mov
fwait
xchg
pop
or
(bad)
(bad)
(bad)
(bad)
ds
pushf
mov
inc
add
xchg
and
ss
push
add
outs
(bad)
(bad)
(bad)
push
leave
scas
jl
mov
add
cmp
adc
inc
mov
cmp
(bad)
(bad)
(bad)
push
cmp
or
mov
aaa
sub
enter
sbb
xor
hlt
(bad)
(bad)
(bad)
jmp
orps
mov
xchg
inc
in
pop
pop
hlt
xchg
cmp
pop
jmp
loopne
(bad)
(bad)
(bad)
jnp
xor
stc
push
les
loope
push
je
sbb
pop
inc
cmps
es
adc
int3
sahf
sbb
(bad)
(bad)
call
cmp
fldlg2
sbb
lods
sbb
lea
pushfw
movs
pop
enter
(bad)
(bad)
(bad)
clc
dec
adc
mov
pop
sbb
out
or
pushf
test
das
cmp
jb
int
mov
mov
out
(bad)
(bad)
(bad)
call
div
xchg
xchg
lea
fs
icebp
repnz
mov
xlat
push
imul
mov
test
(bad)
std
xchg
fs
sub
shr
dec
jmp
pushf
jg
shl
lea
jbe
(bad)
push
clc
mov
mov
outs
test
or
mov
push
adc
jno
(bad)
(bad)
push
repnz
(bad)
cmp
int
ds
sub
gs
xor
mov
movs
mov
xchg
neg
mov
inc
cdq
sbb
test
call
(bad)
dec
push
enter
sbb
sub
leave
inc
dec
inc
retf
cmc
into
mov
popf
xor
pushf
shl
pop
call
dec
out
movs
cmp
data16
gs
test
aad
stc
(bad)
(bad)
(bad)
(bad)
fldcw
jle
(bad)
xchg
ds
mov
dec
push
xchg
nop
int
movs
out
cdq
loope
mov
(bad)
(bad)
(bad)
jmp
scas
outs
sbb
pop
repz
push
inc
(bad)
dec
pop
add
xor
ja
leave
pop
aam
in
jne
(bad)
(bad)
(bad)
dec
lahf
sbb
repz
mov
jmp
loop
sbb
cs
sub
mov
jp
in
scas
mov
sub
sub
push
cmp
fdivr
rcr
dec
and
and
(bad)
(bad)
(bad)
mov
mov
jns
sub
dec
(bad)
push
fmul
push
shl
sub
(bad)
(bad)
call
dec
inc
ja
jns
fst
cmp
xchg
push
in
xchg
add
(bad)
outs
push
pop
(bad)
(bad)
(bad)
call
popf
cdq
mov
ret
and
jle
dec
mov
sub
and
iret
outs
(bad)
(bad)
(bad)
dec
aaa
mul
xor
pop
out
sub
inc
jmp
mov
mov
jecxz
scas
ins
lods
mov
test
adc
cmc
ss
ror
add
mov
(bad)
inc
gs
and
fwait
ret
std
cmps
mov
fldln2
xchg
lahf
(bad)
(bad)
dec
mov
(bad)
(bad)
call
mov
mov
in
retf
in
jecxz
pushf
mov
(bad)
cwde
fbstp
mov
mov
(bad)
(bad)
out
mov
sub
retf
leave
mov
outs
dec
nop
into
clc
pop
bound
pusha
aas
cmp
xchg
mov
(bad)
call
push
add
into
fisub
sub
mov
mov
xchg
daa
mov
(bad)
(bad)
push
es
mov
push
jge
mov
retf
jns
ficom
sub
(bad)
(bad)
(bad)
(bad)
mov
enter
xchg
retf
xchg
outs
loopne
xchg
and
mov
inc
(bad)
(bad)
(bad)
call
lahf
add
jne
fisub
push
lods
fcmovb
dec
mov
jno
sub
add
(bad)
(bad)
(bad)
dec
dec
cmps
mov
mov
inc
popa
mov
mov
jl
idiv
test
(bad)
(bad)
(bad)
push
inc
push
jmp
aas
dec
sti
or
inc
cmps
mov
jle
mov
popa
imul
inc
(bad)
(bad)
(bad)
(bad)
std
aas
retf
paddb
int
push
sbb
xchg
mov
jmp
(bad)
(bad)
(bad)
call
mov
and
cmp
daa
dec
mov
mov
sbb
mov
leave
(bad)
(bad)
(bad)
inc
mov
lahf
test
je
and
(bad)
mov
cmp
sbb
xlat
test
lahf
push
mov
(bad)
or
fisttp
sti
(bad)
les
pop
pop
aam
data16
and
(bad)
(bad)
jmp
std
or
in
dec
cld
push
fdivr
ja
push
mov
sbb
xor
push
(bad)
inc
push
push
inc
dec
out
ins
mov
and
out
popf
rcl
jns
mov
(bad)
(bad)
cmp
in
adc
mov
fdivr
mov
dec
clc
push
scas
inc
scas
push
mov
(bad)
(bad)
(bad)
call
xor
les
popf
mov
repz
data16
mov
mov
(bad)
(bad)
push
add
call
inc
push
push
or
in
push
daa
xchg
repz
shl
ficomp
(bad)
(bad)
call
or
and
mov
fwait
pop
lods
mov
inc
dec
mov
add
cli
call
pop
data16
sbb
(bad)
push
aad
mov
sbb
dec
xchg
das
(bad)
(bad)
(bad)
call
lds
adc
in
sbb
mov
pop
push
inc
cli
jl
pop
mov
xchg
xchg
cwde
mov
(bad)
call
gs
sub
mov
aaa
xor
ret
scas
mov
ss
(bad)
(bad)
push
xchg
xor
mov
jmp
stos
iret
mov
shl
xor
call
(bad)
(bad)
(bad)
(bad)
jmp
ficom
scas
cs
xchg
scas
movs
jnp
add
push
das
in
imul
aam
xchg
mov
(bad)
(bad)
(bad)
push
adc
push
es
sbb
jg
jae
(bad)
jg
out
rcl
loopne
(bad)
(bad)
(bad)
(bad)
jmp
push
movs
cmps
or
xchg
jo
into
mov
mov
mov
lahf
cld
test
ins
sti
(bad)
(bad)
(bad)
out
inc
lea
pop
in
(bad)
out
mov
dec
inc
xchg
retf
(bad)
lds
idiv
loope
and
(bad)
(bad)
push
push
imul
mov
(bad)
arpl
mov
rol
jg
ins
loopne
(bad)
(bad)
(bad)
jmp
outs
aaa
es
xor
bound
in
out
ins
mov
mov
jno
cld
stos
(bad)
(bad)
(bad)
(bad)
inc
and
mov
inc
test
inc
add
add
add
add
pop
add
add
(bad)
out
or
add
and
xor
push
popa
jno
adc
inc
adc
mov
push
jb
adc
xor
ret
inc
push
shl
arpl
mov
lahf
adc
aas
add
and
cmps
sub
push
sbb
lahf
push
xor
(bad)
(bad)
jmp
ret
in
adc
icebp
xor
or
adc
sub
cmps
mov
or
repz
(bad)
(bad)
(bad)
cld
arpl
jno
and
mov
sub
jnp
shr
cmps
inc
xor
(bad)
(bad)
(bad)
jmp
in
retf
das
push
mov
ss
mul
cmp
loope
pop
jo
sti
(bad)
push
sar
(bad)
jmp
jge
mov
pop
pop
mov
push
rol
mov
mov
cmps
(bad)
(bad)
(bad)
(bad)
fcomp
xchg
cli
fwait
inc
(bad)
fstp
je
adc
sbb
pop
sub
js
sub
les
inc
mov
retf
dec
repnz
jae
imul
sti
inc
(bad)
ffreep
cmp
int3
(bad)
mul
push
xchg
(bad)
dec
pop
and
(bad)
(bad)
jmp
iret
cli
pusha
mov
xor
ja
mov
pop
test
jecxz
xor
mov
cmp
(bad)
call
ret
add
pop
test
push
jbe
mov
add
cmps
into
xor
(bad)
add
test
(bad)
(bad)
dec
retf
(bad)
test
mov
xor
(bad)
repnz
into
inc
cs
movs
hlt
mov
and
add
stos
dec
shr
pop
sub
mov
push
jbe
daa
xchg
dec
fisubr
(bad)
(bad)
(bad)
jmp
test
jae
cwde
ret
call
and
push
cmps
out
and
xchg
bound
(bad)
(bad)
(bad)
jmp
pop
neg
sti
dec
mov
outs
loop
or
ret
outs
es
jge
mov
(bad)
(bad)
(bad)
jmp
cdq
(bad)
or
mov
aad
(bad)
ret
pop
repnz
jb
(bad)
(bad)
call
outs
inc
sub
adc
mov
push
adc
stc
fwait
jl
sub
retf
(bad)
push
inc
sub
sub
(bad)
xlat
test
ja
and
cmp
(bad)
(bad)
jmp
out
mov
push
test
jecxz
pop
(bad)
scas
push
mov
xlat
push
(bad)
(bad)
(bad)
inc
ins
test
push
outs
sbb
jo
stos
sub
popf
loop
(bad)
fiadd
sbb
cmp
mov
cmp
iret
int3
(bad)
inc
fsubr
pop
pop
mov
adc
cdq
mov
mov
imul
pop
in
(bad)
(bad)
(bad)
call
mov
adc
and
sti
sub
xchg
std
pushf
iret
loopne
mov
stos
(bad)
(bad)
(bad)
jmp
retw
pop
cmp
out
cmps
jne
ds
addr16
idiv
mov
push
(bad)
(bad)
(bad)
(bad)
clc
mov
imul
fwait
mov
add
lods
popa
mov
icebp
and
xor
fdivrp
(bad)
(bad)
jmp
add
lea
cmc
outs
cmp
mov
int
mov
inc
test
sub
add
push
test
out
into
xor
ret
std
jecxz
mov
adc
clc
inc
mov
fadd
(bad)
(bad)
push
cs
pushaw
fs
and
in
lahf
out
jno
jle
xor
fs
bnd
cmp
(bad)
jmp
cs
xor
dec
xor
daa
and
div
jmp
adc
(bad)
(bad)
push
mov
fimul
mov
xlat
xor
mov
and
push
cdq
sub
sbb
(bad)
(bad)
(bad)
push
fnstenv
xchg
add
push
push
pop
data16
sub
stos
cli
(bad)
(bad)
(bad)
call
cdq
inc
and
movs
adc
cmp
cli
ret
xor
stos
mov
add
(bad)
(bad)
(bad)
inc
into
dec
repnz
stos
push
cmc
lea
mov
push
aaa
push
xor
inc
(bad)
popf
out
cmp
xchg
jg
sbb
xor
(bad)
(bad)
jmp
arpl
inc
sbb
jl
dec
outs
sti
out
add
nop
push
movs
pusha
or
pop
sub
jp
jnp
out
(bad)
(bad)
(bad)
call
xchg
jb
fstp
dec
test
cmp
shl
push
pop
mov
shr
imul
(bad)
(bad)
(bad)
call
cmps
lds
push
xor
pop
out
sub
lods
add
cs
inc
xchg
cs
(bad)
mov
cmp
and
ins
mov
lahf
imul
enter
xor
(bad)
(bad)
(bad)
(bad)
cmp
add
push
pushf
bound
lods
cs
xchg
and
mov
add
mov
sub
(bad)
(bad)
inc
mov
pop
stc
mov
pop
mov
retf
dec
scas
test
ss
adc
in
mov
mul
(bad)
repz
out
jo
push
mov
cmp
(bad)
(bad)
(bad)
call
aad
clc
inc
add
jo
add
aad
lea
outs
out
or
adc
(bad)
(bad)
(bad)
dec
imul
pop
sbb
mov
out
mov
test
xor
(bad)
(bad)
(bad)
jnp
add
push
nop
jg
pop
or
popf
xchg
iret
adc
or
inc
and
(bad)
(bad)
inc
test
clc
ret
test
mov
ret
fstp
scas
sbb
cmp
jg
or
mov
inc
adc
loope
and
loopne
(bad)
(bad)
(bad)
call
inc
jbe
call
jo
(bad)
repz
test
pop
sub
pop
aam
ret
(bad)
jmp
int3
ret
test
and
fucomip
(bad)
mov
in
lock
test
aad
loopne
pop
aaa
out
sti
movs
(bad)
(bad)
(bad)
jmp
or
arpl
(bad)
mov
arpl
std
pusha
outs
pop
test
dec
or
push
popa
sbb
(bad)
call
or
pop
cmps
fdivrp
add
(bad)
out
xor
dec
sar
movs
dec
stos
dec
and
(bad)
(bad)
(bad)
push
pop
lods
scas
and
mov
dec
push
add
fistp
sbb
icebp
mov
(bad)
push
sbb
int3
and
rcr
inc
shr
lahf
sub
and
mov
popa
clc
(bad)
(bad)
(bad)
jmp
adc
and
jne
inc
mov
jg
shrd
and
inc
mov
retf
nop
mov
aas
push
(bad)
(bad)
(bad)
inc
mov
mov
hlt
dec
push
ret
ror
daa
xchg
jns
push
mov
push
jnp
(bad)
(bad)
(bad)
(bad)
jl
push
mov
inc
xor
xchg
push
daa
push
ins
inc
lahf
retf
cdq
mov
dec
loop
mov
(bad)
(bad)
push
movs
add
mov
mov
loopne
sub
xor
dec
lds
sub
cmp
(bad)
push
(bad)
sbb
clc
jl
fidiv
movs
push
imul
aam
mov
(bad)
clc
inc
aam
adc
mov
stos
push
fldenv
push
xor
pop
ret
jmp
push
pusha
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
imul
in
imul
mov
cs
fisubr
add
pop
inc
add
sar
(bad)
(bad)
call
xchg
sub
out
dec
xchg
push
sub
fst
dec
add
out
sub
int3
in
push
ret
push
(bad)
(bad)
(bad)
call
ins
dec
jno
and
leave
inc
cld
loop
sub
add
mov
lahf
xchg
popa
(bad)
(bad)
(bad)
call
xchg
adc
fcmovb
jae
mov
test
mov
mov
mov
push
retf
xchg
dec
repz
cmp
(bad)
dec
ja
jnp
outs
xchg
or
xor
ds
lea
cmp
(bad)
(bad)
(bad)
dec
or
push
inc
mov
mov
sub
mov
gs
xchg
arpl
(bad)
(bad)
call
pop
retf
cmp
test
sti
and
cmp
push
inc
sub
inc
push
(bad)
(bad)
(bad)
(bad)
cmp
outs
adc
mov
pop
mov
xor
stos
dec
int3
add
jmp
mov
into
idiv
in
(bad)
cwde
sahf
aad
test
fst
jecxz
popa
mov
(bad)
(bad)
fsub
xchg
rcl
adc
adc
gs
inc
int3
mov
cdq
(bad)
(bad)
(bad)
inc
dec
int3
inc
(bad)
jbe
cmp
out
es
aad
mov
inc
sbb
jecxz
in
and
add
jge
int
(bad)
hlt
clc
ret
jb
fucomi
pop
aas
mov
(bad)
(bad)
call
hlt
pop
cmp
ror
dec
cwde
pop
sub
lock
adc
lea
fmul
(bad)
xchg
cdq
out
(bad)
(bad)
(bad)
jmp
pop
hlt
sub
test
dec
xor
add
mov
dec
sub
push
mov
push
push
(bad)
(bad)
push
cld
bound
shr
mov
inc
out
fistp
call
es
bound
or
(bad)
(bad)
jmp
call
jae
ficom
push
mov
call
(bad)
(bad)
(bad)
mov
dec
cdq
leave
and
nop
xchg
ficom
or
pop
dec
push
fidivr
outs
pop
cs
(bad)
(bad)
(bad)
inc
test
mov
fadd
mov
aas
cdq
aam
pop
or
(bad)
(bad)
inc
pop
add
jo
or
push
out
or
(bad)
shl
in
inc
arpl
pop
mov
xchg
add
sub
mov
sbb
aas
xchg
setl
push
fild
push
jecxz
add
call
(bad)
(bad)
(bad)
call
sbb
push
cdq
xor
sti
aad
cmp
pop
mov
inc
shl
js
and
(bad)
(bad)
(bad)
dec
dec
jno
js
nop
mov
movs
ins
jae
or
add
gs
cmp
and
(bad)
(bad)
inc
push
test
stos
aam
adc
cmp
pop
inc
mov
mov
(bad)
(bad)
(bad)
dec
adc
movs
outs
stc
inc
aad
lock
pop
pop
out
pop
pop
in
and
mov
in
fsubr
dec
pop
call
popf
ja
pop
jp
cmps
mov
movs
mov
loope
sub
sar
(bad)
(bad)
inc
cmp
test
sbb
loopne
popf
iret
lds
daa
and
mov
jmp
xchg
test
jmp
test
mov
sbb
mov
inc
out
inc
jo
xchg
popa
add
xor
mov
sub
movs
jae
adc
sub
aam
mov
ud2
inc
cmp
(bad)
(bad)
push
dec
call
popa
pop
mov
dec
xor
adc
or
sub
mov
daa
(bad)
(bad)
(bad)
call
fisub
fst
retf
adc
pop
and
vfmsubadd132pd
ficom
cmp
mov
(bad)
(bad)
(bad)
(bad)
jmp
sub
pop
adc
ins
and
xor
or
ds
xor
jg
inc
(bad)
(bad)
(bad)
jmp
imul
add
repz
sbb
ja
lock
mov
push
mov
(bad)
dec
xchg
pop
fdivr
inc
lea
sbb
or
sbb
mov
(bad)
(bad)
(bad)
call
outs
test
xor
addr16
add
jmp
rol
int3
or
loopne
fiadd
inc
add
call
pop
ss
je
lods
js
cmp
fldcw
mov
sbb
fiadd
jbe
mov
mov
(bad)
inc
call
mov
and
call
xor
mov
dec
or
(bad)
(bad)
push
or
sub
pop
rol
imul
cld
stc
or
data16
(bad)
(bad)
push
lock
test
leave
fild
jg
test
ret
pushf
loopne
test
retf
pop
pop
in
or
(bad)
(bad)
dec
int3
ins
and
mov
jmp
or
or
pop
(bad)
(bad)
dec
gs
jnp
sbb
jae
pop
xchg
dec
sbb
(bad)
(bad)
fimul
(bad)
(bad)
cli
sub
(bad)
ror
xchg
loopne
push
lds
mov
es
popf
mov
pop
jo
mov
(bad)
(bad)
inc
popf
sbb
xor
(bad)
fisttp
push
adc
cmp
mov
cmp
sbb
(bad)
(bad)
jmp
lds
das
mov
mov
es
fist
pop
and
popa
add
(bad)
(bad)
jmp
cmp
sub
popa
aam
out
pop
arpl
cld
(bad)
shr
mov
add
and
(bad)
(bad)
(bad)
call
into
out
rcr
ficomp
ret
sub
xchg
or
inc
mov
pop
sbb
(bad)
jmp
dec
or
ret
sbb
jbe
jle
sbb
stc
or
sbb
fwait
push
shl
test
outs
daa
ror
sub
or
stos
push
mov
dec
call
push
out
rcr
(bad)
(bad)
(bad)
(bad)
dec
pop
inc
mov
fstp
mov
sub
sub
sub
pop
sub
pop
shl
mov
inc
dec
add
push
jl
ret
pop
test
ins
mov
stos
push
daa
mov
inc
add
jbe
and
jb
xchg
add
jb
jmp
int3
leave
xchg
(bad)
jno
mov
clc
(bad)
(bad)
(bad)
(bad)
out
movs
add
rcl
xchg
mov
mov
imul
adc
xor
(bad)
jmp
push
xchg
fucom
inc
push
(bad)
pop
pop
push
and
fstp
bound
call
push
(bad)
stc
mov
ret
dec
jnp
mov
and
stos
mov
fcomp
pop
or
in
mov
jge
jo
je
icebp
stc
inc
int
cmp
mov
sti
dec
(bad)
retf
mov
mov
mov
mov
out
mov
jb
loope
cmp
dec
stos
retf
lock
cmp
(bad)
(bad)
push
lds
sub
xor
adc
mov
fs
rcl
aam
sbb
dec
(bad)
(bad)
(bad)
push
test
movs
dec
cmp
ins
call
mov
loopne
(bad)
(bad)
(bad)
call
and
mov
xchg
stos
stos
dec
pop
ins
out
mov
cmp
not
lea
call
jp
or
mov
fwait
lods
and
pop
push
jns
rcl
out
adc
(bad)
(bad)
call
adc
retf
fisubr
cmp
jp
jg
push
(bad)
stc
mov
imul
retf
leave
xor
gs
(bad)
(bad)
(bad)
faddp
jne
jmp
mov
and
or
xor
(bad)
mov
movs
adc
(bad)
(bad)
call
push
mov
and
mov
mov
add
imul
(bad)
jmp
test
push
(bad)
clc
and
pop
rol
movs
or
(bad)
or
retf
test
jmp
xchg
push
mov
inc
add
cmp
jg
adc
sub
cmp
push
cmp
(bad)
(bad)
jmp
popf
mov
cdq
lea
cmp
push
mov
sbb
mov
(bad)
(bad)
jmp
ficomp
sub
in
push
jmp
fs
cmp
push
push
push
inc
or
(bad)
inc
add
ss
inc
add
cdq
cdq
shr
ins
xchg
mov
int3
bound
jne
mov
(bad)
(bad)
(bad)
jmp
stos
mov
shl
xor
ins
or
and
int
sub
inc
dec
fidiv
(bad)
(bad)
(bad)
dec
ror
sbb
or
cli
ror
jmp
mov
retf
dec
xor
mov
sbb
xchg
(bad)
(bad)
(bad)
jmp
and
sbb
xor
xchg
and
fmul
clc
ret
dec
fsub
mov
imul
(bad)
(bad)
(bad)
inc
xchg
and
lods
outs
ins
mov
shl
adc
sbb
jmp
(bad)
(bad)
(bad)
push
mov
out
adc
push
(bad)
inc
mov
pop
push
pop
nop
mov
pop
mov
mov
lods
pop
cmps
jno
jnp
(bad)
(bad)
jmp
adc
out
jbe
int
cdq
out
pop
jns
sbb
sbb
sbb
call
mov
push
inc
jne
out
cs
mov
add
or
sub
pop
cmc
data16
out
sub
(bad)
inc
or
sbb
sub
and
sub
sub
(bad)
(bad)
fisttp
mov
pop
dec
cwde
cmp
and
(bad)
ffree
add
pop
call
(bad)
push
div
dec
int3
cmp
mov
inc
push
mov
cmp
inc
cmp
icebp
adc
jne
add
xor
std
adc
and
icebp
cld
mov
(bad)
(bad)
call
xchg
ss
inc
mov
popa
push
cmps
imul
mov
push
xchg
lds
jmp
jmp
mov
cmp
sub
push
stos
(bad)
(bad)
(bad)
call
dec
inc
ficom
lds
lods
and
mov
ror
inc
pop
out
scas
push
or
mov
(bad)
(bad)
call
and
or
sub
push
inc
dec
(bad)
adc
dec
push
lods
lea
pushw
(bad)
call
mov
pop
fnstenv
in
push
sti
(bad)
repz
mov
jmp
(bad)
(bad)
(bad)
ds
add
jb
repz
pop
mov
mov
into
or
xor
rcr
(bad)
(bad)
call
jnp
jo
lahf
sub
xor
mov
jnp
ret
fwait
or
(bad)
(bad)
(bad)
call
pushf
or
jmp
adc
adc
enter
mov
pop
jp
mov
mov
(bad)
(bad)
(bad)
jmp
jl
add
xchg
mov
mov
popf
sub
push
movs
mov
(bad)
mov
(bad)
(bad)
(bad)
jmp
jnp
(bad)
push
stc
inc
gs
es
(bad)
sbb
jecxz
dec
ret
inc
or
fs
imul
(bad)
call
sub
and
lock
call
scas
es
mov
(bad)
push
rcl
movs
push
gs
xor
push
shl
push
lods
mov
xor
test
mov
(bad)
(bad)
jmp
int
sar
pop
popf
lds
int
push
push
dec
mov
fstp
cmp
(bad)
shr
aam
imul
fbld
inc
jmp
fadd
(bad)
(bad)
(bad)
(bad)
jmp
imul
ins
hlt
jne
xchg
push
mov
inc
push
mov
xor
mov
call
mov
sbb
mov
popf
imul
and
mov
fsubr
sbb
mov
int
mov
xchg
retfw
jb
bound
or
or
dec
(bad)
(bad)
(bad)
inc
stos
xchg
imul
ss
in
cs
adc
sbb
dec
and
mov
out
adc
(bad)
(bad)
jmp
xchg
push
ds
lds
into
shl
fidiv
dec
pop
pop
push
js
pop
mov
jo
(bad)
(bad)
(bad)
call
movs
sbb
push
cld
and
sbb
aas
jmp
add
(bad)
(bad)
(bad)
jmp
add
or
test
ins
mov
pop
sbb
jle
scas
loope
xor
xchg
pop
mov
call
ins
cdq
jbe
sbb
(bad)
xchg
(bad)
mov
push
rcr
push
adc
jno
(bad)
(bad)
inc
cmps
data16
xchg
mov
movs
adc
arpl
xlat
xchg
xor
in
int
inc
mov
in
ins
test
aad
add
adc
sub
ins
jno
inc
cmp
dec
(bad)
(bad)
(bad)
push
sahf
xchg
xchg
mov
pop
add
mov
or
(bad)
mov
sub
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
stc
loope
leave
jno
mov
ds
shr
xchg
mov
test
inc
xor
cmp
(bad)
(bad)
(bad)
dec
and
daa
ds
mov
sbb
addr16
mov
or
cs
popa
(bad)
(bad)
(bad)
(bad)
call
(bad)
push
pop
cmp
ins
add
into
push
dec
push
ds
fwait
adc
mov
inc
xor
adc
push
and
ror
push
shl
fild
loop
cs
add
jmp
sbb
xchg
xchg
push
inc
cmp
shl
sbb
xchg
mov
jnp
(bad)
(bad)
(bad)
dec
adc
mov
ja
xor
jl
inc
ds
mov
add
mov
test
(bad)
call
cwde
jmp
mov
sbb
cmps
dec
sub
mov
adc
push
ds
inc
sbb
pop
ja
pop
mov
jecxz
adc
imul
(bad)
(bad)
(bad)
mov
inc
mov
rol
out
push
sbb
and
arpl
mov
imul
fadd
(bad)
(bad)
(bad)
inc
addr16
mov
mov
fstp
mov
push
jnp
cmp
xchg
sbb
or
ins
push
out
xor
adc
jns
mov
sub
pop
push
(bad)
adc
loop
(bad)
(bad)
call
adc
popa
dec
or
mov
in
push
aad
sub
inc
push
(bad)
(bad)
(bad)
(bad)
std
mov
dec
adc
lods
mov
sbb
mov
sbb
push
test
(bad)
(bad)
(bad)
jmp
(bad)
or
cmps
cwde
retf
in
dec
cmp
iret
or
retf
sub
pushf
cmp
jmp
dec
and
loope
pop
stos
mov
adc
xchg
dec
pop
mov
mov
mov
adc
(bad)
(bad)
call
dec
xchg
xor
sub
gs
dec
xchg
cwde
pushf
in
pop
scas
mov
dec
cwde
mov
hlt
sahf
(bad)
(bad)
(bad)
call
sub
rcl
cli
xchg
pop
fmul
and
call
imul
(bad)
call
add
or
retf
call
imul
scas
(bad)
xlat
mov
adc
(bad)
(bad)
inc
sub
lods
push
xchg
jb
jmp
mov
adc
add
mov
(bad)
(bad)
(bad)
dec
or
enter
aaa
imul
or
stos
and
test
(bad)
(bad)
jmp
loopne
(bad)
push
cmps
jb
rcr
loope
cdq
xchg
fbld
repnz
jo
jmp
(bad)
(bad)
dec
sbb
in
add
xchg
sahf
pop
adc
inc
mov
mov
or
cmp
(bad)
(bad)
(bad)
inc
shr
cmps
cmp
inc
(bad)
xor
iret
sbb
xchg
xor
jae
sub
xchg
stos
adc
(bad)
jmp
cmp
cmp
rcr
and
inc
lods
sub
xchg
ja
dec
pop
sub
dec
pop
xchg
sub
cdq
movs
xchg
pop
mov
sbb
xor
mov
call
sub
(bad)
(bad)
(bad)
push
xchg
shl
xchg
and
mov
xor
cmp
xchg
(bad)
(bad)
(bad)
jmp
pop
pop
ins
cs
pop
mov
xor
fldenv
and
mov
or
(bad)
(bad)
(bad)
push
cmc
inc
ins
aam
cmp
mov
or
mov
xchg
or
sub
dec
inc
mov
mov
xor
sub
vmovaps
test
cmps
dec
add
inc
test
shl
(bad)
fcom
or
(bad)
(bad)
(bad)
cmp
xor
nop
add
jbe
push
(bad)
xor
and
arpl
xchg
mov
call
popa
nop
fild
push
inc
test
fbstp
retf
mov
stos
int
inc
push
(bad)
(bad)
(bad)
call
inc
or
fwait
mov
xlat
inc
daa
inc
mov
mov
(bad)
(bad)
inc
div
ret
retf
push
icebp
xchg
fisub
enter
(bad)
(bad)
(bad)
jmp
push
test
sti
xor
xor
and
inc
jb
aam
sahf
pop
xor
(bad)
(bad)
(bad)
jmp
gs
jnp
aad
dec
adc
out
dec
pop
sub
mov
(bad)
cmps
add
mov
clc
std
ret
dec
xor
(bad)
(bad)
push
cwde
ins
xlat
cmc
push
in
mov
inc
jns
mov
fild
dec
pop
lds
data16
xor
add
(bad)
jmp
gs
sub
sub
stos
stos
push
jne
inc
xor
xchg
in
mov
inc
retf
xor
cmps
(bad)
(bad)
(bad)
(bad)
call
xor
or
mov
jle
cs
xchg
xchg
mov
cmp
lea
movs
(bad)
(bad)
(bad)
dec
xor
jp
in
pushf
sub
cmp
inc
xor
enter
mov
adc
es
(bad)
(bad)
dec
out
xchg
inc
scas
nop
jge
in
pop
movs
loop
dec
add
xchg
xchg
push
cdq
rol
or
stos
dec
test
(bad)
(bad)
jp
int
sub
adc
retf
clc
and
mov
inc
pop
imul
(bad)
(bad)
(bad)
call
add
rcl
push
cmp
push
arpl
push
pop
sub
push
jge
push
cmp
cwde
inc
mov
jnp
fisub
lahf
mov
jmp
push
hlt
sbb
movs
sub
arpl
cmp
popa
outs
stos
pop
stos
inc
sbb
sub
mov
xacquire
lock
xor
sahf
cmp
pushf
xor
xor
mov
mov
(bad)
(bad)
(bad)
dec
push
dec
cld
stc
inc
mov
test
xor
enter
out
xchg
add
add
dec
dec
inc
mov
stos
push
popa
cdq
and
retf
sbb
mov
sub
(bad)
in
(bad)
(bad)
(bad)
(bad)
clc
dec
dec
fwait
xchg
push
push
sub
cmp
imul
sub
xor
mov
push
sbb
(bad)
(bad)
dec
mov
xor
add
xchg
push
(bad)
(bad)
fst
sbb
sub
stos
test
pop
fsubr
dec
ss
and
xor
xchg
gs
mov
and
(bad)
(bad)
call
inc
call
mov
fwait
xchg
push
push
test
jmp
mov
inc
loopne
xor
movs
sbb
pushf
popf
mov
adc
mov
pcmpgtw
pop
cmp
inc
adc
mov
jle
sub
mov
int3
aaa
mov
mov
pushf
sbb
(bad)
(bad)
inc
mov
sbb
push
out
add
scas
or
cdq
xor
int
pop
pop
mov
(bad)
(bad)
(bad)
dec
popa
xchg
in
ret
adc
fld
fnstsw
movs
fcom
dec
je
add
(bad)
call
xchg
sbb
popa
retf
je
push
mov
cmp
test
mov
stos
ret
mov
test
(bad)
(bad)
jmp
and
mov
dec
call
dec
icebp
and
or
dec
lods
(bad)
(bad)
(bad)
(bad)
out
lods
dec
sahf
push
adc
cmp
bound
pop
cwde
cmc
cld
out
mov
cmp
movs
aaa
rcl
cdq
pushf
(bad)
(bad)
(bad)
(bad)
out
sbb
add
lahf
inc
add
inc
arpl
inc
jbe
mov
push
jmp
popf
cdq
sub
aaa
fbld
(bad)
(bad)
(bad)
push
xor
mov
ret
adc
jnp
fnstsw
sub
sbb
xchg
(bad)
(bad)
(bad)
jmp
xchg
jl
xor
ficom
out
bound
test
shl
gs
(bad)
(bad)
(bad)
call
cmps
das
pop
out
and
inc
mov
dec
pop
push
and
push
pop
shl
sbb
int
(bad)
(bad)
(bad)
push
mov
stc
lahf
adc
inc
and
jae
(bad)
xchg
(bad)
push
sbb
xchg
cli
in
shl
push
jmp
add
fnsave
push
jne
dec
stos
repz
test
mov
mov
sbb
or
adc
sub
adc
(bad)
(bad)
(bad)
inc
mov
test
mov
jno
cmps
out
mov
mov
dec
lods
sahf
mov
in
nop
jo
(bad)
call
imul
jbe
and
cld
pop
lock
(bad)
(bad)
(bad)
push
push
in
into
sub
xchg
xchg
push
ret
jnp
clc
inc
into
into
push
add
fdivr
push
(bad)
(bad)
(bad)
dec
pop
ins
cmp
ret
sar
push
add
dec
add
(bad)
jmp
cmps
jne
repnz
sbb
popf
dec
xchg
sub
sub
mov
xchg
pusha
add
dec
pop
ins
test
into
cmp
adc
xchg
mov
xchg
stos
into
pushf
dec
sbb
loop
push
pusha
movs
or
(bad)
js
jmp
loope
cmp
sar
cmps
dec
adc
push
add
xchg
add
aad
ret
mov
sar
(bad)
(bad)
(bad)
call
mov
cs
jecxz
test
push
hlt
jl
sub
pop
fidiv
(bad)
(bad)
dec
jl
clc
jbe
sar
mov
cmps
aas
clc
xor
add
jae
test
test
dec
aas
jno
push
data16
test
mov
(bad)
(bad)
(bad)
push
test
mov
in
jmp
movaps
inc
imul
mov
(bad)
(bad)
inc
mov
fwait
pop
out
cld
mov
mov
fadd
bound
push
int
jae
inc
shr
(bad)
(bad)
inc
sub
sub
inc
clc
inc
jmp
inc
hlt
mov
adc
add
add
mov
add
add
add
adc
adc
push
add
pop
adc
pusha
hlt
add
add
add
sub
(bad)
(bad)
(bad)
jmp
dec
data16
xor
mov
popa
pop
adc
sbb
test
push
sbb
(bad)
jmp
jne
push
mov
(bad)
test
mov
xor
addr16
je
rcr
(bad)
(bad)
(bad)
jmp
shl
pop
or
sbb
push
jmp
lds
add
inc
dec
shl
stos
(bad)
(bad)
(bad)
call
daa
nop
js
xor
je
clc
xlat
scas
pop
aad
inc
push
aas
pop
xchg
push
adc
imul
stos
retf
loopne
stos
aam
jno
cmp
mov
cmp
pop
jne
fidiv
push
add
xor
(bad)
idiv
(bad)
(bad)
jmp
in
xchg
mov
fimul
icebp
(bad)
jecxz
jb
push
sbb
sar
sbb
(bad)
(bad)
(bad)
push
fnstsw
aas
inc
outs
and
sbb
mov
inc
rcl
pop
(bad)
(bad)
(bad)
jmp
jle
retf
mov
fiadd
psrld
mov
(bad)
(bad)
(bad)
push
mov
sub
das
lock
add
cld
adc
xchg
mov
lock
adc
add
add
dec
add
add
call
dec
and
pusha
xor
jo
adc
add
pop
(bad)
(bad)
(bad)
dec
adc
jl
into
cld
or
sub
dec
sbb
shl
or
fisubr
js
fstp
pushf
or
dec
xor
push
add
arpl
adc
pop
mov
dec
adc
mov
adc
pop
mov
loop
mov
imul
idiv
(bad)
(bad)
(bad)
mov
mov
sbb
add
push
mov
lods
xor
loopne
and
inc
add
jmp
inc
adc
add
and
(bad)
(bad)
(bad)
cld
mov
aam
stos
lods
push
dec
and
(bad)
and
nop
sub
mov
push
mov
cmp
add
xor
pop
xchg
push
inc
dec
fs
or
stos
mov
(bad)
(bad)
inc
adc
add
jns
lds
push
and
stos
push
jae
sti
inc
cld
and
xor
inc
or
pushf
mov
int3
push
adc
ins
mov
jg
sub
mov
adc
(bad)
(bad)
(bad)
jmp
add
xchg
adc
adc
cdq
adc
enter
add
and
or
pushf
mov
enter
push
arpl
ds
daa
mov
or
nop
push
(bad)
(bad)
(bad)
inc
shl
jae
fldenv
xor
cmp
push
adc
pop
popa
cmp
jnp
inc
sub
(bad)
inc
adc
nop
fxch
xchg
neg
je
push
mov
ficomp
jecxz
mov
dec
pop
int
call
(bad)
(bad)
clc
in
in
or
retf
pushf
out
in
fistp
mov
cmps
fnstcw
sub
adc
int
out
(bad)
(bad)
(bad)
push
sbb
xor
adc
xor
fs
fwait
fwait
aaa
(bad)
fxch
pop
(bad)
(bad)
(bad)
dec
fsubr
popf
cdq
mov
mov
js
dec
stc
ror
outs
ins
fst
(bad)
jmp
fdivr
ret
arpl
or
mov
dec
pop
retf
fs
or
mov
sub
int3
(bad)
(bad)
(bad)
jmp
pop
or
(bad)
shl
adc
push
pop
push
retfw
dec
or
xor
jnp
(bad)
(bad)
(bad)
dec
inc
push
pop
xchg
lock
or
add
jo
rol
in
push
(bad)
in
add
rol
(bad)
(bad)
(bad)
inc
ss
sbb
outs
enter
mov
stos
aaa
inc
xlat
inc
stos
mov
xor
and
(bad)
(bad)
jmp
in
sbb
cwde
mov
arpl
xor
stos
xchg
cmc
cdq
in
push
adc
(bad)
(bad)
inc
xor
push
daa
jp
sub
pop
bound
mov
and
mov
push
fwait
sbb
sbb
in
enter
mov
fisubr
xor
(bad)
(bad)
inc
test
mov
mov
fldenv
ins
ss
xchg
and
lods
and
mov
fwait
dec
ret
and
call
retf
fmul
mov
xor
loop
es
mov
xchg
cmp
pop
mov
(bad)
call
xor
sub
(bad)
sub
es
xlat
ja
jne
add
mov
(bad)
(bad)
dec
pop
and
ins
pop
retf
ror
movs
dec
sub
dec
xor
push
add
sub
adc
(bad)
(bad)
(bad)
out
mov
sub
push
push
retf
call
ror
adc
ror
inc
(bad)
(bad)
(bad)
call
ins
pushf
sahf
push
popa
and
mov
ret
mov
iret
mov
mov
xchg
ins
sbb
(bad)
(bad)
call
cmp
cmps
push
push
outs
icebp
aad
cwde
iret
div
sub
dec
mov
(bad)
(bad)
(bad)
call
test
loop
fs
jno
jnp
cli
sub
sub
scas
mov
(bad)
(bad)
(bad)
fld
xor
(bad)
sub
jge
add
adc
mov
xor
into
mov
push
cmps
pop
cli
adc
push
test
or
jnp
and
mov
add
inc
mov
add
(bad)
out
(bad)
xor
out
adc
inc
adc
add
jg
xchg
or
sti
jg
pop
(bad)
sub
(bad)
(bad)
(bad)
jle
inc
push
xchg
pop
stc
sub
or
sti
(bad)
jp
stos
aad
sub
(bad)
lds
xor
cmc
(bad)
inc
gs
clc
xor
ja
or
in
cld
sbb
loop
add
adc
add
push
cli
add
pop
pop
add
add
add
add
add
xor
inc
push
adc
(bad)
(bad)
push
xchg
mov
adc
xor
shl
and
xor
inc
push
pusha
bound
(bad)
jg
cmps
movs
add
(bad)
cld
inc
push
push
adc
pop
dec
popf
xor
and
cmp
loop
adc
sub
mov
dec
push
xlat
dec
idiv
mov
out
(bad)
(bad)
(bad)
(bad)
inc
imul
fsubr
mov
pop
into
cmc
cmps
inc
sub
and
sbb
(bad)
(bad)
call
enter
mov
imul
imul
adc
clc
hlt
inc
and
fs
push
dec
int
imul
xor
jmp
or
and
aad
bound
xchg
(bad)
(bad)
push
sub
and
xor
sub
pop
add
jnp
std
(bad)
sbb
push
sub
(bad)
(bad)
dec
or
pop
(bad)
xchg
or
cdq
add
or
xlat
inc
adc
pop
stos
pop
dec
adc
mov
(bad)
(bad)
(bad)
jmp
cmp
js
push
fdivr
add
scas
inc
cli
(bad)
addr16
retf
mov
(bad)
(bad)
(bad)
inc
adc
adc
mov
fwait
xchg
add
outs
xchg
aam
push
dec
cmp
(bad)
(bad)
(bad)
inc
dec
jg
lods
jo
and
or
pusha
fld
or
mov
and
(bad)
(bad)
inc
mov
shl
ds
sbb
bound
xchg
mov
mov
jge
sub
and
(bad)
(bad)
(bad)
(bad)
cld
push
ret
in
or
pop
lock
xor
and
test
push
lds
enter
(bad)
(bad)
call
cs
and
ss
mov
xchg
ror
jbe
psubw
jge
(bad)
(bad)
(bad)
call
daa
repz
sub
neg
dec
cli
cmps
nop
jae
dec
add
xchg
push
(bad)
(bad)
(bad)
call
inc
jmp
add
inc
add
cmp
lods
sbb
ror
or
pop
idiv
(bad)
call
xor
cmp
imul
fimul
gs
mov
(bad)
jg
lods
ds
xor
(bad)
test
add
mov
jp
and
inc
(bad)
(bad)
(bad)
jmp
inc
loopne
popf
adc
dec
jmp
pop
lds
mov
push
cmp
(bad)
(bad)
jmp
xchg
out
xchg
test
dec
or
out
and
push
mov
mov
adc
lods
cmps
aas
in
rol
xchg
mov
adc
and
fisttp
rcl
inc
xor
(bad)
(bad)
jmp
sbb
inc
mov
mov
iret
push
test
pop
pusha
add
mov
lds
stos
push
adc
dec
add
mov
xchg
inc
adc
adc
xchg
jle
or
mov
dec
leave
or
(bad)
(bad)
call
xchg
div
data16
or
loope
cmp
add
push
inc
and
sbb
ror
jmp
dec
mov
inc
jo
mov
xchg
jp
xor
pop
inc
mov
(bad)
jmp
and
ret
push
pop
inc
sbb
mov
sbb
or
sbb
lahf
arpl
(bad)
(bad)
inc
cmp
neg
pusha
fsub
inc
inc
xor
mov
add
mov
(bad)
(bad)
(bad)
push
ja
mov
nop
cli
jo
icebp
daa
nop
loop
sbb
mov
js
(bad)
(bad)
(bad)
inc
adc
mov
add
or
hlt
sbb
ja
int
es
inc
push
pusha
adc
xor
test
retf
push
lock
inc
int3
hlt
inc
sti
popa
mov
ins
sbb
(bad)
(bad)
(bad)
(bad)
in
push
mov
sub
mov
shl
arpl
sub
dec
iret
(bad)
(bad)
(bad)
call
sub
mov
sti
mov
xchg
pop
mov
int
jb
out
(bad)
(bad)
(bad)
fcomp
into
and
shl
inc
cmps
dec
adc
dec
add
inc
(bad)
(bad)
(bad)
call
sti
xchg
add
or
cmp
jl
adc
fwait
xor
mov
jmp
cmp
or
sub
repnz
fstp
pop
adc
out
dec
div
(bad)
(bad)
push
pop
mov
aad
std
jno
lods
cld
jl
mov
ret
test
xchg
js
cmp
scas
clc
mov
or
mov
ror
push
lahf
stos
xchg
es
bound
(bad)
(bad)
(bad)
(bad)
call
mov
pop
fbld
mov
add
sub
loope
mov
(bad)
(bad)
dec
sub
xchg
mov
fld
(bad)
leave
push
inc
and
mov
(bad)
dec
dec
jne
ret
aas
adc
das
xchg
ror
xchg
xchg
mov
cmp
cli
push
push
stos
(bad)
(bad)
(bad)
jmp
xchg
cmp
ret
not
mov
outs
not
xlat
and
fwait
lahf
(bad)
sbb
and
addr16
(bad)
jg
scas
in
adc
dec
pop
repz
sbb
mov
xor
imul
outs
scas
xchg
cs
(bad)
(bad)
push
call
push
cmps
aam
aad
outs
adc
sahf
je
or
and
cdq
pusha
(bad)
(bad)
(bad)
push
out
mov
lds
xor
dec
xor
add
inc
push
mov
(bad)
(bad)
(bad)
dec
cmc
push
add
xor
xchg
pop
mov
xor
popf
pop
int3
cli
jo
sub
loop
xchg
out
sub
pop
mov
repnz
jmp
mov
or
(bad)
(bad)
(bad)
std
cdq
mov
cmps
add
ja
mov
jecxz
test
sub
scas
mov
pop
adc
ror
inc
(bad)
(bad)
(bad)
(bad)
fimul
out
aaa
xor
cmp
mov
aad
nop
cdq
lds
loopne
pop
(bad)
(bad)
(bad)
(bad)
call
in
(bad)
enter
les
xchg
cli
bound
out
in
scas
xor
pop
xor
cmp
mov
into
dec
or
dec
pop
cdq
push
inc
sbb
int
mov
cli
and
mov
jae
adc
(bad)
(bad)
(bad)
push
inc
ret
push
repz
imul
je
pop
aas
test
fs
jmp
mov
push
into
mov
(bad)
(bad)
(bad)
dec
out
cmp
popa
jle
lods
push
jns
adc
out
jl
(bad)
mov
(bad)
(bad)
(bad)
jmp
dec
sti
inc
jecxz
call
push
sub
int3
add
sub
(bad)
push
inc
repz
adc
int
(bad)
outs
bound
je
cmp
fist
sub
ds
std
jb
xor
(bad)
(bad)
(bad)
jle
rol
mov
add
sbb
lock
cmp
lods
sbb
add
stc
(bad)
(bad)
(bad)
dec
call
mov
lahf
jp
rcr
mov
addr16
cld
pusha
(bad)
jge
aas
enter
add
sbb
rol
(bad)
(bad)
(bad)
jmp
daa
cdq
inc
in
inc
inc
icebp
fiadd
sti
loopne
es
jg
test
fdivrp
(bad)
(bad)
call
push
movs
add
cmp
inc
adc
cmp
das
inc
pop
add
xchg
add
sbb
(bad)
(bad)
(bad)
mov
cmp
sbb
and
cli
xor
sub
mov
(bad)
(bad)
(bad)
inc
cmps
out
sbb
pop
xor
(bad)
out
cmp
pop
cli
sub
call
inc
shl
mov
mov
inc
(bad)
in
inc
or
repz
cmp
jnp
(bad)
(bad)
(bad)
jmp
mov
cmp
pusha
idiv
mov
and
xchg
(bad)
(bad)
(bad)
inc
jb
push
push
fwait
jne
fnstsw
mov
mov
and
(bad)
push
adc
loop
mov
push
jmp
inc
or
pop
stos
cmps
xchg
shl
(bad)
(bad)
(bad)
call
out
dec
cdq
lahf
xor
mov
test
inc
leave
dec
add
mov
loope
sbb
sub
push
ret
mov
out
mov
dec
dec
loope
fld
(bad)
(bad)
call
ss
xor
cmp
out
add
popa
les
(bad)
lock
xchg
sub
fimul
(bad)
(bad)
(bad)
call
jmp
lds
dec
lock
inc
les
ror
inc
push
sti
mov
mov
es
pop
cmps
pop
aaa
inc
pop
cmp
inc
iret
pushf
repz
pop
aad
jae
(bad)
(bad)
jmp
or
fsub
mov
mov
inc
jg
sub
mov
mov
(bad)
(bad)
jmp
call
ds
jns
jmp
jb
cli
jmp
in
(bad)
(bad)
(bad)
inc
push
xor
out
inc
sbb
call
cmp
int
(bad)
(bad)
jmp
ins
sub
cmp
shl
or
daa
cdq
call
das
out
cmp
inc
repnz
(bad)
(bad)
(bad)
jmp
xchg
aaa
push
lock
les
adc
inc
inc
ret
movs
and
pop
mov
dec
and
sub
jnp
clc
mov
sahf
pop
call
aam
(bad)
(bad)
(bad)
call
addr16
cmps
push
add
inc
ds
xchg
rol
pop
push
das
pcmpeqb
dec
cdq
lahf
shl
sar
(bad)
(bad)
call
add
sub
sub
iret
mov
xor
push
ret
xchg
outs
add
test
(bad)
(bad)
(bad)
inc
out
add
pusha
adc
dec
mov
jb
cmp
fst
rcl
mov
pop
ins
pop
rol
(bad)
(bad)
jmp
or
xchg
cmc
or
add
cmc
bound
rcr
mov
push
sbb
(bad)
(bad)
(bad)
jmp
aaa
lock
pusha
sub
enter
push
inc
fwait
jb
cwde
adc
mov
(bad)
call
mov
and
hlt
or
push
mov
scas
out
mov
jns
(bad)
(bad)
(bad)
dec
jns
repz
mov
push
cmp
js
pop
rcr
xor
icebp
aad
jno
ins
(bad)
mov
sbb
sbb
fstp
jae
retf
mov
mov
mov
jmp
stos
pop
dec
xor
(bad)
cmp
imul
aad
xor
imul
icebp
xchg
clc
dec
xor
cmp
(bad)
(bad)
(bad)
(bad)
jns
pop
addr16
adc
sub
jbe
je
retf
(bad)
xchg
pop
dec
ret
push
mov
(bad)
(bad)
(bad)
push
or
ins
stos
jmp
dec
lahf
(bad)
mov
or
xchg
or
(bad)
(bad)
inc
rol
aas
jg
scas
and
pop
cli
xor
mov
(bad)
fldlg2
inc
inc
push
gs
(bad)
(bad)
inc
add
cld
pusha
or
add
fs
imul
js
add
inc
outs
push
add
push
xchg
push
inc
push
mov
push
js
je
jb
add
(bad)
(bad)
jg
add
gs
imul
dec
push
dec
add
inc
gs
jne
ins
push
popa
je
dec
mov
ins
gs
add
push
gs
je
dec
popa
outs
fs
gs
xor
and
jo
inc
outs
outs
lock
push
(bad)
out
shl
dec
outs
fs
outs
ja
outs
or
add
push
push
sti
imul
push
je
jb
jne
dec
outs
outs
sti
ja
jae
mov
popa
ins
imul
push
popa
addr16
xor
dec
inc
dec
or
cmp
push
inc
push
add
add
je
ja
in
pop
jae
inc
jb
sbb
imul
pop
outs
outs
gs
jb
cdq
jae
inc
add
imul
int3
fnstsw
popa
xchg
cli
or
std
outs
ins
jo
jb
and
dec
inc
dec
popa
jo
cmp
arpl
pusha
sbb
int
mov
jae
jb
adc
dec
inc
dec
inc
mov
mov
and
gs
or
or
push
push
outs
ins
popa
jo
mov
ret
jmp
jae
inc
jb
outs
in
dec
or
inc
jb
cmp
outs
cdq
jnp
imul
add
inc
scas
jecxz
out
inc
add
push
popa
jb
and
inc
cmp
jb
jne
jb
sbb
outs
push
adc
jne
gs
adc
jmp
push
ins
gs
add
rol
iret
add
pop
inc
fs
jae
test
mov
jbe
adc
push
popa
imul
je
jo
gs
cs
mov
xchg
dec
cmp
cmp
ins
inc
ins
ins
outs
arpl
add
pop
jl
xor
sub
pop
push
mov
sub
jl
inc
mov
inc
inc
xchg
dec
add
ds
jo
gs
fist
arpl
jns
dec
jo
outs
ds
inc
add
or
xchg
add
aam
adc
dec
je
js
inc
jne
push
rol
aas
add
push
gs
in
sbb
add
sbb
aas
fabs
popa
cmp
imul
ret
fld
outs
enter
mov
and
arpl
inc
jb
jbe
les
and
dec
outs
imul
inc
gs
arpl
outs
adc
jb
ins
xor
add
data16
test
outs
xchg
bound
les
repz
in
in
jmp
bound
jg
xchg
push
imul
test
das
jb
in
dec
mov
sub
sbb
ret
or
xchg
shl
sbb
cmp
imul
mov
dec
jae
outs
jb
cwde
loopne
ins
aaa
jne
loopne
jae
jg
cwde
rol
ds
in
mov
add
add
push
ins
adc
jl
cli
loopne
dec
xor
inc
je
bound
out
adc
mov
add
adc
or
jl
outs
outs
addr16
jo
cld
pop
jmp
gs
inc
outs
jae
mov
ret
ss
imul
dec
and
jo
and
dec
outs
jbe
adc
fmul
xchg
push
gs
sti
rcr
inc
ins
jne
push
data16
and
pop
ret
and
outs
cmp
imul
outs
fs
or
popf
scas
pop
dec
inc
xchg
jne
jo
je
gs
(bad)
jmp
jne
unpckhps
push
imul
je
add
pop
or
push
inc
mov
jo
sbb
push
add
add
jae
or
xlat
ins
mov
add
dec
imul
daa
push
inc
dec
adc
cmp
out
mov
adc
nop
cmp
jo
sbb
fs
xor
and
(bad)
out
cmp
add
je
push
outs
push
imul
push
ror
push
outs
push
fcom
sbb
or
xor
and
syscall
sti
pop
dec
out
dec
gs
and
inc
ret
ins
pop
je
sbb
mov
imul
pop
jne
gs
xor
sub
outs
bound
add
gs
gs
outs
dec
outs
arpl
es
sub
or
imul
scas
cdq
sbb
pop
bextr
and
sbb
std
call
dec
jmp
pop
and
or
jp
jo
arpl
imul
popa
ins
adc
adc
outs
test
ins
sub
and
dec
push
js
pop
out
jge
gs
mov
inc
js
xor
and
cmp
icebp
rol
stos
push
outs
jb
imul
not
push
bts
sbb
gs
call
push
outs
outs
ins
sbb
xor
popa
dec
inc
fcomip
jo
push
imul
arpl
gs
gs
add
fst
jae
div
adc
stos
int
add
adc
icebp
ror
pushf
sti
xor
push
outs
jb
sub
shl
inc
pop
sbb
je
add
popa
out
or
jae
sbb
lock
cmc
jne
cmp
or
(bad)
or
iret
adc
gs
push
outs
jb
dec
je
ins
fisubr
xor
inc
(bad)
aad
or
or
pusha
loope
or
es
inc
popa
jo
pop
and
enter
in
rol
test
or
push
gs
inc
xor
adc
mov
fs
stos
jp
pusha
xor
mov
fs
cwde
jo
(bad)
ins
push
push
jb
outs
jae
arpl
ret
je
or
push
shl
push
inc
rcl
inc
retf
cli
retf
or
je
sti
sub
pop
aam
xor
cmps
cs
dec
cmc
jb
loop
loop
pop
nop
addr16
retf
bound
xor
pop
call
fidiv
pop
movs
mov
call
sbb
and
in
fmul
not
sbb
sub
xor
shl
movs
jmp
xchg
inc
ret
jg
jae
jb
outs
sbb
pop
shl
test
dec
sub
movs
push
push
sbb
shl
or
dec
add
rcl
mov
adc
push
dec
jbe
jb
popa
or
enter
out
(bad)
hlt
std
xchg
push
ja
je
push
call
add
add
or
bound
(bad)
mov
mov
jae
outs
inc
arpl
ret
jne
fs
pop
adc
gs
pop
mov
bound
sub
mov
fcom
fs
inc
add
je
arpl
dec
into
xor
leave
test
pop
lods
push
in
dec
gs
and
pop
adc
mov
adc
sbb
xor
jb
dec
imul
xchg
and
mov
mov
add
lds
scas
xor
imul
jp
xchg
jne
sbb
cmp
add
pop
je
frstor
push
outs
imul
jbe
addr16
sub
aaa
in
mov
push
outs
mov
xchg
in
imul
push
or
or
inc
icebp
stos
push
sbb
adc
sub
je
push
and
jle
jb
ins
retf
sbb
(bad)
movs
mov
cwde
inc
xchg
adc
scas
inc
arpl
jo
loopne
arpl
retf
push
adc
cwde
cli
push
popa
arpl
(bad)
pop
fs
lock
push
sub
xchg
jb
adc
inc
mov
dec
je
sub
cmp
add
mov
jecxz
test
ret
cmps
sti
aaa
icebp
jne
sub
popf
add
sub
mov
out
icebp
inc
gs
call
aas
mov
jns
je
jae
int3
pop
add
lock
popa
jb
sbb
cmp
bound
adc
and
bound
aaa
loope
pop
(bad)
and
rcr
(bad)
in
mov
jge
jb
jmp
sbb
aaa
xchg
ror
lods
mov
outs
sti
arpl
push
fistp
imul
outs
ins
sub
xor
inc
inc
fnstenv
cmp
mov
imul
push
push
aam
dec
add
pop
jo
je
cmp
out
push
pop
adc
pop
mov
imul
xchg
cli
dec
inc
js
mov
loopne
imul
arpl
lock
xchg
lahf
inc
pusha
push
add
inc
ffreep
gs
imul
jae
sub
je
mov
push
out
ror
jo
sahf
xor
push
dec
jmp
das
push
push
ja
fdivr
iret
data16
inc
dec
push
dec
inc
push
dec
xlat
adc
outs
gs
aas
add
dec
cdq
xor
inc
ins
jo
popa
inc
jl
out
or
pop
adc
scas
inc
outs
lods
ja
stos
sbb
dec
popa
gs
fs
int3
(bad)
xor
popa
jae
xchg
and
inc
jl
je
ret
mov
(bad)
js
inc
ins
popa
outs
imul
or
js
outs
push
outs
fs
(bad)
xor
popa
or
cmps
fadd
dec
outs
dec
and
mov
cmps
imul
inc
aaa
push
jo
outs
je
ins
gs
jmp
mov
(bad)
dec
add
or
call
add
or
(bad)
mov
(bad)
dec
add
add
inc
add
xchg
add
xchg
add
dec
add
jo
ins
das
push
gs
loopne
push
push
retf
sub
pop
mov
cs
dec
ja
es
sbb
outs
jb
scas
jp
sbb
jp
je
jnp
lods
and
inc
mov
push
(bad)
cmps
sti
xor
add
xchg
cmp
sbb
push
nop
outs
adc
add
popa
xor
lock
mov
ins
int3
sbb
shr
add
pushf
mov
inc
push
jge
ja
push
push
je
mov
bndstx
inc
ins
sbb
xchg
sbb
dec
arpl
mov
retf
es
popa
jns
dec
mov
inc
sub
dec
inc
and
frstor
xor
sub
lods
data16
push
(bad)
pop
pop
data16
mov
int3
out
cdq
add
clc
inc
jae
or
pop
adc
or
call
jl
shl
xor
push
rcl
pop
mov
sbb
push
jae
add
test
jecxz
jo
inc
xor
arpl
sub
ja
add
push
popa
imul
jne
outs
arpl
fdiv
aaa
jmp
sub
or
push
mov
(bad)
addr16
push
arpl
outs
push
outs
sub
push
add
(bad)
aaa
je
outs
addr16
rcl
pop
sbb
jb
loop
jb
jl
cwde
lock
jae
in
push
xor
stc
jb
shr
push
test
push
pop
and
gs
jae
popa
addr16
pusha
pop
or
ins
ja
in
or
cmp
or
cs
lock
add
mov
in
add
pop
mov
xchg
or
ds
popa
ins
ins
dec
or
cmp
jne
and
cmp
xor
je
mov
pop
ror
outs
sar
loopne
arpl
ins
xchg
jb
add
push
push
xor
xor
in
or
out
and
dec
cmps
outs
gs
mov
fisttp
je
push
inc
xor
adc
push
gs
gs
and
(bad)
test
imul
jecxz
jbe
cmp
aas
ins
mov
data16
jne
dec
jo
mul
sbb
dec
aaa
inc
fs
cs
and
sub
add
xor
(bad)
in
or
stos
cmp
jae
xor
sub
push
mov
or
(bad)
je
ins
imul
cmova
data16
ror
add
and
(bad)
cmp
pop
dec
add
lock
inc
or
(bad)
add
not
or
adc
or
add
or
add
(bad)
(bad)
(bad)
call
or
dec
mov
jl
sbb
adc
adc
adc
or
dec
cmp
or
pop
and
out
cs
(bad)
(bad)
push
sbb
or
and
add
or
cmp
xor
inc
add
xor
or
push
add
xchg
xor
push
lock
add
sbb
sub
lock
sub
and
add
push
adc
sub
xor
and
adc
add
pop
aaa
and
sbb
(bad)
inc
sbb
adc
and
lock
add
push
or
lock
lock
add
into
push
push
push
dec
or
(bad)
(bad)
(bad)
inc
push
xor
js
push
lock
add
mov
and
pop
and
pop
js
or
mov
dec
mov
dec
(bad)
lock
add
lock
lock
add
add
in
add
imul
std
call
test
adc
xor
push
adc
add
push
adc
adc
sbb
(bad)
(bad)
(bad)
cmp
sbb
adc
es
cs
cmps
push
lock
hlt
add
sbb
(bad)
(bad)
(bad)
jmp
dec
adc
sub
sbb
dec
lock
inc
sub
xchg
pop
pop
sbb
adc
pop
(bad)
(bad)
(bad)
out
sub
daa
and
das
adc
add
and
sbb
aaa
adc
or
(bad)
(bad)
(bad)
jmp
mov
ss
xor
xor
out
das
mov
cmp
and
add
(bad)
push
sahf
xor
xor
or
sbb
add
push
xor
add
adc
xor
xor
xor
mov
add
aam
adc
loope
inc
in
lock
sbb
mov
add
or
rcr
sbb
sub
sub
cmp
xor
xor
(bad)
(bad)
(bad)
mov
stc
add
fistp
jmp
lock
lock
add
adc
and
call
loopne
adc
jbe
lds
cs
add
sbb
xor
(bad)
lock
(bad)
jmp
lock
inc
adc
add
adc
adc
adc
adc
pop
push
(bad)
(bad)
(bad)
call
mov
jne
pop
pop
ins
pop
lods
pop
mov
mov
rol
adc
push
pop
push
push
mov
xor
(bad)
push
xor
add
xor
xchg
add
adc
sub
push
(bad)
(bad)
(bad)
call
aas
xor
sub
jb
push
test
cmps
xor
push
push
dec
push
mov
push
adc
mov
(bad)
(bad)
dec
push
push
adc
or
sub
sub
sub
inc
sbb
inc
lock
add
push
cmc
add
imul
push
and
pop
adc
adc
adc
adc
adc
and
and
(bad)
dec
cdq
xor
inc
jbe
dec
push
sub
sbb
sbb
inc
add
lods
add
not
and
sbb
pop
sbb
and
pop
adc
jge
xor
ja
cwde
jb
(bad)
(bad)
dec
adc
ds
push
push
movs
sub
adc
sbb
and
(bad)
(bad)
call
inc
adc
inc
sbb
and
adc
inc
push
push
push
ss
inc
xor
cmp
adc
inc
push
pop
(bad)
(bad)
(bad)
jmp
jbe
es
cmp
inc
adc
mov
xor
pusha
adc
adc
pop
inc
mov
sbb
retf
mov
push
call
mov
add
pop
push
lock
jg
ror
dec
lock
add
lock
add
dec
add
mov
lock
add
popa
add
lock
add
ret
std
test
xchg
sbb
loope
adc
fs
sub
add
(bad)
(bad)
(bad)
push
dec
add
pop
lock
add
sub
dec
mov
push
fild
outs
push
adc
xor
mov
(bad)
(bad)
dec
aaa
sbb
inc
inc
xchg
push
adc
push
aaa
push
or
sub
sub
movs
bound
adc
push
sbb
and
test
lock
add
and
cmp
or
pop
pop
push
jnp
pop
adc
pop
(bad)
(bad)
(bad)
inc
or
js
lock
or
xor
mov
dec
adc
add
pop
(bad)
(bad)
inc
push
add
adc
push
sbb
or
sbb
and
add
lock
xor
adc
sbb
or
adc
or
sahf
add
or
(bad)
out
fdivrp
sbb
sbb
push
daa
sbb
imul
add
(bad)
(bad)
(bad)
jmp
dec
adc
push
mov
ds
arpl
push
sub
pop
push
cmp
or
pop
push
pop
push
push
sub
xor
inc
cmp
cmp
add
cwde
pop
(bad)
(bad)
(bad)
mov
sub
inc
lock
add
sbb
jge
lock
adc
adc
pop
adc
(bad)
(bad)
inc
jle
jne
sbb
sbb
xchg
sbb
and
or
sub
sub
out
(bad)
call
sbb
addr16
xor
pop
cmp
addr16
adc
(bad)
(bad)
(bad)
mov
imul
adc
jg
sub
adc
push
dec
test
(bad)
(bad)
(bad)
(bad)
cmp
inc
jg
cmp
mov
add
adc
cmp
jbe
sbb
mov
(bad)
(bad)
jmp
and
xor
aaa
xor
xor
and
adc
jge
pop
and
push
pop
sti
(bad)
(bad)
call
pop
adc
lock
push
or
push
push
push
push
lock
aaa
sub
xor
daa
add
jmp
movs
lock
mov
sbb
pop
push
inc
lock
inc
sbb
inc
dec
call
pop
and
fadd
pop
lock
add
dec
lock
add
xor
jl
pop
adc
adc
add
inc
add
(bad)
push
sub
adc
adc
sub
add
adc
adc
mov
inc
cmp
adc
adc
add
jmp
or
pop
jbe
jns
lock
add
adc
or
je
or
mov
pop
cmc
(bad)
in
dec
add
cmp
xor
cs
push
leave
pop
movs
(bad)
dec
lahf
add
or
pop
leave
adc
or
repnz
sbb
pop
adc
jns
xchg
aaa
sbb
cmp
cmp
add
cmp
(bad)
xor
mov
imul
lock
add
(bad)
(bad)
call
add
adc
push
test
push
adc
adc
cmp
add
(bad)
(bad)
dec
pop
inc
inc
lock
add
sub
aaa
aaa
or
xor
and
popa
fs
adc
or
(bad)
adc
sbb
and
sbb
daa
adc
add
adc
sbb
(bad)
push
(bad)
pop
adc
in
adc
outs
adc
adc
adc
std
jmp
(bad)
mov
or
push
dec
test
and
add
mov
sub
or
prefetchwt1
or
ud2
sub
(bad)
mov
push
adc
pop
pop
push
add
lock
add
pop
mov
or
push
push
and
pop
(bad)
(bad)
(bad)
push
mov
and
push
adc
sbb
mov
inc
and
stos
lock
cmp
jo
inc
sbb
adc
or
add
xor
add
pop
adc
pop
or
(bad)
(bad)
(bad)
push
xor
add
add
or
sub
dec
sbb
and
ds
add
mov
(bad)
(bad)
(bad)
and
pop
mov
adc
sbb
aas
aas
cs
(bad)
(bad)
(bad)
dec
push
push
sub
and
and
ret
or
or
pop
adc
push
xor
push
push
fild
call
push
inc
and
add
cmp
sbb
sub
jg
push
or
cmp
adc
push
or
and
and
and
pop
or
or
(bad)
(bad)
inc
and
xor
inc
or
or
inc
adc
and
gs
(bad)
(bad)
inc
or
push
push
sub
pushf
sbb
jbe
inc
imul
and
pop
push
jne
inc
adc
outs
clc
(bad)
push
pop
xor
sbb
sbb
sbb
pop
cmp
push
and
pop
xchg
sbb
pop
and
cmp
(bad)
(bad)
jmp
sbb
mov
inc
test
pop
cmp
sub
das
(bad)
(bad)
(bad)
jmp
sbb
ins
fcomp
daa
cmp
adc
adc
or
sbb
sbb
sbb
xor
(bad)
(bad)
call
pop
pop
and
push
adc
adc
adc
push
inc
and
scas
push
sbb
(bad)
(bad)
call
jns
push
and
push
xor
adc
das
fs
inc
and
adc
pop
add
push
(bad)
(bad)
push
test
lock
adc
adc
push
adc
adc
xor
or
(bad)
(bad)
call
sub
xor
imul
inc
mov
push
or
aas
adc
dec
scas
adc
jb
or
mov
(bad)
(bad)
jmp
xor
push
add
or
adc
adc
sub
sub
(bad)
(bad)
(bad)
inc
adc
cmp
and
adc
adc
mov
pop
pop
popf
adc
dec
(bad)
(bad)
call
xor
add
pop
sbb
sbb
pusha
sbb
aaa
xor
jmp
pop
xor
add
adc
popa
sbb
sub
jl
jg
(bad)
(bad)
(bad)
push
push
sbb
push
cmp
sub
adc
pop
add
sub
std
(bad)
push
sub
inc
adc
sub
cmp
gs
push
adc
aas
adc
cmp
call
or
or
or
add
int
and
push
jno
daa
sub
pop
sub
(bad)
call
call
or
je
pop
pop
adc
push
test
(bad)
inc
inc
jp
xor
add
sub
outs
das
popf
adc
call
sub
cmp
push
and
sbb
adc
and
push
sbb
push
sbb
or
(bad)
(bad)
call
pop
push
push
add
add
pop
sbb
sub
xor
das
sbb
adc
add
inc
push
ud2
and
sbb
int3
cs
bound
imul
adc
adc
or
sub
(bad)
call
adc
daa
sbb
adc
inc
xor
or
jbe
xor
adc
sahf
add
(bad)
(bad)
call
or
adc
sub
or
pop
xor
xchg
add
inc
data16
sub
or
std
call
cmp
es
test
cmp
push
xor
push
aaa
and
(bad)
inc
sub
lea
or
or
pop
inc
inc
or
lock
pop
or
(bad)
(bad)
(bad)
jmp
ds
jne
pop
pop
dec
daa
shl
adc
and
lock
add
(bad)
(bad)
(bad)
call
push
adc
adc
adc
adc
xor
lock
lock
inc
adc
out
sub
dec
sbb
adc
(bad)
push
pop
inc
and
sub
adc
adc
sbb
lea
and
or
(bad)
jmp
or
adc
push
add
adc
inc
push
sbb
inc
(bad)
(bad)
rdtsc
pop
jns
(bad)
(bad)
dec
or
lock
add
inc
sub
xor
pop
or
pop
sbb
rcl
dec
loop
jg
ficomp
push
sbb
and
sub
cmp
ss
inc
and
(bad)
(bad)
out
popa
inc
inc
or
adc
cmp
inc
or
or
pop
inc
or
push
lock
xor
sbb
lock
(bad)
mov
sbb
add
push
cmp
sbb
adc
and
das
xchg
and
add
adc
xor
or
pop
and
jns
icebp
mov
pop
sbb
add
or
mov
pop
sub
(bad)
(bad)
call
push
pop
adc
daa
adc
sbb
xor
push
sbb
sbb
cmp
mov
(bad)
fistp
xchg
adc
and
add
xor
jae
(bad)
(bad)
(bad)
call
sub
push
or
adc
pop
adc
adc
inc
mov
adc
nop
pop
adc
femms
(bad)
(bad)
(bad)
jmp
and
xor
lds
adc
pop
sbb
sub
cmp
adc
push
sbb
adc
dec
loope
adc
adc
lock
lock
sbb
and
or
dec
push
inc
lock
sbb
lds
or
cli
(bad)
dec
pop
sbb
cmp
or
xlat
and
lods
push
sar
(bad)
enter
adc
or
sbb
add
lock
das
xor
adc
dec
sub
call
aaa
xor
or
mov
cmp
pop
push
or
out
mov
pop
lock
sbb
cmp
les
rcl
adc
imul
mov
jge
int
pop
xor
xchg
fld
lock
lock
add
les
fdiv
xor
das
and
adc
je
adc
adc
adc
pop
sbb
imul
and
sub
das
cmp
sbb
push
or
ds
dec
(bad)
(bad)
out
loopne
rcr
lock
or
sub
pop
das
lock
add
inc
(bad)
(bad)
(bad)
dec
adc
sbb
dec
inc
sub
and
mov
adc
and
xor
cmp
call
das
inc
sub
dec
add
aad
or
hlt
call
stos
or
(bad)
(bad)
dec
or
lock
xor
or
les
pop
or
push
loopne
cwde
add
(bad)
(bad)
call
sbb
sbb
and
push
lds
sbb
jle
and
jbe
out
call
jp
lock
sub
imul
scas
cmps
add
test
xor
outs
or
ss
adc
lock
(bad)
dec
add
adc
or
push
ins
xor
pop
and
(bad)
movups
adc
jns
and
pop
(bad)
sbb
pop
(bad)
(bad)
jmp
sti
add
and
adc
and
push
pop
push
inc
adc
pop
lock
(bad)
(bad)
inc
cmp
sbb
sbb
adc
or
push
or
xor
dec
sbb
push
or
xor
sbb
adc
daa
cs
xor
sbb
lock
daa
adc
or
push
and
push
add
push
or
or
adc
adc
sub
xor
daa
sbb
loope
mov
lock
(bad)
call
(bad)
lock
lock
add
push
sub
add
lock
es
(bad)
jmp
add
aaa
add
inc
daa
aas
lock
add
nop
lock
add
(bad)
(bad)
(bad)
push
cmp
outs
jo
pusha
jae
test
mov
sbb
out
(bad)
jmp
nop
lock
add
pusha
add
das
or
sysexit
or
sub
lock
(bad)
call
xor
lock
lock
add
ss
and
lock
add
sbb
adc
push
jmp
and
aas
adc
inc
push
push
pop
adc
gs
ja
sub
ins
lock
(bad)
(bad)
inc
or
or
cmp
loop
push
pop
push
add
xchg
cmp
xor
lock
(bad)
out
call
or
adc
adc
lock
add
pop
(bad)
(bad)
(bad)
jg
add
sbb
xor
fimul
fmul
lock
lock
cmp
push
or
lock
sbb
ffreep
out
or
push
retf
jp
lods
sbb
mov
outs
cmp
or
idiv
mov
dec
jns
(bad)
and
lock
or
sbb
test
(bad)
(bad)
jg
retf
add
add
aas
aaa
inc
inc
inc
sbb
adc
sub
pop
sub
(bad)
call
lock
add
inc
in
dec
lock
add
lock
lock
(bad)
(bad)
(bad)
inc
shl
mov
mov
add
fs
pusha
pusha
jo
lock
add
or
pop
jae
clc
(bad)
jmp
push
jle
xchg
or
mov
xor
jo
adc
lock
or
(bad)
cmp
adc
out
adc
add
adc
(bad)
call
sbb
jl
add
or
or
adc
out
loopne
dec
push
or
adc
sbb
cmp
or
or
or
add
pop
aas
(bad)
(bad)
mov
(bad)
pop
sbb
and
and
push
or
or
sbb
and
jecxz
(bad)
push
cmp
sbb
or
or
or
or
or
push
push
clts
push
adc
push
in
sbb
mov
sub
or
push
fdivr
add
outs
rol
add
lock
add
cmp
lock
add
cmp
lock
add
daa
lock
or
push
adc
cmp
rol
in
add
adc
jl
(bad)
(bad)
push
sub
push
or
push
ud2
xor
jge
lock
or
jbe
cdq
and
jmp
pop
sbb
rol
loop
dec
or
or
or
sbb
(bad)
(bad)
call
adc
lock
adc
dec
pop
dec
mov
adc
jbe
and
adc
dec
mov
xor
(bad)
(bad)
push
and
leave
add
jp
mov
outs
add
jns
fsubrp
or
pop
push
add
pop
inc
pop
(bad)
call
adc
add
xor
lock
and
xor
clc
(bad)
push
frstor
or
or
add
or
ins
fild
inc
lock
add
nop
add
rol
lock
add
and
(bad)
(bad)
out
call
lock
add
cmp
lock
add
lock
push
sbb
mov
xor
lock
or
lock
and
sub
pop
pop
(bad)
(bad)
fbstp
adc
movs
adc
rol
or
mov
lock
jmp
dec
or
sub
inc
add
sbb
adc
lock
add
push
inc
dec
xchg
in
(bad)
xor
out
adc
sbb
cmp
adc
adc
icebp
(bad)
(bad)
push
xchg
add
add
dec
mov
mov
cmp
mov
bndstx
(bad)
fbstp
fwait
adc
jb
adc
adc
lock
add
(bad)
(bad)
icebp
imul
outs
jp
js
jg
rol
or
std
(bad)
mov
add
or
sub
add
adc
push
mov
push
push
lock
cs
and
add
adc
adc
mov
pop
adc
or
sysret
out
(bad)
out
jmp
daa
and
pop
adc
or
lahf
ins
or
adc
(bad)
cmp
xor
push
jns
fs
add
mov
(bad)
or
or
retf
push
aaa
pusha
addr16
pushw
xchg
or
jbe
(bad)
out
and
pop
lock
pop
or
push
xchg
sbb
xor
unpckhps
cmp
push
push
in
add
daa
adc
sbb
adc
xor
or
adc
add
lock
add
(bad)
out
std
lods
and
sub
xchg
lsl
cmp
dec
inc
push
push
add
add
xchg
push
push
jne
inc
imul
(bad)
(bad)
inc
lock
add
or
push
push
pop
or
pop
push
or
cmp
pop
setbe
adc
aaa
mov
xor
ja
jmp
or
add
dec
pop
loop
add
cpuid
(bad)
(bad)
(bad)
mov
and
push
xchg
lds
or
and
push
sub
pop
bound
sbb
rcl
inc
out
add
adc
(bad)
cmp
daa
and
lock
add
lock
sbb
push
push
and
sbb
adc
mul
add
xchg
pop
adc
cmp
(bad)
jg
xor
pop
sbb
lock
add
push
cmp
cmp
cmp
inc
adc
adc
mov
scas
add
and
repnz
inc
add
(bad)
inc
push
dec
add
pop
add
movs
add
mov
add
or
(bad)
dec
push
and
imul
xor
xor
push
shl
inc
adc
xor
add
sbb
and
lock
add
xchg
data16
mov
adc
sub
(bad)
(bad)
(bad)
inc
sbb
lock
add
daa
or
lock
sbb
js
es
add
aas
dec
(bad)
inc
lock
mov
adc
sub
adc
or
or
or
and
push
sbb
or
xor
sub
and
adc
or
or
pop
aas
sub
or
or
inc
jno
stos
push
lock
and
pop
jge
cmp
xor
inc
inc
lock
xor
adc
or
out
jl
(bad)
mov
add
(bad)
adc
and
adc
rdmsr
adc
pop
and
add
sub
or
or
or
loop
arpl
sbb
pop
mov
imul
add
call
(bad)
inc
test
add
or
pop
push
sbb
hlt
add
push
or
mov
les
push
and
sub
sub
xor
inc
pop
xchg
out
jl
dec
out
pcmpeqd
out
adc
lock
push
inc
xchg
or
and
jge
(bad)
(bad)
sub
in
xor
es
fild
lock
sbb
push
add
sub
es
mov
xor
add
cmp
aas
neg
xor
sub
add
rol
cmp
or
lock
jo
(bad)
(bad)
call
inc
lock
add
or
inc
pop
jmp
call
and
pop
add
inc
adc
call
movups
xor
sbb
adc
push
lock
mov
(bad)
push
jle
dec
lods
mov
pop
mov
mov
das
(bad)
(bad)
jge
jge
or
test
sbb
sbb
push
movs
add
or
idiv
sbb
pop
test
inc
add
or
jg
sbb
and
add
add
ja
movups
push
push
push
mov
(bad)
dec
xor
repz
or
add
inc
xor
cdq
push
sbb
sbb
xor
and
sub
dec
sbb
mov
push
imul
cld
seta
or
jbe
lock
popa
add
jnp
pop
mov
lock
pop
jae
rol
pop
mov
and
mov
dec
push
lock
add
adc
sar
clc
xor
fild
sub
es
add
test
sbb
iret
mov
add
pop
mov
sbb
aam
out
ins
push
inc
pop
aaa
data16
sub
xchg
jne
xchg
(bad)
jmp
push
cs
stos
dec
lea
and
sbb
int
xor
pop
lock
pop
dec
cld
(bad)
(bad)
jmp
adc
adc
push
pop
and
sub
lea
pop
adc
lock
inc
pop
push
fstp
(bad)
aaa
mov
xchg
inc
push
xor
sbb
cmp
(bad)
(bad)
(bad)
sti
sbb
pop
addr16
add
pop
xor
pop
das
adc
adc
xor
or
(bad)
(bad)
(bad)
inc
push
add
sbb
push
ucomiss
pop
adc
inc
or
or
adc
push
lock
add
(bad)
jg
push
inc
outs
xor
and
and
inc
push
jo
lock
adc
push
or
mov
or
sub
push
add
sbb
push
aaa
pop
push
cmp
(bad)
jmp
push
sub
inc
cmp
and
lock
add
sbb
inc
es
jp
xor
and
dec
jle
dec
pop
ret
sbb
arpl
lock
lock
lock
add
inc
add
movs
or
fucomip
or
sbb
pop
push
add
pop
or
ss
mov
xor
add
or
jnp
push
(bad)
(bad)
mov
xor
or
adc
daa
popf
arpl
and
and
(bad)
(bad)
call
dec
sub
add
jns
or
or
push
retf
inc
or
(bad)
(bad)
mov
lock
push
cs
xor
or
or
add
(bad)
(bad)
(bad)
call
or
lock
add
lock
adc
adc
push
or
or
pop
inc
pop
pop
or
push
bound
push
call
push
sbb
push
or
adc
inc
sub
ds
(bad)
(bad)
mov
or
pop
or
and
and
push
and
(bad)
dec
sub
adc
push
or
lahf
pop
jns
jle
cmp
int
mov
add
jp
(bad)
(bad)
mov
rcr
adc
pop
lds
or
xor
or
push
or
or
jnp
mov
push
inc
cmp
dec
or
dec
pop
ins
dec
or
mov
cmp
pop
sbb
push
sub
sub
and
pop
add
mov
jg
test
lock
adc
sub
add
adc
(bad)
(bad)
(bad)
(bad)
cmp
xchg
push
and
mov
adc
rol
push
sbb
dec
pop
cmp
or
es
adc
(bad)
(bad)
call
and
and
and
push
sub
fwait
inc
dec
xor
pop
mov
or
or
or
push
push
or
pop
add
dec
sbb
mov
mov
cs
lock
or
or
(bad)
(bad)
(bad)
call
sbb
cmp
ins
dec
cmp
adc
or
sbb
cmp
pop
xchg
sub
dec
add
or
(bad)
(bad)
call
adc
or
inc
sub
sbb
mov
and
cmp
pop
cmp
adc
sbb
(bad)
(bad)
(bad)
dec
adc
nop
imul
push
inc
adc
sub
or
scas
sub
jns
sbb
sbb
stos
(bad)
call
or
adc
or
or
jnp
adc
pop
inc
push
clc
xchg
pop
mov
adc
jg
adc
(bad)
call
jl
sahf
push
cwde
push
cmp
inc
dec
push
lock
add
push
pop
adc
test
inc
dec
(bad)
(bad)
call
ja
cmp
cmp
xor
ds
sbb
pop
sbb
adc
or
jo
sub
cli
(bad)
(bad)
call
or
adc
sub
sbb
aas
or
or
or
adc
sbb
aaa
hlt
sbb
adc
cmp
shl
adc
adc
nop
hlt
dec
or
or
(bad)
enter
sub
jo
or
push
shr
jnp
push
dec
push
push
pop
push
sbb
fldcw
mov
push
pop
or
jg
dec
adc
pop
add
or
stos
or
or
or
pop
or
push
dec
mov
add
je
push
adc
adc
sub
popa
adc
or
or
lock
add
dec
inc
inc
cmp
add
pop
mov
cmp
xor
sbb
fdiv
add
(bad)
mov
add
lock
add
adc
inc
add
sub
cs
adc
sub
(bad)
(bad)
dec
push
and
and
mov
sub
adc
mov
add
inc
sbb
push
lock
pop
adc
sbb
(bad)
(bad)
jmp
sbb
test
mov
pop
emms
mov
lock
add
das
add
push
pop
pop
(bad)
(bad)
(bad)
call
xor
cmp
pop
or
push
adc
cmp
pop
pop
pop
pop
dec
lock
push
add
icebp
inc
or
sbb
pushf
or
cmp
gs
lock
ss
and
and
mov
inc
push
mov
sub
xor
and
push
call
lock
lds
inc
adc
adc
mov
sbb
cmp
or
add
ja
jg
adc
inc
sub
sbb
or
sub
add
pop
loop
or
jl
or
sub
lock
add
sbb
or
(bad)
test
or
pop
push
and
xor
mov
add
or
or
adc
sbb
scas
add
prefetch
pop
adc
test
or
or
add
mov
adc
xor
or
mov
add
or
pop
adc
scas
or
xor
adc
ds
(bad)
(bad)
or
pop
sub
sub
or
and
or
or
and
dec
pop
push
or
or
add
and
push
adc
or
or
push
fcos
(bad)
jg
test
and
push
jbe
aaa
push
es
or
and
or
sti
(bad)
(bad)
inc
pop
adc
xor
or
dec
push
adc
pop
dec
adc
push
or
pop
cmp
add
(bad)
aas
fadd
push
add
mov
and
xchg
add
add
dec
aaa
sbb
sub
(bad)
push
or
jb
das
or
fisttp
adc
or
or
or
dec
or
pop
aaa
into
(bad)
(bad)
(bad)
mov
and
or
or
(bad)
(bad)
cmp
or
jle
xor
xor
pop
scas
jmp
call
or
xchg
add
and
and
add
push
mov
pop
and
fld
dec
add
sub
xor
mov
jg
sbb
pop
ss
xchg
add
test
or
fdivr
out
(bad)
fild
or
out
sub
push
or
adc
or
or
adc
cli
out
dec
mov
inc
cmps
push
or
das
adc
out
or
add
or
outs
aaa
sbb
out
mov
pop
add
arpl
jle
jbe
jb
mov
fdiv
push
add
and
dec
outs
add
and
cmovl
adc
push
(bad)
add
adc
fcomp
adc
or
adc
add
mov
(bad)
(bad)
aas
ss
push
push
push
push
pop
or
pop
or
or
sbb
adc
(bad)
dec
or
adc
cmp
inc
inc
adc
(bad)
ins
mov
push
in
push
push
or
or
lock
add
xor
sbb
jno
adc
xor
mov
pop
jo
daa
ds
push
dec
add
lock
push
es
pop
push
lock
add
sub
xor
push
push
ja
int
inc
add
inc
add
jnp
and
lock
add
je
(bad)
jmp
pop
push
mov
cmp
sub
sbb
or
and
call
and
sbb
push
and
daa
or
push
or
adc
or
daa
xor
cs
aam
jle
sar
ja
sbb
outs
add
cmp
(bad)
jg
(bad)
mov
cmp
adc
sbb
sbb
push
push
push
adc
(bad)
inc
pop
sbb
adc
add
mov
push
daa
inc
push
add
xchg
jmp
fidiv
push
xor
xchg
pop
cmp
sub
(bad)
(bad)
call
or
pop
sbb
or
add
adc
lock
adc
pop
xor
inc
pop
push
cmp
push
cmp
pop
push
push
imul
dec
or
ud2
push
sbb
add
(bad)
jg
dec
or
ud2
inc
and
xor
or
add
pop
std
(bad)
jg
pop
pop
inc
or
inc
mov
push
inc
lock
add
sbb
aam
push
and
add
and
or
or
call
or
or
or
push
or
jae
pop
push
sbb
pop
(bad)
(bad)
(bad)
jmp
pop
adc
or
das
or
mov
ds
add
or
(bad)
(bad)
call
cmp
pop
mov
dec
nop
into
or
adc
lods
and
xchg
mov
push
add
or
or
sbb
adc
or
or
xor
xor
call
or
jno
cmp
ja
(bad)
(bad)
(bad)
(bad)
js
push
aaa
sbb
and
adc
sbb
adc
or
daa
adc
xchg
or
adc
pop
inc
sbb
call
jmp
sbb
mov
or
adc
sub
mov
and
and
(bad)
(bad)
cmp
push
or
cmp
(bad)
(bad)
cs
push
sub
pop
or
or
or
or
inc
(bad)
dec
push
dec
add
lock
cmp
or
inc
imul
xor
(bad)
or
add
out
lock
add
mov
cmp
adc
lock
ds
and
(bad)
jg
add
or
mov
mov
and
jbe
sub
push
jmp
add
push
adc
push
sbb
push
cmp
addr16
mov
ins
adc
or
adc
sbb
and
dec
dec
scas
adc
cmp
lock
mov
cmp
mov
pop
mov
fiadd
or
push
or
sbb
mov
sbb
or
prefetch
std
add
inc
cmp
gs
aaa
lock
call
lock
pop
sub
pop
add
adc
leave
sysret
adc
push
cld
add
adc
cmps
(bad)
mov
inc
sbb
aaa
cmp
push
pop
pop
or
sbb
or
sbb
adc
lock
sub
push
gs
sbb
es
daa
and
lock
(bad)
dec
and
sbb
lock
or
sbb
adc
add
pop
adc
adc
add
or
(bad)
jmp
clc
add
adc
xor
or
inc
push
dec
mov
add
(bad)
call
adc
sub
cmovae
push
push
adc
mov
(bad)
jg
lock
sub
sub
adc
dec
jae
je
adc
adc
adc
shl
push
sub
sbb
dec
(bad)
jmp
add
lock
xchg
or
or
mov
aaa
adc
mov
pusha
add
(bad)
inc
stos
push
push
and
inc
jg
xor
shl
(bad)
(bad)
(bad)
inc
pop
ins
xor
adc
lock
adc
xor
femms
pop
adc
jns
cmp
aad
jp
sbb
mov
sbb
and
pop
lock
lock
popa
push
or
lock
push
and
das
sbb
sbb
and
(bad)
push
mov
adc
adc
pop
mov
pop
or
sbb
sub
(bad)
(bad)
(bad)
mov
pop
inc
push
outs
or
adc
out
mov
add
lock
push
or
push
(bad)
call
clc
or
or
adc
push
or
push
xor
gs
sbb
lock
pop
das
and
(bad)
(bad)
mov
pop
adc
xchg
shl
add
or
add
push
push
inc
mov
adc
lock
add
dec
sub
dec
push
sbb
adc
sbb
jg
adc
dec
sbb
adc
cld
add
adc
dec
adc
(bad)
call
xor
sub
push
cmp
(bad)
es
das
and
adc
sub
(bad)
push
arpl
das
push
inc
pop
and
inc
popa
sub
xchg
lock
sub
cli
(bad)
jmp
fsubr
or
pop
adc
lock
adc
adc
inc
(bad)
jmp
add
jmp
shl
add
xor
clc
(bad)
(bad)
ds
lock
adc
daa
or
or
jno
out
lock
(bad)
fild
pop
or
ret
ret
add
mov
push
cmp
(bad)
(bad)
jmp
aas
lock
add
pop
lock
push
lock
add
push
lock
lock
les
mov
ret
adc
and
jg
out
(bad)
jo
add
lds
or
lock
pop
sti
daa
jmp
pop
or
push
add
(bad)
and
packuswb
jmp
xor
pop
push
add
or
(bad)
(bad)
jg
adc
gs
jb
lock
add
lock
add
or
mov
pop
mov
mov
mov
sbb
(bad)
jg
out
adc
add
adc
push
push
or
adc
adc
or
and
or
mov
push
sbb
(bad)
add
loope
mov
mov
mov
lock
add
adc
add
xor
add
aaa
pusha
into
mov
add
or
add
push
or
dec
inc
mov
mov
add
test
ror
nop
or
add
push
mov
lock
cmp
add
dec
lock
fs
mov
lock
sub
loopne
add
popa
xor
je
add
xor
dec
or
xor
cmp
syscall
out
add
lods
mov
dec
add
test
pop
enter
and
or
(bad)
sub
call
add
mov
pop
lock
lock
dec
cmp
add
sbb
lock
rol
lock
add
mov
add
add
xor
pusha
add
mov
pusha
outs
or
lock
sbb
fst
add
add
add
out
xchg
sbb
inc
aas
sbb
loopne
lock
sbb
cmp
pusha
add
or
add
lock
add
fld
sbb
lock
inc
hlt
ins
mov
jne
adc
or
lea
push
push
dec
pusha
sbb
lock
pop
daa
loope
push
push
add
js
add
pusha
fs
fwait
lock
lock
retf
inc
ss
femms
push
fnstenv
lock
pop
mov
lock
mov
or
lock
add
add
pop
sti
pop
mul
lock
or
add
add
cwde
or
add
clc
fs
mov
lock
ja
add
or
mov
lock
sbb
sbb
ret
data16
fmul
aam
sbb
mov
add
lock
lock
clc
mov
or
push
add
add
add
add
sbb
add
push
add
adc
adc
dec
xchg
xor
sbb
xor
and
mov
lea
adc
sbb
push
adc
sbb
sbb
sbb
(bad)
fld
add
and
or
adc
and
sbb
add
cdq
jnp
or
add
add
div
push
xor
or
mov
or
or
push
sub
fisttp
push
pop
or
or
pop
push
dec
or
lock
or
pop
lock
pop
lock
add
and
fdivr
popa
cmp
mov
push
inc
mov
mov
xor
or
add
mov
sbb
lock
xor
lock
les
add
lock
adc
mov
or
sbb
adc
adc
add
lds
add
loope
adc
out
(bad)
retf
add
or
cmp
ins
syscall
dec
mov
int3
retf
fisubr
sbb
sbb
sub
sub
adc
jmp
frstor
push
add
sub
add
add
dec
add
inc
inc
add
lea
add
add
add
add
add
xor
and
mov
adc
add
push
hlt
addr16
or
add
add
xor
pop
add
adc
add
add
add
arpl
cmp
adc
test
add
xor
push
add
inc
add
pusha
adc
pusha
add
cld
pusha
add
loopne
or
sbb
or
add
add
pop
int3
cmp
cwde
pop
xchg
or
cmps
inc
add
add
push
add
xor
push
in
cmp
pop
iret
xchg
jmp
and
std
jmp
add
add
pusha
cs
popa
je
add
push
enter
cwde
jae
add
pop
pop
xor
add
jge
fld
add
add
sub
sub
add
shr
ins
lahf
mov
add
rcr
or
int3
or
daa
jb
jb
lods
fst
ror
sbb
jp
daa
xchg
mul
ins
outs
sub
add
out
add
mov
data16
add
adc
lods
sbb
add
adc
add
add
push
adc
add
add
add
add
add
dec
add
inc
xchg
jae
add
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
add
add
push
add
or
cmp
add
add
add
add
add
add
add
push
add
add
add
add
rol
add
add
add
add
add
add
pop
and
sbb
add
add
add
fadd
add
sub
add
add
enter
push
add
add
add
add
pop
add
adc
add
add
add
mov
add
jo
add
add
add
or
add
cmc
adc
xchg
pop
add
mov
add
mov
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
or
add
add
test
add
cmp
add
pusha
add
add
add
mov
add
add
add
or
add
add
adc
add
or
add
add
sbb
adc
out
add
or
add
add
add
add
add
add
add
add
add
inc
or
add
add
dec
add
add
add
jo
add
cwde
add
add
add
add
add
add
adc
add
cmp
add
pusha
add
or
add
mov
add
mov
add
fadd
add
add
add
add
or
add
add
ins
pusha
adc
add
add
add
add
add
popa
adc
add
add
add
add
add
arpl
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
ins
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
rol
add
add
add
add
add
nop
adc
add
add
add
add
add
add
add
xchg
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
adc
add
add
add
add
push
add
and
add
add
mov
add
add
add
add
add
mov
adc
fadd
add
or
add
jmp
add
add
add
add
add
call
add
add
add
add
push
or
or
add
mov
or
add
adc
or
add
add
cmp
add
add
push
add
add
add
push
add
add
add
lock
add
add
pop
add
push
add
add
pop
add
pop
add
add
pop
add
or
add
pop
add
or
add
add
or
add
add
or
add
pusha
pop
add
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
pop
add
adc
pop
add
push
add
add
pop
add
sbb
add
pop
add
sbb
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
pop
add
add
add
and
add
add
and
add
add
and
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
xor
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
lock
add
or
add
or
add
or
add
or
add
or
add
or
add
add
xor
add
sbb
add
add
sub
str
add
clc
pop
str
add
dec
repnz
mov
add
add
add
add
jae
add
add
test
add
add
mov
add
sbb
add
sbb
(bad)
xor
add
mov
adc
xor
add
or
add
add
or
add
mov
adc
inc
add
add
jmp
add
rol
add
add
add
add
add
jo
add
add
test
adc
inc
add
add
iret
adc
inc
add
add
not
add
add
clc
or
add
add
add
fwait
adc
js
add
or
adc
or
add
cmp
add
add
loopne
adc
cmp
add
mov
add
add
add
add
mov
add
add
mov
add
add
add
add
adc
pop
add
add
adc
pop
add
add
str
add
dec
adc
bound
add
sbb
adc
dec
add
add
str
add
and
add
clc
pop
adc
cmp
add
sub
adc
dec
add
add
push
adc
pop
add
add
adc
test
add
or
add
add
enter
dec
add
add
adc
push
add
adc
add
add
sbb
add
add
or
adc
bound
add
shl
add
add
add
add
add
jmp
add
add
add
add
add
ret
(bad)
xor
add
clc
out
add
add
js
adc
dec
add
add
add
add
aaa
adc
cmp
add
loopne
str
add
mov
add
add
sub
cmp
add
add
or
add
add
add
or
add
add
inc
or
add
or
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
adc
add
and
add
xor
add
inc
or
add
push
or
add
pusha
or
add
jo
add
sbb
or
add
nop
or
add
mov
add
add
add
add
or
add
ror
add
loopne
add
daa
add
add
or
add
add
add
sub
add
adc
add
das
add
add
push
add
xor
push
add
ss
add
add
cmp
add
add
ds
add
add
aas
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
push
add
bound
add
push
add
fs
add
push
add
xchg
add
add
sldt
add
add
adc
add
or
add
and
add
or
add
xor
add
adc
add
inc
sldt
push
or
add
add
sbb
add
pusha
sldt
or
add
add
or
add
or
add
or
add
cmp
add
add
add
lldt
add
or
adc
add
add
jne
add
add
add
add
add
xchg
add
add
add
add
add
cdq
ltr
add
nop
mov
add
add
push
(bad)
ltr
add
add
add
add
push
adc
rol
add
adc
xor
add
push
add
add
(bad)
adc
push
add
add
add
add
add
add
test
add
add
add
adc
fadd
add
lock
add
or
adc
hlt
add
add
add
add
or
add
add
add
popf
adc
inc
add
add
sbb
add
add
add
add
add
nop
adc
mov
add
add
add
add
mov
add
lock
add
add
add
adc
in
add
add
sub
add
add
add
and
add
add
rcl
add
add
add
add
add
adc
add
nop
dec
adc
add
add
adc
push
add
add
add
add
adc
lock
add
pop
adc
out
add
add
adc
fadd
add
js
adc
lock
add
(bad)
adc
add
add
(bad)
cmp
add
sbb
add
loopne
adc
cmp
add
cmp
mov
add
js
adc
adc
add
jo
adc
and
add
pusha
jae
add
add
loopne
adc
bound
add
jo
ltr
add
add
add
add
(bad)
test
add
xchg
adc
ret
add
jecxz
add
add
add
adc
sub
add
sub
sldt
add
add
adc
xor
add
inc
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
push
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
add
adc
add
pusha
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
sub
add
add
sub
add
pusha
adc
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
adc
add
add
rcl
add
inc
add
add
adc
add
add
lock
add
add
add
add
add
adc
add
add
and
add
add
xor
add
add
add
xchg
add
add
add
add
add
pusha
adc
add
or
add
add
or
add
adc
adc
add
nop
adc
add
or
add
or
add
or
add
adc
add
add
rcl
add
or
add
adc
add
add
add
add
add
pop
fs
ds
add
jo
adc
add
add
ja
add
add
loopne
lldt
add
add
add
add
cmp
add
loopne
verr
push
add
lock
add
add
test
adc
mov
add
nop
dec
adc
loopne
add
shl
loopne
adc
int3
add
add
add
add
mov
add
add
or
add
add
add
add
add
xchg
add
push
add
pop
je
add
add
add
add
add
mov
add
add
adc
in
add
sar
add
push
add
sbb
adc
movs
add
add
add
add
add
add
fcomp
adc
ret
add
adc
les
add
add
add
rcl
add
sbb
add
(bad)
adc
sbb
add
add
add
pop
mov
add
add
add
add
add
sub
add
add
add
add
add
inc
sub
add
add
add
add
add
lock
add
rcr
add
add
add
add
add
lock
add
add
ror
loop
add
jo
adc
pusha
add
add
add
add
jo
(bad)
clc
add
add
add
add
pop
mov
add
add
and
add
add
add
add
add
adc
mov
add
add
add
add
adc
mov
add
xor
adc
retf
add
add
add
add
add
add
add
and
add
add
jg
add
add
add
add
add
push
add
cwde
and
add
add
jbe
add
push
add
dec
in
adc
out
add
add
(bad)
verw
add
dec
jmp
add
add
add
add
add
mov
add
add
adc
cmp
add
cwde
cmp
add
add
add
add
add
dec
add
add
add
add
add
dec
cmp
add
add
add
add
add
add
cmp
add
add
push
add
add
add
push
add
add
add
loopne
add
add
push
add
push
add
add
pop
add
pop
add
add
pop
add
or
add
pop
add
or
add
pop
add
or
add
add
or
add
push
pop
add
push
add
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
pop
add
push
add
add
pop
add
sbb
add
pop
add
sbb
add
pop
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
add
add
sbb
add
add
add
add
and
add
add
and
add
add
and
add
add
es
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
and
add
inc
add
add
sbb
add
add
inc
sbb
add
add
push
sbb
add
add
pusha
sbb
add
add
jo
add
bound
add
add
add
add
add
or
add
or
add
sbb
add
or
add
sbb
add
add
loopne
add
push
or
add
sbb
add
or
add
sbb
add
or
add
sbb
add
add
and
add
sbb
add
sbb
add
str
add
add
add
add
push
add
mov
add
add
(bad)
jl
add
mov
push
add
or
add
mov
add
pusha
fimul
add
add
add
add
add
adc
jl
add
jo
adc
jp
add
cwde
mov
add
mov
adc
mov
add
and
adc
mov
add
fmul
add
add
push
lea
add
add
sbb
add
add
add
add
add
(bad)
adc
pusha
pop
add
call
push
add
loopne
adc
clc
push
add
rcl
add
add
jo
adc
dec
pop
add
mov
push
add
xor
add
push
add
cmp
add
mov
push
add
fmul
adc
je
add
clc
mov
add
enter
sub
add
sbb
adc
test
add
pusha
sbb
add
push
add
mov
push
add
xor
ltr
add
add
add
add
pop
add
rol
adc
ins
push
add
push
pop
add
test
adc
mov
add
loopne
adc
ins
push
add
clc
(bad)
adc
mov
add
sbb
add
add
add
adc
inc
add
add
add
pusha
push
(bad)
jo
add
cwde
mov
add
push
add
jo
adc
inc
pop
add
test
adc
add
add
cwde
push
add
adc
adc
inc
pop
add
sar
add
add
add
add
add
out
adc
xor
add
or
add
add
add
add
add
icebp
sldt
add
mov
add
inc
in
adc
mov
add
add
add
add
adc
into
push
add
clc
add
add
add
add
add
add
aas
adc
cs
add
cmp
adc
in
push
cmp
add
add
sbb
add
add
add
sbb
add
add
xor
add
sbb
add
add
add
add
pop
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
add
adc
add
and
add
xor
add
inc
sbb
add
push
sbb
add
pusha
sbb
add
jo
add
push
add
add
add
add
add
add
add
add
add
add
sbb
add
rcr
add
loopne
add
sub
add
sbb
add
add
add
das
add
add
push
add
xor
push
add
ss
add
push
add
cmp
add
add
ds
add
add
aas
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
bound
add
push
add
fs
add
push
add
xchg
add
add
push
add
add
add
add
add
or
add
adc
add
or
add
and
add
adc
add
xor
add
push
or
add
add
sbb
add
push
pop
add
or
add
add
or
add
jo
add
sbb
add
dec
ltr
add
add
add
add
adc
rol
add
enter
push
add
add
add
add
(bad)
mov
add
clc
ror
add
add
in
add
add
add
sbb
add
lock
adc
and
add
push
rcl
dec
add
add
adc
push
add
add
repz
dec
add
add
adc
add
add
push
add
add
adc
in
add
or
add
add
js
adc
and
add
fadd
adc
and
add
add
adc
or
add
shr
add
sub
add
add
sbb
add
add
add
popf
adc
loopne
add
or
add
push
rcl
add
add
add
ret
push
add
clc
aaa
(bad)
xor
add
mov
add
add
add
add
jmp
add
shl
add
fcomp
add
add
add
adc
add
add
jo
sldt
add
add
adc
pusha
add
add
adc
loopne
add
test
adc
push
add
add
adc
adc
add
add
adc
push
add
add
pop
verr
add
pusha
mov
add
mov
add
add
add
add
add
add
adc
bound
add
mov
add
jo
adc
rol
add
sub
verw
add
add
add
add
cmps
adc
loopne
add
call
add
add
dec
adc
adc
add
js
adc
xor
add
clc
inc
adc
adc
add
sub
adc
or
add
add
add
test
add
add
add
or
add
pop
add
mov
add
add
add
add
pop
add
add
add
or
add
and
add
adc
add
add
add
add
add
and
add
add
or
add
add
and
adc
add
add
push
add
add
push
add
inc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
pop
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
ja
ja
ja
ja
stc
cdq
lahf
jg
push
pop
stc
cdq
lahf
jg
push
pop
stc
cdq
cdq
jg
push
pop
call
test
(bad)
push
pop
(bad)
stc
cdq
lahf
(bad)
call
cdq
(bad)
stc
xchg
pop
(bad)
(bad)
stc
cdq
cdq
cdq
xchg
pop
(bad)
(bad)
(bad)
jg
lahf
test
(bad)
push
pop
ja
ja
ja
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
ja
ja
ja
ja
jo
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
ja
ja
ja
ja
jo
jg
cdq
cdq
lahf
jg
(bad)
(bad)
push
jg
cdq
cdq
lahf
jg
(bad)
(bad)
push
jg
cdq
cdq
lahf
jg
(bad)
(bad)
push
jg
cdq
cdq
cdq
jg
(bad)
(bad)
push
jg
cdq
cdq
cdq
jg
(bad)
(bad)
push
jg
cdq
cdq
cdq
jg
(bad)
(bad)
push
jg
cdq
cdq
cdq
lahf
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
lahf
(bad)
(bad)
(bad)
push
jg
stc
cdq
cdq
cdq
(bad)
(bad)
(bad)
push
jg
call
(bad)
push
jg
(bad)
stc
cdq
cdq
cdq
(bad)
(bad)
stc
jo
jg
(bad)
call
cdq
jo
jg
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
jo
jg
(bad)
(bad)
(bad)
jns
cdq
cdq
cdq
jo
jg
(bad)
(bad)
(bad)
jg
cdq
cdq
lahf
jo
jg
(bad)
(bad)
(bad)
jg
(bad)
(bad)
push
ja
ja
ja
ja
ja
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
ja
ja
ja
ja
ja
ja
jo
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ja
ja
ja
ja
ja
ja
ja
jo
jg
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
lahf
jg
(bad)
(bad)
(bad)
(bad)
push
jg
cdq
cdq
cdq
cdq
lahf
jg
(bad)
(bad)
(bad)
(bad)
push
jg
stc
cdq
cdq
cdq
cdq
jg
(bad)
(bad)
(bad)
(bad)
push
jg
call
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
call
(bad)
(bad)
(bad)
(bad)
(bad)
stc
jo
jg
(bad)
stc
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
stc
cdq
jo
jg
(bad)
call
(bad)
(bad)
stc
cdq
cdq
jo
jg
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
jo
jg
(bad)
(bad)
call
cdq
cdq
cdq
cdq
jo
jg
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
jo
jg
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
jo
jg
(bad)
(bad)
(bad)
(bad)
(bad)
jg
stc
cdq
cdq
(bad)
push
jg
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
push
ja
ja
ja
ja
ja
ja
ja
jo
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
adc
sub
add
xor
add
pusha
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
(bad)
call
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
call
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
call
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
call
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
call
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
call
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
call
cdq
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
lahf
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
lahf
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
call
lahf
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cdq
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
xchg
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
lahf
(bad)
(bad)
(bad)
call
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
xchg
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
xchg
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
xchg
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
xchg
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
cdq
cdq
cdq
cdq
cdq
cdq
cdq
cdq
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
stc
cdq
cdq
cdq
cdq
cdq
lahf
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
pop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
outs
outs
add
jae
ja
ja
jnp
jnp
pop
pop
movs
add
or
add
adc
add
bswap
add
psrlq
and
fild
es
add
pop
loopne
sub
out
sub
out
add
sbb
add
cli
add
sbb
add
push
inc
xor
inc
inc
cmp
add
out
add
add
cld
add
cld
add
into
add
aam
popa
push
fadd
jl
iret
add
sti
add
repnz
test
cmp
add
add
mov
add
pushf
pushf
add
test
add
mov
add
mov
add
mov
mov
add
retf
add
mov
add
rol
aam
rol
aam
aam
fcmovu
fiadd
into
retf
icebp
add
into
test
xlat
aam
add
loop
add
jecxz
add
in
add
call
jmp
out
out
add
out
out
add
lock
add
jmp
in
jmp
repz
hlt
add
cmc
test
clc
test
push
jo
add
nop
add
or
add
push
lock
and
adc
cmp
call
jns
jno
cwde
call
add
call
add
(bad)
inc
add
add
adc
add
and
add
jo
add
mov
add
add
lock
js
adc
mov
xor
pushf
call
scas
push
sar
add
push
add
(bad)
inc
add
add
es
add
inc
push
add
pop
jo
add
add
iret
add
ret
add
call
add
push
add
call
jecxz
jno
jmp
push
add
(bad)
inc
add
add
das
add
push
inc
add
jo
add
nop
je
add
test
add
call
adc
(bad)
fdiv
add
fst
jmp
jno
(bad)
jmp
push
rol
(bad)
(bad)
inc
add
add
das
adc
add
add
jo
add
nop
add
mov
add
iret
pop
add
lock
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shl
add
(bad)
inc
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
(bad)
xor
call
(bad)
jp
add
xchg
xchg
add
mov
add
aam
add
(bad)
inc
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
push
fild
(bad)
(bad)
inc
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
mov
call
in
call
lock
(bad)
inc
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
inc
div
add
xchg
inc
stc
mov
add
sar
add
(bad)
inc
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
inc
ret
add
xchg
inc
fdiv
inc
(bad)
(bad)
inc
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
inc
jno
inc
mov
add
mov
add
sar
add
(bad)
inc
add
add
add
add
add
add
add
add
add
xor
xor
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
and
and
and
add
push
push
or
or
add
dec
dec
dec
push
add
push
prefetchw
inc
inc
inc
inc
dec
sub
sub
adc
adc
add
inc
inc
inc
inc
dec
sub
sub
adc
adc
and
inc
cmp
add
push
adc
adc
daa
inc
inc
inc
inc
inc
sbb
add
dec
and
adc
inc
inc
inc
inc
pop
or
sub
adc
adc
ss
or
push
dec
dec
dec
and
adc
adc
pop
push
or
add
push
dec
dec
dec
dec
inc
push
sbb
push
sbb
inc
xor
xor
push
push
push
push
xor
dec
dec
dec
push
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
sub
add
sbb
add
xor
add
add
or
add
add
mov
add
add
push
add
jbe
jp
jns
jge
jl
add
mov
add
and
add
add
mov
add
adc
add
adc
add
adc
add
pop
jecxz
and
adc
out
add
pop
out
add
pop
repnz
sbb
add
test
sub
cli
add
inc
xor
inc
aaa
es
cmp
hlt
add
and
add
sub
add
cmp
add
lds
jo
fadd
push
inc
jmp
push
dec
out
add
loope
pop
dec
test
pop
dec
std
add
in
add
out
add
sti
add
lock
add
clc
add
jne
add
test
add
mov
add
xchg
xchg
add
call
mov
mov
movs
add
lods
lods
add
mov
add
mov
add
mov
mov
add
nop
iret
add
test
add
scas
lock
(bad)
les
fcmovu
fiadd
fstp
fld
into
int
add
(bad)
jmp
(bad)
loopne
loopne
in
loop
loop
in
jecxz
jecxz
jecxz
in
jecxz
jecxz
in
in
in
in
in
out
call
add
jmp
add
in
jmp
jmp
out
out
add
out
out
add
lock
add
lock
add
loop
add
out
icebp
add
in
stc
add
out
lock
lock
icebp
icebp
add
repz
add
repz
add
cmc
cmc
add
clc
stc
add
sti
cld
add
iret
add
ret
add
call
add
push
add
call
jecxz
jno
jmp
push
add
(bad)
inc
add
add
das
add
push
inc
add
jo
add
nop
je
add
test
add
call
adc
(bad)
fdiv
add
fst
jmp
jno
(bad)
jmp
push
rol
(bad)
(bad)
inc
add
add
das
adc
add
add
jo
add
nop
add
mov
add
iret
pop
add
lock
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shl
add
(bad)
inc
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
(bad)
xor
call
(bad)
jp
add
xchg
xchg
add
mov
add
aam
add
(bad)
inc
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
push
fild
(bad)
(bad)
inc
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
mov
call
in
call
lock
(bad)
inc
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
inc
div
add
xchg
inc
stc
mov
add
sar
add
(bad)
inc
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
inc
ret
add
xchg
inc
fdiv
inc
(bad)
(bad)
inc
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
inc
jno
inc
mov
add
mov
add
sar
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
xor
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
dec
dec
dec
xor
add
cmp
push
dec
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
push
dec
dec
dec
cmp
add
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
push
imul
ins
ins
ins
imul
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
push
push
push
push
xor
outs
jo
jae
add
add
jb
(bad)
(bad)
(bad)
(bad)
(bad)
cvttps2pi
pop
pusha
pop
pusha
popa
arpl
add
add
jb
adc
adc
adc
daa
add
pusha
popa
arpl
add
add
jb
adc
adc
adc
adc
pop
pusha
popa
arpl
add
add
jae
push
push
push
push
push
push
push
or
pop
pusha
pusha
bound
cmp
add
cmp
pushw
pop
sbb
pop
pop
sbb
pusha
pop
pop
pusha
pusha
bound
jb
add
add
sbb
sbb
sbb
push
pusha
pop
pusha
pusha
bound
jb
add
add
jb
push
sbb
sbb
sbb
sub
pusha
pusha
bound
jb
add
add
imul
sbb
sbb
pusha
pusha
popa
bound
jb
add
add
ins
imul
sbb
sbb
push
pusha
arpl
outs
inc
add
add
outs
push
sbb
sbb
sbb
or
or
add
inc
jb
push
sbb
sbb
sbb
sbb
or
push
push
inc
add
add
outs
imul
sbb
sbb
sbb
sbb
or
dec
jb
imul
and
sbb
sbb
sbb
add
dec
jae
ins
imul
inc
gs
xor
and
sbb
sub
add
dec
je
jb
jb
jae
je
jb
imul
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
or
add
add
add
add
add
imul
add
jb
je
jae
jae
jae
je
jae
je
je
jae
je
je
je
jns
jns
jge
jge
add
lahf
add
add
add
add
test
push
push
scas
add
pop
test
add
push
mov
or
mov
adc
mov
add
add
inc
mov
add
mov
add
adc
add
adc
add
fiadd
cs
add
adc
add
pop
loop
sub
in
daa
adc
add
push
out
add
pop
repnz
sbb
add
test
sub
cli
add
push
sti
add
inc
das
sbb
call
add
daa
stc
add
and
add
and
stc
add
sub
add
inc
cmp
cmp
repnz
cmc
add
inc
dec
dec
ret
add
int
addr16
add
add
rol
pop
push
out
add
test
inc
sti
add
cld
add
cld
add
add
cli
add
add
in
add
stc
add
cli
add
add
xchg
xchg
mov
mov
(bad)
nop
pop
(bad)
nop
nop
add
xchg
xchg
add
fwait
pushf
add
lahf
add
mov
cmps
add
scas
scas
add
mov
add
mov
add
mov
mov
add
nop
lock
xchg
cmc
add
xchg
cld
add
mov
hlt
add
mov
rol
(bad)
into
into
into
add
rcl
add
(bad)
(bad)
add
fcmovnu
add
(bad)
add
fsubr
add
fucomip
add
ret
retf
enter
int3
repz
into
test
shl
add
shl
add
loopne
add
in
add
call
call
add
out
out
add
out
out
add
lock
add
lock
add
loope
add
out
add
out
lock
jmp
out
lock
lock
lock
add
cmc
cmc
add
clc
clc
add
stc
stc
add
cld
cld
add
imul
add
mov
add
popf
push
add
scas
jno
inc
xchg
add
shl
add
(bad)
inc
add
add
das
add
add
add
jo
add
nop
or
add
or
add
push
add
jmp
adc
(bad)
xor
call
(bad)
jp
add
xchg
xchg
add
mov
add
aam
add
(bad)
inc
add
add
das
add
add
pop
add
and
nop
add
add
add
lock
call
pop
add
xor
call
add
jno
add
xchg
mov
push
fild
(bad)
(bad)
inc
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
mov
call
in
call
lock
(bad)
inc
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
inc
div
add
xchg
inc
stc
mov
add
sar
add
(bad)
inc
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
inc
ret
add
xchg
inc
fdiv
inc
(bad)
(bad)
inc
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
inc
jno
inc
mov
add
mov
add
sar
add
(bad)
inc
add
or
or
or
push
or
or
or
or
or
pop
or
or
or
or
or
or
add
sbb
popa
popa
popa
pusha
popa
bound
popa
popa
popa
popa
popa
popa
popa
bound
popa
popa
popa
popa
bound
or
add
push
fs
fs
add
add
addr16
gs
add
add
jae
jae
je
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
pop
add
add
je
je
je
je
je
je
je
je
je
je
je
je
je
pop
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
add
add
and
pop
pop
pop
pop
pop
pop
pop
arpl
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fs
add
add
and
and
and
and
and
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
add
add
and
and
and
xchg
xchg
add
lea
lea
add
add
xor
and
xchg
add
lea
lea
add
add
cmp
and
and
add
lea
lea
add
add
dec
daa
daa
daa
daa
daa
daa
daa
daa
xor
lea
lea
add
push
xchg
push
sub
sub
sub
sub
jg
or
lea
nop
xchg
push
add
add
jge
sub
sub
sub
sub
ins
xchg
or
xchg
nop
xchg
push
add
add
mov
sub
sub
sub
sub
inc
xchg
or
mov
xchg
xchg
pop
add
add
mov
sub
sub
sub
sub
jb
xchg
nop
lea
pop
add
add
xchg
mov
sub
sub
dec
sbb
lea
nop
xchg
pop
add
add
xchg
mov
sub
cs
sub
sub
xchg
lea
lea
pop
add
add
xchg
lea
das
cs
cs
nop
lea
test
pop
xchg
xchg
mov
das
cs
cs
xor
mov
lea
adc
add
pusha
xchg
xchg
xchg
xchg
mov
cs
cs
cs
sub
nop
lea
adc
pusha
add
add
xchg
xchg
mov
cs
cs
cs
adc
push
push
push
bound
add
arpl
mov
das
cs
cs
cs
cs
or
or
add
xchg
xchg
mov
cs
cs
cs
cs
sub
sbb
(bad)
unpcklps
add
xchg
xchg
xchg
mov
ins
cmp
cs
cs
cs
cs
cs
cs
cs
add
xchg
xchg
xchg
mov
xchg
mov
das
cs
cs
cs
cs
cs
cs
add
add
xchg
xchg
xchg
xchg
lea
xchg
xchg
fs
dec
inc
cmp
xor
inc
dec
imul
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
gs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
addr16
addr16
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
js
adc
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
jb
jno
jbe
jbe
jp
jp
jl
jnp
jnp
jl
jle
jle
add
sahf
add
add
add
push
cmps
add
or
add
or
add
sbb
add
mov
adc
mov
sbb
mov
cs
sub
cmp
add
mov
add
push
int3
add
adc
add
sbb
add
adc
add
fiadd
sub
and
add
loope
and
adc
add
sbb
call
add
adc
jmp
sub
icebp
add
sbb
add
sbb
add
sbb
add
stc
add
inc
cs
add
pop
lock
pop
cli
add
out
cmp
call
add
daa
repnz
and
add
and
iret
add
jmp
inc
xor
add
aad
bound
add
mov
jle
retf
add
jmp
add
std
add
sti
add
cld
add
lock
jmp
push
cmc
add
cli
add
jmp
add
call
add
cmc
add
repnz
stc
add
add
std
add
add
add
mov
add
xchg
xchg
add
call
popf
sahf
popf
add
movs
movs
add
lods
lods
add
mov
add
mov
mov
add
mov
add
xchg
add
xchg
add
xchg
add
clc
add
mov
add
mov
clc
add
lods
test
mov
mov
rol
ret
ret
add
(bad)
(bad)
ret
les
(bad)
ret
(bad)
les
mov
add
leave
leave
add
int3
int3
add
rcl
add
aad
add
fcmovu
add
fstp
add
loopne
add
retf
int3
int3
in
iret
int
add
aad
add
aam
add
shr
add
iret
lock
aam
add
(bad)
test
fdivr
add
jecxz
add
out
add
loop
add
out
add
jmp
jmp
jmp
in
in
jmp
jmp
jmp
add
in
in
add
out
out
add
out
out
add
lock
add
lock
add
out
lock
jmp
add
out
hlt
add
out
lock
icebp
icebp
add
repz
hlt
repz
hlt
repz
repz
add
repz
add
hlt
hlt
add
hlt
hlt
add
clc
test
cld
cld
cld
add
xor
call
add
jno
add
xchg
mov
push
fild
(bad)
(bad)
inc
add
add
das
add
add
add
dec
add
add
iret
add
add
adc
add
push
mov
call
in
call
lock
(bad)
inc
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
inc
div
add
xchg
inc
stc
mov
add
sar
add
(bad)
inc
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
inc
ret
add
xchg
inc
fdiv
inc
(bad)
(bad)
inc
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
inc
jno
inc
mov
add
mov
add
sar
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
addr16
addr16
addr16
addr16
addr16
addr16
add
add
add
push
imul
imul
imul
imul
imul
push
imul
pop
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
ins
ins
ins
ins
sub
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
ins
sub
ins
ins
ins
ins
ins
ins
ins
ins
and
add
add
xchg
add
test
xchg
xchg
or
xchg
add
mov
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
mov
mov
mov
add
add
bound
add
add
add
add
add
and
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
push
and
and
and
and
and
cmp
gs
gs
add
add
add
scas
and
and
and
and
and
and
and
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
cmps
and
and
and
mov
mov
mov
stos
lods
stos
stos
stos
test
test
cmps
cmps
cmps
cmps
mov
add
add
add
mov
and
and
push
mov
mov
mov
stos
lods
cmps
stos
stos
stos
stos
test
cmps
mov
add
add
add
cmps
sub
es
mov
mov
stos
stos
stos
cmps
stos
cmps
stos
stos
stos
stos
test
stos
cmps
cmps
cmps
mov
add
add
add
movs
sub
sub
sub
sub
sub
sub
es
mov
mov
mov
stos
lods
cmps
stos
cmps
stos
stos
test
test
cmps
cmps
mov
add
add
add
inc
sub
sub
sub
sub
sub
sub
sub
mov
mov
lea
cmps
stos
cmps
stos
stos
test
stos
stos
cmps
cmps
cmps
cmps
mov
add
add
add
cmps
dec
sub
sub
sub
sub
sub
sub
sub
mov
add
stos
cmps
stos
cmps
stos
cmps
test
test
cmps
cmps
cmps
cmps
mov
add
add
add
movs
jno
sub
sub
sub
sub
sub
sub
sub
cmps
stos
stos
cmps
stos
cmps
cmps
cmps
stos
stos
cmps
stos
stos
cmps
cmps
cmps
cmps
cmps
mov
add
add
add
mov
sub
sub
sub
sub
sub
sub
mov
(bad)
stos
stos
cmps
cmps
lods
stos
cmps
stos
stos
cmps
cmps
cmps
cmps
cmps
cmps
scas
pop
add
add
add
mov
sub
sub
sub
nop
cmps
stos
stos
cmps
cmps
cmps
stos
cmps
stos
cmps
cmps
cmps
test
cmps
cmps
cmps
cmps
scas
pop
add
add
add
mov
sub
sub
sub
fwait
cmps
cmps
cmps
stos
stos
cmps
cmps
cmps
stos
cmps
stos
stos
stos
cmps
cmps
cmps
cmps
cmps
mov
add
add
add
mov
cs
cs
push
pushf
test
stos
cmps
cmps
cmps
stos
cmps
stos
stos
stos
cmps
cmps
lods
cmps
cmps
cmps
cmps
mov
add
add
add
mov
cs
mov
lahf
cmps
stos
stos
stos
stos
cmps
cmps
cmps
stos
cmps
stos
stos
stos
cmps
cmps
cmps
cmps
cmps
scas
arpl
add
add
arpl
xor
xor
xor
xor
xor
xor
call
cmps
cmps
stos
stos
stos
stos
stos
cmps
stos
cmps
cmps
cmps
cmps
cmps
mov
add
add
add
movs
mov
xor
xor
xor
xor
xor
xor
cmps
stos
stos
stos
cmps
cmps
cmps
cmps
stos
stos
stos
stos
cmps
stos
cmps
cmps
cmps
cmps
scas
add
add
add
mov
xor
xor
xor
xor
xor
xor
xor
sbb
stos
stos
stos
cmps
cmps
cmps
stos
stos
stos
stos
stos
stos
cmps
stos
cmps
cmps
cmps
cmps
mov
add
add
add
mov
xor
xor
xor
xor
xor
xor
stos
cmps
cmps
stos
stos
stos
cmps
cmps
cmps
stos
stos
stos
stos
cmps
stos
cmps
cmps
cmps
cmps
scas
data16
add
add
mov
jb
xor
xor
xor
xor
xor
xor
xor
test
cmps
cmps
cmps
stos
cmps
test
stos
cmps
stos
stos
cmps
cmps
cmps
cmps
xchg
data16
add
add
lahf
movs
mov
xor
xor
xor
xor
xor
xor
xor
push
stos
cmps
stos
stos
cmps
cmps
cmps
test
stos
stos
cmps
cmps
cmps
cmps
cmps
xchg
sbb
add
add
push
cmps
cmps
cmps
xchg
cmp
xor
xor
xor
xor
xor
xor
xor
cmps
cmps
cmps
stos
stos
stos
cmps
cmps
cmps
cmps
stos
cmps
cmps
xchg
sbb
add
imul
xor
xor
xor
xor
xor
xor
xor
xor
stos
cmps
cmps
cmps
stos
stos
cmps
cmps
cmps
cmps
cmps
outs
push
adc
imul
push
mov
cmps
cmps
stos
jbe
xor
xor
xor
xor
xor
xor
xor
and
cmps
stos
stos
stos
cmps
cmps
mov
adc
push
add
add
push
mov
cmps
cmps
cmps
stos
jne
xor
xor
xor
xor
xor
xor
xor
sub
inc
inc
ins
inc
sbb
push
push
push
push
push
push
imul
add
add
lahf
mov
cmps
cmps
cmps
scas
ja
xor
xor
xor
xor
xor
xor
xor
xor
or
or
or
or
or
add
add
add
lahf
mov
cmps
cmps
scas
scas
jle
xor
xor
xor
xor
xor
xor
xor
xor
push
(bad)
or
or
or
or
ins
add
add
add
mov
cmps
mov
cwde
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
or
or
add
add
mov
cmps
test
jae
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sub
add
add
add
movs
mov
test
mov
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
movs
cmps
cmps
cmps
cmps
stos
scas
mov
mov
mov
cwde
push
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
movs
mov
stos
scas
mov
scas
mov
mov
mov
jl
cmp
xor
xor
xor
xor
xor
xor
xor
dec
jnp
add
add
add
movs
movs
mov
test
mov
mov
test
push
dec
aas
cmp
xor
dec
push
je
sahf
mov
add
add
mov
cmps
stos
test
mov
mov
mov
cmps
cmps
cmps
lods
stos
cmps
cmps
cmps
cmps
cmps
cmps
cmps
cmps
mov
add
add
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
outs
outs
outs
and
outs
jmp
outs
jmp
outs
jmp
outs
jmp
outs
jmp
outs
jmp
outs
jmp
outs
jmp
jo
outs
outs
outs
jmp
jo
outs
outs
jo
outs
outs
jo
outs
outs
outs
jmp
outs
and
xchg
xchg
(bad)
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
xchg
inc
xchg
xchg
lahf
mov
mov
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
mov
mov
xchg
xchg
xchg
lahf
mov
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
jmp
add
cs
(bad)
and
(bad)
and
(bad)
pop
pop
movs
inc
add
add
inc
add
add
fucomip
jmp
cmp
in
ds
out
mov
repnz
cld
cld
sti
inc
aam
(bad)
in
in
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
jmp
fisttp
loopne
(bad)
cmp
in
push
and
push
sub
call
stc
stc
inc
rcl
jmp
jecxz
jmp
in
jmp
out
(bad)
in
in
in
(bad)
(bad)
fdivrp
mov
xchg
mov
fcomp
inc
icebp
push
and
lock
cmp
(bad)
js
hlt
(bad)
stc
stc
stc
dec
fcmovu
jmp
loop
jmp
in
jmp
out
(bad)
in
in
in
call
xlat
xlat
call
xchg
xchg
lahf
rcl
sar
je
idiv
aaa
sub
(bad)
cmp
idiv
cmp
idiv
inc
cmp
(bad)
jmp
(bad)
(bad)
jmp
loop
jmp
jecxz
jmp
in
jmp
out
(bad)
in
out
out
call
rcl
call
pushf
pushf
mov
retf
int3
dec
enter
sub
(bad)
cmp
cli
(bad)
ds
inc
stc
call
xchg
xchg
(bad)
jmp
jecxz
jmp
in
jmp
out
(bad)
out
out
out
jmp
pushf
pushf
mov
mov
inc
sub
(bad)
aas
cs
inc
dec
std
jmp
mov
in
in
in
jmp
jecxz
jmp
in
jmp
call
fdivr
jl
mov
jbe
cmps
cmps
pusha
ret
ret
hlt
hlt
hlt
push
lock
(bad)
jnp
stc
(bad)
cmp
(bad)
inc
dec
(bad)
dec
loope
push
dec
fdivrp
xchg
(bad)
call
mov
add
sahf
inc
cmps
pusha
lods
lods
lods
dec
mov
cmc
hlt
push
lock
out
out
out
dec
xor
dec
(bad)
dec
push
sbb
in
call
or
mov
or
mov
xchg
xchg
mov
dec
mov
mov
mov
cmc
cmc
(bad)
out
lock
(bad)
out
out
out
push
icebp
repnz
(bad)
idiv
jg
cld
call
out
jmp
sbb
(bad)
jmp
sbb
(bad)
cmp
cld
jmp
mov
ss
mov
mov
cli
cli
push
div
push
cmc
idiv
div
idiv
clc
clc
clc
(bad)
cld
sti
cld
inc
rol
cmc
cmc
cmc
(bad)
out
out
out
(bad)
out
out
out
push
repnz
clc
clc
clc
(bad)
mov
mov
and
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
popa
popa
adc
imul
jmp
imul
push
push
imul
push
push
imul
imul
jmp
push
jmp
push
jmp
push
jmp
push
adc
add
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
test
add
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
call
add
stos
stos
stos
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
jmp
(bad)
(bad)
xchg
cwde
cdq
cdq
mov
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
cdq
cdq
mov
leave
leave
leave
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
dec
retf
mov
add
xchg
xchg
xchg
inc
add
add
inc
add
add
cmp
add
add
inc
add
xchg
xchg
xchg
jmp
add
in
in
hlt
hlt
cmc
push
and
jmp
push
(bad)
jmp
push
(bad)
jmp
push
(bad)
jmp
push
(bad)
call
adc
call
stc
stc
(bad)
cld
cld
cld
push
ja
(bad)
fdivrp
in
in
in
(bad)
in
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
push
repnz
iret
cmc
jmp
test
fcomp
fdivr
icebp
icebp
icebp
inc
loopne
cmp
fdivrp
cmp
(bad)
cmp
das
(bad)
inc
xor
(bad)
mov
div
(bad)
cli
cli
cli
(bad)
jns
jns
fcmovu
fcos
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
out
jmp
jmp
(bad)
(bad)
icebp
jmp
xchg
call
repnz
cmp
jecxz
das
sbb
loope
xor
daa
loop
inc
xor
inc
mov
idiv
cli
cli
cli
(bad)
jge
jl
fstp
(bad)
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
out
jmp
jmp
jmp
out
jmp
mov
jg
ret
repz
cmp
call
push
and
push
sub
(bad)
aas
sub
icebp
push
div
(bad)
cli
cli
cli
inc
fnstsw
jmp
jecxz
jmp
jecxz
jmp
in
jmp
in
jmp
in
(bad)
jmp
jmp
jmp
jecxz
call
(bad)
pop
mov
mov
repz
repz
in
push
and
push
and
push
es
cmp
jmp
cmp
jmp
push
div
(bad)
cli
cli
cli
inc
jecxz
jecxz
jecxz
jecxz
jecxz
in
in
in
in
out
out
jmp
jmp
call
aad
call
xchg
xchg
gs
xchg
xchg
inc
scas
scas
scas
push
hlt
hlt
jmp
push
out
push
out
push
daa
out
(bad)
cmp
out
(bad)
ds
call
div
(bad)
cli
cli
stc
inc
in
jmp
jecxz
jmp
jecxz
jmp
in
jmp
in
jmp
out
(bad)
jmp
jmp
(bad)
mov
xchg
xchg
call
fwait
sub
cmc
cmc
call
repnz
sub
(bad)
cmp
repz
repz
repz
out
out
cmc
(bad)
cli
cli
cli
dec
call
jecxz
jecxz
jecxz
in
in
in
in
out
out
jmp
jmp
fwait
fwait
call
pushf
pushf
or
hlt
hlt
hlt
call
leave
repnz
cmp
and
idiv
cmp
xor
inc
idiv
mov
stc
cli
dec
jmp
jmp
jecxz
jmp
jecxz
jmp
in
jmp
in
jmp
out
(bad)
jmp
inc
mov
cdq
sldt
add
mov
in
in
push
icebp
icebp
inc
and
stc
(bad)
aas
das
stc
inc
stc
inc
cli
jmp
clc
push
out
cli
call
in
jmp
jecxz
jmp
jecxz
jmp
in
jmp
in
(bad)
call
jmp
add
add
add
add
test
test
out
in
icebp
repnz
(bad)
(bad)
icebp
dec
cli
(bad)
cmp
cld
inc
cld
inc
inc
cld
dec
cld
call
xchg
pushf
(bad)
in
in
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
in
(bad)
call
mov
call
adc
test
test
stos
stos
stos
mov
(bad)
push
repnz
lock
cs
(bad)
aas
das
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
dec
(bad)
dec
retf
(bad)
loop
loop
jecxz
loop
loop
aam
loope
js
retf
adc
dec
lods
lods
mov
add
add
mov
mov
fcomp
fdivr
repz
lock
(bad)
out
out
out
jmp
xor
inc
inc
(bad)
dec
(bad)
call
(bad)
jmp
out
jmp
loope
pop
push
ret
push
sar
pusha
mov
inc
sahf
inc
add
call
mov
mov
mov
rcl
sar
repz
lock
out
out
out
(bad)
out
out
out
(bad)
mov
dec
std
inc
(bad)
dec
(bad)
call
(bad)
jmp
sbb
push
sbb
jmp
sbb
call
psrlw
push
or
inc
add
test
jmp
mov
add
add
add
add
mov
mov
retf
retf
retf
push
hlt
hlt
push
lock
out
out
out
(bad)
out
out
out
push
icebp
icebp
(bad)
fcmovu
cmc
call
cmp
call
(bad)
jmp
idiv
sub
sbb
push
push
(bad)
jmp
sbb
jmp
sbb
jmp
push
out
jmp
idiv
mov
mov
add
add
add
add
mov
mov
hlt
hlt
cmc
push
lock
out
out
out
(bad)
out
out
out
push
lock
push
repz
cmc
hlt
call
iret
idiv
lods
cmps
cld
call
call
jmp
sbb
jmp
sbb
inc
std
jmp
stc
call
(bad)
ret
ret
ret
(bad)
mov
add
add
add
add
rol
cli
stc
cli
push
div
push
cmc
cmc
push
div
push
div
(bad)
clc
clc
clc
(bad)
stc
clc
stc
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
mov
cmc
cmc
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
lock
repnz
repz
clc
clc
clc
inc
rol
mov
add
add
add
add
(bad)
les
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
or
add
add
add
add
add
add
add
add
add
add
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
adc
add
add
and
pop
je
je
je
jae
jae
je
je
jne
jb
jae
jae
jb
jae
je
jae
je
jae
jae
je
je
je
jae
je
jae
jae
jae
jae
je
jae
je
je
je
jae
je
jae
je
je
je
jae
je
je
je
jne
je
je
jne
je
je
jae
je
jae
je
and
add
adc
add
sbb
push
fwait
xchg
xchg
xchg
jmp
scas
scas
jmp
lods
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
jmp
scas
scas
call
push
push
fwait
add
add
add
add
cmps
cmps
cmps
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmps
cmps
cmps
push
jbe
add
add
add
add
sub
sub
(bad)
(bad)
(bad)
idiv
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
div
xor
sbb
add
add
add
add
movs
cmps
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
inc
rol
rol
jmp
mov
add
add
add
mov
inc
mov
(bad)
inc
mov
mov
inc
mov
vshufps
mov
mov
inc
mov
vshufps
mov
mov
inc
(bad)
vshufpd
(bad)
vshufpd
(bad)
vshufps
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
vshufps
mov
jmp
add
add
add
add
test
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
mov
add
add
add
add
(bad)
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
imul
cmps
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
mov
call
rcl
call
add
add
add
add
loop
hlt
cmc
cmc
push
cmc
hlt
dec
jmp
psubusb
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
push
inc
loopne
cli
stc
cli
(bad)
cld
cld
cld
jmp
push
into
into
into
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
hlt
push
cmc
hlt
(bad)
jmp
leave
xchg
sar
icebp
icebp
icebp
(bad)
out
out
out
push
and
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
in
div
idiv
cli
stc
cli
jmp
dec
iret
iret
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
(bad)
(bad)
(bad)
xchg
add
add
add
mov
(bad)
push
icebp
icebp
(bad)
out
out
out
jmp
pop
loopne
and
loopne
and
loopne
and
loopne
and
loopne
and
loopne
and
loopne
and
loopne
jle
jmp
(bad)
cli
stc
cli
jmp
outs
call
rcl
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
push
icebp
icebp
call
(bad)
(bad)
dec
add
add
add
add
mov
repz
out
out
out
jmp
sbb
jmp
adc
jmp
adc
jmp
adc
jmp
je
push
div
(bad)
stc
stc
stc
push
jo
xlat
fcom
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
dec
into
int
lea
add
add
add
(bad)
(bad)
(bad)
xor
hlt
hlt
(bad)
out
out
out
push
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
push
in
push
div
(bad)
stc
stc
stc
push
jae
fcmovnu
fdivr
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
(bad)
mov
add
add
add
(bad)
(bad)
(bad)
adc
cmc
hlt
(bad)
out
out
out
dec
jmp
daa
adc
jmp
daa
adc
jmp
daa
adc
jmp
daa
adc
in
push
div
(bad)
stc
stc
stc
push
jne
loopne
loopne
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
mov
xchg
xchg
pusha
xchg
xchg
xchg
out
repz
lock
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
push
hlt
idiv
stc
cli
cli
(bad)
js
js
in
in
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
lock
push
repz
push
xchg
xchg
dec
xchg
xchg
xchg
iret
call
lock
icebp
jmp
pop
icebp
jmp
pop
icebp
jmp
pop
icebp
jmp
pop
icebp
jmp
pop
icebp
jmp
pop
icebp
jmp
pop
icebp
dec
retf
stc
stc
stc
(bad)
jp
jp
call
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
hlt
hlt
jmp
xchg
xchg
add
add
call
push
icebp
icebp
(bad)
fstp
out
jmp
hlt
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
dec
cli
stc
(bad)
jge
jge
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
lock
push
cmc
cmc
jmp
xchg
lahf
and
add
add
rcl
push
repnz
out
out
out
jmp
hlt
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
(bad)
cmp
icebp
stc
inc
icebp
icebp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
lock
cmc
cmc
jmp
cdq
cdq
or
add
add
leave
leave
push
repz
out
out
out
inc
mov
stc
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
cmp
hlt
hlt
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
(bad)
(bad)
in
jmp
add
add
mov
repz
out
out
out
(bad)
out
out
out
jmp
clc
jmp
cld
jmp
cld
jmp
cld
jmp
cld
jmp
cld
jmp
cld
jmp
cld
push
and
mov
cmc
cmc
cmc
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
lock
out
out
out
jmp
iret
jmp
add
stos
stos
stos
xor
hlt
cmc
(bad)
out
out
out
(bad)
out
out
out
call
aam
push
and
jmp
sbb
jmp
sbb
jmp
sbb
jmp
lea
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jns
sar
inc
inc
sar
cmps
cmps
leave
scas
scas
scas
adc
cmc
cmc
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
jmp
(bad)
jmp
sbb
jmp
sbb
jmp
sbb
call
ds
dec
leave
jmp
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
call
imul
(bad)
cmpxchg
push
push
mov
mov
add
add
out
out
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
call
sbb
jmp
sbb
jmp
sbb
jmp
cdq
cwde
jmp
sbb
int3
inc
shl
in
in
out
(bad)
in
in
out
call
shl
call
sub
dec
or
push
add
add
out
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
lock
call
sbb
jmp
sbb
jmp
sbb
call
sbb
jmp
sbb
call
bswap
dec
or
inc
push
movs
inc
push
movs
inc
push
movs
inc
push
movs
inc
push
movs
jmp
mov
mov
add
add
(bad)
icebp
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
and
(bad)
jmp
sbb
jmp
(bad)
jmp
sbb
jmp
sbb
call
bswap
dec
pop
mov
add
mov
inc
add
(bad)
jge
mov
jbe
add
add
fcomp
push
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
push
repz
fcmovu
cmc
jmp
cld
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
cld
jmp
pop
bnd
sbb
call
mov
pusha
mov
rcl
push
repz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
push
repz
hlt
repz
hlt
hlt
inc
ret
idiv
push
std
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
push
(bad)
push
mov
add
mov
leave
leave
push
hlt
hlt
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
push
repz
hlt
repz
hlt
hlt
push
cmc
hlt
(bad)
stc
stc
stc
push
stc
push
stc
call
(bad)
cmp
(bad)
push
and
push
and
(bad)
cmp
inc
cld
push
stc
jmp
loop
inc
(bad)
mov
add
add
ret
stc
stc
stc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
push
div
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
stc
(bad)
cld
cld
sti
(bad)
mov
cli
stc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
cli
cli
stc
inc
rol
mov
add
add
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
and
add
add
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sub
sub
jb
push
jb
jno
jae
jb
jae
jno
jno
jno
jno
jb
jae
jno
jb
jno
jb
jno
jno
jb
jae
jb
jae
jb
jno
jb
jb
jb
jb
jae
jb
jno
jno
jae
jb
jno
jb
jb
jb
jno
jb
jae
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jno
jb
jb
jb
jae
jb
jae
jno
jb
jae
jb
jb
jb
jb
jno
jb
jb
jb
jb
jno
jb
jae
jb
sub
sub
add
sbb
add
push
add
add
add
add
add
add
add
add
push
push
push
movs
xchg
xchg
xchg
jmp
lods
lods
jmp
lods
jmp
lods
jmp
lods
lods
jmp
lods
lods
jmp
lods
lods
jmp
lods
jmp
lods
lods
jmp
lods
jmp
lods
jmp
lods
lods
jmp
lods
jmp
lods
jmp
lods
jmp
lods
jmp
lods
lods
jmp
lods
jmp
lods
lods
call
push
push
movs
add
add
add
add
add
add
add
add
add
add
add
add
je
je
cmps
test
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
jmp
ja
(bad)
add
add
add
add
add
add
add
add
add
add
cmp
xor
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
push
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
dec
xor
add
add
add
add
add
add
jle
jle
movs
movs
movs
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
movs
(bad)
jle
jle
add
add
add
add
add
add
mov
mov
ret
ret
ret
inc
ret
ret
inc
(bad)
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
(bad)
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
(bad)
ret
ret
inc
ret
ret
inc
ret
(bad)
inc
(bad)
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
(bad)
inc
ret
(bad)
inc
(bad)
(bad)
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
(bad)
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
ret
ret
inc
(bad)
mov
call
add
add
pop
pop
pop
or
(bad)
mov
inc
mov
mov
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
mov
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
mov
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
jmp
pop
or
add
add
mov
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
enter
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
retf
leave
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
retf
leave
retf
leave
leave
leave
dec
leave
leave
dec
leave
leave
dec
retf
leave
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
leave
leave
dec
retf
leave
leave
leave
dec
leave
leave
push
mov
add
fwait
fwait
fwait
lea
rol
rol
inc
ret
rol
inc
rol
ret
inc
rol
ret
inc
rol
rol
inc
ret
rol
inc
ret
ret
inc
rol
rol
inc
ret
rol
inc
rol
rol
inc
rol
ret
inc
rol
ret
inc
rol
rol
inc
rol
ret
inc
rol
rol
inc
ret
ret
inc
rol
ret
inc
rol
rol
inc
rol
ret
inc
rol
ret
push
fwait
fwait
lea
add
add
rol
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
inc
rol
add
add
jg
jg
jecxz
jecxz
aam
aam
retf
inc
rol
mov
mov
jmp
stos
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
test
scas
push
mov
call
add
add
fstp
push
icebp
icebp
push
icebp
icebp
push
repnz
repz
aam
pop
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
jmp
push
iret
(bad)
jmp
idiv
cld
cld
cld
jmp
popa
(bad)
mov
hlt
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
cmc
push
hlt
cmc
push
cmc
cmc
push
hlt
hlt
push
cmc
cmc
push
cmc
hlt
push
cmc
hlt
push
hlt
cmc
push
hlt
cmc
push
cmc
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
push
repz
repz
(bad)
fdivrp
add
add
int
out
out
out
(bad)
in
in
in
(bad)
in
in
in
call
shr
jmp
or
sar
and
sar
and
sar
and
sar
and
sar
and
sar
and
loopne
div
idiv
stc
stc
stc
jmp
push
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
into
int
test
add
mov
(bad)
in
in
in
(bad)
in
out
out
call
push
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
and
aam
mov
div
(bad)
stc
stc
stc
jmp
push
rol
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
(bad)
mov
test
add
lods
scas
push
lock
(bad)
in
in
in
(bad)
in
in
in
push
loopne
and
xlat
jmp
pmovmskb
and
xlat
jmp
pmovmskb
and
xlat
jmp
pmovmskb
and
xlat
jmp
pmovmskb
and
xlat
jmp
pmovmskb
and
xlat
jmp
pmovmskb
sub
fdivr
repnz
div
idiv
stc
stc
stc
jmp
outs
inc
(bad)
(bad)
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
xchg
add
lahf
sahf
push
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
call
fdivrp
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
push
dec
loope
div
idiv
div
idiv
stc
stc
stc
push
jno
mov
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
mov
add
xchg
nop
push
repnz
in
in
in
(bad)
in
in
in
(bad)
cmp
fdivrp
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
and
fdivr
jge
out
div
cmc
push
div
(bad)
stc
stc
cli
push
ja
retf
retf
retf
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
lock
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
xchg
add
jmp
(bad)
in
in
in
jmp
adc
jmp
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
and
(bad)
xchg
mov
push
cmc
idiv
div
idiv
stc
cli
cli
(bad)
jns
jns
into
into
into
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
out
(bad)
(bad)
pop
fstp
fdivr
out
out
out
(bad)
in
in
in
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
mov
idiv
div
idiv
stc
stc
stc
(bad)
jle
jg
rcl
sar
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
(bad)
fdivrp
mov
add
xchg
xchg
xchg
mov
out
out
out
(bad)
in
in
in
jmp
sbb
in
and
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
stos
lock
div
push
div
(bad)
stc
stc
cli
inc
aad
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
rcl
call
add
add
ret
lock
in
in
in
(bad)
cmp
out
es
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
div
push
div
(bad)
stc
cli
cli
inc
(bad)
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
inc
ret
ret
call
add
add
mov
push
icebp
icebp
(bad)
in
in
in
call
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
call
div
push
div
(bad)
stc
stc
stc
dec
fstp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
xchg
xchg
pop
cdq
cdq
cdq
xor
repnz
in
in
in
push
in
jmp
adc
in
jmp
adc
in
jmp
adc
in
jmp
adc
in
jmp
adc
in
jmp
adc
in
inc
div
push
div
(bad)
stc
stc
cli
dec
loopne
push
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
call
xchg
xchg
xchg
adc
repnz
in
in
in
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
push
out
jmp
lock
cmc
cmc
push
div
(bad)
stc
stc
stc
dec
jecxz
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
mov
add
popf
popf
sahf
in
jmp
in
out
(bad)
fcom
out
jmp
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
and
cmc
push
div
(bad)
stc
stc
stc
call
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
out
mov
(bad)
(bad)
out
out
out
(bad)
in
in
in
call
jmp
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
ret
cmc
push
div
(bad)
stc
stc
stc
call
jmp
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
(bad)
(bad)
mov
add
add
aam
push
out
out
(bad)
in
in
in
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
inc
div
(bad)
stc
stc
stc
call
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
aad
jmp
add
add
retf
lock
in
in
in
jmp
jecxz
(bad)
cmp
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
aaa
es
in
jmp
(bad)
stc
stc
stc
call
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
icebp
icebp
dec
retf
retf
cmps
cmps
add
add
test
stos
pop
rol
push
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
call
clc
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
stc
stc
jmp
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
rol
test
add
add
mov
push
repnz
in
in
in
(bad)
in
in
in
jmp
in
dec
clc
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
jmp
cli
(bad)
cmp
cli
(bad)
call
test
push
icebp
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
lods
lods
cmp
add
add
mov
icebp
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
mov
sbb
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
push
sti
jmp
icebp
icebp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
out
out
(bad)
out
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
scas
scas
adc
add
add
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
in
in
inc
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
mov
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
out
mov
mov
jecxz
loop
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
in
in
in
(bad)
in
jmp
jmp
cli
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
push
leave
jmp
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
into
fdivrp
mov
mov
mov
fcmovnu
(bad)
out
lock
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
jmp
loop
call
cld
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
iret
jmp
sbb
dec
in
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
mov
jne
push
add
add
rcl
push
lock
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
jmp
loope
call
cld
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
dec
aam
sub
sbb
dec
(bad)
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
(bad)
jmp
or
ret
(bad)
mov
add
add
retf
retf
push
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
out
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
pop
sti
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
call
fcos
sub
sbb
jmp
pop
jmp
dec
inc
(bad)
call
shl
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
jmp
loop
push
addr16
call
adc
inc
pop
movs
call
mov
add
mov
(bad)
repnz
in
in
in
(bad)
in
in
in
(bad)
out
in
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
icebp
icebp
push
icebp
bnd
push
(bad)
jmp
sbb
jmp
sbb
jmp
sbb
call
fdivrp
sub
sbb
jmp
sbb
jmp
std
call
pop
lods
dec
push
movs
jmp
and
inc
add
inc
mov
inc
mov
push
mov
add
ret
ret
ret
adc
rol
icebp
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
in
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
lock
repnz
repz
(bad)
idiv
push
inc
std
jmp
sbb
jmp
sbb
jmp
cmp
jmp
sbb
jmp
sbb
jmp
sbb
jmp
std
call
adc
dec
or
add
lahf
inc
add
inc
add
dec
rol
mov
add
add
ret
in
jmp
(bad)
out
in
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
repnz
repz
repz
repnz
jmp
xor
jmp
sbb
jmp
cmp
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
adc
(bad)
call
enter
sar
or
rol
out
(bad)
(bad)
out
out
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
repnz
repz
hlt
repz
hlt
hlt
push
hlt
hlt
(bad)
out
in
cmc
jmp
cmp
jmp
xor
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
pop
idiv
ret
ret
ret
retf
add
mov
mov
lock
in
in
in
(bad)
in
in
in
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
push
repz
repz
push
repz
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
idiv
enter
xchg
inc
std
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
inc
mov
mov
jg
fcmovu
push
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
lock
icebp
icebp
push
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
stc
stc
stc
(bad)
jmp
out
out
call
shl
jmp
ja
jmp
cli
dec
cld
(bad)
cmp
(bad)
push
and
(bad)
push
es
(bad)
cmp
inc
cld
jmp
cli
inc
cmps
idiv
rcl
(bad)
mov
jg
add
add
leave
leave
pop
aam
aam
icebp
icebp
icebp
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
in
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
push
icebp
icebp
push
repnz
repz
hlt
hlt
push
hlt
hlt
push
cmc
hlt
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
aam
dec
leave
leave
pop
retf
xor
div
idiv
repz
repz
hlt
repz
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
div
push
div
push
div
(bad)
clc
idiv
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
clc
clc
(bad)
stc
clc
stc
(bad)
sti
sti
sti
push
div
push
cmc
cmc
push
hlt
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
cmc
push
hlt
hlt
push
hlt
hlt
push
cmc
hlt
push
hlt
hlt
push
hlt
hlt
push
cmc
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
dec
into
iret
dec
retf
rcl
rcl
int3
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
dec
int3
int3
.byte
