and
add
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
add
jg
push
xchg
loope
(bad)
cmp
add
add
add
add
add
and
add
enter
sbb
add
data16
jne
ins
add
add
push
add
add
je
add
add
and
popa
add
pop
add
jb
imul
inc
add
imul
add
loopne
add
push
dec
add
arpl
push
add
add
push
add
add
fsubr
add
push
add
add
add
popa
add
push
add
ins
add
add
popa
add
add
and
jb
imul
xor
ds
push
ins
ds
imul
and
gs
je
inc
jbe
imul
je
je
gs
imul
jo
das
das
outs
cs
imul
je
arpl
das
data16
imul
outs
imul
xor
xor
ins
imul
jae
jb
jo
imul
and
push
and
gs
jne
and
je
bound
ins
outs
popa
fs
fs
jb
jo
imul
outs
addr16
gs
sub
ins
popa
outs
addr16
addr16
je
xor
xor
je
ins
ds
je
ins
ds
imul
and
jns
outs
outs
je
bound
arpl
outs
arpl
and
je
and
je
jb
gs
cmp
je
je
gs
gs
jb
jo
imul
jns
jne
popa
jb
and
imul
jne
and
and
push
and
gs
and
and
je
jb
gs
arpl
arpl
jns
jne
and
je
jb
gs
arpl
outs
arpl
outs
cs
fs
jb
jo
imul
outs
imul
je
jo
das
das
outs
cs
imul
je
arpl
das
data16
imul
outs
imul
xor
xor
ins
imul
je
ins
ds
je
ins
ds
imul
and
ins
arpl
and
imul
je
push
push
push
and
gs
je
je
gs
gs
jb
jo
imul
and
outs
and
ins
arpl
and
data16
outs
je
push
push
push
and
gs
and
imul
je
outs
addr16
outs
outs
and
and
jb
outs
and
jbe
jb
je
bound
outs
data16
and
outs
outs
ja
and
jo
popa
jns
jae
je
imul
fs
jb
jo
imul
outs
imul
je
jo
das
das
outs
cs
imul
je
arpl
das
data16
imul
outs
imul
xor
xor
ins
imul
je
ins
ds
arpl
outs
outs
gs
ds
jb
jae
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
add
add
or
or
add
or
add
add
or
add
add
repz
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
bound
inc
add
add
add
mov
add
pop
je
dec
inc
pop
fiadd
sbb
add
loope
add
sbb
inc
outs
ins
ins
outs
je
add
add
inc
jb
popa
je
and
je
and
dec
push
fs
add
call
inc
inc
push
js
in
popf
jne
sbb
(bad)
repz
xchg
cmp
push
leave
mov
pop
xchg
fst
xor
cdq
cdq
cdq
and
data16
xor
and
xchg
int3
int3
dec
pushf
cmp
or
cmps
hlt
inc
jg
lahf
ds
stc
jge
jae
cmps
mov
iret
pop
out
xlat
fucomp
into
into
into
into
into
int3
mov
mov
adc
inc
hlt
rcl
xor
cdq
adc
hlt
mov
stos
cmps
mov
imul
or
pop
pop
out
or
push
sub
jb
xor
jbe
xor
in
(bad)
(bad)
sub
retf
fld
ss
shr
ret
push
pop
imul
xchg
mov
pushf
retf
stc
aam
mov
cmc
push
xor
enter
test
cmp
inc
push
sub
shr
dec
xlat
or
xchg
aas
(bad)
jne
out
cmp
sbb
xchg
in
or
scas
iret
or
adc
and
jno
popf
inc
or
loope
and
scas
and
movs
xchg
mov
ss
sti
or
jmp
xchg
popf
jmp
loop
std
sub
xor
sub
addr16
xor
ss
xor
ins
or
sub
sub
sbb
mov
pushf
jmp
mov
aaa
mov
pop
mov
(bad)
hlt
mov
mov
inc
adc
sub
or
retf
xchg
mov
adc
test
sbb
stos
ret
fs
mov
rcl
xchg
sti
jo
xor
scas
int3
mov
or
test
aam
test
mov
add
cmps
outs
sbb
(bad)
ins
fsub
pop
std
out
and
pop
out
push
ins
mov
leave
out
mov
pop
xor
fmul
loop
inc
daa
push
dec
retf
je
loop
popf
or
push
(bad)
jl
lods
out
dec
push
retf
sub
scas
int3
fstp
aad
xchg
jo
push
rcl
jns
dec
sbb
adc
adc
mov
mov
es
mov
dec
add
cmps
sbb
repnz
test
test
inc
inc
add
mov
mov
test
loop
and
dec
repnz
xchg
inc
and
inc
mov
add
push
xor
jecxz
daa
xchg
mov
sbb
and
mov
shr
adc
std
mov
retf
mov
push
icebp
ss
mov
jle
mov
mov
(bad)
ffreep
pop
dec
and
jne
dec
pushf
mov
enter
fcmovne
push
je
cli
inc
or
jo
cmps
adc
cmps
or
inc
jns
sub
cmc
sub
ret
and
dec
mov
adc
stc
push
xor
inc
ja
sub
xor
push
pop
pop
ret
sub
imul
(bad)
push
in
fisub
lods
dec
loop
sub
ror
into
sub
mov
shr
or
sbb
and
jo
mov
test
mov
inc
and
stos
cdq
mov
adc
dec
jbe
add
adc
inc
ja
in
enter
scas
sar
adc
repnz
pop
cmps
scas
push
jle
jne
or
stc
sub
je
dec
inc
or
push
cdq
push
ret
mov
lods
jno
call
dec
mov
sbb
loope
xor
inc
pop
and
repnz
or
jle
mov
adc
xchg
cmps
jmp
ds
mov
nop
in
jmp
push
pop
cmp
xlat
push
mov
lods
in
cmps
add
lds
(bad)
loop
ss
(bad)
and
push
mov
mov
add
mov
pusha
xchg
or
pop
ret
adc
xor
mov
add
add
sub
lds
push
and
jnp
or
mov
sub
lods
test
jo
retf
repnz
pop
mov
or
adc
push
in
gs
jle
in
cmp
mov
out
(bad)
mov
sub
gs
adc
and
dec
mov
dec
push
cs
aam
loopne
mov
sub
popf
inc
xor
stos
ret
push
js
cdq
ret
mov
cmp
mov
aad
mov
mov
jbe
popa
jno
bound
vpcmpgtw
imul
pop
fnstenv
xchg
and
mov
stos
adc
or
or
loope
add
and
sub
inc
mov
xchg
and
lds
(bad)
sub
cmc
in
je
ror
ret
push
or
ret
sbb
cmps
jle
push
jmp
and
xor
jg
gs
xchg
or
sbb
and
push
xchg
jns
push
adc
ins
dec
sub
jmp
je
jno
jecxz
inc
loope
add
mov
(bad)
push
ja
pop
xlat
dec
(bad)
std
(bad)
dec
mov
push
ret
or
scas
push
je
pop
vpsadbw
daa
mov
cmp
imul
call
xchg
xchg
inc
mov
shr
add
popa
inc
add
push
or
inc
shr
and
xor
pop
or
lods
cbw
ss
in
pop
xor
or
or
sahf
js
pop
pop
pushf
rcl
add
fadd
dec
or
pop
imul
outs
gs
pop
ss
and
popf
(bad)
imul
pop
or
retf
jl
jo
daa
sub
daa
sbb
js
mov
dec
mov
(bad)
jmp
test
sti
xor
jmp
adc
pop
fnstsw
outs
ret
ret
test
dec
shr
dec
rol
in
lock
jo
xor
into
aad
cmps
push
call
xlat
or
jnp
mov
adc
mov
test
sub
out
push
cmps
jno
sub
add
and
add
mov
lods
popa
outs
jp
dec
cld
pushf
inc
push
dec
pusha
push
inc
add
and
inc
(bad)
push
or
mov
mov
mov
fimul
(bad)
mov
and
int3
shl
mov
daa
les
cs
pop
inc
jl
push
push
loop
ret
jmp
(bad)
cmp
cmp
push
icebp
or
mov
cmp
push
jle
jg
or
fdivr
push
lods
popa
lods
pop
ret
pop
jbe
in
jne
(bad)
jo
rol
mov
mov
aam
cmc
adc
jmp
jne
test
xor
mov
xor
cmp
out
loop
xor
rcr
mov
test
jo
or
ret
jmp
repz
stc
push
sub
or
jecxz
jno
popf
or
pop
push
int3
pop
push
scas
and
xchg
mov
popf
inc
nop
push
inc
mov
and
or
mov
push
add
and
inc
push
lds
xchg
and
daa
lock
pusha
mov
mov
imul
cmc
test
test
pop
adc
or
push
pop
add
sub
fabs
lea
sbb
fist
jb
xor
xchg
xchg
xchg
add
retf
mov
pop
out
add
lods
add
ds
mov
aam
xor
in
xchg
push
retf
mov
mov
into
cmp
js
mov
ja
jne
cmps
loop
popf
mov
mov
(bad)
call
lea
in
mov
mov
out
jl
imul
jmp
pop
inc
out
push
add
and
sub
sbb
je
inc
push
adc
cmps
test
xchg
inc
adc
inc
xchg
jnp
test
cmp
mov
cdq
sub
gs
je
je
push
cmp
ret
fneni(8087
sub
(bad)
jno
sub
lds
inc
fldenv
mov
cld
js
stc
jecxz
pop
ds
or
ja
idiv
pop
mov
mov
ins
sub
outs
outs
lds
pop
mov
lds
xchg
movzx
jecxz
je
rol
in
shl
test
pop
data16
call
add
cmp
test
in
sub
stos
test
inc
xlat
out
mov
imul
inc
mov
sbb
sub
dec
and
push
add
sub
or
adc
cmp
add
ror
adc
outs
pop
adc
hlt
inc
cld
sbb
clc
sub
adc
lea
std
rcl
loop
inc
push
push
fnsave
outs
push
mov
dec
ins
adc
sub
mov
inc
cs
mov
mov
cmp
fimul
pop
lods
pop
sub
outs
rol
pop
and
mov
cmc
push
movs
sbb
sub
xor
mul
or
adc
or
test
gs
inc
push
(bad)
jge
js
mov
jns
and
(bad)
call
not
mov
dec
jle
enter
or
and
dec
and
lahf
ficomp
call
mov
add
scas
jns
nop
add
(bad)
cld
pop
xor
jbe
int3
pop
call
adc
(bad)
call
push
repnz
xor
(bad)
mov
mov
cmp
das
cmps
jne
fistp
cmp
xchg
arpl
xchg
retf
jge
pop
push
in
cmc
mov
scas
scas
scas
and
stc
push
into
lods
add
mov
inc
imul
retf
or
test
push
pop
ror
inc
das
jb
and
push
mov
jns
sub
(bad)
rcl
mov
mov
pop
push
sbb
out
add
jmp
add
nop
jo
shl
dec
mov
ret
shr
xor
add
adc
mov
mov
xor
inc
int
in
dec
mov
je
bound
xor
mov
rcl
retf
scas
das
jl
dec
icebp
retf
cmp
jl
jmp
dec
pop
test
xchg
mov
stos
fist
jno
je
mov
call
mov
in
jg
mov
cmp
jno
cdq
das
and
cmc
pop
xlat
ss
xchg
dec
aam
inc
xor
push
int3
pop
sub
jecxz
aas
mov
dec
jl
inc
xchg
and
test
mov
adc
mov
pusha
rcr
repnz
mov
adc
and
or
mov
jecxz
pop
xor
adc
loop
inc
add
adc
push
(bad)
shr
or
xchg
mov
dec
imul
out
test
sar
fnstsw
sub
mov
das
cwde
xchg
push
lods
mov
or
repnz
lods
push
lock
cmp
mov
xor
and
repz
push
jecxz
add
mov
push
or
xchg
nop
add
add
jp
and
xchg
inc
movs
aaa
shl
adc
jnp
stc
cdq
inc
adc
add
aas
imul
ret
pop
dec
or
stos
xchg
xchg
sar
test
xchg
xor
cmps
xchg
lgs
fucomip
jb
mov
push
fs
jmp
ret
xchg
adc
xchg
retf
jae
mov
retf
loope
loope
cmp
push
std
imul
xor
dec
sbb
push
rcl
out
and
mov
or
cs
outs
mov
inc
pop
dec
mov
pop
dec
add
adc
cmps
aaa
push
in
or
inc
lods
add
clc
jns
inc
ret
mov
add
int3
mov
enter
pop
js
(bad)
iret
pop
sbb
popf
adc
sub
xchg
jb
push
outs
aam
(bad)
lock
popa
fild
jg
mov
shr
or
stos
add
mov
dec
mov
inc
mov
imul
jecxz
stc
out
or
iret
ins
sub
rol
leave
inc
mov
sahf
popa
ja
scas
push
cmp
aad
or
lea
add
fdiv
push
xor
xchg
inc
jmp
rcl
mov
pop
test
adc
loop
inc
adc
dec
fsub
or
inc
pop
xor
mov
jmp
sbb
xchg
in
mov
fmul
xchg
jg
iret
pop
add
in
mov
mov
icebp
jb
inc
pop
push
add
call
push
cmp
clc
cmp
(bad)
ret
sbb
imul
in
jle
pop
jecxz
retf
sub
or
test
cmp
mov
sub
mov
pop
or
push
add
pop
push
adc
jne
mov
aas
into
loope
fisub
fnsetpm(287
adc
cmp
cs
mov
call
xchg
inc
add
lods
add
or
jp
shl
xor
test
mov
dec
xchg
cdq
jbe
or
dec
mov
in
push
daa
pop
sub
mov
js
inc
test
ins
pop
mov
mov
in
xor
fidiv
mov
sub
sti
rcl
mov
jmp
out
jo
cs
and
xchg
cmp
pop
lds
sbb
fidiv
xor
mov
je
mov
and
push
push
stos
mov
clc
mov
sub
dec
mov
scas
das
push
je
dec
sar
out
mov
and
sar
adc
pop
jmp
add
add
dec
mov
mov
pusha
retf
or
add
pop
int
ins
(bad)
sub
sub
push
xchg
or
je
mov
or
push
fdiv
mov
push
jno
adc
jno
mov
cmp
mov
cmps
sub
repnz
inc
xchg
push
retf
ss
lods
sub
mov
je
js
icebp
repz
adc
test
cmps
fdiv
push
ss
or
cmp
(bad)
scas
adc
int3
and
lds
jb
cmp
and
adc
popa
stos
add
js
ror
or
dec
mov
loopne
fst
call
call
lods
retf
jl
fsubr
ss
daa
push
ja
retf
or
je
scas
push
push
gs
mov
push
ret
mov
and
or
pop
imul
dec
popf
retf
lods
xor
out
mov
inc
pop
mov
cmp
pop
inc
jno
stc
jbe
scas
mov
shr
add
fild
mov
mov
retf
sub
loop
cld
scas
dec
cmp
cmps
mov
aam
pop
cmp
push
mov
push
jmp
(bad)
push
or
xor
push
and
push
adc
ret
call
push
push
fwait
jmp
test
add
fwait
das
sbb
jle
ret
cmp
pop
enter
test
jmp
cmps
hlt
jns
movs
(bad)
mov
xchg
(bad)
lock
mov
icebp
cmp
mov
mov
push
cmp
push
mov
inc
sub
movs
test
xchg
pop
jg
call
push
shr
sbb
shr
jg
inc
test
(bad)
cmp
test
inc
icebp
push
popf
xlat
cmp
push
add
retf
jmp
pushf
and
and
jae
xor
or
sbb
mov
pop
aam
pop
ins
scas
inc
movs
daa
shl
sub
or
mov
leave
ss
addr16
rcr
js
je
hlt
inc
inc
xchg
aas
mov
ins
dec
repnz
adc
pop
push
fsub
fwait
xor
shl
loop
jl
out
adc
push
cmp
mov
adc
leave
jae
cs
call
stc
xchg
js
mov
pop
hlt
stc
add
xor
out
adc
mov
lods
jmp
xchg
gs
pop
outs
dec
dec
push
fwait
data16
fcmovu
push
clc
mov
jno
push
jl
dec
add
push
xchg
mov
cmp
or
push
add
mov
cmc
adc
nop
rol
retf
out
gs
or
inc
inc
arpl
ret
and
leave
fwait
cmp
dec
sahf
retf
js
adc
sbb
xchg
pop
jg
sahf
retf
sbb
inc
stos
adc
in
pop
test
add
sahf
rol
test
inc
sti
rcr
ins
xor
and
rcr
mov
rcr
div
pop
pushf
ficom
(bad)
jp
lds
scas
push
or
sbb
dec
in
xor
sub
inc
lea
push
rcr
pop
or
add
mov
and
and
rcl
cdq
cmps
retf
push
sbb
data16
js
adc
mov
cmp
test
cmc
aaa
mov
ror
inc
push
xchg
imul
add
out
inc
je
push
mov
ja
mov
sbb
aam
(bad)
fbstp
xor
cmp
outs
call
lahf
pop
mov
pop
sub
stos
add
cmp
fstp
mov
imul
sub
jae
pop
jbe
repnz
add
add
ror
cmc
add
and
daa
xor
mov
mov
jmp
and
mov
cmp
pop
push
fisubr
or
dec
rol
fst
mov
or
daa
dec
cmp
lods
add
xor
rcr
scas
test
cmp
adc
test
stos
cmp
movlps
sbb
push
in
mov
pop
ja
push
add
(bad)
aad
pop
shl
lds
push
and
inc
mov
dec
add
mov
pusha
xor
fs
mov
xchg
pop
inc
inc
xchg
inc
and
add
or
sbb
xor
mov
outs
in
stos
sub
mov
into
retf
ins
fld
mov
mov
(bad)
dec
jmp
and
jge
ds
retf
retf
mov
stc
mov
movs
je
pop
test
add
xor
test
ds
jecxz
xor
push
jmp
fist
add
inc
mov
and
test
inc
ins
dec
pusha
xchg
add
adc
dec
dec
mov
and
add
xchg
and
(bad)
hlt
daa
leave
addr16
in
inc
mov
shl
mov
clc
push
push
pushf
retf
(bad)
cmp
sub
cmp
or
retf
ret
vminss
mov
mov
stos
jge
sub
push
out
mov
jb
push
pop
dec
mov
pop
cmp
lds
adc
lds
lods
and
or
into
add
iret
push
adc
faddp
repnz
arpl
jmp
in
loope
mov
cmps
lods
and
jmp
jns
sar
idiv
cli
and
repz
inc
pop
cmps
cmp
pop
inc
push
mov
fdiv
ss
inc
scas
bound
test
inc
test
movs
lds
jg
or
and
cmc
jae
lds
sub
test
mov
add
inc
add
push
pop
xchg
sub
out
lods
pop
pop
and
push
ja
dec
or
(bad)
mov
mov
test
out
arpl
and
mov
movs
loopne
push
add
lahf
add
mov
pop
inc
mov
jbe
jmp
(bad)
push
inc
push
into
stos
sub
lea
push
or
in
sub
mov
(bad)
out
inc
dec
mov
or
cmp
mov
inc
stos
or
mov
add
or
sub
rcr
xor
mov
retf
push
xchg
retf
fist
mov
sub
cmp
sbb
call
jb
ret
aas
push
inc
dec
loope
movs
mov
in
mul
mov
cs
out
inc
mov
rcl
in
mov
scas
cwde
or
add
and
inc
add
xor
jmp
mov
cmp
push
and
push
(bad)
ss
adc
pop
add
mov
jmp
sub
or
ds
test
pop
out
loop
xchg
xchg
or
mov
mov
jo
mov
mov
ins
out
imul
and
mov
xlat
dec
sub
jecxz
jmp
and
repz
aaa
ror
in
add
push
or
dec
loop
and
push
add
or
and
pop
jecxz
aas
inc
lahf
stc
pop
and
out
add
or
xchg
adc
pop
mov
ret
les
popa
fsub
adc
mov
or
mov
sub
pop
mov
xchg
pop
stc
mov
outs
jnp
jecxz
adc
cmps
xchg
out
mov
and
sahf
mov
call
add
and
inc
int
or
addr16
or
retf
lahf
ror
lds
push
jne
or
test
jb
aad
(bad)
cmps
cli
pop
or
push
add
lods
cli
mov
fcomp
or
mov
and
jge
popa
test
sbb
xor
jg
and
xchg
lock
jp
sub
inc
aaa
adc
inc
shl
cwde
and
mov
cmc
add
nop
mov
inc
ficom
xor
mov
xor
imul
loop
xchg
push
sub
xor
jnp
sub
fist
stos
arpl
in
jp
repz
bt
xlat
nop
in
adc
daa
or
sahf
and
shr
pusha
and
add
mov
popf
mov
pushf
sub
mov
cmp
call
inc
push
shr
shr
mov
imul
xchg
cmps
and
xchg
ret
(bad)
fnstenv
hlt
and
sub
mov
(bad)
je
or
aas
adc
test
inc
mov
lea
inc
push
or
or
dec
jno
inc
jno
movs
xchg
aas
cmps
xchg
mov
pop
pusha
mov
rcl
sub
ds
sub
loope
inc
daa
inc
(bad)
mov
mov
pusha
test
dec
pop
push
jns
cmp
std
adc
mov
sub
and
dec
adc
xor
fs
adc
inc
add
or
and
or
mov
xlat
popf
mov
pop
je
ficomp
bound
sbb
or
imul
xor
xchg
mov
pop
pop
scas
adc
pop
sar
mov
sub
mov
neg
cmc
add
adc
daa
nop
icebp
push
add
test
add
cld
test
inc
sub
mov
or
rcr
stos
sub
inc
stos
out
call
pop
iret
or
fist
popf
inc
out
ds
and
push
mov
xchg
inc
lods
add
and
fimul
(bad)
gs
dec
(bad)
sbb
cmp
test
and
adc
das
or
adc
jns
fbld
mov
jg
mov
push
cs
xor
sub
repz
iret
mov
pusha
xor
mov
mov
add
rcr
ja
sbb
or
mov
push
cmp
je
loop
push
mov
push
aas
je
push
pop
rcr
mov
or
aad
and
scas
push
push
or
jae
(bad)
mov
hlt
and
add
les
test
mov
ror
and
aam
test
aam
je
int
jb
sub
jl
lock
inc
jbe
loope
sahf
(bad)
sbb
add
sub
je
pop
mov
cli
shl
not
jne
(bad)
ja
pop
xor
repnz
(bad)
sub
(bad)
icebp
sbb
hlt
sub
je
sub
or
movs
or
sub
and
rcl
mov
call
cmps
mul
mov
xchg
mov
pop
stos
mov
mov
mov
scas
ret
stos
cmp
sub
loope
mov
xchg
add
rcl
mov
(bad)
out
xor
(bad)
icebp
sbb
das
or
pop
add
mov
push
test
inc
addr16
dec
add
aas
(bad)
push
test
test
pusha
inc
int
sub
test
shl
in
or
mov
push
push
push
(bad)
test
cli
loope
imul
popf
mov
mov
push
stos
push
sub
and
xor
outs
gs
test
cmp
lods
adc
cmps
pop
push
sub
add
inc
jle
into
add
fisttp
inc
fwait
pop
lea
sbb
scas
mov
and
push
push
and
fiadd
push
adc
dec
je
enter
or
or
cmc
cdq
inc
scas
add
test
les
call
je
imul
jle
xor
or
retf
in
stc
pop
pop
into
pusha
xor
pop
pop
pop
xchg
mov
mov
cmp
pop
jb
mov
and
cs
dec
idiv
mov
inc
xchg
fisub
pop
add
push
cld
sbb
les
call
ds
pop
popf
cmp
pushf
repnz
or
dec
jle
or
sti
add
das
xchg
jnp
and
inc
jb
adc
je
inc
or
pop
or
push
outs
pop
jnp
inc
pop
push
xchg
adc
les
test
xchg
loopne
scas
dec
lods
in
test
iret
aam
scas
ror
push
jne
test
pop
loopne
adc
jp
mov
aas
or
push
out
sbb
push
cmp
daa
repnz
inc
add
mov
mov
mov
cmc
inc
or
push
jmp
(bad)
out
lds
mov
inc
int
das
ror
sar
mov
fdivr
rcl
pop
test
pop
push
push
sbb
jmp
loope
sti
sub
fmul
add
push
add
repnz
and
jae
adc
mov
pop
add
inc
std
inc
(bad)
je
popf
push
sub
xchg
jmp
retf
out
daa
aam
repz
aas
dec
pop
lds
(bad)
(bad)
gs
and
mov
cmp
inc
jbe
mov
jge
inc
ret
push
shr
adc
dec
pusha
jno
adc
stos
retf
test
ret
jne
ficom
push
into
(bad)
inc
adc
sti
or
daa
push
imul
mov
stc
xor
push
push
mov
xchg
mov
daa
mov
bnd
pop
dec
add
hlt
jmp
add
inc
aad
sahf
cmp
mov
pop
ins
and
and
mov
ror
jne
mov
pusha
sub
ins
movs
arpl
aad
mov
mov
or
add
or
add
push
pushf
test
add
or
fdivr
lock
mov
ins
jne
cmps
stos
arpl
aam
mov
clc
or
and
fistp
adc
repz
adc
adc
out
add
add
inc
lock
pop
pop
push
xchg
dec
adc
push
pop
jns
retf
jmp
push
inc
ja
pop
mov
fnsave
fld
ins
lea
(bad)
pop
shl
in
in
and
push
and
ror
or
add
sub
and
mov
popf
sub
ror
lahf
call
jmp
fisttp
xchg
xor
hlt
xor
mov
xor
cmp
test
pop
(bad)
or
xor
cmp
push
or
cmc
add
cld
jmp
push
or
mov
jp
mov
sub
retf
xchg
adc
pop
or
ret
pop
mov
daa
not
cwde
jge
daa
push
sub
shl
add
jecxz
sub
adc
adc
mov
dec
ret
iret
shl
lock
add
das
ret
into
mov
clc
sub
mov
fist
ss
repnz
mov
or
int3
in
push
test
lock
xor
inc
sub
push
add
jbe
je
inc
pop
das
pusha
xchg
add
cmc
add
xchg
loope
loope
fadd
mov
div
add
in
popa
pop
les
daa
add
aaa
cs
into
ret
ins
inc
fsubr
sbb
loop
loopne
xor
add
into
inc
push
inc
outs
jne
in
xchg
scas
inc
jmp
arpl
fcom
ror
retf
dec
sub
sti
sbb
repnz
retf
imul
mov
dec
clc
cwde
je
cmp
add
fistp
js
cmp
inc
in
xchg
fs
mov
sub
push
inc
cmp
js
(bad)
in
call
(bad)
xor
pushf
mov
gs
add
dec
shl
call
lods
add
outs
and
fimul
test
shl
inc
in
or
cmp
pushf
(bad)
popf
jecxz
js
mov
mov
mov
test
mov
test
shl
cmc
gs
adc
repz
xchg
jo
dec
add
in
push
xchg
loopne
clc
daa
jmp
sbb
sti
test
test
pusha
pop
dec
out
cmps
or
pop
daa
rol
retf
aas
out
jg
dec
mov
jnp
lds
mov
and
xchg
aam
jmp
movs
or
jnp
mov
cmp
(bad)
dec
dec
jge
popa
retf
fwait
jmp
es
dec
popf
iret
mov
fisttp
mov
sub
add
inc
add
jb
jno
jecxz
sar
test
fcomp
mov
sub
daa
rol
arpl
dec
loop
mov
popf
outs
pop
and
sbb
pop
das
repnz
and
jbe
mov
jmp
dec
xor
jae
pop
xchg
sbb
sbb
inc
out
scas
outs
mov
scas
rol
mov
sbb
stc
js
jno
jbe
jns
popf
iret
xchg
loopne
add
push
or
dec
and
hlt
jl
inc
xchg
punpckhbw
push
out
mov
icebp
jo
adc
sub
les
cli
jb
or
add
xchg
mov
gs
sbb
cld
sub
mov
jno
jbe
mov
popf
rcr
pop
bnd
xchg
push
mov
xor
into
xchg
sub
jl
fwait
xor
sub
iret
xchg
pusha
ret
inc
(bad)
in
mov
and
movs
xchg
inc
mov
sub
pop
jb
mov
pop
gs
ja
jle
ins
cdq
retf
repnz
mov
je
fucom
push
mov
enter
outs
mov
cmp
sar
je
dec
in
mov
call
push
push
mov
mov
sbb
inc
mov
adc
clc
xchg
fidiv
cdq
stos
jle
or
iret
push
movs
into
out
shr
stos
xchg
aas
or
sahf
push
add
adc
inc
inc
add
push
add
add
pop
sbb
test
inc
lods
sub
shl
(bad)
cmp
cmps
lds
lahf
adc
std
lods
cs
pop
je
cmps
mov
dec
push
mov
cmps
int
outs
rcr
pop
repz
jl
push
push
push
pushf
and
xchg
sub
movs
movs
jecxz
in
in
mov
pop
push
and
mov
imul
add
push
daa
jle
fmul
mov
add
pop
dec
ret
std
(bad)
daa
add
sub
inc
in
(bad)
sti
sub
retf
cdq
jb
arpl
repnz
jmp
pop
jbe
les
add
not
int
xchg
xor
push
mov
sbb
shl
pop
dec
add
mov
or
or
pop
sbb
aad
ja
clc
popa
push
test
retf
dec
jge
jmp
sub
xchg
aas
pop
sbb
mov
sbb
sub
and
aad
(bad)
(bad)
mov
imul
loope
add
mov
mov
add
enter
rol
adc
add
cmps
pop
mov
jb
ficom
rcl
mov
jno
data16
(bad)
pop
fld
test
xor
addr16
xchg
and
mov
in
cli
shl
or
retf
dec
jge
jbe
mov
add
aad
sahf
dec
mov
in
test
loop
fisttp
rcr
and
xlat
xlat
mov
push
aaa
add
test
(bad)
cmp
jns
aad
test
div
mov
adc
cdq
mov
fisttp
gs
clc
pop
jb
fld
pop
rol
or
push
ds
mov
into
pop
movsx
and
cld
mov
jg
mov
adc
dec
jmp
lods
arpl
sahf
push
out
mov
loope
daa
cmp
ja
je
xchg
sbb
sbb
mov
jecxz
sub
lea
arpl
inc
out
(bad)
fsub
cmps
in
cmp
push
cs
hlt
pop
movs
xchg
pop
mov
sbb
pop
adc
fsub
dec
cmp
cmp
jl
shl
or
pop
push
fbstp
aaa
imul
popf
and
repnz
adc
jb
pop
(bad)
lock
cmp
mov
aas
jmp
pop
je
inc
rcl
cld
jae
sbb
sub
mov
repz
inc
or
cmp
dec
lods
mov
cmc
and
cmp
mov
pop
sahf
sti
xchg
(bad)
mov
cwde
aam
sub
cmp
fnstenv
adc
mov
loopne
push
push
jnp
(bad)
into
lea
fucom
mov
or
jb
dec
out
lds
leave
mov
in
into
jns
pop
mov
sahf
out
fstp
jo
push
mov
lock
rcl
push
xlat
call
retf
push
fild
cli
add
ret
out
push
(bad)
jecxz
call
lahf
fimul
nop
mov
jae
jno
iret
rcl
enter
and
lods
clc
sub
add
xlat
jmp
(bad)
lahf
mov
cmp
pop
inc
aad
or
mov
mov
mov
mov
inc
cmps
in
retf
and
xor
mov
dec
stos
sti
stc
and
shl
fmul
test
(bad)
out
lods
mov
pop
adc
cmp
mov
je
jo
loopne
dec
pop
repnz
push
in
jo
jb
jmp
dec
clc
sub
movs
add
retf
aaa
test
jp
dec
out
xor
xor
ds
pop
and
ds
and
cdq
dec
mov
call
sbb
call
dec
retf
xchg
in
(bad)
cmp
mov
dec
repz
add
mov
sti
mov
lods
jbe
sti
jle
shl
ins
adc
add
lods
rcr
movs
(bad)
movs
and
popf
(bad)
mov
xchg
xlat
jno
(bad)
push
or
scas
(bad)
dec
adc
shl
mov
or
mov
jae
xchg
mov
enter
mov
mov
mov
lods
cmps
repnz
(bad)
stc
pop
loop
cmp
(bad)
cmp
pop
std
popa
loop
in
jmp
jg
clc
sub
movs
lds
mov
jl
fidivr
ja
ins
retf
aaa
or
jecxz
(bad)
pop
pop
xlat
jge
push
into
pop
pop
mov
into
out
mov
repz
sti
loop
xor
pop
dec
imul
sti
xor
bswap
mov
push
mov
xor
lar
xor
sahf
or
mov
loope
in
mov
pop
std
fwait
out
jno
and
jae
lods
mov
imul
fwait
das
cmp
pop
mov
sub
movs
add
mov
and
clc
jbe
in
shl
sub
dec
and
cmc
add
in
loope
imul
dec
cmp
and
mov
movs
inc
or
cmps
inc
ja
sbb
ret
jg
mov
xchg
jg
clc
cmp
jns
das
shl
dec
xchg
cs
das
push
mov
ror
lds
mov
outs
xchg
(bad)
pop
cmp
mov
hlt
loopne
(bad)
dec
pop
push
in
pusha
rcl
test
pop
cmp
fwait
pushf
fisttp
ret
icebp
(bad)
cmp
ret
aaa
fsubr
fimul
xchg
xor
dec
add
stc
sub
or
push
add
iret
aad
lods
sbb
dec
stos
jecxz
xchg
je
pushf
das
daa
pop
inc
adc
sar
mov
adc
out
mov
pop
add
mov
(bad)
mov
mov
cld
in
xchg
mov
out
ficomp
mov
mov
add
or
or
rol
ds
(bad)
dec
adc
jno
cmps
outs
cmp
dec
sbb
mov
cmp
(bad)
stos
enter
pushf
mov
cmp
stc
arpl
pushf
jb
xchg
mov
xchg
lods
ins
popa
cdq
mov
dec
mov
add
cmp
xchg
loope
(bad)
cld
sti
push
hlt
and
fisub
jnp
jle
out
mov
fnstsw
dec
mov
push
dec
jae
adc
sub
clc
xor
sub
out
add
(bad)
pop
xchg
push
push
bt
daa
dec
repz
fidiv
loope
add
jns
sub
bound
inc
out
mov
dec
sar
mov
mov
into
pop
mov
ds
push
cmp
sbb
or
ret
mul
outs
loop
shl
push
fild
xor
outs
mov
retf
aaa
shl
mov
pop
lds
(bad)
rcl
xchg
or
pop
mov
outs
add
inc
inc
add
inc
fstp
gs
push
loope
cwde
sbb
pop
popa
mov
jg
xor
int
sub
rol
movs
xlat
daa
add
pop
adc
dec
mov
dec
xchg
jg
ins
stc
ret
(bad)
mov
movs
add
or
adc
jno
jl
inc
mov
inc
pop
(bad)
push
stos
(bad)
loopne
call
mov
jp
aaa
ins
cmp
leave
ficom
out
jl
adc
ins
jl
or
aas
inc
call
mov
sahf
sti
and
and
xor
pop
mov
add
enter
push
loope
jle
ins
(bad)
mov
sub
clc
xchg
outs
(bad)
enter
stos
add
mov
sub
jnp
lods
test
push
fs
cmp
sub
pop
add
loope
add
cmp
pand
and
pop
inc
pop
inc
mov
add
mov
sbb
outs
jge
xor
push
sub
hlt
loop
loop
das
mov
rcl
mov
cmp
xchg
out
push
xlat
stc
or
xchg
fmul
icebp
cmp
into
mov
lods
sti
cmc
xchg
mov
inc
mov
jecxz
fmul
jns
loope
add
sub
jl
stc
xchg
jnp
jns
(bad)
cs
jecxz
add
adc
aad
add
bnd
xor
je
jmp
movs
fnstcw
mov
aas
jge
cmc
and
movzx
and
repz
add
and
pop
xor
mov
mov
sbb
sbb
xchg
or
out
lods
mov
push
cld
and
sub
mov
adc
outs
cmp
psrlq
lock
push
jb
scas
lods
xlat
push
fmul
mov
lods
test
or
je
push
and
or
dec
or
movs
pop
cmps
jecxz
sub
in
ds
pop
fisttp
nop
sti
pusha
mov
jns
mov
push
and
das
or
or
mov
lods
js
sub
fcmovnbe
sbb
out
add
xchg
mov
out
or
xchg
das
push
(bad)
(bad)
mov
mov
nop
pop
imul
jo
dec
xchg
cmp
mov
outs
pop
test
add
fcomi
test
jns
mov
fwait
mov
push
add
xchg
imul
stc
loopne
inc
in
rcl
push
add
dec
xor
stos
inc
dec
mov
sbb
imul
stc
ficom
call
nop
mov
mov
sub
cmp
and
sub
add
mov
ins
sbb
out
in
pop
in
jp
add
push
push
add
sub
rol
sbb
pop
(bad)
mov
xchg
pop
pop
add
jns
jle
lahf
lahf
aam
xchg
test
push
push
add
xchg
sbb
and
or
inc
or
or
loopne
cld
sub
aaa
ror
pushf
sbb
outs
sbb
xor
pop
iret
sub
enter
inc
call
add
ret
add
fs
mov
xchg
pop
sbb
jl
int
sbb
xor
push
sbb
adc
mov
or
fcmovne
push
inc
xlat
mov
dec
and
sahf
mov
add
inc
mov
aaa
mov
sub
push
out
push
push
xchg
scas
je
dec
fnstsw
mov
fst
add
mov
push
loop
sub
ffree
std
and
sbb
jb
aas
mov
fist
stos
sub
sbb
pop
fnstsw
leave
jnp
mov
xchg
out
pop
(bad)
pop
dec
shr
jp
data16
es
les
adc
iret
stc
test
outs
cmp
mov
mov
test
mov
shl
cmp
push
fidiv
add
or
fs
adc
loop
mov
out
in
mov
mov
ret
cmp
in
call
cmp
rol
mov
sahf
mov
xchg
jecxz
add
lods
ret
movs
add
jmp
(bad)
mov
ret
cmp
push
sbb
pop
push
aad
sti
das
mov
repnz
fnstsw
leave
jnp
and
outs
fisttp
adc
dec
or
daa
stos
pop
das
xchg
pop
ret
repnz
fnstsw
add
mov
sub
dec
mov
add
dec
mov
ja
push
inc
leave
loopne
mov
test
loope
fisttp
out
mov
push
or
inc
push
or
add
rol
mov
jle
pop
outs
idiv
sub
or
push
outs
loope
js
into
test
dec
push
js
mov
mov
sub
inc
cmc
jl
(bad)
mov
in
sahf
dec
movs
repz
(bad)
in
mov
stos
(bad)
pusha
add
in
jne
mov
jp
jnp
in
ror
repz
sub
mov
int3
xchg
inc
mov
out
les
xchg
aad
xor
out
jo
pop
aam
xchg
sbb
adc
or
inc
add
jb
aas
inc
ja
push
inc
leave
loope
push
enter
dec
stos
mov
xor
(bad)
cmp
mov
repz
push
inc
jns
stc
imul
div
mov
add
xor
mov
in
std
jne
jns
stos
mov
jne
xchg
rcr
and
fadd
cmps
outs
push
ins
mov
lods
cld
into
pop
(bad)
cmp
mov
jno
cli
mov
fcomp
mov
enter
adc
out
xchg
jbe
mov
xchg
xor
jnp
jmp
test
xchg
stos
jbe
pop
add
fmul
and
out
sar
jne
push
aam
xchg
mov
jmp
shr
and
adc
push
dec
stos
jg
stc
dec
sub
repz
push
mov
inc
jne
test
sub
inc
daa
jg
mov
test
adc
jge
retf
dec
ss
cmp
mov
shl
jl
aad
scas
mov
or
cmp
inc
iret
mov
pop
cld
clc
jbe
stc
fdivr
(bad)
fild
sahf
push
mov
jbe
pop
push
add
pop
sub
add
mov
aas
popf
xor
push
popf
mov
std
cmp
jno
outs
scas
jecxz
clc
in
lock
mov
sbb
mov
retf
sub
jae
mov
push
into
scas
stos
pop
sti
mov
(bad)
fisttp
adc
loop
sbb
shl
je
loop
or
retf
clc
rol
push
test
loope
test
mov
movs
stos
popf
jle
popf
mov
cmp
mov
mov
popf
push
fld
fistp
ds
and
out
add
push
inc
outs
adc
test
sub
mov
mov
sbb
push
adc
sub
adc
inc
dec
ret
push
ret
mov
loope
daa
sub
lds
cmp
or
iret
lock
jbe
ds
adc
clc
pop
and
out
add
xchg
pop
(bad)
sti
div
int3
xchg
mov
addr16
jle
cli
mov
sub
lea
jo
cmp
loopne
cmp
out
push
adc
or
dec
ds
mov
int
jno
(bad)
jmp
ins
ret
iret
or
(bad)
sbb
cmp
xchg
xor
rcr
daa
aas
pop
(bad)
jmp
fisttp
loopne
dec
adc
outs
sub
jl
push
(bad)
sbb
pop
movs
stos
xchg
dec
clc
neg
mov
mov
xor
pop
call
std
stc
pop
cs
cmp
jns
ja
or
and
in
das
lds
add
stos
jl
jp
inc
fnsave
cmps
xor
(bad)
repz
and
inc
(bad)
jmp
sbb
clc
xchg
cmps
loope
cmps
js
pop
jb
out
mov
pop
and
mov
xchg
retf
adc
jae
ret
loope
fstp
(bad)
mov
push
cmp
xor
or
cmp
sti
jl
dec
dec
xor
outs
cmp
lods
das
dec
je
clc
or
jae
push
repz
cmc
xchg
out
xchg
inc
(bad)
(bad)
sti
je
push
ret
jmp
adc
inc
lds
ret
pop
icebp
push
pop
mov
mov
jge
mov
movs
cmp
mov
xor
push
scas
xor
cdq
jecxz
pop
xchg
dec
jle
push
(bad)
leave
out
das
mul
push
cli
pop
adc
cli
cdq
out
pop
cmp
icebp
mov
mov
push
jnp
loope
dec
mov
adc
rol
je
arpl
call
sbb
xchg
xor
sbb
shl
dec
add
les
lea
sbb
je
out
lahf
xchg
push
mov
jne
jecxz
iret
sub
mov
push
ins
pop
cdq
arpl
mov
xchg
or
or
inc
xor
ins
mov
shl
add
and
shl
inc
jae
(bad)
and
ret
and
cmps
(bad)
loopne
les
jb
(bad)
out
jb
add
sub
popa
jne
call
cmp
inc
xor
ins
mov
shl
add
dec
mov
int
in
icebp
add
enter
inc
cld
cmp
lock
push
mov
cdq
mov
xchg
shl
or
sbb
dec
pop
pop
bound
inc
daa
jg
adc
inc
hlt
lock
sub
adc
pushf
pop
repnz
ror
xchg
ds
xchg
dec
add
xor
lods
mov
ret
jne
mov
sub
fadd
or
and
xchg
mov
inc
add
bound
cld
xor
and
mov
das
mov
sub
or
mov
and
add
add
xchg
and
and
inc
daa
jge
lds
lea
sbb
inc
je
xor
or
inc
sbb
in
lods
movs
std
sub
and
push
xor
inc
xchg
inc
add
xor
pusha
lahf
and
repz
mov
add
mov
push
and
and
inc
xchg
out
das
mov
sub
lea
add
sub
mov
ds
xchg
out
das
mov
or
cs
add
sub
in
mov
lds
das
mov
sub
cs
add
sub
std
mov
(bad)
ds
xchg
out
add
sbb
dec
call
or
or
es
add
sahf
adc
loope
inc
pop
xchg
sub
pop
cli
or
add
add
ins
imul
xchg
adc
and
inc
xchg
out
pop
ror
mov
push
loop
inc
xchg
ds
xor
mov
imul
hlt
add
jl
inc
add
sub
push
add
sub
xor
push
sub
test
dec
sub
push
add
test
je
mov
call
mov
sub
jmp
sbb
adc
push
add
test
je
mov
nop
in
nop
inc
and
lods
mov
dec
jmp
add
jle
aas
sbb
or
inc
and
mov
and
add
jno
inc
(bad)
mov
popa
dec
xchg
shl
sub
push
lods
in
mov
bound
pusha
test
mov
xlat
dec
je
or
jne
fst
xor
or
retf
fs
mov
arpl
mov
jp
cs
hlt
imul
add
imul
(bad)
sbb
xor
sub
ins
movs
cmc
adc
cs
xor
sbb
pop
dec
fwait
out
xor
arpl
mov
cli
sub
add
xor
ins
mov
xor
push
or
add
rcl
mov
pop
mov
mov
sub
or
inc
xor
or
xor
push
or
add
rcl
mov
shl
jnp
leave
sahf
adc
mov
mov
sbb
ins
mov
sbb
and
add
int
neg
sar
sti
test
inc
and
mov
sbb
in
mov
sbb
add
rcl
pop
add
mov
push
push
pop
rol
imul
xchg
sbb
or
or
xchg
cli
sub
add
xor
xlat
add
add
push
and
pop
je
sbb
and
test
inc
and
mov
sbb
imul
add
or
add
and
push
add
test
jo
outs
mov
inc
inc
and
in
fbstp
(bad)
cmp
ret
stos
jno
rcr
cmp
lods
adc
out
inc
fsubp
or
or
fucom
inc
(bad)
mov
add
in
outs
cmp
xchg
mov
jle
sbb
scas
lods
or
xchg
mov
scas
movs
mov
mov
outs
or
sbb
(bad)
(bad)
loope
xor
aaa
js
lahf
cld
arpl
jno
cwde
mov
jo
clc
ror
cmp
(bad)
int
jle
repnz
into
shl
stos
jno
in
retf
mov
addr16
lds
mov
dec
lea
xor
add
or
or
cmovbe
mov
call
mov
test
(bad)
pop
xor
push
or
or
jne
sbb
rcl
push
mov
sub
dec
out
and
data16
sbb
xchg
adc
shl
and
test
mov
inc
push
out
out
dec
retf
cmp
and
push
mov
fild
adc
(bad)
shl
rol
mov
repz
xor
lea
(bad)
cmc
adc
aam
in
call
ins
sbb
inc
out
aas
(bad)
aam
popa
lods
add
test
scas
pop
(bad)
cmp
add
jecxz
xor
aam
push
add
scas
cmp
outs
sbb
call
mov
lods
sti
cmp
ds
push
xor
icebp
xor
push
and
push
cmp
jle
clc
xlat
stos
mov
jne
mov
scas
adc
in
jno
or
(bad)
aas
xchg
xor
out
cmp
push
mov
fild
pop
clc
sar
inc
pop
mov
push
into
lahf
cmp
mov
sar
fadd
fnstcw
jnp
xchg
test
les
test
mov
cmc
repz
xchg
int
ds
cmp
jb
mov
push
mov
push
fmulp
xor
mov
imul
jmp
sub
mov
out
pop
and
nop
mov
cdq
mov
outs
lods
loopne
(bad)
jne
enter
xchg
lea
ds
aaa
inc
mov
arpl
mul
arpl
clc
push
pop
fadd
adc
repz
mul
(bad)
fidivr
dec
fs
pop
mov
cmp
cmp
mov
push
adc
ret
jge
sub
push
dec
ror
dec
xchg
cld
ins
and
nop
jecxz
add
imul
push
add
(bad)
dec
add
xchg
mov
xor
lock
aas
cmp
xchg
repnz
add
iret
pop
(bad)
xchg
test
ficom
lahf
fadd
int3
(bad)
cwde
adc
xchg
sbb
inc
mov
cli
test
arpl
adc
push
data16
gs
aas
cmp
cmp
cmp
cmp
or
(bad)
mov
dec
ja
popf
fcom
rol
push
or
imul
pop
(bad)
(bad)
shl
cmp
popa
sub
cmc
adc
xchg
les
adc
add
add
jg
adc
jle
adc
(bad)
in
cmps
jne
adc
int
and
movs
sbb
fwait
mov
test
lds
arpl
ins
add
mov
aam
mov
pop
or
dec
pusha
std
fidiv
sbb
add
xchg
arpl
in
xchg
cmp
(bad)
xlat
xor
mov
test
and
add
icebp
inc
add
xlat
movs
ins
call
add
shl
adc
pushf
cli
and
add
and
xor
add
mov
and
add
xchg
aas
popf
add
xor
enter
sti
push
add
jo
dec
pop
test
push
daa
inc
dec
daa
aaa
stos
loopne
in
dec
add
inc
xchg
mov
jno
sbb
out
(bad)
sub
mov
stc
arpl
push
pop
xchg
cmp
inc
cs
test
call
pop
ja
out
add
in
adc
jno
lock
or
and
fcom
adc
(bad)
movs
mov
mov
jl
int3
sbb
popf
xor
sbb
pop
push
ins
sahf
ficom
jmp
jbe
rol
(bad)
push
cwde
xchg
sbb
test
lods
sbb
shr
stos
add
popa
test
adc
sbb
add
cld
adc
(bad)
and
stos
adc
xor
js
dec
cmps
(bad)
inc
repnz
pop
mov
imul
jb
mov
inc
mov
arpl
dec
ret
(bad)
repnz
and
inc
pop
sbb
jmp
scas
sahf
dec
(bad)
sbb
mov
pop
int
dec
repnz
and
dec
dec
sbb
(bad)
repnz
nop
lds
push
mov
jp
add
(bad)
mov
add
add
aad
or
sbb
add
out
sbb
add
gs
mov
sub
sub
sti
inc
add
dec
adc
push
add
movs
cld
dec
add
and
ret
jno
mov
push
popa
outs
(bad)
or
cmp
jno
imul
push
and
repnz
test
arpl
fnsave
xor
push
das
pop
cmp
jo
cmp
cmp
mov
jg
pop
mov
xchg
enter
aaa
test
call
push
(bad)
pop
push
sbb
jg
add
fcomp
lock
loope
jno
mov
fcomp
retf
movs
mov
adc
inc
push
(bad)
add
call
outs
mov
(bad)
push
hlt
add
ins
(bad)
sub
mov
popa
fiadd
sbb
jmp
loop
xchg
pop
fdiv
mov
inc
xabort
dec
pushf
aas
inc
lds
cmp
cmp
adc
ds
add
popf
add
jns
sbb
ret
mov
aad
jl
mov
leave
pop
mov
push
cmp
mov
arpl
xchg
ret
fst
and
repnz
sub
jmp
add
mov
test
inc
xchg
inc
out
and
push
ins
add
jmp
push
adc
add
stos
addr16
stos
pop
push
or
add
(bad)
(bad)
dec
sbb
leave
pop
idiv
cmp
and
mov
and
sbb
jb
add
in
pusha
cmps
jno
call
pusha
lods
lahf
ds
add
mov
jg
dec
pop
xor
popw
mov
dec
cmp
popf
loope
add
je
sub
mov
jae
cmp
mov
jle
stc
push
vcvtsi2sd
outs
mov
adc
stos
dec
push
(bad)
sti
in
jo
loopne
in
xchg
inc
add
imul
push
and
dec
fdivp
cld
jmp
daa
push
das
pop
cmp
cmp
mov
mov
mov
lahf
sub
aam
dec
cmc
js
push
ret
fwait
cmp
inc
pop
outs
fst
fmul
push
(bad)
mov
add
and
or
jbe
cmp
or
mov
xor
lock
pop
xchg
xchg
and
bound
hlt
jmp
or
test
push
int3
pop
adc
outs
std
out
popf
mov
fwait
shl
pusha
jo
inc
or
pop
pop
mov
inc
pusha
rep
dec
ins
cwde
aam
xor
(bad)
and
loopne
je
sti
xor
test
cmp
mov
xchg
push
repz
mov
scas
sbb
gs
mov
jg
sbb
mov
inc
mov
aam
pop
pop
ss
out
lea
(bad)
retf
sbb
retf
loop
in
push
or
fsub
(bad)
adc
mov
fidiv
xor
or
pop
xchg
add
cs
pop
(bad)
jmp
sbb
mov
or
mov
xchg
mov
out
and
push
imul
pop
and
stos
popa
adc
pop
idiv
and
arpl
aad
xchg
add
adc
sub
or
sti
pop
shl
adc
push
push
xor
sbb
push
or
lahf
imul
test
and
mov
sub
movs
add
mov
movs
add
adc
sub
jg
cld
and
stc
xchg
add
repnz
enter
outs
mov
jns
mov
mov
in
cmp
dec
add
dec
in
mov
xchg
push
gs
xchg
aas
push
mov
pushf
and
ror
lahf
jp
shl
inc
fidivr
cmps
test
lds
daa
jnp
pop
mov
daa
outs
sti
retf
pop
(bad)
push
ret
jnp
lea
aas
stos
clc
test
jbe
cld
pop
jo
mov
test
jecxz
xchg
xchg
mov
cmp
ja
or
rol
pop
xor
jbe
data16
mov
shl
aas
sub
xor
(bad)
bound
push
(bad)
sar
arpl
rcl
fdiv
adc
retf
shl
mov
stc
fwait
cwde
ficomp
arpl
mov
xchg
push
loop
mov
fadd
fnstsw
xor
je
ficomp
xchg
rol
loope
adc
jge
cmp
and
inc
fwait
cmps
xchg
xchg
out
xchg
mov
and
mov
lds
adc
test
nop
inc
push
cmp
jbe
(bad)
ins
(bad)
lock
inc
cmp
inc
sar
aad
dec
pop
test
clc
mov
aaa
outs
and
jmp
es
pop
in
and
add
clc
mov
movs
retf
(bad)
xlat
mov
push
dec
dec
and
sahf
(bad)
daa
jnp
pop
push
jns
call
fwait
add
cld
xor
(bad)
jg
fimul
test
inc
dec
cmps
cmp
lods
inc
fcmovnbe
jg
popa
jno
cwde
and
push
ins
adc
pop
pop
inc
in
pop
aaa
mov
push
je
test
xchg
stos
sub
gs
and
dec
inc
clc
pop
in
dec
lahf
dec
(bad)
pop
ficomp
sub
push
dec
out
(bad)
enter
add
adc
inc
jp
fild
add
cmp
add
and
imul
adc
scas
ret
xor
jns
(bad)
or
out
(bad)
(bad)
scas
(bad)
mov
nop
lahf
mov
jb
jg
jp
shl
add
loop
js
pop
inc
setno
and
mov
mov
adc
test
and
mov
inc
outs
out
xor
add
and
into
leave
adc
push
pop
or
retf
pop
xchg
lahf
mov
mov
mov
mov
or
xchg
mov
adc
or
nop
shl
or
stos
or
sar
pusha
jecxz
fidivr
mov
adc
lods
call
add
pop
aaa
ss
push
ins
jae
in
fmul
and
inc
shl
xor
mov
jmp
inc
sbb
add
popa
mov
ins
movs
jne
(bad)
enter
or
jg
mov
mov
inc
fwait
cmps
mov
hlt
icebp
xchg
fisub
mov
push
sbb
xchg
sbb
jle
xor
sub
lods
sbb
adc
iret
inc
not
aam
in
shl
adc
add
add
jb
outs
pop
xchg
into
xchg
adc
dec
add
leave
mov
add
out
push
add
test
and
mov
jnp
or
adc
cmps
mov
sar
mov
adc
pop
pushf
dec
add
js
ffree
jle
nop
inc
aas
xor
mov
jle
arpl
xor
mov
hlt
adc
inc
push
lods
sub
add
aam
mov
test
mov
jae
add
xchg
inc
jno
sbb
clc
and
dec
fwait
dec
xchg
mov
dec
and
sbb
out
fwait
shl
into
pop
out
inc
xlat
jle
or
lods
fdivr
adc
and
xchg
push
push
mov
stc
arpl
or
cmp
push
adc
(bad)
retf
sti
mov
and
sahf
cmp
dec
popf
cmc
mov
aam
push
(bad)
popa
(bad)
retf
xchg
add
repz
add
add
pushf
into
pop
(bad)
in
cli
popa
dec
push
dec
jmp
lods
ffreep
jno
call
xchg
adc
lods
(bad)
test
sbb
neg
std
jno
ror
in
pop
xor
(bad)
rcl
add
hlt
pop
ret
pop
cmp
call
xor
mov
je
or
and
adc
pop
xor
inc
retf
(bad)
loop
push
std
inc
shl
or
push
inc
cli
sbb
not
call
jbe
sti
mov
or
mov
rol
xor
shr
xor
cmc
and
stc
rol
push
out
add
aad
mov
stc
fnstcw
mov
sti
mov
and
ds
into
inc
pop
out
cmps
aas
adc
retf
sbb
mov
rcl
add
jbe
add
pop
push
enter
add
call
or
dec
loop
mov
call
add
mov
es
add
or
push
jmp
pop
scas
aam
out
mov
inc
cmp
bnd
jg
add
movs
cld
dec
cmp
add
mov
loopne
retf
inc
push
add
push
ficomp
imul
jge
sub
and
sub
nop
popa
mov
xchg
or
add
gs
retf
inc
sub
sub
push
inc
push
cli
aam
push
and
xor
push
enter
ret
mov
sub
ja
pusha
fwait
add
aas
xchg
cld
jl
cpuid
xor
sar
dec
loop
mov
dec
mov
mov
addr16
out
pop
pop
call
fstp
add
out
mov
shr
jmp
xchg
leave
lods
xor
(bad)
jmp
sbb
(bad)
mov
jecxz
pop
pusha
dec
inc
add
mov
adc
pusha
fs
aas
cmps
movs
mov
xchg
mov
jge
fwait
xchg
cld
std
sbb
ins
add
adc
sbb
push
inc
test
sub
(bad)
ins
pop
not
aad
or
clc
xlat
inc
(bad)
sti
push
inc
in
(bad)
cli
daa
clc
xlat
(bad)
adc
aas
(bad)
adc
inc
std
lds
mov
pop
inc
mov
xchg
int
and
mov
imul
push
mov
mov
sar
sbb
mov
jle
nop
mov
test
lahf
lea
ds
mov
lods
xchg
add
jo
and
or
xchg
dec
push
pop
mov
cs
fbld
sbb
fwait
aam
retf
inc
fwait
(bad)
adc
jne
mov
stc
cwde
clc
or
pop
pop
sub
cmc
les
lods
fiadd
xchg
push
mov
xchg
movs
iret
(bad)
in
(bad)
ret
aas
adc
jns
jb
mov
inc
xor
sub
jmp
xchg
icebp
ins
inc
hlt
cwde
push
daa
pop
add
out
ins
daa
stc
mov
mov
loopne
inc
mov
jnp
add
cmp
or
pop
push
stos
aam
cmp
push
push
push
add
addr16
ds
xor
call
add
stc
adc
dec
test
sub
adc
xlat
pop
in
fistp
xor
dec
ja
xchg
xor
push
xchg
push
xor
sub
add
push
add
add
push
adc
in
fsub
ret
leave
mov
(bad)
and
add
outs
adc
inc
jb
mov
or
mov
push
enter
jecxz
fisub
bound
or
push
dec
add
mov
mov
arpl
clc
scas
pop
inc
mov
mov
cmp
push
rol
xor
adc
test
inc
xor
in
ret
pop
int
xchg
enter
add
iret
(bad)
lock
int
mov
add
pop
mov
add
dec
sub
dec
ret
push
cmp
aaa
inc
xchg
sbb
xor
adc
clc
inc
pop
pop
fstp
jge
push
jno
mov
pop
sbb
cld
js
push
mov
inc
ins
xchg
rcr
or
inc
imul
adc
retf
sbb
pop
repz
mov
jnp
jle
lds
ds
fcmovnu
xchg
cmp
dec
add
pusha
rcr
mov
mov
and
add
mov
jmp
push
ds
sar
cld
inc
hlt
or
ja
push
nop
jnp
pop
add
cmp
popf
pop
push
loope
mov
shl
add
push
test
cmps
loop
add
dec
cmp
in
pop
sub
dec
out
add
loopne
add
test
cmp
mov
add
and
stc
icebp
lods
add
pusha
inc
icebp
inc
pop
mov
lods
repnz
movs
jp
sub
sbb
nop
inc
mov
enter
cmp
lock
mov
mov
or
pop
rcr
add
repz
int
mov
pusha
dec
out
jo
and
adc
cmp
bound
into
shl
mov
ror
lods
sub
aas
inc
scas
into
dec
inc
(bad)
fisttp
jle
ret
bound
xor
mov
mov
sar
imul
xor
retf
xchg
pusha
outs
scas
push
cwde
cwde
sbb
mov
sub
push
cmp
adc
lods
lea
jp
outs
adc
lods
das
add
movs
shl
pop
push
pop
dec
and
mov
repz
test
aad
cmp
add
ins
fcomp
aas
inc
push
xchg
push
rcr
(bad)
repnz
pop
add
inc
fs
sub
push
ret
inc
push
adc
mov
daa
ins
out
cld
sbb
or
iret
xchg
(bad)
mov
dec
cmp
aam
test
imul
mov
push
adc
jp
jns
push
ins
call
cld
leave
imul
xor
jb
mov
inc
sti
outs
pop
lahf
les
lahf
test
mov
and
sub
stc
push
stc
mov
mov
jle
inc
and
cmc
push
sti
test
inc
aaa
and
scas
mul
sbb
mov
add
bound
clc
fs
mul
ret
bound
mov
push
pop
rcl
dec
mov
jecxz
bnd
inc
mov
inc
inc
sub
and
mov
popa
sbb
pop
ins
dec
dec
sub
dec
out
(bad)
rcl
fdiv
xor
retf
sub
push
and
dec
retf
cmp
leave
sub
fwait
mov
or
or
out
xchg
shl
add
adc
xor
hlt
stos
fild
push
sub
jecxz
into
fwait
mov
mov
lock
es
cmp
mov
sub
push
(bad)
adc
shl
jne
test
jge
shl
or
cmp
push
xor
popa
outs
mov
or
scas
pop
std
mov
bound
ret
test
or
dec
push
(bad)
es
mov
js
jp
push
call
and
pop
mov
in
and
push
add
repnz
jl
xchg
popa
and
in
cmp
shl
test
call
push
fadd
in
icebp
ins
push
mov
mov
push
sub
jne
fld
sbb
sbb
cmp
icebp
ins
fwait
and
sti
arpl
or
jge
jb
bswap
push
idiv
xor
popf
rol
and
mov
lods
inc
ret
jmp
cmp
mov
in
sar
leave
iret
and
out
shl
or
inc
sub
stos
inc
repnz
call
sbb
jb
pop
cmp
dec
or
mov
jb
mov
jge
jo
add
xchg
mov
add
inc
or
jmp
add
add
imul
sub
mov
add
and
leave
adc
mov
push
je
push
add
sbb
sub
rol
test
sub
dec
mov
jns
stos
mov
jecxz
test
push
enter
lds
pop
ja
pop
and
mov
mov
in
xor
and
mov
jl
add
inc
hlt
jmp
and
cwde
fsubr
ret
fimul
sbb
mov
mov
out
loop
xchg
pop
ss
repz
and
in
mov
bound
xchg
sub
jmp
std
nop
sbb
std
and
ds
fcmovbe
jg
popf
pop
pushf
jmp
dec
inc
std
cmp
cmp
adc
loop
cmp
mov
xor
les
lea
aas
adc
push
dec
adc
test
and
fstp
outs
pop
in
shl
shr
popa
in
pop
clc
cmp
and
xchg
sbb
pop
push
int3
addps
push
add
push
ficomp
xlat
dec
mov
mov
xor
in
add
cmp
inc
mov
inc
pop
jo
icebp
fwait
inc
and
cmp
dec
dec
out
xchg
and
fsubr
imul
adc
imul
jnp
pop
inc
stc
(bad)
xor
pop
retf
sub
mov
sub
cmp
mov
arpl
jg
xor
lahf
or
ins
sbb
enter
ja
into
mov
addr16
loope
mov
into
loopne
daa
test
push
daa
or
pop
scas
lahf
les
leave
mov
add
mov
adc
or
pop
or
sar
sbb
fimul
inc
das
jne
bound
push
or
sub
cmps
call
add
and
dec
cmps
shr
xor
cmp
xchg
(bad)
and
pop
sbb
cmp
shl
daa
or
and
add
pop
pop
test
push
jp
push
jb
and
aam
movs
int3
xor
in
adc
bound
outs
fild
and
retf
inc
es
std
movs
dec
int3
jmp
adc
imul
and
sar
mov
mov
sbb
pop
mov
fs
or
outs
mov
jle
mov
mov
push
push
cmp
dec
jne
retf
lea
or
iret
fcmovnb
mov
dec
and
or
scas
mov
fmul
sbb
js
inc
and
xchg
pop
into
retf
pop
adc
scas
ins
and
inc
ret
test
outs
mov
lahf
pushf
dec
call
inc
std
adc
rol
inc
or
test
sub
sub
sub
sub
cmp
cdq
inc
and
aad
sub
outs
and
push
jle
les
popf
sub
imul
cmp
push
or
(bad)
dec
out
inc
xchg
aas
stc
(bad)
adc
mov
jl
cld
retf
add
jmp
cmps
or
pop
or
in
aas
out
imul
add
cmc
add
and
push
xchg
xchg
outs
leave
jo
adc
cld
xor
sbb
xchg
inc
lods
hlt
test
and
or
repz
rcr
xchg
cmps
repnz
mov
xchg
add
push
dec
cmp
or
jne
daa
jecxz
xchg
pop
movs
dec
jle
sub
sahf
mov
and
enter
fnstsw
arpl
mov
imul
xchg
mov
pop
hlt
ins
fild
(bad)
shl
xor
arpl
jp
call
pop
hlt
(bad)
lods
sbb
sbb
pop
mov
cli
call
daa
mov
loopne
mov
imul
adc
mov
or
and
jle
push
xchg
out
movs
jecxz
jns
int3
xor
fst
lea
mov
pop
mov
dec
jmp
mov
ficom
and
imul
and
push
pop
lock
mov
fbstp
mov
mov
push
sbb
and
pop
dec
jno
mov
inc
addr16
cmp
test
arpl
jecxz
aas
xchg
aas
call
mov
icebp
cmp
outs
clc
cwde
clc
into
loope
retf
push
out
mov
jae
cmps
in
or
loopne
dec
xchg
push
dec
xchg
sbb
sahf
inc
xor
pop
pop
neg
and
push
xor
pop
enter
(bad)
cmps
jge
adc
lahf
sbb
jge
repz
jmp
xchg
iret
push
adc
(bad)
adc
or
add
movs
dec
lds
and
stos
out
pop
add
jns
or
or
in
add
lock
dec
mov
js
ror
pop
dec
xor
push
push
in
sbb
fstp
cmp
mov
sub
xor
pop
int3
xchg
bound
jmp
jg
or
add
lock
cmp
dec
or
call
or
sar
pusha
pop
out
sbb
or
outs
neg
ss
jns
dec
dec
int
mov
inc
and
in
sahf
sbb
fdivr
jge
dec
daa
dec
dec
outs
test
fstp
popa
push
push
arpl
test
dec
sub
cmp
test
mov
adc
lods
fidiv
jp
loope
jle
sbb
push
or
ror
lahf
movs
mov
arpl
iret
out
jae
fsub
mov
mov
fstp
and
mov
mov
push
fdivr
cmc
jnp
inc
bound
xor
pop
sub
jle
xor
loop
add
add
inc
add
inc
dec
xchg
pop
shr
dec
rcr
mov
clc
jno
or
jecxz
xchg
mov
dec
int3
push
fdiv
or
adc
and
push
inc
xchg
inc
xor
arpl
adc
idiv
in
cs
pop
js
or
xchg
inc
push
inc
out
or
je
jns
popa
icebp
push
adc
nop
fistp
ret
outs
adc
mov
add
lods
pop
fpatan
ja
aas
sbb
fcom
fld
adc
aad
sub
aam
rcl
or
inc
(bad)
push
ins
add
shl
mov
add
push
or
int
ss
mov
mov
xchg
jbe
sbb
xor
or
fnsave
pusha
pop
mov
push
cdq
cld
jecxz
clc
fcomp
ins
imul
mov
dec
dec
fwait
cmp
ins
je
jo
add
adc
xor
mov
icebp
add
fdivp
mov
or
push
sbb
rcr
mov
dec
cwde
fisubr
rcr
xor
imul
cmc
ins
xchg
leave
int
cmp
pop
pusha
data16
jmp
or
inc
sbb
fld
mov
and
out
fcom
and
adc
sub
sbb
inc
inc
inc
sub
and
cmp
movs
and
push
push
dec
jg
dec
and
inc
rcl
and
mov
cmp
add
les
or
inc
aas
xor
jns
out
movs
push
icebp
dec
fild
mov
fisubr
dec
mov
nop
pushf
add
mov
inc
in
and
mov
out
adc
pop
pop
xchg
add
cmp
dec
add
into
(bad)
adc
aam
or
adc
div
jg
ss
mov
mov
xchg
mov
push
or
add
adc
sar
lods
ficom
pop
aad
sbb
mov
dec
dec
pop
xlat
jnp
les
xchg
arpl
test
hlt
mov
das
mov
fisttp
addr16
in
retf
lods
call
movs
call
ret
inc
adc
jg
xchg
rol
cmc
retf
adc
mov
not
aad
xchg
cmp
or
rol
les
jmp
les
pushf
jmp
mov
test
push
(bad)
ret
sbb
scas
xlat
cmp
fcomip
sub
mov
mov
or
out
pop
jmp
mov
jg
imul
cmp
inc
or
fimul
or
iret
or
add
jmp
imul
add
repnz
or
scas
cmps
js
add
ss
call
or
push
pop
arpl
cmp
cmp
xchg
popa
std
test
call
dec
out
ss
cmp
lds
or
or
lock
aas
dec
dec
outs
inc
add
inc
xor
fwait
popa
pop
je
(bad)
daa
mov
sub
xor
stos
cmp
imul
sub
(bad)
call
das
adc
sbb
xchg
xchg
test
jb
sbb
dec
out
repz
enter
mov
push
div
jno
xchg
lahf
sbb
add
xor
shr
call
jle
inc
rcr
adc
mov
cmp
inc
xchg
sar
daa
shr
das
es
dec
pop
jge
sar
pop
clc
and
shr
call
cmc
adc
sbb
sbb
neg
fnstsw
mov
xchg
lahf
js
mov
jg
mov
pop
push
dec
fs
aaa
out
push
pop
sub
nop
sub
lock
xor
jmp
jle
into
mov
stc
in
call
xchg
fwait
inc
js
mov
push
or
push
fild
add
lods
pop
and
xchg
mov
and
cmp
int3
inc
cli
fcomp
add
retf
movs
add
cli
and
add
dec
add
mov
xchg
adc
aam
lods
add
dec
rcl
xchg
inc
outs
add
std
ins
dec
pop
test
mov
xor
movs
into
pop
mov
sbb
mov
mov
dec
xchg
cmp
push
and
mov
dec
pop
xor
push
or
inc
arpl
mov
or
mov
sahf
sbb
sbb
dec
dec
dec
push
(bad)
in
and
enter
adc
call
pop
push
xchg
fwait
arpl
or
imul
shr
adc
cmp
movs
adc
dec
outs
sub
fimul
jo
les
ds
shl
cmp
aaa
adc
cmp
push
mov
arpl
xchg
and
push
cmp
imul
cmc
push
inc
push
jnp
mov
adc
mov
(bad)
cld
mov
(bad)
sbb
fld
inc
imul
nop
movs
mov
sub
and
test
ins
push
dec
hlt
(bad)
lds
sti
and
mov
mov
dec
loopne
fidiv
dec
cmp
or
inc
xlat
loopne
dec
imul
pusha
(bad)
mov
ins
cmp
ins
fstp
or
and
and
cld
pop
jecxz
int
xchg
clc
aad
and
fs
arpl
mov
pop
and
jns
es
cmp
and
sub
and
jns
loop
push
dec
pusha
xchg
xchg
int
js
mov
push
mov
pop
jle
loop
sar
adc
add
or
ins
dec
sti
int
(bad)
or
jae
movs
out
sbb
push
inc
mov
adc
sub
lods
inc
lds
sbb
mov
push
popf
scas
sbb
xor
add
sub
jp
loop
xchg
pushf
sub
adc
or
out
icebp
cwde
inc
ret
inc
xor
push
mov
repnz
push
xor
hlt
or
sbb
jle
xchg
cwde
fisub
js
mov
jecxz
jp
adc
sbb
sbb
jnp
pusha
inc
push
int3
out
sbb
mov
clc
inc
imul
rcr
pop
xor
pop
pusha
inc
je
or
outs
cmp
mov
or
and
stos
sub
ins
pop
sbb
sar
imul
cmp
xlat
inc
sbb
sti
(bad)
(bad)
mov
mov
adc
pop
push
(bad)
cs
aaa
inc
add
pop
dec
xor
in
mov
and
in
dec
stos
cmp
aaa
inc
push
retf
add
mov
inc
fs
adc
add
dec
sbb
xchg
cmp
icebp
scas
dec
sti
lods
(bad)
aam
cli
call
pop
push
push
aad
inc
and
dec
pop
aas
hlt
outs
rcl
cmp
mov
pop
mov
imul
or
sbb
sub
mov
push
jns
les
mov
mov
mov
add
mov
in
arpl
add
xchg
pop
xchg
dec
gs
mov
dec
or
adc
or
add
cmp
jmp
or
jae
aam
jno
clc
cld
cdq
std
cs
xor
pop
mov
dec
lods
retf
fst
mov
enter
test
xchg
sub
sbb
jg
inc
push
inc
mov
sbb
xchg
mov
inc
(bad)
scas
pop
and
lds
jno
or
in
ret
iret
add
cmp
not
test
retf
(bad)
adc
mov
pusha
adc
(bad)
dec
vsqrtss
out
sub
outs
jecxz
and
in
fld
xor
pop
pusha
push
inc
cmp
imul
lods
sbb
add
adc
call
aam
imul
cmps
iret
push
pop
xor
je
fcmovne
int
lds
jmp
cmp
lds
inc
arpl
scas
xchg
(bad)
inc
jb
call
mov
sbb
adc
inc
xlat
mov
and
adc
and
mov
or
iret
inc
xchg
mov
data16
dec
bound
pop
xor
pop
sub
out
or
enter
add
mov
xlat
adc
mov
pusha
pop
pop
imul
sbb
lahf
xchg
es
sbb
fstp
std
jmp
inc
or
or
inc
psubd
stos
jae
mov
imul
jno
jmp
and
or
popa
push
data16
dec
adc
mov
es
cli
mov
push
jmp
and
(bad)
jns
sbb
cld
icebp
xchg
xor
cli
xor
sbb
adc
mov
sar
rcr
mov
in
cmp
test
(bad)
icebp
leave
add
jno
sub
outs
cdq
or
call
lods
xlat
stos
add
inc
dec
push
or
jmp
add
push
and
retf
inc
inc
pop
sub
push
add
xchg
les
mov
mov
xchg
or
mov
cmp
add
jle
push
pop
cmp
mov
cld
out
ins
mov
jg
(bad)
or
mov
(bad)
or
push
fdiv
sub
fwait
inc
test
nop
jbe
aad
add
pop
test
mov
fdivr
es
xchg
or
inc
mov
ret
mov
jg
sub
fistp
dec
cli
je
int3
push
xchg
rcl
dec
dec
push
cwde
sbb
test
adc
cs
repnz
leave
sub
(bad)
adc
xchg
adc
or
dec
stos
clc
xchg
ins
xor
and
adc
pop
pop
sub
imul
push
xor
fcmovnb
mov
(bad)
out
mov
and
movs
xor
or
xchg
mov
mov
cmps
and
push
call
movs
fcom
cwde
inc
dec
movs
out
jecxz
xor
mov
sbb
mov
xchg
inc
sbb
rcr
and
xor
ja
and
hlt
adc
outs
in
add
cmp
push
dec
pusha
jp
push
mov
pop
cmp
sbb
xchg
inc
repz
mov
fisttp
repnz
lock
cmp
dec
mov
addr16
sbb
sub
loop
outs
and
push
iret
pop
adc
(bad)
xchg
inc
pop
cmp
movs
add
ror
inc
push
lods
jg
add
jmp
cmp
lods
loop
(bad)
sub
mov
xchg
and
add
add
(bad)
call
add
or
add
int3
or
idiv
lds
mov
lea
div
pop
in
pop
xchg
inc
xlat
cmp
iret
and
mov
inc
loope
int
sahf
outs
scas
sub
xchg
mov
ins
fsubp
inc
add
mov
rol
js
popf
rcl
mov
and
mov
test
pop
jae
mov
sbb
addr16
ins
sbb
xchg
adc
pop
sbb
bound
test
fisubr
jnp
inc
pusha
call
lods
icebp
xor
sahf
adc
pop
jecxz
mov
fs
or
(bad)
call
lods
sbb
mov
inc
bound
(bad)
dec
xadd
outs
sub
int
cmp
add
cmp
shl
mov
loope
imul
dec
ret
inc
add
mov
inc
(bad)
loopne
call
adc
(bad)
xchg
or
cli
nop
clc
icebp
out
add
outs
loope
out
sahf
in
lds
aam
mov
mov
sub
aam
pusha
int3
dec
ins
add
cmp
leave
mov
ret
mov
mov
mov
cdq
popf
add
mov
ss
sahf
adc
leave
and
push
xchg
inc
xor
sbb
add
aam
inc
ret
scas
jge
adc
jp
inc
sbb
jae
ror
jecxz
lods
leave
mov
or
test
and
fisttp
(bad)
xlat
adc
mov
outs
and
jae
pop
test
jbe
mov
xlat
es
daa
ret
outs
dec
inc
clc
or
adc
cmp
scas
pop
cmp
cmps
and
ja
out
xchg
cld
fnstcw
jnp
fs
mov
cdq
shl
or
or
in
adc
nop
mov
xchg
cmc
into
sar
mov
loopne
sub
(bad)
das
jecxz
jmp
jae
jmp
push
cwde
inc
aam
sbb
inc
gs
adc
(bad)
push
fwait
and
sub
cmp
in
or
xchg
imul
lds
mov
add
out
es
mov
mov
add
dec
add
loop
dec
push
sub
jo
dec
add
retf
mov
outs
jg
pop
xor
pop
pop
push
and
mov
retf
pop
xor
and
push
xor
dec
addr16
aad
sub
jne
ror
mov
or
xor
jo
cmp
int
(bad)
jmp
stos
aaa
into
sub
mov
add
cmp
pop
hlt
(bad)
leave
test
repnz
loopne
xchg
adc
xchg
cmp
sbb
dec
lahf
and
jecxz
call
out
adc
inc
push
mov
mov
xchg
dec
or
test
pop
cmp
add
pop
xchg
lea
in
fwait
pusha
push
pop
jae
in
fcomp
fidiv
pop
pop
bound
or
push
sbb
ror
dec
cld
mov
dec
inc
jnp
in
adc
sbb
call
jbe
mov
sub
pop
xchg
pusha
adc
(bad)
cmc
mov
cli
(bad)
xchg
pop
sar
add
je
ins
rcr
pusha
dec
push
xchg
or
mov
xor
mov
(bad)
mov
inc
es
sub
fs
pop
adc
stos
dec
or
imul
jno
push
mov
scas
(bad)
(bad)
or
inc
sti
add
xchg
add
sti
(bad)
sbb
fidiv
scas
(bad)
lods
fwait
mov
cmp
loop
fld
jecxz
push
add
sub
jmp
xchg
pop
leave
jae
sahf
xchg
cmc
rcl
sub
or
or
fisub
xor
jns
or
lods
xchg
and
mov
dec
mov
ret
enter
inc
or
add
repnz
jo
xlat
or
xchg
test
addr16
pop
loope
xor
push
add
(bad)
xor
add
fadd
jbe
es
sbb
iret
lods
pop
fdiv
ds
and
push
dec
hlt
push
lds
cmp
cmovnp
(bad)
xchg
jge
bound
or
lds
cmp
fsub
inc
movs
loop
adc
jle
pop
(bad)
cmp
ja
(bad)
shl
(bad)
loopne
popf
mov
js
out
mov
ins
sbb
aad
inc
jo
dec
aas
pushf
pop
fcomp
jns
xor
push
aaa
pushf
cwde
popf
sub
(bad)
dec
dec
inc
into
in
in
sbb
mov
push
xor
test
inc
dec
fcom
sbb
xchg
data16
mov
mov
rcl
push
cwde
inc
jb
and
cmp
ja
mov
xchg
mul
lods
jmp
popa
jo
adc
jge
and
fucomi
sti
xchg
mov
mov
lods
(bad)
loope
inc
bound
fisubr
(bad)
retf
jnp
iret
pusha
pop
and
dec
ins
jae
lea
xor
dec
xor
outs
or
or
sub
std
and
mov
xchg
adc
xlat
into
icebp
aam
mov
add
mov
jne
in
movs
aam
adc
pop
in
test
xlat
push
add
fsubr
push
test
inc
mul
into
sub
or
lds
jo
xor
sbb
jno
fadd
cmp
sbb
xchg
xor
push
mov
push
ds
push
(bad)
inc
push
enter
arpl
and
adc
push
scas
fmul
xchg
xchg
aas
stos
call
(bad)
in
mov
mov
(bad)
fs
pop
dec
outs
in
mov
dec
sbb
scas
std
xor
enter
ret
in
pop
(bad)
or
xchg
adc
stos
add
imul
jmp
xchg
aas
imul
jle
iret
xchg
add
jge
stos
in
jmp
pop
mov
out
in
add
lahf
cmp
jne
sbb
cmp
adc
int
in
sbb
sahf
les
call
bound
pop
arpl
dec
pop
cmp
jbe
(bad)
loope
fdiv
sub
fwait
xchg
imul
dec
dec
inc
fidivr
aaa
ss
and
push
dec
rcr
addr16
mov
dec
mov
ds
rcr
fistp
adc
dec
or
sub
test
test
mov
dec
int3
jmp
bound
rcl
or
mov
inc
adc
lahf
xor
mov
mov
(bad)
mov
popf
mov
sub
popa
cmp
dec
imul
ins
dec
(bad)
pop
fld
mov
and
add
or
inc
arpl
test
in
sbb
fmul
mov
mov
scas
xchg
icebp
fdiv
(bad)
popa
div
mov
mov
cmps
(bad)
pop
mov
dec
lods
out
aad
sub
mov
mov
adc
add
les
add
xlat
mov
hlt
out
ror
aam
or
arpl
mov
pop
test
mov
js
xor
dec
push
adc
and
int3
scas
lahf
imul
scas
adc
add
es
jo
int3
jle
jg
dec
out
ret
in
imul
mov
xchg
test
pop
lds
lea
and
sub
xchg
ret
push
adc
cmp
(bad)
xchg
add
(bad)
shl
adc
push
and
add
xchg
ja
enter
les
jbe
ror
fidiv
stc
jmp
js
jo
and
inc
pop
add
sahf
int3
mov
cwde
pop
(bad)
das
mov
cmp
daa
comiss
mov
mov
add
repz
pusha
(bad)
xchg
adc
popf
popf
or
scas
add
call
mov
pop
xchg
push
mov
push
mov
fcom
pop
hlt
rcr
add
aam
mov
imul
push
fidivr
ds
aas
aas
mov
pop
pop
pop
xchg
fimul
ret
aaa
loop
repz
fxch
push
clc
clc
clc
xor
pushf
xchg
mov
adc
cmp
iret
outs
sbb
int
ret
dec
or
sub
and
push
test
xchg
fnstcw
es
out
and
sbb
fild
cmp
dec
retf
jecxz
imul
call
jecxz
mov
inc
or
dec
dec
adc
xchg
cmps
jbe
loope
pop
jno
add
inc
es
out
cwde
inc
fs
add
add
es
xor
adc
push
xchg
or
fsubr
scas
jmp
add
shr
ins
xor
outs
sbb
adc
sti
xchg
rcr
inc
xlat
ss
shl
adc
add
and
movs
adc
dec
jmp
enter
sbb
(bad)
and
je
sub
inc
mov
mov
inc
jb
jmp
ins
pop
pop
or
les
add
lock
daa
jae
loop
pop
cmp
xchg
fadd
mov
push
lods
add
mov
aam
mov
push
(bad)
aad
adc
xchg
xor
lods
push
sti
and
jmp
or
loopne
push
(bad)
lock
sbb
add
test
mov
(bad)
xor
(bad)
mov
sbb
addr16
aad
xor
lahf
ja
xchg
aas
inc
adc
jmp
add
cmp
dec
add
out
add
mov
daa
mov
jecxz
loope
cmp
ja
cwde
rol
mov
jbe
mov
mov
mov
aaa
mov
enter
ins
arpl
mov
je
push
into
int3
rcl
mov
js
jmp
jae
adc
sub
iret
scas
es
fild
aas
ds
mov
aas
xchg
(bad)
fistp
xchg
fld
pop
xchg
loopne
mov
or
mov
xor
in
nop
shl
(bad)
in
mov
jno
leave
inc
pushf
pop
fcomp
cmps
lahf
call
nop
aas
stos
xchg
sbb
fst
add
mov
ficom
mov
xchg
dec
sbb
ror
int3
gs
in
cli
dec
ret
shr
jmp
gs
mov
adc
ds
lahf
fstp
out
cmp
add
enter
adc
inc
jo
rcr
in
sbb
add
mov
fs
outs
adc
adc
jp
xchg
imul
add
out
push
arpl
imul
jp
sbb
cdq
in
std
sar
mov
push
inc
pop
and
mov
mov
pop
add
leave
and
pop
push
dec
arpl
sbb
data16
adc
ror
mov
push
pop
pop
pop
repnz
or
shl
test
(bad)
push
dec
adc
fnstsw
mov
loope
add
cli
sub
stos
add
jmp
mov
cmps
lods
out
add
push
mov
add
aas
cmps
sub
nop
xlat
xchg
push
add
sub
xlat
jle
push
fs
(bad)
mov
sbb
sub
gs
and
sub
mov
ret
adc
cld
test
cmp
sub
jno
repnz
pop
push
push
pop
daa
aaa
jecxz
jno
pusha
cmp
jmp
mov
push
hlt
shr
add
rcl
pop
sub
fmul
(bad)
and
jnp
push
mov
ja
scas
sub
xor
outs
imul
jg
pop
aas
mov
pop
adc
les
outs
ret
out
shr
adc
fistp
popf
sub
clc
std
(bad)
clc
fldcw
dec
mov
(bad)
xchg
inc
jo
pop
fnstenv
adc
in
cwde
xchg
mov
(bad)
jae
daa
loop
(bad)
icebp
js
ret
sbb
pop
xor
push
or
jno
jno
pushf
cmps
xor
mov
lahf
jle
mov
add
add
test
mov
pop
pushf
pushf
fistp
stc
xor
pusha
es
push
jge
into
jmp
jnp
sub
and
and
and
push
bound
sbb
test
inc
jo
pop
add
jnp
ds
mov
mov
mov
inc
bound
out
and
mov
jae
mov
shr
shl
sbb
pop
mov
mov
shl
nop
shr
push
mov
imul
fdivr
fild
or
icebp
jecxz
iret
xchg
sbb
(bad)
mov
xor
pop
cmp
and
arpl
cmp
outs
pop
pop
and
sub
rcr
xor
jmp
mov
jmp
push
sub
mov
jns
sbb
jo
movs
in
test
in
mov
repnz
pop
stc
arpl
push
inc
mov
push
add
add
test
out
inc
jns
loopne
pushf
lods
cmp
loop
mov
loopne
ret
jae
sub
sahf
fld
mov
outs
(bad)
xchg
pop
pop
loope
mov
cmp
sahf
inc
add
mulps
xor
dec
dec
inc
cs
mov
jno
pop
das
and
adc
clc
sub
loope
adc
lock
mov
cld
lock
popa
jl
int3
inc
jl
aam
jl
lock
outs
gs
xlat
mul
pop
pop
mov
xchg
shr
icebp
jno
sbb
sub
fwait
sti
out
aad
pop
js
xlat
or
xor
loopne
pop
push
icebp
shl
or
shr
pop
xor
push
or
mov
pop
loope
repnz
push
dec
call
icebp
inc
pop
pop
adc
(bad)
shl
fsubr
movs
test
inc
lock
scas
mov
cmp
ss
xchg
not
pop
cli
int3
sbb
mov
inc
add
xchg
mov
and
jo
or
dec
inc
jnp
mov
(bad)
adc
xor
cmp
and
das
and
fnstsw
xor
push
xchg
fcmove
pop
shr
pop
mov
aas
je
scas
mov
dec
push
pop
inc
pop
xor
lahf
mov
pop
aaa
jns
ins
add
mov
in
inc
sbb
cmps
mov
or
mov
jnp
push
or
push
and
pop
xchg
inc
sub
aad
ret
xor
push
mov
sub
add
lods
adc
push
bnd
mov
dec
or
add
stc
or
pop
sti
imul
push
add
jg
dec
pushf
sub
jecxz
adc
ds
aas
push
add
pop
add
and
adc
pusha
push
rcl
mov
add
xchg
xchg
sbb
cli
cmc
ins
pop
fdiv
xchg
adc
cld
cmp
push
test
or
pusha
in
in
in
pop
mov
push
jl
sti
push
mov
cmp
sbb
push
jle
neg
(bad)
lock
clc
cld
(bad)
mov
adc
clc
or
in
ret
out
jbe
addr16
jecxz
push
sbb
push
(bad)
pop
mov
popa
xchg
cmp
add
jge
scas
addr16
adc
int
iret
sub
jecxz
fsub
xchg
js
fnsave
xor
mov
mov
push
scas
aas
cmp
and
adc
and
out
es
or
dec
shr
inc
add
and
xor
int3
fwait
rol
stc
xor
addr16
sub
js
ins
sub
mov
add
mov
dec
adc
and
sbb
test
push
popa
int3
repz
out
ficomp
sar
mov
pop
call
inc
mov
out
lock
je
or
lock
pop
xchg
push
pop
icebp
ins
fwait
mov
adc
out
sbb
cmc
inc
js
add
and
test
sbb
pop
push
mov
ficomp
mov
jae
repz
pop
sub
sub
iret
cmp
stos
add
jmp
fs
mov
jmp
inc
pop
daa
mov
push
push
add
aas
sub
cld
sbb
xor
jns
repnz
push
sbb
xor
or
lods
add
dec
(bad)
jl
inc
mov
out
jle
shl
shl
rol
pop
mov
loope
mov
pop
cmp
ror
xchg
loopne
add
jb
and
push
xlat
test
and
data16
and
fcomp
and
jp
fistp
repnz
jle
cmp
adc
(bad)
and
out
in
ja
sbb
mov
iret
out
mov
jnp
aas
mov
pop
fadd
lahf
popf
and
sub
(bad)
test
repz
(bad)
mov
(bad)
mov
xchg
pop
adc
rcl
or
jmp
out
outs
sbb
aaa
or
lods
pop
test
imul
mov
lock
jmp
push
or
aad
add
pop
fcomp
xchg
pop
cmc
ret
inc
loop
cmp
push
ret
jbe
ror
cmp
cmp
addr16
lahf
call
sbb
add
adc
mov
and
int
loope
ret
int3
mul
mov
cmp
push
dec
das
ret
mov
pop
add
cmps
mov
nop
call
daa
add
push
imul
inc
retf
mov
adc
sub
fist
loope
sahf
and
je
test
dec
xor
cmps
push
lea
mov
daa
loope
sbb
and
xchg
in
fbstp
in
pop
and
mov
add
daa
add
lods
stos
cmp
sub
scas
mov
lods
loop
inc
dec
mov
adc
rcl
push
add
adc
mov
outs
adc
and
jmp
das
or
jle
adc
dec
enter
and
mov
mov
mov
bound
outs
jno
jl
mov
les
and
in
clc
pop
int3
fisttp
cdq
pop
js
in
mov
sub
pop
jecxz
div
xor
nop
les
jg
xor
cmp
mov
mov
int
shl
jbe
sbb
out
add
lock
arpl
mul
jae
rcr
cmps
lock
repz
pop
sar
clc
jmp
mov
mov
mov
mov
jecxz
loop
fsub
push
bound
(bad)
out
sbb
mov
xor
scas
outs
popf
and
lock
jecxz
mov
jmp
cmp
xchg
pop
aas
(bad)
mov
movs
lock
mov
or
or
xchg
or
jo
leave
pusha
pop
pop
cmp
push
pop
or
test
or
and
cmp
ja
jbe
pushf
call
cmps
ja
fisub
rcl
and
adc
jno
mov
jno
fdiv
sbb
daa
fild
sbb
push
mov
inc
cli
pushf
xchg
ror
mov
jae
hlt
out
fmul
std
and
(bad)
data16
(bad)
mov
enter
adc
xor
mov
mov
mov
inc
inc
shl
mov
inc
retf
jp
imul
lods
sbb
cmp
add
pop
aad
fs
loop
aaa
inc
imul
mov
aad
icebp
mov
adc
xor
mov
adc
popf
cld
mov
bound
sub
mov
nop
jmp
adc
inc
adc
push
inc
cmp
lahf
fs
test
fdivr
adc
sbb
or
mov
je
push
bound
push
and
aaa
mov
xchg
enter
clc
adc
push
mov
shl
movs
into
pop
pop
or
retf
pop
push
pop
inc
xor
sub
mov
pop
dec
bnd
clc
push
pushf
iret
fisttp
(bad)
ins
les
push
loopne
aad
js
cld
dec
cmp
jl
sahf
int
mov
xlat
fs
fcomp
stc
stos
inc
mov
sbb
nop
cmp
addr16
jmp
out
ret
clc
(bad)
movs
pop
adc
out
jmp
or
sti
aaa
into
loope
outs
pop
adc
jnp
(bad)
cmp
add
int
fwait
add
pusha
adc
inc
xchg
mov
inc
jns
icebp
(bad)
shl
fidivr
xor
fistp
mov
(bad)
mov
mov
fidivr
or
fnsave
shl
leave
jecxz
repnz
jbe
cmc
or
push
and
cwde
add
add
dec
add
xchg
add
add
add
movs
adc
push
cmp
or
movs
add
dec
loopne
rcl
out
cwde
and
sub
and
lods
adc
shl
jmp
xchg
sahf
xchg
xchg
mov
mov
(bad)
add
add
cmp
adc
sub
sub
in
sub
outs
fild
and
leave
rol
fdivr
cmp
mov
dec
in
mov
xchg
jb
das
lahf
dec
add
xor
nop
jno
adc
gs
xchg
(bad)
sbb
scas
xlat
or
test
mov
xchg
test
ins
jg
je
std
sbb
xor
push
dec
call
or
scas
stos
sub
shl
push
add
adc
mov
fild
dec
test
pop
fdivr
or
dec
fs
cmps
jno
cmp
or
cli
ja
jmp
xchg
cmc
(bad)
retf
inc
xchg
loop
scas
pushf
ror
out
imul
loop
push
or
fstp
mov
cmc
mov
jecxz
retf
clc
jecxz
pop
lock
or
dec
add
push
jbe
add
cld
ret
jg
fidivr
fidivr
(bad)
jmp
jnp
fistp
cdq
xor
mov
ja
adc
enter
xchg
mov
inc
outs
lahf
pop
mul
hlt
cmp
pop
xor
add
fisttp
pop
out
sar
ja
cmp
cmp
sub
and
and
and
(bad)
cwde
xchg
fimul
and
or
in
shl
or
sbb
fimul
jge
hlt
pop
add
es
jp
add
sub
xchg
add
mov
sbb
mov
adc
sti
xchg
adc
test
mov
scas
pop
(bad)
xchg
repz
mov
mov
mov
pop
dec
mov
mov
je
jnp
lods
adc
cmp
cmp
pop
xlat
lods
repnz
mov
and
fisub
mov
movs
ror
shl
mov
sbb
retf
push
mov
dec
je
cmps
mov
add
repnz
adc
retf
and
das
pop
fadd
pop
mov
loope
sbb
js
fadd
fmul
pop
mov
sti
add
js
or
or
xchg
add
popa
int
or
(bad)
les
fistp
lea
jmp
(bad)
jl
sub
(bad)
cli
imul
dec
outs
pop
rcr
cwde
sub
jnp
push
nop
inc
add
ds
add
and
fild
jns
icebp
shl
sar
out
add
(bad)
out
movs
cdq
mov
add
pop
add
cwde
xchg
cs
adc
add
mov
jo
lahf
jo
data16
push
or
push
out
inc
push
pop
mov
adc
jl
hlt
and
jecxz
shl
ins
hlt
push
or
into
add
sbb
push
xchg
sub
adc
stc
cmc
jno
fwait
and
sub
je
adc
mov
and
jae
test
(bad)
scas
pop
add
sub
inc
fst
call
pop
inc
sbb
cld
xor
jbe
add
mov
test
sbb
jmp
mov
mov
add
pop
stos
mov
mov
mov
inc
daa
jge
jp
xchg
sub
dec
fisttp
addr16
out
add
sbb
dec
mov
mov
ds
fmul
mov
(bad)
popf
and
icebp
aam
cmp
cmp
push
cmp
cmps
(bad)
std
enter
adc
arpl
sub
jb
daa
(bad)
jecxz
mov
xchg
imul
fnstsw
je
add
sar
xchg
push
aas
cmp
push
or
aaa
dec
pop
adc
clc
stos
stos
mov
mov
jg
in
pop
xchg
inc
push
inc
xchg
mov
mov
out
dec
fdivp
sub
push
mov
repz
jbe
in
int
and
dec
aaa
adc
sbb
fsub
or
cli
dec
imul
(bad)
loopne
(bad)
mov
pop
add
push
out
enter
call
dec
ret
ficomp
and
dec
push
movs
add
xor
loopne
sub
jo
adc
cmp
inc
or
mov
inc
jo
xchg
or
or
cmp
shl
dec
add
mov
pop
push
ret
enter
cmp
stos
div
in
or
das
fistp
mov
push
fistp
jne
inc
add
test
inc
inc
test
add
in
adc
push
in
sub
shl
push
add
jnp
pop
add
jl
pop
(bad)
fldcw
mov
int3
pop
xchg
mov
iret
std
icebp
pusha
nop
xor
loope
idiv
test
iret
outs
loope
pop
ffree
fistp
mov
stos
call
sar
ret
fwait
out
(bad)
mov
shl
pop
cld
lock
sahf
adc
fistp
iret
adc
add
stos
retf
fld
inc
pop
scas
mov
add
and
in
jge
lds
outs
out
sahf
out
adc
adc
and
push
cmp
pusha
sbb
imul
call
jb
bound
inc
(bad)
push
mov
mov
data16
push
adc
fadd
test
repz
lds
pop
add
test
call
add
dec
push
jecxz
inc
add
inc
add
xor
xor
vpandn
ins
mov
retf
and
fnstsw
inc
xchg
inc
sub
dec
adc
sub
add
lds
cmp
(bad)
lods
loope
jmp
sbb
sbb
or
sub
push
fistp
jne
inc
add
test
inc
inc
test
das
cmp
mov
das
jno
in
fstp
jmp
loop
xchg
(bad)
retf
pop
ror
mov
dec
pop
cs
sub
jle
sub
and
int3
or
add
stc
arpl
dec
ror
mov
shr
stc
mov
add
mov
adc
add
es
sahf
fisttp
add
arpl
or
sub
sub
pop
pop
(bad)
pop
aas
jle
jg
fnstenv
clc
jg
fst
iret
std
mov
jno
and
inc
mov
iret
iret
add
push
add
xchg
test
out
xlat
loopne
add
push
cmp
pop
out
fld
dec
or
jl
pop
or
into
test
add
and
(bad)
pusha
pop
cmc
imul
and
imul
adc
out
inc
add
xchg
shufps
jp
or
loop
mov
popa
in
xor
loopne
sahf
pop
jo
leave
fistp
cmps
data16
add
lock
bound
stc
retf
fwait
(bad)
pop
jl
jmp
aam
inc
xor
js
adc
lea
mov
mov
mov
movs
mov
mov
sbb
fisub
mov
adc
pop
nop
fld
pop
hlt
add
fcomp
add
mov
adc
cwde
fisub
out
shl
and
and
add
mov
cld
sub
movs
lock
outs
out
and
cs
lock
or
sahf
pop
pushf
aas
ja
out
out
(bad)
fnstenv
and
les
cmc
imul
push
and
outs
mov
addr16
aam
sub
sub
add
or
fst
jg
mov
and
mov
movs
out
pop
fstp
mov
or
jns
outs
add
shrd
aas
or
sub
mov
sbb
test
adc
inc
daa
jne
and
movs
add
stos
sub
fs
cmps
mov
add
dec
loopne
int
jmp
sahf
aas
mov
das
sahf
fisttp
cmps
(bad)
loopne
test
sahf
aad
or
cdq
xor
imul
xchg
and
(bad)
leave
int
repz
lahf
pop
mov
div
sar
out
scas
mov
inc
nop
pop
xchg
add
xlat
xlat
test
in
sar
pop
xchg
dec
add
mov
ret
xchg
jecxz
pushf
test
rol
pop
mov
or
or
retf
lods
mov
jecxz
add
call
mov
cmp
or
adc
or
push
add
inc
(bad)
movs
pusha
neg
adc
jp
or
daa
mov
ror
call
and
shr
stos
test
outs
je
cmp
ret
add
and
or
dec
jge
xchg
rol
lock
fild
ror
jmp
xor
daa
fdivrp
sti
aam
pop
xor
clc
div
or
cmc
stos
inc
inc
das
and
mov
mov
mov
stos
adc
cmp
pop
mov
fst
adc
das
fistp
js
jle
jbe
fnsave
xchg
xchg
mov
les
mov
jg
inc
push
loop
cli
fs
out
or
dec
popf
outs
mov
adc
mov
dec
shl
ja
jo
pop
dec
popf
fsub
push
cmp
test
data16
ins
push
and
pop
jno
cld
pop
fsubr
fadd
mov
mov
rol
cwde
mov
aas
push
das
in
mov
imul
pusha
dec
dec
ins
fwait
xchg
mov
(bad)
std
clc
add
and
int
clc
(bad)
out
loopne
and
jg
imul
jle
repz
jnp
adc
jge
add
inc
and
sub
push
inc
or
cmps
test
adc
mov
push
out
gs
pop
jnp
cmp
pop
(bad)
inc
mov
retf
pop
daa
cmp
(bad)
clc
loop
icebp
inc
push
aad
ret
or
and
inc
out
cmc
arpl
mov
in
add
adc
data16
adc
lahf
fiadd
dec
sbb
sbb
mov
daa
addr16
in
fdivr
movs
cmp
pop
mov
leave
lods
xor
cmp
ret
mov
add
fcmovnbe
pop
adc
mov
call
jo
(bad)
xor
add
loopne
mov
mov
pop
mov
mov
mov
(bad)
arpl
sbb
jge
stos
clc
jmp
test
sub
push
mov
dec
lahf
sub
pop
rcl
and
mov
dec
frstor
xchg
ss
push
and
cmp
add
xchg
retf
add
cmp
inc
sti
sub
stc
(bad)
scas
dec
or
ja
movs
dec
inc
or
dec
loopne
pop
cmp
outs
ret
in
push
pop
lock
ins
js
loop
mov
dec
test
outs
sahf
sbb
dec
ins
sbb
mov
xor
lods
clc
lds
dec
loope
jle
sub
out
jnp
(bad)
scas
pop
sar
dec
fwait
add
(bad)
out
stc
mov
jnp
jle
retf
(bad)
sti
idiv
movs
sbb
or
add
aas
pop
enter
nop
jnp
pop
movs
hlt
dec
add
and
lds
(bad)
lahf
mov
xchg
mov
push
xchg
add
sbb
xor
mov
mov
add
and
cmp
shl
push
sar
aaa
or
sbb
add
sbb
adc
popf
add
pusha
inc
dec
imul
sub
bound
adc
rsqrtps
pop
mov
in
mov
sub
or
retf
lahf
adc
adc
push
sub
mov
sbb
add
add
orps
or
movs
sub
push
sbb
cmp
movs
or
jae
pop
ficomp
ds
rcl
push
xchg
bound
mov
pop
jo
in
jno
clc
movs
repz
leave
push
xchg
fdiv
iret
jmp
loop
xchg
xor
out
lods
push
sbb
out
lds
loopne
add
in
pop
lock
ret
(bad)
jle
push
(bad)
repz
loop
mov
maskmovq
imul
or
cld
call
(bad)
icebp
loopne
in
and
fbld
aaa
loop
jae
ins
mov
fstp
jmp
jecxz
mov
or
lock
shl
or
mov
inc
js
enter
popf
push
jg
sub
rol
sti
and
in
xor
add
(bad)
xchg
add
aam
loopne
sub
cmp
cmps
(bad)
fst
add
add
bound
nop
cwde
push
cmps
push
pop
xor
add
cmp
mov
loope
fcmovnbe
mov
je
lock
inc
pop
adc
dec
cld
mov
bound
fs
mov
xor
jnp
jp
inc
jne
mov
jne
mov
jne
mov
frstor
mov
aaa
enter
add
jb
mov
or
test
pop
and
jns
ret
fdiv
popa
test
jno
sbb
push
mov
xchg
pop
(bad)
xor
mov
pop
inc
add
inc
sub
or
push
push
add
ret
mov
push
loope
mov
xchg
pop
mov
idiv
ins
ins
push
sahf
lahf
fsub
jp
das
adc
jbe
fisubr
sbb
scas
pop
xchg
push
mov
fs
dec
mov
(bad)
dec
neg
jae
fidivr
mov
out
pop
cmp
gs
iret
ja
add
jl
(bad)
(bad)
neg
std
retf
push
icebp
outs
lahf
fadd
pop
fidivr
imul
cmp
ja
push
sar
stos
nop
mov
pop
out
mov
push
cmp
sub
retf
and
pop
repnz
mov
test
xchg
out
call
(bad)
mul
xchg
repnz
jg
add
rol
js
or
test
and
mov
scas
test
cmps
or
je
mov
cdq
sbb
js
jo
mov
lea
mov
or
sbb
xor
inc
inc
dec
rol
fsub
mov
push
push
jge
xchg
ror
pusha
jp
or
out
pop
pop
push
xchg
and
mov
hlt
test
ret
jp
(bad)
iret
test
xchg
jmp
add
dec
xchg
retf
add
lock
shr
mov
lock
cmp
cmp
ins
mov
jle
out
pop
out
add
ins
ret
test
int
pop
mov
adc
scas
out
shr
cmp
mov
das
in
mov
and
cld
out
ucomiss
les
pop
cmp
cld
in
retf
aaa
sbb
test
stc
idiv
jecxz
outs
loop
lahf
ffree
lahf
fistp
sub
jg
mov
jne
(bad)
mov
or
lds
into
and
sbb
and
test
mov
push
int
push
jmp
sbb
int3
lahf
fxch
dec
add
pusha
into
xchg
out
mov
rcl
mov
mov
inc
xor
aas
sbb
cli
inc
popa
jb
push
sbb
pop
mov
mov
call
jno
shl
or
inc
addr16
push
jle
mov
inc
pop
xchg
and
jbe
and
add
imul
jge
cmp
push
ror
mov
push
sub
mov
(bad)
sbb
dec
sbb
sub
and
inc
add
sub
xchg
mov
jae
adc
mov
mov
out
add
movsx
movs
jo
into
out
ret
xchg
mov
into
jecxz
repz
je
cmp
cwde
mov
mov
sub
jp
or
pop
mov
mov
lock
(bad)
(bad)
fstp
out
out
aas
ret
sti
push
(bad)
icebp
(bad)
cmp
xchg
cwde
add
mov
out
nop
add
add
jnp
stc
push
xor
mov
cld
cmc
movs
lods
clc
bnd
jle
mov
fcomp
push
ret
mov
dec
in
std
jecxz
mov
adc
imul
in
add
jmp
scas
xor
add
sub
and
jge
cmp
mov
mov
cwde
shl
dec
or
mov
(bad)
call
mov
call
or
ret
inc
add
stc
aas
mov
shl
add
fadd
not
ds
cmps
inc
outs
jecxz
jb
mov
xchg
retf
in
mov
sbb
pop
(bad)
retf
add
faddp
sbb
dec
lahf
mov
push
cmp
pusha
ror
(bad)
outs
pop
fmul
jmp
lock
jno
ds
popf
sub
mov
(bad)
mov
jecxz
div
pop
pop
jg
jg
dec
add
fwait
jnp
sti
out
loopne
lahf
cmp
jg
out
jle
lods
adc
mov
shr
cmp
and
pushf
push
out
xchg
mov
pop
inc
stos
add
fild
cmps
or
shl
(bad)
test
jmp
xchg
and
adc
stos
add
pop
shl
push
add
repz
add
data16
jbe
inc
(bad)
js
push
and
add
pushf
fadd
fst
out
pop
aas
cmp
jae
inc
arpl
inc
add
das
fild
push
xchg
sbb
or
inc
mov
jo
pop
or
cmp
imul
mov
in
cmp
nop
sti
push
(bad)
mov
push
sub
mov
sbb
add
or
addr16
xchg
cmp
ror
or
inc
popa
sahf
sub
clc
cwde
bnd
loop
rcl
mov
outs
aas
jge
out
pop
fild
mov
cwde
std
in
ret
jle
pop
ds
cmp
inc
cld
(bad)
fucomip
rcr
aad
add
sar
mov
les
js
mov
sub
add
loopne
test
cmp
or
mov
aad
cmp
mov
cmp
add
shr
add
in
ffree
ja
lea
sbb
loopne
fdivr
test
sbb
clts
mov
and
add
mov
loopne
sbb
add
fwait
mov
movs
pop
mov
fimul
jb
xor
loopne
dec
in
and
fdivr
add
add
fcom
or
or
inc
pop
or
or
jo
sar
nop
push
aad
or
inc
jg
das
pusha
das
adc
and
mov
loope
fdivr
ja
dec
xchg
mov
mov
sbb
cmp
jmp
mov
push
je
cmps
push
pop
add
fisttp
sbb
adc
jmp
arpl
push
and
xchg
mov
xchg
mov
xor
rol
dec
jmp
mov
or
sahf
adc
xor
test
sbb
int
inc
int
or
ds
popf
fild
mov
cli
jbe
ja
or
in
inc
cld
neg
cs
lock
cld
(bad)
(bad)
clc
xchg
dec
lahf
rcr
or
(bad)
cmc
cmp
aaa
out
loopne
cwde
scas
out
loope
dec
or
in
cmps
lock
sbb
icebp
in
mov
clc
cmc
push
sti
lock
ins
jl
mov
scas
out
and
fadd
imul
stos
fld
fld
addr16
dec
add
jae
sub
aaa
add
pop
aaa
dec
mov
fistp
sub
clc
xchg
lock
sti
out
cmp
nop
and
mov
push
(bad)
int
add
jno
pop
pop
rol
xchg
lahf
call
loopne
lods
out
cmp
xor
cmps
addr16
xchg
aam
out
not
pushf
lahf
aad
or
or
mov
mov
test
cmp
ds
ja
ret
scas
test
movs
dec
adc
das
icebp
cdq
cmp
and
xor
dec
inc
(bad)
movs
scas
fdivr
mov
lea
mov
fisttp
mov
sbb
pusha
jl
jp
add
adc
adc
rcr
and
sub
sbb
lods
les
(bad)
dec
dec
jmp
repz
or
pop
cmp
repnz
pop
pop
das
out
in
sub
xchg
mov
and
out
push
je
out
fnstsw
outs
sbb
inc
pop
scas
retf
inc
pop
(bad)
mov
dec
cmc
les
int
stos
xchg
jb
mov
lock
push
add
or
arpl
push
and
push
shr
dec
jne
xchg
mov
cli
dec
(bad)
repnz
mov
loop
out
jno
mov
hlt
fiadd
cmp
out
les
addr16
shl
lock
lods
sbb
jl
int3
ds
pop
push
ds
sti
ja
loop
jle
pop
jg
int
and
outs
loope
(bad)
ret
fistp
cmp
clc
pop
ds
add
mov
jns
mov
in
adc
clc
stos
fwait
mov
jnp
leave
fisttp
cmp
loopne
iret
lods
ret
iret
or
std
mov
mov
add
push
or
pop
neg
jns
mov
sbb
mov
cmp
shl
add
sti
loope
mov
aaa
cs
mov
jae
jecxz
in
dec
and
loop
rcr
add
nop
hlt
xor
push
sbb
xchg
es
iret
fadd
clc
rcl
fdivr
cmp
and
cld
jne
test
(bad)
jp
test
pop
pop
hlt
dec
jmp
xchg
sahf
ficomp
icebp
push
int
sub
or
sbb
mov
push
push
xlat
xbegin
out
or
jmp
scas
in
jmp
cs
cmp
mov
call
aad
ror
add
xchg
add
jnp
sbb
inc
or
lods
jae
mov
fcmovne
std
retf
xchg
add
adc
and
or
mov
imul
les
add
pushf
cmp
cmc
sbb
test
(bad)
loop
ret
js
div
in
jmp
pop
bound
(bad)
out
sbb
(bad)
icebp
outs
lahf
aas
xchg
cli
jne
add
iret
outs
ffreep
jg
outs
loopne
scas
loop
aas
jle
jg
ja
fistp
jnp
hlt
and
cli
sub
mov
std
clc
imul
jge
fwait
sbb
ret
repz
sub
pop
test
test
xchg
add
xchg
mov
repnz
popa
xor
fs
mov
repnz
and
pop
lahf
loopne
and
lahf
cmp
dec
mov
ja
(bad)
lods
dec
pushf
cwde
(bad)
ja
cmp
cmps
je
arpl
add
cmp
or
xchg
add
dec
adc
or
loopne
dec
dec
ins
mov
popa
(bad)
sbb
push
or
fcom
fcom
mov
mov
dec
dec
or
je
mov
sti
cmps
call
test
ret
shr
add
pop
fdivr
fs
movs
add
stos
repnz
mov
xchg
repnz
push
add
jmp
inc
lods
rcr
cli
pop
or
std
retf
or
lods
lods
popa
stc
xor
push
mov
jecxz
test
inc
xlat
sbb
fisub
mov
xchg
push
adc
mov
pop
add
dec
add
arpl
je
js
fdivr
iret
sbb
pop
iret
sbb
xchg
scas
out
ret
fstp
lock
jae
clc
fst
and
aad
sbb
(bad)
lods
mov
out
popf
or
jg
ds
(bad)
clc
test
(bad)
std
mov
xlat
aaa
out
loopne
pop
mov
cs
cld
into
or
clc
out
push
mov
mov
(bad)
movsx
mov
repnz
in
addr16
loope
test
mov
enter
jbe
hlt
pop
add
cmp
pop
pop
cmp
or
jmp
out
sti
xchg
or
adc
adc
cmp
aas
sar
jge
outs
outs
pop
adc
out
and
fstp
xchg
xor
cmps
fwait
lea
sbb
daa
movs
or
fdiv
shl
sub
xchg
cdq
pop
aas
cmp
mov
jne
dec
adc
mov
adc
in
jmp
aam
mov
sub
imul
xor
mov
or
movs
frstor
lods
sbb
xor
iret
xchg
js
adc
dec
add
cwde
js
scas
dec
cli
push
je
push
push
dec
and
xchg
add
mov
out
mov
mov
push
retf
add
jecxz
mov
sbb
and
mov
lock
xlat
add
cs
xchg
or
test
sti
icebp
loope
mov
retf
push
(bad)
loope
pop
and
ja
loopne
retf
fcomi
int
xchg
cmp
lock
gs
sti
outs
pop
(bad)
jg
jg
dec
add
jmp
test
jmp
lock
pop
les
jp
or
jge
sbb
push
xchg
adc
dec
(bad)
jb
ret
mov
test
jle
popa
cmp
cmp
test
push
das
lds
cmp
pop
mov
xor
loopne
and
das
nop
fdivr
jnp
or
repnz
leave
inc
ins
cdq
call
mov
lock
mov
jle
or
int
cmp
test
pop
pushf
aas
or
sahf
sbb
std
jo
jbe
adc
jmp
add
cmp
pusha
or
in
int
cmp
iret
test
push
sbb
mov
dec
xor
mov
ja
push
xchg
xchg
mov
push
xchg
call
or
fsub
sbb
inc
xchg
adc
(bad)
mov
inc
hlt
jmp
adc
push
retf
mov
sahf
enter
jmp
fs
leave
rcl
pop
mov
cld
scas
lahf
daa
fnstcw
mov
lods
call
inc
add
xchg
xchg
cmps
mov
mov
stos
jne
push
(bad)
sbb
scas
fcmovu
test
(bad)
sti
push
xlat
jns
out
mov
add
xchg
retf
add
or
sahf
sbb
loopne
inc
xlat
sbb
fisub
inc
dec
mov
(bad)
retf
sbb
adc
sbb
rcl
pop
psrad
pop
dec
jecxz
mov
pop
cld
loop
inc
jl
jae
ds
fld
push
cmp
(bad)
ds
jmp
lahf
ffree
jg
sti
cmp
sti
ja
jecxz
pop
mov
xchg
(bad)
(bad)
in
pop
bound
enter
sbb
cld
div
jl
jl
mov
shr
out
sbb
stc
cmp
pop
pop
fiadd
iret
dec
outs
sar
sub
test
js
jnp
pop
fnstsw
pop
add
cmp
jp
mov
ret
stos
fld
int
lock
mov
aaa
pop
dec
loopne
xchg
ret
jo
stc
xor
pop
inc
xor
sbb
cmp
adc
rol
add
xchg
or
into
out
jecxz
sar
cmp
pop
repnz
jne
add
push
xchg
adc
popf
ret
xchg
xor
bound
push
dec
jmp
nop
clc
xchg
add
pushf
les
push
or
mov
icebp
cwde
call
les
inc
xor
out
les
in
imul
enter
or
sbb
cmps
arpl
cwde
ds
pusha
fs
jmp
mov
inc
push
or
pop
jo
in
jle
and
jmp
jb
movs
mov
push
dec
stc
sub
push
fistp
push
cld
and
jp
pop
and
sti
xchg
in
xchg
inc
and
push
adc
add
or
movs
call
das
push
das
jp
sbb
ficom
retf
mov
movs
in
repnz
xchg
imul
xchg
call
sbb
mov
or
xchg
outs
lahf
shl
aas
and
in
imul
out
jl
arpl
ds
int3
ret
in
lds
push
ja
iret
out
pop
les
mov
pop
xor
cld
out
out
ffreep
call
push
aad
cld
jecxz
push
lock
(bad)
out
loopne
fistp
test
mov
push
daa
or
adc
loopne
sahf
retf
ret
pop
lahf
iret
adc
fcomi
dec
sar
jae
cmp
fdiv
xchg
into
sub
shr
pop
dec
hlt
in
xor
cld
(bad)
jno
call
outs
pop
xchg
jecxz
arpl
ja
adc
shl
fisttp
icebp
in
xchg
js
fstp
pop
cmp
(bad)
int
mov
(bad)
jmp
inc
loope
rcl
mov
cs
repz
adc
adc
jmp
jno
push
iret
not
(bad)
jbe
fwait
add
cdq
xchg
inc
loope
mov
bound
or
or
ss
leave
cwde
cdq
fld
add
inc
rcl
lock
add
in
loop
push
sbb
inc
sub
mov
(bad)
icebp
add
shl
int3
sbb
inc
xchg
pop
popa
repz
fdivr
lea
and
cmc
xor
jo
inc
push
scas
pop
cmp
jmp
mov
(bad)
in
mov
cmp
inc
fucomp
sbb
test
pop
dec
xchg
in
imul
int
dec
xchg
(bad)
cmp
xchg
cmps
mov
add
pop
(bad)
fnsave
mov
dec
mov
dec
aam
retf
cmc
jb
(bad)
mov
and
sub
lods
ins
test
and
out
inc
into
mov
in
cmp
popf
add
imul
test
stos
mov
frstor
push
jecxz
popa
dec
xchg
jp
xchg
adc
add
fnsave
clc
xlat
fistp
fist
pop
icebp
jmp
in
sbb
test
out
mov
rol
clc
out
cs
mov
cmp
push
mov
add
inc
push
sar
loop
cld
in
xchg
addr16
outs
out
ffree
out
pop
cmp
or
retf
fcomip
iret
sbb
pop
repnz
(bad)
loop
push
jl
mov
xchg
imul
shr
out
add
dec
mov
adc
(bad)
lock
sar
cli
mov
sar
or
add
pop
aas
push
dec
lods
sbb
cmp
aaa
push
pop
lods
xchg
arpl
aad
and
sub
or
and
mov
xor
out
adc
pop
inc
and
push
outs
cmps
or
shl
imul
fadd
ss
dec
rcr
test
add
pop
pusha
pusha
je
hlt
mov
into
inc
push
cmp
or
and
hlt
(bad)
test
scas
das
jb
dec
dec
call
mov
cli
pusha
pushf
fnstcw
sahf
mov
pop
(bad)
in
pop
jo
int3
(bad)
sub
sub
mov
xchg
xchg
mov
fcom
xchg
enter
inc
(bad)
pop
and
lods
mov
adc
or
(bad)
aad
mov
mov
xchg
sti
xchg
pop
xlat
pop
ret
test
jne
in
pop
and
iret
fistp
mov
daa
aam
call
dec
cmps
js
js
jmp
arpl
mov
cmp
popf
int
lea
mul
aaa
out
ffreep
aas
(bad)
cld
imul
sbb
cmovle
adc
stc
lahf
das
lahf
ret
(bad)
jge
sbb
(bad)
ja
sub
jg
jnp
jg
jmp
jg
clc
push
or
jg
xchg
repnz
jecxz
out
lahf
lahf
faddp
mov
jg
pop
cmp
imul
(bad)
xchg
jle
cld
std
out
into
popa
cld
sahf
outs
or
fadd
inc
daa
(bad)
loopne
add
sahf
outs
std
outs
mov
loop
and
(bad)
jns
jnp
dec
hlt
js
push
clc
in
sahf
loope
int
pop
and
add
mov
pop
and
popf
mov
ss
lds
mov
jno
int
fsub
adc
sbb
cmp
dec
aas
xor
stc
and
mov
mov
loop
pop
inc
cmps
test
stc
add
outs
std
and
mov
retf
jns
push
mov
push
or
fdivp
sbb
out
pop
addr16
rcr
sbb
aad
push
sti
inc
call
cs
(bad)
mov
popa
xlat
clc
ds
and
shufps
mov
sub
cmp
sbb
lods
mov
nop
clc
fnstsw
sbb
sub
rol
dec
div
mov
sub
xchg
test
(bad)
in
xor
cmc
ret
pop
add
mul
xor
and
add
call
xor
push
rcl
jmp
fs
int3
icebp
dec
in
sbb
aad
cmp
imul
loope
dec
jns
fisub
lock
je
(bad)
je
and
enter
in
ja
jecxz
outs
popf
pop
mov
sbb
iret
cs
(bad)
cmp
mov
add
sti
xlat
popf
add
jnp
push
mov
dec
clc
ret
xbegin
jg
mov
xchg
add
std
jecxz
lock
cmp
pop
pop
cmp
out
pop
cmp
aaa
iret
sbb
xlat
mov
jecxz
fwait
jnp
fwait
sub
add
loope
xchg
js
addr16
fdiv
push
or
sub
shl
daa
or
mov
pop
aaa
sbb
jb
pop
or
mov
scas
arpl
fldenv
fs
jae
popa
(bad)
ins
mov
loop
ret
dec
add
jecxz
ins
xor
addr16
fimul
sbb
jno
mov
adc
sbb
jg
aas
adc
shl
or
cmp
dec
mov
js
test
ja
push
cwde
cwde
mov
adc
add
(bad)
movaps
xor
sbb
inc
add
ror
xchg
call
xchg
and
repz
jp
jae
icebp
repz
push
inc
adc
dec
sbb
loopne
in
xchg
cmp
int3
sbb
adc
(bad)
test
int
jno
in
cmp
jbe
scas
nop
rcr
xlat
dec
(bad)
scas
pop
hlt
jl
clc
jle
inc
fnstcw
enter
jg
jmp
gs
mul
cmps
pop
shl
push
mov
add
add
and
jmp
fsubr
sbb
test
mov
push
loope
jmp
jl
add
mov
dec
or
into
fldenv
cmp
pop
sub
outs
outs
out
(bad)
aaa
aaa
mov
retf
clc
loopne
jp
pop
mov
cmp
test
inc
mov
jl
sbb
cld
stc
cmc
(bad)
out
iret
pop
(bad)
mov
jmp
jae
jle
sbb
repnz
adc
xchg
dec
enter
aaa
mov
ds
out
jecxz
retf
lock
movs
js
lock
xor
out
dec
les
cmp
ret
jo
leave
imul
fidivr
retf
pop
repz
pop
loopne
pop
jae
sub
(bad)
fwait
cmps
jecxz
mov
sub
lahf
sbb
scas
mov
cli
shl
cmovge
jmp
adc
mov
(bad)
xchg
cmp
jo
sbb
sbb
push
xchg
and
dec
cmp
aaa
cmp
imul
xor
and
(bad)
mov
mov
pop
sbb
xchg
in
cmc
out
fcom
xor
push
callw
adc
out
and
mov
cwde
cmp
cmps
jmp
fdiv
xor
xchg
mov
cmc
jge
jno
pop
outs
sahf
(bad)
inc
add
ja
xchg
iret
sbb
int
jns
add
and
imul
sbb
loope
loopne
jne
sbb
mov
sbb
jne
fwait
jp
test
add
mov
stos
imul
(bad)
int
adc
inc
add
push
or
stos
aam
(bad)
pop
ss
test
push
shr
jno
sbb
ins
clc
cmp
mov
scas
jae
push
xchg
scas
jbe
cmp
add
out
sbb
add
pop
rcl
or
jl
jg
ds
lods
ret
xchg
pop
mov
sub
xor
jno
or
pop
dec
cli
dec
add
jecxz
mov
cld
mov
repnz
inc
js
mov
inc
cli
into
add
mov
lahf
ret
sbb
cmps
push
mov
pop
shr
pop
mov
jb
loop
add
lock
daa
lock
mov
js
outs
sbb
xor
cmp
and
(bad)
cmp
dec
pop
dec
(bad)
sub
daa
das
jecxz
sbb
retf
daa
jae
(bad)
dec
mov
fdivr
xor
stc
movs
and
(bad)
pusha
sbb
rcr
in
lock
sbb
and
lahf
les
cmp
pop
lods
in
ficomp
loopne
mov
leave
pusha
jnp
ret
jbe
(bad)
mov
and
mov
test
jne
fist
cmps
in
cmp
rol
add
out
ficomp
sub
and
arpl
add
push
dec
jmp
in
mov
bound
retf
ds
or
jo
and
sbb
movs
loop
ficomp
mov
test
inc
add
fild
jl
adc
adc
sub
out
out
stos
or
test
mov
pop
jmp
mov
ficom
cld
cmp
xchg
sti
push
(bad)
mov
lods
out
add
jns
add
push
and
and
ss
push
jecxz
icebp
retf
fst
enter
lea
sbb
repnz
nop
stc
addr16
inc
fnsave
mov
sbb
adc
cwde
mov
sar
sbb
dec
scas
in
lds
jnp
mov
out
sbb
mov
sti
out
inc
and
add
(bad)
pop
ficom
mov
in
adc
sbb
repz
cld
repnz
pop
retf
pop
mov
jnp
adc
aam
sub
lods
sbb
loopne
call
outs
sbb
ins
adc
shr
dec
js
imul
fdivr
push
mov
rep
iret
repnz
stos
mov
inc
test
jp
inc
sub
call
dec
ret
and
inc
das
in
sbb
mov
outs
gs
dec
pop
shl
(bad)
adc
(bad)
out
scas
sbb
lods
pop
cli
(bad)
mov
ss
fwait
push
vpackuswb
and
mov
dec
outs
inc
mov
mov
test
mov
push
(bad)
in
call
fsub
or
adc
enter
pop
xchg
cli
(bad)
in
push
mov
or
and
jnp
arpl
mov
cwde
cmp
out
ret
and
into
jo
dec
call
mov
dec
aaa
fmul
pop
mov
jcxz
movs
std
mov
scas
sbb
sar
add
push
outs
aam
ret
sbb
add
dec
sbb
mov
jno
jg
iret
lea
sbb
nop
nop
sbb
xor
push
pop
xor
test
daa
sbb
mov
xchg
(bad)
ins
mov
sub
lds
push
das
sbb
adc
or
dec
in
or
sub
add
mov
test
jmp
add
xchg
mov
lahf
pop
retf
and
xlat
push
mov
lods
jne
jno
retf
fs
cmp
cmp
aad
loopne
outs
cmp
loopne
(bad)
inc
cld
neg
aas
add
clc
or
ret
xchg
dec
and
icebp
push
push
fidivr
mov
das
sbb
test
pop
(bad)
mov
add
xchg
test
xor
xchg
mov
dec
pop
xchg
cmps
or
sbb
jecxz
push
jno
jno
pop
pop
cmp
mov
or
fnstsw
jmp
fsubr
in
out
add
imul
leave
jle
or
in
dec
push
jo
stc
or
(bad)
popa
inc
(bad)
mov
lods
xor
add
inc
dec
and
xor
bound
sub
dec
xchg
cwde
mov
hlt
add
std
jno
dec
pop
in
fwait
rcl
jnp
nop
jl
dec
mov
scas
or
out
mov
fld
sub
xor
icebp
inc
jecxz
aam
in
jmp
out
sub
fld
loopne
test
dec
jmp
inc
das
in
cdq
fadd
imul
pop
push
pop
jmp
lods
pop
sar
pop
(bad)
(bad)
jo
dec
xchg
mov
leave
dec
mov
iret
pop
lea
pop
mov
push
dec
mov
mov
out
lds
jmp
int3
test
xchg
and
jmp
push
mov
mov
mov
inc
jo
sahf
add
cmps
inc
fnsave
jg
add
nop
nop
sbb
xor
push
cmp
rcl
call
mov
push
jecxz
clc
lods
lock
xor
lds
mov
xchg
lea
adc
add
mov
loop
mov
aad
dec
lock
jmp
bound
sbb
lods
sbb
popf
mov
mov
imul
out
pop
mov
sbb
xchg
inc
pavgb
jg
push
jle
fisubr
jle
adc
mov
fimul
sbb
mov
test
xor
or
xchg
fdivr
cmp
jmp
enter
ret
cmp
adc
ins
pop
xchg
cmp
or
iret
stc
mov
test
jmp
outs
and
push
hlt
cmps
test
cs
sbb
lock
sahf
fdivr
mov
aaa
(bad)
fnstenv
and
fwait
pop
(bad)
xchg
fsub
retf
fwait
cmp
inc
(bad)
fcom
ss
pop
retf
push
dec
jmp
std
adc
imul
fnstcw
sub
fwait
xchg
or
xor
sti
cmps
push
pop
fild
test
retf
add
out
or
cmp
mov
test
fst
jp
add
imul
aam
test
sub
sub
cmc
ret
mov
mov
mov
cmp
xlat
pop
pop
in
enter
std
sar
loope
xor
fdivr
lahf
test
out
jno
fdivr
and
popf
aas
sub
jns
mov
inc
imul
nop
jno
cld
mov
je
sti
push
fistp
push
and
inc
test
test
daa
sbb
enter
pop
out
inc
test
sub
xchg
mov
push
sbb
cld
scas
push
mov
loope
mov
and
mov
add
sbb
inc
ret
mov
mov
xor
pop
mov
sahf
ror
ss
push
pop
jno
ret
push
cmp
mov
(bad)
stc
sub
push
cld
imul
add
mov
ficom
mov
add
cld
jmp
stc
inc
and
xor
lahf
pop
cmp
pop
push
mov
pop
xchg
xlat
loope
out
loopne
ret
and
pop
into
jns
iret
gs
push
cmp
jecxz
mov
sub
(bad)
out
loop
lods
je
cwde
fst
lea
dec
xor
adc
push
iret
and
in
jecxz
mov
sbb
mov
test
or
jmp
mov
jae
xchg
aam
(bad)
push
in
xor
into
call
push
adc
sbb
idiv
adc
(bad)
lods
push
xchg
mov
mov
lods
pop
(bad)
lea
push
dec
pop
mov
xchg
enter
aaa
nop
and
mov
xor
shl
mov
je
ss
cmp
cmp
neg
sar
mov
test
jnp
pop
rcl
(bad)
mov
dec
movs
xchg
inc
inc
sti
inc
call
xor
arpl
sub
dec
rol
daa
addr16
jo
rol
loopne
or
fsubp
fidivr
cld
outs
pop
and
cmp
call
sbb
mov
add
loope
add
xor
std
stos
ins
xchg
cmps
std
sbb
xor
xchg
and
inc
ss
and
jno
lock
es
icebp
retf
jecxz
or
jns
lock
cmc
inc
and
push
imul
sub
cmc
sub
xchg
aas
(bad)
fs
xchg
inc
pop
mov
int3
shr
mov
in
ret
cmc
arpl
ins
shr
in
xor
lahf
(bad)
mov
sub
sbb
out
icebp
jg
jp
(bad)
out
jmp
(bad)
repz
sti
out
lock
daa
iret
loopne
aaa
das
loope
aaa
into
loope
out
pushf
ret
mov
out
in
(bad)
ja
fs
lahf
retf
(bad)
pop
sti
cmps
jecxz
mov
icebp
cld
out
jmp
outs
cwde
test
xchg
shr
enter
xchg
or
cdq
in
nop
cmp
sub
rol
scas
jb
imul
idiv
jl
jo
xor
aas
mov
xor
push
loope
arpl
js
out
pop
mov
or
sti
pop
mov
lds
cmp
out
fcmovbe
mov
cmp
cs
or
ret
nop
aaa
jae
push
dec
push
mov
jb
int3
dec
push
ret
mov
lods
xor
mov
mov
and
sbb
add
fisub
jl
mov
(bad)
and
sub
out
push
test
xchg
fdivr
add
leave
mov
mov
pop
js
enter
mov
fdiv
cmp
aas
scas
daa
or
mov
jle
enter
sbb
mov
dec
cmp
or
add
mov
jo
inc
add
into
sbb
jnp
pop
fisubr
into
dec
pop
xchg
xor
ds
(bad)
das
sahf
fimul
aad
jnp
mov
test
jb
xor
into
(bad)
(bad)
jo
lods
jnp
push
add
adc
rcl
cmp
mov
inc
pop
daa
aad
and
adc
pop
pop
jns
lods
pop
mov
push
adc
mov
mov
xor
xor
cmps
inc
cmps
inc
dec
mov
(bad)
fs
add
xchg
or
(bad)
mov
sbb
xchg
es
jno
jecxz
pop
push
(bad)
retf
mov
sbb
ror
xchg
(bad)
rcl
mov
xchg
jge
pop
into
pushf
mov
cmp
pop
cs
(bad)
stc
fcomp
push
mov
lds
push
sahf
cmp
lock
div
mov
loopne
jg
push
(bad)
bnd
icebp
mov
mov
sub
xlat
(bad)
outs
loopne
jge
adc
clc
call
aas
mov
outs
sbb
rcr
std
jno
pop
outs
fs
add
xchg
(bad)
cwde
fdiv
inc
lahf
mov
xor
mov
xchg
mov
adc
test
shl
sar
pop
jl
repz
pop
(bad)
(bad)
lods
lds
addr16
loopne
xchg
dec
loop
loope
js
loopne
mov
push
loop
mov
cmp
mov
push
sahf
(bad)
pop
aaa
ss
lds
shl
das
sbb
xor
shl
adc
dec
cld
cmps
xchg
fmul
sbb
and
adc
adc
fidiv
ret
dec
cwde
fisubr
popa
outs
dec
pop
sub
movnti
mov
mov
out
rcl
inc
(bad)
out
mov
sbb
cdq
mov
dec
mov
jbe
or
inc
add
bound
into
dec
or
nop
sbb
xchg
cmp
int3
loope
iret
push
sbb
cmp
cmps
mov
cdq
sub
jo
jmp
xchg
sti
and
outs
mov
cld
dec
pop
mov
dec
add
pop
daa
(bad)
push
add
lods
pop
mov
pop
jmp
scas
xchg
jne
mov
mov
sbb
(bad)
mov
add
inc
inc
data16
push
pop
push
sbb
ins
xor
outs
inc
dec
adc
sbb
in
lods
jno
pop
lds
in
in
inc
mov
sub
xor
test
fs
xchg
add
or
loop
stos
inc
jo
add
mov
test
or
out
lods
jae
out
fild
jle
pop
jg
jmp
fdivr
(bad)
fistp
jg
jp
jg
loopne
cmp
ret
mov
jge
push
push
sbb
aam
dec
inc
inc
bound
mov
lods
inc
shr
pop
fild
sub
add
aam
nop
fsub
or
outs
mov
cmp
xor
cmp
mov
out
aaa
mov
mov
mul
xchg
mov
loope
mov
les
xchg
push
sub
stc
pop
test
and
das
out
cwde
(bad)
out
int
cmc
lea
xor
out
mov
fadd
fdivr
add
pop
pop
dec
(bad)
mov
lods
sbb
popa
pusha
push
cmp
and
sbb
pop
fidivr
mov
mov
adc
push
mov
es
jbe
adc
inc
shl
in
mov
pop
sub
or
inc
into
clc
dec
fld
outs
dec
pop
sbb
rcr
xchg
inc
out
cmp
mov
mov
mov
push
dec
ret
mov
push
imul
jmp
pop
push
push
jecxz
mov
cmp
js
cli
or
sbb
jo
retf
sbb
pop
mov
js
ret
mov
adc
adc
popf
aas
mov
cmps
mov
inc
mov
sub
push
scas
jecxz
mov
jo
sbb
pop
or
xor
push
xor
rcl
repnz
sbb
xor
or
push
or
jecxz
aam
test
test
inc
(bad)
sbb
test
das
sbb
push
imul
or
sti
cmp
add
and
add
cmp
pop
das
pop
cmp
jne
jo
neg
stc
jecxz
mov
add
mov
push
(bad)
cli
jmp
(bad)
loopne
aas
std
in
pop
jl
mul
jmp
pop
faddp
ja
push
(bad)
cmc
lods
arpl
jno
pop
fidivr
and
and
cmc
fiadd
jno
in
ins
pop
cmp
jecxz
and
mov
pop
jmp
mov
xor
dec
in
mov
mov
inc
sub
sbb
mov
and
ds
mov
pop
ds
and
ret
xchg
mov
mov
pop
mov
adc
clc
js
repz
pop
xor
add
rcl
cwde
aas
add
jecxz
bound
daa
sub
outs
adc
fst
push
loope
retf
mov
push
or
add
movs
ficomp
shl
or
and
inc
loope
les
pop
fnstcw
popa
out
enter
ror
pusha
inc
sbb
fistp
sub
ror
add
ins
jmp
add
inc
cwde
call
idiv
jle
cmp
shl
sbb
ficomp
add
jae
ds
cmps
inc
add
pop
cmp
jecxz
jmp
not
mov
push
xchg
add
pop
lahf
aam
(bad)
retf
cmp
cmp
xor
shl
nop
shl
inc
into
sub
and
ins
and
outs
pop
bound
aad
fcom
mov
mov
add
lods
jmp
push
jnp
js
sub
shl
mov
hlt
xchg
in
mov
sti
lock
dec
loopne
fidiv
jle
repz
int
clc
mov
mov
std
jmp
scas
loopne
jle
sub
lock
(bad)
xlat
lock
std
mov
outs
fwait
add
arpl
je
jmp
iret
loope
pop
mov
xchg
out
jmp
pop
mov
add
dec
call
popa
jp
pop
pushf
fdivr
sbb
cmps
popa
std
test
int3
mov
xor
sub
lds
mov
loop
outs
out
iret
outs
in
xchg
push
loope
out
loope
ret
dec
test
mov
pop
aas
sbb
lods
(bad)
(bad)
in
popf
jne
adc
sti
pop
test
mov
mov
or
nop
test
les
adc
ja
dec
and
fnsave
lods
fcomp
out
div
fwait
addr16
es
retf
fnstsw
fisubr
int3
nop
jae
test
bound
mov
cld
dec
jns
sub
jmp
and
xor
jmp
jne
inc
ins
mov
arpl
jmp
mov
xchg
add
xor
or
push
add
dec
cmps
lock
aas
push
ds
xor
sbb
nop
cmp
xor
cwde
jo
pop
mov
xchg
pusha
mov
add
jno
mov
les
add
and
xchg
movs
pop
xor
leave
pop
ret
push
ja
xchg
pop
pop
xor
xor
js
push
dec
out
jle
push
ins
rcr
dec
mov
enter
pop
fwait
test
jmp
jbe
stc
push
mov
mov
mov
cdq
aas
push
add
dec
loop
pop
xchg
inc
push
add
or
mov
lea
sub
add
cmps
dec
mov
xor
mov
repnz
retf
jl
push
mov
mov
mov
mov
inc
mov
in
or
add
pop
sar
and
scas
in
lods
inc
arpl
movs
and
jecxz
pop
in
jecxz
outs
pop
rcr
ja
pop
pop
fadd
retf
xor
push
xchg
test
xchg
das
not
jp
arpl
out
mov
jl
mov
popa
rol
push
sar
sbb
xchg
mov
jbe
(bad)
and
rol
ds
pop
ret
and
repz
pop
pop
mov
scas
mov
loope
adc
jmp
mov
and
aam
int
mov
fcom
pop
mov
jo
aam
pop
mov
stos
or
xchg
ins
xchg
(bad)
jecxz
mov
xchg
jge
push
jo
call
jmp
add
jmp
ret
mov
int3
push
rcr
rcr
pop
mov
mov
mov
or
rol
les
inc
add
cdq
add
test
jbe
adc
retf
pop
std
fisttp
loopne
arpl
test
cs
rcr
inc
mov
sub
sbb
adc
rcr
je
push
pushf
mov
dec
pop
mov
imul
mov
imul
fcom
shr
sbb
adc
push
cmps
in
fistp
leave
pop
mov
jmp
adc
cmc
push
or
and
scas
sub
outs
inc
add
or
retf
add
xchg
out
lahf
sub
or
jmp
sbb
push
add
or
je
dec
ds
push
daa
les
mov
mov
mov
data16
ss
in
repz
mov
push
test
mov
inc
test
call
mov
dec
inc
inc
jle
cmps
stos
xor
std
jp
push
icebp
mov
jl
in
frstor
scas
ja
loope
out
sbb
xchg
dec
mov
lea
sub
dec
xor
push
adc
aas
das
out
ret
xor
lds
jbe
inc
arpl
dec
test
mov
ins
(bad)
lea
sbb
iret
jp
out
xchg
sahf
inc
lods
stc
or
int3
jl
mov
data16
aaa
cs
stc
xchg
in
add
mov
lahf
in
das
(bad)
fld
jo
mov
mov
or
adc
lock
stos
jno
push
add
outs
ss
pusha
(bad)
or
cdq
icebp
add
sbb
mov
cmp
sub
lods
pop
cmp
ss
dec
xchg
mov
dec
xchg
rol
in
bound
ja
inc
mov
sbb
int
in
rol
fwait
cs
mov
inc
lods
push
adc
xor
pop
adc
mov
test
out
lock
pop
jmp
pop
jp
jecxz
lahf
hlt
adc
pop
dec
xchg
out
add
popa
clc
mov
dec
call
sar
sbb
jmp
rcr
movs
dec
add
add
lea
push
call
loop
add
jne
call
mov
aam
dec
stos
cdq
dec
frstor
xlat
cmp
jle
outs
pop
inc
mov
jmp
mov
adc
and
xlat
dec
in
adc
push
ins
mov
and
push
push
push
sbb
repnz
das
ja
pop
dec
test
test
xchg
add
sar
sbb
ds
mov
add
jecxz
add
pop
mov
div
cmps
mov
mov
and
xchg
sbb
js
or
shl
cmc
jge
add
retf
repz
clc
hlt
je
(bad)
icebp
imul
mov
loopne
jecxz
pusha
push
mov
sbb
stos
jo
jge
cmp
jmp
(bad)
or
inc
mov
cmc
xchg
push
mov
inc
call
sbb
xor
mov
sub
int
cmp
mov
icebp
or
cmc
je
fisubr
les
in
xchg
sub
imul
xor
call
push
mov
pause
push
or
enter
out
retf
pop
imul
(bad)
sub
in
mov
(bad)
cmc
dec
inc
enter
mov
and
dec
add
xchg
in
mov
es
mov
stc
xchg
jb
mov
or
arpl
mov
shl
adc
xor
mov
cmp
cmps
cmp
xchg
dec
ret
arpl
or
mov
cmps
mov
jl
or
sbb
cmc
and
ja
shl
xor
cs
adc
sar
or
and
sahf
adc
push
lahf
adc
xlat
leave
jne
inc
out
jge
jbe
and
shr
jno
push
add
pop
stos
add
test
int
sti
(bad)
cmp
loop
jnp
enter
gs
mov
pop
inc
fdiv
add
test
inc
outs
fsub
cdq
push
mov
inc
leave
pop
ficom
movs
scas
pusha
ds
rcr
dec
ins
add
dec
ja
pushf
stos
dec
popa
bnd
js
xor
ror
adc
js
out
out
mov
xchg
push
dec
dec
add
icebp
sti
or
clc
test
cld
popf
out
jl
daa
jo
adc
push
test
pop
in
jns
push
push
(bad)
std
jmp
inc
out
pop
xor
jno
retf
pop
push
mov
popa
test
mov
mov
mov
sub
jb
mov
mov
jno
stc
xchg
clc
loop
sbb
jno
add
pop
lea
xchg
mov
jnp
cmp
scas
xor
jmp
aam
xchg
adc
push
es
sbb
sbb
dec
cdq
sbb
and
inc
xor
jb
xchg
jb
lods
nop
out
outs
pop
mov
push
mov
jl
push
in
xchg
or
inc
sar
inc
inc
mov
outs
mov
pop
ror
xor
js
ins
sub
ss
push
adc
xchg
sub
movs
or
cli
call
in
adc
pusha
mov
sub
retf
data16
js
pop
xchg
xchg
cmovnp
test
hlt
in
add
popf
hlt
sbb
dec
out
or
aam
test
call
loopne
cdq
pushf
xlat
xor
test
not
and
xchg
imul
jno
add
jns
dec
xlat
dec
jg
mov
jno
inc
gs
fld
test
aam
xchg
ficomp
mov
mov
jb
fs
mov
je
dec
test
in
fild
add
mov
dec
outs
push
jno
mov
(bad)
lods
jge
xchg
shr
and
xchg
mov
pusha
and
and
cli
xchg
adc
fmul
mov
mov
sub
cmp
nop
test
mov
ins
xchg
aad
rol
mov
ret
clc
rcl
push
es
mov
aas
fisttp
das
outs
je
jg
fiadd
adc
sbb
push
int
pushf
mov
jo
sub
sti
jecxz
mov
fimul
cmp
popf
rcr
mov
test
xor
xchg
retf
push
xchg
scas
ins
dec
les
repz
clc
je
push
fisubr
adc
mov
fadd
inc
lods
popa
mov
sub
pop
mov
sbb
mov
pop
push
and
imul
cmc
xor
mov
push
call
dec
adc
(bad)
aaa
mov
lea
inc
jge
and
mov
lea
lods
inc
in
jnp
xor
sub
pop
mov
adc
in
retf
add
fcmovu
or
inc
push
pop
add
sub
pusha
in
repnz
dec
mov
xlat
sbb
xchg
jmp
and
lods
xor
push
xchg
cdq
mov
in
fdivr
jle
loope
adc
xchg
out
int3
mov
mov
cmps
jae
ins
add
inc
xor
adc
ins
inc
jmp
fcmovne
in
adc
xor
jmp
xlat
mov
mov
add
inc
pop
add
fwait
les
cmp
sub
popf
inc
adc
mov
mov
inc
mov
xlat
mov
test
ja
div
shr
and
xchg
sbb
lods
cmp
mov
push
iret
lea
pop
hlt
mov
loop
daa
sub
inc
and
mov
out
scas
(bad)
test
push
inc
jp
fwait
jae
sub
cmp
jg
arpl
xchg
rcr
cli
mov
stos
mov
bnd
mov
jnp
das
(bad)
out
cmp
retf
stos
popf
clc
fcmovnbe
push
into
lahf
cs
repz
cmps
cmp
out
arpl
cmp
xchg
inc
jno
das
add
xor
mov
rol
popf
push
dec
push
and
sti
sbb
ret
xor
adc
stos
mov
jl
mov
(bad)
(bad)
pop
cmp
jbe
out
or
aad
arpl
in
pop
xor
bound
mov
cmps
mov
mov
xchg
sar
sahf
cli
sub
dec
ret
pusha
mov
mov
sub
mov
add
mov
push
movs
mov
dec
pop
adc
inc
xor
cli
mov
xchg
scas
push
push
cmp
fisubr
push
call
adc
jnp
dec
mov
retf
xchg
sti
call
xchg
jo
je
xchg
add
pop
iret
inc
cli
dec
add
or
cmps
and
bound
pop
pop
jns
push
(bad)
std
setl
add
mov
and
jl
push
fmul
loop
sbb
lea
data16
ds
or
fnstcw
movs
les
sbb
mov
dec
and
jle
inc
loop
dec
mov
mov
mov
jno
leave
out
jns
mov
add
mov
inc
in
pop
sub
mov
inc
adc
sbb
xchg
push
add
or
push
sub
dec
aaa
fild
inc
scas
dec
jmp
test
lds
lea
aas
stc
inc
inc
enter
pop
iret
inc
enter
lods
sub
scas
xchg
fisttp
gs
retf
pop
out
sub
idiv
(bad)
clc
std
mov
loope
outs
pop
bound
dec
add
or
sti
dec
sbb
lock
mov
loopne
out
out
(bad)
pop
pop
pop
lock
push
xlat
mov
aam
mov
lea
mov
add
sar
sbb
sar
mov
outs
pop
mov
imul
ja
shl
jmp
mov
or
daa
dec
push
pop
lods
mov
leave
xor
in
pop
outs
mov
push
sub
inc
mov
dec
inc
mov
jmp
or
popf
jne
loop
scas
mov
xor
stos
lock
cmc
sbb
test
fist
cld
mov
and
mov
jns
cmp
adc
icebp
dec
or
rol
fcmovbe
mov
push
push
sbb
enter
xor
gs
add
clc
cwde
mov
add
jne
inc
cmps
ret
inc
ds
xor
push
(bad)
or
call
shr
cmp
pop
sbb
mov
rcr
mov
and
pop
mov
sbb
lods
mov
pop
add
cdq
in
xchg
lock
or
mov
outs
outs
xchg
sub
cld
jnp
call
pop
pop
repnz
call
out
push
add
lds
inc
test
mov
fimul
sub
repz
pop
cmp
mov
ins
xchg
shr
and
xchg
xchg
retf
push
jp
leave
pop
fwait
inc
test
leave
ins
out
push
repnz
xchg
(bad)
xchg
(bad)
jbe
in
call
stos
add
mov
push
xchg
jbe
xor
jmp
sar
repnz
jg
jge
mov
xor
sti
in
sbb
repz
fisttp
pop
xchg
pop
icebp
shr
cmp
addr16
push
xor
mov
loopne
jecxz
sbb
pop
xchg
in
sub
aaa
je
cmp
loop
rcr
loope
lods
push
fisubr
ret
or
stc
mov
xchg
ja
(bad)
jle
adc
rcl
fcom
mov
mov
or
lods
mov
xchg
addr16
adc
xor
jmp
dec
jg
push
add
or
(bad)
int
lods
outs
outs
in
dec
push
ret
adc
dec
pop
sub
mov
aas
ins
(bad)
mul
call
mov
mov
jmp
int3
cdq
hlt
xor
repz
bsr
or
sub
mov
mov
cwde
add
and
push
ss
test
push
(bad)
cmp
mov
leave
pop
lods
sahf
cld
or
push
mov
popa
cmc
xchg
daa
mov
pusha
cmp
dec
cmps
pusha
(bad)
aad
push
es
mov
aad
push
inc
test
or
clc
sbb
arpl
fbld
inc
mov
in
imul
mov
pop
xchg
push
stc
cli
aam
fwait
sub
add
and
ret
push
add
fistp
test
cdq
sub
fs
xchg
outs
hlt
mov
(bad)
out
cmp
in
repnz
xor
lock
dec
aaa
mov
enter
sub
repz
sbb
push
cld
int
add
call
int
jmp
sbb
jmp
lock
dec
cmp
and
fistp
lea
cdq
jbe
or
jnp
mov
pop
push
scas
ret
repz
push
sub
mov
loope
jge
into
xlat
outs
ret
add
or
jmp
in
imul
clc
mov
gs
add
repnz
push
(bad)
mov
xchg
loop
retf
popf
out
xchg
jmp
add
rol
fild
xchg
cmp
inc
xchg
(bad)
cs
mov
test
or
mov
sbb
adc
sbb
mov
dec
mov
jecxz
add
test
pusha
xor
in
mov
(bad)
aad
mov
dec
mov
sar
sub
adc
add
aam
icebp
imul
mov
lea
mov
sbb
pop
int
mov
sbb
jl
imul
loop
call
cdq
sti
adc
cdq
dec
inc
mov
jb
mov
push
push
es
imul
enter
add
les
sub
and
jle
je
shl
and
imul
loop
inc
cld
imul
add
(bad)
cmc
and
push
sub
mov
push
add
or
(bad)
sub
ficom
outs
in
and
mov
jg
bound
jb
in
fcmovb
mov
test
mov
or
es
pop
add
fisttp
pop
xchg
sub
push
mov
pushf
fst
comiss
pop
push
ret
(bad)
jge
add
call
(bad)
cli
idiv
jl
fisubr
push
add
jnp
push
es
mov
cmps
(bad)
sbb
jmp
mov
out
in
int3
(bad)
sbb
mov
retf
aaa
loopne
jns
into
adc
inc
sbb
pop
(bad)
jecxz
mov
sub
adc
das
rcl
lock
movs
or
sahf
stos
(bad)
fild
mov
jg
mov
retf
std
lds
or
icebp
cmp
xor
xor
jmp
dec
out
dec
ffree
cmp
push
mov
stc
and
fs
push
cli
sbb
adc
xor
or
inc
fcmovnb
adc
rol
into
cmp
ins
gs
jns
out
(bad)
sbb
(bad)
mov
in
pop
sbb
add
nop
add
xor
add
rcl
pusha
and
add
add
outs
cmp
popa
mov
ins
clc
das
jp
mov
fnsave
pop
cmp
mov
jb
repnz
adc
out
push
mov
pop
mov
rcr
push
movs
mov
cld
jb
or
aam
dec
adc
push
neg
mov
das
loop
xchg
in
nop
scas
inc
movs
jmp
retf
add
lahf
pushf
adc
mov
adc
and
push
push
add
or
xchg
outs
mov
data16
loop
jg
push
pop
or
mov
jns
shl
push
cli
imul
sbb
add
mov
outs
mov
cmp
adc
imul
jnp
xor
lods
test
and
xor
mov
jbe
loop
push
sub
icebp
mov
push
loop
pop
sbb
aas
cdq
add
in
jge
repnz
je
xchg
retf
fild
xchg
jno
dec
add
cmp
mov
not
jecxz
adc
ficomp
idiv
adc
mov
xchg
mov
pop
sub
vpaddusb
int3
or
leave
xor
pushf
retf
push
shr
sbb
xor
lahf
jbe
loope
pop
movs
clc
mov
or
cmc
xchg
loop
daa
sbb
cmps
or
(bad)
retf
popf
clc
xlat
xchg
push
jl
push
test
repnz
cdq
shl
sti
and
inc
mov
into
inc
mov
adc
add
xchg
out
dec
js
mov
dec
lgs
call
outs
ins
loopne
aam
pop
mov
(bad)
fisub
adc
out
pop
xchg
call
shl
fidiv
mov
ret
mov
fxch
retf
or
cwde
cld
mov
das
inc
sbb
adc
add
pop
popa
shl
movs
imul
stos
(bad)
jns
mov
(bad)
repz
loope
std
sub
mov
(bad)
rol
xchg
(bad)
loop
sub
scas
xor
pushf
scas
and
add
push
jge
pop
mov
mov
fucomi
out
or
and
xchg
sub
test
cmc
and
stc
sbb
test
inc
add
push
in
loope
retf
aam
fisubr
repnz
gs
gs
xor
popf
cmp
cdq
aad
mov
pop
fwait
js
xor
imul
adc
out
push
mov
sub
jno
adc
xchg
outs
ret
inc
or
mov
mov
in
nop
iret
push
inc
(bad)
mov
or
retf
dec
inc
sbb
fs
mov
jg
stc
out
sub
sbb
xor
push
jecxz
xchg
mov
pop
call
mov
clc
fild
jns
lock
fistp
sub
jecxz
and
dec
add
emms
push
loopne
in
pop
js
imul
add
lods
(bad)
sbb
sar
pop
mov
mov
cmps
or
cmps
push
ret
leave
mov
push
lods
ret
pop
(bad)
aaa
loope
shr
out
pop
mov
into
je
fwait
xchg
sub
sbb
rcr
ins
xchg
ja
mov
push
arpl
(bad)
xor
bound
or
xor
ret
mov
bound
ins
pusha
add
imul
pusha
and
enter
js
dec
mov
enter
pop
mov
xchg
jb
add
mov
imul
push
fnstenv
mov
stc
pop
lock
pusha
dec
or
push
enter
xchg
and
pop
pop
jno
repz
fldcw
call
xchg
adc
adc
scas
and
stc
(bad)
sahf
dec
xchg
adc
mov
pop
or
cmp
mov
and
xor
ret
adc
sbb
sbb
cld
push
jmp
je
sub
mov
sub
enter
fwait
jmp
jb
retf
test
int
or
pop
dec
push
mov
mov
sub
xchg
or
push
push
shl
neg
inc
xchg
ret
in
aas
pop
lds
push
les
cs
inc
and
or
sub
aas
push
push
scas
inc
xchg
mov
push
add
sub
push
sub
ret
sub
loop
sub
xchg
outs
pop
mov
pop
and
sub
retf
xchg
retf
push
mov
xor
jg
icebp
xor
jo
add
pushf
out
sub
stos
pop
sub
aad
dec
loopne
add
adc
jecxz
pop
icebp
in
outs
jl
mov
pop
hlt
push
loop
sbb
fisub
inc
dec
mov
aad
mov
mov
cs
lods
shr
fs
mov
inc
jns
out
stc
jmp
mov
push
cs
jg
popf
out
ret
mov
clc
jmp
scas
push
inc
jecxz
xchg
daa
jbe
pop
bound
adc
rol
sbb
mov
mov
sub
fwait
mov
sbb
pop
jmp
pop
movs
pop
inc
xor
sbb
adc
push
aas
adc
ss
jnp
and
xchg
mov
fiadd
mov
lods
sbb
cli
lods
aad
sbb
jge
push
mov
xchg
ins
mov
dec
pop
mov
add
in
cmp
xor
mov
inc
arpl
aaa
sti
gs
sbb
xchg
push
sbb
mov
pop
int
mov
sub
mov
jbe
xor
sub
xchg
es
or
cmc
mov
xchg
pusha
and
jmp
xchg
sub
add
dec
mov
adc
push
mov
cmps
jge
mov
mov
or
add
daa
loopne
xlat
or
lahf
add
push
add
adc
inc
dec
scas
add
add
lahf
inc
jmp
or
(bad)
push
add
enter
and
cmps
lods
and
mov
pop
mov
inc
fisub
pop
stos
test
mov
push
sub
test
mov
lds
push
mov
mov
ja
jecxz
xor
icebp
cmps
and
pop
pop
fmul
fcmovu
sub
shl
dec
add
push
sbb
push
mov
lahf
add
iret
xchg
scas
(bad)
(bad)
jne
push
(bad)
ds
(bad)
(bad)
pop
pop
xor
push
or
pop
into
jne
fwait
mov
icebp
int
pop
dec
add
dec
dec
cmp
sub
mov
aam
ror
sbb
mov
jne
push
add
dec
adc
int3
in
fcmove
inc
mov
cmp
lods
pop
int3
add
nop
or
test
mov
mov
pop
shr
arpl
xchg
cmp
add
daa
add
int3
dec
and
jne
aam
adc
out
fsub
push
mov
cmp
or
call
sbb
xor
movs
jne
xchg
pop
int3
xchg
out
sub
bound
lods
stc
pop
sbb
mov
push
adc
cld
in
and
add
jmp
sti
adc
out
sub
pop
and
cmp
mov
scas
or
push
jle
xor
adc
adc
adc
(bad)
fistp
dec
fcomp
shr
pop
adc
(bad)
sub
xchg
stos
test
cmp
dec
jne
mov
popa
jg
sbb
cmp
lds
nop
aas
jo
int3
push
ins
es
mov
push
mov
dec
icebp
rcr
inc
cld
out
sti
sti
lock
femms
hlt
or
jno
cmp
adc
lahf
push
loopne
frstor
fsubrp
int3
loopne
dec
fild
ret
push
retf
pop
popa
push
scas
add
and
out
and
sbb
cmps
loope
mov
loope
sub
pop
jmp
repz
cmc
test
cmp
jno
ret
pop
frstor
add
out
dec
add
jb
sub
pushf
or
cmp
mov
inc
sbb
inc
adc
pop
dec
mov
push
push
xchg
inc
adc
or
mov
and
fiadd
shl
or
xchg
out
or
xchg
push
loop
pop
pusha
xchg
in
lods
xor
out
inc
lock
or
popa
mov
inc
test
fwait
xchg
xor
icebp
call
(bad)
jmp
bnd
add
scas
mov
clc
or
inc
xchg
mov
add
fisttp
or
pop
cli
sub
and
inc
sti
pop
and
bnd
pop
mov
loop
or
inc
pop
pop
dec
test
out
lds
or
aaa
sub
mov
mov
std
pop
in
xchg
mov
cli
inc
ds
or
test
xchg
jmp
cmp
cmp
xchg
cmp
mov
sbb
jno
sub
pop
jp
icebp
fdivp
pop
cld
repz
(bad)
jnp
icebp
iret
test
pop
fimul
mov
add
xlat
xchg
mov
sbb
lock
std
push
mov
add
xchg
scas
jecxz
add
add
test
dec
in
shr
jecxz
xchg
lods
clc
repz
clc
retf
xchg
pop
clc
rcl
popf
pop
add
mov
mov
loop
jbe
out
add
hlt
shl
add
call
mov
ins
mov
jg
mov
jbe
ret
ins
les
add
and
add
adc
push
push
add
test
ss
sub
stos
push
fwait
lock
nop
jmp
and
movs
out
fisttp
sbb
add
push
dec
(bad)
jp
jmp
adc
enter
push
imul
mov
inc
add
mov
mov
aaa
aaa
push
push
push
xor
sub
and
dec
cld
ds
fcmovbe
sbb
fiadd
sub
je
jl
mov
loop
adc
add
pop
adc
xlat
pop
stos
add
add
or
sahf
ss
cmc
retf
add
inc
cs
or
scas
aas
mov
mov
mov
rcr
idiv
sbb
xlat
sahf
test
or
mov
cld
jecxz
mov
test
cmp
fimul
mov
dec
clc
je
xor
or
in
call
mov
iret
xchg
inc
mov
fld
xor
and
dec
repnz
js
or
(bad)
mov
cmp
test
ja
or
movs
mov
inc
ja
xor
cmp
mov
ins
and
adc
add
rcl
push
out
pop
cld
sub
push
jecxz
xlat
daa
cmp
mov
and
cmc
xchg
hlt
push
in
adc
fwait
std
xchg
mov
or
sub
stc
fdivr
retf
out
add
cmp
inc
and
cmp
lea
sar
mov
fwait
and
sub
outs
inc
push
ins
xor
imul
and
lea
repnz
aad
jg
push
sbb
imul
mov
aam
dec
(bad)
retf
in
std
hlt
pop
xchg
jg
repnz
pop
rcl
cmp
cli
adc
test
shr
(bad)
dec
sub
push
mov
in
inc
dec
clc
scas
mov
sub
push
mov
cmp
fyl2xp1
hlt
or
pop
movs
std
dec
mov
popf
adc
shl
xchg
mov
push
sub
cmps
cwde
sbb
mov
jge
sar
ds
xor
loope
push
or
aad
data16
lods
sbb
mov
sub
xor
out
add
fistp
xchg
inc
pop
icebp
fsin
cmp
push
jno
sub
out
and
xor
adc
jecxz
sbb
popf
sbb
inc
xor
cmps
repnz
xchg
ja
mov
cmp
mov
sbb
jle
sbb
jl
dec
out
pop
icebp
xchg
dec
mov
into
sub
popa
gs
jne
stc
cmp
aad
jae
bound
nop
ins
xor
cs
mov
mov
pop
push
mov
pop
mov
cdq
jo
movs
(bad)
fs
and
adc
xchg
cmp
lds
inc
inc
mov
xchg
add
pop
jle
fbstp
xor
in
adc
add
cmps
ret
or
int
add
mov
cdq
mov
movs
jno
stc
sbb
test
in
mov
fs
inc
xor
rol
pop
inc
cld
push
outs
adc
shl
mov
imul
in
dec
mov
loop
push
(bad)
mov
dec
jle
xlat
xchg
mov
or
icebp
adc
sub
sbb
lds
dec
cmc
leave
and
dec
jg
sub
shl
xchg
test
and
mov
add
mov
mov
xor
add
dec
add
outs
out
pushf
rcr
mov
pop
(bad)
pop
inc
fcomi
stc
cmp
fistp
push
in
pop
stos
fadd
mov
sahf
enter
pusha
ss
inc
test
jae
and
sbb
xlat
(bad)
loope
div
mov
cs
(bad)
(bad)
mov
std
adc
jp
dec
lahf
add
xor
loop
sbb
outs
mov
add
xor
test
mov
lahf
and
push
mov
dec
and
adc
test
aad
hlt
daa
jle
jns
lea
push
add
push
sbb
outs
sbb
dec
jne
loope
dec
xchg
inc
xchg
add
lds
cmp
gs
sub
vpmacssww
inc
dec
dec
ss
add
mov
test
fwait
sub
retf
mov
mov
mov
out
aas
pop
add
stc
ja
jge
mov
mov
sbb
inc
xchg
call
xchg
add
mov
inc
jle
xor
and
jne
dec
adc
test
mov
movs
push
ds
cmp
add
and
lea
cmp
sub
outs
adc
cmp
jle
rol
(bad)
mov
dec
inc
mov
popa
dec
or
cmp
push
xor
arpl
into
xor
cmp
cmc
cmc
ret
clc
jecxz
(bad)
repnz
push
jl
mov
pop
in
stos
sar
add
out
mov
jecxz
cli
add
adc
mov
jecxz
ficomp
pop
sub
loope
inc
adc
adc
retf
cmp
clc
jo
push
jle
scas
push
jg
fiadd
mov
cmp
jl
pop
(bad)
js
adc
stos
lds
lods
dec
jns
cmp
gs
sbb
pop
lgs
or
aas
pop
mov
xor
sub
adc
add
and
cmps
mov
leave
adc
daa
add
mov
mov
mov
fs
nop
mov
dec
push
in
ins
or
arpl
pop
lahf
add
nop
mov
sbb
jmp
pop
sbb
sti
adc
pop
xor
sub
mov
sub
mov
lea
test
bound
mov
adc
call
and
mov
imul
dec
lea
mov
(bad)
out
inc
imul
out
jmp
sub
(bad)
xchg
retf
mov
and
loop
adc
scas
mov
push
mov
stos
into
mov
jg
push
scas
clc
xchg
in
mov
mov
fnstsw
push
push
outs
or
adc
or
add
not
sub
or
pop
mov
or
test
inc
pop
call
lock
nop
pop
lods
mov
loopne
int
and
lock
cmps
dec
pushf
fstp
xlat
imul
loopne
(bad)
cdq
add
lds
dec
lahf
add
test
pop
out
stos
ret
mov
(bad)
cmp
fist
jno
cmp
xchg
or
loopne
leave
push
pop
data16
sub
into
in
loope
ss
push
mov
lock
pushfw
sub
test
mov
stos
jnp
add
in
clc
pop
dec
xor
push
or
rcr
jns
fdivr
pushw
inc
lea
lock
jg
jnp
xchg
xchg
ins
cmp
icebp
cli
arpl
das
sbb
mov
jo
and
add
mov
test
test
xor
cmps
jmp
stc
call
jg
add
pop
pop
sub
out
out
and
ja
jp
xchg
mov
inc
repz
mov
add
jg
mov
lahf
(bad)
fadd
sub
test
in
stc
cmps
adc
adc
(bad)
mov
cld
jnp
dec
add
xchg
cmp
push
adc
inc
outs
xor
repz
add
push
and
add
bound
inc
enter
sub
retf
add
cmp
loop
adc
fisubr
cmp
in
or
fdivr
test
repz
nop
mov
jmp
into
pop
pop
ficomp
jg
in
jmp
add
add
repz
lods
cmps
push
pop
out
sub
pop
sbb
pop
out
xor
loop
gs
sub
pop
sub
adc
mov
cdq
inc
cmp
sar
fcomp
push
lock
ja
mov
pop
fadd
outs
dec
jne
jb
icebp
push
arpl
dec
fs
pusha
pop
movs
sub
jbe
and
mov
pop
int
or
and
jl
adc
sub
xor
jns
lahf
stc
or
je
and
je
xchg
ss
es
jbe
dec
call
(bad)
in
cmp
inc
(bad)
movs
(bad)
in
jnp
inc
fistp
push
inc
adc
aas
mov
push
xor
cmps
jg
addr16
mov
cli
enter
cmp
xor
aaa
pushf
shl
add
out
or
mov
pusha
in
fxch
(bad)
fidiv
movs
lods
push
pop
mov
adc
std
std
rcl
cwde
ja
cld
mov
jnp
pop
and
dec
sti
clc
outs
inc
dec
fdivr
std
xchg
and
jle
jne
xlat
adc
loop
mov
pop
(bad)
jge
fild
and
lahf
sub
xchg
aas
sbb
push
out
sub
push
fist
adc
sbb
inc
push
out
pop
enter
repnz
inc
push
and
sub
ret
lock
nop
pop
lods
fimul
pusha
call
cld
cdq
add
cmps
mov
pop
shl
sub
out
sbb
cmc
jo
cld
retf
pop
aam
sub
lock
clc
stc
fiadd
cld
scas
mov
xor
adc
mov
adc
lock
es
and
pop
shl
imul
dec
lock
out
sub
xchg
push
fsubrp
sub
jnp
add
fcmovu
test
jne
das
out
jecxz
cmp
sbb
mov
cmp
xor
shr
cmp
iret
jp
jb
xor
dec
dec
pusha
(bad)
fcom
mov
jp
jno
in
or
pop
shl
cmp
aam
in
and
fstp
mov
and
mov
pop
mov
sbb
rol
xchg
repnz
cs
mov
xor
test
xor
cmp
fisub
sub
out
adc
mov
fst
xchg
hlt
cmc
daa
jle
jmp
xchg
and
mov
sub
xlat
pop
dec
repnz
or
stc
adc
and
adc
dec
add
test
dec
int3
inc
enter
loop
mov
jecxz
add
or
inc
and
imul
xor
jnp
xchg
jno
sub
(bad)
push
xchg
ja
add
add
ins
xchg
add
or
xor
cmp
adc
pop
das
or
in
mov
lahf
adc
xchg
jmp
jmp
popf
fwait
pop
icebp
push
push
jl
(bad)
sub
aad
sbb
ficomp
dec
sysexit
jecxz
addr16
fimul
mov
shr
mov
cmp
std
add
inc
call
ins
pop
cmp
cmp
xor
inc
mov
push
mov
adc
dec
xchg
(bad)
mov
ret
and
mov
mov
pop
(bad)
cld
xor
mov
jmp
enter
out
or
push
jno
dec
ja
popf
or
jno
and
pusha
popf
in
clc
call
pop
sbb
jle
aad
add
mov
nop
push
idiv
sahf
lock
jge
lock
pop
inc
inc
pop
or
or
(bad)
aam
sub
lahf
sbb
xchg
adc
add
xor
mov
add
ss
add
scas
pusha
stc
mov
adc
xchg
add
push
sbb
pop
add
in
push
adc
scas
pop
inc
jle
fimul
repnz
dec
add
stos
adc
push
xor
aam
jecxz
arpl
outs
das
les
(bad)
cmc
in
xchg
dec
add
xor
cmp
cmp
adc
out
test
sti
sbb
adc
xor
loop
jb
mov
fld
xor
repnz
jo
cmp
loop
jecxz
cmp
mov
mov
not
loope
pop
xchg
js
imul
call
sbb
sbb
dec
jbe
test
outs
mov
iret
inc
sub
or
push
cwde
jno
mov
out
jmp
dec
pusha
mov
mov
cmp
xor
sub
xor
pop
je
xchg
hlt
in
push
ja
sahf
or
adc
jle
add
outs
or
jge
lods
aam
into
retf
stc
jae
clc
cmp
lds
fstp
fsub
(bad)
dec
add
cwde
add
sub
test
mov
mov
(bad)
mov
cs
adc
add
je
mov
cmc
dec
or
push
in
add
cmp
add
cs
add
or
mov
push
inc
add
add
sbb
stc
sbb
mov
push
add
mov
jmp
(bad)
ins
xchg
or
test
mov
jae
in
js
aas
add
sub
fist
ja
mov
outs
pop
add
stos
iret
les
sbb
sub
adc
mov
xor
sbb
pop
lds
dec
addr16
lahf
xchg
or
icebp
xchg
adc
stc
add
ja
push
repnz
cld
icebp
pop
and
test
ret
mov
aad
pop
xchg
lods
cdq
lods
pop
arpl
xor
nop
cdq
xor
pop
cmp
cs
test
cs
xor
add
es
clc
mov
inc
lahf
or
push
ins
(bad)
in
imul
mov
dec
test
fisttp
nop
add
mov
jmp
enter
push
cs
mov
inc
fs
fs
in
rol
retf
lahf
adc
push
cs
ins
mov
cs
clc
repnz
in
pop
and
pop
mov
xor
fild
jge
cmps
movs
mov
arpl
fs
mov
pop
pop
rcl
sahf
scas
pop
mov
cmps
add
mov
sub
es
add
inc
in
sub
inc
ins
inc
push
inc
xchg
mov
imul
inc
add
sub
xor
rcr
(bad)
adc
jp
adc
sub
mov
sti
cmp
(bad)
std
scas
or
jle
add
lods
(bad)
sti
sbb
adc
ss
int
or
sub
or
add
addr16
jl
adc
pushw
loopne
mov
repnz
add
add
in
add
add
sbb
aas
iret
outs
(bad)
(bad)
ins
pop
scas
in
gs
mov
scas
in
sar
mov
shl
out
data16
hlt
ins
mov
scas
jo
ins
loope
call
test
push
dec
push
ret
cwde
mov
sub
add
adc
scas
push
pop
or
out
popa
xor
inc
arpl
ins
mov
ins
rcl
dec
sar
cli
inc
repnz
add
push
cwde
xor
out
enter
mov
call
stos
mov
jne
mov
push
and
inc
adc
xchg
add
ss
test
repz
jns
xchg
jae
adc
cdq
enter
scas
(bad)
xor
ja
inc
std
xor
daa
and
shr
mov
cdq
shr
adc
(bad)
or
neg
movs
lods
cld
sahf
addr16
mov
mov
mov
xchg
xor
fisub
adc
cld
sub
jle
cmc
xchg
inc
cmc
imul
test
xchg
sahf
sub
xor
cmp
rol
xchg
add
mov
leave
shl
aaa
xchg
inc
push
(bad)
push
(bad)
enter
sub
mov
ja
mov
fisubr
inc
add
mov
or
pop
xor
retf
arpl
push
xchg
add
cmp
cdq
iret
mov
push
cld
(bad)
daa
sbb
pop
fidivr
mov
xchg
(bad)
jl
xor
fstp
pminub
fisubr
rcr
ret
cmc
mov
fsub
jno
leave
pop
daa
shr
sbb
add
xor
add
clc
mov
sub
aas
mov
dec
jge
mov
iret
sti
stos
icebp
jbe
and
daa
add
push
es
popa
jg
bt
mov
jmp
push
mov
sub
jecxz
or
inc
imul
loope
mov
sub
inc
lea
rcr
mov
popa
out
pop
in
or
(bad)
dec
fdiv
aas
pop
and
fdivr
cmp
movs
xor
mov
xlat
mov
mov
retf
pop
xchg
repz
(bad)
cmp
and
jle
xchg
in
out
into
pushw
adc
sbb
xor
jno
add
hlt
pop
add
dec
mov
imul
jno
add
cmp
jne
sub
ror
les
clc
clc
dec
or
inc
test
xchg
pop
jmp
aaa
lea
inc
cs
inc
loopne
fcmovnbe
mul
popa
aam
inc
loop
jp
lods
mov
les
sbb
cmp
xor
cmp
lahf
retf
test
movs
xor
sub
adc
dec
lock
add
lock
or
and
add
mov
and
cmp
(bad)
rcl
sti
sbb
outs
xchg
sub
dec
cmp
mov
adc
mov
enter
dec
clc
out
push
cld
out
cmp
test
movs
std
clc
cld
hlt
cs
sbb
fld
cmp
mov
xor
or
push
shr
dec
lock
aas
es
cmp
cmp
(bad)
movs
mov
shl
adc
mov
or
sub
pop
xchg
mov
sahf
mov
arpl
pcmpeqd
(bad)
mov
mov
ja
adc
jp
jno
inc
mov
sbb
call
mov
cmp
cdq
and
jle
dec
popf
push
mov
ds
or
mov
or
add
add
jle
push
fisubr
out
adc
xor
push
stos
sub
dec
mulps
dec
nop
mov
out
add
mov
push
loope
xor
(bad)
jae
xchg
and
arpl
int
(bad)
mov
outs
xchg
out
dec
lahf
mov
fmulp
enter
and
retf
popa
add
fadd
inc
mov
mov
push
xchg
daa
retf
push
in
pop
adc
cld
pop
add
das
xor
nop
aas
push
inc
pop
lock
jmp
mov
xchg
add
pop
clc
mov
in
or
(bad)
mov
movs
inc
btc
mov
pop
lods
dec
in
adc
sahf
xchg
int
sbb
sub
sti
jae
dec
cld
push
xor
jecxz
scas
push
shl
cmp
outs
xor
shl
mov
fisub
clc
inc
pop
and
ins
(bad)
pop
es
pushf
jmp
les
cmp
lock
ror
xchg
push
test
pusha
sub
cmp
inc
mov
xor
and
(bad)
sub
leave
mov
mov
ins
(bad)
aam
sub
popf
mov
cdq
test
mov
dec
mov
push
cmp
push
sbb
dec
or
mov
and
scas
loopne
call
dec
cli
or
dec
(bad)
ss
mov
inc
ins
pop
out
lods
ror
repnz
lea
aas
pop
aam
fldenv
fmul
loopne
mov
adc
out
(bad)
iret
jbe
loop
iret
inc
mov
or
xor
pop
outs
cmp
addr16
into
and
xchg
std
add
and
sub
lock
adc
add
xchg
inc
xchg
mov
and
add
mov
mov
mul
add
add
add
test
and
movs
push
inc
xchg
cmp
and
fisttp
pop
sbb
test
rol
popa
pop
arpl
cs
sub
daa
addr16
mov
pavgb
scas
in
gs
(bad)
pop
addr16
add
jg
or
icebp
popa
mov
add
xor
movs
or
inc
(bad)
cld
jno
fld
inc
mov
sub
fisubr
xor
or
jp
je
mov
sahf
sub
sbb
hlt
rol
sbb
loop
leave
(bad)
call
outs
jae
pop
and
push
cmp
inc
in
adc
or
jne
mov
dec
mov
(bad)
bound
add
or
out
shl
ret
in
daa
inc
je
mov
mov
jae
or
sbb
pop
fsub
mov
push
mov
data16
mov
push
sbb
out
adc
mov
call
or
data16
hlt
ss
iret
(bad)
call
cmp
push
push
push
mov
imul
test
clc
cli
inc
pop
add
xchg
add
inc
loop
test
mov
in
push
add
mov
add
add
lahf
cwde
or
xchg
fild
mov
lahf
pop
cmps
pop
pop
and
push
and
mov
dec
sbb
sub
stos
stos
mov
lods
dec
loop
add
stos
adc
inc
adc
rcr
or
mov
jg
arpl
(bad)
repnz
rcl
jecxz
pop
jnp
icebp
shl
mov
sbb
adc
ja
mov
or
add
xor
cmp
push
xchg
mov
jo
cmp
(bad)
inc
jecxz
out
pop
imul
lea
mov
or
adc
mov
mov
lahf
ds
xchg
or
pop
loopne
fdiv
sahf
loop
and
jmp
in
int3
inc
xchg
mov
sub
dec
cmps
and
lea
sub
inc
mov
or
jp
push
sahf
int
adc
int3
pop
xchg
aas
and
dec
(bad)
mov
add
out
mov
repnz
add
mov
pop
out
jbe
inc
xchg
je
hlt
das
sar
sub
and
jb
ret
push
pop
mov
fldenv
xor
xor
pop
mov
ja
cld
ins
add
mov
or
(bad)
cmp
add
cli
test
or
push
add
pop
sub
lahf
ss
add
add
test
adc
enter
dec
add
dec
adc
enter
sub
dec
hlt
ja
xchg
mov
or
(bad)
lods
leave
pop
div
cmps
inc
hlt
leave
test
dec
in
adc
hlt
(bad)
repnz
sbb
dec
ret
imul
in
outs
es
js
lock
outs
sbb
loopne
daa
cmp
movs
movs
loopne
imul
cmp
sbb
or
adc
jle
mov
jno
and
stos
ss
es
outs
dec
ret
inc
ins
jmp
test
(bad)
repnz
mov
cmp
out
rcl
out
or
mov
fninit
pusha
pushf
daa
cmp
fldenv
fistp
sbb
xor
or
js
(bad)
lahf
sbb
dec
xor
mov
sub
pop
int3
mov
je
out
dec
retf
mov
hlt
xor
fbstp
jbe
je
scas
or
mov
retf
pop
xlat
cmp
in
or
(bad)
push
addr16
fldenv
sbb
pop
mov
scas
xor
cmps
sbb
mov
shl
ss
dec
lds
mov
shl
dec
(bad)
push
or
jmp
sbb
jl
pop
pop
mov
imul
(bad)
mov
sub
(bad)
daa
movs
dec
dec
inc
push
or
in
adc
pop
mov
mov
mov
mul
add
mov
in
outs
inc
outs
dec
adc
das
ja
repnz
cld
xor
xlat
add
shl
cdq
add
inc
dec
call
repnz
nop
imul
mov
daa
and
out
jp
rcl
loop
inc
or
je
mov
adc
mov
test
ins
retf
or
dec
(bad)
call
dec
jbe
jecxz
adc
mov
mov
pushf
fld
out
sti
fs
adc
cmp
js
test
arpl
cs
add
jl
sub
push
test
lods
cmps
push
(bad)
cmp
or
mov
loopne
scas
das
dec
out
loope
mov
xchg
inc
dec
in
fldlg2
rol
out
(bad)
adc
add
mov
adc
das
inc
out
jmp
in
xchg
mov
pusha
sbb
hlt
(bad)
and
push
inc
shl
adc
enter
into
shl
shl
out
jp
pop
lds
iret
sbb
inc
push
dec
cs
xor
add
fwait
or
popf
mov
ret
dec
sahf
ins
fcom
or
lea
mov
jmp
pop
mov
push
add
pop
push
outs
movs
leave
and
aaa
sbb
xor
xor
fdivrp
arpl
mov
adc
xrelease
cmp
pop
dec
xor
in
popf
shl
outs
add
lahf
fwait
test
daa
and
push
inc
lods
xor
mov
jno
add
jl
add
dec
mov
add
mov
adc
adc
fmul
test
and
inc
sub
loopne
xchg
inc
pop
not
jecxz
inc
out
push
xchg
retf
push
add
sub
adc
dec
dec
jae
or
adc
xchg
or
cwde
xchg
paddq
jmp
mov
loope
push
ja
fwait
mov
lock
mov
mov
outs
mov
add
cmc
cmps
add
lods
faddp
in
aad
lea
pop
sbb
repnz
rcl
loope
xchg
adc
mov
pop
mov
pop
popa
xchg
test
pop
cmp
xor
sbb
fadd
xchg
mov
sbb
xchg
in
inc
jmp
xor
std
fwait
pusha
ss
add
cdq
dec
out
rol
stc
sub
int3
and
pop
movs
outs
mov
imul
int
cs
add
sbb
int3
in
sub
les
pop
and
fsub
cmp
ror
mov
pop
or
cwde
add
(bad)
cmps
movs
push
mov
fs
sbb
js
sbb
inc
es
mov
test
ins
(bad)
div
jl
jg
dec
sar
add
nop
cld
leave
add
dec
sbb
shr
push
dec
mov
push
or
mov
sub
pop
cwde
sar
or
loopne
in
push
push
outs
das
pop
cdq
sbb
fisub
dec
loop
in
and
and
cwde
xchg
nop
or
sti
mov
xchg
retf
mov
in
xchg
inc
and
std
dec
mov
dec
jno
inc
cs
or
out
push
out
ror
movs
dec
pusha
imul
push
(bad)
sbb
mov
lea
mov
out
and
stc
neg
jne
adc
aaa
inc
call
int3
lds
sub
adc
bound
or
mov
scas
aam
loopne
(bad)
pop
cld
outs
pop
sbb
call
icebp
dec
dec
or
scas
push
arpl
sbb
xchg
call
cmp
pop
mov
jle
test
pop
mov
test
fsub
rcl
sahf
adc
adc
rcl
jne
cmps
das
lahf
sub
mov
xor
sub
rol
mov
push
int
out
mov
push
(bad)
xor
into
mov
cmc
pop
jnp
jg
dec
add
cli
xlat
into
movs
nop
push
cmp
ds
sub
adc
sub
xchg
mov
sbb
sub
xchg
mov
pop
fwait
sub
inc
and
xlat
add
xor
fisttp
pop
int3
les
leave
dec
mov
xchg
and
imul
fst
ins
loope
inc
push
mov
sbb
ins
mov
adc
mov
repz
or
ds
jecxz
stc
jecxz
test
push
xor
pop
inc
ret
adc
les
push
fnstenv
loop
add
in
mov
test
stos
add
test
in
add
xchg
rcr
retf
out
push
inc
xchg
mov
add
and
inc
pop
cdq
inc
add
jecxz
pop
sbb
(bad)
js
mov
js
pop
jg
ins
pop
adc
data16
mov
in
clc
popa
ja
fsubrp
retf
in
sub
sub
jecxz
into
inc
mov
sbb
loope
(bad)
int
sub
pop
sub
lock
loope
test
cmp
imul
in
mov
sub
add
push
cmp
jae
xchg
xchg
sbb
sub
mov
mov
dec
xor
nop
shl
jb
pop
test
mov
fdiv
cmp
dec
retf
push
fcmove
inc
mov
jl
mov
lds
jbe
adc
cmp
push
or
inc
jae
add
mov
and
aad
add
movs
jmp
mov
loopne
test
jae
sub
mov
mov
int
int
jmp
aad
aam
sbb
push
daa
and
leave
lock
push
sbb
inc
inc
dec
xor
cdq
add
stos
sub
pop
call
ds
pop
or
out
xchg
sbb
rol
not
ja
add
enter
sub
popf
xor
out
jbe
xchg
aas
xchg
or
mov
movs
les
test
sti
mov
pop
in
sub
jne
pop
rol
mov
jg
lds
cli
inc
imul
mov
nop
xchg
leave
add
mov
push
repnz
scas
dec
(bad)
stc
popf
test
in
jl
(bad)
cld
fidiv
jnp
or
lock
fistp
(bad)
not
sar
in
jo
add
jmp
xor
mov
jecxz
push
es
stos
fld
lods
xor
daa
mov
xor
or
rcl
jbe
dec
mov
inc
push
test
pop
xor
jmp
(bad)
xor
lahf
or
adc
lahf
mov
mov
xor
cli
mov
repz
jns
and
scas
sub
xor
bound
push
mov
push
nop
data16
or
xor
sbb
jae
outs
aas
sbb
repz
adc
mov
inc
mov
mov
jae
repz
cmp
mov
fsub
add
mov
push
pop
fldenv
dec
cli
dec
je
inc
mov
iret
loope
mov
dec
daa
rcr
cmp
sbb
cld
adc
pop
mov
scas
add
pop
lahf
xchg
imul
jns
mov
push
dec
in
nop
xchg
xchg
cmp
mov
jg
pop
aad
jmp
(bad)
test
push
xchg
adc
cdq
pusha
sub
mov
sub
fnsave
mov
out
dec
and
sti
mov
xchg
gs
push
nop
retf
push
cmc
std
adc
xchg
(bad)
mov
sub
retf
sub
adc
and
pop
sub
rcr
add
in
inc
cmp
pop
lahf
outs
les
aad
dec
not
add
out
xorps
mov
sub
mov
rcr
mov
ret
leave
xchg
adc
and
ss
mov
test
and
leave
out
call
dec
cmp
inc
stos
mov
and
push
and
bound
mov
retf
and
pusha
add
add
adc
cmp
mov
push
mov
pop
stos
in
int3
ds
dec
mov
add
or
cmp
or
xor
nop
xor
hlt
xor
fs
popa
and
jmp
out
mov
sbb
ss
xchg
mov
xchg
mov
add
dec
jp
add
out
mov
sub
pop
int3
rol
adc
dec
mov
jmp
int3
data16
ins
sbb
(bad)
xchg
mov
xchg
inc
rcr
or
mov
jge
dec
shl
mov
xchg
in
sub
nop
add
imul
ins
jmp
and
lahf
sub
call
mov
(bad)
jmp
pop
call
add
cmp
ret
test
lahf
aaa
xchg
and
fimul
arpl
cmp
cmp
das
into
ss
mov
clc
retf
movs
ss
mov
add
stos
lds
or
ss
sbb
adc
ins
fisttp
cmp
stos
(bad)
jecxz
xchg
push
pop
dec
xlat
loop
jle
fisubr
(bad)
pop
mov
jo
retf
(bad)
jae
leave
adc
mov
mov
xor
mov
inc
fs
push
sub
je
jmp
sar
sbb
mov
loopne
ret
les
push
inc
sbb
pop
clc
xor
fbld
popf
rol
or
sub
and
sti
fsub
repnz
(bad)
or
and
rcl
cmp
test
cmp
add
jb
ficom
enter
pushf
std
inc
inc
pop
int
lods
int
ins
mov
mov
call
add
aam
sub
imul
iret
sbb
push
pop
lahf
fisub
xor
xchg
hlt
shr
(bad)
cmps
jl
xor
icebp
xlat
dec
shl
mov
mov
test
or
add
lock
test
sub
test
dec
in
xlat
ds
xchg
mov
test
in
outs
test
sub
jb
dec
mov
add
dec
add
xchg
mov
ins
sub
ret
mov
popf
lods
ret
sbb
aad
es
mov
(bad)
xlat
daa
imul
pop
cmps
imul
mov
dec
rol
xor
jle
xor
jmp
clc
pop
imul
jo
jnp
fisub
pop
sub
imul
cmps
mov
jno
jo
dec
movs
js
jo
pop
test
and
add
test
pushf
inc
push
add
mov
push
mov
jmp
iret
jle
dec
cld
mov
shr
pop
mov
pop
xor
mov
arpl
jb
jne
in
movs
xchg
in
dec
mov
ret
in
adc
sub
mov
xor
dec
pop
xchg
aas
mov
(bad)
fisub
(bad)
push
enter
leave
pop
dec
dec
jp
pop
or
iret
jb
adc
bound
inc
mov
jg
dec
cmps
aas
add
pop
das
rol
or
jg
jle
mov
mov
sti
mov
cs
inc
in
scas
popa
gs
inc
add
dec
mov
add
xor
mov
push
outs
aas
retf
and
mov
mov
or
inc
add
xor
mov
adc
and
mov
cmp
(bad)
push
loop
jecxz
clc
in
xor
push
pop
in
das
ret
sbb
mov
movs
loop
mov
cmp
out
mov
mov
pop
add
outs
fld
(bad)
pop
ds
cmp
push
daa
xor
jno
and
(bad)
adc
mov
lods
ret
ja
pop
out
ins
dec
mov
(bad)
push
dec
shl
cdq
repz
add
sub
push
mov
mov
xchg
and
enter
daa
jg
pop
jp
jl
and
cmp
inc
mov
sub
xchg
sub
add
mov
adc
add
cmc
jmp
mov
mov
sbb
mov
or
mov
adc
pop
push
push
mov
mov
mov
rcr
lock
pushf
add
xchg
pop
popa
icebp
call
mov
push
pop
xor
cmp
mov
in
cs
dec
and
aas
jmp
cli
push
mov
or
cmovne
push
stc
mul
adc
das
pop
add
ins
nop
fild
mov
mov
xor
sub
push
les
pop
add
inc
loope
imul
xchg
(bad)
imul
lock
shr
jl
movs
or
push
mov
call
xchg
test
cmp
lock
ret
jnp
ds
scas
aas
ficomp
lock
or
push
shl
test
stc
jmp
sbb
pop
jo
leave
pop
pop
mov
add
push
jecxz
cmps
push
fcomp
dec
push
jecxz
mov
and
mov
sub
adc
jmp
retf
sbb
sub
xor
sbb
ds
mov
lahf
ds
xor
ss
mov
pop
cs
xchg
push
xchg
xor
(bad)
jl
push
sbb
addr16
pop
mov
sub
xor
pop
in
test
jle
mov
ins
cmp
stc
mov
xor
cdq
repz
ds
ret
ror
xchg
and
sar
iret
aas
jne
jle
aas
ja
mov
jg
mov
mov
les
test
xchg
mov
or
lods
out
(bad)
outs
mov
ins
sub
jmp
jb
arpl
les
jb
arpl
mov
(bad)
call
mov
mov
pop
in
jb
movs
dec
inc
adc
cwde
int3
test
out
add
pop
mov
pop
leave
out
xchg
adc
dec
hlt
push
mov
xchg
(bad)
(bad)
fisttp
xchg
xor
jnp
cmp
dec
mov
sbb
stc
pop
ins
dec
cld
sub
xchg
adc
enter
popa
pop
push
xchg
lds
push
xchg
rol
pop
icebp
cmp
push
xchg
fucomp
mov
sbb
aad
stos
xor
sub
out
je
outs
mov
aad
add
lods
(bad)
ret
adc
or
mov
xlat
inc
sbb
je
movs
mov
adc
fcomp
push
loope
cld
pop
pushf
dec
or
or
cmp
jmp
in
mov
mov
xor
lods
pop
and
fs
xor
push
and
add
ins
mov
inc
xchg
aad
fs
mov
and
cmp
dec
cld
cmp
nop
out
(bad)
je
sbb
mov
fsub
push
mov
mov
mov
leave
sub
rol
jp
mov
cmp
lods
mov
add
enter
(bad)
dec
cmp
jg
sbb
lds
and
jle
(bad)
pop
iret
cmp
jg
push
adc
es
inc
and
xor
aaa
js
and
sbb
fistp
test
jae
sahf
js
adc
xor
ins
dec
gs
mov
mov
jo
ins
push
cmps
and
pop
sub
jmp
fisubr
call
add
fbstp
fidivr
fcom
sub
push
dec
out
jb
mov
mov
cmc
mov
add
add
fs
into
adc
add
cmp
mov
gs
jmp
outs
inc
jg
cwde
xchg
mov
cmps
mov
sub
(bad)
mov
loope
inc
add
adc
and
push
inc
xchg
cmp
inc
scas
pop
outs
sub
mov
inc
pop
add
add
push
das
add
and
adc
pop
pop
cdq
int
xchg
jg
push
adc
mov
jmp
pop
loop
imul
(bad)
mov
clc
jmp
pusha
dec
push
scas
mov
loope
mov
test
(bad)
call
or
retf
mov
lods
pop
mov
sub
lock
dec
push
cs
mov
xlat
js
inc
fs
lods
test
jns
loop
pop
add
movs
inc
mov
dec
lock
pop
(bad)
jmp
or
fild
or
into
or
rol
stc
or
jmp
and
outs
cmp
mov
rcl
cs
ins
aaa
adc
scas
repz
add
inc
mov
push
out
addr16
xchg
(bad)
sub
pop
xchg
push
and
gs
fst
loope
xor
cs
push
or
test
ins
cmps
cmp
pusha
xor
adc
pop
mov
inc
outs
dec
xor
push
mov
dec
idiv
not
loope
(bad)
loope
push
and
jg
jne
jmp
dec
mov
xchg
iret
fsubp
test
mov
lods
aas
test
xchg
and
imul
dec
mov
ds
xchg
and
dec
sti
mov
adc
mov
add
inc
pop
out
outs
push
push
add
or
test
retf
div
xchg
mov
pop
jg
ins
mov
mov
cld
jp
in
sbb
sub
xchg
ja
ror
and
xor
stos
mov
int
in
outs
mov
stc
in
sbb
inc
and
cmp
iret
mov
clc
repz
es
movs
sbb
ins
iret
les
adc
push
pop
mov
cmc
retf
mov
retf
push
mov
mov
cli
xchg
mov
push
movs
arpl
aas
stos
push
pop
xor
rol
ret
lahf
cmp
gs
xchg
loope
mov
in
pop
jae
(bad)
jmp
inc
hlt
cld
dec
mov
or
cmps
cwde
pusha
cmp
mov
test
and
es
and
mov
fwait
repnz
out
mov
mov
mov
ret
adc
dec
mov
test
adc
leave
pop
into
retf
push
pop
xchg
mov
cmc
pop
sub
mov
mov
int3
nop
jecxz
test
in
bound
mov
outs
mov
or
mov
jmp
xchg
jae
arpl
adc
je
ret
ret
mov
hlt
xor
dec
bound
into
inc
leave
push
outs
xor
ins
inc
cmp
popa
push
pop
mov
lock
jae
sbb
call
xor
mov
add
test
xchg
and
or
mov
dec
enter
adc
pop
les
or
sbb
xchg
ss
mov
lds
scas
pop
call
mov
add
add
inc
cmps
sub
enter
hlt
daa
add
xor
pushf
cmps
test
inc
or
std
push
pop
xor
stos
and
or
mov
stc
es
scas
fimul
mov
icebp
rcl
sbb
(bad)
pop
das
mov
stos
adc
js
inc
push
(bad)
call
mov
fcom
in
test
dec
or
ins
mov
daa
in
dec
js
xor
daa
mov
sub
xchg
lea
pop
ds
(bad)
fldenv
(bad)
push
mov
pop
arpl
jae
arpl
mov
and
cld
ret
pop
std
add
aas
cmp
and
xor
mov
cwde
cmp
das
cwde
or
sbb
adc
jo
mov
mov
mov
faddp
jl
sbb
shl
pop
add
cmp
mov
add
add
adc
cdq
and
or
jne
out
call
stc
mov
sbb
push
xchg
mov
cmp
rcr
adc
push
out
jo
pop
and
xor
push
bound
in
(bad)
sti
jg
aas
js
mov
ds
loopne
pop
mov
cmp
ss
mov
mov
add
repnz
add
sbb
mov
aam
or
std
dec
or
jmp
les
and
repz
add
lds
scas
lahf
mov
add
mov
xchg
cmp
(bad)
adc
inc
dec
push
sub
xchg
cmp
xor
aam
cmps
mov
mov
jmp
test
cmps
adc
inc
sub
and
movs
sub
cmps
retf
ret
mov
fiadd
fwait
in
mov
and
cmp
pop
mov
loope
in
test
or
dec
mov
rcl
sbb
loop
(bad)
bound
rcl
xchg
pop
jmp
cmp
xor
sbb
and
das
cwde
mov
jnp
xor
iret
gs
xchg
scas
aas
or
ja
loop
dec
inc
xchg
sbb
cmp
mov
jge
mov
adc
int3
push
mov
push
adc
movs
jns
test
sub
int3
push
adc
cwde
and
inc
std
dec
cld
xchg
hlt
leave
pop
mov
adc
ror
push
dec
mov
les
popa
mov
push
outs
cmp
loopne
sti
cmp
retf
out
cmp
mov
mov
xor
and
push
jmp
out
sbb
jno
scas
out
ret
or
or
les
dec
or
sar
and
pop
add
in
in
in
gs
adc
retf
cmc
mov
gs
push
add
mov
test
inc
mov
and
repnz
push
jnp
hlt
daa
or
pop
in
xchg
xchg
in
sub
add
xchg
adc
sub
std
and
jmp
mov
repz
add
pop
popf
mov
mov
push
mov
ret
inc
clc
in
jo
out
cli
std
jmp
push
fwait
arpl
and
xor
xor
push
loopne
leave
sbb
les
jnp
mov
sbb
jmp
dec
push
sub
test
lds
cmp
mov
lods
pop
cmp
mov
(bad)
push
test
xor
sbb
cwde
adc
sbb
inc
cmps
out
je
sub
mov
rol
icebp
jl
sbb
inc
xchg
jmp
iret
leave
pop
scas
adc
pop
adc
mov
leave
dec
cmp
mov
push
push
sbb
push
rcr
sub
aaa
inc
jns
push
adc
call
dec
cld
shl
pop
sar
dec
or
js
jo
cmps
cmp
cmc
mov
push
or
add
dec
arpl
mov
and
dec
pop
es
xchg
mov
mov
neg
sub
dec
jno
rcr
jmp
or
loopne
cmp
call
mov
or
jo
dec
mov
xchg
and
stos
dec
add
test
mov
xchg
pop
push
xor
xchg
adc
daa
or
das
retf
xor
pop
scas
sub
scas
lahf
add
or
mov
out
lahf
sub
ffreep
in
adc
pop
cdq
sbb
fstp
pushf
pushf
in
dec
enter
pop
out
dec
jle
xor
and
cmps
mov
dec
cdq
inc
or
or
cwde
lock
push
push
call
sahf
mov
mov
mov
scas
fild
mov
or
push
jae
gs
adc
lahf
inc
sub
push
lods
sub
scas
dec
inc
jae
or
mov
mov
cmp
xchg
icebp
inc
ja
fcomp
(bad)
cwde
sar
js
cmp
xchg
add
fild
cmps
int
(bad)
mov
jecxz
mov
lahf
in
test
loopne
popf
in
lods
xor
scas
xchg
(bad)
loope
popa
or
mov
jae
inc
repz
mov
sbb
dec
div
and
or
jmp
adc
mov
pop
mov
cmps
mov
mov
add
pop
adc
sub
fcmovbe
cmps
test
ss
pop
call
or
movs
rcr
push
pushf
out
int
add
aas
xchg
mov
jb
inc
xchg
repz
movs
mov
sbb
pop
es
in
mov
fwait
sub
adc
jmp
or
sub
outs
jmp
mov
fistp
loop
sub
xchg
sbb
sub
add
jmp
mov
(bad)
add
idiv
push
(bad)
aas
sbb
clc
push
cwde
aaa
addr16
(bad)
(bad)
mov
adc
leave
lahf
sub
test
(bad)
dec
jg
mov
adc
xchg
and
int
out
dec
adc
es
(bad)
movs
repz
mov
xchg
jmp
in
retf
xchg
sub
retf
fmul
mov
sub
xchg
xchg
movs
dec
or
rol
cmp
scas
adc
jl
jle
aam
retf
fs
mov
or
inc
xor
gs
cli
push
xor
(bad)
mov
and
or
movlps
push
xor
adc
push
scas
ret
mov
js
and
scas
aaa
outs
inc
jecxz
in
leave
clc
ins
pop
push
ds
leave
ret
pop
xchg
pop
fist
aas
sbb
rcl
jl
lods
mov
mov
jne
fwait
lahf
or
jns
mov
jp
mov
jbe
sub
(bad)
bound
xchg
cmp
mov
push
data16
xor
or
xor
fsub
ds
push
shl
xchg
pop
push
ds
pusha
adc
aam
repz
call
repz
out
cmps
mov
push
xchg
aaa
jns
and
adc
retf
adc
adc
lahf
leave
sahf
out
pop
pusha
aas
icebp
xor
dec
jnp
stos
je
rol
and
pop
sub
call
int
sbb
iret
inc
imul
xor
popa
mov
aas
cmp
pop
xchg
mov
sbb
or
call
mov
dec
sub
sahf
adc
cmp
mov
adc
xchg
and
int
out
add
jle
ds
xchg
stos
sub
pop
push
mov
test
lahf
add
stos
add
dec
enter
ins
or
push
adc
ins
jmp
sahf
in
call
cs
dec
mov
aad
out
push
inc
outs
xlat
pop
pop
retf
retf
xchg
cli
adc
fcomp
ficom
inc
clc
dec
add
and
dec
add
add
xor
stos
xchg
clc
pop
shl
in
fild
mov
sub
movs
xchg
add
mov
sbb
dec
jns
dec
xchg
add
ins
pop
xor
push
scas
lds
clc
jbe
cmp
in
into
shr
out
fstp
mov
sbb
out
das
ret
daa
sti
retf
cmp
scas
xor
adc
and
arpl
sub
outs
lea
sbb
inc
std
or
mov
adc
xlat
xor
pop
imul
test
ret
lods
ror
mov
retf
js
inc
mov
mov
push
in
xor
enter
sbb
and
sbb
jge
cmp
and
jbe
mov
cld
arpl
dec
xchg
mov
mov
xchg
and
jmp
out
stc
and
ss
sbb
inc
and
cmp
cwde
dec
sub
mov
fisttp
sub
push
ds
mov
cwde
fwait
add
daa
pop
cmp
(bad)
in
cmp
in
sbb
shr
fimul
pop
dec
sub
xchg
sahf
sbb
hlt
push
retf
mov
cwde
retf
mov
and
(bad)
sub
dec
xchg
nop
xor
sub
dec
add
dec
dec
push
es
retf
xchg
jmp
jmp
iret
mov
dec
enter
daa
and
test
shr
test
mov
and
jge
add
push
add
dec
xor
test
test
xchg
mov
xchg
cmps
or
int
mov
sub
sbb
mov
stos
adc
sub
imul
retf
mov
pop
popa
add
xor
scas
jne
jecxz
into
fs
jle
mov
mov
iret
movs
or
adc
pop
clc
popf
mov
retf
and
in
fnstsw
js
dec
cs
xchg
xchg
not
clc
pusha
dec
ds
fistp
fcom
fdiv
mov
mov
aad
push
das
adc
mov
es
dec
cmp
mov
jmp
jb
jae
xor
stos
or
push
add
fstp
mov
xchg
adc
div
popf
je
mov
dec
retf
addr16
popa
add
popf
push
and
popa
adc
xlat
jae
dec
pop
add
lea
xchg
jno
gs
bound
in
mov
ret
fs
lods
mov
test
iret
inc
gs
push
mov
mov
loopne
sub
push
(bad)
movnti
or
enter
xchg
(bad)
or
dec
mov
mov
pushf
mov
jge
mov
sbb
dec
fimul
dec
ror
mov
std
pushf
add
mov
xchg
add
aas
inc
add
add
les
inc
mov
and
jle
sbb
daa
xchg
test
das
out
push
inc
sbb
cmp
inc
(bad)
xchg
test
dec
fmul
aas
arpl
xchg
aam
cmps
xor
dec
inc
inc
jne
call
dec
jp
jbe
ins
data16
(bad)
aaa
cdq
shl
push
inc
call
dec
jae
xchg
sbb
pushf
sub
lds
sbb
ficomp
aaa
ficom
icebp
(bad)
into
sub
mov
retf
jnp
lock
mov
div
mov
test
or
scas
add
in
fsubr
mov
pop
mov
(bad)
shl
mov
or
and
push
dec
push
mov
or
cmps
cmp
mov
fisttp
xchg
mov
xchg
leave
retf
fwait
(bad)
enter
jno
adc
mov
add
add
cs
inc
dec
je
scas
in
out
mov
pop
mov
fwait
adc
inc
mov
or
mov
dec
inc
mov
ret
jl
stos
jecxz
mov
es
push
out
mov
sub
out
push
push
jg
(bad)
js
sahf
js
or
mov
in
xchg
loope
shl
xlat
ja
test
cmp
lea
jnp
and
ins
ins
das
mov
sub
or
stc
loope
jns
rcl
cmp
sbb
and
adc
jns
jns
pop
add
fsubr
and
jno
iret
pop
add
(bad)
mov
sbb
lea
dec
cmp
xchg
mov
inc
loope
jns
mul
mov
inc
pop
mov
push
push
loopne
sahf
ucomiss
imul
icebp
sbb
loope
out
xor
mov
sbb
in
retf
in
clc
dec
dec
ss
repz
xor
loop
inc
cmp
jl
sub
add
das
inc
mov
or
xchg
adc
ds
int
inc
jae
shr
jb
push
adc
xor
or
fnclex
push
xchg
pop
mov
dec
pop
and
mov
sar
ror
jp
icebp
mov
stos
das
jmp
xchg
(bad)
js
das
ret
pop
jmp
inc
jg
jl
inc
popa
lds
out
dec
adc
leave
fsub
or
sub
mov
jae
mov
and
jne
push
push
or
xchg
or
push
jge
std
fcom
jge
or
or
rol
pop
sbb
mov
(bad)
mov
in
cmp
inc
jae
cs
es
movs
fisttp
push
add
xor
add
push
mov
xchg
or
nop
cmp
sar
jns
add
xor
adc
and
scas
scas
sub
mov
in
fistp
add
icebp
fcomp
add
jae
sti
push
sub
mov
pop
(bad)
sbb
inc
push
pushf
sub
dec
mov
cmp
mov
mul
cmp
arpl
xchg
mov
pop
sbb
xchg
mov
push
cli
sbb
(bad)
cmps
enter
jl
sbb
fmul
or
xchg
mov
dec
adc
add
push
out
ins
les
pop
ins
enter
arpl
sub
xchg
sar
fmul
inc
mov
mov
stc
repz
lock
inc
add
jle
popa
cmps
xchg
mov
jb
loop
pop
and
push
pop
xor
or
ins
retf
add
push
or
or
repz
cmps
loope
repz
xor
pop
cmp
and
add
rcl
push
xchg
stos
mov
ss
ins
sub
(bad)
(bad)
xor
or
push
in
add
inc
push
jae
jl
lock
sbb
xor
dec
inc
jno
js
sub
dec
jae
mov
test
dec
cmps
test
clc
xor
inc
ror
adc
or
in
pusha
repnz
or
pop
add
inc
out
in
outs
add
scas
dec
sbb
xchg
adc
fmul
gs
test
mov
unpckhps
out
push
(bad)
dec
es
inc
mov
push
sbb
fisttp
iret
or
retf
add
mov
jp
ins
rcr
popa
(bad)
pop
mov
repz
aad
lea
ds
ins
dec
(bad)
fisttp
adc
fdivp
push
mov
outs
(bad)
ret
mov
xor
sub
mov
or
sub
das
adc
pop
add
stc
sbb
xlat
imul
xchg
push
in
mov
sbb
mov
and
outs
arpl
(bad)
push
ja
xchg
lods
pop
add
sbb
rcl
popa
cmp
imul
lock
call
add
sbb
xor
(bad)
xor
ins
sbb
test
mov
cmp
sub
xchg
shl
ret
xor
arpl
cmps
aas
or
addr16
push
mov
pop
push
div
cmp
sub
movs
push
sub
dec
ret
xchg
icebp
clc
mov
jns
xor
sub
test
mov
cwde
les
and
mov
sbb
inc
and
test
sub
xchg
jno
aam
inc
adc
mov
pop
shr
fisubr
add
je
add
fsubr
add
adc
add
leave
in
add
ret
call
xor
call
mov
imul
push
fwait
test
pop
es
mov
loope
in
stos
mov
cdq
xchg
sub
xchg
jmp
cmp
mov
dec
mov
mov
ret
xor
repnz
push
xor
stos
cmps
mov
pop
cmp
and
stos
(bad)
jecxz
imul
pusha
mov
loopne
mov
push
call
jp
jo
test
mov
dec
add
mov
cli
call
push
fdivrp
test
xor
mov
mov
dec
cld
cmp
sub
dec
xor
or
and
sbb
aas
popf
xchg
loopne
or
sbb
icebp
inc
clc
jmp
cmp
mov
das
xor
jnp
outs
mov
sbb
xor
aaa
sbb
and
or
push
xchg
sbb
jo
inc
jnp
das
mov
arpl
push
jbe
adc
sbb
mov
fstp
pop
mov
mov
jecxz
shl
jecxz
dec
(bad)
push
sbb
adc
cmp
mov
imul
xor
ret
xor
cmp
ja
into
int3
adc
(bad)
add
add
or
push
outs
mov
mov
add
test
inc
and
mov
sahf
add
stos
xchg
ds
std
retf
add
add
imul
call
cmp
shl
pop
mov
and
sahf
in
retf
sub
mov
sahf
pop
push
pop
aas
retf
pop
stos
(bad)
and
mov
cmc
sub
pop
(bad)
xchg
nop
add
sub
sahf
adc
in
and
mov
or
and
hlt
or
imul
adc
imul
stos
or
lds
or
out
sbb
(bad)
mov
je
fisubr
sar
mov
mov
adc
push
lods
(bad)
mov
or
lds
mov
jns
jecxz
cmps
scas
inc
jae
sbb
mov
push
das
inc
test
pushf
mov
push
mov
mov
mov
push
lea
push
loop
mov
cmps
add
js
dec
fmul
in
push
jg
out
div
pop
cmp
mov
and
jecxz
(bad)
das
popf
mov
sbb
cmps
shl
fmul
add
xchg
int3
pop
retf
outs
ds
leave
mov
jmp
enter
in
jmp
ins
dec
arpl
jbe
xchg
xor
stos
shl
cmp
(bad)
mov
and
xor
mov
fmul
daa
cmp
adc
jecxz
movnti
jnp
lds
mov
loopne
(bad)
cmp
idiv
aas
cmp
fistp
cmp
dec
pop
pop
jo
lea
cli
mov
mov
retf
(bad)
xor
imul
pop
mov
mov
jle
mov
lods
cwde
aas
xchg
xchg
adc
dec
push
pop
scas
cwde
imul
call
cmp
mov
push
repz
adc
xchg
das
retf
xchg
adc
mov
in
push
cmp
mov
scas
mov
aas
aad
xchg
aas
int
(bad)
push
cmc
or
fidivr
push
push
cli
in
adc
xor
dec
push
into
es
add
call
ins
in
push
scas
mov
and
and
xor
xchg
outs
mov
retf
fmul
popf
outs
lock
add
xchg
lods
mov
push
imul
imul
adc
ins
inc
mov
xchg
cmps
or
jns
sti
aaa
or
xchg
call
imul
push
xchg
xor
arpl
xchg
inc
pop
xor
stos
sub
mov
pop
push
int
data16
add
imul
push
test
fcom
push
cmp
stos
xor
cs
js
inc
dec
(bad)
test
stos
or
out
bound
sbb
jg
push
dec
jb
dec
(bad)
sub
or
js
xor
fs
bound
xchg
fdiv
push
pop
add
aad
jno
retf
(bad)
push
push
loope
mov
mov
jge
rcr
mov
int
es
mov
stos
jl
push
loop
or
push
or
in
(bad)
fisttp
cmc
stc
pop
ror
mov
test
push
pop
cmps
repz
daa
and
jo
ss
dec
inc
cwde
sar
sub
inc
and
pusha
add
lea
cld
or
pusha
or
lods
xor
shl
shl
sbb
gs
dec
loope
sbb
or
ds
loopne
arpl
mov
inc
iret
(bad)
or
and
imul
mov
pusha
out
push
aam
xchg
ret
xchg
leave
ficom
cli
enter
cmp
lock
ds
push
sbb
adc
and
repnz
mov
mov
sbb
xchg
rcl
push
xchg
dec
mov
push
xchg
(bad)
jp
xor
pop
xor
imul
sbb
xor
push
(bad)
and
adc
mov
inc
add
push
dec
popa
ss
and
push
aad
mov
push
push
(bad)
aam
jae
movs
mul
jae
mov
push
xchg
xchg
adc
sbb
xor
xor
inc
idiv
gs
cmp
xchg
test
inc
pop
ror
test
dec
gs
jnp
or
pop
or
jg
test
add
(bad)
and
adc
add
and
add
adc
out
dec
mov
adc
pop
cld
jp
jmp
inc
je
adc
mov
scas
push
adc
shl
shl
mov
xlat
pop
sbb
lods
sub
rcr
add
add
dec
(bad)
stos
fld
dec
inc
sti
jmp
lfs
dec
inc
dec
pop
adc
inc
cmp
ins
imul
fstp
cmp
jns
pushf
cmc
xor
jp
loope
xor
mov
clc
clc
pusha
ds
xchg
pop
jecxz
mov
loope
ret
inc
mov
inc
and
aaa
inc
loopne
jmp
pushf
arpl
retf
lods
xor
dec
xor
xchg
scas
jecxz
add
scas
faddp
in
dec
inc
sbb
xor
sub
fisttp
dec
pop
mov
or
cmp
retf
shl
imul
wrmsr
inc
dec
mov
(bad)
adc
and
adc
aaa
inc
ror
sub
pop
sbb
mov
rcl
popa
xor
inc
repz
ret
cli
and
push
ret
and
and
push
mov
loopne
xor
stos
pop
dec
inc
nop
fldcw
popf
or
hlt
xor
dec
jge
sar
outs
cmp
xor
or
cmps
and
jp
bound
lock
shl
xchg
adc
mov
inc
ins
fistp
popf
pop
lods
fdivr
cmp
pop
or
arpl
inc
not
xor
xor
add
dec
and
enter
cwde
mov
adc
mov
jno
mov
or
inc
push
pop
adc
or
mov
mov
pop
aaa
cwde
mov
lea
xor
mov
mov
loope
fild
xlat
dec
mov
dec
add
hlt
mov
fbld
jg
test
mov
push
push
lahf
shl
push
es
popf
inc
and
shl
add
jbe
add
mov
inc
aam
adc
xor
dec
mov
pop
nop
aam
sar
push
inc
in
retf
pop
mov
popa
and
xchg
add
inc
and
leave
pop
and
xchg
adc
dec
adc
or
aad
adc
leave
pop
and
pop
push
gs
jmp
in
push
shr
aam
loopne
enter
dec
sub
cmps
inc
add
xchg
in
or
xchg
in
cdq
cmp
mov
daa
push
sub
mov
(bad)
cmp
test
loop
popa
in
xor
ror
push
push
mov
loope
push
cmp
loope
sbb
lods
or
mov
bound
dec
ffree
mov
jo
cmp
outs
je
loop
cmp
and
mov
fnstsw
or
dec
pop
and
push
scas
rcr
into
fcomp
cmp
mov
ss
add
inc
dec
and
inc
es
fnstsw
jmp
cmp
aaa
lds
movs
fcmove
inc
xchg
int
inc
fwait
dec
inc
test
dec
add
mov
pop
mov
pop
(bad)
pop
pop
stos
inc
or
mov
xor
and
repnz
sub
clc
sbb
and
and
xor
xchg
dec
loop
and
mov
adc
sub
dec
retf
stc
fistp
cmp
popf
or
test
in
fcmovbe
mov
ins
in
fdivr
xor
jns
xchg
cmp
jle
mov
and
add
xchg
mov
(bad)
fnstsw
cld
call
retf
or
cmp
dec
cdq
clc
xchg
movs
repnz
inc
push
pop
and
dec
mov
dec
add
jle
or
inc
xchg
add
push
jg
movs
test
pop
mov
mov
iret
push
add
sbb
push
add
mov
add
stc
retf
int
out
stc
and
mov
icebp
push
adc
and
cs
dec
mov
xchg
nop
lds
(bad)
in
enter
sub
cmp
movs
lock
pop
stc
sti
mov
sahf
(bad)
in
fisubr
leave
lahf
and
and
mov
push
xor
add
movq
(bad)
mov
es
or
stos
lods
jno
pop
sbb
icebp
shl
mov
jmp
jbe
sub
xchg
xchg
xor
dec
test
cmp
mov
add
and
in
pop
mov
sub
loop
sar
les
(bad)
fcmovnb
lods
sar
xchg
mov
mov
inc
xchg
(bad)
rcl
mov
cmp
adc
pop
sbb
mov
retf
dec
mov
mov
push
adc
dec
fild
icebp
lock
or
sahf
add
fnsave
fwait
neg
xchg
xchg
clc
(bad)
mov
dec
aaa
call
outs
lods
fld
cdq
dec
mov
int
mov
push
mov
test
(bad)
pop
sbb
sbb
outs
inc
ja
cmp
jmp
sbb
shl
pop
ret
mov
in
mov
mov
out
data16
inc
adc
shl
lahf
jns
or
stc
cmc
pop
sbb
repnz
pop
jmp
mov
pop
mov
pop
push
jge
outs
and
and
and
lds
fs
mov
es
add
pop
inc
ror
adc
or
and
dec
xchg
scas
adc
mov
mov
sub
and
add
fnstsw
push
dec
test
sub
add
stc
adc
daa
adc
add
cmp
enter
std
rcl
and
ficom
cmp
std
mov
pop
(bad)
push
push
inc
pop
or
sub
hlt
(bad)
pop
pop
and
pop
and
jge
xor
add
push
in
aam
enter
inc
popa
jbe
rcl
and
mov
dec
pusha
mov
mov
hlt
mov
xor
mov
dec
rcr
imul
je
mov
(bad)
clc
out
cmps
lock
ja
jecxz
mov
push
out
ins
(bad)
(bad)
mov
pop
iret
out
fistp
add
or
fisub
in
retf
addr16
xor
mov
cmc
dec
(bad)
push
pop
mov
cmp
sahf
fcomp
jmp
jge
sub
aaa
cmp
arpl
cmp
sub
inc
fbstp
mov
cs
mov
push
aam
fwait
mov
xor
cmps
fnstsw
das
inc
mov
lahf
cmp
dec
mov
(bad)
pop
retf
fstp
aas
mov
jmp
jecxz
cmp
fidivr
mov
icebp
pop
cmp
js
and
ret
jle
push
lock
aaa
xchg
sbb
xchg
adc
cdq
ja
cmps
xor
sub
and
jbe
iret
push
mov
inc
inc
jbe
push
xor
adc
fld
in
push
aaa
adc
es
cmp
ja
mov
ficomp
js
icebp
popa
js
xchg
and
xor
loope
sbb
sbb
mov
in
in
cwde
mov
pusha
fisub
push
pop
adc
fld
leave
lahf
push
xor
mov
mov
sub
ret
cmc
sar
ror
in
inc
pop
test
inc
pop
add
mov
stc
aas
pop
add
and
xchg
out
lahf
sub
movs
sub
in
inc
adc
push
aam
mov
ss
mov
jo
shl
add
mov
in
sub
mov
int
lahf
es
push
add
retf
lea
cld
sub
in
test
adc
jle
xor
mov
sub
dec
inc
loop
jne
repnz
add
imul
iret
rcl
das
(bad)
in
enter
clc
jecxz
dec
dec
push
jmp
js
pop
mov
mov
(bad)
or
mov
pop
mov
pop
outs
fadd
xor
bound
inc
mov
inc
mov
into
push
test
jl
push
mov
loopne
mov
cmp
push
sti
push
push
loope
fisubr
mov
fdivrp
xchg
cmp
push
je
jb
div
mov
pop
(bad)
(bad)
sbb
cmpxchg
nop
sbb
xor
ss
div
movs
sub
mov
sbb
dec
dec
cmps
imul
xor
jl
xchg
jo
jns
stc
je
sbb
pop
ret
jae
push
push
arpl
loope
pop
imul
bound
push
adc
adc
push
rcl
push
xchg
xchg
mov
pop
scas
bound
leave
or
jae
mov
sub
inc
pop
mov
xchg
out
jbe
(bad)
(bad)
in
cmp
mov
jnp
xchg
sbb
popa
psrad
(bad)
push
ret
push
in
inc
mov
pop
lock
sti
pop
jg
in
jg
in
pop
icebp
mov
bound
dec
dec
mov
retf
(bad)
rcr
ds
mov
and
mov
ds
mov
fcmove
add
inc
dec
push
and
mov
std
and
aas
mov
and
jl
inc
in
adc
fisub
out
lahf
sub
lds
mov
in
inc
adc
inc
repnz
enter
push
enter
and
sub
mov
or
add
daa
mov
push
in
cwde
sub
aaa
push
xor
lds
mov
ins
dec
add
or
mov
jne
loop
rcl
arpl
rol
aam
(bad)
jno
and
rcr
repz
outs
add
push
fcomp
les
in
and
cmp
xor
dec
mov
jle
fidiv
fninit
je
cmp
jne
fcom
inc
push
sub
pushf
stos
pop
mov
mov
pop
mov
loop
adc
retf
jne
cwde
cmp
ret
cdq
xchg
push
hlt
and
loopne
mov
les
mov
inc
es
dec
not
(bad)
sub
xchg
cmp
scas
and
out
mov
fldcw
sub
shl
mov
jmp
aas
mov
lahf
xchg
add
pop
xor
scas
ins
mov
jl
adc
jecxz
add
push
xchg
adc
cld
jle
ss
popa
cmp
dec
xchg
rcl
arpl
mov
stc
dec
and
out
xchg
xchg
leave
cmp
push
jecxz
scas
inc
pushf
cmp
fdivrp
(bad)
fadd
(bad)
mov
ss
or
mov
pop
pop
pop
in
jecxz
gs
je
and
add
mov
push
push
push
enter
mov
lock
out
ret
(bad)
lock
pop
enter
lahf
sub
and
nop
popf
sbb
xor
or
jo
cmp
pop
dec
ins
sbb
and
adc
lds
dec
(bad)
out
ja
xor
inc
ds
xchg
inc
mov
mov
xchg
add
or
call
jl
jbe
add
fisubr
lahf
dec
push
dec
inc
xor
mov
jmp
mov
add
push
mov
or
adc
sub
dec
pop
mov
or
rcl
mov
jle
and
cmp
stc
rcl
inc
movs
repnz
sbb
sub
ja
add
jns
test
jmp
out
es
jge
dec
loopne
push
iret
pusha
out
xchg
rcl
cdq
or
pop
mov
jno
cmp
sbb
pop
inc
icebp
out
dec
loopne
icebp
es
lods
fld
xchg
mov
dec
xchg
jbe
mov
clc
hlt
pusha
add
je
adc
push
fdiv
mov
retf
loop
ret
scas
mov
ffree
cmps
dec
inc
mov
xchg
push
(bad)
jmp
shl
ins
rcr
test
mov
adc
mov
pop
mov
jle
jne
jb
mov
test
enter
ss
adc
cwde
rcl
outs
pop
mov
jmp
pop
loope
aaa
push
xchg
popa
cmp
mov
jp
shl
out
test
(bad)
push
adc
xchg
test
cmp
jbe
(bad)
(bad)
and
or
mov
popf
ficom
mov
outs
sub
fiadd
sbb
lea
jo
jp
out
out
xlat
fcmovu
mov
sbb
loop
addr16
shl
xor
call
enter
cmp
test
or
jecxz
imul
test
loopne
(bad)
pmulhw
sti
out
stc
jg
cwde
sti
icebp
fadd
div
and
jg
std
pop
js
mov
cwde
xor
pop
pushf
sub
inc
add
pop
rol
and
jns
fist
fisttp
retf
xchg
xchg
xor
pop
sub
xchg
retf
push
out
pushf
add
dec
mov
lea
add
push
cmps
xor
(bad)
mov
sahf
les
add
movs
jbe
mov
inc
add
mov
ret
(bad)
ror
lea
shl
mov
scas
pop
mov
test
out
cmp
xor
xchg
sbb
dec
sar
add
stc
das
lahf
or
xchg
mov
pop
and
ror
(bad)
out
rcr
dec
sbb
sbb
lea
pop
jp
arpl
cmp
xchg
lahf
jg
jae
mov
xor
lds
pop
xor
xor
ds
cld
loop
mov
fist
sub
jo
push
mul
mov
mov
scas
in
sub
xchg
mov
sbb
sbb
aad
mov
dec
repnz
push
loopne
popa
or
sbb
mov
push
fcom
andps
mov
ror
call
xor
stc
sbb
lods
cmp
popf
push
adc
jo
fs
sbb
lods
push
loopne
mov
inc
enter
inc
fstp
aaa
call
fwait
push
test
test
cwde
add
mov
push
scas
or
and
int3
mov
mov
es
stc
mov
fwait
mov
sub
or
cmp
bound
add
arpl
mov
mov
std
lods
test
cmp
icebp
sbb
cld
enter
cmp
imul
fisttp
call
test
ret
enter
aaa
hlt
mov
cmp
adc
jmp
scas
xchg
jnp
les
inc
mov
into
shr
movs
and
mov
rcr
push
xor
sub
arpl
imul
ror
test
or
enter
leave
out
xchg
and
popf
sub
dec
push
retf
dec
inc
scas
pop
test
inc
add
inc
adc
dec
loopne
sbb
push
jo
ja
in
enter
add
dec
add
rcl
cmp
mov
or
(bad)
mov
add
mov
and
push
or
(bad)
icebp
(bad)
cmc
sar
sub
jnp
cmps
lods
and
stc
jns
dec
dec
or
call
dec
ja
dec
sbb
shr
out
jecxz
jle
dec
pop
xor
push
cwde
cmp
gs
fstp
outs
mov
pop
pop
call
shl
loope
jle
add
or
sbb
mov
jo
daa
add
push
sub
addr16
sysret
mov
loop
xchg
sub
(bad)
sahf
mov
adc
mov
out
into
lock
ja
and
mov
fld
xchg
scas
(bad)
mov
cmp
adc
fnclex
int3
fist
cs
lds
jae
jp
stos
ret
adc
fnstsw
add
xchg
test
and
fld
fnstcw
retf
adc
cmps
(bad)
or
loopne
xor
stos
or
shr
fmul
jge
scas
mov
sub
int3
jl
out
mov
mov
cmps
icebp
icebp
jle
div
xchg
mov
push
or
int
push
shr
out
(bad)
jne
(bad)
cs
or
add
sbb
(bad)
cmp
and
aas
mov
sbb
fadd
add
ja
(bad)
push
out
inc
pop
cmp
jmp
popa
dec
or
ret
(bad)
pop
(bad)
js
and
push
fbstp
aam
jnp
dec
add
addr16
pop
push
ja
cmp
int
or
loopne
ja
test
dec
push
jg
add
xor
mov
rcr
stos
xchg
movs
scas
mov
cdq
add
arpl
xor
addr16
pop
mov
rcl
inc
mov
xor
jb
je
das
inc
add
push
adc
push
in
adc
adc
or
inc
xchg
sub
les
cdq
mov
dec
pusha
mov
fmul
or
sbb
push
ins
fild
and
xor
push
xchg
mov
repnz
push
nop
sbb
movs
inc
and
pop
lods
or
or
jae
sub
mov
loope
repz
fucomip
xchg
sahf
ret
iret
(bad)
test
clc
not
test
add
or
xor
icebp
repz
movs
pop
cmp
and
stos
add
mov
jo
and
mov
daa
pop
and
sahf
test
sub
adc
imul
cmp
mov
jo
push
daa
mov
mov
jp
add
jmp
pusha
dec
xchg
jbe
jns
jp
xor
popf
mov
pop
arpl
pop
cdq
sub
(bad)
add
sbb
les
es
inc
frstor
pop
push
inc
cmp
mov
fsubr
xor
leave
sahf
xchg
rcl
add
(bad)
adc
ins
xor
int3
daa
ds
xor
xor
pop
cld
or
pop
int
and
and
int
cmp
dec
jecxz
dec
push
jmp
dec
xchg
out
mov
and
sbb
aaa
pop
jnp
mov
dec
push
xor
fldenv
outs
pushf
cmp
adc
pop
pmuludq
clc
icebp
mov
pop
fsincos
ins
mov
or
mov
cld
sbb
in
ret
js
icebp
xchg
ret
js
mov
and
inc
inc
imul
jb
loopne
out
mov
int
out
mov
ret
adc
fdivr
sbb
mov
lock
mov
cmp
aam
dec
fwait
or
pop
adc
sti
imul
retf
mov
pusha
and
sahf
add
mov
sbb
dec
mov
clc
adc
rcr
jb
test
sub
sbb
mov
jne
leave
and
mov
dec
mov
sub
adc
aaa
or
pop
jle
add
fcmovbe
inc
xchg
test
pop
mov
sub
mov
xor
pop
gs
fsubr
mov
inc
(bad)
cmps
jecxz
repnz
cli
sub
pop
fadd
mov
cmp
enter
in
or
ss
icebp
cmp
(bad)
test
or
rcl
adc
dec
popaw
out
push
sbb
jmp
inc
mov
repz
jae
movs
mul
mov
mov
xchg
aas
jae
sbb
stos
mov
mov
aad
mov
mov
stc
loope
mov
fidiv
mov
sub
nop
loopne
add
sub
loopne
(bad)
cmp
jne
adc
jnp
fprem
mov
mov
mov
cmp
push
pop
adc
jno
sub
sbb
pop
or
mov
inc
push
mov
pop
ret
scas
aam
call
cmp
mov
mov
lea
adc
mov
ja
or
fcom
jno
hlt
movs
xor
fwait
dec
xchg
ret
sahf
cmc
sub
daa
ds
push
push
shr
lahf
repnz
or
xor
cmps
add
cmp
sbb
test
out
nop
ins
or
hlt
mov
leave
sub
aaa
xchg
mov
sbb
retf
or
pushf
call
out
clc
jle
cmp
arpl
sbb
mov
inc
(bad)
sbb
add
adc
aaa
(bad)
rcl
sub
jp
or
pop
jp
push
jg
cli
or
inc
cmp
clc
mov
mov
ins
sub
lds
in
clc
rol
xor
xchg
fild
out
and
(bad)
cmp
rol
jl
mov
or
adc
add
fmul
pop
popa
fdivr
or
pusha
push
adc
mov
sub
mov
inc
add
sub
daa
mov
sub
cdq
sar
push
or
pop
pop
mov
push
cmps
push
jge
dec
ins
xchg
mov
pusha
inc
jmp
inc
dec
in
test
sbb
add
or
jmp
pop
add
add
lds
push
mov
fld
stc
adc
call
leave
enter
jp
es
mov
mov
paddb
or
arpl
jmp
int3
lea
bound
popa
(bad)
in
dec
cwde
cmp
add
mov
add
xor
xchg
out
repnz
ret
mov
call
cdq
inc
sbb
sahf
or
gs
pop
popa
add
scas
lock
inc
imul
pop
outs
mov
push
jg
out
(bad)
pop
mov
pop
mov
xor
call
jg
mov
daa
rcl
jecxz
scas
iret
ins
(bad)
sbb
sti
and
jl
mov
sub
inc
push
mov
jmp
cmp
outs
pop
into
fisttp
in
into
or
push
imul
jo
jb
scas
pop
xchg
sub
sbb
inc
dec
rcl
jmp
inc
mov
dec
pop
mov
mov
or
or
popa
repnz
push
adc
xchg
in
pop
adc
or
mov
nop
enter
imul
xlat
jns
dec
pop
jne
in
mov
push
jmp
add
xchg
dec
inc
cwde
fisubr
mov
or
gs
ucomiss
test
sbb
mov
cmp
cmpxchg8b
in
ret
mov
pop
jo
fdiv
pushf
cmp
xchg
pop
rol
adc
int3
adc
cwde
cmp
(bad)
repnz
sbb
xchg
add
stc
lock
js
fdiv
cmp
adc
push
jl
dec
loopne
jnp
retf
inc
nop
mov
out
sti
sub
xchg
(bad)
imul
jmp
mov
jecxz
inc
pop
std
paddusw
fcmovnu
xor
sub
ret
std
mov
adc
mov
mov
dec
call
add
add
cmp
repz
aas
add
outs
stos
add
add
repnz
inc
jno
int
mov
jle
call
shr
and
xchg
inc
test
fdivr
div
out
add
push
addr16
fsubr
aaa
out
adc
aas
adc
dec
les
add
lahf
xor
pusha
out
mov
cmp
sbb
xchg
sahf
jge
das
cmp
xor
inc
adc
addr16
outs
les
(bad)
pusha
cld
retf
iret
jno
pop
xor
xchg
int3
lahf
into
mov
pop
inc
inc
jl
mov
inc
add
cli
popa
test
mov
mov
mov
sub
mov
icebp
jmp
icebp
inc
jae
sub
fwait
and
jo
hlt
sahf
mov
les
call
lods
ret
mov
outs
ja
loopne
and
neg
fst
cmp
outs
mov
loop
mov
(bad)
jge
cmps
and
dec
icebp
scas
pushf
cli
sbb
test
pop
call
mov
adc
lea
or
out
lock
repz
rcl
rcl
aaa
adc
push
push
push
cwde
mov
pop
cli
pop
cld
jmp
in
dec
pop
adc
int
in
push
pusha
aas
jmp
adc
cmp
sahf
adc
cmp
push
mov
sti
jnp
loop
and
push
(bad)
sar
pop
mov
out
cmp
jne
dec
dec
add
bnd
leave
xchg
push
cli
xchg
push
add
(bad)
retf
adc
adc
js
and
adc
mov
or
inc
rol
fdiv
push
ins
jecxz
pop
pop
and
sbb
jge
fld
fimul
xchg
js
mov
or
pop
sub
call
sub
inc
lods
and
dec
and
fs
mov
(bad)
retf
shl
arpl
xchg
test
mov
pop
out
add
mov
outs
xchg
sub
rol
cmc
imul
ss
adc
jl
mov
mov
add
push
arpl
push
inc
pop
adc
rol
jmp
rol
(bad)
hlt
leave
das
arpl
call
add
mov
lea
inc
arpl
adc
fnstenv
aaa
arpl
js
jg
fcom
jp
jae
(bad)
fcom
icebp
cdq
xbegin
(bad)
cwde
loope
cmc
sti
adc
cld
int
mov
dec
(bad)
hlt
jne
bnd
add
and
or
int
out
jg
or
pop
xor
shr
jecxz
jnp
cli
mov
test
inc
jmp
ja
rcr
jns
and
stc
jp
jnp
aaa
loop
mov
jns
lock
and
(bad)
jl
push
push
jp
(bad)
xchg
or
fcomp
xchg
(bad)
adc
jo
xor
cmp
xor
jmp
push
mov
xor
cwde
pop
pusha
mov
fs
pop
dec
inc
mov
fwait
enter
xor
(bad)
or
sbb
mov
int
out
xchg
aaa
and
add
sub
jnp
in
or
fcom
xor
jg
imul
out
or
add
push
shl
xchg
cwde
mov
in
mov
into
sbb
push
jno
out
jmp
in
ins
lods
lock
sub
cmps
cdq
jo
repnz
ror
inc
jo
int
enter
adc
or
rol
aaa
test
rol
punpcklbw
std
div
dec
mov
cmp
or
cmp
pop
push
arpl
add
jp
push
or
(bad)
retf
mov
nop
jnp
add
lock
fadd
cmc
jb
ins
mov
inc
pop
jle
adc
dec
clc
jb
add
and
aam
inc
and
and
sub
mov
test
xchg
sub
fild
mov
int
add
inc
dec
scas
ins
pop
(bad)
lea
jl
push
jne
pop
das
rol
sub
daa
pusha
fisubr
pop
mov
ret
sbb
and
rcr
dec
lahf
mov
fcomp
mov
xchg
ds
xor
inc
mov
cs
sbb
jge
add
in
jo
lahf
xor
xchg
sub
iret
fld
pushf
inc
std
dec
inc
cmp
(bad)
jnp
mov
xchg
xlat
mov
jo
(bad)
shl
scas
mov
or
inc
push
xchg
add
adc
push
xchg
mov
fnstcw
loop
mov
dec
not
loop
sahf
adc
cmc
fs
jg
fisttp
out
sub
icebp
adc
mov
fs
arpl
xor
pop
pop
ret
ja
inc
cmp
scas
fcomip
add
xchg
scas
mov
jmp
test
jmp
jmp
inc
and
pop
pop
sbb
and
jb
rcr
mov
xchg
icebp
in
dec
fisttp
into
jnp
call
outs
mov
aad
push
xchg
mov
sub
scas
and
and
cmp
loopne
push
sbb
mov
arpl
adc
sahf
call
addr16
sbb
cdq
rol
jno
clc
push
sbb
je
daa
(bad)
push
ret
mov
call
clc
jbe
imul
movs
and
out
push
jg
icebp
imul
xor
mov
inc
arpl
pop
sbb
les
rcl
and
fst
retf
add
jmp
adc
sub
dec
enter
call
push
adc
dec
arpl
pop
jp
dec
fild
or
cmps
(bad)
mov
mov
or
int3
(bad)
xor
lds
cs
xchg
mov
jg
mov
xor
clc
mov
push
stos
add
nop
mov
sbb
jns
mov
in
(bad)
cmc
push
push
sbb
cmp
bound
mov
leave
jecxz
sub
inc
pushf
inc
gs
les
jnp
imul
dec
mov
shl
ins
and
inc
jmp
push
xchg
mov
and
sahf
xchg
dec
leave
sbb
adc
mov
xor
push
bound
fwait
jno
mov
(bad)
jb
mov
popf
cmp
xchg
rcl
xchg
in
std
and
jg
dec
sbb
mov
rcl
dec
adc
rcr
mov
dec
popa
les
loope
(bad)
aam
dec
jecxz
out
in
test
loope
push
aam
adc
lods
int
js
pop
cli
jns
fdiv
out
pop
sbb
out
fs
test
daa
mov
test
xchg
clc
mov
jae
js
dec
or
xchg
ins
inc
lods
daa
mov
icebp
mov
push
retf
xor
ds
cdq
add
dec
jns
scas
ss
mov
sbb
jecxz
add
jb
sbb
mov
mov
mov
mul
jmp
cmp
push
cmp
jo
and
inc
dec
ret
clc
mov
rcl
imul
rcl
(bad)
adc
pop
mov
add
xchg
stc
cdq
mov
faddp
sub
mov
push
aam
cs
ds
push
push
(bad)
and
fidiv
std
pop
mov
outs
jge
pop
dec
shl
dec
popa
retf
mov
adc
popa
outs
inc
and
mov
loope
ja
mov
sbb
push
sbb
(bad)
jecxz
xchg
inc
cmp
add
lahf
cmp
gs
mov
packsswb
xor
lock
das
loop
mov
sti
lock
adc
(bad)
ficomp
aas
sbb
jecxz
cmp
or
sbb
not
or
inc
retf
adc
mov
mov
mov
push
retf
cmps
xchg
popa
ret
leave
push
xlat
xor
mov
clc
pop
sahf
dec
repnz
lods
cmps
add
ja
xchg
push
mov
call
and
push
pop
fwait
retf
rcr
jmp
and
xchg
ror
adc
mov
mov
sub
or
lea
add
cmps
lea
je
popf
das
retf
out
inc
sub
dec
or
adc
daa
and
and
xor
in
jbe
pop
mov
add
dec
mov
aad
add
and
aaa
adc
sbb
add
add
icebp
movs
jmp
pop
mov
adc
das
xor
stc
jnp
add
xor
sub
mov
arpl
shr
xchg
outs
cmp
adc
daa
cwde
aaa
jge
xchg
dec
sbb
daa
jg
(bad)
mov
sbb
int3
arpl
mov
retf
pop
mov
and
nop
clc
add
ror
(bad)
pop
ret
cdq
mov
mov
movs
shr
loop
xchg
shl
loopne
jae
js
ja
mov
pop
push
push
pop
icebp
fcom
push
arpl
int3
push
xor
sub
mov
sti
loopne
add
(bad)
js
adc
push
imul
dec
xor
arpl
dec
jl
test
shl
xor
fsubrp
into
ret
mov
stc
js
xor
jo
sub
mov
data16
div
cmps
jne
push
jne
test
mov
fstp
aam
mov
pop
mov
pop
(bad)
fldenv
aaa
cmp
jle
fbstp
mov
addr16
jmp
int
jns
xor
lea
dec
xor
add
sub
nop
bound
adc
sub
cs
js
add
mov
pop
xchg
rcl
pop
jno
movs
out
les
pushf
ds
out
int3
sub
jnp
rol
jnp
clc
pop
arpl
cli
sub
push
inc
sub
loop
(bad)
pop
jmp
and
jl
loope
jge
dec
push
sub
dec
xchg
aas
ins
add
mov
xor
xor
dec
or
out
stc
cmps
push
out
in
jae
ret
(bad)
retf
cdq
std
(bad)
es
ins
sub
pop
push
ds
push
xor
lds
mov
adc
adc
mov
mov
add
ret
test
daa
nop
inc
push
add
or
or
mov
adc
xchg
add
mov
out
mov
adc
ins
stc
sahf
or
loope
sub
in
clc
adc
call
push
sub
inc
jmp
sub
into
mov
shr
cmp
pop
and
and
and
sbb
sbb
pop
push
cli
and
push
dec
or
cmp
mov
les
icebp
jb
dec
dec
(bad)
test
mov
xchg
and
cdq
aas
xchg
or
jne
xchg
add
push
or
outs
pop
adc
ins
pop
xchg
das
adc
mov
clc
clc
sar
loope
dec
loopne
stos
clc
clc
ins
sbb
cs
fcom
mov
lock
pushf
in
js
sbb
mov
inc
ja
loopne
sti
adc
pop
lahf
out
sub
xlat
cmp
ins
getsec
loopne
jecxz
cmp
in
out
js
nop
es
in
and
dec
not
mov
movs
loope
call
mov
mul
addr16
fisub
xchg
adc
shl
pusha
xlat
popw
in
mov
sbb
or
inc
mov
cwde
(bad)
mov
xchg
pusha
xor
jno
ret
xchg
fs
jne
ret
pop
sbb
mov
movs
sbb
push
cmps
push
mov
in
cdq
fnstsw
ja
xor
cmp
loop
repz
xor
mov
in
js
mov
mov
push
les
(bad)
fcomp
psllq
sub
mov
fcomp
xchg
not
mov
dec
dec
fwait
sub
(bad)
daa
mov
test
push
cs
mov
adc
stc
enter
fsub
jl
lods
inc
jle
adc
call
sub
cdq
in
dec
jne
cmp
popf
inc
add
test
jae
loope
or
rcl
je
mov
pop
imul
add
inc
dec
out
push
inc
or
and
sub
dec
rol
aaa
and
push
inc
pop
add
jbe
fisubr
sub
adc
jp
repnz
arpl
sub
push
pop
xchg
retf
es
jbe
mov
shl
cwde
xor
aaa
popa
int3
repz
ds
hlt
or
xchg
lock
add
int
xor
test
jle
repnz
in
retf
(bad)
mov
lea
stc
jnp
or
jge
(bad)
push
cmp
repz
(bad)
mov
dec
loop
mov
push
pop
jmp
(bad)
call
rcl
and
mov
loopne
out
add
mov
idiv
das
fiadd
add
adc
addr16
jne
or
js
ds
imul
repnz
test
or
aaa
sti
retf
scas
adc
aas
popf
out
in
rcl
cmp
xlat
mov
loop
(bad)
cmp
mov
pop
test
sub
outs
je
retf
pop
sbb
cmp
xchg
mov
ins
fistp
into
dec
sbb
mov
mov
jae
sbb
xchg
mov
pop
jne
imul
retf
push
in
aas
xor
xor
xor
add
daa
pop
push
rcl
and
pop
(bad)
loop
mov
mov
cs
pop
add
jns
nop
and
loope
pop
fdivr
sub
jp
push
jge
sub
dec
repnz
adc
lock
adc
xchg
cmp
pop
out
cmps
leave
mov
jl
int
inc
sar
cs
daa
stc
mov
es
aaa
mov
add
scas
or
mov
push
inc
xor
cmp
jns
scas
mov
sub
or
push
inc
(bad)
int
mov
or
jmp
add
mov
mov
sub
push
es
mov
dec
push
add
adc
add
and
xchg
inc
pop
mov
cmc
daa
cmp
jmp
dec
outs
xchg
fsubr
rcl
add
les
xchg
popf
mov
adc
jge
out
add
add
dec
cmp
add
es
adc
adc
adc
dec
outs
mov
iret
xchg
ret
xlat
cdq
int
or
and
adc
inc
arpl
mov
(bad)
mov
mov
sar
dec
adc
xchg
movs
xchg
les
and
sti
inc
jecxz
jl
pushf
mov
lea
bound
scas
(bad)
pusha
lods
cmc
mul
arpl
test
mov
jb
(bad)
cli
cld
adc
cmp
mov
(bad)
push
mov
pop
arpl
sbb
dec
mov
jl
sbb
cmp
add
cmp
cld
arpl
div
ret
mov
xchg
and
clc
out
and
add
test
mov
rcl
mov
xor
(bad)
cmc
cmp
cwde
aam
(bad)
cwde
sbb
sub
(bad)
div
mov
xchg
sbb
mov
jge
ret
mov
arpl
cmp
sbb
aam
(bad)
inc
mov
sub
inc
xor
fdivr
jno
xor
jecxz
mov
xor
push
pop
cmp
out
sbb
mov
xchg
aam
push
stc
mov
les
jle
cs
repnz
push
adc
not
xchg
js
fadd
out
mov
lock
arpl
fistp
and
fimul
in
in
in
mov
sub
mov
in
cmps
mov
inc
call
push
sbb
pop
jl
adc
mul
es
cs
sub
in
inc
ds
and
lock
add
retf
xchg
sub
inc
mov
ds
push
add
xchg
(bad)
(bad)
push
mov
sbb
add
mov
or
sbb
mov
dec
mov
and
jb
or
fcmovnbe
push
das
cmp
sti
sub
inc
shl
imul
mov
mov
mov
dec
out
mov
and
(bad)
lea
retf
sbb
sbb
jmp
cwde
xchg
in
push
fs
(bad)
mov
jge
pop
shl
and
cld
push
xlat
xor
xchg
add
sbb
push
cmp
(bad)
sub
adc
sub
inc
arpl
sub
ja
test
xchg
aas
pop
stc
arpl
cmps
icebp
jg
jno
and
jns
repz
mov
mov
add
jecxz
mov
inc
mov
jp
das
add
in
and
(bad)
jg
sar
jo
xor
jg
pop
xchg
(bad)
loope
mov
push
cld
icebp
dec
cmp
lahf
push
lock
dec
or
fistp
jo
cmp
cmps
or
loop
retf
mov
test
ret
jg
and
test
sbb
jbe
xor
mov
sbb
test
mov
jne
or
je
or
and
js
ret
inc
push
cmp
xor
adc
push
pop
mov
int3
inc
add
in
pushf
cmp
dec
cld
cmp
or
and
shr
call
push
pop
mov
aas
int3
pushf
cmp
out
add
icebp
(bad)
cmp
and
bound
jg
rol
ins
inc
fmul
mov
(bad)
adc
adc
dec
mov
lahf
inc
out
sub
add
aaa
pop
inc
fcmovbe
push
dec
cmp
pop
pop
out
loopne
xor
imul
jne
and
xor
fs
xchg
movs
dec
sub
push
inc
ds
add
add
push
xchg
mov
call
mov
hlt
daa
xor
xchg
mov
adc
cmp
jp
(bad)
push
mov
mov
cwde
mov
stc
in
pop
inc
push
(bad)
data16
or
push
dec
sbb
lea
shl
(bad)
pusha
repnz
lock
cs
rol
aas
cmp
daa
(bad)
call
inc
ret
pop
jne
or
mov
dec
add
dec
gs
xor
sub
(bad)
mov
mov
jo
xchg
add
sbb
xor
nop
mov
xor
test
pop
loop
lds
cli
jge
jecxz
mov
nop
dec
fucomi
jnp
jno
es
pop
jb
mov
sbb
adc
lahf
jmp
or
(bad)
cmp
enter
or
daa
jnp
lock
mov
or
shl
mov
ret
retf
icebp
icebp
sahf
inc
mov
sub
inc
sar
fwait
push
loopne
mov
xchg
inc
sbb
mov
and
adc
jmp
mov
aam
cmp
fldenv
pop
sbb
jle
mov
add
es
retf
ja
inc
add
xchg
sub
mov
sbb
call
mov
pop
sbb
xchg
loop
mov
mov
cdq
std
mov
popf
cmp
into
popf
cmp
in
pop
add
xchg
cdq
push
stos
movs
out
jmp
(bad)
and
xchg
aas
or
pop
enter
shl
nop
jle
cli
mov
test
(bad)
icebp
les
mov
jl
or
push
es
cwde
enter
(bad)
mov
inc
(bad)
retf
loop
bound
int
js
outs
jns
xor
sar
sbb
cmps
jge
(bad)
imul
neg
stc
idiv
jnp
pop
out
mov
push
idiv
mov
aas
or
mov
inc
dec
rol
push
fs
(bad)
jb
movs
mov
mov
fwait
data16
adc
mov
movs
push
mov
inc
jae
mov
scas
adc
xor
in
adc
cld
push
cli
push
mov
mov
(bad)
cld
test
adc
sub
(bad)
adc
fmul
add
add
das
or
mov
icebp
sub
(bad)
mul
cwde
xchg
adc
in
cs
sub
ja
cmp
jle
push
es
rcr
cs
jmp
nop
xchg
hlt
xchg
add
xchg
movs
push
inc
cld
in
rdtsc
out
(bad)
in
or
leave
pop
lea
adc
mov
jns
call
in
pop
call
loop
gs
das
xchg
mov
(bad)
movs
(bad)
xor
repnz
in
cmps
jg
mov
loop
rcl
shl
push
ret
mov
sbb
into
mov
lods
jge
mov
xor
add
out
test
test
mov
add
lahf
pop
and
imul
sbb
xchg
outs
ret
add
loopne
push
jns
xchg
dec
pusha
adc
out
stos
mov
out
retf
dec
or
pop
lods
(bad)
leave
in
add
hlt
les
hlt
mov
inc
scas
(bad)
fimul
jo
cwde
adc
mov
into
jne
call
and
cs
jle
push
into
or
bound
pop
sar
push
movs
push
nop
out
cmp
(bad)
mov
loopne
xchg
cmc
pusha
adc
mov
mov
lds
loop
pop
ds
push
iret
pushf
(bad)
out
cmc
aad
mov
add
(bad)
(bad)
mov
outs
fiadd
aas
and
mov
sbb
shl
and
(bad)
cli
inc
mov
mov
and
fmul
ins
stc
xchg
iret
adc
add
js
sbb
xor
xchg
jne
int
nop
in
inc
lock
inc
push
pusha
out
pop
pop
add
hlt
aaa
sbb
call
xor
mov
pop
aaa
retf
and
pushf
xchg
ins
sub
mov
sub
imul
mov
mov
das
or
test
test
mov
mov
jmp
test
test
test
cld
add
mov
sub
sub
sub
sub
mov
push
add
inc
inc
inc
inc
in
pop
adc
sub
sub
sub
mov
test
mov
sub
sub
sub
sub
sub
and
push
push
push
push
push
push
push
stc
add
mov
mov
mov
mov
fwait
sub
sub
sub
dec
push
out
cld
jmp
jmp
shl
mov
sub
xchg
xchg
sub
ins
rol
fdiv
xor
aam
cmp
cmps
div
rcl
jae
cmc
popf
ror
aad
push
pop
out
pop
pop
pop
lods
sbb
ja
pop
outs
or
add
add
pop
outs
lea
jle
adc
out
lea
add
add
fcomp
or
loope
and
add
add
(bad)
icebp
daa
add
add
rcr
icebp
inc
add
add
mov
mov
inc
add
cmp
loop
add
add
data16
inc
add
add
int3
rdpmc
call
xor
add
inc
mov
or
add
inc
lods
mov
pop
add
add
pop
outs
or
add
add
inc
sub
test
add
add
pop
ins
add
add
shl
mov
aas
pop
add
mov
pop
hlt
jns
and
add
mov
pop
add
add
sbb
add
pop
add
add
shr
fmul
inc
add
add
pop
mov
adc
addr16
pop
or
dec
inc
add
xor
sub
add
rcr
test
add
add
xor
jmp
add
sub
jp
and
add
sbb
jecxz
or
jp
adc
add
add
icebp
daa
add
add
inc
sub
push
xchg
add
mov
or
aas
pop
add
add
pop
outs
(bad)
fmul
add
mov
fild
icebp
cmps
jge
xlat
leave
(bad)
je
std
and
aas
sbb
jge
mov
loope
mov
cmp
and
in
rcr
mov
aam
in
mov
das
ja
stos
aam
mov
std
out
cmp
mov
jbe
shl
call
inc
test
pop
pushf
std
jl
fstp
mul
in
ins
call
gs
lods
ficom
mov
enter
jecxz
(bad)
jg
aas
push
pop
int
jns
outs
daa
mov
jae
aad
(bad)
sti
retf
repnz
rol
cmps
mov
lds
add
dec
fcomip
sbb
push
pop
std
xchg
cmp
out
pop
jp
loopne
add
or
in
into
ja
aas
ins
pop
outs
mov
repnz
retf
sti
into
into
jns
cmp
sahf
fnstsw
cmp
adc
jp
std
xchg
cmps
mov
retf
ds
into
(bad)
cmp
sti
ins
test
repnz
test
sub
int3
inc
imul
iret
fs
jbe
retf
jmp
or
sbb
and
fimul
mov
pop
test
mov
mov
enter
xor
repz
rcl
sbb
repz
mov
mov
jbe
fistp
pop
rcr
sahf
push
outs
ins
pop
xchg
(bad)
mov
mov
sti
loopne
pushf
add
in
out
fcomp
(bad)
cmp
int
sti
sti
iret
daa
pop
lahf
movs
push
retf
mov
jne
mov
fbld
call
mov
(bad)
add
add
add
cli
cmp
pop
loop
pop
jg
sbb
dec
mov
mov
cmp
jecxz
in
hlt
mul
pop
jo
adc
jbe
jmp
cmp
sbb
(bad)
mov
cdq
inc
daa
mov
iret
bound
push
or
mov
lods
lock
enter
iret
aaa
mov
pop
push
shl
rcr
push
addr16
out
outs
cdq
repz
sbb
jg
xlat
mov
xor
pop
out
lods
(bad)
aam
addr16
imul
out
push
sar
ficomp
mov
(bad)
or
pop
add
cmp
jb
mov
mov
lahf
jne
ss
xor
fidivr
stos
or
imul
mov
adc
mov
cmps
iret
and
add
push
lds
call
add
pop
jmp
add
adc
(bad)
hlt
pop
sbb
loopne
mov
lods
(bad)
int
bound
push
push
and
cmps
iret
and
adc
sub
push
(bad)
mov
adc
dec
fld
jl
ja
mov
jge
repz
out
mov
cmp
(bad)
cmp
outs
jle
pushf
(bad)
mov
std
jmp
mov
inc
add
ins
test
js
and
fld
xchg
xchg
int
jae
jmp
(bad)
int
xor
add
leave
(bad)
loopne
inc
popf
les
int3
ficom
das
ja
clc
mul
mov
inc
add
sub
push
in
pop
or
dec
dec
add
mov
sub
daa
sub
sahf
pop
(bad)
mov
gs
jl
call
xchg
dec
dec
outs
pop
data16
pop
mov
repz
pop
in
jbe
iret
ins
dec
stos
dec
retf
not
mov
jb
mov
add
(bad)
not
pop
pop
push
neg
lea
ds
cmp
mov
xchg
cdq
push
add
mov
add
(bad)
xor
and
into
(bad)
and
outs
int
je
cdq
sti
xchg
jg
pop
inc
stc
icebp
and
pop
jb
mov
ds
ror
daa
or
pop
mov
daa
cmp
jbe
pusha
ds
clc
pop
xchg
pop
mov
mov
jmp
inc
shr
mov
cmps
mov
aas
call
mov
cmp
mov
add
pop
call
addr16
sbb
pop
(bad)
cwde
out
mov
fadd
jne
jb
and
cli
or
in
push
into
ds
dec
xlat
xchg
xor
pusha
adc
or
pop
jo
inc
mov
inc
and
cli
xor
(bad)
rcl
out
popa
jmp
xor
rol
mov
xlat
cmps
jnp
cmc
pop
int
cmp
arpl
push
fnstcw
pop
xlat
mov
fimul
mov
cs
fnstenv
daa
push
pushf
lea
xchg
cmps
(bad)
(bad)
jno
sbb
pop
stc
(bad)
adc
mul
fnsave
pushf
cmps
(bad)
push
jmp
enter
add
mov
call
xchg
jmp
add
outs
xor
or
add
sub
cs
xchg
xchg
pop
xchg
xlat
push
sti
fsubp
cmp
imul
fidiv
xor
call
jne
cmp
adc
xchg
mov
dec
push
in
outs
hlt
popa
es
call
imul
rcr
mov
mov
inc
test
div
mov
shl
in
fcom
sti
shr
outs
sub
dec
shr
mov
jge
and
fsub
cmp
push
push
popf
sahf
cmps
fstp
xor
cmp
sar
scas
inc
imul
(bad)
imul
lods
jns
xlat
sbb
in
jo
mov
das
mov
out
push
pop
and
call
lods
add
cmp
into
jg
jns
inc
jne
iret
xchg
pop
add
mov
ficom
sub
je
(bad)
cli
adc
pop
lock
or
pop
ins
dec
lds
add
ja
imul
adc
aaa
mov
push
shr
imul
jecxz
push
daa
or
mov
shr
mov
call
jmp
rcr
(bad)
mov
retf
inc
shr
sub
inc
mov
jg
shr
pop
cli
(bad)
sub
das
fist
jae
dec
pop
xchg
(bad)
jmp
(bad)
fmul
jge
xor
or
jno
(bad)
push
cld
mov
jl
add
sbb
dec
iret
rol
jecxz
sbb
cmc
sbb
mov
xlat
scas
pop
imul
dec
mov
dec
lods
frstor
arpl
repnz
jbe
jmp
es
sar
icebp
mov
pop
leave
xor
xor
inc
(bad)
repz
icebp
shl
ss
int
in
adc
jmp
jl
stos
pop
add
sub
jp
dec
scas
das
mov
add
jne
add
cli
out
fdiv
jl
(bad)
cs
or
dec
push
cli
jnp
jmp
(bad)
sub
pop
in
mov
mov
jp
rep
cld
int3
(bad)
icebp
sub
inc
xlat
jb
mov
int
fnstcw
or
repnz
jbe
jmp
stc
(bad)
in
repnz
dec
jmp
(bad)
pop
add
mov
xor
std
clc
and
adc
jp
sahf
outs
dec
(bad)
in
cwde
mov
in
rol
repz
xor
loop
shl
js
arpl
scas
sbb
mov
scas
push
test
pop
mov
add
in
pop
push
call
jmp
je
or
add
and
add
movs
add
inc
gs
cmp
push
jle
cmp
out
test
je
test
cs
jbe
jmp
xor
cmps
out
mov
mov
mov
dec
sbb
pop
push
retf
aam
out
stc
jg
jge
xor
inc
ror
cmp
(bad)
(bad)
jmp
mov
add
cs
js
cs
mov
add
mov
pop
xchg
pop
mov
or
jb
sub
ret
cmp
jne
in
push
and
movs
ins
ror
mov
add
ficomp
sbb
clc
in
outs
ror
and
xor
and
adc
dec
or
xchg
adc
pop
shr
cdq
cmc
scas
out
jne
test
jne
jns
ss
mov
mov
or
sar
push
ss
mov
sbb
in
call
call
xchg
call
pop
add
(bad)
mov
inc
add
cmps
xchg
add
ja
ror
jne
shl
aaa
mov
xchg
mov
(bad)
in
pop
adc
into
(bad)
adc
(bad)
sti
lods
das
hlt
sahf
jae
push
xor
xor
pop
ror
call
shl
js
je
or
xchg
ins
test
adc
push
inc
sbb
and
add
shl
jbe
mov
fisttp
jns
mov
dec
frstor
mov
aad
lods
mov
lock
sbb
rcr
xchg
push
sahf
adc
or
ret
mov
pop
mov
pop
call
jg
jo
fucomi
jns
jp
mov
mov
jne
add
push
push
dec
inc
and
add
cld
retf
test
fbstp
dec
into
out
cmps
(bad)
jecxz
inc
test
pop
mov
rcr
test
scas
pop
mov
cmp
inc
add
shl
iret
jg
(bad)
imul
inc
jg
imul
jb
push
jge
or
fisubr
pop
add
push
jo
push
cmc
fdivr
add
sub
out
call
pop
pop
aas
cli
cmps
retf
scas
pop
repz
je
shr
xchg
(bad)
cmps
mov
dec
mov
fnsave
out
sub
ret
js
in
sbb
dec
pop
cmp
ja
cs
pop
mov
sar
test
mov
int
out
out
and
pop
sti
out
hlt
fsubr
pop
mov
adc
jmp
shl
stos
ret
lds
add
inc
push
jp
je
pop
sbb
jbe
pop
jg
cmp
xor
pop
imul
fbld
lea
push
outs
xchg
div
repz
retf
out
xchg
cmp
and
fnstcw
in
cld
mov
movs
imul
jmp
mov
dec
rcl
lds
mov
push
aas
mov
xlat
enter
pop
lods
das
mov
jns
cld
mov
add
loopne
or
jbe
add
out
add
out
movs
pop
fistp
outs
pop
sbb
mov
cmc
sbb
cmp
je
ss
mov
push
fisttp
call
cmp
icebp
lea
jno
(bad)
xor
lahf
mov
addr16
cmp
cs
xor
retf
mov
jle
popa
aaa
stc
fist
push
out
mov
out
repnz
test
(bad)
cmc
shl
loope
aaa
mov
fucom
mov
pop
hlt
aas
aaa
(bad)
cmp
push
xlat
pop
pusha
mov
sbb
mov
add
or
sbb
mov
pop
call
push
xchg
push
shl
cmc
cld
cmp
movs
cmp
ror
jecxz
(bad)
jmp
or
and
aaa
out
adc
or
push
lea
imul
cmc
pop
cmp
cmp
out
into
and
outs
dec
ins
ret
xlat
out
imul
fcmovnu
mov
push
mov
mov
mov
jne
repnz
not
jl
leave
pop
xor
dec
push
out
xor
(bad)
ds
pop
mov
jmp
inc
(bad)
cmc
mov
pop
repz
leave
cli
add
cmp
push
mov
fisttp
inc
pusha
xchg
ret
cmp
push
(bad)
xchg
pop
and
jne
xor
jmp
adc
inc
xchg
nop
jbe
mov
ds
int
shr
cmp
into
cmp
sbb
loop
popf
repz
std
fld
(bad)
jne
xchg
dec
stos
mov
jle
xor
rcl
jg
sbb
cmps
add
imul
scas
shl
leave
jp
pop
aaa
push
mov
test
inc
icebp
je
(bad)
pop
pop
and
loop
dec
repz
push
push
pop
sub
cld
test
dec
mov
sar
popf
aad
dec
imul
pop
lds
test
jge
aas
aas
jne
out
leave
cmc
add
aad
dec
sbb
adc
mov
jmp
retf
scas
push
xor
sbb
jnp
(bad)
xor
shr
fisttp
lea
leave
out
cmp
xchg
data16
sti
mov
lods
mov
xor
movs
push
and
mov
mov
or
(bad)
repz
into
jns
daa
jmp
mov
lock
stos
mov
xchg
je
adc
push
fnstcw
(bad)
sbb
imul
popf
sbb
jecxz
cmc
out
jp
call
je
std
cmps
mov
lahf
imul
add
mov
je
or
test
or
push
add
add
xor
fcomp
sbb
jae
call
and
add
add
inc
fcmovnu
or
xchg
clc
adc
adc
add
pop
mov
xor
pop
in
(bad)
lahf
adc
out
lods
rol
mov
dec
push
add
lahf
inc
add
add
dec
cdq
mov
clc
adc
adc
add
lods
jae
(bad)
pop
clc
mov
mov
popf
mov
add
and
add
and
mov
add
add
add
dec
xchg
adc
push
or
cld
fs
dec
inc
add
sub
mov
(bad)
cdq
icebp
daa
add
add
rcl
loopne
sbb
retf
pop
loope
adc
xchg
js
inc
(bad)
adc
jecxz
std
and
add
add
cs
dec
add
(bad)
movs
mov
add
add
lea
mov
jg
add
fisttp
xor
adc
aaa
ds
mov
sbb
test
or
add
push
addr16
xchg
dec
jecxz
inc
jecxz
int3
test
add
and
add
stos
mov
sub
mov
mov
add
add
popf
aad
test
sub
lods
add
dec
xchg
add
add
add
lods
jle
xor
inc
mov
imul
jecxz
loop
add
add
ret
and
or
mov
add
(bad)
pop
add
add
or
push
add
add
mov
add
add
push
xchg
aad
dec
inc
jecxz
xor
lods
lock
xchg
clc
fwait
jno
push
cmp
out
cs
push
and
inc
cld
dec
aas
add
add
add
and
mov
daa
add
sti
icebp
aaa
xchg
add
aaa
mov
add
rcl
movs
pop
cld
dec
sbb
mov
xchg
sbb
pop
iret
add
stos
jnp
push
mov
scas
jne
sbb
mov
int3
or
add
imul
jae
push
sub
lods
lock
jle
push
or
cmc
sbb
pusha
sbb
out
inc
cmps
sbb
add
add
dec
cld
cmp
dec
aas
dec
imul
leave
pop
dec
add
add
mov
sub
cmp
inc
(bad)
ficom
and
add
jp
add
pusha
retf
test
cld
dec
in
sub
stc
xor
out
int3
inc
ins
or
sub
xor
xor
add
or
popf
xchg
les
sub
movs
pop
jg
add
mov
(bad)
fdivr
add
pusha
(bad)
ds
out
scas
shr
lahf
or
sbb
std
clc
fwait
jmp
mov
mov
and
add
xor
jp
mov
lea
cld
popf
mov
shl
or
jle
add
and
aas
cdq
out
pop
aas
add
sbb
add
pusha
call
mov
sar
add
out
and
lods
pand
add
add
cdq
imul
das
and
add
add
inc
imul
and
sbb
pop
aas
add
icebp
pop
pop
pusha
sub
jo
xchg
add
add
xor
push
fs
arpl
std
aad
sub
xchg
add
mov
push
out
add
clc
add
add
jmp
push
jnp
xchg
(bad)
std
sub
rcl
stos
sbb
add
add
adc
sahf
mov
retf
test
jg
add
pop
das
add
or
rcr
les
push
call
add
mov
mov
push
imul
pop
jl
mov
xor
and
xchg
xor
add
or
push
sub
addr16
pop
jg
add
fwait
cmps
or
fdivr
rol
shl
mov
shl
retf
fisttp
inc
aas
cli
xchg
push
and
sbb
add
sbb
cmp
add
push
aaa
xor
call
iret
sbb
or
out
ror
add
test
lock
push
push
xchg
jb
icebp
xlat
cmovo
cld
cmp
inc
mov
arpl
iret
or
mov
xor
je
adc
pusha
jne
and
dec
push
cmp
(bad)
lahf
mov
(bad)
sub
push
aaa
add
add
dec
mov
aas
sub
and
aas
sub
(bad)
clc
and
sbb
add
ins
ror
xor
into
and
push
jecxz
in
call
inc
(bad)
ds
xor
pop
iret
cdq
or
add
inc
jg
outs
cmc
inc
mov
add
pop
popa
add
mov
or
das
or
hlt
scas
dec
add
pop
mov
add
aam
(bad)
mov
retf
test
add
lds
sbb
cmps
xchg
push
or
push
ret
cmp
add
jmp
repz
dec
ins
adc
push
movs
xlat
push
cs
jecxz
or
scas
push
(bad)
icebp
xlat
push
pushf
mov
out
mov
lahf
sbb
pop
push
mov
pop
(bad)
clc
sbb
cli
sub
shr
push
fst
jbe
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
cmp
mov
inc
or
add
or
add
add
or
add
add
repz
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
bound
inc
add
add
add
mov
add
pop
je
dec
inc
pop
fiadd
sbb
push
sbb
mov
add
inc
outs
ins
ins
outs
je
add
add
inc
jb
popa
je
and
je
and
dec
push
fs
add
call
inc
inc
push
js
in
mov
jp
jns
jnp
fist
imul
push
adc
push
push
out
mov
jbe
out
mov
imul
jbe
xchg
ss
mov
and
sbb
js
dec
cmp
int3
cmp
ja
or
pop
fwait
mov
pop
add
or
or
ret
ja
daa
(bad)
(bad)
jle
and
cwde
loopne
xchg
mov
xor
mov
int3
dec
mov
stc
adc
sbb
jmp
xchg
fld
jae
fsub
inc
out
pop
mov
xlat
in
sub
xchg
add
outs
mov
mov
ss
jmp
out
cld
push
fst
repnz
stc
pop
jns
mov
aas
stos
jmp
mov
enter
out
out
aaa
dec
fidiv
xor
xor
ficom
rcr
shl
xchg
aaa
gs
dec
pmaxsw
(bad)
sahf
add
adc
inc
mov
(bad)
adc
jbe
inc
clc
retf
mov
or
call
add
sub
inc
test
cli
lahf
mov
xchg
xchg
jmp
data16
(bad)
sub
pop
xchg
hlt
xlat
sbb
dec
jg
add
sbb
ins
xor
jge
pop
lock
pop
add
pop
cmp
fldenv
push
cmp
jmp
lea
xchg
jo
add
out
dec
and
gs
sbb
xchg
pop
aad
in
mov
sti
cwde
push
loop
in
sar
in
outs
fbstp
mov
out
out
or
fcmovnb
cmp
ins
das
dec
fimul
push
popf
iret
adc
iret
test
(bad)
or
lds
or
call
dec
pop
shl
fnstsw
mov
mov
scas
test
xchg
leave
xchg
out
iret
dec
neg
jo
sub
out
jns
retf
sub
inc
loopne
adc
dec
sbb
cmp
inc
add
aam
lods
add
mov
add
jne
test
pusha
cmp
je
loopne
xchg
movs
xchg
inc
push
add
add
rcr
adc
lahf
dec
add
inc
add
push
push
push
dec
sbb
loop
pop
xchg
mov
into
retf
enter
rcr
call
xlat
repnz
into
mov
call
retf
aas
cld
cmp
push
mov
jno
push
dec
mov
jbe
movs
ins
and
ins
xchg
das
mov
mul
in
pop
shr
inc
adc
and
inc
push
aas
pop
arpl
push
popf
lods
fs
daa
inc
(bad)
or
xlat
inc
ja
jne
montmul
cmps
add
xor
or
mov
rol
test
push
test
loope
xchg
and
push
pushf
inc
push
mov
dec
and
adc
and
je
shr
adc
add
mov
jbe
xor
nop
xchg
xchg
inc
dec
loopne
sub
inc
add
pop
stos
aas
pop
cmp
cmp
pop
add
cmc
add
call
clc
dec
call
sbb
or
xor
stos
retf
aam
retf
scas
or
mov
iret
test
mov
jp
sbb
jnp
cs
(bad)
ss
mov
out
jge
adc
leave
adc
pop
repnz
(bad)
or
inc
call
lahf
add
scas
fistp
je
hlt
test
sti
mov
mov
jl
jnp
mov
pop
inc
imul
mov
mov
mov
jno
lds
(bad)
xchg
in
ss
pop
movs
xchg
sar
jno
mov
inc
or
jo
push
gs
mov
and
push
adc
add
xchg
inc
and
sar
bound
adc
lds
sub
dec
cmp
ja
sbb
lds
pop
fiadd
sub
xor
in
aas
mov
dec
sub
jmp
daa
ins
dec
test
das
pop
ds
test
jg
in
cmp
jge
call
repnz
js
fwait
movs
jge
xor
cmp
add
das
daa
pop
mov
or
add
(bad)
adc
mov
aas
cs
(bad)
adc
pop
mov
loopne
(bad)
scas
jae
idiv
sbb
add
jle
dec
aam
adc
icebp
adc
scas
dec
jno
mov
adc
push
call
rep
add
dec
add
rcl
adc
repnz
add
stos
dec
pop
xchg
inc
pop
add
lods
xchg
xchg
jb
push
dec
mov
rol
rcr
add
sbb
add
int3
and
inc
ficom
outs
push
ja
xor
out
in
ja
pop
mov
enter
cli
fxch
je
fidivr
enter
jbe
addr16
shr
dec
cmp
mov
cs
mov
popf
je
das
and
fbld
mov
in
lods
cmps
leave
xchg
ss
jb
inc
pushf
jl
bnd
dec
adc
(bad)
in
sbb
pop
and
cmp
daa
stc
mov
cmps
out
pop
aam
movs
(bad)
into
daa
add
pop
sar
mov
xor
pop
(bad)
push
mov
call
dec
and
inc
and
add
fst
sub
dec
mov
inc
xlat
(bad)
ja
pop
cmp
jecxz
stc
fimul
(bad)
call
imul
inc
xchg
(bad)
add
fs
xor
sti
iret
cmc
sti
aam
cmp
jle
in
gs
pop
dec
mov
lods
sub
xrelease
in
fisub
cmp
xor
cmp
mov
in
out
inc
sar
xor
xor
jge
ret
(bad)
sub
xchg
or
jp
jno
pop
and
mov
cs
pop
mov
pop
lods
outs
mov
(bad)
je
or
rol
inc
leave
call
icebp
(bad)
or
scas
mov
mov
push
lods
sti
and
out
or
call
addr16
mov
inc
push
pop
(bad)
sbb
inc
add
push
and
mov
clc
and
push
inc
add
mov
shr
movs
dec
mov
pop
cwde
add
aas
(bad)
(bad)
adc
mov
xor
sar
mov
les
das
mov
and
mov
into
dec
and
xchg
xchg
inc
imul
dec
xchg
fist
(bad)
and
jns
repz
jns
popf
(bad)
lea
ins
dec
(bad)
mov
xchg
mov
gs
mov
adc
in
dec
std
lods
cmp
inc
cmp
addr16
jmp
push
jne
in
jb
repz
jbe
jnp
div
fwait
xor
jmp
pop
pcmpeqb
cwde
in
enter
mov
iret
and
inc
fnsave
cmp
imul
cmps
or
push
in
mov
mov
dec
push
fadd
sbb
aas
dec
inc
or
dec
add
and
adc
adc
int3
push
sub
test
add
dec
xor
aam
dec
xchg
inc
pop
add
add
mov
xor
arpl
punpckhbw
sti
add
das
or
or
push
mov
cdq
push
and
and
sbb
sbb
retf
push
enter
arpl
xor
outs
dec
dec
retf
retf
shr
cmp
imul
nop
inc
push
dec
xchg
xlat
mov
shl
mov
mov
xor
xor
repnz
repnz
fisttp
scas
ins
and
dec
fmul
in
xchg
out
mov
dec
push
je
in
pop
cdq
pop
scas
dec
jmp
xor
or
lods
in
aaa
jp
retf
add
mov
test
push
ss
imul
xchg
aas
retf
enter
outs
scas
mov
stc
xchg
adc
add
add
add
rol
mov
mov
or
mov
loop
and
ror
adc
sbb
push
daa
push
mov
vminpd
ret
xchg
in
add
gs
movs
xchg
dec
cs
sub
sti
scas
push
in
fscale
out
rcr
repz
xchg
mov
mov
shl
mov
jne
mov
mov
aaa
scas
std
in
sbb
mov
mov
cmp
inc
xchg
aas
sbb
dec
mov
out
gs
or
sbb
add
mov
dec
sbb
cld
popf
pop
test
out
xor
je
sbb
test
or
sar
and
mov
or
xor
add
xchg
rcl
mov
xor
inc
cmp
in
jle
or
(bad)
or
cmp
add
mov
ja
pop
aaa
jo
icebp
and
jp
push
jo
inc
cs
cmp
stc
(bad)
popf
xchg
popf
iret
jmp
out
or
in
jae
call
ins
(bad)
cmc
int
and
pop
es
jl
imul
pop
ficom
adc
pusha
pop
cs
inc
add
xlat
repz
mov
inc
in
jmp
mov
mov
cld
test
sbb
and
add
or
fcom
call
enter
add
inc
mov
cmps
dec
loopne
rcl
or
and
adc
leave
pop
call
test
pop
clc
in
movs
cmp
add
mov
mov
or
mov
loope
xchg
adc
movs
jne
iret
cmp
mov
outs
retf
in
mov
cmc
mov
push
xlat
pop
adc
cli
sub
(bad)
and
repnz
in
adc
sbb
add
inc
push
push
ror
inc
das
jb
add
aam
out
cmp
ins
je
ds
pop
stc
ins
mov
sahf
adc
iret
cmp
repz
and
dec
xchg
imul
adc
and
enter
outs
adc
push
and
or
mov
sub
jle
out
mov
imul
pop
lds
jmp
cmp
leave
mov
shl
xchg
dec
into
das
mov
dec
pop
pop
and
sub
sbb
neg
mov
ss
stc
lock
or
jg
in
pop
cmp
or
mov
in
pop
imul
sbb
addr16
push
jo
dec
mov
jg
stc
xchg
in
sub
mov
adc
mov
jo
in
pop
add
push
or
inc
pop
add
sar
mov
rcr
mov
into
xor
push
outs
in
pop
xlat
dec
mov
or
xacquire
jnp
jmp
outs
jg
mov
out
dec
pop
cmps
mov
dec
lock
(bad)
inc
ja
pop
mov
jmp
mov
scas
ja
cmp
pop
in
xchg
sar
xchg
in
cmp
fs
stos
outs
mov
inc
or
pop
add
xchg
mov
test
or
and
add
add
jae
push
in
mov
fsubr
push
xor
mov
jge
daa
jne
rcr
int3
sti
lea
inc
int
jmp
cs
xchg
std
ficomp
jnp
mov
test
in
(bad)
das
mov
mov
pop
pop
cmp
lock
je
jne
and
out
psubusb
je
adc
scas
out
sti
sbb
vucomisd
mov
inc
cmp
and
mov
add
dec
and
sbb
or
cmp
out
xchg
arpl
pushf
cmp
leave
jne
cmp
sub
ins
je
vpshaq
mov
in
movs
jl
scas
ja
xchg
lahf
sbb
push
and
jg
mov
mov
push
jle
pushf
xor
mov
retf
lock
mov
fild
daa
xchg
cld
(bad)
xor
mov
lahf
pop
sub
push
in
and
jbe
retf
push
xchg
sahf
popa
cmp
test
ret
and
mov
inc
mov
inc
add
and
xchg
inc
inc
add
call
sub
mov
and
xor
adc
cmp
cld
mov
jmp
lea
xor
fcom
in
jae
add
fdiv
sar
xor
xor
ss
push
add
mov
repnz
in
lds
fwait
test
popf
mov
jle
xor
mov
pushf
inc
xchg
shl
cmp
push
out
pop
ret
arpl
sbb
sub
pop
not
mov
aas
leave
jmp
mov
sub
xchg
push
xchg
iret
call
xchg
inc
add
shl
push
gs
xlat
inc
(bad)
frstor
pop
add
dec
loopne
xor
or
add
pushf
test
loop
test
pop
daa
or
add
add
popf
pop
push
mov
loope
sahf
jno
mov
inc
dec
cmps
dec
aad
retf
sti
mov
pusha
jecxz
mov
fcomp
mov
cdq
ja
repz
setl
push
(bad)
jmp
dec
fdivr
(bad)
jge
inc
movs
ja
cmps
out
dec
xchg
dec
sub
dec
pop
scas
jge
je
jae
stc
jp
and
jge
dec
mov
mov
enter
mov
(bad)
push
sub
sub
and
or
xchg
push
cld
lds
pop
fldenv
add
add
dec
mov
pusha
push
or
add
pop
cmp
mov
jmp
mov
(bad)
or
sbb
pusha
mov
xchg
ja
jle
arpl
jmp
mov
jl
loop
xchg
repz
cmps
inc
cmps
int
xlat
ss
(bad)
(bad)
mov
cmp
jl
(bad)
push
ja
cmp
cdq
shr
repz
sbb
or
jno
sub
cmp
mov
sahf
imul
mov
mov
xchg
sub
inc
add
test
inc
ins
mov
pop
add
aam
dec
adc
(bad)
or
jbe
push
xchg
xchg
inc
inc
add
cs
pusha
(bad)
iret
cmp
fnstcw
dec
mov
cdq
cli
cmp
daa
out
gs
dec
sub
xlat
mov
outs
das
shl
(bad)
inc
int
leave
stc
(bad)
mov
out
pop
lahf
add
jmp
movs
fld
mov
cmc
jbe
fnsave
dec
loopne
mov
out
fwait
(bad)
sbb
mov
or
scas
iret
(bad)
mov
sub
mov
dec
push
out
and
lods
scas
js
test
sahf
bound
xor
ins
stc
cmp
sub
retf
nop
add
fcom
add
test
aam
je
jmp
push
pop
push
jle
leave
js
nop
inc
dec
pop
imul
popf
inc
ror
cmp
dec
cmp
jl
fbld
ds
mov
idiv
or
je
leave
sub
out
pop
pop
push
ds
mov
mov
test
sub
push
rcr
inc
mov
pop
dec
stc
or
jmp
pop
(bad)
aam
cs
jbe
and
jns
jnp
cmps
inc
icebp
push
popf
xlat
and
js
jmp
xlat
jo
dec
adc
pop
cld
xchg
mov
rcl
cmp
add
jmp
add
fdiv
mov
adc
jae
gs
adc
mov
cmp
nop
mov
movs
sar
aaa
mov
nop
idiv
and
dec
mov
div
xchg
in
inc
mov
xor
into
popa
fmulp
jmp
leave
jne
pop
jmp
hlt
xor
adc
lds
pop
fld
call
jle
jno
repz
sub
mov
dec
mov
aas
outs
mov
cld
inc
out
dec
sub
xchg
and
xchg
push
add
push
daa
or
inc
(bad)
sub
(bad)
dec
loopne
dec
aas
push
jnp
cwde
movs
xchg
cmps
cmp
mov
loop
fs
sbb
sahf
jb
addr16
cmps
jb
push
cmp
push
push
mov
xor
rcr
cmp
in
or
aas
mov
or
sub
mov
ret
mov
sti
lods
mov
push
push
dec
and
sub
ins
push
arpl
test
jmp
jp
retf
dec
mov
sub
outs
xchg
dec
add
nop
add
sbb
aam
pusha
mov
cmps
adc
adc
lods
inc
and
out
(bad)
xor
dec
ja
sub
sbb
jo
leave
dec
es
add
addr16
xchg
inc
or
into
mov
sub
fsub
neg
das
sahf
iret
sbb
mov
jmp
not
pop
cs
push
and
(bad)
sbb
dec
jmp
sbb
pop
mov
inc
sti
dec
xchg
iret
pop
fisttp
mov
sbb
inc
retf
ins
add
pop
movs
inc
add
test
inc
pop
add
adc
adc
call
jo
push
inc
xchg
add
add
adc
dec
mov
mov
dec
xchg
add
jl
cmps
and
das
call
cmps
out
add
lods
(bad)
push
add
xor
pop
xchg
pop
mov
ja
adc
or
push
sub
ds
daa
je
jnp
popf
sbb
outs
call
xchg
inc
mov
pop
in
jnp
ja
out
neg
xchg
xchg
add
sbb
out
add
xchg
dec
mov
pop
clc
mov
push
sub
mov
or
and
test
mov
push
repz
inc
jnp
sub
push
cld
push
test
mov
jns
mov
call
mov
movs
sbb
jge
mov
dec
cmp
inc
neg
adc
jl
fsubr
cmp
cmp
jne
pusha
mov
lahf
sub
(bad)
movs
sbb
jecxz
mov
retf
sar
sbb
mov
shr
adc
pop
hlt
jb
rcr
adc
inc
add
push
mov
or
stos
add
add
push
call
repnz
mov
aas
loopne
and
and
jbe
xchg
stc
and
mov
je
fucomp
aam
jmp
test
pop
sbb
imul
mov
xor
xchg
aas
scas
retf
jmp
jecxz
idiv
addr16
push
mov
sbb
cmp
mov
pop
and
daa
adc
test
out
push
add
xor
adc
or
dec
mov
and
cmp
mov
mov
jmp
arpl
int
cmps
sahf
xor
(bad)
mov
push
je
push
and
in
arpl
sahf
add
out
add
pusha
push
jno
mov
add
stos
sbb
in
add
jo
add
scas
pop
cwde
rol
adc
add
or
push
cld
push
pusha
mov
cdq
shl
xchg
and
aas
xor
dec
xchg
cmp
sbb
out
push
or
imul
into
xchg
adc
pushf
push
int
(bad)
adc
mov
mov
push
cmps
jae
fild
push
stc
mov
or
pop
fsub
pop
outs
xchg
mov
inc
dec
mov
push
popf
add
div
jae
inc
mov
mov
gs
popf
add
xchg
inc
inc
add
aas
and
sub
fimul
adc
pop
mov
fbld
mov
dec
retf
jne
lods
jecxz
xchg
jecxz
shl
mov
and
pop
aaa
mov
jb
popa
mov
dec
sub
repnz
idiv
pop
push
iret
xchg
cmp
mov
rcl
div
mov
pusha
jmp
add
sbb
adc
adc
mov
lock
sub
inc
dec
fistp
retf
mov
pop
dec
adc
add
mov
clc
and
dec
aad
shr
xchg
sti
xchg
sti
retf
xchg
arpl
and
out
xlat
popf
pop
or
or
pusha
fsubr
enter
jl
push
(bad)
stc
out
arpl
enter
iret
adc
mov
dec
pop
scas
xchg
push
jmp
mov
in
or
add
sub
sub
dec
adc
inc
push
xchg
inc
push
add
add
std
pusha
pop
cld
and
inc
jg
jae
pop
inc
fld
adc
sahf
(bad)
sbb
pusha
ret
lahf
push
cdq
adc
jne
jge
fcomp
lods
cmp
push
pop
dec
das
ins
and
push
mov
in
aaa
cdq
mov
jne
sti
xor
xchg
iret
cld
mov
dec
iret
mov
lea
push
dec
ret
stos
add
adc
add
adc
pusha
xchg
add
dec
mov
(bad)
xchg
fsub
int3
mov
dec
mov
movs
ror
dec
lock
jecxz
aad
xor
sti
adc
(bad)
stos
aas
aaa
push
test
push
pop
xor
mov
sub
sbb
pushf
addr16
mov
dec
adc
leave
or
enter
push
ins
add
inc
add
mov
in
or
or
push
xchg
inc
shr
push
(bad)
or
aas
jns
mov
out
adc
or
aaa
pop
outs
sbb
inc
mov
xchg
call
ja
ret
inc
ja
or
sub
pop
and
inc
(bad)
ins
pop
mov
jne
jg
test
shl
in
cmp
popa
leave
retf
sub
adc
pusha
mov
pusha
and
add
and
je
out
adc
or
mov
ins
outs
js
ror
push
jle
gs
mov
inc
mov
(bad)
pop
(bad)
out
pushf
sbb
fnsave
pusha
cmp
pop
xchg
faddp
popf
scas
setne
or
(bad)
sti
(bad)
je
or
aas
adc
test
inc
pop
add
mov
dec
add
vpcmpgtb
adc
ins
das
repnz
je
je
jmp
push
xor
or
into
call
iret
xchg
test
fwait
aaa
pushf
sbb
mov
inc
sti
ins
xor
mov
addr16
xchg
mov
ror
and
add
or
mov
xor
sahf
and
adc
or
scas
movs
shld
or
inc
xchg
test
push
pop
lahf
mov
sbb
aam
popf
pop
add
fsub
push
ret
dec
pop
stc
fld
xlat
pop
xor
in
add
inc
add
dec
and
push
add
inc
add
aam
in
mov
call
cmp
mov
sti
or
cmp
arpl
dec
cmp
fld
dec
mov
xchg
ds
cmp
test
mov
pop
and
or
das
or
daa
jbe
psubsb
sbb
or
pop
push
jge
rcr
daa
dec
(bad)
xor
mov
inc
ja
sbb
or
jecxz
cmp
in
jle
repz
pushf
push
cmp
and
mov
pusha
mov
fiadd
cwde
add
pusha
mov
xchg
inc
lods
add
jle
push
cmc
test
call
xor
jno
out
pop
mov
(bad)
sti
call
adc
and
push
ins
fmul
aad
jb
xchg
mov
nop
xlat
ins
je
rcl
cmp
dec
cld
ror
and
xchg
fs
pop
dec
mov
test
pusha
mov
enter
mov
cmp
pop
xor
adc
xor
arpl
jae
jecxz
daa
leave
mov
mov
call
neg
setne
loopne
xchg
repz
out
push
and
(bad)
into
(bad)
jmp
out
cmp
adc
and
add
add
xchg
add
inc
(bad)
cmp
int
(bad)
xor
repz
pushf
fcmove
or
sub
jmp
push
add
stc
dec
pop
xchg
cs
cmp
out
mov
push
mov
jbe
fmul
mov
add
add
xchg
mov
div
or
and
xchg
rcr
lock
(bad)
dec
xchg
jmp
jb
dec
pop
jnp
out
cld
sbb
and
fcomp
test
push
inc
jnp
push
add
mov
jmp
cmc
dec
adc
fucomp
retf
pusha
js
mov
add
sub
sub
xor
mov
enter
inc
popf
add
mov
data16
push
rcl
rcr
ror
fisttp
bound
into
xchg
out
sbb
bnd
cmp
dec
(bad)
adc
jae
fild
mov
xor
dec
inc
fld
in
jnp
dec
scas
jmp
in
push
lods
hlt
movs
inc
daa
adc
add
pop
add
adc
out
add
loopne
and
inc
inc
ja
or
mov
imul
inc
jae
cmc
call
cs
jmp
shl
(bad)
sti
push
fimul
icebp
sbb
lds
xchg
ds
inc
xchg
mov
add
pop
add
js
loop
aam
and
gs
mov
hlt
in
outs
jne
hlt
sub
sbb
(bad)
cmps
shl
in
jmp
lea
pop
cmp
jnp
pop
retf
mov
add
clc
jbe
or
into
and
enter
adc
and
popf
jbe
cmps
jge
jmp
out
popf
dec
(bad)
dec
sahf
push
add
pop
daa
shr
xchg
jmp
js
jo
xrelease
mov
pop
jo
jo
and
dec
adc
pop
add
dec
mov
out
sbb
mov
test
pop
mov
inc
ja
je
pop
dec
xchg
or
ret
repnz
test
jb
daa
dec
daa
sbb
lea
movs
fstp
into
cmp
or
sub
std
mov
shl
push
push
dec
and
das
push
and
daa
or
das
sbb
mov
cwde
xchg
leave
inc
ja
je
pop
push
aaa
sbb
daa
xlat
mov
fist
jmp
jae
dec
xchg
imul
xor
cmp
lock
cmp
inc
cmp
mov
cmp
and
call
sub
cwde
adc
jmp
fld
jmp
icebp
call
mov
movs
mov
dec
aam
inc
idiv
xchg
fscale
jns
sbb
sub
fmul
fldenv
inc
mov
fdiv
mov
das
inc
add
adc
shl
add
repnz
mov
mov
xchg
or
inc
in
xlat
jb
jle
and
sti
dec
push
mov
inc
mov
jno
jg
pushf
test
dec
adc
ds
(bad)
ds
iret
pop
int
jecxz
pop
push
jmp
cmp
ret
mov
mov
jns
mov
sti
jns
(bad)
jnp
xor
pop
js
sub
fisub
pop
jle
test
xchg
add
sub
fld
add
mov
add
adc
or
mov
loope
sub
xchg
ss
lods
ins
jmp
cmp
ret
cmps
loopne
or
cmc
jns
loope
xchg
dec
jp
pop
pop
xchg
jg
mov
xchg
(bad)
jbe
sub
jns
repnz
mov
dec
jmp
retf
retf
dec
and
lea
call
sub
in
rcr
lods
out
addr16
xchg
je
mov
(bad)
cmp
jle
lock
mov
jmp
and
cli
daa
mov
hlt
lahf
xchg
and
pop
and
aas
dec
fsin
fisttp
dec
shr
pop
push
xlat
idiv
out
pop
push
out
xchg
push
not
pop
hlt
das
shr
ficom
(bad)
and
outs
jg
loope
and
or
fist
push
mov
xchg
dec
add
inc
nop
dec
add
cld
sub
out
add
retf
fidiv
xchg
xlat
jno
scas
jmp
daa
jge
lock
std
xchg
sbb
push
bound
(bad)
adc
dec
in
pop
shl
aas
idiv
(bad)
jno
xchg
lods
retf
jge
ins
repz
pop
inc
mov
repnz
repz
mov
jnp
fwait
jg
sbb
cmp
fprem
jecxz
dec
cli
int
imul
dec
into
shl
enter
outs
shl
mov
mul
das
lock
xchg
jne
jp
cmps
fisttp
jge
or
(bad)
out
(bad)
jge
ror
add
fucomi
scas
out
inc
or
jle
sbb
cmps
push
adc
ds
pop
push
fdiv
sbb
neg
push
adc
(bad)
loope
je
fmul
movs
adc
xchg
in
test
sub
or
or
sub
retf
pusha
dec
push
das
push
cmc
inc
icebp
mov
xchg
ret
pop
dec
fisub
push
cdq
sti
pop
mov
in
pop
ret
cld
inc
shl
test
dec
int3
mov
fsub
sbb
jecxz
cmp
pusha
mov
mov
xchg
test
cmp
sti
test
add
xlat
mov
inc
jno
jg
cld
and
xchg
mov
inc
or
jb
scas
das
jle
jp
cmovp
call
sub
xchg
mov
ret
test
mov
std
cmp
cmp
sub
jl
mov
in
dec
add
mov
gs
jl
push
pop
or
cmc
adc
shl
loopne
mov
cmps
mov
pop
push
inc
and
xchg
pop
movs
(bad)
mov
pop
cmps
(bad)
push
push
ror
jge
pop
mov
stos
pop
lahf
xor
cmp
mov
(bad)
mov
mov
mov
into
cmp
push
test
std
push
xchg
mov
cmps
push
inc
mov
push
and
scas
inc
aam
(bad)
mov
adc
shr
inc
scas
mov
push
mov
std
mov
out
pop
jle
loope
(bad)
jle
jecxz
je
call
lea
cmps
loop
ror
xchg
adc
mov
cmp
mov
add
pop
sub
ror
cmc
stos
xor
sahf
jmp
sbb
out
lds
mov
adc
pop
stc
mov
outs
repnz
mov
mov
loope
out
js
add
or
aas
sbb
into
rcl
mov
sbb
cli
jl
shl
dec
pop
mov
xchg
mov
das
cld
mov
mov
(bad)
cmp
mov
push
inc
xor
pop
or
and
sbb
ror
test
or
lock
idiv
push
repz
jle
dec
lahf
scas
cwde
(bad)
jnp
cmp
enter
and
pop
fucomi
or
and
jmp
in
mov
sub
fwait
repnz
mov
(bad)
xor
fild
pop
aad
xor
rol
push
test
sbb
lock
jecxz
sahf
dec
cmp
stos
ret
xchg
pop
daa
xor
in
pop
add
add
mov
push
mov
nop
push
mov
cmp
jp
pop
xor
iret
loop
hlt
jns
inc
arpl
adc
mov
fnsave
and
sub
xchg
ins
mov
mov
and
clc
inc
and
xor
clc
dec
or
sub
mov
inc
pop
lahf
adc
loope
out
repnz
jo
push
enter
or
or
pusha
ror
dec
add
mov
push
pop
ror
mov
add
mov
push
sbb
int
or
pop
mov
push
add
mov
xchg
sar
sahf
fnsave
add
inc
inc
xchg
add
mov
(bad)
aam
inc
add
xor
fnsave
in
mov
je
cmps
ret
or
fnstcw
dec
ja
or
adc
movs
leave
pop
jge
mov
push
dec
sar
mov
shl
inc
loopne
push
ss
out
dec
pop
scas
fincstp
cs
pop
mov
sub
sub
aaa
sbb
inc
nop
or
outs
sti
xchg
sti
fbld
imul
lahf
les
daa
sub
shl
sar
push
adc
mov
cli
pop
pop
stc
xchg
mov
imul
ror
inc
mov
pusha
enter
adc
bnd
cmp
mov
mov
repz
adc
add
or
aam
xor
sub
jmp
or
pop
std
lods
cs
out
xchg
hlt
iret
jecxz
hlt
mov
inc
mov
cmps
call
or
or
jg
or
stc
pop
movs
jg
mov
popf
mov
pop
ror
hlt
cmp
mov
jno
out
(bad)
scas
sar
sbb
and
neg
stc
cli
aaa
mov
out
sbb
jmp
jle
cs
and
in
inc
outs
push
xlat
sti
repz
add
mov
adc
(bad)
adc
dec
jmp
ret
jg
int3
jg
(bad)
xchg
sub
mov
and
sar
fbstp
retf
(bad)
cld
add
ss
rol
and
out
rol
cmp
adc
pop
fisttp
sbb
jle
popf
call
push
repz
lods
mov
lock
pop
out
inc
add
fs
jle
test
pop
jmp
lock
cmp
lods
out
mov
xchg
test
and
iret
das
pop
ds
xchg
sbb
or
outs
je
mov
inc
imul
mov
(bad)
xchg
outs
pop
dec
xchg
or
scas
add
cmp
mov
enter
aaa
jmp
pop
adc
(bad)
and
lea
sti
dec
inc
mov
stos
sti
(bad)
fnstcw
push
cld
xchg
or
mov
or
add
lahf
les
loope
fwait
scas
iret
ror
test
and
ret
mov
loop
jmp
out
or
jmp
ja
mov
clc
mov
mov
out
(bad)
sbb
inc
(bad)
mov
daa
sub
adc
jns
sar
neg
push
mov
sub
daa
add
rcr
push
(bad)
sbb
das
or
or
out
mov
repnz
shl
movs
retf
cmp
into
and
mov
dec
pop
xchg
mov
pop
add
push
paddq
push
aaa
adc
xchg
mov
mov
cmps
fst
and
sub
dec
add
jno
fsubr
lock
out
inc
sti
movhlps
leave
mov
xor
and
pop
imul
retf
in
jecxz
xchg
inc
pop
add
out
retf
test
mov
mov
pop
add
cmps
loope
fsub
fistp
pop
lods
shr
(bad)
dec
(bad)
mov
(bad)
sti
fwait
mov
or
aas
scas
out
jle
pop
leave
fisttp
aas
das
inc
push
pop
in
sub
fdiv
pop
daa
cmps
push
(bad)
sbb
adc
xor
cmc
int3
fstp
in
jb
inc
mov
fisttp
mov
add
or
add
jmp
popa
std
push
std
imul
xor
adc
mov
sbb
je
lock
hlt
mov
movs
jnp
pop
(bad)
sub
add
cli
xor
jmp
imul
sub
call
adc
cmc
adc
aam
sar
sti
cmp
inc
stos
(bad)
and
push
inc
dec
mov
mov
xchg
mov
or
xchg
xor
ss
mov
dec
repz
clc
jp
xlat
xlat
fst
jns
add
call
mov
pop
(bad)
cli
mov
stos
pop
stc
or
repz
xchg
and
mov
jnp
xchg
je
(bad)
push
xor
pop
es
or
mov
leave
xor
repnz
pcmpeqb
rol
add
lahf
push
mov
rcr
cwde
lock
and
inc
ror
mov
(bad)
xor
mov
adc
icebp
inc
dec
mov
cmp
jg
cld
xchg
nop
cmp
mov
push
cmc
cli
fsubr
and
push
jg
xchg
push
sti
inc
test
rcl
outs
mov
(bad)
loopne
addr16
out
loopne
enter
and
pop
add
or
pop
pop
mov
jbe
sti
cli
add
mov
push
cwde
jb
in
xchg
mov
or
into
add
movs
pop
(bad)
jmp
xlat
ror
pop
jl
ins
mov
adc
into
lock
pop
lock
rol
rcr
mov
jnp
pcmpgtw
sbb
dec
push
int3
push
jmp
and
and
neg
add
jne
mov
enter
ja
inc
mov
push
clc
xchg
push
adc
lods
pop
jmp
dec
fs
or
je
sar
mul
sbb
movs
sti
pop
cmp
pushaw
addr16
add
xchg
iret
sub
loopne
add
sti
shl
mov
or
cli
mov
das
xor
lahf
test
sub
jle
clc
mov
call
(bad)
scas
pop
sub
cmp
mov
iret
mov
das
or
aaa
or
add
dec
xor
test
retf
mov
pop
pop
imul
cli
aaa
call
lahf
gs
jl
xor
add
pusha
push
stc
cli
pop
fsub
out
cmp
sub
cmc
in
push
movs
cmp
enter
(bad)
clc
gs
jp
cli
push
cld
xchg
xchg
cld
loopne
lods
(bad)
mov
pop
retf
add
sbb
pop
lods
call
movs
ret
push
adc
aas
adc
aad
aam
mov
repnz
rsqrtps
(bad)
jl
mov
jge
aam
pop
lahf
mov
inc
mov
inc
and
mov
das
stc
addr16
bound
xor
xchg
pop
xchg
out
clc
cmp
stos
pop
mov
lock
iret
mov
pop
ds
dec
jecxz
addr16
popf
add
push
add
aam
sub
popa
jg
inc
pop
adc
gs
cmp
pop
xchg
jle
jp
stc
mov
inc
repnz
cs
gs
movs
xchg
cmps
add
scas
cs
xchg
arpl
inc
mov
pop
lahf
or
je
jnp
sub
jmp
retf
mov
(bad)
add
pop
add
out
dec
pop
std
ins
fldenv
test
cmc
int
mov
lds
out
std
ins
add
mov
mov
icebp
sti
daa
sti
pop
out
shl
test
iret
rol
inc
inc
not
xchg
and
pop
stc
add
jns
pusha
outs
add
inc
js
popa
cdq
test
data16
inc
mov
push
sub
xor
pop
or
mov
nop
pop
inc
shr
sub
(bad)
sti
dec
mov
imul
mov
sti
rcr
jmp
jg
adc
das
dec
aam
jae
imul
cmp
push
sbb
sub
or
fdiv
mov
cld
lods
outs
sti
(bad)
clc
(bad)
push
sbb
ss
outs
cmp
or
imul
in
push
shl
sub
ins
fdivr
shl
or
sub
push
rol
adc
sbb
adc
sub
add
sbb
add
sti
jg
idiv
rol
mov
adc
inc
jmp
mov
inc
pop
xor
jge
fsub
or
ins
adc
xor
icebp
out
pop
inc
sub
(bad)
scas
jae
fld
push
dec
xchg
add
jg
push
pop
mov
push
mov
sub
push
mov
jne
jne
or
(bad)
std
xchg
jae
jo
add
add
adc
adc
lods
inc
pop
and
inc
sub
aas
sbb
jl
mov
mov
or
sbb
jne
ja
inc
or
mov
inc
addr16
aas
sub
div
add
(bad)
pop
pop
retf
xor
mov
mov
mov
jecxz
cmp
mov
ins
repnz
or
call
loopne
inc
fbld
cmp
mov
dec
pop
adc
add
into
inc
add
ret
pusha
fsub
add
and
pop
mov
mov
lds
sbb
cmovae
ror
cdq
mov
icebp
outs
push
test
sub
add
lea
(bad)
neg
mov
sbb
add
xchg
sti
fwait
shl
jbe
dec
adc
mov
jo
cmp
test
mov
imul
sar
loope
inc
jmp
xchg
push
adc
pop
or
push
jmp
rcr
pop
jge
mov
out
and
stos
mov
js
shl
jmp
in
add
ja
scas
jno
inc
hlt
stc
movs
in
cmp
and
mov
pop
sbb
add
(bad)
sbb
ja
pop
add
fnstcw
mov
loop
outs
fwait
sub
pop
add
std
fcomp
neg
or
fsub
out
popa
aam
int3
inc
add
mov
or
add
add
mov
add
pop
mov
(bad)
pop
mov
repnz
or
and
inc
sbb
add
mov
inc
(bad)
lods
xlat
and
fs
aam
inc
mov
pop
ficom
jae
inc
inc
push
gs
mul
mov
lahf
push
or
scas
pop
scas
jecxz
or
cli
jl
(bad)
nop
outs
inc
(bad)
cdq
cmp
(bad)
xor
fsubr
loopne
and
(bad)
jb
jg
iret
inc
add
push
xor
inc
das
jge
jb
shl
add
shl
jne
and
jne
mov
xchg
inc
jmp
ins
ja
add
pop
loope
les
lea
and
mov
std
push
inc
cmp
outs
repz
retf
(bad)
xor
div
mov
sti
xchg
loopne
(bad)
xlat
adc
inc
mov
inc
adc
retf
jae
jp
mov
scas
jle
test
retf
ror
fcomp
ficom
cs
mov
pop
aam
aam
add
es
jge
adc
inc
lahf
call
mov
and
dec
pusha
or
pusha
dec
pusha
jp
xor
cmp
add
fnstsw
outs
stc
and
sbb
or
pop
cmp
and
dec
mov
sub
add
and
mov
jmp
pop
dec
pop
scas
(bad)
push
(bad)
gs
pop
cwde
sbb
add
and
mov
arpl
jp
mov
jno
adc
xchg
cld
popa
bound
shl
mov
ja
sub
loop
pop
(bad)
gs
and
sti
jge
neg
adc
fnstcw
push
xchg
pop
add
jmp
lahf
sti
add
jle
pusha
mov
add
push
iret
mov
jmp
sbb
rol
into
jmp
xlat
sub
out
ss
mov
into
loopne
mov
rol
nop
jmp
inc
les
jge
sbb
sub
(bad)
jns
xchg
and
outs
fs
mul
mov
ror
lods
sub
inc
push
push
sub
mov
add
jl
jg
lea
outs
leave
mov
movups
jae
out
add
jg
iret
xchg
mov
test
repz
daa
adc
sti
ret
aaa
arpl
cmp
enter
jp
mov
mov
jmp
jnp
adc
and
jg
pop
je
jg
xlat
push
mov
xlat
ja
mov
(bad)
repz
rcl
popf
aaa
sbb
ret
iret
dec
mov
pop
mov
and
sub
imul
xchg
or
retf
lahf
push
dec
mov
scas
outs
sbb
xor
add
ins
mov
popa
popf
call
sbb
pusha
aaa
ret
pop
test
xchg
add
xlat
inc
inc
mov
mov
ins
frstor
jg
pusha
jne
xchg
mov
and
(bad)
leave
mov
lahf
mov
jnp
mov
jmp
cli
rcr
mov
lahf
cmc
outs
mov
add
mov
mov
fndisi(8087
pop
test
or
xchg
sub
addr16
dec
xchg
xchg
mov
lock
icebp
clc
jle
(bad)
push
jmp
test
jg
gs
jp
aad
int3
jne
mov
mov
xor
cmp
mov
test
mov
and
sbb
jg
je
or
fldcw
movs
mov
add
push
add
lock
sysenter
sbb
pop
pop
xchg
mov
jmp
push
pop
out
ds
les
and
xchg
inc
scas
das
xchg
fbstp
pop
pop
call
and
ret
jp
stos
or
and
adc
inc
bound
test
jle
and
mov
(bad)
fild
into
inc
xor
xchg
rcr
mov
jno
and
cld
shl
popa
xchg
and
clc
jmp
test
sub
xor
pop
mov
outs
and
mov
sar
jne
mov
sbb
out
mov
fwait
pop
in
and
repnz
out
pop
jno
stc
pop
mov
loopne
xchg
xlat
sbb
test
loopne
mov
icebp
cmp
lea
jae
scas
mov
shl
inc
repz
cmp
add
daa
dec
daa
sub
or
pusha
fdivr
iret
out
mov
cld
retf
clc
inc
push
sbb
iret
mov
mov
inc
(bad)
shr
or
xchg
fild
mov
test
jle
and
push
add
mov
and
pop
cli
adc
(bad)
push
std
sbb
push
icebp
xchg
xchg
or
jl
sbb
inc
push
repz
and
das
add
(bad)
mov
leave
xchg
mov
or
pop
out
mov
pop
mov
sbb
dec
inc
add
std
jmp
adc
mov
cmp
scas
fcomi
xor
jle
cmp
aam
cld
(bad)
scas
mov
scas
cmp
div
jmp
push
repz
pop
xlat
test
jnp
iret
nop
push
pushf
pop
cmp
xchg
or
test
xchg
loopne
inc
movs
push
dec
sar
ja
out
pop
sbb
mov
mov
loope
adc
add
(bad)
gs
push
jb
xchg
je
inc
test
iret
and
pop
sar
and
mov
and
dec
push
aas
dec
clc
mov
xchg
mov
dec
mov
int3
cs
test
cmp
movs
push
inc
(bad)
(bad)
out
out
jmp
jmp
jg
xor
sub
mov
add
push
dec
or
out
mov
add
popf
fcomp
hlt
inc
add
lock
push
mov
(bad)
stc
cmp
and
clc
inc
cld
jnp
std
inc
inc
mov
ja
aas
inc
add
jge
inc
hlt
lock
xor
mov
push
je
push
repnz
jecxz
dec
cmp
dec
and
daa
bound
stc
sbb
cmp
shr
aad
xchg
movs
sub
fucomp
jmp
lahf
imul
mul
or
inc
(bad)
xlat
sbb
outs
aas
xchg
xor
push
pop
clc
je
lds
mov
shl
fsub
mov
call
cmp
shl
sub
mov
and
sub
mov
add
jo
call
pop
push
mov
add
enter
jne
mov
in
sbb
pop
ins
xor
push
adc
ret
and
(bad)
imul
shl
sub
pop
and
sub
sbb
popa
mov
sbb
add
fmul
mov
xchg
add
pusha
cmp
fdiv
mov
out
test
or
out
cmp
dec
xor
fstp
adc
(bad)
or
outs
outs
mov
mov
shr
xor
or
ret
sar
ja
or
add
sbb
add
(bad)
push
gs
lea
repnz
ja
push
add
fadd
js
mov
daa
jge
je
pop
mov
sbb
add
lea
fld
shl
add
test
dec
cli
sub
cmp
mov
or
ret
mov
aaa
sub
cmp
mov
call
mov
pusha
xor
or
mov
stc
fwait
aaa
cmp
push
rol
lea
sbb
add
dec
ins
add
pusha
xor
push
ins
xor
fistp
ror
mov
(bad)
inc
mov
sbb
iret
push
daa
jge
test
push
ret
jno
jnp
pop
and
push
ret
ds
jmp
mov
dec
mov
js
mov
xor
or
and
shl
cmc
or
sbb
adc
xor
mov
hlt
adc
pusha
xor
call
adc
sbb
mov
repz
pusha
xor
js
mov
xchg
xchg
dec
adc
or
fmulp
inc
test
clc
or
add
and
jmp
push
out
or
and
jnp
pop
adc
push
ret
add
pushf
aaa
sub
pop
add
dec
mov
cmp
(bad)
sbb
and
sar
repz
adc
enter
clc
or
add
or
sbb
jp
out
dec
cld
push
mov
sbb
pop
in
dec
jl
call
sbb
test
mov
pop
mov
xchg
xor
and
xor
or
inc
inc
rep
into
sbb
hlt
pop
push
push
aaa
lock
pusha
xor
call
add
dec
add
sbb
dec
aam
and
cld
outs
rcr
sbb
pop
(bad)
cmp
loop
bound
pusha
cmp
aaa
outs
sahf
movs
adc
mov
pop
jae
push
add
cmp
call
and
mov
sbb
add
repz
pusha
xor
div
jns
call
shl
push
aaa
outs
push
mov
pusha
call
sti
mov
jo
lock
mov
dec
mov
sbb
(bad)
test
adc
inc
cmp
cmps
inc
dec
sub
cmp
cdq
lods
jnp
out
pop
inc
test
fidiv
movs
xchg
jmp
add
cmp
out
out
fstp
inc
add
shl
mov
imul
xor
mov
xlat
xor
outs
hlt
repnz
mov
sbb
mov
xchg
add
ds
call
mov
adc
and
rcr
mov
mov
xor
push
and
(bad)
pushf
ror
pop
xor
push
sbb
pcmpeqb
xor
or
ret
and
jnp
and
or
outs
fdivr
in
shl
sbb
adc
mov
mov
add
pusha
cmp
shr
shl
sbb
adc
mov
add
jo
sub
mov
cs
stos
test
mov
scas
scas
push
aam
xlat
push
jge
sbb
pop
dec
sub
mov
cmp
test
aas
mov
aaa
or
call
es
(bad)
jp
imul
stos
test
or
retf
mov
dec
or
jns
xchg
xchg
iret
repz
sub
xchg
push
rcr
loop
je
call
inc
iret
push
cmp
mov
into
cmp
add
hlt
dec
adc
gs
xchg
pop
xchg
xchg
repnz
test
adc
pop
lahf
cmps
mov
xor
xchg
sub
push
fnstcw
sub
cmps
loop
jae
push
iret
push
pop
aad
stos
scas
adc
adc
mov
scas
xchg
jmp
mov
jmp
imul
ja
push
push
adc
xchg
xchg
sub
stos
mov
in
ins
and
mov
int
pusha
cmp
inc
test
cdq
inc
xor
hlt
push
xor
dec
std
icebp
nop
and
(bad)
push
jg
mov
push
push
push
(bad)
es
push
(bad)
imul
movs
lea
push
pop
pop
mov
prefetchwt1
or
cmps
sbb
sahf
popf
mov
popf
fwait
movs
stc
test
pop
pushf
cmps
cdq
cdq
sbb
dec
addr16
imul
inc
adc
lahf
mov
in
scas
iret
inc
cmp
outs
mov
call
into
aaa
in
pushf
jg
sbb
add
or
mov
scas
cmps
xchg
push
pop
pop
ret
cwde
stos
stc
cld
push
aad
jo
in
ret
mov
int3
mov
adc
popa
push
cmp
jge
pop
mov
adc
sbb
mov
bound
ja
xchg
test
mov
daa
test
mov
jmp
(bad)
scas
ss
je
pop
ror
adc
popf
sbb
daa
ja
call
jl
mov
push
and
pop
xlat
and
lea
in
inc
sbb
xor
das
mov
sbb
mov
and
xor
xchg
jl
cmps
es
sar
cmps
clc
fmul
cld
cld
lods
pusha
popa
popa
into
cdq
(bad)
jne
sbb
jp
pop
pop
pop
mov
fistp
in
xor
pusha
jle
jae
(bad)
das
ins
shl
lds
mov
repnz
adc
das
pop
movs
cmc
mov
push
mov
retf
pop
(bad)
movs
movs
or
mov
mov
ja
out
push
push
push
xchg
push
xchg
push
imul
je
push
dec
icebp
jns
jno
inc
les
ror
lods
scas
push
out
popa
mov
add
pop
cmp
and
xor
push
push
push
or
ins
lods
outs
mov
mov
or
in
mov
xor
repnz
pop
pop
inc
gs
and
jle
xor
inc
push
dec
pop
sar
out
or
(bad)
out
je
jns
in
je
pop
inc
add
jg
jo
out
rcl
add
xchg
in
or
out
adc
pop
and
inc
and
and
rcl
pop
sub
and
or
xchg
mov
mov
stos
bound
or
popa
imul
jl
retf
push
or
pop
cwde
out
push
scas
in
push
xchg
add
or
jmp
adc
out
outs
movs
or
pop
xor
inc
mov
cmp
inc
popf
adc
js
push
gs
mov
mov
sub
sub
mov
repz
into
das
jmp
fidivr
pop
mov
(bad)
lea
rol
cmp
inc
cmp
xor
loopne
mov
aaa
ret
adc
lds
dec
push
lods
jns
pop
in
into
fistp
(bad)
loop
jg
cmp
inc
cld
fidivr
cmp
mov
test
pushf
and
cdq
inc
mov
mov
stc
pushf
inc
add
stc
cmp
push
imul
mov
pusha
push
jae
aad
clc
test
shl
mov
enter
lahf
cmps
scas
jle
loope
or
or
inc
adc
or
cmp
add
add
lea
icebp
ret
adc
dec
lea
push
fild
lahf
inc
xchg
cmp
sbb
dec
and
adc
sub
dec
mov
adc
push
or
pop
add
ja
jl
xor
push
add
jb
sub
clc
dec
stc
pop
popa
and
and
and
push
(bad)
and
pop
out
push
popf
jns
fbstp
not
repnz
xchg
add
and
loopne
int3
mov
xchg
adc
mov
mov
lds
and
pop
push
push
dec
out
or
lahf
pop
adc
adc
dec
push
xor
xchg
push
jne
adc
dec
mov
out
sbb
cmp
mov
scas
sub
shr
mov
or
push
jl
sahf
sub
test
xchg
push
iret
pushf
jge
dec
lahf
jnp
dec
add
mov
das
jl
jg
xchg
je
fdiv
mov
imul
mov
shl
sahf
inc
daa
jl
sub
mov
imul
out
cmps
mov
cmp
jmp
nop
cmp
sbb
xor
sbb
jns
cwde
cmpxchg
vminsd
je
aas
mov
loop
jmp
inc
mov
mov
pop
mov
sbb
sbb
cwde
cmps
xor
pop
imul
sbb
xor
xor
dec
pop
mov
sub
(bad)
es
pushf
cwde
sbb
in
and
bound
popa
jb
push
dec
and
pop
retf
push
scas
mov
cmp
adc
addr16
nop
mov
add
lods
add
in
fidiv
xor
xor
xor
sbb
pusha
jnp
xchg
xchg
xor
inc
jmp
lods
push
sysexit
mov
push
cmps
cmps
cmp
pop
or
enter
dec
mov
sub
mov
jo
ins
dec
add
sbb
xchg
aas
mov
sub
inc
or
add
ror
sub
add
shr
xor
xchg
repnz
mov
add
dec
pop
in
adc
and
hlt
test
call
and
mov
enter
test
cmp
mov
add
rcr
and
sub
cmp
sbb
sahf
das
mov
sub
adc
add
test
xor
mov
stos
stos
mov
jg
cld
inc
dec
sub
movs
xchg
pop
fidiv
adc
mov
gs
push
add
xor
je
imul
into
cmp
cmps
mov
add
push
mov
pop
jbe
dec
cwde
bound
dec
pusha
inc
ror
inc
test
mov
inc
div
mov
in
mov
sahf
jp
cmc
aam
imul
loope
repz
dec
aam
shr
das
adc
adc
pop
push
ja
pop
adc
loope
and
arpl
mov
cmp
add
sbb
loop
xor
and
imul
push
mov
sar
out
lea
cs
ins
fs
icebp
sbb
ret
in
out
sub
sub
xchg
arpl
sub
jecxz
xor
ss
arpl
or
clc
mov
iret
repnz
std
cmp
pop
test
xor
xchg
jb
fcom
pop
retf
and
ja
cmp
adc
inc
jge
test
xchg
ds
(bad)
adc
pop
mov
push
push
leave
jns
mov
push
xor
push
dec
fwait
aaa
dec
add
ss
outs
or
or
test
adc
ja
push
jge
retf
cmp
mov
inc
mov
or
arpl
sub
add
test
or
call
and
or
movs
add
inc
push
lea
dec
or
gs
lar
movs
cmovne
jb
jmp
push
fisttp
inc
pop
movs
add
cld
repnz
and
push
or
mov
jmp
aaa
cs
inc
mov
adc
jae
and
xchg
(bad)
icebp
xor
mov
xor
pusha
fcom
pop
mov
add
add
pop
and
mov
jo
jns
aad
push
mov
sub
inc
popf
rcl
stc
stos
lods
fisttp
retf
lods
test
ror
sahf
sub
in
adc
cmp
cmp
loop
stc
add
dec
fistp
sub
adc
call
inc
jmp
jg
test
add
jle
mov
test
jg
or
jle
mov
stos
gs
push
or
xchg
rol
loope
out
mov
rol
fisttp
mov
cmc
sti
adc
inc
xor
and
in
retf
adc
mov
popf
cmp
push
enter
shl
xor
dec
xor
loop
mov
pop
outs
aam
sti
xchg
iret
out
mov
or
sbb
pop
xchg
sub
(bad)
iret
invd
xor
loop
dec
and
call
(bad)
ds
(bad)
push
ins
dec
xchg
aas
sub
imul
inc
clc
and
mov
adc
dec
ins
test
repnz
pop
jns
pause
push
outs
jae
add
sub
dec
sbb
push
hlt
inc
xor
daa
add
xchg
inc
sub
mov
mov
enter
pop
bound
das
mov
add
push
cmp
fld
mov
test
mov
(bad)
scas
pop
je
sub
fimul
add
rol
loope
inc
add
int3
pusha
fcom
cmp
xchg
call
xchg
mov
inc
or
pop
pop
sbb
xchg
mov
mov
push
sbb
inc
push
add
shr
adc
jg
dec
shl
add
xchg
movlps
stc
inc
push
xor
cli
daa
sbb
inc
mov
std
mov
scas
test
aad
inc
cld
ficomp
adc
loope
jne
xchg
mov
fisttp
adc
pop
mov
push
aam
pusha
and
and
mov
das
push
sbb
and
fwait
ss
mov
push
jmp
aad
mov
pop
dec
or
cli
sub
add
dec
mov
xchg
cli
ins
cmp
xchg
mov
test
jno
xchg
(bad)
jecxz
mov
push
jno
push
lods
imul
add
or
or
rcl
std
mov
push
push
pop
or
inc
mov
mov
jl
fs
inc
add
inc
add
sbb
or
into
sub
add
inc
add
mov
hlt
mov
movs
xchg
jne
and
pop
mov
pop
(bad)
fcom
mov
push
(bad)
sti
dec
mov
inc
add
jne
mov
cmp
or
das
aas
stos
and
mov
stos
add
xchg
inc
mov
jnp
daa
jne
popa
add
jo
sub
jecxz
addr16
adc
cld
xchg
mov
xchg
inc
cld
cwde
mov
dec
fwait
inc
push
push
adc
sbb
test
push
add
or
ins
add
aam
push
inc
arpl
fld
pop
mov
das
add
sar
sub
dec
pop
popf
pop
in
fstp
add
or
or
mov
sub
iret
test
mov
mov
sub
mov
sub
inc
cld
ficomp
add
pop
or
jns
inc
(bad)
rcl
sub
vmread
leave
xlat
retf
repnz
shl
(bad)
iret
xlat
and
pop
mov
inc
jp
add
sbb
bound
das
(bad)
and
loope
sbb
dec
fmul
xchg
rol
std
cmp
pop
or
stos
cmps
xchg
stos
jmp
test
call
mov
and
mov
mov
cmp
mov
add
dec
dec
or
jmp
out
out
(bad)
das
dec
fs
push
pop
jne
je
add
inc
(bad)
cli
xlat
aam
push
mov
and
jmp
fcom
jb
add
mov
and
cmp
add
mov
inc
or
cmp
inc
cmp
pushf
cmp
cmp
push
push
outs
fidiv
adc
dec
inc
clc
inc
es
xchg
xchg
aas
push
add
mov
mov
clc
push
retf
jle
cli
je
cmp
out
xchg
imul
aam
inc
and
or
jmp
imul
out
and
fdivr
mov
dec
icebp
push
add
add
mov
adc
shl
xor
push
xchg
or
or
xchg
xor
add
(bad)
or
shl
and
mov
dec
lea
inc
add
sbb
dec
icebp
cdq
and
add
add
lds
push
pop
fldcw
xchg
sub
stos
cmp
in
inc
mov
sbb
cmc
mov
gs
jne
pop
and
adc
aas
adc
jae
mov
(bad)
push
shl
mov
test
mov
cmp
add
das
sbb
or
inc
xchg
sub
ret
jno
cmps
cmps
push
ins
cmp
and
jne
pop
jecxz
mov
jmp
inc
mov
rcpps
xor
mov
cmp
scas
xlat
dec
popf
popf
popf
aam
fisubr
sub
dec
retf
add
mov
stos
add
and
inc
jae
add
push
cmps
sub
inc
popf
jno
loope
das
sbb
cmc
add
call
into
pop
lea
add
mov
mov
xchg
inc
cmc
adc
retf
and
pusha
cdq
lds
jmp
cmp
adc
pop
add
std
xchg
add
mov
inc
or
mov
mov
jl
scas
pop
movs
dec
aaa
scas
shl
fwait
xlat
add
add
jne
inc
pop
and
dec
push
adc
cmp
shl
imul
add
rcr
lea
add
sub
mov
mov
(bad)
(bad)
(bad)
mov
aad
loop
(bad)
inc
je
ret
das
stc
(bad)
jp
fldcw
fst
push
sbb
mov
jge
push
aam
cmp
sub
lea
add
push
sbb
add
lar
add
sbb
push
push
cli
xor
xchg
cmp
pop
test
aad
stos
stos
cmp
call
push
cmp
ror
xchg
pop
jp
hlt
jp
pop
add
jl
jmp
or
xchg
inc
add
movs
lds
das
fcom
out
icebp
jae
lahf
mov
dec
and
and
xchg
stc
pop
push
jnp
leave
jmp
mov
cmc
mov
rcl
rcl
outs
out
ror
lods
lods
into
rol
ret
or
pop
scas
push
dec
pop
mov
inc
xchg
pop
not
dec
adc
cmps
popf
adc
sbb
fucomip
cmps
sahf
sahf
push
adc
cmp
push
pusha
stos
test
sub
push
nop
cmp
and
popf
xor
daa
sub
push
jne
stos
or
adc
mov
sbb
dec
adc
dec
pop
dec
jl
adc
ja
enterw
adc
xor
push
add
push
ret
inc
cli
pushf
loop
sub
cmp
aas
inc
add
adc
xchg
out
repnz
dec
daa
adc
outs
sbb
gs
adc
enter
add
push
push
xchg
imul
inc
(bad)
mov
mov
add
lods
mov
fst
inc
sub
sbb
add
add
stc
jae
add
test
dec
stc
inc
hlt
lar
mov
and
pop
or
imul
sub
cmp
in
add
push
inc
fdiv
xchg
pop
add
xchg
adc
and
clc
push
or
mov
add
retf
pop
xchg
lea
or
sub
dec
adc
push
adc
dec
or
test
(bad)
xlat
push
push
dec
push
sub
mov
push
(bad)
repnz
add
lods
mov
pop
mov
xlat
repz
xchg
and
adc
ins
mov
xchg
aas
inc
ja
nop
aas
adc
push
test
sbb
imul
imul
or
push
cmps
imul
and
adc
daa
pop
cli
xor
adc
in
cmps
push
push
aam
jmp
pop
xchg
add
stc
inc
xor
cmps
adc
mov
xor
lods
add
adc
pusha
inc
push
and
sub
call
and
mov
aam
test
test
add
ja
push
loop
jge
outs
add
cmp
adc
and
mov
jmp
sahf
popa
push
ret
out
popa
mov
xchg
add
and
mov
cmp
loop
stc
push
sub
mov
pop
pop
retf
inc
push
pop
inc
jne
jge
or
xchg
xlat
int3
lahf
and
clc
pop
add
lds
gs
add
add
mov
pop
and
rcl
or
iret
sub
sub
add
cmp
xchg
ret
fpatan
fbld
push
shl
lock
aad
sahf
movs
(bad)
(bad)
push
jmp
cmps
sub
jbe
mov
test
push
shl
inc
and
mov
dec
rcr
and
inc
inc
push
je
enter
add
in
mov
loop
pop
pop
mov
hlt
jbe
xchg
lahf
and
mov
inc
xchg
pusha
pextrw
and
sbb
push
cld
inc
jle
(bad)
rcr
cld
cmp
and
and
adc
mov
mov
(bad)
pusha
xchg
xchg
fadd
and
stc
or
(bad)
sub
or
pop
scas
sub
inc
hlt
jge
(bad)
and
and
sub
pop
(bad)
das
fwait
add
xor
jb
stos
cmovo
push
(bad)
mov
sbb
sub
lods
cmps
mov
mov
pusha
je
lea
repnz
sqrtps
sub
adc
mov
pop
jbe
or
loop
stos
add
adc
push
xchg
add
retf
sub
inc
aaa
xor
inc
ss
mov
jl
or
inc
mov
jne
inc
popf
hlt
test
pusha
fstp
xor
jg
jne
jne
xor
sbb
xor
mov
inc
cld
fld
pop
cdq
sub
mov
shr
xchg
xor
inc
or
movs
scas
cmps
cmps
dec
dec
movs
add
dec
add
fimul
(bad)
add
test
or
mov
jne
mov
sar
repz
push
pop
jns
gs
adc
jp
cmc
aam
mov
outs
lods
add
mov
add
add
in
mov
cmp
out
dec
jmp
push
or
js
dec
mov
add
push
pop
and
push
sbb
(bad)
repz
and
xor
lahf
or
fmul
sti
cmc
mov
hlt
push
aas
retf
pusha
adc
and
inc
and
cmp
in
fstp
aas
dec
pop
sar
push
mov
add
inc
test
lahf
sub
mov
inc
adc
add
push
add
and
stc
sub
sub
add
push
popf
mov
mov
aaa
xor
ror
xchg
push
jo
and
sbb
movs
adc
mov
cwde
add
cmp
inc
fnstsw
xchg
aas
fstp
je
add
sub
xchg
dec
add
mov
adc
xor
xor
or
xchg
adc
inc
inc
gs
inc
or
in
lods
inc
sub
sub
push
mul
add
pop
(bad)
jb
add
jmp
or
sub
sub
sbb
lahf
sub
pusha
popa
shl
mov
data16
imul
mov
jmp
clc
mov
sahf
icebp
mov
cmp
xchg
cwde
mov
retf
adc
int3
retf
cs
rcl
and
fmul
jp
loopne
dec
hlt
icebp
or
loopne
pop
sar
sbb
(bad)
shr
add
jge
inc
cli
inc
adc
les
and
test
xor
ds
add
bswap
bound
or
xchg
inc
adc
dec
push
sar
and
mov
inc
test
scas
xchg
cmp
aam
ror
in
ins
and
xchg
sub
mov
xlat
dec
jle
push
adc
mov
cs
and
mov
pop
adc
sub
test
push
push
xor
dec
adc
add
cmps
test
test
pop
add
dec
xchg
xchg
add
add
xchg
inc
aam
loopne
adc
or
sub
mov
rol
add
test
adc
inc
add
cmp
je
xchg
sub
or
stos
cld
and
mov
adc
ret
mov
div
in
and
lods
and
repnz
sub
sub
push
dec
pop
repnz
pop
inc
mov
inc
icebp
outs
and
outs
inc
xchg
rcl
cmps
mov
rcl
inc
stos
cmp
dec
add
in
sub
mov
add
xchg
xchg
or
hlt
repz
jge
data16
push
dec
fcomp
retf
sbb
mov
sbb
or
inc
sbb
xchg
psubw
sub
rcr
jns
jo
add
ja
mov
mov
fadd
imul
popa
pop
test
or
add
add
mov
pop
in
mov
push
add
mov
iret
out
stc
ret
push
push
or
mov
adc
ins
inc
rcl
add
add
jmp
mov
mov
xchg
pop
or
jb
inc
aam
in
push
cwde
jb
push
inc
add
sbb
jle
add
imul
les
pusha
pop
in
inc
mov
or
add
inc
and
mov
push
add
and
fst
pop
lea
and
or
pop
stos
adc
xor
pusha
fdivr
cmp
xchg
retf
das
mov
and
in
in
mov
mov
nop
cmp
inc
or
arpl
and
mov
xor
mov
fisttp
movs
mov
sbb
aad
push
jnp
test
call
(bad)
mov
jle
jl
push
add
fs
aaa
xor
jno
jns
rol
(bad)
sbb
outs
into
shl
not
jmp
scas
mov
mov
ins
(bad)
mov
mov
mov
add
pop
mov
pop
or
mov
aam
mov
lea
pop
sar
and
bound
loop
xor
xlat
and
sti
mov
mov
repnz
and
sub
push
(bad)
or
cwde
stos
add
inc
pop
iret
adc
dec
add
sub
xchg
std
add
test
or
stos
repz
sahf
sbb
shl
arpl
imul
cmp
and
rol
fstp
xor
jg
jge
mov
sbb
adc
daa
in
or
push
test
xor
inc
add
add
adc
xor
sbb
inc
ret
or
jmp
adc
xchg
or
mov
add
mov
movs
pextrw
clc
int3
dec
add
popf
push
mov
add
push
movs
add
icebp
xchg
shr
jp
lock
inc
add
add
mov
rcr
inc
sub
pop
inc
sahf
mov
(bad)
ins
adc
inc
adc
inc
push
mov
clc
add
pop
push
jnp
stos
pop
neg
cmp
cmp
inc
sbb
rcr
inc
popa
outs
cmp
jle
sbb
aas
sub
cli
sbb
ficomp
stos
xchg
push
sbb
xlat
scas
lods
rcl
xchg
xlat
add
mov
mov
call
pop
jecxz
inc
retf
rcl
dec
mov
sar
test
bound
cmp
call
mov
xor
mov
daa
add
inc
sbb
inc
je
ret
and
jnp
lods
icebp
jl
fiadd
push
add
scas
das
enter
add
xor
add
add
ror
add
add
adc
lds
inc
and
ficom
pop
pop
sub
movs
cmps
sahf
dec
push
pop
add
sub
add
sbb
outs
call
jns
adc
mov
les
push
mov
adc
(bad)
mov
xor
outs
pusha
and
mov
xchg
inc
shl
xchg
inc
mov
inc
xor
aaa
ss
push
add
aaa
jmp
std
adc
or
add
stos
add
data16
test
loope
ror
xor
push
ror
and
mov
sub
gs
xchg
or
mov
inc
xor
repz
or
adc
cmp
cmp
loop
cmp
fisubr
sahf
sub
sub
add
sbb
fadd
sub
cmp
stc
push
mov
mov
jne
test
movs
mov
mov
bound
nop
and
sar
(bad)
push
jmp
xor
sbb
std
sahf
jp
hlt
xor
test
test
mov
cmc
mov
jg
jge
cmp
sub
imul
mov
cmp
add
scas
das
ror
out
jp
out
cwde
fidivr
mov
shr
in
stos
hlt
(bad)
jmp
loopne
gs
fnstsw
movs
dec
pop
xchg
push
pop
imul
push
jb
push
push
addr16
xchg
out
jnp
js
sbb
xlat
mov
xchg
(bad)
pop
call
scas
int3
ror
hlt
cwde
test
sbb
pop
sar
push
mov
shr
and
sbb
inc
in
sub
fnstsw
cmp
add
dec
xchg
rcl
xlat
jmp
div
aad
test
pop
sbb
push
(bad)
std
cmp
mov
dec
xchg
push
pop
rcr
or
stos
mov
xor
mov
add
scas
adc
rcr
stos
and
(bad)
fimul
and
mov
das
mov
and
mov
mov
not
inc
out
nop
pusha
add
pop
shl
cmp
sbb
ret
(bad)
mov
adc
std
ficom
inc
dec
and
shl
or
call
pop
cvtdq2ps
xlat
pop
or
add
jle
cld
loopne
xchg
daa
mov
test
cs
jo
cmps
pop
out
push
repz
in
or
das
mov
sbb
dec
mov
mov
jmp
pushf
jecxz
call
sub
sar
jecxz
call
lahf
les
add
push
addps
sub
jb
imul
(bad)
shl
pushf
mov
mov
push
ss
cmp
icebp
arpl
inc
adc
pop
sbb
xor
push
dec
dec
pop
ror
dec
dec
test
cdq
add
inc
icebp
lods
and
jp
lds
inc
adc
push
push
dec
inc
cmp
retf
mov
push
add
or
pop
test
test
pop
ja
add
call
clc
ins
leave
cmp
hlt
xor
pop
cli
or
loopne
sub
dec
mov
lds
mov
inc
sahf
adc
or
jmp
mov
xor
sub
sub
jle
(bad)
jmp
xchg
xchg
add
jge
cmp
adc
dec
sub
je
in
mov
jnp
sub
scas
jb
xchg
or
aam
inc
xor
and
jmp
xchg
imul
mov
(bad)
pop
sahf
movs
retf
sbb
repz
cmp
and
dec
lahf
sbb
and
inc
outs
mov
rol
jp
test
hlt
(bad)
sbb
call
ja
jl
pop
jg
ds
mov
cs
shl
pop
and
mov
repnz
push
mov
mov
pop
mov
movs
cmp
das
rcl
sub
push
push
mov
push
test
sub
pop
mov
and
cmp
arpl
dec
nop
aas
lahf
aas
inc
jge
or
xchg
or
ds
test
pop
pop
and
test
adc
and
mov
cmps
pushf
sub
adc
inc
xor
sub
scas
mov
xor
add
xchg
add
adc
ja
mov
ss
sahf
enter
jbe
jno
hlt
je
and
mov
fcmove
xchg
xchg
outs
add
add
sub
ja
cmp
adc
pop
mov
add
mov
add
xor
(bad)
cmp
nop
aas
and
leave
mov
call
inc
add
test
lods
lods
sub
stos
add
mov
ret
sub
repnz
mov
mov
add
jmp
leave
mov
movs
movlps
and
loope
push
test
dec
adc
sub
mov
aaa
je
xchg
cmovbe
or
inc
inc
cdq
and
mov
pop
in
or
inc
clc
test
jne
push
xchg
fisttp
adc
aas
dec
psllw
mov
mov
inc
or
mov
popa
sbb
ret
imul
ret
adc
inc
add
lahf
mov
call
fbld
cmp
imul
test
je
add
clc
cmp
or
mov
sub
mov
jge
bound
bound
scas
jmp
xor
push
xor
cmp
push
jg
fwait
xchg
mov
push
cmps
es
imul
scas
cs
mov
jne
(bad)
das
leave
pop
out
fsub
out
frstor
xchg
out
fbld
out
mov
into
fwait
hlt
leave
mov
mov
push
jge
jmp
call
jle
std
dec
call
lahf
jge
es
stc
mov
and
ins
shl
mov
or
repz
stc
into
cmc
retf
and
mov
out
retf
je
imul
ins
and
mov
jns
or
mov
movs
xlat
xlat
inc
push
pop
aaa
cmc
idiv
leave
sbb
xchg
das
or
mov
stc
arpl
adc
inc
test
out
into
test
add
push
adc
enter
push
inc
adc
rcl
pop
xor
sub
adc
aad
push
imul
pop
jnp
adc
outs
xor
add
or
std
xor
jp
adc
aaa
xor
pop
add
inc
aam
in
mov
cmp
pop
or
sar
adc
mov
adc
add
iret
xor
daa
in
sar
sub
sub
push
sub
inc
and
stc
sbb
adc
mov
inc
enter
aad
(bad)
sub
add
sub
shl
hlt
cwde
adc
jmp
retf
imul
add
mov
mov
inc
jmp
psrad
push
int3
or
add
xor
sub
jne
lahf
mov
test
inc
ret
shl
jae
mov
inc
inc
std
inc
mov
jbe
out
sahf
add
or
call
fisttp
xor
sbb
add
or
loopne
add
jmp
mov
sahf
cmp
xchg
popf
mov
sub
inc
inc
rcr
sbb
and
mov
mov
mov
jl
mov
shr
xor
mov
add
scas
jmp
xor
or
and
call
arpl
push
pushfw
ss
sub
cmps
imul
test
pop
pop
pop
adc
mov
xchg
pop
call
mov
aaa
scas
ror
jl
loope
jp
test
shl
mov
es
fistp
hlt
in
xchg
out
ror
mov
dec
jle
sub
ror
bound
ror
fisub
mov
inc
sub
sbb
jno
lea
fnstsw
js
loop
sbb
les
add
mov
aam
xor
sub
add
push
cli
enter
pop
cmp
enter
pop
les
jmp
jecxz
adc
jg
inc
dec
(bad)
pop
push
jmp
sbb
jmp
pop
inc
arpl
push
icebp
jae
inc
mov
imul
push
jg
add
add
leave
rol
sbb
mov
inc
jns
xchg
sub
xor
push
or
nop
inc
add
inc
dec
aam
arpl
push
inc
nop
or
xchg
daa
sub
mov
(bad)
aaa
push
xor
loopne
stos
add
add
test
lahf
pop
iret
por
js
repz
adc
shl
test
xchg
or
inc
daa
jne
pusha
add
jo
adc
push
xor
aaa
sbb
rcr
sbb
push
pushf
ins
and
mov
sub
adc
adc
and
enter
mov
retf
push
enter
and
clc
ins
fstp
mov
or
pop
je
add
inc
xchg
ds
cdq
cmps
add
add
fcomp
sub
push
sbb
cwde
dec
mov
loop
mov
adc
sar
ret
push
mov
xor
dec
mov
inc
adc
jnp
aas
shr
add
jbe
and
xchg
pop
mov
aas
inc
add
sahf
inc
jo
int3
das
dec
dec
shl
hlt
and
loopne
pop
fcmovnu
mov
(bad)
test
jnp
xlat
sahf
jnp
out
mov
(bad)
sbb
icebp
fld
xchg
pop
mov
jge
jmp
jg
mov
sbb
cli
das
jle
(bad)
(bad)
das
inc
ror
mov
out
xor
hlt
sar
fwait
je
(bad)
and
mov
loop
fwait
aaa
das
rcr
popf
jmp
in
jmp
in
cmp
loope
sbb
call
or
lahf
aas
xchg
inc
add
xchg
test
repnz
(bad)
cmc
push
lods
pop
mov
dec
and
add
stos
js
or
mov
add
xchg
sbb
sub
es
(bad)
inc
add
sub
dec
xchg
inc
mov
or
je
lahf
fwait
ins
add
pop
xchg
and
push
adc
and
lahf
mov
pop
pop
pusha
push
pop
adc
cwde
dec
hlt
das
xchg
add
sbb
cld
add
stc
popa
sbb
and
jno
pop
push
in
mov
sbb
in
or
inc
ret
or
and
xchg
xlat
adc
inc
and
mov
pop
stos
imul
outs
icebp
loop
fs
inc
jge
stos
pop
push
inc
mov
inc
and
and
or
and
jmp
mov
add
inc
dec
pusha
or
xchg
imul
mov
aas
inc
mov
iret
mov
test
dec
sub
test
mov
and
aam
jmp
cmp
loop
inc
jecxz
adc
hlt
test
test
adc
std
and
daa
test
cmp
psrld
call
test
and
pop
out
fcom
mov
(bad)
cld
inc
and
jge
into
retf
hlt
mov
std
leave
xchg
sbb
addr16
retf
aas
stc
cmp
pop
shr
sbb
lahf
jl
aas
cli
cli
arpl
cld
xor
lods
xchg
pop
cmp
rcl
fdiv
and
cmps
cmp
retf
sub
xor
pushf
and
add
cmp
in
and
std
mov
mov
and
repnz
aas
nop
adc
shr
adc
dec
sahf
(bad)
test
mov
xor
add
pop
adc
cmps
dec
or
das
inc
in
rol
add
add
jmp
xor
mov
pop
test
dec
or
mov
adc
pop
and
pop
cmc
dec
dec
pop
add
xor
sub
dec
inc
rcr
stos
inc
add
clc
inc
daa
or
sub
cwde
dec
(bad)
ror
and
dec
adc
aas
or
por
adc
add
jg
sbb
mov
xor
or
inc
ret
or
add
retf
call
je
add
call
and
(bad)
jle
mov
cmp
sub
mov
xor
lock
sub
gs
in
repnz
pop
inc
cmps
cdq
addr16
or
jmp
retf
add
add
shl
into
mov
sub
xor
or
mov
ds
and
inc
mul
jns
cld
dec
add
repnz
jmp
je
or
inc
mov
loop
int3
loop
enter
int
sar
sbb
(bad)
bound
mov
call
imul
xchg
sub
into
rcl
xchg
cs
outs
fisub
aaa
sahf
mov
cmp
mov
shr
mov
jg
mov
outs
mov
inc
or
(bad)
dec
mov
addr16
jecxz
movs
pop
jl
push
jge
(bad)
sbb
into
retf
mov
add
mov
add
cli
add
adc
adc
(bad)
dec
mov
pusha
adc
js
mov
and
adc
outs
and
in
xchg
sub
or
push
xor
mov
add
repnz
repnz
pop
neg
aam
in
mov
inc
add
jl
inc
or
mov
leave
(bad)
or
sub
and
mov
and
inc
inc
add
pop
add
jae
mov
add
ds
outs
bound
inc
test
gs
stos
add
add
jo
add
add
or
jmp
xchg
add
ror
mov
imul
mov
icebp
add
bound
mov
stc
mov
sub
and
jl
bound
jne
(bad)
push
pop
cmp
and
rol
xor
add
jo
call
add
inc
aam
pusha
mov
dec
fst
aas
dec
(bad)
and
sub
push
xor
jmp
xchg
add
jp
outs
mov
and
mov
cli
and
cli
sub
test
test
sahf
cs
bnd
dec
add
jae
mov
or
lock
and
or
xchg
lds
loop
mov
popa
cdq
pop
scas
inc
add
das
jmp
xor
(bad)
das
in
ins
jbe
or
cmps
fwait
jae
je
popa
dec
mov
cmp
mov
dec
mov
ret
int
es
jle
pop
xor
das
stc
fld
inc
call
lods
mov
pop
pop
pop
cmps
sub
(bad)
out
repnz
clc
test
aaa
call
fst
outs
rol
scas
fbld
jle
leave
sbb
retf
(bad)
mov
imul
jle
jg
xchg
mov
(bad)
das
jmp
xor
leave
xlat
pop
or
test
(bad)
in
jnp
rcl
mov
lahf
pop
mov
jae
cli
ss
mov
push
add
jp
sbb
and
xor
adc
(bad)
jl
add
fst
inc
fnstsw
sar
add
push
push
shld
and
and
push
add
xor
ffree
add
push
gs
push
pop
iret
adc
cmps
cmps
sahf
inc
pop
add
mov
pop
ffree
xor
fidiv
or
in
popf
add
adc
fsubr
in
popf
or
and
aaa
cmp
inc
and
push
pop
pop
xchg
and
mov
or
jmp
mov
repnz
cmps
clc
cmp
pop
inc
xor
pop
pop
xor
or
cmp
or
inc
retf
aam
add
shl
les
dec
test
sub
push
jo
popf
inc
sbb
push
hlt
or
mov
(bad)
jb
sbb
shl
call
enter
stc
xor
in
xchg
shl
sbb
and
cmp
jo
ret
rol
daa
test
mov
push
enter
pusha
or
dec
mov
push
mov
idiv
imul
(bad)
out
jecxz
cmp
dec
retf
push
add
(bad)
hlt
ret
dec
fbstp
lods
mov
push
sub
clc
cmp
mov
je
inc
adc
push
pop
in
inc
call
mov
jmp
arpl
xchg
out
lock
repz
stos
push
call
popf
out
shl
scas
fbld
pop
mov
mov
jmp
std
int
jl
and
xchg
scas
mov
std
shl
aas
movs
pop
(bad)
fnstenv
hlt
stos
aas
dec
hlt
loope
das
mov
imul
pop
adc
nop
jns
aad
rol
xchg
and
sbb
js
das
cmp
cmp
add
fnstcw
add
je
inc
add
pop
push
outs
mov
adc
fcomip
lahf
push
inc
jle
mov
inc
and
loop
push
pop
out
add
xchg
ret
or
inc
or
daa
adc
mov
sub
push
popf
and
sbb
sub
add
adc
cmp
pop
mov
adc
aam
inc
cmp
sbb
mov
push
xchg
dec
push
sub
out
sub
add
dec
sbb
xor
adc
pop
pop
pop
inc
and
adc
mov
add
jecxz
adc
add
in
ret
pavgb
or
(bad)
call
mov
adc
xchg
inc
cmp
lock
(bad)
pushf
cs
and
rol
or
dec
lock
gs
adc
add
or
je
xor
cs
pop
cli
mov
sbb
push
out
dec
add
xor
shl
add
add
push
add
outs
add
cld
leave
call
xchg
xchg
mov
xchg
rcl
lds
je
add
loopne
out
rcl
addr16
rcr
test
mov
popf
mov
sbb
call
add
sub
sub
or
out
arpl
cli
aam
ins
inc
add
pop
hlt
js
sar
push
adc
sbb
mov
fs
add
popf
push
div
mov
pop
mov
pop
sub
mov
jne
xchg
push
ins
lods
shr
fidiv
out
rcl
lds
call
iret
ror
aas
jle
jle
fstp
mov
retf
fistp
inc
add
cmp
out
push
addr16
dec
fisub
jle
cmp
in
hlt
cld
repz
fidivr
movs
movs
outs
pusha
push
dec
lods
add
push
and
mov
cmp
add
and
(bad)
jecxz
arpl
dec
mov
out
sub
mov
push
pop
push
out
sub
stos
add
or
jne
inc
or
add
adc
frstor
push
add
aad
pop
sar
adc
mov
inc
out
fs
dec
mov
adc
pop
xchg
ret
ror
clc
in
adc
pop
push
inc
aam
inc
sub
and
sub
or
xchg
aas
sub
push
xchg
aas
sub
add
add
inc
push
loope
jmp
xchg
xor
push
add
retf
pop
push
add
xchg
pop
out
jl
jno
or
mov
inc
int
push
push
test
jne
add
inc
add
stos
test
lods
push
adc
or
shl
or
mov
pop
enter
cmps
or
or
data16
das
sub
cmp
jl
dec
or
push
add
pusha
aaa
or
add
and
mov
sub
push
shl
mov
(bad)
les
push
int3
mov
in
xor
bound
fcomp
cli
push
dec
retf
add
test
sub
rol
pop
ror
adc
bound
or
clc
mov
jb
xchg
mov
pop
call
mov
mov
xchg
sti
(bad)
jge
(bad)
psubsb
xchg
or
movs
pop
jle
adc
ror
std
maxps
std
lock
jnp
mov
xor
fimul
cli
shl
inc
jg
pop
mov
(bad)
or
fdiv
lods
push
shr
inc
adc
ret
jbe
lar
cli
add
mov
(bad)
aad
ins
fstp
aam
jmp
push
mov
stc
pop
sahf
inc
std
std
adc
xchg
mov
pop
add
inc
and
scas
pop
or
dec
and
adc
mov
pushf
pop
xor
stos
data16
arpl
mov
push
mov
push
xor
xlat
imul
dec
pusha
ss
hlt
jp
inc
shl
push
repnz
xor
adc
push
adc
jmp
push
lahf
movs
add
xchg
shr
fwait
inc
pop
int
push
sbb
sub
or
mov
add
inc
xor
add
out
lds
cmps
or
sub
mov
and
stos
lea
mov
rcr
or
cli
fs
xchg
pop
je
cwde
adc
push
jmp
cwde
aaa
adc
and
mov
adc
xchg
jns
mov
sub
addr16
or
nop
add
push
sub
cmc
mov
cmp
or
sub
call
push
push
dec
cmps
jns
xchg
movs
adc
(bad)
leave
icebp
xor
sbb
sub
(bad)
stos
push
aam
push
inc
adc
and
daa
out
repnz
sbb
movs
xchg
push
imul
push
ficomp
mov
jo
imul
pop
push
and
ficomp
or
test
mov
mov
ret
adc
pop
cmps
int
sub
and
xchg
inc
adc
loop
lods
das
rcr
xlat
shl
imul
push
das
fisub
hlt
jge
pop
mov
divps
inc
add
aaa
lock
jge
(bad)
clc
jne
cli
ret
push
jmp
(bad)
fistp
ds
pop
jl
call
fidivr
push
jp
movs
jnp
popf
idiv
or
inc
icebp
das
and
adc
add
sub
aam
icebp
push
imul
adc
mov
pop
or
shl
call
pop
movs
or
fmul
cmp
add
pop
lock
add
aam
pusha
xor
jo
inc
scas
xor
mov
into
enter
pop
mov
add
push
adc
and
jecxz
arpl
test
xchg
ret
xchg
inc
push
movs
add
std
fadd
mov
rcr
hlt
outs
jbe
jmp
add
sub
cmp
mov
add
inc
xor
mov
push
add
xchg
leave
bound
add
push
lds
push
jmp
data16
or
and
cwde
lahf
add
fs
in
outs
xor
inc
xchg
scas
sub
push
test
add
lds
mov
add
addr16
jae
mov
mov
mov
jmp
jle
cmps
out
dec
inc
mov
mov
inc
add
jg
lds
test
adc
pop
cmp
adc
mov
daa
add
dec
add
cmp
dec
mov
daa
jmp
fistp
je
jns
out
cs
into
(bad)
push
mov
sbb
movs
ins
jle
pop
sbb
xor
adc
or
pop
pusha
(bad)
loop
test
or
add
lahf
fwait
mov
std
imul
(bad)
jmp
cmc
jae
call
pandn
aas
js
scas
(bad)
call
rol
outs
fbld
jge
pop
xor
neg
and
fucom
call
jnp
fsub
inc
add
jnp
xor
inc
and
add
jmpw
inc
cmp
push
xchg
xchg
and
mov
in
lea
add
test
or
repnz
iret
dec
push
mov
icebp
cmps
arpl
mov
loopne
lea
inc
shr
aad
add
inc
sub
aaa
xor
pusha
sbb
add
stc
xchg
and
or
adc
inc
inc
or
ffree
enter
cmp
stos
add
push
xchg
or
(bad)
sbb
add
push
mov
jne
in
and
push
fnsave
int3
pusha
fcomp
sbb
or
cmps
pop
push
fs
movs
stos
mov
adc
xor
jmp
and
or
sub
pop
xchg
and
outs
add
push
shr
xchg
dec
add
and
rcl
sub
sub
adc
or
and
rcl
fistp
push
jg
sub
push
gs
lea
jg
sbb
mov
mov
call
js
mov
mov
pop
xor
jo
mov
lods
mov
popf
mov
mov
push
hlt
rcl
or
popf
jmp
retf
repz
je
and
fstp
inc
je
xor
addr16
jmp
imul
mov
mov
dec
fistp
mov
sti
repnz
hlt
aad
mov
cmp
mov
push
dec
loopne
out
cmp
das
pop
idiv
arpl
repnz
jmp
das
fidivr
fsubp
mov
ds
fidivr
mov
out
das
or
jl
loopne
push
es
mov
inc
adc
pop
retf
and
cmp
dec
or
or
repnz
fwait
and
or
shr
repnz
push
push
inc
in
dec
inc
add
pop
add
sbb
push
mov
sub
mov
retf
iret
outs
add
loop
cmp
jmp
repnz
test
stc
inc
and
or
rcr
jecxz
out
inc
add
mov
jmp
pop
sub
xor
and
adc
adc
in
enter
scas
out
sbb
in
or
and
cmp
cld
in
and
fmul
and
cdq
inc
test
ror
mov
adc
stos
add
out
enter
test
add
mov
iret
xchg
push
shr
mov
xor
test
cs
xchg
sub
xor
sub
xor
sub
push
aas
cdq
push
add
jp
in
or
repnz
fwait
mov
repnz
repz
mov
lods
mov
lods
push
rol
sbb
std
stc
or
xchg
(bad)
call
imul
fcomp
jmp
jge
ins
call
shl
xlat
ss
(bad)
xlat
call
mov
jns
sbb
jo
mov
repz
in
xlat
jmp
pop
cld
mov
cs
out
cli
sbb
clc
out
jae
icebp
pop
imul
sub
pop
mov
das
mov
ds
xchg
push
cmp
and
cmp
xchg
rol
movs
add
add
sub
leave
pop
mov
popa
pop
dec
pop
xchg
inc
mov
stos
into
pop
add
shr
(bad)
lahf
adc
add
ins
fidiv
adc
xor
mov
mov
sbb
cwde
dec
add
addr16
sub
ss
ss
mov
xor
xor
cmp
ret
std
ret
or
mov
les
jecxz
sub
mov
adc
inc
inc
jmp
push
mov
add
shr
cmp
pop
sbb
clc
add
bound
jg
bound
xor
jne
mov
sbb
add
shr
and
in
xor
jo
inc
cdq
or
xchg
push
mov
icebp
xor
retf
pop
test
inc
aas
jge
push
movs
mov
and
mov
test
(bad)
(bad)
fadd
pop
inc
jne
cmc
mov
dec
or
pusha
or
push
lods
mov
mov
pop
mov
fdivr
mov
mov
adc
mov
xchg
xchg
lock
popf
sub
sbb
mov
test
sub
retf
push
jns
imul
mov
aam
sar
lds
cdq
jno
mov
sub
add
ror
jmp
hlt
cli
test
sti
rcr
outs
mov
pop
pop
(bad)
jmp
arpl
pop
pop
dec
ror
ins
jge
or
pop
pop
repz
shl
mov
scas
dec
mov
into
sar
xchg
push
pop
cld
ss
stc
int
hlt
in
dec
hlt
cmc
(bad)
hlt
cmc
std
sub
int
stos
(bad)
cli
add
ss
aad
push
jmp
daa
iret
pop
adc
ins
cli
cli
int
hlt
in
imul
xor
ror
daa
cli
or
jmp
fwait
hlt
(bad)
jae
call
fist
ins
or
pop
mov
shr
dec
jmp
in
cmps
fwait
pop
pop
xchg
ror
add
call
pop
pop
pop
add
or
adc
popa
xchg
cwde
sbb
arpl
ror
sbb
daa
inc
push
retf
add
cli
daa
in
push
sub
and
xchg
add
adc
xor
stos
sbb
hlt
stc
xchg
and
jno
add
inc
pop
(bad)
pop
pop
daa
jg
xchg
cld
std
add
adc
pusha
add
jmp
inc
mov
adc
sbb
mov
push
cmove
xor
mov
sbb
mov
nop
cmp
les
add
adc
or
mov
aas
and
cli
mov
imul
inc
inc
call
adc
fadd
sub
sar
add
je
xchg
dec
add
fnstcw
retf
fild
xchg
ret
sbb
or
mov
cwde
shl
sbb
xor
or
push
aad
jmp
xchg
push
adc
fs
mov
push
mov
xor
shl
aam
sub
mov
jnp
mov
push
sub
out
or
loopne
inc
add
mov
dec
xchg
inc
int3
mov
shl
ins
and
mov
pop
mov
outs
jno
test
push
push
je
je
and
les
sub
xchg
adc
ss
mov
imul
xchg
adc
ss
jg
lea
ror
mov
test
cdq
add
xor
(bad)
mov
inc
test
imul
fs
push
cs
mov
dec
rcr
pop
callw
imul
mov
popf
mov
jb
push
lock
pop
ja
mov
adc
and
jge
jge
ds
cld
loope
xor
jge
out
jge
rol
mov
addr16
shl
mov
shl
mov
(bad)
ja
or
mov
jmp
repz
shl
das
fisub
jge
jmp
in
psubsw
out
out
add
pop
mov
(bad)
mov
call
xchg
pop
or
cmps
rcl
icebp
push
add
ret
and
cld
fcmovnbe
xlat
dec
ds
out
push
test
xlat
sub
dec
push
mov
pop
or
in
xor
cli
jle
fmul
test
call
test
test
jle
das
scas
out
cmc
cmc
in
pop
push
push
inc
jne
(bad)
fcmovu
push
stos
adc
inc
adc
stos
data16
stos
mov
rcl
inc
xchg
lea
rcr
je
outs
mov
add
(bad)
aam
dec
jmp
in
ss
jge
mov
rcr
adc
pop
ja
pop
scas
push
repnz
mov
mov
and
add
aam
cld
and
in
dec
adc
fs
das
fs
in
add
std
mov
push
xor
inc
add
cmps
lds
(bad)
popa
push
push
or
aad
xor
xor
inc
repz
mov
xchg
arpl
fsub
xchg
loop
mov
nop
cmp
ret
aaa
xor
mov
dec
icebp
out
cld
push
cmps
(bad)
mov
push
lods
pop
fldenv
int3
shl
ror
clc
sti
sub
add
mov
cmp
push
mov
xor
or
call
add
movs
xchg
xor
pop
push
push
pop
mov
adc
mov
adc
icebp
and
jns
mov
bound
jb
add
sub
push
pop
mov
dec
cld
into
push
mov
sub
add
sub
xor
mov
add
cli
xchg
adc
inc
and
sbb
sar
bound
sbb
imul
pop
add
lea
fidiv
int
ror
imul
fidivr
sahf
cmps
iret
scas
int3
rcl
shl
cdq
int
xlat
out
hlt
callw
sub
aaa
pop
(bad)
outs
ins
or
mov
fstp
scas
outs
or
mov
or
fistp
retf
out
ss
xchg
cmp
inc
fistp
cld
ins
cli
call
retf
imul
repz
push
sar
movd
jmp
std
retf
sub
aaa
mov
push
cmps
daa
push
lds
mov
sub
push
add
fstp
fs
mov
pop
or
inc
fcmovbe
xor
push
inc
inc
std
bound
sar
inc
xchg
add
push
add
repnz
and
cmp
or
adc
push
or
enter
jmp
inc
stos
imul
outs
outs
dec
adc
scas
ds
add
pop
xchg
push
push
pop
ins
test
mov
lds
in
xor
retf
inc
fstp
sub
jmp
sub
sbb
inc
mov
clc
fsub
daa
in
popf
clc
leave
and
mov
je
(bad)
aad
les
mov
fs
mov
xchg
lea
cmp
adc
cmp
aam
mov
nop
mov
cmps
stc
pop
push
mov
popf
add
stc
mov
push
retf
test
mov
or
pop
pop
pop
cmps
mov
xchg
jne
adc
xchg
shl
shl
lahf
add
cmps
or
cmp
(bad)
(bad)
xchg
pusha
inc
add
cwde
rcl
mov
or
or
mov
push
jmp
cdq
retf
adc
adc
inc
aam
add
or
test
movs
inc
xchg
aas
and
das
xchg
add
xor
inc
mov
mov
imul
jle
and
(bad)
inc
ss
sub
and
iret
mov
or
inc
inc
mov
ins
cmps
mov
cmp
bound
inc
ret
or
iret
sub
mov
adc
dec
scas
sub
push
xlat
xchg
call
add
fwait
iret
outs
sub
cmps
aaa
pop
(bad)
outs
repnz
popf
xor
loopne
jnp
cmp
inc
lahf
fcompp
(bad)
sbb
mov
and
ja
mov
movs
out
mov
pop
call
ficom
int
dec
loop
fisubr
jle
lock
imul
mov
cld
cld
sub
hlt
out
mov
sti
fsub
or
sub
arpl
adc
xchg
jp
test
rol
out
jbe
bnd
mov
add
xchg
pop
jmp
inc
xor
cmp
int3
repz
push
add
add
mov
mov
dec
and
jnp
ss
push
iret
and
pusha
add
imul
or
ins
scas
cmps
mov
jae
mov
(bad)
dec
dec
popf
cmp
fcomp
push
and
cmp
add
xchg
pop
pop
test
sbb
push
push
pop
dec
addr16
adc
xlat
xchg
and
add
adc
push
mov
cs
adc
mov
(bad)
sbb
mov
out
(bad)
jae
inc
or
inc
(bad)
es
ss
push
addr16
mov
sub
retf
fld
retf
fsubr
out
dec
hlt
(bad)
xchg
loop
inc
jmp
fwait
mov
test
imul
adc
ins
ins
shr
cmps
and
xor
pusha
fcomp
or
popa
cmc
mov
clc
aad
xlat
or
ins
cmp
push
xlat
or
sbb
inc
add
xor
adc
jmp
pop
dec
pop
mov
cmp
inc
cld
add
add
add
cmp
jmp
pop
je
enter
mov
mov
out
jne
push
push
rcr
inc
std
and
xchg
dec
hlt
mov
add
push
enter
dec
jecxz
and
movs
aad
jp
arpl
das
into
rcl
push
pop
call
add
mov
pop
mov
jmp
xor
outs
inc
mov
pop
imul
or
mov
or
dec
pop
add
inc
imul
scas
ins
mov
ins
sar
xchg
push
add
pop
pop
mov
mov
movs
mov
ins
rcr
pushf
out
popf
fwait
pop
jmp
outs
pop
adc
mov
(bad)
ja
ror
(bad)
xor
dec
shl
add
or
fild
inc
and
cmc
jbe
repnz
push
mov
jmp
in
push
cmc
jmp
jle
add
adc
jl
leave
retf
add
pop
or
aas
(bad)
adc
adc
mov
add
sub
stos
stos
sub
test
pop
mov
scas
ror
push
jae
xor
xor
fist
dec
adc
jmp
ins
or
mov
inc
add
adc
sbb
fist
daa
outs
and
outs
jmp
mov
add
xor
mov
imul
add
cli
jns
jmp
cmp
stc
sub
sti
xchg
fbld
test
and
sub
aas
and
add
pop
iret
punpcklbw
xchg
aas
fmulp
in
repnz
nop
inc
movs
xchg
cmc
std
fadd
mov
dec
div
cmp
or
xor
push
aas
mov
add
adc
add
xor
gs
rcl
mov
pusha
sbb
pop
or
sub
inc
sub
jl
inc
retf
inc
mov
sar
mov
daa
cmp
adc
push
pop
and
add
repnz
and
sbb
jne
or
test
mov
inc
mov
inc
jae
jbe
or
pop
call
jne
test
pop
pop
mov
addr16
out
in
stc
out
dec
cdq
outs
outs
scas
rcl
ja
or
sub
mov
push
xchg
jp
lea
(bad)
jns
jns
xor
stc
clc
fisub
jge
gs
fidivr
fnstcw
inc
outs
pop
mov
add
shl
lods
or
rcl
pop
fbld
stc
jnp
out
jp
rcr
fstp
int
or
cmps
mov
aam
push
inc
ins
sub
sbb
fs
ins
ins
imul
fiadd
mov
add
add
das
mov
xchg
retf
cwde
sub
adc
inc
jge
cmp
fwait
sbb
lods
mov
inc
cmp
ins
(bad)
rol
add
and
aaa
sub
inc
xor
add
inc
mov
sub
push
repnz
ja
rcr
sahf
adc
cmp
adc
call
cmp
sbb
sti
imul
mov
mov
jmp
inc
stc
sbb
mov
loopne
add
xor
sub
outs
lahf
arpl
push
aas
enter
jg
adc
shl
pop
movs
clc
dec
xchg
in
div
push
movs
leave
and
test
fistp
loope
dec
daa
nop
adc
add
fdivr
(bad)
push
inc
inc
inc
push
std
cmp
aas
push
das
sub
iret
xchg
mov
xchg
imul
and
hlt
iret
sub
movs
add
jle
add
mov
push
pop
pop
and
jmp
je
add
movlps
jp
push
push
jl
cmp
or
pop
cmp
jnp
sub
mov
icebp
or
inc
imul
jg
and
cmp
sub
loope
add
pop
movs
mov
daa
inc
add
push
add
or
mov
(bad)
pop
movs
scas
out
mov
ficomp
add
add
cld
in
(bad)
cmps
nop
aas
xor
xor
inc
pop
pop
pop
ja
out
fucomp
gs
ret
jg
push
jmp
xlat
xor
pop
movs
push
pop
or
mov
scas
shr
mov
in
xchg
loopne
test
mov
inc
retf
adc
xchg
fimul
jbe
push
inc
jae
xor
push
push
or
push
add
test
pop
inc
mov
inc
inc
inc
adc
jmp
retf
pusha
push
inc
outs
sub
mov
adc
and
mov
cmps
push
or
mov
push
add
or
inc
adc
sub
in
xor
fcom
add
push
jg
rol
inc
(bad)
cmp
(bad)
fimul
pusha
inc
inc
add
fstp
test
mov
jp
aaa
stos
add
mov
pop
mov
mov
push
movs
iret
sub
mov
cmps
out
and
add
cld
dec
add
and
inc
mov
sbb
in
div
xor
adc
movs
(bad)
lahf
adc
sub
iret
adc
sbb
push
xchg
xor
sbb
mov
fs
sub
inc
movs
outs
xchg
sub
mov
push
add
lods
outs
fs
dec
push
imul
loope
ror
test
in
pop
add
or
cli
sub
and
or
adc
push
add
jne
xchg
xchg
scas
cmps
mov
pop
sub
outs
adc
inc
sub
inc
push
rcr
aam
dec
sbb
pop
inc
pop
call
or
retf
mov
ins
mov
test
cmps
inc
add
dec
or
aaa
(bad)
jmp
push
jge
jg
lock
(bad)
and
jmp
and
out
jmp
mov
mov
lock
into
shr
rcl
loopne
int
jp
gs
jns
lds
sbb
hlt
jo
out
push
jmp
iret
mov
fdiv
push
inc
mov
dec
adc
mov
aad
push
push
ins
push
xor
mov
int
push
push
dec
sub
mov
adc
sbb
xchg
add
fcom
mov
cmp
add
nop
aas
push
add
inc
push
adc
mov
sbb
xchg
inc
add
cmps
mov
pop
cwde
push
push
add
adc
push
dec
add
pop
adc
inc
push
inc
sbb
add
or
inc
dec
xchg
add
adc
out
mov
add
outs
sbb
popf
fadd
mov
arpl
movs
dec
and
add
dec
hlt
bswap
and
fstp
xchg
mov
adc
adc
adc
shl
or
aam
pushf
rcl
fst
clc
inc
cli
xchg
pop
clc
and
push
das
ror
or
test
inc
inc
aam
call
ret
or
pop
mov
or
mov
stos
and
pop
jl
out
mov
jg
or
(bad)
repnz
jecxz
mov
push
mov
adc
mov
jecxz
pop
es
(bad)
sbb
xchg
pop
adc
add
pusha
out
and
pop
push
or
fisub
jmp
sub
adc
mov
jg
mov
xor
out
or
jae
mov
push
xchg
inc
add
fistp
(bad)
jns
adc
fistp
fs
or
adc
(bad)
scas
dec
(bad)
jmp
add
fnstenv
mov
(bad)
addr16
mov
hlt
adc
loopne
das
mov
ds
mov
fstp
mov
jg
xchg
outs
scas
int3
rol
aam
int
test
ins
jne
push
pop
dec
or
test
pop
inc
mov
(bad)
inc
popf
mov
xor
jo
ja
mov
test
in
inc
dec
popa
push
add
fcmovbe
xchg
and
test
mov
lahf
movs
clc
cmp
jbe
xor
mov
push
xlat
fadd
add
jb
jmp
add
cmps
rcl
and
sti
xchg
sbb
cmps
pop
lahf
xlat
adc
sahf
out
mov
add
xor
sub
mov
lea
add
add
mov
mov
and
mov
lea
sub
or
sbb
jp
jbe
pop
mov
popf
call
adc
mov
fiadd
mov
mov
pop
adc
or
xchg
push
inc
sub
mov
xchg
stos
stos
add
or
pop
mov
or
or
rcl
adc
in
mov
popa
leave
pop
push
or
xchg
inc
ficom
xchg
mov
popa
pop
(bad)
sti
sub
jge
mov
add
mov
mov
sbb
jg
pop
add
add
push
or
(bad)
pusha
stc
sub
cmp
xchg
add
adc
pop
lds
aam
push
sub
add
js
test
push
dec
popf
popf
mov
rcl
sahf
out
cmp
rol
hlt
rcl
popf
cmp
iret
push
jnp
sub
or
rol
or
adc
scas
scas
(bad)
rcr
jmp
hlt
loope
and
jp
push
dec
and
loop
mov
cmp
inc
clc
aad
xor
loopne
sub
outs
lods
shl
xlat
push
call
sub
std
mov
call
sbb
inc
adc
jne
lock
pop
inc
iret
icebp
jp
pusha
jne
out
cs
or
mov
ss
call
cdq
pop
cmps
mov
add
inc
mov
scas
out
push
sub
stos
inc
stos
scas
mov
lods
sub
call
jnp
sub
pop
cmp
xor
imul
ja
push
arpl
xor
addr16
repnz
test
inc
fisub
adc
shl
mov
adc
aad
mov
scas
iret
pop
xchg
inc
pop
(bad)
fmul
adc
pop
iret
jns
jg
sbb
or
xchg
aaa
xor
shl
inc
jg
dec
mov
inc
sbb
mov
add
outs
jmp
sbb
and
add
adc
icebp
xchg
mov
inc
sbb
adc
int
call
and
xor
sbb
or
xchg
mov
inc
add
adc
inc
or
ds
addr16
mov
adc
dec
dec
(bad)
and
pop
cli
cld
pop
arpl
(bad)
fstp
pop
pop
loop
inc
and
daa
or
add
jmp
test
in
or
daa
add
pop
add
push
test
push
mov
in
sbb
add
pusha
adc
sub
and
adc
add
dec
add
sub
adc
retf
pop
add
or
push
lahf
mov
mov
dec
or
or
xchg
movs
xchg
jmp
aas
(bad)
inc
icebp
push
adc
call
xor
ja
loop
and
or
pop
imul
out
jge
shr
or
adc
das
outs
sub
or
clc
cld
(bad)
xor
jnp
inc
jo
enter
fstp
mul
xchg
inc
cli
loopne
add
ficomp
push
cmps
call
sub
cmp
mov
lock
mov
cmp
retf
rol
pop
out
sub
dec
mov
cmp
sub
call
mov
test
jbe
push
lock
sub
lods
mov
retf
mov
adc
mov
and
mov
ins
or
mov
cmp
add
and
or
sbb
daa
add
push
clc
jmp
in
pop
push
and
mov
push
xchg
cmc
add
push
adc
fcmovnu
inc
lea
in
test
pop
not
inc
add
daa
cmp
cmp
and
(bad)
and
add
add
(bad)
sbb
test
and
sub
add
dec
daa
adc
push
add
or
and
push
mov
mov
add
pop
xor
movs
inc
and
adc
inc
(bad)
(bad)
scas
pop
dec
adc
add
loopne
aas
sub
inc
jle
movs
sbb
xor
cld
test
and
add
jp
loop
popa
mov
mov
xchg
aam
xor
cmc
jne
int3
pop
mov
adc
dec
pop
cmp
sub
leave
jle
push
sbb
mov
aad
add
pop
sahf
and
mov
rcl
mov
pop
adc
cmps
shl
aas
inc
xor
arpl
jp
xor
pop
push
xor
adc
and
xor
retf
sub
pop
addr16
je
and
data16
cld
rol
mov
and
out
sub
pop
cwde
jb
adc
add
mov
lahf
repnz
js
inc
adc
ds
pop
pusha
add
popf
or
hlt
(bad)
out
mov
scas
dec
mov
dec
or
fsubr
xor
retf
mov
mov
repnz
pop
sbb
ja
pushf
outs
das
dec
shr
aas
es
(bad)
repnz
pop
pushf
bound
cmps
xchg
mov
adc
push
ja
jne
xchg
push
jae
adc
push
popf
cmps
stos
mov
push
push
jp
sub
in
cli
xchg
in
pop
sti
adc
xchg
lahf
mov
or
add
add
test
mov
movs
add
jp
mov
mov
fldenv
mov
cli
add
add
nop
inc
add
std
or
(bad)
and
add
(bad)
leave
inc
xlat
sbb
add
adc
adc
mov
jge
ds
xor
clc
or
mov
inc
push
add
add
call
pop
dec
sbb
pop
(bad)
in
xchg
add
leave
inc
add
or
or
mov
fild
sub
jb
inc
xor
mov
dec
adc
adc
inc
adc
sub
add
inc
xchg
daa
cli
mov
xchg
push
add
loop
push
cmp
add
push
mov
jecxz
and
adc
add
call
fisttp
dec
mov
add
and
sub
or
and
stos
add
fcomp
push
inc
xchg
inc
mov
or
xchg
add
test
sub
ficomp
mov
fisttp
mov
inc
outs
adc
(bad)
into
or
add
adc
inc
or
add
jmp
xor
add
aad
popa
jp
gs
pop
sbb
add
adc
nop
shr
mov
fstp
js
inc
shl
aas
das
rol
xlat
push
test
cli
daa
and
(bad)
push
or
repnz
nop
inc
adc
pop
sbb
bnd
popa
mov
mov
cmc
cdq
adc
out
jmp
sahf
sbb
sbb
add
lds
push
xor
out
aad
push
lahf
mov
ret
add
cmps
nop
ror
retf
adc
dec
adc
add
or
sub
adc
jge
mov
and
adc
jns
pop
and
lods
xchg
lea
mov
pop
mov
push
ret
push
jns
mov
hlt
or
hlt
test
(bad)
adc
fcomp
mov
mov
shr
inc
add
adc
inc
adc
and
sbb
jmp
mov
stos
add
shl
jne
icebp
sbb
and
mov
out
test
add
gs
xor
mov
mov
inc
pop
pop
rcr
push
inc
push
add
jne
mov
and
add
or
xor
inc
ret
inc
xchg
data16
pusha
lock
push
sub
adc
or
push
or
icebp
push
cmp
mov
mov
outs
stc
rcl
add
and
push
add
pusha
sub
retf
iret
or
adc
shl
mov
test
in
imul
mov
mov
je
push
xchg
cmps
call
daa
test
clc
or
hlt
xlat
rcl
fs
pop
sbb
ror
test
mov
mov
sti
sbb
inc
xor
stc
hlt
repnz
outs
xlat
add
dec
and
fwait
adc
ret
(bad)
repnz
xlat
xchg
call
or
loope
jns
xchg
fcomp
mov
shr
or
(bad)
in
inc
and
and
out
idiv
sub
sbb
pop
sahf
push
mov
imul
ins
xor
mov
adc
inc
pop
test
stc
not
and
iret
push
dec
rcl
pop
cld
xor
adc
test
ds
inc
movs
addr16
out
call
cmp
int
int3
shl
in
jbe
stos
loopne
scas
aad
and
or
and
rol
stc
imul
push
setg
sahf
repnz
shr
in
aas
push
adc
shl
aaa
call
imul
mov
mov
imul
or
stos
outs
movs
cmps
out
push
add
jmp
add
ret
ret
dec
adc
add
jle
icebp
je
outs
pusha
rcl
(bad)
out
repz
ror
inc
push
add
dec
and
call
test
daa
leave
inc
add
jne
and
push
sahf
call
xor
xor
add
mov
push
push
add
inc
dec
in
jne
mov
vpunpckhdq
popf
inc
scas
pop
fsubr
(bad)
jne
add
pusha
sub
or
push
sar
ror
shl
sub
cwde
mov
push
push
popa
loope
aad
fs
arpl
stos
and
xor
mov
cmp
out
pop
inc
cmp
sbb
out
les
mov
je
pusha
dec
arpl
push
add
adc
adc
pop
add
mov
mov
(bad)
xchg
cmp
in
ss
xor
inc
(bad)
push
aam
outs
daa
dec
pop
adc
mov
push
or
xchg
inc
jmp
pop
mov
mov
pusha
aam
inc
adc
and
add
daa
xchg
cmps
test
retf
adc
iret
scas
iret
or
test
jge
jae
mov
jmp
jp
xchg
pop
mov
movs
(bad)
das
das
mov
mov
mov
imul
adc
add
bnd
outs
test
dec
pop
inc
(bad)
ss
adc
scas
xchg
or
mov
adc
sub
clc
scas
loopne
(bad)
rcr
lahf
jns
into
icebp
stc
push
xor
mov
xor
popa
jns
or
inc
pop
shr
add
pop
in
jmp
mov
adc
cmp
and
test
pop
adc
fld
pop
cli
and
clc
cmp
mov
sbb
sbb
mov
daa
les
and
pop
mov
push
and
pop
jnp
sbb
and
xchg
inc
shr
mov
mov
adc
out
mov
add
or
mov
jnp
sub
outs
pop
add
call
ror
inc
pop
add
adc
mov
in
inc
(bad)
fcom
inc
mov
xchg
adc
mov
or
mov
xchg
mov
sub
pop
retf
and
inc
add
jg
retf
pusha
mov
and
and
lods
or
or
add
cmp
in
push
push
push
inc
test
movs
je
inc
or
stos
test
loop
inc
aad
xchg
xchg
je
sub
hlt
into
mov
sahf
cs
bound
sbb
push
xor
test
test
inc
or
push
add
pop
add
add
sahf
push
add
(bad)
xor
pop
retf
sub
xlat
dec
xchg
cwde
xchg
outs
jmp
sbb
dec
pop
sbb
add
jns
and
sub
inc
and
mov
(bad)
dec
and
push
add
mov
pop
shl
iret
outs
das
shl
out
or
jns
loop
aad
cld
pop
je
mov
(bad)
pop
cmps
out
fstp
adc
clc
cmc
in
jne
shl
retf
fwait
jmp
stc
cmc
push
cli
in
cli
or
adc
add
inc
adc
std
test
cmp
dec
xlat
cmps
pop
jmp
adc
pop
push
inc
loop
add
cmp
repz
(bad)
fild
ins
push
aam
pop
dec
lea
dec
enter
lahf
cmps
shl
stc
cmp
out
push
dec
rcr
and
mov
inc
jge
pop
or
pop
test
add
jg
pop
sbb
sub
add
pop
fsub
and
pop
inc
lods
sbb
xchg
stos
add
sub
push
mov
pop
or
inc
fld
or
add
push
inc
jne
push
push
scas
mov
test
pop
outs
jmp
xchg
pop
lea
sub
inc
adc
adc
ja
and
add
shl
test
or
outs
add
sub
sub
jge
mov
adc
xchg
jne
adc
(bad)
xchg
shr
xchg
inc
push
fsub
xchg
and
add
lahf
rol
mov
test
mov
ret
inc
xchg
stos
retf
dec
aaa
xor
fnsave
int3
pusha
fcom
mov
sbb
mov
sbb
push
pushf
sub
add
bswap
sub
pusha
fnstenv
push
mov
out
popa
adc
out
clc
cmp
cmp
fisub
cmp
and
mov
add
inc
add
xor
popa
add
ret
test
jp
or
fisubr
sub
ins
movs
js
xchg
add
inc
add
push
(bad)
mov
aam
push
call
mov
pop
cmp
lods
xchg
add
cmc
or
xlat
lods
cmp
add
add
jg
adc
xchg
hlt
dec
and
nop
setg
push
lock
sahf
mov
fild
pop
jmp
in
or
mov
mov
xchg
test
jmp
add
sub
jo
dec
jmp
push
pop
sbb
cmc
mov
out
scas
cmps
into
out
rcl
sbb
xchg
lahf
std
cmp
jg
cmp
iret
rcl
cmp
xlat
jecxz
jmp
iret
push
nop
cli
xchg
into
sub
mov
cmp
pop
stc
imul
cld
mov
aam
aam
inc
jae
sub
inc
icebp
scas
xchg
add
stos
pop
data16
test
ret
stos
inc
hlt
xor
cs
mov
pop
push
popa
push
inc
pop
xor
fstp
sub
dec
mov
fst
or
ins
push
adc
call
enter
or
or
jne
rol
movs
retf
pop
popa
and
loope
pop
imul
cmp
jmp
repnz
push
mov
sbb
push
arpl
mov
stos
adc
test
gs
js
cmps
adc
aas
inc
add
jecxz
or
jmp
ins
syscall
pop
movs
add
sub
xchg
dec
xor
popa
fadd
or
hlt
je
pop
inc
sbb
xor
adc
inc
or
iret
stos
xor
push
jmp
scas
xor
dec
jecxz
retf
xor
mov
mov
jns
xchg
mov
les
mov
jge
inc
xor
adc
xchg
shr
xchg
xor
test
or
and
cmp
mov
inc
sub
adc
jb
adc
popa
jno
xchg
xchg
mov
push
mov
aaa
sbb
mov
jg
sub
sbb
push
mov
mov
dec
retf
fcomp
sub
sub
pop
loope
push
shl
bound
test
movs
das
rcr
into
das
fbstp
inc
fwait
imul
and
rcl
adc
xchg
shl
push
pop
ins
dec
hlt
shr
fmul
scas
or
hlt
push
repz
cli
or
cmp
outs
dec
shl
cmps
inc
aaa
xor
shr
pop
cmps
out
aas
fsub
mov
movs
into
call
hlt
std
out
call
mov
fwait
mov
idiv
sti
fwait
into
adc
(bad)
jge
xor
and
xchg
push
addr16
pop
cmps
call
sbb
sub
push
xchg
mov
inc
mov
mov
jmp
sbb
push
test
mov
dec
jne
addr16
rcl
popf
cmp
jp
pop
pop
stos
push
mov
loop
jno
mov
and
xchg
push
push
int3
frstpm(287
in
mov
jmp
mov
out
push
sahf
fidiv
push
mov
mov
xchg
ret
sub
pop
mov
inc
xchg
and
pop
stc
ret
ds
jp
(bad)
(bad)
(bad)
aam
inc
jne
gs
pop
push
sub
mov
pop
rcl
dec
sbb
mov
fistp
mov
mov
xchg
mov
push
pop
mov
jnp
inc
jmp
pop
ficomp
fimul
xchg
pop
enter
idiv
aaa
cmp
shl
and
mov
xchg
mov
cmp
or
std
mov
sbb
xor
in
rcr
pushf
pop
(bad)
pop
out
inc
retf
loopne
or
adc
addr16
sahf
ins
hlt
and
dec
mov
dec
int
(bad)
in
adc
sar
cmps
imul
movs
imul
dec
and
mov
mov
mov
mov
add
mov
jmp
push
lahf
mov
outs
xor
wrmsr
ret
sti
add
stos
sub
sbb
lods
or
xchg
xchg
sar
ror
fstp
add
jo
jo
cli
movs
inc
imul
pop
in
sub
sub
mov
add
adc
or
bound
dec
mov
aad
adc
(bad)
shr
or
sar
mov
imul
add
adc
or
js
or
pop
push
ret
sub
or
and
scas
mov
pop
movs
cmp
arpl
dec
seta
repnz
and
ds
pop
ins
(bad)
shl
xchg
cmp
add
hlt
dec
retf
sbb
out
mov
pop
imul
hlt
cld
es
rol
add
mov
pop
mov
inc
or
in
imul
jge
arpl
pop
xor
ficomp
sar
imul
das
dec
sar
mov
and
inc
mov
pop
sbb
mov
sbb
cdq
mov
adc
mov
mov
inc
inc
add
xchg
dec
into
jle
sahf
stc
out
adc
adc
sub
out
mov
and
mov
cmc
add
mov
cmp
lds
popf
(bad)
inc
add
out
jge
adc
cmc
push
sub
pop
push
xchg
mov
sub
jl
mov
fisubr
xchg
mov
mov
mov
aad
xchg
cmp
pop
pop
push
inc
lea
ja
add
mov
jg
add
mov
add
fcomp
inc
lods
popf
sbb
adc
push
sub
ret
jl
iret
add
test
xchg
add
call
loop
add
and
icebp
sbb
dec
movs
ficomp
retf
lahf
adc
icebp
or
nop
add
xor
into
mov
add
jne
inc
popf
or
retf
cmp
mov
xor
xor
test
push
or
add
sbb
lock
and
sub
adc
jecxz
popa
inc
xchg
test
ret
cmp
nop
shl
add
sbb
pop
ret
jp
test
sbb
and
iret
xchg
mov
inc
inc
inc
rcl
sbb
imul
add
xchg
stos
mov
enter
daa
test
jmp
imul
hlt
pusha
adc
cmp
or
jnp
jecxz
call
in
lods
push
push
inc
stos
pop
fbstp
test
ja
pop
mov
int
push
inc
dec
mov
lock
mov
ror
lods
test
addr16
rol
mov
call
out
jmp
dec
hlt
loop
or
pop
sbb
loop
ja
push
int3
fistp
movs
imul
add
dec
les
(bad)
dec
mov
mov
gs
sub
xchg
outs
or
test
mov
push
adc
dec
push
(bad)
out
sar
mov
out
push
(bad)
pusha
aaa
lea
test
and
inc
mov
inc
pop
and
xlat
iret
loop
gs
jl
rol
inc
mov
inc
add
test
jg
add
jmp
mov
push
into
inc
scas
lahf
shrd
and
inc
shl
inc
add
cmp
pop
ins
mov
shl
test
or
shl
mov
mov
jmp
add
mov
daa
xchg
and
adc
jb
jnp
inc
push
add
add
movs
add
or
mov
arpl
arpl
mov
ja
retf
fucomip
movs
(bad)
and
cdq
and
add
sbb
shr
lahf
mov
ins
enter
mov
lock
fnsave
int3
pusha
enter
sbb
daa
add
je
add
inc
daa
jp
(bad)
mov
xchg
lahf
ja
or
pop
adc
xchg
or
sub
sub
inc
add
jg
repnz
movs
mov
add
dec
pop
sub
retf
bnd
xchg
aas
inc
rcl
adc
pop
sbb
imul
pop
or
call
cli
jns
outs
mov
neg
or
sar
scas
mov
dec
jno
arpl
add
xchg
(bad)
sbb
repz
lds
add
jge
pop
or
xlat
cvttps2pi
adc
clc
std
pop
mov
pop
adc
out
mov
and
or
cld
call
imul
lock
sub
into
in
jp
jge
sahf
pop
sbb
xor
mov
xor
pop
sbb
shl
icebp
cmp
push
sub
fsubr
mov
inc
cld
cs
mov
cld
sub
push
nop
loop
in
aam
push
dec
dec
xchg
add
int
test
and
fidiv
fisub
mov
mov
loop
add
xchg
iret
clc
bound
pop
lods
iret
rcr
xchg
aaa
mov
fisubr
call
and
mov
sub
bound
sbb
into
pop
adc
loop
or
or
sub
push
adc
ror
ficom
in
mul
fisub
and
repnz
add
gs
mov
(bad)
xchg
add
je
xchg
sar
cmp
mov
(bad)
hlt
invd
loopne
loop
mov
add
hlt
pop
mov
jl
inc
inc
add
cld
lea
sub
add
add
adc
mov
jle
inc
sub
out
jns
mov
int
outs
mov
scas
or
adc
cwde
out
mov
mov
ror
loope
and
jl
xchg
mov
sbb
ret
push
adc
rol
or
mov
push
mov
in
push
dec
pop
or
add
cs
dec
daa
add
dec
mov
push
mov
ss
xor
dec
rcr
cmc
daa
mov
push
sub
push
or
ins
lods
jp
je
mov
jmp
int
jp
movs
out
fucomp
imul
xchg
lods
js
mov
sbb
neg
pop
pop
call
pop
adc
mov
inc
add
add
sbb
les
movzx
mov
jle
adc
es
pop
or
push
inc
out
scas
mov
ja
rol
dec
js
sbb
jnp
imul
pop
pop
sbb
rcl
push
pop
lods
mov
sbb
fisttp
mov
mov
adc
jne
aam
jle
sbb
push
ins
rcl
pop
push
dec
shl
fstp
cwde
cmps
fld
bound
mov
add
cmp
daa
mov
cmp
cmp
dec
sbb
push
dec
in
movs
push
into
sti
stos
lods
sub
push
(bad)
mov
int
cmps
add
test
mov
std
xchg
icebp
jne
pop
iret
cwde
inc
dec
jno
xchg
xchg
xchg
or
ins
imul
mov
cli
add
xchg
inc
push
add
cmc
or
ins
push
or
enter
clc
and
fsubr
add
lea
and
pop
test
sub
cs
inc
daa
daa
xchg
mov
call
fadd
and
lea
dec
mov
dec
sbb
adc
xchg
test
sub
mov
mov
or
mov
xor
push
jle
sub
sbb
dec
sbb
jne
mov
mov
adc
mov
fidiv
push
les
sti
cmps
or
in
or
push
test
sar
aam
pop
inc
add
test
in
adc
ja
add
shl
(bad)
js
xor
dec
ret
inc
push
sbb
xchg
cmps
movs
mov
iret
pop
add
or
dec
cli
jmp
mov
cwde
adc
clc
faddp
sbb
loopne
pushf
sbb
add
mov
ds
neg
or
lea
test
enter
fwait
movs
(bad)
scas
into
mov
int
mov
xchg
and
xlat
inc
adc
dec
jecxz
in
rcr
xor
push
call
cwde
mov
pop
imul
mov
js
imul
xor
cmc
pop
and
push
mov
pop
pushf
mov
sbb
mov
sub
inc
in
adc
call
dec
repz
xchg
jge
call
inc
mov
loop
or
sub
mov
inc
mov
xchg
xor
xor
lahf
or
scas
add
mov
jg
sub
xor
push
inc
gs
add
mov
mov
inc
inc
std
push
add
xlat
or
and
je
sar
sub
ss
push
add
cmp
adc
mov
sbb
dec
xchg
shl
or
mov
mov
xor
add
xor
adc
popa
movs
add
add
aaa
mov
add
pop
dec
inc
test
imul
adc
mov
sub
sub
dec
and
scas
retf
push
add
popf
nop
inc
xchg
add
ja
(bad)
pop
adc
or
repz
inc
xchg
push
addr16
mov
cmp
sub
sbb
adc
pop
call
stos
or
xor
ins
cmps
cmc
mov
movs
jnp
or
gs
push
sub
rcr
cdq
sbb
sahf
mov
popf
mov
fstp
cmp
push
push
jmp
jge
sbb
call
sub
out
pop
pushf
mov
pop
push
cmps
jmp
ret
mov
cli
fidiv
pmaddwd
sbb
jnp
int
rcl
adc
aad
lock
sub
jge
ror
jp
mov
fisubr
add
xchg
xor
jecxz
mov
inc
xor
arpl
icebp
xor
scas
test
and
and
(bad)
cmc
in
int
jo
aas
das
mov
push
jnp
test
test
repnz
fwait
mov
test
pop
push
sbb
mov
test
add
or
sar
pop
aam
les
mov
adc
xor
cmc
cmp
add
pop
xchg
iret
rcl
push
stos
mov
scas
push
jmp
retf
mov
repz
ds
jne
cmc
or
mov
cmps
mov
outs
movs
sahf
sbb
mov
push
pushf
jp
mov
jb
lds
jl
jg
pusha
cwde
lds
retf
xor
lods
xchg
enter
out
in
dec
cmp
jge
mov
adc
test
(bad)
hlt
pmuludq
daa
mov
push
push
add
cmc
push
add
xchg
mov
sbb
fbld
and
or
fs
dec
sbb
inc
mov
adc
add
add
stc
xchg
vmovaps
jbe
sbb
inc
outs
call
add
adc
stc
ret
mov
ficomp
xor
or
fldl2e
add
cmp
and
in
xchg
or
xchg
lods
jle
xor
rol
push
or
push
jne
pop
pop
xchg
jp
call
ror
popa
das
or
sbb
nop
inc
fidivr
sub
push
jne
pushf
mov
arpl
jne
inc
ja
loop
imul
cmp
pushf
scas
sahf
cmps
jnp
push
mov
inc
fwait
loope
mov
push
mov
loop
add
(bad)
push
jmp
add
mov
mov
xor
fimul
cdq
out
jmp
mov
dec
imul
xor
nop
mov
jbe
push
lods
mov
or
lods
xchg
inc
lods
adc
popa
sbb
and
sub
mov
test
rol
xor
jg
sbb
dec
sbb
jge
push
sbb
push
mov
pushf
and
inc
pop
mov
cmp
sub
retf
sar
add
shl
mov
scas
or
pop
enter
test
ret
rcl
jno
test
or
mov
xchg
push
adc
add
mov
rol
ss
add
cmp
or
ror
cmp
ror
loopne
(bad)
loopne
add
inc
xchg
inc
je
sub
ret
dec
ss
xor
adc
popa
dec
inc
adc
adc
int
push
call
jae
sub
enter
add
imul
and
hlt
ret
sbb
xor
or
stos
pop
jmp
pop
xchg
and
sub
cs
sbb
fist
inc
int3
retf
call
mov
mov
cdq
and
cmp
hlt
mov
mov
xchg
popa
test
pop
jmp
inc
push
jnp
rcr
sub
ds
shl
lock
sbb
sbb
ror
mov
ret
mov
jp
sub
std
int
call
mov
jbe
xchg
scas
or
jmp
mov
inc
pop
pop
popf
gs
adc
sbb
nop
aas
or
outs
sub
idiv
arpl
stc
stos
into
mov
adc
repnz
lahf
and
xor
xor
aaa
xchg
mov
rcl
or
jmp
xor
inc
dec
mov
ficomp
int3
lahf
inc
std
popf
aam
ror
in
or
dec
pop
cmp
dec
xor
mov
fld
push
adc
inc
dec
and
in
sub
dec
mov
and
shr
dec
pop
ffree
stc
movs
cmps
push
push
into
sti
inc
xchg
xor
add
out
ficom
push
(bad)
pcmpeqw
jmp
sub
fcomp
push
jp
cmps
test
mov
push
jge
mov
rcl
test
cmp
cmp
and
cmp
pop
adc
jle
ffreep
pusha
adc
xchg
sbb
push
ror
fcom
dec
add
adc
mov
clc
in
and
int3
mov
xor
push
xor
pop
add
add
xor
outs
jo
vpcmpgtd
(bad)
arpl
cmp
sub
test
xchg
sti
inc
add
cs
sub
test
and
std
inc
das
ins
sti
lea
inc
ret
mov
jbe
add
test
sub
loopne
clc
mov
test
dec
add
xchg
cmp
fbstp
sub
mov
jp
test
or
test
cmp
mov
adc
push
pop
retf
push
push
inc
or
or
inc
retf
sub
repz
clc
pushf
pop
pushf
or
mov
sub
call
out
mov
jp
sub
repnz
pop
ret
push
rol
xor
xlat
(bad)
xchg
aas
hlt
xrelease
imul
pusha
fld
add
sbb
movs
xor
outs
mov
xchg
inc
pop
pop
inc
int
aam
push
sub
pop
iret
push
enter
xchg
popa
push
inc
add
cmp
xchg
jo
loop
lds
and
fcomip
pop
aas
lods
dec
or
lods
or
inc
jge
js
cmp
rcr
std
int
xor
popa
mov
mov
dec
imul
dec
xor
(bad)
sub
mov
call
pusha
jae
cmp
push
push
jno
or
cmp
scas
sub
inc
or
sahf
and
push
sub
mov
push
or
retf
and
lahf
and
cmps
push
arpl
jae
push
shl
das
inc
ds
repnz
shr
lahf
sub
hlt
mov
xor
(bad)
ins
out
jmp
mov
add
fs
lea
in
pop
add
loop
movs
cld
sbb
cmps
or
enter
cld
or
xor
or
mov
sub
inc
push
(bad)
jb
sbb
pop
mov
add
sbb
sub
pop
sub
jg
sbb
xor
or
sub
inc
adc
stos
lds
mov
pusha
enter
and
test
xchg
and
push
rol
out
iret
push
push
aad
sub
stos
in
test
push
das
dec
pusha
movs
xchg
or
jno
mov
clc
adc
cs
lods
mov
xor
mov
inc
add
dec
test
repnz
outs
int3
or
nop
call
mov
xor
inc
and
mov
mov
mov
repz
aad
mov
xor
jno
mov
shr
and
dec
movs
mov
pop
mov
sti
pop
test
push
xchg
push
iret
dec
adc
mov
push
mov
jg
sub
jae
outs
pop
dec
clc
imul
pop
arpl
pop
sbb
pushf
xchg
jns
rcl
adc
add
stc
jmp
and
mov
mov
pop
push
jne
inc
pop
cmp
pop
jns
cmc
aam
aad
sub
ds
add
lea
pop
push
mov
push
ja
pop
or
in
push
loop
adc
arpl
stos
les
and
xor
mov
rcl
sub
adc
imul
cli
and
adc
ja
lahf
add
or
jbe
push
adc
in
jmp
mov
jbe
clc
test
adc
jmp
je
hlt
push
mov
in
sbb
js
add
mov
(bad)
mov
nop
aam
and
cdq
sbb
mov
daa
mov
or
or
scas
add
mov
bound
add
(bad)
push
add
fst
cmc
ret
jb
and
dec
xchg
add
xlat
adc
sbb
in
dec
(bad)
neg
enter
ret
mov
sbb
add
add
sub
mov
ficom
loopne
jne
sub
dec
mov
fldenv
ret
push
pop
int
enter
iret
repnz
adc
jnp
sbb
cmps
pusha
cwde
movs
sub
inc
and
pop
dec
jae
add
loop
pop
repz
jo
movs
jno
aam
adc
xor
push
test
pop
cmps
dec
sub
push
int3
push
push
inc
ret
or
inc
inc
cmc
add
sub
inc
pop
cmp
js
xor
xchg
nop
push
mov
jno
inc
xlat
daa
arpl
mov
scas
mov
inc
daa
stc
clc
rol
js
fwait
pusha
cmp
sub
pop
mov
sar
pusha
xor
mov
test
ins
cwde
add
xor
clc
inc
inc
add
dec
xchg
in
and
lahf
fwait
sahf
repnz
adc
jecxz
call
cmp
push
inc
int
push
inc
add
fcomp
es
out
xlat
pop
or
cmc
push
push
pop
loope
pop
and
pop
mov
(bad)
sbb
mov
loop
xchg
retf
cmc
jne
aad
jns
jae
xor
mov
xchg
in
adc
and
test
adc
push
das
nop
cmp
push
in
adc
xchg
rcl
scas
pop
into
pop
push
mov
lea
(bad)
leave
fild
or
xor
xchg
dec
add
jns
add
lods
jg
and
push
icebp
mov
or
dec
stc
jae
xlat
xchg
sub
call
loop
pop
add
test
add
inc
dec
retf
sub
push
pop
pop
and
mov
dec
lahf
dec
push
push
lea
sub
adc
inc
sti
lods
and
sbb
das
pop
add
sub
dec
mov
xchg
movs
cmps
pop
inc
add
stos
jl
push
repnz
pop
test
(bad)
mov
jns
mov
fisubr
mov
jle
outs
call
lds
pop
add
pop
jae
mov
pop
dec
jecxz
jne
fstp
dec
repz
es
in
lods
mov
pop
sbb
movs
push
(bad)
inc
jmp
int
xchg
lds
outs
push
dec
stos
cld
fst
aas
dec
fistp
aas
dec
xlat
addr16
add
cli
scas
or
push
add
inc
xchg
enter
(bad)
adc
fld
cmp
(bad)
cli
push
aas
inc
or
retf
std
popa
push
scas
outs
int3
fild
xchg
push
add
aad
push
pop
icebp
xchg
aam
cli
xor
jmp
jmp
cmp
aam
(bad)
cmp
xchg
iret
inc
ins
jge
jmp
aas
retf
or
ret
mov
test
add
imul
cmp
pop
sbb
jb
add
inc
mov
or
in
adc
push
push
leave
jg
stos
sub
sub
loope
aaa
ss
jge
sub
pop
loop
fidivr
inc
add
cmp
inc
hlt
lar
and
or
nop
xor
ror
iret
sub
or
cli
inc
nop
and
dec
and
add
and
inc
arpl
sub
clc
test
cmps
call
adc
retf
xor
xor
cmp
add
dec
or
xchg
aad
sub
scas
dec
dec
dec
test
inc
mov
jl
je
cmps
xchg
dec
add
or
and
lahf
push
inc
cld
lods
cli
pop
leave
sar
jns
lea
sub
jae
xchg
mov
push
inc
ja
mov
fisubr
js
jecxz
and
and
jnp
test
mov
or
and
push
stos
mov
rcl
adc
pop
inc
and
cmp
ret
imul
jo
scas
xchg
cs
pop
sbb
mov
mov
ret
mov
xchg
test
jp
add
mov
inc
xchg
clc
and
sub
mov
inc
shr
(bad)
mov
test
sbb
sbb
jge
mov
dec
stc
fild
hlt
pop
lahf
dec
ror
test
mov
xchg
sub
pop
sub
inc
imul
mov
jnp
sub
push
dec
icebp
mov
sbb
test
jbe
aas
inc
mov
push
dec
sub
fnsave
xchg
sub
ja
xor
inc
inc
add
mov
lods
push
jecxz
mov
movs
inc
add
or
inc
stos
test
or
lahf
add
xchg
cmps
mov
push
jb
test
rcl
inc
adc
xchg
pop
adc
jnp
jecxz
mov
dec
add
add
enter
adc
add
or
leave
daa
add
bound
retf
pop
test
adc
sub
adc
cwde
inc
add
cmovne
add
xor
push
inc
push
add
movs
dec
add
loopne
sub
outs
call
add
adc
movs
das
push
push
(bad)
mov
adc
push
pop
xchg
pop
jmp
cmp
movs
or
jne
and
and
pop
inc
xor
push
dec
gs
mov
mov
cmps
out
mov
xchg
mov
cmc
jbe
or
pushf
dec
add
cli
cld
sbb
call
dec
test
je
and
inc
imul
adc
sbb
or
hlt
(bad)
cli
sbb
mov
cli
jmp
call
rcl
cld
rol
inc
mov
xor
sbb
lods
cdq
add
cwde
dec
pop
add
loopne
jne
aaa
sbb
cli
xchg
inc
sbb
popa
ror
shr
push
or
in
sub
pushf
sbb
ja
test
dec
mov
mov
pop
sbb
ss
jmp
enter
adc
sub
or
mov
jo
sub
dec
imul
pop
lahf
call
jne
mov
shr
mov
and
inc
jmp
mov
dec
pusha
add
sub
stos
test
in
scas
mov
in
xlat
(bad)
xor
mov
stos
imul
mov
ficom
jne
stos
adc
sub
cmp
mov
sub
popf
xor
(bad)
adc
cld
jl
aam
or
nop
aas
aam
mov
add
fstp
push
inc
or
mov
jl
aas
inc
adc
arpl
rcl
mov
lock
add
fldcw
sub
sar
xor
cmp
dec
lahf
dec
repnz
hlt
mov
add
in
or
inc
add
aam
ror
cmc
bound
sbb
ror
or
xchg
push
in
loopne
inc
dec
add
sbb
xchg
inc
ret
xor
or
or
mov
push
push
adc
inc
ja
xor
fcom
(bad)
push
mov
sbb
ret
repnz
jmp
and
or
scas
popf
cli
pop
adc
sahf
inc
call
scas
(bad)
(bad)
call
das
inc
or
dec
xchg
and
dec
fcmovnbe
push
mov
xchg
popa
mov
mov
hlt
pusha
imul
xor
scas
lods
dec
sar
dec
sar
xlat
xchg
call
xchg
comiss
fwait
pop
out
and
psrlw
out
pop
(bad)
push
pop
gs
les
sahf
mov
(bad)
dec
push
inc
add
mov
mov
fadd
repnz
mov
mov
je
outs
mov
mov
pop
pop
jmp
sub
scas
sub
imul
add
push
jp
movs
cmps
test
mov
adc
scas
add
movs
stos
imul
and
jmp
pop
dec
push
jo
nop
and
ret
aam
lea
cmps
mov
jae
push
ss
mov
or
sbb
xor
mov
(bad)
sti
and
loope
loop
sub
mov
mov
or
adc
sbb
test
xchg
push
push
jmp
sub
mov
inc
add
pusha
mov
sbb
sub
adc
or
or
cmp
adc
aam
mov
movs
inc
retf
add
leave
lahf
sbb
and
add
ins
add
add
(bad)
xchg
inc
ror
sar
dec
adc
xchg
mov
pop
or
pop
mov
add
hlt
xor
add
or
imul
addr16
aas
fcmovnu
dec
mov
push
aaa
mov
and
add
xor
outs
inc
and
ins
cmps
sar
jne
jge
mov
ja
popf
arpl
add
mov
pop
mov
pop
jo
adc
push
les
retf
add
(bad)
push
dec
movs
or
sbb
add
mov
in
arpl
out
dec
in
out
in
pop
in
xchg
repnz
sbb
ins
inc
mov
xor
aad
out
(bad)
cmc
scas
jge
or
ss
pop
cmp
rcr
and
jecxz
pusha
cmp
add
cmps
jl
into
div
mov
neg
mov
adc
and
lahf
jl
push
pop
pushf
xor
pop
jno
mov
xor
lock
enter
push
sbb
push
outs
retf
or
mov
cmc
js
mov
popf
(bad)
stc
jl
jnp
add
dec
and
loope
test
mov
cmp
daa
lock
data16
leave
fisub
ficomp
nop
in
pop
mov
fwait
inc
daa
clc
repz
jnp
jmp
pop
sar
and
jb
js
xchg
xor
mov
mov
out
mov
shl
mov
xchg
mul
ins
mov
pop
in
cs
(bad)
mov
(bad)
dec
or
mov
xor
cmp
cmp
test
fmul
lds
mov
cmp
setbe
out
bound
stos
mov
pop
adc
div
call
cmp
xchg
call
pushw
icebp
pop
pop
mov
inc
and
sar
test
ret
adc
js
inc
ret
retf
fcom
stc
js
inc
cwde
inc
lock
sbb
add
jns
jb
mov
pop
push
inc
push
lock
cmp
add
movs
jg
and
adc
inc
jecxz
mov
data16
xchg
xlat
int
sub
inc
xor
sub
icebp
xor
jecxz
cli
adc
push
lds
adc
pushf
fbld
test
movs
dec
lods
repz
xchg
jae
dec
mov
mov
push
shl
sub
test
arpl
adc
and
idiv
(bad)
mov
dec
dec
js
retf
mov
fadd
retf
imul
into
imul
iret
imul
add
dec
popa
pop
aaa
mul
jne
adc
adc
cmc
cli
out
mov
or
cmps
ss
fldcw
and
(bad)
jp
cmp
retf
icebp
push
test
xor
xchg
out
push
in
mov
dec
out
out
add
pop
or
push
mov
scas
mov
xor
fimul
loop
add
jb
push
out
jecxz
cmc
and
and
sbb
cmp
rcl
fnstsw
scas
or
mov
lea
inc
push
or
out
mov
cmp
(bad)
sti
imul
into
jo
inc
add
inc
cmp
jno
or
(bad)
in
test
ins
sbb
xchg
push
js
cdq
(bad)
cmps
jnp
clc
repnz
and
sbb
les
das
out
jmp
mov
add
pop
int3
imul
lods
cmp
dec
loopne
push
push
inc
leave
jo
loope
mov
adc
dec
pusha
dec
xor
mov
fwait
out
mov
popa
aaa
xchg
aam
add
outs
ss
mov
xor
push
xor
mov
mov
fwait
popf
movs
add
dec
popa
gs
xchg
je
mov
pop
test
push
mov
dec
je
adc
adc
inc
daa
cmps
xor
adc
and
stos
xchg
xchg
out
retf
es
test
sbb
or
sbb
nop
in
pusha
add
or
(bad)
jp
cmp
cmp
xor
out
daa
or
mov
loope
add
jns
cwde
adc
int3
sub
(bad)
xchg
inc
jns
mov
ret
dec
xor
jg
add
mov
adc
pop
lea
mov
mov
stos
push
in
(bad)
sahf
sbb
sbb
push
and
pop
int3
jmp
sub
das
pop
add
push
or
push
(bad)
xor
repz
push
or
arpl
pop
sbb
sbb
push
xor
mov
shr
pop
jg
jmp
jg
jmp
stc
out
loopne
(bad)
sub
sub
mov
jecxz
fmul
or
iret
cli
scas
add
int3
sti
jecxz
scas
add
lahf
or
addr16
add
fst
aam
jb
and
adc
or
inc
xor
ret
or
and
mov
cwde
hlt
popa
xor
lods
pop
outs
or
or
aas
cmp
cmp
scas
and
jl
pushf
dec
pop
add
sub
das
(bad)
icebp
js
lea
sub
ds
(bad)
aaa
daa
imul
jnp
xor
(bad)
in
fldcw
out
icebp
or
clc
and
add
out
ds
cmps
cmp
mov
rep
cmp
int3
push
mov
int3
call
int
sub
stc
in
movs
loopne
(bad)
ret
bound
pop
lds
ins
dec
lds
xor
pop
push
ret
out
je
dec
pop
dec
xor
test
xlat
and
outs
cs
movs
sbb
add
and
dec
cmps
xor
xchg
jo
stc
jns
bound
inc
jp
push
mov
mov
imul
pop
push
sub
xchg
fdiv
retf
imul
into
icebp
fs
icebp
test
mov
mov
or
repz
jnp
in
lods
sub
loope
mov
aas
and
xor
retf
and
dec
in
sbb
fwait
inc
pop
mov
and
xor
aam
pop
push
add
inc
cdq
cwde
xor
fwait
imul
xchg
gs
aad
in
and
add
rol
rol
xor
sbb
test
mov
cmp
or
bound
mov
fstp
sbb
or
iret
push
add
add
push
xchg
mov
div
arpl
jmp
adc
pusha
cmp
add
pop
pop
int
retf
cmps
jmp
retf
jns
and
add
jns
and
out
ins
add
mov
mov
rcr
ror
jbe
call
mov
repz
dec
jge
mov
mov
adc
dec
xchg
xchg
jo
js
cmp
ret
les
sbb
ins
int3
stos
inc
scas
dec
push
jae
mov
jb
mov
cmp
cmp
dec
loopne
bound
(bad)
push
xor
icebp
dec
push
lahf
in
iret
loope
mov
mov
aas
cmp
add
cmovg
add
popf
shr
and
push
add
mov
test
push
icebp
jmp
jg
mov
pushf
push
clc
jb
jo
inc
and
ja
xor
pop
push
and
jno
in
adc
mov
popa
mov
mov
adc
ss
aad
sbb
cs
arpl
lds
in
pop
mov
int3
pop
stc
or
adc
mov
jle
add
or
pop
adc
lds
mov
and
shl
push
cwde
cdq
(bad)
xchg
xor
xlat
stos
and
dec
push
inc
cmp
mov
js
mov
mov
faddp
jle
jge
clc
and
dec
xchg
xchg
add
adc
loopne
mov
adc
and
or
add
pop
out
xchg
and
test
fadd
sub
pop
out
mov
test
aas
add
test
stos
rol
jle
aam
mov
stos
jmp
(bad)
fsubrp
out
movs
fadd
enter
loopne
sbb
xor
inc
(bad)
mov
cld
or
cmp
(bad)
mov
mov
jmp
cdq
cmp
jmp
daa
repnz
iret
and
jae
jmp
jns
xchg
lods
enter
add
stc
mov
sti
jbe
mov
mov
ja
mov
popf
int
inc
xchg
fs
or
shr
std
sbb
mov
xor
mov
adc
inc
loopne
or
xor
xchg
fcmovnb
add
retf
inc
xchg
xchg
retf
test
or
pop
es
dec
adc
jmp
push
das
loopne
loop
and
mov
mov
cmp
mov
and
outs
pop
loop
imul
iret
out
loopne
ja
mov
inc
clc
fst
mov
adc
sbb
mov
loop
adc
popf
scas
imul
pop
dec
js
inc
mov
sub
mov
cs
pop
dec
bound
pop
push
call
(bad)
and
jmp
or
in
jl
or
loop
cmp
cmp
sbb
dec
bound
xor
dec
xor
call
iret
loopne
xchg
lahf
(bad)
fs
jb
sbb
add
adc
mov
enter
xchg
pop
or
jno
mov
fs
mov
fdivr
(bad)
sub
loope
add
mov
xor
(bad)
shl
mov
mov
rol
nop
inc
int
mov
daa
adc
enter
jmp
stos
and
cdq
pop
clc
add
xor
jg
cli
addr16
and
repz
sub
sub
add
dec
pop
icebp
jecxz
das
mov
hlt
fldenv
mov
push
scas
add
stos
xor
pusha
cmp
jmp
sbb
stc
add
pusha
xor
lods
popf
pop
or
out
sti
cli
and
inc
jnp
(bad)
clc
jecxz
loopne
fimul
and
xlat
aam
test
mov
mov
mov
dec
add
add
mov
data16
adc
push
add
sbb
adc
push
hlt
mov
xor
inc
mov
pop
mov
loope
cld
cmp
movs
in
pop
pop
in
dec
jecxz
ret
sbb
sbb
cmp
lock
int3
jecxz
jmp
clc
imul
loopne
test
lods
jecxz
add
jmp
lock
retf
and
lock
cmovle
sti
daa
aaa
cmc
xor
sbb
pushf
adc
(bad)
mov
not
cmc
jne
and
(bad)
adc
pop
out
sub
mov
sub
mov
(bad)
loope
and
pop
add
in
ret
xchg
repz
sahf
sbb
add
lock
adc
pop
mov
jecxz
lods
shl
xchg
pop
xor
popa
add
fdivr
mov
push
add
int3
loop
data16
xor
(bad)
int3
lods
retf
stc
xor
lahf
mov
cmp
xor
(bad)
rcr
pop
xor
add
psubq
cmc
pop
std
add
xlat
sbb
retf
add
xchg
mov
jmp
inc
push
xchg
or
add
popa
xor
jbe
sbb
mov
cmp
pop
add
xchg
pop
std
arpl
inc
push
add
(bad)
js
push
inc
cmp
or
xchg
or
ret
iret
pop
in
jne
out
xchg
adc
sahf
(bad)
sti
push
(bad)
stos
add
jmp
dec
mov
jecxz
fsubr
jle
xor
stos
cmps
sahf
xlat
inc
inc
push
pop
pusha
cmp
add
call
or
fs
xchg
fucompp
ja
cs
xor
hlt
pop
repz
(bad)
pop
add
jg
fstp
out
out
and
sbb
in
sub
pop
scas
or
scas
or
sbb
and
ins
out
push
xchg
mov
out
xlat
sub
(bad)
jo
mov
push
cli
mov
jae
push
jecxz
sbb
inc
sbb
and
dec
dec
inc
xor
adc
out
cs
jle
xchg
jae
add
fisubr
loopne
std
imul
iret
dec
xchg
lock
add
mov
pop
pushf
lods
loopne
out
clc
aad
push
mov
xor
ins
into
imul
out
into
or
cmp
pop
lods
cld
adc
cmp
loopne
xlat
push
retf
addr16
stos
clc
push
repnz
in
xchg
cs
or
inc
push
add
adc
and
mov
adc
retw
add
enter
in
add
sbb
js
jnp
pop
aam
add
xchg
call
and
sbb
push
jg
pop
mov
ror
and
out
add
es
movs
pop
rcl
dec
pop
pop
fst
in
or
sub
ins
or
mov
sub
jmp
jno
daa
jo
dec
or
push
or
or
ja
xor
and
fsub
cmp
in
pop
add
jecxz
and
lahf
pushf
ret
js
push
arpl
add
pushf
cs
or
adc
pop
nop
mov
jecxz
add
add
fwait
shl
hlt
dec
cmp
mov
add
scas
data16
mov
(bad)
pop
out
adc
cmp
mov
outs
inc
add
cdq
pop
adc
dec
dec
mov
jp
pop
pop
aam
mov
xchg
ss
retf
retf
outs
jnp
adc
int3
cmp
mov
popa
js
lock
loopne
add
sbb
mov
or
or
int
adc
fisub
(bad)
repz
idiv
(bad)
repz
in
add
mov
ss
loope
add
stos
inc
sahf
cmp
out
lahf
test
call
call
adc
mov
or
ss
push
add
je
pop
inc
and
ja
add
pop
fndisi(8087
div
xchg
add
pop
test
mov
xor
sbb
cmp
mov
retf
and
fwait
dec
or
mov
sub
retf
sbb
cli
std
dec
adc
popf
sbb
cmp
scas
loope
aaa
jbe
stos
rep
jl
mov
xor
stos
shr
xchg
ds
std
and
cmp
jnp
dec
loop
xchg
adc
push
scas
loope
mov
test
and
push
add
push
ficom
cmp
or
inc
(bad)
cmp
xchg
inc
add
xchg
fstp
arpl
mov
push
push
sbb
adc
test
imul
jl
sub
jb
dec
xor
inc
iret
ret
xlat
mov
jge
sbb
in
dec
inc
loop
or
jns
or
or
mov
mov
cmp
or
loopne
imul
fcom
add
xchg
shl
sbb
test
mov
and
sbb
dec
sub
add
jecxz
ror
and
add
add
xchg
xor
dec
adc
or
add
or
dec
or
jg
add
jbe
fld
dec
cld
ins
pop
push
push
shl
inc
addr16
icebp
cld
jmp
push
push
inc
cmps
sbb
iret
jmp
and
push
lock
iret
jmp
push
jp
and
dec
cmc
scas
(bad)
adc
aas
push
fstp
lock
fcomp
popf
jmp
pop
into
es
icebp
addr16
add
test
mov
ret
loope
push
stc
adc
(bad)
fld
enter
or
pop
into
pop
ins
test
ror
inc
sub
sbb
cmp
lea
pop
pop
inc
and
rcl
pop
fwait
inc
dec
inc
nop
in
imul
pop
dec
sub
pop
add
repz
pop
add
(bad)
jle
arpl
push
inc
push
sbb
sub
arpl
ds
div
repnz
mov
movs
imul
test
call
inc
push
push
mov
mov
xchg
xchg
add
dec
jne
nop
add
inc
add
nop
or
adc
enter
aas
add
push
adc
mov
or
gs
or
add
dec
inc
pop
sub
sti
sti
test
stos
mov
adc
jno
and
enter
stos
icebp
aam
idiv
arpl
jb
xor
push
call
mov
(bad)
clc
xor
pushf
pop
fadd
hlt
fdivr
or
stos
mov
cmp
pop
std
mov
adc
loope
inc
icebp
aaa
ret
and
enter
daa
jp
cmp
bnd
lds
xor
pop
push
and
loope
iret
or
mov
add
pop
inc
cmps
or
jge
adc
and
fisub
into
adc
test
dec
rol
mov
xlat
lds
int3
and
cmp
js
hlt
jmp
arpl
mov
mov
xchg
aam
fidiv
out
jne
cli
stos
add
xor
ret
and
outs
pop
mov
sbb
into
fldenv
and
add
dec
or
cli
sbb
cmp
push
sar
popf
push
sbb
add
stos
jg
or
add
cld
or
or
pushf
pushf
mov
add
clc
mov
jne
mov
mov
add
sbb
mov
add
test
add
movs
cmp
add
add
push
add
test
sbb
inc
adc
push
pop
sub
add
fdivr
jecxz
and
lods
sub
outs
pop
icebp
(bad)
push
std
(bad)
cld
or
outs
ins
loope
addr16
in
push
jle
mov
adc
inc
add
sub
cmp
mov
cmp
or
ins
cwde
in
outs
inc
mov
inc
xor
jmp
add
inc
dec
add
jbe
mov
clc
imul
(bad)
nop
or
add
data16
cdq
sub
sahf
(bad)
in
fs
mov
mov
mov
rcl
mov
addr16
jo
cwde
mov
fdivr
iret
push
inc
into
fucom
bound
out
lods
jns
dec
mov
in
scas
add
mov
aas
test
cmc
iret
add
nop
add
fiadd
fsub
fild
dec
hlt
(bad)
out
and
push
add
add
dec
add
jecxz
mov
sub
stos
add
push
push
pusha
test
mov
(bad)
cwde
fisttp
das
mov
and
or
ficom
(bad)
xor
rol
jg
sub
xor
fs
mov
jnp
outs
pusha
push
lea
stc
stos
test
jmp
lods
push
sar
sbb
sbb
jb
fadd
jp
push
mov
or
out
lods
sar
and
mov
out
retf
das
loopne
lock
out
neg
add
add
mov
push
mov
(bad)
loope
stos
mov
dec
add
loopne
dec
imul
mov
into
push
inc
mov
adc
es
rol
add
mov
adc
hlt
(bad)
adc
push
shl
add
inc
jo
nop
les
pop
mov
(bad)
or
out
mov
and
ret
cmp
mov
jecxz
ret
jne
adc
adc
jmp
and
inc
push
stos
jge
fistp
xchg
repz
mov
inc
inc
out
jb
and
clc
icebp
into
ins
dec
add
pop
pop
xchg
out
mov
mov
xchg
fs
or
lock
clc
pop
adc
sub
(bad)
lds
fwait
test
out
pop
int3
xor
js
or
xor
push
and
cmp
pop
cmps
ins
lock
in
jp
into
xor
xchg
fsub
pop
sbb
movs
xor
inc
add
rcl
cmp
and
sbb
xchg
mov
or
adc
lods
and
xchg
fdivr
xchg
ins
int3
jo
sub
or
jg
je
stos
loopne
jmp
add
dec
out
call
out
sub
mov
outs
pop
pop
scas
mov
xor
shl
clc
and
xor
pusha
mov
rol
shr
int3
mov
dec
inc
sub
mov
dec
in
sbb
add
inc
sbb
adc
push
call
add
inc
fwait
inc
and
call
das
xchg
lods
cmp
sti
pop
call
pop
pop
inc
cmp
(bad)
clc
fdiv
loope
push
xor
jmp
pop
cmp
xchg
test
sbb
loope
aas
xor
ror
jns
ss
cdq
or
inc
adc
xlat
ror
outs
fbld
pop
and
push
add
outs
jg
adc
sti
adc
mov
xor
mov
clc
sti
mov
inc
pop
imul
movs
lods
push
shl
adc
in
adc
add
test
or
icebp
mov
(bad)
adc
pop
mov
or
push
adc
mov
pushf
sbb
add
jle
out
fcomp
loope
jne
div
jb
or
leave
out
or
cmp
jmp
fs
outs
loopne
leave
addr16
stos
mov
push
(bad)
push
and
mov
test
test
xchg
sahf
inc
sar
adc
ret
lods
add
cmp
add
sbb
sti
and
push
add
arpl
inc
and
lea
aas
cmp
gs
shl
sub
and
mov
mov
cmc
fst
adc
xchg
mov
sub
fdiv
lahf
test
xchg
sahf
sbb
jns
push
rcl
adc
jb
bound
das
mov
push
push
sti
xor
dec
loopne
or
lods
push
xor
inc
ss
jmp
mov
cmp
(bad)
retf
test
div
aas
daa
ds
retf
sbb
and
mov
mov
sbb
out
add
adc
pop
and
pusha
and
and
push
pop
mov
mov
push
(bad)
xor
dec
lea
and
pop
adc
adc
or
pop
ret
lods
sbb
add
or
xchg
(bad)
in
mov
xor
xor
arpl
arpl
pop
jge
pusha
cmp
in
pop
xchg
cmp
jmp
daa
bound
push
inc
xor
imul
sub
sub
adc
jne
test
aad
and
in
aad
mov
ret
pushf
mov
into
fsub
jmp
adc
(bad)
int
mov
shr
shl
sbb
and
push
add
in
fimul
loope
pop
and
sbb
add
jle
mov
xchg
jle
fs
dec
loop
jge
ja
jae
mov
(bad)
stos
mov
(bad)
das
mul
lock
and
jg
sbb
ja
cmp
ficomp
xchg
cmc
pop
pop
fadd
stc
jle
and
cld
lods
inc
jge
cmp
imul
nop
xor
cmp
(bad)
clc
jecxz
xchg
pop
cmp
add
scas
cmc
mov
(bad)
xor
leave
jmp
fistp
mov
jns
add
nop
jnp
fild
enter
xor
cld
sub
lock
adc
loop
or
push
mov
adc
dec
pusha
jb
add
fcmove
int
(bad)
mov
add
pusha
mov
int
sub
lods
jecxz
sahf
shl
mov
sbb
or
fld
xor
push
in
loope
in
add
out
pop
jmp
loope
mov
push
sbb
add
ja
loope
add
add
das
xchg
xor
adc
je
add
add
mov
jae
and
pop
add
pop
mov
pop
add
gs
inc
xor
inc
mov
xchg
das
xlat
ret
or
or
pop
add
loop
imul
retf
adc
dec
mov
fbstp
inc
popf
add
mov
jecxz
in
push
inc
cmp
or
fcomp
jle
push
in
pop
popf
cmp
jmp
daa
loop
scas
add
jle
pop
inc
or
inc
and
add
les
enter
(bad)
lock
outs
vpshaw
cmp
pop
mov
mov
lock
adc
clc
sti
dec
jecxz
in
dec
sub
sbb
mov
and
(bad)
fisubr
scas
int
loopne
retf
js
inc
rol
fs
sub
add
inc
add
pop
out
pop
jae
xchg
sbb
ficomp
stos
xchg
mov
lea
outs
pop
shr
repz
cmp
ficomp
jnp
mov
das
xchg
in
aas
or
imul
jg
mov
sbb
push
ret
push
sbb
repz
shl
aas
push
hlt
mov
clc
pop
outs
jnp
cmp
pop
xor
in
xchg
push
add
mov
loop
int
cmp
push
and
add
add
or
xor
pushf
inc
cmp
cmps
mov
xor
sub
jg
jb
stos
add
loop
mov
add
jle
dec
sbb
pop
imul
test
loope
jo
inc
mov
push
rol
push
call
jb
jmp
(bad)
fidivr
inc
cmp
sbb
mov
pop
popa
shr
add
das
fcmovb
adc
iret
arpl
out
js
in
aad
sbb
mov
xor
sbb
add
iret
int3
or
mov
enter
cmovo
push
add
in
call
fadd
std
xor
(bad)
push
cmp
(bad)
ds
xchg
iret
gs
popf
inc
jmp
jns
outs
dec
sbb
and
imul
add
mov
dec
adc
aam
imul
into
test
sbb
and
mov
aas
cmp
int3
push
cmp
xchg
aas
xor
imul
lahf
pop
mov
addr16
pusha
inc
rcl
ror
ss
rcr
cmp
rol
mov
inc
(bad)
loopne
mov
clc
jecxz
popf
pop
enter
rol
movs
cmp
fidiv
cmps
stos
sbb
ret
fisubr
loop
cmc
cmp
ins
push
and
push
pop
(bad)
jecxz
mov
sbb
add
jp
icebp
enter
jbe
jns
mov
inc
add
movs
and
ror
and
and
fadd
xchg
or
std
cs
add
lahf
sbb
ins
inc
loopne
repz
adc
xor
ret
pop
popf
into
popa
jg
add
data16
mov
jmp
rcr
xchg
mov
pop
xchg
add
adc
retf
std
cmps
mov
not
imul
sub
repz
adc
pop
xor
call
xor
stos
and
mov
or
inc
out
mov
pop
mov
xlat
pop
or
mov
cld
jne
jg
sub
inc
mov
sbb
mov
jmp
jl
ror
cmp
cmps
push
adc
das
pusha
mov
add
inc
cmps
jb
dec
and
add
lods
add
das
clc
adc
ins
aad
pop
jns
fdivr
xor
inc
cmps
mov
pop
sbb
in
repnz
mov
pop
aaa
ret
mov
lods
push
cld
dec
test
outs
sub
iret
and
cmps
shl
cld
icebp
dec
inc
repnz
add
retf
push
or
add
test
rcr
retf
in
dec
sbb
test
add
or
mov
mov
inc
cmp
into
pop
and
pushf
rcr
push
mov
pop
rol
xchg
mov
aas
sbb
jae
or
fistp
cmps
stos
pop
std
sti
leave
mov
adc
clc
jnp
loope
jmp
ret
sti
or
pmulhw
fcom
cld
mov
ret
push
or
cmp
and
add
imul
jecxz
inc
and
mov
push
xchg
add
dec
(bad)
sbb
retf
xchg
clc
js
lea
call
inc
and
(bad)
cmp
sahf
or
out
outs
int3
loopne
jb
mov
cmps
jo
jbe
inc
or
retf
aaa
push
(bad)
cmp
dec
cld
adc
jg
pop
lock
inc
xchg
(bad)
nop
mov
push
or
mov
daa
clc
jnp
push
nop
sti
out
cmp
lods
(bad)
cwde
lea
sub
into
neg
push
xor
pop
add
cld
add
cmps
mov
sub
inc
pop
adc
in
lods
sub
jge
sbb
leave
add
pop
add
clc
and
test
adc
mov
dec
clc
adc
adc
add
sub
mov
addr16
add
mov
scas
cmp
jb
add
sahf
dec
sub
dec
adc
sbb
mov
and
pop
mov
rcl
fcos
push
add
jg
rcr
add
or
push
mov
out
in
fwait
sub
add
in
pop
adc
test
and
(bad)
push
das
add
out
ret
pop
add
push
sub
cmp
retf
jmp
stos
pop
and
sbb
int
mov
test
or
xor
mov
or
(bad)
repz
and
stos
add
cmp
sbb
sti
loope
packssdw
jecxz
clc
xor
rcr
imul
repz
inc
stos
(bad)
mov
gs
mov
retf
pop
clc
loope
sub
dec
out
rol
pop
push
in
mov
mov
push
sub
loopne
cmp
in
outs
inc
mov
mov
sub
sbb
ficomp
ins
call
test
ins
pusha
pop
das
mov
ins
cmp
shl
push
ffreep
xchg
shr
cld
ret
push
add
mov
add
je
(bad)
cwde
add
xchg
sub
xchg
sub
sbb
pop
mov
loop
out
mov
in
dec
fwait
lds
mov
es
jg
mov
or
leave
icebp
icebp
inc
fidivr
xor
jns
xchg
retf
out
push
mov
stos
(bad)
sti
cmc
or
outs
xchg
es
mov
aas
sbb
(bad)
sti
adc
in
nop
getsec
dec
pop
in
sub
cld
pop
add
or
jae
mov
fisttp
fcomp
dec
nop
jns
fsub
div
or
lds
cdq
xor
mov
in
fst
repnz
dec
cmps
mov
(bad)
loop
adc
mov
and
and
pop
sahf
ret
or
adc
xchg
shr
mov
repz
and
add
cwde
sub
push
adc
xor
cwde
inc
data16
or
cwde
dec
push
mov
add
cmc
mov
push
out
sbb
pop
or
mov
ins
in
xchg
call
mov
add
and
cmp
test
(bad)
fistp
adc
mov
add
jmp
or
shl
jo
cmp
jnp
add
sub
adc
pop
sbb
xchg
in
inc
mov
push
sub
pop
lahf
int
add
fstp
ficomp
imul
inc
xor
ret
mov
jle
in
ins
cmp
jge
cmp
dec
clc
adc
pop
and
adc
shl
shl
inc
cmp
add
repz
inc
mov
sahf
sbb
in
mov
daa
push
stos
add
jmp
mov
int
scas
aam
sbb
cmp
mov
repz
(bad)
pushf
cs
cmp
add
repz
pop
int
sub
push
inc
imul
cwde
(bad)
repz
popf
inc
add
mov
mov
jle
fbld
out
cmp
(bad)
sub
xlat
adc
dec
xor
mov
push
loopne
rcr
sub
or
(bad)
mov
addr16
aad
not
sar
adc
pop
rcl
clc
ds
pop
and
stc
sub
cmp
xor
xor
fldenv
cmps
add
mov
adc
rcr
ret
push
add
sbb
scas
mulps
rcr
mov
push
adc
xchg
pop
xchg
sti
repz
test
add
pop
mov
cmp
rcr
xor
adc
ins
pop
lods
xchg
mov
imul
aad
lock
push
mov
xchg
or
or
daa
sbb
(bad)
mov
xchg
lahf
ins
xchg
adc
(bad)
cmps
jno
lds
sub
cmp
iret
fimul
js
stos
leave
xor
and
mov
jb
mov
push
or
and
iret
int
push
sbb
add
adc
xchg
adc
jg
je
rcl
pusha
sub
div
and
adc
xor
cwde
retf
xchg
retf
and
in
add
mov
adc
cs
push
add
pusha
cmps
mov
or
loope
or
icebp
pushf
add
dec
mov
add
jae
sbb
ins
mov
add
rcr
inc
or
jl
scas
sbb
sub
test
iret
mov
add
arpl
int
push
mov
cmp
xchg
out
jbe
sbb
mov
out
clc
push
(bad)
sbb
or
sub
and
mov
jle
add
jae
outs
aaa
aad
jnp
rcr
mov
add
jae
jmp
shr
add
repz
fs
lock
adc
aam
adc
test
jge
in
mov
scas
push
add
into
and
ins
movntq
inc
xchg
push
xchg
stos
push
xchg
xor
adc
hlt
sub
(bad)
mov
push
adc
call
rcl
jbe
xlat
call
arpl
dec
shr
js
cmc
outs
sub
inc
mov
xor
jae
fs
adc
enter
mov
pop
xor
bound
(bad)
jecxz
mov
sbb
shl
xor
arpl
fild
je
(bad)
cmp
mov
pushf
dec
out
int3
and
jg
mov
mov
fcomp
sub
loop
pusha
lock
mov
jp
mov
clc
jnp
out
or
sahf
leave
mov
mov
int3
push
push
push
and
fld
loop
dec
inc
xchg
addr16
jg
sub
or
sbb
or
bound
gs
or
leave
not
arpl
lea
int3
clc
or
cmp
inc
mov
mov
xchg
dec
or
or
and
stos
and
add
test
mov
cld
xor
cdq
or
pop
std
ror
and
adc
popa
pusha
scas
(bad)
retf
(bad)
paddsw
pop
mov
xchg
out
fistp
test
pushf
lods
add
jnp
adc
cmp
push
sub
fs
xchg
push
mov
leave
dec
and
div
gs
fst
or
add
pop
jns
sbb
movs
mov
xchg
aad
fs
add
jle
out
fisttp
and
ins
aad
fstp
mov
rcr
inc
adc
add
mov
and
add
or
cmps
push
into
(bad)
adc
ja
add
and
sub
sub
fmul
shl
inc
pop
js
mov
inc
out
add
out
and
hlt
int3
xlat
jbe
xor
fs
xchg
mov
arpl
iret
push
add
cmp
aam
jbe
ror
add
sti
adc
retf
notrack
xor
adc
adc
mov
pop
scas
add
xor
jbe
fsub
mov
test
inc
pop
pop
push
clc
ret
popa
clc
add
cmp
outs
mov
psubsw
outs
ss
jl
aaa
in
outs
dec
daa
jno
adc
or
xchg
fcom
jb
loopne
jb
mov
mov
mov
and
arpl
(bad)
or
xchg
ret
lea
and
mov
rol
int
mov
cmp
sbb
dec
add
cdq
add
pop
mov
xchg
popa
lods
cmps
inc
cwde
sbb
pop
xchg
mov
daa
cmps
add
pushf
cwde
mov
sbb
hlt
or
ja
call
push
push
add
push
ins
or
sub
sbb
aaa
lods
cdq
int3
sub
dec
movs
xchg
mov
push
arpl
aad
(bad)
fild
xchg
dec
cwde
vmread
push
push
pop
enter
clc
mov
push
add
adc
mov
sub
aaa
jg
and
and
xabort
push
add
(bad)
ficom
js
mov
xor
arpl
mov
add
retf
iret
dec
out
pop
xchg
lods
lods
pop
sub
std
fstp
adc
outs
les
jp
xor
jl
add
jl
out
mov
push
jg
push
jle
or
aas
pop
push
in
lahf
xchg
cmp
jmp
daa
bound
js
or
pushf
jmp
repz
push
add
(bad)
cld
sbb
fs
dec
sbb
fisub
mov
push
arpl
(bad)
loope
imul
push
add
ret
in
imul
in
xor
jae
fwait
pop
scas
ret
xchg
psadbw
pusha
lea
jbe
repz
mov
adc
or
retf
xor
and
inc
sbb
inc
(bad)
push
add
ss
ror
cld
jle
xchg
and
jle
or
inc
jno
enter
sub
sbb
or
out
add
add
inc
jb
xchg
fld
cmps
jno
(bad)
pusha
cmp
pop
shr
sahf
push
int3
sti
mov
jno
div
nop
in
stc
adc
(bad)
adc
(bad)
pop
es
aas
lahf
dec
loop
rcl
or
mov
mov
inc
or
es
jp
adc
mov
push
sbb
aas
loop
ss
or
jb
pop
xchg
rol
enter
adc
ss
(bad)
push
sub
xchg
cld
dec
jp
sti
loopne
jmp
mov
call
(bad)
call
add
adc
sahf
(bad)
loope
test
hlt
xor
retf
sub
jno
or
clc
cmp
ror
cmp
out
push
add
pop
addr16
jge
test
(bad)
mov
push
(bad)
add
in
aad
loopne
xchg
test
add
mov
or
mov
clc
adc
inc
and
xchg
mov
pushf
sbb
xor
xchg
cwde
jae
jns
mov
cmp
iret
ins
pop
mov
mov
mov
in
xor
add
es
mov
aad
mov
add
add
sbb
in
iret
bound
inc
sub
sub
scas
imul
pop
pop
ret
cld
jmp
mov
cmp
add
(bad)
repz
movs
lahf
jae
ins
or
stos
push
add
mov
cmp
iret
mov
mov
aad
rcr
or
jle
push
fcomp
enter
std
(bad)
shr
inc
fwait
xchg
push
clc
mov
loope
pop
jecxz
inc
and
mov
int3
stc
jg
sub
mov
fild
pop
mov
int3
dec
daa
mov
aas
mov
test
push
jb
pop
pushf
(bad)
fdiv
sub
push
addr16
fwait
cdq
inc
and
sub
je
jmp
mov
mov
or
jnp
or
jne
dec
stos
adc
xchg
mov
add
js
call
and
cmp
(bad)
popa
cmp
(bad)
bound
sbb
push
(bad)
pop
add
lods
out
and
(bad)
fyl2xp1
add
push
xchg
and
aas
xor
jb
cdq
repz
scas
lods
jns
sub
fcom
adc
int3
dec
loopne
pop
lahf
pop
mov
cdq
sbb
jl
sbb
arpl
or
es
jge
stc
in
nop
and
in
enter
daa
inc
outs
dec
mov
xchg
lahf
mov
xor
mov
ret
cmp
adc
inc
push
cs
out
xor
adc
push
or
jo
pop
lds
dec
mov
xor
jb
xor
(bad)
std
jns
sub
movs
adc
in
ffree
or
fild
pop
(bad)
popf
call
xor
imul
xor
or
dec
jmp
out
js
pop
add
add
add
jmp
dec
shl
sar
xchg
or
xor
fwait
pushf
adc
push
add
mov
test
xor
xor
push
inc
cmp
push
inc
into
add
push
rol
jnp
int
lea
add
push
inc
jnp
loope
pop
retf
push
aas
cmp
mov
aaa
lods
sahf
jp
dec
test
jne
(bad)
repz
les
pop
ins
repz
call
outs
inc
outs
adc
push
mov
and
and
fcmovnb
popf
sbb
push
pop
mov
pop
in
mov
ins
outs
adc
or
in
add
mov
or
je
push
sbb
imul
pop
add
mov
fsub
add
popa
sbb
dec
mov
sub
fldcw
xchg
xchg
mov
ret
cmp
call
xchg
jnp
setle
push
mov
fidiv
outs
and
adc
popa
das
aaa
mov
popf
sub
cmp
sbb
mov
inc
fs
aas
inc
mov
sub
fldenv
imul
mov
mov
je
js
sub
adc
in
stc
add
sub
repz
(bad)
jne
xor
ja
imul
loopne
cs
xchg
das
leave
adc
push
sbb
nop
out
adc
xchg
jg
dec
jns
nop
lock
out
jmp
pop
into
lds
mov
adc
adc
mul
lods
lods
sbb
jb
cld
int
xchg
mov
mov
das
or
pop
or
dec
imul
or
je
pusha
shr
ror
or
push
or
or
addr16
pusha
inc
jo
add
sahf
jae
or
add
lock
xchg
test
cmp
inc
xor
lsl
add
loopne
add
sub
or
add
add
ret
or
pop
cmc
in
mov
sti
mov
call
aas
adc
and
mov
add
push
(bad)
iret
ds
ins
inc
rol
jbe
fiadd
test
push
(bad)
lahf
sbb
loope
jle
cld
fisubr
or
sub
push
sar
fadd
test
lods
add
xchg
shr
add
or
push
(bad)
jne
jg
sti
mov
ins
xchg
jo
cld
jne
or
(bad)
jp
jg
popf
in
mov
sub
scas
add
imul
test
xchg
scas
mov
sub
lods
add
sub
(bad)
push
data16
xchg
(bad)
fs
cdq
mov
mov
or
add
mov
or
pop
aad
scas
pop
mov
cmc
jbe
call
sub
ret
pop
sahf
sbb
mov
fsubrp
mov
inc
jl
sbb
lods
movs
adc
or
jns
mov
stc
mov
jmp
xor
or
pop
dec
loopne
xchg
add
pop
inc
jb
lea
jle
mov
pop
fs
cli
push
add
test
in
icebp
ja
mov
dec
cli
mov
cs
cmc
test
pavgw
and
fistp
lea
ins
cmp
sbb
stos
push
in
cmp
or
adc
sbb
adc
fbld
xor
sbb
jb
and
cwde
pushf
fs
inc
sahf
daa
and
xor
or
jnp
and
scas
add
add
sbb
pop
sbb
add
or
pop
mov
(bad)
push
movs
or
(bad)
loop
popf
xchg
mov
(bad)
or
cmp
adc
adc
jb
jle
push
mov
shl
nop
std
add
mov
iret
add
push
mov
add
cmp
adc
push
xor
verw
out
add
(bad)
clc
jecxz
push
std
xor
mov
pop
leave
jmp
jns
sar
(bad)
in
mov
(bad)
outs
in
(bad)
ret
mov
cdq
fwait
out
sar
push
add
idiv
xor
inc
(bad)
pop
std
and
mov
outs
inc
inc
cld
mov
push
mov
ror
lahf
add
stos
cmps
out
push
xor
mov
int3
std
mov
add
and
ss
mov
push
call
aaa
adc
xor
shl
add
push
adc
stc
xchg
sbb
and
cmp
adc
dec
and
cdq
jno
xor
loope
sbb
mov
or
jecxz
inc
shl
aam
inc
jp
mov
sub
aad
jmp
dec
imul
inc
lock
enter
aaa
out
mov
ja
jle
mov
mov
mov
sbb
push
int
icebp
pusha
(bad)
mov
mov
jle
pop
scas
scas
dec
loopne
jbe
(bad)
ja
icebp
push
out
outs
mov
ins
gs
jnp
scas
ja
fwait
ret
jg
adc
inc
mov
jae
jmp
iret
aad
imul
ja
(bad)
cmp
mov
xor
jmp
test
or
inc
repnz
inc
inc
in
out
inc
cmps
mov
cmp
add
(bad)
loopne
adc
sbb
jb
ficomp
xor
(bad)
fs
ja
cdq
enter
pop
dec
cmp
jl
test
push
(bad)
xor
cld
inc
cld
lea
pusha
add
push
xchg
push
add
pusha
add
mov
add
sbb
add
daa
add
imul
in
xor
pop
and
add
sbb
rol
cmp
jo
cmp
adc
les
aas
imul
mov
adc
or
stos
icebp
inc
sbb
sub
cmp
or
aas
inc
iret
les
inc
sti
jns
adc
arpl
sbb
xchg
outs
mov
and
rcr
out
mov
dec
mov
inc
jo
in
test
jp
mov
xor
test
jp
test
sub
mov
add
pusha
xor
cmp
int
mov
add
fsub
adc
or
cwde
ss
rcr
and
(bad)
adc
add
mov
mov
jp
pusha
cmp
clc
imul
jb
aaa
add
rcr
xlat
or
add
pop
adc
test
into
(bad)
push
mov
xor
pop
into
sbb
sbb
or
adc
push
pop
jge
cmp
(bad)
fdiv
cmp
mov
(bad)
lods
xlat
pop
or
or
pushf
mov
jecxz
je
aaa
mov
pop
mov
outs
xor
push
mov
js
les
sbb
jecxz
mov
imul
add
sbb
pop
int
sub
dec
arpl
or
adc
(bad)
xchg
bound
adc
mov
and
push
xor
clc
sbb
adc
and
add
jne
fwait
lods
jns
fcmovnu
jo
mov
pop
xor
mov
outs
inc
loopne
mov
nop
loope
enter
sbb
jnp
dec
xchg
nop
adc
add
or
es
addr16
or
ret
into
add
cmp
iret
adc
push
add
mov
and
xor
rol
nop
jae
imul
sub
add
or
add
and
add
lock
xor
sti
and
div
iret
push
std
pop
les
pop
lea
and
xor
sub
arpl
and
idiv
add
cmp
sti
test
sub
hlt
sub
repz
jmp
lods
out
imul
xor
out
or
dec
gs
xchg
imul
add
sbb
loope
push
add
mov
popa
out
or
xchg
cld
add
mov
mov
add
shl
pop
pop
shl
rol
jmp
pmaxsw
xor
jbe
sbb
(bad)
xlat
jl
rol
cwde
cmp
pop
arpl
add
jg
cmc
jge
imul
add
sub
div
or
inc
aaa
mov
enter
fnsave
fldcw
popf
jg
leave
xchg
adc
cdq
ret
fst
adc
lea
adc
or
mov
xor
inc
and
or
clc
mov
sub
xor
test
ret
mov
loopne
ins
inc
idiv
mov
mov
out
push
pushf
out
jo
or
inc
jbe
adc
in
ret
dec
(bad)
pop
std
add
push
js
mov
cli
in
aad
adc
out
iret
loope
fidivr
in
int3
loope
add
(bad)
pop
add
cmp
outs
ds
or
arpl
push
inc
outs
int3
mov
sub
inc
mov
and
icebp
out
inc
(bad)
jmp
enter
fcom
adc
fiadd
in
jmp
repnz
dec
bound
cwde
inc
pusha
and
inc
jg
sub
in
inc
or
pop
ret
add
dec
and
cwde
(bad)
or
mov
xor
xor
mov
jo
and
data16
call
push
add
or
shl
xchg
mov
rcr
(bad)
sub
jp
add
add
and
cld
mov
mov
and
ror
cmps
cs
push
aaa
(bad)
push
mov
shl
xor
inc
clc
push
push
dec
fyl2xp1
sbb
adc
bound
jl
push
lahf
daa
mov
inc
adc
xor
jecxz
ds
rol
xor
ret
out
add
or
lock
xor
xor
ins
in
test
jp
imul
loopne
push
pop
pusha
cmp
cli
jne
sub
adc
xchg
je
push
cmp
(bad)
or
cmp
add
push
(bad)
jb
or
pop
out
dec
hlt
xor
clc
mov
mov
ds
in
mov
mov
mov
cmp
dec
shl
mov
aad
adc
pop
test
fistp
fidiv
add
jg
jnp
jns
pop
pop
jns
xlat
sbb
rcl
jg
or
test
inc
stc
mov
cmp
test
inc
jbe
add
and
das
add
cmp
iret
bound
pop
sbb
dec
sahf
inc
inc
sub
or
mov
ds
pop
ins
or
cmp
call
sub
in
cmc
jnp
jle
adc
lds
add
dec
mov
pushf
dec
test
pop
lds
es
mov
sbb
push
mov
ja
addr16
ret
adc
jns
das
pop
clc
fld
and
inc
add
imul
mov
jg
shr
pop
(bad)
shr
das
sbb
ds
inc
mov
pop
cmp
add
loopne
dec
mov
sahf
add
or
pop
mov
jg
adc
aas
scas
aas
cs
lea
out
jno
add
test
pop
pusha
sbb
sub
fsub
jle
sub
dec
into
sub
pop
sbb
in
ret
(bad)
sbb
out
adc
pusha
adc
xchg
add
popf
inc
or
add
sbb
int3
std
xor
or
add
add
add
pop
nop
lea
push
dec
pusha
bound
pop
jo
daa
clc
adc
jb
xor
add
mov
push
add
dec
xor
fstp
cli
aaa
aaa
aaa
mov
lea
scas
clc
xor
shl
repz
jne
in
mov
fwait
jmp
sub
xor
in
add
pushf
dec
push
or
push
je
adc
es
(bad)
repz
(bad)
loopne
and
pop
in
xchg
imul
pop
hlt
add
fnstsw
or
out
jno
sub
xor
inc
clc
pop
in
out
shl
loopne
rcl
sahf
dec
int
fstp
pop
jbe
push
movs
stc
sub
outs
adc
xor
in
jge
add
es
daa
xlat
cmp
nop
clc
mov
jo
loope
sbb
adc
push
mov
push
jo
stos
fsub
retf
xchg
scas
daa
adc
leave
xchg
xor
fs
xor
sbb
call
pushf
mov
pushf
and
pop
or
inc
mov
into
mov
xor
(bad)
cld
cwde
mov
mov
or
sbb
data16
mov
stos
adc
loopne
mov
std
add
not
mov
stc
(bad)
cmp
mov
std
mov
lock
and
sub
int
call
cmp
in
pop
std
dec
push
pop
xor
pop
(bad)
(bad)
scas
push
test
imul
ja
cmp
or
enter
cmp
jo
xor
or
test
jp
rcl
jmp
push
lahf
inc
jle
adc
adc
lods
add
jg
dec
aam
xor
inc
loope
(bad)
inc
mov
ret
sbb
jge
inc
stc
stc
and
and
xchg
call
jecxz
and
push
out
fadd
das
ds
mov
pop
fcomi
enter
bound
dec
add
std
retf
inc
and
adc
or
sbb
add
lahf
fwait
add
(bad)
adc
mov
add
(bad)
shr
dec
lods
out
cmc
jmp
mov
addr16
std
jbe
or
mov
jns
add
stos
sub
pop
mov
iret
cmp
ins
or
pop
pop
pop
(bad)
int3
in
mov
retf
mov
sub
iret
mov
mov
cmp
push
std
call
xchg
bswap
xchg
into
push
dec
push
pop
jg
cmp
pop
add
or
mov
or
add
mov
push
jp
cmp
clc
inc
pop
shl
add
mov
daa
sbb
and
mov
xchg
inc
or
lea
ret
pop
jle
shl
(bad)
lea
xor
add
mov
and
and
dec
add
sub
test
add
cdq
mov
movs
icebp
popa
ins
mov
sub
pop
ret
shr
(bad)
adc
push
into
(bad)
(bad)
dec
js
nop
jecxz
jo
in
retf
lods
jns
fistp
mov
cmps
fwait
clc
hlt
jl
scas
dec
aaa
lock
sbb
pushf
mov
fwait
and
jge
stos
add
adc
(bad)
ss
stc
sti
adc
les
test
and
or
(bad)
mov
jecxz
retf
out
xor
mov
add
sbb
mov
je
cli
sbb
mov
dec
add
mov
rcl
or
(bad)
in
push
push
(bad)
jno
push
test
call
cwde
lea
call
add
sub
sub
dec
dec
and
and
int
sbb
adc
or
int
jo
sbb
ss
sub
push
push
and
or
mov
lods
push
add
sub
add
and
pop
xor
jg
mov
repz
jmp
enter
out
push
test
loope
pop
pop
add
xchg
mov
shl
fsub
rcr
xor
push
jle
(bad)
mov
mov
cmc
jge
cld
dec
or
stc
lahf
xor
std
or
gs
out
jb
jne
(bad)
rep
movs
pop
push
loope
shl
and
and
xor
pop
fsub
cs
jno
xchg
loopne
push
sbb
add
xchg
xchg
adc
and
add
push
jp
lea
in
jmp
or
hlt
je
pop
ja
scas
or
or
(bad)
pop
xchg
aas
add
neg
stos
jg
or
add
rcl
xchg
inc
pop
std
sbb
(bad)
and
mov
jns
mov
dec
pop
adc
loopne
xor
das
and
xchg
pop
rcl
mov
retf
not
cld
pop
test
adc
add
mov
sahf
xor
hlt
cmp
cmc
popa
and
rcl
pushf
data16
push
call
sti
js
add
not
hlt
js
lahf
pop
outs
dec
ss
lea
jae
sub
ret
mov
div
fstp
add
xlat
adc
jo
stos
test
add
leave
push
xchg
jne
aaa
cmp
inc
cmp
inc
int3
aaa
mov
mov
loope
je
retf
mov
in
inc
mov
pop
add
inc
lock
add
stos
out
mov
adc
xor
mov
and
shl
adc
or
repz
push
push
sub
push
xchg
xor
hlt
mov
add
stc
xchg
xor
dec
rcl
inc
jo
nop
aaa
mov
dec
mov
dec
adc
mov
push
adc
pop
repz
mov
jl
adc
jnp
add
jg
sbb
pop
add
call
popa
pop
inc
out
add
add
add
inc
and
push
adc
call
xor
fucomi
push
inc
ds
sbb
add
cmp
gs
(bad)
sub
xchg
cwde
push
xor
and
fild
dec
in
aad
and
arpl
sbb
enter
stos
push
adc
add
sti
inc
pop
movs
(bad)
fbstp
cmps
ss
dec
jmp
mov
and
dec
xchg
mov
int
out
fsub
bnd
jge
or
mov
add
fcomp
(bad)
shr
sbb
mov
add
and
or
cmp
stos
imul
mov
test
rol
loopne
inc
adc
adc
pop
loope
push
pop
ins
push
mov
es
mov
ret
test
hlt
jmp
jecxz
scas
sub
aam
gs
pop
adc
xor
sub
adc
loope
cmp
test
xor
cli
add
out
pop
stos
mov
push
test
popf
into
and
mov
test
adc
rcr
lods
jge
out
push
sub
cld
fmul
cwde
mov
cwde
xchg
xor
cmp
clc
inc
shl
pusha
out
mov
lods
inc
cld
in
not
mov
out
jecxz
inc
loopne
aaa
jbe
cld
push
icebp
clc
push
imul
gs
nop
shl
lds
mov
(bad)
jge
mov
add
or
xor
pop
pop
out
lea
adc
mov
loopne
arpl
pop
xchg
fbld
mov
sub
imul
mov
pop
add
sbb
pusha
pusha
sub
jecxz
out
mov
retf
push
push
mov
cmp
and
and
add
cmp
xor
and
leave
jmp
rcr
or
or
xor
sbb
xor
loope
pop
jle
adc
sbb
in
iret
div
xchg
cmp
rcr
lds
xor
cmp
repnz
mov
dec
inc
inc
push
fild
data16
dec
add
and
mov
aas
cmp
pop
sbb
dec
add
inc
imul
in
clc
adc
jns
push
mov
retf
inc
xchg
retf
pusha
jb
push
cmp
sbb
jecxz
and
sub
stc
jl
(bad)
ret
cmps
xor
sub
mov
call
pop
rcr
out
xlat
mov
mov
or
aad
repz
pop
inc
in
add
sbb
pop
fisubr
mov
fldcw
arpl
or
or
xchg
add
and
fcomi
fmul
aaa
ret
out
inc
mov
adc
pop
in
fwait
shr
aaa
lods
sahf
jp
cmc
dec
imul
iret
cmp
into
jecxz
adc
bswap
pop
cmp
ret
ficom
shl
adc
adc
stc
jl
outs
repz
dec
mov
in
cmp
sbb
out
xchg
and
pop
xor
fsubr
ja
or
cli
add
jmp
fstp
hlt
ja
call
inc
lds
addr16
sbb
popa
sub
ss
neg
scas
loope
mov
imul
in
(bad)
mov
sub
retf
xchg
bound
mov
adc
arpl
stos
xchg
ds
xor
sub
or
pushf
push
mov
sti
rcr
loope
inc
(bad)
push
loope
loope
mov
sbb
and
fst
(bad)
jecxz
nop
mov
jge
(bad)
call
inc
cmp
jle
loopne
out
push
in
push
inc
jno
sbb
pop
ret
cmp
fwait
mov
sub
loop
cmps
push
cli
jle
sti
sbb
fistp
scas
pop
fcom
or
push
addr16
clc
loop
maxps
or
adc
call
push
sti
jae
fcomp
(bad)
pop
cmp
jo
or
lods
mov
icebp
jbe
add
push
or
xchg
sub
(bad)
lods
std
inc
lock
test
add
push
sbb
pop
cmp
sbb
nop
inc
es
adc
scas
ret
sub
fwait
mov
xor
sbb
mov
sahf
sbb
hlt
cmp
mov
add
mov
push
add
mov
lock
call
fldenv
mov
adc
sub
add
add
adc
repnz
sbb
add
sar
loopne
arpl
adc
inc
imul
repnz
or
or
ins
add
jnp
jae
loope
or
push
add
dec
sub
(bad)
js
pop
ror
add
leave
mov
inc
pusha
push
mov
dec
mov
push
int3
and
cdq
inc
jle
xchg
cld
lods
mov
popa
fdiv
pop
sub
std
mov
in
loope
xor
test
enter
les
ds
arpl
ret
push
fdivr
xchg
mov
in
into
pop
cwde
xchg
adc
in
push
push
pop
pop
inc
jno
pop
push
pop
fld
int3
jmp
mov
fistp
pop
lahf
(bad)
adc
cld
mov
test
xchg
mov
outs
add
add
stos
mov
xchg
or
jbe
mov
inc
adc
clc
sub
add
jbe
pop
fwait
cwde
(bad)
mov
js
xchg
push
out
iret
jmp
fwait
add
test
cmp
xlat
push
pushf
pop
inc
popa
jbe
xchg
lahf
pop
rol
lods
mov
scas
pop
test
and
hlt
sub
popf
in
xor
adc
xor
mov
add
jg
pop
add
fmul
xchg
ror
pop
sti
add
cld
push
movs
push
ret
ds
lods
adc
xor
mov
jge
mov
in
cmp
mov
and
sbb
and
retf
aam
or
(bad)
call
push
std
mov
adc
lock
sbb
mov
(bad)
in
ins
shl
jl
sub
out
ret
pop
or
aas
mov
arpl
das
(bad)
jo
sbb
popf
lds
outs
int
repz
not
in
cmps
sbb
mov
icebp
(bad)
cmp
xor
sahf
dec
mov
mov
ret
push
fwait
test
xor
pop
ds
xor
or
ss
popf
sub
dec
sbb
or
mov
pop
shl
dec
pop
or
inc
and
cmova
adc
enter
aas
or
fist
inc
out
mov
iret
dec
add
gs
jecxz
xchg
out
mov
clc
clc
out
jle
mov
jmp
or
jmp
xor
test
std
dec
cmp
imul
xchg
cld
sahf
fsub
cmp
fadd
cmc
jns
shl
adc
cld
stc
rcl
daa
iret
jmp
cs
jo
in
adc
mov
mov
in
xor
adc
jo
rcr
inc
or
push
out
mov
cs
outs
gs
imul
test
push
xlat
xor
adc
or
or
movs
pop
dec
dec
iret
push
xchg
movs
or
xchg
jo
xchg
dec
mov
adc
sbb
jbe
call
(bad)
push
out
ins
repz
imul
sub
jne
jno
call
jle
jge
mov
sahf
add
imul
loopne
push
(bad)
(bad)
(bad)
mov
out
out
das
and
or
mov
fmulp
cmp
adc
fadd
fsubr
cmps
pop
aaa
xchg
lahf
pop
stos
and
mov
scas
les
loope
lods
pop
jg
jmp
(bad)
inc
pusha
sbb
mov
dec
cli
popf
repnz
icebp
xchg
arpl
das
push
add
mov
test
mov
inc
pop
pop
add
sbb
ror
or
jbe
mov
hlt
or
fcomi
xchg
out
cld
movs
test
jne
arpl
cmps
add
or
add
mov
pushf
sar
or
lods
inc
or
or
add
xor
sbb
sahf
mov
mov
div
scas
mov
mov
adc
(bad)
cwde
retf
fidiv
xor
add
inc
ja
cmp
push
add
ror
inc
and
in
lods
leave
ins
or
test
into
push
mov
or
(bad)
cld
movs
aad
and
cmps
jge
xchg
ret
add
cmp
loopne
outs
xchg
inc
add
sbb
and
fcom
lea
mov
mov
and
lock
sub
mov
xchg
adc
mov
popa
call
push
nop
xor
add
outs
dec
ret
retf
push
adc
sbb
inc
and
mov
iret
xchg
cmps
cmps
inc
nop
cmp
es
and
cmp
cmp
or
xor
loopne
outs
push
xchg
loop
dec
or
in
sub
mov
xor
cmps
cmc
ds
stc
iret
sbb
int
jmp
gs
retf
mov
mov
mov
in
sub
lods
arpl
sbb
jnp
fcomp
ffreep
xchg
and
xor
cmp
cmp
mov
sbb
stc
lds
jae
xchg
push
int
cld
sbb
push
pop
adc
sub
bound
shl
pop
ficom
push
loope
ss
into
mov
jl
int
aaa
xor
jge
sbb
addr16
mov
fistp
mov
int
sar
mov
adc
sbb
jae
mov
jl
mov
fs
in
push
mov
in
sub
pop
mov
into
mov
std
mov
daa
nop
adc
call
fdiv
jge
ds
pop
fsubr
adc
into
lods
sub
cmps
sahf
jg
cs
sbb
test
imul
shr
add
add
stos
sbb
jne
jmp
in
push
add
mov
cli
sbb
lock
cmps
jne
add
xlat
pop
into
outs
inc
pop
inc
inc
pop
mov
or
cmp
pop
adc
aam
inc
xchg
cmp
xor
or
cmp
enter
jae
out
sbb
jno
ret
adc
outs
imul
ins
cmp
or
dec
jmp
jbe
dec
mov
hlt
jbe
popa
mov
dec
les
jnp
xor
jmp
sub
cwde
xchg
in
jnp
cmp
fcomp
rcr
inc
fisttp
test
in
out
fmul
daa
mov
popf
les
mov
fucom
and
je
out
jmp
stc
xchg
pop
sub
(bad)
push
add
popf
lock
add
xor
inc
shl
(bad)
push
mov
push
push
mov
aam
and
rcr
es
push
stos
lock
push
xor
fbld
out
mov
push
add
mov
xchg
stc
arpl
push
stc
stos
rcl
out
mov
inc
in
xchg
xchg
outs
pop
fidivr
call
push
and
add
mov
jae
(bad)
cmp
cli
sub
jle
cmp
test
lock
mov
lea
dec
jmp
jmp
fisttp
inc
xor
dec
jmp
push
adc
sub
(bad)
adc
shl
mov
in
add
jbe
xor
int
mov
mov
inc
lds
xchg
inc
inc
mov
test
ins
push
mov
sub
adc
jno
aam
jno
bswap
pop
pop
add
xchg
mov
test
loopne
out
sbb
mov
cmp
scas
fistp
or
aaa
out
push
pusha
enter
pop
stc
cmp
ins
in
popf
(bad)
mov
push
outs
ficom
mov
scas
xchg
popf
mov
add
mov
jae
mov
cld
ficomp
xor
jnp
std
or
ins
push
iret
movs
push
sar
cwde
pcmpgtd
cli
mov
retf
pop
mov
scas
sbb
daa
xor
sbb
cmp
push
loope
bound
dec
cld
xor
fsubr
dec
aas
ror
fimul
mov
jo
mov
imul
sbb
imul
icebp
mov
inc
xchg
cmp
xchg
push
daa
call
into
sub
cmp
sub
jle
sti
lods
mov
mov
ret
addr16
in
sbb
adc
cwde
adc
jno
add
movs
xor
in
hlt
je
dec
rcr
fisttp
hlt
je
mov
adc
popf
cwde
mov
xor
jnp
sbb
jmp
ins
fdiv
lods
dec
or
stc
xchg
mov
add
ret
jp
xchg
in
cmp
xor
xchg
inc
cmp
mov
jbe
or
and
lock
fsub
gs
adc
das
xchg
loope
hlt
shl
add
or
cld
mov
xchg
inc
and
bound
xor
mov
cmp
neg
inc
ds
aas
inc
cmp
pop
pop
jae
add
sbb
jge
gs
pop
add
jae
push
clc
rcr
lods
sub
xchg
or
ss
add
add
dec
pop
mov
repnz
retf
out
mov
cmp
sub
add
and
pop
mov
lahf
xchg
or
stos
fwait
inc
into
imul
dec
stos
add
push
dec
nop
ja
fcmovnb
cmps
xchg
adc
pop
aas
aad
es
in
sub
repz
into
mov
(bad)
push
aas
cmp
out
loope
sub
pop
mov
jne
pusha
not
test
mov
int
jecxz
sbb
loope
xchg
sar
leave
jno
push
enter
push
push
shr
lods
lock
ret
scas
xor
mov
repz
and
into
pop
cdq
cmp
(bad)
loope
cld
pop
scas
retf
imul
add
test
imul
stos
cmps
sahf
jg
add
outs
add
push
pop
pusha
cmp
inc
outs
or
ror
push
js
sub
clc
xor
in
sbb
push
bound
mov
sub
stos
jg
pop
cmps
ret
test
loopne
cmp
jg
test
add
popf
sub
add
mov
dec
shr
sub
or
je
sbb
in
mov
mov
sub
sahf
add
mov
stos
lea
pop
aas
fidivr
and
push
mov
cmp
rcl
ror
add
test
sub
add
inc
and
sbb
in
inc
test
jmp
or
inc
mov
mov
xor
mov
fs
push
out
inc
sub
mov
ins
or
call
rcr
neg
and
out
sub
outs
add
or
cmp
or
sar
ret
(bad)
xor
and
(bad)
(bad)
or
out
call
jbe
mov
push
xchg
rol
adc
xchg
sahf
mov
cmp
cli
cmp
cmp
push
add
mov
xchg
stos
add
cmp
jl
ror
iret
sahf
jle
dec
stc
mov
test
or
dec
add
jnp
cmp
jns
lock
loopne
enter
or
push
push
fimul
pop
mov
(bad)
mov
mov
sahf
pop
adc
scas
dec
mov
cdq
jns
fisttp
mov
gs
push
(bad)
jbe
mov
jo
lods
ret
sbb
cld
dec
int3
jl
mov
mov
pop
fcmovnbe
or
js
push
push
repz
sub
out
call
dec
outs
in
imul
sahf
fdivr
mov
cmp
and
push
add
sbb
dec
in
ds
push
push
pop
xchg
stos
xchg
mov
push
mov
add
jns
(bad)
jp
daa
xchg
mov
sti
jno
cmp
mov
xchg
ja
jmp
mov
sbb
sbb
and
cmc
aaa
lods
sahf
jp
jne
loopne
add
jg
jl
loop
lock
test
ins
or
sub
push
loopne
pop
std
and
or
fstp
dec
add
mov
fcom
mov
shl
pop
add
outs
test
fsubr
mov
ds
imul
maxps
mov
and
fadd
lds
xchg
mov
cmp
mov
or
in
imul
lods
ss
hlt
or
lds
mov
test
jecxz
cdq
mov
cmp
lea
loop
scas
push
nop
fisub
pusha
ins
adc
adc
push
xor
sbb
push
sub
dec
add
je
xchg
mov
adc
mul
adc
inc
xor
inc
ret
dec
rol
adc
mov
pop
xor
xchg
div
sbb
push
inc
fcomp
imul
test
ror
jmp
pop
mov
pop
daa
jl
repz
pushf
add
pop
pushf
bnd
mov
jle
sub
mov
nop
mov
and
sbb
xor
dec
gs
retf
cmp
xor
ret
neg
out
clc
leave
pop
icebp
call
jbe
inc
(bad)
sub
mov
lahf
sub
cmp
inc
es
cmp
fwait
mov
push
mov
arpl
dec
jle
cmp
push
jle
sbb
data16
mov
and
mov
pop
adc
repnz
pop
pop
adc
cmp
idiv
and
out
adc
xor
sbb
sub
dec
sub
jo
adc
int
sub
test
inc
xor
pop
dec
pushf
bound
xchg
or
(bad)
cmp
push
stos
jns
pop
mov
pop
or
jns
push
js
loope
push
xchg
shl
fistp
leave
loope
data16
pop
repz
pop
fidivr
(bad)
mov
ret
(bad)
in
call
jae
loopne
sbb
sbb
pop
xchg
xor
dec
mov
arpl
inc
mov
aad
bound
xchg
jl
push
out
adc
loopne
mov
loopne
jns
pop
imul
(bad)
int
cmp
(bad)
stc
cmp
cld
fiadd
out
mov
or
rcl
xchg
aaa
lods
sahf
jp
jne
loopne
add
jg
push
shl
je
aad
dec
mov
and
dec
push
iret
push
cmp
inc
inc
pop
pop
(bad)
mov
sub
or
hlt
ret
sub
jb
adc
jne
imul
cs
xor
jge
mov
mov
cmp
(bad)
hlt
js
ins
std
pop
je
or
sbb
cld
stc
mov
cmps
clc
repz
icebp
mov
aaa
mov
jle
test
jns
in
mov
ja
cmp
jp
rcr
mov
push
xor
test
aam
or
push
fldenv
ror
bnd
jnp
mov
or
arpl
sbb
push
push
jo
add
bound
out
retf
fisub
scas
jmp
retf
scas
ja
jmp
xchg
xor
jle
pop
pop
div
ret
jmp
and
or
(bad)
add
(bad)
xchg
mov
cli
popf
and
jg
sub
fmul
push
pushf
ds
add
pop
add
int3
sbb
hlt
cmps
adc
aad
dec
or
or
pop
add
popf
inc
mov
and
add
cmp
pop
add
inc
shr
outs
jmp
(bad)
in
imul
xor
test
sbb
lods
adc
sbb
pop
and
sbb
push
jns
fdivr
ss
mov
jle
mov
jmp
mov
rcr
dec
push
out
ficom
cs
bound
cmps
pusha
jo
mov
and
mov
rcl
mov
jl
mov
call
out
add
jae
inc
popf
push
test
xor
mov
push
dec
xor
clc
dec
sbb
jge
ret
cmp
xor
mov
arpl
(bad)
xor
fnstsw
sbb
aas
or
repz
neg
push
sub
jmp
adc
mov
aad
ds
mov
(bad)
sti
xor
iret
mov
add
stc
out
xchg
and
(bad)
jmp
shl
arpl
cmp
jp
into
lahf
sbb
or
ss
into
and
push
scas
mov
lds
pop
in
inc
imul
fnsave
mov
inc
sahf
popa
add
mov
or
jns
pop
out
jno
inc
fdivr
inc
push
xchg
mov
cmp
stos
push
xchg
ret
das
mov
inc
clc
or
dec
mov
or
jmp
xor
ss
xchg
aas
add
xchg
repnz
psubsw
or
sar
icebp
imul
psubb
adc
adc
jne
in
cmp
jmp
ror
pop
jne
pop
sbb
ud2
or
ret
mov
mov
call
pop
lahf
fistp
jmp
cld
mov
or
or
test
xchg
fdivr
adc
enter
cmp
jb
mov
je
add
es
lahf
arpl
(bad)
xchg
js
leave
lahf
icebp
jmp
cmp
psraw
mov
sub
es
add
or
dec
or
clc
jno
loope
pop
xchg
pop
addr16
push
out
das
dec
add
idiv
adc
pop
add
add
push
repnz
sar
sbb
jb
add
pop
in
jmp
test
mov
jne
nop
out
add
sub
push
test
test
cli
xchg
cwde
(bad)
dec
push
push
push
mov
xlat
nop
pop
cmp
popf
bound
push
push
ss
add
inc
cmp
xchg
imul
xchg
adc
jmp
ret
scas
jb
retf
adc
loop
data16
add
fcmovnb
fsub
mov
mov
ds
out
mov
push
fistp
mov
dec
ret
into
int
call
xor
aas
and
and
divps
jne
repz
icebp
fistp
inc
fistp
mov
int
call
out
xor
aaa
scas
arpl
adc
adc
leave
jno
in
(bad)
movs
inc
rcr
lods
sahf
jp
jne
loopne
add
jg
hlt
(bad)
add
outs
or
lods
cmp
dec
shl
mov
in
jl
retf
push
jmp
push
sbb
out
mov
push
mov
xlat
mov
in
prefetch
xchg
or
add
shr
fsub
clc
sar
inc
pop
inc
enter
mov
jns
ja
adc
jnp
loop
add
mov
lock
lahf
pop
addr16
and
mov
mov
rcr
mov
ins
add
(bad)
popa
add
xchg
sub
xor
mov
inc
jl
imul
outs
arpl
xor
xchg
inc
sub
(bad)
call
mov
sub
mov
pop
out
jno
xchg
in
pop
mov
pop
jno
mov
xor
mov
(bad)
(bad)
scas
retf
pop
in
cld
jns
ret
lock
sbb
adc
or
adc
lds
push
adc
cmp
cmps
push
out
and
mov
cmp
(bad)
stc
xchg
mov
mul
mov
add
ja
inc
sub
popa
int
jae
pop
jmp
imul
pop
xor
add
in
ss
fbld
in
in
xlat
xor
shl
daa
neg
xor
add
sti
cmp
mov
ds
loopne
xor
or
stc
popf
jno
or
or
addr16
xor
adc
or
cmp
adc
push
(bad)
clc
xor
int3
dec
das
push
add
fdivr
pop
movs
cli
aaa
mov
arpl
jmp
sbb
bound
div
inc
xor
lock
sbb
int3
in
aad
xor
or
ror
jae
jmp
pop
loope
inc
icebp
mov
(bad)
in
pop
or
lahf
jecxz
xchg
loop
push
sar
pop
scas
push
sar
movs
scas
ja
xchg
(bad)
ds
gs
xor
lock
pusha
xchg
hlt
test
ins
jbe
sbb
mov
in
add
retf
hlt
xchg
shl
push
jge
lods
mov
inc
dec
adc
inc
sahf
and
sbb
inc
mov
lock
jae
scas
outs
jecxz
cmp
mov
or
in
cmp
nop
aad
ror
lods
pop
pop
cmc
imul
mov
ins
outs
inc
addr16
stos
push
std
div
bound
jp
fdiv
pop
rcr
imul
rcr
adc
mov
xor
inc
inc
and
sub
inc
adc
jo
jmp
ret
fcmovnu
add
and
jge
mov
out
pusha
cmps
scas
jmp
out
or
mov
mov
mov
add
sbb
mov
cld
inc
push
stos
dec
dec
outs
and
mov
xchg
mov
dec
div
sbb
sbb
add
std
push
pushf
ds
adc
loop
fst
ret
push
popf
pop
xlat
out
iret
popf
adc
cdq
add
dec
jne
pop
cs
call
jnp
jg
test
or
mov
sbb
xchg
jbe
push
adc
cmp
inc
std
std
test
mul
add
push
rcl
or
nop
add
cwde
je
in
dec
mov
stc
jge
lea
cmps
add
cmp
je
adc
popf
cmp
inc
(bad)
mov
push
lds
xchg
push
outs
fs
out
addr16
clc
pop
loope
xlat
add
fdivr
mov
add
out
out
sahf
pusha
in
push
(bad)
dec
outs
arpl
in
cs
out
popa
repz
(bad)
and
outs
stos
mov
js
and
sub
cmp
out
pop
add
cmp
sahf
arpl
out
addr16
in
gs
mov
fstp
lods
fnstcw
jge
int
pop
xchg
add
adc
add
not
cli
sbb
cmp
pop
jne
add
cmp
push
dec
add
add
cmp
or
mov
or
xor
retf
je
jbe
fidivr
mov
popa
pop
loope
and
sbb
repz
pop
push
xor
adc
inc
adc
mov
nop
repz
test
fisttp
(bad)
fidiv
jae
sub
repz
jle
or
aas
(bad)
les
sub
lods
popa
fist
dec
inc
cmp
cmp
rcr
(bad)
xchg
lahf
mov
pop
iret
mov
adc
shl
mov
cmp
or
dec
jnp
shl
jp
mov
jle
aad
jge
sub
rcl
and
nop
ja
stos
jge
out
stos
(bad)
loop
and
mov
or
int
sbb
mov
loope
icebp
mov
add
das
sbb
inc
add
dec
add
sbb
xor
pop
icebp
aaa
xchg
mov
jge
or
mov
dec
mov
dec
xor
or
sub
std
push
idiv
stc
xor
cli
fnstcw
shl
(bad)
retf
in
mov
mov
lods
and
mov
cmps
adc
push
inc
mov
nop
imul
adc
mov
sub
popa
dec
outs
inc
out
pop
push
add
je
clc
mov
inc
mov
adc
cmp
jnp
call
xchg
jg
ret
lods
or
jo
mov
xlat
xchg
push
mov
bound
push
(bad)
jb
cwde
sub
leave
iret
mov
sbb
add
add
(bad)
aad
mov
jns
fadd
cwde
pop
add
xchg
ja
add
jno
fidiv
pop
sub
push
add
arpl
addr16
mov
es
sbb
sbb
sbb
repnz
fsubr
jmp
pmulhw
pop
cmpxchg
(bad)
jmp
sbb
aad
pop
iret
(bad)
fisubr
add
cmp
pop
pop
add
data16
call
shl
xchg
jmp
sbb
(bad)
psubd
mov
adc
fdiv
addr16
pusha
dec
pop
mov
mov
mov
jnp
imul
add
scas
mov
jb
or
sbb
mov
aam
or
scas
push
cmp
lods
(bad)
and
cmps
push
adc
pop
daa
out
cmp
(bad)
fbld
in
jg
hlt
leave
iret
mov
or
aad
mov
not
xor
aas
cmps
adc
shr
int
or
out
mov
icebp
or
mov
add
adc
ins
popf
bound
sbb
repnz
mov
pop
in
push
dec
mov
adc
hlt
and
aam
jnp
push
popf
push
outs
aas
into
dec
cmp
jae
enter
push
dec
mov
in
idiv
inc
or
sbb
dec
and
dec
and
add
or
cdq
dec
pop
in
sub
push
mov
jae
(bad)
xor
lods
in
jl
fistp
call
sahf
jle
pop
clc
call
jge
pop
fdivr
or
fld
and
adc
mov
add
push
add
nop
out
in
fcmovnb
push
sar
or
(bad)
shr
push
mov
mov
or
retf
adc
cmp
addr16
push
enter
aas
scas
and
sbb
cmp
jmp
dec
mov
push
adc
retf
add
(bad)
cmp
adc
inc
imul
sub
xchg
inc
stos
movs
dec
or
cld
mov
mov
xchg
or
in
adc
test
call
xor
aam
gs
xchg
mov
pop
adc
sbb
out
lahf
(bad)
in
cmps
loop
jmp
jge
lahf
xor
mov
jecxz
loop
inc
xchg
(bad)
into
add
jb
mov
mov
repz
outs
cmp
fdivr
es
(bad)
(bad)
pop
mov
pop
xchg
pop
retf
jmp
repnz
mov
dec
mov
aas
adc
adc
mov
aaa
lock
std
or
pop
push
scas
cmp
(bad)
repz
les
clc
popa
jnp
cmps
shr
cs
fucomi
xchg
and
cmp
cmp
xor
adc
adc
aad
inc
mov
out
or
jp
xchg
aaa
les
sar
jge
or
push
mov
popa
add
out
std
sub
or
cli
ins
in
inc
or
les
xchg
lods
add
mov
mov
mov
mov
lods
adc
jbe
mov
mov
pop
mov
sub
ja
mov
mov
fwait
shl
enter
xor
sahf
pusha
jmp
fisttp
mov
mov
in
and
and
xchg
sbb
ret
push
adc
adc
bound
out
fidivr
pusha
inc
rol
pushf
jle
xchg
or
icebp
in
adc
mov
enter
ss
jne
out
inc
icebp
add
stc
jae
scas
fadd
(bad)
xchg
pusha
ret
call
jnp
mov
repnz
(bad)
pop
icebp
mul
fwait
mov
shl
lahf
call
pop
sti
test
pop
add
hlt
pop
or
jo
daa
rcr
cmp
mov
dec
lods
jo
mov
fmul
or
mov
mov
(bad)
pop
mov
mov
xor
stos
mov
xchg
xor
test
inc
mov
adc
or
es
ror
fs
add
and
cmp
ficom
into
int3
in
mov
out
(bad)
pop
in
mov
imul
inc
mov
jbe
jg
aad
or
cld
fimul
xchg
(bad)
outs
pusha
std
hlt
mov
push
into
push
scas
mov
in
adc
into
pop
arpl
(bad)
xchg
out
and
pushf
jecxz
div
test
xor
push
(bad)
outs
imul
jae
mov
add
repz
push
jmp
pop
stos
inc
push
fdiv
js
xchg
sbb
push
add
les
out
jne
clc
stos
pop
ret
fcom
dec
clc
cmc
cmp
shl
movs
mov
daa
lods
mov
test
adc
xlat
retf
sub
cdq
out
adc
daa
stos
inc
nop
shl
inc
fs
cmp
xor
jno
fs
(bad)
jae
inc
into
xor
add
push
sti
xor
jae
or
fiadd
pop
inc
jbe
add
jne
xor
mov
cmp
fcomp
inc
popa
inc
xor
jg
pushf
add
popf
adc
arpl
cmp
pop
inc
sub
lds
(bad)
outs
mov
out
lock
in
jo
inc
into
mov
cmp
xchg
or
add
in
cmp
or
and
push
loopne
sub
sbb
push
pop
adc
leave
fldenv
pop
dec
add
stc
pop
sub
(bad)
pop
cmp
sbb
pop
pusha
(bad)
fidiv
stc
repnz
repnz
fbstp
in
out
jnp
sbb
aas
mov
lds
xor
repnz
push
lahf
cmp
call
mov
hlt
mov
jmp
inc
mov
or
mov
mov
sti
retf
fwait
jnp
mov
cld
xchg
ret
sti
xor
repnz
add
mov
xlat
fwait
in
bswap
into
adc
xor
adc
jecxz
add
or
mov
mov
loope
mov
mov
nop
aaa
mov
scas
popa
scas
rol
or
or
xchg
cmc
add
data16
cmp
ja
mov
jg
in
fwait
or
sub
cmc
ficomp
ret
loop
xchg
jns
in
(bad)
pop
cmp
inc
(bad)
pushf
xor
cmp
jns
push
push
jg
jl
test
fistp
cmps
add
in
or
jmp
lods
out
fwait
aam
ficomp
out
inc
cmp
mov
ds
loope
jmp
gs
ret
rcl
push
xor
sbb
push
fiadd
jb
fwait
sbb
xor
xor
mov
xor
pop
pop
int3
jle
fcomp
enter
sub
mov
sub
mov
jmp
or
adc
retf
js
cmc
jae
imul
mov
xchg
dec
scas
dec
in
push
xchg
mov
sbb
mov
sbb
popf
mov
dec
pusha
push
pop
cmp
sbb
rcr
jecxz
lock
adc
cmp
pushf
jecxz
call
call
pop
ds
push
mov
aaa
xchg
pop
cmp
pop
ds
stc
and
xchg
psllw
dec
stc
jo
pop
inc
jb
xchg
push
pop
dec
xor
push
mov
aas
sub
retf
lds
push
out
in
sub
outs
push
out
push
call
jns
sar
cld
cli
dec
int3
outs
enter
pop
rol
push
ss
in
jecxz
mov
clc
adc
(bad)
xlat
cmp
cli
add
ja
std
inc
sar
(bad)
stc
jae
mov
mov
push
(bad)
icebp
xor
jl
cli
jae
push
mov
sub
cld
icebp
mov
jne
sub
hlt
fcom
cmp
add
jmp
pop
in
add
add
mov
xchg
inc
nop
or
jns
std
fild
cld
push
(bad)
outs
nop
test
xchg
and
(bad)
or
pushf
ins
xor
test
mov
std
fidivr
movs
loope
pop
mov
js
adc
push
dec
and
or
int
add
adc
xor
mov
pop
sub
int3
xor
fild
sbb
shl
mov
jns
cdq
sub
test
scas
dec
in
lock
mov
out
int3
sbb
cmp
ret
dec
mov
jecxz
fsubrp
loop
add
jp
or
(bad)
repz
into
push
imul
lahf
push
(bad)
pop
cmp
ins
push
faddp
cld
mov
sub
xchg
in
inc
pop
or
jg
push
mov
xor
push
(bad)
js
cmc
aaa
lods
sahf
jp
jns
sar
sbb
add
jns
loop
mov
add
xor
cmp
fist
div
xchg
adc
out
loopne
cmps
fild
add
inc
sahf
retf
push
ret
mov
fs
cdq
and
cli
add
jle
enter
lahf
loopne
loopne
arpl
add
push
ds
xchg
push
xchg
pushf
(bad)
push
adc
or
sbb
sub
mov
jge
sbb
and
in
pop
mov
add
lock
xor
(bad)
mov
cmp
pop
mov
xchg
pop
fstp
cmp
(bad)
pop
(bad)
pop
int3
scas
cmp
jno
sahf
jl
fist
js
mov
nop
outs
jb
aam
fdivr
mov
add
ret
mov
int3
aad
call
ins
enter
in
imul
jge
loope
push
int3
dec
dec
bound
add
(bad)
adc
daa
shl
movs
inc
cs
outs
fcom
mov
cwde
fstp
out
popf
xchg
jnp
jnp
push
(bad)
adc
idiv
mov
repz
(bad)
addr16
in
jo
loopne
sub
aas
(bad)
cld
fiadd
inc
enter
pop
or
jae
and
nop
jae
cli
fldcw
pop
xlat
not
jmp
pushf
pop
inc
int
ins
ffreep
mov
out
pop
call
cmps
fild
cmp
inc
(bad)
sahf
lods
stc
call
xlat
test
ss
jg
sbb
aas
push
xlat
add
div
ss
into
lock
stc
dec
inc
mov
ret
retf
ret
jbe
cmps
pop
enter
add
data16
inc
pop
push
jnp
jp
dec
clc
add
add
mov
mov
cs
data16
and
push
repnz
add
outs
pop
pop
mov
lods
call
addr16
jle
jae
add
mov
(bad)
in
push
inc
add
dec
aad
(bad)
xor
jns
add
and
cdq
jecxz
xchg
sub
jg
and
sahf
dec
sahf
aad
cli
fst
and
clc
pop
add
(bad)
and
pmulhw
ja
mov
mov
cli
out
pusha
sbb
mov
jle
pushf
daa
retf
lahf
or
push
xchg
lahf
xchg
(bad)
cli
sbb
cmp
jmp
sub
pop
pop
inc
xor
and
inc
clc
cmc
mov
xlat
loope
repnz
enter
and
clc
adc
sti
jp
imul
inc
aas
out
aad
ffreep
and
or
clc
sar
add
hlt
shr
xchg
dec
pop
mov
ret
fstp
cli
mov
imul
cwde
(bad)
mov
mov
or
in
fcmovu
dec
gs
mov
and
xchg
iret
mov
dec
push
std
add
std
pop
fwait
sub
out
cmp
pxor
repnz
jae
aaa
mov
jae
fcmovnb
ja
add
sbb
shr
rcr
xor
xor
push
mov
add
cli
add
std
cmp
pop
pop
ret
into
out
push
xlat
dec
mov
iret
mov
outs
test
pop
(bad)
fsubr
pslld
ds
hlt
lods
sbb
inc
fdivr
jnp
(bad)
dec
jo
imul
sbb
sti
pop
jae
in
jne
out
add
icebp
mov
push
fld
mov
push
push
cs
mov
jp
sbb
adc
xor
pop
call
outs
sti
(bad)
retf
sub
out
popf
mov
es
xchg
inc
pop
jne
ins
push
adc
sbb
adc
out
inc
ret
cld
jle
fidivr
pop
mov
jecxz
mov
add
adc
mov
adc
and
cld
in
mov
jno
mov
fwait
cmp
gs
push
add
and
push
cmp
out
add
jnp
je
xchg
shl
lock
(bad)
lahf
xchg
xor
cwde
sbb
pop
loop
das
jae
jle
in
sahf
imul
pop
cmp
jmp
add
jns
loop
add
loopne
add
jo
(bad)
mov
repnz
loop
(bad)
out
xchg
fistp
loope
inc
jnp
std
or
pop
add
jne
(bad)
repz
push
add
adc
pop
movs
and
lds
cs
rcl
mov
or
push
jmp
mov
add
mov
in
xchg
mov
addr16
sub
sbb
hlt
fabs
cmps
clc
and
pop
mov
xchg
inc
call
pop
or
mov
imul
paddsw
adc
into
and
or
sub
out
aas
sti
add
mov
sar
pop
arpl
hlt
sub
nop
jle
aad
dec
mov
clc
dec
add
mov
inc
stos
jb
jnp
mov
jnp
fistp
fist
sar
jo
jb
std
cwde
pop
jae
rol
push
xchg
rcl
fiadd
movs
and
jns
pop
imul
(bad)
jbe
popa
jge
mov
imul
(bad)
icebp
xor
mov
into
xchg
or
add
mov
adc
lahf
inc
(bad)
sti
adc
idiv
lock
sub
aaa
into
pop
bound
in
push
movs
dec
cmp
dec
lods
test
or
into
mov
mov
jge
mov
push
sub
out
cmp
repnz
xor
icebp
ja
mov
lods
repnz
outs
call
call
sub
stc
sbb
sbb
fwait
jl
mov
retf
pop
cmc
in
ja
call
sub
cmps
aas
cmps
mov
mov
adc
pop
adc
pop
fadd
sub
movs
xor
and
xlat
add
and
push
inc
sti
gs
ins
or
jne
call
imul
mov
ret
inc
rcr
add
clc
pop
out
aas
leave
or
push
into
sub
cli
fmul
scas
xchg
sub
movq
xchg
mov
in
mov
fist
test
shl
int
xchg
pop
jg
jmp
sbb
lea
data16
retf
cmp
imul
add
(bad)
loopne
int
jne
test
scas
add
push
retf
dec
jns
cmp
add
push
cli
and
gs
xchg
sbb
inc
pop
xor
icebp
jmp
jmp
das
mov
icebp
xlat
and
fdiv
movs
inc
rcl
cmps
aad
(bad)
push
and
and
push
sbb
aas
(bad)
cmc
mov
mov
bound
and
add
pop
mov
jo
mov
hlt
sti
xchg
shl
iret
sub
je
je
loop
dec
fadd
out
push
mov
mov
pmaxub
pop
pop
shr
and
lea
rcr
cmp
pop
push
and
aaa
nop
lock
pop
jg
sbb
fdivr
sbb
mov
(bad)
rcr
scas
jo
loopne
pushf
ds
dec
xchg
fldcw
jno
mov
jg
rep
call
test
mov
std
jl
(bad)
or
mov
mov
shl
sar
dec
adc
and
(bad)
pop
lods
fsub
outs
push
cmps
movs
outs
inc
adc
mov
or
stos
popf
std
mov
xor
and
xor
sbb
test
and
cmp
add
or
je
inc
xchg
xchg
cmp
mov
in
cdq
sub
pop
xchg
xchg
pop
fcmovbe
adc
cs
int3
(bad)
dec
add
repnz
xor
sub
jne
loopne
sub
add
push
cmp
fist
popf
cmp
lods
jmp
neg
in
clc
push
add
or
test
adc
imul
stos
cmps
sahf
jg
add
jne
(bad)
repz
loopne
popa
pop
add
xchg
xor
(bad)
cmp
or
sub
lock
add
add
and
sub
push
or
xor
add
loopne
push
add
mov
ds
test
push
clc
call
add
lahf
(bad)
push
dec
ror
test
lea
xchg
or
arpl
push
ss
jbe
dec
xlat
outs
jg
fwait
(bad)
jg
pop
dec
jg
jecxz
mov
fdivr
stc
sbb
inc
scas
mov
ret
stos
fcom
in
sbb
rol
jle
xchg
pop
aas
adc
das
xor
das
(bad)
pop
sbb
outs
retf
sti
jo
mov
mov
pop
xlat
loopne
scas
jne
bound
fcomi
sar
inc
adc
inc
(bad)
lea
mov
or
ret
mov
loope
mov
add
(bad)
clc
ja
hlt
lds
inc
rcr
lock
cmp
cld
(bad)
std
in
cmps
or
or
(bad)
sbb
cs
mov
dec
or
mov
sahf
mov
or
imul
add
inc
and
jns
loopne
aas
xchg
mov
scas
inc
and
inc
adc
sub
stos
cmp
or
stos
int3
cmp
fist
ror
add
int3
mov
sbb
push
add
rcl
data16
mov
enter
xchg
adc
int3
jge
dec
cwde
sti
call
or
sub
xlat
les
lock
inc
and
push
sahf
pop
mov
aas
xchg
(bad)
fcomp
enter
data16
lahf
into
add
mov
mov
fadd
fisubr
inc
sub
inc
das
mov
div
cmp
cmps
and
xchg
mov
ret
popf
inc
push
cmp
pop
and
xchg
add
test
or
jae
fnstcw
adc
lods
mov
aad
scas
add
jnp
xchg
mov
repz
fadd
into
pop
lds
jmp
xchg
(bad)
movs
inc
cs
loopne
outs
add
arpl
scas
xor
imul
in
pop
xlat
aad
imul
ja
adc
jge
mov
das
dec
clc
cli
push
repnz
div
dec
in
lahf
jl
pop
dec
fs
shl
xor
mov
(bad)
shl
sub
inc
sub
inc
test
add
jg
xchg
mov
mov
inc
push
and
jmp
outs
pusha
jmp
jle
jge
xlat
lahf
push
mov
std
cdq
xchg
arpl
(bad)
mov
cmp
add
js
jnp
and
and
and
adc
dec
xchg
fs
fs
pusha
in
inc
cmp
or
pop
xor
adc
ins
fdivr
or
in
or
daa
sub
aas
xchg
mov
mov
scas
outs
lock
add
cld
fld
dec
cld
sbb
ficom
enter
outs
xchg
or
inc
xor
adc
sbb
add
or
jns
or
cmp
fidivr
mov
push
push
(bad)
stos
add
xor
stos
jp
push
xor
sti
into
in
sahf
pop
loope
sahf
fstp
mov
lods
scas
add
jl
adc
ficomp
jb
bound
xchg
pop
xchg
xlat
addr16
imul
mov
repz
iret
div
inc
push
pop
pusha
cmp
aas
or
pop
ret
jnp
iret
ret
xor
leave
cmp
das
sub
lods
lds
gs
jne
sbb
sbb
or
das
lods
add
scas
cmp
dec
js
das
inc
mov
ds
jnp
add
cs
mov
xlat
inc
fdiv
pop
inc
sub
out
outs
push
sub
loope
push
jns
(bad)
jle
xchg
ins
out
mov
push
jg
sti
rcl
sub
ins
jmp
sbb
mov
and
loopne
mov
mov
cld
xchg
shr
fdivr
cmp
call
stc
sbb
lods
lods
retf
movs
xchg
(bad)
leave
js
jecxz
and
sahf
and
sbb
ins
rcl
mov
sbb
add
adc
xchg
cwde
ret
or
pop
cmp
add
cmps
iret
jno
pop
int3
xchg
das
in
rcr
rol
pop
jmp
das
xchg
add
in
cmp
sti
in
aas
sub
out
mov
cld
add
idiv
cwde
fstp
into
jo
jle
adc
mov
xor
jo
movs
ror
xchg
loopne
bound
rcl
sub
xchg
pop
nop
arpl
mul
in
std
cld
pop
jae
mov
scas
repnz
add
(bad)
iret
mov
mov
cmp
xchg
cmps
outs
push
adc
or
in
xchg
xor
fst
push
mov
jo
or
fwait
jle
push
sbb
aad
fild
pushf
cmp
inc
and
lea
out
int
pop
scas
mov
popa
dec
xchg
mov
jns
sub
sub
adc
test
xchg
sti
push
gs
xor
imul
and
add
push
jae
or
lods
and
jle
hlt
fst
clc
fst
adc
test
fdivr
inc
mov
loop
fincstp
xor
(bad)
or
push
or
loope
cli
sbb
cmp
(bad)
push
pop
pusha
cmp
scas
jbe
(bad)
lea
and
xchg
add
push
inc
jns
add
add
mov
fiadd
mov
dec
xor
and
pusha
(bad)
loope
aad
push
stos
xchg
xor
cmp
neg
mov
pop
stos
mov
jnp
cli
xchg
fld
jmp
xlat
outs
jg
int
das
jno
out
sbb
(bad)
mov
pusha
aas
aad
jp
out
loopne
cld
xor
mov
repnz
pushf
popf
ret
push
jl
shl
add
scas
mov
aaa
and
adc
jmp
jge
adc
mov
fistp
and
ja
jecxz
pop
mov
rcr
scas
add
fnstsw
cld
icebp
iret
xor
hlt
inc
or
jns
sub
das
jecxz
in
jg
add
outs
jl
pop
jmp
in
rcl
aas
mov
dec
inc
add
cmc
pop
xchg
lock
shr
aas
pop
mov
stc
pop
bound
sbb
imul
mul
fmul
nop
xlat
scas
mov
jl
xor
imul
pop
sub
xchg
bound
add
jnp
add
mov
fimul
pop
aad
scas
test
(bad)
cmp
movs
outs
lahf
out
popf
push
add
dec
xchg
xor
ror
arpl
cmp
mov
add
mov
mov
fidiv
dec
lock
add
in
shr
lock
inc
sahf
xchg
sub
cld
fcomp
iret
pusha
(bad)
mov
cs
iret
push
sahf
xlat
ins
retf
xlat
ret
out
mov
clc
arpl
mov
fbstp
inc
xor
pusha
cmp
fs
add
shr
pop
mov
xchg
pop
stc
lock
adc
mov
pusha
clc
add
xchg
sti
xor
jmp
call
pusha
mov
ror
xchg
sbb
loope
repnz
add
inc
and
fsubr
scas
int
enter
cs
xlat
push
xchg
or
adc
pop
out
fnsave
jmp
fld
mov
popa
adc
mov
push
lods
(bad)
xor
xchg
shr
shl
mov
stos
xchg
xor
pop
aaa
sahf
std
add
pop
std
push
xor
or
out
jle
cld
int3
mov
(bad)
jae
jecxz
cmp
dec
repz
(bad)
int3
in
(bad)
pop
inc
sbb
adc
jbe
sub
push
fwait
rcl
test
cs
dec
adc
cdq
jmp
mov
jl
jmp
popa
lock
pushf
fdivr
add
idiv
retf
mov
sbb
and
ficom
add
jnp
sbb
in
mov
dec
out
jge
pop
call
xchg
lds
daa
push
xor
enter
scas
adc
div
cmp
push
inc
add
cwde
fucomi
push
inc
bound
cmp
adc
lock
jge
mov
and
test
bnd
mov
mov
cmp
xor
imul
int
gs
mov
or
jb
cmovbe
xchg
dec
jl
pop
pop
and
out
sub
cmp
cmp
add
and
pushf
inc
and
inc
call
and
cmp
push
add
inc
(bad)
or
sbb
and
cmp
mov
or
mov
out
cmp
push
std
shl
xchg
sbb
mov
stos
adc
fild
mul
test
stos
mov
jg
jmp
sti
and
and
or
ret
fadd
pop
inc
hlt
leave
xchg
bswap
pop
add
mov
outs
push
pop
mov
inc
pusha
jne
enter
push
cli
lods
adc
inc
into
cmp
out
add
xchg
adc
mov
retf
pop
pop
stos
jle
add
test
pop
imul
call
pop
jp
scas
and
cmps
xlat
jo
pop
xchg
sub
shr
icebp
mov
ja
jns
sbb
imul
js
sti
pop
pushf
(bad)
push
pop
pop
dec
adc
mov
mov
pop
shl
or
add
jno
paddd
push
add
and
loope
mov
mov
pop
enter
mov
sub
mov
imul
xchg
add
sub
inc
push
int
nop
sbb
mov
add
(bad)
sbb
dec
nop
pop
mov
pop
test
mov
outs
or
mov
std
and
imul
push
add
ror
xor
xor
push
sub
imul
bnd
add
fsubr
add
mov
or
xchg
arpl
fsubr
push
pop
or
mov
mov
cwde
test
cmp
icebp
inc
mov
lahf
mov
jp
(bad)
int
and
dec
lock
add
and
mov
adc
add
push
adc
inc
mov
enter
rcr
jmp
sti
and
and
stc
nop
mov
inc
ds
sbb
and
loope
pop
mov
mov
inc
xor
outs
xchg
divps
mov
enter
cwde
mov
retf
repz
cmc
jmp
scas
jge
inc
(bad)
push
inc
xchg
and
in
mov
nop
addr16
fisubr
lock
out
add
xchg
scas
shl
jp
jne
ins
cld
cmp
les
mov
iret
mov
(bad)
jmp
movs
push
(bad)
outs
aas
dec
inc
idiv
stc
and
mov
loop
(bad)
pop
enter
xlat
popa
xor
vpsllw
enter
imul
mov
mov
scas
and
(bad)
add
adc
bnd
les
sub
inc
mov
es
dec
je
or
jg
add
and
dec
pop
add
inc
rol
shl
loopne
fild
add
test
push
cwde
fidivr
mov
jae
xchg
into
adc
outs
rcr
add
and
pop
fdiv
retf
and
aad
ror
(bad)
fsubr
inc
xchg
cld
cld
call
clc
mov
and
jge
push
sti
in
jle
ret
dec
mov
cmp
imul
lahf
cmp
out
ret
push
mov
inc
pusha
(bad)
imul
add
xor
jmp
inc
fs
jne
lods
pop
add
bound
push
aaa
and
fadd
and
sub
cs
mov
add
adc
add
cld
mov
in
adc
clc
fldenv
jge
mov
push
ss
mov
loope
test
out
xchg
and
jg
push
out
xchg
mov
lock
imul
stc
jmp
in
scas
push
dec
int3
push
push
push
cmps
scas
loop
xchg
or
stos
and
call
pop
add
inc
pusha
(bad)
pushf
jmp
sbb
adc
and
jae
jle
sbb
fwait
push
xchg
or
inc
jnp
or
(bad)
jle
fiadd
(bad)
and
mov
int
fcmovu
add
in
sbb
push
jl
(bad)
das
jg
pop
das
jle
jmp
mov
mov
inc
daa
(bad)
jle
jecxz
jb
loope
mov
inc
outs
(bad)
clc
iret
cmp
loopne
sahf
adc
xchg
sahf
pushf
(bad)
jmp
jg
cmp
sub
mov
retf
and
cs
xchg
(bad)
push
test
fndisi(8087
jmp
mov
cmp
data16
push
cmp
mov
sub
ins
inc
ret
xchg
rol
sbb
add
repz
mov
jns
fstp
icebp
lock
lods
sub
push
loopne
(bad)
jg
lods
sbb
test
outs
bound
(bad)
loope
and
and
jb
test
sbb
call
test
mov
sti
test
scas
jmp
mov
call
xor
jae
pop
xor
pop
sbb
and
loope
mov
popa
gs
mul
jmp
cmps
stc
jne
cmp
add
xchg
cmp
call
mov
pop
ret
or
mov
mov
shl
aas
dec
sbb
fcom
mov
outs
jnp
add
addr16
add
sub
iret
push
dec
sbb
xchg
push
mov
or
inc
add
lahf
rcr
cmc
inc
shl
cld
xchg
push
add
xchg
aam
pop
iret
cmp
into
div
jmp
jg
rol
fcomp
mov
sbb
popf
jo
jmp
push
pop
jae
pop
pop
and
pusha
mov
or
test
mov
out
xor
sti
xor
inc
std
add
test
mov
inc
sub
sbb
sbb
xor
in
lds
cli
xlat
fstp
and
lock
retf
in
(bad)
push
cmp
cli
xor
das
inc
outs
cmp
jbe
mov
adc
jle
fwait
iret
(bad)
movs
repz
mov
aas
inc
sub
ja
test
mov
clc
lock
inc
imul
mov
in
inc
dec
jnp
adc
imul
pusha
daa
jl
lods
lock
and
sbb
sub
xchg
sahf
pusha
imul
fst
add
and
jnp
shr
pop
sbb
int
pop
add
sti
repnz
pop
cs
out
fbld
clc
and
pop
nop
pavgw
ret
aas
mov
imul
repnz
add
es
stos
repz
add
not
xchg
push
or
xlat
and
in
and
scas
popa
xchg
cld
cmps
mov
sbb
jg
add
and
test
or
mov
or
jg
pop
sbb
sahf
xchg
adc
loope
imul
pop
add
mov
(bad)
dec
or
out
cmp
sub
xor
lods
sbb
hlt
dec
retf
adc
mov
or
rcr
in
add
int
add
add
add
cld
retf
cmp
hlt
cmp
fadd
dec
cmp
fistp
mov
mov
pop
fdivp
lea
leave
mov
xchg
push
iret
(bad)
xchg
fisub
pusha
cmp
cmp
jno
hlt
or
cwde
pop
cmps
pop
jge
mov
mov
(bad)
cmp
mov
mov
test
arpl
add
mov
pop
mov
mov
cmp
inc
lock
nop
clc
mov
pop
push
fwait
loop
movs
mov
jo
dec
xchg
retf
std
xchg
adc
adc
or
add
loop
mov
mov
push
xchg
sub
arpl
cmp
sbb
push
cmp
add
xor
movs
sbb
addr16
mov
sbb
jmp
mov
imul
fcomp
or
add
fldenv
loope
jne
inc
fwait
inc
mov
dec
add
cwde
pop
mov
add
lahf
or
push
jmp
jb
nop
or
out
fdiv
push
nop
inc
ror
cmp
arpl
rol
add
adc
add
imul
fcomp
les
and
add
sbb
sbb
mov
imul
sub
inc
in
inc
shl
adc
xchg
add
in
sbb
scas
das
or
stos
fucomi
adc
pop
push
(bad)
retf
lods
(bad)
cdq
jmp
clc
fyl2x
cmps
(bad)
sub
out
mov
jmp
pop
xor
(bad)
pop
ja
xchg
inc
mov
pmaxsw
ficomp
dec
add
mov
lods
jno
xchg
mov
xor
mov
mul
jge
cwde
aaa
cmc
sub
push
xor
(bad)
adc
pop
sbb
adc
loope
add
out
repz
xchg
or
test
hlt
mov
xchg
xchg
(bad)
mov
jecxz
sbb
mov
mov
or
sbb
and
(bad)
cld
mov
xor
mov
stos
clc
pop
or
and
in
or
jmp
push
out
and
aas
add
les
pop
xchg
loop
stos
jg
rcl
cmps
data16
ror
mov
mov
ds
lods
add
das
cmp
or
ret
mov
mov
(bad)
pop
pop
and
out
rcl
test
cmp
rol
jne
pushf
cmp
fadd
(bad)
fcomp
mov
adc
jecxz
ins
mov
and
in
ret
mov
adc
outs
aaa
bound
sbb
out
sbb
and
fld
mov
mov
cmps
add
push
fld
into
or
pop
fist
xchg
out
adc
cmp
fsin
(bad)
or
pop
lock
(bad)
fwait
scas
add
or
pop
std
sub
sub
jl
test
shr
mov
scas
add
sub
mov
cmp
add
fcmovne
std
jne
mov
xadd
lods
cmp
cli
cmps
fadd
cmp
dec
int3
jmp
cwde
arpl
inc
mov
popa
js
pop
not
add
(bad)
lahf
cmps
jmp
add
addr16
adc
jb
jmp
in
sbb
loope
push
(bad)
mov
adc
aas
test
in
out
clc
inc
hlt
sbb
cdq
and
xlat
push
(bad)
sbb
jg
add
clc
stos
inc
pusha
sub
cld
int
repz
mov
cld
out
or
out
or
out
dec
out
sub
in
aad
add
icebp
xor
xor
nop
(bad)
mov
shl
pop
cmp
lea
add
jns
(bad)
fisubr
(bad)
movs
cld
ror
cs
push
sbb
and
(bad)
fst
and
jb
loope
rcl
cmps
cs
int3
push
mov
test
dec
mov
and
or
or
(bad)
dec
pop
and
mov
add
cs
and
push
mov
in
add
add
xchg
vshufpd
ret
jno
push
faddp
ret
daa
pop
loope
sub
call
iret
jmp
mov
push
je
addr16
sar
(bad)
rcr
arpl
in
pop
test
sbb
iret
and
iret
adc
mov
jle
mov
add
cmp
(bad)
xchg
and
pop
xor
loop
test
mov
adc
jmp
test
push
lods
das
enter
imul
test
adc
inc
mov
mov
enter
ret
iret
adc
idiv
cli
mov
clc
pop
jp
mov
mov
lahf
mov
sti
dec
dec
cs
and
shl
outs
push
pop
cmp
(bad)
adc
pop
std
jecxz
adc
scas
mov
fst
outs
or
jle
xor
clc
arpl
shl
and
mov
das
sub
add
sbb
leave
xchg
out
arpl
popf
in
(bad)
out
outs
jge
jno
add
aas
into
aas
and
fidiv
add
lds
add
adc
jae
jg
adc
mov
out
cmps
xlat
jmp
and
mov
adc
sbb
aam
dec
dec
add
push
neg
arpl
scas
sub
add
js
jnp
adc
push
call
pop
and
sar
push
ins
push
cmc
iret
push
inc
xor
retf
jmp
pop
ret
mov
and
add
and
inc
iret
and
lods
gs
cld
inc
mov
cmp
mov
add
call
xrelease
test
sbb
mov
mov
mov
(bad)
shl
sub
mov
and
mov
lock
(bad)
sbb
pop
or
or
stos
test
ds
and
iret
out
add
dec
aas
clc
and
rcr
fld
call
mov
mov
or
mov
jle
xor
push
jle
outs
sub
inc
lahf
dec
cmc
outs
cmp
or
pop
js
repz
xor
adc
sub
add
aad
cmps
fbld
mov
cmps
sti
sti
nop
imul
stc
out
fdiv
loopne
cmp
xor
sbb
in
adc
fstp
(bad)
(bad)
fdiv
sbb
mov
dec
mov
clc
sbb
iret
mov
std
movs
idiv
test
mov
iret
jne
loope
std
out
cmp
mov
jle
fcmovnbe
cdq
sub
sti
lock
loop
mov
or
and
mov
jo
mov
jmp
icebp
es
or
push
pusha
retf
sub
std
call
push
stc
jp
or
out
push
add
idiv
cmp
or
mov
(bad)
push
fadd
int3
cmc
xor
cmp
adc
dec
into
icebp
enter
or
and
cwde
adc
push
pop
mov
adc
pushf
jecxz
std
pop
sar
inc
push
or
mov
daa
fsub
stos
js
sbb
shr
mov
(bad)
hlt
cmp
cld
aaa
and
es
in
inc
inc
ret
call
inc
shr
sbb
inc
add
sbb
sbb
jnp
dec
sub
xor
(bad)
loop
loope
outs
call
(bad)
ret
or
fistp
ror
mov
fiadd
sub
cmp
or
jmp
inc
push
mov
dec
stc
mov
fiadd
inc
out
cld
jno
add
cli
sub
aas
xchg
xlat
cmp
cld
xor
mov
fbstp
push
or
xchg
aam
pop
iret
cmp
xor
push
xor
jl
ror
mov
adc
cs
mov
lods
retf
loope
pop
or
out
(bad)
push
jae
nop
pop
cmc
push
sahf
test
(bad)
add
retf
adc
cwde
dec
push
add
pop
add
loope
inc
mov
imul
mov
xchg
inc
jl
lods
or
imul
cld
fisub
mov
call
(bad)
jg
in
(bad)
dec
out
cmp
add
std
or
out
std
adc
mov
(bad)
out
(bad)
iret
mov
call
(bad)
dec
mov
xchg
(bad)
inc
dec
add
das
add
adc
inc
int3
je
pusha
mov
scas
bound
dec
cwde
in
ins
(bad)
sbb
inc
dec
jbe
and
fimul
(bad)
xor
pusha
ins
in
pop
(bad)
dec
mov
lock
jle
sti
or
push
jg
popf
mov
out
leave
(bad)
pop
fidivr
cmc
ret
xchg
fdivr
test
jmp
inc
push
fwait
push
call
addr16
jle
sar
add
(bad)
in
test
daa
mov
lods
loope
ror
push
add
int3
lods
loopne
mov
jnp
sub
ins
jnp
adc
mov
push
je
imul
adc
sub
stos
or
iret
jp
sbb
jmp
adc
(bad)
out
dec
aaa
shl
xchg
jg
add
fs
and
addr16
mov
fcmovne
pop
imul
retf
(bad)
fwait
push
std
push
add
cmps
fst
jbe
bound
mov
sub
adc
or
in
clc
xor
push
cmp
div
mov
stos
ins
scas
mov
out
dec
adc
fld
enter
scas
add
fwait
pop
adc
nop
and
adc
out
xchg
pop
jg
jmp
std
push
push
pop
pusha
cmp
push
or
cmp
cdq
cld
xor
pop
xor
cld
mov
or
pop
xor
inc
adc
jne
lods
in
add
icebp
jp
push
dec
arpl
dec
ret
add
scas
mov
daa
bound
sbb
jnp
inc
fucomp
sub
adc
mov
(bad)
mov
jno
les
in
call
enter
(bad)
(bad)
mov
ds
and
jl
lahf
cmp
inc
pop
jg
pop
fdivr
aaa
fdivr
imul
rcl
dec
hlt
push
mov
out
xor
dec
jnp
dec
dec
ins
dec
pop
jno
pusha
stos
mov
test
cli
adc
jo
jmp
add
xor
cli
xor
(bad)
stc
daa
cmp
movs
add
cmp
lea
fdivr
fwait
push
fistp
stos
jmp
repnz
data16
data16
or
mov
ja
xor
sti
clc
xlat
fdivr
jge
enter
and
aad
mov
stc
and
cld
dec
imul
push
shl
ror
adc
add
mov
xchg
popa
and
sbb
inc
cmp
pop
cmp
(bad)
cmps
add
out
xor
sbb
(bad)
(bad)
add
out
or
rcr
and
shl
inc
jbe
pop
lock
jo
cs
adc
in
or
jg
add
xor
inc
cdq
xor
sub
mov
mov
fidivr
or
xchg
ret
test
pop
fs
jmp
add
mov
cdq
cmp
cmps
(bad)
fbstp
and
xchg
cwde
(bad)
aam
pop
iret
cmp
imul
and
scas
scas
rcl
rol
popa
loopne
add
repz
adc
lods
rcl
ins
les
call
add
add
mul
iret
adc
jnp
pop
pop
fcmovu
cmp
movs
aad
neg
mov
aad
jmp
mul
dec
cmp
inc
add
loop
cmp
(bad)
daa
jg
jecxz
inc
clc
lods
mov
std
dec
add
(bad)
adc
(bad)
jecxz
jg
add
sub
rcr
pop
loope
leave
adc
push
nop
push
je
mov
add
hlt
aad
xor
(bad)
movs
mov
sub
mov
jae
es
pop
aaa
(bad)
fld
cmp
inc
es
pop
vpsubd
mov
pop
mov
xchg
sub
aaa
setg
(bad)
pop
xchg
outs
jge
ret
rcr
mov
pushf
aas
std
sub
or
jmp
test
scas
ror
aas
ror
push
add
and
repz
add
jae
add
cmp
push
mov
mov
jne
push
(bad)
ds
add
outs
cmp
or
jle
add
stos
jg
cmp
stos
push
and
xor
ror
rcl
add
std
push
stc
cli
add
and
aaa
xor
mov
dec
pop
ja
test
inc
out
jne
add
add
int3
not
cdq
mov
retf
or
jle
push
add
pushf
shl
mov
inc
ja
or
sahf
jp
icebp
or
jle
or
xor
inc
loope
sbb
pop
xor
dec
ds
push
icebp
add
fist
add
and
shr
stc
pusha
scas
jl
repz
(bad)
push
or
cmp
push
add
xor
and
mov
mov
scas
or
jmp
mov
mov
fmul
movs
mov
aas
stc
mov
stc
movs
ins
in
pop
ffreep
ffree
pop
loope
retf
pop
loop
inc
lods
mov
mov
jne
xchg
inc
stos
(bad)
adc
(bad)
sbb
call
adc
fdivr
pop
ins
or
in
xchg
mov
jno
cli
inc
sbb
in
arpl
cmp
in
lods
mov
sub
addr16
(bad)
pop
rcl
mov
sub
scas
jl
push
push
daa
cmps
pop
add
push
ds
ret
sub
push
add
jecxz
pushf
fdivrp
inc
jae
out
mov
std
mov
xor
out
arpl
in
xor
pop
jb
dec
sbb
inc
xlat
in
cmp
in
sub
pop
cld
inc
repz
imul
out
sub
fist
in
jle
daa
jl
retf
dec
mov
retf
int
or
ror
sar
outs
add
test
push
jb
cmp
rcr
stc
add
cld
push
stc
(bad)
test
lahf
dec
sub
dec
loope
add
cdq
sbb
adc
push
mov
dec
mov
push
add
retf
mul
jmp
add
sub
fldenv
sbb
jge
cmp
jl
scas
idiv
mov
bound
int
repz
call
(bad)
fnstsw
fwait
adc
cmp
cli
sbb
cmp
jne
(bad)
repz
push
lock
inc
ss
xchg
fwait
push
or
mov
addr16
mov
mov
push
add
push
cwde
pushf
(bad)
iret
xlat
and
sbb
mov
inc
jno
jb
push
cmc
adc
push
jle
sti
iret
fnstenv
in
cmp
xor
inc
js
lds
add
push
jg
popf
inc
mov
sub
aas
xchg
(bad)
push
cmp
pop
pushf
cmp
mov
vpshuflw
div
dec
jno
jge
jmp
and
mov
adc
xlat
and
fnstenv
imul
mov
mov
les
in
cld
xor
xchg
mov
cli
mov
shl
inc
add
jmp
jmp
mov
adc
(bad)
lahf
popa
repz
adc
es
jo
push
sbb
and
(bad)
push
xor
mov
sti
addr16
pcmpeqw
(bad)
pop
add
inc
imul
adc
dec
or
scas
mov
stc
ds
xor
adc
in
mov
es
jmp
(bad)
push
inc
cmp
aas
jle
add
aad
stc
pop
adc
out
test
mov
mov
push
scas
add
xchg
pop
gs
call
call
sub
mov
lea
(bad)
inc
sbb
out
dec
and
in
jae
or
aaa
pushf
int3
scas
jns
stos
mov
push
in
mov
div
xchg
and
(bad)
fbstp
and
push
add
pop
test
mov
ja
out
ins
std
inc
add
or
adc
pusha
and
push
inc
sbb
(bad)
sti
xchg
sub
push
add
(bad)
xor
in
adc
cld
mov
xor
pusha
lds
mov
fisttp
fsub
mov
sub
fdivr
sbb
ds
push
sub
out
jge
cmp
(bad)
fisttp
sub
cld
fwait
push
imul
jg
pop
add
ret
jmp
push
repnz
fdivr
push
cmps
(bad)
jg
pop
lahf
call
fstp
ja
sub
(bad)
(bad)
jp
test
or
sub
jae
rcr
outs
es
jno
fwait
ret
sbb
rcl
push
or
arpl
shufps
or
into
aas
(bad)
mov
data16
aaa
ds
add
dec
ds
das
jno
idiv
inc
and
jg
add
mov
std
add
jge
jae
dec
(bad)
xor
inc
add
lods
add
mov
aad
arpl
mov
retf
adc
rcl
jg
inc
shr
ret
ins
jmp
inc
fucomp
popf
sbb
dec
out
pop
and
je
clc
jmp
call
imul
sub
and
add
dec
mov
jo
iret
add
out
or
pop
push
std
push
mov
mov
cmc
addr16
mov
add
repz
lock
mov
dec
ret
int3
fldcw
sub
mov
xchg
cmps
or
(bad)
lock
into
lock
cmp
pop
leave
cld
adc
div
xchg
push
jmp
pop
cmp
mov
aam
pop
iret
cmp
shl
iret
les
adc
pushf
or
sbb
pop
in
mov
retf
stos
retf
ficom
je
adc
and
add
int
cli
xchg
out
pop
in
ret
xchg
cmps
push
lods
in
mov
loopne
(bad)
mov
lock
in
pop
cmp
cld
cmp
sub
add
retf
call
cmps
add
lahf
lock
mov
fucomip
nop
imul
jb
cmpxchg
dec
test
into
xchg
dec
adc
lods
in
and
fdivr
pop
push
adc
scas
pusha
ret
fisttp
mov
sub
push
mov
mov
adc
jecxz
clc
or
sar
jbe
push
jo
jmp
into
outs
jl
lock
addr16
aam
clc
dec
adc
repz
in
(bad)
add
cmps
push
add
jb
pop
adc
call
cli
ret
pop
loopne
shl
or
js
push
fdivr
dec
into
(bad)
adc
ret
mov
add
jns
mov
pop
add
inc
or
retf
or
cmp
je
mov
ins
lods
push
add
aas
adc
add
pop
xchg
test
xchg
scas
jecxz
(bad)
ss
scas
(bad)
jae
popf
adc
adc
add
sub
add
adc
add
jb
add
add
jg
js
hlt
in
stos
xchg
pop
call
push
jns
sub
push
jge
test
addps
lods
or
sbb
cmp
jne
(bad)
repz
mov
mov
mov
inc
mov
lods
jb
retf
pop
popf
ins
cmp
je
mov
fstp
jp
test
cwde
mov
aas
adc
(bad)
push
pop
stc
mov
retf
clc
(bad)
push
push
repnz
add
movq
lods
mov
push
sub
inc
and
lea
es
sub
mov
xchg
pop
xor
(bad)
rcr
adc
fdivr
sbb
push
jg
xchg
jle
aad
add
(bad)
cmps
jg
popf
push
jg
int
inc
cmp
cli
inc
mov
in
js
jmp
pop
out
mov
dec
mov
jg
pop
cmp
clc
mov
pop
aas
lds
stos
lds
outs
ins
lods
pusha
jno
mov
push
sbb
aas
rol
je
sti
mov
sub
sbb
cmc
punpcklwd
sbb
mov
(bad)
iret
loope
add
in
ret
mov
add
pop
or
dec
adc
mov
popa
xchg
ret
ror
cli
clc
(bad)
js
jmp
iret
xor
pop
add
out
sbb
mov
inc
add
adc
push
or
pop
jae
sbb
call
add
fnsave
or
outs
shl
mov
add
bound
es
outs
jecxz
push
popf
push
xor
mov
xor
xor
in
ret
sub
(bad)
mov
pop
ficom
pop
push
inc
into
or
xchg
out
fstp
push
xor
push
add
enter
add
cmp
ss
lock
in
nop
(bad)
fwait
cwde
fstp
int
jns
and
and
daa
mov
pop
add
xor
stc
int3
adc
clc
push
repnz
out
ds
xchg
rcr
jbe
shl
repnz
scas
rol
jl
aad
dec
int3
xlat
outs
or
or
or
rcl
cli
sbb
cmp
jne
(bad)
repz
fidivr
leave
xchg
xchg
pop
rol
repz
inc
lock
jne
scas
inc
push
scas
or
xchg
mov
add
or
repnz
push
inc
sti
adc
syscall
mov
cmp
pushf
or
mov
imul
out
fdivr
sbb
push
mov
cli
lods
out
xchg
sti
loopne
aas
loop
out
ret
(bad)
lods
ins
pusha
push
jge
aas
icebp
in
call
or
mov
sbb
icebp
hlt
mov
push
pop
sub
pop
fdivr
fst
adc
jecxz
gs
dec
mov
dec
neg
mov
mov
cmp
jo
mov
or
arpl
pop
push
or
cmp
mov
or
cli
test
popa
adc
sar
outs
jg
jmp
jg
sub
xlat
mov
(bad)
ins
popf
jg
xchg
mov
std
mov
(bad)
cdq
xor
icebp
xlat
pop
fdivr
add
cmp
stos
inc
cdq
jge
(bad)
iret
repnz
adc
adc
and
fld
fmul
dec
xchg
adc
add
sub
in
in
mov
mov
mov
icebp
stos
(bad)
lahf
add
arpl
mov
sbb
aad
pop
xor
add
pusha
rol
mov
nop
jae
mov
jno
fsubr
and
mov
add
adc
icebp
(bad)
jae
or
in
jbe
xchg
loope
dec
jle
scas
push
add
mov
xchg
shr
mov
aad
push
(bad)
jle
jle
retf
fdivp
add
addr16
mov
popa
cmc
aam
pop
mul
loop
test
and
movs
add
fldcw
add
dec
xor
imul
and
outs
mov
adc
out
add
sbb
and
cmp
cmp
jge
jns
test
aad
mov
and
xlat
call
loopne
mov
pop
loop
shl
repnz
or
sti
pop
dec
(bad)
mov
cmc
out
js
cmc
pop
lock
jg
add
clc
in
loop
cmps
jmp
fcomip
fnstenv
cli
jg
cmp
mov
fidiv
out
cmp
cld
cli
dec
and
xor
shl
dec
loopne
ss
aad
add
(bad)
enter
inc
popf
fmul
xor
daa
shr
sbb
es
adc
jecxz
inc
add
out
icebp
or
cmps
jno
jg
(bad)
add
sbb
sub
ja
out
cmp
jge
loopne
cmp
retf
jns
retf
add
test
fdivrp
adc
iret
jle
fstp
jnp
and
jp
push
add
(bad)
mov
scas
push
or
add
add
mov
jmp
xor
push
xor
dec
adc
je
pop
push
retf
jmp
xor
jmp
dec
cmp
stos
add
stos
adc
stos
out
fiadd
enter
fdiv
mov
add
mov
jge
mov
(bad)
ins
add
jge
mov
sbb
add
xchg
sbb
push
scas
xchg
add
int3
cs
mov
jbe
fstp
loope
xor
pushf
sub
retf
fcom
jmp
iret
pop
int3
ror
(bad)
fmul
fxch
fwait
cwde
lds
test
addr16
push
jmp
pop
cmp
pusha
stos
add
aas
in
xchg
ds
in
std
jg
pushf
outs
dec
cmps
ret
movs
jmp
fidiv
lock
jbe
xchg
or
mov
fisub
int
sbb
xor
pushf
sub
fild
test
sbb
dec
sahf
repz
int
xchg
push
pop
adc
sbb
mov
cld
jge
jmp
mov
dec
pop
adc
add
std
loop
js
stc
inc
shr
call
std
cld
jg
adc
sub
mov
gs
fnstenv
mov
lods
jmp
repz
inc
xchg
(bad)
(bad)
arpl
sbb
pop
xchg
mov
jne
and
(bad)
or
dec
or
adc
popf
adc
pop
dec
inc
xchg
cmc
cmp
fistp
jmp
jb
or
repnz
cmp
push
xor
aas
ror
and
xor
push
add
(bad)
idiv
popf
repz
mov
clc
adc
ja
mov
xlat
in
push
jge
pop
das
jg
inc
mov
mov
sub
inc
mov
mov
pop
mov
lock
push
push
ffreep
push
mov
dec
dec
xchg
xchg
push
add
gs
or
cmp
dec
cld
mov
pop
or
dec
in
mov
fsub
ja
mov
push
loopne
dec
add
push
mov
mov
rcr
sub
jmp
add
xor
push
inc
push
or
inc
mov
aad
pusha
jne
int
inc
(bad)
pop
add
repz
retf
fcmovne
sub
and
xchg
pop
add
faddp
jbe
pop
push
mov
push
or
stos
outs
mov
inc
loopne
stc
mov
push
fisubr
mov
test
mov
mov
ja
inc
scas
shl
mov
hlt
mov
sub
adc
add
repnz
pop
pop
or
mov
jb
scas
mov
pop
pop
clc
xor
xchg
sbb
repz
mov
or
or
(bad)
cmp
ret
sti
sub
sti
push
add
add
jbe
mov
dec
add
xchg
mov
jns
cmp
jle
das
mov
cli
outs
js
stc
pop
icebp
clc
mov
jecxz
xchg
cmp
cld
adc
(bad)
aas
js
aad
pop
iret
mov
rcl
mov
repz
adc
push
imul
xchg
outs
and
inc
xor
adc
mov
xchg
ret
lea
aas
rcr
push
xor
jmp
sti
xor
mov
inc
sub
cld
sub
ret
mov
mov
(bad)
repz
pop
mov
fcomp
jg
adc
ins
pusha
cmp
nop
clc
mov
jae
stos
mov
fs
nop
add
pop
(bad)
std
scas
icebp
clc
repz
loopne
(bad)
aas
js
fldcw
push
lods
add
xlat
aas
cmps
int
das
xchg
jno
sbb
std
jbe
jge
mov
ror
pop
dec
add
imul
sub
loop
scas
and
repz
aas
xchg
push
fyl2x
(bad)
fsub
ja
mov
sbb
sub
out
xor
adc
cmp
add
(bad)
gs
int3
scas
push
jmp
push
add
adc
stos
imul
push
sbb
mov
sub
data16
xor
movs
sub
stc
jge
lods
pop
test
push
or
push
cld
dec
test
les
outs
das
lahf
aaa
rcr
dec
out
dec
add
add
jp
push
mov
add
add
iret
(bad)
call
pusha
cmp
dec
pop
mov
rol
dec
mov
js
icebp
sub
lods
mov
cmp
mov
adc
sbb
jg
aaa
retf
mov
pop
stos
jle
cld
adc
das
push
add
cmp
cmc
add
cmc
mul
jge
adc
or
sbb
out
cmp
icebp
push
jl
call
or
inc
pop
jg
ins
adc
adc
aas
pop
add
fbstp
lds
aad
(bad)
mov
jle
in
mov
jecxz
les
bound
cmp
dec
xchg
dec
cmp
daa
mov
sbb
push
div
xor
ret
jno
sbb
sbb
mov
cdq
sar
in
call
pop
and
sub
cmp
movs
lds
sub
out
std
pop
in
fucomp
adc
push
fs
nop
push
push
sub
add
mov
and
cmp
xchg
daa
je
push
jecxz
jbe
iret
mov
push
mov
xchg
(bad)
in
div
not
std
out
mov
fisubr
in
xchg
dec
movs
adc
jns
ficom
js
lods
mov
xor
adc
add
ret
adc
rol
add
mov
and
jecxz
xor
xchg
out
sar
and
(bad)
mov
jg
push
int3
cmp
xor
cld
adc
mov
cs
mov
or
(bad)
sbb
fcom
add
rcl
fs
jmp
cli
mov
dec
add
loop
pop
(bad)
fmul
shr
xchg
add
mov
nop
mov
add
js
or
or
out
es
sub
sub
add
add
ins
loopne
add
or
xchg
or
fbld
push
sub
je
add
mov
iret
mov
cli
or
xor
fadd
je
ds
cli
int3
jne
mov
cmp
adc
call
inc
clc
and
mov
pop
dec
adc
adc
adc
add
imul
add
mov
scas
enter
jge
push
pop
xchg
jno
adc
pusha
and
sub
(bad)
aad
add
stc
ret
cmp
int3
sti
push
inc
mov
dec
add
aaa
jno
je
shl
push
movs
cmps
and
test
mov
icebp
cmp
sub
and
aaa
gs
aam
xchg
mov
fsub
dec
int
inc
mov
jno
shl
(bad)
out
mov
xchg
and
ror
int3
add
(bad)
push
mov
sti
adc
(bad)
das
xchg
add
or
clc
call
lahf
sub
(bad)
ficomp
push
jnp
add
mov
aam
sbb
cmps
or
jmp
xchg
xchg
inc
lods
test
cmps
pop
ja
aad
(bad)
push
or
sub
sbb
es
repnz
addr16
jno
cmc
add
dec
and
inc
or
inc
(bad)
adc
cmp
repz
cld
mov
add
or
stc
add
test
iret
pop
movs
repz
fbld
scas
movs
xchg
in
mov
pop
loopne
cld
sbb
inc
add
jg
loop
add
js
iret
jge
rcr
das
leave
xchg
aas
push
xchg
aas
sub
mov
adc
out
popa
inc
or
fbld
xchg
aas
sub
repnz
repnz
adc
or
pop
or
pop
aaa
scas
fcmovne
fist
fcom
iret
add
adc
pop
rcr
dec
mov
dec
dec
mov
add
mov
repnz
mov
push
repz
cmp
add
pop
and
inc
add
dec
cmc
push
pop
imul
jl
add
pop
dec
mov
mov
popf
addr16
mov
pop
pop
int3
jne
mov
adc
push
out
pop
add
push
push
xchg
ds
add
pop
call
mov
pop
sub
add
add
imul
in
ret
mov
pop
aaa
mov
data16
loope
push
out
rol
xchg
push
mov
push
jo
repnz
xchg
rcr
test
aaa
(bad)
call
adc
arpl
xchg
jmp
cmp
mov
cmps
movs
inc
div
test
test
sar
or
rcr
(bad)
sub
jl
push
das
into
mov
sub
xchg
test
sbb
jg
xchg
out
sar
std
scas
imul
sub
inc
xchg
mov
repnz
mov
fidiv
lock
call
int3
jg
aaa
ds
xchg
inc
addr16
shr
out
cmps
jae
sbb
aad
and
xor
data16
xor
mov
addr16
mov
adc
xor
push
sbb
push
int
aam
xchg
inc
ret
(bad)
retf
call
cmc
icebp
int
imul
mov
test
lahf
mov
mov
and
sbb
call
mov
dec
fdivr
and
stos
cmp
arpl
mov
inc
jmp
cmp
jno
push
inc
enter
pop
xchg
inc
sub
les
ins
mov
repnz
cld
pop
stos
sbb
pop
mov
dec
add
mov
inc
cmp
cld
push
fisttp
(bad)
pop
repnz
xchg
clc
and
loopne
pusha
push
pushf
rcl
adc
dec
cld
cmp
pop
out
adc
stc
repz
scas
add
imul
cmp
dec
nop
fistp
adc
add
add
pop
push
leave
pop
add
push
(bad)
cmps
in
xor
inc
sub
mov
and
(bad)
repnz
jb
pushf
dec
or
rcr
adc
call
jecxz
inc
iret
nop
aas
push
clc
dec
add
das
mov
adc
pop
add
adc
adc
xchg
pop
push
sar
jle
dec
add
or
adc
mov
inc
or
mov
repz
mov
jne
loope
and
and
and
js
push
jo
shl
xchg
neg
cld
ret
fdiv
adc
rsqrtps
retf
pop
push
fbstp
xchg
mov
lock
dec
dec
cmps
mov
out
imul
or
mov
mov
add
pusha
mov
dec
push
sbb
or
push
pop
pop
call
pop
das
mov
into
mov
movs
jae
ds
xchg
mov
in
mov
ror
jnp
movsx
les
popa
and
push
je
shr
cmps
xor
repz
out
rol
add
add
cmp
aam
mov
mov
push
xor
lds
in
ins
push
mov
sbb
mov
push
shl
fs
ins
cmp
test
xor
rol
popf
aas
aaa
scas
jp
test
arpl
adc
xor
push
jmp
mov
cmp
daa
adc
shl
shl
and
pop
mov
cmc
or
cmp
(bad)
retf
sub
loopne
jb
in
mov
pop
enter
fsubr
sub
adc
sbb
mov
popf
mov
call
sbb
jb
dec
addr16
(bad)
mov
inc
les
mov
and
mov
bound
sbb
mov
aas
adc
push
adc
pop
sbb
cld
pop
and
or
mov
jne
mov
cmp
into
(bad)
repnz
nop
dec
enter
sub
into
cmc
loopne
or
sbb
cmps
and
cmp
cwde
inc
adc
sar
loopne
jb
adc
add
test
je
mov
sbb
add
xchg
cmps
test
mov
(bad)
(bad)
out
push
data16
or
inc
ror
mov
cmc
or
cld
popa
push
pusha
aas
push
mov
ins
mov
(bad)
in
or
test
lock
shl
call
push
icebp
pop
add
popf
out
nop
inc
inc
dec
mov
loop
dec
popf
pop
test
sar
sbb
icebp
mov
mov
ds
(bad)
nop
xor
stc
dec
js
outs
mov
pop
inc
jo
cmp
inc
or
(bad)
nop
push
jo
push
add
and
xchg
mov
(bad)
cmps
inc
add
sbb
repz
das
xor
cmp
inc
xor
sub
out
out
test
mov
ja
outs
jbe
inc
enter
test
je
pusha
fcomp
add
or
xor
adc
(bad)
adc
pushf
pop
adc
dec
mov
pop
retf
push
gs
adc
imul
rcl
int
push
popf
js
sub
xlat
lahf
stos
push
adc
into
xchg
je
cmp
sbb
loopne
ja
sbb
inc
js
movs
xor
out
dec
fistp
out
xchg
inc
inc
cmps
push
in
mov
iret
retf
cwde
sub
fild
sub
sbb
or
aam
stos
pandn
rcl
adc
adc
jmp
movs
inc
push
jns
push
stos
retf
dec
mov
cmc
in
inc
sbb
mov
push
jb
jmp
mov
xchg
test
ja
cli
cmp
inc
jp
sub
or
div
div
call
pop
add
out
cmc
cwde
into
repz
shr
dec
cmp
fist
(bad)
jmp
inc
inc
dec
cld
sub
lods
pusha
aam
inc
test
add
mov
dec
and
inc
xchg
push
add
add
dec
or
into
lods
pop
or
and
cmp
dec
(bad)
(bad)
adc
add
mov
sbb
xor
sub
jo
stos
sbb
inc
icebp
addr16
pop
mov
sub
test
pop
enter
adc
add
sbb
fs
add
jg
add
adc
loopne
mov
dec
add
icebp
add
mov
mov
aam
inc
daa
or
xchg
inc
add
sub
add
xchg
or
adc
mov
add
adc
or
rol
mov
(bad)
sbb
adc
inc
jns
lds
pop
movs
cwde
movs
pop
or
inc
(bad)
add
cwde
mov
mov
into
fwait
add
dec
mov
mov
(bad)
fnsave
jae
out
cmp
shl
mov
popf
mov
mov
adc
popf
scas
call
retf
push
idiv
and
xchg
out
mov
fdivrp
and
je
sub
cli
fisttp
mov
sub
xchg
call
mov
into
and
ins
aam
imul
daa
mov
xor
cwde
push
inc
out
cmps
es
xor
xlat
push
push
lea
enter
cmp
ins
xchg
cs
jecxz
and
push
push
xlat
gs
outs
lahf
mov
or
loope
pop
adc
(bad)
and
adc
(bad)
pop
jg
adc
or
out
mov
mov
es
push
test
out
add
push
inc
fs
icebp
pop
call
push
out
sbb
cmp
or
adc
xchg
hlt
sub
loop
mov
mov
jnp
sub
lds
mov
cmps
add
rol
test
movs
jne
xor
std
in
pop
inc
add
pop
xor
(bad)
in
jae
xor
or
repz
push
and
dec
pusha
inc
fisub
pop
adc
or
sbb
mov
iret
add
test
loop
adc
inc
push
or
lock
mov
in
popa
sbb
or
xor
cli
and
in
push
inc
fdiv
push
xchg
or
adc
mov
fld
or
push
ins
ss
lahf
pop
(bad)
movs
out
movs
mov
out
mov
mov
test
sti
xchg
add
and
enter
scas
and
cs
sub
adc
aaa
and
inc
inc
add
and
sub
sub
mov
loop
and
fdivr
xchg
out
ds
xor
movs
xchg
stc
(bad)
je
fisub
cmp
les
adc
neg
ja
or
mov
xlat
out
jge
(bad)
lock
das
jmp
jmp
clc
out
dec
call
test
jmp
int3
enter
xchg
push
ja
popf
mov
stos
fstp
movs
mov
not
js
jno
jnp
adc
in
sub
push
lea
push
inc
mov
add
loope
je
je
(bad)
daa
sbb
rcl
(bad)
aaa
dec
daa
mov
adc
lods
inc
aam
dec
and
jnp
push
aaa
sahf
shl
sub
test
loopne
ja
addr16
ret
bound
or
mov
inc
fs
cs
and
sbb
xchg
inc
sub
into
mov
add
jne
(bad)
push
mov
push
push
aas
(bad)
mov
lds
inc
sub
les
scas
add
xchg
aam
in
pop
push
add
push
loop
adc
sbb
adc
call
inc
adc
add
adc
js
in
movs
call
mov
sbb
xchg
cld
loope
add
cmps
xchg
add
add
mov
and
inc
(bad)
fisubr
bnd
add
pop
push
cmp
sub
or
add
jmp
mov
ins
and
or
or
inc
popa
dec
nop
call
fwait
xchg
inc
inc
add
mov
call
sub
ins
sbb
push
and
or
pop
pop
pop
inc
mov
jl
mov
and
add
loope
clc
imul
(bad)
es
mov
cmp
inc
add
push
xor
xchg
push
sbb
add
movs
mov
aam
fwait
mov
xchg
cs
mov
pop
sti
pushf
outs
cmps
stos
idiv
add
sub
loopne
repz
aad
mov
out
xor
jmp
aad
clc
fisubr
push
mov
aas
jo
sub
shr
bound
lds
push
in
fadd
sub
xor
jp
cmps
jmp
jmp
(bad)
pop
mov
lahf
loope
stos
je
sbb
inc
mov
ret
adc
push
inc
push
iret
movnti
inc
add
cmp
mov
inc
add
add
cmp
dec
aaa
aas
push
add
rol
movs
add
fld
sub
pop
mov
xlat
call
dec
sbb
add
inc
lods
adc
(bad)
push
sbb
je
add
popf
imul
and
adc
push
test
or
retf
pop
jl
call
mov
mov
add
mov
inc
adc
and
popf
inc
push
adc
push
jno
pop
aad
or
sbb
hlt
add
jg
repnz
push
test
add
add
sbb
xor
sahf
and
mov
aas
adc
idiv
and
aaa
adc
ins
inc
or
xchg
add
das
xchg
shl
fdivr
dec
sbb
xchg
aas
add
push
push
inc
push
sar
cmp
xor
sahf
outs
mov
mov
and
out
push
add
ud0
adc
(bad)
stc
and
cdq
mov
mov
mul
sub
mov
inc
add
push
adc
adc
or
enter
lahf
rcr
mov
das
jmp
or
ret
mov
(bad)
outs
fdivr
sub
in
shr
mov
mov
inc
push
arpl
popf
cmp
sbb
jb
xor
out
adc
lods
imul
es
fist
mov
sub
sub
push
pop
inc
addr16
push
jmp
pop
cmp
not
xchg
repz
xor
jle
into
(bad)
fsub
inc
movs
movnti
adc
adc
cmp
adc
push
ret
mov
jmp
pop
mov
int3
shl
je
adc
mov
mov
imul
dec
outs
sub
mov
mov
nop
aas
push
cs
in
or
inc
inc
jb
add
pop
mov
and
lahf
shl
add
in
imul
inc
(bad)
mov
add
mov
pushf
(bad)
call
mov
hlt
add
push
push
addr16
imul
add
xchg
add
adc
mov
jo
int
hlt
dec
add
adc
(bad)
fcomi
cmp
test
sbb
ret
ss
(bad)
popa
adc
sub
and
movs
sub
or
pop
or
add
hlt
data16
jp
cmps
mov
mov
es
sub
sub
xchg
inc
sub
loope
loop
aaa
retf
sbb
mov
pop
sbb
cmovae
cmps
jp
dec
arpl
hlt
mov
mov
add
sar
test
mov
push
popf
inc
push
jne
xor
jns
or
push
movs
jmp
mov
mov
mov
call
test
dec
add
jmp
std
das
xchg
add
mov
add
ja
cli
pop
int
sbb
sbb
xchg
call
mov
aam
xor
xchg
sbb
daa
shl
jae
push
mov
out
movs
mov
dec
aad
mov
jg
push
out
retf
mov
stos
das
cmps
or
retf
test
enter
ret
jge
cmp
mov
xor
inc
push
mov
loope
popf
jmp
repnz
loopne
jne
mov
or
fistp
mov
sahf
jle
inc
scas
jle
shr
xor
adc
das
test
sub
addr16
or
cmp
je
cmp
pop
add
cmp
gs
jl
xor
fild
adc
hlt
jmp
xor
cli
adc
push
sbb
or
rcr
or
lahf
cmp
adc
out
pushf
and
leave
pop
and
add
mov
push
and
lahf
arpl
inc
cmps
imul
sub
aad
inc
loope
add
pop
dec
pop
repz
stos
jnp
ror
movs
mov
jo
call
call
bound
in
arpl
inc
sbb
aam
in
movs
sub
call
add
sub
add
push
fbstp
jne
cmp
pop
inc
daa
jl
rol
test
js
fiadd
mov
or
jb
int3
pop
sub
mov
cdq
test
loop
xchg
inc
push
icebp
jmp
in
aaa
dec
cli
push
add
pop
and
add
cmp
or
popf
mov
push
shr
in
ret
test
inc
ret
xchg
pop
cmps
(bad)
push
push
iret
pop
adc
sahf
mov
xchg
icebp
jnp
fidiv
xor
xchg
mov
int3
lods
cmps
xor
pop
ror
sar
mov
lds
scas
mov
sbb
not
cmc
pop
aam
aad
mov
xor
div
iret
dec
mov
nop
push
inc
addr16
mov
loope
inc
stos
ds
sub
out
mov
xor
shl
adc
xor
rcl
add
int
mov
push
add
add
imul
adc
pop
cli
(bad)
jbe
mov
sbb
mov
mov
ds
jecxz
sub
add
fwait
push
cld
fldenv
and
leave
retf
inc
iret
pop
mov
dec
cld
shl
dec
add
out
loopne
add
push
adc
mov
xchg
retf
fist
lock
mov
dec
pusha
xor
cmp
idiv
test
or
or
mov
push
jno
cmps
adc
aam
xor
scas
and
add
sar
sub
int3
jmp
pop
sar
sbb
test
adc
in
add
inc
sub
or
data16
stos
movs
push
pop
add
adc
in
push
inc
or
xchg
mov
or
shr
sub
push
shr
xor
aam
or
mov
or
mov
push
les
shl
ja
xchg
ret
pop
lea
jle
gs
retf
pushf
movs
les
inc
cli
inc
fs
inc
dec
xor
xchg
sub
sbb
and
pop
dec
stos
(bad)
fwait
push
jmp
or
cli
cmp
pop
pusha
or
fild
and
inc
inc
(bad)
lock
pop
push
push
mov
sub
inc
outs
rcl
fsubr
rcr
(bad)
lahf
adc
and
jnp
sub
fistp
xor
pop
rcl
mov
pop
jl
xchg
out
cmp
sbb
nop
imul
inc
mov
ja
jge
cs
fbld
push
push
dec
lea
je
scas
test
sub
push
mul
sub
mov
inc
dec
fldcw
sub
test
inc
jne
(bad)
test
scas
xchg
dec
in
retf
movs
jge
cs
das
movs
sahf
call
es
push
leave
sar
jge
mov
mov
xchg
mov
rcl
dec
pusha
repz
pop
and
xchg
add
push
xor
out
xor
cmp
dec
imul
(bad)
aad
dec
adc
inc
mov
ret
and
and
sub
int3
ret
inc
push
lock
outs
xor
or
jb
stc
jae
fistp
xacquire
push
icebp
inc
(bad)
das
mov
sbb
add
(bad)
xchg
sub
xchg
in
xchg
xcrypt-ecb
cmps
dec
ja
mov
cmps
add
pop
add
lock
cmp
jno
nop
in
and
mov
icebp
out
outs
aaa
jmp
adc
(bad)
adc
pusha
je
cs
mov
aad
int3
fidivr
jb
xchg
shl
sbb
ror
pop
pop
fldcw
add
int3
add
mov
adc
test
loop
or
adc
add
shl
sub
cmp
jne
imul
dec
sbb
mov
les
sbb
icebp
or
jae
popa
or
popa
stos
add
dec
arpl
dec
dec
iret
hlt
nop
lods
push
lds
inc
add
add
push
mov
into
add
fld
lock
xchg
aaa
jmp
add
loop
xchg
add
leave
jae
(bad)
jp
mov
push
retf
mov
adc
or
xchg
jg
add
mov
fimul
cmp
inc
or
jno
push
(bad)
outs
mov
frstor
ja
push
jae
xor
or
pushf
data16
adc
retf
cwde
add
push
rcr
in
(bad)
xor
out
sub
mov
pop
sub
sub
fwait
jmp
and
or
pop
dec
jne
inc
aam
(bad)
adc
mov
in
pop
cld
dec
push
xchg
dec
addr16
push
ror
arpl
test
inc
add
xchg
mov
xchg
popf
mov
sub
mov
sub
stos
cmp
fcom
cmovge
out
cld
les
jle
add
loope
inc
add
dec
or
movs
adc
je
adc
mov
lea
mov
dec
and
push
sub
inc
daa
jg
adc
rcr
mov
or
sub
sub
and
and
or
inc
xchg
fmul
mov
adc
jg
inc
lock
push
sub
and
and
sub
test
add
repnz
add
inc
cmp
adc
dec
pusha
inc
das
das
sbb
mov
inc
add
xchg
inc
cmp
iret
pop
pop
push
add
outs
xor
inc
cmp
ins
inc
mov
add
or
je
mov
int3
int3
push
fs
shl
pushf
mov
dec
int
cmc
mov
dec
push
dec
leavew
dec
int3
sub
xchg
jae
mul
retf
pop
inc
or
pop
aas
or
inc
(bad)
shr
sub
lds
push
adc
or
dec
shl
push
shl
or
mov
inc
or
inc
push
(bad)
dec
or
dec
repnz
mov
sub
(bad)
call
and
ror
sub
sbb
in
sbb
cmp
inc
jmp
fnstsw
shr
adc
pushf
stc
jg
sub
xchg
outs
jge
push
clc
icebp
adc
jae
add
jb
adc
repz
mov
jno
inc
or
in
mov
out
jmp
xchg
xchg
aam
push
dec
fisttp
test
dec
not
pop
xor
sbb
mov
jp
es
in
retf
cmps
stos
arpl
sbb
add
fcmove
sqrtps
rcr
pop
dec
(bad)
repz
mov
int
jle
push
xor
mov
stc
pop
cmp
jle
sti
scas
stos
push
xor
or
sbb
add
adc
dec
pop
pushw
shr
mov
stos
inc
and
call
dec
and
fbld
xchg
sbb
pushf
mov
enter
adc
jno
in
adc
scas
cld
inc
(bad)
(bad)
sub
outs
icebp
mov
add
mov
adc
ret
stc
mov
imul
dec
and
jle
sub
dec
mov
movs
push
mov
gs
add
ret
jg
test
pop
aaa
sub
adc
adc
and
cmp
jmp
mov
push
sbb
(bad)
repz
or
dec
add
call
push
fld
dec
dec
pop
xchg
scas
cmp
or
xor
add
hlt
and
gs
xor
(bad)
and
sub
imul
mov
nop
mov
into
into
push
fs
xor
add
dec
dec
or
jecxz
jl
leave
fisub
sub
jnp
xchg
inc
sub
iret
scas
sahf
mul
hlt
cli
xor
add
adc
mov
dec
aas
pusha
dec
lahf
add
xchg
inc
cmps
fadd
jb
dec
push
and
sbb
popa
push
js
jp
add
ja
xor
out
call
cmp
aaa
inc
mov
icebp
or
psllq
out
pop
test
sbb
sub
inc
les
and
add
out
outs
push
inc
(bad)
cmp
jmp
pop
inc
sub
push
iret
rcr
int
mov
pop
je
retf
test
dec
push
adc
pushf
xor
mov
push
push
pop
outs
outs
ds
push
gs
pop
sbb
mov
clc
(bad)
iret
ds
adc
mov
inc
inc
xor
rol
xor
adc
pop
cli
sbb
cwde
inc
mov
sub
cmp
jle
shl
sbb
add
retf
add
dec
add
test
jmp
fstp
pop
push
in
arpl
and
in
aas
push
repnz
add
outs
and
xchg
cmp
mov
(bad)
imul
add
cmp
addr16
mov
bnd
and
rcr
cmp
mov
xor
arpl
clc
mov
cmp
cmc
(bad)
pop
mov
push
xchg
sbb
(bad)
rol
sub
adc
shr
aad
push
retf
lahf
push
inc
popf
add
and
out
inc
jae
pop
ror
xlat
fs
adc
pop
push
mov
retf
add
or
pop
mov
cmp
jns
fwait
fwait
dec
mov
mov
xchg
or
add
cmp
pushf
mov
add
push
mov
cmp
sbb
pop
push
call
pop
sbb
retf
aaa
push
shl
cmps
inc
das
or
out
mov
imul
mov
push
dec
pop
outs
push
shl
rcr
add
push
mov
push
xlat
rcl
loope
popf
lahf
jle
or
cdq
sar
stos
in
xchg
cmps
outs
cmp
inc
push
outs
jg
xlat
outs
mov
test
arpl
js
mul
jbe
add
int3
aas
movs
stos
xlat
lahf
shl
fidivr
out
movs
in
xor
pushf
push
mov
test
mov
jns
xchg
jmp
call
test
xor
mov
mov
dec
mov
sahf
sub
inc
ins
movs
sti
test
out
shl
cwde
xchg
hlt
xor
in
call
imul
les
jno
add
mov
xlat
add
sbb
inc
mov
mov
cmp
xchg
add
cs
cmps
mov
ret
xchg
pushf
mov
loop
jae
stc
sahf
test
enter
inc
std
pop
inc
in
xor
(bad)
jo
jno
cld
add
arpl
fstp
inc
(bad)
mov
cmp
adc
or
or
mov
mov
clc
aaa
mov
and
add
mov
fcomp
aaa
aas
mov
in
ficomp
(bad)
xlat
shl
mov
je
inc
cld
fcmovnb
pop
push
jns
dec
call
xor
aaa
or
or
mov
aas
aad
idiv
dec
push
inc
xchg
adc
dec
and
scas
call
arpl
mov
adc
je
fcom
sub
in
lea
mov
shl
dec
stc
xchg
sub
popa
jae
dec
pop
mov
push
mov
test
add
rcl
mov
push
hlt
dec
or
ss
ret
aaa
stos
hlt
mov
dec
mov
test
cmp
add
retf
repnz
aaa
jb
sub
iret
sbb
ins
dec
inc
les
shr
and
popf
sub
rol
push
add
or
bound
add
mov
inc
push
add
imul
ret
jmp
mov
jge
out
int
jle
add
add
mov
ins
fist
repz
pop
js
and
adc
(bad)
xor
dec
mov
cli
or
pop
jl
cmp
push
(bad)
inc
cmc
and
dec
cmp
lods
inc
aad
jecxz
fsubr
js
xchg
cmps
push
push
push
push
push
jae
popa
sub
nop
inc
movs
jnp
test
dec
adc
ins
pop
adc
fs
shl
xchg
xchg
mov
push
call
pop
add
push
xchg
inc
mov
and
call
ins
push
sbb
or
int3
cld
arpl
sti
addr16
adc
or
repz
or
mov
repnz
adc
jecxz
inc
(bad)
cmp
addr16
xor
jp
xor
adc
test
xor
adc
add
xchg
inc
jle
xchg
xchg
das
adc
mov
arpl
inc
mov
(bad)
loope
inc
add
add
xchg
push
cmp
xchg
jae
mov
(bad)
jecxz
inc
xlat
sahf
mov
add
stos
cmp
add
arpl
pop
and
into
or
xlat
lds
ficom
lock
inc
cli
xor
cld
add
sub
repnz
(bad)
adc
push
mov
pop
xor
mov
rol
cwde
xchg
xchg
scas
rol
test
sub
leave
jmp
adc
xchg
call
pop
in
cmp
jnp
push
out
adc
shl
or
adc
or
mov
dec
mov
inc
pop
add
popf
rcl
sbb
adc
ror
push
(bad)
icebp
fisub
cs
inc
popf
cmps
iret
rol
enter
pop
push
inc
mov
loope
push
add
lahf
sub
inc
add
out
retf
and
fucomp
int
push
pop
jne
inc
out
fistp
arpl
jl
adc
pop
jns
aaa
data16
shr
stc
xchg
je
loope
fstp
dec
std
sbb
test
not
sahf
add
dec
cmps
mov
fimul
mov
test
or
push
xchg
sbb
rcl
and
mov
jnp
(bad)
push
(bad)
icebp
add
dec
loop
test
aas
(bad)
mov
pop
outs
test
and
dec
inc
xchg
or
jne
cmp
sub
jge
and
fxch
call
aad
test
int3
and
cmp
mov
out
imul
adc
or
jnp
sahf
jmp
push
scas
push
div
and
cmp
pop
pop
loop
sbb
xchg
push
push
xor
adc
mov
sub
stc
jo
std
fisub
in
and
sbb
mov
sub
sbb
pop
fidiv
add
fsubr
ret
or
addr16
(bad)
in
cli
ins
xor
sub
lea
inc
add
stos
(bad)
and
inc
enter
pop
or
les
xchg
add
mov
sub
aas
mov
and
lock
neg
pusha
push
and
fs
xchg
clc
mov
(bad)
clc
stc
or
test
cwde
xacquire
mov
ret
add
and
test
cmp
daa
add
ins
sbb
adc
add
jns
fidivr
retf
imul
xchg
mov
inc
sti
setne
shl
ja
mov
sbb
lods
mov
rcl
mov
push
add
xor
nop
aas
pop
xchg
push
mov
call
rol
xchg
aas
sub
lahf
das
call
ret
xor
js
fisttp
sbb
aas
fnstsw
cmps
xchg
inc
out
sar
fsub
xchg
push
adc
cmp
pushf
jge
xor
jg
aaa
pop
shl
cmc
addr16
jecxz
dec
add
unpcklps
cmp
cdq
cmp
inc
pop
mov
jge
or
xchg
add
mov
aas
movs
adc
dec
xbegin
mov
xor
and
adc
test
bound
popf
dec
mov
int
cmps
mov
stos
xchg
jp
or
neg
popf
cmp
cmp
push
or
xor
into
maxps
jnp
inc
icebp
cs
push
xlat
aaa
mov
dec
test
adc
push
les
sub
jmp
and
cmp
ret
retf
sub
mov
mov
fs
imul
pusha
mov
and
sti
xchg
dec
cli
mov
mov
jnp
das
out
xchg
mov
pop
pop
and
add
mov
cwde
push
add
push
cmp
out
out
fistp
mov
aad
mov
cli
mov
into
mov
cs
and
js
sbb
nop
xor
enter
adc
xchg
mov
into
(bad)
(bad)
neg
cmps
mov
js
add
stos
adc
dec
hlt
sbb
push
dec
fist
inc
retf
sahf
lea
rcl
(bad)
jg
add
add
adc
sub
stc
jnp
add
mov
inc
ret
mov
nop
dec
xchg
ds
arpl
and
push
jo
imul
aas
inc
mov
in
popa
jmp
pushf
in
fdiv
leave
jmp
mov
sbb
mov
or
jl
jae
dec
ds
push
xor
pop
ret
lahf
test
sbb
pop
adc
mov
and
cmp
js
inc
jl
(bad)
xor
adc
ins
cmp
(bad)
dec
addr16
cmps
call
sbb
or
mov
ins
not
dec
pop
jg
les
(bad)
test
xor
fnstsw
xchg
out
mov
xor
repz
and
cmp
mov
(bad)
mov
scas
out
mov
lds
xor
and
sub
mov
cs
push
in
pusha
sbb
inc
int
cs
lahf
dec
cmps
or
daa
aas
mov
ret
ror
scas
push
pop
lds
dec
test
dec
pop
sti
inc
inc
and
outs
jg
or
mov
gs
dec
adc
shr
aad
sub
(bad)
jae
icebp
test
xchg
push
mov
jnp
retf
push
rcr
cmp
jnp
sahf
gs
int
mov
mov
test
adc
xchg
xchg
icebp
adc
adc
popa
pop
(bad)
push
pop
sahf
xor
push
or
add
into
jno
or
cmp
(bad)
fs
mov
test
mov
mov
mov
or
xchg
inc
and
lahf
sti
mov
add
lea
cdq
and
sbb
adc
xchg
iret
inc
xchg
hlt
(bad)
mov
cmp
test
mov
out
cmp
in
push
fcmovnu
dec
aad
cmps
test
fnstcw
test
in
and
inc
jnp
xor
(bad)
xchg
xor
mov
jmp
jne
loopne
shl
scas
and
out
repz
push
cmp
jmp
ret
ror
mov
int
outs
inc
pop
loopne
xchg
sub
inc
add
fsub
pop
add
cmps
cld
imul
retf
mov
inc
mov
sub
nop
mov
call
sbb
fnstenv
dec
cld
test
add
add
jmp
scas
add
ds
or
push
xchg
dec
cmp
test
repz
sahf
mov
mov
and
jmp
aas
push
xchg
xor
adc
mov
ret
out
dec
sub
push
sub
or
mov
popf
mov
add
stos
jmp
mov
std
push
xchg
sahf
dec
xchg
jno
stos
mov
mov
sub
add
out
mov
mov
dec
ins
xchg
fld
push
ja
leave
in
sub
mov
in
aam
sbb
xchg
adc
ret
add
(bad)
jp
cs
call
cmps
dec
mov
ror
cmc
xchg
xor
jg
imul
xchg
les
adc
sbb
inc
mov
mov
sar
ret
mov
and
fdivrp
pushf
cs
mov
push
push
pop
mov
xchg
les
cwde
test
jns
cmp
sub
retf
and
cmc
enter
or
lea
add
push
jmp
adc
je
dec
jecxz
lahf
and
ins
or
scas
mov
mov
loope
pop
add
scas
mov
mov
add
jmp
imul
pop
cmp
and
adc
and
pop
dec
in
add
dec
push
loopne
add
sub
pop
aad
sub
push
into
fisttp
aad
mov
or
ins
or
sbb
jge
psubb
inc
and
inc
repnz
or
scas
cld
fld
lahf
add
out
add
ret
es
inc
add
fsubr
call
dec
add
jmp
cmp
cmp
int3
mov
fwait
pop
les
adc
xchg
test
das
pop
pop
or
cmp
add
mov
pop
add
rcr
add
pop
mov
push
out
mov
xor
cmp
sbb
mov
in
call
inc
int3
(bad)
shl
repz
inc
add
add
je
push
shl
loope
mov
add
sbb
sub
lahf
shr
dec
push
push
into
pop
stos
enter
in
dec
push
dec
mov
cdq
adc
cmc
or
or
jp
popf
mov
inc
dec
mov
test
jno
push
cmps
out
mov
pushf
sbb
int
jge
cld
mov
push
aam
jmp
cmp
xor
adc
mov
jl
mov
push
mov
test
adc
jne
cdq
jnp
adc
and
lahf
rcr
fidivr
dec
test
push
popf
mov
sub
lods
add
cmp
jl
cmp
push
sub
pop
out
sbb
jne
and
mov
or
sti
push
repnz
xor
rcl
ror
fwait
inc
fadd
jbe
out
ss
mov
push
sbb
imul
cmc
sbb
sti
test
enter
int3
ja
add
push
out
add
add
mov
cld
sbb
push
mov
and
add
xor
int
test
mov
enter
add
add
cdq
mov
loopne
clc
or
lahf
sub
(bad)
cmp
imul
push
or
sbb
or
mov
fnstsw
adc
adc
add
call
add
aas
neg
mov
cmp
pusha
push
call
shl
push
loopne
sar
je
adc
xchg
xchg
xchg
lods
lock
sbb
adc
mov
sub
in
stos
mov
outs
ja
sbb
fistp
into
scas
fwait
inc
jne
jecxz
xor
mov
add
add
and
dec
mov
mov
fwait
cwde
jg
xchg
outs
cmp
adc
add
out
div
mov
lahf
jg
call
aad
fild
gs
xor
push
dec
add
xor
dec
movs
inc
push
addr16
jne
inc
push
inc
pop
mov
fst
mov
xchg
ja
dec
xchg
ret
lahf
jno
jg
lds
xchg
je
scas
mov
(bad)
das
rcr
jbe
inc
cmps
fbld
movs
stc
dec
jmp
push
arpl
sbb
inc
cmp
inc
add
or
pop
mov
jle
jecxz
pop
push
sti
loopne
sbb
jge
sub
mul
sub
inc
inc
add
add
mov
pushf
push
rcl
ror
or
add
test
xchg
mov
stc
jg
fwait
or
jbe
stc
fstp
mov
fimul
ret
add
mov
jmp
sar
cmp
je
mov
inc
pop
push
aam
pop
inc
aas
jne
dec
and
jne
psrld
lock
cmp
cwde
jge
push
push
xlat
stos
mov
daa
dec
sub
call
mov
mov
stc
or
call
cmp
pop
add
cmp
iret
adc
sub
scas
add
or
inc
fwait
ret
shl
jecxz
mov
inc
pop
popa
enter
adc
in
adc
loopne
sbb
pop
arpl
add
push
mov
jg
cs
je
fwait
cs
in
aaa
pusha
sbb
cmp
inc
(bad)
inc
push
pop
movs
repz
scas
rcl
stc
stc
add
bound
and
dec
cmp
push
mov
sti
cmps
xchg
das
cmp
xor
inc
mov
addr16
cmp
fucomi
mov
push
ins
mov
movs
mov
push
push
call
adc
pop
xor
call
pop
add
arpl
shl
dec
and
cmps
(bad)
mov
jno
push
cmp
dec
jne
xor
mov
sbb
sbb
outs
loop
mov
call
retf
xlat
js
test
call
and
sub
pushf
mov
jge
jne
out
inc
push
popf
dec
add
bswap
(bad)
movs
sub
int3
fs
out
call
cld
cmp
ja
call
inc
nop
xor
sbb
je
(bad)
push
out
and
cs
or
(bad)
and
(bad)
adc
ins
pand
inc
add
adc
inc
push
(bad)
jl
pop
jmp
jne
pop
mov
inc
mov
sub
jmp
inc
(bad)
cld
test
push
inc
das
ins
fstp
sar
or
push
mov
xchg
dec
mov
push
int3
sbb
cmp
pop
sbb
xor
push
(bad)
cmp
fs
mov
jno
cwde
add
sbb
ss
in
pop
push
or
lock
pusha
xchg
fild
inc
adc
dec
mov
push
repnz
jno
mov
js
sahf
jecxz
and
jmp
adc
outs
mov
add
adc
pop
(bad)
xlat
add
add
fistp
test
outs
js
ret
push
call
add
lock
xchg
js
enter
mov
jmp
clc
and
sbb
mov
aaa
out
aas
cmps
ror
test
outs
mov
rcr
inc
lods
gs
push
push
(bad)
out
loop
aam
cmp
sbb
test
add
jmp
or
and
popa
aaa
push
mov
(bad)
inc
inc
push
jge
or
in
mov
ins
test
rcl
push
cmp
cmp
cmps
out
rcr
in
fisub
pusha
or
mov
sar
xor
sub
test
sub
xchg
mov
test
and
add
scas
fidivr
ret
xor
test
jmp
lods
add
and
add
bound
dec
push
adc
bound
push
xchg
nop
imul
pop
out
and
call
adc
add
and
jns
frstpm(287
enter
xchg
arpl
pop
retf
lahf
into
dec
inc
das
push
jge
lea
and
imul
test
aaa
cwde
mov
mov
test
inc
mov
cmp
dec
adc
and
inc
aas
fist
inc
mov
pop
int3
call
sbb
jne
shr
addr16
out
cmps
test
fbstp
or
jg
mov
xchg
inc
(bad)
popa
adc
pop
loop
push
sbb
out
or
mov
mov
add
rol
mov
push
xchg
add
pop
push
les
xchg
inc
inc
sahf
sti
or
pop
dec
add
and
add
rcl
xchg
push
mov
pop
fisttp
add
(bad)
pop
shl
add
fimul
loopne
(bad)
jge
sbb
xor
mov
mov
out
cld
push
mov
leave
and
jbe
and
arpl
cmps
outs
push
das
(bad)
mov
mov
movs
retf
aam
jns
push
jmp
push
push
pop
sub
or
pop
sub
data16
push
xlat
mov
movs
stos
std
imul
push
add
xchg
inc
mov
int3
test
inc
pop
das
pop
cmps
adc
stos
and
test
repz
lahf
bnd
scas
pop
mov
fs
and
add
jo
mov
ss
inc
stos
xchg
add
cmps
pop
js
(bad)
movs
movs
inc
add
xchg
add
add
(bad)
xor
iret
nop
pop
sub
adc
mov
scas
out
jmp
mov
mov
or
xlat
icebp
or
mov
xor
cmp
call
inc
rcl
sbb
cmp
sbb
mov
clc
pop
pop
mov
cld
add
push
or
std
or
out
aam
sbb
or
mov
mov
aad
push
inc
and
test
push
stos
ins
pusha
sub
mov
outs
sub
add
popa
add
scas
push
push
(bad)
mov
stos
into
jle
rol
mov
sub
test
push
ss
or
cmc
mov
jne
push
jmp
mov
or
aas
and
sub
jb
cmp
adc
adc
sbb
enter
mov
adc
and
adc
mov
push
les
jge
ds
xchg
aas
daa
repnz
xchg
imul
add
jecxz
cld
in
jbe
push
js
(bad)
stc
(bad)
or
je
lea
sahf
fwait
push
add
jl
cs
ds
lock
xchg
mov
clc
popa
test
adc
push
xor
icebp
repnz
pop
(bad)
int3
jge
mov
mov
sti
cdq
repz
push
pop
dec
test
not
pop
cmp
leave
mov
pop
jge
leave
pop
arpl
xor
sti
out
leave
retf
movs
faddp
jnp
or
push
daa
nop
(bad)
mov
aam
xchg
dec
lods
imul
jne
rol
hlt
or
dec
frstor
inc
sbb
and
inc
add
xor
pushf
mov
push
popf
dec
push
das
sub
push
jo
shr
sub
lea
cmps
add
cmps
jmp
mov
add
cmp
out
cld
test
inc
inc
out
enter
push
inc
(bad)
pop
sbb
adc
dec
fcmovnb
ret
imul
sub
aam
mov
xchg
cwde
sahf
scas
add
dec
mov
pop
pop
jmp
fdivr
sbb
jns
jnp
push
push
push
int
and
outs
in
push
gs
dec
dec
jbe
add
adc
sub
cmp
xor
(bad)
ret
sub
sub
test
xchg
inc
mov
in
push
inc
fdivr
sub
sbb
aas
and
add
adc
add
outs
adc
and
and
xor
ret
loop
adc
pop
xchg
aas
adc
adc
adc
inc
inc
adc
adc
or
jb
adc
adc
inc
adc
js
popa
jns
mov
add
inc
inc
adc
adc
add
nop
aas
adc
adc
adc
retf
pop
adc
adc
inc
adc
fsub
mov
mov
or
mov
mov
and
and
sbb
xchg
retf
fild
inc
add
adc
pusha
lods
inc
mov
inc
add
adc
add
add
adc
dec
pop
fadd
and
and
and
xchg
mov
test
or
and
ret
or
and
ret
retf
pop
test
cmpxchg
imul
inc
adc
js
pusha
pop
or
inc
add
adc
push
pop
fadd
std
adc
adc
inc
adc
fadd
mov
ins
mov
inc
adc
adc
xchg
aas
adc
adc
adc
inc
inc
adc
adc
add
add
adc
jo
xor
or
stc
adc
adc
inc
adc
js
mov
fnstsw
fst
add
inc
adc
fsub
pop
test
fsub
js
or
movs
outs
cmp
add
and
and
mov
cs
pop
hlt
inc
add
adc
add
mov
push
adc
adc
dec
lds
ja
bound
or
inc
bound
aas
and
sub
and
xor
rol
push
add
adc
adc
lea
inc
in
repnz
inc
add
adc
sbb
inc
and
and
and
pop
add
adc
adc
retf
mov
jmp
mov
gs
push
out
or
mov
mov
push
add
stc
xchg
addr16
ret
mov
pop
inc
fdivr
jg
ror
pop
cli
sbb
dec
dec
mov
ror
retf
iret
std
jg
xchg
stos
jge
test
aas
pop
jno
push
in
mov
std
gs
aas
std
pop
fnstcw
hlt
in
les
lods
sti
lods
xchg
pop
xor
mov
and
and
or
mov
or
mov
lahf
inc
add
adc
out
push
pop
out
loop
inc
ret
mov
js
ja
cmp
mov
inc
push
jg
ds
fild
stc
xchg
pop
adc
inc
mov
das
stc
pop
mov
push
pop
sbb
and
ret
mov
jmp
loopne
lds
jmp
dec
pop
fiadd
jg
push
cld
xor
add
pop
fisttp
push
cli
push
stc
dec
adc
xchg
icebp
mov
sbb
pop
pop
mov
xchg
aaa
mov
push
mov
lahf
mov
cmps
loop
xchg
push
ins
(bad)
dec
fcomi
sbb
inc
in
push
jbe
jge
aas
popa
fnstenv
aas
lods
mov
aas
xchg
jle
cld
mov
jae
(bad)
movs
push
jg
pop
jnp
push
sub
pop
xchg
mov
aaa
cld
cmp
not
add
xchg
mov
test
push
(bad)
(bad)
cmp
inc
cli
jo
inc
xor
mov
aaa
pop
jge
not
xor
xor
mov
or
std
mov
mov
push
stos
aas
imul
stos
das
jp
push
sub
shl
jecxz
xor
(bad)
mov
and
mov
bound
sub
add
cli
sbb
or
add
outs
xchg
jle
mov
fwait
adc
dec
icebp
mov
jmp
adc
jl
cld
dec
in
(bad)
fild
lods
sti
ins
inc
(bad)
mov
fdivrp
sti
or
mov
mov
mov
or
clc
popf
shl
call
ins
and
inc
add
jnp
pop
pop
mov
jmp
inc
xchg
jl
sbb
in
jecxz
mov
and
les
or
or
xor
inc
add
adc
out
movs
pop
rcr
xlat
popf
mov
add
sbb
retf
pop
aas
call
std
fdivr
fild
pop
int3
pop
jl
hlt
pushf
(bad)
mov
ret
sub
add
or
fwait
int3
lods
pop
push
mov
add
inc
sar
in
stos
jne
add
push
pop
mov
adc
je
pop
jne
mov
cld
ja
mov
ins
pop
adc
inc
inc
fmul
mov
test
sub
inc
inc
or
or
movs
mov
jae
mov
mov
adc
mov
sub
pop
adc
and
adc
ins
mov
jmp
adc
ja
in
stos
jbe
lock
jmp
mov
popf
(bad)
mov
jb
int
or
test
(bad)
fisub
xor
std
push
je
mov
sub
jle
daa
fmulp
push
or
fwait
rol
loop
sbb
call
aam
sbb
pop
bound
loope
pop
or
or
adc
jg
jle
dec
cmp
imul
xor
fldcw
cld
pop
cmc
aad
cli
fisttp
xor
add
repnz
add
or
and
add
popa
cli
pop
jmp
push
hlt
cmp
call
pop
xchg
fisub
fist
into
and
mov
rcl
jno
cmp
inc
int
dec
push
arpl
jae
jge
stc
outs
leave
inc
push
jnp
jbe
fs
jns
xchg
push
pop
out
pop
aam
pop
test
cli
jle
in
jge
xchg
(bad)
jb
mov
lock
sub
xchg
mov
xchg
das
jp
and
push
div
adc
cmc
dec
stos
iret
test
ret
sub
enter
dec
call
add
sub
sub
aaa
mov
inc
fsubr
sub
mov
ds
inc
add
add
add
mov
adc
les
push
and
mov
push
pop
push
ja
dec
lods
test
mov
sbb
out
sti
pop
movs
pop
scas
sbb
ret
mov
cmp
sti
in
xchg
mov
pop
pushf
adc
(bad)
out
js
adc
idiv
pop
movs
mov
dec
adc
and
sub
fidivr
out
adc
adc
push
jae
(bad)
or
adc
push
lahf
or
rcl
sub
add
repz
add
adc
inc
add
out
dec
dec
and
ret
jbe
mov
clc
shl
inc
add
icebp
fst
push
push
add
push
lds
cvtpi2ps
(bad)
ins
test
iret
cmc
mov
ss
mov
cmp
fwait
call
pop
(bad)
ins
fwait
(bad)
sub
test
scas
aas
stos
sbb
pop
mov
and
inc
sub
or
ins
sti
add
xchg
dec
mov
sub
ins
sti
pop
test
and
imul
add
or
adc
mov
mov
add
inc
fs
xchg
cmp
sbb
cld
or
or
inc
(bad)
(bad)
imul
jne
inc
or
fbstp
dec
(bad)
mov
push
in
mov
fnstenv
lods
test
aas
test
imul
outs
fnstcw
pop
push
pop
jo
mov
xlat
shl
fisttp
int3
cmp
add
xchg
and
inc
sar
jno
out
add
int
movs
sub
sbb
(bad)
cld
mov
or
or
xor
mov
(bad)
cld
cld
test
pop
cwde
dec
test
icebp
daa
jg
leave
or
out
rcl
in
mov
jmp
call
xchg
jns
inc
xor
repz
hlt
add
dec
jg
jae
mov
das
mov
dec
mov
sub
(bad)
repz
idiv
std
inc
jge
idiv
(bad)
cmps
cmps
retf
mov
nop
out
ret
add
jl
add
pop
ins
loop
adc
adc
dec
and
aam
xlat
add
pop
inc
pop
test
nop
std
push
(bad)
sub
mov
or
sbb
inc
inc
or
call
in
lods
fcmovnb
out
xchg
mov
jne
jmp
out
pop
mov
mov
lods
idiv
pop
push
aad
xor
sbb
xchg
les
mov
add
leave
mov
fcmovnbe
and
add
push
adc
adc
mov
repnz
add
or
and
add
mov
mov
popf
das
jp
sbb
push
repz
pop
sub
lahf
push
adc
xor
daa
push
add
addr16
mov
rcr
and
mov
mov
mov
iret
cmp
addr16
out
pop
add
adc
adc
mov
add
inc
enter
xchg
in
stos
(bad)
stc
jmp
fs
call
je
sub
les
pop
cmps
ins
pop
aaa
xor
mov
xor
(bad)
jmp
add
add
adc
cmp
push
and
xchg
out
xchg
cmp
mov
ins
fbstp
sub
mov
ins
mov
or
or
mov
ds
push
lods
sti
fadd
shl
into
sub
sub
add
stos
(bad)
push
fbld
or
std
push
sti
mov
scas
sbb
inc
or
mov
or
cmp
sbb
repz
cdq
jmp
pop
xchg
out
inc
pop
adc
shr
shl
and
adc
dec
jmp
(bad)
fistp
pop
movs
mov
jno
sub
push
jg
mov
jg
ss
outs
sbb
mov
sti
sbb
and
push
or
fst
or
cdq
inc
sahf
icebp
fidivr
add
jne
shl
push
xchg
in
add
adc
xor
mov
jg
cwde
cmc
je
clc
jns
push
xor
fdiv
jb
push
add
adc
mov
jge
adc
popf
pop
iret
jne
and
jl
sub
jne
frstpm(287
and
cmps
mov
jbe
ins
sbb
xlat
stos
dec
jmp
jecxz
(bad)
mov
cmp
into
std
adc
adc
int
sbb
je
or
(bad)
cld
mov
sar
repz
(bad)
pop
add
sub
out
sub
inc
add
jne
ins
fist
or
cli
jge
mov
stos
xchg
ins
pop
das
(bad)
mov
push
mov
add
jne
and
movs
or
add
call
imul
inc
xlat
push
test
mov
add
(bad)
jno
adc
push
pop
retf
cld
mov
fisubr
adc
xlat
mov
sub
loop
int
sbb
div
sbb
mov
mov
add
loope
add
ja
xor
jne
and
dec
and
sub
and
pop
add
and
fdecstp
icebp
inc
jne
loopne
jg
hlt
jge
not
and
es
in
hlt
mov
jnp
loopne
sar
jbe
loopne
std
mov
fwait
icebp
rcl
sbb
dec
fs
push
mov
dec
(bad)
scas
out
push
add
or
retf
in
add
adc
dec
lahf
call
(bad)
pop
cwde
and
pop
pop
jle
jbe
in
call
xlat
and
jle
mov
cmp
pop
mov
mov
jl
xchg
sub
sahf
ins
mov
cmc
out
fnstsw
sar
push
popf
inc
ins
fild
fidivr
rol
cmc
jmp
sub
std
cs
test
push
or
ret
adc
xchg
mov
dec
add
adc
(bad)
pop
fisubr
shr
cmps
mov
mov
mov
inc
mov
cmp
xchg
cmp
stos
leave
test
jo
mov
movs
pop
or
out
xchg
ds
scas
mov
(bad)
sub
ins
jmp
add
jge
jge
shl
xchg
out
mov
dec
mov
adc
fild
xchg
ins
sti
lods
push
adc
cmc
(bad)
and
sub
daa
or
or
lahf
mov
dec
add
adc
cmove
hlt
or
ror
jns
rol
push
add
push
and
add
sahf
and
push
mov
mov
neg
lahf
sbb
(bad)
adc
int
lods
in
out
aaa
mov
(bad)
sahf
bnd
mov
rcl
cld
jns
nop
idiv
inc
jbe
outs
clc
dec
sub
aad
and
out
mov
(bad)
scas
dec
dec
cdq
retf
add
xchg
popf
cld
xchg
jmp
int
std
popa
jle
mov
out
pop
pop
imul
ror
xor
sub
outs
mov
sub
adc
and
xchg
cmp
fidiv
adc
es
cmc
adc
test
(bad)
or
out
mov
pop
push
mov
push
xchg
jae
jg
out
mov
push
fidiv
cmc
hlt
pop
pop
adc
std
push
rcr
pop
icebp
sbb
cld
imul
movs
fcmove
xchg
cld
loope
stc
stc
push
into
cli
cmp
mov
push
inc
and
mov
scas
pop
fist
in
paddsw
adc
test
(bad)
sub
jns
adc
pop
xchg
das
jp
mov
call
rcl
adc
call
adc
or
daa
add
or
in
push
xchg
and
pop
inc
fild
call
add
popa
inc
sub
fbld
inc
xchg
enter
pusha
sahf
sbb
xor
push
rcr
fstp
sbb
int
and
jmp
cmp
ds
addr16
mov
and
in
scas
cmp
test
in
(bad)
call
pop
(bad)
ja
call
test
mov
pop
iret
js
inc
xchg
adc
aad
stos
or
div
mov
pop
xor
pusha
cwde
push
jb
mov
ja
ficom
mov
mov
repnz
mov
fwait
out
stc
jle
iret
xchg
or
or
sbb
or
and
xchg
jo
pop
or
mov
push
jne
mov
repnz
mov
dec
nop
and
xor
movlps
pop
pusha
call
cld
push
dec
mov
xor
(bad)
mov
push
aaa
xlat
and
dec
inc
dec
pop
dec
and
push
mov
pop
mov
inc
push
cmp
mov
(bad)
jns
mov
push
ret
mov
add
jge
call
js
cmp
xor
into
popa
repnz
or
and
out
(bad)
mov
pop
or
xor
inc
sbb
jge
xor
mov
adc
shl
in
repnz
mov
lea
mov
dec
xchg
outs
mov
out
push
add
or
call
pop
fiadd
jg
movs
clc
imul
outs
mov
es
dec
shl
(bad)
popa
sbb
sub
and
pop
fadd
jle
inc
outs
inc
add
mov
or
sbb
mov
mov
adc
adc
fs
jl
inc
adc
adc
popa
stos
add
pop
or
jg
scas
in
xchg
test
dec
xor
xchg
add
stos
or
retf
lahf
or
or
bound
or
loop
xchg
in
add
adc
adc
shl
loopne
and
aas
and
sub
and
xor
add
(bad)
mov
sub
adc
adc
inc
adc
fcomp
pop
or
js
inc
(bad)
and
int
adc
adc
inc
adc
fadd
pop
or
jns
retf
add
in
or
and
jmp
test
add
xchg
add
jp
dec
fs
adc
adc
cmp
mov
dec
inc
dec
stc
pop
adc
dec
and
adc
inc
adc
or
pop
add
lods
xchg
mov
and
and
and
and
add
cld
push
std
push
and
add
adc
js
mov
push
mov
movs
das
js
fnstenv
add
add
or
pop
fwait
aas
add
or
inc
cmp
and
and
and
ss
add
adc
add
repz
add
pop
and
and
xor
mov
inc
sbb
rcr
push
enter
jo
inc
add
js
mov
push
push
lods
xchg
aas
mov
mov
cld
mov
pop
adc
adc
mov
mov
(bad)
adc
repnz
add
mov
les
and
and
ret
mov
jnp
adc
repnz
add
sar
les
adc
inc
fadd
fst
jbe
add
rcl
lea
or
or
ss
or
add
xchg
mov
lahf
sti
popa
fnstenv
in
sub
and
xor
icebp
cmc
popf
mov
add
pop
cmp
pop
nop
add
inc
add
fsubr
adc
adc
xlat
mov
sub
and
stc
arpl
dec
add
and
push
and
adc
adc
add
jo
clc
sbb
out
std
jnp
add
inc
out
ins
jmp
jle
shl
adc
xchg
mov
retf
shl
and
pusha
stc
repz
stc
mov
fild
fcmovnu
and
or
adc
adc
adc
xor
pusha
ror
sub
adc
loopne
aas
jg
call
add
mov
adc
adc
mov
cmc
xchg
mov
cli
(bad)
mov
loopne
sbb
fcmovnbe
add
addr16
add
add
adc
jmp
das
adc
mov
inc
xchg
mov
xor
mov
adc
add
adc
adc
int
add
jg
xor
pop
mov
aam
inc
add
adc
adc
mov
clc
dec
inc
sub
add
iret
adc
cwde
push
inc
jp
pop
in
sbb
adc
fsubr
out
adc
pop
push
fnstenv
adc
repnz
add
or
sbb
out
or
ret
mov
loope
pop
xchg
cld
lods
adc
stc
repz
rol
mov
mov
and
adc
ins
into
adc
arpl
cli
xchg
xchg
sbb
mov
add
repnz
sub
add
and
pop
fwait
outs
add
loope
mul
sahf
sti
out
add
mov
js
loopne
add
or
pusha
jae
or
ja
or
sub
cs
add
adc
push
inc
fadd
jp
adc
adc
jl
and
fmul
sidtd
arpl
pop
and
call
aad
or
cwde
cwde
ficom
xor
mov
cwde
cld
xor
leave
lahf
dec
add
lods
dec
add
lods
mov
loope
and
and
(bad)
jp
dec
lock
sub
ror
xor
hlt
das
cmp
add
aaa
mov
mov
icebp
and
and
popf
fdivr
pusha
push
in
adc
xor
out
push
sbb
mov
mov
or
fwait
sub
mov
iret
and
in
pop
in
adc
mov
and
jbe
imul
pop
add
inc
inc
adc
adc
add
dec
or
jo
pop
ja
popa
ins
stc
arpl
or
shr
div
or
adc
adc
inc
adc
push
cmp
or
cwde
shl
repnz
cld
mov
xor
add
loop
(bad)
fcmovnu
and
xchg
cmp
cld
mov
mov
repnz
hlt
iret
and
mov
jbe
jo
ins
pop
scas
mov
jmp
and
and
and
pop
or
jo
pop
xor
sub
cmp
add
mov
cld
add
or
mov
jmp
adc
jle
and
and
jge
idiv
dec
pop
jle
jecxz
push
mov
loopne
clc
adc
and
outs
adc
jae
out
push
popf
add
and
fild
and
ret
sahf
jnp
cmps
add
bnd
pop
sbb
(bad)
pop
push
inc
add
das
movs
add
lods
pop
shr
mov
add
push
pushf
enter
jo
mov
outs
pop
loop
pop
xchg
jns
jle
inc
(bad)
jle
pop
dec
(bad)
aas
enter
cmc
lods
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ins
xor
add
mov
inc
or
add
or
add
add
or
add
add
repz
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
adc
add
adc
rcr
jle
add
add
bound
inc
add
add
add
mov
add
pop
je
dec
inc
pop
fiadd
sbb
pop
sbb
(bad)
in
add
sbb
inc
outs
ins
ins
outs
je
add
add
inc
jb
popa
je
and
je
and
dec
push
fs
add
call
inc
inc
push
js
in
fld
mov
jg
aad
dec
cmp
sbb
dec
into
pop
jo
sub
xchg
adc
repnz
add
in
fs
add
mov
popa
jne
jecxz
idiv
cmp
test
mov
xlat
jmp
jne
scas
out
scas
out
ds
mov
sub
(bad)
cmp
jle
mov
mov
popf
cmp
pop
xlat
pop
movs
rcl
ins
repz
xchg
(bad)
dec
push
imul
mov
mov
jmp
xor
dec
repnz
lods
fbstp
rcl
stc
lods
push
jmp
pop
cmps
mov
pop
neg
(bad)
mov
into
mov
push
mov
xchg
xchg
out
ret
std
jmp
mov
retf
cmc
not
xchg
div
aas
(bad)
sub
mov
cmp
mov
imul
pop
xor
in
add
cmp
push
idiv
xchg
fisttp
mov
sub
(bad)
sbb
sbb
xchg
ret
push
stos
bound
cs
stos
jne
cmp
aaa
mov
stc
mov
or
je
leave
aaa
call
mov
outs
icebp
std
inc
jne
mov
mov
jmp
mov
leave
aaa
outs
dec
xlat
lahf
jl
jbe
or
outs
jg
mov
je
ja
jno
add
or
add
outs
inc
jmp
dec
push
(bad)
cmp
cmovge
loope
push
mov
(bad)
cli
inc
sahf
test
(bad)
iret
jmp
pop
mov
outs
mov
sub
pop
xchg
movs
iret
push
inc
cmc
mov
push
imul
sbb
iret
xor
sbb
cld
call
dec
int
outs
dec
or
adc
call
or
(bad)
mov
gs
xor
sub
mov
jmp
mov
xchg
ja
push
jmp
outs
stos
cli
or
pop
dec
push
xor
nop
call
add
shr
add
push
or
and
add
and
lods
inc
mov
loopne
dec
mov
add
pusha
add
add
pop
adc
adc
cmps
pop
mov
fiadd
jge
cs
out
sbb
cdq
pop
aaa
jnp
lods
xor
stos
cmc
add
mov
call
xor
mov
dec
lods
jne
in
pop
mov
mov
imul
movs
scas
xchg
pop
sti
inc
jae
inc
leave
arpl
lods
jl
mov
sahf
mul
add
test
pop
(bad)
push
mov
gs
aam
(bad)
mov
div
call
repnz
aaa
aam
or
xor
sub
call
sbb
leave
sbb
push
dec
adc
sub
push
adc
and
add
xor
add
push
add
cli
out
add
add
mul
mov
loopne
xor
pop
(bad)
pop
and
sbb
repnz
xor
stc
jae
cmp
add
aam
jo
(bad)
push
stos
sub
jne
mov
jns
jnp
push
lods
scas
push
xchg
jbe
addr16
aas
(bad)
sar
jmp
dec
xlat
push
imul
mov
pop
out
and
push
xchg
mov
fist
push
loope
inc
sbb
aas
add
test
data16
cmps
xchg
inc
lods
jmp
mov
cmps
pop
push
sahf
jnp
pop
cmc
ds
xchg
ja
push
jmp
pusha
mov
clc
ja
cmps
adc
pusha
nop
mov
cld
xor
ss
aad
mov
add
sbb
add
inc
pusha
ror
add
pushf
inc
loopne
sbb
or
loopne
cmps
sub
fadd
inc
mov
shr
adc
pop
pop
test
lea
int
xor
shl
mov
mov
lods
xchg
lods
(bad)
mul
pop
idiv
dec
cmc
mov
call
mov
mov
pop
cmps
imul
fisttp
xchg
pop
jns
repz
pop
jne
push
adc
xor
inc
sub
mov
adc
adc
push
sbb
mov
mov
mov
pop
mov
push
out
in
lods
sti
mov
cmps
and
(bad)
mul
nop
xchg
lods
test
in
pushf
ror
mov
xchg
shl
loope
test
add
ja
repz
scas
ffree
sbb
adc
push
pushf
sub
js
and
add
adc
add
dec
mov
push
pop
ds
and
imul
out
inc
jmp
push
stos
outs
outs
push
jmp
pop
mov
jp
addps
xchg
mov
mov
neg
stos
div
sti
push
out
aad
sti
aaa
pop
xlat
mov
jae
dec
mov
jl
mov
icebp
int3
das
push
and
mov
scas
lods
fwait
mov
je
imul
loope
lahf
push
xchg
test
mov
in
ret
mov
icebp
aad
scas
jecxz
cmp
xor
inc
push
sti
pop
mov
outs
movs
pop
pop
inc
ficom
fild
push
call
aad
mov
movs
out
sbb
add
cld
aad
and
add
or
sub
inc
pusha
add
push
add
add
adc
arpl
sub
loopne
or
and
loope
mov
sbb
xlat
add
mov
aaa
mov
jecxz
repnz
test
jns
push
dec
test
pop
mov
push
scas
dec
mov
(bad)
xchg
fistp
cmp
mov
fldcw
in
sahf
jae
sbb
(bad)
(bad)
int3
out
shr
lahf
stc
mov
mov
xchg
cmps
xchg
(bad)
sub
repnz
push
aad
push
test
push
dec
inc
fidivr
addr16
ins
stos
mov
dec
sbb
scas
scas
lock
dec
mov
in
pop
jmp
pop
dec
mov
jmp
lods
(bad)
jle
pop
test
jge
iret
out
dec
ret
out
inc
jmp
xchg
fstp
test
push
inc
and
fld
sub
cmps
pop
or
add
add
add
xor
mov
rol
out
xor
js
or
cmps
and
test
and
add
cmp
add
inc
mov
rcr
add
dec
das
jbe
sbb
inc
mov
push
out
mov
aaa
fs
std
push
jl
lods
inc
jbe
cmp
push
sbb
pushf
mov
jbe
jne
mov
iret
fsub
jne
lods
add
fwait
std
jmp
idiv
addr16
pushf
jbe
push
ficomp
cli
icebp
mov
jecxz
stos
aam
mov
test
push
pop
jmp
pop
xchg
push
imul
jmp
loopne
aad
jmp
jle
jns
inc
lods
retf
pop
push
dec
scas
movs
jno
jg
aam
mov
jmp
fldcw
push
inc
iret
arpl
push
scas
xchg
not
mov
lock
in
dec
aad
inc
jmp
data16
mov
loop
sbb
add
push
or
add
jmp
add
add
jo
pop
clc
(bad)
mov
cmp
cmp
add
push
sbb
adc
jmp
fcomp
sbb
jo
es
push
fbstp
cmpps
pop
sbb
mov
out
sub
add
sbb
fwait
shl
nop
cmps
mov
cli
(bad)
push
jge
test
xor
pop
stos
mov
inc
mov
stos
lahf
(bad)
in
cmp
hlt
cwde
stos
xchg
hlt
cmc
repnz
aad
in
pop
jne
or
sti
inc
loopne
jle
mov
outs
mov
nop
iret
dec
mov
fild
push
fist
push
ds
sub
push
fbstp
fldenv
sti
pop
push
in
call
(bad)
jmp
mov
stc
mov
dec
aad
(bad)
mov
adc
movs
add
or
add
add
push
or
outs
pop
add
inc
jo
adc
add
push
stos
rol
fstp
mov
cld
shr
mov
jmp
sar
inc
lods
arpl
push
scas
gs
xlat
shr
lahf
test
repz
jne
movs
cmp
js
mov
(bad)
repz
jmp
test
outs
aam
jg
push
jle
push
sub
test
mov
stos
popf
iret
clc
pop
lods
out
cmps
loope
or
dec
mov
icebp
mov
nop
fisttp
leave
arpl
stc
ins
pop
sahf
rcl
mov
popf
ins
mov
sahf
pop
mov
mov
mov
mov
sub
jo
or
mov
adc
add
dec
and
and
xor
dec
add
lock
cmp
mov
aaa
mov
lods
out
jle
cmp
inc
cmc
jl
sti
and
push
pop
inc
cmc
jle
aam
pop
js
stc
int3
imul
fldenv
dec
ja
test
repnz
jns
jle
cmc
cmc
jnp
stos
into
ja
sbb
dec
lods
mov
jb
xlat
push
cmc
sbb
mov
loope
repz
jle
int
aam
push
mov
outs
cdq
fiadd
pop
leave
imul
push
sahf
in
lods
addr16
(bad)
fimul
mov
cmc
fstp
cmps
mov
das
and
cmps
cmp
rcr
rcl
xor
sbb
scas
jbe
xlat
xchg
xor
out
test
outs
xor
add
add
(bad)
sub
test
frstor
jmp
scas
(bad)
mov
jge
push
mov
or
sar
add
sbb
pop
test
out
lea
push
sahf
jecxz
mov
cmc
mov
idiv
repz
mul
jb
stos
jnp
shl
cmp
shl
inc
jg
sbb
aaa
movs
inc
fidiv
test
jge
sbb
mul
jns
in
pop
xchg
out
stos
(bad)
xor
repz
aad
mov
cmp
(bad)
mov
dec
mov
inc
pop
xor
cmp
daa
adc
out
jo
or
adc
push
shr
mov
sbb
mov
loopne
add
adc
lea
sbb
xchg
mov
jno
xor
rcr
dec
mov
jp
out
das
push
xchg
daa
mov
test
das
mul
or
movs
pop
mov
imul
mul
(bad)
jae
int3
aam
cmp
dec
push
sbb
outs
push
addr16
int3
out
push
repz
jno
mov
cli
(bad)
cmps
sub
hlt
aaa
mov
push
cmp
xchg
sbb
cmp
test
add
add
xor
imul
stos
add
add
test
loope
or
test
sub
mov
pusha
push
xor
ror
push
imul
mov
mov
mov
(bad)
gs
arpl
es
(bad)
mov
addr16
std
pslld
jmp
jmp
out
pop
lods
out
cwde
test
sbb
pushf
xchg
pop
out
loopne
cmp
cmp
add
push
mov
dec
aad
scas
(bad)
mov
repnz
sub
dec
mov
inc
pusha
xor
cmp
stos
inc
xor
and
adc
scas
or
pop
stc
test
jb
add
or
add
shr
sub
std
nop
or
cmp
hlt
lahf
aam
test
retf
mov
pop
push
aas
pop
cmc
repz
scas
fwait
movs
scas
xchg
jmp
dec
mov
mov
jg
pushf
xor
sub
imul
mov
cmp
adc
adc
push
dec
mov
push
jmp
push
dec
sahf
stc
jne
sub
idiv
test
mov
xchg
or
pop
arpl
ss
mov
adc
add
push
(bad)
dec
and
dec
pusha
adc
pop
lock
or
cmp
add
call
dec
loopne
jle
jbe
js
pop
sti
lea
rcr
jle
test
xor
mov
test
jns
je
dec
or
sahf
mov
rcr
repnz
aad
sub
inc
lods
addr16
cwde
push
test
test
into
in
shl
(bad)
cmp
jmp
scas
jp
dec
test
cmps
int3
mov
push
sbb
cmp
test
add
test
push
add
add
rcl
or
or
popf
inc
data16
add
ret
lods
pushf
rol
mov
xor
popf
sub
mov
jle
cmps
aaa
(bad)
mov
add
push
jmp
mov
mov
out
call
sub
xchg
out
int
mov
jecxz
xchg
test
arpl
stc
xchg
jne
mov
xor
mov
test
fidiv
ror
test
jae
aam
(bad)
jecxz
ficom
stos
(bad)
sti
jle
inc
jle
out
pop
std
pop
sahf
std
ss
push
pop
test
iret
mov
cmps
test
mov
rcl
mov
mov
or
jecxz
add
and
add
pop
add
adc
or
sbb
mov
pop
outs
jbe
add
(bad)
packssdw
jge
pop
lods
xchg
mov
scas
sahf
(bad)
jmp
jne
icebp
fwait
out
aad
frstor
fisub
xlat
sar
jne
jle
(bad)
shr
iret
(bad)
repz
imul
jne
test
pop
in
push
out
push
jge
jae
repnz
and
jle
pop
jmp
cmp
or
push
jbe
es
sbb
pop
out
dec
in
sbb
call
xor
out
icebp
int
dec
pop
dec
xor
add
sub
and
sub
cmp
and
add
jnp
ds
add
pop
jne
pop
psubb
movs
(bad)
cmp
push
stos
or
movs
jmp
dec
fiadd
push
repz
xor
xor
xchg
repz
mov
jmp
shr
in
sub
mov
ds
push
ret
mov
mov
fs
pop
jns
iret
fidiv
(bad)
pop
into
imul
jle
pop
aad
jno
mov
mov
retf
dec
adc
dec
cmp
sar
movs
sbb
sbb
fmul
(bad)
and
fcmovnb
cmp
sbb
xor
cmp
fdivr
push
shr
jae
(bad)
mov
cli
xchg
sub
iret
pop
repz
xchg
xchg
leave
js
popf
outs
cdq
stos
cld
pop
adc
mov
push
sti
fincstp
mov
out
(bad)
mov
pop
iret
cmp
sti
pushf
lods
outs
test
sbb
fisttp
gs
xor
imul
dec
sbb
adc
jnp
cwde
aad
nop
xchg
movs
lea
inc
call
ja
(bad)
fwait
pushf
pop
movs
(bad)
stc
pop
push
push
out
push
jmp
(bad)
fild
push
cdq
stos
lds
mov
cmp
inc
adc
outs
push
xor
add
push
pusha
pop
adc
sbb
pop
data16
fld
jle
fwait
push
shl
xchg
xchg
mov
mov
(bad)
sti
int3
out
jmp
inc
ficom
movs
pop
mov
mov
arpl
std
mov
(bad)
push
fld
mov
pop
stc
sub
stos
sub
lods
loope
out
shl
std
xchg
ds
ret
and
test
jge
(bad)
ds
ror
jl
out
pop
test
cmps
(bad)
out
pop
std
fsubrp
dec
inc
fldenv
imul
mov
mov
aad
xor
sar
sbb
dec
outs
push
add
mov
add
mov
sub
push
aaa
jo
pop
adc
adc
pop
add
mov
mov
out
xchg
xor
push
stc
push
and
pop
retf
jle
push
xchg
imul
xchg
in
cmps
out
ror
shr
fidiv
pop
cmps
push
pop
or
sub
pop
sub
cmp
fnsave
inc
cmps
xchg
mov
jl
push
push
fstp
cmp
icebp
scas
(bad)
jne
jae
out
xlat
push
push
inc
jg
cmps
sbb
fidiv
xor
int3
test
mov
pusha
cmp
add
add
sbb
push
call
mov
mov
out
adc
(bad)
sbb
add
sub
mov
cdq
in
cmps
dec
xchg
call
lods
or
imul
ret
je
lods
and
cmp
std
jno
mov
push
mov
xor
repnz
test
xchg
mov
jnp
stos
or
daa
mov
scas
jg
call
push
xlat
jno
jmp
ja
mov
scas
movs
adc
mov
xchg
or
fwait
and
dec
popa
jo
shr
sbb
fadd
xor
push
adc
call
adc
pusha
jmp
pop
int
pop
stos
push
(bad)
xlat
jp
mov
adc
shl
pop
add
mov
call
push
aas
pusha
sbb
sub
jp
(bad)
xchg
xchg
fldenv
movs
sub
imul
fst
in
inc
jne
icebp
jb
popf
inc
stos
and
push
sub
ins
push
not
pop
movs
data16
xchg
pop
ret
dec
lods
jmp
cs
pop
(bad)
out
imul
aad
dec
leave
outs
out
xchg
dec
push
stos
bound
movs
pop
inc
loopne
add
clc
mov
dec
pusha
or
pop
and
add
pop
and
sub
sbb
loopne
add
pop
pop
pop
dec
push
stos
add
xor
jo
xor
add
sahf
test
aad
rol
cmp
cmp
cmps
pop
mul
sbb
out
shl
in
push
xchg
(bad)
popa
push
stos
mov
test
lods
jb
aam
dec
push
jno
retf
push
out
jno
jmp
ja
out
retf
scas
and
cmp
push
in
add
add
jo
add
sub
lods
add
push
or
dec
pusha
or
cmp
loopne
shl
mov
adc
push
sti
(bad)
std
dec
stos
sbb
mov
dec
(bad)
cmc
jae
out
sar
ss
jmp
jno
jb
jne
xlat
jmp
test
mov
fdiv
sbb
inc
mov
add
xor
stos
dec
cmp
mov
dec
clc
jp
sbb
stos
idiv
(bad)
or
movs
add
(bad)
test
mov
lock
mov
cmps
adc
add
or
test
retf
and
add
lods
add
stos
jns
imul
pop
jmp
inc
pop
and
add
daa
mov
scas
test
cmc
mov
stos
add
mov
mov
rol
arpl
sub
scas
aad
jbe
popf
hlt
in
pop
jmp
call
shl
dec
aam
lea
add
arpl
call
or
push
sar
pusha
pop
sar
push
add
clc
jne
push
cmp
mov
mov
inc
inc
idiv
in
xor
repnz
cmp
xor
cmp
popa
sti
jno
pushf
(bad)
mov
clc
cmp
ins
shl
clc
cli
repnz
mov
dec
xlat
sbb
sbb
fist
pop
pushf
cmp
stc
aaa
mov
dec
pop
mov
das
fdiv
mov
pop
lods
push
call
jp
mov
or
push
test
mov
sbb
(bad)
retf
cmp
mov
ret
add
lea
lock
scas
(bad)
jo
psraw
add
add
mov
pusha
mov
aad
xchg
cmovno
leave
scas
sbb
jge
jge
cld
imul
imul
(bad)
retf
inc
cmc
xchg
repz
aaa
in
hlt
mov
lds
setl
jo
xor
jle
(bad)
pushf
sti
lock
mov
xor
in
pushf
mov
(bad)
icebp
pop
in
xor
aas
pop
scas
(bad)
in
daa
test
ja
int
aas
jno
and
iret
cmp
ror
push
scas
idiv
repnz
xor
cmp
ror
dec
pop
js
in
cmps
cmp
(bad)
mov
cli
loop
jl
cmp
popf
div
jns
iret
pop
jo
xor
jle
xchg
or
xlat
fwait
mov
sahf
jno
out
enter
test
fmul
mov
sbb
arpl
mov
sbb
ss
jecxz
cmps
test
fsub
push
push
call
xor
fisubr
or
ficom
cmp
shl
je
rol
cmp
dec
hlt
ins
sbb
call
cmp
popf
jns
leave
push
scas
idiv
(bad)
call
enter
fwait
iret
mov
cs
(bad)
add
bnd
aam
xchg
call
ds
mov
fisub
push
cli
adc
push
call
fiadd
push
sahf
jnp
leave
cmps
das
cmp
jae
aas
mov
and
pop
dec
pop
js
jecxz
js
and
fistp
scas
cmp
inc
in
jmp
xor
pop
add
and
test
movs
idiv
fiadd
pop
push
push
push
xchg
test
ret
scas
movs
add
xchg
and
shl
fadd
add
push
add
pusha
in
push
adc
mov
add
test
fild
loope
(bad)
(bad)
int
cmp
jmp
imul
adc
cmps
aas
mov
call
add
push
mov
out
push
gs
ins
sar
repnz
xchg
dec
fdiv
push
sahf
(bad)
mov
fnsave
cmps
mov
call
std
ret
add
loop
popf
mov
lods
jg
imul
in
jecxz
mov
jmp
in
jle
ret
retf
mov
xlat
dec
and
rol
sbb
mov
not
mov
lock
iret
mov
outs
cmp
jecxz
xor
sti
xchg
int
arpl
jo
xchg
jae
cmp
fnstenv
push
push
in
sbb
xor
ja
add
arpl
or
or
jle
pop
call
mov
sbb
in
sub
mov
add
add
loopne
daa
jo
mov
(bad)
adc
loopne
add
cmp
aas
call
xchg
fdivr
adc
or
test
in
lahf
sbb
mov
int3
not
(bad)
fucom
fdiv
out
pop
cs
pop
mov
jae
add
cdq
mov
pop
sub
imul
shl
fsubr
out
mov
(bad)
neg
cmp
push
jns
out
in
in
jmp
in
cmp
or
test
retf
xor
jae
add
mov
pop
push
jle
push
or
ins
ret
rcr
adc
adc
xor
add
cmp
int
mov
xor
mov
sbb
jne
nop
pop
je
inc
dec
pop
jl
mov
ret
sti
push
add
stc
jge
imul
inc
mov
ret
sti
xor
mov
cmp
push
push
into
mov
ss
stos
cmp
sahf
xchg
setge
out
pop
cmp
out
xchg
daa
xchg
hlt
pop
cmp
xchg
out
(bad)
mov
idiv
repz
clc
inc
rcr
cmp
xlat
mov
int
xchg
in
xchg
pop
sti
outs
dec
push
scas
sbb
push
push
fimul
add
sub
push
ret
add
add
fist
sahf
add
adc
sub
js
sbb
add
inc
jo
push
outs
add
or
test
mov
xchg
test
or
das
xchg
cmps
dec
(bad)
jp
aad
cmp
fnstcw
aam
inc
jmp
loopne
iret
mov
outs
outs
fst
cs
mov
outs
add
or
imul
stc
mov
outs
push
lods
xor
pop
add
iret
sub
cmp
xchg
movs
cmp
fsubr
dec
iret
fdivr
pop
or
mov
add
push
push
fwait
jmp
fidivr
stos
sbb
rcr
test
inc
mov
mov
loopne
add
adc
pop
add
cmp
jo
into
(bad)
lea
mov
xor
(bad)
aam
retf
std
mov
std
jno
(bad)
sahf
(bad)
std
int
mov
add
sub
cmps
pop
ja
add
or
fisubr
push
pop
mov
shr
jne
push
daa
dec
mov
cmps
mov
push
addr16
in
jmp
cld
add
data16
push
sbb
lahf
(bad)
cmc
and
push
jecxz
jp
call
xchg
push
push
push
aas
popa
mov
or
push
shl
test
and
mov
sbb
mov
adc
loopne
iret
lahf
pop
shl
cmp
add
cld
mov
mov
sub
imul
repz
mov
push
sbb
cli
xor
cmp
repnz
cld
add
frstor
mov
popf
jno
sbb
add
fs
push
xor
inc
pop
pop
adc
call
add
inc
loopne
adc
add
add
add
xor
ror
arpl
cmc
push
scas
stos
dec
in
pop
lahf
inc
popf
pop
mov
jbe
aad
add
sar
nop
pop
jo
mov
push
push
daa
mov
imul
fidiv
fnstcw
push
pop
cmp
mov
(bad)
jo
(bad)
aam
mov
outs
repnz
xor
sub
imul
or
xor
add
pop
rcr
pop
or
cmp
add
lock
pop
hlt
dec
lods
sbb
shr
add
test
add
das
pop
jecxz
push
jns
repz
fisttp
sahf
add
adc
mov
aas
jns
pop
neg
push
adc
cmp
ret
pop
std
mov
int3
and
fist
pop
cmp
jle
jb
(bad)
sahf
ja
leave
jmp
mov
cmp
repnz
stos
or
jecxz
lahf
sbb
sub
in
pop
into
mov
jle
jns
jge
clc
lea
jnp
test
hlt
fcmovnbe
or
cld
in
jns
mov
mov
fdiv
idiv
dec
jle
hlt
loope
iret
mov
push
add
out
into
mov
pop
into
jmp
ret
mov
sub
in
cmp
out
in
sbb
mov
jge
popf
jo
jmp
jge
mov
dec
cdq
movs
lds
mov
jmp
fadd
sbb
loopne
push
imul
outs
jb
mov
pop
mov
aaa
popa
or
ret
aaa
push
jmp
cmp
scas
cmps
ss
ret
paddw
sbb
ds
(bad)
or
mov
scas
pop
cmp
retf
xchg
sbb
inc
push
out
(bad)
sub
sub
fisubr
pushf
xlat
jnp
mov
(bad)
cwde
xchg
inc
(bad)
jg
ret
iret
cmp
mov
fidivr
xchg
idiv
jecxz
daa
and
out
out
add
or
out
cmp
xchg
push
out
mov
scas
aad
mov
shr
add
mov
or
sbb
loop
or
repnz
sbb
mov
retf
outs
retf
xchg
ficom
sbb
cmp
lods
ja
pop
add
mov
cmp
ja
cdq
(bad)
jle
push
or
pushf
mov
icebp
xor
xor
push
jnp
sbb
call
xchg
add
pop
jp
shl
sbb
bound
xchg
push
jl
push
sbb
xor
(bad)
in
stos
loop
push
(bad)
lods
lods
mov
adc
or
add
add
inc
jo
add
add
add
inc
addr16
cld
xchg
xchg
xchg
in
xchg
leave
outs
jne
mov
add
mov
enter
pop
xchg
in
push
adc
fs
mul
fistp
mov
jmp
inc
adc
lods
pop
jmp
hlt
sbb
sahf
out
stc
push
mov
js
jnp
fdivr
ins
into
cs
test
fld
cmp
jbe
push
imul
xlat
mov
ss
stc
sub
and
call
mov
repz
(bad)
into
mov
imul
mov
scas
cmp
loop
stc
sbb
repz
jge
in
loopne
cmc
push
scas
mov
inc
scas
ja
int
(bad)
pop
jns
xchg
jecxz
out
pushf
fwait
in
fdivr
lahf
sbb
daa
lahf
cmp
pushf
mov
popf
pop
(bad)
add
add
cmps
iret
aas
mov
mov
lock
push
iret
(bad)
cmp
pushf
cwde
call
test
pop
ins
mov
popa
movs
and
mov
add
mov
sbb
sub
sub
pusha
add
add
mov
clc
add
psrad
ror
xor
mov
and
cmps
add
push
cmp
mov
jle
test
inc
jecxz
push
sub
push
push
add
addr16
mov
data16
imul
retf
push
sahf
cmp
lock
ror
jge
add
neg
into
inc
leave
xor
mov
cmps
into
clc
xchg
leave
cmp
mov
cmp
pop
ja
cmp
add
pop
std
(bad)
es
push
shl
mov
repz
jge
enter
neg
add
outs
rcr
push
lods
cmp
int
mov
sahf
imul
iret
out
popa
mov
pop
or
mov
xchg
retf
(bad)
cld
call
popf
pop
xor
lea
ret
js
movs
lahf
pop
out
jns
cmc
shl
data16
fcmovnu
mov
out
(bad)
jae
jge
or
or
pop
aam
jbe
dec
pop
scas
jl
out
push
jg
dec
or
aas
jne
jns
out
xlat
pushf
jno
popa
(bad)
cld
xchg
out
rol
jnp
cmp
out
(bad)
push
jecxz
pushf
mov
xchg
sub
xor
ficomp
dec
cmp
xchg
int
add
sub
push
adc
cmp
jo
add
sub
add
jo
pop
mov
mov
dec
mov
dec
inc
ins
or
push
push
mov
cmp
inc
(bad)
gs
ret
ror
jnp
in
inc
in
scas
sbb
fdiv
aad
std
ret
jns
jmp
sub
pop
cs
sub
mov
jp
jno
inc
dec
clc
mov
pop
aas
and
pop
sbb
ds
push
test
mov
jmp
mov
dec
sub
and
repnz
test
btc
pop
out
add
lea
mov
jge
test
ret
call
popa
arpl
add
fwait
mov
jmp
add
outs
(bad)
xchg
dec
fdivr
std
cmp
jp
pop
out
fdiv
xlat
xchg
popa
pop
mov
test
ss
add
add
loopne
add
pusha
sbb
out
jo
or
(bad)
and
push
je
inc
push
xchg
rcr
movs
popf
scas
outs
xchg
dec
scas
dec
add
xchg
pop
jl
mov
ficomp
inc
add
xchg
ret
icebp
movs
stc
lock
xor
test
mov
pop
shr
ds
(bad)
imul
xlat
sub
jp
cdq
pop
xchg
je
ds
aas
jae
sbb
mov
pop
mov
xchg
out
mov
jg
das
cmp
sub
push
jmp
jmp
stos
jmp
jns
xor
std
shl
stos
hlt
icebp
repz
push
sub
push
mov
fisubr
add
cmp
jbe
jno
pop
fld
(bad)
cmp
cmps
scas
mul
out
imul
dec
dec
mov
iret
ins
fmul
mov
push
jl
daa
sbb
dec
add
sub
call
loopne
pop
mov
add
lock
imul
daa
mov
mov
xchg
lock
outs
cmp
mov
repnz
push
add
iret
stc
clc
(bad)
sti
into
mov
jmp
xchg
cs
in
mov
(bad)
stc
jle
fcomp
jle
scas
push
es
movs
rcl
in
mov
xor
inc
sbb
add
mov
int
sub
cdq
cmc
inc
(bad)
repnz
out
push
sub
cli
sbb
popf
pop
mul
into
arpl
ss
ss
popa
push
fdiv
sahf
and
cmc
out
dec
jnp
sar
mov
xlat
loop
cmp
jmp
rcl
mov
shl
aas
repnz
inc
scas
imul
jecxz
rcl
jecxz
mov
cmp
js
das
push
fbld
mov
xor
and
jo
or
in
adc
add
fwait
shl
test
fwait
adc
in
add
dec
adc
add
jmp
cmp
aas
push
sar
jo
imul
and
repz
shl
ja
sub
sbb
pop
dec
in
fidiv
or
repnz
aaa
and
int
mov
movs
pusha
mov
retf
scas
ja
in
add
cmps
cmp
mov
fcmovu
shl
mov
in
cmc
scas
or
sti
jno
imul
pop
stos
mov
push
lds
sub
ja
push
pop
lods
add
push
mov
add
add
pop
xor
ret
or
fild
stos
pop
and
mov
iret
or
sbb
sub
dec
sbb
repnz
sahf
aam
scas
dec
test
rcl
gs
retf
(bad)
stc
int
mov
pop
ja
popf
xchg
arpl
push
sbb
stos
push
cmps
xchg
ss
movs
cmp
jno
(bad)
gs
lods
mov
push
pop
mov
and
(bad)
jno
movs
pop
cmps
dec
pop
out
pop
add
xchg
rcl
repz
mov
stos
mov
add
jmp
outs
or
dec
xchg
out
fsubr
sti
jnp
rcl
(bad)
adc
scas
xor
fstp
jo
add
xor
pop
add
in
aaa
pop
mov
fimul
xchg
std
inc
add
stos
add
jae
lds
loope
pop
adc
aas
aas
sub
shl
and
push
xchg
iret
in
popf
jno
mov
inc
mov
inc
sub
jbe
daa
jge
ret
outs
cmp
dec
adc
jmp
cmp
cli
jecxz
add
iret
dec
hlt
mov
cmp
inc
pop
out
pop
add
jge
fsubr
mov
add
jle
mul
dec
lods
or
dec
aad
mov
inc
and
push
add
add
loopne
add
sub
or
lods
xchg
out
pop
fidiv
imul
or
mov
pop
add
lahf
cmp
enter
and
and
fimul
add
inc
enter
enter
rcl
dec
(bad)
or
test
mov
xor
xor
call
aaa
cmp
sub
mov
lods
jmp
add
or
retf
daa
lods
in
sub
jno
pop
or
jl
cli
mov
mov
movs
push
sbb
and
adc
rol
jnp
pushf
rcl
push
(bad)
in
loopne
adc
push
shl
push
sub
mov
pop
dec
jae
je
and
std
xchg
add
adc
mov
xor
fwait
(bad)
mov
cmp
cmp
outs
(bad)
cld
add
cmp
std
(bad)
aad
jno
jl
je
xor
das
imul
mov
push
pop
pushfw
data16
jae
inc
loopne
dec
jnp
rol
xor
call
mov
xor
mov
mov
add
jp
add
pop
out
in
cmc
fwait
loope
in
or
dec
aad
movs
xchg
mov
loopne
and
xor
ins
and
add
add
loopne
daa
jo
add
xchg
mov
jl
mov
dec
(bad)
cld
data16
xor
or
jmp
sbb
imul
jle
pop
add
xlat
cmp
imul
icebp
aad
aad
aaa
(bad)
jmp
pop
push
jns
sbb
imul
and
in
(bad)
mov
xor
scas
pop
sbb
fidivr
mov
out
mov
test
jne
jo
xlat
jnp
add
ds
lahf
cld
outs
dec
jg
(bad)
mov
int3
xor
sahf
add
cmp
jg
add
cli
pop
cs
jns
fmul
cld
mov
je
icebp
lods
fdivr
dec
ret
ds
sbb
aam
add
xor
ds
es
sub
dec
jae
pop
sti
add
pop
fldln2
stc
in
ds
sti
stos
or
and
jae
ja
pop
jmp
inc
sub
add
sti
and
mov
fdivr
add
fs
div
lods
xor
lods
add
add
icebp
cli
cld
popf
jl
fist
(bad)
push
jae
mov
mov
add
lods
add
xchg
adc
add
inc
pusha
add
push
add
loop
pop
mov
xlat
mov
div
aam
mov
fsubr
or
push
ds
cmc
ret
scas
or
in
cld
jmp
outs
std
mov
lea
mov
int
mov
(bad)
icebp
mov
outs
push
retf
out
scas
mov
nop
and
call
xor
(bad)
sahf
jne
addr16
je
ins
pop
and
loopne
paddusb
lahf
rep
xchg
add
add
jecxz
inc
dec
jmp
mov
fwait
mov
ss
inc
push
in
sub
lods
push
inc
fidivr
add
add
mov
add
push
add
(bad)
pop
pop
mov
mov
push
sar
xchg
jno
repnz
or
in
movs
pop
movs
fld
loopne
inc
std
retf
add
loope
pop
daa
int3
jmp
(bad)
iret
imul
fwait
repz
retf
pop
lahf
xor
repz
jnp
pop
ja
outs
mov
sbb
push
in
sub
adc
jo
lods
xor
mov
jnp
xchg
dec
dec
fcomi
pop
fistp
add
pop
out
pop
add
mov
push
mov
pop
out
outs
cli
jp
or
ja
retf
aam
out
push
adc
xchg
jmp
lock
imul
mov
or
add
loop
test
aaa
stos
stos
imul
jg
test
scas
fisttp
lahf
mov
xor
pushf
jnp
pop
jecxz
jecxz
sub
ret
jl
sub
cmp
push
or
pop
jle
cdq
ja
outs
outs
leave
aaa
jp
mov
retf
in
jo
sahf
(bad)
xchg
xor
outs
sbb
scas
jne
adc
jl
mov
inc
mov
sub
ja
jb
add
shr
mov
push
cmps
fwait
xchg
mov
mov
in
in
repz
sbb
(bad)
cmc
xor
xchg
std
iret
aas
cmps
cdq
cmps
movs
lahf
cmp
call
fcmovb
int
shr
dec
aas
repnz
sbb
out
xchg
and
jge
call
mov
pop
lea
sub
in
push
iret
iret
(bad)
aad
outs
div
cmp
jnp
rcl
mov
push
add
sub
add
pop
arpl
add
cmp
mov
jge
inc
inc
lds
or
xchg
arpl
cmp
pop
pop
std
icebp
and
in
shr
dec
(bad)
adc
mov
dec
sahf
jge
ror
jbe
xor
fist
outs
xchg
aaa
cwde
imul
call
outs
push
ds
data16
mov
bound
add
nop
jle
cmp
and
mov
fmul
fadd
pushf
fcmovnu
imul
mov
add
cmp
xchg
mov
gs
jnp
jle
dec
adc
cmp
cmp
(bad)
xor
js
cmp
imul
sbb
xchg
fisubr
adc
xchg
in
cmp
sbb
es
outs
addr16
dec
pop
outs
fst
cdq
xor
pop
xchg
mov
dec
inc
(bad)
repz
xor
fwait
mov
ss
rcr
es
aad
add
xor
pushf
add
sbb
push
jno
pop
push
pop
lock
add
xchg
test
sbb
inc
mov
mov
xchg
shl
jns
in
shr
iret
mov
cmp
jle
repnz
add
mov
push
repz
fdiv
stc
cmps
push
imul
fisub
dec
mov
push
into
mov
loop
pop
into
bnd
jo
lods
xor
pop
jecxz
popf
mov
jp
mul
mov
xchg
lock
cli
daa
push
cmps
gs
cmp
sbb
or
(bad)
out
adc
xchg
dec
dec
push
and
in
cmp
sbb
adc
test
inc
jge
push
mov
loopne
sbb
stc
and
call
cmp
loop
(bad)
loopne
xchg
outs
xchg
sbb
sbb
repnz
das
cmp
pushf
fwait
dec
fidivr
adc
mov
ss
dec
jnp
mov
ss
xor
and
call
rcr
rcr
in
in
imul
loopne
scas
xlat
inc
add
or
or
fisub
jp
(bad)
ror
retf
ror
out
mov
push
pop
push
pushf
inc
leave
iret
pushf
jge
jbe
sbb
out
dec
xchg
mov
data16
stc
clc
stc
xlat
sub
loopne
test
repnz
xchg
popf
dec
pop
mov
xchg
mov
div
jecxz
ds
ds
cmp
pushf
jae
shl
mov
outs
scas
ja
jle
stc
popf
ss
fild
sub
or
mov
es
outs
pop
ret
inc
pop
adc
add
ds
fbld
scas
jnp
stos
or
jmp
add
hlt
push
in
mov
iret
in
retf
loop
sbb
xchg
push
je
xlat
sub
mov
jmp
jmp
das
push
sar
or
jl
movs
push
jg
(bad)
out
movs
add
ds
mov
in
fwait
mov
stc
imul
out
mov
sti
iret
mov
mov
loopne
cmp
push
jae
shl
cld
cld
sbb
mov
mov
ins
add
mov
or
xor
add
rcl
mov
pop
iret
aam
sbb
ret
popa
icebp
and
push
jno
pop
sti
sar
iret
mov
js
xor
and
sub
aaa
jns
cdq
imul
rol
jnp
pop
ja
jne
div
pushf
cmp
lods
push
xchg
fucomi
jne
repz
fs
adc
or
movaps
into
mov
push
pusha
sbb
mov
ret
pop
jne
std
dec
sbb
fiadd
(bad)
jmp
cmp
aad
shl
cmps
cmp
add
popa
into
(bad)
repz
retf
aas
aaa
lods
jge
add
ror
jecxz
scas
imul
test
jno
pusha
mov
ret
movs
jnp
cmp
imul
jecxz
stc
cmp
sbb
pop
add
cmp
imul
or
aam
mov
pusha
xlat
icebp
cmps
(bad)
xor
sub
pop
aad
jg
sbb
(bad)
mov
jmp
pop
lods
lahf
push
jecxz
mov
lods
push
cld
ss
ret
push
pop
dec
fcomp
push
clc
aad
pusha
outs
fist
cmp
rol
aad
pop
sub
outs
outs
in
mov
das
shl
xchg
inc
mov
in
mov
sub
(bad)
scas
sbb
jmp
aad
cld
inc
add
xor
fild
and
add
int3
push
mov
or
inc
push
arpl
cmps
hlt
cmc
jb
jle
push
fnstenv
aam
mov
pop
jle
cmps
push
scas
sbb
xor
lods
and
fmul
push
pusha
add
jge
out
mov
std
push
(bad)
imul
jle
pop
ficom
mov
sbb
(bad)
mov
push
push
xlat
icebp
das
mov
(bad)
scas
add
test
push
adc
test
xor
add
xchg
arpl
popa
(bad)
outs
sahf
lods
pop
cmp
lods
cmp
iret
mov
sti
push
or
mov
out
scas
stos
(bad)
jne
jne
jne
sbb
sbb
jmp
outs
mov
add
mov
jo
dec
loopne
add
mov
loopne
scas
dec
call
mov
lods
mov
push
or
mov
sbb
jne
popf
mov
popf
cmp
mov
scas
movs
cmc
push
mov
sub
mov
mov
rcr
loopne
push
cmps
push
popa
jbe
ins
dec
pop
hlt
mov
sub
lods
out
scas
stos
(bad)
xor
popf
clc
push
ficomp
adc
or
test
jmp
sub
mov
(bad)
pop
pop
pop
pop
daa
mov
out
push
inc
add
in
or
pop
enter
dec
add
sub
mov
iret
jne
ror
dec
jae
hlt
outs
aad
imul
inc
jle
inc
mov
lock
and
add
add
add
add
cmp
jmp
in
mov
lea
out
aad
aad
repnz
out
fst
ret
cmp
cld
rol
jnp
test
cmc
add
pop
fwait
push
or
push
inc
int
jnp
push
jnp
push
push
xlat
leave
sub
getsec
cmps
ss
lea
rcr
jmp
stos
add
mov
fst
aad
jne
stos
icebp
jnp
jno
nop
mov
or
cmp
pop
sbb
adc
fucomi
stos
jno
pop
pop
pop
pop
xchg
ffreep
lea
mov
(bad)
mov
xor
pop
pop
pop
sbb
(bad)
lods
out
mov
stos
stos
stos
jmp
test
mov
pop
lods
mov
shl
xlat
xor
fdiv
lods
out
mov
stos
stos
stos
jmp
leave
outs
loope
mov
jecxz
and
adc
fild
adc
shr
in
dec
push
fstp
cli
cmps
jg
push
outs
mov
fistp
bnd
(bad)
(bad)
sub
stc
sti
jecxz
(bad)
jecxz
not
lahf
jge
mov
mov
jl
pop
std
rcr
inc
dec
xchg
repz
cmp
shl
scas
cld
pop
(bad)
cmp
std
fstp
popf
popf
jecxz
std
rcr
xchg
jge
sbb
in
dec
lods
mul
adc
mov
add
add
add
mov
loope
pop
pop
jnp
stos
loop
cdq
add
add
fimul
mov
sub
mov
sti
jg
out
in
std
scas
call
xchg
std
dec
inc
(bad)
sbb
idiv
test
dec
xchg
inc
push
mov
aas
jmp
std
lahf
push
jg
and
fdivrp
or
scas
jns
in
cld
lea
ficom
and
test
rcr
adc
nop
mov
bound
in
lock
aad
jno
sub
add
push
jg
xchg
cwde
dec
pop
jmp
arpl
(bad)
outs
std
(bad)
in
jg
aaa
retf
cmp
(bad)
enter
std
fstp
jbe
movs
mov
xor
popf
lahf
imul
mov
(bad)
in
jnp
lods
scas
jmp
test
lods
mul
mov
add
add
das
push
push
aad
clc
dec
push
add
cld
add
pusha
retf
retf
xor
(bad)
sti
jg
out
leave
scas
(bad)
jmp
push
loopne
cmps
stc
in
das
imul
jbe
fstp
push
aas
inc
fwait
repz
ds
std
mov
mov
pop
(bad)
cli
leave
jmp
idiv
mov
das
xchg
jae
scas
xor
xchg
push
xlat
out
aad
pop
mov
fdiv
stos
jge
cmp
pop
sar
das
mov
pop
pop
jnp
stos
loop
cdq
add
mov
lods
aaa
or
pop
out
push
push
lea
jle
out
xchg
jg
xchg
daa
mov
mov
adc
mov
xchg
ficomp
dec
addr16
aas
jmp
call
retf
xor
cmp
push
mov
(bad)
fmulp
sub
mov
rcr
push
div
mov
add
clc
ror
pop
sti
fcmove
jg
outs
jmp
ficomp
xlat
mov
fidiv
add
mov
lahf
jl
jmp
mov
push
lds
sub
aaa
push
aas
jo
inc
iret
add
lock
xor
sbb
cli
(bad)
aaa
mov
ds
(bad)
sar
pop
call
cmp
mov
sub
mov
je
mov
push
xchg
pop
(bad)
lock
outs
js
sbb
scas
jle
stos
daa
push
pop
jno
cmp
fst
xchg
lahf
cli
test
repnz
mov
ds
mov
mov
jle
xlat
jg
in
sti
mov
jge
repnz
jb
inc
aas
hlt
inc
xchg
pop
cld
rcr
mov
out
jl
in
mov
pop
out
dec
push
xlat
mov
outs
mov
or
mov
add
xchg
cs
pop
push
push
xlat
jle
stos
clc
dec
es
push
sbb
nop
dec
jecxz
add
sub
test
jge
div
push
mov
push
scas
sub
in
cli
into
ja
jae
in
push
dec
mov
not
dec
add
pop
(bad)
stc
lahf
(bad)
stc
loop
dec
scas
cld
dec
jno
fdivrp
out
dec
sahf
std
in
addr16
out
jle
mov
jmp
cs
scas
jae
leave
lea
mov
shl
repz
mov
mov
mov
mov
jle
xchg
daa
das
jl
or
sub
jmp
out
cmp
jns
fcmovnu
ficomp
mov
call
pop
shl
or
mov
js
jns
mov
jne
inc
lods
mov
fs
or
add
cmp
test
lahf
(bad)
cld
in
pop
cli
push
jno
push
cli
rol
pop
pop
cmp
(bad)
xor
pop
pop
sbb
imul
pop
and
pop
stc
enter
add
idiv
jbe
imul
out
es
jge
in
xlat
mov
mov
mov
mov
pop
sti
ficom
gs
fcmovnu
jbe
mov
test
cmp
(bad)
out
retf
jns
repnz
mov
push
cs
dec
mov
jmp
fmul
inc
sub
jg
push
add
push
push
xlat
cmps
aam
clc
push
xchg
test
cmps
cmp
sbb
pop
popf
fbstp
in
cmc
cmp
(bad)
out
gs
test
jbe
sub
sbb
cwde
or
mov
into
test
mov
adc
repnz
jp
xchg
sahf
xor
idiv
repz
aas
jg
fucomp
pop
mov
pop
pop
repnz
xchg
xchg
cmps
adc
jecxz
and
out
aas
cli
ror
daa
aas
stc
leave
xchg
mul
mov
mov
xchg
pop
out
jb
leave
paddb
sete
loope
jne
lock
mov
pop
jo
in
aaa
mov
jo
sbb
jg
inc
shl
into
cmp
int
retf
hlt
(bad)
jg
(bad)
dec
sbb
dec
outs
jp
jno
das
mov
aas
sti
fst
(bad)
pop
mov
or
xor
mov
das
inc
ins
push
fsub
retf
mov
out
dec
push
xlat
or
add
in
or
pop
lock
and
or
mov
sbb
add
mov
mov
aad
scas
mov
mov
mov
into
or
cld
in
xchg
nop
cs
out
or
jb
pop
repnz
xchg
dec
sahf
(bad)
hlt
cmps
pop
mov
push
or
xor
scas
jg
jmp
dec
sti
loope
(bad)
loope
jae
sti
fadd
jns
adc
scas
fcomp
add
cmp
cmp
mov
out
jae
jno
in
push
in
stc
push
mov
aad
jbe
mov
mov
std
in
dec
call
je
into
jmp
mov
jne
fdivr
jns
and
cmp
jae
xor
add
xor
stc
mov
cmp
jg
or
sub
in
cmova
shl
pushf
jae
dec
inc
mov
xchg
scas
scas
adc
mov
pop
mov
inc
loopne
add
push
push
xlat
inc
test
icebp
sub
pusha
jmp
pusha
xchg
jge
jl
(bad)
test
jno
imul
(bad)
rcl
mov
cmp
icebp
(bad)
jg
rcr
adc
dec
pop
cmp
addr16
cmps
out
idiv
push
add
and
jmp
lods
add
sahf
jns
ins
sbb
cli
ror
mov
mov
arpl
sti
fadd
arpl
dec
jl
adc
aas
mov
fdivp
loopne
pop
pop
or
and
add
pusha
dec
cmp
sub
fwait
test
aas
jb
loopne
jle
test
pop
cld
loopne
or
es
push
mov
in
out
add
mov
cmp
retf
(bad)
sub
imul
fs
jmp
jmp
sbb
and
mov
sbb
push
stos
loop
test
shr
add
push
stos
dec
lahf
cmp
jecxz
or
data16
out
imul
movs
or
rcr
shl
in
jg
add
dec
das
mov
(bad)
rol
in
data16
and
hlt
into
cmp
mov
sub
out
std
fiadd
ins
out
pop
jae
jmp
xchg
mov
sbb
jp
bnd
sbb
dec
dec
aas
std
hlt
add
dec
fiadd
add
or
jb
rcl
cmp
or
cmp
push
fwait
inc
mov
or
pop
jne
jns
push
lahf
cmp
outs
jl
sbb
lahf
stc
int3
addr16
pop
pop
loope
loope
popf
pop
fdiv
pusha
inc
sub
fsubr
fdivr
out
dec
push
xlat
leave
mov
add
in
pop
add
add
ins
push
lods
mov
adc
push
add
jb
scas
into
cmps
jne
pop
mov
and
xchg
dec
sbb
cmp
fwait
mov
inc
sub
pop
pushf
xor
add
or
add
cli
iret
(bad)
stc
aas
dec
mov
(bad)
dec
add
mov
or
sti
fdivp
mov
ins
mov
repnz
(bad)
mov
push
jae
cmp
cmps
lods
lahf
std
dec
popf
mov
into
adc
add
add
adc
xchg
xor
in
cwde
div
fsubr
inc
pusha
clc
cwde
(bad)
cmp
je
rol
cmp
jo
sbb
mov
retf
cmp
in
fs
jmp
jmp
cmp
and
add
jmp
sub
mov
lods
pop
inc
dec
mov
das
loop
movs
or
in
jnp
imul
repz
add
mov
stc
out
out
(bad)
out
ror
ret
pop
rol
loopne
jle
adc
add
aas
mov
jg
dec
jmp
ds
adc
ror
aad
out
aas
inc
(bad)
cmp
xlat
(bad)
cli
pop
dec
(bad)
std
mov
sbb
pop
jb
sar
das
in
cli
dec
mov
add
(bad)
retf
aaa
loope
je
add
ins
or
lahf
xor
push
sahf
add
pop
dec
scas
dec
jle
inc
popf
inc
test
jecxz
pop
pop
push
mov
mov
xchg
leave
pop
fadd
jne
fisttp
aad
jb
add
js
add
xor
in
add
aad
inc
mov
mov
push
mov
push
(bad)
xlat
jmp
sub
jmp
rol
inc
mov
mov
adc
push
hlt
push
inc
cs
scas
push
cmp
pop
jmp
pop
int3
int
dec
mov
push
and
xchg
sbb
mov
pop
stos
enter
sahf
and
push
pop
dec
add
sti
outs
daa
(bad)
cld
lahf
push
xor
daa
dec
jo
popf
jl
add
jecxz
cmp
test
mov
inc
outs
and
sar
adc
inc
stc
cmp
sub
div
dec
(bad)
add
shr
push
lea
pop
mov
ror
cmp
ficom
add
pop
lods
push
cld
push
pop
shr
aad
push
jg
mov
adc
lods
inc
loopne
imul
add
mov
loopne
aaa
jmp
fisttp
mov
cli
dec
(bad)
jmp
jg
mov
jg
iret
data16
push
fistp
push
push
ins
pop
jbe
cs
adc
add
(bad)
mov
std
cmp
out
int3
repnz
jle
inc
stc
imul
push
shl
xchg
outs
rol
ret
repz
add
and
je
out
loopne
and
in
mov
jge
sahf
retf
fadd
or
cld
jb
repnz
push
test
lea
pusha
push
xlat
leave
movs
push
shr
push
sub
or
add
push
jl
jmp
int3
push
scas
movs
sbb
push
ret
sub
or
(bad)
jno
adc
fs
mov
sahf
not
or
mov
lods
inc
psubb
dec
dec
sbb
(bad)
push
aas
sahf
cld
mov
add
cmp
or
dec
dec
loopne
pop
add
mov
jo
add
sub
push
or
add
mov
or
push
hlt
in
inc
shl
scas
xor
not
fstp
cmp
pop
xlat
data16
stc
cmp
lock
add
cmp
pusha
in
jo
jns
pusha
outs
pop
(bad)
xchg
cmp
sbb
xchg
scas
lds
mov
mov
xchg
push
iret
bound
call
jp
out
in
not
pop
std
sub
push
pop
daa
mov
push
mov
or
mov
xor
loop
aad
rol
add
repz
sbb
icebp
imul
jle
(bad)
ins
jp
or
adc
push
cmps
das
in
repz
inc
and
sti
jg
rcl
jl
push
dec
std
mov
jg
out
(bad)
frstor
pusha
es
add
sub
xchg
mov
aas
mov
lods
add
xor
push
pop
mov
cdq
jb
(bad)
aaa
mov
mov
jns
fistp
pop
ja
mov
in
cld
or
xchg
mov
add
imul
fmul
add
jnp
or
sub
add
fnstsw
test
popf
hlt
push
(bad)
cmp
pusha
push
xlat
push
aad
clc
push
adc
(bad)
jmp
jecxz
push
push
in
arpl
ja
cmps
popf
popa
push
add
and
add
(bad)
cmp
std
lods
add
(bad)
cmp
xor
xor
or
push
addr16
dec
add
xchg
(bad)
ins
mov
mov
add
or
jb
stc
add
loop
lods
add
sbb
dec
pop
adc
call
sbb
add
pop
out
pusha
and
mov
push
sub
inc
xor
loopne
dec
scas
cmp
pusha
out
aas
sbb
add
push
or
std
or
ret
cdq
sti
cwde
test
jmp
cmp
aad
mov
cmp
mov
lds
adc
jmp
xchg
add
jle
lahf
pop
jle
in
jecxz
cmp
and
add
pop
dec
add
cmc
jb
test
mov
adc
int3
dec
add
nop
loop
push
dec
in
mov
push
add
and
cmp
sub
in
repnz
cmp
mov
cmp
mov
cmp
nop
(bad)
xor
loop
add
or
adc
out
push
xchg
xchg
xor
push
rcr
pop
stos
imul
mov
jle
pop
inc
xchg
xor
jl
lds
mov
mov
lods
addr16
cmp
aad
mov
mov
mov
mov
push
imul
push
shl
(bad)
jns
sub
or
repnz
cmp
add
sub
add
pusha
adc
push
(bad)
ficomp
imul
in
cld
lea
pop
sbb
adc
fwait
jne
leave
adc
mov
icebp
adc
mov
dec
das
outs
jo
mov
in
(bad)
cmp
jae
mov
ins
fs
jg
and
adc
jl
scas
jae
mov
cld
or
sbb
cmp
or
mov
(bad)
fcomp
movs
pop
mov
jge
les
add
mov
cmp
out
dec
push
xlat
leave
scas
add
mov
add
in
jmp
push
add
ja
add
inc
xchg
pop
add
mov
ficom
jecxz
rcr
jl
dec
inc
add
add
add
shl
add
add
dec
pop
stc
sub
fild
add
mov
adc
mov
jl
pop
cmp
xor
inc
mov
add
xchg
sbb
mov
call
jns
cs
add
into
add
add
cmp
cmp
and
and
sar
inc
add
(bad)
xor
cmp
pop
int3
xchg
push
pop
pop
out
cmps
aas
div
push
das
pop
pop
xchg
shr
add
enter
pop
inc
pusha
pop
shr
aad
adc
cs
add
iret
push
loope
scas
jg
jmp
pop
mov
fcom
sbb
inc
add
rol
lods
sbb
outs
push
adc
cmp
sti
retf
jg
das
iret
add
push
inc
es
loopne
jp
out
outs
loopne
push
(bad)
ret
mov
jmp
cmp
add
(bad)
or
sbb
repz
push
pop
div
ficomp
leave
sar
and
cmp
sub
out
cld
in
cmp
rol
lods
add
loopne
add
call
cmp
(bad)
mov
cmp
xlat
cli
in
cmps
mov
into
cmp
add
in
popa
movntps
not
jge
cmp
out
dec
push
xlat
loope
or
jbe
add
jbe
add
in
jmp
dec
add
sub
jge
pop
fild
lahf
jne
mov
xlat
or
cmp
add
add
inc
mov
pop
mov
sbb
adc
icebp
das
xchg
test
dec
and
sbb
and
(bad)
shl
cwde
je
popf
arpl
pop
xor
inc
aam
ins
xchg
pop
sbb
xor
xchg
xchg
cmp
mov
add
into
dec
push
out
mov
fadd
loop
jne
test
add
or
pop
das
inc
xor
dec
sbb
in
jecxz
xchg
xchg
stc
test
sti
sbb
fisubr
xchg
jmp
jmp
add
cs
pop
shr
aad
pop
mov
scas
xchg
cmp
lods
xchg
into
jle
(bad)
jno
fcmovne
cmp
xor
jl
push
call
add
add
ror
add
cmp
into
fistp
das
jo
je
fdiv
inc
cdq
cmp
cwde
test
fldz
fcom
xchg
in
add
add
retf
jle
int3
jle
sbb
gs
xchg
in
out
sbb
das
pop
(bad)
and
retf
es
repz
retf
icebp
pop
stos
in
into
or
adc
or
sbb
inc
stc
cmp
test
fadd
add
mov
jp
fwait
retf
sahf
pop
inc
iret
cmc
lahf
cmc
sahf
mov
imul
jg
int3
sti
stos
lahf
retf
ins
stos
cmc
mov
or
mov
pusha
push
xlat
xor
mov
xchg
jno
push
add
shl
push
jno
sub
das
and
cmp
fistp
jae
jnp
ror
pushf
push
or
rol
cmps
push
mov
add
mov
pop
pusha
cs
je
(bad)
cmc
loopne
cmp
push
xchg
add
push
call
into
(bad)
mov
cmp
mov
movs
and
sbb
(bad)
xor
data16
lahf
jns
dec
mov
jecxz
into
and
jecxz
fs
(bad)
or
inc
mov
mov
xchg
jg
movs
enter
sbb
test
mov
jp
and
js
adc
scas
jge
imul
hlt
dec
mov
sbb
ror
cmp
popf
jns
aas
sbb
out
aad
pop
mov
cmp
pop
lock
push
xlat
push
xchg
retf
jle
loopne
jbe
jbe
add
in
nop
rol
ds
in
pop
fimul
in
addr16
cmp
ret
pop
pop
inc
mov
cwde
and
or
sbb
add
add
xor
or
jo
inc
cmps
rol
add
xchg
push
sub
in
jge
dec
pop
jmp
imul
imul
mov
dec
(bad)
arpl
and
scas
adc
fisubr
test
dec
out
inc
inc
cmp
xchg
xor
adc
ins
mov
add
mov
add
rol
or
dec
jae
lahf
(bad)
cld
out
push
ret
enter
mov
sub
out
cmc
sahf
scas
cmp
mov
lock
add
add
cmp
or
add
inc
daa
pop
div
fisub
arpl
sbb
out
(bad)
out
sbb
clc
(bad)
in
out
jp
jmp
sbb
daa
pusha
test
add
and
inc
add
ins
jmp
push
xor
(bad)
mov
or
pop
pop
pushf
lods
xlat
(bad)
int
test
push
jbe
or
add
mov
clc
mov
sar
into
jp
push
dec
shl
sbb
xor
mov
cmps
cmp
mov
push
pinsrw
add
xlat
aad
pop
and
rol
std
xchg
push
or
inc
add
sub
inc
ins
add
(bad)
fdivp
cs
(bad)
out
std
vpsllq
int3
pop
pusha
lock
test
sbb
or
ins
ret
add
push
jge
push
fisttp
sahf
in
jmp
rol
jg
pop
jle
repnz
jge
repnz
ja
jae
lds
mov
inc
lahf
add
xchg
mov
sbb
dec
cwde
adc
(bad)
mov
add
imul
cdq
ss
push
int3
enter
dec
fiadd
add
aas
add
dec
sub
mov
test
sub
loopne
add
mov
dec
jge
retf
sub
call
(bad)
fldcw
pop
stc
dec
pop
push
and
aad
loope
add
or
movs
add
pushf
ds
push
or
ins
xor
scas
mov
stc
into
ja
inc
lds
adc
sti
fcmovbe
retf
call
mov
ds
nop
ins
pop
lods
mul
add
jns
pop
ror
pop
pop
pop
push
or
loop
aad
jg
test
xchg
add
out
jg
(bad)
call
aas
mov
add
add
daa
aas
cmp
sbb
cmp
dec
sar
sti
mov
cmps
xor
aaa
jno
inc
lahf
mov
add
mov
cdq
or
jmp
sbb
xchg
xor
es
push
push
je
mov
mov
pop
cmps
repnz
popa
cs
sahf
pushf
dec
out
leave
jle
cwde
add
out
cmp
ins
mov
fdecstp
pushf
pop
(bad)
sub
push
push
loopne
mov
inc
shl
cmp
test
add
shl
add
in
and
dec
not
pop
inc
in
or
fcmovnu
push
call
mov
icebp
mov
test
cwde
or
mov
ins
pop
push
das
pop
pop
xchg
mov
push
add
lods
jo
lea
fadd
mov
imul
add
in
inc
lahf
jno
mov
call
jge
lds
fwait
cld
hlt
dec
push
push
sub
push
mov
add
inc
sub
fdivr
mov
aam
in
std
xchg
out
cmp
add
jmp
and
push
pop
cmp
mov
jno
or
xor
dec
pop
cmps
mov
add
movs
add
cmp
adc
sbb
jb
mov
aam
adc
and
je
mov
jnp
movs
in
lods
push
push
scas
xor
pop
addr16
xchg
dec
inc
(bad)
fisubr
shr
dec
pusha
or
and
fadd
in
int3
mov
out
cmp
or
jnp
cmp
out
pusha
mov
mov
xchg
scas
scas
ret
stos
push
fsubr
add
sbb
sub
sub
adc
push
leave
add
inc
mov
cmp
out
push
and
push
xor
pop
inc
dec
fdivr
cld
imul
mul
cld
cmp
lods
add
and
and
add
into
sub
daa
out
sbb
lahf
imul
jne
pop
movs
dec
pop
inc
popf
jmp
push
inc
and
jo
inc
(bad)
jne
(bad)
sub
into
leave
mov
dec
jmp
mov
xchg
push
clc
mov
sti
mov
mov
ds
mov
adc
mov
pop
and
dec
push
test
cld
or
sti
xchg
sbb
pop
jo
mov
movs
test
rcr
out
pop
or
mov
(bad)
sti
rcl
jne
aad
mov
pop
sbb
test
pop
fdivr
pop
movs
jp
retf
sbb
add
pop
test
(bad)
outs
cld
inc
or
mov
inc
shl
push
mov
and
(bad)
sbb
push
mov
fidiv
add
lods
xor
cld
add
dec
daa
pop
push
lock
dec
rol
jae
call
xchg
jl
retf
jp
mov
mov
movs
cmp
or
inc
cmp
and
cmp
dec
retf
dec
lods
movs
xor
add
and
add
pop
ror
xchg
stos
gs
add
bnd
pop
cmp
push
mov
push
imul
jp
add
nop
outs
jp
pop
pandn
outs
mov
pop
dec
mov
push
add
lods
add
sbb
aam
add
and
xchg
push
mov
mov
jg
cld
out
retf
xlat
and
dec
mov
sub
in
adc
cmp
and
xor
jl
xlat
xor
inc
pushf
sub
pusha
sub
push
mov
cmp
popf
inc
inc
sub
adc
ins
xor
pop
cmp
sbb
stos
repz
pop
or
stc
cmp
test
or
retf
imul
test
inc
mov
fmul
cmp
shl
jne
imul
mov
bound
fsub
(bad)
or
sbb
fwait
pop
pusha
mov
mov
das
jmp
add
jno
ja
sbb
stc
add
(bad)
ins
dec
fstp
popf
cld
loop
(bad)
bound
cs
jmp
pop
int3
(bad)
mov
adc
inc
sbb
add
movs
push
sbb
add
dec
paddd
xchg
gs
or
add
fsubr
test
add
inc
sahf
mov
in
ds
xor
push
shr
aad
mov
cmp
cmp
push
out
sub
jae
pop
movs
mov
jmp
scas
jb
jbe
addr16
retf
cmp
call
add
and
adc
add
add
push
cmp
cmp
mov
push
sbb
mov
pop
aam
add
shr
push
cwde
aaa
cmp
add
add
inc
das
jp
jno
hlt
and
repz
and
lea
pop
ds
or
pop
retf
add
pusha
mov
movs
add
fcmovnb
sbb
les
sbb
or
(bad)
adc
sbb
add
add
stos
and
lock
push
imul
in
cs
or
add
add
and
retf
jp
out
sub
hlt
add
pop
shl
repz
adc
push
js
fidiv
sti
xchg
mov
addr16
fsubrp
sahf
ret
push
sbb
fwait
pop
push
mov
mov
(bad)
cmp
jbe
ins
push
stos
add
xor
pmuludq
pop
loop
jno
lods
mov
or
inc
imul
adc
sbb
gs
mov
xor
aam
das
and
adc
xor
jmp
cmps
cmp
add
add
ja
add
cld
in
pop
mov
jp
stc
leave
pop
call
out
add
imul
jmp
ins
pop
cmps
imul
gs
push
or
xchg
bnd
test
aas
loope
add
push
das
clc
add
out
mov
adc
jl
add
or
pop
or
jg
sub
cmps
pop
out
dec
push
push
push
or
jbe
ss
push
pop
shr
or
push
psubsb
call
push
dec
out
xlat
jle
xlat
mov
fucomp
jle
add
jecxz
imul
push
xor
arpl
add
mov
xor
sbb
push
sbb
cmovb
in
mov
les
scas
loope
add
or
push
fdivr
or
ror
and
in
call
rcr
or
sbb
push
scas
add
cmps
xor
out
inc
mov
shl
ret
sbb
xchg
inc
cmp
sub
out
dec
push
push
push
or
jbe
ss
push
pop
shr
or
cs
or
jno
add
mov
fdivr
sti
data16
add
clc
fs
outs
jle
adc
add
loopne
js
das
cld
test
sbb
adc
paddb
shr
xchg
rcr
adc
xchg
(bad)
add
stc
xor
pushf
dec
rcr
call
scas
xchg
cmc
lods
jge
add
jmp
in
add
push
pusha
scas
aaa
add
sar
(bad)
cmp
xor
shl
(bad)
cmp
(bad)
call
icebp
add
bnd
movs
pop
cmp
add
je
jne
push
fnstsw
add
jmp
jmp
mov
add
aas
push
movs
xlat
scas
ins
mov
stc
fsub
ds
jns
dec
pop
push
sbb
rol
rol
or
and
(bad)
jge
xor
add
repz
mov
dec
add
mov
das
lea
mov
add
jle
and
mov
or
sbb
popf
xchg
cmp
inc
xor
stos
loope
pop
sti
and
gs
cmps
fisubr
(bad)
pop
syscall
call
push
into
(bad)
fldenv
sti
mov
or
jnp
fcom
pop
inc
shr
ret
and
pop
nop
sbb
sahf
imul
loopne
push
hlt
mov
xor
pusha
or
mov
(bad)
sti
rcl
aad
sub
clc
mov
pop
push
or
mov
mov
mov
aaa
outs
inc
add
das
push
jmp
icebp
lea
ds
stc
iret
dec
ds
iret
dec
push
stc
enter
add
xchg
or
jb
rol
add
adc
add
nop
mov
repz
in
jle
mov
or
sbb
adc
mov
xchg
or
pop
cmp
cmp
cmp
push
push
mov
scas
ds
push
lahf
jg
mov
add
sbb
dec
retf
sub
aas
test
jmp
jns
jg
stos
mov
call
cld
cmp
mov
pop
mov
lds
daa
xor
sbb
shr
mov
aam
mov
add
in
add
aad
inc
add
cld
lea
adc
lea
xor
int3
jae
mov
js
in
(bad)
in
loope
adc
pop
sahf
mov
mov
test
repnz
xchg
add
push
rol
cmp
repz
popa
mov
loopne
inc
nop
mov
pop
add
ret
add
daa
inc
push
ret
push
pusha
scas
push
mov
loopne
or
mov
mov
int3
xor
movs
test
and
add
push
cdq
inc
inc
sbb
add
aas
adc
lock
test
scas
ror
fadd
dec
fdivrp
fdivp
xchg
out
nop
addr16
loopne
push
sbb
cli
jp
shr
das
pop
pop
pop
xor
fcomp
push
sbb
pop
cmp
add
cmp
shl
dec
inc
paddsw
inc
pop
or
or
xor
push
dec
and
adc
or
jb
rol
inc
adc
add
inc
mov
aad
lahf
jns
cwde
add
add
adc
sbb
pop
or
cmp
pop
mov
pop
jb
cmc
mov
jb
xchg
mov
add
leave
mov
(bad)
jno
das
adc
cmp
or
mov
jl
or
sbb
jmp
scas
mov
jg
ror
add
ret
je
loope
or
arpl
movs
pop
out
dec
push
push
pop
or
loopne
sbb
aam
clc
mov
das
ins
call
rcr
out
jno
mov
mov
daa
lock
out
jp
in
ja
jae
or
push
es
add
add
lea
(bad)
movs
add
(bad)
jbe
rol
in
arpl
movs
test
push
stos
add
add
shl
or
shr
inc
cmc
stc
(bad)
repz
jecxz
arpl
xlat
popf
mov
lock
mov
add
pushf
push
test
mov
adc
loopne
mov
jg
jl
in
outs
jl
jns
rcl
test
addr16
repz
std
lea
das
pop
pop
pop
xor
pop
pop
shr
or
push
(bad)
xchg
mov
stos
cmp
fild
(bad)
cmp
cs
lahf
jne
imul
mov
in
or
sub
xchg
stos
adc
add
sub
fiadd
sbb
add
adc
fild
rcr
mov
cli
ins
dec
mov
xor
aad
pop
add
pusha
popf
ds
repz
mov
jmp
cmc
xor
cmp
add
sub
imul
fst
ins
add
test
paddq
test
cmp
or
dec
jp
aas
jmp
iret
call
push
add
push
adc
shr
mov
xor
pop
pop
shr
or
cmps
in
pop
in
cld
(bad)
fnstsw
jo
lods
sub
retf
icebp
add
cli
(bad)
mov
in
jno
xor
xlat
mov
sbb
pop
imul
mov
jmp
in
fstp
sub
pop
nop
add
nop
add
inc
inc
fadd
pop
ror
cmp
add
sbb
jne
loopne
imul
push
sbb
jge
sub
out
fistp
add
inc
in
mov
loop
aam
xor
sahf
sti
popf
inc
mov
test
mov
test
cld
rol
mov
fiadd
mov
jmp
stos
add
pusha
push
xlat
xor
scas
jbe
add
add
jg
jl
test
add
into
jp
push
add
pop
xor
adc
add
cmps
push
sub
add
add
cwde
ret
addr16
xchg
cmc
or
sbb
fmul
stc
in
mov
push
sbb
mov
outs
xchg
jb
add
arpl
sar
pop
cld
fdivr
mov
cmp
js
and
or
jb
jne
rol
push
call
push
xchg
out
jmp
aaa
mov
push
jg
mov
add
mov
ins
push
push
das
pop
pop
pop
push
xor
add
aad
ins
adc
mov
jg
inc
push
pop
idiv
jp
cli
adc
add
mov
ins
pop
cld
loopne
daa
dec
jns
push
retf
outs
ja
fist
add
add
mov
mov
clc
mov
outs
and
outs
push
outs
das
scas
mov
add
jno
ins
or
add
in
lock
fistp
jl
dec
sub
rcl
pusha
or
ds
jmp
jnp
jge
cmc
jno
imul
pop
cdq
add
or
add
cmp
mov
cwde
sbb
or
dec
mov
aam
pop
outs
jo
mov
cmc
lods
daa
dec
jp
xchg
retf
fadd
add
cmp
mov
cmp
xlat
mov
sbb
(bad)
in
std
inc
sbb
mov
jnp
and
mov
sbb
into
and
fsubrp
push
scas
jp
stc
cld
xchg
das
jle
aas
adc
jo
add
js
push
jno
add
das
nop
add
mov
xor
ficomp
fcom
push
jne
loopne
movs
cmp
jne
sub
popf
(bad)
popf
add
test
jge
lods
dec
mov
sub
gs
cmp
jg
push
cmp
push
(bad)
pusha
neg
scas
and
ss
sbb
push
test
mov
jnp
rcr
mov
movs
stos
stos
imul
add
in
(bad)
push
sbb
and
or
es
sbb
popa
cmp
mov
jp
push
or
test
sbb
call
(bad)
std
dec
sti
scas
pop
std
rcr
popf
mov
cld
enter
or
jno
cmp
add
adc
add
cmp
and
or
jle
nop
mov
sub
push
inc
sub
in
dec
lods
cmp
add
jo
in
pop
mov
push
leave
xchg
inc
loop
jb
test
cmp
pop
add
add
sub
fsub
push
in
mov
pop
(bad)
clc
(bad)
outs
mov
mov
or
out
dec
push
push
push
aam
mov
pop
shr
enter
arpl
or
add
cmp
sub
pop
ds
lahf
cli
aam
es
jecxz
dec
enter
sub
adc
push
pusha
add
add
mov
inc
adc
add
adc
sub
aas
or
push
or
mov
sub
cmp
xor
mov
popf
xchg
in
xchg
jmp
in
fisub
movs
fcom
inc
test
add
inc
and
mov
pusha
out
jl
mov
test
enter
(bad)
repnz
iret
into
mov
imul
leave
daa
ds
mov
push
(bad)
aad
pop
mov
in
or
sbb
mov
or
pop
xchg
in
add
cmp
test
jle
add
push
rol
(bad)
mov
in
ins
xchg
xlat
mov
pop
push
push
icebp
add
popf
cmp
add
movs
or
or
or
mov
das
rcl
xor
pop
movs
inc
push
sbb
dec
add
lahf
(bad)
xlat
mov
cmc
ds
into
mov
cwde
jns
xor
or
fucom
add
or
sub
lods
outs
jne
shl
idiv
(bad)
jl
ss
hlt
inc
test
jne
add
jne
in
jmp
add
xor
jle
mov
add
jmp
lds
int3
addr16
dec
sbb
retf
sbb
fs
sub
imul
xor
mov
xchg
jp
or
push
or
mov
pop
cmc
mov
(bad)
(bad)
xlat
push
pop
xchg
cld
pop
xlat
cmp
xchg
xchg
std
in
arpl
fsubrp
push
add
adc
add
add
jecxz
or
sbb
xchg
push
cmp
jnp
jecxz
in
and
or
mov
xchg
scas
scas
sbb
outs
pop
add
add
rcr
cli
ins
jecxz
cmp
out
pop
push
jp
jle
fild
ds
in
mov
outs
pop
add
push
or
sbb
push
rol
adc
add
and
xchg
dec
add
adc
mov
stos
loope
push
mov
jp
mov
gs
add
pop
xchg
jge
imul
jmp
jae
cmc
mov
(bad)
jnp
inc
mov
add
mov
ins
xchg
mov
or
mov
clc
jge
idiv
add
xor
sbb
leave
es
movs
stos
stos
sub
and
mov
lock
add
(bad)
retf
inc
xchg
imul
dec
out
hlt
cli
xor
jo
sbb
std
cmc
sub
mov
std
in
xor
fdiv
adc
push
stc
pop
out
test
add
add
xchg
xor
pop
jp
ror
stos
mov
push
mov
(bad)
icebp
add
xchg
std
jb
lods
jmp
repz
scas
stos
pop
lahf
mov
ins
aas
add
ja
cmp
add
add
pop
add
rcr
enter
jae
adc
cmp
cmc
scas
pop
ret
mov
fadd
mov
test
jne
add
jne
in
jmp
jp
scas
push
inc
push
jmp
jge
aas
popa
pop
sti
dec
paddd
test
jg
jmp
xchg
dec
pop
sti
cs
pusha
cmp
shl
jo
xchg
rcr
leave
cli
sbb
into
sbb
ins
pop
and
out
xchg
in
push
sub
push
mov
lods
movs
in
add
sbb
jae
lods
imul
imul
stos
(bad)
or
dec
add
sbb
pusha
ret
ret
cs
jl
popf
mov
add
jge
jmp
aad
mov
jmp
dec
sbb
or
add
lock
mov
jnp
das
jmp
sbb
sbb
and
test
clc
lds
dec
push
repz
(bad)
xchg
neg
xor
xor
sbb
add
movs
xor
add
jb
retf
and
arpl
push
ror
imul
pop
das
ins
shr
pop
mov
dec
sbb
nop
or
pop
xor
dec
xchg
nop
mov
leave
xor
jecxz
sub
arpl
cmp
mov
and
mov
repz
pop
es
mov
mov
ins
or
mov
add
inc
sti
dec
enter
mov
xchg
lahf
cld
in
ins
sbb
(bad)
pop
mov
jg
(bad)
cld
iret
(bad)
mov
cmc
mov
push
fnstsw
jne
xchg
popa
pop
push
movs
loopne
or
jp
stos
dec
lods
rol
das
mov
add
fild
jl
or
jg
repnz
repz
add
add
inc
ret
and
(bad)
fild
pusha
sbb
and
xchg
imul
sbb
and
inc
add
sub
xor
mov
dec
sub
ror
pusha
retf
sbb
add
retf
pushw
int3
leave
aaa
loopne
mov
into
fnsave
cmp
(bad)
cmp
pop
ja
jns
pop
aaa
sar
sbb
push
cld
in
xchg
jge
xor
add
loopne
push
cs
addr16
push
(bad)
sbb
clc
xchg
(bad)
jl
imul
adc
sti
sbb
je
jne
push
fnstsw
jne
add
and
sub
mov
adc
lods
(bad)
cmp
mov
mov
jg
stc
into
ja
mov
rol
leave
mov
movs
mov
add
enter
cli
pop
sub
or
jl
sub
js
xchg
inc
push
fcom
ss
call
xor
pop
xchg
ins
jp
cli
push
push
or
int3
or
sbb
adc
xchg
pusha
add
add
cmp
pop
push
xor
add
ss
inc
movs
inc
pop
into
cmp
retf
add
scas
sar
adc
sbb
push
mov
ret
loope
adc
pop
add
aaa
cmp
inc
mov
scas
scas
scas
dec
dec
mov
push
sbb
test
add
add
jge
imul
jg
jmp
stos
std
lahf
pop
mov
ret
pop
(bad)
(bad)
shr
push
mov
jge
xchg
mov
pop
repz
sar
push
add
rcr
pop
or
cdq
ja
mov
and
aas
and
dec
(bad)
mov
js
mov
dec
cmp
ret
fucomp
jle
add
pushf
push
in
jecxz
xor
ins
outs
jnp
repnz
test
ins
shl
in
ins
cmps
jbe
loopne
mov
repz
ret
cmp
inc
and
and
jmp
(bad)
xchg
add
sbb
jp
movs
cmp
xor
addr16
xchg
xor
mov
rol
dec
ds
loope
xchg
rcl
cmp
inc
xor
scas
cmp
push
aam
inc
sbb
test
jmp
mov
add
lahf
push
mov
repnz
icebp
lea
aas
mov
lahf
call
xor
mov
out
js
movs
sbb
pop
loop
lds
movs
pop
add
outs
in
xchg
mov
pop
mov
add
sbb
pop
test
hlt
add
adc
in
xor
arpl
lahf
pop
aas
clc
shl
setp
loope
lahf
cmp
push
(bad)
xchg
hlt
mov
and
data16
mov
and
imul
adc
add
sbb
loop
(bad)
add
and
xor
in
push
repz
lock
rol
mov
out
iret
(bad)
in
iret
and
sub
mul
inc
(bad)
add
js
xor
or
add
jecxz
pop
adc
dec
arpl
mov
add
pop
es
jp
mov
cmps
(bad)
cmps
cmp
sub
fwait
cmp
adc
jmp
pop
movs
sbb
pop
or
cs
jae
mov
mov
(bad)
in
fistp
sub
pusha
or
add
add
sbb
xchg
loope
stc
les
pop
sub
dec
push
push
dec
push
pop
cdq
aaa
out
out
loope
stc
add
mov
adc
jnp
ror
pop
jbe
movs
addr16
aaa
cld
push
adc
adc
mov
sub
sbb
jmp
dec
ja
push
leave
fbstp
cmp
jecxz
adc
jno
add
imul
push
pop
shr
ins
add
cmp
mov
lea
enter
mov
jns
sti
fistp
rcr
lock
jg
cmps
mov
inc
stos
add
jge
or
add
aad
sub
sar
paddq
test
ror
add
ss
jle
mov
lahf
cld
in
(bad)
jg
(bad)
daa
das
jl
or
iret
jge
jae
iret
jns
jae
mov
dec
jl
or
aad
pop
aad
xchg
jmp
push
or
fbstp
shr
push
pusha
addr16
ror
ins
(bad)
or
ret
push
mov
mov
pusha
push
push
repnz
xchg
inc
fmul
push
movhps
or
sbb
out
jmp
aaa
jmp
cli
aam
push
push
out
icebp
(bad)
jg
dec
mov
pop
(bad)
repnz
sub
retf
pop
cmc
stos
leave
stos
pop
std
jmp
pop
(bad)
cli
loop
jb
add
and
pop
sti
aas
(bad)
stc
iret
das
pusha
or
popf
mov
add
mov
sbb
add
and
inc
out
jno
sbb
push
mov
outs
jg
in
push
add
(bad)
pop
mov
or
test
fdivp
mov
jbe
call
inc
(bad)
jl
mov
inc
(bad)
add
js
pop
add
inc
rcl
adc
int
fbld
mov
mov
adc
push
push
cli
push
lods
add
jo
aad
xlat
push
jp
inc
xor
jbe
mov
xor
test
in
jno
je
add
stos
or
jb
inc
xchg
jo
mov
loopne
jno
jnp
sub
adc
sar
std
rol
xchg
adc
mov
mov
dec
or
inc
(bad)
(bad)
not
div
mov
arpl
sti
pop
imul
out
call
std
out
leave
fdivp
cmps
mov
cmp
movs
sti
in
cmp
nop
jmp
dec
or
inc
and
adc
jno
inc
cdq
xor
repnz
jno
int3
cli
xor
mov
outs
pop
add
loopne
sub
loop
das
cs
cmp
fisubr
pop
(bad)
popa
add
std
jle
mov
jne
ror
mov
jbe
ins
pop
rcl
push
sbb
lock
cmc
dec
das
pop
push
mov
adc
daa
lods
gs
inc
xchg
pop
in
(bad)
cmp
xor
lea
or
lods
push
mov
mov
fwait
cmp
mov
ficomp
call
stc
inc
cmp
xchg
pushf
xchg
test
imul
push
add
or
iret
sbb
aad
dec
sub
sub
sbb
loope
push
pop
and
rol
call
ja
stos
inc
fdivr
sti
(bad)
rol
push
sti
mov
jle
mov
mov
jg
sub
xor
das
xchg
jne
push
inc
jo
vmwrite
pop
sbb
xor
xchg
and
pop
test
sbb
mov
inc
sbb
(bad)
retf
push
cmps
(bad)
mov
adc
cdq
mov
dec
cmp
add
adc
(bad)
xor
mov
test
pusha
sub
outs
lods
out
rcl
aad
inc
jae
mov
jne
in
jmp
jg
add
hlt
test
mov
out
mov
and
jecxz
pop
jle
in
lock
sub
(bad)
adc
push
rol
pop
out
xor
clc
inc
cmp
sub
mov
cmp
mov
mov
cmp
mov
cmps
lods
sahf
sahf
mov
test
stos
fdivr
retf
or
pop
push
add
and
mov
mov
inc
sub
pop
in
std
jmp
aad
add
popf
fsub
je
test
ins
retf
addr16
in
das
das
adc
cs
adc
adc
xchg
pusha
nop
push
dec
pop
inc
xlat
movs
push
(bad)
lock
loop
sub
push
add
rcr
mov
in
jno
inc
mov
push
xchg
rcr
jo
stc
xor
ss
adc
(bad)
cmps
stos
stos
imul
in
stos
push
sbb
xlat
hlt
add
add
sar
adc
or
pushf
sub
sahf
sub
mov
push
in
mov
push
mov
sbb
test
rcr
add
xor
and
daa
add
in
dec
out
mov
sbb
rcl
enter
ror
out
pop
ret
lods
push
add
xchg
mov
pop
push
jo
pushf
cmp
test
(bad)
cmp
rol
push
jae
mov
out
sbb
das
nop
pop
in
or
add
fsub
and
mov
ret
bnd
jo
pop
fdivp
sahf
not
adc
mov
add
pop
mov
std
fsubrp
sub
jnp
stos
xchg
dec
cdq
sub
add
int3
xchg
rcr
fstp
push
sub
stc
rcl
add
add
lds
fistp
arpl
jbe
ins
push
aad
sbb
add
ror
les
mov
(bad)
in
test
test
inc
loop
jmp
push
sub
test
push
pop
adc
imul
mov
cmps
movs
cmp
mov
pop
shl
fiadd
clc
adc
inc
mov
inc
inc
fcom
mov
retf
cmp
push
mov
fimul
push
push
ret
or
jno
test
enter
cdq
scas
mov
iret
mov
jb
mov
add
aas
sti
adc
in
jl
xchg
icebp
adc
xor
mov
mov
idiv
leave
stc
adc
out
add
sbb
shr
je
test
lea
pop
inc
mov
lock
ja
stos
stos
imul
jnp
add
add
and
adc
movs
add
clc
add
ret
xor
mov
sbb
lock
xchg
imul
mov
adc
loopne
(bad)
pusha
or
add
out
pop
mov
pop
arpl
sbb
dec
cli
test
stos
jne
inc
and
iret
cmp
adc
(bad)
repz
adc
lahf
nop
das
lock
rcl
jecxz
dec
sub
rcr
repz
inc
scas
mov
rcr
aaa
shl
clc
loop
push
sbb
sub
sahf
mov
aaa
rcl
lock
adc
mov
mov
sbb
mov
adc
add
push
xor
xchg
dec
or
retf
adc
int3
repnz
xchg
cmp
xor
mov
push
mov
je
add
nop
adc
push
cmp
out
dec
push
push
xlat
adc
enter
mov
imul
pop
ret
inc
and
push
jo
test
mov
mov
or
test
mov
add
jp
jno
les
shl
push
cmps
pop
add
stos
xor
mov
std
jmp
jo
retf
xlat
cmp
dec
cmp
mov
cmp
pop
jp
sub
in
shl
fiadd
pop
stc
xor
test
cmps
jb
loop
sub
inc
popf
sub
mov
xchg
adc
das
retf
jp
addr16
inc
retf
nop
add
retf
and
call
call
jmp
sti
fwait
and
and
add
xchg
or
sub
cmp
ins
jecxz
jb
mov
jle
test
add
clc
das
and
mov
dec
and
ja
stos
stos
jmp
stos
jp
out
jmp
pop
inc
push
push
cmp
pushf
adc
(bad)
push
rol
je
add
fdivr
inc
test
mov
inc
popa
dec
popf
pop
test
out
fidiv
rcl
dec
stos
loope
mov
imul
push
dec
inc
(bad)
je
jo
fdivr
in
loopne
pop
(bad)
iret
xor
scas
lock
cmps
mov
sahf
mov
mov
sti
sub
mov
fdivr
jns
jb
and
ins
xor
lahf
cmc
rep
addr16
in
(bad)
in
and
leave
and
ins
or
nop
out
jmp
sahf
adc
add
mov
sar
xor
add
ret
jb
add
repz
inc
lock
ficomp
push
mov
sahf
stc
sub
jae
mov
jmp
jl
push
aas
pop
pop
pop
push
int
and
scas
scas
sub
add
add
adc
ret
call
cwde
scas
pop
test
push
(bad)
jp
jb
mov
retf
addr16
inc
out
stos
push
mov
pop
mov
addr16
lods
sbb
add
(bad)
adc
xchg
mov
out
std
pop
push
or
out
imul
add
cmc
sar
add
and
and
call
mov
or
movs
mov
and
sbb
jle
ja
mov
pop
movs
xor
inc
add
pop
inc
adc
jns
sahf
jae
add
push
test
pop
punpckhbw
out
das
loopne
adc
cs
hlt
sub
add
pop
fucom
mov
sbb
pop
add
sub
or
xchg
jecxz
push
add
out
jae
cmc
inc
xlat
sub
fisubr
hlt
adc
xlat
add
jne
dec
xor
sbb
push
mov
inc
pop
or
xor
xchg
sub
aam
sahf
ret
vpslld
xor
div
mov
dec
mov
fucomp
outs
and
mov
sub
jmp
jne
sub
push
mov
lock
imul
add
add
pusha
xchg
lds
add
(bad)
mul
cld
stc
or
or
push
in
or
pop
test
mov
mov
inc
sbb
pop
and
retf
inc
add
and
lock
pusha
mov
add
add
sahf
fnstenv
daa
add
inc
mov
mov
sbb
adc
lea
push
cmp
xchg
hlt
or
fwait
pop
xchg
sahf
sub
outs
iret
sbb
xchg
pop
cmp
inc
cmp
loope
mov
imul
mov
retf
xor
inc
int
cmps
stos
stos
imul
add
aad
pusha
(bad)
ret
dec
test
sub
in
inc
and
dec
pop
push
dec
mov
jp
add
xchg
mov
in
in
add
add
stos
shr
cwde
shr
add
aaa
pop
rcl
xor
mov
das
pop
aam
sub
jg
mov
add
enter
repz
sbb
cmps
mov
jecxz
vcvtps2dq
jg
outs
jecxz
ret
pop
aad
xlat
add
test
inc
pusha
inc
mov
retf
mov
pop
add
arpl
sbb
sbb
jae
mov
push
fdivr
gs
pop
push
outs
xchg
ss
push
outs
in
clc
add
add
add
mov
mov
push
and
aam
sar
and
sar
mov
push
mov
pop
push
adc
fiadd
daa
nop
scas
scas
jge
push
xchg
ins
inc
sbb
dec
lea
and
push
dec
and
(bad)
sti
vpsrlq
xchg
dec
ret
xchg
push
loope
outs
inc
push
jp
push
mov
pusha
pusha
lods
xchg
mov
(bad)
test
sub
sub
leave
cmp
aas
mov
or
jp
jmp
sbb
cmps
mov
push
cmp
push
pop
add
mov
mov
stos
popa
nop
jmp
out
jl
stos
jmp
mov
lea
add
jae
mov
movs
fstp
mov
ins
pop
imul
cmp
jecxz
jp
scas
jns
imul
adc
cmps
retf
sbb
adc
lahf
xchg
test
cmp
adc
stos
imul
pop
shr
jecxz
inc
imul
add
mov
jo
jae
pop
add
inc
lods
rol
add
push
push
arpl
test
xor
mov
rep
loope
pop
add
xlat
mov
ja
(bad)
jmp
jle
mul
xor
scas
ja
arpl
push
gs
stc
(bad)
or
aad
fistp
cld
(bad)
into
fild
clc
or
(bad)
lock
jno
add
fnstenv
fstp
in
add
and
sbb
sar
jg
and
clc
sbb
add
lahf
mov
add
add
dec
(bad)
and
(bad)
ss
sahf
push
popf
cmp
sub
in
sbb
cld
pop
ins
inc
and
jge
cld
mov
jne
xor
(bad)
movs
push
sbb
mov
outs
or
inc
adc
ins
inc
push
fsub
loope
jl
xchg
xor
adc
mov
push
add
pop
add
mov
call
cmp
dec
repnz
dec
jmp
sbb
add
outs
add
add
or
rep
imul
mov
add
rcl
shr
aad
pop
or
data16
mov
cmp
pop
dec
out
mov
ret
ret
dec
inc
adc
push
pushf
jecxz
add
xchg
jne
cmp
or
loopne
aas
adc
int
pusha
adc
test
cld
xor
sub
pop
cmp
cmp
test
test
mul
pop
mov
clc
mov
sub
lods
push
jbe
imul
fsubr
inc
sahf
call
sub
sti
rcl
and
lock
add
outs
add
imul
add
and
fucomp
movs
sbb
dec
ret
mov
jne
dec
das
pop
in
dec
sub
or
mov
ret
mov
pop
lock
cld
aad
out
sbb
div
movs
xchg
xchg
arpl
ss
xlat
push
sbb
out
sub
mov
add
das
adc
into
mov
xchg
aaa
or
add
dec
add
or
jmp
and
stos
int3
cmc
in
int
outs
(bad)
xchg
aas
gs
pop
xchg
jns
pop
hlt
pusha
(bad)
dec
rcr
cld
mov
jne
xor
mov
pop
add
add
add
xchg
or
sbb
dec
sub
aaa
add
retf
mov
mov
add
inc
loopne
out
mov
stos
add
imul
popf
das
in
sub
sub
cs
mov
mov
retf
inc
retf
mov
jae
cmc
add
retf
pop
inc
adc
dec
sbb
dec
lods
add
clc
inc
mov
pop
mov
or
push
inc
nop
mov
sbb
add
retf
sbb
cmp
das
iret
pop
clc
pop
sbb
inc
pop
and
add
xor
mov
xchg
push
mov
jg
in
(bad)
mov
xor
cmp
lahf
scas
jg
jmp
sbb
into
adc
iret
adc
scas
(bad)
mov
ins
pop
(bad)
imul
pusha
mov
mov
das
push
dec
pop
pop
xchg
fst
add
jecxz
mov
or
add
add
sbb
fsubr
pusha
add
popa
pusha
inc
ret
dec
test
inc
sub
xabort
sub
mov
add
pop
sti
add
aam
or
and
loopne
jge
inc
mov
test
xchg
outs
jp
and
imul
add
pusha
or
sti
mov
std
or
aad
push
add
das
add
mov
jp
jo
cmp
popa
(bad)
aad
inc
das
fadd
pop
inc
mov
and
mov
xchg
xchg
add
add
mov
push
and
(bad)
cli
repnz
das
(bad)
rcr
(bad)
fs
or
inc
cdq
cmp
mov
gs
pop
xor
mov
jge
call
push
ja
add
push
pop
shr
inc
sbb
adc
jo
add
or
ins
add
ror
imul
adc
clc
add
lods
add
call
add
or
push
jb
(bad)
xchg
mov
sbb
lock
in
mov
loopne
add
aas
adc
lea
sbb
xor
outs
retf
aaa
inc
movs
mov
jno
(bad)
lock
add
mov
mov
xchg
and
sub
(bad)
jb
out
mov
push
mov
mov
movs
pop
add
add
dec
fwait
aas
retf
fldcw
pop
ficomp
add
sub
ficomp
cli
cs
cdq
mov
out
xchg
mov
mov
rcl
shl
sti
jge
jmp
sbb
sbb
pop
sub
sub
mov
into
aam
pusha
test
add
addr16
cli
test
push
jp
jb
add
xor
xor
in
inc
mov
pop
ret
pop
dec
rol
mov
ror
adc
(bad)
repz
mov
mov
gs
stos
cmp
inc
push
xchg
gs
push
xor
fisub
in
mov
push
pop
or
cmp
add
rcr
jmp
and
add
or
add
xor
sub
in
daa
ins
pusha
push
jp
dec
addr16
adc
cld
movs
mov
inc
shl
fild
jge
call
add
mov
add
dec
push
lods
into
cmp
je
int
fdivr
mov
mov
pop
mov
jne
in
jmp
rcl
movs
out
loopne
call
sbb
xchg
push
pop
cmp
movs
or
fucom
push
aaa
sub
int3
add
mov
add
jnp
jle
nop
add
inc
or
push
sbb
ins
sbb
dec
pop
dec
gs
add
cwde
aaa
or
aad
pop
stos
push
fisttp
add
mov
add
ja
outs
xchg
(bad)
adc
pushf
sbb
bound
inc
mov
ror
xchg
jns
xchg
nop
outs
ror
mov
add
aas
iret
xchg
mov
add
add
call
pushf
inc
jecxz
jb
pushf
mov
iret
repnz
pop
pop
push
jp
dec
out
cld
aad
ds
sti
popf
jmp
fwait
push
pop
shr
lea
and
or
and
cmp
shr
dec
or
mov
shl
in
test
fidivr
or
add
or
mov
jecxz
add
loopne
or
xlat
mov
sub
push
sar
cmp
sub
xchg
add
rcr
push
ins
rcr
inc
js
popa
pusha
stc
cmp
dec
in
cmp
dec
call
das
movs
aaa
jo
add
cli
sub
inc
rol
mov
adc
push
or
cmp
movaps
push
pop
push
addr16
and
aam
and
stc
enter
out
pushf
push
in
xor
xchg
addr16
arpl
sbb
sbb
lods
out
aad
jne
xor
cli
lea
add
ins
dec
lea
ins
sub
pop
mov
adc
mov
rcr
or
xlat
inc
mov
push
push
add
rol
mov
test
add
jle
stos
repz
addr16
add
jmp
pop
repz
jle
pop
not
retf
push
add
outs
sbb
mov
xor
push
add
das
jns
jnp
mov
and
sub
mov
add
xchg
gs
repz
and
mov
sar
push
add
or
cs
cmp
dec
loop
jmp
stos
jne
imul
pop
mov
add
jmp
push
mov
mov
outs
lea
mov
and
ret
add
dec
cmp
dec
inc
or
or
mov
inc
add
cmp
and
iret
adc
cmp
xlat
shl
push
rcl
daa
add
test
pop
add
and
add
sub
inc
shl
mov
lock
cmp
mov
pop
pop
lahf
sahf
mov
jmp
in
sahf
mov
not
clc
retf
jp
jmp
adc
jns
dec
cmp
sub
rcr
cmp
bound
jnp
clc
or
loop
aad
mov
xlat
mov
dec
out
pop
mov
mov
or
scas
scas
adc
ins
lods
rcr
jecxz
or
jae
hlt
push
arpl
sbb
sub
in
test
adc
or
jl
dec
arpl
fsub
push
cld
and
push
idiv
add
jle
aaa
rcr
push
push
or
rol
pop
fs
nop
inc
out
fistp
hlt
push
imul
retf
(bad)
mov
mov
sbb
mov
add
add
shl
das
ins
stc
inc
fwait
stc
inc
mov
xor
mov
ds
(bad)
retf
inc
not
test
loope
and
mov
out
cmps
jns
dec
test
sti
aas
retf
jp
sub
mov
add
jmp
mov
xchg
push
das
cwde
shr
dec
sbb
ins
movs
hlt
jbe
cli
aad
add
or
push
add
sub
das
ja
push
pop
mov
add
add
outs
sbb
jae
sbb
jnp
jmp
add
push
xor
test
je
icebp
dec
pusha
ins
into
jl
dec
dec
sbb
jmp
stc
add
loopne
and
dec
add
xor
bswap
sub
js
xor
out
pop
jno
std
adc
push
iret
aas
add
xor
push
ret
xchg
jns
mov
adc
icebp
retf
add
push
iret
popf
imul
dec
hlt
jge
pop
cmp
add
movs
pop
mov
dec
shl
scas
sbb
(bad)
push
push
pop
pop
xchg
jp
push
jmp
pop
mov
sbb
dec
mov
mov
sbb
add
scas
popa
jl
pop
adc
adc
add
xchg
mov
dec
pop
dec
rcr
into
dec
cmps
and
adc
mov
test
mov
scas
push
or
inc
sbb
mov
jl
shl
lds
stc
push
mov
and
pushf
imul
es
mov
aaa
push
lods
into
or
cmps
push
mov
fiadd
add
adc
adc
clc
add
ror
and
xchg
xchg
cmc
out
dec
xchg
fsubr
or
fnsave
mov
jmp
push
pusha
adc
jp
cs
nop
mov
jecxz
mov
(bad)
fiadd
xor
xchg
pop
loop
sbb
jge
std
and
xor
sub
outs
popa
jnp
psllw
idiv
jecxz
push
out
xchg
rcr
jb
pop
pop
and
cs
xor
mov
sbb
dec
test
cmps
aam
rol
(bad)
adc
push
shl
add
inc
(bad)
rol
mov
push
push
sub
inc
loop
or
iret
movs
loop
push
add
mov
adc
add
mov
or
sub
adc
(bad)
lea
push
mov
(bad)
jb
add
jae
fadd
ins
dec
sbb
daa
xlat
rol
leave
loopne
fcmovbe
mov
mov
sti
add
cmp
mov
pop
lea
pop
inc
add
(bad)
mov
and
add
fisubr
ret
push
lods
ins
add
pop
jb
or
icebp
mov
dec
add
cmp
pop
pop
jmp
xlat
sub
sub
dec
sbb
cmp
cmp
or
gs
sbb
(bad)
pop
cli
dec
and
push
pusha
dec
sahf
jno
enter
cwde
add
call
fcmovnb
aam
iret
mov
loope
call
(bad)
pusha
sbb
sub
and
lahf
stc
shl
jmp
fwait
push
pop
shr
mov
fdivr
mov
mov
pop
rol
xor
sub
cmp
cs
lods
retf
and
cmps
ss
pop
inc
pop
(bad)
sbb
cmps
popf
pusha
or
test
pop
or
push
loopne
sub
dec
jne
pushf
inc
or
add
out
pop
test
pop
or
adc
aad
shl
and
and
adc
jno
inc
add
pushf
inc
into
and
cmp
lods
repnz
xor
and
add
pusha
mov
or
add
mov
mov
call
mov
or
cmp
nop
outs
jnp
fist
adc
stc
pushf
sbb
stos
jae
test
iret
mov
jne
pusha
out
rol
sbb
cmp
add
cmp
add
ins
inc
mov
cld
mov
cmp
or
retf
gs
cld
cmp
xchg
(bad)
cmp
inc
dec
pop
dec
inc
mov
ins
push
add
sti
(bad)
jmp
shl
mov
pop
lea
fs
jmp
pop
scas
xchg
mov
jecxz
or
imul
loope
add
loop
or
outs
or
cwde
or
sbb
pusha
jno
add
mov
push
mov
imul
lods
mov
add
mov
pop
adc
lods
pop
lock
sti
fsub
nop
sbb
hlt
jmp
jecxz
xchg
pop
push
(bad)
xchg
push
retfw
call
loopne
or
mov
pop
sbb
in
sar
outs
ds
pushf
sub
push
imul
inc
aam
sar
jae
into
sar
push
aad
(bad)
loop
pop
out
add
data16
jnp
xor
loopne
xor
adc
add
mov
add
xchg
repz
sbb
rol
scas
popf
jg
xchg
scas
jb
jl
into
jb
adc
das
sbb
test
xchg
cmps
arpl
jne
pushf
into
lea
mov
out
sbb
sar
add
dec
inc
in
push
add
aad
pop
aad
aas
lods
push
sbb
push
jecxz
push
lds
(bad)
inc
loop
pop
rol
add
(bad)
add
jle
fwait
or
sbb
add
jl
les
das
add
adc
add
loopne
les
add
in
add
push
pop
jno
in
stos
sub
cwde
sub
mov
aam
xchg
scas
mov
mov
(bad)
leave
dec
cmp
sub
add
imul
inc
or
pop
or
mov
(bad)
lahf
test
push
mov
ins
pop
(bad)
retf
xor
addr16
or
or
jo
jp
jae
shr
xor
loope
push
sub
xor
sub
add
lock
out
xor
mov
sub
imul
add
add
enter
adc
loopne
adc
fwait
out
push
push
xlat
popa
push
mov
add
jmp
inc
(bad)
and
pop
push
in
les
pop
fisubr
sbb
jo
and
inc
pop
xor
nop
dec
sbb
or
or
fimul
and
mov
jl
cmp
mov
inc
loopne
cwde
pop
push
cmp
dec
test
lods
sub
inc
mov
and
push
dec
fwait
jb
fwait
aas
rol
mov
cmps
std
sbb
push
inc
pop
daa
inc
push
mov
and
jnp
stos
pop
push
push
(bad)
out
imul
inc
repz
ret
or
pusha
or
adc
xlat
jle
pop
mov
cmp
add
fisub
inc
test
jo
and
pop
adc
dec
jnp
(bad)
shl
pop
aaa
lock
push
cld
test
pusha
inc
or
sti
xchg
add
xor
add
add
jno
mov
pop
out
jns
test
ret
cmp
sbb
inc
popa
outs
ins
cmp
jg
xchg
xchg
rcr
sar
add
mov
or
in
jmp
pop
daa
lock
add
jmp
inc
sub
and
in
push
leave
jb
adc
jns
in
pop
inc
add
jmp
and
jl
retf
adc
mov
retf
loopne
clc
cmp
stos
cmp
test
add
fs
call
fwait
in
fadd
enter
sbb
popa
jbe
mov
sbb
(bad)
jmp
sbb
rcl
or
(bad)
in
iret
push
cmp
xchg
pop
dec
scas
movs
jae
jbe
pop
and
inc
ror
push
cmp
dec
add
cmp
pusha
jmp
mov
scas
sub
xlat
jmp
and
sbb
or
ret
mov
push
xchg
dec
cmp
in
pop
loopne
and
mov
fwait
jbe
add
adc
jge
fnsave
(bad)
jecxz
pop
daa
xor
sbb
out
push
out
je
stc
aaa
mov
jle
lahf
cmc
shr
popf
inc
mov
jno
jmp
pop
scas
xchg
push
out
inc
shr
jl
add
mov
sar
daa
add
fcomp
xchg
mov
movs
or
fwait
mov
pop
lsl
loopne
std
mov
add
mov
jno
rcr
mov
cmp
cs
pop
fcom
cmp
adc
cmp
mov
cmp
jo
repnz
ret
icebp
sub
mov
pop
and
or
sbb
outs
js
sbb
mov
cwde
add
adc
add
loop
add
iret
or
jo
iret
aas
add
cmp
nop
not
iret
je
xor
pop
nop
sub
cmp
cmp
dec
jno
add
jnp
lods
pop
mov
rcr
iret
mov
pusha
sar
fucomi
imul
dec
call
sub
dec
cmp
mov
inc
jae
fwait
out
push
push
xlat
mov
add
jmp
retf
pop
and
popa
sub
add
cmp
ins
retf
mov
or
test
add
xchg
je
jne
inc
add
enter
pop
loopne
sbb
lock
sti
test
jge
mov
xchg
cld
dec
rcr
push
rol
xor
ficom
jmp
loop
add
jmp
inc
and
jle
dec
fcom
sbb
push
sub
push
inc
add
push
fnstenv
inc
mov
pop
cmp
ret
out
sar
adc
add
add
mov
adc
aad
dec
clc
push
sar
in
push
inc
adc
jne
sbb
test
outs
cdq
test
sbb
or
cmp
jbe
jno
jb
ins
mov
hlt
dec
js
mov
shl
sar
or
cmp
cwde
dec
sub
inc
jns
jle
lods
jl
cdq
test
dec
or
sbb
pusha
idiv
mov
sahf
pop
out
in
push
push
add
enter
push
xchg
imul
cmp
cmova
cmp
pop
shr
mov
fucom
add
push
mov
adc
cmp
clc
jno
data16
loope
add
xchg
cmp
gs
add
fadd
jge
stc
cmp
push
mov
ror
cmp
jge
add
add
adc
les
or
dec
sti
cmp
cmps
mov
fdiv
sub
fucom
test
or
jnp
sti
sub
push
sbb
xchg
mov
cmp
mov
or
(bad)
scas
inc
or
out
push
or
sbb
rcl
inc
push
test
rcl
push
jae
sub
call
cli
and
xor
push
cmp
and
inc
xor
fnop
mov
fadd
popa
ins
and
sbb
push
sub
jo
je
mov
retf
mov
pop
add
fcmovnbe
jge
xor
imul
mov
xor
ficomp
addr16
call
mov
sbb
sub
out
aad
jne
aam
cmp
inc
sbb
stos
(bad)
mov
sub
or
sub
pusha
dec
nop
lock
ss
cld
adc
mov
ret
mov
or
push
inc
fild
rol
jge
mov
sbb
mov
loopne
dec
add
inc
daa
dec
or
das
nop
push
or
add
popa
push
nop
sub
aam
(bad)
dec
or
out
jns
jnp
movs
or
dec
scas
sbb
and
ret
std
push
aaa
add
dec
out
ja
fsubr
push
add
cmp
push
sar
or
jge
enter
out
repnz
arpl
call
jbe
sahf
mov
mov
mov
daa
adc
test
(bad)
add
ss
inc
fdiv
rcr
loop
sub
mov
xchg
mov
adc
and
daa
out
cmp
or
test
das
rcl
(bad)
sub
fnstsw
mov
(bad)
cmps
aad
mov
imul
xor
add
sbb
sbb
pushf
test
xchg
jo
sub
sahf
adc
adc
aam
dec
pop
(bad)
repz
inc
cld
sbb
outs
xchg
or
sbb
out
(bad)
pop
inc
(bad)
test
movs
mov
sub
inc
or
jb
pushf
xor
or
cmp
jmp
dec
ret
dec
sbb
sbb
das
enter
inc
iret
cmp
xchg
mov
popa
push
xor
test
fst
push
data16
sar
pop
cwde
pop
dec
imul
cmp
or
add
inc
sub
test
xchg
xor
pushf
cmp
sub
or
or
jecxz
jb
cmp
push
xlat
xor
add
cmp
ds
add
or
add
sbb
pop
rcr
mov
xchg
cmp
mov
int3
cmp
cmp
cmp
jne
pop
push
add
cmc
repz
iret
mov
xchg
out
sub
fild
jbe
mov
jne
in
jmp
or
loope
jno
add
or
pop
push
test
je
add
push
xor
rcl
add
dec
add
xchg
cmp
test
push
cmps
mov
ins
fdiv
cmp
sub
mov
repz
or
in
push
and
rol
(bad)
or
or
sub
and
push
mov
scas
add
push
pop
pop
xchg
std
test
into
inc
mov
push
add
add
jns
daa
sar
sahf
add
rcr
jecxz
and
pop
sub
ret
(bad)
adc
or
xchg
and
sbb
shl
sub
sahf
test
movs
jmp
cwde
ja
add
add
jmp
aaa
(bad)
xchg
retf
inc
pusha
(bad)
repz
xor
push
push
xlat
mov
xor
ins
push
pop
shr
sub
add
dec
fwait
aaa
ins
aam
cmp
gs
adc
jo
or
aad
inc
pusha
xor
inc
mov
sbb
not
add
mov
arpl
sbb
clc
sub
sbb
add
dec
cmp
push
popf
bound
cdq
mov
ds
and
call
or
cmp
or
es
enter
repz
enter
add
push
and
xchg
rcr
lds
xor
cmp
pop
lods
dec
cmp
mov
add
jmp
pushf
jecxz
dec
retf
sbb
pushf
pop
and
inc
mov
inc
dec
push
xor
pop
ret
sti
mov
clc
or
push
add
iret
pop
add
push
cld
add
sbb
add
or
jae
cmps
retf
jno
test
scas
imul
mov
sbb
add
aad
or
(bad)
sub
or
add
adc
and
lods
call
imul
(bad)
or
add
push
pop
and
(bad)
xchg
add
or
call
add
adc
sub
xchg
cld
sub
(bad)
jno
sub
mov
push
push
ret
mov
addr16
out
mov
retf
outs
sbb
push
or
xchg
mov
clc
add
imul
jae
mov
jp
sub
adc
fdivr
jp
into
adc
pinsrw
push
not
xchg
dec
dec
adc
call
ds
add
inc
adc
enter
in
popf
(bad)
or
fadd
mov
add
sbb
and
std
pop
mov
jp
xlat
sub
add
adc
jecxz
jb
jmp
sbb
push
xchg
sbb
inc
test
es
mov
imul
push
inc
pop
xor
xor
inc
nop
jecxz
test
add
call
lock
and
mov
jns
cmp
test
into
inc
test
xchg
adc
(bad)
dec
mov
inc
mov
retf
add
add
and
or
mov
add
in
(bad)
mov
add
enter
mov
ss
es
shl
sar
mov
and
je
sar
idiv
jle
xor
cmp
adc
or
ret
xchg
push
enter
pop
hlt
mov
iret
mov
sbb
loope
retf
enter
pushf
pop
popf
inc
sbb
mov
outs
lods
jo
push
cmp
fcom
xchg
xor
xchg
cli
loop
aad
mov
imul
inc
pop
mov
mov
sub
(bad)
je
fdivr
jg
dec
gs
fucom
test
mov
je
add
dec
call
pusha
mov
das
or
(bad)
std
or
add
movs
ins
cdq
mov
div
mov
and
nop
xchg
jb
jl
adc
stos
and
cmp
mov
pop
add
push
add
inc
jmp
(bad)
add
xchg
fs
iret
(bad)
popf
fild
loopne
loopne
xor
arpl
enter
popf
mov
or
fidiv
aas
in
sub
les
add
scas
xchg
jnp
cmp
xor
mov
dec
push
and
sar
stos
jo
frstor
scas
shl
mov
mov
mov
add
xlat
jle
js
xchg
mov
add
movs
mov
and
and
cwde
push
sub
into
in
and
mov
ins
rcl
ins
mov
xlat
add
sbb
push
imul
pop
add
out
mov
iret
jne
push
ins
in
push
or
ret
retf
xchg
repnz
sub
jmp
retf
xchg
or
push
(bad)
or
pop
lahf
into
and
mov
jle
add
xchg
into
sbb
add
adc
dec
jnp
stc
les
aam
xchg
add
loopne
pop
cmp
inc
sbb
jge
add
jp
add
jmp
add
cmp
cmovge
xchg
fdivr
in
jl
push
xlat
push
pop
sbb
hlt
mov
rcr
clc
jae
out
mov
add
jmp
push
mov
add
in
inc
lea
sbb
add
jmp
movs
push
push
je
cmp
repnz
cmp
add
loopne
aam
sbb
add
pop
pop
push
sub
push
add
mov
and
and
dec
cmp
shl
mov
mov
and
adc
fs
adc
or
push
mov
aam
jbe
dec
xchg
or
inc
xchg
jecxz
add
cs
mov
add
inc
add
mov
sbb
cmp
aas
in
sub
add
nop
xor
jo
sti
sub
mov
movs
add
loopne
cld
mov
scas
test
pop
pushf
dec
call
jo
rcr
pop
cmps
repnz
fidivr
scas
scas
scas
inc
mov
jmp
pop
stos
add
add
add
test
scas
jb
rcl
dec
out
add
loopne
loop
push
mov
cmp
and
and
add
cmp
mov
sbb
cmp
or
add
ror
add
cs
sbb
jo
sub
pop
dec
push
or
dec
test
vmread
ins
xor
push
add
rcr
pop
cli
add
sub
dec
outs
ins
dec
lahf
ss
xchg
loope
jmp
jge
xchg
add
outs
cs
shr
mov
push
(bad)
gs
jns
inc
scas
mov
call
xchg
lods
xor
test
test
cmps
fcmovnbe
jne
(bad)
out
aad
jne
aam
das
push
pop
sbb
mov
and
cwde
add
fisubr
sub
mov
and
jns
pop
mov
xchg
test
mov
add
call
outs
add
outs
lods
push
cld
xchg
ins
fmul
xchg
push
add
lea
ror
loop
ds
xor
ret
mov
inc
sub
jno
add
pop
js
and
jb
aad
pop
repnz
pop
jb
retf
add
or
les
adc
xor
mov
and
stos
sbb
repnz
scas
and
push
mov
mov
lds
cs
fld
add
jecxz
push
inc
stos
push
mov
je
pushf
scas
loope
hlt
add
sbb
add
lahf
ss
pop
data16
in
jl
mov
cmc
lds
add
xlat
pop
aad
mov
mov
loop
add
rol
retf
jge
(bad)
mov
push
mov
sbb
add
rcr
add
or
jecxz
mov
add
add
rol
js
xor
movs
out
jp
mov
xor
dec
retf
shl
jecxz
add
aad
mov
add
cmps
or
mov
xchg
(bad)
lock
test
adc
sbb
mov
std
sbb
test
aaa
sbb
or
cli
cs
add
ror
clc
dec
sub
jl
outs
adc
gs
jg
inc
xchg
mov
jb
jge
in
iret
jge
ins
sbb
popf
cwde
je
xor
mov
mov
push
aas
out
jns
sub
pusha
(bad)
cmc
push
ds
mov
mov
sbb
xor
pop
jnp
jecxz
pop
and
jge
add
push
das
pusha
and
xor
xchg
cli
mov
add
dec
cmp
push
mov
add
xor
sbb
add
push
jle
loopne
add
(bad)
sub
rol
add
pushf
movs
jl
or
imul
sbb
sub
add
mov
inc
and
rol
add
add
rcl
add
rcr
sahf
or
and
sub
jl
dec
sbb
fisub
inc
iret
xchg
push
mov
ficom
cmp
add
sub
aas
xor
adc
repz
aas
iret
scas
repz
gs
loopne
adc
jno
xchg
mov
xor
jne
aam
xor
push
sbb
stos
(bad)
or
xchg
nop
das
cmp
popf
xchg
dec
pop
jecxz
pop
jge
int
pop
push
mov
sti
(bad)
add
add
jno
add
inc
adc
jle
xor
sub
mov
scas
sbb
pop
push
call
and
retf
adc
sbb
pop
fadd
cs
jae
xor
xor
push
adc
jb
sub
cli
push
imul
(bad)
adc
push
mov
inc
jmp
sbb
stc
or
sahf
rol
repz
popa
dec
mov
sbb
int
ja
add
arpl
sbb
fidivr
or
mov
(bad)
add
lea
sbb
mov
scas
mov
sub
outs
cs
iret
mov
outs
mov
inc
inc
std
rol
mov
jmp
push
jecxz
pop
and
test
mov
inc
dec
dec
scas
(bad)
das
pop
or
lds
or
and
(bad)
push
cmps
sbb
push
repnz
hlt
or
cs
or
or
push
sahf
push
(bad)
or
loopne
das
cwde
cmc
add
push
add
push
fadd
jmp
pusha
(bad)
xchg
mov
xor
pop
xor
mov
test
mov
fldenv
lea
aas
dec
clc
xchg
jmp
sub
adc
mov
pop
jle
jno
test
scas
repz
loop
add
jo
add
sbb
fadd
ja
das
cmp
hlt
pop
(bad)
in
mov
mov
xchg
mov
enter
(bad)
repnz
push
scas
xchg
adc
(bad)
push
push
sbb
cdq
add
out
imul
jnp
sbb
sbb
xchg
sbb
nop
sbb
aam
cmp
push
mov
(bad)
jl
xchg
cmp
jle
or
fsubrp
outs
ja
loopne
xor
and
ds
aad
push
ret
fisubr
xor
add
inc
test
inc
cwde
push
enter
cmp
loope
xchg
imul
and
mov
mov
mov
add
add
test
add
xor
fsubr
mov
ror
inc
nop
dec
push
add
jl
cwde
inc
int3
or
dec
add
xor
cmp
pusha
mov
ds
mov
sbb
jno
pop
cmp
and
or
cmp
call
push
outs
scas
aas
xlat
mov
cmp
aad
sub
(bad)
add
cmp
jbe
in
inc
lea
push
inc
js
or
and
in
jmp
ja
or
pop
mov
inc
xchg
retf
add
mov
in
dec
ins
mov
mov
sbb
daa
adc
or
stos
(bad)
(bad)
(bad)
xor
retf
repz
xor
add
add
pop
add
adc
pop
(bad)
cs
add
pop
jle
shl
jp
or
sbb
push
stos
shr
sub
add
push
add
add
pop
push
and
mov
or
paddb
dec
cmp
ss
lea
psubsb
iret
mov
fbstp
mov
aad
sub
stc
scas
loop
pop
dec
sub
add
xchg
mov
jge
inc
add
repz
(bad)
jl
and
jnp
fidivr
dec
dec
das
rcr
add
inc
fld
loope
rcl
imul
adc
aad
mov
add
push
mov
mov
xor
sub
fild
sbb
imul
add
sub
or
xor
jb
outs
mov
or
(bad)
adc
loopne
add
adc
jae
add
add
fist
mov
es
imul
jge
fidiv
cmp
pop
push
daa
adc
stos
or
push
add
test
(bad)
add
add
test
(bad)
push
mov
call
ret
dec
daa
es
in
sahf
hlt
movs
mov
scas
ja
imul
jmp
mov
inc
inc
std
rol
mov
jmp
shr
inc
add
pop
js
xor
inc
lahf
leave
repnz
mov
ret
inc
add
pop
push
mov
pop
add
lahf
out
add
cmps
adc
sbb
test
mov
pop
or
iret
mov
out
add
xchg
movzx
push
sbb
pop
dec
adc
inc
and
out
out
add
popa
push
adc
hlt
add
add
loopne
loope
in
rcl
jg
inc
or
mov
xor
test
push
sti
imul
dec
adc
ds
out
jo
test
xor
cmp
mov
mov
add
pop
push
jecxz
pinsrw
push
add
(bad)
sbb
add
pusha
in
inc
hlt
sub
idiv
cmp
xchg
fidiv
ins
mov
inc
jmp
stos
add
xlat
pop
xor
xchg
or
mov
lea
or
jmp
xlat
add
clc
rcl
push
test
mov
popa
add
add
scas
ja
stos
cmp
or
push
sbb
outs
add
mov
repnz
push
add
pop
into
push
enter
adc
sub
mov
xor
mov
pop
cmp
adc
inc
and
add
mov
and
xor
xadd
xor
cwde
ins
cmp
jno
call
xchg
xor
add
or
add
add
jo
sar
cmp
add
jge
iret
aam
ror
mov
fnstsw
not
ins
dec
or
jnp
inc
and
in
cmps
lods
test
int
sub
push
pop
shr
outs
push
mov
adc
mov
sbb
in
idiv
ret
test
shl
adc
mov
xchg
aas
rol
imul
jmp
add
push
add
mov
cmps
and
nop
push
and
cwde
push
and
xor
adc
into
sbb
add
add
push
add
in
jge
mov
retf
jl
xor
mov
leave
cmp
inc
mov
xchg
pushf
inc
lock
je
adc
ja
adc
lods
add
lods
pushf
ins
sbb
rcr
cmp
int
dec
fidiv
inc
sti
inc
inc
lock
out
data16
inc
movs
jl
repz
iret
push
dec
je
scas
rcr
mov
inc
or
add
ins
push
inc
cdq
add
xchg
add
mov
add
xchg
mov
sti
test
rcl
call
popa
out
iret
sbb
lock
test
stos
int3
add
imul
sbb
xor
add
ret
inc
jp
add
lods
add
test
mov
mov
cmc
cwde
(bad)
push
adc
sub
in
inc
loopne
add
scas
and
aam
dec
fdivp
push
pusha
pusha
add
test
add
add
jns
push
out
jle
adc
lods
or
adc
es
pop
jo
jo
je
arpl
sbb
aaa
add
leave
daa
(bad)
jb
or
and
in
cmp
add
stc
jmp
fdiv
aam
mov
stos
add
xlat
push
adc
sub
imul
test
cdq
mov
adc
daa
shl
stos
fadd
loopne
pop
add
mov
fstp
add
add
in
or
push
mov
jecxz
add
popf
xor
cld
add
sbb
add
std
leave
xor
mov
ins
pop
push
xchg
daa
clc
mov
add
add
mov
add
test
push
imul
mov
mov
lahf
sub
das
out
lahf
jae
xchg
pop
stc
xchg
push
ss
std
pop
cmps
add
and
jno
adc
ss
sbb
add
fnop
xor
aaa
push
inc
push
sbb
dec
add
mov
loope
stc
es
xor
push
mov
shl
(bad)
sub
scas
sub
rol
inc
or
in
rol
sahf
shl
mov
mov
(bad)
or
and
cmp
sub
data16
and
ss
mov
popf
inc
mov
aam
push
add
repz
or
push
sub
or
das
pusha
add
inc
push
inc
(bad)
pop
mov
cdq
mov
jb
xchg
mov
jo
add
sti
mov
add
jne
rcl
sub
xor
iret
mov
fnstcw
stos
ror
fwait
jno
in
jp
(bad)
imul
outs
or
jecxz
dec
pop
mov
and
enter
pop
or
add
dec
loopne
adc
fidiv
and
hlt
jge
in
sub
xor
scas
cmc
mov
sbb
stos
add
xlat
loope
ror
call
or
xor
mov
pop
ret
jl
daa
rcr
imul
outs
ror
test
cmp
sar
stos
mov
sbb
add
pusha
shr
pop
call
and
sbb
add
push
inc
add
sub
stc
mov
pop
xchg
scas
mov
add
fistp
push
gs
jo
xor
pop
popa
mov
repnz
cld
aad
sbb
or
add
das
lea
add
mov
lock
xlat
or
mov
add
lahf
rcr
and
shl
retf
cmps
fnsave
outs
cmc
add
add
xor
pusha
push
js
or
pop
aad
sar
mov
pusha
xlat
loope
add
add
out
add
adc
pop
cs
jmp
add
jg
jp
out
dec
dec
fadd
sbb
stos
pop
inc
sbb
push
mov
stos
pop
push
mov
adc
xchg
push
jo
adc
retf
mov
add
aaa
jmp
repnz
xlat
mov
xchg
add
cli
xchg
mov
push
xchg
push
push
add
or
mov
les
sub
ins
jg
mov
dec
inc
or
mov
scas
xchg
jecxz
add
aas
imul
into
push
mov
shl
sbb
(bad)
dec
cmp
inc
and
or
pushf
cmp
test
xchg
(bad)
stc
add
sar
pop
push
std
add
add
popa
std
clc
(bad)
aas
pop
out
xor
jecxz
jbe
sub
add
xlat
push
xchg
or
dec
xchg
stc
push
hlt
(bad)
std
xor
mov
jle
clc
push
call
sbb
inc
sub
add
test
add
dec
stc
jmp
sbb
xor
jecxz
add
call
cld
ins
pop
outs
mov
hlt
movs
das
xchg
into
and
ss
icebp
repz
(bad)
cld
add
lds
pop
xchg
jge
ins
popf
outs
mov
xor
aaa
sub
fmul
mov
pusha
pop
or
hlt
jns
loop
cmp
cmps
adc
pop
add
imul
mov
sbb
invd
add
fnclex
push
(bad)
scas
and
inc
push
push
ins
test
push
and
sar
dec
xlat
mov
test
pop
adc
loopne
add
adc
iret
mov
cld
mov
jo
add
loop
pop
add
add
cmp
pop
xchg
add
ja
dec
mov
test
cmp
add
jp
aaa
xor
(bad)
iret
sahf
sbb
cwde
repnz
push
jo
cmp
nop
sbb
dec
dec
pop
mov
push
add
pop
cmp
out
add
fwait
sti
add
in
iret
cmc
jae
inc
cli
(bad)
mov
mov
and
jae
shl
jnp
in
sbb
cmp
push
xchg
into
fiadd
add
xor
fwait
ret
rcr
xor
xor
pop
out
fcmovb
mov
rcl
fcom
pop
outs
xlat
cs
je
or
jp
mov
jo
or
fisub
add
adc
or
lds
repnz
rcl
inc
add
pop
(bad)
xchg
cmps
adc
out
or
jmp
cmp
add
cmp
lock
sub
out
daa
and
daa
rol
cmp
mov
or
cdq
pop
push
fs
xor
test
test
(bad)
out
cmp
cwde
out
adc
or
or
fcmovnb
rcl
dec
dec
pop
pusha
arpl
or
repnz
add
jae
ins
or
(bad)
add
(bad)
lds
dec
loopne
and
sahf
jns
xchg
in
sahf
mov
movs
mov
icebp
mov
out
cmp
pusha
rcr
jp
jae
lahf
div
cmp
push
jmp
jmp
sbb
test
push
movs
ret
psubd
pusha
sbb
loope
mov
cwde
add
or
and
jmp
popf
xor
xor
dec
pop
lds
cmp
add
mov
in
add
in
fcmovne
fsub
out
sbb
or
sub
cmp
mov
push
into
jno
sbb
out
xchg
mov
xchg
aas
add
mov
loopne
out
jle
call
sbb
lock
inc
idiv
xchg
lock
sar
iret
xor
outs
fwait
jns
pop
ja
push
inc
sbb
add
lock
jne
sub
inc
arpl
and
gs
add
pop
adc
cmp
mov
fstp
mov
stc
xchg
aas
jmp
(bad)
push
(bad)
imul
adc
mov
mov
sub
adc
xor
and
or
movs
loope
add
jmp
imul
add
das
jnp
add
mov
out
jnp
call
add
sbb
adc
jb
add
adc
mov
(bad)
push
push
neg
push
out
movs
and
adc
add
add
sbb
jecxz
mov
mov
clc
and
xlat
out
lahf
jae
stc
retf
cmp
sub
call
mov
push
mov
pop
sbb
or
xchg
in
mov
lahf
arpl
xchg
xor
pop
push
popf
inc
enter
or
sahf
jns
pop
test
xchg
pop
jmp
jmp
sbb
aam
mov
imul
mov
xchg
push
or
add
dec
ret
or
cmp
mov
mov
mov
add
mov
add
mov
add
ret
addr16
add
push
and
mov
aam
inc
test
add
cli
mov
dec
pop
imul
jno
add
das
and
inc
sbb
in
cmp
dec
add
jns
ja
imul
test
mov
rcl
mov
(bad)
mov
shl
jno
jne
sub
cwde
in
mov
sbb
mov
jecxz
sbb
(bad)
out
hlt
outs
(bad)
retf
frstor
cmc
(bad)
outs
mov
push
xor
add
aad
inc
add
and
mov
rcr
imul
rcl
and
xor
add
add
out
add
jns
imul
jns
dec
loope
add
in
cli
pop
push
push
fidivr
scas
sub
or
in
pop
sbb
int3
mov
mov
add
pop
ror
pusha
rcr
add
cmp
add
add
add
jno
mov
add
push
mov
loopne
jge
cs
push
popf
cmps
into
stos
movs
cmp
add
cmc
add
sub
nop
ror
adc
call
out
jl
leave
push
sahf
repnz
out
rcl
aad
test
xlat
cmps
jmp
adc
fsub
ds
stos
pop
(bad)
daa
xchg
xor
movs
cdq
stos
js
inc
fiadd
fiadd
test
pusha
xor
add
add
in
jne
rol
inc
sbb
push
lock
cmp
popf
dec
addr16
or
rcl
adc
mov
ss
mov
mov
dec
lods
mov
pusha
dec
pop
push
cmp
add
jmp
ins
sar
pop
add
add
add
lods
pop
cwde
into
jmp
or
data16
or
pop
imul
and
addr16
add
sub
jne
loope
scas
movs
push
mov
or
push
push
push
inc
adc
mov
mov
icebp
sbb
paddb
test
add
push
inc
adc
push
xchg
dec
(bad)
xchg
adc
cmp
pop
add
pop
sar
add
add
dec
out
pop
clc
shr
divps
or
add
(bad)
aad
sbb
mov
das
hlt
hlt
dec
outs
pop
stc
and
inc
rol
jo
inc
pusha
ret
add
cmp
fist
stc
imul
cmc
add
jb
add
cmp
ins
cmps
in
push
out
mov
dec
fild
inc
rcl
jns
and
pop
clc
mov
pop
outs
mov
js
fistp
sub
push
jg
add
dec
outs
jl
sbb
lock
in
test
mov
repnz
push
mov
adc
bound
cdq
or
sbb
pop
add
pop
adc
(bad)
add
js
cmp
add
inc
mov
mov
jo
add
daa
hlt
imul
repnz
cli
in
xchg
std
sbb
scas
push
mov
add
cmp
mov
or
xchg
daa
fldenv
jmp
add
push
(bad)
and
lock
das
fiadd
sub
(bad)
push
popf
mov
inc
xor
add
out
jbe
in
jmp
push
clc
inc
sbb
sub
loope
xchg
mov
cwde
xor
xor
imul
imul
dec
cs
pop
clc
shl
sub
loopne
or
arpl
add
fidiv
je
dec
clc
xchg
imul
add
ror
(bad)
add
into
aam
jmp
cmovl
ret
ds
enter
push
sbb
movs
jecxz
cmp
sub
jmp
add
clc
xchg
push
xchg
xchg
test
mov
pusha
imul
clc
mov
add
(bad)
outs
pop
gs
adc
push
repz
mov
add
pop
aam
mov
imul
cmp
mov
dec
call
mov
add
and
cmps
jb
call
(bad)
fsubr
dec
lds
xchg
adc
jge
push
sbb
xchg
in
push
add
jmp
in
push
es
pop
jle
or
xor
and
ficom
cmc
not
rcl
ficomp
call
cmp
mov
adc
xchg
into
arpl
mov
cmp
ds
mov
mov
nop
push
int3
adc
add
mov
scas
mov
ficomp
inc
jne
inc
add
or
data16
mov
aas
iret
mov
or
jge
mul
jge
jmp
dec
sbb
sub
push
call
jg
pop
jle
push
call
jge
cmp
pushf
shl
inc
sbb
outs
pusha
or
add
adc
mov
jnp
add
pop
adc
mov
jge
fstp
mov
sbb
pop
push
push
push
lock
xor
add
out
add
inc
out
jns
jnp
stc
fisubr
xor
jge
out
dec
outs
jp
sbb
xchg
jne
popa
aas
ins
prefetch
mov
mov
xor
and
mov
scas
jle
stos
dec
fimul
sub
addr16
add
adc
add
cld
xor
gs
out
pop
(bad)
clc
jb
rcr
xor
pop
and
stc
mov
outs
cdq
add
enter
jne
cmp
inc
dec
sbb
cmp
mov
add
jl
out
repnz
ja
jbe
add
jecxz
sub
mov
dec
sub
sbb
sub
fnsave
add
add
out
pusha
test
out
xchg
dec
aad
cmp
loope
in
mov
loop
jg
sar
add
rcl
ds
mov
xchg
add
mov
inc
sub
in
cmp
das
mov
(bad)
scas
std
mov
(bad)
jle
mov
xchg
daa
iret
jle
mov
jbe
add
dec
and
adc
mov
shl
cld
leave
and
pop
mov
or
dec
push
xchg
push
mov
in
sub
cdq
mov
hlt
movs
out
clc
xor
add
out
mov
add
aam
fisubr
add
pop
ror
bswap
cmp
in
fldenv
retf
not
cmps
xor
cmp
addr16
mov
clc
inc
sbb
sub
pop
cmp
inc
test
adc
pop
pop
je
cdq
add
jo
mov
jae
sti
dec
push
idiv
scas
jnp
dec
push
test
dec
pop
xchg
sub
loopne
jb
add
(bad)
mov
xchg
jecxz
or
pop
(bad)
cmp
mov
shr
mov
sbb
sub
sar
xchg
sahf
hlt
movs
leave
arpl
sti
fadd
mov
mov
clc
lock
jl
arpl
mul
mov
popa
mov
nop
or
daa
add
hlt
mov
shr
sbb
mov
mov
out
jns
fild
mov
pop
add
xchg
repz
mov
jmp
jle
fisubr
rol
add
xor
jmp
jmp
dec
sub
pusha
lmsw
ins
push
jno
test
mov
cmp
pop
scas
iret
paddw
setne
scas
(bad)
or
loopne
scas
jg
jmp
dec
add
jae
cmp
not
and
add
add
jns
ss
or
cli
jnp
sti
fiadd
ds
mov
daa
push
adc
add
repz
sbb
mul
push
(bad)
shl
push
pop
add
or
test
jl
rol
inc
sbb
cmp
and
mov
test
pusha
ret
xor
int3
pop
addr16
ficomp
pop
xchg
and
test
frstor
in
pop
add
cmps
jno
cmp
cmp
sub
cmp
int3
js
outs
jae
fisttp
pop
jg
int3
(bad)
adc
add
inc
xlat
fdivr
mov
and
mov
shr
cs
popa
pop
test
stos
sub
pop
(bad)
(bad)
xchg
fcmovnu
(bad)
not
xchg
repz
aas
mov
mov
jb
jnp
mov
or
add
into
cmp
mov
push
sbb
jno
pop
pusha
adc
xor
inc
add
test
add
cmp
mov
test
mov
inc
leave
cmp
push
loopne
dec
pop
adc
mov
and
sbb
das
lock
push
enter
add
test
pop
neg
cld
jns
and
adc
pop
inc
jnp
rcl
jge
cmc
pop
addr16
mov
daa
out
pop
pmuludq
loop
(bad)
mov
arpl
repz
repnz
jae
inc
pop
fiadd
add
out
dec
push
push
xlat
jle
adc
pop
adc
add
sub
enter
out
sbb
jae
push
nop
xlat
mov
pop
stos
ins
jecxz
fucomp
dec
ja
loope
loope
sbb
lock
xor
pushf
mov
imul
or
dec
push
jne
inc
nop
xchg
jbe
add
adc
and
dec
pop
(bad)
repnz
pop
sbb
sub
cmp
pushf
add
jle
pushf
add
mov
jle
daa
dec
cmp
shl
sbb
add
push
nop
jmp
arpl
jno
loop
call
hlt
ins
push
clc
cmp
add
pushf
add
outs
jns
daa
add
int3
imul
cmp
cmp
jns
sbb
push
pop
imul
pop
mov
aad
pop
sbb
add
call
retf
pop
dec
fstp
xchg
mov
inc
push
cwde
ficomp
aas
push
fisttp
pusha
xor
add
add
retf
cmc
add
xchg
inc
or
jo
and
sbb
hlt
jno
rcr
mov
or
shl
inc
mov
mov
dec
pop
lock
and
loopne
js
dec
mov
add
add
cmc
sbb
sti
cmps
jecxz
lock
mov
add
cwde
xor
xor
add
jo
push
jno
rcr
mov
xchg
push
or
rcr
xor
call
mov
add
fstp
std
frstor
out
jp
jmp
std
lods
addr16
fistp
jns
sbb
sti
mov
(bad)
pusha
jg
cli
(bad)
cmps
cmc
mov
push
ins
clc
mov
add
ins
pop
sbb
cld
loopne
fld
dec
in
mov
or
ins
rol
mov
sbb
shl
dec
js
sub
mov
lahf
ins
inc
xor
(bad)
stc
mov
cmp
out
jnp
je
and
xor
push
cwde
jecxz
jmp
ret
ret
pop
out
jmp
jmp
jbe
mov
call
test
cmp
add
or
test
xor
pushf
dec
xor
pop
rcr
std
add
das
rol
jmp
sbb
jmp
imul
push
call
adc
into
lods
sti
cmps
dec
mov
retf
jae
cmp
lahf
(bad)
sti
rcl
aad
pop
or
test
push
add
bound
cwde
jno
cld
add
loope
inc
xchg
clc
add
push
stos
add
add
sub
hlt
dec
dec
fcomp
retf
and
cs
(bad)
loope
pop
add
(bad)
xor
inc
rol
ficom
sub
push
add
push
jo
lea
aam
xor
loopne
mov
pop
or
inc
pop
fisttp
call
push
mov
add
repnz
inc
add
mov
cmp
ror
sar
sti
jg
scas
lods
jae
cmp
mov
aad
pop
or
hlt
add
inc
mov
das
loopne
popf
sahf
jg
sub
out
retf
leave
xchg
aad
out
ins
outs
jnp
sub
(bad)
mov
inc
test
cmp
jns
(bad)
cmp
mov
jl
in
retf
in
outs
ja
leave
lds
pop
pop
sbb
add
sbb
push
mov
(bad)
xchg
push
call
or
sub
or
enter
push
push
mov
or
add
adc
mov
cmc
stos
push
popf
cmp
aad
and
inc
mov
lea
jo
adc
jmp
add
add
mov
test
jecxz
pop
xchg
xor
adc
es
mov
and
or
mov
cmp
adc
pop
push
pop
inc
loope
sbb
es
jmp
shr
or
(bad)
adc
movs
inc
add
pop
jno
adc
add
pop
into
das
outs
and
sar
pop
mov
movs
cld
sahf
idiv
xchg
pop
xchg
aad
xor
popa
(bad)
pop
stc
or
aam
push
jae
jmp
js
jne
imul
sbb
das
test
dec
or
rol
mov
mov
cs
mov
push
nop
fxch
push
sbb
call
pop
mov
cdq
pop
xlat
add
rol
adc
fisttp
push
sbb
or
shl
sahf
repz
push
xchg
pop
xor
cmp
ins
pop
test
xlat
sar
mov
inc
jmp
mov
mov
add
xchg
in
add
popf
pop
add
mov
lock
pusha
or
das
add
add
pop
cmp
add
sbb
ret
leave
ret
adc
add
dec
cmps
bswap
lods
jb
into
and
sbb
std
jb
xor
add
cmp
xor
jmp
add
aad
jl
and
or
pop
rcl
dec
mov
push
push
xor
adc
push
hlt
add
sbb
inc
scas
movs
cmp
(bad)
push
retf
idiv
dec
cmc
(bad)
sti
push
or
and
inc
movs
adc
pop
pop
add
and
pusha
push
mov
add
jo
add
call
push
test
mov
in
clc
enter
push
push
add
(bad)
in
cmp
and
cmc
mov
or
adc
sbb
push
or
cdq
mov
pop
pusha
jp
fwait
pop
and
sbb
in
sti
cmp
xor
adc
xor
jg
xchg
inc
mov
std
pop
out
dec
push
push
xlat
pop
xor
pop
pop
shr
adc
and
repnz
push
xchg
sub
and
mov
and
cmps
popf
cwde
jbe
xor
pop
mov
pusha
arpl
sbb
add
lods
add
aad
xchg
je
push
cmps
(bad)
add
push
push
pusha
(bad)
mov
add
cmp
add
repz
lea
and
jmp
xor
std
mov
out
outs
pop
aas
loopne
cmc
xchg
pop
(bad)
fadd
cmp
out
dec
add
inc
add
xor
and
add
mov
add
and
shr
addr16
test
or
test
daa
jl
and
cmp
rcr
jne
in
inc
add
jne
in
jmp
sbb
sbb
add
mov
xchg
pop
(bad)
cld
sbb
sbb
or
inc
mov
in
xlat
inc
aaa
push
mov
cld
sub
mov
outs
xor
mov
fs
mov
loopne
sub
in
aam
and
aas
add
mov
jnp
mov
arpl
jo
push
xchg
mov
mov
in
cld
ins
add
mov
jmp
stos
loopne
jmp
fild
or
jae
lea
lods
xchg
mov
push
fidiv
inc
jae
loopne
mov
lahf
jns
ins
test
jne
icebp
cdq
cmp
shl
xchg
stos
lods
stos
xor
and
(bad)
sti
rcl
aad
pop
mov
outs
lods
push
sbb
adc
dec
add
aas
test
push
pop
or
call
xchg
sar
add
push
scas
jp
add
cs
sub
push
add
outs
xor
sbb
or
push
je
add
ror
jecxz
jmp
mov
int3
add
pop
add
(bad)
add
movs
inc
xchg
hlt
mov
shl
aas
(bad)
int
add
adc
cmp
or
push
scas
pusha
mov
mov
cmc
jge
mov
add
or
mov
aaa
cmc
wbinvd
add
ins
cmc
cld
push
loop
mov
dec
xchg
das
mov
jne
sar
test
loope
add
or
sti
cmps
mov
movs
daa
mov
shr
imul
add
pop
sbb
test
das
mov
jae
push
or
push
xor
in
out
sahf
jns
in
cmp
adc
fnstsw
outs
add
cld
aad
sbb
sbb
in
xor
pop
add
push
sbb
pop
sub
mov
mov
push
outs
pop
pusha
xor
pop
push
or
cmp
rcr
push
or
add
xor
jecxz
or
sbb
lds
jmp
clc
out
sub
in
in
in
add
jmp
push
cmps
test
add
jg
add
cmp
add
pusha
push
je
jmp
and
int3
test
push
lahf
jbe
loopne
add
mov
cli
mov
retf
adc
push
idiv
addr16
icebp
xlat
jp
mov
ss
aad
mov
imul
stos
or
jl
xor
mov
adc
inc
sub
imul
lock
cmc
mov
push
cs
ror
ins
fild
sbb
pop
stc
aam
adc
cmp
or
pop
inc
loop
lea
cmp
mov
pop
in
sub
pop
dec
pop
aas
mov
(bad)
out
out
(bad)
outs
cmp
test
inc
push
lock
add
xlat
push
sbb
sbb
mov
mov
mov
test
retf
mov
cs
jg
movs
jne
cmp
in
mov
push
test
or
imul
stos
jbe
jg
cmps
jg
jae
add
add
jae
ffreep
lahf
mov
mov
mov
jmp
xor
xchg
inc
push
push
xchg
mov
pop
add
add
mov
ins
adc
cmc
pusha
inc
sbb
xor
div
dec
mov
pusha
mov
xor
clc
rcr
dec
jb
mov
xor
pop
add
mov
or
or
hlt
xchg
stc
lods
ja
sahf
cmp
sbb
push
cs
mov
repnz
mov
mov
(bad)
imul
iret
adc
xchg
inc
dec
mov
inc
mov
pop
mov
(bad)
cmp
pop
jg
cmp
pop
fistp
mov
push
in
push
pop
shr
and
or
pop
push
add
jne
inc
movs
pop
clc
cmp
jo
jle
stos
rep
add
sbb
sbb
fwait
dec
and
jmp
sbb
push
sub
lds
call
scas
mov
pop
je
inc
lds
pop
add
neg
stc
push
and
push
(bad)
push
xor
clc
pushf
(bad)
idiv
jmp
jnp
add
pop
or
(bad)
xchg
jno
cmps
add
(bad)
fsubr
in
lea
sbb
(bad)
loope
dec
(bad)
out
(bad)
std
mov
iret
pop
xor
jg
(bad)
jg
jl
mov
add
(bad)
mov
pop
xchg
iret
mov
mov
mov
bound
push
mov
lods
repnz
nop
or
rcr
pop
mov
sbb
cs
mov
jge
stos
repz
jle
and
add
jne
push
inc
mov
in
xchg
hlt
mov
xchg
mov
clc
sub
dec
inc
xor
xchg
inc
or
or
addr16
push
jne
add
sub
call
sbb
mov
add
lahf
in
inc
out
mov
mov
cmp
lods
(bad)
sub
test
mov
fild
sub
into
loope
or
sub
test
mov
jg
retf
das
jle
or
mov
in
add
(bad)
sti
rcl
aad
mov
mov
jne
jmp
das
jge
stc
les
lds
nop
test
adc
xor
add
stos
jp
xchg
jmp
loope
sub
add
ins
cs
(bad)
daa
retf
aaa
jecxz
or
add
push
push
pop
xor
cmp
rol
out
sahf
sar
xchg
mov
sub
jae
push
and
jns
xor
or
push
mov
jge
arpl
cld
push
sbb
iret
xchg
mov
xchg
mov
das
mov
into
into
fnsave
mov
jne
xor
test
inc
stc
leave
pop
add
(bad)
rcl
jg
(bad)
sub
fistp
pop
or
or
imul
push
pop
pop
(bad)
mov
or
add
mov
retf
or
add
and
sub
ins
inc
pop
dec
stos
add
sbb
xchg
pop
jns
stos
(bad)
xlat
add
or
mov
and
addr16
cmp
or
jl
ret
xchg
dec
or
add
add
sbb
add
dec
out
push
add
ja
push
out
call
rol
in
(bad)
xchg
repz
jns
cmp
test
push
(bad)
stos
xchg
gs
sbb
xchg
jno
sbb
test
mov
icebp
pop
or
(bad)
lock
jecxz
lods
jmp
jne
leave
mov
mov
jge
jmp
inc
mov
add
jbe
mov
imul
push
pop
pop
(bad)
mov
mov
dec
aam
push
mov
dec
pop
push
shl
sbb
xchg
cmp
inc
lods
jl
aad
pop
add
(bad)
add
in
adc
pusha
icebp
cdq
mov
add
out
fsub
dec
mov
and
std
in
inc
ret
mov
out
out
cdq
mov
adc
pop
sbb
cmp
sahf
jb
inc
xchg
jnp
mov
adc
jae
popf
cmps
jae
xor
cmp
mov
add
adc
pop
fld
int3
clc
add
mov
pusha
pop
pop
popf
mov
jo
retf
ret
movs
hlt
sbb
scas
and
lea
aam
stos
sub
gs
fdivr
in
add
(bad)
jno
std
add
xlat
jle
add
shr
test
inc
in
jb
add
movs
push
mov
popf
inc
push
fdiv
add
push
and
(bad)
repz
mov
movs
pop
add
add
rol
inc
add
cmp
jb
gs
xchg
repnz
pop
fdivp
xchg
cmp
push
cld
je
xor
push
push
mov
adc
or
pop
out
mov
sahf
imul
xor
mov
pop
sbb
inc
sub
push
lahf
loope
cld
mov
fidiv
das
push
sub
ds
fldcw
inc
iret
xchg
or
loop
aad
mov
shl
(bad)
imul
retf
or
pop
imul
sahf
mov
pop
fdivr
imul
add
sub
in
jmp
xchg
scas
dec
add
adc
loop
stc
rol
add
push
lods
loopne
or
inc
mov
pop
add
cli
sub
ficomp
outs
xchg
add
fisubr
jno
sti
and
cmp
es
sub
xor
pusha
repnz
addr16
aaa
xlat
xchg
rcr
inc
nop
sbb
sbb
add
pop
mov
inc
jno
sbb
pop
(bad)
loope
pop
push
mov
ret
(bad)
cmc
repz
out
enter
dec
pop
pop
repz
cmc
scas
ja
xor
push
cmps
aam
iret
(bad)
mov
fiadd
sub
lock
or
dec
sub
add
inc
mov
mov
or
stos
stos
imul
add
ins
push
push
rcl
(bad)
mov
dec
test
inc
or
jle
mov
stos
or
loopne
aaa
add
stos
inc
or
add
fst
and
imul
or
and
add
cmp
jmp
xlat
jmp
out
lods
outs
jge
add
loope
and
ja
jmp
movs
frstor
(bad)
imul
popa
(bad)
pop
or
mov
jo
movs
push
imul
jecxz
jmp
and
xchg
jne
push
mov
sub
jno
test
iret
adc
add
cmp
dec
cmp
jno
xor
out
popa
jne
lods
or
mov
jmp
or
mov
imul
inc
sub
mov
movs
push
or
ret
repz
and
retf
adc
mov
popa
push
inc
xor
mov
mov
inc
cwde
rcl
or
jno
out
sbb
mov
cmp
sub
ror
mov
(bad)
or
sbb
ins
pop
fstp
scas
cs
dec
cmp
or
mov
jge
xchg
cmc
mul
and
popf
jbe
(bad)
sub
jo
std
and
sub
imul
sbb
es
pop
das
pop
rol
add
scas
cmp
sbb
fisttp
ins
sub
and
cmp
movs
stos
stos
imul
aad
cld
mov
pop
and
xchg
js
mov
push
mov
xchg
push
or
mov
push
or
add
adc
or
pop
push
les
xchg
stos
mov
jp
jae
pop
div
cs
jnp
repz
sub
jle
lods
pop
add
jp
add
adc
mov
out
xchg
repz
jns
push
scas
mov
push
add
or
repz
xchg
mov
inc
shl
test
stos
scas
mov
imul
push
mov
or
add
movs
popf
pop
or
mov
aad
dec
ins
mov
mov
popa
clc
push
stos
popa
xor
pop
(bad)
dec
test
test
add
out
adc
ret
outs
or
or
xchg
add
xor
dec
and
lahf
jo
mov
out
out
pop
inc
mov
in
retf
das
das
push
push
pop
inc
and
jge
stc
enter
cdq
pop
ss
(bad)
idiv
push
push
cmp
outs
ja
pop
sbb
pop
or
sahf
mov
cmp
xor
mov
xor
ins
daa
dec
or
js
int
(bad)
mov
dec
sbb
daa
aam
repnz
pop
adc
lahf
adc
sbb
adc
inc
scas
lahf
and
test
inc
pop
lods
(bad)
sti
rcl
aad
dec
ins
mov
mov
adc
jnp
and
shl
mov
mov
loopne
or
xor
data16
shr
cwde
pop
pop
mov
mov
sbb
jl
repz
push
rcr
jo
add
and
sub
inc
jecxz
cmp
inc
out
jmp
add
rol
xor
loope
sbb
push
mov
lock
add
jmp
int
jno
adc
movs
jl
lds
lahf
jl
adc
out
out
(bad)
outs
stc
add
(bad)
aas
(bad)
icebp
repnz
add
stos
stos
imul
add
ins
push
sub
ror
pop
add
rcl
pop
xchg
stos
imul
sub
gs
add
loopne
cwde
add
fist
cmps
rol
xchg
xor
push
into
(bad)
jns
arpl
nop
xor
pop
xor
jmp
push
inc
mov
cmp
or
repz
xor
fs
mov
mov
shl
retf
aaa
push
shr
xchg
arpl
(bad)
add
pop
adc
cld
int3
fild
out
add
or
inc
inc
and
jne
pop
jae
cld
inc
xchg
gs
test
repz
cmc
pop
add
xlat
add
jne
xor
test
pusha
push
xlat
push
gs
xor
call
xchg
mov
push
sbb
sbb
in
ja
add
es
push
add
sbb
cmp
add
pop
(bad)
xlat
and
jmp
add
xchg
fdivr
fdivp
cs
pop
adc
in
jb
test
pop
xlat
iret
std
sar
inc
sbb
push
test
shl
push
clc
push
out
pop
jo
enter
mov
add
ret
fistp
add
mov
lock
out
mov
movs
(bad)
mov
sub
movs
iret
ds
in
loop
pop
addr16
mov
mov
or
ret
std
add
scas
dec
test
pop
shr
push
and
or
sti
cmp
sub
mov
and
in
or
or
cmp
push
xor
add
sub
adc
add
pop
shr
pop
outs
or
mov
aad
in
stos
aam
dec
or
and
inc
out
push
ret
mov
popa
loop
push
cwde
push
rol
sbb
mov
fstp
out
pop
and
push
mov
jne
retf
aam
cmp
mul
into
arpl
or
aad
pop
lock
leave
aaa
iret
push
add
repnz
jae
and
adc
das
mov
dec
jnp
xor
ret
(bad)
pop
pop
je
jno
add
test
lahf
dec
pop
cmc
lahf
mov
sub
dec
push
push
xlat
pop
add
icebp
movs
jno
add
cmp
jo
mov
push
mov
and
add
add
pop
call
pusha
ror
push
cli
sub
push
cmp
retf
add
aas
xchg
in
sub
sti
aad
pop
cmps
(bad)
jno
push
les
mov
pop
push
int3
test
pop
pusha
into
pop
inc
or
add
or
arpl
push
loope
or
or
mov
cmp
les
sub
inc
test
pop
retf
sar
pop
out
pop
xor
jl
fwait
cmc
jecxz
lods
loope
(bad)
rol
xchg
aas
add
xchg
push
add
das
push
imul
es
pop
jns
pop
add
jo
mov
nop
add
cmp
fiadd
push
add
in
iret
(bad)
lods
or
jmp
jmp
or
sbb
sub
and
iret
xchg
pop
sti
fcmovbe
push
xlat
leave
xchg
sbb
add
xchg
sub
test
or
dec
les
add
rol
test
cmp
xor
add
(bad)
or
mov
xchg
xchg
outs
sbb
mov
inc
and
pop
mov
ja
pusha
push
fcomp
and
mov
sahf
push
pop
pushf
inc
repz
rcl
push
push
sbb
cmp
jnp
jnp
cmp
gs
mov
inc
popf
pop
shl
jmp
iret
clc
cmp
or
mov
xlat
add
mov
mov
or
jnp
out
mov
aam
(bad)
(bad)
imul
into
test
dec
aas
push
aas
aas
stc
(bad)
(bad)
lea
jg
add
sbb
iret
mov
jle
add
ficom
push
js
or
add
jmp
mov
ficomp
or
sub
fisubr
add
and
add
loope
add
or
add
sbb
rol
jne
sbb
aad
aad
pop
cmps
(bad)
jno
(bad)
aam
movs
adc
mov
push
mov
xlat
cmp
inc
in
inc
mov
and
xor
push
ss
outs
retf
call
into
aas
out
cmp
add
in
add
jg
sbb
iret
lahf
jbe
fiadd
fbstp
shl
in
sbb
jae
jne
add
pop
stc
retf
out
pop
cld
lock
outs
inc
lock
lods
sub
aad
push
or
mul
pop
xchg
loope
or
retf
dec
repnz
pop
popa
pusha
inc
nop
movs
xlat
gs
adc
mov
jo
and
shl
sbb
adc
add
or
js
stos
jb
sub
push
cmps
pop
movs
sbb
push
test
xor
mov
test
xchg
rol
fadd
jge
rol
and
add
out
xor
ret
ret
inc
outs
cdq
mov
cmp
aaa
out
push
clc
lods
add
add
stos
add
stc
dec
enter
push
mov
push
lahf
jge
fld
or
dec
sar
pusha
jae
aas
std
jmp
inc
mov
pop
lods
mul
push
int3
in
inc
sbb
sub
mov
scas
mov
mov
and
fstp
scas
ret
cmps
repnz
rcr
add
add
in
lahf
add
push
add
add
push
out
aaa
ds
and
imul
retf
add
xlat
sub
iret
cmc
sbb
test
enter
aas
add
clc
ret
pop
pop
pusha
dec
call
or
sti
push
adc
fidiv
in
sbb
fnstcw
out
scas
jae
stc
in
push
or
pop
iret
xlat
add
or
out
xchg
out
jns
sar
icebp
mov
int
xor
add
xor
shl
bswap
std
stc
lahf
(bad)
jns
cld
hlt
cld
xor
cmp
mov
stos
stos
imul
push
jne
in
jmp
xlat
jg
xlat
retf
loopne
ret
inc
clc
adc
ficomp
aaa
push
mov
sub
add
fadd
adc
cmp
or
inc
inc
ret
jp
add
jmp
xchg
push
pop
movs
jp
cli
sbb
aam
dec
or
add
jnp
adc
ss
lock
in
jb
and
cmp
ror
popa
arpl
rol
movs
xchg
xchg
std
jl
sbb
jb
adc
push
fimul
pop
pop
push
jg
mov
sbb
lods
and
add
mov
pop
sbb
and
ins
outs
jae
jb
stc
or
loope
push
nop
mov
mov
add
std
push
jo
pop
sti
aad
outs
sbb
cmp
jbe
ins
pop
ds
mov
and
dec
lds
add
hlt
and
mov
pop
out
adc
inc
fidiv
imul
sub
enter
or
push
data16
push
and
lods
pushf
xchg
jae
(bad)
fwait
jae
xor
stos
push
out
xchg
cld
push
test
add
adc
imul
or
or
test
or
mov
out
cmp
cmp
shl
ror
sub
popf
dec
add
xor
retf
rcr
pop
mov
push
popf
inc
mov
add
jecxz
jge
call
adc
call
(bad)
pop
pop
jl
stc
repnz
push
or
dec
or
pop
sbb
adc
mov
jmp
rcr
scas
scas
adc
or
xchg
retf
or
xor
aam
cvttps2pi
sbb
lds
mov
mov
sbb
loopne
gs
in
lahf
jecxz
and
test
inc
outs
scas
stos
shr
pop
imul
and
fnstenv
cmp
scas
dec
mov
sbb
xchg
mov
hlt
cmp
mov
dec
push
add
or
popa
in
or
gs
out
mov
lods
stos
in
loopne
xchg
cmp
int
add
test
jns
cmp
jmp
ret
push
push
ds
iret
fdivrp
daa
lds
cmp
lods
mov
add
loop
mov
das
push
das
pop
pop
pop
mov
js
or
push
mov
scas
lods
dec
pop
sub
and
add
lock
add
pop
nop
push
imul
push
test
push
sbb
dec
cmp
push
fsubr
(bad)
or
mov
pop
fsubr
jl
test
add
dec
ror
rcr
dec
outs
pop
and
(bad)
loop
movs
daa
xor
add
xor
mov
jmp
pop
in
lods
pmulhuw
fidiv
xor
or
push
cmps
xrelease
jnp
arpl
jecxz
loope
pop
xchg
icebp
add
jle
push
lahf
sub
push
jo
inc
nop
(bad)
sti
rcl
aad
imul
dec
add
mov
pop
xchg
adc
test
mov
push
icebp
or
test
dec
sbb
scas
or
add
inc
mov
inc
add
add
sbb
pusha
addr16
das
loopne
mov
stos
push
mov
jno
adc
push
jb
into
dec
fiadd
cmp
jle
mov
mov
lock
sub
inc
pop
lock
add
xlat
xor
clc
(bad)
jg
(bad)
retf
aam
sti
or
mov
ret
ret
push
push
outs
or
jmp
add
ror
fnstsw
xlat
pop
add
jge
mov
mov
gs
jmp
vmwrite
xchg
repz
lock
in
jae
mov
call
push
out
pop
jle
pop
call
jne
inc
add
jno
(bad)
aam
sahf
imul
adc
inc
cwde
dec
pop
adc
add
ret
push
mov
add
fcomp
add
xlat
das
pusha
fs
jns
mov
out
pop
in
pusha
add
and
in
inc
lods
arpl
push
cmps
xchg
jb
scas
push
jns
add
mov
xchg
cdq
cmp
test
inc
enter
call
loopne
outs
ja
ror
rcl
sub
das
jecxz
jb
test
cmc
jle
ret
pop
loopne
out
add
push
push
neg
mov
pop
out
jns
push
ss
loop
iret
cmc
add
je
icebp
in
jo
shl
fsub
fldl2t
jecxz
(bad)
js
jle
dec
(bad)
cmc
pop
rcr
rol
ins
sbb
pop
imul
arpl
xor
xor
(bad)
int3
daa
mov
sub
retf
fmul
cld
add
mov
adc
mov
faddp
into
ret
mov
mov
push
cmps
dec
add
leave
jne
and
or
pushf
das
sti
jb
mov
xchg
or
add
add
push
(bad)
out
movaps
mov
shr
fcom
mov
shr
(bad)
jmp
sub
cmp
cmp
xchg
mov
push
xchg
sbb
imul
(bad)
cli
and
fwait
add
cld
jmp
je
sbb
daa
loope
stc
leave
dec
xchg
stc
push
add
jmp
cld
push
pop
shr
pop
jo
mov
shl
fistp
jp
pop
push
sbb
xchg
push
ja
fcomp
rcr
xchg
ss
push
out
ret
stos
fdivr
cmp
mov
shld
outs
pop
movs
(bad)
xor
cmps
mov
pop
pop
cs
icebp
jb
pusha
iret
cmp
rcr
pop
daa
xchg
imul
jbe
cmp
adc
add
loopne
sahf
div
jns
add
lock
mov
mov
mov
or
sahf
add
pushf
add
adc
xor
push
fist
enter
or
aad
dec
mov
ret
in
mov
fcmovnu
aas
xor
add
mov
lock
jle
push
dec
xchg
mov
xor
pop
pop
shr
mov
jns
in
pop
(bad)
jp
inc
idiv
xchg
inc
or
cld
mov
mov
jo
sti
jl
add
and
sub
pusha
adc
adc
push
cmp
pop
sub
mov
and
cwde
jno
in
cmp
scas
mov
lock
mov
pop
imul
sbb
pusha
pop
aas
nop
add
mov
or
sbb
jo
sahf
stc
int3
addr16
and
iret
outs
retf
rcl
add
outs
mov
add
xor
mov
pop
add
xlat
in
je
scas
fnstenv
ins
sbb
mov
inc
sti
les
jp
pusha
hlt
repnz
gs
outs
rol
jbe
sahf
movs
sbb
loopne
movs
lods
inc
and
push
sbb
inc
cmps
daa
jo
cld
mov
jne
aad
mov
test
push
movs
xor
adc
fnstsw
mov
(bad)
repz
pop
daa
add
scas
jp
add
cmp
or
call
stos
add
lock
add
sbb
addr16
enter
fldenv
fsubr
adc
cmp
or
cmp
leave
push
and
adc
jae
push
cs
pusha
add
fiadd
cli
fisubr
dec
js
aam
daa
xor
push
pop
pop
cmp
movs
mov
inc
mov
add
add
jl
xor
inc
test
push
pop
mov
call
cmp
push
sub
jnp
dec
mov
retf
pop
(bad)
repnz
das
ds
out
mov
out
add
xor
dec
dec
pusha
icebp
pop
(bad)
push
sbb
cmps
xchg
push
mov
push
sbb
test
std
aad
sub
loopne
std
fmul
dec
jle
mov
jnp
retf
mov
adc
push
icebp
jb
or
adc
jns
int3
add
or
rol
ins
pop
pop
dec
or
or
push
add
add
pop
lods
jo
add
and
repnz
into
xor
fistp
lods
mul
jl
xlat
push
retf
xor
ins
pop
sbb
add
add
in
push
sbb
inc
out
cmp
and
and
inc
lock
gs
xchg
jns
pop
scas
lods
jo
jecxz
dec
mov
aas
(bad)
icebp
(bad)
das
into
bound
aam
mov
ja
cdq
push
fisubr
mov
sub
mul
jge
aam
icebp
pop
out
add
dec
into
cmps
iret
push
xchg
rcr
lock
scas
pop
xor
cmp
stos
pop
std
jmp
addr16
(bad)
outs
std
(bad)
in
(bad)
loopne
mov
call
xchg
mov
jmp
jmp
sbb
aam
mov
imul
fistp
bound
outs
pushf
xor
outs
mov
jb
add
push
repnz
adc
jo
rcr
test
in
pop
inc
in
or
lea
add
and
add
call
test
adc
jmp
xlat
push
sub
xor
add
pop
push
inc
(bad)
and
sbb
(bad)
mov
jno
adc
mov
pop
movs
and
inc
adc
aad
push
mov
int
mov
inc
pop
sar
fist
inc
ror
xchg
cmps
sti
sub
add
out
pop
pop
adc
aam
ins
lea
xchg
ja
iret
aas
and
mov
adc
movs
shl
xlat
pop
ins
push
mov
dec
call
(bad)
cmp
add
sbb
lahf
test
lods
mul
add
mov
pop
adc
dec
test
pop
pop
adc
or
lea
or
push
clc
ror
add
loope
retf
add
ins
aaa
xchg
mov
lsl
adc
cmps
test
add
dec
cmp
add
lock
adc
mov
in
sub
add
sub
cli
cmp
xor
sbb
pop
lahf
push
adc
pop
cmp
xchg
stc
and
in
cmp
popf
cmps
mov
fcmovb
sbb
inc
pop
adc
imul
ins
add
mov
push
mov
outs
popf
jnp
fsubr
push
retf
ds
dec
nop
inc
scas
retf
mov
jmp
jg
enter
stc
jb
jmp
lock
dec
adc
lahf
xor
inc
cs
cmps
rcl
aaa
pushf
sub
ins
mov
daa
(bad)
ror
add
jp
jecxz
add
mov
lods
jecxz
mov
xchg
scas
scas
scas
inc
or
add
ins
push
inc
out
xlat
jle
xlat
dec
lds
mov
das
sub
push
xchg
cmp
repz
push
imul
xor
out
stos
fadd
push
repnz
cmp
repnz
or
stos
shr
mov
sbb
mov
scas
push
sar
xor
pusha
sub
sub
and
add
out
add
les
cmp
jns
sub
add
sub
mov
pop
test
inc
mov
loope
sub
xchg
sti
dec
cmp
add
sub
aas
adc
in
cli
mov
rol
inc
cmp
outs
push
(bad)
invd
jle
add
sub
out
aad
shl
inc
into
and
adc
(bad)
dec
stos
dec
mov
lahf
jg
repnz
mov
add
sbb
test
jo
push
call
push
xlat
push
and
ret
(bad)
hlt
cmps
dec
fsubr
or
or
or
repz
rcr
push
sub
push
call
add
fsub
xor
dec
push
ins
xchg
push
jo
or
mov
jge
sbb
out
pop
stc
add
xchg
lods
repnz
leave
jge
movs
fdivp
mov
sub
xor
retf
pop
inc
loope
loopne
cmp
push
in
mov
pop
cld
pusha
mov
(bad)
vcvttpd2dq
sti
adc
(bad)
sub
out
or
and
rcr
lahf
add
cmp
jecxz
mov
mov
aad
inc
push
and
or
dec
fstp
cmp
mov
imul
add
jg
cld
mov
movs
pop
cli
movs
leave
xchg
cld
loope
xchg
jecxz
movs
std
pop
sbb
jmp
out
idiv
jl
movs
cmc
mov
push
fcomp
add
fnstenv
(bad)
idiv
(bad)
fbld
or
add
sub
stos
xor
cmp
mov
or
add
hlt
and
jo
dec
int3
cmp
cmp
pop
and
outs
or
cmp
add
xor
test
adc
in
fdivp
sahf
neg
test
lea
data16
cmp
cmp
into
pop
or
add
pop
enter
mov
jo
cmp
rcr
jae
shr
or
imul
ror
jp
dec
in
sub
ins
add
cmp
aaa
xchg
jmp
push
add
fcmovnu
pop
fiadd
cmp
sbb
cmps
cmps
pop
dec
stos
pop
push
(bad)
jge
inc
pop
sub
scas
dec
xor
clc
fadd
ds
xchg
repz
pop
mov
inc
ins
pop
mov
stos
stos
stos
push
adc
imul
pop
adc
das
jl
add
push
pop
add
daa
cmp
bound
ss
and
or
rol
sub
cmp
dec
outs
push
or
or
shr
sbb
push
cmps
int
or
mov
or
dec
and
add
xchg
and
out
jmp
(bad)
add
and
xor
lock
mov
jnp
fst
xor
jg
retf
pop
cs
jle
cwde
jbe
cmp
int3
mov
test
push
xor
mov
retf
outs
lahf
out
in
cdq
out
and
(bad)
cmp
(bad)
mov
cmc
scas
das
loopne
cmc
rcr
mov
int3
addr16
aaa
sbb
jmp
or
repnz
jle
mov
xlat
or
sbb
add
out
cld
lahf
add
out
gs
and
inc
jmp
jmp
add
push
sbb
xchg
lock
jno
push
test
pop
jo
int3
add
mov
popa
jle
add
js
jae
cmps
hlt
in
out
push
ja
inc
cmp
pop
inc
mov
ja
cmp
add
adc
dec
mov
adc
sub
add
mov
shl
mov
add
jp
mov
inc
shl
and
add
je
adc
dec
add
mov
jge
in
out
cmp
push
push
stc
lahf
ror
or
dec
xor
pop
cmp
retf
test
int
loop
or
adc
pop
bound
or
add
push
add
pop
inc
icebp
xor
into
cmp
dec
lahf
mov
cmps
idiv
jnp
lods
test
jle
ja
idiv
repz
imul
or
adc
jg
ret
ds
push
push
imul
pushf
sti
in
test
leave
stc
add
pusha
lock
idiv
pop
retf
and
push
xchg
jns
add
dec
and
into
adc
add
push
dec
fcmovnb
(bad)
pop
aas
mov
dec
inc
push
addr16
mov
sbb
and
mov
mov
mov
add
mov
xchg
add
je
push
movs
push
test
mov
rcl
vmovupd
dec
adc
adc
mov
mov
jg
inc
out
pop
mov
add
nop
add
sbb
push
push
arpl
dec
(bad)
jnp
mov
pop
cmps
pop
inc
add
in
cmp
jmp
adc
(bad)
push
mov
push
adc
sbb
add
in
aaa
mov
pushf
pop
inc
ret
mov
inc
inc
sbb
cs
adc
xor
cld
inc
xor
or
add
ror
add
sahf
sti
and
(bad)
std
out
imul
pop
push
test
jo
mov
push
jo
inc
mov
addr16
mov
and
or
mov
inc
xor
and
mov
sbb
xchg
jmp
add
cmps
shl
sub
xor
adc
or
xchg
sub
jne
ins
loopne
aas
(bad)
icebp
(bad)
sti
in
cmp
mov
cdq
out
call
pop
idiv
xchg
dec
aam
pop
add
mov
adc
cmps
call
scas
pushf
sbb
lahf
xor
arpl
push
sbb
outs
popf
jp
or
(bad)
out
daa
mov
jecxz
mov
add
jb
inc
mov
push
loopne
push
mov
ja
add
ret
add
mov
sub
inc
repz
fld
sub
arpl
cmp
movhps
mov
jecxz
add
sub
sub
inc
das
pop
cmp
shl
data16
add
idiv
out
xlat
xor
(bad)
mov
jge
inc
out
lahf
std
pop
out
or
sub
scas
sahf
or
mov
mov
pop
add
sub
xor
pop
enter
test
adc
adc
inc
and
push
add
pop
cli
cmp
mov
std
pop
dec
movs
adc
push
add
ins
mov
test
arpl
adc
cmp
pop
dec
push
inc
and
inc
jns
test
inc
xchg
(bad)
into
inc
add
ficomp
pop
int
and
pop
or
fistp
pusha
fmul
add
out
jecxz
push
loop
fldenv
mov
cmp
add
cmp
sahf
mov
cmps
scas
mov
and
push
(bad)
mov
cwde
loop
leave
popf
adc
add
add
jmp
add
out
sbb
mov
cwde
xchg
xor
fiadd
and
lods
mov
jmp
ret
cld
enter
cli
push
and
lods
pop
mov
punpcklwd
pop
pusha
inc
pushf
or
sbb
and
inc
push
sbb
(bad)
cmp
jg
cmp
or
mov
sub
iret
mov
dec
and
add
je
add
mov
cmp
pop
ret
imul
or
lods
sub
cmp
test
in
add
je
fsub
xor
loopne
jp
sbb
clc
xchg
sti
out
cmp
ds
sbb
ja
add
cmp
mov
mul
jae
xchg
and
pop
pop
mov
pop
adc
loopne
mov
fcomp
xor
aas
test
arpl
dec
push
int
add
js
sub
cmp
shl
neg
(bad)
arpl
es
xchg
cs
pop
adc
add
rol
push
add
sahf
adc
push
jns
pushf
aas
mov
add
pop
sub
add
dec
cmc
scas
pop
mov
add
mov
add
mov
jg
push
idiv
xchg
dec
aam
fistp
movs
sar
sub
inc
mov
adc
jo
add
add
jns
cwde
retf
xor
inc
fmul
push
add
add
or
mov
(bad)
fsubr
inc
outs
mov
xor
mov
inc
push
or
cmp
das
push
sbb
mov
fidiv
std
and
into
cmc
or
jae
mov
lock
cmp
call
or
mov
pop
lock
int3
and
or
aas
add
rcr
fcomp
call
adc
stc
jecxz
mov
inc
psubb
fdiv
in
jns
add
in
jp
cmp
sahf
aaa
ret
sar
rol
out
add
jg
sbb
push
mov
fdivr
out
sub
repnz
clc
imul
cmp
clc
daa
aaa
push
popa
dec
idiv
xchg
dec
aam
fisttp
and
mov
stc
arpl
push
or
inc
jno
dec
push
xor
adc
hlt
fisubr
inc
pop
in
jae
je
stos
je
add
pop
and
cmp
add
mov
mov
and
push
out
in
adc
push
or
sub
adc
add
inc
pop
fist
mov
add
nop
or
add
xchg
add
mov
jp
neg
call
shl
mov
test
dec
sbb
test
mov
xchg
jnp
rol
pop
mov
dec
xchg
mov
and
jmp
sbb
jg
cmp
jecxz
adc
js
pop
rol
mov
jg
or
add
dec
push
mov
fstp
dec
call
into
adc
cmp
push
clc
cld
adc
mov
fadd
jge
mov
shr
push
sub
add
push
pop
aas
leave
hlt
sbb
mov
jg
sbb
mov
push
push
or
push
mov
and
xor
cmp
cmp
jmp
inc
out
pop
push
sbb
dec
and
aaa
pop
jo
in
movaps
ss
or
popa
pop
xchg
aaa
aam
shl
xor
ret
jae
mov
mov
sbb
sbb
pusha
adc
or
jbe
xchg
sti
jmp
popa
jmp
mov
mov
test
add
ret
sub
jns
cwde
jb
and
or
jns
push
cmp
pop
bound
jg
or
test
popf
out
pop
aas
clc
inc
pop
rcl
ror
sbb
mov
xor
adc
jo
add
and
or
cmp
push
pop
ins
mov
xchg
dec
imul
jmp
mov
push
add
jo
dec
jne
stos
inc
mov
jmpw
sbb
dec
mov
push
mov
lock
push
add
arpl
es
and
adc
or
xchg
pop
push
frstor
add
frstor
add
or
fdivr
out
idiv
and
cmp
icebp
jae
ins
retf
xor
fisttp
sbb
mov
cmp
mov
sbb
push
outs
cmps
xor
js
sbb
mov
sar
loope
add
rcl
adc
repz
inc
out
in
jmp
ret
or
shl
sub
out
add
icebp
mov
lahf
inc
jg
cmp
add
sbb
ror
jae
sti
pop
call
mov
rol
xlat
das
inc
movups
or
xchg
dec
mov
inc
fdiv
imul
loopne
jmp
adc
adc
pushf
enter
test
mov
rcr
inc
add
xchg
or
or
fld
ds
cmp
and
in
xchg
mov
add
add
shr
dec
cmps
imul
mov
pop
mov
(bad)
daa
aam
test
or
inc
out
out
(bad)
pop
xor
or
xchg
pusha
sbb
pop
cmp
push
leave
add
jo
int3
sbb
in
retf
and
(bad)
pop
repz
fidiv
pushf
loopne
push
rcl
dec
enter
cs
mov
ss
std
fwait
cmp
out
pushf
mov
fsubrp
jl
cmp
push
call
inc
iret
cmps
add
pop
sahf
pop
test
mov
repz
jle
movs
push
test
test
shr
sub
adc
je
sbb
aad
mov
mov
dec
inc
xor
adc
sbb
push
das
jo
icebp
or
clc
inc
or
js
lds
repz
pop
xchg
retf
inc
rol
push
push
adc
push
mov
add
xor
std
adc
cmps
imul
test
add
test
jecxz
add
push
cdq
jae
lods
pop
pop
shr
sub
and
ins
daa
push
adc
(bad)
lock
test
imul
fsubr
fdivr
(bad)
popa
fist
mov
hlt
cmp
call
pop
cmp
mul
pop
push
pushf
or
sub
aam
iret
xchg
retf
mov
cmp
push
add
icebp
retf
cmc
or
and
fmul
stos
in
not
xchg
push
dec
sub
pusha
test
jmp
cmp
jge
or
jb
lods
mov
cmp
inc
sbb
or
adc
sbb
cmp
imul
xchg
xor
loope
es
fld
sbb
inc
shl
sbb
sub
inc
add
push
cdq
cmps
rcr
and
dec
retf
add
sub
repnz
push
adc
push
test
xchg
pushf
cmp
test
aad
pushf
xor
add
push
mov
cmps
inc
push
mov
call
cmc
mov
sldt
add
(bad)
cwde
fadd
jecxz
mov
mov
sub
pushf
xchg
pop
stos
lods
std
pop
out
mov
sub
inc
sti
push
fisttp
add
cld
push
popa
sub
loope
add
in
add
(bad)
cmp
xor
jle
movs
push
imul
jle
mov
jb
in
jno
jl
ror
add
or
dec
cs
ret
mov
jle
pop
je
fimul
retf
fst
jmp
repz
pop
cmp
imul
in
jns
stos
mov
enter
pusha
inc
pop
sbb
adc
outs
adc
xchg
and
pop
call
loopne
or
adc
inc
repz
fist
into
xchg
jno
pop
iret
sub
and
pop
push
adc
push
sub
fdiv
test
xchg
mov
or
add
scas
sub
pop
sub
xchg
ret
or
add
sbb
addr16
mov
retf
inc
mov
ins
add
icebp
fnstcw
ja
push
fld
inc
retf
lods
clc
in
pushf
lea
or
cld
xchg
and
aam
add
jno
adc
dec
jg
cmp
popa
popa
retf
popf
push
push
stc
cli
and
mov
dec
movs
push
mov
add
mov
sub
loopne
lds
sbb
jae
icebp
add
inc
or
retf
cmp
push
xor
and
in
add
rcl
sbb
cmp
mov
ja
test
jp
or
mov
sub
out
jno
add
add
pop
mov
movs
shr
inc
pop
mov
adc
jg
sbb
cmps
sbb
xor
mov
pop
push
xlat
push
or
aam
into
scas
inc
cmp
add
clc
lds
add
pusha
pop
cmp
add
aas
mov
scas
sbb
jae
in
add
sub
jbe
fistp
or
add
out
jno
cmp
rcl
sti
pop
jge
pop
out
jnp
push
add
test
adc
mov
lock
dec
movs
daa
inc
mov
jnp
pop
push
jbe
sub
mov
retf
adc
xchg
lock
add
call
movs
enter
add
sbb
mov
out
popf
aas
outs
sbb
xchg
ret
mov
movs
arpl
jmp
call
jmp
test
dec
ror
and
sub
cmc
add
loopne
or
dec
fidiv
jne
mov
xchg
imul
test
fcomi
jno
inc
pushf
adc
sbb
push
add
mov
lock
xlat
push
sub
jno
pop
jl
rcr
and
lods
ret
or
mov
adc
je
push
or
das
pop
add
mov
shr
pop
jno
cmp
jl
mov
lods
fiadd
jo
jp
popf
cmc
sbb
in
int
ret
add
mov
jp
in
cmp
out
sub
push
add
sub
adc
retf
cli
jne
sahf
push
shl
pop
pop
shl
push
push
idiv
xchg
dec
push
xchg
sbb
xchg
(bad)
sub
xchg
imul
je
cmp
rol
popa
aaa
ins
mov
or
nop
jnp
add
into
cmp
aaa
je
pop
sbb
add
jo
lea
and
js
fidiv
jmp
xlat
or
rol
shl
rol
pop
rcr
iret
mov
sbb
sub
hlt
mov
daa
test
retf
push
xlat
sbb
sub
icebp
inc
out
mov
and
pusha
jo
fdivr
leave
mov
or
push
ret
push
push
jne
jns
das
sub
push
gs
sbb
lahf
ret
jg
lea
push
sahf
jnp
sbb
pop
adc
add
fidiv
ficom
out
xchg
or
or
lea
push
push
pop
mov
pop
xchg
nop
jecxz
adc
ins
and
fiadd
pop
in
or
out
idiv
xchg
dec
xor
sub
(bad)
sub
push
ret
dec
inc
or
je
add
cmp
rol
or
adc
jecxz
or
cmc
lods
outs
in
jae
inc
fwait
xchg
icebp
add
out
mov
cmp
inc
dec
repz
arpl
fnstenv
test
nop
mov
inc
push
leave
imul
mov
mov
sub
mov
pop
or
or
push
mov
mov
outs
ret
cmp
xor
mov
test
ret
dec
pop
out
out
das
add
jge
inc
inc
sbb
jl
call
pop
dec
add
sar
das
adc
xor
cmc
pushf
cmp
sar
and
adc
pusha
inc
or
mov
and
jecxz
pop
cli
and
out
jp
ud0
(bad)
sbb
daa
(bad)
sar
stos
clc
xchg
repz
cmp
xor
fdivr
in
not
xchg
cmps
test
addps
pop
sub
test
jle
out
hlt
mov
retf
stc
sbb
adc
add
add
adc
xchg
or
add
ret
mov
addr16
dec
pop
sbb
cld
in
out
inc
lahf
add
add
cli
or
lock
retf
into
sbb
push
fdiv
arpl
pop
lahf
add
call
rcr
xor
sub
in
jae
lea
out
mov
loope
inc
das
test
mov
xor
adc
sub
add
mov
add
loope
jb
rcl
ja
mov
xor
push
inc
sub
in
lods
mov
inc
pop
in
mov
inc
push
or
or
add
lock
addr16
or
retf
jg
fidiv
inc
mov
sahf
sbb
cmp
sahf
das
out
out
or
xchg
push
test
sbb
add
adc
and
jo
adc
sbb
pop
and
fcomp
jns
add
stos
cmp
push
inc
sahf
jns
cdq
test
push
loopne
push
inc
popa
lods
aas
add
push
or
add
or
(bad)
push
lds
pop
rol
ins
or
fst
mov
scas
jecxz
add
cmp
mov
add
fucom
cli
cmp
xchg
xchg
inc
jle
(bad)
in
cld
adc
pop
rcl
imul
leave
xchg
jae
test
pop
jae
pop
neg
aas
not
pushf
loopne
std
loop
sub
mov
push
mov
clc
jae
sbb
and
dec
into
das
clc
mov
inc
leave
mov
mov
retf
pop
mov
div
ss
repz
xchg
xchg
jo
mov
aad
mov
das
movs
push
sub
jo
cmp
add
cmp
add
and
dec
inc
add
in
stos
test
add
add
ins
add
ret
cmp
add
inc
mov
jmp
cmp
shl
or
or
ret
mov
add
mov
mov
mov
retf
or
retf
mov
scas
inc
add
jle
xchg
sub
mov
lahf
cmp
out
pop
mov
aas
ret
(bad)
mov
sbb
and
lahf
test
xlat
or
or
cmp
dec
dec
pushf
jmp
sahf
sar
adc
add
lahf
arpl
add
fdiv
fdiv
jg
mov
and
push
sar
jns
ret
lods
jl
out
sbb
and
xor
mov
add
xchg
popa
sbb
xchg
out
adc
jnp
cmp
mov
lock
(bad)
movs
push
sub
loopne
cmc
sub
dec
addr16
cli
and
je
and
sbb
and
mov
outs
pop
mov
js
push
repz
cmps
bound
push
jle
rcl
outs
sbb
cmp
inc
push
add
dec
adc
jo
inc
adc
ret
ror
or
sbb
or
(bad)
stc
push
retf
sti
or
leave
and
daa
mov
aam
(bad)
int
add
scas
xor
and
jne
js
lods
jno
test
push
loopne
les
pop
retf
push
and
pop
sbb
mov
jecxz
pushf
repz
mov
and
test
(bad)
add
sub
cmp
adc
cmps
push
lahf
ins
stos
or
mov
enter
sbb
ret
inc
in
mov
pop
ins
dec
gs
jmp
pop
lds
adc
das
or
pop
out
sbb
and
shl
sub
sbb
add
mov
adc
ret
loopne
mov
pushf
sub
mov
pop
and
maskmovq
test
dec
sbb
add
rcl
int3
mov
inc
sbb
mov
rcr
push
add
adc
repz
and
into
add
push
enter
jnp
or
fidiv
push
es
dec
or
pop
dec
and
add
shl
dec
test
retf
jge
subps
sub
pop
bound
sbb
loop
jno
popf
pop
xchg
mov
ret
add
add
sub
aaa
fild
repz
sub
outs
arpl
sti
mov
pop
outs
and
pop
lea
pop
sub
pop
popf
pop
cld
xor
push
arpl
(bad)
push
inc
or
cmp
or
push
mov
xchg
or
push
pushf
rcr
add
pop
mov
clc
aam
dec
cmc
loope
jns
fsub
nop
and
dec
push
sbb
in
and
rol
adc
add
loopne
add
pop
pusha
mov
or
hlt
es
adc
add
sub
jae
loopne
enter
jmp
jge
pushf
aas
adc
sbb
aad
xor
mov
sub
or
push
push
sbb
sub
je
test
inc
push
xchg
nop
mov
pop
mov
inc
sti
add
cld
cmp
jge
gs
lea
adc
pushf
inc
sub
push
and
mov
mov
(bad)
cmp
fisubr
cld
adc
js
movs
movaps
mov
inc
mov
in
stos
xchg
std
pop
dec
movs
adc
or
fiadd
imul
je
inc
adc
cwde
xlat
jmp
loopne
xor
out
or
dec
add
ds
ret
lea
mov
loop
or
cwde
sti
and
int3
sub
or
lahf
jl
popa
(bad)
loopne
adc
cdq
sub
adc
pop
aas
das
add
jle
or
pop
mov
test
fcmovne
popf
add
sbb
jns
pushf
xor
cdq
jns
sbb
mov
imul
inc
adc
add
xlat
(bad)
cmp
cdq
jecxz
xor
retf
test
mov
jne
(bad)
addr16
mov
mov
add
pusha
xor
(bad)
ret
js
js
cmp
lahf
adc
out
cmp
mov
cld
sbb
and
enter
in
add
in
push
sub
addr16
adc
cmps
mov
in
cli
jecxz
jae
pop
mov
push
sub
mov
loopne
add
ds
nop
push
iret
aas
push
dec
(bad)
add
push
js
ja
nop
mov
clc
inc
push
sbb
pusha
or
mov
mov
mov
stos
adc
jmp
jge
sbb
add
ds
test
or
sub
add
or
or
add
cmp
in
std
hlt
dec
push
xor
lods
repz
push
push
out
fcmovnb
xchg
jecxz
add
dec
mov
adc
out
sub
jne
ret
sub
mov
sahf
add
fidivr
daa
or
or
(bad)
push
mov
sbb
push
call
pop
out
pop
(bad)
add
je
sbb
add
jbe
push
sbb
aaa
xor
or
imul
inc
(bad)
jae
or
xchg
push
test
add
cld
adc
push
(bad)
icebp
mov
jge
cmp
ret
aas
into
xchg
fsubr
add
inc
add
inc
adc
pushf
inc
mov
pushf
push
clc
xchg
or
add
add
lock
add
push
xor
or
add
lods
add
ss
sub
jmp
sbb
dec
fwait
cmp
pop
mov
fs
cmp
push
(bad)
call
push
repnz
sbb
test
or
push
sub
mov
inc
test
add
or
clc
and
mov
mov
pop
push
je
sbb
les
or
loope
push
push
fisttp
cmp
test
mov
cmp
cmp
jmp
hlt
stc
int3
sbb
push
push
sub
fld
jle
dec
pop
dec
movs
push
pop
outs
inc
xchg
sub
sub
mov
(bad)
xlat
sub
xor
xchg
or
or
imul
popa
test
adc
std
or
mov
pop
jmp
int
add
xor
iret
inc
mov
test
inc
xchg
iret
ror
lds
add
int3
or
mov
pop
fmul
movs
int
add
xor
loope
adc
je
repnz
punpckhbw
push
add
(bad)
clc
sub
push
test
inc
push
sbb
and
leave
jb
sbb
mov
push
sbb
call
inc
mov
sahf
out
xor
out
in
push
and
pop
or
int3
or
mov
popa
popf
and
je
jns
(bad)
mov
scas
cmps
repz
pop
push
sbb
cmp
pop
add
push
add
faddp
add
push
dec
add
xor
push
push
sbb
add
adc
mov
inc
les
int3
mov
sbb
adc
in
add
push
pop
daa
adc
cdq
adc
mov
xor
shl
enter
add
ins
xchg
and
mov
repz
loopne
sbb
sbb
fadd
add
xchg
icebp
test
bnd
aad
icebp
push
adc
xor
or
adc
jne
in
stos
or
in
jb
add
add
push
test
scas
cmp
add
dec
(bad)
clc
adc
push
and
sbb
push
sar
push
in
test
jb
pushf
scas
jecxz
push
test
mov
iret
mov
adc
or
pushf
dec
mov
test
mov
je
retf
movs
push
test
pop
adc
test
ret
xor
inc
inc
push
stos
lods
jecxz
movs
jecxz
push
push
cmp
add
adc
clc
je
and
or
add
and
adc
adc
or
mov
adc
mov
push
add
pop
daa
adc
mov
inc
xchg
jbe
mov
xchg
or
lds
imul
sbb
test
lea
outs
pop
mov
push
repnz
pop
and
aam
test
imul
jmp
add
dec
adc
sbb
dec
jle
xchg
cmp
je
inc
xor
or
add
fdiv
out
xchg
xchg
leave
pop
jne
mov
push
add
out
outs
mov
fdivr
out
mov
shr
mov
or
out
mov
mov
mov
pop
pop
sahf
adc
mov
push
scas
push
idiv
xchg
dec
sbb
dec
fld
push
add
adc
je
fcmovb
cwde
ins
add
sahf
jb
mov
clc
les
dec
hlt
mov
xor
dec
add
sbb
add
add
test
sbb
xor
test
xor
mov
add
pop
mov
arpl
test
xor
mov
sub
mov
mov
nop
shr
scas
jge
orps
inc
popf
jo
cmp
jo
inc
in
push
nop
push
add
cld
jno
mov
mov
stos
cwde
jecxz
mov
xchg
call
fisttp
in
daa
pop
paddusb
add
cmp
test
jbe
jb
cmp
std
in
jb
mov
xor
mov
push
sub
test
add
arpl
icebp
mov
add
push
rep
ret
lock
add
adc
stc
push
cmc
retf
sub
cwde
add
mov
inc
fadd
and
test
imul
mov
sbb
jno
add
cdq
rcl
jb
fisttp
mov
lock
add
repnz
sahf
shr
pop
iret
sar
xchg
sub
(bad)
mov
jne
adc
mov
int
add
loopne
sar
pop
(bad)
and
into
jb
or
sbb
enter
sub
mov
mov
push
add
jno
adc
iret
push
add
adc
mov
int
neg
test
pop
stos
mov
ins
add
pop
inc
jo
retf
dec
hlt
pop
cmps
lods
repz
add
mov
(bad)
in
sub
xor
cmp
mov
aad
mov
lock
add
sbb
jp
jl
add
ins
ins
aas
add
loope
dec
pop
call
jnp
cmp
dec
fwait
mov
mov
addr16
xchg
or
jecxz
pop
sar
mov
aad
ror
and
push
inc
lods
call
xor
lods
xor
sahf
bound
xlat
pop
pop
pop
mov
shl
(bad)
sbb
add
lods
jae
popf
xchg
arpl
sbb
shl
je
sbb
xor
out
mov
sbb
mov
sbb
and
sub
mov
xchg
push
jmp
mov
mov
(bad)
xlat
stos
in
push
add
pushf
add
jne
pusha
psubsb
or
sub
lock
(bad)
sub
pop
push
in
xchg
cld
leave
pop
add
add
jl
add
les
inc
fadd
in
leave
aas
add
repz
into
ds
inc
mov
mov
xor
in
add
add
jno
adc
sbb
pop
dec
push
dec
and
aam
cmp
aas
mov
or
or
cmp
cmp
lock
jns
mov
popa
pusha
out
pop
mov
push
inc
sbb
inc
call
inc
out
xchg
add
sbb
and
sahf
jns
push
sub
inc
sbb
jnp
pushf
or
xor
jl
or
sbb
dec
dec
add
lahf
aad
xchg
std
pop
dec
movs
adc
mov
test
push
add
lods
push
pop
(bad)
xlat
stos
jne
mov
xlat
or
xchg
or
fwait
(bad)
mov
daa
adc
push
add
call
and
dec
xchg
lahf
fdivr
inc
cwde
test
in
add
jo
cmc
add
lds
add
rol
shl
add
add
fidiv
(bad)
adc
dec
or
add
popa
push
jecxz
add
nop
addr16
sbb
cs
aaa
bswap
pop
es
push
sub
sub
or
(bad)
jno
or
(bad)
imul
retf
add
loope
jno
cmp
je
inc
push
daa
push
sbb
xor
(bad)
and
add
enter
mov
xchg
and
sub
xor
jmp
push
pop
lds
iret
push
cmp
in
xor
push
test
add
inc
pusha
add
mov
gs
xor
jae
xor
adc
lahf
mov
sbb
add
lea
xchg
das
xlat
ret
(bad)
mov
push
ins
pop
imul
add
stc
add
aam
retf
jge
popa
pop
shl
rcr
mov
mov
xchg
jp
or
out
sbb
adc
push
xchg
fcom
fild
push
call
add
xor
jl
mov
int3
cdq
in
or
mov
add
jmp
fild
mov
loopne
inc
out
sbb
or
pop
(bad)
loopne
inc
mov
aaa
cmp
add
adc
add
in
not
xchg
cmp
or
test
push
gs
sub
sbb
push
push
mov
mov
or
add
jg
push
daa
test
sub
add
es
xchg
ss
adc
cdq
pop
data16
in
enter
aam
iret
aam
int
or
jecxz
mov
in
inc
mov
xchg
pop
ins
cdq
xchg
es
push
xor
(bad)
int
dec
test
imul
mov
add
inc
loopne
pushf
inc
mov
pop
test
add
inc
add
cmp
jp
sbb
adc
test
into
mov
pop
cmp
jb
cmps
mov
retf
call
adc
jnp
sbb
repnz
imul
sub
pop
add
inc
cmp
sub
add
jecxz
pop
ins
add
inc
pop
(bad)
xlat
push
leave
push
add
and
push
add
add
or
add
cmps
inc
inc
icebp
les
pop
lock
mov
enterw
and
cld
add
popa
xor
aas
dec
in
jbe
pop
lock
pop
inc
mov
xchg
add
add
inc
adc
pop
mov
push
inc
jae
lods
jecxz
sbb
(bad)
add
nop
daa
les
sub
add
mov
popf
jl
push
add
int
and
push
hlt
pop
or
push
pop
jae
and
push
mov
mov
loop
add
(bad)
mov
add
push
xor
(bad)
pop
mov
mov
xchg
ja
cmp
inc
cmp
mov
add
cld
ret
fs
ror
push
pop
imul
jne
pop
adc
pop
sub
push
add
add
add
pop
inc
adc
push
or
or
aas
jns
mov
loope
add
test
rol
mov
loopne
pop
add
mov
cli
pop
pusha
mov
xchg
aam
xchg
sub
xor
push
sbb
add
jecxz
in
cmp
loopne
test
inc
inc
daa
pop
or
mov
jb
lods
out
or
jae
add
and
(bad)
addr16
in
inc
xchg
xor
xchg
pop
lock
mov
dec
sub
or
add
and
pop
les
mov
sbb
mov
arpl
or
retf
add
pop
enter
dec
pop
fidiv
int3
in
js
or
xchg
addr16
pop
inc
and
fisubr
fadd
test
mov
cmp
gs
rol
pop
or
rcl
jne
movs
arpl
cs
adc
test
in
jmp
mov
add
mov
push
cmps
or
or
mov
imul
mov
pop
pusha
xor
rol
adc
mov
sbb
addr16
inc
out
lea
and
add
(bad)
pusha
adc
test
add
(bad)
repz
xor
sbb
into
sub
push
call
sub
and
stos
gs
mov
daa
xlat
fdiv
sar
add
and
and
pop
sar
retf
repz
dec
inc
retf
int3
out
mov
mov
fdivr
in
stos
sub
push
imul
imul
jbe
sbb
test
mov
inc
adc
and
sahf
sti
daa
mov
adc
xchg
ret
xchg
or
or
xor
inc
pop
stos
loope
inc
(bad)
jge
cld
adc
ins
and
in
and
pushf
pop
nop
adc
fidiv
adc
mov
adc
sbb
add
lea
sub
cmps
fiadd
das
inc
sub
mov
mov
call
pushf
cmp
mov
ds
sbb
(bad)
jno
mov
and
out
or
stos
out
in
rcl
sti
sub
sub
adc
inc
push
test
lea
aaa
js
clc
xlat
jae
xchg
lahf
cld
in
repz
mov
dec
test
fisttp
add
xor
or
push
push
sub
xor
add
jb
add
push
and
test
enter
and
mov
dec
adc
push
sbb
add
add
retf
mov
cmps
imul
dec
(bad)
sub
outs
test
rcl
push
xchg
imul
push
(bad)
stc
jae
repnz
in
imul
xchg
sbb
lahf
mov
xor
dec
add
add
mov
or
cmp
sbb
adc
add
out
test
xchg
add
in
sbb
add
push
add
and
ins
ficomp
pop
cmp
and
or
add
ins
cmp
pop
xor
adc
push
(bad)
icebp
lea
popa
pusha
add
daa
push
jle
mov
icebp
out
inc
rol
sub
test
daa
or
jl
pop
cmp
in
inc
sbb
pushf
test
adc
imul
sub
pop
sub
jnp
push
mov
lock
(bad)
out
ja
jo
(bad)
ror
rol
sub
repz
adc
push
add
or
jl
sub
repnz
jo
sbb
sbb
adc
and
js
ja
mov
aaa
iret
xor
or
add
inc
cmp
scas
cmps
pop
inc
pusha
sub
sbb
scas
nop
push
cmp
jbe
cs
cwde
sbb
sub
inc
iret
fwait
bound
jno
add
cmp
pop
add
iret
(bad)
lock
lea
movs
xchg
test
dec
movs
out
mov
outs
dec
mov
popa
es
pop
push
nop
into
pop
cmps
out
mov
sbb
add
icebp
add
adc
adc
pop
add
inc
or
ss
fiadd
pop
in
aaa
inc
scas
popf
cmps
add
push
std
sbb
mov
push
adc
mov
cld
ror
and
jle
add
mov
nop
das
pop
inc
jns
mov
das
call
pop
add
push
mov
adc
sub
and
js
rol
add
add
call
jnp
pop
xor
(bad)
jne
inc
fptan
cli
add
inc
adc
pop
add
sbb
nop
stos
or
std
bound
jmp
icebp
pop
jecxz
xor
push
arpl
pusha
test
outs
sbb
ret
pop
add
je
retf
xor
jmp
jmp
sbb
outs
sbb
test
pushf
cs
dec
xchg
mov
push
add
repz
inc
or
addps
into
xor
inc
or
or
js
cmp
xchg
pop
add
cdq
xor
sbb
jb
adc
adc
mov
add
loopne
loopne
aas
mov
rol
xor
data16
out
pop
lock
paddb
and
dec
mov
pop
mov
xchg
mov
jns
push
(bad)
or
add
and
retf
mov
iret
stc
add
rcl
xor
pushf
sub
or
fstp
mov
sub
cli
cmp
dec
add
sub
sub
ss
sub
sub
add
xor
aam
clc
xchg
mov
add
cmps
pushf
xor
mov
or
bound
loope
sub
push
or
or
adc
adc
ret
push
add
movs
push
cld
push
add
mov
add
stos
mov
jecxz
add
sbb
(bad)
sub
bound
sub
adc
and
mov
add
mov
or
fcomp
or
push
mov
ins
stos
adc
push
jg
push
sti
mov
adc
in
or
inc
inc
and
aas
and
jns
and
int3
mov
icebp
jb
popf
mov
psubsb
mov
ss
sub
sub
add
jecxz
(bad)
icebp
lods
push
dec
out
call
test
out
push
mov
push
sbb
rol
(bad)
mov
add
fdivr
clc
mov
loopne
push
lock
or
sub
jno
cmps
xchg
adc
or
ret
sbb
adc
in
sbb
add
or
sbb
or
add
add
jno
enter
add
jge
jge
xchg
(bad)
fwait
pop
inc
in
xor
mov
loopne
jb
mov
add
ja
pop
cmps
push
add
jae
(bad)
fisub
xlat
sar
mov
fwait
call
sub
sub
push
mov
push
add
mov
gs
adc
jo
jne
push
mov
loope
add
sub
retf
das
loope
jno
inc
and
sbb
lock
sub
and
xchg
out
add
int
aas
push
mov
leave
out
ds
dec
xchg
push
daa
fist
movs
sub
add
pusha
jb
mov
sub
or
shl
adc
mov
shl
ins
test
sbb
sbb
xchg
pop
enter
pop
daa
inc
lods
loopne
loopne
inc
aaa
jo
add
lahf
jo
cmp
cmc
jb
mov
cmp
bswap
or
mov
aas
outs
mov
shl
push
mov
jb
mov
(bad)
retf
xor
pop
inc
jge
ds
mov
or
or
push
and
or
rol
sub
and
xor
fwait
inc
inc
or
pop
mov
pop
rcl
push
in
or
add
push
cs
int
xchg
ret
jae
in
jno
pushf
adc
jecxz
adc
das
or
fadd
hlt
(bad)
or
push
add
scas
adc
rol
stc
adc
mov
out
push
ss
or
repz
test
or
es
add
jns
cmp
and
lahf
std
add
xchg
js
mov
dec
scas
mov
or
or
dec
movs
or
stos
add
xor
jl
add
rcl
aas
sbb
ret
ret
sbb
mov
push
fwait
pop
(bad)
adc
xchg
daa
or
arpl
and
add
test
push
add
jae
pusha
ins
fstp
jle
lock
pop
or
xor
pop
loopne
ret
push
sbb
test
dec
sub
inc
push
shl
loop
and
push
add
test
test
in
dec
fisub
test
in
jb
push
cld
sub
lock
mov
aas
arpl
add
icebp
(bad)
pushf
push
mov
cmp
in
in
retf
cmps
into
add
pop
sar
mov
push
icebp
pop
call
add
ficom
jo
(bad)
cmp
fwait
add
sbb
add
adc
inc
mov
mov
and
push
retf
dec
or
sbb
add
or
lds
call
imul
xor
ja
js
icebp
fisttp
add
adc
push
inc
adc
int3
cmp
arpl
adc
xor
lock
push
addr16
call
rol
daa
scas
(bad)
fcmovnb
mov
mov
iret
xchg
or
inc
sub
loope
or
mov
int
in
xchg
xor
jb
fcmovnb
adc
push
nop
out
jb
popf
cmova
lahf
sti
sti
mov
jle
test
xchg
cmp
mov
sub
int
sbb
test
mov
pop
mov
add
add
nop
and
adc
les
test
in
jb
add
mov
push
les
and
cmp
mov
or
ss
xchg
ja
aas
mov
iret
(bad)
fistp
test
jg
mov
mov
add
cli
mov
cmp
arpl
retf
pop
sbb
stc
jbe
sar
sbb
pop
sti
xchg
jecxz
shl
or
retf
outs
dec
inc
add
jnp
mov
jp
icebp
jmp
and
loop
sbb
add
rcr
pop
loopne
ja
xchg
jecxz
sbb
inc
retf
arpl
out
scas
imul
sahf
xchg
xor
push
push
jne
sub
xchg
(bad)
test
jecxz
and
hlt
mov
or
xor
dec
adc
mov
push
push
dec
add
sub
data16
inc
add
inc
push
add
jae
push
add
(bad)
ss
add
fsubr
call
mov
xor
in
xlat
ds
das
test
pusha
mov
push
std
add
lahf
jmp
add
sahf
mov
popf
xlat
lods
jno
test
add
mov
dec
xlat
sub
or
cmp
inc
dec
push
and
movs
scas
lock
jns
pop
pop
mov
mov
cmp
xor
ds
adc
je
ret
pop
jl
imul
jecxz
inc
or
(bad)
in
or
add
out
(bad)
mov
fs
ror
push
pop
jo
add
add
xchg
jne
fwait
and
jg
add
add
sbb
inc
xor
cmp
xor
dec
ret
int
pop
(bad)
add
mov
add
ret
popf
pop
cmp
pushf
cmps
clc
push
in
cmp
jp
mov
int3
mov
gs
nop
add
(bad)
ftst
ror
sti
xchg
push
mov
jnp
gs
aas
add
push
(bad)
ficom
xor
xchg
mov
add
add
cmp
and
jo
inc
lock
xor
sub
adc
addr16
ret
stc
add
nop
in
adc
adc
add
cs
fcom
sub
xchg
jg
xchg
ds
mov
cmp
not
popf
pop
jne
ss
jb
mov
(bad)
retf
dec
xchg
mov
add
xchg
or
enter
push
lock
outs
jg
iret
pop
adc
add
xor
xchg
or
sub
pop
pop
jmp
cmp
mov
iret
push
add
pusha
mov
push
imul
xor
cmps
aaa
mov
out
jnp
into
nop
das
mov
add
lea
add
mov
add
pop
dec
cs
or
enter
mov
or
add
sti
out
add
retf
sbb
adc
xchg
ror
stc
repz
jg
dec
sahf
mov
into
and
add
out
fwait
sti
inc
ret
jns
mov
mov
mov
and
inc
adc
ins
ins
gs
stos
add
mov
xor
in
add
sub
or
xor
daa
stos
pop
in
add
mov
shr
stc
fadd
pop
lock
ret
ins
call
scas
std
test
xor
add
lods
xor
adc
mov
add
retf
rcr
mov
sbb
add
and
(bad)
sub
scas
adc
fdiv
jg
rcr
push
gs
and
jae
test
adc
mov
lods
ja
xor
xor
pop
jge
pop
or
jno
fdivr
cmp
jb
add
or
dec
movs
jne
xor
movs
lods
jecxz
and
sbb
push
adc
enter
pushf
inc
mov
inc
push
add
hlt
jno
int3
mov
pop
lods
pop
jle
(bad)
xchg
pop
movlps
push
sbb
nop
pop
lods
cmp
add
xchg
sub
nop
leave
cdq
adc
push
xor
lahf
dec
add
pop
inc
ret
inc
cwde
xor
call
or
mov
and
inc
aad
jb
in
or
jae
test
add
inc
pop
add
adc
jo
mov
mov
in
cdq
add
add
sub
sub
mov
ds
leave
xor
inc
mov
call
cmp
jnp
or
not
popf
cmp
loopne
es
adc
mov
jmp
sub
cmp
add
add
mov
or
fiadd
cwde
jecxz
add
loopne
je
mov
add
dec
jns
sbb
repz
imul
xchg
aaa
gs
jle
dec
xor
sahf
mul
add
or
(bad)
js
ror
pop
call
call
pusha
xchg
repz
aas
mov
or
xor
loopne
mov
jnp
xor
mov
loope
mov
xchg
sub
jl
imul
mov
in
cmp
add
cmp
lahf
in
sbb
add
and
imul
mov
pop
cmps
mov
outs
fwait
les
add
inc
lds
fdiv
pusha
fs
arpl
adc
jecxz
sub
cmp
cmps
sub
pop
data16
(bad)
adc
or
xor
fbld
dec
fs
ins
cmp
cmp
sbb
xchg
sti
pop
rol
mov
outs
and
mov
jge
mov
retf
dec
push
jae
into
jp
gs
les
jo
out
mov
(bad)
(bad)
or
enter
sub
outs
loop
lds
inc
fild
cmp
or
or
xchg
call
std
in
sahf
scas
dec
(bad)
movs
push
cmp
shr
movs
or
inc
add
xchg
jne
(bad)
push
adc
sbb
add
push
lahf
iret
pusha
adc
mov
rol
add
mov
icebp
sbb
xchg
mov
fist
add
mov
(bad)
mov
push
push
adc
les
ins
or
sub
or
and
std
jno
add
movaps
sub
test
pushf
aas
loope
nop
daa
(bad)
iret
xor
mov
or
pop
icebp
pop
aaa
nop
or
jae
fidiv
xchg
or
add
add
sub
add
lea
jg
push
lock
push
(bad)
icebp
ins
xchg
inc
add
add
push
fcom
and
add
pushf
xor
scas
add
cdq
push
mov
nop
add
jbe
and
xor
inc
mov
and
jno
add
jge
cmc
sbb
sti
mov
mov
addr16
mov
inc
mov
add
jb
mov
repz
mov
std
sbb
push
pop
adc
mov
pop
sti
adc
paddb
sbb
stos
pop
cld
or
in
xor
jecxz
add
xchg
pop
loope
daa
adc
or
inc
repz
das
sub
shl
lahf
ss
fucomip
push
idiv
xchg
dec
xchg
cmp
or
cmps
mov
sub
(bad)
test
jecxz
es
mov
cld
cmp
ja
loopne
sahf
pushf
mov
mov
loopne
mov
dec
mov
or
xor
scas
dec
repz
xor
sbb
add
mov
into
sbb
dec
push
dec
add
or
pusha
add
fadd
sbb
(bad)
mov
xlat
cli
sar
lock
pop
adc
push
jbe
(bad)
mov
out
(bad)
jo
ds
add
out
lea
add
mov
pushf
pop
jo
pop
cmp
add
loopne
retf
movs
ror
push
push
jb
sub
mov
pop
stos
mov
outs
fwait
add
sub
ret
and
jns
fcom
adc
xchg
sub
mov
sbb
add
dec
pop
or
or
aam
push
in
sub
pop
or
mov
mov
in
xor
fmul
mov
jbe
or
xor
cmp
add
fdivr
ins
int
cmp
mul
hlt
lds
xchg
(bad)
cmp
and
push
jbe
inc
sbb
adc
push
add
fst
mov
sbb
mov
xor
popf
xchg
sti
push
and
mov
mov
imul
test
ins
out
cmc
mov
movs
xchg
movs
or
xchg
push
pop
js
and
dec
pop
mov
push
jnp
or
dec
movs
push
test
pop
sbb
sub
push
ror
sub
dec
movs
push
test
add
push
add
mov
movs
push
test
(bad)
cmps
push
(bad)
or
xchg
dec
movs
push
test
cmp
sbb
out
rcr
test
movs
shl
loopne
push
call
push
sub
sbb
inc
fistp
inc
sub
or
xchg
dec
movs
push
test
ins
lods
add
add
push
sub
test
jo
xor
sti
lock
add
xchg
dec
movs
push
test
outs
pop
gs
sub
sub
dec
movs
push
test
and
imul
cmp
xchg
dec
movs
push
test
inc
mov
cmp
add
movs
push
jmp
mov
add
push
sub
sub
fiadd
test
movs
shl
test
stos
sbb
push
add
xchg
dec
movs
push
test
outs
adc
aaa
outs
out
pop
add
push
sub
sub
fst
add
pop
add
push
pop
inc
fistp
mov
jmp
push
xlat
scas
pop
fdivr
mov
es
pop
shr
push
xor
pop
mov
jo
add
out
stc
pop
adc
sbb
push
lahf
mov
hlt
stos
fnstsw
cmps
scas
mov
std
jecxz
cmp
popf
sti
dec
mov
idiv
push
iret
movs
ins
ss
call
pop
sti
das
pop
jp
out
pop
lahf
std
fstp
sti
outs
stc
inc
stmxcsr
jecxz
out
arpl
mov
mov
not
pop
jbe
ds
shr
iret
std
dec
(bad)
cld
cld
shr
fnstsw
pop
fwait
outs
pop
mov
sti
(bad)
mov
clc
pop
pop
pop
mov
fild
mov
push
cmp
jae
mov
dec
movs
add
jno
(bad)
outs
jge
xlat
jmp
push
cmp
(bad)
(bad)
outs
jns
pusha
fld
mov
jg
jecxz
out
(bad)
retf
dec
div
jmp
pop
cmp
xlat
dec
push
shr
into
(bad)
neg
mov
add
fadd
cmp
mov
das
fscale
out
in
scas
pop
mov
mov
(bad)
pop
div
push
neg
push
jns
push
imul
fisub
inc
mov
cmp
dec
loopne
push
hlt
xor
sub
xlat
push
cmp
neg
popf
popf
or
jbe
jnp
xchg
ja
mov
mov
jno
cmp
das
pop
jle
out
pop
pop
js
out
and
push
shl
(bad)
xchg
in
(bad)
stc
(bad)
pop
push
cmp
inc
neg
pop
add
mov
ret
jno
scas
pop
sbb
jge
sbb
(bad)
(bad)
out
fdivrp
mov
cmc
mov
dec
test
outs
push
int
cmp
push
add
sbb
dec
out
addr16
and
inc
rcr
cmps
gs
mov
lahf
mov
arpl
inc
shl
mov
push
inc
loope
(bad)
and
out
cmp
out
scas
out
mov
sbb
jle
mov
out
(bad)
xchg
mov
inc
sub
(bad)
outs
push
sar
add
ins
add
mov
push
ds
inc
fist
lods
shl
fcmove
lahf
mov
shl
ins
add
ins
sbb
jno
loopne
iret
mov
pop
(bad)
stc
je
sub
jl
hlt
sahf
jnp
mov
int
push
out
inc
test
ins
adc
scas
push
add
out
dec
add
and
add
lea
(bad)
rcr
add
jmp
mov
out
add
inc
pop
mov
sti
add
sbb
test
fsqrt
ins
aam
fmul
inc
(bad)
loopne
clc
mov
sub
cmp
mov
mov
rcl
mov
jno
jne
mov
cmp
shr
pop
ficom
add
pop
sub
jbe
aaa
adc
test
mov
pop
dec
mov
pusha
and
stos
and
(bad)
outs
mov
xor
mov
sbb
xchg
pop
jle
ins
xchg
dec
cs
cmp
pop
shl
test
rcl
push
pop
ins
mov
je
sub
test
add
movs
mov
add
test
mov
fwait
scas
add
in
jp
or
inc
cmps
push
pushf
mov
mov
cwde
scas
fild
add
sbb
sub
sub
push
test
inc
shl
mov
call
mov
(bad)
sar
jmp
stc
jg
sti
mov
jmp
jae
ins
aas
scas
mov
fistp
vandnps
bound
xlat
ins
sahf
add
outs
aas
fistp
mov
pop
add
and
mov
(bad)
pop
pop
(bad)
repnz
xor
leave
and
inc
mov
cld
lods
jmp
int3
fnstcw
add
push
cli
dec
add
idiv
xchg
xchg
shl
add
push
shr
pop
add
wrmsr
imul
retf
sti
adc
inc
lahf
mov
push
xchg
fimul
inc
popf
ins
aaa
dec
faddp
add
pop
(bad)
sahf
mov
pop
push
push
sar
aam
xor
mov
fdivr
jmp
xchg
xlat
out
(bad)
jmp
dec
xor
mov
clc
sti
outs
jge
pop
sub
enter
or
cld
shr
div
xor
add
jg
jmp
into
icebp
cmp
jno
inc
stos
js
inc
arpl
(bad)
cmps
scas
cld
dec
jg
into
jnp
pop
jmp
ins
add
inc
mov
and
stos
out
clc
cmp
hlt
out
lods
or
xchg
in
sub
mov
xchg
je
pop
ds
jle
push
gs
lahf
dec
repnz
inc
ins
xlat
mov
add
call
fnstsw
sbb
mov
pushf
fs
mov
mov
mov
lahf
jmp
mov
(bad)
jnp
mov
aas
(bad)
or
jmp
sbb
mov
dec
rcr
xchg
push
icebp
cld
mov
jecxz
clc
ret
ret
inc
aaa
test
movs
int
push
jno
stos
cmp
cmp
int
sbb
adc
je
fisubr
mov
repz
into
aad
cmp
xchg
jge
hlt
in
(bad)
and
jne
push
ror
cmps
fcmovne
pop
daa
cld
daa
fistp
mov
xlat
pop
push
mov
in
jo
cmc
pop
(bad)
test
mov
push
jp
outs
mov
bound
pop
inc
(bad)
xchg
ss
jmp
inc
sub
fnsave
pop
fisttp
div
iret
fist
fmul
adc
sbb
mov
imul
add
add
outs
rcr
test
mov
inc
cmp
cmp
(bad)
fist
mov
in
leave
jae
or
sub
aam
mov
pop
mov
add
cmp
push
mov
gs
pop
mov
rol
pop
cmp
mov
ret
loop
dec
ret
pop
je
pop
fwait
dec
fidiv
or
jne
aad
and
mov
repz
scas
loop
sbb
sti
loope
adc
ins
scas
xor
int
rcr
dec
loope
or
dec
movs
and
add
dec
pop
xchg
push
mov
cli
fsubr
scas
jnp
aam
jnp
loop
gs
push
push
je
pop
mov
cmp
aas
cs
xlat
dec
loop
shr
lahf
popf
dec
je
sub
into
dec
fstp
xchg
imul
retf
(bad)
xchg
xchg
imul
in
mov
fsub
cvtps2pi
dec
fwait
or
pop
mov
das
fbstp
sti
cmp
repz
imul
mov
add
shl
xor
pop
into
pop
scas
or
inc
add
adc
xor
retf
push
inc
repnz
lods
mov
(bad)
out
or
cld
ficomp
dec
xlat
mov
fsub
sti
sub
shl
xor
and
popf
push
pop
mov
(bad)
mov
repnz
dec
das
lahf
stos
mov
in
pop
or
jae
jmp
outs
call
and
push
popfw
out
not
lea
mov
cmc
test
xchg
push
xlat
xchg
int3
jecxz
cmp
xchg
test
ror
test
jo
adc
add
cmp
fidiv
xchg
aad
fidiv
neg
fnstcw
xchg
in
(bad)
mov
out
push
xchg
mov
fidiv
leave
mov
sub
mov
jge
addr16
test
and
test
mov
add
jns
xchg
(bad)
xchg
dec
movs
inc
call
js
sub
int
xlat
fdiv
jp
dec
(bad)
add
sub
xor
(bad)
sahf
mov
pusha
int3
cmc
loop
data16
shl
inc
mov
mov
mov
pop
idiv
retf
push
add
jno
add
retf
push
clc
int
rol
xchg
add
(bad)
xchg
adc
xor
ds
iret
add
add
sbb
shl
push
mov
rcr
mov
push
pushf
sbb
jne
push
or
inc
inc
mov
sub
adc
adc
das
scas
pop
push
div
mov
add
dec
aaa
add
adc
rcr
clc
mov
cld
fld
shl
xchg
push
imul
mov
xlat
push
pop
aas
dec
pop
mov
sar
jo
fistp
pusha
shr
das
mov
sub
mov
in
std
pop
fidiv
add
repz
sbb
addr16
mov
aad
lahf
mov
popf
sub
mov
mov
jg
sbb
sahf
sti
cdq
jae
add
je
rol
rcr
imul
lods
jg
aam
mov
dec
sahf
xchg
loop
fld
cmps
add
sbb
cmps
imul
retf
mov
add
sahf
dec
retf
in
and
(bad)
js
shl
aas
pop
mov
mov
aaa
dec
add
mov
retf
add
(bad)
sub
sbb
mov
cmp
push
and
repz
xchg
sti
fstp
inc
mov
out
and
imul
lock
into
movs
cmp
pop
(bad)
data16
add
jb
adc
fs
jmp
jl
jnp
(bad)
mov
xchg
test
xchg
mov
mov
xchg
mov
push
add
pop
sub
call
aam
into
stos
(bad)
hlt
sbb
add
jae
cmps
in
into
fild
inc
push
test
cdq
jl
and
push
add
inc
cwde
mov
add
xchg
pop
ficom
das
dec
jg
pop
stos
dec
add
jmp
mul
sbb
push
shl
xchg
adc
xchg
in
pop
ret
cmc
arpl
fbstp
and
ror
loopne
sbb
sbb
dec
loope
adc
sbb
add
movs
out
add
jmp
jb
or
loop
cmps
fsqrt
rol
push
jmp
addr16
cmp
lock
ja
lahf
scas
jae
jbe
xchg
fist
leave
mov
int3
mov
xchg
repnz
pop
dec
xlat
fiadd
add
ficomp
dec
xchg
in
loop
xor
jo
sti
cmp
repz
test
xchg
icebp
rcl
adc
add
loopne
aas
pop
push
jb
dec
movs
out
push
mov
inc
into
push
mov
scas
out
pop
cmp
aad
or
inc
icebp
test
gs
sub
inc
fwait
xchg
push
push
outs
jg
outs
and
fidiv
enter
add
add
fmul
fwait
xchg
mov
add
test
and
retf
jns
mov
sbb
cmp
in
fnstsw
mov
sbb
mov
call
cmp
jbe
aaa
or
xadd
push
add
or
dec
daa
inc
or
in
fsqrt
push
pop
sar
in
xchg
ret
popf
setge
jae
je
xchg
cmp
bound
inc
dec
add
and
mov
jbe
mov
sbb
mov
div
(bad)
fwait
inc
ret
out
jns
pop
pushf
mov
add
or
ficomp
adc
push
repz
popf
(bad)
mov
mov
mov
pushf
xor
std
sbb
idiv
js
addr16
xchg
dec
mov
je
(bad)
add
jle
add
xchg
xchg
xchg
dec
(bad)
push
push
mov
(bad)
mov
sbb
mov
nop
xor
retf
(bad)
jnp
lahf
ficomp
fs
addr16
icebp
pop
psadbw
pushf
std
in
(bad)
std
test
(bad)
cli
mov
xlat
out
or
mov
push
cmc
aad
cmp
div
sbb
fs
popf
stc
cmp
scas
bound
cmps
dec
cs
cs
div
jmp
jge
mov
(bad)
pop
ins
pop
mov
pop
dec
sahf
arpl
(bad)
(bad)
std
movs
pop
dec
fcmovnbe
cwde
div
iret
fist
fisttp
scas
ror
dec
imul
dec
imul
adc
outs
cmc
add
add
mov
fcomp
mov
scas
lock
dec
xor
xchg
icebp
add
mov
ins
div
mov
imul
jne
sbb
sbb
clc
sar
inc
in
ja
mov
ds
lds
push
ss
push
jbe
and
dec
sub
or
ficomp
out
test
push
pop
cmp
pusha
inc
nop
mov
sub
xor
dec
pushf
jnp
sar
lods
fnstsw
add
loop
call
bound
jmp
loop
mov
jp
inc
stos
mov
fbld
out
push
mov
or
push
sub
adc
ret
fistp
xor
pop
mov
je
ins
dec
movs
jno
movs
stc
mov
mov
std
cli
or
mov
inc
aas
(bad)
xor
push
into
mov
mov
popa
ds
dec
cmc
sar
cmc
jmp
std
or
jecxz
xchg
jnp
pop
mov
cwde
cmp
stos
ds
push
pop
xchg
sub
stc
mov
popf
pop
not
adc
and
out
ror
fstp
divps
aas
(bad)
push
je
inc
cmps
ret
jge
hlt
in
out
cmc
add
fist
or
xor
xor
jp
fstp
mov
jge
sub
adc
jl
loop
cmps
sti
sbb
test
aaa
mov
out
in
sti
icebp
mov
ja
jg
gs
int3
(bad)
mov
js
push
cmp
outs
xchg
or
lea
adc
or
(bad)
imul
das
popf
fild
jmp
mov
in
addr16
rcl
ja
hlt
fsubr
jo
dec
xchg
outs
mov
call
out
mov
fsubr
fscale
jo
mov
outs
jmp
mov
pop
mov
sbb
fdiv
imul
add
addr16
js
ss
into
pop
jne
daa
dec
xor
dec
push
cdq
into
mov
mov
xchg
pushf
xchg
jbe
rcl
fcom
ret
int3
cmp
and
and
js
retf
(bad)
push
stos
js
(bad)
mov
jge
cli
(bad)
aad
xchg
sub
dec
jmp
mov
mov
out
mov
dec
movs
push
test
lods
and
sub
push
mul
add
or
push
shl
add
imul
movs
dec
test
movs
shl
in
and
clc
jmp
ret
ret
fbld
ins
fdivr
jb
or
dec
movs
push
test
xor
dec
sbb
aaa
sbb
jae
nop
rcr
xor
add
push
sub
sub
stos
add
ret
fbld
das
cmp
and
mov
movs
push
imul
sti
xchg
sbb
add
mov
hlt
jns
pop
test
movs
shr
aad
ficomp
pop
jp
push
(bad)
rcl
add
loope
stos
add
pop
xchg
frstor
xchg
dec
movs
xor
xor
xchg
aad
ficomp
out
fisttp
add
mov
rol
add
mov
push
sub
dec
sub
mov
sbb
movs
pop
mov
sub
sub
dec
movs
push
test
mov
push
add
jno
scas
add
jge
fild
inc
pop
push
push
in
mov
fnsave
or
xchg
dec
movs
push
imul
lods
mov
jnp
outs
cmp
adc
push
test
mov
xchg
push
ret
pop
or
dec
add
adc
test
add
xchg
fsubr
aaa
push
add
push
sub
dec
stos
popa
lods
and
imul
mov
fwait
or
lahf
retf
add
mov
push
sub
lea
pop
popf
out
std
fwait
add
push
loope
popa
add
inc
adc
jo
mov
xchg
dec
movs
inc
sbb
dec
sti
cmp
jno
cmps
stc
loopne
es
add
loope
verw
dec
add
rol
cld
push
jbe
sbb
das
xchg
dec
movs
push
test
push
mov
push
out
pop
pop
jl
fdivr
pop
inc
jo
jp
(bad)
xchg
dec
movs
push
test
mov
xchg
push
pop
cld
add
fbld
sbb
or
push
test
mov
fdiv
mov
sbb
push
cmp
jb
dec
jmp
add
xchg
dec
movs
push
jmp
push
xchg
jo
mov
(bad)
mov
idiv
sub
leave
sub
push
sub
or
xchg
jmp
sbb
aas
dec
loopne
jno
push
add
(bad)
int
jp
pop
mov
push
sub
test
xchg
push
in
xor
ins
clc
jmp
outs
test
outs
fwait
sti
pop
dec
add
pusha
test
daa
pop
or
mov
mov
gs
inc
clc
retf
add
cmp
push
sub
sbb
mov
mov
sbb
lock
sar
fild
idiv
loop
add
jbe
mov
adc
push
test
out
cmp
stos
xor
sbb
repnz
jp
add
inc
sub
mov
outs
add
cmovnp
movs
in
xlat
jle
mov
das
xor
lock
dec
add
mov
sub
ja
std
fild
pop
add
adc
mov
or
dec
movs
push
test
mov
rol
stos
push
lock
ret
cmp
mov
loopne
stos
add
test
push
dec
pop
mov
and
fsubr
loopne
and
cmp
std
sti
ficomp
ja
aas
iret
sub
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
xor
add
add
add
add
adc
add
add
sub
and
add
jo
or
add
sub
add
outs
lahf
add
or
add
or
pop
adc
add
push
add
add
add
xor
add
add
add
add
adc
add
add
add
push
add
sub
xor
add
add
adc
cmp
add
jb
add
jo
pop
add
add
mov
add
add
xor
add
add
add
add
adc
cmp
add
jb
add
jo
pop
add
add
mov
cmp
add
or
je
add
add
add
add
xor
add
add
add
add
adc
cmp
add
jb
add
jo
pop
add
add
mov
cmp
add
or
je
add
add
add
add
xor
add
add
add
add
sub
add
push
jb
add
jo
pop
add
add
mov
cmp
add
or
je
add
add
add
add
push
sub
or
add
sbb
add
cmp
add
sub
add
or
sub
add
push
add
movs
add
or
pop
sub
add
push
outs
movs
add
or
sub
add
outs
cmps
add
or
sbb
add
push
add
add
sbb
add
add
pop
sub
or
adc
sub
sbb
add
add
adc
push
inc
add
push
jae
add
or
add
or
sbb
add
or
sub
pop
sub
jle
add
add
add
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
jb
add
jo
lods
add
or
lods
add
or
add
add
add
add
jo
outs
scas
add
or
add
adc
add
adc
add
das
add
adc
jb
add
jo
lods
add
or
lods
add
or
add
add
add
add
jo
outs
scas
add
or
add
adc
add
push
add
add
add
adc
inc
add
push
sub
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
adc
jnp
add
add
add
xor
add
add
dec
add
adc
jnp
add
add
fld
add
sub
xor
add
add
adc
sub
add
or
jae
add
or
add
add
add
or
jo
fild
add
outs
fadd
add
jge
add
add
add
or
jo
fild
add
outs
fadd
add
jge
add
add
jb
or
jo
fld
add
or
outs
fiadd
add
or
sbb
add
je
add
add
add
add
add
jae
add
push
outs
loopne
add
or
add
or
jne
add
add
or
add
add
add
or
sub
add
adc
add
add
xor
adc
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
adc
outs
jp
add
push
outs
loop
add
sub
add
sbb
add
jo
add
push
add
adc
sub
add
or
jae
add
or
add
add
jb
or
jo
fild
add
or
outs
in
add
or
outs
fiadd
add
adc
and
add
fild
add
je
add
add
jae
add
push
or
add
outs
in
add
adc
loope
add
sub
add
and
add
sub
adc
outs
inc
add
or
sub
adc
add
add
xor
add
add
xor
add
add
push
add
adc
add
or
or
add
add
add
or
add
add
or
jae
add
or
adc
outs
jmp
add
fimul
add
outs
inc
add
or
adc
jl
add
sub
add
add
add
push
add
das
add
add
add
xor
add
add
push
add
adc
add
or
pop
add
add
or
jae
add
push
sub
xor
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
push
add
adc
sub
add
or
jb
or
jo
fild
add
or
sub
add
outs
fadd
add
jge
add
add
jb
or
jo
fild
add
or
sub
add
outs
fadd
add
jge
add
add
jb
or
jo
fild
add
or
sub
add
outs
fadd
add
jge
add
add
adc
add
pop
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
jae
add
or
add
add
or
add
add
or
outs
arpl
add
add
jge
add
or
jnp
add
or
add
add
or
outs
add
or
add
adc
add
pop
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
adc
jnp
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
add
or
sub
add
or
add
jge
add
or
add
add
add
add
or
sub
add
or
add
jge
add
or
add
add
xor
add
add
add
add
add
cmp
add
add
sti
add
or
add
or
push
jge
add
or
sbb
add
or
and
add
add
add
or
jae
add
or
add
or
outs
test
or
outs
dec
add
or
outs
test
or
add
or
add
add
xor
add
add
add
add
add
add
or
outs
add
add
add
add
or
outs
add
add
add
add
or
or
or
xchg
add
or
add
add
add
inc
pop
imul
add
add
or
or
or
xchg
add
or
ins
and
add
add
add
inc
pop
imul
or
or
or
xchg
add
or
add
add
add
pop
sub
add
add
adc
adc
sub
add
add
add
or
or
or
lea
add
add
add
or
or
or
xchg
add
or
adc
outs
push
add
or
outs
pop
add
or
add
or
outs
pop
add
or
outs
add
or
or
mov
add
imul
adc
outs
add
or
or
mov
add
imul
adc
or
add
add
add
or
add
add
or
or
or
mov
add
imul
push
add
add
or
or
or
mov
add
imul
push
outs
or
add
fiadd
or
add
or
and
and
add
add
or
push
adc
push
outs
or
add
adc
push
outs
or
push
sbb
add
or
adc
or
outs
add
or
or
mov
add
add
add
or
or
or
lea
add
adc
(bad)
add
add
or
or
add
or
outs
add
add
adc
adc
sub
adc
fcomp
sub
add
or
jnp
add
or
outs
adc
add
sub
add
or
add
or
pop
ficom
adc
outs
adc
add
(bad)
or
push
outs
adc
add
fsubr
add
add
add
mov
pop
add
add
add
mov
or
add
add
add
add
add
add
xor
add
add
arpl
add
add
jnp
add
or
jnp
add
or
jge
add
or
jnp
add
or
jnp
add
or
adc
add
add
or
add
sub
jnp
add
or
xor
add
add
or
push
sub
push
add
add
or
add
or
push
jge
add
or
add
add
or
add
sub
add
add
add
or
add
or
add
add
xor
add
add
add
adc
jnp
add
or
add
or
outs
sbb
add
sub
add
or
add
xor
add
add
add
add
add
add
or
outs
sbb
add
sub
add
adc
add
pop
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
adc
jnp
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
jge
add
or
add
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
or
outs
sub
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
or
adc
sub
add
add
or
(bad)
ins
pop
sub
adc
add
push
add
add
adc
and
add
aas
add
add
or
sub
add
or
add
or
jnp
add
or
add
add
or
add
or
jnp
add
or
pop
add
or
jo
jnp
add
or
jae
add
or
add
or
jnp
add
or
add
add
xor
inc
add
add
add
and
add
add
or
sub
add
or
add
add
or
add
add
or
add
or
adc
jb
or
jo
sbb
add
or
add
or
jnp
add
or
add
mov
add
add
add
or
fisubr
adc
add
add
or
(bad)
jge
add
or
pop
add
jge
add
or
add
add
add
push
xor
add
jnp
add
or
fidivr
add
or
push
add
outs
sbb
add
pop
fidivr
add
or
add
add
add
add
jge
add
or
add
out
add
xor
add
add
jge
add
or
adc
add
dec
add
add
add
add
add
or
push
sbb
add
or
sbb
add
or
push
outs
aaa
add
or
or
or
push
pop
outs
cmp
add
pop
pop
(bad)
or
add
add
or
add
or
add
add
add
or
add
sub
cmp
add
sub
add
xor
add
add
add
add
or
add
or
add
adc
add
add
or
add
mov
add
sbb
add
add
or
add
or
(bad)
add
add
or
add
add
xchg
add
or
fiadd
outs
sub
add
adc
add
or
fisubr
sgdtd
or
push
outs
cmp
add
fimul
push
sub
push
outs
inc
add
or
add
add
or
add
add
add
or
add
adc
add
add
or
outs
sub
add
sub
add
or
push
outs
aas
add
or
or
sub
pop
outs
inc
add
or
sub
sbb
add
add
push
pusha
add
add
add
add
jnp
push
cdq
add
add
add
sbb
push
add
add
add
add
and
and
add
add
or
pop
sbb
add
or
add
outs
cmp
add
adc
adc
sub
adc
add
add
or
pop
adc
sub
add
add
or
(bad)
pop
adc
add
add
or
or
or
xchg
add
or
sub
and
add
aas
add
add
or
inc
add
or
add
or
or
outs
inc
add
or
add
add
or
sub
outs
inc
add
or
outs
inc
add
or
add
or
add
adc
outs
cmp
add
fimul
add
pop
adc
inc
add
or
add
add
or
sub
add
adc
adc
(bad)
push
pop
add
sbb
add
push
or
add
adc
inc
add
or
add
add
pop
outs
inc
add
or
or
add
outs
inc
add
or
sub
sbb
add
add
add
add
add
iret
add
out
or
add
add
xor
add
add
add
add
adc
add
add
or
push
adc
sub
adc
add
add
or
pop
adc
sub
outs
sub
add
adc
adc
sub
add
add
or
pop
adc
sub
add
adc
add
add
or
or
or
xchg
add
or
sub
sbb
outs
das
add
or
sub
add
adc
pop
or
add
or
outs
inc
add
or
add
or
add
adc
outs
cmp
add
fimul
add
pop
adc
inc
add
or
and
and
add
add
or
push
sbb
add
or
sbb
add
or
outs
dec
add
or
add
or
add
add
or
outs
dec
add
or
add
add
push
outs
inc
add
or
or
add
outs
inc
add
or
sub
sbb
add
add
or
add
add
or
add
add
add
sub
add
add
or
add
or
jnp
add
or
add
add
or
add
or
sbb
add
sbb
add
add
add
sub
add
or
add
add
fiadd
fsubr
or
add
add
add
or
add
add
adc
add
add
add
add
add
add
fiadd
push
sub
add
add
and
add
jae
add
or
push
add
or
push
outs
pop
add
or
pop
outs
or
add
add
outs
or
add
add
outs
or
add
sub
sub
add
push
outs
push
add
push
outs
or
add
sub
add
xor
mov
add
add
add
add
or
add
outs
or
ds
add
add
or
add
push
outs
push
add
or
sldt
or
add
or
add
or
sbb
add
or
push
or
jb
add
jo
sub
add
or
xor
add
or
add
outs
or
or
add
sub
jb
add
jo
sub
add
or
xor
sub
or
sub
add
or
xor
add
or
add
outs
push
add
push
outs
or
add
sub
jb
add
jo
sub
add
jb
add
jo
pop
adc
adc
sub
add
or
add
outs
push
add
push
outs
or
add
sub
add
adc
add
or
add
add
add
add
sub
add
or
push
add
sbb
add
sub
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
xor
add
add
add
add
adc
add
add
and
add
sub
adc
add
or
add
add
add
jle
add
add
and
add
sub
adc
add
or
add
add
add
add
and
add
sub
adc
add
or
add
push
add
adc
add
add
and
add
xor
add
add
add
add
adc
add
add
add
or
add
xor
add
add
add
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
adc
add
sbb
add
or
add
add
jnp
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
add
add
jb
add
jo
sub
add
jp
add
add
add
add
sub
add
add
add
add
add
jb
add
jo
sub
add
jp
add
add
add
add
sub
add
xor
loop
add
or
add
add
adc
add
push
add
add
outs
sub
add
cmp
add
add
add
add
sub
or
add
add
add
sub
add
outs
sub
and
add
jo
lea
add
sub
add
or
add
or
xor
add
or
add
or
add
add
add
sub
add
adc
xor
add
sub
fisubr
add
add
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
add
or
xor
add
outs
xor
or
add
or
pop
or
add
or
add
or
or
add
add
add
sub
add
outs
cmp
add
fsubr
add
sub
sub
add
sbb
add
add
cwde
add
je
add
add
ins
add
add
adc
add
sbb
add
or
add
add
push
add
add
outs
cmp
add
add
add
adc
push
add
push
add
cmp
add
sub
xor
add
add
adc
add
cmp
add
sub
add
sub
add
adc
add
pop
add
add
sub
add
xor
add
add
add
add
adc
add
sub
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
adc
add
cmp
add
sub
add
sub
add
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
push
add
add
sub
add
sub
adc
add
pop
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
add
push
sub
add
adc
add
adc
add
adc
adc
(bad)
adc
push
add
add
cmp
add
sub
xor
add
add
push
add
adc
add
or
or
push
add
sub
jle
add
or
push
add
cmp
add
sub
sub
add
add
add
or
jnp
add
add
inc
add
or
add
inc
add
or
add
xor
inc
add
add
add
adc
jae
add
or
add
add
add
add
add
inc
add
or
add
push
add
add
or
add
push
add
add
or
outs
and
add
pop
outs
dec
add
or
outs
and
add
and
daa
add
outs
dec
add
or
outs
and
outs
dec
add
or
outs
and
add
cmp
aam
add
sub
add
pop
outs
dec
add
or
outs
and
inc
add
jo
dec
add
or
outs
and
add
push
add
add
or
or
outs
push
add
or
outs
and
outs
push
add
or
outs
and
push
add
jo
push
add
or
outs
and
outs
push
add
or
adc
inc
and
add
sub
add
adc
or
pop
outs
push
add
or
adc
and
add
add
retf
add
add
push
add
or
outs
pop
add
or
outs
pop
add
or
outs
and
pop
add
or
pop
outs
pop
add
or
push
outs
pop
add
or
jb
add
jo
dec
add
or
push
outs
pop
add
or
pop
outs
pop
add
or
sbb
add
or
push
outs
pusha
add
or
outs
popa
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
arpl
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
data16
or
add
adc
add
pop
add
add
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
arpl
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
add
or
add
adc
add
call
add
adc
sub
add
add
and
add
jae
add
or
imul
and
add
jae
add
or
imul
or
add
add
jae
add
or
ins
add
or
push
jge
add
add
sbb
or
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
jge
add
add
outs
and
add
add
add
push
add
add
push
add
add
push
add
jnp
add
add
jnp
add
outs
jbe
add
add
add
add
jnp
add
outs
js
add
jae
add
or
add
add
outs
xor
add
add
add
or
add
push
add
add
push
add
outs
daa
add
push
outs
outs
add
or
add
push
sub
xor
add
add
and
add
add
add
add
pop
outs
jo
add
add
outs
jno
add
sub
add
add
jae
add
outs
je
add
outs
jne
add
add
outs
pop
add
or
push
outs
pop
add
or
pop
outs
pop
add
or
sbb
add
or
add
add
xor
add
add
add
add
add
add
or
add
add
push
jge
add
add
dec
add
push
outs
inc
add
push
sub
add
sub
add
add
push
ficom
sub
add
or
outs
das
add
push
sub
add
or
add
jnp
add
add
jns
add
push
xor
add
add
push
sub
add
adc
add
add
add
sub
adc
add
sbb
add
jge
add
and
add
sub
add
outs
inc
add
push
jae
add
or
add
add
add
push
push
adc
adc
outs
jnp
add
adc
push
adc
sub
call
or
jge
add
or
jnp
add
add
outs
jle
add
fimul
and
or
add
aaa
add
or
add
pop
pop
(bad)
adc
adc
adc
mov
pop
(bad)
adc
mov
add
add
add
add
aaa
add
push
add
pop
add
add
add
add
add
aas
add
push
outs
jle
add
add
add
add
inc
add
push
outs
jle
add
add
add
add
inc
add
push
outs
jle
add
sub
add
xor
add
add
and
add
add
dec
add
push
outs
dec
add
push
sub
add
jge
add
add
dec
and
or
sub
add
push
outs
jg
add
jb
add
jo
outs
xor
add
or
add
or
or
add
outs
jg
add
push
outs
add
or
sub
add
push
sub
add
jge
add
add
aaa
add
or
add
add
add
adc
add
add
add
pop
add
add
add
xor
add
add
adc
jnp
add
add
add
outs
add
or
add
add
add
pop
sub
outs
test
add
ins
and
add
add
add
pop
sub
dec
add
or
outs
xchg
add
add
add
add
add
outs
add
or
add
add
add
inc
pop
sub
outs
test
add
ins
and
add
add
add
inc
pop
sub
push
add
or
outs
xchg
add
sub
adc
add
add
add
add
add
push
outs
outs
add
or
outs
dec
add
or
outs
daa
add
push
adc
sbb
outs
add
or
ins
and
add
add
add
inc
pop
sub
outs
test
add
ins
and
add
add
add
inc
pop
sub
dec
add
or
outs
mov
add
add
add
push
adc
add
add
or
add
add
add
inc
pop
sub
outs
test
add
ins
and
add
add
add
inc
pop
sub
push
add
or
outs
mov
add
sub
add
xor
add
add
and
jnp
add
add
adc
sub
adc
add
pop
jge
add
add
dec
sub
adc
sub
jl
add
add
mov
add
fisubr
mov
add
pop
or
and
mov
add
or
add
lea
add
add
add
lea
add
fisubr
mov
add
pop
or
push
add
add
or
add
add
add
or
push
add
add
or
adc
push
add
add
adc
outs
pop
add
add
add
add
jnp
add
add
nop
add
or
push
add
add
or
push
adc
sub
outs
xchg
add
or
pop
adc
sub
xchg
add
or
add
add
jnp
add
add
outs
xchg
add
or
outs
daa
add
push
add
add
or
add
outs
add
jnp
add
add
(bad)
add
add
add
jns
add
pop
jge
add
add
mov
jnp
add
add
xchg
add
or
outs
daa
add
push
add
add
add
cwde
add
or
add
or
add
add
add
or
add
add
or
add
add
jae
add
or
mov
add
add
add
push
sub
add
jp
sub
add
add
add
or
jnp
add
add
inc
add
or
add
inc
add
or
add
xor
add
add
xor
add
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
dec
add
or
outs
pop
add
push
outs
dec
add
or
outs
push
dec
add
or
outs
push
add
outs
dec
add
or
outs
dec
add
or
outs
push
add
push
push
outs
mov
outs
push
add
push
adc
and
dec
add
or
outs
dec
add
or
outs
push
add
push
adc
sbb
sbb
sub
outs
mov
outs
push
add
push
jb
add
jo
dec
add
or
outs
push
add
push
adc
sub
add
adc
or
outs
push
add
push
push
outs
push
add
or
outs
push
add
push
jb
add
jo
mov
outs
push
add
push
push
outs
mov
outs
push
add
push
adc
pop
dec
sbb
dec
add
or
outs
dec
add
or
outs
push
add
push
adc
pop
sbb
sbb
mov
outs
mov
outs
push
add
push
jb
add
jo
dec
add
or
outs
push
add
push
adc
sub
add
adc
or
outs
push
add
push
pop
outs
push
add
or
outs
push
add
push
jb
add
jo
mov
outs
dec
add
push
push
outs
mov
outs
dec
add
push
adc
and
add
add
sub
add
pop
outs
dec
add
or
outs
dec
add
push
jb
add
jo
dec
add
or
outs
dec
add
push
adc
sub
add
adc
or
outs
dec
add
push
sbb
add
or
outs
dec
add
push
jb
add
jo
mov
outs
push
add
push
push
outs
mov
outs
push
add
push
outs
pop
add
or
outs
pop
add
push
outs
pop
add
or
outs
push
add
push
outs
pop
add
or
outs
pop
add
push
outs
pop
add
or
outs
push
add
push
outs
pop
add
or
outs
pop
add
push
outs
pop
add
or
outs
push
add
push
adc
sbb
or
outs
dec
add
or
outs
push
add
push
jb
add
jo
dec
add
or
outs
push
add
push
adc
add
imul
add
or
add
or
outs
push
add
push
sbb
add
or
outs
push
add
push
push
outs
mov
outs
push
add
push
jb
add
jo
mov
outs
pop
add
push
pop
outs
mov
outs
pop
add
push
adc
sbb
add
or
outs
dec
add
or
outs
pop
add
push
adc
sbb
sbb
sub
outs
mov
outs
pop
add
push
jb
add
jo
dec
add
or
outs
pop
add
push
adc
sub
add
adc
or
outs
pop
add
push
push
outs
push
add
or
outs
pop
add
push
jb
add
jo
mov
outs
pop
add
push
pop
outs
dec
add
or
outs
pop
add
push
adc
sbb
add
or
outs
dec
add
or
outs
pop
add
push
jb
add
jo
dec
add
or
outs
pop
add
push
adc
sub
add
adc
or
outs
pop
add
push
pop
outs
push
add
or
outs
pop
add
push
jb
add
jo
push
add
or
outs
pop
add
push
pop
or
or
outs
pop
add
push
adc
sbb
add
or
outs
dec
add
or
outs
pop
add
push
adc
sbb
sbb
sub
outs
mov
outs
pop
add
push
jb
add
jo
dec
add
or
outs
pop
add
push
adc
add
adc
push
add
or
add
or
outs
pop
add
push
sbb
add
or
outs
pop
add
push
push
outs
mov
outs
pop
add
push
outs
pop
add
or
outs
pusha
add
push
outs
pop
add
or
outs
pop
add
push
outs
pop
add
or
outs
bound
add
outs
pop
add
or
outs
pop
add
push
outs
pop
add
or
outs
add
push
outs
pop
add
or
outs
pop
add
push
adc
sbb
jge
dec
add
or
outs
dec
add
or
outs
pop
add
push
jb
add
jo
dec
add
or
outs
pop
add
push
adc
add
jno
push
add
or
add
or
outs
pop
add
push
sbb
add
or
outs
pop
add
push
push
outs
mov
outs
pop
add
push
jb
add
jo
mov
outs
pusha
add
push
pop
outs
mov
outs
pusha
add
push
adc
sbb
add
or
outs
dec
add
or
outs
pusha
add
push
jb
add
add
or
outs
pusha
add
push
adc
sub
add
adc
or
outs
pusha
add
push
push
outs
push
add
or
outs
pusha
add
push
jb
add
add
or
outs
bound
add
pop
or
or
outs
bound
add
adc
sbb
add
or
outs
dec
add
or
outs
bound
add
jb
add
add
or
outs
bound
add
adc
add
adc
push
add
or
add
or
outs
bound
add
pop
outs
push
add
or
outs
add
push
pop
outs
dec
add
or
outs
add
push
adc
sbb
add
or
outs
dec
add
or
outs
add
push
jb
add
add
or
outs
add
push
adc
add
or
or
add
or
outs
add
push
sbb
add
or
outs
add
push
jb
add
add
or
outs
data16
push
pop
daa
outs
mov
outs
push
outs
rol
or
outs
push
rol
or
and
add
jae
add
or
add
or
add
add
push
outs
les
add
add
add
push
push
pop
outs
lds
add
add
add
push
outs
les
add
add
add
push
push
push
outs
lds
add
add
add
push
outs
les
add
add
add
push
push
sbb
add
or
outs
push
outs
mov
or
outs
push
add
or
or
dec
add
or
outs
dec
add
or
outs
push
fild
add
or
outs
push
outs
mov
push
enter
sbb
add
dec
inc
jae
add
or
add
or
add
add
push
outs
enter
sbb
add
dec
inc
jae
add
or
add
or
add
add
push
outs
enter
pop
and
add
jae
add
or
add
or
add
add
push
adc
add
push
add
add
push
add
or
add
or
outs
push
outs
push
add
or
outs
push
add
sbb
add
or
outs
push
add
outs
rol
or
and
add
inc
jae
add
or
add
or
add
add
push
outs
rol
or
and
add
add
outs
ret
add
or
add
add
push
outs
rol
or
and
add
add
outs
ret
add
or
add
add
push
outs
rol
or
and
add
add
outs
ret
add
or
add
add
push
outs
les
add
add
add
push
sbb
outs
lds
add
add
add
push
outs
les
add
add
add
push
pop
push
outs
lds
add
add
add
push
outs
les
add
add
add
push
sbb
outs
lds
add
add
add
push
sbb
add
or
outs
push
add
adc
sbb
cmc
add
add
dec
add
or
outs
dec
add
or
outs
push
add
jb
add
add
or
outs
push
add
pop
outs
mov
push
add
outs
enter
sbb
add
dec
inc
jae
add
or
add
or
add
add
push
adc
add
push
sub
add
adc
or
outs
push
add
sbb
add
or
adc
and
add
inc
and
add
sub
add
adc
outs
push
add
or
pop
outs
push
add
or
adc
add
sub
add
sub
add
adc
or
outs
pop
add
or
outs
push
pop
add
or
jb
push
add
dec
add
or
adc
pop
or
retf
add
or
outs
int3
add
or
push
outs
int
add
add
push
add
into
add
or
outs
push
add
push
push
outs
pusha
add
or
outs
push
add
push
outs
popa
add
or
outs
pop
add
push
push
outs
pusha
add
or
outs
pop
add
push
outs
popa
add
or
outs
push
outs
pusha
add
or
outs
push
add
push
outs
pusha
add
or
push
outs
pusha
add
or
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
iret
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
iret
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
iret
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
rol
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
iret
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
iret
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
jae
add
or
add
add
add
or
jnp
add
add
outs
rol
add
add
jge
add
add
jnp
add
add
or
jnp
add
add
outs
rol
add
sub
add
xor
add
add
add
adc
jnp
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
add
add
outs
bound
add
sub
add
outs
inc
add
push
outs
rol
add
add
add
push
sub
add
outs
dec
add
push
outs
rol
add
ficom
sub
add
or
push
add
aam
add
sub
add
or
add
add
add
add
add
sub
add
inc
add
add
xor
add
add
add
add
sub
add
outs
inc
add
push
add
add
push
outs
aad
add
push
sub
add
or
xor
sub
add
outs
dec
add
push
add
add
push
outs
aad
add
push
sub
add
or
cs
add
add
push
pop
outs
(bad)
add
or
or
outs
dec
add
push
push
outs
(bad)
add
or
add
push
add
add
push
outs
aad
add
outs
inc
add
push
sub
add
outs
cmps
add
or
add
add
xor
xor
add
dec
add
adc
outs
outs
add
push
fisubr
and
or
jb
push
add
xlat
pop
add
pop
adc
adc
sub
add
or
pop
add
add
or
sub
add
add
add
add
add
or
and
add
add
add
sub
add
add
add
push
add
add
or
dec
add
add
push
add
add
push
push
outs
(bad)
add
or
sbb
add
dec
add
add
add
add
add
push
outs
aad
add
sub
add
fisub
and
or
jb
or
jo
pop
or
jo
pop
adc
adc
sub
add
or
adc
or
jo
xor
add
pop
xor
adc
sub
adc
add
add
add
adc
and
add
adc
add
sub
add
adc
outs
data16
push
outs
xlat
add
or
push
pop
xor
outs
bound
add
add
add
push
outs
fadd
add
outs
rol
add
add
add
push
sub
add
push
add
add
push
sub
add
add
push
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
and
add
push
add
and
add
and
jb
outs
addr16
add
add
add
hlt
or
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
or
ins
outs
bound
add
add
add
add
add
push
pop
mov
or
add
add
and
add
add
add
add
add
add
rol
add
add
add
add
push
add
add
add
add
add
jns
add
add
add
add
add
push
add
add
add
ja
add
add
add
sbb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
push
add
add
add
add
add
add
add
add
add
rol
mov
add
add
add
dec
add
add
add
add
add
add
add
adc
clc
add
sbb
push
add
sbb
push
add
pop
mov
pop
mov
pop
mov
pop
dec
add
add
inc
or
add
add
or
push
adc
jg
push
push
add
mov
or
or
or
or
leave
or
dec
adc
add
pop
adc
add
adc
push
add
adc
push
push
add
sbb
push
add
push
push
add
sbb
push
add
adc
push
push
add
adc
push
add
sbb
push
add
add
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
add
add
add
add
sbb
sbb
add
add
sbb
sbb
add
dec
add
add
dec
sbb
add
mov
sbb
or
rcr
sbb
add
sbb
push
add
sbb
or
adc
sahf
sbb
add
dec
add
add
popf
add
add
add
add
sbb
push
add
sbb
sbb
add
sbb
sbb
add
add
sbb
add
add
int
mov
sbb
add
add
sbb
jo
mov
sbb
loopne
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
add
add
add
push
dec
add
add
push
mov
or
add
add
add
pop
adc
push
add
dec
add
add
pop
sahf
sbb
add
pop
js
push
add
and
push
add
and
adc
pop
and
or
nop
and
and
and
add
add
sahf
sbb
add
and
adc
and
push
add
mov
and
and
and
mov
test
add
push
add
and
and
and
and
and
and
and
and
and
push
add
and
add
add
add
add
add
and
push
add
and
and
and
push
add
and
add
add
and
push
push
add
and
push
push
add
and
push
push
add
and
push
push
add
inc
and
add
add
and
push
push
add
and
push
push
add
and
xor
dec
and
pop
and
and
and
aam
js
push
add
and
sub
adc
push
add
dec
sbb
add
out
push
add
dec
sbb
add
add
add
add
es
sbb
add
es
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
popf
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
push
add
xchg
add
add
cdq
add
add
add
in
add
mov
add
add
add
add
add
add
adc
add
add
add
outs
add
mov
test
add
push
cmp
add
inc
push
inc
add
add
inc
add
add
dec
add
add
dec
add
add
jg
adc
(bad)
adc
xchg
or
or
adc
mov
mov
add
mov
add
aam
add
cmps
or
add
add
or
add
add
add
repnz
add
add
or
add
add
or
add
add
add
or
add
add
add
add
adc
add
fimul
sbb
pop
add
add
adc
add
adc
add
adc
add
mov
outs
add
add
adc
add
adc
add
adc
add
dec
add
add
cdq
add
add
sahf
add
add
mov
adc
adc
adc
add
add
int
mov
add
fst
in
add
out
inc
add
add
adc
add
add
inc
add
add
adc
add
test
test
push
adc
test
push
xor
inc
add
add
dec
add
add
cdq
add
add
adc
add
adc
adc
adc
add
add
adc
add
add
and
add
add
adc
add
add
mov
adc
add
add
test
add
jl
inc
add
add
adc
add
mov
add
add
add
add
add
inc
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
add
add
adc
pop
add
add
add
or
xor
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
push
or
nop
add
add
add
or
add
push
or
add
adc
stos
add
add
add
add
jecxz
mov
or
call
add
sbb
add
test
add
inc
add
add
add
add
add
add
inc
add
add
add
add
xchg
add
add
add
add
add
xchg
add
inc
add
into
add
add
add
add
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
into
add
add
add
add
add
xchg
add
add
jecxz
mov
or
loopne
add
add
push
sbb
add
xchg
add
add
pop
add
add
add
add
sbb
add
xchg
add
inc
add
add
xchg
add
add
leave
add
add
add
inc
or
add
add
add
add
adc
inc
push
add
mov
add
inc
or
add
add
mov
and
inc
or
push
add
add
add
add
inc
or
add
mov
and
inc
or
add
add
add
mov
mov
and
inc
or
add
int3
mov
add
push
sbb
add
mov
add
add
test
sbb
adc
adc
add
add
add
xchg
push
sbb
adc
test
add
stos
push
sbb
adc
and
add
add
add
add
add
push
sbb
adc
fmul
add
push
sbb
adc
push
add
add
push
sbb
adc
or
add
add
add
and
add
add
add
add
mov
add
fs
push
add
add
add
pop
pop
add
add
mov
add
inc
add
add
mov
add
add
mov
add
add
add
add
add
retf
pop
add
cmp
add
in
pop
add
add
jno
add
add
or
add
jb
add
add
or
add
add
add
adc
mov
add
add
add
or
or
jb
add
add
or
or
jb
add
add
or
or
jb
add
add
or
or
jb
add
add
sbb
sub
jae
add
add
sbb
add
jae
add
add
add
or
jae
add
add
or
or
add
add
add
or
or
add
add
jae
add
add
or
or
add
add
jae
add
add
or
or
add
add
add
push
or
or
add
adc
add
adc
pop
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
inc
or
add
add
and
inc
or
add
add
add
inc
or
add
add
add
enter
daa
add
cdq
add
add
inc
or
or
add
add
cdq
add
and
inc
or
or
add
add
call
sub
out
sub
xor
add
and
inc
or
in
add
add
add
add
inc
or
add
add
add
xchg
or
add
add
add
add
inc
or
add
add
add
ror
or
sub
rcr
or
or
add
aam
add
and
inc
or
add
call
daa
or
add
add
add
cmp
fwait
add
add
inc
or
or
add
add
add
ins
or
add
add
add
add
inc
or
add
add
add
pushf
or
add
add
fwait
add
add
inc
or
or
add
add
fwait
add
and
inc
or
or
add
add
pushf
add
add
inc
or
or
xor
add
and
inc
or
inc
pushf
add
add
inc
or
add
add
add
test
sbb
xor
pusha
pushf
add
add
inc
or
or
je
add
and
inc
or
push
sub
xor
sbb
sub
and
xor
xchg
pushf
add
and
inc
or
sub
xor
mov
add
add
add
add
add
add
sbb
aaa
add
add
add
add
sbb
aaa
add
add
add
add
popf
add
add
add
mov
add
add
popf
add
add
add
sahf
push
add
add
sahf
add
add
add
lods
push
add
add
add
add
push
add
add
add
add
push
add
test
add
add
add
lock
add
and
add
add
push
or
adc
add
cmp
add
push
or
into
add
dec
je
add
add
or
push
add
fs
add
add
sbb
add
jne
add
add
or
add
push
or
add
add
add
add
mov
pusha
add
int3
jne
add
add
add
add
add
add
push
add
adc
jbe
add
add
ss
add
pusha
jbe
add
add
sti
adc
add
je
add
add
push
or
into
add
mov
add
add
sbb
add
add
add
add
ss
add
add
add
add
inc
psubq
into
add
in
jbe
add
add
pushf
adc
add
add
add
add
lods
adc
add
dec
ja
add
add
or
adc
add
pusha
ja
add
add
or
adc
ja
add
add
or
adc
ja
add
add
or
rol
add
push
or
mov
add
add
or
add
lods
ja
add
add
or
rol
dec
add
ja
add
add
or
fld
dec
add
ja
add
add
or
add
ja
add
add
or
add
ja
add
add
or
add
js
add
add
or
add
add
add
push
or
add
js
add
add
or
adc
add
sub
add
add
push
or
adc
add
inc
js
add
add
or
adc
add
pop
js
add
add
or
adc
add
js
add
add
push
sbb
add
js
add
add
add
adc
push
add
jp
add
add
add
adc
push
add
add
add
mov
add
pop
jnp
add
add
or
add
add
or
add
add
or
adc
jnp
add
add
or
rol
add
jnp
add
add
or
mov
add
jnp
add
add
or
add
loopne
add
add
push
or
rol
pop
add
jnp
add
add
or
fld
pop
add
jl
add
add
or
adc
add
adc
add
add
push
or
adc
add
and
add
push
or
adc
add
xor
add
add
push
or
adc
add
inc
jl
add
add
or
add
add
add
or
adc
pusha
jl
add
add
or
adc
je
add
add
push
or
fld
pop
add
add
or
rol
pop
add
push
or
fld
pop
add
add
or
add
push
or
add
jl
add
add
or
add
jl
add
add
or
adc
loopne
add
add
push
or
adc
hlt
jl
add
add
or
adc
add
add
add
or
adc
adc
add
add
push
or
push
fild
bound
xor
add
add
push
or
push
lds
bound
pusha
jge
add
add
or
push
loopne
bound
sar
add
push
or
add
jle
add
add
add
push
sbb
bound
cmp
add
add
push
add
sbb
bound
push
add
sbb
add
add
add
adc
fs
jle
add
add
add
inc
add
sar
add
add
adc
add
fadd
add
xchg
push
inc
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
cs
cs
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
ret
adc
add
add
adc
add
add
adc
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
rol
add
add
int3
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
pop
push
add
add
arpl
add
add
adc
add
add
add
add
add
add
add
add
push
add
jle
pop
add
add
add
add
add
pop
jae
or
xlat
pop
in
add
add
pop
in
add
add
sbb
add
add
sbb
or
cmp
add
xchg
inc
add
lds
inc
add
xchg
add
add
xchg
fwait
add
(bad)
sbb
add
xchg
sbb
sbb
sbb
sbb
and
xchg
add
add
add
add
add
add
add
add
add
add
add
add
fild
push
add
fild
pop
add
fild
add
fild
ins
add
fild
rol
add
add
add
add
add
add
add
add
add
sbb
add
add
mov
sbb
inc
add
sbb
sbb
add
add
sbb
add
add
sbb
add
add
into
add
add
add
sub
sbb
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
in
inc
add
add
add
add
add
add
add
add
sbb
pop
add
in
add
pop
sbb
add
ins
sbb
add
mov
in
add
rol
add
mov
add
add
add
add
add
add
add
add
add
sbb
add
int3
add
add
sbb
repz
jmp
add
add
sbb
push
sbb
fs
sbb
sbb
popf
sbb
mov
ins
add
stos
sbb
mov
test
add
adc
add
adc
add
add
add
add
sbb
mov
ins
add
add
sbb
cld
sbb
mov
cmp
jl
mov
sbb
jl
aad
cli
add
add
push
outs
push
jmp
add
add
push
test
push
jmp
push
jmp
push
mov
mov
sbb
mov
push
mov
pop
sbb
add
add
add
push
mov
push
into
add
cli
push
stos
push
mov
repz
pop
mov
int
jmp
add
add
rol
jmp
add
add
loopne
jmp
add
test
pop
adc
add
adc
add
adc
add
add
repnz
jns
nop
pop
lds
icebp
add
add
add
add
add
xchg
add
add
mov
add
lds
or
jae
lds
cmp
mov
or
test
xor
pop
add
adc
test
cmp
sbb
test
movlhps
add
adc
pop
sbb
stc
add
add
add
add
and
and
add
and
and
and
or
add
add
lods
add
add
add
add
and
or
add
add
and
or
add
and
or
or
add
sub
mov
or
mov
mov
add
add
test
add
add
add
add
add
add
add
xlat
or
mov
fimul
jmp
or
(bad)
sbb
add
add
add
add
add
add
add
and
jmp
or
or
repz
or
add
sbb
repz
or
add
sbb
jmp
add
add
pop
or
or
or
mov
xor
jmp
or
add
add
add
add
mov
add
and
add
add
add
add
and
add
add
in
add
or
add
and
add
xchg
add
add
and
or
add
into
add
add
out
mov
or
add
repz
rol
and
xchg
add
stc
add
repz
add
add
add
add
and
or
add
add
add
and
loope
stc
and
add
lods
add
adc
lods
add
adc
add
lods
add
cdq
add
lods
add
mov
adc
adc
adc
add
add
and
or
add
sbb
adc
and
or
lods
add
adc
lods
add
inc
add
mov
sbb
lods
add
and
sbb
cmp
ins
and
or
add
add
mov
add
adc
adc
add
adc
add
and
or
add
add
add
add
add
or
add
and
or
add
and
or
add
and
mov
fimul
lods
add
rol
sbb
and
mov
fld
adc
mov
add
add
add
add
add
add
and
adc
mov
add
icebp
add
and
add
add
adc
inc
and
sub
dec
add
mov
mov
add
adc
add
mov
xor
add
mov
inc
adc
add
mov
mov
add
mov
jl
inc
add
les
bound
xchg
add
mov
mov
add
test
mov
and
lds
pop
add
and
cld
adc
adc
add
add
add
adc
add
add
mov
jno
inc
add
mov
xchg
push
inc
add
mov
cmp
mov
and
in
adc
add
add
add
or
add
and
gs
add
mov
test
cs
loopne
jno
pushf
and
test
(bad)
or
add
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
dec
add
add
xlat
or
add
loopne
add
push
or
inc
or
loopne
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
mov
add
data16
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
rol
test
add
add
add
add
add
add
add
add
jecxz
adc
loopne
jecxz
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
arpl
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
jecxz
push
pop
and
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
mov
add
or
add
add
add
add
(bad)
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
fild
add
add
add
or
jecxz
mov
add
add
add
or
add
add
or
add
add
or
add
and
inc
add
add
jecxz
add
or
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
cmc
add
add
cmp
aas
push
inc
push
cmp
xor
cmp
imul
fiadd
in
in
cld
push
adc
fwait
pop
mov
pop
mov
mov
add
sub
inc
or
push
inc
or
push
inc
or
push
dec
or
push
or
push
dec
or
cmp
aas
push
inc
or
push
push
or
push
aas
push
pop
or
pop
or
push
fiadd
jo
or
test
and
dec
or
or
imul
push
cmp
fild
or
or
push
in
cmp
inc
add
or
or
or
or
add
add
add
add
inc
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
call
pop
ins
add
add
or
add
sbb
jbe
add
sub
ins
add
add
mov
or
or
or
or
or
or
add
add
or
add
add
rol
add
push
retf
add
add
ucomiss
add
and
add
ucomiss
add
cmp
xor
add
pop
phaddd
add
cmp
phaddd
add
add
add
add
leave
(bad)
add
add
cmovb
add
sti
cmova
add
or
add
rol
add
adc
add
add
add
adc
adc
rol
add
adc
rol
add
adc
add
add
rol
add
adc
rol
add
inc
adc
add
call
adc
add
add
adc
add
add
or
adc
adc
add
add
add
add
add
pop
adc
add
add
adc
add
add
or
push
or
push
or
push
or
push
or
push
or
pop
or
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
call
pop
push
add
add
adc
add
jnp
adc
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
adc
add
and
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
sub
add
inc
add
add
add
sub
add
dec
add
add
add
sub
add
add
add
das
add
add
xor
add
push
add
add
add
xor
add
push
add
add
add
xor
add
add
add
add
aaa
add
add
cmp
add
pop
add
add
add
cmp
add
pop
add
add
add
cmp
add
add
add
add
aas
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
test
popa
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
xchg
add
add
pushf
add
add
popf
add
add
lahf
add
add
sahf
add
add
mov
add
add
add
add
movs
add
add
cmps
add
add
cmps
add
add
test
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
(bad)
or
or
or
adc
sbb
or
add
add
or
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
or
sbb
add
add
add
add
add
pop
adc
add
add
add
add
add
add
add
push
add
pop
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
jb
outs
push
popa
jbe
jb
cs
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
push
arpl
outs
push
popa
jbe
jb
outs
jb
add
jb
outs
push
popa
jbe
jb
add
jae
jne
arpl
add
jb
outs
push
popa
jbe
jb
cs
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
jo
imul
ins
add
jae
push
ins
add
jae
gs
jae
je
ins
add
je
ins
add
gs
inc
gs
jb
jo
imul
pusha
xor
dec
je
ins
dec
imul
pusha
xor
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
imul
add
arpl
add
inc
jb
popa
je
dec
popa
imul
push
je
jb
jne
inc
jbe
outs
je
jb
jae
dec
jns
jo
ins
imul
pop
push
je
jb
jne
add
outs
fs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
dec
outs
dec
outs
imul
add
ins
ins
popa
outs
fs
imul
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
dec
jo
imul
ins
add
je
push
arpl
outs
push
popa
jbe
jb
outs
jb
add
dec
jo
imul
ins
add
push
arpl
outs
push
popa
jbe
jb
outs
jb
add
je
dec
jo
imul
ins
add
ins
jne
add
je
push
arpl
outs
push
popa
jbe
jb
outs
jb
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
inc
imul
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
push
imul
popa
arpl
jb
jne
fs
push
push
imul
je
bound
imul
jne
fs
push
push
imul
je
bound
imul
jne
fs
push
push
imul
je
inc
jbe
outs
je
push
popa
ins
jne
add
gs
add
popa
bound
xor
addr16
ins
popa
bound
xor
jae
je
ins
popa
bound
xor
jb
jae
jb
jae
imul
jae
gs
jb
jo
imul
add
je
jb
jae
gs
jb
jo
imul
add
je
jb
jae
gs
jb
jo
imul
add
gs
jb
jo
imul
push
imul
je
fs
jb
jo
imul
push
imul
je
fs
jb
jo
imul
push
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
jns
je
ins
cs
jb
ja
outs
add
popa
add
arpl
jb
jne
fs
ins
popa
addr16
arpl
jb
outs
je
ins
popa
addr16
outs
fs
imul
add
imul
jae
dec
outs
arpl
imul
inc
inc
pop
inc
dec
dec
inc
pop
inc
pop
push
inc
dec
push
dec
dec
dec
push
add
je
jo
arpl
outs
push
popa
jbe
jb
dec
outs
popa
fs
popa
arpl
jb
jne
fs
ins
popa
add
popa
fs
ins
popa
addr16
jb
ins
inc
outs
ins
fs
dec
outs
popa
fs
gs
jne
je
popa
arpl
jb
jne
fs
ins
popa
addr16
dec
outs
popa
fs
jae
inc
gs
imul
push
jae
push
imul
je
popa
ins
imul
gs
jb
jo
imul
add
jne
gs
jbe
outs
je
jb
jae
push
arpl
outs
push
popa
jbe
jb
outs
jb
pop
dec
outs
jne
gs
outs
jbe
add
jns
jbe
outs
je
jb
jae
push
arpl
outs
push
popa
jbe
jb
outs
jb
pop
dec
gs
outs
ja
add
jb
outs
push
popa
jbe
jb
outs
jb
pop
dec
outs
jne
gs
outs
ja
add
imul
je
jb
jae
dec
outs
push
popa
imul
addr16
jne
add
push
popa
imul
outs
je
jb
jae
bound
imul
jne
fs
push
push
imul
imul
jae
inc
gs
jb
jo
imul
pop
inc
popa
imul
ins
gs
add
fs
imul
arpl
bound
imul
jne
fs
push
push
imul
bound
xor
jb
jae
gs
jb
jo
imul
add
arpl
jo
imul
push
imul
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
inc
gs
jne
je
push
push
push
gs
add
je
popa
jo
addr16
dec
popa
push
inc
jb
imul
imul
gs
dec
imul
inc
push
jae
addr16
push
push
popa
pop
push
popa
ins
fs
outs
popa
add
ins
je
jb
add
popa
jne
je
push
push
push
gs
add
push
inc
jb
imul
imul
imul
inc
push
jae
push
push
popa
pop
push
popa
ins
fs
outs
popa
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
je
inc
gs
jne
je
addr16
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
je
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
je
add
je
push
jae
inc
gs
jb
add
je
push
jae
inc
gs
jb
add
popa
jne
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
je
add
jae
gs
jb
add
je
push
gs
imul
je
imul
je
outs
outs
add
jo
ins
jns
jne
je
outs
add
je
popa
jo
ins
jns
jne
je
outs
add
je
popa
jo
ins
jns
jne
je
outs
add
popa
outs
arpl
inc
jne
je
outs
xor
addr16
arpl
arpl
inc
jne
je
outs
xor
jae
je
arpl
arpl
inc
jne
je
outs
xor
pop
outs
imul
je
outs
add
je
outs
imul
je
outs
add
je
outs
imul
je
outs
add
outs
inc
imul
add
popa
arpl
jb
jne
fs
ins
popa
addr16
jo
outs
inc
imul
add
je
bound
imul
jne
fs
ins
popa
addr16
jo
outs
inc
imul
add
je
bound
imul
jne
fs
ins
popa
addr16
jo
outs
inc
imul
add
outs
jne
inc
outs
js
pop
jb
jae
jb
jne
inc
outs
js
addr16
jb
jae
jb
jne
inc
outs
js
jae
je
jb
jae
jb
jne
inc
outs
js
push
gs
inc
outs
js
pop
jb
jae
gs
gs
inc
outs
js
addr16
jb
jae
gs
gs
inc
outs
js
jae
je
jb
jae
gs
gs
inc
outs
js
pop
imul
outs
jne
inc
outs
js
addr16
imul
outs
jne
inc
outs
js
jae
je
imul
outs
jne
inc
outs
js
pop
jbe
ins
imul
je
outs
add
je
jbe
ins
imul
je
outs
add
je
jbe
ins
imul
je
outs
add
jae
inc
gs
popa
bound
add
je
jb
jae
gs
popa
bound
add
je
jb
jae
gs
popa
bound
add
jb
ja
gs
jne
je
outs
add
je
bound
ja
gs
jne
je
outs
add
je
bound
ja
gs
jne
je
outs
add
popa
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
addr16
bound
imul
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
jae
je
bound
imul
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
pop
bound
imul
jne
fs
ins
popa
addr16
popa
bound
add
je
bound
imul
jne
fs
ins
popa
addr16
popa
bound
add
je
bound
imul
jne
fs
ins
popa
addr16
popa
bound
add
ins
fs
jb
ja
gs
imul
bound
imul
jne
fs
ins
popa
addr16
outs
ins
fs
jb
ja
gs
addr16
bound
imul
jne
fs
ins
popa
addr16
outs
ins
fs
jb
ja
gs
jae
je
bound
imul
jne
fs
ins
popa
addr16
outs
ins
fs
jb
ja
gs
push
popa
bound
popa
jns
jne
push
popa
outs
gs
add
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
addr16
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
jae
je
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
pop
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
addr16
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
jae
je
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
dec
jo
imul
ins
pop
dec
outs
popa
add
fs
je
inc
jo
ins
jns
inc
jo
ins
jns
push
jae
bound
dec
pop
inc
ins
imul
inc
popa
outs
arpl
pop
inc
ins
imul
inc
jo
ins
jns
inc
ins
imul
imul
je
outs
pop
inc
ins
imul
ja
gs
jne
je
outs
pop
inc
ins
imul
inc
gs
gs
inc
outs
js
push
gs
inc
push
add
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
push
gs
inc
push
add
jo
jns
jne
je
outs
add
outs
arpl
inc
jne
je
outs
xor
outs
imul
je
outs
add
arpl
jb
jne
fs
ins
popa
addr16
jo
outs
inc
imul
add
jae
jb
jne
inc
outs
js
jb
jae
gs
gs
inc
outs
js
imul
outs
jne
inc
outs
js
jbe
ins
imul
je
outs
add
jae
gs
popa
bound
add
outs
ja
gs
jne
je
outs
add
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
bound
imul
jne
fs
ins
popa
addr16
popa
bound
add
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
jb
ja
gs
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
push
popa
bound
popa
jns
jne
push
popa
outs
gs
xor
ins
pop
je
je
add
ins
imul
je
ins
jae
addr16
push
imul
pop
dec
imul
jae
pusha
xor
addr16
dec
je
ins
jae
push
jns
je
ins
cs
ins
ins
add
ins
dec
outs
fs
popa
outs
outs
gs
dec
outs
fs
ins
add
imul
je
ins
jae
ins
pop
arpl
outs
outs
gs
jae
addr16
inc
push
ins
jae
addr16
dec
popa
imul
gs
add
ins
dec
outs
fs
outs
ins
push
jb
add
imul
push
gs
add
jae
gs
add
popa
outs
outs
gs
jae
dec
popa
imul
gs
add
fs
jb
jo
imul
pop
inc
gs
jb
jo
imul
ins
dec
outs
fs
arpl
jo
imul
jae
outs
jae
bound
ins
pop
ins
outs
arpl
imul
add
jae
jp
add
jne
push
gs
inc
jb
ja
outs
addr16
jb
jae
add
ins
outs
jb
ins
pop
ins
imul
jb
ins
pop
ins
imul
push
je
outs
ins
add
je
js
push
arpl
ins
pop
popaw
fs
imul
je
ins
pop
popaw
fs
imul
je
ins
pop
popaw
fs
imul
outs
jb
inc
outs
ins
outs
jb
inc
outs
outs
je
ins
pop
je
je
gs
outs
outs
je
ins
pop
imul
je
ins
add
je
js
inc
ins
jo
popa
add
je
js
inc
ins
jo
popa
inc
gs
je
add
je
js
inc
ins
jo
popa
dec
popa
js
addr16
inc
imul
je
ins
add
je
inc
imul
je
ins
add
ins
jne
add
je
dec
outs
arpl
imul
pop
dec
outs
arpl
imul
pop
push
imul
pop
push
imul
pop
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
addr16
dec
imul
jb
jae
je
dec
imul
jb
addr16
push
imul
add
je
push
imul
add
je
dec
imul
push
pop
dec
imul
push
pop
inc
popa
fs
imul
outs
je
popa
outs
fs
gs
popa
fs
inc
popa
imul
ins
gs
add
push
inc
popa
imul
ins
gs
inc
jbe
outs
je
jb
ins
outs
jbe
pop
inc
popa
imul
ins
gs
add
imul
gs
imul
arpl
ins
pop
popaw
fs
imul
jae
ins
popa
jns
je
ins
add
popa
je
outs
outs
add
jb
inc
outs
ins
outs
jb
dec
imul
jb
push
imul
add
gs
imul
gs
imul
imul
ins
gs
add
jb
outs
je
inc
jb
imul
jo
popa
jns
outs
js
outs
inc
imul
gs
add
jb
outs
je
inc
outs
outs
je
imul
push
gs
arpl
outs
inc
outs
js
jo
fs
je
ins
inc
outs
outs
je
ins
pop
bound
imul
outs
jb
ins
pop
bound
fs
outs
ins
outs
jb
ins
pop
je
je
gs
popa
arpl
outs
ins
outs
jb
ins
pop
je
je
gs
outs
jb
inc
outs
ins
outs
jb
ins
pop
jae
ins
arpl
inc
outs
jb
inc
outs
ins
outs
jb
ins
pop
jae
ins
arpl
inc
popa
arpl
outs
ins
outs
jb
ins
pop
imul
dec
imul
jae
ins
arpl
dec
outs
fs
ins
pop
ins
popa
js
je
ins
jae
outs
push
push
pop
ins
imul
push
outs
push
push
gs
dec
jne
inc
jb
imul
gs
dec
jne
inc
jb
imul
jae
addr16
inc
popa
arpl
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
addr16
inc
outs
jb
gs
outs
ins
outs
jb
jae
je
inc
outs
jb
gs
outs
ins
outs
jb
addr16
push
imul
inc
outs
ins
outs
jb
jae
je
push
imul
inc
outs
ins
outs
jb
addr16
push
imul
inc
outs
ins
outs
jb
jae
je
push
imul
inc
outs
ins
outs
jb
addr16
push
gs
arpl
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
push
gs
arpl
inc
outs
jb
inc
outs
ins
outs
jb
addr16
push
gs
arpl
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
gs
arpl
inc
popa
arpl
outs
ins
outs
jb
addr16
dec
popa
js
je
ins
jae
outs
push
push
gs
dec
popa
js
je
ins
jae
outs
push
push
gs
dec
imul
push
outs
push
push
gs
dec
imul
push
outs
push
push
gs
push
gs
arpl
dec
outs
fs
addr16
push
gs
arpl
dec
je
ins
add
je
push
outs
ja
imul
je
dec
je
ins
inc
outs
outs
je
dec
gs
inc
jb
imul
gs
outs
jne
inc
jb
imul
je
add
gs
jae
popa
jb
jae
inc
jb
jo
imul
ja
popa
arpl
jb
jne
add
inc
jb
ja
je
ins
push
imul
gs
inc
jb
ja
imul
inc
jb
imul
jne
inc
jb
imul
jae
inc
popa
arpl
outs
ins
outs
jb
inc
outs
jb
gs
outs
ins
outs
jb
push
imul
inc
outs
ins
outs
jb
push
imul
inc
outs
ins
outs
jb
push
gs
arpl
inc
outs
jb
inc
outs
ins
outs
jb
push
gs
arpl
inc
popa
arpl
outs
ins
outs
jb
dec
popa
js
je
ins
jae
outs
push
push
imul
push
outs
push
push
gs
arpl
dec
outs
fs
push
gs
arpl
dec
je
ins
add
ja
imul
gs
inc
outs
outs
je
addr16
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
popa
jb
jne
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
je
jb
jne
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
addr16
inc
outs
ins
ins
popa
outs
fs
imul
pop
inc
outs
jne
je
addr16
dec
je
ins
add
je
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
jb
outs
add
dec
outs
ja
jb
push
jb
ins
add
bound
jb
outs
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
gs
je
jb
add
ins
jo
jb
push
je
imul
arpl
add
jae
popa
addr16
outs
js
inc
imul
jae
ins
je
dec
gs
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
outs
ja
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
je
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jp
inc
add
outs
je
imul
jae
outs
fs
popa
jns
jne
add
je
inc
outs
popa
bound
add
je
dec
outs
je
jb
popa
ins
add
je
inc
jne
outs
push
imul
pop
dec
popa
ins
add
je
push
popa
bound
fs
jae
je
push
gs
add
je
push
imul
inc
outs
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
jae
je
inc
outs
jne
ins
gs
jne
data16
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
push
push
push
popa
jae
bound
add
je
push
outs
jo
outs
jae
add
jb
push
imul
popa
je
add
je
push
imul
popa
je
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
push
imul
pop
push
imul
jae
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
jne
gs
outs
jbe
add
jns
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
gs
outs
ja
add
fs
dec
outs
jne
gs
outs
ja
add
outs
je
outs
ins
push
je
ins
gs
push
gs
je
ins
add
je
inc
popa
jo
jne
add
jb
outs
jb
dec
imul
outs
add
je
push
jb
ins
popa
jb
push
arpl
outs
add
je
inc
outs
jne
fs
jae
je
inc
outs
jne
fs
dec
ins
popa
addr16
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
jae
gs
cs
dec
add
arpl
jns
inc
js
jae
jae
inc
imul
jns
outs
outs
add
ins
gs
outs
outs
add
je
dec
gs
outs
jb
inc
js
gs
imul
inc
imul
gs
jns
je
ins
dec
outs
outs
add
je
inc
jne
ins
dec
popa
ins
add
outs
ins
inc
imul
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
dec
outs
addr16
add
je
dec
outs
add
jb
popa
je
push
jb
je
inc
outs
je
jns
push
jb
je
inc
js
gs
imul
pop
push
imul
push
outs
add
je
dec
imul
je
dec
outs
jne
gs
outs
jae
je
outs
outs
add
je
pop
add
jae
addr16
pop
add
outs
jae
add
je
inc
jb
jo
imul
ja
ins
popa
add
data16
jae
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
je
imul
dec
bound
arpl
gs
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jae
gs
cs
push
imul
imul
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
imul
jb
imul
je
dec
je
ins
add
popa
jne
je
gs
imul
gs
je
jb
bound
add
gs
arpl
gs
gs
imul
imul
fs
dec
outs
popa
add
fs
push
jns
gs
jae
je
inc
outs
arpl
jb
jae
je
dec
popa
jb
imul
outs
outs
inc
popa
jae
add
je
push
popa
bound
outs
jo
inc
outs
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
jae
je
push
outs
outs
je
outs
ins
fs
jae
je
inc
outs
ins
jne
outs
inc
outs
jne
je
push
popa
bound
popa
jns
jne
inc
outs
ins
jne
outs
push
je
ins
gs
outs
ins
ins
arpl
outs
add
je
inc
outs
ins
jne
outs
push
je
ins
gs
inc
outs
ins
jne
outs
push
je
ins
add
jp
push
jns
add
ins
gs
popa
jns
jne
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
imul
ins
add
je
inc
outs
arpl
jae
je
push
outs
ja
outs
jne
je
push
popa
bound
popa
jns
jne
push
outs
ja
je
ins
gs
outs
ins
ins
arpl
outs
add
je
push
outs
ja
je
ins
gs
push
outs
ja
je
ins
add
je
push
popa
fs
pop
push
push
outs
outs
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
outs
jbe
pop
push
gs
inc
push
add
fs
push
gs
inc
push
add
je
push
gs
add
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
je
push
gs
arpl
push
popa
je
add
push
gs
fs
outs
ins
jns
pop
ins
ins
dec
outs
fs
imul
jne
gs
je
jb
push
gs
arpl
outs
ins
gs
outs
fs
je
dec
outs
outs
gs
gs
add
ins
arpl
fs
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
outs
jbe
dec
gs
add
je
inc
push
outs
fs
pop
ins
ins
push
gs
push
gs
fs
push
je
gs
ins
push
gs
fs
push
jns
je
ins
cs
gs
push
bound
imul
ins
inc
outs
arpl
outs
je
push
je
gs
ins
add
outs
push
gs
add
je
gs
fs
pop
ins
ins
push
gs
fs
dec
outs
popa
add
fs
ins
ins
add
gs
je
add
ins
bound
add
jne
push
gs
inc
ins
popa
arpl
push
je
jb
add
outs
add
jb
outs
addr16
outs
jb
popa
je
push
outs
ins
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
jb
ja
outs
xor
push
ins
outs
outs
je
imul
add
je
push
ins
outs
outs
je
imul
add
jae
gs
cs
jb
ja
outs
addr16
gs
add
je
outs
fs
outs
addr16
imul
pop
push
gs
push
outs
fs
outs
addr16
imul
ja
imul
imul
popa
je
ins
popa
addr16
push
je
imul
outs
ins
outs
je
jae
je
inc
ins
imul
add
je
dec
imul
outs
ins
outs
je
push
je
imul
ins
imul
pop
push
jb
ins
ins
imul
ins
inc
jb
bound
dec
outs
jbe
imul
inc
outs
ins
ins
arpl
outs
pusha
xor
dec
imul
inc
outs
outs
jbe
jb
add
imul
jb
jo
imul
add
ins
ins
push
arpl
ins
add
ja
arpl
ins
add
outs
jbe
jb
imul
add
arpl
ins
gs
add
pop
dec
ins
jo
imul
popa
ja
je
imul
gs
push
popa
jbe
jb
cs
gs
jne
arpl
cs
jae
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
outs
ins
ins
imul
ins
imul
add
add
add
add
add
dec
add
jbe
popa
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
cmp
outs
add
popa
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
inc
push
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
bound
add
add
or
add
and
inc
add
jb
ins
add
add
jae
and
add
popa
add
outs
add
add
outs
add
add
add
and
dec
add
push
add
imul
sub
sub
and
popa
add
add
add
outs
add
popa
add
outs
add
add
arpl
imul
add
outs
add
outs
add
add
add
add
add
add
add
add
pop
push
add
jb
add
outs
add
popa
add
add
inc
add
jb
ins
add
or
add
add
ins
add
add
sub
add
imul
sub
add
outs
add
add
sub
add
jo
add
or
push
jo
add
add
add
jb
add
add
popa
add
and
popa
add
add
jb
outs
add
ins
add
ins
add
add
add
add
outs
add
and
je
push
add
push
add
and
data16
add
add
jb
outs
add
and
je
push
add
jo
add
imul
add
add
push
add
cmp
and
jnp
xor
jge
add
jb
add
outs
add
popa
add
add
xor
add
add
outs
add
jb
arpl
add
add
data16
jne
ins
add
add
push
add
add
je
add
dec
add
push
pop
add
jb
imul
inc
add
imul
add
add
dec
add
arpl
push
add
add
push
add
add
add
push
add
add
add
popa
add
push
add
ins
add
add
popa
add
daa
inc
add
arpl
imul
add
outs
add
outs
add
add
popa
add
add
popa
add
add
adc
jae
inc
add
add
add
imul
imul
add
je
je
outs
add
add
add
arpl
popa
add
arpl
add
add
je
je
outs
add
xor
add
outs
add
add
pop
popa
add
jo
ins
add
inc
add
je
je
outs
add
add
inc
add
jo
ins
add
add
jb
jae
jae
inc
add
outs
add
jo
inc
add
js
add
push
add
push
add
add
add
add
sbb
ins
add
add
je
add
jne
je
je
outs
add
add
push
add
ins
add
add
je
add
sbb
jae
jae
inc
add
add
add
bound
add
sbb
push
add
and
xor
add
add
add
push
add
cmp
add
jae
inc
add
add
add
js
je
inc
add
js
add
imul
add
inc
add
outs
add
jo
inc
add
js
add
inc
add
arpl
imul
add
outs
add
outs
add
add
ins
add
add
jae
add
bound
jb
outs
add
jae
add
jne
je
je
outs
add
add
inc
add
outs
add
jae
add
add
add
add
cmp
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
outs
add
add
jb
push
add
js
je
inc
add
js
add
bound
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
add
inc
inc
add
arpl
imul
add
outs
add
outs
add
add
ins
add
add
and
add
jb
add
je
outs
add
jns
and
jo
popa
add
add
add
and
add
ins
add
dec
add
jns
outs
add
je
push
add
outs
add
ins
add
add
and
add
ins
add
dec
add
jns
outs
add
je
push
add
outs
add
ins
add
add
pop
dec
add
je
imul
jae
inc
add
jb
ins
add
sub
arpl
jb
add
outs
add
add
popa
add
add
and
push
add
je
je
imul
jae
add
add
jb
add
add
popa
add
and
popa
add
add
jb
outs
add
ins
add
ins
add
add
add
add
outs
add
and
imul
je
push
add
add
add
outs
add
jae
and
data16
jb
and
jns
outs
add
jb
and
jae
arpl
jb
add
outs
add
add
popa
add
add
add
and
add
jne
jb
and
jae
add
add
outs
add
jae
and
arpl
outs
add
ins
add
add
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
jne
jb
add
add
add
je
and
jns
outs
add
and
push
add
and
popa
add
add
add
outs
add
data16
add
add
imul
and
imul
je
push
add
popa
add
add
add
add
add
je
outs
add
jns
and
popa
add
and
jns
outs
add
jb
and
jae
arpl
jb
add
outs
add
popa
add
add
add
das
inc
add
imul
add
add
add
add
popa
add
add
add
add
add
outs
add
jae
add
dec
add
je
and
popa
add
add
popa
add
add
add
push
add
and
data16
add
add
pop
push
add
ins
add
add
add
push
add
and
data16
add
add
or
add
add
add
ins
add
outs
add
add
imul
ins
add
pop
jb
jae
jae
add
add
jae
arpl
jb
imul
imul
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
dec
add
add
jae
and
arpl
popa
add
outs
add
je
and
bound
add
add
jne
ins
add
or
je
add
jae
add
test
jle
dec
mov
shl
xchg
jb
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
add
add
push
and
add
or
and
add
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
sbb
push
adc
sbb
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
sbb
add
adc
or
adc
add
add
xor
add
and
push
adc
add
adc
add
xor
and
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
and
add
add
xor
add
and
adc
add
add
add
push
adc
add
add
add
add
add
push
adc
add
adc
sub
adc
add
add
xor
xor
push
adc
pop
push
adc
cmp
push
adc
cmp
and
adc
cmp
and
add
cmp
push
adc
cmp
push
or
push
add
push
adc
push
and
add
inc
push
and
add
inc
add
dec
push
and
add
dec
add
add
sub
xor
sub
adc
cmp
push
adc
push
adc
add
adc
add
adc
add
add
push
add
add
add
add
pop
add
add
push
add
add
push
add
add
add
add
pop
add
adc
add
sbb
add
add
dec
add
add
sub
add
push
add
add
sub
sub
push
add
adc
and
adc
and
add
popa
add
adc
and
adc
and
add
add
adc
and
adc
and
add
imul
and
adc
and
add
ins
add
adc
and
adc
and
add
jno
push
adc
and
adc
and
add
jne
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
push
push
pop
push
adc
cmp
and
adc
cmp
and
add
jge
sub
adc
cmp
push
adc
xor
and
adc
xor
and
adc
push
or
add
xor
sub
adc
push
adc
or
add
or
push
adc
adc
add
add
cmp
adc
add
add
lea
and
add
or
xchg
push
and
add
adc
and
add
and
add
sbb
add
add
cmp
add
lea
xchg
add
add
add
add
add
add
aas
add
add
add
push
adc
add
add
or
and
add
adc
add
and
add
sbb
sbb
add
add
add
add
add
push
push
and
add
and
sbb
and
add
sub
sub
sbb
adc
adc
add
add
add
push
add
or
add
or
push
add
push
or
mov
rcl
lds
add
push
add
add
push
and
add
or
add
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
sbb
adc
adc
adc
sbb
add
or
pop
add
or
add
sbb
add
adc
pop
add
sbb
jns
inc
outs
jb
jae
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
or
cs
outs
ins
jo
je
jb
add
add
xor
add
xor
add
and
add
and
and
add
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
or
add
push
adc
add
pop
add
add
adc
pop
add
add
add
add
add
add
add
and
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
sub
or
or
and
add
sub
adc
adc
add
xor
and
add
cmp
pop
push
adc
test
add
sub
add
sub
sbb
or
add
cmp
adc
cmp
and
add
add
or
adc
pop
add
add
or
adc
xchg
push
and
add
adc
sbb
xchg
push
adc
cmp
add
push
pop
and
sbb
add
push
push
pop
or
and
adc
or
and
adc
push
push
sbb
and
add
or
add
adc
test
add
add
add
or
pop
add
cmp
add
sbb
cmp
or
or
pop
or
add
test
add
test
add
add
addr16
jne
fs
push
push
imul
add
push
ins
popa
bound
xor
add
add
adc
gs
jb
jo
imul
push
imul
add
adc
jae
gs
jb
jo
imul
add
add
sbb
and
adc
add
adc
adc
push
add
add
push
push
and
push
push
adc
and
sbb
adc
pop
add
pop
sbb
pop
add
pop
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
add
add
sbb
add
add
add
and
add
sbb
and
sbb
add
add
sbb
and
add
sbb
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
sub
je
jo
das
das
outs
cs
imul
je
arpl
das
data16
imul
outs
imul
xor
xor
add
add
sub
add
or
cs
gs
imul
and
add
sub
push
and
add
sub
and
adc
add
add
or
add
or
adc
and
add
or
adc
adc
adc
test
add
sub
sub
popa
add
add
gs
add
imul
pop
add
jno
pop
add
jne
add
adc
add
cmp
mov
jb
jae
jb
jne
inc
outs
js
add
add
sbb
addr16
jne
fs
ins
popa
addr16
jo
outs
inc
imul
add
or
imul
je
outs
add
adc
add
gs
inc
jne
je
outs
xor
add
add
or
jo
jns
jne
je
outs
add
push
add
adc
ins
gs
popa
jns
jne
push
popa
outs
gs
xor
add
add
adc
ins
gs
popa
jns
jne
push
popa
outs
gs
xor
add
add
sbb
popa
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
jb
ja
gs
add
add
adc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
bound
add
and
add
popa
arpl
jb
jne
fs
ins
popa
addr16
outs
ins
fs
gs
inc
outs
js
add
add
or
jb
ja
gs
jne
je
outs
add
adc
add
jae
inc
gs
popa
bound
add
adc
add
jbe
ins
imul
je
outs
add
adc
add
gs
jb
jne
inc
outs
js
add
add
push
jb
jae
gs
gs
inc
outs
js
add
adc
cmp
and
adc
add
pop
add
cmp
and
adc
push
and
adc
add
and
or
add
sbb
loope
pop
add
xor
adc
xor
pop
add
xor
adc
xor
and
adc
adc
jge
xor
and
xor
add
xor
adc
add
cmp
cmp
and
sub
xor
cmp
xor
jge
adc
add
add
cmp
add
lea
xchg
add
add
add
adc
adc
adc
add
adc
sbb
and
add
or
adc
or
and
add
sbb
and
and
add
and
lea
adc
or
adc
adc
adc
test
cmp
test
add
or
popaw
fs
imul
adc
add
adc
adc
add
or
adc
add
pop
add
adc
or
or
add
push
or
xor
pop
add
adc
sbb
adc
or
add
adc
and
add
or
adc
adc
or
cmp
test
add
add
cmp
adc
adc
adc
sbb
or
adc
lea
adc
adc
test
add
pop
or
or
adc
adc
cmp
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
add
pop
xor
xor
xor
xor
add
add
and
cmp
cmp
xor
sub
sub
sub
sub
xor
xor
xor
add
and
jo
jb
addr16
and
ja
gs
sub
popa
jb
and
xor
aaa
add
adc
add
arpl
outs
push
popa
jbe
jb
add
adc
add
dec
gs
gs
sub
popa
jb
add
sbb
add
add
add
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
