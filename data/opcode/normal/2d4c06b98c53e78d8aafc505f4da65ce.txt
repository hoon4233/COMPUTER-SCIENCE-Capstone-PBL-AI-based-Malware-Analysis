push
jl
add
add
add
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
inc
add
add
add
adc
add
add
sub
add
les
add
les
add
or
inc
add
add
je
add
add
add
add
add
ja
jbe
outs
je
imul
add
inc
je
inc
jbe
outs
je
outs
jb
imul
inc
je
inc
jbe
outs
je
outs
popa
bound
add
ja
jbe
outs
je
jb
je
add
add
jmp
or
mov
jecxz
xor
leave
push
adc
dec
cwde
ds
in
aas
push
add
add
arpl
add
jae
imul
inc
add
je
popa
add
add
add
add
add
and
add
add
add
add
add
das
add
add
add
jae
imul
inc
add
je
popa
add
add
add
add
add
add
jae
imul
push
add
add
add
add
dec
add
arpl
add
jae
imul
push
add
add
add
push
add
popa
add
outs
add
add
dec
add
arpl
popa
add
add
outs
add
imul
push
add
add
add
add
add
popa
add
add
outs
add
imul
push
add
jae
jne
ins
add
add
add
add
je
dec
add
ins
add
outs
add
inc
add
outs
add
imul
push
add
jae
jne
ins
add
add
jb
popa
add
add
add
add
imul
je
add
add
add
push
add
je
popa
add
add
popa
add
add
add
jae
add
add
push
add
ins
add
add
je
jns
inc
add
jo
imul
je
imul
add
add
inc
add
je
imul
push
add
jb
je
imul
push
add
outs
add
add
je
dec
add
jns
add
inc
add
je
imul
push
add
outs
add
add
je
dec
add
jns
push
add
add
add
add
add
push
add
add
jae
imul
add
push
add
outs
add
add
je
dec
add
ins
add
add
push
add
outs
add
add
jae
outs
add
inc
add
arpl
push
add
arpl
je
jne
jb
add
add
add
je
imul
dec
add
add
jne
imul
dec
add
bound
add
add
push
add
ins
add
pop
add
outs
add
add
add
inc
add
je
imul
push
add
jne
dec
add
add
arpl
je
imul
push
add
jne
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
add
je
push
add
imul
add
add
jae
inc
add
outs
add
jo
jae
add
inc
add
je
imul
push
add
outs
add
add
je
dec
add
jns
push
add
add
dec
add
add
add
arpl
je
imul
push
add
outs
add
add
je
dec
add
jns
push
add
add
js
add
inc
add
je
imul
push
add
outs
add
add
je
dec
add
jns
inc
add
popa
add
outs
add
ins
add
add
arpl
je
imul
push
add
ins
add
ins
add
inc
add
jae
je
outs
add
add
push
add
add
add
data16
ins
add
outs
add
dec
add
jae
je
popa
add
add
je
imul
dec
add
add
add
popa
add
outs
add
outs
add
outs
add
add
add
add
outs
add
jo
jne
je
add
push
add
add
add
jb
outs
add
add
je
dec
add
dec
add
add
jae
add
dec
add
dec
add
add
add
jns
jae
je
add
dec
add
dec
add
add
add
outs
add
add
imul
imul
add
push
add
jb
jbe
imul
inc
add
popa
add
ins
add
bound
ins
add
add
add
dec
add
ins
add
popa
add
imul
add
push
add
jb
jae
imul
add
add
dec
add
ins
add
add
add
add
push
add
bound
ins
add
dec
add
add
add
dec
add
cmp
push
add
outs
add
add
add
inc
add
ins
add
jne
je
add
push
add
jae
je
add
cmp
dec
add
outs
add
data16
arpl
je
jne
jb
add
add
push
add
outs
add
add
add
inc
add
ins
add
jne
je
add
push
add
jae
je
add
add
add
dec
add
outs
add
data16
arpl
je
jne
jb
add
add
add
push
add
dec
add
add
imul
xor
pop
add
outs
add
jo
jne
je
add
push
add
jae
je
add
cmp
dec
add
add
ins
add
add
add
outs
add
add
add
dec
add
cmp
push
add
outs
add
add
add
dec
add
add
popa
add
add
add
jns
jae
je
add
cmp
dec
add
jae
je
popa
add
add
add
add
add
imul
xor
pop
add
jo
add
popa
add
add
add
jns
jae
je
add
add
dec
add
jae
je
popa
add
add
add
add
add
add
add
add
add
add
ins
add
add
jae
imul
add
xor
js
and
add
add
add
push
add
push
add
inc
add
add
add
inc
add
push
add
dec
add
popa
add
add
inc
add
add
imul
add
add
add
push
add
jae
jne
ins
add
add
add
add
add
jne
ins
add
add
add
add
push
add
ins
add
add
add
add
add
jae
add
add
add
add
jo
add
add
add
add
jae
add
add
add
add
ins
add
add
push
add
add
add
add
outs
add
add
jb
jb
outs
add
and
outs
add
arpl
jne
jb
jb
add
add
outs
add
add
push
add
dec
add
add
popa
add
jae
add
cmp
or
add
add
and
and
and
and
jb
add
jae
outs
add
cmp
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
cmp
and
and
add
add
add
add
add
add
add
add
je
cmp
and
and
add
add
dec
add
inc
add
push
add
inc
add
dec
add
dec
add
inc
add
inc
add
push
add
pop
add
add
add
add
jae
imul
inc
add
popa
add
add
add
cmp
inc
add
outs
add
imul
inc
add
je
push
add
add
add
push
add
jb
jbe
add
push
add
outs
add
jae
add
add
add
add
jbe
add
push
add
outs
add
jae
add
add
add
add
jne
imul
inc
add
je
push
add
add
add
add
add
jne
imul
push
add
outs
add
add
je
imul
pop
add
outs
add
imul
outs
add
add
jo
jae
add
jbe
add
and
pop
add
add
jb
outs
add
add
je
imul
add
add
cmp
add
outs
add
imul
push
add
outs
add
add
je
imul
and
outs
add
imul
outs
add
add
jo
jae
add
jbe
add
and
add
add
add
das
add
add
jne
imul
push
add
outs
add
add
je
imul
add
add
add
ins
add
add
je
dec
add
jns
add
inc
add
add
outs
add
add
arpl
imul
add
js
dec
add
jns
add
add
and
add
add
inc
add
popa
add
push
add
jo
outs
add
je
add
add
and
add
cmp
das
add
add
add
add
outs
add
je
add
add
add
add
add
cmp
push
add
add
jns
dec
add
jae
je
add
add
add
push
add
add
jns
and
dec
add
add
add
add
add
add
add
add
add
add
push
add
ins
add
arpl
je
and
push
add
je
push
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
add
add
push
add
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
imul
outs
add
outs
add
je
sub
add
add
ja
jae
sub
add
jne
jb
imul
sub
add
add
jae
imul
sub
add
and
and
outs
add
and
push
add
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
outs
add
je
ja
popa
add
add
add
add
add
jae
imul
and
push
add
jb
jbe
imul
and
and
outs
add
and
push
add
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
imul
outs
add
outs
add
je
sub
add
add
ja
jae
sub
add
jne
jb
imul
sub
add
and
and
outs
add
and
push
add
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
outs
add
je
ja
popa
add
add
add
jb
outs
add
add
je
imul
and
push
add
add
add
jb
ins
add
add
add
jbe
imul
and
pop
add
das
add
add
add
je
add
add
add
das
add
jne
add
jns
add
add
add
push
add
add
jns
and
dec
add
add
add
add
add
add
add
add
add
add
push
add
ins
add
arpl
je
and
push
add
je
push
add
jns
jae
je
add
daa
add
add
jbe
add
je
das
add
jns
jae
je
add
pop
add
jbe
add
je
dec
add
add
pop
add
add
outs
add
add
jbe
add
je
das
add
jns
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
imul
outs
add
outs
add
je
sub
add
add
ja
jae
sub
add
outs
add
ins
add
add
add
popa
add
add
das
add
add
add
je
add
add
add
das
add
jne
add
jns
add
add
add
push
add
add
jns
and
dec
add
add
add
add
add
add
add
add
add
add
push
add
ins
add
arpl
je
and
push
add
je
push
add
imul
outs
add
outs
add
je
sub
add
add
ja
jae
sub
add
add
outs
add
add
jb
imul
das
add
jo
add
popa
add
add
outs
add
ins
add
add
add
add
push
add
jae
je
add
das
add
jb
outs
add
imul
jb
das
add
dec
add
ins
add
and
cmp
add
imul
outs
add
outs
add
je
sub
add
add
ja
jae
sub
add
add
outs
add
add
jb
imul
and
pop
add
das
add
add
add
je
add
add
add
das
add
jne
add
jns
add
das
add
jne
add
jns
dec
add
jae
je
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
and
dec
add
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
je
ja
popa
add
add
jb
outs
add
add
je
imul
push
add
add
add
jb
ins
add
add
js
jo
outs
add
je
and
dec
add
dec
add
pop
add
jns
jae
je
add
pop
add
push
add
and
and
and
add
add
add
add
js
add
add
add
add
jbe
add
je
jae
add
jbe
je
js
add
push
add
imul
add
jae
je
outs
add
add
add
add
add
add
push
add
dec
add
jns
jae
add
add
add
inc
add
popa
add
push
add
jo
outs
add
je
add
ins
add
add
add
add
add
jae
imul
inc
add
popa
add
dec
add
add
imul
jae
add
popa
add
add
and
add
add
add
inc
add
imul
add
add
add
add
js
jo
outs
add
je
and
add
add
je
and
ins
add
add
add
add
jb
jb
outs
add
cmp
and
xor
js
and
add
popa
add
ins
add
add
add
add
add
js
jo
outs
add
je
and
je
outs
add
add
and
jae
je
outs
add
add
and
inc
add
jb
outs
add
cmp
and
xor
js
and
add
add
add
popa
add
ins
add
add
add
add
add
js
jo
outs
add
je
and
je
jb
jne
jae
je
add
add
je
outs
add
add
and
inc
add
jb
outs
add
cmp
and
xor
js
and
add
popa
add
ins
add
add
add
add
add
js
jo
outs
add
je
and
dec
add
dec
add
pop
add
jns
jae
je
add
pop
add
push
add
and
imul
add
sub
and
inc
add
jb
outs
add
cmp
and
xor
js
and
add
add
outs
add
je
add
sub
add
add
add
and
add
arpl
add
jae
imul
inc
add
popa
add
dec
add
add
imul
jae
add
popa
add
add
and
and
add
add
add
add
add
dec
add
inc
add
dec
add
push
add
add
add
dec
add
pop
add
inc
add
push
add
dec
add
add
push
add
add
inc
add
pop
add
push
add
push
add
pop
add
dec
add
inc
add
add
add
add
inc
add
push
add
add
add
push
add
add
inc
add
pop
add
push
add
push
add
pop
add
add
push
add
push
add
inc
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
pop
add
push
add
pop
add
dec
add
dec
add
inc
add
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
pop
add
add
push
add
push
add
inc
add
inc
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
pop
add
dec
add
dec
add
push
add
add
data16
ins
add
add
add
add
add
add
add
cmp
add
add
imul
add
add
popa
add
add
popa
add
add
jo
arpl
add
jae
push
add
jb
ins
add
add
popa
add
add
add
add
popa
add
add
popa
add
add
add
ins
add
imul
add
js
add
add
imul
xor
pop
add
outs
add
ja
imul
xor
add
jne
outs
add
outs
add
ja
outs
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
pop
add
dec
add
add
inc
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
pop
add
add
inc
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
pop
add
dec
add
inc
add
inc
add
inc
add
push
add
push
add
dec
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
pop
add
dec
add
add
dec
add
inc
add
add
dec
add
add
add
dec
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
add
add
pop
add
dec
add
dec
add
push
add
add
and
add
arpl
add
jae
imul
inc
add
popa
add
dec
add
add
pop
add
add
add
add
add
add
jae
imul
inc
add
popa
add
dec
add
add
pop
add
add
add
add
add
jne
jb
imul
sub
add
sub
add
jne
imul
dec
add
arpl
popa
add
add
add
add
add
imul
add
outs
add
ins
add
add
add
add
add
push
outs
ja
xor
jb
arpl
jae
add
ja
xor
imul
outs
ja
xor
jae
gs
outs
add
push
outs
ja
xor
gs
jb
push
outs
ja
xor
jae
gs
outs
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
outs
add
push
jae
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
arpl
add
add
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
arpl
add
je
add
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
ja
imul
bound
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
add
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
add
je
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
ins
add
imul
js
add
add
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
arpl
outs
add
popa
add
imul
ins
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
add
jbe
popa
add
add
push
add
js
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
inc
add
je
inc
add
ins
add
bound
push
add
js
add
add
add
add
je
add
jb
outs
add
je
and
add
jae
je
add
xor
xor
pop
add
jo
jo
jae
jbe
arpl
add
js
add
add
add
add
add
dec
add
inc
add
dec
add
dec
add
inc
add
push
add
push
add
dec
add
add
jb
outs
add
add
je
dec
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
and
dec
add
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
add
inc
add
add
je
popa
add
add
outs
add
add
je
dec
add
add
add
add
imul
ins
add
jb
outs
add
add
je
dec
add
add
add
outs
add
add
add
add
push
add
dec
add
add
add
push
add
ins
add
ins
add
cmp
dec
add
dec
add
add
add
add
add
add
dec
add
add
push
add
outs
add
add
je
push
add
imul
add
add
jae
inc
add
outs
add
jo
dec
add
add
add
add
imul
ins
add
dec
add
add
add
add
imul
ins
add
dec
add
add
add
push
add
add
add
popa
add
je
imul
push
add
outs
add
add
je
dec
add
jns
add
inc
add
jae
arpl
jb
imul
imul
add
inc
add
jae
je
outs
add
add
push
add
inc
add
add
push
add
add
inc
add
add
push
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
and
add
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
je
jb
fs
je
outs
outs
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jne
imul
push
je
dec
je
je
je
jae
outs
inc
outs
jae
jb
outs
jb
add
and
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
sub
add
jb
outs
add
je
pop
add
imul
xor
add
add
add
add
add
add
add
je
jns
je
ins
inc
imul
push
popa
bound
add
jb
jns
jo
je
jae
jbe
arpl
add
add
pop
add
popa
add
inc
add
ins
add
dec
add
data16
pop
add
add
outs
add
ins
add
je
imul
pop
add
je
jb
imul
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jbe
add
jae
imul
add
add
add
je
imul
outs
outs
dec
outs
outs
push
imul
add
inc
gs
imul
outs
outs
dec
outs
outs
inc
js
add
add
add
ins
add
cmp
add
add
add
add
add
add
add
je
cmp
add
add
add
jne
outs
add
add
add
add
add
jo
outs
add
cmp
add
add
push
add
ins
add
arpl
je
imul
dec
add
outs
add
jne
popa
add
add
add
push
add
je
push
add
ins
add
arpl
je
imul
dec
add
ins
add
jae
jo
popa
add
add
add
add
add
js
ins
add
add
cmp
js
jae
ins
add
add
add
cmp
das
add
add
ja
ja
add
xor
add
jb
add
add
add
add
add
add
add
push
add
add
add
outs
add
data16
jb
ins
add
add
add
add
add
jae
ins
add
add
je
jns
ins
add
jae
push
add
add
add
outs
add
add
add
add
add
xor
inc
add
add
add
inc
add
add
add
add
add
add
add
add
xor
add
xor
add
adc
inc
add
add
add
xor
or
add
sbb
inc
add
add
add
add
sub
add
add
sub
add
add
push
add
add
cmp
and
add
cmp
and
add
pop
add
add
add
add
add
add
jbe
imul
inc
add
add
add
add
add
add
jns
jae
je
add
pop
add
jne
jb
jb
add
je
inc
add
outs
add
add
ins
add
add
add
add
jbe
imul
jae
pop
add
add
popa
add
popa
add
add
add
jae
add
sbb
add
and
add
add
jb
and
add
jae
je
add
xor
xor
pop
add
je
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
inc
inc
aas
xor
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
inc
inc
inc
inc
inc
inc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
add
arpl
jb
outs
add
outs
add
je
and
inc
add
push
add
add
add
push
add
and
popa
add
add
add
inc
add
and
inc
add
jns
jo
je
outs
add
jb
popa
add
push
add
add
jb
outs
add
imul
jb
add
add
add
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
add
add
mov
inc
add
xor
push
dec
dec
inc
dec
push
push
and
add
add
add
add
add
cmp
add
add
add
rol
xor
inc
add
add
les
add
add
and
add
add
add
js
sub
add
js
sub
add
add
and
add
sub
add
add
and
add
and
add
and
add
and
add
and
add
add
fsubr
inc
add
sub
inc
add
inc
add
fs
add
inc
add
inc
add
jb
add
inc
add
fs
add
jb
add
inc
add
jno
add
inc
add
inc
add
inc
add
jno
add
inc
add
jo
add
inc
add
inc
add
inc
add
je
add
jae
add
inc
add
jae
add
jb
add
jb
add
inc
add
jb
add
jno
add
jno
add
inc
add
jno
add
jo
add
jo
add
jo
add
jo
add
add
add
das
inc
add
add
add
das
inc
add
add
add
add
xor
add
add
and
add
adc
inc
add
add
add
add
add
inc
add
add
add
jnp
adc
cwde
ds
or
inc
add
add
add
adc
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
add
add
test
lods
(bad)
adc
nop
inc
cmp
add
xchg
iret
adc
dec
cs
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
add
add
add
add
add
add
add
add
psubusw
jae
rcl
mov
add
dec
cdq
or
add
add
inc
add
aaa
inc
add
add
add
adc
push
push
inc
push
es
popa
(bad)
mov
dec
inc
xchg
and
xor
pop
pop
pop
add
add
dec
imul
addr16
imul
add
add
push
dec
pusha
mov
add
and
fild
repnz
push
jg
mov
gs
es
sbb
xor
xchg
mov
xchg
add
cli
out
test
ins
sub
imul
xchg
lahf
push
fcmovu
imul
lock
stos
mov
pop
clc
mov
out
pop
xor
add
lock
add
lock
(bad)
(bad)
dec
push
lods
(bad)
call
pop
add
add
(bad)
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
addr16
add
not
add
add
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cli
mov
add
lock
and
add
lock
or
add
in
clc
imul
jmp
test
(bad)
xchg
fsubp
les
stos
dec
adc
rcl
loopne
mov
bound
(bad)
sahf
sbb
push
ins
imul
stos
pop
arpl
lahf
ret
add
aam
add
lock
(bad)
(bad)
jmp
jnp
fst
repz
pop
add
sar
(bad)
(bad)
mov
stos
aas
mov
add
jmp
mov
imul
jnp
mov
dec
sbb
push
test
xchg
and
fild
adc
and
inc
sti
mov
inc
jbe
or
(bad)
lock
(bad)
lock
adc
add
jmp
push
inc
mov
aad
jp
adc
inc
ds
and
inc
enter
add
call
push
pop
mov
and
stos
in
pop
push
retf
jne
lods
out
xor
mov
aaa
mov
aad
xor
lea
mov
lea
pop
repnz
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
into
add
lock
lock
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
out
push
add
lock
pop
add
sub
jo
scas
inc
in
xchg
adc
movs
dec
jo
jecxz
mov
mov
not
imul
inc
add
push
adc
icebp
xor
xor
sub
test
jnp
xor
test
loope
add
adc
or
mov
ret
je
dec
dec
fcom
shr
jae
rcl
sti
cmps
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
lock
mov
add
add
add
add
call
sbb
aas
add
repz
cli
sbb
mov
bswap
add
jbe
daa
(bad)
xchg
outs
in
or
xchg
pusha
mov
xchg
daa
dec
das
adc
mov
and
int3
push
lds
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
or
add
lock
lock
out
cmps
out
fnstsw
jbe
addr16
push
in
inc
mov
add
ds
dec
dec
lea
sbb
jb
aaa
aas
push
mov
aad
cmp
cmc
jp
cmp
xchg
call
pop
popf
retf
lods
loop
cli
div
cs
cld
popa
jb
ret
pop
jo
cmp
sbb
pop
fs
and
movs
pop
mov
out
xchg
push
in
imul
cmp
push
in
outs
imul
mov
bound
dec
xchg
inc
ret
lods
outs
sub
bnd
cmp
pusha
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
ins
cs
dec
pop
mov
mov
aas
pop
dec
inc
cmps
data16
fild
icebp
out
sar
adc
(bad)
popa
xchg
nop
call
sub
dec
sub
mov
xlat
ja
adc
inc
dec
popa
jae
int3
mov
jl
imul
data16
and
add
aam
add
not
add
outs
stos
add
push
add
lock
popa
add
adc
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
inc
xor
movs
dec
and
push
add
lock
lock
js
mov
add
add
sar
(bad)
call
add
lock
add
lock
add
lock
adc
das
fisttp
mov
push
stc
mov
or
xor
and
cmp
mov
mov
adc
mov
bound
pop
dec
inc
add
xchg
or
push
test
push
fild
sub
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
push
add
lock
add
add
add
xchg
and
add
lock
add
les
add
add
add
cmp
xchg
neg
test
neg
sbb
fistp
or
push
imul
nop
scas
jle
and
mov
mov
jae
mov
loope
gs
mov
jno
jmp
dec
xor
sub
pop
pop
loopne
pop
push
add
leave
jp
lods
sub
pop
adc
dec
cmps
jecxz
scas
mov
and
push
sub
sti
aas
call
jb
ds
ror
jno
or
jmp
clc
ja
sub
sbb
inc
add
lock
(bad)
(bad)
call
fild
pop
mov
push
pop
data16
sar
(bad)
(bad)
clc
fadd
push
add
adc
fadd
xlat
push
into
pop
and
inc
cdq
in
push
push
cmp
dec
sub
xor
ds
xchg
iret
nop
in
jg
jl
mov
hlt
xchg
test
popa
lds
add
lock
(bad)
inc
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jae
sub
add
in
addr16
aaa
add
lock
(bad)
(bad)
dec
gs
jge
add
sar
(bad)
push
add
lock
add
add
lock
(bad)
(bad)
dec
fisubr
inc
gs
enter
sar
(bad)
jmp
add
lock
add
mov
call
jl
add
lock
add
lock
add
(bad)
(bad)
(bad)
push
adc
test
imul
(bad)
fcomp
add
add
in
hlt
mov
push
push
sbb
cs
sahf
loopne
dec
gs
psrad
mov
jb
or
ret
add
(bad)
(bad)
(bad)
call
and
pop
imul
sar
(bad)
dec
add
sub
add
sar
cmp
add
or
cmp
inc
inc
push
sub
add
lock
(bad)
jmp
add
lock
add
lock
add
lock
jp
aas
adc
xchg
fsubr
jp
push
add
jecxz
or
or
add
lock
add
xchg
ss
neg
(bad)
(bad)
(bad)
in
ins
push
lock
add
and
add
xor
push
dec
xchg
mov
loopne
dec
add
jl
imul
cli
sbb
xchg
fstp
xlat
stos
push
enter
sbb
sti
nop
mov
test
mov
mov
test
push
adc
add
add
add
push
add
lock
(bad)
(bad)
(bad)
mov
dec
icebp
jecxz
(bad)
(bad)
dec
add
push
outs
push
lock
(bad)
(bad)
jmp
adc
adc
hlt
or
push
dec
fwait
dec
sbb
daa
ror
scas
dec
test
push
jns
xchg
test
add
jnp
data16
pop
push
pop
cmp
mov
(bad)
enter
mov
push
pop
adc
iret
xchg
xor
test
or
jbe
jp
and
jmp
aas
push
sbb
loopne
setg
es
js
in
retf
(bad)
(bad)
(bad)
(bad)
(bad)
push
rcr
js
add
lock
jo
lock
and
cmc
jno
pushf
adc
call
out
push
adc
lods
adc
jle
lods
inc
pop
(bad)
call
(bad)
jmp
lock
add
lock
xchg
mov
ror
int3
imul
adc
push
in
mov
ds
mov
dec
inc
dec
inc
in
pop
ficom
mov
dec
and
loop
ja
add
dec
push
das
je
and
push
outs
mov
xor
mov
retf
test
test
adc
push
jg
aam
fwait
bound
jno
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
push
shl
ins
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
dec
sub
xor
add
out
add
and
jo
sub
cmp
add
add
cmp
mov
icebp
mov
mov
or
dec
mov
xchg
mov
mov
jmp
jns
movs
push
adc
sub
add
xor
add
(bad)
(bad)
(bad)
jmp
inc
imul
mov
sub
(bad)
(bad)
jmp
jns
in
cmps
test
cmp
test
jle
mov
cmp
lock
mov
repnz
jo
arpl
or
into
dec
lock
mov
jns
jbe
je
xor
push
xor
enter
(bad)
(bad)
mov
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ficomp
pusha
cmp
add
and
fsubr
sti
jno
fs
outs
stos
(bad)
aam
ins
cmp
test
push
pusha
popf
lock
pop
cmp
and
stos
jp
jns
aad
push
jno
add
xchg
stc
popa
aaa
ret
fld
sbb
xor
sbb
sub
jmp
gs
add
add
add
and
add
(bad)
(bad)
(bad)
(bad)
jmp
dec
jl
lock
(bad)
(bad)
in
adc
lock
add
add
add
mov
add
lock
add
dec
mov
add
inc
add
lock
add
xchg
xchg
stos
jmp
(bad)
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stc
jns
cmp
lock
ja
lock
add
lock
(bad)
(bad)
jmp
mov
and
add
sar
(bad)
jmp
add
sbb
add
cmp
add
add
add
mov
arpl
aas
ins
dec
sar
(bad)
(bad)
std
mov
stos
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmps
cmps
mov
cmps
xor
add
cmp
add
sar
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
test
lock
jns
lock
xor
add
add
add
sbb
sbb
add
add
add
xor
add
(bad)
(bad)
(bad)
dec
jecxz
stc
stc
jns
lock
(bad)
jmp
hlt
sub
mov
xchg
repnz
cmp
cmp
pop
shl
pop
jb
inc
inc
pop
loope
xchg
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
stos
dec
add
lock
jp
lock
std
cld
and
outs
call
xchg
pop
inc
pop
shl
ja
test
and
fwait
mov
sub
inc
jl
add
add
scas
sbb
add
add
push
xchg
mov
or
fidivr
mov
ss
and
mov
shl
xchg
jg
sbb
lods
imul
bound
and
xor
jb
sub
mov
add
out
mov
or
cmp
mov
or
add
lods
xor
lods
sub
bound
sub
test
jg
cmp
adc
pop
xchg
push
mov
fs
shl
rcl
jmp
inc
push
dec
xor
(bad)
aam
mov
push
push
loopne
sbb
or
daa
ins
(bad)
cdq
xor
sbb
int
aam
cld
mov
addr16
jecxz
ror
mov
push
cwde
sbb
push
mov
mov
sbb
retf
not
xor
push
adc
jmp
clc
adc
xlat
(bad)
fldln2
ds
addr16
adc
jge
dec
movs
mov
popa
xor
mov
stos
(bad)
inc
int3
in
sbb
cmp
bound
mov
lods
or
clc
cmps
scas
inc
xchg
jne
imul
les
adc
lock
in
mov
sbb
fwait
mov
mov
mov
sub
mov
pop
out
popf
mov
dec
fild
sti
push
js
sub
mov
inc
fwait
pushf
cs
dec
xchg
adc
mov
mov
jae
(bad)
pusha
dec
or
(bad)
xchg
movs
jl
cmp
and
or
fistp
push
aad
and
mov
fwait
fwait
pop
cmp
lahf
aaa
mov
add
pop
mov
cmp
cmp
xchg
into
out
dec
(bad)
cli
dec
sbb
inc
sub
shl
push
std
(bad)
(bad)
fisub
rcl
cmp
sar
imul
xlat
xor
data16
sub
push
test
sbb
pop
push
adc
add
in
xchg
jns
inc
cmp
sbb
dec
or
test
pop
cmp
xchg
div
mov
into
push
jb
sbb
test
adc
push
sub
dec
and
ins
xchg
fimul
mov
and
loope
fwait
ds
fcomp
pusha
dec
jne
cmp
pop
retf
test
cmps
mov
scas
fdiv
lahf
push
adc
lods
cmp
mov
lds
enter
fsubr
test
dec
(bad)
cmp
sub
mov
adc
inc
sbb
adc
cmp
xchg
scas
jns
mov
push
paddb
jge
cmp
cmp
cs
pop
mov
lods
sbb
mov
scas
cdq
cmp
leave
cdq
inc
push
jo
dec
sub
int3
stc
pusha
call
jl
add
out
mov
cmp
fwait
sub
enter
repz
mov
jge
scas
xchg
ins
add
mov
cmp
in
in
and
sub
sbb
adc
push
adc
das
xchg
xchg
je
and
inc
ret
pushf
adc
lds
pop
out
mov
bound
mov
xor
scas
cdq
stc
or
retf
daa
lds
push
or
arpl
ins
cmc
js
cwde
cmp
cmps
in
mov
and
jo
aaa
cmc
jbe
add
mov
add
sub
jno
mov
jno
rol
xor
mov
mov
sbb
and
movs
pop
xchg
ins
js
popf
das
das
mov
movs
xchg
pop
std
jnp
mov
add
loopne
inc
adc
movs
add
add
add
add
add
push
(bad)
mov
stos
das
inc
les
data16
push
sbb
dec
cmp
retf
adc
movs
sbb
clc
fs
lock
clc
pushw
add
lock
dec
add
adc
add
stos
dec
add
aaa
add
lock
(bad)
(bad)
call
sar
mov
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
and
add
adc
add
cdq
jle
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
lock
(bad)
(bad)
jmp
jnp
mov
add
sar
(bad)
dec
iret
out
lds
push
aaa
pusha
xchg
cwde
or
in
mov
movs
xlat
mov
pop
popa
int3
lds
loopne
test
cs
mov
mov
je
ds
xor
aaa
pop
gs
jmp
add
test
add
lock
add
cmp
add
add
inc
add
lock
add
stc
sbb
jns
jge
retf
sar
(bad)
call
cwde
add
lock
add
lock
mov
adc
lea
mov
cmp
inc
inc
sahf
shl
shl
loopne
mov
shl
adc
xor
jg
out
in
scas
xor
dec
(bad)
add
adc
arpl
pusha
jle
add
test
cmp
cdq
out
pop
pop
arpl
or
nop
hlt
das
mov
dec
outs
or
mov
pop
outs
mov
imul
add
fadd
push
mov
mov
loop
call
add
pop
sahf
jge
dec
out
sti
xor
mov
push
test
inc
(bad)
aam
leave
loop
scas
add
add
add
add
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
sar
or
add
lock
das
popa
add
push
add
and
xchg
fist
int3
les
add
cmp
push
inc
cwde
or
(bad)
pop
je
pop
jp
or
retf
in
inc
inc
lods
push
shl
push
lock
sbb
xor
lock
add
mov
aam
inc
dec
sbb
jmp
push
lock
add
lock
add
add
lar
push
add
adc
add
fnstsw
add
fnstsw
add
add
add
lahf
lods
add
add
add
cld
mov
aaa
cld
xchg
dec
push
test
mov
jecxz
mov
jns
addr16
push
or
and
adc
js
mov
aam
in
xchg
imul
aas
sbb
xchg
loope
sbb
cs
and
in
cmp
sbb
lea
mov
or
addr16
pop
hlt
jmp
in
xor
add
add
jnp
dec
aam
mov
(bad)
(bad)
mov
add
lock
add
lock
add
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
pop
adc
push
pop
cld
xor
test
lock
push
dec
fwait
cwde
sub
cwde
inc
jo
fsub
fwait
jl
repz
inc
dec
outs
sub
add
lock
(bad)
(bad)
(bad)
mov
jl
fucomi
test
lock
(bad)
(bad)
fprem
xor
jg
ret
cld
sar
mov
push
test
add
es
(bad)
enter
xchg
mov
loope
and
movs
cld
mov
add
lock
add
fdiv
lock
adc
add
lea
push
push
out
mov
not
mov
clc
fimul
sar
lea
inc
arpl
fsubp
sar
push
lahf
jmp
add
(bad)
(bad)
(bad)
call
enter
loop
popf
test
lock
(bad)
jmp
test
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
sub
add
lock
xor
add
lock
add
(bad)
(bad)
(bad)
dec
xlat
pop
jg
add
sar
(bad)
(bad)
aas
adc
push
fldenv
xchg
int3
shr
push
inc
sbb
mov
pop
test
mov
inc
cmp
or
xor
and
mov
inc
inc
das
imul
cmc
mov
arpl
xchg
je
jnp
xchg
push
fcom
xchg
sub
fdiv
fidivr
adc
mov
hlt
sub
inc
push
int3
repz
xor
mov
and
add
jmp
add
push
add
and
add
lock
add
add
add
mov
and
pop
inc
cs
clc
pusha
mov
cmp
arpl
sub
and
mov
mov
call
dec
push
out
pushf
out
sbb
inc
fdiv
cmp
xchg
inc
dec
in
cmp
adc
push
aam
jb
mov
xor
dec
jns
mov
int
fisttp
sbb
call
fdiv
inc
sub
xchg
out
fistp
push
add
and
add
cmp
add
(bad)
(bad)
(bad)
call
cld
aam
imul
lock
(bad)
call
push
std
imul
dec
xor
stc
push
mov
vcmpps
les
mov
xor
xor
add
(bad)
(bad)
(bad)
call
int
fwait
sbb
cmp
sar
(bad)
call
add
add
add
(bad)
lock
add
or
add
repnz
fcom
dec
xchg
mov
and
cmp
mov
popa
sub
ds
(bad)
mov
shr
sbb
sahf
enter
je
push
(bad)
lods
mov
inc
dec
cli
adc
pusha
inc
lock
jns
call
dec
ja
pusha
jae
sbb
inc
(bad)
cld
ja
inc
pop
add
add
pop
add
stos
fld
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
addr16
xor
mov
add
lock
mov
lock
repnz
add
add
add
add
mov
or
inc
xchg
dec
pop
cmp
cli
jmp
frstor
call
jb
into
fucomi
sub
in
int3
stc
lea
pushf
imul
popw
and
ret
hlt
mov
mov
add
sub
rol
shl
jmp
mov
repnz
xchg
mov
(bad)
leave
fdivr
mov
fiadd
mov
neg
(bad)
(bad)
(bad)
(bad)
push
outs
pop
inc
push
xor
xor
add
es
add
add
lock
add
dec
sbb
push
jmp
push
jmp
add
lock
add
lock
mov
aad
out
sub
gs
fild
in
xchg
add
in
push
push
xchg
lock
and
add
jl
scas
mov
scas
push
stc
aad
or
cmp
add
(bad)
(bad)
(bad)
(bad)
cmp
dec
icebp
shl
fidiv
mov
lock
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
(bad)
fimul
add
push
add
lock
add
add
add
mov
add
cmps
jmp
jbe
mov
add
add
sar
(bad)
call
pop
push
lock
add
test
add
push
add
fist
adc
hlt
sbb
xchg
add
jmp
jle
xchg
push
cli
scas
lods
(bad)
arpl
cmp
jb
outs
dec
mov
push
mov
es
xchg
sub
mov
hlt
test
imul
fst
nop
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
bound
mov
add
(bad)
(bad)
(bad)
inc
dec
loopne
push
add
sar
(bad)
jmp
sub
ficomp
xor
pop
ins
dec
ja
sar
dec
push
gs
pause
cli
mov
out
std
pusha
jmp
and
scas
cli
(bad)
fst
add
mov
out
out
arpl
shl
scas
sbb
ins
pusha
sbb
pop
adc
stos
repz
push
or
xor
rol
out
fidivr
xchg
rol
dec
pop
lods
(bad)
movs
cmp
push
dec
lock
jno
mov
jne
sub
inc
adc
sub
es
shr
out
fwait
sar
and
(bad)
(bad)
(bad)
push
lock
add
adc
cmp
mov
fwait
sub
jecxz
(bad)
ss
xchg
xchg
push
repz
push
mov
fiadd
xchg
push
fiadd
xchg
pop
jg
ins
ficom
shl
xor
jb
rcl
xchg
inc
sub
adc
clc
(bad)
out
ins
xor
mov
cmc
cli
pushf
aaa
push
xchg
repnz
test
les
fwait
(bad)
test
xchg
pop
iret
and
imul
sbb
retf
adc
lods
loop
mov
dec
dec
lods
cmps
mov
sub
push
or
gs
js
(bad)
cli
mov
mov
mov
leave
mov
add
(bad)
(bad)
(bad)
jmp
pop
cmp
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fsubr
out
add
lock
add
add
add
push
push
xchg
pavgw
push
sar
(bad)
inc
cld
add
lock
add
lock
add
lock
and
lock
add
add
add
mov
pop
or
lock
pop
pop
add
lock
add
sbb
inc
cmp
int
ret
bound
bound
pop
sti
xchg
fdiv
mov
push
inc
loopne
stc
sti
outs
mov
mov
mov
sub
or
push
inc
lods
hlt
into
rol
dec
cmp
cmp
add
add
mov
add
xchg
ss
lock
push
add
adc
xchg
cmp
mov
pop
xchg
loopne
sub
inc
cmps
dec
ret
fnstenv
mov
cmp
add
mov
mov
xchg
add
add
lock
(bad)
(bad)
jmp
je
inc
mov
add
sar
(bad)
call
xchg
pop
mov
jmp
inc
sbb
xor
pop
pop
xchg
(bad)
mov
or
sbb
jnp
cmps
and
push
pop
mov
xchg
jae
loope
xchg
fs
dec
cmps
out
mov
xor
xchg
mov
sbb
or
inc
ror
clc
stos
ret
mov
mov
add
xor
mov
aas
gs
sbb
fs
mov
mov
test
in
xchg
mov
ins
adc
outs
push
in
push
loope
call
(bad)
mov
xor
sahf
xor
cmp
stc
dec
or
das
jle
pop
ins
retf
enter
(bad)
sub
sub
sti
out
aad
adc
lods
pop
add
test
cmp
adc
or
les
push
inc
fld
int
mov
test
jg
sub
jle
mov
ja
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
lods
frstor
add
lock
add
lock
lar
add
add
icebp
add
icebp
add
add
add
push
scas
add
add
add
sub
mov
push
xor
jnp
mov
cmp
sub
aad
in
mov
mov
sbb
in
icebp
sub
xor
jbe
and
dec
sub
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
add
inc
sub
add
lock
add
and
add
add
push
add
add
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
imul
aaa
dec
or
add
sar
(bad)
jmp
add
lock
add
lock
add
je
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
inc
leave
jb
xchg
sbb
add
lock
call
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
jle
fwait
fs
aaa
add
lock
(bad)
(bad)
dec
fimul
pusha
mov
lea
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jmp
add
lock
popf
add
repnz
ins
xor
movs
add
dec
mov
sahf
inc
xchg
rcl
ret
psrad
aas
out
scas
loopne
out
xlat
mov
retf
push
jl
cmp
lods
add
adc
or
sub
ror
aad
sbb
sub
add
adc
add
lock
lock
(bad)
(bad)
jmp
scas
pop
fcmove
jmp
push
sahf
add
sar
(bad)
inc
add
lock
lds
and
add
(bad)
hlt
add
push
add
lock
jmp
cmp
clc
mov
jecxz
(bad)
xchg
jmp
(bad)
cmps
xor
call
out
inc
jb
retf
mov
or
adc
mov
add
adc
add
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
push
mov
leave
jmp
in
stos
stc
daa
call
ins
les
cmp
sub
in
xor
sbb
sbb
es
shl
outs
cmp
push
and
and
fucomi
int3
sub
or
mov
test
xchg
pop
icebp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
mov
ss
shl
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
das
add
add
lock
add
mov
and
in
add
add
sar
(bad)
call
gs
lock
add
sub
das
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
test
cmp
add
in
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
push
inc
adc
add
sbb
cdq
add
add
add
les
lods
mov
call
gs
add
ja
scas
call
mov
cmp
inc
pop
sub
not
rcr
movs
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
mov
clc
inc
push
ins
test
pop
inc
dec
div
sbb
bswap
rol
add
pop
sti
pop
sbb
or
jle
cmps
and
out
test
lahf
cmps
mov
jmp
rcr
cmp
ficom
rcl
ret
cmps
nop
pop
sbb
inc
out
cwde
mov
adc
fistp
cmps
sub
call
sti
ja
fsub
jno
shr
popf
aas
test
lods
pop
sbb
mov
cmc
fisttp
xor
shl
in
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovb
dec
in
mov
add
retf
lock
test
dec
repz
sub
(bad)
mov
push
test
sub
jl
not
in
iret
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
push
out
into
sahf
push
es
fucomi
add
push
mov
mov
mov
sbb
loope
ret
mov
sahf
pop
push
xor
jl
jecxz
sti
or
and
test
call
xor
add
(bad)
(bad)
(bad)
(bad)
jmp
fwait
mov
add
lock
cmps
add
add
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
mov
sub
lock
xchg
and
sar
or
mov
xor
mov
fisttp
cmp
mov
lock
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
clc
repz
or
add
lock
add
(bad)
(bad)
(bad)
dec
push
xchg
jmp
add
sar
(bad)
dec
add
add
cdq
and
adc
add
lock
add
(bad)
fiadd
lock
add
inc
or
and
hlt
hlt
pushf
(bad)
fmul
mov
inc
(bad)
idiv
cwde
push
test
dec
xor
dec
pop
ins
int3
jmp
dec
popf
inc
out
pop
inc
seto
xchg
jmp
stc
inc
test
adc
iret
mov
rcr
xchg
imul
cmc
mov
mov
push
xchg
sub
test
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
lock
add
and
add
fist
or
loop
test
out
pop
mov
hlt
cmps
xchg
es
inc
daa
pop
and
(bad)
xchg
mov
jmp
fwait
retf
mov
sub
cmp
xlat
test
mov
out
mov
push
(bad)
pushf
xchg
jecxz
outs
mov
shl
and
sahf
div
adc
inc
add
stos
cmp
sahf
test
dec
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
xchg
retf
add
das
stos
add
arpl
push
js
pop
fld
pop
pop
retf
xchg
xchg
stos
add
sub
in
std
and
icebp
inc
sbb
not
sbb
mov
push
xchg
scas
cmp
xchg
adc
int3
in
push
int
in
rcr
add
lock
add
push
add
lock
(bad)
(bad)
jmp
push
or
dec
add
lock
push
lock
(bad)
(bad)
dec
add
lock
(bad)
(bad)
jmp
retf
shl
scas
sub
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
cwde
adc
sub
add
lock
lods
add
or
add
(bad)
(bad)
(bad)
jmp
scas
rol
lods
add
ret
(bad)
(bad)
push
add
dec
cld
add
add
add
cs
add
lock
add
outs
aam
mov
out
sbb
adc
push
jl
addr16
in
ds
xor
stos
cli
push
push
sub
movs
push
in
pushf
push
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
adc
cmp
scas
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidiv
xchg
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
retf
pop
ins
mov
add
lock
scas
add
cmp
add
(bad)
(bad)
(bad)
call
add
or
(bad)
jmp
sbb
add
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
scas
sbb
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
jae
mov
fwait
out
add
lock
(bad)
(bad)
(bad)
fisub
(bad)
cld
xor
add
sar
(bad)
jmp
xchg
add
sub
add
add
lock
(bad)
(bad)
dec
or
sbb
mov
lock
(bad)
inc
(bad)
(bad)
(bad)
clc
sbb
xchg
test
je
add
ret
(bad)
(bad)
call
fdivr
loopne
mov
mov
jno
cmps
cmp
fidivr
fdivrp
cmp
mov
sbb
outs
mov
xor
mov
int3
lods
sub
add
add
add
pop
mov
dec
jge
jg
(bad)
sub
xlat
xor
push
or
stos
and
sbb
push
inc
inc
mov
std
sbb
sub
in
sub
mov
pusha
jns
rcr
sub
ins
dec
jl
adc
push
stos
pop
xor
lea
rcr
fist
dec
pusha
push
jns
and
xchg
jmp
dec
inc
add
lock
add
or
(bad)
(bad)
(bad)
clc
cmp
into
sub
inc
add
xchg
add
jmp
add
add
add
das
test
lock
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cli
mov
(bad)
mov
xchg
jg
adc
jle
stc
add
adc
sahf
ds
push
push
sbb
repz
movs
fucomip
into
aas
adc
loop
sub
sub
or
fisubr
nop
xor
sbb
lea
clc
adc
repz
pop
nop
pop
jg
fimul
xchg
mov
fwait
daa
out
rcl
sub
dec
xchg
or
dec
aad
leave
mov
cs
xor
loop
add
lock
add
idiv
lock
add
lock
(bad)
(bad)
dec
mov
pop
ins
mov
icebp
call
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ds
xchg
loop
call
lock
test
es
xor
mov
jb
pop
and
out
cwde
pop
adc
mov
mov
movs
jecxz
xor
inc
js
xchg
sbb
ret
test
jl
pop
and
add
lock
cmps
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
js
jns
add
add
lock
add
adc
cmp
in
cdq
cmp
xchg
(bad)
(bad)
xor
sar
(bad)
jmp
lock
add
lock
add
lock
add
lock
inc
adc
ss
shl
fsub
add
inc
or
push
cld
imul
fdiv
pop
mov
jl
aas
add
push
xor
in
scas
mov
data16
mov
mov
fimul
push
cdq
neg
xor
jb
or
rcl
add
jg
es
popa
pop
repz
lahf
xor
ss
or
stos
and
push
retf
and
iret
inc
fisub
jge
fbld
lods
outs
fwait
push
es
mov
push
push
(bad)
jmp
aad
push
cdq
cmps
push
xchg
cmp
scas
jge
push
inc
mov
xor
sub
sar
out
add
jbe
and
sbb
xor
push
and
xchg
or
adc
push
out
call
adc
pusha
out
pop
lea
(bad)
fisubr
stos
out
cmp
retf
test
mov
stc
aad
dec
mov
dec
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
repz
lds
in
ja
cmps
xchg
dec
loopne
xchg
inc
es
mov
adc
hlt
dec
sub
inc
dec
stos
fisub
and
repnz
and
iret
and
add
mov
or
out
mov
mov
push
(bad)
sub
mov
push
retf
pop
fiadd
lock
mov
add
(bad)
(bad)
(bad)
inc
fiadd
sar
(bad)
inc
add
lock
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
push
adc
out
fwait
xor
add
loop
add
es
add
xor
add
(bad)
(bad)
(bad)
(bad)
cli
push
in
rcr
cmp
add
sar
(bad)
(bad)
mov
or
call
add
and
lods
add
sub
add
(bad)
(bad)
(bad)
inc
into
sub
mov
(bad)
dec
mov
lock
out
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
xor
dec
mov
cmp
mov
pop
into
sbb
sbb
jb
ss
inc
jmp
cmc
test
call
(bad)
sbb
cwde
out
retf
cvtdq2ps
add
out
int3
(bad)
xchg
(bad)
stos
fld
xlat
jns
mov
repz
out
jmp
mov
aad
mov
dec
mov
mov
lock
add
adc
add
(bad)
(bad)
(bad)
(bad)
jmp
jmp
add
lock
add
mov
or
ds
pushf
inc
pop
sub
mov
in
mov
pop
inc
jnp
jmp
(bad)
(bad)
(bad)
jmp
pop
add
lds
(bad)
(bad)
(bad)
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
shl
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
retf
mov
sub
cmp
add
add
add
aad
add
les
lock
or
inc
outs
cmc
inc
stos
fistp
ds
ret
adc
pop
inc
or
inc
(bad)
arpl
test
rcr
je
cmps
mov
pop
je
jae
or
push
cs
sqrtps
xor
inc
pop
ss
icebp
xchg
test
adc
adc
aad
push
aas
jno
pop
dec
xchg
xor
jb
loopne
sbb
inc
(bad)
fwait
pop
mov
mov
dec
arpl
dec
ins
mov
pop
and
aaa
(bad)
or
pop
vpsubb
xchg
lock
cmp
add
scas
cmps
mov
xlat
push
das
pop
ret
mov
pop
adc
cmp
cli
nop
mov
int3
cmp
mov
mov
jmp
out
les
popa
adc
mov
mov
cwde
sub
mov
lahf
sub
jnp
popf
mov
sar
enter
sub
(bad)
scas
scas
ins
cmp
pusha
mov
mov
ins
adc
inc
push
fdivr
xor
push
lods
ins
into
lahf
adc
(bad)
(bad)
(bad)
inc
fcmovnu
xchg
pop
and
sbb
sar
(bad)
jmp
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
push
ret
or
add
lock
adc
add
cmp
add
or
add
pop
xabort
nop
movs
inc
xor
push
inc
xor
dec
mov
inc
popf
pop
mov
push
push
dec
fwait
pop
cmp
mov
test
mov
jp
neg
pushf
pop
add
in
inc
inc
neg
push
push
stos
push
cmp
jg
or
test
(bad)
cvtdq2ps
xlat
add
xor
daa
and
imul
cld
lock
mov
lock
add
push
sbb
sbb
(bad)
(bad)
(bad)
clc
lea
lock
add
lock
add
lock
and
add
push
add
lock
add
mov
add
pop
mov
lea
dec
ss
ss
test
jp
push
imul
and
out
mov
ret
sub
hlt
dec
(bad)
or
lods
or
pushf
cmp
sub
aaa
or
in
out
call
pop
mov
sub
mov
xor
xor
xor
push
cwde
call
in
lahf
jae
or
(bad)
sub
inc
jbe
leave
mov
jg
xor
cmps
out
or
push
les
fld
mov
mov
dec
dec
pop
fadd
and
jle
cli
add
retf
xor
push
xchg
fistp
push
cmp
icebp
mov
inc
ds
in
pop
jecxz
adc
and
movs
xchg
mov
test
movs
imul
(bad)
mov
cli
add
es
stc
ins
les
ror
mov
daa
outs
jb
in
sbb
jmp
neg
push
pop
push
inc
add
std
addr16
test
out
fwait
add
add
sar
(bad)
inc
add
lock
add
lock
add
lock
xchg
mov
jb
and
cli
rol
mov
stos
rcr
inc
add
aas
fstp
inc
inc
sub
xor
add
(bad)
(bad)
(bad)
jmp
add
sar
(bad)
call
data16
pop
pop
mov
xor
js
call
adc
movs
xchg
sbb
pop
dec
pop
sub
pop
call
cmp
add
pop
pushf
or
fbld
repz
or
xchg
clc
jp
lock
test
mov
ins
popa
push
sahf
fidivr
mov
xchg
jne
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jp
xor
retf
add
mov
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
or
jb
xchg
push
fwait
lods
add
push
add
xor
bound
jbe
pand
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
pop
fcmovb
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
(bad)
jmp
adc
div
xchg
xchg
add
lock
enter
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cdq
fabs
pop
push
jne
xchg
jle
push
repz
out
stos
(bad)
mov
or
mov
test
iret
push
out
arpl
jge
add
lods
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fmul
inc
lods
sbb
xchg
enter
add
lock
add
push
pop
lock
data16
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
jge
fidiv
add
(bad)
(bad)
(bad)
dec
or
mov
ror
add
sar
(bad)
dec
add
lock
(bad)
(bad)
push
or
push
retf
or
mov
ret
(bad)
(bad)
dec
add
lock
and
add
add
add
push
add
lock
jno
dec
xor
add
nop
jge
pop
fs
adc
dec
scas
mov
mov
mov
mov
inc
xchg
jl
iret
fld
ret
jne
or
es
into
fs
popa
pop
lock
test
inc
jge
lock
cwde
sbb
pop
fwait
adc
fwait
xlat
mov
cmp
jp
add
or
add
add
add
pop
rol
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
loop
push
pusha
inc
push
das
lods
add
add
add
push
pop
add
je
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
fidivr
jo
add
lock
add
(bad)
(bad)
(bad)
jmp
cmp
mov
sbb
add
sar
(bad)
inc
cmp
mov
cmovs
pop
shl
push
jmp
add
mov
xlat
les
cld
jmp
dec
xchg
in
sub
jne
add
mov
xchg
(bad)
sahf
sbb
mov
cld
icebp
in
push
lock
cmp
add
lahf
ja
iret
mov
pop
lock
mov
mov
adc
mov
clc
push
mov
cs
(bad)
cmps
aas
add
in
add
push
add
or
add
mov
add
add
add
push
add
lock
jecxz
lock
add
add
add
addr16
mov
scas
inc
xchg
xor
dec
mov
sbb
ret
adc
mov
fld
ja
xchg
dec
pop
cmp
mov
movs
mov
add
adc
push
add
(bad)
(bad)
(bad)
(bad)
mov
add
outs
rol
lock
(bad)
push
rol
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
cmp
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
clc
and
(bad)
(bad)
(bad)
(bad)
fadd
jecxz
outs
aam
lock
(bad)
jmp
cmp
scas
fcom
fwait
in
pop
jmp
jbe
hlt
jae
pop
jno
iret
repnz
inc
push
push
fmul
stos
mov
xor
add
lock
add
or
lock
mov
call
push
jl
ror
data16
push
das
rol
dec
test
jmp
retf
mov
dec
mov
mul
sar
icebp
int3
(bad)
pop
add
lock
(bad)
(bad)
call
mov
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
sti
in
push
pop
aaa
add
lock
fadd
lock
push
mov
mov
out
scas
mov
add
mov
rcr
clc
mov
mov
inc
sbb
out
cmps
push
es
xor
jmp
retf
cmp
push
mov
(bad)
call
scas
es
xchg
daa
push
fstp
jno
imul
rol
(bad)
cwde
xor
lock
(bad)
inc
add
lock
add
push
add
lock
add
add
add
add
add
popf
xchg
lock
add
arpl
lock
add
(bad)
(bad)
(bad)
inc
cmp
aas
inc
sbb
xchg
mov
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fisub
cmp
xor
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
lock
loope
lock
pushf
out
and
mov
mov
fcom
inc
push
mov
mov
cld
lea
imul
add
mov
dec
jge
push
inc
jo
adc
cmp
mov
imul
hlt
jp
js
aas
sahf
cdq
das
pop
xchg
mov
retf
in
pop
jnp
jno
jno
in
bnd
jae
ins
xor
std
mov
push
xchg
sbb
pushf
mov
aam
retf
hlt
jge
cmp
sub
or
mov
adc
xor
icebp
cmps
outs
test
sahf
shr
push
rcr
add
add
out
cmp
inc
and
in
stc
fs
pop
sub
add
(bad)
(bad)
(bad)
(bad)
sti
nop
test
js
jmp
(bad)
(bad)
(bad)
fild
adc
xchg
push
cmps
xchg
outs
das
mov
jno
shr
inc
ror
shr
rol
add
add
rcr
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
repz
add
add
in
add
add
add
add
add
cld
sub
mov
adc
and
in
leave
xor
or
aas
dec
cmps
nop
int3
sbb
(bad)
or
add
xchg
pop
loopne
or
je
mov
gs
mov
lock
add
cmp
add
add
add
push
add
adc
lea
lock
add
add
add
xor
add
(bad)
(bad)
(bad)
push
xor
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ins
pusha
dec
icebp
loopne
int3
xor
add
xchg
fild
lock
ja
sbb
cmps
pop
(bad)
(bad)
dec
inc
adc
(bad)
cwde
cs
mov
je
(bad)
enter
jo
(bad)
stos
jb
pop
ja
sahf
pusha
leave
jmp
or
jns
mov
sahf
(bad)
xor
js
jo
sub
push
jle
test
call
enter
mov
push
sti
pop
or
push
stc
xchg
push
xor
sbb
adc
out
xchg
stos
jo
sub
and
stos
cmp
push
adc
lods
outs
sbb
test
lock
add
add
add
xor
add
(bad)
(bad)
(bad)
push
jmp
add
sar
(bad)
dec
add
add
add
call
outs
sar
(bad)
(bad)
jmp
push
lock
add
dec
add
lock
add
lock
add
test
xchg
call
add
lock
add
lock
add
lock
(bad)
(bad)
jmp
or
out
loope
lock
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
jle
cli
scas
sub
mov
in
arpl
adc
dec
or
fdivr
loope
loop
add
movs
imul
ins
mov
stc
out
popf
test
shl
add
sbb
add
mov
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jb
cmc
xor
add
lock
(bad)
(bad)
call
jmp
add
sar
(bad)
dec
jp
inc
les
rol
jbe
adc
mov
imul
lock
shr
xor
rcr
push
push
fimul
mov
xchg
in
shl
scas
mov
test
add
shr
xor
out
iret
(bad)
fcomp
mov
mov
shl
mov
inc
xchg
pop
cmp
cmp
push
mov
jno
mov
push
jmp
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
inc
imul
mov
add
lock
in
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
retf
dec
lods
aaa
jge
add
lock
in
lock
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
dec
sahf
or
pop
jg
add
lock
add
xor
add
(bad)
(bad)
(bad)
dec
(bad)
cmp
lock
(bad)
dec
add
lock
cdq
add
and
repnz
add
add
add
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
rcr
js
outs
rol
int
add
es
xchg
fnstsw
rcl
loope
mov
mov
mov
pop
sub
xchg
or
xor
or
and
mov
ret
cs
mov
xor
add
(bad)
(bad)
(bad)
jmp
mov
fidivr
lods
aas
loopne
add
sar
(bad)
dec
dec
(bad)
call
cdq
scas
add
je
mov
fld
and
aaa
popa
or
dec
pusha
mov
sar
test
shl
test
movs
test
cmp
test
push
sbb
jmp
fwait
or
mov
into
(bad)
loope
add
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jne
xchg
(bad)
cld
xchg
add
add
add
add
add
push
out
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
cmps
sahf
jbe
xchg
out
inc
sar
nop
sub
bound
push
call
mov
test
pop
into
mov
scas
imul
popf
push
xor
bound
or
shr
jb
add
(bad)
data16
lahf
lahf
or
or
enter
xchg
sti
sbb
cmp
lods
out
sar
inc
lods
cmps
bound
mov
nop
inc
leave
lds
ss
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
or
add
pop
call
xchg
mov
pop
js
es
push
sub
xor
mov
loop
out
or
mov
xor
les
outs
push
rcr
xchg
add
add
add
jmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
frstor
pop
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
js
add
lock
add
push
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
imul
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
repz
adc
jmp
lock
add
(bad)
(bad)
(bad)
jmp
in
clc
xor
inc
mov
sar
(bad)
jmp
aam
pop
fiadd
add
mov
sbb
mov
mov
xchg
add
jbe
push
push
mov
mov
fst
icebp
clc
jno
retf
sti
mov
rcl
or
pop
adc
call
test
shr
mov
shr
out
pop
fbld
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
in
add
lock
in
add
dec
fidivr
cdq
jmp
adc
or
pop
add
add
sar
(bad)
call
add
lock
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fidiv
xchg
cmp
jle
call
int3
xchg
mov
jmp
xchg
jp
mov
cmp
sub
imul
mov
lahf
xchg
fidiv
div
cmp
sti
call
inc
cmp
cdq
fld
lods
hlt
scas
data16
cli
add
mov
add
push
add
lock
inc
add
add
add
pop
sbb
jo
outs
or
(bad)
dec
fwait
inc
je
(bad)
loopne
mov
adc
nop
push
or
dec
dec
fbld
leave
scas
lock
(bad)
adc
xchg
and
and
inc
adc
dec
mov
pusha
repz
inc
stos
repz
jne
mov
xor
add
(bad)
(bad)
(bad)
call
cwde
jl
cmp
jle
xor
add
sar
(bad)
call
lea
lock
add
dec
test
and
mov
mov
(bad)
bndstx
push
test
mov
inc
and
aaa
loope
ja
and
mov
or
sub
in
jl
scas
es
lock
mov
leave
(bad)
jle
retf
gs
bound
and
cmp
not
inc
xlat
arpl
mov
(bad)
js
sbb
mov
sbb
and
mov
mov
call
jns
push
xchg
leave
adc
inc
inc
movs
adc
jns
cmps
aad
jbe
and
in
jp
or
mov
inc
and
sbb
add
lock
(bad)
(bad)
jmp
out
inc
inc
or
add
sar
(bad)
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jl
(bad)
xchg
jno
jne
xchg
sbb
icebp
cmp
dec
in
cli
sub
aas
jecxz
ror
leave
inc
jbe
popa
add
xlat
xchg
aad
cmp
sbb
sub
sbb
mov
shr
out
sbb
xor
int
xchg
and
jp
cmps
or
sbb
ds
ins
(bad)
add
dec
push
(bad)
pop
shl
mov
mov
repz
out
add
xchg
or
pop
es
xor
dec
pop
movs
jge
lock
add
jmp
xchg
add
or
add
push
add
lock
adc
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
dec
stos
stos
pop
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
or
push
add
lock
pop
not
(bad)
add
and
iret
adc
xchg
xlat
adc
test
inc
pop
pop
sub
fs
arpl
mov
test
and
push
dec
(bad)
js
call
xor
jno
loopne
push
imul
(bad)
(bad)
(bad)
push
add
sub
test
lock
add
add
add
add
add
and
add
add
add
fadd
add
and
add
add
add
add
add
(bad)
(bad)
(bad)
dec
pusha
mov
(bad)
(bad)
jmp
add
adc
lock
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
stos
adc
jo
or
cld
sbb
pusha
sahf
mov
inc
cmp
repz
mov
dec
push
jg
or
stc
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
cmp
dec
pop
addr16
aas
push
push
cdq
jg
cwde
stc
data16
fmul
mov
ds
xchg
mov
mov
loopne
repz
push
scas
pop
repnz
jmp
out
push
and
or
xor
sub
aaa
jle
or
dec
sbb
icebp
cmps
loopne
sbb
pushf
add
cmp
mov
mov
mov
inc
xchg
imul
enter
jnp
pop
sub
dec
push
xor
stc
into
mov
push
in
clc
add
popf
test
jae
std
repnz
icebp
mov
push
xlat
or
cmps
out
cmc
push
mov
imul
js
mov
push
mov
fwait
mov
stos
jmp
lods
and
dec
test
(bad)
pmuludq
pop
loope
popa
dec
das
(bad)
xor
jo
dec
pop
out
es
jae
cmp
out
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
adc
test
mov
lock
add
add
add
dec
add
lock
(bad)
(bad)
inc
(bad)
sahf
dec
cmp
sti
add
sar
(bad)
push
add
lock
(bad)
(bad)
(bad)
cmp
pop
xor
xlat
(bad)
fidivr
(bad)
inc
add
lock
mov
lock
inc
leave
ss
mov
push
icebp
xchg
mov
push
int
imul
xlat
aaa
mov
stc
clc
sti
add
adc
add
add
add
pop
inc
add
add
add
test
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
sar
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lea
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ja
es
sbb
dec
adc
aaa
jne
sub
and
cmp
(bad)
dec
clc
add
sbb
push
xchg
mov
in
jno
dec
or
clc
inc
sub
or
cmps
retf
fsubrp
call
lock
(bad)
(bad)
inc
in
jne
push
adc
jecxz
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
xchg
xchg
xor
add
lock
add
push
inc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
push
add
lock
and
and
add
lock
(bad)
(bad)
(bad)
cmp
sbb
lods
mov
add
lock
(bad)
push
js
fld
fs
bound
cmc
push
loop
adc
mov
stos
dec
out
mov
adc
cmps
out
xor
test
movs
sti
(bad)
mov
nop
retf
repnz
fisttp
mov
fnstcw
mov
xchg
ja
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
aam
aaa
xchg
aam
or
xchg
adc
sub
or
mov
pop
shr
ins
xchg
sub
and
inc
fs
add
dec
mov
jmp
arpl
paddusw
aad
out
push
icebp
sbb
out
mov
aam
(bad)
push
inc
push
cmp
fcmovu
push
mov
fs
and
shr
(bad)
dec
jmp
cs
adc
lock
add
fild
add
pop
push
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
cmp
add
(bad)
(bad)
(bad)
dec
jmp
test
(bad)
(bad)
(bad)
mov
pop
jge
xor
xor
pop
mov
call
dec
nop
pandn
(bad)
fnstenv
jno
ss
mov
pop
pop
movs
lock
mov
icebp
sub
ror
out
push
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
sbb
mov
jmp
mov
lods
add
sub
pop
stos
fstp
sub
pop
rcl
adc
sahf
xchg
add
jmp
lods
sbb
pop
or
mov
dec
push
cwde
loopne
outs
cwde
sub
add
(bad)
(bad)
(bad)
jmp
out
fmulp
jne
movs
lsl
sar
(bad)
inc
or
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
jo
push
mov
lea
add
lock
(bad)
(bad)
jmp
sbb
in
or
lock
(bad)
call
or
jle
sbb
xchg
(bad)
mov
mov
or
push
add
mov
out
or
mov
aad
stos
jge
and
ror
cmp
sub
rcr
sub
or
dec
lods
inc
cld
(bad)
dec
fs
sbb
adc
(bad)
sbb
test
push
les
cwde
push
(bad)
(bad)
(bad)
jmp
scas
xor
push
add
lock
add
sahf
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
test
mov
fdivr
loopne
int3
fdivr
mov
mov
ret
(bad)
adc
cmp
ret
mov
in
mov
adc
sub
dec
scas
or
(bad)
(bad)
(bad)
(bad)
jmp
mov
fcomp
add
lock
lock
lock
pop
imul
test
mov
sbb
das
jp
jns
inc
dec
mov
test
push
je
bound
or
sbb
fldlg2
push
xchg
pop
sahf
cmc
mov
icebp
xor
pop
xor
add
lock
(bad)
(bad)
call
sub
js
or
lock
(bad)
call
out
dec
mov
cdq
jl
sbb
sub
mov
push
pop
cmp
repnz
je
xchg
mov
jb
jmp
(bad)
pop
adc
add
(bad)
(bad)
(bad)
call
not
stos
or
lock
(bad)
(bad)
mov
xor
dec
movs
pop
jg
push
cdq
pop
mov
arpl
sbb
mov
sub
sub
add
adc
add
push
stos
add
add
add
xor
add
xor
add
sbb
add
or
add
das
mov
sub
add
pop
lock
add
add
xor
add
and
mov
add
jne
push
and
sbb
dec
sub
int3
(bad)
dec
push
bound
js
mov
enter
ins
sub
inc
jge
add
jge
xor
in
arpl
lods
adc
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
std
fucomip
lds
movs
test
addr16
push
mov
leave
adc
jmp
or
push
cmp
inc
jmp
sub
sar
xchg
imul
mov
clc
int
adc
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
xchg
sub
in
push
add
add
add
mov
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
retf
imul
outs
pop
xchg
int
es
lock
out
sbb
push
fwait
ins
aas
dec
pop
jmp
aam
daa
mov
rcl
cmp
fs
(bad)
cmp
jp
jne
sar
cdq
mov
cmps
ss
imul
pop
mov
mov
mov
icebp
mov
dec
sbb
lock
add
add
add
add
add
les
add
add
nop
mov
cdq
and
and
inc
retf
bound
leave
jge
or
sub
loope
mov
scas
mov
lods
mov
outs
mov
mov
mov
sub
test
add
jecxz
jbe
lock
rcl
outs
call
int3
adc
or
or
lock
add
inc
mov
mov
(bad)
cmp
lock
add
inc
add
lock
mov
adc
pop
or
outs
jg
xchg
arpl
xchg
in
adc
push
jb
and
mov
popf
dec
jp
into
pop
idiv
jns
popf
jg
pop
fabs
bound
sti
xor
sbb
push
lock
out
fidiv
test
call
cmps
sbb
dec
arpl
lock
ror
or
cmp
cmp
add
jg
add
add
add
shl
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
fwait
shl
jnp
pop
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
xor
or
mov
add
add
add
aaa
add
lock
(bad)
(bad)
push
je
cmp
sbb
lock
(bad)
(bad)
jl
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
pop
dec
fwait
jbe
mov
inc
xor
xchg
dec
loope
aam
sub
in
movs
es
and
inc
cmps
idiv
repnz
push
or
jb
lock
add
lods
xchg
mov
jmp
or
pop
call
push
comiss
mov
enter
fs
aad
and
xor
dec
jb
sbb
les
(bad)
and
aas
fld
cmps
mov
(bad)
(bad)
lods
in
or
popa
repnz
bound
sbb
sub
test
pop
adc
and
sbb
mov
jecxz
in
popf
or
rol
lds
(bad)
repnz
xchg
xor
enter
pop
mov
(bad)
mov
nop
sbb
push
imul
(bad)
(bad)
jmp
push
mov
xor
add
xor
add
mov
add
add
add
call
add
fcom
add
add
push
rcl
fld
aad
mov
mov
jl
(bad)
xlat
ja
pusha
push
(bad)
clc
jmp
(bad)
sbb
and
imul
ds
in
or
retf
in
sar
add
out
mov
leave
adc
leave
retf
adc
inc
sahf
xchg
mov
cmp
push
fisttp
and
xor
mov
repnz
scas
mov
mov
ret
dec
leave
ds
or
shl
nop
xchg
mov
addr16
adc
cwde
cmp
cli
test
mov
sub
loop
jl
shl
adc
icebp
cmp
nop
dec
pushf
fnstsw
jno
push
int
cmp
sub
push
add
inc
enter
push
sub
in
sub
xchg
push
mov
das
xchg
dec
push
(bad)
gs
mov
int
and
test
cmps
sbb
(bad)
xor
call
adc
add
adc
test
fstp
lods
call
lock
dec
mov
pop
ins
clc
popf
fcmovu
and
jb
fxch
int3
pushf
jns
adc
pop
test
jns
lods
dec
mov
xchg
lods
test
mov
pop
int
mov
mov
pop
and
retf
movs
and
shr
sti
or
mov
mov
xchg
sub
aaa
xchg
push
call
add
dec
inc
xor
clc
push
daa
(bad)
xchg
mov
sub
(bad)
movsx
sti
lods
stos
pop
scas
xchg
sub
or
out
(bad)
xchg
mov
stos
arpl
dec
mov
mov
in
cld
into
or
inc
out
sbb
mov
jmp
mov
test
and
sub
(bad)
in
shr
mov
jg
xor
ds
stos
sbb
int3
fs
bound
xchg
int
sbb
mov
sbb
cmp
aam
pop
jle
fsubr
adc
ds
mov
xor
ins
jecxz
lea
or
in
mov
bound
and
(bad)
xor
and
gs
int3
and
xchg
test
repnz
in
mov
push
mov
movs
cmp
mov
cmp
gs
push
cs
daa
pop
outs
xor
jp
leave
jae
add
cwde
mov
lods
pop
xchg
dec
jg
inc
xchg
mov
addr16
out
cli
test
pusha
adc
movs
jecxz
sub
sbb
sub
sub
(bad)
arpl
jle
pop
arpl
add
retf
ins
jg
add
push
daa
xchg
call
gs
xor
xchg
out
jecxz
in
dec
daa
mov
into
dec
push
pop
sti
enter
mov
scas
fcomp
inc
rcr
mov
dec
cmps
es
mov
jbe
dec
push
pop
adc
mov
mov
push
adc
xchg
pop
or
pop
sub
addr16
icebp
cmp
ds
jno
lods
xor
pushf
(bad)
add
imul
nop
inc
out
out
xchg
mov
mov
xchg
xchg
gs
imul
push
inc
inc
aad
cmp
xlat
fild
shr
dec
mov
xor
jl
cld
lahf
add
fldcw
sbb
mov
inc
cmps
call
xchg
jge
mov
xchg
cmc
ss
mov
xchg
pushf
inc
(bad)
mov
bnd
cmps
xchg
lahf
jecxz
jle
(bad)
ss
adc
mov
in
arpl
ss
faddp
into
xchg
loopne
(bad)
fld
sbb
fcomi
into
jne
sub
cdq
in
fwait
xchg
mov
jp
sbb
dec
sbb
cmp
and
pop
sbb
xchg
jo
shl
scas
pop
loop
repz
(bad)
fsubr
sub
(bad)
loope
shl
pop
xchg
shl
cs
ret
add
shr
sub
mov
pop
dec
jns
jl
pop
pop
ins
adc
jo
lea
lds
jge
loop
xor
mov
(bad)
les
cli
retf
(bad)
je
or
xlat
out
inc
cwde
outs
sub
imul
pop
mov
leave
and
or
es
jge
stc
loop
jmp
push
sti
sar
lahf
adc
pushf
xchg
or
push
mov
lods
data16
pop
push
xchg
(bad)
(bad)
jnp
popa
stos
xor
add
out
adc
ret
xchg
xchg
jb
pop
inc
ins
push
frstor
cmp
and
nop
test
sbb
leave
call
inc
push
dec
imul
push
xchg
adc
retf
out
push
sbb
push
inc
push
addr16
sar
loopne
imul
ret
jmp
out
scas
fist
mov
aas
add
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xlat
sub
ss
sub
add
push
xchg
add
pop
add
lock
add
lock
lock
add
sub
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
sbb
and
add
xchg
mov
add
cmp
add
push
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
aad
popf
jl
call
outs
(bad)
fwait
adc
rcr
cwde
ds
sbb
jo
jmp
pushf
nop
movs
dec
adc
pop
sahf
or
adc
ds
add
fbstp
inc
ret
sub
xor
mov
or
rcl
add
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
(bad)
(bad)
(bad)
push
adc
lock
(bad)
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
icebp
pop
pop
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
and
xor
test
lock
(bad)
jmp
add
lock
add
lock
add
lock
add
add
add
mov
rcr
and
(bad)
(bad)
push
movs
add
lock
add
lock
add
mov
add
lock
in
adc
imul
mov
dec
sahf
or
pop
or
push
sub
jmp
iret
pop
fnstcw
retf
sbb
adc
call
and
ror
imul
(bad)
mov
or
cmp
mov
popa
adc
iret
loop
xlat
push
mov
jb
sub
mov
ja
mov
imul
stos
inc
cmp
(bad)
(bad)
(bad)
jmp
scas
rol
add
lock
and
lock
add
add
add
push
add
lock
and
inc
mov
jo
popa
and
mov
mov
pusha
sti
ss
stc
cld
(bad)
push
push
cmc
jns
das
inc
cwde
mov
loopne
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
test
mov
add
add
push
enter
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
add
pop
xor
and
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
ss
aad
add
lock
add
cmp
(bad)
(bad)
jmp
retf
js
(bad)
or
js
es
sar
(bad)
call
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
dec
arpl
add
lock
add
mov
(bad)
fst
(bad)
(bad)
(bad)
cmp
add
lock
add
imul
add
imul
adc
sar
(bad)
push
add
lock
add
lock
test
in
loope
add
xor
xor
mov
mov
and
hlt
adc
retf
outs
fst
xchg
cmp
shl
pop
inc
sbb
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmc
scas
pop
sub
sub
cmp
fs
pop
scas
fcomp
sbb
pop
mov
mov
sub
jbe
scas
pusha
mov
mov
jo
jae
jnp
or
mov
mov
pushf
inc
inc
es
add
stc
call
sbb
and
clc
cmp
repnz
pop
cli
mov
inc
rol
jbe
adc
scas
push
and
sti
sbb
jne
mov
push
(bad)
mov
movs
fadd
push
fldcw
mov
iret
dec
aad
mov
pusha
dec
add
lock
(bad)
(bad)
dec
dec
push
xchg
ins
sub
lock
(bad)
push
xchg
add
add
add
int3
fild
add
add
xor
add
add
add
pop
add
adc
sub
icebp
rcr
retf
sbb
test
and
inc
fs
retf
(bad)
xchg
and
cmp
enter
add
test
xor
cmp
jl
pusha
ds
cmp
cdq
cmps
mov
inc
das
push
jmp
mov
sbb
mov
(bad)
pop
fadd
cld
sti
xchg
push
shr
jmp
cmps
repz
bound
lock
sbb
and
add
lock
adc
scas
scas
daa
inc
jb
inc
pusha
outs
scas
in
loop
inc
and
pop
adc
(bad)
jns
test
neg
jle
rcr
and
mov
push
inc
call
add
icebp
jo
sbb
pusha
sbb
not
push
mov
xchg
vpunpckhdq
dec
mov
mov
fwait
xchg
cmps
xchg
mov
add
mov
popf
shl
dec
or
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
daa
scas
fs
fiadd
call
add
mov
shl
xchg
sbb
in
sbb
push
gs
out
cmp
push
or
mov
jle
icebp
sti
fwait
and
jmp
iret
pop
push
mov
popf
in
pusha
cmp
cs
ja
inc
push
xchg
int
int
push
imul
sbb
jo
dec
add
pop
mov
arpl
inc
inc
add
fwait
push
mov
imul
lock
add
cmc
cs
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
je
div
add
(bad)
(bad)
(bad)
inc
lods
jecxz
stos
xchg
arpl
sar
(bad)
(bad)
cmp
add
lock
inc
rcr
icebp
test
(bad)
(bad)
call
push
lock
add
inc
add
lock
cld
xchg
sub
(bad)
xor
mov
jecxz
aaa
jecxz
sbb
push
jnp
pusha
nop
sbb
ins
fild
xchg
jp
inc
lock
lds
lock
add
adc
mov
lock
xor
mov
in
stos
mov
mov
mov
outs
and
jg
xchg
inc
retf
sbb
cli
cwde
mov
mov
jmp
addr16
adc
jnp
fnstenv
push
idiv
leave
repnz
pop
mov
stos
sub
lock
add
xor
cmp
into
dec
mov
dec
mov
dec
mov
ja
push
pop
push
test
dec
mov
mov
mov
fcom
push
popa
lds
jecxz
fstp
sbb
jo
jbe
mov
das
ds
cli
jl
sbb
rcl
or
xchg
jnp
mov
xlat
cmp
bound
xor
push
das
dec
mov
inc
stc
ins
jne
inc
ror
repz
leave
stos
cmp
add
(bad)
(bad)
(bad)
jmp
mov
sub
arpl
add
sar
(bad)
dec
mov
push
push
sub
or
pop
out
pusha
cmp
push
xchg
bound
sahf
fs
mov
test
daa
jno
cmp
xchg
stc
xchg
mov
pop
pop
and
inc
and
jae
pop
test
adc
psubsw
or
or
xchg
ds
test
loopne
jmp
xor
popa
mov
push
mov
stos
invd
pop
loop
xchg
adc
sbb
lods
repz
dec
dec
je
push
fnstsw
pushf
or
stc
popf
xor
inc
jnp
xor
xor
les
add
sub
add
jmp
jmp
sub
xor
xor
sbb
or
fdivr
or
jno
jg
cmp
fadd
(bad)
xchg
lods
cwde
ds
mov
arpl
js
pop
out
aas
pop
mov
fsubr
daa
jge
fisub
retf
cld
cli
push
scas
test
or
push
inc
test
add
int3
sbb
sar
ret
fdiv
cmps
test
add
test
add
sldt
adc
xor
movs
and
mov
js
cmp
adc
xor
clc
aam
call
and
sub
aas
ja
add
pop
add
xor
lock
scas
shl
stos
dec
inc
clc
fs
test
fmul
leave
sub
rcr
retf
xchg
sbb
xchg
fdivr
jmp
mov
push
add
lock
add
or
add
(bad)
(bad)
(bad)
call
push
popa
push
jno
fwait
sar
(bad)
call
add
jo
add
inc
(bad)
(bad)
push
jmp
push
jge
add
mov
mov
pop
add
mov
xor
test
lock
dec
dec
jge
repnz
repnz
(bad)
(bad)
dec
aam
push
or
inc
add
lock
(bad)
inc
add
add
add
add
add
fwait
test
cmp
dec
push
fstp
add
(bad)
es
push
pushf
addr16
xlat
fwait
dec
int
fcom
inc
cwde
or
inc
fdivr
aas
sbb
(bad)
pop
push
jmp
out
add
mov
add
push
add
xor
add
(bad)
(bad)
(bad)
dec
jb
push
dec
lock
(bad)
(bad)
fiadd
add
add
add
and
add
(bad)
(bad)
(bad)
push
lds
sar
(bad)
push
movs
add
(bad)
stc
out
lock
add
lock
das
add
pop
add
lock
mov
xchg
arpl
loop
xchg
jmp
cmp
xor
cdq
lods
div
add
xor
lea
mov
push
push
ror
mov
inc
xchg
(bad)
stc
test
pop
stos
pop
xor
cs
(bad)
(bad)
ins
or
(bad)
jne
dec
cmp
xor
cmps
js
stos
hlt
out
fisub
loop
cmp
adc
mov
ja
xlat
hlt
push
jecxz
in
mov
sbb
cdq
cmp
sub
jl
in
jno
(bad)
xor
pushf
(bad)
shl
rol
or
daa
test
and
int
add
xor
movs
adc
das
and
mov
in
push
sub
sub
fisttp
or
aad
sbb
cli
dec
fxch
call
push
xchg
ret
mov
cmp
pop
add
sub
(bad)
fidivr
sbb
lock
fwait
pop
ret
push
pop
pop
jmp
fsubr
ret
jne
xchg
sub
cwde
(bad)
adc
jl
adc
lea
cs
lock
add
sahf
mov
test
sar
(bad)
dec
fiadd
lock
add
jg
jb
das
jmp
cmp
jne
cmps
sbb
dec
ds
dec
das
sub
pop
loopne
push
push
test
clc
inc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
mov
add
lock
cmp
lock
pop
inc
aam
(bad)
enter
xlat
mov
and
fcomp
aam
stos
movs
cmp
cmps
mov
neg
inc
push
inc
(bad)
test
and
xchg
mov
sbb
xor
retf
lods
sub
arpl
xor
sbb
pushf
(bad)
pop
xor
and
out
jns
and
add
ja
or
adc
dec
rcl
mov
neg
or
sbb
fcom
xlat
jmp
mov
movs
aam
scas
xor
sbb
mov
pop
shl
push
mov
ret
pop
ja
dec
icebp
or
push
pop
unpckhps
inc
mov
and
jl
xchg
lea
fadd
mov
push
pop
sub
inc
or
cmp
dec
add
dec
add
add
sar
(bad)
inc
add
lock
add
lock
add
lock
jg
add
add
js
xor
adc
adc
mov
and
sbb
aaa
sub
cmps
test
dec
xchg
dec
add
mov
aas
test
jge
add
(bad)
(bad)
(bad)
dec
out
mov
fmul
pop
pop
cmp
(bad)
inc
and
idiv
add
lahf
das
fstp
push
stc
cmc
inc
ret
dec
std
lea
into
cmp
cmps
adc
mov
lds
dec
movs
(bad)
les
xlat
fwait
gs
sbb
ja
shl
add
pop
nop
push
mov
sbb
sahf
push
jae
div
push
pop
add
call
and
enter
retf
lahf
movs
nop
aad
xor
jbe
and
ret
mov
mov
jo
clc
test
adc
loope
xor
mov
cs
xor
mov
lock
and
nop
pop
shl
(bad)
push
push
rcr
add
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
xor
add
lock
dec
add
add
lock
(bad)
(bad)
inc
cmc
sbb
add
jo
add
sar
(bad)
call
ror
adc
mov
daa
(bad)
sbb
and
fist
or
les
scas
jb
ds
enter
or
push
adc
ins
and
xchg
mul
add
(bad)
call
(bad)
es
(bad)
push
push
xchg
fwait
mov
sahf
in
cmova
movs
aam
in
sub
jb
jge
cdq
push
test
push
lahf
cmp
sub
in
sub
jecxz
mov
xor
dec
lds
jmp
stos
cmp
cmp
push
push
cmp
adc
lock
and
mov
into
mov
imul
aam
rcr
imul
and
mov
enter
mov
mov
add
lock
(bad)
(bad)
(bad)
cmp
push
cwde
adc
sub
inc
add
add
(bad)
dec
add
(bad)
(bad)
(bad)
push
fwait
adc
add
sar
(bad)
(bad)
cmp
add
add
add
sahf
push
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
pop
sbb
sti
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
push
aam
mov
add
lock
lock
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jl
test
xor
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
jnp
push
and
add
sti
inc
add
loope
push
(bad)
ror
pop
lea
(bad)
push
hlt
push
mov
jecxz
inc
cs
mov
fisub
pop
cmp
popa
hlt
mov
mov
sub
add
lock
push
mov
cmps
ret
(bad)
(bad)
(bad)
out
jb
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
cmp
adc
das
movs
xor
mov
push
jmp
mov
xchg
jl
mov
cmps
jb
outs
mov
push
movs
push
sub
and
movlps
clc
push
jbe
ja
cwde
xchg
sub
(bad)
repnz
(bad)
xor
gs
neg
sub
mov
adc
add
mov
mov
stos
mov
aad
sbb
jge
in
xchg
jge
and
into
push
xchg
inc
sub
cmps
add
add
add
lds
stc
jecxz
mov
mov
in
cmps
sti
push
add
xor
fidiv
pop
adc
or
inc
sub
(bad)
jae
fcom
push
lea
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
and
imul
add
sbb
add
lods
hlt
ins
loope
mov
mov
lahf
loopne
mov
jl
ss
mov
retf
cmp
dec
scas
xlat
add
int
and
popf
inc
mov
sub
jp
cmp
cmps
clc
pop
push
mov
stos
out
sbb
out
js
inc
lds
arpl
lds
cmp
popa
add
jo
push
std
inc
pop
jecxz
pop
jbe
cli
mov
dec
sub
addr16
sub
inc
and
scas
or
push
pop
pop
or
iret
adc
int3
xor
pop
push
icebp
imul
add
jne
rcl
cmp
shl
mov
mov
call
or
loope
cmps
push
jae
fsubr
dec
test
popf
add
(bad)
fcom
les
enter
jb
mov
inc
sub
push
je
xor
mov
cmps
dec
out
sahf
lods
xor
xor
adc
sbb
jl
std
retf
mov
sbb
icebp
test
add
int3
mov
aas
add
inc
cmps
scas
sbb
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
std
fbld
stos
or
sub
xor
pop
mov
sub
add
pop
cmps
psubusw
nop
xchg
sti
sub
push
pop
int
shl
push
push
jmp
inc
or
es
pop
add
lock
cmp
jp
push
xchg
jne
call
jae
inc
(bad)
sar
mov
jle
xlat
mov
push
dec
popa
loope
enter
push
dec
add
push
add
lock
xor
add
into
stos
dec
ss
arpl
pop
fbld
and
shl
and
pop
pushf
or
inc
pop
jno
cmc
sub
pop
hlt
xchg
scas
jbe
xor
push
test
mov
mov
jle
rcl
int3
or
das
imul
aam
push
mov
mov
mov
jno
arpl
add
and
(bad)
clc
and
stc
sub
fcom
pop
xchg
jl
push
outs
in
and
add
out
and
aad
or
add
and
adc
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
push
in
repnz
call
inc
pop
and
cld
inc
adc
mov
inc
sub
xchg
add
inc
or
adc
arpl
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
aad
push
rdmsr
jmp
push
add
arpl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
addr16
scas
pop
movs
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jae
sub
adc
ficomp
cmp
push
or
jno
add
xchg
enter
xchg
add
xor
cld
pop
mov
iret
inc
loop
sbb
inc
inc
xchg
ins
add
add
aad
push
dec
push
js
movs
in
ja
outs
outs
retf
sub
cmp
(bad)
jno
popf
gs
call
sbb
adc
jmp
dec
adc
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jle
cmps
dec
add
lock
add
adc
mov
fdiv
inc
sar
(bad)
call
add
lock
add
lock
enter
inc
push
stc
cmc
fcmove
mov
js
repnz
ss
cdq
mov
push
jle
mov
pop
out
stos
call
add
push
mov
dec
add
mov
add
mov
dec
xor
push
adc
add
jmp
leave
retf
adc
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
shl
xchg
cld
xor
add
lock
pop
add
jle
call
lods
mov
xchg
call
pop
enter
xor
fmul
es
inc
xchg
and
or
sbb
mov
lock
add
add
add
ret
jnp
out
jnp
push
sar
(bad)
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
pop
cs
add
add
call
lock
mov
or
sbb
push
cwde
retw
leave
js
mov
xchg
jb
push
mov
push
sbb
adc
xor
out
in
sbb
or
ds
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
popa
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
cmps
pop
add
lock
pop
add
add
ins
mov
and
sbb
fs
mov
sub
dec
jne
jge
rcl
popf
fnstcw
mov
stos
js
inc
movs
add
out
pop
cmp
cwde
dec
cs
mov
cmp
add
(bad)
(bad)
(bad)
(bad)
sti
push
xor
add
sar
(bad)
(bad)
fstp
add
lock
cs
dec
aam
mov
adc
movs
imul
call
push
adc
push
cmp
test
mov
adc
jle
retf
cwde
lods
or
into
inc
add
loope
shr
sahf
cs
adc
(bad)
into
repnz
cmc
std
mov
inc
pop
mov
aas
and
xchg
fild
jb
in
mov
aad
fistp
dec
mov
add
imul
push
xor
shr
inc
fist
mov
pop
or
jl
out
pop
push
je
jmp
jp
adc
dec
in
mov
js
scas
cmp
add
adc
jmp
add
jmp
mov
or
repz
cmp
pop
push
call
xor
std
sub
sbb
ja
sub
push
pop
and
sti
mov
push
jle
xchg
adc
mov
fmul
int3
mov
test
out
push
inc
and
add
lock
(bad)
(bad)
(bad)
cmp
mov
jmp
pop
add
sar
(bad)
inc
iret
data16
(bad)
push
jbe
imul
cmps
sub
dec
(bad)
cld
mov
ds
jmp
sbb
std
fnop
(bad)
pop
push
lds
inc
clc
push
inc
in
add
scas
xor
cwde
add
(bad)
xchg
inc
mov
shr
xchg
mov
sub
jl
int3
dec
or
push
xchg
mov
xor
mov
retf
jbe
xchg
dec
inc
mov
leave
jno
sub
loope
xchg
pop
push
adc
lea
mov
loope
inc
stc
scas
jmp
movs
aas
sahf
shr
enter
fstp
mov
dec
or
loopne
out
pop
ins
jg
js
cmp
jns
popa
mov
cmp
mov
jnp
adc
test
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
xchg
mov
call
sbb
ins
popf
cmp
mov
repz
inc
(bad)
cmp
outs
out
mov
enter
mov
xor
(bad)
adc
push
pop
(bad)
and
cmps
jmp
and
push
leave
out
xor
std
jmp
fld
(bad)
loopne
sti
clc
ds
and
jg
and
xchg
xchg
inc
add
shl
dec
sub
jmp
movs
push
sub
lds
mov
inc
adc
inc
mov
aam
add
lock
add
clc
aas
into
ins
fadd
jbe
sar
(bad)
call
or
lock
add
push
add
lock
add
and
add
lock
add
sbb
add
or
add
add
add
sldt
lock
rol
lock
in
add
or
add
inc
in
add
cli
xchg
ret
push
mov
je
or
sub
mov
cmp
cmp
fsub
jbe
pop
dec
(bad)
mov
popa
xchg
hlt
adc
xchg
ins
sbb
aaa
sub
lds
(bad)
(bad)
(bad)
push
mov
scas
shl
lock
(bad)
call
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
push
cmps
xor
add
mov
add
inc
add
add
fnstenv
add
push
add
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jg
mov
bound
lock
add
add
add
lds
adc
add
lock
push
push
sar
mov
push
push
xchg
xchg
sub
sub
(bad)
(bad)
(bad)
jmp
lock
add
sar
(bad)
dec
adc
clc
xor
int
enter
lods
and
and
sbb
mov
and
pop
xlat
test
cld
pop
inc
cmp
dec
push
xchg
mov
add
mov
and
int3
icebp
(bad)
movs
cmp
pop
cli
and
adc
dec
fidivr
pop
test
int
stc
dec
fwait
dec
retf
sub
add
out
out
inc
jae
jbe
jns
add
das
sbb
sar
int3
mov
fs
push
pop
fist
lahf
jle
sub
dec
repz
mov
jge
cmp
mov
or
ret
mov
out
cdq
pushf
add
sti
es
sbb
loopne
and
lods
and
cmp
int3
mov
mov
sbb
pop
dec
lea
xchg
inc
xchg
sbb
cmps
inc
fld
fisubr
movsx
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ins
(bad)
out
cdq
mov
lock
jge
dec
aad
int3
popa
xchg
dec
and
and
sbb
stos
fldcw
push
fidivr
lea
xchg
cmp
and
inc
das
add
cmp
jmp
sub
and
jno
jmp
neg
sub
jmp
lds
popf
add
lods
int
sub
fiadd
jmp
xor
(bad)
(bad)
(bad)
(bad)
call
add
xchg
xor
add
adc
add
xchg
dec
xchg
fs
inc
repnz
ja
push
mov
test
pop
fistp
outs
ss
(bad)
or
jbe
aas
leave
nop
loop
and
add
(bad)
(bad)
(bad)
jmp
retf
out
pop
test
add
add
(bad)
dec
add
sar
sbb
add
retf
push
fadd
add
sar
(bad)
dec
scas
add
lock
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
adc
xchg
sub
add
(bad)
imul
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
push
call
mov
mov
lock
loopne
or
shr
lea
cmp
rcl
inc
jmp
iret
(bad)
out
into
jb
dec
and
jecxz
push
jnp
lea
mov
stos
sub
mov
xor
shl
out
xchg
out
push
arpl
add
add
add
mov
add
add
popa
imul
lock
sub
dec
(bad)
pop
movs
sub
enter
jg
sub
mov
cmps
jle
sub
(bad)
(bad)
jmp
js
rep
add
sar
(bad)
(bad)
sti
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
imul
mov
cmp
enter
inc
xor
dec
dec
in
add
cmps
push
daa
xor
pop
mov
adc
stos
mov
push
mov
add
(bad)
(bad)
(bad)
inc
push
out
loope
add
imul
inc
add
lock
add
lock
(bad)
(bad)
inc
in
es
stos
repz
(bad)
inc
mov
lock
(bad)
(bad)
inc
call
daa
mov
nop
mov
rcr
hlt
pushf
hlt
(bad)
jg
daa
adc
mov
(bad)
scas
gs
scas
mov
or
mov
mov
leave
cwde
cmp
cmp
or
lds
inc
test
sub
mov
and
xor
add
(bad)
(bad)
(bad)
jmp
ds
cmp
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
loopne
mov
add
push
add
(bad)
add
or
add
inc
add
lock
add
jo
or
sar
(bad)
dec
add
lock
add
lock
add
add
add
adc
add
(bad)
(bad)
(bad)
jmp
retf
(bad)
fidiv
(bad)
(bad)
dec
add
mov
add
jmp
lock
add
lock
add
push
dec
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
lahf
pop
xor
xchg
ficom
add
inc
imul
mov
dec
pop
push
movs
pop
in
mov
lea
aaa
push
out
add
ins
in
mul
sub
adc
out
(bad)
xchg
mov
loop
call
es
leave
das
inc
out
jno
hlt
mov
daa
inc
inc
je
pusha
mov
call
daa
popf
aaa
cmp
sub
les
std
aaa
pop
scas
les
cwde
pop
mov
push
adc
movs
jo
stos
movs
cmc
pop
cmps
add
lock
mov
sub
lahf
add
lock
(bad)
(bad)
(bad)
fst
int3
mov
ins
add
sar
(bad)
jmp
xchg
push
ja
js
in
fiadd
mov
stos
add
sub
leave
sbb
fistp
cld
push
jnp
xchg
cli
popf
lods
adc
cmp
scas
or
dec
add
pop
dec
stc
dec
fucomp
fstp
jno
mov
fistp
or
push
ds
scas
retf
popf
aam
and
or
sbb
add
(bad)
jb
inc
add
inc
icebp
mov
aas
xor
aaa
mov
iret
inc
dec
stos
loopne
and
repz
xor
bnd
mov
ret
pop
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
outs
pop
push
jns
sar
push
outs
add
cmp
add
add
add
in
xor
mov
pop
sar
(bad)
(bad)
jmp
add
lock
add
push
sti
lea
cmps
adc
mov
mul
mov
fist
fmul
scas
pop
pop
pop
cs
jmp
ss
jno
mov
into
ins
inc
aam
stos
xchg
lahf
push
stos
lahf
imul
add
pusha
into
dec
das
adc
add
(bad)
(bad)
(bad)
push
add
add
lock
(bad)
jmp
mov
inc
mov
pusha
test
dec
push
je
popf
stos
sbb
inc
test
xor
lahf
outs
call
add
fmul
dec
add
adc
test
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
xor
add
push
jb
lock
addr16
and
stos
mov
push
outs
std
arpl
xor
adc
and
inc
mov
xchg
shr
cmp
dec
inc
add
lock
(bad)
(bad)
call
xlat
fist
jae
lock
(bad)
push
aam
lock
add
jns
add
push
into
icebp
test
mov
lea
ds
iret
jl
loope
imul
jle
leave
xchg
push
push
cmps
mov
mov
aas
mov
cli
sub
pop
dec
stc
jg
pop
dec
pop
jnp
jmp
call
cmp
popa
inc
jb
mov
pop
push
call
je
fxch
cmp
idiv
xor
push
ins
xchg
mov
mov
jmp
dec
leave
mov
daa
in
aam
xchg
fmul
ja
xor
stos
pop
jecxz
cmp
leave
in
call
xor
add
(bad)
(bad)
(bad)
inc
adc
inc
(bad)
in
sub
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
mov
mov
shl
pop
push
mov
ins
or
inc
sbb
mov
mov
jmp
pop
dec
rcr
lahf
idiv
xchg
mov
icebp
xchg
push
outs
retf
jecxz
add
lock
adc
out
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
add
push
lock
popa
jne
sub
xlat
xchg
fadd
stc
inc
pusha
xchg
in
inc
cdq
jmp
js
add
pop
and
out
mov
out
stc
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cli
mov
add
lock
jbe
lock
jbe
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
sub
aad
push
xchg
dec
add
add
sar
(bad)
dec
ret
add
lock
add
lock
adc
popf
test
jmp
push
call
outs
(bad)
test
stos
inc
stc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
lock
add
dec
ja
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
aaa
add
lock
(bad)
(bad)
call
mov
add
sar
(bad)
jmp
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
jne
sbb
xchg
push
cmp
add
ds
lock
add
lock
add
mov
repz
adc
(bad)
call
fld
lock
add
lock
lock
add
push
add
and
loope
lock
add
mov
xor
jne
mov
int3
lock
mov
and
add
adc
jecxz
hlt
test
dec
jl
mov
add
xor
xor
or
fiadd
jns
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
push
retf
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
mov
lock
jns
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
sbb
cmp
add
add
lock
mov
or
enter
xchg
pop
mov
cmp
jmp
cmc
mov
hlt
loopne
push
sbb
xor
mov
mov
dec
mov
jae
jae
fs
mov
lods
retf
test
push
movs
sub
dec
mov
(bad)
fdivp
sbb
cmp
out
add
xchg
sti
ret
sti
stos
mov
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
popa
sbb
mov
add
lock
jnp
lock
add
or
add
or
lock
cmp
jg
lods
test
mov
sbb
dec
fwait
and
cli
ds
mov
retf
sbb
sbb
jb
sub
pop
cdq
xlat
scas
and
sub
mov
xchg
and
add
(bad)
(bad)
(bad)
call
push
popf
sub
add
sar
(bad)
(bad)
jmp
and
dec
shl
popa
in
push
pop
push
cld
push
jns
pop
test
ja
jle
daa
xlat
pushf
pop
xchg
add
mov
popa
push
mov
jmp
xchg
xchg
imul
rcl
mov
movs
test
sbb
cmc
dec
adc
fxch
scas
aad
test
adc
fsubr
fisubr
enter
jmp
ins
sar
xchg
inc
push
call
or
add
test
pop
std
repnz
cmp
inc
lahf
sbb
jno
and
into
loope
icebp
xchg
inc
arpl
icebp
mov
cmp
jmp
ror
in
pop
int3
xor
rol
and
movs
aas
pop
and
mov
cmp
lods
scas
enter
xor
shr
cld
sub
and
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
fist
ins
sub
cmc
ds
and
das
mov
test
fdivr
loope
jno
rcr
jne
xor
movs
outs
int3
xor
scas
pop
or
and
add
add
dec
xchg
cld
mov
mov
(bad)
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
jl
sub
jle
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
sbb
jle
lock
lock
add
xchg
pop
mov
mov
es
push
ret
retf
jno
push
xchg
xchg
fst
outs
inc
mov
xor
xchg
hlt
(bad)
out
mov
rcl
adc
ins
xor
not
mov
sbb
leave
fcmovu
inc
cmps
pop
mov
call
(bad)
dec
dec
push
xchg
ins
add
lock
add
cmp
(bad)
(bad)
jmp
push
daa
sti
movs
push
aaa
jmp
push
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
stos
aaa
add
lock
(bad)
(bad)
(bad)
jmp
pop
add
add
dec
test
sbb
push
int3
jnp
mov
ja
fs
paddsw
rcl
fs
cs
sbb
or
sbb
adc
add
cdq
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
fwait
sbb
cmp
and
shl
(bad)
inc
jl
push
dec
sti
es
xor
retf
or
shl
test
out
pop
outs
push
aam
retf
pop
fldcw
sbb
(bad)
repz
mov
pop
mov
mov
lods
rol
enter
loopne
enter
ret
mov
cmp
push
cmp
add
jmp
mov
xchg
sbb
xor
xchg
jnp
dec
add
mov
(bad)
(bad)
(bad)
jmp
fimul
xor
add
mov
push
sbb
push
test
cmp
(bad)
lock
sti
dec
stc
repnz
fst
inc
jg
jne
adc
push
movs
outs
xor
push
jae
push
and
add
adc
pop
test
loopne
and
or
push
lods
ror
add
lock
adc
in
add
jo
add
inc
inc
add
add
add
inc
add
lock
add
sbb
or
(bad)
dec
mov
lock
add
lock
adc
adc
mov
pop
fdivp
or
into
push
out
lds
mov
jecxz
test
pop
std
int3
mov
dec
clc
stos
or
aas
mov
pop
jg
fadd
fdivr
std
nop
call
cmps
out
(bad)
shr
sar
push
inc
ja
bound
ret
ss
pop
cmp
jecxz
test
hlt
test
sahf
das
(bad)
in
jnp
jnp
test
pop
in
pop
xchg
or
movs
aad
xor
repz
xlat
pop
(bad)
jg
mov
pop
cmp
jbe
push
and
cmps
mov
stc
ins
mov
loop
sbb
daa
shl
pop
out
add
popa
add
in
lods
inc
aad
(bad)
mov
repnz
dec
or
icebp
mov
ins
inc
pop
mov
addr16
add
inc
in
xor
xor
sub
sub
lahf
dec
and
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
test
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
aad
xor
daa
push
ins
inc
push
loope
sub
pop
mov
or
jno
loop
aam
ja
xor
pop
mov
mov
push
je
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
lock
add
or
lock
add
add
add
imul
add
or
add
(bad)
(bad)
(bad)
(bad)
jg
scas
mov
sar
(bad)
inc
add
inc
leave
add
inc
nop
test
xchg
adc
pop
and
nop
in
in
push
cmc
mov
sar
or
jo
test
xchg
aas
scas
fsub
push
jns
pushf
in
pop
xor
cmp
sub
and
stos
scas
cmp
dec
sti
mov
(bad)
(bad)
(bad)
inc
(bad)
or
in
pushf
sbb
add
lock
test
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jb
jmp
add
or
ret
cwde
mov
mov
(bad)
in
jecxz
jle
and
pop
ds
into
jno
aad
cmp
and
mov
loope
jmp
jo
adc
std
sbb
test
loop
jb
xchg
les
dec
xor
adc
jne
jg
pop
arpl
jbe
loopne
bound
mov
xor
call
out
cmp
add
add
fwait
clc
(bad)
movs
xlat
mov
mov
inc
pusha
popf
sub
fsubr
cmp
aas
sbb
int
jae
xchg
lock
fs
repnz
dec
fmul
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
std
sbb
inc
add
lock
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
aas
test
mov
add
(bad)
(bad)
(bad)
call
ins
sbb
mov
lock
(bad)
push
std
and
out
adc
add
lock
(bad)
(bad)
inc
out
or
ret
(bad)
(bad)
(bad)
cmp
mov
xor
add
lock
(bad)
dec
add
lock
add
pop
add
lock
test
cmps
stos
dec
dec
lds
xchg
mov
adc
jp
hlt
sub
inc
test
scas
call
icebp
dec
inc
add
je
aaa
dec
cwde
stc
std
pop
sbb
loop
(bad)
jae
mov
add
lock
sbb
lock
lock
loopne
imul
cmp
icebp
inc
mov
rol
xchg
cmc
jns
mov
mov
cmp
dec
inc
fldl2t
adc
arpl
or
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
daa
hlt
or
inc
aam
push
aaa
add
and
push
add
or
add
(bad)
add
add
add
jg
add
cmp
add
bound
add
(bad)
(bad)
(bad)
call
mov
pop
ins
mov
pop
pop
lock
(bad)
(bad)
sti
xchg
jo
je
(bad)
sahf
fld
shr
or
cmp
xor
xchg
mov
xchg
cmp
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jb
fsub
add
lock
xor
jne
scas
aad
xor
dec
retf
repz
hlt
cmp
fwait
xor
and
or
rep
ret
cmps
lahf
int
cmp
jle
outs
(bad)
jg
push
push
or
rcr
mov
push
mov
scas
xor
js
push
xchg
xchg
adc
and
push
sub
mov
ins
mov
cdq
clc
and
push
into
mov
daa
sbb
and
sbb
add
add
add
add
add
xor
add
add
add
add
add
in
add
add
add
add
add
jnp
lock
fisub
in
xchg
pop
icebp
int
gs
sbb
leave
xlat
mov
push
shl
movs
xchg
dec
adc
sub
leave
sldt
add
xlat
add
or
xchg
add
adc
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
cld
lock
xchg
scas
data16
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
cmp
dec
add
lock
xchg
add
out
out
hlt
das
fimul
cdq
dec
xlat
out
jo
test
lahf
push
mov
cld
mov
pop
outs
aas
mov
int3
dec
fidivr
jo
fist
jge
dec
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
and
xor
cmp
add
das
xchg
add
or
lock
add
add
add
push
jb
lock
add
aad
in
test
sar
test
fcmovnu
inc
rol
add
loope
sti
cmp
adc
mov
(bad)
mov
lds
fbstp
inc
or
mov
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
aaa
ins
(bad)
leave
xor
cmp
or
adc
xchg
and
(bad)
fisub
push
ds
cmp
sbb
sub
retf
xlat
add
lock
add
push
add
add
add
inc
aad
or
lea
sbb
sbb
test
push
add
cmps
and
jno
or
out
add
int3
inc
add
inc
xor
lahf
outs
rep
adc
inc
mov
arpl
cs
cmp
test
jns
jecxz
bound
or
aam
add
pop
imul
add
jmp
dec
rcr
rcl
cli
mov
pop
mov
aas
push
dec
cmp
mov
cld
lahf
jl
bound
call
sar
sar
fistp
frstor
loope
shr
inc
test
jns
cs
iret
loop
dec
mov
dec
sbb
call
push
mov
iret
ins
cli
sub
jp
dec
call
add
xchg
mov
aas
aad
mul
retf
js
stos
sbb
test
pop
enter
xor
sub
fwait
xchg
adc
mov
scas
nop
xchg
jb
sub
pop
jle
arpl
popa
pop
cmp
ds
sbb
imul
and
lea
outs
xchg
addr16
jg
ins
pusha
dec
jl
cwde
fiadd
add
lock
(bad)
dec
add
lock
add
lock
add
lock
dec
add
sbb
add
pop
xchg
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
push
cmp
add
add
leave
gs
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
call
adc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
push
in
repnz
call
xchg
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
cmp
push
xchg
and
add
mov
jmp
inc
mov
dec
xor
cmc
add
not
mov
jg
jmp
test
sbb
mov
adc
retf
hlt
push
scas
sub
mov
mov
xor
add
lock
add
mov
push
(bad)
call
rol
lock
add
mov
add
adc
add
lock
xor
lock
add
add
add
dec
jne
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
lds
fwait
pop
add
lock
add
push
add
and
push
add
or
lock
add
lock
inc
add
or
add
or
or
out
addr16
mov
or
pop
pop
push
mov
mov
aam
mov
test
jecxz
lds
push
ror
sub
es
cs
cwde
out
pop
cmp
mov
cmp
icebp
arpl
ins
and
sbb
add
sldt
adc
ret
push
gs
push
gs
push
add
adc
pop
add
add
add
add
add
or
add
mov
mov
lock
add
arpl
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
mov
inc
test
inc
add
lock
add
imul
xchg
cdq
stos
mov
jae
aam
push
popf
and
inc
xchg
push
cmp
cld
nop
in
sub
fdiv
add
pushf
test
pop
rcl
std
in
test
xor
push
imul
out
ss
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
inc
imul
mov
add
lock
add
cmp
sub
pop
sar
(bad)
push
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lahf
call
fild
lock
jmp
cdq
push
or
retf
or
gs
xchg
jle
push
enter
mov
lods
mov
int3
mov
cmp
ins
pop
fs
cmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
inc
add
lock
fwait
add
pop
fidiv
sar
adc
lock
dec
push
add
lock
add
cmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
aas
daa
ret
adc
add
add
add
add
push
add
lock
add
cs
add
nop
popf
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
mov
jmp
outs
(bad)
out
xor
xor
mov
lahf
lods
scas
and
push
or
sbb
adc
adc
sub
ror
dec
add
sub
sbb
jb
or
jmp
mov
pushf
cmp
retf
pop
ret
sub
pop
inc
jp
and
push
std
sar
and
adc
leave
push
mov
add
scas
and
addr16
xlat
fs
sub
push
cli
cdq
daa
jnp
adc
pop
or
scas
retf
mov
dec
and
add
add
add
inc
add
lock
add
or
(bad)
(bad)
call
test
mov
sar
(bad)
inc
add
mov
add
(bad)
(bad)
add
(bad)
add
add
add
addr16
add
add
add
icebp
xor
lock
adc
lock
adc
lock
add
int3
xchg
add
add
push
add
and
pop
cwde
loopne
fucom
xchg
int
xchg
ret
int3
fs
mov
ss
fstp
call
iret
sub
add
imul
mov
out
and
and
xor
add
add
add
add
add
add
add
cvtps2pd
adc
add
lock
add
call
and
(bad)
mov
add
test
add
add
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
dec
push
fiadd
dec
cmp
lahf
add
cmp
add
add
add
cmps
adc
add
(bad)
(bad)
fdiv
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
mov
xchg
lahf
add
fld
and
xchg
outs
or
dec
push
aam
(bad)
retf
push
and
int3
in
jl
sbb
mov
imul
mov
lss
call
pop
mov
pop
xor
sbb
xchg
sbb
in
push
xor
mov
xchg
xor
add
(bad)
(bad)
(bad)
(bad)
js
cmp
gs
push
and
add
sar
(bad)
(bad)
sti
cld
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
call
std
jecxz
dec
cmps
retf
outs
mov
rcr
scas
mov
ror
cmps
push
sub
pop
mov
cmp
(bad)
repz
call
push
ja
add
or
xor
sbb
jno
dec
in
or
nop
cmc
nop
enter
in
lock
add
jae
add
or
add
jae
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sar
push
push
mov
add
cmp
add
test
add
sub
add
(bad)
(bad)
(bad)
jmp
xchg
cli
movs
frstor
(bad)
jmp
add
add
add
std
xor
and
sar
(bad)
dec
add
lock
add
lock
add
sub
add
or
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
clc
out
imul
das
add
lock
(bad)
(bad)
inc
not
ins
lea
add
sar
(bad)
(bad)
std
fs
xchg
fisttp
int3
cmp
rol
and
ja
aas
push
lds
push
(bad)
sahf
cli
pop
xchg
into
cld
test
sub
xchg
inc
push
mov
jnp
out
iret
scas
push
out
push
out
pusha
mov
adc
cmp
dec
fnstenv
dec
jmp
inc
cs
arpl
inc
imul
and
mov
loope
adc
mov
fisttp
jecxz
jnp
retf
cmps
int3
lds
jb
adc
outs
mov
cs
aaa
dec
add
out
mov
aam
iret
ja
mov
out
fdiv
xor
in
xor
nop
repnz
jg
call
in
adc
cmp
cmp
dec
enter
fcomi
ds
push
stos
in
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jp
inc
mov
lock
cmps
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
retf
js
(bad)
or
js
add
lock
(bad)
(bad)
(bad)
cmp
enter
pop
sub
(bad)
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
loopne
fisubr
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
sbb
ss
fld
lock
add
dec
add
add
adc
add
(bad)
(bad)
(bad)
inc
int3
adc
push
push
(bad)
(bad)
call
add
rcl
(bad)
dec
cmps
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
je
js
hlt
stos
dec
arpl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
data16
add
(bad)
(bad)
(bad)
(bad)
clc
and
push
call
sar
(bad)
inc
add
add
add
lds
mov
(bad)
jmp
add
lock
add
lock
mov
pusha
pop
jp
ins
cmps
sub
sub
loopne
sbb
cs
clc
fwait
bound
std
(bad)
(bad)
mov
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
lods
jbe
add
lock
stos
add
push
inc
add
sbb
add
xor
add
add
add
cmp
mov
arpl
ficomp
and
mov
out
clc
cmps
or
add
jl
push
dec
xchg
into
je
mov
sar
mov
es
mov
xchg
sub
mov
xor
jmp
mov
push
retf
pop
ds
add
daa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
test
(bad)
adc
lock
cli
mov
cwde
ins
icebp
pop
push
loopne
ins
inc
fld
imul
adc
or
add
fisub
xlat
outs
xchg
in
mov
xor
shl
fs
or
jl
sti
sub
dec
push
fist
jns
add
mov
xor
imul
or
sbb
data16
cmps
inc
imul
int
call
jnp
sti
ins
push
xchg
in
mov
aaa
cdq
repz
call
mov
lock
add
pusha
add
lock
add
retf
mov
fwait
fs
(bad)
(bad)
aas
jmp
aaa
add
lock
add
lock
(bad)
(bad)
dec
inc
mov
inc
scas
add
sar
(bad)
jmp
mov
icebp
or
add
add
sar
(bad)
push
add
lock
add
lock
add
lock
jnp
lock
add
xchg
frstor
jb
mov
mov
jmp
or
pop
adc
(bad)
and
adc
or
adc
sbb
test
add
lock
(bad)
(bad)
jmp
or
mov
lock
(bad)
jmp
imul
lock
add
adc
pop
jle
inc
jmp
mov
push
pop
lods
mov
add
out
in
pushf
in
mov
aas
ins
cli
pop
sbb
mov
dec
popa
ja
mov
and
or
sahf
loopne
xchg
mov
adc
sbb
sti
rol
shl
adc
pop
mov
xchg
in
adc
mov
push
mov
aas
popa
mov
jecxz
xchg
fdiv
(bad)
lock
and
lea
xlat
pop
aad
cmp
mov
out
movs
mov
add
or
add
rol
mov
scas
push
cmps
mul
add
inc
xor
fs
ss
lods
aas
lods
add
lock
add
lock
add
(bad)
(bad)
(bad)
dec
cmp
cmp
enter
mov
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
div
xor
inc
jno
add
lock
add
sbb
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
or
lock
lock
add
xchg
rol
lock
ss
add
add
(bad)
(bad)
(bad)
(bad)
mov
dec
adc
push
mov
lock
mov
mov
es
clc
jb
sahf
adc
mov
idiv
xchg
sub
sbb
(bad)
mov
sub
dec
(bad)
int3
rcr
cmp
lds
or
sub
aaa
push
loope
stos
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xchg
xlat
fadd
lock
add
dec
add
lock
(bad)
(bad)
(bad)
cmp
(bad)
cld
sub
(bad)
(bad)
dec
add
and
add
push
add
lock
(bad)
(bad)
call
leave
popf
sbb
add
sar
(bad)
jmp
add
add
add
push
inc
add
push
lods
test
mov
inc
ss
pop
dec
xor
inc
adc
cmp
and
xchg
xor
shr
clc
mov
inc
cmp
adc
dec
dec
stos
mov
or
push
lahf
cmc
pop
rcr
inc
add
lock
(bad)
(bad)
jmp
jle
adc
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
or
add
inc
mov
jge
call
sub
clc
shl
fcmovne
jae
xlat
ret
jae
jbe
xor
mov
lahf
bound
xchg
sub
jge
xor
push
test
sub
add
les
adc
mov
aaa
sub
sbb
jne
cmp
cli
fs
jl
test
fisub
ret
(bad)
fdiv
call
lods
call
cmp
mov
mov
jmp
rcl
push
mov
add
pop
cmc
or
sbb
add
inc
cmc
add
add
add
(bad)
(bad)
(bad)
push
mov
adc
mov
add
or
add
mov
add
lock
add
or
add
fist
add
xor
add
(bad)
(bad)
(bad)
jmp
rol
into
mov
(bad)
jmp
jg
dec
lods
push
scas
xor
adc
and
xchg
hlt
and
adc
cmp
jmp
push
adc
add
rol
mov
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
xor
add
lock
mov
add
pop
add
lock
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loop
pop
fwait
test
stc
pop
lock
add
xor
add
(bad)
(bad)
(bad)
call
out
dec
enter
sar
(bad)
(bad)
ds
mov
and
jne
jo
inc
popa
test
or
cmps
jp
arpl
lock
scas
add
mov
dec
or
jne
jno
add
add
add
add
add
push
add
lock
add
push
mov
(bad)
pushf
inc
jl
sub
stos
push
add
push
lahf
lods
add
aam
jo
cmp
in
mov
adc
outs
cmp
push
jne
mov
pop
lea
cli
aaa
add
adc
les
les
mov
push
add
sbb
hlt
cwde
test
sti
movs
fstp
jns
jle
loope
add
add
add
add
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jecxz
xor
adc
dec
mov
cwde
loopne
jg
lods
cmps
int3
cmp
xor
and
jg
jmp
inc
pushf
jns
into
shr
aaa
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
loop
add
xchg
dec
add
lock
ret
add
pop
cmc
test
repz
xor
into
out
add
je
xchg
pusha
or
pop
cdq
mov
rol
(bad)
stc
inc
adc
mov
push
add
loope
push
daa
add
and
push
icebp
int3
ss
iret
push
retf
jo
call
lahf
daa
fsubr
ds
push
pop
jno
out
fnstsw
addr16
lods
test
jmp
std
je
xor
cli
pop
add
cwde
mov
add
lock
(bad)
(bad)
push
dec
adc
les
lock
(bad)
dec
outs
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
mov
lock
lock
jne
push
push
mov
bnd
jmp
inc
adc
ins
cmp
push
mov
in
adc
add
outs
jle
mov
lds
pushf
dec
sbb
ss
ins
sbb
sub
jbe
push
add
push
add
lock
jp
and
xchg
(bad)
pop
js
push
fs
call
out
imul
add
xchg
into
jmp
sahf
je
jnp
mov
int
cmps
xor
fldenv
and
retf
fs
and
cli
inc
pop
es
add
fdivr
sub
dec
xor
cli
inc
gs
fimul
xchg
cld
test
lds
cmp
icebp
push
inc
xchg
dec
cmp
and
(bad)
jle
imul
add
add
inc
pop
jbe
jbe
aam
pop
loope
daa
loop
sbb
ficomp
mov
push
jp
push
clc
dec
xor
movs
retf
fisttp
movs
xchg
jo
in
xchg
add
or
cmp
shr
ret
mov
cmps
xchg
xor
sbb
pusha
into
xor
out
shr
jg
(bad)
cmp
jg
sub
mov
pop
push
rol
jns
ss
jmp
xchg
call
ins
and
mov
mov
cmc
test
dec
cld
hlt
adc
clc
push
aam
mov
xchg
or
call
lods
aaa
into
and
mov
dec
pop
psubsw
xchg
hlt
push
or
adc
ret
pop
dec
sub
ds
sbb
cmp
cmp
jbe
sub
mov
cmp
rol
push
cdq
add
jmp
mov
push
mov
lods
xor
lods
loopne
push
mov
push
aam
cmp
mov
outs
lahf
cli
inc
pop
or
xor
stos
inc
pop
ret
shl
pop
add
push
add
adc
mov
sub
pop
xor
pop
(bad)
adc
les
inc
jo
inc
push
xchg
pop
aas
cmps
(bad)
mov
imul
or
dec
and
int
dec
sub
in
lds
push
dec
mov
adc
pop
sub
mov
jno
or
xchg
int3
fld
jno
add
lock
add
lock
(bad)
(bad)
dec
or
cs
enter
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
push
mov
add
lock
add
lock
(bad)
(bad)
(bad)
mov
nop
inc
(bad)
daa
leave
add
sar
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
movs
sub
inc
icebp
(bad)
and
add
(bad)
(bad)
(bad)
inc
pop
in
mov
(bad)
(bad)
push
add
add
add
pop
aaa
xor
cmp
aam
sar
(bad)
push
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
fstp
add
call
inc
dec
sar
int3
leave
not
sar
mov
fwait
test
ja
fstp
addr16
sub
pop
in
xchg
enter
test
dec
xchg
xchg
(bad)
pop
or
fmulp
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
pop
dec
add
push
add
lock
add
je
add
adc
inc
pop
push
scas
out
arpl
dec
out
pop
jno
push
cdq
push
and
and
jne
leave
push
mov
fmul
iret
jo
repnz
movs
inc
imul
(bad)
(bad)
(bad)
jmp
adc
push
mov
repnz
add
lock
lock
mov
enter
cmc
cmp
jo
xchg
jl
cmp
mov
and
cmp
push
and
inc
fsub
jmp
pop
jl
arpl
mov
scas
lods
mov
inc
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
jnp
add
adc
das
(bad)
cmp
pushf
retf
add
add
sar
(bad)
(bad)
mov
add
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
cwde
rol
lock
mov
js
sahf
xchg
dec
push
sbb
inc
(bad)
ss
ror
das
out
pop
xor
scas
test
les
imul
push
lock
xor
imul
movs
rcr
int
xor
clc
scas
aam
(bad)
arpl
sub
jns
int
mov
ins
and
aad
cs
fnstsw
rol
adc
sbb
xor
adc
adc
mov
sbb
mov
not
add
xchg
cli
in
and
push
aaa
cmps
mov
adc
pop
in
inc
lods
sub
out
das
and
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ds
jecxz
mov
or
cmps
push
test
mov
mov
sahf
adc
inc
stos
jle
ret
cmc
xchg
cmp
out
jmp
(bad)
enter
add
and
mov
add
lods
mov
add
sldt
lock
jmp
jns
jbe
pop
or
popf
adc
jle
test
icebp
nop
jg
jmp
aam
sbb
and
mov
fsubrp
int
lock
adc
fcom
xor
push
cmc
inc
xchg
iret
or
push
xchg
out
xor
lods
cmp
test
(bad)
sbb
mov
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
clc
push
fisttp
mov
inc
add
lock
aad
lock
lods
add
push
add
lock
jno
adc
ror
xchg
pop
shr
stos
test
aaa
adc
imul
lods
add
jns
retf
test
scas
push
xchg
(bad)
push
push
ficom
(bad)
(bad)
(bad)
inc
xor
xor
xor
add
jns
add
cmp
cmp
sbb
xchg
int
dec
sbb
jnp
xlat
dec
cmp
xor
cmp
cmps
push
sub
xor
sbb
xor
add
jl
add
add
add
sub
add
(bad)
(bad)
(bad)
call
in
adc
lock
(bad)
jmp
pop
mov
mov
out
jns
mov
rcl
xchg
xchg
push
xchg
in
cmc
outs
(bad)
lahf
iret
inc
fidiv
std
scas
scas
out
mov
lods
mov
shl
test
aaa
fiadd
hlt
xchg
inc
jl
leave
pop
dec
fsub
inc
je
in
push
stos
pop
add
loope
push
push
mov
jg
mov
lock
add
scas
es
add
add
add
add
(bad)
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
sbb
daa
sub
xchg
jmp
pop
adc
pop
add
add
add
das
and
lock
(bad)
retf
std
adc
xchg
ret
cmp
pop
and
movs
inc
movs
scas
scas
mov
xchg
xchg
and
lods
mov
mov
jmp
in
lahf
pusha
leave
or
push
add
lock
(bad)
(bad)
(bad)
cmp
jge
test
(bad)
(bad)
call
(bad)
(bad)
dec
sub
sub
lock
add
(bad)
inc
retf
add
pop
add
jo
push
add
mov
add
add
add
jle
jb
adc
dec
push
ds
xchg
out
mov
jns
sub
pushf
pop
les
clc
in
lea
gs
pusha
sahf
scas
push
ins
test
dec
dec
mov
stc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
or
ins
sub
add
sub
add
test
add
lock
aas
cmp
or
xchg
push
ins
adc
js
jo
xlat
out
gs
sub
adc
ins
(bad)
popa
sub
mov
add
mov
mov
outs
dec
lea
jg
int3
or
dec
ss
rol
shl
cmc
add
rol
(bad)
pushf
xor
sbb
add
add
or
and
add
adc
add
aas
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jp
inc
mov
jae
mov
add
lock
(bad)
push
add
lock
add
pusha
add
lock
add
add
add
add
dec
add
lock
(bad)
(bad)
inc
repnz
or
add
sar
(bad)
push
add
lock
(bad)
(bad)
(bad)
out
in
sub
push
mov
jne
add
sar
(bad)
(bad)
out
popf
add
add
add
idiv
outs
mov
add
add
add
push
pop
ins
lods
scas
cmp
or
test
loope
iret
shl
pop
fistp
push
cmp
stos
xlat
pop
call
add
les
stos
push
les
sub
add
(bad)
(bad)
(bad)
call
inc
lods
lahf
call
fild
sar
(bad)
inc
add
lock
add
add
add
aaa
add
lock
(bad)
(bad)
jmp
xchg
jnp
lahf
loop
lock
(bad)
(bad)
(bad)
loop
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lods
jecxz
stos
xchg
arpl
(bad)
(bad)
(bad)
dec
jl
test
sar
(bad)
call
mov
push
imul
(bad)
jmp
add
lock
add
sbb
add
jbe
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
add
popf
cli
inc
fild
add
lock
(bad)
dec
je
lock
add
inc
add
lock
add
lock
rol
sub
add
je
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
mov
inc
test
xor
add
pop
in
add
mov
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fnstsw
xchg
dec
lock
(bad)
(bad)
(bad)
fld
(bad)
popf
jl
pusha
inc
add
lock
add
and
add
(bad)
(bad)
(bad)
push
jg
dec
ret
inc
out
lock
(bad)
(bad)
cmp
fld
push
int
cmp
(bad)
inc
test
pushf
adc
mov
lock
(bad)
mov
xor
or
sahf
mov
jg
xor
jg
ins
xchg
sbb
xchg
sub
sahf
pushf
mov
ret
(bad)
jp
inc
xchg
mov
add
(bad)
(bad)
(bad)
push
jle
push
inc
add
lock
out
lock
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
or
add
lock
cmp
adc
add
lock
adc
cdq
mul
fiadd
fsub
out
sub
push
imul
or
call
scas
sahf
pop
mov
dec
adc
mov
lock
inc
add
push
inc
add
retf
call
pop
pop
test
xor
inc
aad
lods
in
call
add
pushf
or
xor
mov
pop
js
sar
add
(bad)
(bad)
(bad)
inc
rol
or
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
int
xchg
jl
imul
add
mov
add
add
add
or
add
(bad)
(bad)
(bad)
jmp
imul
jnp
mov
xor
(bad)
(bad)
(bad)
jge
ins
pop
lock
out
shl
in
pop
ret
or
clc
into
aam
jne
add
xchg
sbb
add
pusha
jg
xchg
out
sti
mov
xor
xor
test
sub
aas
sub
mov
jb
cs
adc
xchg
xchg
repnz
fwait
adc
xchg
xchg
out
inc
retf
je
imul
xor
iret
push
shr
sub
add
test
add
lock
add
push
add
lock
or
add
rcl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
popa
cmp
jae
movs
and
add
xchg
jmp
jp
add
or
add
xchg
and
jae
mov
icebp
mov
pop
retf
(bad)
or
lock
add
push
add
and
mov
and
jae
sar
inc
in
out
pop
retf
cmp
jl
loopne
mov
jno
or
sbb
pop
jge
mov
in
loope
and
dec
aaa
push
xlat
fcomp
mov
out
call
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
lods
jbe
js
jae
add
lock
out
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
add
add
lock
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
scas
pop
fcmove
aad
add
push
add
fucomip
inc
push
jb
ss
jae
ss
mov
out
pop
enter
and
pop
es
mov
cmp
(bad)
dec
call
adc
popf
jb
aas
retf
(bad)
sub
leave
adc
daa
push
lock
add
and
add
(bad)
(bad)
(bad)
(bad)
js
push
add
ret
and
sub
(bad)
(bad)
inc
add
lock
add
or
lahf
cmps
or
gs
loop
or
out
ret
sti
adc
jmp
(bad)
and
retf
push
xor
inc
dec
dec
cmp
mov
fisttp
sbb
mov
cmc
sbb
shl
add
sbb
add
cmp
add
add
js
cmps
mov
pop
cmp
mov
dec
je
or
aaa
xor
jl
mov
or
out
or
jo
and
aam
test
movs
fldenv
retf
push
jbe
or
dec
outs
and
sbb
jbe
cmp
or
loop
ror
push
push
push
clc
cmp
movs
jnp
hlt
lea
hlt
inc
stos
xor
push
pop
ret
(bad)
dec
inc
mov
inc
adc
push
mov
retf
movs
pop
int3
mov
mov
sub
add
das
jne
iret
push
inc
adc
or
pop
sub
jbe
movs
mov
pop
mov
mov
pop
xor
xor
stos
imul
sahf
(bad)
jmp
mov
fdiv
mov
jl
arpl
or
sub
pop
sbb
sub
repz
xor
mov
push
loopne
mov
mov
jmp
inc
xchg
aas
mov
(bad)
aam
or
ret
out
add
jnp
repnz
lock
add
popa
sbb
jb
out
fwait
inc
(bad)
ja
popa
push
sbb
or
mov
and
lahf
jp
cmp
arpl
and
sbb
call
add
sbb
add
std
lds
add
adc
dec
push
retf
outs
inc
cmp
fist
call
fistp
and
repz
sar
sbb
pop
std
outs
(bad)
jns
fsubr
mov
push
xchg
inc
aaa
and
push
inc
add
sub
add
cmps
stc
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
into
test
push
std
add
add
mov
add
lock
fld
(bad)
fld
or
add
cwde
in
out
xor
sbb
push
push
icebp
ret
inc
scas
push
and
sub
mov
sub
push
shr
inc
mov
call
aad
jmp
shl
in
aas
pop
repz
test
(bad)
cmp
das
pop
rcl
das
movs
dec
sub
ret
jb
mov
sub
rcr
ds
sub
pop
int3
jns
cmp
sub
xchg
test
jg
repz
inc
daa
dec
ds
mov
pop
fnstsw
stc
jmp
(bad)
mov
je
xchg
idiv
lea
(bad)
(bad)
(bad)
jmp
jl
loope
cli
add
sar
(bad)
jmp
xchg
inc
mov
fidiv
mov
pushf
xor
or
jmp
push
mov
jne
lock
add
lock
movs
jp
cmp
in
mov
jne
push
inc
inc
scas
jge
loope
sbb
retf
or
jbe
push
adc
sti
in
and
jbe
retf
retf
dec
inc
dec
add
lock
(bad)
(bad)
dec
retf
and
sar
(bad)
call
add
add
add
add
add
je
add
cs
add
add
push
sbb
lock
das
add
and
add
lock
movs
add
les
add
add
add
dec
std
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
shr
dec
leave
in
ret
mov
outs
cmp
imul
push
push
push
xchg
mov
mov
jg
in
xchg
sahf
mov
popf
inc
je
pop
and
mov
push
sbb
ret
add
addr16
mov
add
add
push
retf
fxch
pop
jle
xor
adc
fs
fmul
loope
daa
dec
loop
add
cs
jns
jno
popa
or
dec
xchg
or
pop
mov
xor
lods
lock
mov
je
cmp
out
jo
add
cmp
sub
mov
lds
test
xor
xchg
leave
mov
iret
daa
cmp
dec
mov
and
test
adc
mov
repnz
ins
hlt
enter
push
pop
outs
push
inc
pop
sbb
pop
mov
mov
sahf
xchg
cmp
cmp
movs
cmp
jg
xor
push
call
adc
sub
or
pop
sub
(bad)
mov
outs
jae
pop
and
dec
je
ret
pop
and
jle
and
retf
stc
je
and
mov
mov
femms
inc
dec
shl
or
mov
cmp
mov
dec
lds
mov
sbb
aaa
inc
arpl
pop
adc
or
mul
push
outs
push
and
lods
jmp
add
lock
(bad)
(bad)
push
cmc
add
inc
mov
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loope
adc
mov
adc
jmp
adc
ret
add
adc
lods
jae
inc
pop
or
arpl
rcl
jb
ret
lds
push
inc
sub
mov
(bad)
(bad)
(bad)
inc
popf
dec
push
xchg
dec
cli
jb
add
lock
inc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
xor
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmps
cmps
mov
cmps
push
add
lock
add
add
lock
(bad)
(bad)
call
push
push
sub
add
sar
(bad)
(bad)
jle
add
push
sub
lock
add
and
jns
sbb
call
jg
out
sub
dec
aas
call
xor
push
mov
jge
scas
ds
adc
cld
(bad)
in
add
mov
inc
dec
in
push
dec
or
les
loopne
sbb
dec
sub
sub
icebp
nop
mov
push
push
sub
mov
add
(bad)
repz
inc
dec
adc
inc
sub
int3
xchg
jecxz
inc
repnz
jns
arpl
mov
clc
cdq
daa
add
popf
jns
cwde
es
in
cdq
sub
xor
aas
mov
clc
sub
inc
sahf
jno
cmps
xor
sub
(bad)
ret
xchg
inc
lahf
dec
clc
sub
xchg
pop
push
data16
les
popa
sub
sbb
push
cmps
add
mov
lea
inc
jbe
(bad)
cmp
hlt
pop
sahf
pop
xor
mov
sub
jmp
sti
pop
pop
arpl
aad
movs
pop
(bad)
(bad)
dec
sahf
fsubrp
stos
imul
jns
test
and
xchg
(bad)
sahf
push
out
cld
stos
and
and
cwde
push
in
mov
jl
pusha
iret
or
mov
fnstsw
mov
popa
loop
mov
scas
popf
ins
jp
dec
ins
(bad)
call
adc
pop
shl
ss
adc
lahf
pop
dec
mov
fs
lea
in
jo
mov
sbb
je
xor
mov
test
jbe
jl
test
or
mov
cmp
(bad)
jg
cmp
xor
lock
pushf
dec
push
inc
sahf
in
pop
inc
in
dec
mov
pop
push
loopne
fmul
sbb
pop
xor
ret
push
mov
out
cs
out
leave
and
and
cmp
inc
rcl
inc
xor
ror
dec
(bad)
jp
add
movs
jmp
jp
inc
sysenter
cwde
inc
cli
mov
xlat
cmc
pushf
pop
and
pop
ret
into
and
test
jmp
push
js
(bad)
or
not
pop
jno
sub
pop
cmp
sbb
xor
add
stc
or
push
sub
imul
push
mov
push
inc
(bad)
mov
pop
ss
mov
mov
test
js
scas
rcr
loop
loopne
and
adc
sub
out
or
jge
pop
retf
sbb
pushf
jle
xor
sub
jge
adc
shr
xchg
mov
shl
cmc
mov
xchg
xchg
call
jbe
call
sub
lock
mov
icebp
cmp
call
pop
push
dec
cmp
cld
mov
mov
psubq
fwait
jle
mov
mov
and
fdivr
adc
repnz
ret
js
jmp
pop
rol
lds
ret
and
or
push
dec
inc
lsl
jmp
xor
cmp
repz
pop
push
imul
pop
mov
adc
rol
add
add
jmp
inc
mov
fdivr
leave
add
dec
or
and
adc
rep
add
add
jnp
pop
in
ds
cmp
adc
jb
mov
xchg
shr
inc
and
sub
dec
sbb
repnz
dec
out
add
or
inc
xor
data16
pusha
cli
sub
xor
jno
xchg
dec
in
xor
std
mov
ins
mov
adc
push
jecxz
nop
test
xchg
xor
int3
jle
cmp
adc
xchg
cmp
(bad)
xlat
cli
jo
mov
test
and
cmp
pop
pop
ins
push
(bad)
pop
mov
ins
rcl
and
xchg
aad
dec
ins
xlat
stc
mov
pop
int
push
addr16
jae
test
outs
dec
jmp
mov
pop
add
(bad)
sub
jne
sar
cwde
imul
sbb
and
ins
(bad)
xchg
cmp
sbb
or
push
(bad)
xor
jo
retf
stos
iret
adc
sub
sub
stc
(bad)
pop
push
ins
dec
into
jae
sti
(bad)
jnp
js
inc
retf
sub
xor
cs
fidivr
dec
jae
jne
xchg
ds
mov
add
outs
loope
add
fistp
and
imul
sbb
ror
mov
pop
sub
sar
loope
pop
pop
daa
clc
test
lock
aaa
jnp
es
fldcw
lahf
mov
cmp
mov
rol
xor
(bad)
ss
in
(bad)
mov
shl
dec
sbb
jns
push
inc
out
or
or
xchg
cmp
ja
mov
ror
or
adc
sbb
mov
adc
cld
and
push
jns
sub
xchg
or
idiv
pop
icebp
adc
shr
dec
add
les
sub
jae
xor
mov
jns
fiadd
stos
or
xchg
mov
jg
(bad)
mov
lods
jg
lea
cmp
out
movs
ret
and
cmp
mov
push
mov
pop
addr16
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
repz
or
sub
push
shl
jge
add
sub
cmp
lea
mov
dec
dec
or
lea
dec
xchg
cmovge
icebp
xor
dec
mov
(bad)
dec
push
in
sbb
xchg
retf
adc
xor
mov
and
int
out
fild
mov
mov
fmulp
pushf
cmp
cmc
xor
dec
stos
sub
pop
(bad)
cmp
mov
data16
pop
int
add
or
sbb
fs
push
and
pop
movs
jl
fadd
and
nop
pushf
aad
dec
and
pushaw
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
das
add
xor
dec
add
lock
add
call
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
in
cs
add
lock
lock
cmps
xchg
dec
test
jo
icebp
or
mov
push
movs
or
or
stc
aad
hlt
in
fcomip
push
jecxz
adc
in
and
mov
and
jmp
sbb
mov
xor
cmp
loop
push
sbb
mov
jmp
(bad)
call
dec
mov
pop
add
lock
add
add
cmp
cmps
add
cwde
iret
add
cwde
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
loope
mov
add
lock
push
add
repz
add
add
add
mov
pushf
dec
xor
ds
(bad)
mov
sbb
mov
pop
adc
add
cs
ror
jo
xchg
cmps
in
loope
add
lock
(bad)
(bad)
inc
lods
popa
outs
dec
sbb
ins
pop
add
add
(bad)
call
add
ins
push
add
push
add
and
or
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
and
push
call
(bad)
(bad)
(bad)
(bad)
jmp
xor
fist
lock
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jbe
je
retf
add
lock
add
pop
add
lock
add
or
add
(bad)
(bad)
(bad)
(bad)
cmp
pop
into
sar
(bad)
inc
add
pop
mov
(bad)
dec
outs
enter
adc
arpl
jnp
or
mov
lock
mov
xor
call
fcom
lods
in
jl
xlat
pop
test
loop
or
and
(bad)
fsub
(bad)
and
mov
push
mov
xchg
cs
rol
sbb
xchg
pusha
sub
fistp
mov
cmp
push
add
lock
and
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
out
mov
in
xchg
cmp
add
fisttp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
imul
xor
add
and
movs
add
add
push
sbb
pusha
mov
mov
arpl
out
aas
pop
xchg
jo
cmp
test
cmps
imul
mov
(bad)
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidiv
xchg
add
lock
adc
lock
fisub
cmp
mov
or
jo
inc
fistp
clc
fistp
lds
jb
mov
mov
mov
(bad)
hlt
xor
mov
nop
ret
fild
inc
mov
add
mov
hlt
fstp
jne
inc
add
jmp
aad
push
pusha
icebp
and
loope
mov
push
or
pushf
test
adc
out
sub
sahf
lock
repz
xchg
ins
dec
sub
iret
dec
pop
(bad)
nop
mov
and
jnp
cmp
or
idiv
icebp
int3
fwait
add
jmp
popf
mov
add
or
add
xchg
fadd
lock
add
add
add
and
hlt
xchg
and
jbe
scas
int
mov
sub
push
push
mov
push
jno
mov
pusha
in
js
jmp
scas
cli
jnp
daa
repz
pop
jno
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
call
add
mov
add
lock
add
or
add
movs
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
jno
adc
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
stc
outs
dec
outs
and
lock
add
pop
push
das
inc
inc
pop
push
push
cdq
sahf
lahf
shl
loop
lods
or
cmp
push
data16
mov
push
cli
pop
inc
adc
ins
addr16
xchg
lahf
rcr
jmp
retf
in
mov
push
fadd
xlat
cli
inc
sbb
fsub
jb
jge
cmp
lock
add
xor
add
(bad)
(bad)
(bad)
inc
dec
in
mov
adc
sar
(bad)
(bad)
jle
add
xor
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xlat
addr16
call
adc
popf
sbb
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
ficom
cmp
add
ret
fld
add
add
pop
clc
add
rcr
clc
jns
mov
jo
push
pushf
adc
je
inc
sub
test
push
jge
jmp
sub
add
add
add
adc
ret
cmp
cmovo
mov
sub
stos
aas
pop
adc
mov
fild
int3
sub
rcr
mov
pop
cmps
ss
cmc
les
aam
pushf
or
movs
and
or
movs
pop
add
ss
jnp
dec
push
sbb
les
mov
fstp
add
add
add
rol
add
add
ins
pop
mov
adc
(bad)
rcl
or
fwait
int3
sub
or
fsub
add
sbb
push
mov
cdq
icebp
in
sbb
mov
pop
xor
jecxz
dec
dec
(bad)
ja
adc
inc
int
fidivr
fisub
aas
jp
popf
daa
aaa
iret
mov
ins
leave
fdivr
fst
xchg
mov
add
and
ret
cmps
lods
or
mov
js
and
pop
sbb
test
dec
(bad)
aam
nop
mov
push
sbb
daa
sub
pop
fsubrp
push
or
aaa
cmps
lahf
jmp
inc
adc
mov
jmp
cmp
xchg
scas
push
inc
push
fisub
cld
push
sbb
cmc
ds
data16
or
mov
xchg
dec
push
xor
sbb
retf
sub
int
dec
sbb
add
jecxz
aam
dec
mul
das
add
push
mov
aas
sar
pushf
ja
sbb
icebp
mov
fld
xcrypt-ecb
cmps
dec
out
xchg
mov
arpl
pop
mov
hlt
sub
push
pop
jnp
daa
xor
shl
test
sbb
push
inc
int3
icebp
pushf
xchg
out
xchg
sbb
xchg
add
bound
in
in
inc
in
sub
aas
jae
in
and
stos
mov
add
aaa
aad
mov
repz
frstor
add
or
jge
jae
add
and
adc
movs
jmp
aas
push
jbe
push
fsub
sbb
test
or
int
aad
inc
push
dec
outs
repz
push
add
cmps
push
pushf
adc
mov
ja
add
imul
sub
xlat
push
movs
jmp
mov
sbb
call
or
jno
mov
cwde
mov
rcl
sahf
imul
das
(bad)
outs
es
loope
out
sbb
jge
push
sahf
xchg
fmul
mov
pop
pop
out
enter
push
iret
stc
inc
ret
lea
(bad)
adc
sbb
in
icebp
mov
adc
lods
cwde
stos
into
dec
lock
out
adc
repz
jl
shl
test
hlt
aas
sub
dec
hlt
sar
adc
push
cwde
mov
add
add
add
adc
add
mov
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
mov
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
dec
leave
out
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
mov
call
add
sub
dec
inc
shr
and
dec
and
imul
jns
add
dec
jmp
pushf
add
add
out
mov
sub
and
xor
aaa
outs
lock
cwde
sub
push
push
push
xor
loopne
mov
or
fcmovne
in
scas
adc
push
jmp
mov
sub
push
test
dec
aad
stc
xchg
sti
sub
push
push
cmp
add
sub
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
adc
xchg
push
pop
imul
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
jmp
pop
jmp
xchg
add
sar
(bad)
push
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
sub
add
les
add
and
add
(bad)
(bad)
(bad)
(bad)
cld
xchg
mov
jmp
(bad)
dec
add
lock
or
sbb
add
(bad)
(bad)
(bad)
jmp
int
dec
xchg
jl
popf
mov
add
sar
(bad)
push
add
lock
(bad)
(bad)
push
mov
sbb
rcr
lock
(bad)
dec
(bad)
(bad)
(bad)
jmp
mov
add
ret
(bad)
(bad)
(bad)
mov
or
hlt
loop
cmp
inc
mov
sbb
popa
in
out
mov
test
jb
imul
int
lahf
push
adc
dec
movs
rol
add
adc
add
lock
sbb
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
out
mov
and
jmp
pop
push
dec
shr
cs
jne
in
call
lahf
and
pop
adc
push
and
inc
cwde
rcr
mov
mov
sar
sbb
mov
repnz
imul
mov
pop
out
rol
push
xchg
push
adc
push
ffree
out
sbb
sbb
inc
inc
imul
or
imul
popa
dec
mov
jle
xor
xor
mov
lds
aad
loope
push
inc
mov
into
xor
aad
push
sbb
push
add
(bad)
cli
push
int
pushf
mov
xchg
ins
je
push
mov
and
pop
iret
push
iret
push
mul
lahf
sub
aad
fstp
ffree
mov
or
ret
mov
out
std
in
shl
xchg
stc
pop
or
inc
add
adc
and
adc
adc
push
or
sbb
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
pushf
lock
pusha
xor
cli
cmp
adc
push
mov
pushf
fisubr
gs
test
in
push
xchg
jecxz
inc
shl
repnz
aas
mov
adc
mov
lock
outs
add
pushf
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
push
add
mov
jnp
mov
add
stc
pop
pop
push
xor
adc
retf
lea
pop
mov
outs
sub
push
sbb
cmps
(bad)
mov
shl
jge
and
movs
dec
add
clc
int3
sar
inc
cli
mov
std
adc
popa
arpl
cld
push
lods
jmp
test
leave
and
nop
inc
ficomp
cmp
mov
cmp
cmps
pop
pop
sbb
outs
call
sub
stos
(bad)
inc
push
aaa
aas
jmp
mov
jmp
dec
bound
sub
ret
pop
inc
add
xchg
popf
adc
mov
mov
pop
mov
nop
add
inc
push
add
xchg
add
add
add
add
add
fwait
mov
fld1
mov
mov
pop
lds
ss
sbb
aad
mov
ror
(bad)
cmps
jecxz
or
add
push
add
and
dec
add
lock
add
push
xchg
add
push
rol
lock
and
daa
add
or
add
jae
imul
cmps
mov
cwde
cli
dec
sbb
scas
inc
or
ja
out
dec
dec
ror
and
xchg
out
jl
pop
mov
and
add
scas
and
push
sti
mov
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
call
lds
inc
jo
lock
add
lock
add
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
test
push
xor
pop
(bad)
test
push
rcl
push
outs
sbb
or
call
adc
shr
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
pushf
data16
shl
sub
mov
cmps
mov
mov
lods
mov
ins
add
pusha
mov
mov
ins
loope
push
inc
jmp
jno
and
retf
sbb
test
jmp
lods
in
adc
(bad)
xor
dec
aas
and
cdq
shl
mov
ins
mov
mov
loop
xchg
cmp
sbb
xlat
mov
push
aas
xor
data16
lods
es
stos
cli
mov
aam
repz
ds
fsub
int
push
leave
push
jmp
pop
pop
pop
mov
pushf
fsubr
pop
add
push
add
lock
and
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jl
inc
jbe
jnp
lock
add
call
add
adc
add
lock
sbb
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
push
das
push
loope
adc
add
lock
add
stos
add
lock
add
fadd
jbe
pop
cs
not
(bad)
(bad)
dec
add
lock
add
lock
add
mov
xor
add
add
add
jmp
add
sub
jle
add
sbb
add
add
add
inc
pop
xor
inc
sub
xor
jae
jp
push
in
xor
nop
nop
pushf
sbb
add
cmp
fldenv
inc
cmps
jno
mov
(bad)
jmp
mov
out
scas
dec
in
ret
mov
std
mov
add
add
add
mov
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
popf
mov
pop
xor
add
fsub
add
xor
(bad)
(bad)
dec
add
in
xor
add
sar
(bad)
push
add
lock
add
rcl
add
xchg
add
lock
(bad)
(bad)
push
pop
dec
icebp
mov
lock
(bad)
jmp
add
lock
(bad)
(bad)
jmp
loop
sub
add
sar
(bad)
(bad)
dec
pop
in
out
fistp
mov
stos
mov
mov
push
retf
push
dec
inc
in
(bad)
ds
das
pop
int
aas
(bad)
fdivr
dec
jae
test
and
xor
add
(bad)
(bad)
(bad)
call
shl
and
dec
sub
lock
(bad)
jmp
sub
adc
add
lock
test
lock
mov
sub
adc
gs
repz
or
inc
js
adc
push
lods
pop
js
xor
sub
xchg
pop
add
xor
gs
dec
test
cmps
mov
mov
xchg
jmp
lock
(bad)
(bad)
jmp
mov
psubd
add
sar
(bad)
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
push
cmps
add
add
add
dec
jne
lock
push
mov
add
jmp
scas
push
into
mov
push
sbb
add
jo
gs
cmp
add
add
scas
cmp
add
or
ss
push
mov
ds
je
daa
retf
(bad)
pop
mov
cld
cmp
dec
in
push
mov
xor
call
ror
pop
sbb
fwait
in
push
movs
loopne
ret
sbb
pop
gs
jle
inc
xchg
enter
mov
dec
cld
adc
std
fiadd
adc
stos
bound
push
or
mov
mov
mov
dec
cs
add
push
adc
mov
popa
add
lock
add
or
add
(bad)
(bad)
(bad)
dec
imul
add
lock
add
dec
add
mov
cwde
std
loop
pmulhw
je
int3
push
out
cld
aad
retf
jp
arpl
jecxz
xor
push
fadd
in
mov
jb
sbb
lock
cmp
mov
mov
pusha
cli
imul
cmc
fs
push
inc
add
lock
(bad)
(bad)
(bad)
mov
push
into
xchg
xchg
sub
sar
(bad)
push
push
loopne
aad
idiv
out
xchg
test
je
pop
inc
push
pushf
fwait
push
jecxz
push
js
xchg
and
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
lds
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
shr
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
xchg
sub
sar
(bad)
push
into
add
push
add
lock
popa
mov
mov
and
not
pop
jno
and
inc
fcmove
push
and
and
mov
pop
ret
inc
adc
jg
jns
cmp
jae
bound
lea
iret
xlat
shr
xor
out
inc
in
mov
cmp
and
jns
(bad)
or
out
rcr
jmp
xor
(bad)
or
aaa
stos
pushf
aam
sub
adc
add
pop
(bad)
ja
and
adc
lds
xchg
jmp
sbb
ror
push
mul
dec
call
aam
xchg
sti
and
mov
fs
outs
and
shl
mov
leave
xor
push
jne
jg
add
lock
(bad)
(bad)
push
adc
or
ins
mov
lock
(bad)
(bad)
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jne
dec
push
fnstcw
sbb
add
sahf
fst
fwait
dec
or
aad
dec
jp
out
xor
(bad)
push
call
fsubr
mov
adc
mov
xor
aaa
sub
push
xchg
fdivr
sti
cmp
das
push
outs
ret
data16
(bad)
sbb
rcl
jg
mov
mov
sbb
dec
mov
ss
(bad)
jb
nop
retf
sbb
test
mov
fistp
inc
add
pop
inc
cmc
jns
xchg
mov
xor
popa
adc
sub
pop
mov
and
xor
dec
out
mov
adc
push
fwait
test
or
ss
xor
jb
cmp
xchg
push
aas
sbb
mov
mov
adc
es
sbb
pop
or
ds
pop
arpl
pop
and
imul
push
in
ret
or
or
add
pop
jmp
add
push
ja
lock
add
cmp
add
add
add
aas
add
lock
add
or
add
(bad)
(bad)
(bad)
call
mov
sar
(bad)
(bad)
aas
add
lock
cmps
add
(bad)
cmp
add
jp
add
pop
add
lock
mov
loope
cmp
and
sbb
lods
lods
lds
push
shl
mov
sub
and
aas
test
mov
xchg
add
push
fsub
jmp
inc
repnz
pop
sub
pushf
(bad)
mov
hlt
shl
add
ret
out
add
std
xchg
xchg
cld
ja
movs
(bad)
aad
inc
mov
push
aas
(bad)
sti
push
movs
sub
pop
dec
scas
pusha
arpl
in
sub
fidivr
ret
outs
std
int
mov
sbb
xchg
icebp
mov
mov
cs
mov
mov
lds
mov
adc
js
jp
mov
stc
jp
retf
scas
cmp
xchg
inc
shl
adc
mov
stos
mov
sub
int3
int3
pop
push
rcr
mov
in
(bad)
cmp
pusha
push
mov
xor
fstp
cmc
inc
imul
adc
push
push
and
push
lahf
pop
cmp
jg
movs
fimul
loopne
imul
push
push
adc
adc
ins
shr
push
loopne
neg
(bad)
mov
inc
or
and
std
in
and
bound
add
mov
sub
jo
(bad)
into
mov
in
pop
imul
xor
sbb
(bad)
sub
(bad)
xchg
fcomip
call
cmp
sar
mov
sti
bound
mov
xlat
test
je
call
mov
sub
push
xor
cmp
push
cli
mov
or
imul
int
pop
cwde
or
mov
lods
xor
scas
jle
push
push
ins
mov
xor
outs
scas
mov
inc
inc
pop
icebp
adc
cwde
es
pushf
xor
mov
push
cwde
pop
movs
ds
ds
jmp
cdq
cmp
and
cmp
ja
push
ins
aas
mov
out
push
cmc
popa
out
or
fcom
push
out
xor
pop
xor
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
stos
and
mov
lock
(bad)
(bad)
jmp
out
inc
inc
or
add
sar
(bad)
jmp
add
or
add
mov
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
movs
inc
add
push
cmp
gs
mov
cmp
adc
cld
mov
jno
xchg
cmp
fwait
je
into
test
and
pop
(bad)
pop
push
adc
pop
cmp
out
aaa
and
pop
mov
mov
push
xor
clc
inc
push
push
inc
push
xor
scas
movs
adc
sbb
push
inc
mov
pop
lods
pop
aad
out
xchg
ins
push
jo
jle
jmp
jmp
fcom
fdiv
stc
add
mov
pop
jge
stos
push
div
(bad)
cmc
shl
imul
mov
add
jle
(bad)
mov
les
lds
mov
shl
mov
movs
gs
jno
in
adc
lods
jmp
mov
pop
dec
mov
rcl
adc
(bad)
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
scas
pop
fcmove
jmp
cli
imul
lock
xor
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
sub
popa
cmp
mov
mov
add
add
push
add
cmp
lock
add
pop
test
mov
(bad)
(bad)
call
add
lock
adc
pop
and
sbb
icebp
arpl
cdq
jp
aad
push
sbb
ds
add
ja
add
int
push
rcr
cdq
and
sub
mov
add
rol
(bad)
out
popf
or
push
mov
sar
test
xchg
xchg
jle
mov
mov
sub
cdq
sub
daa
addr16
out
ret
and
mov
lock
add
add
add
adc
add
add
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
cmp
add
lock
aaa
add
aaa
cmp
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
not
arpl
xchg
and
add
push
push
add
add
add
and
std
mov
sbb
mov
jnp
mov
jnp
idiv
dec
inc
add
and
pop
cs
mov
and
popa
jmp
mov
loope
retf
mov
push
adc
dec
vdivss
ds
adc
fisttp
jmp
ja
sub
add
(bad)
(bad)
(bad)
call
inc
jbe
inc
cmp
sar
(bad)
dec
mov
mov
aaa
test
adc
shl
jae
bnd
sbb
ret
push
or
jns
clc
cmp
scas
fdivr
mov
pop
cdq
into
xor
add
(bad)
(bad)
(bad)
inc
lahf
fdivr
loope
enter
add
sar
(bad)
jmp
call
push
jae
xchg
jbe
int
or
jo
enter
sub
cld
into
xlat
clc
sbb
out
retf
sbb
xor
dec
cmp
mov
lock
xchg
mov
je
clc
repnz
repnz
fiadd
es
imul
fidiv
and
xchg
push
sbb
shl
enter
mov
js
jae
fisubr
aam
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
bound
add
add
add
push
xchg
(bad)
xchg
mov
(bad)
(bad)
(bad)
jg
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
dec
cli
jb
das
add
add
lock
cmp
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
idiv
inc
repz
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jl
dec
push
pop
jge
jb
iret
cmp
nop
aad
lea
into
ret
retf
add
cmp
dec
aam
ret
dec
dec
xchg
andnps
clc
push
push
andps
or
es
outs
cwde
call
les
fwait
and
std
or
fbstp
cmp
mov
cmps
(bad)
(bad)
and
adc
dec
sbb
push
cmp
(bad)
mov
jle
or
neg
aas
pop
pop
pop
add
mov
push
dec
cmc
shl
adc
jge
add
pop
cmp
mov
sbb
add
jae
(bad)
fbld
lea
add
lock
sbb
lock
add
adc
pop
enter
push
pusha
or
pop
sub
xchg
dec
pop
ins
and
mov
xor
push
mov
retf
adc
jne
addr16
cmp
add
lock
rol
lock
add
and
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
mov
cli
and
pop
in
xchg
arpl
nop
adc
mov
ficom
rol
adc
es
mov
adc
imul
sar
(bad)
inc
add
lock
add
lock
add
lock
mov
ret
aad
ins
cmp
ins
pop
fdiv
jecxz
(bad)
(bad)
movs
or
mov
popf
sub
pop
loope
dec
jmp
dec
mov
je
(bad)
int
cmp
sbb
push
jge
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
inc
loop
add
add
lock
lock
inc
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
inc
xor
retf
data16
sub
cmp
push
push
or
shl
and
inc
repnz
ds
sbb
sub
pop
sub
ds
aam
outs
popa
mov
outs
call
mov
cli
push
lock
loope
mov
int
fmul
movs
push
pop
sub
adc
call
fild
leave
(bad)
and
test
fidiv
test
pop
pusha
and
jno
push
aas
push
and
cmp
stos
sbb
xor
dec
xchg
xor
bound
xlat
out
(bad)
cli
lods
dec
add
lods
inc
or
or
push
jmp
call
xchg
lea
std
loope
inc
sbb
mov
or
loope
add
push
(bad)
fld
(bad)
(bad)
(bad)
jmp
repnz
add
lock
add
aam
add
xchg
lock
add
sub
add
(bad)
(bad)
(bad)
inc
test
sbb
dec
ds
inc
add
sar
(bad)
call
add
add
add
mov
call
mov
add
lock
add
lock
pusha
mov
cmp
dec
popf
or
inc
jl
cmps
sbb
arpl
mov
pop
in
sahf
mov
je
sbb
xchg
fist
mov
mov
sti
pop
fmul
in
jno
dec
data16
cmps
or
std
and
adc
movs
cmp
out
or
adc
pusha
lahf
js
jmp
(bad)
cwde
sbb
add
lock
(bad)
(bad)
dec
jp
inc
add
(bad)
(bad)
call
add
add
add
or
add
(bad)
(bad)
(bad)
inc
(bad)
xor
(bad)
(bad)
cmp
add
add
add
(bad)
jg
add
push
add
lock
repz
add
add
movs
jge
lock
add
add
add
sbb
add
cmps
std
add
add
add
add
imul
sbb
jle
inc
or
and
push
test
cmp
fs
adc
(bad)
dec
inc
fstp
add
lock
add
push
leave
jmp
(bad)
(bad)
push
add
lock
add
lock
lock
add
add
add
xor
add
add
add
push
ret
cli
cmp
and
pop
push
lods
jecxz
push
arpl
jl
test
mov
(bad)
sub
sub
ret
jg
clc
(bad)
sahf
add
cwde
xchg
retf
xchg
xchg
xrelease
int
leave
lock
sub
mov
xor
push
icebp
add
jne
xor
sbb
and
fst
or
adc
outs
out
or
sbb
adc
cwde
sub
stos
fdivr
cmp
icebp
scas
dec
(bad)
aaa
add
sub
xor
jnp
les
push
aad
addr16
fistp
xor
or
sub
rcl
lds
sbb
cli
fnstsw
fiadd
add
pop
adc
xor
add
shl
shl
cmp
inc
pop
jo
xor
shl
popa
cld
mov
fiadd
int3
mov
inc
jb
cmps
(bad)
xacquire
add
(bad)
(bad)
(bad)
push
jo
(bad)
jnp
add
sar
(bad)
jmp
add
lock
add
lock
(bad)
(bad)
jmp
jg
int
inc
jmp
add
lock
(bad)
(bad)
push
xchg
adc
add
add
add
and
lock
add
adc
push
dec
mov
xchg
test
into
sbb
xchg
ds
sub
addr16
sbb
mov
xor
cmps
sbb
aas
mov
pusha
ret
jle
mov
sub
mov
mov
(bad)
(bad)
(bad)
dec
mov
pop
pusha
dec
add
(bad)
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
jmp
add
dec
add
dec
add
sar
(bad)
(bad)
jmp
adc
jmp
inc
daa
(bad)
push
jmp
fld
jle
shl
cwde
mov
imul
pop
fistp
(bad)
lods
jecxz
mov
sahf
dec
movs
mov
add
add
add
or
add
(bad)
(bad)
(bad)
jmp
pop
jmp
sar
(bad)
inc
add
mov
(bad)
(bad)
(bad)
cmp
add
lock
cmps
push
mov
(bad)
(bad)
push
add
lock
push
add
lock
mov
scas
jae
iret
arpl
xor
dec
popa
int
mov
push
rol
(bad)
enter
push
jo
sub
and
sahf
mov
ds
xchg
mov
leave
ja
pop
cmps
mov
pop
cmc
sub
mov
int3
out
(bad)
ja
mov
inc
cs
call
scas
mov
or
jl
cmp
ud0
aas
dec
mov
bound
js
dec
rol
mov
mov
adc
add
mov
retf
mov
sub
inc
js
jno
push
sti
jno
cdq
sbb
dec
xor
xchg
fld
xchg
fidivr
push
cmp
pop
ins
and
sub
das
cmp
dec
inc
test
ins
daa
xchg
iret
cli
call
sub
and
add
add
add
sub
cmp
dec
jbe
lock
add
and
add
data16
lock
add
add
add
mov
jns
push
mov
push
sahf
jnp
push
rcr
add
rcr
out
scas
mov
data16
inc
nop
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
les
(bad)
fcmovnu
cmp
add
inc
push
add
scas
inc
add
or
add
dec
xchg
ins
leave
push
mov
dec
into
dec
cmp
out
inc
enter
scas
add
xchg
mov
adc
mov
and
data16
sbb
rcl
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
push
lock
add
push
add
lock
add
jo
add
sar
lods
out
sbb
out
xchg
fisttp
xchg
adc
cmps
xchg
sub
jecxz
(bad)
cmp
out
and
and
aad
xchg
push
push
jl
(bad)
stos
aam
rol
retf
cmps
adc
mov
or
mov
iret
cmp
jg
xchg
jle
shr
sahf
outs
or
outs
dec
mov
cwde
dec
aad
outs
add
bound
add
sub
in
cmp
mov
jle
mov
lds
add
add
das
or
add
or
add
inc
rol
add
lock
add
lock
add
adc
add
pop
pop
sar
(bad)
call
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
cmp
add
cmc
pop
add
cmps
push
add
or
add
jnp
add
add
add
add
add
loop
pusha
call
and
adc
mov
sub
jbe
imul
leave
test
xor
mov
daa
push
lahf
or
jb
test
xchg
je
loopne
fild
add
inc
repnz
jecxz
jns
das
leave
aaa
mov
and
inc
jecxz
add
lock
add
and
lds
fimul
ins
and
addr16
push
push
lds
cmp
(bad)
ret
psubusw
je
adc
shr
cdq
pop
xchg
pop
in
bound
or
sub
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
xchg
mov
sub
add
cs
add
jo
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jnp
add
add
add
xchg
jg
sub
(bad)
(bad)
and
and
sahf
cmp
mov
das
lock
dec
adc
test
frstor
sar
in
jl
sub
ins
cmp
(bad)
scas
fistp
pop
jmp
ss
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
shl
outs
push
add
or
add
outs
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
or
rol
add
dec
pop
add
dec
lock
add
add
add
sub
lock
lock
add
adc
into
fild
push
fwait
ror
pop
call
jne
not
fidivr
xor
add
dec
test
test
dec
fwait
sub
pop
pop
mov
push
xor
push
(bad)
repnz
enter
mov
mov
hlt
loop
add
lock
(bad)
(bad)
(bad)
cmp
mov
dec
pop
add
sar
(bad)
call
icebp
and
add
pop
fidiv
sub
mov
mov
mov
cmp
popa
ret
mov
(bad)
call
ror
add
mov
lock
add
and
dec
jl
gs
inc
jno
add
mov
add
call
cmp
add
pop
fld
inc
repz
(bad)
cli
test
add
mov
or
add
push
in
add
push
in
add
add
(bad)
(bad)
(bad)
jns
stc
cmp
dec
addr16
ret
(bad)
(bad)
jmp
xor
data16
pop
jo
mov
in
xor
sbb
xor
ret
and
jecxz
and
popa
call
loopne
xor
lock
add
add
add
add
add
or
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
push
addr16
stos
add
lock
bound
add
add
inc
and
xlat
aaa
add
and
add
(bad)
(bad)
(bad)
(bad)
fstp
mov
lock
(bad)
push
add
lock
(bad)
(bad)
push
in
mov
loopne
push
lock
(bad)
inc
add
(bad)
(bad)
(bad)
jmp
xlat
addr16
push
lock
(bad)
(bad)
clc
arpl
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
cmp
das
fs
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
shr
inc
aad
push
nop
push
add
or
add
sbb
lods
lock
sbb
repz
fcomp
loope
mov
movs
stc
xchg
dec
dec
shl
shl
push
ins
adc
add
inc
aad
mov
repnz
inc
fcomp
fist
jmp
add
sti
push
std
(bad)
(bad)
movs
mov
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
jp
jmp
add
add
add
adc
add
add
or
adc
cmp
xchg
aam
mov
out
arpl
imul
lock
dec
dec
sbb
add
add
adc
add
jno
cmp
cmc
ret
pop
xchg
xchg
retf
mov
icebp
loope
retf
inc
(bad)
in
cs
adc
xchg
add
cmp
sub
mov
lock
add
inc
add
lock
(bad)
(bad)
inc
aam
adc
jp
adc
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
outs
pop
push
jns
sar
push
data16
push
lahf
nop
mov
das
imul
push
mov
icebp
jae
icebp
push
test
icebp
fwait
or
sub
mov
int
mov
adc
clc
mov
idiv
inc
out
test
fcom
aas
mov
or
xor
(bad)
(bad)
(bad)
cmp
addr16
xchg
clc
xor
lock
(bad)
jmp
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
mov
add
add
(bad)
(bad)
(bad)
jmp
ret
bound
popf
push
(bad)
inc
add
lock
add
dec
pop
add
sub
add
add
add
add
add
fist
repz
jmp
fs
retf
scas
test
cmp
push
mov
push
mov
in
adc
call
add
lock
add
(bad)
(bad)
(bad)
jmp
fcomp
test
sar
(bad)
call
sbb
mov
in
fs
or
mov
pusha
inc
lods
data16
add
es
popf
xchg
jg
mov
ret
push
and
imul
xor
test
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ret
bound
adc
xchg
ret
test
pop
inc
mov
das
cmp
dec
dec
cmp
mov
inc
add
retw
(bad)
dec
lods
fwait
call
cmc
cmc
sbb
and
fucomip
ret
prefetch
adc
repnz
in
mov
(bad)
dec
jae
in
lahf
pop
cld
adc
loop
ins
inc
(bad)
shr
pop
(bad)
add
das
inc
pop
push
jno
loop
pop
xchg
xor
popa
jmp
push
or
imul
(bad)
and
shr
cdq
mov
(bad)
mov
dec
lods
and
or
xor
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pusha
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
ficomp
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
inc
xor
movs
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
and
add
lock
jb
lock
jae
jo
ret
inc
mov
push
jns
cdq
sti
jmp
cmp
jnp
out
push
(bad)
iret
inc
sub
and
ss
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
mov
dec
sbb
lock
jb
lock
add
(bad)
(bad)
(bad)
push
inc
jae
mov
fwait
out
jb
lock
(bad)
call
mov
sbb
mov
int3
mov
mov
das
fidiv
pop
jmp
loopne
xchg
hlt
push
pop
xchg
push
push
movs
and
mov
mov
mov
mov
loopne
es
pop
xchg
test
js
xor
add
lock
(bad)
(bad)
jmp
test
cmp
hlt
jae
lock
(bad)
(bad)
push
jle
hlt
jl
xor
test
lahf
push
fs
daa
mov
inc
push
push
push
jle
into
and
sub
inc
add
dec
cwde
aas
add
scas
(bad)
xchg
sub
mov
mov
stos
sbb
and
lea
jl
enter
add
lock
sbb
inc
test
call
jp
cmp
mov
cmps
xchg
add
test
sbb
and
(bad)
repnz
mov
retf
cs
div
mov
out
aam
ja
inc
inc
mov
pop
pushf
fdivr
push
sbb
iret
push
push
add
or
add
retf
icebp
jns
mov
test
and
push
cmp
mov
jno
mov
add
retf
lea
cli
push
dec
push
or
les
xor
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
rcl
mov
xchg
or
stos
adc
xor
xor
aad
imul
mov
cmp
lods
iret
dec
in
cli
mov
jmp
mov
ds
jp
repnz
test
inc
hlt
(bad)
sti
es
jge
add
lock
add
or
(bad)
(bad)
jmp
retf
leave
xchg
mov
inc
add
test
(bad)
(bad)
(bad)
jge
add
call
and
add
add
add
add
add
retf
lock
add
push
add
add
add
loopne
add
xor
dec
xor
add
shl
ror
movs
cmp
dec
dec
iret
out
shl
or
mov
(bad)
cmc
xchg
mov
push
jp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
leave
cs
lock
lock
(bad)
pop
dec
lods
lahf
ret
lock
add
add
lock
add
lock
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
mov
dec
sbb
lock
add
cmp
add
(bad)
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
call
add
adc
add
push
xchg
imul
out
rcl
pop
and
add
sub
ficom
sub
(bad)
ins
imul
jae
push
pusha
xchg
or
mov
nop
cwde
push
cmp
stos
mov
out
or
std
(bad)
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
sahf
cdq
push
(bad)
hlt
cs
test
dec
sub
mov
mov
call
xchg
in
jb
cmps
rol
pop
arpl
dec
mov
fldpi
sti
inc
and
pusha
popf
adc
shr
out
shr
test
sbb
mov
daa
retf
inc
inc
xchg
add
lock
leave
add
push
add
dec
xor
add
or
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
sub
bound
add
(bad)
jle
lock
std
iret
cmp
push
cmp
stc
sbb
fidiv
xor
rol
js
ret
call
test
aaa
mov
imul
lods
mov
and
aaa
pop
jecxz
xchg
mov
add
ret
push
jp
mov
clc
cmp
in
scas
add
leave
pop
fistp
je
jnp
add
jl
cli
dec
mov
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
fs
push
lock
add
push
add
adc
add
lock
adc
add
lock
add
add
add
cmp
add
(bad)
(bad)
(bad)
inc
cli
lods
jmp
mov
pop
cmps
add
(bad)
(bad)
push
jp
dec
sbb
rol
cld
cld
jnp
movs
jns
pop
ja
push
or
jmp
repnz
daa
out
push
mov
add
lock
add
add
add
xlat
mov
and
dec
push
sahf
test
popa
es
idiv
ror
mov
jge
pop
mov
out
mov
out
icebp
repz
dec
icebp
inc
inc
iret
ret
ss
outs
push
rol
adc
cmp
push
jge
cmp
xor
push
sbb
pushf
(bad)
xchg
pop
mov
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
je
ja
xor
add
add
add
add
dec
neg
ds
sub
mov
jns
and
lahf
imul
inc
movs
pop
or
mov
jae
push
inc
cs
ds
cmp
adc
xchg
sub
dec
icebp
out
push
loope
add
lock
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
push
inc
dec
add
lock
test
add
add
adc
add
add
test
(bad)
(bad)
(bad)
(bad)
dec
adc
add
lock
add
adc
cmps
sar
(bad)
call
add
lock
add
lock
add
lock
(bad)
(bad)
call
cdq
jno
lds
(bad)
call
xchg
shl
adc
mov
daa
pop
rcl
xchg
sbb
loope
(bad)
pop
xor
fnsave
add
daa
inc
js
jecxz
push
add
fwait
call
das
cmp
in
les
lock
add
test
mov
(bad)
call
addr16
lock
add
lock
add
and
dec
add
dec
hlt
sbb
(bad)
mov
je
cmp
cmp
cdq
inc
xchg
push
ret
sahf
jmp
or
repnz
or
or
add
cmp
add
sub
and
lock
add
or
add
popa
or
imul
pop
fsub
(bad)
aad
ror
mov
add
lea
or
cld
punpckldq
popf
sub
mov
rcr
mov
or
fwait
push
inc
pop
int
rol
and
jge
sbb
aas
popf
inc
and
fisttp
mov
sub
hlt
or
pop
not
scas
cld
stos
mov
xor
mov
test
cmp
inc
sahf
shr
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
inc
xor
popf
jne
jge
leavew
sbb
adc
push
mov
xor
jno
movs
int
mov
in
scas
add
add
add
add
add
test
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
out
pop
(bad)
ficom
or
lock
lods
add
add
add
inc
add
lock
add
stc
push
add
(bad)
(bad)
(bad)
inc
test
inc
add
lock
sbb
cmp
add
lock
(bad)
dec
mov
lock
add
imul
add
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
inc
fmul
add
mov
std
fsub
mul
push
jp
cmp
lahf
add
data16
xor
in
out
shl
push
cmc
in
jo
pop
js
cmp
jmp
dec
outs
int
mov
jecxz
dec
mov
cmp
xor
and
add
(bad)
(bad)
(bad)
(bad)
mov
xlat
pop
push
xchg
lea
add
(bad)
push
popa
pop
push
inc
mov
cmp
sbb
les
int3
bound
movs
addr16
aam
mov
ror
mov
mov
(bad)
in
add
inc
lods
inc
(bad)
stos
cmps
dec
add
lock
(bad)
(bad)
inc
push
inc
aaa
call
(bad)
(bad)
inc
push
(bad)
fdiv
xor
mov
stos
mov
jo
ja
les
push
mov
add
neg
fcomp
pop
dec
das
fild
sbb
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
cwde
xor
add
lock
(bad)
(bad)
dec
xchg
adc
pop
sar
(bad)
dec
mov
lock
add
adc
sub
or
sbb
inc
mov
out
push
adc
dec
mov
xor
loope
cwde
hlt
ret
mov
or
mov
add
outs
jmp
pop
mov
xor
shl
test
pop
fst
inc
es
inc
mov
adc
lock
hlt
sbb
dec
int3
cmps
out
(bad)
push
sub
or
cmp
push
xchg
xchg
shl
lea
cli
cmp
mov
dec
xor
leave
or
ficomp
jns
sub
xchg
fcom
les
cli
push
sbb
ror
jae
in
dec
push
jg
lea
cmp
add
lock
(bad)
(bad)
dec
movs
fimul
push
xchg
add
sar
(bad)
(bad)
cmp
push
ds
push
out
push
and
dec
and
dec
(bad)
push
mov
cmps
lahf
lahf
cmp
add
cmp
cmps
aad
lahf
jle
sar
sub
jnp
in
sbb
mov
mov
dec
dec
cwde
pop
pop
and
les
sbb
xlat
std
or
fcmovnbe
jmp
test
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
out
cmc
sbb
add
and
add
add
add
outs
pop
rcl
add
lock
(bad)
dec
lock
add
lock
add
lock
dec
dec
cmps
out
lds
mov
jb
cld
push
in
mov
jmp
jg
sbb
test
scas
fistp
fisttp
sub
arpl
call
fadd
cdq
mov
push
sub
inc
jmp
(bad)
cmps
push
addr16
mov
xor
xor
add
jmp
retf
inc
cmp
or
std
fbstp
add
lock
(bad)
(bad)
dec
test
add
sar
(bad)
jmp
loop
lock
add
lock
add
add
add
(bad)
mov
lock
add
add
add
daa
mov
pusha
push
les
jp
outs
(bad)
lods
pop
pop
in
mov
fs
push
repnz
int3
mov
int3
add
loope
dec
stc
xchg
mov
inc
xor
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fcom
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
shl
not
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jo
call
xlat
je
int
test
(bad)
mov
mov
jns
xor
push
inc
mul
outs
pop
cmps
jo
addr16
push
icebp
mov
xchg
ret
push
adc
les
cld
xchg
popw
inc
jmp
outs
and
sub
jmp
push
jg
ror
stc
xchg
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
(bad)
(bad)
(bad)
jmp
ret
xchg
sub
in
arpl
(bad)
jmp
jle
xrelease
cmp
inc
and
or
push
out
push
stos
pop
popf
add
je
dec
jmp
ins
cld
test
pop
jmp
iret
gs
cmps
xor
test
sti
sub
rcr
xor
(bad)
mov
aaa
dec
std
outs
push
cld
out
call
add
mov
lahf
repnz
sti
aas
adc
pop
sub
(bad)
(bad)
(bad)
(bad)
inc
mov
lock
add
lock
(bad)
(bad)
jmp
fsub
mov
pop
cwde
add
sar
(bad)
jmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
sbb
ja
sub
or
or
(bad)
addr16
pop
test
repnz
and
loopne
mov
inc
les
mov
add
in
adc
ins
dec
add
in
inc
xor
(bad)
or
pop
pop
mov
sbb
adc
dec
xor
mov
sub
sbb
in
lsl
mov
dec
xlat
add
fs
loope
ret
mov
inc
repnz
mov
xor
mul
adc
and
mov
aam
fadd
loop
cdq
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ins
xor
cmp
lock
add
add
add
movs
inc
adc
aam
out
(bad)
cld
jae
pop
clc
xchg
push
ins
jno
test
pusha
fwait
icebp
dec
sbb
jb
and
jb
in
les
pusha
in
push
out
loopne
inc
aad
mov
enter
add
lock
(bad)
(bad)
jmp
idiv
jge
mov
(bad)
(bad)
jmp
leave
addr16
mov
mov
jno
add
xchg
sbb
arpl
ret
jge
push
stc
call
dec
jge
add
cwde
pop
pushf
into
inc
push
mov
imul
xchg
ret
mov
loop
mov
mov
test
adc
adc
adc
loope
jmp
inc
pop
stos
mov
cmc
push
out
mov
adc
jecxz
loopne
or
pop
in
sub
dec
pop
pop
jecxz
add
lds
fisttp
push
out
(bad)
mov
ss
mov
adc
clc
mov
pop
bound
mov
mov
and
push
pop
inc
pop
mov
inc
jmp
inc
jle
icebp
sbb
out
fwait
cmps
mov
ins
jne
jg
push
in
jne
hlt
xor
popa
mov
test
(bad)
jg
lock
pop
dec
push
jmp
pop
movs
pusha
lea
movs
add
and
stos
fs
or
out
lds
xchg
push
add
std
add
enter
xchg
inc
dec
movs
loopne
or
sub
mov
mov
mov
aad
scas
or
or
int
dec
ss
out
fisubr
sbb
inc
adc
add
iret
test
or
mov
les
std
jp
add
pop
jmp
test
shr
cmp
stc
test
jecxz
add
jne
sbb
cmc
mul
int
movs
pop
pop
mov
popf
bnd
imul
pop
ja
xor
rcl
adc
cmps
fdivr
push
push
and
ins
add
mov
fdivrp
daa
adc
mov
sbb
jp
rcl
(bad)
into
xchg
rol
inc
dec
or
imul
adc
imul
and
shl
sub
or
pop
cmp
dec
jns
(bad)
retf
sbb
push
jmp
mov
adc
(bad)
div
pop
jl
push
in
mov
js
retf
jg
mov
xchg
jle
repnz
sub
outs
adc
movs
jg
(bad)
out
jnp
cmp
add
adc
jae
push
sub
lahf
ins
sbb
sub
and
mov
leave
shl
fcom
js
rol
inc
pop
and
cmp
dec
clc
sti
dec
fwait
retf
dec
jo
js
stc
sub
xor
dec
lahf
sbb
mov
mov
mov
popa
mov
jge
arpl
pop
shl
popf
pop
int
cmps
xchg
imul
pop
sbb
mov
in
and
cmp
xor
retf
fimul
dec
cmps
popf
inc
daa
xor
ins
fild
pcmpeqw
ins
cld
shr
lods
jmp
and
sub
dec
sub
push
pop
js
int3
adc
enter
sub
addr16
fistp
mov
jecxz
das
mov
mov
push
xor
rcl
push
adc
push
imul
lods
and
sub
leave
jp
sbb
or
popa
push
and
enter
inc
pop
push
nop
sbb
mov
int
push
mov
push
pushf
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
add
xor
push
mov
pop
mov
jmp
lea
xor
add
lock
(bad)
(bad)
(bad)
cmp
or
test
mov
nop
pushf
add
sar
(bad)
inc
push
dec
scas
sahf
cli
jge
inc
xor
or
sub
out
iret
jns
add
mov
cmp
int
sbb
cmp
mov
xchg
cmp
mov
imul
and
dec
neg
shl
xchg
ins
jo
sub
test
fwait
sub
fld
and
ja
pop
test
ret
popa
xchg
ja
and
scas
fistp
or
ret
cdq
mov
sub
pusha
imul
addr16
xor
aaa
fidivr
clc
fwait
cli
xor
fucom
jo
iret
add
mov
mov
add
add
add
add
add
xlat
dec
add
add
add
imul
lock
adc
clc
dec
movs
mov
xchg
ss
(bad)
mov
enter
mov
mov
sar
(bad)
pop
shl
cmp
lds
pop
mov
(bad)
pop
fiadd
pop
arpl
movs
or
loop
mov
cmps
pop
dec
mov
xor
cmp
jl
add
lock
add
or
(bad)
(bad)
dec
push
and
push
fnop
(bad)
(bad)
inc
lock
add
push
push
pop
adc
mov
push
(bad)
sahf
dec
pop
(bad)
xor
ds
pop
or
out
fsubr
icebp
jnp
jns
into
mov
(bad)
iret
xchg
pop
adc
gs
dec
mov
adc
mov
nop
(bad)
retf
dec
movs
call
loopne
mov
cdq
test
int3
push
stc
push
loop
add
lock
(bad)
(bad)
push
ret
clc
mov
(bad)
call
add
(bad)
(bad)
(bad)
call
fldenv
fsub
(bad)
jmp
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pusha
inc
imul
add
jl
sub
adc
sar
(bad)
push
mov
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
addr16
dec
adc
lock
add
lods
nop
outs
xor
xchg
or
mov
into
push
dec
cmps
mov
cmp
sbb
imul
add
scas
push
bound
add
jne
test
push
push
dec
scas
sub
mov
fadd
leave
sub
aaa
and
cmp
test
sar
clc
jle
inc
rcl
cwde
jns
jle
out
mov
or
fmul
jne
push
rep
in
jae
mov
lds
mov
pop
icebp
int
push
mov
or
retf
int
adc
mov
adc
mov
ins
jmp
jmp
lock
add
out
cmp
outs
mov
ja
and
pusha
std
icebp
(bad)
push
adc
fcomp
ret
cmp
data16
mov
into
adc
mov
xchg
sbb
cmps
fcom
les
lods
fisub
scas
leave
sub
xor
lahf
pop
push
sub
lods
bound
js
push
or
push
mov
loop
rcr
rcl
hlt
cmps
rcl
mul
rcr
push
xchg
mov
(bad)
jae
gs
into
addr16
jp
ret
ins
out
daa
in
in
mov
mov
inc
retf
cdq
sbb
test
dec
jae
repz
push
lds
xor
mov
jg
(bad)
and
pop
shl
sub
call
xchg
push
fstp
mov
sbb
pop
repz
pop
or
cmc
(bad)
lahf
data16
out
mov
mov
pop
xchg
sbb
xchg
icebp
bound
dec
lods
mov
in
in
shl
fxch
push
ror
imul
loope
dec
lea
push
and
pop
loope
inc
ins
dec
push
test
lahf
iret
and
jb
add
ja
cld
ja
pop
lods
cli
nop
outs
in
xchg
test
cmc
pop
mov
sub
sti
cs
jecxz
mul
mov
leave
shl
xchg
scas
xlat
stos
sub
cmp
mov
loopne
retf
(bad)
test
jae
mov
stos
sub
mov
mov
jns
xor
ficom
lods
pop
mov
xor
xchg
jbe
les
daa
cmp
sbb
in
in
dec
mov
push
fwait
dec
test
xor
xor
add
inc
shr
retf
cmc
aad
out
push
shl
push
pop
sbb
hlt
and
and
lock
xchg
(bad)
scas
ficomp
ds
(bad)
mov
mov
sbb
cdq
mov
cwde
push
ret
test
lahf
xchg
lds
les
ror
mov
leave
rcl
jb
lahf
mov
repnz
mov
ins
shl
sub
fwait
mov
jp
cmp
jecxz
xor
retf
test
add
add
cdq
pop
add
push
add
lock
or
lock
add
jae
add
push
cli
(bad)
cmp
push
cmp
icebp
retf
adc
pusha
sub
shl
xchg
(bad)
icebp
sbb
or
mov
stos
(bad)
fdivr
test
push
sbb
js
jo
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
xchg
adc
lock
imul
mov
xor
pop
cwde
pop
data16
in
or
mov
pop
jmp
enter
pop
jge
dec
add
inc
mov
or
jecxz
lock
inc
xor
adc
or
or
lock
jb
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
int
shl
or
hlt
cmps
add
aaa
add
lock
(bad)
(bad)
dec
outs
pop
inc
jno
add
sar
(bad)
jmp
adc
lock
add
add
add
sbb
add
or
in
sub
nop
ror
icebp
adc
pop
pop
cmp
xchg
imul
aas
cmp
inc
adc
arpl
pushf
pop
adc
jns
ror
xchg
xchg
int3
or
or
pop
test
mov
push
pop
cs
mov
imul
pop
sahf
mov
mov
in
xor
out
pop
mov
pop
mov
ret
cmp
inc
adc
int3
push
push
mov
mov
cmp
shl
pop
fld
jno
or
mov
(bad)
pop
outs
cld
mov
mov
test
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
aad
scas
cdq
add
or
add
scas
cdq
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
loop
enter
add
lock
add
xor
(bad)
(bad)
inc
xlat
addr16
call
(bad)
(bad)
jmp
stos
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
call
mov
add
add
add
pop
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
adc
push
add
adc
add
add
add
inc
mov
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
nop
ds
jmp
add
mov
add
lock
(bad)
(bad)
jmp
jg
push
push
lods
add
(bad)
(bad)
(bad)
(bad)
jge
cmps
test
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
int
pop
and
add
(bad)
(bad)
(bad)
inc
les
lock
lock
(bad)
jmp
js
arpl
ret
popf
stos
jg
clc
cmc
push
sti
ins
xor
xor
dec
jge
sbb
pop
pop
lock
in
add
bound
clc
popa
jns
xchg
push
ret
jbe
scas
in
gs
mov
cmp
and
fsubr
xor
enter
repz
in
push
int3
and
(bad)
push
test
xor
and
add
(bad)
(bad)
(bad)
jmp
add
aaa
inc
sti
in
mov
lock
(bad)
call
ret
push
rcl
movs
pop
xor
mul
sbb
int3
aas
cmp
ins
jp
cmp
or
add
lock
(bad)
(bad)
inc
int
push
xor
lock
(bad)
inc
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
enter
inc
loop
add
lock
mov
lock
add
add
add
add
add
mov
lock
add
ins
mov
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jle
push
add
mov
lock
mov
aam
pop
xchg
repnz
out
std
jecxz
mov
inc
fwait
mov
test
mov
fild
mov
jae
je
and
in
sub
add
add
cmc
cmp
adc
(bad)
mov
rol
xchg
dec
lock
mov
cdq
adc
leave
movs
retf
ss
xlat
es
jo
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
int3
push
add
dec
pop
add
lock
add
push
add
lock
(bad)
(bad)
call
(bad)
dec
dec
(bad)
call
add
push
out
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
adc
cmp
add
push
mov
lock
mov
call
lods
(bad)
data16
(bad)
imul
cmp
dec
or
push
push
push
pand
popa
mov
cs
mov
cwde
sbb
cmp
hlt
repz
movs
adc
sti
cwde
(bad)
clc
xchg
out
aam
fild
fsubr
or
push
xchg
js
add
add
add
add
push
add
lock
(bad)
(bad)
inc
and
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
loop
in
add
lock
mov
lock
add
lock
cmp
lock
add
lock
add
mov
jnp
imul
(bad)
(bad)
jmp
js
lock
add
lock
add
lock
popf
add
or
add
in
pop
cmp
jge
sub
and
or
repnz
push
cmp
pop
mov
pop
(bad)
mov
loop
pusha
xor
pop
hlt
xor
addr16
std
xor
mov
xor
ret
popa
aam
cmp
les
rcl
icebp
cmc
ja
fnstenv
pop
add
add
lock
add
add
add
push
add
and
inc
or
sub
into
stos
dec
mov
leave
add
pop
int3
pop
push
mov
fild
sub
adc
sbb
dec
mov
inc
mov
les
stos
xlat
inc
push
and
scas
lea
scas
xor
(bad)
jmp
mov
(bad)
scas
or
js
jno
sbb
xor
or
adc
data16
add
iret
in
push
pop
and
jl
and
mov
pushf
inc
mov
sbb
push
enter
arpl
dec
movs
push
mov
jne
lock
add
push
(bad)
repnz
lea
loop
inc
pop
xor
pop
jp
and
add
push
dec
popf
bswap
(bad)
(bad)
sbb
cmp
test
popa
mov
adc
xor
add
add
sar
(bad)
jmp
mov
lock
add
lock
add
lock
lock
cmps
fstp
jmp
xor
dec
fild
shr
cmp
test
sbb
mov
push
enter
push
jo
jbe
dec
popf
pushf
int3
aam
dec
cld
jnp
loop
jno
and
pushf
or
test
cmp
cmp
aaa
cmp
jbe
ja
sbb
imul
pop
dec
pop
retf
loopne
mov
fidiv
xchg
mov
clc
out
(bad)
pop
dec
cmp
xchg
mov
repz
push
in
mov
and
cdq
(bad)
fsub
cs
jbe
cmps
(bad)
stos
jl
retf
jnp
adc
clc
loop
cmp
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cli
movs
fadd
push
inc
and
(bad)
sti
dec
mov
sub
or
es
adc
(bad)
(bad)
(bad)
(bad)
(bad)
faddp
loopne
xor
cmp
add
stc
mov
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
movs
lods
adc
aad
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
shl
pop
rcl
rol
lock
add
adc
add
lock
add
fsubr
add
push
add
lock
add
lock
jg
(bad)
ficom
dec
cli
hlt
sbb
repnz
imul
leave
pop
xchg
lods
mov
scas
in
outs
pop
ins
(bad)
jmp
pop
jbe
mov
int
fdivr
xchg
stos
sti
fst
add
add
add
add
add
add
add
test
add
xchg
lock
add
sub
add
lock
xchg
out
daa
mov
mov
mul
mov
stc
add
cmps
fs
and
jmp
or
pop
nop
push
inc
repnz
inc
mov
pop
in
sbb
aaa
adc
or
add
dec
and
test
movs
call
and
cmp
add
xchg
test
out
sahf
cmp
int
pop
inc
popa
pop
retf
and
pop
out
mov
push
inc
in
cmc
lods
movs
jae
push
cmc
repnz
sahf
(bad)
(bad)
jge
pop
retf
or
into
mov
pop
loop
xor
mov
(bad)
call
cmc
pop
mov
add
sbb
adc
dec
je
xor
pop
cmp
cdq
call
mov
sbb
pop
(bad)
call
mov
pop
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
movs
mov
data16
lock
add
push
add
sahf
cmps
add
add
add
int
add
add
add
xchg
add
lock
add
lock
add
popf
js
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
test
sbb
lock
add
push
add
lock
(bad)
(bad)
jmp
cli
lock
test
push
and
add
ret
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pusha
neg
cmp
add
(bad)
retf
add
cld
mov
add
xor
(bad)
(bad)
jmp
(bad)
mov
sar
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
dec
imul
mov
(bad)
(bad)
jmp
loopne
xchg
jbe
enter
sbb
mov
out
(bad)
retf
les
add
ins
repz
iret
and
or
fsubr
push
push
movs
or
or
pop
dec
mov
sbb
(bad)
xor
add
out
pop
and
mov
lock
jnp
icebp
jmp
bound
ss
jmp
mov
hlt
fild
sahf
push
adc
and
jae
add
cmp
cmp
shr
or
fnstenv
movs
push
vpavgb
dec
sub
aad
sub
add
add
add
cwde
push
iret
popa
inc
loope
cmp
(bad)
(bad)
jmp
jns
lock
add
lock
add
lock
sub
add
mov
inc
loope
jmp
cmps
loop
aas
and
mov
icebp
pop
and
rol
adc
hlt
add
in
adc
jne
jmp
fs
cmps
ror
mov
mov
mov
es
push
sbb
jnp
das
out
das
jne
mov
(bad)
(bad)
dec
pop
xor
add
add
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
fldlg2
mov
pop
adc
add
sar
(bad)
jmp
div
sub
fdivr
ins
pop
adc
cmp
hlt
lea
out
mov
jns
pop
gs
and
pop
jbe
in
ror
lds
pushf
jae
hlt
sbb
sub
xchg
xor
xor
jge
mov
jnp
shl
test
cmp
(bad)
(bad)
(bad)
push
jle
mov
addr16
add
mov
add
or
loop
xor
mov
pop
in
pop
pop
or
fdivr
push
xchg
leavew
inc
(bad)
retf
xchg
outs
push
cli
fidivr
inc
add
lock
(bad)
(bad)
call
xchg
int
lock
(bad)
dec
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
cmp
xchg
inc
scas
outs
out
cmp
sub
push
test
push
push
shr
add
or
or
loope
pop
dec
xchg
push
mov
inc
or
ret
neg
inc
mov
or
push
dec
ret
in
stos
and
cmp
gs
scas
sbb
jns
dec
pop
repz
stos
push
push
mov
outs
inc
lea
pop
lods
sbb
add
and
add
(bad)
(bad)
(bad)
jmp
not
add
rol
sar
(bad)
inc
add
(bad)
(bad)
(bad)
jmp
adc
push
mov
repnz
(bad)
call
or
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
pushf
cs
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
cmp
add
jbe
add
push
(bad)
adc
sbb
aaa
add
mov
inc
js
mov
fs
clc
jne
sub
out
dec
outs
ins
sub
pushf
cmp
and
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fidivr
call
fdivr
fistp
inc
jge
xchg
or
and
push
mov
test
fisttp
mov
in
and
faddp
mov
push
push
nop
aam
ins
pop
mov
pop
mov
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
jle
inc
mov
sub
pop
mov
jae
mov
mov
imul
or
sar
out
ja
dec
xchg
xchg
jg
nop
inc
jbe
push
or
adc
mov
dec
sbb
push
lods
adc
add
inc
(bad)
pop
aam
add
fsubr
sbb
jns
leave
pop
xchg
mov
mov
pop
int
pop
sbb
and
les
and
lock
adc
add
test
add
add
add
add
add
cmp
add
(bad)
(bad)
(bad)
inc
outs
pop
push
jns
rcl
(bad)
(bad)
call
xlat
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
fld
add
lock
(bad)
inc
add
lock
add
lock
add
lock
pop
push
mov
mov
in
nop
cs
stos
cli
adc
fs
ret
xchg
icebp
jmp
or
ja
(bad)
xchg
push
or
loop
jle
xchg
inc
xor
fld
lods
adc
lods
fbld
imul
ss
arpl
fiadd
dec
add
sbb
lahf
adc
xor
push
mov
dec
pop
jmp
rcl
int
cmp
nop
mov
cld
inc
in
sub
xchg
sbb
push
js
push
push
mov
pop
mov
dec
inc
pop
mov
int3
xchg
push
(bad)
mov
stos
inc
xchg
mov
inc
xor
sbb
add
ret
pop
dec
dec
pop
pop
pop
mov
imul
pop
call
mov
jmp
shl
je
jp
cmp
pop
cs
stc
ret
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
inc
add
lock
jge
add
add
add
add
add
add
add
loopne
add
or
fisub
addr16
or
enter
xchg
sub
or
inc
cmp
rcl
sub
fs
jne
dec
mov
sub
ins
jle
ins
aaa
jne
in
lea
add
add
add
add
lock
xchg
fdiv
in
loop
mov
lock
xor
sbb
pop
add
or
retf
fwait
jl
adc
dec
mov
arpl
imul
add
ret
fsubr
ja
fistp
(bad)
aad
jae
in
fcom
arpl
popf
push
xchg
out
into
out
push
inc
xor
jmp
stc
hlt
jle
out
mov
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
(bad)
cmp
sar
outs
xchg
pop
sub
push
adc
nop
arpl
in
int
push
xchg
jg
outs
or
(bad)
call
mov
or
inc
adc
jge
clc
std
inc
cmp
inc
in
std
jne
xchg
adc
inc
push
mov
or
add
lock
(bad)
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
add
js
add
in
pop
add
or
add
fdivr
data16
clc
retf
dec
fbld
jae
sahf
mov
xor
adc
sub
jg
xchg
jp
lahf
sbb
lahf
sub
movs
outs
mov
push
lods
icebp
pop
and
add
dec
call
jo
repnz
pop
ja
out
push
mov
push
add
and
test
adc
in
dec
xor
mov
add
lock
xor
add
lock
add
add
add
add
add
daa
ret
add
add
add
add
add
push
add
lock
(bad)
(bad)
jmp
(bad)
int3
aas
jecxz
(bad)
fild
sar
(bad)
dec
mov
fisttp
push
push
leave
and
mul
mov
xor
or
xor
pop
leave
retw
cdq
out
loope
dec
test
fcmovne
call
inc
add
add
add
sub
add
(bad)
(bad)
(bad)
(bad)
ficom
xor
push
jns
loope
lock
(bad)
push
add
(bad)
(bad)
(bad)
call
nop
pop
adc
lods
jge
jecxz
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
imul
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
nop
int3
sub
add
lock
add
jne
mov
outs
call
test
add
test
push
das
int
popf
xchg
xor
fsub
mov
fdiv
sub
mov
lahf
scas
das
adc
scas
cli
sbb
mov
cdq
xchg
xor
fistp
push
add
add
add
add
add
jp
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
loopne
out
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
pop
cmps
aad
jmp
lock
add
mov
add
sbb
add
(bad)
lock
add
in
add
lods
push
add
mul
aas
stc
or
clc
push
cmp
jl
sti
lock
push
jecxz
lods
or
dec
sti
xchg
cdq
mov
xor
inc
xor
(bad)
fsub
add
cmps
add
push
xchg
repz
mov
rcl
jnp
jae
cmp
shl
(bad)
push
into
retf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jbe
inc
aaa
add
lock
add
push
add
lock
(bad)
add
add
add
push
add
lock
add
add
add
(bad)
(bad)
(bad)
push
xor
ret
(bad)
(bad)
call
add
lock
push
lock
(bad)
(bad)
push
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rcl
jge
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
retf
std
das
adc
es
xchg
fs
(bad)
outs
in
and
cmp
push
pop
dec
fwait
aas
push
adc
(bad)
lds
icebp
je
hlt
xchg
repnz
lock
(bad)
(bad)
call
jns
ret
or
jmp
lock
(bad)
(bad)
mov
ret
cmp
scas
push
push
push
xor
dec
pop
lods
cmc
and
push
jg
les
(bad)
pop
dec
cmp
pop
jl
pop
push
push
mov
mov
mov
pop
cmp
inc
add
lock
(bad)
(bad)
push
inc
pop
shl
in
add
sar
(bad)
(bad)
clc
fs
add
add
add
add
imul
xor
fcom
stos
lods
sub
out
jno
mov
hlt
sbb
imul
pop
jae
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
out
inc
add
lock
(bad)
(bad)
call
popa
cld
mov
fcomp
lock
(bad)
call
nop
dec
dec
dec
mov
in
sar
push
pop
sub
out
fisttp
daa
stc
pop
test
or
jge
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
stos
ins
std
dec
mov
sub
add
jbe
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
gs
lea
in
out
retf
jae
arpl
inc
test
push
fiadd
neg
jmp
aam
sbb
pop
repz
sub
xchg
push
popf
jmp
lock
add
lock
add
adc
add
lock
add
stos
nop
push
or
add
lock
(bad)
jmp
scas
add
lock
add
cmp
or
loope
aaa
jns
pop
scas
or
movs
mov
jecxz
or
inc
test
rcl
xchg
add
loope
call
xchg
dec
retf
mov
or
cmp
aaa
fimul
leave
pop
retf
push
pop
and
mov
popf
sub
sub
inc
xor
popf
cmp
scas
jmp
lods
loope
aas
mov
fisttp
add
add
add
add
sub
add
shl
in
stos
pop
sbb
inc
sub
repnz
cmp
add
mov
push
mov
repnz
add
repz
pushf
sub
or
or
push
ficomp
repz
invd
pushf
jmp
add
add
push
add
lock
(bad)
(bad)
dec
(bad)
mov
push
stc
or
(bad)
(bad)
inc
add
leave
in
lock
(bad)
(bad)
inc
add
add
add
xchg
jle
clc
cmps
xlat
add
sar
(bad)
jmp
retf
or
add
lock
add
add
add
add
add
daa
jp
jns
xchg
add
sbb
aad
push
nop
(bad)
pop
mov
popf
(bad)
jo
ror
xor
add
loope
inc
push
ds
(bad)
(bad)
(bad)
jmp
imul
cdq
add
call
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
cdq
dec
add
lock
add
lock
add
or
(bad)
(bad)
jmp
jnp
mov
(bad)
(bad)
inc
add
(bad)
jmp
lock
(bad)
(bad)
jmp
mov
xor
push
scas
sbb
sbb
repz
xor
xchg
int3
sub
or
or
or
adc
in
xor
cwde
nop
not
push
mov
mov
and
and
add
(bad)
(bad)
(bad)
inc
inc
sbb
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
lods
sub
add
push
cmp
add
push
add
adc
ins
cmp
inc
pusha
arpl
mov
sub
sbb
addr16
retf
sbb
jno
add
xchg
sahf
sub
pop
jnp
xchg
repz
test
in
mov
add
lock
(bad)
(bad)
jmp
or
pop
das
sub
add
sar
(bad)
(bad)
in
xchg
outs
jmp
mov
not
sub
jg
add
sub
mov
stc
mov
adc
je
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
iret
movs
callw
add
lock
push
add
pop
lods
add
push
add
adc
lods
add
fwait
and
lock
add
cmp
lock
add
lock
(bad)
(bad)
push
xchg
into
in
add
ret
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
into
push
add
loope
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
or
std
sub
scas
out
xchg
pop
out
add
add
add
(bad)
jmp
add
lock
add
aam
add
xor
lock
add
lock
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
xor
add
ror
lock
dec
add
add
add
xor
add
(bad)
(bad)
(bad)
call
dec
ret
fldcw
lock
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
sti
rcr
fiadd
enter
lock
(bad)
call
jb
mov
fld
adc
xor
push
xchg
and
push
out
imul
dec
jbe
pop
add
inc
(bad)
sbb
mov
add
add
sar
(bad)
push
js
lock
add
lock
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
add
ret
and
movs
cmp
add
std
sub
lock
sbb
cs
aas
fcomp
mov
lods
sub
retf
jp
(bad)
inc
aad
mov
or
popa
dec
push
mov
pop
pop
pop
loop
dec
pop
cmp
add
(bad)
(bad)
(bad)
inc
or
ins
sub
dec
jno
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
xor
add
xchg
lock
add
fs
add
or
add
pop
jnp
dec
and
fmul
pop
fs
movs
jmp
fdivr
addr16
sbb
mov
iret
inc
sbb
sbb
cmps
push
xor
jbe
aad
sbb
fsub
mov
in
aam
bound
fld
int
sti
push
stos
dec
(bad)
(bad)
and
(bad)
xchg
stos
out
fimul
nop
out
inc
aas
rcl
push
pop
mov
jb
int3
cmp
pushf
mov
mov
push
add
jo
push
or
inc
pop
cmps
das
movs
xchg
xchg
xchg
adc
(bad)
movs
in
in
ins
test
mov
add
add
lock
(bad)
(bad)
call
adc
fst
add
sar
(bad)
push
add
or
icebp
daa
aas
push
cmp
push
ins
std
pop
(bad)
aad
cmp
or
add
mov
aaa
neg
adc
cmp
loopne
mov
sbb
ffree
sub
adc
pop
mov
push
mov
jb
movs
or
sbb
(bad)
outs
jnp
ja
shl
xchg
imul
and
mov
push
clc
popa
pop
dec
pop
jmp
sbb
loopne
adc
imul
pop
jb
jnp
loopne
sbb
pop
std
or
pusha
div
push
pusha
sbb
mov
jmp
cwde
pop
js
aaa
in
mov
ret
shr
sub
pop
jne
push
cs
or
add
cmp
add
(bad)
(bad)
(bad)
jmp
adc
mov
lock
(bad)
jmp
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
aad
les
mov
jb
and
mov
and
out
and
push
mov
sub
iret
mov
gs
sub
push
adc
jg
sub
bound
xor
shl
push
int3
add
adc
in
inc
test
cmps
lods
(bad)
sar
mov
xchg
fnsave
(bad)
(bad)
(bad)
(bad)
call
sbb
and
add
lock
add
mov
add
or
add
inc
push
mov
jo
and
test
dec
pop
sub
mov
fisubr
sahf
mov
iret
je
jbe
sub
add
(bad)
(bad)
(bad)
call
cdq
push
(bad)
hlt
xchg
adc
sar
(bad)
inc
add
lock
in
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
fisubr
add
add
add
sbb
loope
pop
arpl
popf
xlat
stc
shl
pop
add
cmp
jne
add
fdivr
mov
cmps
jge
scas
jo
jmp
mov
add
(bad)
mov
fmul
cmps
fnstenv
dec
aam
shl
xor
fidiv
mov
add
add
add
je
add
add
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
lock
into
add
xor
add
(bad)
(bad)
(bad)
dec
push
pop
jge
aad
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
icebp
adc
adc
add
lock
add
dec
(bad)
mov
xchg
mov
ror
in
mov
lods
lods
daa
dec
test
test
adc
pop
and
sbb
aam
lahf
push
inc
jno
xchg
add
add
sti
mov
rol
ins
jbe
(bad)
sbb
dec
or
mov
mov
push
xchg
mov
jl
aas
mov
fs
push
mov
dec
gs
push
add
aam
sub
and
push
loopne
or
dec
imul
aad
sbb
sbb
call
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
gs
je
xor
add
(bad)
dec
add
lock
add
adc
add
(bad)
(bad)
(bad)
dec
jbe
inc
sti
inc
in
(bad)
(bad)
(bad)
cmp
add
add
add
adc
add
push
add
lock
add
sub
fiadd
lock
add
add
jge
mov
fisub
add
mov
lea
jae
xchg
popf
push
loopne
inc
adc
push
popf
sti
ficom
add
add
pop
in
ficom
sti
push
out
or
jns
inc
test
into
pop
or
cbw
cmps
xchg
or
sub
xchg
ret
add
adc
add
out
sbb
adc
sub
sub
cli
adc
out
out
pop
jne
cld
shl
cs
das
lds
leave
push
test
stos
sbb
sub
mov
cmp
je
push
sbb
pop
pop
mov
out
fld
xchg
in
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
test
lock
jp
xor
pop
sti
mov
iret
adc
jo
or
(bad)
bound
inc
hlt
sub
or
ret
dec
xchg
push
fcom
ds
sub
cmp
outs
neg
dec
jae
cdq
sub
scas
into
clc
push
popa
sar
ja
dec
aaa
add
add
lock
(bad)
(bad)
(bad)
faddp
fs
mov
cmp
lock
(bad)
push
add
lock
(bad)
(bad)
call
(bad)
(bad)
sub
sar
(bad)
jmp
in
rcl
sbb
outs
loope
mov
sub
jnp
out
clc
inc
dec
fcomi
fisub
mov
adc
dec
xor
(bad)
(bad)
(bad)
js
outs
fs
(bad)
int3
loopne
add
sar
(bad)
inc
mov
inc
xchg
push
jb
push
test
fisubr
xor
push
outs
add
add
xchg
mov
adc
pop
add
dec
adc
pop
icebp
fiadd
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
loope
add
lock
dec
add
cmps
stos
nop
sbb
inc
gs
fdivr
push
mov
(bad)
sbb
test
sub
test
loope
pusha
cmps
retf
cmp
lock
add
add
add
add
lock
add
or
add
(bad)
(bad)
(bad)
inc
dec
jmp
add
dec
lds
inc
add
lock
add
sbb
mov
mov
xchg
xchg
jmp
lahf
or
push
inc
call
mov
dec
les
fcom
bound
in
mov
mov
cmps
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
add
test
add
lock
add
lods
mov
inc
popf
adc
mov
or
ins
add
adc
retf
adc
cmp
ficomp
in
sbb
jb
fwait
xchg
xor
rol
mov
ficom
xor
add
sti
sbb
mul
push
cmps
inc
mov
aad
in
sbb
int3
sbb
push
pop
mov
sbb
inc
mov
cld
retf
movs
fistp
adc
mov
cwde
stc
call
xor
sahf
mov
pop
jns
sub
lock
add
push
add
sbb
lock
(bad)
(bad)
jmp
loope
and
(bad)
(bad)
(bad)
fisubr
push
jne
mov
repnz
push
sub
cs
adc
out
inc
out
push
jo
pop
cmp
mov
pop
das
mov
or
(bad)
fs
lods
dec
and
sti
push
xchg
pop
add
cmp
(bad)
(bad)
push
pop
and
xchg
add
call
dec
mov
rol
push
gs
enter
sub
and
mov
xchg
lahf
cmps
fyl2x
sbb
imul
jmp
dec
cli
shl
xchg
fwait
xor
add
aaa
in
imul
push
leave
inc
add
xchg
cmp
cmp
fbstp
sar
push
mov
push
jno
lea
call
pushf
arpl
lods
inc
ss
cmp
jno
push
or
inc
push
add
lock
adc
and
and
lock
add
mov
add
add
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
dec
mov
dec
cmp
out
outs
xchg
xor
pop
inc
inc
push
movs
dec
lods
sahf
pop
(bad)
sti
into
xor
retf
movs
test
scas
mov
push
stos
(bad)
xchg
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jl
call
das
stc
cmps
mov
mov
adc
arpl
push
int3
out
imul
call
pop
aaa
je
dec
jno
cmp
iret
test
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
arpl
pop
or
pop
into
outs
or
jne
repz
mov
bnd
test
mov
(bad)
imul
add
mov
out
(bad)
xchg
push
sub
icebp
loopne
imul
or
and
gs
inc
cdq
dec
dec
xor
outs
or
pop
mov
jo
aas
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
popf
dec
rdtsc
ins
push
scas
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
or
scas
add
mov
add
mov
add
add
add
xor
lock
add
jmp
inc
inc
xchg
lods
lds
mov
and
ss
or
rol
dec
inc
scas
imul
ins
(bad)
icebp
popf
push
or
pop
in
pop
sbb
xchg
loop
lods
mov
sbb
lock
add
add
add
mov
add
lock
push
popa
pushf
sub
jle
mov
jge
test
jns
jle
stos
inc
lods
push
cmps
cmps
fmul
cmp
jne
xor
lock
add
or
(bad)
(bad)
call
lock
xchg
sar
(bad)
inc
add
xchg
nop
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
(bad)
dec
sub
clc
cmp
add
test
add
imul
add
add
add
xor
ds
mov
or
div
leave
icebp
push
sbb
pop
and
mov
sbb
mov
in
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
adc
adc
or
add
mov
dec
ins
sbb
add
lock
(bad)
dec
add
lock
add
inc
add
lock
out
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
js
(bad)
or
js
pop
mov
add
cmp
add
add
add
fs
loope
adc
cwde
dec
scas
dec
imul
pop
nop
jne
out
add
mov
ret
pop
inc
push
dec
fcom
enter
push
stc
add
in
jmp
cwde
and
out
pop
xor
xor
es
mov
retf
bound
xchg
add
cdq
cmps
bound
add
dec
pop
cmp
adc
push
xchg
cmp
sub
xor
inc
sub
or
push
adc
adc
xor
cmp
stos
loopne
cld
dec
(bad)
ins
test
loop
mov
and
jge
imul
push
loopne
cwde
popa
mov
scas
not
cld
into
outs
out
dec
mul
(bad)
mov
sbb
movs
xchg
jmp
add
or
add
leave
mov
add
sub
xchg
je
repnz
sub
add
cmp
fidivr
inc
popa
push
aam
sub
ret
cmp
fcmovnu
iret
out
cwde
add
mov
inc
push
xchg
jns
adc
cmps
out
jnp
ret
mov
mov
xchg
adc
sub
add
into
das
mov
aas
mov
test
(bad)
adc
or
ss
std
push
ds
and
jmp
mov
test
or
add
je
idiv
ja
out
enter
mov
fcomp
fadd
ret
push
dec
loopne
mov
xor
rcr
ds
jb
push
pop
mov
call
mov
or
jb
sti
leave
xor
adc
pop
loop
dec
inc
and
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
ds
cmp
popf
pushf
(bad)
data16
add
add
sar
(bad)
call
in
add
lock
add
lock
add
lock
add
sbb
leave
sbb
fst
fcom
mov
shl
cmp
dec
clc
clc
sbb
test
sti
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
jmp
dec
add
lock
add
sub
or
mov
lock
add
push
inc
add
daa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
and
push
loop
inc
and
add
inc
movs
xchg
outs
xor
cmp
retf
test
mov
dec
sbb
push
xchg
or
xor
dec
push
call
fstp
mov
mov
sub
pop
or
int
test
(bad)
push
or
adc
adc
xchg
retf
daa
xchg
inc
jl
imul
fbld
mov
loope
or
pop
movs
add
in
cmp
sub
add
sbb
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
pop
jg
dec
add
lock
(bad)
(bad)
inc
stc
rol
push
add
sar
(bad)
call
mov
js
pushf
or
xchg
popa
icebp
inc
fcmovnbe
fld
fimul
sar
stos
push
adc
mov
mov
jecxz
test
jae
in
cdq
pop
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ret
jne
push
test
add
lock
ja
lods
jmp
std
test
push
scas
aaa
xchg
int3
jmp
mov
out
xchg
add
push
xor
nop
lea
leave
mov
push
aas
out
aaa
add
jmp
cmp
add
(bad)
pushf
mov
or
(bad)
adc
inc
xor
dec
addr16
add
inc
add
adc
xor
out
add
pop
iret
jp
mov
pusha
add
lock
add
nop
outs
inc
adc
(bad)
(bad)
jmp
add
lock
add
lock
(bad)
(bad)
call
or
dec
add
sar
(bad)
jmp
or
and
add
lock
cli
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
std
push
add
sbb
jl
das
jne
mov
(bad)
fisub
aad
test
push
and
into
xor
push
(bad)
fwait
jle
ret
jae
fwait
iret
sar
mov
arpl
pop
dec
(bad)
adc
sbb
inc
scas
cmp
int
fstp
inc
xor
out
mov
stos
loope
sbb
xor
xor
sub
rol
lock
(bad)
(bad)
jmp
adc
sub
(bad)
call
in
test
pop
std
cmp
jo
jecxz
pop
icebp
and
out
test
inc
mov
sbb
nop
jnp
call
pop
push
xor
dec
and
lea
test
push
or
addr16
pop
pop
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
stc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
add
(bad)
(bad)
(bad)
call
pusha
arpl
outs
xchg
fild
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
aas
dec
dec
add
lock
add
push
add
add
add
push
add
lock
lock
add
jg
shl
std
sub
sbb
xor
dec
aad
mov
fistp
add
inc
inc
jnp
shr
sbb
lock
or
outs
push
icebp
mov
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xlat
mov
mov
lock
add
lods
cld
xchg
in
fs
lahf
pop
aam
into
dec
cs
(bad)
das
mov
lock
cmc
movs
sar
or
scas
fst
mov
(bad)
loop
jl
inc
lahf
sub
arpl
adc
push
xchg
and
mov
lea
adc
ss
into
jmp
shl
les
shr
dec
shl
and
imul
push
pusha
addr16
sub
nop
or
icebp
pop
ret
repnz
push
je
mov
test
adc
mov
cmp
dec
sbb
pop
dec
out
sbb
xor
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
out
mov
cwde
xor
fiadd
lock
add
lock
lods
xchg
(bad)
dec
aam
dec
hlt
into
cmps
cmp
not
call
pop
lods
movs
(bad)
arpl
lahf
lods
cld
or
outs
inc
dec
adc
sub
in
mov
jmp
jmp
popa
cmp
mov
xlat
fild
(bad)
scas
dec
hlt
push
sahf
(bad)
sbb
out
rcl
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
lock
add
add
out
xor
cmps
jae
(bad)
(bad)
inc
iret
add
lock
add
lock
retf
shl
loopne
push
add
or
jne
xor
jo
daa
and
js
cmp
dec
rol
sbb
iret
mov
les
add
repnz
idiv
and
lds
dec
imul
xor
jae
adc
jmp
(bad)
adc
pushf
adc
mov
jbe
ss
dec
jns
neg
out
sbb
std
popa
in
int
je
mov
not
arpl
and
or
cld
pop
clc
into
into
dec
and
loope
add
add
add
add
add
or
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
add
lock
(bad)
(bad)
(bad)
fadd
cld
in
cli
add
sar
(bad)
jmp
popf
in
dec
mov
js
ret
dec
pop
aam
jge
fisubr
lea
jbe
repnz
(bad)
xor
lods
(bad)
push
sub
jge
pusha
scas
scas
cmp
lea
les
test
pop
add
add
mov
popf
add
cmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
or
push
and
loop
jmp
jp
xchg
and
cmp
jnp
adc
cmp
lds
inc
or
mov
dec
ret
addr16
fldcw
ret
dec
push
mov
je
ret
and
dec
fst
(bad)
cmp
add
or
add
xchg
add
(bad)
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jbe
js
test
stos
ret
ss
and
cwde
sbb
out
arpl
fild
inc
lds
call
test
cmp
(bad)
mov
inc
pop
fwait
cmp
rcl
push
xchg
push
jge
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
cwde
sub
inc
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
jecxz
inc
lods
lahf
pop
add
lock
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
cmps
mov
sahf
aad
pop
cmp
add
(bad)
(bad)
(bad)
(bad)
fcmovbe
cld
fcom
cmp
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
cmps
mov
sahf
aad
pop
mov
add
mov
add
jmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
sbb
imul
lock
add
push
daa
enter
fwait
out
sar
(bad)
jmp
add
lock
lock
fs
fst
jns
dec
test
ins
mov
xchg
adc
fwait
xchg
jnp
into
fimul
fiadd
movs
xchg
jne
sub
mov
cmc
push
jge
and
and
repz
mov
push
inc
cdq
xlat
pusha
dec
bound
bound
jbe
mov
aaa
out
xchg
fs
daa
pop
xchg
out
(bad)
xchg
jmp
sub
js
or
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sbb
lock
lock
mov
sub
test
mov
test
dec
xor
retf
jmp
cld
sub
cmp
mov
dec
loope
js
push
int3
stos
xchg
dec
(bad)
sub
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fidiv
xchg
sar
(bad)
call
push
add
add
add
mov
add
and
ss
add
add
cmc
xchg
add
or
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
stos
rcl
sbb
fwait
push
ret
jnp
sbb
aaa
dec
jle
cmp
icebp
call
and
pop
add
add
add
ins
add
lock
add
hlt
or
inc
aam
(bad)
sar
(bad)
dec
(bad)
add
lock
add
lock
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
jecxz
mov
sub
add
pop
inc
cmp
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repnz
scas
xor
add
mov
add
lock
add
adc
lock
add
lock
test
lock
add
add
lock
add
push
add
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
clc
sub
push
add
add
add
add
add
adc
add
add
add
add
lock
(bad)
(bad)
dec
mov
add
sar
(bad)
push
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
and
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
xor
push
push
pop
mov
mov
rcr
dec
lea
aaa
xchg
loop
ret
imul
cmps
push
outs
inc
ins
mov
lods
cld
add
xor
cmp
xchg
sahf
lock
lahf
mov
in
aas
sbb
imul
cmp
jne
pop
gs
mov
popa
cmp
xchg
(bad)
(bad)
(bad)
(bad)
cli
mov
inc
test
add
lock
popf
add
push
xchg
add
dec
mov
lock
add
sbb
add
push
add
and
cmp
and
xchg
cmp
add
(bad)
(bad)
(bad)
inc
dec
mov
dec
mov
jle
test
lock
(bad)
call
add
lock
xlat
mov
and
loop
call
push
xchg
or
imul
push
int3
adc
mov
jmp
push
test
mov
mov
adc
sbb
xchg
add
add
add
sub
add
dec
cmp
rcr
cmp
arpl
dec
retf
movs
lahf
fld
inc
cmp
mov
aad
repz
add
xchg
xor
std
cmp
repz
aaa
imul
pop
sbb
jbe
ret
dec
call
ss
out
jae
jbe
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
mov
dec
aaa
add
lock
mov
lock
mov
movs
jecxz
repz
mov
cmc
add
stos
pusha
push
out
mov
mov
jl
pop
sub
test
icebp
sub
add
idiv
mov
nop
inc
jp
jae
cmp
cs
(bad)
adc
dec
mov
hlt
sbb
inc
jno
mov
jmp
les
push
test
xchg
fnstcw
cdq
push
fisub
pop
add
sub
mov
daa
cmp
ret
out
mov
repnz
aam
push
aaa
sysexit
retf
mov
sti
aam
call
mov
les
sbb
push
test
cmp
add
(bad)
(bad)
(bad)
push
push
jns
cmps
retf
add
sar
(bad)
(bad)
aas
push
lock
add
lock
pop
mov
out
xchg
pop
jnp
jle
fdivr
cld
ja
pop
jge
sub
adc
pop
or
in
xlat
pop
aam
cwde
in
adc
or
lea
(bad)
and
add
mov
mov
push
pop
mov
cmc
pop
mov
(bad)
inc
mov
fmul
jl
call
(bad)
loope
and
or
sahf
sbb
xchg
les
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
mov
add
lock
loope
lock
(bad)
(bad)
jmp
cmp
lock
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
ins
add
lock
add
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
pop
add
push
add
and
jnp
mov
stc
hlt
test
xchg
retf
push
adc
jecxz
sub
call
inc
xchg
xchg
mov
retf
stos
retf
popa
pop
or
pusha
out
pushf
mov
ss
leave
lock
xchg
popa
arpl
add
add
mov
cwde
add
das
xchg
clc
mov
adc
jnp
and
xchg
out
mov
mov
ins
imul
neg
jbe
xor
rol
mov
sahf
jecxz
in
nop
hlt
(bad)
sar
xchg
push
cmc
call
mov
push
outs
fnstenv
std
mov
push
nop
lock
or
aad
xchg
dec
mov
iret
test
push
mov
dec
fst
and
ins
cmp
imul
inc
sahf
ror
push
(bad)
jg
fisub
adc
xchg
fistp
sub
push
mov
sar
inc
cmps
ss
jle
and
pop
xchg
and
cdq
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
lock
add
lock
add
lock
(bad)
(bad)
(bad)
aas
ud2
test
or
jg
add
sar
(bad)
(bad)
mov
fiadd
lock
add
adc
add
add
add
pop
jle
lock
sub
lock
jae
lock
add
and
pop
ins
adc
adc
cmp
xchg
gs
dec
es
aaa
and
in
xchg
call
ret
and
add
inc
shl
jle
adc
lock
retf
push
inc
outs
xor
sbb
jb
movs
mov
xchg
cmps
shl
pop
jno
dec
(bad)
cwde
xchg
dec
imul
stc
jno
frstor
push
bound
(bad)
jae
test
add
pop
and
(bad)
(bad)
(bad)
(bad)
in
clc
xor
inc
mov
lock
(bad)
dec
js
xor
mov
pop
push
adc
mov
(bad)
fld
xor
retf
and
sbb
cmps
mov
in
pop
mov
inc
rcl
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
fst
jle
cmc
fwait
ret
(bad)
(bad)
call
add
mov
push
lock
(bad)
(bad)
jmp
pop
sbb
mov
mul
gs
and
mov
ja
outs
enter
and
jg
mov
mov
inc
aas
or
adc
jecxz
xor
leave
out
arpl
hlt
pop
repnz
jno
gs
mov
dec
fist
or
retf
inc
daa
sub
js
add
dec
das
ret
cmp
fild
dec
jne
lock
in
lock
add
dec
and
push
sti
std
sbb
pop
movs
xchg
shl
js
nop
dec
movs
cmp
cmp
fwait
adc
mov
xor
xor
add
(bad)
(bad)
(bad)
push
mov
mul
sub
sar
(bad)
(bad)
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
jmp
mov
(bad)
(bad)
cmp
add
shl
lock
(bad)
(bad)
call
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
add
ret
mov
add
int
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
call
pop
rcl
xor
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
das
out
jb
call
sub
mov
xor
mov
jp
or
or
pop
cmps
lea
cmc
cdq
xchg
xchg
in
mov
jge
ss
leave
jnp
hlt
inc
mov
adc
pop
mov
lods
mov
mov
xor
xor
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
rcr
enter
shl
leave
adc
xor
push
stc
mov
add
sbb
jg
dec
push
mov
retf
inc
cld
sti
arpl
push
add
push
xchg
add
nop
or
mov
loopne
mov
and
repz
movs
dec
mov
jo
xchg
lahf
xchg
ret
add
pop
dec
sub
push
dec
outs
mov
fsub
lock
sub
pop
or
scas
out
inc
xor
mov
adc
xchg
pop
mov
xchg
add
mov
mov
es
xchg
pop
ret
mov
xor
cwde
or
dec
loopne
and
out
lds
mov
dec
scas
xchg
hlt
cmp
std
aaa
mov
(bad)
jo
jo
adc
aas
mov
or
push
mov
inc
sub
cmp
lods
mov
cs
adc
sub
mov
stc
in
dec
scas
(bad)
mov
sub
adc
int
and
pop
sbb
mov
cmp
ret
pop
(bad)
iret
shr
hlt
(bad)
inc
int3
das
icebp
lahf
test
add
jbe
fiadd
lods
test
inc
dec
xor
das
dec
jo
sub
(bad)
push
jno
(bad)
pop
loope
js
mov
or
mov
mov
mov
sub
jmp
lock
mov
gs
jb
movs
adc
lds
mov
mov
mov
and
bound
pop
or
rcl
out
stos
rol
xor
xchg
inc
push
test
outs
int
adc
mov
ins
mov
sbb
icebp
pop
lods
stos
js
fild
fwait
lds
sbb
xchg
jmp
pop
fmul
sub
leave
(bad)
xor
cmp
and
pusha
sbb
mov
mov
ret
add
jno
push
call
ss
retf
and
test
jp
sub
lds
lahf
jmp
or
gs
out
jmp
and
test
scas
cld
repnz
mov
test
mov
pop
iret
movs
ja
mov
mov
and
pop
cmp
das
into
lea
in
jl
dec
mov
daa
inc
jne
jo
sbb
pop
ins
sub
aaa
jb
add
rol
loop
mov
adc
test
mov
sub
inc
add
imul
call
fwait
mov
jle
xor
xchg
call
lock
push
mov
cld
sub
in
xor
or
frstor
pop
cmp
or
dec
lahf
popf
dec
(bad)
rol
pop
jb
gs
mov
or
mov
or
adc
and
mov
aaa
and
pushf
push
jg
mov
jecxz
shr
xor
inc
mov
mov
pop
or
(bad)
mov
and
(bad)
mov
inc
sbb
lea
jp
ja
push
cmp
fs
xor
add
mov
push
std
or
mov
out
fmul
les
movs
jmp
sbb
jge
sbb
mov
pop
call
dec
std
xchg
add
lods
dec
cmp
xor
cmp
push
and
les
ins
add
sub
or
push
pop
jecxz
xor
push
fistp
mov
inc
in
in
pop
sbb
xor
addr16
push
pop
adc
mov
jecxz
push
xchg
jp
leave
jnp
test
in
fstp
cmps
nop
nop
inc
data16
inc
and
and
xchg
imul
popf
cmp
cmp
in
inc
sub
lock
mov
jecxz
enter
(bad)
xlat
cmps
push
stos
or
ror
mov
sub
scas
fisttp
in
dec
int3
loope
push
arpl
push
pop
dec
inc
aaa
push
into
mov
xchg
add
std
movs
sar
(bad)
mov
bound
xor
mov
fwait
sub
jnp
add
xor
jne
mov
stos
xor
jns
add
shr
adc
xchg
add
enter
jle
xor
push
jl
xor
sub
jae
sub
pop
loopne
(bad)
push
retf
jge
add
jg
imul
mov
pop
(bad)
idiv
xor
out
add
xchg
aas
je
shl
clc
push
iret
mov
cmp
aas
pop
mov
pop
mov
clc
lds
dec
inc
sub
and
lock
push
int
int
pusha
inc
(bad)
shl
xor
gs
adc
or
ret
out
pop
(bad)
xchg
loopne
popf
clc
loope
mov
fs
mov
cmps
adc
push
mul
adc
dec
cmc
adc
xor
adc
jno
push
call
xchg
ins
dec
fsubr
pop
add
(bad)
(bad)
or
(bad)
xchg
sti
sub
sbb
dec
mov
and
sahf
sub
fidivr
and
sti
or
int3
test
fdiv
sbb
stc
xor
call
into
out
das
jno
ja
push
test
out
jns
xchg
test
fldcw
sar
and
out
ins
adc
mov
imul
sbb
sbb
xor
dec
(bad)
test
add
mov
dec
int
mov
pop
add
sti
adc
loope
jp
aad
and
pop
pop
add
ja
fild
push
push
add
retf
and
stc
jbe
and
pop
xchg
or
adc
dec
dec
and
push
xor
inc
inc
xor
in
mov
aaa
fimul
dec
cld
jle
rol
inc
mov
xchg
rcr
mov
mov
add
movs
pop
loop
cmp
and
or
call
ficomp
bound
mov
out
pop
and
inc
dec
out
add
inc
push
xchg
mov
in
popf
mov
sub
sbb
cmp
call
xor
ins
dec
in
arpl
dec
inc
inc
int3
or
inc
cmc
aad
shr
or
fstp
ror
xchg
imul
mov
sub
aaa
ret
push
dec
xor
int3
loopne
xchg
push
repz
fwait
and
cld
and
cmps
cmp
fadd
ja
out
push
xlat
pop
movs
mov
adc
scas
xor
das
pop
outs
sahf
pop
aad
cmps
push
out
lods
jl
xchg
pop
cmc
lods
outs
push
mov
lea
cmp
push
xchg
push
xchg
mov
shl
inc
and
xchg
mov
xchg
pop
sub
cwde
mov
jmp
mov
scas
mov
dec
cmp
retf
jnp
dec
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsubr
out
add
and
push
mov
push
fwait
addr16
fdiv
mov
leave
sbb
loope
in
in
call
lods
xor
jne
ja
fs
pusha
jmp
add
lock
(bad)
(bad)
inc
sbb
mov
add
(bad)
push
add
adc
add
lock
add
add
add
mov
daa
add
adc
add
lock
test
add
pop
shl
adc
rol
xor
push
cmps
xchg
repnz
push
in
or
jns
test
cmps
nop
add
enter
mov
jmp
pusha
xchg
mov
mov
add
lock
(bad)
push
push
lock
add
inc
add
lock
daa
add
add
add
cwde
daa
add
push
add
lock
add
lock
(bad)
(bad)
inc
xchg
push
and
lock
(bad)
call
retf
add
add
add
add
lock
lock
add
outs
out
add
adc
popf
in
enter
xor
sbb
scas
popa
popa
shrd
(bad)
and
shr
jecxz
je
sbb
pop
cmp
sbb
xchg
fdiv
test
sbb
repz
add
add
sbb
or
mul
push
in
pop
jge
jl
call
lods
gs
dec
adc
mov
dec
push
sbb
pop
cli
sahf
inc
ja
push
test
add
sar
(bad)
dec
add
lock
add
lock
add
lock
push
dec
arpl
out
daa
sub
pop
push
and
mov
data16
push
or
lock
(bad)
(bad)
inc
dec
(bad)
adc
aas
mov
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fstp
lock
mov
lods
(bad)
movs
aad
and
cli
test
mov
dec
mov
sbb
(bad)
mov
or
out
mov
inc
leave
call
cmc
pop
mov
test
add
lahf
lea
and
outs
add
jmp
aad
in
lock
inc
mov
and
sbb
xchg
repz
push
iret
pop
cld
daa
out
xor
inc
cmp
call
sbb
jp
cwde
push
ret
lods
loope
sbb
lock
(bad)
(bad)
jmp
iret
ss
js
outs
ss
push
into
inc
ds
sub
movs
inc
and
dec
sti
cmp
imul
imul
fwait
sub
inc
into
out
mov
dec
call
mov
dec
retf
in
stos
aad
shl
out
push
enter
mov
(bad)
jle
pop
rol
push
sub
(bad)
fld
pop
mov
fild
mov
cmp
sbb
dec
mov
add
add
add
add
rcl
push
clc
add
ret
(bad)
(bad)
call
js
lock
add
adc
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jb
(bad)
xor
add
imul
(bad)
(bad)
(bad)
(bad)
call
add
sub
mov
jecxz
xbegin
jle
out
jp
ror
shr
jbe
xchg
mov
jecxz
ins
cli
mov
les
push
popa
scas
pop
ss
std
fimul
xchg
cdq
out
add
ror
into
fdiv
cs
sub
fistp
push
jle
fs
or
ret
add
jmp
cs
cmp
xchg
pop
xor
pop
aas
cmp
push
scas
add
add
add
(bad)
push
add
jg
add
push
add
and
cmc
popa
ficomp
ror
popf
or
inc
shl
ja
adc
add
dec
mov
or
popf
imul
aaa
xchg
out
xchg
or
fld
out
and
xor
lds
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
mov
sub
ss
cs
int
mov
mov
adc
mov
sbb
add
xchg
mov
inc
btr
mov
scas
dec
or
xchg
dec
adc
jecxz
hlt
ds
push
popf
or
call
xchg
xchg
xlat
popf
xchg
jmp
jb
sbb
add
push
mov
and
dec
push
(bad)
cld
sub
inc
adc
push
jle
out
or
or
outs
xchg
or
push
div
jge
add
adc
mov
sbb
jmp
pushf
cmps
ja
pop
(bad)
(bad)
push
stos
xor
sahf
fwait
mov
std
sub
jg
mov
(bad)
add
inc
pusha
adc
xor
test
mov
push
arpl
add
imul
mov
sub
pop
test
xor
stos
xchg
inc
fld
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
or
add
cli
add
aad
pusha
xchg
xor
and
scas
mov
sbb
mov
sbb
push
push
nop
xchg
inc
ret
add
(bad)
(bad)
(bad)
push
mov
add
sar
(bad)
jmp
cmps
add
or
add
mov
out
fistp
jecxz
test
or
mov
jno
inc
xor
push
gs
mov
push
cmp
xor
(bad)
popf
mov
xchg
add
int
and
lea
adc
(bad)
mov
xchg
inc
lods
(bad)
cmps
mov
adc
xor
shl
xor
or
cs
mov
leave
clc
gs
ins
inc
retf
add
rol
mov
xor
fist
push
xor
xchg
mov
outs
dec
idiv
retf
xor
add
add
fwait
retf
inc
inc
lock
fistp
xor
xchg
add
bound
(bad)
and
in
enter
mov
jle
inc
push
mov
mov
and
xchg
in
mov
dec
test
or
leave
imul
adc
adc
sbb
stos
(bad)
in
inc
into
push
pop
push
mov
(bad)
xlat
aaa
or
popf
mov
out
test
out
dec
dec
aas
sub
sbb
xchg
push
adc
mov
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
sub
hlt
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
pushf
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
cmp
inc
fmul
add
cmc
add
ins
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
das
inc
imul
mov
mov
pop
out
jmp
(bad)
pushf
adc
xchg
mov
imul
arpl
jbe
sub
aam
mov
inc
dec
gs
and
push
xor
(bad)
fwait
std
call
or
cmp
jmp
xlat
lock
push
jp
jle
retf
mov
retf
ficom
aas
pop
and
daa
sti
push
add
lock
(bad)
(bad)
jmp
(bad)
std
ds
push
sub
add
sar
(bad)
push
add
(bad)
(bad)
(bad)
jmp
rol
(bad)
cwde
xor
sar
(bad)
jmp
pop
add
adc
add
push
add
lock
add
je
add
xchg
xor
add
lods
mov
in
js
push
add
add
lock
(bad)
push
add
lock
add
movs
add
lock
dec
(bad)
sub
in
sbb
add
nop
int
ficomp
pop
add
dec
mov
cwde
push
retf
xor
jb
ins
imul
neg
out
jo
sub
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
xchg
xchg
mov
and
add
retf
sti
add
push
add
lock
add
pop
xchg
and
sar
(bad)
inc
jns
lock
add
pop
add
lock
add
lock
add
pop
inc
xor
retf
mov
(bad)
dec
add
lock
add
retf
rol
ss
ror
add
lock
pushf
icebp
pop
js
imul
out
cli
cmp
pop
push
in
js
pop
outs
fisttp
retf
pop
movs
jle
mov
push
rep
cdq
jle
movs
int3
in
inc
iret
add
pop
pop
jmp
sub
add
repnz
jns
mov
movs
gs
adc
aam
xrelease
add
leave
dec
mov
cmps
push
inc
test
enter
pop
cwde
aad
lock
add
sub
add
add
add
add
add
add
add
dec
mov
add
add
add
xchg
push
add
add
add
mov
ror
mov
test
xor
pop
mov
lods
dec
jo
push
push
int3
loopne
rol
mov
cmp
(bad)
cmp
jne
mov
icebp
adc
nop
not
xchg
adc
adc
jl
pop
or
push
jge
bound
jbe
inc
add
sbb
add
push
cmp
lock
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
push
jne
add
and
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
fwait
jp
cmc
inc
add
lock
add
or
(bad)
(bad)
jmp
push
or
(bad)
inc
add
mov
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
jg
mov
out
add
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
mov
retf
xlat
ins
sahf
push
xchg
(bad)
cmp
fisub
push
mov
jno
pop
dec
cmp
nop
std
push
push
mov
pop
and
lea
inc
outs
jae
pusha
xchg
daa
mov
fsub
dec
pop
jmp
cmp
and
les
jno
push
pop
fistp
sub
loop
mov
rol
fldenv
xor
mov
xchg
adc
dec
pop
hlt
pop
mov
sar
(bad)
jmp
add
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
movs
mov
and
hlt
jmp
cs
aaa
push
push
rol
adc
rcl
pop
add
sbb
adc
outs
jge
repnz
mov
scas
jmp
(bad)
(bad)
(bad)
call
push
sahf
cdq
into
push
add
jmp
mov
dec
push
js
jp
push
jae
mov
cmp
jmp
xor
cmp
add
addr16
jmp
jo
add
lock
(bad)
(bad)
jmp
jmp
mov
pop
push
pop
add
inc
add
lock
add
fwait
mov
add
mov
add
mov
lock
jmp
aas
dec
stos
pop
xchg
bound
sub
stc
cwde
adc
xor
(bad)
leave
xchg
sub
push
sub
xchg
je
dec
aaa
lea
rcl
pop
cdq
add
int
sub
xchg
mov
rcr
add
add
add
(bad)
(bad)
(bad)
push
bound
xor
add
inc
add
lock
add
lock
lock
add
call
cld
sub
mov
fwait
(bad)
data16
pusha
sbb
xor
xor
cmp
xchg
in
pushf
outs
outs
push
aas
ficom
out
jne
or
imul
pop
pop
ins
sbb
or
adc
add
lock
(bad)
(bad)
dec
push
(bad)
mov
add
(bad)
push
sub
fsubr
mov
mov
ret
sbb
sbb
sub
xor
(bad)
ret
mov
pop
dec
lods
xchg
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jno
sahf
xor
add
fwait
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
outs
push
cmc
mov
lock
add
lock
(bad)
(bad)
call
xor
jne
lods
ds
(bad)
(bad)
inc
popf
outs
jmp
jne
dec
mov
add
out
ins
adc
fisttp
jns
adc
fsubr
or
out
repnz
enter
sbb
mov
fisttp
ins
shl
sbb
pop
mov
shl
pop
pop
add
add
cmovb
lock
add
add
jne
pop
stos
jne
mov
and
jmp
sahf
mov
cld
and
popa
and
mov
push
test
mov
ins
mov
std
icebp
push
cwde
xlat
mov
retf
pop
iret
in
mov
push
sahf
inc
cmp
adc
pushf
push
loope
xchg
sub
enter
int
add
lock
js
cmp
add
add
retf
popa
fistp
pop
test
js
test
sub
(bad)
neg
scas
enter
push
fs
pop
cdq
push
xchg
sub
add
(bad)
(bad)
(bad)
push
jg
xor
fst
(bad)
call
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
aad
xchg
and
mov
xor
cmp
or
sbb
fstp
adc
inc
and
test
jmp
sbb
hlt
aad
retf
dec
jecxz
fstp
inc
sti
push
in
test
fadd
pop
loop
inc
mov
bound
cmp
rol
pop
int3
ja
int
icebp
scas
mov
mov
mov
add
add
pushf
sbb
dec
add
add
sar
(bad)
push
jp
lock
add
cmp
add
lock
inc
fcom
call
(bad)
outs
and
out
mov
loope
cmc
lds
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
imul
mov
add
and
dec
mov
ds
jmp
push
xchg
(bad)
fcomp
xchg
mov
inc
sub
mov
ficom
mov
jge
popa
xor
mov
(bad)
data16
jmp
add
lock
imul
mov
mov
cmp
lock
add
cmp
lock
add
add
add
mov
iret
call
xor
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sahf
shl
push
sbb
sbb
lock
rol
cld
nop
loopne
jle
aas
push
cmp
test
xor
sub
push
push
stc
fisttp
div
das
xchg
jg
add
(bad)
or
sti
lds
into
leave
xchg
mov
xchg
xchg
xchg
add
mov
cwde
mov
push
sti
mov
mov
test
push
push
es
ins
mov
xchg
cmp
fistp
xchg
out
js
and
orps
dec
rcl
jge
push
movs
sbb
pop
and
xchg
fstp
cmps
and
jecxz
cmp
repnz
(bad)
xchg
lds
mov
mov
dec
popa
xor
sti
test
mov
mov
inc
add
add
add
pop
push
add
add
lock
add
add
add
sub
add
or
add
add
add
xchg
add
add
cmp
add
lock
add
pop
xor
inc
fs
icebp
cmp
ficomp
int3
or
call
xchg
and
addr16
lds
add
push
in
mov
je
fdiv
fsubrp
ins
out
jg
jmp
int
xchg
jge
out
inc
retf
xchg
adc
sub
ja
jmp
adc
neg
pop
adc
shr
pop
cmp
retf
xor
add
lock
add
fld
lock
xor
lock
add
dec
add
lock
(bad)
(bad)
call
push
dec
jns
js
pop
add
jmp
add
and
add
lock
lock
add
(bad)
(bad)
(bad)
(bad)
cmp
ret
mov
(bad)
(bad)
push
fwait
mov
test
pop
mov
and
adc
fild
aaa
lods
inc
cli
mov
mov
mov
push
xor
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
cmc
movs
bound
add
and
lock
ins
xchg
in
mov
adc
mov
push
dec
bound
or
push
push
lea
add
and
es
inc
test
popf
sub
or
mov
(bad)
addr16
xchg
ins
push
retf
(bad)
int3
je
xchg
test
aad
ret
loopne
xor
sahf
fstp
mov
inc
pop
mov
test
fadd
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
scas
pop
fcmove
jmp
add
lock
mov
cmp
cmp
mov
mov
mov
or
add
xor
retf
add
dec
push
jae
mov
(bad)
es
repnz
push
stos
pop
nop
sbb
and
popa
jmp
add
repnz
push
retf
data16
(bad)
(bad)
dec
add
lock
add
lock
(bad)
inc
fisub
cmp
jo
and
(bad)
dec
cdq
add
or
add
sub
add
(bad)
(bad)
(bad)
jmp
fwait
adc
(bad)
mov
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
call
jae
shl
or
jmp
push
add
xchg
cmp
lock
add
test
loopne
jns
pop
(bad)
and
popa
loop
shr
sub
scas
jno
ret
cmps
and
repnz
inc
daa
adc
repz
mov
inc
add
lock
(bad)
(bad)
call
imul
lock
(bad)
inc
add
lock
jp
or
lock
add
lock
(bad)
(bad)
jmp
lods
pop
int
rcr
js
sub
jmp
dec
test
sub
inc
(bad)
rcl
fsub
iret
xchg
loopne
daa
cwde
dec
daa
dec
mov
xor
or
push
adc
sub
out
fiadd
add
lock
(bad)
(bad)
call
sbb
adc
sub
lock
(bad)
(bad)
dec
and
fisubr
in
sub
in
mov
push
stos
push
cmp
jae
dec
xchg
lods
jge
loopne
xlat
loope
mul
push
icebp
and
lock
add
add
add
das
cld
add
add
add
or
(bad)
(bad)
lods
push
push
fld
cmp
sbb
dec
adc
mov
dec
(bad)
iret
test
idiv
push
and
mov
adc
sub
pop
mov
sbb
(bad)
pushf
and
mov
imul
int
jo
jno
frstor
enter
xor
mov
popa
sbb
add
popa
sbb
add
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
std
sbb
call
scas
add
inc
mov
je
inc
fs
fisttp
pop
add
push
jmp
inc
shr
dec
push
push
lods
xchg
lods
xor
pop
xchg
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ficomp
and
lds
fnsave
fidiv
pop
inc
jecxz
es
test
ret
imul
pop
mov
movs
mov
loopne
ficom
out
inc
retf
ins
rol
add
lock
(bad)
dec
add
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
inc
xor
xchg
mov
fdivp
xor
jmp
add
lock
(bad)
(bad)
push
out
repz
add
inc
add
lock
add
(bad)
(bad)
(bad)
dec
dec
add
sar
(bad)
inc
mov
(bad)
call
mov
es
cmps
imul
pop
dec
ss
push
cmp
xor
pop
adc
or
imul
dec
(bad)
popf
fcom
lock
(bad)
and
movs
into
push
pop
dec
aad
fidivr
test
mov
mov
adc
jns
shl
xchg
iret
xchg
sti
in
or
ds
cmps
ja
add
push
loop
sbb
sub
cli
dec
push
test
add
add
sar
(bad)
call
add
lock
add
lock
add
lock
sub
lock
sub
lock
add
adc
jae
lods
mov
paddw
clc
or
xchg
fwait
inc
dec
into
nop
bound
lds
in
loopne
xchg
xchg
fist
aas
loop
mov
pusha
ins
in
push
in
int
inc
add
add
add
add
add
fiadd
add
(bad)
(bad)
(bad)
call
(bad)
imul
mov
add
push
pop
js
xchg
and
pop
sub
test
sub
sub
fs
inc
xchg
add
xchg
mov
fadd
cmp
aas
cmp
add
(bad)
(bad)
(bad)
inc
mov
jmp
xchg
ds
call
and
dec
cmc
ins
in
inc
popf
adc
add
and
inc
or
inc
push
xor
or
add
or
add
lock
add
outs
sbb
daa
cmp
ds
cli
inc
mov
pop
add
pop
sub
scas
xchg
cmps
inc
call
ins
xchg
test
push
call
mov
pop
out
jo
inc
push
imul
mov
add
cmp
add
sbb
enter
(bad)
jmp
(bad)
lods
push
lds
loop
in
mov
(bad)
pop
adc
sub
mov
xor
add
lock
add
add
add
shl
lock
add
fisubr
add
xor
add
(bad)
(bad)
(bad)
(bad)
clc
jno
cmp
dec
mul
popa
inc
add
inc
add
lock
movs
add
movs
add
pop
add
lock
(bad)
(bad)
inc
(bad)
pop
xchg
dec
add
inc
add
lock
(bad)
(bad)
jmp
call
in
fisub
dec
add
(bad)
cmp
add
(bad)
(bad)
(bad)
inc
cmp
lock
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sbb
mov
dec
int3
sbb
mov
dec
adc
dec
mov
or
jmp
push
mov
(bad)
or
mov
pop
nop
and
adc
repz
popf
sbb
jbe
cmc
stos
pusha
jo
mov
ds
fcmovnbe
cmp
not
mul
ds
inc
inc
add
adc
addr16
xchg
hlt
test
jg
adc
dec
gs
mov
iret
rcr
movs
pop
into
xchg
sub
xor
jb
jnp
xchg
ja
lock
pop
inc
fisttp
and
cmovae
mov
add
cvttps2pi
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
mov
cld
mov
add
add
add
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
call
and
je
inc
mov
sbb
add
cmp
lock
(bad)
(bad)
call
add
add
add
fstp
aaa
sbb
je
in
xor
mul
cmp
or
cmp
iret
jl
sub
sub
shufps
in
inc
repnz
push
out
sti
push
mov
shl
mov
popf
mov
add
adc
cmp
lock
add
add
add
and
add
(bad)
(bad)
(bad)
jmp
sub
fidiv
add
add
(bad)
call
mov
xor
imul
pop
clc
ds
movs
dec
xchg
jns
idiv
popa
and
(bad)
popf
gs
pushf
mov
inc
add
inc
or
adc
test
sub
add
(bad)
ss
pusha
and
mov
data16
pop
scas
dec
cwde
(bad)
idiv
cmp
cmp
fucom
gs
stos
mov
in
movs
scas
iret
mov
cvtpi2ps
mov
mov
push
mov
scas
push
rol
lock
(bad)
(bad)
call
xlat
adc
test
mov
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
cmp
lock
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
adc
adc
test
add
lock
(bad)
push
mov
add
inc
add
lock
add
lock
call
add
xchg
mov
lock
mov
xor
btr
iret
cdq
fiadd
inc
sbb
push
sar
in
clc
sar
test
push
adc
add
add
add
aaa
dec
xchg
xchg
mov
sar
(bad)
push
add
lock
add
add
lock
add
push
add
lock
(bad)
(bad)
push
scas
(bad)
addr16
(bad)
inc
add
inc
jne
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
mov
in
jmp
inc
add
sub
add
add
add
add
add
or
add
add
add
fndisi(8087
add
add
add
add
add
mov
pop
ins
test
stc
xchg
xchg
ds
push
shl
sbb
adc
scas
add
add
add
mov
push
ins
mov
test
push
shl
inc
ins
imul
jb
sub
xor
jmp
sub
nop
aad
cmps
cmc
ja
xchg
clc
mov
movs
and
mov
lods
sbb
mov
add
lock
add
lock
bound
xlat
add
popf
js
cld
or
mov
xchg
add
inc
bound
dec
in
scas
shr
jmp
call
es
ss
push
cmc
sbb
xchg
jmp
popf
out
fcomp
and
and
popa
(bad)
test
data16
(bad)
cmp
and
stos
stos
outs
mov
and
popf
and
cmc
outs
shl
test
sbb
push
and
mov
loop
les
add
aaa
hlt
push
lods
mov
ss
fiadd
dec
sbb
and
xor
or
out
pop
xor
cmps
dec
sbb
scas
out
out
mov
movs
nop
jo
xchg
pop
jb
scas
and
out
lods
add
test
fistp
dec
xchg
cmp
mov
xlat
cmp
and
loope
movs
gs
retf
mov
(bad)
sbb
aad
push
imul
xchg
arpl
cs
shl
and
mov
dec
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
ds
(bad)
xchg
mov
adc
adc
movs
shl
sar
add
and
ret
mov
sub
sbb
bound
icebp
jbe
jmp
test
mov
(bad)
dec
inc
hlt
xchg
imul
icebp
lea
mov
mov
pop
retf
sub
sbb
jecxz
leave
mov
sub
lock
add
or
(bad)
(bad)
dec
xor
mov
xchg
(bad)
das
sar
(bad)
inc
add
jecxz
add
inc
add
lock
lahf
add
(bad)
cmp
lock
dec
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
js
dec
sub
add
mov
add
sbb
add
and
add
and
add
sbb
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
jmp
push
adc
(bad)
(bad)
(bad)
push
scas
(bad)
rdpmc
add
lock
dec
add
iret
mov
in
add
xor
sbb
adc
call
xchg
push
inc
outs
mov
pop
xor
shr
inc
push
repnz
hlt
aam
imul
jno
(bad)
in
xchg
mov
int
imul
dec
fs
fnstsw
xchg
mov
mov
sar
ins
push
and
imul
aad
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
popf
fnstsw
add
lock
lock
pop
(bad)
push
add
lock
xlat
add
xchg
test
inc
push
xchg
jg
out
int
or
add
stos
sub
ss
and
out
or
pop
ror
push
outs
mov
sub
xchg
fisubr
sbb
xor
test
cmc
ss
pop
inc
nop
mov
add
(bad)
(bad)
(bad)
push
imul
and
lock
(bad)
call
jge
or
mov
inc
cs
pop
mov
fnsave
fdiv
push
retf
loop
push
mov
int3
xor
add
(bad)
(bad)
(bad)
jmp
dec
je
push
lods
mov
scas
push
add
sar
(bad)
call
add
adc
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
add
push
push
add
push
add
lock
lar
add
add
test
fs
out
out
sbb
aad
sbb
and
pop
sub
test
sbb
cmc
sub
imul
aad
pop
rcl
fisub
leave
sub
mov
sbb
dec
jne
mov
in
inc
push
jo
adc
add
add
add
cmp
(bad)
mov
sar
(bad)
inc
add
lock
add
fild
lock
add
adc
add
mov
mov
call
mov
add
sbb
into
sbb
push
add
mov
loopne
dec
adc
jecxz
sub
pop
sbb
jmp
xor
das
and
jb
xchg
xor
outs
xor
jecxz
sbb
fs
call
add
shl
fist
rol
mov
fisttp
cmp
lock
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
adc
push
add
lock
add
lock
add
push
add
lock
(bad)
(bad)
jmp
retf
gs
(bad)
jmp
add
lock
cld
add
(bad)
mov
xchg
sldt
add
sar
(bad)
call
add
lock
add
lock
add
lock
pushf
stos
sbb
cwde
sti
ss
imul
mov
daa
jnp
push
mov
jecxz
imul
ficom
add
mov
add
cld
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
sbb
add
pop
add
arpl
add
adc
add
lock
sahf
call
cmps
jecxz
mov
inc
jo
pop
push
out
or
daa
lock
adc
rcl
shl
(bad)
cmp
mov
arpl
ss
sbb
repz
sub
add
(bad)
ins
jmp
mov
das
xor
inc
sbb
xchg
mov
push
stos
test
ja
xor
sub
aad
mov
dec
push
adc
loop
push
add
lock
add
add
add
add
add
sub
or
sbb
mov
rcr
sti
mov
pop
stos
pusha
shl
xor
xchg
cmp
sub
or
add
add
add
add
xor
add
(bad)
(bad)
(bad)
push
xor
stos
inc
(bad)
pop
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
push
adc
out
fwait
dec
add
lock
pop
add
movs
std
add
pop
out
lock
add
add
lock
(bad)
(bad)
inc
ret
bound
sar
dec
pop
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
inc
sbb
xchg
mov
hlt
mov
jle
(bad)
sbb
or
sub
or
ja
(bad)
outs
and
mov
cld
fs
dec
fist
adc
push
push
ds
pop
jb
push
in
fxtract
pop
lock
inc
cmps
jmp
cmp
inc
push
inc
ret
in
(bad)
repnz
mov
pop
jno
cwde
pop
jge
(bad)
mov
xor
lea
cld
test
and
jo
or
(bad)
(bad)
(bad)
dec
fs
jge
add
lock
aaa
(bad)
ficomp
rcl
and
pop
dec
rcl
call
idiv
adc
fnstenv
sub
jno
enter
mov
cmp
pop
imul
movs
mov
jne
jle
movs
loop
sbb
jl
add
(bad)
(bad)
(bad)
push
inc
outs
push
cmc
mov
add
ret
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
jg
sbb
dec
pop
add
sar
(bad)
call
sub
lods
es
ffreep
mov
sti
mov
sbb
adc
repz
jge
ins
ja
xchg
test
sub
cld
imul
je
mov
sar
(bad)
jmp
into
add
lock
add
lock
add
lock
add
aad
add
add
lock
add
lock
(bad)
(bad)
(bad)
mov
(bad)
sbb
lock
(bad)
jmp
jbe
lock
add
lock
data16
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
dec
adc
(bad)
ss
ins
ins
jge
mov
adc
push
sahf
movs
mov
in
out
mov
dec
push
push
pop
stc
jmp
add
add
add
add
add
lock
add
in
mov
cmp
sar
(bad)
call
lock
add
lock
lock
add
mov
pop
add
lahf
mov
push
adc
jl
jbe
rcr
sbb
fwait
mov
fist
jle
(bad)
jmp
jb
in
popf
and
cmp
cmp
hlt
pop
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
sbb
add
lock
addr16
inc
mov
sbb
xchg
iret
faddp
gs
mov
xor
dec
mov
ss
xlat
or
clc
into
add
lea
xchg
daa
push
lods
jle
mov
hlt
and
dec
int
jnp
popa
jb
ret
mov
int3
sub
push
fs
xor
mov
add
dec
add
xchg
or
sbb
out
adc
jecxz
in
lahf
pop
push
push
test
and
xor
mov
aaa
add
adc
loope
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
fwait
dec
mov
dec
sbb
push
push
lock
add
lock
add
adc
add
(bad)
(bad)
(bad)
(bad)
mov
ror
add
(bad)
push
add
lock
(bad)
(bad)
call
arpl
gs
jnp
syscall
lock
(bad)
push
add
lock
(bad)
(bad)
jmp
or
lea
lock
(bad)
inc
add
lock
add
lock
mov
inc
mov
sub
test
push
pop
and
add
lock
hlt
add
add
add
cmps
ins
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
cld
cmp
pop
das
mov
jnp
fs
dec
sbb
cvtdq2ps
adc
xor
add
sbb
fdivr
outs
(bad)
cmp
aam
or
test
push
mov
and
push
popa
push
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
call
cmp
outs
add
out
outs
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
(bad)
(bad)
(bad)
(bad)
jl
jl
ja
cmp
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
push
outs
or
add
ins
jno
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
leave
xor
lods
jno
lock
add
push
add
and
cdq
add
sbb
lock
add
test
add
push
add
lock
jge
cmp
adc
add
add
add
stc
ins
(bad)
cdq
or
mov
addr16
push
xchg
fwait
gs
add
sbb
stos
retf
jg
cwde
push
je
popa
(bad)
xor
outs
jb
sar
push
call
mov
inc
lahf
and
sub
sub
or
loop
inc
adc
shl
and
mov
add
add
adc
push
popf
jmp
sbb
add
xchg
dec
add
lock
(bad)
(bad)
jmp
les
je
lock
(bad)
jmp
push
add
add
add
xor
add
(bad)
(bad)
(bad)
jmp
and
pop
mov
add
sar
(bad)
dec
jns
jmp
mov
xchg
scas
xor
ret
dec
cmp
out
and
pop
idiv
mov
cmp
lods
pop
das
stc
or
scas
mov
call
xor
lock
lock
add
add
add
add
add
pop
and
and
add
inc
add
lock
add
push
ja
es
(bad)
call
fild
lock
add
(bad)
(bad)
(bad)
inc
sub
das
ja
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
mov
rcr
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
movs
test
add
pop
js
lock
ss
sbb
ret
(bad)
pop
push
cli
mov
fadd
(bad)
out
add
jmp
mov
lock
mov
sar
loope
enter
jbe
mov
add
(bad)
(bad)
(bad)
push
repz
adc
mov
(bad)
(bad)
call
mov
add
sar
(bad)
call
push
push
lock
add
lock
add
lock
add
or
add
(bad)
(bad)
(bad)
call
dec
mov
sar
(bad)
inc
popa
add
push
add
lock
(bad)
(bad)
push
mov
mov
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
clc
repz
or
add
lock
jp
lock
add
lock
(bad)
(bad)
call
lock
and
(bad)
inc
jge
jnp
movs
add
das
call
xor
mov
push
aaa
hlt
pop
mov
arpl
jbe
jb
xlat
sub
clc
and
xor
lods
xchg
mov
lahf
sahf
cmp
mov
pusha
mov
cmps
sbb
xchg
popf
outs
ret
xchg
mov
jbe
nop
dec
adc
enter
call
mov
sbb
sub
jne
mov
xor
test
iret
pop
popa
lods
nop
jno
and
retf
ds
stos
gs
push
imul
mov
idiv
nop
ret
dec
jge
ja
sldt
in
stos
push
test
mov
adc
jmp
push
out
mov
cmp
add
adc
loop
and
clc
mov
mov
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
lds
out
outs
sbb
outs
cmp
mov
jle
inc
or
cmps
mov
jmp
xchg
dec
stos
mov
xchg
add
int3
or
cmc
xchg
mov
jb
scas
dec
mov
xchg
scas
repz
adc
adc
mov
add
and
(bad)
jb
shr
lock
(bad)
(bad)
push
sub
arpl
sar
(bad)
jmp
retf
adc
inc
mov
adc
es
ss
sbb
pop
mov
(bad)
stc
cmp
or
dec
jge
mov
push
xor
jge
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cld
rcl
loope
in
(bad)
push
jecxz
loop
mov
cmc
and
dec
add
sub
in
jns
je
jbe
push
cdq
repnz
sub
shl
loop
xor
push
in
test
mov
jmp
mov
mov
mov
sub
cld
xchg
push
add
push
std
in
jmp
cmp
jne
xchg
dec
xor
jmp
mov
adc
aad
or
push
mov
sbb
not
xor
add
(bad)
(bad)
(bad)
jmp
xchg
(bad)
cmp
jle
lock
(bad)
(bad)
cmp
(bad)
(bad)
jmp
xor
add
inc
stos
pop
pop
outs
pop
sbb
fdivr
xchg
push
jnp
repz
aad
mov
es
inc
cmps
dec
adc
jg
(bad)
cmp
xor
inc
mov
test
lock
add
out
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
shr
rcr
stos
mov
xor
add
add
sar
(bad)
jmp
jp
lock
add
cmp
add
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
fidiv
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jl
stos
pushf
idiv
lock
(bad)
(bad)
(bad)
aas
mov
add
xchg
xchg
lock
(bad)
(bad)
std
fwait
add
sbb
add
pusha
add
lock
add
or
(bad)
(bad)
call
ret
pop
xchg
sar
(bad)
jmp
add
mov
add
push
ins
shl
and
xlat
pushf
adc
(bad)
pop
lods
mov
dec
push
mov
add
jp
lea
sbb
es
push
and
loopne
out
and
fwait
addr16
push
shr
or
aad
shl
(bad)
pop
stos
adc
icebp
loopne
lock
add
movs
add
lock
add
xchg
pop
or
sar
(bad)
jmp
mov
add
dec
add
add
(bad)
(bad)
(bad)
push
push
add
int3
mov
lock
(bad)
push
mov
add
add
add
jb
xor
xchg
mov
gs
push
cld
jns
xchg
sti
fild
pop
icebp
addr16
popa
(bad)
loopne
jle
inc
cmp
in
into
inc
jno
jne
xor
pop
es
(bad)
(bad)
jmp
push
gs
(bad)
mov
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lods
sbb
lock
mov
lock
rol
xchg
fild
lock
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
adc
test
mov
dec
lea
lock
add
lock
(bad)
(bad)
call
cwde
in
xchg
xchg
sub
add
sar
(bad)
inc
(bad)
(bad)
call
xor
ret
(bad)
(bad)
push
add
lock
(bad)
(bad)
call
pop
je
lea
lock
(bad)
call
add
movs
repz
add
ret
popa
fnstcw
cmp
iret
loop
rol
pop
sbb
(bad)
bnd
xor
cmp
fistp
sub
cmp
sbb
pop
adc
cld
pusha
into
mov
inc
dec
in
inc
fisttp
retf
mov
push
cli
ficom
push
retf
neg
sub
push
push
in
push
mov
adc
cmps
xor
mov
(bad)
mov
call
test
cli
sub
inc
or
jmp
mov
push
imul
ret
add
xor
push
sbb
daa
adc
inc
test
pop
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
add
(bad)
(bad)
(bad)
jmp
icebp
test
loopne
mov
(bad)
jmp
xchg
mov
(bad)
pop
adc
gs
xchg
sbb
pop
in
aam
add
dec
fild
jg
outs
jns
test
out
mov
mov
aaa
iret
out
cli
sbb
arpl
not
push
pop
xor
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
test
sub
add
sub
add
(bad)
(bad)
(bad)
call
pop
xlat
dec
sub
adc
jmp
popa
cmp
(bad)
cmp
lea
repz
in
sub
add
mov
xor
mov
(bad)
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
idiv
sub
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
pop
dec
or
add
gs
add
fs
hlt
cs
or
pop
xchg
outs
inc
add
sti
retf
pop
lods
shl
std
inc
ins
test
and
adc
jb
and
cmp
std
int
push
xchg
push
test
pusha
ins
jle
xlat
cmp
add
add
add
enter
adc
sub
(bad)
(bad)
call
add
add
dec
add
lock
cs
out
push
out
outs
add
add
sar
(bad)
jmp
add
lock
add
lock
mov
adc
dec
adc
mov
xchg
push
lahf
pusha
arpl
out
xor
push
inc
fbstp
pop
xor
(bad)
pop
or
cmp
jmp
idiv
dec
adc
lock
(bad)
(bad)
call
hlt
xchg
adc
xchg
add
sar
(bad)
inc
add
lock
dec
add
add
add
sub
add
(bad)
(bad)
(bad)
push
pop
xchg
xchg
lods
test
lock
(bad)
dec
or
mov
or
idiv
mov
and
fisubr
addr16
(bad)
repz
xlat
cmp
(bad)
(bad)
inc
sbb
jbe
adc
(bad)
(bad)
(bad)
push
fdiv
mov
scas
nop
pop
sbb
pop
(bad)
pusha
mov
sahf
mov
cmp
add
aam
mov
leave
xor
mov
pop
cmps
xor
pop
pop
mov
jo
stos
sbb
add
add
adc
add
(bad)
(bad)
(bad)
push
jb
lods
shl
dec
sar
(bad)
(bad)
cmp
add
(bad)
lock
(bad)
(bad)
dec
mov
mov
add
jno
into
jne
sbb
fistp
ret
sub
mov
fstp
add
lock
add
(bad)
(bad)
(bad)
call
stc
jle
mov
(bad)
(bad)
inc
fadd
lock
add
push
cdq
add
pushf
mov
add
fisub
jmp
cmps
ret
sbb
test
leave
pop
loop
dec
jge
(bad)
cdq
add
jb
(bad)
aad
mov
and
cs
cmp
les
jge
stos
js
fstp
out
xchg
imul
movs
ds
ins
sub
or
pop
jnp
mov
pusha
sbb
pop
fwait
ja
popa
xor
inc
sub
and
xor
xor
sbb
test
ss
jb
test
add
add
add
je
aas
pop
outs
push
retf
cmc
add
or
mov
add
jecxz
(bad)
xor
inc
ds
xor
ror
es
(bad)
(bad)
push
jg
and
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lds
inc
add
lock
mov
and
(bad)
sbb
lods
sar
push
loop
mov
repz
mov
mov
cld
mov
inc
sub
rcl
sub
out
add
or
mov
(bad)
sub
sbb
test
pop
mov
add
cdq
add
pop
dec
leave
xor
clc
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
inc
xor
add
(bad)
(bad)
(bad)
(bad)
js
(bad)
adc
shl
(bad)
inc
jbe
pop
cs
neg
add
add
sar
(bad)
jmp
push
lock
add
lock
lock
add
lock
or
hlt
fadd
dec
jecxz
cmp
cdq
pusha
xlat
aas
mov
adc
mov
xchg
cmp
mov
lods
lahf
xor
out
scas
mov
push
inc
stc
adc
mov
sbb
(bad)
fnsave
shl
into
sub
xchg
fwait
repz
mov
out
pop
mov
shl
add
add
outs
call
pop
gs
or
jno
push
jp
(bad)
stos
sub
in
pop
les
gs
stos
aaa
jne
movs
cld
lea
push
ret
inc
mov
cmps
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jno
and
sub
sub
(bad)
frstor
sub
daa
inc
lea
(bad)
mov
retf
(bad)
sub
or
fistp
pop
xor
add
pop
mov
mov
movs
xchg
xchg
clc
out
out
pop
xor
stos
push
jb
jb
sbb
push
sar
inc
lods
sbb
mov
loop
jns
sti
push
lahf
push
test
sbb
pop
shl
sti
or
in
xchg
aas
out
or
and
data16
cs
int3
cmps
jge
outs
push
pop
jmp
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
add
test
lock
mov
(bad)
mov
pop
push
aam
xor
dec
(bad)
rol
inc
cmp
push
jecxz
leave
mov
ins
pop
cli
and
pop
xor
adc
cmps
jge
xor
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
ins
add
lock
add
push
pusha
retf
je
addr16
add
lock
add
add
mov
adc
(bad)
jmp
add
lock
sbb
lock
add
cmp
jecxz
sub
in
shl
popa
xchg
loop
sti
and
add
in
jb
retf
fwait
call
sub
mov
out
inc
imul
add
lock
(bad)
(bad)
inc
inc
mov
mov
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
lock
add
push
add
lock
adc
add
lock
add
add
add
sbb
mov
mov
inc
add
sub
in
jg
je
movs
xchg
sub
stc
inc
jnp
ins
push
adc
sbb
xchg
ins
cmps
push
inc
mov
push
sub
sub
sub
into
mov
and
and
mov
add
ror
imul
and
das
aad
shr
(bad)
call
adc
(bad)
fdivr
add
dec
mov
into
repz
js
ja
loop
push
aas
jle
movs
inc
cwde
or
mov
call
stc
ret
sbb
push
fnstcw
mov
xor
ret
xor
cdq
lds
icebp
hlt
jle
sub
cmp
mov
sbb
mov
add
(bad)
(bad)
(bad)
dec
inc
xor
movs
dec
cwde
add
(bad)
(bad)
dec
add
lock
mov
add
add
and
cs
xchg
sbb
nop
dec
arpl
std
mov
ins
pop
outs
sub
dec
push
pop
les
idiv
das
rcr
call
cwde
ret
inc
and
xchg
pop
push
(bad)
sbb
in
jns
xchg
mov
add
cli
mov
sub
add
adc
(bad)
repz
mov
clc
pusha
imul
mov
std
or
test
js
cmps
imul
cld
push
les
imul
cmp
mov
bound
xor
test
pop
retf
xchg
int3
push
cmps
xchg
inc
sub
ja
sub
xor
mov
dec
(bad)
adc
sub
enter
xchg
and
push
sti
adc
pop
sti
mov
sub
mov
jno
sahf
ins
mov
fs
cmp
xchg
les
xor
xor
sbb
out
fist
inc
pop
add
loop
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
jle
in
jne
add
lock
add
jp
mov
cdq
sub
mov
push
vcvtss2si
push
xchg
pop
repz
lock
clc
add
dec
xor
cmps
mov
sahf
mov
cs
dec
add
sbb
mov
das
data16
add
add
xlat
add
lds
add
(bad)
(bad)
(bad)
call
adc
fnstsw
mov
lock
(bad)
(bad)
cmp
add
add
add
push
call
test
lods
sbb
fiadd
lock
add
push
pop
add
lock
add
push
add
sbb
dec
add
sub
add
ficom
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
sar
add
or
add
add
add
(bad)
in
lock
add
inc
mov
add
addr16
add
add
add
add
add
dec
add
lock
add
lock
add
add
add
add
add
test
add
or
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
repnz
call
mov
jl
add
lock
(bad)
(bad)
mov
add
lock
add
lock
add
lock
add
lds
add
aam
add
or
add
add
add
xor
add
ret
lock
sbb
lock
add
add
add
add
add
add
add
mov
into
shr
mov
sub
sub
lahf
jae
cdq
(bad)
fnstcw
gs
jl
adc
mov
repz
jg
add
dec
jbe
stos
sub
inc
fsubr
lock
add
or
add
(bad)
(bad)
(bad)
jmp
push
gs
(bad)
mov
call
add
cmp
add
call
mov
pop
pop
imul
lahf
call
inc
in
jmp
ret
dec
xchg
pop
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
loopne
add
add
add
mov
add
lock
add
test
add
add
shl
lock
add
push
inc
enter
gs
imul
fist
addr16
lock
xor
inc
sbb
rcl
add
add
add
xor
add
or
add
hlt
push
cs
or
dec
lds
cs
out
xor
cld
outs
ss
push
shl
(bad)
(bad)
aam
adc
push
add
pop
cmp
(bad)
(bad)
(bad)
(bad)
jmp
ds
xchg
sub
xor
add
rol
lock
fist
push
sub
dec
popa
pop
dec
or
fmul
stos
fsubr
lods
dec
(bad)
jno
sbb
push
loopne
dec
dec
push
ss
shl
jnp
ror
adc
jecxz
and
jecxz
bound
xor
pop
or
add
aad
mov
call
and
add
dec
std
test
fs
pop
cli
jl
jns
xor
and
loop
or
and
dec
sub
(bad)
push
cmp
mov
retf
mov
daa
xor
out
mov
cmps
cdq
dec
(bad)
mov
loopne
cdq
jecxz
jne
xchg
das
out
leave
(bad)
dec
js
stos
stos
stos
lods
mov
cwde
sahf
cmp
dec
out
mov
or
dec
xchg
shr
xchg
je
mov
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
not
or
add
or
add
(bad)
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
loop
inc
aaa
in
add
int
jl
pop
push
es
dec
(bad)
iret
call
jle
mov
pop
pop
jmp
das
repnz
rcl
jle
cmc
daa
xor
das
imul
clc
add
push
add
and
add
lock
(bad)
(bad)
(bad)
mov
or
imul
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aam
mov
jmp
add
add
add
mov
add
stos
jno
lock
add
(bad)
(bad)
(bad)
dec
sbb
loope
js
retf
sti
int
lock
(bad)
dec
and
call
ret
data16
pop
jp
imul
cmc
fdivr
loopne
mov
jecxz
pop
(bad)
xchg
xor
push
test
pop
shl
cld
xchg
jge
add
imul
add
sub
and
dec
addr16
mov
imul
loope
retf
lods
movs
mov
sub
sub
dec
lods
sub
push
xchg
xchg
rcl
sbb
add
(bad)
(bad)
(bad)
push
inc
pop
shl
iret
add
sar
(bad)
dec
add
lock
xor
add
loopne
xchg
ret
aas
neg
adc
cdq
aam
or
in
and
stc
push
cmp
aas
test
jp
aaa
push
aaa
pop
xor
ret
setnp
and
psubsw
loop
test
jecxz
inc
inc
(bad)
rcl
clc
(bad)
add
packuswb
adc
mov
gs
and
lea
cmp
dec
loope
(bad)
leave
out
xor
outs
outs
add
test
and
out
dec
sub
adc
cli
jle
loop
pop
test
gs
add
(bad)
jbe
xchg
xchg
mov
cdq
push
inc
pop
sbb
pop
mov
add
cmp
add
je
add
add
add
fidiv
pushf
xchg
es
jge
xchg
popf
vpsrlw
adc
push
cmps
push
push
repz
sahf
out
or
sub
rcl
pop
lahf
fistp
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
movs
fimul
add
rcl
add
pop
add
lock
add
repz
jae
push
test
cmp
cmp
repnz
retf
outs
jbe
sahf
std
pop
imul
xor
xchg
sar
sub
outs
push
pop
or
cwde
or
test
(bad)
loope
test
movs
mov
test
repz
(bad)
mov
in
cmp
stos
cmp
mov
push
shl
add
xchg
xor
mov
in
mov
out
mov
imul
dec
rol
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
ss
add
xchg
js
and
aas
arpl
(bad)
mov
ins
jp
mov
iret
push
dec
test
in
cwde
scas
ror
(bad)
sub
loop
add
fdiv
dec
mov
mov
mov
dec
sar
dec
mov
sub
hlt
mov
mov
jecxz
jns
push
sbb
jecxz
pop
adc
jo
rcl
xor
int
call
inc
inc
lds
mov
dec
pop
imul
pop
pop
ja
xor
ror
ror
adc
mov
aad
(bad)
scas
xor
aaa
retw
pop
jmp
(bad)
xchg
fdivrp
lods
rol
stc
ret
xchg
mov
jns
pop
xor
mov
stc
pop
cmp
out
xor
bound
es
inc
pushf
mov
mov
sbb
push
xor
xchg
jmp
clc
pop
fsub
test
adc
aaa
xchg
jo
lods
pop
call
inc
inc
xchg
xor
shl
ins
jecxz
imul
dec
add
out
out
add
js
call
add
ficom
adc
sbb
ret
pop
nop
test
in
(bad)
mov
jecxz
push
push
(bad)
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
lock
and
call
add
(bad)
(bad)
(bad)
inc
and
ins
test
xor
(bad)
(bad)
(bad)
std
inc
add
cmp
add
sub
add
(bad)
(bad)
(bad)
jmp
call
jae
add
sar
(bad)
dec
xchg
and
adc
mov
jbe
movs
jp
adc
cli
dec
push
add
lock
add
lock
sub
lock
add
pushf
mov
lock
add
add
add
inc
fadd
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
push
adc
(bad)
(bad)
(bad)
call
adc
mov
add
lock
add
xor
ror
and
(bad)
push
jl
daa
(bad)
dec
sbb
pop
retf
fwait
dec
and
adc
adc
(bad)
sti
jp
pop
jnp
shl
adc
addr16
sub
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
lahf
lea
xor
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
fisttp
add
lock
add
(bad)
(bad)
(bad)
(bad)
dec
addr16
mov
add
lock
jne
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
hlt
cs
inc
in
push
pop
or
lar
cmp
shl
mov
add
dec
popa
push
adc
add
mov
mov
xchg
fs
pop
in
bound
mov
push
cli
jbe
and
add
push
add
lock
add
addr16
add
add
add
arpl
xor
add
call
push
mov
lahf
mov
jns
pop
jmp
dec
fst
rol
xor
imul
scas
in
mov
add
push
add
lock
pop
and
push
div
mov
das
add
jo
(bad)
ror
cmps
cdq
mov
into
mov
lea
mov
adc
in
push
mul
fdivr
loopne
test
int3
fadd
mov
mov
retf
fld
(bad)
aam
enter
xor
cdq
dec
mov
scas
jmp
add
push
mov
jmp
repz
sub
jne
mov
imul
mov
add
adc
add
(bad)
jmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ss
jae
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ffreep
pop
or
outs
add
lock
in
add
inc
in
add
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
call
jle
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
add
add
add
xor
bound
lock
add
add
add
and
add
(bad)
(bad)
(bad)
(bad)
jns
imul
sar
(bad)
(bad)
cli
pop
and
sbb
mov
lock
(bad)
call
lock
add
lock
add
lock
add
push
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
pop
mov
or
pop
repnz
mov
add
sbb
add
mov
add
lock
add
pcmpgtd
out
push
adc
sub
jecxz
inc
mov
mov
xor
daa
or
xor
cmc
sbb
ins
push
ffreep
fimul
dec
fnstcw
sbb
cmc
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
add
inc
pop
test
sbb
in
cmps
stos
shl
lods
stos
leave
xchg
(bad)
lods
sub
mov
fcmovne
cmp
sub
mov
and
sbb
stos
push
ret
mov
lock
test
add
cdq
dec
and
ss
mov
dec
scas
and
mov
push
inc
ds
mov
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
call
stos
mov
lock
(bad)
(bad)
inc
add
lock
add
add
sbb
jbe
repz
sti
das
inc
xor
cmp
jecxz
ins
pminsw
jge
imul
scas
jb
sub
out
dec
pop
rsm
jbe
cmp
stc
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
dec
cli
jb
das
sbb
push
or
adc
into
outs
in
cmps
es
jns
rol
inc
add
cmc
cmp
aas
pop
mov
hlt
xchg
add
xor
adc
push
leave
ficomp
jmp
add
push
sbb
ror
ret
jle
out
sbb
mov
inc
mov
data16
repnz
fs
pop
jb
dec
cmps
call
hlt
inc
je
xor
xchg
cmps
sbb
in
loope
mov
cmc
mov
test
jne
ins
cli
push
inc
call
outs
add
das
outs
add
push
add
adc
popa
iret
xchg
sub
or
in
cmps
xor
and
jns
hlt
push
mov
fwait
gs
clc
push
pop
ret
cmp
adc
mov
sub
mov
add
pop
mov
inc
(bad)
mov
push
outs
adc
cld
dec
int
aas
jl
dec
xchg
out
out
xchg
call
es
mov
movs
mov
xor
cmps
dec
fsubr
test
sar
imul
push
iret
imul
iret
fwait
mov
mov
push
push
mov
or
data16
inc
inc
jns
and
mov
ins
imul
lods
xchg
sub
mov
(bad)
sbb
aad
mov
mov
lods
jne
cmps
fcmovnb
mov
fistp
adc
mov
imul
in
or
aam
inc
jbe
xchg
(bad)
aas
frstor
(bad)
lock
aaa
pop
and
add
stos
jecxz
xchg
dec
xor
aas
and
mov
cmps
hlt
sub
xchg
(bad)
pop
sbb
push
into
ret
int
cmp
push
mov
sub
dec
out
jno
mov
pushf
popa
dec
cs
push
sub
aaa
mov
nop
xor
sbb
cmc
movzx
xlat
sahf
bound
ficom
mov
mov
not
mov
jp
mov
xor
jb
jbe
ficom
mov
cld
into
jl
movs
jmp
cdq
int
cs
mov
or
and
xor
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
pop
movs
mov
dec
and
lods
or
inc
and
call
out
jl
int
push
ret
inc
pop
sbb
cli
frstor
inc
cs
cmp
pop
push
clc
sbb
fdiv
lahf
aas
cld
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
add
add
lock
add
lock
rcl
lea
pop
pushf
add
pop
lahf
aad
sbb
or
cmp
jl
dec
mov
mov
jmp
mov
cmp
sbb
jns
dec
xor
stos
jno
push
sbb
mov
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
fwait
out
jo
add
lock
add
ror
lock
add
(bad)
aaa
add
xor
add
(bad)
(bad)
(bad)
(bad)
jmp
popa
mov
(bad)
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
repnz
add
lock
(bad)
(bad)
(bad)
js
mov
test
outs
int
add
sar
(bad)
dec
add
(bad)
(bad)
(bad)
push
std
pusha
lods
ins
or
lock
(bad)
push
add
lock
add
cmp
add
push
add
adc
add
lock
(bad)
(bad)
jmp
popa
rol
aad
add
sar
(bad)
inc
add
lock
push
add
add
add
xor
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
clc
aas
into
ins
fadd
jbe
sub
lock
add
add
add
dec
loopne
int
ins
jno
add
add
sar
(bad)
jmp
stos
add
lock
add
lock
add
lock
add
add
add
adc
cmps
retf
and
ficom
scas
pop
dec
dec
callw
xlat
out
mov
pop
call
cmp
inc
jp
loop
out
movs
scas
inc
es
pop
pop
test
add
(bad)
(bad)
(bad)
jmp
cdq
pushf
dec
xchg
cld
mov
or
lock
(bad)
call
adc
sbb
dec
test
cwde
jl
icebp
adc
mov
mov
inc
add
add
ficomp
cmp
sub
in
icebp
push
fist
lods
mov
lods
sbb
(bad)
pop
cld
dec
xor
and
xlat
fldcw
ins
cmc
mov
leave
push
mov
sbb
pop
les
inc
gs
mov
(bad)
iret
dec
(bad)
test
xchg
fld
and
xchg
cmp
fcom
ins
jae
inc
push
push
stc
jmp
inc
xchg
loop
loope
data16
fld
dec
ror
sub
dec
popf
hlt
push
das
fsub
out
fld
cmp
es
outs
fucomp
fwait
inc
push
retf
push
call
test
pop
mov
mov
shr
fwait
mov
adc
mov
or
jl
sub
push
add
dec
mov
pop
mov
ficomp
or
cmp
push
mov
sub
(bad)
adc
jecxz
cld
inc
movs
ficom
lock
or
lds
push
in
cld
into
push
maskmovq
neg
mov
ret
xchg
out
cmp
lds
cmp
aas
xchg
iret
xlat
xchg
dec
jl
addr16
cmp
pop
jl
add
ins
mov
add
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xlat
sub
add
lock
add
add
lock
add
add
add
add
add
dec
pop
add
(bad)
add
sahf
rol
lock
add
or
add
js
add
stc
fadd
mov
add
and
adc
add
push
add
lock
(bad)
(bad)
(bad)
sti
(bad)
test
pop
es
jle
add
dec
add
lock
(bad)
(bad)
dec
xchg
dec
jmp
add
ret
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
inc
lds
dec
adc
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
fist
add
lock
add
lods
or
mov
add
lock
(bad)
inc
add
lock
add
xor
add
mov
lock
sbb
lock
mov
repnz
jecxz
movs
popf
dec
mov
mov
pop
bound
add
(bad)
xchg
mov
and
inc
iret
push
jno
in
push
(bad)
in
cmp
and
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
fwait
shl
add
lock
mov
lock
jns
push
dec
mov
mov
test
adc
aaa
(bad)
adc
imul
out
shl
js
pop
cwde
mov
xchg
int
jl
shl
xchg
shl
and
xchg
pop
push
xchg
lods
pop
loop
stos
mov
call
pushf
jne
xchg
add
pop
jae
icebp
jecxz
push
shr
or
add
(bad)
mov
nop
xor
sbb
add
stos
xchg
or
xor
shr
pop
add
or
add
xor
add
(bad)
(bad)
(bad)
push
cmp
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
xor
add
cwde
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
in
pop
add
lock
add
out
rol
retf
xor
pop
cmp
addr16
retf
arpl
push
mov
xchg
xor
mov
les
test
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
cld
add
add
retf
add
add
add
add
dec
mov
and
add
lock
addr16
and
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
jmp
add
lock
sbb
lock
repz
stc
sbb
mov
fucomi
mov
adc
ficom
jae
lods
rol
cmp
stos
mov
fdivr
xchg
inc
push
cmc
ins
xchg
pop
lmsw
pop
lmsw
push
add
adc
add
lock
inc
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
lock
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
cmp
push
add
les
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
addr16
sub
(bad)
(bad)
push
push
dec
push
add
sar
(bad)
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lea
ds
lea
add
lock
add
cmp
(bad)
(bad)
(bad)
mov
fs
je
and
call
pop
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
adc
xchg
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
adc
mov
add
rcr
lock
addr16
xor
xor
nop
mov
mov
in
adc
and
add
adc
or
mov
aad
jnp
sbb
sub
leave
mov
xchg
out
mov
mov
jmp
pop
loope
iret
xchg
cdq
das
arpl
das
test
stos
mov
sbb
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jo
adc
out
and
lock
lock
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
mov
inc
xor
add
sub
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
mov
in
jmp
loope
add
xchg
add
xchg
cmp
add
retf
inc
xchg
mov
lahf
xchg
jmp
jl
adc
sub
pop
dec
cdq
or
and
inc
(bad)
jge
add
xchg
enter
scas
stos
out
and
mov
add
add
add
cmp
fwait
and
(bad)
mov
push
outs
cmp
pop
or
sub
push
mov
call
or
adc
test
mov
jbe
mov
jge
lock
sub
mov
push
sub
fsubr
cmps
(bad)
mov
cli
and
repnz
ja
dec
shl
pop
hlt
or
jno
stc
or
cwde
xor
mov
adc
jl
mov
mov
xor
mov
and
inc
ret
xor
push
or
shl
cmp
and
add
sub
add
add
pop
cmp
jb
inc
(bad)
call
out
sahf
sbb
push
or
sbb
cmp
(bad)
push
nop
mov
bound
cmp
ret
aas
inc
dec
add
jne
gs
jge
jno
test
add
lock
add
dec
daa
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sub
ret
pop
repz
cld
in
xchg
cmp
inc
and
pop
xchg
pop
shl
jno
(bad)
loop
push
sub
mov
jge
in
dec
inc
pusha
loop
cli
sbb
sbb
retf
bound
test
enter
or
inc
scas
jl
cmp
popa
enter
and
pop
adc
push
xchg
mov
add
sub
jl
data16
imul
repz
add
inc
sub
xchg
fwait
mov
cli
out
jmp
outs
js
lods
add
add
add
add
rol
lock
add
add
add
push
add
lock
(bad)
(bad)
dec
mov
ins
mov
(bad)
(bad)
call
lock
inc
ds
push
aaa
loope
cli
xchg
xchg
mov
or
dec
pop
push
hlt
jmpw
mov
add
dec
push
jns
movs
add
fwait
lds
fimul
mov
stc
std
neg
cmp
arpl
cmp
rol
add
add
or
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sti
cmp
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
(bad)
cmp
aaa
add
lock
and
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
adc
into
add
push
add
and
add
(bad)
(bad)
(bad)
(bad)
push
retf
pop
ins
mov
add
lock
add
lock
add
adc
add
(bad)
(bad)
(bad)
call
aam
inc
(bad)
jmp
cdq
add
lock
(bad)
dec
add
push
add
lock
sub
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
xor
add
lock
add
or
add
(bad)
(bad)
(bad)
dec
mov
iret
sar
(bad)
push
add
lock
lock
(bad)
(bad)
push
add
lock
(bad)
(bad)
jmp
mov
aas
daa
ret
adc
sar
(bad)
push
js
lock
add
add
add
push
aam
and
ds
movs
popf
xor
mov
daa
jle
ret
stos
addr16
xchg
or
sysenter
mov
sar
out
mov
test
mov
push
dec
sub
pop
push
push
outs
int3
je
std
mov
rcl
xchg
(bad)
ds
jl
and
mov
inc
lods
xor
imul
mov
cdq
pop
imul
jle
inc
shl
jmp
cmp
cld
sub
nop
push
ss
fwait
dec
add
xor
push
test
sub
push
add
popa
mov
sub
imul
into
jbe
stos
mov
int3
orps
pop
push
inc
nop
out
xor
retf
mov
and
dec
push
sar
hlt
jnp
call
in
pop
dec
push
mov
ja
imul
pushf
cmp
gs
xchg
cli
mov
clc
movs
jnp
inc
xchg
int
cmps
adc
into
jge
push
sub
push
rcr
pop
mov
mov
mov
cmp
jg
out
sub
inc
jae
call
xor
inc
push
cwde
mov
push
rcr
hlt
add
mov
push
mov
xor
das
stc
jg
sbb
jne
mov
int3
pop
push
inc
data16
addr16
ret
lahf
or
push
ror
add
out
das
inc
inc
xor
sbb
test
push
in
lock
ja
xor
arpl
mov
fidivr
mov
shl
and
add
movs
imul
xor
adc
adc
addr16
movs
add
cmps
out
retf
add
loop
test
xor
call
and
out
jmp
pop
shl
aaa
jns
add
cs
aaa
jb
arpl
adc
dec
(bad)
out
cdq
push
sub
xor
test
pop
gs
push
xchg
dec
sub
push
mov
out
pop
into
aam
aam
in
adc
(bad)
xlat
int3
add
mov
cld
and
imul
not
movs
jo
(bad)
xchg
inc
mov
enter
or
test
xor
push
neg
xchg
inc
div
dec
push
shr
repnz
sbb
jp
shl
inc
je
clc
lea
das
mov
fld
retf
lods
fistp
imul
dec
idiv
out
or
inc
sub
mov
cmp
ret
adc
adc
jge
push
xchg
or
aas
fist
mov
cmc
ja
pop
lock
cdq
cmp
pop
icebp
pushf
lods
mov
adc
jne
loopne
push
inc
xor
push
dec
dec
call
push
pop
(bad)
cmps
nop
shr
inc
outs
mov
call
scas
ret
push
dec
or
jl
pusha
gs
inc
ins
test
or
div
ret
inc
enter
hlt
lea
ss
mov
push
cwde
(bad)
in
mov
xchg
lock
and
js
jmp
sbb
mov
in
xlat
ret
inc
jae
jg
ret
mov
movntps
cmc
in
(bad)
push
loopne
sbb
dec
mov
cmp
int
jmp
adc
mov
shl
aaa
pop
ja
mov
mov
out
push
in
addr16
scas
and
mov
and
icebp
ins
xchg
xchg
or
jns
popf
pop
scas
retf
jns
popa
mov
sbb
into
outs
dec
add
xor
push
cld
stos
sbb
pop
pop
or
inc
mov
fcmovu
xor
out
outs
es
enter
pop
aad
jp
stc
mov
popf
imul
daa
and
sub
add
iret
clc
out
into
je
cwde
adc
bound
sbb
inc
mov
xchg
add
and
fistp
lods
fdiv
adc
sub
lods
(bad)
clc
pusha
pusha
arpl
jnp
mov
mov
call
mov
and
sub
(bad)
mov
push
aad
(bad)
in
ins
(bad)
push
add
xchg
into
(bad)
aad
retf
xor
pop
data16
shr
jge
je
pop
xor
les
xchg
mov
add
jle
mov
mov
aad
popf
stos
int
(bad)
push
sbb
pop
xor
ror
retf
test
mov
add
xchg
sub
clc
push
shl
cdq
xor
jmp
(bad)
into
add
jmp
cwde
test
and
xchg
mov
xchg
push
jbe
and
sbb
imul
mov
aaa
cmp
rol
mov
cmc
jne
addr16
loopne
(bad)
mov
hlt
loopne
mov
mov
(bad)
sbb
sub
dec
inc
push
in
retf
or
in
pop
neg
aas
in
fistp
rcl
ds
push
call
repnz
sub
or
sahf
push
das
mov
and
lar
leave
inc
mov
jl
inc
lock
sub
jnp
pusha
adc
jbe
mov
mov
sub
(bad)
sub
mov
or
stos
pop
jmp
mov
movups
push
push
je
cmp
enter
jecxz
leave
das
or
jmp
icebp
push
cmps
shr
out
mov
xchg
loope
dec
(bad)
shl
loope
mov
add
and
rcl
es
data16
and
mov
xchg
rcl
jns
add
fld
push
pop
das
ins
mov
add
test
nop
jge
cdq
mov
idiv
mov
sub
mov
cmp
or
aaa
in
call
cmp
sub
push
add
and
ds
dec
std
or
add
(bad)
(bad)
(bad)
push
xchg
fsubr
iret
mov
mov
add
ret
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
inc
push
inc
aaa
mov
(bad)
(bad)
push
cs
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
je
retf
mov
add
lock
(bad)
(bad)
jmp
adc
das
add
sar
(bad)
call
mov
aaa
mov
jg
adc
popf
gs
xchg
cmp
pop
lods
and
lea
cmps
ror
add
popa
arpl
and
adc
popf
add
cmps
fs
lahf
mov
mov
in
push
pop
mov
clc
dec
adc
jecxz
cmp
xor
sbb
and
and
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fwait
add
xchg
icebp
into
mov
das
add
addr16
repz
mov
inc
call
jl
jbe
adc
sbb
xor
push
mov
sub
sbb
cmp
es
inc
push
stc
jecxz
mov
imul
adc
jp
add
pop
retf
ret
fbld
sbb
stos
movs
sbb
cmp
sbb
push
xor
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
nop
push
xlat
add
push
xor
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
xchg
add
lock
add
in
pushf
outs
mov
imul
(bad)
dec
scas
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cld
rcl
loope
in
xor
add
pusha
xor
lds
sbb
or
mov
jae
imul
xchg
add
rol
mov
sub
cmp
xchg
jb
test
movs
daa
test
lods
jp
xchg
jae
cmp
add
(bad)
(bad)
(bad)
jmp
add
sub
aaa
add
lock
ss
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
jle
imul
xchg
pushf
xor
add
pop
cmp
lock
mov
test
les
data16
pop
xchg
xor
sar
call
in
cmps
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
add
pop
jecxz
cli
jl
add
(bad)
cmp
lock
(bad)
sbb
push
add
imul
ret
xchg
gs
hlt
push
cmp
dec
popa
ins
jecxz
fcomp
push
cmp
mov
lock
pop
mov
cmps
mov
jo
jge
xor
xor
jno
stc
lods
push
dec
scas
cmps
popa
inc
nop
cmp
mov
neg
adc
mov
jmp
das
popa
loopne
jle
and
(bad)
std
popa
xchg
sbb
test
push
fs
push
in
je
int
arpl
shl
sub
sub
rol
dec
hlt
mov
add
lock
add
aad
sub
shl
xor
scas
add
sub
push
inc
imul
outs
adc
cmp
lods
(bad)
pop
addr16
hlt
mov
sbb
lods
dec
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
int
xchg
add
lock
popa
pop
inc
icebp
xor
and
mov
aam
jmp
mov
cld
out
mov
dec
or
dec
jo
mov
mov
(bad)
lock
lock
add
add
add
mov
xor
sysenter
xchg
push
push
or
dec
or
mov
sub
aam
fcom
movs
fld
sahf
jnp
push
dec
fs
in
mov
sub
xor
sub
adc
xor
scas
mov
mov
pusha
jmp
push
aam
cli
pop
fwait
push
ret
jmp
cs
jge
ja
lea
ja
jmp
(bad)
xchg
lea
mov
scas
in
mov
loop
sub
sti
arpl
popa
cwde
fnclex
or
mov
pop
xchg
add
lock
add
mov
add
inc
(bad)
mov
xchg
jle
push
dec
(bad)
or
fs
jp
jno
adc
sar
scas
and
or
xor
arpl
rcl
dec
dec
das
cmp
push
les
mov
mov
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
test
xor
add
cmp
je
dec
sub
js
inc
(bad)
pop
add
(bad)
pop
cs
mov
loop
in
pop
cmp
sub
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
fld
mov
add
lock
xor
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
je
cdq
cmp
add
sar
lock
mov
add
add
add
mov
jg
outs
sub
sbb
test
cmp
rcr
int3
adc
push
mov
outs
imul
popa
sub
add
lock
(bad)
(bad)
call
adc
out
fwait
sbb
sbb
(bad)
(bad)
call
add
add
add
add
add
dec
scas
rcl
add
jmp
jge
mov
dec
dec
push
rep
(bad)
mov
out
movs
adc
mov
inc
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmps
stos
xchg
fs
call
add
lock
add
and
add
lock
add
add
add
cmp
sub
or
mov
scas
mov
leave
sub
(bad)
add
mov
(bad)
(bad)
xor
out
dec
sub
mov
push
ror
lea
mov
inc
jo
or
dec
ret
cli
aad
xchg
cmpxchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
aaa
add
lock
bound
xchg
dec
sbb
cli
jmp
xor
pop
sub
dec
data16
fiadd
xchg
ja
pusha
sar
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
xchg
mov
inc
add
lock
add
out
jne
std
mov
mov
mov
add
mov
aas
pop
pop
std
shr
fs
fcomi
mov
jb
bswap
mov
in
mov
leave
scas
int
xlat
retf
inc
into
lock
test
mul
and
int3
test
scas
(bad)
xchg
outs
xor
xchg
in
mov
leave
cmp
(bad)
shr
loope
shl
push
pop
pop
clc
adc
xchg
mov
ror
lods
xchg
xor
jne
jecxz
out
mov
call
sbb
sbb
mov
(bad)
cmps
push
outs
imul
sbb
mov
jbe
aaa
and
dec
jle
and
sub
pop
mov
mov
adc
cmp
ret
fmul
mov
sbb
bound
das
inc
in
xlat
pop
mov
push
jle
rcl
jp
int
or
add
xchg
iret
jo
dec
xor
fsub
dec
and
comiss
enter
cdq
jo
pop
outs
fwait
shl
mov
ds
jmp
sbb
pusha
in
enter
pop
mov
mov
xchg
arpl
stc
pop
pop
ret
test
xchg
jne
jbe
dec
mov
jno
aaa
or
mov
pop
push
stos
dec
fdivrp
fist
jmp
adc
repnz
fxch
sbb
sbb
xor
sbb
jne
stos
(bad)
rol
mov
(bad)
call
(bad)
aas
pushf
out
(bad)
cmp
ret
in
sti
cli
lock
aad
inc
add
and
inc
push
jne
sub
mov
xchg
aad
sbb
jle
cmps
jmp
into
mov
adc
mov
mov
test
arpl
ins
add
out
pop
adc
push
scas
xor
movs
gs
test
lock
or
xchg
ja
popf
push
adc
add
fstp
fwait
xchg
xlat
mov
out
aam
add
stos
mov
fimul
adc
call
sbb
sbb
push
test
pushw
adc
aam
cwde
mov
xchg
mov
dec
dec
iret
rcr
(bad)
cli
adc
sbb
int3
jge
lods
lahf
dec
sahf
inc
sub
test
dec
ja
(bad)
or
fwait
jo
aas
test
in
les
test
es
stos
sahf
pop
pop
mov
mov
inc
mov
xor
or
sub
bound
jle
popf
dec
adc
adc
lock
cmp
scas
push
ror
jg
or
iret
pop
or
mov
cmp
cmp
dec
out
sar
je
push
aaa
add
jns
add
add
add
sub
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
jnp
sub
sub
aaa
out
mov
pop
mov
shl
jp
xor
sub
data16
nop
imul
adc
and
movs
iret
mov
add
repz
xor
stc
repz
movs
clc
test
xchg
ins
and
xlat
add
pop
adc
cmp
mov
icebp
mov
dec
push
cmps
(bad)
test
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
add
or
and
pop
pop
repnz
cli
aad
adc
push
dec
dec
icebp
cwde
icebp
aaa
sbb
repnz
add
lock
(bad)
(bad)
inc
rol
or
add
add
(bad)
jmp
add
lock
(bad)
(bad)
inc
test
and
cmp
dec
add
sar
(bad)
jmp
add
adc
fild
push
js
adc
jae
push
movs
inc
cdq
jo
add
out
aas
mov
mov
xlat
jge
pop
idiv
adc
mov
mov
add
sub
add
in
jne
push
add
or
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
arpl
or
add
xchg
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
clc
sar
pop
mov
jl
push
xchg
aam
int
cld
jae
mov
jnp
push
cmps
inc
data16
jecxz
and
fdiv
sti
lods
cs
xchg
or
sub
jo
loopne
pop
push
sbb
jns
or
lahf
add
push
add
adc
lahf
add
lods
xchg
cld
jae
jmp
cmps
cmp
jbe
xchg
xchg
fisubr
fldl2t
or
icebp
jg
push
inc
and
push
cld
(bad)
jbe
jno
xor
add
test
add
lock
call
mov
or
ss
pop
push
ja
rcr
sub
ins
cmps
cmp
cdq
test
(bad)
mov
cdq
ret
shl
mov
in
dec
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
loop
add
lock
(bad)
(bad)
jmp
bound
jo
sahf
dec
add
sar
(bad)
(bad)
jns
and
stc
cmp
adc
mov
xchg
sub
out
inc
les
pop
(bad)
int
stos
cmp
scas
jg
push
inc
mov
push
scas
movs
xchg
(bad)
in
jns
aas
mov
mov
pop
repz
test
add
jmp
jge
in
sti
sub
push
jg
pop
jne
xchg
jg
fnsave
mov
fmul
add
push
add
and
add
lock
add
add
add
push
add
lock
xchg
and
cmp
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
inc
mov
stos
(bad)
fidivr
mov
repnz
sbb
pop
mov
clc
iret
not
lods
inc
jo
xlat
adc
clc
mov
inc
jo
neg
cld
mov
ror
pop
and
movs
sub
mov
push
cli
test
lds
out
dec
inc
out
repz
pop
mov
clc
outs
daa
ins
xor
sbb
repnz
adc
iret
and
test
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
xor
add
lock
push
add
pushf
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
add
add
pop
jmp
and
add
lock
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
lds
push
test
lods
fwait
js
fiadd
add
lock
(bad)
inc
add
lock
add
and
add
arpl
dec
in
push
or
idiv
ja
mov
std
and
(bad)
cmp
ja
push
loop
mov
mov
or
sbb
sub
add
lock
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
fwait
xchg
mov
add
lock
push
add
xchg
add
cli
add
retf
cwde
mov
pop
mov
cmps
add
mov
ror
jo
(bad)
xor
push
xchg
outs
test
xchg
lahf
push
std
loop
or
jecxz
xor
mov
mov
std
retf
fist
sub
gs
(bad)
push
outs
aaa
mov
adc
into
retf
fdiv
jecxz
mov
and
push
cdq
add
in
push
bnd
add
outs
xchg
sbb
dec
push
aad
out
push
in
cwde
js
jo
xor
dec
and
xchg
push
hlt
mov
pop
pop
popa
mov
push
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
popa
lds
add
leave
out
add
dec
and
ja
sti
xchg
retf
pop
mov
mov
mov
push
jne
jae
xchg
lods
fwait
sub
jmp
xor
jmp
mov
sbb
cmps
ret
ja
inc
sbb
mov
and
in
add
push
jae
push
call
mov
fcom
adc
add
add
add
imul
loopne
sar
(bad)
call
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
dec
sub
lock
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
pop
push
sbb
add
enter
loope
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jg
xchg
leave
cs
stos
push
mov
lea
js
cmp
jmp
dec
pop
lahf
add
add
lds
out
pop
xor
aad
cld
and
jp
xor
hlt
fadd
inc
pop
pop
lock
imul
add
lock
add
xchg
cmps
inc
jns
bound
jge
mov
push
mov
test
xchg
leave
and
xchg
std
sub
xchg
jnp
dec
cmp
repnz
lods
add
add
add
sbb
add
mov
test
lock
add
or
add
in
push
add
lock
pop
jbe
idiv
push
daa
cmp
mov
test
mov
int3
cli
push
cmps
add
add
lock
add
sbb
add
mov
add
sub
add
inc
add
lock
add
es
stos
cmp
(bad)
inc
add
lock
add
lock
int3
pop
cmp
out
loope
pushw
ins
and
pusha
mov
cmp
mov
(bad)
or
rcl
aad
and
pushf
lods
push
add
jns
xchg
dec
int
cmc
mov
jne
add
dec
out
(bad)
mov
lock
into
xchg
int3
push
mov
push
add
xchg
mov
divps
call
loope
or
dec
int
add
add
add
or
(bad)
(bad)
dec
std
imul
in
mov
dec
add
lock
add
(bad)
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
cmp
jnp
lea
lea
(bad)
mov
movs
frstor
addr16
aaa
(bad)
sbb
ins
xchg
(bad)
in
mov
or
pcmpeqb
xor
add
(bad)
(bad)
(bad)
inc
add
mov
add
(bad)
js
mov
xor
int
loope
xor
lock
(bad)
(bad)
jmp
lds
jmp
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
sub
pop
add
pop
pop
add
xor
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
iret
ss
js
push
lahf
xor
xchg
sahf
leave
sahf
xor
or
lock
push
cdq
jnp
inc
imul
rol
sub
das
or
adc
pop
outs
add
loope
add
add
add
xor
mov
out
mov
rcl
imul
clc
push
es
cs
je
mov
or
out
sbb
iret
fisttp
add
lock
(bad)
(bad)
jmp
(bad)
lods
jecxz
stos
xchg
inc
addr16
sar
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
enter
popa
test
xchg
xor
call
inc
dec
xor
mov
ds
sbb
and
and
pop
sbb
jo
cwde
arpl
in
(bad)
popa
mov
repnz
dec
(bad)
rcl
in
cli
mov
pop
dec
repz
pop
and
inc
nop
xchg
xchg
xor
jns
das
inc
arpl
mov
jnp
idiv
iret
addr16
mov
adc
xchg
and
lock
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
in
or
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xlat
mov
lock
lock
inc
arpl
xchg
inc
sti
dec
add
lea
cmp
push
cld
xchg
pop
jg
push
pop
sbb
sbb
in
mov
pusha
retf
sti
jo
fdivr
in
test
add
icebp
pushf
sbb
je
ss
ror
in
cmp
push
sub
xlat
inc
lahf
xchg
pop
stos
test
mov
neg
cmp
jmp
ror
cmp
push
add
(bad)
inc
xor
out
cmp
sbb
push
cmp
cmp
aam
xchg
sbb
dec
cmps
(bad)
push
(bad)
(bad)
(bad)
inc
test
inc
leave
pusha
push
lock
(bad)
jmp
cmps
add
add
add
add
add
xor
(bad)
(bad)
call
push
idiv
cmp
stc
imul
sar
(bad)
dec
add
push
mov
add
add
lock
(bad)
(bad)
jmp
loope
cmp
sar
(bad)
jmp
mov
or
push
fstp
push
daa
rcr
cld
frstor
test
aam
gs
inc
push
mov
icebp
pop
jmp
popf
xchg
adc
jmp
push
iret
xchg
xchg
hlt
test
inc
sbb
push
pop
jns
je
js
leave
and
mov
test
pop
fsubr
adc
lea
lea
cs
cmp
fcom
dec
pop
ficom
(bad)
test
push
sbb
mul
lahf
unpcklps
(bad)
test
xlat
pop
cmp
sbb
test
jmp
mov
sbb
jno
outs
pop
addr16
inc
test
xchg
out
das
add
pop
out
xchg
dec
hlt
pop
hlt
or
mov
inc
pop
shl
push
jp
lahf
aam
ja
test
rcr
lods
out
add
add
enter
adc
aas
aas
repnz
jae
xor
inc
sbb
inc
adc
imul
mov
call
xchg
jl
inc
mov
dec
call
fs
mov
push
aam
ret
(bad)
pop
loope
int
out
ds
les
lsl
mov
inc
mov
push
dec
fcmovb
hlt
dec
or
cwde
leave
push
(bad)
in
push
fcom
add
sti
test
pushf
push
mov
fst
and
mov
arpl
cmp
cwde
mov
push
mov
sbb
xchg
sahf
jo
mov
call
xchg
leave
das
cmp
fstp
shl
in
sub
fst
in
loop
adc
stc
fwait
test
scas
call
push
xlat
mov
xchg
shl
imul
sbb
dec
pop
xor
aaa
(bad)
sar
and
pop
ret
mov
mov
aam
inc
aam
cmp
cmp
xchg
imul
adc
mov
mov
mov
fcomp
adc
cmps
lods
out
sbb
hlt
call
mov
mov
jp
jl
out
sbb
test
pop
out
movs
jp
push
sbb
imul
mov
mov
mov
enter
ret
mov
aad
lock
aam
jmp
test
pop
cmp
jecxz
out
cmp
jecxz
lock
push
stos
dec
xlat
lods
icebp
dec
pop
imul
nop
xor
shl
ret
xor
ret
mov
adc
and
xor
jle
adc
mov
shr
add
cmp
lods
aam
add
dec
or
das
(bad)
xor
and
hlt
loopne
repnz
or
cmp
mov
jnp
xchg
(bad)
ds
dec
and
fist
xor
xchg
outs
fsubr
mov
sub
fcom
push
dec
pop
pop
addr16
jecxz
outs
loopne
dec
jcxz
adc
je
push
lock
or
pop
mov
inc
adc
cmp
mov
sub
daa
cmps
shl
sti
call
in
or
jge
rol
fs
mov
add
mov
addr16
jns
sbb
xchg
lods
dec
stc
jmp
mov
push
mov
add
test
add
test
(bad)
in
lds
mov
aaa
jnp
(bad)
sbb
popf
test
or
adc
fcom
sti
sub
loope
adc
mov
mov
push
xor
je
aam
sub
fadd
push
das
js
cli
ret
dec
mov
rol
xchg
mov
test
pop
lods
xchg
sbb
or
dec
imul
cdq
cmp
cwde
sub
sub
xchg
or
shl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
imul
ins
add
add
add
in
dec
add
lock
add
(bad)
(bad)
(bad)
dec
and
jmp
add
(bad)
(bad)
jmp
es
sub
mov
cmp
lock
add
lock
and
and
or
cmp
sahf
push
mov
pop
daa
jae
shl
enter
fbld
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
cmp
test
(bad)
(bad)
jmp
add
shr
(bad)
(bad)
(bad)
jmp
mov
ss
or
sub
push
dec
iret
call
adc
xchg
xchg
inc
(bad)
pusha
pop
outs
xchg
ins
hlt
mov
cld
sbb
jecxz
mov
push
nop
mov
popa
cmovle
mov
add
out
jle
imul
sbb
stc
push
jae
fnstcw
sub
aaa
push
pop
movs
jno
fstp
jb
repz
xchg
cmp
or
xchg
out
add
aaa
add
lock
(bad)
(bad)
jmp
sbb
loopne
mov
push
(bad)
(bad)
call
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
dec
add
lock
jb
lock
xlat
cmp
sbb
sub
iret
imul
les
sub
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pop
sbb
add
xchg
je
lock
mov
shr
(bad)
call
or
dec
fs
add
and
ret
retf
sbb
into
ror
pop
iret
leave
pop
mov
add
lock
(bad)
(bad)
inc
add
mov
(bad)
(bad)
(bad)
inc
add
lock
jecxz
jo
jecxz
lock
add
(bad)
(bad)
(bad)
dec
mov
add
sar
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
fwait
adc
add
mov
add
mov
add
xor
add
(bad)
(bad)
(bad)
jmp
int
sar
add
sar
(bad)
jmp
cwde
and
jg
add
mov
mov
lahf
outs
(bad)
ja
jp
sub
cld
fidiv
mov
dec
xor
push
(bad)
mov
mov
add
lock
(bad)
push
loopne
lock
add
lock
add
lock
call
or
push
or
add
xor
outs
sbb
test
jns
push
imul
outs
mov
add
lock
(bad)
(bad)
call
adc
jg
loop
loop
jns
lock
(bad)
call
mov
inc
sbb
mov
xchg
inc
or
xchg
movs
push
and
cld
jno
lods
xor
xchg
pop
(bad)
mov
lock
add
xor
add
cmp
lock
add
push
add
and
add
lock
(bad)
(bad)
(bad)
jmp
adc
mov
test
add
sar
(bad)
(bad)
out
ja
jle
(bad)
inc
cmp
or
fsub
test
bound
xchg
cli
std
sar
add
mov
call
fnstsw
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
lods
or
mov
add
lock
test
lods
push
rol
fs
mov
pop
jnp
sbb
scas
xchg
pop
adc
fisttp
mov
push
dec
and
inc
jbe
and
fdivr
int3
repz
repz
cmp
push
mov
mov
inc
loop
and
test
movs
xchg
aam
gs
rol
add
fiadd
jmp
shr
rcr
js
and
pop
cmp
jno
push
adc
add
xor
push
imul
loope
cmc
jle
add
add
scas
mov
and
rol
lock
add
mov
add
lock
add
add
add
outs
add
lock
(bad)
(bad)
call
cdq
push
and
pop
jmp
lock
(bad)
push
sub
push
adc
add
cmp
dec
sub
shl
gs
in
leave
add
jp
les
adc
mov
adc
inc
dec
lock
mov
aam
cmp
pusha
je
pop
inc
repnz
pop
mov
xchg
push
mov
or
add
fdiv
in
inc
adc
(bad)
and
push
mov
push
ret
add
lock
movs
add
add
add
jo
push
imul
call
out
and
inc
out
add
jno
stos
jle
loopne
push
push
int
jge
mov
sub
pop
push
in
add
neg
mov
das
ss
jle
scas
push
div
je
std
xor
ret
push
adc
std
fdivr
pusha
pop
add
jmp
add
lock
add
lock
lds
(bad)
inc
hlt
out
aad
xor
and
xlat
push
xchg
fldenv
xchg
xchg
(bad)
(bad)
xchg
mov
add
push
add
and
add
cmp
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
scas
pop
fidivr
add
lock
cs
lock
(bad)
(bad)
jmp
and
or
(bad)
(bad)
push
add
lock
(bad)
(bad)
call
aaa
cwde
shl
add
sar
(bad)
call
add
add
add
sar
(bad)
call
add
lock
add
lock
add
lock
add
outs
enter
add
icebp
out
es
and
add
push
fstp
out
repz
jmp
mov
inc
inc
lock
mov
jp
in
push
cli
mov
movs
icebp
call
dec
fbld
rcr
imul
fsub
js
jb
mov
pop
pop
xor
xor
cmp
xchg
popf
imul
jns
mov
xor
and
mov
xor
xchg
fwait
call
inc
mov
and
jne
mov
leave
mov
mov
push
adc
add
enter
cmp
cmp
xlat
repnz
out
and
ins
jmp
fwait
mov
cli
(bad)
mov
call
fisttp
dec
push
out
fwait
movs
xor
test
jbe
push
xchg
push
data16
outs
add
xchg
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsubr
fdiv
xchg
fnstcw
test
lock
cs
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
sub
cmp
add
lock
(bad)
(bad)
push
outs
pop
inc
push
xor
dec
das
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
popf
stc
ret
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
into
pushf
push
cmps
dec
add
lock
test
lock
add
lock
add
push
add
lock
(bad)
(bad)
push
sbb
stos
xchg
loop
call
inc
add
lock
(bad)
(bad)
call
add
lock
xor
inc
dec
stos
aad
outs
fnstcw
mov
cmp
jne
in
leavew
inc
mul
call
cmp
jae
jecxz
sbb
lds
add
dec
repz
and
ja
lods
inc
sbb
out
add
lock
(bad)
(bad)
call
std
adc
cli
push
add
xchg
lock
(bad)
inc
add
lock
add
fcmovnb
add
and
lock
add
and
lock
jecxz
lock
lock
add
and
push
inc
adc
ins
test
int3
push
jg
mov
in
pop
je
mov
push
push
mov
addr16
xchg
push
mov
pushf
push
xor
cmp
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
leave
dec
dec
pop
dec
push
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jge
mov
mov
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
mov
test
outs
jl
add
add
add
add
add
push
add
lock
push
add
add
add
push
pusha
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
icebp
jecxz
sub
sub
add
das
mov
lock
loop
lock
cmps
add
add
add
(bad)
(bad)
(bad)
inc
pusha
lds
cwde
and
ja
add
lock
lock
lock
mov
pop
mov
push
add
adc
and
call
mul
mov
mov
test
lea
fdiv
sti
pop
call
mov
mov
shr
or
inc
fsubr
ficom
sbb
pop
icebp
pop
ss
cmps
push
jo
fcomp
int
mov
into
or
pop
mov
ret
mov
dec
or
lock
add
clc
mov
lock
inc
cmps
dec
(bad)
push
(bad)
imul
les
push
fs
lea
daa
mov
dec
ror
add
lock
and
add
pop
adc
lock
lock
add
out
popf
add
push
add
lock
fild
test
dec
sar
ss
je
pop
adc
mov
mov
add
cmp
(bad)
dec
pop
mov
fsub
out
sbb
fs
mov
add
add
add
add
lock
loopne
add
jmp
add
and
xchg
cmp
mul
cld
dec
mov
imul
test
xchg
and
xor
push
(bad)
xor
cmp
retf
jg
sahf
dec
sti
stos
sbb
or
vaddps
sbb
(bad)
ss
scas
inc
mov
cmps
popf
mov
(bad)
(bad)
popa
lahf
sbb
outs
push
aad
icebp
xchg
and
out
adc
dec
cmp
mov
xlat
cmp
add
rcr
sar
mov
into
cs
mov
stos
dec
shr
mov
test
rcr
jns
ret
(bad)
cmp
add
mov
jl
xor
sub
scas
dec
rcr
test
(bad)
movs
cs
mov
addr16
in
sti
addr16
add
lock
(bad)
(bad)
jmp
popf
mov
sub
nop
add
ret
(bad)
(bad)
inc
add
add
add
add
pop
cs
neg
sar
(bad)
inc
add
lock
add
lock
add
add
add
xchg
dec
sub
mov
in
jp
pusha
cmps
xchg
ins
sbb
pusha
mov
mov
loop
jg
dec
loope
out
and
push
cmp
jmp
mov
cs
sbb
cmp
cmp
mov
mov
lahf
imul
pop
jmp
mov
out
pusha
cmp
out
int
fwait
aam
add
fld
adc
mov
mov
jb
enter
sbb
sar
xchg
add
(bad)
popf
out
in
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
imul
sub
sbb
lock
add
add
add
retf
test
enter
mov
xchg
dec
clc
push
or
jmp
jl
push
and
shl
(bad)
popa
lock
push
add
xchg
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ficomp
pusha
mov
add
and
add
(bad)
(bad)
(bad)
(bad)
in
mov
sbb
cmp
(bad)
push
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
data16
pop
popf
ss
or
scas
mov
mov
inc
std
int3
retf
dec
add
or
mov
adc
dec
xor
mov
add
or
add
xor
add
(bad)
(bad)
(bad)
jmp
retf
mov
cmp
dec
cwde
add
sar
(bad)
(bad)
jmp
add
and
lock
add
jg
cmp
jns
sub
inc
jmp
jo
xor
pop
jo
mov
jo
mov
dec
jns
std
add
dec
sbb
icebp
ret
sahf
jmp
mov
pop
mov
imul
sbb
retf
cmp
adc
cdq
jne
stos
add
hlt
xor
mov
pop
jle
gs
pop
stos
fnstenv
dec
(bad)
xor
cmp
lea
test
inc
jmp
shr
out
sbb
(bad)
(bad)
jmp
sub
mov
or
add
ret
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
into
xor
add
sub
add
add
add
push
add
lock
(bad)
(bad)
(bad)
fild
pop
mov
push
(bad)
mov
(bad)
(bad)
dec
add
xor
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
lock
add
add
xor
xor
scas
jns
mov
inc
push
mov
(bad)
push
das
sar
cmc
push
(bad)
iret
xor
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
push
inc
aaa
in
push
aaa
add
lock
add
mov
hlt
xor
dec
test
add
inc
xor
imul
sahf
mov
mov
enter
popf
mov
xchg
or
movs
cpuid
sbb
push
imul
lock
popf
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
fwait
jo
and
adc
jmp
imul
mov
dec
repz
mov
nop
sti
enter
sbb
popa
ss
popf
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
popf
dec
add
add
sub
add
lock
inc
lock
lock
add
and
add
lock
mov
add
add
add
retf
addr16
add
add
add
add
push
ficomp
and
jle
test
(bad)
or
add
pop
add
lock
lock
lock
adc
add
lock
and
pusha
add
add
add
dec
jbe
adc
add
lock
add
adc
add
lock
add
leave
out
add
add
add
dec
sub
lock
push
pop
outs
and
and
ins
adc
cmps
int
sbb
shr
cmp
inc
bound
cld
cmps
paddd
fstp
xchg
jecxz
adc
imul
es
add
repz
retf
aas
sahf
cmp
pop
inc
mov
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
je
add
lock
mov
out
xlat
push
fs
rcl
add
jge
hlt
mov
icebp
xor
add
call
retf
(bad)
push
push
movs
fdivrp
repz
mov
add
lock
xor
add
add
daa
xchg
add
push
add
lock
cmp
and
(bad)
shr
je
sub
fs
mov
push
lds
fsubrp
or
sub
stos
in
cmp
adc
in
add
push
imul
inc
or
fldcw
xlat
jmp
jae
sbb
pop
out
pop
jg
shl
inc
dec
daa
and
cld
jns
sahf
ins
and
fnstsw
or
ja
pop
dec
lds
cs
and
in
scas
data16
push
push
mov
fcom
not
fnsave
add
add
add
inc
scas
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
fld
mov
inc
add
lock
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pusha
neg
add
aam
sbb
(bad)
xchg
push
jmp
cli
leave
and
dec
adc
jae
cmp
dec
sbb
mov
push
inc
mov
mov
mov
xchg
call
mov
cli
mov
sahf
loopne
pop
add
lock
add
hlt
movs
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
mov
cwde
int3
(bad)
mov
test
in
outs
popf
xchg
or
aaa
pop
lea
not
xchg
pop
lods
sub
loopne
sahf
add
mov
mov
and
or
jno
mul
inc
add
add
add
push
add
lock
inc
add
jg
add
or
add
pushf
mov
lock
add
adc
add
adc
(bad)
shl
and
jmp
pop
rcl
test
mov
xlat
pop
xchg
nop
clc
jns
mov
ret
call
stc
movs
xchg
dec
lahf
stos
out
mov
stc
xor
mov
and
ret
xlat
pop
push
enter
loopne
popa
mov
daa
add
stos
repz
mov
jmp
stos
mov
int
mov
rcl
cmps
jnp
cmp
jbe
aas
in
mov
nop
icebp
add
aas
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
test
cmp
add
and
add
lock
(bad)
(bad)
jmp
cli
and
mov
(bad)
jmp
leave
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
mov
loopne
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
push
repnz
add
repnz
lock
loop
cmp
adc
es
cmc
add
xor
lods
xchg
adc
push
add
or
retf
stc
arpl
imul
je
push
add
lock
add
cmps
nop
retf
lods
jb
pop
ret
sar
(bad)
dec
add
push
add
lock
add
sub
add
mov
add
lock
add
lods
xchg
push
daa
cmp
jecxz
js
and
dec
add
xor
inc
jae
jmp
add
enter
icebp
popa
retf
xor
inc
dec
push
add
jmp
push
cwde
add
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
inc
test
lock
stos
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
mov
or
mov
push
add
lock
add
(bad)
stos
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cld
sub
xor
add
imul
add
or
add
cmp
add
(bad)
(bad)
(bad)
jmp
stos
inc
pavgw
(bad)
inc
add
lock
add
mov
add
or
add
inc
leave
add
or
add
xor
add
(bad)
(bad)
(bad)
push
and
hlt
add
mov
lock
(bad)
dec
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fstp
add
dec
sub
jecxz
popa
daa
cmp
aam
sbb
jmp
jnp
cmps
and
(bad)
push
ss
push
mov
into
out
hlt
in
and
jmp
add
jmp
mov
shl
ret
add
add
add
xchg
test
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
jmp
lahf
jno
pop
mov
cmps
cmp
pop
jo
inc
cmps
repnz
in
lods
xor
shl
or
movs
xchg
dec
aam
shl
popf
xlat
and
and
and
lds
sub
pop
sbb
pop
ds
jne
lock
and
rcl
pop
or
cmp
in
dec
mov
cdq
test
mov
sbb
cli
cmp
sbb
jp
repz
int3
icebp
cmp
test
pusha
js
nop
(bad)
ins
ret
push
fldenv
and
clc
addr16
xchg
xchg
aaa
sub
and
mov
jbe
repnz
fild
add
jle
pop
sar
scas
cmp
inc
mov
sbb
addr16
loope
je
loop
and
add
add
mov
xor
scas
or
cmp
cli
sti
xchg
add
scas
xchg
mov
adc
inc
or
retf
sub
pop
out
push
mov
jmp
add
xor
sti
and
xor
xchg
or
push
scas
mov
daa
mov
sar
retf
jno
pop
(bad)
push
mov
das
in
sahf
push
not
xchg
iret
arpl
js
push
rol
xchg
ret
jae
mov
lods
sbb
push
push
mov
iret
lods
fstp
lods
xor
mov
xor
stos
mov
ss
bound
jae
in
or
fs
stos
and
mov
mov
and
imul
aad
xor
adc
mov
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
pop
cwde
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
pop
mov
lock
add
jnp
add
push
add
adc
mov
mov
sub
xor
scas
pop
(bad)
cmps
pushf
inc
xchg
loope
test
(bad)
xchg
aad
xor
std
jne
leave
mov
iret
adc
xor
mov
jg
jb
les
ds
out
xor
mov
sar
pop
push
lods
fist
xlat
jne
push
xchg
lahf
xchg
jne
in
call
lods
push
mov
inc
add
lock
(bad)
(bad)
dec
loop
pop
fwait
test
xor
add
add
add
adc
jp
into
sbb
(bad)
jmp
add
inc
add
lock
clc
jge
(bad)
mov
jns
jb
sub
fwait
gs
fldenv
nop
daa
movs
movs
push
and
pop
cmc
fs
(bad)
shr
jno
pusha
(bad)
in
into
aaa
mov
imul
add
sar
(bad)
call
inc
lock
add
lock
add
lock
inc
push
inc
fdivr
jge
cmp
jo
mov
stos
sbb
lock
add
and
gs
add
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
call
lock
mov
lock
add
(bad)
(bad)
(bad)
jmp
push
test
dec
jmp
retf
lock
(bad)
call
loopne
lock
add
add
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
(bad)
sar
(bad)
xchg
push
add
cmp
leave
out
sti
stc
jae
outs
cmp
cs
jae
dec
nop
xchg
pop
xchg
xor
inc
adc
push
iret
(bad)
lock
xor
(bad)
aad
xor
push
jnp
loopne
data16
sbb
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
les
xor
add
jb
add
sub
jbe
adc
xor
in
into
repnz
push
loop
push
scas
aad
rcr
enter
jae
dec
inc
push
add
imul
cmps
lds
add
(bad)
(bad)
(bad)
jmp
cmp
arpl
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
adc
dec
add
sbb
add
lock
(bad)
(bad)
jns
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
iretw
leave
inc
out
(bad)
or
add
lock
ret
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xlat
ins
jmp
pop
in
add
ret
test
leave
hlt
sub
bswap
aam
retf
add
lods
cli
sbb
mov
jge
lods
jbe
push
repnz
or
scas
ja
mov
repnz
sbb
repz
les
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ficomp
inc
add
xchg
xchg
jnp
jecxz
or
jl
gs
cmc
call
nop
mov
sub
add
add
add
pop
stos
add
add
add
add
add
sbb
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
mov
jb
add
jecxz
dec
jne
or
out
sbb
(bad)
ins
test
push
add
lock
(bad)
(bad)
(bad)
jl
xchg
ret
mul
retf
ret
(bad)
(bad)
dec
adc
cdq
pop
jnp
icebp
enter
mov
fs
retf
fwait
add
aaa
loop
sbb
mov
sbb
sub
xchg
sub
dec
or
add
sbb
adc
test
xchg
cmps
push
addr16
cmp
inc
dec
inc
push
cld
scas
scas
enter
push
cmp
lds
cmp
mov
mov
add
lock
add
sub
or
sar
(bad)
call
add
lock
lock
retf
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
shl
retf
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
dec
in
push
pop
ins
adc
add
mov
(bad)
jle
pop
iret
dec
inc
push
ss
lahf
or
adc
pop
test
shl
jp
lods
in
sub
fs
sub
or
inc
jg
ret
movs
aas
(bad)
fnop
loopne
loope
neg
or
fst
mov
adc
inc
push
cmc
pop
les
int3
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
scas
jge
inc
jae
pushf
cmp
xchg
in
cmc
call
(bad)
pop
loope
sub
push
mov
sti
add
dec
inc
mov
mov
xchg
hlt
mov
jne
add
(bad)
(bad)
(bad)
inc
sahf
leave
dec
ja
adc
sar
(bad)
(bad)
(bad)
and
jge
mov
push
cld
jae
add
fisub
fiadd
cdq
out
mov
xor
addr16
cmp
cwde
aam
xlat
dec
xor
add
(bad)
(bad)
(bad)
(bad)
sti
loope
enter
push
aaa
add
jmp
rol
leave
lds
lock
add
add
xchg
pop
push
dec
and
and
fiadd
sbb
cmp
pusha
add
xchg
repz
cmp
cmp
shl
aas
hlt
mov
push
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
dec
add
lock
add
and
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
cmp
add
add
add
cmc
add
push
xchg
add
add
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
cwde
pop
mov
add
lock
rol
lock
sti
dec
xor
adc
sub
movntps
jmp
or
adc
leave
enter
jns
mov
fisttp
sub
adc
xor
in
mov
and
je
xor
mov
pop
dec
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fidiv
dec
add
lock
add
and
lock
add
push
add
adc
add
lock
add
adc
call
adc
add
lock
mov
add
push
add
adc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
ret
dec
data16
inc
icebp
jmp
pop
xor
in
xchg
sub
inc
out
cmp
cmp
sub
inc
and
icebp
ins
mov
add
in
adc
in
sbb
add
in
dec
add
lock
lock
add
add
add
gs
add
(bad)
fadd
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
push
retf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
nop
and
xor
push
add
lock
fld
lock
xor
jp
jmp
popf
xchg
mov
out
jae
fcom
add
dec
shr
int3
jnp
lahf
pop
push
xchg
mov
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jle
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
mov
(bad)
(bad)
(bad)
push
out
mov
lock
cmp
lock
add
jg
xor
jmp
jmp
inc
dec
add
add
lock
(bad)
(bad)
push
iret
ins
fsubr
add
sar
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
jns
dec
arpl
fld
lock
(bad)
dec
add
add
add
shl
sbb
(bad)
add
lock
add
lock
bound
out
push
mov
xchg
stos
movs
lock
stc
fisubr
xor
push
cdq
in
sbb
pushf
repz
xchg
xchg
push
cwde
pop
loope
leave
inc
das
ins
sbb
sbb
int3
scas
pop
in
fnstenv
sub
outs
xchg
xchg
out
int3
lock
xchg
push
shr
inc
jns
push
and
int3
ss
add
lock
mov
add
test
jl
dec
add
add
sar
(bad)
jmp
pop
add
lock
add
jbe
add
sti
fld
cwde
ds
daa
dec
push
sub
in
adc
jmp
xor
xchg
cwde
xchg
sahf
in
mov
sahf
test
jo
add
fcmovbe
add
mov
cwde
add
jg
mov
add
(bad)
shl
aaa
mov
fdivr
xlat
mov
lock
ds
out
ds
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fsubr
lock
loop
lock
lock
gs
ins
adc
mov
nop
int3
sbb
jns
scas
adc
pop
push
sub
imul
bound
jge
jns
js
outs
dec
xor
add
(bad)
(bad)
(bad)
dec
push
push
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
repnz
mov
lock
lock
add
pop
add
lock
mov
jge
add
xchg
fld
in
pop
out
(bad)
fild
bound
cmp
jecxz
lds
loope
mov
sar
fisttp
iret
aam
in
mov
mov
mov
cmp
push
call
repz
inc
cmp
pop
inc
push
scas
mov
sti
out
push
jl
je
ds
loope
mov
out
jo
call
xchg
xchg
out
mov
adc
popa
pop
and
mov
jnp
gs
mov
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
lock
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
fiadd
dec
ins
xor
add
(bad)
(bad)
(bad)
jmp
les
enter
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
arpl
aaa
inc
jp
fdiv
add
lock
in
lock
imul
lock
xchg
dec
neg
aad
fimul
mov
stos
jecxz
out
pop
ins
adc
pop
xchg
or
mov
mov
sbb
push
pop
xchg
xchg
mov
inc
out
dec
fisub
icebp
adc
out
jae
fidivr
or
mov
pop
mov
sbb
pop
call
cli
cmp
sub
add
lock
add
loop
add
jmp
(bad)
(bad)
(bad)
(bad)
inc
pop
cmp
xchg
in
mov
adc
add
mov
add
lock
(bad)
(bad)
dec
mov
iret
xchg
les
retf
out
lock
(bad)
(bad)
inc
add
lock
jp
sub
lock
add
ds
aad
dec
lahf
jae
xor
jnp
mov
mov
and
jl
mov
(bad)
(bad)
(bad)
call
fsubr
push
add
lock
add
xor
add
(bad)
(bad)
(bad)
jmp
cmp
fwait
xchg
mov
add
sar
(bad)
jmp
add
adc
in
mov
ss
sub
sbb
and
cmp
pop
jge
adc
iret
jae
or
lahf
dec
push
jb
mov
sbb
adc
bound
cdq
and
jns
add
add
add
add
add
mov
sub
lock
xor
xor
mov
adc
cmp
and
xor
daa
inc
fist
ret
in
int
mov
pop
inc
in
sub
mov
stos
or
jecxz
into
or
add
pusha
mov
push
int
mov
enter
xor
or
aad
push
and
jae
xchg
xor
xor
leave
push
mov
push
fwait
rcr
inc
ror
xchg
push
jle
sub
cmp
(bad)
cmp
in
mov
outs
ret
xchg
jp
out
cwde
mov
cmp
and
pop
push
(bad)
aad
(bad)
push
mov
enter
out
push
dec
std
mov
jl
call
popf
fadd
shr
xchg
fistp
push
ins
cs
add
push
add
and
add
out
adc
mov
inc
add
test
icebp
aad
popf
mov
push
(bad)
inc
inc
mov
and
aam
jnp
mov
xor
(bad)
wbinvd
dec
aas
xor
fadd
int
pop
or
inc
sub
sub
pop
sub
lock
push
or
cmp
adc
push
mov
es
sub
dec
and
add
(bad)
(bad)
(bad)
call
daa
xor
repnz
(bad)
add
call
mov
out
ja
adc
mov
daa
sub
nop
data16
add
sar
(bad)
dec
add
lock
add
jno
add
clc
inc
mov
test
jmp
(bad)
imul
xchg
pop
xchg
jae
rol
in
retf
pop
sti
mov
adc
add
enter
mov
add
fs
add
push
fwait
add
or
add
and
arpl
inc
add
cmpxchg
push
add
daa
adc
(bad)
pop
loopne
sbb
xchg
mov
repnz
jb
lea
and
icebp
out
in
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
ret
add
or
add
jl
add
add
add
pop
add
push
out
xlat
mov
jb
bound
mov
mov
adc
jae
mov
xor
xchg
cwde
sub
out
outs
sub
jge
add
xchg
mov
push
add
and
lahf
lods
sub
jnp
sub
(bad)
dec
arpl
aas
retf
inc
pop
repz
enter
addr16
push
jge
pcmpeqd
inc
lods
mov
jb
jbe
xchg
and
jne
lock
icebp
xor
cmc
arpl
jo
lock
add
push
inc
scas
iret
clc
push
push
pop
popf
stos
mov
xchg
sub
and
imul
jno
mov
jmp
pop
js
cmp
lods
arpl
loopne
dec
sub
std
neg
mov
pop
movs
dec
jl
mov
push
add
add
add
adc
add
(bad)
(bad)
(bad)
inc
sbb
add
adc
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
pop
sub
sbb
add
fdivp
add
rcr
pop
jae
dec
int3
aam
stos
or
fwait
test
js
xor
pop
sbb
cmps
xchg
cmp
inc
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
add
lock
(bad)
(bad)
inc
push
or
scas
retf
add
repz
sar
(bad)
jmp
dec
sub
mov
push
sub
arpl
je
movs
icebp
fbstp
fistp
pushf
jnp
xor
std
jns
cld
cmp
fist
or
push
lock
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jp
inc
mov
and
shl
push
jns
sbb
fnsave
bnd
pop
mov
das
loop
push
xor
cmp
ret
dec
add
and
bound
sbb
scas
test
add
mov
and
jmp
aas
sub
ret
stos
mov
sub
adc
adc
fwait
push
scas
sub
ins
pop
pop
bnd
mov
xor
add
add
or
add
(bad)
(bad)
(bad)
call
jecxz
mov
data16
lock
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
cmp
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
nop
and
pusha
fcom
sti
adc
ja
push
xchg
dec
cmp
ror
shl
or
loop
jo
stos
sub
ins
arpl
inc
cwde
and
sub
mov
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
shl
jle
inc
dec
sub
or
xor
or
jne
int3
or
adc
lock
fsubr
add
fimul
mov
sar
and
sbb
mov
inc
xchg
jno
or
stos
or
mov
jl
mov
adc
dec
movs
icebp
popf
add
pop
adc
in
pop
jecxz
fisubr
adc
cmp
xor
clc
sub
outs
cli
xchg
pop
cmp
aam
(bad)
xor
pop
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
daa
cmp
add
mov
add
mov
add
ror
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
inc
sbb
xchg
mov
add
std
clc
add
mov
add
add
add
add
add
add
sbb
add
jg
std
add
pop
mov
loopne
cld
xchg
pop
in
push
sahf
and
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsubr
iret
mov
neg
lock
add
aaa
std
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repz
add
add
lock
add
add
add
add
sub
add
stos
dec
add
js
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
lods
aas
ud2
test
and
add
(bad)
(bad)
(bad)
inc
sbb
pop
cmps
or
add
sar
(bad)
call
add
lock
add
add
add
div
add
mov
add
lock
aas
ret
les
xchg
in
and
fs
mov
imul
and
inc
sar
dec
std
fwait
mov
push
xchg
mov
aad
ds
fwait
out
sbb
add
add
add
add
add
add
cs
add
test
add
(bad)
(bad)
(bad)
jmp
cdq
jno
rol
add
sar
(bad)
dec
jno
adc
jne
mov
retf
inc
or
popf
mov
xchg
(bad)
data16
xchg
cdq
adc
sub
neg
in
lahf
lods
mov
test
and
lods
push
xor
add
and
add
dec
cmc
mov
in
mov
jae
push
inc
test
hlt
fadd
cs
lock
pop
push
xchg
inc
adc
ret
in
mov
outs
sub
and
sbb
pushf
or
imul
inc
jne
inc
sub
push
pop
mov
pushf
sbb
pop
(bad)
sub
inc
mov
scas
push
pop
in
cmp
jl
add
iret
into
sbb
cmc
int
sub
and
cmp
and
ss
mov
add
add
add
or
(bad)
(bad)
(bad)
in
mov
fimul
ins
(bad)
sar
(bad)
inc
add
iret
std
add
call
sahf
inc
test
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
mov
stc
pop
add
lock
add
lock
add
sub
and
add
lock
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
mov
add
lock
add
cmp
add
dec
inc
and
sbb
mov
push
adc
xchg
mov
push
mov
imul
loop
loope
mov
push
inc
xchg
js
es
jnp
(bad)
clc
cmps
loop
stos
xchg
pop
cs
cmp
push
pop
in
(bad)
(bad)
enter
cld
in
inc
mov
jg
mov
or
leave
push
sub
jo
cs
movs
or
inc
add
lock
(bad)
(bad)
dec
cmp
ret
lock
(bad)
call
jmp
pop
pop
arpl
fisttp
jbe
dec
dec
inc
int
(bad)
les
les
jle
in
repz
mov
mov
neg
fnstsw
inc
xchg
push
mov
add
lock
add
or
add
(bad)
(bad)
(bad)
inc
mov
push
sar
(bad)
jmp
add
or
add
call
add
add
add
add
add
into
data16
out
scas
ret
push
cmp
call
push
mov
rcl
imul
push
dec
add
out
and
or
pop
pop
or
jmp
pop
mov
jl
mov
xlat
daa
ja
inc
mov
dec
test
mov
push
loop
pusha
jnp
outs
mov
jae
xchg
nop
scas
adc
jne
adc
mov
fidiv
add
xchg
sti
stos
push
adc
adc
ds
and
(bad)
out
cdq
idiv
pop
push
mov
out
gs
mov
inc
mov
mov
outs
fiadd
gs
daa
mov
sub
stc
(bad)
mov
popa
adc
outs
enter
or
pop
and
lds
fidivr
add
lock
(bad)
(bad)
push
fstp
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cld
lock
sbb
add
xor
add
jne
add
add
add
add
add
pop
add
lock
add
add
test
cmp
sar
(bad)
push
repnz
lock
lock
sub
fcom
push
in
ret
out
mov
pop
(bad)
push
in
xor
(bad)
cmp
mov
pop
dec
scas
jmp
int
sbb
fadd
mov
ins
jae
pop
cld
int3
push
out
mov
sub
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
sti
nop
and
xor
inc
lock
inc
add
inc
(bad)
(bad)
jmp
sahf
mov
jl
inc
add
inc
add
lock
xor
(bad)
(bad)
jmp
cmps
add
lock
lock
xchg
out
or
dec
imul
stos
jae
mov
aas
sti
add
imul
fdiv
in
loope
pop
(bad)
and
sbb
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
lock
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
add
lock
or
lock
add
(bad)
(bad)
(bad)
(bad)
mov
pop
enter
add
sar
(bad)
dec
jge
(bad)
jmp
nop
mov
sbb
mov
sbb
inc
(bad)
mov
sahf
cmp
or
cmp
adc
fnstcw
rcl
cwde
test
dec
xchg
add
cli
mov
pop
sub
mov
call
cdq
pop
aam
popf
stc
out
fsubrp
pop
add
movs
and
imul
dec
dec
jne
dec
push
in
fmul
ds
(bad)
outs
rcl
xchg
ror
push
push
mov
movs
pop
ror
ins
jbe
or
cld
push
(bad)
repnz
ja
sbb
and
enter
mov
rol
(bad)
mov
movs
jo
jmp
loope
rcr
sbb
test
ss
aaa
xchg
clc
jb
daa
mov
movs
sub
out
adc
jmp
cwde
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
pop
mov
add
mov
add
lock
(bad)
(bad)
dec
pusha
sbb
mov
sar
(bad)
(bad)
cli
inc
or
xchg
in
(bad)
fstp
mov
cmc
add
shr
mov
xchg
pop
lods
mov
scas
in
pusha
pop
out
dec
cs
ins
xchg
dec
mov
adc
cmp
les
cmp
add
popf
arpl
sub
sbb
cwde
inc
cmp
adc
cdq
ins
lds
(bad)
int
mov
mov
xor
xlat
loop
imul
jae
add
and
add
add
push
add
xor
add
add
add
add
add
push
add
lock
(bad)
(bad)
jmp
sahf
call
adc
lock
(bad)
jmp
leave
neg
push
gs
nop
sbb
jge
cmps
repz
adc
jl
lods
jo
fsub
rcr
sub
mov
cmp
pop
inc
ins
out
xor
dec
mov
bound
cmp
inc
mov
jecxz
jnp
out
out
mov
movs
push
inc
mov
add
sar
(bad)
dec
add
lock
add
lock
add
lock
lock
(bad)
(bad)
inc
push
lock
(bad)
inc
mov
sbb
fs
fnstcw
mov
es
dec
and
pusha
inc
sahf
test
lds
iret
xchg
push
fiadd
or
pushf
pop
mov
das
xchg
sbb
dec
xchg
add
mov
sbb
sbb
pop
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fmul
inc
lods
sbb
mov
and
(bad)
(bad)
(bad)
mov
gs
pushf
pop
add
(bad)
(bad)
(bad)
inc
add
lock
add
inc
dec
add
cmp
add
test
loope
mov
mov
jb
cmps
cli
fcomp
mov
pop
xchg
dec
outs
sar
mov
or
popa
test
loopne
cmc
inc
retf
div
mov
lea
mov
jmp
mov
or
and
scas
sub
cmps
jo
retf
pusha
sbb
push
gs
clc
push
aad
out
test
jl
push
or
xor
push
xchg
pop
jo
(bad)
pusha
mov
mov
or
inc
dec
rcr
pop
cmp
cwde
(bad)
leave
stos
std
xor
into
in
(bad)
fnsave
jmp
sahf
ins
daa
xchg
push
scas
add
and
mov
call
jg
adc
pop
jmp
add
lock
loopne
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
add
in
add
mov
jno
mov
sub
pop
lea
pop
sbb
cmp
movs
fmul
loop
xchg
test
call
cmc
jle
les
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
adc
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
das
add
jne
mov
mov
aad
sub
jnp
adc
test
popf
out
jmp
stc
(bad)
out
stos
cmc
sub
arpl
daa
or
or
fcmovnb
pop
fdivp
in
call
push
cmp
and
div
inc
jg
add
pop
loope
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
call
bound
sbb
add
add
(bad)
jmp
jno
jae
in
adc
aas
aam
lock
retf
jmp
mov
and
dec
push
mov
jmp
cmps
xor
addr16
inc
jge
test
mov
and
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
fiadd
lock
add
sbb
dec
ret
mov
cmps
sbb
in
and
sbb
icebp
fs
dec
xor
mul
push
and
sahf
outs
inc
test
test
add
lock
xor
lock
popa
call
push
cmp
dec
sahf
mov
lods
jne
fild
add
xor
cmp
loop
push
cli
mov
shl
add
lock
test
lock
add
out
cwde
add
push
add
lock
(bad)
(bad)
jmp
mov
add
sar
(bad)
push
add
lock
(bad)
(bad)
jmp
mov
or
or
aaa
and
(bad)
(bad)
cld
arpl
imul
fdivr
push
push
mov
das
or
idiv
pop
sub
pop
shl
xlat
stos
data16
adc
jmp
fcomp
cmp
mov
or
or
ins
mov
dec
add
sub
ds
stos
(bad)
lock
out
fbld
in
ja
add
ds
cmp
cld
mov
jno
pop
imul
inc
addr16
xchg
inc
xchg
inc
pop
jl
(bad)
in
add
retf
cmp
push
push
sbb
aam
push
mov
pushf
add
mov
add
and
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
stos
pop
sar
pop
sbb
inc
push
idiv
movs
or
popf
pop
adc
jle
pop
add
and
xchg
xchg
dec
test
pusha
ret
das
xchg
or
jmp
mov
ds
push
push
repz
mov
pop
or
dec
daa
jae
adc
outs
sbb
sbb
cmps
iret
sbb
jg
or
fisttp
pop
add
jno
jns
in
pop
inc
xchg
push
jmp
leave
push
int3
cmp
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
push
adc
sbb
and
add
inc
inc
add
jl
adc
mov
lods
add
xor
lock
mov
cmp
mov
push
jae
cs
jnp
test
add
lock
(bad)
(bad)
push
pop
ds
cmp
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
loope
enter
dec
add
lock
add
xor
(bad)
(bad)
jmp
adc
scas
inc
add
dec
add
lock
add
jg
add
aad
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
xor
add
cli
sub
lock
add
mov
mov
xchg
xchg
cs
inc
fiadd
inc
pop
adc
jmp
sub
js
repz
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
or
js
add
(bad)
(bad)
(bad)
call
add
sub
lock
(bad)
jmp
pop
ficomp
pop
jmp
sbb
out
cmp
mov
lods
jmp
mov
ins
pop
push
test
mov
pushf
pop
xchg
and
shl
daa
lock
int3
mov
jg
out
in
cmp
pop
out
aad
loopne
xor
cwde
pop
cld
dec
xchg
sbb
sahf
mov
loop
dec
fwait
inc
sub
or
lock
xchg
loopne
mov
push
lods
pop
mov
pop
dec
xor
ret
test
add
test
mov
xchg
cld
xor
jns
jbe
ror
xchg
inc
fwait
es
scas
sbb
inc
outs
mov
call
cmp
or
mov
pop
movs
repz
xor
imul
(bad)
(bad)
(bad)
inc
push
inc
aaa
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
enter
push
add
xor
lock
ss
push
xchg
fistp
imul
sahf
mov
or
cmps
xchg
mov
imul
mov
jnp
pop
adc
sbb
and
add
aam
xchg
js
outs
adc
jle
xor
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
cdq
clc
jns
add
add
add
add
add
addr16
add
add
add
add
add
je
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
lock
aaa
add
lock
inc
add
lock
(bad)
(bad)
call
js
retf
push
jg
test
add
add
(bad)
push
add
lock
(bad)
(bad)
push
adc
mov
xor
lock
(bad)
call
xor
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
lea
jl
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
(bad)
fild
add
add
lock
add
sub
add
add
add
sbb
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fidiv
xchg
sar
(bad)
inc
add
lock
add
add
pop
loope
xchg
lahf
les
or
das
push
push
shr
(bad)
mov
popf
xor
xchg
add
jo
inc
cwde
(bad)
mov
shl
mov
lods
fidivr
jns
xor
lahf
inc
dec
popf
shl
nop
mov
push
movs
rcr
add
or
add
jle
int
ret
xor
sahf
jno
sbb
mov
mov
pushf
pushf
test
ss
lods
inc
lods
aas
sbb
cli
mov
(bad)
(bad)
imul
dec
fldpi
xlat
enter
xchg
jb
retf
test
xchg
add
xor
sbb
jge
sbb
das
push
add
lock
and
mov
ror
mov
sbb
(bad)
fs
in
sub
inc
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
inc
mov
je
push
dec
je
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
and
add
pop
ss
or
sar
xchg
and
add
and
mov
daa
stc
or
push
jp
fcmovnbe
jmp
fwait
cli
xchg
sub
mov
cmp
(bad)
sbb
lock
and
fild
fnstenv
daa
push
sub
lds
gs
push
add
and
add
lock
and
add
add
add
add
cdq
fiadd
and
sub
lock
mov
mov
cmp
sar
shl
repz
or
cmp
(bad)
add
adc
cmp
dec
iret
arpl
neg
ror
and
pop
sub
dec
add
dec
dec
js
inc
add
mov
pop
mov
cmp
xor
add
(bad)
(bad)
(bad)
call
push
mov
jnp
cmp
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
movs
dec
cwde
je
cli
lds
add
lock
cmp
lock
add
or
add
or
add
add
add
add
in
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ins
push
scas
rol
add
push
cmp
lock
or
inc
mov
les
scas
retf
ins
jmp
ror
out
mov
(bad)
scas
pop
int3
ja
cmp
sbb
repz
add
into
movs
jg
dec
sbb
mov
retf
mov
(bad)
(bad)
(bad)
call
mov
leave
jmp
mov
add
lock
(bad)
(bad)
call
out
cld
xor
(bad)
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
jnp
xor
add
sub
lock
or
xor
jns
cmp
inc
cmp
std
dec
mov
aam
cmp
movs
arpl
ja
test
or
shl
dec
cld
mov
out
scas
cdq
xlat
inc
jmp
push
retf
and
ret
and
call
icebp
xlat
sbb
hlt
or
sub
loope
fcmovb
sub
ins
(bad)
lea
sbb
dec
jmp
out
xor
ins
push
mov
fs
adc
or
add
(bad)
(bad)
(bad)
dec
lahf
adc
add
sar
(bad)
call
mov
mov
ret
movs
lods
popf
push
scas
div
xor
out
popa
adc
(bad)
xchg
std
ror
sti
cmp
add
add
mov
in
inc
not
mov
addr16
cmc
js
jmp
ins
gs
mov
je
fdiv
mov
mov
xchg
sub
(bad)
(bad)
(bad)
(bad)
push
add
lock
cmp
inc
sahf
pop
mov
arpl
cmc
sub
xchg
jge
mov
out
inc
jge
pusha
ret
xor
xor
sbb
jle
sbb
add
int3
cmp
adc
loopne
mov
inc
push
fs
xchg
push
push
adc
push
cwde
xchg
mov
sub
mov
sbb
jmp
push
ss
lds
add
dec
pop
out
int3
add
or
add
int3
ds
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
popa
sbb
mov
add
lock
(bad)
(bad)
dec
jecxz
out
aas
add
sar
(bad)
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
and
add
lock
(bad)
(bad)
inc
push
mov
lock
(bad)
(bad)
jle
sar
popf
adc
hlt
push
inc
add
jne
movs
mov
sbb
or
adc
fisttp
xchg
xchg
push
es
sub
cmps
push
mov
rol
sbb
mov
mov
xor
mov
xor
jne
mov
mov
add
mov
push
mov
addr16
loop
(bad)
aas
les
pop
mov
xor
adc
inc
xor
aad
jl
jbe
retf
sahf
jmp
lds
xchg
sbb
mov
pop
mov
push
cmps
popf
(bad)
lock
loope
ins
pop
in
addr16
popf
pop
dec
cmc
fsubr
mov
add
arpl
and
jns
daa
(bad)
or
cmp
cbw
(bad)
pop
shr
add
xor
out
call
shr
dec
out
sbb
aam
pop
xor
and
sub
jg
mov
fld
outs
adc
and
stc
mov
pop
or
mov
and
mov
cmp
inc
add
sahf
ins
mov
mov
leave
push
push
add
out
call
cmp
or
ins
ins
push
cs
jmp
(bad)
aad
aad
stc
stos
shl
cmp
mov
xlat
emms
push
ror
leave
ret
ja
push
mov
std
xchg
mov
enter
fwait
stos
out
cmps
dec
jns
jae
scas
adc
iret
push
xor
sub
dec
xor
fild
pop
jo
imul
adc
lea
dec
stos
ds
cmps
je
dec
mov
or
loop
pusha
les
jae
sub
jcxz
cmp
sub
push
pop
cmp
retf
or
xchg
sbb
cmp
bound
add
mov
aas
jecxz
pop
xor
and
mov
jmp
cmp
inc
loopne
aam
adc
xchg
(bad)
lods
in
call
lods
inc
cmp
sub
add
add
loop
add
stos
cli
lahf
inc
lock
add
add
add
call
lock
lock
(bad)
(bad)
jmp
adc
(bad)
(bad)
jmp
lock
add
xchg
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jne
retf
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
jo
adc
repnz
or
add
or
add
lock
jecxz
xchg
pop
cli
adc
push
or
popa
and
cmp
jp
push
jmp
fisttp
cmp
test
xor
mov
popa
mov
mov
fld
jle
push
push
pop
into
mov
fwait
pop
or
mov
and
push
or
jl
mov
in
jmp
aaa
add
add
lock
add
(bad)
(bad)
(bad)
call
sub
idiv
sub
sar
(bad)
inc
in
inc
push
pop
ja
js
loopne
jo
lock
cmc
clc
mov
rcr
and
popf
test
add
cmc
sub
(bad)
cmp
imul
fcmovnu
cmp
inc
jno
pop
cwde
rcl
sub
add
sti
push
stos
out
xchg
rcr
out
gs
dec
loopne
shl
push
xlat
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
or
push
add
lock
inc
add
jp
add
(bad)
(bad)
(bad)
(bad)
sti
push
xor
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
push
rdmsr
jmp
test
add
lock
inc
add
sahf
jecxz
repz
pop
jp
(bad)
or
xchg
and
dec
outs
shl
sbb
ret
mov
jmp
outs
into
xor
push
je
loopne
xchg
jnp
lods
push
jmp
sbb
push
or
dec
mov
mov
push
push
scas
dec
xchg
jne
iret
pop
jecxz
or
mov
aam
adc
repz
aam
pop
test
jp
adc
xchg
out
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
loopne
js
nop
inc
and
inc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
enter
out
stos
xor
add
xor
add
push
xchg
or
imul
pop
imul
mov
push
push
cmp
dec
call
retf
push
pop
ins
add
into
pop
jnp
cld
xchg
inc
rol
aad
cmp
jo
fwait
scas
mov
mov
mov
mov
and
xchg
xor
call
je
ret
aad
pop
outs
jae
addr16
pop
or
in
rcl
xchg
test
push
pop
mov
cdq
jp
into
(bad)
mov
repz
popa
sub
enter
aas
outs
xchg
and
push
cwde
cmp
inc
les
dec
mov
or
mov
int
lock
popa
push
pop
adc
dec
retf
mov
cmp
aam
mov
ds
or
and
mov
aas
ds
jg
stos
nop
cld
sub
pop
push
aas
jmp
scas
cmp
xor
mov
push
sti
xchg
jbe
add
sar
and
data16
adc
add
(bad)
fcmovb
and
fdivr
xor
dec
scas
mov
(bad)
jge
fldenv
or
and
stos
push
xchg
clc
repnz
mov
jle
cmc
adc
dec
lods
mov
loopne
out
dec
cdq
sbb
inc
xchg
fnstcw
daa
test
dec
fs
stos
xchg
pushf
cwde
out
or
mov
imul
dec
and
lods
mov
repz
push
mov
sbb
adc
rol
adc
add
test
repnz
movs
mov
xor
ins
sar
fsubp
mov
jecxz
fucomp
in
(bad)
mov
loop
ss
ret
mov
and
(bad)
jmp
sahf
and
push
(bad)
in
push
jo
mov
jmp
add
lock
(bad)
(bad)
call
cli
mov
cmp
lock
(bad)
(bad)
jmp
ret
aaa
or
int
test
cmp
push
test
test
xchg
ud0
iret
mov
add
shufps
dec
scas
xor
add
mov
xor
das
mov
ss
fdiv
and
leave
add
outs
stos
icebp
mov
sbb
xchg
adc
lock
add
pop
add
lock
(bad)
(bad)
call
inc
inc
or
add
(bad)
inc
mov
xchg
mov
inc
xor
cmp
rcr
jae
cmp
aas
movs
aam
xchg
sub
jg
data16
cmps
push
jmp
add
push
mov
dec
mov
dec
shr
dec
xor
add
out
xchg
dec
fldcw
(bad)
pop
cmp
test
xor
les
lock
add
aaa
icebp
lods
int
add
not
(bad)
(bad)
inc
add
lock
lock
out
mov
and
inc
clc
into
mov
mov
jmp
sahf
dec
scas
ret
sbb
xor
pop
pop
movs
xchg
add
mov
outs
adc
js
js
mov
add
cwde
loopne
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pushf
mov
push
stos
sar
lock
lock
dec
push
das
mov
mov
ds
push
sbb
mov
daa
jbe
cmps
les
add
inc
push
int
xor
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
outs
aaa
out
inc
sub
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
lock
add
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
add
push
add
lock
(bad)
(bad)
call
push
(bad)
or
ins
sub
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
sub
push
add
lock
lock
push
jb
lods
dec
adc
loopne
test
movs
push
add
dec
imul
sub
test
pushf
mov
aad
popf
push
jmp
in
cmp
mov
cmp
cmp
gs
sbb
cmp
sbb
in
loope
stos
mov
sub
imul
sbb
xchg
pop
pop
in
jnp
popf
cmps
cmp
scas
aas
imul
cmp
fisttp
sbb
sub
stos
jae
xchg
int
sbb
stos
cmps
shl
test
mov
jmp
or
pushf
dec
or
add
xor
add
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
faddp
loopne
xor
into
sub
ror
mov
inc
fsub
outs
pop
mov
dec
out
push
nop
cmp
outs
push
and
xor
(bad)
(bad)
(bad)
inc
cs
mov
add
lock
dec
add
lock
add
or
add
(bad)
(bad)
(bad)
(bad)
jl
push
jae
adc
lock
(bad)
call
out
repz
mov
in
data16
jp
jle
sahf
movs
arpl
or
loope
(bad)
out
cmps
adc
xor
sub
pushf
jecxz
mov
or
movs
mov
add
xchg
ret
xchg
ret
add
lock
(bad)
(bad)
(bad)
mov
scas
lock
push
add
sar
(bad)
call
adc
lock
add
test
movs
jmp
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
lock
add
cmp
das
or
or
mov
sbb
in
aas
lods
pop
mov
push
jns
push
mov
inc
outs
pop
add
jno
push
sub
adc
push
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
cld
xor
sbb
arpl
shr
sbb
push
xor
fisub
ret
(bad)
mov
cld
xchg
sub
fdivr
and
add
jle
dec
and
add
(bad)
(bad)
(bad)
push
scas
cmp
sar
(bad)
(bad)
jge
aam
xchg
addr16
ja
mov
clc
and
push
scas
out
push
sbb
sbb
mov
test
pop
cli
ins
adc
add
std
mov
adc
ins
shr
push
popa
jmp
cmp
div
adc
or
mov
cmps
fsubr
inc
hlt
add
push
rcl
shr
pop
rcl
or
pop
sbb
push
jge
aam
jnp
adc
sub
or
and
mov
test
jge
lea
rol
push
test
push
cmovb
mov
clc
(bad)
pop
out
xchg
dec
pop
sbb
cmp
cmp
in
sub
jge
push
add
mov
ja
mov
pop
add
add
push
sbb
xlat
mov
and
arpl
mov
push
jecxz
mov
mov
or
and
add
lock
(bad)
(bad)
inc
shr
test
lock
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
jmp
pop
mov
mov
(bad)
(bad)
dec
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
shl
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
cmp
ds
or
push
into
push
jnp
jmp
call
inc
not
dec
(bad)
fdiv
cmps
sahf
outs
fcom
lock
icebp
cmc
js
inc
dec
push
addr16
and
lods
sub
push
mov
jl
(bad)
and
movs
add
retf
push
ror
xchg
faddp
in
clc
xchg
scas
(bad)
xor
(bad)
ss
imul
lahf
pop
mov
pop
or
aam
loope
pop
in
ret
add
pop
cmp
sbb
test
xchg
fistp
int3
enter
pop
(bad)
out
(bad)
xor
mov
mov
mov
push
sub
cli
repz
lock
add
or
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
adc
mov
add
lock
add
add
inc
adc
je
dec
sub
shr
cmp
cmp
xor
jmp
mov
mov
cmp
(bad)
(bad)
dec
cmps
or
movs
sub
inc
sub
sar
(bad)
(bad)
ds
lock
add
add
add
int
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
push
repnz
dec
mov
mov
adc
(bad)
test
xor
cmp
out
dec
gs
and
test
add
gs
add
lock
add
add
add
add
lock
add
lock
add
arpl
adc
add
lock
add
lock
(bad)
(bad)
inc
pop
sub
push
pop
add
sar
(bad)
jmp
sahf
mov
cmps
adc
test
cmp
pop
mov
movs
mov
enter
dec
mov
ja
clc
les
in
push
jle
xor
icebp
pusha
add
mov
jbe
call
push
jbe
(bad)
pop
xchg
jg
cmp
std
push
push
push
sbb
xlat
pop
jnp
push
mov
cmp
push
stos
dec
das
xchg
mov
mov
stc
cmp
movs
fwait
(bad)
jecxz
shl
xor
neg
sub
arpl
jnp
dec
out
inc
out
xor
mov
pop
sbb
jg
int
xchg
and
enter
cld
pop
outs
dec
jp
and
retf
lods
xor
xor
(bad)
mov
popa
sar
cli
(bad)
mov
push
or
dec
(bad)
loopne
jle
or
call
repz
xchg
or
lock
(bad)
(bad)
call
movs
sub
pop
add
sar
(bad)
(bad)
std
fsub
shr
sar
(bad)
jmp
int
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
popa
add
xchg
add
scas
mov
or
sbb
or
pop
inc
sbb
push
jno
hlt
or
xchg
data16
xor
push
iret
mov
out
mov
sar
(bad)
jmp
add
lock
add
ja
add
bound
add
lock
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fmul
inc
lods
sbb
add
add
lock
gs
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
sub
add
lock
add
push
add
lock
(bad)
(bad)
jmp
push
gs
(bad)
jmp
add
dec
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
sbb
sub
lods
push
inc
add
lock
gs
inc
add
lock
add
or
(bad)
(bad)
jmp
and
mov
and
(bad)
(bad)
inc
add
retf
jmp
(bad)
push
add
(bad)
(bad)
(bad)
inc
push
jne
gs
in
rol
add
sar
(bad)
jmp
add
lock
xor
and
addr16
and
mov
sbb
inc
sub
add
lock
cli
(bad)
(bad)
(bad)
stc
loop
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
xchg
and
push
cmp
add
test
inc
add
sub
lock
add
retf
lds
inc
sub
mov
xchg
mov
add
sbb
aaa
stc
xor
fisubr
loope
xchg
(bad)
fisub
js
inc
adc
push
mov
xor
cld
gs
pop
mov
jno
xor
imul
or
push
push
ins
adc
sbb
rol
push
jmp
and
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fs
je
lock
inc
add
mov
mov
cmp
loope
push
aaa
adc
fld
sbb
mov
mov
movs
mov
push
cmp
xor
add
lock
(bad)
(bad)
call
fstp
jne
jbe
pushf
push
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
xor
add
int3
push
lock
add
(bad)
(bad)
(bad)
(bad)
mov
pushf
pop
mov
imul
sar
(bad)
call
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
das
mov
adc
push
add
out
xchg
inc
sbb
add
jne
loopne
hlt
inc
xor
or
sbb
leave
cdq
mov
outs
mov
jg
fwait
into
iretw
inc
adc
push
icebp
and
xor
js
push
jl
pop
mov
cs
mov
aas
mov
adc
int3
js
es
(bad)
in
fcom
mov
fscale
(bad)
cmp
xor
mov
mov
add
(bad)
(bad)
(bad)
call
cdq
mov
lock
outs
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
addr16
mov
sub
sbb
and
mov
jns
pop
adc
jb
imul
sbb
push
stos
dec
loop
pushf
cdq
imul
jmp
rol
inc
mov
mov
mov
push
pop
call
pop
mov
sbb
lahf
dec
sahf
rcl
pop
push
push
xor
push
add
inc
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jne
adc
(bad)
(bad)
add
mov
stos
xor
sub
mov
mov
aad
pop
sub
into
jns
clc
sub
jg
ffreep
fisttp
jg
xchg
scas
xor
jle
dec
mov
in
add
add
add
inc
add
lock
add
or
(bad)
(bad)
(bad)
fisttp
clc
(bad)
xor
inc
add
lock
(bad)
(bad)
(bad)
(bad)
or
test
lock
(bad)
inc
push
lock
add
inc
add
lock
add
lock
add
(bad)
(bad)
(bad)
jmp
dec
push
xor
xchg
mov
add
sar
(bad)
(bad)
(bad)
lods
bt
sbb
stc
outs
sbb
cwde
push
lea
xchg
push
test
in
jmp
sub
shr
cmp
add
pop
jnp
xchg
leave
jecxz
mov
push
or
jno
add
inc
hlt
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
add
adc
add
inc
jne
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
shr
mov
add
add
(bad)
jecxz
(bad)
jo
in
(bad)
and
jmp
ret
sub
call
pop
push
and
xchg
jne
imul
pop
int
add
push
add
or
add
(bad)
ja
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
outs
pop
inc
push
rol
or
ret
fwait
mov
cs
data16
dec
jo
pop
cmc
add
(bad)
movs
lods
inc
stos
or
sbb
adc
into
mov
lods
mov
inc
retf
xor
push
mov
cli
dec
pop
or
xor
daa
jle
or
int3
aaa
dec
out
ins
mov
adc
add
(bad)
(bad)
(bad)
call
xor
push
jns
jne
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
sbb
and
add
das
jl
lock
add
sldt
adc
ds
add
add
add
add
xor
jecxz
test
xchg
cwde
js
cwde
das
dec
xor
popa
js
inc
pop
and
jne
movs
out
sub
cwde
mov
inc
je
dec
pop
add
or
mov
fcomip
lea
mov
ins
cli
test
pop
mov
mov
neg
je
imul
cmp
xchg
test
hlt
pop
cmp
cmp
adc
add
wrmsr
rcl
mov
mov
and
shl
pop
lea
cmp
addr16
dec
jo
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jp
retf
add
inc
jge
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
je
retf
mov
add
lock
push
add
adc
add
add
add
cs
pop
mov
mov
lahf
outs
adc
adc
ja
mov
push
jae
cld
sti
mov
mov
push
xchg
push
loope
sar
jmp
jno
mov
mov
mov
lds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcomp
test
fistp
lock
or
lahf
(bad)
aad
fs
mov
or
sbb
cs
cmp
jns
dec
fdiv
gs
dec
push
mov
xchg
fwait
inc
test
mov
adc
(bad)
popf
out
pop
mov
inc
jle
and
lock
add
add
add
popa
mov
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
add
lock
sub
add
or
add
add
add
enter
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pusha
sbb
mov
add
add
dec
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pusha
mov
lods
jl
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
add
ja
leave
dec
fwait
push
popa
dec
sbb
les
mov
pushf
repz
xchg
mov
rol
xchg
cmp
mov
cmp
outs
mov
fcom
pop
jnp
jb
out
cmp
pop
push
push
lahf
gs
or
push
inc
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
jl
adc
lock
pop
aad
push
mov
push
inc
sub
or
ins
or
jecxz
lods
in
jp
loop
inc
xor
imul
mov
add
lock
add
sldt
lock
(bad)
(bad)
call
aad
iret
inc
jnp
xchg
sar
(bad)
call
add
xor
(bad)
(bad)
inc
push
nop
(bad)
or
pusha
push
bound
and
push
xchg
add
and
dec
cs
dec
cmp
sbb
aas
add
and
call
cmc
cld
fisttp
xor
mov
or
xchg
adc
push
push
sbb
rcr
cdq
repz
push
bound
imul
add
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
jnp
push
xor
add
rol
(bad)
(bad)
(bad)
(bad)
push
int
lock
push
jne
cmp
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
xor
add
mov
add
adc
add
(bad)
(bad)
(bad)
call
mov
push
imul
out
cmc
xchg
lock
(bad)
jmp
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jno
test
(bad)
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
cmp
cmp
sbb
in
imul
lock
out
push
pusha
clc
mov
shl
mov
push
xor
xor
in
xlat
call
stc
cwde
addr16
inc
xor
jl
fnstenv
movs
cmc
or
jecxz
xchg
not
dec
int
outs
outs
push
push
repnz
loopne
pop
icebp
sub
dec
jo
out
pop
das
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
hlt
jmp
lods
xchg
cld
sub
mov
mov
lahf
(bad)
aad
pop
cmp
push
repnz
cmp
aas
inc
dec
and
mov
movs
cmps
(bad)
imul
add
cmp
adc
pushf
xchg
(bad)
sahf
cmp
push
ss
mov
(bad)
in
repnz
mov
std
xor
push
(bad)
mov
(bad)
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
xlat
sub
xor
add
ror
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jl
add
lock
lock
add
lock
add
or
(bad)
(bad)
push
dec
or
sar
(bad)
inc
add
cmp
(bad)
jmp
cmp
lock
add
repnz
lods
fs
add
add
sbb
lock
add
ret
lock
add
add
add
cdq
push
push
sbb
call
mov
lock
cli
lods
stos
es
push
rol
xor
fild
pushf
xchg
mov
and
mov
enter
xor
lock
add
add
add
leave
jae
adc
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fxch
arpl
mov
fsubr
neg
inc
(bad)
sbb
iret
mov
in
sahf
xchg
mov
xor
mov
das
xchg
test
inc
mov
int
scas
mov
(bad)
sti
push
push
fstp
xor
scas
lds
pop
popf
jmp
pop
leave
in
dec
sub
icebp
ds
bound
or
fidiv
xrelease
cmc
js
add
add
lock
(bad)
(bad)
dec
clc
inc
fst
add
sar
(bad)
inc
add
lock
inc
add
ret
inc
add
and
add
(bad)
(bad)
(bad)
(bad)
out
mov
sub
ss
sbb
call
add
(bad)
(bad)
(bad)
call
addr16
arpl
lock
(bad)
inc
pop
sar
push
out
jl
jmp
add
xor
lods
or
loop
cmp
fcom
aad
(bad)
fdiv
shl
mov
gs
pop
jne
or
aas
std
(bad)
aam
inc
das
adc
das
mov
mov
ins
mov
je
ficom
test
sub
mov
inc
ror
xchg
xor
adc
sub
shl
sahf
pop
cwde
aas
mov
add
pop
inc
cmps
fsubr
sbb
xchg
pusha
push
pop
repz
in
loope
pop
jo
hlt
add
ja
dec
ret
data16
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
cmp
(bad)
cmp
lock
sub
std
mov
clc
cmp
mov
std
push
mov
adc
and
repz
out
inc
pop
fcom
inc
push
add
add
and
add
and
add
and
add
sldt
adc
add
pop
add
lock
mov
add
xor
fwait
adc
lock
loope
data16
add
add
add
mov
fidivr
push
add
(bad)
jmp
outs
push
lock
add
sbb
add
inc
add
fwait
pop
into
nop
arpl
jle
sahf
shl
xchg
jbe
je
cwde
mov
fdivr
mov
sub
and
loope
xlat
pop
cwde
cli
push
fdivp
dec
add
iret
mov
lock
add
adc
add
lock
jl
lock
add
pop
aam
xchg
xchg
jg
xchg
xor
shl
aaa
dec
mov
cmps
jmp
pop
or
inc
ins
mov
add
push
add
add
add
fidiv
add
push
add
lock
(bad)
(bad)
call
call
sub
sar
(bad)
inc
lock
(bad)
(bad)
(bad)
sti
dec
jl
cwde
(bad)
sbb
popf
add
sar
(bad)
inc
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
jne
add
xchg
add
lock
add
dec
add
lock
(bad)
(bad)
call
call
adc
lock
(bad)
call
mov
nop
jle
add
div
loop
shr
xor
jmp
or
mov
cmp
sbb
aad
pop
lods
ret
and
test
out
add
cmps
cld
bound
test
jbe
and
or
xchg
jns
sub
fsubr
fld
lahf
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
or
mov
push
rol
sti
popf
repnz
outs
add
and
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
fadd
mov
sub
lock
lahf
add
push
xor
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
mov
and
push
xchg
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
js
cld
add
add
add
add
add
(bad)
(bad)
(bad)
call
hlt
jmp
lock
add
mov
xchg
mov
pop
or
out
inc
adc
(bad)
scas
aam
sub
fbstp
jle
jmp
mov
psubusw
icebp
ss
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
nop
stos
pop
dec
retf
aad
push
outs
mov
dec
lds
rol
aam
lods
lahf
sub
enter
data16
outs
xor
cs
xchg
mov
lock
add
and
cwde
cmps
test
add
pop
es
mov
cmp
mov
cs
daa
outs
jne
pop
push
lea
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
cmp
stos
inc
call
(bad)
(bad)
jmp
xor
jmp
call
add
lock
or
adc
mov
je
add
jg
sar
cmps
xchg
pusha
or
push
cwde
dec
fcomp
test
cmp
mov
add
inc
jmp
arpl
push
(bad)
mov
movs
aaa
xor
inc
pop
inc
sub
pop
stc
sub
xchg
loop
hlt
dec
enter
mov
jb
je
(bad)
jae
pop
scas
add
aam
jmp
add
fwait
inc
scas
lds
clc
sar
cld
mov
fwait
mov
jg
imul
xor
add
or
add
xor
add
add
add
cwde
pop
test
cs
(bad)
xor
push
jmp
adc
test
mov
push
ss
inc
(bad)
xchg
mov
int
add
lock
(bad)
inc
jo
lock
add
dec
add
lock
add
lock
add
sbb
add
sub
add
lock
add
(bad)
(bad)
(bad)
dec
in
mov
loope
gs
test
lock
(bad)
inc
test
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
cs
xor
add
(bad)
(bad)
(bad)
call
pop
out
pop
(bad)
ficom
test
(bad)
(bad)
jg
add
push
add
lock
add
add
add
xor
(bad)
out
sti
mov
inc
add
(bad)
call
lock
add
sbb
add
sub
lock
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
repnz
add
jle
add
inc
or
adc
in
mov
fidivr
xchg
cs
jge
xor
lods
je
xor
inc
in
mov
sub
mov
in
imul
sahf
pusha
mov
(bad)
push
shr
mov
pop
xor
leave
pop
rcr
dec
jl
pop
shl
stc
push
stc
xchg
or
sbb
cmp
inc
(bad)
ins
jnp
push
inc
mov
mov
daa
aas
ja
push
mov
test
fs
cmp
mov
push
std
call
test
loope
cmp
fld
sub
or
mov
mov
push
js
imul
stos
mov
dec
sar
dec
shl
hlt
jecxz
stos
fild
js
lods
cmp
adc
lods
jp
pop
xchg
(bad)
fldenv
ins
and
push
xchg
cmp
dec
test
pusha
outs
jno
jo
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
scas
(bad)
mul
add
lock
lods
add
cmp
add
(bad)
(bad)
(bad)
dec
pusha
cdq
mov
lods
add
sar
(bad)
(bad)
out
push
aaa
sbb
or
jo
sub
jne
mov
cmc
and
cmp
jno
adc
rcr
push
xlat
vmread
jno
(bad)
pop
add
lock
add
jns
jge
retf
pmaxsw
(bad)
(bad)
push
mov
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
outs
lods
add
mov
mov
leave
ins
stos
jbe
movs
ja
je
or
cdq
aas
sub
movs
sub
mov
mov
sahf
scas
push
jge
scas
in
and
sbb
ss
mov
jge
push
outs
cmc
scas
je
lea
bound
jp
sub
(bad)
(bad)
(bad)
dec
fwait
jo
dec
mov
lock
(bad)
jmp
add
and
add
fisttp
lock
add
add
add
icebp
(bad)
cmp
out
ret
fsubr
out
cs
call
add
add
add
add
add
lods
add
std
das
add
add
sar
(bad)
(bad)
out
repnz
lock
add
lock
add
lock
add
lock
add
sub
add
loope
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
js
add
adc
add
(bad)
(bad)
(bad)
(bad)
aas
inc
sbb
xchg
mov
add
add
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
int3
dec
mov
and
add
lock
add
int3
push
add
int3
push
add
adc
add
lock
sub
lock
add
lock
add
(bad)
(bad)
(bad)
call
shl
xor
add
mov
add
loopne
mov
xchg
sub
imul
idiv
mov
push
cmp
ss
setne
inc
clc
jmp
(bad)
jp
cmc
push
xor
mov
mov
mov
sub
add
(bad)
(bad)
(bad)
jmp
mov
add
sar
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
movs
nop
retf
inc
xor
loop
test
jle
adc
mul
sbb
gs
fwait
and
add
mov
loop
push
and
scas
sub
lods
xchg
pop
add
push
add
sbb
pop
cmps
je
cmp
call
jmp
pop
dec
jp
int
mov
pop
inc
(bad)
ins
ss
test
sbb
cld
call
les
mov
adc
and
(bad)
outs
jno
dec
bound
mov
pop
pop
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
and
inc
scas
mov
push
dec
movs
jno
clc
in
hlt
fst
lock
add
pusha
aas
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jb
pop
retf
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
add
push
add
add
lock
add
mov
mov
mov
mov
dec
add
lock
add
lock
add
(bad)
(bad)
(bad)
dec
movs
push
cdq
mov
(bad)
call
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
movs
outs
jp
test
add
(bad)
(bad)
(bad)
jmp
fcomp
test
sar
(bad)
jmp
jo
mov
out
jmp
xchg
imul
nop
adc
fs
push
jg
in
sub
and
and
(bad)
sub
imul
lahf
(bad)
neg
clc
cs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ins
std
dec
aaa
add
lock
add
add
add
pop
push
add
jns
aam
(bad)
arpl
lock
(bad)
inc
add
lock
add
lock
add
lock
add
mov
add
out
add
rcl
add
add
add
add
add
mov
(bad)
pop
inc
inc
jb
outs
push
jnp
mov
es
jmp
je
(bad)
call
popa
(bad)
add
in
sbb
(bad)
(bad)
(bad)
call
sbb
sub
add
idiv
add
rol
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
sub
add
imul
rcr
add
xor
rol
pavgb
push
lods
sahf
cli
inc
dec
inc
popf
sub
mov
adc
(bad)
aaa
out
retf
add
sbb
dec
out
aaa
xchg
or
ins
add
or
rol
lock
add
push
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lods
frstor
inc
rol
lock
les
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jne
add
xchg
cdq
add
lock
les
lock
out
add
push
add
and
rol
adc
push
xchg
mov
jp
test
inc
out
movntps
gs
mov
push
sbb
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
mov
add
stc
lds
lock
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
test
lock
add
or
cmp
add
in
cmps
loop
jne
add
jl
mov
cmp
jae
cmp
stc
(bad)
cmp
fild
inc
and
ret
in
loopne
in
jp
mov
cmp
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
leave
mov
add
xor
addr16
xor
(bad)
(bad)
cmps
cmps
xor
mov
and
push
or
enter
inc
xchg
pop
cs
fdivr
int
in
ror
push
retf
fiadd
jle
jmp
retf
inc
imul
pushf
mov
jne
in
lahf
mov
es
mov
push
fsub
push
inc
cli
jg
push
dec
inc
xchg
xor
cmc
cs
iret
je
sub
mov
mov
sub
adc
add
leave
jmp
mov
and
lock
(bad)
(bad)
inc
cwde
xor
push
retf
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
call
xor
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
das
(bad)
fnstenv
add
lock
add
in
sub
add
add
add
mov
je
lock
sbb
lock
add
add
add
push
add
lock
add
mov
add
lock
add
push
add
adc
bound
lock
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
push
pop
inc
xor
int3
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
cmp
mov
mov
add
lock
(bad)
inc
lock
add
and
add
and
add
or
add
push
lsl
pop
push
add
int
add
push
add
jo
add
lock
(bad)
(bad)
(bad)
fadd
add
cmp
push
jge
add
add
(bad)
call
push
add
add
add
or
add
popa
rol
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
jge
inc
stos
(bad)
cmp
shl
call
sbb
into
mov
sub
scas
call
sbb
or
sub
add
(bad)
(bad)
(bad)
dec
pop
(bad)
faddp
rol
lock
(bad)
push
test
loope
add
xchg
neg
mov
cmp
fild
cmp
dec
adc
iret
(bad)
or
pop
cmp
add
and
sub
sub
inc
ja
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jnp
fst
repz
add
sub
sbb
shr
jns
lahf
adc
dec
sbb
cmp
cmps
pop
cmp
push
(bad)
test
and
adc
lods
aas
aaa
and
lock
add
push
sub
inc
int3
pop
push
push
push
movs
add
sbb
dec
pop
jb
or
scas
cld
shr
xchg
fisttp
sahf
xchg
cdq
addr16
mov
test
jmp
adc
lock
add
mov
add
add
add
(bad)
(bad)
(bad)
jmp
dec
stos
stos
das
add
lock
add
xchg
cmps
aam
mov
sbb
loop
bound
add
pop
imul
sub
cmc
mov
in
xchg
jle
fidiv
scas
das
sbb
mov
lock
xchg
cmp
cmc
push
jg
fcom
shr
je
jbe
and
mov
(bad)
and
mov
add
xlat
sub
mov
xchg
pop
mov
jge
sub
aad
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmc
pop
adc
mov
lock
add
lock
lock
(bad)
(bad)
call
inc
or
mov
add
sar
(bad)
(bad)
fmul
lock
add
push
add
lock
nop
sbb
lock
add
lock
(bad)
(bad)
inc
imul
aad
lock
(bad)
dec
add
(bad)
(bad)
(bad)
inc
jb
xchg
sbb
ss
add
sar
(bad)
jmp
add
or
add
dec
xlat
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pushf
mov
push
stos
rcl
lock
(bad)
(bad)
call
push
jecxz
xchg
xlat
fcom
fld
lock
(bad)
inc
jge
(bad)
sub
adc
xchg
mov
cmp
nop
and
cmp
xor
arpl
test
(bad)
xor
rcl
pusha
jge
fimul
fpatan
fild
leave
xor
aad
lock
aas
sbb
loop
or
mov
add
in
daa
movs
add
push
aaa
sbb
sar
retf
sbb
into
push
je
mov
nop
mov
xor
xor
and
or
push
imul
lock
push
test
cmp
add
xchg
mov
lock
mov
lock
add
adc
add
lock
(bad)
(bad)
jmp
out
mov
sub
outs
fild
lock
(bad)
inc
add
add
add
data16
jno
sar
(bad)
jmp
add
lock
add
lock
dec
jmp
mov
jno
dec
dec
fisub
push
sbb
pop
lods
scas
cmp
movs
je
pmaxsw
mov
test
push
je
xor
push
mov
scas
cmp
scas
cwde
call
addr16
fmul
adc
cmp
(bad)
or
ss
pop
mov
daa
retf
retf
fisub
or
idiv
lea
push
div
cdq
pop
clc
out
hlt
jl
sbb
inc
out
sub
popf
bound
pushf
movs
scas
push
add
mov
(bad)
(bad)
(bad)
(bad)
call
mov
add
lock
add
int3
adc
in
jge
inc
mov
adc
mov
xlat
inc
mov
xor
inc
kaddb
and
out
mov
push
ins
fidivr
add
lock
(bad)
(bad)
inc
sub
stos
xchg
fiadd
lock
(bad)
dec
or
add
add
add
add
in
mov
push
nop
out
jecxz
adc
rcl
mov
adc
ss
dec
and
test
mov
je
das
pushf
push
rcr
hlt
cmp
sbb
pop
push
outs
ret
mov
cmps
pop
push
and
std
retf
scas
sbb
and
xchg
xor
imul
das
push
and
jle
or
cmps
pop
mov
sbb
sahf
mov
jbe
jo
sahf
das
stc
adc
and
out
mov
scas
add
jle
mov
jbe
mov
mov
and
pop
les
sub
sub
sar
movs
fdiv
dec
inc
repz
xor
add
xchg
adc
jge
mov
adc
dec
shl
push
pop
fst
push
add
xor
inc
xchg
in
popa
les
es
fs
and
idiv
sub
inc
lahf
xchg
idiv
mov
jg
js
scas
and
movs
jle
jb
xor
imul
outs
sbb
bound
call
jno
xor
or
mov
fdivr
addr16
inc
aas
jg
dec
mov
(bad)
(bad)
(bad)
dec
lahf
rcr
js
and
inc
loopne
lock
(bad)
(bad)
mov
pop
mov
cld
add
test
mov
mov
sub
(bad)
sbb
mov
xchg
jg
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jl
ja
cmp
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jbe
imul
sbb
pop
cmp
sti
jmp
out
shr
or
out
mov
adc
sub
movs
push
in
js
pop
loope
add
fyl2xp1
in
test
cmp
(bad)
lock
mov
mov
jmp
sbb
nop
mov
ins
cmc
addr16
mov
pushfw
aad
popa
xor
scas
mov
lock
add
adc
stc
cmp
mov
add
lock
add
lock
cmp
mov
inc
ret
add
mov
sbb
add
lock
inc
arpl
xchg
fdivr
mov
add
lock
(bad)
(bad)
call
mov
add
sar
(bad)
jmp
sbb
ror
inc
add
lock
sahf
stc
pop
into
jle
pop
rol
imul
call
push
push
inc
adc
lock
(bad)
(bad)
inc
(bad)
aaa
ins
sbb
lock
(bad)
(bad)
cmp
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
adc
cmc
movs
dec
mov
in
mov
cmp
xchg
pusha
int
dec
call
(bad)
repnz
out
pop
dec
xor
adc
outs
icebp
daa
outs
inc
(bad)
lods
mov
add
jmp
and
sahf
cmp
lock
retf
or
sahf
dec
mov
stos
clc
push
cmp
xor
dec
out
iret
iret
xor
mov
mov
inc
push
and
mov
nop
or
cmp
fbld
cmp
xchg
push
arpl
mov
add
nop
popa
add
popa
add
(bad)
cdq
add
push
add
and
in
lock
push
ret
lods
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cli
movs
fadd
push
lock
inc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
repnz
call
add
call
lods
ja
pop
xchg
inc
aam
jg
mov
and
jmp
push
pusha
in
pop
aam
nop
ffreep
sbb
lods
pop
adc
shr
mov
add
cmp
cs
ds
mov
push
and
and
movs
xor
and
popf
lods
cmp
push
outs
enter
xor
js
add
loopne
add
lock
add
add
add
mov
retf
inc
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
fidivr
xor
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
lea
pop
jno
add
(bad)
out
lock
add
add
add
inc
add
lock
(bad)
(bad)
(bad)
mov
mov
xor
call
(bad)
dec
lahf
ja
hlt
xchg
stos
dec
jae
fidiv
stc
popf
xchg
shl
mul
xchg
push
jns
outs
fstp
mov
(bad)
repz
stos
add
xchg
repnz
xchg
sti
adc
fst
sbb
lahf
jmp
mov
scas
add
(bad)
shr
mov
pop
lahf
push
cmp
lock
(bad)
(bad)
push
inc
push
mov
sub
add
sar
(bad)
(bad)
in
pop
jp
pop
cwde
sub
lock
(bad)
call
add
lock
add
lock
add
lock
add
sbb
add
sub
add
(bad)
(bad)
(bad)
(bad)
fnstcw
inc
(bad)
add
sar
(bad)
jmp
std
call
cmps
mov
aas
inc
fsubr
dec
fidivr
adc
or
mov
mov
aad
or
push
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
rcr
fiadd
test
test
test
push
mov
sahf
pushf
jl
aaa
lahf
aaa
das
mov
sbb
pusha
jle
clc
scas
xchg
add
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
fwait
push
cmps
mov
es
pop
es
or
add
add
add
add
add
xchg
lock
add
add
add
inc
cmp
lock
add
and
add
lock
out
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
call
add
lock
(bad)
(bad)
jmp
popf
sub
out
add
sar
(bad)
jmp
mov
pop
jecxz
sahf
scas
enter
popa
mov
jl
push
out
test
adc
cmp
mov
or
push
pop
aaa
int3
pushf
not
mul
pop
sub
and
or
jecxz
aad
mov
sub
lock
add
test
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
ds
xchg
mov
hlt
lock
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jl
inc
jbe
loope
lock
add
or
fsub
iret
inc
dec
pop
cmp
(bad)
inc
pop
pop
fcmove
and
(bad)
retf
cmc
dec
retf
pop
test
push
dec
push
pop
push
in
push
fnstsw
mov
iret
ins
movs
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
out
(bad)
or
add
lock
repnz
inc
add
lock
add
or
(bad)
(bad)
push
sbb
push
pop
out
jge
sar
(bad)
inc
add
jo
add
push
add
lock
(bad)
(bad)
inc
push
pop
jp
inc
mov
sar
(bad)
call
add
(bad)
pop
add
add
add
or
xor
pop
cld
or
mov
(bad)
not
mov
mov
xor
in
sbb
pop
mov
push
push
cmp
icebp
mov
in
ins
push
ret
push
add
add
sub
add
cmps
ins
add
dec
add
lock
(bad)
(bad)
dec
dec
jle
in
jne
cmc
add
sar
(bad)
(bad)
sti
fild
lock
add
pop
cmps
or
mov
outs
cwde
retf
nop
dec
xlat
mov
imul
mov
push
mov
pop
popf
test
pop
into
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcomp
frstor
ret
xchg
sbb
add
retf
test
fnstenv
mov
cmp
pshufw
repz
(bad)
int
pop
push
fst
dec
popa
adc
fisubr
(bad)
xchg
and
push
adc
add
lock
add
push
add
lock
(bad)
(bad)
call
shl
xchg
cld
xor
pop
stc
add
sar
(bad)
inc
les
push
stc
lock
mov
fwait
sbb
test
add
lock
xchg
int
lods
dec
sub
sub
aas
nop
dec
pop
in
xchg
retf
dec
push
loop
pop
dec
es
push
add
add
cld
aaa
enter
aam
sar
(bad)
push
add
lock
add
lock
jge
leave
push
adc
repz
sahf
or
fwait
lods
inc
jb
sbb
cmp
dec
int3
sahf
or
popa
shl
imul
push
mov
dec
iret
sub
call
xchg
or
inc
sbb
add
mov
dec
imul
lock
add
rol
adc
add
lock
cwde
jne
mov
(bad)
in
popf
aas
jb
sub
pop
cmp
adc
fdiv
pushf
std
jl
or
push
mov
inc
retf
js
scas
out
pusha
pop
pand
add
xchg
mov
xchg
sbb
and
mov
dec
inc
sub
jmp
pushf
push
cmp
stos
je
mov
mov
push
gs
or
jnp
pop
xchg
pusha
and
pop
xchg
xchg
(bad)
cmps
cmps
pop
cld
repz
sbb
test
push
fcmovu
pop
sti
jle
push
mov
aaa
shr
mov
popf
cmp
nop
add
ffreep
(bad)
pop
mov
pop
lahf
lea
pushf
sub
in
ins
outs
jno
fisubr
sbb
inc
scas
and
jo
xor
ret
arpl
popa
aad
and
sahf
sar
jno
xor
add
fdivr
add
mov
(bad)
in
aaa
in
call
repz
jns
int3
stc
push
pop
stos
nop
cmps
sub
rcr
jge
sar
add
leave
push
mov
std
inc
cli
xor
mov
imul
loop
imul
dec
sti
add
lock
add
lock
add
lock
inc
iret
cmp
cmc
jecxz
cld
sbb
movs
dec
xchg
xor
sahf
outs
push
mov
ins
or
loopne
dec
adc
stos
inc
or
ins
ret
dec
cld
and
out
xchg
pop
leave
and
add
lock
(bad)
inc
loope
lock
add
lock
add
lock
add
lock
std
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
add
add
pop
dec
shl
iret
pop
add
add
sar
(bad)
jmp
pop
push
lock
add
pop
add
lock
add
lock
add
add
add
push
add
lock
(bad)
(bad)
jmp
add
dec
movs
movs
sar
(bad)
push
cdq
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jge
movs
push
add
lock
pusha
add
add
add
xchg
pop
add
add
add
adc
add
adc
add
push
add
adc
arpl
cmp
add
and
aas
fistp
popf
cdq
sub
jnp
(bad)
imul
test
inc
call
mov
mov
fs
(bad)
mov
ret
fcmovbe
jae
pop
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
mov
test
outs
inc
add
lock
lock
lock
add
repnz
lock
fisub
cdq
jo
push
inc
shl
scas
pop
xchg
push
mov
fld
jno
mov
adc
add
lods
sbb
sub
int3
in
xor
inc
jbe
aas
or
sti
aaa
std
mov
xor
or
add
lock
int
push
sbb
(bad)
test
push
mov
js
mov
imul
dec
xchg
shl
arpl
aam
stos
pop
xchg
icebp
adc
sbb
pop
in
jge
gs
imul
popa
xchg
imul
xor
adc
(bad)
and
ds
mov
mov
or
adc
xlat
(bad)
cmps
aaa
mov
cmp
ret
loop
sbb
inc
shl
pop
call
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cli
pop
mov
push
add
lock
add
jno
add
(bad)
add
add
add
and
mov
push
cli
test
bound
outs
jecxz
adc
fnstenv
inc
or
aad
jb
pop
ret
hlt
std
push
daa
add
lock
repz
shl
sahf
mov
pop
js
xor
ins
pop
jnp
cmp
(bad)
jne
popf
sub
sub
dec
dec
push
(bad)
push
xchg
jbe
scas
jno
pushf
mov
nop
das
fsubr
lock
fcmovbe
sbb
loopne
fcomp
repz
or
(bad)
push
sub
xor
adc
mov
mov
xchg
push
movs
inc
jmp
or
add
int3
push
dec
fmul
cli
mov
pop
and
push
mov
inc
leave
mov
out
push
sub
std
test
std
cmps
stc
pop
adc
jle
pop
rcl
hlt
cmp
jae
push
adc
push
sub
cmp
sub
ds
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
(bad)
lock
add
xor
add
(bad)
(bad)
(bad)
jmp
xchg
sbb
cmp
(bad)
or
lock
(bad)
call
pop
mov
loopne
mov
push
and
imul
xchg
inc
dec
adc
mov
int3
mov
push
mov
(bad)
inc
sar
jae
xchg
xor
(bad)
(bad)
(bad)
push
xchg
fsubr
iret
mov
popa
or
lock
(bad)
inc
dec
dec
push
sar
cmc
call
fwait
daa
jl
dec
jp
cwde
sub
sbb
fsubrp
imul
jle
xor
cmovl
mov
lock
(bad)
(bad)
jmp
lea
or
lock
(bad)
call
add
add
add
push
add
lock
(bad)
(bad)
(bad)
mov
(bad)
adc
(bad)
inc
add
pusha
add
lock
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
cmp
push
popf
sub
lock
(bad)
push
add
lock
(bad)
(bad)
(bad)
cli
sub
test
or
lock
(bad)
call
test
lahf
xor
mov
out
jne
add
dec
ins
test
call
in
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
pushf
and
movs
ret
push
push
lods
stos
jle
sbb
pop
sbb
leave
xchg
sar
dec
mov
je
loop
icebp
xor
(bad)
push
jmp
dec
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
lock
add
adc
add
lock
ja
push
jecxz
(bad)
pop
sbb
push
popf
add
enter
xor
add
icebp
or
ret
push
xor
leave
daa
mov
and
scas
cs
rcr
mov
ja
aaa
push
sbb
ret
inc
jmp
push
mov
jo
cmp
and
aam
push
inc
add
lock
das
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
js
mov
test
xor
add
pop
adc
lock
and
lock
add
add
add
mov
add
add
add
fldcw
lock
add
lock
cmp
call
arpl
cli
cmp
out
int3
outs
jmp
loope
xchg
mov
xor
mov
sbb
gs
mov
mov
adc
adc
pop
cmp
add
mov
mov
aaa
or
pop
mov
movs
fwait
inc
push
xor
es
pop
inc
mov
jmp
jo
xor
pop
cmp
add
ins
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
(bad)
int3
(bad)
psllq
aam
push
arpl
push
cdq
pop
ret
in
loop
push
in
out
add
inc
sahf
dec
jne
xor
cmp
dec
xor
das
je
dec
fmul
ret
and
aam
xchg
call
or
aaa
add
mov
pop
push
mov
add
xor
movs
xchg
sbb
adc
jnp
mov
mov
adc
xor
jno
fld
(bad)
pop
repz
inc
jne
or
add
jbe
adc
pop
clc
sub
mov
sub
arpl
sub
and
lock
cmps
add
adc
add
lock
(bad)
(bad)
inc
or
js
dec
add
sar
(bad)
push
add
lock
(bad)
(bad)
push
movs
fimul
add
sar
(bad)
call
adc
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loope
loop
enter
add
mov
add
push
out
add
cwde
lahf
stos
das
xchg
int3
arpl
push
pop
test
dec
stc
ret
push
jg
xchg
inc
iret
xor
mov
fistp
icebp
mov
add
mov
mov
push
inc
test
mov
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lahf
cmps
jmp
jbe
fld
lock
add
xor
add
(bad)
(bad)
(bad)
(bad)
jge
pushf
data16
shl
add
sar
(bad)
jmp
aam
mov
in
xchg
daa
(bad)
and
ret
dec
adc
rol
jnp
in
xchg
sbb
xor
cld
lods
data16
inc
(bad)
ins
pop
stos
add
mov
je
jl
pop
shr
mov
repnz
jle
push
iret
push
jge
in
in
loop
xor
adc
xchg
dec
mov
mov
inc
shl
loope
scas
cmp
stos
imul
movs
ret
xchg
xchg
es
enter
sahf
popa
cmp
and
mov
cli
fadd
aad
test
lock
add
push
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
push
xor
sbb
dec
mov
inc
leave
retf
in
(bad)
cdq
fmul
adc
out
dec
push
aaa
push
loopne
or
clc
cmp
inc
mov
sub
(bad)
iret
mov
add
dec
cmp
lock
add
add
add
and
add
shl
leave
mov
push
and
or
jge
jno
(bad)
dec
mov
push
pop
cld
xchg
out
ret
xchg
ds
or
add
push
vmulps
xor
xchg
fdivr
in
cmp
imul
cli
push
sub
lea
jmp
and
pop
(bad)
imul
mov
lds
std
cli
jp
jo
push
add
aaa
mov
dec
std
out
sbb
ret
lock
mov
add
xchg
mov
jns
adc
add
add
cmp
ret
xchg
adc
lock
add
dec
jl
lock
add
xchg
add
lock
(bad)
(bad)
dec
(bad)
push
nop
sbb
lock
(bad)
(bad)
stc
add
jge
popf
js
bswap
jns
inc
add
or
mov
jmp
mov
shl
shl
sub
mov
call
adc
outs
jbe
push
adc
retf
rcl
add
(bad)
(bad)
(bad)
inc
sub
sbb
adc
sbb
lock
(bad)
inc
add
lock
add
dec
xchg
pop
hlt
les
inc
mov
lods
retf
xor
bswap
aad
push
sbb
lds
ss
pop
adc
xor
ror
jmp
jmp
sub
add
push
add
and
pop
ror
cmp
ss
sti
std
and
dec
fdiv
mov
sub
pop
mov
fidivr
repnz
js
or
mov
call
es
push
push
jge
sar
dec
xchg
iret
ficomp
test
arpl
jg
push
push
xchg
int3
ds
stos
jp
pop
push
loope
push
adc
ss
jmp
mov
mov
xor
(bad)
movs
call
jl
in
out
punpckhbw
aas
fcom
pop
ja
xchg
ds
fadd
movs
inc
mov
call
xchg
jle
mov
pop
dec
mov
ret
iret
fild
inc
(bad)
cmc
mov
lds
jp
ret
mov
sbb
pop
pushf
mov
mov
(bad)
push
mov
(bad)
jg
push
aaa
fwait
jmp
jne
test
fnsave
lods
das
dec
jle
push
ins
imul
lock
pop
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
scas
mov
add
or
add
pop
cmp
lock
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
scas
mov
inc
add
lock
add
stc
mov
inc
scas
scas
push
rol
(bad)
cdq
pop
jno
les
(bad)
pop
mov
jmp
jl
movs
icebp
xchg
sub
sbb
adc
loopne
adc
stos
lea
add
lock
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
div
shr
add
jl
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
cmp
add
stos
pop
add
add
add
hlt
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ficom
iret
or
push
pop
add
lock
outs
pop
(bad)
push
test
packsswb
mov
mov
pop
aas
int3
mov
push
sar
mov
repz
rcr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
xchg
in
mov
loope
add
lock
xchg
int3
dec
push
sbb
out
fdivr
cli
cmp
bnd
mov
push
pop
or
test
(bad)
cmp
loope
icebp
inc
add
or
add
jne
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sahf
shl
push
sbb
pop
xchg
in
pop
push
add
lock
add
je
add
les
int
fistp
lock
push
pop
rcl
pop
imul
shr
lock
test
jl
shr
scas
enter
retf
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
movs
fimul
dec
add
lock
es
into
cmps
pop
pop
repz
in
nop
adc
fcmovu
out
out
push
imul
mov
dec
push
sahf
(bad)
pop
mov
inc
daa
push
or
addr16
xor
inc
jb
mov
pop
mov
cmp
out
dec
stos
out
mov
rcr
add
movs
ds
mov
sub
push
(bad)
ficomp
ins
mov
call
sub
add
mov
xchg
sbb
mov
or
fdivr
int
in
(bad)
sub
out
xchg
pusha
(bad)
js
lods
std
(bad)
push
call
jno
inc
push
and
lds
push
jmp
ins
pop
ins
stc
pop
leave
cmp
sub
loopne
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
push
xor
add
and
add
add
lock
add
cld
cmp
add
add
add
(bad)
(bad)
(bad)
jmp
pop
jecxz
mov
(bad)
(bad)
call
add
cmp
enter
pop
sub
(bad)
(bad)
call
add
lock
add
loopne
push
mov
and
xchg
movmskps
xor
push
jmp
movs
cmp
lock
(bad)
mov
sbb
inc
psubusb
push
arpl
ficomp
add
les
add
out
mov
lock
(bad)
inc
add
lock
add
lock
mov
lock
push
add
and
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
loope
js
retf
and
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
repnz
add
lock
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
loopne
js
add
lock
add
dec
cli
movs
cmp
or
mov
(bad)
cmp
outs
mov
push
xchg
ret
mov
into
std
retf
cmp
inc
clc
divps
pop
stos
iret
jge
push
pushf
(bad)
push
mov
and
imul
les
enter
add
add
or
add
mov
jecxz
aad
mov
mov
xchg
mov
jns
xlat
int
or
iret
or
cld
imul
rol
neg
and
aas
(bad)
mov
retf
(bad)
adc
and
add
push
inc
xor
enter
add
add
pusha
jno
lock
add
(bad)
(bad)
(bad)
call
mov
rcl
jg
sub
(bad)
call
fadd
lock
add
lock
sub
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
test
mov
addr16
imul
or
push
retf
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lahf
cmps
jnp
xor
add
xchg
sub
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
shl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jmp
mov
outs
cmp
add
repnz
push
(bad)
push
mov
sub
shl
nop
push
jbe
popw
fimul
and
out
push
movs
mov
call
push
push
cmps
jge
cmps
cli
and
(bad)
movs
jmp
shr
sbb
push
mov
push
ins
xor
pop
jne
add
sar
ds
cmp
je
pop
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
add
lock
add
add
add
fbld
add
and
add
(bad)
(bad)
(bad)
call
pop
jp
inc
mov
lock
(bad)
jmp
add
lock
(bad)
(bad)
inc
pop
fwait
stos
ja
cmp
add
sar
(bad)
call
sub
jecxz
dec
cmps
xchg
jmp
adc
sahf
dec
dec
push
inc
mov
test
dec
jg
movs
jne
cmp
xor
mov
gs
cli
jl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
inc
inc
add
lock
add
(bad)
mov
xchg
pop
cmp
inc
add
test
jle
add
jmp
xchg
popa
push
push
dec
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
aad
xor
add
cmps
xor
lock
add
or
add
xor
add
lock
sub
mov
dec
add
icebp
add
lock
mov
push
inc
add
push
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
aam
scas
add
lock
add
add
(bad)
(bad)
(bad)
cmp
dec
adc
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
add
lock
lock
sub
sbb
outs
pop
xchg
fistp
adc
inc
add
ret
out
lock
adc
fnstenv
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
add
xor
add
(bad)
(bad)
(bad)
call
mov
rcr
xor
lock
(bad)
call
push
or
adc
and
xchg
mov
aad
pushf
aas
ret
int3
push
cmp
dec
jecxz
jmp
retf
int3
(bad)
neg
adc
out
jecxz
mov
mov
lock
add
add
add
sbb
add
lock
add
lock
add
add
lock
mov
jbe
mov
int
cld
cmps
fldl2t
fs
clc
dec
push
xchg
movs
sbb
lods
inc
int
loop
adc
das
dec
push
inc
das
outs
popf
dec
and
jne
mov
mov
outs
cmp
push
dec
sub
xor
mov
pop
xchg
rol
xchg
jns
ret
pop
cmp
imul
ins
out
mov
push
add
lock
add
xchg
lock
add
lock
imul
fcmovnb
stos
aam
push
cmp
mov
mov
push
adc
push
clc
vmaxsd
dec
mov
inc
push
dec
mov
mov
out
or
out
sbb
adc
add
lock
(bad)
(bad)
call
mov
mov
ds
pop
sub
add
sar
(bad)
jmp
add
add
add
add
add
ja
and
sub
adc
sub
repz
jmp
sahf
mov
or
ins
sbb
pop
jl
xlat
imul
ret
fisub
in
jne
rcl
jns
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
add
add
add
mov
inc
jb
dec
xor
or
inc
jo
lds
shl
fbld
rol
not
sti
xor
inc
pushf
pop
(bad)
xchg
int
repz
loope
fsubrp
aad
inc
inc
adc
repz
xor
or
rcl
push
adc
xor
mov
icebp
scas
jg
jg
xlat
jb
sub
fs
push
ret
add
add
add
or
add
mov
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xlat
addr16
call
cmp
lock
into
out
push
int3
out
mov
jle
push
stos
and
mov
imul
clc
mov
test
xchg
out
push
leave
retf
push
adc
fdivr
add
lock
(bad)
(bad)
call
imul
sar
(bad)
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
mov
add
lock
(bad)
(bad)
push
aam
mov
xchg
cmp
lock
(bad)
inc
dec
movs
repz
(bad)
sti
ret
(bad)
pop
or
sbb
xchg
je
in
aad
jo
push
cli
cmp
cmps
xchg
ret
adc
cmc
xchg
inc
xor
or
xchg
(bad)
sbb
xchg
call
in
dec
into
sbb
adc
or
shl
pop
cmps
and
leave
cmp
cmp
cdq
(bad)
sar
int
daa
das
or
stos
jle
dec
add
sti
cdq
pop
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
rdtsc
cmp
add
or
add
not
jb
add
pop
xor
mov
xor
mov
or
arpl
fwait
mov
je
pusha
xchg
pop
shl
cdq
sub
mov
test
fwait
pop
inc
push
sbb
sub
iret
retf
adc
cmp
and
ins
outs
cmps
xor
fdivr
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnu
xchg
pop
and
sbb
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
ja
cdq
outs
push
nop
push
aaa
mov
xchg
dec
sbb
(bad)
loop
in
add
mov
loope
rcl
jno
mov
inc
shr
jg
push
or
icebp
inc
adc
add
add
add
nop
and
xor
inc
lock
sar
(bad)
push
lods
add
lock
add
push
push
add
push
add
and
add
aaa
sub
add
push
lods
leave
pop
or
test
in
dec
adc
add
icebp
add
add
add
or
add
mov
adc
add
lock
(bad)
(bad)
jmp
inc
leave
jb
inc
add
sar
(bad)
call
(bad)
add
mov
add
push
pop
leave
xchg
adc
adc
fucomi
jmp
out
aad
dec
arpl
dec
cld
cmps
push
mov
jmp
add
add
pop
add
adc
lock
cmp
into
ja
mov
shr
stos
sbb
fcmovbe
sub
ins
lods
mov
pop
jmp
sar
hlt
cld
mov
sbb
pusha
and
or
fdivr
or
dec
mov
dec
js
mov
jno
int
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
cwde
sub
xchg
add
lock
add
push
add
lock
(bad)
(bad)
jmp
ds
or
not
(bad)
(bad)
call
jp
lock
(bad)
(bad)
inc
lods
push
pop
dec
xlat
mov
lds
cmps
int
shl
xchg
jb
or
jns
push
ret
call
fbld
inc
mov
cmp
ins
pop
int3
sahf
loope
xor
add
lock
inc
add
sub
add
or
mov
inc
imul
jmp
int3
gs
mov
call
mov
aas
push
icebp
lods
sub
test
das
sbb
dec
push
ret
pop
add
lock
(bad)
(bad)
jmp
(bad)
ficom
xor
inc
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
nop
inc
(bad)
or
add
push
inc
add
aaa
add
lock
(bad)
(bad)
dec
sub
jp
add
add
(bad)
inc
lock
push
add
adc
add
lock
(bad)
(bad)
jmp
imul
add
push
or
add
add
(bad)
(bad)
dec
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
sbb
(bad)
fadd
fisttp
stc
mov
dec
test
cmp
push
ss
pop
xor
sub
lahf
test
xchg
fmul
sbb
loopne
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jbe
mov
add
lock
add
cmp
add
(bad)
(bad)
(bad)
call
xlat
adc
test
mov
lock
(bad)
inc
add
lock
xchg
add
movs
sub
and
xor
push
leave
std
fdivr
cmp
cmc
pop
gs
ins
icebp
mov
pop
xchg
scas
push
xor
mov
test
jge
loopne
jg
mov
bound
fs
imul
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ret
bound
add
lock
add
lock
add
out
pop
or
in
sar
(bad)
inc
mov
lock
add
push
add
lock
cmps
lock
jl
xor
adc
stos
imul
jmp
xor
xor
div
push
daa
push
and
popa
push
jnp
cmp
and
stos
xchg
adc
mov
daa
rol
mov
(bad)
pop
das
mov
test
adc
out
sbb
add
lock
add
push
add
lock
(bad)
(bad)
dec
or
sar
(bad)
push
add
(bad)
mov
dec
mov
lock
add
test
outs
in
xchg
xor
adc
xchg
mov
movs
add
mov
lock
pop
inc
inc
test
ins
push
or
mov
jns
fisub
arpl
adc
(bad)
cwde
cli
bound
mov
adc
xor
repz
movs
cmp
mov
(bad)
dec
clc
dec
xor
(bad)
fdiv
xor
and
inc
test
jl
jne
stos
inc
int
inc
sbb
pusha
sub
ds
or
out
test
scas
push
lahf
or
push
add
lock
lock
stos
xchg
pop
inc
jne
pop
cmps
pop
(bad)
xor
or
fs
(bad)
jae
ins
adc
mov
in
loopne
pop
test
push
les
shl
or
cdq
mov
xchg
dec
popa
add
push
add
and
jl
lock
add
lock
icebp
add
mov
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
loop
cmp
add
(bad)
(bad)
(bad)
push
dec
outs
adc
scas
push
add
sar
(bad)
push
pop
ins
shr
push
jnp
push
sub
arpl
inc
or
dec
movs
lahf
mov
jecxz
test
mov
fisubr
pop
inc
cmp
lds
shl
in
loop
push
test
sti
addr16
fdivr
out
(bad)
loopne
popa
in
push
scas
push
clc
inc
popf
or
dec
push
in
push
jl
stos
lds
lods
lds
push
fisttp
push
repz
lock
(bad)
(bad)
jmp
pusha
sbb
mov
lock
(bad)
push
push
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
inc
or
add
push
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sahf
(bad)
dec
adc
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fs
je
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
inc
mov
rcr
add
lock
xor
lock
add
lock
sbb
outs
or
sbb
mov
(bad)
cmp
test
sub
pop
mov
test
clc
cmp
add
(bad)
(bad)
(bad)
jmp
adc
mov
lock
(bad)
dec
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
adc
arpl
xlat
add
(bad)
fist
jnp
cmps
(bad)
nop
add
push
cmp
arpl
js
push
sub
mov
aam
xchg
add
sbb
push
sbb
jne
sbb
mov
mov
xchg
movs
jle
or
scas
lods
jns
ret
or
fcmovbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
jmp
add
lock
pop
add
outs
sub
cmp
inc
nop
lods
add
dec
sub
dec
push
or
pop
push
push
aas
fdiv
sahf
(bad)
cmp
movs
aaa
jg
and
jmp
test
sahf
(bad)
mov
movs
aaa
loopne
add
push
in
ret
cwde
mov
mov
dec
in
mov
mov
bswap
sar
cmps
fucomi
sar
add
es
inc
lods
mov
mov
out
push
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
push
call
cmp
add
(bad)
pop
add
inc
leave
jb
xchg
sbb
add
add
sar
(bad)
(bad)
ds
lock
add
lock
add
lock
add
lock
push
add
adc
add
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
push
fs
ss
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
inc
add
lock
pop
add
and
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
push
les
and
retf
cmp
inc
loopne
mov
inc
mov
or
fstp
out
ins
lods
or
fmul
aad
in
dec
aad
popa
test
ins
sbb
(bad)
popa
aas
out
mov
test
jmp
(bad)
jmp
inc
sub
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
aam
adc
jp
into
xor
add
(bad)
(bad)
(bad)
jmp
rcl
(bad)
int3
aas
jecxz
pop
add
sar
(bad)
(bad)
fcomp
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
imul
(bad)
(bad)
call
mov
ins
cs
pop
add
add
adc
popf
jmp
dec
push
pop
sub
aam
rol
fldcw
loop
mov
push
fs
cld
call
lods
sbb
xchg
xor
push
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
cli
jb
das
add
add
jle
shr
test
idiv
mov
ds
jo
cmp
sbb
iret
addr16
test
mov
rcr
retf
inc
add
lock
add
push
jge
dec
aam
push
cmps
sar
(bad)
call
add
inc
add
lock
add
push
add
adc
leave
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
adc
xchg
mov
add
fistp
lock
add
lock
add
mov
add
cmps
push
add
or
add
jl
xchg
pop
sbb
leave
inc
data16
mov
push
clc
aad
test
sahf
cld
ss
cs
lock
(bad)
(bad)
jmp
xchg
pavgw
push
jmp
(bad)
push
add
lock
(bad)
(bad)
jmp
jmp
scas
sbb
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
adc
xchg
cmp
add
fsub
lock
fwait
inc
or
mov
mov
xor
ins
mov
dec
fisubr
jae
mov
add
xor
mov
sub
pop
fdivr
mov
or
sbb
pop
out
scas
test
outs
or
cld
jns
xchg
jbe
(bad)
add
adc
(bad)
mov
pop
inc
ss
aaa
ret
movs
arpl
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
or
add
stc
and
and
add
lods
jo
mov
or
aas
jns
sbb
out
jae
aad
jl
cmp
int3
adc
jmp
cmc
push
or
mov
out
push
fs
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
int
add
lock
add
sbb
repz
push
xchg
pop
xchg
dec
pop
mov
push
jmp
xchg
mov
dec
sahf
fldcw
add
sbb
add
xor
add
lock
add
lock
(bad)
(bad)
(bad)
mov
add
mov
push
(bad)
inc
add
add
add
mov
xchg
sar
(bad)
dec
repz
lock
add
lock
sbb
int
sbb
xor
not
sbb
xor
or
add
jno
sbb
int3
jmp
movs
clc
sbb
cmp
sub
xor
push
fdiv
jbe
sbb
push
mov
jecxz
adc
dec
cdq
cmp
xlat
(bad)
outs
push
clc
popf
icebp
inc
lahf
xchg
(bad)
mov
and
jo
and
lock
add
lock
sbb
lods
andnps
xor
aam
cmc
pop
add
inc
jge
sub
jecxz
sbb
mov
(bad)
ins
push
inc
lods
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
aaa
xor
in
jnp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
add
lock
lock
push
mov
jmp
in
stos
dec
ret
ins
or
push
pop
push
jp
xchg
popa
and
aas
aas
jns
inc
pushf
inc
or
cmp
cmps
ds
xchg
jg
jmp
push
adc
mov
xor
mov
fnstcw
add
lock
(bad)
(bad)
(bad)
dec
mov
fwait
jge
add
sar
(bad)
dec
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
push
imul
add
shr
lock
add
(bad)
(bad)
(bad)
jmp
xor
test
lock
(bad)
jmp
sahf
mov
call
and
popa
test
jle
dec
call
shl
dec
popa
popa
fstp
add
push
mov
cmp
add
add
mov
jns
out
es
das
out
sbb
mov
or
outs
(bad)
inc
adc
int3
pop
js
nop
mov
xchg
mov
push
lods
loop
stc
or
imul
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
scas
pop
fcmove
test
mov
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
data16
xor
shl
cmc
or
mov
adc
out
std
dec
jbe
mov
mov
jmp
test
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
in
paddw
std
loopne
dec
pop
inc
push
dec
int
div
dec
fcomp
xchg
cs
aad
dec
cmp
jae
adc
aad
xor
push
std
adc
clc
fiadd
std
scas
int
(bad)
fiadd
xchg
(bad)
mov
inc
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
frstor
inc
rol
add
lock
add
stos
add
lock
add
in
repnz
call
(bad)
push
add
lock
add
sbb
add
lock
mov
rcr
adc
scas
push
xor
sub
xor
xchg
sahf
dec
jne
push
(bad)
mov
inc
ins
inc
shr
scas
call
pop
mov
loop
mov
sbb
pop
stc
stos
out
pop
pop
in
xchg
and
shr
js
mov
and
scas
mov
mov
ins
jne
mov
or
and
rcr
mov
pusha
mov
xchg
gs
cmp
in
test
mov
push
cld
lds
arpl
sbb
jle
mov
mov
jno
inc
stc
inc
inc
push
cmps
pop
fiadd
ret
in
adc
lock
add
xchg
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
add
add
lock
(bad)
(bad)
dec
dec
inc
mov
inc
sub
sar
(bad)
push
add
lock
(bad)
(bad)
dec
movs
and
sar
(bad)
jmp
add
lock
test
sldt
adc
add
inc
add
lock
add
loopne
mov
adc
cmp
(bad)
(bad)
call
add
lock
add
lock
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
xlat
fild
add
(bad)
mov
add
int3
mov
mov
cs
mov
enter
inc
jns
(bad)
clc
dec
sbb
fsub
mov
in
fs
mov
push
daa
int3
cwde
mov
jle
dec
sbb
add
lock
(bad)
(bad)
inc
xchg
xor
jmp
add
sar
(bad)
(bad)
std
nop
add
add
add
push
add
sbb
pop
sub
push
das
sbb
daa
xchg
jmp
jl
mov
into
jg
jmp
xlat
jg
call
out
popf
js
test
int
sti
movs
fwait
(bad)
xchg
stc
mov
xlat
pushf
es
out
stos
mov
cmp
das
inc
adc
mov
ror
push
(bad)
je
jl
adc
cmc
jo
mov
dec
mov
push
in
jl
xchg
sub
(bad)
add
xor
xchg
scas
mov
rcl
push
mov
adc
add
fldenv
shr
xchg
aad
pop
movs
pop
cli
mov
xchg
mov
je
add
xor
clc
mov
push
sub
daa
cli
push
das
int
or
mov
cmp
rcr
scas
pop
inc
pxor
stc
cli
rcr
push
xor
imul
gs
out
mov
or
push
and
cdq
sub
jae
fld
or
add
lock
add
in
mov
dec
sar
(bad)
inc
xchg
add
lock
add
xor
add
(bad)
(bad)
(bad)
dec
rcr
jmp
inc
into
vmread
inc
jbe
fistp
cwde
cmp
test
(bad)
into
push
pop
push
ins
jmp
dec
xor
repz
sbb
je
dec
jo
push
es
cmps
pop
mov
(bad)
imul
cwde
movs
pop
cmp
out
loope
pop
cmps
movs
cmps
push
xchg
add
les
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
das
jns
jo
idiv
xchg
in
shr
mov
out
and
xor
add
in
jno
jecxz
mov
jge
in
enter
dec
clc
sub
(bad)
or
inc
add
lock
(bad)
(bad)
dec
outs
dec
and
push
push
jno
jg
lock
(bad)
jmp
jne
lock
add
add
add
jg
or
sbb
aad
sub
jno
rcr
popf
mov
imul
mov
out
xchg
aad
std
out
inc
aam
mov
retf
mov
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
pop
shl
add
lock
add
add
add
ror
add
add
sub
sti
idiv
cmps
mov
mov
ins
retf
add
ins
inc
pop
or
adc
shl
mov
mov
mov
xlat
mov
cwde
(bad)
cli
xchg
mov
out
sub
ret
icebp
push
adc
cld
pop
fwait
lods
cmp
mov
inc
push
xchg
mov
push
xchg
push
pop
repnz
sar
test
dec
retf
mov
xchg
mov
dec
je
dec
push
je
mov
push
call
xor
inc
cmps
push
mov
jbe
test
add
(bad)
(bad)
(bad)
(bad)
jmp
cdq
dec
sti
je
fst
(bad)
(bad)
call
movs
xor
mov
cmp
pand
pop
jae
pop
out
dec
xlat
cs
jg
push
into
aas
lods
sub
fst
mov
jo
outs
out
inc
mov
int3
add
dec
retf
and
(bad)
adc
cmps
sub
add
(bad)
(bad)
(bad)
jmp
xor
push
test
lock
(bad)
call
xor
and
add
add
lock
add
and
cmp
cmps
or
fimul
pop
push
push
pop
repz
pop
les
push
pop
call
popf
xchg
cwde
push
mov
loope
fcmovb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
add
mov
add
(bad)
jle
test
sub
inc
inc
push
cdq
sub
mov
push
xlat
inc
push
fdivr
mov
mov
sub
add
or
enter
lahf
enter
fadd
push
nop
mov
loopne
mov
sub
inc
cmp
add
(bad)
(bad)
(bad)
dec
jb
pop
fiadd
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
push
aam
xlat
fist
add
add
(bad)
call
jmp
outs
pop
(bad)
lods
inc
mov
(bad)
imul
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
inc
sub
lock
dec
das
repnz
ins
or
stos
or
xor
push
out
dec
call
(bad)
or
fsub
mov
inc
(bad)
push
mov
dec
inc
ja
pop
add
lea
rcr
jle
pop
lock
aam
lods
sub
jns
or
clc
lods
inc
add
add
add
add
sldt
adc
add
add
add
mov
fadd
lock
add
adc
fadd
lock
add
(bad)
(bad)
(bad)
inc
lock
sbb
dec
mov
lock
(bad)
jmp
std
sti
stos
test
in
test
dec
xlat
(bad)
push
mov
push
inc
pop
(bad)
int
retf
push
imul
lock
add
mov
add
add
add
cmps
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pushf
lock
hlt
and
mov
lock
add
(bad)
(bad)
(bad)
jmp
sar
lds
jmp
(bad)
mov
xchg
retf
jae
lods
shl
dec
xor
pop
push
dec
xor
les
out
and
test
or
pop
adc
in
scas
pusha
inc
cmp
scas
xchg
out
mov
push
xchg
fldenv
movs
sbb
pop
scas
fmul
je
fwait
push
mov
pusha
push
add
xor
or
cmp
outs
jg
hlt
lock
dec
out
mov
xchg
mov
add
sbb
cmp
xchg
mov
mov
mov
sub
popa
ins
cmp
inc
add
lock
add
or
add
(bad)
(bad)
(bad)
(bad)
jg
retf
add
or
loop
(bad)
(bad)
inc
add
xchg
jae
lock
(bad)
(bad)
jmp
sbb
jmp
cmps
lds
add
pop
(bad)
mov
es
pop
test
retf
lods
int
mov
ds
enter
ror
les
(bad)
lods
out
pushf
mov
push
add
rcl
fwait
push
add
push
add
and
add
loopne
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
add
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
das
add
jne
add
lock
dec
gs
ins
fsubr
jmp
pop
cmp
(bad)
push
movs
sub
mov
data16
sar
(bad)
pop
lea
fild
sub
jl
jg
(bad)
pop
call
add
lock
add
adc
or
movs
(bad)
scas
data16
and
mov
mov
imul
add
sbb
push
dec
sahf
fnstcw
inc
jae
xchg
adc
scas
stos
sbb
mov
fisubr
adc
hlt
ins
scas
mov
fsub
aas
cmc
xor
push
rcl
js
sbb
sub
pop
repz
ret
pop
inc
mov
dec
adc
dec
repnz
xchg
sar
ja
mov
mov
sbb
lock
scas
add
leave
mov
add
add
add
jne
outs
loope
sbb
popa
sar
(bad)
inc
inc
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
fwait
out
jo
(bad)
popf
xor
add
and
lock
cli
add
or
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
xchg
add
add
popa
mov
add
add
add
(bad)
(bad)
dec
shr
xchg
add
ret
(bad)
(bad)
jmp
add
push
add
add
add
mov
sub
inc
adc
add
sar
(bad)
dec
popa
add
lock
lock
lock
or
add
inc
mov
inc
sub
add
lock
(bad)
(bad)
in
fild
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
test
jp
add
add
add
add
add
add
lock
(bad)
(bad)
call
push
xor
dec
mov
xlat
cwde
add
ret
(bad)
(bad)
inc
popf
and
cmps
pop
jle
test
data16
bound
lods
adc
enter
adc
cs
and
jle
push
dec
sub
out
add
ins
xlat
cmp
stc
sbb
mov
mov
vcvttps2dq
sub
add
lock
lock
add
mov
pop
repnz
inc
lock
add
add
add
cs
int
cmc
imul
push
or
imul
jnp
and
ja
cmp
loopne
aam
add
repz
in
cmp
in
push
mov
push
inc
sub
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
xor
pop
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
mov
cli
and
add
mov
lock
jae
lock
add
push
clc
jmp
imul
pop
fld
jbe
imul
mov
gs
test
cmps
pop
adc
mov
popa
mov
sub
inc
sub
adc
fwait
imul
cmc
je
jp
das
mov
das
data16
movs
jne
jl
aas
push
out
push
dec
mov
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ficomp
mov
repnz
aas
add
lock
pushf
add
add
add
ret
add
add
add
add
adc
dec
push
retf
data16
(bad)
dec
fadd
lock
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jl
test
mov
dec
or
pusha
cmp
pushf
imul
jmp
ss
fcom
call
inc
repz
or
test
xchg
call
test
push
test
das
stc
push
stos
pop
aaa
std
pop
cmp
std
mov
cmp
out
enter
sti
scas
pop
jecxz
retf
ret
test
adc
mov
mov
outs
gs
das
pushf
dec
add
push
add
lock
add
lock
add
xchg
loop
call
sar
(bad)
jmp
out
add
lock
add
lock
not
test
das
dec
mov
or
and
cdq
icebp
dec
repz
xor
jb
lahf
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fdivr
push
pop
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fimul
pusha
mov
lea
mov
retf
jp
xchg
fisubr
cmp
xor
aam
sbb
adc
fistp
cmp
sbb
jle
fs
shr
sbb
sahf
add
fs
fwait
inc
cmp
inc
loope
test
ins
xor
aaa
das
xor
(bad)
push
rol
mov
pop
sub
mov
pop
cmps
xor
mov
or
pusha
and
push
mov
pop
xchg
cmp
idiv
dec
adc
xor
shl
leave
pushw
sbb
fadd
cmps
pop
in
je
cmp
lock
add
pop
cmps
(bad)
adc
nop
(bad)
pop
sub
or
stc
in
call
sti
mov
sbb
mov
daa
cmp
cvtps2pd
lock
add
sbb
add
(bad)
(bad)
(bad)
push
push
fnstcw
(bad)
(bad)
push
add
lock
(bad)
(bad)
jmp
mov
lock
(bad)
jmp
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
nop
int3
sub
add
(bad)
(bad)
(bad)
dec
pushf
popa
inc
jmp
push
mov
(bad)
jmp
add
add
add
mov
add
and
in
lock
add
add
add
popa
dec
cli
jo
sbb
jo
lods
or
ins
cli
sbb
imul
xor
shr
and
jb
adc
lds
clc
mov
mov
(bad)
(bad)
je
ss
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lds
xor
add
lds
rol
or
mov
(bad)
nop
sbb
mov
movs
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
pusha
lods
ins
or
add
lock
(bad)
(bad)
dec
xchg
iret
mov
jae
inc
movs
add
sar
(bad)
(bad)
cmp
jg
or
push
stc
das
or
jmp
jmp
fdivr
jb
sbb
test
pushf
enter
or
in
jg
mov
push
inc
pop
sub
pusha
fisub
add
lock
(bad)
(bad)
(bad)
fdivr
repz
sbb
sar
(bad)
jmp
movs
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
in
lock
add
or
add
rol
lock
mov
lock
add
loope
add
add
add
add
add
(bad)
(bad)
(bad)
dec
xchg
push
dec
cmps
add
sar
(bad)
dec
dec
xor
xor
pop
inc
sub
xchg
pop
xchg
jne
nop
arpl
dec
pop
addr16
push
dec
sub
jl
jne
test
mov
enter
ins
mov
repnz
jl
pop
jle
into
loope
cmp
mov
sbb
jo
mov
sub
cmp
call
outs
test
fdivrp
push
ja
push
adc
xor
adc
into
outs
dec
hlt
test
cmp
cmp
hlt
pop
dec
adc
mov
out
je
add
inc
mov
mov
cld
adc
adc
ror
mov
fimul
mov
sub
out
xor
pop
push
lds
jbe
jl
push
scas
sldt
lock
adc
inc
add
ds
lock
xchg
mov
stos
lods
mov
outs
loope
push
xchg
aam
sub
mov
xor
imul
retf
gs
aaa
cmp
add
(bad)
(bad)
(bad)
(bad)
mov
xchg
sub
(bad)
push
cli
sub
in
push
inc
jbe
inc
and
aam
inc
mov
add
test
jo
out
pop
out
cmp
xor
add
fisubr
inc
cwde
clc
fcom
lods
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
cmp
add
(bad)
(bad)
(bad)
jmp
pop
adc
xchg
push
or
xchg
clc
sbb
dec
stos
or
clc
jge
jbe
xchg
sti
adc
pop
outs
jge
jle
test
cld
add
mov
push
int3
ins
retf
in
lds
(bad)
(bad)
(bad)
call
das
add
jmp
(bad)
(bad)
fisttp
add
add
add
add
add
add
add
pop
add
add
add
sbb
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
out
inc
ror
pop
enter
lock
add
adc
add
ret
std
xchg
(bad)
sub
out
cdq
fwait
into
or
mov
jle
jae
pop
jge
shr
sub
xchg
mov
fisttp
add
cmp
aad
rcl
add
lock
jl
lock
add
out
add
loop
add
in
aas
cmc
mov
imul
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
lock
fwait
mov
xor
inc
test
popf
test
cmp
std
mov
xor
lock
mov
jne
cmps
jnp
xor
in
cmp
loop
mov
lock
arpl
xchg
pop
fs
pop
add
iret
mov
pushf
xor
cli
adc
stc
add
mul
cmp
or
mov
aam
popf
ret
(bad)
lods
push
jae
mov
daa
push
xchg
jo
mov
mov
stos
xchg
push
stos
stos
sti
scas
ret
and
push
sub
call
push
adc
cmc
jge
(bad)
(bad)
and
jle
fisttp
adc
push
jmp
adc
mov
sub
es
mov
cmp
test
jmp
call
jbe
sbb
ds
jl
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
loope
lock
add
lock
lock
(bad)
(bad)
jmp
mov
pop
mov
add
sar
(bad)
(bad)
jmp
scas
sbb
add
lock
(bad)
jmp
add
lock
add
lock
add
lock
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
gs
mov
bound
add
add
add
add
and
fcmovnbe
pop
cdq
loop
test
outs
scas
es
(bad)
and
fdiv
and
pop
(bad)
push
hlt
jp
pusha
dec
pop
outs
cmp
add
lock
add
sbb
mov
(bad)
call
rol
inc
add
lock
int3
add
add
mov
push
inc
pop
ins
mov
cli
lock
outs
int3
and
add
call
inc
cdq
div
push
add
lock
add
in
add
fisub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
scas
jge
inc
sahf
cdq
pop
or
mov
lock
(bad)
jb
inc
sbb
pop
pop
dec
ins
mov
retf
mov
fsub
or
xor
repnz
outs
mov
shl
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lods
jb
pop
ret
jns
xchg
add
lock
sbb
adc
addr16
xchg
iret
dec
mov
and
xchg
mov
lods
popf
sbb
adc
ja
out
fsubrp
sbb
pop
sub
gs
popf
add
add
pushf
cwde
cmps
pop
xlat
mov
ret
je
fdiv
iret
lods
lea
cmp
cmp
mov
(bad)
out
inc
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
rcl
popa
retf
cmp
push
add
lock
add
(bad)
(bad)
(bad)
call
pop
push
mov
(bad)
jmp
pop
add
or
add
inc
(bad)
jnp
ins
scas
push
push
fisubr
inc
sar
push
pmulhuw
test
jl
int
in
fld
je
shr
stos
jns
in
or
imul
add
repnz
push
cmp
push
mov
jg
not
sbb
mov
xchg
ds
imul
mov
loope
inc
pop
or
or
mov
mov
xor
or
sub
adc
sub
adc
adc
shr
das
push
jbe
cmp
cmp
stos
loop
pop
outs
push
mov
(bad)
push
ss
out
mov
ret
and
add
(bad)
and
div
clc
pop
inc
divps
xor
push
jmp
xchg
lds
add
xchg
or
add
stc
fidivr
add
add
or
(bad)
(bad)
(bad)
js
or
popf
stc
ret
sar
(bad)
inc
add
sub
push
add
lock
(bad)
(bad)
call
out
cld
xor
(bad)
add
sar
(bad)
call
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
shl
mov
add
lock
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
xchg
jmp
lock
cmc
pop
out
movs
xchg
aaa
pop
shr
cmp
mov
stos
stc
in
inc
sahf
adc
fwait
inc
push
xor
test
inc
jmp
pop
pushf
imul
push
gs
call
xlat
call
xchg
repnz
add
add
mov
add
add
add
or
add
(bad)
(bad)
(bad)
jmp
std
push
addr16
mov
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmc
enter
add
(bad)
mov
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
enter
add
lock
hlt
add
ret
fild
aam
adc
or
test
xor
sub
sub
aaa
dec
jns
pop
imul
and
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
stos
pop
dec
bound
xor
add
or
mov
push
and
fdivr
adc
fld
ret
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
cld
aam
pop
sub
ror
pop
lods
push
sbb
aas
jl
test
dec
fsubrp
jns
mov
jmp
in
in
daa
(bad)
adc
das
sti
and
adc
xor
mov
add
aad
mov
aad
add
push
add
and
pop
pop
jge
(bad)
mov
mov
lds
pop
mov
cli
ret
sti
sbb
or
mov
(bad)
jae
scas
sub
pop
scas
cdq
dec
arpl
stos
lea
mul
loope
mov
fldcw
add
lock
(bad)
(bad)
push
(bad)
push
es
dec
fstp
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
(bad)
mov
cmp
add
scas
lds
lock
lock
add
add
add
(bad)
nop
add
ss
lock
add
or
add
ret
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
jle
cmp
add
jl
add
add
add
(bad)
lock
ds
and
add
add
sar
(bad)
inc
add
lock
add
lock
add
lock
add
sbb
add
add
add
push
cmp
stos
or
in
sar
mov
test
in
adc
cmps
out
test
call
retf
jno
out
push
(bad)
popf
enter
popa
mov
sbb
pushf
mov
rol
test
mov
test
sahf
cmp
popf
mov
jmp
daa
scas
lahf
loopne
mov
inc
js
jmp
outs
fild
or
stc
out
loop
hlt
inc
retf
rol
or
(bad)
(bad)
(bad)
jmp
pop
(bad)
sbb
test
sub
add
sar
(bad)
(bad)
cmp
(bad)
(bad)
call
dec
ret
fldcw
lock
(bad)
dec
xor
wrmsr
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
repnz
add
xor
add
jnp
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
addr16
std
inc
push
dec
mov
or
add
cmp
int
adc
leave
or
outs
pusha
nop
sub
jbe
(bad)
sbb
aaa
sti
fs
ret
scas
or
xor
add
(bad)
(bad)
(bad)
push
retf
imul
sar
(bad)
inc
add
lock
add
add
add
sldt
lock
lock
add
xor
mov
sbb
xor
push
inc
ret
and
cmp
dec
push
cmc
pushf
dec
addr16
xchg
in
not
out
xchg
ror
loopne
repz
(bad)
cmps
or
clc
aad
ins
pop
cwde
cmp
xor
mov
inc
aaa
popa
jo
test
int3
fbstp
ds
(bad)
sar
xor
push
mov
fnstenv
push
xchg
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
fucomp
aas
test
mov
add
xchg
rol
lock
imul
leave
aad
in
cmp
sub
and
rcr
mov
jl
mov
stc
dec
imul
and
push
jae
mov
mov
mov
cdq
in
mov
pop
arpl
dec
jbe
push
aad
test
neg
imul
les
int
std
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
fwait
xchg
mov
add
dec
aam
lock
xlat
xor
aam
pusha
inc
leave
adc
inc
jns
or
cmps
push
or
stos
sbb
and
fdiv
mov
imul
cdq
or
inc
lock
ret
jb
test
pop
(bad)
enter
ror
mul
dec
dec
sbb
ins
mov
ins
add
lock
(bad)
(bad)
dec
mov
scas
(bad)
add
add
(bad)
(bad)
cmp
add
adc
add
lock
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
mov
jmp
mov
push
shr
inc
out
fdivr
addr16
lods
ins
adc
jecxz
add
cmp
xor
icebp
(bad)
sbb
add
fcomp
into
jmp
stos
mov
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
out
inc
and
lock
add
mov
dec
cld
sbb
cmps
ins
and
mov
(bad)
sbb
cdq
mov
jns
ds
icebp
aam
and
sub
fldenv
sbb
mov
add
enter
sub
cmp
pop
cmc
ret
scas
cmps
xchg
dec
sbb
test
dec
inc
or
test
cmp
imul
lock
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
dec
sahf
or
pop
jg
add
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jne
or
mov
add
mov
repnz
stc
sbb
enter
add
or
movs
fwait
mov
push
mov
sub
jmp
pop
jmp
adc
add
add
add
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jno
add
add
add
inc
add
lock
(bad)
(bad)
push
sbb
mov
sar
(bad)
inc
add
lock
(bad)
(bad)
push
je
clc
dec
in
(bad)
mov
fld
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
imul
mov
fcomp
adc
add
push
data16
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sub
cli
(bad)
add
add
add
add
add
add
add
push
add
adc
add
add
add
inc
pop
loopne
ss
(bad)
inc
xchg
add
lock
add
lock
add
ret
fdivr
add
sbb
gs
into
cmps
mov
or
and
aas
fs
jae
add
add
add
pop
xor
lock
add
lock
cmp
and
add
lock
stos
add
add
add
out
in
cmp
test
aam
pop
jl
(bad)
mov
movsx
clc
and
aaa
mov
mov
pusha
not
fidivr
jmp
dec
lock
ins
(bad)
enter
inc
in
and
sahf
dec
scas
mov
pop
in
cmp
aas
jo
in
cmp
pop
mov
mov
sbb
dec
(bad)
adc
fidiv
call
add
add
add
push
pushf
sbb
sub
inc
fnstsw
inc
inc
cdq
push
mov
mov
out
push
mov
pop
fdiv
jae
inc
adc
xchg
add
mov
or
bound
test
cmp
jbe
mov
dec
pop
mov
jmp
je
mov
ins
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
mov
add
lock
add
push
add
lock
(bad)
(bad)
push
lods
aas
xchg
rol
ds
(bad)
call
add
mov
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
loope
test
add
lock
add
xlat
sub
xor
out
out
mov
call
or
aad
test
adc
cmc
imul
xchg
xchg
call
mov
adc
(bad)
aad
xor
mov
and
test
ins
ds
and
cld
add
xor
add
(bad)
(bad)
(bad)
call
fwait
lods
imul
in
lock
(bad)
inc
add
add
add
add
add
add
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
add
int
xchg
or
loope
push
pushf
push
fabs
bound
push
jg
shr
cmp
mov
fwait
mov
sub
or
test
stos
movs
push
sbb
cmp
arpl
or
dec
add
adc
mov
idiv
js
iret
aam
shufps
test
pop
icebp
adc
add
and
idiv
add
jmp
sbb
loop
imul
jg
jecxz
arpl
jbe
int3
pop
jae
into
es
retf
loopne
mov
shl
lea
mov
jae
shr
je
jns
dec
mov
cmp
adc
or
in
mov
add
pop
shr
or
inc
out
imul
in
inc
popf
movs
lahf
sbb
sub
loop
pusha
mov
das
out
push
stc
mov
add
mov
fisub
add
lock
add
or
add
(bad)
(bad)
(bad)
call
fisubr
push
bnd
sar
(bad)
call
add
outs
mov
(bad)
push
add
bound
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
jno
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
add
lock
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
push
add
add
lock
lock
lock
add
mov
sub
aad
test
ja
add
retf
in
or
push
pop
rcr
nop
push
push
cmp
cdq
xor
add
nop
add
push
add
adc
add
add
add
lods
pop
adc
sbb
and
retf
mov
cmp
push
ficom
xchg
xor
cmp
push
mov
jge
push
xchg
add
repz
test
sahf
cdq
jb
adc
mov
fdivr
cmp
add
sbb
xor
sub
jmp
lock
xchg
pushf
out
movs
fld
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
fwait
xchg
mov
mov
out
push
test
mov
dec
cmps
enter
les
sbb
sbb
push
das
shl
jge
pop
test
fcomp
jle
(bad)
fsqrt
mov
inc
lds
aas
push
inc
xlat
mov
cmps
xchg
add
add
add
adc
add
cmc
push
and
mov
lock
(bad)
(bad)
in
mov
lock
add
lock
add
lock
add
lock
add
lock
(bad)
(bad)
dec
hlt
mov
add
sbb
add
add
(bad)
dec
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
clc
inc
fst
outs
out
add
xor
fnstcw
add
lock
add
add
add
(bad)
(bad)
(bad)
jmp
ror
add
(bad)
call
add
lock
lock
(bad)
(bad)
push
add
push
or
lock
adc
xchg
js
xchg
cmp
pop
xor
xchg
mov
sub
sbb
push
rcr
pop
imul
jns
cmc
iret
dec
icebp
in
mov
mov
add
cmp
or
xor
mov
sub
sbb
add
mov
xlat
ds
sbb
(bad)
cmp
lods
pop
pushf
(bad)
movs
stos
cmp
call
fist
or
ds
pop
cli
xor
mov
out
js
ja
jne
fcom
(bad)
mov
repz
(bad)
xchg
(bad)
cmp
test
shl
sub
aaa
cmp
js
shl
push
fst
dec
sub
stos
sahf
xor
cli
repnz
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
movs
pop
dec
arpl
(bad)
adc
add
mov
cmp
stc
(bad)
lods
or
stc
jmp
inc
or
popf
fisub
mov
(bad)
mov
in
pop
jae
aad
out
in
mov
lock
add
les
inc
push
mov
adc
mov
movs
mov
outs
adc
es
xchg
sbb
push
aad
movs
ret
adc
sub
adc
sbb
push
je
dec
xchg
gs
mov
out
adc
setae
mov
addr16
mov
stos
jmp
dec
xchg
cwde
cmps
ret
jns
jmp
in
fwait
movs
ss
jge
push
iret
inc
mov
fsubr
inc
and
pop
pop
pop
add
in
leave
mov
mov
sub
sub
jmp
mov
xor
lods
pop
enter
lahf
sahf
mov
mov
add
dec
mov
sub
mov
adc
or
aaa
xchg
aas
stos
jnp
sti
push
cmp
mov
adc
lahf
mov
jb
pop
dec
sub
out
pop
ja
jmp
mov
xchg
jg
pop
xchg
and
add
(bad)
mov
xchg
out
and
(bad)
outs
mov
mov
arpl
lock
(bad)
(bad)
jmp
mov
daa
add
add
ret
(bad)
(bad)
jmp
add
cmp
add
push
dec
add
cmp
add
repz
lock
adc
lock
add
and
lar
push
add
and
call
lods
jnp
movs
enter
push
stos
loop
nop
xchg
(bad)
cdq
ret
neg
(bad)
js
xor
loopne
popf
outs
xlat
mov
and
pushf
pop
loop
pop
mov
jp
popf
icebp
push
adc
stos
adc
movs
mov
pop
cmovo
inc
dec
loope
xchg
fdiv
pop
push
dec
adc
cmp
fld
push
xchg
inc
inc
xor
sbb
jae
das
dec
jecxz
(bad)
in
inc
ret
int3
inc
dec
cs
test
mov
imul
movs
aaa
mov
mov
mov
call
jecxz
shr
repz
adc
ss
push
aad
inc
test
aas
test
jns
inc
dec
aad
add
(bad)
mov
mov
out
lods
mov
xor
lods
stos
mov
pop
jmp
dec
int3
call
div
jne
cmc
mov
arpl
mov
mov
ja
pop
xor
sbb
lock
add
add
add
jno
jmp
jmp
in
jmp
inc
jo
loopne
xor
jne
jmp
sbb
push
add
or
out
jns
xor
mov
jmp
rcr
fidivr
pop
mov
inc
(bad)
push
scas
and
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
wbinvd
xchg
push
add
add
add
and
mov
sub
sbb
add
(bad)
aaa
iret
add
iret
imul
jp
jp
xchg
jbe
hlt
cs
and
cli
jnp
daa
add
sub
test
stos
push
imul
xchg
lds
or
add
retf
shl
(bad)
mov
pop
or
rol
loop
cmp
test
jl
xchg
(bad)
shl
cmps
lea
pop
jnp
mov
bound
sbb
in
pop
xchg
idiv
jge
push
xchg
dec
or
test
iret
bound
int3
add
jmp
movs
int3
inc
xor
bound
mov
lds
aaa
int3
adc
clc
jns
psubusb
inc
adc
jo
xchg
stos
mov
cmp
fidivr
jge
push
cmps
sub
pop
iret
fnsave
pushf
jl
adc
inc
push
inc
mov
and
inc
or
in
pop
mov
pop
ret
ror
loop
mov
cmc
and
inc
pushf
scas
jo
add
push
add
lock
add
lock
(bad)
(bad)
inc
aas
test
mov
add
sar
(bad)
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
test
icebp
stos
dec
cmp
(bad)
sbb
jns
xchg
in
add
cmps
add
aam
jle
ret
cmp
mov
pushf
jp
scas
cs
js
test
mov
jp
scas
xlat
shr
cmp
dec
adc
add
mov
gs
fsubr
iret
dec
add
lock
add
(bad)
shl
rcl
(bad)
(bad)
call
mov
lock
add
dec
add
lock
js
lock
add
lock
add
(bad)
(bad)
(bad)
jmp
test
cld
add
sar
(bad)
push
add
xor
add
retf
rol
je
out
jle
cs
aas
lods
mov
push
clc
mov
push
push
mov
xchg
(bad)
and
jae
add
lock
add
lods
add
push
mov
(bad)
(bad)
jmp
add
lock
lock
inc
aas
cmps
dec
xchg
jmp
jne
dec
jne
mov
jecxz
mov
dec
js
mov
mov
rcr
iret
adc
fsub
add
into
inc
mov
div
lds
ds
lods
jecxz
adc
jb
or
add
lock
and
dec
add
das
hlt
pusha
leave
jecxz
mov
add
sub
or
sub
add
add
add
xor
add
(bad)
(bad)
(bad)
dec
mov
add
sar
(bad)
jmp
add
lock
add
(bad)
(bad)
(bad)
(bad)
ds
test
pop
push
gs
(bad)
(bad)
jmp
jo
cmp
dec
mov
or
or
or
in
and
push
xchg
inc
adc
cmp
push
mov
ret
xchg
lahf
or
jmp
(bad)
lods
jg
outs
jo
cmc
inc
fimul
aaa
pusha
pop
test
repnz
mov
sub
pop
fdiv
scas
(bad)
cwde
ss
idiv
jns
pop
xchg
sahf
inc
cmps
and
mov
(bad)
nop
repz
stos
(bad)
stc
mov
adc
mov
inc
mov
shl
call
cmp
test
push
add
test
hlt
jge
jo
or
push
sbb
mov
sbb
inc
rcl
jo
iret
mov
test
pop
adc
jl
dec
push
jg
inc
sbb
mov
call
jmp
test
ja
(bad)
add
pop
or
or
test
push
mov
sub
(bad)
cmp
je
stc
push
sti
cwde
xchg
push
and
and
ins
sub
(bad)
sub
dec
sbb
adc
fsubr
add
pop
rol
rcl
je
xchg
std
outs
fild
and
xchg
cli
lahf
imul
leave
or
dec
cwde
lahf
outs
push
push
jo
mov
dec
sar
mov
shl
or
pop
ret
out
ins
cmc
js
sahf
xchg
ins
hlt
xchg
ret
hlt
mov
xchg
jle
cmps
div
xchg
add
adc
cmc
xor
loop
cmp
cmp
dec
push
sub
popa
sub
(bad)
ret
adc
and
xchg
jle
sbb
popa
jmp
bound
pop
popa
ds
scas
jne
rcr
mov
adc
inc
cs
nop
rep
pop
sti
loopne
dec
rcl
cmp
mov
retf
enter
ret
sub
movs
ret
jae
sbb
cdq
sahf
mov
inc
cs
call
mov
mov
mov
(bad)
js
iret
fwait
add
in
dec
cli
(bad)
jge
cs
push
arpl
pop
cmps
iret
shrd
in
cli
pop
jle
daa
jmp
inc
jnp
(bad)
lods
dec
sub
push
sbb
jge
daa
bound
(bad)
dec
mov
jmp
xor
push
imul
fidiv
add
mov
jmp
sub
mov
xlat
push
add
outs
fistp
pop
gs
enter
ss
in
rol
call
jo
aaa
ins
fucom
jbe
ins
push
xchg
xor
push
aaa
dec
and
inc
sti
fstp
cs
add
add
add
add
add
lock
cmp
mov
ins
mov
xor
add
(bad)
(bad)
(bad)
call
fld
scas
cs
or
sar
(bad)
(bad)
mov
pop
leave
imul
(bad)
(bad)
(bad)
(bad)
(bad)
push
lds
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
bound
cld
cmp
add
fisttp
add
sub
add
xor
add
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
cmp
xchg
or
sub
lock
add
dec
out
popf
inc
fs
mov
int
clc
jmp
adc
mov
jae
fisttp
jge
hlt
jmp
es
loopne
add
adc
mov
sti
fcmove
ficomp
sub
ficom
inc
xor
add
(bad)
(bad)
(bad)
call
push
outs
mov
sar
(bad)
jmp
add
or
add
ins
or
add
add
add
arpl
lock
lock
add
adc
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fimul
outs
sub
xor
aam
push
imul
pop
jne
xor
inc
push
jmp
ja
and
xchg
xor
mov
ror
cs
out
mov
push
(bad)
je
add
ds
mov
push
sub
inc
test
inc
les
arpl
imul
ins
jl
out
mov
test
mov
push
icebp
xor
adc
cmps
ror
xchg
dec
fisubr
mov
or
fs
pop
xchg
daa
add
pop
ret
adc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
xor
add
int
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
pop
cmovge
add
aaa
(bad)
lock
inc
fld
data16
push
xchg
mov
mov
mov
movs
mov
sti
xor
and
imul
div
xchg
sar
call
leave
xchg
sub
dec
sub
jb
sub
inc
fbstp
sbb
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
and
adc
aas
mov
add
lock
add
xchg
call
mov
add
ja
and
lds
bnd
retf
daa
repz
fimul
pop
sahf
fadd
(bad)
imul
dec
popf
fisttp
popa
jmp
dec
mov
hlt
jb
pop
cmp
push
mov
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
pop
adc
out
push
or
shr
mov
not
stc
cmps
repz
mov
aam
retf
inc
or
jg
mov
rol
xor
cmps
ficom
sub
push
cdq
mov
adc
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
js
jae
sub
add
adc
add
lock
add
(bad)
(bad)
(bad)
push
repnz
sub
lock
(bad)
(bad)
stc
out
lock
add
add
add
add
call
lock
add
inc
mov
in
ret
dec
xchg
cmp
int3
add
inc
aam
cli
fwait
push
out
mov
leave
ja
adc
loope
dec
(bad)
dec
or
push
dec
jecxz
pop
sbb
inc
add
lock
(bad)
(bad)
dec
loop
cmp
adc
lock
(bad)
call
add
(bad)
(bad)
(bad)
dec
and
adc
inc
add
lock
and
fs
mov
add
push
add
lock
add
add
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xlat
mov
cli
pop
add
cmp
movs
mov
inc
dec
mov
mov
sub
lahf
lods
pusha
fimul
ret
adc
mov
outs
push
daa
fst
(bad)
imul
xchg
outs
adc
cld
mov
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
js
push
add
ret
and
add
lock
add
sub
push
push
xchg
fsub
(bad)
lds
fwait
into
ret
jns
xor
sbb
aam
mov
or
shl
xchg
(bad)
sbb
das
jl
lahf
scas
test
into
mov
xchg
push
jae
lods
data16
xor
ffree
mov
popa
inc
mov
in
mov
xor
pop
cmp
movs
loope
bnd
mov
out
or
jle
loop
js
bswap
imul
stos
and
bound
or
add
out
imul
pusha
jmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
push
sbb
add
add
add
clc
and
push
inc
xor
push
xor
fdiv
mov
dec
ret
bts
pop
pop
mov
or
clc
lahf
movs
mov
int3
mov
inc
loopne
aam
aad
pop
mov
fadd
dec
xor
jb
push
mov
xor
mov
test
call
add
add
add
dec
icebp
mov
mov
cmp
sbb
(bad)
mov
ja
mov
mov
cli
les
aam
mov
mov
out
pop
enter
shl
fistp
inc
cmp
jp
(bad)
in
add
lock
(bad)
(bad)
dec
mov
cmp
add
sar
(bad)
(bad)
jg
cdq
inc
js
loopne
sub
adc
std
sub
sahf
adc
dec
adc
push
cmp
imul
fcmovbe
push
jl
inc
mov
xor
cmp
call
inc
push
add
popa
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
add
lock
add
lock
clc
add
mov
(bad)
(bad)
(bad)
inc
cdq
lea
cli
cdq
dec
ins
add
sar
(bad)
(bad)
jp
not
bound
dec
in
and
fidiv
and
aad
int
scas
outs
sbb
out
add
push
(bad)
cwde
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
or
pop
xor
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
cmp
sbb
popa
and
add
add
add
or
add
(bad)
(bad)
(bad)
dec
inc
inc
push
sar
(bad)
jmp
add
retf
push
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
ins
sub
dec
xor
add
cli
and
lods
jp
and
add
add
inc
push
lds
xor
(bad)
(bad)
call
sahf
add
lock
add
sbb
mov
add
add
sar
(bad)
jmp
jne
lock
add
inc
add
lock
add
lock
inc
mov
es
jl
scas
ins
repz
mov
xchg
cwde
sub
inc
mov
pop
xor
mov
add
scas
add
mov
cmp
add
(bad)
(bad)
(bad)
jmp
gs
lods
popa
outs
dec
adc
add
sar
(bad)
dec
add
rol
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lea
aam
scas
mov
push
and
fwait
jne
in
ret
mov
jne
sub
mov
xchg
aas
clc
int
adc
aaa
imul
mov
add
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
in
add
lock
jnp
and
mov
sbb
es
xor
sbb
mov
pop
mov
stos
inc
xchg
cmp
cmps
(bad)
jbe
(bad)
fnsave
sub
jb
imul
or
push
aas
sar
xchg
xchg
jne
push
sahf
ins
push
test
adc
jne
and
add
(bad)
(bad)
(bad)
call
xor
add
sar
(bad)
inc
(bad)
(bad)
dec
pop
pop
xor
(bad)
call
add
sub
add
add
add
dec
pop
cld
mov
lods
(bad)
xor
xor
jae
mov
sub
cmps
sub
or
imul
fs
iret
sbb
ror
jne
or
jns
fisub
or
sbb
xor
jb
and
cld
add
shr
mov
jo
jle
dec
jb
test
shl
mov
loopne
xchg
popf
lds
jmp
aam
mov
sub
out
je
cmps
add
add
add
dec
pop
push
adc
cwde
pop
or
sbb
xlat
in
lods
fistp
ins
hlt
test
inc
std
(bad)
adc
movs
push
mov
inc
push
popa
je
(bad)
or
das
sub
fwait
int
jb
cmp
adc
dec
dec
adc
xchg
xor
scas
adc
pop
mov
outs
outs
push
in
arpl
movs
pop
outs
test
out
lahf
add
add
add
add
and
sub
lock
in
push
retf
and
das
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
leave
jb
and
lock
add
and
lock
xchg
mov
xchg
pushf
aaa
jae
inc
mov
mov
das
mov
data16
out
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
sub
iret
cld
neg
cwde
xor
push
fs
jb
nop
mov
cwde
stos
add
sbb
mov
dec
(bad)
(bad)
fdivr
cmp
mov
adc
cmp
jb
cmp
jmp
xor
jmp
repnz
test
cmp
out
mov
cdq
cwde
mov
inc
mov
(bad)
or
add
data16
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
int3
movs
pop
enter
add
lock
add
outs
jp
test
sar
(bad)
call
add
lock
add
lock
add
and
add
pop
mov
lock
add
xor
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
int3
cdq
and
lock
add
mov
data16
sub
imul
std
dec
push
(bad)
in
getsec
or
jmp
mov
dec
push
loope
jp
push
fidiv
dec
add
add
and
jo
add
lock
or
call
adc
cmp
xchg
xor
lods
imul
xchg
inc
push
adc
in
push
popf
mov
mov
sbb
(bad)
pop
mov
and
out
jbe
dec
pop
cmp
div
shl
out
bound
mov
div
xor
mov
inc
ror
inc
sar
add
pop
mov
sub
fs
in
repnz
push
or
pop
xor
(bad)
ds
stc
stos
and
jae
aam
pop
cmp
lods
adc
mov
adc
fdivr
and
movs
jl
in
stos
mov
daa
inc
adc
sbb
cli
add
adc
or
mov
pop
xchg
xchg
movs
loop
loope
mov
call
mov
int
sub
pop
aam
mov
lods
aam
mov
sub
pusha
push
in
cmp
psubq
cs
js
out
pop
mov
dec
shl
cmp
popf
lods
inc
and
cli
test
push
pop
sbb
mov
and
out
cmp
add
sbb
add
dec
xor
in
sbb
jmp
mov
mov
dec
push
xlat
xchg
ins
inc
and
pop
inc
mov
scas
adc
adc
int3
cmp
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
dec
cdq
inc
add
add
add
out
adc
stos
mov
sbb
add
outs
push
les
scas
sub
xchg
push
popa
(bad)
inc
jo
cmp
dec
in
push
rcr
sti
pushf
cs
ss
mov
pop
cdq
fwait
inc
xchg
sbb
fisttp
(bad)
pop
cs
leave
dec
(bad)
stos
outs
adc
mov
inc
and
xor
pop
inc
push
test
jae
jno
ins
or
and
mov
adc
sub
(bad)
stc
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
add
ret
xor
add
cmc
cmp
add
add
in
add
add
add
inc
add
lock
add
or
enter
inc
sar
(bad)
dec
add
lock
add
lock
cdq
mov
ret
pop
xchg
inc
je
mov
lds
inc
pop
inc
into
mov
or
mov
push
add
xchg
mov
push
jmp
push
inc
jb
pop
dec
jne
sub
add
lds
es
ds
add
(bad)
and
add
add
add
add
add
add
iret
jne
add
add
lock
(bad)
(bad)
frstor
lock
add
lock
add
sub
add
pop
pop
add
or
add
mov
add
add
add
xor
or
dec
adc
sub
movs
xor
test
adc
jb
lahf
jo
popa
sbb
fiadd
test
push
mov
inc
cmp
lea
test
dec
jnp
repz
out
aaa
xchg
lea
ss
xchg
dec
jmp
repnz
sub
lea
movzx
inc
repnz
jp
jge
sub
fucomip
mov
adc
add
jae
clc
jg
jp
inc
in
cli
test
enter
pop
stos
jb
ret
adc
pop
xchg
test
mov
test
into
out
xchg
cmp
ins
mov
cwde
popf
adc
pop
fistp
test
or
adc
(bad)
in
mov
jl
lock
add
push
adc
lock
add
add
add
add
add
out
push
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
xor
int
and
add
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
dec
icebp
sbb
push
pop
jge
(bad)
(bad)
call
add
mov
(bad)
(bad)
inc
pusha
add
(bad)
movs
add
push
add
and
fstp
inc
scas
sub
adc
outs
div
cmc
mov
out
sbb
inc
add
lock
add
xchg
cmp
pop
cli
sar
(bad)
push
add
lock
add
lock
add
lock
add
dec
jns
test
(bad)
(bad)
jmp
add
lock
add
lock
ret
inc
add
lock
(bad)
(bad)
call
sbb
fidiv
(bad)
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
loope
sbb
add
lock
add
ins
inc
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
cmp
inc
out
cmp
mov
and
jae
rcl
dec
mov
dec
fwait
ret
jl
inc
sub
pop
inc
dec
sbb
xchg
mov
daa
in
ds
mov
jp
lock
add
and
add
inc
add
lock
add
or
(bad)
(bad)
push
mov
jge
faddp
fs
(bad)
inc
add
movs
fild
jmp
sahf
movs
dec
call
shl
jl
fcmovne
mov
pop
daa
mov
ret
sbb
inc
jno
test
jbe
push
stc
cmp
adc
jns
and
cdq
sub
retf
inc
dec
loop
dec
sar
or
nop
pop
add
add
add
or
(bad)
(bad)
push
lods
loop
(bad)
(bad)
inc
add
inc
mov
(bad)
inc
add
lock
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
adc
xchg
ret
adc
add
add
add
add
mov
push
add
push
add
adc
xchg
pushf
pop
test
(bad)
adc
mov
les
jmp
ins
push
std
movs
cli
sub
mov
out
fmul
cld
push
xor
lds
push
jmp
and
jp
sub
lea
or
out
xchg
mov
pop
or
imul
add
(bad)
not
imul
mov
mov
pop
or
test
pop
inc
ret
mov
retf
mov
dec
inc
inc
sbb
inc
push
mov
add
adc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fldcw
or
inc
add
lock
inc
add
mov
cmps
fsub
faddp
gs
retf
jp
movs
jmp
rcr
call
movs
test
iret
or
xor
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
jmp
repnz
sbb
lock
add
lock
add
or
es
(bad)
(bad)
call
mov
add
pop
add
lock
hlt
add
add
add
add
add
dec
sub
lock
lock
(bad)
(bad)
jmp
scas
rol
inc
add
add
(bad)
jmp
add
movs
ret
dec
jmp
push
mov
pop
repnz
xchg
or
ja
addps
add
cmc
cmc
mul
dec
nop
push
sub
mov
inc
push
and
push
not
or
jne
pop
mov
outs
arpl
add
sbb
mov
scas
cmp
pop
aam
sub
loopne
fmul
jae
xchg
arpl
fist
dec
iret
mov
mov
loopne
pop
mov
test
bound
nop
add
push
mov
cmc
push
pushf
hlt
add
repz
mov
jecxz
call
and
add
add
sar
(bad)
call
fwait
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
lods
aas
ud2
test
add
lock
dec
add
mov
lock
add
or
add
mov
add
and
lock
xchg
inc
inc
in
add
adc
push
icebp
sbb
pop
ins
and
out
and
cmp
xchg
test
retf
dec
jp
or
inc
jl
mov
(bad)
(bad)
(bad)
call
cdq
push
(bad)
hlt
xchg
adc
ror
lock
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
imul
sub
mov
lock
add
repnz
ja
and
push
rcr
enter
jae
pushf
push
fcom
mov
lods
in
mov
icebp
outs
cmp
retf
popa
cli
popa
lods
push
dec
add
xor
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
xchg
jmp
lock
es
lock
mov
es
jne
xchg
pop
ds
sahf
jo
retf
les
mov
mov
mov
dec
push
hlt
lock
push
or
int3
mov
jmp
lea
mov
(bad)
cmc
movs
jl
mov
hlt
fcomp
faddp
jb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
arpl
pusha
out
mov
les
sub
jge
movs
dec
into
popa
push
push
hlt
movs
or
(bad)
aas
rcl
dec
sahf
cmps
sub
pop
hlt
or
add
aaa
dec
inc
inc
sbb
mov
retf
jecxz
out
mov
(bad)
cmp
(bad)
ins
inc
jl
mov
xchg
xchg
mov
test
or
(bad)
mov
mov
rcl
sar
mov
push
loope
cmp
push
dec
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
lock
add
loope
xchg
cdq
(bad)
mov
iret
shr
ds
cmps
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
push
xor
dec
mov
add
lock
daa
add
add
add
dec
sbb
cmc
div
xor
mov
cmc
jmp
mov
pop
lea
or
fidiv
mov
inc
mov
jns
or
mov
cmps
lods
dec
dec
add
lock
add
or
add
(bad)
(bad)
(bad)
push
mov
aaa
dec
sar
(bad)
(bad)
cmp
add
nop
add
(bad)
inc
add
lock
stc
add
jnp
mov
xor
cmp
mov
loope
addr16
sbb
outs
(bad)
pop
mov
sbb
cmps
cld
lods
in
into
add
sub
inc
sar
xor
cs
loope
ss
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
or
fnsave
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
je
retf
mov
push
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
mov
push
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pushf
dec
xchg
xor
add
(bad)
(bad)
(bad)
dec
jno
sub
cmp
(bad)
(bad)
dec
add
lock
repnz
hlt
repnz
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
popf
jl
pusha
sahf
inc
test
lock
(bad)
push
add
and
jbe
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
or
mov
adc
add
mov
add
lock
add
or
(bad)
(bad)
jmp
jns
in
adc
mov
inc
add
lock
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
in
jbe
sar
ins
dec
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
inc
add
lock
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fwait
jo
cmp
add
es
add
pop
pop
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
icebp
in
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
cld
cmp
jl
adc
or
cmc
mov
or
jl
aam
stc
sub
and
inc
sbb
add
add
mov
add
push
add
and
pop
outs
test
or
rcr
test
adc
cmps
out
addr16
sbb
xchg
std
cld
(bad)
addr16
jmp
and
xor
imul
cmp
and
gs
jle
mov
ins
idiv
dec
in
out
mov
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
push
movs
and
sbb
iret
jns
xlat
or
repz
xchg
or
cmps
dec
lsl
mov
add
xchg
xor
loope
add
or
add
mov
add
lock
add
mov
add
add
add
aam
dec
cmp
dec
out
add
add
pop
xchg
fmul
ror
out
call
and
add
cmp
add
(bad)
(bad)
(bad)
inc
hlt
mov
in
add
add
(bad)
call
lods
cdq
push
enter
enter
or
stc
repnz
jno
daa
pop
dec
pop
call
mov
retf
xchg
mov
(bad)
jle
cmp
movs
ret
jge
ret
loope
(bad)
sahf
gs
imul
imul
stos
pop
scas
fs
push
dec
pop
jbe
sub
(bad)
jmp
xchg
cwde
inc
mov
pop
add
loopne
jle
mov
enter
jmp
push
rol
lock
add
add
add
loopne
add
push
ds
in
add
lock
add
add
add
xchg
jne
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
rol
addr16
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
fdivr
jne
mov
xchg
add
lock
add
push
add
lock
(bad)
(bad)
push
add
inc
sar
(bad)
call
add
pop
mov
(bad)
call
test
adc
mov
xchg
cld
mov
clc
xchg
mov
cmp
xchg
test
fcmovbe
jecxz
leave
pop
mov
mov
dec
adc
or
mov
and
aaa
and
idiv
and
adc
mov
mov
cmps
imul
lock
xchg
out
mov
sub
mov
sub
call
jecxz
push
cs
sbb
in
pop
sub
inc
jae
inc
scas
mov
ds
sbb
in
sti
rcl
in
out
out
xchg
mov
retf
sub
icebp
out
cld
clc
(bad)
movs
ins
sbb
jns
cmp
push
xchg
mov
sar
xor
mov
jl
xchg
mov
pusha
test
cmps
js
loope
loop
and
test
or
mov
and
add
cs
pop
push
iret
mov
adc
push
add
inc
gs
sub
mov
inc
ret
daa
mov
ss
push
add
fdiv
retf
jge
push
daa
lods
xchg
sub
push
or
sbb
push
jl
cwde
retf
je
test
call
cmp
data16
out
outs
stc
clc
sbb
add
jnp
ins
neg
lock
lock
add
xchg
outs
push
mov
mov
jmp
addr16
mov
add
inc
cmp
in
ins
sbb
test
inc
adc
mov
cmp
dec
arpl
xchg
dec
sub
mov
rol
add
xor
add
(bad)
(bad)
(bad)
dec
mov
es
gs
sar
(bad)
push
add
adc
add
lock
outs
stos
fcomp
mov
ins
out
movs
and
mov
stos
cmp
xchg
and
mov
xchg
adc
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
lods
dec
mov
ja
mov
lock
jb
lods
xchg
cmp
call
cwde
xor
add
int3
pop
ins
sub
fadd
int
outs
pop
mov
or
cwde
jne
retf
jl
aas
test
xor
mov
add
(bad)
push
xchg
or
inc
fld
jp
sub
pusha
mov
and
dec
mov
xchg
(bad)
out
mov
imul
adc
jl
pusha
rcr
lods
xchg
lods
or
mov
pop
jb
lds
fnstsw
into
int
outs
adc
xchg
xor
cli
jp
push
mov
jmp
xchg
add
jo
addr16
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
jmp
enter
sbb
ins
pop
mov
cmps
ss
add
push
fs
jne
mov
loope
xor
xchg
movs
lahf
push
ds
push
sar
btc
add
lock
add
arpl
push
add
add
sar
(bad)
dec
test
lock
add
lock
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
push
jmp
add
into
imul
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
jnp
add
lock
add
push
add
lock
(bad)
(bad)
jmp
cmp
or
(bad)
(bad)
inc
add
xchg
sahf
add
(bad)
mov
add
lock
add
add
add
cmp
lock
sub
add
add
add
jp
add
aam
add
xchg
add
cmc
outs
jl
push
mov
add
movs
push
loop
jl
push
fisub
cmps
cdq
jo
lock
and
push
out
in
mov
inc
jmp
mov
clc
sti
add
add
add
rol
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pusha
idiv
add
lock
imul
add
lock
(bad)
(bad)
call
popa
sbb
lock
(bad)
(bad)
cmp
add
add
add
or
(bad)
(bad)
jmp
lds
imul
(bad)
(bad)
cmp
add
xchg
pop
add
(bad)
mov
jmp
sub
sub
ficomp
out
or
retf
inc
sbb
loope
xlat
inc
retf
out
jae
xchg
mov
pop
xchg
inc
xor
cmc
mov
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
pusha
xchg
adc
mov
loop
add
add
add
add
add
add
add
xchg
imul
add
add
icebp
sbb
lock
add
pop
add
lock
(bad)
(bad)
push
mov
inc
(bad)
fstp
(bad)
(bad)
call
ror
div
loope
xor
sbb
pop
movs
loopne
pop
rol
(bad)
xchg
sahf
push
enter
mov
or
dec
jbe
std
sbb
lock
add
aaa
add
lock
add
arpl
push
adc
out
fwait
sar
(bad)
inc
add
lock
add
lock
jb
sbb
mov
pop
sbb
push
fisub
sbb
mov
push
clc
sub
xor
push
outs
cmp
adc
fs
cmps
lods
mov
clc
int
imul
or
add
add
add
cwde
dec
add
push
add
and
add
lock
add
lock
add
or
add
(bad)
(bad)
(bad)
call
jg
sub
fist
adc
(bad)
(bad)
(bad)
cmp
jbe
lock
(bad)
(bad)
inc
cmp
loop
movs
push
(bad)
(bad)
in
in
ss
sub
inc
out
push
test
mov
sbb
repnz
sbb
xchg
and
and
add
nop
aaa
loopne
stc
pop
pop
aaa
push
bound
(bad)
and
add
(bad)
(bad)
(bad)
dec
popa
shr
(bad)
(bad)
(bad)
std
fwait
add
cmp
add
jge
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
push
rdmsr
jmp
test
add
(bad)
(bad)
(bad)
call
repz
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
popf
(bad)
or
add
lock
ja
lock
cmp
xor
aam
fidivr
lahf
enter
push
pushf
jno
loopne
xor
in
jge
outs
jg
jle
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fnstsw
out
dec
push
add
lock
lock
lock
add
jg
int
sbb
sub
sti
adc
mov
mov
popa
xchg
inc
gs
out
popa
push
rcl
mov
and
pop
xchg
push
(bad)
pop
mov
push
xchg
dec
ret
outs
daa
and
pop
loopne
rol
pushf
inc
pop
in
xchg
imul
mov
mov
pop
ins
(bad)
push
nop
int3
inc
pusha
call
sti
xchg
fstp
cmp
mov
ret
or
pop
mov
out
cmp
popa
add
fld
cmp
or
push
sub
push
stos
shl
mov
jne
lock
pop
adc
add
lock
(bad)
(bad)
push
push
dec
js
lock
(bad)
dec
add
lock
push
add
dec
cli
add
add
add
add
add
or
add
or
add
cmp
inc
js
or
mov
cwde
mov
push
or
out
cmp
cdq
stc
loopne
sub
jo
push
mov
loopne
dec
int3
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
(bad)
dec
sub
clc
xor
add
jo
add
and
add
(bad)
(bad)
(bad)
jmp
ds
sub
(bad)
(bad)
jmp
ins
cmovne
add
add
xor
add
(bad)
(bad)
(bad)
call
addr16
lock
(bad)
jmp
outs
add
dec
retf
push
add
and
add
add
add
add
add
icebp
adc
adc
test
mov
sar
(bad)
jmp
lods
add
lock
add
lock
add
lock
add
add
add
sbb
mov
(bad)
sar
(bad)
call
add
lock
das
push
retf
xor
movzx
aam
sahf
xchg
cmp
call
(bad)
jb
test
jg
pop
mov
dec
std
fwait
add
xor
inc
and
push
and
(bad)
not
sub
test
outs
pop
add
add
pop
jmp
and
add
lock
push
add
cmp
push
cld
ss
add
mov
scas
inc
aad
inc
mov
fild
pop
sbb
clc
test
add
lock
add
adc
pop
add
add
add
xlat
push
lea
sbb
cmps
les
aad
cmp
and
and
jle
sbb
dec
cmp
les
in
nop
ds
xor
loope
(bad)
sub
lods
call
jle
fisub
mov
add
add
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
jb
cmp
add
lock
add
aaa
sbb
adc
or
pushw
jb
and
mov
add
push
(bad)
sbb
in
loope
inc
pop
sbb
mov
add
cmp
add
(bad)
(bad)
(bad)
(bad)
cmp
sbb
jns
lock
(bad)
(bad)
mov
fldcw
lea
and
sti
push
sub
outs
mov
sub
ins
test
dec
xchg
inc
cld
or
mov
mov
bound
push
stc
and
sbb
pop
ins
mov
dec
dec
dec
(bad)
iret
lds
fisttp
or
test
mov
or
pop
jmp
ja
pop
jmp
sbb
add
or
mov
dec
leave
mov
add
mov
dec
mov
leave
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
push
mov
xor
ret
pop
jmp
add
inc
imul
mov
inc
cmp
out
xor
xchg
into
push
mov
std
xor
test
addr16
pop
sbb
and
pop
fmul
btr
int
push
test
shl
cmc
cli
fmul
jge
mov
add
add
add
enter
dec
push
cmp
inc
iret
bound
pcmpeqw
shr
pop
push
out
idiv
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
shl
and
sub
mov
cmps
pop
(bad)
xchg
pop
dec
out
pop
or
mov
dec
loop
jne
movs
jae
mov
cwde
imul
mov
jg
sbb
aas
jge
dec
cmc
push
lahf
in
scas
push
data16
push
or
cmps
xor
push
ror
sbb
test
and
popf
bound
adc
push
xchg
xchg
and
cli
mov
jecxz
inc
xchg
jae
add
or
add
add
(bad)
(bad)
(bad)
(bad)
call
adc
add
sar
(bad)
jmp
add
lock
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
cmp
add
or
add
(bad)
(bad)
(bad)
call
inc
jle
adc
sar
(bad)
dec
and
push
ret
cmc
adc
jecxz
xchg
cmc
pop
in
or
jns
jo
shr
repnz
mov
adc
loopne
push
mov
mov
cmp
in
xchg
mov
in
cs
jb
jle
fdiv
shr
cmp
loopne
jle
cwde
sbb
cmc
xchg
js
repz
dec
xchg
jmp
adc
push
test
push
mov
jae
add
xor
mov
imul
push
mov
and
scas
jnp
adc
movs
jl
mov
cli
xor
sti
mov
std
pop
adc
add
sub
mov
pop
jo
xchg
lahf
ja
push
pop
adc
cmp
iret
xchg
retf
cmp
ins
dec
(bad)
aaa
loop
ficom
popa
lods
lods
(bad)
xlat
dec
jbe
shl
sub
pop
xor
mov
int
dec
mov
mov
ss
jp
lahf
xor
in
add
dec
inc
xchg
jbe
outs
retf
icebp
adc
and
leave
sub
cmc
dec
dec
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jbe
imul
add
or
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
pushf
loope
lods
adc
lock
add
xor
or
outs
xor
cmp
imul
xor
out
jmp
xchg
lds
fbstp
retf
add
add
lock
add
lock
add
xchg
add
(bad)
jp
inc
sub
into
jecxz
jns
sbb
push
hlt
(bad)
shl
inc
pop
lock
sbb
xchg
hlt
cmps
stos
ins
jns
xchg
sar
mov
add
lock
pop
rep
cmps
out
pop
push
mov
(bad)
fimul
mov
scas
cmp
jb
cdq
xor
dec
popf
mov
xchg
and
push
(bad)
(bad)
idiv
push
pop
retf
outs
jne
xchg
cdq
pop
lods
pop
adc
lahf
fidivr
inc
pop
cs
(bad)
sub
(bad)
adc
add
add
sar
(bad)
call
add
inc
add
lock
add
lock
add
(bad)
(bad)
(bad)
dec
(bad)
cmp
lock
(bad)
(bad)
call
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
adc
mov
(bad)
(bad)
jmp
pop
add
dec
mov
call
pop
push
mov
ins
popf
nop
aas
xor
xor
int
add
mov
add
jecxz
push
and
or
gs
push
pop
and
scas
sub
pop
cmp
mov
pop
leave
ins
sti
and
mov
fnstsw
mov
push
inc
repnz
lods
pop
pop
mov
pop
inc
outs
mov
idiv
jecxz
stos
enter
xor
add
mov
jle
jbe
dec
int3
in
xchg
xor
rep
ret
jo
lea
push
jb
in
cmp
in
neg
ss
inc
movs
inc
jno
fcom
mov
pop
adc
aad
ret
mov
rcr
or
add
jmp
repz
es
push
xchg
and
pop
outs
xchg
mov
cld
mov
xor
das
mov
jp
mov
fs
xor
out
jmp
retf
ds
cmp
sahf
inc
cmp
push
cmp
cld
xchg
icebp
cmp
out
aad
jmp
test
stos
inc
shl
mov
adc
pop
sbb
jb
jmp
sub
pop
jecxz
arpl
inc
mov
ins
fdivr
and
mov
mov
cmp
or
mov
bound
popa
das
jmp
ret
inc
xchg
es
imul
and
jno
xor
(bad)
mov
sbb
sahf
xor
es
cld
add
xor
std
or
lods
xlat
mov
cld
ficom
rcr
mov
ja
addr16
(bad)
fisubr
add
xlat
icebp
inc
fcmovnb
neg
mov
push
push
hlt
push
imul
cmp
inc
pop
leave
mov
sub
mov
popf
mov
je
dec
dec
and
addr16
shl
arpl
ret
rcl
sar
fsub
loopne
cmp
leave
pop
aam
inc
push
or
push
aas
mov
mov
inc
stos
vpminub
mov
xchg
or
inc
mov
pushf
ret
pop
mov
xchg
pop
jae
push
cs
inc
xor
mov
arpl
clc
cld
das
mov
es
adc
mov
hlt
test
retf
xchg
je
les
pop
shr
rcl
cdq
dec
loop
fcomp
push
pop
cmps
mov
retf
arpl
push
gs
add
ret
push
stos
bound
dec
add
sub
add
jp
add
or
add
jp
add
xor
inc
mov
mov
test
adc
xlat
pop
jns
dec
xchg
jae
sub
xor
int
bnd
fild
aaa
mov
out
repz
inc
add
dec
mov
cmp
gs
popf
pop
pmaxsw
outs
mov
fmul
push
pop
mov
mov
pop
push
jne
es
outs
mov
jle
or
and
sbb
add
cmp
ffree
adc
mov
mov
pop
(bad)
out
jno
inc
and
dec
imul
fsub
sti
xor
add
add
cmps
push
add
lock
push
add
push
push
add
add
add
and
add
(bad)
(bad)
(bad)
jmp
jno
stos
mov
add
sar
(bad)
dec
mov
leave
jmp
fisttp
or
pop
cli
xor
mov
mov
out
imul
in
loop
fld
push
dec
cwde
loope
stos
mov
add
lock
add
add
add
test
add
add
add
cmps
xchg
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
dec
xor
inc
sbb
in
or
mov
cmps
icebp
loop
hlt
sub
(bad)
cwde
sbb
rol
or
inc
jl
addr16
arpl
mov
dec
into
or
mov
idiv
sub
pushf
and
test
pop
pop
cmc
mul
push
jb
mov
lock
add
push
add
lock
(bad)
(bad)
call
loope
push
jnp
or
xchg
add
lock
jecxz
lock
(bad)
(bad)
(bad)
aas
ret
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
dec
and
xor
lock
lock
(bad)
(bad)
push
sub
cmp
(bad)
inc
add
(bad)
(bad)
(bad)
push
inc
sti
in
push
pop
mov
add
sar
(bad)
inc
add
lock
add
cmp
add
and
add
(bad)
(bad)
(bad)
jmp
mov
pop
mov
(bad)
dec
jl
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lods
movs
xchg
bound
inc
shld
sub
das
push
pop
sub
pop
neg
inc
sub
mov
hlt
dec
pop
pop
(bad)
bound
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
mov
inc
test
xor
add
lea
dec
push
addr16
retf
fist
mov
shr
dec
movs
cmp
movs
mov
out
jmp
test
ins
mov
sahf
iret
mov
push
out
cmps
sbb
fsubr
add
loop
outs
add
or
add
sub
add
(bad)
(bad)
(bad)
jmp
arpl
mov
lock
(bad)
call
push
sub
sti
cld
jno
or
fsincos
push
(bad)
adc
xor
int
fdivr
adc
std
mov
and
xor
sub
jle
and
add
add
add
add
add
add
test
mov
(bad)
inc
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
data16
add
cld
cdq
add
loopne
add
add
add
mov
add
lock
add
mov
add
lock
call
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
movs
dec
and
mov
add
sub
add
push
add
lock
add
test
add
xor
add
(bad)
(bad)
(bad)
jmp
mov
ins
mov
add
sar
(bad)
(bad)
in
ins
add
add
add
or
add
out
add
mov
add
repnz
mov
push
stc
inc
loope
int3
or
mov
retf
lea
mov
push
pop
inc
out
add
jmp
jns
inc
sbb
mov
ins
fnstcw
cs
lods
and
or
ss
jle
pop
pop
repnz
dec
mov
cmp
pop
xchg
pop
lods
and
mov
and
xchg
xor
push
add
add
add
aaa
lods
add
push
add
adc
lods
add
dec
out
inc
inc
inc
lds
sbb
add
add
add
lods
ja
pop
mov
bound
sbb
je
les
jne
add
in
inc
out
das
xor
xlat
imul
lods
sbb
push
sbb
add
xchg
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ret
mov
add
add
ins
pop
add
js
add
cmp
(bad)
(bad)
(bad)
(bad)
stc
xor
push
mov
(bad)
push
jne
lock
hlt
mov
lea
and
xchg
sub
mov
icebp
jbe
inc
mov
retf
push
cmp
add
(bad)
(bad)
(bad)
push
mov
test
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
cld
rcl
loope
in
add
lock
mov
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
fiadd
(bad)
(bad)
call
add
lock
ja
lock
(bad)
(bad)
inc
add
lock
mov
rcr
jmp
add
lock
cmp
arpl
into
mov
add
sbb
mov
xchg
test
or
mul
jp
loop
nop
mov
jge
repz
dec
(bad)
faddp
mov
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
rol
mov
fwait
ds
cmp
add
xchg
or
ins
dec
nop
jbe
test
and
mov
mov
lods
cmp
lock
add
cmp
add
(bad)
(bad)
(bad)
(bad)
jmp
cli
movs
fadd
push
lock
(bad)
jmp
pop
push
and
out
inc
push
xor
sahf
inc
pushf
jg
sbb
out
fild
jbe
pop
jl
cmp
mov
add
lock
add
jb
lds
f2xm1
loop
inc
push
loopne
xor
xor
fdiv
inc
add
adc
mov
jnp
aaa
inc
(bad)
fcom
imul
cdq
rcr
or
comiss
pop
xor
sub
xchg
or
add
lock
xlat
ror
mov
repz
outs
sbb
cdq
fsubr
cmc
mov
call
add
cli
pop
xchg
sub
iret
and
imul
xchg
push
mov
test
mov
scas
sub
outs
mov
bound
add
lock
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
enter
pop
js
test
and
imul
movs
sub
xor
pushf
into
inc
inc
xchg
les
aas
cdq
xor
fs
xchg
mov
arpl
jg
ja
(bad)
push
lds
jno
xchg
xchg
inc
ret
mov
adc
fwait
xchg
nop
xor
push
xchg
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
lock
movs
add
push
mov
jnp
push
jecxz
sbb
push
dec
rcl
loop
sbb
mov
inc
mov
mov
scas
jecxz
and
fwait
xchg
ja
loopne
mov
scas
jmp
test
(bad)
loop
jae
xchg
fstp
into
hlt
dec
lahf
sub
rcl
into
fs
jbe
in
mov
imul
ins
add
sub
mov
inc
pop
pop
push
dec
push
jmp
jecxz
aaa
enter
stos
and
paddd
mov
jne
ja
push
call
jo
lock
inc
pushf
sbb
and
push
add
lock
add
lock
int3
xor
js
push
icebp
out
sahf
ins
js
sbb
loop
clc
aad
icebp
xchg
cmp
pusha
fimul
mov
cmp
out
sub
or
inc
mov
or
clc
rcl
adc
jmp
fist
add
add
sbb
xor
fstp
push
add
pop
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
aaa
add
lock
add
std
in
jl
push
cmp
push
sub
je
sar
sbb
push
(bad)
cs
bound
(bad)
sti
xchg
es
dec
inc
fild
les
ret
int
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
jle
fwait
fs
inc
add
lock
test
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
add
xchg
test
lock
daa
add
sbb
add
shr
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rcl
pop
add
add
add
add
add
iret
popa
inc
loope
cmp
mov
sar
(bad)
call
add
lock
add
lock
add
lock
movs
stos
fwait
jmp
push
jl
retf
fisttp
add
add
add
iret
xchg
stos
cli
repz
cmp
fimul
mov
sub
cmp
pop
push
out
sub
call
hlt
push
repnz
mov
jmp
aad
push
(bad)
neg
jae
inc
add
add
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
es
pop
and
add
fwait
stos
add
or
add
(bad)
(bad)
(bad)
inc
stc
aaa
cmp
jg
lock
(bad)
(bad)
inc
test
ret
sub
push
inc
ficomp
jbe
clc
adc
cli
xchg
inc
bound
mov
mov
lds
outs
int3
jecxz
mov
cmc
pop
inc
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fwait
jo
pop
add
lock
(bad)
(bad)
jmp
test
lock
(bad)
jmp
cmp
or
add
add
add
inc
mov
lock
add
lock
xor
(bad)
jb
out
loopne
lea
jne
jnp
jae
ret
bound
out
in
fistp
jmp
jl
call
add
(bad)
(bad)
(bad)
inc
push
mov
(bad)
(bad)
(bad)
(bad)
lock
sub
lock
add
and
add
lock
leave
add
fiadd
or
add
test
add
add
add
arpl
pop
(bad)
jo
dec
xchg
popf
cmps
mov
movs
or
fst
sahf
mov
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
mov
retf
add
or
test
jae
out
inc
outs
cmp
push
outs
cli
mov
xchg
inc
xchg
mov
repz
leave
inc
sahf
retf
test
je
push
enter
(bad)
push
mov
out
fistp
sti
sbb
jb
mov
retf
pop
daa
inc
cmp
fist
push
rcl
loope
sbb
ret
cmc
xchg
adc
adc
add
lock
cmp
inc
mov
jo
loope
imul
std
(bad)
jb
retf
cmps
icebp
mov
popa
retf
inc
loopne
mov
xlat
daa
jno
mov
inc
mov
out
and
push
jecxz
mov
jmp
test
jnp
movs
loop
sbb
push
xchg
shl
xchg
in
add
lock
add
dec
lds
lock
add
fisubr
add
dec
add
lock
(bad)
(bad)
inc
test
int
mov
lock
(bad)
jmp
add
add
add
push
stc
add
sar
(bad)
inc
add
lock
add
lock
add
lock
(bad)
(bad)
jmp
in
cmps
adc
add
sar
(bad)
call
add
or
add
adc
add
add
add
add
add
add
add
rol
and
pushf
add
jmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sbb
lock
add
lock
push
popa
cdq
cmp
jp
imul
add
push
add
and
add
or
push
sub
aad
(bad)
lfs
push
(bad)
and
in
push
lock
push
stc
mov
xor
repnz
cmp
cmp
mov
add
push
push
xchg
sub
cdq
(bad)
xor
cmp
(bad)
mov
sahf
or
mov
dec
mov
popa
cmps
or
add
xchg
pop
cmps
repz
jne
pop
addr16
xchg
imul
mov
cmp
movs
nop
int
jecxz
int3
mov
mov
loope
sub
dec
xor
and
xor
fdiv
mov
retf
fnstcw
sbb
jp
jmp
pop
es
jmp
push
mov
cmc
adc
pop
(bad)
int3
fwait
adc
shr
data16
cmp
cmc
ficomp
ins
outs
int
jno
and
mov
fwait
inc
and
jmp
inc
sub
mov
(bad)
jae
add
int3
pusha
fild
hlt
pop
pop
inc
and
scas
push
cmp
cmp
movs
std
fcomp
scas
ss
mov
xchg
sub
loop
sbb
mov
imul
and
pusha
jl
ror
in
int
out
push
test
xchg
adc
jbe
loopne
ds
or
push
xchg
sub
inc
in
pop
lods
popa
jp
xchg
xchg
repnz
std
or
nop
stc
add
and
or
mov
cmp
pop
sub
inc
ss
xor
fstp
or
into
dec
cmp
test
icebp
dec
mov
scas
xor
mov
sti
inc
push
inc
iret
stc
int
cmps
jge
jb
mov
pusha
dec
pusha
add
lahf
jmp
xchg
loop
hlt
fldenv
(bad)
loopne
add
cmp
aad
lods
sbb
(bad)
(bad)
(bad)
(bad)
jnp
sub
andnps
cmp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
shl
add
lock
mov
stos
sbb
lock
call
mov
ja
jle
ja
outs
xor
popf
and
retf
loopne
push
fld
aas
dec
out
(bad)
jl
jmp
fadd
jmp
rol
pop
rcr
cdq
add
add
xlat
push
add
add
lock
add
cmp
add
and
lea
lock
add
add
add
push
or
and
ds
hlt
jg
stc
xchg
sub
lods
dec
or
jmp
mov
shl
sahf
mov
add
lock
or
push
and
fs
cmp
inc
test
nop
xlat
sbb
add
push
mov
leave
popa
iret
jb
fst
or
test
and
xor
xor
je
test
mov
js
pop
jne
mov
adc
and
or
push
(bad)
jmp
scas
sub
popa
fild
push
push
inc
xor
pop
cmp
adc
cs
pop
xor
inc
and
mov
int
xchg
mov
int
mov
cmp
cmps
lds
cmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cwde
mov
jo
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
push
mov
repnz
(bad)
(bad)
inc
sbb
mov
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
jge
movs
xchg
aam
add
lock
add
(bad)
(bad)
(bad)
dec
jnp
jns
add
add
(bad)
(bad)
out
dec
add
fs
lea
sbb
jae
nop
ret
jmp
rol
rcr
sub
pop
jge
inc
and
dec
cmp
lea
push
inc
lods
cmp
rcl
cmp
ins
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
imul
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
bnd
and
add
dec
mov
add
sub
std
add
xchg
cwde
mov
cs
mov
add
add
sar
(bad)
(bad)
jle
push
lock
add
pop
add
lock
add
sub
cmp
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
xor
ret
adc
test
or
ss
int
push
out
add
cmp
out
cmp
out
cmp
add
(bad)
(bad)
(bad)
jmp
sahf
sbb
rol
(bad)
(bad)
dec
add
lock
(bad)
(bad)
jmp
jmp
aam
rol
(bad)
(bad)
call
sub
test
enter
div
imul
loopne
sbb
mov
push
icebp
and
ja
or
add
and
mov
ret
pop
jge
dec
in
push
es
add
mov
cmp
jg
mov
movs
mov
in
mov
and
and
jno
pop
push
adc
rol
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
and
rcl
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
sub
add
lock
ret
loopne
fdivr
adc
test
call
fistp
jmp
and
adc
lock
scas
cmp
test
jb
xchg
ss
dec
call
lds
add
shl
or
add
icebp
push
out
loope
repnz
fs
push
push
popa
out
rol
out
in
pushf
loopne
xor
ret
mov
add
fisttp
pusha
sub
leave
ffree
add
jmp
or
sub
fcom
ret
aas
pop
inc
pop
pop
arpl
cmps
push
icebp
jne
inc
mov
xor
dec
int
ret
adc
xchg
bswap
mov
cmps
mov
leave
mov
inc
les
repnz
mov
(bad)
fsub
stos
shl
mov
mov
push
loope
inc
fcom
cmps
add
or
add
cmps
add
push
jg
retf
mov
cmp
js
sbb
pop
ins
push
(bad)
jne
inc
shr
aas
and
std
je
sub
idiv
adc
jnp
cmps
xchg
test
push
fst
aas
cmc
push
les
mov
dec
sub
add
(bad)
(bad)
(bad)
call
sub
jo
dec
jmp
les
sar
(bad)
inc
pop
cmp
dec
gs
loop
mov
call
jp
cdq
retf
fadd
adc
xor
push
pushf
xor
and
aaa
fwait
sbb
sar
jnp
lds
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
sahf
cmp
(bad)
fbld
and
mov
cwde
(bad)
aad
or
mov
dec
push
mov
into
pop
ss
and
sub
push
fiadd
jmp
pusha
sbb
mov
cmc
sbb
pop
sub
imul
and
or
jle
add
movs
pop
jb
sar
adc
lahf
std
jmp
xor
add
lock
(bad)
(bad)
(bad)
jmp
jbe
js
mov
cmp
add
cmp
int
inc
mov
js
push
jge
in
sbb
movs
lods
loopne
xor
retf
mov
push
sub
shr
and
sti
jb
shl
enter
shr
aam
cmp
pop
lods
mov
cld
xor
adc
xchg
aas
mov
jae
out
push
xchg
sub
outs
add
add
in
add
add
add
outs
and
lock
add
jae
xor
shl
jns
test
mov
push
lods
mov
xchg
aas
test
jnp
and
or
pop
out
fs
add
cmp
add
inc
add
lock
add
push
add
lock
(bad)
(bad)
jmp
cmps
xor
sar
(bad)
inc
add
lock
add
inc
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
(bad)
mov
add
add
cmp
add
pop
cmps
add
add
add
mov
in
add
test
sub
or
pop
cmp
nop
push
aaa
and
add
out
sbb
inc
pop
rol
dec
stos
mov
pop
fist
or
jns
dec
inc
aas
shl
adc
bound
mov
mov
ds
or
je
jge
mov
lock
add
lock
lock
add
sub
lock
icebp
ret
enter
or
addr16
inc
jns
jb
pop
xchg
and
mov
ins
(bad)
sbb
out
xor
(bad)
(bad)
dec
ja
dec
popa
jns
inc
arpl
add
sar
(bad)
jmp
jmp
popa
in
or
xor
outs
dec
clc
or
jo
push
aaa
int
jmp
in
sub
loopne
inc
sub
xchg
ds
sub
add
lock
(bad)
dec
add
lock
add
lock
add
lock
push
jmp
repz
push
cmp
sti
fisttp
cmps
cmp
xchg
mov
push
ror
dec
stos
es
jecxz
mov
pop
mov
add
in
xor
addr16
push
arpl
mov
cs
dec
pop
out
out
lds
enter
sub
sub
add
outs
adc
add
jle
jmp
in
sub
movs
sbb
fsubr
jecxz
jns
sbb
(bad)
fwait
push
sbb
add
lock
mov
xor
pushf
push
mov
push
mov
pushf
pop
xlat
ds
ret
es
in
test
inc
sub
cld
sahf
ret
lock
loopne
adc
lock
add
add
add
add
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
addr16
push
add
retf
xchg
dec
lea
ja
lahf
mov
ret
dec
or
(bad)
std
jne
xchg
pop
adc
fldcw
and
test
pop
sbb
js
in
test
add
lock
(bad)
(bad)
(bad)
dec
adc
inc
xchg
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
add
dec
add
add
push
mov
add
add
cmp
add
(bad)
(bad)
(bad)
push
into
cs
iret
add
sar
(bad)
call
lock
add
inc
fwait
push
mov
cdq
or
inc
mov
push
pop
jbe
pop
loop
add
test
and
addr16
mov
push
add
retf
adc
mov
rol
pop
imul
cli
mov
jne
ds
pop
test
dec
jae
outs
(bad)
in
call
call
popf
xchg
xchg
ins
in
das
jnp
fst
pop
das
mov
jecxz
pushf
fnstcw
adc
fmul
aam
sar
test
clc
ret
xchg
shl
xchg
aad
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lds
cwde
fiadd
cld
daa
push
dec
sar
lock
(bad)
(bad)
jmp
push
jo
push
mov
lea
(bad)
add
add
(bad)
call
mov
shr
jp
cmp
jno
xchg
xor
mov
cmp
pusha
add
sbb
shl
xchg
dec
add
fdiv
mov
mov
and
xchg
mov
dec
out
popf
xchg
xchg
fild
jmp
in
xor
sbb
repz
jns
retf
cmps
push
adc
(bad)
cld
cdq
outs
jmp
or
inc
mov
inc
sub
sbb
pop
jbe
stos
mov
leave
jle
(bad)
in
xchg
pop
push
add
add
add
or
add
inc
pop
add
add
add
and
add
(bad)
(bad)
(bad)
call
dec
push
lock
(bad)
jmp
add
lock
dec
xchg
add
sbb
xchg
sbb
movs
psrlw
jp
repnz
mov
retf
lahf
or
sbb
retf
std
cld
sbb
ins
fbstp
outs
dec
out
fld
fsubr
jge
mov
inc
xchg
sub
pop
out
leave
jge
outs
mov
(bad)
fcom
xchg
out
(bad)
inc
cli
ret
sub
xchg
enter
fiadd
cdq
xor
and
sbb
imul
mov
mov
stos
retf
dec
dec
test
pop
imul
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
lock
shr
xchg
loop
dec
xor
shl
retf
xchg
push
or
push
sub
add
fwait
cli
(bad)
mov
in
and
cli
push
xor
add
(bad)
(bad)
(bad)
(bad)
jge
push
in
repnz
call
(bad)
(bad)
dec
out
add
icebp
sti
dec
inc
rol
pop
mov
jb
test
or
je
and
bound
sub
jmp
xor
ret
je
jmp
adc
and
inc
call
fsub
aam
pop
outs
sub
adc
dec
cmp
fcomp
pop
jp
aaa
push
sahf
ror
mov
in
sahf
mov
jo
cmp
cmp
pop
outs
and
push
adc
popa
sbb
mov
add
imul
pop
bound
xor
(bad)
push
pop
into
call
in
cmp
jp
add
dec
jnp
sbb
mov
sub
xor
pop
adc
out
test
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
mov
cmp
add
adc
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
jmp
add
add
mov
push
pop
xor
jg
add
mov
mov
ins
sbb
adc
cmp
shr
(bad)
stos
adc
jns
xchg
fiadd
mov
ins
mov
mov
mov
ret
(bad)
dec
pop
adc
mov
aad
(bad)
xor
repnz
push
xchg
sub
push
loopne
adc
outs
xor
loop
sub
popa
and
icebp
jecxz
scas
mov
mov
lods
mov
dec
xor
fs
adc
inc
loope
movs
cmp
pop
or
fdivr
and
loop
rcr
and
(bad)
adc
call
add
ss
xor
dec
sar
add
sub
add
and
fistp
jl
shl
pop
dec
popa
sar
add
clc
lea
mov
in
test
pop
mov
in
js
std
mov
push
cmps
xor
jge
cmp
add
add
or
add
(bad)
(bad)
(bad)
call
mov
(bad)
sar
(bad)
jmp
add
lock
fiadd
jmp
mov
icebp
ret
jo
fcmovnu
or
xchg
sbb
jge
jb
aaa
fsubr
sti
into
ret
sbb
push
push
mov
stc
sub
xchg
loop
(bad)
hlt
jb
iret
push
pop
jle
dec
dec
lods
aas
dec
cmp
out
jle
or
mov
(bad)
in
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
lock
add
add
add
dec
add
lock
(bad)
(bad)
inc
les
add
xchg
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
add
lock
fadd
sbb
sbb
call
ror
jp
outs
sub
ret
pop
ds
addr16
sub
inc
jno
movs
rcl
je
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
add
lock
add
arpl
jl
(bad)
push
jmp
enter
loopne
arpl
mov
std
arpl
sti
pop
and
jmp
or
inc
js
sbb
mov
xchg
popa
movs
fbstp
push
xchg
push
out
pop
push
pop
fsub
fmul
sub
xchg
pusha
cmp
ins
pop
xor
adc
pop
(bad)
cmp
dec
punpckhdq
push
js
cmp
lods
imul
push
adc
sbb
pop
movs
jnp
xchg
nop
in
ret
lods
ds
mov
jno
fldcw
and
mov
ret
and
add
xchg
fst
sub
pop
ins
aad
ins
(bad)
sbb
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
xor
add
mov
add
cli
inc
out
push
scas
sub
vpavgb
loop
mov
loope
retf
push
xor
movs
aaa
dec
test
arpl
inc
adc
mov
cmps
pop
adc
(bad)
int
nop
adc
iret
xchg
movs
fld
in
pop
std
aam
push
pop
repnz
dec
sub
mov
mov
lock
sbb
mov
add
mov
add
push
add
adc
add
lock
add
pushw
inc
add
lock
(bad)
(bad)
inc
push
pop
jp
inc
mov
sar
(bad)
(bad)
jle
xlat
sub
cmp
or
push
jno
xor
mov
pop
in
adc
mov
dec
nop
ret
movs
inc
out
sahf
popf
test
mul
lea
mov
and
or
add
(bad)
loopne
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
xchg
mov
lock
add
or
add
lock
mov
movs
mov
shr
jns
mov
mov
lods
cmp
add
nop
mov
cmps
lods
ret
xor
retf
push
inc
xchg
push
jge
lods
push
jmp
out
or
stc
iret
mov
ss
mov
cs
inc
stos
lahf
adc
cmp
outs
mov
test
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
fld
mov
add
lock
add
sar
add
add
add
add
add
std
inc
add
push
add
lock
loop
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
leave
xchg
xor
and
call
repnz
ins
enter
add
sbb
mov
vxorps
mov
and
sar
xchg
aam
cld
xchg
inc
into
jecxz
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
test
(bad)
(bad)
(bad)
jmp
aad
push
xchg
dec
ins
in
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
push
sub
push
inc
add
lock
add
clc
and
fidiv
mov
jbe
in
ficomp
jne
in
int3
aaa
dec
adc
dec
inc
jp
xchg
retf
(bad)
or
cmp
add
adc
es
sub
inc
sbb
jl
cmp
add
test
mov
pop
loopne
pop
mov
loop
mov
les
dec
or
cmps
cs
mov
imul
pop
mov
mov
mov
in
stos
inc
cli
push
imul
test
adc
sti
pop
cs
mov
aas
adc
in
std
jge
add
push
add
add
add
add
lock
add
lock
int
lock
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
retf
jecxz
loop
add
lock
out
lock
add
push
add
lock
dec
movs
add
sub
out
jnp
inc
inc
jnp
aas
sbb
mov
test
icebp
in
pop
fistp
mov
mov
je
lock
add
cmp
cmp
fadd
xor
inc
xor
xor
dec
and
sbb
xchg
adc
ins
add
add
jno
mov
(bad)
jmp
int
mov
pop
ja
dec
cmp
lods
pop
dec
sub
inc
push
adc
ret
lahf
call
cmps
sub
popf
out
(bad)
in
jmp
sub
jmp
and
inc
mov
sbb
xor
mov
retf
dec
lds
or
je
jno
xchg
dec
fisub
pop
test
dec
push
push
neg
cmp
cli
(bad)
xchg
inc
imul
lahf
imul
movs
add
push
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
mov
adc
call
je
nop
mov
cwde
or
fdivr
scas
lock
push
xor
ins
movs
push
cmp
cmps
addr16
jnp
daa
cmps
leave
mov
adc
mov
popa
pop
hlt
cmc
mov
sbb
mov
jl
inc
(bad)
mov
jmpw
dec
das
fst
push
imul
mov
pop
pushf
pop
jp
mov
cmps
add
(bad)
test
add
lock
(bad)
(bad)
(bad)
fmul
inc
lods
sbb
add
sar
(bad)
call
inc
scas
in
ret
test
jnp
xor
test
add
leave
or
push
xchg
outs
xor
mov
shl
xchg
cwde
mov
fwait
out
and
mov
mov
sub
pop
and
or
call
add
or
pop
cld
jns
mov
es
(bad)
inc
pop
add
lock
add
adc
add
(bad)
(bad)
(bad)
call
je
mov
add
add
lock
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
call
lahf
rcr
add
mov
(bad)
(bad)
call
push
add
dec
mov
movs
cmp
enter
lds
mov
call
(bad)
mov
xor
add
enter
and
add
fistp
jecxz
inc
cmp
cdq
mov
push
daa
cmp
inc
bound
shl
movs
repnz
jmp
push
shl
enter
add
cld
xchg
adc
mov
dec
dec
push
add
lock
mov
adc
add
lock
repz
mov
lock
add
and
lock
xchg
push
mov
jmp
push
sahf
fst
ret
mov
xchg
imul
push
sub
or
retf
lds
icebp
mov
and
jae
in
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
retf
out
pop
gs
jl
and
imul
lock
add
adc
xor
mov
dec
inc
test
test
mov
mov
lock
movs
push
das
pop
inc
jl
xlat
add
mov
xchg
test
out
aaa
adc
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
das
dec
cld
lock
xchg
scas
sub
mov
pop
push
dec
push
pop
inc
arpl
jecxz
or
inc
adc
and
cmp
les
push
dec
push
xchg
mov
sti
(bad)
aam
jmp
and
push
inc
fcom
xchg
adc
fwait
push
loopne
sbb
dec
mov
jp
pop
jecxz
loop
clc
repz
ins
out
in
add
xor
stos
out
push
jg
jl
fs
out
inc
mov
les
xlat
in
sub
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
ret
push
popa
adc
ds
js
loopne
(bad)
lock
cwde
cwde
mov
scas
call
retf
imul
add
lock
mov
push
dec
jne
cmp
jne
adc
lahf
retf
iret
or
sbb
pop
mov
jle
ret
xor
xchg
and
adc
aad
ja
cs
jmp
int3
xor
inc
(bad)
xchg
mov
push
sti
sub
add
lock
(bad)
call
lds
lock
add
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
inc
ud0
add
lock
sar
(bad)
jmp
jmp
add
add
add
retf
add
add
add
add
and
jae
add
and
or
cmc
ins
jg
mov
fstp
and
pop
stc
enter
and
sub
movs
and
hlt
inc
int
iret
push
mov
lock
(bad)
push
js
lock
add
and
add
and
add
xor
add
(bad)
(bad)
(bad)
call
add
xchg
imul
and
retf
retf
jne
lea
xlat
test
cmp
cli
js
adc
jno
cwde
push
xchg
jbe
repz
inc
sar
je
loope
push
fisub
pop
icebp
inc
repnz
or
(bad)
mov
call
(bad)
(bad)
(bad)
call
es
(bad)
clc
adc
call
add
add
add
push
add
lock
(bad)
(bad)
inc
jae
dec
jle
in
(bad)
(bad)
call
add
jmp
add
inc
out
(bad)
xchg
push
jg
mov
xor
fld
dec
fld
inc
mov
xchg
jle
xchg
rol
into
inc
mov
mov
xchg
dec
add
dec
jae
add
loopne
add
add
add
(bad)
(bad)
(bad)
dec
stos
or
add
lock
add
ret
jmp
nop
sbb
push
dec
das
cld
inc
mov
inc
fwait
mov
add
push
add
lock
lock
add
aaa
add
lock
(bad)
(bad)
jmp
clc
sar
pop
mov
lock
(bad)
call
pop
sahf
push
xor
mov
jb
cmp
pop
cmp
push
mov
push
cli
std
lea
aaa
inc
mov
(bad)
cmp
rol
sbb
sbb
mov
arpl
fbld
lahf
jmp
in
movs
mov
sub
push
ret
(bad)
push
test
sbb
mov
outs
add
add
add
sub
add
jnp
add
jnp
add
push
add
adc
enter
add
lock
add
lock
add
pusha
mov
and
(bad)
(bad)
(bad)
jl
add
lock
add
lock
sub
fmul
int3
jbe
xor
jo
sub
shl
jno
xor
push
fucomip
pop
sbb
(bad)
bound
das
add
out
xor
pop
out
ret
imul
mov
inc
mov
add
lock
(bad)
(bad)
jmp
std
push
addr16
add
sar
(bad)
(bad)
mov
xor
and
mov
hlt
test
dec
xor
xchg
loop
inc
mov
retf
push
ret
jnp
fadd
dec
cdq
mov
push
or
(bad)
popa
dec
fstp
into
sti
sar
mov
mov
das
inc
inc
fist
popf
and
ins
cmp
ds
fcmovb
dec
retf
mov
out
into
mov
mov
ret
mov
dec
(bad)
cmp
jmp
icebp
mov
je
je
push
xor
push
(bad)
xor
add
(bad)
(bad)
(bad)
push
retf
pop
ins
mov
and
lock
(bad)
jmp
add
lock
(bad)
(bad)
jmp
dec
jg
imul
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
lods
jbe
js
jae
add
lock
mov
lock
add
lock
add
pop
test
pop
or
iret
cmp
(bad)
(bad)
call
add
lock
add
xor
add
(bad)
(bad)
(bad)
jmp
mov
out
rcr
sar
(bad)
inc
mov
xchg
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcomp
frstor
ret
xchg
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
div
adc
sub
add
lock
fild
push
es
hlt
into
xchg
(bad)
leave
push
jno
cmp
sub
inc
ins
in
jae
sti
sbb
mov
jo
dec
mov
ret
add
rcl
inc
add
or
add
pop
mov
and
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
retf
pop
cmp
pop
cld
imul
stos
cmc
mov
lods
and
fmul
mov
ins
dec
push
and
adc
inc
mov
inc
retf
imul
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
mov
jbe
out
add
mov
add
adc
fadd
lock
add
add
add
jb
add
add
add
call
push
das
xor
jp
xlat
mov
mov
iret
xchg
mov
sti
dec
xchg
xchg
std
add
push
loopne
aam
pop
xchg
and
call
cmc
outs
mov
rcl
dec
loope
loop
imul
or
lods
out
out
and
add
(bad)
(bad)
(bad)
(bad)
ds
lds
cld
add
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
icebp
mov
add
dec
add
add
mov
add
lock
add
add
add
dec
das
add
add
add
add
add
inc
adc
icebp
inc
dec
pop
aam
mov
mov
in
test
cmp
xchg
icebp
gs
mov
mov
mov
and
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
test
and
add
add
xor
add
(bad)
(bad)
(bad)
(bad)
cld
lock
xchg
scas
data16
adc
sar
(bad)
(bad)
jmp
add
(bad)
push
add
or
add
mov
add
pop
inc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
xor
add
push
push
add
lock
add
add
add
(bad)
(bad)
(bad)
inc
mov
retf
mov
lock
(bad)
(bad)
(bad)
call
out
test
mov
xor
dec
pop
xor
mov
xchg
push
cmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
scas
in
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
xchg
jnp
push
sub
inc
add
lock
bound
lock
jmp
xchg
loopne
push
sti
mov
inc
popf
dec
sbb
enter
cdq
sbb
adc
(bad)
(bad)
(bad)
(bad)
mov
shl
test
pusha
jne
lock
mov
inc
rol
push
mov
adc
js
sbb
adc
mov
in
add
icebp
pop
pop
mov
cmps
mov
ins
push
sub
sub
add
jecxz
cmp
out
ror
gs
inc
retf
add
add
add
push
imul
jmp
add
lock
add
lock
dec
dec
xchg
scas
xor
mov
push
arpl
mov
xchg
dec
pop
jp
adc
xchg
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
out
lahf
mov
lock
add
add
adc
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
xchg
sar
cmp
inc
scas
inc
ret
xor
mov
cdq
push
mov
movs
push
adc
sbb
fnstcw
jmp
icebp
outs
int
add
mov
pop
loop
cs
pushf
(bad)
ja
dec
test
lock
add
ins
add
lock
add
adc
(bad)
mov
sar
(bad)
inc
add
lock
add
add
das
ins
imul
mov
dec
sub
pusha
jno
jmp
jne
in
in
das
adc
inc
test
ins
inc
imul
lock
add
lock
add
jo
cmp
lock
lock
add
adc
add
lock
(bad)
(bad)
(bad)
sti
pop
and
adc
add
ret
(bad)
(bad)
call
push
adc
dec
sbb
and
cmp
inc
mov
xchg
xor
push
into
lods
stos
out
out
mov
aad
pop
leave
fild
clc
inc
mov
and
add
(bad)
adc
fcom
clc
adc
sub
adc
mov
jne
pop
inc
lds
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
mov
jmp
inc
repz
mov
pop
sub
js
movs
leave
or
push
jbe
je
pop
xor
mov
(bad)
xor
repz
mov
aad
xor
or
xor
shr
dec
mov
push
stos
push
movs
jnp
add
lock
(bad)
(bad)
push
(bad)
push
jne
add
xchg
(bad)
(bad)
inc
out
jbe
je
or
cmp
mov
movs
inc
mov
mov
adc
lods
(bad)
jp
pushf
adc
fst
ret
mov
or
push
mov
dec
push
cmp
jmp
inc
es
push
push
sti
mov
mov
repz
fisttp
jns
cmp
adc
shr
data16
fwait
retf
mov
push
add
and
hlt
add
and
add
and
add
push
add
and
add
xchg
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
xchg
mov
aas
cmps
mov
push
(bad)
inc
xchg
push
jmp
(bad)
fs
mov
push
or
in
in
iret
sahf
mov
mov
ret
(bad)
out
in
xor
nop
jno
add
lock
push
add
ds
lock
clc
add
add
add
pushf
out
lock
add
add
add
not
add
add
add
(bad)
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
bound
mov
and
int
and
clc
cmps
fild
leave
(bad)
push
nop
xchg
push
jne
mov
or
sub
cmps
jno
sub
movs
sbb
and
push
xchg
int3
dec
dec
out
mov
sub
fwait
adc
push
shr
loopne
ins
push
lahf
fs
push
sub
inc
jmp
fucomi
imul
(bad)
(bad)
(bad)
inc
dec
out
out
or
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
dec
sahf
or
pop
jg
xor
add
in
push
add
retf
imul
(bad)
in
inc
arpl
daa
pop
dec
pop
ja
xchg
fnsave
shl
fucomp
inc
dec
mov
dec
es
pop
mov
addr16
mov
test
scas
adc
add
add
add
icebp
jmp
shr
jl
clc
dec
cli
add
dec
dec
ffree
outs
jge
push
out
cs
adc
cdq
adc
ss
cmp
out
sbb
xor
sar
mov
test
push
pop
mov
nop
push
or
popf
ds
addr16
fwait
lods
dec
dec
daa
push
cs
loope
sub
or
dec
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xchg
inc
bound
ss
or
add
push
xor
add
sub
add
cmp
lds
mov
inc
sub
aad
add
or
cmp
sti
and
cld
mov
leave
sti
xchg
sti
mov
inc
pop
sbb
lahf
retf
pushf
daa
cmps
xor
mov
les
or
cli
inc
adc
push
push
mov
rol
cmps
ret
push
fldcw
sub
and
mov
adc
fmul
arpl
call
jmp
(bad)
or
call
sar
jbe
sub
dec
adc
xchg
(bad)
jecxz
cmp
mov
jmp
shl
lods
(bad)
jmp
arpl
pop
xor
push
xor
shl
call
dec
hlt
inc
in
test
xchg
and
pop
test
mov
push
push
push
or
pop
imul
sub
mov
cwde
sub
call
ss
mov
outs
fadd
(bad)
cld
sar
pop
cmps
cmp
sar
fnstenv
lea
mov
repz
mov
push
sub
and
jmp
mov
sub
jae
jmp
mov
cmp
push
xor
sub
aad
add
or
sub
in
rcr
lods
mov
xor
or
xlat
iret
popf
in
(bad)
movs
add
mov
jp
dec
test
call
mov
jae
out
and
jbe
retf
xchg
add
fsubr
into
adc
retf
push
push
stos
push
dec
mov
mov
and
mov
stos
or
xchg
push
inc
(bad)
add
push
test
loope
pop
dec
pop
and
popf
inc
loop
cbw
fmul
inc
loope
add
fistp
enter
inc
sbb
out
adc
jecxz
ret
adc
ds
jae
jae
mov
or
push
or
mov
repz
mov
loope
sub
add
mov
sbb
movs
int3
les
push
mov
sbb
cmp
sub
je
adc
push
fdivr
(bad)
mov
aaa
mov
inc
xchg
test
jo
xor
test
mov
arpl
inc
jecxz
test
and
stos
jmp
cld
xor
adc
cld
mov
mov
pop
cwde
(bad)
jne
div
stos
pop
cmp
neg
xor
adc
aaa
leave
or
test
pop
rcl
sti
mov
dec
adc
xlat
out
inc
loop
pop
push
(bad)
fcomip
mov
(bad)
push
iret
js
mov
(bad)
in
mov
add
jecxz
dec
xchg
aas
mov
lock
xrelease
push
push
dec
cmp
nop
push
push
inc
scas
mov
sbb
lods
lods
sub
rcr
sub
es
mov
sbb
add
(bad)
(bad)
(bad)
jmp
sbb
sar
(bad)
call
add
(bad)
(bad)
(bad)
(bad)
mov
cmp
xchg
pop
inc
add
sar
(bad)
push
add
inc
add
lock
(bad)
jmp
push
lock
add
sbb
add
sbb
add
add
add
(bad)
xchg
add
add
retf
sub
push
push
inc
cmp
int3
pop
push
jp
mov
inc
jcxz
mov
pop
cs
mov
push
push
add
xor
add
adc
add
lock
movs
cdq
pop
inc
fwait
hlt
fild
mov
pop
mov
inc
mov
cmp
mov
and
add
xchg
dec
sub
pop
cmps
(bad)
and
xor
cwde
mov
adc
sub
mov
jno
out
sar
div
dec
rcr
enter
scas
adc
inc
xchg
mov
and
dec
pop
icebp
jne
(bad)
aas
xchg
jns
pop
dec
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
jne
adc
inc
push
add
js
jb
stc
sub
test
ret
cmp
enter
fcomp
les
jle
or
(bad)
arpl
inc
in
jmp
loope
add
xor
inc
stos
or
add
lock
add
cmp
and
(bad)
(bad)
jmp
add
lock
add
inc
jb
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xor
aad
or
lock
add
or
add
(bad)
(bad)
(bad)
jmp
adc
(bad)
jmp
add
pop
or
lock
(bad)
(bad)
jmp
test
je
xchg
(bad)
add
fst
mov
cs
outs
mov
nop
into
push
pop
inc
cmc
fisttp
push
int
fadd
in
rcl
jp
cmps
fwait
mov
dec
add
ss
or
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
dec
inc
xor
sahf
fadd
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
push
sub
inc
xor
inc
xchg
js
mov
mov
push
imul
jecxz
imul
xlat
mov
jne
mov
aas
push
xor
popf
pop
xchg
aam
dec
jns
push
call
jne
nop
ret
test
pop
dec
xchg
fs
bound
cmps
push
jae
scas
adc
jae
pop
push
test
sub
jae
fidivr
or
add
(bad)
(bad)
(bad)
call
mov
mov
nop
add
sar
(bad)
push
mov
fst
sti
mov
je
mov
xchg
out
or
adc
pushf
sbb
pop
lock
test
jmp
fcmovbe
mov
shl
mov
or
adc
cmps
cwde
xor
sub
aam
or
rcl
add
lock
add
adc
add
popa
movs
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
sub
andnps
xchg
sub
adc
out
sub
outs
pop
pop
leave
mov
das
das
les
inc
data16
mov
xor
in
leave
or
add
lock
(bad)
(bad)
fsubr
lock
add
cmp
add
cmp
add
test
stc
pop
gs
pop
push
xchg
sub
fiadd
pushf
stos
shl
dec
inc
icebp
pop
push
lahf
cmp
mov
mov
cmps
jo
xor
jge
clc
js
sbb
movs
out
int3
push
xchg
into
popf
dec
xchg
popf
push
sbb
add
lock
(bad)
call
pop
add
lock
add
xor
add
mov
aaa
fadd
jnp
jmp
mov
cmc
inc
mov
(bad)
pop
jne
mov
test
neg
push
or
dec
dec
sub
push
mov
adc
cmp
cmps
pop
aaa
and
pop
retf
sti
inc
add
mov
nop
lahf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
cmp
xor
add
in
into
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
enter
push
add
lock
or
and
inc
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
push
adc
out
adc
adc
mov
inc
sub
test
mov
jl
adc
push
lea
outs
jnp
jecxz
push
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sahf
shl
push
sbb
fadd
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
sub
dec
sahf
or
add
lock
fld
lock
loope
pop
ds
mov
dec
(bad)
add
fsubr
or
xor
mov
sbb
les
push
fstp
fsub
test
shl
popf
sbb
add
mov
gs
cs
xor
dec
scas
lahf
cmp
pop
test
test
in
scas
sti
clc
xor
retf
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
cmps
mov
sahf
aad
pop
addr16
outs
sahf
popa
mov
shr
xchg
xchg
mov
cmp
call
xlat
mov
sti
fimul
xchg
inc
ja
pusha
out
inc
rcl
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
xlat
jmp
fiadd
loop
mov
sar
sub
jl
cmp
cmps
aad
sub
popa
xor
lds
movs
sub
sbb
fcmovnbe
leave
imul
arpl
pop
jns
fbstp
aaa
fwait
pop
push
imul
sbb
ins
push
in
mov
fnstsw
and
mov
xor
push
add
lock
(bad)
(bad)
jmp
sbb
sar
(bad)
dec
in
cmps
retf
mov
pop
push
les
add
outs
dec
cmp
addr16
jl
xor
fwait
(bad)
xchg
icebp
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
fisub
dec
push
add
and
cmp
(bad)
and
xlat
push
jle
das
add
aas
leave
dec
add
inc
clc
or
mov
xor
lock
(bad)
(bad)
(bad)
jg
(bad)
scas
je
ja
cli
push
add
add
(bad)
jmp
add
lock
add
hlt
xchg
popf
dec
xchg
jge
push
sar
(bad)
jmp
add
add
lock
lock
repz
or
imul
in
mov
pop
xor
cwde
and
icebp
push
add
(bad)
(bad)
(bad)
call
push
fnstcw
add
sar
(bad)
inc
adc
pop
and
mov
mov
retf
mov
fdiv
sbb
iret
jbe
xchg
jg
jne
sub
adc
xchg
mov
cli
xchg
mov
in
xlat
rcl
cdq
mov
xchg
icebp
xchg
cmp
pusha
(bad)
mov
fmul
(bad)
push
jbe
jg
adc
(bad)
ret
hlt
fistp
mov
popa
out
dec
lds
cwde
or
pop
xlat
mov
inc
push
inc
pop
adc
lock
ror
xchg
mov
mov
scas
fs
push
outs
sub
sub
test
sbb
(bad)
aaa
rol
gs
mov
and
add
(bad)
(bad)
(bad)
inc
loop
or
(bad)
pop
lock
push
data16
stos
jle
sub
imul
pop
xchg
sub
lods
mov
sbb
das
fs
ror
jne
dec
push
jp
scas
and
adc
pop
retf
jle
pop
dec
das
xor
jmp
inc
arpl
pop
xor
inc
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
stos
and
mov
lock
add
adc
lock
lock
add
add
add
fldcw
lock
add
inc
push
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
inc
(bad)
jmp
add
mov
add
add
add
add
add
jnp
add
enter
(bad)
xchg
add
(bad)
xchg
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
clc
std
mov
add
lock
lock
add
(bad)
(bad)
(bad)
inc
fucomp
aas
mov
(bad)
(bad)
(bad)
cmp
push
pop
pop
xchg
call
fnsave
in
stos
fdiv
fwait
or
loop
out
call
xor
imul
mov
(bad)
lock
xchg
cmp
std
cmp
aad
mov
dec
sahf
aad
push
ins
add
add
add
dec
add
sbb
fwait
sbb
fidiv
cmp
aaa
add
add
lock
add
or
add
lock
cmps
add
cli
cmps
add
add
add
adc
lock
add
inc
add
lock
(bad)
(bad)
call
push
outs
mov
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
ret
jg
mov
xor
add
pop
ins
add
xlat
sub
ins
pushf
je
lea
inc
in
in
call
xor
addr16
call
cmp
fidiv
push
adc
lock
(bad)
(bad)
inc
shl
inc
xchg
add
ret
(bad)
(bad)
dec
add
lock
add
int
add
(bad)
(bad)
(bad)
(bad)
cmp
xchg
(bad)
cmp
(bad)
dec
mov
outs
and
das
mov
mov
call
arpl
inc
jmp
outs
pop
sbb
or
mov
mov
loopne
xor
popa
call
popa
xchg
rcr
retf
xor
lods
inc
xor
mov
add
or
add
lock
stos
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
pop
inc
pop
push
and
mov
pop
add
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
or
ins
or
retf
aad
add
lock
(bad)
(bad)
mov
add
lock
add
lock
add
lock
aaa
adc
loope
cmp
scas
mov
les
sub
jmp
dec
repnz
push
mov
xor
push
mov
and
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
idiv
cmp
add
lahf
rol
jmp
loopne
sub
out
jae
inc
(bad)
and
xchg
iret
adc
lock
movs
adc
mov
and
fld
xor
repz
mov
retf
ret
cmp
lahf
cmc
sub
sbb
inc
mov
dec
sar
pop
cmps
add
push
(bad)
cwde
push
and
adc
cmp
ins
call
rcl
(bad)
inc
lock
cwde
mov
add
(bad)
(bad)
(bad)
dec
lahf
adc
add
add
(bad)
inc
add
(bad)
(bad)
(bad)
push
fmulp
jne
aad
lock
(bad)
call
mov
inc
pop
imul
and
pop
xor
xor
div
and
jnp
outs
inc
xchg
add
rcr
dec
inc
pop
dec
por
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
movs
pop
leave
movs
popa
push
mov
add
lock
xlat
add
clc
daa
add
sub
add
mov
inc
in
ja
inc
xchg
clc
test
in
imul
imul
lock
and
retf
(bad)
fcom
jmp
xor
stos
call
nop
add
xchg
push
add
add
add
out
add
test
dec
mov
(bad)
jmp
push
jge
in
call
dec
push
jo
add
ins
retw
in
xchg
(bad)
leave
push
jmp
dec
shl
std
xor
push
mov
pop
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
xor
inc
mov
add
in
add
fdiv
sub
sub
or
data16
add
retf
je
mov
(bad)
push
(bad)
mov
inc
pop
jbe
sub
inc
mov
cmc
test
call
mov
out
jle
icebp
rcl
out
jl
in
xchg
xchg
sbb
jecxz
pop
stos
stc
lahf
mov
add
(bad)
(bad)
(bad)
call
frstor
(bad)
xchg
inc
lock
(bad)
inc
add
lock
imul
xchg
outs
and
adc
sub
mov
jl
gs
mov
repnz
add
lock
cld
xchg
add
call
lock
ret
dec
xor
adc
pop
mov
arpl
fadd
jp
fstp
loopne
cmp
push
iret
fnstcw
add
inc
dec
mov
or
inc
loope
out
pop
popa
js
jmp
mov
inc
sub
out
pop
add
sar
mov
lock
add
loopne
add
cmp
add
(bad)
(bad)
(bad)
call
iret
or
push
cmp
sar
(bad)
call
push
jp
pop
imul
rol
loop
ret
loope
push
pop
or
ror
jmp
fs
in
sbb
inc
xchg
int
dec
sub
fld
lock
add
int3
repnz
dec
mov
outs
sbb
mov
sub
lsl
xchg
in
scas
cmp
ja
cwde
pop
pop
lock
addr16
test
cmp
lock
add
and
add
adc
mov
popf
fs
xchg
dec
mov
inc
dec
pop
test
mov
pop
cmp
sahf
adc
test
inc
mov
call
int
xor
ret
sbb
dec
(bad)
outs
jne
inc
add
push
add
and
add
idiv
add
push
add
adc
cmp
lock
add
mov
mov
lock
fadd
add
pop
mov
mov
and
inc
retf
mov
adc
out
movs
pop
sbb
cmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
lods
jbe
js
jae
add
lock
popa
add
push
adc
les
jo
adc
or
aad
mov
arpl
popa
daa
das
(bad)
idiv
jecxz
retf
int
sbb
lods
inc
and
fadd
retf
add
lock
or
adc
add
lock
add
add
add
aas
std
add
rol
add
or
add
cmp
add
(bad)
(bad)
(bad)
inc
mov
pop
push
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
popa
add
lock
outs
add
cmp
add
(bad)
(bad)
(bad)
jmp
sbb
lock
(bad)
call
add
add
add
sldt
lock
(bad)
(bad)
dec
inc
ja
cdq
outs
push
sub
(bad)
(bad)
push
add
lock
hlt
add
dec
jg
mov
inc
ror
(bad)
in
mov
sar
pop
sbb
in
mov
dec
das
add
mov
and
call
call
sub
das
cmp
or
sbb
push
cmps
cmps
dec
mov
xchg
loope
lahf
push
push
inc
mov
push
sbb
add
add
add
imul
frstor
(bad)
adc
add
add
sar
(bad)
(bad)
cmp
add
lock
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
ds
xor
lock
mov
lock
outs
inc
xchg
pop
cmp
sub
popf
adc
mov
gs
xor
push
rol
shl
mov
or
or
cdq
push
out
call
test
pop
repnz
mov
pushf
jno
pop
push
std
mov
icebp
adc
dec
mov
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
sti
push
pushf
je
lock
add
add
lock
(bad)
(bad)
inc
arpl
sar
(bad)
jmp
add
lock
(bad)
(bad)
push
(bad)
out
push
add
sar
(bad)
call
add
push
add
adc
add
xor
add
(bad)
(bad)
(bad)
call
das
adc
(bad)
xchg
add
sar
(bad)
(bad)
sti
add
mov
dec
mov
lock
and
addr16
xor
fistp
cmps
push
mov
sub
into
enter
adc
xchg
inc
jne
inc
push
mov
(bad)
(bad)
(bad)
jmp
retf
stos
cdq
outs
mov
add
dec
cdq
add
adc
add
lock
add
add
add
and
add
add
add
aas
ret
add
cmp
add
cdq
lahf
add
or
add
or
cmps
mov
data16
leave
mov
adc
(bad)
fldenv
(bad)
inc
pop
and
xchg
hlt
pop
xlat
xor
xchg
cmp
jns
(bad)
add
push
dec
dec
jg
or
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmps
fisttp
loop
add
je
out
and
aam
es
dec
fsubr
and
pop
xchg
iret
xor
jno
inc
loope
and
dec
add
adc
test
xor
ror
iret
shr
aaa
cmp
mov
das
add
adc
add
clc
daa
add
push
add
lock
xor
add
add
add
(bad)
ins
pop
push
push
int3
loop
jge
cdq
and
jmp
or
hlt
ds
adc
out
and
mov
lahf
jp
cmp
(bad)
imul
pop
aaa
add
lock
(bad)
(bad)
dec
and
sub
add
sar
(bad)
inc
rol
cdq
ds
inc
and
cmp
pop
xor
dec
xchg
jbe
call
sar
repz
repnz
pusha
xor
adc
data16
lock
(bad)
(bad)
(bad)
jg
cld
sub
(bad)
add
sar
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
gs
mov
in
push
add
lock
add
sub
popf
sub
das
aam
out
jg
movs
mov
ror
in
fs
or
jl
fisttp
pop
cdq
std
scas
push
daa
ins
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fbld
bound
aaa
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
popf
dec
xor
add
jp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ror
(bad)
adc
aas
add
lock
test
es
out
pop
jp
or
sbb
stos
fdiv
pop
jl
jb
mov
dec
pop
out
or
(bad)
sub
out
mov
xchg
or
push
test
push
imul
or
cmc
scas
int
fsubr
sbb
ffreep
nop
sbb
fdivr
scas
js
inc
movs
dec
je
fwait
jg
adc
in
dec
rcr
(bad)
pop
fldcw
pop
in
inc
jns
add
int3
loopne
es
fidivr
mov
cdq
adc
int
mov
aad
js
pop
frstor
sbb
xchg
(bad)
in
data16
mov
ret
pop
cmps
loope
aaa
stos
das
add
inc
(bad)
dec
mov
jnp
sub
xor
cs
bound
pop
call
push
fs
mov
sub
or
pop
test
(bad)
adc
ins
mov
push
inc
add
add
add
add
add
add
nop
mov
pop
sar
(bad)
dec
add
lock
add
lock
add
mov
add
mov
add
cmp
add
add
push
cli
add
test
repnz
mov
sahf
sbb
out
ins
cmps
mov
jbe
add
add
add
je
add
aaa
add
lock
(bad)
(bad)
jmp
js
bound
add
sar
(bad)
push
sbb
(bad)
mov
push
push
sub
jb
not
xchg
mov
mov
sbb
adc
xor
ror
cmp
adc
mov
ins
mov
sahf
xchg
repnz
jb
mov
repz
scas
repz
out
rcl
ret
fisub
dec
enter
mul
idiv
sbb
add
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
outs
pop
inc
push
push
add
lock
ret
cmps
ins
adc
pusha
scas
idiv
out
jmp
je
movs
mov
lods
xchg
pop
int3
mov
xchg
xchg
dec
(bad)
jl
jmp
das
mov
test
cmp
adc
or
mov
jl
adc
fs
sbb
out
ror
inc
(bad)
into
cmp
jmp
pop
xchg
scas
scas
add
not
add
or
jmp
and
dec
les
fucomip
jl
fsubr
pop
out
in
and
ins
dec
add
aas
cli
mov
or
lods
xchg
pop
sbb
and
mov
ins
je
push
dec
outs
mov
add
push
jno
push
adc
aas
out
or
leave
pusha
cmp
and
call
mov
jns
lahf
dec
test
push
pusha
aam
xor
sbb
sub
add
fnstcw
add
lock
(bad)
(bad)
call
cli
dec
jne
outs
loope
add
(bad)
push
add
lock
(bad)
(bad)
inc
jns
call
push
inc
add
sar
(bad)
push
scas
stos
repnz
std
ret
neg
out
add
sahf
sbb
dec
ficomp
int
out
popf
mov
mov
mov
xchg
popa
sahf
ds
mov
push
mov
adc
add
lock
add
lock
(bad)
(bad)
(bad)
fstp
ds
cmp
add
sar
(bad)
call
add
add
add
repnz
add
nop
dec
add
add
add
add
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
cmp
sbb
add
cmp
add
push
add
adc
add
lock
add
lock
(bad)
(bad)
jmp
or
or
(bad)
(bad)
jmp
add
push
aam
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jnp
dec
add
lock
add
fidiv
not
cwde
fxch
push
cmp
xor
repnz
das
add
pop
in
rcr
adc
and
hlt
mov
and
inc
add
int3
sbb
scas
mov
movs
inc
xchg
sub
hlt
repnz
adc
jae
cwde
pusha
push
or
and
jb
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
lahf
add
lock
add
dec
add
lock
(bad)
(bad)
dec
push
int
push
xor
sar
(bad)
dec
add
mov
gs
cmp
mov
outs
add
push
add
lock
add
(bad)
(bad)
(bad)
push
mov
pop
out
pop
(bad)
loope
add
sar
(bad)
jmp
mov
pop
lahf
sbb
pushf
cdq
repz
cmp
comiss
cmp
dec
(bad)
jo
cdq
je
leave
imul
es
(bad)
adc
push
jbe
pop
hlt
aaa
pop
fstp
shl
jno
test
mov
inc
pop
inc
add
mov
pshufw
jns
jmp
cdq
mov
dec
add
dec
add
add
add
mov
add
cmp
add
(bad)
(bad)
(bad)
push
(bad)
cwde
xor
cmps
add
sar
(bad)
(bad)
sti
add
ret
push
push
add
(bad)
pop
mov
mov
jns
rcl
mov
stos
cmc
xor
sbb
cmp
mov
jae
fsubr
xor
mov
xchg
inc
mov
popa
lods
jno
push
out
addr16
dec
mov
in
rol
add
lock
and
push
add
push
add
lock
mov
add
lock
lods
xchg
enter
inc
movs
loopne
inc
jb
fisubr
inc
test
xlat
sti
or
mov
pop
adc
icebp
jbe
xchg
push
bound
push
(bad)
adc
repz
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
mov
stc
xor
inc
or
ins
cld
jns
pusha
adc
lea
cmp
xchg
xor
je
sub
(bad)
xchg
cwde
jmp
jl
ja
dec
hlt
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xlat
pop
fwait
test
popa
cmp
add
or
add
mov
(bad)
mov
xchg
jno
jo
or
push
xor
or
addr16
mov
data16
dec
jecxz
mov
mov
(bad)
ds
jo
ins
test
call
dec
and
or
mov
shl
mov
call
mov
jmp
pop
or
lock
or
lock
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
int3
xor
lods
pusha
in
push
add
lock
(bad)
(bad)
(bad)
cld
xchg
mov
jmp
(bad)
dec
add
lock
add
lock
add
sbb
add
inc
pop
add
add
add
add
add
in
iret
xchg
retf
shl
inc
stos
jbe
mov
mov
pop
les
adc
push
cwde
in
enter
jmp
mov
shl
mov
add
lock
pop
cmp
pop
clc
les
jne
xchg
cmp
xchg
call
add
lock
(bad)
(bad)
dec
inc
loop
add
xchg
xor
(bad)
(bad)
inc
cmc
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
push
sub
lock
add
push
add
lock
(bad)
(bad)
(bad)
mov
mov
cmp
inc
add
lock
push
add
call
xchg
sar
mov
jae
cmp
mov
push
push
popa
stos
mov
outs
pusha
xor
xchg
jnp
das
sbb
push
idiv
mov
out
dec
in
shl
in
sti
push
std
mov
xchg
add
jl
add
or
cmp
add
adc
sbb
inc
mov
iret
mov
call
jecxz
cmp
gs
scas
cli
push
leave
pop
or
push
mov
dec
fidivr
sti
sub
add
stc
or
inc
dec
test
cmp
adc
in
fisttp
xchg
xchg
ret
jg
out
xor
out
lahf
dec
test
loope
jle
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
fwait
jo
add
lock
add
sbb
arpl
lock
fldl2e
nop
je
adc
imul
test
pop
jne
or
div
outs
repz
and
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
xchg
xchg
add
xbegin
add
(bad)
(bad)
(bad)
push
int
rcl
cmp
sbb
add
add
(bad)
call
add
lock
add
(bad)
lds
pop
push
(bad)
(bad)
call
add
lock
add
imul
add
pop
push
out
sub
push
dec
add
and
scas
add
mov
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
shr
aam
jmp
dec
ins
push
mov
out
in
inc
in
or
and
stc
loopne
mov
call
mov
push
sub
fsub
push
push
or
pushf
or
and
inc
add
lock
add
or
(bad)
(bad)
jmp
scas
(bad)
wbinvd
xchg
inc
lock
add
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
scas
xor
mov
imul
inc
inc
sub
xor
popa
nop
arpl
adc
daa
and
loop
adc
jo
int3
jae
mov
call
imul
push
dec
mov
(bad)
idiv
daa
inc
and
push
mov
or
jns
popa
jp
push
neg
cs
xchg
cmc
rep
sbb
xchg
outs
pop
sahf
std
ds
das
cmps
fisub
sbb
aas
jno
pop
icebp
jnp
xor
stc
lods
adc
xchg
out
xchg
jo
sbb
add
ret
addr16
xchg
mov
mov
fistp
push
adc
and
dec
int
mov
mov
push
aam
push
sbb
arpl
xchg
sbb
call
mov
lahf
or
mov
ins
out
loope
in
fld
pop
sbb
xchg
(bad)
test
out
(bad)
mov
nop
shl
(bad)
fist
(bad)
into
jge
fild
adc
add
sub
dec
lahf
pusha
jle
push
aam
cli
mov
add
sar
retf
aas
adc
xchg
lods
fnstsw
inc
xor
pop
mov
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
mov
and
add
lahf
inc
rcr
add
mov
mov
bound
in
mov
out
and
data16
inc
pop
stc
mov
mov
inc
push
mov
test
sahf
jp
popa
or
(bad)
in
push
mov
xor
scas
sub
sbb
stos
inc
jmp
fldcw
sub
xlat
stos
dec
mov
dec
jo
pop
add
add
add
adc
sbb
add
lock
(bad)
call
add
lock
add
sub
add
lea
cli
or
push
enter
out
das
add
mov
pop
lock
imul
and
xchg
inc
add
sbb
popf
(bad)
sub
and
sub
inc
jge
and
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
jmp
lock
dec
cmp
xchg
rol
sbb
sbb
inc
adc
nop
cmps
outs
movs
sbb
dec
add
push
cwde
inc
mov
add
push
add
adc
add
lock
(bad)
(bad)
call
fwait
xchg
mov
rol
add
dec
add
add
add
cmp
xchg
outs
sar
(bad)
dec
jns
lock
add
lock
add
lock
jns
mov
jb
pop
stos
lea
pop
lea
dec
clc
(bad)
imul
push
ins
fwait
out
lahf
or
icebp
das
sub
aad
int3
out
dec
xor
and
gs
out
mov
hlt
aas
fbstp
cmp
pop
stc
pop
call
repnz
mov
iret
xchg
sub
mov
xchg
pop
(bad)
dec
cs
sbb
ds
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
shl
mov
xchg
and
mov
inc
mov
mov
cmp
out
xor
jnp
cmc
lods
jbe
and
hlt
in
dec
mov
sahf
push
sub
out
loopne
mov
out
in
xlat
loope
xorps
push
in
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
inc
push
xor
dec
(bad)
adc
and
das
mov
dec
pop
iret
cdq
sar
xchg
lods
xlat
fdiv
or
jmp
not
(bad)
(bad)
pushf
cmp
out
stos
add
dec
adc
iret
imul
clc
mov
shr
mov
and
gs
jge
ret
dec
stos
jo
retf
es
sub
inc
dec
jecxz
xchg
mov
pushf
popf
and
fld
movs
inc
mov
mov
cmp
or
(bad)
sbb
lock
add
add
add
add
or
gs
jge
or
(bad)
loopne
(bad)
int
adc
mov
cwde
retf
mov
pop
mov
shr
int3
ss
stos
aas
jl
shl
lock
(bad)
(bad)
call
jle
cmc
fwait
cmp
or
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
les
dec
cmps
cld
inc
lock
inc
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
push
sub
inc
xor
test
add
push
dec
add
pop
push
lock
add
add
shr
lahf
add
mov
and
dec
dec
jb
aaa
mov
sbb
add
fst
fdivr
pop
xchg
pop
retf
push
div
jbe
aas
dec
inc
dec
adc
pop
test
inc
lds
sar
lock
add
push
add
lock
(bad)
(bad)
push
sbb
fsub
cmp
(bad)
dec
mov
(bad)
push
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fimul
ss
jge
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mul
mov
sbb
fistp
push
fistp
call
fstp
xor
mov
retf
enter
ret
inc
cmps
jmp
mov
adc
xor
in
adc
das
fmul
jmp
mov
outs
mov
and
fucomp
fwait
pushf
push
add
pop
xchg
sub
popa
imul
lock
add
lock
(bad)
(bad)
call
xlat
fist
adc
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
imul
add
out
adc
out
or
fcmovbe
inc
(bad)
sti
add
sahf
cdq
idiv
repz
sahf
xor
sub
cmp
xor
jne
push
popa
icebp
cld
mov
sub
add
(bad)
jp
inc
je
(bad)
adc
xlat
fdivr
inc
xor
scas
js
out
xor
cmp
jl
cs
mov
stc
ror
and
clc
pop
push
sbb
sub
pushf
out
iret
js
lea
mov
mov
aaa
and
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
xor
lea
add
lock
adc
lock
add
(bad)
(bad)
(bad)
(bad)
cmp
xchg
aaa
dec
xchg
adc
lock
(bad)
inc
mov
mov
rol
add
call
sahf
stos
in
jmp
fs
daa
jmp
xchg
ja
xchg
and
loopne
enter
lds
add
push
hlt
rcr
cmp
data16
rcl
lock
add
idiv
mov
clc
in
xor
mov
ret
in
lods
and
mov
jl
rcr
rol
aaa
aaa
neg
daa
jl
rcl
push
xchg
fidivr
inc
imul
jnp
xlat
push
add
fadd
push
jns
push
(bad)
(bad)
inc
dec
cmp
sbb
retf
dec
fcomp
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
xor
inc
mov
add
sbb
daa
fild
adc
inc
mov
sar
pusha
sbb
xlat
inc
pop
call
test
xchg
dec
iret
jno
repz
cli
fdiv
lock
rol
lock
adc
lock
(bad)
(bad)
(bad)
out
imul
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
movs
outs
jp
test
int
add
pop
ins
pop
out
push
out
test
neg
dec
cmps
fistp
xor
fldenv
or
cmp
pop
loope
mov
out
test
jnp
jle
cld
add
xchg
fstp
arpl
aam
adc
pop
adc
inc
push
ss
js
mov
push
cmp
add
(bad)
(bad)
(bad)
jmp
ja
es
sbb
push
sbb
call
add
(bad)
(bad)
(bad)
inc
dec
in
mov
sbb
inc
ss
mov
xchg
adc
in
mov
jmp
ret
xlat
aaa
xor
jae
ins
bswap
nop
xchg
and
sahf
pop
dec
inc
xchg
sbb
push
fbstp
dec
popa
addr16
inc
xchg
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
icebp
(bad)
cwde
xor
lock
add
add
add
push
add
lock
add
mov
ret
ror
mov
add
cmp
retf
inc
mov
cmp
pop
jno
mov
stos
fidivr
fiadd
cdq
nop
or
xor
jne
call
int3
ficom
push
or
jecxz
cmps
adc
pop
imul
mov
mov
push
out
inc
dec
retf
push
sbb
jo
sbb
cli
and
add
lock
mov
sub
pop
ret
inc
and
scas
xchg
jecxz
add
mov
add
and
dec
and
lea
stos
in
mov
cmc
hlt
aas
adc
mov
into
mov
mov
jmp
mov
sub
mov
inc
retf
pop
cld
and
add
xor
add
jo
xchg
fucomip
inc
mov
inc
call
push
pop
push
pop
mov
jmp
mov
or
jb
mov
and
adc
inc
les
push
iret
and
adc
sbb
test
iret
test
or
enter
ret
push
retf
dec
loope
sahf
pop
ret
cmp
or
(bad)
and
test
xchg
or
test
mov
test
and
dec
mul
jle
mov
ja
int
cmp
mov
test
retf
cdq
div
cli
and
push
push
add
cmp
aam
push
push
test
mov
in
push
shr
arpl
cmp
in
popa
jmp
lock
(bad)
(bad)
push
movs
fimul
add
cmp
call
inc
lock
add
push
mov
add
in
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
cmc
lea
or
call
std
icebp
mov
xor
adc
loop
mov
mov
jmp
dec
xchg
sub
xchg
out
fwait
jg
mov
pop
push
ins
lods
(bad)
mov
dec
movs
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
repnz
add
cmp
add
clc
inc
test
push
(bad)
jecxz
xchg
push
adc
pop
mov
cmp
fwait
(bad)
jae
(bad)
mov
call
cmps
jge
mov
(bad)
or
dec
pop
cmp
pop
xchg
iret
fistp
mov
dec
sub
mov
xchg
fldcw
jmp
leave
imul
shl
mov
fs
movs
ret
aam
jbe
sbb
jb
mov
xchg
sub
lea
stos
mov
mov
pop
xchg
inc
outs
sub
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
out
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
lock
add
(bad)
(bad)
(bad)
(bad)
jmp
aas
out
mov
add
lock
add
lock
add
cmp
(bad)
sar
(bad)
push
jge
lock
add
iret
or
lock
jnp
xchg
add
pushf
sti
cmps
pop
cwde
loop
push
and
and
xchg
stos
sbb
nop
cmc
cli
cmp
mov
push
or
dec
add
jo
dec
add
lock
(bad)
(bad)
inc
pusha
lds
cwde
and
ja
cs
jmp
lock
add
adc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
cmp
mov
lock
add
lock
(bad)
(bad)
push
ret
lahf
mov
add
(bad)
(bad)
(bad)
cmp
add
or
add
cmp
add
adc
add
add
add
jg
add
cmp
add
lock
mov
mov
pop
movs
add
lock
add
lock
add
lock
(bad)
(bad)
inc
daa
scas
fs
in
mov
(bad)
(bad)
inc
add
or
add
cmps
mov
pop
sti
add
fadd
cmp
ret
xchg
(bad)
jg
jbe
or
jg
cmps
(bad)
or
xor
in
xchg
imul
(bad)
ss
stc
icebp
adc
xchg
jp
dec
(bad)
out
pop
jmp
nop
push
sbb
pop
push
mov
cmps
scas
fild
add
stc
scas
xchg
cmp
pop
iret
inc
rcr
aaa
inc
inc
mov
mov
fistp
in
fcom
add
jl
add
or
lock
add
xor
repz
out
imul
fs
jns
in
pop
and
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
jl
popf
out
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
cmp
enter
add
lock
(bad)
(bad)
jmp
std
fisub
ss
push
pop
and
sahf
std
mov
out
xor
movs
pop
outs
or
sbb
mov
sbb
xor
imul
mov
mov
pusha
dec
loopne
jne
inc
(bad)
bound
and
add
add
add
or
(bad)
(bad)
dec
jno
or
rcl
(bad)
(bad)
inc
lock
add
inc
add
lock
add
cmp
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
xor
in
aad
push
retf
jno
xchg
test
stos
mov
popf
mov
and
dec
jnp
jp
int
inc
fimul
clc
inc
repz
pop
sub
dec
movs
int3
(bad)
(bad)
adc
xor
sbb
push
or
in
int
inc
jae
mov
les
and
lds
sub
hlt
jno
cmp
fstp
mov
mov
add
imul
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
call
retf
add
aam
add
lock
(bad)
(bad)
call
fcomp
cmp
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
jmp
out
inc
add
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xchg
xlat
fadd
lock
add
and
add
add
add
jg
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
add
in
inc
add
scas
retf
pop
shl
add
cmc
xchg
gs
push
xchg
test
aad
pop
loop
add
fild
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
and
add
lock
inc
add
pop
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
fld
out
(bad)
pop
add
lock
add
lock
add
jmp
lds
mov
rol
jge
and
(bad)
mov
std
(bad)
and
push
fild
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
sahf
cmp
(bad)
fbld
add
lock
add
lock
add
push
pusha
add
push
pusha
add
or
add
jne
add
(bad)
(bad)
(bad)
(bad)
fucomp
inc
leave
jb
xchg
ja
add
(bad)
mov
inc
movs
and
xchg
add
cmp
push
dec
sub
push
dec
push
sub
push
adc
xchg
sbb
loope
shl
xchg
jmp
(bad)
(bad)
(bad)
jmp
pop
jb
aas
add
lock
dec
add
lock
add
ret
dec
ja
shl
cmp
push
cli
xor
test
jb
ja
push
in
push
jmp
cwde
jbe
jne
sbb
inc
xchg
adc
pop
jle
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
jp
retf
jg
add
lock
dec
add
lock
(bad)
(bad)
dec
xchg
xor
sar
(bad)
inc
add
lock
add
sub
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
adc
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
repnz
add
into
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
jl
jp
mov
add
lock
push
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
addr16
dec
adc
(bad)
mov
jae
mov
mov
mov
mov
in
and
mov
jg
push
ror
int3
adc
loop
add
lock
(bad)
(bad)
dec
and
inc
dec
and
add
lock
(bad)
call
add
add
add
(bad)
adc
call
leave
jbe
mov
and
(bad)
sbb
fild
mov
mov
clc
fst
out
jno
(bad)
(bad)
xlat
cli
popa
or
mov
jns
jnp
mov
sbb
data16
hlt
out
or
(bad)
les
jmp
mov
pop
popf
inc
mov
int3
sbb
sbb
adc
dec
inc
sub
add
aas
and
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
adc
pushf
sti
mov
cmp
cmp
(bad)
fldcw
fdivr
or
fwait
cmp
rcl
mov
pop
(bad)
pop
pop
(bad)
jno
in
shl
lock
dec
inc
sbb
mov
add
add
test
add
xchg
mov
aas
daa
ret
adc
lock
(bad)
push
add
lock
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
addr16
push
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
not
jmp
add
add
add
imul
in
ins
xchg
int3
xor
pop
fdivr
jle
push
repz
lea
int3
ds
ins
les
sub
jp
bound
lods
cli
pop
cmp
pop
push
and
popa
jmp
call
adc
in
(bad)
das
inc
les
or
ins
and
loopne
mov
ins
inc
je
sahf
outs
mov
mov
inc
aaa
pop
lea
inc
loope
pusha
lds
cli
sub
and
scas
(bad)
pop
pusha
test
add
cwde
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
lock
cmp
lock
add
add
add
push
add
lock
(bad)
(bad)
jmp
cwde
test
mov
(bad)
push
add
jbe
add
push
repz
add
add
lock
(bad)
call
mov
add
pop
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
call
xor
add
cmp
add
stc
out
lock
add
outs
stos
add
add
add
add
add
addr16
add
add
add
not
add
fmul
test
or
pusha
sbb
and
iret
adc
js
cmc
loop
xchg
cld
lods
outs
and
fwait
xor
rcr
pop
imul
xchg
push
jo
mov
rcr
mov
inc
xor
popa
and
inc
adc
xor
push
push
stc
outs
mov
jl
mov
lock
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
lock
cld
add
ins
cld
add
lds
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
ret
jg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
push
adc
out
fwait
xor
add
mov
inc
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
ret
cmp
iret
test
and
xchg
gs
mov
iret
ror
inc
pushf
popa
faddp
sti
adc
pop
fstp
mov
es
xor
pop
push
and
pop
hlt
push
cld
outs
cmp
pop
xchg
fldcw
adc
inc
test
xor
fcomp
jns
mov
movs
std
mov
push
jmp
enter
aam
jnp
xor
icebp
mov
adc
repnz
xchg
pusha
loope
jl
daa
xor
sub
push
daa
stos
out
ins
scas
aaa
fisubr
mov
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
arpl
mov
sub
lock
add
lock
lock
add
push
add
lock
add
(bad)
push
add
int3
out
lock
out
lock
add
xor
add
add
add
cmp
add
(bad)
(bad)
(bad)
inc
jg
and
xor
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
push
push
add
dec
lock
(bad)
push
add
lock
(bad)
(bad)
jmp
fs
push
daa
dec
add
sar
(bad)
call
aaa
jge
adc
add
sar
(bad)
dec
rol
lock
add
xor
add
out
mov
add
cmp
mov
xchg
imul
test
shl
mov
add
adc
xchg
jp
retf
fisttp
aas
(bad)
fidivr
rcl
sub
add
(bad)
(bad)
(bad)
jmp
jmp
mov
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
dec
adc
arpl
lock
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
dec
je
pop
or
xchg
popf
retf
mov
mov
mov
popf
mov
aad
rcl
xor
(bad)
je
inc
add
lock
(bad)
(bad)
push
sahf
aad
pop
sbb
fistp
(bad)
(bad)
dec
in
int3
add
fdivrp
cmps
cmp
add
dec
cmp
cdq
mov
int3
xlat
lock
in
jmp
or
in
jb
xlat
call
stc
ss
or
mov
push
push
(bad)
(bad)
(bad)
call
scas
xchg
(bad)
cmp
push
xor
add
cdq
stos
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cwde
mov
add
les
loopne
sub
mov
pusha
retf
bound
push
or
push
iret
cmp
popf
cmp
adc
jecxz
repnz
sbb
hlt
jle
sbb
adc
sbb
add
(bad)
(bad)
(bad)
jmp
push
jno
push
add
sar
(bad)
dec
add
lock
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pushf
loope
sbb
mov
mov
xchg
sub
addr16
jno
out
lea
aas
mov
push
dec
cmp
pop
js
jecxz
cmp
mov
ds
or
adc
out
push
add
fsub
es
(bad)
fidiv
adc
cmp
mov
push
mov
loope
ficom
ja
popa
lock
jge
and
ins
jg
lods
inc
jae
jmp
div
and
mov
mov
(bad)
(bad)
(bad)
inc
test
cmp
adc
xor
add
mov
push
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jns
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
push
pop
add
(bad)
pop
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
adc
test
mov
sub
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
out
inc
aaa
pop
push
add
lock
lock
mov
jge
and
jne
jl
dec
xor
mov
aas
push
stos
jo
popf
add
xchg
retf
dec
adc
test
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
std
jbe
jbe
mov
inc
pop
add
cli
iret
mov
dec
nop
das
movs
mov
dec
inc
ret
scas
dec
push
pop
mov
xor
add
cld
xrelease
inc
inc
pop
sub
bswap
adc
sbb
pop
mov
jg
fiadd
ja
cdq
test
dec
cmps
inc
addr16
pop
adc
add
xchg
adc
mul
sub
mov
cdq
in
shl
mov
jno
test
pop
scas
(bad)
loopne
fdivr
or
mov
(bad)
dec
push
or
sub
jmp
test
mov
mov
int3
retf
ror
(bad)
dec
adc
ret
mov
aam
mov
sbb
push
shl
xchg
add
cmp
add
xor
repz
pop
rcl
mov
shl
lock
or
mul
mov
sbb
nop
jno
test
ja
jmp
ds
jns
or
pop
test
xchg
mov
mov
sub
inc
repz
jmp
daa
test
cmc
dec
mov
sbb
cmc
add
div
and
ror
in
aaa
ret
movs
push
xchg
cwde
sbb
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
ss
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
in
arpl
gs
add
lock
(bad)
(bad)
(bad)
cmp
sbb
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
cmps
scas
push
ret
xor
add
mov
lock
out
adc
bound
icebp
sub
sub
pop
sbb
jg
dec
mov
shl
(bad)
pop
and
mov
and
lods
scas
movs
fcomp
(bad)
shl
movs
and
pusha
cmps
mov
call
mov
cmp
outs
jl
cld
pop
push
sbb
rol
mov
xor
xchg
sbb
cmps
out
js
mov
stos
out
dec
and
(bad)
test
stc
dec
adc
popf
stos
cmp
or
in
push
mov
and
and
in
inc
xor
out
xchg
lock
add
pusha
add
lock
add
adc
add
(bad)
(bad)
(bad)
call
jbe
je
(bad)
(bad)
(bad)
cmp
add
mov
add
call
(bad)
(bad)
jmp
int
rcl
lock
(bad)
call
add
and
add
lock
(bad)
(bad)
(bad)
clc
addr16
xor
mov
popa
add
add
(bad)
push
add
lock
(bad)
(bad)
call
jne
add
xchg
mov
(bad)
(bad)
inc
sub
lock
add
mov
and
hlt
les
stos
fwait
js
adc
push
jns
and
nop
aad
push
popa
test
sar
retf
out
or
pop
pop
or
sti
inc
retf
inc
jae
xchg
inc
ss
lds
stc
cdq
loope
mov
and
push
xor
loope
mov
xor
shl
add
cmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jae
movs
and
iret
sbb
or
push
sbb
jecxz
mov
xchg
js
add
or
(bad)
cdq
adc
pop
cmp
mov
stc
xor
dec
push
into
(bad)
mov
mov
mov
mov
test
clc
pop
xor
cli
jg
jbe
aaa
in
cmp
test
mov
mov
inc
inc
imul
repnz
xchg
sub
clc
add
shl
sahf
push
js
pop
gs
(bad)
hlt
sub
pop
or
inc
add
pop
jno
add
xchg
mov
(bad)
mov
gs
jbe
jae
dec
mov
or
mov
sub
(bad)
std
xchg
popa
movs
jno
sbb
cwde
dec
lock
hlt
in
adc
jge
pop
in
clc
xchg
pop
(bad)
cmp
adc
ret
jmp
add
lea
ret
arpl
mov
ror
mov
push
lahf
aad
sahf
xchg
inc
lods
dec
and
adc
imul
stos
ror
rcr
adc
jecxz
loope
out
(bad)
mov
ins
cwde
sub
jo
sbb
xor
retf
nop
push
inc
mov
jae
loop
mov
mov
fiadd
pop
stc
dec
xchg
sbb
mov
or
cmp
xchg
sti
sbb
pop
xchg
jecxz
xchg
inc
shl
shr
add
add
add
add
mov
out
out
add
lock
(bad)
call
nop
add
lock
add
lock
add
lock
add
or
add
add
add
scas
add
rol
int
sahf
push
sub
in
(bad)
jecxz
cld
xor
call
sbb
call
pop
pop
cmp
xlat
cld
sub
cmp
pop
aaa
mov
loopne
fistp
daa
or
dec
or
sub
xchg
pusha
xor
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ror
jecxz
and
mov
nop
in
push
adc
xor
and
and
sub
pop
xchg
mov
lods
sbb
jle
jmp
fsub
pop
rcl
and
add
inc
xor
adc
add
lock
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
lock
add
std
pushf
add
push
add
lock
(bad)
(bad)
dec
mov
stc
pop
adc
ret
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ins
lods
add
push
ins
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lock
add
lock
sub
xchg
rcr
add
add
sar
(bad)
dec
cmc
add
lock
add
lock
add
lock
lahf
mov
mov
fwait
or
and
push
arpl
dec
xchg
sbb
pop
in
xchg
pop
outs
lea
dec
imul
pop
cmc
test
push
add
add
sar
(bad)
push
add
lock
add
lock
add
lock
dec
dec
xor
mov
sti
pop
inc
(bad)
pop
aaa
movs
movs
pop
imul
shr
rol
clc
mov
cli
fisttp
out
scas
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
cmp
into
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
xor
movs
dec
cwde
cmps
retf
pop
inc
outs
ins
aam
mov
and
fiadd
cmps
xchg
fcom
jnp
lods
fcmovb
sar
call
sbb
push
cmp
outs
mov
ret
mov
adc
push
popa
sbb
out
mov
push
(bad)
dec
mov
nop
in
addr16
retf
ins
loope
add
lock
mov
lock
xchg
mov
inc
and
sar
(bad)
call
add
pop
add
lock
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
(bad)
dec
add
lock
scas
add
xlat
jne
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jp
mov
iret
jno
outs
mov
cld
lods
loopne
jo
pop
dec
retf
cmp
pop
(bad)
aad
shl
mov
mov
test
mov
imul
cmp
cmp
xlat
or
retf
std
dec
sub
jecxz
mov
mov
icebp
ds
dec
fwait
jl
add
lock
add
add
aam
jns
test
leave
shr
adc
loope
out
cmp
mov
mov
fwait
or
push
loopne
je
or
xor
sbb
out
aad
(bad)
shr
cmps
out
sahf
(bad)
jle
push
jecxz
imul
cld
sub
dec
icebp
movs
cmp
ret
loopne
xor
adc
cmp
cmps
arpl
add
shl
div
pop
movs
cmp
add
dec
cmc
ficomp
jmp
and
jmp
in
pop
add
mov
xor
jecxz
dec
add
into
daa
mov
inc
mov
push
imul
mov
add
lock
push
stc
mov
or
test
mov
adc
dec
jp
lods
test
pushf
iret
xor
jne
mov
sub
(bad)
lods
ins
sahf
outs
xchg
mov
mov
pop
cmps
mov
cmps
lods
xchg
sub
mov
leave
cmc
sub
mov
js
mov
push
dec
push
bound
mov
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
das
and
mov
shr
fidiv
pop
repnz
xor
sahf
repnz
hlt
xchg
fstp
cmp
cmp
jns
(bad)
bound
adc
sub
cwde
or
lods
(bad)
mov
fidivr
sub
loop
xor
or
pop
sti
sbb
mov
jbe
les
jo
pop
sub
(bad)
hlt
xor
retf
sbb
pop
push
push
inc
fisttp
mov
xchg
loope
int
rol
adc
adc
cmp
(bad)
scas
jg
jmp
pop
sub
sub
cdq
enter
jns
ds
fisttp
or
jmp
xchg
cmp
lock
xchg
fldcw
stc
pop
jbe
inc
fld
xor
mov
or
jl
movs
add
cmp
aaa
retf
test
jle
mov
int
in
mov
sbb
pop
jae
sub
pop
sbb
inc
fild
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
(bad)
xchg
mov
add
cmc
mov
lock
add
add
add
sub
(bad)
dec
(bad)
mov
mov
(bad)
loope
out
test
ins
push
xchg
pop
clc
cmp
xor
inc
arpl
inc
xchg
rol
pushf
jo
ja
pop
add
out
cmp
cmps
scas
jl
mov
nop
push
data16
cmp
scas
iret
xor
js
xchg
idiv
xchg
cmc
push
and
sub
or
fs
adc
mov
add
mov
push
adc
out
adc
dec
out
inc
sbb
push
jmp
fld
(bad)
test
aam
cmp
je
js
or
dec
fld
sbb
jge
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
jo
jge
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
fidivr
lods
aas
ud2
cmps
xchg
lock
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
adc
mov
add
out
jle
lock
dec
imul
dec
(bad)
jno
sbb
fsub
mov
inc
movs
jmp
cdq
out
cs
adc
inc
int3
aad
sub
push
enter
inc
jg
bound
xor
inc
call
jb
jge
jl
sub
retf
mov
call
hlt
popa
lods
scas
loop
inc
or
mov
inc
add
lea
mov
jg
jle
retf
loopne
add
pop
xor
push
xchg
pop
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
imul
add
lock
test
lock
jg
cli
dec
ret
jmp
repz
sahf
movs
push
inc
jge
ret
ins
not
push
cmp
push
or
hlt
push
xchg
rcl
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
or
xor
ficomp
xchg
bswap
cwde
cli
cmps
lods
sbb
and
xchg
jo
push
into
stos
into
pop
sbb
dec
mov
scas
fdivp
add
sbb
inc
in
inc
or
inc
inc
mov
mov
scas
sbb
add
jae
add
repz
add
mul
scas
cmp
pop
scas
loop
sub
push
leave
sbb
jle
adc
xor
addr16
test
cli
xchg
movs
data16
or
sbb
cmp
inc
cdq
nop
gs
repz
aas
sbb
test
xor
ins
sar
int
(bad)
jecxz
jge
inc
sub
and
std
test
in
xchg
neg
mov
cs
outs
imul
mov
inc
aas
nop
icebp
(bad)
test
pop
mov
jecxz
xchg
cmp
jmp
sti
push
shl
gs
shl
cmp
or
xor
retf
ins
inc
dec
pop
pop
imul
rcr
aad
hlt
and
stos
fstp
in
test
pop
push
test
mov
sbb
outs
dec
sbb
int3
shl
std
adc
xchg
xchg
jge
mov
(bad)
test
mov
sbb
dec
push
retf
not
push
cs
and
cld
add
and
add
and
cli
add
out
push
retf
inc
mov
sbb
aad
mul
icebp
dec
xchg
imul
jb
pop
jmp
rol
add
nop
push
jmp
jle
or
aam
rol
or
add
mov
cdq
sar
lds
or
mov
or
pop
push
dec
sar
sbb
cmp
popa
xchg
pop
in
push
push
adc
pop
xchg
fucom
mov
inc
leave
lock
dec
pushf
repz
push
mov
and
mov
in
jmp
push
push
pusha
jnp
outs
jno
dec
je
out
pop
sub
out
int3
jno
add
pop
xor
fwait
arpl
scas
fisttp
std
outs
gs
mov
aaa
inc
inc
dec
push
jbe
dec
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
rcr
xor
mov
lock
(bad)
(bad)
push
add
ret
bound
add
ret
(bad)
(bad)
call
(bad)
sub
inc
int
add
pop
mov
mov
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cli
and
jl
add
cld
mov
lock
mov
mov
sbb
(bad)
(bad)
std
inc
push
or
sbb
call
push
mov
add
scas
dec
clc
fisubr
inc
inc
idiv
sbb
bound
shl
(bad)
sbb
sub
xor
popf
movs
pop
cli
sysenter
push
dec
outs
shl
cld
scas
sbb
inc
fmul
mov
add
(bad)
(bad)
(bad)
jmp
jb
nop
mov
lock
(bad)
(bad)
cmp
rol
inc
rol
stos
xchg
enter
inc
sub
cmp
(bad)
add
mov
pmaxsw
or
rcl
mov
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fnstcw
dec
add
lock
mov
lock
out
and
and
mov
dec
bound
ins
add
mov
jns
sub
jl
inc
jns
mov
add
lock
(bad)
(bad)
call
xor
push
or
add
ret
(bad)
(bad)
inc
add
lock
dec
add
and
lock
add
sbb
add
(bad)
(bad)
(bad)
push
loop
lods
test
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
leave
cli
sub
test
add
jp
add
rcl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
scas
cmp
add
(bad)
(bad)
(bad)
(bad)
out
and
out
inc
sub
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
and
add
lock
xchg
add
add
add
int
add
js
add
jp
add
(bad)
(bad)
(bad)
(bad)
cld
pop
cld
clc
sub
add
sar
(bad)
call
add
add
add
add
add
add
add
add
add
jb
add
mov
add
rcl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
in
inc
pop
xchg
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
int
dec
xchg
jl
popf
enter
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sahf
lock
movs
add
fild
add
and
cwde
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
inc
push
inc
mov
mov
(bad)
(bad)
(bad)
(bad)
dec
out
cmc
sbb
add
lock
cwde
add
jge
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jl
fcmovne
(bad)
add
sub
jmp
mov
(bad)
xor
pop
lods
adc
xor
inc
inc
cmp
sub
cdq
push
scas
pop
sbb
and
sbb
retf
(bad)
jbe
out
xchg
inc
daa
mov
test
std
push
mov
mov
cwde
dec
add
sti
out
push
mov
xor
je
(bad)
shl
imul
dec
mov
movs
shr
mov
test
enter
ss
ficom
repz
add
dec
mov
add
inc
sahf
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
xchg
fisub
cmp
sbb
add
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
pop
cmps
aad
jmp
lock
add
add
add
add
lock
(bad)
(bad)
call
punpckhbw
ss
lock
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
push
test
scas
mov
lahf
add
add
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
jmp
xor
add
imul
add
sar
sub
add
push
add
lock
add
add
xchg
loop
pop
add
std
mov
lahf
sub
add
push
xchg
pop
fldcw
and
add
rcr
dec
adc
mov
sub
pop
adc
ins
jge
imul
adc
mov
push
dec
(bad)
stos
pop
shl
lock
and
mov
xchg
push
xor
adc
mov
mov
shr
sbb
fidivr
xchg
inc
retf
stc
and
stc
push
cmp
adc
mov
(bad)
iret
movs
adc
or
vmptrld
push
out
xor
fwait
pushf
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
pop
add
lock
mov
lods
push
popa
xchg
outs
mov
or
mov
dec
in
fcmovbe
push
pusha
sbb
mov
cld
bound
lods
data16
xor
(bad)
sti
and
xchg
jo
stos
lods
mov
fadd
rol
dec
pusha
and
xchg
xchg
jnp
ins
xchg
add
add
add
add
add
dec
xor
add
add
lock
(bad)
(bad)
inc
adc
sbb
in
std
test
(bad)
(bad)
call
mul
icebp
adc
adc
pop
popa
shl
dec
pcmpgtd
xor
fisttp
(bad)
dec
rcr
mov
int3
pop
clc
pop
in
loopne
loope
shr
adc
adc
add
pop
or
ret
push
pop
aam
enter
cwde
xchg
pop
cmp
lods
inc
movs
inc
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pushw
xor
add
(bad)
(bad)
(bad)
push
pop
dec
icebp
jnp
add
sar
(bad)
jmp
retf
outs
push
ret
retf
arpl
cmps
icebp
into
sub
dec
test
add
cld
or
fstp
jmp
pop
cmp
sbb
pusha
jp
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
sbb
add
inc
cmps
add
push
sar
pop
sub
and
xchg
aas
xchg
mov
std
aad
repz
cmp
jl
inc
inc
cmovae
imul
enter
je
mov
push
lods
inc
daa
mov
sar
mov
loopne
fs
ss
mov
lahf
jecxz
mov
repz
test
adc
test
lahf
xor
out
imul
sbb
int3
push
es
push
cmp
and
cmp
les
ret
and
add
call
push
add
push
pop
hlt
int3
lahf
xchg
push
pop
sahf
repz
jb
adc
mov
shl
pop
cmp
aas
xchg
call
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
movs
fimul
cmp
add
push
mov
lock
(bad)
(bad)
push
stos
imul
xchg
stos
add
sar
(bad)
push
mov
lods
das
shr
cwde
mov
cwde
jnp
adc
ins
push
mov
clc
mov
sub
idiv
outs
js
inc
cli
addr16
jo
inc
push
cmp
xchg
retf
sbb
into
ror
jmp
mov
pop
dec
lods
loope
or
cmp
int3
(bad)
cmc
push
jns
push
int3
sbb
mov
push
test
in
inc
test
mov
xchg
sub
xchg
dec
sbb
and
dec
js
sbb
in
xchg
sub
add
rcl
cld
jbe
daa
call
xor
fsubr
cmp
pop
dec
repz
mov
add
cmps
mov
add
dec
mov
and
mov
lea
jecxz
das
sbb
clc
in
xchg
int
(bad)
sar
mov
in
xchg
in
jae
stc
inc
mov
and
mov
mov
or
fs
out
lock
sub
shl
mov
sub
test
pusha
aam
jl
imul
loopne
adc
(bad)
pushf
push
adc
adc
jno
lods
and
ds
jnp
jbe
lahf
cmp
sub
dec
mov
sub
lock
push
out
(bad)
(bad)
addr16
lods
adc
lea
cmps
in
movs
inc
jg
mov
adc
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
call
div
add
lock
lods
add
(bad)
in
mov
jmp
pop
or
push
scas
rcl
scas
mov
add
(bad)
sub
xor
scas
scas
push
je
dec
mov
arpl
daa
cdq
pop
and
cmp
fidiv
jae
pusha
or
xor
inc
dec
cld
pop
clc
xchg
and
pushf
fs
cli
fdivr
pop
cwde
cmps
pop
jae
lahf
jne
pusha
gs
scas
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
js
jns
mov
dec
xor
fwait
cdq
mov
push
lods
or
mov
popf
dec
pop
data16
sub
ss
test
lods
mov
or
jb
adc
jl
lea
sti
outs
sub
movs
xor
hlt
(bad)
push
mov
(bad)
pushf
jbe
push
and
in
sti
repnz
mov
mov
xor
jns
sub
repnz
mov
shl
mov
cmp
mov
push
mov
mov
mov
stc
call
or
cmp
imul
inc
lock
jg
fs
push
xlat
jno
in
and
add
mov
outs
call
nop/reserved
fcomp
(bad)
je
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ja
jmp
lock
cmp
(bad)
(bad)
call
xor
push
mov
mov
lock
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
pushf
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
sub
mov
lock
add
sbb
lock
add
add
lock
(bad)
(bad)
call
wbinvd
xchg
mov
lock
(bad)
inc
add
lock
add
jmp
add
popa
in
push
icebp
icebp
(bad)
push
fdivr
dec
sub
lock
pop
xchg
stc
shl
xor
out
push
(bad)
(bad)
adc
mov
loope
lss
sti
cmp
push
mov
mov
jmp
jae
dec
mov
fsubr
push
lods
fimul
adc
mov
stos
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
call
cmp
jo
out
sub
sub
icebp
or
sahf
pusha
fld
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
nop
mov
add
lock
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
push
lods
add
lock
mov
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
fisub
cmp
inc
shr
lock
add
add
add
gs
add
ds
pop
mov
pushf
cwde
xor
mov
sub
aas
jl
adc
loope
xchg
scas
mov
mov
mov
jmp
push
out
imul
pop
pop
pop
and
daa
sub
push
fistp
and
push
push
arpl
add
mov
cdq
out
jp
xchg
ror
mov
adc
mov
dec
mov
pop
movs
sahf
mov
movs
ss
sbb
add
aad
mov
push
stos
push
xor
nop
movs
mov
xor
in
adc
mov
in
sub
jmp
ins
push
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
hlt
mov
add
sbb
rol
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
(bad)
cmp
add
lock
(bad)
(bad)
(bad)
jle
loopne
leave
cwde
shr
(bad)
inc
add
add
add
and
jne
in
cmp
mov
cld
dec
stos
cmp
sub
fisubr
inc
ficomp
nop
sub
leave
js
nop
lods
sbb
ja
clc
pop
jae
pop
scas
adc
lock
adc
jmp
hlt
lea
jns
or
and
dec
in
lods
int
fistp
or
rol
iret
sar
pop
bound
jecxz
jl
js
mul
xchg
jno
into
push
jecxz
dec
mov
adc
jle
(bad)
or
rol
add
add
sar
(bad)
jmp
add
fwait
add
lock
add
lock
add
lock
(bad)
(bad)
call
and
push
lods
(bad)
call
sar
(bad)
(bad)
jl
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
mov
dec
add
add
cmp
add
add
add
push
add
lock
add
lock
add
lock
add
or
(bad)
(bad)
call
je
add
stc
addr16
(bad)
inc
add
cld
jnp
lock
(bad)
(bad)
jmp
jl
sar
pop
mov
in
mov
dec
push
mov
cs
mov
and
mov
(bad)
xor
mov
cmp
test
adc
inc
mov
scas
jns
(bad)
fpatan
(bad)
enter
or
(bad)
shl
(bad)
mov
xor
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
push
add
lock
(bad)
(bad)
(bad)
clc
sar
pop
mov
mov
dec
cmp
dec
dec
dec
push
jno
pop
pusha
iret
das
test
rcl
sbb
cmps
mov
dec
into
mov
jbe
xchg
or
cld
and
dec
addr16
sti
mov
sub
mov
mov
xor
mov
jmp
sub
dec
fwait
imul
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
and
out
inc
sub
pop
jle
mov
stos
popa
cmp
fbld
xor
and
aad
popf
test
loopne
aaa
mov
sbb
cmp
mov
push
pop
jecxz
push
aam
xchg
jl
outs
inc
retf
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jl
ja
cmp
ss
jg
not
ror
pop
retf
into
popf
sar
push
out
add
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
dec
cli
jb
das
add
add
lock
(bad)
(bad)
(bad)
std
sub
out
adc
add
sar
(bad)
(bad)
jp
add
jp
add
sldt
adc
xchg
add
inc
pop
add
and
or
jl
in
dec
adc
outs
mov
hlt
or
mov
xchg
dec
inc
retf
pop
mov
repnz
out
push
or
icebp
xor
sub
mov
pusha
mov
mov
add
inc
add
lock
add
or
(bad)
(bad)
push
in
xchg
mov
(bad)
inc
add
out
add
call
cli
pop
xchg
or
push
adc
sub
loope
push
mov
loopne
mov
pmaxub
and
and
bnd
cmps
shr
lds
int
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
movs
outs
jp
test
add
(bad)
(bad)
(bad)
dec
fs
jge
int
lock
(bad)
(bad)
dec
add
lock
and
add
lock
jmp
rcr
mov
sbb
test
cmps
push
adc
adc
retf
call
ins
cmp
jae
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
fisubr
pop
adc
ror
add
sar
(bad)
call
call
popa
fldenv
mov
xlat
(bad)
jge
icebp
in
ins
retf
fnstsw
sbb
cmc
retf
add
into
sbb
out
xchg
shl
enter
(bad)
xchg
das
pop
xlat
lods
imul
pop
mov
xchg
popa
xchg
xor
call
mov
in
lahf
dec
xchg
sti
jb
(bad)
cmp
cmp
adc
out
ficomp
xlat
nop
xchg
and
lods
cmp
jne
test
dec
aas
or
jb
push
idiv
push
xlat
mov
loop
cmps
add
push
xchg
ja
mov
xchg
cld
xor
xor
or
nop
jp
fldcw
icebp
jmp
daa
xchg
cmps
pushf
jbe
imul
jge
or
or
scas
test
mov
lods
sahf
jno
stos
cmps
jae
sub
cmp
shr
pushf
pop
les
adc
hlt
stos
nop
jmp
(bad)
shl
(bad)
(bad)
(bad)
dec
jl
test
add
(bad)
jmp
(bad)
(bad)
call
mov
scas
(bad)
psrld
lock
(bad)
(bad)
mov
ret
push
add
and
sbb
in
dec
stos
ds
xchg
pop
jo
repnz
fidivr
in
adc
mov
mov
xchg
in
xor
movs
cmc
lock
mov
arpl
popa
lahf
dec
icebp
(bad)
or
jnp
loop
aam
add
lock
leave
add
adc
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
int3
aas
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
scas
sbb
add
lock
lock
add
(bad)
(bad)
(bad)
(bad)
mov
aad
popa
not
add
sar
(bad)
jmp
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
loopne
jle
sbb
fisub
test
xor
pop
push
je
push
repnz
push
add
lds
data16
mov
mov
out
scas
bnd
mov
addr16
jb
loope
push
inc
loope
push
pop
mov
es
inc
xor
shr
(bad)
(bad)
(bad)
(bad)
inc
or
loop
or
hlt
add
lock
add
(bad)
cli
jg
and
add
pop
clc
inc
ins
mov
xlat
add
sahf
in
mov
inc
nop
ds
(bad)
enter
cs
fucomi
leave
adc
retf
xchg
or
xor
iret
ror
adc
pop
test
jmp
inc
cmp
es
sub
aaa
jne
pop
or
pushf
mov
push
test
lock
(bad)
(bad)
jmp
in
inc
cmps
pop
clc
ret
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
add
ret
cmp
add
aam
add
popa
dec
xchg
xchg
mov
xchg
ret
dec
rol
fisubr
push
fdivr
imul
popa
cwde
repz
lock
add
das
jb
lock
repnz
fld
(bad)
out
call
fpatan
scas
mov
bound
je
cwde
cdq
cmp
sub
(bad)
pusha
push
dec
in
jb
inc
jmp
dec
mov
icebp
push
add
pop
dec
push
or
sbb
mov
or
jecxz
sub
mov
shl
sub
(bad)
outs
cmp
sub
shl
pop
inc
and
mov
repnz
addr16
mov
outs
xchg
pushf
dec
dec
repnz
int3
adc
pop
xchg
lea
cmp
and
scas
mov
sete
data16
jl
loop
xchg
or
add
or
jae
add
add
add
add
add
jae
add
push
add
lock
add
lock
add
mov
add
mov
xor
lock
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
sbb
add
lock
lock
aaa
das
movs
imul
int
out
enter
cwde
mov
inc
pop
mov
jmp
sub
mov
pop
pop
ins
xchg
sub
mov
mov
int
add
lock
imul
lock
or
push
stos
jbe
push
push
mov
fsub
lods
jbe
in
mov
cmp
jbe
mov
in
cs
(bad)
repnz
loope
imul
cmp
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
div
outs
mov
data16
aam
xchg
leave
add
je
mov
mov
xor
jne
ds
jp
or
and
mov
lock
dec
add
adc
add
add
int
jne
or
aad
push
add
dec
pop
mov
sub
mov
xor
pop
push
fs
and
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
and
shr
add
add
add
mov
mov
add
and
fst
(bad)
xchg
and
jo
dec
xchg
test
nop
cld
mov
loopne
gs
add
pop
push
sub
out
push
int3
js
mov
mov
jl
ret
popf
pushf
sahf
mov
mov
les
cdq
leave
push
(bad)
popf
pop
test
fidivr
iret
leave
adc
or
push
xlat
mov
cdq
push
push
mov
cmp
(bad)
fldenv
mov
and
pop
cmp
add
push
mov
jge
mov
outs
dec
imul
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
(bad)
fidiv
xchg
add
lock
add
lds
lock
add
push
rol
lock
add
push
add
adc
mov
fcom
test
sbb
jg
pop
scas
cmps
out
jge
loop
jb
and
in
fild
scas
jae
test
ret
imul
add
add
pop
add
sahf
hlt
inc
push
scas
cdq
mov
js
daa
and
dec
out
pop
mov
jmp
stos
dec
sub
pusha
jmp
in
dec
stc
call
mov
pushf
sahf
mov
dec
fstp
rcr
sbb
add
xor
mov
jle
mov
mov
xchg
jne
sub
mov
jge
and
xchg
add
add
add
add
add
clc
or
call
sub
lahf
aad
fwait
adc
xor
ins
xchg
shl
and
enter
push
xchg
xchg
push
mov
inc
test
(bad)
mov
add
adc
pusha
adc
lock
dec
cld
mov
retf
sub
imul
inc
mov
pushf
(bad)
and
pop
hlt
aaa
xchg
and
pushf
in
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sub
or
add
xor
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cdq
add
dec
icebp
add
or
xchg
xor
inc
enter
dec
leave
jne
pusha
gs
fidivr
(bad)
and
iret
adc
aas
fstp
sub
lds
mov
out
xchg
add
lock
cmp
add
add
add
ss
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sub
push
(bad)
or
add
lock
repz
push
add
lock
or
and
add
aas
int
in
cmps
dec
aas
loopne
rcl
cmp
fs
out
add
add
mov
pop
add
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
mov
test
outs
aaa
add
lock
(bad)
(bad)
inc
inc
jmp
adc
stc
add
sar
(bad)
push
je
adc
sahf
loopne
jmp
out
fcomp
cmc
push
fdivr
cli
xchg
stos
inc
jno
push
cmp
mov
xchg
sbb
jb
sahf
std
adc
out
cwde
leave
dec
stos
inc
in
fdivr
js
sti
or
mov
push
shl
jnp
xlat
scas
lods
sbb
and
aam
shr
sub
lock
add
lock
add
(bad)
(bad)
(bad)
inc
jnp
shl
add
lock
(bad)
dec
add
pop
add
lock
add
add
add
jnp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
outs
push
add
(bad)
out
es
mov
xchg
test
imul
(bad)
xchg
(bad)
push
test
push
(bad)
pop
addr16
lahf
inc
imul
jno
sahf
dec
mov
dec
xchg
fldcw
dec
add
mov
inc
ds
mov
push
sub
adc
scas
popf
ror
fdivr
dec
retf
and
push
mov
mov
rcr
sbb
sbb
stos
test
xchg
inc
sbb
arpl
shl
ret
fnstsw
and
iret
jnp
scas
out
test
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
push
add
pop
push
or
imul
loop
cmp
lea
mov
icebp
adc
jae
jns
and
push
ds
mov
xor
pop
shl
mov
loope
push
sub
dec
push
fcom
ret
test
dec
mov
sar
sbb
cdq
add
push
add
and
jnp
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
outs
pop
inc
push
xor
shl
fadd
jb
mov
mov
js
pop
jae
mov
sti
and
cmp
outs
adc
pop
imul
dec
movs
fcmovbe
jg
mov
sub
mov
cmps
retf
inc
sar
out
cmovs
and
in
sub
test
add
add
xchg
lock
add
add
sbb
add
fidiv
jg
neg
push
out
jbe
pop
jb
dec
icebp
pop
cmp
lock
(bad)
mov
ins
xor
pop
pop
ins
mov
push
ins
push
inc
xlat
into
sbb
test
int
retf
repz
push
mov
sbb
and
dec
adc
call
mov
or
mov
loope
adc
stos
ficom
frstor
sub
pop
cs
adc
jae
ror
jmp
cmps
ins
xchg
(bad)
int
jecxz
add
lock
add
add
add
ja
pop
ds
cmp
call
add
lock
add
sbb
add
(bad)
ds
push
stc
stos
repz
jg
cmc
sbb
push
lds
out
mov
cmp
imul
faddp
call
fstp
test
daa
dec
pop
outs
cmp
test
ins
mov
std
mov
lock
and
adc
push
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
pop
out
add
lock
add
pop
sahf
fbstp
or
pop
and
call
call
jbe
xchg
ins
or
nop
movs
ret
stos
and
fnsave
inc
cmp
and
test
sub
mov
in
cld
js
jmp
mov
lea
in
stos
adc
pusha
stc
outs
int3
inc
neg
jnp
lahf
clc
sbb
bnd
adc
sub
mov
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
add
jl
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
xchg
push
add
add
test
add
mov
add
sbb
add
lock
add
neg
sar
rcl
loope
sar
(bad)
inc
mov
add
test
add
push
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fbld
inc
jnp
pop
mov
es
sub
add
adc
add
lock
mov
(bad)
popa
inc
add
lock
add
test
test
shl
sar
(bad)
inc
add
inc
add
lock
lods
mov
inc
xchg
push
dec
cwde
in
pushf
dec
push
fldenv
mov
adc
shr
dec
or
cmc
and
pop
cli
call
xor
add
(bad)
(bad)
(bad)
jmp
pusha
neg
add
add
sar
(bad)
inc
sub
pusha
mov
les
xor
aam
cdq
jns
repnz
(bad)
das
out
std
test
push
je
retf
mov
cld
and
mov
push
jp
les
pop
jp
pop
mov
outs
bound
dec
ins
xor
xchg
in
add
aad
or
pop
retf
lds
xor
in
push
fsub
icebp
inc
mov
adc
add
sbb
add
push
dec
test
(bad)
or
push
add
jns
mov
sub
mov
jg
(bad)
call
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
fwait
xor
add
ret
adc
lock
push
add
add
add
add
add
push
dec
add
or
add
pusha
push
mov
stos
lea
cmps
mov
inc
daa
inc
lea
jle
out
or
cmp
fstp
(bad)
add
push
cmps
sub
push
push
not
ds
mov
jge
addr16
inc
imul
dec
and
cmp
ds
inc
std
mov
aam
movs
and
xor
push
xchg
or
add
pop
pop
(bad)
rcr
pop
inc
add
lock
(bad)
(bad)
(bad)
mov
pushf
jns
fist
lock
(bad)
push
add
cmp
test
add
lock
(bad)
(bad)
cli
popa
add
lock
add
lock
add
add
lock
(bad)
(bad)
dec
ss
js
outs
xor
add
sar
(bad)
push
add
lock
(bad)
(bad)
inc
movs
shr
pusha
iret
cmp
sbb
lock
(bad)
call
jne
mov
xchg
icebp
pop
arpl
rcl
and
adc
bound
adc
stc
retf
stc
fcomi
fcomp
or
out
inc
inc
pop
dec
jno
gs
in
push
adc
stos
clc
fnstsw
ror
inc
outs
pop
add
lock
add
sub
push
xchg
xchg
(bad)
(bad)
dec
jmp
lock
add
mov
add
sub
add
adc
dec
xor
cwde
mov
lock
fiadd
sbb
mov
lahf
movs
test
jns
jns
or
imul
lahf
stc
push
sub
xbegin
mov
xchg
xchg
jmp
movs
out
sub
mov
push
push
stc
mov
idiv
sbb
xchg
repz
and
ret
pop
js
and
sti
jae
inc
call
not
inc
push
mov
pushf
mov
xchg
sbb
outs
(bad)
mov
mov
dec
xchg
push
push
push
mov
not
sbb
fld
pop
mov
ins
xlat
push
xchg
adc
fcomip
fiadd
mov
call
stos
repnz
xlat
mov
pop
push
les
mov
xlat
add
fs
push
mov
sub
mov
retf
shr
sbb
mov
add
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
add
lock
pop
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
js
xor
add
lock
add
add
add
shl
aam
ins
imul
fld
push
lock
add
lock
and
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
loopne
xor
xor
adc
jno
sub
cmps
pop
cmps
sub
loope
adc
lea
sbb
sbb
pusha
clc
sahf
and
add
(bad)
(bad)
(bad)
call
sti
movs
push
aaa
and
(bad)
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
leave
pop
fwait
sub
idiv
scas
add
lock
and
xchg
jbe
cwde
loop
retf
es
cmp
lock
add
adc
mov
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
and
data16
lock
(bad)
(bad)
call
fwait
dec
mov
dec
sbb
sar
(bad)
call
daa
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
jmp
(bad)
(bad)
(bad)
dec
mov
dec
xor
add
mov
add
inc
addr16
shl
jo
mov
retf
dec
inc
jge
enter
mov
pop
lods
or
aaa
fistp
fst
clc
jle
sub
les
hlt
hlt
mov
(bad)
mov
loop
icebp
scas
daa
and
jnp
sub
leave
bound
arpl
or
mov
push
jmp
cmp
inc
lods
(bad)
mov
push
cmp
ds
dec
iret
mov
jns
cmps
mov
pop
pop
xchg
ins
outs
out
xor
test
daa
pop
and
sbb
xor
stos
push
fidivr
mov
jecxz
jmp
cmp
xchg
and
js
inc
mov
aad
adc
pop
stos
in
sahf
xlat
repz
mov
test
pop
sti
and
lock
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
nop
inc
(bad)
or
add
(bad)
(bad)
(bad)
call
aas
push
pushf
test
lock
(bad)
(bad)
dec
(bad)
(bad)
call
add
sub
lock
(bad)
dec
add
jns
or
(bad)
push
imul
sbb
aaa
ja
and
das
mov
lahf
repz
js
sub
mov
test
xchg
adc
or
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
sbb
fwait
in
xor
int3
loop
in
call
jne
mov
mov
mov
lods
iret
sbb
ds
jge
cmp
ins
cmp
jns
dec
fst
adc
push
xchg
inc
out
mov
xor
push
imul
dec
cmps
mov
lods
jo
rcl
fstp
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
icebp
lods
dec
mov
add
(bad)
(bad)
(bad)
inc
daa
scas
fs
in
scas
sub
(bad)
call
ret
dec
and
adc
xor
push
sbb
dec
xor
gs
cmc
(bad)
out
adc
jno
xchg
mov
and
fld
out
in
cmp
mul
scas
and
add
add
test
cmp
rol
cmps
stos
sti
loope
fiadd
add
fdivrp
sbb
mov
xchg
or
adc
xchg
xchg
dec
push
dec
inc
int3
cmp
out
sbb
sub
pop
icebp
mov
mov
test
ins
add
lock
(bad)
(bad)
jmp
test
lock
(bad)
dec
out
xor
pop
and
sar
push
lea
out
sub
dec
fucomi
ja
inc
je
jl
xor
xor
in
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
jns
and
lock
rol
or
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jae
add
lock
xor
lock
add
lea
add
jo
das
dec
dec
imul
sbb
in
rcl
and
ss
push
ja
xchg
int3
stos
add
mov
test
jne
inc
ins
inc
xor
leave
jle
xor
push
inc
aad
mov
arpl
idiv
enter
cdq
shl
push
mov
xor
test
jae
stos
jmp
lahf
leave
popa
jae
ja
loop
jb
scas
cmp
mov
mov
mov
fs
mov
test
and
aad
xor
bound
cmc
lods
(bad)
mov
jmp
lds
mov
xchg
mov
xlat
lahf
push
fdiv
dec
sbb
jg
xchg
adc
sbb
mov
pop
jbe
add
lock
(bad)
(bad)
jmp
fisubr
pop
adc
xor
lock
(bad)
call
mov
jp
enter
or
sti
iret
xlat
fdiv
dec
cmp
dec
pop
mov
retf
or
jno
dec
pop
push
test
sbb
rcr
loope
add
cwde
(bad)
aas
sbb
clc
test
add
add
inc
(bad)
(bad)
repnz
(bad)
call
jnp
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
(bad)
fist
jmp
lock
(bad)
(bad)
inc
push
out
jo
pop
movs
cli
inc
sub
xchg
push
jmp
pop
sbb
mov
test
mov
aas
dec
xchg
and
lods
movs
aaa
in
popa
int3
test
push
fisub
and
inc
ret
les
add
lock
add
mov
in
add
cwde
mov
add
(bad)
(bad)
(bad)
jmp
(bad)
movs
inc
add
lock
lock
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
add
add
and
add
ins
jns
lock
add
shl
add
push
add
and
pop
add
mov
sbb
mov
out
mov
sbb
mov
out
out
xchg
jo
and
mov
fmul
pop
or
ins
ins
inc
ins
push
push
ret
clc
mov
push
mov
jno
mov
xchg
mov
fldenv
scas
xchg
sysexit
add
jmp
mov
or
push
xchg
add
lahf
sub
and
mov
fnclex
jle
pop
sbb
xor
jno
mov
popf
pop
rcr
sbb
movs
ins
out
mov
outs
bound
inc
sbb
hlt
dec
pop
pop
gs
in
dec
retf
sar
div
in
pop
cmp
movs
fmul
lock
adc
jbe
popa
mov
mov
add
add
sar
(bad)
(bad)
jmp
add
lock
add
lock
add
lock
add
jo
leave
add
sbb
add
add
add
add
add
outs
loop
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
cmp
add
cmp
lock
(bad)
(bad)
jmp
jne
add
jne
add
sar
(bad)
(bad)
jge
add
add
add
add
add
push
in
dec
mov
fst
push
sbb
xchg
jmp
sar
movs
add
sub
test
(bad)
mov
push
mov
imul
mov
ret
data16
(bad)
lea
lea
xor
or
hlt
and
hlt
jbe
sub
mov
sbb
cmps
in
ds
jne
dec
cmp
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
out
pop
(bad)
ficom
or
or
stc
(bad)
cwde
daa
jbe
call
jecxz
sub
adc
fcomi
or
sub
stos
mov
fsubrp
pop
dec
daa
movs
mov
push
nop
dec
mov
in
cli
mov
pop
rol
add
add
sub
add
(bad)
(bad)
(bad)
push
inc
out
enter
out
cmp
lock
(bad)
push
mov
push
mov
sub
js
dec
adc
out
adc
xchg
jnp
push
xlat
pop
dec
test
pushf
mov
jg
and
mov
push
retf
lock
jnp
jnp
xor
movs
in
lods
test
or
jmp
xchg
sub
pop
sub
jb
pop
into
pop
inc
sbb
add
lock
add
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
push
mov
add
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
or
(bad)
add
sar
(bad)
dec
add
lock
imul
lahf
inc
add
pop
int3
rol
in
test
xlat
cmc
mov
retf
jmp
leave
stc
push
xchg
or
xchg
popa
jbe
arpl
xchg
ins
mov
cmp
inc
xlat
xchg
lods
jo
jno
dec
lahf
in
outs
dec
retf
popa
or
xor
fmulp
xor
or
push
xchg
mov
ins
mov
jle
add
jl
add
mov
lock
mov
add
das
xchg
xchg
test
jg
jp
push
lea
icebp
fwait
adc
loopne
mov
mov
push
imul
rol
retf
fdivr
inc
push
jns
enter
dec
or
adc
cmp
popa
adc
int3
rcr
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
leave
(bad)
sub
aas
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
test
addr16
jo
add
add
add
loopne
cmp
mov
dec
pushf
sub
call
sbb
xor
sbb
jno
push
ins
sti
and
jmp
loop
adc
fwait
pop
push
xchg
test
imul
cmp
scas
inc
or
sbb
add
lock
inc
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
(bad)
lock
add
lock
(bad)
(bad)
call
loope
pop
push
mov
ficomp
sub
push
mov
pop
into
and
movs
jo
ret
mov
(bad)
and
add
lock
nop
add
add
add
inc
add
aas
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
or
hlt
inc
int3
outs
inc
add
add
push
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
add
mov
mov
mov
inc
js
les
shl
mov
test
sbb
aam
mov
(bad)
pop
ja
xchg
sbb
repz
cmp
into
stc
inc
or
jecxz
add
xor
retf
ret
mov
test
rcl
xchg
shl
and
(bad)
cli
dec
mov
ss
mov
mov
sub
and
push
je
jbe
xchg
into
inc
mov
and
test
(bad)
repz
sbb
jae
mov
mov
or
scas
mov
rcl
in
inc
fcomi
or
pop
test
xor
ins
(bad)
inc
int
push
aas
cmp
push
mov
cmc
ret
add
jge
lods
cs
int3
(bad)
mov
mov
sbb
stos
jb
mov
loope
cdq
push
arpl
jecxz
popf
jg
je
sub
add
enter
cwde
and
repz
adc
les
pop
and
jl
pop
outs
mov
add
pop
mov
sub
jne
push
hlt
cwde
sbb
scas
adc
aad
cdq
jnp
or
push
sbb
cmp
(bad)
icebp
icebp
repz
jb
push
jmp
add
add
add
cmp
aam
sar
(bad)
dec
hlt
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
dec
add
lock
in
lock
add
push
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fwait
dec
mov
dec
sbb
xor
lock
test
push
xchg
outs
fs
(bad)
sbb
ins
adc
cmps
adc
fiadd
stc
xor
cmp
xchg
sub
aam
out
ss
jae
and
(bad)
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
dec
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xlat
cmp
xchg
or
mov
add
adc
add
lock
shl
or
inc
push
dec
jge
repnz
xchg
or
leave
in
out
leave
xchg
(bad)
outs
(bad)
jo
sub
mov
pop
fucomp
push
cmp
in
cmp
adc
lock
add
add
add
and
cli
cmc
aam
or
inc
inc
add
in
fdivr
sbb
int3
lods
or
push
test
push
cld
in
jl
adc
push
jl
stc
daa
add
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
add
xchg
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fstp
ds
add
lock
lock
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
sub
lock
xchg
jmp
inc
sahf
stos
mov
push
call
out
es
xchg
mov
les
aaa
mov
mov
test
aad
ins
dec
add
dec
jmp
cmp
sbb
xor
push
adc
xor
inc
scas
jg
xor
add
(bad)
(bad)
(bad)
push
jecxz
sub
aad
mov
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cdq
jno
(bad)
push
call
cmp
add
sbb
add
cmc
fdiv
fbstp
loope
int
dec
add
push
and
into
inc
adc
test
loopne
out
cmp
bound
mov
addr16
movs
sbb
pop
outs
push
cmc
cs
adc
in
jmp
or
jmp
icebp
jbe
stos
push
or
push
jle
jp
adc
mov
fnstsw
mov
pop
fxch
shl
push
add
add
lock
(bad)
(bad)
call
lods
xchg
or
pop
int3
dec
add
sar
(bad)
call
xchg
aas
and
(bad)
fild
jmp
ins
xchg
fdivr
pop
mov
dec
imul
into
aas
fild
rol
loope
imul
sbb
xchg
dec
js
add
lock
(bad)
call
rol
dec
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
pop
sub
sub
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
adc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
pop
ins
mov
xor
add
xor
imul
dec
xlat
nop
arpl
js
cwde
test
mov
pop
xchg
das
mov
loop
call
mov
pop
dec
clc
jne
sbb
mov
test
sar
add
lock
(bad)
(bad)
call
in
faddp
loopne
xor
push
add
sar
(bad)
inc
push
sub
movs
add
rol
xor
scas
stos
adc
repnz
pop
lahf
shl
or
ins
push
sti
or
and
movs
dec
mov
idiv
jnp
mov
cmps
adc
pop
fiadd
retf
enter
daa
mov
addr16
xor
mov
fadd
sub
imul
movs
and
sbb
into
add
sti
(bad)
nop
sub
sbb
mov
in
mov
cmp
ins
cmp
pop
cld
xchg
adc
add
adc
xor
std
dec
sbb
adc
cmps
sub
fs
mov
jmp
cmps
nop
(bad)
mov
mov
jae
jg
call
mov
inc
dec
out
jge
enter
clc
icebp
lock
lock
add
push
xor
add
add
add
cmps
ds
fwait
and
lock
add
sbb
mov
inc
lahf
in
xchg
sahf
addr16
sbb
cld
pop
mul
xchg
cmc
leave
mov
lods
out
jecxz
xor
cmp
cmps
xchg
ret
es
or
push
push
gs
add
and
jmp
xchg
in
call
stos
mov
je
cli
xchg
dec
cmp
aas
repz
pusha
imul
lock
ror
cmc
xor
call
into
add
bound
xor
adc
push
loope
setne
add
dec
div
scas
inc
data16
or
lock
pushf
jmp
mov
sub
mov
les
lea
popf
stos
xchg
jl
adc
xchg
shl
into
in
sub
ss
cmp
pop
fs
add
lock
add
sbb
or
mov
(bad)
inc
add
lock
push
add
outs
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
dec
push
add
add
add
add
add
(bad)
(bad)
(bad)
push
mov
inc
mov
push
add
sar
(bad)
call
mov
fldenv
in
pop
test
mov
test
popf
mov
fwait
dec
in
jge
dec
sti
in
sbb
lods
pop
ret
xor
(bad)
mov
scas
push
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
mov
dec
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
add
lock
pop
add
aad
add
add
add
and
cmp
loopne
lds
cmp
fcomp
jl
mov
scas
sbb
mov
sub
add
lods
test
mov
test
sub
das
movs
nop
inc
bound
add
lock
cmps
inc
mov
pop
adc
pop
rcr
xchg
xchg
pop
in
lahf
loop
aas
enter
in
pop
push
jl
pusha
call
pop
lock
pushf
aas
sahf
movs
push
loop
aad
cwde
ja
xchg
rol
cld
rcr
jle
sub
rol
stos
xchg
leave
and
cmps
push
and
dec
jle
dec
scas
xchg
pop
test
xchg
lock
shl
lahf
xchg
dec
leave
dec
add
ficomp
cmp
cmp
int
xlat
pop
out
inc
and
aad
adc
cmp
fdivr
in
adc
adc
adc
mov
sub
mov
js
ins
loopne
cli
lea
mov
dec
into
ins
push
xchg
and
aam
stos
push
xchg
inc
xchg
mov
outs
pop
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
mov
leave
inc
add
lock
add
adc
add
add
add
ror
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
js
jns
add
add
lock
add
cmp
add
(bad)
(bad)
(bad)
push
mov
and
lock
(bad)
inc
pop
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jno
cli
push
add
test
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
sub
data16
ret
movs
cdq
lods
cmp
jb
mov
and
push
jae
aaa
imul
rol
xchg
enter
(bad)
sbb
js
sub
fcmovnbe
push
mov
jne
adc
stos
call
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
adc
mov
add
lock
push
add
add
add
mov
adc
add
add
add
push
add
and
add
(bad)
(bad)
(bad)
inc
sbb
ficomp
add
sar
(bad)
inc
add
lock
and
add
lock
add
lods
sbb
and
xchg
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
into
and
add
jb
add
push
add
and
addr16
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fidivr
outs
fs
lods
pop
test
fimul
(bad)
(bad)
(bad)
jmp
lods
push
int
pop
enter
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
pushf
out
and
add
lock
imul
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
sar
call
lods
cli
adc
adc
aas
sbb
mov
sub
xor
idiv
adc
sub
mov
inc
pop
xlat
sbb
in
mov
or
test
mov
jl
(bad)
or
(bad)
scas
std
jle
test
aam
xchg
pop
mov
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
js
jno
xchg
add
jge
or
cmps
js
out
or
rcr
sbb
fnsave
cmp
sahf
xor
jecxz
xor
or
(bad)
iret
ds
inc
add
add
add
add
add
cmp
add
(bad)
(bad)
(bad)
push
lds
outs
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
cmp
outs
add
imul
push
xor
pop
jbe
dec
and
jae
or
adc
add
cli
sub
aad
xchg
cmps
pop
mov
sub
test
nop
inc
(bad)
push
jecxz
sbb
sub
dec
jl
or
or
jnp
pop
sahf
lock
je
sbb
pop
icebp
cmps
cmp
add
xor
add
lock
cmp
lock
or
jns
call
cwde
jmp
dec
stc
lar
sbb
sbb
add
pop
push
enter
lock
(bad)
(bad)
inc
pop
and
jb
std
sbb
lock
(bad)
jmp
mov
shl
arpl
jmp
(bad)
add
ins
add
or
add
xor
add
(bad)
(bad)
(bad)
dec
push
mov
lock
(bad)
call
mov
lock
add
js
fs
xchg
and
std
pop
enter
jo
inc
sti
dec
add
add
add
adc
lock
add
lock
add
lock
(bad)
(bad)
(bad)
mov
inc
mov
xlat
jno
lock
(bad)
push
mov
idiv
dec
dec
mov
xchg
add
mov
cs
mov
iret
ret
cmp
icebp
push
cmps
mov
fimul
push
xchg
push
cmp
push
in
mov
push
inc
imul
(bad)
(bad)
(bad)
jmp
addr16
adc
jae
lock
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
push
lock
jae
lock
xor
inc
pop
nop
ret
mov
mov
retf
div
and
xchg
mov
jl
push
add
mov
cmc
jbe
mov
push
je
test
and
jae
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
jmp
jne
push
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ja
es
sbb
xor
add
cmp
repnz
mov
retf
xchg
inc
and
and
sti
test
xor
das
adc
mov
mov
mov
fisubr
mov
inc
int
mov
fidivr
sbb
or
xor
(bad)
mov
lock
pop
cmp
mov
pop
shl
and
(bad)
ins
loopne
dec
cmp
dec
or
xchg
aaa
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
lods
sbb
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cmp
inc
ins
mov
lock
mov
lock
imul
add
add
out
cmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jg
and
adc
add
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
sub
cmp
pop
add
lock
add
and
inc
add
jns
mov
int3
xchg
push
jmp
inc
leave
call
add
xor
movs
cmp
adc
sbb
call
icebp
pop
push
adc
int
imul
push
stos
test
pushf
ror
xchg
cmp
lahf
movs
je
push
popf
jo
test
pop
es
outs
fldenv
pop
lahf
pop
dec
lods
test
or
aas
dec
sub
or
mov
mov
adc
sub
or
and
or
nop
mov
mov
inc
outs
or
cs
or
xchg
sub
out
les
lock
add
add
add
push
add
lock
add
(bad)
add
jo
out
mov
inc
aaa
int3
push
add
or
or
test
mov
rcr
dec
mov
js
icebp
or
scas
sbb
popf
inc
leave
push
push
mov
push
sub
mov
leave
inc
sub
mov
jbe
ficomp
push
popf
outs
ss
jge
or
stos
xor
mov
loopne
xchg
mov
cdq
dec
cli
sub
sbb
and
push
fbld
call
in
div
shr
test
sbb
and
and
push
mov
push
sub
gs
dec
mov
sahf
add
and
add
lock
cld
add
inc
inc
add
add
add
adc
add
(bad)
(bad)
(bad)
inc
pop
loope
imul
adc
mov
dec
das
(bad)
pop
adc
(bad)
xchg
cmp
shl
test
adc
ins
bnd
call
pop
jno
sbb
and
mov
outs
stos
popf
gs
fstp
stc
cmp
or
cmp
jnp
xlat
dec
add
lock
(bad)
(bad)
jmp
test
lock
(bad)
inc
jle
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
js
repz
mov
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
dec
push
xor
add
or
jg
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jge
dec
xor
add
(bad)
(bad)
(bad)
dec
mov
rcr
add
sar
(bad)
call
movs
nop
push
ss
aad
sti
(bad)
ss
clc
lea
sbb
iret
xchg
sub
or
inc
popf
xchg
cmp
mov
lahf
aaa
pop
adc
inc
push
push
xchg
jle
loope
push
xchg
in
loope
test
lock
xchg
cmps
jecxz
fxch
fidiv
in
inc
xchg
sub
not
cli
mov
xor
(bad)
nop
push
cwde
inc
aas
xor
xchg
call
push
cdq
test
jns
adc
ja
pop
adc
push
cld
retf
xor
mov
mov
mov
dec
test
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
add
lock
or
inc
push
sub
xor
into
jg
dec
and
cmps
mov
call
in
in
and
jo
popf
jmp
mov
sub
add
lock
xchg
data16
iret
repz
jmp
out
add
cmp
pop
mov
sbb
lock
inc
std
adc
jo
pop
daa
pop
scas
popa
mov
idiv
aad
stc
adc
(bad)
jbe
arpl
into
sbb
jmp
pop
xor
jne
jmp
imul
aaa
cmps
int
pusha
add
outs
out
mov
xor
pop
leave
repnz
inc
(bad)
cmc
cmc
adc
push
mov
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
cmp
lahf
mov
jns
sbb
adc
daa
push
cmp
add
lock
(bad)
(bad)
push
lds
test
lock
(bad)
inc
out
pop
xchg
add
add
add
(bad)
call
imul
add
add
sbb
add
sbb
add
mov
add
add
add
iret
fadd
lock
mov
add
fwait
ja
lock
lock
add
lock
add
push
aaa
jne
mov
push
addr16
and
repz
mov
inc
dec
mov
scas
dec
jmp
cmp
fld
jo
in
jne
push
fadd
into
xchg
mov
mov
out
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
ret
mov
jmp
or
push
pop
xor
mov
(bad)
fcom
hlt
mov
hlt
and
pushf
fs
pop
adc
int3
mov
jnp
imul
push
arpl
popf
mov
sub
cmp
jmp
and
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
outs
jg
mov
add
add
add
or
add
(bad)
(bad)
(bad)
(bad)
cmp
jb
jmp
(bad)
(bad)
jmp
xchg
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
loop
mov
add
call
add
lock
(bad)
(bad)
call
in
ret
cmp
mov
lock
(bad)
inc
stos
mov
not
mov
sbb
pop
mov
arpl
je
push
dec
xor
and
out
mov
hlt
push
dec
cmp
mov
jne
(bad)
or
icebp
xchg
pop
in
sub
jmp
out
xor
or
adc
push
cmc
int3
or
push
(bad)
daa
adc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ds
neg
pop
add
lock
(bad)
(bad)
jmp
push
mov
lea
add
sar
(bad)
dec
loop
pop
cmps
addr16
adc
cld
push
out
idiv
mov
cdq
aas
fs
adc
arpl
sub
dec
push
int3
jp
ds
xchg
xor
pop
inc
mov
mov
xchg
vorpd
mov
add
fwait
lock
add
add
mov
pop
add
cli
push
add
add
add
dec
add
call
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
push
mov
repnz
mov
adc
ins
repnz
aas
imul
jecxz
or
bound
mov
jnp
je
fstp
adc
ror
mov
in
jg
(bad)
add
add
add
push
add
lock
(bad)
(bad)
jmp
mov
jbe
jbe
add
sar
(bad)
jmp
test
in
(bad)
(bad)
xor
addr16
int
sbb
(bad)
jne
dec
fcomi
rol
add
add
sub
add
push
outs
sbb
mov
sbb
mov
pop
clc
(bad)
sahf
ds
jp
push
outs
es
mov
xchg
pop
not
inc
ficomp
sub
xchg
adc
popa
(bad)
fcom
fdivp
fidivr
sub
imul
inc
push
icebp
inc
dec
add
out
sti
sub
push
retf
pop
push
dec
retf
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
call
mov
sar
(bad)
(bad)
cmp
add
cmps
push
add
jmp
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
push
jne
add
xchg
sbb
(bad)
pop
jmp
jp
jbe
loopne
jp
jae
xchg
in
call
inc
xlat
or
lock
add
(bad)
(bad)
(bad)
inc
(bad)
ror
add
sar
(bad)
jmp
add
(bad)
(bad)
(bad)
push
adc
pusha
sbb
and
jmp
(bad)
(bad)
dec
push
push
out
cwde
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fild
test
dec
cdq
add
jp
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
jae
mov
fwait
out
add
lock
add
test
xchg
lahf
pop
jnp
push
push
imul
pop
mov
das
dec
xor
and
test
leave
(bad)
dec
lock
add
jne
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
add
add
lock
add
inc
add
lock
(bad)
(bad)
push
and
lock
mov
leave
xchg
pushf
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
pop
jp
inc
mov
xlat
pushf
add
cmp
sbb
xor
and
jbe
push
repz
aam
cmps
mov
sti
outs
add
outs
pop
inc
pop
es
jns
sub
adc
dec
sbb
movs
std
movs
pop
out
pop
and
adc
and
aas
lahf
das
mov
retf
pop
xor
in
dec
sbb
pop
(bad)
fdiv
imul
pop
sbb
dec
cmp
mov
int3
cmp
xchg
psrlq
sbb
mov
lea
sbb
call
inc
es
in
ins
popf
xor
sbb
inc
dec
outs
test
sbb
fwait
cld
popa
jge
lock
inc
pop
enter
sahf
xchg
sbb
mov
pop
hlt
add
mov
push
push
lahf
hlt
clc
push
adc
add
mov
popa
jb
pop
pop
scas
jb
dec
(bad)
cmp
ins
sub
lods
add
mov
jnp
cwde
jne
(bad)
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
icebp
in
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
fnstenv
add
or
loope
push
mov
mov
inc
mov
pop
loop
leave
leave
test
cmp
lock
add
jns
outs
add
push
cld
(bad)
leave
sar
cvtpi2ps
jle
gs
mov
test
hlt
lods
scas
xchg
sbb
scas
nop
fnstenv
xor
and
ret
cmc
rcl
mov
pop
pop
cmp
shl
pop
pop
(bad)
sar
inc
test
gs
arpl
xor
popf
mov
cli
add
add
add
inc
aad
lock
add
add
add
push
add
lock
(bad)
(bad)
(bad)
call
mov
daa
sar
(bad)
jmp
add
inc
aad
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
addr16
add
lock
add
add
add
les
add
cmc
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
(bad)
shl
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
rol
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
jl
add
fwait
movs
dec
jns
pushf
repz
push
dec
inc
lock
(bad)
sahf
adc
sbb
loopne
outs
push
aas
adc
(bad)
(bad)
(bad)
(bad)
cmp
rcl
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
popf
adc
xor
add
sub
add
lock
or
lock
add
or
add
clc
ret
jns
mov
inc
push
outs
jmp
outs
int3
and
xchg
test
inc
ror
dec
xor
pop
mov
mov
push
add
and
add
push
add
jo
call
adc
dec
stos
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
lods
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
lock
xchg
mov
lock
add
or
cli
rol
test
jmp
add
xor
push
jo
pop
iret
sub
adc
pop
ret
mov
fisubr
cli
test
out
dec
add
push
add
lock
(bad)
ins
or
cmp
fnstenv
mov
add
add
mov
xor
mov
adc
jge
jo
pop
mov
outs
test
add
push
add
adc
dec
push
in
lds
mov
jmp
in
data16
inc
loope
cmp
xor
loope
jge
xchg
daa
loop
mov
sub
int3
pop
sbb
add
push
(bad)
ins
ja
add
sub
mov
add
lock
jbe
lock
cld
push
mov
outs
cdq
mov
std
outs
xor
stos
test
lds
cmp
and
add
fnstcw
(bad)
jae
movs
add
add
add
add
add
add
in
add
or
add
loop
jbe
mov
js
xor
and
inc
imul
icebp
shr
icebp
fucomp
adc
pop
pop
inc
and
out
in
cmp
xlat
sub
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
clc
push
(bad)
clc
xor
inc
add
(bad)
cdq
or
sub
push
aad
movs
mov
ret
clc
mov
aaa
mov
data16
(bad)
dec
xor
dec
fmul
sub
cmp
add
fsubp
jge
mov
mov
mov
sub
adc
xor
mov
clc
push
dec
ficom
mov
ins
xor
popf
jg
xchg
sbb
outs
test
dec
out
pop
add
nop
sti
cmp
add
icebp
mov
lea
lock
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
add
xor
repz
test
adc
cmp
arpl
rcr
adc
nop
lahf
das
adc
mov
mov
inc
into
push
cmp
out
out
mov
dec
repz
push
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
inc
mov
lock
add
lock
add
dec
xchg
add
add
add
cs
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
and
add
sub
add
add
add
test
sbb
shr
je
mov
pop
cmp
inc
mov
ror
mov
imul
jb
sub
push
out
xlat
mov
mov
xor
jae
jb
fild
ja
test
xor
test
fs
loope
xor
pop
jb
jmp
cmps
ret
cmp
gs
jmp
lods
xchg
jne
cmc
xchg
mov
mov
xchg
or
xchg
push
inc
cmps
in
pushf
pop
aas
(bad)
adc
dec
mov
jl
push
cwde
pop
mov
add
in
cmc
inc
pop
and
loope
add
arpl
dec
inc
aad
and
out
mov
mov
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
lock
ret
add
movs
retf
add
add
add
dec
add
lock
(bad)
(bad)
jmp
aas
dec
sahf
or
pop
jg
les
lock
(bad)
push
add
lock
(bad)
(bad)
inc
xor
scas
lds
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
pop
sub
add
sub
add
fidivr
mov
xchg
out
pop
jne
mov
sar
dec
sub
push
sub
xchg
adc
cdq
(bad)
stos
jp
jae
push
icebp
in
add
imul
je
shl
cmc
ss
pop
js
jmp
add
lock
xor
add
or
rcr
es
pop
out
xor
(bad)
nop
das
fld
add
and
mov
inc
shl
jecxz
cmp
cmp
test
outs
add
add
imul
add
xor
add
(bad)
(bad)
(bad)
dec
test
add
sar
(bad)
(bad)
jp
add
add
add
xchg
or
(bad)
(bad)
(bad)
(bad)
jmp
retf
(bad)
fidiv
add
lock
int3
add
dec
aad
lock
add
lock
lock
add
lock
dec
add
push
add
adc
add
mov
add
add
add
or
add
sub
add
xor
dec
xlat
lods
and
cmps
add
mov
sub
cs
jae
pop
cmps
call
test
rdtsc
dec
jmp
add
lock
(bad)
(bad)
jmp
test
lock
(bad)
push
mov
mov
mul
sar
(bad)
call
add
lock
add
lock
add
lock
add
add
add
add
add
sub
lock
add
enter
mov
dec
fwait
pop
jae
sub
sub
cmp
in
aaa
mov
mov
xchg
ds
clc
xchg
in
jg
jno
test
jge
je
outs
(bad)
movs
inc
mov
cmp
mov
sub
xchg
sahf
xchg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
addr16
cld
aaa
add
lock
lock
push
dec
and
ret
mov
jb
add
(bad)
mov
fcomp
or
call
sbb
pop
lds
push
call
call
jno
fisttp
push
out
js
enter
dec
push
fs
call
adc
xor
add
(bad)
(bad)
(bad)
(bad)
jmp
add
add
sar
(bad)
(bad)
cmp
cmp
js
in
push
in
rcr
(bad)
les
mov
or
sub
ret
push
dec
mov
or
pop
dec
add
imul
push
shr
ret
arpl
mov
shl
sbb
xor
popa
mov
pop
xchg
xchg
jl
loop
cmp
mov
fild
adc
and
dec
pop
dec
(bad)
rol
sub
pop
ret
pushf
test
lock
(bad)
(bad)
jmp
scas
pop
sub
lock
(bad)
jmp
fistp
cmp
sub
repnz
mov
push
data16
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
imul
add
lock
add
pop
scas
outs
movs
lds
or
xor
jle
sbb
inc
lds
push
or
lea
pop
movs
(bad)
rcl
pop
cdq
cmp
sbb
inc
add
sar
mov
jp
sbb
imul
mov
cmp
outs
js
mov
aaa
dec
(bad)
(bad)
outs
pop
ja
sbb
int
addr16
xchg
mov
jmp
(bad)
(bad)
(bad)
(bad)
call
add
test
lock
add
sub
add
(bad)
(bad)
(bad)
inc
xchg
dec
cli
jb
das
add
fld
lock
(bad)
inc
add
lock
add
add
add
add
add
add
add
or
add
test
add
add
cmp
xlat
repnz
fdiv
xlat
test
cmp
push
or
dec
sbb
cld
nop
js
add
lock
add
or
(bad)
(bad)
call
cmp
sti
movs
fcom
(bad)
(bad)
inc
add
ja
add
inc
add
add
add
or
(bad)
(bad)
jmp
mov
out
mov
sar
(bad)
inc
add
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
mov
lock
fiadd
lock
pushf
into
xor
out
mov
jbe
xor
lock
lds
mov
sub
pop
fs
int
(bad)
cmps
sbb
pop
enter
cdq
sbb
shl
ss
dec
lea
fs
stos
xchg
ja
aad
jg
adc
add
add
add
xor
add
(bad)
(bad)
(bad)
jmp
xchg
jnp
imul
fild
lock
(bad)
(bad)
fucomp
add
or
add
or
add
lock
aad
jnp
(bad)
dec
ror
movs
loope
mov
scas
cmps
xor
sub
cmp
ficomp
cmp
fcom
jmp
jmp
jg
stc
adc
sbb
xor
call
xlat
dec
dec
pop
gs
cmc
add
je
cmp
aas
mov
sub
pop
cs
push
add
stc
mov
xor
adc
ins
adc
add
lock
(bad)
(bad)
(bad)
in
pop
jp
pop
cwde
sub
lock
(bad)
push
add
add
add
mov
add
push
add
and
add
lock
(bad)
(bad)
inc
xchg
xor
jmp
add
sar
(bad)
push
(bad)
dec
pusha
jo
repz
call
call
jbe
add
add
add
inc
add
lock
(bad)
(bad)
jmp
mov
dec
popa
push
loopne
lock
(bad)
inc
popf
mov
xchg
je
(bad)
lahf
jge
in
cli
mov
or
add
sub
data16
or
fmul
int3
test
ins
loope
ja
daa
add
mov
imul
add
and
add
add
add
or
add
das
pusha
add
or
lock
add
jl
add
add
add
add
add
call
add
lock
xchg
call
add
and
pop
add
add
add
aaa
retf
test
cs
jnp
push
add
in
test
jo
mov
popf
pop
ret
aam
daa
das
cmps
mov
jle
ret
into
add
xor
add
add
add
add
add
push
jmp
sub
add
or
fistp
test
jno
inc
dec
imul
pusha
jle
mov
inc
push
stos
out
push
jl
popf
out
addr16
lods
es
pop
dec
xor
add
add
add
add
add
pop
out
aaa
pop
sub
shl
je
div
(bad)
push
cmp
and
or
mov
pop
jmp
mov
sti
out
mov
hlt
xor
lea
add
lock
add
jbe
add
xchg
and
fwait
inc
scas
cld
cwde
mov
xor
sub
mov
pop
inc
retf
add
jno
and
repz
(bad)
ja
jnp
fcmovu
stos
lds
popf
dec
ror
and
xor
cmp
adc
lods
lock
mov
into
fidiv
adc
mov
sub
sbb
jbe
push
aaa
and
jl
mov
daa
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
jecxz
xor
add
out
add
add
add
dec
pop
add
add
add
sahf
daa
and
sub
mov
cmp
inc
sub
call
fstp
inc
popa
and
cmps
pop
mov
cli
add
mov
pusha
pop
inc
cmp
xor
popf
pop
lock
sub
dec
and
hlt
rol
xchg
test
jbe
lods
push
das
adc
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
add
pop
scas
out
retf
add
sar
(bad)
inc
mov
rol
add
xor
add
xchg
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
push
mov
loop
test
mov
arpl
xchg
loop
mov
mov
add
lock
(bad)
(bad)
jmp
test
add
sar
(bad)
dec
add
(bad)
(bad)
(bad)
jmp
call
add
sar
(bad)
dec
cld
add
push
add
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
nop
lahf
mov
jmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fist
jmp
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
or
jg
add
add
add
add
fs
add
jae
arpl
jbe
es
mov
xchg
jecxz
fnstenv
fmul
ror
inc
imul
xchg
jmp
mov
or
cld
rcl
push
aaa
jbe
push
sub
adc
cmp
and
ret
movs
pop
mov
std
cld
push
mov
add
jns
movs
stos
jae
xchg
jle
add
jge
das
mov
mov
in
dec
out
lea
pop
mov
mov
sub
daa
test
scas
shl
gs
push
or
retf
xor
sbb
(bad)
cmp
jle
jmp
and
(bad)
jle
push
nop
jno
std
mov
movs
add
ja
dec
popf
and
add
cmp
add
outs
sub
sub
pop
pop
je
jmp
lock
jo
lahf
push
stos
dec
out
mov
fisubr
iret
adc
adc
aam
cs
add
lock
dec
add
mov
cmp
lock
add
add
add
cmp
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
jecxz
add
lock
icebp
add
lods
mov
dec
jmp
adc
xchg
xor
fisubr
test
and
stos
xchg
mov
aad
jnp
add
shl
imul
mov
mov
lock
add
and
add
(bad)
(bad)
(bad)
(bad)
fmul
add
or
lock
(bad)
(bad)
ficomp
(bad)
cmps
inc
leave
pop
gs
add
jne
shr
call
stc
mov
mov
xchg
stos
pop
cmp
add
add
in
add
in
add
cmps
jp
hlt
lahf
mov
(bad)
int
iret
in
and
push
adc
xor
jno
mov
mov
rcr
shr
push
push
jbe
xor
(bad)
hlt
and
or
jns
int
movups
lds
cdq
adc
and
in
cwde
pop
cmp
cmp
dec
clc
dec
mov
mov
hlt
mov
mov
lock
add
add
add
pop
push
add
scas
gs
inc
fimul
inc
idiv
les
aad
psrlq
jae
loope
cmc
jns
shl
mov
jecxz
push
scas
ja
jno
sbb
fadd
push
adc
pop
pop
gs
in
adc
mov
movs
shl
and
loop
add
lock
(bad)
(bad)
call
adc
pop
and
add
ret
(bad)
(bad)
(bad)
cmp
pop
jmp
sub
and
mov
cli
xchg
mov
jb
in
mov
mov
adc
jne
inc
dec
mov
xor
push
lock
adc
fdivr
cmp
stos
movs
shl
xor
pop
lahf
lea
push
clc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
addr16
xor
lock
add
adc
pop
add
inc
clc
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
mov
push
stc
or
mov
adc
add
xor
add
(bad)
(bad)
(bad)
jmp
xchg
jle
fwait
fs
add
add
ret
(bad)
(bad)
push
ss
push
popf
out
je
in
jmp
adc
push
jnp
jecxz
sub
es
sbb
(bad)
outs
cmp
push
mov
or
pop
dec
hlt
sub
push
xor
std
lds
ja
popa
mov
add
lods
repnz
jns
add
out
jnp
xchg
pop
jo
or
cld
jecxz
call
sbb
mov
pop
sbb
or
inc
rcl
fsubp
cmp
xor
dec
xchg
enter
add
adc
add
add
add
js
cs
mov
mov
cs
inc
and
es
mov
add
mov
cmp
icebp
push
cmp
sub
sub
(bad)
loop
adc
cmp
and
lock
push
sub
jns
pop
bound
cdq
sbb
call
outs
lock
xor
push
retf
jle
pop
stc
adc
iret
push
and
jge
sbb
push
sub
or
out
and
and
adc
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
cmp
add
and
add
sbb
push
outs
lahf
ret
shl
xchg
or
scas
gs
sbb
and
test
outs
cmp
xchg
test
push
pop
hlt
push
mov
mov
(bad)
sahf
jb
pop
sahf
lahf
popa
or
xor
add
hlt
retf
cmp
add
add
xchg
and
xor
mov
mov
sub
jae
jnp
dec
xchg
out
jne
xchg
aam
sub
add
and
stos
add
int
or
mov
cmp
add
add
sar
(bad)
call
test
add
xchg
add
lock
add
lock
add
aas
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
neg
sar
rol
jmp
dec
jnp
add
xor
pop
mov
mov
jmp
scas
loopne
(bad)
ja
fmul
sbb
cmp
movs
les
xor
add
dec
fiadd
inc
xchg
dec
dec
into
ss
pop
add
add
cmp
add
inc
add
out
add
or
add
adc
pop
add
stc
sbb
ret
push
pop
data16
jl
mov
inc
into
daa
sahf
das
and
cli
push
or
or
xchg
test
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fbld
inc
jnp
fst
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
clc
xor
inc
mov
lock
add
xor
(bad)
(bad)
jmp
and
call
add
lock
(bad)
call
shr
jno
jle
or
mov
fistp
xchg
pop
stos
sbb
and
cli
or
inc
mov
add
cmc
dec
jge
sub
jmp
adc
add
pushf
mov
add
and
add
(bad)
(bad)
(bad)
call
pushf
mov
stos
add
lock
(bad)
push
push
sub
mov
mov
xlat
xchg
dec
add
nop
in
in
jbe
sub
push
fcom
xor
mov
adc
and
in
inc
enter
scas
jecxz
xor
pop
pop
add
mov
push
shl
mov
lods
and
dec
icebp
aaa
xchg
cld
je
adc
dec
sub
aad
test
adc
push
pop
jmp
xchg
sbb
adc
js
and
test
and
ret
gs
cmps
mov
shr
rcr
adc
mov
out
out
sbb
jp
(bad)
rol
aam
dec
push
xchg
push
jecxz
nop
dec
nop
xor
dec
add
stc
fimul
cmp
add
add
pusha
mov
add
scas
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
call
dec
int3
adc
push
add
cs
mov
push
lahf
test
sub
jbe
xchg
jne
(bad)
iret
jno
mov
jmp
push
dec
add
and
mov
cli
mov
sbb
div
scas
inc
add
lock
(bad)
(bad)
dec
cmp
(bad)
fild
add
fadd
add
sar
(bad)
call
adc
fild
(bad)
ins
mov
enter
mov
push
ds
(bad)
retf
push
loop
push
mov
out
inc
ja
and
retf
div
daa
xor
jns
xor
mov
push
fs
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
shl
lock
add
add
add
movs
xlat
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
lods
and
add
add
add
sti
sbb
mov
(bad)
(bad)
dec
add
lock
add
imul
add
lods
xor
lds
(bad)
jmp
add
lock
add
add
add
add
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
frstor
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
push
xor
lea
push
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
push
xchg
iret
xlat
jae
les
ficomp
jno
fistp
sti
pushw
xlat
mov
sbb
dec
and
pop
cwde
add
lahf
imul
mov
ret
mov
sub
imul
sub
xchg
push
jle
mov
(bad)
xor
or
repnz
sub
(bad)
xor
sbb
inc
and
cmp
iret
adc
xor
sub
(bad)
lock
ret
mov
sub
imul
sbb
sahf
push
bound
inc
jnp
not
out
xor
out
aad
aaa
push
adc
mov
rcl
into
sub
jb
adc
ret
in
push
mov
shl
push
pop
retf
arpl
lods
mov
aam
mov
into
mov
push
dec
cmp
cld
or
inc
pusha
imul
mov
ss
mov
xchg
xor
and
and
sahf
popa
sbb
out
cld
xlat
daa
jmp
lea
mov
shl
sub
and
push
shr
add
mov
repnz
cmovns
repz
pop
or
daa
mov
shr
push
outs
sar
addr16
aam
scas
cs
dec
jne
or
dec
mov
(bad)
daa
(bad)
push
mov
int3
jns
cmp
mov
cmps
mov
or
inc
push
inc
(bad)
dec
cmps
sar
icebp
repz
rcl
out
pushf
mov
aam
shl
xor
dec
or
add
add
add
mov
add
aam
cld
es
lea
scas
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jo
ins
loope
nop
mov
or
lock
and
cmp
pavgb
nop
or
adc
lods
sub
fimul
adc
sub
retf
push
pop
popa
pop
mov
clc
push
aad
pop
(bad)
in
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
dec
pop
jb
push
dec
add
lock
add
das
out
cmp
inc
jae
xchg
fcom
jns
int3
ret
arpl
iret
jmp
mov
sbb
cmps
clc
hlt
jb
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
jg
out
mov
setbe
lock
add
enter
add
add
(bad)
adc
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
xchg
fcomp
repz
aaa
dec
push
sbb
test
adc
jl
(bad)
pop
adc
fild
daa
dec
cwde
pop
dec
icebp
pusha
jmp
pop
dec
ins
add
pop
(bad)
and
(bad)
fimul
push
jg
sti
cmps
test
mov
xor
dec
adc
push
clc
mov
adc
int3
popf
mov
xor
inc
sti
pop
xchg
in
and
jbe
jns
mov
add
cmp
scas
mov
push
in
in
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
sub
add
xor
push
add
fdivr
lock
add
dec
je
adc
push
jp
cld
dec
jno
(bad)
ds
in
inc
pop
add
dec
ret
cdq
ins
js
js
adc
or
div
cmp
or
add
dec
xchg
inc
cmp
push
shl
adc
pop
fcmovnu
ret
add
pop
cmp
add
(bad)
(bad)
(bad)
(bad)
inc
sbb
jbe
add
lock
lar
dec
adc
hlt
xchg
sbb
jl
stos
dec
in
test
cmp
(bad)
in
xchg
cmp
stc
lock
xchg
sbb
lods
in
jmp
xchg
pusha
add
add
std
imul
lock
add
shr
add
pop
inc
add
add
add
add
add
pop
add
lock
add
adc
add
(bad)
(bad)
(bad)
inc
mov
sar
(bad)
push
add
lock
(bad)
call
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
jnp
jge
add
add
(bad)
(bad)
(bad)
dec
(bad)
dec
sub
clc
xor
sar
(bad)
dec
jmp
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
into
popf
aam
push
push
icebp
mov
dec
or
in
jne
popa
inc
jg
inc
dec
add
out
inc
sbb
in
mov
xlat
jmp
mov
xchg
retf
mov
gs
adc
mov
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
fs
dec
add
add
cli
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
es
idiv
mov
adc
outs
dec
xchg
lds
pop
mov
mov
pushf
sub
stc
test
stc
outs
(bad)
push
xor
add
ins
mov
push
push
mov
repnz
loop
jb
mov
xchg
add
mov
dec
and
popf
or
or
mov
jle
add
add
add
sub
add
cmp
inc
fdivr
popa
shl
inc
and
out
or
outs
xchg
jo
sbb
repz
mov
pop
inc
test
push
inc
mov
jno
dec
dec
int3
add
push
add
lock
add
add
add
push
add
lock
(bad)
(bad)
call
jo
rol
(bad)
(bad)
cmp
add
cmps
int
lock
(bad)
(bad)
dec
add
lock
(bad)
(bad)
(bad)
stc
scas
imul
xchg
pop
add
ret
(bad)
(bad)
jmp
in
and
adc
ins
fidiv
mov
stos
pop
pop
inc
in
imul
pcmpgtd
repz
in
adc
pop
jge
mov
daa
push
nop
int3
int3
inc
icebp
push
push
js
pop
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
into
scas
jge
ret
test
lock
add
pushf
and
es
js
in
sub
jne
pop
cmp
mov
xchg
fwait
call
loopne
fsub
fisttp
and
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
addr16
clc
push
pop
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
fistp
add
push
add
lock
add
or
(bad)
(bad)
call
jl
mov
loop
sar
(bad)
call
add
and
lock
(bad)
(bad)
(bad)
mov
add
and
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
dec
push
pop
add
lock
add
and
add
(bad)
(bad)
(bad)
(bad)
jg
cld
sub
push
add
sar
(bad)
call
add
add
add
adc
add
(bad)
(bad)
(bad)
(bad)
jp
pop
cwde
sub
(bad)
(bad)
jmp
add
lock
mov
call
jmp
cli
push
jge
push
xor
sbb
and
mov
add
xchg
stc
jp
rcr
mov
mov
mov
in
mov
jne
pop
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
xor
ins
add
dec
xchg
cld
mov
mov
lock
(bad)
inc
add
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
loope
add
lock
and
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
test
add
lock
and
lock
add
into
out
lock
add
or
add
(bad)
clc
add
ret
lea
lock
fs
jmp
repnz
sub
les
je
int
aaa
retf
icebp
adc
mov
pop
jmp
ret
or
int3
push
inc
jecxz
int
jno
xchg
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
jecxz
mov
push
jmp
add
or
add
push
add
adc
lock
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
lea
xor
push
aas
and
out
aam
inc
cmp
shl
jecxz
mov
pop
jns
dec
jnp
int
inc
aad
pop
loope
jp
hlt
mov
(bad)
(bad)
(bad)
(bad)
jmp
jbe
mov
inc
imul
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
stc
fsub
push
mov
dec
ret
mov
push
ins
imul
cwde
push
or
jns
push
pop
cmps
fnsave
xchg
out
loope
cmc
in
mov
out
fadd
sbb
xchg
xor
adc
lds
xor
or
cli
cld
ret
mov
cmps
pop
add
fdiv
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
jo
and
fiadd
add
add
add
jmp
scas
sbb
(bad)
(bad)
dec
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fs
je
lock
add
lock
das
add
add
add
add
add
push
cmps
mov
mov
popa
mov
(bad)
and
dec
loopne
dec
lods
sub
shl
jnp
sti
ins
or
jmp
loop
loopne
fstp
cmps
xor
add
add
lock
(bad)
(bad)
(bad)
(bad)
repnz
cmps
sub
lock
(bad)
call
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
movs
or
push
push
sbb
xor
aas
jnp
xor
and
xor
adc
cwde
inc
cmp
fwait
ins
adc
ds
and
sbb
in
mov
inc
mov
dec
inc
jl
mov
rol
mov
mov
jno
aam
shl
bound
adc
dec
shr
adc
leave
sub
and
adc
add
add
add
pop
add
lock
lock
int
leave
pop
rcl
pop
(bad)
js
je
shl
mov
cmp
(bad)
adc
int
mov
loop
jae
lods
mov
enterw
sbb
and
push
pop
cmp
sbb
sub
icebp
or
lea
jnp
sub
pop
mov
lods
enter
psubusw
fild
or
(bad)
in
clc
adc
adc
mov
cli
ds
sub
and
repnz
jge
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
xchg
lock
loope
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
mov
stc
xor
add
(bad)
(bad)
(bad)
jmp
or
fild
lock
(bad)
(bad)
js
pushf
add
rcr
sbb
mov
sub
mov
(bad)
mov
lods
inc
sahf
popa
movs
std
outs
imul
ror
fldcw
and
xor
xor
pop
jge
xchg
mov
arpl
leave
xor
sbb
xor
popa
pop
pop
jmp
mov
and
daa
sti
mov
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
cmp
in
or
cs
retf
cmp
or
add
lahf
adc
scas
dec
mov
or
mov
adc
push
push
pusha
rcr
sti
dec
xor
stos
jno
and
and
xor
clc
(bad)
iret
(bad)
fiadd
cmp
adc
sbb
jno
sub
nop
hlt
pop
out
ja
iret
push
adc
pop
stos
push
adc
es
enter
repnz
in
pushf
adc
xchg
cmp
outs
sbb
or
ins
jecxz
mov
pop
mov
mov
sbb
loop
jbe
stos
dec
push
jecxz
hlt
out
cld
push
aam
pop
imul
dec
sbb
mov
outs
stc
ja
gs
gs
std
call
aad
mov
lock
mov
mov
sahf
sbb
retf
mov
push
mov
stos
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmps
nop
cmp
add
fild
add
lock
out
push
in
out
jecxz
std
sbb
and
xchg
cmp
push
xchg
shl
fwait
or
das
push
mov
nop
jbe
fmulp
sbb
mov
adc
nop
and
sbb
ja
mov
and
sub
jbe
add
xchg
adc
pop
jo
stos
(bad)
je
icebp
adc
ret
fiadd
rcl
ins
hlt
adc
inc
pop
repnz
retf
shr
push
sbb
add
lock
add
add
add
add
add
sbb
adc
aam
lock
pop
das
jne
inc
imul
lods
lods
ins
rcr
out
stos
sub
ret
cmp
jmp
lock
mov
sub
pop
pop
popa
inc
inc
pop
jle
mov
cli
ds
jle
fldcw
push
add
lock
push
or
lock
add
and
gs
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xor
push
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
adc
dec
xor
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
imul
repz
lock
lock
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
loopne
int
ins
jno
add
lock
(bad)
(bad)
inc
iret
cmp
inc
xor
(bad)
call
arpl
rcl
mov
jmp
repnz
adc
sub
xchg
out
add
stos
inc
ss
loop
jmp
adc
mov
ret
sub
aaa
push
sub
idiv
inc
popf
pop
mov
jnp
jp
cmp
push
out
dec
push
sub
imul
cmp
xor
movs
cld
test
neg
add
stos
add
add
inc
jno
es
sbb
mov
clc
dec
movd
imul
repz
add
xchg
pop
call
cmp
jae
inc
push
sti
cmp
xor
mov
popa
mov
inc
fadd
stos
jno
nop
jle
aas
aas
gs
jns
and
sub
repz
retf
jbe
dec
loopne
ss
push
ss
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
jl
in
or
add
inc
test
add
push
aaa
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
loope
mov
add
lock
add
mov
mov
(bad)
(bad)
sti
pop
add
lock
add
lock
rol
push
add
lock
add
lock
add
or
(bad)
(bad)
push
lea
sar
(bad)
call
add
xor
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
or
add
lock
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
arpl
add
lock
add
or
(bad)
(bad)
jmp
les
mov
(bad)
(bad)
inc
add
mov
(bad)
dec
rol
lock
add
xor
add
(bad)
(bad)
(bad)
(bad)
js
and
xor
mov
(bad)
(bad)
inc
add
lock
add
dec
lds
jne
stos
clc
popf
scas
aaa
bound
and
push
stos
in
cld
push
mov
mov
xor
push
inc
mov
push
ins
xchg
hlt
jg
xchg
rcr
nop
adc
add
adc
add
or
add
cmp
xor
aas
pop
add
push
add
lock
js
jmp
mov
imul
int
cmp
popa
(bad)
call
xchg
in
inc
adc
rcr
in
fs
je
dec
cmp
mov
pop
repnz
mov
dec
fadd
cli
imul
and
xor
mov
xchg
jge
sbb
aaa
scas
and
ror
mov
pop
call
into
shl
pop
mov
pop
sbb
ja
loope
dec
pop
and
das
outs
sub
add
retf
adc
les
push
into
cmp
enter
jle
sbb
and
test
ret
test
sub
gs
cdq
inc
inc
sub
jns
outs
enter
test
out
inc
retf
add
outs
mov
push
push
popa
lock
xor
test
daa
sahf
imul
xchg
aam
out
pop
lea
js
loope
(bad)
push
xchg
pop
mov
pop
dec
adc
xor
and
(bad)
shl
pop
push
(bad)
mov
mov
push
cmps
test
(bad)
cmp
clc
lds
in
popa
mov
(bad)
lds
add
pop
mov
pop
mov
fmul
fwait
lahf
aaa
outs
enter
inc
mov
jp
(bad)
cmp
sub
mov
add
add
add
add
add
add
add
add
inc
add
lock
(bad)
(bad)
jmp
and
add
sar
(bad)
push
add
adc
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
in
adc
adc
dec
(bad)
jne
push
mov
xor
xor
push
adc
(bad)
pop
jbe
fcom
lods
pop
pushf
imul
xchg
jle
inc
test
call
jg
lods
sahf
push
dec
dec
fild
lock
add
xor
add
rcl
add
add
add
adc
add
adc
pop
sbb
xor
xchg
sahf
test
sar
dec
and
outs
in
sahf
add
popa
sbb
mov
inc
imul
(bad)
(bad)
cmp
and
(bad)
call
add
lock
add
lock
add
lock
clc
fistp
inc
es
mov
and
jo
fs
bound
test
xchg
lea
in
xlat
fisubr
test
fidivr
leave
dec
pop
(bad)
xor
cs
cmp
jb
adc
xor
aas
mov
repz
out
dec
inc
pop
push
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
adc
test
mov
in
(bad)
bound
loope
pop
sub
call
test
fisub
(bad)
imul
jbe
xor
inc
dec
rcl
xchg
in
push
xchg
test
add
add
cmp
add
add
add
push
add
lock
add
or
(bad)
(bad)
(bad)
mov
cmp
(bad)
jmp
mov
(bad)
(bad)
jns
add
add
add
push
add
lock
(bad)
(bad)
(bad)
out
movs
cmp
pop
sbb
sar
(bad)
(bad)
jns
add
xor
lock
(bad)
(bad)
(bad)
std
pop
inc
fs
cli
imul
dec
lods
gs
push
(bad)
out
outs
lea
jnp
fxam
les
or
sbb
jl
ret
lock
add
and
test
lock
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsin
fidiv
xchg
xchg
dec
repz
(bad)
(bad)
call
mov
lock
add
lock
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
adc
aas
mov
ins
inc
add
sar
(bad)
(bad)
fst
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fsub
mov
pop
add
lock
add
lock
add
add
add
add
add
jnp
pop
lea
neg
xchg
jns
(bad)
mov
ss
sbb
mov
sbb
and
into
fdiv
ret
leave
add
out
fldl2e
pushf
mov
or
mov
into
dec
sbb
xor
int
dec
outs
fst
sahf
sti
jge
xor
push
pop
repz
xchg
daa
call
in
int
push
pop
push
sbb
fwait
aas
hlt
jl
pushf
loop
imul
cs
xlat
or
sahf
rcr
cmp
mov
mov
outs
xchg
(bad)
xor
dec
in
retf
mov
adc
mov
jno
cmp
xor
pop
inc
xor
xchg
fwait
mov
pop
out
pop
push
push
sub
push
das
xchg
push
push
jle
leave
push
sbb
mov
mov
shr
nop
in
(bad)
data16
cld
outs
mov
mov
(bad)
aaa
sbb
jmp
fwait
test
imul
sti
sar
lods
or
aas
fsub
out
fmul
add
add
add
add
pop
add
lock
(bad)
(bad)
jmp
outs
or
adc
lock
(bad)
jmp
add
push
add
adc
add
add
add
sub
adc
add
lock
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
and
push
pop
inc
add
lock
add
repnz
adc
mov
movs
pop
xchg
sbb
das
xchg
dec
sub
mov
or
icebp
je
xchg
cmp
pop
les
mov
xor
xchg
mov
lods
jl
es
push
imul
adc
call
ss
js
sbb
ret
stos
stos
add
sbb
push
sti
fild
lock
add
add
add
lods
dec
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jb
xchg
sbb
push
xchg
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jb
std
pusha
lods
sub
dec
add
sbb
add
add
add
dec
fidiv
popa
mov
jmp
add
(bad)
call
ins
push
lock
add
sbb
add
lods
push
add
and
add
add
add
das
add
lock
(bad)
(bad)
(bad)
mov
retf
call
(bad)
(bad)
call
dec
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
loop
or
push
add
or
add
add
add
or
add
fbld
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
retf
test
scas
mov
mov
add
push
out
lock
scas
adc
xor
(bad)
and
enter
movs
iret
or
movs
ss
pop
aaa
pop
repnz
mov
(bad)
imul
fist
les
dec
pop
or
jb
rcl
stos
inc
fs
(bad)
xchg
ds
xor
shl
aam
mov
add
lock
(bad)
(bad)
jmp
scas
out
retf
std
add
lock
(bad)
(bad)
mov
push
into
add
ss
xor
sbb
cmc
mov
dec
push
pop
fnstcw
mov
mov
xchg
dec
add
sbb
(bad)
pop
pop
sbb
xchg
mov
sub
xor
add
add
add
push
bswap
pop
addr16
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
sahf
cdq
push
(bad)
hlt
cmp
add
xchg
push
add
lods
out
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ret
jne
push
adc
push
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
and
lahf
(bad)
fcom
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
fisubr
fisubr
rcl
sub
fimul
in
std
lahf
(bad)
aas
repz
jl
mov
sahf
xor
ja
mov
stc
push
mov
dec
pop
repnz
and
shr
mov
push
dec
in
cmps
or
add
lock
(bad)
push
scas
add
lock
add
dec
add
lock
add
(bad)
(bad)
(bad)
call
and
add
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jbe
xor
add
adc
lock
pop
add
jae
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
dec
xchg
jnp
sbb
pop
xor
and
cld
sub
mov
pop
sbb
aad
pop
scas
xchg
cs
and
lock
and
lock
add
or
xchg
je
cmp
nop
and
hlt
fbld
bound
mov
aas
sbb
jb
mov
adc
loopne
shl
arpl
cmp
test
cli
adc
imul
jne
jge
push
in
or
dec
(bad)
pop
les
ficom
sbb
ror
push
and
xchg
inc
bound
mov
fnsave
les
icebp
inc
add
add
add
add
add
xchg
loop
push
sbb
ret
fcmovnu
pop
sub
scas
jne
ja
xchg
and
cld
popf
sbb
adc
(bad)
out
stc
dec
mov
inc
push
fcomp
sar
add
test
cwde
retf
mov
adc
sub
xchg
fmul
pusha
sub
shr
or
add
or
test
or
cmp
pop
xchg
(bad)
pop
adc
or
push
fimul
and
outs
xor
add
(bad)
(bad)
(bad)
inc
into
mov
lock
(bad)
inc
add
lock
(bad)
(bad)
push
sub
sar
(bad)
jmp
das
pop
xor
call
rcr
inc
or
xchg
ror
mov
out
call
(bad)
cwde
pop
sbb
ret
in
je
movnti
ds
sub
push
fist
mov
rcl
inc
enter
loop
call
or
jae
repnz
cs
cwde
push
pop
leave
xchg
xor
push
mov
add
add
sub
add
adc
add
add
add
add
add
cmp
add
lock
into
xchg
ss
(bad)
call
in
add
lock
or
lock
add
add
add
jne
in
sbb
sbb
aam
or
clc
push
test
mov
mov
jno
jl
inc
mov
test
push
or
(bad)
(bad)
(bad)
jmp
adc
aad
ins
loope
popa
add
sar
(bad)
dec
test
lock
add
adc
add
push
add
lock
pop
retf
mov
inc
cmp
add
inc
fs
sar
leave
lds
xor
push
fcom
pushf
and
jmp
(bad)
in
inc
in
ss
shl
retf
dec
adc
ds
ins
mov
rcr
dec
cdq
pop
mov
adc
sbb
xchg
fcmovne
sub
in
fst
loop
sub
mov
bound
mov
xor
call
cmps
xor
lock
add
and
cmp
lock
add
lock
sbb
add
and
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
inc
lock
push
jne
jl
lock
add
add
lock
arpl
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
lock
add
add
or
add
test
sbb
mov
aad
inc
inc
mov
mov
mov
cmp
push
cli
mov
mov
jle
into
mov
add
pop
cld
lods
in
and
jecxz
sub
add
add
add
ja
add
pop
fs
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jae
dec
jle
in
fs
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
pusha
in
jmp
sbb
ret
sahf
loope
ja
daa
mov
loop
push
push
mov
pop
and
and
test
fsub
dec
xchg
(bad)
mov
sbb
bound
jae
popa
data16
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
out
inc
add
lock
add
mov
iret
xchg
les
(bad)
sar
(bad)
jmp
push
add
lock
add
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
movs
popa
mov
pop
mov
cld
sbb
test
inc
sbb
pop
xchg
scas
lds
call
clc
pop
test
aad
mov
iret
(bad)
packsswb
cwde
lods
jg
jae
scas
retf
xor
popf
or
jne
push
inc
sbb
cmps
mov
push
push
fwait
jno
das
jl
fidiv
jne
pop
cmp
push
or
call
add
dec
movs
iret
jp
ss
repz
retf
mov
std
push
and
jns
xor
movs
stos
es
cld
mov
push
shl
outs
pop
lahf
jg
xor
xchg
jne
pop
or
xor
leave
pushf
or
(bad)
aaa
sbb
dec
cmps
xor
lods
daa
ret
mov
pushf
jge
fbstp
scas
add
mov
xchg
sbb
sbb
(bad)
rcr
xchg
test
mov
rol
fdiv
fbstp
jb
cmp
adc
cmp
loop
out
mov
sar
jecxz
loope
sbb
mov
outs
(bad)
lahf
or
xor
push
aad
jmp
xlat
pop
test
cmp
jmp
not
inc
xchg
or
movs
jle
cwd
pmuludq
mov
or
cmp
cmp
cs
and
inc
fsubrp
add
and
mov
cmp
ss
jl
push
inc
cmc
cmp
ror
jno
ins
das
aas
cld
lahf
xor
add
adc
sub
lock
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
mov
or
loop
add
lock
jmp
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
outs
cld
iret
xor
add
(bad)
(bad)
(bad)
call
int3
pop
test
ret
xor
in
add
sar
(bad)
inc
add
lock
adc
lock
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
enter
lahf
test
fcom
sub
xchg
mov
outs
ins
repz
mov
sub
mov
lahf
cmc
imul
mov
jl
sbb
xchg
loop
xchg
jmp
fst
xlat
outs
pop
retf
cdq
pop
or
mov
cmp
adc
iret
arpl
stc
imul
mov
retf
outs
or
jmp
std
pop
add
mov
clc
jp
fst
sub
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
aam
cmps
ds
pop
dec
add
lock
cld
in
mov
or
xchg
sub
push
fild
leave
add
sub
ror
ja
popf
pop
sahf
jae
push
inc
jae
dec
cwde
aam
mov
loope
sar
movs
pop
call
cdq
ins
les
mov
dec
(bad)
adc
(bad)
pop
dec
aaa
xchg
pop
aad
enter
jne
sub
xor
add
(bad)
(bad)
(bad)
call
cwde
mov
add
sar
(bad)
(bad)
jg
adc
ss
aaa
inc
sub
pusha
jns
inc
mov
adc
dec
in
(bad)
xlat
jns
dec
fs
push
xrelease
xchg
or
sbb
pop
xchg
(bad)
movs
jbe
mov
jge
and
jg
outs
outs
and
ins
cmp
jae
pusha
mov
mov
arpl
in
out
or
call
mov
repnz
cmps
and
add
inc
mov
add
add
sbb
adc
add
lock
and
cmp
mov
add
movs
mov
mov
jnp
mov
add
jp
pop
push
jne
sub
push
dec
add
lock
(bad)
(bad)
push
push
lea
outs
add
sar
(bad)
(bad)
cmp
cmp
xchg
and
xchg
mov
inc
mov
dec
and
loopne
add
push
nop
mov
adc
repz
leave
sub
out
inc
mov
cmp
sub
xchg
add
mov
add
pop
pop
and
les
rol
out
jne
jbe
push
and
push
fdivr
pop
out
je
shr
pop
add
add
add
mov
push
outs
push
mov
movs
bound
mov
push
lea
dec
pop
mov
es
ja
sbb
bound
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
popf
dec
and
add
push
outs
add
sub
arpl
scas
sbb
fld
mov
and
fcom
dec
movs
cs
sbb
out
aas
lahf
(bad)
pcmpeqw
(bad)
cmc
(bad)
pop
ss
int
jnp
scas
inc
jns
push
sbb
add
bound
push
or
push
xchg
xchg
adc
inc
add
xor
jge
xchg
shl
xchg
inc
(bad)
push
xchg
mov
pop
lahf
sub
inc
mov
outs
push
xchg
push
(bad)
aam
jp
and
sub
dec
jae
icebp
xchg
fucomi
test
fwait
pushf
sbb
xor
je
scas
xchg
sub
mov
jnp
fnstenv
xor
stc
mov
inc
out
mov
pop
push
fst
add
outs
pop
sub
jg
lahf
into
movs
daa
in
inc
pop
xchg
stos
and
xor
and
mov
data16
fimul
movs
pusha
outs
andps
repz
pusha
in
pop
icebp
out
add
jmp
mov
(bad)
sbb
xchg
inc
and
push
xlat
jmp
and
pushf
in
pop
int
mov
stc
pop
dec
pop
out
inc
call
sub
cmp
int3
(bad)
fisttp
loop
dec
ins
push
repnz
inc
mov
xchg
pop
cmp
retf
aas
repnz
(bad)
test
in
das
pop
pop
mov
and
addr16
fwait
or
ret
jnp
in
out
sti
inc
hlt
cdq
shr
push
loop
or
mov
inc
mov
or
jg
jl
cmp
inc
pop
jp
out
add
into
push
out
or
jmp
push
add
and
mov
adc
data16
outs
jmp
stc
inc
and
nop
xchg
sbb
inc
mov
add
pop
fwait
pop
cli
test
and
rcl
sub
mov
fisubr
cs
call
loope
pop
sub
cmp
cwde
sub
fild
cmp
pcmpeqb
xchg
lods
shr
adc
xchg
std
cmp
pop
(bad)
lods
xchg
test
mov
pop
lahf
(bad)
out
push
popf
and
mov
ror
sub
jecxz
clc
adc
mov
popa
adc
jne
dec
jns
rcr
aad
mov
rol
adc
xor
inc
daa
pushf
push
dec
imul
mov
fs
out
cs
sbb
and
inc
(bad)
(bad)
fidivr
sbb
retf
add
sbb
cwde
mov
dec
add
add
add
push
lds
leave
jg
ds
idiv
jb
mov
ins
(bad)
or
mov
sub
cmp
jle
mov
bnd
mov
mov
or
inc
repz
sbb
leave
dec
mov
xor
jp
dec
jo
imul
dec
mov
ret
out
test
mov
jb
add
mov
jle
dec
das
outs
inc
xor
or
ficomp
push
xchg
xchg
daa
sub
mov
pushf
jle
add
sbb
stos
ret
mov
pop
adc
repz
jnp
sbb
xchg
loopne
mov
sar
dec
call
xchg
(bad)
mov
push
sbb
or
or
enter
sbb
push
sbb
add
mov
loop
mov
jnp
test
dec
ins
repz
push
push
xchg
nop
std
or
jns
fstp
pop
scas
sub
out
in
mov
jmp
push
and
jge
test
push
or
fld
retf
ret
cmps
les
sbb
xchg
sub
pop
and
icebp
test
pushf
mov
adc
pop
fwait
dec
adc
add
xchg
sbb
mov
add
add
add
lea
lock
lock
add
(bad)
(bad)
(bad)
call
ret
adc
add
lock
add
je
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
movs
jmp
adc
add
lock
lock
push
lock
add
push
mov
add
arpl
add
aas
inc
pop
pop
add
aas
sbb
jecxz
jb
enter
dec
popa
sub
push
sbb
sbb
xchg
arpl
pop
add
lock
(bad)
(bad)
call
pavgw
test
(bad)
(bad)
inc
add
lock
add
sub
lock
ja
lock
ja
lock
add
add
lock
into
add
add
add
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
enter
add
lock
add
xchg
arpl
rcl
(bad)
(bad)
call
pop
push
lock
add
pop
add
lock
and
and
test
jecxz
(bad)
out
pop
mov
push
jl
adc
das
sub
out
xchg
pop
dec
mov
and
mov
repnz
sub
pop
mov
mov
add
lock
(bad)
(bad)
inc
adc
fwait
jp
cmc
clc
je
lock
(bad)
call
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stc
(bad)
cmps
pop
int3
mov
push
retf
or
add
add
sar
(bad)
push
addr16
lock
add
lock
add
lock
mov
cmp
popa
out
push
out
lods
cli
mov
mov
mov
push
out
enter
cmc
fsubr
push
xchg
call
jno
sbb
addr16
std
pushf
rcl
xchg
sub
inc
add
lock
add
push
add
lock
(bad)
(bad)
call
imul
inc
add
lock
(bad)
fstp
mov
dec
sub
js
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
out
jle
fcmovne
pusha
data16
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
and
inc
dec
sbb
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
ins
mov
icebp
mov
pop
sahf
sbb
call
dec
jmp
lahf
add
inc
jmp
fmul
jge
jns
pusha
push
mov
gs
adc
(bad)
mov
fsub
push
add
lock
(bad)
(bad)
dec
mov
lock
(bad)
inc
in
or
cmp
pop
push
cmp
or
lods
dec
jmp
push
adc
shr
pop
in
in
sbb
ror
sahf
cmp
cmc
and
cwde
mov
jmp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
in
add
add
jmp
add
mov
xchg
(bad)
add
add
sar
(bad)
dec
popf
add
lock
add
lock
add
lock
jl
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
jmp
gs
fs
test
add
sub
and
les
add
add
add
add
add
jns
add
add
add
ret
lock
lock
add
in
(bad)
scas
sbb
or
sti
mov
fiadd
shl
cmps
inc
or
push
add
add
jns
add
jp
add
add
lock
(bad)
(bad)
jmp
adc
std
adc
(bad)
(bad)
dec
cli
fucomp
(bad)
jg
sbb
cmp
jg
and
sbb
and
cmp
stos
aam
mov
inc
sbb
lea
jb
dec
mov
rcl
pshufw
mov
push
mov
shl
dec
call
add
lock
scas
add
inc
mov
lock
add
and
fist
ins
jb
loopne
push
repz
scas
mov
and
and
movs
xor
retf
sar
xor
dec
aad
and
add
or
xlat
xor
nop
sub
shl
mov
jb
leave
xchg
rcl
mov
lock
loop
mov
dec
dec
mov
cmp
jb
lods
mov
xchg
push
mov
icebp
adc
leave
mov
push
sub
sub
and
mov
xor
scas
sbb
ret
stos
jns
imul
sub
inc
popf
push
or
or
add
or
imul
add
outs
inc
ins
clc
mov
push
loope
sbb
jnp
push
loope
iret
das
pop
mov
push
addr16
sahf
ret
aas
or
dec
js
sbb
or
aad
sbb
mov
mov
xor
test
adc
pop
xchg
fsub
rcl
retf
in
or
pop
(bad)
popa
cmp
fnstenv
push
idiv
shl
jo
xchg
(bad)
stc
loop
sub
scas
pushf
sub
sti
loopne
push
xor
neg
(bad)
(bad)
(bad)
inc
adc
fwait
jp
cmc
fld
(bad)
inc
add
lock
add
add
add
pop
dec
add
fcompp
add
push
add
and
leave
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
add
lock
add
cmp
ins
dec
into
fild
inc
inc
pop
shr
mov
loopne
sti
(bad)
sub
and
sahf
lock
lods
jb
loopne
ss
enter
push
ins
loop
ret
popa
jbe
xchg
call
add
add
pop
mov
idiv
mov
and
hlt
icebp
stc
cs
sbb
loop
jo
enter
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
int3
sub
push
add
jl
add
or
add
aam
dec
pop
sbb
test
sub
dec
xchg
inc
inc
mov
mov
loop
cld
scas
ret
(bad)
cmp
movs
xchg
cmp
es
out
sbb
jbe
inc
int
cwde
js
push
xor
mov
dec
mov
lds
aad
ds
inc
icebp
mov
mov
dec
pop
imul
and
add
lock
(bad)
(bad)
push
sub
rol
add
sar
(bad)
call
add
add
add
mov
fidivr
lods
aas
(bad)
(bad)
(bad)
dec
add
lock
add
lock
xchg
push
bnd
jnp
mov
fst
aam
sbb
xor
mov
inc
ss
(bad)
arpl
sub
dec
mov
into
(bad)
push
test
jb
pop
fadd
fnstenv
imul
xchg
mov
add
lock
add
add
lock
lock
add
adc
lea
lock
cmp
lock
add
push
cld
push
dec
xlat
bnd
mov
and
adc
adc
pop
mov
pop
test
sub
mov
push
fisttp
add
adc
add
add
xchg
lock
add
adc
add
aam
add
push
add
adc
add
pushf
or
push
scas
bound
xchg
dec
xchg
hlt
test
in
mov
retf
fistp
daa
inc
pushf
xchg
scas
ror
shl
lods
icebp
xchg
push
pushf
mov
sbb
rcr
cs
pop
loop
mov
neg
imul
ficom
jb
imul
ds
icebp
add
test
cmp
jno
lock
xor
pop
sub
(bad)
aaa
adc
daa
or
mov
push
adc
ja
psubw
cld
jae
pop
mov
mov
sbb
into
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fidivr
daa
add
lock
add
add
das
pop
add
add
add
xor
add
(bad)
(bad)
(bad)
(bad)
cmp
aas
push
mov
es
imul
add
(bad)
(bad)
(bad)
(bad)
mov
adc
lock
(bad)
jmp
add
pop
adc
lock
add
mov
cmc
xchg
repnz
pop
xchg
cs
out
cmp
dec
sub
and
jecxz
pop
lock
xchg
cdq
in
je
icebp
inc
adc
ret
jl
mul
call
popf
inc
ret
cmp
call
adc
xor
(bad)
mov
sbb
add
retf
mov
jo
dec
sub
mov
add
data16
stos
cmc
jne
pop
mov
arpl
out
adc
dec
(bad)
repnz
aad
pusha
inc
sbb
push
cmp
or
push
sahf
inc
loop
sbb
daa
retf
add
mov
lahf
dec
jbe
clc
push
cmc
add
inc
imul
leave
movs
mov
mov
fmul
es
or
pop
push
add
(bad)
(bad)
(bad)
call
sbb
in
lock
sar
(bad)
inc
ss
add
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lahf
sub
mov
pop
lea
lock
pop
mov
mov
push
(bad)
cdq
arpl
cs
aas
mov
sub
pushf
sub
jne
mov
and
sar
mov
das
cmp
pop
pop
cld
sbb
idiv
push
outs
cmp
repnz
add
fwait
cmp
lock
xor
jmp
js
addr16
out
lea
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
xchg
sub
in
add
lock
add
xor
jne
lock
(bad)
jmp
add
lock
add
lock
sbb
ret
mov
push
pop
inc
lock
out
pop
idiv
push
clc
leave
bound
or
in
pop
xchg
mov
jo
xor
or
add
lahf
push
add
add
add
add
add
mov
les
inc
dec
sub
test
xor
movs
add
add
add
adc
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xchg
inc
bound
add
xchg
movs
jle
(bad)
xchg
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
mov
in
xchg
stc
add
add
add
jle
test
cmps
xchg
xchg
mov
mov
push
sub
(bad)
div
fs
pop
fsubr
sbb
and
gs
ret
cmps
stos
daa
repnz
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
clc
inc
fst
jb
fimul
push
jns
js
dec
mov
fimul
jo
inc
cs
push
mov
or
repz
mov
jge
sub
sbb
pextrw
scas
dec
in
inc
mov
addr16
test
sbb
dec
mov
dec
sub
mov
cli
mov
pop
jle
sub
movs
hlt
retf
inc
cmps
in
push
aaa
mov
inc
add
lock
add
or
(bad)
(bad)
push
imul
jle
inc
sar
(bad)
inc
add
in
add
lock
(bad)
(bad)
call
jns
lock
add
jmp
add
add
add
add
add
sbb
cmps
test
lock
(bad)
(bad)
(bad)
stc
outs
dec
adc
xchg
add
sar
(bad)
inc
add
add
add
adc
icebp
sub
(bad)
(bad)
call
fiadd
lock
add
lock
jge
inc
push
loope
call
stc
xchg
xchg
dec
pop
cli
ficom
adc
(bad)
fild
push
lahf
or
in
push
dec
mov
mov
xor
add
(bad)
(bad)
(bad)
call
mov
mov
and
lock
(bad)
push
scas
add
push
add
and
add
lock
(bad)
(bad)
jmp
iret
jmp
sub
add
sar
(bad)
call
add
lock
(bad)
(bad)
jmp
jnp
fst
repz
xchg
add
sar
(bad)
(bad)
cmp
push
movs
stos
pop
mov
(bad)
addr16
loopne
jle
or
sub
xchg
hlt
cmp
imul
movs
xchg
dec
fld
jb
add
lock
xchg
add
clc
push
add
jnp
add
(bad)
(bad)
(bad)
push
outs
pop
inc
push
xor
sbb
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
in
add
push
cmp
lock
add
in
stos
jp
test
stos
sub
icebp
dec
pop
enter
call
ror
ja
test
out
cmps
xchg
popf
xlat
into
ins
das
rcl
sbb
push
or
inc
and
call
je
add
lock
(bad)
(bad)
dec
mov
call
int
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
outs
fs
(bad)
int3
mov
cmp
add
add
ret
(bad)
(bad)
call
add
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
das
pop
add
lock
jae
lock
add
ds
dec
add
lock
(bad)
(bad)
push
test
add
sar
(bad)
dec
loope
lock
add
add
add
clc
daa
add
cmp
add
and
add
add
add
pop
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
dec
into
shl
cmp
retf
ja
mov
(bad)
fidiv
sbb
push
mov
xchg
movs
cmp
pop
(bad)
in
cmp
sub
fs
(bad)
xor
fimul
outs
inc
xor
fs
inc
dec
aaa
inc
sbb
dec
repnz
sub
ins
dec
(bad)
leave
fucom
jno
stos
add
add
add
inc
rol
lock
mov
add
add
sar
(bad)
inc
add
lock
add
lock
add
lock
xor
add
add
mov
movs
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
fwait
or
test
cmp
mov
and
mov
xor
jecxz
adc
addr16
cld
(bad)
call
mov
adc
outs
outs
jnp
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jecxz
stos
xor
add
and
or
push
enter
mov
ficomp
retf
pop
and
jbe
movs
inc
sbb
fisttp
shr
xchg
and
push
retf
repz
inc
daa
xor
cmps
fprem
js
mov
ins
push
outs
pop
jmp
fistp
push
(bad)
scas
aas
add
add
pop
pop
add
loope
add
jo
jp
inc
iret
int
cli
popa
outs
mov
je
jg
popa
pop
add
lods
scas
cs
shl
and
into
dec
add
push
mov
out
lock
add
add
add
pop
xlat
cmp
stc
(bad)
mov
pop
test
mov
push
fcomp
jp
pop
inc
lods
int3
sub
loopne
push
cmps
dec
popa
sar
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
js
add
repnz
add
add
add
mov
xchg
and
and
push
jno
sahf
mov
bound
xchg
or
inc
mov
adc
inc
dec
fisubr
pop
xor
dec
fidiv
inc
enter
rcr
data16
mov
test
push
inc
outs
jnp
jns
cmc
cmp
dec
xchg
out
lods
mov
push
test
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cld
mov
or
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
dec
jne
outs
loope
sbb
add
lock
ja
adc
add
lock
rsqrtps
pop
mov
mov
adc
cdq
and
mov
add
mov
xchg
sahf
test
jecxz
je
lock
es
rol
rcl
add
add
push
add
lock
(bad)
(bad)
dec
or
adc
(bad)
(bad)
call
push
add
(bad)
mov
fild
ds
loopne
aaa
aaa
xor
push
xchg
mov
dec
jbe
lods
in
ins
cmc
shl
ins
in
push
mov
jne
pop
call
enter
test
xchg
adc
lea
adc
shl
and
and
cmp
xchg
pusha
scas
xor
cmp
add
(bad)
(bad)
(bad)
inc
scas
cs
inc
loop
lods
add
sar
(bad)
call
cmps
jge
je
push
cmp
lods
sub
pop
into
out
xor
stos
pop
vpaddq
dec
jmp
hlt
movs
jnp
and
mov
dec
adc
mov
ja
push
xor
push
pop
push
xchg
fsubr
gs
sub
test
dec
aad
shr
dec
ret
xor
fwait
jmp
xor
cmp
jnp
jp
pop
jge
pop
gs
inc
ins
mov
inc
jg
sub
push
xchg
xor
outs
leave
test
mov
aas
lds
lods
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
pushf
cmp
jge
leave
test
nop
movs
push
jge
sbb
pushf
inc
cmp
(bad)
xchg
xor
xlat
addr16
call
cwde
mov
nop
dec
jg
aaa
js
adc
lock
add
loope
add
add
add
push
add
adc
fist
pop
push
cmp
jecxz
adc
dec
das
iret
rcr
arpl
fcom
mov
inc
push
xor
and
stc
and
stc
aam
in
or
inc
and
lock
aaa
not
adc
or
mov
popf
sub
mov
xchg
dec
es
arpl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
idiv
sub
scas
pop
add
add
add
mov
push
popa
xlat
shl
push
pop
cdq
nop
cdq
sub
adc
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
icebp
mov
add
lock
lock
add
lock
add
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
dec
or
out
stos
sar
(bad)
(bad)
cmp
add
shl
(bad)
(bad)
(bad)
(bad)
in
sub
add
push
dec
nop
mov
sub
or
jns
push
imul
int3
or
or
pop
mov
xchg
jae
js
rcl
test
loop
pop
or
scas
xlat
es
rep
or
aas
add
add
mov
add
adc
imul
dec
mov
dec
test
cmp
adc
push
les
dec
arpl
adc
push
pop
aaa
xor
std
mov
test
stos
cmps
iret
add
lock
(bad)
(bad)
(bad)
mov
fwait
fs
add
sar
(bad)
push
aas
mov
addr16
sub
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
enter
pop
daa
cwde
daa
add
clc
rol
add
or
xchg
or
sbb
cld
mov
dec
xchg
or
test
push
sub
sbb
mov
retf
jmp
test
call
sub
scas
in
fs
test
ret
push
stos
ret
jecxz
pop
push
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ror
(bad)
adc
lods
add
lock
add
(bad)
(bad)
(bad)
jmp
enter
xchg
fndisi(8087
xor
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
push
push
jmp
inc
add
lock
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
popa
or
(bad)
call
lock
mov
add
mov
add
lock
add
add
add
inc
jle
lock
add
lock
add
sbb
jns
call
xchg
push
add
lock
add
pop
push
ror
sub
lock
jo
loope
dec
ret
stos
rol
inc
pop
push
outs
dec
movs
push
sbb
das
fsubr
in
adc
dec
jae
cmp
lods
inc
test
aad
das
inc
add
sbb
fisub
outs
dec
mov
sub
dec
ret
jl
enter
pusha
pushf
jne
shr
ret
push
add
lock
add
cmc
mov
and
(bad)
(bad)
inc
add
lock
add
lock
adc
add
add
add
add
jns
mov
fmul
fsubr
in
dec
dec
call
(bad)
scas
sahf
or
rcl
jmp
rol
sub
xor
stos
les
sub
mov
shl
sbb
xor
popf
cmp
int3
add
ror
cmp
mov
pop
cmp
int3
cld
outs
fld
inc
das
pop
pushf
or
mov
sub
jge
and
dec
sbb
scas
push
aas
push
in
cmp
xchg
jl
leave
das
push
or
mov
(bad)
pop
sub
in
test
cmp
fnstsw
xchg
fidivr
(bad)
(bad)
cmp
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
lock
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
outs
pop
inc
push
xor
add
add
pop
test
sub
test
iret
retf
outs
out
lods
ret
adc
stos
sahf
jne
push
adc
pop
mov
into
push
sahf
aad
adc
mov
(bad)
pop
mov
cld
sub
cli
jo
ret
cmp
and
sar
dec
xor
add
(bad)
(bad)
(bad)
inc
inc
les
dec
cmps
fwait
mov
(bad)
call
ffree
aaa
xchg
mov
sub
add
push
arpl
mov
mov
popa
data16
push
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cwde
adc
neg
lock
add
add
add
inc
add
lock
add
and
mov
call
push
lock
add
inc
add
lock
add
cmp
js
sub
ins
mov
call
sbb
fmul
mov
in
cmp
pop
(bad)
cs
mov
test
sbb
push
enter
lock
sub
jl
bound
cmps
xchg
dec
imul
cmp
popf
lea
jmp
push
jno
mov
pop
and
cld
bound
mov
shr
or
clc
push
xchg
xchg
sahf
mov
into
add
idiv
or
pop
je
cld
lahf
dec
sub
sub
lock
add
cmp
lock
add
pusha
nop
shl
mov
cmp
add
(bad)
(bad)
(bad)
call
imul
pop
pop
(bad)
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
js
inc
add
lock
dec
add
adc
add
lock
add
and
add
lock
jns
add
add
jae
out
ins
mov
dec
mov
push
outs
and
loop
ins
lea
adc
ficomp
fidivr
inc
cs
inc
mov
inc
jmp
sbb
not
sti
(bad)
inc
outs
cmp
mov
jp
dec
and
and
inc
dec
pop
repz
dec
push
int3
and
mov
pusha
sbb
int
stos
push
ss
inc
and
cmp
lea
inc
mov
push
and
idiv
add
lock
(bad)
(bad)
dec
fmul
inc
lods
sbb
sar
(bad)
(bad)
jl
add
add
add
or
add
add
add
add
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
dec
sub
(bad)
fist
dec
out
mov
ret
push
mul
and
ja
out
sbb
bound
pop
push
mov
jb
ror
je
movs
(bad)
shr
mov
fst
rol
aam
test
cmps
lods
xchg
movs
fimul
add
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jmp
enter
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
jmp
push
sub
out
jge
jecxz
fwait
and
or
jp
pop
cmp
inc
imul
shl
mov
out
and
popf
jno
xor
outs
and
lock
add
pop
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
xlat
mov
add
lock
retf
pusha
push
icebp
inc
mov
iret
dec
sbb
cmps
sbb
mov
add
cs
sahf
iretw
aas
ret
sbb
mov
add
dec
push
jge
cmp
xchg
xor
mov
in
fidivr
pop
and
movs
sbb
mov
pushf
mov
aaa
loopne
in
and
xlat
mov
sub
inc
test
and
xchg
mov
cmps
jmp
dec
adc
push
jmp
jle
retf
aad
in
rcr
mov
test
add
sbb
mov
mov
or
jge
pop
ins
aas
stos
mov
xchg
lods
pop
mov
push
mov
or
sbb
sub
bswap
push
outs
jnp
push
push
ror
test
loopne
mov
jmp
jb
inc
adc
push
dec
cmps
movs
push
into
xchg
scas
mov
or
sbb
leave
push
jnp
pop
sub
in
rcl
mov
mul
pop
and
fadd
xor
scas
dec
xchg
mov
or
xchg
cdq
jecxz
inc
xor
dec
out
or
dec
jbe
pop
push
mov
(bad)
gs
jne
sti
outs
cli
stos
sbb
pop
aad
mov
test
jge
dec
mov
add
lock
(bad)
(bad)
push
and
repnz
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
add
shl
add
lock
iret
add
jo
add
pop
add
lock
inc
pushf
xchg
js
out
pusha
sahf
fbstp
popa
mov
push
leave
jmp
xor
push
inc
pop
and
jbe
push
in
add
adc
jmp
fucomp
jecxz
(bad)
pushf
sti
pushf
sbb
in
mov
lock
add
aas
ret
add
sub
add
call
jo
push
mov
sbb
les
not
in
test
shl
add
add
add
sldt
lock
(bad)
(bad)
call
daa
add
sar
(bad)
inc
mov
(bad)
(bad)
jp
xchg
push
pop
nop
clc
movs
sar
scas
cmp
xor
(bad)
inc
sar
pop
ficomp
adc
dec
inc
add
add
stc
adc
mov
in
pop
repnz
pop
imul
inc
xchg
dec
sub
adc
das
test
mov
stc
(bad)
sbb
mov
jbe
xchg
pushf
ror
aad
add
sub
push
repnz
test
add
imul
sub
loop
cli
inc
dec
ja
addr16
xchg
add
push
add
and
add
jno
add
adc
add
loop
add
add
add
mov
loop
dec
add
gs
clc
mov
and
mov
adc
adc
sub
(bad)
ins
mov
mov
xor
add
(bad)
(bad)
(bad)
jmp
popf
(bad)
or
rol
add
lock
(bad)
call
aad
cs
in
mov
mov
jle
or
mov
repnz
fs
dec
mov
lahf
cwde
pop
jbe
or
jecxz
mov
jl
mov
ror
mov
add
imul
mov
jns
es
mov
mov
mov
mov
shl
inc
rol
jle
cdq
xor
cmp
push
daa
das
push
xchg
inc
cld
sahf
cmp
pop
adc
mov
nop
ret
cmc
push
nop
xor
push
dec
xchg
xor
xchg
pop
ret
mov
pop
retf
mov
xchg
jnp
hlt
mov
jno
je
aas
and
sbb
movs
and
cmp
push
ret
stos
adc
daa
mov
push
mov
add
mov
pop
mov
pusha
adc
and
xlat
mov
push
mov
sahf
add
mov
ja
sti
xchg
inc
jge
mov
fld
scas
in
clc
pop
shr
adc
imul
in
popf
mov
add
fwait
mov
and
xor
nop
dec
cmp
les
push
sbb
js
scas
movs
loop
xchg
retf
imul
mov
jmp
cmps
cmps
xor
pushf
int
imul
add
enter
pop
jge
xchg
out
pop
xor
xor
mov
add
jge
(bad)
pop
mov
out
mov
fldenv
add
jmp
nop
mov
pop
pop
and
mov
fdivr
push
dec
in
pop
movs
dec
or
lods
inc
ds
fdiv
cmp
jns
cmp
outs
addr16
cmp
mov
mov
dec
xor
fstp
or
out
lock
inc
movs
push
scas
inc
arpl
xchg
into
shl
fidiv
imul
call
sbb
and
sub
xchg
sbb
lea
sub
cmovb
fbstp
xchg
(bad)
out
aaa
cs
out
pop
xor
lds
sbb
cmp
shl
cmp
inc
shr
sub
jmp
cmp
mov
rcl
jno
sub
xor
mov
int3
ret
fsub
cwde
js
mov
call
mov
adc
adc
and
jmp
fwait
and
mov
scas
das
in
xor
inc
xchg
jnp
adc
adc
mov
imul
ror
xor
sbb
lods
jmp
and
(bad)
mov
imul
ins
out
mov
out
dec
add
or
xor
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
sbb
push
pop
out
jge
or
add
(bad)
aad
lock
push
push
test
clc
add
cmc
cmc
inc
or
cmp
mov
mov
inc
mov
int
arpl
cmp
push
cmp
adc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
lahf
call
(bad)
add
lock
add
push
add
lock
add
lock
add
dec
mov
pop
sub
(bad)
(bad)
(bad)
jge
add
lock
add
lock
add
add
add
or
add
(bad)
(bad)
(bad)
inc
xor
dec
add
sbb
add
dec
cmp
call
popa
xchg
ficom
mov
clc
shr
push
adc
clc
sub
pushf
mov
(bad)
mov
mov
in
iret
push
sbb
ins
and
mov
call
inc
push
lea
add
and
sub
lods
bound
std
hlt
shr
jecxz
xor
mov
push
inc
xchg
rol
or
pop
repnz
inc
mov
mov
fist
lods
pop
pop
mov
daa
xor
in
push
stos
fnstsw
pop
cmp
mov
out
push
test
dec
jle
pop
jecxz
rol
(bad)
clc
repz
mov
add
or
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
js
nop
inc
(bad)
or
lock
add
cmp
add
lock
add
(bad)
(bad)
(bad)
inc
push
imul
fild
lock
(bad)
jmp
data16
dec
dec
das
jbe
add
lock
(bad)
jmp
push
lock
add
lock
add
lock
add
lock
cld
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
addr16
xor
mov
cld
add
ins
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
inc
add
into
push
sbb
imul
fimul
scas
xchg
scas
mov
call
adc
inc
jo
push
sub
(bad)
mov
sub
jecxz
clc
push
add
ins
aaa
add
add
add
shl
add
push
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
jecxz
inc
lods
lahf
call
adc
add
dec
fadd
lock
add
add
sub
(bad)
(bad)
(bad)
mov
outs
cld
iret
fadd
lock
(bad)
call
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
fadd
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
and
push
call
(bad)
(bad)
(bad)
call
shl
(bad)
in
test
sub
(bad)
(bad)
jmp
add
add
add
or
add
(bad)
(bad)
(bad)
call
and
sar
(bad)
jmp
add
mov
(bad)
(bad)
dec
mov
dec
fdivr
ss
ds
enter
movs
pop
div
out
mov
gs
and
loope
lock
mov
push
sar
popf
ss
cmc
das
cmps
and
les
or
bound
and
push
and
mov
leave
enter
lahf
jbe
xchg
push
mov
or
push
cmps
fild
jmp
fcom
add
add
gs
mov
pop
inc
push
and
call
mov
ja
test
pop
xor
and
inc
arpl
sbb
pop
jle
add
outs
and
stc
in
mov
cmps
pop
xchg
(bad)
scas
mov
xor
jns
xor
call
shl
shl
pop
(bad)
imul
lea
mov
push
cmp
adc
xor
or
cli
lahf
data16
dec
mov
clc
lods
cwde
xchg
rol
sbb
retf
mov
mov
hlt
scas
int3
add
test
jns
(bad)
mov
addr16
mov
adc
push
adc
fistp
or
scas
out
cmp
pop
out
rcr
xor
sub
inc
out
cmps
dec
add
ds
loop
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
not
cmp
add
ror
adc
lea
cwde
je
loopne
ror
mov
nop
fild
mul
test
ss
adc
cmps
mov
les
jnp
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ffreep
pop
xor
add
push
std
add
adc
test
mov
aas
ret
out
ss
hlt
mov
fadd
push
add
and
or
and
xchg
lock
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
xchg
jle
fwait
sub
add
out
daa
add
push
add
and
add
lock
add
lock
add
or
pushf
push
fst
(bad)
(bad)
(bad)
mov
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
push
add
cmp
add
inc
add
lock
(bad)
(bad)
jmp
out
push
das
add
add
sar
(bad)
jmp
fadd
push
add
and
add
inc
jmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
scas
call
or
add
(bad)
(bad)
(bad)
push
out
xchg
mov
add
sar
(bad)
push
add
(bad)
(bad)
(bad)
jmp
or
fwait
jo
jmp
repnz
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jb
std
inc
add
lock
jmp
lock
add
lock
add
lock
(bad)
(bad)
jmp
add
mov
int3
inc
in
add
sar
(bad)
push
add
lock
(bad)
(bad)
call
lock
stos
in
add
sar
(bad)
jmp
loop
lock
add
xor
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
push
add
inc
icebp
add
add
add
sbb
push
(bad)
cs
adc
lahf
sub
aaa
jmp
xchg
pushf
(bad)
dec
inc
cmp
adc
loope
sbb
and
xor
pusha
push
xchg
xor
adc
mov
bound
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lock
xchg
mov
add
lock
add
std
inc
add
sbb
add
adc
mov
push
cmp
jmp
adc
lods
mov
jb
stos
je
inc
mov
in
mov
loope
ret
cmove
ficom
mov
out
inc
or
or
adc
xor
pop
nop
mov
jns
stos
cdq
popa
add
lods
or
pop
cld
(bad)
shl
loop
je
scas
adc
mov
sub
pop
in
jnp
mov
nop
jno
adc
std
outs
sbb
mul
dec
mov
stc
data16
int
rcr
test
and
pop
and
mov
out
fmul
ret
or
retf
ja
push
mov
push
aas
add
ficom
and
jmp
pop
cli
loopne
push
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
dec
add
mov
add
add
add
mov
sbb
lock
add
mov
add
lock
add
lock
(bad)
(bad)
push
adc
mov
icebp
add
sar
(bad)
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jb
jmp
add
lock
(bad)
(bad)
(bad)
cli
movs
fadd
push
repz
sar
(bad)
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
sub
mov
jl
xchg
or
ins
int3
ror
clc
xor
push
jne
fwait
xor
and
push
mov
and
jae
sub
cmp
imul
ret
sub
(bad)
(bad)
(bad)
call
adc
lock
(bad)
call
out
lock
add
mov
and
add
lock
inc
mov
mov
mov
fist
test
mov
pop
sbb
ret
es
sub
pop
std
(bad)
push
je
cmps
inc
add
mov
aam
jo
or
gs
test
test
mov
sbb
jmp
stos
(bad)
shl
cmc
jo
mov
cmp
pop
jmp
addr16
mov
in
bound
fisttp
idiv
imul
sub
lock
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
ud2
test
or
jg
dec
add
adc
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jge
inc
cmp
dec
in
(bad)
pop
adc
lds
(bad)
stc
out
mov
lods
xchg
pop
sbb
std
adc
or
and
hlt
scas
in
adc
push
daa
daa
ss
mov
pop
pop
adc
ret
pop
jecxz
out
retf
loope
and
(bad)
sbb
xchg
add
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pushf
lock
hlt
xor
add
jne
add
inc
add
lock
add
or
(bad)
(bad)
jmp
(bad)
daa
cwde
movs
pusha
push
sar
(bad)
inc
add
ror
inc
add
lock
repz
cmp
add
jg
add
add
add
add
add
pop
add
lock
(bad)
(bad)
jmp
ja
dec
fld
adc
add
add
(bad)
push
add
cmp
add
add
add
in
add
add
add
stos
repz
add
add
out
leave
fld
pushf
jne
mov
push
dec
and
mov
inc
in
imul
xor
jp
xor
les
jns
push
adc
sbb
cli
and
mov
lock
add
retf
add
lock
add
sbb
add
lock
add
add
add
pop
mov
gs
sar
(bad)
inc
add
inc
add
lock
loopne
push
outs
das
xlat
add
add
sar
(bad)
push
out
add
lock
add
lock
add
or
or
fwait
cmp
or
test
inc
loopne
xchg
bound
out
add
les
add
(bad)
dec
adc
test
outs
sbb
mov
popf
jo
pop
les
add
push
add
lock
push
daa
aam
push
not
add
scas
rcl
stc
sub
xor
and
push
sub
mov
fstp
ret
push
mov
loopne
mov
call
push
add
lock
fild
adc
fild
lock
test
lock
add
push
inc
add
sub
add
imul
or
add
jne
sub
in
and
and
cmp
neg
cwd
adc
addr16
je
jb
mov
mov
cmp
and
dec
neg
inc
cmps
mov
lock
arpl
sbb
inc
aad
lds
add
lock
add
cmp
add
add
add
pop
sbb
or
add
add
lock
(bad)
(bad)
call
jmp
add
sar
(bad)
push
add
lock
(bad)
(bad)
(bad)
jmp
mov
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
es
add
xchg
add
test
add
js
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
cmp
add
test
add
cmp
push
mov
dec
push
pop
pop
jae
imul
pop
cmp
fcom
gs
mov
pop
push
in
fstp
jno
dec
jnp
push
or
push
popa
and
cs
leave
loopne
xchg
cmp
sub
push
sub
pop
and
lahf
in
hlt
rcl
inc
cmp
cmc
mov
mov
bound
mov
stos
sbb
dec
movs
push
cdq
imul
into
(bad)
sub
add
push
cmp
js
mov
popa
fnop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
mov
add
lock
cwde
pop
(bad)
(bad)
xchg
sbb
sbb
iret
(bad)
mov
sbb
mov
dec
out
jno
mov
mov
jg
jne
jne
shl
int3
lods
cmp
jno
cmp
xchg
into
adc
loope
pop
popf
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
fild
add
dec
add
lock
(bad)
(bad)
call
test
mov
add
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
push
xor
dec
or
lock
(bad)
dec
jb
ret
mov
xchg
in
cmps
lods
mov
xor
and
(bad)
pop
adc
ror
arpl
push
fnstenv
cdq
std
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
jmp
adc
mov
add
lock
add
lods
in
imul
dec
out
sbb
or
inc
das
jno
inc
push
out
inc
xor
pop
sub
inc
pusha
push
or
pop
xor
into
mov
jmp
pop
pop
in
cmp
push
and
bound
or
je
ins
repz
fxch
scas
push
sub
aas
int3
push
nop
xchg
in
mov
nop
cmp
sbb
pop
cwde
jg
mov
xchg
adc
mov
mov
or
fnstsw
inc
(bad)
sbb
test
pop
dec
cmps
push
test
jmp
leave
add
cmp
add
mov
xor
stos
jno
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cld
test
daa
ror
jp
add
mov
(bad)
(bad)
call
or
mov
(bad)
(bad)
call
sub
cs
mov
pusha
ins
call
mov
sbb
mov
cs
outs
and
outs
(bad)
jne
push
test
xor
call
(bad)
lock
add
add
add
or
add
shl
cs
sub
adc
mov
stc
inc
push
daa
aam
in
lods
fsub
mov
in
test
xor
mov
mov
pop
mov
inc
ror
movs
retf
aas
fstp
adc
das
stos
out
add
add
sar
(bad)
(bad)
mov
add
lock
add
lock
add
lock
and
mov
mov
or
ds
scas
inc
jge
aad
inc
xor
ret
mov
cli
mov
les
jmp
inc
in
and
cmp
es
(bad)
(bad)
(bad)
(bad)
call
mov
pop
in
dec
add
lock
add
psraw
lock
add
add
add
or
add
(bad)
(bad)
(bad)
push
or
jg
add
dec
ror
add
ret
(bad)
(bad)
inc
add
add
add
add
add
add
add
push
add
and
out
xchg
mov
add
sar
(bad)
call
add
lock
add
jo
add
push
inc
or
add
mov
lock
add
add
add
sub
add
(bad)
(bad)
(bad)
jmp
push
sahf
cdq
push
(bad)
hlt
into
lsl
sar
(bad)
jmp
cmp
mov
ins
xchg
and
cs
mov
out
fbstp
in
cmp
pop
cmp
and
or
push
pop
stc
mov
cld
ret
cmps
fbld
cmps
pop
inc
test
das
cmp
xchg
push
mov
add
add
mov
jnp
lock
xchg
jno
add
cmp
mov
mov
je
pusha
(bad)
jmp
shl
sub
es
out
cli
adc
cmps
add
mov
out
scas
inc
arpl
dec
jle
fbld
ins
inc
inc
add
lock
(bad)
(bad)
(bad)
mov
retf
cmc
add
lock
(bad)
(bad)
js
cmp
repnz
repz
shr
sbb
cmp
out
cmp
js
les
fisub
aas
movs
pop
les
mov
and
sub
mov
mov
shl
push
mov
inc
jp
mov
mov
lahf
push
push
jne
push
add
lock
add
pop
cmc
add
push
add
and
add
pop
jge
ja
test
data16
push
daa
addr16
fisubr
push
iret
fcomip
fld
sahf
fiadd
cli
and
jmp
cli
ins
add
push
sub
addr16
cli
mov
imul
cli
mov
sbb
fwait
mov
cmp
add
outs
rcl
sbb
fstp
scas
fistp
and
fbld
or
jg
jno
dec
(bad)
lods
movs
inc
mov
inc
adc
jns
movs
scas
loop
push
popf
sti
cmp
mov
mov
fsub
imul
xchg
repz
or
or
fstp
in
adc
adc
ins
cmp
lds
lods
cmp
inc
daa
mov
not
push
xchg
adc
pop
jecxz
or
repz
pusha
aad
div
fwait
cmp
(bad)
(bad)
jmp
mov
lahf
cmps
add
add
sar
(bad)
call
movs
mov
(bad)
sbb
mov
or
pop
push
sbb
xchg
repz
popa
sbb
mov
add
cmc
xchg
add
or
dec
xor
lock
add
je
pop
adc
inc
aad
mov
sub
call
mov
xchg
call
cmp
sub
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
jns
scas
jns
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
mov
xor
add
test
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
xchg
dec
lock
repnz
add
test
sbb
add
lock
(bad)
(bad)
jmp
add
lock
add
cmp
add
es
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
pop
cld
retf
mov
xchg
add
ja
sahf
mov
xor
scas
std
push
fdiv
rcl
mov
mov
cs
loopne
push
fwait
and
sbb
cmc
out
cmp
xlat
xor
adc
es
cmp
repnz
sahf
imul
cld
stc
mov
repnz
add
lock
add
push
add
lock
(bad)
(bad)
call
in
adc
test
mov
(bad)
(bad)
call
lock
jbe
lock
(bad)
(bad)
dec
add
lock
imul
add
add
aad
add
lock
add
lock
(bad)
(bad)
call
test
xor
add
sar
(bad)
(bad)
out
inc
lock
add
add
add
shr
mov
dec
inc
cmp
jo
es
mov
outs
repnz
push
aad
outs
lock
and
jb
arpl
sbb
jae
xlat
in
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
adc
dec
repz
add
movs
sbb
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
fs
jge
pop
xor
add
(bad)
(bad)
(bad)
jmp
lahf
cmps
jnp
fistp
add
sar
(bad)
push
add
lock
(bad)
(bad)
(bad)
call
mov
add
sar
(bad)
jmp
add
lock
(bad)
(bad)
dec
out
mov
fmul
pop
mov
add
sar
(bad)
(bad)
clc
mov
lock
add
add
add
jmp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
ror
jne
clc
loopne
(bad)
lock
push
mov
push
mov
jl
dec
or
clc
lock
popa
or
adc
pop
sbb
xchg
cld
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cli
jb
or
mov
dec
add
mov
adc
jle
and
and
sahf
dec
(bad)
jmp
adc
(bad)
jmp
jne
jmp
lock
add
shl
popf
sub
(bad)
jmp
push
add
lock
add
lock
add
lock
add
lock
add
adc
push
test
dec
jmp
(bad)
(bad)
dec
inc
lock
add
lock
add
add
add
add
add
sub
add
out
mov
ins
add
jle
adc
repz
mov
in
stos
adc
jp
repnz
mov
dec
jge
xchg
test
(bad)
daa
cmp
call
stc
pop
data16
lock
add
add
add
add
add
bound
add
add
pop
add
lock
(bad)
(bad)
push
pushf
data16
and
lock
(bad)
(bad)
push
mov
ins
fiadd
cmp
jle
xchg
(bad)
push
inc
dec
mov
aas
aaa
push
jb
mov
ins
stos
sbb
or
mov
push
sub
and
add
add
add
add
add
rol
or
jl
mov
adc
pushf
out
dec
in
jae
or
and
inc
push
idiv
loopne
mov
inc
push
add
push
add
lock
cmps
mov
aad
inc
sbb
push
daa
jmp
lods
cmp
jmp
(bad)
ss
lea
pusha
or
iret
push
jp
xchg
sti
and
add
(bad)
(bad)
(bad)
dec
pop
or
shl
add
sar
(bad)
inc
xor
push
call
mov
add
les
sub
ja
lea
or
(bad)
out
mov
push
outs
call
dec
fld
add
add
add
add
add
(bad)
(bad)
(bad)
call
sbb
pop
xor
add
(bad)
jmp
(bad)
(bad)
push
fstp
sub
and
(bad)
(bad)
fstp
bound
add
add
sar
(bad)
jmp
loop
lock
add
lock
add
lock
jb
lock
mov
lock
add
xor
add
add
add
add
add
push
jecxz
push
pop
push
xchg
fld
push
pop
inc
inc
je
test
xchg
jge
mov
mov
into
or
fwait
push
mov
xor
outs
mov
enter
mov
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fmul
pop
add
lock
add
dec
add
lock
add
aas
inc
or
inc
leave
bound
sar
(bad)
dec
mov
add
dec
add
lock
push
add
add
add
add
add
jb
add
jb
add
push
add
adc
add
lock
add
dec
nop
add
add
add
iret
test
lock
add
or
add
jns
add
(bad)
(bad)
(bad)
jmp
mov
lock
(bad)
push
add
lock
(bad)
(bad)
(bad)
fstp
add
dec
add
lock
(bad)
call
add
pop
add
jo
add
cmp
add
rol
adc
add
lock
das
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
xchg
jno
fcmovu
test
cmp
cmp
(bad)
cmp
adc
(bad)
mov
mov
jb
sbb
ror
lock
lods
lock
es
or
push
sub
sar
imul
push
dec
cmp
add
or
jg
sub
push
adc
jge
mov
sahf
ins
repz
ins
in
mov
cmp
iret
jmp
push
shl
pop
cwde
mov
jecxz
xchg
xchg
(bad)
out
in
repz
add
ret
push
sub
fisttp
(bad)
test
adc
sbb
nop
sub
fbstp
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
icebp
adc
adc
sub
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
movs
dec
cwde
je
push
add
and
add
cmps
sbb
pop
cmps
and
mov
shl
mov
iret
push
push
sub
xchg
test
push
lock
sub
jmp
adc
fmul
aas
std
fldenv
adc
outs
pop
inc
(bad)
sbb
xlat
out
add
sub
jb
xchg
sbb
add
add
sar
(bad)
inc
add
lock
lock
add
lock
in
push
aam
mov
fs
(bad)
imul
dec
sbb
popa
xlat
int3
jno
shl
add
add
add
pop
add
lock
add
adc
add
(bad)
(bad)
(bad)
dec
ds
(bad)
sbb
sar
(bad)
(bad)
cmp
add
add
add
push
(bad)
(bad)
jmp
rsqrtps
xor
lock
(bad)
jmp
stos
xchg
pop
inc
popa
(bad)
in
daa
mov
cmc
test
movs
das
outs
test
stos
dec
xor
and
push
mov
mov
movs
sub
in
pop
out
mov
aad
mov
sbb
fisttp
jmp
retf
repnz
push
push
add
sub
ds
add
lock
add
xor
in
jnp
stc
das
sar
(bad)
jmp
add
lock
add
lock
in
mov
sbb
dec
ss
mov
xchg
mov
push
xor
imul
jg
dec
xor
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
shl
xchg
cld
xor
ss
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
pushf
data16
mov
lock
add
(bad)
das
add
cld
ss
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
outs
loope
sbb
popa
inc
mov
lock
nop
add
add
add
xchg
add
lock
(bad)
(bad)
call
fs
mov
retf
add
add
sar
(bad)
(bad)
mov
jg
sub
inc
pop
gs
sbb
mov
ja
imul
xchg
outs
rol
enter
jecxz
je
jne
xchg
cdq
cmp
pop
js
je
div
ds
call
imul
push
popf
out
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fbld
inc
jnp
add
lock
add
add
add
or
add
add
lock
add
fdiv
add
or
add
pop
push
push
pop
cmps
repnz
mov
cmp
pop
add
or
add
add
inc
xor
aad
xchg
sbb
(bad)
fidivr
push
dec
push
ds
mov
loopne
push
lods
and
rcr
mov
inc
shl
cmp
sbb
add
add
add
add
add
inc
lahf
or
stos
bswap
cmp
cmp
rcl
mov
fisttp
add
cdq
and
mov
and
sbb
stos
cmp
jmp
nop
sub
add
sub
shl
shl
pop
mov
and
loop
sbb
sahf
mov
add
inc
test
in
movs
test
cmp
sti
jmp
xlat
jb
add
add
sar
(bad)
jmp
add
lock
add
lock
and
lock
add
lock
mov
test
dec
mov
cmp
outs
ds
(bad)
daa
jmp
mov
dec
lea
mov
dec
(bad)
mov
push
scas
mov
jb
(bad)
adc
ins
(bad)
cmps
popf
pop
loop
rol
adc
aas
lahf
ret
in
in
add
add
aad
xchg
mov
imul
test
and
add
pop
out
or
clc
add
cmc
mov
clc
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
je
add
lock
pop
sbb
sub
out
out
jmp
(bad)
push
mov
test
xor
in
add
mov
inc
outs
sub
push
jmp
ds
add
add
add
cmp
mov
shl
and
sahf
nop
sub
nop
int3
mov
mul
cmc
stos
xor
dec
in
in
lock
xchg
dec
dec
(bad)
fidiv
cmp
dec
xchg
inc
add
sub
add
pop
adc
add
lods
mov
jmp
les
(bad)
jmp
pop
xor
pop
in
or
(bad)
jmp
arpl
jae
mov
int3
mov
adc
cdq
push
pop
and
aam
adc
hlt
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
cld
xor
popf
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
call
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
push
add
lock
inc
add
cmc
inc
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
daa
add
adc
add
add
add
test
add
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
lock
add
lock
(bad)
(bad)
call
mov
int3
or
(bad)
dec
jp
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
jle
add
lock
inc
add
leave
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
movs
fs
rcr
add
push
outs
and
ins
pushf
call
jp
ds
les
fnstcw
sbb
stos
popf
mov
lahf
xchg
arpl
add
mov
sar
cmp
and
inc
mov
imul
add
lock
mov
inc
popa
dec
ins
xor
inc
inc
ja
(bad)
or
or
jge
cmp
xlat
dec
mov
loopne
lahf
mov
add
jne
inc
xlat
lea
ja
sti
xchg
in
popa
xchg
dec
sar
xchg
jb
mov
add
pop
movs
and
mov
(bad)
sbb
xor
bound
cmps
js
mov
inc
xchg
in
mov
pop
mov
push
pop
xor
cmp
cmc
sbb
clc
(bad)
loopne
in
call
add
jb
ror
rcr
dec
jae
cld
ins
lahf
xchg
loope
les
xor
push
sub
mov
(bad)
cli
push
xchg
xor
(bad)
(bad)
dec
out
fwait
sbb
cmp
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
add
lock
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
call
add
lock
dec
add
(bad)
aam
sbb
xor
aaa
adc
jnp
add
mov
jne
mov
int3
mov
loopne
rcl
mov
or
sub
imul
and
aaa
out
xchg
dec
xchg
xor
add
jnp
in
adc
icebp
adc
repz
jo
dec
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jge
pushf
data16
xchg
retf
add
xchg
retf
add
push
add
adc
aas
cs
aas
push
sahf
xchg
nop
bound
test
iret
dec
leave
aam
mov
cdq
mov
loop
bound
fdiv
(bad)
retf
retf
nop
cmp
xor
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xchg
sar
sar
(bad)
dec
add
lock
add
mov
int3
and
outs
fs
xor
test
ja
pop
(bad)
push
rcr
outs
popf
idiv
mov
cmps
sbb
pushf
outs
or
pusha
mov
out
xchg
xor
fwait
loopne
rol
clc
aaa
pop
fistp
sbb
lock
add
jmp
add
add
add
ss
add
xchg
pop
stos
test
sub
hlt
or
xor
out
js
xor
push
dec
jae
div
cmp
and
lock
(bad)
and
pop
add
popf
loope
lock
add
sub
lock
retf
add
add
ret
stc
add
add
add
inc
jbe
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
imul
loope
call
fs
add
jmp
adc
mov
mov
push
sub
jle
adc
xchg
(bad)
div
loopne
pop
pop
dec
mov
int
mov
sti
popa
cs
stos
and
xchg
(bad)
inc
add
jmp
xor
and
les
or
mov
(bad)
and
mov
jo
popf
lock
pop
xchg
les
loopne
loopne
mov
test
jo
dec
xchg
movs
push
js
in
push
popf
mov
sub
sub
jae
mov
xor
mov
lock
add
push
add
lock
(bad)
(bad)
jmp
jg
scas
mov
(bad)
inc
add
es
add
(bad)
fadd
cmps
ss
stc
add
jno
push
jecxz
mov
(bad)
out
(bad)
imul
fdivr
int
lock
adc
ins
adc
aad
dec
enter
out
inc
push
sbb
movs
sub
loop
ror
(bad)
shl
ins
popa
xchg
dec
mov
into
hlt
icebp
xchg
imul
and
mov
mov
sahf
push
adc
or
or
add
lock
(bad)
(bad)
push
mov
mov
push
add
sar
(bad)
dec
add
add
add
std
dec
jo
mov
xor
(bad)
(bad)
push
enter
add
lock
add
not
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
cdq
dec
add
add
add
push
fiadd
xor
add
(bad)
(bad)
(bad)
call
loopne
mov
add
sar
(bad)
call
out
cmp
pop
jmp
or
add
out
retf
and
stc
jae
fmul
out
pop
inc
xchg
dec
je
mov
jno
mov
pop
ins
cli
sbb
push
ins
fisub
mov
push
adc
sti
in
dec
aaa
push
or
mov
add
push
add
and
mov
lock
imul
int
inc
imul
es
cmp
xchg
lds
sbb
pushf
adc
mov
cld
or
push
lds
and
lahf
cmp
test
(bad)
(bad)
(bad)
call
loope
in
test
es
or
lock
(bad)
inc
add
lock
add
aam
add
add
add
sub
add
sbb
lock
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
jnp
sub
add
lahf
or
lock
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
stos
movs
or
enter
mov
xchg
push
push
jmp
cli
ja
sub
out
ret
dec
outs
dec
in
aaa
mov
cmps
dec
out
jle
scas
lock
out
mov
and
je
add
repz
fistp
dec
fdiv
mov
or
dec
mov
and
js
jp
mov
nop
outs
mov
fisub
out
sub
fstp
mov
jnp
lock
add
mov
add
(bad)
push
mov
mov
pusha
addr16
pop
pop
cmp
sub
iret
pusha
fs
and
cwde
or
add
inc
pop
add
push
add
and
jo
sub
retf
cmps
pop
xchg
ss
push
hlt
dec
dec
ins
shl
out
add
mov
or
rcl
cmp
scas
sub
xor
test
pop
jl
xor
xlat
mov
stos
pop
adc
int
setns
cmp
mov
adc
xchg
or
aaa
test
cmps
daa
jmp
inc
pop
cmc
repz
xchg
push
xlat
outs
xchg
test
data16
icebp
cmp
ja
mov
jmp
rcl
push
xor
(bad)
(bad)
inc
mov
push
retf
push
add
sar
(bad)
inc
add
lock
inc
add
add
add
mov
add
lock
push
dec
add
(bad)
jmp
add
lock
xlat
dec
je
(bad)
cmps
imul
jo
adc
mov
fadd
or
sti
rol
lock
add
sbb
add
add
lock
adc
push
add
jns
ins
bound
inc
ins
test
in
sub
cmp
sub
jmp
int
cli
clc
in
cmps
outs
sbb
xchg
pop
sahf
aad
push
bound
dec
xchg
jns
pop
jnp
push
pop
aaa
hlt
lods
pop
jae
pop
rol
mov
push
jle
push
and
add
pushf
stc
mov
popa
jb
dec
or
adc
popf
mov
imul
mov
or
adc
push
mov
movs
icebp
test
retf
pop
lea
js
jg
lds
aad
xchg
or
mov
data16
pop
mov
push
inc
cmps
jno
jno
mov
adc
outs
and
repz
dec
fs
retf
push
(bad)
sbb
cwde
into
jno
inc
mov
jg
dec
fs
pop
cmp
xor
cld
(bad)
inc
imul
adc
popa
rcl
clc
xchg
push
or
push
js
add
retf
jp
cdq
js
fisttp
mov
ins
sub
push
adc
test
pusha
dec
inc
outs
xchg
sbb
xor
aas
dec
lods
pop
(bad)
xchg
mov
test
ja
mov
cwde
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
mov
cwde
xor
pop
add
add
add
xchg
dec
add
lock
pop
mov
push
data16
icebp
xchg
and
inc
lods
pop
fist
test
lahf
mov
xlat
sub
cmps
mov
hlt
iret
pusha
lock
inc
mov
add
cmc
pop
cmps
test
movs
pop
or
retf
iret
daa
jno
test
out
sbb
dec
pop
sbb
sub
retf
xchg
adc
ins
xchg
push
push
xchg
mov
jae
outs
pop
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
sub
dec
sahf
or
sar
cdq
lods
out
aad
fild
inc
add
scas
ret
test
add
mov
sbb
jnp
sub
dec
fcomp
pop
pop
or
add
imul
sbb
out
je
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
sbb
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
fwait
test
popa
(bad)
pushf
dec
add
lock
pop
add
xor
add
(bad)
(bad)
(bad)
inc
jo
push
pop
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
cmp
inc
fmul
add
add
lock
pop
add
bound
call
cld
and
fwait
inc
cmp
jmp
in
clc
repnz
add
js
(bad)
jns
ret
xchg
call
shl
(bad)
cs
imul
cmp
popf
sbb
sbb
xor
test
jg
fstp
add
dec
xchg
test
xor
aam
leave
xchg
arpl
xor
(bad)
(bad)
(bad)
(bad)
jmp
imul
sar
(bad)
(bad)
mov
add
and
add
lock
lock
add
add
sbb
pop
mov
cmp
scas
popf
ret
and
xchg
inc
sub
jbe
xchg
jg
adc
jmp
mov
xchg
scas
mov
jmp
xor
dec
lahf
(bad)
adc
add
outs
jg
add
sub
data16
popf
aam
sahf
hlt
pop
push
cmp
add
(bad)
(bad)
(bad)
(bad)
fstp
adc
fld
cmps
arpl
lock
(bad)
inc
add
lock
adc
add
lock
add
(bad)
(bad)
(bad)
call
jl
fcmovne
(bad)
jmp
add
sar
(bad)
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
int
add
retf
rcl
lock
xchg
dec
xchg
(bad)
aam
ret
sub
mov
push
stos
and
or
(bad)
mov
jo
inc
ss
jnp
lea
es
mov
cmpps
jge
out
ins
mov
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fwait
hlt
test
loope
add
push
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fist
adc
fld
scas
pop
add
lock
add
jmp
adc
mov
test
(bad)
(bad)
call
hlt
add
lock
add
lock
add
lock
(bad)
(bad)
dec
sub
test
addr16
sar
(bad)
call
add
xchg
lock
push
add
lock
(bad)
(bad)
jmp
cmp
push
push
jmp
(bad)
addr16
sar
(bad)
dec
add
lock
add
jns
add
shr
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
dec
mov
push
pop
jp
add
lock
lock
add
mov
add
add
add
cwde
xchg
add
add
add
add
add
ficom
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
xor
add
mov
add
fmulp
scas
and
mov
out
sub
push
shr
xchg
xchg
lods
or
inc
dec
enter
sbb
gs
inc
popf
mov
sti
and
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
mov
into
push
add
add
sar
(bad)
call
xchg
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
adc
test
mov
lock
ins
add
sub
xlat
or
jno
repnz
mov
fs
add
aaa
mov
movs
imul
imul
jecxz
mov
xchg
add
add
sar
(bad)
inc
fs
lock
add
lock
add
lock
mov
lock
mov
lock
add
cld
ficomp
push
push
pusha
mov
stos
adc
sbb
scas
daa
lods
pop
cmp
ins
movs
outs
jecxz
inc
stos
fcomip
(bad)
and
sbb
dec
mov
mov
mov
retf
repnz
jg
push
adc
sbb
sbb
pop
fisub
cmp
stc
sub
and
call
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
mov
mov
mov
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
adc
sub
mov
jmp
(bad)
cmp
inc
inc
push
fldenv
(bad)
xchg
leave
push
ins
mov
test
rcr
pop
push
fdiv
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
daa
add
lock
(bad)
(bad)
call
mov
sbb
add
sar
(bad)
jmp
add
(bad)
(bad)
(bad)
inc
outs
pop
push
jns
rol
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
loopne
add
lock
pusha
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
cmp
add
pop
je
lock
add
cmp
lock
add
mov
add
pusha
add
add
xchg
mov
in
dec
push
js
imul
or
mov
cmp
sub
and
xchg
cs
das
(bad)
inc
vmovhps
lods
jb
mov
pop
dec
mov
add
lock
add
inc
jne
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
add
pop
pop
and
inc
push
(bad)
sbb
rcr
dec
xchg
push
add
jbe
jp
dec
addr16
mov
cmps
sbb
ror
pop
rol
add
add
add
add
adc
mov
jmp
fcomp
mov
pop
outs
or
lods
and
and
jmp
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
xor
add
xchg
or
lock
add
or
push
jmp
pop
frstpm(287
and
ret
and
xchg
lock
jl
cmp
push
sub
call
push
add
lock
and
add
lock
add
lock
jns
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
jge
cmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
loop
loop
jo
pop
arpl
out
stos
aad
fisubr
pop
or
or
xchg
in
aaa
call
test
out
push
lods
or
repz
add
add
or
add
inc
add
lock
(bad)
(bad)
(bad)
fst
cld
rcl
loope
in
jp
lock
(bad)
(bad)
mov
scas
add
add
add
or
mov
lock
add
(bad)
(bad)
(bad)
push
in
dec
inc
xor
pop
add
lock
or
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
ror
jnp
lock
pop
mov
xor
jle
sbb
leave
es
retf
pusha
loope
in
mov
mov
pop
aad
cwde
mov
(bad)
dec
out
bound
in
rcr
jae
les
xchg
jl
cmp
clc
mov
adc
pusha
pop
add
(bad)
pusha
add
push
add
adc
cld
sub
(bad)
clc
xchg
iret
out
ffree
ins
push
in
dec
test
(bad)
out
movs
pop
pusha
cmp
dec
jmp
pop
rol
(bad)
cld
enter
out
popa
test
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
pop
cmp
jle
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
sbb
push
jecxz
xchg
xlat
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
add
mov
mov
add
call
mov
sub
outs
xchg
dec
inc
sti
sub
clc
pop
cli
lock
in
cmp
fild
inc
push
test
inc
add
jecxz
popf
mov
stc
mov
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sti
rcr
fiadd
cmp
add
add
int3
add
mov
inc
repz
stos
stos
jle
add
aam
out
adc
sbb
ror
pop
xchg
pop
in
xor
ins
jb
loopne
sub
aas
div
repz
popa
clc
ret
cmps
scas
jle
push
dec
inc
repnz
ds
movs
out
jmp
popa
push
out
push
call
outs
or
popf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ja
dec
fld
ja
add
mov
sbb
jmp
jmp
xchg
test
rcl
nop
sbb
loope
in
(bad)
dec
mov
mov
xchg
add
in
mov
jecxz
fnstcw
xchg
movs
cld
add
mov
sub
ja
js
cdq
out
rcl
loope
sti
mov
mov
in
and
mov
test
fst
enter
arpl
or
mov
inc
xchg
(bad)
push
jo
cld
inc
sub
stc
adc
push
mov
ins
lds
sub
and
jl
mov
add
out
stc
cmp
ret
mov
xlat
sub
lahf
ins
jo
and
daa
lods
mov
mov
ins
imul
sub
add
rcl
add
mov
pusha
cmps
push
jns
call
cdq
loopne
jmp
add
es
mov
fmul
dec
(bad)
paddusb
rol
movs
inc
fimul
sub
js
mov
add
push
lods
push
sahf
push
(bad)
imul
or
or
fmul
jmp
repz
push
js
or
and
mov
and
gs
add
out
fisub
dec
hlt
xor
or
fs
cmp
inc
out
mov
sub
add
(bad)
(bad)
(bad)
jmp
jmp
scas
sbb
add
sar
(bad)
call
test
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
fcom
sti
rcl
xor
and
hlt
cli
shr
sar
imul
repz
in
sahf
push
jno
sub
add
xor
pop
pop
cdq
mov
add
add
sti
dec
add
add
add
adc
lock
add
ins
xchg
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
cs
inc
in
lods
popf
retf
fs
or
jns
and
inc
add
fnstsw
aad
dec
sub
add
fistp
fisubr
int
dec
rcl
xor
aam
mov
cmps
add
jae
fs
adc
popf
out
cmps
cli
pop
hlt
jmp
int
cmp
fst
call
jecxz
push
xchg
ins
jmp
sahf
xchg
pushf
lds
add
push
lock
inc
fnsave
fdiv
pop
js
xor
mov
add
add
add
add
add
jne
add
scas
pop
add
lock
sbb
or
add
add
add
mov
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
ret
fsub
inc
add
lock
add
and
ins
jmp
or
mov
(bad)
stc
or
xor
push
pop
daa
into
stos
push
test
cmc
jb
repnz
js
pop
or
sti
iret
dec
ja
ins
mov
cmp
push
jmp
aam
xor
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
ins
mov
icebp
cmp
add
dec
mov
lock
add
(bad)
(bad)
(bad)
jmp
jle
adc
lock
(bad)
push
add
lock
(bad)
(bad)
push
(bad)
ror
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
aaa
add
lock
add
(bad)
(bad)
(bad)
dec
jl
test
sar
(bad)
call
stc
mov
loopne
sbb
(bad)
fdivr
xchg
ss
in
push
lods
fsub
stc
sub
mov
sti
mov
loope
fs
ins
and
mov
adc
mov
retf
lock
in
call
mov
pop
in
movs
mov
cmp
shr
hlt
loope
jo
push
push
clc
loope
mov
mul
jns
in
fs
icebp
out
sub
pop
xchg
arpl
push
sti
fiadd
retf
sbb
xor
mov
pop
mov
cs
add
or
xchg
pop
pop
push
mov
lods
xchg
sub
mov
arpl
mov
(bad)
pop
jb
xchg
enter
mov
neg
push
jg
mov
jnp
arpl
icebp
push
clc
cmp
jmp
hlt
jl
stos
jecxz
(bad)
adc
not
or
cdq
mov
lock
or
stos
jmp
cmp
cmp
shl
std
inc
xor
lock
add
push
adc
dec
sar
(bad)
(bad)
fsubr
lock
add
lock
add
lock
add
lock
add
pop
add
lock
(bad)
(bad)
call
ins
test
sub
(bad)
inc
add
pushf
pop
push
lock
(bad)
(bad)
push
add
lock
(bad)
(bad)
push
xchg
fsubr
iret
mov
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
xor
fwait
lea
lock
movs
jo
pop
aas
outs
fnstenv
movs
sbb
sub
sub
and
add
or
xchg
ror
dec
stos
mov
xchg
lods
add
pop
xchg
loopne
in
cli
mov
cli
cdq
ret
or
(bad)
shl
adc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
stos
and
mov
lock
cmp
stos
cmp
jmp
out
sahf
or
inc
sbb
movs
fmul
adc
sar
jp
aam
loop
fsub
imul
or
dec
inc
pop
inc
xchg
jmp
les
lods
jbe
cmp
test
jae
inc
repnz
mov
das
ror
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
and
nop
add
mov
add
lock
or
nop
lahf
pop
mov
cmp
push
iret
cli
mov
mov
mov
mov
add
mov
or
out
xchg
es
xchg
pop
fs
xchg
cmps
mov
dec
clc
push
test
out
aam
add
cmps
dec
xchg
mov
mov
(bad)
(bad)
(bad)
inc
int
aaa
xor
bound
add
lock
add
into
cmps
jno
out
sbb
int
and
or
mov
and
or
xchg
jae
nop
mov
sbb
retf
or
jbe
out
leave
push
int
jo
add
lock
lock
adc
mov
and
or
mov
xor
dec
aas
daa
pop
lods
and
push
pop
jb
addr16
xbegin
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
retf
mov
add
mov
add
or
lock
add
and
hlt
dec
not
cld
fisttp
cmps
mov
fld
je
and
and
adc
add
lock
(bad)
(bad)
dec
lds
loopne
and
xchg
add
ret
(bad)
(bad)
jmp
mov
lods
mov
mov
mov
fs
out
retf
scas
scas
add
int3
sub
xchg
xor
(bad)
in
movs
dec
cmp
leave
push
adc
test
pushf
sub
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
hlt
inc
int3
in
adc
xchg
add
scas
xchg
add
aaa
add
lock
(bad)
(bad)
jmp
xor
xchg
aas
xchg
add
sar
(bad)
jmp
lock
out
add
push
add
and
push
daa
sti
movs
push
aaa
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
fisttp
shl
jno
sub
xchg
jne
cmp
fmul
add
and
mov
aam
imul
inc
jle
sbb
lods
mov
add
add
add
enter
lods
inc
pop
or
stc
test
aaa
mov
arpl
dec
loope
dec
inc
pop
xor
mov
lahf
mov
sub
(bad)
(bad)
push
bound
cmp
add
xchg
lmsw
xlat
in
(bad)
pop
sub
mov
sbb
inc
std
add
lods
shr
mov
jmp
(bad)
pop
mov
clc
or
ja
inc
and
loopne
mov
pusha
mov
data16
or
sbb
and
lods
test
inc
push
pushf
imul
xor
mov
push
mov
xchg
cmps
jle
jp
ins
sbb
and
fidiv
or
cmc
mov
fnstenv
cmp
push
push
mov
outs
cdq
pop
dec
mov
or
sahf
ror
iret
(bad)
fisttp
push
sbb
add
xchg
mov
xor
mov
pop
call
bound
and
js
repz
cmp
fdiv
push
daa
repnz
add
(bad)
(bad)
(bad)
call
xor
movs
dec
cwde
je
call
cmp
add
(bad)
(bad)
(bad)
jmp
popa
or
(bad)
call
lock
(bad)
push
add
lock
(bad)
(bad)
push
movs
dec
cwde
je
cli
data16
add
sar
(bad)
inc
add
lock
test
xchg
inc
push
idiv
stos
cli
idiv
imul
xor
not
cmp
add
std
mul
xchg
ror
xor
in
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
icebp
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
xchg
mov
add
call
push
add
push
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xor
add
add
add
add
(bad)
(bad)
(bad)
(bad)
fimul
into
xchg
mov
add
mov
shl
inc
mov
enter
cmp
inc
xchg
nop
fcomp
mov
and
in
push
mov
outs
push
pop
push
ja
pop
xor
jle
repz
dec
sub
sub
pop
push
cli
and
mov
dec
jb
mov
adc
sub
push
push
fadd
mov
xchg
scas
xchg
call
and
out
lods
xor
lahf
adc
fwait
aad
and
pop
arpl
xchg
popa
mov
pop
pusha
xor
hlt
shr
jle
mov
stos
fucomp
(bad)
ja
test
fild
xchg
dec
xlat
jbe
icebp
jo
inc
rcr
sbb
pop
jbe
mov
inc
jp
jae
pop
cdq
js
mov
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
mov
fsub
aad
nop
add
add
add
push
add
lock
add
ret
sbb
add
xor
mov
addr16
sub
es
sub
lock
addr16
mov
fs
mov
test
push
js
or
pop
gs
sbb
inc
adc
add
(bad)
push
add
(bad)
push
add
cmp
add
(bad)
(bad)
(bad)
call
inc
jmp
jno
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
scas
sbb
add
stos
adc
lock
add
add
add
fstp
sbb
(bad)
(bad)
push
add
lock
add
push
add
lock
(bad)
(bad)
call
sbb
(bad)
push
mov
lock
(bad)
(bad)
jmp
push
ss
dec
inc
adc
xchg
aas
add
xor
sbb
sar
popf
inc
sub
fs
std
mov
inc
push
jl
retf
push
call
push
ffree
sub
sub
push
or
iret
inc
das
jo
mov
jecxz
cmps
sbb
or
mov
pop
out
fild
mov
pop
adc
jo
xor
jb
shl
test
outs
adc
stc
imul
outs
pop
cmp
daa
ror
sar
(bad)
jmp
add
lock
add
lock
add
lock
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
jns
sar
(bad)
or
stos
(bad)
arpl
ffreep
and
mov
imul
ret
and
in
and
scas
add
(bad)
aaa
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
outs
loope
add
add
add
sti
rol
lock
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ds
pushf
pop
pop
cmp
add
add
add
add
add
sbb
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lahf
mov
out
cmp
lods
add
aas
xchg
cmp
jle
ins
pop
pop
mov
mov
xchg
retf
pop
mov
sub
pop
ficom
sbb
xchg
icebp
and
mov
gs
or
int
add
mov
adc
jno
sahf
dec
jbe
movs
ja
add
push
and
cs
into
mov
mov
sar
(bad)
inc
add
lock
add
lock
add
lock
add
pop
rol
pusha
add
add
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
sbb
js
xchg
ret
jno
icebp
out
movs
ds
lods
jmp
xchg
cmp
lods
mov
xchg
cdq
je
sbb
pop
xchg
push
pop
scas
and
jmp
dec
aas
test
add
dec
loope
aad
push
mov
xchg
sub
mov
out
fistp
shl
mov
mov
sub
call
cmp
pushf
push
xlat
inc
in
pop
(bad)
xor
das
(bad)
cmp
mov
fist
cmp
shl
je
imul
inc
cmp
jbe
sbb
popa
fdivp
leave
cld
pop
push
pop
mov
jnp
es
scas
mov
mov
and
ret
cs
jp
pop
push
fadd
out
jb
stc
pop
(bad)
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ss
lock
lods
add
inc
add
lock
(bad)
(bad)
jmp
mov
xchg
(bad)
(bad)
push
add
lock
(bad)
(bad)
jmp
mov
add
sar
(bad)
push
cmp
add
add
add
add
add
add
shr
add
test
loop
push
jo
dec
addr16
lods
call
ficomp
jl
repz
leave
inc
mov
loopne
cmp
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
push
nop
sub
adc
lock
add
lock
add
xor
fstp
test
(bad)
(bad)
inc
add
lock
add
lock
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
push
add
lock
xchg
add
and
lock
add
lock
(bad)
(bad)
dec
mov
jl
xchg
ret
mov
lock
(bad)
push
adc
jo
sub
movs
pop
test
and
outs
pop
and
xchg
cs
fld
push
push
pusha
push
inc
ret
sbb
ficomp
call
(bad)
sub
mov
pop
jmp
repz
loopne
push
clc
jne
xchg
and
(bad)
ss
adc
mov
in
add
mov
mov
outs
jbe
fxch
cmp
sbb
push
sub
daa
jo
imul
dec
push
mov
scas
pop
pop
(bad)
mov
push
lea
rcr
ins
xchg
inc
lods
mov
and
icebp
jae
or
add
rcl
mov
cmp
cs
mov
pop
cld
fnstsw
jge
pushf
xor
ja
sub
call
in
and
add
lock
(bad)
(bad)
cmp
or
add
lock
add
lock
(bad)
(bad)
inc
(bad)
xlat
jl
imul
ret
(bad)
(bad)
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
lods
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
scas
and
scas
out
retf
std
jg
add
add
sar
(bad)
jmp
add
lock
add
lock
add
lock
add
add
(bad)
(bad)
(bad)
call
icebp
jecxz
sub
les
(bad)
push
push
pop
enter
mov
xlat
dec
icebp
jno
xchg
ss
les
mov
jmp
xchg
lock
push
push
inc
nop
sub
push
cwde
mov
loopne
fild
xchg
or
std
arpl
out
scas
int3
jp
pop
cmp
out
loopne
pop
jnp
pusha
cmp
or
loope
add
add
add
add
add
sbb
add
xor
lock
in
lods
repz
push
xchg
push
rol
call
cmp
xor
stos
pop
pop
cmps
jecxz
cmps
xor
stos
addr16
loope
sbb
jge
push
cdq
add
push
add
adc
add
lock
add
add
add
add
add
add
or
add
popf
add
lock
add
add
add
imul
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sar
cmp
and
mov
aad
sub
in
mov
mov
in
pop
xor
add
lahf
out
imul
sahf
int3
iret
jecxz
aas
push
inc
pushf
cmp
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
neg
add
lock
(bad)
(bad)
push
push
add
daa
sub
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jne
adc
add
pop
mov
add
dec
rol
lock
add
adc
adc
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsin
fidiv
xchg
sbb
out
mov
jb
outs
mov
mov
push
movs
int3
lds
jbe
cmp
lods
mov
rcl
inc
mul
dec
mov
es
sbb
push
test
inc
add
pushf
imul
imul
add
jo
inc
add
push
add
lock
add
add
add
fisttp
lock
add
and
add
or
add
leave
ror
mov
rol
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jecxz
fld
mov
lds
inc
add
add
sar
(bad)
push
stos
add
lock
add
cmp
add
test
add
add
add
add
add
outs
test
stos
pop
mov
stc
test
jle
fdiv
inc
addr16
lods
outs
test
into
addr16
inc
xchg
ret
ret
cmc
arpl
or
cmp
test
sti
repnz
mov
out
leave
cmp
rol
out
pop
in
dec
sbb
call
scas
pop
fimul
jbe
xchg
sar
pop
xchg
mov
std
pusha
xchg
add
imul
je
popa
clc
imul
loop
retf
out
test
fisub
and
push
jb
cmp
push
sub
aas
mov
inc
dec
dec
dec
sbb
cmp
and
clc
sub
mov
push
inc
add
mov
movs
xchg
mov
lock
add
add
add
mov
jno
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pusha
xchg
or
add
add
add
(bad)
stos
cld
bound
pop
jecxz
sbb
xor
mov
fmul
leave
jae
ss
cmps
repz
pop
push
ja
and
inc
mov
test
(bad)
(bad)
(bad)
inc
lahf
mov
les
lock
(bad)
jmp
addr16
add
add
cmps
push
ret
mov
iret
add
push
adc
pop
sbb
scas
adc
lods
sbb
xchg
xor
add
add
add
je
stos
sub
ficomp
mov
fistp
add
inc
add
lock
mov
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
in
and
lock
(bad)
(bad)
inc
and
sub
add
sar
(bad)
push
add
push
add
xor
lock
add
(bad)
(bad)
(bad)
call
push
pop
lock
call
sbb
add
add
lock
(bad)
inc
nop
add
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
inc
jb
xchg
sbb
repz
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
jge
cmp
lock
leave
add
(bad)
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
pop
ins
mov
icebp
add
add
push
enter
add
lock
add
(bad)
sbb
adc
sbb
mov
push
enter
cwde
mov
dec
pop
jae
(bad)
mov
icebp
fadd
sbb
aam
daa
and
int3
sbb
push
popf
jmp
sub
cli
inc
jnp
jl
inc
push
lods
or
xor
xlat
xchg
call
aaa
mov
xor
lock
add
add
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
clc
and
(bad)
(bad)
(bad)
jmp
adc
inc
lds
add
inc
int
lock
pop
add
lock
add
adc
add
add
add
lahf
jnp
mov
sar
(bad)
call
je
lock
add
lock
add
lock
add
or
add
mov
add
adc
add
sub
sub
mov
sbb
cmp
(bad)
push
push
cmp
jns
push
inc
out
ficom
mov
pushf
adc
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
sub
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
shl
imul
aam
lock
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
fisttp
add
add
add
push
add
lock
(bad)
(bad)
call
rcl
add
loop
(bad)
(bad)
dec
add
xor
add
call
mov
(bad)
(bad)
(bad)
jns
arpl
xor
cmc
mov
cmp
or
pushf
mov
or
adc
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
fcmovnbe
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
and
and
add
sbb
add
add
add
in
aas
add
add
add
jns
add
add
add
inc
add
lock
add
or
(bad)
(bad)
dec
aaa
(bad)
sar
(bad)
inc
add
mov
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
push
xchg
pop
add
lock
aad
lock
add
(bad)
(bad)
(bad)
jmp
movs
cmp
jmp
push
sub
adc
lods
pushf
or
hlt
mov
sbb
stos
clc
lds
outs
pusha
inc
inc
xchg
push
jp
mov
sub
lahf
xor
cld
into
sar
push
fbld
pop
mov
in
add
sub
rcl
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
ror
add
test
add
lock
add
lock
add
(bad)
(bad)
(bad)
jmp
(bad)
jo
(bad)
popf
dec
push
sub
add
sar
(bad)
inc
add
lock
cmp
add
cli
sbb
retf
popa
cmps
xchg
or
int3
inc
mov
mov
popa
mov
adc
push
sbb
and
outs
dec
mov
pop
mov
loope
out
xor
lahf
xor
jb
ret
call
cli
jbe
loope
push
hlt
shl
jl
out
ficom
ds
mov
and
and
push
mov
adc
fs
add
add
sar
(bad)
jmp
push
lock
add
inc
add
lock
add
lock
add
add
add
imul
fnop
(bad)
(bad)
(bad)
cmp
add
lock
add
mov
stos
ss
outs
imul
jl
mov
inc
jl
popf
jg
sbb
repz
sbb
jae
mov
js
mov
add
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
jmp
add
add
add
pusha
add
add
push
adc
lock
add
push
add
lock
add
outs
mov
lock
add
xchg
add
add
add
sub
jbe
into
mov
mov
cld
shr
jmp
cmp
imul
push
in
test
lock
add
add
add
sub
mov
xlat
and
and
xor
cmp
enter
hlt
push
sub
retf
int
int3
and
mov
lods
jae
neg
out
xchg
adc
mov
and
je
shl
lock
(bad)
(bad)
push
cmc
add
inc
ss
lock
(bad)
push
push
add
jno
int3
das
pop
xor
in
sub
loop
lea
ds
inc
scas
dec
retf
fiadd
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
or
mov
add
lock
add
lock
add
adc
aad
push
xchg
sar
(bad)
call
add
lock
add
lock
push
sub
jmp
mov
je
call
push
or
inc
lods
lea
into
add
mov
inc
popf
dec
pop
push
and
mov
add
and
lock
add
cmpxchg
hlt
xchg
dec
ja
jb
inc
mov
js
dec
test
ret
xchg
ss
call
dec
ret
ret
xor
loope
ret
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
fstp
adc
add
pavgb
lock
xchg
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
or
mov
lock
lock
loope
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
in
adc
xchg
xchg
push
sbb
adc
mov
enter
xchg
mov
std
and
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
mov
add
(bad)
(bad)
(bad)
jmp
(bad)
lods
jecxz
stos
xchg
cmp
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
(bad)
call
xchg
ds
sub
mov
sar
(bad)
push
add
lock
(bad)
(bad)
push
jae
pop
cli
push
add
(bad)
(bad)
jmp
and
or
xor
mov
popf
(bad)
dec
xor
aad
int
and
nop
and
adc
lods
and
inc
repnz
jne
add
lock
pop
add
add
add
or
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmp
xchg
cdq
inc
gs
cwde
dec
(bad)
popf
jno
mov
push
stc
cmps
sbb
test
mov
or
mov
mov
cmc
cmc
call
(bad)
sub
cdq
sbb
sti
pop
adc
pop
sbb
out
cmp
out
or
lock
inc
push
or
and
dec
lahf
movs
push
jecxz
cmc
jecxz
mov
stos
das
dec
mov
ror
xchg
cmp
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
lea
cmp
add
(bad)
in
lock
add
(bad)
(bad)
(bad)
dec
adc
add
add
(bad)
(bad)
fimul
and
outs
in
aaa
dec
shl
movs
xchg
out
pop
xchg
in
mov
or
ret
movs
shr
(bad)
inc
mov
jnp
out
pop
mov
sti
jnp
mov
stc
mov
scas
test
dec
fcom
cli
loopne
add
push
add
lock
add
(bad)
(bad)
(bad)
jmp
mov
dec
mov
(bad)
call
fmul
push
pop
shr
jp
stos
rcl
sub
sar
fistp
loope
aam
mov
imul
out
push
sub
push
addr16
adc
cmps
inc
pop
xor
div
add
add
add
add
lock
add
add
add
pop
clc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
icebp
dec
rcl
xchg
adc
ret
lock
jno
stos
icebp
popa
rcr
shl
aad
dec
cmps
cwde
mov
xchg
lea
xor
or
add
ja
jmp
dec
into
cmc
mov
push
adc
cmp
call
sub
mov
mov
dec
xor
stos
adc
cmps
cdq
fwait
jg
inc
out
scas
xchg
or
std
ja
pusha
mov
or
lock
add
mov
add
add
add
add
add
dec
add
lock
add
add
iret
test
push
sar
(bad)
jmp
fld
lock
add
lock
add
(bad)
jmp
mov
je
jmp
(bad)
xlat
jnp
into
inc
sbb
mov
in
ja
inc
xchg
test
pop
dec
hlt
hlt
dec
aas
mov
movs
push
push
popf
pop
sub
mov
mov
adc
jge
shl
mov
inc
fadd
test
dec
cmc
jmp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
idiv
jge
add
and
jp
lock
add
(bad)
in
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
mov
add
pop
add
lock
(bad)
(bad)
(bad)
js
jp
retf
jg
in
add
sar
(bad)
call
out
out
test
cdq
out
ins
lock
mov
push
lea
cmp
movs
fsubr
imul
(bad)
in
mov
push
push
aad
addr16
xchg
les
std
ja
mov
push
xor
add
lock
push
add
lock
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
outs
push
cmc
mov
add
(bad)
(bad)
(bad)
jmp
mov
arpl
out
add
sar
(bad)
call
out
add
xor
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
out
enter
adc
cli
out
pop
push
cmp
cmp
cmps
adc
retf
and
jnp
popa
xchg
imul
loop
add
jb
test
xor
icebp
fld
shr
xchg
jle
jmp
test
lock
add
add
add
inc
add
lock
add
or
add
(bad)
(bad)
(bad)
inc
lahf
pop
cmp
(bad)
(bad)
inc
add
aad
add
(bad)
cmp
add
(bad)
(bad)
(bad)
jmp
imul
lock
(bad)
inc
mov
add
sub
loop
or
sti
pop
out
test
js
pushf
xor
mov
pop
jnp
rol
xchg
ins
xor
push
dec
nop
push
jmp
test
pop
or
loopne
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
jne
adc
lock
(bad)
(bad)
inc
arpl
mov
hlt
add
sar
(bad)
inc
add
add
add
pop
adc
gs
cli
aam
and
push
in
mov
(bad)
cmp
retf
lock
or
or
xor
adc
push
push
aad
sbb
xor
push
js
and
stos
sub
pop
mov
test
xor
repz
mov
mov
in
cmp
ja
dec
daa
test
popa
xor
cmp
push
lods
mul
add
adc
add
lock
add
lock
(bad)
(bad)
jmp
test
jg
retf
add
pop
add
sar
(bad)
(bad)
jmp
add
jp
mov
ins
mul
sbb
lods
or
call
pop
adc
dec
mov
lock
mov
add
outs
xchg
add
outs
push
add
push
add
and
clc
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
jo
adc
add
lock
(bad)
(bad)
call
movs
lods
adc
stc
add
sar
(bad)
jmp
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
xchg
out
lock
add
add
add
dec
inc
inc
push
mov
push
pop
add
add
sar
(bad)
dec
cld
add
lock
add
lock
add
lock
push
mov
clc
xchg
fimul
or
sbb
jg
mov
push
sub
inc
rol
jns
xchg
or
sub
mov
add
lods
js
ja
sbb
cs
xchg
xor
inc
test
push
add
lock
add
add
add
add
add
ficom
adc
add
lock
add
cli
cmp
adc
add
lock
inc
add
cmp
add
add
add
cdq
pop
add
add
add
mov
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
and
sar
add
(bad)
(bad)
(bad)
jmp
xchg
mov
fisub
push
jo
std
add
sar
(bad)
(bad)
in
hlt
add
adc
dec
stc
jnp
aad
int
mov
in
pop
mov
in
adc
and
dec
retf
and
fs
ror
loopne
pop
xchg
imul
cmps
(bad)
pop
dec
aas
and
mov
shr
scas
in
xor
mov
stos
scas
cmp
into
mov
inc
dec
call
dec
cwde
int
mov
dec
mov
jge
mov
(bad)
pop
dec
and
dec
paddb
pop
movs
imul
cwde
cbw
js
dec
mov
xchg
outs
push
pop
push
xchg
push
shr
mov
jle
lods
pop
movs
mov
loop
daa
push
nop
push
sbb
bound
retf
rcl
and
push
std
fs
stos
xchg
scas
jo
jo
sbb
in
pusha
jmp
fwait
xchg
dec
in
jae
mov
push
pop
mov
cmp
in
ret
mov
sub
lock
push
add
or
add
xor
add
(bad)
(bad)
(bad)
jmp
js
mov
add
sar
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
lock
fadd
add
push
add
lock
mov
and
clc
add
jg
jp
lahf
cld
inc
jge
call
rcr
retf
adc
xlat
cmp
lods
sub
lods
fbstp
icebp
inc
mov
data16
jne
inc
punpcklbw
cmps
(bad)
in
dec
push
mov
in
cmp
les
shr
std
jg
cdq
add
mov
fs
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
pop
movs
mov
add
sub
add
inc
inc
out
sub
push
push
push
push
pop
cli
dec
sahf
sbb
stos
cmp
push
int3
cmp
test
xchg
push
call
push
in
sub
cmp
and
mul
add
cmp
add
add
mov
inc
add
add
add
mov
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
out
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
(bad)
(bad)
(bad)
dec
xor
cmp
add
dec
add
lock
aaa
add
push
jb
push
push
call
push
mov
jp
mov
hlt
push
out
push
push
xor
bound
push
mov
push
add
lock
add
out
add
stos
aam
lock
add
add
add
pop
add
lock
add
or
add
(bad)
(bad)
(bad)
call
mov
xor
sar
(bad)
call
add
popf
movs
add
push
aas
add
ss
add
or
add
cmp
sub
nop
fimul
fcmovb
aas
fwait
push
xchg
mov
xchg
call
repz
cmps
stos
mov
mov
mul
sub
repnz
fld
pop
push
fisub
push
add
pop
xor
movs
push
lock
(bad)
(bad)
cmp
add
lock
add
lock
add
lock
adc
jp
mov
mov
in
mov
xchg
sbb
push
movs
jmp
push
ds
lods
retf
jge
call
fcom
mov
mov
loop
mov
jge
ret
int
(bad)
mov
cmp
sbb
mov
scas
cmp
push
push
inc
loop
mov
scas
mov
es
stos
ins
scas
or
aad
jb
stos
add
add
or
xchg
or
aam
dec
mov
or
lock
add
sub
add
(bad)
(bad)
(bad)
dec
fmul
inc
lods
sbb
sar
(bad)
push
cld
mov
cs
cmp
aam
in
xchg
mov
(bad)
(bad)
dec
pop
push
sahf
jge
sbb
mov
loope
dec
push
bound
clc
fmul
(bad)
in
shl
loopne
call
mov
out
pop
leave
xor
ror
clc
retf
mov
jno
jo
push
mov
mov
or
(bad)
idiv
lods
aam
add
mov
leave
mov
inc
stos
adc
xchg
in
inc
inc
ss
retf
add
lock
push
add
rcl
(bad)
xchg
dec
leave
mov
aad
hlt
add
nop
lods
out
jge
mov
mov
dec
push
dec
and
jecxz
out
int
(bad)
or
out
sub
or
lea
ret
mov
shr
xchg
mov
cli
xchg
out
mov
or
mov
xchg
(bad)
mov
ror
inc
mov
retf
inc
jb
inc
daa
das
rol
mov
pop
ret
and
inc
mov
push
retf
jo
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
lock
sbb
lock
add
or
add
add
add
add
add
imul
dec
jns
mov
and
popa
jnp
div
push
sbb
rcr
and
adc
out
dec
add
cmp
add
add
mov
jo
pop
rcr
cdq
sbb
in
test
ror
mov
movs
adc
pop
fdivr
(bad)
(bad)
(bad)
call
(bad)
sahf
adc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
xor
add
dec
or
or
hlt
mov
mov
ins
push
pop
pop
in
mov
ficom
in
fsubr
imul
test
mov
aas
xlat
inc
rcl
test
popf
xchg
fmul
stc
cmp
aam
add
mov
int3
mov
outs
xchg
inc
mov
or
mov
inc
mov
cmp
sar
sbb
sbb
push
cmp
adc
stos
ss
pop
pop
sub
lahf
jecxz
ins
inc
loop
sbb
jo
imul
fcmovu
cwde
cmp
sub
std
xchg
push
pop
mov
out
jmp
mov
mov
outs
repnz
pop
std
mov
mov
pop
push
cld
sbb
(bad)
stos
dec
arpl
gs
push
xor
xor
jg
movs
dec
das
xlat
out
push
sar
jne
in
sub
mov
icebp
push
mov
retf
sti
or
repnz
push
std
sub
jmp
ficom
or
js
in
sbb
inc
cmp
aad
push
dec
jge
les
push
xchg
stos
dec
outs
ja
popf
je
(bad)
cmp
out
in
leave
repz
lea
jl
out
mov
iret
xor
stos
mul
push
or
les
scas
retf
pop
and
pusha
jp
cld
sub
mov
mov
stos
arpl
mov
pop
test
lock
add
lock
lock
(bad)
(bad)
inc
(bad)
popf
dec
push
xchg
dec
cli
mov
(bad)
(bad)
jmp
add
lock
(bad)
(bad)
call
inc
cdq
clc
hlt
or
add
(bad)
jmp
add
add
add
cmp
add
and
add
lock
(bad)
(bad)
jmp
pop
mov
push
sahf
or
lock
(bad)
call
or
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
retf
push
out
pusha
adc
ja
shl
test
imul
test
hlt
inc
mov
repnz
movs
push
pop
add
add
jns
add
adc
pop
add
add
add
add
add
jg
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
inc
add
lock
add
or
add
(bad)
(bad)
(bad)
call
movs
jae
mov
(bad)
jmp
add
lock
add
call
lock
add
or
(bad)
(bad)
push
push
push
ins
movs
jae
(bad)
(bad)
dec
add
xor
call
scas
cs
inc
loop
add
add
sar
(bad)
dec
add
lock
add
lock
add
lock
(bad)
(bad)
dec
lock
(bad)
fstp
adc
sbb
lock
(bad)
jmp
mov
push
popa
es
aaa
sbb
add
lds
sahf
stos
and
sti
jmp
mov
std
test
jne
or
fwait
mov
pop
pop
push
xchg
lahf
mov
adc
sub
jmp
dec
push
mov
adc
add
lock
add
pop
mov
ins
cmp
(bad)
(bad)
push
jne
lock
add
pop
add
lock
stos
rcr
cmps
pop
pop
je
xor
mov
pop
(bad)
dec
cmc
xchg
push
jbe
mov
(bad)
daa
gs
adc
push
add
lock
(bad)
(bad)
call
clc
cmp
into
sub
sar
(bad)
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
imul
add
rcl
add
ins
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fst
cmps
test
aaa
scas
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
retf
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
jecxz
mov
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
outs
pop
inc
push
add
lock
add
push
add
lock
(bad)
(bad)
inc
xor
push
push
pop
test
add
lock
inc
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jl
das
daa
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovne
(bad)
mov
push
stc
inc
add
lock
pop
add
cmp
add
(bad)
(bad)
(bad)
(bad)
jl
in
or
sbb
sar
(bad)
push
add
lock
(bad)
(bad)
jmp
lods
ins
or
sar
(bad)
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
add
(bad)
(bad)
(bad)
inc
jg
daa
fs
lock
(bad)
inc
add
lock
clc
add
retf
lods
xor
pop
test
(bad)
sahf
aad
xchg
lods
out
movq
mov
ret
repnz
das
hlt
or
imul
dec
inc
mov
cmc
mov
pusha
jmp
lds
add
mov
ja
test
cdq
iret
sbb
jle
pop
xchg
adc
outs
repz
ss
push
adc
jl
pop
(bad)
xchg
cmp
mov
xchg
jl
and
push
pop
push
mov
seta
(bad)
std
or
xchg
xor
bound
aam
add
add
adc
add
pop
setae
loopne
adc
movs
push
and
adc
(bad)
movs
pop
pop
jo
cmp
push
jne
xor
mov
xor
dec
xchg
pop
test
enter
out
jmp
adc
xor
cld
add
std
pop
adc
call
xlat
cmp
xor
fsubr
cmp
jae
xor
dec
lock
clc
pop
mov
pop
dec
or
das
fst
jle
sti
mov
lahf
js
gs
out
sub
add
(bad)
(bad)
(bad)
push
inc
mov
(bad)
sbb
lock
(bad)
(bad)
jmp
add
lock
or
jmp
mov
je
idiv
cmp
in
fadd
dec
jg
jbe
pop
jne
xlat
imul
jae
(bad)
adc
lock
add
cwde
cwde
add
into
data16
imul
imul
icebp
jo
loope
mov
shl
fisttp
push
mov
(bad)
add
(bad)
(bad)
(bad)
call
in
inc
mov
and
sar
(bad)
jmp
add
add
add
dec
fptan
jo
push
xchg
mov
out
dec
sbb
movs
daa
ret
daa
ret
push
add
adc
add
and
lock
in
pop
shl
cmp
retf
add
xchg
daa
aad
les
call
imul
les
(bad)
shl
lods
sbb
mov
sbb
mov
inc
add
lock
(bad)
(bad)
inc
outs
pop
push
jns
shl
(bad)
(bad)
(bad)
mov
fild
xor
lods
cmp
outs
jp
daa
fs
(bad)
hlt
adc
push
movs
cmp
push
push
xchg
loope
jns
popf
stc
and
cmp
mov
iret
inc
lahf
call
dec
add
fldenv
ret
and
sub
nop
adc
test
cmps
push
xchg
jp
test
mov
call
outs
mov
mov
xchg
jmp
ins
cld
jle
mov
adc
addr16
test
ins
iret
sub
mov
(bad)
mov
sbb
adc
ss
xor
pop
add
pop
xchg
dec
xchg
add
lock
add
mov
add
jl
mov
dec
shl
push
xchg
(bad)
rcr
inc
pop
addr16
push
je
aam
mov
or
in
mov
mov
jb
fimul
mov
xor
call
push
hlt
shl
xchg
and
nop
mov
cmp
ret
test
xor
loopne
test
in
and
jmp
xchg
out
and
xor
mov
sub
pop
mov
aad
jae
cmps
ror
ins
arpl
cmp
sub
inc
cmp
push
imul
mov
mov
jo
ds
or
sbb
pop
(bad)
pop
call
das
mov
pop
pop
push
cmp
pop
mov
xchg
nop
xor
ins
adc
es
out
sub
sti
mov
and
mov
mov
push
or
in
(bad)
icebp
inc
sbb
out
test
repnz
pop
dec
jp
jp
jns
(bad)
jmp
sbb
mov
sbb
ret
ss
mov
mov
mov
pop
or
adc
xor
push
xchg
jae
jns
test
or
arpl
inc
push
int3
cs
adc
mov
movs
add
pop
shl
movs
inc
cld
mov
add
cmp
add
(bad)
(bad)
(bad)
inc
rol
lock
(bad)
jmp
adc
dec
sbb
clc
cmps
push
retf
jmp
xor
jle
lahf
adc
mov
cmp
or
mov
ds
popf
fldcw
call
push
and
mov
stos
shl
aas
sahf
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
xor
dec
mov
xor
add
mov
add
inc
pop
add
add
add
jl
add
jl
add
push
add
adc
(bad)
pop
sub
add
sti
pusha
xor
fld
les
pop
cwde
js
icebp
call
xchg
inc
mov
inc
test
pop
push
push
jp
push
jmp
scas
out
adc
outs
xor
mov
cmp
add
(bad)
(bad)
(bad)
call
sub
inc
pop
add
sar
(bad)
jmp
add
lock
(bad)
(bad)
(bad)
fbstp
inc
inc
daa
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
call
add
lock
add
adc
(bad)
cmp
loope
jmp
ins
jge
out
jmp
pop
call
and
mov
imul
loop
(bad)
fadd
dec
sbb
pop
pop
xor
jne
xor
jno
fwait
lds
aam
inc
mov
sbb
rol
movs
loop
mov
mov
cmc
jo
mov
sbb
mov
push
ret
dec
iret
and
xlat
adc
mov
pushf
ss
cwde
mov
push
jmp
inc
loopne
lea
test
xchg
xchg
(bad)
adc
xor
inc
xor
in
cwde
pop
loop
loop
adc
mov
ss
sbb
sti
mov
xor
movs
lea
adc
mov
adc
int3
cmp
inc
xchg
in
cmp
out
mov
xchg
mov
fidiv
adc
pop
cmps
xor
push
repnz
hlt
lahf
pusha
xchg
push
shl
mov
pop
add
js
ror
popa
xchg
dec
loope
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
xchg
xor
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
cmp
and
add
mul
sbb
lock
jg
jno
pop
test
popf
jmp
xchg
cmp
sub
pop
shr
pop
pop
mov
into
pop
sahf
push
gs
add
xchg
sbb
lock
add
or
(bad)
(bad)
call
pop
xlat
ret
cmps
sar
(bad)
call
add
xor
(bad)
(bad)
jle
movs
sbb
mov
clc
lahf
fdivr
in
jno
in
sub
sub
jp
mov
popf
sub
add
lods
add
mov
add
push
add
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
popf
dec
xor
add
lock
hlt
test
pop
add
and
(bad)
mul
cmp
int3
mov
cmp
or
pop
xchg
(bad)
jg
add
lock
(bad)
(bad)
jmp
push
xchg
adc
dec
fsub
das
add
ret
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
mov
dec
sbb
lock
xor
sti
dec
pop
das
ins
rcl
pop
push
xor
enter
loopne
(bad)
rcl
lock
pushf
push
mov
popf
xchg
mov
mov
add
inc
mov
lock
add
lock
rol
lock
add
add
add
xor
mov
cdq
inc
cld
sbb
sahf
jle
dec
shr
fcomp
push
lods
leave
jmp
retf
dec
test
cmp
(bad)
jl
pop
add
lock
(bad)
(bad)
(bad)
jnp
push
in
out
gs
mov
add
sar
(bad)
(bad)
jge
add
pop
add
lock
add
lock
xor
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
es
mov
inc
lahf
jge
sahf
out
sub
test
add
sub
test
mov
(bad)
ins
aad
(bad)
push
jns
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
in
adc
and
lock
or
or
mov
xor
sbb
mov
sub
fdivr
jb
push
aam
cmp
out
xor
mov
add
stc
leave
cmps
adc
in
jg
(bad)
aad
jae
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
fs
push
or
lock
(bad)
jmp
add
add
add
inc
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jg
push
push
add
lock
add
xor
add
(bad)
(bad)
(bad)
jmp
or
dec
push
aaa
add
sar
(bad)
inc
add
lock
sub
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
xchg
or
add
lods
aaa
add
xchg
inc
push
or
or
(bad)
imul
pushf
mov
test
dec
addr16
inc
fs
retf
ins
jnp
jp
aaa
das
jmp
imul
add
lock
add
add
add
(bad)
(bad)
(bad)
push
fstp
pop
push
hlt
add
(bad)
jmp
add
js
push
lock
(bad)
(bad)
call
add
(bad)
(bad)
(bad)
jmp
dec
xchg
mov
lock
(bad)
dec
add
lock
add
push
popf
add
or
add
mov
ja
lock
add
lock
add
jmp
adc
push
sar
(bad)
(bad)
cmp
add
lock
add
lock
pop
ret
retf
ins
and
adc
push
or
mov
inc
jns
lds
push
or
pusha
xchg
and
aad
(bad)
clc
sbb
ror
lods
rcr
jmp
frstor
sub
jno
and
cli
mov
enter
lock
cmp
dec
cmc
mov
push
adc
mov
test
int
icebp
pop
jp
xor
or
push
fsub
ret
mov
inc
xchg
enter
in
inc
mov
or
fisubr
stos
mov
popa
dec
jae
mov
push
repz
xchg
lahf
inc
fcomp
xchg
out
mov
cdq
icebp
sbb
mov
out
push
xchg
js
and
fbld
jo
sbb
in
xchg
stos
loope
lds
out
(bad)
enter
cs
jecxz
enter
clc
inc
or
lahf
dec
push
mov
xor
in
(bad)
pop
jns
add
add
jmp
pop
loope
sub
(bad)
xchg
and
jmp
popf
addr16
hlt
dec
cld
out
(bad)
xlat
sub
add
(bad)
(bad)
(bad)
call
add
lock
(bad)
(bad)
fdivr
sahf
sub
in
lock
add
and
cmp
lock
mov
lock
add
popa
(bad)
and
aas
or
ret
das
and
inc
nop
and
push
mov
enter
cmp
and
fdivr
add
sub
movs
pusha
dec
sbb
cld
stos
pop
jne
jecxz
lock
daa
mov
push
rcr
xchg
pop
mov
(bad)
fs
aam
lock
enter
jecxz
call
xor
jle
add
lock
(bad)
(bad)
call
js
mov
test
inc
cmp
(bad)
inc
add
lock
add
je
add
add
add
sar
(bad)
jmp
add
lock
add
jae
add
inc
add
lock
(bad)
(bad)
push
scas
(bad)
mov
scas
ds
sar
(bad)
inc
aas
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
sahf
cmp
(bad)
fbld
(bad)
repz
push
pushf
jl
daa
and
mul
retf
inc
retf
cmp
loop
sbb
dec
pop
movs
aam
mov
dec
clc
jle
ret
or
jp
pavgw
test
sub
rsm
add
outs
and
lea
xchg
fs
mov
cli
dec
mov
sahf
(bad)
out
cmp
sbb
sub
mov
pop
scas
sbb
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ror
(bad)
xor
cmp
(bad)
int3
mov
or
pop
cmp
lods
mov
repnz
jne
jmp
xchg
dec
xchg
test
lahf
fstp
mov
jne
inc
xchg
test
inc
mov
pop
push
ds
push
out
retf
cli
lds
mov
leave
push
(bad)
or
pop
dec
xor
push
or
dec
jmp
mov
cmp
mov
sbb
arpl
rol
xlat
sbb
into
jno
jns
jno
push
mov
pop
ret
int
aad
arpl
lock
add
xstore-rng
cmps
add
add
add
add
add
add
add
ja
add
xchg
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
movs
jmp
adc
mov
add
mov
lock
add
mov
inc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
pusha
xchg
adc
mov
adc
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sub
mov
jmp
push
and
push
add
adc
add
test
lock
add
sbb
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
pop
cs
neg
sar
sbb
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
mov
lock
add
add
add
mov
add
lock
add
(bad)
(bad)
(bad)
dec
es
mov
cmps
or
mov
add
sar
(bad)
(bad)
fadd
add
add
add
scas
xchg
lock
mov
cmps
fisttp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
in
clc
xor
inc
xor
lock
add
xor
lds
xchg
xchg
imul
cmps
aad
sbb
fistp
xchg
dec
adc
(bad)
inc
add
sbb
int3
adc
(bad)
(bad)
(bad)
(bad)
jmp
sub
jp
cwde
pop
mov
add
lock
add
mov
add
and
add
add
add
inc
mov
lock
add
add
add
adc
add
lock
(bad)
(bad)
(bad)
cmp
jb
rol
es
add
sar
(bad)
dec
dec
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
mov
add
lock
test
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fist
push
cmp
add
dec
and
lock
in
xchg
dec
daa
add
cmps
mov
ins
or
dec
mov
enter
idiv
call
stos
test
mov
fld
push
xor
inc
push
mov
sbb
ins
fisub
jne
ins
xor
sub
and
ss
or
cmp
lods
mov
dec
int3
clc
push
or
xor
sub
pushf
mov
pop
test
fst
loope
push
lds
or
jo
popf
jp
jp
cwde
leave
lock
mov
mov
scas
in
lods
or
repz
ret
xchg
int3
xor
jae
pop
in
push
mov
xchg
jno
lock
add
aad
add
in
call
pop
sti
cmp
fidivr
mov
xor
repz
cwde
xchg
mov
icebp
shl
push
mov
hlt
push
sub
push
sub
or
ror
test
data16
pop
xchg
mov
pop
adc
fisubr
dec
add
lock
(bad)
(bad)
call
test
mov
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
cs
xor
add
mov
fstp
jb
sahf
pop
enter
(bad)
fidiv
sub
push
cdq
sbb
idiv
pop
fwait
(bad)
xor
pop
jecxz
cli
sub
add
lock
(bad)
jmp
lock
add
lock
add
lock
add
lock
add
mov
inc
mov
call
add
lock
add
lock
ja
test
fdivr
sbb
loopne
mov
in
nop
test
int
fsub
pop
mov
inc
add
jae
rcr
or
stos
and
into
neg
ds
xor
or
ja
icebp
in
mov
arpl
add
jg
mov
or
push
inc
and
(bad)
xchg
fucom
xor
cld
pop
lods
std
dec
pop
cdq
mov
aaa
jecxz
test
sbb
xchg
das
add
sub
push
shr
(bad)
mov
add
mov
add
xor
xchg
mov
or
pop
retf
das
mov
ja
or
data16
fist
mov
out
gs
pusha
sub
pop
mov
test
dec
adc
(bad)
jo
inc
iret
add
add
add
add
add
fist
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
arpl
mov
add
sub
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
mov
mov
cmp
lock
add
nop
dec
add
or
add
pop
push
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
cld
add
lock
add
or
add
(bad)
(bad)
(bad)
push
mov
(bad)
(bad)
add
lock
xchg
add
(bad)
cmp
add
(bad)
(bad)
(bad)
call
movs
(bad)
sar
(bad)
call
push
add
or
add
pop
pop
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
lods
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
ficom
xor
add
lock
add
(bad)
es
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
and
data16
ja
ret
add
popa
dec
enter
inc
scas
inc
dec
add
(bad)
mov
pop
rol
sub
xchg
pop
add
jp
mov
jge
add
add
add
sbb
mov
int
cdq
and
jno
jp
daa
jb
add
dec
mov
fld
mov
cs
cdq
mov
jge
inc
or
mov
pop
call
idiv
and
add
sub
mov
push
cmp
pop
dec
cmps
scas
jno
das
dec
or
xchg
add
es
or
(bad)
sub
lods
(bad)
in
fcmovu
fimul
dec
iret
and
or
dec
push
(bad)
aam
push
push
cmc
lock
dec
push
cmp
mov
mov
out
cdq
xor
cli
not
xchg
push
add
xor
push
add
lock
add
add
stc
and
es
add
inc
repnz
mov
add
aad
sub
push
pop
loop
loope
in
int3
sbb
jno
dec
xor
call
dec
test
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
sbb
faddp
xor
add
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
sub
add
cmp
lock
or
add
add
clc
or
lock
add
and
hlt
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
jae
mov
fwait
pusha
add
lock
pop
add
and
add
(bad)
(bad)
(bad)
call
movs
(bad)
shl
(bad)
dec
mov
push
xor
in
or
adc
add
mov
ss
shr
jge
fcom
mov
pop
fistp
mov
loope
push
add
(bad)
mov
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sub
add
iret
pop
add
sub
add
(bad)
(bad)
(bad)
(bad)
mov
and
inc
pusha
add
sar
(bad)
dec
cmps
add
add
add
add
add
mov
add
add
add
push
add
lock
(bad)
(bad)
push
test
(bad)
jmp
add
mul
lock
(bad)
(bad)
jmp
sub
ret
jecxz
in
sbb
out
push
mov
mov
and
xchg
xlat
cmp
stos
pop
movs
mov
inc
inc
fs
shr
jle
push
sbb
fucomi
dec
sub
pushf
movntps
xchg
jmp
call
and
pop
pop
sbb
cmc
test
adc
pop
push
hlt
sbb
jmp
inc
cmc
and
pop
jl
cmp
call
xchg
call
mov
dec
push
or
pop
sub
nop
jb
mov
dec
add
adc
add
add
test
(bad)
call
outs
scas
mov
out
cmp
dec
push
inc
mov
pop
fsubp
out
xchg
xor
add
xor
add
sub
add
or
add
and
fs
int
mov
sahf
or
mov
repz
dec
das
call
stos
scas
sar
inc
push
rol
push
mov
jmp
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
pop
shl
and
icebp
(bad)
dec
icebp
xchg
dec
xchg
sub
sbb
sub
push
sahf
jp
outs
clc
(bad)
and
ficom
out
ret
iret
mov
mov
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
or
(bad)
cmc
xchg
add
add
add
and
add
(bad)
(bad)
(bad)
(bad)
fcomp
inc
push
pop
fs
add
(bad)
call
leave
ja
shl
and
mov
dec
retf
in
mov
addr16
out
cmps
push
pop
or
dec
je
inc
add
mov
cmp
xor
sbb
jmp
xor
adc
arpl
cs
dec
ds
(bad)
call
sti
mov
pop
loope
jo
fiadd
daa
add
lock
(bad)
(bad)
call
adc
shl
(bad)
dec
add
and
add
add
add
inc
add
mov
add
xchg
lock
sbb
add
in
aas
add
or
jl
dec
cli
hlt
iret
out
mov
xor
call
mov
jnp
mov
push
out
in
and
jns
jo
das
(bad)
adc
cmps
out
inc
mov
pop
movq
out
dec
mov
fs
fist
outs
cdq
jl
sahf
outs
sbb
(bad)
pushf
pop
ins
test
movs
mov
movs
inc
out
fild
popa
test
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
push
cmp
add
sbb
lock
add
retf
stc
into
pop
dec
mov
pop
frstor
jmp
out
(bad)
mov
arpl
arpl
fst
and
popf
(bad)
aam
dec
mov
push
cmp
adc
add
(bad)
(bad)
(bad)
call
mov
int3
or
(bad)
push
(bad)
(bad)
inc
add
lock
inc
add
lock
inc
or
sbb
fisttp
mov
add
push
and
jo
pop
dec
aam
daa
and
ret
push
in
jmp
call
add
(bad)
(bad)
(bad)
inc
shr
cmp
fwait
xchg
icebp
push
lock
(bad)
call
push
enter
lahf
mov
mov
xchg
jl
scas
shr
out
push
push
cmps
xchg
shr
xor
fild
aas
xchg
js
pop
shl
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
mov
lock
mov
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
inc
sub
xlat
clc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cdq
cmp
sub
add
adc
lock
add
adc
add
lock
add
cmp
add
push
add
adc
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
and
out
xor
add
xor
add
sldt
adc
adc
dec
and
stos
sahf
cwde
mov
lods
mov
fisttp
test
in
rol
pop
adc
lods
shl
fdivr
ret
pop
lods
fiadd
mov
jle
xchg
dec
pop
add
call
sahf
repnz
dec
popa
cmc
push
jecxz
push
push
addr16
push
mov
lds
add
lock
cdq
add
add
add
ss
mov
dec
sub
sub
add
or
loopne
add
pop
(bad)
pop
inc
inc
and
add
call
sahf
pop
fstp
mov
lods
xor
ins
cs
mov
pop
xchg
test
adc
sbb
mov
lds
xchg
pop
daa
mov
(bad)
enter
mov
dec
jp
jno
and
fs
sbb
push
mov
or
push
sar
xor
dec
push
add
push
add
and
add
lock
xor
and
add
mov
cld
mov
int3
inc
cmps
aas
rep
jmp
inc
inc
movs
rol
add
adc
aad
ins
pop
bound
daa
push
(bad)
aam
nop
xor
ret
nop
call
xor
inc
ins
(bad)
in
jb
push
jmp
or
xor
pop
loope
jo
adc
sbb
cld
inc
mov
lods
push
pop
lds
cmp
push
hlt
fbstp
adc
jo
inc
js
pop
fld
jecxz
sub
clc
sbb
add
ret
fld
(bad)
(bad)
(bad)
(bad)
call
xchg
dec
jp
pop
add
lock
lock
add
and
repnz
test
jns
xor
cmp
ja
xchg
push
jp
popf
adc
jle
adc
mov
mov
bound
jl
xor
out
jno
pusha
sahf
(bad)
mov
(bad)
adc
inc
addr16
jge
pushf
push
pop
cmp
movs
pop
mov
ins
mov
xchg
daa
daa
adc
sbb
jmp
pop
dec
pusha
(bad)
test
das
jne
lods
push
movs
fsub
outs
sbb
lock
add
(bad)
xchg
cmps
jp
pusha
or
xor
or
dec
cmc
jp
inc
pop
call
xchg
gs
and
and
shl
jb
aam
mov
daa
daa
bts
jecxz
in
mov
cmp
inc
int3
ja
dec
mov
in
leave
cld
iret
sbb
out
pop
mov
xor
out
in
jo
out
mov
sahf
or
or
lds
push
xchg
inc
push
daa
cmp
jg
outs
mov
daa
sub
fldcw
inc
aad
sub
inc
jo
fidivr
or
movs
in
ret
test
das
sahf
pop
xor
sub
mov
add
jecxz
mov
push
mov
cmc
sub
into
sub
call
enter
(bad)
cmps
xchg
adc
out
div
or
test
fmul
lock
mov
into
retf
int
(bad)
mov
shr
pusha
adc
aaa
push
mov
mov
scas
clc
and
pushf
inc
xchg
movs
cld
mov
push
inc
pop
mov
xor
push
(bad)
jb
addr16
sar
and
push
inc
imul
mov
xchg
pop
xor
jmp
outs
cld
std
in
xor
mov
mov
aam
mov
test
scas
into
dec
call
ja
xchg
inc
mov
mov
xchg
dec
xchg
push
arpl
test
xchg
sub
jae
sbb
xchg
push
pop
sbb
imul
leave
jno
dec
and
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
aas
add
(bad)
jmp
add
div
lock
(bad)
(bad)
dec
add
lock
or
sti
ret
outs
fwait
out
cmp
jmp
cmp
out
mov
sar
xor
into
xor
ror
pusha
ficom
or
les
push
neg
pop
sbb
add
lock
(bad)
(bad)
call
adc
adc
xchg
data16
lock
(bad)
call
(bad)
dec
xlat
sub
jne
lock
(bad)
push
push
add
add
add
not
lock
add
add
add
or
add
ins
xor
adc
add
xor
add
(bad)
(bad)
(bad)
push
and
repnz
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
or
pusha
mov
and
add
pop
js
lock
add
lock
add
or
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
pop
sar
(bad)
jmp
add
lock
add
push
add
fidiv
add
add
add
push
into
add
add
add
push
add
adc
jns
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jg
and
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
and
add
fwait
daa
add
addr16
pop
jae
jo
aad
jg
hlt
popf
push
das
push
outs
in
pop
call
in
fcmovb
test
mov
push
loopne
mov
xchg
(bad)
fmul
nop
push
test
pushf
dec
sbb
daa
pop
dec
cmp
cmc
pop
icebp
inc
push
xchg
popf
dec
xchg
mov
lods
jmp
xchg
not
inc
jmp
jmp
enter
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pusha
cmp
push
cwde
adc
and
add
(bad)
(bad)
(bad)
inc
jns
pop
sahf
lds
jl
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
ficom
iret
or
push
cmp
lock
test
rcr
push
ror
and
adc
stos
jb
mov
imul
lods
xor
or
pop
xchg
ret
repnz
and
jb
xchg
push
and
mov
fisubr
dec
sti
in
or
in
inc
mov
mov
into
mov
cs
mov
mov
in
pop
mov
pop
test
xor
mov
lock
inc
inc
pop
lea
in
mov
lea
das
pop
mov
sbb
pop
les
or
add
rep
push
jge
mov
mov
inc
mov
cmc
jle
adc
ds
sar
mov
mov
jmp
fldpi
and
cmps
or
push
dec
data16
(bad)
daa
dec
repnz
ss
iret
lods
jns
popa
loopne
shl
dec
arpl
push
popa
mov
std
mov
sti
popf
imul
cmp
push
hlt
or
mov
mov
dec
mov
inc
test
cmp
cmp
int3
(bad)
ds
(bad)
std
icebp
push
out
add
(bad)
mov
lock
(bad)
(bad)
inc
pop
sahf
mov
mov
sar
(bad)
jmp
jno
jecxz
and
retf
push
push
imul
pop
add
test
mov
dec
js
add
and
xchg
in
out
mov
mov
push
xor
sbb
push
xor
stos
in
std
inc
mov
leave
push
(bad)
stc
sub
cld
mov
fbld
inc
bound
cmp
pop
test
xor
sub
std
mov
xor
add
(bad)
(bad)
(bad)
jmp
or
dec
cmp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jp
popf
stc
ret
call
jge
lock
fldcw
lods
and
jmp
pusha
dec
sbb
arpl
mov
push
dec
movs
cmps
mov
and
lmsw
adc
add
aad
add
mov
add
add
add
jmp
and
lock
add
push
add
lock
add
jp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
in
and
jo
ror
pop
jp
mov
mov
mov
out
movs
ins
ss
push
mov
out
mov
and
adc
xlat
cmps
or
movs
or
loop
mov
icebp
out
pop
xor
adc
shl
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cli
add
mov
sahf
pop
loop
into
cmc
nop
lds
push
add
inc
cmps
daa
pop
popa
jne
or
imul
lods
dec
fwait
sahf
rcr
ja
xchg
mov
outs
ins
out
popf
es
xchg
mov
xor
add
add
add
ins
mov
lock
add
add
add
or
lock
add
and
add
(bad)
(bad)
(bad)
jmp
loope
loope
add
sar
(bad)
push
or
cmp
dec
leave
das
mov
push
dec
adc
or
sbb
ins
or
sbb
adc
xor
mov
ins
lea
cmc
fidivr
push
jl
loope
frstor
cmc
(bad)
xchg
mov
or
dec
shr
jnp
daa
push
adc
inc
or
pop
mov
pop
lods
(bad)
aam
daa
mov
push
sbb
in
or
add
addr16
add
(bad)
jg
mov
pop
lods
test
js
xchg
and
setge
shr
xchg
(bad)
(bad)
dec
xchg
test
loope
loope
leave
jmp
adc
inc
inc
mov
xchg
fild
mov
mov
pop
imul
push
mov
aaa
fmul
movs
adc
aaa
stos
fimul
pop
adc
js
fild
inc
or
jecxz
jnp
dec
xor
sahf
pop
retf
cmps
pmaxsw
mov
in
into
pop
xchg
ins
int3
loop
pusha
push
lods
dec
retf
jge
cmp
arpl
add
add
add
das
daa
add
cmp
add
jmp
movs
in
ja
mov
push
leave
dec
xor
(bad)
fcomip
push
sub
mov
pop
dec
jns
scas
mov
leave
shl
popf
add
ins
dec
cmp
dec
fistp
adc
add
push
add
and
in
lock
ins
xlat
mov
and
dec
and
inc
lods
sub
mov
scas
add
shr
adc
sbb
stos
mov
in
jge
icebp
cmps
dec
jp
ret
ds
sbb
mov
xchg
mov
mov
cmp
mov
test
and
inc
retf
lock
or
(bad)
dec
lods
jbe
jns
add
sar
(bad)
jmp
in
dec
push
cli
sar
xor
inc
stc
ret
loope
scas
jp
mov
std
scas
jp
or
addr16
sub
and
or
dec
in
push
stos
sahf
loopne
mov
inc
pushf
add
xor
inc
fist
mov
into
mov
and
lock
sldt
lock
and
adc
adc
add
add
sar
(bad)
call
add
lock
lock
add
lock
or
xlat
vpandn
sbb
movs
jmp
dec
and
sbb
push
lods
cmc
(bad)
xchg
add
xchg
add
or
add
(bad)
(bad)
(bad)
push
push
dec
mov
sar
(bad)
inc
jns
ret
jg
mov
add
lock
(bad)
call
ja
lock
add
lock
add
lock
add
lock
idiv
int3
int
jbe
hlt
imul
push
sub
mov
or
push
gs
add
je
dec
dec
fbld
ret
mov
xchg
mov
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
mov
push
add
lock
add
lock
(bad)
(bad)
call
mov
adc
add
sar
(bad)
call
cmp
lock
add
adc
and
and
add
push
ret
add
add
add
jne
add
or
add
scas
mov
add
add
dec
popf
add
add
add
(bad)
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
cmp
lock
(bad)
(bad)
(bad)
fdivr
loope
enter
pop
pop
sar
(bad)
dec
add
add
add
push
add
lock
(bad)
(bad)
call
sbb
out
sar
(bad)
dec
add
jae
push
lock
(bad)
(bad)
jmp
ja
xor
mov
xchg
mov
lds
or
pushf
shr
mov
cmp
(bad)
push
out
mov
out
mov
int
pop
sub
adc
fcomi
and
add
movs
in
dec
jecxz
cmp
js
mov
xchg
icebp
xchg
lods
(bad)
popf
gs
or
add
popf
gs
xchg
daa
icebp
push
aas
push
popa
pop
icebp
mov
or
push
mov
xor
add
add
or
lea
mov
loope
bts
adc
lock
add
and
add
lock
lods
out
scas
(bad)
cmps
or
mov
sub
jae
imul
xchg
sub
or
xor
arpl
idiv
pop
sbb
mov
call
dec
retf
loope
(bad)
or
cs
or
sub
xchg
mov
sbb
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
je
cli
lds
lock
xchg
add
mov
add
lock
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fld
scas
cs
cmp
add
pop
xchg
add
xor
(bad)
(bad)
push
add
pop
leave
and
sar
(bad)
push
add
lock
(bad)
(bad)
call
xor
add
sar
(bad)
push
push
mov
lea
add
retf
leave
push
mov
fnstcw
adc
fdivr
rcr
and
xchg
mov
test
xchg
xor
add
or
xchg
cdq
movs
xchg
xor
xchg
mov
sub
bound
xor
xchg
aad
sub
in
or
sub
and
jecxz
pop
data16
push
and
jl
dec
(bad)
or
push
dec
(bad)
xchg
xor
or
pop
xchg
cdq
lods
fdiv
es
aaa
sub
push
bound
(bad)
dec
cmc
mov
sbb
xchg
lds
lods
js
sub
push
ins
rcl
imul
dec
daa
lea
imul
sub
(bad)
dec
cmp
mov
inc
retf
les
sub
mov
adc
jb
out
or
iret
mov
add
fisub
push
mov
sub
test
mov
adc
dec
ds
jge
jns
dec
mov
sbb
data16
fwait
(bad)
cdq
jg
pusha
mov
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
add
xchg
aaa
add
add
add
jp
jne
cmps
dec
out
out
dec
jne
cmps
or
aas
jnp
test
hlt
add
add
cdq
into
inc
dec
aaa
push
sbb
adc
jo
cwde
das
mov
jge
stos
or
ds
push
add
adc
add
lock
add
test
add
add
add
imul
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
lock
sub
sbb
pop
rcr
popa
xchg
stos
lods
call
cmc
sub
loope
lods
sub
int3
addr16
xor
mov
out
sti
adc
jns
sbb
inc
cmp
pop
sbb
xchg
inc
xchg
popf
ds
adc
sub
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
retf
lock
push
lods
out
mov
rcl
out
xor
mov
into
jb
leavew
cmp
xchg
addr16
mov
gs
lock
cmps
push
adc
icebp
mov
mov
test
pop
or
cdq
int
cmp
iret
imul
and
cmp
mov
rcl
js
push
mov
mov
sub
adc
add
ja
fsubr
pop
sbb
adc
jecxz
xchg
jle
shl
sbb
mov
cld
(bad)
xor
shr
push
and
jo
xchg
dec
pusha
mov
shl
sub
jge
popf
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ss
(bad)
(bad)
(bad)
(bad)
dec
out
fldcw
add
cmp
add
daa
sahf
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
inc
mov
add
lock
sahf
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
cmp
mov
lock
(bad)
(bad)
inc
jns
ret
jg
mov
cmps
sahf
add
sar
(bad)
call
lmsw
push
add
and
test
cwde
popf
addr16
arpl
mov
dec
pop
mov
jae
imul
leave
cmp
sbb
outs
ret
sbb
leave
jle
jo
jg
jae
outs
call
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
push
shl
ins
lea
(bad)
(bad)
(bad)
mov
and
jns
add
add
(bad)
jmp
add
add
add
add
add
add
add
or
add
test
fadd
lock
out
lock
add
sbb
lock
add
lock
push
ret
fwait
and
dec
movs
push
pop
or
stc
(bad)
cmp
mov
arpl
and
or
ret
(bad)
dec
and
adc
sbb
sub
push
ret
and
xor
and
pop
aas
pop
add
aad
add
add
add
pop
push
pop
adc
popa
jecxz
jg
cmp
int
aaa
xchg
sar
inc
pusha
mov
mov
pusha
imul
mov
scas
xchg
ret
adc
lods
ins
test
ret
cmp
call
jo
jg
(bad)
imul
ret
inc
rcl
lock
inc
test
mov
or
cmc
jecxz
push
jmp
fstp
pop
xchg
out
jmp
pop
icebp
jmp
push
add
add
add
arpl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
test
cmp
adc
lock
add
xor
add
add
add
push
aad
xor
(bad)
(bad)
jmp
ja
lock
add
xor
add
aaa
mov
push
imul
cld
and
cmp
adc
jecxz
xchg
pop
int3
adc
add
adc
pop
mov
clc
mov
sbb
int
xchg
bound
clc
cld
arpl
pop
inc
vcvtpd2dq
sub
mov
jno
add
fmulp
or
(bad)
cmp
mov
aas
mov
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
call
jmp
mov
test
add
dec
adc
lock
add
cwde
dec
add
add
add
push
add
lock
(bad)
(bad)
(bad)
clc
and
push
call
sar
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ffreep
pop
data16
lock
iret
add
and
add
add
add
and
lock
add
std
jnp
lock
add
add
and
psubsb
inc
scas
or
push
or
mov
sub
out
xchg
cmc
retf
movs
je
ret
call
ja
pop
int
adc
xchg
bswap
adc
push
fisttp
jb
add
lock
add
jae
cli
inc
imul
data16
(bad)
inc
add
lock
add
lock
lock
(bad)
(bad)
push
ins
push
scas
rol
add
sar
(bad)
jmp
cli
mov
sbb
dec
fidiv
pop
mov
cdq
adc
push
sub
or
or
scas
add
ins
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
out
sub
xchg
sub
add
lock
(bad)
(bad)
dec
pop
mov
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
mov
inc
add
lock
sub
jno
bound
lds
pop
jno
add
ins
inc
mov
cli
xor
fisttp
add
add
add
add
add
fwait
dec
add
add
add
xchg
fild
lock
cs
add
add
pop
add
add
and
sbb
retf
jno
add
add
sar
(bad)
dec
add
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
call
mov
push
fidivr
add
sar
(bad)
push
add
(bad)
(bad)
(bad)
call
mov
add
sar
(bad)
jmp
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
mov
add
add
(bad)
(bad)
(bad)
jmp
repnz
lock
(bad)
(bad)
inc
in
add
push
add
and
dec
add
lock
add
push
add
lock
(bad)
(bad)
dec
or
dec
pop
sar
(bad)
inc
lock
(bad)
(bad)
(bad)
jmp
gs
add
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
mov
add
add
mov
add
lock
(bad)
(bad)
call
fstp
stos
mov
lock
(bad)
(bad)
jmp
add
add
add
or
add
(bad)
(bad)
(bad)
call
vpmacssww
sar
(bad)
inc
add
in
add
(bad)
jp
repz
xchg
and
dec
pop
pusha
jno
mov
jae
dec
or
nop
call
cmp
rcr
cmp
jno
sbb
adc
and
pop
out
cld
ds
push
neg
mov
dec
push
mov
add
cmp
or
xchg
and
(bad)
xor
sbb
push
icebp
rcr
jo
cmp
add
movs
xchg
shl
dec
xchg
ins
repnz
jg
stc
stos
push
(bad)
jp
(bad)
jmp
add
lock
add
push
add
lock
(bad)
(bad)
jmp
mov
fs
dec
adc
add
lock
rol
dec
add
sbb
add
adc
adc
or
add
lock
(bad)
jmp
add
lock
add
lock
add
lock
xchg
lock
xor
ds
or
inc
shl
mov
xchg
cmps
jno
mov
test
push
lock
je
(bad)
jae
mov
call
mov
inc
add
sbb
(bad)
out
or
xchg
jne
add
add
stos
and
add
jp
data16
adc
mov
jne
addr16
scas
stc
neg
shr
arpl
jge
stc
add
or
add
(bad)
dec
xchg
lods
dec
xchg
xchg
mov
cwde
lods
movs
pop
rcr
jne
inc
adc
movs
mul
xor
call
stos
mov
mov
jb
inc
pop
pushf
js
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
add
lock
(bad)
(bad)
inc
jns
call
inc
mov
(bad)
inc
add
or
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
and
add
or
push
mov
les
loopne
mov
in
jecxz
and
pop
mov
aam
call
lds
sub
call
pop
(bad)
mov
adc
dec
mov
lea
sbb
and
sub
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
(bad)
fbld
dec
add
lock
add
and
add
(bad)
(bad)
(bad)
inc
dec
xchg
jl
popf
out
and
add
sar
(bad)
(bad)
fmul
adc
sbb
dec
(bad)
mov
or
repnz
call
es
js
cmps
adc
fdiv
cli
sbb
inc
jl
inc
add
add
add
out
mov
add
push
add
and
add
add
add
or
(bad)
(bad)
dec
inc
push
cwde
loop
pop
pop
sar
(bad)
inc
add
inc
push
push
lock
(bad)
(bad)
dec
add
add
add
push
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
test
sar
cmp
add
sar
lock
add
retf
lock
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xchg
xlat
fadd
jns
push
push
pop
pop
rcl
and
pop
push
cmp
pop
test
jle
and
sub
pusha
sub
xor
in
sbb
add
push
(bad)
mov
shr
imul
mov
fcom
into
aas
enter
scas
adc
cmps
(bad)
add
mov
jmp
and
jo
inc
pop
add
mov
aaa
call
ja
mov
call
ins
aas
rep
test
pop
cmc
dec
fimul
iret
mov
add
and
(bad)
(bad)
inc
fs
mov
push
ret
ret
(bad)
(bad)
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
cdq
pop
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
push
mov
xor
(bad)
ins
imul
sar
(bad)
call
add
lock
add
lock
add
lock
lock
add
push
add
lock
(bad)
(bad)
(bad)
std
call
sar
(bad)
jmp
add
cmp
lock
(bad)
(bad)
inc
add
lock
add
add
loope
add
push
les
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lock
rcl
add
add
add
add
add
fxch
pop
push
xchg
in
xor
es
and
cmp
int3
ja
add
sbb
inc
cmps
pop
cwde
stc
mov
dec
mov
out
jmp
mul
mov
jg
outs
stc
mov
cli
(bad)
xchg
push
outs
dec
in
xor
and
jecxz
cld
aad
add
idiv
imul
and
sbb
mov
adc
mov
push
and
int3
retf
sbb
or
es
mov
loope
push
cmps
repz
in
add
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
fwait
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
pusha
push
inc
add
lock
xor
lock
mov
cmp
and
loop
and
ins
loope
call
ror
js
scas
jns
in
xchg
jp
pop
out
ss
dec
pop
call
add
ins
jecxz
mov
pop
mov
mov
lea
jg
outs
push
xor
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
daa
movs
inc
adc
and
add
lock
(bad)
(bad)
push
aam
xlat
fist
add
sar
(bad)
push
add
lock
(bad)
(bad)
call
es
sbb
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
push
add
lock
mov
push
adc
and
and
lock
jge
lock
add
adc
add
lock
add
xor
add
(bad)
(bad)
(bad)
inc
xchg
or
lock
(bad)
inc
add
add
add
mov
out
mov
(bad)
(bad)
jmp
add
lock
add
lock
pop
cmp
jle
enter
cs
scas
fistp
popa
mov
test
add
(bad)
xchg
jne
scas
add
jmp
sub
jge
movs
and
fwait
push
pop
loop
pop
dec
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
popf
loope
lar
add
lock
add
jae
std
hlt
inc
add
dec
adc
mov
mov
sbb
cmc
pop
add
sbb
mov
jae
jecxz
(bad)
push
dec
xlat
test
test
jecxz
in
mov
sbb
and
not
or
mov
push
pop
mov
enter
aad
lea
sti
push
jge
and
mov
out
jns
mov
arpl
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
jge
add
call
lock
(bad)
(bad)
dec
lods
or
lock
(bad)
(bad)
cmp
(bad)
(bad)
dec
movs
fimul
mov
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cmp
xchg
arpl
add
or
add
sbb
add
push
add
adc
mov
jp
mov
jle
adc
pop
push
mov
or
push
pop
xchg
hlt
inc
mov
gs
fcomp
(bad)
jp
or
sahf
and
out
outs
ret
pop
lods
jecxz
(bad)
jno
xor
add
cld
xor
repz
push
jecxz
cmps
movs
scas
mov
test
fist
push
movs
sub
xchg
cmp
push
popf
data16
push
add
lock
add
in
scas
add
or
add
stos
shufps
pop
scas
or
aaa
mov
xchg
sub
bound
cmp
mov
inc
and
leave
xchg
mov
ret
iret
mov
mov
add
lock
cmp
adc
jnp
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
xor
push
xor
cmps
das
add
lock
add
add
lock
(bad)
(bad)
inc
sbb
cmc
rol
sar
(bad)
jmp
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ret
(bad)
sti
add
xor
add
push
add
and
rol
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
fsubr
mov
xor
dec
jp
cdq
mov
cmps
(bad)
fadd
ins
pop
jbe
pushf
xchg
push
jmp
ds
into
pushf
je
push
and
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
retf
js
(bad)
pop
add
lock
sub
(bad)
ins
test
repnz
movs
jge
add
movs
jns
mov
xchg
daa
sub
adc
aam
loope
shr
cmp
sub
outs
add
adc
xchg
in
sub
dec
jno
inc
dec
push
loop
adc
ficomp
addr16
call
fadd
lods
les
std
inc
pop
retf
dec
mov
jecxz
stc
jno
push
(bad)
cmp
stos
sbb
mov
adc
ret
or
ret
ss
stc
lea
imul
adc
rcr
xor
imul
adc
test
and
add
lock
add
fdiv
add
cmp
add
(bad)
(bad)
(bad)
jmp
add
pop
aad
lock
(bad)
dec
sub
adc
mov
icebp
mov
sub
cs
xchg
mov
jle
aaa
mov
cwde
aam
jmp
cmc
add
(bad)
stos
mov
out
jne
mov
mov
repnz
lods
xchg
push
call
jecxz
lock
add
add
add
push
inc
add
or
add
jl
add
or
add
jne
add
or
add
outs
add
or
add
(bad)
(bad)
(bad)
call
inc
cdq
clc
mov
add
ret
(bad)
(bad)
call
(bad)
(bad)
call
mov
ins
cs
fadd
sar
(bad)
inc
inc
int
adc
mov
cdq
push
push
loopne
push
rol
mov
in
sub
dec
mov
outs
or
jb
in
inc
sbb
jp
pop
out
jno
loope
mov
xchg
leave
pusha
lea
sub
mov
sbb
adc
add
push
inc
mov
and
mov
out
pop
sbb
adc
stc
and
pop
scas
imul
cmps
sub
(bad)
int
add
arpl
lods
out
pusha
push
imul
imul
movs
adc
fadd
inc
test
sub
cmc
outs
loop
sbb
sahf
loope
adc
sub
outs
add
xchg
xchg
ja
je
push
mov
sahf
inc
inc
inc
dec
cmp
xor
in
fcomp
xor
sbb
cmp
(bad)
jmp
sbb
fst
scas
fwait
out
ds
adc
sub
aad
les
cmp
jecxz
cmp
xchg
ret
ret
lods
cmps
test
inc
retw
and
(bad)
aas
or
cmps
cmp
xchg
pusha
xor
idiv
inc
add
add
sar
(bad)
call
add
push
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmp
dec
pop
add
lock
fiadd
sub
fist
ret
outs
fucomi
(bad)
sti
test
std
daa
jl
loopne
and
pop
mov
xchg
mov
and
sub
xor
cmp
ja
and
(bad)
mov
pop
mov
push
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
shl
dec
jnp
mov
cmps
cmp
mov
enter
test
mov
sub
ds
(bad)
adc
lock
(bad)
mov
daa
and
xor
add
(bad)
(bad)
(bad)
call
not
cmp
add
sar
(bad)
(bad)
cli
imul
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
pop
adc
add
out
add
dec
add
lock
(bad)
(bad)
push
aam
xlat
fist
add
sar
(bad)
jmp
(bad)
(bad)
push
fimul
loopne
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
shl
aas
jecxz
inc
xor
add
iret
loopne
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jl
(bad)
loopne
lock
cmp
xchg
dec
shr
jmp
enter
push
pushf
sbb
jmp
lds
pop
cmps
mov
loope
pop
mov
gs
lods
repz
test
xor
rol
(bad)
iret
test
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmc
lods
frstor
inc
rol
inc
loop
lock
imul
add
add
pop
add
lock
(bad)
(bad)
push
in
fs
mov
add
add
(bad)
(bad)
cmp
mov
pusha
mov
lds
jp
inc
outs
push
in
lock
stos
push
jge
jg
pop
mov
jle
mov
in
inc
dec
or
cmp
in
pop
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cwde
loop
sub
sub
add
retf
lock
add
xor
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lahf
mov
or
add
cmp
(bad)
(bad)
inc
mov
sub
sar
(bad)
dec
add
add
add
add
(bad)
(bad)
call
ret
xchg
xor
lock
(bad)
(bad)
jmp
rol
lock
add
or
add
push
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
pusha
jne
out
jb
add
lock
jmp
jae
add
add
add
pop
call
(bad)
cmps
cmp
ret
das
jg
inc
and
xchg
inc
stos
jecxz
push
cwde
xor
add
(bad)
(bad)
(bad)
dec
inc
mov
(bad)
add
sar
(bad)
call
rcl
sbb
jge
rcl
pop
or
out
mov
xor
push
mov
pop
jmp
faddp
sbb
scas
in
push
mov
add
lock
and
popf
add
(bad)
(bad)
je
inc
jge
xchg
adc
jmp
cs
xor
imul
clc
cld
push
jo
pushf
rcl
data16
and
sub
mov
add
add
add
popf
xchg
add
push
add
adc
sbb
xchg
pop
aas
jmp
inc
inc
xor
shr
xchg
pusha
add
ficomp
outs
stos
or
(bad)
jbe
fidivr
xchg
mov
in
mov
arpl
mov
ins
test
add
push
add
lock
add
or
add
or
adc
out
cli
mov
nop
in
mov
dec
xchg
xor
adc
sbb
lahf
and
add
xor
add
lock
(bad)
(bad)
call
xor
push
jns
leave
icebp
add
sar
(bad)
dec
xchg
sub
jno
std
dec
cmp
neg
test
fsubr
ror
lods
pop
mov
mov
sti
nop
jns
mov
mov
iret
and
test
fidiv
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
jmp
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
sbb
ins
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
mov
cmp
std
add
push
add
lock
add
fs
cmc
fcom
sbb
sar
(bad)
push
cmc
add
lock
add
lock
imul
mov
pop
fild
mov
cmps
fstp
xor
and
or
cli
pop
mov
mov
add
add
add
add
lods
imul
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
call
and
fcmovbe
aaa
test
push
jmp
mov
xchg
pop
ret
cmp
in
fnstsw
or
ret
xchg
test
mov
lods
mov
and
ficom
mov
in
jne
jbe
aas
inc
(bad)
in
fs
add
pop
pop
cmp
xlat
loop
cmp
fisubr
int3
test
enter
hlt
xchg
xor
add
lock
add
or
(bad)
(bad)
inc
pop
addr16
push
(bad)
sar
(bad)
inc
add
sahf
loope
lock
(bad)
(bad)
inc
shr
mov
mov
daa
test
mov
xor
(bad)
fcomp
arpl
cmp
fs
mov
mov
mov
xchg
inc
sbb
pop
clc
loope
bound
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
gs
retf
in
cmp
add
xor
add
dec
add
lock
add
or
add
(bad)
(bad)
(bad)
jmp
imul
dec
add
shr
(bad)
(bad)
push
add
lock
(bad)
(bad)
dec
fwait
jo
jae
add
sar
(bad)
jmp
call
es
mov
inc
outs
mov
das
stos
sub
xor
in
inc
shl
imul
inc
push
xlat
inc
or
cmc
cmp
sar
cwde
stos
mov
hlt
hlt
xchg
int
loope
mov
ror
jae
das
out
repnz
adc
shl
pop
xchg
add
jp
js
inc
mov
mov
mov
and
sub
xchg
dec
je
or
in
add
inc
movs
int3
mov
into
pop
add
add
out
add
shl
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
push
test
shl
mov
pop
push
pop
and
retf
xor
std
and
fsubr
cmp
test
jnp
jns
xor
js
enter
pop
mov
ret
ins
add
sbb
test
add
xor
add
add
add
inc
cmc
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
xchg
daa
mov
test
dec
jmp
pop
rol
pop
xchg
test
dec
and
outs
movs
xor
xor
sbb
movs
sub
mov
or
xor
imul
push
fnstcw
movs
adc
push
jae
pop
mov
add
push
add
add
sar
(bad)
call
leave
add
lock
add
dec
add
lock
movs
int
xchg
push
in
nop
push
jge
mov
mov
ret
and
mov
xor
push
mov
lock
add
add
add
push
scas
dec
jnp
jmp
jle
clc
or
cmp
(bad)
adc
movs
stos
cli
mov
sahf
int3
inc
out
and
or
shl
xchg
push
gs
stos
push
lods
and
lock
(bad)
(bad)
jmp
fld
scas
cs
cmps
adc
call
xchg
repz
adc
ret
movsx
dec
inc
adc
jb
inc
out
paddb
pop
jmp
(bad)
fadd
stos
add
sbb
out
adc
mov
pop
fdiv
cwde
dec
push
jo
es
dec
dec
nop
pop
mov
or
lock
add
mov
mov
popf
sbb
(bad)
fdivr
mov
test
leave
jo
dec
cmc
inc
and
mov
iret
stos
cmp
xor
xchg
test
xor
add
(bad)
ja
or
pop
mov
sub
jecxz
pop
add
out
jno
cld
or
mov
dec
inc
movs
shr
pop
mov
ss
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
push
dec
mov
dec
sbb
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
outs
adc
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
call
add
adc
add
lock
and
mov
fsqrt
mov
js
stos
cmp
std
adc
cmps
adc
sub
adc
xchg
cmp
jp
fnsave
push
out
shl
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
call
cmp
adc
cwde
cmps
into
dec
add
jns
jge
icebp
push
cmp
inc
shr
mov
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ror
(bad)
adc
xor
add
imul
call
lock
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
test
add
add
ror
add
daa
ret
add
adc
add
cwde
cs
or
add
sub
stos
sub
sub
pusha
dec
fnsave
cmps
sub
pop
lods
(bad)
sub
mov
fiadd
and
mov
push
mov
(bad)
xor
cmp
mov
mov
int3
gs
mov
pop
jmp
inc
mov
jne
xor
push
clc
xor
stos
leave
(bad)
sbb
add
ja
xchg
cmp
(bad)
(bad)
inc
and
jmp
(bad)
(bad)
mov
add
lock
add
aad
add
stos
add
lock
mov
std
ror
rcl
stos
out
(bad)
jmp
mov
add
mov
xor
pop
push
push
es
jne
in
iret
and
mov
mov
cmp
pop
add
lock
add
add
add
pop
jbe
out
lahf
(bad)
lock
or
ror
xchg
std
into
add
repz
lods
xchg
xchg
jmp
and
mov
add
lock
add
lock
add
lock
imul
push
add
adc
add
pop
repnz
and
mov
xchg
repz
rol
into
inc
mov
push
fistp
scas
jne
scas
cmp
fdivr
nop
sbb
mov
sahf
idiv
jne
mov
or
test
mov
jnp
neg
xor
into
shr
add
pop
aam
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
jp
pop
cwde
jl
add
add
and
jmp
in
xor
enter
mov
in
sub
adc
into
pushf
jle
retf
int3
ss
cdq
(bad)
adc
jb
ret
scas
scas
adc
push
(bad)
aas
sbb
test
fcmovnbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
outs
mov
arpl
add
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
jmp
push
and
add
mov
lock
(bad)
(bad)
jmp
dec
dec
stos
push
popa
int
push
jmp
dec
iret
icebp
or
sbb
dec
ss
mov
sbb
push
ror
aad
mov
lock
add
sldt
and
aam
mov
cli
aad
mov
push
mov
fisttp
mov
aaa
push
jmp
(bad)
push
dec
pop
stos
cmps
gs
sub
mov
repnz
popa
(bad)
daa
scas
cwde
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
scas
(bad)
wbinvd
xchg
lock
jmp
add
(bad)
(bad)
(bad)
jmp
ds
add
sar
(bad)
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
jecxz
inc
lods
lahf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
adc
aas
mov
cmp
std
add
loopne
rol
test
jg
jnp
pop
xor
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
push
pop
repnz
lock
(bad)
(bad)
dec
or
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ret
xor
add
(bad)
(bad)
(bad)
call
cdq
pop
pusha
lds
add
add
sar
(bad)
push
add
lock
(bad)
(bad)
call
mov
pop
add
sar
(bad)
push
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
lock
int3
add
push
adc
jae
lods
mov
xchg
into
dec
sub
push
xchg
int
mov
retf
ret
inc
mov
dec
inc
xor
(bad)
pop
loop
sar
dec
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
ret
test
add
adc
add
adc
xor
push
(bad)
sbb
jg
les
adc
out
adc
shr
repz
xor
add
pusha
or
push
fisub
push
sbb
int
push
mov
dec
xor
dec
bswap
mov
mov
cld
xchg
stc
scas
jb
mov
inc
ins
lahf
xchg
inc
outs
popa
or
leave
mov
jo
mov
pop
adc
repnz
pop
ja
xchg
mov
mul
out
dec
shr
sub
sbb
push
jbe
movs
lahf
or
fld
js
xlat
add
or
add
sub
add
movs
(bad)
add
jbe
add
test
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
adc
mov
add
lock
mov
lock
fwait
add
sub
add
pop
cld
add
or
add
jb
add
and
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
gs
mov
in
push
add
lock
(bad)
(bad)
jmp
shl
lds
mov
(bad)
call
add
add
add
or
add
(bad)
(bad)
(bad)
push
dec
ins
sbb
(bad)
(bad)
inc
add
sar
(bad)
(bad)
mov
aad
fwait
add
add
sar
(bad)
call
ins
push
lock
add
xchg
add
lock
add
lock
add
lock
(bad)
(bad)
jmp
and
pop
mov
add
sar
(bad)
push
inc
test
jmp
cdq
dec
xchg
sbb
lods
sub
jge
lock
call
mov
push
push
inc
enter
add
movs
int
popf
inc
enter
iret
fstp
aad
pop
aas
and
ss
out
cmp
pop
sub
call
in
fild
clc
xor
popf
cmps
pop
push
cmp
js
aas
mov
shl
adc
leave
jnp
iret
retf
xchg
imul
imul
(bad)
mov
inc
stc
dec
ja
rol
sub
mov
sbb
jecxz
retf
add
cmp
(bad)
(bad)
(bad)
(bad)
inc
mov
push
pop
jp
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
cmp
mov
add
adc
add
and
lock
add
push
add
jo
nop
test
movs
mov
cmp
es
aam
mov
or
inc
mov
or
(bad)
inc
idiv
lock
add
xchg
stos
ins
fisub
add
lock
(bad)
(bad)
call
cmp
fcmovu
add
ret
(bad)
(bad)
jmp
fild
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
test
fnstsw
sub
shr
popa
push
adc
xor
aas
xor
jle
dec
movs
(bad)
mov
xchg
sub
or
pop
mov
popa
into
imul
out
mov
ins
inc
shl
push
in
fstp
lock
pusha
cmps
or
pop
xchg
push
pop
jo
div
xchg
mov
or
retf
test
in
call
cld
aaa
jg
dec
jp
cmps
aad
lds
call
stos
call
int
inc
push
mov
repz
mov
xchg
(bad)
pop
in
jbe
jp
sub
inc
sti
rol
sbb
push
add
shl
ret
out
daa
(bad)
xchg
adc
fist
mov
std
out
scas
shl
xor
sub
jns
and
and
retf
scas
add
ins
xor
mov
adc
and
iret
shl
fwait
sub
ja
iret
cmc
pop
inc
push
int3
in
inc
lds
mov
out
xchg
movs
fcomp
outs
gs
or
add
(bad)
jo
cmp
adc
mov
mov
jg
push
sub
adc
repnz
test
jb
pop
push
pop
ins
idiv
mov
dec
mov
dec
in
sbb
out
jo
enter
call
sub
ret
jmp
xchg
and
jno
xchg
leave
mov
jle
xchg
pop
pop
jb
adc
(bad)
sbb
cmp
dec
pop
xchg
dec
cmp
cmc
xor
mov
arpl
icebp
mov
mov
(bad)
rcr
jno
mov
mov
test
or
pusha
inc
add
lock
add
or
(bad)
(bad)
dec
push
mov
(bad)
(bad)
inc
add
out
fild
call
stos
or
adc
dec
sub
or
add
jmp
std
repz
jno
or
fdiv
push
cld
arpl
pop
inc
pop
sub
pushf
cmps
je
pop
out
dec
mov
push
gs
sub
in
push
jnp
xor
dec
aas
test
add
aaa
dec
lods
add
jecxz
ret
dec
push
cwde
rcr
jno
push
xchg
sbb
pusha
(bad)
adc
int3
xchg
xchg
jmp
push
and
fisubr
push
and
cdq
xchg
or
out
retf
adc
mov
test
fadd
inc
div
push
xchg
cmp
repz
adc
add
(bad)
(bad)
(bad)
inc
dec
out
mov
add
in
(bad)
(bad)
call
and
add
add
or
add
cvtps2pd
adc
add
lock
add
push
add
adc
add
lock
add
(bad)
(bad)
(bad)
inc
into
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
int3
cmps
gs
mov
xor
add
mov
add
or
add
xchg
ret
add
add
dec
add
lock
add
push
add
lock
(bad)
(bad)
(bad)
cmp
in
mov
dec
add
pop
ins
push
lock
(bad)
(bad)
dec
movs
stc
stos
cmp
fisub
mov
(bad)
hlt
xchg
imul
leave
dec
ret
(bad)
shl
mov
mov
(bad)
out
les
sub
xchg
cdq
dec
(bad)
push
pop
jecxz
in
pushf
dec
frstor
xchg
mov
enter
pop
mov
fmul
sti
mov
mov
lock
sbb
in
ja
jmp
icebp
shl
retf
pop
popa
ret
inc
mov
pop
dec
stos
sbb
fwait
loop
xchg
shl
ja
fsubrp
push
add
retf
ds
fcomp
or
and
mov
mov
daa
ja
xor
inc
leave
dec
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
bound
cmp
xchg
jp
add
add
add
add
add
(bad)
(bad)
(bad)
dec
outs
pop
push
leave
push
add
sar
(bad)
inc
add
and
loop
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xchg
xlat
fadd
lock
push
add
popf
add
lock
add
popf
add
lock
(bad)
(bad)
push
push
xor
push
add
sar
(bad)
inc
mov
lock
add
lock
add
lock
(bad)
(bad)
(bad)
ficom
iret
or
push
cmp
add
sar
(bad)
jmp
add
imul
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jge
pushf
inc
add
lock
(bad)
(bad)
jmp
movs
mov
les
add
sar
(bad)
inc
add
rol
pop
pop
pushf
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
test
xor
add
xchg
mov
lock
add
(bad)
(bad)
(bad)
(bad)
jge
cmp
xchg
xchg
add
add
(bad)
call
add
or
add
imul
and
scas
fwait
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
xlat
add
lock
(bad)
(bad)
jmp
(bad)
cwde
xor
(bad)
(bad)
call
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
(bad)
(bad)
call
push
and
adc
add
in
add
ins
inc
stos
outs
adc
inc
pop
cwde
adc
xlat
int3
rcr
push
retf
lods
dec
push
fsubr
and
ins
repz
xchg
sub
add
(bad)
(bad)
(bad)
call
das
dec
cld
lock
xchg
scas
cmp
add
mov
add
dec
fiadd
lock
sbb
add
add
add
add
push
dec
add
dec
imul
(bad)
(bad)
test
adc
lock
lods
jo
cmp
mov
lods
and
sbb
xchg
(bad)
and
ret
icebp
out
push
sub
or
adc
push
jg
lock
and
lock
or
lock
test
add
fcmovnbe
add
ins
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
xor
retf
mov
sti
cs
adc
sahf
sub
mov
cmps
stos
sub
lock
add
fld
lock
add
xor
add
add
add
rol
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jge
mov
cli
and
add
add
sar
(bad)
jmp
lock
add
lock
add
lock
add
lock
add
or
(bad)
(bad)
inc
(bad)
xchg
pop
mov
(bad)
inc
add
bound
push
lock
(bad)
(bad)
jmp
inc
retf
cmp
adc
mov
or
jecxz
add
popf
jmp
sub
jns
jo
mov
mov
push
dec
ds
data16
enter
outs
add
push
add
and
shr
icebp
sub
lahf
mov
mov
jno
push
and
fnstsw
clc
jno
imul
and
xor
les
and
jbe
aaa
xchg
xor
push
xor
pop
movs
mov
and
aam
shl
addr16
adc
xchg
in
cmp
nop
into
leave
sbb
adc
mov
sar
xchg
mov
std
or
lahf
js
add
push
cmp
mov
jg
push
xor
jne
mov
jno
sahf
addr16
adc
stos
setp
retf
or
js
ret
sbb
or
ss
outs
add
mov
int
inc
push
inc
jno
das
push
xchg
retf
xchg
rol
and
mov
sbb
mov
mov
mov
mov
sub
movs
jecxz
fwait
scas
or
dec
and
into
mov
(bad)
mov
push
push
ror
mov
mov
pop
cmc
fstp
or
mov
xor
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
iret
mov
lock
outs
dec
test
push
sub
sbb
clc
mov
push
cmp
sub
push
cmp
add
lock
add
lock
stc
xchg
stos
movs
mov
cmp
(bad)
sar
lds
int
jne
add
call
push
mov
in
mov
mov
pop
jnp
xor
add
cwde
or
jnp
mov
and
fidivr
sbb
sbb
and
add
push
add
lock
add
lock
add
mov
aaa
idiv
(bad)
(bad)
call
add
lock
add
lock
lock
(bad)
(bad)
inc
cld
in
adc
(bad)
call
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sahf
cmp
xor
imul
lock
gs
push
add
lock
leave
(bad)
mov
mov
jl
retf
call
dec
or
and
jnp
cdq
jne
fs
jmp
or
lea
jns
jl
dec
jae
jl
div
xor
pop
(bad)
int
scas
or
pop
sub
sti
mov
xor
les
xor
sub
lock
ret
add
jge
ja
mov
fidivr
sbb
mov
in
sti
xor
out
std
bswap
loope
push
aam
in
sbb
fbld
sti
jg
cmp
rcr
pop
sbb
adc
stc
retf
ror
jmp
shr
imul
xor
lds
xchg
(bad)
inc
cmps
sub
mov
jp
or
int3
push
mov
mov
pusha
dec
outs
out
shr
call
iret
inc
cmps
xchg
aam
add
mov
sbb
mov
test
add
lock
(bad)
(bad)
(bad)
mov
das
sub
sar
(bad)
jmp
sbb
popa
and
loope
add
outs
mov
(bad)
xchg
inc
mov
jl
dec
or
out
stc
out
cmps
adc
stos
movs
jae
dec
sbb
pop
jne
adc
stc
pop
lods
mov
ja
push
pusha
fnstsw
call
sbb
mov
or
sbb
(bad)
retf
sub
call
and
push
cmp
xchg
dec
push
es
mov
cdq
cmp
jmp
dec
mov
(bad)
jne
fadd
mov
cmp
int
mov
call
pop
loopne
mov
outs
mov
jbe
hlt
ret
outs
cmps
outs
fwait
inc
push
lods
push
push
fisttp
sbb
pop
(bad)
sub
ret
mov
mov
sbb
stos
repz
push
add
add
add
add
add
add
add
inc
iret
add
push
add
add
add
adc
add
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
into
test
xor
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
leave
and
lock
and
jle
add
adc
add
lock
pop
add
or
add
sub
add
(bad)
(bad)
(bad)
push
lods
fistp
daa
and
sar
(bad)
jmp
pop
je
dec
mov
scas
fadd
mov
inc
sbb
test
push
cmc
shl
jo
pop
mov
cmp
out
mov
xor
fcmovb
xor
inc
mov
arpl
mov
into
jp
add
aas
inc
sar
(bad)
and
mov
bound
movs
fcom
mov
jno
push
or
scas
jns
add
or
repz
xchg
fisttp
pop
sub
lea
sbb
and
push
mov
inc
mov
sub
fist
and
jnp
mov
jne
aad
inc
pop
test
int3
push
div
xchg
push
cmps
loope
leave
dec
rdtsc
outs
jbe
inc
scas
sub
and
not
cmp
stos
int3
mov
ret
mov
daa
or
xlat
push
xor
stos
call
adc
push
sti
cli
mov
mov
aaa
add
sub
sbb
add
sbb
test
clc
xchg
pop
mov
fstp
push
mov
add
test
sbb
ins
cmps
and
xchg
in
fild
pop
dec
cmp
cmp
fbstp
adc
sub
scas
repz
adc
pushf
xchg
jo
lock
jno
pop
inc
nop
sub
into
out
and
mov
mov
adc
ja
cmc
shl
out
xlat
ins
outs
js
add
int
jns
pusha
fadd
aam
clc
push
fnsave
call
sbb
pop
add
push
add
mov
push
ja
data16
loop
(bad)
bound
ret
jb
enter
ss
cld
cmp
enter
push
mov
lahf
fwait
inc
inc
movs
fwait
dec
and
cs
inc
call
pop
or
mov
xor
jno
pop
nop
mov
aad
xchg
jbe
(bad)
sbb
sub
push
cmp
imul
lods
(bad)
pop
mov
jp
inc
ins
mov
mov
xchg
inc
ss
jp
nop
call
neg
or
stc
push
fstp
dec
leave
add
sub
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
movs
mov
push
add
lock
add
cmp
add
add
add
ret
xchg
mov
(bad)
(bad)
(bad)
jmp
add
lock
add
dec
or
push
pop
mov
cli
mov
loope
movs
cmp
lea
ins
mov
fdivr
jg
mov
push
rcr
out
mov
dec
xlat
js
rol
cmps
arpl
out
fs
or
or
aaa
xchg
in
cmp
lods
mov
pop
in
mov
jne
stc
mov
icebp
mov
or
fsub
mov
call
ins
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
adc
cmc
movs
dec
mov
pop
jae
lock
mov
mov
sub
push
xchg
ins
and
js
inc
mov
mov
inc
test
cs
mov
shl
jp
retf
and
jno
leave
fsubr
add
sbb
dec
ss
call
push
fiadd
mov
shl
push
mov
add
add
add
add
add
jno
add
add
add
jle
sub
test
mov
stos
inc
(bad)
rol
cmc
sbb
mov
(bad)
xchg
clc
add
je
sbb
xor
call
cmp
or
dec
xor
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aam
fidiv
adc
add
lock
jp
lock
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
mov
(bad)
(bad)
(bad)
call
jecxz
cli
sub
test
lock
add
adc
ja
aad
dec
pop
pop
adc
jle
push
sbb
push
call
jo
ss
mov
sbb
add
add
sar
(bad)
jmp
mov
add
inc
add
lock
add
lock
sbb
push
jg
in
or
or
cmp
mov
pop
xchg
push
imul
fcmovbe
and
add
(bad)
(bad)
(bad)
call
sbb
jp
lahf
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jecxz
es
addr16
push
add
lock
movs
add
aam
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
sub
push
sub
repnz
aam
push
adc
repz
sub
add
outs
out
pop
mov
paddsw
push
mov
cmp
and
push
pop
shl
in
hlt
inc
mov
add
lock
(bad)
(bad)
(bad)
fist
sub
sar
(bad)
call
outs
scas
sbb
pop
pop
movs
add
repz
sub
mov
cwde
push
in
mov
outs
xlat
lds
xor
or
dec
mov
mov
call
adc
(bad)
and
add
add
add
add
add
(bad)
(bad)
(bad)
dec
pop
ins
out
cmp
add
(bad)
jmp
add
outs
jns
lock
(bad)
(bad)
push
pusha
xchg
push
xchg
lods
and
int
jnp
xchg
push
pop
mov
xchg
stc
xor
xor
inc
test
sbb
shl
rol
hlt
into
fstp
xchg
lods
cmp
xchg
int3
retf
scas
cmp
ret
lahf
fcom
movs
dec
jb
std
or
bound
jmp
stos
gs
push
les
(bad)
icebp
or
mov
imul
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
fmul
(bad)
stos
aaa
add
lock
add
sub
add
add
add
add
lock
(bad)
(bad)
call
fidivr
outs
fs
xchg
jmp
lock
(bad)
jmp
addr16
fs
jae
cwde
mov
lods
add
xor
ins
test
add
adc
add
lock
pushf
fs
enter
(bad)
pushw
or
clc
xor
fnstsw
bound
cmp
inc
aaa
jno
fcomp
stos
sub
loope
mov
mov
loop
pop
popf
jl
dec
in
adc
repz
test
into
xchg
jns
mov
cmp
hlt
mov
repnz
stos
pop
fldenv
scas
push
add
lock
add
loop
add
add
add
or
add
cmp
cmp
iret
std
xchg
add
add
add
add
add
push
fmul
(bad)
fwait
sbb
push
cmp
jbe
mov
mov
mov
cmp
cdq
lods
jns
cmc
mov
movs
inc
dec
mov
std
mov
sbb
sbb
mov
dec
pop
pusha
pop
inc
ret
js
adc
xor
push
call
out
pusha
add
cld
pop
mov
lods
push
cli
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
dec
stos
jae
add
sldt
lock
int
int3
mov
inc
repnz
lds
lods
dec
outs
pop
xchg
std
mov
cdq
into
sbb
pop
in
(bad)
call
jne
bound
dec
ins
lea
nop
mov
arpl
sbb
push
mov
cdq
leave
or
sub
push
inc
lea
clc
cmp
add
xchg
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
into
test
add
lock
add
or
loop
ror
sbb
mov
and
fnsave
push
jae
inc
ins
xchg
ret
pushf
inc
jg
sub
cmp
lahf
add
es
add
add
add
bound
stos
sbb
jno
int
sub
jecxz
mov
inc
or
das
push
lds
cmp
pusha
pushf
and
(bad)
cmp
jmp
hlt
add
add
add
add
add
xchg
push
fst
and
mov
ret
cdq
iret
retf
pop
jg
inc
mov
sar
add
jo
cmp
les
lock
add
pop
or
shr
loop
ror
and
add
mov
pop
mov
jne
mov
xchg
adc
data16
into
pop
ja
fiadd
outs
push
jnp
(bad)
shl
add
lock
(bad)
(bad)
(bad)
mov
pop
test
lock
(bad)
push
pusha
cmp
gs
and
inc
das
retf
mov
or
pop
arpl
dec
mov
in
xchg
fiadd
adc
icebp
mov
es
sub
jae
mov
jb
mov
push
cmc
pusha
stc
ret
jbe
mov
jbe
clc
pop
mov
leave
ins
pop
imul
in
cs
mov
jnp
xor
inc
ds
cli
movs
ds
(bad)
lahf
repz
mov
fwait
das
xor
dec
and
xor
(bad)
mov
and
and
stc
sub
inc
ss
out
les
xlat
repz
jp
adc
xchg
or
out
movs
inc
mov
jmp
retf
fidivr
cwde
mov
xor
int
mov
inc
stc
daa
pop
sub
test
jno
mov
ins
mov
movs
sub
or
jmp
mov
syscall
js
inc
mov
cmps
ds
mov
(bad)
pop
in
sub
add
mov
dec
cmp
push
and
push
jbe
push
pushf
mov
sbb
mov
xchg
mov
lea
pop
outs
sub
outs
shr
jno
add
pop
push
mov
or
add
and
aas
dec
dec
mov
out
aaa
inc
fdivr
sub
push
fidiv
(bad)
repnz
pop
xchg
xchg
jg
dec
aas
cwde
sbb
das
pop
adc
pop
sub
jge
mov
aad
push
shl
mov
jno
dec
shl
mov
pop
lods
and
or
mov
sbb
jle
push
jle
mov
fisttp
sti
js
ins
out
les
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
in
inc
pop
add
lock
movs
inc
adc
sub
jecxz
jmp
jne
sub
cmps
ds
enter
cs
or
test
not
out
or
cmp
(bad)
pop
fcom
xor
xor
test
pop
stc
iret
inc
cmps
cs
aaa
mov
sahf
shl
mov
mov
(bad)
dec
outs
mov
dec
push
and
adc
jecxz
ja
retf
sbb
shl
lahf
pop
das
jno
bound
out
add
push
or
ficomp
gs
sar
hlt
out
(bad)
push
pushf
jmp
repz
and
xchg
xchg
jbe
and
pop
push
jmp
jl
test
lock
xor
mov
fistp
loope
ins
loope
in
or
sub
pushf
inc
jno
popa
test
xchg
add
ficomp
mov
add
adc
ret
xchg
xor
xchg
jmp
in
pop
fistp
mov
xor
call
repnz
movs
out
xchg
into
add
push
sub
(bad)
pushf
sahf
adc
pop
sbb
shl
popa
stos
or
or
cs
mov
aam
xchg
mov
cmps
mov
sub
repnz
mov
mov
call
dec
and
sbb
jne
jbe
adc
dec
cmp
in
fild
xchg
sub
jmp
in
inc
xchg
xchg
call
push
pop
out
adc
mov
les
fs
add
lock
and
lock
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
in
jmp
(bad)
(bad)
(bad)
dec
addr16
mov
add
lock
add
(bad)
(bad)
(bad)
(bad)
jmp
or
add
lock
push
add
(bad)
(bad)
(bad)
(bad)
call
sub
lock
or
lock
pop
add
add
add
xor
add
(bad)
(bad)
(bad)
jmp
ficom
xor
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jns
movs
nop
retf
push
add
lock
add
lock
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
cld
push
xchg
sub
add
(bad)
add
push
sbb
dec
into
fcomp
gs
mov
xchg
push
lock
ds
inc
push
add
cmps
pop
aam
push
adc
imul
inc
call
mov
aaa
call
ja
pop
sub
or
stos
cmp
pop
test
mov
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
push
nop
mov
leave
jmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
in
bnd
add
jns
add
add
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
mov
and
lock
(bad)
(bad)
jmp
jmp
adc
(bad)
(bad)
jmp
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
dec
mov
jp
(bad)
in
add
add
add
adc
add
ret
push
jmp
ds
mov
dec
pusha
mov
shl
test
hlt
repnz
not
sar
cli
imul
pop
adc
sbb
icebp
adc
clc
xor
mov
xlat
lahf
sbb
mov
(bad)
in
mov
cmp
mov
clc
imul
jne
pop
pop
pop
js
sub
data16
push
inc
cmp
les
add
add
add
add
cmp
(bad)
(bad)
(bad)
jg
mov
in
jmp
sar
(bad)
call
push
add
or
add
lock
(bad)
(bad)
call
in
aas
mov
cli
and
sar
(bad)
push
mov
add
sar
(bad)
inc
add
lock
add
lock
add
lock
xor
int3
test
js
jne
inc
push
fild
stos
xlat
mov
push
call
add
add
dec
jne
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
lock
lock
add
sub
(bad)
(bad)
call
fdiv
in
stc
aaa
jne
add
inc
add
lock
adc
adc
add
lock
add
(bad)
(bad)
(bad)
jmp
cmp
arpl
add
(bad)
cmp
add
(bad)
(bad)
(bad)
call
add
dec
jle
in
std
sbb
call
(bad)
pop
in
sub
fild
inc
mov
imul
adc
lods
mov
out
adc
outs
lods
jmp
sbb
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
inc
repnz
imul
sbb
push
cld
push
ret
in
not
outs
ins
or
push
(bad)
mov
pop
jb
sbb
xor
push
mov
bound
xlat
mov
jnp
das
sbb
cmps
xor
mov
(bad)
(bad)
(bad)
push
add
std
das
ss
add
lock
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pusha
arpl
add
lock
add
ret
enter
or
ret
xchg
push
push
ins
or
sub
cwde
mov
inc
add
lock
(bad)
(bad)
jmp
int
xchg
jl
xchg
ret
add
push
add
add
and
lock
or
pop
dec
adc
or
pop
sahf
dec
mov
pop
ds
std
loope
rcl
(bad)
inc
mov
mov
jp
cmp
inc
push
int
popa
sbb
push
inc
cmp
leave
mov
iret
mov
mov
adc
jb
push
shl
dec
jmp
mov
sub
fwait
jle
push
out
lahf
sbb
mov
lods
pop
and
sti
push
inc
in
and
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fadd
add
pushf
das
daa
add
sub
add
mov
in
popa
mov
xor
inc
mov
cmp
add
or
jl
fs
mov
gs
mov
(bad)
push
dec
pop
aam
cmp
pushf
popf
and
xchg
into
test
loop
xchg
jae
lock
jp
loop
test
sar
js
lahf
test
add
(bad)
(bad)
(bad)
(bad)
mov
jge
or
add
push
add
(bad)
(bad)
(bad)
inc
in
mov
and
(bad)
(bad)
call
cvttps2pi
pop
or
ror
aaa
sahf
arpl
retf
bound
es
arpl
mov
loope
cmp
xchg
pop
popf
pop
mov
inc
pop
daa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
jmp
and
jl
or
and
leave
test
sbb
dec
sub
lods
cli
stc
adc
jp
add
loope
add
aad
add
lahf
stc
add
mov
add
sub
add
or
add
jecxz
jmp
or
or
call
push
sahf
test
sub
dec
add
adc
ins
inc
movnti
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fsub
and
add
out
add
push
xchg
(bad)
cmp
out
and
rcr
cmp
data16
lea
rcl
inc
lock
dec
xor
mov
jbe
mov
xchg
ins
cld
jne
addr16
imul
(bad)
jmp
(bad)
movs
daa
lock
inc
mov
jp
fsubp
pop
jl
scas
dec
cld
addr16
jbe
sbb
retf
add
addr16
aas
inc
xchg
pop
cld
xor
out
movs
xor
in
ret
int
stos
sbb
dec
in
int3
mov
fs
aad
cld
lock
fcom
out
xor
aam
lea
jmp
test
add
xchg
pop
scas
and
lods
cmp
fidivr
pop
lahf
add
pop
jno
sti
pop
xchg
leave
cwde
test
mov
jnp
xor
jle
test
push
call
cmc
xor
imul
and
xor
aaa
imul
mov
popf
xchg
(bad)
les
jbe
cmp
gs
fisttp
ret
cmc
ins
imul
xchg
adc
movs
loopne
scas
icebp
in
mov
and
scas
push
bnd
lds
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
div
shl
add
lock
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
lock
(bad)
(bad)
call
fbstp
pusha
xor
inc
pop
add
push
add
adc
pop
add
xchg
inc
add
add
add
and
add
add
add
adc
add
or
sub
add
mov
loopne
inc
sub
mov
mov
aad
dec
push
push
js
pop
push
adc
jne
jge
xchg
push
sti
or
jmp
cmps
pop
sti
xlat
lahf
push
jmp
(bad)
(bad)
(bad)
jmp
or
or
add
lock
lock
(bad)
(bad)
dec
cwde
loope
call
add
jmp
add
lock
add
push
or
stos
sar
(bad)
(bad)
jmp
add
lock
add
lock
lods
cmp
mov
cmps
sahf
arpl
jae
and
inc
(bad)
lock
dec
sbb
sub
xchg
js
and
xor
in
in
sbb
add
sbb
add
fadd
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
push
call
mov
fnsave
rol
xchg
push
add
addr16
mov
sbb
(bad)
jl
mov
aas
xchg
jecxz
adc
mov
(bad)
lods
ds
and
out
outs
aas
adc
add
or
fs
outs
mov
mov
out
nop
fwait
imul
cmc
mov
jmp
cmp
mov
cmp
xchg
out
(bad)
mov
add
lock
(bad)
(bad)
dec
pop
(bad)
fmulp
cmp
(bad)
fst
add
add
add
cmps
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
fldenv
aaa
add
lock
(bad)
(bad)
call
je
mov
add
sar
(bad)
inc
add
lock
add
jbe
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
retf
imul
mov
add
lock
(bad)
(bad)
jmp
inc
mov
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
hlt
movs
dec
and
mov
lock
sub
add
adc
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jne
add
add
add
or
add
or
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
add
lods
hlt
add
lods
hlt
add
ja
add
(bad)
(bad)
(bad)
(bad)
mov
add
daa
test
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
jmp
int3
dec
add
(bad)
or
or
jmp
nop
lods
jns
clc
ja
cdq
cmps
icebp
dec
cmps
imul
jns
adc
adc
mov
xor
retf
jmp
movs
cmp
mov
leave
xor
sub
stc
aaa
sbb
push
pop
repnz
fmul
movs
dec
idiv
mov
add
adc
dec
cmp
push
test
lock
xor
mov
lock
test
push
retf
mov
xchg
sub
int
mov
sbb
rcl
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
popf
jl
pusha
sahf
imul
add
sbb
sbb
adc
leave
inc
aas
imul
jmp
cmps
xchg
dec
dec
mov
dec
rol
shl
add
add
ss
add
add
add
int
add
add
add
inc
cmp
lock
add
(bad)
add
sldt
adc
test
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
jae
sub
lock
push
add
lock
add
push
std
call
(bad)
(bad)
call
push
lock
add
and
add
fild
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
xchg
mov
jo
fild
pop
sbb
dec
adc
xchg
xor
sub
ins
pop
lock
xlat
xor
imul
push
pop
dec
sub
dec
fisttp
mov
xlat
outs
data16
lahf
call
jo
call
mov
sub
retf
shr
xor
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
lahf
nop
ds
jmp
hlt
(bad)
and
(bad)
mov
mov
aaa
mov
xor
mov
push
pop
fwait
mov
data16
ins
inc
xor
lahf
adc
jecxz
adc
push
ins
or
bnd
aas
movs
dec
(bad)
enter
out
add
add
add
add
add
add
test
or
push
into
cmp
out
(bad)
aad
add
das
mov
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
sti
ja
pop
cmp
stc
es
lods
sub
imul
dec
add
lods
clc
jge
cmp
mov
sbb
cmp
sub
adc
sub
mov
sahf
jge
sub
mov
je
xchg
aad
je
xchg
mov
sub
in
arpl
jnp
inc
scas
stc
mov
ret
xor
adc
(bad)
sysexit
dec
popa
outs
jnp
cdq
stc
rcr
mov
ret
xchg
or
lock
(bad)
(bad)
push
in
mov
loopne
cmp
lock
(bad)
jmp
or
pop
call
into
mov
les
mov
cmova
mov
push
sub
call
or
not
jmp
gs
sbb
test
pop
mov
dec
mov
out
mov
cmp
jg
jae
movs
les
pop
fstp
repnz
pusha
mov
test
clc
jo
mov
sub
push
xchg
sahf
test
sub
add
scas
rol
lock
add
and
mov
add
(bad)
(bad)
(bad)
(bad)
fldcw
iret
ss
js
xor
add
sar
(bad)
(bad)
std
arpl
cmp
inc
sub
arpl
xor
cmp
in
sbb
inc
lea
mov
dec
xchg
imul
test
ret
pop
rcr
add
lock
hlt
add
add
add
in
add
or
add
xor
add
(bad)
(bad)
(bad)
jmp
pushf
mov
cmps
or
movs
loop
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmc
int
xor
add
jg
add
in
add
loop
add
push
add
and
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
stos
or
arpl
mov
fild
lock
add
lock
add
lock
(bad)
(bad)
(bad)
fild
test
sar
(bad)
jmp
test
and
popa
add
sub
add
fnstenv
add
repnz
out
or
pop
ror
and
xlat
sub
nop
dec
rcr
psubd
fstp
call
mov
jo
adc
mov
inc
add
add
add
(bad)
push
push
lock
add
and
add
and
add
add
lock
(bad)
(bad)
dec
mov
push
add
add
sar
(bad)
dec
(bad)
(bad)
call
sub
lock
(bad)
push
cdq
add
push
add
and
inc
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
imul
add
lock
add
(bad)
(bad)
(bad)
call
(bad)
int3
aas
jecxz
inc
lods
and
add
pop
dec
add
ins
dec
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
out
xchg
adc
dec
rcl
add
push
adc
fst
cmc
hlt
mov
adc
sbb
cmp
das
xchg
div
sbb
push
gs
in
sar
dec
scas
rol
push
add
add
sar
(bad)
(bad)
mov
add
lock
add
lock
add
lock
add
(bad)
(bad)
(bad)
dec
or
imul
push
jmp
mov
ss
inc
pop
pushf
adc
cdq
push
test
mov
hlt
outs
add
ins
cwde
in
push
cmp
mov
jo
sbb
sbb
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
sbb
push
jecxz
cdq
add
mov
and
mov
sub
pusha
ficom
cdq
and
lea
xor
lahf
aaa
jno
adc
popa
mov
push
popf
inc
leave
sti
ret
mov
add
lock
lds
add
add
push
sbb
clc
inc
out
adc
loope
gs
mov
inc
mov
sahf
mov
pop
adc
sub
sbb
cmps
dec
hlt
cli
xor
aad
test
mov
jnp
fimul
lahf
hlt
sub
fsub
sbb
std
sti
ret
inc
pop
add
mov
mov
out
je
pop
mov
int3
in
xchg
sub
test
test
cmps
cmp
mov
gs
adc
cdq
jns
mov
cli
in
xchg
or
cmps
outs
jg
out
adc
jge
mov
and
fst
mov
scas
pop
fs
repnz
in
add
inc
retf
jmp
or
stos
push
pop
sahf
pop
scas
inc
outs
outs
repz
fldenv
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
fst
repz
xchg
add
lock
add
pop
xor
(bad)
pushf
cdq
iret
clc
push
adc
retf
mov
xchg
push
scas
adc
pop
pop
mov
dec
mov
loop
mov
popf
jmp
inc
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xchg
ins
and
add
xchg
push
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
mov
imul
add
jnp
popf
adc
or
inc
ret
push
push
xor
sbb
lds
or
mov
cs
push
add
xor
cmps
mov
xlat
lods
leave
pop
push
retf
in
adc
pop
popf
adc
pop
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
mov
fucomp
clc
inc
sahf
imul
pop
hlt
or
jbe
and
mov
xchg
dec
jle
enter
or
push
xor
push
mov
add
(bad)
(bad)
(bad)
dec
mov
fwait
cmps
pop
add
add
(bad)
call
push
lea
mov
sbb
ret
mov
adc
or
push
xchg
jb
repz
mov
sub
aam
and
xor
mov
jp
lds
fidiv
xor
or
lock
outs
or
fidiv
mov
jle
xor
pusha
mov
or
push
lods
pusha
pop
shl
rcr
outs
or
add
lock
adc
aad
shld
sar
(bad)
jmp
add
lock
add
lock
add
lock
add
or
(bad)
(bad)
dec
mov
adc
(bad)
(bad)
inc
add
inc
jmp
(bad)
push
add
lock
add
add
add
retf
daa
add
call
mov
mov
mov
fdivp
cmp
das
jmp
mov
popf
jno
cmps
shl
jns
imul
jg
mov
push
into
imul
or
ds
pop
call
mov
bound
push
imul
cmps
cmp
cmps
ret
fsub
mov
and
ud0
bound
jae
retf
adc
sub
mov
push
adc
sti
das
cmps
jecxz
aas
or
and
les
dec
dec
jbe
pop
pop
xchg
push
(bad)
inc
cwde
mov
(bad)
gs
or
cmp
add
add
add
pop
add
lock
add
lea
ds
lea
sar
(bad)
(bad)
fisttp
add
pop
add
lock
shl
scas
sahf
mov
stos
xchg
or
pop
test
jne
push
lds
jno
mov
jne
add
je
pop
call
cmp
mov
add
add
stos
fild
lock
add
add
add
(bad)
(bad)
(bad)
call
shr
lahf
cmps
jmp
sub
bound
lock
add
retf
adc
add
lock
add
lock
(bad)
(bad)
dec
cwde
loope
call
add
sar
(bad)
push
add
lock
(bad)
(bad)
inc
cli
cdq
mov
sar
(bad)
push
arpl
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
xchg
mov
mov
ss
test
std
test
shl
inc
mov
cmp
sub
(bad)
inc
clc
rcr
adc
ret
and
mov
push
mov
lds
test
adc
ret
xchg
test
inc
push
je
sub
arpl
adc
icebp
retf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
cmp
out
retf
mov
add
lock
gs
add
lock
add
xor
cwde
dec
sar
(bad)
jmp
mov
add
add
lock
add
lock
add
or
(bad)
(bad)
inc
sar
fsub
xchg
cmc
sar
(bad)
inc
add
daa
add
lock
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
mov
ret
mov
(bad)
(bad)
dec
addr16
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
add
sub
add
push
mov
add
add
hlt
into
test
add
add
sar
(bad)
call
add
push
add
lock
add
lock
ret
push
inc
inc
mov
push
or
push
pop
lods
pop
adc
xchg
sbb
xchg
test
jmp
leave
loopne
bound
push
or
lock
add
add
lock
jmp
jl
mov
push
sti
pop
(bad)
dec
fmulp
sahf
test
bts
repnz
sti
fild
cmps
cmp
add
add
aad
add
dec
add
lock
add
ret
push
idiv
cmp
movs
sar
(bad)
dec
pop
add
lock
add
lock
mov
push
inc
push
loope
jb
jg
sti
sti
cmps
mov
rol
dec
clc
sub
je
sbb
mov
and
nop
hlt
shl
or
ret
mov
nop
aaa
(bad)
(bad)
into
leave
xor
movs
imul
(bad)
push
mov
pushf
div
cmp
fld
pushf
cdq
cs
stos
fidivr
in
out
xor
out
mov
ret
xchg
mov
out
adc
mov
add
or
clc
jge
mov
shr
jns
bnd
push
std
call
cmp
retf
xchg
adc
dec
jmp
mov
sbb
sub
adc
in
into
outs
gs
(bad)
ins
cwde
stos
retf
jnp
int3
add
mov
xchg
sub
(bad)
mov
dec
adc
aam
retf
xor
xor
loop
pop
add
mov
call
sub
mov
push
dec
fadd
sbb
retf
inc
mov
mov
sbb
inc
add
movs
dec
js
pop
jnp
pop
test
and
push
(bad)
fidivr
mov
sar
mov
pop
call
jns
push
je
jl
cmps
dec
cmps
in
arpl
mov
jb
add
movs
dec
nop
cmp
add
push
jnp
sub
test
pop
xchg
(bad)
jbe
hlt
pusha
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
push
adc
das
add
lock
add
jmp
movs
shl
inc
dec
daa
jno
add
lock
(bad)
call
lock
add
push
add
lock
add
lock
adc
push
inc
or
mov
(bad)
stos
inc
pop
pop
adc
pop
push
lods
into
mov
sar
(bad)
mov
int3
fst
aaa
cs
mov
in
imul
sahf
outs
sbb
fmul
adc
jle
xchg
call
push
push
ins
cmp
mov
inc
or
ret
sbb
add
xor
fiadd
ins
fld
push
adc
inc
or
ja
(bad)
sub
and
js
sahf
repnz
mov
xchg
rol
shl
xchg
mov
pslld
pop
out
je
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
(bad)
pop
lock
jnp
add
lock
lock
jnp
mov
xchg
mov
outs
sub
pop
add
xchg
dec
lahf
mov
sbb
addr16
or
(bad)
loope
push
mov
popw
cmps
mov
in
xchg
in
xchg
cmp
mul
ror
sub
and
sub
cmp
or
push
push
jle
shl
mov
inc
add
lock
add
or
add
(bad)
(bad)
(bad)
dec
sub
or
cmp
sar
(bad)
inc
add
bound
lock
(bad)
(bad)
push
jo
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
add
add
add
dec
push
push
fdivr
(bad)
(bad)
(bad)
call
add
lock
add
lock
cld
test
push
and
lds
repnz
outs
sbb
mov
fs
pusha
xor
dec
fdiv
not
jecxz
les
adc
push
dec
out
mov
dec
jns
mov
loop
mov
add
(bad)
jmp
push
popa
xor
adc
adc
push
lahf
add
mov
add
lock
(bad)
(bad)
jmp
push
xor
(bad)
(bad)
dec
dec
xor
sub
retf
test
dec
add
jp
scas
jp
sti
mov
pmaddwd
stc
je
fimul
pminub
loop
in
mov
pop
or
mov
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
cmp
lds
add
add
ret
jae
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
cdq
pop
sub
or
add
add
add
retf
fild
adc
add
lock
add
push
add
adc
push
loope
cmp
daa
xor
inc
int3
push
sti
mov
shr
mov
aas
mov
test
push
push
pusha
or
push
jbe
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
stos
pop
sar
jne
and
or
mov
pop
cmp
ins
push
das
ficom
adc
or
mov
into
jo
push
push
xor
scas
jns
clc
loope
pop
mov
jmp
ret
push
sbb
mov
inc
add
xchg
ins
out
in
dec
mov
jmp
mov
mov
nop
xlat
dec
pop
iret
sbb
sub
add
lock
(bad)
call
fadd
lock
add
lock
add
lock
mov
push
jbe
push
pop
call
add
(bad)
(bad)
(bad)
jmp
int
jno
ja
lock
(bad)
(bad)
dec
ret
or
and
out
xlat
test
inc
or
ret
(bad)
out
inc
push
sbb
sbb
and
ffree
cmp
popf
cs
fsub
adc
dec
jle
outs
aaa
cmp
jno
or
addr16
cdq
mov
add
(bad)
hlt
mov
retf
dec
cmp
add
or
adc
aad
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
test
xchg
xchg
popf
inc
add
lock
jns
lock
add
lock
(bad)
(bad)
(bad)
in
push
adc
sbb
lock
lock
(bad)
jmp
add
lock
(bad)
(bad)
jmp
fisub
cmp
inc
fmul
sahf
jnp
lock
(bad)
(bad)
clc
jnp
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
test
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
xchg
add
pop
sub
sbb
add
pushf
push
(bad)
(bad)
jmp
add
lock
add
sub
add
add
add
or
add
add
(bad)
jge
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jl
ja
cmp
add
add
add
add
add
push
into
add
push
into
add
or
add
push
add
lock
(bad)
(bad)
(bad)
mov
(bad)
sar
(bad)
(bad)
inc
add
pop
push
add
pop
push
add
add
add
xchg
inc
jmp
xchg
int3
lahf
les
and
fstp
ret
call
jae
and
aaa
xchg
outs
inc
pop
int
ins
retf
in
jno
dec
(bad)
sub
push
add
lock
dec
mov
sub
push
push
mov
fist
jge
or
mov
mov
loop
shr
jecxz
cwde
lods
dec
(bad)
or
aad
mov
inc
sub
jp
fwait
out
mov
adc
stos
es
rcl
data16
fisubr
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jge
dec
cmp
add
cmps
mov
lock
add
lock
add
add
stc
jb
sub
inc
loopne
aaa
add
rcl
add
push
(bad)
enter
jl
stos
js
mov
lea
or
jno
rol
xchg
lock
jle
stos
jl
push
scas
jl
or
lahf
add
in
mov
add
add
dec
xchg
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
xor
add
jae
add
pop
imul
add
out
push
stos
mov
xchg
scas
mov
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
cdq
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
sbb
pop
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
ret
add
(bad)
(bad)
(bad)
(bad)
jle
adc
pop
lock
(bad)
dec
add
(bad)
(bad)
(bad)
jmp
mov
lock
(bad)
call
outs
scas
or
and
mov
mov
out
add
sbb
movs
pusha
push
xchg
add
aaa
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
pop
ins
mov
inc
add
lock
add
(bad)
mov
xchg
mov
loope
sar
(bad)
call
fld
lock
add
lock
mov
xor
mov
xor
lahf
add
jno
(bad)
add
sub
add
mov
popf
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
scas
pop
fcmove
push
add
lock
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
pusha
xchg
adc
mov
ins
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
dec
fnstcw
add
and
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
pavgw
push
jmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
jns
xor
xor
leave
mov
adc
(bad)
push
mov
xchg
(bad)
dec
adc
aaa
bnd
mov
mov
pavgw
inc
and
bound
stos
dec
ja
xchg
dec
call
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
rol
xor
add
les
call
not
pmaxub
inc
das
fistp
shl
fiadd
mov
inc
inc
ror
or
jl
xchg
dec
daa
add
cld
jnp
es
xchg
pop
jno
mov
sbb
adc
es
std
fnstenv
inc
hlt
and
add
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
int3
sahf
push
cmps
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ins
or
xor
add
inc
call
(bad)
(bad)
(bad)
dec
(bad)
dec
sub
clc
cmp
add
sti
fwait
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
xor
(bad)
shr
add
cmp
add
(bad)
(bad)
(bad)
inc
adc
add
sar
(bad)
jmp
cli
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
les
pop
add
lock
lahf
add
xor
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
pop
xchg
mov
ficom
mov
push
xchg
xchg
shr
call
push
fdiv
inc
or
pop
imul
xchg
dec
add
jl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pop
jp
test
jo
push
fidiv
push
jl
mov
push
mov
pop
fwait
sbb
dec
sbb
push
test
jno
les
mov
sub
sahf
mov
std
push
out
lods
aad
(bad)
mov
in
inc
add
lock
(bad)
(bad)
call
sub
lock
(bad)
(bad)
cli
mov
sub
cmp
(bad)
fild
scas
stc
aad
mov
std
adc
cmp
add
mov
enter
mov
das
scas
adc
inc
push
mov
cs
(bad)
dec
add
cmp
inc
sbb
pop
jno
arpl
mov
and
jle
xlat
pop
movs
ffree
lods
add
addr16
add
add
add
inc
add
lock
(bad)
(bad)
jmp
xchg
xchg
cmps
add
sar
(bad)
(bad)
jmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
enter
pop
daa
push
aas
call
adc
bound
sub
mov
push
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
arpl
inc
stos
add
(bad)
in
push
cli
leave
lods
add
inc
cmp
xor
das
or
mov
outs
retf
mov
jmp
jl
add
leave
repnz
add
push
cmp
add
lock
(bad)
(bad)
(bad)
mov
je
adc
stos
add
sar
(bad)
inc
add
lock
push
add
add
add
adc
and
(bad)
call
out
push
sub
and
ss
dec
stos
xchg
sbb
pop
sbb
mov
nop
jle
(bad)
iret
ret
jb
das
add
lock
(bad)
(bad)
call
inc
jle
adc
sar
(bad)
(bad)
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
mov
sub
ss
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
push
add
lock
add
mov
stc
dec
and
mov
mov
out
loopne
and
movs
dec
pushf
test
inc
dec
ret
cmp
xor
fst
push
cmp
and
jl
pusha
mov
jmp
xchg
adc
adc
retf
push
data16
mov
jl
cmps
xchg
dec
ins
loopne
add
sub
inc
dec
push
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
(bad)
cld
xor
add
(bad)
mov
lock
add
add
add
popa
lock
dec
fcomip
mov
xchg
out
inc
jl
cmp
stos
jp
sub
xchg
call
jns
dec
dec
lds
mov
mov
dec
in
lahf
fnsave
not
push
lahf
icebp
push
fnstenv
add
lock
add
adc
add
xor
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
hlt
test
imul
test
sbb
cmp
fldcw
dec
lods
sub
fdiv
push
jno
push
add
jo
popa
hlt
mov
jo
inc
cwde
(bad)
std
nop
xchg
pop
shr
xchg
lods
pop
cmps
lods
mov
cmp
pop
pop
add
and
add
add
add
add
add
add
add
add
add
ins
rol
lock
add
add
add
stc
into
mov
jle
js
into
call
push
lock
xchg
dec
mov
inc
lods
push
in
cli
jge
or
add
add
add
push
lock
add
add
add
add
add
aas
xor
push
aam
ds
and
sbb
mov
lahf
(bad)
retf
sar
and
mov
adc
pusha
mov
fwait
inc
inc
cmp
outs
or
jp
push
and
push
and
jno
test
imul
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
pop
xlat
ret
dec
data16
and
sbb
xor
cmc
aam
inc
or
stos
sub
pusha
enter
int
sub
jns
cld
test
jmp
cdq
mov
mov
out
mov
mov
xchg
lea
aas
sbb
nop
ret
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
int
xchg
jl
xchg
ret
add
hlt
mov
add
out
pop
add
pop
mov
imul
nop
and
aad
fadd
and
aaa
int3
jae
inc
fdiv
mov
xchg
std
and
push
mov
add
add
add
or
add
lock
jge
add
popf
xchg
add
bound
dec
out
dec
cmps
push
inc
retf
and
add
mov
sub
bnd
int3
fdivr
xor
cli
jo
cdq
loopne
push
mov
js
mov
cmp
adc
dec
mov
xchg
cmps
pop
mov
xor
test
cwde
inc
xchg
(bad)
jmp
cs
or
jbe
into
push
jae
outs
test
aad
imul
push
fcom
loopne
jl
cmp
cmp
in
lds
jns
xchg
and
pop
iret
jb
and
in
push
pop
(bad)
jge
push
xor
mov
lea
xor
add
and
rcr
add
aaa
add
int
mov
lods
fs
out
(bad)
sub
mov
cs
jp
inc
sti
jns
xor
sbb
mov
jle
inc
mov
mov
inc
mov
jmp
ret
fild
and
cmp
fsubr
mov
and
jns
sti
dec
mov
add
(bad)
(bad)
(bad)
(bad)
fld
mov
push
pop
mov
(bad)
(bad)
call
lock
(bad)
(bad)
call
ds
cmp
mov
(bad)
(bad)
cmp
xchg
or
shr
adc
jp
cmp
cmps
mov
fcomp
mov
loope
pop
inc
push
inc
ficomp
push
leave
test
dec
retf
mov
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
jae
mov
fwait
out
pop
jge
icebp
fst
sbb
rol
cmp
xlat
add
stos
inc
jb
enter
push
pop
ss
imul
sti
jno
xchg
jl
xor
rol
and
add
into
out
lock
add
add
add
inc
dec
add
sbb
add
clc
les
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
jbe
sar
ins
loope
add
lock
ret
add
dec
dec
aas
pop
dec
js
aad
dec
mov
mov
les
dec
cmp
xor
in
out
cmc
outs
scas
stos
dec
xchg
add
and
scas
ss
das
fistp
retf
iret
arpl
aam
inc
pop
aam
jge
test
sbb
cmp
aaa
dec
out
jnp
push
sub
mov
xchg
hlt
mov
or
and
inc
mov
mov
icebp
ins
xchg
out
jnp
jno
xor
call
bound
dec
cmp
add
add
add
enter
sbb
enter
call
fld
lock
add
nop
xchg
jmp
xlat
loopne
gs
jmp
mov
(bad)
mov
les
or
popf
out
dec
rcr
(bad)
les
pop
push
shr
mov
cmp
ret
bound
mov
mov
adc
jae
jae
cmp
retf
xor
sti
jmp
(bad)
les
push
retf
call
js
cmps
xchg
dec
xor
cmp
push
scas
test
and
lds
adc
jmp
int3
mov
cmp
pop
shl
mov
not
or
popf
retf
mov
or
dec
add
push
scas
cs
add
lock
(bad)
jmp
add
imul
add
cmp
add
(bad)
(bad)
(bad)
call
je
addr16
add
sar
(bad)
dec
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
fild
or
add
sahf
jmp
aad
sbb
mov
and
ins
dec
js
cmp
mov
mov
or
outs
ins
scas
mov
lods
aaa
mov
mov
movs
sbb
or
push
or
mov
into
fimul
inc
mov
(bad)
push
rcr
mov
cmp
add
sub
inc
mov
out
daa
pushf
movs
aaa
test
scas
pop
inc
mov
jns
mov
inc
ret
inc
out
sub
jp
jo
jecxz
adc
aad
sbb
outs
test
mov
ss
xchg
loope
retf
mov
shr
mov
int3
stc
adc
jge
jp
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
jmp
jne
pop
add
lock
push
add
rol
jg
mov
mov
iret
and
xlat
test
lea
push
cmp
xor
leave
xor
data16
fidiv
adc
fbstp
or
iret
lea
add
sub
stc
fsubr
push
add
aam
popf
pop
mov
(bad)
adc
aas
(bad)
jo
daa
jno
lahf
dec
xchg
xor
add
(bad)
(bad)
(bad)
inc
dec
or
adc
add
sar
(bad)
inc
cmc
xchg
xchg
cmovo
in
cmp
mov
xchg
jo
cmp
mov
jnp
cmps
cmp
dec
(bad)
shr
add
add
add
int3
cdq
dec
ds
lea
out
jp
jp
test
ss
std
inc
jl
mov
cli
jp
mov
inc
and
push
sbb
jge
xchg
push
mov
pop
add
and
add
lock
add
repz
(bad)
(bad)
(bad)
(bad)
call
xor
movs
xor
add
jle
add
in
and
add
add
aam
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
test
add
lock
add
jge
add
add
add
add
add
pop
aam
and
add
lock
int
lock
add
sub
imul
mov
push
add
popf
cmps
call
ja
or
js
lods
push
(bad)
sub
iret
push
pop
xor
sbb
(bad)
int
in
sahf
mov
jns
addr16
arpl
add
push
jmp
sar
cmps
std
enter
movs
rcr
int
cmp
dec
hlt
inc
scas
sar
dec
jno
lea
push
sbb
mov
cmp
add
mov
sub
lock
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
in
mov
loope
gs
add
lock
lock
aam
pop
mov
inc
into
daa
and
push
push
mov
dec
ds
loope
jle
repz
out
lea
cmp
shl
mov
rol
add
add
(bad)
or
mov
ins
ret
mov
mov
icebp
int3
out
sub
iret
or
daa
imul
movs
(bad)
inc
dec
cmp
and
lock
add
nop
outs
add
adc
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
mov
ret
add
lock
add
loope
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
sub
out
push
add
repnz
add
int
add
add
add
repnz
lock
add
mov
add
lock
add
lock
(bad)
(bad)
call
fwait
lods
div
(bad)
add
sar
(bad)
push
add
and
xchg
pop
es
sub
dec
lds
pop
test
cmp
or
fdiv
add
cmp
jo
icebp
rcl
fsub
sub
adc
retf
dec
hlt
adc
jb
out
mov
mov
jae
shl
retf
xor
cwde
xchg
inc
fild
imul
in
push
test
into
ficom
gs
pop
xchg
add
adc
imul
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
pushf
sbb
lods
(bad)
shr
sti
mov
push
xchg
mov
adc
push
in
shr
xchg
adc
jae
pop
test
jne
out
cwde
test
jns
in
into
push
mov
jge
pop
pusha
add
shl
jne
pop
pop
jae
push
push
push
stc
mov
mov
jae
cld
cli
int3
shl
jmp
inc
shl
out
mov
push
xor
push
ds
jp
je
add
lock
(bad)
(bad)
call
pop
ret
jns
loop
lock
(bad)
call
xchg
xor
stc
xchg
(bad)
aaa
dec
sub
xchg
inc
mov
mov
in
aad
push
mov
sub
test
or
sub
push
enter
pop
dec
or
jl
sub
ja
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
std
push
addr16
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
push
pop
add
ins
add
lock
add
fisubr
dec
je
push
lods
mov
(bad)
(bad)
(bad)
(bad)
inc
lock
add
add
add
jl
add
add
add
repz
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fwait
lods
mul
add
add
lock
(bad)
(bad)
dec
add
loop
add
(bad)
(bad)
(bad)
call
retf
hlt
xor
sti
sub
retf
jae
cmp
or
stc
sbb
push
adc
lahf
fs
test
xchg
jbe
jle
pop
sub
jmp
movs
ret
add
jbe
jg
mov
inc
and
fldenv
icebp
inc
sbb
pop
mov
retf
add
arpl
icebp
outs
xchg
mov
icebp
pop
sbb
fldcw
dec
(bad)
mov
push
mov
leave
js
dec
sub
loope
mov
sbb
jae
cld
rcr
inc
fcmovne
cmps
or
jl
mov
shl
rcl
ret
lock
add
add
add
mov
mov
cld
pushf
inc
xchg
dec
mov
hlt
lea
mov
push
xchg
cdq
fwait
test
add
mov
jmp
inc
lock
aam
mov
dec
and
add
dec
adc
add
sbb
jmp
enter
sub
push
ins
adc
fisttp
add
jle
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jne
popa
ss
add
push
or
stc
push
or
and
jo
lods
test
adc
sbb
adc
data16
add
add
add
pop
iret
sub
mov
xchg
cwde
add
lock
add
out
cs
cdq
mov
ins
pop
in
mov
lds
pop
shl
push
jmp
jmp
push
inc
out
jl
mov
push
(bad)
(bad)
call
sub
int3
out
add
sar
(bad)
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
mov
mov
add
add
sbb
lock
add
pusha
add
add
and
add
(bad)
(bad)
(bad)
inc
fucomp
inc
leave
jb
xchg
lock
sar
(bad)
jmp
add
lock
(bad)
(bad)
inc
outs
pop
push
jns
sar
lock
sar
(bad)
push
xor
dec
xchg
(bad)
sub
xchg
rol
call
mov
mov
rcr
xor
arpl
push
jecxz
retf
sub
imul
pop
sub
sub
cmp
cmp
add
add
add
mov
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
loope
sbb
movs
dec
xchg
push
fwait
out
xor
fdiv
ja
mov
rcl
jmp
xchg
or
mov
cmp
arpl
outs
cs
cld
loope
push
xor
repz
mov
ss
aad
xchg
stc
mov
mov
xchg
push
mov
mov
fild
or
fs
or
add
fdivp
add
stos
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
cmp
push
sti
mov
mov
daa
adc
repnz
pop
sbb
cmp
adc
jb
mov
or
repnz
mov
inc
pusha
xchg
shl
(bad)
lock
fcom
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
dec
add
add
lock
inc
add
add
add
das
add
lock
(bad)
(bad)
inc
dec
xchg
jnp
push
sub
repz
add
sar
(bad)
jmp
mov
mov
js
shr
xor
jge
pop
sub
lahf
add
mov
push
cs
adc
imul
inc
add
lock
(bad)
(bad)
dec
(bad)
mov
push
stc
or
stc
add
sar
(bad)
(bad)
cmp
xchg
call
cmps
retf
pusha
test
call
sahf
enter
jno
jns
(bad)
test
mov
leave
in
jg
fild
pop
xor
gs
dec
xor
call
push
mov
movs
enter
mov
lods
test
jne
cmp
cmc
cmp
retf
or
lahf
cmc
std
xchg
adc
dec
leave
dec
movs
shl
sar
add
lock
add
lock
add
add
add
push
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
mov
and
cli
add
xor
push
scas
pop
fisub
ret
adc
(bad)
mov
adc
push
pop
or
sub
rcr
cmc
repnz
or
inc
repz
cmp
add
lock
(bad)
(bad)
call
adc
out
fwait
sbb
clc
cli
add
sar
(bad)
jmp
out
data16
enter
repz
lods
test
add
dec
(bad)
arpl
xchg
fsub
cmps
and
stos
mov
aam
repz
xor
imul
ss
or
cmps
inc
xchg
std
cli
pop
add
xor
jns
and
xor
or
xchg
shl
shl
mul
es
inc
sti
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
ret
(bad)
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
addr16
cld
add
fistp
add
stos
sti
add
adc
pop
and
cmc
and
jg
retf
or
cmp
je
and
dec
mov
cmp
xchg
scas
add
xor
lods
add
add
add
push
add
sub
add
push
add
lock
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fwait
add
xchg
icebp
inc
add
lock
add
push
add
lock
add
push
add
lock
(bad)
(bad)
call
pop
lds
lock
inc
add
xchg
mov
inc
add
lock
jmp
mov
fimul
ins
mov
add
(bad)
push
add
lock
add
and
add
enter
enter
push
add
adc
mov
movs
sub
jb
jge
adc
mov
pop
(bad)
xor
test
lock
jmp
ja
hlt
xor
add
or
add
sub
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xor
xchg
mov
fisub
add
sub
add
test
add
and
add
lock
bnd
sub
mov
pop
call
sbb
loop
push
jb
retf
stos
cs
ficom
retf
xor
movs
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
xchg
add
lock
add
lock
add
push
add
and
retf
add
add
das
add
lock
(bad)
(bad)
inc
add
xchg
imul
(bad)
(bad)
(bad)
cmp
add
lock
add
(bad)
(bad)
(bad)
jmp
repz
push
mov
sar
(bad)
jmp
mov
lock
(bad)
(bad)
push
add
lock
(bad)
(bad)
call
pop
out
pop
(bad)
ficom
add
lock
(bad)
inc
mov
xchg
call
lods
push
mov
mov
jmp
int3
dec
aam
push
cdq
icebp
sub
push
nop
jl
movs
cmps
push
push
add
lock
(bad)
(bad)
call
icebp
jecxz
sub
mov
jmp
push
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
into
cli
mov
add
dec
fadd
lock
add
adc
add
bound
lock
fstp
push
xor
fdivr
xor
inc
mov
bound
push
pop
(bad)
fnstcw
jg
push
mov
gs
mov
(bad)
jbe
in
test
in
mov
test
jge
cmps
(bad)
jo
xor
mov
pusha
and
push
lods
sub
mov
and
movs
ds
ss
dec
mov
(bad)
daa
int3
mov
push
push
enter
mov
js
push
fstp
dec
mov
pusha
gs
pusha
xlat
imul
pop
adc
jno
xor
push
pop
xor
add
lock
add
and
add
(bad)
(bad)
(bad)
call
fdivr
and
xor
add
sar
(bad)
jmp
pop
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
movs
xchg
aas
push
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fist
ins
sub
dec
ja
add
mov
lock
add
(bad)
(bad)
(bad)
jmp
push
lock
(bad)
push
add
and
add
mov
imul
xchg
imul
movs
mov
cld
adc
push
int3
bound
xchg
sbb
inc
add
or
add
cli
sub
lock
add
sub
add
aad
add
aas
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
movs
mov
aaa
add
lock
add
cld
sbb
cld
push
or
mov
dec
pushw
fnstcw
mov
mov
lahf
sub
jo
sbb
xor
mov
cmp
mov
pop
icebp
mov
ss
jne
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
shl
scas
fs
add
lock
pop
add
icebp
pop
mov
and
int
das
js
adc
adc
test
and
daa
xlat
and
inc
fadd
aaa
retf
imul
push
lds
popa
inc
add
mov
jmp
fcomip
repz
mov
jne
jo
mov
in
adc
popf
dec
aam
mov
scas
(bad)
push
mov
adc
mov
pop
into
daa
aam
rcr
fistp
(bad)
dec
sub
fmul
adc
push
cmp
neg
xor
int3
retf
retf
outs
add
ret
(bad)
mov
jl
jmp
in
mov
jne
shl
fwait
cmp
push
adc
jae
lods
add
push
push
and
xlat
and
enter
sub
(bad)
cdq
mov
test
cmps
(bad)
sbb
jmp
pop
imul
outs
sbb
sub
sub
ret
lea
xchg
nop
out
pop
push
repnz
xchg
cs
test
fnstcw
or
mov
pop
sti
out
mov
pop
or
retf
lods
into
jge
xor
ss
xor
inc
add
lock
add
ret
cmp
mov
(bad)
jmp
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
rcr
pop
add
nop
pop
add
lock
add
add
add
add
add
aas
retf
add
aas
retf
add
or
add
add
add
add
add
enter
add
add
add
add
xor
add
add
add
add
add
and
ret
push
xchg
mov
sub
jmp
jb
retf
scas
push
sbb
or
jmp
cld
mov
mov
test
adc
jl
imul
imul
jae
shr
gs
dec
xor
cpuid
mov
out
imul
(bad)
(bad)
(bad)
(bad)
(bad)
out
xchg
mov
xor
add
jle
add
jmp
call
jne
enter
sbb
adc
lds
mov
mov
ror
outs
push
retf
jge
cwde
add
pop
(bad)
mov
push
movs
inc
dec
push
jp
sbb
add
add
add
or
add
(bad)
(bad)
(bad)
push
inc
xor
(bad)
(bad)
inc
add
cld
aam
lock
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
push
xor
add
dec
jo
lock
mov
pop
jb
pusha
cld
bound
pusha
add
jns
jo
inc
mov
mov
add
xchg
mov
jb
enter
xchg
xor
sbb
push
jg
mov
cmps
push
not
jg
not
push
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
in
scas
and
rol
add
push
scas
add
add
add
pop
add
add
adc
add
lock
rcr
push
jo
stos
cdq
jle
pop
mov
and
(bad)
pushf
dec
push
pop
push
fstp
jbe
loop
mov
cmp
daa
jbe
push
xor
jno
fld
xchg
outs
dec
psrld
add
or
add
vmovntps
jmp
xor
daa
inc
and
sub
stos
sbb
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
psubd
add
lock
imul
dec
loopne
imul
int3
rcl
bound
mov
sub
mov
pushf
aas
inc
inc
shl
mov
jle
mov
or
neg
push
rcl
leave
and
jmp
sahf
cmps
into
lahf
ret
add
mov
inc
jl
fnstcw
mov
imul
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
das
sub
add
push
add
adc
ror
lods
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
fiadd
jmp
lock
(bad)
(bad)
push
test
push
fisub
add
sar
(bad)
(bad)
jge
add
push
add
lock
cdq
add
gs
add
add
jge
inc
xor
imul
cs
adc
(bad)
sbb
mov
push
xchg
scas
and
in
stos
bound
and
pop
jbe
jmp
icebp
mov
test
mov
or
jnp
sub
sub
nop
popf
retf
xchg
loop
jae
das
adc
pop
inc
sub
test
sahf
shl
xor
push
ds
movs
mov
(bad)
aaa
sub
sahf
xor
lea
call
inc
ja
cmps
inc
pop
in
arpl
mov
jg
loop
pusha
xor
sbb
xchg
jae
sub
mov
jge
mov
in
pop
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
aas
jecxz
inc
lods
lahf
call
cmp
add
mov
add
lods
add
lock
add
adc
add
(bad)
(bad)
(bad)
dec
pop
retf
movs
pop
dec
sar
(bad)
call
add
stos
cmps
add
call
add
dec
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
or
test
mov
into
rol
lock
add
rcr
add
inc
add
lock
add
or
(bad)
(bad)
push
and
pop
sar
(bad)
inc
add
sbb
(bad)
(bad)
push
pop
add
or
add
lea
cdq
sub
push
(bad)
cwde
pop
xor
out
cdq
neg
icebp
sar
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
ret
and
movs
outs
jp
xor
add
xchg
jae
lock
lods
xchg
fwait
mov
int
sub
dec
mov
movsx
pushf
popf
mov
lds
push
ret
cmp
jnp
gs
aad
jmp
mov
sub
jns
mov
dec
mov
add
add
cmc
cmp
and
add
lock
inc
add
call
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
push
popf
stos
push
add
lock
(bad)
(bad)
jmp
or
jmp
jl
lock
(bad)
(bad)
(bad)
jmp
lock
mov
inc
mov
aas
std
test
into
mov
add
outs
push
xor
and
mov
bound
mov
jmp
std
xchg
mov
ds
lods
daa
mov
jne
in
add
add
jp
add
cmps
mov
mov
jmp
icebp
and
mov
jae
jmp
rol
dec
xchg
sub
mov
aaa
fwait
inc
and
add
or
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
es
mov
inc
lahf
jge
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
rcl
lock
add
inc
adc
lds
in
sub
add
lock
(bad)
(bad)
jmp
lock
add
and
add
push
stos
inc
sub
js
int3
adc
jb
push
push
test
rol
jmp
std
clc
sub
out
std
iret
retf
mov
(bad)
(bad)
(bad)
call
fwait
loop
xor
add
movs
jns
lock
jns
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
fwait
shl
jnp
jmp
sub
sbb
and
int
push
dec
and
push
pop
and
mov
mov
popa
and
xchg
mov
xchg
jg
xchg
xchg
and
xor
push
push
pop
int
(bad)
jae
inc
out
add
call
loope
push
(bad)
jge
push
pop
mov
mov
fnstenv
lea
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
pop
jp
sub
add
(bad)
jp
lock
ins
xchg
or
enter
xchg
pop
loopne
cmp
push
mov
js
xchg
inc
jb
xor
dec
adc
test
xlat
add
(bad)
cld
fwait
push
out
cdq
push
mov
(bad)
or
cmp
add
hlt
push
in
js
jge
lods
mov
xor
and
jg
adc
out
mov
jno
iret
fsubr
dec
outs
mov
push
int3
aad
lds
ret
rcl
jnp
mov
pushw
cmp
ins
inc
mov
push
test
and
xchg
mov
dec
xor
rcr
push
dec
add
jg
repz
aam
pop
and
inc
retf
call
jmp
stos
and
ret
ret
cmps
fistp
jmp
add
mov
xor
mov
test
leave
or
pop
test
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
inc
leave
jb
xchg
sbb
add
lock
and
shl
push
stos
or
fdivr
bound
add
(bad)
(bad)
(bad)
jmp
dec
jmp
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
jp
cmc
lods
frstor
inc
shr
jl
lock
(bad)
push
add
lock
(bad)
(bad)
jmp
jmp
scas
sbb
add
sar
(bad)
(bad)
out
mov
lock
add
xchg
call
int
jo
push
xor
cmp
icebp
xchg
aad
sub
mov
cmp
jg
xor
xchg
hlt
inc
mov
es
pop
dec
imul
dec
xor
mov
dec
sbb
jmp
mov
mov
xchg
lods
jnp
mov
ret
dec
es
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jle
in
jne
push
adc
add
scas
pushf
add
add
add
fisubr
or
scas
pop
sub
mov
mov
mov
jnp
mov
push
pop
fistp
jb
inc
push
or
pop
inc
je
mov
(bad)
add
add
ja
add
cmc
xor
lock
add
add
add
stc
stos
add
or
add
add
add
xchg
ins
add
out
mov
mov
imul
mov
fadd
test
in
ds
mov
add
lock
pop
add
ins
mov
lock
add
mov
mov
add
add
adc
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
loopne
fiadd
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
fidiv
xchg
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
xchg
stos
pop
inc
add
lock
add
or
add
pmulhw
adc
in
lock
add
add
add
in
add
jne
jo
je
dec
(bad)
fs
repnz
shr
popa
mov
dec
add
xor
lock
fild
aas
clc
add
int
and
add
xchg
jne
mov
jo
mov
xchg
pop
fst
in
mov
sub
dec
rcr
dec
xchg
fstp
push
sub
push
push
add
and
add
or
add
push
xor
adc
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
popa
ds
ret
test
add
std
test
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
mov
add
jmp
add
lock
add
mov
add
xor
lock
add
or
add
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
lahf
hlt
mov
and
xor
add
(bad)
(bad)
(bad)
call
adc
jg
loop
loop
xchg
lock
(bad)
jmp
add
add
add
ss
sahf
call
call
add
lock
add
test
adc
add
lock
in
rcr
jbe
clc
dec
fimul
dec
stos
cmp
(bad)
mov
lea
iret
fcomp
loopne
inc
mov
push
push
(bad)
jg
pusha
push
xlat
xchg
dec
xor
mov
cdq
inc
adc
into
add
add
std
add
add
add
push
add
adc
out
(bad)
mov
mov
add
add
sar
(bad)
(bad)
jg
add
lock
add
lock
add
lock
out
pop
(bad)
lahf
cdq
dec
mov
shl
push
mov
adc
mov
sbb
mov
mov
inc
arpl
ret
lods
mov
mov
xor
and
xor
retf
cwde
sub
push
shl
and
je
cwde
ret
fsub
arpl
xor
add
sbb
arpl
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
data16
ret
movs
shr
xor
add
xchg
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
jg
and
add
lock
mov
and
leave
mov
ret
push
scas
dec
cmp
mov
xor
jo
add
cmp
mov
imul
cmp
shl
jb
lea
jmp
pushf
shl
in
je
scas
fsubr
outs
xchg
push
cli
cmp
mov
(bad)
or
mov
xchg
add
out
sbb
inc
and
push
loopne
call
aad
push
xchg
outs
mov
inc
adc
add
fadd
push
push
clc
ins
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
mov
cmp
add
and
mov
fwait
jg
mov
mov
or
jle
cmp
mov
or
jmp
adc
rcr
sahf
or
adc
cld
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
call
int3
fcmovnbe
(bad)
(bad)
(bad)
cmp
add
cmp
(bad)
(bad)
jmp
add
add
add
add
add
adc
add
add
add
add
lock
(bad)
(bad)
jmp
nop
stos
pop
jns
add
sar
(bad)
dec
pop
xchg
mov
call
retf
jne
sbb
push
div
and
(bad)
push
xchg
push
inc
adc
mov
icebp
les
sub
icebp
jle
cs
call
adc
ja
fst
in
mov
xchg
mov
ja
movs
fmul
daa
inc
rol
adc
push
push
mov
xchg
mov
mov
cmc
xor
sar
jb
xor
sbb
mov
lock
(bad)
(bad)
jmp
ins
or
fisttp
(bad)
(bad)
jmp
add
add
add
add
add
dec
add
lock
add
push
add
lock
(bad)
(bad)
call
adc
cmc
test
(bad)
inc
add
outs
lahf
add
inc
mov
push
scas
xchg
into
inc
jne
mov
ins
mov
or
adc
in
cmp
jae
cmc
aaa
add
lock
(bad)
(bad)
call
and
push
cmp
scas
popf
mov
lock
(bad)
(bad)
jmp
data16
cmc
into
cdq
dec
mov
cmp
or
sub
and
cs
add
mov
xchg
jmp
mov
mov
add
mov
mov
or
xchg
popf
xor
push
inc
pop
mov
and
(bad)
(bad)
jmp
sbb
(bad)
imul
pop
lock
(bad)
inc
add
add
add
or
(bad)
(bad)
jmp
adc
add
lock
xchg
add
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fsubr
out
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
lock
xchg
add
out
(bad)
xchg
push
call
mov
stos
mov
addr16
jb
add
fst
lea
and
sbb
sbb
inc
jge
mov
sar
mov
inc
cli
push
dec
loope
fistp
fimul
fstp
cmps
sub
inc
neg
jo
jno
cmp
add
(bad)
(bad)
(bad)
dec
mov
ret
add
sar
(bad)
(bad)
fnstcw
shl
cmps
add
scas
xor
xor
adc
out
fistp
fiadd
retf
in
sbb
jmp
jbe
cs
add
adc
lods
loope
ins
mov
loope
mov
fstp
add
movs
fadd
and
and
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
jae
mov
fwait
out
add
lock
xchg
add
push
pop
int3
or
sub
call
sub
push
xchg
lods
shr
add
stos
xchg
push
push
sbb
adc
cmp
mov
cmp
sub
add
sub
jb
cmp
dec
cmp
add
shr
and
mov
adc
mov
cmp
push
pop
add
arpl
retf
jnp
cmps
scas
lea
jecxz
push
or
adc
and
mov
ret
stos
fldcw
mov
je
ja
pop
mov
xchg
out
sahf
mov
cld
movs
out
mov
mov
bound
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fild
xchg
inc
add
lock
add
jecxz
mov
es
(bad)
dec
(bad)
add
lock
add
lock
in
and
push
outs
lock
je
adc
ins
pop
loopne
pop
imul
sbb
lds
cmp
sbb
mov
rcr
mov
dec
in
xor
inc
(bad)
inc
jns
mov
add
add
(bad)
(bad)
(bad)
push
sbb
int
xchg
add
sar
(bad)
call
add
lock
add
push
aam
add
add
dec
xor
lock
add
add
add
imul
(bad)
call
jg
sub
cmp
cwde
add
sar
(bad)
jmp
push
call
scas
pop
pop
mov
cmp
fnstsw
bound
xchg
cmp
jmp
push
rcl
ds
xlat
es
scas
jne
sub
xor
jg
retf
sub
push
in
xlat
push
scas
jne
or
nop
dec
adc
inc
loopne
xlat
xor
out
push
ret
push
test
sub
push
movs
push
cld
test
fcomp
pop
cmp
add
(bad)
(bad)
(bad)
(bad)
jmp
cmc
das
call
dec
fwait
add
push
test
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
call
imul
ficom
xor
add
je
add
add
add
sbb
add
add
add
add
add
pushf
mov
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
and
cmp
nop
out
ins
mov
out
test
mov
mov
push
adc
sbb
add
sub
ret
jecxz
jnp
mov
dec
xor
lds
add
add
sar
(bad)
inc
add
dec
add
lock
add
lock
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pusha
xchg
scas
cmc
bound
rcr
mov
cmp
outs
out
jmpw
push
imul
fidivr
push
scas
sub
dec
xor
push
add
lock
(bad)
(bad)
inc
pusha
xchg
sbb
add
cli
fild
add
add
push
aas
add
or
add
add
add
lods
push
add
add
add
aam
add
add
add
(bad)
add
add
add
mov
add
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
vpmacssww
push
sbb
cmp
loop
aaa
fsubp
push
pop
fcomip
xor
popf
dec
adc
test
dec
std
div
clc
stc
xor
aad
cmp
int
jne
hlt
sub
lock
lahf
add
push
add
and
(bad)
(bad)
inc
pop
mov
xor
add
ret
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
fidivr
lods
aas
inc
add
lock
(bad)
rcl
cmp
or
xchg
push
popa
adc
adc
das
jmp
retf
sbb
pushf
pop
fsubr
jecxz
dec
mov
cmp
jb
lea
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
cmp
add
int3
std
add
dec
leave
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
rcr
add
outs
movs
add
cmc
sahf
mov
adc
jge
ficom
stos
inc
neg
mov
fst
jmp
ja
xchg
xor
loop
push
cwde
cmps
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
in
and
sub
or
mov
iret
mov
push
fs
cld
out
(bad)
and
jmp
in
or
(bad)
daa
mov
adc
jle
pop
sub
sbb
dec
clc
test
jecxz
popf
loopne
or
add
dec
sahf
xor
or
xchg
push
ins
test
cwde
gs
and
lock
add
lock
xchg
sbb
das
aaa
inc
cmps
sub
or
outs
shl
ficom
scas
cmp
inc
retf
inc
out
outs
mov
dec
int
fadd
mov
jne
sbb
push
stos
push
adc
nop
jmp
es
cmps
or
test
icebp
aas
push
cmps
mov
icebp
outs
ja
fisttp
xchg
daa
cdq
push
xchg
cmps
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
das
mov
inc
fimul
jmp
jp
jge
or
in
sbb
js
fiadd
fstp
ds
dec
dec
adc
add
add
xlat
cmp
xchg
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
mov
add
lock
dec
add
lock
fcmovnb
push
enter
fidivr
fiadd
cmps
test
and
mov
xchg
bound
add
mov
jle
pop
fcom
shl
cmps
jp
adc
pop
add
xor
xchg
mov
mov
stos
fisubr
or
cmp
jb
je
(bad)
ds
push
into
jecxz
push
scas
dec
and
adc
imul
push
fcmovbe
outs
pop
xchg
into
push
xlat
sub
xlat
hlt
mov
adc
stos
call
mul
jne
mov
out
sbb
inc
jl
xchg
sub
sub
paddsw
outs
test
push
je
xor
in
inc
xchg
aad
aaa
aas
mov
std
jmp
or
sbb
es
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
add
popf
stos
add
icebp
cs
push
jb
inc
sbb
ret
mov
out
mov
jecxz
in
call
jmp
(bad)
dec
sub
jo
cmc
shl
cwde
xor
push
imul
xlat
cdq
add
lock
(bad)
(bad)
(bad)
mov
test
mov
(bad)
(bad)
(bad)
call
mov
mov
lock
dec
xor
adc
lods
hlt
loope
or
pop
or
cmp
push
xchg
out
stos
test
das
pushf
call
and
push
cld
jl
and
or
and
jae
sbb
leave
xchg
test
push
repnz
jae
mov
movs
inc
xchg
ja
loopne
adc
cmps
imul
inc
stos
popa
mov
nop
(bad)
add
cwde
add
add
retf
addr16
add
add
add
add
int3
fild
sbb
sbb
adc
xor
inc
mov
retf
cmp
mov
dec
push
(bad)
out
or
inc
mov
mov
cmp
mov
mov
push
inc
outs
std
and
and
lock
add
lock
pop
std
and
cmp
xchg
out
rcr
mov
pop
sub
push
(bad)
fwait
popa
sbb
mov
inc
push
retf
in
les
inc
and
jne
movs
cli
mov
sub
hlt
in
movs
push
dec
mov
mov
loope
neg
jl
ss
pop
outs
cmp
mov
push
inc
mov
inc
(bad)
pop
mov
ret
add
rcr
cld
in
(bad)
pop
or
nop
push
cmp
and
inc
ins
lds
stos
fwait
mov
adc
lock
dec
and
xor
sbb
cmp
ret
leave
aas
and
into
pop
lahf
adc
movs
inc
es
pushf
cmp
sbb
or
jo
ins
jmp
xlat
stos
ja
mov
xchg
mov
imul
sbb
xor
mov
jae
pop
out
stos
lds
dec
mov
frstor
xchg
fnsave
sub
pop
hlt
pop
loope
jns
loop
int
mov
xchg
in
xchg
icebp
sbb
(bad)
ins
je
shl
xchg
scas
pop
in
lods
push
scas
loop
fsub
push
sbb
jecxz
mov
shr
inc
loopne
xor
mov
jnp
imul
push
scas
imul
idiv
push
add
push
sar
jmp
imul
(bad)
jmp
sar
lock
lock
add
and
xchg
jnp
push
add
lock
add
jnp
add
xor
add
(bad)
(bad)
(bad)
(bad)
in
jbe
adc
mov
(bad)
dec
sahf
arpl
aad
popa
rcr
aad
out
pop
rcr
ret
or
dec
inc
cwde
jmp
sub
leave
lods
mov
jbe
jecxz
leave
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
push
inc
add
lock
scas
add
add
(bad)
(bad)
jmp
push
dec
push
fiadd
dec
inc
mov
lock
(bad)
(bad)
call
mov
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
outs
pop
inc
push
aaa
add
lock
(bad)
(bad)
dec
movs
fimul
or
(bad)
inc
js
lock
add
sahf
rol
lock
add
add
add
inc
add
lock
add
or
(bad)
(bad)
dec
fcom
(bad)
(bad)
inc
add
pop
loope
lock
(bad)
(bad)
inc
add
lock
cmp
xor
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmps
or
movs
sub
inc
dec
add
lock
add
test
loopne
hlt
push
dec
sbb
ror
call
pop
psubq
mov
nop
or
iret
ror
pop
push
dec
repnz
mov
fsub
std
sbb
pop
xchg
(bad)
js
jnp
xchg
inc
mov
ret
mov
xchg
or
add
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovu
adc
push
ret
mov
clc
(bad)
dec
fadd
or
mov
mov
or
test
mov
push
sahf
movs
dec
(bad)
xchg
loop
adc
mov
jmp
xchg
sbb
xchg
adc
jnp
mov
ja
sub
dec
xor
push
push
loopne
imul
dec
shl
add
lock
add
or
add
(bad)
(bad)
(bad)
inc
enter
outs
pop
rcl
(bad)
call
add
cmp
lock
(bad)
(bad)
jmp
(bad)
(bad)
call
inc
lock
rol
sar
(bad)
dec
lds
scas
pop
mov
clc
int3
dec
fimul
jg
push
mov
pop
xchg
ret
repz
mov
xchg
sbb
cmps
mov
das
leave
xor
mov
xor
in
lods
popa
cld
mov
xlat
arpl
mov
mov
add
movs
aad
xchg
test
ds
jo
xlat
mov
pop
jecxz
inc
movs
jle
mov
sbb
cmp
add
jle
ins
aad
ja
sbb
add
sti
pop
mov
mov
shl
xchg
lods
push
and
test
shl
add
lock
(bad)
(bad)
inc
cmc
test
jbe
add
sar
(bad)
call
jmp
retf
push
pusha
mov
out
mov
and
std
dec
xor
aas
push
aas
xchg
xchg
jo
pop
lahf
xor
cmp
fs
mov
mov
data16
xchg
dec
and
push
xlat
mov
xchg
push
inc
pop
push
pop
loope
push
sbb
mov
dec
add
lock
(bad)
(bad)
dec
pop
xchg
pop
gs
lock
(bad)
call
add
push
add
adc
add
jp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jbe
xor
jnp
xchg
push
mov
(bad)
out
(bad)
dec
lods
jg
outs
push
aad
adc
stos
call
dec
(bad)
out
cmp
add
or
pop
aam
enter
jmp
in
aaa
mov
mov
sbb
xchg
cmp
push
shl
dec
sbb
jns
add
loope
or
dec
repnz
inc
xor
sub
jecxz
add
es
js
xchg
jl
pusha
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
mov
lock
lock
xor
ret
lods
loop
das
add
add
sar
(bad)
dec
add
lock
add
lock
add
lock
popf
cmp
(bad)
out
add
dec
je
pop
sar
pop
(bad)
mov
lea
pusha
cwde
into
dec
ret
mov
mov
(bad)
sbb
(bad)
cmp
outs
pop
out
and
repnz
jne
daa
adc
dec
pop
enter
not
mov
fiadd
jno
jmp
and
xchg
movs
dec
sbb
and
cmp
es
lock
pop
add
add
add
jmp
or
add
pop
mov
data16
test
add
mov
hlt
pop
jbe
push
and
push
inc
(bad)
xchg
repz
loope
(bad)
jecxz
mov
inc
add
lock
add
or
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
pop
sar
(bad)
inc
add
jp
push
lock
(bad)
(bad)
call
add
add
add
add
add
pushf
jne
xor
imul
daa
test
ds
jbe
into
int3
mov
jno
mov
or
aaa
pop
inc
fistp
es
popf
outs
mov
jge
jg
scas
mov
imul
rol
bound
cmp
mov
xchg
pop
mov
dec
inc
std
das
mov
xor
int3
dec
mov
pop
lods
ins
dec
shl
js
lock
add
dec
add
lock
add
or
add
(bad)
(bad)
(bad)
dec
pop
loope
sar
(bad)
dec
add
loope
add
(bad)
fistp
shl
xchg
fidiv
ins
mov
dec
ret
lds
adc
jae
popf
adc
push
out
pop
jns
pop
adc
jl
retf
pushf
jnp
xor
lods
int3
xor
iret
sub
inc
add
(bad)
(bad)
(bad)
(bad)
aas
daa
ret
adc
iret
mov
(bad)
(bad)
(bad)
(bad)
sti
rol
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
test
add
add
add
imul
mov
mov
movs
sar
(bad)
inc
mov
add
inc
add
lock
add
add
add
add
add
aad
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
scas
lock
mov
xchg
ss
fdivr
push
dec
adc
scas
out
mov
cmp
das
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
sbb
(bad)
fdiv
mov
dec
ss
lea
int
sbb
lds
cmp
xor
inc
jne
mov
push
call
ret
ds
cmp
mov
and
xchg
sbb
mov
test
xchg
xchg
ins
pop
fistp
push
or
clc
mov
mov
jl
and
fwait
outs
sub
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
lods
movs
xchg
bound
lock
add
(bad)
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
dec
xor
add
(bad)
(bad)
(bad)
push
movs
fimul
add
sar
(bad)
inc
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
add
dec
ret
add
imul
add
add
pop
lds
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
das
add
jne
xchg
imul
mov
das
mov
xor
xchg
xor
mov
jbe
sbb
cs
repnz
ficomp
neg
imul
jno
cmp
sbb
mov
ror
dec
outs
ds
jp
mov
shl
push
push
sub
sbb
sbb
cmp
lahf
xor
retf
ins
push
xchg
inc
fcmovb
mov
push
(bad)
sti
out
add
aad
pop
cs
add
adc
push
add
lock
(bad)
(bad)
call
test
add
sar
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
sub
add
inc
mov
retf
ja
jne
clc
ins
cmp
mov
adc
mov
or
mov
lods
mov
loopne
movs
aas
fsubr
lea
repnz
retf
pusha
cmp
mov
xchg
ins
push
ins
mov
ret
inc
mov
xor
je
cmp
sub
lds
xchg
mov
jne
fisttp
and
jp
test
cmp
jbe
(bad)
scas
lods
cmp
or
add
(bad)
(bad)
(bad)
dec
or
iret
mov
add
add
(bad)
call
jnp
lock
add
lock
xchg
inc
push
test
fs
cdq
inc
xchg
call
add
lods
pushf
and
into
jle
sub
aad
out
jmp
test
add
popf
mov
test
lds
mov
push
add
lock
add
repnz
add
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
retf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jmp
loop
add
lock
sub
lock
add
add
add
or
jle
push
jl
and
add
inc
pushf
push
(bad)
push
pop
adc
sub
xor
or
push
add
test
mov
inc
icebp
or
inc
retf
aam
lods
mov
jnp
pop
adc
xor
adc
jns
xor
int3
xor
rcl
mov
lock
add
add
add
stos
adc
lock
add
mov
and
cwde
xlat
fistp
push
jb
add
es
pop
xchg
jno
sahf
ds
inc
in
lods
call
fadd
or
out
sub
jnp
sub
imul
stos
xlat
cmp
stos
push
mov
mov
jne
je
and
xchg
pop
sub
faddp
jno
(bad)
(bad)
sbb
into
sbb
mov
or
aad
sbb
test
cwde
je
mov
addr16
pop
dec
call
cmp
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
dec
push
fnstcw
lock
add
mov
add
cmp
add
into
rol
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
enter
ins
mov
(bad)
(bad)
(bad)
push
inc
(bad)
or
rol
lock
(bad)
jmp
rol
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
xchg
in
fiadd
lock
add
adc
add
cmp
add
(bad)
(bad)
(bad)
push
dec
addr16
push
add
lock
(bad)
push
(bad)
js
push
loopne
pop
(bad)
push
sbb
mov
fwait
xchg
retf
out
int
cmp
cmps
pop
xchg
sub
cmp
mov
(bad)
test
add
lock
(bad)
(bad)
inc
and
or
rol
lock
(bad)
(bad)
cmp
lock
add
xchg
sub
cmps
cmp
pop
xchg
lods
pusha
pop
stc
mov
dec
xchg
cli
ins
add
lock
add
pop
cmp
sub
(bad)
(bad)
inc
add
lock
add
lock
xchg
lock
add
add
add
xchg
push
xchg
pop
sub
dec
ror
sbb
mov
out
jge
adc
test
xor
cli
repz
(bad)
jge
aad
iret
mov
sar
sbb
xor
push
sub
xor
(bad)
int3
pop
xor
dec
inc
retf
jns
mov
popa
fld
es
fiadd
jge
push
test
mov
aam
imul
fstp
(bad)
jmp
repz
adc
shl
es
mov
out
stc
xchg
xchg
aam
or
test
push
add
mov
lea
jmp
movs
stos
pop
cld
mov
(bad)
(bad)
(bad)
jmp
call
push
in
fiadd
lock
(bad)
(bad)
stc
and
xor
inc
(bad)
mov
je
movs
xor
test
mov
fmul
xchg
fbld
inc
cmps
dec
shl
(bad)
adc
mov
ss
int3
xchg
aad
in
pop
cmc
and
sbb
cmp
dec
out
(bad)
fist
jo
(bad)
(bad)
jecxz
(bad)
icebp
add
mov
add
popa
aaa
daa
dec
test
cmp
jl
rcr
pop
es
mov
popf
inc
cli
jae
mov
retf
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
mov
imul
add
lock
add
popf
fadd
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
popf
hlt
cmp
aas
jbe
(bad)
push
fcomp
out
xchg
jnp
mov
imul
cmp
scas
es
pop
cmp
retf
mov
xchg
arpl
inc
push
pop
jnp
add
lock
(bad)
(bad)
(bad)
out
and
loope
fwait
lock
fiadd
lock
(bad)
(bad)
call
add
push
add
adc
add
cwde
iret
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
pop
das
sub
add
cmp
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
inc
sub
dec
jl
mov
idiv
loop
not
sti
(bad)
stc
call
lahf
mov
inc
xor
xchg
fwait
sub
fdivr
dec
mov
ss
cmp
push
add
js
inc
mov
pop
jge
test
movs
and
pop
mov
push
mov
iret
mov
mov
mov
(bad)
jge
push
mov
xchg
mov
retf
jnp
lahf
shr
aam
jae
jno
js
add
lock
(bad)
push
arpl
lock
add
lock
add
lock
xor
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jae
dec
jle
in
add
lock
add
jb
mov
dec
add
add
sar
(bad)
call
out
add
lock
add
lock
add
lock
add
add
add
lock
pusha
add
leave
loope
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
sahf
dec
cmp
loop
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
outs
pop
inc
cwde
daa
add
pushf
sub
lock
add
adc
add
lock
add
daa
add
lock
(bad)
(bad)
jmp
(bad)
cld
xor
sar
(bad)
dec
mov
push
add
add
sar
(bad)
(bad)
(bad)
lahf
add
lock
add
lock
add
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
ins
outs
fs
(bad)
xchg
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
jecxz
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
rep
dec
sub
add
jno
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jmp
sub
xor
add
mov
add
lock
add
shl
mov
push
jns
lock
add
add
lock
add
ror
(bad)
add
scas
out
daa
je
mov
inc
mov
pop
ja
mov
and
sub
ins
int
and
lahf
pop
jae
mov
rcl
sbb
mov
std
(bad)
dec
test
or
bound
scas
dec
xor
inc
fild
rcr
pop
mov
and
aad
mov
pop
enter
js
push
pop
cwde
and
pop
pop
and
test
popf
adc
(bad)
(bad)
(bad)
inc
icebp
adc
sub
add
lahf
in
lock
sti
and
mov
adc
jno
xlat
mov
inc
dec
in
repz
add
arpl
xor
(bad)
(bad)
(bad)
(bad)
jmp
xchg
or
add
lock
in
add
pop
inc
lock
add
sub
add
add
add
adc
add
lock
addr16
cmps
cmc
add
add
add
add
add
lds
add
arpl
pop
add
movs
xchg
imul
in
mov
jp
test
ja
adc
in
mov
xchg
leave
lods
or
mov
iret
pushf
bts
mov
in
jb
xor
mov
cmp
into
push
rcr
lock
add
ss
add
push
add
lock
and
add
lock
and
sbb
lahf
pop
xchg
and
add
bound
jo
sbb
sbb
sbb
mov
push
icebp
dec
call
sbb
add
test
(bad)
inc
add
add
add
rol
add
add
add
push
add
lock
(bad)
(bad)
call
enter
stos
push
add
(bad)
call
add
lock
(bad)
dec
add
lock
test
lock
mov
sbb
clc
sub
(bad)
into
retf
cmps
mov
es
mov
sub
out
iretw
or
or
adc
scas
repz
dec
(bad)
pop
shl
cmp
cmp
enter
adc
jo
es
out
pop
les
inc
cmps
stos
js
dec
sub
leave
push
inc
bound
in
inc
xor
cmp
dec
sub
rcl
xchg
inc
cmp
push
aam
push
pop
imul
push
add
add
(bad)
cs
popf
cwde
cmps
js
sub
outs
inc
ins
add
test
adc
out
sub
lods
sbb
mov
adc
icebp
dec
add
fwait
out
pop
or
push
add
rcl
dec
mov
fsub
xchg
loopne
and
ss
hlt
(bad)
sbb
sbb
dec
mov
imul
(bad)
or
mov
je
(bad)
mov
push
add
rol
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
daa
scas
fs
in
ja
jne
ds
ror
mov
mov
sub
mov
pop
pushf
fnstenv
push
xor
inc
xlat
xor
push
push
push
cmp
or
or
or
fsubr
xlat
test
inc
add
or
jmp
push
mov
push
stc
and
pop
dec
fdiv
fwait
out
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rcl
out
cld
xor
push
inc
mov
shl
stc
lods
or
mov
sub
jne
and
dec
jno
data16
sbb
les
ja
jl
cmp
add
(bad)
(bad)
(bad)
dec
inc
xor
retf
mov
lock
(bad)
(bad)
js
add
(bad)
(bad)
(bad)
inc
lea
aam
out
add
sar
(bad)
push
add
lock
(bad)
(bad)
call
jne
add
xchg
add
add
sar
(bad)
(bad)
fidiv
loop
cdq
imul
and
add
cmp
pop
arpl
dec
adc
iret
fbstp
xchg
int3
xchg
fisub
pop
lock
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
ret
pusha
add
lock
add
enter
out
stos
adc
(bad)
(bad)
push
mov
lock
lock
daa
add
sbb
add
adc
int3
int3
inc
dec
mov
mov
mov
lods
add
popw
lods
inc
aad
pop
jnp
sbb
in
cmp
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
mov
out
inc
mov
mov
xor
cmp
retf
jno
fadd
fidivr
in
sub
mov
and
imul
and
or
add
add
add
imul
add
aam
jmp
mov
bound
and
jmp
add
pop
mov
repnz
sar
push
sbb
inc
retfw
push
adc
sbb
inc
out
outs
retf
dec
push
push
add
lock
(bad)
(bad)
(bad)
in
inc
mov
fwait
push
repnz
add
(bad)
call
xchg
or
dec
push
mov
mov
mov
mov
mov
mov
pop
pop
sbb
push
push
inc
adc
dec
sbb
jmp
jge
push
dec
rcr
pop
nop
cli
retf
cli
push
and
js
rol
xor
add
mov
ja
fsub
int3
cmps
aaa
pop
fsubr
and
xor
push
add
mov
test
sbb
daa
or
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
sub
or
add
int3
dec
fs
push
(bad)
out
cmps
xor
add
out
xor
push
ins
call
fst
inc
addr16
ficomp
in
je
pushf
sbb
mov
push
retf
mov
and
adc
imul
(bad)
addr16
pop
shr
jge
lods
ins
adc
nop
out
rcr
xchg
test
or
xchg
mov
inc
and
shl
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
aad
lahf
sbb
add
lock
(bad)
(bad)
inc
imul
fpatan
add
sar
(bad)
push
xor
retf
ror
iret
xchg
xchg
and
icebp
pop
pop
je
out
sub
aas
retf
and
outs
cmc
fmul
ss
xor
cmps
ficomp
push
enter
(bad)
ja
adc
pop
pop
hlt
sbb
push
cmp
mov
ja
or
mov
dec
(bad)
jne
mov
ja
xchg
addr16
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
xlat
shl
xor
add
mov
jae
shl
imul
mov
repz
jl
cwde
mov
cmp
dec
mov
scas
sbb
pop
dec
push
adc
sbb
lods
scas
mov
sub
add
(bad)
(bad)
(bad)
push
push
mov
ins
hlt
add
sar
(bad)
call
add
sub
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
frstor
(bad)
adc
sti
cmp
shl
push
adc
cmp
sbb
sar
fidiv
dec
div
int3
int
push
cwde
jp
stos
das
mov
pop
xor
jl
xchg
mov
mov
mov
add
je
xor
sbb
adc
sub
ja
fdecstp
jae
adc
ss
ja
iret
dec
imul
jne
inc
push
or
jae
add
mov
sub
add
(bad)
(bad)
(bad)
dec
jb
pop
push
test
sar
(bad)
call
mov
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cwde
add
add
nop
inc
lock
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
mov
push
sub
adc
mov
popf
jecxz
fcom
mov
cld
out
mov
pop
mov
adc
push
inc
xlat
lahf
stc
add
add
add
push
add
and
cmps
sbb
in
mov
into
cmps
loop
cld
rcl
sbb
inc
dec
or
cmp
nop
push
inc
adc
loop
and
pop
xchg
push
sbb
mov
cs
cs
push
sub
stos
jecxz
ins
sub
ins
nop
aaa
jl
in
mov
fwait
je
xchg
and
ficomp
inc
je
xchg
scas
cmp
test
inc
xor
and
sbb
inc
movs
rol
cmp
(bad)
aaa
inc
add
lock
add
mov
push
retf
sbb
sar
(bad)
jmp
add
lock
add
lock
stc
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
arpl
mov
add
lock
pop
add
fbld
lea
neg
movs
jae
or
push
mov
pop
dec
test
in
xchg
iret
mov
addr16
xchg
push
add
mov
(bad)
jnp
inc
ins
adc
mov
inc
mov
push
cmps
ror
(bad)
xchg
mov
dec
not
xchg
or
retf
or
rol
fimul
add
lock
cdq
add
iret
stc
add
popa
add
lock
(bad)
(bad)
jmp
test
lock
(bad)
inc
add
lock
add
lock
add
lock
out
add
sbb
(bad)
(bad)
jmp
mov
and
add
(bad)
call
sti
add
xchg
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
mov
hlt
add
sub
add
ins
cld
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
add
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
adc
add
add
add
push
fwait
add
add
add
add
add
push
add
lock
add
mov
or
inc
push
rcr
aas
jbe
fisubr
xor
rcl
xchg
imul
cmc
je
and
add
(bad)
(bad)
(bad)
jmp
mov
add
sar
(bad)
(bad)
(bad)
mov
dec
popa
mov
mov
outs
push
pop
xor
dec
shl
cmps
mov
aas
in
les
push
dec
adc
(bad)
mov
(bad)
fsub
int3
dec
popa
shl
xchg
inc
test
loop
dec
fldcw
ss
pop
rcl
inc
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
cs
cmc
mov
add
add
add
push
add
lock
(bad)
(bad)
jmp
cmp
(bad)
(bad)
jmp
lock
call
(bad)
call
sbb
adc
mov
add
xchg
mov
cwde
repnz
repz
mov
(bad)
jmp
(bad)
push
push
shr
adc
ins
xchg
and
adc
scas
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
xchg
cmp
inc
lock
add
add
adc
add
aad
outs
xor
inc
in
mov
dec
jmp
sbb
dec
pop
mov
enter
cli
lahf
dec
les
mov
sbb
or
add
enter
xchg
addr16
scas
leave
cs
and
pop
and
je
es
repz
sbb
scas
mov
repnz
sbb
pop
outs
jno
cmc
sub
out
mov
sti
sbb
icebp
cmp
push
jae
jno
(bad)
test
daa
and
repnz
scas
gs
add
pop
sub
bound
ins
aad
outs
fisttp
popw
cmp
test
xlat
and
cmp
dec
pushf
(bad)
(bad)
(bad)
mov
dec
push
adc
aam
dec
cmp
xchg
fld
sbb
ja
pop
inc
push
dec
fidiv
int3
pop
fnstsw
fsub
add
(bad)
(bad)
(bad)
(bad)
cmp
into
sub
add
sar
(bad)
push
add
lock
(bad)
(bad)
call
add
xor
lock
(bad)
call
fdiv
cld
popa
xchg
cmp
jecxz
push
mov
sbb
imul
call
jl
stc
cmp
mov
xor
(bad)
sbb
fidivr
retf
push
in
inc
gs
nop
and
dec
add
lahf
push
lock
cdq
and
mov
inc
loope
stos
xchg
repnz
lods
je
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmps
jbe
pushf
jnp
sti
cmp
add
lock
and
lock
add
shr
add
add
add
add
add
jle
sbb
mov
stos
mov
loope
aaa
and
or
popf
sbb
mov
push
pop
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
or
cld
add
add
add
mov
pushf
(bad)
pop
adc
mov
stc
mov
adc
mov
mov
dec
adc
xchg
(bad)
into
mov
mov
hlt
lods
and
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
pop
add
lock
pop
add
repnz
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
push
jg
dec
ret
adc
add
sar
(bad)
inc
(bad)
sbb
cmps
lock
pop
mov
push
(bad)
div
sub
or
mov
mov
and
aaa
sub
icebp
and
xchg
push
das
cdq
and
sub
sub
pop
sub
jo
stc
xlat
jle
jp
push
shr
xor
shl
sar
mov
jns
cli
add
clc
out
add
(bad)
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
jg
loop
loop
add
lock
or
lock
or
imul
jns
fdivr
int
nop
sub
sbb
cmc
out
pop
jb
lahf
ret
mov
lods
cmc
nop
dec
in
sub
or
(bad)
in
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
xor
cli
or
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
call
jbe
ret
jno
imul
cmps
and
fstp
call
fadd
and
repz
out
push
inc
js
movs
sahf
addr16
inc
pop
mov
cmp
cdq
(bad)
cmc
bound
mov
mov
cs
movs
cmp
aad
cli
(bad)
pop
sbb
add
lock
(bad)
(bad)
dec
cmps
stos
nop
in
or
lock
(bad)
inc
xchg
ins
retf
pop
loope
xchg
rol
xor
test
daa
dec
or
neg
jp
in
mov
lahf
test
adc
lea
out
pop
mov
into
pop
outs
push
imul
std
dec
retf
mov
xchg
mov
mov
std
rcl
popf
mov
push
cmps
cmp
es
cs
(bad)
sub
push
cmc
aad
and
stos
push
rcl
xchg
sbb
inc
add
loope
pop
jge
movs
and
out
mov
test
out
add
add
add
fdiv
pusha
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
mov
add
add
xchg
repnz
cmps
push
scas
retf
rol
icebp
shl
nop
ret
sbb
dec
test
or
addr16
bound
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
scas
cmp
cmp
adc
lock
lock
add
add
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
outs
pop
inc
push
xor
sub
add
cwde
or
(bad)
(bad)
(bad)
(bad)
(bad)
call
jnp
in
movs
adc
ror
mov
push
push
leave
sbb
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
hlt
jmp
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
push
icebp
add
ret
pushf
dec
add
lock
push
add
imul
(bad)
call
pop
push
and
lock
(bad)
jmp
add
(bad)
(bad)
(bad)
jmp
shl
popa
lar
sar
(bad)
(bad)
cmp
add
add
add
or
add
(bad)
(bad)
(bad)
dec
and
cmps
sti
(bad)
sar
(bad)
(bad)
cmp
add
pop
test
loop
lds
dec
je
push
pop
test
jb
jne
sbb
jle
ret
pop
xchg
and
pop
mov
or
std
fwait
mov
lods
out
mov
jle
stos
jno
mov
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
ins
ret
mov
cmp
mov
xchg
add
add
sar
(bad)
inc
add
inc
add
lock
add
lock
add
add
add
add
cwde
pusha
mov
(bad)
inc
test
add
push
add
lock
ret
cld
mov
add
lock
add
or
(bad)
(bad)
(bad)
jnp
push
in
out
gs
sar
(bad)
inc
add
scas
out
add
(bad)
cmp
mov
sbb
int
sub
lea
pusha
mov
mov
repnz
inc
add
rcl
movs
inc
int
fisub
add
lock
(bad)
(bad)
inc
shr
cmp
fwait
xchg
out
add
add
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
(bad)
loop
sbb
lock
add
pop
stc
push
xor
dec
dec
lock
aaa
push
dec
movs
mov
sub
sbb
jmp
mov
cmp
dec
xlat
and
adc
dec
rcl
stos
out
in
fisttp
jns
cmp
sbb
and
cmp
cmp
lea
cmp
lock
add
cmp
add
ret
xchg
arpl
xchg
iret
cs
loop
mov
call
bound
push
aad
aam
in
test
mov
xchg
ficom
loope
fcom
imul
call
popf
pop
sahf
ja
scas
daa
into
mov
sbb
or
loopne
popf
jb
icebp
in
sbb
push
pop
pop
jno
jbe
test
sbb
xor
mov
sbb
fwait
add
pop
mov
lock
add
cmp
(bad)
(bad)
(bad)
in
js
push
add
ret
and
adc
(bad)
push
(bad)
(bad)
call
(bad)
imul
mov
add
sar
(bad)
call
(bad)
mov
cmp
jecxz
imul
xor
test
sub
sbb
repz
cmps
xor
xchg
popf
sbb
retf
dec
sti
pop
scas
mov
cmp
test
imul
inc
inc
jbe
es
mov
push
pop
rcr
mov
pop
lds
fwait
scas
xchg
and
outs
in
mov
lods
dec
dec
cmp
das
xchg
and
ins
in
les
js
sub
mov
scas
jno
adc
mov
std
test
xchg
loope
mov
test
mov
ret
mov
pop
mov
mov
sbb
add
add
jecxz
mov
inc
xchg
outs
mov
inc
pop
jge
lds
push
dec
lods
lods
inc
add
push
int
push
xchg
lock
pop
dec
(bad)
mov
xlat
mov
add
lock
adc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
or
cmp
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lds
and
add
repz
lock
add
test
sub
add
add
add
add
add
daa
loope
adc
add
lock
mov
in
(bad)
(bad)
aam
stos
mov
cmps
ds
mov
popf
mov
sti
sub
retf
xchg
in
or
ja
mov
aaa
(bad)
test
aas
inc
mov
call
mov
xlat
fisub
push
rcr
cdq
xchg
dec
mov
stc
ret
leave
in
out
arpl
cmp
(bad)
neg
call
mov
push
adc
retf
in
mov
sahf
inc
push
cmp
not
iret
inc
pop
push
push
icebp
inc
pminub
ins
mov
inc
mov
loopne
jne
pop
xchg
in
popa
xchg
gs
sbb
lock
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
fwait
sub
idiv
sub
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
mov
pop
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
sbb
(bad)
(bad)
inc
dec
out
sbb
ror
(bad)
(bad)
(bad)
out
test
ins
inc
push
jno
xchg
xor
jge
adc
stc
out
test
sbb
popf
add
fdiv
icebp
pop
std
loopne
lock
inc
cmp
pop
ja
lea
out
push
cmc
inc
aam
or
mov
cmp
inc
dec
iret
pop
test
mov
or
xchg
inc
ins
hlt
out
mov
ret
and
or
jge
xchg
js
rcl
rcr
fidiv
push
mov
adc
sub
cmp
cmp
and
inc
daa
stc
sbb
repnz
adc
push
out
pmullw
xchg
adc
test
sub
sbb
cld
pop
daa
xor
les
repz
ret
out
sub
mov
xchg
adc
push
outs
idiv
jge
pcmpeqb
or
mov
mov
rcl
and
ss
sbb
loop
shl
les
pop
xchg
jecxz
sub
popa
test
push
movs
js
dec
xchg
add
(bad)
sbb
xor
pop
ret
xchg
xchg
sub
fist
adc
and
fs
mov
aam
cmp
test
xor
sub
adc
mov
enter
mov
inc
mov
add
jmp
bound
xchg
and
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
mov
retf
test
ret
jne
clc
jecxz
fs
xor
out
cmp
iret
scas
ret
icebp
dec
inc
xchg
call
call
pop
stc
xchg
jle
cmp
scas
jbe
push
push
lea
aad
push
jno
test
daa
jg
lds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
push
xchg
dec
push
add
lock
and
neg
test
dec
fs
in
xchg
mov
mov
aas
mov
cmps
add
les
adc
fs
mov
(bad)
(bad)
(bad)
(bad)
inc
icebp
adc
xor
add
das
es
pop
stc
add
pop
stc
add
adc
add
add
add
lods
xchg
add
add
inc
add
lock
add
or
call
(bad)
(bad)
(bad)
cmp
add
inc
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
mov
pop
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
cmp
and
xor
ret
lock
mov
popa
ja
cli
add
(bad)
out
popf
and
cld
call
push
cmps
xchg
fidiv
mov
ss
and
cmp
cmc
ja
icebp
or
js
psrlw
fdivr
int
push
cmp
mov
jp
push
dec
sub
test
cmp
aaa
dec
inc
xlat
cmp
fstp
push
repz
jns
xor
jns
addr16
add
lock
add
or
add
(bad)
(bad)
(bad)
dec
cmps
fimul
sar
(bad)
(bad)
add
lock
in
lock
(bad)
(bad)
dec
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sub
cld
sub
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
iret
les
icebp
outs
loope
cmp
mov
retf
sub
leave
dec
in
mov
std
jle
adc
jno
std
mov
std
movs
jecxz
xlat
dec
cmp
dec
pop
lds
neg
mov
lds
inc
(bad)
and
jno
jno
push
aad
mov
mov
aas
dec
xchg
jge
mov
sbb
jb
cmps
push
pop
add
cli
add
add
adc
int
fsubr
jne
mov
fs
add
lds
pop
imul
mov
sbb
jne
lock
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
dec
mov
cld
mov
add
(bad)
(bad)
(bad)
(bad)
(bad)
dec
pop
xchg
mov
(bad)
and
add
clc
jne
lock
inc
jecxz
ret
mov
jmp
shl
adc
add
(bad)
outs
add
add
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jno
retf
dec
xor
cs
inc
in
add
add
add
add
add
mov
jne
scas
rcr
in
(bad)
xlat
pop
mov
cmc
cmp
xor
test
inc
out
inc
out
loop
push
test
push
(bad)
aaa
in
ds
repnz
rcl
sub
loop
pushf
jmp
retf
jbe
enter
das
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
fadd
dec
sub
lock
jno
dec
jp
clc
pop
mov
movs
je
loopne
std
retf
jecxz
mov
hlt
push
rcr
fimul
loopne
xchg
mov
adc
sbb
add
mov
scas
inc
jns
jne
sbb
sub
fwait
sub
add
(bad)
(bad)
(bad)
call
xchg
sub
and
sub
(bad)
push
jecxz
je
(bad)
retf
dec
jg
cmc
inc
ror
stc
call
xchg
and
push
movs
jb
pop
mov
sbb
std
frstor
ss
call
outs
lds
mov
retf
adc
mov
xchg
xchg
int3
or
arpl
sbb
push
mov
mov
scas
add
add
sar
add
add
add
adc
add
cmp
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
xchg
or
add
adc
loop
arpl
push
push
and
call
in
dec
mov
fcom
shl
test
fmul
jmp
cwde
es
call
cmp
leave
dec
jne
and
xor
or
xchg
int
pop
cs
repnz
call
add
aam
sbb
cmps
mov
lea
add
pusha
test
imul
cmps
shl
pop
push
lods
dec
push
push
mov
inc
(bad)
mov
ss
mov
stos
mov
and
jp
retf
jmp
stos
xchg
fisttp
jmp
aaa
mov
ret
and
mov
xchg
xchg
add
and
je
cmp
div
lock
push
sbb
cmps
fwait
jne
mov
mov
or
mov
es
push
adc
add
enter
pop
cmps
icebp
(bad)
cmp
jns
adc
push
xor
and
dec
cmp
arpl
jbe
icebp
mov
and
mov
shr
inc
jno
mov
pop
or
sahf
and
xor
xor
div
int
push
sbb
jecxz
pushw
icebp
inc
mov
test
xor
int3
sti
daa
test
xor
mov
pushf
jp
cmp
mov
mov
mov
aas
or
push
jl
and
lock
ja
sbb
cld
aas
pop
movs
xchg
mov
xchg
adc
sbb
fwait
push
cmp
xor
loopne
ror
out
push
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
lea
clc
fwait
mov
add
lock
add
push
add
and
sti
add
cmps
es
scas
inc
adc
repz
jmp
mov
mov
and
retf
aam
ins
push
or
or
or
mov
popf
test
xor
fistp
ror
mov
sbb
add
jle
jge
cmp
arpl
xchg
data16
dec
xchg
pop
inc
fucomp
popa
stc
aad
sbb
icebp
aad
sub
out
loope
dec
mov
in
scas
retf
std
jge
mov
gs
adc
xor
neg
xor
inc
add
rcr
imul
lock
mov
push
icebp
inc
fcom
(bad)
(bad)
dec
push
push
lock
add
dec
add
lock
add
push
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
call
pop
fist
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
imul
add
stos
sbb
mov
cmp
sbb
ret
mov
xchg
xchg
jge
arpl
and
call
ins
xabort
imul
lahf
xor
and
inc
lock
pop
cdq
je
cmp
fstp
xor
cdq
mov
cmp
add
pushf
in
test
dec
adc
mov
adc
cmc
test
ins
mov
push
push
(bad)
mov
daa
jp
neg
outs
cld
fdiv
pop
outs
jne
jns
lds
call
sbb
cmc
mov
push
dec
stos
jno
dec
dec
fdiv
cmp
push
and
cmps
jmp
inc
push
pop
sub
jb
in
inc
lock
add
mov
lock
add
sahf
and
lock
add
jo
add
add
add
pop
scas
(bad)
addr16
inc
imul
(bad)
(bad)
jmp
js
lock
add
lock
add
cmp
add
lock
pop
das
popf
retf
pop
sar
(bad)
dec
add
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
std
adc
cli
add
lock
jb
fild
xor
add
lock
(bad)
push
ins
push
lock
add
and
add
and
add
push
add
inc
in
add
add
add
add
stos
outs
aas
fs
xchg
sub
sub
out
mov
cmps
call
jmp
mov
fistp
push
add
cmp
out
daa
scas
fcomp
ins
xchg
mov
adc
rcr
xor
push
push
or
rcr
jmp
cld
jmp
xlat
cld
scas
sbb
xor
repz
dec
adc
pop
call
repz
in
pushf
in
mov
inc
mov
scas
cmp
xor
pop
xchg
mov
mov
mov
sub
in
les
in
sub
push
jmp
mov
sbb
ds
(bad)
add
ss
fwait
mov
pusha
shr
rol
fwait
jge
dec
in
pop
push
(bad)
jle
inc
or
jno
iret
(bad)
icebp
sbb
xchg
mov
push
mov
cmp
int
add
(bad)
fnstenv
mov
cdq
cli
dec
adc
in
xor
inc
xchg
sub
mov
push
test
pop
push
lahf
rcl
sbb
in
mov
fwait
cld
jle
cmps
das
xor
mov
cmp
int
adc
in
neg
mov
mov
data16
cwde
aas
push
ror
push
push
fsubr
mov
out
ds
xor
es
stos
or
dec
mov
scas
into
ret
test
je
cwde
int
gs
out
(bad)
fiadd
inc
push
out
mov
addr16
call
cwde
sbb
(bad)
out
lahf
in
dec
push
and
aad
inc
mov
scas
lahf
jb
aaa
cs
mov
push
inc
pop
rcr
fs
nop
lahf
inc
dec
mov
jmp
push
data16
adc
adc
ds
popf
shl
jnp
es
fld
in
dec
dec
mov
and
push
push
out
outs
add
mov
xchg
mov
fsub
lods
test
pop
enter
xor
fcomp
dec
scas
(bad)
shl
loope
sub
arpl
pusha
jge
push
call
loop
mov
aad
shl
jne
jmp
popa
pop
in
jmp
test
cli
rcr
fwait
fwait
sbb
mov
dec
fidiv
dec
jnp
imul
xchg
mov
call
fwait
loope
or
push
pop
add
jle
mov
jno
dec
ins
imul
jecxz
mov
lock
dec
push
loope
inc
adc
pop
or
push
cmc
and
cld
or
xchg
xor
fnstsw
inc
sub
or
dec
add
mov
sub
mov
in
aam
pop
loope
cmp
(bad)
inc
push
cmp
pop
mov
repnz
rcr
dec
xchg
ja
sbb
dec
shl
(bad)
inc
ret
adc
add
ja
loope
jne
and
lsl
sbb
jnp
add
outs
lds
or
js
adc
jmp
pop
pop
gs
push
xor
aam
jecxz
ss
aaa
jle
cmps
mov
jnp
push
mov
aam
and
in
(bad)
mov
add
push
neg
jg
loope
aam
mov
enter
(bad)
data16
add
sar
(bad)
inc
ret
add
lock
add
lock
add
lock
dec
add
add
add
add
add
jp
aas
mov
sbb
add
adc
sbb
pop
shl
sub
in
jbe
add
push
adc
adc
mov
test
dec
sbb
icebp
jnp
cmp
inc
or
sbb
cmp
arpl
jp
lods
push
ficomp
in
or
or
repnz
fnstcw
dec
aas
(bad)
cmp
or
dec
push
fwait
test
push
pop
fidivr
sbb
mov
imul
add
jg
xchg
repz
into
mov
pop
sub
dec
add
add
add
mov
add
(bad)
(bad)
(bad)
inc
not
lock
(bad)
push
add
lock
add
xchg
inc
add
lock
imul
clc
imul
or
add
mov
mov
xor
icebp
repnz
jmp
mov
in
pop
mov
(bad)
fsub
mov
fiadd
and
adc
outs
or
push
test
stos
cmp
loop
lods
test
adc
(bad)
adc
in
mov
cld
mov
add
dec
pusha
fs
xchg
js
inc
sub
enter
xor
dec
mov
adc
mov
and
xchg
inc
js
in
lock
das
dec
adc
add
sbb
icebp
sub
in
push
ror
adc
and
dec
gs
stc
ins
mov
dec
scas
es
aas
(bad)
rcl
in
adc
lds
cmp
jmp
(bad)
enter
loopne
lock
add
add
add
xor
mov
out
pop
fcmovb
or
(bad)
add
rcr
nop
add
add
cmp
hlt
scas
push
icebp
fstp
push
xor
sub
adc
sbb
scas
adc
add
lock
add
mov
mov
lock
add
imul
lock
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
add
bound
add
add
add
outs
dec
sbb
xchg
je
(bad)
(bad)
jmp
add
lock
add
mov
rol
xor
stos
xor
jge
mov
into
ss
out
and
pop
xchg
std
mov
jmp
add
and
ret
add
push
add
lock
add
lock
(bad)
(bad)
dec
add
pushf
lock
cmp
lock
(bad)
push
stos
retf
jmp
mov
cmc
retf
shl
in
add
sub
(bad)
xor
cmp
add
add
xor
div
jns
rol
js
inc
imul
sbb
movs
inc
cs
out
(bad)
mov
fld
jne
push
jbe
or
cld
pop
sbb
xchg
push
ret
sti
pusha
push
call
lock
pop
jbe
call
and
cmps
sub
movs
jmp
pop
leave
fist
and
jb
jle
add
add
mov
add
add
shl
lock
add
and
add
lock
add
scas
adc
call
aam
cmp
pop
into
pop
fstp
into
scas
and
xchg
xchg
cmp
inc
pop
mul
test
cs
jl
mov
jmp
xor
mov
rcl
lds
or
in
lods
sub
cs
adc
sbb
pop
add
pop
das
and
imul
div
call
xlat
idiv
mov
xor
xlat
pop
js
(bad)
pop
push
mov
sub
fsub
or
add
or
push
jl
inc
jae
jo
test
dec
add
lock
(bad)
(bad)
(bad)
in
push
jo
jp
mov
lock
(bad)
(bad)
cld
xchg
das
jo
shr
mov
and
cmps
(bad)
fsubr
and
pop
adc
bound
int
cmps
lea
jge
scas
fnstsw
adc
pop
stc
add
not
pop
mov
ficom
in
and
jp
sub
es
add
lahf
movs
add
add
add
mov
xchg
adc
sub
cmp
enter
addr16
daa
cld
mov
mov
ins
and
movs
je
test
jp
(bad)
je
fldcw
mov
bound
mov
mov
add
mov
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
in
aas
add
cmp
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
retf
cld
inc
add
and
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
sbb
mov
lock
pop
jne
or
and
cmps
lahf
mov
test
pop
sar
mov
sbb
dec
or
(bad)
mov
dec
popf
or
sbb
adc
je
lea
push
(bad)
lods
cmps
scas
int3
jae
test
lahf
fadd
movs
push
xor
daa
in
loop
in
in
sub
add
add
add
xchg
imul
and
add
in
add
add
add
mov
mov
add
or
add
cmps
cmp
cmps
cmp
mov
dec
jp
sbb
inc
xor
mov
cmp
aam
ror
push
xchg
jo
jb
shr
dec
mov
and
xchg
sub
call
enter
fwait
mov
jo
and
inc
mov
ret
jae
add
cmp
(bad)
pop
aam
ds
dec
pop
pop
(bad)
(bad)
sub
push
mov
(bad)
mov
test
adc
cmps
paddusw
and
(bad)
arpl
dec
push
shr
pop
out
les
push
mov
push
add
lock
add
mov
add
test
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xor
lock
add
test
lock
lock
add
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
arpl
(bad)
xchg
mov
xchg
xchg
dec
lahf
adc
icebp
pop
xchg
outs
cmp
or
add
sbb
out
mov
mov
cld
mov
ins
popf
lea
scas
repnz
aas
dec
sub
add
(bad)
mov
add
add
add
sti
hlt
mov
not
(bad)
(bad)
push
rol
inc
add
lock
mov
cmps
dec
sets
add
push
les
xor
(bad)
in
inc
inc
cli
cdq
ss
mov
gs
jl
cmps
cld
lods
mov
addr16
push
push
xchg
shl
cmp
mov
out
gs
cli
cli
cdq
lock
pop
xchg
mov
cmc
xchg
jno
clc
xor
loop
push
int
cli
pop
add
lock
(bad)
(bad)
(bad)
mov
dec
lock
(bad)
call
add
lock
inc
fs
(bad)
outs
out
pop
or
int
push
push
push
sbb
call
jp
xchg
repz
xor
mov
jmp
shl
and
test
test
dec
push
call
shl
push
or
cmp
jmp
out
inc
ror
and
sub
lea
in
sbb
(bad)
aas
shr
add
sub
add
(bad)
(bad)
(bad)
dec
xchg
jae
pop
inc
add
sar
(bad)
dec
cld
push
test
push
ins
sub
push
inc
in
hlt
aam
pop
push
call
sbb
cmp
cmp
add
inc
jg
stos
dec
ror
int
int3
fcomp
dec
sbb
cmp
xor
add
dec
pop
xchg
xchg
cmp
add
mov
inc
and
cdq
mov
lods
push
(bad)
pop
pop
sti
add
cmc
pop
retf
loop
add
sbb
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
loop
scas
mov
adc
(bad)
(bad)
call
repz
push
push
add
add
(bad)
push
ret
add
add
dec
cmp
xchg
xor
jnp
pop
fild
mov
data16
ds
inc
pop
das
jle
jg
ss
ins
cmp
test
sti
inc
call
mov
rcr
shl
lahf
inc
and
(bad)
repnz
shl
ret
sub
and
adc
aad
sub
pop
or
inc
(bad)
cmp
lods
inc
mov
test
adc
outs
dec
dec
mov
mov
repz
jnp
add
jno
aad
cmp
mov
mov
test
sbb
ins
cmp
add
(bad)
(bad)
(bad)
call
pop
je
dec
add
(bad)
(bad)
(bad)
call
cdq
add
sub
add
inc
add
lock
add
or
(bad)
(bad)
jmp
jmp
adc
(bad)
(bad)
inc
add
lods
enter
(bad)
(bad)
(bad)
mov
add
lock
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
daa
stc
adc
xchg
sbb
mov
lea
and
push
scas
sbb
xlat
(bad)
push
jo
mov
jle
push
(bad)
jp
mov
jnp
jecxz
xchg
aas
push
mov
mov
add
inc
xchg
cmp
lock
add
inc
dec
add
das
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
or
cmp
mov
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
call
test
std
xor
pop
add
lock
add
mov
retf
mov
(bad)
call
test
lock
add
lock
add
lock
and
add
xor
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
dec
out
fwait
sbb
cmp
addr16
fimul
in
loopne
cdq
mov
cmp
int3
mov
int3
loop
out
fdiv
mov
add
add
rcr
loop
stc
xor
not
jg
dec
adc
fbstp
aas
popa
sub
jl
add
mov
lock
imul
cwde
adc
ds
(bad)
iret
cmc
dec
dec
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
dec
push
int
push
xor
add
pop
test
stos
xor
scas
pushf
mov
jge
out
push
pusha
xchg
lahf
sbb
or
dec
mov
xchg
jae
scas
mov
sub
addr16
mov
cmc
add
add
add
in
mov
add
push
xchg
lock
add
or
add
inc
mov
lock
lock
add
and
aas
sahf
xchg
into
or
dec
push
xor
mov
mov
out
in
pop
jnp
out
push
js
sub
das
pop
mov
fucomip
jmp
mov
lock
in
cmp
inc
jae
and
xchg
enter
push
sbb
mov
(bad)
arpl
cli
fmul
lods
sbb
push
mov
lock
add
pop
cmp
cmc
rcl
push
sahf
dec
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
jo
call
in
dec
add
sbb
add
add
add
add
add
(bad)
(bad)
(bad)
call
mov
call
add
lock
push
lock
(bad)
(bad)
push
fs
iret
mov
adc
popa
jle
sub
retf
mov
daa
and
das
adc
mov
ret
xor
in
(bad)
fistp
mov
scas
fs
fnstsw
pop
(bad)
mov
cmc
std
sbb
xor
push
es
mov
push
adc
nop
cs
cmps
or
test
push
adc
inc
push
mov
jns
and
sbb
sbb
dec
adc
aas
sub
pop
add
loop
xchg
mov
dec
inc
iret
adc
stos
or
(bad)
ret
mov
stos
sahf
mov
hlt
jno
sahf
inc
pusha
mov
mov
adc
pop
mov
cmp
mov
add
mov
dec
dec
xor
out
mov
fwait
in
lock
add
add
add
and
cmps
add
shr
hlt
push
xor
sub
push
push
sbb
xor
mov
cdq
pop
aad
or
ja
out
mov
add
inc
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
push
lds
fwait
not
cmps
jmp
or
pop
cli
and
ss
leave
pusha
pop
jle
scas
jne
cmc
fcom
adc
repnz
cdq
movs
push
dec
aad
add
add
add
xchg
xchg
jae
das
(bad)
rol
lahf
cs
sbb
adc
ss
push
js
mov
sub
mov
fst
dec
daa
dec
cmp
test
mov
or
add
push
add
lock
adc
lock
add
lock
in
cdq
jmp
mov
outs
inc
fwait
push
dec
leave
xchg
jecxz
xor
add
xor
lock
add
dec
add
lock
(bad)
(bad)
(bad)
fcomi
dec
outs
adc
push
add
sar
(bad)
call
out
mov
pop
mov
arpl
and
mov
cmps
pop
ss
pushf
xchg
mov
jnp
in
ins
cmps
sub
add
or
add
cmp
add
(bad)
(bad)
(bad)
dec
shl
scas
fs
push
add
sar
(bad)
inc
add
lock
daa
add
lock
push
aad
mov
scas
mov
mov
pop
(bad)
pop
inc
(bad)
aas
cs
xor
rcl
mov
retf
ss
adc
add
sar
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
movs
shr
add
lock
push
add
push
and
mov
loope
push
je
mov
mov
aad
movs
ja
push
clc
sub
mov
leave
popw
jbe
lds
xchg
(bad)
cs
push
pushf
call
sub
mov
aad
push
mov
push
out
adc
rcr
fiadd
sub
repnz
add
icebp
stos
inc
cdq
stc
ds
(bad)
repz
fdivr
ret
ret
cli
gs
rcr
ins
xchg
cmp
jo
in
movs
push
jmp
fs
sahf
jae
stos
je
push
mov
push
mov
call
mov
mov
call
mov
call
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
mov
call
mov
call
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
call
mov
call
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
mov
call
mov
mov
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
shr
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
xor
mov
mov
ret
int3
int3
int3
int3
int3
mov
shr
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
ret
int3
int3
int3
int3
int3
mov
shr
mov
mov
xor
xor
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
mov
jbe
push
ret
cmp
pop
lahf
add
in
cdq
test
stos
mov
ins
mov
int
sub
cdq
add
and
xchg
mov
adc
aad
(bad)
dec
int3
int3
int3
int3
out
mov
mov
mov
adc
adc
mov
xlat
sub
repnz
(bad)
mov
mov
lahf
adc
inc
or
test
push
stc
int3
int3
int3
int3
int3
jl
fndisi(8087
and
or
jae
dec
sti
xor
mov
sbb
or
retf
dec
push
mov
aaa
fisttp
pop
sub
ror
dec
es
vpsubw
int3
int3
int3
int3
int3
push
call
push
cmp
cwde
push
xchg
or
mov
mov
xchg
mov
in
dec
push
lods
std
aaa
dec
dec
push
xor
lock
enter
add
mov
inc
jb
int3
int3
int3
int3
fcmovnu
ins
ret
mov
lds
adc
arpl
ret
mov
pop
push
and
call
fsub
mov
aaa
or
push
adc
mov
int3
int3
int3
int3
or
pop
das
pop
inc
push
cmp
and
cwde
inc
mov
popf
lock
fsubr
(bad)
cmp
je
lock
in
cmp
pop
push
jae
pusha
or
sbb
hlt
add
jno
pop
xchg
int3
int3
int3
int3
int3
cmp
adc
and
mov
fcomp
int
aas
stc
lea
imul
imul
xchg
jmp
and
xor
repz
jae
test
jp
daa
pop
dec
push
out
loopne
xchg
pop
aad
int
in
and
jge
test
fucomp
rcl
sbb
inc
cli
sub
clc
int3
int3
int3
int3
int3
das
test
scas
and
retf
mov
mov
dec
mov
nop
mov
or
sbb
xor
xchg
ror
aaa
xchg
loop
or
lahf
and
or
or
xchg
cld
pop
test
arpl
xchg
std
ins
shl
inc
cld
(bad)
(bad)
iret
jp
jmp
int3
int3
int3
int3
int3
push
outs
stos
pop
or
jno
sbb
jb
int3
ds
push
aad
dec
xchg
add
scas
push
jmp
mov
loopne
mov
sub
bound
pop
and
xor
inc
xor
push
adc
pushf
and
add
into
mov
cwde
mov
popf
scas
pop
jge
pop
popf
int
adc
enter
int3
int3
sti
push
pop
cmp
add
gs
mov
iret
adc
jmp
int3
out
test
and
dec
mov
loope
out
pop
dec
movs
in
cld
xor
sub
fisub
js
pop
int3
int3
int3
int3
int3
xor
pop
sub
mov
inc
xchg
or
jne
and
and
mov
mov
cmps
sub
inc
sub
sub
or
adc
ins
(bad)
imul
sub
jae
add
out
inc
ret
stos
xlat
mov
inc
inc
and
test
repz
mov
jl
push
dec
add
in
sub
jecxz
cmps
movs
jo
cs
pushf
pop
jne
sbb
int
push
fild
imul
jns
mov
inc
int3
int3
int3
int3
int3
popa
adc
jnp
ins
or
push
cwde
jb
jmp
mov
push
and
movs
push
movs
cmp
bound
jg
sbb
loopne
jb
test
xor
int3
int3
int3
int3
repz
outs
gs
jmp
xor
or
sbb
or
fnstenv
loop
xchg
test
lock
es
dec
or
test
mov
dec
mov
enter
in
pop
sub
int3
int3
int3
int3
jmp
cmc
jg
lods
cwde
pop
sti
mov
jne
test
mov
mov
popa
ins
sbb
rcr
cmp
cli
aas
ror
mov
xor
push
arpl
mov
int
dec
outs
icebp
out
popa
xchg
fst
(bad)
cmps
or
mov
xchg
retf
std
pop
or
lock
jbe
aas
sar
jbe
out
xchg
int3
int3
int3
int3
int3
sbb
ja
inc
mov
cmp
mov
cmp
add
ins
outs
fwait
mov
mov
push
mov
pop
data16
inc
out
aas
xor
sub
mov
daa
call
pop
test
and
xchg
in
data16
stc
pop
jbe
(bad)
jg
jle
jns
loopne
add
sbb
pop
sbb
fst
sub
sar
fadd
int3
int3
int3
int3
int3
sub
cmp
out
out
push
stos
repz
push
pop
mov
dec
pop
jno
clc
dec
retf
movs
inc
popa
dec
into
mov
mov
lahf
ds
add
(bad)
mov
sub
inc
int
mov
xchg
out
stos
cs
imul
std
jle
or
int3
int3
int3
mov
jmp
jmp
dec
sti
aam
push
jecxz
add
movs
lds
fsubr
mov
leave
das
sbb
mov
paddsb
jb
add
es
add
pop
cs
aad
mov
or
add
int
(bad)
cld
add
pop
fmulp
jle
fsubr
add
mov
jbe
pop
jmp
cmps
ror
xchg
std
fidiv
es
and
and
out
aad
rol
jne
call
xchg
cmp
mov
fdiv
int3
int3
int3
int3
mov
dec
cmpxchg
xchg
rol
rcl
jb
jae
pop
push
mov
cli
stos
add
inc
sbb
add
js
imul
inc
adc
nop
add
sub
inc
sti
fisubr
xor
mov
mov
cmovnp
sar
out
test
std
(bad)
scas
adc
int3
int3
int3
int3
int3
ret
daa
jp
mov
pop
push
xchg
pushf
movs
movs
push
in
or
sbb
jb
loop
and
lock
in
jno
xchg
xchg
xchg
or
or
and
mov
call
pushf
and
inc
and
and
aas
mov
popf
mov
adc
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
pop
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
call
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
push
push
call
mov
call
add
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
dec
(bad)
mov
dec
ret
mov
scas
inc
and
lods
sbb
out
push
dec
xchg
pop
(bad)
mov
jge
jecxz
stc
aas
mov
into
sbb
push
and
lds
out
fld
inc
and
mov
push
std
pop
push
inc
fs
loopne
jne
xor
mov
jne
int3
int3
int3
int3
int3
movs
fisttp
mov
adc
mov
sbb
fiadd
std
sahf
lods
sub
imul
lds
xor
int3
int3
int3
mov
test
arpl
mov
dec
sti
lock
outs
std
mov
mov
pop
in
pop
or
or
lock
pushf
mov
cmps
pop
jmp
pushf
test
int3
int3
int3
mov
out
pop
fwait
pop
scas
jle
sbb
(bad)
sub
push
out
rcl
and
xchg
sub
mov
test
mov
shl
xchg
cmp
stc
out
fild
cdq
pop
push
arpl
xor
adc
daa
push
xor
sbb
mov
and
int3
int3
int3
int3
or
xor
mov
jle
js
dec
idiv
clc
xchg
and
cdq
sbb
add
xchg
into
cmps
mov
jle
ja
inc
(bad)
adc
mov
push
int
daa
cmp
cld
or
leave
jge
js
fsubp
js
mov
push
in
add
cmpps
pop
mov
pop
int3
int3
int3
int3
int3
sub
sar
les
mov
dec
mov
xchg
inc
ins
push
mov
mov
mov
outs
inc
sub
push
sub
pop
sar
cmc
test
mov
xor
cmp
outs
int
xor
dec
shl
pop
push
div
int3
int3
int3
int3
mov
call
xchg
clc
repz
jne
cmps
pop
retf
sbb
dec
movs
hlt
sti
xchg
sbb
rcl
pop
push
adc
mulps
fisub
fsub
fnstenv
cmp
sbb
les
cs
std
fst
fwait
dec
dec
int3
int3
int3
int3
int3
stos
inc
mov
xlat
inc
inc
and
dec
pop
inc
mov
jns
push
xchg
in
(bad)
setno
sbb
test
(bad)
test
pop
pop
push
ss
sbb
and
in
loopne
push
pop
jl
xchg
push
push
mov
add
xchg
sub
test
fstp
cmp
mov
or
xchg
mov
out
in
push
inc
in
into
sub
xchg
scas
mov
inc
push
int3
int3
int3
int3
int3
das
push
enter
mov
pop
add
jg
mov
aaa
mov
mov
and
in
mov
cmp
jmp
cmc
and
pushf
test
sbb
jae
adc
jmp
jle
loopne
jno
mov
inc
xor
jmp
lea
adc
fucomp
cs
and
aas
inc
or
fwait
pop
mov
pop
xor
mov
add
enter
cmp
int3
int3
imul
and
mov
xor
add
inc
dec
pop
jnp
inc
lea
cmp
loope
icebp
inc
inc
push
jnp
mov
aas
push
out
inc
mov
ins
scas
mov
push
retf
mov
or
(bad)
stc
sbb
out
retf
cmp
movs
xchg
icebp
xchg
enter
dec
ret
sbb
cs
jmp
push
mov
(bad)
xchg
lss
jl
dec
(bad)
pop
mov
xor
xchg
gs
mov
push
repnz
and
sub
xchg
mov
jbe
pop
repnz
inc
mov
inc
into
pop
jmp
dec
add
xchg
shr
xor
cmc
cmp
pop
fisttp
xchg
adc
popa
pop
cmp
inc
sbb
int3
int3
int3
int3
push
jmp
push
or
shl
stc
inc
dec
xor
mul
mov
dec
ja
push
mov
(bad)
int3
hlt
mov
int3
int3
int3
int3
cld
push
xchg
push
jge
scas
test
sbb
call
xlat
lods
and
not
nop
enter
ret
lds
cmp
hlt
aaa
cwde
lods
inc
xchg
pop
(bad)
fs
test
popf
leave
std
loopne
in
sbb
pop
sub
inc
mov
cmp
clc
(bad)
dec
rcr
pop
inc
aam
ins
cdq
mov
xchg
imul
int3
int3
int3
int3
int3
fwait
xchg
sahf
stc
mov
aaa
xor
retf
bound
das
or
or
gs
sub
pusha
push
test
dec
(bad)
hlt
jl
sub
jo
lahf
fidivr
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
addr16
inc
mov
loop
aas
outs
mov
mov
aad
mul
stos
repnz
stos
pop
mov
aas
std
pop
jbe
stos
push
cli
(bad)
(bad)
fs
lock
cli
loope
retf
test
int3
int3
int3
int3
int3
outs
aad
mov
(bad)
pop
mov
fisub
mov
aas
call
retf
xor
cmp
js
cmps
pop
pop
lods
push
call
dec
stos
xor
push
loopne
mov
cmp
int3
int3
int3
int3
add
mov
ins
xchg
mov
sbb
jae
mov
mov
jne
or
add
dec
mov
popf
out
or
add
pop
adc
retf
int3
int3
int3
cwde
(bad)
and
xlat
repz
jge
data16
push
es
les
sahf
bound
jl
adc
lock
inc
mov
mov
retf
frstpm(287
adc
inc
fisubr
cmp
daa
call
push
popw
or
int3
int3
int3
int3
xor
mov
push
sbb
pop
lock
dec
mov
xchg
ret
xlat
test
mov
sbb
movs
xor
outs
xchg
dec
or
push
add
jne
fdiv
dec
(bad)
bound
into
mov
jae
jmp
add
fcom
rcr
mov
fidivr
jb
aaa
cmps
repnz
mov
push
jle
int3
int3
int3
int3
int3
(bad)
bound
ss
jmp
fisttp
dec
das
sysret
cmp
inc
adc
leave
adc
xor
mov
adc
add
retf
pop
cs
retf
mov
arpl
jo
bnd
pop
nop
sbb
mov
dec
iret
pop
jb
inc
pop
and
int
pushf
repz
ins
sbb
int3
sub
outs
aad
ja
fmul
fist
add
cmp
inc
jae
mov
pop
lods
and
add
or
nop
(bad)
mov
mov
add
clc
enter
loop
fwait
mov
(bad)
popa
cmp
push
and
xor
adc
mov
dec
icebp
test
pop
mov
int3
int3
int3
int3
and
movs
ret
sub
lods
inc
or
sbb
(bad)
icebp
imul
adc
iret
or
imul
xor
mov
adc
outs
pop
sbb
jbe
mov
pushf
inc
inc
push
pop
push
fdiv
dec
mov
int3
int3
int3
int3
js
popa
mov
dec
mov
and
sbb
(bad)
imul
pop
data16
lea
adc
adc
and
or
(bad)
jp
mov
(bad)
push
shl
imul
cdq
int3
int3
int3
int3
int3
sub
stc
stc
bound
int3
jg
mov
add
arpl
jbe
adc
sbb
into
or
inc
xor
loope
int3
int3
int3
int3
ja
push
ret
or
das
mov
jno
iret
xchg
mov
fidivr
xlat
out
and
in
cmps
cmps
loop
xchg
lea
loopne
xchg
addr16
movs
bound
adc
add
mov
aad
test
jo
add
loopne
(bad)
jle
adc
ins
ret
loope
inc
or
or
ss
dec
fs
int3
int3
int3
int3
push
les
shl
pushf
shl
mov
les
hlt
bound
icebp
xor
and
aas
push
jo
push
mov
(bad)
cmc
jecxz
xchg
lods
leave
retf
pop
xor
xor
mov
xchg
mov
lods
movq
pop
mov
int
add
into
sbb
xchg
data16
xor
or
int3
int3
int3
int3
int3
mov
jns
sar
jnp
push
jl
popf
mov
imul
sub
adc
sub
popa
gs
adc
or
mov
xchg
dec
jns
mov
pushf
adc
mov
ins
movs
and
or
jge
mov
xchg
sti
daa
mov
sar
int3
int3
int3
int3
int3
dec
cld
popa
arpl
push
jmp
mov
sub
retf
push
push
inc
pop
mov
pushf
dec
jecxz
push
mov
repz
nop
repnz
or
adc
jmp
test
jp
mov
int3
int3
int3
int3
int3
push
adc
stos
icebp
scas
mov
or
sbb
or
lods
aad
ret
outs
push
int3
jmp
(bad)
xchg
cs
dec
(bad)
aas
add
repz
sbb
push
js
test
fld
mov
(bad)
xor
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
mov
call
mov
mov
call
mov
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
xor
sahf
mov
fs
sub
sbb
inc
cmc
and
fcomp
push
stos
mov
fldcw
sub
and
adc
mov
jg
lods
loop
jmp
push
rcr
lds
test
fs
pop
dec
sub
adc
xchg
xor
inc
icebp
or
out
lds
pop
xor
daa
aaa
pop
ror
or
push
push
pushf
inc
jecxz
popf
dec
pop
mov
cmps
ffree
push
jl
scas
cdq
and
das
or
jb
inc
out
xor
xchg
adc
and
jb
dec
inc
sbb
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
or
(bad)
inc
stos
sbb
out
(bad)
call
dec
push
and
pop
es
fild
pop
repnz
xlat
inc
push
pop
lahf
fisub
inc
repnz
cdq
call
int3
int3
int3
mov
leave
lock
das
mov
xchg
adc
ds
push
ja
cmp
jns
out
dec
sbb
enter
sbb
cdq
retf
xchg
(bad)
ins
cmp
pop
stc
aad
(bad)
jg
pop
stos
int3
int3
int3
int3
int3
sti
aaa
ja
in
and
cmp
lock
adc
popf
rol
mov
cmp
js
pop
call
cmp
push
xor
pop
mov
scas
mov
mov
(bad)
push
sbb
enter
int3
int3
int3
int3
bound
out
jmp
add
pop
bound
pop
inc
outs
cmp
clc
enter
sub
pop
sub
lea
fadd
mov
pop
loop
shl
mov
mov
lock
std
loope
daa
popf
jno
data16
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
outs
fcomi
fwait
pop
int
xchg
cdq
sbb
aad
xlat
imul
mov
fistp
nop
div
adc
mov
adc
(bad)
jp
mov
or
ss
int3
int3
int3
int3
int3
aam
iret
xor
push
push
out
xchg
in
lock
mov
xchg
or
icebp
fdivr
jl
xchg
mov
xor
retf
outs
movs
cli
xchg
pop
mov
sub
stos
push
je
xchg
lock
pop
sbb
aad
out
mov
movs
scas
rcr
mov
sbb
jne
xor
int3
int3
int3
int3
gs
adc
rcl
mov
inc
adc
rcl
scas
fldenv
mov
repz
mov
add
outs
popf
xor
jb
jae
ds
xchg
xor
lock
cmps
(bad)
int3
int3
int3
int3
int3
es
jb
aam
je
fs
pop
pop
sti
pushf
ret
into
sub
jae
stc
mov
not
pushf
cmp
inc
xor
gs
jo
es
sub
mov
pushf
adc
xor
scas
add
fidiv
sub
aaa
test
sub
add
int3
int3
int3
int3
inc
adc
push
pop
repz
jb
pop
inc
iret
ss
cmps
ss
lds
retf
sub
and
js
fild
xor
and
mov
scas
sbb
pop
push
fisttp
rol
sub
jno
cmps
les
add
push
xchg
sti
fs
sti
push
(bad)
(bad)
adc
pop
and
int
xor
sub
mov
test
xchg
outs
fisub
add
pop
ret
stos
pop
stos
and
xchg
test
add
xchg
loopne
mov
imul
(bad)
int3
int3
int3
int3
out
pop
test
lods
inc
add
into
fldln2
jb
rep
pop
sub
cwde
mov
test
arpl
shl
cmps
std
rol
dec
sbb
jge
cmp
fxch
dec
dec
add
into
out
arpl
pop
or
cld
sub
arpl
repz
inc
xchg
sub
mov
mov
fbld
xchg
mov
xchg
sub
cmps
test
fs
cmp
int3
int3
int3
pop
push
jb
movs
sar
jmp
xchg
jecxz
ins
mov
fmul
or
fwait
sub
imul
out
xchg
push
fdivr
aad
xor
mov
sub
fmul
movs
ja
mov
inc
cmp
outs
cld
in
stos
ins
lahf
dec
sar
movs
jbe
pop
les
aaa
mov
cwde
pop
cmc
shr
mov
cmp
mov
int3
int3
int3
int3
int3
mov
outs
mov
out
xchg
mov
pushf
mov
push
adc
jns
outs
mov
popa
xor
inc
jp
push
xor
nop
or
adc
lods
repnz
push
add
cmp
call
adc
push
dec
pop
fistp
mov
out
adc
outs
jo
push
add
mov
out
stos
imul
int3
int3
int3
jno
ja
loope
arpl
and
jbe
div
(bad)
repz
or
loopne
mov
retf
add
in
dec
clc
loope
dec
cmp
test
es
aaa
adc
xor
xor
js
fnstenv
fchs
test
int3
ret
test
fwait
hlt
lods
inc
test
sub
aaa
pop
jbe
mov
pop
sbb
mov
dec
or
popa
mul
jnp
push
mov
movs
lods
mov
(bad)
or
cmp
aaa
mov
dec
mov
lods
jns
cmps
add
loop
cmp
sub
int3
int3
int3
int3
in
sbb
pop
or
es
mov
mov
icebp
outs
mul
(bad)
pusha
in
adc
ja
les
mov
mov
cmp
pop
inc
pop
fwait
outs
cs
jmp
push
das
or
dec
rol
clc
mov
icebp
dec
mov
fwait
dec
and
mov
add
dec
pop
cmp
outs
cli
in
cmp
jecxz
int3
int3
int3
int3
int3
inc
push
xor
rol
xor
pop
push
sbb
pop
cli
test
mov
aaa
mov
nop
push
xchg
xchg
cld
sbb
sub
xor
adc
xlat
aam
or
and
and
fs
int3
int3
int3
int3
add
and
push
fistp
lods
in
mov
retf
ror
adc
mov
lahf
shl
xchg
xchg
adc
xor
(bad)
push
pop
cmp
ret
xchg
int3
ret
ror
out
out
mov
arpl
xchg
js
scas
icebp
lahf
xor
or
push
and
rcr
fist
int3
int3
int3
int3
int3
test
cmp
imul
mov
sbb
inc
xor
add
mov
add
retf
hlt
mov
imul
fild
sbb
pusha
mov
mov
adc
mov
or
call
sub
push
pop
(bad)
xor
out
bt
test
lods
imul
ret
std
enter
inc
xor
mov
out
sti
addr16
shr
scas
sbb
shl
popf
add
xchg
loopne
sbb
hlt
(bad)
pop
jmp
cmp
out
fs
sub
ficomp
cli
push
jne
push
mov
jecxz
fstp
xchg
test
(bad)
loopne
lea
push
out
test
movs
lds
push
imul
int3
int3
int3
int3
dec
hlt
pop
cld
pusha
data16
retf
jb
jge
adc
xor
inc
cmp
cmp
out
ins
fnstenv
push
mov
push
push
fidiv
mov
ret
mov
jne
inc
adc
mov
stos
aam
and
adc
int3
int3
int3
out
pop
enter
adc
xor
in
sbb
pop
out
aad
imul
xchg
dec
pop
and
icebp
push
arpl
mov
stos
cmp
fild
xchg
jae
pop
loope
dec
inc
adc
cld
mov
int3
int3
int3
int3
sbb
jb
pop
add
mov
pop
repz
cdq
in
cld
fwait
sbb
mov
pop
cmp
lahf
popa
retf
js
bound
in
ss
or
adc
pop
sub
mov
int3
int3
pop
and
push
and
pop
sbb
xchg
mov
sub
mov
(bad)
cmp
das
or
dec
push
jne
hlt
jno
add
cli
test
fsubrp
pop
add
push
add
inc
int3
int3
int3
int3
int3
mov
jge
fcos
rol
or
pop
xor
mov
adc
sub
mov
dec
repnz
inc
dec
imul
int
data16
or
mul
iret
jbe
mov
in
mov
mov
imul
mov
or
dec
les
adc
movs
mov
push
mov
sti
int3
int3
int3
int3
int3
and
cmp
stos
mov
aam
fcomip
iret
call
or
xchg
clc
test
dec
xchg
(bad)
scas
cmp
fidivr
fcomp
add
cli
stc
ja
pusha
jl
loopne
dec
daa
test
cmps
out
pop
out
inc
dec
imul
mov
int3
int3
int3
int3
int3
sub
nop
and
jecxz
and
test
jecxz
mov
fs
xchg
rcl
dec
pop
outs
pop
mov
fs
in
or
popa
push
jmp
mov
cmp
dec
in
cmps
add
int3
int3
int3
fs
push
or
nop
into
out
push
fisubr
push
leave
mov
adc
and
cli
int
mov
jae
pop
ds
inc
cmp
fsubr
je
dec
pop
adc
or
jmp
cmp
leave
jg
sbb
outs
pushf
das
xlat
dec
adc
adc
int3
int3
int3
int3
jle
outs
dec
xchg
mov
sbb
mov
adc
dec
hlt
lods
std
in
sub
loop
jne
movs
xchg
cli
fmul
xchg
mov
or
sbb
pusha
jle
dec
fistp
(bad)
xlat
fwait
jae
sbb
or
jge
dec
cdq
jo
inc
pop
mov
mov
ror
mov
xor
or
(bad)
add
xchg
xchg
cmp
fistp
ja
ret
icebp
xor
xor
movs
repz
jge
cmp
and
xchg
push
lds
adc
adc
(bad)
xor
adc
imul
jne
jge
sahf
push
adc
jns
es
jae
outs
call
ret
push
aaa
add
mov
xor
xor
pop
pop
xor
retf
xchg
xor
ret
and
cmp
imul
dec
cmp
push
in
ds
shl
adc
repz
imul
mov
pop
(bad)
daa
cmps
dec
test
pop
loop
xchg
mov
stos
shl
or
shr
aam
mov
inc
in
aaa
popa
pop
push
dec
shl
xor
fcos
imul
pushf
jae
mov
sbb
repnz
pop
push
daa
xchg
mov
and
push
icebp
and
jge
pop
iret
popa
mov
inc
adc
jmp
add
cmps
cmc
sub
or
and
in
cmps
fstp
fcmovbe
loopne
mov
in
and
jp
mov
mov
mov
jbe
pop
dec
xlat
test
sub
dec
ror
(bad)
aam
arpl
ins
icebp
mov
adc
jnp
fwait
xchg
dec
or
dec
fnstcw
add
sbb
aad
(bad)
xchg
gs
cmp
inc
rcl
jl
cmp
movs
jp
dec
sahf
mov
adc
hlt
or
lea
out
rol
sub
stc
inc
pusha
in
jo
gs
loopne
imul
test
dec
or
mov
mov
retf
test
in
mov
rcr
or
xor
mov
and
dec
xor
test
icebp
repnz
sbb
aam
cmp
loopne
cmp
mov
loope
xor
push
push
or
jp
xor
sub
ja
test
pop
adc
add
and
hlt
sbb
push
test
nop
shl
out
mov
jno
bound
sbb
xor
js
mov
(bad)
cmps
or
icebp
cmp
sub
fs
shl
pop
xor
hlt
popf
jns
pop
ret
in
fist
pop
out
cs
pusha
xchg
outs
in
stos
mov
mov
or
dec
jnp
mov
sub
pop
adc
iret
dec
iret
dec
call
loope
push
mov
int3
inc
jb
pushf
mov
cmp
shr
cmp
adc
sub
push
fisubr
cli
imul
sbb
jecxz
(bad)
cld
mov
fcom
adc
dec
mov
adc
in
jae
xchg
cmp
fdiv
loopne
stos
mov
int3
pop
call
stos
adc
mov
jmp
js
xchg
aaa
sbb
inc
cwde
cmp
sub
dec
adc
arpl
xchg
inc
adc
cmps
jecxz
mov
imul
sbb
(bad)
sub
stc
(bad)
lahf
inc
cmps
movs
(bad)
je
xor
mov
adc
cdq
add
pop
test
or
rcl
xchg
xor
test
daa
or
mov
(bad)
xor
or
std
jnp
fstp
mov
xchg
xchg
mov
(bad)
cli
ret
mov
push
or
std
jmp
and
lods
inc
stos
pop
and
adc
jecxz
xchg
fnop
push
push
push
idiv
iret
or
lods
shr
dec
inc
pop
mov
rcl
pop
fbstp
add
retf
rcr
icebp
lahf
or
test
jmp
inc
adc
mov
ins
xchg
and
dec
loopne
imul
mov
mov
out
ror
mov
dec
pop
mov
adc
sbb
sbb
lock
in
jne
or
inc
inc
inc
sub
aam
inc
and
mov
add
mov
xlat
mov
mov
stc
dec
add
int
imul
xchg
dec
pop
daa
pop
shr
sub
push
aas
ret
pop
pop
cmps
fisttp
sub
push
into
in
sub
lock
icebp
(bad)
jmp
mov
fistp
jl
pusha
imul
jmp
cmc
pop
cmp
rol
lea
dec
push
adc
sbb
imul
mov
jecxz
(bad)
jmp
je
push
aas
fcomp
sub
adc
bound
dec
cwde
out
jecxz
rcr
popf
out
push
inc
aas
jns
addr16
retf
int
rol
cwde
or
jbe
das
gs
push
jecxz
lods
push
into
je
pop
sub
mov
inc
lds
adc
cmp
adc
bound
in
push
xchg
mov
mov
pushf
pop
xchg
mov
loop
stos
xor
data16
div
in
and
inc
aaa
push
fisubr
sub
cmp
dec
fidivr
cmp
(bad)
or
sbb
in
xor
add
dec
mov
xchg
or
push
scas
in
shl
push
inc
lea
(bad)
mov
or
cwde
cld
js
in
and
xchg
push
outs
(bad)
sbb
mov
movs
push
cmc
cdq
std
sub
ja
mov
(bad)
or
in
lods
aad
(bad)
ficom
xchg
cli
mov
cld
cwde
sub
and
cs
int
daa
sbb
xchg
or
popa
dec
fwait
stos
or
lods
outs
retf
or
mov
es
sub
push
jmp
dec
lahf
stos
pop
loope
rol
and
pop
push
xchg
and
cwde
mov
and
xor
xchg
mov
sub
cmc
dec
push
push
xlat
gs
and
pop
int
sub
jmp
loopne
rcr
popa
(bad)
mov
push
adc
scas
out
jne
pop
test
xchg
sbb
cmp
or
int
jo
push
stos
jecxz
inc
loop
and
and
cmps
mov
jle
cmp
lahf
mov
pop
js
idiv
cs
sub
adc
dec
and
mov
mov
sub
mov
push
fsub
or
repz
adc
jmp
fwait
sahf
dec
xor
and
cmp
xor
adc
ins
xchg
push
jne
or
mov
adc
clc
dec
mov
frstor
jo
xchg
and
cmps
std
push
out
jnp
fmul
mov
ret
or
lock
iret
loopne
sbb
fwait
mov
mov
push
loope
jno
cmp
push
(bad)
(bad)
cmp
mov
leave
outs
xchg
add
mov
and
sbb
and
jbe
xchg
dec
mov
aam
adc
jmp
xchg
movs
or
rcr
mov
fbstp
and
sub
add
outs
(bad)
leave
(bad)
mov
mov
add
pop
hlt
iret
leave
mov
test
fwait
xlat
call
xchg
inc
jge
jecxz
rcl
push
add
sar
out
in
fiadd
fwait
rol
pushf
xchg
por
pop
dec
sub
pop
and
std
mov
std
pop
stc
std
aam
mov
mov
jp
test
dec
retf
push
out
sbb
and
fwait
sub
(bad)
les
outs
repnz
mov
push
adc
(bad)
cmps
inc
mov
inc
popa
push
adc
inc
das
test
inc
xchg
mov
aaa
mov
outs
fucomip
jg
dec
jnp
shr
pop
mov
test
jo
push
jmp
in
dec
stos
bsf
leave
fidiv
xchg
loopne
sub
mov
sbb
sub
rol
or
test
adc
inc
(bad)
cmp
and
pop
sub
dec
cmp
add
sub
adc
jmp
xchg
popa
imul
fstp
or
ss
jg
add
iret
xor
add
in
xor
int3
mov
fisubr
mov
add
mov
adc
(bad)
mov
adc
std
inc
retf
pusha
(bad)
cmc
into
push
scas
sar
xor
stos
inc
pop
cmp
pushf
(bad)
cmp
sub
pop
or
mov
stc
mov
lock
jo
je
js
adc
jno
cmp
sub
xor
bound
sbb
mov
push
cdq
test
scas
outs
and
cmp
scas
mov
bound
(bad)
xchg
repnz
mov
lods
mov
imul
pusha
aaa
sbb
sbb
push
daa
lods
or
and
or
(bad)
xlat
mov
in
adc
mov
out
xor
jg
(bad)
mov
int3
xchg
dec
int3
add
add
inc
mov
inc
mov
jbe
daa
dec
sahf
mov
mov
(bad)
repz
inc
push
ja
mov
in
jae
dec
and
(bad)
out
aas
dec
or
loop
push
fnsave
les
rol
(bad)
bound
jge
(bad)
aaa
jae
adc
call
imul
ret
neg
fst
sub
push
or
cmp
mov
mov
xor
ss
iret
(bad)
fdiv
int3
addr16
sub
dec
xchg
push
pop
adc
xor
hlt
into
mov
ror
sar
out
(bad)
je
sbb
cmps
jmp
xor
ja
or
(bad)
mov
sbb
jnp
pusha
pop
ja
inc
bnd
fucom
mov
jns
pop
mov
adc
fwait
mov
push
and
leave
call
pop
daa
cld
outs
mov
shl
int3
int3
int3
int3
int3
rcl
retf
fimul
popa
inc
stos
xchg
cmps
sbb
inc
dec
lea
jnp
jb
sbb
scas
mov
xchg
fld
lahf
mov
pop
sub
gs
sbb
inc
jno
icebp
mov
or
cmps
shr
mov
sub
aad
fmulp
int3
int3
int3
int3
cmp
lods
cmp
jmp
mov
or
and
inc
leave
mov
cwde
std
repnz
mov
xchg
push
fadd
cwde
xor
add
retf
mov
and
int3
int3
int3
int3
ret
lods
sbb
inc
shr
sti
dec
int3
push
jns
imul
cld
dec
mov
adc
mov
mov
and
dec
test
xchg
mov
push
lds
cmc
int
ins
ror
adc
pop
repz
leave
in
mov
add
(bad)
int3
int3
int3
int3
int3
dec
stc
pop
xor
push
pop
dec
int3
cmp
sbb
cmp
add
xchg
jle
stos
retf
je
loop
imul
mov
movs
sbb
push
xor
adc
rol
add
mov
cmp
push
push
adc
cmp
int3
int3
int3
int3
fist
bound
in
sti
aas
rcl
adc
dec
push
arpl
fs
int
inc
xor
dec
in
je
enter
cld
xchg
xor
(bad)
or
add
mov
xor
xor
sub
push
sbb
push
or
pop
and
int3
int3
int3
int3
int3
ds
jbe
cld
fwait
inc
adc
cmp
retf
jle
mov
jecxz
mov
xor
cmp
mov
bound
clc
xchg
xchg
mov
xchg
pushf
dec
sub
jge
loopne
push
cwde
mov
or
dec
shr
adc
lock
data16
int3
int3
int3
int3
and
xor
stc
loop
es
idiv
scas
dec
xchg
and
mov
(bad)
stc
out
jnp
cs
cmp
push
pop
sbb
rol
inc
jge
neg
test
pop
das
jae
jns
ja
push
out
into
int3
int3
int3
int3
int3
ds
pop
xchg
rcr
push
sbb
add
pop
iret
lds
not
psrad
shl
addr16
pop
xchg
xchg
movs
cwde
in
lock
sub
xor
enter
mov
sbb
int
sub
rol
or
sbb
int3
int3
int3
int3
jmp
aad
dec
cmp
mov
or
jae
push
addr16
mov
popa
cmp
addr16
and
or
out
jbe
mov
adc
dec
mov
cmp
retf
scas
js
and
out
add
out
ficomp
leave
push
inc
repnz
push
aam
cwde
and
test
int3
int3
int3
int3
int3
push
mov
jne
jle
(bad)
and
ret
into
sbb
es
lds
mov
or
pusha
sub
retf
mov
xchg
(bad)
jg
jne
adc
xchg
xchg
sub
daa
sub
mov
ret
cdq
push
gs
scas
ficomp
std
(bad)
int
jecxz
xchg
int3
int3
int3
int3
int3
mov
stos
and
les
sbb
cwde
int3
test
out
ins
fadd
stos
pop
clc
push
mov
jne
(bad)
je
xor
mov
sbb
into
rep
iret
sahf
push
ja
dec
ficom
pop
sbb
or
sub
enter
adc
jge
xchg
std
movs
es
aas
ins
pusha
push
dec
push
pop
cmp
int
jo
loope
jge
stos
data16
shl
jmp
ins
cmp
clc
and
mov
mov
fsub
ss
push
inc
out
out
(bad)
enter
in
xchg
fs
jnp
icebp
xor
mov
test
test
inc
cmps
mov
pop
mov
scas
das
xchg
pop
jmp
or
inc
push
jns
or
sub
mov
stos
addr16
xchg
cmp
ins
adc
hlt
xchg
dec
mov
jne
neg
and
leave
push
test
jle
pop
push
xor
dec
stc
add
sti
mov
cmp
sbb
hlt
mov
out
adc
retf
pop
scas
push
jmp
sub
inc
daa
int3
int3
int3
int3
int3
push
pushf
xchg
xchg
push
mov
out
clc
retf
xchg
or
jmp
sub
sub
cld
sub
out
stos
fimul
dec
add
in
or
fimul
int3
int3
int3
int3
adc
es
xchg
dec
cld
and
xchg
pop
xchg
(bad)
fnstenv
lea
pop
and
push
dec
cdq
xchg
ins
xor
aaa
(bad)
and
pop
ss
(bad)
int
fxch
cwde
adc
inc
out
jl
inc
xchg
adc
push
fst
ins
fisub
add
std
dec
sub
pop
jl
mov
int3
(bad)
scas
jmp
lea
and
xchg
add
xor
pushf
ja
out
mov
rol
xchg
pop
nop
shl
sub
(bad)
int
jmp
mov
into
out
es
mov
cmp
(bad)
out
ins
jae
cmp
int3
int3
adc
out
mov
mov
out
mov
xor
or
mov
push
push
pop
inc
xor
xor
repnz
push
not
aaa
add
cld
enter
mov
(bad)
adc
cmp
inc
inc
mov
in
call
pusha
mov
dec
adc
or
iret
int3
int3
int3
int3
int3
adc
push
add
jle
bound
mov
push
xchg
(bad)
sub
or
mov
lods
jp
ret
mov
lods
jnp
push
sbb
pop
fistp
movs
dec
loop
or
sbb
int3
int3
int3
int3
int3
call
inc
arpl
sbb
adc
pusha
mov
enter
pop
lahf
xchg
cli
xor
rol
mov
test
mov
adc
int3
int3
int3
int3
int3
shr
scas
mov
sub
rcr
(bad)
or
jle
icebp
(bad)
dec
(bad)
and
outs
lea
(bad)
out
scas
cmp
cdq
sbb
(bad)
push
sbb
add
enter
jge
daa
push
ins
outs
imul
add
int3
int3
int3
int3
int3
xchg
xchg
jl
xchg
cmps
mov
fdivr
scas
(bad)
out
add
out
in
lahf
cmc
lock
mov
or
adc
jg
in
cmp
idiv
adc
push
push
xor
ret
jne
jns
int3
int3
int3
int3
int3
test
(bad)
pusha
(bad)
lds
ret
shl
push
pop
arpl
mov
mov
int
call
cmp
int
inc
push
cwde
adc
popf
and
in
xchg
mov
jo
mov
int3
int3
int3
int3
int3
jns
push
xchg
xor
add
mov
(bad)
sbb
and
adc
inc
cmp
mov
stc
rcl
dec
nop
pop
ret
cmc
mov
xor
in
adc
jecxz
shr
mov
leave
xor
rcl
sub
sub
ins
fisttp
mov
add
(bad)
call
call
or
lock
or
lods
int3
int3
int3
int3
int3
pop
mov
les
ror
mov
addr16
mov
adc
out
and
pop
dec
ss
(bad)
inc
icebp
mov
(bad)
outs
pop
rcl
jae
cdq
jg
jp
sub
xchg
(bad)
es
int3
int3
int3
int3
sub
or
pop
mov
pop
xor
pushf
mov
call
ds
jnp
mov
cs
lahf
mov
data16
push
xor
ret
jmp
mov
int3
int3
jb
into
adc
or
aam
mov
jle
cwde
out
test
jne
push
test
xchg
pop
je
(bad)
cmp
aaa
sbb
lods
retf
ret
cmp
ins
xchg
cmp
neg
adc
fisttp
xor
int3
int3
int3
int3
loope
pop
out
ja
xor
mov
scas
ret
loope
pop
int3
xor
outs
test
adc
(bad)
out
pop
push
pop
les
clc
xchg
test
push
push
test
and
pop
in
pop
add
push
mov
aaa
xchg
movs
in
pop
mov
mov
sub
int3
int3
int3
int3
pop
and
xchg
and
hlt
dec
jb
jge
push
sub
or
push
push
movs
inc
inc
loopne
jns
popa
cdq
pusha
mov
mov
loope
jg
pop
cmp
ja
jne
add
push
push
sub
cs
push
xchg
cld
adc
cmp
dec
scas
fucomi
ret
neg
cmp
pop
sub
mov
xor
dec
mov
xor
ds
fwait
jmp
sbb
int3
int3
int3
int3
cmp
adc
in
outs
push
dec
jle
je
sbb
xor
or
mov
mov
lods
sbb
dec
pop
xchg
popf
nop
inc
and
aad
jge
fwait
jmp
enter
int3
int3
loopne
pop
and
sti
or
mov
or
loopne
pop
adc
and
sbb
add
ins
inc
cmps
add
movs
cmp
sub
daa
in
sbb
adc
adc
lods
jno
jmp
int3
adc
cmp
test
pushf
adc
mov
in
dec
dec
inc
repz
dec
sti
in
int
adc
push
je
pop
pop
aaa
sbb
dec
add
test
repnz
jle
push
sti
jg
mov
int3
int3
int3
int3
int3
inc
retf
mov
leave
pop
cwde
ins
pushw
dec
inc
fwait
retf
xchg
iret
and
cmp
aad
adc
dec
fs
mov
and
xor
jge
clc
push
loope
pop
int3
int3
int3
int3
int3
fldcw
sub
pop
cld
fild
cdq
nop
inc
push
sub
sub
int
jp
jb
sub
(bad)
sub
aas
retf
and
xchg
pop
sahf
jle
int3
int3
int3
int3
int3
push
mov
pop
test
popa
(bad)
imul
(bad)
repz
dec
pop
lds
xchg
pop
and
inc
stos
sub
add
or
sbb
xor
dec
mov
ror
int3
int3
int3
int3
int3
xor
mov
sbb
mov
mov
lock
mov
push
add
pushf
(bad)
jno
ror
xor
in
lds
int
mov
add
mov
or
int3
int3
int3
int3
int3
aaa
pop
cdq
imul
dec
call
aaa
repnz
aam
movs
sbb
cmp
std
(bad)
pop
(bad)
into
lds
repnz
aas
or
push
xor
sub
push
xor
cmp
cmps
xchg
movs
dec
push
add
and
mov
mov
call
and
or
push
lahf
icebp
mov
xchg
mov
lods
mov
mov
cmps
mov
lock
int3
int3
int3
int3
int3
fwait
sbb
pusha
push
mov
mov
cmp
es
dec
int
add
jge
and
ret
repz
sbb
add
shrd
sub
pushf
int3
int3
int3
int3
int3
sar
pushf
inc
pop
into
fld
inc
popf
sub
cmp
ins
push
jnp
sbb
test
dec
ins
xchg
lea
adc
lds
aas
sar
jbe
(bad)
enter
jae
mov
loope
inc
int3
out
and
int3
int3
int3
inc
outs
xchg
repnz
jo
mov
movs
jae
ja
scas
pop
pop
push
out
mov
bound
mov
cmps
push
clc
xchg
add
push
aaa
dec
inc
pushf
push
jo
mov
jnp
imul
int3
int3
int3
cmp
arpl
sub
adc
fiadd
loope
(bad)
out
lock
and
pop
stc
call
addr16
cmp
outs
repnz
jbe
cmp
stos
xor
outs
aaa
in
lods
in
add
pop
sub
add
js
push
add
ja
mov
out
jmp
fiadd
cwde
xor
xor
adc
dec
jnp
inc
cs
fisub
aaa
js
out
dec
push
or
pop
shl
loopne
mov
pop
and
add
and
stos
sub
pop
cdq
scas
int3
int3
int3
int3
int3
pop
mov
loop
sub
mov
or
mov
sar
cmc
icebp
movs
xlat
add
hlt
(bad)
mov
cld
lods
xor
pop
ins
add
xchg
int3
int3
int3
int3
int3
mov
mov
push
xchg
mov
shl
in
mov
xchg
xor
mov
daa
cmp
mov
mov
outs
jmp
dec
mov
sti
inc
pushf
sub
int3
int3
aas
push
pop
loopne
mov
mov
pop
mov
add
mov
sub
out
push
cmp
cli
mov
sub
ins
in
mov
and
cmps
das
adc
xor
mov
inc
dec
dec
push
pop
ficom
xor
or
(bad)
into
jecxz
sbb
dec
push
dec
int3
int3
int3
int3
int3
into
call
pop
scas
imul
leave
fidiv
cld
jecxz
aam
icebp
daa
push
pop
icebp
ins
jb
fsubr
dec
pop
jmp
imul
push
ds
xchg
scas
into
dec
pop
lock
lods
pop
push
sub
jl
jmp
out
lods
test
int3
int3
int3
int3
and
dec
repnz
dec
mov
scas
xor
sub
mov
mov
cli
ficomp
aad
add
xchg
jo
mov
les
mov
ins
and
inc
xor
push
sti
int3
int3
int3
int3
int3
push
jle
dec
mov
aad
test
mov
dec
div
inc
lahf
xor
mov
in
jle
sub
mov
push
ret
xchg
inc
dec
clc
jnp
fs
xchg
lea
and
inc
mov
inc
arpl
jp
xor
inc
push
inc
sub
xor
int3
int3
int3
int3
sub
mov
lds
pop
icebp
dec
add
jns
out
lock
shl
fmulp
cmp
movs
jp
push
inc
inc
stc
adc
test
jle
and
push
test
int3
int3
int3
int3
int3
int3
(bad)
mov
push
pop
jg
aas
pop
push
pop
mov
imul
mov
and
sub
outs
arpl
pusha
cld
adc
lahf
add
ds
inc
clc
dec
enter
into
sahf
int3
int3
int3
int3
int3
jge
mov
scas
and
sti
outs
sbb
add
mov
out
cmp
aaa
xchg
mov
int
cmp
jecxz
in
sbb
jae
jecxz
mul
add
shr
mov
dec
push
inc
dec
cmp
cmp
in
jno
cli
test
adc
sub
adc
cmc
and
dec
int3
int3
int3
int3
int3
je
ins
inc
fnstsw
lods
shr
xor
mov
and
(bad)
aad
pop
push
push
into
mov
clc
inc
mov
inc
mov
xor
xor
div
mov
sbb
inc
mov
jge
movs
push
xor
jbe
dec
add
xchg
test
js
dec
fcomp
(bad)
sahf
xchg
(bad)
mov
jmp
mov
repnz
je
xor
inc
(bad)
mov
push
mov
and
mov
mov
(bad)
daa
inc
mov
push
pushf
and
imul
sub
or
in
jns
dec
enter
addr16
mov
int3
int3
pop
and
adc
leave
push
sbb
inc
jbe
fimul
and
fisttp
into
sahf
sbb
fstp
mov
stos
cmps
mov
add
dec
mov
adc
lods
jo
inc
add
pop
(bad)
popf
pop
add
pop
pop
popa
jae
push
sbb
jmp
cli
jo
int3
int3
int3
int3
int3
fadd
mov
dec
int
shl
jg
mov
setg
dec
fsub
lods
ins
ror
pushw
pop
in
sbb
jl
ins
xor
ja
nop
mov
xor
cmp
sub
aas
ret
adc
sub
add
call
jbe
stc
loop
mov
push
scas
mov
pop
cmp
fs
enter
div
sti
pop
xchg
add
mov
add
add
xlat
mov
add
popf
mov
cmova
dec
push
stc
xor
jbe
mov
movs
test
jg
int3
int3
int3
int3
int3
pop
loope
fnstcw
adc
cmps
jecxz
arpl
ds
leave
jbe
mov
xor
imul
jae
in
pop
pop
pop
dec
popf
and
retf
push
dec
mov
inc
mov
push
push
jo
sbb
sti
xchg
(bad)
mov
jbe
and
fwait
xchg
outs
mov
test
add
sub
pop
data16
leave
data16
mov
int3
int3
int3
int3
int3
scas
repz
je
pop
mov
movs
dec
fnstcw
jle
(bad)
jmp
ret
jno
inc
cdq
jle
stos
aam
int3
sub
movs
nop
push
mov
push
mov
and
int3
outs
jmp
stos
ins
lea
mov
mov
lods
addr16
sbb
fistp
fst
into
std
dec
cmp
scas
pusha
pushf
xor
jbe
mov
inc
pop
mov
and
jl
pop
xor
int3
int3
int3
int3
stos
(bad)
leave
pop
cli
aas
xchg
pop
nop
sbb
push
push
int3
xor
push
xor
fld
xchg
or
sbb
lock
andnps
jge
out
cmps
mov
cmp
inc
(bad)
and
int3
int3
int3
int3
int3
push
push
shl
pop
dec
ins
add
add
mov
mov
mov
rcr
push
push
in
loop
add
adc
arpl
mov
xchg
xor
pop
and
ins
enter
stos
ror
int3
int3
int3
int3
jp
mov
test
shl
pop
cmps
and
adc
stos
mov
mov
mov
cmp
sub
mov
cmp
xchg
out
pop
jns
dec
sbb
mov
jne
cmp
scas
movups
push
int3
int3
int3
int3
int3
jecxz
fimul
sbb
pushf
and
add
(bad)
cs
xor
aad
push
outs
dec
mov
sbb
inc
movs
mov
jle
add
je
clc
cli
and
ror
dec
retf
add
add
int3
int3
int3
int3
stc
or
pop
jmp
imul
ror
dec
sub
jp
adc
xor
stos
xor
mov
rcr
(bad)
ds
push
imul
fdivr
int3
int3
int3
int3
int3
mov
push
or
push
or
int
xchg
dec
(bad)
ja
sub
jg
repnz
and
out
adc
pop
mov
fsincos
sbb
mov
push
add
adc
or
int3
int3
int3
int3
mov
cmp
inc
int3
mov
or
push
xor
gs
addr16
xor
mov
imul
dec
pop
ret
test
(bad)
clc
mov
pop
ss
push
std
jne
push
(bad)
js
mov
cmps
jno
fsub
psubusb
jecxz
mov
mov
xchg
inc
mov
cdq
outs
xrelease
fdivr
int3
int3
int3
loope
shl
push
add
add
dec
sub
lock
cmp
and
lds
aad
jge
cmp
test
imul
mov
cmp
jno
mov
loop
jle
enter
int3
int3
int3
int3
jo
mov
xchg
and
sub
mov
jns
scas
outs
sbb
sbb
jmp
in
pop
pop
aam
or
shl
icebp
fisub
gs
cld
pop
int3
int3
int3
int3
int3
int3
xchg
js
ret
dec
push
cmp
xchg
inc
pop
ret
call
hlt
(bad)
test
add
sub
daa
repnz
stos
(bad)
sbb
jmp
ret
test
ds
jmp
int3
sub
addr16
pop
mov
stc
adc
aad
arpl
cld
dec
adc
jmp
inc
retf
push
(bad)
enter
out
inc
xor
sbb
sub
pop
pop
sub
cmp
cmp
scas
pop
sub
int3
int3
int3
int3
push
les
cmp
pop
sub
jb
push
sub
lea
mov
xor
and
push
hlt
cmps
ds
push
pop
mov
pop
push
push
cwde
into
or
int3
int3
int3
int3
int3
jno
stc
das
sub
jmp
xor
jno
stos
out
or
shl
cmovp
mov
xchg
outs
(bad)
ds
ins
or
test
pop
xor
int3
int3
int3
int3
mov
aas
and
mov
inc
retf
xchg
sub
pop
dec
shl
mov
push
ret
sub
adc
add
xchg
mov
into
ffree
cli
fdiv
add
mov
int3
int3
int3
int3
jo
test
push
test
mov
outs
shl
jl
outs
xor
fcomp
out
inc
mov
jg
int3
int3
int3
int3
push
push
retf
jle
fld
mov
xchg
dec
daa
and
aaa
push
loop
mov
cmps
pop
lods
jbe
dec
mov
in
xchg
sub
das
aam
xor
cwde
sbb
fwait
fwait
xchg
push
mov
push
mov
stos
ins
pop
(bad)
or
(bad)
aad
inc
push
cli
cmps
adc
inc
pop
into
pop
idiv
xchg
inc
aam
in
jne
cs
push
mov
xor
cmps
mov
mov
int3
int3
int3
int3
int3
push
push
xor
cli
fisub
mov
imul
xor
cwde
imul
lock
inc
push
in
imul
jne
ficomp
xor
or
call
int3
int3
scas
call
xchg
in
leave
jno
in
adc
cmps
test
sbb
enter
lea
ret
jno
icebp
out
sub
sbb
jne
stos
stc
cs
out
xlat
mov
or
inc
mov
fcomp
imul
cmc
and
int3
adc
out
(bad)
adc
or
int
int3
int3
int3
int3
int3
xchg
dec
call
xchg
lods
cmp
ins
inc
(bad)
ins
cmp
repnz
fmul
mov
or
stos
mov
nop
bound
(bad)
shr
leave
(bad)
and
xchg
jns
push
ins
cmp
shl
enter
xor
repz
mov
out
push
enter
int3
int3
int3
int3
repnz
test
div
stos
xchg
fistp
cmp
push
jle
out
mov
stos
test
int3
adc
jne
cld
adc
pop
cmp
cmc
ja
stos
call
mov
fsubr
out
outs
jge
or
int3
int3
int3
int3
int3
test
repnz
jg
das
jo
test
jno
lea
pop
cli
push
add
push
and
jl
inc
sbb
push
fmul
dec
push
pop
jg
cwde
sbb
in
imul
ja
(bad)
push
cdq
call
xor
xchg
inc
mov
push
mov
pop
cmp
or
or
xor
sub
in
sbb
push
push
aad
jnp
jae
(bad)
jmp
imul
or
dec
rcl
jo
adc
pop
dec
jl
out
push
int
sub
sbb
int3
int3
int3
int3
int3
cld
xor
fisubr
lahf
jb
xchg
sti
jl
xor
xchg
xchg
cmp
mov
ss
xchg
out
mov
or
aaa
or
fbstp
fstp
push
dec
xchg
add
sbb
cmc
cmps
call
repnz
out
retf
fcomp
hlt
mov
and
mov
or
mov
xor
fadd
mov
pop
fdivr
popa
clc
div
adc
and
cld
jae
push
shr
pop
jmp
out
aam
cmpxchg
mov
int3
int3
int3
int3
int3
int3
stos
aad
sub
cmps
sub
call
dec
outs
dec
and
sub
pop
xbegin
or
xchg
add
scas
push
pop
ds
mov
test
std
add
adc
cwde
and
xchg
adc
les
mov
push
shl
mov
xor
shr
jae
xor
xor
lea
ss
jne
adc
lahf
jb
popf
adc
dec
out
xchg
sbb
jne
lods
mov
int3
int3
int3
int3
int3
or
fcmovu
pop
int
test
mov
mov
loope
sub
addr16
dec
mov
stc
lods
lods
iret
cmp
not
imul
ss
int3
int3
int3
int3
int3
repz
mov
and
cli
pop
push
jp
xchg
push
aad
lods
sahf
or
xchg
loopne
rcr
or
fwait
xchg
pop
bound
sub
jb
out
push
fisubr
popf
pop
je
inc
movs
jne
sbb
lods
pusha
fadd
push
ss
lods
and
int3
int3
int3
int3
int3
mov
fild
mov
sti
ret
mov
(bad)
mov
mov
mov
cdq
xchg
setne
fwait
xchg
jnp
add
adc
inc
aam
popf
mov
int3
int3
int3
int3
jmp
push
out
mov
cmp
mov
mov
in
(bad)
(bad)
dec
inc
retf
xchg
xchg
daa
mov
or
ss
cmps
xchg
push
pop
jecxz
out
addr16
dec
sbb
push
hlt
loopne
sub
fldcw
std
je
stos
add
in
(bad)
call
jge
jae
cmps
mov
jbe
adc
loop
jp
xchg
xchg
std
je
stc
adc
pop
and
add
aad
js
out
lds
mov
and
icebp
ret
lods
mov
std
sub
push
fiadd
test
dec
rol
push
int3
int3
int3
int3
int3
mov
arpl
jmp
shr
push
mov
xchg
push
lds
retf
xchg
test
inc
mov
mov
idiv
in
int3
int3
int3
int3
int3
mov
push
fwait
push
into
lods
sub
sbb
call
jle
xchg
and
adc
loop
ror
inc
push
mov
popa
pop
sbb
dec
jo
xor
cli
mov
push
cmp
dec
(bad)
fidivr
mov
int3
nop
cld
les
dec
stc
jno
xchg
adc
inc
jp
adc
sub
es
xor
pop
jmp
mov
xchg
sbb
adc
int3
int3
push
push
inc
cmp
sbb
mov
sbb
cmc
xchg
into
jmp
or
in
xor
mov
xor
or
mov
stos
test
or
dec
mov
inc
mov
arpl
cli
pop
out
mov
jae
xor
fsub
push
mov
cmp
pop
xchg
out
int3
int3
int3
int3
xchg
stos
loope
int3
rcl
add
mov
ja
dec
lods
nop
jmp
data16
add
je
dec
cli
cmp
lds
jae
lahf
aas
pop
adc
push
mov
jge
repz
xor
adc
sbb
fadd
call
imul
mov
mov
repnz
cld
or
fmul
movs
mov
add
mov
jl
cmp
or
mov
call
push
and
add
aad
sbb
add
ja
pop
sbb
int3
int3
int3
int3
loope
rcl
and
addr16
fimul
push
icebp
push
xchg
mov
repnz
cmps
sub
and
lds
push
xchg
sbb
add
mov
pusha
sub
jge
(bad)
xlat
hlt
int3
int3
int3
int3
int3
or
ror
popf
pop
cmp
push
or
loop
jecxz
into
add
mov
pop
and
fwait
add
movs
int3
int3
int3
int3
int3
pop
xchg
pop
fstp
mov
outs
or
(bad)
nop
xor
fidivr
jb
mov
cmps
adc
sbb
inc
pop
shl
les
jb
les
add
sahf
repz
cmp
dec
jge
int
js
(bad)
ror
call
dec
or
(bad)
int3
int3
int3
int3
inc
inc
mov
add
jecxz
dec
xchg
add
pop
loopne
sbb
jp
sub
div
cmp
sub
add
inc
adc
cmp
outs
push
fstp
in
aaa
push
out
pop
push
out
sbb
int3
int3
std
mov
test
or
enter
xor
(bad)
(bad)
cld
scas
cmp
sub
xor
mov
cmp
jne
rcl
xor
xchg
pop
jmp
rol
or
cs
xlat
outs
out
jnp
adc
inc
and
int3
int3
inc
imul
int3
sbb
or
dec
dec
icebp
adc
aas
test
pushf
imul
loope
retf
xor
fcomp
inc
jne
aas
mov
add
stc
sbb
fsubr
pop
push
int3
ror
dec
ret
mov
shr
xchg
cdq
in
cwde
fcomp
(bad)
rcr
add
push
daa
mov
or
dec
pop
mov
sub
sub
inc
ds
int3
int3
int3
int3
pop
xchg
sbb
push
std
imul
cs
jne
out
cmp
jmp
sbb
dec
cmp
cmc
mov
cmp
inc
jmp
jge
movs
xor
int3
int3
int3
int3
enter
jl
sub
neg
push
(bad)
push
fsub
ja
repnz
sub
inc
mov
loopne
outs
iret
and
inc
cmp
int3
int3
int3
int3
and
test
clc
pushf
xor
sbb
call
rcr
add
pop
xor
sbb
mov
pop
push
jo
aaa
adc
sub
dec
(bad)
call
dec
xchg
std
or
int3
or
dec
or
mov
outs
jmp
ret
fbstp
pop
or
rdtsc
hlt
push
call
add
call
sub
jne
cmps
push
fsubr
fld
sub
and
xor
xchg
mov
ret
das
aam
mov
dec
int3
int3
int3
int3
and
push
push
push
mov
cwde
xchg
push
inc
push
fwait
loop
inc
pop
jns
jge
and
mov
xchg
stos
mov
push
test
aam
mov
call
neg
push
int3
int3
int3
int3
int3
movs
cdq
gs
xchg
jecxz
inc
add
and
mov
xchg
fbstp
repnz
add
out
repnz
jno
popa
pop
out
or
inc
xor
in
inc
cmp
mov
test
int3
int3
int3
int3
pop
mov
mov
xchg
xchg
loopne
scas
sahf
push
ja
push
cmp
pop
adc
mov
ss
test
inc
dec
sbb
int3
int3
int3
int3
push
inc
adc
sahf
fnsave
shl
pop
aaa
popf
pop
fs
mov
add
mov
pop
daa
and
in
adc
cmps
fadd
(bad)
or
int3
int3
int3
int3
repz
pop
sub
fs
xchg
call
pop
cli
cmp
pop
jnp
adc
ficom
inc
mov
dec
pushf
xchg
adc
jb
jmp
mov
pushf
add
mov
mov
aaa
int3
int3
int3
int3
int3
cmp
pop
push
jns
aaa
jno
imul
mov
mov
xor
push
and
call
sbb
pushf
cmp
jmp
out
ficomp
pop
out
retfw
int3
int3
int3
int3
int3
push
scas
aam
adc
jp
aaa
jmp
cmc
jns
push
push
adc
das
dec
repnz
js
adc
int
loope
pop
dec
movs
sub
mov
or
inc
loope
dec
js
adc
cmp
jl
mov
lods
(bad)
int3
int3
int3
int3
int3
in
sbb
xchg
jns
push
push
div
push
xchg
mov
push
xor
cmp
les
push
push
mov
jp
jae
add
cwde
test
ins
sbb
dec
and
ins
mov
(bad)
dec
xchg
push
rol
cmp
loop
les
inc
xchg
mov
jae
bound
xor
mov
dec
int3
int3
int3
int3
int3
loopne
xor
cmp
push
pop
clc
adc
jl
add
mov
jp
mov
inc
sub
cli
jp
fbld
bound
mov
dec
hlt
mov
xchg
pop
(bad)
int3
int3
int3
int3
int3
mov
mov
mov
jle
repnz
mov
jmp
mov
retf
das
cmp
sar
push
lock
cdq
inc
mov
push
inc
scas
pop
pop
mov
add
int3
int3
int3
int3
int3
les
xor
add
jae
xor
cmps
aaa
pop
dec
mov
stos
movs
jge
repz
pop
lods
(bad)
loop
rol
pop
add
mov
adc
cmp
sbb
int3
int3
int3
pop
ins
icebp
repnz
test
push
(bad)
dec
popa
(bad)
push
ror
ror
mov
jae
dec
mov
js
(bad)
pop
mov
out
and
adc
gs
add
xchg
aas
pop
sbb
ins
sahf
push
sub
pop
add
lock
outs
pop
xor
and
push
mov
int3
int3
int3
int3
lds
test
out
mov
out
and
push
dec
or
call
or
cmc
daa
push
mov
mov
mov
adc
xchg
ds
mov
push
pop
ja
push
cwde
or
sub
adc
cmp
call
int3
icebp
int3
int3
int3
int3
int3
push
add
(bad)
imul
in
mov
es
imul
adc
mov
int3
std
pop
not
push
mov
mov
xlat
sub
outs
(bad)
pushf
jge
or
pop
into
push
int
aam
adc
es
xchg
out
fcom
cmps
mov
xlat
pop
sub
aas
or
push
loop
(bad)
or
mov
and
loop
int3
int3
int3
int3
int3
out
cs
adc
loope
daa
and
iret
icebp
ins
lahf
mov
in
xor
stc
repnz
addr16
push
dec
add
loopne
call
(bad)
aas
sahf
adc
xchg
mov
imul
cld
sbb
fs
(bad)
xor
int3
int3
int3
int3
int3
fdiv
push
sub
cmp
pop
in
xchg
jg
inc
inc
add
in
inc
add
dec
mul
adc
sub
popf
jg
es
add
sbb
ret
int3
int3
int3
int3
int3
sbb
mov
add
jge
jne
add
sub
ins
imul
pop
out
cmp
repz
cwde
push
sar
clc
pop
adc
test
rcr
loope
int3
int3
int3
int3
ins
bound
sub
cmp
sub
loopne
dec
mov
fdiv
pushf
jle
fwait
clc
outs
test
and
(bad)
outs
pop
ins
jo
aas
es
(bad)
xchg
sar
mov
mov
ret
push
mov
repnz
adc
add
aad
add
push
or
iret
inc
pop
loop
jnp
add
add
js
int3
int3
int3
int3
movlps
push
in
adc
inc
iret
pop
pop
and
mov
packuswb
mov
ret
xor
ins
sub
ds
pop
and
sub
adc
cmp
int3
int3
int3
int3
int3
test
pop
sbb
rol
das
ret
or
call
push
push
and
test
xchg
mov
outs
in
(bad)
addr16
aas
xchg
jnp
inc
jne
loopne
xor
in
push
xor
das
pushf
push
aad
mov
adc
int3
int3
int3
cwde
mov
into
div
xchg
adc
addr16
add
test
popa
ds
inc
hlt
js
adc
mov
xchg
push
jge
int3
xor
scas
mov
mov
sahf
mov
cmp
int3
int3
int3
int3
int3
mov
push
ds
jge
sub
loope
aas
fsubr
sbb
mov
ss
mov
cmps
adc
cmp
(bad)
mov
popf
mov
sbb
test
test
xor
cmp
fcmovb
dec
jecxz
cdq
leave
scas
sub
jb
mov
inc
aad
pop
pusha
ins
jg
sbb
scas
pushf
or
mov
aam
test
int3
int3
int3
int3
sub
loope
pusha
out
outs
ret
cli
and
cmp
sbb
in
bound
jle
dec
pop
js
in
in
inc
movs
jae
mov
outs
cs
and
sub
mov
retf
inc
dec
sub
adc
repz
int
or
shl
test
int3
dec
inc
std
sub
scas
frstor
ret
lea
imul
out
push
aaa
xchg
sub
xchg
int3
jge
(bad)
mov
mov
fs
push
and
pusha
xchg
and
shl
cmp
call
out
rol
lea
pop
cmp
pop
push
call
jns
cs
shl
mov
ds
push
imul
int
push
sbb
pmaddwd
pop
pop
inc
xor
fcom
push
les
mov
push
jecxz
sub
test
scas
jle
inc
ret
aad
cwde
sub
scas
push
lods
fcomp
add
retf
adc
js
iret
dec
(bad)
stc
sub
xchg
cmc
call
int3
int3
int3
int3
int3
mov
dec
pop
inc
xor
dec
call
stos
and
imul
push
lock
xchg
in
inc
retf
adc
cli
mov
adc
cmp
iret
rcl
(bad)
xchg
sbb
loope
imul
lock
or
movs
pop
mov
cmps
sub
xor
rol
sahf
pop
call
cli
jp
ds
outs
leave
loopne
dec
jecxz
ins
sub
sbb
and
pushf
test
in
mov
popf
fs
mov
pop
mov
sbb
mov
pop
ja
stc
sub
retf
lods
scas
and
jmp
mov
sahf
leave
adc
xor
aaa
ins
inc
fmul
call
mov
int3
int3
int3
int3
int3
push
xor
popa
dec
pushf
pop
dec
jmp
adc
retf
(bad)
(bad)
or
mov
and
cs
fxam
cmp
jno
or
retf
xor
push
mov
ins
jge
int3
xchg
cmps
cmp
xor
fnsave
push
pop
mov
cmp
mov
popa
in
inc
jl
in
aaa
pop
adc
fidiv
rcl
jb
jno
push
adc
jecxz
in
sbb
and
sbb
lahf
arpl
cwde
mov
stos
outs
std
sbb
cmp
xchg
popa
jne
leave
repz
adc
mov
lahf
mov
adc
inc
stc
ds
lds
inc
mov
ds
inc
mov
je
sbb
xor
int3
arpl
dec
add
inc
es
int3
int3
int3
int3
pop
and
add
int3
jg
and
push
sbb
es
cdq
mov
sahf
adc
sub
jno
push
sbb
mov
iret
das
xchg
inc
in
mov
xor
xchg
enter
outs
stos
nop
pop
adc
pop
mov
out
sub
loopne
mov
clc
into
adc
push
jo
jo
adc
call
inc
cdq
ins
mov
outs
aaa
pop
aaa
xchg
dec
repnz
mov
lock
mov
(bad)
pop
jbe
iret
mov
shr
popa
int
(bad)
or
mov
inc
cmps
mov
int3
int3
int3
scas
(bad)
and
fisub
repz
scas
shl
iret
fiadd
frstor
ja
adc
pop
scas
mov
fs
icebp
daa
into
cwde
movs
mov
fisubr
xchg
int3
int3
int3
int3
xchg
xchg
inc
jb
pushf
xor
in
or
pop
or
lods
mov
xor
lods
and
pop
ins
int3
ficomp
in
push
mov
cld
adc
frstor
pop
test
adc
fs
aam
mov
je
lea
jns
push
xor
jb
mov
lods
ret
jno
inc
nop
and
shr
mov
int3
int3
int3
int3
int3
sbb
jno
nop
cmp
cmps
jno
mov
mov
das
add
in
pop
mov
sub
cmps
hlt
mov
inc
mov
out
lea
les
mov
mov
in
or
scas
nop
inc
jmp
int3
jmp
adc
into
ins
into
lods
jns
jo
mov
(bad)
in
rcl
push
and
scas
or
enter
mov
pop
xchg
mov
jnp
mov
or
cmps
test
xchg
mov
jne
push
pop
cwde
sub
and
cld
test
or
fs
or
in
inc
jmp
pushf
jecxz
fdivr
dec
adc
in
ja
xor
scas
pusha
inc
(bad)
and
sub
rcl
cmp
mov
int3
int3
int3
sub
nop
mov
pop
out
arpl
dec
rol
addr16
out
punpcklwd
pop
mov
jb
fld
adc
sbb
add
sahf
xor
mov
int
cmp
stos
data16
out
(bad)
cmc
addr16
inc
int3
int3
int3
int3
int3
nop
push
and
dec
(bad)
mov
mov
push
mov
call
adc
out
fwait
push
loop
fidiv
stos
adc
mov
ins
jp
and
and
sbb
mov
shl
mov
dec
adc
stos
inc
jge
push
movs
jb
daa
add
int3
int3
int3
int3
int3
sub
dec
push
jnp
dec
or
push
mov
push
lock
loope
in
and
cmp
gs
or
mov
int3
jno
mov
shl
mov
int3
lea
pop
scas
pop
mov
xchg
jno
cmp
clc
or
(bad)
not
mov
imul
lods
std
mov
cmp
push
call
and
scas
movs
out
or
test
retf
int3
int3
int3
int3
int3
int3
leave
test
imul
hlt
fs
ss
aad
rol
ficom
(bad)
(bad)
jne
sbb
lock
pop
into
ss
jmp
mov
(bad)
movs
scas
push
imul
popf
mov
push
dec
or
out
repnz
xor
xlat
into
xchg
mov
jecxz
adc
jmp
aam
js
int3
int3
int3
int3
int3
lahf
cmp
daa
out
sahf
hlt
xor
test
push
mov
sar
push
lds
aam
dec
mov
pop
mov
js
mov
rcr
out
xchg
or
mov
dec
stc
(bad)
push
mov
or
push
pop
sbb
xlat
dec
add
adc
sti
ja
(bad)
cmc
neg
int3
int3
pop
imul
cmp
cmp
xchg
cwde
icebp
test
adc
and
jno
sbb
out
fbld
cmp
push
mov
cmp
(bad)
push
add
lea
dec
sar
(bad)
dec
mov
jbe
je
add
adc
cdq
shl
inc
out
sbb
mov
pop
pop
int3
int3
int3
int3
int3
dec
push
rcl
push
sub
ret
push
mov
sub
jp
jne
icebp
test
mov
inc
mov
pushf
sbb
and
xor
xor
retf
mov
addr16
mov
inc
jae
pop
sub
sub
retf
movs
adc
(bad)
fcmovu
inc
fdiv
int3
scas
pushf
arpl
xchg
div
push
mov
sub
mov
(bad)
cmp
inc
popf
jno
data16
xor
jns
push
push
adc
imul
sub
repnz
mov
push
dec
test
fdiv
or
push
and
pop
(bad)
repz
mov
rcl
fsubr
jne
cmp
out
cmps
je
mov
inc
or
sbb
xchg
popf
int3
int3
int3
int3
int3
lock
popf
sub
pop
rcl
dec
or
aas
adc
into
ror
std
imul
outs
xchg
retf
pop
aam
out
mov
jb
iret
add
inc
mov
ja
sti
xchg
dec
xchg
cmp
int3
int3
int3
int3
pop
fstp
mov
pop
popa
add
sti
pushf
jg
loop
paddd
or
or
mov
cmps
push
clc
sbb
nop
test
mov
mov
cli
xor
je
int3
int3
int3
int3
(bad)
xchg
fst
or
pop
jle
loop
pop
cmp
mov
loopne
(bad)
cmp
stos
mov
xchg
fs
mov
xor
repz
fyl2xp1
int3
int3
int3
int3
int3
call
mov
in
in
mov
xor
fsubr
sbb
or
scas
jg
inc
cwde
cmp
sahf
in
jg
cmp
pop
mov
or
(bad)
repnz
and
sbb
stc
add
int3
int3
xchg
sbb
stc
push
adc
sbb
inc
sahf
add
(bad)
sbb
ss
fisubr
and
dec
sub
cmp
fdivr
scas
ja
sbb
cmp
sub
jmp
mov
int3
int3
int3
int3
int3
test
or
call
ins
mov
mov
cwde
ret
dec
sub
fadd
push
push
cdq
adc
inc
sub
dec
dec
out
fs
xchg
int3
int3
int3
int3
int3
std
repnz
movs
aam
push
cmps
scas
movs
lock
into
cmp
sahf
mov
movs
(bad)
rcl
dec
sbb
mov
int3
int3
int3
int3
mov
movs
jecxz
cmp
dec
mov
and
cmp
popf
or
jg
(bad)
fwait
sti
into
lock
jae
fwait
jge
dec
sub
pop
mov
bound
loope
mov
inc
es
enter
mov
dec
pusha
jge
nop
sub
mov
mov
xchg
and
mov
int3
int3
int3
int3
in
xchg
add
mov
sti
iret
repnz
jns
push
xor
adc
iret
xchg
mov
dec
mov
enter
lock
inc
push
mov
movs
packuswb
aad
sbb
xchg
dec
jo
ins
daa
fstp
loop
hlt
mov
jg
repnz
push
push
mov
ret
int3
int3
int3
int3
adc
mov
call
(bad)
sbb
sbb
pop
xor
sbb
jmp
mov
das
push
xor
and
int3
xor
sar
fwait
into
and
daa
or
test
popf
mov
ja
push
into
xor
cmp
pop
stos
jmp
stos
in
(bad)
and
xor
add
mov
lds
xlat
push
push
(bad)
loope
call
int3
int3
int3
int3
test
dec
retf
xchg
jmp
push
mov
mov
pop
repnz
mov
fsub
push
(bad)
call
pop
lods
mov
lock
sbb
data16
cdq
daa
repz
jg
push
push
or
mov
or
scas
inc
(bad)
cmp
int3
int3
int3
int3
int3
aad
pop
push
loopne
push
cmp
fsubrp
adc
fdivr
xor
jge
les
push
lods
test
hlt
inc
push
or
dec
push
lahf
xor
add
enter
out
and
push
arpl
(bad)
movhps
sbb
mov
int3
int3
int3
int3
rol
and
inc
fmul
fisttp
loopne
jle
mov
outs
mov
cmp
ret
shl
xlat
cmp
xchg
xlat
and
mov
mov
xor
push
int3
fucomp
push
xor
out
cdq
add
in
jp
jns
push
imul
and
xlat
push
stos
mov
test
cmps
test
scas
adc
mov
(bad)
loop
leave
mov
int3
int3
aad
push
xor
xchg
movs
out
adc
xor
mov
push
push
mov
and
xchg
mov
push
out
push
dec
sbb
jle
int3
out
in
jno
jbe
(bad)
jae
jmp
retf
fmul
je
int3
int3
int3
int3
int3
adc
pop
sub
(bad)
and
sub
jmp
dec
pop
add
jp
movs
pop
add
inc
daa
and
inc
pop
jnp
mov
jbe
push
lds
pop
fimul
add
out
inc
aam
mov
sbb
cmp
jecxz
outs
sbb
mov
in
cs
push
popaw
jp
(bad)
mov
push
in
jno
xor
adc
repnz
ret
cmp
pushf
out
int3
int3
int3
int3
int3
cs
cli
push
adc
out
in
dec
pop
les
daa
cs
(bad)
sub
xchg
ds
ret
rcr
xor
ret
and
cmp
mov
popf
mov
inc
push
mov
lods
int3
int3
int3
int3
int3
neg
fnstsw
aaa
adc
mov
(bad)
enter
cmp
(bad)
and
pop
and
push
jns
lock
inc
dec
cli
cmps
jbe
inc
scas
push
out
dec
dec
jg
popa
int3
int3
int3
int3
int3
pop
fld
cmps
lds
(bad)
cmp
mov
push
rcr
fst
jge
xor
out
mov
aad
add
int3
int3
int3
int3
int3
xchg
cmp
dec
div
popf
test
add
fmul
nop
pop
in
xchg
(bad)
div
and
adc
push
inc
sbb
adc
cmc
lahf
mov
shl
mov
sbb
int3
int3
int3
int3
je
jo
mov
xor
in
loop
pop
sub
mov
or
sbb
inc
idiv
add
cdq
xlat
cmp
pusha
mov
cmp
data16
cmp
lds
add
cmps
out
cmp
(bad)
jmp
dec
pop
loopne
pushw
xchg
int3
int3
int3
int3
int3
xor
fst
pusha
test
adc
jo
cmp
xchg
cli
bound
inc
adc
adc
mov
icebp
xor
leave
int
sbb
dec
cld
push
inc
pop
outs
and
fistp
int3
jmp
leave
cmp
sahf
mov
sbb
push
sub
pop
sub
jmp
cmps
loopne
and
sbb
rol
out
jl
mov
mov
shr
mov
int3
int3
jbe
jge
dec
mov
xchg
jmp
inc
outs
jle
cmps
ins
push
outs
adc
cld
cdq
and
pop
adc
cmp
dec
cmp
cmp
lock
fucompp
inc
mov
int3
int3
int3
int3
and
cmp
inc
(bad)
div
dec
in
push
(bad)
sti
sbb
adc
adc
xchg
xchg
mov
add
int
fstp
adc
sti
xchg
fild
dec
sti
lahf
vphsubdq
and
pop
int3
int3
int3
int3
int3
inc
test
inc
movs
nop
or
cs
jno
aas
jl
mov
movs
sti
push
sbb
xor
sbb
or
mov
outs
cmps
rcr
jmp
dec
out
jecxz
push
(bad)
retf
cmp
int3
int3
sbb
dec
and
shl
lods
adc
push
repnz
lahf
cmp
jne
and
mov
jmp
xchg
adc
jge
pop
mov
(bad)
push
ror
xor
int3
int3
int3
int3
sbb
mov
mov
addr16
cwde
test
xor
sbb
and
sub
xchg
out
push
outs
leave
idiv
mov
sti
mov
mov
outs
jp
int3
int3
int3
int3
int3
pop
mov
sbb
ja
(bad)
push
sbb
stc
cmp
stos
outs
dec
addr16
or
lea
xchg
loope
in
fmul
push
add
out
test
stc
(bad)
popa
and
int3
int3
loope
(bad)
mov
mov
shl
loopne
sti
jne
inc
pop
comiss
out
cmp
stos
out
outs
hlt
movs
iret
out
push
jns
jle
mov
adc
call
imul
xor
int3
int3
push
lea
cwd
int3
jp
and
dec
mov
and
bound
push
pop
es
js
adc
gs
dec
xchg
mov
add
xor
stos
cmp
test
in
movs
pop
(bad)
icebp
mov
int3
int3
int3
int3
mov
fld
and
cwde
jmp
int
pop
xchg
xchg
pop
sti
in
mov
arpl
or
and
xor
fsub
aad
and
ror
pop
cmp
mov
xchg
out
in
lods
int3
int3
int3
int3
int3
test
push
dec
xchg
popf
cli
pop
loope
or
and
aad
movs
lock
std
adc
outs
xor
sub
mov
jne
fsub
mov
loope
popf
or
inc
leave
fldenv
jbe
pop
iret
int3
int3
int3
int3
int3
sbb
inc
outs
shl
and
data16
gs
in
lock
jmp
in
mov
jne
and
nop
outs
shr
inc
int
stc
das
xor
out
sub
and
and
mov
mov
adc
fs
retf
mov
xor
xchg
int3
int3
mov
push
mov
mov
push
call
mov
mov
call
mov
mov
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
in
pop
lds
or
test
mov
fisttp
add
push
popf
and
mov
jmp
fcmovne
mov
jmp
addr16
shl
adc
retf
mov
int3
int3
int3
int3
int3
or
add
repnz
jns
add
mov
lods
out
ficom
xor
retf
jo
push
aaa
cmp
outs
push
push
pop
or
xchg
rcl
out
gs
mov
pop
call
jl
inc
cmp
jg
xor
ss
sbb
mov
inc
int3
add
mov
add
stos
inc
in
sahf
inc
int3
int3
int3
int3
int3
xchg
rcl
mov
add
jge
outs
dec
ss
fisubr
sub
jecxz
dec
push
push
dec
sbb
(bad)
mov
popf
int3
int3
int3
int3
int3
push
sbb
mov
push
and
cwde
cmp
sub
inc
jmp
test
in
push
push
adc
push
mov
pop
sbb
jne
jl
mov
push
idiv
cs
add
jne
nop
data16
sbb
pop
aad
outs
ss
adc
push
or
or
inc
fnstsw
xchg
gs
sbb
push
imul
mov
int3
popf
stc
rcr
sbb
xchg
cmp
and
lock
push
xchg
mov
mov
mov
push
pop
enter
push
jnp
call
mov
jmp
mov
jle
xchg
mov
dec
in
mov
push
xchg
ins
push
jg
fdecstp
pop
loopne
ret
(bad)
int3
int3
int3
int3
xor
mov
or
cmp
mov
dec
sbb
cmp
fcomp
rcl
loope
in
imul
add
call
int3
int3
int3
int3
int3
mov
test
sbb
ret
sahf
(bad)
cmc
dec
enter
or
aas
mov
dec
int
mov
pop
sbb
mov
jmp
mov
mov
push
xchg
jo
dec
mov
imul
pop
scas
pop
inc
pop
jb
push
sti
sbb
or
mov
add
pusha
test
mov
mov
out
(bad)
int3
int3
int3
int3
int3
push
test
xchg
imul
pop
retf
jo
sti
push
mov
xchg
cmp
mov
mov
sti
xchg
jmp
ins
cmp
and
mov
int3
int3
int3
int3
int3
out
hlt
out
aam
int3
addr16
not
movs
je
mov
shl
daa
and
int
pop
fimul
inc
jge
cs
in
cli
xchg
mov
shr
add
xchg
adc
int3
int3
int3
int3
push
jnp
int3
lock
inc
mov
xor
xor
push
cdq
sub
push
cmc
and
outs
mov
fist
(bad)
sbb
in
or
mov
jb
stos
add
dec
pushf
call
dec
int3
int3
int3
int3
int3
cmp
or
xchg
add
push
mov
push
or
inc
cmp
dec
stos
fcom
gs
outs
les
iret
icebp
std
adc
retf
gs
js
pushw
mov
jbe
retf
sbb
int3
int3
int3
int3
int3
stc
jp
pop
sbb
xchg
push
cmp
rcl
jle
icebp
jne
aam
jmp
call
add
cmc
jge
iret
and
sar
movs
xchg
rcr
addr16
jecxz
cmps
inc
inc
ds
pop
repnz
mov
ins
xor
ret
adc
outs
mov
shl
xor
clc
loopne
shl
bound
and
jo
pop
js
cmp
mov
jecxz
pop
jge
imul
(bad)
adc
dec
sbb
daa
popf
pop
pop
jmp
daa
call
sub
sub
dec
push
retf
mov
aam
push
stos
dec
jae
test
call
inc
fcomp
adc
dec
jo
xchg
or
jecxz
dec
mov
int3
int3
int3
cdq
movs
cli
sahf
jl
jbe
pop
cmp
rcl
icebp
clc
mov
int3
int3
int3
int3
int3
mov
mov
loop
leave
in
xchg
imul
xlat
push
push
sbb
inc
call
aam
lock
sub
je
fidivr
inc
mov
mov
repz
iret
(bad)
popa
add
int3
int3
int3
dec
push
ins
sbb
jmp
outs
sbb
jmp
test
ficomp
cmc
xor
push
lea
mov
push
pop
int3
imul
test
cld
mov
pop
xchg
int3
push
sub
push
mov
int3
int3
int3
int3
int3
fs
push
and
xor
dec
fstp
xchg
sar
leave
cld
test
ret
cmp
or
mov
sbb
or
mov
jmp
(bad)
lods
mov
sbb
xor
pop
int3
int3
int3
int3
int3
pop
sbb
(bad)
cmps
mov
sub
stos
ds
xor
scas
or
cmps
inc
ins
push
pusha
xchg
ret
push
test
push
or
push
ja
jns
lods
mov
sbb
jno
icebp
enter
int3
int3
int3
lock
push
stc
in
xchg
push
add
ror
sbb
pop
out
xchg
push
call
test
mov
aas
push
cmp
cmp
push
pop
mov
mov
je
push
leave
pop
std
adc
cmps
stos
pop
xchg
aam
int3
int3
int3
int3
neg
cmc
fld
add
lods
(bad)
data16
cwde
icebp
push
mov
push
add
push
in
mov
int3
shl
imul
sub
or
es
int3
int3
int3
int3
outs
jmp
or
or
adc
pop
jg
jne
xchg
jae
mov
mov
cld
xchg
pop
pop
push
add
pushf
je
iret
adc
into
popa
jmp
retf
gs
int3
int3
int3
int3
loop
xlat
scas
sar
jg
dec
addr16
or
and
pop
xor
js
adc
xor
out
imul
lahf
into
sbb
sbb
int
in
jne
sub
mov
fistp
mov
xchg
jge
and
cs
adc
int3
int3
int3
int3
rol
mov
jge
dec
gs
mov
mov
push
cmp
lock
ficomp
jecxz
xor
sub
call
mov
fsubr
add
rol
sub
mov
sar
push
push
jge
outs
mov
xchg
pop
push
mov
fisttp
movs
int3
int3
int3
int3
int3
add
and
push
imul
xor
mov
aam
sbb
hlt
cmp
inc
mov
sbb
add
stc
jp
xchg
dec
xor
(bad)
repz
mov
(bad)
imul
int3
int3
int3
int3
fnstenv
ss
adc
(bad)
cwde
and
mov
dec
retf
iret
mov
xchg
ret
inc
jle
sbb
xchg
adc
add
int3
int3
int3
int3
int3
sub
nop
cli
adc
(bad)
call
loopne
dec
cdq
mov
push
lock
fmul
add
xlat
rcr
mov
mov
sti
cmp
int3
int3
int3
int3
movs
inc
(bad)
in
mov
dec
cdq
mov
mov
mov
push
loop
iret
into
sub
mov
cwde
ja
fsubrp
in
and
repnz
jp
sbb
push
es
push
inc
std
(bad)
add
test
js
int3
int3
int3
int3
pop
loope
stc
loopne
leave
jb
xchg
pop
mov
jecxz
jmp
(bad)
stc
pop
jbe
call
sahf
movs
cld
into
retf
push
inc
jmp
or
mov
sbb
jae
push
add
xchg
mov
fld
hlt
xchg
push
stc
movs
mov
inc
sub
dec
push
xor
shl
int3
int3
and
aas
outs
push
sbb
lea
xor
xor
fstp
jmp
sbb
sub
xlat
or
jp
inc
jno
into
sub
xlat
jmp
adc
ret
dec
ja
inc
fwait
(bad)
icebp
int3
int3
int3
int3
int3
test
xor
std
mov
lods
jb
loopne
add
jo
test
and
cld
stc
sbb
ficom
dec
enter
sub
jmp
int3
int3
int3
int3
int3
(bad)
sbb
imul
mov
cmp
dec
scas
mov
in
push
mov
imul
push
mov
sub
jae
mov
mov
add
lea
int3
int3
int3
das
inc
ss
retf
js
pop
jo
mov
xchg
xchg
xor
push
xor
or
dec
and
add
out
sbb
mov
sti
std
mov
aas
or
das
xor
jl
int3
int3
int3
int3
push
(bad)
push
xor
and
pop
ja
ins
cmp
sub
push
and
icebp
and
call
adc
jno
sbb
outs
jmp
stc
inc
pusha
mov
cs
mov
int3
int3
int3
int3
cmp
(bad)
sar
mov
cmps
loope
mov
imul
jae
adc
outs
cld
jge
rcr
sub
cli
adc
imul
or
mov
int3
int3
int3
int3
int3
xchg
(bad)
rol
in
cmp
loope
cmp
stc
test
inc
or
je
jae
pop
rcr
sar
or
jmp
fistp
adc
adc
or
xor
sub
int
ins
in
mov
std
sub
or
je
ja
int3
int3
int3
int3
int3
or
shr
bound
repnz
aaa
and
lods
cmps
inc
repnz
jo
fild
call
cmps
jg
xor
je
jnp
gs
sub
ret
int3
int3
int3
sub
test
mov
pop
les
xor
mov
mov
fldcw
mov
pop
adc
adc
push
inc
adc
cmp
rep
outs
test
inc
mov
sub
imul
rcl
retf
iret
stc
mov
cmp
into
ror
pop
ror
arpl
inc
pop
in
pop
out
jae
mov
push
sar
mov
inc
jle
nop
loop
xor
(bad)
xchg
xor
and
int3
int3
int3
int3
push
mov
pusha
add
retf
or
cld
push
sub
mov
clc
xor
add
pop
xchg
xchg
push
imul
int3
int3
int3
int3
jmp
fidivr
cmp
inc
or
loopne
xchg
ret
mov
mov
mov
mov
sbb
mov
arpl
lods
outs
rol
imul
daa
stos
or
sbb
int3
int3
int3
int3
int3
test
les
ss
out
sti
cmp
fisub
jb
jno
push
fistp
sub
pusha
cwde
push
int3
int3
int3
int3
int3
cmps
mov
cld
(bad)
mov
adc
test
repz
sti
ins
(bad)
ficomp
mov
aaa
cmps
mov
mov
adc
mov
xor
jmp
rcl
and
js
mov
stc
xor
movs
inc
mov
xor
xchg
mov
cmp
jmp
pusha
mov
test
int3
int3
int3
int3
cli
and
inc
dec
loope
mov
retf
jmp
cld
sbb
aas
sbb
adc
mov
test
retf
aas
inc
pop
pop
dec
gs
dec
out
pop
ror
inc
add
fdivr
cmp
and
ja
cmp
retf
fadd
xchg
push
data16
or
aaa
xchg
pop
ret
int
(bad)
add
fwait
xchg
int3
int3
int3
int3
xor
dec
vcvtsi2ss
xchg
mov
adc
into
sub
fdiv
imul
xor
xor
dec
xchg
or
cmp
pop
das
dec
adc
imul
rol
jns
dec
cli
ret
push
mov
ss
xor
dec
mov
sbb
inc
push
pop
pop
and
cmps
fcom
push
push
mov
mov
int3
int3
int3
mov
fcom
add
out
push
gs
xchg
(bad)
pushf
and
xchg
cdq
out
cwde
imul
lock
xchg
pop
retf
xchg
adc
pop
repz
(bad)
(bad)
fst
mov
push
mov
mov
aad
stos
jmp
pop
jnp
dec
mov
fcmovnb
and
cmp
pop
je
gs
fwait
enter
cmc
push
mov
mov
test
adc
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
push
push
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
xlat
sub
mov
pop
mov
lods
push
lahf
es
jle
outs
or
or
jl
inc
daa
in
pop
clc
push
das
or
mov
sub
stc
fwait
in
cmp
or
loope
fwait
(bad)
addr16
test
sahf
sub
mov
cmp
xchg
lea
xor
xchg
xchg
or
and
jmp
inc
std
scas
cmps
data16
xchg
xchg
xchg
xchg
inc
shl
jmp
push
out
lds
dec
popa
out
in
loop
or
mov
rcl
dec
jecxz
fwait
(bad)
mov
int3
int3
int3
sbb
aad
jae
(bad)
loope
or
clc
inc
ret
leavew
xor
call
xor
(bad)
ficomp
sbb
pop
xchg
std
xchg
dec
push
push
xlat
lods
dec
and
test
push
fneni(8087
adc
mov
fwait
add
sbb
xchg
lahf
imul
mov
fs
int3
int3
int3
int3
(bad)
fild
cmp
fist
xchg
mov
push
jmp
loope
inc
movs
pop
test
sub
int3
js
sbb
inc
pop
imul
pop
or
or
xor
clc
ins
cmp
rcr
cmp
fs
cmps
fsubp
pop
jmp
cmps
aam
push
dec
in
lods
mov
retf
add
add
inc
sub
jge
imul
sub
stos
(bad)
xchg
and
jb
cdq
or
mov
shl
cmp
addr16
(bad)
scas
jg
nop
in
(bad)
sbb
outs
xor
inc
and
jne
test
adc
and
(bad)
mov
fisttp
xlat
or
int3
jecxz
or
adc
pop
aam
push
mov
lods
jae
jmp
or
pop
jae
jae
pop
cli
mov
cld
mov
pop
lds
pusha
xor
jnp
popf
(bad)
dec
push
xor
pop
inc
mov
mov
(bad)
fwait
sbb
inc
lods
and
mov
jae
cmp
aaa
dec
lods
pop
mov
int3
int3
mov
mov
imul
aad
ja
fdivr
mov
gs
mov
cmp
jmp
mov
in
sub
aaa
jmp
and
adc
dec
int3
int3
int3
int3
int3
jp
ins
pop
cmps
loopne
adc
jb
pop
fldcw
mov
xchg
aad
cld
adc
sub
or
mov
test
xchg
dec
push
sbb
push
inc
out
outs
or
push
push
leave
jl
xor
int3
int3
int3
int3
int3
inc
sub
jno
mov
iret
mov
js
sahf
repnz
int3
sbb
pop
mov
xor
sar
jo
adc
cmps
sbb
mov
ror
dec
mov
sbb
lods
das
rcl
stos
sbb
sub
out
test
dec
imul
fld
int3
int3
int3
int3
int3
shl
jbe
mov
mov
sbb
scas
test
cvttps2pi
adc
cwde
cs
pop
mov
pushf
cmps
jl
retf
xchg
loop
in
ror
or
pushf
xchg
xchg
jbe
mov
repz
movd
dec
and
jp
xchg
xchg
sbb
int3
int3
int3
int3
cli
mov
cmp
or
shl
mov
out
lds
mov
loopne
push
mov
fucomp
jo
fwait
out
(bad)
and
popa
fmulp
jne
das
(bad)
adc
daa
jl
cmp
sti
popf
mov
out
dec
xchg
inc
cmp
mov
and
in
or
xchg
stos
mov
xchg
mov
add
int3
int3
int3
int3
adc
push
ficom
cwde
shl
shl
xor
xor
stos
popf
mov
sub
mov
imul
cmps
push
sub
int
ss
inc
retf
iret
push
push
xchg
call
aas
and
int3
int3
int3
int3
int3
xchg
into
push
xchg
sub
sub
push
or
in
gs
inc
sub
mov
loop
lods
mov
arpl
call
add
dec
in
clc
into
cmps
outs
ins
xor
int3
int3
int3
xchg
and
dec
add
jg
test
jae
fs
test
sub
dec
mov
mov
into
fisttp
xchg
(bad)
aas
loopne
dec
and
int3
int3
int3
int3
dec
cmp
push
ror
xchg
out
pop
cmp
fmul
mov
jns
sbb
enter
stos
xchg
call
jne
mov
xchg
xchg
and
adc
jl
test
fidiv
inc
push
dec
arpl
inc
psubusb
xchg
inc
and
ja
inc
inc
mov
int
sbb
sbb
int3
int3
int3
shr
jle
push
in
ins
xchg
into
mov
aas
pop
cdq
dec
jge
mov
xchg
hlt
nop
(bad)
and
jae
(bad)
aaa
fwait
icebp
div
pop
jbe
push
sti
mul
loope
sub
lds
xor
sub
xor
scas
ds
push
fmul
nop
je
pop
pop
daa
sub
outs
jl
aaa
or
(bad)
push
adc
int3
int3
int3
int3
push
arpl
jecxz
pop
in
stc
push
dec
not
adc
add
popa
pop
inc
loope
cmps
in
stos
sub
movs
test
test
jae
adc
test
add
in
je
or
push
outs
mov
shl
dec
cwde
push
cli
mov
and
bound
mov
int3
int3
int3
int3
dec
imul
loope
mov
adc
loope
xor
fidivr
(bad)
hlt
and
or
sub
sub
sar
in
fistp
jbe
push
sub
sbb
int3
int3
int3
int3
mov
add
push
in
fisub
cmp
push
adc
popa
outs
and
loop
out
idiv
push
xor
mov
cmp
add
leave
test
int3
int3
push
retf
sar
int
lea
stos
xor
lahf
outs
dec
addr16
test
mov
idiv
adc
pop
xor
call
pop
rcl
mov
int3
int3
int3
int3
retf
dec
sbb
adc
xchg
rcl
sbb
mov
shr
mov
call
jno
sub
popa
and
fstp
popf
jnp
in
cmp
int3
int3
int3
int3
fld
xor
(bad)
push
fadd
mov
and
xlat
test
imul
xchg
adc
lea
and
and
inc
clc
loop
cmp
loope
cdq
mov
xchg
inc
jns
push
sbb
int3
int3
int3
int3
int3
mov
pushf
push
xchg
add
push
sbb
jmp
retf
inc
lea
dec
cmp
aam
mov
cwde
out
jp
shl
adc
cli
cwde
es
outs
jg
cdq
push
or
push
xchg
push
cmc
outs
call
int3
int3
jb
jo
test
enter
and
cwde
xchg
ficom
inc
jge
popa
fnstenv
add
sbb
sub
sub
cli
xchg
xor
shl
push
in
dec
adc
mov
int3
int3
cmc
fs
rol
aad
cwde
sub
push
or
pop
adc
and
jmp
and
add
lahf
iret
mov
jb
in
xor
pop
xchg
jbe
int3
int3
int3
int3
int3
(bad)
jmp
cmp
jbe
mov
rol
pop
div
mov
sets
sbb
mov
scas
xchg
sbb
xchg
in
mov
jg
jle
push
mov
test
xchg
sub
sbb
int3
int3
int3
int3
mov
mov
push
mov
lock
push
xor
sbb
pop
dec
sub
or
sar
xchg
aaa
xchg
sti
or
cmp
jnp
popa
xchg
push
mov
test
adc
in
(bad)
fsub
outs
(bad)
cld
jl
sbb
int3
(bad)
mov
inc
stc
jo
jle
push
lock
push
inc
xchg
jae
mov
fmulp
mov
sub
xor
mov
sub
push
pop
jge
push
into
add
fdivrp
xchg
inc
cmp
test
int3
int3
int3
nop
push
push
sub
mov
iret
cwde
cmc
cwde
sub
aad
mov
js
loop
aam
sub
cmp
stos
leave
mov
cwde
data16
sbb
ror
adc
mov
pop
ret
mov
out
jae
xor
mov
int3
int3
int3
int3
clc
movs
pop
stos
mov
sub
iret
push
xchg
xor
pcmpgtw
daa
jle
dec
mov
dec
push
jmp
pop
lock
(bad)
jle
popa
adc
repz
lds
lods
aad
push
mov
adc
inc
xor
out
int3
int3
int3
int3
cmp
jne
(bad)
xchg
cld
xchg
clc
nop
pop
add
clc
imul
(bad)
hlt
adc
mov
jno
lea
mov
stos
aas
xor
cdq
movs
movs
mov
in
lds
inc
or
inc
repz
fisttp
int3
int3
int3
sahf
retf
popa
and
add
mov
call
movsx
pop
cmp
adc
add
jb
jmp
fisub
xor
sub
int3
int3
int3
int3
ins
stc
xchg
dec
into
scas
rcl
pop
lock
inc
ret
mov
push
add
in
mov
xor
adc
fld
mov
push
(bad)
outs
pop
pop
ret
fwait
jns
xor
out
int3
int3
int3
int3
int3
or
add
cli
mov
add
arpl
adc
cmp
fadd
add
jg
push
sub
cli
xchg
sub
xchg
fwait
nop
push
int3
int3
int3
int3
int3
jecxz
movs
inc
pop
jb
adc
xchg
movs
ret
sub
jp
ror
adc
add
lock
push
imul
sahf
int3
int3
int3
int3
int3
cmp
add
outs
dec
rcr
mov
mov
lmsw
dec
mov
lock
in
and
pushf
fistp
mov
ja
ins
pop
fstp
xor
shl
retf
and
int3
int3
int3
int3
int3
xchg
pop
inc
pop
clc
hlt
mov
ret
adc
mov
sub
outs
hlt
sub
test
and
in
loopne
nop
jno
std
pop
cwde
leave
shr
sub
stos
ds
add
ins
inc
ins
inc
addr16
mov
int3
int3
dec
add
xlat
dec
jmp
dec
rcr
mov
addr16
jmp
add
cmp
test
ja
jno
jmp
lods
ret
test
pop
aaa
lds
int3
int3
pop
icebp
jb
xor
cmc
fwait
xchg
sbb
das
inc
cmovl
repnz
push
shr
add
(bad)
arpl
push
xchg
mov
pop
popa
lods
(bad)
arpl
test
mov
int3
ret
or
aas
cs
cmps
repz
aam
neg
xchg
and
xchg
jnp
ds
test
sub
mov
push
and
int3
rcr
loopne
mov
xor
int
leave
add
mov
ja
in
inc
jle
and
pushf
xchg
push
jle
out
(bad)
fisttp
dec
adc
jle
cmp
(bad)
int3
int3
int3
int3
int3
pop
loop
ret
pop
out
push
adc
xchg
xor
jae
or
iret
jne
push
test
lds
or
sub
ds
sub
cwde
dec
xor
mov
js
cmp
mov
xor
and
mov
adc
fld
retf
call
cmps
int3
int3
int3
int3
int3
push
dec
les
mov
aad
sub
leave
lahf
jbe
clc
mov
(bad)
jge
pop
icebp
adc
repnz
pop
sub
jb
sbb
pop
test
push
and
inc
add
mov
pop
mov
ins
aas
xor
ret
and
mov
mov
imul
in
xchg
add
push
xor
out
ret
cmc
mov
shl
lahf
popa
stos
push
adc
nop
(bad)
push
int3
int3
int3
int3
int3
jge
dec
jg
add
in
movs
(bad)
pop
mov
mov
fidivr
or
cmps
clc
lds
xor
xchg
mov
pop
or
sub
mov
or
loopne
bswap
int3
int3
int3
int3
mov
add
cmp
add
iret
movs
sbb
pop
out
push
jnp
inc
test
xchg
inc
sbb
sahf
aaa
movs
ror
inc
je
sar
rcr
leave
xchg
adc
mov
pop
retf
int3
int3
int3
int3
rol
pop
pop
pop
outs
adc
pushf
xor
mov
je
push
xchg
movs
sbb
xor
adc
or
cli
sar
push
add
adc
imul
add
pop
xchg
cwde
add
int3
int3
int3
int3
lods
dec
jno
mov
retf
gs
adc
lods
xchg
ins
inc
shl
adc
sti
mov
and
call
outs
mov
pop
inc
inc
stos
add
scas
ret
aad
int3
int3
int3
int3
int3
addr16
inc
lods
dec
aaa
mov
mov
(bad)
mov
out
nop
adc
or
sbb
sub
inc
pop
(bad)
or
mov
stc
data16
or
adc
scas
jl
fidiv
mov
or
mov
int3
int3
int3
int3
lock
ss
adc
sub
ja
in
inc
ins
mov
add
adc
shl
cmps
stos
shl
pop
cmc
movs
adc
retf
and
mov
sbb
pop
dec
int3
int3
int3
int3
int3
mov
inc
inc
in
jmp
daa
in
aas
push
sbb
jo
jecxz
dec
push
les
jno
ret
add
and
enter
jecxz
dec
push
cmp
adc
and
cwde
mov
nop
out
dec
mov
int3
int3
int3
int3
mov
adc
pop
adc
in
push
fild
push
ja
outs
push
xchg
inc
inc
stos
jle
out
mov
stc
push
ds
rol
leave
int3
aad
jnp
int3
int3
int3
int3
in
cdq
fiadd
int3
test
(bad)
lods
ja
movs
ins
inc
add
fst
sub
adc
movs
mov
jecxz
jg
sbb
inc
ins
cld
add
jecxz
mov
dec
loop
mov
int3
int3
int3
int3
fidivr
or
cmp
pop
sub
test
jbe
fbld
push
mov
test
call
cmp
test
ret
std
ja
out
jp
int3
int3
int3
int3
int3
jmp
ja
cmps
int
call
addr16
cmp
dec
push
ins
pushf
inc
ss
mov
ds
add
ret
pop
lahf
enter
mov
mov
add
cld
dec
int3
int3
int3
int3
int3
adc
dec
movs
push
mov
int
stos
out
shl
dec
sub
sbb
icebp
dec
repz
and
int3
int3
int3
int3
int3
adc
fld
ror
in
jne
aam
ret
jle
xor
mov
movs
loop
jbe
xor
leave
cdq
cmp
pop
push
in
push
es
outs
adc
imul
pop
adc
sub
jg
sub
neg
adc
mov
fcmovne
mov
hlt
out
or
int3
int3
int3
jb
dec
xchg
fs
in
jle
(bad)
xor
pop
xchg
jb
icebp
clc
ret
ret
sbb
cmovnp
dec
push
pop
dec
push
xchg
adc
cdq
dec
pop
in
dec
(bad)
in
or
cmp
and
ds
stc
xor
cmp
in
or
addr16
sti
out
push
pop
test
push
arpl
pop
aaa
loopne
pop
mov
sub
add
mov
add
imul
inc
xchg
jmp
add
ins
jg
mov
jno
adc
or
jbe
mov
test
int3
int3
int3
int3
sbb
jne
dec
(bad)
or
popf
cmps
and
pop
xchg
push
xchg
sub
fst
daa
sbb
and
pop
nop
cdq
mov
cdq
(bad)
cmp
mov
jae
push
cwde
jmp
jmp
pop
cdq
dec
int3
int3
int3
int3
int3
mov
jg
out
jo
mov
test
and
ja
sar
xlat
popa
dec
and
ss
and
cli
sub
movs
retf
idiv
jp
and
pushf
adc
int3
int3
int3
int3
movups
mov
(bad)
and
mov
ret
mov
xor
std
(bad)
dec
xor
mov
data16
std
movs
cmp
push
or
pop
fbstp
or
pop
rcl
(bad)
int
jmp
in
int3
int3
int3
int3
mov
loop
dec
sub
arpl
lds
pop
out
pop
mov
ins
pop
test
retf
scas
not
jmp
push
xchg
shl
test
ror
scas
stos
cmp
jne
fwait
mov
int3
int3
int3
inc
mov
mov
mov
add
adc
int
and
pop
jno
xor
adc
push
xor
shl
xchg
dec
adc
or
loop
or
fnstcw
outs
add
lahf
cmp
pushw
int3
int3
int3
int3
int3
add
das
mov
adc
sub
ds
movs
cmp
scas
pop
xchg
pop
int3
mov
ror
popf
mov
mov
iret
ror
add
fdiv
mov
and
out
imul
and
or
xchg
fs
mov
in
outs
jne
cwde
xor
and
add
outs
push
jmp
push
mov
and
stos
xchg
push
int
sbb
daa
xor
popf
jp
mov
and
push
das
leave
sub
int3
int3
push
jg
daa
mov
xchg
mov
add
jmp
xchg
ffreep
aad
(bad)
fsubp
xor
sbb
pop
int3
call
test
int3
int3
int3
fnstcw
bound
dec
mov
mov
iret
(bad)
add
leave
xor
js
fdivr
not
ins
or
pop
aaa
inc
fucomi
cmp
cmc
es
(bad)
mov
push
pop
mov
or
mov
jl
dec
mov
fdivr
ror
pop
loope
cmp
cdq
fcmove
pop
or
int3
int3
int3
mov
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
clc
addr16
cmp
mov
push
popf
popa
mov
(bad)
cmp
mov
cmp
or
adc
mov
cmp
push
loope
ficomp
pop
mov
add
jnp
stos
mov
add
inc
xor
les
cmp
rol
or
inc
fistp
ins
adc
ror
push
push
mov
and
aam
int3
int3
int3
int3
int3
mov
jne
(bad)
sbb
push
mov
sub
inc
scas
xor
jnp
push
idiv
inc
jmp
loope
push
xlat
and
aam
ja
dec
jmp
push
add
mov
jne
push
cli
test
movs
or
fwait
mov
pop
inc
push
in
adc
adc
in
jmp
addr16
push
inc
int3
int3
int3
int3
int3
leave
cdq
test
sub
ss
or
ja
and
xor
fstp
inc
jl
dec
push
int
or
push
pop
xor
push
rcr
xor
xchg
(bad)
int
add
in
dec
xchg
mov
int3
int3
inc
sub
and
jb
push
mov
cmp
jmp
lods
aam
pop
pop
xor
stc
adc
lock
daa
add
int
(bad)
and
xchg
jnp
fild
sub
pop
(bad)
xchg
test
inc
push
(bad)
mov
aad
xor
fild
test
mov
int3
int3
int3
int3
int3
ror
movs
xchg
push
xor
cmc
imul
xlat
jge
mov
ret
jo
mov
jle
test
cmp
push
cmps
outs
loop
inc
icebp
scas
jmp
rcl
mov
xor
in
cmp
in
cmp
shl
pop
add
jmp
xor
call
push
out
int3
int3
int3
int3
int3
cld
mov
movs
int
out
dec
jbe
mov
(bad)
out
cld
scas
dec
lods
test
mov
jl
jecxz
mov
fimul
ret
dec
or
(bad)
sti
sub
xchg
sub
int3
int3
int3
in
loop
test
push
mov
cli
addr16
bound
(bad)
fdiv
push
ss
inc
inc
lods
popa
sahf
push
shl
sbb
xchg
xchg
cmp
inc
pop
push
and
es
xor
int3
int3
int3
int3
int3
dec
leave
icebp
xlat
inc
add
outs
and
stc
mov
and
cmps
test
aaa
popa
lock
aaa
xchg
cs
mov
adc
dec
jns
popa
pop
mov
call
mov
jnp
int3
int3
int3
int3
int3
mov
gs
push
mov
imul
imul
push
xor
xchg
arpl
popf
jo
lock
sbb
ins
sub
aad
call
push
add
popa
push
repnz
out
stos
sbb
int3
int3
int3
int3
int3
int3
mov
mov
xchg
(bad)
dec
mov
xchg
and
cdq
push
jl
push
movs
jae
in
lea
and
int3
int3
int3
int3
lahf
fmul
pop
xchg
(bad)
jp
sbb
popa
idiv
adc
and
fdiv
int
es
movs
lds
jmp
das
call
fistp
test
lock
test
sub
adc
inc
mov
rcr
push
inc
pop
push
jle
pop
cmps
outs
sub
int3
int3
int3
int3
ss
sub
adc
je
sub
(bad)
cmp
das
jecxz
add
mov
pop
jnp
imul
jae
jl
jns
cli
lock
jae
pushf
sbb
cli
xchg
or
jecxz
retf
sub
add
pushf
call
scas
cmps
xor
outs
outs
mov
imul
int3
add
adc
fmulp
stc
xchg
add
jae
cmp
adc
xchg
and
lea
mov
jno
stos
test
inc
dec
inc
mov
cld
sub
nop
jmp
push
sbb
daa
cwde
dec
xor
push
cmps
jnp
data16
(bad)
loopne
out
pop
lods
loop
dec
mov
int3
xchg
fstp
lds
inc
jmp
push
inc
cmp
loop
lea
imul
sar
mov
lea
fist
pop
sbb
imul
movs
cmp
fistp
push
push
dec
adc
dec
sub
int3
int3
int3
int3
int3
retf
sbb
push
xchg
es
ins
lods
xor
and
add
add
(bad)
dec
push
sti
not
jno
mov
cli
cmps
sbb
dec
pop
push
retf
xchg
sub
pop
imul
int3
int3
int3
or
ja
xor
or
ja
aas
popf
sar
cmps
sahf
jae
sbb
ds
movs
and
cli
stos
jno
into
pop
dec
sbb
mov
sub
sbb
push
sbb
int3
int3
int3
int3
sahf
mov
sbb
sub
test
push
cmps
jbe
lahf
outs
aad
aad
addr16
call
ja
shl
jl
mov
push
test
jle
and
pop
call
mov
int3
int3
int3
mov
push
mov
mov
xor
test
je
cmp
jbe
mov
test
js
lea
mov
push
push
push
mov
call
mov
jmp
test
je
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
das
pusha
outs
stos
mov
cmp
daa
das
mov
in
and
pop
(bad)
fcom
sub
xor
repnz
mov
fadd
lock
sub
cmp
test
mov
or
int3
int3
int3
int3
ror
mov
das
aam
je
pop
(bad)
mov
cdq
jae
daa
icebp
shl
jnp
les
push
push
mov
push
cld
xchg
rcl
sar
and
mov
jns
out
xchg
mov
int3
int3
int3
int3
movs
sub
(bad)
push
dec
test
out
ins
ja
cmp
mov
jo
mov
push
add
sti
repnz
fs
add
add
aam
jne
fwait
xor
movs
jp
jge
sti
bound
lea
jle
int3
int3
int3
int3
test
iret
mov
xchg
pushf
push
aam
xchg
(bad)
dec
xor
xchg
fs
movs
sti
cmp
dec
mov
test
jl
inc
outs
and
mov
or
int3
int3
int3
int3
sbb
pop
cmp
mov
cli
sahf
jne
ss
dec
or
shl
lock
cmc
retf
fidivr
idiv
ss
xchg
xor
mov
mov
scas
mov
add
int3
int3
int3
mov
cmc
inc
addr16
dec
div
dec
out
sub
inc
push
and
xchg
fs
cmp
jmp
and
xlat
aaa
jne
fidiv
xor
dec
in
cmp
iret
jne
das
mov
int3
int3
int3
int3
push
adc
adc
jne
xchg
jge
test
jmp
test
loop
push
loopne
mov
jbe
test
es
fisttp
dec
sub
fwait
mov
int3
int3
int3
int3
ins
inc
dec
xlat
sbb
sbb
xor
or
xor
jg
mov
das
push
gs
add
sub
mov
adc
xchg
(bad)
pop
cld
mov
mov
ja
test
pop
(bad)
add
inc
loopne
mov
int3
fidiv
loope
mov
mov
jnp
(bad)
push
arpl
dec
out
cmps
aam
xor
xor
and
push
mov
jecxz
pop
mov
fmul
push
cmc
int3
int3
int3
int3
int3
fsubr
sbb
cmp
cmp
xchg
clc
out
ins
xchg
sbb
mov
pop
mov
call
in
ja
add
mov
pop
jle
mov
scas
add
lahf
add
cld
imul
xchg
lods
int3
mov
adc
add
mov
int3
int3
int3
sub
push
pop
jmp
push
sub
test
(bad)
cdq
daa
adc
mov
adc
mov
adc
push
mov
sub
rcr
(bad)
cmp
int3
int3
int3
int3
fistp
fistp
pusha
in
mov
test
push
in
mov
mov
fmul
lds
and
sub
(bad)
fxch
cli
leave
loop
xchg
aas
outs
mov
xchg
fwait
add
sti
dec
xor
inc
shl
mov
inc
int3
int3
int3
int3
int3
sahf
ins
cmc
(bad)
cdq
shl
push
fcmovb
(bad)
mov
inc
icebp
fimul
add
fcomp
jg
mov
pusha
or
sub
test
test
repnz
mov
aaa
bnd
movs
push
mov
clc
out
dec
mov
push
pop
fldenv
jne
dec
xor
mov
lea
js
gs
cli
shr
jg
mov
ror
mul
xor
test
retf
adc
xchg
mov
jge
mov
xor
aam
cmp
sub
cmps
pop
gs
repnz
adc
das
inc
mov
adc
xor
int
daa
mov
cs
pop
mov
push
idiv
push
das
repz
jne
fcom
xor
mov
inc
jno
sub
push
sub
add
repz
int3
mov
push
mov
push
xor
shr
mov
test
je
cmp
ja
lea
push
call
mov
mov
jmp
mov
mov
test
je
test
js
add
mov
jmp
and
mov
mov
pop
ret
int3
int3
int3
int3
int3
movups
adc
jl
sub
push
shr
xchg
cmp
mov
jns
stc
add
js
leave
xchg
pop
xor
(bad)
sbb
mov
call
jecxz
mov
xchg
jb
or
(bad)
mov
inc
leave
lods
in
adc
int3
int3
int3
int3
mov
pop
ins
and
xchg
sbb
jb
sub
fisub
imul
gs
lods
adc
or
jge
test
loopne
mov
int3
int3
int3
int3
mov
push
mov
shr
push
pop
je
cmp
jbe
mov
test
js
push
push
push
call
jmp
test
je
xor
mov
pop
ret
int3
int3
int3
int3
int3
dec
int
inc
lods
adc
dec
xor
mov
jp
fdivr
mov
xchg
push
fiadd
jmp
push
inc
hlt
add
ror
fnstsw
mov
ror
jg
or
test
lods
out
mov
sbb
dec
add
fmul
xchg
int3
int3
int3
int3
int3
movs
add
nop
cmp
cdq
ds
in
push
pop
cmp
cli
aas
shl
jge
pop
adc
rdmsr
lods
stos
and
push
lds
out
inc
adc
push
xchg
add
push
or
(bad)
enter
jge
sub
or
xchg
ins
push
inc
fstp
push
int3
int3
int3
int3
int3
iret
popa
xchg
jns
sub
pop
sbb
inc
pop
cdq
arpl
adc
xchg
je
cs
retf
mov
jbe
icebp
enter
mov
rcl
xor
out
cmp
mov
sub
lahf
mov
sar
sub
jbe
adc
cmp
pushf
adc
push
fcomp
and
scas
into
stos
pop
mov
xor
test
push
xchg
out
sub
mov
xchg
cmp
int3
int3
int3
int3
add
cmp
xchg
add
js
xor
xor
pop
inc
fs
repz
adc
mov
jns
test
dec
hlt
fcom
or
(bad)
loope
xchg
mov
and
imul
int3
add
iret
(bad)
loope
cmps
sub
push
xor
xchg
cld
addr16
cdq
test
jg
test
std
add
daa
clc
(bad)
mov
das
stos
jne
fnstsw
mov
mov
bound
int3
int3
int3
mov
pop
inc
xlat
add
(bad)
mov
bound
call
xor
xchg
ins
sbb
xor
int3
int3
int3
xchg
xor
cmp
out
fucomp
(bad)
hlt
stos
sbb
gs
rcl
je
fwait
and
(bad)
cmp
int3
int3
int3
int3
int3
fiadd
push
jne
jb
push
(bad)
push
adc
xchg
std
sti
outs
jecxz
and
pushf
sbb
or
xor
inc
sbb
lods
jno
int3
int3
int3
int3
repz
dec
leave
adc
test
js
xor
mov
outs
push
in
fs
shr
hlt
cmp
aad
adc
movs
mov
scas
mov
nop
(bad)
jnp
int3
int3
int3
int3
inc
(bad)
aad
scas
aad
or
retf
pusha
cmp
sub
dec
cld
in
or
inc
and
fst
imul
xor
jecxz
dec
repnz
aad
sbb
out
mov
jbe
or
in
out
pop
cmp
aad
in
fst
pop
(bad)
iret
push
bswap
int3
int3
int3
int3
pop
add
add
mov
dec
and
imul
pop
pop
add
movs
cmp
ror
(bad)
xlat
or
xchg
mov
push
lea
mov
cli
pop
push
retf
std
sbb
add
neg
sbb
inc
cmp
xchg
int3
int3
int3
int3
int3
cmp
jp
mov
push
lods
add
mov
idiv
add
mov
(bad)
push
jle
fwait
push
hlt
jge
push
cli
xchg
adc
retf
xchg
dec
outs
and
int3
int3
int3
int3
inc
cmps
dec
dec
into
push
xchg
test
ficomp
mov
adc
push
mov
int
bnd
mov
ins
mov
mov
lahf
adc
pop
dec
add
inc
jbe
dec
mov
int3
int3
int3
int3
int3
xchg
add
loop
sbb
aad
and
xchg
(bad)
mov
push
jle
cld
xor
sbb
repz
xchg
scas
jmp
(bad)
test
ja
pop
rcl
popa
leave
pop
lea
cmp
loop
add
clc
xor
jnp
cmp
int3
int3
int3
int3
popf
scas
aad
pop
pop
push
push
mov
inc
inc
dec
push
sbb
ror
imul
ret
and
mov
or
mov
fnstcw
mov
xor
push
mov
les
fdiv
add
int3
int3
int3
int3
adc
pop
repnz
pop
xchg
jmp
or
test
int
lds
cmp
sub
pushf
imul
fld
xchg
push
mov
outs
xor
pop
cmps
mov
dec
int3
int3
int3
int3
cdq
call
or
or
push
mov
jae
adc
scas
add
pop
sub
jle
xor
sbb
add
pop
inc
retf
int3
int3
int3
int3
int3
repnz
cmp
xor
movs
das
sbb
stos
dec
fcmovnb
test
cld
cmp
cmps
ins
mov
jno
xchg
sub
pushf
sub
add
push
dec
push
xor
fwait
ror
movs
test
sbb
sub
in
cmc
fstp
pop
stc
aam
jmp
push
mov
mov
(bad)
lock
jl
(bad)
jecxz
dec
add
scas
call
adc
push
jae
and
int3
int3
push
dec
cmp
inc
jecxz
movs
mov
jno
or
dec
test
(bad)
mov
cmps
xchg
mov
mov
(bad)
push
xor
sub
int3
int3
int3
int3
int3
or
or
daa
cdq
movs
xor
inc
adc
xchg
cmp
in
mov
push
and
rcl
or
adc
ins
inc
bound
or
gs
int3
int3
int3
int3
int3
out
repz
jecxz
mov
add
lock
mov
sbb
movs
dec
adc
stos
outs
pop
mov
out
out
repnz
push
out
sbb
int3
int3
int3
sbb
dec
je
mov
jne
mov
inc
xlat
jmp
jle
and
bound
cmc
or
xchg
pop
sbb
cmp
test
dec
bnd
dec
das
nop
adc
sar
fs
int3
int3
int3
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
xor
mov
push
mov
test
je
cmp
jbe
mov
test
js
lea
mov
push
call
mov
test
js
push
push
sub
push
lea
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
test
je
cmp
jbe
mov
test
js
cmp
jbe
mov
jmp
push
push
push
call
jmp
test
je
xor
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
xor
test
je
mov
push
push
mov
sub
test
je
movzx
test
je
mov
add
dec
dec
jne
pop
pop
test
jne
sub
mov
xor
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
test
je
cmp
jbe
mov
test
js
push
push
push
call
jmp
test
je
xor
mov
pop
ret
int3
int3
int3
int3
int3
outs
(bad)
or
loopne
push
pop
xchg
test
xchg
repz
imul
ins
mov
sar
cmp
sub
dec
lea
icebp
std
ins
cmc
ret
pop
pop
icebp
jb
data16
(bad)
int3
int3
int3
pop
pop
into
outs
dec
cmps
stos
cmps
xor
loope
sub
mov
and
push
nop
mov
pop
or
xchg
jne
and
adc
neg
sar
pop
dec
je
add
stc
xor
or
in
xchg
sbb
mov
int3
int3
int3
int3
sub
in
cmps
cld
add
adc
mov
sbb
cmp
gs
ins
outs
mov
add
xor
les
sub
out
xor
hlt
adc
xor
xchg
int3
int3
int3
int3
int3
mov
mov
and
or
movs
(bad)
retf
nop
out
mov
pusha
jbe
js
das
aad
jb
mov
in
push
mov
rcr
mov
js
(bad)
pop
push
sub
mov
int3
int3
int3
int3
pcmpeqb
xor
std
mov
out
mov
jne
nop
loop
mov
jg
fld
mov
and
out
push
mov
push
xor
cmp
cmps
ror
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
call
mov
mov
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
jmp
adc
push
jg
cmps
mov
and
pop
sbb
xchg
popf
pop
(bad)
inc
mov
push
push
and
jmp
add
sub
mov
in
in
retf
jle
inc
push
int3
int3
int3
int3
int3
outs
xchg
test
cmp
mov
sbb
lea
(bad)
or
cmovb
call
jno
jmp
setne
pop
lea
or
fwait
ds
out
js
fimul
mov
inc
and
or
out
out
sbb
int3
int3
int3
int3
adc
dec
clc
inc
mov
dec
mov
adc
or
or
and
xor
mov
ror
int3
int3
int3
adc
mov
xor
mov
sbb
and
icebp
repnz
mov
xchg
cmp
sbb
fistp
and
dec
mov
inc
lock
sbb
sti
mov
mov
pop
rcl
cmps
push
mov
add
int3
int3
int3
int3
retf
jo
iret
lea
fld
lock
ds
cmp
jmp
sub
inc
int3
xor
pop
cmp
add
push
dec
inc
out
imul
cmp
int3
int3
int3
int3
mov
push
mov
push
xor
test
je
cmp
jbe
mov
test
js
xor
test
je
push
mov
push
mov
sub
sub
lea
test
je
mov
test
je
mov
inc
dec
jne
pop
pop
test
jne
dec
mov
jmp
test
je
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
jmp
loopne
or
and
jecxz
mov
int
lahf
jbe
jo
or
ins
cmp
and
pop
cmp
(bad)
test
stc
fsubp
outs
pusha
ins
test
(bad)
xchg
test
lea
cmp
or
dec
jnp
and
xchg
sub
adc
int3
int3
int3
int3
and
inc
cli
sahf
jbe
aaa
fidiv
jbe
jne
sti
xor
pop
into
arpl
add
sbb
fst
addr16
sbb
and
pop
imul
inc
gs
mov
int3
int3
int3
jmp
and
and
push
pop
arpl
pop
movs
and
cdq
ins
jo
cdq
iret
sbb
cmp
adc
pop
xchg
xor
out
jp
and
into
fist
sahf
sub
int3
int3
int3
xor
pushf
and
int
mov
push
cmps
add
or
jb
pop
je
pop
cmp
pusha
ror
add
xchg
sahf
ss
push
int
fcmovbe
cmps
fisubr
out
imul
loop
fstp
mov
cs
nop
mov
sbb
dec
xchg
repz
mov
mov
int3
int3
int3
int3
int3
in
cmps
cs
test
adc
outs
dec
and
(bad)
inc
out
dec
cmc
xor
jg
cmp
stc
xsha1
cmps
mov
int3
int3
int3
int3
int3
mov
xlat
repz
jmp
gs
xor
dec
add
arpl
(bad)
jmp
push
jle
fmul
fwait
clc
cdq
stos
or
add
shl
scas
jae
sub
bound
shl
dec
cs
mov
xor
xchg
inc
pop
cmp
repnz
mov
xchg
in
dec
pop
test
push
push
shr
and
fwait
push
jmp
test
(bad)
dec
cmps
sub
pop
ins
nop
cmps
sbb
sbb
xchg
jl
icebp
and
sahf
pusha
aam
retf
mov
retf
fcmovu
mov
push
add
pop
mov
xchg
mov
xlat
dec
cmp
cld
jo
int3
int3
int3
int3
loopne
and
fcom
sbb
jg
jns
aad
sbb
xchg
jbe
(bad)
inc
sub
pop
imul
jo
sbb
cdq
iret
cmp
pop
mov
pusha
das
mov
fcomp
add
ror
push
xor
addr16
sbb
ret
sbb
test
pop
int3
int3
int3
int3
int3
addr16
ret
push
retf
test
jne
xor
fdiv
pushf
ror
outs
in
(bad)
and
mov
call
movs
jp
jl
ret
int3
int3
int3
pop
add
xor
out
loope
and
aam
stc
mov
cmp
lock
cmovnp
push
push
mov
mov
mov
dec
retf
inc
sub
popa
scas
pusha
outs
mov
inc
(bad)
jnp
int3
int3
int3
int3
push
mov
shl
xchg
jge
or
adc
clc
push
xlat
cmp
push
xchg
or
cmp
in
test
cld
mul
loop
mov
xchg
xor
int3
int3
int3
int3
int3
aam
test
pop
aam
dec
hlt
cmp
sub
cmp
push
cmp
cmp
add
call
ss
pop
ins
(bad)
cmp
jnp
sub
mov
int3
int3
cdq
movs
pusha
sub
jecxz
jmp
adc
push
enter
inc
jnp
xchg
fidivr
jl
jne
fcom
and
xchg
jne
clc
call
outs
bound
and
or
mov
cs
int3
int3
int3
int3
int3
xor
test
je
cmp
jbe
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
lea
mov
push
xor
push
push
call
add
test
js
cmp
ja
jne
jmp
mov
xor
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
test
je
cmp
jbe
mov
test
js
push
mov
push
push
mov
call
mov
jmp
test
je
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
sbb
and
imul
in
retf
retf
push
jns
push
stos
add
push
and
shl
(bad)
jno
pop
mov
inc
pop
push
mov
pop
and
test
dec
data16
cmc
out
xchg
int3
int3
int3
int3
int3
or
jmp
(bad)
jmp
pop
xchg
loope
out
mov
in
add
mov
neg
or
add
dec
scas
mov
pop
fisttp
sbb
add
sbb
sar
fist
jge
je
adc
out
sub
int3
int3
int3
int3
cmp
jmp
adc
xchg
inc
pop
jo
shl
pop
aam
add
retf
call
outs
mov
dec
fs
cmp
and
or
lods
push
fisub
lea
or
enter
and
xor
and
lds
and
int3
int3
int3
int3
int3
sub
retf
loop
imul
test
dec
retf
lahf
mov
push
repnz
ror
popa
cld
pusha
xchg
xchg
imul
or
aad
lock
aad
sub
sbb
mov
std
clc
int3
int3
int3
int3
int3
test
das
das
mov
sbb
mov
retf
enter
sbb
int3
jne
push
(bad)
xor
add
hlt
bound
pop
dec
les
pop
jbe
add
push
push
int3
int3
int3
int3
int3
mov
icebp
int3
adc
cmp
out
fadd
jae
je
clc
jg
push
repz
pop
ret
in
pop
push
inc
xor
mov
mov
movs
xchg
mov
lea
mov
xor
adc
fwait
fwait
or
shr
xchg
pop
sbb
mov
aam
les
mov
ret
inc
ror
pop
xor
adc
mov
cdq
test
(bad)
test
xchg
lahf
push
imul
imul
int3
int3
and
in
movs
push
mov
out
fsubr
pop
fs
pop
inc
add
push
and
popf
sub
lods
mov
jle
out
call
and
add
push
into
int3
int3
int3
int3
int3
loope
inc
mov
cmp
jge
lods
shl
fimul
int3
int3
int3
int3
int3
stos
lods
inc
dec
push
inc
or
sub
out
(bad)
(bad)
aad
aad
ror
mov
add
or
call
(bad)
push
mov
jg
in
xchg
pop
sbb
int3
int3
int3
int3
int3
adc
xor
xlat
push
sbb
jo
sub
das
mov
imul
mov
push
mov
push
push
xor
mov
push
mov
test
je
cmp
je
add
dec
jne
test
jne
mov
mov
test
je
test
js
sub
mov
jmp
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
enter
jg
sbb
ret
in
addr16
xor
cmp
push
ret
jb
cmp
xchg
mov
imul
mov
inc
rcr
or
xchg
nop
mov
int3
int3
int3
mov
ds
xor
pop
cli
retf
fistp
(bad)
fidivr
rol
ins
ds
sbb
cld
fcomp
retf
jne
pop
xor
dec
xchg
call
int3
int3
int3
int3
int3
cli
sub
push
push
sub
push
cmp
imul
jmp
mov
inc
mov
aaa
pop
adc
sub
rcl
clc
test
test
jno
int3
int3
int3
int3
sbb
and
(bad)
push
jns
mov
in
out
repz
mov
fst
mov
cmc
and
pop
lock
rol
mov
int3
int3
int3
int3
retf
inc
sub
cs
jge
clc
or
jb
cmp
or
scas
jmp
shl
adc
fild
pop
adc
mov
and
cmp
pop
cmp
push
mov
int3
int3
rol
in
inc
mov
mov
add
scas
repnz
push
out
push
and
enter
mov
mov
cmp
cmp
sti
lea
xchg
add
int3
int3
int3
int3
test
cmc
pushf
sbb
xchg
cli
mov
inc
jb
nop
inc
sbb
jae
xor
in
stc
ins
mov
jae
xchg
pop
movs
dec
popf
jo
call
mov
pop
mov
or
xchg
addr16
int3
int3
int3
int3
sbb
push
test
dec
ins
jne
fstp
ror
outs
mov
outs
ins
sahf
and
out
sbb
arpl
push
cdq
js
movs
jge
add
mov
add
fdiv
jo
test
rcr
push
and
data16
sbb
and
xchg
test
or
leave
pushf
sub
jl
xchg
pop
in
mov
in
inc
mov
int3
int3
iret
xor
fnstsw
ss
sbb
sbb
jns
mov
dec
popf
shl
idiv
xchg
or
lahf
mov
mov
xor
mov
add
enter
out
and
sub
dec
pop
daa
push
shl
dec
dec
jnp
pop
jnp
aam
lock
mov
int3
int3
int3
int3
int3
add
pop
mov
sub
xlat
shl
arpl
test
cmp
dec
stc
xor
ins
and
lods
movs
xchg
sbb
stos
jns
mov
cdq
int3
int3
int3
int3
int3
ret
cmc
gs
mov
daa
push
(bad)
mov
arpl
sbb
fimul
dec
dec
xchg
or
dec
stos
in
in
lds
dec
jle
or
xchg
pop
ror
int3
int3
int3
int3
sti
nop
cld
call
or
or
aas
add
jecxz
add
movs
out
outs
dec
inc
xchg
out
xor
jb
dec
mov
and
fstp
sub
imul
mov
jmp
scas
mov
cmps
mov
pop
int3
or
push
loope
ficomp
jbe
sahf
adc
xchg
les
scas
js
push
int3
int3
int3
int3
int3
mov
push
mov
lea
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
lea
and
mov
cmp
jae
push
mov
mov
sub
cmp
jg
mov
push
push
push
call
mov
mov
add
add
sub
cmp
jb
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
xor
inc
push
mov
je
mov
imul
shl
shr
add
mov
shr
or
test
jne
mov
xor
div
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
xor
mov
inc
xor
mov
xor
lock
test
je
cmp
je
mov
lea
mov
mov
lock
cmp
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
xor
push
push
push
call
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
xor
mov
mov
call
mov
test
je
mov
xor
test
je
lea
mov
shr
sub
push
push
call
push
push
push
mov
mov
call
mov
test
jne
push
push
mov
push
call
mov
test
je
shl
sub
push
push
call
add
mov
test
jne
mov
test
jne
or
mov
lock
test
jne
call
mov
test
je
or
xor
lock
test
jne
mov
mov
inc
xor
mov
xchg
jmp
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
mov
xor
call
mov
jmp
cmp
jb
lea
cmp
jb
mov
test
jne
jmp
lea
or
xor
lock
test
jne
lea
mov
push
lea
push
push
call
mov
mov
cmp
jg
lea
sub
add
inc
push
push
push
call
add
xor
xchg
cmp
jbe
mov
call
test
je
mov
or
mov
lock
test
je
xor
or
xor
lock
test
jne
mov
cmp
je
mov
cmp
je
lea
cmp
jne
jmp
cmp
jbe
mov
call
test
je
mov
xor
mov
mov
dec
inc
xor
mov
xchg
test
je
call
push
push
push
mov
call
push
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
mov
xor
call
mov
or
jmp
cmp
jb
lea
cmp
jb
mov
test
jne
jmp
lea
mov
call
lea
mov
push
lea
push
push
call
mov
lock
mov
xor
mov
mov
sub
shl
add
inc
mov
mov
shl
inc
mov
mov
lock
dec
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
call
push
push
push
xor
mov
push
call
mov
test
je
mov
call
push
lea
mov
push
push
mov
call
add
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
lea
mov
call
push
push
mov
call
mov
or
lock
xor
cmp
pop
sete
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
lea
call
mov
mov
inc
mov
mov
jmp
cmp
je
inc
cmp
jb
or
cmp
je
lea
mov
push
lea
push
call
cmp
je
lea
mov
jmp
or
lea
lock
push
pop
cmp
je
or
xor
lock
test
jne
push
mov
push
call
cmp
jne
mov
mov
shl
add
lea
test
je
push
lea
add
push
push
call
mov
add
lea
mov
xor
lea
xchg
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
jmp
cmp
jne
inc
cmp
jb
or
pop
ret
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
sub
shr
push
mov
lea
test
jmp
mov
cmp
jne
dec
mov
jns
mov
inc
cmp
pop
mov
jne
inc
cmp
je
mov
pop
ret
int3
int3
int3
int3
int3
rdtsc
push
and
xor
mov
mov
call
mov
test
je
mov
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
test
je
push
push
mov
mov
call
push
push
push
mov
call
push
call
dec
test
jne
pop
pop
and
pop
ret
int3
int3
int3
int3
int3
mov
push
push
xor
call
mov
test
js
mov
add
call
mov
call
test
js
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
push
mov
mov
push
push
mov
mov
mov
mov
and
mov
and
mov
mov
mov
mov
mov
and
mov
lea
mov
push
mov
call
mov
mov
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
movzx
mov
mov
mov
xor
shr
mov
ror
mov
mov
not
xor
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
mov
push
shr
push
sub
xor
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
xor
mov
add
ror
imul
mov
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
xor
mov
xor
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
mov
jmp
mov
cmp
je
call
mov
mov
and
je
mov
mov
and
je
call
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
and
add
and
push
push
push
mov
lea
mov
and
mov
and
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
mov
push
mov
dec
mov
push
mov
call
test
je
mov
and
mov
jne
mov
xor
not
mov
mov
jmp
mov
mov
movzx
not
mov
mov
xor
mov
ror
mov
xor
shr
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
mov
sub
push
xor
push
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
mov
xor
mov
xor
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
mov
lea
pop
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
lea
mov
mov
push
mov
mov
mov
push
mov
mov
push
mov
and
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
je
mov
and
mov
jne
mov
xor
not
mov
mov
jmp
mov
mov
movzx
not
mov
mov
xor
mov
ror
mov
xor
shr
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
mov
sub
push
xor
push
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
mov
xor
mov
xor
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
test
je
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
push
mov
mov
push
push
mov
mov
mov
mov
and
mov
and
mov
mov
mov
mov
mov
and
mov
lea
mov
push
mov
call
mov
mov
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
mov
not
ror
mov
shr
shr
xor
movzx
imul
xor
add
mov
mov
ror
mov
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
imul
xor
mov
mov
xor
lea
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
mov
jmp
mov
cmp
je
call
mov
mov
and
je
mov
mov
and
je
call
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
and
add
and
push
push
push
mov
lea
mov
and
mov
and
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
mov
push
mov
dec
mov
push
mov
call
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
ror
not
mov
shr
xor
shr
imul
xor
mov
add
movzx
mov
mov
mov
ror
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
mov
lea
pop
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
lea
mov
mov
push
mov
mov
mov
push
mov
mov
push
mov
and
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
ror
not
mov
shr
xor
shr
imul
xor
mov
add
movzx
mov
mov
mov
ror
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
xor
mov
push
mov
mov
push
push
mov
mov
mov
mov
and
mov
and
mov
mov
mov
mov
mov
and
mov
lea
mov
push
mov
call
mov
mov
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
mov
not
shr
mov
shr
sub
shr
imul
movzx
sub
xor
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
xor
xor
mov
lea
mov
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
mov
jmp
mov
cmp
je
call
mov
mov
and
je
mov
mov
and
je
call
mov
lea
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
and
add
and
push
push
push
mov
lea
mov
and
mov
and
mov
mov
mov
mov
mov
lea
mov
lea
push
lea
mov
push
mov
dec
mov
push
mov
call
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
shr
mov
shr
not
sub
shr
imul
sub
mov
xor
movzx
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
mov
mov
xor
xor
lea
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
mov
lea
pop
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
lea
mov
mov
push
mov
mov
mov
push
mov
mov
push
mov
and
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
je
mov
and
mov
jne
xor
mov
mov
mov
not
mov
jmp
mov
mov
mov
mov
shr
mov
shr
not
sub
shr
imul
sub
mov
xor
movzx
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
mov
mov
xor
xor
lea
push
call
mov
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
push
lea
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
mov
cmp
je
call
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
mov
mov
mov
and
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
and
neg
sbb
jmp
cmp
jmp
cmp
jmp
cmp
sbb
neg
jmp
cmp
sbb
inc
test
je
mov
mov
mov
and
mov
jmp
mov
mov
mov
not
movzx
mov
mov
mov
ror
xor
mov
xor
shr
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
mov
push
shr
push
sub
xor
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
add
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
mov
xor
mov
xor
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
push
mov
push
push
xor
mov
mov
and
mov
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
jne
mov
cmp
ja
jb
mov
cmp
jb
mov
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
not
mov
jmp
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
je
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
inc
xor
mov
call
and
and
or
jne
jmp
mov
cmp
ja
jb
mov
cmp
jbe
jmp
mov
cmp
jb
ja
mov
cmp
ja
jmp
mov
cmp
jb
ja
mov
cmp
jb
xor
inc
mov
mov
mov
and
mov
jmp
mov
mov
mov
not
movzx
mov
mov
mov
ror
xor
mov
xor
shr
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
mov
push
shr
push
sub
xor
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
add
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
mov
xor
mov
xor
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
mov
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
mov
mov
mov
and
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
and
neg
sbb
neg
jmp
xor
cmp
setl
jmp
xor
cmp
setle
jmp
xor
cmp
setg
jmp
xor
cmp
setge
test
je
mov
mov
mov
and
mov
jmp
mov
mov
mov
not
movzx
mov
mov
mov
ror
xor
mov
xor
shr
imul
sub
mov
xor
xor
mov
xor
sub
mov
ror
mov
ror
shr
imul
add
mov
xor
mov
sub
mov
ror
imul
ror
sub
xor
mov
mov
mov
ror
lea
ror
imul
add
mov
xor
mov
movzx
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
mov
push
shr
push
sub
xor
xor
mov
imul
shr
add
lea
xor
xor
push
mov
mov
call
mov
add
xor
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
mov
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
add
add
mov
mov
shr
mov
mov
test
je
mov
mov
mov
xor
mov
mov
shr
movzx
mov
mov
mov
mov
shr
sub
movzx
mov
mov
mov
mov
xor
xor
mov
mov
ror
movzx
mov
xor
imul
sub
mov
xor
mov
xor
movzx
mov
xor
sub
mov
ror
imul
ror
add
xor
mov
sub
mov
ror
imul
ror
sub
mov
xor
mov
add
mov
ror
imul
ror
add
xor
mov
xor
mov
ror
imul
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
sub
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
imul
shr
add
xor
mov
xor
mov
xor
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
and
mov
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
mov
mov
mov
mov
shr
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
mov
and
neg
sbb
neg
jmp
cmp
jmp
cmp
jmp
cmp
sbb
neg
jmp
cmp
sbb
inc
test
je
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
ror
mov
shr
shr
xor
movzx
imul
xor
add
mov
mov
ror
mov
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
mov
push
push
push
xor
and
mov
lea
jne
mov
mov
and
lea
jne
mov
mov
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
jne
mov
cmp
ja
jb
mov
cmp
jb
mov
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
je
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
inc
xor
mov
call
and
and
or
jne
jmp
mov
cmp
ja
jb
mov
cmp
jbe
jmp
mov
cmp
jb
ja
mov
cmp
ja
jmp
mov
cmp
jb
ja
mov
cmp
jb
xor
inc
mov
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
ror
mov
shr
shr
xor
movzx
imul
xor
add
mov
mov
ror
mov
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
mov
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
and
mov
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
mov
mov
mov
mov
shr
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
mov
and
neg
sbb
neg
jmp
xor
cmp
setl
jmp
xor
cmp
setle
jmp
xor
cmp
setg
jmp
xor
cmp
setge
test
je
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
ror
mov
shr
shr
xor
movzx
imul
xor
add
mov
mov
ror
mov
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
mov
push
push
push
xor
and
mov
lea
jne
mov
mov
and
lea
jne
mov
mov
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
jne
mov
cmp
jg
jl
mov
cmp
jb
mov
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
je
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
inc
xor
mov
call
and
and
or
jne
jmp
mov
cmp
jg
jl
mov
cmp
jbe
jmp
mov
cmp
jl
jg
mov
cmp
ja
jmp
mov
cmp
jl
jg
mov
cmp
jb
xor
inc
mov
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
ror
mov
shr
shr
xor
movzx
imul
xor
add
mov
mov
ror
mov
ror
imul
sub
xor
xor
mov
rol
imul
shr
sub
mov
xor
mov
mov
mov
sub
movzx
imul
mov
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
mov
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
rol
imul
mov
xor
ror
xor
xor
mov
xor
mov
xor
xor
mov
imul
ror
sub
xor
mov
mov
not
push
ror
push
add
xor
imul
mov
mov
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
movzx
mov
mov
shr
mov
mov
xor
mov
movzx
shr
sub
mov
mov
mov
mov
xor
xor
movzx
mov
movzx
mov
ror
xor
imul
xor
add
mov
ror
imul
ror
sub
xor
mov
xor
mov
rol
imul
shr
sub
xor
mov
mov
sub
imul
shr
sub
xor
mov
xor
mov
ror
imul
ror
xor
xor
mov
mov
sub
ror
imul
ror
xor
xor
mov
xor
mov
xor
ror
rol
imul
mov
xor
mov
xor
xor
xor
mov
imul
ror
sub
xor
mov
xor
not
ror
add
imul
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
mov
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
and
mov
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
mov
mov
mov
mov
shr
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
mov
and
neg
sbb
neg
jmp
cmp
jmp
cmp
jmp
cmp
sbb
neg
jmp
cmp
sbb
inc
test
je
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
shr
mov
shr
sub
shr
imul
movzx
sub
xor
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
mov
mov
xor
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
mov
push
push
push
xor
and
mov
lea
jne
mov
mov
and
lea
jne
mov
mov
mov
shr
mov
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
jne
mov
cmp
ja
jb
mov
cmp
jb
mov
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
je
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
inc
xor
mov
call
and
and
or
jne
jmp
mov
cmp
ja
jb
mov
cmp
jbe
jmp
mov
cmp
jb
ja
mov
cmp
ja
jmp
mov
cmp
jb
ja
mov
cmp
jb
xor
inc
mov
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
shr
mov
shr
sub
shr
imul
movzx
sub
xor
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
mov
mov
xor
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
mov
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
and
sub
mov
push
push
push
xor
mov
and
mov
lea
jne
mov
mov
and
je
lea
mov
jmp
mov
mov
mov
mov
mov
shr
cmp
jg
je
dec
je
dec
je
dec
je
sub
je
dec
je
mov
mov
test
je
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
mov
lea
mov
lea
push
lea
push
mov
dec
push
call
test
mov
mov
je
mov
mov
and
mov
jne
mov
mov
mov
not
mov
jmp
xor
cmp
sete
jmp
xor
cmp
setne
jmp
sub
je
dec
je
dec
je
dec
je
dec
jne
mov
xor
inc
shl
mov
and
neg
sbb
neg
jmp
xor
cmp
setl
jmp
xor
cmp
setle
jmp
xor
cmp
setg
jmp
xor
cmp
setge
test
je
mov
mov
and
mov
jmp
mov
mov
mov
mov
mov
not
shr
mov
shr
sub
shr
imul
movzx
sub
xor
mov
mov
mov
sub
ror
ror
imul
add
xor
mov
mov
sub
mov
ror
imul
ror
add
mov
xor
mov
movzx
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
mov
xor
xor
mov
not
ror
add
imul
xor
mov
mov
xor
imul
mov
ror
add
mov
xor
mov
add
mov
ror
imul
mov
ror
add
xor
mov
xor
mov
rol
imul
shr
add
xor
push
xor
mov
push
imul
mov
ror
xor
mov
mov
xor
xor
lea
push
call
mov
add
mov
xor
mov
mov
mov
xor
mov
push
pop
mov
mov
sub
push
lea
add
push
push
call
mov
lea
add
push
push
push
call
mov
add
mov
mov
mov
mov
mov
add
shr
add
mov
mov
test
je
mov
mov
mov
xor
mov
mov
movzx
mov
mov
shr
shr
sub
movzx
mov
mov
mov
mov
mov
xor
xor
mov
movzx
mov
movzx
mov
sub
shr
imul
sub
xor
mov
sub
mov
ror
imul
ror
add
xor
mov
mov
sub
ror
imul
ror
add
xor
mov
xor
mov
rol
imul
shr
sub
mov
xor
xor
xor
mov
not
ror
add
imul
xor
mov
xor
mov
imul
ror
mov
add
xor
mov
mov
ror
lea
ror
imul
add
xor
mov
xor
mov
rol
imul
shr
add
xor
xor
mov
imul
xor
ror
xor
mov
xor
xor
mov
mov
mov
mov
mov
mov
add
dec
mov
mov
jne
mov
mov
mov
jmp
mov
cmp
je
call
mov
add
mov
jmp
neg
sbb
and
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
mov
sar
enter
sbb
mov
cli
sar
ss
adc
mov
pop
dec
inc
sub
(bad)
mov
and
push
movs
mov
out
mov
xor
sahf
das
enter
je
idiv
mov
(bad)
pushf
push
adc
clc
(bad)
cs
cmp
xlat
pop
icebp
inc
sub
int3
int3
int3
int3
int3
xor
mov
loopne
xlat
cmp
dec
and
mov
in
inc
push
enter
and
pop
jnp
inc
sub
or
jne
jg
lock
mov
int3
int3
int3
int3
int3
cmp
daa
sar
jne
mov
jp
jns
mov
xor
push
repnz
dec
(bad)
(bad)
jg
in
test
or
loop
jmp
cmp
and
mov
jbe
movd
ficom
sbb
lea
sub
push
mov
pop
mov
(bad)
iret
inc
sahf
retf
push
mov
int3
int3
int3
int3
adc
cmc
es
adc
xchg
into
fcom
xchg
bound
jbe
cmps
repz
push
or
fwait
add
dec
push
sub
mov
inc
(bad)
out
mov
mov
mov
je
jae
pop
ret
stc
inc
movs
xor
dec
call
pop
mov
or
int3
int3
int3
movs
or
dec
add
addr16
add
leave
arpl
outs
out
adc
or
test
out
push
xlat
sar
cmp
cwde
hlt
(bad)
push
or
push
sbb
test
push
dec
fisub
int3
int3
int3
xchg
dec
jl
xchg
inc
aam
out
push
fs
cmp
jge
out
mov
jno
out
add
out
rol
int
or
adc
jp
ret
fnstcw
jecxz
call
sbb
(bad)
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
mov
mov
mov
div
ret
mov
mov
div
ret
mov
mov
mov
div
ret
mov
xor
mov
mov
div
ret
int3
int3
int3
int3
int3
mov
cmp
je
xor
jmp
mov
cmp
jne
movzx
cmp
je
cmp
jne
xor
cmp
jbe
cmp
jmp
xor
cmp
jbe
cmp
setne
push
mov
call
push
call
or
or
pop
pop
call
mov
mov
call
mov
mov
call
cmp
jne
push
call
pop
call
xor
ret
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
call
jmp
int3
int3
int3
int3
int3
push
push
call
xor
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
xor
lock
test
je
cmp
jne
xor
inc
cmp
jne
push
call
pop
jmp
push
call
jmp
cmp
jne
mov
push
push
call
pop
pop
test
je
jmp
mov
cmp
jne
push
push
call
pop
pop
mov
test
jne
xor
mov
xchg
cmp
je
push
call
pop
test
je
push
push
push
call
mov
mov
mov
mov
mov
cmp
ja
test
je
test
jne
mov
test
je
cmp
ja
inc
mov
jmp
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
cmp
jne
xor
test
sete
mov
mov
movzx
push
call
pop
test
je
inc
mov
inc
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
cmp
jne
call
mov
mov
jmp
xor
inc
ret
mov
mov
mov
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
cmp
jne
ret
jmp
int3
int3
int3
int3
int3
push
push
call
and
mov
mov
cmp
jne
push
call
pop
jmp
push
call
pop
and
mov
mov
mov
mov
lea
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
neg
pop
sbb
neg
dec
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
push
call
push
call
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
shl
mov
mov
push
pop
shl
mov
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
int3
int3
int3
int3
int3
push
call
xor
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
push
push
call
xor
mov
test
je
cmp
je
mov
mov
cmp
jne
mov
test
js
cmp
jae
add
mov
mov
sub
neg
sbb
not
and
jmp
xor
inc
ret
mov
xor
mov
mov
mov
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
call
test
je
push
call
test
je
movzx
push
pop
cmp
je
cmp
jne
xor
inc
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
xor
push
push
push
mov
add
movzx
movzx
add
add
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
and
and
mov
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
call
xor
lea
xor
mov
lea
push
call
mov
xor
mov
xor
cmp
je
test
jne
mov
mov
not
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
push
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
push
mov
test
push
cmps
ret
mov
add
shl
(bad)
aaa
xchg
sbb
int3
int3
int3
int3
int3
cld
push
ret
fisubr
sbb
pushf
inc
adc
cmp
add
int3
and
pop
adc
lods
div
in
neg
aas
dec
inc
sbb
pop
adc
aam
cmpxchg
mov
sbb
test
call
scas
mov
aaa
jo
loop
test
cmp
push
adc
movs
(bad)
mov
outs
and
repnz
rol
adc
pop
int
add
or
inc
lea
pushf
ja
pop
aad
jo
push
adc
xor
cmc
sar
sub
lods
xchg
add
sbb
xchg
call
loop
mov
jno
jecxz
popa
dec
fwait
add
push
xchg
ror
movs
cmps
jge
movs
aas
cmp
or
sbb
cdq
rol
inc
mov
ins
and
xchg
and
or
xor
fild
(bad)
int3
int3
int3
int3
int3
push
hlt
sub
aas
sbb
sbb
sub
jns
cdq
xor
pop
mov
aas
jno
int3
int3
int3
int3
int3
xor
xchg
in
retf
fadd
fistp
hlt
jp
mov
movs
push
push
and
push
mov
pushf
es
int3
int3
int3
int3
xor
out
push
lea
hlt
mov
int
in
test
cld
and
and
jno
xchg
inc
xor
mov
lds
mov
xor
aas
retf
ror
push
fiadd
jno
pop
outs
mov
aaa
or
jo
jo
and
int3
int3
int3
add
cmp
stos
es
rdmsr
xor
mov
rcr
pop
aas
mov
ret
inc
ins
rol
push
mov
int3
fiadd
test
xchg
pop
nop
add
jecxz
jmp
mov
mov
int3
int3
int3
int3
push
loope
mov
cmp
jne
dec
(bad)
jl
mov
cmps
sub
jne
xchg
lds
data16
int3
int3
int3
int3
and
loop
jbe
fadd
ror
int3
int3
int3
mov
sbb
push
fs
aad
icebp
rcr
push
repz
or
mov
lods
loop
adc
jns
int3
int3
int3
int3
enter
std
inc
movs
or
mov
scas
outs
outs
or
xlat
xchg
ins
cwde
cwde
mov
sbb
int3
int3
int3
int3
mov
in
mov
dec
js
ss
mov
push
shr
(bad)
or
mov
int3
int3
int3
int3
int3
ja
ins
jne
mov
push
idiv
call
jecxz
aaa
add
ins
pusha
cmps
mov
mov
xlat
or
mov
dec
inc
cmp
jbe
cmp
lock
sti
nop
add
or
mov
fdiv
ss
int3
int3
int3
int3
inc
in
adc
xchg
test
outs
imul
movs
sbb
push
arpl
push
sbb
loopne
lds
mov
sbb
xchg
outs
jge
and
push
and
push
push
add
cmps
adc
dec
sub
jp
rol
test
int3
aas
ror
xchg
cmc
xor
mov
or
int3
cmps
arpl
in
push
push
inc
jmp
xchg
(bad)
push
in
mov
mov
bound
mov
jb
cmp
int
int3
int3
int3
int3
int3
rol
dec
mov
push
or
fisttp
mov
lahf
cwde
imul
mov
lods
mov
adc
pop
cmc
das
sub
rcl
add
bsf
lahf
dec
jl
repnz
mov
or
mov
sbb
scas
movs
test
movs
xchg
stc
or
scas
int3
int3
int3
int3
int3
or
test
cwde
mov
fcmovnb
mov
lods
jno
lods
xor
jb
mov
mov
xor
add
aas
jge
es
sub
test
stc
pop
lock
mov
int3
cwde
shl
pop
aaa
jnp
dec
out
push
xor
jae
xchg
mov
lahf
dec
sub
ds
(bad)
call
movs
pop
jg
sbb
fs
push
mov
pop
mov
xchg
in
xchg
int3
int3
int3
int3
int3
popf
push
cmp
lods
mov
jle
jg
pop
fbld
sub
popf
jecxz
dec
xor
cmp
int3
and
ins
js
push
push
(bad)
fwait
mov
inc
or
fimul
sub
iret
(bad)
scas
icebp
mov
int3
int3
int3
int3
rol
push
paddsb
mov
mov
fmul
scas
fst
xchg
mov
and
adc
jno
mov
cli
outs
xor
lsl
and
es
pop
mov
aad
fwait
xchg
fwait
ins
(bad)
int3
jecxz
inc
addr16
dec
jne
mov
popa
int3
int3
int3
int3
int3
je
inc
cli
cdq
jae
shl
loop
in
adc
repz
int3
int3
int3
int3
and
or
and
adc
sub
cmps
bound
mov
lock
int3
int3
int3
int3
int3
jbe
adc
sub
sbb
js
pop
popf
dec
mov
inc
fsub
mov
rcl
add
push
add
int3
int3
int3
int3
int3
enter
mov
xchg
adc
jns
pop
out
pop
call
mov
int
push
ds
es
lea
or
xor
call
mov
cmp
adc
dec
jg
sbb
in
leave
int3
int3
int3
int3
int3
xchg
adc
(bad)
and
lods
fiadd
icebp
int3
int3
int3
int3
int3
inc
outs
(bad)
or
nop
std
pop
sar
mov
mov
dec
stos
cwde
pop
mov
aam
jg
mov
mov
adc
inc
fwait
jb
cli
enter
mov
jae
pop
jecxz
out
xor
adc
(bad)
je
inc
aaa
pop
pop
lahf
outs
inc
jg
addr16
mov
div
xchg
(bad)
sbb
(bad)
(bad)
icebp
ror
adc
test
out
or
js
jmp
lods
cmc
addr16
shl
cmp
mov
sub
enter
ret
push
out
pop
and
enter
xchg
or
push
sub
sub
mov
push
aaa
jo
mov
fs
in
leave
jae
add
cld
into
iret
fdiv
mov
pop
mov
jp
and
and
add
push
sbb
jl
add
arpl
mov
out
add
aaa
xchg
dec
inc
test
rcl
mov
push
mov
test
sbb
mov
adc
add
daa
jae
mov
test
(bad)
xor
scas
xchg
push
aas
mov
loopne
jbe
push
mov
push
(bad)
inc
xor
lds
call
jne
mov
jge
retf
loope
add
cmp
int3
int3
int3
int3
imul
mov
and
enter
sub
adc
popa
data16
int3
int3
int3
int3
mov
add
mov
test
or
clc
mov
(bad)
jo
dec
fistp
jg
das
cmp
jle
push
add
sti
mov
out
sub
jnp
ja
dec
jl
mov
mov
xchg
inc
sbb
movs
mov
(bad)
mov
(bad)
sbb
int3
daa
out
outs
pop
xchg
push
in
jbe
add
(bad)
int3
fdiv
xor
int3
int3
int3
push
pop
push
in
fnstenv
dec
push
xchg
int
fdiv
lahf
aaa
inc
mov
(bad)
fwait
enter
shl
aam
push
movs
mov
or
jl
loop
movs
add
lods
xchg
mov
int3
int3
and
cld
sar
push
sub
popa
inc
add
fdiv
lahf
push
lock
and
jns
sar
inc
mov
cld
adc
dec
xchg
mov
jmp
mov
int3
int3
int3
int3
int3
jge
mov
nop
inc
sub
into
test
add
xor
cmp
xchg
cmc
xor
jl
adc
addr16
rol
and
mov
pop
adc
int3
int3
int3
jge
and
jae
sub
lahf
push
lock
dec
sbb
and
call
push
xchg
xor
int3
cwde
js
test
inc
adc
loopne
or
dec
xchg
fstp
aad
or
ds
xor
push
call
(bad)
xchg
sub
shr
out
ins
fisubr
pop
(bad)
repz
iret
lods
stos
das
mov
int3
int3
int3
int3
je
outs
out
push
js
pusha
push
sub
mov
int3
sbb
mov
push
add
sbb
outs
pop
push
mov
(bad)
mov
sbb
les
mov
in
push
pop
mov
jnp
jne
icebp
repnz
int3
int3
int3
int3
int3
rol
lahf
dec
dec
inc
aaa
loop
adc
push
fs
mov
fidivr
lods
dec
xchg
push
leave
in
adc
int3
int3
int3
int3
imul
(bad)
push
add
std
fucom
ins
aas
lock
mov
sub
ror
or
pop
mov
push
jl
jle
xlat
mov
dec
fisttp
mov
pushf
and
and
and
gs
adc
add
sbb
fisub
into
aaa
pop
sbb
popa
sti
int3
int3
int3
int3
int3
aas
andnps
int3
test
pop
xchg
test
jmp
imul
mov
mov
xchg
push
pop
sub
sbb
cmps
dec
test
cmp
pop
sub
sub
loope
(bad)
pop
out
int3
int3
int3
int3
int3
pop
imul
dec
(bad)
xor
mov
(bad)
add
mov
and
inc
in
clc
test
pop
popf
add
(bad)
jge
jg
or
or
cdq
scas
out
(bad)
xchg
rol
loope
jmp
and
into
jb
imul
int3
int3
int3
loope
ja
or
xchg
mul
daa
cdq
jecxz
or
pushf
sbb
call
enter
pusha
mov
bound
cmps
jb
in
gs
addr16
cmp
js
ins
jmp
dec
scas
pop
int3
int3
int3
int3
int3
and
xchg
(bad)
or
popf
mov
fisttp
shl
les
push
mov
or
lock
cdq
je
cmp
xchg
int3
and
gs
inc
pushf
imul
mov
jae
and
fwait
and
mov
clc
in
mov
sbb
clc
jle
loope
idiv
test
push
pop
jg
adc
aam
jbe
int3
int3
int3
int3
int3
scas
dec
cld
mov
in
adc
test
mov
sub
ss
mov
fwait
xor
mov
movs
add
mov
fld
or
mov
dec
mov
fwait
mov
and
cmp
ins
jae
lock
int3
int3
int3
int3
test
and
inc
dec
xor
add
cmp
aas
dec
(bad)
jp
cli
or
or
inc
cdq
jmp
rcr
add
aam
push
sbb
les
int3
int3
int3
int3
dec
stos
into
stos
cli
jmp
sub
fstp
sbb
pop
or
int3
int3
int3
int3
sub
mov
hlt
adc
inc
packsswb
mov
iret
cmps
ins
jg
sbb
cdq
into
add
xor
(bad)
cwde
movs
pop
cmp
cmp
clc
out
push
jmp
int3
int3
int3
test
test
mov
or
enter
ss
repnz
int3
mov
loopne
sbb
cmp
cmp
xchg
in
jmp
pop
mov
xchg
push
jnp
stos
lea
out
aas
loop
hlt
ins
cmps
aad
ins
lds
sub
mov
sub
(bad)
loope
(bad)
int3
int3
int3
pop
or
xor
and
jmp
pushf
fucomp
pop
mov
lock
bound
addr16
hlt
push
jb
xor
int3
int3
int3
int3
int3
mov
inc
stc
jp
mov
les
fisttp
sub
pusha
pop
jecxz
sbb
idiv
push
in
xchg
jno
ror
rcl
fld
std
pop
mov
rcr
retf
adc
les
jge
sub
cs
mov
sbb
add
sbb
in
add
mov
(bad)
cmps
mov
sbb
out
fld
and
test
inc
xlat
dec
arpl
lahf
mov
lds
ret
ss
inc
mov
stos
vmwrite
int3
int3
int3
scas
jg
loopne
das
ds
mov
call
data16
xchg
push
jmp
xchg
mov
fidivr
jle
int3
int3
int3
int3
push
lds
fadd
dec
adc
xor
push
adc
dec
std
sbb
xlat
inc
fsubr
ds
mov
cld
mov
addr16
in
ja
in
pop
sub
test
call
int3
int3
int3
(bad)
pop
fdivr
xlat
push
loope
adc
add
mov
fnstsw
adc
cmp
data16
movs
movs
(bad)
neg
or
jecxz
movs
inc
clc
cmps
(bad)
int3
int3
int3
int3
int3
rcl
pop
rcr
not
shl
sbb
xchg
cs
into
outs
and
cmp
add
fidiv
int3
int3
int3
int3
xchg
jns
cmps
mov
jne
leave
xchg
jmp
push
scas
or
mov
xchg
dec
cdq
fist
lds
mov
add
ss
dec
cmp
repz
inc
push
movs
add
in
dec
xor
add
in
iret
sub
int3
int3
int3
int3
add
xchg
or
mov
adc
aas
inc
jnp
imul
ret
sbb
inc
iret
push
lods
je
and
xor
stos
push
inc
xchg
mov
sbb
aaa
popf
xchg
push
mov
inc
mov
sbb
sub
adc
int3
int3
int3
jne
inc
ror
pop
inc
push
test
aam
pop
push
ins
adc
fimul
int3
int3
int3
int3
pop
inc
adc
pop
les
fsubr
shl
cmc
daa
(bad)
cmp
clc
in
rcl
outs
and
int3
int3
int3
int3
int3
fs
push
lods
mov
out
mov
scas
mov
int3
int3
int3
mov
add
push
jmp
int3
xor
stos
call
and
retf
pop
icebp
cmp
xor
movs
outs
pop
jecxz
sbb
loope
out
mov
mov
ins
pusha
xor
xor
popf
paddusb
or
int3
int3
int3
scas
add
jae
shl
adc
sub
push
mov
lods
sub
ja
mov
dec
leave
int3
int3
int3
int3
int3
popa
xlat
jle
mov
cmps
ret
mov
imul
fcomp
test
sub
xchg
out
push
sti
in
fucomi
inc
fs
inc
mov
std
or
(bad)
push
cwde
xchg
inc
or
lea
fild
push
sub
int3
int3
int3
int3
int3
xor
cmp
xlat
shr
xor
je
adc
cmc
in
call
xchg
adc
and
xchg
add
(bad)
jno
int3
int3
int3
int3
int3
std
mov
(bad)
mul
sbb
fstp
lods
or
(bad)
jne
pop
mov
mov
dec
setns
stos
mov
mov
cdq
std
xchg
fdivr
add
fisubr
mov
push
movs
and
int3
int3
int3
int3
sbb
jns
push
and
xchg
int
xor
inc
add
sub
mov
cmp
je
call
stc
ror
and
push
mov
cmp
sbb
int3
int3
int3
pop
imul
add
sub
aam
xor
loopne
mov
xchg
int3
int3
int3
int3
int3
dec
lahf
or
or
pop
and
sahf
mov
inc
test
dec
jl
or
lods
dec
rol
ror
jmp
jge
xlat
ret
pop
js
sbb
cmp
dec
clc
sbb
and
loopne
inc
ss
or
jmp
clc
mov
test
test
and
inc
ja
ret
pop
push
mov
mov
sar
xchg
cmps
scas
fidivr
jecxz
push
push
je
(bad)
aad
xor
xchg
and
int3
int3
int3
hlt
cwde
inc
daa
jo
test
in
add
mov
jne
das
push
sbb
es
mov
outs
xchg
push
lds
mov
(bad)
pop
adc
stos
test
bound
popa
enter
mov
xor
inc
aad
retf
push
ds
loop
sub
mov
iret
add
adc
add
hlt
mov
nop
sbb
fisttp
ins
xchg
mov
jp
psllq
enter
mov
cmc
mov
aad
adc
or
int3
int3
rol
shl
cmc
sub
lods
scas
mov
sub
push
aas
or
push
pextrw
aas
jmp
test
fstp
movs
addr16
sbb
sbb
rol
int3
int3
int3
mov
push
dec
and
cdq
ss
in
fild
jg
int3
int3
int3
int3
int3
mov
jbe
cmp
or
je
mov
sub
sbb
inc
sbb
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
cmp
jae
shld
shl
ret
mov
xor
and
shl
ret
xor
xor
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
cmp
jae
mov
add
jmp
mov
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
call
mov
mov
call
mov
pop
jmp
int3
int3
int3
int3
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
inc
add
inc
add
(bad)
(bad)
inc
popa
inc
add
popa
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
inc
add
inc
