(bad)
(bad)
(bad)
mov
push
mov
add
test
je
mov
xor
mov
inc
xor
in
outs
dec
shr
and
or
enter
and
leave
div
sti
jne
pop
ret
int3
add
push
mov
push
je
(bad)
fucomi
sbb
jle
sahf
xor
mov
mov
mov
mov
push
fist
push
push
push
call
add
xor
cmp
ja
mov
pop
ret
out
mov
loop
xor
xor
mov
xchg
ss
(bad)
sti
push
adc
inc
sbb
pop
mov
cli
add
sub
sti
pop
lahf
mov
push
ja
mov
sub
sar
or
ins
adc
xor
add
add
add
lea
cwde
test
mov
push
push
adc
xor
push
push
pop
nop
push
fs
push
push
outs
sar
pop
jl
adc
pop
dec
xchg
in
dec
cmp
and
aaa
push
cdq
fmul
push
push
or
adc
inc
sbb
sar
xchg
rcr
add
mov
mov
in
or
push
mov
out
push
or
adc
push
cld
(bad)
(bad)
(bad)
jae
jae
dec
or
inc
xor
call
cmp
cs
adc
out
dec
ins
add
pop
or
outs
or
retf
cmp
fdivrp
in
add
mov
add
add
dec
sbb
hlt
cmp
jge
cwde
lea
lea
push
(bad)
(bad)
jbe
ss
or
cmp
push
push
stc
xor
fsub
xlat
push
xor
mov
lea
push
push
push
xchg
or
sbb
pop
add
cmp
stc
or
add
inc
adc
je
add
xchg
sbb
adc
xchg
movzx
sub
lea
mov
push
(bad)
mov
cmp
jecxz
mov
(bad)
out
pop
in
and
pop
adc
inc
jae
loop
ficom
test
cmp
add
push
sti
sets
cmp
jne
mov
fsub
mov
call
xchg
push
xor
adc
cmp
sub
push
cmc
arpl
fimul
push
push
push
stos
or
sub
mov
mov
xor
shl
add
push
dec
cmp
sbb
jle
push
add
xor
cmp
jne
shl
cmp
popa
pop
push
imul
or
dec
and
sti
rcl
and
shl
mov
adc
dec
pop
sbb
push
adc
mov
shr
push
jmp
push
sbb
cmp
jne
lods
mov
dec
add
push
mov
adc
push
mov
mov
ja
mov
push
pop
inc
mov
shl
mov
or
jg
in
shr
enter
jmp
(bad)
sbb
fistp
pop
push
dec
js
jbe
mov
inc
sbb
sbb
loopne
mov
shl
mov
add
mov
cld
cmp
jns
out
lock
push
mov
mov
xchg
mov
pop
pop
mov
cmp
ja
pop
je
and
mov
ret
cdq
lock
fwait
cs
je
and
cdq
mov
jle
sub
test
jns
mov
add
xchg
sub
and
push
push
cs
(bad)
add
stos
or
or
xchg
sbb
cs
dec
cmp
sub
jp
push
add
xor
push
hlt
or
mov
outs
aas
(bad)
lock
je
mov
add
mov
add
dec
jne
test
inc
dec
jne
test
pop
cmp
push
cmp
je
or
je
adc
cwde
out
je
push
or
or
ret
cmp
dec
push
add
xor
pop
push
push
mov
lea
(bad)
(bad)
dec
retf
xadd
dec
test
jg
mov
mov
push
mov
call
ret
push
inc
or
test
icebp
sbb
or
rcr
push
mov
pop
cs
outs
lock
jl
sub
cmp
jae
mov
shl
add
test
cdq
cmp
mov
inc
cld
or
mov
push
mov
(bad)
in
mov
(bad)
mov
leave
ret
push
push
into
cdq
sub
inc
mov
outs
fisttp
push
pop
je
fcomp
je
jge
mov
jmp
jb
push
adc
sub
gs
cli
inc
sbb
stos
in
leave
cmp
add
inc
in
mov
stos
xchg
inc
int3
(bad)
test
frstor
iret
je
cdq
jmp
or
ret
push
jmp
lea
push
mov
cmp
mov
or
xor
mov
adc
cmp
cmc
dec
adc
push
mov
in
outs
jp
ret
add
sbb
inc
fist
fidiv
lods
push
aam
lods
xor
je
push
std
jmp
pop
xchg
sbb
ja
jo
xchg
dec
aaa
push
(bad)
lods
mov
inc
loope
(bad)
in
call
inc
add
(bad)
imul
fnsave
dec
adc
mov
lock
dec
movzx
ror
push
(bad)
sbb
add
or
mov
mov
and
xchg
data16
add
sahf
ret
add
or
(bad)
or
ret
push
(bad)
jae
lea
cmp
aas
cs
cmp
adc
icebp
stc
add
inc
add
push
push
xchg
push
inc
ret
sub
xor
in
imul
mov
push
add
xor
adc
sub
push
sub
push
push
sub
ror
add
lods
js
sbb
into
mov
cld
push
imul
neg
and
into
sub
sub
fcmovnu
out
push
dec
(bad)
cmp
add
ds
jl
je
mov
adc
xchg
(bad)
sbb
push
mov
cld
imul
lea
add
add
and
aas
ret
fldenv
adc
jg
mov
mov
xchg
or
add
jmp
adc
ffree
sbb
add
push
push
push
cmp
adc
push
pop
or
sub
arpl
inc
stos
test
xchg
lds
add
inc
pop
hlt
and
mov
mov
call
adc
sub
adc
or
cmps
or
lahf
fiadd
jge
mov
inc
push
lea
lea
push
cwde
mov
cwde
mov
push
mov
xchg
clc
mov
sbb
xor
cmp
shl
sub
cmp
or
mov
jle
cmp
push
cs
push
scas
mov
adc
out
or
xor
cmp
pop
je
push
or
sbb
clc
jge
push
push
hlt
add
adc
pop
mov
jl
xchg
dec
cmp
loopne
test
or
or
repnz
jle
clc
aas
fiadd
or
jmp
fidivr
(bad)
jge
mov
jmp
ret
add
and
push
inc
mov
ret
cmp
add
cld
cmps
push
xor
push
jne
loop
inc
dec
jle
pusha
add
xor
add
xrelease
mov
add
push
jmp
adc
js
pop
pop
xchg
add
or
ja
loop
ror
add
sbb
cmp
jge
cmp
cmc
or
inc
lds
jo
dec
(bad)
pop
mov
push
push
mov
mov
das
mov
push
push
dec
out
inc
sub
xor
loopne
push
movs
sub
and
fist
(bad)
mov
addr16
add
shl
sahf
jmp
js
add
je
dec
cwde
dec
or
mov
out
push
ret
retf
shr
sti
aas
sub
mov
ja
push
mov
or
mov
popa
xor
fs
loopne
jle
or
and
inc
mov
push
jmp
fcomp
push
push
push
xor
sub
das
or
cs
pop
pop
leave
mov
jge
adc
fnstenv
xor
sub
mov
ret
fistp
jne
mov
push
div
hlt
sub
lods
cmp
pop
push
ja
lea
dec
push
mov
fild
mov
jae
retf
leave
mov
pop
aam
add
shl
aas
pop
mov
add
daa
push
push
or
or
movs
fadd
je
scas
mov
cmps
sbb
xor
jle
div
ins
add
lock
ret
cmps
mov
cmps
shl
jne
fiadd
mov
hlt
inc
sbb
push
cs
dec
outs
and
cmp
xchg
(bad)
pusha
lock
mov
sbb
xor
pusha
mov
pop
inc
into
cs
xchg
fmul
push
cmps
push
push
bound
xor
and
in
lds
jecxz
out
sub
mov
lea
in
xchg
add
add
xor
add
mov
retf
add
mov
add
shr
mov
and
mov
inc
in
sti
push
fwait
push
sub
mov
dec
repnz
pop
ud2
push
test
push
cmc
xor
mov
inc
adc
or
lea
push
fwait
or
xchg
sbb
mov
and
jne
cmp
sar
cmp
xor
cmp
xchg
out
lock
push
sub
add
sbb
xor
push
jg
add
int3
push
push
sti
mov
add
aam
call
das
cmp
jle
rol
imul
dec
sub
fdivr
in
push
imul
inc
mov
sub
push
push
lock
rcr
push
je
jmp
pop
je
add
pop
jo
dec
xchg
pop
ror
jae
mov
imul
leave
xor
call
inc
shl
in
adc
dec
mov
push
fstp
fadd
mov
nop
fsubr
pop
mov
lds
mov
push
push
arpl
cmp
fs
enter
mov
or
pop
in
and
in
or
movs
jmp
push
push
add
push
and
div
lea
sbb
sbb
lock
dec
inc
mov
mov
xor
jg
(bad)
jge
jne
fs
or
out
out
cmps
je
push
push
push
cmp
(bad)
mov
cmp
mov
mov
mov
ret
mov
push
sub
shr
ret
dec
adc
adc
inc
add
xchg
push
cmp
retf
mov
push
xchg
or
xchg
dec
test
and
jne
inc
add
push
test
arpl
xchg
pop
shl
call
pop
or
inc
add
fistp
or
or
das
leave
adc
and
dec
mov
(bad)
push
pminub
mov
sbb
jl
cmp
pop
cs
lods
xchg
out
sbb
add
addr16
push
out
out
push
scas
sub
pop
out
cmp
sbb
add
sbb
pop
je
jp
pop
jno
xor
lock
sahf
cld
jle
lock
push
or
lea
cmp
lock
push
frstor
push
popa
jo
push
mov
jg
(bad)
lea
bound
mov
lods
into
pop
jle
jl
movs
push
daa
fsubr
mov
cmp
push
inc
adc
in
iret
cmps
add
icebp
pop
pop
and
sub
cld
mov
push
lock
lds
mov
and
push
mov
setp
add
test
jne
clc
sbb
pop
mov
test
fbstp
sar
sbb
dec
jecxz
cmp
je
inc
out
shr
ret
pop
dec
rcl
adc
push
push
add
inc
lock
add
sub
mov
pop
jl
jmp
mov
pop
dec
jmp
and
jne
ret
xlat
icebp
lea
bound
fisttp
jmp
push
xor
in
add
inc
fist
or
mov
out
pop
push
int
cmp
add
push
cld
push
icebp
add
inc
cmp
call
mov
xchg
inc
js
fistp
cmp
push
cmp
int
fdiv
es
test
push
and
and
jno
jl
aas
into
stos
iret
and
lea
push
fs
push
lods
mov
ficom
xor
pop
je
sub
je
push
and
cmp
cmp
mov
push
pop
xor
lahf
push
cmp
in
cmp
pusha
test
fdiv
fiadd
out
ror
repz
sub
jo
xchg
mov
test
test
popf
push
sbb
xchg
fst
fwait
mov
xor
shr
(bad)
jp
pminsw
outs
push
rol
add
ror
mov
and
pop
leave
pop
pop
inc
xchg
cmp
xchg
add
mov
sbb
push
ins
adc
rcr
xor
pop
enter
cwde
mov
push
les
shr
or
inc
add
sub
mov
ficomp
cmp
sub
lods
add
cli
das
pop
adc
push
mov
dec
push
mov
mov
into
arpl
or
je
mov
inc
or
les
shl
pop
mov
sbb
dec
jp
dec
adc
fadd
mov
xchg
lea
icebp
(bad)
sbb
dec
sbb
mov
lea
clc
repnz
or
and
mov
jmp
push
icebp
rcr
pop
adc
push
lea
mov
loop
adc
sbb
mov
movs
add
fild
cmp
jne
push
jmp
movs
cwde
inc
sbb
pusha
inc
sti
mov
sbb
pop
and
fbld
shl
jmp
pop
(bad)
jecxz
loope
je
lahf
into
add
push
jmp
adc
mov
gs
adc
ret
mov
inc
icebp
add
sbb
mov
sub
pop
cs
or
adc
int3
jg
shl
call
ficom
mov
push
cmps
mov
pop
int3
push
sbb
shl
leave
lea
jmp
add
or
(bad)
cmp
test
retf
xchg
xchg
mov
ret
add
and
pop
sbb
add
xor
cmp
push
fldenv
pop
fidiv
or
fistp
in
pushf
in
xor
cmp
pop
fnsetpm(287
cli
repnz
xor
pop
push
jg
icebp
cmps
scas
pop
ja
not
test
push
(bad)
fwait
add
cdq
and
add
cmp
jbe
(bad)
lock
stc
push
in
mov
adc
retw
test
addr16
lea
shl
ret
mov
adc
add
pop
idiv
or
add
mov
add
lahf
pop
in
dec
popf
push
mov
mov
aas
inc
test
xor
sbb
or
fs
pop
sar
loope
cmp
or
je
cmp
fcomi
iret
adc
cmp
aam
ins
adc
jne
or
cmp
push
lea
xor
shl
xchg
(bad)
or
pop
clc
int3
jae
cmp
repz
pop
dec
bound
cld
add
in
sbb
xor
xlat
dec
xor
(bad)
jmp
call
es
int3
into
sub
sub
add
rcr
xlat
cmps
leave
je
mov
and
sar
outs
dec
pop
adc
loopne
mov
adc
ds
out
sbb
adc
inc
not
xchg
pop
and
mov
into
cmc
lods
sbb
sbb
fld
cld
fs
je
jmp
pop
add
pushw
in
push
pop
fucom
(bad)
(bad)
fsub
loopne
addr16
pushf
inc
cli
jg
in
jne
pop
popa
cmp
push
mov
adc
or
adc
add
pop
jne
and
mov
mov
ja
cmp
add
loopne
lods
inc
pop
xor
or
daa
or
xchg
mov
fld
jl
jge
and
adc
je
pop
jmp
mov
push
fmul
mov
rol
lods
jle
cmp
jl
fbld
xchg
jecxz
or
outs
sbb
sub
test
stc
repz
add
push
movs
push
mov
pop
mov
mov
nop
sbb
ins
in
push
jge
mov
xchg
dec
cmps
mov
push
scas
loope
xor
mov
add
xchg
add
jmp
mov
and
mov
lahf
adc
push
or
or
imul
or
xchg
popf
in
adc
and
je
jge
add
push
or
push
push
dec
sub
add
mov
fld
or
mov
dec
jg
xor
je
inc
xor
data16
xchg
enter
ret
mov
idiv
and
push
hlt
pop
ins
fild
push
or
fnstsw
inc
fchs
faddp
dec
cmp
int
pmaxub
push
test
or
inc
and
dec
cmp
pop
jae
or
je
jb
or
dec
mov
inc
adc
or
enter
xchg
ds
fdivrp
adc
fcom
dec
fisttp
pop
adc
mov
int3
push
stc
jo
clc
xchg
jbe
xchg
dec
adc
leave
xor
sbb
daa
sbb
mov
add
sbb
push
outs
push
or
sub
or
mov
add
push
mov
sbb
fist
inc
inc
daa
popa
jmp
leave
loopne
inc
dec
loopne
in
lds
pop
cmp
mov
fistp
xor
int
ds
call
jo
sub
or
pop
ror
fadd
and
mov
sbb
pop
dec
sbb
fstp
retf
lods
nop
sub
cmp
leave
(bad)
imul
outs
pop
xchg
mov
jns
sbb
ret
or
popf
push
test
mov
mov
push
(bad)
dec
or
xor
ficom
fcom
and
adc
inc
push
push
sbb
pop
add
dec
in
jns
or
xchg
or
dec
loopne
inc
inc
mov
mov
mov
mov
push
lea
cmp
out
mov
mov
imul
mov
inc
int
sbb
leave
in
das
cmps
xchg
das
dec
call
cmc
xchg
in
push
push
(bad)
jmp
dec
sub
(bad)
(bad)
sbb
and
xor
add
xor
push
mov
ret
cmp
dec
push
pop
sbb
rol
(bad)
lock
shl
aam
push
mov
inc
repnz
ja
pop
fsubr
loopne
not
(bad)
push
or
pop
push
mov
sub
adc
push
lock
loopne
add
cmp
adc
push
inc
aam
dec
pop
call
pop
jne
daa
dec
lock
jae
ja
aam
imul
pop
inc
clc
add
test
mov
add
rcl
mov
dec
aas
arpl
adc
jns
adc
sahf
das
aaa
sbb
daa
pusha
jge
shl
or
or
cld
aam
jnp
addr16
and
call
or
sub
pop
or
or
and
test
shl
adc
push
icebp
mov
in
dec
fistp
sbb
and
fwait
adc
adc
mov
pop
enter
inc
(bad)
in
jne
push
mov
lods
outs
shl
jl
xor
imul
ins
ds
lea
dec
push
pop
jmp
cld
adc
or
inc
or
pop
push
fisttp
and
mov
and
mov
sub
mov
inc
xchg
in
dec
(bad)
je
scas
jg
push
xchg
sbb
xchg
push
sbb
stc
clc
push
sete
pop
test
je
inc
add
mov
mov
cld
mov
jmp
in
js
jbe
cmp
push
xchg
fnstsw
scas
aaa
es
mov
jmp
fcomp
sub
xor
jnp
lock
cmp
pop
mov
xor
push
fnstsw
mov
pop
mov
fmul
daa
out
(bad)
in
push
push
push
pop
loop
out
lea
pop
mov
outs
(bad)
pushf
lea
daa
inc
push
mov
mov
cdq
sbb
adc
es
test
(bad)
and
je
mov
clc
ret
call
mov
or
sbb
xchg
aaa
movs
push
xor
sbb
sbb
out
pop
jle
in
xchg
mov
xor
jo
inc
pop
pop
push
jo
dec
rol
inc
repz
idiv
mov
enter
fcmovne
adc
add
sbb
adc
mov
and
and
and
pop
jnp
(bad)
push
lods
dec
and
ins
test
dec
mov
pop
jnp
push
mov
push
mov
push
cmp
add
not
sbb
mov
xchg
pushf
cwde
cli
mov
mov
ss
test
nop
je
or
fcomp
outs
icebp
mov
or
push
aam
dec
push
rol
adc
xor
stos
daa
test
inc
lea
sub
fadd
add
sbb
add
mov
adc
pushf
stos
(bad)
fdivr
repz
jne
(bad)
out
(bad)
jno
or
(bad)
jl
sbb
inc
pop
adc
add
rcr
fcomp
mov
call
or
cmp
lahf
cs
jae
mov
sub
xchg
or
xchg
mov
pop
or
lea
sub
dec
add
in
inc
mov
mov
push
loopne
sub
cmp
out
fucomip
jb
movs
mov
cmp
adc
bound
sbb
push
or
jecxz
mov
pushf
mov
lods
adc
cmp
pop
and
mov
adc
in
(bad)
and
lods
shl
adc
retf
rcl
add
ret
clc
push
test
pop
add
mov
lea
push
push
hlt
adc
push
repnz
daa
xor
daa
pop
cdq
pushf
mov
or
push
push
cdq
add
in
add
in
or
daa
and
jl
(bad)
and
loopne
cmc
jo
lock
je
and
shl
pop
mov
push
lea
leave
push
pop
nop
xor
sbb
push
add
push
add
inc
sbb
enter
xchg
test
pop
cmp
add
and
mov
in
sub
cmp
adc
jbe
nop
xor
mov
inc
mov
pop
adc
iret
es
sub
test
dec
push
adc
sbb
retf
cmp
add
push
fbstp
or
mov
dec
leave
sub
adc
aad
retf
pop
cld
mov
cmp
cmp
mov
jno
sub
dec
mov
sti
in
pop
jb
adc
in
call
in
adc
(bad)
mov
push
jl
mov
dec
add
xchg
push
icebp
adc
ret
jmp
(bad)
cmp
outs
jo
enter
fwait
jne
imul
or
sahf
push
jo
inc
inc
mov
cdq
repnz
pop
mov
or
mov
push
push
add
enter
and
cmps
jmp
ret
add
int3
test
das
mov
enter
bnd
mov
mov
push
add
sbb
int3
inc
add
sub
into
inc
iret
cmp
inc
dec
cmps
and
fwait
mov
cmp
jb
ja
cmp
ja
nop
pop
mov
lea
push
push
sbb
mov
sub
mov
xor
adc
pop
xor
in
inc
dec
add
adc
push
xor
ret
cdq
je
xchg
adc
pushf
pop
add
fidivr
jno
lea
or
add
push
jo
(bad)
sub
cld
and
cmp
push
adc
inc
push
loope
inc
and
mov
add
push
adc
mov
xor
sbb
adc
not
ss
fld
and
or
or
das
push
xor
iret
push
ins
data16
retf
das
cs
sub
and
push
dec
mov
sbb
push
sti
and
jne
mov
fs
ret
cmp
mov
clc
pop
add
cld
aam
leave
push
and
loope
xchg
mov
(bad)
dec
cld
cmp
mov
sub
pusha
sbb
cmp
ja
clc
dec
or
retf
sbb
add
adc
inc
cmp
shl
fcmovnbe
pop
or
je
out
mov
daa
cmp
mov
leave
add
cwde
bound
lock
dec
adc
jnp
inc
push
ds
repnz
mov
add
adc
mov
(bad)
or
xor
mov
mov
xor
adc
add
into
les
loop
or
jle
out
lea
add
mov
push
clc
or
imul
push
pop
jmp
jbe
aaa
sbb
or
je
cmp
outs
adc
jecxz
inc
scas
das
add
jmp
push
ds
push
ds
cmp
add
mov
adc
or
and
mov
mov
lea
push
pop
shl
push
sub
test
jle
add
mov
and
jge
or
add
xor
push
addr16
cs
push
xor
or
push
fwait
dec
in
dec
pop
jp
mov
or
pop
notrack
pusha
(bad)
cmp
ret
loop
add
mov
push
in
push
or
cwde
lods
xor
ret
inc
outs
jl
sbb
xchg
je
xchg
out
fld
das
mov
je
jle
or
sub
aas
pusha
push
xchg
jle
test
test
jle
lock
call
adc
je
pop
pop
jmp
and
je
add
aas
mov
push
icebp
test
iret
or
stos
xchg
push
in
inc
pop
in
sub
sub
inc
push
adc
dec
mov
sub
push
test
mov
mov
mov
add
stos
push
scas
or
aas
pop
pop
adc
or
pushf
inc
and
and
fcmovnb
in
mov
push
xor
fwait
sbb
jo
or
or
adc
push
sub
push
add
xor
and
adc
in
mov
lea
adc
les
jmp
ret
and
in
popa
adc
adc
jmp
pop
add
jl
cmp
push
(bad)
adc
sub
hlt
xchg
or
pop
bound
or
into
sbb
mov
sbb
adc
jne
cmps
and
pop
ret
retf
adc
mov
pop
sbb
outs
inc
ins
or
loopne
pop
add
fild
sbb
mov
cmp
(bad)
rcl
loop
jmp
cmp
jg
pop
popf
cmps
push
jle
jne
jmp
fs
jb
rol
push
lar
aas
add
inc
push
mov
test
in
dec
test
push
adc
xchg
iret
dec
or
aam
(bad)
fdiv
xchg
nop
loopne
in
call
xchg
xchg
xor
adc
hlt
push
clc
fcom
adc
cld
les
dec
pop
int3
mov
mov
rsm
cmp
std
lods
jbe
enter
inc
dec
pop
inc
jle
jg
(bad)
mov
(bad)
call
push
xchg
push
loopne
add
popf
retf
les
jb
loopne
enter
fs
repnz
mov
push
xor
push
repnz
dec
aam
les
in
repnz
dec
nop
dec
fadd
stos
in
dec
adc
fst
xor
add
icebp
inc
std
ins
ins
sbb
ins
loopne
js
push
or
add
inc
adc
pop
add
lock
jg
clc
(bad)
cli
mov
mov
scas
jae
stos
or
call
call
fsubr
icebp
pusha
ins
popw
push
add
adc
xor
pop
fsub
adc
add
in
in
push
jb
add
push
and
inc
push
xor
dec
pop
and
add
inc
mov
nop
and
rcl
sbb
pusha
pop
push
pop
pop
push
popa
rcl
inc
cld
mov
clc
adc
lea
cmp
mov
or
js
pop
jae
ins
or
push
jo
inc
pop
jmp
jg
cmp
pop
sub
inc
int3
cmps
es
mov
add
mov
push
dec
jae
sbb
or
push
or
sbb
sar
mov
sbb
push
xchg
xchg
xchg
rcr
adc
xchg
adc
adc
popf
pop
ss
loopne
adc
sbb
cmp
add
add
push
in
add
dec
jae
nop
or
ror
push
and
mov
sbb
mov
mov
scas
or
or
js
xor
xchg
sahf
push
movs
cmp
pop
xchg
outs
or
enter
sbb
cld
add
xchg
dec
in
dec
shl
push
add
pop
dec
ficomp
xor
push
mov
shr
lock
pusha
lock
nop
jo
add
jmp
dec
mov
or
and
lods
add
or
jne
popf
(bad)
pop
pop
inc
cdq
mov
aad
push
popf
adc
push
mov
mov
xor
lea
cmp
adc
dec
retf
test
out
sbb
jge
inc
int
cdq
push
xor
data16
in
jb
ret
fldcw
mov
cmp
inc
mov
pop
xchg
call
jecxz
mov
(bad)
push
pop
int3
les
psraw
aaa
or
mov
push
jp
shr
push
add
add
test
add
jnp
in
push
cmp
push
xor
adc
addr16
adc
xor
jle
jle
and
mov
mov
mov
cmp
jle
call
sub
jle
sub
add
add
das
add
pushf
and
jle
add
push
rsqrtps
cmp
sti
cwde
mov
xchg
inc
jno
sbb
jbe
les
push
push
aad
mov
push
and
mov
adc
adc
or
adc
or
or
test
jb
test
or
ficomp
push
les
or
push
cmp
sub
xor
or
cmp
or
(bad)
(bad)
cmp
ins
and
test
mov
je
add
cmp
div
mov
out
ds
cmp
movzx
push
push
mov
scas
xor
push
mov
jmp
mov
test
test
xlat
cmp
cmp
pop
xor
or
cwde
idiv
xchg
(bad)
popa
and
daa
gs
sub
inc
jno
dec
push
push
push
push
inc
xchg
cmp
mov
mov
lods
and
jg
das
jge
add
aaa
or
stos
add
mov
(bad)
pop
fistp
xchg
cmp
ror
mov
mov
mov
js
cwde
je
addr16
lock
mov
ss
scas
jl
or
jo
sbb
shl
pop
dec
jmp
ins
mov
jnp
clc
jge
neg
push
sbb
iret
mov
clc
aaa
pop
shl
ins
push
fwait
adc
xchg
sub
mov
cmp
cli
push
lods
cld
addr16
sbb
sti
or
pop
cmps
in
push
push
popf
pop
test
push
lahf
dec
jge
fmul
add
sahf
out
jge
sub
push
neg
push
jne
xchg
int
and
les
test
push
mov
pushf
and
dec
mov
xchg
or
push
sub
add
dec
xchg
sub
fwait
push
or
(bad)
jge
adc
push
retf
in
lock
xor
gs
mov
or
fild
mov
inc
cmp
jne
dec
aaa
aam
mov
aad
mov
ja
mov
sti
dec
ror
or
dec
add
cmp
fcom
mov
inc
shl
test
hlt
fbld
fistp
mov
pop
clc
and
cmp
and
test
jmp
mov
je
fmul
pop
fs
lea
lock
jnp
inc
call
mov
jle
fdiv
or
dec
cwde
cld
cmp
mov
jo
ret
cli
iret
and
ficom
je
in
mov
push
mov
push
cmp
loop
or
fist
sbb
arpl
cmp
sbb
xor
test
lock
test
cwde
adc
xchg
(bad)
jmp
out
jmp
push
adc
sub
add
sub
sbb
xor
and
add
add
imul
dec
mov
xor
arpl
xchg
dec
cmps
dec
jl
or
push
pop
push
in
dec
fs
cdq
push
sub
imul
movs
adc
fbld
or
sbb
or
push
sbb
jnp
jp
sbb
adc
int
pop
xor
fdivrp
(bad)
dec
jl
je
sbb
pushfw
mov
jecxz
mov
add
(bad)
lods
jne
jns
inc
push
push
sbb
push
cmp
add
fnsave
mov
xor
ret
rcr
pop
or
push
cmp
push
jle
loop
movs
inc
nop
or
add
add
ret
out
push
add
adc
sub
sub
and
ret
mov
mov
add
mov
jo
xor
sbb
jl
pop
iret
push
add
jns
dec
cld
je
in
add
mov
or
pop
xchg
out
repnz
sub
ins
pop
or
lock
pop
ret
iret
bswap
push
lock
xchg
mov
and
and
nop
add
les
and
arpl
jae
sub
(bad)
jne
sbb
inc
in
xchg
sar
loop
inc
cld
sbb
js
dec
dec
push
dec
ja
add
pop
loopne
clc
jo
jb
enter
in
in
add
push
retf
add
add
inc
mov
nop
je
push
ret
jge
cmp
cmp
dec
push
cmp
scas
and
sahf
sbb
std
ds
call
push
shr
je
add
sub
pop
mov
adc
push
or
out
mov
ja
movs
std
push
movs
add
in
add
out
xor
shl
ja
xchg
out
shr
test
out
lds
mov
xor
sub
or
and
pop
out
or
push
push
fdivrp
or
imul
jnp
lds
fwait
inc
inc
jno
(bad)
into
and
or
mov
pop
sub
and
in
leave
sbb
call
rol
repz
ret
loopne
test
push
add
test
sbb
pop
out
or
add
xchg
test
jbe
cmp
(bad)
popf
jl
dec
movs
jge
pushf
rcl
nop
push
mov
xor
call
call
mov
fwait
xor
cmp
loop
push
mov
pmuludq
or
pop
mov
cmp
xor
dec
dec
pop
pop
adc
mov
pop
or
daa
add
adc
jg
sub
inc
lock
adc
cmp
stc
hlt
popa
xor
das
sbb
and
and
mov
(bad)
mov
repz
lds
push
sahf
jle
push
xchg
adc
push
mul
add
lods
jl
nop
mov
test
in
pcmpeqb
mov
add
neg
push
outs
loope
sbb
xor
ret
stos
push
je
mov
xchg
test
pushf
pop
in
push
movs
loopne
loopne
xor
fsub
push
mov
(bad)
fsubr
xor
cmp
das
fcom
fstp
sbb
imul
sbb
(bad)
fs
cdq
sbb
pusha
int
inc
cmp
or
jmp
jge
mov
sbb
popf
nop
aam
mov
sar
inc
dec
mov
adc
push
call
fdivr
dec
cmp
and
adc
push
mov
sbb
push
aas
cs
fild
adc
gs
push
inc
push
(bad)
or
test
mov
popf
(bad)
aad
cmp
dec
test
jl
add
push
pop
call
cmovnp
push
clc
test
ja
jge
call
inc
dec
sbb
cdq
push
mov
and
iret
or
loopne
in
or
push
jp
sub
pushf
add
dec
rol
jns
jae
add
mov
mov
mov
or
xor
ss
add
sbb
sbb
pushf
push
cmp
imul
test
call
adc
pop
hlt
jne
lea
xchg
adc
aad
sbb
jl
js
les
shl
hlt
xchg
push
clc
sub
cmps
sub
outs
test
shl
xchg
aas
add
test
push
push
test
pop
add
mov
ret
je
mov
cmp
je
sbb
sbb
or
push
xchg
add
push
pop
aad
jl
cmp
dec
mov
fadd
add
cmp
int
inc
pop
adc
sbb
add
or
mov
add
test
push
inc
test
lock
ret
pmulhuw
add
pop
jb
enter
dec
jl
cmp
mov
hlt
xlat
shr
or
xchg
lds
ss
and
adc
dec
or
fucomi
or
std
cmp
push
aaa
xor
lds
or
xchg
or
enter
js
lds
sbb
or
add
pop
out
xlat
clc
sbb
ud0
push
adc
in
lock
repz
xchg
adc
mov
jmp
repz
dec
mov
inc
in
push
scas
pushf
add
jb
jnp
adc
add
enter
sub
aam
sbb
je
or
test
inc
rcl
jmp
mov
lods
cld
fadd
movs
sub
fisttp
add
dec
sti
ret
adc
and
jbe
add
enter
mov
cmps
sbb
push
ins
pop
mov
js
clc
xor
and
cmp
mov
or
jo
hlt
jbe
icebp
sub
les
test
adc
arpl
retf
in
in
dec
mov
popf
add
adc
test
fld
je
sub
push
aam
push
and
ror
lds
mov
mov
mov
adc
ja
pushf
or
or
push
and
lock
xchg
sbb
pop
sub
and
mov
xor
add
daa
cwde
mov
fwait
dec
fdivr
ins
pushf
adc
and
inc
test
jp
clc
mov
and
inc
push
pop
not
daa
adc
int3
(bad)
mov
jnp
call
popf
ret
popf
sub
xchg
pop
add
push
xchg
ja
dec
loopne
push
adc
add
mov
and
(bad)
or
inc
mov
lds
jg
out
fstp
ret
fstp
call
jne
js
dec
cwde
pop
cmps
xor
sub
jecxz
adc
sbb
inc
jns
mov
jmp
xor
in
sub
pop
or
gs
or
sbb
in
addr16
jo
or
out
in
cmp
cmp
push
mov
pop
(bad)
mov
loopne
mov
(bad)
inc
add
mov
cmp
es
or
ja
fcom
cmp
mov
aas
fbld
and
inc
test
push
pop
in
fiadd
adc
sahf
out
sub
inc
push
iret
ret
or
(bad)
mov
inc
push
push
mov
pop
sub
adc
movs
nop
add
out
lahf
cmp
inc
pop
adc
push
out
stos
xchg
setl
mov
add
cmp
addr16
jnp
sub
jle
pop
int
pop
jmp
adc
jo
loope
out
and
sbb
lock
je
xor
pop
add
jno
adc
(bad)
dec
ror
push
dec
loope
retf
movs
fmul
inc
or
shl
dec
lea
adc
add
push
rol
mov
pop
leave
mov
push
push
push
mov
nop
out
dec
test
popaw
cmps
fs
je
sar
jbe
(bad)
sbb
or
sbb
dec
inc
adc
in
pop
lock
call
mov
test
pop
push
sub
sub
dec
adc
punpckhbw
or
mov
out
or
jmp
xor
cmp
test
inc
sub
pcmpgtb
push
or
push
cmp
add
add
ret
scas
push
cld
ss
popf
cmps
cs
(bad)
jo
mov
in
call
ja
jns
ror
push
mov
mov
jge
loopne
je
pop
lea
push
push
das
adc
in
into
xor
xchg
lods
and
loopne
add
scas
sub
jne
push
call
pop
inc
retf
and
jl
call
pop
jle
enter
xchg
push
cmp
or
adc
push
add
jne
popf
push
mov
or
ins
cmps
add
outs
je
pop
push
hlt
or
loopne
call
adc
jno
scas
imul
inc
sbb
pop
in
imul
or
sub
int
mov
adc
test
sub
add
js
push
add
inc
out
push
in
ret
(bad)
sar
fiadd
dec
pop
adc
dec
or
add
xchg
push
jnp
pop
adc
mov
lods
and
std
mov
xchg
and
dec
(bad)
xchg
mov
mov
js
je
jnp
push
ror
pop
jo
and
int
inc
ins
gs
test
mov
mov
mov
test
lea
mov
push
mov
aam
mov
push
push
shr
hlt
pusha
sbb
retf
test
rcl
and
pusha
cmp
add
cmp
pop
mov
je
xor
or
xchg
mov
mov
pop
sar
test
jns
adc
mov
call
push
push
mov
sub
push
out
adc
adc
aaa
jmp
push
cmp
dec
hlt
jge
movzx
sub
rcl
sub
mov
sub
fild
and
xchg
sbb
mov
xor
push
test
push
fst
cmp
aad
daa
out
sbb
sbb
inc
mov
sbb
xor
dec
pop
dec
dec
fisubr
jmp
stos
cmp
push
cdq
mov
mov
or
ins
lock
xor
jne
fcmovnb
cmp
and
movs
ins
xchg
je
and
or
cmps
pop
out
pop
mov
pushf
add
mov
imul
data16
lods
mov
xor
xor
movsx
pop
mov
enter
mov
stos
sub
loope
push
jmp
pop
sbb
ret
pop
(bad)
jmp
cwde
test
xor
dec
enter
iret
mov
ret
sbb
and
jno
repz
lea
push
mov
and
js
pop
jae
mov
fisttp
adc
pop
cmp
pop
cmp
jmp
inc
mov
psllw
mov
add
jne
loope
fistp
dec
jo
aas
es
sbb
sub
es
sub
xor
js
pop
push
push
icebp
or
lock
out
xor
mov
lock
sub
rcr
sub
or
push
sub
and
mov
xchg
cmp
mov
add
jne
mov
cmp
in
add
add
cmc
test
lock
push
pop
dec
sbb
add
adc
stos
dec
sub
mov
mov
nop
cmps
jnp
jp
add
(bad)
je
and
sbb
adc
pushf
imul
jle
jmp
mov
dec
out
call
out
cmp
and
repnz
ss
call
in
xchg
sar
call
jl
and
sbb
jnp
push
and
mov
imul
aam
xchg
mov
enter
sub
adc
sbb
jno
and
out
push
es
daa
push
add
repnz
pop
retf
vmovdqu
push
jg
jl
mov
xor
push
imul
fmul
jle
push
addr16
jbe
scas
stc
dec
inc
lds
push
je
out
call
cmp
fcomp
push
xchg
in
mov
or
or
rcr
pop
arpl
sub
in
pop
pop
out
pushf
dec
in
cmp
lock
dec
in
xchg
sbb
aas
ds
aam
sar
cli
or
dec
jg
xchg
outs
ret
xchg
dec
jnp
jbe
add
jmp
cld
sbb
les
fsubr
push
cld
lea
mov
push
jp
xchg
dec
cs
adc
into
je
into
je
push
cmp
adc
add
sar
gs
test
mov
lock
push
loopne
aad
mov
pushw
inc
add
mov
or
adc
add
pop
fisubr
dec
test
add
jg
sbb
jb
int3
shr
pop
add
and
dec
pop
out
scas
inc
in
fstp
adc
mov
sbb
jb
push
inc
out
fwait
jae
mov
and
xchg
xchg
stos
jg
loope
out
into
push
xchg
cwde
bound
sbb
rcr
add
inc
(bad)
icebp
add
into
into
into
paddsw
mov
jb
retf
xchg
scas
push
fxch
sahf
int3
fimul
out
cmc
loop
sbb
pusha
outs
or
inc
mov
jge
or
stos
mov
inc
add
push
xchg
sbb
je
add
adc
inc
retf
inc
ficom
das
add
jae
imul
adc
setns
sub
stos
xchg
lock
push
push
push
scas
and
cld
fst
sbb
cmp
jne
push
add
or
ret
je
in
inc
movs
in
mov
cmp
imul
mov
test
push
add
imul
mov
add
rol
jl
fdecstp
dec
test
add
push
add
xchg
pop
jl
(bad)
lock
inc
fdiv
int3
ret
pop
loopne
cmp
lock
add
mov
add
pop
and
cs
push
push
test
sbb
mov
push
adc
pop
inc
pop
mov
pop
ret
test
test
int
call
and
leave
movs
push
fadd
mov
lods
adc
imul
cmp
loopne
push
pop
and
adc
inc
or
xchg
cmp
dec
add
shl
pop
fdiv
xor
mov
mov
(bad)
or
addr16
popa
mov
mov
sub
sbb
into
mov
push
or
add
or
stc
add
(bad)
push
mov
popf
faddp
fadd
pop
out
sbb
jmp
cmp
cwde
xchg
add
rcr
shl
and
scas
mov
xchg
jne
push
mov
(bad)
mov
aas
inc
mov
inc
and
sbb
xchg
test
clc
pop
jge
jmp
lods
adc
adc
adc
pop
adc
push
add
clc
xor
or
mov
ficom
lds
and
call
inc
stos
(bad)
in
xchg
add
dec
push
push
xor
adc
sub
cmp
add
sti
and
add
push
jo
add
jmp
inc
or
sub
inc
or
enter
mov
pushf
cmp
hlt
dec
retf
ins
mov
jns
sar
push
int3
dec
sub
sahf
xor
je
mov
jnp
stos
std
xchg
sahf
mov
(bad)
xchg
mov
lods
sbb
test
push
(bad)
inc
outs
or
and
lock
inc
fadd
cmps
inc
ret
adc
test
sbb
dec
hlt
loopne
cmp
or
mov
aas
std
inc
cld
pop
or
add
add
dec
cmp
cmp
adc
pop
je
inc
or
push
pop
inc
push
or
enter
movsx
cli
adc
xchg
inc
jmp
pop
adc
jbe
sub
pop
adc
adc
int
fdivp
xlat
sub
add
sub
shl
sbb
stos
mov
sbb
hlt
add
and
sub
sub
jge
push
ja
leave
xor
and
dec
push
mov
or
xor
ror
mov
stos
inc
hlt
hlt
xchg
or
inc
add
pop
ror
adc
test
adc
fadd
shr
sbb
nop
outs
or
adc
or
sub
hlt
and
mov
(bad)
sub
mov
adc
sbb
in
ins
add
hlt
mov
rcr
idiv
jne
sbb
mov
inc
push
out
test
mov
jbe
xchg
enter
cmp
mov
es
adc
shr
les
add
repnz
or
adc
push
(bad)
fisttp
dec
shr
dec
push
pusha
jne
push
inc
inc
pcmpeqw
fstp
dec
(bad)
cmc
sti
mov
dec
cmp
jl
jmp
mov
dec
push
add
adc
(bad)
aas
and
add
shl
or
sub
jp
scas
mov
mov
push
fld
lea
ja
xchg
xchg
push
mov
mov
aas
ror
int3
xor
or
push
sub
cmp
jne
mov
arpl
mov
jbe
scas
and
sahf
dec
or
hlt
fwait
lock
push
sbb
or
jmp
sbb
outs
push
dec
iret
or
adc
cmp
je
xchg
cmp
adc
push
movs
sub
adc
and
addr16
pop
(bad)
pop
int3
les
sub
xor
cmp
ins
cs
enter
(bad)
cmp
or
adc
jbe
js
mov
icebp
cmp
jne
fwait
mov
mov
jle
jl
sar
jmp
jbe
add
dec
add
stos
pop
fisttp
adc
xor
leave
fild
loope
leave
sub
data16
or
(bad)
(bad)
(bad)
jbe
or
cmp
xchg
pop
add
add
adc
out
push
call
xlat
push
push
aad
cmc
add
es
test
inc
js
push
push
or
movs
ror
pop
ins
dec
push
pop
jb
(bad)
mov
jmp
inc
inc
lock
add
inc
out
ret
int3
xchg
cmp
sahf
sub
add
cmp
inc
and
mov
mov
adc
in
inc
xor
xor
mov
and
or
inc
fsub
stc
ret
push
adc
jge
push
fbld
xchg
jno
mov
sub
in
shl
(bad)
mov
push
out
xchg
ret
push
sub
dec
xchg
sbb
mov
fsubr
sub
cmps
loopne
pop
bsf
push
pop
fdiv
lea
or
or
call
sub
scas
xor
inc
jae
in
inc
cmc
xchg
adc
loopne
xchg
sahf
stos
in
sar
fimul
cmp
xchg
aam
mov
sub
je
dec
je
dec
jne
cli
loopne
in
adc
cmps
adc
adc
call
jb
pop
inc
call
push
jmp
fadd
push
rcl
or
mov
jno
inc
fadd
pop
jmp
leave
in
fmul
sbb
repz
(bad)
push
pop
add
add
sub
sbb
jmp
push
xchg
push
pop
lea
stos
(bad)
xor
inc
pop
test
add
movs
add
shl
loop
movs
cmp
mov
push
mov
adc
mov
add
or
in
pop
or
mov
loop
fmul
js
leave
add
mov
push
pushf
push
push
dec
mov
push
dec
xchg
dec
xchg
movs
jmp
push
push
mov
add
push
push
dec
dec
pusha
add
and
sti
fiadd
inc
push
sbb
push
mov
stos
add
enter
mov
dec
lea
push
jnp
or
and
loopne
jp
inc
or
ret
or
and
jb
adc
mov
pop
aas
xchg
xchg
push
iret
xchg
cmp
in
ds
call
xchg
cmps
push
mov
test
nop
iret
imul
cmp
pop
rcl
pop
movs
sar
sub
test
mov
dec
adc
push
add
lods
in
movs
and
jae
push
in
sub
je
mov
push
jl
leave
add
outs
popa
(bad)
inc
mov
adc
cmp
push
mov
xchg
js
(bad)
and
shl
jge
mov
lds
nop
cmp
rcr
mov
xor
and
add
sbb
adc
dec
in
xor
xor
dec
add
mul
inc
cmp
or
sub
call
pop
scas
push
xchg
ins
sub
cmp
lods
push
xchg
mov
lods
pop
mov
xchg
mov
repnz
dec
or
or
sub
sbb
nop
fidivr
sub
movs
jge
add
adc
and
pushf
pusha
xchg
add
adc
adc
pop
imul
fst
cmp
push
xor
pop
aam
push
push
adc
bound
fidivr
loopne
mov
push
(bad)
mov
cmp
jne
cmp
ret
outs
jp
mov
sub
lea
lods
push
sbb
mov
pushf
push
push
xchg
add
xchg
push
mov
out
out
cld
lea
movs
shl
mov
mov
inc
cmp
sbb
add
rcr
xchg
adc
xchg
leave
ja
mov
mov
inc
and
sub
or
or
lods
jb
fist
(bad)
mov
cld
inc
dec
outs
pop
inc
adc
cmps
scas
nop
ret
shl
push
inc
fdiv
in
ret
inc
shl
or
hlt
xchg
mov
les
fnstenv
and
push
push
or
jmp
das
cmp
inc
shl
cdq
imul
add
aam
mov
push
xor
rcr
push
cmp
fstp
fstp
inc
add
mov
loopne
retf
popf
dec
ja
jne
mov
add
push
inc
in
daa
xchg
adc
(bad)
jmp
inc
xchg
rcl
mov
push
add
jne
dec
cdq
push
adc
test
imul
add
push
daa
push
mov
pop
dec
push
(bad)
jns
jmp
std
or
or
push
clc
out
jne
inc
les
mov
jge
retf
popa
and
push
and
inc
or
push
jmp
xor
lods
xchg
ret
sbb
or
mov
mov
push
mov
add
sub
sub
inc
xchg
mov
or
add
or
pop
es
push
or
push
lock
jne
leave
aas
dec
pop
aad
mov
in
idiv
mov
dec
pop
sub
push
in
adc
sbb
pop
and
push
imul
mov
jnp
jge
push
xchg
mov
mov
adc
nop
aaa
sbb
sbb
and
dec
pop
sub
sub
inc
nop
dec
sub
mov
fisub
adc
mov
pop
inc
or
enter
sub
xchg
arpl
test
sbb
mov
in
popa
cdq
test
sbb
jmp
xchg
dec
sti
sub
(bad)
aam
inc
sbb
fisub
cmps
cdq
and
sub
inc
rol
xor
stos
dec
mov
cmps
dec
push
adc
or
leave
pop
pusha
jl
xor
test
cmp
xlat
mov
mov
imul
test
push
mov
sbb
mov
or
jbe
or
dec
sbb
pop
add
mov
(bad)
stos
add
inc
or
mov
jecxz
pop
jno
mov
out
jecxz
and
pop
push
fidivr
dec
sub
and
mov
fmul
xor
add
mov
in
inc
cmp
lods
inc
imul
xor
inc
popa
pop
sub
inc
pop
add
jo
fs
push
xchg
xor
add
push
push
js
push
shl
dec
fisttp
lock
outs
in
fwait
xchg
popf
cmp
pop
mov
jo
jnp
data16
repnz
push
jmp
nop
push
jmp
inc
push
add
ret
sub
pushf
mov
add
pusha
add
mov
and
mov
popf
mov
pop
dec
jg
nop
inc
jbe
enter
loop
or
les
push
mov
cmp
sbb
pop
pop
add
jnp
icebp
(bad)
shr
pop
cmps
add
or
sbb
push
cmps
push
pop
(bad)
rcr
push
or
push
sbb
mov
add
jb
or
and
fcomp
add
adc
popa
mov
adc
push
mov
popa
sbb
js
mov
xchg
iret
adc
add
bound
sbb
jl
and
enter
in
shr
fadd
sub
mov
in
add
in
or
and
outs
xor
adc
dec
pop
mov
and
pop
out
push
inc
cs
or
add
or
push
push
adc
xor
shl
bswap
and
ret
or
adc
sbb
adc
and
inc
in
pop
pusha
inc
adc
pop
out
test
cs
adc
popa
in
sbb
adc
scas
mov
push
adc
test
dec
cs
popa
pop
adc
or
push
or
aad
popa
nop
bound
add
pop
ins
jo
in
or
nop
fs
mov
sbb
popa
inc
and
test
mov
in
push
xchg
movs
inc
call
pop
jo
leave
fmul
cmp
or
leave
or
push
rcr
jae
cmp
pop
mov
ficom
and
mov
push
pop
mov
inc
jbe
sbb
mov
in
or
xchg
fmul
cmp
inc
or
xchg
inc
push
fs
adc
or
jmp
jb
pop
jmp
sbb
mov
and
nop
and
leave
and
push
lods
in
jge
or
or
cmps
nop
inc
or
pop
push
jb
sub
mov
popf
sbb
or
imul
das
dec
pop
je
and
test
movs
bound
sbb
or
dec
and
push
shl
sbb
or
push
jb
pop
adc
test
adc
and
enter
in
xchg
sbb
lods
add
out
and
mov
adc
adc
or
repz
pop
leave
xor
mov
adc
std
pushf
push
inc
xchg
dec
cmps
nop
push
sbb
bound
sbb
adc
adc
jo
enter
sbb
repz
sbb
or
xor
in
call
adc
pop
call
sub
mov
or
dec
push
je
add
push
inc
sar
cs
mov
and
push
add
test
xchg
rcr
xchg
mov
mov
inc
ror
push
adc
sbb
repnz
ret
mov
push
aaa
push
clc
mov
inc
mov
test
jne
push
pop
div
jmp
and
data16
mov
pop
hlt
mov
lock
sub
push
adc
and
cld
or
inc
fdiv
sar
mov
and
mov
add
out
lock
pop
mov
ret
xor
ret
jecxz
mov
pop
ret
pop
lea
push
jns
test
jne
(bad)
aas
adc
test
jne
push
adc
jmp
test
(bad)
adc
pop
pop
or
jns
ins
push
loope
or
inc
test
mov
jb
out
clc
add
mov
shr
pop
test
jne
pop
idiv
sub
xor
mov
add
and
jne
(bad)
(bad)
mov
mov
sar
and
or
mov
jmp
add
jmp
cmps
sbb
or
sbb
xchg
loopne
add
dec
xor
adc
adc
aas
or
in
dec
push
imul
loope
retf
lods
lods
pop
out
or
jb
add
xor
and
xchg
sahf
adc
jns
or
aad
aam
je
cmp
lods
or
or
fneni(8087
sbb
and
rcl
mov
adc
push
pop
pop
popa
add
lods
outs
xlat
inc
push
bound
or
clc
adc
xor
push
fild
cmp
jge
das
add
inc
clc
adc
sti
adc
cmp
(bad)
(bad)
in
adc
add
cmp
dec
lea
mov
mov
add
nop
clc
dec
push
lea
js
add
push
lea
add
xor
add
popa
shl
cmp
and
shr
jle
mov
push
loope
sar
hlt
jge
add
xor
inc
push
push
cmp
outs
pusha
add
sahf
ins
(bad)
mov
dec
enter
out
out
jg
stos
sbb
(bad)
push
and
adc
mov
sub
out
mov
pop
pop
mov
sub
scas
int
rcr
lock
and
push
gs
add
xchg
nop
ret
add
and
or
push
xor
shl
cmp
xchg
shl
ror
cli
push
mov
jnp
jmp
jnp
test
fcomp
xor
mov
sbb
lea
nop
push
(bad)
mov
pop
mov
in
ret
add
jmp
mov
push
jne
push
and
add
ret
ins
cmp
cmp
mov
(bad)
xlat
cmp
pop
jmp
jecxz
or
and
adc
sub
sub
add
add
(bad)
call
inc
mov
jmp
push
mov
cli
sub
aaa
cld
mov
add
bound
inc
test
daa
je
and
arpl
xor
and
in
inc
push
add
lea
or
pop
aas
jmp
push
inc
rcr
in
xchg
ds
push
fbld
lea
pushf
jmp
or
mov
push
cmp
adc
add
mov
jb
mov
push
dec
adc
pop
jle
lds
cmc
inc
jle
jno
imul
jne
fbstp
mov
cmp
fs
je
sub
stos
aas
outs
add
addr16
inc
push
mov
stos
cmp
jne
test
xchg
imul
stos
(bad)
out
pop
imul
pop
fcomp
jle
loop
inc
sbb
or
cmp
push
adc
xor
fs
aad
cwde
cmp
inc
push
add
(bad)
stos
jne
sbb
outs
mov
mov
clc
xchg
cmp
test
push
stos
jmp
sbb
lods
pop
cmc
aam
and
or
das
out
dec
pop
xlat
mov
adc
dec
adc
jle
fist
adc
push
pop
pop
mov
jle
cmps
js
jne
or
xor
pop
movs
xlat
mov
or
adc
cmp
inc
and
mov
cmp
add
jle
and
or
ret
shl
mov
push
adc
dec
add
pop
cli
adc
outs
mov
outs
fmul
jmp
lea
add
inc
js
shl
or
push
int
mov
call
ret
xor
loope
add
lea
cmp
mul
cmps
test
and
sub
xor
call
sbb
test
mov
dec
(bad)
pop
(bad)
pop
ds
sub
movs
sub
fidivr
fist
xchg
faddp
sti
pop
cmp
repnz
sbb
jge
ds
mov
or
xor
test
or
int
sar
push
xor
jno
jl
adc
push
jnp
fucomi
(bad)
je
aas
cmp
mov
pop
inc
ins
jnp
fdivrp
into
mov
mov
das
fisttp
jmp
or
ss
ss
cmc
les
pusha
sbb
pop
sbb
in
loope
push
jbe
push
mov
dec
out
mov
retf
test
push
or
and
popa
adc
test
push
sbb
shl
add
imul
rcl
or
mov
pop
mov
ret
inc
ds
mov
lock
adc
sti
fadd
mov
cmp
and
in
inc
sbb
pop
push
and
cmp
lock
sbb
push
and
dec
xor
jmp
jo
xor
or
or
sbb
jmp
loopne
dec
aas
inc
jo
mov
push
cmp
into
stos
mov
cmp
das
add
sub
sbb
or
pop
add
adc
or
dec
hlt
inc
xchg
add
or
jge
shl
xor
inc
adc
inc
sahf
pop
or
push
enter
int
loop
sub
call
dec
or
xchg
xor
mov
sub
cli
cmps
loop
cmp
pop
mov
mov
cmp
ins
jl
pop
xor
sub
adc
ins
jp
rol
clc
xchg
xchg
adc
mov
mov
mov
jo
mov
mov
imul
shr
and
cmp
mov
sbb
frstor
mov
adc
(bad)
enter
add
jmp
cmp
aas
int
sub
push
jl
adc
pop
mov
outs
fist
jle
and
shl
frstor
xlat
cs
xchg
cmps
mov
outs
mov
and
xchg
jecxz
loopne
add
test
adc
mov
test
loop
add
mov
sub
jmp
pop
xor
cmps
pusha
hlt
cmp
test
sbb
test
add
rol
call
dec
or
xor
xor
movs
cmp
or
(bad)
imul
or
push
stc
or
je
inc
push
push
pusha
jle
mov
mov
mov
add
sbb
das
jle
xchg
or
jmp
jne
retf
loopne
call
inc
cmp
jne
or
in
push
sub
and
jle
mov
pop
jb
js
sub
push
sub
test
mov
adc
shr
cmp
jne
push
pop
sub
sbb
jl
aas
mov
push
push
call
adc
movs
aam
sbb
fisttp
loopne
add
popa
push
mov
stos
or
cmp
fsubr
addr16
imul
ror
je
pop
pop
sbb
sub
cmp
dec
dec
push
stos
loop
pop
call
enter
add
jmp
mov
sub
lock
push
test
inc
ret
lods
xor
xchg
sbb
fdiv
mov
loopne
add
daa
xlat
or
push
push
push
jae
cmp
mov
test
add
jns
outs
pop
in
mov
or
push
data16
ins
push
imul
inc
into
mov
adc
or
add
and
add
fwait
add
ins
mov
jge
push
dec
scas
or
adc
lock
mov
js
stos
xchg
cdq
cmp
movs
sti
(bad)
pop
pop
jle
es
nop
out
mov
dec
cmp
shl
or
cmp
test
pop
das
mov
inc
ins
rol
sbb
test
or
push
inc
sub
sbb
and
in
test
mov
dec
pop
mov
adc
dec
dec
rcl
les
and
mov
xchg
sbb
cdq
pop
idiv
aam
rcl
cmp
lds
std
jg
popf
aam
inc
push
cmp
jle
xor
lock
push
dec
add
call
leave
imul
mov
add
mov
adc
fistp
cmp
inc
and
add
pop
jle
cmp
push
jp
xchg
fstp
(bad)
cmp
je
cmp
sbb
jmp
aaa
and
outs
fsubrp
sbb
xor
cmp
adc
sub
mov
cs
jg
cs
fsub
and
icebp
add
dec
add
inc
mov
test
cmps
mov
in
(bad)
je
add
xor
inc
xor
mov
pop
or
stos
dec
clc
(bad)
fisttp
ficomp
pop
mov
data16
jno
mov
out
jo
mov
and
(bad)
adc
lds
sbb
add
and
lds
push
and
cs
cwde
adc
mov
mov
(bad)
mov
sbb
push
es
and
mov
adc
adc
fcomp
add
mov
cmp
mov
rcl
inc
lea
and
mov
jo
(bad)
pop
sbb
cmp
ds
and
xlat
adc
adc
pop
and
pop
jl
cmp
add
test
ins
pusha
mov
(bad)
stc
stos
loopne
or
loope
sbb
sahf
hlt
xor
add
sub
test
sub
fbld
adc
loopne
push
je
lods
lea
imul
loopne
stos
jle
push
sub
cmp
jge
fs
push
push
add
pop
je
mov
add
(bad)
mov
inc
jmp
lods
adc
inc
mov
push
cs
mov
movs
enter
and
ins
lock
enter
ret
mov
jge
mov
sub
pop
or
popf
clc
xchg
(bad)
pop
or
sbb
mov
cs
jle
lock
jmp
cmp
and
push
mov
mov
sub
daa
and
mov
pop
jnp
mov
test
ret
xchg
mov
nop
jb
and
clc
fsubr
add
aas
adc
mov
adc
cmp
mov
shr
adc
les
mov
add
mov
pop
add
in
lock
inc
xchg
push
add
(bad)
cmp
add
push
ret
leave
pop
es
pusha
fldenv
xchg
add
aas
ins
rcr
movzx
mov
and
mov
adc
enter
in
in
add
sbb
sub
jp
sub
aad
add
arpl
push
pop
idiv
pop
popa
add
add
jle
lea
xchg
and
leave
inc
mov
mov
jno
out
stc
rcl
(bad)
call
in
loopne
jp
movzx
or
jge
adc
or
sbb
(bad)
inc
push
add
dec
loopne
inc
fsubr
(bad)
enter
add
fwait
shl
mov
add
sub
mov
push
sub
outs
pop
loopne
hlt
push
loopne
ins
in
shr
and
mov
ds
dec
jne
es
and
jp
push
shr
cmp
ret
div
cmp
je
sbb
rcl
add
test
shr
inc
mov
mov
pop
or
cmp
xor
mov
push
adc
sahf
jle
cmp
jne
sbb
add
gs
cmps
adc
or
addr16
jl
shl
jp
mov
xor
add
in
xchg
loop
outs
mov
ds
and
aad
sbb
jmp
jle
not
and
dec
fdiv
pop
loopne
ins
repnz
xor
ins
push
sbb
mov
rol
rol
cld
cmp
je
pop
call
fcomp
sub
mov
adc
rol
mov
cmp
push
hlt
inc
cmps
sub
fadd
jecxz
xchg
stc
outs
add
inc
add
push
xchg
inc
(bad)
xchg
sub
fdiv
push
aam
sbb
ror
ins
mov
or
or
xor
pop
jp
mov
or
xor
sbb
sub
xor
dec
pop
jne
nop
loop
adc
add
pop
int3
cmp
fld
lock
(bad)
mov
jmp
sbb
pop
call
test
push
rcl
sub
out
pop
cmc
inc
mov
cmp
jge
or
call
add
stos
adc
sahf
xor
(bad)
dec
push
sbb
mov
sbb
je
mov
loopne
sbb
or
dec
frstor
mov
jnp
int3
add
cmp
lock
outs
pusha
mov
dec
add
ret
lea
push
jne
in
fmulp
mov
ds
and
cmp
aaa
mov
neg
pop
cmp
cmp
mov
aaa
cmp
mov
mov
outs
aaa
add
aaa
and
pop
add
lahf
jp
aad
push
lds
push
je
aam
std
add
jmp
add
mov
sub
sbb
sti
popf
out
and
add
inc
loop
cmc
and
add
(bad)
loopne
addr16
jbe
repz
or
jge
pop
mov
push
ins
and
inc
arpl
cmp
push
enter
xor
das
pop
sub
cmps
or
pop
mov
mov
pop
nop
(bad)
mul
pop
mov
scas
xchg
ret
fwait
les
into
scas
fsubp
jns
(bad)
xchg
test
and
aaa
add
mov
xor
and
sbb
push
mov
icebp
and
xor
or
mov
sbb
inc
(bad)
jne
push
jo
cmova
aad
loopne
add
mov
sahf
(bad)
xor
mov
mov
and
sbb
jbe
out
push
or
fwait
test
xor
mov
call
xor
sub
pop
or
ins
lods
out
rol
push
push
jne
dec
sbb
push
inc
jmp
into
or
sbb
dec
jo
inc
pop
call
fnstcw
or
add
mov
stos
loope
sub
add
cmp
mov
cmp
xchg
pop
lea
inc
push
cmp
xlat
sub
cmp
sub
sub
lea
add
push
push
jae
push
mov
ret
jl
inc
add
xor
push
push
hlt
jge
push
cdq
aaa
(bad)
dec
sub
mov
and
add
and
xchg
mov
and
das
popa
push
std
pushf
or
cmp
add
hlt
jl
push
gs
loope
mov
jge
pop
push
sti
stc
xor
cmp
jbe
jp
cdq
add
mov
test
add
add
sar
mov
or
and
and
dec
daa
imul
mov
cmp
or
push
sti
clc
in
and
mov
mov
mov
push
pop
xor
ror
or
push
and
dec
or
pop
rol
pop
fcmove
mov
inc
bound
mov
push
inc
or
xor
hlt
lahf
cmp
mov
sub
inc
sub
hlt
mov
and
jns
jae
push
imul
test
je
mov
inc
sbb
iret
cmp
call
test
jge
cmp
loop
lahf
out
clc
push
clc
test
(bad)
fidivr
pop
lock
or
inc
adc
in
mov
jmp
pop
jg
pop
ror
call
sti
hlt
push
push
jne
pop
hlt
xor
sbb
mov
clc
and
call
push
mov
js
add
sbb
mov
jp
or
lods
loop
sub
(bad)
adc
pop
add
out
push
(bad)
mov
adc
push
scas
ss
lea
mov
ficom
pop
push
stos
leave
mov
mov
dec
and
push
inc
adc
ret
ror
and
adc
or
jp
pop
jo
int3
adc
sub
mov
test
mov
mov
cmps
mov
test
pop
test
mov
add
pop
pop
jge
xor
pop
fdiv
iret
dec
adc
je
mov
add
pop
push
fdivr
or
mov
add
fimul
stc
int3
loope
gs
inc
test
(bad)
cli
ins
lods
xor
add
int3
stos
stc
test
jmp
or
test
xor
and
pusha
dec
mov
inc
mov
xchg
test
cmp
int3
lea
pop
pop
mul
psubd
(bad)
enter
xchg
cmp
adc
and
push
or
and
push
lea
push
mov
mov
or
inc
stos
test
xor
dec
js
dec
sub
lea
or
add
in
jecxz
push
pop
sbb
sub
and
or
push
pop
or
or
pop
dec
ds
sysenter
loope
add
aam
push
cmc
pop
pusha
nop
fdivr
inc
scas
imul
fcom
or
or
jno
data16
dec
add
out
mov
inc
loopne
mov
pop
sbb
mov
into
fld
shr
int
out
adc
hlt
push
out
jle
push
(bad)
out
mov
je
pop
or
or
cmp
add
and
xchg
rcr
push
xor
stos
add
leave
and
cld
mov
(bad)
(bad)
mov
ins
push
mov
popf
stos
sti
sbb
mov
adc
hlt
push
push
add
mov
nop
mov
imul
or
ret
jp
mov
jmp
pushf
adc
popa
fcmovnb
push
dec
je
and
dec
dec
daa
jo
rcr
cmp
xchg
jmp
jae
sub
sbb
loopne
pop
add
mov
and
dec
clc
inc
or
mov
mov
push
push
outs
xor
xchg
add
inc
mov
mov
dec
push
cwde
mov
add
cmp
jne
or
loopne
(bad)
aam
or
mov
sbb
fidiv
cli
test
jne
js
je
push
sub
add
enter
outs
shl
ret
mov
ss
(bad)
add
pushf
sub
or
call
je
loopne
div
inc
cmp
je
and
mov
mov
push
push
dec
add
rol
scas
lea
cmp
adc
mov
mov
add
mov
xor
imul
jne
adc
pop
sub
mov
jge
daa
jne
mov
je
and
jmp
push
adc
sahf
outs
inc
movs
dec
je
dec
add
push
inc
inc
cli
cmp
outs
pop
je
mov
add
fisttp
jmp
push
pop
popa
mov
adc
out
pop
shl
ret
or
loopne
jbe
mov
stc
test
inc
pop
push
xor
pop
shl
push
movs
mov
add
lds
pop
out
popf
add
jo
test
int
pushf
mov
cwde
les
push
push
pop
js
sub
and
int3
mov
pop
dec
loope
or
add
mov
jbe
mov
add
mov
sti
movs
jmp
loop
cmc
jmp
sub
into
pop
(bad)
movs
pop
pop
adc
ins
pushf
cmp
push
and
les
outs
cmp
jb
pop
je
cmp
and
ret
scas
ins
and
cs
and
jne
sar
or
aas
jne
cmp
mov
mov
scas
jp
push
cmps
test
pushf
ss
jl
jmp
inc
add
inc
call
rol
popf
dec
push
iret
ret
ret
imul
add
pop
mov
add
pop
push
and
cmp
or
pop
sbb
je
jb
pop
ja
pop
xor
or
jo
or
enter
add
dec
push
add
add
fmul
add
(bad)
jo
pusha
pop
bound
mov
movs
or
dec
repnz
push
xor
mov
inc
pusha
int3
mov
mov
mov
add
ret
pop
mov
dec
add
(bad)
sti
or
imul
pop
add
mov
xchg
inc
xchg
or
inc
add
xor
loop
pop
xor
pop
xchg
in
sahf
xor
into
dec
push
sbb
jns
dec
jmp
adc
xor
or
cmp
adc
mov
push
mov
sbb
mov
js
add
pop
push
xchg
enter
jmp
loopne
dec
popf
pop
das
test
push
mov
pop
adc
aam
(bad)
leave
fmul
rol
xchg
and
retf
aam
push
jo
push
mov
jecxz
(bad)
push
test
mov
xor
clc
and
inc
or
or
xchg
push
pop
and
mov
push
adc
and
jecxz
and
push
or
jb
and
outs
enter
cmp
fcom
inc
sbb
ret
fistp
nop
sub
(bad)
cmc
xchg
stos
xchg
or
fmul
jmp
jmp
and
and
loop
and
aaa
mov
lea
in
xor
les
sbb
(bad)
lods
ss
fdiv
mov
cmps
mov
lock
imul
sub
dec
xchg
into
pop
cmps
push
mov
in
mov
mov
cs
or
xchg
sbb
jle
lea
ds
lea
push
rcl
mov
shl
add
ja
icebp
js
sub
call
push
test
cmp
icebp
jmp
scas
fs
inc
mov
fbstp
cmp
dec
je
add
dec
jp
stos
push
aas
push
add
and
jl
sbb
mov
cmovg
xchg
jno
push
sub
mov
push
gs
or
xchg
outs
adc
dec
and
jne
cmp
imul
les
pop
mov
pop
cmp
or
cmp
or
outs
mov
mov
jmp
dec
pop
jmp
jge
jbe
nop
in
sbb
retf
shl
out
stc
add
jo
jle
cli
mov
sub
xor
sbb
aad
pop
stc
cmp
add
push
int3
bound
aam
in
fs
push
pop
lods
lods
mov
or
push
cmp
jmp
pop
or
hlt
or
iret
aad
and
mov
add
jl
push
clc
ins
push
adc
cmp
into
mov
std
xchg
enter
loopne
xchg
xchg
inc
and
inc
inc
(bad)
loope
jmp
mov
pop
lea
cmp
dec
loope
aad
es
pop
or
icebp
and
cmp
xor
jle
cmp
or
sar
sub
ds
cli
add
and
adc
push
sub
mov
(bad)
push
sub
lea
mov
(bad)
mov
jle
add
sbb
jns
cmps
pop
mov
test
test
lods
mov
dec
inc
shr
clc
pop
fsub
pop
xlat
pop
lock
out
xchg
add
jmp
jo
xor
aas
cmps
inc
fcom
popa
adc
and
add
pop
ror
jbe
in
ss
jne
sti
pop
xchg
test
out
ror
call
or
pop
sbb
aam
fist
mov
ret
dec
xchg
or
nop
xlat
add
jnp
scas
test
call
das
add
out
int3
lds
mov
jne
mov
loopne
test
sub
sar
dec
inc
loopne
popa
stos
xchg
inc
sbb
gs
inc
inc
jmp
neg
cmp
dec
fsub
ins
adc
and
cli
test
sbb
dec
adc
lea
jbe
inc
pusha
(bad)
dec
pop
xlat
call
sub
mov
fld
mov
jne
inc
(bad)
adc
mov
je
jb
and
or
aam
mov
add
movs
push
jg
loopne
add
lea
dec
movs
push
rol
pop
mov
outs
lods
push
cmp
xchg
ds
cld
mov
inc
mov
inc
mov
and
xchg
mov
add
jmp
cmp
jne
fist
mov
add
pop
pop
push
inc
arpl
push
push
arpl
es
push
dec
into
or
pop
or
unpckhps
scas
iret
addr16
fisub
in
mov
movs
push
cmps
sbb
jo
lea
push
sub
push
call
cmp
stos
(bad)
shr
dec
lods
sbb
sub
inc
(bad)
xor
cmps
int
loope
or
mov
mov
mov
out
cwde
(bad)
je
cmp
jmp
mov
pop
cmp
je
aam
jo
lock
mov
xor
mov
call
or
jmp
adc
mov
inc
mov
dec
scas
pop
push
sbb
xchg
fsub
cdq
push
mov
push
and
jne
sub
inc
adc
outs
mov
and
dec
or
mov
pop
ja
jnp
push
call
sbb
inc
dec
mov
add
push
inc
adc
(bad)
cmp
jle
mov
cmp
add
sub
or
or
ret
sub
pushf
shl
xchg
and
jnp
add
dec
inc
sub
pop
test
fstp
or
lods
or
and
adc
mov
add
bnd
out
mov
adc
push
add
dec
retf
cld
jmp
les
loope
xor
popf
mov
jmp
loopne
lock
call
xchg
clc
std
add
jne
cmp
je
push
adc
push
or
adc
mov
add
push
in
ins
adc
pop
adc
mov
popa
scas
lea
add
push
xor
pop
add
xor
pop
stc
inc
or
aad
or
mov
cld
pop
ret
adc
add
lock
data16
xchg
fdivr
xor
mov
xchg
pop
imul
inc
scas
pop
fidiv
sbb
jg
push
mov
ret
imul
inc
test
dec
mov
add
add
inc
sbb
dec
and
sbb
sti
fadd
call
sub
jl
jge
stc
sbb
jno
sbb
sbb
imul
arpl
inc
fdivr
jo
and
or
movs
jmp
mov
(bad)
lock
dec
dec
xchg
mov
in
add
mov
xchg
or
xor
dec
inc
push
push
mov
inc
hlt
cmp
int3
int
icebp
push
sub
and
rol
mov
ret
and
mov
out
inc
pop
inc
leave
adc
xchg
pop
push
cdq
mov
push
(bad)
outs
and
pusha
jge
sub
adc
stos
add
xor
imul
pop
push
repz
sbb
push
jb
scas
dec
popf
sub
imul
das
bound
inc
adc
and
mov
in
cmps
jmp
or
dec
pusha
imul
and
push
pusha
mov
pop
jo
push
push
xor
xor
mov
(bad)
(bad)
(bad)
and
jle
fwait
sbb
dec
js
lods
mov
jo
mov
xlat
jo
and
ja
or
movs
data16
(bad)
sub
adc
mov
add
pop
ret
xor
and
or
dec
cmp
repz
cmp
pop
sbb
je
movs
add
inc
adc
sub
sbb
lds
loopne
retf
pop
dec
movnti
sbb
sbb
fst
inc
(bad)
and
jmp
xchg
jne
fnsave
xor
or
fild
(bad)
out
call
jmp
adc
das
push
sub
dec
xchg
int3
bound
pop
xchg
cmp
aam
or
xor
mov
sti
loopne
aad
add
pop
push
or
and
add
inc
add
retf
and
adc
dec
ror
push
add
cmp
mov
sbb
lahf
push
fist
call
push
xchg
in
push
xor
pop
sub
iret
adc
or
or
cmp
xor
add
xchg
(bad)
and
repz
outs
lock
xor
into
mov
(bad)
adc
sbb
sbb
jmp
daa
push
and
jge
dec
or
dec
adc
mov
mov
jb
stos
jl
add
clc
retf
jp
cmp
mov
or
les
clc
pusha
inc
mov
retf
xor
lock
inc
test
mov
xchg
cmps
jmp
sub
xor
inc
push
in
add
xchg
dec
mov
mov
push
or
jnp
movs
shr
xchg
mov
loop
xor
fisub
sbb
or
stos
lock
shl
ret
sub
shl
sub
imul
xor
and
sbb
cmc
add
pop
test
les
(bad)
dec
push
or
repz
lock
inc
dec
mov
lea
sub
cmp
xchg
adc
inc
jge
ret
jmp
imul
les
enter
cs
stc
movs
mov
vmwrite
lea
or
adc
sbb
add
ret
aas
arpl
push
xchg
pop
sub
cmp
mov
or
iret
inc
(bad)
mov
mov
xchg
retf
or
mov
inc
fadd
sbb
sbb
movs
fsub
and
xchg
out
pop
add
add
push
jne
or
lock
add
and
jp
cmc
mov
(bad)
pushf
sub
fild
int
jb
ret
xchg
jl
or
inc
sbb
mov
aam
add
jmp
jb
add
cmp
add
and
sub
pop
clc
enter
mov
fiadd
adc
neg
sbb
ret
int3
and
fwait
test
pop
push
dec
in
mov
add
cmp
cmp
dec
imul
sbb
mov
cs
into
imul
mov
jge
ds
mov
jle
or
es
(bad)
push
adc
icebp
je
hlt
adc
pop
je
push
and
sub
into
inc
and
pop
pop
push
pop
call
dec
stc
inc
ja
sub
mov
shr
or
sar
cmp
out
sahf
inc
adc
or
daa
jae
mov
test
sti
adc
cmp
sbb
add
ret
pop
call
or
sbb
jno
add
dec
cwde
dec
pushf
jne
pusha
add
or
jo
rcr
ret
dec
faddp
or
mov
in
inc
call
ja
mov
cli
xchg
sbb
inc
nop
fldcw
add
icebp
mov
jmp
push
push
pop
bound
pop
add
and
shl
pop
je
cmp
call
or
movs
inc
add
jmp
sbb
add
arpl
push
mov
jecxz
push
scas
add
(bad)
xchg
(bad)
clc
pop
call
cmp
je
imul
test
xor
call
add
daa
push
mov
les
jmp
add
sbb
fadd
loopne
rcr
mov
jb
sbb
dec
cmp
mov
mov
enter
(bad)
stos
push
ret
mov
mov
adc
cmp
push
push
jge
cmp
dec
stos
xor
sbb
xchg
dec
and
jmp
movs
shl
cmps
mov
add
xor
mov
jg
js
or
mov
and
pushf
or
adc
aad
popa
mov
into
and
push
mov
add
scas
cmp
push
pop
adc
cli
add
mov
sub
retf
add
int
aam
mov
xor
inc
pop
sbb
ins
ins
pop
pop
adc
push
call
or
outs
out
scas
inc
adc
push
dec
adc
sbb
inc
push
xor
sbb
ds
add
dec
add
adc
inc
push
test
jns
jp
cmp
fisubr
add
mov
loope
test
and
adc
retf
pop
rcr
xchg
inc
or
mov
sbb
lock
aas
push
jo
jmp
or
inc
xor
jne
mov
pusha
ins
loopne
xor
cmp
jl
xor
xchg
ins
cwde
(bad)
sub
inc
mov
nop
mov
xchg
or
repnz
xchg
(bad)
adc
movs
xor
and
cli
das
mov
inc
add
pop
add
test
sub
cli
push
or
xor
pop
gs
push
sub
(bad)
or
jno
rcl
mov
fmul
jb
dec
jecxz
cmp
lods
push
mov
jle
ror
add
inc
test
or
rol
jmp
push
mov
or
arpl
shl
faddp
adc
inc
das
loop
xchg
or
and
xlat
imul
mov
ret
inc
fidivr
pop
iret
or
loope
rol
jl
inc
adc
sbb
pop
adc
addr16
xor
jmp
test
test
retf
mov
hlt
sbb
enter
rcl
data16
sub
push
loopne
outs
(bad)
(bad)
inc
or
mov
inc
sub
loope
adc
mov
add
je
adc
shr
test
int
push
inc
or
les
(bad)
fdivrp
mov
jne
out
into
jne
push
xor
cmps
xchg
aam
repnz
dec
or
mov
fwait
in
mov
fs
add
pop
cmps
sahf
rol
jae
inc
jb
fmul
dec
push
ins
push
mov
out
into
push
jnp
jo
pushf
rcr
jbe
adc
pop
mov
jno
dec
(bad)
or
or
lds
(bad)
(bad)
scas
je
sub
lds
mov
ror
addr16
int3
xor
in
jb
lods
test
hlt
imul
cmps
leave
push
mov
popa
cmp
je
inc
pop
jbe
push
mov
enter
or
ud0
lods
sti
ins
mov
out
rcl
push
mov
inc
hlt
sub
push
push
icebp
jg
sub
add
sar
je
pusha
adc
lock
push
add
cmp
(bad)
rol
dec
and
xor
add
test
add
and
xchg
mov
mov
push
iret
in
xor
adc
mov
int3
rcr
and
clc
in
or
dec
sbb
mov
push
pop
sbb
add
je
push
lods
or
xchg
fisttp
(bad)
or
sbb
mov
or
mov
or
leave
(bad)
leave
les
mov
movs
xchg
out
mov
and
fadd
rcl
xor
ret
sbb
int3
gs
push
(bad)
xchg
adc
jmp
or
xor
jl
or
and
and
pop
dec
inc
(bad)
fadd
sub
int
loop
call
cmp
aam
in
and
push
lods
inc
adc
mov
sub
xor
add
lea
and
(bad)
and
dec
lea
mov
or
stos
xchg
stos
ss
sbb
xchg
mov
aam
(bad)
mov
loop
dec
adc
neg
pop
dec
inc
int3
mov
test
xlat
mov
adc
pop
je
xor
inc
daa
lea
or
adc
pop
sub
iret
enter
or
test
fld
je
cmp
sar
lea
mov
in
sub
into
fist
cmp
adc
jmp
push
mov
sbb
aaa
xor
prefetcht0
xchg
xor
or
enter
mov
and
in
gs
sar
cmps
and
enter
sbb
adc
push
fcom
into
jmp
dec
push
mov
fcom
mov
int3
sbb
daa
loope
pusha
mov
nop
inc
xchg
xchg
jb
dec
call
pop
jp
ror
fdivr
je
call
fldpi
add
pop
test
rol
mov
in
cmps
cmc
xor
or
adc
and
sbb
cmp
repnz
mov
mov
pop
or
gs
push
rcl
arpl
je
add
push
sahf
arpl
mov
lods
pushf
pop
ss
in
ret
and
ja
(bad)
ins
xor
mov
mov
jle
lea
mov
movd
adc
push
cmp
in
rol
sbb
pop
xor
les
cwde
in
push
jmp
adc
lea
adc
nop
js
push
jne
ja
fnstsw
push
test
outs
in
mov
in
add
push
push
dec
pop
aaa
jg
cmp
(bad)
fadd
inc
pusha
mov
lea
(bad)
out
push
pushf
ja
push
jnp
mov
das
aad
xchg
pop
mov
bound
repnz
xchg
push
sti
fdiv
imul
into
mov
aad
and
div
or
mov
lock
mov
and
ins
pusha
lock
xor
add
cmovnp
push
or
mov
in
push
mov
ss
sbb
sbb
jg
jp
mov
and
cmp
dec
cdq
and
pushf
ret
movs
cmc
ds
(bad)
mov
add
mov
adc
sti
mov
push
inc
loopne
in
js
inc
js
push
daa
mov
movs
mov
sub
push
je
mov
aam
lock
push
jge
aam
pop
call
enter
sub
and
lods
das
pop
ret
cwde
add
mov
add
sbb
fs
inc
inc
jae
dec
call
loop
jp
gs
add
sbb
fnsave
push
(bad)
popa
push
and
clc
daa
sbb
cmp
cdq
or
icebp
repnz
jge
test
leave
mov
xchg
in
(bad)
aam
adc
loop
lds
sub
push
inc
jge
ss
pop
and
push
icebp
adc
sub
inc
arpl
pop
xor
mov
inc
loopne
mov
mov
rcr
je
xor
sbb
mov
jns
pop
jbe
xchg
inc
dec
cmc
fcom
push
push
fadd
(bad)
mul
sbb
push
sar
in
and
or
cmp
sar
xor
cmp
xor
ss
ficomp
pop
inc
xchg
push
movs
icebp
rol
out
jne
xchg
mov
movs
jb
mov
inc
shl
add
adc
and
dec
xchg
add
inc
sub
or
or
clc
cwde
lea
aaa
out
push
fwait
or
cmps
and
xor
inc
scas
repnz
(bad)
aam
xlat
adc
mov
ffreep
mov
fldcw
push
jno
fmul
pop
shl
into
fsub
add
add
test
cmp
jno
sub
xchg
cmp
pushf
loopne
shr
cdq
iret
js
retf
dec
jge
xchg
fdiv
add
jge
test
sbb
fisubr
shl
jmp
shl
pushf
pop
fdiv
cmp
push
enter
xchg
mov
je
hlt
fadd
fld
scas
movs
es
or
add
jp
jg
not
jne
sbb
add
stos
sahf
js
mov
jge
mov
lods
sbb
sub
dec
pushf
mov
sbb
jl
adc
pop
xor
(bad)
jno
sbb
cmp
fisubr
xor
inc
dec
js
push
push
push
dec
push
fmul
shr
call
mov
and
cwde
inc
fnstenv
push
xor
add
xor
inc
push
je
cs
pop
gs
xchg
mov
xor
into
sbb
gs
push
or
je
fld
out
cmp
icebp
mov
add
adc
cwde
test
nop
dec
popa
movs
or
xor
gs
je
inc
adc
jmp
sub
call
mov
add
mov
inc
test
dec
loop
jmp
dec
sub
add
mov
dec
adc
jne
and
jo
imul
mov
loopne
ret
mov
xor
push
xlat
(bad)
mov
call
inc
mov
ds
push
adc
fwait
adc
and
and
push
add
and
(bad)
aaa
(bad)
mov
or
(bad)
fdivr
xor
ret
test
jbe
dec
inc
sub
dec
inc
mov
mov
jge
mov
mov
adc
add
add
add
shl
mov
push
dec
push
shr
push
repnz
movzx
mov
jo
adc
call
xlat
and
adc
or
dec
jne
sbb
pop
sbb
mov
mov
adc
clc
xchg
or
jbe
jmp
aas
lods
dec
push
mov
jle
push
pop
lea
aas
icebp
lahf
push
sahf
fnstsw
iret
not
and
mov
retf
fbld
test
js
push
rol
add
mov
not
and
fisttp
or
add
fimul
mov
call
sar
xlat
mov
and
or
mov
(bad)
scas
out
jo
and
iret
lsl
mov
mul
add
in
pop
sub
push
add
xchg
adc
into
mov
jbe
lods
jmp
fiadd
cmp
mov
call
push
in
jl
ret
jge
not
scas
xchg
push
mov
add
in
sub
xchg
mov
xor
ds
cmp
test
div
inc
xor
mov
not
cmp
or
add
fsubr
pop
add
jnp
mov
xor
bound
fcomp
sub
jmp
mov
or
int
jle
ds
fisttp
rcl
fcom
out
loope
fdiv
mov
(bad)
jmp
xlat
xor
sbb
loop
mov
jl
cmp
rol
fsub
mov
out
and
nop
imul
xor
and
mov
call
std
inc
scas
loopne
ds
inc
clc
fucomp
mov
mov
mov
or
fldenv
or
add
push
not
bswap
dec
inc
hlt
add
add
mov
mov
ins
test
(bad)
cmovo
mov
test
cmc
pop
push
pop
pop
es
push
sub
add
rcr
(bad)
mov
sub
cmps
fimul
ret
nop
cld
into
sbb
fmul
pop
adc
(bad)
add
fbld
(bad)
leave
mov
xor
hlt
or
inc
add
pop
out
jl
cdq
cmc
cmp
lock
das
pop
aaa
js
ins
jb
(bad)
enter
or
shl
loope
pushf
outs
dec
cmp
dec
cmp
fsub
int
and
ins
xor
and
fimul
stos
jl
jg
or
pop
aaa
ret
iret
call
push
mov
aad
fst
dec
shl
xchg
push
push
push
xlat
aam
adc
inc
jmp
in
sar
call
test
push
(bad)
xchg
dec
and
mov
(bad)
mov
sti
or
outs
addr16
add
in
dec
sub
dec
repz
cmp
cli
inc
jle
hlt
and
ret
xor
cwde
test
cwde
add
popa
div
dec
lds
sub
into
mov
push
in
pop
or
in
sbb
or
mov
movs
mov
les
ficom
add
ss
xor
xor
jo
test
lods
push
stc
add
mov
out
shl
or
(bad)
mov
mov
mov
fs
pop
jmp
mov
add
stc
mov
jbe
daa
mov
xor
rcl
sub
pop
test
out
aam
mov
xor
xchg
lahf
jl
shl
int3
mov
add
xor
data16
gs
rcl
fldenv
aas
je
in
in
(bad)
rol
add
mov
fst
test
clc
jl
pop
cli
sub
mov
xor
push
lods
les
outs
or
inc
and
hlt
push
fild
jl
xchg
sub
scas
adc
cld
jmp
mov
in
cmps
and
psubusw
inc
mov
mov
add
in
pop
pop
gs
out
pop
rcl
mov
pop
enter
hlt
out
(bad)
mov
pop
repnz
aam
jle
outs
lock
mov
sub
int3
adc
add
call
or
retf
scas
push
lods
(bad)
loopne
cmp
cmp
test
ror
xor
cmp
push
pop
mov
dec
cmp
outs
adc
add
pusha
ret
mov
push
inc
in
jbe
xchg
rol
adc
inc
or
or
pop
mov
pop
jmp
loope
and
add
jle
inc
call
or
loop
(bad)
not
push
mov
jae
cld
jmp
cwde
push
jmp
pop
sub
cmp
jb
or
popa
or
xor
into
lods
push
loopne
stos
fnsave
add
sbb
aas
jmp
outs
(bad)
sar
cmp
shl
inc
sub
sti
jb
popa
sub
dec
push
iret
pop
outs
mov
jmp
imul
add
pusha
cwde
es
or
rcr
or
inc
fdivr
shl
pop
sub
push
push
push
cmp
in
adc
push
pop
adc
lahf
inc
dec
sub
outs
push
push
frstor
adc
mov
sbb
add
dec
call
mov
and
xor
fsub
push
dec
push
fld
neg
adc
push
fst
pop
add
xchg
mov
add
clc
pop
push
push
inc
push
push
adc
sub
lock
adc
or
sbb
jns
jo
sbb
xchg
mov
(bad)
fnsave
inc
inc
mov
cli
fs
sbb
lods
add
aas
add
fsubr
and
sub
pushf
add
or
sbb
pop
je
shl
cdq
js
jl
mov
inc
sbb
fst
stos
push
inc
jmp
mov
test
add
cmp
mov
(bad)
int
or
adc
sub
js
jo
pop
cmp
dec
sbb
ja
out
shr
repz
xor
(bad)
into
ja
xor
(bad)
push
mov
xor
inc
push
and
fidivr
add
stc
and
sbb
lock
dec
push
retf
dec
mov
test
arpl
xchg
add
into
xchg
add
mov
jg
dec
ss
push
out
lds
and
jo
sub
xlat
inc
(bad)
or
test
inc
cs
sbb
mov
sbb
mov
gs
dec
and
xchg
add
cs
or
enter
inc
dec
fdivp
mov
dec
mov
std
xchg
or
mov
ins
mov
cmp
xchg
xchg
js
xchg
out
add
add
cdq
dec
add
inc
dec
xchg
in
push
mov
push
gs
mov
clc
(bad)
mov
inc
or
mov
mov
sub
push
or
inc
jnp
aaa
add
cmps
rol
call
int3
sub
push
cs
adc
dec
and
add
stos
enter
inc
add
mov
inc
sub
and
add
or
add
aam
mov
jge
idiv
add
or
movzx
neg
jmp
cmp
mov
jl
pop
xor
inc
lods
loope
lea
stc
enter
popa
push
jle
out
xchg
aaa
cmc
mov
cmp
pop
or
in
clc
pop
je
pusha
jbe
dec
not
jne
inc
dec
or
enter
mov
fdivr
cmp
(bad)
jle
lea
fstp
jle
pop
pop
add
jns
lds
shl
gs
cmp
int3
sub
jmp
or
or
jecxz
cwde
nop
sub
xchg
or
js
pushf
int
xor
push
into
test
sbb
ja
rol
sbb
push
and
aas
mov
loopne
xchg
and
push
fwait
or
sub
pop
psrld
mov
test
add
or
mov
jb
pop
add
mov
fwait
idiv
and
dec
fs
shl
xor
rcr
cmp
push
xor
sbb
rol
(bad)
or
dec
je
add
data16
ror
cmp
je
in
inc
mov
inc
ds
sub
push
inc
and
pop
add
retf
xchg
retf
push
loopne
add
jg
loopne
jne
cmp
xchg
ja
add
push
mov
or
inc
and
sti
xchg
(bad)
mov
jb
stos
outs
push
mov
lods
cmp
add
pop
ja
jne
in
ins
mov
pop
and
inc
sbb
mov
mov
sbb
inc
jmp
pop
jae
push
jge
scas
or
jl
mov
and
sub
pop
dec
and
adc
rcl
jne
(bad)
push
enter
sbb
ror
push
es
lock
xchg
aad
or
ja
adc
add
or
pop
cld
sar
loop
fidivr
push
je
mov
int3
dec
sbb
and
(bad)
fwait
push
or
and
lock
(bad)
por
mov
jo
xor
movzx
aad
mov
shl
jo
dec
shr
push
inc
in
sub
jl
push
add
sub
jg
xchg
xchg
scas
xor
dec
je
mov
jnp
mov
inc
jne
mov
or
jmp
jle
cmps
not
jmp
dec
pop
por
dec
pop
dec
jle
jmp
xor
cmps
imul
dec
xor
ficom
xor
or
or
movs
push
in
aaa
sbb
mov
add
retf
push
and
jmp
push
retf
mov
int
pushf
mov
sbb
loope
push
and
xchg
aad
enter
jo
call
je
clc
test
fisubr
out
add
inc
sbb
sbb
jmp
les
jns
jge
push
cmps
and
data16
lods
test
xacquire
inc
xchg
xchg
inc
hlt
mov
jo
adc
and
jmp
adc
mov
fucomi
outs
lods
jnp
call
shl
ja
ds
inc
nop
push
mov
push
nop
aas
sub
xchg
push
add
add
call
jb
pop
mov
pusha
mov
aam
test
inc
push
mov
jge
mov
pushf
push
pop
adc
mov
nop
add
and
nop
test
add
fs
cs
push
pop
pop
and
nop
mov
mov
or
cs
add
adc
nop
mov
or
push
in
or
add
add
mov
cld
pop
or
inc
jb
clc
adc
jb
lock
leave
sbb
or
cs
adc
xor
add
shl
pop
loope
scas
mov
xchg
repz
les
int
mov
add
imul
mov
push
mov
fidiv
push
adc
adc
inc
and
dec
cli
les
sti
add
out
inc
loop
mov
popa
cmp
inc
call
retf
jl
mov
sbb
imul
sbb
pop
xor
jmp
or
shr
aam
out
xchg
adc
adc
xchg
mov
mov
push
mov
sub
add
add
mov
aaa
jns
rol
jg
lock
lock
fdivr
movs
jb
loopne
push
js
or
fcomp
add
adc
fdivrp
add
inc
mov
mov
scas
mov
mov
je
dec
ds
(bad)
call
in
out
ror
mov
jge
stos
es
jo
and
(bad)
leave
add
or
inc
sub
in
call
ret
lds
inc
sbb
(bad)
adc
sub
inc
addr16
retf
daa
popf
sbb
adc
add
dec
or
or
sbb
je
push
cmp
inc
in
test
ja
sbb
or
sbb
adc
dec
inc
stos
mov
sbb
adc
outs
or
xchg
mov
fmul
adc
shl
leave
or
fdiv
or
or
xor
popf
mov
nop
jge
add
sti
xchg
push
lds
adc
nop
cmp
jge
inc
push
inc
xchg
adc
mov
ins
setae
gs
dec
push
push
adc
mov
adc
mov
ret
dec
arpl
cmp
pop
adc
out
fmul
loopne
test
adc
adc
adc
pop
sub
pop
or
push
rcr
cdq
or
les
fcmovu
cmc
inc
sar
dec
stos
mov
adc
adc
or
pop
sub
xchg
div
mov
push
bnd
cwde
jo
test
jo
and
cmp
push
aam
in
out
out
and
lea
fisttp
push
or
mov
mov
data16
jno
retf
nop
pop
mov
xchg
data16
or
add
jne
push
mov
jg
push
jle
je
jecxz
jmp
ins
cmp
mov
or
add
in
jmp
into
(bad)
leave
mul
rcl
push
icebp
lods
push
mov
or
add
in
nop
or
sti
or
push
mov
test
mov
call
and
in
fwait
loop
or
imul
pop
test
imul
aaa
add
push
jno
sub
mov
or
loopne
push
adc
push
setb
inc
mov
cs
add
cmp
push
push
add
in
(bad)
cmp
sub
add
and
add
push
inc
or
and
push
or
and
dec
add
popa
push
sub
adc
imul
mov
ror
xor
mul
je
lea
je
movs
lea
jne
loope
inc
test
adc
inc
mov
sbb
ret
mov
jns
aam
test
enter
add
or
rol
mov
and
rol
sub
add
sahf
or
fldenv
stos
jl
pop
jne
xchg
ja
popf
lahf
add
inc
pop
and
ret
aaa
sub
add
(bad)
xchg
cdq
and
push
pop
or
cmp
adc
sub
mov
sub
sbb
cdq
arpl
add
popa
dec
mov
data16
into
pop
mov
leave
xchg
xchg
cmp
and
pop
sub
aas
ins
sub
xchg
pop
ss
imul
outs
mov
mov
bound
mul
dec
sahf
call
add
push
inc
popa
in
sub
pop
out
pushf
mov
adc
xchg
nop
loopne
xor
jno
(bad)
sbb
ret
inc
(bad)
sub
retf
cmp
xchg
xor
xchg
out
and
and
cmp
cmp
fidiv
push
and
and
daa
daa
cld
clc
cld
or
xchg
mov
push
sbb
ftst
xchg
(bad)
pop
mov
sbb
adc
add
jo
add
xchg
(bad)
std
in
ins
es
movs
jns
xchg
nop
or
imul
in
xor
add
call
and
(bad)
aam
dec
xor
rcr
mov
ins
sub
mov
jmp
or
jl
sbb
xchg
sbb
dec
push
xor
xchg
push
adc
fs
jb
or
or
push
movups
movs
sub
adc
adc
and
pop
or
xchg
in
sbb
fcomp
sbb
enter
enter
lock
clc
dec
or
sbb
leave
mov
pop
cmp
jmp
and
jmp
jns
loope
or
xchg
dec
movups
loope
mov
sbb
fsub
and
jb
in
jb
pop
jb
lock
add
pop
clc
cld
adc
sbb
and
div
push
dec
cs
leave
gs
cld
clc
or
pop
aaa
ret
mov
jo
mov
loop
lock
mov
(bad)
repnz
fcmove
push
xor
(bad)
xor
jne
mov
cli
mov
mov
int3
mov
mov
add
lea
push
xor
cmps
adc
mov
repnz
in
shl
stos
or
sbb
or
clc
mov
adc
and
add
xor
popa
sar
push
pop
and
inc
inc
mov
in
out
out
movs
jmp
stos
loopne
dec
dec
xor
jmp
lea
mov
or
je
int3
gs
in
sbb
call
stos
or
aaa
loopne
cmp
retf
adc
push
loopne
retf
iret
xchg
icebp
aaa
test
dec
scas
in
mov
dec
clc
frstor
or
push
mov
push
or
pop
loope
inc
fistp
cli
mov
dec
sbb
jecxz
test
sbb
into
xor
push
cmps
sar
adc
mov
push
retf
sbb
or
call
add
adc
(bad)
xlat
cdq
mov
test
jg
(bad)
cmp
std
and
or
add
xor
jg
aam
ret
cdq
fs
fsubr
loopne
cdq
fs
dec
call
inc
add
cmp
ret
addr16
ins
fidiv
push
inc
nop
jo
add
mov
(bad)
fwait
imul
mov
aam
fs
dec
es
in
dec
es
call
cdq
fs
clc
cld
inc
imul
(bad)
out
cdq
and
adc
in
nop
andps
out
ror
or
mov
adc
repz
in
mov
cli
sbb
sbb
mov
adc
pop
ds
xchg
jmp
adc
sub
shr
int
dec
jecxz
xchg
ss
dec
cdq
aam
jns
jmp
retf
xchg
mov
push
test
(bad)
xchg
icebp
(bad)
in
add
and
or
dec
xchg
clc
add
sti
mov
jo
and
pop
sbb
pop
das
inc
sub
cmp
hlt
or
mov
pop
retf
maxps
push
push
out
jae
mov
jmp
into
xor
cmp
xor
dec
rol
repz
loopne
xor
xor
aam
int3
push
add
adc
int3
push
add
(bad)
push
pop
xchg
sub
xor
dec
les
in
scas
fist
push
dec
fs
mov
xchg
sub
lock
xchg
push
and
das
sbb
call
push
lds
jne
or
and
enter
add
in
sbb
in
adc
test
dec
leave
in
loopne
in
fs
nop
add
test
or
push
or
inc
mov
xor
adc
push
and
xchg
xor
push
enter
js
add
and
ins
xor
push
enter
push
adc
and
inc
xor
push
enter
and
add
and
sbb
push
enter
cld
arpl
pop
push
push
enter
mov
outs
fldenv
pop
fwait
pop
or
inc
cmc
push
inc
cmps
call
dec
in
push
scas
fwait
push
mov
loopne
rcl
push
aaa
pop
mov
bswap
(bad)
push
scas
rcr
mov
fsubr
aam
imul
aam
mov
leave
aam
or
mov
shr
aam
push
push
int3
push
scas
inc
sbb
enter
dec
scas
arpl
test
dec
add
add
fist
sbb
cld
in
xchg
inc
sbb
inc
mov
(bad)
mov
aas
lds
jo
test
xchg
or
sub
stos
adc
call
mov
and
add
aad
xor
add
test
cmp
iretw
add
add
call
xor
call
mov
add
pop
jecxz
xchg
mov
(bad)
and
sti
out
lahf
in
xor
neg
pop
sbb
pop
xchg
sub
test
sub
cmp
or
call
das
push
xor
lods
icebp
push
push
xchg
xor
xchg
out
add
mov
(bad)
out
or
nop
mov
adc
cld
lods
cmc
and
or
jne
in
test
out
mov
pop
add
push
pop
mov
mov
inc
push
inc
push
sbb
pop
iret
call
jb
jl
push
test
or
ret
sub
sbb
jae
test
push
push
jne
or
dec
lock
mov
sar
push
fbld
mov
idiv
jns
adc
or
aam
add
push
call
in
push
jo
mov
imul
outs
add
outs
xor
add
into
xchg
xor
loopne
cmp
jb
aam
jle
lock
adc
inc
inc
mov
outs
push
jp
js
enter
fadd
add
push
jecxz
inc
and
fs
jle
add
in
adc
enter
inc
dec
inc
cs
or
in
push
int3
sub
loopne
mov
into
ror
shr
push
dec
rol
in
cwde
or
cwde
nop
pop
pop
and
jb
test
mov
dec
xor
add
mov
jns
clc
imul
imul
bsf
mov
repnz
pop
enter
jns
sbb
cmp
mov
sbb
cmp
push
repz
adc
dec
ficom
(bad)
movs
dec
neg
leave
sub
add
and
(bad)
rol
pop
sbb
shr
jg
mov
xor
shl
add
mov
adc
jmp
aam
ins
and
or
and
jmp
ror
push
cdq
add
pop
dec
jne
sbb
pop
sbb
and
inc
aaa
nop
mov
adc
aad
dec
or
jl
or
xor
jb
sbb
fs
jns
push
jmp
and
push
pop
add
lea
cmp
mov
ja
in
rol
and
cdq
push
xchg
add
in
or
es
pop
dec
mov
jl
inc
in
sub
int3
sar
xchg
push
sbb
enter
sti
mov
sbb
pop
xor
test
rcl
fsub
sbb
sbb
addr16
nop
xchg
or
sub
shr
xor
or
lods
xor
inc
shr
sub
add
push
jp
cs
retf
cmp
das
or
cmps
mov
and
and
push
pop
js
je
xchg
xor
div
mov
addr16
cs
ds
cmp
push
xchg
mov
and
sub
and
add
or
stos
add
mov
xor
(bad)
add
or
dec
xor
js
nop
out
and
mov
xor
pop
and
xchg
pop
jo
call
cmp
sub
and
lock
inc
cmp
dec
mov
pop
adc
pop
adc
(bad)
fcomp
cmp
jno
stos
jle
xor
aad
retf
ins
pop
adc
enter
cmp
cmp
add
cmp
popf
ret
out
imul
in
retf
adc
mov
pop
or
std
sub
or
dec
js
push
daa
and
pop
pop
sbb
add
mov
push
dec
fdiv
(bad)
sbb
adc
xor
push
repnz
dec
sub
adc
loopne
push
popf
inc
push
and
lods
inc
adc
cmp
sbb
nop
sbb
xor
mov
or
and
hlt
imul
and
clc
in
or
xor
mov
and
enter
pop
mov
adc
repz
in
gs
push
inc
inc
xchg
dec
lock
dec
aaa
gs
push
push
call
push
cmp
test
sub
mov
pushf
push
inc
xor
cmp
pop
xor
jb
pop
in
add
pop
jb
aam
test
push
enter
into
or
rcr
adc
in
bound
sub
push
dec
xchg
mov
daa
push
dec
dec
unpcklps
inc
jb
sub
push
lock
pop
stos
jmp
sbb
mov
or
test
les
inc
dec
xchg
pop
xor
test
nop
sub
ins
sbb
adc
add
cwde
enter
mov
inc
ins
add
or
movups
sbb
shr
sub
jp
test
dec
push
mov
or
sub
xchg
xchg
inc
mov
test
jl
outs
lahf
imul
les
or
mov
inc
add
retf
push
lea
cdq
inc
mov
and
pop
shr
pop
sub
mov
lock
xlat
sbb
sbb
mov
mov
dec
pusha
jb
fld
shl
mov
add
and
add
dec
(bad)
sub
push
adc
add
pop
test
gs
push
int
mov
movs
rol
and
nop
pop
(bad)
sbb
daa
mov
rcl
jecxz
(bad)
scas
adc
call
add
or
xor
cld
ins
sub
push
inc
mov
add
add
push
add
add
in
aad
pop
(bad)
jbe
mov
int3
pop
or
and
mul
xor
xor
fsub
inc
cs
xchg
xor
inc
fdivr
(bad)
cmp
add
cmp
add
inc
inc
adc
sbb
jo
js
and
imul
in
add
mov
test
popa
pop
cmp
xchg
pop
pop
sahf
les
xchg
sahf
cs
loopne
aas
inc
sbb
sar
scas
xchg
imul
je
in
ins
add
call
js
(bad)
loope
xor
inc
fld
pop
push
je
in
or
cmp
dec
adc
push
movs
dec
les
loop
dec
retf
xor
add
icebp
push
pop
cld
push
sbb
dec
je
mov
popf
jmp
cdq
jmp
mov
scas
add
call
cwde
ins
fs
jl
xchg
xor
push
cmp
leave
les
mov
and
sbb
stos
jb
add
pop
adc
inc
inc
js
je
inc
adc
sub
jg
mov
pop
dec
jmp
cwde
mov
imul
push
pop
mov
(bad)
mov
imul
xchg
pop
xchg
es
stc
or
and
xchg
icebp
dec
add
sub
in
inc
mov
add
ret
int3
ins
nop
sahf
loope
jnp
inc
ins
push
add
pop
push
lds
sub
and
jae
pop
sbb
aam
loope
and
inc
or
dec
adc
les
loopne
pushw
push
jns
dec
test
(bad)
mov
mov
sar
inc
ss
cmp
push
jne
push
push
jmp
push
pusha
and
xbegin
lds
sub
leave
cmp
pop
pop
cwde
xor
push
rol
ins
loopne
into
sahf
push
or
xor
jne
dec
xor
xchg
and
and
sub
popf
les
in
ret
xchg
call
call
xor
sub
mov
xor
ds
sub
or
mov
mov
mov
push
push
pop
adc
fldcw
pushf
cmp
enter
sbb
push
sub
inc
add
cmp
fmul
xor
sbb
xor
div
inc
imul
mov
pop
popa
pop
inc
int
cmp
mov
popf
sub
adc
ficom
xchg
mov
or
adc
xor
xor
lea
mov
push
dec
push
dec
mov
shl
call
push
cli
adc
loop
(bad)
sub
(bad)
(bad)
icebp
retf
test
imul
mov
mov
pop
outs
sbb
push
jnp
and
in
dec
std
clc
inc
push
fisubr
add
hlt
mov
pop
add
mov
add
ss
call
call
gs
out
xchg
or
or
xchg
scas
push
cmps
mov
mov
add
cmp
mov
shr
jae
dec
inc
sbb
cmc
ret
pop
fcom
mov
mul
mov
mov
adc
repnz
push
add
jp
jp
pop
cmc
adc
sbb
push
mov
fdiv
push
not
adc
sbb
add
jge
std
popf
and
out
add
cmp
push
mov
shl
aam
inc
ret
and
dec
or
aad
call
rol
(bad)
push
inc
inc
fnstsw
mov
out
pminub
mov
xchg
cmps
popf
cmps
loopne
in
adc
lock
ins
fs
add
aaa
jg
daa
mov
jne
push
arpl
and
xor
push
adc
rcr
ins
inc
dec
(bad)
call
fsubr
dec
cmp
add
or
not
lods
mov
les
push
cmp
push
pop
and
inc
or
push
mov
ds
fstp
test
rol
xor
stc
jecxz
add
jb
int3
xlat
fdiv
mov
les
sub
enter
icebp
sub
in
ret
sti
mov
call
gs
adc
mov
mov
cmp
jne
inc
adc
out
or
pop
push
jns
or
cmp
stos
add
push
test
jmp
push
push
ss
pop
loope
and
pushf
add
cmps
add
pop
dec
stos
ins
pushf
add
inc
or
and
movs
ja
jns
or
inc
sbb
mov
mov
and
imul
int
call
add
push
mov
scas
(bad)
and
add
xchg
add
xor
cmp
cmc
dec
jne
mov
add
add
mov
ret
adc
jb
mov
inc
pop
adc
or
mov
add
jns
mov
outs
or
loope
xlat
adc
enterw
sub
xchg
push
adc
jae
imul
leave
(bad)
loopne
pushf
mov
mov
in
push
mov
mov
call
fisttp
es
or
cmp
jg
mov
and
lds
inc
nop
add
pop
add
and
stos
es
jmp
icebp
ficom
jle
loope
ss
lods
lock
ror
add
sub
add
ror
sub
sub
es
inc
or
adc
shr
cmp
push
xchg
fimul
jl
mov
sub
jne
push
imul
je
mov
mov
dec
rcl
shr
or
jns
hlt
ss
add
je
cwde
mov
mov
lods
pusha
sbb
xor
mov
out
movs
lods
sub
add
and
mov
xor
mov
jmp
xor
inc
fiadd
add
sbb
mov
mov
lock
out
xor
call
cmp
int
adc
jge
xor
sub
out
loop
jo
push
add
fucomp
xor
pop
pushf
loop
call
imul
xor
mov
lea
xlat
inc
lock
pop
and
and
cmp
sub
dec
inc
hlt
in
jne
movs
push
movs
mov
lahf
or
inc
call
ss
loopne
dec
mov
and
pop
ds
add
(bad)
pop
daa
mov
mov
leave
aas
and
(bad)
or
daa
lds
jbe
daa
mov
test
aam
jle
mov
ds
and
data16
ja
popa
in
push
ins
addr16
(bad)
call
test
xor
cld
out
pop
xor
stc
mov
cmp
jne
or
scas
add
jl
cmp
jne
test
and
enter
mov
jo
hlt
scas
das
lea
in
jmp
push
add
push
sub
dec
sbb
stc
mov
imul
jbe
add
dec
(bad)
mov
pop
outs
adc
lea
(bad)
push
call
out
loope
adc
mov
or
sbb
lds
(bad)
stc
imul
cmp
dec
add
jl
popf
jnp
jne
mov
retf
inc
sbb
call
out
add
je
popa
push
(bad)
mov
pop
inc
rcl
and
add
inc
outs
jecxz
outs
mov
jmp
pop
sbb
mov
inc
fld
and
push
retf
inc
inc
imul
test
or
mov
mov
cmps
ins
or
aaa
adc
pop
arpl
ret
lock
mov
push
adc
xor
push
dec
adc
cmps
xchg
fadd
add
test
jl
sti
inc
push
in
mov
aad
or
or
or
or
push
shl
jb
icebp
pop
push
pop
ins
loopne
call
add
dec
lea
shr
push
outs
sbb
adc
push
or
mov
repz
rol
dec
jnp
adc
popa
dec
fmul
mov
test
leave
test
push
sbb
push
pop
fiadd
mov
push
pop
adc
icebp
pusha
sub
xor
push
call
xor
shl
and
dec
pop
push
lods
cmp
adc
rol
cwde
mov
push
out
(bad)
push
add
(bad)
cmp
int3
and
mov
movs
movs
add
sbb
std
ret
jl
xchg
movs
aas
sub
jno
mov
inc
pop
pop
dec
inc
fisubr
shr
int3
and
mov
fild
add
dec
mov
pop
movs
adc
sub
lahf
push
into
out
push
gs
cli
or
mov
inc
mov
xor
adc
xlat
sub
cdq
addr16
and
add
or
pusha
sbb
cdq
pop
and
imul
inc
add
xchg
inc
adc
sub
push
xor
cli
in
pop
mov
loope
in
add
inc
xchg
mov
in
push
jnp
sub
jmp
adc
rcl
out
sbb
ins
cdq
pop
lods
push
mov
movs
inc
mov
inc
or
js
add
loopne
adc
push
jno
pop
and
xor
dec
enter
ret
ror
push
(bad)
iret
inc
shr
push
and
jno
lea
outs
call
push
xlat
shl
js
in
or
pop
mov
push
mov
pop
out
nop
lock
pop
int3
add
shl
test
retf
xchg
fdiv
add
out
add
mov
add
fcom
retf
inc
pusha
lock
rol
or
in
add
dec
in
in
inc
scas
push
sub
push
ret
push
sub
mov
inc
fcmovnu
mov
rcl
mov
dec
dec
or
cmp
mov
inc
dec
xchg
in
xor
or
push
cmp
pop
sub
mov
mov
push
or
adc
xchg
xchg
add
outs
adc
adc
shl
xchg
push
test
sub
add
adc
loope
test
adc
push
add
cmp
clc
jo
sbb
call
rol
aas
rcr
pop
ins
cmp
inc
bound
xchg
rcr
dec
enter
cmp
sub
or
cmp
fadd
f2xm1
mov
push
jne
and
jo
mov
call
and
dec
fadd
ds
ret
jb
dec
jge
loopne
add
push
in
pop
pop
adc
or
sbb
in
in
in
push
cwde
in
cmps
and
enter
dec
or
inc
inc
push
push
sbb
dec
in
lahf
xor
popa
ins
jb
xor
iret
test
add
sbb
inc
push
sub
js
pop
nop
inc
push
xor
add
sbb
cdq
mov
push
and
cmc
cmps
fimul
aad
jbe
cmp
adc
add
xchg
xor
add
mov
sub
or
lahf
nop
mov
cmp
scas
mov
xor
push
dec
cs
cmps
mov
mov
inc
cmps
fs
adc
loop
jo
sbb
in
les
je
lock
std
xchg
mov
jl
enter
fcmovu
lahf
ds
mov
push
cmp
push
mov
fs
lock
daa
inc
call
adc
hlt
call
jo
sbb
or
ror
push
popf
and
adc
in
mov
inc
sbb
arpl
icebp
or
or
add
mov
adc
xchg
sbb
fcmovnbe
push
repz
sub
cmp
test
shl
retf
out
sub
or
fisttp
sub
loope
sub
inc
mov
push
or
outs
adc
and
or
lods
and
test
test
loop
push
sbb
jl
xor
inc
paddq
adc
push
inc
or
aad
add
daa
pop
adc
push
add
inc
and
and
mov
cs
xchg
call
dec
rcr
shr
ret
rol
movs
and
enter
cld
add
sub
mov
outs
movs
or
mov
inc
and
add
xchg
aas
cmp
mov
jl
cmp
sub
inc
add
or
mov
(bad)
(bad)
and
xchg
pop
xchg
dec
sahf
sbb
fdivr
imul
inc
push
sub
push
sbb
adc
mov
dec
enter
or
add
lods
(bad)
mov
jge
cmp
je
and
fimul
test
inc
jmp
add
(bad)
push
pop
cmp
cwde
sahf
fisub
mov
imul
xor
or
xor
out
jo
xor
jge
add
xor
daa
ja
dec
push
adc
idiv
or
push
call
pop
mov
sahf
pop
mov
dec
inc
jbe
inc
xchg
and
loop
adc
add
cmp
je
jge
mov
scas
call
lea
pusha
movs
jo
(bad)
fild
mov
mov
cvtpi2ps
add
cs
or
nop
sub
sub
dec
dec
arpl
in
int
xchg
sbb
sbb
mov
dec
mov
xor
add
cs
(bad)
xchg
pop
imul
jb
sub
pop
fmul
movs
add
xchg
cmpxchg
mov
icebp
je
call
mov
(bad)
icebp
mov
enter
add
add
leave
lock
or
adc
adc
stos
lock
mov
imul
lods
push
inc
xor
test
shr
mov
add
xchg
int
xor
mov
dec
mov
inc
ins
sub
inc
push
sahf
mov
inc
jmp
xchg
push
add
xchg
jmp
fnsave
adc
fsubr
gs
sbb
leave
xlat
xchg
xchg
scas
pusha
sub
scas
stc
jns
mov
leave
bound
loopne
shl
adc
or
mov
mov
pop
cmp
lds
jmp
iret
movs
sub
add
sub
xor
rcr
push
mov
jg
jb
or
mov
nop
push
cwde
mov
lods
push
gs
sub
ret
rcr
pop
push
cmp
push
shl
jne
mov
scas
inc
gs
push
das
add
or
xchg
add
dec
or
sbb
cmp
lds
call
in
add
fcmovne
sub
xchg
(bad)
lock
or
fmul
add
pop
rcr
xor
push
icebp
pop
mov
dec
and
sub
xor
or
jbe
dec
add
mov
pop
daa
pmulhuw
jno
lods
or
addr16
pusha
dec
add
stc
push
mov
pusha
push
ss
out
add
(bad)
gs
mov
and
(bad)
mov
out
pusha
ins
sub
xchg
(bad)
fidivr
sbb
jbe
cmps
or
lods
inc
push
call
aam
xor
cmp
int
or
sbb
inc
rcr
pop
push
add
add
shr
leave
push
xchg
pop
xor
jo
rcr
imul
fisub
pop
xor
pop
or
or
xor
and
inc
dec
inc
inc
lods
loopne
add
and
jne
fld
push
add
xor
movs
aad
push
cld
or
cmp
xor
in
or
add
cli
mov
cdq
sbb
mov
ror
outs
shr
ss
inc
rcr
mov
sbb
mov
sbb
(bad)
iret
fisttp
pop
sub
dec
call
pop
cmp
xchg
fcomp
adc
popa
repnz
cmp
les
push
push
in
cmps
mov
lea
push
push
jae
ror
sar
or
push
inc
dec
or
jl
inc
adc
adc
push
sbb
mov
bnd
add
cmp
mov
cli
inc
jp
jbe
aad
inc
add
ror
lock
push
sbb
cdq
les
mov
loopne
lock
mov
pop
push
or
inc
fld
push
dec
mov
or
push
mov
xchg
mov
cmp
in
sbb
in
pop
shl
pop
into
mov
imul
sub
enter
xor
stos
mov
and
dec
add
or
xor
add
xchg
dec
out
mov
push
xchg
or
push
pop
sub
lahf
sbb
add
aas
mov
out
add
mov
iret
sub
fs
mov
or
mov
adc
mov
and
sub
test
sbb
mov
cs
mov
mov
cmp
inc
lea
jo
retf
jno
mov
inc
mov
loop
jae
mov
adc
jp
stos
outs
push
(bad)
int3
jno
push
and
out
xor
add
jns
or
fldpi
cmp
mov
or
jb
lock
sbb
or
or
movs
icebp
add
iret
fs
cmp
ror
add
scas
dec
inc
nop
and
sub
adc
sbb
xor
xchg
mov
add
in
test
jne
xchg
ins
call
es
cmp
call
xor
inc
pop
mov
sbb
mov
dec
jno
inc
je
lds
(bad)
mov
jns
xor
imul
or
mov
imul
mov
or
test
push
jmp
rcl
pusha
cmp
mov
test
scas
or
lahf
or
sbb
mov
shl
mov
mov
jb
test
lods
inc
lods
or
add
sub
inc
push
and
adc
jb
sub
add
imul
je
dec
or
add
cwde
pop
inc
jp
or
dec
sub
and
or
gs
dec
sub
ja
inc
sbb
inc
das
in
fisubr
mov
mov
mov
mov
xchg
push
xchg
or
sbb
xchg
jb
mov
push
push
mov
dec
push
push
mov
repnz
ret
sub
jae
xor
jno
ret
(bad)
enter
imul
cmp
push
mov
outs
jno
fs
out
lea
jo
cmp
dec
mov
rcl
or
dec
dec
ror
adc
mov
outs
inc
sbb
inc
mov
dec
add
sbb
inc
cmc
outs
cli
inc
rcr
aam
mov
xor
test
in
mov
iret
adc
inc
rcl
ins
retf
fdiv
mov
and
mul
es
addr16
pop
push
addr16
cmps
push
or
mov
lea
sbb
fmul
mov
xor
jp
or
aas
or
shr
mov
push
out
xor
and
xchg
in
in
dec
xchg
out
loopne
loopne
leave
gs
mov
iret
sbb
inc
cmp
retf
push
aaa
lahf
inc
arpl
enter
outs
inc
jl
pop
fisttp
push
push
mov
cdq
push
lods
es
fnsave
and
push
pop
imul
push
das
shl
mov
daa
xor
sbb
dec
mov
or
cwde
sbb
jne
xchg
or
out
fcmovu
icebp
push
or
cmps
frstor
shl
sub
cmp
pushf
stos
and
push
aas
or
jb
sbb
mov
mov
and
bound
dec
sbb
xchg
sbb
arpl
call
into
jge
jne
add
pop
fistp
and
les
aam
and
mov
jmp
lock
dec
adc
pop
or
push
pop
and
add
mov
test
loope
out
add
inc
add
jae
arpl
pop
add
pop
enter
aam
loopne
shl
inc
cmps
test
lahf
cmps
inc
sbb
mov
jne
xchg
sbb
lea
and
xor
inc
xchg
lods
daa
(bad)
call
call
sub
and
pop
nop
dec
popf
xor
mov
mov
jg
pop
cmps
or
(bad)
std
in
pop
push
in
gs
fdiv
pop
cmp
cmp
clc
nop
pop
popf
sbb
mov
jmp
les
call
jmp
dec
lods
pop
xchg
cmp
jbe
fs
enter
mov
bound
dec
push
xchg
test
adc
or
popa
push
inc
neg
push
pop
pop
retf
xor
inc
dec
cld
jne
stos
push
pop
xor
bound
mov
add
push
pop
jmp
inc
adc
cdq
cmp
jne
dec
inc
mov
xchg
out
push
or
js
lds
je
jne
sbb
call
loope
fstp
jl
ins
xor
sub
mov
jl
mov
add
pop
xor
cmps
mov
or
rol
jp
(bad)
dec
scas
inc
pmulhuw
jne
xchg
f2xm1
xchg
inc
pop
leave
call
add
add
or
cmp
test
movs
addr16
cld
ss
dec
shr
lds
add
push
popa
sub
test
pop
aas
jns
cmp
mov
shr
scas
mov
test
sbb
push
sub
test
test
xor
inc
push
and
add
cmovbe
js
jl
inc
vcmpps
mov
daa
mov
mov
cs
pop
je
cmp
jno
xchg
inc
retf
ficom
pop
ins
aam
jno
push
mov
sar
and
jnp
test
or
in
cdq
pop
push
leave
adc
popf
pop
pop
xor
rol
xchg
rol
ins
cmp
or
mov
jmp
and
push
lods
jle
pop
xchg
mov
fs
enter
in
inc
enter
nop
nop
pop
xchg
mov
dec
push
jb
std
fstp
ja
mov
lea
movs
(bad)
and
rcr
jecxz
add
cmp
or
jle
mov
pop
fist
test
lods
and
fs
enter
push
or
push
pop
and
clc
inc
add
mov
rol
daa
add
pop
call
fild
jl
iret
pop
shl
inc
xor
in
shl
adc
in
in
in
inc
adc
stos
mov
cmps
stos
dec
dec
(bad)
dec
xor
add
movs
ret
jl
inc
mov
pop
add
adc
ja
scas
xlat
repnz
imul
dec
arpl
cs
cdq
push
xchg
dec
pop
and
jno
add
push
or
or
sbb
add
xor
fwait
push
(bad)
cmc
adc
push
or
pop
inc
mov
pusha
xchg
xor
call
pop
aam
aaa
lock
ds
ins
js
in
call
mov
or
push
xor
sub
xchg
mov
pop
mov
cmp
test
adc
lock
push
sub
dec
sti
or
ins
mov
mov
shl
mov
adc
cmp
fs
push
and
nop
cdq
and
and
in
js
mov
jne
out
imul
js
icebp
add
lock
fld
fwait
clc
jge
stos
add
imul
cmp
mov
jge
in
and
lea
push
ds
or
and
jmp
ficom
add
mov
fld
pop
js
stos
popf
add
push
xchg
stos
scas
sbb
xchg
je
mov
sub
push
and
mov
ins
rcl
add
xor
enter
in
lods
leave
and
cmp
mov
push
in
sub
xchg
push
sub
cmp
(bad)
mov
ins
adc
mov
fcomp
fdivr
loopne
cdq
xchg
or
adc
sbb
lahf
inc
loopne
bound
xchg
inc
test
pop
or
sub
xchg
loopne
and
std
xchg
jmp
jb
and
movs
js
push
cli
add
ss
xchg
sub
test
mov
pop
mov
pushf
outs
mov
jno
scas
loopne
ret
add
add
and
in
gs
sub
in
adc
add
fisttp
xchg
mov
add
movs
xchg
stos
aam
in
xchg
cmp
adc
dec
and
inc
add
repnz
dec
push
pop
sub
cwde
adc
inc
pop
mov
add
fdiv
pop
inc
sub
sbb
data16
adc
jge
sub
loopne
adc
jae
mov
add
outs
mov
rol
clc
xor
sub
aaa
push
dec
inc
test
sub
sbb
xchg
mov
inc
add
adc
dec
push
enter
dec
jb
jmp
mov
fsub
sub
and
sbb
xor
push
xchg
js
inc
push
je
test
pushf
jge
cmp
and
mov
mov
and
enter
enter
(bad)
push
cwde
ins
test
push
xor
jmp
inc
and
or
add
jo
xchg
stos
add
ss
inc
add
mov
and
es
out
push
or
fcom
dec
sub
stos
inc
lods
xchg
ror
xchg
xchg
or
fdiv
and
and
aam
add
mov
leave
imul
jnp
aaa
or
inc
imul
nop
fsubr
sbb
aas
xlat
fwait
dec
and
sub
push
sar
pop
push
imul
or
aam
popa
sub
cmp
fsubr
aaa
add
jecxz
sbb
loopne
fwait
or
fisttp
lods
ror
push
inc
das
aam
fild
mov
or
sub
shl
popf
test
xchg
dec
cmp
and
jecxz
js
lea
push
xor
in
nop
pop
lods
dec
pop
sbb
mov
push
push
cmp
inc
dec
aam
add
je
xlat
inc
outs
mov
repnz
mov
xchg
imul
add
loopne
into
add
adc
adc
mov
popa
push
in
sbb
lods
inc
rol
mov
aad
sbb
sbb
jecxz
add
popa
daa
pop
add
and
in
test
sti
fdivr
(bad)
or
xchg
stos
jecxz
mov
div
push
jo
xor
mov
mov
mov
fidiv
aas
or
and
and
adc
lods
xchg
sub
cmc
in
sbb
stos
push
xchg
xchg
mov
push
pop
loop
addr16
cs
ficomp
cmp
ficomp
or
sub
dec
cmp
sub
cli
mov
pop
mov
jecxz
nop
jp
adc
cmp
push
(bad)
mov
cmps
lock
dec
jae
sbb
sahf
jl
jg
jb
mov
sar
inc
sahf
mov
jmp
push
and
xor
or
pop
add
xor
call
call
js
add
shl
adc
cs
std
clc
retf
dec
ret
adc
xchg
add
sub
jne
dec
mov
daa
push
sub
mov
push
cmp
dec
cmp
xchg
mov
mov
push
dec
mov
ror
add
aam
jmp
jmp
call
jmp
jmp
adc
nop
cwde
inc
inc
cmps
cld
pushf
mul
cwde
push
inc
fstp
mov
mov
popa
inc
mov
imul
sub
into
rcl
cs
inc
je
into
inc
adc
lahf
add
jne
cmp
(bad)
mov
pcmpgtd
dec
add
fld
sub
xchg
leave
test
or
sub
xchg
mov
add
mov
or
cmc
pop
lahf
mov
adc
mov
sbb
and
push
sbb
ja
add
add
lea
and
sti
aaa
pop
mov
push
add
pop
dec
outs
or
add
test
adc
add
push
dec
xor
pop
xchg
add
and
add
sub
pop
adc
add
sub
push
jne
popa
jecxz
and
push
mov
push
mov
test
not
adc
dec
or
pop
dec
add
mov
inc
cdq
clc
cmp
jne
sub
xchg
pop
sbb
dec
(bad)
xor
jbe
rcl
repz
push
popf
xchg
xchg
jge
jmp
cdq
adc
xchg
test
imul
xor
dec
adc
xor
add
(bad)
push
jns
sar
add
pop
mov
xchg
les
sub
fild
call
or
push
inc
add
jno
repnz
mov
fld
and
push
push
xor
sub
inc
fdivr
sbb
xchg
pop
push
retf
mov
in
push
shr
xor
sbb
enter
and
push
push
dec
or
push
mov
jo
cmp
mov
or
push
mov
cli
adc
push
mov
ds
push
inc
jl
hlt
mov
out
adc
push
xchg
fild
or
imul
jnp
sahf
and
xor
pop
fld
or
inc
pop
sbb
sbb
mov
sbb
sbb
xor
push
push
in
push
push
sub
inc
jo
mov
xchg
movs
pop
add
push
fadd
pop
mov
adc
ins
sbb
mov
imul
test
ret
sbb
icebp
xchg
or
inc
ror
jno
add
add
inc
es
jbe
and
add
pop
scas
rcl
push
loopne
push
add
or
mov
or
es
leave
sahf
and
and
sub
test
pop
mov
stos
push
out
push
sbb
jecxz
or
aaa
(bad)
neg
jne
mov
pop
push
add
push
adc
mov
popa
or
jecxz
mov
sbb
cmp
fs
and
hlt
sub
aam
push
adc
ja
push
mov
add
push
pop
add
add
or
push
jmp
adc
push
sbb
push
inc
mov
jb
xor
push
jp
dec
enter
fnop
enter
inc
fcom
push
lds
xor
mov
jo
pop
sbb
or
in
in
pop
mov
pop
pop
enter
push
movs
push
fcomp
fs
ins
cmp
push
jmp
cmp
fstp
lods
add
and
inc
or
sbb
sub
leave
adc
pop
push
out
dec
int3
jmp
ret
mov
mov
or
pusha
imul
mov
sbb
push
push
je
xchg
or
sub
push
in
cdq
cmp
jp
jmp
call
ins
sar
in
fwait
js
daa
or
cdq
cs
push
add
(bad)
retf
dec
xor
dec
jp
call
nop
xchg
int3
cli
je
inc
jecxz
addr16
les
repz
push
add
fnsave
push
ror
pop
sub
xchg
and
shl
add
lock
call
and
icebp
pmaddwd
pushf
jne
scas
or
dec
cmps
mov
stos
call
pop
fmul
inc
cmp
and
jl
or
and
sbb
push
add
add
test
sub
daa
adc
fcom
and
test
push
ret
push
loop
xchg
repz
jo
adc
mov
jno
jbe
es
push
dec
jbe
mov
add
mov
shl
add
dec
push
gs
out
idiv
push
and
mov
jno
mov
nop
(bad)
pop
add
je
lods
push
(bad)
pop
mov
test
stc
sub
xor
inc
inc
sbb
loopne
add
jne
adc
inc
dec
rcr
pushaw
mov
jmp
lods
(bad)
call
mov
call
in
add
jb
xlat
mov
and
xchg
sbb
cmp
sbb
and
lods
int
inc
dec
iret
fs
std
jno
int3
sbb
sbb
mov
adc
xchg
adc
out
std
std
je
addr16
dec
test
xor
xor
sbb
pop
xchg
or
aaa
inc
xchg
and
and
inc
adc
cmp
push
sahf
test
ret
mov
and
test
leave
jne
sbb
test
mov
fs
cmps
ret
les
(bad)
add
loop
xchg
inc
lahf
add
inc
push
push
add
dec
aam
xor
xchg
repnz
add
add
pop
lods
mov
hlt
jo
mov
cmp
push
shr
aam
cwde
sub
adc
arpl
pop
add
ja
ret
xor
jae
lock
les
add
cmp
add
mov
or
cs
rol
mov
sti
lock
xlat
push
dec
add
push
or
loopne
push
(bad)
push
xor
sub
add
jae
and
mov
or
mov
enter
sbb
cmp
sbb
in
in
push
aam
and
lea
or
in
inc
xchg
add
repz
cdq
dec
es
add
and
or
loopne
mov
test
mov
and
or
fwait
scas
ftst
fnstenv
in
add
push
xchg
add
imul
add
rcr
pop
xchg
lods
pop
into
in
je
pop
fwait
ins
sbb
dec
add
in
mov
mov
push
sahf
outs
adc
push
imul
pop
jmp
cmps
inc
fadd
aam
call
jp
loop
add
sbb
call
ror
shr
push
int3
or
add
jmp
aad
les
add
scas
mov
loopne
ins
add
je
sub
jo
fidiv
and
mov
fst
mov
cmp
push
pop
fsub
mov
int
sub
aaa
or
xor
cmp
push
and
repnz
int3
cmovae
adc
int3
in
pop
call
test
or
pop
pop
add
and
and
(bad)
nop
shr
ror
loopne
rol
inc
call
and
jmp
push
imul
dec
push
inc
sub
sbb
fdiv
push
das
dec
(bad)
xchg
xchg
adc
test
aas
mov
mov
inc
xchg
sbb
mov
adc
rol
xchg
mov
dec
mov
mov
jo
ret
add
mov
inc
add
sar
div
and
and
dec
inc
retf
mov
cs
and
xchg
or
icebp
push
and
add
mov
dec
call
imul
jo
push
sbb
je
mov
xchg
retf
inc
pop
aas
add
mov
and
ret
imul
stos
push
add
xchg
fdiv
and
sub
push
mov
call
loope
or
mov
inc
add
xor
cmp
xor
push
xor
jnp
sub
aas
inc
pcmpeqd
xlat
cmp
xchg
jle
fild
xchg
jbe
dec
sbb
xor
test
xor
(bad)
lock
std
xor
push
adc
inc
xor
or
(bad)
icebp
leave
in
xchg
sahf
add
adc
jge
inc
push
cmp
ret
cmp
dec
add
jae
(bad)
fs
or
and
and
cdq
add
mov
xchg
dec
xchg
cmp
mov
xchg
jl
movs
jg
out
cmps
ins
fs
sub
js
push
cmp
or
pop
xchg
pusha
or
imul
mov
pop
in
dec
dec
push
inc
push
cs
or
pop
jne
or
xor
or
push
inc
in
push
push
ror
sbb
push
sub
je
sub
push
mov
jmp
push
fisttp
push
or
or
(bad)
int3
arpl
mov
push
mov
jne
mov
sub
mov
xor
or
sub
stos
cmps
add
pextrw
not
jmp
bound
sub
push
cwde
cmp
je
adc
ss
popa
pop
adc
mov
cwde
xor
mov
inc
jb
jmp
and
adc
and
test
adc
cmp
jmp
mov
adc
ret
xor
xor
leave
mov
push
adc
adc
stos
lods
test
push
aas
mov
mov
cdq
add
ror
dec
push
je
jge
jl
dec
cld
push
push
(bad)
cmp
jmp
push
pop
pop
and
aad
iret
(bad)
adc
js
or
es
retf
(bad)
movs
adc
jnp
test
test
stos
sbb
cmc
cmp
mov
add
inc
inc
pop
sbb
mov
cmp
add
sub
add
and
ins
fs
int
dec
mov
sub
jmp
fwait
pop
jecxz
xchg
dec
lea
dec
adc
add
xor
jle
sbb
pop
add
sub
and
or
out
jmp
loope
xlat
sub
lds
pop
test
aas
pushf
push
inc
pop
inc
xor
sub
in
leave
adc
dec
in
sub
test
add
add
pop
lock
adc
inc
nop
or
add
lock
add
add
test
test
in
inc
mov
sbb
add
push
inc
push
daa
mov
popf
loopne
xchg
not
push
push
inc
es
mov
inc
mov
dec
mov
push
pop
mov
add
xchg
and
pop
push
loopne
add
ss
jl
pop
retf
push
and
inc
jb
or
adc
in
push
push
xor
push
pop
enter
add
xor
add
lods
sub
and
rcl
sub
adc
aam
xor
or
add
or
and
dec
adc
mov
call
gs
mov
ja
cdq
xchg
cli
adc
pop
push
je
lock
mov
adc
and
sbb
dec
cmc
ins
xchg
scas
jmp
adc
sub
dec
clc
enter
sbb
pop
dec
icebp
(bad)
xchg
outs
test
test
and
cmp
leave
add
in
xchg
add
call
sub
xor
inc
adc
pop
or
lock
cmps
add
and
cmp
add
dec
xor
popa
imul
lods
cmp
nop
cmc
fsubr
jl
mov
adc
sbb
cmp
or
xchg
dec
sub
mov
add
pop
outs
sub
test
iret
dec
ins
popa
xor
xchg
mov
scas
sar
inc
sbb
loop
mov
das
add
mov
fidiv
popf
sar
jns
and
pop
and
xchg
mov
ror
addr16
or
dec
sahf
out
mov
xchg
sbb
cmp
or
ins
enter
or
xchg
adc
lock
ret
lea
fsub
sti
dec
leave
vmwrite
jbe
pop
xor
test
les
jbe
pusha
in
adc
fdivr
add
cmp
rcr
cmp
xor
dec
rol
or
pop
push
dec
movs
lahf
xchg
or
push
cwde
pop
xchg
adc
add
push
in
mov
dec
cmp
add
dec
lods
test
adc
repnz
push
push
mov
or
mov
in
mov
loope
jmp
jle
add
aaa
sbb
inc
xchg
ret
pop
shl
add
adc
jmp
mov
sub
mov
push
cmp
pop
adc
movs
mov
xor
test
pop
imul
hlt
and
jo
push
adc
pop
cld
das
shl
aad
sub
jg
add
dec
je
int3
fistp
jmp
enter
xchg
fist
mov
adc
inc
fistp
sub
jb
jne
lods
and
dec
jnp
sub
push
addr16
sbb
mov
and
inc
sbb
adc
(bad)
rcl
loop
es
popa
fisttp
test
inc
nop
fbstp
mov
dec
sbb
scas
fnstenv
cmp
jmp
mov
xchg
aam
ja
add
ds
test
movs
cmp
in
add
pop
leave
push
push
out
lock
jbe
test
sub
jmp
imul
lods
sub
stc
push
and
mov
sbb
push
jb
add
ja
push
sbb
add
loopne
pop
push
retf
ret
mov
adc
cmp
cmp
pop
test
dec
test
mov
jecxz
sub
sbb
inc
pop
or
cmc
mov
dec
repnz
pop
sub
jmp
jmp
and
mov
xor
push
mov
jae
int
add
movs
add
pop
shl
and
or
push
rcl
retf
mov
cmp
add
xlat
fs
mov
sahf
mov
dec
shl
sbb
adc
int
in
and
test
push
xchg
xchg
mov
jmp
inc
jmp
mov
push
mov
cmp
push
cmp
stc
dec
add
dec
lahf
pusha
inc
add
sub
adc
and
pop
add
inc
in
sbb
js
popa
mov
push
jmp
inc
sub
jmp
mov
cmp
mov
push
(bad)
cmps
dec
rol
lods
cs
arpl
loope
std
dec
sub
cmp
mov
jp
jbe
ret
imul
dec
xor
sahf
inc
jno
outs
mov
mov
add
dec
jne
adc
es
mov
jnp
jmp
ins
fs
nop
pushf
jl
push
int3
jmp
push
jo
pop
leave
enter
xchg
or
and
sbb
les
lea
sub
cwde
aam
jns
dec
sahf
dec
(bad)
cmp
push
xchg
jo
aam
or
or
sub
mov
or
test
pop
movs
push
push
mov
hlt
sub
jg
fild
xor
add
cmp
(bad)
and
ja
cmp
add
mov
sbb
inc
es
test
popf
cld
ja
jb
and
call
int3
adc
dec
xchg
mov
push
mov
fs
loopne
dec
xchg
seta
xchg
lods
call
das
xchg
pushf
mov
push
push
xchg
or
lods
cmp
test
dec
outs
retf
leave
adc
fs
mov
call
jb
(bad)
test
ja
in
daa
push
adc
jo
in
dec
cs
in
push
add
push
repnz
cwde
pop
inc
xchg
(bad)
repz
in
ja
inc
sbb
jmp
test
xor
add
daa
jo
rcl
xchg
(bad)
add
jne
fist
pop
mov
add
mov
(bad)
and
nop
in
lock
sub
jne
les
rol
lods
dec
jns
mov
adc
or
dec
xchg
add
call
in
in
and
adc
jne
mov
push
aam
cmp
rcl
test
dec
or
call
jecxz
and
ss
ror
hlt
test
sbb
call
pushf
or
jb
pop
dec
mov
cmp
sub
sbb
aam
ja
adc
mov
jne
pop
cli
scas
aam
pop
aad
push
arpl
popa
sub
add
int
rcl
loop
ins
ret
icebp
xchg
xchg
or
movs
add
add
cmp
mov
xor
or
mov
xor
daa
xchg
inc
inc
or
jns
jne
ud0
mov
nop
out
mov
cmp
inc
loopne
mov
aad
je
loope
adc
aam
call
dec
xchg
leave
(bad)
retf
dec
jmp
aad
test
xchg
xor
cmp
dec
dec
adc
dec
imul
jge
and
ret
(bad)
and
sbb
lahf
jmp
adc
push
xor
dec
sahf
xchg
xchg
add
or
cld
pop
movs
jno
push
dec
adc
adc
in
jns
xchg
(bad)
adc
dec
mov
add
sub
in
or
(bad)
sbb
add
pop
adc
inc
bound
and
dec
hlt
and
xlat
and
pusha
mov
dec
jmp
out
sbb
out
sbb
cwde
test
fild
pushf
in
inc
ret
and
mov
xchg
jo
push
pop
nop
inc
test
jbe
inc
and
fist
add
pushf
and
ror
inc
dec
and
add
js
cdq
lock
jge
pop
jl
dec
push
mov
adc
imul
cmp
ret
data16
dec
or
jnp
push
push
sub
or
sbb
loop
je
jo
in
ret
hlt
jbe
push
push
xor
fmul
clc
loopne
jmp
lea
adc
jg
sub
ret
loopne
xor
push
adc
xchg
dec
add
or
inc
cmp
icebp
cli
push
xchg
push
(bad)
push
mov
push
pop
xlat
push
pop
enter
add
imul
add
pop
inc
mov
sub
sub
jge
mov
adc
fmul
or
sbb
xchg
sbb
add
mov
push
movs
add
jmp
cmp
add
xchg
adc
enter
add
inc
movs
inc
or
cmp
mov
sub
loop
hlt
xor
mov
leave
shr
adc
sbb
cs
lock
add
cld
jl
push
jb
add
push
hlt
jl
mov
rol
push
sbb
inc
and
push
call
mov
cmp
mov
sub
js
cmp
mov
mov
xor
xor
inc
in
and
add
vcvtss2si
leave
adc
adc
pop
rcr
add
mov
xor
add
and
pop
leave
test
or
jb
pop
cwde
push
or
pop
leave
adc
add
sub
adc
or
ins
test
push
fs
mov
rcl
std
test
or
nop
fld
push
or
adc
mov
adc
mov
or
and
scas
nop
xchg
unpcklps
or
mov
nop
xchg
mov
push
pop
repnz
jmp
in
jnp
sahf
sub
fcomp
call
pop
xchg
xchg
mov
inc
sbb
ficom
loopne
rcl
push
leave
stos
xchg
aam
not
dec
inc
fsubp
sbb
adc
aam
jb
sar
dec
xor
sbb
jb
cmp
sub
pusha
adc
add
push
jmp
cmp
push
outs
pop
arpl
sub
out
fiadd
fs
pop
jmp
lock
lods
adc
cmp
add
int3
ins
lods
rol
call
and
and
lock
rcl
jnp
test
and
test
ret
sar
cmps
adc
daa
cwde
add
jecxz
inc
and
xchg
adc
sbb
jmp
daa
loopne
adc
mov
push
or
add
and
pushf
jae
cmps
mov
and
add
add
icebp
pop
push
arpl
scas
push
and
in
mov
in
ins
jnp
ret
rol
adc
neg
pop
or
jnp
fldenv
les
outs
xchg
and
das
xor
add
pop
or
mov
pusha
bound
sbb
mov
inc
sub
dec
adc
adc
nop
sub
cmp
add
rcl
enter
popf
or
adc
sar
adc
pop
xchg
adc
dec
mov
push
les
dec
push
les
jbe
(bad)
call
outs
shr
dec
pop
cmp
out
cmp
adc
ret
mov
and
cs
das
fsubr
leave
adc
in
xor
mov
(bad)
xchg
pand
jp
mov
aas
lock
test
addr16
je
or
xor
daa
pop
clc
xor
inc
xor
xor
in
xor
xor
push
mov
jle
movs
icebp
cmp
or
or
pop
test
shr
jp
ins
jp
cmp
push
sbb
pop
aaa
adc
add
sar
aaa
mov
int
leave
add
lds
pusha
pop
ror
xlat
sbb
cmp
cmp
sub
dec
sbb
cmp
xchg
dec
arpl
scas
das
aam
mov
fiadd
xor
xor
scas
inc
outs
pop
enter
cmp
add
gs
mov
sub
and
sbb
dec
popa
pushf
dec
cli
inc
fs
add
add
cmps
or
xchg
dec
push
cld
hlt
and
aad
xor
repz
sti
jne
push
inc
fbstp
push
pusha
test
sar
cwde
jle
xchg
bswap
push
dec
push
push
or
push
add
aaa
or
ret
cmp
fnsave
outs
into
add
je
push
xchg
mov
inc
je
mov
lea
shl
push
add
int3
push
test
ins
pop
push
and
or
dec
rcr
jge
sub
and
aam
test
xchg
scas
arpl
push
inc
rcr
add
dec
or
mov
lods
sub
arpl
lods
outs
and
dec
inc
aaa
xchg
or
lea
push
inc
add
mov
push
repz
sub
sub
shr
ins
adc
add
push
jbe
sahf
adc
push
mov
pop
cmp
push
cs
pop
add
adc
ja
and
xor
cld
jge
ror
or
and
push
xor
inc
inc
xor
ds
lds
enter
sbb
mov
lds
test
xchg
inc
cmp
push
push
sbb
adc
push
gs
mov
fcomp
pop
dec
js
fsub
fistp
inc
push
jle
imul
mov
jmp
push
or
pop
cmp
(bad)
push
cli
sbb
imul
mov
sbb
cmp
ins
mov
sub
cli
or
dec
jmp
cdq
aas
xor
push
mov
inc
mov
pop
loopne
or
cmp
xchg
dec
pop
adc
jge
and
inc
xor
cld
jge
or
or
sub
mov
inc
(bad)
adc
mov
mov
push
push
mov
xchg
dec
push
test
outs
mov
jne
sub
adc
xchg
inc
dec
in
cmp
fcom
jl
and
push
add
pop
je
popf
dec
adc
push
push
push
inc
mov
and
xchg
dec
xchg
inc
fild
mov
dec
xchg
lock
push
adc
jl
ss
pop
ds
push
pop
push
push
mov
rcl
adc
inc
aam
ins
or
mov
sahf
ja
mov
cmp
lods
pusha
inc
jb
(bad)
mov
sub
inc
dec
popa
add
dec
inc
cld
inc
es
cwde
jge
cmp
jge
adc
mov
pusha
or
in
mov
push
int
mov
ret
cmp
pop
xchg
cmp
cmp
jmp
das
mov
cwde
or
pop
sub
mov
cmp
xchg
mov
adc
xchg
das
sub
fild
inc
mov
sub
dec
push
push
aas
movs
in
lahf
add
ins
push
dec
leave
dec
push
push
fcom
xchg
mov
lods
or
add
xor
pop
push
xor
push
or
pop
(bad)
adc
add
cmp
dec
ja
(bad)
push
sub
add
push
mov
sub
jo
mov
fild
and
push
dec
(bad)
add
call
cmp
sbb
dec
dec
pop
cmp
jae
dec
jmp
push
push
fisttp
cmps
xor
dec
enter
pop
xor
rol
jge
jb
js
test
dec
adc
and
inc
add
and
shl
stos
shl
cmp
mov
jbe
and
je
(bad)
push
jge
mov
xchg
xor
lods
pop
loop
test
xor
add
push
mov
jl
sbb
push
sub
stc
sub
push
and
mov
and
jge
and
dec
xor
xor
push
xor
popa
fld
adc
jae
jne
cdq
pop
je
bsf
push
or
sbb
je
mov
jmp
addr16
push
cs
fwait
or
xor
xor
or
add
dec
mov
shl
mov
add
xchg
adc
push
sub
xchg
push
jne
cmp
je
sub
sbb
pop
test
and
imul
pop
cld
inc
mov
retf
pushf
loope
add
cmp
test
dec
jne
fucomi
add
test
enter
in
frstor
sbb
dec
test
call
sub
mul
sbb
ja
mov
mov
dec
xlat
mov
sbb
mov
cmp
call
dec
loopne
mov
xchg
adc
mov
not
xchg
push
inc
and
xor
aad
pop
push
push
add
div
mov
push
out
push
sbb
lahf
adc
inc
mov
cmp
dec
jp
data16
int
int3
mov
mov
int
sub
fwait
ret
cmp
mov
sbb
test
fadd
xchg
shl
pop
and
nop
mov
adc
pop
xchg
loope
fs
fld
pop
mov
mov
dec
adc
or
cmp
neg
iret
and
dec
popf
(bad)
rol
cmp
ror
mov
call
push
cs
mul
(bad)
add
pusha
adc
or
dec
or
nop
xchg
cwde
imul
and
and
fld
ins
fmul
xor
mov
push
adc
dec
xor
ins
sbb
arpl
mov
(bad)
inc
cmp
pop
mov
xchg
mov
mov
inc
jns
pop
ins
push
sub
or
mov
jecxz
mov
and
leave
inc
xor
sbb
mov
or
push
cmps
pop
jmp
js
inc
and
les
arpl
int3
inc
int
mov
inc
pop
adc
inc
add
test
es
movs
mov
imul
call
mov
add
rcl
push
sub
dec
xor
dec
cmps
sar
ficom
and
mov
xor
sub
inc
dec
es
es
dec
dec
cdq
call
dec
add
pop
loope
and
(bad)
and
mov
dec
jecxz
push
aad
ret
fsub
rdtsc
xchg
cmp
inc
add
cmp
cmp
out
pop
dec
and
xor
add
push
cli
xor
pushf
adc
mov
call
or
ror
xor
inc
mov
and
lock
mov
aaa
cmps
mov
shl
cmp
inc
jnp
push
jb
add
adc
rcr
dec
sub
add
mov
push
mov
aas
xor
sbb
stc
mov
push
enter
fsub
or
adc
add
cmc
jecxz
call
adc
mov
inc
lea
mov
inc
sub
shr
jo
mov
(bad)
xor
jns
inc
inc
pop
cdq
xchg
(bad)
lods
loopne
inc
mov
mov
cmp
jmp
test
rol
xor
test
daa
add
lods
cmp
(bad)
cwde
xor
pop
add
call
mov
or
adc
and
inc
sar
sahf
ins
mov
cmp
cmp
xor
(bad)
xor
dec
lds
mov
xor
test
jb
mov
and
adc
adc
fsubp
xor
call
inc
sti
mov
or
je
xor
je
push
sbb
pop
rcr
pop
pushf
jmp
cmc
jne
js
in
add
and
and
nop
and
fs
dec
cmp
ins
xor
sub
adc
fsub
pop
adc
xchg
push
sbb
and
dec
jo
add
mov
add
or
inc
cmp
or
adc
or
and
inc
mov
das
dec
mov
lods
dec
rcr
push
adc
cmps
in
sbb
mov
sub
xchg
stos
jmp
pop
push
push
fcom
ja
call
jo
(bad)
lock
shr
sub
and
add
leave
xchg
sub
push
sub
sti
test
pop
ins
sub
xor
sti
xor
in
inc
or
dec
loopne
inc
cmps
shl
loop
(bad)
outs
popa
in
scas
inc
repz
mov
test
and
movs
xchg
and
inc
sbb
sbb
xchg
sbb
sub
retf
enter
xor
icebp
and
jno
push
cmps
clc
and
jmp
popf
and
jle
rcr
or
jge
test
pop
addr16
das
jnp
sbb
test
scas
adc
enter
sbb
mov
fisttp
sbb
dec
mov
sub
enter
inc
xor
dec
pop
rol
adc
sbb
daa
fs
and
jnp
cmp
(bad)
pushw
enter
rcl
push
add
mov
lods
xor
mov
mov
idiv
jae
xchg
jo
ror
loopne
add
rcr
imul
ins
or
push
jecxz
or
cmps
or
hlt
shl
mov
xlat
mov
icebp
add
push
or
or
call
push
aaa
jbe
add
test
jae
mov
sub
popf
hlt
cmp
and
adc
jle
test
sub
test
add
xor
jns
cmp
and
dec
inc
dec
xor
push
cmps
sbb
adc
inc
pop
mov
bound
adc
mov
inc
sub
push
xchg
push
push
sbb
inc
push
call
mov
or
push
(bad)
add
pop
cmp
inc
sbb
lods
sbb
sub
xor
jge
pusha
fist
cwde
and
rol
sbb
in
xchg
pop
arpl
fs
ret
mov
xchg
shr
cmc
push
adc
pop
in
lea
call
es
xchg
adc
push
sbb
daa
pop
add
adc
test
push
pusha
mov
push
mov
loopne
push
pop
add
push
sbb
mov
lods
cmp
movs
in
xor
add
lahf
fwait
add
or
rcr
pop
mov
callw
add
test
aad
dec
add
add
outs
imul
mov
cdq
movs
mov
lock
adc
cmp
in
in
test
lds
jp
add
jne
push
call
sub
jge
dec
aad
scas
push
(bad)
ins
test
bound
scas
xchg
sbb
out
inc
fs
mov
data16
mov
mov
inc
or
ss
retf
pusha
jae
push
inc
add
sbb
ss
outs
call
shl
out
pop
add
add
adc
lahf
jo
jne
iret
push
pop
sbb
dec
push
aam
jo
test
adc
pop
cmp
pushf
mov
sbb
mov
sti
fisubr
xor
push
mov
fs
cmps
loopne
hlt
and
fmul
bound
jo
mov
test
aam
stos
xor
push
push
bound
dec
arpl
sub
ficomp
mov
pushf
and
sub
fwait
add
and
aam
push
icebp
and
cmp
retf
es
arpl
test
sbb
ins
push
jmp
sub
cs
adc
cs
test
pop
and
daa
fwait
pop
call
mov
add
fwait
xchg
mov
sbb
adc
inc
cmc
pop
adc
push
adc
jo
pop
or
or
das
fnstsw
(bad)
aad
dec
jo
loopne
or
scas
rcl
add
dec
and
and
clc
loope
add
adc
jae
jg
mov
or
pop
xor
daa
mov
inc
jb
pop
push
add
aad
sbb
xchg
pop
in
mov
popa
jo
sar
mov
jmp
and
dec
or
ins
cmp
push
mov
and
std
fistp
lods
pop
sub
push
lea
sub
or
ret
cld
emms
push
ror
in
gs
test
test
sbb
mov
xchg
push
xor
push
mov
test
rol
pop
jecxz
je
jmp
mov
adc
inc
outs
fcom
push
hlt
adc
inc
jb
sbb
xchg
sbb
and
adc
and
adc
adc
fnstenv
adc
add
rcl
or
adc
jb
and
inc
jb
xchg
pop
add
je
xor
sbb
pop
lods
cmp
sub
inc
es
cmp
cmp
dec
scas
in
push
jecxz
jmp
push
pop
lods
shl
pop
fsub
fadd
in
pop
sub
cmp
xor
inc
or
cmp
mov
sub
leave
mov
xor
mov
and
cmp
cmp
mov
mov
sbb
scas
xchg
push
xchg
cmps
or
inc
stc
mov
or
dec
inc
cmp
in
push
mov
gs
mov
outs
mov
aam
lods
hlt
add
rcr
aaa
movs
stos
call
cmp
bound
sbb
(bad)
int3
xor
dec
mov
xor
or
or
and
cmp
sub
inc
ins
std
xor
push
push
(bad)
rol
sbb
inc
jmp
sub
or
fisubr
inc
imul
mov
mov
xchg
add
add
or
loopne
add
add
xchg
add
rol
stos
or
mov
and
(bad)
cmps
mov
cmp
lahf
sbb
mov
sub
add
mov
pop
mov
int
xor
test
lods
add
push
popa
sub
lea
sbb
or
ja
jecxz
cmp
dec
pop
shr
push
mov
cli
int
fist
adc
mov
mov
shr
cmp
imul
mov
les
mov
pusha
cmp
jne
push
pop
test
sar
pop
add
push
cmp
jbe
sbb
push
add
fwait
in
ins
push
and
and
mov
jns
and
pop
and
movs
cmp
mov
ins
sub
inc
fimul
leave
jecxz
jb
retf
movs
add
test
pop
fcom
lods
adc
mov
or
or
inc
lock
add
lds
shr
lock
sbb
dec
sbb
add
rol
xor
xchg
sbb
shl
sub
movs
retf
xchg
and
dec
data16
into
sbb
add
test
xor
mov
push
or
rol
enter
imul
mov
sub
mov
jno
xchg
sub
sbb
fbstp
repnz
pop
psubsw
nop
inc
scas
fs
pop
push
stos
loopne
inc
inc
ds
fmul
dec
and
pop
push
stc
sbb
push
jl
or
leave
add
jb
push
les
js
mov
add
and
pop
into
or
pop
dec
in
jmp
and
mov
adc
movs
add
(bad)
xor
jne
mov
xor
mov
push
test
jl
das
pop
leave
or
or
inc
jp
push
imul
or
push
sar
in
arpl
lods
ret
inc
dec
sub
je
inc
jmp
int
and
dec
sub
xor
cmps
sbb
jb
or
fmul
add
push
cmp
pop
addr16
sub
mov
and
push
and
cwde
ins
das
or
sbb
push
and
adc
loopne
xor
xchg
inc
sbb
jne
sub
adc
adc
or
add
and
inc
outs
icebp
add
pop
(bad)
fadd
pop
test
call
push
icebp
sub
sbb
sub
jnp
rol
fist
(bad)
sbb
jae
mov
mov
xchg
and
shl
pop
adc
adc
rcl
lods
push
iret
push
sbb
xchg
adc
rol
push
std
ss
int3
or
adc
imul
test
pop
lds
cmps
retf
push
ret
ins
adc
mov
pop
in
in
in
or
in
add
dec
push
loopne
dec
push
jnp
cs
and
enter
hlt
sub
je
add
pop
adc
sbb
std
shl
cmp
jne
or
stos
xor
dec
sub
jns
push
dec
push
out
pop
sbb
cmps
jp
sahf
add
sbb
ss
shl
es
inc
sti
sub
sbb
adc
mov
push
xor
xor
rcr
fmul
pop
dec
mov
adc
lods
(bad)
iret
es
dec
xchg
inc
aad
aaa
inc
or
push
loope
sub
dec
push
mov
push
shr
and
push
push
fwait
lock
inc
add
inc
cmps
sub
push
xor
cmp
(bad)
sbb
push
mov
ins
pusha
xor
add
mov
or
push
cmps
xchg
xchg
mov
push
adc
jge
jnp
push
jb
cmp
add
mov
or
add
sbb
popa
and
arpl
aad
call
pop
lea
cmp
xor
and
cdq
rol
dec
dec
fisttp
jg
and
sbb
adc
xor
inc
fiadd
xor
dec
xor
pushf
or
push
xor
mov
mov
pop
xor
fs
int3
dec
data16
mov
add
or
inc
pusha
mov
in
nop
es
lods
test
and
inc
sahf
mov
pop
push
push
dec
cwde
or
sahf
add
adc
pop
add
mov
or
mov
jae
data16
imul
data16
mov
jmp
inc
inc
test
ins
mov
add
xor
or
out
inc
and
or
adc
lods
push
dec
fcomp
adc
dec
rol
or
fs
test
test
inc
stos
or
or
dec
test
cmp
cmc
out
mov
pop
sysexit
addr16
push
pop
add
loope
pop
jmp
dec
test
scas
and
sbb
leave
icebp
jb
ins
repnz
inc
xchg
push
enter
cmp
push
(bad)
in
jmp
mov
or
push
je
push
inc
out
pop
in
sbb
test
outs
cmp
mov
xor
outs
fnsave
inc
adc
leave
sbb
push
jb
sbb
and
enter
in
stc
dec
sbb
push
and
push
jmp
xchg
and
es
and
es
add
xor
mov
test
or
and
fs
jno
fdiv
adc
popf
sub
xor
push
cdq
sub
or
mov
fs
jne
test
icebp
jo
js
inc
daa
add
push
daa
inc
mov
scas
cs
dec
add
test
fistp
jl
inc
das
lods
sub
and
push
mov
adc
mov
cdq
loopne
or
shr
jns
leave
ret
inc
outs
retf
and
mov
popa
mov
stc
dec
add
add
ja
je
mov
sbb
add
fmul
push
test
xor
xchg
(bad)
jge
inc
and
call
xor
in
add
add
add
add
sub
lahf
int3
and
adc
add
je
adc
adc
aad
push
push
sbb
mov
arpl
or
pushw
test
imul
jns
aaa
lods
cld
or
daa
mov
rcl
inc
in
lods
jno
mov
xor
cld
and
es
dec
pop
aam
adc
shr
adc
add
and
push
xchg
adc
inc
adc
cmp
stos
and
sbb
push
and
and
mov
mov
pop
sbb
add
xor
push
sub
std
push
push
sub
sbb
out
or
inc
add
js
js
cld
mov
clc
mov
xchg
fimul
sub
jmp
pop
pop
pop
dec
les
push
pop
dec
arpl
(bad)
rcr
xchg
mov
imul
loopne
lods
addr16
movs
jmp
or
dec
adc
or
ss
inc
add
adc
add
dec
push
push
jge
repz
or
mov
or
lods
(bad)
mov
or
aad
pop
and
push
jo
sbb
dec
cdq
fst
cmp
stc
fstp
xor
pop
xchg
test
inc
sbb
fiadd
loopne
mov
popa
or
pop
call
or
or
sbb
pop
add
dec
adc
sti
or
cmp
add
ret
bound
fisttp
add
popa
xor
add
retf
je
mov
(bad)
cmp
and
pop
imul
cmps
add
xchg
loopne
xchg
inc
push
call
and
xor
jo
test
push
sti
fsubr
sbb
push
add
loopne
retf
mov
sub
or
shl
jo
push
mov
xor
inc
jp
inc
unpcklps
mov
dec
and
or
fdiv
pop
sub
xchg
das
(bad)
push
xor
scas
fsubr
push
pop
xor
adc
dec
or
in
jbe
cmp
in
mov
adc
add
mov
adc
adc
fadd
or
scas
pop
fist
push
repnz
push
adc
jne
or
jne
xor
dec
and
nop
pop
in
mov
fs
dec
cmps
fs
or
scas
or
xchg
cli
retf
aaa
push
jne
mov
sub
jne
addr16
rol
adc
les
xor
push
mov
imul
in
test
popa
cmp
std
xchg
xchg
xchg
and
sub
xchg
pop
jb
xor
leave
and
cmp
stc
xchg
add
in
pop
push
enter
leave
mov
mov
dec
mov
or
ficom
data16
push
adc
push
push
shr
lahf
mov
ss
test
sub
shr
stc
enter
clc
clc
inc
xchg
add
clc
gs
adc
add
mov
das
pop
mov
(bad)
call
add
xor
adc
sub
push
inc
test
xor
jns
add
push
aaa
pop
jb
mov
jne
and
fisubr
sbb
(bad)
push
xor
pop
imul
cmp
mov
push
sub
test
aas
int
pop
mov
dec
mov
scas
xor
xchg
adc
push
dec
clc
mov
push
test
int3
dec
push
or
ror
xor
lea
push
pop
shr
in
or
hlt
or
and
fisub
or
xlat
jmp
push
jmp
ror
and
push
sbb
mov
xchg
jb
fucomp
add
xor
mov
mov
lock
sbb
mov
nop
dec
push
movs
mov
enter
inc
jg
std
cwde
xchg
pusha
lods
jns
jo
xchg
retf
and
into
and
cmp
dec
sub
enter
sub
mov
xchg
retf
fisttp
aad
jo
js
or
dec
cs
xchg
les
inc
jle
pop
sub
aaa
add
inc
cmp
sbb
xchg
or
add
and
test
call
(bad)
stos
in
jae
in
int3
jmp
xor
dec
and
jg
push
xchg
pop
shr
dec
mov
inc
add
sub
pop
cmp
in
test
das
je
dec
outs
jecxz
iret
adc
aam
or
jb
or
jecxz
mov
mov
pop
add
retf
mov
data16
add
xchg
pop
push
adc
(bad)
dec
pop
inc
sub
pop
sub
test
mov
dec
pusha
sbb
mov
call
sahf
sbb
add
ss
push
xchg
cmp
jb
stos
in
push
inc
hlt
inc
cmp
xor
add
out
xor
adc
test
mov
addr16
ror
aam
xor
fmul
xor
xor
and
and
mov
mov
and
dec
bound
lods
sbb
jge
js
cmc
pop
adc
xchg
cld
cmp
stos
gs
test
jne
inc
ds
lock
xchg
cld
dec
cs
mov
xchg
mov
cmp
cmp
aad
sub
enter
fldcw
mov
cmovp
xchg
and
dec
push
dec
call
nop
sbb
adc
inc
call
dec
xor
loopne
iret
xchg
or
and
jmp
add
and
xor
mov
scas
adc
popf
sub
into
les
cs
xchg
or
and
mov
loopne
push
sub
mov
lds
rcl
sub
je
inc
iret
inc
pop
sbb
cmps
and
mov
mov
fcom
lods
adc
sub
int3
(bad)
sbb
pop
aam
outs
jmp
scas
dec
mov
(bad)
inc
xchg
nop
shr
fsub
lds
and
js
js
nop
inc
dec
es
fs
and
nop
inc
dec
rcl
es
and
cmp
lea
adc
xor
cmp
sub
xchg
rcl
adc
ja
sbb
jmp
(bad)
pop
sub
jecxz
mov
add
add
pop
mov
adc
adc
push
test
lea
adc
(bad)
and
cdq
shl
push
jle
cmp
jge
push
in
sbb
adc
stos
shr
rcl
daa
add
and
leave
dec
inc
inc
fstp
dec
push
test
xchg
inc
or
mov
dec
in
std
mov
lock
push
push
jo
leave
(bad)
pusha
xor
push
or
or
fldenv
pop
sub
mov
cmp
adc
pusha
cmp
cmp
adc
or
adc
pop
dec
dec
push
sub
sub
loopne
in
mov
xor
pop
adc
push
call
pushf
addr16
jno
pop
loopne
xchg
fwait
xchg
call
in
add
lock
cdq
cdq
dec
ret
dec
add
cld
test
(bad)
fmul
push
shl
nop
xlat
push
push
cdq
mov
pusha
inc
pop
enter
push
inc
xor
xor
cs
div
and
dec
and
shl
or
dec
mov
shl
sbb
ret
or
daa
jl
add
jle
inc
add
in
inc
call
dec
in
push
call
in
cmp
inc
add
pop
lock
adc
fistp
test
add
out
sahf
loopne
pop
sbb
mov
xchg
mov
xchg
adc
xchg
xor
shr
fdiv
add
sbb
cld
lods
test
daa
mov
inc
(bad)
mov
addr16
ret
jo
mov
mov
call
sub
loop
pop
cmp
(bad)
pop
lea
add
and
addr16
fisttp
jo
sub
sbb
mov
mov
test
fdivr
cmp
sbb
dec
in
ja
jg
push
cmp
xchg
sbb
leave
pushf
loope
lea
xlat
dec
inc
call
mov
push
xchg
cwde
in
outs
pusha
cmp
test
fs
es
pusha
or
push
mov
jne
xchg
loopne
add
mov
jge
adc
adc
pop
movs
pop
sbb
sub
loopne
dec
imul
in
ins
or
cdq
arpl
mov
cmp
inc
add
add
dec
mov
mov
data16
sub
mov
out
not
and
ret
aaa
test
add
mov
mov
push
and
mov
inc
in
dec
and
add
jno
lods
int3
icebp
(bad)
dec
mov
outs
jb
sub
pop
stos
mov
mov
xchg
lock
test
repnz
sub
mov
cs
lods
(bad)
cs
in
xchg
sbb
(bad)
mov
dec
push
les
mov
mov
cmps
push
movs
sar
test
sbb
jl
mov
mov
sub
jge
mov
mov
fstp
jl
mov
or
nop
and
push
call
nop
or
sbb
push
loop
jge
pop
xchg
in
std
sub
and
mov
add
pop
dec
in
and
ret
je
push
imul
add
mov
mov
add
ror
fstp
ins
in
je
xor
mov
inc
(bad)
jmp
lock
jno
xor
push
lock
(bad)
mov
or
pop
outs
in
jmp
dec
rol
jae
adc
or
pushf
nop
sbb
add
mov
and
and
lods
cmp
ret
imul
mov
retf
in
dec
popf
or
xor
fdivr
xchg
cmp
aas
mov
add
mov
sbb
les
or
or
adc
(bad)
push
sbb
or
leave
je
pop
cmps
adc
rcr
push
add
pmulhuw
test
cmpxchg
sbb
lahf
and
or
lods
test
add
fdivr
push
and
repnz
pop
jo
push
xor
or
adc
pop
sub
push
add
in
enter
(bad)
mov
and
mov
push
lods
movs
shl
xchg
xchg
pop
js
stc
add
or
ins
inc
inc
(bad)
int
lods
clc
add
pmullw
jge
adc
pop
pop
push
sbb
pusha
cmovle
push
pusha
or
inc
pop
fist
dec
leave
inc
fbld
adc
and
and
rcr
fmul
lds
dec
add
add
push
lea
jmp
dec
icebp
fxtract
inc
add
popf
shl
xchg
add
(bad)
cmp
mov
retf
adc
add
(bad)
das
adc
cmp
ret
inc
sub
sbb
mov
push
pusha
or
sub
push
cmps
mov
sub
in
mov
dec
adc
(bad)
add
aam
enter
add
dec
in
sub
add
pop
push
mov
daa
mov
xchg
adc
xchg
dec
call
pop
cmp
sbb
push
pusha
out
xchg
dec
dec
clc
push
or
inc
adc
adc
ss
inc
jg
mov
adc
aam
add
imul
enter
(bad)
push
jmp
outs
hlt
test
sbb
adc
pop
in
sub
iret
pop
inc
push
pop
push
outs
jmp
stos
fadd
sbb
sbb
sub
cmp
and
and
add
jb
push
mov
jns
loopne
add
(bad)
dec
push
add
add
mov
xor
aad
sub
jbe
lds
pop
stos
jns
not
shl
add
test
xchg
cmp
shr
sub
loopne
xor
sbb
nop
sbb
dec
pop
add
jb
or
sbb
inc
je
dec
je
sbb
push
and
jp
xchg
in
and
push
inc
fstp
cmp
mov
push
dec
mov
add
add
outs
cmp
mov
pop
push
pop
mov
push
pop
push
xor
mov
sbb
mov
adc
pop
call
push
out
sbb
mov
mov
push
das
fs
repnz
lods
sbb
shl
in
(bad)
js
and
pop
xchg
sub
or
fidiv
enter
push
ins
enter
xor
and
push
push
sub
sbb
enter
push
inc
movs
pop
out
push
dec
push
add
jl
dec
repz
jmp
jl
imul
xchg
xchg
dec
xor
xor
rcr
cmp
inc
inc
push
in
cmp
cmp
mov
adc
push
dec
call
mov
sub
pop
sub
mov
pop
in
add
inc
sahf
xchg
xchg
sbb
and
aam
imul
mov
xchg
inc
call
imul
fmul
fdivrp
add
push
sbb
lods
push
push
and
jnp
mov
and
xor
movs
aas
and
and
dec
cmp
stos
rcl
or
cmp
stos
add
and
dec
shld
mov
shr
add
sub
pop
xchg
adc
das
mov
nop
xor
push
inc
iret
xlat
nop
cld
xchg
jne
mov
sahf
loope
imul
and
inc
popf
inc
inc
lock
dec
movs
push
addr16
or
inc
pop
call
loopne
popa
test
fwait
push
(bad)
pop
mov
inc
enter
inc
sub
jo
enter
or
je
movs
aaa
test
mov
jns
pop
jp
mov
ss
test
mov
ret
add
hlt
or
push
mov
loopne
sub
dec
outs
and
lods
xor
pushf
push
xor
and
push
fimul
cmp
pop
daa
sub
or
and
pushf
push
add
add
das
cwde
add
(bad)
les
mov
push
pop
dec
movs
mov
add
or
mov
push
fdivr
or
inc
mov
(bad)
in
inc
mov
mov
mov
add
mov
arpl
jne
ficom
fldcw
cwde
sbb
mov
bound
adc
and
pop
dec
jmp
add
inc
into
and
add
sub
mov
mov
add
or
aaa
push
push
push
and
adc
lock
add
jae
mov
dec
cmp
lahf
sbb
xor
jbe
mov
fimul
rcl
cmp
hlt
xchg
push
movs
mov
adc
cwde
hlt
cwde
repnz
scas
pop
pop
aaa
lea
movs
fld
pop
iret
fwait
xchg
xor
cmp
mov
sub
je
adc
sub
adc
imul
xor
and
xor
cwde
fucompp
sbb
push
idiv
rcl
movs
leave
pop
mov
inc
mov
sub
mov
fsubr
dec
int
lds
add
ja
dec
pop
int
add
in
dec
sbb
push
retf
adc
jne
xchg
push
or
les
inc
ds
or
rcl
pusha
xor
and
adc
and
push
jmp
push
xor
repnz
mov
nop
aaa
mov
push
and
call
lock
push
pop
mov
add
or
into
lods
add
add
movs
adc
dec
xor
add
jo
jo
loope
popf
push
(bad)
nop
jo
js
push
mov
sub
ds
and
xor
sub
repz
(bad)
adc
cmp
gs
dec
push
and
and
sbb
mov
pop
call
push
dec
adc
loopne
push
xor
mov
mov
sub
ins
xlat
inc
add
lock
(bad)
mov
sbb
cmp
lods
push
push
popa
leave
dec
jecxz
xchg
and
sub
jne
push
add
pop
mov
test
inc
sbb
push
adc
jno
and
add
sbb
arpl
dec
inc
dec
scas
add
loope
xor
dec
les
pop
mov
daa
push
pop
neg
js
fst
sub
mov
pop
outs
xor
cwde
mov
xchg
mov
sub
push
mov
add
sbb
imul
inc
inc
loopne
inc
add
mov
adc
sar
cdq
fimul
jecxz
push
add
sar
gs
jge
ret
xor
inc
loope
call
ins
adc
adc
fs
cmovp
call
mov
nop
daa
nop
sbb
out
ins
adc
je
fsub
or
jmp
push
jle
push
or
hlt
or
shl
or
or
(bad)
sar
ins
mov
sbb
nop
jge
data16
sbb
xchg
aaa
cmps
xchg
leave
sar
sub
(bad)
jmp
scas
aaa
jmp
and
add
rcr
add
xchg
outs
in
enter
jne
in
add
adc
(bad)
mul
or
sub
(bad)
or
cmp
arpl
cmps
in
test
movs
sub
imul
cmovo
push
cmp
sub
in
in
add
push
add
or
cwde
cdq
xor
or
pop
int
cmp
dec
sbb
inc
int3
jo
push
add
(bad)
adc
mov
xchg
and
cmp
pop
mov
cmps
or
xchg
and
pusha
push
das
in
dec
pop
jo
xor
pusha
inc
inc
push
sbb
ficom
rcl
jecxz
cmps
or
pop
xchg
add
daa
inc
jo
es
mov
pop
and
lods
xchg
or
or
mov
mov
ror
call
sub
push
or
bnd
mov
or
dec
or
(bad)
or
ret
mov
cmp
cld
scas
in
add
lea
(bad)
aam
sub
mov
das
fcomp
jbe
dec
in
push
cmp
fwait
cs
or
fnstenv
add
pusha
push
push
lahf
mov
mov
add
sbb
(bad)
push
push
out
rcr
aam
adc
(bad)
es
jl
xchg
xor
push
mov
sti
add
mov
jmp
lahf
mov
fnstenv
inc
aaa
lds
es
loopne
sbb
mov
sti
mov
pop
fmul
push
inc
fisub
push
and
xor
dec
sti
int3
and
adc
cmp
and
ret
das
dec
xor
das
inc
or
add
pop
xchg
ret
xor
dec
mov
mov
rcr
xor
xor
test
in
inc
(bad)
xlat
mov
sbb
add
push
or
sub
push
pop
loope
sbb
xor
mov
sahf
or
dec
mov
push
sbb
mov
xchg
xchg
mov
xlat
scas
add
scas
ror
dec
rol
cmp
outs
sbb
xor
push
or
retf
push
xor
sbb
and
adc
push
sub
inc
jo
pop
mov
jae
aas
add
mov
cdq
xchg
lods
xchg
lods
stos
push
outs
pop
fbstp
xor
mov
mov
sbb
push
jmp
stc
loopne
cmp
(bad)
lea
scas
outs
sar
pop
arpl
cmp
jle
shl
retf
jmp
jg
jbe
push
jo
std
in
push
mov
call
mov
pop
sub
and
(bad)
dec
mov
mov
fisub
cmc
enter
outs
pop
push
(bad)
sbb
and
add
dec
mov
dec
jne
loope
mul
and
push
push
gs
xchg
add
xchg
xchg
mov
or
(bad)
sub
jmp
dec
inc
call
call
fdivr
sub
cmp
lock
adc
mov
cmp
fs
cmp
and
add
push
ins
jl
(bad)
jmp
inc
mov
fsubr
gs
and
pop
jle
and
lods
add
jo
xor
ds
and
xchg
test
loop
inc
scas
xchg
mov
jns
mov
dec
push
push
push
xor
or
mov
adc
aaa
mov
aas
in
adc
aaa
xor
sub
ins
sbb
imul
and
int3
idiv
int3
push
sbb
out
daa
sti
adc
jno
mov
jecxz
jno
adc
(bad)
mov
adc
xchg
cmp
dec
or
add
push
xor
pop
retf
cmp
inc
je
push
mov
add
lods
lock
ror
cmp
adc
push
inc
aas
(bad)
movs
or
or
push
and
leave
push
xchg
inc
add
cdq
pop
(bad)
in
sbb
add
or
arpl
adc
mov
enter
aam
fmul
int
pop
hlt
clc
leave
(bad)
dec
inc
or
sub
daa
xor
fistp
pop
xchg
shr
ja
xor
pop
fwait
xor
je
adc
jb
lods
mov
or
adc
call
and
add
adc
push
(bad)
idiv
ficom
add
inc
sbb
add
fucomp
xchg
(bad)
sbb
xchg
inc
mov
fwait
add
call
pop
jmp
rol
push
cmp
retf
mov
adc
sbb
inc
lahf
leave
enter
add
add
pop
add
out
fdiv
mov
int3
push
mov
xor
inc
or
and
fbld
sub
and
push
test
sub
sbb
mov
mov
in
dec
sbb
inc
push
aam
push
retf
fdiv
and
ins
xor
push
and
int
push
call
dec
aad
pop
dec
je
ret
push
out
mov
dec
int3
mov
sub
ins
mov
fld
mov
fisubr
cmp
xor
pop
pusha
push
stc
and
test
and
jo
(bad)
and
fld
add
inc
pop
movs
jb
pusha
jo
ror
imul
ror
dec
inc
fwait
int
push
cmps
fld
add
xchg
out
fsub
or
or
dec
sbb
push
push
push
mov
mov
or
jo
add
add
sub
popa
add
pushf
dec
push
and
pushf
dec
or
popa
mov
pop
clc
lea
xor
sub
pop
pusha
jns
push
movs
xor
or
sbb
add
push
adc
sub
cdq
or
sbb
sub
push
add
fild
pop
mov
push
jo
pusha
sbb
dec
jge
jmp
sub
mov
rol
mov
inc
dec
dec
scas
adc
jle
inc
or
or
push
or
pusha
pusha
pop
pusha
xchg
xor
xor
xor
add
lods
ret
sbb
sbb
stos
aaa
jo
jo
je
dec
or
and
xor
xchg
fwait
ds
jge
or
sbb
(bad)
loop
aas
xchg
xor
push
sbb
imul
xor
es
jo
inc
jb
xchg
sub
pop
and
sbb
enter
and
add
and
and
xor
sbb
mov
pop
xchg
stos
mov
push
pop
inc
dec
pusha
adc
cwde
adc
ins
(bad)
jecxz
arpl
bound
enter
add
cmp
jb
and
adc
inc
sahf
sub
ins
ins
sub
mov
rcl
push
mov
add
mov
sbb
sub
cmp
cwde
pop
dec
gs
sub
stos
mov
xchg
sub
cvttps2pi
and
and
and
lea
mov
stos
lock
pop
pop
add
and
push
or
test
and
pusha
xor
xor
or
and
xor
in
sub
xor
sub
inc
dec
xor
push
or
xor
sbb
push
dec
xor
push
cmp
je
jns
out
and
mov
push
sub
and
mov
je
sub
cmp
enter
leave
cld
bound
jg
lahf
add
jge
je
lea
pop
mov
adc
inc
add
jno
add
jp
push
out
xchg
pop
enter
cmp
aad
cmp
stos
ror
fidivr
push
push
inc
popa
cmp
mov
je
xor
dec
push
push
cmp
shl
cmp
rcr
sahf
stos
leave
cmp
fs
(bad)
cmp
inc
mov
push
fadd
inc
mov
mov
mov
mov
(bad)
shl
sbb
push
sbb
fs
mov
jnp
fs
test
test
int
dec
mov
leave
cmps
test
xchg
inc
pusha
lea
and
push
inc
pop
enter
je
sub
add
mov
fs
aas
imul
leave
je
dec
dec
shr
ins
les
mov
jg
jns
pop
dec
push
pop
cmp
sti
ins
aam
jg
leave
push
inc
jmp
xchg
xchg
pop
lds
xchg
inc
inc
add
or
je
mov
and
and
pop
lods
or
mov
out
movs
inc
push
outs
sbb
add
lock
xchg
cmp
mov
dec
and
fs
xor
xchg
dec
lock
enter
fs
jecxz
enter
fs
mov
inc
push
pop
push
cdq
mov
and
xchg
aam
dec
and
dec
cld
adc
dec
mov
add
sbb
loopne
or
cmp
loope
(bad)
dec
aaa
dec
inc
mov
in
retf
push
xor
sbb
sub
dec
movs
or
les
push
lea
or
fs
push
in
and
leave
adc
pop
adc
push
adc
adc
call
or
adc
adc
adc
and
add
mov
in
sbb
pop
leave
mov
mov
clc
and
leave
adc
mov
jl
adc
adc
cld
pop
ins
jb
or
inc
pop
in
in
add
pop
dec
push
nop
mov
or
or
pusha
add
nop
mov
lock
or
xlat
mov
stc
test
add
ret
cmp
mov
push
add
mov
sub
or
fs
cs
movs
daa
add
int
inc
leave
xchg
ins
aam
mov
and
test
gs
push
and
cmp
push
adc
mov
inc
js
jno
data16
inc
push
sbb
iret
dec
push
and
test
push
cmp
sbb
inc
inc
or
sub
sub
lods
sub
push
mov
pop
mov
enter
mov
enter
adc
add
nop
pop
cmp
mov
mov
enter
shl
xchg
pusha
push
je
loope
lods
adc
and
or
push
ds
mov
jb
and
jmp
add
sar
rcl
push
ins
mov
push
stos
sti
sub
shr
ins
push
lods
outs
sbb
ins
add
inc
and
aad
cdq
or
aam
test
outs
xchg
add
fsubr
push
or
data16
bound
mov
xchg
call
jo
mov
inc
popa
enter
jmp
(bad)
aad
and
in
test
fs
outs
lods
sar
and
dec
ret
and
ins
popa
pop
or
inc
or
mov
je
jmp
xchg
imul
lds
and
mov
popa
rol
jbe
sahf
repz
or
sub
test
scas
enter
and
lahf
cmp
pop
movs
scas
icebp
mov
cmp
je
lea
aad
cmc
fs
test
inc
fs
cdq
or
sub
and
outs
imul
(bad)
or
in
adc
jo
(bad)
dec
sub
jmp
call
push
or
ror
and
test
pop
pushf
or
retf
test
sub
sti
jne
sbb
inc
je
or
add
xchg
xor
fisubr
mov
dec
ins
mov
and
call
leave
dec
mov
push
cmp
jne
cmp
pop
adc
mov
mov
push
sbb
push
dec
adc
mov
or
in
add
xchg
movs
int
sti
mov
dec
or
ret
rol
ja
int
add
mov
and
dec
inc
dec
fdivr
push
daa
cmova
inc
fs
add
dec
mov
add
jno
and
ret
icebp
adc
nop
jmp
xchg
inc
jns
lods
nop
popa
test
in
(bad)
fsubr
xchg
pop
lock
clc
sbb
inc
sbb
sub
sub
pop
fnstcw
(bad)
clc
pusha
imul
nop
sbb
lahf
sub
lods
cmc
inc
ret
imul
pop
add
fwait
or
jl
rcr
xor
mov
call
add
xchg
in
push
push
sbb
in
jmp
adc
push
mov
ret
sub
dec
ret
shl
inc
arpl
jo
push
or
popa
inc
(bad)
ins
push
or
in
ins
push
loopne
push
add
ins
push
sub
loopne
adc
ins
aas
sbb
mov
xchg
int
xchg
mov
lea
push
(bad)
movntq
out
inc
add
add
inc
mov
pushf
fcom
xchg
or
or
xchg
cmp
gs
add
ret
retf
movs
leave
mov
dec
or
inc
call
dec
add
lds
adc
cmp
loopne
leave
and
loopne
or
call
test
add
bound
mov
lods
es
add
aas
mov
test
and
ret
dec
pop
enter
into
fisub
push
or
call
stos
push
adc
push
in
jns
inc
(bad)
adc
mov
sbb
mov
and
push
adc
dec
mov
out
mov
mov
or
in
test
push
xchg
je
pushf
pop
xchg
dec
or
push
sbb
stc
call
xchg
shl
mov
pop
cdq
jmp
test
aam
xchg
inc
div
adc
cwde
xor
pop
ins
fmul
inc
out
push
stos
and
xchg
and
add
xchg
lods
pop
call
cs
in
in
mov
mov
dec
fld
inc
xor
inc
mov
and
adc
call
xchg
add
xor
mov
fs
jg
push
add
jg
test
imul
fcom
nop
mov
int3
xlat
xor
dec
enter
add
icebp
fadd
test
mov
jb
rol
inc
push
xchg
sbb
mov
mov
mov
ret
mov
(bad)
loop
push
mov
or
push
add
pop
push
dec
pusha
jl
mov
cld
dec
or
jecxz
adc
int
fiadd
jno
bound
xor
and
inc
adc
mov
pop
les
mov
fs
pushf
jge
jo
divps
ds
in
ret
(bad)
in
mov
fwait
lock
add
push
mov
mov
loopne
loope
inc
mov
sub
or
jg
inc
sbb
pop
(bad)
ret
ret
pusha
inc
pop
lock
xchg
js
sub
xchg
pop
ins
mov
cmp
arpl
push
jo
stos
loop
cmp
imul
or
or
pop
push
push
pop
mov
push
neg
je
call
sar
push
cmp
gs
mov
sbb
shr
xor
pop
enter
icebp
mov
and
xchg
xchg
adc
sbb
nop
nop
sub
and
xchg
(bad)
sub
pusha
test
pop
test
push
or
push
sbb
mov
push
nop
jo
push
mov
mov
(bad)
fs
clc
push
mov
jo
mov
dec
inc
pop
push
enter
outs
fadd
test
enter
xchg
mov
add
outs
in
cmp
pusha
nop
pusha
dec
xchg
xchg
push
in
enter
in
add
rol
fdivr
pop
and
or
nop
or
ss
scas
mov
add
or
nop
mov
adc
and
in
xor
pop
js
rcr
pop
pop
cmp
xchg
pop
lock
pop
outs
jb
adc
pop
jmp
popf
and
inc
dec
pop
in
add
dec
or
push
add
rcr
cmp
push
or
or
and
push
addr16
sub
add
and
leave
and
push
aam
popf
imul
jmp
fsub
sub
maxps
cld
je
xchg
push
sub
arpl
mov
jle
adc
fwait
test
in
ins
test
xor
mov
popf
sub
add
mov
xor
leave
xchg
dec
add
in
cli
test
mov
cmp
xor
xor
xor
mov
mov
jbe
cmp
retf
leave
sub
mov
adc
test
or
add
xchg
aam
into
(bad)
jmp
scas
xchg
push
cld
add
nop
fwait
jns
add
sbb
dec
ins
cmp
enter
or
push
xchg
cli
and
in
retf
pop
add
jecxz
inc
xor
pop
cwde
(bad)
xor
stc
xor
cmp
dec
and
jl
dec
popf
pop
push
xchg
xor
push
adc
mov
xchg
ds
mov
add
adc
and
(bad)
inc
xor
push
jb
cmp
add
add
dec
jbe
mov
lahf
fbstp
inc
cmps
inc
lods
inc
cmp
sub
fst
sub
xor
fld
push
rcl
mov
inc
fadd
add
push
aas
xor
xor
push
pop
pop
jmp
add
jno
sub
sbb
xchg
daa
mov
pushf
and
sub
or
in
ror
test
in
movs
or
or
inc
nop
mov
add
or
or
add
mov
pop
add
sbb
sbb
add
cmc
sbb
push
mov
cmp
nop
cmp
mov
jle
sub
sbb
jnp
movs
dec
shl
mov
in
movs
adc
adc
add
cmp
shl
rcl
inc
fwait
jl
scas
mov
movups
mov
lods
xchg
pop
shl
mov
mov
jbe
(bad)
js
adc
loopne
sub
xor
sub
adc
sbb
ins
inc
push
mov
push
es
jbe
or
or
pushf
fs
dec
adc
sbb
add
jnp
popa
es
in
adc
inc
nop
dec
sbb
jb
cld
add
and
xor
in
popf
cmp
or
lods
repnz
or
mov
jne
push
jmp
push
jbe
sbb
adc
out
push
popf
pusha
aad
sbb
push
mov
xor
icebp
je
(bad)
or
retf
shl
test
add
adc
add
cs
pushf
dec
mov
in
nop
leave
leave
leave
ins
unpcklps
sbb
out
cmc
and
mov
das
cmp
mov
outs
push
mov
or
or
fisttp
ret
shl
sbb
icebp
fidivr
inc
jo
dec
idiv
push
loopne
cmp
mov
jne
(bad)
(bad)
or
sbb
adc
jne
jae
or
fcomp
je
add
popa
mov
jno
mov
cmp
or
sub
add
add
pop
xor
push
add
mov
inc
adc
xchg
jns
sub
xor
or
es
mov
xchg
nop
int
sbb
in
add
sbb
movd
in
mov
int3
xor
nop
mov
adc
adc
nop
jnp
dec
scas
dec
add
enter
xchg
lea
sub
pop
or
call
and
xchg
sub
xor
mov
or
inc
push
and
and
cmp
inc
inc
pop
dec
repnz
dec
jge
cmp
and
dec
push
ins
ins
pop
outs
outs
mov
jno
loope
dec
cs
jne
rol
ret
js
mov
imul
sub
sbb
mov
xor
jg
movzx
call
inc
ficom
movs
fs
es
cmps
test
pushf
mov
fnstenv
fadd
mov
pop
push
sub
and
int3
xor
mov
lock
xor
xor
adc
push
sbb
sbb
mov
in
inc
hlt
mov
test
sbb
jecxz
mov
adc
in
imul
xor
pop
imul
mov
or
and
je
adc
xor
fs
fisubr
outs
outs
jo
fs
dec
jno
jae
xchg
dec
es
js
in
scas
imul
sbb
loope
xchg
sbb
xlat
xor
cwde
cmp
pushf
pop
cmp
movs
inc
push
in
sbb
in
lods
in
outs
stos
sub
mov
add
ror
sbb
or
sub
mov
mov
call
sahf
ror
adc
adc
test
xor
push
xchg
sbb
fwait
mov
and
jmp
cmp
jo
or
sti
sbb
add
adc
xor
or
dec
push
push
cmp
mov
xchg
fwait
adc
or
mov
or
xor
and
ror
in
aaa
lock
ret
adc
mov
test
pop
pop
add
mov
repz
or
sub
xor
inc
dec
or
shl
adc
mov
push
pop
adc
rcr
ins
add
outs
jo
dec
shl
jb
je
jne
vhaddps
shr
or
and
mov
dec
fdiv
movs
or
fwait
(bad)
mov
or
sti
call
xor
pop
scas
mov
aaa
add
add
jnp
adc
adc
js
imul
dec
or
pop
and
or
mov
mov
loope
fisub
and
lds
sbb
push
sub
sbb
inc
add
lods
pop
pop
sub
sbb
sub
fadd
std
mov
stos
add
inc
adc
cs
(bad)
shl
push
mov
imul
pavgb
out
sahf
cmp
int
push
cld
gs
retf
dec
mov
mov
add
lods
(bad)
xchg
int3
pop
repz
push
or
sub
out
dec
adc
pop
adc
mov
int
movs
fisttp
inc
popf
mov
rcl
int3
dec
loopne
xchg
in
or
arpl
gs
fcom
and
les
and
adc
ins
popa
in
sbb
xor
sub
sub
lock
pop
call
push
push
fimul
sbb
stos
cmps
xor
loopne
adc
cmp
ss
mov
movs
push
xchg
add
add
imul
xor
mov
movs
cmc
or
jne
mov
jmp
jmp
mov
dec
sahf
aam
sbb
cdq
add
or
dec
sub
push
sub
dec
push
adc
xor
in
xchg
and
jns
(bad)
inc
mov
in
push
and
ror
lock
sbb
push
adc
test
mov
loope
xor
outs
cmps
push
adc
push
mov
or
sub
imul
xor
pushf
push
emms
add
xchg
or
add
dec
dec
je
add
clc
add
ficom
dec
jne
stos
push
cmp
fcomp
les
mov
fsubr
scas
jns
adc
in
sub
or
mov
mov
rol
add
jle
sub
cmps
push
xchg
js
adc
add
nop
lods
or
push
sub
pop
push
inc
push
and
test
mov
adc
lods
jl
sbb
cmp
test
cwde
dec
int
pop
jmp
jne
cmp
cs
jle
les
add
(bad)
jle
xchg
dec
mov
sti
jle
cmc
mov
mov
outs
dec
js
clc
jle
or
jne
push
push
xor
sbb
imul
and
cmp
loopne
add
jno
or
cwde
mov
cmp
dec
or
rol
adc
sub
and
cmc
fs
dec
adc
shr
or
sub
inc
ror
add
test
sar
loope
or
cmps
(bad)
leave
dec
ret
push
sar
inc
pop
cmp
and
imul
and
push
push
push
loopne
pop
adc
inc
add
mov
xchg
and
mov
add
div
(bad)
adc
jno
push
enter
addr16
fs
dec
icebp
sbb
add
sub
scas
jl
pop
in
je
cmp
enter
push
aaa
aad
loope
mov
call
lock
add
leave
cmps
push
fwait
mov
loopne
(bad)
scas
xchg
call
ja
sub
add
out
js
dec
cld
mov
sbb
or
xchg
push
inc
stc
lock
add
cmp
add
adc
(bad)
jo
dec
push
dec
xor
loopne
lock
mov
xchg
pop
enter
xchg
xor
push
imul
or
xor
rol
imul
jo
add
movs
test
xor
add
loope
add
add
sub
jmp
aas
and
popf
in
(bad)
ror
xchg
or
ret
inc
cmp
mov
retf
and
fdivr
mov
or
icebp
push
je
add
inc
or
das
iret
add
cld
stos
sbb
add
fcomp
scas
adc
push
add
push
or
pusha
les
push
stos
push
hlt
or
xor
sub
js
mov
fdivr
int
and
rol
pop
daa
dec
ins
cmp
pop
inc
outs
stc
or
fcmovnu
vfmaddsubps
pop
xchg
mov
cmps
jnp
pop
mov
fdiv
and
xor
pop
xor
xchg
jno
mov
loope
cmp
add
sub
in
mov
mov
xchg
cmp
pop
adc
cdq
add
add
xor
adc
mov
add
sbb
pusha
mov
dec
cmp
test
push
mov
loope
jo
sbb
mov
lock
fld
push
or
or
xchg
xor
adc
(bad)
dec
push
or
add
dec
add
push
cmp
sahf
into
sbb
sbb
adc
lahf
or
leave
out
mov
xor
cmps
addr16
xchg
adc
sub
out
pusha
mov
push
adc
xor
rol
adc
jle
and
sbb
into
pushf
lds
or
inc
push
pop
js
imul
sub
add
shl
and
in
rol
sbb
jg
mov
xor
rol
jl
xchg
xchg
cs
dec
xor
push
in
sub
jecxz
ret
mov
retf
and
adc
and
(bad)
xor
enter
mov
xchg
push
mov
push
int3
and
lea
sub
and
xchg
call
call
jns
sbb
out
push
fwait
add
add
rol
call
add
and
sar
adc
mov
pop
push
push
dec
add
pop
mov
xor
rol
push
sbb
sbb
adc
pop
test
add
sbb
cwde
test
sbb
fs
sub
shl
push
sub
xchg
test
sbb
inc
sub
xchg
jmp
dec
scas
or
(bad)
adc
mul
inc
xor
push
dec
test
pop
push
sub
jmp
sub
out
inc
in
cmc
cmp
add
cmp
adc
lods
in
push
adc
iret
adc
xor
loopne
sbb
inc
inc
sub
adc
cs
push
inc
mov
adc
lods
ror
pop
and
add
mov
stc
push
inc
mov
adc
cmp
pushf
aam
(bad)
imul
pushf
push
jecxz
or
and
rcl
adc
movs
push
push
adc
ins
jo
xchg
mov
jns
call
retf
js
mov
adc
pop
das
or
xor
or
xor
push
or
les
rol
adc
pop
and
push
fnstsw
dec
pop
xchg
test
sub
push
shl
or
xor
retf
or
pop
xor
pop
xchg
xchg
push
mov
retf
rcr
repnz
add
pop
sbb
imul
jo
fdiv
out
(bad)
scas
idiv
(bad)
rcl
rol
outs
retf
sub
shr
fyl2xp1
dec
add
pop
adc
add
jb
adc
or
adc
adc
mov
mov
out
jb
test
sti
dec
int3
and
movs
adc
xchg
or
dec
xchg
or
mov
bound
je
dec
push
xchg
mov
in
cmp
repz
push
pop
inc
mov
push
sbb
jecxz
add
push
jecxz
inc
and
movs
push
shr
adc
adc
add
pop
push
xor
in
ds
in
call
nop
int3
jmp
and
mov
xchg
sbb
and
in
and
enter
and
sbb
out
add
in
push
jns
mov
aam
nop
and
icebp
mov
cmp
jl
in
push
cmc
test
and
cmp
xchg
or
dec
call
jb
enter
xchg
cld
test
enter
pusha
(bad)
push
in
inc
jb
cmp
add
xchg
inc
xchg
lock
jb
add
add
enter
mov
jo
xchg
sbb
and
pop
and
enter
and
sbb
or
or
dec
push
jns
mov
enter
cmp
or
xchg
push
jo
in
push
punpcklbw
mov
nop
and
push
cmp
xchg
or
dec
hlt
mov
and
enter
and
sbb
push
mov
jb
pop
fs
and
pop
dec
jle
and
sbb
jg
sbb
xchg
sbb
cld
mov
add
in
jns
xchg
and
jnp
sbb
and
jl
inc
jb
js
pusha
and
sbb
jle
jg
xchg
sbb
xor
sbb
and
fld
or
inc
push
lock
inc
push
fcomp
and
inc
les
jb
xchg
movs
inc
mov
jo
xchg
sbb
and
inc
and
enter
and
sbb
dec
sbb
movs
call
sbb
leave
and
or
or
inc
jb
xchg
inc
or
xchg
and
jns
in
lods
seto
cmp
rcl
mov
inc
mov
adc
push
and
adc
adc
or
in
lods
sbb
and
pop
aam
inc
jb
xchg
mov
nop
xchg
and
ins
sbb
sbb
inc
jb
and
add
call
push
cmp
and
and
je
push
cmp
dec
push
and
and
sbb
cld
stos
xchg
and
loopne
xchg
sbb
and
sub
inc
jb
mov
mov
sbb
xor
xor
dec
ss
and
aaa
or
cmp
ins
in
in
push
outs
int3
ror
shl
ror
dec
jo
inc
mov
nop
pop
aad
and
sub
(bad)
in
data16
in
test
sbb
and
sar
xchg
sbb
and
cwde
and
enter
and
sbb
call
fs
dec
leave
and
popf
sub
adc
cld
cmps
cmp
dec
push
cld
call
and
(bad)
mov
cmp
or
add
inc
jb
push
sbb
popa
xor
in
sbb
adc
clc
cmps
in
and
(bad)
loopne
cmp
mov
leave
test
mov
nop
and
pop
push
cmp
and
in
sub
and
hlt
movs
and
sbb
shr
ror
xchg
sbb
(bad)
ror
and
rol
aam
and
sbb
aad
cmp
mov
or
(bad)
pop
push
cmp
and
in
xor
inc
mov
nop
sbb
add
inc
push
leave
add
hlt
movs
add
fsub
mov
sub
sub
mov
je
in
push
das
pop
xor
push
sub
cmp
xchg
or
dec
lock
enter
xchg
inc
xchg
sbb
xchg
and
push
cmp
dec
repnz
and
in
dec
or
adc
cld
mov
dec
loopne
and
in
enter
in
lods
dec
nop
dec
push
cmp
and
in
push
cmp
inc
mov
push
sbb
repnz
push
cmp
call
or
int3
push
sbb
and
push
mov
and
pop
ins
pop
inc
jb
xchg
pop
lods
cmp
sbb
and
jb
or
nop
and
in
mov
mov
mov
mov
dec
push
cmp
cmp
mov
cmp
dec
push
mov
mov
hlt
lahf
mov
and
jb
mov
enter
and
sbb
mov
sbb
xor
adc
jb
hlt
sahf
ret
inc
mov
ret
mov
adc
cwde
adc
enter
pusha
xchg
and
inc
adc
sbb
and
adc
adc
hlt
popf
xchg
inc
mov
sbb
dec
push
cmp
and
sbb
xchg
inc
mov
add
dec
push
sbb
jb
xchg
lods
pop
add
and
and
and
fwait
xchg
inc
mov
and
nop
es
nop
and
daa
push
sub
xchg
inc
mov
sub
push
repnz
push
sub
call
fsubr
mov
nop
shr
push
cmp
and
in
outs
pusha
xchg
inc
mov
outs
inc
jo
dec
push
cmp
jno
xor
and
jb
cdq
jae
leave
and
je
sbb
and
jne
jbe
jb
xchg
jl
xchg
and
jns
sbb
and
jp
inc
jb
add
loopne
xchg
inc
mov
jge
dec
push
cmp
cmp
cmp
inc
mov
and
in
push
or
inc
xor
and
xchg
test
xchg
and
jb
mov
enter
and
sbb
mov
in
sbb
sbb
clc
xchg
in
and
mov
lea
xchg
inc
mov
push
(bad)
jl
mov
nop
and
xor
cmp
xchg
or
dec
hlt
xchg
xchg
and
enter
and
sbb
xchg
mov
jo
push
leave
and
cdq
xor
adc
call
push
pushf
int3
popf
mov
nop
and
xchg
inc
lahf
and
mov
pop
mov
xchg
mov
dec
push
cmp
xchg
rcl
in
and
shr
mov
and
mov
inc
jb
xchg
push
mov
sbb
and
and
xchg
mov
(bad)
mov
inc
mov
nop
mov
cmp
and
xchg
push
xchg
jno
call
pop
js
xor
jge
mov
les
hlt
jle
xchg
es
sub
mov
pop
dec
sbb
jno
rcl
(bad)
xor
push
popf
lds
push
fisttp
scas
sub
sar
sub
aam
push
stos
add
sub
add
into
pop
add
popa
or
rcl
adc
(bad)
sar
imul
or
sti
rol
push
add
fadd
pop
(bad)
leave
inc
add
jle
sub
dec
test
xor
sub
lock
addr16
inc
cmp
jl
inc
or
movups
add
rcr
not
inc
(bad)
and
in
xor
aam
int3
(bad)
push
add
loopne
repz
mov
jne
push
ror
sub
les
and
jne
jp
push
add
js
xor
and
add
push
dec
iret
xchg
and
push
sbb
or
add
add
and
and
jl
nop
pop
shl
js
mov
push
push
lock
into
mov
jns
add
ret
and
push
adc
mov
dec
in
and
(bad)
push
ja
inc
xchg
adc
add
or
hlt
inc
call
or
rcr
add
push
lods
cmp
(bad)
pop
ret
mov
fst
mov
jb
or
cmp
inc
xchg
cmp
std
in
xchg
or
test
js
push
jbe
mov
(bad)
mov
test
xlat
and
and
mov
xor
xor
mov
nop
xor
clc
cmp
enter
sub
jb
shl
jne
dec
inc
and
add
lds
adc
fwait
jbe
and
sub
xchg
sub
xor
sbb
dec
fiadd
inc
dec
adc
add
push
pusha
imul
jle
data16
leave
xor
jmp
call
push
and
add
mov
(bad)
xor
pop
add
xor
cs
ror
out
jecxz
pushf
mov
mov
fsubrp
mov
mov
ds
push
mov
cmp
mov
in
dec
rcr
in
and
sbb
xor
sub
mov
push
in
movntps
add
(bad)
fcmovbe
add
push
pop
sbb
push
cmp
enter
inc
and
rol
sub
or
dec
loope
dec
sbb
(bad)
fadd
icebp
xor
(bad)
loop
ret
or
or
pop
sbb
ds
push
inc
idiv
pop
dec
sbb
xor
push
(bad)
and
ss
mov
sahf
pop
and
sbb
cmp
cmp
fidiv
pop
mov
fadd
add
and
cmps
leave
pop
je
push
scas
je
pop
add
ins
xor
cmps
pop
add
mov
shl
call
push
jecxz
add
xor
in
pusha
push
adc
xor
xchg
xor
fs
jp
sbb
push
add
xchg
or
imul
sbb
sbb
xchg
cmp
add
(bad)
ror
or
nop
loope
add
and
aaa
shl
je
adc
sbb
add
jns
pop
adc
fxch
xchg
(bad)
sub
xchg
mov
mov
in
jmp
mov
stos
sub
jno
inc
clc
sub
sbb
or
adc
xor
jg
sub
sbb
pop
jnp
cmp
pop
xlat
fmul
hlt
add
cmp
das
(bad)
xor
lock
js
add
pop
mov
pop
mov
mov
mov
add
add
mov
add
or
loopne
jno
fldcw
inc
sub
or
cmc
pop
cmc
xor
mov
sub
or
xchg
hlt
or
jb
or
or
adc
mov
mov
xchg
mov
mov
jg
retf
fld
jne
mov
inc
clc
mov
out
and
retf
pop
lahf
adc
ret
or
rcl
adc
sub
dec
jne
and
jo
sbb
adc
inc
mov
pop
aam
push
fcom
or
fstp
ss
shr
call
sub
pop
call
inc
jl
adc
loopne
mov
rcl
mov
push
sbb
lods
xchg
push
fnstenv
sub
fidiv
pop
enter
push
push
dec
cmp
sar
cmp
adc
pop
aam
ret
ret
sub
cmp
out
ror
adc
push
add
push
sub
retf
es
das
dec
sbb
sub
sbb
push
sub
or
cmp
imul
fidivr
jae
jle
cmps
mov
sar
fs
pushf
pop
push
xchg
cmp
and
mov
fadd
sub
add
pop
pusha
add
ins
test
add
(bad)
ficom
jl
ret
fs
push
xor
hlt
add
jo
add
lods
nop
pop
clc
test
scas
or
sbb
(bad)
data16
sbb
and
push
add
leave
les
pop
stos
dec
loop
movs
mov
ret
es
xor
pop
mov
add
ret
add
dec
push
lock
out
ficomp
dec
or
inc
mov
loopne
inc
pop
inc
and
imul
jne
daa
pop
adc
jne
addr16
sbb
shr
outs
dec
push
ret
cmp
dec
into
jae
and
push
pop
int3
pop
dec
or
sbb
iret
aaa
dec
mov
dec
leave
jl
in
rcl
mov
ret
mov
in
or
je
xor
mov
jl
or
outs
imul
loopne
add
je
jecxz
adc
pop
xchg
lock
dec
nop
into
mov
nop
push
mov
dec
mov
bound
lods
add
pop
push
sub
rol
fstp
rcl
mov
jle
rcl
sbb
xor
push
push
push
arpl
dec
add
inc
inc
cmp
fwait
sbb
fs
push
and
adc
fs
push
adc
inc
push
fs
add
enter
cld
add
hlt
and
or
mov
adc
popa
pop
jl
sbb
mov
or
inc
or
jb
test
or
sbb
inc
xchg
add
or
dec
cmp
rol
add
xlat
push
dec
mov
sbb
push
xor
and
mov
inc
push
in
or
and
push
adc
xor
pop
sbb
jmp
add
xor
cmp
push
push
inc
push
inc
xchg
mov
sub
movs
jge
aad
adc
push
mov
add
loop
sub
mov
xchg
sbb
aaa
push
xchg
push
inc
or
adc
pop
jnp
ds
inc
adc
mov
lods
and
jb
pop
or
add
jb
adc
xor
fadd
cmp
cmp
cmp
arpl
inc
loope
mov
jge
dec
aaa
dec
sbb
sbb
add
arpl
jecxz
xchg
arpl
es
jmp
mov
sbb
add
sbb
jnp
imul
lods
dec
stc
mov
cmp
push
nop
sub
add
mov
inc
cmps
test
test
out
mov
aam
push
test
or
add
sar
cmp
add
adc
xor
add
scas
add
test
jb
pop
add
mov
push
repnz
jb
add
mov
xor
pop
xor
call
(bad)
fild
js
fcomp
xchg
or
cmps
retf
scas
pop
and
mov
jo
sub
sbb
cmp
mov
mov
xor
sbb
mov
test
adc
imul
mov
add
add
fisub
or
adc
cdq
adc
lahf
loopne
push
jnp
adc
mov
xchg
push
cmp
or
mov
cmp
outs
adc
sbb
or
sbb
sahf
inc
imul
push
fiadd
or
xor
in
mov
jg
pop
mov
xor
mov
sub
nop
mov
pop
pop
pop
pop
bound
cmp
push
add
cwde
cmp
sub
lds
push
popa
adc
mov
inc
add
mov
xor
add
sbb
and
cmp
in
xor
inc
add
lods
sbb
mov
in
cdq
sbb
mov
and
leave
sub
mov
je
or
adc
inc
enter
es
aam
arpl
cmps
pop
leave
pop
inc
(bad)
dec
call
mov
or
pop
lock
xor
movs
xor
sub
stos
in
sti
leave
xor
or
xor
sub
xor
sbb
mov
push
inc
add
sbb
out
outs
cmp
lods
and
in
(bad)
packuswb
jno
inc
jp
cmp
dec
push
adc
shr
(bad)
cmc
mov
pop
cmp
jle
(bad)
fild
lea
push
mov
adc
mov
cmp
out
dec
add
add
out
cli
inc
cmp
pop
(bad)
mov
inc
aas
sub
ins
das
psrld
ret
aam
ret
adc
push
push
mov
xor
hlt
mov
inc
repz
cmp
jl
push
mul
sub
js
jmp
dec
fld
sub
xchg
inc
add
enter
sahf
loopne
pop
add
or
or
add
push
(bad)
mov
and
nop
adc
cmps
dec
jmp
add
mov
adc
ins
fs
xor
pop
pop
xchg
lods
mov
out
pop
imul
adc
in
inc
sub
mov
pusha
(bad)
cld
cmps
or
cmps
xor
jmp
aad
idiv
push
sub
adc
dec
adc
pop
pop
and
push
sbb
sbb
add
xchg
jecxz
push
cli
mov
clc
push
and
aam
sub
jp
sbb
leave
pop
mov
loope
fs
inc
clc
test
movs
aam
xor
push
cmp
add
add
cmp
push
xor
push
sub
clc
pop
je
push
dec
out
dec
add
js
pop
sbb
or
jbe
and
jnp
cmc
jmp
movzx
clc
or
jg
fistp
clc
push
sbb
sbb
movs
mov
in
inc
cmp
dec
clc
rcl
and
outs
jl
mov
jmp
ds
or
jmp
and
mov
mov
cld
scas
pop
xor
jne
xchg
ret
push
imul
sub
ret
sbb
imul
and
add
adc
mov
(bad)
jnp
inc
into
push
mov
test
stc
shr
add
les
add
dec
sbb
jno
shl
loop
mov
inc
adc
movs
cmps
jo
pusha
(bad)
movs
inc
push
pop
pusha
jecxz
push
pop
push
div
pop
adc
(bad)
xchg
mov
adc
test
xchg
mov
fadd
and
adc
imul
sub
ret
and
gs
xor
enter
dec
pop
sub
cld
add
cwde
adc
call
es
push
mov
jae
popa
lods
push
mov
movs
test
nop
add
sbb
pusha
and
or
mov
(bad)
call
mov
mov
push
push
rcr
add
xor
cmps
jne
test
clc
mov
xor
(bad)
dec
and
lock
mov
mov
adc
frstor
in
test
test
shl
test
and
arpl
call
and
aad
jne
cwde
imul
loopne
and
or
sub
sbb
prefetchw
or
or
jmp
ret
adc
cmp
adc
mov
pop
adc
xor
in
xchg
rcl
push
fs
mov
loop
xchg
add
pop
push
clc
sbb
mov
and
(bad)
fistp
in
ror
test
ja
mov
in
add
xor
in
(bad)
fcom
mov
jmp
int
mov
iret
push
ror
mov
adc
add
dec
and
test
xor
pop
xor
mov
cmps
rcr
and
(bad)
cmp
pop
or
lock
adc
jp
and
and
sub
cmp
adc
sbb
adc
test
push
inc
shr
loope
pop
rcr
cmps
cmp
fist
lods
jmp
sbb
cdq
pop
shl
test
pusha
cmp
mov
ds
retf
test
xchg
mov
sbb
(bad)
int
les
arpl
cmp
sbb
call
inc
cmc
popa
xor
dec
das
sub
xor
or
add
mov
clc
or
test
mov
rcl
xchg
dec
mov
push
xor
sbb
add
paddusw
mov
add
pop
jge
mov
fst
mov
mov
mov
(bad)
inc
sar
nop
icebp
dec
pop
push
addr16
pop
movs
and
les
cmc
test
xor
or
pop
cmp
jno
adc
adc
push
mov
out
mov
pop
mov
add
jle
push
add
js
pop
cs
cwde
cmp
jbe
inc
jae
push
js
stc
xor
or
push
add
xchg
and
mov
movs
(bad)
xchg
retf
rcr
adc
jmp
clc
sub
je
cmp
pop
fwait
inc
or
je
ror
mov
jno
mov
jecxz
out
iret
(bad)
and
mov
inc
xor
je
aam
jmp
mov
inc
sub
mov
inc
push
inc
and
cmp
test
cmp
in
cmp
sbb
xchg
(bad)
or
mov
dec
mov
mov
hlt
rol
adc
outs
mov
fild
cmp
or
pop
mov
pop
mov
and
and
and
pop
mov
shl
push
js
push
out
xchg
or
jns
mov
push
push
les
add
in
inc
add
test
push
inc
mov
adc
or
cli
sub
xor
sub
dec
fwait
cdq
dec
in
xor
dec
dec
test
mov
into
dec
adc
rcl
leave
aaa
stc
mov
daa
push
mov
or
mov
and
sbb
(bad)
xchg
xchg
dec
push
pusha
mov
xchg
cmp
adc
xor
or
dec
repnz
jl
sbb
inc
mov
inc
mov
jnp
adc
ret
xchg
fst
and
movs
in
dec
push
jnp
hlt
jmp
or
mov
push
call
pop
hlt
jno
movs
lahf
test
inc
push
or
outs
retf
pop
adc
push
jge
call
mov
call
retf
push
xor
and
loopne
adc
je
or
or
adc
sub
cmp
inc
fsubr
je
cmp
dec
jl
mov
mov
or
call
mov
lods
in
mov
lods
popf
in
repnz
int3
ins
mov
clc
inc
adc
push
push
je
sbb
icebp
ins
mov
push
mov
dec
xor
mov
dec
adc
idiv
fcom
xor
inc
pop
dec
jne
pop
inc
pop
pop
rcl
int
inc
inc
pop
add
adc
push
fld
sti
(bad)
dec
sbb
cmps
cmp
pusha
mov
ret
jge
mov
mov
add
add
inc
sub
jo
cmp
inc
sbb
and
push
push
gs
loopne
push
dec
stos
xchg
pop
mov
std
sbb
ret
sbb
mov
add
test
add
and
outs
sbb
cmp
cmp
or
cmps
xchg
xor
fld
inc
js
inc
les
test
imul
xchg
shl
fstp
xor
sub
leave
dec
jne
mov
lock
ficom
jl
inc
inc
cmps
sub
or
leave
push
mov
ret
shr
call
dec
fdivr
mov
inc
cmp
(bad)
sub
(bad)
aam
add
loopne
fnstcw
in
fcom
lock
fadd
xchg
xchg
adc
fucomip
daa
add
push
mov
and
xor
adc
lock
shl
push
push
push
dec
or
add
es
jne
push
jbe
add
dec
xchg
in
xchg
cli
pop
adc
data16
dec
xchg
or
adc
iret
pusha
inc
sbb
lahf
xor
shr
shl
mov
ret
and
xor
ds
mov
xor
push
push
lods
loope
dec
fst
or
push
xor
das
xchg
push
jg
mov
inc
push
pop
retf
adc
adc
and
(bad)
mov
gs
sbb
cmp
or
add
fistp
fwait
mov
dec
inc
adc
add
or
jmp
add
sub
test
xchg
push
mov
shl
xchg
test
call
and
ins
adc
jbe
mov
add
mov
in
cmp
dec
sbb
mov
sbb
(bad)
and
int
mov
into
sbb
ins
pop
push
inc
mov
cs
gs
push
push
add
lods
jle
(bad)
bound
popa
or
out
add
loope
pushf
jae
add
sbb
sbb
pop
loop
xor
sbb
and
mov
add
inc
mov
cmp
daa
and
shl
loope
jno
push
pop
inc
jo
jmp
lods
xor
add
mov
pop
jo
xchg
xor
in
pop
add
cli
fucomi
inc
loop
adc
sub
and
sub
pop
pop
cmp
test
push
in
jmp
mov
jl
jne
shl
inc
cmp
jne
mov
add
xor
sbb
lahf
xor
fld
adc
adc
loop
add
jae
in
or
ds
xor
fs
mov
or
xor
jl
cs
jne
adc
push
lock
jne
xor
mov
mov
sar
mov
or
push
fisttp
adc
ficom
push
fs
call
fisttp
dec
xor
sub
or
sub
push
inc
les
retf
cld
nop
and
div
mov
jle
sub
daa
in
sub
loop
enter
je
lock
shl
fucomi
sub
jge
adc
push
push
xchg
xchg
mov
movs
xor
dec
lods
add
xor
xchg
xchg
retf
aad
enter
push
xor
mov
adc
xchg
mov
nop
into
call
sbb
add
mov
jbe
lahf
jmp
je
push
sbb
ss
xor
es
ret
add
sbb
sti
sub
cmp
pop
ins
cs
retf
popa
inc
push
lock
xor
xchg
in
add
pop
mov
or
stos
mov
in
test
outs
pop
repnz
xor
test
stos
pusha
pushf
loop
ins
mov
rcr
or
dec
rcl
push
adc
xchg
dec
leave
pop
jns
clc
push
pop
add
dec
shr
nop
stc
shl
loopne
ret
xor
mov
ds
lock
imul
nop
fist
pop
adc
dec
arpl
cmp
and
mov
pop
enter
sub
pop
xchg
js
jo
cmp
imul
push
dec
adc
adc
sbb
or
arpl
inc
push
and
cmp
fistp
sbb
jmp
sub
sbb
jbe
pop
push
lods
push
pushw
and
shl
cmp
ret
lea
jbe
dec
push
lea
or
add
xchg
and
sbb
idiv
cld
les
in
dec
mov
push
jbe
and
pop
inc
daa
adc
inc
cmp
jb
sub
arpl
or
(bad)
xchg
(bad)
imul
in
or
dec
xchg
xor
hlt
adc
mov
add
call
rcl
dec
pushf
hlt
xchg
mov
xor
dec
and
outs
jnp
mov
push
add
ja
cmp
lock
xor
fidivr
hlt
cld
push
inc
sahf
push
lods
cmps
cmp
sbb
dec
(bad)
xor
push
not
mov
cmp
imul
aam
lock
dec
mov
or
jo
push
push
and
aam
mov
xor
and
mov
test
inc
popa
and
aam
dec
xor
cmp
stc
or
in
je
or
sbb
sub
popa
or
mov
cmp
and
test
das
dec
pop
in
les
in
inc
call
ror
cwde
cld
movs
add
ja
inc
cmp
pop
es
jle
(bad)
mov
cmp
or
mov
sub
cmp
push
pop
rol
add
movsx
mov
and
jg
imul
xor
or
pop
mov
and
hlt
data16
repz
pop
stos
sbb
jo
or
je
dec
jne
mov
test
cli
mov
xchg
inc
jo
loop
mov
xor
jmp
jo
push
ret
sbb
mov
pop
clc
jnp
cmp
push
bound
add
lahf
arpl
stos
les
in
jo
les
repnz
scas
add
and
out
imul
gs
add
mov
mov
sbb
stos
mov
jmp
push
add
xor
nop
adc
pop
or
(bad)
dec
or
and
loop
push
xor
xor
mov
xchg
or
cmp
dec
icebp
jno
jl
aam
repnz
imul
fadd
cmp
imul
icebp
stc
jl
mov
arpl
neg
ret
inc
arpl
mov
cmp
fldcw
adc
inc
(bad)
cli
in
adc
and
lea
iret
or
add
lea
push
mov
ficomp
mov
mov
popf
lea
fwait
mov
fisttp
fcom
pop
and
into
sbb
dec
cld
jmp
push
push
pop
jno
add
inc
add
jmp
enter
and
cmp
push
fisttp
pop
xchg
or
pusha
ret
cmp
pop
inc
sbb
sbb
scas
jbe
stos
jo
in
jl
cmp
mov
sub
imul
stc
xchg
xor
pop
sti
mov
loope
call
bound
call
dec
and
lea
add
or
data16
adc
sbb
ror
or
jns
fisttp
cwde
inc
jecxz
xchg
or
push
pop
popa
sbb
leave
pusha
dec
add
int3
js
lds
sbb
ins
and
push
add
inc
push
mov
(bad)
push
or
mov
pop
mov
hlt
pop
sti
xchg
pusha
pop
arpl
or
pop
pushf
test
cmp
sbb
push
add
add
dec
cmp
test
or
xchg
pop
repnz
add
sbb
mov
scas
fs
stos
ret
lods
lock
dec
mov
test
push
mov
test
xor
xor
cmp
add
mov
add
adc
ss
jmp
cmp
lahf
loopne
inc
je
unpckhps
int3
sub
data16
pop
dec
pop
rcl
mov
cli
sbb
pusha
and
or
(bad)
cmp
and
nop
and
loopne
addr16
or
stc
push
fwait
(bad)
cs
fisttp
pop
nop
nop
call
nop
xchg
or
xchg
imul
mov
je
add
xor
jne
mov
inc
cmp
push
mov
movzx
pushf
sbb
jne
jp
add
adc
nop
scas
inc
push
mov
adc
adc
repnz
mov
mov
fidivr
mov
cmps
dec
cdq
add
push
rcl
lds
or
fcmovnb
ret
scas
sbb
add
mov
mov
aaa
pop
lds
dec
adc
cmp
cli
push
cmp
inc
arpl
push
imul
adc
out
je
sbb
xor
and
and
les
mov
jg
sub
je
dec
sub
and
and
je
and
out
push
dec
jne
test
pop
test
adc
jne
movs
idiv
jne
or
mov
scas
repnz
cmp
ja
push
cwde
cmp
dec
push
outs
scas
cmp
and
sbb
inc
cmp
imul
or
or
mov
jp
repnz
sbb
fs
repnz
or
sub
shr
pop
cmps
pop
cmp
(bad)
pop
popa
es
adc
inc
pop
adc
emms
mov
rcl
jns
movs
inc
loope
pop
jno
dec
adc
pushf
and
or
add
or
adc
or
sbb
jle
pop
jmp
lods
je
std
popa
aam
jecxz
mov
jl
xchg
mov
add
test
mov
shl
leave
dec
sbb
inc
add
out
imul
mov
sbb
adc
or
imul
inc
cmps
mov
mov
shl
push
iret
std
test
or
call
or
je
jg
enter
ror
push
lea
cmp
daa
add
add
pop
inc
(bad)
or
in
xchg
sub
xchg
pop
outs
and
add
adc
inc
or
popa
mov
inc
mov
pop
retf
sub
adc
or
shl
xor
adc
call
outs
push
cmp
cmp
push
inc
adc
stos
adc
retf
out
(bad)
mov
scas
mov
inc
push
xchg
in
cmp
test
sub
adc
cmp
les
and
inc
dec
test
xchg
lods
fld
sub
or
mov
daa
icebp
sub
inc
cmp
jmp
xor
mov
cmp
xchg
(bad)
and
add
aam
ret
inc
inc
cmp
mov
data16
sub
rcl
cs
loope
loopne
mov
inc
movs
lea
ss
shr
movs
cmps
in
add
inc
pop
sti
in
mov
cmp
inc
mov
mov
fcomp
je
xor
and
rol
mov
out
xchg
or
and
xor
es
add
fbld
cld
mov
cmp
or
sub
pop
and
jne
add
nop
xor
jns
jmp
cmp
imul
mov
sbb
jmp
dec
adc
nop
xchg
mov
adc
push
add
clc
lds
mov
clc
ret
cld
cmp
jb
ror
fidivr
push
mov
jo
mov
sbb
inc
jmp
cmp
cli
pop
aaa
cmp
jle
adc
add
inc
xchg
sbb
das
dec
fsub
sbb
inc
outs
repnz
jne
jbe
idiv
(bad)
jmp
(bad)
dec
push
test
movs
clc
and
in
inc
cmp
sub
ins
sub
sbb
call
xchg
outs
test
into
popa
jne
ins
ret
push
pop
mov
jmp
and
pop
adc
inc
inc
inc
rcr
jmp
and
int
and
call
loop
sahf
push
mov
int
mov
add
and
xchg
movs
push
lods
push
xchg
repnz
xchg
sbb
push
fsub
or
les
sahf
sub
push
loope
pusha
dec
mov
icebp
xchg
jl
and
or
(bad)
inc
ss
push
lea
push
in
push
add
mov
mov
pop
adc
xchg
fs
inc
je
mov
mov
add
push
jbe
push
ja
js
les
das
mov
call
mov
(bad)
pop
fst
push
adc
outs
jbe
xchg
out
fmul
push
sub
ja
pop
xchg
out
push
js
adc
(bad)
sub
inc
push
mov
dec
push
sbb
pop
pop
and
xchg
sub
and
mov
inc
fldcw
das
call
iret
lods
and
pop
and
sbb
mov
aaa
inc
pop
sub
lock
sar
push
add
sub
js
mov
cmp
ret
xchg
fdivr
xchg
test
sub
dec
and
jo
popf
clc
or
mov
(bad)
cmps
or
pop
push
nop
inc
jbe
pusha
pop
xchg
and
mov
fdiv
inc
je
aas
inc
adc
ss
aam
(bad)
sub
or
jmp
nop
fdiv
jl
cdq
jge
xchg
mov
cmp
inc
pop
add
xchg
int3
jmp
or
shr
retf
inc
xor
adc
push
lea
mov
fcmovb
jge
rol
and
jb
and
push
ins
sub
jae
jl
jge
and
fistp
mov
mov
xor
call
sub
ds
and
mov
add
jl
pushf
sahf
push
ds
or
outs
leave
inc
adc
and
scas
pop
mov
mov
pop
cmp
call
add
shl
mov
pop
mov
sub
inc
stos
loope
test
push
push
or
ret
jp
push
shl
test
adc
mov
fld
addr16
je
xor
mov
adc
cmp
mov
inc
add
bnd
push
div
or
stc
jns
clc
jne
or
jne
or
mov
push
pusha
cli
shl
or
mov
mov
push
popa
cmp
or
jmp
pop
lea
push
ja
das
push
call
ja
xchg
stc
cmp
(bad)
cs
(bad)
arpl
cmps
or
imul
pop
and
fmul
sbb
push
adc
jg
xchg
or
push
and
inc
ins
or
jg
mov
pop
jne
sti
jmp
jo
lods
or
das
inc
(bad)
jae
mov
cmp
xor
or
pop
movs
repnz
sub
push
or
or
push
inc
add
pushf
les
ss
ss
or
add
(bad)
dec
adc
or
rcl
popa
xchg
fs
imul
mov
adc
adc
fucomp
add
jnp
mov
dec
mov
js
mov
or
out
push
and
ffree
mov
(bad)
loope
aad
(bad)
dec
inc
cld
jnp
enter
push
mov
mov
xor
jecxz
or
and
js
jbe
call
ret
sbb
adc
add
sub
fwait
jmp
ret
mov
scas
mov
sbb
mov
push
mov
repnz
(bad)
hlt
test
cmp
jbe
mov
sub
popf
loopne
xchg
mov
mov
in
dec
mov
push
inc
xor
mov
pop
fcom
ss
xchg
cmp
shr
jnp
push
repnz
mov
das
and
add
or
aaa
cld
or
je
add
stos
xor
cmps
push
add
or
fsubp
mov
mov
jmp
pusha
or
jmp
jo
mov
or
push
jp
(bad)
test
mov
or
pop
xor
pop
icebp
xor
mov
mov
push
data16
ret
mov
cmp
bound
push
and
cmc
pop
test
scas
adc
(bad)
mov
pop
or
es
cmp
mov
shl
fs
or
sbb
pop
and
mov
add
pop
ret
mov
or
add
test
rol
cwde
inc
je
add
pushf
nop
test
fwait
clc
test
push
inc
adc
jg
test
sub
retf
sub
pop
fadd
add
jmp
pusha
sahf
fs
sub
or
xchg
push
ins
ins
pop
sub
or
inc
add
jmp
(bad)
or
pusha
push
push
adc
add
or
mov
ss
dec
imul
adc
aad
mov
dec
fisub
dec
cmovbe
mov
movs
dec
js
or
dec
in
lods
shl
mov
push
out
out
lock
inc
mov
adc
loopne
call
fadd
sar
mov
dec
loope
out
dec
dec
mov
dec
inc
dec
cmp
mov
jge
xchg
stos
psrlw
mov
mov
sub
mov
push
mov
xchg
dec
mov
retf
adc
adc
(bad)
out
div
sub
adc
push
adc
push
push
in
sbb
xchg
sar
mov
xchg
jmp
jmp
outs
add
sub
les
sbb
call
xchg
into
sahf
(bad)
jo
cmps
outs
dec
std
jmp
or
xor
cmp
pop
loope
cmp
aaa
and
jl
das
adc
or
je
add
cs
push
leave
cmp
sbb
scas
retf
neg
lds
dec
mov
nop
or
ins
or
adc
sbb
daa
inc
jl
je
push
loope
mov
sub
cmp
shl
dec
or
lods
xchg
mov
fnstsw
call
in
cmp
and
mov
in
cmps
mov
les
jl
cmps
daa
mov
stos
fdivr
adc
inc
cmp
jmp
cmp
mov
push
adc
hlt
adc
sahf
dec
cs
test
cld
(bad)
mov
jae
jmp
push
(bad)
into
jae
pop
call
in
pusha
retf
popa
xor
jge
push
test
adc
test
mov
repnz
mov
push
rol
iret
arpl
jmp
xor
test
cmp
adc
(bad)
rol
cmp
inc
test
inc
lock
push
mov
cs
dec
cmp
and
push
sub
rol
xchg
adc
mov
jo
dec
sub
and
pop
ret
push
and
pop
loopne
div
dec
clc
dec
pushf
adc
mov
xor
mov
push
shr
push
sub
mov
pop
add
adc
movs
cmps
test
or
push
push
adc
dec
es
xor
dec
adc
dec
adc
inc
push
inc
jmp
sub
and
inc
cwde
inc
out
or
push
push
fistp
and
push
mov
stc
mov
bound
pop
cld
repnz
fstp
pop
movsx
adc
(bad)
ror
ret
jne
sub
ret
sub
mov
jne
mul
or
movs
sbb
push
mov
jg
or
adc
data16
icebp
xor
out
mov
inc
outs
fdiv
dec
and
add
add
popa
add
xor
jne
ja
add
inc
or
adc
or
lds
mov
lods
pop
adc
bndldx
add
push
loopne
(bad)
jnp
jl
sbb
pushf
xchg
sbb
dec
push
sub
pop
push
jns
div
inc
cmp
jle
xchg
inc
xchg
shl
cmp
or
or
popa
sbb
ret
mov
adc
add
mov
mov
mov
loopne
test
stos
jo
push
pushw
push
push
ins
sbb
push
icebp
cld
dec
loop
ret
pop
and
mov
out
inc
inc
iret
leave
rol
adc
fcomp
sub
adc
pop
pop
cmps
adc
cmps
push
or
inc
push
dec
(bad)
adc
and
add
movs
mov
mov
es
and
add
pushf
mov
jne
nop
ja
lods
div
jecxz
and
push
and
in
mov
les
je
xor
push
aad
mov
nop
lea
push
repnz
pop
adc
pop
inc
dec
inc
mov
fbstp
dec
mov
push
dec
or
lods
ficom
mov
ret
dec
stos
sbb
leave
cli
rsm
add
mov
add
sub
icebp
inc
or
fdiv
rcr
and
sbb
mov
adc
mov
xchg
inc
lock
and
push
adc
sub
imul
or
pop
call
push
js
fnstcw
push
inc
jl
sbb
loope
rdmsr
jo
nop
in
ret
in
mov
adc
rcr
add
loopne
xor
pop
fwait
pop
push
int3
inc
loope
xor
leave
das
add
xor
xchg
rol
sub
pushf
adc
movs
retf
fwait
shl
fild
xorps
jp
call
loopne
xor
loopne
dec
inc
in
fs
or
cdq
add
repz
enter
or
push
in
fmul
sbb
sbb
je
mov
push
sub
adc
test
fisttp
sbb
push
mov
(bad)
mov
les
or
or
or
jmp
push
inc
mov
inc
or
push
in
xor
cdq
inc
sub
mov
push
adc
ffreep
adc
and
cmp
ins
cmp
jmp
lock
loopne
and
cmp
jecxz
sub
fcomp
cmp
add
jmp
arpl
and
sti
xor
das
jmp
std
or
in
jb
lahf
inc
dec
push
dec
or
fs
push
ror
adc
popf
fadd
sbb
pop
or
lea
lahf
loop
div
unpcklps
(bad)
ja
cmp
mov
sbb
inc
lea
and
daa
loop
imul
jle
ficom
loope
es
xchg
xlat
(bad)
loopne
mov
mov
jg
pop
add
push
cmp
js
inc
cwde
add
rol
sbb
sbb
pop
mov
pop
jo
movs
out
je
inc
pop
adc
mov
call
xor
test
in
pop
pop
jecxz
ret
retf
ror
adc
data16
stos
adc
pop
leave
les
push
adc
adc
cmp
push
jb
inc
adc
sub
push
sbb
xchg
dec
pop
add
or
push
push
test
sbb
fcomip
jo
movs
pop
adc
or
icebp
cmp
push
lods
xor
or
out
push
adc
mov
pop
mov
hlt
push
outs
mov
pop
dec
xor
cmp
pop
xor
dec
dec
lds
inc
call
push
mov
xchg
aaa
lock
lock
mov
imul
push
sub
bound
inc
xor
sbb
and
int
mov
or
shl
mov
add
add
enter
popa
rol
mov
pop
push
pop
mov
outs
(bad)
pop
xor
sub
shr
and
jecxz
sbb
xor
cmp
xor
add
adc
add
sub
sub
test
xchg
or
mov
dec
adc
retf
test
adc
gs
jns
movs
inc
mov
and
cmps
or
cs
mov
push
add
sbb
mov
sbb
lods
jo
outs
mov
mov
sbb
pop
sbb
xor
call
xor
sbb
and
ret
sub
loopne
sub
das
mov
mov
bnd
cmps
ret
jmp
mov
adc
leave
sub
xchg
xor
adc
sbb
dec
in
fwait
push
sar
adc
dec
jmp
adc
push
and
xchg
and
xor
add
jo
fcomp
in
inc
sbb
es
and
xor
inc
jo
add
and
or
gs
jg
sub
or
and
test
pop
mov
mov
pusha
xchg
arpl
xlat
push
xor
(bad)
in
inc
jns
add
and
je
or
ret
cmp
push
xchg
fisttp
test
mov
lock
sahf
ss
lock
dec
mov
push
adc
sbb
mov
sub
xor
les
fwait
inc
nop
dec
sub
or
or
cwde
dec
xchg
or
push
or
in
sub
adc
and
(bad)
out
stos
in
adc
add
dec
adc
adc
or
jecxz
and
std
sti
adc
rol
cmp
or
std
push
and
sbb
pop
data16
sub
enter
add
or
es
out
and
cmp
pop
lock
add
mov
or
and
dec
pop
pop
pop
or
pop
xor
mov
xor
and
call
jmp
into
out
mov
imul
or
mov
pop
pop
dec
sbb
push
jo
dec
and
add
cs
sbb
sti
inc
fs
sbb
in
inc
movs
shl
push
mov
push
push
mov
test
(bad)
jmp
fst
test
test
push
or
cmp
sbb
mov
inc
xchg
push
xor
inc
pop
adc
and
rol
dec
loopne
pop
adc
cwde
dec
or
xchg
js
loopne
jnp
jp
or
mov
adc
inc
inc
dec
xor
and
aaa
movs
sub
sbb
rol
scas
es
add
adc
or
(bad)
push
das
xchg
adc
icebp
in
ja
addr16
xor
or
and
stos
(bad)
dec
adc
mov
inc
dec
(bad)
jecxz
or
xchg
add
imul
loope
or
xchg
add
call
pop
out
aad
fdivr
cs
xor
pop
pop
cmps
jbe
mov
or
imul
xchg
aad
out
push
shr
adc
pop
movs
pop
add
cmp
sahf
xchg
add
ja
push
mov
mov
rcr
movs
jp
clc
fnstenv
scas
adc
and
jl
jge
mov
popa
repnz
pop
es
outs
adc
outs
add
sbb
cdq
nop
call
jl
xchg
fs
sub
adc
sbb
clc
xor
inc
xor
sub
dec
pushf
mov
and
fdivr
ins
dec
lea
sbb
test
cmp
push
xchg
mov
or
push
pop
push
lods
ret
loopne
or
sub
and
inc
loop
sbb
jno
add
add
or
xor
(bad)
mov
jo
inc
jo
dec
lods
add
clc
lea
push
push
or
(bad)
push
cdq
sbb
dec
push
ror
test
cmp
sub
mov
add
pusha
out
out
pop
adc
sahf
pop
cmp
fiadd
xor
or
sbb
pop
sub
retf
adc
add
call
(bad)
sub
dec
ror
push
js
xchg
xchg
push
(bad)
loop
rol
mov
fwait
into
sbb
xor
loop
jnp
rol
add
mov
adc
imul
pop
xor
cld
shl
fmul
jne
mov
shl
jecxz
sub
or
imul
adc
aaa
inc
jecxz
lds
fs
test
add
je
sbb
pop
add
push
push
gs
adc
dec
or
add
inc
sub
retf
inc
shl
mov
fbstp
xor
icebp
lock
jnp
cmc
mov
cmp
je
icebp
add
sub
xor
test
push
mov
pop
pop
adc
cmp
jbe
push
lea
and
shl
add
dec
aas
or
xchg
or
cld
sbb
adc
xor
push
jne
push
mov
mov
sub
add
ficom
sub
movs
push
lods
mov
shr
jge
push
mov
fisub
dec
mov
or
add
dec
mov
add
xor
call
dec
pop
and
in
adc
xor
and
movs
lods
mov
ja
cmps
enter
sub
and
add
or
or
push
out
jmp
sbb
jg
inc
sbb
xor
mov
fucomi
movs
xor
and
add
(bad)
cmc
mov
or
push
rol
popf
jmp
adc
or
pushf
push
or
imul
sub
or
loopne
movs
push
das
repz
ror
ins
inc
repnz
inc
lods
cs
cmp
call
mov
sbb
pop
inc
adc
xor
imul
ffree
hlt
xchg
ret
mov
outs
xor
adc
add
outs
sbb
js
adc
mov
in
ss
movs
div
dec
xchg
mov
test
daa
and
sub
(bad)
xlat
js
pop
xchg
add
inc
popa
sbb
cmp
call
or
rep
inc
aam
nop
or
inc
push
push
fbstp
outs
jns
shl
mov
outs
test
lods
popa
fsub
jbe
cli
cmp
add
add
adc
popf
ins
neg
add
inc
push
cmp
sub
rcr
jecxz
jo
pop
mov
nop
pop
dec
xchg
mov
mov
test
add
jo
xchg
push
cmp
push
mov
cmp
and
out
leave
add
cdq
lock
popa
in
lds
in
sub
scas
in
jne
sub
push
mov
dec
inc
xchg
sub
inc
loope
and
out
pop
or
sub
test
adc
push
cwde
ror
bound
xor
jb
in
fidiv
loope
cdq
pop
xchg
or
push
inc
es
out
cmps
push
inc
shl
lea
xchg
xchg
xchg
add
into
cmps
lock
xchg
stc
or
in
lods
inc
mov
sub
adc
ror
cmpps
dec
mov
inc
nop
jl
xlat
ret
lock
adc
push
push
mov
idiv
pushf
push
push
mov
arpl
mov
or
inc
fcomp
movs
dec
pop
inc
sub
xchg
scas
add
mov
call
and
push
rol
push
push
sahf
pusha
pop
sub
clc
leave
neg
shr
sub
mov
ret
sahf
xchg
cmp
and
jle
les
cwde
movs
mov
jbe
push
mov
(bad)
jmp
jp
add
mov
imul
popf
daa
xchg
add
mul
push
inc
adc
cs
mov
push
mov
test
mov
add
movs
daa
sbb
mov
push
add
jnp
lds
push
mov
enter
lock
fadd
stos
ins
or
nop
or
out
nop
sbb
int
movs
nop
shr
dec
retf
xor
inc
mov
push
daa
xor
retf
les
push
rcr
or
or
sbb
sbb
and
or
or
shr
adc
xchg
sti
in
repnz
xor
out
jmp
and
ret
outs
(bad)
or
icebp
push
fcomp
xchg
(bad)
and
mov
(bad)
in
sbb
xor
mov
cmp
stos
inc
loope
sahf
addr16
add
mov
add
push
push
add
add
adc
push
add
or
push
ins
fcomp
or
xor
pop
cmp
or
fist
mov
popf
mov
jp
call
fisttp
cmp
jne
test
sub
scas
sub
or
sbb
xchg
cmps
push
jmp
mov
std
inc
std
inc
or
sbb
arpl
mov
xor
sbb
xchg
and
dec
jg
xor
inc
adc
push
push
push
inc
push
ret
xchg
adc
adc
mov
ror
add
lods
les
mov
pop
xchg
xlat
xchg
xor
cld
mov
push
retf
dec
xor
push
ds
or
loop
shr
cld
mov
sub
mov
data16
mov
mov
add
and
add
xor
jnp
fwait
jb
clc
mov
sbb
cmp
fnsavew
sbb
fldenv
jle
xor
add
imul
std
imul
sbb
cmp
adc
sbb
mov
sar
adc
pop
je
jnp
repz
out
xchg
push
rol
push
or
aas
add
xor
fcmovnb
jmp
sahf
xchg
sahf
mov
sahf
push
sub
xchg
fst
gs
sahf
in
div
leave
xor
push
leave
xor
and
add
inc
xor
mov
dec
inc
rcr
add
push
sbb
xor
dec
adc
mov
xor
shl
and
cmp
pop
and
cmp
pop
and
xor
and
pop
and
and
inc
dec
add
or
or
adc
and
popa
loope
sub
pop
xor
aam
mov
add
or
pop
mov
push
xchg
adc
jl
sub
fld
xchg
cwde
pusha
xor
mov
xor
inc
lahf
lock
jne
cmp
and
push
mov
or
push
icebp
jb
add
add
push
data16
or
or
mov
mov
and
add
or
push
pusha
in
sbb
add
jl
jo
dec
mov
jl
jle
test
xor
pushf
or
mov
fs
(bad)
pop
sub
clc
dec
pop
push
(bad)
mov
mov
pop
mov
push
push
mov
adc
push
imul
mov
mov
mov
enter
lar
jne
add
(bad)
or
cmp
mov
add
fisttp
cwde
or
jl
popa
sar
xchg
movs
push
dec
cwde
fmul
adc
popf
mov
mov
clc
pop
ja
mov
or
sbb
shr
retf
dec
aad
pop
dec
inc
hlt
jbe
push
xor
mov
mov
lea
repz
cs
push
loopne
pop
jbe
mov
mov
inc
dec
xor
cs
cmc
jmp
xchg
dec
mov
jg
pop
jmp
sbb
mov
hlt
pop
mov
sub
cmp
mov
jae
test
ficom
lock
push
mov
add
add
add
cmp
(bad)
rol
int3
pusha
jmp
or
dec
mov
out
jbe
mov
dec
lock
and
or
in
js
je
sub
out
pop
pop
hlt
or
inc
lods
mov
jmp
jne
pusha
ss
add
add
cmps
inc
pop
fs
mov
mov
sbb
cli
or
push
mov
adc
inc
cmp
lods
add
push
jne
inc
dec
neg
adc
mov
sbb
ret
push
iret
mov
mov
nop
clc
jle
jno
mov
clc
es
sbb
mov
add
mov
add
jp
loopne
xor
add
adc
and
mov
in
sbb
in
or
sti
test
call
cmp
(bad)
stc
mov
xor
stos
clc
dec
fwait
adc
je
ja
cs
jnp
xor
jg
dec
inc
aad
fmul
mov
cmp
int
push
sub
xchg
mov
jne
pop
out
test
dec
(bad)
cmp
or
dec
shl
lds
pop
push
mov
stos
inc
adc
mov
sub
and
mov
mov
push
pop
aaa
stos
call
xor
jnp
push
sbb
shl
cmp
sub
dec
mov
dec
pop
push
pop
push
test
push
retf
adc
inc
lock
jb
ja
sbb
add
cmps
call
sub
stos
cmp
sub
sbb
push
mov
mov
pushf
cdq
not
loop
outs
cdq
test
ret
fcmovnbe
fisubr
add
movs
fwait
ja
fcmovnu
stos
jge
cmp
jae
rol
dec
bound
fsubr
cmp
and
clc
cdq
aas
lds
hlt
xor
xor
jo
or
ja
fs
shl
or
cmc
jge
nop
pusha
mov
push
sub
sub
mov
call
hlt
xor
adc
retf
push
add
or
out
sahf
mov
jb
aam
adc
mov
dec
pop
fcmove
inc
mov
jle
mov
add
and
imul
dec
les
xchg
or
imul
pop
inc
movsx
out
sbb
xor
mov
cld
js
and
fs
push
sbb
mov
cmp
(bad)
fisttp
cmps
pinsrw
scas
push
cmp
xchg
pop
sbb
sub
jae
leave
pushf
sub
push
je
call
movs
cli
mov
xchg
aam
mov
lock
xor
fldcw
adc
stc
nop
or
push
js
jmp
iret
jl
dec
add
mov
pop
xor
cmp
enter
enter
in
add
mov
add
add
fmul
mov
fsub
cmp
popf
push
int3
fmul
add
adc
dec
inc
test
xor
or
je
jae
push
in
xchg
jmp
jg
xchg
lods
cmp
jne
push
cmp
push
lahf
sti
mov
cmp
jg
dec
sti
mov
mov
pop
and
cmp
vmovaps
(bad)
jecxz
xchg
aam
das
or
sbb
test
add
lock
icebp
mov
and
pop
aad
outs
mov
sub
cmp
adc
push
ins
clc
cmc
fcom
in
adc
mov
jecxz
jmp
lods
mov
(bad)
pusha
jb
test
aaa
bound
sbb
pop
add
inc
jno
test
mov
fs
das
inc
test
or
or
inc
mov
add
enterw
mov
nop
stos
sbb
and
xchg
xor
cs
pop
and
into
add
ror
push
add
mov
leave
add
push
push
repnz
rcl
pop
add
add
mov
cwde
call
sahf
xchg
mov
fst
sbb
inc
or
inc
push
mov
or
mov
inc
sbb
adc
add
jg
inc
lock
inc
add
pop
rol
jmp
test
mov
je
mov
cmp
ins
and
pusha
and
lds
push
or
mul
or
mov
and
mov
and
add
or
mov
mov
push
bswap
inc
xchg
loopne
fiadd
lods
or
std
lods
add
sti
or
push
push
shr
fcomp
cmp
inc
cmps
add
mov
je
or
and
or
mov
jae
cmp
stos
push
movs
into
cmps
push
nop
sub
cmps
arpl
sahf
dec
add
jl
mov
cmp
jne
pusha
pop
add
cmps
push
enter
jge
or
rcl
sub
dec
sub
and
mov
push
add
xor
or
sbb
in
push
mov
or
int
xor
add
int
dec
jecxz
imul
sbb
stos
fiadd
push
test
pushf
jne
xor
adc
mov
push
and
lods
add
mov
xchg
mov
mov
je
test
cmp
mov
sahf
scas
or
enter
sub
or
adc
xchg
jne
retf
mov
sbb
dec
clc
fld
push
pop
push
call
popa
mov
push
outs
call
add
mov
icebp
jbe
arpl
add
push
pop
movs
gs
adc
retf
inc
adc
or
sbb
pop
imul
retf
and
mov
imul
mov
dec
ret
dec
aam
ins
jb
push
jle
push
jmp
push
inc
test
outs
or
call
js
test
mov
pop
cmp
fcomp
out
xor
inc
outs
aam
jg
shl
push
push
dec
xor
cmp
xor
in
imul
add
dec
push
pop
or
ds
fld
test
loopne
ror
sahf
stc
push
or
mov
or
sub
jnp
jmp
pop
jne
gs
push
push
adc
xchg
pop
lock
or
or
and
das
rcl
pop
ret
push
rol
pop
add
sub
dec
cwde
sub
pop
clc
sub
adc
inc
sti
push
jmp
imul
pusha
inc
pop
mov
dec
xlat
push
rcr
add
adc
jmp
xchg
out
rol
and
adc
test
add
pop
or
dec
jg
aaa
call
pop
and
add
into
pop
dec
add
inc
rol
sbb
push
je
push
movs
jne
push
adc
pop
and
cdq
push
loope
mov
imul
add
enter
add
lea
push
mov
mov
sti
les
mov
cli
mov
push
hlt
clc
push
sbb
neg
sbb
adc
add
push
ds
and
mov
das
test
sub
scas
or
xchg
sub
dec
sbb
or
dec
jnp
jl
jl
js
cld
cwde
inc
or
inc
je
popf
pusha
cmp
mov
nop
adc
pop
aaa
in
inc
add
imul
xor
push
push
mov
aaa
jmp
push
pop
dec
dec
or
test
sub
je
pop
enter
lock
xchg
inc
cmp
jecxz
push
rol
scas
pusha
ins
mov
cli
imul
(bad)
fimul
stos
(bad)
cli
sbb
daa
or
repnz
jl
add
adc
out
cmp
clc
xlat
loopne
xor
and
pop
adc
and
push
shr
addr16
ins
sbb
mov
adc
outs
push
sub
sbb
dec
jge
mov
das
dec
and
nop
xlat
pop
xor
addr16
mov
pop
xlat
or
pop
push
sbb
sbb
scas
cmp
adc
adc
mov
out
or
jno
add
retf
push
dec
in
int
pop
leave
and
jle
push
push
retf
dec
add
xchg
or
pop
imul
rcl
in
pusha
jl
sbb
and
xchg
or
nop
mul
xchg
pusha
ret
into
add
jbe
adc
pop
push
push
push
sub
xor
es
pop
cwde
push
or
js
push
lea
mov
push
das
in
and
sub
sub
pushf
push
cwde
sbb
addr16
xchg
pop
push
add
dec
jge
(bad)
rol
or
pop
and
fisubr
ss
pop
aaa
mov
cs
jnp
rol
pusha
adc
add
push
mov
add
adc
pop
fs
je
push
jg
push
xor
and
rcl
pop
mov
pop
dec
dec
mov
and
xor
das
mov
cmp
inc
sbb
bswap
and
rcr
inc
les
pop
sbb
stos
jbe
fdiv
(bad)
add
pushf
add
pop
scas
es
sar
xor
adc
ss
in
adc
in
inc
ret
pop
cmp
add
cmps
adc
jecxz
push
add
jl
ret
mov
arpl
sbb
add
lds
aaa
mov
dec
push
or
cmp
push
xor
in
mov
loopne
ret
in
inc
sbb
push
adc
test
js
cmp
adc
loopne
adc
or
pop
pop
sbb
(bad)
pushf
stc
mov
push
add
push
xchg
and
movs
cmp
test
cdq
movs
cmp
test
lock
sub
push
xor
mov
cmp
adc
shr
and
or
jmp
lahf
mov
sbb
xchg
mov
sbb
xor
shl
cmp
scas
test
xchg
cmp
inc
sub
pushf
in
in
mov
cmp
jmp
add
popf
or
imul
adc
and
cmp
mov
pop
and
bound
shr
inc
das
adc
adc
jae
dec
jmp
xchg
cld
inc
and
out
dec
jp
mov
or
cs
mov
xchg
in
fs
shl
xor
sbb
jbe
sbb
(bad)
push
mov
ret
ins
jbe
outs
fldenv
add
pop
pusha
fidiv
test
jecxz
jl
imul
ja
jnp
pop
pusha
ret
xchg
test
adc
mov
sbb
out
mov
or
xchg
imul
mov
aam
nop
jo
sub
fldenv
aam
test
inc
jb
sbb
fidivr
retf
push
or
mov
dec
xor
or
jb
daa
xor
adc
jl
fisttp
push
rol
or
rol
push
fsubr
inc
mov
add
rcr
mul
dec
nop
mov
nop
adc
add
repz
ret
inc
xchg
and
pop
add
and
pop
lea
aaa
in
push
pop
mov
loope
mov
and
pushf
sub
cmp
nop
out
xor
cmp
mov
and
mov
fs
scas
(bad)
dec
adc
nop
cmp
pop
pop
ins
pop
jecxz
shl
mov
lods
lds
imul
pop
ret
test
call
inc
xchg
xchg
psubw
retf
xchg
jp
lock
pop
test
lock
jl
test
push
xchg
pop
fdivr
mov
pushf
sbb
test
pop
popf
loop
loope
jbe
or
jmp
or
fist
or
sub
push
pop
xor
sub
xor
adc
in
add
js
jmp
movs
cs
and
push
cmp
inc
pop
and
rcr
daa
and
or
pop
or
push
into
movs
nop
and
dec
inc
and
push
lock
mov
sub
xchg
sbb
add
mov
dec
adc
movs
or
xor
jecxz
je
pop
mov
outs
add
and
(bad)
push
loopne
js
fmul
cmp
test
(bad)
jae
fcmovu
or
jle
sar
popa
add
adc
push
and
icebp
call
sub
outs
sbb
loopne
loopne
cmp
and
cli
ss
push
pop
je
loopne
outs
test
sub
push
(bad)
push
push
mov
inc
pop
je
adc
mov
movs
sub
inc
adc
test
xlat
push
push
push
dec
and
xchg
dec
das
sbb
sbb
pop
adc
sbb
jne
lea
mov
sar
xchg
movs
ja
adc
or
mov
or
cli
xchg
in
stos
inc
rol
inc
dec
pop
sbb
add
ret
jo
jle
dec
repz
or
dec
mov
adc
mov
call
ins
lock
add
jle
lea
jecxz
adc
fdiv
loop
sub
jmp
pop
and
cld
add
mov
jne
xor
or
jmp
fnstcw
test
pop
xor
stos
mov
je
add
push
push
(bad)
movs
test
add
mov
adc
hlt
dec
mov
cdq
push
pop
jmp
add
jne
aaa
pop
add
sub
ins
or
push
hlt
pop
call
fld
fucomp
sbb
and
add
push
add
call
test
pop
pop
jle
adc
xor
push
mov
aam
daa
mov
or
int
rol
adc
call
sbb
test
inc
and
jae
test
fistp
hlt
and
cmp
push
xor
mov
add
cmp
in
sbb
inc
and
test
push
ins
xchg
xchg
pop
cmp
mov
pop
popa
mov
loope
adc
pop
add
sbb
(bad)
fadd
mul
cmp
jne
push
push
fdivr
inc
add
add
push
push
fimul
pop
dec
xor
add
sbb
adc
test
push
xchg
sub
sbb
dec
fdivr
xchg
mov
push
or
cmp
pop
fistp
inc
push
jmp
neg
dec
loop
and
push
add
dec
cmp
cmp
xor
mov
add
out
or
je
sub
add
cmp
mov
jl
or
ret
cmp
and
pop
xor
and
clc
ss
push
and
imul
addr16
scas
push
add
mov
add
test
jne
jmp
sub
inc
ret
fild
pop
imul
jmp
add
mov
jne
dec
inc
fnsave
xor
or
jae
addr16
and
and
add
mov
jno
jne
addr16
xchg
dec
jb
or
pop
and
sub
fstp
daa
pop
push
not
enter
jmp
(bad)
nop
sub
inc
stos
push
jno
jmp
jb
fcmovbe
pusha
arpl
inc
jge
add
cmp
(bad)
(bad)
retf
retf
or
mov
and
cdq
loopne
dec
dec
or
sbb
adc
mov
into
jge
les
push
adc
jmp
push
int
push
lahf
les
add
dec
xchg
pop
cmp
push
in
jecxz
lods
mov
jmp
sub
js
inc
aad
pop
leave
es
nop
adc
mov
pusha
repnz
ffreep
loopne
add
ret
jmp
or
push
mov
push
or
aaa
ret
xchg
xor
rcr
mov
jns
ss
dec
js
call
and
push
jp
shr
jle
sub
loop
or
add
shl
int3
loopne
and
fstp
mov
inc
add
movs
adc
or
cmp
add
test
cmp
pop
push
or
xor
ins
inc
test
add
pop
cmp
or
cmp
addr16
add
sub
cdq
sbb
dec
cmp
mov
je
mov
dec
clc
je
or
jne
mov
sbb
inc
mov
push
push
dec
jne
cmp
push
pop
push
cmp
adc
cmp
xor
or
pop
add
adc
sbb
dec
and
nop
dec
xlat
dec
call
neg
jmp
and
mov
das
test
js
js
mov
sbb
(bad)
fidiv
retf
jne
(bad)
es
inc
add
lds
sub
cmp
add
inc
loop
ret
pop
loope
push
push
test
lahf
fsub
movs
xor
push
ja
or
add
dec
and
mov
out
adc
and
add
dec
adc
xor
sub
xchg
loopne
cmp
leave
mov
jmp
inc
pop
inc
fst
ret
sar
dec
cmps
pop
xchg
xchg
and
fwait
jne
data16
imul
ins
gs
aam
fwait
dec
es
cmc
mov
dec
push
sub
out
and
push
js
nop
aas
inc
xlat
xchg
sbb
sub
dec
popa
int3
xor
add
xchg
scas
pop
gs
scas
retf
loopne
mov
daa
xlat
and
and
movs
cmp
stos
and
or
test
inc
dec
jge
dec
cwde
test
dec
dec
pop
xchg
ins
cld
sub
or
push
inc
fld
sub
adc
add
xor
sbb
jo
mov
add
push
xchg
lds
ja
mov
add
adc
adc
fwait
in
xchg
fisub
jae
clc
jnp
and
pop
cmps
(bad)
cmp
imul
enter
add
adc
movs
mov
inc
inc
popf
ds
es
mov
mov
mov
add
sbb
mov
or
pusha
sub
add
(bad)
sbb
inc
pop
xchg
and
cdq
push
cmp
adc
push
jmp
push
add
and
js
mov
jl
push
cmc
push
sbb
cs
and
mov
add
xchg
and
cmp
test
jae
mov
push
and
adc
int3
push
cmp
or
pop
adc
sahf
call
adc
ins
pusha
dec
aam
lods
call
add
hlt
nop
dec
rcl
cdq
pop
cmp
sbb
fdivr
movs
jb
aam
rol
add
int3
pop
dec
or
(bad)
pop
shl
in
dec
xchg
push
push
cmp
jg
lods
xlat
mov
sbb
movs
test
fwait
mov
and
sbb
or
lock
test
in
jl
push
add
inc
loope
and
or
inc
sub
test
push
adc
mov
adc
hlt
mov
cmp
cmp
adc
ds
(bad)
dec
and
(bad)
sub
and
jno
iret
cmps
lahf
and
lahf
mov
pop
adc
push
mov
pop
pop
cs
sub
mov
push
inc
inc
mov
add
lea
pop
xor
stc
inc
pop
mov
dec
push
push
cld
cmp
js
adc
jmp
aam
(bad)
shl
pop
inc
sbb
jo
pop
es
pop
and
or
and
adc
pop
xor
sbb
cmp
mov
dec
imul
inc
or
sub
mov
pop
test
and
xchg
shl
sbb
mov
jo
rcl
fucomip
retf
push
jle
add
mov
sbb
or
sbb
adc
inc
sub
adc
push
repnz
xchg
inc
push
cdq
enter
push
add
pop
das
add
xor
adc
add
add
loope
and
adc
pop
pop
adc
or
dec
ret
push
add
pop
(bad)
hlt
jno
fs
mov
dec
pop
push
add
inc
rcl
les
enter
or
cmp
xor
add
icebp
or
aam
std
push
call
in
popf
pop
cs
sbb
(bad)
daa
xor
jmp
mov
jnp
inc
push
ret
or
push
pop
inc
int3
push
cmp
add
adc
or
jo
mov
call
mov
or
dec
sbb
in
mov
mov
test
xor
adc
rcl
add
or
fbstp
retw
mov
and
shr
bound
push
inc
sbb
enter
sbb
ror
push
push
icebp
xor
cwde
sub
or
xor
and
ret
xor
sahf
pop
adc
push
mov
call
aam
add
xor
pop
pop
sbb
jb
test
dec
inc
mov
sbb
sti
mov
repnz
or
aad
lock
mov
push
cs
and
mov
cmp
sbb
dec
sub
xor
cmp
dec
rcl
jp
pop
and
add
sub
or
dec
test
or
fisttp
scas
es
pop
or
jne
nop
je
jg
mov
or
shl
push
ror
iret
and
cmps
test
push
outs
shl
add
inc
adc
xchg
cmp
faddp
sbb
clc
add
(bad)
cdq
iret
xchg
idiv
(bad)
jge
fild
fadd
xchg
dec
jecxz
fcmovbe
mov
popf
out
fld
sub
shl
add
or
sub
mov
fadd
and
(bad)
(bad)
outs
adc
mov
pop
dec
out
jmp
out
pusha
aaa
push
ins
inc
xor
out
xchg
fld
mov
jo
sbb
inc
lock
xor
(bad)
dec
out
outs
setb
xlat
xchg
les
push
test
or
lods
push
ret
iret
push
sub
movs
push
test
cwde
or
retf
mov
call
and
jmp
push
jmp
or
adc
shl
or
push
cmp
inc
push
jl
fmul
or
jmp
mov
and
and
push
pusha
mov
adc
pop
sbb
inc
jne
push
icebp
add
ficom
shl
sub
or
adc
xchg
push
sbb
pop
push
mov
adc
(bad)
or
fld
(bad)
in
popa
sub
xrelease
sbb
adc
jl
mov
sbb
add
dec
mov
mov
fistp
or
cmovb
xchg
or
or
call
in
push
(bad)
movs
and
repz
loope
xchg
or
lds
mov
jmp
cmps
xor
imul
and
scas
inc
and
adc
mov
cmps
mov
or
or
and
retf
push
lock
jne
cmc
mov
shl
sbb
mov
rcr
inc
and
mov
mov
push
and
or
push
test
or
sbb
ins
ficom
or
sbb
adc
add
or
and
jbe
add
add
fs
or
add
popa
sub
pop
into
dec
dec
fsub
test
and
sbb
adc
cmp
ins
push
(bad)
cs
mov
add
mov
es
mov
pusha
add
dec
push
clc
retf
push
rdpmc
neg
test
lea
or
inc
outs
or
sub
sbb
jg
mov
jmp
pop
jle
push
in
jb
pop
push
dec
dec
or
neg
mov
cmp
jb
ss
cs
aam
inc
adc
dec
loopne
and
jb
push
adc
xchg
inc
scas
cs
and
inc
sbb
(bad)
jmp
cmp
push
adc
or
xchg
dec
movs
push
sub
and
xchg
cwde
inc
sub
xor
pop
ret
add
or
mov
add
stc
outs
pop
hlt
sbb
dec
inc
and
bnd
lock
cs
int3
and
or
and
sbb
shl
and
mov
int3
movs
sar
jge
pop
xor
add
inc
sbb
and
ss
inc
sub
lds
rcl
clc
xor
jbe
sub
cld
lock
push
daa
test
and
push
clc
push
loop
mov
push
xor
loopne
and
mov
add
cmp
cld
aas
mov
cmc
or
mov
sbb
test
xchg
nop
or
and
sbb
and
ret
in
sbb
jo
jl
or
and
add
fisttp
nop
or
jns
xchg
retf
dec
add
xlat
sbb
push
dec
push
xchg
mov
leave
jne
scas
nop
mov
xchg
jne
mov
outs
or
nop
sti
loopne
cdq
adc
mov
xchg
mov
dec
dec
clc
mov
js
mov
mov
add
adc
cmp
sub
lods
and
mov
push
mov
shl
cmp
lahf
inc
mov
(bad)
daa
popa
das
sbb
sub
or
lock
dec
adc
rcr
out
fcom
fnstsw
neg
aam
inc
add
fsub
fcomp
fnstsw
fstp
inc
rcr
add
push
ins
fstp
add
dec
shr
call
enter
pop
fdivr
mov
int3
fiadd
ret
push
adc
ud2
addr16
xchg
fld
cmps
pop
add
push
push
cmps
es
ins
(bad)
int3
or
enter
pop
mov
dec
enter
jnp
or
add
rol
mov
xor
inc
lods
jp
sbb
jne
adc
jns
jb
add
add
xchg
inc
mov
jae
add
jo
fsub
lds
xchg
sbb
push
mov
call
inc
sbb
loop
scas
into
sub
jecxz
mov
and
mov
leave
pusha
or
fwait
push
pop
mov
xchg
xor
pop
mov
popa
pop
lods
mov
pop
or
pusha
sub
int
add
inc
(bad)
sbb
or
mov
test
(bad)
aad
loopne
test
aaa
int
sbb
mov
sub
data16
mov
out
and
xor
out
std
adc
in
xor
xchg
inc
int
adc
ret
adc
add
cmps
imul
xor
xchg
shl
mov
ror
mov
jge
out
push
in
add
mov
or
push
xor
push
push
mov
xchg
out
jge
mov
pop
or
js
jle
adc
jmp
rol
js
push
call
je
inc
aas
push
rol
stos
bound
ins
cmp
push
sti
pop
ins
xchg
add
push
dec
push
movzx
(bad)
mov
cmp
imul
je
cmp
inc
stos
lock
fcmovu
pop
jp
jmp
and
pusha
jae
(bad)
jbe
je
jno
and
shl
inc
jns
in
mov
adc
rol
hlt
jle
imul
repnz
inc
add
pop
push
or
sbb
hlt
add
sbb
add
in
jmp
inc
dec
sbb
jmp
or
pop
imul
push
les
cs
push
fimul
xchg
sahf
jo
je
jecxz
xchg
imul
dec
call
pop
sub
retf
or
or
mov
out
mov
sub
mov
pop
lds
inc
adc
or
fld
sahf
sbb
and
mov
data16
xchg
push
lds
pop
xchg
je
jb
pop
jno
jmp
jl
or
ins
ror
and
loope
xor
pop
xor
outs
jmp
cmps
data16
xchg
mov
xor
add
loop
icebp
mov
sbb
and
(bad)
ins
or
pop
add
shr
sub
lds
pop
lea
clc
push
mov
jnp
jg
add
jae
loopne
inc
cwde
or
ror
dec
inc
into
(bad)
xchg
test
add
stc
xchg
add
call
xchg
mov
pop
and
test
addr16
mov
xor
inc
shl
cmp
or
sbb
pop
mov
cwde
cld
daa
add
call
push
or
inc
cmp
scas
test
sbb
js
mov
mov
mov
shr
dec
jns
xor
fild
test
pop
and
push
mov
adc
push
cmp
cld
or
inc
and
xor
cmp
cli
pop
lock
inc
inc
inc
iret
loop
adc
adc
xchg
and
dec
loope
push
dec
call
cmp
out
sub
pop
push
lea
int
sbb
adc
mov
jae
icebp
neg
push
or
cmp
jl
or
jle
and
cmp
je
and
push
dec
lock
sub
jmp
sbb
ins
dec
or
jmp
cmp
push
nop
(bad)
mov
mov
xor
cld
sbb
fldcw
fidivr
pop
adc
and
sub
arpl
fmul
js
aam
and
cmp
jae
push
adc
sub
data16
sub
pop
loopne
jmp
dec
in
push
mov
hlt
scas
jge
and
jbe
jns
dec
or
inc
rcr
inc
movs
iret
or
in
mov
jmp
cmps
or
push
jmp
push
cmp
xchg
ret
dec
sbb
jecxz
adc
bound
inc
or
retf
outs
sub
jg
ds
cmp
cmp
sbb
or
call
pop
mov
mov
jl
call
add
inc
or
sbb
shr
jne
push
pop
ja
add
add
add
adc
pop
pop
jmp
lods
push
addr16
inc
popf
and
je
xchg
adc
out
inc
daa
pusha
cld
sub
adc
mov
mov
icebp
add
dec
xchg
in
call
pop
or
inc
fisubr
int
dec
adc
inc
lock
xchg
add
aam
xchg
shl
xchg
rcl
lock
loopne
dec
neg
add
xor
cs
push
dec
in
jns
aaa
xor
(bad)
pop
push
or
or
jno
xor
addr16
call
sub
push
aam
add
or
iret
inc
or
or
jae
xchg
adc
sub
mov
cmp
mov
or
inc
inc
or
xchg
movs
inc
xor
or
add
sub
mov
test
test
mov
pop
out
js
sahf
pcmpgtb
pushf
in
cmp
adc
and
nop
jo
shl
movs
xor
jo
dec
call
ss
nop
xor
or
into
xchg
cmp
xchg
add
stos
aad
pop
sahf
ret
loopne
js
or
popf
adc
ds
add
mov
inc
inc
mov
push
je
ror
mov
ins
push
and
pop
cdq
inc
cmp
jl
scas
les
sbb
and
rcl
fsub
lea
and
fcomp
call
jle
cmp
in
push
cmps
sbb
sub
repz
push
call
and
lar
or
jne
jp
add
push
sbb
loope
inc
in
sbb
push
call
add
or
ret
fs
inc
push
lahf
lds
push
adc
movs
pop
lock
lea
or
cmp
add
add
or
daa
inc
movs
bound
or
dec
jne
cld
mov
xor
pop
add
call
neg
mov
fst
push
fwait
inc
xor
adc
xchg
pop
jb
mov
cmp
in
inc
sbb
shl
sbb
xchg
xchg
pop
and
and
mov
iret
int3
add
nop
ss
stc
lea
add
jo
outs
jle
jns
add
jmp
bound
sub
xchg
lea
mov
cmp
lods
add
out
call
and
fidivr
jmp
cmp
mov
dec
xor
jecxz
repz
push
mov
jecxz
js
fist
adc
push
ins
movs
sbb
cmp
fadd
push
push
adc
jae
cmp
rcr
mov
sub
(bad)
(bad)
xchg
into
xchg
xchg
jp
rol
add
adc
aaa
mov
hlt
dec
retf
cmp
push
add
add
retf
aam
mov
sub
retf
lods
sub
loop
inc
aaa
cmp
js
scas
loope
mov
jle
mov
or
jnp
jnp
test
out
je
or
sti
sbb
iret
jne
sub
pop
fcom
sub
sub
inc
rcl
inc
sar
movs
xchg
mov
rol
(bad)
dec
adc
xor
or
mov
or
test
repz
or
push
cmp
add
cmp
add
xor
and
in
test
xchg
jae
test
test
sbb
sbb
mov
pusha
ins
divps
in
add
inc
nop
fnsave
xor
or
pop
cmp
jo
cmp
jo
(bad)
enter
or
in
mov
adc
add
sahf
xchg
je
cdq
add
sub
push
or
rcl
ret
(bad)
je
add
loopne
add
lock
loopne
clc
je
mov
inc
aaa
ror
loopne
push
clc
ins
hlt
push
retf
push
out
xor
add
cld
mul
jp
cs
hlt
push
push
jnp
push
and
out
mov
mov
mov
jo
inc
in
cmp
neg
adc
mov
xchg
push
int
push
add
rol
cmp
shl
xchg
fmul
mov
ret
xchg
adc
dec
fcom
jns
adc
or
xchg
adc
cmp
cmp
xchg
push
mov
mov
mov
shr
mov
dec
add
mov
jo
call
pop
dec
dec
aam
xor
pop
enter
cmp
les
sub
les
inc
mov
fisubr
sub
mov
mov
fdivr
retf
jns
aaa
stc
aas
mov
xor
xlat
movs
and
cs
sbb
and
mov
or
enter
xlat
or
mov
test
or
sub
and
pop
gs
and
push
push
sub
xor
ror
aad
mov
stc
pop
(bad)
jmp
ins
add
movs
xor
cmp
enter
mov
inc
(bad)
push
pop
dec
or
inc
ss
add
add
sbb
and
inc
stos
xchg
movs
xchg
xlat
je
jecxz
bound
popf
sbb
jbe
sbb
popf
or
in
dec
push
add
sbb
popf
sbb
scas
or
inc
stos
ret
scas
sbb
jp
adc
mov
mov
xchg
and
mov
in
cmp
add
sbb
sub
test
jmp
sub
cmps
adc
and
adc
cli
or
inc
add
or
push
mov
cli
adc
fimul
sbb
jge
cli
mov
xor
add
mov
mov
lods
sbb
adc
mov
add
clts
popa
inc
inc
lods
(bad)
js
or
shl
cmps
mov
adc
push
or
inc
and
shl
pop
int3
or
add
ss
or
add
or
(bad)
popa
dec
or
push
enter
fwait
jle
or
xchg
ins
mov
add
fistp
cmp
cmp
add
mov
push
into
rcr
mov
dec
push
sub
xor
call
cmp
fsubp
xor
adc
lock
adc
inc
test
adc
push
adc
icebp
or
sub
aaa
and
jo
xchg
movs
shl
aas
and
test
mov
or
xchg
shl
fdivr
stc
cmp
shr
sub
or
les
jmp
shl
adc
inc
mov
movs
data16
sahf
dec
call
(bad)
pushf
lea
jle
fisub
mov
dec
arpl
sub
sbb
pop
call
cmp
(bad)
ror
dec
in
gs
in
movs
push
push
call
jb
(bad)
call
cmp
aaa
call
add
ret
and
mov
dec
leave
in
add
mov
aas
jge
sub
sbb
xchg
inc
daa
and
sahf
in
test
adc
movs
add
cmp
push
jmp
push
bnd
sbb
fdivr
loopne
fidiv
movs
sbb
adc
sub
leave
cmc
dec
pop
pop
xlat
mov
repz
push
jns
mov
ss
(bad)
cmps
fmulp
mov
add
adc
sub
xor
and
inc
and
sub
add
add
bound
mov
add
mov
push
push
ficom
dec
sub
loope
and
or
sbb
mov
cmp
imul
add
fcmovnbe
mov
or
aad
sbb
fimul
push
call
mov
xor
cld
dec
imul
sub
push
or
dec
mov
or
dec
push
imul
arpl
ds
adc
push
inc
xor
add
ficomp
or
dec
push
xchg
xor
ret
sub
add
cmps
loopne
in
adc
adc
je
pop
jg
scas
ret
or
jo
out
lea
and
ss
and
xchg
xor
jmp
scas
mov
ins
bound
(bad)
adc
enter
dec
in
mov
cld
lock
cmp
lock
inc
stos
mov
cmp
add
inc
or
mov
sbb
add
and
inc
cs
mov
xor
and
xchg
dec
pop
adc
or
xor
push
lea
mov
pop
mov
movs
daa
pop
inc
and
jmp
dec
dec
dec
popf
(bad)
sub
adc
inc
inc
dec
fimul
cmp
cmp
mov
xor
and
inc
mov
and
pop
leave
add
and
push
or
shl
adc
add
adc
sbb
dec
push
jno
adc
mov
fild
and
or
cmp
dec
gs
pop
push
dec
mov
add
pop
or
or
jns
cmps
cmp
mov
setne
sbb
pop
stc
mov
(bad)
fdiv
jo
inc
dec
inc
pop
fisttp
andps
or
or
adc
addr16
sbb
loopne
data16
sbb
imul
add
jbe
rol
xlat
push
sbb
jo
cmc
adc
mov
mov
push
popf
popa
popf
push
pop
lahf
mov
sbb
inc
push
rol
mov
add
push
call
rep
fwait
jne
ds
call
jmp
call
in
dec
dec
in
lock
cmp
xor
retf
add
into
int3
or
fimul
or
or
push
imul
or
je
xor
and
xchg
add
mov
add
and
xchg
add
dec
mov
sahf
retf
in
add
push
call
movs
ret
sar
jbe
xor
push
push
cmp
inc
adc
loopne
pusha
sbb
in
push
inc
in
imul
mov
push
aas
add
add
sub
imul
daa
inc
sub
or
add
lods
and
lods
add
push
addr16
scas
add
xchg
bound
cli
sbb
or
(bad)
gs
mov
and
pop
pushf
adc
ss
xchg
outs
inc
adc
adc
jbe
xchg
or
neg
jne
sub
dec
popa
dec
cmp
fimul
ret
mov
xor
aas
cli
xchg
dec
ins
jb
adc
push
loope
sbb
or
loop
and
enter
ins
loope
(bad)
cld
jg
add
push
push
and
pop
inc
inc
adc
xor
sbb
js
in
cmc
xor
fbld
sbb
push
inc
clc
aas
(bad)
jg
add
pusha
jl
leave
cmp
jo
outs
mov
mov
stos
mov
pop
push
adc
push
mov
mov
jl
or
push
cmp
mov
(bad)
stos
daa
popf
add
add
mov
(bad)
lock
(bad)
cmp
popf
into
cli
clc
push
cmp
push
mov
inc
sbb
pop
add
(bad)
sub
sub
or
jae
mov
imul
inc
stos
and
or
sbb
ds
push
push
and
adc
in
fist
stc
mov
test
pop
sbb
mov
and
test
nop
push
inc
out
fist
add
cs
pop
mov
dec
movs
lea
ins
xor
shr
and
jo
jno
loopne
mov
mov
int3
adc
sbb
adc
sub
jmp
push
adc
xor
movs
and
and
mov
fiadd
lods
mov
ds
loopne
ins
fistp
inc
xor
xor
xor
cmp
xor
add
xchg
dec
cmp
jne
or
xchg
push
fisttp
jl
mov
mov
pop
clc
dec
loop
cmp
jmp
add
jl
mov
xchg
pop
clc
fcomp
mov
or
push
cdq
ficom
nop
inc
sbb
daa
mov
mov
mov
test
inc
mov
ret
adc
and
inc
cmp
push
fwait
test
pop
xor
xor
scas
push
test
ret
cld
mov
fs
xchg
xor
jb
ins
dec
js
mov
jg
pop
(bad)
lods
imul
pop
sar
inc
xchg
push
ret
add
dec
xor
mov
and
jmp
mov
sbb
and
adc
js
add
push
push
inc
das
mov
jns
dec
ja
xchg
sub
into
push
test
out
daa
iret
in
es
and
adc
push
adc
sub
popf
sub
dec
icebp
push
or
gs
add
cmp
push
mov
xor
enter
adc
inc
popa
pop
sbb
sub
push
adc
in
leave
and
cmp
push
jmp
cmp
pop
add
sub
cmp
cmp
jmp
test
lods
lea
sbb
and
ficomp
mov
add
and
nop
frstor
mov
pop
movs
inc
dec
ds
inc
push
jnp
lods
stos
add
or
pushf
fcom
(bad)
sub
mov
arpl
clc
adc
push
push
push
popa
push
addr16
mov
sub
lock
dec
sbb
inc
xlat
ins
mov
adc
sub
stos
mov
dec
and
ss
lds
push
xor
and
adc
call
or
xor
cmp
stc
(bad)
lea
imul
popa
aas
sub
fnstcw
pop
fadd
fdiv
xchg
inc
repnz
inc
clc
xchg
in
pop
or
call
and
mov
pop
push
or
jecxz
loopne
jb
sub
sar
movs
fiadd
add
mov
adc
mov
cmps
or
xor
pop
loope
rol
mov
imul
or
and
inc
les
icebp
ins
cmp
mov
pop
sbb
xchg
fdiv
loope
or
aaa
shl
jae
jle
inc
in
jp
or
push
rcl
retf
arpl
add
inc
xor
dec
mov
das
sar
dec
cs
or
cmp
mov
outs
push
enter
mov
or
add
dec
adc
add
xchg
inc
inc
into
push
test
aam
sub
test
aam
(bad)
rol
hlt
jb
cmp
cwde
push
adc
add
cs
xchg
je
lock
or
and
push
or
sub
push
dec
stos
data16
mov
add
push
lods
adc
sbb
ss
sahf
mov
add
scas
movs
icebp
mov
adc
div
ret
sub
pop
je
mov
int3
sbb
cld
cdq
adc
pop
add
push
and
jl
pusha
fdiv
mov
js
bsf
mov
les
cmp
lods
sub
mov
jmp
add
add
jmp
and
repz
or
inc
push
mov
ins
dec
in
add
sbb
jae
sti
push
dec
sub
or
cmps
jae
stos
mov
imul
mov
(bad)
(bad)
mov
ror
js
je
and
adc
xchg
sub
add
push
loopne
mov
pop
dec
test
je
cmp
mov
mov
add
jb
clc
inc
mov
mov
xor
sub
adc
dec
(bad)
rcl
inc
pop
jae
push
add
add
and
inc
adc
repnz
mov
dec
pop
scas
inc
or
push
mov
call
or
xor
and
ja
inc
push
push
je
popa
push
pop
fadd
or
popa
dec
enter
aaa
push
mov
xchg
jmp
lds
or
or
mov
arpl
in
sbb
xor
ret
adc
xor
adc
xor
xchg
mov
push
jo
pop
fwait
inc
jle
les
mov
sub
mov
pusha
or
mov
call
mov
add
mov
jecxz
sub
mov
or
add
sub
xor
mov
repnz
pop
dec
push
or
shr
jo
push
mov
jns
ins
arpl
test
retf
xor
add
test
shr
sbb
(bad)
jg
sti
leave
shr
je
push
fmulp
jmp
ds
jge
fdivrp
ret
fstp
movs
lock
mov
fisubr
add
xchg
and
pop
clc
mov
xchg
or
cmp
add
(bad)
loop
mov
clc
cmp
jecxz
add
add
push
and
arpl
sub
inc
movs
(bad)
fidivr
push
adc
imul
(bad)
adc
dec
or
jmp
pop
jb
test
in
sub
cmps
adc
mov
sbb
call
mov
(bad)
xor
adc
push
push
xor
adc
and
push
das
adc
cmc
mov
add
adc
xor
and
add
sbb
mov
push
adc
out
daa
cdq
inc
jbe
jo
mov
pop
cmp
fisttp
pushf
jg
push
or
loopne
scas
cmp
mov
loope
in
and
push
adc
inc
inc
mov
xchg
clc
push
xor
sti
mov
daa
test
and
inc
sti
mov
cmp
xor
daa
lock
xor
ss
xchg
cmp
mov
push
pop
jne
fldcw
fdivr
xor
imul
add
sbb
(bad)
push
mov
push
stos
sub
loopne
ja
std
xchg
xchg
mov
shr
push
add
out
out
cmps
test
aaa
push
movs
xchg
sub
or
push
or
push
out
push
call
or
inc
mov
adc
sbb
and
or
xor
test
mov
cdq
test
mov
add
fs
push
lea
shr
pop
or
or
repz
push
jle
sbb
inc
sbb
mov
xor
push
jl
ror
mov
mov
icebp
inc
mov
daa
push
lods
ins
sbb
cmp
adc
add
call
add
jle
push
xor
xor
inc
sbb
ins
add
or
aaa
and
xchg
adc
fadd
xor
in
and
cmp
mov
push
add
idiv
test
jnp
or
mov
(bad)
fcom
push
cmps
push
les
mov
popf
push
imul
and
push
dec
test
or
into
inc
loop
or
lock
mov
loope
test
xor
dec
add
aam
xchg
mov
pop
out
popa
fwait
mov
add
jno
stos
sub
ret
add
lea
cmp
popf
xor
pusha
sbb
add
cdq
inc
sub
pop
jmp
jmp
adc
cmp
push
sbb
adc
adc
xchg
or
es
test
fsubr
ins
cmp
int
xor
pop
cmps
adc
and
ins
fild
or
cmp
add
push
sbb
adc
adc
sbb
add
xchg
sar
in
push
inc
or
jb
xor
test
sbb
push
adc
adc
add
jp
out
adc
mov
sbb
and
hlt
dec
jo
adc
push
repz
movs
sar
push
loope
adc
xchg
xor
sbb
leave
ins
jle
lea
push
movs
inc
cmp
jmp
lea
add
jbe
das
inc
or
jmp
and
sbb
jo
dec
lock
cmp
or
pop
dec
rcr
mov
inc
xor
movs
ins
ror
add
push
pusha
xor
sbb
sbb
sbb
cmp
je
loop
push
push
dec
xor
into
mov
lea
sub
mov
jnp
inc
(bad)
fcmovb
adc
in
js
gs
adc
or
jmp
xchg
arpl
push
je
push
je
mov
out
sub
or
jne
(bad)
pop
sub
pop
push
bound
push
add
pop
(bad)
pop
sbb
ds
fst
dec
xchg
push
jne
aaa
or
pop
xchg
retf
add
xchg
inc
pushf
add
or
sti
mov
add
and
push
xchg
cdq
sbb
call
pop
bound
add
pop
cmp
add
xchg
jbe
inc
in
xchg
dec
out
dec
xor
add
ss
retf
ret
scas
xor
test
loope
push
inc
loope
pop
enter
dec
jmp
cmps
cmp
xchg
and
jge
jb
popa
scas
lahf
les
lea
movs
cdq
in
mov
test
shl
add
push
push
cdq
or
in
push
mov
push
sbb
xor
push
and
fnsave
inc
mov
retf
mov
test
test
sub
sbb
(bad)
add
sub
jge
cmp
out
push
mov
push
jmp
mov
adc
sbb
or
retf
jbe
and
dec
and
or
cmc
or
dec
test
stos
js
push
(bad)
test
ss
test
jecxz
or
inc
xchg
cmp
jmp
ss
out
iret
and
jmp
pop
je
jle
cmp
aas
sub
jmp
pop
je
cdq
jo
std
or
je
sub
jmp
clc
ret
pop
cmp
sub
je
popf
inc
xor
(bad)
jbe
sbb
sbb
add
add
nop
sub
or
ret
int3
add
movs
add
ja
or
fwait
aam
cmps
inc
sbb
mov
or
(bad)
in
pop
add
jo
leave
dec
push
add
repnz
add
push
add
add
push
add
xor
push
leave
rcr
add
add
xchg
dec
add
and
cli
cmc
xor
or
call
sbb
sub
sbb
ret
sub
xchg
jo
test
push
rcl
mov
lods
fsub
ficomp
push
adc
add
pop
inc
dec
xchg
add
and
ins
sub
sbb
push
mov
arpl
inc
enter
xchg
js
mov
fwait
or
adc
sbb
arpl
jns
pop
sub
ins
or
mov
add
inc
not
dec
nop
or
clc
push
sub
fdivrp
in
ror
data16
loope
sbb
mov
and
sub
adc
nop
iret
inc
xor
pusha
sbb
add
jae
jbe
push
pop
sbb
loop
mov
ja
inc
cmp
ja
add
add
test
dec
cli
jae
fdivr
sub
push
or
nop
mov
das
mov
pusha
or
(bad)
sti
movs
push
arpl
adc
lock
in
test
je
or
jnp
shl
repnz
outs
push
inc
sbb
call
arpl
loop
jae
sar
test
and
idiv
pop
je
or
pop
(bad)
fdivrp
mov
ret
cmp
jbe
push
mov
je
xor
addr16
cmp
jne
jbe
and
loopne
mov
dec
jp
jmp
push
dec
push
mov
inc
inc
(bad)
icebp
xor
push
cmp
in
(bad)
jns
shr
inc
push
out
add
and
sbb
idiv
push
pop
les
mov
into
add
xchg
pop
adc
dec
mov
push
xor
and
adc
sub
cmp
inc
jmp
mov
test
xor
les
mov
cli
adc
push
(bad)
and
jae
rol
mov
cmp
into
and
or
out
or
inc
xor
push
or
in
sbb
mov
jb
je
mov
scas
idiv
xor
pop
test
inc
mov
cmps
xchg
sbb
in
sbb
inc
daa
xlat
and
dec
cmp
and
les
js
iret
adc
pmulhw
sub
push
and
fmul
inc
push
adc
sbb
cdq
inc
sbb
xor
aam
hlt
fs
iret
(bad)
cmp
mov
push
sbb
pushf
shl
xchg
dec
adc
or
xchg
cmps
mov
call
push
sahf
or
mov
push
lods
fbstp
mov
and
pop
pushw
sub
mov
mov
retf
invd
push
push
sbb
xchg
push
rol
stos
aam
xor
or
push
xor
pusha
retf
in
cld
(bad)
fimul
xchg
jmp
cs
xor
mov
mov
add
adc
fild
mov
mov
adc
jp
outs
push
test
fisttp
or
add
pop
sub
dec
adc
call
add
mov
inc
and
and
js
retf
inc
mov
loopne
loopne
ret
fs
in
push
ret
inc
push
cmps
mov
adc
inc
bound
pop
(bad)
dec
and
mov
mov
sar
arpl
gs
ret
sar
mov
adc
adc
push
repz
addr16
xor
adc
mov
sbb
jne
jecxz
stos
mov
push
or
lods
inc
adc
mov
popa
repz
mov
inc
push
dec
xor
push
pop
pop
jno
popf
(bad)
mov
std
adc
daa
or
in
and
add
add
mov
adc
daa
or
aaa
dec
mov
xor
std
adc
xor
push
pop
fstp
out
popf
data16
mov
and
add
add
mov
call
movs
test
lea
xor
inc
fcom
xchg
dec
loopne
and
pop
or
adc
push
leave
(bad)
sahf
(bad)
mov
sub
push
stos
repnz
loope
mov
adc
or
inc
mov
jae
sar
xor
lods
icebp
mov
or
dec
in
pop
xor
push
sbb
loopne
or
in
or
inc
adc
mov
ret
fstp
lock
mov
sbb
inc
inc
push
jb
adc
jmp
ds
mov
cli
mov
jo
in
and
test
pop
mov
or
cmp
js
xor
mov
jne
mov
xchg
or
lods
test
jg
cs
jns
xchg
fst
test
int
test
ins
sub
sbb
push
fcom
lods
cmc
bound
dec
jmp
sbb
dec
push
add
push
sbb
sbb
jo
add
mov
sub
pop
pop
inc
sahf
add
loop
mov
ret
nop
stos
xchg
or
sbb
repz
jmp
push
push
imul
sbb
shr
mul
push
inc
mov
pop
xor
ret
push
inc
pop
nop
adc
in
push
inc
jo
into
add
add
cmp
cmps
arpl
daa
bound
xor
jb
and
mov
mov
adc
add
and
cmp
adc
mov
sbb
xor
add
add
je
or
push
inc
or
shr
adc
sbb
nop
sbb
sbb
bound
pop
enter
sub
popa
test
iret
or
push
adc
or
add
and
pop
sar
adc
sbb
mov
fdiv
push
(bad)
sub
jmp
fcom
mov
xchg
push
and
mov
jbe
pop
hlt
adc
sbb
push
adc
push
ins
jae
mov
add
or
cmp
or
addr16
(bad)
stc
add
mov
and
inc
movs
inc
mov
or
push
pop
fisub
scas
mov
sub
cmps
or
lock
adc
ss
or
fisub
add
adc
xchg
add
js
and
fimul
add
push
jge
inc
loopne
mov
out
mov
xlat
inc
rol
or
popa
add
test
mov
mov
push
mov
add
dec
xchg
xor
push
test
jecxz
inc
mov
mov
mov
inc
xchg
lock
call
sbb
shr
jl
or
mov
and
cmp
inc
cdq
add
and
iret
add
add
sbb
into
jl
es
mov
or
or
lds
jb
test
push
dec
repnz
dec
inc
push
xchg
adc
push
sub
dec
mov
or
or
pop
loopne
loopne
sub
dec
or
movs
movs
je
sbb
loopne
xor
inc
or
and
sub
fadd
pop
jb
lods
add
retf
inc
or
movs
add
mov
pop
mov
or
ja
sbb
cs
aas
pusha
fsubr
xor
fwait
pcmpgtw
daa
test
xchg
out
adc
call
cld
dec
cmp
adc
cwde
sub
sbb
xor
(bad)
jo
lahf
dec
jne
cmp
sub
outs
or
cmp
inc
xchg
add
add
fwait
into
inc
push
mov
rol
xor
inc
es
add
mov
adc
sub
ret
inc
mov
outs
push
xor
inc
and
je
pop
xchg
aas
inc
hlt
add
clc
sbb
push
inc
mov
inc
ja
sbb
cmp
test
add
sbb
retf
and
mov
inc
jp
daa
sub
mov
data16
fist
adc
mov
xchg
dec
pop
pusha
or
in
movs
mov
jb
data16
push
sbb
inc
push
sub
jmp
mov
icebp
sbb
imul
pop
add
adc
push
dec
push
xlat
xchg
cli
push
aaa
ret
jmp
push
jmp
push
lds
clc
cmp
fnsave
inc
sbb
arpl
mov
push
test
div
pop
mov
add
int
xchg
inc
xchg
xor
pop
sub
jecxz
xor
sbb
xchg
cmps
shl
and
cmp
inc
mov
popf
es
xchg
sti
add
mov
add
(bad)
pop
(bad)
mov
xor
xor
std
(bad)
xchg
sbb
pop
adc
test
lods
sbb
pop
mov
leave
mov
xchg
xor
pop
push
pop
or
sub
dec
push
xor
shl
cmp
push
mov
icebp
add
xchg
sbb
push
movs
dec
pop
push
pop
and
jo
inc
(bad)
xchg
inc
scas
and
mov
inc
xchg
add
or
ret
pop
push
sub
and
movs
movs
fistp
shl
movs
stos
int3
movs
rcr
adc
enter
mov
cwde
cmp
ret
pop
cmp
inc
jae
dec
jge
push
inc
and
and
add
(bad)
xlat
fdivr
adc
rcl
and
add
shl
push
fdivr
and
fucomp
push
inc
jle
or
add
pop
pop
pop
daa
in
add
push
xchg
mov
mov
js
cld
fild
and
mov
gs
not
or
imul
lods
push
jle
cmp
jne
shr
sbb
mov
add
pusha
(bad)
add
sar
pop
les
adc
sub
rcr
cmps
(bad)
leave
jne
(bad)
lahf
test
and
fild
pop
and
sub
mov
fwait
sub
scas
xchg
loope
pop
test
imul
ret
sub
xor
dec
movs
xchg
loopne
pop
inc
sub
jp
test
push
jne
mov
test
sbb
and
mov
loope
ret
xor
inc
jmp
sbb
adc
pop
arpl
cmp
cmc
jecxz
fwait
fs
sub
(bad)
and
(bad)
xor
or
or
jmp
lea
add
inc
or
(bad)
call
hlt
cdq
mov
sub
in
sub
dec
adc
lods
jmp
adc
call
or
jecxz
bound
dec
mov
inc
add
or
push
ror
ret
cmp
add
jno
ins
push
push
repnz
sbb
or
lds
or
sbb
or
jp
xchg
test
arpl
pop
dec
sbb
sahf
dec
fisubr
push
push
adc
pop
into
mov
or
pop
lods
retf
add
ds
adc
out
jl
push
mov
and
xchg
ret
mov
inc
mov
mov
inc
inc
ret
sbb
xchg
push
adc
(bad)
xor
add
cmp
rcr
and
mov
or
push
mov
(bad)
pushf
xlat
in
daa
or
gs
int3
mov
sbb
fst
(bad)
or
and
outs
xchg
jns
aas
movs
cdq
mov
lds
lock
dec
call
inc
push
adc
je
push
sbb
xchg
and
or
fst
dec
xor
loopne
add
test
aam
das
dec
loope
fadd
shl
cmp
or
ins
xor
fstp
in
mov
in
adc
loopne
adc
jbe
push
inc
inc
enter
and
cmps
mov
rol
shl
jmp
cmp
fcmovnb
sar
scas
add
mov
loope
push
leave
fs
xor
mov
add
dec
push
repnz
or
push
xor
mov
ds
(bad)
mov
jmp
rcl
enter
test
xor
sbb
sbb
call
call
sub
inc
adc
std
or
or
mov
push
fiadd
adc
xor
(bad)
mov
in
(bad)
cmp
and
ss
xor
jno
jbe
outs
test
lods
and
clc
push
push
jno
test
xor
adc
cmp
push
push
jne
dec
call
cmp
jne
mov
mov
mov
ja
sbb
lods
push
xchg
and
pop
pop
jns
fsub
fsub
sub
shr
and
std
mov
jnp
and
sub
sbb
jp
sbb
mov
mov
add
xchg
pop
xor
pusha
mov
push
mov
inc
or
fs
nop
and
pusha
pop
mov
jecxz
test
loopne
adc
xor
fadd
int
or
mov
pop
push
shr
loope
or
cmp
int3
xchg
lock
out
adc
sub
bnd
add
ret
jae
in
mov
rcr
mov
add
cmp
(bad)
(bad)
ret
dec
sub
loope
or
and
lahf
adc
inc
cmp
add
ins
or
aam
cdq
js
adc
add
inc
js
mov
xchg
or
jmp
lea
cli
add
add
int3
test
and
add
in
and
leave
pop
xor
mov
sbb
inc
sub
and
mov
test
xor
sub
addr16
inc
popa
and
in
lds
sub
cmp
sub
pop
adc
pop
fsubr
pop
neg
xchg
repnz
ss
push
push
jno
cmp
sbb
mov
xchg
stos
(bad)
jmp
aas
sar
add
test
daa
mov
popf
xchg
rol
cs
rol
adc
jmp
add
sub
scas
add
adc
xor
cmp
mov
jle
cmp
cmp
jmp
pushf
dec
cmp
jg
(bad)
test
xchg
retf
sbb
(bad)
fst
ret
and
mov
pushf
sub
add
adc
or
sar
add
jae
test
dec
fimul
popa
cmp
and
retf
xchg
xor
xor
add
bound
cmp
div
ins
stos
jnp
pop
push
add
fisttp
push
js
clc
rol
ret
retf
dec
add
pop
adc
pop
das
adc
retf
mov
add
jno
mov
popa
inc
xchg
push
push
xchg
or
mov
or
stc
or
mov
or
mov
add
movs
ret
fidivr
aas
push
lods
xchg
mov
cmp
mov
jg
mov
mov
ja
lahf
add
pop
pop
adc
nop
or
cmp
popa
inc
adc
mov
and
imul
cmp
test
aam
loope
cmp
icebp
and
mov
push
test
add
or
imul
jae
xchg
or
xchg
or
(bad)
dec
xor
mov
out
sbb
adc
sub
cmp
or
sbb
or
mov
dec
and
bound
xor
add
inc
and
ret
xchg
and
xor
xor
sub
push
sub
add
adc
inc
mov
and
mov
imul
push
adc
xchg
nop
sub
rcr
sbb
movs
cmp
dec
loopne
mov
shl
in
xchg
gs
sub
xor
fist
xor
(bad)
je
hlt
popa
movs
pop
fwait
pop
push
hlt
js
jmp
(bad)
bound
rcr
xor
pop
cdq
in
jmp
aaa
and
and
loope
je
and
js
es
adc
sbb
sub
shl
xchg
es
push
mov
push
add
dec
hlt
fcom
cmp
mov
inc
jmp
and
jns
outs
sub
xor
mov
push
daa
lods
fisttp
setb
push
push
and
adc
mov
ja
mov
or
sbb
jbe
gs
retf
xor
lods
mov
pushf
add
inc
jmp
sbb
fcomp
enter
popf
fidiv
pop
jp
mov
mov
arpl
xor
inc
sbb
add
add
jmp
pop
retf
push
imul
shr
arpl
adc
push
jns
push
push
js
push
add
pop
outs
sbb
cld
pusha
fsub
inc
loope
nop
jnp
fld
sub
scas
inc
add
adc
(bad)
rcr
loopne
cmp
add
pusha
or
xchg
push
add
add
or
lods
and
dec
and
js
mov
rcr
push
and
sbb
sbb
sub
add
dec
arpl
add
cdq
nop
(bad)
dec
iret
test
pusha
and
cmps
cdq
fist
jo
add
xchg
xchg
and
retf
pop
cmp
jbe
add
cld
xchg
movs
mov
nop
mov
pop
mov
add
mov
repnz
xchg
or
pop
je
and
cmp
jge
jg
dec
jl
ss
push
adc
or
push
mov
xor
lods
in
aaa
add
sub
in
add
push
(bad)
ss
or
sbb
xchg
pop
sub
cmp
or
or
cmps
shl
sub
or
sbb
or
push
movs
adc
sbb
adc
lds
dec
loop
aad
or
mov
sub
xlat
test
stos
mov
xlat
frstor
mov
jno
ret
and
dec
(bad)
dec
jmp
mov
jns
hlt
inc
pop
xlat
and
jo
sbb
mov
cs
cmp
pop
loopne
sbb
in
loopne
(bad)
or
xlat
or
leave
inc
jae
or
xor
mov
mov
cmp
lahf
shl
in
mov
movs
and
dec
(bad)
mov
jo
push
mov
imul
fld
arpl
in
loopne
or
add
sub
or
dec
(bad)
sbb
xor
jae
jle
aad
loopne
sti
mov
outs
xor
adc
int
outs
(bad)
jmp
scas
inc
nop
xchg
and
into
ror
mov
rol
and
jl
fs
mov
jle
add
and
adc
shl
xor
loope
sub
test
clc
add
jb
in
daa
push
imul
out
in
sbb
add
gs
xchg
lea
arpl
xchg
xchg
add
mov
cmp
sbb
jae
movs
dec
ins
dec
xchg
into
xor
enter
mov
mov
fadd
lods
pop
call
int3
iret
test
xor
sub
ror
js
mov
xor
cwde
jbe
sahf
push
push
xor
lods
fwait
outs
daa
jo
add
pop
push
sub
fiadd
push
push
jecxz
push
or
inc
inc
cmp
es
xchg
nop
lods
pushf
push
mov
stos
test
nop
jp
lods
dec
sub
jle
fwait
push
popa
mov
popa
or
and
mov
movs
add
int
ret
mov
push
data16
test
inc
sub
mov
je
call
test
xlat
les
(bad)
mov
inc
cmp
mov
pop
lahf
cmps
repz
test
xchg
movs
test
xchg
sbb
(bad)
ror
gs
test
sub
movups
aas
cmp
jecxz
mov
cmp
adc
push
xchg
or
mov
call
push
and
and
inc
adc
pop
pop
or
pop
mov
cs
xor
jg
jnp
ja
and
adc
dec
push
dec
push
xlat
xor
les
int
daa
add
or
ret
ins
arpl
and
and
les
cmp
je
xchg
cmp
cmps
sub
pop
xchg
pusha
cmps
scas
cmc
arpl
jne
pop
push
cmp
adc
je
aas
add
jo
movntq
movs
daa
xchg
add
lock
rol
inc
push
push
stos
in
lgdtd
int
cmp
add
or
add
sbb
push
iret
dec
jecxz
sbb
add
cmovae
arpl
je
mov
sar
pop
stc
sbb
out
xor
mov
into
push
xchg
dec
lods
stc
sub
sub
aas
popf
test
cmp
add
movs
les
dec
jae
std
sbb
jp
enter
xchg
lea
test
fst
cmp
jg
jl
mov
jno
or
push
xchg
sbb
or
retf
pop
icebp
test
or
lock
(bad)
pop
cmc
mov
dec
push
pop
add
pop
xor
jmp
sub
jne
pusha
outs
sbb
retf
jmp
xchg
add
push
xchg
or
enter
cmp
sbb
enter
push
sub
aam
fist
push
xor
cmp
cmps
mov
ret
cwde
call
or
xor
sahf
test
add
adc
cmps
jae
pop
and
test
lea
mov
out
js
xchg
jecxz
mov
push
enter
and
dec
sahf
xor
pusha
pop
and
inc
popa
pop
pop
cli
frstor
push
fld
add
xchg
(bad)
sbb
sub
ret
inc
cli
xor
sub
out
xor
int3
(bad)
cmp
aaa
add
call
push
push
fcmove
dec
push
inc
push
mov
jo
jmp
sbb
cmc
jo
jecxz
je
push
pop
dec
push
pop
imul
leave
retf
sub
leave
fistp
rcr
and
sub
jne
cli
push
add
fisttp
fmul
push
push
mov
inc
inc
push
push
mov
push
jb
pushf
fnsave
inc
int3
cmp
jmp
sbb
in
pop
or
and
sbb
test
cmp
sub
adc
dec
aad
dec
mov
pop
inc
inc
jl
ins
inc
data16
xchg
jnp
je
sbb
xor
dec
add
aam
dec
or
inc
or
inc
(bad)
cmp
dec
jne
dec
inc
jmp
loope
retf
or
test
dec
pop
dec
pop
dec
fidiv
inc
pop
lods
sbb
add
push
sub
enter
jno
and
or
xchg
call
push
and
dec
inc
jbe
pop
cmp
add
outs
rol
je
popa
add
lods
mov
sub
sbb
and
dec
fldenv
movs
ficom
mov
xchg
add
push
cmc
adc
inc
jbe
fld
or
lods
in
cmp
add
enter
adc
and
adc
jmp
sub
xchg
adc
sub
ficomp
hlt
xor
pop
add
adc
add
cmp
push
add
or
jg
sub
push
push
(bad)
jne
cmp
(bad)
cmp
pop
out
icebp
mov
sub
and
cmp
mov
dec
xchg
ret
rcl
movs
push
aas
push
xchg
sbb
call
jno
push
aas
sbb
not
push
fwait
xchg
or
add
mov
add
jnp
inc
ret
inc
daa
dec
pop
mov
mov
push
inc
call
loope
enter
rcr
fiadd
jmp
mov
popa
jmp
fsub
jecxz
pop
repz
shr
leave
pop
adc
sbb
jmp
or
cmps
loope
ins
in
push
push
add
mov
adc
and
push
or
mov
dec
adc
in
xor
add
fsub
movs
inc
dec
ss
sbb
adc
and
or
ret
sbb
push
pop
pop
shl
rcr
js
lock
or
nop
aas
sar
pop
leave
(bad)
dec
cli
fmul
push
mov
mov
or
push
or
in
push
cld
add
je
rol
cmps
shl
inc
add
adc
(bad)
scas
xor
and
dec
push
pop
cld
xor
(bad)
adc
dec
daa
and
cld
xchg
test
(bad)
fcomp
lock
mov
push
mov
cwde
and
push
repz
mov
mov
adc
pop
fwait
inc
jmp
inc
stos
adc
mov
test
sub
stos
sub
xor
ror
jmp
in
je
dec
pusha
push
pusha
ret
pop
push
jmp
push
pusha
stos
mov
adc
xchg
push
in
add
xchg
inc
inc
loope
outs
mov
call
fs
sub
sbb
nop
inc
push
sbb
adc
or
and
and
dec
iret
fs
nop
and
in
xchg
cmp
addr16
cs
ss
das
lea
add
outs
xchg
inc
pop
int3
rol
mov
dec
xor
mov
mov
mov
mov
in
out
das
push
add
add
or
and
pop
retf
loopne
xor
adc
mov
outs
push
sbb
jo
mov
adc
test
dec
sbb
dec
(bad)
mov
push
push
adc
clc
outs
cmp
ja
mov
cmps
sbb
sbb
sahf
shr
jo
push
(bad)
daa
pusha
rol
xchg
cmp
jmp
jne
ins
lods
mov
mov
adc
fsub
cmp
in
lods
mov
loope
jge
enter
push
dec
and
and
sub
sub
push
push
add
mov
inc
cwde
or
and
inc
mov
rcl
mov
or
in
adc
adc
sub
or
push
push
or
mov
adc
pop
push
add
shl
gs
and
push
imul
bound
js
js
inc
fdiv
stos
adc
sbb
mov
int
sbb
push
lock
sbb
stos
movs
call
shr
ret
lea
js
je
push
jmp
ja
or
movs
mov
inc
mov
mov
adc
sub
mov
mov
(bad)
shl
test
sbb
rol
sub
fldenv
jo
and
gs
dec
pop
dec
xor
add
xor
add
pop
mov
ror
outs
retf
jp
xor
inc
sahf
in
cvtps2pd
sbb
jl
cmp
retf
xor
xchg
retf
and
add
push
hlt
(bad)
in
loop
cdq
arpl
in
cmp
push
add
or
inc
loope
sbb
imul
pop
or
dec
dec
repnz
out
xchg
add
add
and
push
mov
dec
pop
or
push
ror
mov
mov
(bad)
fcmovne
clc
inc
adc
pop
sub
cmp
cmps
cwde
or
xchg
push
test
dec
pop
hlt
and
push
jmp
ror
fild
div
xchg
sub
adc
clc
sbb
mov
push
sbb
mov
jb
jl
hlt
sbb
(bad)
jp
push
call
fnsave
mov
xchg
mov
fsub
ins
xor
cmp
or
sub
mov
or
or
xchg
xchg
lahf
and
or
or
push
adc
movs
jns
and
in
cld
inc
sub
pop
jne
and
js
sub
clc
mov
sbb
gs
dec
inc
inc
dec
loopne
push
sub
mov
fs
inc
mov
inc
add
or
add
jb
(bad)
nop
cmp
and
icebp
cmps
push
stos
mov
pusha
adc
pop
div
push
sbb
mov
push
push
dec
fwait
pop
cli
push
stc
pop
push
xchg
mov
js
push
add
je
dec
loop
cdq
mov
and
mov
xchg
cmp
jmp
jne
clc
sti
fcomp
cld
adc
cmp
jns
pop
cwde
lock
sti
retf
iret
jge
inc
lahf
xor
pop
pop
xor
adc
test
imul
movs
push
fcom
lods
dec
and
xor
cdq
into
dec
xor
adc
add
std
jmp
dec
push
pop
push
jg
adc
outs
xchg
out
test
add
push
cmp
push
ins
sub
and
push
js
or
rcl
jp
mov
mov
sub
xchg
pop
sbb
out
xchg
cmp
pop
inc
leave
pop
bound
pushf
inc
push
cmp
mov
mov
in
outs
push
add
add
jge
outs
inc
aaa
cmp
nop
imul
cmp
and
push
pop
test
ins
sbb
sub
xchg
jo
adc
scas
loopne
or
mov
adc
retw
mov
add
jecxz
sbb
int3
and
pop
aad
inc
das
arpl
and
gs
daa
mov
hlt
adc
loopne
inc
popa
push
jne
mov
xor
shl
fisttp
inc
movs
outs
jge
cmps
jno
push
xor
sbb
adc
test
pop
cmp
sbb
std
sbb
xchg
lea
je
xor
ror
jge
jge
movs
nop
or
push
sbb
retf
pop
inc
adc
aas
imul
rol
cmp
popa
sbb
sbb
and
cdq
add
pop
mov
lock
jmp
add
push
add
pop
fstp
sbb
aas
loopne
test
push
stos
mov
(bad)
pusha
mov
mov
and
push
ror
dec
mov
icebp
adc
mov
mov
retf
push
sbb
adc
pop
test
enter
and
aam
adc
and
inc
cmp
dec
pushf
add
jo
lods
mov
xor
mov
lahf
mov
jmp
sbb
adc
clc
sub
loopne
mov
inc
test
imul
addr16
jmp
jno
xor
add
cmp
or
pusha
and
adc
movs
cmp
jne
add
scas
aam
pop
lods
in
sub
and
in
jge
sbb
add
ins
mov
call
mov
stc
xor
fiadd
pshufw
sbb
loop
repz
xchg
in
dec
clc
cmp
add
in
mov
push
mov
mov
sub
pop
inc
push
es
adc
xor
cmps
loope
cmp
loopne
retf
jl
push
fnstsw
xchg
(bad)
push
icebp
adc
cmp
ja
out
shl
aas
xor
ss
cmp
jne
test
jnp
xchg
sahf
pop
push
and
int3
pop
scas
enter
pop
into
mov
adc
xor
or
push
push
dec
jae
push
pop
pop
je
dec
push
dec
adc
mov
push
pop
dec
sbb
push
call
sbb
mov
jmp
jmp
dec
imul
(bad)
mov
in
inc
mov
sbb
movs
pop
or
adc
and
and
imul
bound
or
push
jge
and
sbb
jne
in
imul
add
add
jmp
and
das
(bad)
fadd
mov
mov
adc
fild
stos
or
mov
push
sub
add
popa
jb
rcr
enter
and
mov
mov
sar
mov
jp
add
mov
push
mov
aam
in
outs
xor
data16
scas
retf
dec
stc
je
mov
loopne
in
out
rcl
in
sahf
out
mov
movs
int3
adc
jb
dec
fsub
xor
push
or
mov
aam
inc
cs
int3
inc
cmps
inc
add
push
movs
mov
int
and
leave
dec
inc
or
rcr
cmp
inc
push
ror
test
pop
ds
sbb
hlt
push
ds
xor
gs
das
adc
sbb
loop
movs
xor
cdq
in
jne
push
jo
adc
es
ja
pop
mov
test
ret
bound
or
inc
jmp
ins
sub
mov
adc
push
outs
or
cmp
pop
dec
or
push
mov
lock
daa
jl
loopne
pop
jmp
pop
in
enter
add
pop
das
fild
sbb
sub
jne
loopne
in
xor
or
ret
call
sar
mov
lea
dec
call
mov
lods
in
(bad)
jg
ja
mov
push
add
rcl
jbe
and
repz
and
or
lea
jmp
dec
and
add
inc
mov
and
jl
retf
or
lods
ss
push
xor
mov
in
scas
pop
jmp
mov
sbb
push
ss
or
dec
push
leave
jo
ins
call
out
push
je
and
cwde
(bad)
cld
fild
inc
pop
push
xor
nop
sbb
push
push
push
imul
shl
push
addr16
lods
test
cmp
ins
jno
movs
jb
xchg
sbb
cmc
fdiv
adc
je
lahf
out
cs
pop
out
add
pushf
je
test
retf
mov
rcl
add
aam
pop
imul
jmp
loop
mov
push
jne
pop
das
adc
jb
push
push
adc
sbb
push
test
pop
pop
(bad)
test
and
pop
xchg
stos
pop
enter
test
sbb
loopne
or
maxps
lods
rol
dec
and
fnstsw
sub
mov
inc
push
or
loopne
xor
xchg
pop
jge
pusha
adc
dec
jo
shl
mov
(bad)
push
mov
rcl
rcr
dec
lods
aad
adc
ins
jmp
nop
push
and
add
jmp
mov
push
pop
cmp
jmp
les
stos
test
xchg
and
jge
ins
adc
pop
loop
jge
dec
push
xchg
pop
in
cmp
jb
inc
sbb
mov
lahf
push
add
cld
cli
enter
cwde
jle
push
aas
sub
cmp
std
push
add
mov
mov
push
and
mov
mov
es
daa
push
sub
inc
in
imul
pop
sbb
ror
mov
lock
nop
dec
sahf
data16
and
sbb
test
jne
test
dec
mov
or
fdiv
push
ja
sub
push
sti
jl
dec
fsubr
adc
mov
icebp
adc
lea
leave
adc
and
or
pop
adc
sub
test
shl
mov
sbb
pop
aaa
mov
scas
sbb
inc
jbe
xchg
imul
inc
add
fstp
sub
jns
cmc
nop
jo
sbb
loope
pop
test
pop
dec
xchg
lods
pop
stos
pop
popa
xchg
clc
lods
hlt
(bad)
movs
mov
jnp
test
jns
add
adc
jge
sub
bound
cmp
mov
cmp
test
pop
(bad)
mov
cmp
add
dec
repnz
dec
and
inc
jnp
in
add
leave
and
mov
loopne
jo
sbb
jmp
leave
ror
inc
mov
leave
add
nop
sbb
fcomp
sbb
fadd
pop
movs
and
push
out
test
push
iret
or
adc
dec
cmp
inc
ret
sbb
mov
or
mov
push
adc
mov
add
pusha
shl
fsubr
cmp
push
xchg
push
dec
cwde
cmp
or
cmps
lea
and
pop
je
cmps
jo
inc
xor
sti
adc
loopne
movs
or
mov
in
sbb
or
aaa
mov
dec
xor
jp
xor
push
das
enter
push
xlat
cmp
aaa
add
test
xor
and
xor
jmp
jg
add
enter
ret
out
and
or
imul
xchg
mov
mov
sbb
mov
mov
adc
add
add
mov
or
sti
movs
xor
pop
mov
mov
lock
dec
(bad)
sbb
mov
adc
xchg
fdivr
adc
mov
add
mov
loopne
push
sbb
pop
dec
loopne
xchg
js
mov
clc
mov
add
fcom
ret
test
xor
and
push
dec
sub
push
aam
pop
mov
int3
jbe
push
fdiv
xchg
ret
mov
test
loope
loop
out
test
xor
xor
mov
push
fdivr
(bad)
jns
adc
lods
xchg
and
sub
dec
mov
dec
sbb
sbb
sub
adc
aam
push
mov
xor
fs
mov
stos
jl
pop
popf
dec
mov
dec
and
fimul
test
cmp
or
inc
cmp
nop
in
sbb
(bad)
in
fmul
mov
push
jnp
push
lea
bound
adc
mov
xor
loope
adc
popf
sbb
jl
add
xchg
in
aas
xchg
or
loopne
mov
or
in
inc
or
mov
and
pushf
cmp
movs
xor
jle
movs
test
sub
lock
pop
cmps
xor
jge
lods
sub
pop
aad
xor
rcl
mov
mov
imul
mov
dec
std
mov
fcomp
mov
pop
sbb
test
out
mov
int
adc
or
and
aaa
jle
mov
cld
aaa
es
movs
je
mov
sbb
sub
or
add
gs
or
push
bound
aam
stc
out
adc
add
xor
mov
pop
mov
pop
jnp
and
cwde
add
mov
xor
sbb
xor
mov
fldlg2
dec
jg
sub
adc
pop
test
stos
dec
call
dec
dec
mov
xor
or
loopne
jbe
ins
or
push
adc
pop
jl
push
xchg
and
dec
inc
mov
sbb
repnz
(bad)
cmp
and
sbb
into
dec
push
cwde
mov
clc
dec
leave
ret
or
add
imul
and
inc
inc
test
sub
and
in
or
and
or
or
ins
cld
rol
mov
sbb
ss
lds
jle
xchg
push
pop
mov
sbb
jbe
cmp
lods
adc
into
push
and
cmp
or
sub
cdq
cmc
mov
cmp
call
jmp
jl
mov
mov
gs
sub
lahf
call
loopne
adc
mov
out
cld
push
int
inc
iret
lea
fnstsw
mov
jb
xor
ret
gs
xor
inc
xchg
or
movs
bound
dec
int3
lock
test
arpl
and
or
popa
inc
push
inc
mov
xor
jnp
setns
or
movs
sbb
inc
adc
and
inc
movs
ret
sub
mov
and
jns
test
ud2
or
test
ret
and
rcl
mov
stos
xor
cs
adc
sub
pop
test
add
je
add
and
dec
pop
dec
dec
dec
sbb
mov
fwait
jbe
(bad)
or
fdiv
pop
push
mov
and
cmps
jle
mov
jne
stc
sahf
or
jns
jns
push
hlt
push
sbb
mov
(bad)
jp
or
and
dec
in
mov
sbb
sub
xchg
sub
cmp
pop
cmps
add
pop
add
mov
mov
or
add
add
mov
mov
or
push
sbb
or
dec
pop
adc
lods
sahf
mov
xchg
adc
lock
push
push
sub
mov
inc
cmps
or
sub
cmp
mov
adc
add
mov
cmc
and
jmp
push
or
add
imul
aas
inc
sbb
dec
sbb
cmps
push
adc
loope
pop
ins
or
mov
loope
mov
lock
adc
adc
rol
jmp
in
push
test
ds
stos
cmp
imul
sbb
and
cdq
xor
or
xor
call
inc
push
sub
mov
inc
pop
rcl
int
ja
push
push
push
mov
stc
mov
add
add
add
xchg
cmps
jge
adc
add
xor
inc
call
xlat
loop
add
cmp
xor
sbb
inc
cmps
loop
mov
or
mov
out
loop
(bad)
rcl
nop
call
ins
loope
sbb
cwde
and
in
test
xchg
jg
aaa
push
mov
cmps
inc
packuswb
xchg
xor
push
pop
pop
sub
mov
sbb
or
add
jns
sbb
sub
cs
xor
xor
push
dec
sub
ror
test
push
xor
push
test
push
push
push
ss
ja
cmp
add
in
jns
add
sub
cmp
jge
dec
repz
jle
or
or
cs
cmp
enter
mov
add
mov
lock
test
push
lods
mov
push
loopne
jb
jne
scas
jne
lods
sub
xor
je
adc
rol
xchg
mov
or
sub
iret
leave
and
nop
pop
sbb
iret
sbb
cmp
leave
push
add
jge
push
pusha
jb
or
dec
ins
cmp
add
nop
and
stc
or
cmp
(bad)
adc
mov
sti
movs
cdq
xchg
cmps
jle
mov
push
jae
imul
adc
push
pop
aam
mov
retf
loopne
push
xchg
mov
clc
std
or
call
pushf
int3
mov
sbb
adc
adc
and
and
test
lods
mov
test
xor
fs
and
inc
sbb
and
adc
jmp
dec
sbb
cs
xor
or
es
inc
add
cdq
ror
pop
jae
lock
mov
fsubr
and
sub
in
push
or
adc
sub
loope
inc
mov
xchg
or
rol
daa
popf
mov
sub
sub
mov
adc
add
cmp
sbb
rcl
inc
bswap
xchg
pushf
sbb
repnz
mov
mov
int
ret
mov
lods
jp
push
mov
icebp
mov
mov
dec
ja
sbb
push
push
xchg
pop
adc
call
mov
sub
sbb
jb
add
leave
rcr
jnp
sahf
das
xorps
add
mov
sbb
aam
or
and
jl
mov
push
lods
adc
mov
sbb
movs
adc
push
punpcklbw
xor
loop
jno
sbb
mov
pop
push
popf
fbstp
add
push
(bad)
cli
inc
mov
adc
push
addr16
imul
jle
add
popf
in
outs
cmp
inc
or
mov
out
test
sahf
or
mov
or
or
xor
call
or
and
or
retf
push
sub
adc
sub
ja
push
push
push
push
mov
push
mov
ja
pop
jae
je
fs
outs
jne
push
ins
or
and
pusha
mov
add
adc
mov
sbb
je
cmps
lock
test
fwait
inc
pop
dec
adc
add
stos
push
cmp
dec
mov
jecxz
(bad)
sbb
xchg
clc
fdiv
push
add
adc
test
test
popa
and
sub
push
out
or
sbb
pop
jp
sbb
mov
xchg
add
adc
cli
jne
cmp
adc
stos
adc
jbe
call
pop
rcl
push
add
inc
fidiv
pop
pop
xor
rol
adc
je
push
bound
push
leave
add
add
or
cdq
(bad)
and
lock
mov
add
sti
sub
aaa
jp
in
pop
push
pop
sub
stc
adc
sbb
call
push
cmp
call
hlt
mov
dec
or
mov
inc
sbb
mov
sbb
and
mov
push
gs
mov
jl
fidivr
(bad)
loopne
ror
sub
imul
aad
cmp
pop
cmp
xor
fcomp
lods
mov
inc
ret
add
sub
out
inc
pop
pop
lock
repz
or
sbb
fiadd
jne
or
shl
aam
mov
scas
je
pop
cdq
ret
aam
pop
nop
and
mov
jge
xor
inc
or
call
jecxz
into
test
outs
nop
push
mov
test
xor
add
enter
xchg
add
add
push
mov
xor
and
ins
push
mov
outs
inc
mov
add
in
imul
dec
add
or
je
test
inc
ds
jno
sub
or
fnstenv
cmp
and
cmp
sbb
and
mov
or
lock
movs
std
xor
retf
dec
js
xlat
jecxz
pusha
movs
fisubr
dec
cmp
icebp
cmp
jle
sub
jg
fadd
dec
outs
jmp
movs
mov
ss
cmp
inc
outs
daa
pop
dec
mov
or
jae
out
mul
add
test
sub
add
sub
push
push
inc
sub
sbb
xor
fsubr
jae
sub
add
fcmovne
sbb
or
je
xor
je
sbb
mov
call
aam
add
pop
div
cmps
lea
xor
or
xor
imul
in
test
fcmovnb
ret
arpl
pop
xchg
xor
push
fimul
sub
in
dec
jl
inc
adc
adc
xchg
mov
(bad)
xor
mov
add
movs
mov
enter
sbb
push
push
cmp
sbb
sti
sbb
add
lea
mov
mov
sub
inc
pop
shl
push
popa
fisttp
inc
ins
push
push
ss
clc
mov
adc
and
ins
mov
adc
test
mov
clc
lea
sub
loopne
movzx
inc
cmp
push
and
(bad)
fistp
pop
jmp
ret
ret
stos
shr
dec
rol
inc
fwait
ror
dec
push
add
mov
add
mov
jmp
mov
xor
add
outs
call
inc
push
push
add
mov
add
push
test
push
movs
add
jno
add
ror
push
mov
out
nop
test
push
mov
mov
push
mov
cs
test
jl
or
inc
outs
add
push
(bad)
rcr
rcl
pop
sbb
jl
sub
or
pop
jle
inc
jne
xlat
and
add
xchg
push
je
repz
(bad)
push
(bad)
xchg
dec
push
mov
dec
in
adc
popa
push
and
add
mov
mov
push
adc
add
xchg
jae
sbb
je
sub
adc
jne
add
mov
adc
fs
sbb
ss
aas
pusha
or
ins
stos
imul
and
js
adc
push
jo
cmp
adc
pop
inc
add
push
cmp
ja
(bad)
and
jb
pop
fbstp
call
push
or
sbb
sub
mov
les
fprem
xor
mov
rol
mov
lods
push
dec
push
sbb
add
aad
and
mov
aam
mov
xchg
mov
jmp
mov
jg
xor
arpl
enter
lahf
cmp
and
dec
dec
daa
shl
xchg
cmps
mov
push
push
add
add
mov
dec
sub
jmp
inc
pop
add
jne
hlt
adc
daa
cmp
repnz
sbb
jb
les
inc
mov
or
out
fisubr
ins
outs
outs
jo
add
mov
sbb
xor
push
mov
lahf
mov
jge
ins
es
retf
adc
dec
mov
repnz
sub
(bad)
call
and
mov
or
int3
ds
pushf
sbb
mov
pop
and
adc
xchg
add
xor
and
add
inc
and
iret
and
ins
push
adc
cld
dec
or
cmp
imul
loop
stos
push
inc
inc
sbb
inc
out
cmp
cmp
jb
jmp
aam
retf
into
ja
aas
sbb
(bad)
les
(bad)
in
inc
jecxz
mov
push
popa
add
je
pushf
mov
cwd
and
mov
mov
imul
int
sbb
jmp
push
adc
test
pop
add
dec
mov
pop
je
add
lds
pop
out
or
and
adc
adc
xor
sub
pusha
ret
xor
ds
dec
test
popf
or
inc
cmc
mov
outs
xor
xchg
or
sbb
xor
pop
cmp
or
sub
lods
loopne
xor
or
fsubr
push
add
retf
cli
mov
inc
je
jbe
js
pop
xor
sub
push
je
jnp
mov
jne
stc
ret
mov
jmp
hlt
in
jmp
pop
sbb
sub
dec
ja
jp
pminsw
inc
mov
out
out
lock
pop
add
in
ins
inc
cmp
mov
or
push
push
jg
adc
pop
or
xchg
popf
adc
neg
outs
dec
push
fcmovnbe
pop
data16
or
cwde
or
shr
add
repnz
mov
push
inc
jae
pop
fnstsw
mov
jge
test
or
sbb
push
test
bnd
imul
aas
or
push
call
push
adc
or
lock
daa
jne
or
xchg
cli
cmp
add
jo
adc
xor
and
inc
sbb
and
xchg
dec
movs
or
dec
data16
add
leave
and
xor
sub
rdpmc
test
add
lock
mov
add
inc
cmp
mov
sub
push
movs
out
push
(bad)
adc
or
jl
sub
sub
sbb
sub
ds
icebp
add
mov
cmp
or
or
pop
pop
push
call
jp
pop
push
and
icebp
data16
jmp
stc
sub
xor
jp
jbe
jge
neg
cwde
loopne
adc
mov
xchg
(bad)
neg
in
xchg
pop
and
push
mov
push
mov
fldenv
dec
sub
int
lods
rcl
xchg
xchg
xchg
out
lock
cmps
xchg
adc
xor
shr
das
push
fild
jns
xchg
xchg
daa
inc
lock
enter
xchg
push
pop
repz
pop
xor
dec
adc
inc
xchg
sub
int3
jmp
mov
adc
cld
jne
add
push
inc
jne
and
xchg
xor
cmp
push
clc
and
fild
mov
fild
push
inc
popa
push
mov
dec
xor
popa
jno
adc
mov
or
jno
rol
sub
cmp
sbb
(bad)
popa
xchg
adc
lods
fwait
pushf
dec
mov
pop
add
sub
adc
cs
outs
lods
inc
cmp
jecxz
xor
dec
iret
sbb
(bad)
jo
in
push
push
sub
mov
jmp
push
inc
pop
in
cmp
or
sub
mov
or
pop
or
loopne
add
lahf
jae
and
jmp
push
ror
mov
movs
add
xor
or
jl
sahf
add
mov
cmp
xchg
add
mov
in
cmp
add
push
sub
push
and
aaa
xchg
scas
in
push
mov
in
arpl
sbb
adc
mov
add
lock
cmp
outs
adc
mov
inc
leave
ret
pop
fisttp
in
int3
xor
loopne
loop
int
fs
xchg
push
repz
xchg
sbb
xchg
out
inc
pusha
jecxz
jno
dec
sub
movs
add
repz
fistp
or
pop
std
mov
mov
xchg
dec
adc
mov
bound
bound
xchg
(bad)
dec
leave
shl
add
nop
cmp
add
pop
popf
js
gs
dec
fdiv
xor
enter
jle
dec
je
fcomp
push
mov
call
push
and
lods
inc
enter
pop
xchg
xor
push
jo
pop
leave
push
jle
add
lock
mov
push
mov
inc
les
mov
xor
xor
adc
xchg
adc
sub
fiadd
inc
das
je
inc
adc
dec
(bad)
xchg
mov
xchg
popa
bound
cmps
outs
or
adc
aas
in
adc
or
test
xor
sbb
sbb
xor
push
rcl
jno
loopne
xor
add
imul
push
les
pop
syscall
jne
and
(bad)
dec
cmovle
pop
sbb
data16
daa
(bad)
xchg
js
xor
add
outs
push
stos
or
cmp
xchg
mov
test
sbb
dec
ror
loope
jge
xchg
popf
dec
mov
lods
jl
stc
sbb
repnz
ins
clc
nop
cmps
cld
pusha
pop
pop
push
mov
pop
or
dec
pop
pop
push
(bad)
aaa
adc
sbb
xchg
das
sub
test
pusha
test
xchg
sbb
popa
stos
xor
cmp
scas
pop
mov
inc
pop
movs
inc
loopne
dec
sub
in
jle
rcr
pop
cmps
jnp
stc
mov
sti
fs
push
xor
jne
and
lds
push
je
add
ret
mov
push
sub
add
push
and
rol
pop
inc
and
imul
or
pop
and
push
xor
das
push
push
pop
sub
adc
popf
(bad)
sbb
mov
and
imul
xchg
ss
je
aad
js
jmp
ja
inc
sub
xor
pop
pop
xchg
or
jmp
push
sti
jne
xchg
hlt
cdq
dec
cmp
mov
cmps
sub
lahf
ss
pushf
sbb
aaa
pop
mov
jg
pop
rol
movs
add
fwait
and
dec
cmp
push
or
sbb
xchg
pop
and
int3
push
rol
lock
jnp
cmp
cmc
fisttp
sar
nop
mov
arpl
push
fidiv
movs
xor
(bad)
retf
clc
ins
add
rol
or
xchg
pop
jle
iret
xor
mov
push
retf
pop
add
mov
loopne
leave
fcom
mov
sbb
or
jae
push
test
movs
mov
rcl
std
pop
push
jns
ss
arpl
xor
in
mov
movs
ret
nop
mov
jno
jo
or
pop
fsub
inc
mov
leave
and
mov
shr
sahf
mov
movs
adc
das
inc
(bad)
mov
pop
shr
adc
arpl
xchg
cmps
popa
imul
icebp
and
adc
xchg
sbb
jne
repz
sbb
mov
jo
cs
ins
mov
fucomp
pop
pop
mov
xor
and
mov
and
in
addr16
adc
lods
out
and
sbb
jp
sub
mov
ins
sbb
jb
pop
retf
jge
pop
push
fldenv
sbb
dec
mov
cdq
xchg
inc
cmc
sbb
add
mov
adc
jge
mov
push
loope
pop
fsubr
sub
or
pop
adc
add
les
push
fs
lock
(bad)
call
dec
and
push
xor
fistp
(bad)
aas
movs
mov
mov
push
pop
jb
inc
aad
push
clc
mov
stos
shl
sub
stc
icebp
push
and
popa
lahf
push
dec
pop
test
ror
and
test
sub
push
and
and
aaa
jae
push
mov
pop
pop
pop
push
cmp
fimul
cmp
or
adc
fld
and
lods
push
scas
je
pop
lods
lods
push
in
loopne
popa
or
sbb
inc
movs
rol
jge
mov
sbb
adc
pop
or
lahf
adc
or
push
push
and
push
pop
cmps
cmps
clc
inc
sub
cmp
dec
neg
cmp
es
aam
push
je
into
nop
or
xor
pop
dec
inc
push
cmp
push
fmul
ins
inc
sub
outs
xchg
mov
out
pop
mov
sbb
shl
add
dec
mov
hlt
jmp
inc
mov
lods
jl
fsubr
fadd
loopne
in
mov
sub
call
lock
hlt
add
les
mov
or
and
sbb
push
shr
idiv
adc
daa
xchg
cld
push
mov
in
xor
daa
aad
dec
or
xor
xor
test
loope
dec
dec
fidiv
dec
sbb
call
lahf
adc
sub
les
cs
daa
jns
ja
adc
test
out
add
and
popf
add
popf
mov
xor
into
inc
aaa
aas
push
sbb
enter
loope
or
icebp
xor
je
inc
aaa
or
push
add
push
and
xor
shr
cld
jne
nop
leave
mov
jnp
lods
outs
int3
enter
stos
out
lahf
add
mov
dec
movs
pop
call
or
mov
jne
xor
and
cmp
inc
jbe
inc
lea
sub
adc
xor
sub
std
out
ja
inc
jo
jbe
jno
xchg
in
sbb
xor
movs
and
jno
xor
mov
test
js
and
xchg
test
imul
sbb
pop
or
test
aas
outs
ins
cmp
inc
les
mov
inc
or
std
mov
sbb
lods
test
ins
add
repnz
add
imul
add
push
or
adc
inc
imul
push
add
fs
dec
fcom
enter
inc
dec
retf
jne
popa
add
loop
xchg
add
fst
imul
popf
and
sti
ret
popa
sub
inc
loop
inc
rol
adc
push
ins
jo
or
adc
pop
inc
mov
gs
adc
in
das
inc
add
dec
cld
sub
imul
sub
in
add
sbb
push
pushf
push
pop
pop
mov
imul
sahf
inc
add
sbb
mov
sub
mov
fs
dec
push
leave
mov
movs
iret
je
push
push
xchg
aad
retf
aad
fwait
adc
test
lock
sahf
aam
fdivr
cmp
ficom
xchg
ins
sbb
add
inc
or
xor
push
mov
cmp
xlat
push
aam
inc
push
mov
jne
jns
cmp
adc
cmp
shl
pop
pop
mov
sar
push
mov
std
mov
js
sbb
cmovge
add
dec
cmps
mov
cmp
rcl
not
das
dec
out
sub
push
mov
dec
xor
jne
aas
or
mov
aad
and
pop
xchg
test
xor
mov
jno
add
add
ret
in
cmp
cmp
and
(bad)
fwait
add
imul
lahf
sahf
push
sub
jnp
outs
ja
cmps
xchg
cmp
or
xor
xor
sbb
add
loopne
fild
ror
mov
cmps
pop
mov
stc
cmp
inc
je
fbstp
or
sbb
sbb
leave
scas
test
sbb
sub
adc
pop
cmp
and
xor
jae
sub
shl
dec
test
and
lods
clc
mov
add
cmp
fistp
jle
cmp
sbb
push
or
movs
xchg
loope
push
inc
fdiv
mov
add
fidivr
dec
test
adc
or
mov
je
inc
xor
mov
test
pop
mov
mov
sbb
scas
and
mov
fisttp
mov
add
stos
loopne
daa
jns
push
dec
loopne
lock
inc
mov
mov
adc
and
inc
test
pop
aas
sbb
pop
test
or
adc
pop
mov
sbb
push
stos
lods
mov
gs
or
js
test
hlt
loope
cmp
add
inc
jl
push
das
jl
adc
das
mov
clc
fcomp
mov
sbb
fs
les
fmul
out
jle
out
fiadd
ret
cmp
pop
outs
pushf
imul
mov
fnstenv
mov
push
shl
les
retf
and
in
movs
sbb
add
inc
loopne
xor
or
push
js
push
jmp
imul
in
xchg
sub
in
cmp
sub
push
fcomp
out
int3
outs
clc
dec
loopne
push
push
repz
adc
add
ja
add
xchg
xchg
add
inc
and
inc
push
imul
popf
cmp
pop
add
pop
jne
cmp
dec
lock
adc
xor
jmp
and
add
inc
shl
xchg
jge
fbld
lods
or
push
inc
cmp
test
mov
mov
inc
push
cmp
push
cmp
inc
(bad)
mov
test
enter
in
in
stc
push
call
lods
scas
fldcw
repz
ins
mov
mov
pop
pop
pop
push
mov
and
pop
pop
pop
pop
mov
adc
les
in
pop
pop
pop
pop
xchg
(bad)
mov
pop
pop
sub
leave
push
or
dec
fwait
sub
fscale
or
shr
push
inc
and
ret
out
jmp
mov
fld
pop
rol
mov
push
sbb
xor
xchg
dec
loopne
push
sbb
ror
xchg
repnz
sub
xchg
fstp
cmp
push
xor
pop
das
dec
test
pop
mov
mov
and
add
and
test
dec
mov
inc
dec
aad
int3
xor
xchg
xchg
or
test
mov
push
test
add
add
dec
(bad)
jno
add
sub
push
nop
mov
adc
sub
mov
ror
mov
dec
dec
cmps
and
ja
and
or
sbb
mov
(bad)
fisubr
push
imul
lds
pop
sbb
mov
add
hlt
in
loope
in
mov
mov
inc
int3
or
es
and
mov
mov
pop
int3
aam
test
mov
iret
int3
mov
pushf
retf
and
mov
jbe
enter
jbe
jbe
add
js
adc
repnz
and
jbe
fmul
push
dec
test
call
(bad)
mov
pop
dec
test
in
add
jle
adc
das
test
add
fsub
repz
add
add
add
jns
rol
add
and
loope
lods
(bad)
inc
or
sub
retf
dec
cmp
push
in
aam
add
inc
add
pop
loopne
or
add
xchg
pop
xlat
jno
xor
es
or
addr16
ficom
add
lock
js
jle
dec
mov
add
inc
repz
and
test
jmp
sub
fidivr
pop
jecxz
dec
cmp
cmc
adc
and
push
test
jo
adc
repnz
sub
fcom
xor
dec
sbb
imul
jle
test
lea
mov
fsub
or
sbb
shr
cmp
dec
jge
mov
jmp
ret
mov
es
retf
jp
aaa
pop
dec
inc
inc
dec
sub
inc
gs
fild
sbb
int3
jne
jmp
push
mov
call
cld
data16
shl
xor
and
dec
or
pop
hlt
pop
cld
jbe
xor
lahf
or
lods
pop
enter
in
dec
dec
xor
call
xchg
lock
das
and
lock
fs
push
jmp
pushf
xchg
push
xchg
call
std
add
cmps
cli
add
ret
dec
add
sub
out
or
jmp
and
test
pop
mov
test
add
rol
push
mov
imul
push
pushf
mov
add
inc
aaa
jae
clc
rol
ds
mov
test
add
loop
sbb
inc
cmp
ins
add
xchg
mov
inc
ja
mov
adc
lock
outs
test
xor
loop
ins
call
mov
push
push
inc
sub
cwde
lds
push
mov
(bad)
ret
mov
xor
out
and
std
or
pop
pop
cmp
int
in
sub
sub
jg
mov
push
std
dec
mov
ret
cwde
mov
xor
or
sbb
aam
or
pop
pop
pop
aas
mov
test
add
ror
jmp
and
movs
jmp
lods
mov
mov
jns
add
add
mov
add
jl
cmp
sti
(bad)
(bad)
cmp
cmp
test
mov
mov
xchg
cmp
lock
push
push
(bad)
retf
aam
out
cmp
dec
pop
dec
scas
sbb
jecxz
xchg
cmp
sub
ror
add
iret
xor
mov
jne
or
pop
jns
pop
and
mov
push
fwait
push
mov
test
inc
fisubr
fabs
rol
cmp
mov
popa
sub
imul
pop
in
addr16
icebp
add
inc
add
and
(bad)
mov
sub
fdivrp
sti
sti
call
push
pop
enter
jecxz
push
inc
std
xchg
loope
psubusw
jmp
adc
daa
jmp
add
mov
fisttp
repz
or
aas
lods
adc
xor
ss
add
popa
and
pop
or
adc
outs
ja
rol
and
inc
dec
push
ret
push
add
push
xor
push
(bad)
pop
xchg
add
push
pop
shl
push
lods
ins
in
call
stos
retf
adc
xlat
push
es
fs
cmp
fwait
(bad)
jne
stos
add
scas
push
not
dec
js
not
pusha
imul
int
cmps
dec
xor
adc
lods
pop
cmps
mov
cmp
and
rcl
bound
lock
xor
sub
(bad)
xor
ror
jp
ins
in
aam
arpl
sbb
mov
and
call
ds
or
cli
int
xchg
sub
sub
dec
call
dec
mov
xor
sbb
jmp
add
xor
inc
mov
jmp
mov
cdq
push
dec
clc
call
rol
fcomp
inc
inc
ficomp
sar
push
loopne
xchg
rcr
mov
hlt
fcom
test
jnp
or
inc
(bad)
test
and
lods
test
sub
push
das
retf
ins
sub
(bad)
cmps
push
adc
dec
sub
call
out
fild
push
fs
fcom
lods
inc
dec
dec
dec
lods
lods
test
xor
in
gs
in
out
fcomp
pop
call
push
xor
inc
arpl
xchg
dec
das
mov
cmp
clc
int
sub
aas
jmp
xor
push
shl
push
test
push
and
xchg
dec
sub
inc
sbb
inc
jge
cmp
sub
or
loopne
sub
rcl
dec
add
icebp
or
push
mov
cmps
aas
dec
loop
das
inc
add
jns
xor
inc
and
push
xor
(bad)
call
sub
mov
scas
xor
or
push
call
fistp
idiv
sar
sbb
stc
adc
xchg
adc
outs
fs
popf
add
push
add
mov
inc
imul
sbb
ds
xchg
mov
mov
dec
cmps
mov
and
add
adc
and
inc
cdq
push
ins
out
jmp
sbb
mov
mov
push
lock
shl
ret
and
or
es
js
dec
ss
add
push
gs
push
fdivr
adc
add
lock
bnd
test
sti
xchg
xor
nop
clc
sbb
or
cwde
cmp
cmp
ins
and
sbb
jae
xchg
or
mov
push
sbb
push
adc
je
dec
add
dec
icebp
add
fidiv
jbe
in
adc
call
lea
pop
cdq
loopne
pop
mov
test
lock
inc
xor
ja
test
int
aam
or
fisttp
cmp
loopne
push
js
loopne
daa
cs
movs
shl
pop
pop
in
adc
and
pusha
test
fadd
sub
shl
xor
jecxz
stc
mov
(bad)
scas
(bad)
fldcw
push
jmp
and
shl
xchg
xor
aam
call
add
not
sub
test
add
sbb
dec
push
push
loopne
test
dec
sbb
push
xchg
pop
imul
or
in
mov
imul
sub
shl
sbb
sub
popf
add
sbb
out
jno
and
es
mov
fisttp
add
inc
or
scas
dec
xor
ret
sbb
or
out
imul
lds
mov
pop
fist
adc
mov
push
out
add
scas
mov
into
test
mov
push
jbe
jl
fcmovnbe
jo
mov
push
push
out
jg
push
push
push
push
dec
out
jp
cmp
sbb
push
inc
push
push
xor
mul
add
pop
xor
mov
sbb
or
leave
popa
dec
add
adc
mov
inc
movs
scas
aaa
or
pop
nop
inc
mov
ja
cmp
push
xchg
nop
sbb
or
ja
sbb
inc
popa
ja
or
es
movs
sbb
adc
inc
mov
nop
and
push
push
into
outs
mov
cmps
push
push
mov
inc
(bad)
je
xchg
push
push
push
mov
adc
mov
lods
sbb
sar
and
gs
ret
mov
ins
dec
ins
mov
sub
loope
loope
mov
cmp
jne
push
push
pop
dec
mov
je
cmps
in
mov
jmp
imul
pushf
cli
aad
fmulp
push
or
shr
inc
sbb
inc
and
fadd
fwait
sbb
mov
imul
jne
and
mov
jge
xor
imul
js
inc
call
fcomp
inc
mov
push
pop
sbb
fwait
es
test
adc
push
in
and
das
add
ftst
je
push
or
dec
inc
je
(bad)
and
outs
imul
push
test
xchg
mov
inc
mov
js
sbb
xchg
dec
push
mov
mov
mov
and
inc
add
mov
cmp
and
jb
push
sbb
or
or
and
dec
outs
inc
jge
in
arpl
cwde
mov
cmp
inc
sbb
add
or
lock
inc
int3
and
nop
and
xor
sbb
fsubr
inc
pop
dec
enter
and
jmp
dec
(bad)
xor
sub
ror
mov
and
call
xchg
sbb
aaa
push
inc
push
xor
or
mov
cld
or
add
pop
adc
push
add
push
inc
sbb
push
pop
ror
pop
fs
pop
call
xchg
push
jp
push
or
dec
lods
sub
in
ficom
outs
xchg
(bad)
mov
clc
jle
xchg
adc
and
cmp
lds
sub
pop
imul
inc
inc
das
push
ret
repnz
push
inc
sub
test
xchg
add
adc
clc
add
repz
inc
aad
bound
sbb
mov
cld
inc
fsub
xor
in
push
jl
in
sub
sti
dec
sti
into
mov
xchg
inc
fdivr
jb
nop
adc
push
je
xchg
push
sub
push
xchg
or
arpl
jbe
push
pop
mov
retf
test
xor
mov
or
or
xor
adc
xor
push
stc
sub
cmp
push
jnp
dec
ds
aaa
or
das
pusha
es
push
outs
or
mov
jmp
xchg
push
ins
or
mov
into
xor
mov
sub
dec
js
sbb
inc
pop
out
pop
lea
push
sbb
shl
dec
test
pop
mov
mov
fild
das
mov
push
jno
loope
cli
hlt
xor
pop
jb
cld
mov
je
push
leave
push
jne
adc
add
and
rol
jge
and
mov
xchg
xchg
inc
hlt
xchg
xchg
or
arpl
or
sbb
xchg
or
pop
in
push
push
popf
push
popa
cmp
xor
dec
lds
mov
xchg
fwait
pop
mov
rcl
imul
xchg
inc
test
push
or
fs
and
sbb
nop
adc
clc
or
aaa
xor
imul
sub
loopne
mov
cmp
or
(bad)
push
rcl
or
jle
inc
push
shr
lock
add
push
mov
mov
push
and
add
sub
sbb
xchg
and
mov
cmp
pop
dec
xlat
push
out
fdivr
jl
cwde
pushf
outs
hlt
mov
retf
gs
jecxz
div
sub
sub
retf
in
inc
in
add
sub
sub
loope
and
ins
lock
push
pop
sub
mov
clc
jbe
in
test
icebp
hlt
jmp
cmc
loopne
dec
sub
or
push
jb
add
push
add
push
not
inc
push
retf
js
push
add
pop
leave
add
mov
adc
pop
sar
push
cmp
(bad)
lock
out
cmc
dec
push
sbb
inc
mov
add
(bad)
xchg
add
jb
fdiv
es
fidiv
std
imul
loope
loope
icebp
dec
fisubr
aad
push
push
imul
div
scas
sbb
inc
mov
test
nop
imul
mov
clc
mov
(bad)
clc
stos
pop
xor
cli
pop
cmp
push
fisttp
mov
je
push
push
pusha
or
mov
or
sub
sub
push
jne
(bad)
cmp
jne
inc
push
adc
lods
fs
ss
clc
push
stos
add
arpl
add
mov
adc
pop
jae
jo
push
jbe
push
cmp
push
jmp
mov
mov
sti
adc
leave
mov
or
add
mov
iret
adc
or
xor
mov
xchg
dec
mov
pop
sub
dec
add
xlat
test
push
pop
repnz
mov
mov
sbb
xchg
aam
stc
fmul
adc
loopne
in
gs
out
pusha
sti
jo
sbb
fs
add
inc
dec
add
pop
out
mov
dec
push
in
dec
scas
mov
sbb
xor
mov
push
dec
rcl
adc
pop
push
and
ins
and
call
adc
rcl
cmps
mov
enter
iret
call
in
push
cs
add
retf
in
jge
adc
push
popa
push
jb
ret
and
ret
sbb
ins
add
xor
jb
retf
jno
mov
sar
add
mov
movs
adc
adc
adc
(bad)
hlt
mov
out
sub
sub
sbb
ss
sbb
add
pushf
nop
push
leave
call
push
or
sahf
pop
pop
mov
enter
mov
jge
mov
cmp
add
sbb
mov
dec
cmc
cmp
push
mov
inc
cmc
(bad)
mov
fild
and
leave
mov
fsubr
aaa
and
sub
cmps
push
mov
adc
fimul
jno
dec
or
xlat
iret
sbb
sub
lea
or
sub
stos
es
bt
lahf
xor
dec
xchg
test
cmp
or
stos
and
scas
inc
ins
int
and
lods
adc
je
cmp
(bad)
fiadd
xor
enter
nop
out
sbb
shl
inc
rcr
mov
pop
or
and
lock
mov
adc
loopne
inc
clc
daa
add
adc
retf
call
mov
add
ffree
(bad)
sub
cmp
ss
xchg
cs
stos
inc
shl
jb
(bad)
call
bound
js
xor
mov
and
pop
inc
pop
enter
fadd
push
cld
in
add
cmps
xchg
mov
add
loopne
cmps
dec
mov
mov
cli
fsub
rcr
les
scas
inc
mov
xchg
mov
shr
mov
(bad)
imul
mov
lods
leave
bound
or
mov
push
dec
daa
mov
mov
mov
das
rcr
adc
dec
adc
mov
sub
cmp
scas
or
loop
xor
xor
inc
sub
test
or
add
call
cmps
xor
push
mov
lock
dec
stc
jge
jl
stos
sbb
sub
sub
js
adc
outs
add
inc
sub
arpl
popa
or
add
mov
push
sub
adc
fcom
cmp
je
dec
lods
pop
sar
dec
int
mov
pop
dec
lock
inc
test
out
movs
jmp
loope
mov
sbb
push
mov
lods
or
not
test
add
mov
jns
dec
rol
and
daa
loopne
pop
test
inc
add
aas
fldz
and
or
push
xor
js
mov
adc
sub
(bad)
mov
push
mov
jne
push
rcl
and
mov
inc
xchg
hlt
ja
(bad)
adc
aam
cmp
aam
ss
jl
cmp
jne
cmp
mov
ins
mov
test
inc
add
jg
cmp
jae
mov
adc
jmp
xor
push
jnp
add
mov
add
fstp
dec
xchg
inc
mov
aam
in
sub
mov
jne
imul
aaa
xor
add
movs
sbb
fidiv
int
repnz
xor
stos
jmp
dec
in
sub
mov
rol
stos
ror
pusha
loop
add
add
xor
je
sub
sub
lea
aas
enter
retf
cmp
inc
pop
cmp
push
or
sti
dec
or
xor
int
in
pop
daa
jne
(bad)
xchg
sbb
test
jle
cs
jne
push
iret
inc
test
in
clc
cmp
lea
cdq
xchg
add
call
and
sub
sbb
push
outs
cmp
sub
lar
call
inc
and
mov
fs
in
sbb
shr
stos
pand
stos
rcr
aaa
or
add
add
sahf
and
cmp
inc
cmp
sub
mov
xchg
or
dec
fadd
movs
push
cs
dec
int3
sub
enter
dec
jo
fst
cmp
and
mov
and
push
sbb
int3
adc
cmp
pop
loope
inc
test
mov
imul
xlat
rol
or
pop
scas
jno
mov
fidivr
cmp
mov
cdq
movs
add
in
and
add
mov
mov
push
sar
add
fistp
js
xor
push
pop
sbb
(bad)
and
or
cdq
add
out
add
stc
sbb
push
ins
popf
push
test
xor
xor
jmp
pop
jmp
lock
test
add
fnsetpm(287
xchg
ret
jae
lock
mov
sbb
repnz
sbb
aam
or
or
adc
aad
push
ret
mov
es
dec
push
popa
cmp
adc
mov
aad
add
sub
loopne
arpl
leave
push
js
repz
test
sub
push
arpl
add
mov
dec
fadd
js
fdiv
shl
mov
or
mov
test
shl
jl
fsub
in
or
xor
xchg
lock
inc
or
jb
test
adc
inc
push
jo
mov
cdq
test
mov
push
and
mov
clc
xor
imul
pusha
and
stos
pop
jge
(bad)
shl
adc
jb
cdq
loopne
mov
inc
mov
cmp
inc
(bad)
stc
jnp
inc
hlt
lock
add
mul
lahf
cmps
push
push
add
sub
cmp
add
mov
inc
clc
imul
inc
cmp
mov
das
repz
add
or
retf
and
mov
add
aaa
add
nop
push
push
and
das
or
or
inc
jl
or
stc
and
dec
mov
jl
sbb
inc
mov
add
add
sbb
mov
(bad)
ss
cmps
ins
ja
popf
dec
je
jne
jle
sbb
ror
xchg
js
xchg
xor
dec
jbe
test
jae
sbb
into
fbstp
ja
rol
(bad)
push
out
adc
sti
adc
jmp
jl
mov
adc
xchg
pop
inc
repnz
mov
or
add
scas
jg
and
ret
mov
nop
enter
fld
pop
add
imul
add
mov
and
imul
or
loopne
adc
cmps
and
addr16
movs
fmulp
and
cmp
(bad)
in
pushf
es
pop
mov
fstp
mov
aam
or
add
mov
mov
add
inc
sahf
in
sbb
and
inc
nop
fisubr
ins
cmps
adc
xlat
sbb
add
dec
jp
jbe
add
fcomp
ja
test
adc
or
hlt
mov
ins
and
popa
adc
mov
xchg
cmp
xor
ss
mov
dec
js
lods
sub
xor
xor
or
sub
ret
xor
mov
pop
mov
and
push
sbb
loopne
inc
sub
lock
push
outs
add
inc
inc
and
sbb
push
pop
sub
sbb
xor
mov
jb
xchg
inc
mov
sbb
adc
add
sbb
and
or
or
inc
jo
adc
pop
or
repnz
dec
xor
test
fs
fwait
mov
pusha
loope
test
in
ds
and
push
enter
sbb
push
or
sbb
push
stc
jmp
jb
test
add
or
pop
lock
adc
mov
mov
jmp
xchg
or
dec
fadd
pop
sbb
dec
les
sbb
call
jno
add
pop
call
xor
pop
pusha
adc
push
push
cmps
push
push
xchg
mov
imul
movs
sub
mov
lds
loope
dec
sbb
lock
into
inc
dec
loope
xchg
in
loopne
(bad)
and
dec
jne
mov
mov
pop
lea
or
mov
xchg
gs
jl
dec
fcomp
dec
sub
jg
lock
call
imul
push
inc
retf
lock
push
ror
or
(bad)
or
push
xchg
inc
(bad)
mov
inc
inc
push
cli
xchg
lock
push
in
pusha
scas
adc
sbb
scas
adc
mov
push
jbe
push
xor
in
push
jl
mov
pop
add
movs
iret
movs
jmp
adc
mov
inc
cmps
add
inc
push
in
push
je
stos
enter
in
add
test
push
xchg
stc
xchg
sahf
add
sub
lock
dec
xor
mov
dec
fisttp
addr16
ds
sub
push
and
add
rcl
in
push
sub
xchg
or
adc
mov
test
cmps
loope
and
rcl
ret
push
nop
lock
jl
fistp
dec
rol
and
fstp
sbb
jg
ret
push
sbb
loope
inc
or
stos
adc
add
jae
adc
ret
dec
das
adc
fld
loopne
pop
in
adc
in
in
or
mov
popa
(bad)
adc
pop
pop
mov
jmp
or
aam
ins
in
stc
movs
icebp
mov
sub
fld
adc
inc
es
dec
push
pop
jge
adc
jle
lea
ret
std
fsubr
xor
dec
push
xchg
cmp
es
loopne
mov
sbb
inc
iret
xchg
jo
pop
mov
xor
shr
enter
mov
dec
ror
pop
aam
push
xchg
xor
enter
xchg
out
mov
es
add
test
xor
pushf
push
test
mov
pop
daa
or
sar
aaa
xor
into
push
gs
mov
push
dec
sbb
push
(bad)
test
xchg
jge
call
ins
xchg
mov
or
or
or
inc
or
fwait
cmps
lea
test
ss
lsl
mov
push
sub
add
dec
xor
cmp
dec
xor
xchg
push
cdq
pop
adc
adc
fsub
sub
and
xlat
add
retf
or
add
repz
adc
and
pop
test
rol
add
enter
enter
sub
push
and
mov
in
jnp
adc
xchg
xor
and
or
inc
jecxz
cld
dec
xchg
dec
jl
xor
push
lar
mov
shl
lea
fadd
cmp
int3
add
add
enter
lods
adc
fisub
jo
push
cs
fsub
xchg
inc
fadd
add
enter
xchg
dec
enter
or
mov
or
jne
adc
or
aam
push
lds
add
push
pop
rol
adc
lods
lods
inc
add
sbb
enter
inc
add
xor
and
dec
jle
in
enter
gs
push
adc
xchg
sbb
dec
adc
and
inc
pop
jno
or
js
movs
mov
and
adc
in
loop
stos
out
adc
daa
add
push
mov
loopne
sub
cmps
lock
ret
and
fadd
lea
dec
mov
ins
push
fdivr
nop
es
cmp
add
gs
daa
loopne
add
mov
cmps
mov
sub
and
push
and
js
inc
out
xchg
jl
add
and
pop
sub
rcl
dec
xchg
mov
mov
in
inc
mov
(bad)
add
enter
jmp
imul
adc
lock
into
lods
pop
sbb
in
push
sub
xor
ds
addr16
xchg
in
and
sahf
ja
jns
adc
inc
fcom
add
enter
cmp
jl
aad
add
nop
add
sub
push
push
les
aam
xchg
inc
push
xor
dec
add
adc
push
add
pop
sqrtps
xchg
jp
push
add
add
xor
lods
mov
dec
push
mov
stos
cmp
and
push
(bad)
(bad)
popa
in
push
push
push
xor
inc
sub
jmp
inc
stos
push
mov
push
mov
(bad)
mov
aad
ret
(bad)
mov
ins
sub
xor
xchg
out
mov
or
cmp
test
adc
pop
jg
xor
jmp
inc
pop
(bad)
pop
call
sub
loopne
or
sub
mov
aaa
(bad)
pop
mov
clc
or
jb
ins
xchg
or
sub
(bad)
loopne
mov
jg
call
mov
cs
jle
add
leave
add
inc
and
dec
jno
xchg
shl
mov
push
mov
fwait
sbb
lds
jl
call
inc
rol
cwde
data16
rcl
ret
loopne
push
fwait
(bad)
loopne
xor
repnz
test
pusha
add
aad
ds
fbstp
test
push
dec
shr
xchg
xor
adc
add
in
and
xor
xor
push
push
xor
lahf
in
mov
in
xchg
and
(bad)
and
clc
daa
add
aaa
inc
add
jg
in
sbb
pop
stos
stos
push
and
add
sbb
jo
adc
add
cdq
stos
push
stc
lock
adc
cdq
or
add
sbb
test
sbb
cmp
mov
js
aam
add
mov
ss
loopne
xchg
stos
mov
push
mov
(bad)
les
mov
fsubr
or
jae
out
add
inc
aaa
sub
daa
test
add
sub
pop
adc
sti
inc
adc
add
lods
hlt
sbb
adc
cmp
inc
loopne
push
cmps
inc
push
rcl
inc
and
movs
and
aaa
or
imul
and
les
push
push
adc
rcl
push
sub
dec
mov
adc
iret
push
daa
int
mov
xor
arpl
ins
and
add
mov
and
or
jmp
imul
and
or
ins
es
jne
mov
push
sbb
cmp
push
jb
add
push
push
sbb
pop
add
sbb
add
cmp
retf
sub
add
or
sub
inc
call
push
or
sbb
loop
lds
inc
je
pop
push
push
adc
adc
je
imul
les
scas
add
xor
out
inc
sub
push
mov
or
sti
push
adc
sub
nop
in
fwait
adc
add
jp
nop
xor
adc
arpl
popa
out
jg
push
jmp
push
or
fs
ret
add
loopne
add
arpl
loop
and
dec
dec
pop
or
lock
jae
add
in
pop
and
rol
xor
fld
xor
mov
rol
cmp
inc
adc
test
fwait
push
adc
add
cmp
sub
inc
fimul
add
sub
lds
mov
cli
test
mov
push
cwde
xor
ja
sbb
and
es
aad
fdivr
xor
inc
(bad)
sub
inc
hlt
or
xor
cmp
mov
xor
sub
movs
enter
cmps
push
shl
movs
ret
pop
jae
in
push
sub
nop
inc
push
cmp
xor
or
in
adc
lds
inc
fcom
mov
ror
sbb
scas
dec
pop
in
enter
inc
add
enter
push
mov
xor
mov
xor
fs
jo
loope
lock
pop
hlt
and
ret
test
clc
sbb
push
(bad)
adc
mov
and
test
repnz
fcom
mov
stos
mov
cmps
inc
push
imul
sub
adc
push
fcmovnu
xor
(bad)
jge
add
pop
mov
lock
push
xlat
fadd
aad
das
rcr
or
push
fld
mov
retf
call
mov
add
add
outs
dec
daa
sbb
and
cmp
popa
mov
push
mov
xor
sbb
fcom
repz
inc
mov
sub
pop
push
pop
mov
cdq
push
and
mov
sti
mov
add
movs
je
add
xchg
jo
xchg
xchg
pop
in
add
popf
sub
das
pop
pop
popf
inc
push
aam
mov
fwait
cmps
std
push
lds
enter
add
adc
dec
xchg
mov
mov
dec
xor
in
mov
rcr
aaa
test
into
les
inc
and
imul
mov
fs
adc
adc
xchg
fwait
add
push
push
lds
push
aas
or
xchg
sbb
push
nop
push
or
xchg
inc
mov
adc
and
push
ja
addps
mov
xchg
pop
test
cwde
adc
push
pushf
sbb
jne
adc
sub
add
pop
test
xor
or
add
sbb
or
mov
es
sti
jmp
fadd
rcl
fwait
ja
mov
test
add
push
aaa
and
lea
sbb
inc
cmp
add
test
sub
sbb
cdq
scas
fmul
or
cmp
sbb
cmp
pusha
and
mov
sub
mov
sub
pop
dec
mov
and
nop
pop
adc
std
mov
fnstsw
cmp
sub
xor
sub
in
sbb
cmc
test
xor
push
xchg
dec
les
fadd
or
mov
add
test
mov
xchg
stos
mov
cmp
push
mov
xchg
dec
xchg
add
lods
add
in
add
pusha
adc
enter
and
inc
push
movs
or
xchg
pop
clc
hlt
movs
or
dec
or
idiv
test
enter
inc
loopne
add
mul
or
inc
enter
adc
add
jmp
(bad)
outs
sbb
and
(bad)
rol
push
popa
add
sahf
dec
push
pop
shr
movs
ja
add
or
popf
or
jb
daa
sub
scas
(bad)
pop
es
add
inc
dec
dec
aas
enter
aas
pushf
adc
add
inc
daa
push
pop
test
lds
add
les
cs
(bad)
cmp
push
enter
push
(bad)
push
stos
les
lds
les
xor
or
out
dec
mov
stos
les
retf
jne
and
sbb
mov
pop
in
out
inc
push
xchg
in
in
pop
test
and
test
add
push
data16
nop
and
loopne
push
rcl
inc
pop
jne
mov
lea
or
cwde
adc
push
add
or
leave
call
mov
xchg
lock
push
jb
push
stc
sub
cmp
adc
(bad)
enter
add
cmps
add
push
enter
push
adc
and
iret
ror
jne
pop
xor
dec
sub
out
xchg
cmps
pop
and
imul
mov
shl
jmp
daa
push
push
shl
sbb
popf
mov
cdq
adc
and
and
and
and
retf
loope
dec
jmp
pop
push
jmp
jne
mov
pop
pop
fldenv
add
or
dec
mov
inc
cmps
pop
les
pop
jl
push
xor
xchg
shr
fst
inc
out
mov
sbb
dec
aam
adc
cld
es
ja
aam
outs
dec
ins
and
or
dec
popf
jle
inc
and
mov
sub
fsubr
daa
push
xor
xchg
xchg
(bad)
pop
fsub
pop
loopne
or
pop
sbb
jmp
jo
inc
pop
add
icebp
je
popf
popa
in
cmp
or
enter
add
call
xchg
fdiv
in
adc
push
or
cmc
adc
(bad)
mov
cmp
mov
add
cld
push
push
pop
jae
jge
je
push
push
add
sbb
push
pop
rol
sbb
add
sar
in
or
push
lods
lock
push
mov
or
inc
pop
in
sar
mov
push
mov
pop
sub
xchg
test
xor
push
adc
loope
cdq
lock
or
inc
popa
or
xor
jo
or
add
dec
jge
push
pop
movs
mov
adc
cmp
dec
call
xor
sbb
enter
inc
cmp
add
and
or
mov
push
jne
add
mov
imul
sub
push
xor
xchg
aam
sar
pop
push
hlt
adc
and
and
fstp
call
add
push
call
or
sub
xchg
jp
add
popf
inc
aam
aam
push
dec
rcl
jmp
js
fs
add
cld
clc
mov
jne
mov
outs
scas
test
add
add
rcl
xchg
dec
jo
test
in
clc
push
xchg
push
xor
xor
mov
mov
pop
bound
(bad)
les
inc
or
in
mov
les
push
or
fwait
inc
xchg
sub
push
(bad)
test
dec
call
cmp
sbb
lock
mov
loop
fsubr
test
cmc
mov
mov
in
mov
mov
es
call
or
sub
in
and
or
dec
cwde
cmp
arpl
aam
ins
aam
into
dec
or
sahf
sbb
je
and
sbb
and
adc
out
adc
arpl
shl
popa
sbb
sbb
arpl
sub
loope
fs
push
xchg
sub
adc
pop
sti
call
leave
and
mov
jmp
sbb
xchg
add
adc
adc
fs
scas
pusha
adc
or
es
in
fmul
xchg
or
pop
or
loopne
ds
and
mov
mov
or
add
cdq
pop
and
sbb
add
arpl
add
xlat
fist
cmovl
movs
sbb
movs
test
sbb
inc
aam
mov
xor
scas
pop
jge
(bad)
jbe
xchg
dec
xlat
inc
jmp
or
sbb
adc
cmps
test
(bad)
jge
or
pop
dec
adc
aam
push
xchg
sub
jae
sbb
fucomp
test
push
je
jg
sub
or
dec
jge
mov
mov
jp
test
cmps
sti
mov
shl
jg
and
jne
rcr
sub
or
xor
push
push
test
loope
cmc
xchg
scas
pop
fstp
repnz
push
push
inc
enter
jnp
add
or
movs
xor
bound
imul
add
test
jb
push
cmps
sbb
test
out
xor
adc
mov
stc
jmp
push
test
out
jl
sti
inc
lods
rcr
mov
inc
repnz
mov
mov
ror
stc
repnz
movs
enter
shl
xor
mov
mov
jmp
popa
fdiv
mov
inc
scas
jl
jl
neg
dec
inc
pushf
lock
daa
inc
scas
jl
jl
not
sub
scas
jl
jl
idiv
push
inc
cmp
fimul
scas
jl
jl
mul
inc
inc
and
nop
xor
jl
test
ds
pop
stc
jl
and
ss
xor
stc
pop
stc
or
shl
add
lahf
cmp
stc
pop
stc
hlt
cmc
adc
or
inc
cmp
test
leave
in
add
dec
cmps
leave
repz
and
sbb
gs
lea
ret
sbb
rcl
and
pop
int
(bad)
jne
aas
xor
mov
lods
rcl
sbb
dec
shl
push
call
jnp
das
in
and
and
call
inc
sub
shl
call
sub
enter
inc
inc
mov
xor
mov
cmp
mov
call
cdq
in
les
punpcklbw
adc
stc
add
stos
bound
push
lds
and
stos
test
dec
lods
sar
mov
adc
mov
and
add
pop
scas
std
add
pop
lock
xor
cwde
arpl
dec
(bad)
iret
xchg
add
jno
dec
dec
ror
daa
popa
jo
in
push
inc
loope
bound
shl
push
pop
mov
mov
adc
and
mov
ss
ret
and
push
and
jecxz
inc
ret
lods
outs
add
add
popa
cmps
in
sub
in
nop
jmp
and
ror
add
mov
pop
sbb
dec
fistp
dec
lds
sub
pop
test
adc
test
mov
stos
fs
inc
adc
xchg
add
or
inc
and
sbb
and
mov
repz
sbb
rcl
push
jge
mov
xchg
or
dec
cmc
retf
push
call
xor
and
add
jecxz
xchg
mov
and
in
nop
sbb
xor
xchg
jge
pop
cdq
movs
mov
loopne
call
jl
push
push
xor
jb
in
call
enter
jp
add
inc
cmps
fucom
in
mov
in
in
fisubr
or
add
dec
pop
pop
or
mov
pop
or
push
add
or
dec
and
retf
pop
enter
push
nop
cmps
xchg
in
call
call
mov
add
push
hlt
jbe
push
inc
lods
and
adc
cmc
call
xor
dec
jle
add
nop
adc
or
nop
mov
les
xor
fcmovnu
call
xchg
xor
adc
jne
adc
and
sbb
scas
nop
bswap
or
mov
or
and
rol
jmp
not
jg
aas
aas
push
ds
cmp
int3
inc
bound
mov
mov
fcomp
mov
jge
and
mov
push
xor
mov
push
xor
xchg
movs
adc
mov
jb
xchg
add
lea
int
das
jne
inc
push
xlat
fnstenv
and
call
mov
mov
adc
cmp
shr
add
enter
std
in
add
sbb
in
and
pop
pop
fstp
push
push
enter
lods
es
cmp
inc
xchg
sahf
mov
cmp
sub
inc
pop
add
mov
dec
mov
popa
in
mov
sub
push
std
aad
sub
pop
pop
mov
lds
shr
imul
adc
or
or
nop
lock
ss
adc
mov
nop
add
out
xchg
push
add
repz
in
stos
inc
imul
cmp
mov
xor
iret
add
pop
or
imul
xchg
in
pusha
add
pop
add
push
imul
loop
push
mov
xlat
mov
add
push
cmp
repnz
mov
aas
push
push
push
or
rcl
mov
lock
mov
fwait
stos
sub
iret
xchg
or
or
aaa
xor
popa
and
add
enter
inc
xor
sar
pop
test
(bad)
push
bound
cmc
test
sbb
add
call
cmp
(bad)
push
push
test
nop
stos
mov
test
and
and
add
cmp
rcr
push
cwde
sbb
sar
nop
retf
or
aaa
nop
out
loope
fcomp
sub
or
retf
pop
fiadd
xchg
adc
and
repnz
push
mov
pop
xor
jo
div
mov
repnz
fs
jae
mul
movs
dec
addr16
sub
cdq
fnstcw
les
cmps
test
adc
mul
movs
test
dec
sbb
pop
jg
push
jne
mov
and
mov
rcl
pop
sbb
lea
push
adc
mov
shl
inc
xor
push
mov
jne
push
lds
iret
mov
mov
pop
inc
xor
jecxz
in
mov
sbb
nop
clc
mov
sbb
xchg
jb
sbb
in
(bad)
leave
clc
mov
add
add
dec
mov
adc
add
and
rcr
mov
push
pop
int
dec
imul
sub
pop
nop
push
test
and
psubsw
aam
lock
int3
xchg
lock
cmp
movs
xchg
rol
daa
sub
push
(bad)
mov
add
add
mov
fld
stc
fcomp
les
jbe
jp
fstp
jecxz
sub
adc
xchg
stos
xor
mov
bts
inc
cs
xchg
aaa
xor
or
icebp
jmp
sub
or
cmc
fisttp
mov
mov
and
or
dec
inc
leave
mov
clc
or
test
and
sub
push
ja
inc
retf
cmp
popa
test
dec
lods
xchg
jp
pop
push
sub
mov
(bad)
inc
and
fstp
pop
rol
adc
push
xor
pop
jmp
je
or
icebp
movs
push
adc
mov
push
and
sub
clc
mov
mov
sub
mov
xchg
dec
dec
inc
push
or
xor
push
sub
sbb
xor
out
sbb
pcmpeqw
dec
sub
inc
shl
add
push
ds
sbb
jne
fucomi
add
lods
mov
leave
inc
dec
jge
dec
push
mov
test
fs
add
and
lea
push
test
loopne
test
pop
jecxz
arpl
sub
add
pushf
cld
gs
icebp
in
xchg
or
sub
hlt
clc
gs
lods
and
gs
fdivr
or
gs
sar
sbb
int3
clc
gs
enter
sar
gs
mov
clc
gs
movs
clc
mov
gs
cwde
clc
sti
jge
clc
gs
adc
gs
test
gs
clc
test
gs
mov
cli
mov
gs
pop
clc
jo
test
mov
jle
xchg
mov
retf
dec
jbe
lods
add
out
and
add
or
fisubr
inc
or
sub
xor
add
je
add
dec
sub
mov
(bad)
fsubr
mov
sbb
push
je
jo
bnd
xchg
shl
pop
popf
popa
cmps
or
sub
jae
xor
add
inc
retf
xchg
retf
in
push
outs
outs
or
jp
jl
imul
jo
mov
test
push
push
jl
not
push
and
xchg
xchg
inc
mov
or
in
mov
mov
jp
jl
xchg
retf
in
jle
or
ret
les
adc
and
or
xchg
retf
xchg
loopne
mov
(bad)
cs
retf
in
xchg
xchg
xchg
xchg
in
mov
cwde
pop
cs
retf
cdq
call
mov
inc
or
cmp
cmp
ret
xchg
xchg
jns
out
dec
push
push
push
push
pop
je
div
out
outs
xchg
xchg
jp
push
mov
mov
repz
repz
in
icebp
sahf
idiv
idiv
add
push
unpckhps
out
sbb
daa
sub
out
aas
inc
dec
push
inc
out
sahf
push
pop
arpl
dec
ret
sbb
dec
(bad)
stc
xchg
scas
adc
movs
data16
cmps
and
ret
and
ret
xor
rcl
ret
push
add
fcom
or
aaa
pop
int
dec
hlt
xchg
and
fcom
or
add
adc
jbe
pop
mov
je
adc
cmp
imul
xor
imul
add
je
push
mov
ret
jmp
inc
dec
xor
adc
pop
xchg
push
xor
inc
adc
mov
pop
xchg
mov
pop
push
leave
mov
mov
adc
push
add
mov
(bad)
popa
mov
push
and
and
mov
dec
cld
or
gs
(bad)
xchg
pop
cmp
fst
sub
xchg
repnz
or
jb
les
fwait
lock
mov
leave
jg
mov
cmp
je
push
pop
adc
or
or
jmp
daa
popa
in
xor
mov
je
nop
or
stos
add
mov
shl
inc
push
push
push
js
nop
dec
out
xchg
and
stos
outs
daa
add
dec
add
das
add
lock
mov
in
mov
mov
loop
pop
fcmovnb
inc
xor
xchg
and
leave
push
mov
inc
jle
jne
sbb
ficom
ficomp
mov
adc
loopne
xor
cmps
leave
call
cmp
sbb
inc
add
jle
push
pop
aad
push
js
loopne
push
stos
pop
sbb
retf
jmp
leave
fmul
mov
sub
mov
push
sub
and
jne
mov
les
loopne
mov
fwait
mov
imul
cmp
outs
and
xchg
or
call
es
ins
in
pop
cmps
cmps
push
movs
fistp
mov
or
mov
sub
push
add
ins
arpl
adc
aad
je
mov
push
stos
les
in
mov
loope
movs
sbb
iret
push
test
rcl
push
mov
push
push
pop
add
pop
in
add
iret
add
les
xor
nop
push
push
add
add
push
movs
fld
jle
daa
push
jb
jg
add
xor
sub
adc
(bad)
pop
stos
xchg
lock
mov
sbb
mov
cmp
repnz
or
push
test
sbb
loopne
and
mov
pop
and
xor
sbb
pop
mov
push
and
fs
dec
and
or
test
ret
rcr
in
or
leave
je
push
adc
jecxz
cmp
call
cmp
or
jmp
sar
sbb
jnp
pop
push
jne
pop
fsub
call
cwde
push
(bad)
in
ja
pop
cli
fmul
add
sbb
inc
call
xchg
or
adc
mov
add
xchg
fcomp
xchg
mov
adc
and
ret
icebp
fdiv
inc
pop
pop
ret
sar
jp
and
pusha
(bad)
stc
push
pop
push
xchg
dec
fs
fmul
jge
xchg
repz
pop
push
out
cmp
leave
or
jb
push
push
push
and
push
xor
xor
push
push
xchg
jns
mov
movs
sahf
push
stos
pop
jb
pop
push
outs
add
mov
adc
push
hlt
xchg
call
and
ja
scas
stos
mov
mov
push
dec
add
jae
test
sub
push
inc
in
xchg
xor
xchg
lods
(bad)
in
push
sbb
sub
pop
and
addr16
in
hlt
movs
mov
inc
jne
mov
push
cdq
jmp
sbb
mov
lahf
mov
jmp
or
add
mov
xor
inc
mov
xchg
cmps
pop
pushf
add
xor
test
in
xor
push
jne
sbb
in
in
ret
test
rol
push
imul
dec
mov
and
push
mov
xchg
dec
xor
ret
fdivr
(bad)
shl
shl
jns
bound
cmps
scas
cmps
mov
fwait
push
repnz
xor
xchg
sub
mov
add
jmp
test
rcl
cmps
pop
sbb
push
popa
shl
xchg
scas
out
call
ret
mov
lods
movs
fmul
call
sbb
fcom
test
sbb
push
jo
mov
and
and
into
leave
add
js
in
mov
loopne
inc
push
test
mov
add
sub
sub
cmp
and
push
sub
stos
scas
and
pop
enter
and
and
xchg
dec
rol
in
adc
jge
mov
outs
or
lds
enter
xchg
mov
into
adc
adc
add
add
add
add
push
ja
mov
mov
and
sbb
test
adc
jo
pop
enter
xor
sub
test
and
add
clc
inc
cmps
dec
xor
lock
xchg
dec
push
cmps
fmul
adc
shl
ret
xlat
add
dec
push
fisubr
mov
rcr
jb
push
popa
xchg
cmp
push
imul
call
es
enter
mov
pop
leave
push
or
cdq
adc
adc
gs
retf
popf
cmps
jo
sbb
mov
fcomp
lock
pushf
rol
dec
add
sbb
inc
or
or
pop
cmp
sub
push
retf
mov
fisttp
mov
in
loopne
ins
push
inc
mov
lahf
loopne
xor
nop
repnz
jge
fstp
fadd
inc
in
mov
les
js
lods
das
fadd
(bad)
and
push
mov
xor
lea
push
or
or
fild
mov
stos
lock
inc
push
or
mov
or
loope
ret
or
jmp
clc
push
push
pop
rol
mov
icebp
and
adc
or
test
dec
lods
pop
jno
xchg
scas
push
repz
and
test
dec
push
loop
aaa
sub
lea
xchg
xor
add
nop
fild
test
mov
ins
sub
ins
aaa
enter
call
and
pushf
cmps
jns
fdiv
xchg
icebp
mov
enter
jmp
xor
fidiv
rcl
add
jle
nop
or
adc
repz
rcl
jnp
push
sbb
into
fnsave
sbb
sbb
inc
ss
in
sub
call
es
jns
pop
enter
adc
aaa
cmp
dec
enter
and
add
in
push
loopne
inc
fsubr
mov
loope
sbb
in
adc
stos
ret
lea
pop
push
xchg
call
adc
adc
add
and
add
mov
nop
xchg
cs
call
add
call
sub
cmp
aam
push
arpl
ins
xor
cld
(bad)
movs
sub
pop
jne
add
adc
jo
adc
fstp
stos
ja
add
adc
and
xor
xchg
cmp
push
push
aaa
mov
outs
cs
mov
mov
call
rcl
inc
mov
lods
je
or
test
dec
push
push
mov
or
jnp
sbb
inc
in
cmp
jo
mov
loopne
pop
stos
dec
mov
ret
(bad)
and
sbb
lea
retf
loopne
loopne
or
add
mov
sub
jg
xor
gs
retf
mov
adc
add
xor
fmul
loopne
loopne
sbb
mov
in
test
push
push
cld
fmul
fbstp
inc
jae
imul
leave
fadd
loope
dec
mov
scas
dec
fmul
je
sbb
mov
mov
jecxz
ret
sbb
fcom
mov
jmp
add
inc
pop
lock
mov
stc
sbb
test
popa
mov
lea
and
aaa
in
lds
xchg
add
jmp
cdq
and
mov
sub
in
lock
rol
lea
test
jo
sbb
inc
push
and
inc
or
and
cwde
or
es
out
retf
mov
or
nop
in
test
push
leave
inc
leave
push
jae
je
jne
inc
add
(bad)
jecxz
bound
inc
cmp
cmp
add
adc
lods
sub
jo
adc
adc
icebp
or
nop
dec
xor
add
sbb
cvttps2pi
repz
adc
xchg
xor
mov
imul
xor
push
xchg
pop
add
mov
fdiv
xchg
add
and
pushf
adc
sbb
dec
xor
jo
in
jmp
cmp
pop
je
push
xor
loope
ret
call
in
clc
push
test
popf
shl
push
push
jns
push
xchg
sub
xchg
push
jge
aam
pop
push
adc
jnp
ficomp
adc
mov
inc
loopne
add
cdq
call
xchg
cmps
repnz
xchg
lock
jmp
push
clc
enter
mov
(bad)
mov
cmp
iret
in
or
xchg
adc
adc
pushf
sbb
sahf
popf
and
stc
pop
sahf
retf
sub
lahf
pop
sahf
retf
push
xor
cmp
cmp
mov
stc
pop
inc
push
jns
lahf
dec
cld
mov
xchg
dec
in
movs
pop
hlt
std
pop
sub
pusha
(bad)
fs
cmps
push
shr
jo
in
jl
je
test
mov
jl
stos
clc
and
mov
mov
lods
nop
test
scas
cwde
je
sbb
mov
movs
adc
stos
mov
lods
jl
stc
mov
mov
cmp
hlt
mov
sub
and
mov
gs
xchg
adc
repnz
gs
mov
loopne
sub
gs
mov
test
enter
add
or
cmp
outs
cmp
adc
jne
rcl
stos
pop
test
dec
mov
inc
inc
or
xlat
mov
sub
push
and
xchg
push
mov
lahf
lahf
xor
pop
mov
hlt
add
add
mov
sub
xchg
cs
fisubr
in
add
sub
pop
mov
adc
dec
std
cmp
ror
je
mov
sti
add
retf
js
ja
ret
lods
or
dec
mov
mov
mov
mov
mov
mov
xchg
sub
pusha
mov
push
mov
in
mov
cmp
mov
das
mov
and
adc
mov
ds
or
and
sbb
je
sahf
out
pop
or
adc
sub
out
xor
aas
inc
dec
out
sahf
out
pop
bound
sahf
out
sahf
ja
test
je
mov
pop
pushf
mov
push
ret
clc
pop
inc
sbb
pop
add
icebp
ret
cwde
into
and
mov
mov
ret
mov
inc
call
mov
mov
xor
sti
sub
push
mov
mov
pop
inc
push
inc
(bad)
mov
lock
ret
inc
xchg
popf
in
ss
sub
mov
hlt
js
pop
inc
hlt
mov
cwde
cs
aad
sbb
inc
adc
ds
adc
into
inc
shl
mov
jmp
mov
aaa
jo
adc
mov
sub
je
xchg
push
retf
add
push
and
xchg
push
scas
(bad)
mov
adc
push
int3
les
mov
in
jg
mov
mov
in
dec
mov
sub
sub
and
mov
adc
pop
lods
adc
pop
ins
aad
or
aam
in
add
or
and
lahf
mov
popa
mov
loopne
jb
or
add
je
and
aad
push
cmp
call
ficom
mov
sub
jge
add
push
rcr
(bad)
cmp
and
push
pop
lds
pop
mov
or
popa
popa
sub
pop
push
in
pusha
shl
xlat
and
push
pop
mov
xor
push
pop
test
lock
push
repnz
iret
or
push
mov
push
xchg
mov
mov
dec
sbb
sub
in
or
push
cmp
xor
push
mov
or
or
and
call
cs
add
lea
sbb
add
(bad)
movs
jecxz
shr
sbb
aas
or
mov
xchg
test
je
push
mov
and
jne
outs
(bad)
adc
or
sub
fbstp
lods
sbb
(bad)
cmp
xchg
and
jae
push
add
call
lods
fnstenv
rcl
or
push
sub
or
hlt
jmp
sub
sub
aam
ret
mov
and
sub
stos
(bad)
mov
movnti
dec
pusha
and
nop
loop
movs
test
rol
adc
or
rol
sar
mov
sub
add
daa
jno
push
and
sbb
mov
xchg
cld
mov
or
popa
dec
add
sbb
jp
xchg
lods
rcr
mov
jo
or
pop
add
nop
fild
pop
push
inc
jmp
xchg
cmp
sub
mov
push
xchg
xchg
test
sbb
and
and
movs
out
lea
add
xchg
jge
pop
or
add
or
sub
dec
push
addr16
jb
adc
push
aaa
pop
mul
or
mov
push
mov
and
nop
retf
stos
inc
sbb
adc
inc
push
call
mov
inc
adc
push
repnz
lea
xchg
pop
add
add
movs
inc
cs
jle
mov
and
xchg
inc
jo
lods
add
mov
fsubr
loope
in
push
jge
xchg
inc
dec
dec
sar
adc
mov
jno
imul
and
imul
and
xor
pop
sbb
or
add
and
push
sub
or
push
adc
dec
xchg
shl
add
ins
xchg
mov
lods
mov
xchg
add
and
mov
call
sti
jne
dec
inc
mov
jge
xor
dec
leave
add
outs
and
pop
add
xchg
nop
add
test
nop
(bad)
push
movs
call
enter
adc
sbb
out
data16
dec
xlat
dec
or
fstp
push
xchg
jmp
mov
rcr
popf
sbb
add
(bad)
push
sbb
rol
mov
lods
mov
push
xchg
adc
enter
dec
lock
xor
stos
adc
lea
sub
rol
pinsrw
fwait
dec
inc
adc
push
jne
pop
fiadd
dec
aas
sbb
dec
enter
dec
mov
add
or
add
push
inc
push
and
push
aad
jge
enter
jo
stos
inc
pop
and
inc
stos
inc
push
and
sub
outs
in
add
adc
js
lods
lods
jl
nop
add
int3
xor
int3
stc
stos
jl
add
loop
je
mov
jl
shr
ror
fs
ins
into
sub
mov
adc
add
sub
lahf
push
jg
dec
mul
lahf
sub
add
retf
inc
imul
mov
lea
into
add
jo
pop
dec
pop
or
cmps
cmp
movs
sbb
dec
push
lahf
xor
test
add
retf
and
call
fmul
dec
xlat
inc
lods
and
xor
or
inc
mov
and
in
xchg
jle
sbb
sti
and
repz
xchg
mov
cmps
jo
mov
sbb
arpl
mov
jnp
ins
add
pushf
into
or
cmps
jne
movs
leave
push
rol
adc
adc
cmp
jno
add
nop
cmp
mov
push
vmread
jne
xor
das
sbb
push
jb
dec
push
mov
mov
fild
pop
cdq
add
push
pop
xchg
cmc
cmp
je
xchg
ins
shl
jmp
mov
push
add
xchg
or
sti
pop
cmp
test
push
sbb
mov
in
mov
lahf
sub
pop
xchg
das
adc
pop
movs
sub
add
add
call
xchg
lods
inc
stos
dec
fistp
sub
push
es
pop
cmps
mov
xchg
xchg
jo
sti
pop
cmp
test
imul
repz
xor
addr16
es
jne
pop
cmps
(bad)
or
aaa
adc
xor
pop
mov
into
cmp
add
cmp
add
dec
add
mov
add
pop
femms
pop
test
push
push
sbb
outs
leave
push
or
and
nop
popa
xor
sub
adc
inc
dec
sbb
mov
pusha
or
adc
in
xchg
and
adc
int3
or
jno
adc
mov
fistp
sbb
or
add
leave
fcom
fsubr
xor
popf
cmps
pop
ret
adc
mov
and
pop
add
mov
ss
dec
xchg
fwait
sub
cmp
sbb
mov
xchg
inc
inc
sbb
out
nop
xchg
fwait
test
mov
xchg
ss
xchg
push
imul
fs
sbb
push
xchg
loope
xor
dec
cmp
inc
xor
leave
dec
fistp
mov
lock
sets
xchg
(bad)
sub
add
inc
inc
test
ret
xor
jmp
in
(bad)
je
sbb
pop
xor
adc
dec
lods
test
add
rol
xor
or
(bad)
aad
xor
fst
push
sbb
pop
or
or
lds
adc
mov
adc
add
xor
adc
mov
fwait
jp
xchg
and
repz
push
adc
pop
sub
and
loope
dec
rcl
inc
jo
push
push
adc
nop
mov
mov
stc
repnz
mul
test
push
mov
xlat
mov
mov
fidivr
jne
je
inc
push
ds
add
frstor
push
push
push
push
ds
(bad)
sbb
mov
push
push
push
cwde
(bad)
adc
mov
inc
dec
push
sub
cdq
(bad)
sbb
rol
push
sahf
or
inc
clc
icebp
int
int3
xor
and
and
repnz
add
inc
inc
jb
shl
and
sub
shl
pop
xor
lods
inc
ins
rol
arpl
sar
xor
inc
push
fld
xchg
push
jmp
sahf
inc
cmp
fiadd
push
sbb
push
jmp
xchg
add
add
icebp
inc
test
ret
push
xchg
clc
das
mov
and
sbb
mov
mov
jmp
cmps
cwde
mov
and
call
nop
in
in
in
dec
cmps
inc
add
push
sub
xor
aam
lods
push
sub
mov
adc
loopne
adc
jne
loopne
pop
aam
ror
xor
aam
mov
pop
add
add
mov
jge
dec
rcl
add
sbb
lock
sbb
lock
repz
jae
mov
dec
cmps
dec
jns
add
add
and
inc
mov
add
es
push
cs
test
cld
or
fsub
cmc
test
sbb
stc
add
arpl
and
xchg
xchg
int3
push
stos
rol
or
nop
add
nop
out
shr
push
xchg
mov
loopne
pop
and
repz
and
fsubr
mov
add
add
dec
retf
inc
xor
push
std
cmp
xor
fild
(bad)
mov
bound
sbb
cmp
add
inc
mov
rol
push
add
inc
lods
stc
sti
or
pop
shl
jmp
jb
pop
push
pop
or
or
and
leave
in
mov
(bad)
fisttp
and
jbe
vpunpckhqdq
sub
rcl
sbb
fwait
dec
mov
in
fcomp
xchg
pop
mov
mov
jno
and
and
repnz
sar
loope
pop
adc
cmp
cmps
dec
push
inc
push
cmp
push
xor
sub
sahf
retf
push
sbb
and
mov
add
dec
scas
cdq
les
push
dec
inc
jmp
adc
push
or
mov
pop
mov
mov
jns
out
(bad)
fucomip
icebp
cli
fs
or
jae
xor
(bad)
and
push
or
add
scas
sbb
rol
and
lds
mov
jl
add
add
in
imul
sbb
add
jmp
xor
or
mov
add
lods
dec
in
(bad)
shr
xchg
and
jle
repz
and
add
and
xor
enter
imul
ins
pusha
inc
dec
js
scas
dec
in
sub
pushw
add
push
dec
add
adc
sub
aam
pop
add
pop
shl
in
and
mov
pop
and
loopne
bound
mov
push
enter
lock
test
pop
or
or
mov
or
lock
add
cmp
pop
or
icebp
lock
xchg
test
dec
cmp
push
adc
imul
in
dec
adc
adc
push
adc
dec
test
mov
in
leave
scas
and
js
mov
and
in
push
and
sub
in
add
jbe
add
scas
push
jne
pop
or
mov
cmp
rcl
add
pop
mov
leave
leave
leave
adc
cmp
loope
fwait
sbb
test
xor
cmp
mov
imul
cmp
nop
push
adc
and
and
jae
xchg
jb
inc
inc
inc
fdiv
pop
inc
test
add
xchg
out
adc
rcr
dec
pop
(bad)
std
repz
and
jne
out
dec
loope
imul
jle
push
jg
pop
and
(bad)
add
retf
icebp
push
fcomi
mov
inc
cmp
and
and
push
inc
cwde
mov
ret
push
or
and
jo
movs
fadd
dec
jp
(bad)
in
pop
popa
push
pop
push
pop
adc
push
mov
add
cmovs
mov
retf
imul
loopne
icebp
jecxz
out
lods
xchg
cmp
in
shl
push
stos
jmp
fsubr
mov
repnz
push
mov
shr
xchg
inc
repnz
out
pop
and
imul
mov
out
and
mov
mov
mov
or
mov
xchg
mov
ret
std
inc
pop
leave
rol
or
fcom
fist
push
movs
sub
xor
inc
cmp
jno
xor
sbb
in
pop
adc
lock
or
inc
cmps
sub
clc
or
dec
lods
nop
push
shr
out
or
push
in
popf
and
test
xchg
test
add
mov
or
pop
loope
push
and
movs
aad
dec
pop
jo
jmp
push
stc
sub
pop
push
scas
push
(bad)
adc
push
popf
repz
pop
pop
pop
pop
ins
hlt
add
cmp
mov
cmc
hlt
and
push
leave
clc
xchg
sar
je
clc
rol
and
dec
stos
xchg
push
loopne
sbb
(bad)
dec
call
add
inc
dec
sbb
call
imul
sbb
inc
pop
pop
es
and
cmp
scas
arpl
scas
push
adc
push
mov
pop
push
add
in
inc
jg
stos
push
or
jg
inc
or
aam
xor
pop
push
xor
push
addr16
sbb
pop
aaa
add
push
add
push
or
sub
sub
mov
fwait
inc
sbb
push
pop
jle
xchg
pop
push
mov
jne
sbb
les
jns
aad
sbb
adc
sub
adc
cmp
push
mov
test
cmp
dec
xchg
lods
popa
mov
popa
shl
dec
push
and
push
in
in
xchg
and
xchg
sbb
sbb
lods
ret
ret
xchg
imul
mov
and
xchg
xor
test
pop
push
adc
pop
push
xchg
jmp
rol
lock
cmp
or
cs
popa
inc
jle
ss
retf
add
adc
pop
out
das
add
rcl
in
cmp
mov
lea
mov
push
aaa
lea
xor
repnz
jle
in
push
sbb
push
jnp
adc
cwde
pop
pop
sbb
push
add
jl
push
push
ret
mov
sub
push
popf
push
push
push
fdiv
retf
rcr
rcl
mov
(bad)
push
dec
pop
pop
pop
in
xchg
inc
inc
push
sbb
push
shr
mov
nop
rol
push
daa
stos
loopne
retf
in
jp
fwait
sub
jl
into
call
mov
mov
je
add
call
sbb
ret
lods
inc
pop
adc
dec
cmp
fild
or
stos
fadd
not
shr
add
sbb
rol
dec
add
ret
sbb
xchg
xor
push
cmp
jbe
jbe
and
sub
push
ror
mov
mov
adc
fadd
fstp
(bad)
jo
inc
or
xchg
mov
xor
jl
(bad)
push
call
push
xchg
jmp
std
and
and
adc
and
mov
push
mov
cmp
push
frstor
add
sub
adc
pop
add
fcomp
add
lds
add
mov
jno
movs
xor
sti
push
push
push
jns
sbb
push
call
sbb
std
xor
or
cmp
ja
pop
sub
pop
dec
xor
jne
fs
popf
push
mov
rol
mov
add
mov
fsubr
fwait
push
add
xor
add
gs
add
sub
adc
fisttp
dec
das
inc
or
and
(bad)
xchg
in
enter
aad
pop
xchg
push
sub
mov
pop
adc
nop
ss
and
(bad)
add
enter
sbb
inc
cmp
jno
push
and
xor
push
add
shl
cmp
pop
jmp
sahf
lea
push
cmp
les
sbb
adc
mov
dec
and
jo
in
jp
or
inc
push
dec
adc
dec
push
inc
push
add
stos
and
fsubr
pop
lock
aad
and
enter
inc
xor
inc
or
xlat
sub
lea
sub
dec
cld
cli
fadd
or
add
sbb
add
add
push
adc
or
cwde
test
aad
pop
arpl
mov
and
add
mov
addr16
shl
pushf
mov
sub
mov
(bad)
mov
or
mov
push
push
test
xchg
ds
and
add
xchg
inc
inc
add
inc
dec
lds
jmp
and
and
mov
pop
jb
xchg
inc
(bad)
bound
inc
push
xor
pusha
mov
and
popf
xchg
test
call
mov
add
xchg
dec
lods
mov
pop
add
adc
and
icebp
pop
mov
dec
pop
icebp
and
inc
or
or
aam
push
lea
adc
dec
mov
nop
pop
and
add
mov
shl
shr
lock
sub
rcl
and
test
cwde
jo
pop
xchg
inc
ins
push
movs
inc
nop
xor
out
cwde
xor
pop
cwde
jne
or
movs
stos
je
xor
pop
or
rcr
xor
jo
aaa
lods
add
mov
or
in
adc
das
inc
in
and
lock
mov
xor
aas
add
cmp
push
add
ss
mov
adc
and
ss
push
mov
xor
and
cmp
pop
jb
xor
sbb
leave
mov
cdq
xchg
and
dec
push
ror
push
mov
or
movs
cdq
aas
xor
jbe
enter
push
pop
in
inc
sbb
and
add
xchg
lahf
pop
pop
call
xor
int
jne
test
push
jne
fidiv
nop
xor
je
jmp
cmp
xor
or
push
nop
scas
xchg
adc
cld
add
arpl
aad
inc
jne
loop
adc
(bad)
ins
in
xor
outs
mov
pop
mov
rcl
jns
in
inc
push
jno
cmp
or
imul
inc
push
ss
jns
sub
sub
or
sbb
js
lea
add
cmp
add
stos
retf
fadd
fisub
xchg
cmps
xor
add
movs
mov
xchg
mov
jmp
and
dec
jp
xchg
adc
mov
mov
inc
jmp
push
nop
add
jge
nop
and
loopne
or
mov
in
dec
xchg
mov
mov
jecxz
pusha
shl
aas
cmps
xlat
fwait
xchg
or
add
and
or
cmp
cld
add
push
xchg
call
sbb
aam
xchg
mov
add
mov
retf
xchg
mov
xchg
sub
movs
add
mov
fs
push
nop
aas
mov
push
jle
mov
cmp
jle
jae
hlt
inc
dec
lea
cmp
call
add
lock
hlt
fistp
jne
push
adc
ja
cmp
mov
xor
fisttp
js
mov
into
mov
out
cmp
xchg
fwait
adc
add
fld
ins
dec
mov
push
or
adc
lock
sub
out
xor
pop
hlt
jg
pop
and
pop
lods
inc
xchg
sub
mov
js
sar
pop
xor
nop
shr
jecxz
push
xor
xchg
fimul
push
mov
inc
fistp
int
push
dec
inc
call
jne
stos
mov
icebp
or
pop
fdiv
push
mov
hlt
aad
cmps
push
add
sbb
cwde
cmc
and
inc
pop
mov
or
(bad)
in
pushaw
frstor
or
inc
mov
imul
jmp
mov
push
test
das
xchg
xchg
retf
inc
es
xor
clc
lahf
lahf
lahf
sub
push
push
stos
add
push
push
mov
lahf
inc
pop
push
or
inc
sbb
jb
pop
push
mov
fdiv
add
mov
ror
ror
out
push
mov
and
(bad)
les
xor
arpl
jecxz
fmul
fimul
sub
add
jne
loopne
in
bound
das
jecxz
out
mov
and
test
inc
lahf
push
dec
test
in
cli
in
repnz
dec
xchg
scas
int3
(bad)
in
dec
push
movs
xor
or
sahf
and
in
in
or
mov
es
xchg
cmp
test
add
or
xor
adc
cs
or
call
xor
or
dec
xchg
jl
mov
dec
mov
push
push
sbb
sbb
jo
retf
add
imul
dec
add
inc
push
dec
sub
shl
adc
dec
mov
jae
push
rol
mov
mov
les
outs
in
mov
mov
rcr
inc
sahf
pop
das
or
or
(bad)
push
xchg
es
xchg
jno
in
and
popa
stc
fdivr
es
mov
and
cmp
in
dec
xor
and
rcr
mov
es
adc
dec
xlat
and
pop
sbb
and
(bad)
daa
lea
movs
shl
pop
mov
or
mov
push
pop
cdq
inc
add
aam
cmps
and
rcr
or
push
add
mov
lods
or
and
push
and
bound
xchg
dec
jne
sub
or
cmp
mov
or
mov
dec
add
aaa
jae
in
or
fsub
fmul
jle
popa
add
sahf
add
add
dec
enter
add
add
rcl
pop
mov
(bad)
jne
xchg
fcom
rol
fadd
push
push
test
cmc
jbe
dec
loope
sub
cmp
out
mov
inc
sub
lods
cmp
push
inc
retf
inc
xchg
cmps
inc
xor
call
inc
cmps
jne
jne
(bad)
in
mov
test
fcomp
inc
push
out
test
pop
pushf
mov
enter
mov
gs
xor
je
stos
mov
test
mov
mov
and
call
neg
out
push
aam
jmp
pushf
aaa
aam
and
and
add
mov
or
add
add
aaa
les
xor
xchg
push
fadd
out
or
sub
jns
mov
add
sub
mov
shl
cwde
add
movs
retf
mov
mov
dec
lods
outs
mov
and
stos
mov
loope
jle
adc
in
adc
add
mov
lock
adc
enter
mov
ret
pop
push
add
pusha
mov
(bad)
mov
ss
daa
adc
clc
push
and
adc
jge
cmp
sbb
jge
push
pushf
and
test
ret
(bad)
xchg
push
stc
in
add
sbb
push
mov
outs
and
enter
loopne
inc
cmps
pusha
pop
sbb
(bad)
lea
outs
dec
push
movs
hlt
mov
add
ja
pop
push
aas
and
pop
leave
push
cmp
or
aaa
(bad)
push
adc
and
sub
or
mov
bound
je
sbb
je
and
add
fadd
inc
rol
mov
adc
inc
ds
(bad)
loopne
add
test
div
push
xor
mov
(bad)
imul
mov
dec
lods
rol
or
xor
pusha
inc
call
or
ret
and
sbb
sbb
outs
mov
adc
or
ret
arpl
mov
xor
fcom
fs
cmp
fmul
add
nop
pop
or
xor
cmp
add
popf
mov
or
adc
adc
pop
cmp
test
fld
cmc
jg
ins
fldl2e
imul
and
int
xchg
add
cld
jns
pop
push
cmp
popa
xchg
push
popa
jge
adc
cmp
xor
mov
es
jmp
or
pop
jmp
jecxz
mov
jo
lea
jbe
xchg
xchg
dec
test
jns
add
mov
nop
int
cmp
ss
inc
movs
imul
or
inc
ret
or
xor
xchg
stos
push
popa
test
jmp
inc
mov
rol
and
or
xor
stos
and
mov
sub
push
push
pop
gs
pop
rcl
sbb
xchg
sbb
lea
(bad)
sbb
xor
enter
sbb
inc
sbb
sub
or
sbb
or
jmp
test
jne
call
mov
lods
push
inc
push
cmc
mov
pop
inc
push
xor
mov
test
shr
jmp
mov
jmp
xchg
je
xchg
aas
sbb
popa
add
sbb
inc
mov
mov
imul
jae
mov
mov
and
lods
ror
inc
add
(bad)
ss
les
adc
icebp
pop
mov
adc
dec
jmp
test
sub
pop
bound
push
jno
and
mov
rcl
or
or
fadd
push
shl
xchg
repnz
es
sbb
pop
ret
mov
sbb
jl
add
mov
pop
ja
cmps
sub
mov
add
(bad)
jle
mov
out
pop
sub
jnp
mov
in
fwait
test
arpl
jle
dec
mov
call
call
xchg
jp
xchg
adc
das
cdq
ror
call
dec
push
jno
inc
sar
add
dec
cvttps2pi
add
mov
call
xor
stos
mov
movs
lock
pop
lea
ja
xchg
pop
and
fs
xor
mov
pop
inc
xor
push
or
xchg
call
add
mov
pusha
sub
and
jnp
push
adc
loope
add
call
sub
mov
int
xchg
(bad)
push
sub
sbb
ss
sub
cmp
mov
adc
stos
add
movs
adc
cmps
pusha
add
mov
pop
adc
push
outs
add
int
jl
or
sub
pop
cmp
sub
das
loopne
push
cmp
movs
sbb
out
mov
or
xor
iret
fwait
dec
repnz
test
sbb
adc
or
mov
sub
xor
lock
xchg
in
dec
jae
das
lock
inc
ja
dec
ret
loopne
in
push
adc
cmp
push
loop
dec
cmps
push
imul
adc
js
ja
or
das
int3
sbb
jge
xlat
pop
test
lock
fist
mov
rcr
adc
cmp
jae
add
seta
sbb
pusha
cmp
call
push
xor
lods
and
jb
push
push
je
jle
pop
sub
in
sbb
sub
or
mov
dec
pop
shl
pop
inc
popa
pop
add
or
fnstsw
xchg
add
in
test
add
je
push
or
push
adc
sub
push
out
push
sbb
retf
mov
aaa
test
mov
mov
arpl
dec
and
adc
shr
add
in
mov
jg
mov
and
or
es
xchg
adc
cmp
jg
cmp
popf
inc
in
pop
mov
sub
xor
and
or
cdq
movs
jne
les
mov
and
dec
les
lods
nop
sub
adc
add
dec
movs
mov
pusha
(bad)
jbe
add
inc
dec
sbb
scas
imul
mov
ret
enter
rol
int3
call
jns
fmul
jg
mov
adc
and
out
pop
test
add
add
stos
sbb
add
movs
(bad)
stos
mov
nop
mov
xlat
aad
jmp
jne
ret
jo
jl
add
loopne
push
xchg
pop
cmp
jne
add
jl
jmp
sahf
sbb
retf
sete
dec
fs
ret
adc
jno
add
mov
pusha
call
inc
ror
mov
push
loopne
xor
lock
in
sbb
sub
fnstsw
mov
fist
pop
addr16
adc
je
mov
dec
iret
pop
iret
inc
enter
cmp
imul
sahf
push
push
pop
sbb
gs
pop
pop
iret
ret
mov
fdiv
xor
adc
add
and
pusha
cmps
pop
or
dec
jmp
popf
or
test
add
sub
(bad)
fld
mov
mov
jp
or
cmp
adc
jb
and
or
mov
addr16
cmp
jle
bound
fwait
dec
fsub
push
inc
add
pop
and
sbb
or
jecxz
(bad)
pop
rcl
sbb
mov
cmp
rol
test
push
(bad)
jg
mov
les
xor
jno
das
pop
jecxz
mov
fs
inc
loope
push
dec
(bad)
cmp
shr
xor
inc
sub
ins
popa
xchg
cmp
pusha
movs
mov
scas
lods
cmps
fild
hlt
fadd
in
in
adc
and
test
xchg
adc
and
add
and
js
retf
inc
stos
cdq
ret
ja
hlt
enter
mov
mov
mov
jg
scas
mov
xchg
lahf
sub
xchg
das
pushf
test
movs
lea
(bad)
sbb
mov
div
add
mul
in
dec
enter
xor
gs
mov
aaa
fmul
ret
loopne
xor
pop
call
and
sbb
hlt
pop
jmp
push
adc
sbb
push
push
or
add
inc
and
push
push
sub
nop
jl
sub
push
sub
push
adc
nop
push
sub
push
push
repnz
sub
pushf
je
add
fist
mov
adc
xor
add
es
mov
xchg
push
imul
fstp
pop
xchg
push
mov
pusha
add
and
xor
xchg
mov
sbb
cmp
rcr
xor
or
jmp
adc
inc
out
xchg
shl
sbb
popf
add
nop
cmp
inc
sbb
pop
or
lea
xchg
sbb
push
push
fadd
or
mov
stos
push
adc
mov
gs
xchg
jp
mov
mov
or
sub
and
or
sbb
push
pop
or
repz
inc
outs
or
sbb
jne
fs
mov
push
clc
cli
(bad)
(bad)
fwait
adc
imul
or
nop
lock
push
call
lods
ror
je
fmul
add
or
xchg
dec
sub
push
push
mov
enter
rcl
and
push
push
xor
fdiv
daa
push
add
ret
fdiv
imul
les
or
ds
push
and
push
sbb
jmp
cmp
mov
je
push
in
jmp
iret
js
jnp
enter
pop
lahf
or
into
sub
sbb
mov
test
add
enter
inc
shl
lahf
add
ret
js
xor
sbb
aam
in
sbb
xchg
push
jne
inc
or
mov
mov
test
inc
mov
aam
sub
xor
xchg
sbb
or
inc
xor
jmp
inc
popa
fmul
shl
loope
cmp
jl
shl
ins
sub
adc
or
mov
es
ja
mov
dec
jns
xor
inc
out
fsubr
push
popa
gs
outs
or
xchg
outs
sub
(bad)
adc
add
adc
adc
push
dec
or
mov
ret
cmp
sub
mov
pop
add
mov
sub
push
mov
or
(bad)
push
and
pusha
push
cdq
loope
mov
or
test
add
and
dec
sub
mov
dec
add
adc
nop
adc
aas
sahf
test
inc
mov
mov
pop
ja
nop
mov
push
nop
add
xor
and
mov
mov
lock
push
dec
pop
daa
mov
add
push
cmp
pop
jne
inc
nop
sub
sbb
(bad)
xor
leave
in
add
popa
add
xor
push
scas
xor
inc
ret
icebp
cmps
add
pusha
add
(bad)
mov
push
(bad)
xor
and
ins
push
and
call
pop
stos
and
and
add
or
push
dec
retf
popa
pop
pop
add
or
push
call
xchg
pop
mov
mov
mov
or
retf
mov
mov
sub
stos
or
leave
push
lahf
sbb
in
sbb
add
mov
mov
leave
push
pop
add
cdq
mov
inc
jb
mov
nop
cli
sbb
pop
dec
xor
es
call
inc
push
xor
mov
xchg
push
xor
adc
ss
mov
jns
or
mov
nop
test
add
push
lea
sub
jno
and
fadd
add
in
popf
fadd
pop
pop
int
mov
xor
add
in
mov
movs
jmp
leave
add
lock
cmp
jmp
push
es
xor
ror
dec
pop
add
out
movs
sub
popa
sbb
outs
and
mov
dec
dec
dec
jmp
adc
pop
icebp
aas
sbb
in
push
lock
out
xchg
mov
adc
adc
lds
mov
in
adc
sbb
pop
sub
mov
mov
cld
(bad)
or
ficomp
ds
cmp
std
mov
ror
jge
jmp
jle
lock
ss
pop
push
dec
and
and
and
mov
and
mov
inc
mov
retf
cmc
sub
and
arpl
aaa
mov
and
push
pop
jmp
stos
or
jns
pop
inc
jns
dec
inc
jp
cmp
push
pushf
xchg
pop
mov
sar
mov
sti
fucomi
jns
add
lock
adc
ret
fwait
cld
mov
or
pop
fnsetpm(287
fdiv
inc
sub
and
inc
mov
inc
mov
cdq
(bad)
and
lds
xor
sbb
dec
lahf
lods
mov
ret
sbb
add
mov
dec
in
cmps
cmp
cs
and
and
cmp
inc
les
loope
inc
std
call
xchg
fadd
or
(bad)
call
call
iret
xchg
add
push
and
cmp
cmp
xor
pop
ins
icebp
adc
cmp
cmp
loopne
sbb
daa
dec
mov
push
xchg
mov
lahf
sub
(bad)
pushf
push
hlt
mov
add
mov
call
hlt
mov
sbb
sar
push
push
test
adc
fs
int
in
mov
mov
jmp
adc
or
ja
pop
push
push
jg
in
lea
inc
imul
xchg
mov
lock
push
cmp
stc
aaa
enter
rol
aam
pop
pop
push
mov
mov
jns
test
inc
inc
pushf
fstp
jnp
inc
sbb
in
jns
or
push
cld
lods
lods
jl
jge
mov
add
or
inc
or
sub
mov
cwde
sbb
xchg
xchg
das
and
ret
gs
sub
xor
fimul
pop
stc
mov
push
pop
dec
lea
mov
xchg
push
push
inc
pop
adc
das
das
sub
iret
xor
aaa
sar
inc
inc
lock
add
movs
inc
add
push
add
fdiv
sbb
inc
add
mov
xchg
push
add
rep
push
arpl
jge
js
and
add
mov
retf
inc
adc
ins
pop
retf
ins
jae
dec
mov
aas
push
adc
pusha
mov
or
cwde
xor
aaa
add
adc
inc
es
and
xor
int
imul
fild
sbb
mov
add
clc
imul
push
shr
movzx
fcmovb
add
sbb
add
je
push
and
mov
retf
push
push
push
sbb
and
cld
cmc
inc
bound
ja
xchg
mov
jne
stc
or
movs
mov
adc
push
xor
xor
xchg
add
or
mov
xchg
push
cmc
jo
clc
add
loopne
arpl
inc
xor
les
out
leave
rcr
or
ret
jne
jo
jl
dec
js
les
(bad)
push
push
sbb
aam
shl
les
xor
mov
scas
sbb
pop
add
push
push
inc
fdivr
cwde
mov
nop
rcl
rcl
enter
int3
fild
push
loope
sbb
jo
push
mov
adc
pop
jmp
imul
and
or
add
fild
add
sbb
mov
dec
pusha
xor
scas
mov
movs
std
cs
cli
pop
das
cdq
xchg
leave
cmp
dec
xlat
fcomp
or
fcomp
popa
ins
cmp
push
push
mov
xchg
lods
(bad)
cld
xor
cld
push
movs
xchg
or
add
popa
inc
or
xor
aam
pop
adc
sub
sub
stos
add
push
out
out
rcr
icebp
sub
and
into
xchg
sub
mov
pop
inc
nop
lds
pop
fwait
dec
and
add
ins
jae
rol
adc
mov
std
jl
ret
mov
lods
retf
pop
jb
mov
push
mov
jg
push
fwait
pop
xchg
xor
sub
mov
jb
mov
sbb
leave
test
fimul
rcr
stos
mov
jp
adc
push
pop
cmp
push
add
jmp
pop
adc
je
pop
add
and
lock
les
and
movs
jne
push
and
dec
aam
lahf
adc
push
add
sub
dec
(bad)
sub
out
enter
nop
add
adc
add
jns
dec
mov
in
popa
cmp
pop
sub
or
sahf
cmp
les
mov
in
pop
shl
mov
in
xor
pusha
dec
je
jmp
loope
(bad)
pop
and
cmps
mov
cmp
scas
and
inc
inc
mov
add
pusha
adc
dec
cmp
xchg
lock
rol
xchg
int3
std
inc
sub
dec
movs
fdivr
jb
aam
call
gs
shl
xchg
sbb
mov
sbb
shl
aaa
ror
mov
cmp
mov
pop
ja
cwde
ret
and
adc
fcmovne
sar
mov
cmps
(bad)
mov
jmp
nop
pop
add
and
jo
ins
and
inc
jae
jmp
add
or
sub
repz
mov
es
imul
leave
and
cmp
mov
push
adc
jmp
mov
call
adc
jo
mov
mov
rcr
pop
pusha
enter
leave
push
push
mov
and
sar
int3
nop
lods
sbb
sbb
mov
pop
ins
push
push
jae
ror
nop
in
dec
shl
in
lea
mov
cs
xor
lock
clc
jge
mov
push
push
mov
stc
inc
mov
cmp
out
dec
mov
dec
cmps
and
push
add
inc
jmp
clc
test
out
ins
xchg
jg
ss
and
enter
push
test
cmp
jns
arpl
mov
mov
cmp
hlt
nop
test
pop
mov
ret
push
mov
mov
(bad)
shl
mov
mov
lock
xchg
in
data16
jge
inc
call
add
add
add
adc
xchg
scas
add
mov
add
inc
pop
stos
enter
in
add
dec
mov
xor
movmskps
xor
inc
xor
sub
shl
push
(bad)
dec
xor
or
pop
inc
add
mov
repnz
fs
pop
bound
out
inc
cmp
sbb
xchg
sub
test
xchg
sub
addr16
lods
xor
add
mov
sbb
(bad)
fdiv
xor
data16
push
or
mov
cwde
lahf
lock
dec
or
cmp
in
push
in
push
inc
cwde
cmp
cmps
cmp
mov
leave
shl
or
sbb
cs
fsubr
or
fsub
ret
mov
mov
aam
xor
arpl
(bad)
and
rcr
mov
jb
les
aam
movs
int3
xchg
sbb
sbb
cdq
les
mov
push
ins
and
mov
pop
add
push
nop
loope
in
pop
out
fs
jo
pop
push
xor
add
ss
jne
inc
mov
les
push
jne
in
les
sbb
xor
xchg
ja
arpl
mov
cmp
out
push
adc
and
xchg
xchg
iret
rol
movs
repnz
inc
in
push
or
jmp
jmp
sbb
mov
sbb
aad
mov
fsub
or
mov
int3
and
sbb
sbb
lods
xor
mov
adc
hlt
shr
xor
add
jbe
sbb
dec
ins
add
or
or
icebp
(bad)
in
cmp
inc
jae
xor
js
test
in
cmp
add
or
sar
popf
ins
aam
xor
add
push
sti
mov
push
adc
pop
sbb
jge
jmp
dec
shl
into
xor
jmp
leave
mov
and
xor
repz
repnz
jge
mov
dec
mov
imul
mov
cdq
inc
idiv
mov
cli
mov
test
ins
add
sub
clc
aas
int
popf
add
lea
push
femms
mov
pop
jle
lock
jmp
clc
add
es
xor
jmp
(bad)
nop
add
arpl
push
leave
jg
imul
cmp
inc
aas
nop
das
ins
or
sahf
out
pop
imul
aas
int3
add
mov
addr16
and
inc
imul
cmp
jmp
xchg
test
test
dec
dec
dec
in
xchg
xor
daa
in
call
sub
div
mov
je
imul
dec
push
mov
pop
jmp
packsswb
jmp
jle
push
aas
dec
fcomp
(bad)
mov
pop
cmp
jl
je
sub
cwde
shr
fdivr
sub
push
push
mov
and
jb
pop
adc
call
add
pusha
jne
sub
lods
sub
pushf
(bad)
and
push
and
imul
icebp
or
imul
cmp
dec
out
add
mov
adc
inc
inc
mov
test
enter
add
adc
xor
jne
jbe
add
ins
or
cmp
pop
sti
pop
adc
mov
push
xor
add
mov
cmp
cmp
in
mov
push
lods
push
jb
push
inc
pusha
add
pop
push
fistp
cld
test
sub
ja
jne
cli
ja
push
out
jmp
mov
pop
ja
stos
nop
xchg
(bad)
and
jmp
or
sbb
mov
pushf
mov
scas
cdq
lods
mov
adc
mov
pop
push
fs
push
ret
inc
iret
fadd
adc
retf
or
and
xor
adc
cli
pop
les
mov
pop
inc
imul
mov
add
adc
aam
fld
inc
sub
lods
or
cld
sbb
cmp
or
push
fild
rcl
lods
push
push
add
inc
fs
out
or
pop
inc
std
and
push
push
mov
aam
or
test
push
pop
sar
sub
jge
outs
int3
mov
push
mov
push
mov
outs
sbb
les
xor
ins
xchg
dec
xchg
cmp
je
and
adc
or
sbb
in
dec
test
lods
xor
mov
xor
push
mov
cmp
pop
pop
test
push
pop
test
push
ficom
enter
sub
ss
or
jne
dec
add
test
adc
pusha
pop
xchg
wbinvd
or
call
jmp
xchg
sti
mov
pushf
mov
imul
cmps
mov
add
popf
ins
or
adc
inc
pop
sub
adc
dec
sub
jmp
out
test
adc
lods
sub
pop
xor
push
inc
pushf
ret
sbb
cmps
(bad)
inc
loopne
jmp
enter
stos
sub
add
cmp
xor
jmp
sbb
mov
test
or
outs
and
jmp
sbb
cmp
daa
cmp
sub
dec
add
mov
sti
pushf
add
push
push
lods
mov
iret
sub
push
test
cwde
test
repnz
adc
add
test
and
and
ror
add
rcl
lock
and
fs
je
fisttp
test
add
add
ret
jge
call
loope
sub
xchg
out
jnp
add
aam
add
or
int3
xchg
pop
xor
push
mov
dec
pusha
push
lahf
das
xchg
scas
sub
test
add
ins
jmp
mov
pop
mov
scas
inc
or
pop
jae
or
fwait
xchg
push
jo
dec
jno
dec
add
(bad)
je
sbb
lock
fsubr
mov
pop
push
mov
repnz
sbb
dec
popf
repnz
cmps
mov
add
rdpmc
sub
mov
das
jno
jl
pop
adc
and
imul
cmp
inc
adc
nop
sub
adc
dec
stos
movs
jge
sub
sub
inc
mov
fs
inc
push
in
sub
push
daa
or
cs
xor
mov
nop
call
push
adc
das
add
adc
xchg
retf
repz
cmp
push
push
and
es
and
sub
aaa
mov
add
jp
or
xchg
jg
ins
cmp
enter
xor
clc
out
enter
mov
pop
inc
add
gs
or
bound
gs
jbe
in
gs
mov
std
push
retf
jo
jae
gs
sub
or
gs
mov
or
gs
shl
or
gs
or
hlt
jbe
gs
aam
push
loopne
xor
push
pop
gs
popa
jl
gs
or
pop
loopne
pop
pusha
gs
pop
test
retf
scas
fs
or
pop
push
push
push
cmp
adc
pop
retf
test
ret
push
add
jecxz
out
pop
cld
dec
in
mov
cmp
ror
dec
add
xchg
push
push
dec
movs
add
ins
add
add
mov
daa
push
ffree
in
sbb
leave
sbb
shl
leave
inc
cdq
fsub
inc
jb
sub
lock
add
adc
pop
lock
fimul
sbb
sbb
jmp
sbb
test
and
ret
in
mov
mov
aaa
movs
shl
ja
in
test
mov
mov
push
and
adc
je
mov
movs
mov
xchg
cmps
scas
call
inc
mov
aas
and
or
retf
push
cmp
mov
adc
push
push
pusha
je
dec
or
adc
jne
and
adc
sbb
jns
push
in
sbb
dec
mov
cmp
and
mov
push
mov
and
cmp
push
jg
push
mov
mov
mov
add
or
dec
mov
push
call
dec
cdq
jns
inc
adc
mov
push
and
jmp
inc
addr16
sbb
shl
mov
adc
mov
mov
or
test
aaa
adc
sbb
add
push
sub
adc
lock
dec
loopne
mov
in
push
xchg
push
jo
shr
jae
xor
adc
sub
add
or
in
out
mov
xchg
in
pop
xchg
sar
test
sbb
daa
mov
adc
outs
pop
lea
dec
adc
movs
cmp
rcl
call
popa
dec
in
jp
popf
push
jb
xchg
in
add
lock
push
cmp
jecxz
sahf
jle
jo
mov
pop
push
and
test
xor
push
push
dec
movs
outs
add
mov
(bad)
sar
and
ins
ins
mov
js
xor
sub
xor
jbe
nop
push
movs
pop
cmps
xchg
push
inc
sbb
ffree
and
lods
add
dec
dec
sub
shrd
aad
pop
mov
jmp
push
stc
and
and
int3
hlt
sahf
push
add
arpl
adc
or
sub
dec
push
(bad)
inc
loope
(bad)
test
mov
jno
dec
push
fisubr
int
cmp
lods
adc
scas
mov
jno
dec
jae
pop
or
dec
push
test
pop
mov
jl
in
repnz
xchg
sbb
dec
mov
dec
ss
ror
or
xor
cld
cmps
mov
in
push
inc
or
mov
add
pop
ret
and
jb
cmps
adc
(bad)
test
cmc
lods
sub
pop
cld
push
je
jne
xchg
repnz
xchg
fldln2
sub
mov
add
jmp
loop
movs
cmp
ins
jne
pusha
dec
ss
sbb
ds
and
fnstsw
out
ret
les
and
nop
dec
test
jmp
sbb
inc
or
test
jmp
adc
and
enter
jecxz
jp
test
ss
scas
ins
dec
sbb
and
adc
call
movs
ss
je
pop
inc
and
adc
jno
mov
addr16
or
push
mov
adc
inc
fwait
xor
dec
push
push
sar
dec
cmps
add
lds
or
dec
dec
add
fisub
sahf
push
sub
es
js
push
les
sub
xor
(bad)
pop
push
inc
retf
test
mov
iret
add
leave
(bad)
movs
into
add
pop
arpl
pushf
ins
jne
mov
pop
cmp
dec
jmp
pop
movs
fwait
xchg
and
mov
and
push
xlat
in
in
xchg
dec
sbb
lea
outs
and
adc
and
mov
sub
jle
sub
push
pop
add
js
inc
es
inc
adc
lds
fisub
in
and
or
sub
cmp
fs
imul
iret
dec
leave
nop
sbb
xor
inc
sub
push
xor
pop
dec
dec
inc
mov
pusha
push
and
out
cmp
jl
mov
retf
add
leave
out
inc
hlt
imul
sbb
sbb
xchg
and
dec
or
and
sbb
adc
enter
ficom
stos
pop
dec
sbb
cmp
add
mul
push
cmp
lods
je
enter
movs
sub
test
sub
cmp
cmp
or
stos
sbb
inc
cmps
rol
mov
add
inc
xor
adc
cmp
rcr
inc
add
movs
das
mov
inc
mov
imul
xlat
inc
or
dec
fnstsw
push
mov
mov
std
test
loope
add
je
pusha
inc
inc
dec
pop
sbb
jb
imul
or
adc
dec
in
push
mov
sub
adc
pushf
pop
leave
and
sub
(bad)
ds
dec
js
mov
inc
pop
lea
ret
sbb
cmp
jne
ret
inc
sub
mov
repnz
pushf
add
adc
add
sub
cdq
xor
imul
add
add
push
(bad)
sub
xor
int
inc
and
inc
movs
icebp
outs
sbb
xor
sub
sub
les
add
push
ja
sub
sbb
js
cmp
stos
add
mov
cdq
xor
inc
jb
pusha
in
repnz
ins
mul
adc
pop
ds
inc
pop
(bad)
hlt
imul
imul
xchg
inc
or
jno
inc
jno
test
adc
movs
loop
xor
sbb
add
jo
shl
cmp
mov
cs
lods
cmp
in
rol
mov
sbb
add
out
pop
add
sub
push
outs
cmps
nop
mov
mov
sub
pop
pop
cld
pop
leave
lds
sbb
das
pop
pop
mov
inc
dec
sahf
xchg
add
push
and
in
out
scas
or
gs
call
mov
sahf
jnp
pop
xor
mov
loopne
mov
mov
inc
pop
sar
sbb
mov
aas
and
dec
ds
jmp
jp
jmp
jecxz
ror
push
ja
es
mov
cli
xlat
inc
mov
adc
sub
add
in
and
(bad)
les
fs
movs
repnz
mov
xchg
lds
dec
cwde
mov
aam
xchg
jmp
cwde
xchg
push
or
xor
ror
adc
sub
dec
add
shl
jo
mov
loop
enter
lock
push
push
cmp
push
xor
mov
repnz
mov
adc
pop
sbb
or
jae
push
or
or
xchg
es
cmp
retf
and
jbe
push
cdq
sbb
jo
mov
sbb
test
xchg
enter
pusha
loopne
mov
mov
push
mov
sbb
ret
or
rol
add
inc
enter
leave
leave
inc
and
add
mov
mov
or
jns
push
mov
dec
in
les
sub
mov
and
or
fisub
ds
adc
push
rcl
add
ror
cli
xor
xchg
push
xor
sub
xchg
or
sbb
ret
cmp
aaa
push
dec
mov
pop
and
dec
clc
add
add
clc
jg
stc
add
cli
call
mov
push
add
push
add
ja
cmp
ret
add
js
add
cs
js
and
xchg
lea
mov
mov
xchg
lock
aaa
add
adc
push
adc
out
add
inc
mov
xchg
push
sbb
hlt
test
pusha
and
jae
inc
inc
mov
ror
or
or
popa
cmp
dec
test
dec
add
movs
dec
jb
inc
add
js
inc
leave
push
ret
clc
mov
sbb
mov
xchg
retf
fiadd
and
adc
mov
adc
push
cmp
xor
mov
mov
add
xor
add
add
inc
imul
mov
jns
push
aam
inc
pop
add
pop
inc
push
and
push
push
add
popa
or
aaa
mov
shl
xor
cmps
pop
or
jbe
gs
or
idiv
dec
pop
iret
push
repz
pusha
xchg
adc
test
or
adc
adc
faddp
inc
and
enter
scas
xor
push
retf
loop
(bad)
mov
or
out
adc
retf
jae
mov
sbb
or
mov
pushf
jle
nop
cmp
popf
inc
scas
jl
jl
jmp
popf
inc
pop
jmp
popf
inc
ror
add
push
test
xchg
xchg
xchg
aas
cld
xor
pusha
and
sub
or
sahf
imul
addr16
je
js
cmp
test
hlt
(bad)
sbb
add
inc
dec
mov
repz
and
sub
call
es
or
or
mov
pop
(bad)
ins
dec
add
push
(bad)
xchg
push
cmps
loop
push
or
inc
sbb
(bad)
cmp
jmp
inc
pusha
xchg
push
pop
xchg
add
ds
push
fldcw
lods
xchg
cmp
inc
push
inc
pusha
inc
sub
test
pusha
pusha
aam
xor
repz
dec
aad
imul
push
xchg
aam
adc
jmp
xchg
mov
(bad)
push
test
xchg
(bad)
cmps
adc
and
push
pop
and
push
pop
iret
pop
retf
mov
and
ins
cwde
mov
imul
and
es
mov
imul
sub
or
mov
or
scas
and
jg
push
inc
imul
cmc
(bad)
mov
jg
and
sbb
in
sub
in
dec
cmp
jne
pop
ins
ss
cmp
movs
xchg
jmp
or
and
sub
add
rol
sbb
rcl
or
cmp
sub
imul
fcomp
in
loopne
repz
push
(bad)
and
add
cmp
add
or
sbb
les
add
mov
add
sub
jne
push
sbb
add
lods
int
lds
and
mov
mov
and
add
mov
or
sub
push
(bad)
jmp
lds
and
(bad)
inc
sub
addr16
push
and
adc
imul
rol
xchg
mov
cmp
cmp
cmps
pop
js
xor
mov
mov
mov
mov
cmps
cld
rsqrtps
rcl
cs
and
loopne
sbb
xchg
test
cmp
and
pop
xchg
add
fs
sub
fnstcw
or
pop
dec
or
sub
imul
loopne
inc
sub
sub
xor
inc
ror
or
jg
in
adc
sub
adc
xor
or
jmp
and
neg
or
shl
jo
pop
neg
xor
test
in
aaa
inc
loopne
and
mov
enter
retf
xchg
or
dec
push
mov
cmp
jge
mov
cmps
les
outs
mov
fmul
mov
push
mov
leave
dec
mov
cmp
pop
mov
mov
and
sub
mov
or
aam
loopne
jae
mov
jmp
or
adc
adc
sub
sbb
add
dec
adc
pusha
mov
cmp
sub
xor
repz
loope
jecxz
inc
jmp
sahf
out
lods
or
jns
out
sub
aaa
ds
jns
inc
dec
push
pop
push
enter
add
cmp
mov
xor
dec
mov
xor
inc
xor
cmp
inc
dec
push
pop
arpl
cmp
push
jno
jg
cmp
xrelease
ins
stos
and
add
and
add
and
inc
mov
mov
stos
and
sub
clc
or
rcr
fsubr
adc
inc
sub
add
mov
sub
jbe
jae
or
add
adc
and
pusha
popf
fld
mov
mov
sar
add
cmp
int
push
push
push
xchg
cmp
or
and
test
or
add
xor
mov
pop
mov
shr
xchg
out
repnz
enter
cmp
mov
and
gs
mov
popa
jns
fmul
mov
sbb
pop
push
and
or
leave
or
fild
adc
in
pop
and
add
and
nop
aaa
call
leave
adc
jl
and
inc
int3
push
cmpxchg
lock
and
inc
add
adc
aaa
xchg
aam
adc
sbb
adc
adc
mov
adc
dec
adc
and
inc
push
push
push
mov
mov
push
push
outs
pushf
bound
cmp
xchg
push
imul
test
sbb
and
mov
mov
add
add
fmul
push
push
push
xor
rcl
mov
clc
cmps
cmp
dec
push
sahf
jmp
mov
xchg
mov
lock
add
dec
rol
add
add
aaa
jo
nop
and
sbb
push
add
jl
dec
enter
jl
push
or
nop
jl
jl
nop
imul
sbb
xor
pop
push
cmp
cmp
add
or
xchg
loope
leave
cmp
and
nop
jo
fisub
jne
push
and
inc
aam
sbb
push
sbb
popa
add
adc
out
add
pushf
adc
mov
sbb
sub
adc
mov
mov
mov
sbb
aaa
add
popa
jmp
and
fs
or
loopne
push
add
(bad)
in
pop
xchg
add
stos
dec
cmp
push
jl
and
cmp
aaa
jb
add
sar
js
or
xchg
adc
dec
add
lods
or
(bad)
jnp
add
scas
sub
lock
cvtps2pd
popa
or
push
icebp
inc
and
add
adc
dec
sahf
mov
jg
or
ins
or
pop
enter
sbb
and
out
pop
cmp
adc
mov
pop
push
test
sbb
pop
push
jmp
sub
and
mov
add
(bad)
js
stos
cli
ja
in
ins
jl
jmp
add
jecxz
adc
popa
cdq
js
cmp
lea
sub
xchg
int3
mov
cmp
add
add
or
sub
and
mov
sub
dec
xchg
inc
or
lods
cmp
mov
jecxz
or
leave
lea
sub
aaa
lahf
test
adc
aam
dec
push
cmps
push
xor
push
pop
call
pusha
dec
and
cs
in
dec
mov
inc
dec
jne
movs
aam
dec
imul
cwde
add
dec
push
xchg
dec
mov
nop
test
xor
or
or
nop
imul
push
aas
adc
adc
call
pop
test
loopne
in
das
sbb
add
cwde
mov
add
and
jge
scas
mov
scas
scas
fs
scas
or
push
mov
or
push
mov
push
sbb
imul
pop
add
or
icebp
mov
fadd
inc
pushf
xchg
or
jmp
and
add
ins
mov
and
mov
or
jmp
stos
add
hlt
mov
jb
lods
in
xchg
test
ret
mov
in
mov
jb
pop
mov
cs
retf
mov
movs
xor
mov
dec
mov
or
xchg
dec
pop
popf
push
or
push
mov
dec
imul
mov
push
and
adc
push
fmul
cdq
bound
bound
hlt
shr
add
jns
out
or
pop
push
and
sub
xor
inc
out
sahf
out
dec
push
pop
sub
stc
add
adc
mov
inc
xchg
add
(bad)
cmp
outs
cmp
repz
push
pop
bound
iret
repz
iret
repz
xor
test
xchg
add
dec
adc
sub
and
push
inc
add
pop
shr
adc
sub
push
jb
in
xor
push
dec
add
mov
jmp
scas
ja
nop
or
xchg
jb
or
add
lock
xchg
pop
lock
pop
xor
push
aam
in
enter
fadd
mov
leave
pushf
ja
in
xchg
or
and
push
leave
fdivr
aas
or
in
fbld
movs
jge
rol
adc
adc
jg
ror
mov
stos
stos
sub
or
fs
jnp
pop
push
imul
and
push
and
and
lods
sti
xor
sub
es
or
into
jl
scas
inc
sub
or
add
stos
add
mov
test
add
scas
adc
inc
adc
xor
dec
sbb
add
add
add
jb
sbb
push
or
jb
and
xor
or
add
adc
xor
mov
adc
lahf
xor
jb
xor
xor
inc
leave
xchg
adc
popa
and
xor
pop
adc
mov
das
sar
ret
add
les
add
adc
rol
popf
or
and
pushf
ins
mov
or
(bad)
ret
adc
ret
shl
nop
sub
xor
ret
lea
jp
add
sahf
(bad)
xchg
popf
movs
stos
mov
out
jns
mov
sahf
out
aad
jecxz
cmps
and
xchg
and
xchg
aam
cmp
sub
xor
cmp
repz
inc
dec
push
pop
cmp
leave
repz
cmp
repz
mov
lods
cmp
ror
push
out
in
dec
rcr
cmc
jne
jno
ret
jge
popa
adc
sbb
push
xchg
fcomp
sbb
mov
and
scas
cld
sub
dec
push
and
loope
adc
xor
and
mov
xchg
inc
fiadd
call
add
or
sub
loopne
and
nop
pop
in
adc
pusha
lea
repnz
sar
adc
test
sti
add
in
push
xchg
jo
mov
push
repnz
loopne
adc
movaps
or
and
inc
ds
call
(bad)
dec
je
aad
fadd
imul
add
movs
sbb
push
mov
loope
mov
(bad)
(bad)
mov
frndint
ret
ret
cwde
push
clc
xchg
fadd
retf
mov
or
dec
popf
sti
adc
jp
mov
cmps
loopne
stos
mov
adc
push
lds
popf
push
aaa
add
popa
je
push
jl
pop
xchg
xor
js
data16
push
mov
pop
and
push
and
xchg
or
pop
or
stos
in
adc
lods
adc
push
push
push
test
adc
mov
ds
ds
lods
test
push
je
je
push
ds
push
mov
xchg
movs
dec
adc
push
push
or
inc
adc
retf
sub
mov
inc
push
loop
or
sqrtps
adc
add
xor
adc
lahf
out
or
sti
test
out
fild
gs
xor
arpl
sub
xor
push
add
jns
xchg
cmp
or
(bad)
adc
add
inc
cmp
xor
jnp
mov
adc
xor
shl
int
push
or
or
lods
or
cld
mov
mov
clc
add
fadd
pusha
test
xchg
jno
clc
xchg
xor
jae
add
inc
mov
test
add
jg
add
fmul
xchg
mov
jb
(bad)
shl
mov
add
call
das
cdq
shl
jg
mov
dec
add
mov
push
hlt
xor
mov
mov
jmp
mov
jnp
add
icebp
add
add
push
push
add
push
add
lahf
or
in
popf
fstp
pushf
adc
mov
(bad)
lods
sub
mov
lods
test
test
cmp
jbe
cmp
and
pop
fistp
xchg
leave
pop
lds
jp
lea
jbe
or
jmp
es
addr16
or
mov
pop
mov
out
jb
and
cmps
adc
sub
sub
inc
lods
dec
or
arpl
aas
xchg
test
mov
jecxz
fadd
mov
mov
fidivr
push
rol
dec
pop
push
add
push
or
mov
push
push
push
push
or
out
cmp
push
mov
sbb
pop
pusha
or
iret
push
push
sub
fs
fst
daa
jae
jbe
jne
push
xchg
and
adc
fst
int
xor
lock
dec
jmp
sbb
ret
push
push
dec
cmps
test
dec
adc
sbb
pop
nop
loope
out
xlat
out
ror
cmc
(bad)
aam
xor
jne
cmp
and
test
aad
add
shr
les
fdiv
fmul
iret
ss
cmc
mov
imul
or
movs
adc
aam
push
sub
jmp
push
adc
mov
xor
lahf
mov
sbb
xor
adc
inc
push
xchg
fadd
or
jmp
lods
push
mov
adc
pop
sub
add
imul
adc
cmp
mov
jo
ds
pop
xchg
fistp
arpl
add
cmp
xchg
push
add
sub
or
mov
ret
mov
test
in
cmp
aad
mov
mov
in
mov
pusha
adc
or
jl
mov
shl
dec
sub
out
jbe
xchg
jo
aad
ror
or
aaa
push
rol
mov
nop
cmps
lock
adc
mov
push
retf
out
repz
jmp
add
ins
add
or
adc
imul
in
add
adc
xchg
daa
or
or
test
add
in
add
add
mov
or
add
sub
mov
push
xchg
xchg
xor
mov
rcr
lock
push
mov
ss
mov
add
scas
dec
jle
add
icebp
mov
inc
sbb
in
add
inc
sub
enter
inc
hlt
(bad)
mov
add
or
or
or
ret
(bad)
dec
xor
in
add
push
sbb
lock
iret
je
stos
rol
ret
xchg
ret
cmp
pop
rcr
sbb
adc
mov
mov
xor
sub
mov
add
xchg
stos
push
jb
fisttp
mov
leave
in
adc
dec
mov
or
(bad)
nop
mov
push
nop
ret
mov
adc
push
dec
sbb
cmp
in
cmp
xor
xor
adc
or
sbb
in
jmp
add
or
mov
or
pusha
jno
test
aad
rol
pop
test
dec
add
xchg
mov
lds
mov
jmp
push
call
in
mov
mov
mov
repnz
mov
or
mov
call
and
mov
jae
in
enter
lock
in
pop
or
sbb
ret
mov
or
nop
adc
mov
lods
adc
and
jmp
add
or
adc
adc
inc
icebp
jl
outs
fcmovnb
mov
adc
cdq
test
jno
jno
add
test
pop
mov
adc
iret
loopne
add
jmp
and
mov
cmp
dec
movs
push
dec
push
dec
jmp
sub
movs
mov
fstp
fadd
popf
call
fidiv
call
push
adc
push
sbb
mov
add
mov
scas
add
fadd
in
ret
add
repnz
inc
push
jnp
cmps
dec
adc
call
(bad)
ror
repz
in
xchg
fnsave
add
push
push
(bad)
and
xor
push
shr
ins
jo
pop
jmp
mov
fldcw
shr
add
inc
cmps
pop
push
(bad)
jne
addr16
and
call
cmp
sub
mov
fadd
fsubr
or
sbb
movs
xor
mov
movs
pop
cmp
scas
pop
cmp
mov
sbb
dec
inc
sbb
fdiv
call
loop
dec
lea
js
mov
mov
and
ror
aaa
mov
xor
aad
call
repz
add
xchg
cmp
mov
inc
push
xchg
shl
or
rcl
cmp
fucomp
add
jle
into
adc
adc
push
ret
or
add
add
je
repnz
dec
fmul
xchg
jmp
in
inc
or
les
sub
jmp
cmp
fisttp
push
gs
mov
push
loop
inc
enter
xchg
lea
cdq
sbb
adc
push
fwait
push
pop
mov
inc
mov
ret
aas
push
mov
add
mov
pop
pop
sbb
add
adc
cs
pop
mov
inc
loopne
add
push
iret
pusha
sbb
add
dec
jb
add
rcl
xor
push
loop
loopne
and
xlat
inc
jb
(bad)
mov
push
je
sbb
mov
mov
mov
adc
retf
movs
sbb
or
cmp
pop
sub
dec
push
addr16
adc
xchg
cmp
cmp
jne
pop
adc
ds
test
aaa
scas
shr
xor
daa
repz
or
inc
int3
xor
dec
fsub
int3
inc
lsl
mov
dec
rcl
test
daa
mov
dec
and
adc
nop
push
cmp
xchg
sub
inc
add
jecxz
sbb
inc
fdiv
int3
stos
popf
sar
outs
mov
cld
movs
adc
in
add
mov
mov
std
jl
pusha
loop
add
or
shl
inc
lods
pop
aam
or
lods
mov
(bad)
in
push
dec
mov
pop
or
sbb
hlt
enter
test
push
push
call
push
push
rcl
adc
pop
adc
mov
(bad)
jmp
and
movs
adc
adc
pop
fwait
xor
loopne
fldenv
push
mov
pop
pop
pop
cwde
adc
loope
adc
loope
pop
stc
pop
jl
push
cmps
loop
adc
ret
pop
stc
pop
not
in
not
in
pop
stc
pop
fs
js
push
adc
sub
pop
inc
adc
call
jmp
inc
ins
jmp
cmp
adc
loope
in
in
inc
jnp
mov
movs
pop
or
inc
mov
rcr
push
inc
push
mov
lds
adc
adc
add
in
mov
aaa
in
mov
cmp
imul
mov
dec
and
jns
adc
adc
xchg
pop
and
xchg
pop
and
pop
push
mov
ret
fsubr
(bad)
cmp
xchg
movs
add
ja
pop
mov
pop
pop
aas
ror
into
inc
xchg
xchg
or
push
xchg
stc
inc
mov
sub
mov
add
mov
pop
xchg
daa
mov
push
out
sub
xchg
daa
mov
xchg
and
xchg
xchg
sbb
mov
and
mov
push
icebp
and
or
retf
xchg
rcl
mov
xchg
int
inc
fst
push
pop
ror
jle
call
add
or
jae
add
dec
push
call
jecxz
lea
in
dec
add
cmp
adc
inc
xchg
dec
jne
push
rcr
dec
cs
push
inc
inc
jge
mov
mov
push
inc
mov
sub
sub
dec
pop
aaa
rcr
and
clc
test
pusha
or
adc
mov
add
das
add
and
mov
clc
push
loopne
adc
xor
mov
clc
sbb
sub
lahf
(bad)
popf
or
sete
pop
push
and
sbb
pop
inc
dec
add
loop
es
xor
mov
adc
in
fidivr
outs
cmp
cmp
js
jmp
outs
sahf
ja
inc
or
jne
inc
inc
jle
jl
xor
pop
add
or
adc
(bad)
or
cs
mov
outs
div
ror
lahf
pusha
jecxz
in
aad
call
xor
jo
add
mov
push
sub
add
sub
shl
icebp
daa
add
xor
add
mov
adc
mov
or
adc
sub
cmps
and
adc
fdiv
aam
fmul
mov
mov
loope
cmp
jge
nop
sub
jb
or
adc
sub
add
xchg
xchg
cld
scas
sub
ret
popf
mov
mov
sub
inc
push
sub
add
add
hlt
mov
ja
mov
je
jbe
dec
jnp
mov
pop
imul
pop
fs
push
mov
xchg
sub
fild
mov
mov
push
mov
xchg
push
and
jle
push
(bad)
cmp
cdq
ret
rcr
or
or
rol
add
scas
test
lock
repnz
lea
mov
or
adc
sbb
and
or
lock
jo
inc
rcl
mov
call
jmp
jnp
(bad)
ds
shl
lock
jo
xor
daa
push
popf
cmp
xor
shr
or
inc
not
push
clc
jmp
outs
sub
push
sbb
push
and
mov
iret
push
push
rol
std
xchg
popf
adc
fstp
cmc
test
add
and
es
inc
add
lock
sbb
mov
xchg
inc
in
fdivr
ret
lock
test
adc
sbb
mov
popa
jbe
sbb
sahf
and
je
add
pop
or
inc
arpl
dec
fild
pop
sub
mov
sub
mov
rol
shl
sbb
xor
dec
sbb
test
add
inc
and
add
push
pop
inc
call
scas
push
in
sub
mov
hlt
cmp
jp
adc
les
enter
sub
pop
(bad)
mov
cmps
stos
adc
add
leave
sbb
cmp
xor
xor
rol
or
pusha
test
je
fistp
xor
mov
sbb
ins
adc
call
popf
xchg
xchg
sub
mov
inc
mov
add
stc
push
cmc
push
push
cmc
inc
stos
sub
and
hlt
push
cmp
xor
mov
inc
dec
dec
imul
xor
push
xor
xchg
dec
mov
aam
pop
cmp
jb
call
lock
add
jns
jg
movs
out
mov
jo
cmp
rcr
xchg
mul
push
mov
fild
and
sbb
mov
mov
ror
mov
mov
and
sub
mov
fs
dec
push
addr16
push
xchg
imul
jno
pop
shl
cmovb
cwde
mov
test
pop
sub
call
sbb
loopne
pop
movs
pop
sub
mov
jnp
and
data16
setl
inc
cmp
cmp
fwait
push
mov
and
pop
mov
fdiv
rol
es
push
inc
adc
sub
pop
cmps
pop
mov
xor
mov
into
and
pop
cmp
adc
push
lods
mov
mov
jne
push
arpl
aad
sbb
inc
sar
inc
xor
sub
inc
in
or
sub
adc
cs
xor
add
aam
sbb
cmp
mov
imul
loopne
cmp
loopne
nop
mov
nop
sbb
cdq
mov
ret
loope
inc
and
in
(bad)
cmp
pop
xchg
cli
pop
sbb
inc
stc
jns
das
adc
popa
loope
and
push
xlat
inc
cmp
mov
pop
fistp
mov
sub
jmp
push
jo
(bad)
loopne
or
jbe
inc
sbb
icebp
add
xor
mov
cli
leave
xor
inc
inc
aam
fdivr
aam
daa
dec
pusha
adc
in
arpl
adc
ja
inc
mov
and
cmp
sti
loope
in
xchg
add
fisubr
sub
fisttp
add
movs
fsubrp
js
outs
pop
or
jl
lods
inc
jo
fidiv
sub
fldenv
das
popf
out
ss
cmp
and
cmp
ds
jbe
jl
sbb
pop
push
push
xchg
fs
js
jb
or
int
(bad)
in
in
jne
or
inc
xchg
cld
shr
jge
xchg
inc
sub
or
inc
call
call
sub
push
popa
dec
jo
aas
and
fadd
pop
adc
outs
jo
js
pop
rcl
push
clc
in
mov
pop
mov
push
imul
xlat
dec
add
jecxz
and
in
cli
pop
xchg
test
je
cmp
and
call
sub
sbb
and
das
les
push
scas
adc
or
push
jne
adc
mov
loopne
in
xchg
xor
ins
add
cwde
dec
and
dec
adc
mov
loopne
sbb
push
pop
adc
adc
cmp
leave
aam
pop
xlat
push
sub
rcr
ret
outs
loope
jb
(bad)
repnz
scas
loope
jne
sbb
aam
retf
retf
add
lea
mov
inc
test
xchg
jb
test
ret
and
inc
shl
mov
mov
test
or
int3
mov
dec
add
shl
inc
(bad)
pop
loopne
aam
xor
cmp
(bad)
out
test
call
mov
sub
sub
rcr
and
or
dec
jl
push
(bad)
sbb
inc
xor
push
pop
push
stc
inc
pop
lea
dec
lahf
dec
cs
shl
in
lock
fwait
clc
jae
(bad)
and
sbb
pshufw
mov
sahf
pop
add
sqrtps
sbb
dec
xor
push
add
adc
rcl
cmp
xchg
loopne
pop
sub
in
rol
aam
test
rcl
cmp
push
enter
mov
cmp
les
rcr
sub
enter
cmps
inc
(bad)
popa
je
in
scas
in
adc
fsub
sbb
or
ss
dec
sahf
ror
jl
adc
imul
mov
pop
xchg
in
out
(bad)
and
push
mov
das
je
xor
mov
sub
les
push
sub
mov
bound
shr
push
push
pop
shl
mov
test
pop
sub
sti
inc
dec
add
and
fdiv
loop
xor
or
loope
mov
sahf
adc
cmp
mov
push
sbb
inc
lahf
mov
add
jno
xchg
fsub
shl
and
das
test
add
fimul
(bad)
jmp
mov
lods
push
or
and
mov
sub
std
rol
push
test
push
mov
das
in
or
ret
(bad)
call
sbb
xchg
xchg
lock
icebp
out
test
sub
dec
add
mov
push
pop
in
jl
push
popf
or
sbb
fidiv
push
sti
ja
out
not
sub
cmc
jp
mov
add
mov
popa
lds
and
or
inc
push
sar
inc
jo
add
pop
js
fnstenv
and
xor
add
mov
stos
dec
je
xchg
add
add
xlat
or
leave
mov
adc
and
sbb
ret
(bad)
sbb
pop
mov
push
shl
cwde
sbb
xchg
out
sbb
shl
test
mov
mov
retf
and
adc
push
leave
adc
mov
add
or
mov
mov
cmps
sub
dec
and
add
aas
or
or
mov
mov
xchg
mov
rcl
add
sub
sub
add
shl
rcl
call
adc
shr
xchg
mov
or
scas
repz
test
aad
pop
push
enter
or
inc
pop
or
cmp
or
dec
push
repnz
pop
or
mov
dec
push
inc
and
retf
sysret
add
loopne
fnstsw
add
push
pop
or
ss
fisttp
mov
add
adc
xchg
push
jne
pop
paddusb
push
(bad)
psllq
int
sar
inc
or
inc
or
jno
enter
icebp
cwde
jne
syscall
sbb
or
mul
xor
sub
pop
jmp
lock
fwait
mov
sub
shl
and
sub
imul
inc
ror
or
mov
inc
aam
push
or
lock
scas
imul
xchg
sub
ret
jle
add
or
imul
mov
add
pusha
xchg
push
lds
push
stc
mov
fsubr
xlat
outs
out
(bad)
and
sub
cmp
(bad)
dec
or
mov
push
jge
jp
js
lods
retf
xchg
jmp
and
inc
inc
dec
cs
popa
xor
movs
xchg
cmps
pop
pop
imul
push
mov
add
pop
mov
gs
and
push
stos
push
sub
or
jge
pop
dec
(bad)
cmps
dec
js
jl
add
xchg
sbb
mov
jnp
add
add
adc
aaa
or
mov
pusha
(bad)
jmp
push
fld
dec
sbb
jno
in
mov
test
call
rcl
dec
inc
dec
inc
pop
pop
cli
or
test
sti
pop
push
ins
lds
test
inc
sbb
std
pop
jmp
or
mov
in
pusha
mov
test
inc
xor
shr
and
enter
sub
ror
rol
xor
and
or
or
outs
jle
daa
push
and
or
scas
sub
jbe
les
push
and
hlt
pop
mov
and
(bad)
lds
and
inc
adc
jge
push
xchg
xor
sub
jge
test
cmp
ss
imul
adc
adc
sbb
xor
pop
das
or
and
sub
sub
xor
xor
cmp
gs
cmp
pop
retf
add
je
mov
or
xor
dec
cmc
rol
sbb
pop
and
push
cmp
jmp
aaa
sbb
xchg
dec
push
loop
sbb
xor
mov
and
sub
addr16
adc
pop
ins
sub
and
or
push
sar
inc
lock
push
enter
dec
enter
lock
xor
enter
inc
xchg
or
in
xchg
movs
inc
and
push
call
adc
out
or
mov
push
or
inc
sbb
add
adc
nop
add
adc
xchg
and
xchg
and
xor
in
xchg
add
inc
pop
sbb
and
sbb
inc
shl
adc
lock
mov
push
fnop
rol
adc
sub
sbb
or
imul
add
pop
add
mov
or
and
add
pop
inc
retf
pop
xor
and
xsavec
daa
test
or
cdq
dec
cs
aam
cmp
add
inc
dec
pushf
sbb
jge
in
arpl
adc
add
fmul
mov
sbb
shl
in
mov
push
inc
rcr
pop
add
push
test
leave
or
fs
dec
out
ins
mov
dec
adc
add
loope
xchg
mov
cmp
jns
push
aam
push
mov
push
push
or
adc
xchg
jno
inc
rol
push
rsqrtps
push
or
in
sbb
inc
push
adc
push
fisub
add
fld
and
pop
pop
popf
nop
sbb
push
add
into
pop
cmp
adc
popa
push
add
push
imul
sub
or
sbb
rcl
dec
xchg
leave
leave
add
in
or
fdiv
push
push
sbb
xchg
add
xor
push
dec
ds
mov
leave
pushf
dec
push
loop
scas
in
nop
xchg
push
mov
mov
mov
pop
and
add
push
add
sbb
sub
pop
adc
add
sbb
push
pop
xor
cwde
cmp
push
mov
and
push
in
sbb
pusha
mov
fs
dec
fsubr
xchg
inc
push
nop
fist
or
jmp
movs
cmp
inc
adc
cmp
nop
xor
fist
inc
cmp
int3
(bad)
aam
lock
cmp
or
and
push
adc
nop
cmp
add
push
fst
push
adc
pop
xor
xchg
fcom
jo
xchg
fwait
mov
or
mov
lds
pusha
xchg
mov
cdq
nop
add
lock
xchg
nop
dec
enter
push
push
push
gs
cmps
lock
sbb
add
xor
shr
fadd
push
mov
mov
outs
inc
psrlq
mov
inc
inc
mov
cmp
jecxz
lods
ret
cmps
and
cmps
rol
std
jb
in
sbb
(bad)
jo
nop
(bad)
in
jb
add
pop
dec
xchg
jnp
push
fstp
or
stos
cdq
push
fcmovnu
push
add
je
aam
clc
jns
inc
cmps
xor
inc
add
popa
mov
outs
or
add
jb
dec
(bad)
push
add
push
xchg
cmp
jo
and
rcr
mov
clc
mov
cs
gs
fucom
or
into
xor
pop
mov
cmp
sub
and
sbb
cmp
cmps
push
daa
sub
pop
push
clc
pop
add
mov
mov
cmp
jo
add
pusha
dec
sub
dec
pop
int3
xchg
push
cmps
mov
adc
rcr
sbb
in
inc
rol
daa
(bad)
push
mov
push
test
mov
add
and
jb
aas
lock
mov
push
aam
and
sbb
imul
(bad)
loopne
and
inc
icebp
loopne
enter
in
fadd
jb
add
push
adc
sub
add
clc
pop
inc
pop
cmp
inc
push
dec
dec
jg
mov
add
or
push
inc
adc
jae
mov
test
add
out
xchg
mov
in
rol
cmp
mov
mov
xchg
sbb
sbb
add
lahf
dec
bound
add
fwait
in
sbb
and
adc
and
or
and
or
(bad)
xchg
mov
das
repnz
loopne
or
pop
movs
shl
hlt
pusha
into
movs
test
sub
mov
dec
push
dec
add
sub
sbb
pop
adc
add
inc
push
sbb
add
fstp
ds
es
xchg
pop
sub
push
mov
dec
pop
cwde
cmp
retf
lahf
push
popf
cld
or
fsub
inc
pop
retf
xor
jnp
loope
xor
push
push
mov
fisttp
jge
movs
movs
xor
repnz
inc
add
pusha
xchg
cmc
rcl
rcl
es
outs
je
sub
cmp
je
add
mov
imul
add
rcr
add
inc
inc
push
sub
mov
add
in
daa
dec
stos
(bad)
push
adc
xchg
xchg
or
cld
mov
dec
add
dec
lea
dec
sti
cmp
mov
push
or
sub
inc
cmp
cmps
sub
push
add
cs
imul
pop
or
and
clc
cmps
ror
dec
inc
mov
sub
sub
scas
and
add
push
mov
and
dec
add
scas
imul
in
and
jo
or
fidiv
mov
jge
sub
xchg
cmp
fwait
(bad)
jle
push
add
cmp
je
add
cmp
sub
retf
lock
adc
jle
iret
call
mov
push
add
pop
jmp
ficom
inc
cmp
inc
mov
add
ret
adc
inc
data16
out
sub
jmp
pusha
sub
out
dec
(bad)
movs
add
sub
cmp
xchg
push
sbb
rcl
jg
xor
jl
movs
dec
adc
sbb
fstp
xor
pop
adc
dec
jmp
push
test
and
ret
mov
mov
dec
je
sub
cmp
cdq
push
popf
and
jmp
jge
add
sub
sbb
and
enter
mov
jns
cmp
call
inc
lock
mov
mov
sub
nop
mov
sub
outs
mov
dec
popf
(bad)
add
jne
and
icebp
js
test
shl
dec
lods
fdiv
dec
les
xchg
retf
clc
into
mov
push
lea
(bad)
in
xchg
xor
movs
push
pop
mov
cmp
sub
jbe
fsubr
int3
xor
and
enter
shl
push
pop
(bad)
dec
hlt
pop
int3
fwait
jecxz
in
push
mov
push
stos
aam
xchg
sti
mov
not
sub
lock
cmp
xchg
sub
cmp
or
mov
jl
jne
fmul
movs
add
int3
(bad)
pop
cmp
retf
push
mov
mov
pop
adc
dec
cdq
loopne
push
(bad)
xlat
dec
pop
cwde
pusha
mov
sub
add
sbb
or
(bad)
mov
loope
into
add
sub
mov
lock
aad
rcl
movs
mov
into
fsubr
sar
lock
test
push
and
or
sbb
or
push
rol
aas
inc
xor
mov
push
jo
ss
dec
ret
mov
jbe
shl
rol
inc
nop
add
or
fmul
or
dec
hlt
in
popa
mov
add
ficomp
and
xlat
mov
mov
sbb
cs
mov
add
add
dec
lock
or
push
test
loope
les
or
mov
add
dec
in
data16
cmp
sub
call
add
push
adc
mov
and
push
stc
inc
cs
sbb
dec
inc
rcl
push
and
inc
inc
adc
adc
cmp
xchg
aam
adc
xor
xchg
xor
dec
cmp
cwde
adc
xor
and
repz
or
loope
xchg
or
or
add
fadd
or
pop
sub
pop
imul
add
(bad)
mov
jnp
add
xor
leave
add
or
cdq
sbb
xchg
adc
ss
mov
cwde
or
xor
jle
jnp
xor
adc
cmp
inc
pusha
loopne
test
jmp
or
mov
movs
mov
aam
dec
and
fld
cmp
add
lock
enter
add
dec
dec
repnz
ins
pusha
xor
push
jae
aas
cmp
leave
xor
mov
inc
frstor
and
pop
xor
cmps
push
lahf
mov
outs
add
fcom
sub
or
nop
xchg
je
or
and
test
test
push
leave
jl
push
cmp
mov
mov
mov
nop
ss
ss
push
adc
aad
pop
and
adc
aam
add
xor
or
push
and
push
push
icebp
loop
xor
push
push
add
add
imul
or
pop
sub
dec
dec
stos
or
or
shl
stos
or
addr16
pop
push
or
and
ins
adc
inc
push
inc
aam
and
xor
xchg
and
push
mov
pop
iret
mov
push
xor
pop
inc
sbb
(bad)
pop
sbb
and
xchg
cmps
mov
mov
dec
dec
adc
mov
and
mov
in
sar
sbb
std
cli
or
pop
daa
mov
and
pop
dec
xor
or
inc
lds
push
mov
ret
cmp
cmps
hlt
aaa
aad
or
ror
test
sbb
imul
cmp
xor
xor
dec
icebp
push
idiv
sbb
lea
push
push
pop
sub
cwde
xchg
sbb
add
jge
xchg
sub
jp
sub
jne
add
sbb
inc
cmp
and
cmp
and
rcr
push
cmp
pop
sub
dec
mov
add
dec
cmp
add
push
inc
xchg
pop
mov
push
ins
add
xchg
sbb
add
sahf
or
add
pop
pop
rcr
pop
loopne
sti
outs
cdq
sbb
jae
in
jl
inc
rcl
or
add
jl
ss
sbb
add
and
aas
ins
je
test
inc
inc
or
fcomp
mov
xor
xchg
push
rcl
pop
cmps
sub
or
sbb
rol
out
xchg
push
jae
lods
mov
jnp
mov
(bad)
cmp
jne
cmp
inc
cmp
leave
push
or
loop
das
adc
pop
push
sub
adc
mov
imul
add
xor
pusha
ret
frstor
push
cmps
adc
rcl
dec
and
mov
jbe
into
add
cwde
and
jnp
dec
add
stc
enter
pop
push
and
sbb
jns
push
and
mov
sbb
mov
int
lock
ret
les
lea
jb
icebp
xor
(bad)
scas
pop
dec
(bad)
pop
adc
cld
xor
inc
mov
push
sub
or
arpl
pop
inc
add
push
and
jp
cmps
inc
sub
or
xlat
xchg
sub
aaa
int3
inc
push
pusha
mov
and
push
sbb
dec
cs
pop
scas
push
jne
shl
cmp
sbb
in
push
inc
add
and
lea
jnp
les
iret
or
and
pop
test
xchg
iret
or
cmps
add
inc
gs
jo
sbb
pop
in
dec
jne
rcr
inc
xchg
push
gs
mov
pop
or
dec
cmp
daa
mov
stc
enter
stos
xchg
dec
sbb
mov
add
hlt
popf
inc
or
add
test
pop
adc
cmp
push
cmp
add
aad
dec
(bad)
fild
mov
ins
sub
or
push
or
and
cmp
or
test
sub
jo
sbb
mov
jne
in
mov
inc
loopne
je
adc
add
sub
aaa
xchg
or
and
dec
adc
mov
imul
and
mov
sub
test
(bad)
gs
mov
and
mov
xchg
add
inc
dec
ds
sbb
pop
push
add
adc
mov
call
push
(bad)
pop
iret
dec
inc
dec
inc
out
fsub
fwait
shr
pop
or
dec
inc
cmp
or
cmps
dec
xchg
jg
adc
xchg
icebp
inc
adc
push
or
nop
push
(bad)
sbb
lock
cmp
inc
xchg
je
aam
sub
jbe
lahf
bsf
xchg
in
mov
or
sbb
pop
xor
pop
ror
dec
inc
jmp
pop
mov
loopne
adc
pop
cmp
lock
fs
shr
add
and
inc
adc
push
sub
jo
fnsetpm(287
arpl
dec
dec
dec
sbb
or
ds
sbb
ror
pop
sub
add
jo
push
jecxz
mov
lods
mov
les
sub
sub
sub
call
shl
inc
xor
mov
xchg
fld
sbb
jmp
(bad)
imul
dec
out
ins
std
rcr
add
cmp
mov
mov
loopne
repnz
adc
sbb
push
sbb
jp
jne
cdq
out
push
dec
loope
cwde
into
je
movs
and
ds
jnp
ins
dec
movs
inc
mov
lock
mov
push
push
push
add
fbld
adc
sbb
mov
add
mov
lea
fcmovu
push
or
adc
dec
test
and
inc
ins
dec
fs
lea
pusha
push
imul
data16
xor
mov
mov
jo
in
mov
push
jmp
sub
out
pop
and
(bad)
dec
pop
and
pop
repz
mov
sub
mov
mov
or
(bad)
pop
cmp
stos
or
mov
or
lods
aad
sbb
pop
(bad)
or
das
stc
or
pop
sbb
pop
and
fld
sbb
cmp
xchg
jo
or
dec
or
aam
pop
adc
inc
jo
push
mov
mov
dec
adc
(bad)
call
cmp
bnd
test
sahf
mov
je
pop
jge
ds
pop
adc
or
jmp
push
rcl
jmp
push
inc
adc
and
push
sub
mov
or
pop
or
cmp
sub
cmp
pop
bound
je
jge
mov
cwde
inc
and
pop
inc
aam
xor
loop
jecxz
jmp
pop
push
and
inc
cs
pop
outs
sbb
enter
dec
cmp
je
sub
adc
add
inc
sub
fimul
stc
push
popf
rcr
lds
gs
cmp
mov
adc
addr16
inc
sbb
inc
add
mov
jo
xchg
jno
jae
adc
(bad)
fld
cmp
not
add
jo
lea
or
je
das
or
test
jae
xchg
or
add
fdiv
xor
jne
les
aam
mov
sub
les
add
lds
cmp
push
movs
or
sub
aaa
fcomp
ror
cmp
adc
add
jp
or
dec
ja
cmps
add
rcl
cmp
je
push
or
pop
mov
jne
movs
push
inc
sub
imul
(bad)
sub
imul
dec
and
and
adc
mov
rol
sub
xchg
frstor
retf
(bad)
adc
(bad)
xor
inc
or
cdq
dec
popa
or
mov
inc
or
les
mov
push
pop
add
or
xchg
in
and
jl
xor
les
pop
xchg
mov
ja
rcl
mov
mov
and
inc
mov
lock
in
inc
dec
ret
es
pop
lods
aas
or
mov
or
pop
mov
and
sar
outs
add
push
inc
pop
aas
fdivr
mov
dec
lea
add
sbb
mov
push
add
in
sti
js
clc
div
jne
inc
ja
outs
adc
das
je
sub
rcr
jmp
ror
xchg
(bad)
jbe
cmp
sbb
inc
jne
adc
push
and
xor
pop
sbb
inc
push
jns
adc
out
sub
sbb
and
ret
add
or
aas
and
jo
push
mov
push
jb
push
xchg
sub
cmp
sbb
les
xchg
inc
inc
sbb
push
and
sub
xor
pusha
xchg
push
push
popf
xchg
retf
mov
(bad)
icebp
and
jno
push
pop
repz
dec
scas
rcl
add
nop
and
xor
push
enter
add
add
mov
push
mov
push
add
ss
je
dec
mov
or
sbb
rol
add
mov
mov
xor
or
jne
push
fcmovnb
and
mov
movs
cwde
cmp
mov
jl
or
jmp
sbb
and
jmp
fbld
(bad)
pusha
mov
cmp
mov
ret
xchg
in
cwde
sub
pusha
or
add
add
cmc
xor
adc
add
xor
retf
and
ins
dec
push
add
stc
call
or
xor
xchg
fwait
aaa
sbb
leave
sub
and
cmps
pop
dec
fbld
adc
cmps
ret
inc
cdq
push
fst
inc
rcl
sbb
leave
sbb
or
and
pop
dec
into
inc
mov
adc
mov
shl
mov
cmc
adc
ins
ins
dec
daa
in
dec
jno
retf
lea
jo
and
push
or
xchg
and
add
inc
cmp
sbb
das
xor
int
test
sub
inc
add
mov
add
int3
sahf
mov
mov
jge
loopne
adc
xchg
xor
test
and
pop
sub
sar
xor
cmp
cmp
pop
mov
fcmovnu
sbb
outs
push
aam
push
dec
adc
test
scas
inc
push
mov
shr
adc
and
shr
push
inc
pop
push
mov
add
mov
hlt
and
mov
sahf
mov
retf
movs
or
cld
add
or
fisubr
mov
or
push
mov
xchg
add
loope
or
add
and
inc
or
and
add
inc
jno
inc
and
xchg
mov
inc
push
mov
cs
add
add
mov
mov
or
add
and
inc
or
push
add
pop
push
or
hlt
mov
dec
pusha
push
movs
mov
adc
pop
in
xor
gs
add
mov
in
add
fs
adc
add
sub
or
inc
ins
rcl
mov
int
scas
mov
cli
adc
nop
pusha
leave
rcr
cdq
lods
loope
jns
aad
sbb
ret
sbb
push
push
stos
dec
cmp
hlt
pop
std
xchg
rcr
push
xchg
or
push
or
inc
pop
call
leave
push
or
mov
push
adc
sub
add
xchg
or
ficom
jge
xchg
pop
mov
cmp
add
and
cmp
push
and
xor
inc
or
pop
xor
jb
mov
call
rep
sub
in
ret
ror
mov
enter
repnz
pushf
rcl
repnz
in
call
repz
pop
jge
dec
jl
push
pop
pushf
jle
add
jmp
add
sbb
and
inc
or
jns
rcl
push
add
sub
or
lds
add
xor
dec
add
mov
mov
fst
pushf
sub
fstp
add
(bad)
mov
pop
xchg
add
in
shr
pop
mov
dec
add
shr
fld
jp
add
sbb
push
outs
iret
aaa
ins
shl
lock
xor
add
and
dec
sbb
inc
jmp
loopne
mov
or
sbb
imul
shr
icebp
ds
movlps
iret
push
add
rol
lock
jo
and
and
iret
push
rcr
add
mov
jns
sub
fwait
sbb
and
add
inc
imul
xor
jb
call
es
jl
add
add
(bad)
outs
in
push
fwait
mov
aaa
enter
fadd
add
push
fs
pop
and
and
dec
mov
push
pop
sbb
sbb
call
call
pop
loopne
add
inc
push
in
fdivr
aad
or
xor
adc
mov
or
xchg
and
cmps
in
mov
fcom
scas
push
inc
mov
push
lods
or
and
push
add
push
fistp
pushf
and
out
shr
pop
xchg
sbb
and
jb
and
inc
punpcklbw
cdq
push
cmps
sbb
fs
cmp
je
loop
dec
pop
xchg
hlt
sbb
test
mov
sub
shl
dec
dec
outs
aaa
sahf
sbb
xchg
push
cwde
dec
jae
sub
fadd
jns
jmp
pop
or
or
sbb
adc
sub
xchg
ret
push
hlt
add
add
add
xor
sbb
add
lock
push
adc
in
mov
adc
mul
and
or
in
stc
or
sbb
sbb
push
push
push
add
add
jp
enter
push
xchg
or
add
icebp
adc
sbb
adc
add
and
enter
jmp
pop
pop
jb
pop
call
shl
xor
xlat
stos
retf
and
mov
leave
push
fst
adc
pushf
mov
add
fsubr
add
add
add
gs
sbb
movs
bound
or
xchg
dec
jb
and
or
mov
(bad)
push
add
shl
jae
and
jp
mov
sbb
inc
loope
push
(bad)
or
and
add
pop
jp
or
pop
mov
dec
test
mov
arpl
in
stc
dec
jecxz
xchg
xchg
cmp
div
sbb
rcr
cmp
mov
arpl
mov
sub
dec
add
and
pop
popa
in
fcom
mov
and
retf
jmp
mov
push
in
jbe
add
adc
cmps
fadd
test
cmp
add
jl
or
xchg
mov
jnp
add
pop
push
push
push
add
pop
mov
sub
jno
mov
iret
or
sbb
leave
xor
pop
inc
or
push
or
mov
push
pop
fwait
add
and
and
or
and
sbb
push
mov
mov
ror
loopne
push
cdq
rcr
pop
jle
test
(bad)
pop
je
pop
ficomp
in
xlat
rcl
jmp
or
fld
sar
sbb
push
jnp
div
popa
sbb
mov
mov
sbb
cld
add
lock
sub
sub
push
sbb
dec
add
adc
lds
push
pushf
in
mov
inc
push
add
xchg
adc
push
shr
xor
push
mov
jne
retf
adc
movs
cmp
inc
(bad)
out
(bad)
mov
pop
or
cmp
cmps
mov
add
sub
lea
movs
sbb
and
dec
fsubr
ins
dec
adc
je
push
pop
dec
push
call
mov
sub
push
ret
cmp
mov
adc
push
or
jmp
push
sar
and
add
je
add
pop
cmp
mov
mov
xor
fs
and
pop
ficom
push
sbb
es
xor
sub
pop
add
sbb
cmp
mov
push
sbb
add
add
and
movs
xchg
or
push
dec
sbb
sbb
inc
sbb
xchg
scas
call
sbb
aaa
(bad)
loopne
inc
adc
cmp
outs
iret
xchg
pop
adc
mov
add
push
movs
xor
js
inc
push
push
inc
mov
or
add
cmc
test
rol
or
mov
lahf
or
add
shl
and
push
stos
push
pop
mov
sahf
ss
push
xchg
mov
add
mov
fistp
fst
sbb
ins
loopne
stos
or
inc
imul
jl
mov
sub
push
mov
add
sbb
adc
pop
sbb
out
xor
cdq
inc
sub
xor
imul
dec
push
dec
sbb
pusha
and
(bad)
test
add
and
jmp
or
mov
or
add
add
mov
enter
gs
adc
daa
(bad)
jmp
jg
sbb
add
in
or
pop
mov
clc
das
loop
bound
dec
movs
out
pop
dec
xor
movs
sub
imul
in
fs
adc
shl
movs
inc
mov
sbb
inc
sbb
or
stc
in
or
and
mov
jmp
sub
mov
mov
pop
jmp
mov
push
sbb
dec
push
or
adc
xor
xor
sub
jmp
mov
test
mov
sbb
jecxz
sbb
inc
push
movs
mov
push
ret
dec
mov
inc
sub
dec
rol
popf
in
cmp
arpl
retf
out
pushf
pop
enter
push
xchg
shl
cmp
fwait
and
and
mov
push
ret
scas
xchg
cmp
sbb
sub
mov
add
xor
mov
adc
rcl
into
xor
xor
adc
ds
push
push
mov
sbb
lock
jne
jl
mov
test
jne
mov
je
jmp
pop
dec
cmc
rcr
inc
xor
inc
cmps
push
in
add
scas
shl
add
dec
mov
or
les
adc
test
pop
adc
(bad)
jl
adc
mov
lea
movs
add
jo
xor
or
add
stos
jo
mov
jecxz
ret
nop
push
addr16
shr
jb
pop
ror
pop
aam
nop
sub
popa
mov
and
sub
add
stos
add
add
les
add
sub
ror
pushf
pop
adc
sub
repnz
fadd
fcom
lock
dec
mov
mov
mov
ret
dec
add
pop
shl
aam
lahf
sub
test
push
sahf
xor
mov
test
rol
pop
sub
sbb
in
aam
or
xchg
inc
or
mov
call
fucomi
mov
or
fdiv
iret
out
int3
inc
enter
cs
and
enter
outs
xchg
loopne
test
int3
sub
movs
sub
xchg
add
sbb
fst
jmp
movs
test
popa
out
adc
ss
imul
dec
fild
xchg
sbb
adc
sub
dec
xchg
push
into
iret
push
adc
mov
and
sbb
jmp
inc
push
scas
(bad)
and
mov
dec
dec
sbb
inc
mov
jmp
jle
lea
add
stos
fmul
rcl
xor
out
leave
mov
sbb
sbb
das
or
in
popa
call
mov
mov
js
push
add
repz
sub
sbb
cmp
cmp
or
int3
lock
xchg
lods
aam
adc
cwde
dec
mov
xor
lods
pushf
fwait
lock
js
mov
cmp
ja
out
push
rol
mov
xor
jne
sbb
retf
pmuludq
scas
sub
jl
or
lahf
cwde
pop
scas
sub
sbb
inc
popa
adc
or
cmp
fst
mov
mov
add
mov
ja
or
cmps
cmp
sub
stos
inc
ss
test
and
movs
sbb
jmp
jmp
or
or
stos
sbb
test
inc
dec
xlat
jp
hlt
sub
add
rcl
test
retf
xchg
je
xchg
enter
(bad)
lea
inc
stc
scas
cdq
(bad)
and
movs
mov
jo
push
call
and
add
jns
and
xor
xor
or
sbb
nop
mov
mov
push
xor
rol
xchg
ins
cmp
xor
enter
push
sbb
mov
hlt
push
adc
cli
pusha
pop
inc
clc
stos
(bad)
call
call
lock
das
push
lods
push
dec
les
adc
dec
lahf
jo
jmp
jle
jmp
mov
add
pop
call
cmp
mov
xchg
add
xor
or
add
jl
adc
cli
cmp
lea
mov
enter
cmp
or
inc
icebp
(bad)
xor
push
(bad)
cmp
hlt
out
jl
das
mov
jecxz
inc
push
imul
clc
add
mov
inc
cmp
inc
sub
push
sub
or
inc
push
pushf
mov
jecxz
or
jmp
xchg
sahf
mov
push
test
add
push
or
cld
ffree
gs
pop
jl
sbb
add
jae
push
inc
jp
jmp
imul
xchg
cmps
lds
lods
inc
or
cld
xlat
mov
jns
sbb
add
xchg
and
add
repz
adc
jge
or
sbb
pop
xchg
jbe
sbb
lods
sbb
es
xchg
or
and
fcmovbe
pop
test
or
add
and
mov
or
add
and
out
mov
aas
mov
sahf
adc
retf
or
sbb
aas
inc
inc
and
mov
xchg
mov
and
les
in
mov
loope
dec
push
inc
xchg
mov
loope
(bad)
mov
push
jnp
or
shl
push
adc
dec
xor
add
sahf
cmps
add
ja
inc
mov
fnsave
dec
xchg
dec
and
pop
out
aad
sbb
movs
imul
dec
mov
add
inc
(bad)
pop
xor
and
sub
dec
les
add
in
mov
js
mov
add
or
clc
add
loopne
mov
dec
add
push
imul
pusha
adc
mov
ret
mov
xchg
pop
nop
xlat
add
or
or
mov
rcr
sbb
daa
rcl
and
mov
nop
add
inc
dec
and
(bad)
push
popf
data16
sub
mov
push
push
fwait
jns
mov
pop
nop
dec
or
inc
cmp
jb
repnz
pop
or
push
jmp
mov
and
dec
dec
xor
jge
push
(bad)
retf
mov
jecxz
test
mov
push
dec
inc
inc
sbb
adc
push
pop
test
push
adc
loop
lods
nop
and
dec
and
(bad)
call
pop
addr16
inc
cs
or
sub
sub
push
or
or
loope
dec
or
dec
adc
aaa
inc
or
cdq
jbe
jl
jp
adc
or
and
es
xchg
imul
aam
mov
push
xor
inc
loopne
test
adc
jne
mov
pop
xchg
add
fdivr
mov
mov
inc
and
sub
es
rcr
xor
push
dec
jle
int3
add
scas
push
(bad)
int3
jbe
mov
mov
inc
enter
and
ficom
xor
xchg
sub
add
xchg
inc
fild
arpl
mov
push
dec
cmp
mov
xchg
push
imul
adc
xchg
dec
lahf
cdq
mov
push
dec
call
mov
cmc
sbb
and
xor
test
les
minps
dec
add
sub
jae
mov
push
inc
outs
adc
inc
cmps
xor
xor
jae
adc
xchg
lock
or
xchg
clc
test
nop
inc
add
add
pop
fmul
nop
sbb
pop
inc
imul
or
outs
xor
sub
bound
mov
and
push
add
and
dec
aam
ins
or
sbb
test
or
std
out
or
je
mov
pop
jmp
push
aaa
jnp
(bad)
in
je
cmp
jmp
push
or
sti
push
cmp
je
cmp
inc
and
or
pop
or
mov
push
xchg
or
adc
mov
dec
js
pop
cwde
scas
jge
xchg
loop
mov
pop
not
and
dec
push
push
fs
xchg
and
inc
push
dec
test
adc
leave
pop
repnz
popf
add
adc
and
stos
cmps
pushf
fs
mov
test
push
inc
dec
imul
jnp
sub
mov
add
arpl
or
pop
mov
or
cs
test
inc
mov
cmp
add
hlt
and
mov
in
(bad)
jl
cmp
or
enter
inc
in
test
push
xor
or
lahf
mov
cli
mov
cs
int
hlt
adc
out
add
adc
jmp
inc
push
and
jb
or
or
les
clc
sub
cmp
loope
add
push
push
stc
xor
mov
(bad)
dec
cmps
mov
and
sbb
pushf
sbb
clc
add
cmp
pop
mov
hlt
mov
enter
fadd
sar
dec
cwde
fs
pop
enter
xor
adc
push
add
stos
push
and
push
lock
xor
inc
add
aam
cmp
push
enter
pop
daa
or
adc
mov
outs
xchg
inc
imul
sub
daa
arpl
mov
(bad)
and
push
dec
repz
rcl
sbb
xchg
mov
inc
mov
test
sbb
sub
push
js
mov
retf
cmps
sahf
fiadd
mov
push
cmc
and
ja
pop
mov
or
jmp
pop
pop
fcmovne
cmc
jo
push
call
into
xchg
ret
in
shr
in
add
pop
push
stc
inc
sub
call
inc
fsubr
inc
and
add
or
pop
push
jle
push
push
add
xchg
add
and
push
retf
imul
lods
and
not
inc
xchg
mov
add
add
mov
adc
lahf
add
add
and
push
dec
rol
lods
xchg
sbb
xchg
mov
pop
jo
stos
retf
retf
push
push
sti
retf
inc
add
pusha
add
icebp
add
inc
and
push
add
jge
and
lock
jne
mov
pusha
ins
mov
add
imul
shl
and
sub
push
stc
icebp
in
mov
aas
ror
les
push
jbe
inc
push
push
retf
push
js
scas
push
inc
cmps
ret
xor
cmps
outs
clc
sbb
sbb
mov
or
push
je
pop
sbb
push
aas
add
jnp
mov
aam
pop
and
out
int3
ret
pop
mov
(bad)
dec
setno
mov
rcl
xchg
outs
arpl
dec
sahf
mov
push
es
out
in
dec
push
test
pop
mov
movs
jo
mov
mov
add
lods
add
xor
or
xor
imul
leave
and
dec
aam
adc
mov
mov
sar
into
int3
pusha
or
int
mov
rcl
dec
add
or
clc
or
or
add
outs
xor
add
xchg
jno
inc
sbb
add
and
fcom
je
xchg
push
jno
stos
push
xchg
pusha
movs
mov
inc
hlt
push
fisttp
push
aas
jb
push
jle
das
xor
cwde
mov
mov
adc
and
rol
les
inc
mov
push
inc
sub
or
dec
mov
inc
inc
test
loopne
and
retf
inc
mov
adc
cmp
or
pop
adc
and
movs
adc
popa
push
xor
jmp
push
adc
xor
je
movs
es
ret
cmps
stos
in
sti
add
xor
stos
add
jo
lock
or
xchg
adc
(bad)
loope
rcr
cmp
mov
or
rol
or
add
addr16
jo
push
xor
in
jl
push
inc
repz
ror
inc
test
cmps
inc
pop
push
mov
retf
xchg
xor
or
sub
and
add
ret
fs
nop
sub
call
retf
jae
adc
mov
or
sbb
es
(bad)
les
xor
lock
sbb
jge
cmp
adc
and
add
lea
test
and
cmps
(bad)
aam
inc
rol
sub
fsub
sahf
dec
daa
dec
xchg
sbb
mov
push
cmps
or
in
sbb
std
movs
test
out
mov
daa
push
push
dec
jmp
sub
jg
push
push
add
imul
mov
ja
adc
push
adc
push
cmp
sub
call
pop
ret
or
pop
inc
sub
inc
stos
lea
sub
add
sub
cmp
test
xchg
and
pusha
fwait
mov
test
daa
imul
arpl
adc
not
adc
and
push
(bad)
fxtract
ret
nop
test
inc
jmp
pop
pusha
add
test
push
cmp
(bad)
sub
clc
push
lock
lods
cmp
mov
es
enter
ret
int3
(bad)
push
movs
test
add
inc
inc
jae
xchg
adc
add
pop
cmp
imul
push
mov
push
xor
and
fcomp
sub
jae
xchg
sahf
in
popf
and
dec
push
add
mov
into
enter
push
sbb
aam
and
push
fadd
jne
push
mov
(bad)
loopne
retf
jl
iret
aam
cmp
or
ja
xchg
add
mov
push
adc
and
call
sub
shl
(bad)
add
push
les
fdivr
retf
in
push
or
add
mov
jb
add
daa
or
in
clc
xor
push
out
clc
aas
jmp
ret
mov
xchg
push
in
mov
sub
scas
add
adc
adc
jle
fwait
pop
int
out
xor
cmp
imul
mov
dec
push
dec
inc
or
popf
leave
ss
jb
mov
outs
nop
retf
aas
sbb
imul
out
jne
pop
add
das
and
loope
push
test
mov
and
inc
loope
icebp
sub
or
jp
xchg
mov
jle
push
js
jmp
mov
push
push
aam
or
add
sub
cwde
rcr
ret
cdq
test
dec
rol
mov
adc
pop
sub
retf
dec
sbb
adc
neg
pop
jp
jo
sbb
sbb
fidivr
cmp
clc
pop
aaa
aaa
mov
dec
or
cmp
inc
jl
jb
lea
push
or
sub
fwait
ins
sbb
pop
daa
xchg
pop
aas
mov
lea
dec
ins
aaa
cmp
xchg
outs
rol
call
add
sbb
add
fisttp
rol
pusha
inc
jbe
pop
mov
cmc
adc
out
adc
and
ror
les
and
fiadd
call
inc
dec
push
fld
rol
mov
sbb
aaa
call
cmp
pop
rol
lock
or
add
scas
adc
cmp
int
xor
retf
hlt
add
push
ror
mov
sbb
adc
or
dec
fbld
inc
mov
add
push
or
xor
add
rol
push
cmp
int
mov
push
lea
in
xchg
inc
xchg
mov
sbb
cmp
lahf
mov
pop
add
int
jmp
imul
adc
bound
loopne
or
inc
lea
rcr
repnz
and
out
inc
sub
add
aas
(bad)
ss
test
and
popf
rcr
retf
sub
enter
push
sub
adc
cwde
push
ins
mov
or
sbb
xchg
jle
mov
mov
pop
push
pop
int
stos
ja
add
das
pop
push
or
xchg
std
push
(bad)
mov
xor
ret
out
push
adc
out
mov
fdiv
test
(bad)
or
mov
push
sbb
outs
int3
ror
mov
xchg
in
push
aaa
imul
inc
or
xchg
int
adc
push
dec
shl
aaa
jmp
xchg
pop
jns
in
mov
(bad)
fsubr
or
inc
mov
cmps
lods
add
add
mov
jne
in
inc
sbb
out
in
or
push
adc
pop
mov
xchg
outs
mov
inc
adc
pop
xchg
repz
test
add
sbb
pop
sar
and
push
sub
or
xor
mov
xchg
or
ret
mov
ja
in
loopne
ret
push
add
and
enter
dec
int3
fdivr
pop
(bad)
cmps
pop
test
addr16
xchg
inc
push
push
mov
or
sub
lahf
add
mov
clc
mov
mov
dec
or
and
cmp
imul
jge
inc
pop
or
push
in
mov
pop
sbb
out
push
dec
aaa
xor
push
add
pushf
or
or
inc
mov
inc
mov
add
and
je
cld
or
mov
add
adc
and
sahf
lods
and
lock
or
xor
push
jg
adc
jne
pop
imul
dec
dec
sar
sbb
add
push
pop
loopne
sbb
jmp
xor
stc
jmp
push
in
xor
les
mov
cli
sbb
les
and
jns
pop
push
out
mov
in
jl
add
sub
xchg
and
adc
leave
add
pusha
mov
jecxz
lock
mul
loop
push
movs
mov
mov
push
push
call
pop
mov
mov
adc
(bad)
mov
les
in
cs
push
jns
and
fistp
inc
mov
jle
jle
adc
jge
arpl
jne
add
aaa
sar
xlat
push
push
inc
cmp
jle
movs
inc
imul
inc
and
sbb
popf
and
test
jp
in
xchg
es
clc
mov
popf
jns
sub
lea
rcr
icebp
bound
inc
cmp
push
ficom
push
adc
ins
or
sbb
js
pop
jl
dec
sub
cmp
cmp
or
mov
jo
add
and
mov
aam
pop
push
jle
retf
xor
loopne
mov
add
enter
aam
outs
lock
aam
xor
cmps
add
nop
cmp
rol
add
jmp
and
mov
add
mov
and
mov
adc
inc
adc
ins
cmp
rcl
xor
dec
mov
xor
cmp
or
add
loope
in
jl
pop
out
xchg
push
ror
je
add
int
test
jle
sar
sar
push
add
pop
mov
out
and
or
test
or
ret
pop
xor
ret
call
jb
lods
sbb
xchg
mov
or
je
mov
call
mov
rol
clc
xor
xor
ds
ret
scas
mov
jg
sbb
mov
enter
push
mov
sbb
xchg
gs
mov
shl
xor
cld
sub
jne
xchg
sub
add
lock
in
dec
add
(bad)
push
cmp
jge
jmp
lock
scas
nop
out
stc
enter
aam
in
adc
jb
push
pop
pushf
sbb
mov
test
add
or
push
inc
es
out
ja
fadd
cwde
mov
and
pop
in
or
push
jle
add
gs
inc
inc
lea
into
lock
inc
mov
outs
mov
inc
dec
retf
cmp
gs
jp
jl
call
jg
cmp
jle
jge
or
icebp
leave
adc
mov
or
je
aam
mov
cmp
je
or
cmp
mov
mov
sub
shl
adc
sbb
dec
cwde
cmp
mov
cmp
jmp
mov
mov
call
dec
dec
sbb
pop
cwde
ja
hlt
shr
sbb
push
bound
popf
mov
mov
push
mov
icebp
enter
pop
cli
cmp
dec
les
loopne
int3
mov
sbb
out
addr16
aaa
push
test
sub
mov
loope
xchg
lahf
lods
hlt
push
retf
jle
lea
enter
inc
inc
push
push
jg
push
mov
sub
mov
ret
sbb
xchg
xchg
sbb
nop
xchg
jl
adc
push
add
add
(bad)
(bad)
jbe
ror
xlat
or
sahf
xchg
inc
sub
dec
jae
dec
push
and
lock
lahf
sub
cmp
retf
or
aam
(bad)
cld
push
inc
(bad)
adc
xchg
adc
inc
add
bound
rcl
xchg
pop
lods
and
movs
push
sbb
and
stos
add
push
loopne
call
xchg
fistp
xchg
xchg
in
add
pop
jmp
lods
loop
fs
ret
push
mov
movs
sbb
mov
xchg
movs
inc
xchg
or
xchg
adc
or
gs
dec
cmp
(bad)
repnz
int3
cmp
movs
mov
(bad)
jp
int3
mov
xor
mov
std
adc
jne
cmp
aaa
push
or
push
push
aaa
pushf
mov
mov
cmps
aam
int
es
dec
sbb
dec
popa
aam
dec
ja
cdq
movs
push
mov
add
cmp
inc
ret
adc
add
xor
test
mov
and
mov
enter
jbe
jl
leave
or
xor
movs
mov
sbb
les
enter
jge
sbb
and
repnz
rcl
int
push
push
push
cmps
pop
xchg
add
cmps
fwait
loopne
sub
xor
dec
imul
movs
std
popf
xchg
xchg
jne
les
add
repnz
enter
loopne
aam
cmps
loopne
add
inc
push
sbb
xchg
push
bnd
inc
lea
push
(bad)
jnp
xchg
imul
or
js
cmp
jmp
nop
xchg
and
in
dec
push
xchg
add
stos
cld
out
int
es
inc
jb
enter
push
add
add
mov
js
cmp
push
sti
push
mov
add
sub
or
and
mov
mov
pop
call
inc
cmp
repnz
fld
int3
sub
fild
mov
jb
sahf
aam
hlt
fld
add
fcomp
loopne
or
icebp
mov
dec
add
push
call
add
mov
inc
out
mov
jg
push
push
and
pop
xchg
or
es
sbb
fcom
jo
inc
pop
test
div
in
add
and
(bad)
in
or
call
adc
add
cmps
push
jecxz
stc
add
or
mov
add
sbb
test
or
or
test
loop
mov
sbb
lea
add
dec
hlt
add
loopne
cmps
test
jno
dec
xchg
imul
clc
cdq
or
lea
mov
sbb
jns
or
pop
pop
inc
je
add
inc
in
push
pop
loopne
inc
cmc
push
nop
and
pushf
es
dec
add
push
xchg
loopne
add
fcomp
mov
push
cs
call
mov
adc
mov
sub
xor
and
mov
mov
and
inc
call
imul
sub
sub
rcr
call
test
call
adc
push
mov
mov
je
cmp
jge
jb
call
adc
and
(bad)
sbb
push
mov
add
push
dec
call
add
ror
int3
add
ror
lods
add
mov
test
cwde
(bad)
or
jge
fmul
loop
jge
mov
add
sub
sub
cmps
push
lods
lahf
lock
cmp
cmps
or
pop
mov
(bad)
ret
inc
jnp
(bad)
or
xchg
cmp
lock
dec
add
jl
jb
out
sti
sbb
add
xchg
dec
std
pushf
pop
mov
test
cmps
daa
inc
mov
cmp
dec
out
sbb
jle
fisub
pop
inc
lea
or
(bad)
or
inc
nop
shl
repnz
inc
inc
adc
mov
adc
clc
jl
dec
cmp
jno
dec
imul
xor
or
out
add
inc
sbb
cmp
mov
sub
fs
push
push
das
add
lock
mov
daa
cld
add
pop
xor
sbb
adc
nop
dec
or
jl
movs
fdiv
lods
pop
sbb
mov
dec
or
or
pop
fisub
cmp
xor
push
test
push
in
or
dec
cmp
jge
les
jecxz
add
add
(bad)
call
test
loopne
mov
push
pop
lea
or
dec
lods
movs
inc
and
mov
sub
inc
dec
xchg
jno
sub
mov
imul
call
cmp
call
mov
std
ret
sahf
jle
cmp
adc
pop
push
or
jl
rol
sbb
inc
or
mov
push
adc
repnz
cli
xor
icebp
push
fmul
add
inc
jl
movs
repnz
out
mov
int3
call
mov
jge
sub
les
leave
rcr
iret
or
or
lods
pop
inc
mov
enter
pop
inc
or
or
add
jmp
in
adc
xchg
or
add
mov
test
adc
inc
std
sbb
mov
adc
in
movs
iret
inc
ins
daa
inc
(bad)
in
add
adc
inc
sub
add
xor
mov
cmp
pop
imul
or
dec
fisttp
stc
dec
inc
sub
mov
pop
sahf
ja
dec
mov
ror
icebp
or
js
inc
aas
add
pop
call
inc
pop
mov
mov
push
inc
xor
and
test
xchg
test
xor
jne
or
sub
test
rcl
popf
jg
cmps
repz
ret
arpl
vsqrtps
fucomp
std
enter
(bad)
out
add
pushf
pop
add
loopne
add
popa
stos
test
test
and
inc
pop
mov
add
mov
or
es
mov
inc
mov
mov
sub
hlt
dec
push
push
push
xor
(bad)
cld
or
add
mov
loopne
xlat
push
fwait
mov
inc
clc
jecxz
or
inc
out
ror
hlt
and
cld
cmp
aam
aad
inc
push
xor
inc
ds
pop
clc
daa
clc
daa
ret
je
dec
dec
dec
xor
movs
inc
pop
or
jmp
call
enter
inc
mov
int3
dec
xor
int3
mov
or
inc
add
push
inc
inc
leave
loope
mov
adc
in
in
adc
or
add
cmp
pop
or
mov
scas
add
or
fprem
sub
mov
sar
scas
in
xor
inc
je
jb
push
imul
scas
bound
add
and
scas
and
add
mov
lahf
rol
push
das
xchg
add
inc
push
add
and
jle
mov
mov
add
add
sahf
adc
je
pop
mov
ins
imul
ins
mov
ins
add
shr
imul
test
fwait
adc
inc
inc
rol
adc
rol
push
in
(bad)
pop
add
outs
leave
mov
add
scas
or
jno
shl
ds
mov
fiadd
js
daa
loope
pop
mov
mov
rcl
pop
enter
rcl
inc
and
and
push
jmp
mov
push
inc
shr
and
jne
pusha
pop
test
xchg
dec
mov
jne
inc
jge
adc
mov
jno
or
es
inc
cmp
call
es
push
xchg
adc
int3
add
stos
adc
xor
cmp
dec
je
push
mov
mov
cwde
xor
add
sbb
push
inc
sbb
jb
dec
dec
inc
mov
or
inc
xchg
sbb
adc
xor
lea
mov
mov
cmp
push
cmp
adc
ss
inc
ja
ja
jo
dec
je
add
ins
pop
adc
push
loopne
sbb
mov
or
dec
add
sbb
sub
(bad)
cmp
test
pop
pushf
inc
add
xor
xchg
les
push
rol
(bad)
add
lea
repnz
sub
jne
mov
cmps
push
mov
aas
mov
pusha
push
cmp
and
je
push
jo
inc
mov
je
enter
mov
xor
add
test
dec
enter
push
sub
lds
cmps
test
mov
xchg
mov
pop
mov
add
and
sub
ja
jl
adc
push
jne
xor
js
lods
jl
cmp
div
push
lea
cmp
jge
lods
shl
psubb
add
lahf
je
add
add
or
imul
pusha
lea
mov
or
add
add
leave
add
int
push
mov
je
sbb
call
sbb
inc
ss
xchg
or
je
icebp
(bad)
bound
xor
jo
add
push
add
repnz
arpl
mov
mov
and
push
add
dec
lock
aam
adc
mov
dec
call
xor
gs
les
jne
inc
jmp
dec
push
sbb
outs
ret
jle
xchg
(bad)
add
test
push
test
je
popa
dec
mov
or
ret
cmps
outs
test
bound
add
jle
xor
bound
sub
cmp
movs
xor
je
call
dec
xor
je
adc
inc
test
shl
retf
enter
mov
int
jbe
cmp
xor
push
ds
call
fsubr
xor
ret
dec
test
enter
pop
mov
jle
jge
push
or
(bad)
scas
out
sbb
xor
xor
dec
push
lahf
je
xor
push
enter
or
inc
add
les
cli
add
cmps
push
pop
mov
repnz
and
out
lock
inc
test
sub
(bad)
inc
push
sbb
neg
add
and
inc
sbb
push
mov
test
add
push
and
sub
ins
rcl
or
repz
mov
dec
sub
out
jp
shl
sub
adc
mov
mov
test
ror
add
mov
add
mov
jp
adc
pop
sub
inc
fwait
push
lea
clc
jmp
adc
cdq
(bad)
and
or
shld
mov
mov
in
int3
mov
adc
nop
rcr
aam
ss
(bad)
fnsetpm(287
mov
dec
repnz
popf
movs
add
retf
pop
repnz
(bad)
sub
sbb
icebp
push
cmps
test
aam
ror
lods
mov
ret
test
shl
mov
cld
push
stc
sub
popa
jns
pusha
dec
call
mov
push
push
mov
cmc
aad
xor
pop
ret
mov
(bad)
or
ret
inc
sub
aaa
or
aas
sbb
inc
(bad)
call
push
adc
jge
inc
cli
mov
dec
les
je
jae
jae
push
and
pop
pop
add
or
ss
aas
xchg
call
je
les
jne
adc
mov
ret
pop
or
vdivsd
push
push
inc
mov
push
retf
fisttp
or
sub
pop
call
loopne
xor
into
sbb
or
enter
push
dec
mov
jnp
push
fnstcw
movs
stc
mov
pop
(bad)
cmp
test
call
push
outs
cwde
jmp
call
aas
scas
push
xchg
pop
jae
and
push
mov
jns
and
rol
mov
mov
pop
push
scas
add
pop
xor
and
sub
jmp
sub
fist
call
xor
or
iret
jle
int3
mov
jns
dec
test
mov
xchg
test
jle
jno
dec
and
stc
or
mov
and
or
sub
adc
leave
pop
pop
xchg
fstp
ins
imul
mov
inc
pop
leave
cli
push
and
sbb
adc
retf
jns
adc
retf
adc
shl
push
push
xor
test
inc
daa
add
sbb
rol
sbb
in
or
sbb
shl
adc
add
push
daa
or
jmp
cmp
mov
sub
cmp
mov
es
ins
leave
dec
mov
push
dec
mov
shl
(bad)
dec
clc
xchg
mov
dec
xchg
stos
sbb
sub
inc
add
pand
or
stc
push
adc
cmp
jmp
add
ins
pop
add
jnp
shl
repnz
je
inc
enter
xchg
jo
shl
mov
push
sub
push
mov
xor
int
in
jge
jmp
rcr
shl
icebp
add
enter
lods
and
dec
fimul
mov
iret
imul
mov
mov
pop
xchg
clc
dec
and
out
inc
cs
add
aad
and
inc
out
xchg
xchg
inc
and
push
add
sbb
inc
jb
js
pop
es
test
pop
add
leave
paddw
push
enter
push
shl
jo
jno
stc
fisub
or
push
and
dec
jae
jp
and
sub
and
cmp
leave
and
adc
dec
xor
or
and
and
sub
cli
rcl
xchg
mov
mov
mov
in
or
mov
mov
or
push
sbb
dec
test
mov
sub
or
popf
das
loopne
or
dec
xchg
ds
add
cmp
das
inc
mov
in
inc
push
xor
stc
jl
xor
add
and
cmc
loopne
loope
xor
lock
out
xor
or
(bad)
aad
jno
adc
add
or
or
fdivr
jne
inc
adc
inc
out
xor
into
(bad)
sbb
xchg
or
cld
dec
scas
add
pop
cmp
push
enter
add
dec
mov
inc
in
push
dec
ror
or
retf
aam
pop
push
jbe
add
aam
fwait
push
nop
and
test
mov
inc
test
push
fwait
rcr
int
mov
fs
or
cmp
(bad)
push
mov
push
push
es
aad
push
out
nop
xor
push
call
inc
sahf
or
lahf
push
rol
imul
push
sbb
mov
sbb
inc
lahf
jg
aas
int3
mov
push
and
pop
in
data16
call
dec
sbb
fstp
aad
std
enter
push
arpl
in
xor
cmp
add
inc
adc
push
(bad)
xchg
dec
add
fistp
in
push
pop
daa
or
add
dec
pusha
push
sub
dec
dec
xor
push
inc
and
fsubr
sbb
repnz
aam
js
add
adc
add
push
add
and
iret
cmps
xchg
mov
repnz
mov
lock
add
lock
xchg
xchg
rcl
shr
pop
adc
or
test
and
pop
jns
aad
dec
scas
or
ss
and
jmp
test
movs
jecxz
mov
xor
inc
adc
loopne
xor
mov
push
fcom
xchg
push
dec
ret
shr
mov
repz
add
movs
cdq
inc
mov
jge
data16
pusha
or
cmp
mov
add
cmp
add
inc
(bad)
sbb
jecxz
add
imul
push
in
or
jle
jae
jmp
cmp
add
cld
aad
rol
mov
aas
scas
add
call
lods
inc
xor
stos
jge
add
test
jl
shl
mov
ror
(bad)
or
pop
rcl
add
ret
fucomp
ins
xchg
and
sbb
mov
inc
ins
add
xchg
sub
dec
outs
sbb
mov
retf
add
sahf
sbb
add
pop
add
add
mov
push
call
ret
jo
add
loopne
sbb
(bad)
fdivr
dec
enter
stc
ficomp
add
jecxz
or
cmp
fstp
pop
adc
dec
mov
mov
outs
jns
dec
sub
adc
xor
dec
repnz
aaa
ror
sbb
push
sbb
mov
rcl
mov
pop
dec
daa
aas
in
iret
or
cmp
xchg
add
mov
mov
loopne
into
cmp
sbb
inc
push
cmp
and
inc
push
dec
push
jl
xor
ret
mov
aaa
int
jmp
and
repz
mov
dec
pusha
retf
inc
and
add
rcl
pop
aad
and
dec
les
and
fwait
mov
mov
rol
leave
test
ror
ret
ja
mov
enter
xor
enter
ret
jnp
add
add
pop
(bad)
and
xlat
test
jmp
dec
add
mov
shr
adc
and
inc
jns
or
jae
je
or
pop
pop
lds
aam
adc
ins
lods
bound
pop
mov
inc
adc
push
push
std
ss
xor
sbb
pushf
xchg
mov
cmp
xor
in
fadd
retf
xchg
xor
enter
movs
adc
add
jbe
ret
(bad)
push
das
inc
ror
xor
xor
(bad)
lea
mov
xor
add
add
aaa
push
sub
or
jl
pushf
push
int
sub
mov
or
xchg
or
jns
adc
or
ror
mov
nop
xchg
cdq
movs
mov
mov
push
sti
lods
jle
stos
movs
int3
lods
lods
jecxz
aam
retf
and
jmp
call
xor
gs
fnstenv
sbb
mov
fcomp
clc
clc
and
js
and
cmps
push
clc
(bad)
int3
cmps
add
dec
pop
mov
push
add
outs
adc
fsubr
inc
leave
cli
int
xor
mov
dec
sub
fs
sbb
dec
mov
mov
rol
mov
sbb
or
add
loopne
inc
pop
push
jns
aaa
ror
push
add
add
addr16
dec
or
cmps
adc
movs
fmul
pop
in
mov
test
xchg
push
push
adc
mov
inc
inc
push
mov
cmp
sbb
or
fst
ret
jmp
mov
xor
adc
mov
mov
mov
mov
sbb
jl
iret
mov
sbb
je
inc
test
test
test
sahf
arpl
adc
cmp
jns
ret
int
inc
push
fisttp
dec
sbb
aaa
lods
and
adc
shl
push
mov
fs
or
jg
and
xor
mov
xor
dec
jo
jl
test
add
adc
inc
mov
jbe
sar
or
inc
dec
push
adc
rcr
add
sbb
sub
sbb
push
dec
adc
cmp
je
sbb
and
jo
ret
inc
mov
or
jge
ret
xor
cmp
push
adc
dec
cld
xchg
enter
cmp
jl
and
and
xlat
cld
in
aas
or
aam
jne
xor
loopne
sahf
retf
cmps
inc
add
mov
leave
push
mov
xchg
pusha
aam
lds
jns
imul
or
scas
pop
pop
shl
mov
lea
test
cwde
jmp
je
stc
out
lock
or
addr16
sub
jle
mov
push
es
push
or
loope
push
test
mov
sar
mov
shl
loope
xlat
mov
lods
mov
mov
mov
add
int
lods
aam
xchg
imul
stos
(bad)
js
jge
push
cmc
sbb
and
sar
dec
jo
test
(bad)
xor
in
dec
sbb
lea
or
call
xor
push
jns
pushf
lods
fisubr
and
ins
sbb
mov
sbb
push
xchg
cmps
and
lahf
pop
sbb
ror
push
inc
sbb
ret
jne
mov
jne
xor
pop
or
and
(bad)
xchg
dec
and
loope
outs
push
add
fmulp
setle
popa
sbb
cli
outs
movs
and
(bad)
or
add
stos
gs
mov
inc
sub
and
(bad)
push
call
or
mov
aaa
ins
in
adc
mov
sbb
push
jle
xchg
pop
xchg
pop
pop
mov
add
cli
push
out
retf
and
dec
add
cmp
jg
adc
(bad)
(bad)
push
jne
cmp
iret
and
jb
hlt
push
mov
inc
retf
xchg
add
mov
nop
pop
dec
sub
inc
jle
and
push
inc
mov
sbb
leave
stc
adc
lods
push
xchg
dec
mov
xchg
cwde
sub
es
inc
push
test
add
popa
mov
shl
sub
add
mov
pop
enter
outs
add
sbb
inc
es
in
call
in
in
mov
fadd
pop
or
in
xor
daa
inc
mov
sub
sbb
(bad)
and
ror
sbb
sub
(bad)
or
mov
cmp
cmp
sti
cmp
add
sub
inc
scas
adc
test
xchg
add
ss
xchg
test
aaa
xor
outs
imul
push
add
pop
sbb
adc
add
lods
or
loope
push
inc
enter
loope
sub
push
enter
adc
and
add
push
jb
invd
enter
add
ror
test
cmp
inc
or
add
sub
je
inc
in
and
mov
or
mov
add
gs
and
ins
push
fs
xor
aas
in
dec
mov
and
fcomp
rcr
xchg
out
mov
sub
fs
or
and
cmp
adc
cmp
les
dec
xor
xchg
or
shr
push
sahf
sar
or
sti
jo
cmp
push
push
push
or
call
es
push
shl
and
jo
push
bound
lods
js
xchg
mov
pop
jo
sub
shr
xor
or
jb
or
cmp
test
es
cmp
add
adc
and
rcr
or
inc
sub
stc
jne
xchg
js
jge
cmp
js
inc
enter
frstor
push
int3
inc
mov
ja
or
push
stos
rol
ficomp
outs
adc
or
icebp
push
mov
inc
or
or
mov
xor
je
sbb
dec
and
cdq
mov
(bad)
mov
sbb
jo
and
inc
jo
cmp
aas
push
pop
dec
or
cmc
push
int3
or
lds
pop
lods
cmps
(bad)
jne
(bad)
dec
leave
push
jge
fst
xchg
xor
push
inc
push
ins
push
cmp
neg
sar
push
sub
pop
sub
enter
pop
sub
sti
dec
mov
adc
add
add
jmp
int3
push
je
cmps
fiadd
push
sbb
push
mov
inc
test
push
add
and
sub
add
mov
adc
and
cmp
inc
and
dec
adc
cmp
movs
or
and
sbb
lods
mov
shr
push
or
or
imul
xchg
(bad)
jmp
xor
sub
inc
jb
push
push
femms
pushw
mov
lea
pop
cmc
adc
test
push
lock
add
add
fwait
or
sub
jg
lock
outs
outs
outs
fwait
outs
mov
in
inc
ss
fdiv
add
fidiv
inc
pop
stos
popa
jle
icebp
mov
xor
sub
nop
push
adc
adc
fbld
into
sub
add
cdq
loop
add
pop
or
es
adc
loop
and
sub
out
cmp
fsubr
add
push
aas
pop
sub
pop
sub
mov
mov
or
call
xlat
xor
dec
sbb
dec
and
int3
sub
push
dec
dec
push
xchg
mov
mov
call
push
dec
adc
adc
mov
ret
enter
adc
les
mov
add
xor
pusha
or
call
add
fldenv
ins
xabort
dec
inc
(bad)
inc
repnz
js
enter
or
sbb
inc
je
mov
fcom
das
xchg
sar
mov
mov
xlat
adc
scas
mov
sbb
pushf
sub
or
add
push
add
add
add
sub
cmps
nop
retf
jo
add
sbb
add
or
cmp
dec
inc
movs
add
das
jl
add
(bad)
lds
cmp
sbb
xlat
xchg
dec
jne
dec
repz
xor
xor
push
aaa
sub
or
mov
pop
in
mov
test
cmp
shl
hlt
push
mov
add
adc
stc
add
inc
add
push
and
clc
add
loopne
or
adc
pop
xor
xor
and
imul
popf
sub
lods
mov
in
sub
bswap
push
test
pusha
push
mov
outs
call
ja
add
xor
dec
dec
adc
das
aam
push
add
adc
ins
call
sbb
dec
mov
sahf
sbb
fsubr
sub
ror
and
mov
dec
pop
and
ja
mov
push
lock
add
jne
adc
sbb
(bad)
mov
or
add
dec
cmp
inc
mov
adc
xor
mov
sar
mov
xor
adc
dec
pop
push
mov
loopne
dec
or
add
jnp
xor
fcom
sbb
ds
ret
into
lock
mov
jae
test
int
daa
add
cmp
inc
or
or
sub
add
dec
add
xor
push
push
push
out
fwait
or
jge
jmp
cmp
punpckhbw
and
push
out
cmp
adc
pop
(bad)
adc
cmp
and
adc
mov
or
adc
(bad)
pop
and
ret
pop
xchg
hlt
mov
mov
push
rol
jmp
mov
push
xchg
cs
push
rol
inc
push
jmp
mov
inc
and
ret
jae
rcl
jb
xchg
(bad)
aam
sahf
icebp
add
push
or
sar
and
adc
mov
jb
rol
jbe
outs
inc
call
add
jmp
enter
and
into
pop
scas
lock
aam
pop
add
mov
pop
jg
cs
test
imul
cmp
adc
clc
add
mov
and
pop
push
dec
repnz
cmps
pop
ins
repnz
dec
adc
sub
inc
dec
lds
sub
and
jb
adc
add
push
popa
and
stos
inc
lods
fistp
fs
lock
mov
sahf
cld
add
pop
nop
nop
adc
loope
jmp
sbb
or
push
add
sub
psubsb
push
add
push
or
push
and
jle
inc
mov
xor
(bad)
xor
sti
mov
push
dec
mov
mov
icebp
mov
mov
jmp
sbb
inc
add
jnp
jg
test
and
call
inc
mov
stos
jo
add
pop
adc
push
xchg
mov
push
test
adc
adc
enter
and
leave
psubsb
add
xchg
call
loopne
push
push
cmp
inc
adc
or
pop
adc
aaa
and
or
pop
aas
test
inc
daa
loopne
or
sub
mov
(bad)
push
mov
out
js
add
and
ins
or
outs
add
jne
loopne
test
mov
push
push
or
les
mov
add
arpl
dec
imul
adc
xor
add
and
xor
and
xor
in
ds
jmp
add
ja
leave
test
sbb
push
nop
pusha
gs
addr16
jae
and
push
lods
imul
inc
jb
push
or
and
and
loop
rcr
cwde
pop
jno
sbb
pop
pusha
loopne
cmp
js
rcl
ret
inc
xor
mov
inc
xor
jecxz
movs
repnz
aam
fsub
mov
sar
fprem
retf
mov
jnp
inc
jnp
fcomp
add
retf
mov
add
outs
or
iret
jle
mov
dec
enter
ror
es
cmp
push
jle
cwde
inc
sub
mov
and
or
les
scas
and
imul
adc
or
or
pop
adc
add
adc
pop
or
fs
xor
icebp
pop
and
mov
pop
call
fcom
add
sahf
or
cmp
or
movs
and
and
xchg
mov
lock
sub
test
or
aas
dec
(bad)
adc
mov
pop
xor
xchg
in
bound
lock
cs
xchg
cmp
cld
das
sbb
xchg
push
pop
ja
cs
jns
mov
push
add
ss
or
mov
test
call
dec
rcl
push
aam
jb
int
or
or
pop
push
add
movs
pop
cmp
push
pop
push
adc
xchg
xchg
loop
mov
cmp
jo
in
or
add
add
cmp
sub
push
jmp
rcl
inc
test
mov
and
fs
pop
dec
push
iret
pusha
adc
xor
movs
sbb
push
add
mov
adc
adc
xchg
and
add
and
xchg
add
pusha
push
pop
idiv
add
fwait
mov
pop
call
in
dec
cmps
ins
dec
imul
outs
adc
mov
adc
sti
and
je
inc
in
sar
nop
pop
adc
in
dec
cmps
or
(bad)
rol
add
bound
jb
stos
mov
and
and
imul
add
add
add
shr
shl
imul
adc
leave
add
push
test
hlt
das
push
nop
add
sub
daa
in
jmp
fild
mov
leave
xchg
adc
xor
push
jb
ds
push
and
lock
inc
cwde
xor
fdivr
and
sub
aad
or
adc
ror
push
and
outs
test
ins
sbb
in
sbb
in
lea
call
fsubr
jne
inc
call
imul
push
mov
xor
out
stc
gs
sbb
jb
or
addr16
imul
add
add
sub
push
dec
loop
lahf
jno
jmp
ins
mov
mov
ret
loopne
sbb
mov
or
cmp
mov
push
pop
mov
cmp
adc
mov
rcl
test
ror
or
dec
fild
test
shl
in
in
in
(bad)
add
sub
lahf
aam
xor
add
xchg
aam
xor
and
mov
sub
out
addr16
jmp
bound
or
(bad)
xor
retf
pop
in
xor
mov
dec
pop
shl
sbb
mov
addr16
xchg
add
cwde
adc
add
push
shr
aam
lods
(bad)
mov
pop
jae
or
mov
jo
(bad)
nop
mov
or
pop
mov
inc
jne
add
or
push
mov
rcl
or
gs
xchg
nop
mov
add
(bad)
sbb
fcom
xor
pop
xchg
shl
and
push
pop
adc
push
movs
pop
jnp
add
stc
jbe
adc
adc
mov
add
(bad)
loopne
inc
mov
or
fcom
fiadd
fild
fiadd
pop
clc
call
add
cmp
pop
setle
cmp
jg
cmp
jg
push
jg
or
or
retf
jg
imul
cmp
jg
mov
cmp
pmulhuw
rol
and
in
leave
push
lods
in
dec
adc
jb
dec
enter
daa
inc
ds
fcmovne
out
or
mov
and
inc
les
adc
push
sub
add
adc
sbb
aam
add
shl
test
sub
add
xor
aam
movs
pusha
inc
sub
dec
es
add
mov
pop
enter
test
js
(bad)
cmp
dec
push
popa
jbe
mov
test
and
pop
gs
popf
inc
cs
xchg
or
adc
inc
mov
bound
push
add
sub
and
or
xchg
dec
push
bound
(bad)
leave
push
mov
lea
inc
enter
or
test
repnz
fstp
sub
rcr
arpl
mov
shr
adc
jb
adc
and
and
aam
inc
lock
enter
add
and
fmul
inc
mov
(bad)
loopne
jns
inc
hlt
pop
test
fadd
addr16
pop
and
cmps
cdq
aaa
jl
jo
jl
adc
pop
and
jl
mov
or
and
mov
xor
bound
jl
pop
leave
ins
jl
mov
dec
push
inc
sub
ins
add
xor
add
nop
xchg
and
xchg
add
test
nop
push
lea
jne
nop
popa
daa
daa
movs
sub
adc
push
sbb
int3
aaa
imul
pop
jl
or
js
sub
ds
pop
pop
dec
movs
dec
lods
and
adc
shl
std
push
and
inc
fs
and
mov
(bad)
and
pusha
cs
jecxz
arpl
jns
out
daa
push
int3
clc
ins
dec
call
inc
or
push
push
adc
push
dec
push
jb
cs
inc
loop
push
push
ret
lea
dec
cmp
les
push
ins
loope
in
ss
adc
or
popf
dec
add
and
outs
bound
inc
pop
inc
ds
jbe
xchg
add
or
mov
add
add
cwde
and
mov
or
or
adc
add
lea
in
aaa
push
int3
sbb
shl
xchg
cmps
dec
fdivr
dec
xchg
nop
dec
mov
lea
xor
xchg
test
mov
cmp
sub
sti
add
sub
sub
cmp
jge
fwait
push
sub
adc
sbb
adc
addr16
inc
ror
dec
cmp
or
sub
call
inc
enter
ins
adc
push
push
daa
cmp
mov
add
sub
enter
xchg
(bad)
nop
shl
push
das
les
fs
cmp
icebp
mov
adc
in
pop
xor
push
push
call
sbb
dec
arpl
add
and
add
inc
in
add
jge
add
call
call
pusha
pop
pop
sbb
fnstenv
push
(bad)
shr
out
(bad)
dec
push
pop
in
mov
out
loopne
sub
cdq
xor
dec
mov
movs
cmps
push
loopne
repz
inc
ret
adc
sbb
inc
sub
das
retf
sub
in
mov
cmp
sub
pop
pop
add
xor
dec
adc
test
add
sbb
mov
in
adc
mov
dec
mov
dec
sbb
mov
rcl
jo
fsubr
outs
(bad)
sar
mov
les
or
das
in
movs
shl
add
xor
dec
add
and
imul
dec
movs
push
sub
sbb
add
and
fisub
adc
xor
dec
fmul
lock
add
fsubr
cmp
xor
add
scas
fadd
int
and
mov
xor
(bad)
enter
xor
mov
aaa
dec
daa
dec
ds
pop
jp
mov
xchg
jb
jns
pop
fiadd
and
hlt
xor
sub
and
aam
xchg
cmc
movs
jns
cmp
push
add
enter
xor
lea
xor
mov
and
pop
pop
sub
test
and
mov
sahf
xor
cs
iret
sbb
into
xchg
or
add
fnstcw
and
in
out
and
iret
add
movs
gs
aaa
sbb
dec
cmc
adc
mov
repnz
xor
sbb
das
adc
sub
mov
cdq
mov
std
and
cdq
in
in
pusha
loope
and
cdq
mov
pop
stos
and
push
enter
in
add
leave
dec
movs
into
into
dec
jb
jae
add
inc
add
or
xor
inc
jmp
mov
mov
movs
and
mov
loopne
mov
stos
and
lock
and
inc
lock
jecxz
mov
mov
cdq
add
test
xor
call
cmp
outs
rcr
jge
cmp
sub
dec
mov
mov
ins
and
sar
sub
inc
mov
push
nop
mov
pop
pop
stos
adc
and
pop
shl
or
ret
mov
mov
mov
push
and
add
xor
nop
inc
ins
xchg
les
inc
sub
push
dec
imul
inc
(bad)
xor
(bad)
fistp
adc
int3
push
jns
xor
fistp
add
adc
xor
dec
and
adc
add
sbb
sti
ss
xor
mov
and
push
mov
nop
jo
and
lock
icebp
xor
test
push
dec
cmp
add
cmp
repnz
mov
repnz
dec
pop
cdq
push
fdivr
stc
and
add
pop
add
inc
sbb
or
dec
sbb
add
pop
(bad)
loopne
fsubr
pause
jnp
sub
iret
pop
sub
jmp
adc
mov
ffreep
hlt
pop
cmp
nop
add
jne
sar
xor
or
jnp
test
pop
cs
inc
(bad)
adc
mov
xor
add
dec
(bad)
add
addr16
gs
loope
xor
jmp
inc
ret
mov
dec
lea
loopne
jmp
loope
sub
movs
pop
movs
push
sbb
cld
movs
and
imul
sub
sub
(bad)
add
cdq
idiv
cli
xchg
jl
or
mov
mov
and
push
xor
fadd
pop
enter
add
adc
adc
xchg
lahf
cmp
aam
sub
add
push
les
sbb
dec
int3
bound
nop
loopne
sbb
sub
loope
ins
mov
xor
into
into
and
nop
push
adc
push
mov
adc
movs
add
jb
or
or
scas
and
xor
mov
jl
mov
adc
or
xchg
fadd
xchg
dec
call
add
add
sub
mov
fdivr
fnstcw
mov
jmp
mov
fidiv
dec
sub
sub
int3
int3
mov
enter
inc
mov
and
jo
inc
jbe
outs
inc
mov
push
repnz
or
nop
mov
add
daa
arpl
sub
imul
sub
xchg
add
xor
dec
xor
inc
repnz
loope
lods
add
aas
add
push
dec
call
movs
ja
sub
sbb
mov
add
aas
mov
and
and
jnp
cs
pop
shl
or
mov
fsub
ror
mov
add
popa
loope
mov
es
sub
xchg
ins
sub
add
fstp
inc
push
bound
push
xor
test
in
add
in
aas
add
cmps
mov
movs
sbb
xchg
fwait
std
mov
add
add
test
test
pcmpgtb
loope
xor
push
dec
pusha
sbb
xor
mov
pusha
xor
sbb
sbb
imul
loop
jecxz
imul
ins
pop
fwait
cmc
movs
aam
pop
xor
mov
test
cmp
mov
xor
lea
xor
(bad)
aam
bound
sub
push
and
mov
pop
pop
dec
lds
mov
pop
dec
daa
or
xor
movs
sub
xor
dec
xor
sub
add
ror
and
ja
fist
or
mov
mov
pushf
(bad)
icebp
stos
inc
cmp
xchg
ds
cdq
or
iret
inc
or
pop
lock
repz
pop
push
int
pop
or
mov
add
xlat
ret
sahf
adc
enter
mov
add
jbe
mov
nop
add
(bad)
dec
inc
add
shl
data16
push
lods
sub
push
sub
mov
hlt
ins
add
adc
push
mov
repnz
or
push
mov
sub
adc
inc
in
in
in
shl
pop
or
add
dec
sub
sbb
xor
or
xchg
in
sbb
stc
or
or
dec
sbb
inc
push
arpl
dec
push
dec
sbb
or
add
int3
js
or
inc
ds
xor
daa
mov
dec
loopne
or
aad
inc
jmp
xchg
and
nop
cmps
loop
je
shr
add
add
retf
add
mov
ss
dec
test
out
loop
push
jae
mov
cmp
cmp
mov
and
jl
cld
add
cmp
or
mov
cwde
out
add
or
(bad)
and
dec
and
sub
add
add
dec
adc
sub
ins
stc
or
or
and
inc
inc
lea
cmp
aam
pop
mov
das
jns
and
add
cmp
clc
add
or
xor
sbb
lods
sbb
jb
mov
pop
mov
or
cmp
mov
jno
push
out
xchg
jl
xor
jbe
lea
pop
and
or
pop
add
or
pop
xchg
lds
clc
lea
push
or
pop
xchg
lock
popa
shl
adc
stos
nop
inc
mov
call
in
in
rol
dec
jle
pushf
lds
cmps
shl
dec
jmp
dec
fwait
jbe
call
jo
and
arpl
push
push
and
inc
dec
enter
jb
add
loope
movs
sbb
add
jno
scas
add
mov
cs
xor
cmp
clc
test
mov
push
mov
pop
push
(bad)
retf
in
les
pop
push
mov
shl
in
enter
test
int3
inc
sbb
(bad)
jno
sbb
mov
ins
xor
je
mov
iret
mov
mov
cmp
call
sbb
or
stos
mov
outs
mov
lock
push
sbb
int
daa
xchg
add
and
add
sub
out
pop
jbe
sbb
mov
add
xchg
rol
(bad)
cdq
mov
fadd
or
cmp
mov
sbb
out
clc
sub
mov
add
lods
jbe
mov
jl
or
(bad)
jle
sbb
jne
icebp
xor
mov
push
dec
inc
push
jmp
jp
movs
int
sub
mov
mov
xor
adc
add
mov
sub
mov
add
sahf
or
add
adc
xchg
and
rol
rol
push
rol
sub
mov
int
fcomp
sbb
adc
into
pop
sti
push
lods
mov
das
push
and
mov
add
jns
pop
loop
pop
sub
or
in
inc
jb
xchg
(bad)
hlt
mov
or
jno
(bad)
adc
xor
lock
repz
jbe
fsub
push
loope
xchg
cmp
lods
and
xor
mov
adc
pop
add
movs
xor
repnz
jo
push
or
push
rcr
adc
pop
dec
xor
les
add
adc
add
or
mov
sbb
cmp
enter
cdq
adc
sub
retf
pop
jmp
imul
aaa
repnz
sub
inc
push
shr
(bad)
add
jne
outs
adc
mov
sbb
shl
or
lea
mov
or
jno
test
jb
cmp
stc
ret
cmp
in
jp
in
xor
adc
add
adc
adc
sbb
push
shl
int
iret
pop
xor
push
jae
mov
call
and
in
and
mov
xor
sub
pop
dec
outs
mov
das
(bad)
(bad)
aam
fcom
lods
cmp
cmc
cld
lods
push
jnp
inc
mov
pop
inc
inc
leave
add
inc
and
push
xchg
iret
pop
and
add
dec
and
pop
loopne
add
and
rcl
sub
mov
push
mov
nop
in
lea
fs
and
nop
xchg
ret
je
imul
aam
out
test
les
lock
mov
test
push
mov
sub
ss
and
int3
(bad)
add
or
stc
adc
or
dec
out
pop
add
pop
add
inc
scas
in
cmc
icebp
pop
fs
xchg
sbb
dec
je
sbb
ins
xchg
sbb
dec
nop
sbb
cmp
cld
xor
fmul
in
cdq
loopne
add
stc
ins
lods
lods
js
jb
adc
and
mov
les
or
fs
adc
pop
cmp
fsub
pop
fmul
rol
(bad)
jl
pusha
aaa
and
ins
dec
shl
xor
jne
addr16
cmp
test
cs
out
rcl
(bad)
pusha
retf
xor
or
rcl
inc
pusha
fld
fwait
out
popa
mov
test
shl
sbb
int
mov
lods
arpl
xor
mov
inc
call
dec
inc
mov
sbb
pop
clc
mov
sub
or
jge
inc
jnp
push
jmp
sbb
dec
inc
and
pop
sbb
push
sbb
inc
add
mov
idiv
ret
push
add
retf
sbb
ja
pop
icebp
add
add
test
lock
jmp
(bad)
mov
sub
(bad)
and
and
cmp
jle
sbb
pop
scas
ss
xchg
(bad)
mov
adc
sub
xchg
icebp
and
pusha
jg
cmp
aas
fadd
and
sbb
sti
or
ins
add
jp
push
sub
sub
imul
mov
sbb
jmp
ret
pop
nop
fmul
sbb
or
mov
inc
push
ins
inc
outs
push
in
or
add
push
shl
call
sbb
mov
int3
mov
mov
or
addr16
add
mov
inc
out
cli
mov
movs
xchg
or
pusha
and
inc
xor
movs
inc
jne
mov
out
pop
sub
dec
xor
inc
pop
lods
adc
xor
xchg
imul
pop
jp
loopne
push
loopne
or
dec
add
and
mov
ds
and
cmp
adc
push
rcr
into
rep
shl
sbb
mov
inc
pushf
lock
cmp
clc
nop
jge
adc
dec
retf
test
nop
dec
in
xor
js
and
pop
shl
mov
xor
mov
in
bound
gs
xor
sub
add
xchg
xchg
push
pop
sbb
add
out
push
adc
mov
xor
or
sub
and
push
mov
loop
out
aaa
push
loope
test
mov
std
pop
or
push
in
test
movs
lock
cmps
xchg
lock
enter
in
pop
xchg
dec
and
inc
push
ret
clc
push
frstor
mov
addr16
imul
and
jge
dec
sub
pop
ss
jbe
and
inc
and
mov
push
(bad)
pop
ror
mov
dec
jb
xor
adc
jno
pop
aam
sbb
es
enter
sbb
sub
popf
jp
push
sbb
sbb
xchg
xchg
xor
mov
jne
scas
fist
dec
xchg
sbb
imul
sub
ret
imul
int
push
mov
and
js
xor
icebp
sub
push
fcmovnbe
mov
or
jge
dec
js
sbb
popa
and
pop
ds
aad
add
test
xor
data16
and
adc
jle
pop
bound
lock
adc
fsubp
in
test
aaa
mov
sti
in
enter
add
cmp
retf
aaa
push
dec
and
sub
mov
mov
mov
fnstsw
scas
sub
stos
mov
outs
push
stos
mov
push
cmps
sbb
mov
(bad)
retf
adc
push
cmp
cmp
pop
cs
xor
cmp
adc
div
ja
ret
and
cmps
and
outs
ds
aas
mov
and
pop
cld
push
pop
inc
shl
and
sbb
or
push
push
in
pop
add
push
je
sbb
xor
push
icebp
(bad)
cmp
and
inc
sbb
sbb
add
imul
pop
cmp
mov
xchg
out
push
xchg
or
sbb
xchg
cmps
pop
sbb
sbb
jp
cmp
(bad)
push
dec
pop
pop
ret
xor
add
sub
aas
aam
dec
cmp
adc
data16
mov
shr
pop
sub
leave
cmps
ds
aas
ret
cmp
and
aaa
push
xchg
lock
ja
arpl
inc
xor
fs
or
in
clc
mov
ins
jne
dec
daa
or
jge
repz
mov
sub
in
ja
mov
mov
outs
add
stos
jno
inc
pop
mov
dec
and
dec
sbb
lock
shl
sar
mov
mov
and
fcom
xchg
push
cmp
inc
pop
repnz
xor
stc
push
xchg
inc
in
jl
adc
fadd
bound
lods
pop
or
imul
idiv
retf
push
push
push
sub
push
sbb
shr
sub
push
push
xor
push
dec
add
jno
jmp
test
imul
or
add
dec
pop
mov
dec
pop
add
pushf
fnstenv
add
cmp
cwde
adc
cmp
mov
and
(bad)
fcomp
add
sbb
scas
jbe
and
ror
xor
inc
mov
sbb
pop
outs
inc
add
inc
ds
es
rol
or
jecxz
add
mov
jo
mov
or
mov
sub
dec
and
rcr
lock
xor
adc
(bad)
xchg
cli
mov
adc
pop
and
gs
push
sub
lock
bound
and
repnz
popa
inc
shl
repnz
cmp
cmp
sbb
add
test
popa
or
and
inc
push
add
cmp
aad
dec
or
dec
push
push
icebp
jnp
lock
and
add
fild
xor
adc
and
mov
sub
sbb
jnp
fist
shl
add
mov
jecxz
push
push
ret
sbb
(bad)
in
sub
mov
and
shr
hlt
aas
ret
cmp
je
cmp
mov
or
pop
cmp
call
(bad)
(bad)
adc
mov
fist
push
(bad)
jae
jmp
repnz
shl
pop
pop
pop
push
or
clc
sahf
enter
sub
xor
sub
xor
jmp
jo
pop
xor
ror
js
movs
leave
mov
push
outs
popf
jae
(bad)
adc
xchg
add
daa
sbb
mov
push
lods
add
mov
xor
sub
push
adc
fisub
cmc
adc
mov
jne
(bad)
outs
mov
jmp
mov
jle
je
dec
lods
movs
cmp
and
loop
jbe
mov
sbb
add
mov
adc
xchg
add
cs
les
mov
cmp
ja
pushf
jo
xchg
or
push
push
mov
sbb
push
or
adc
push
xor
mov
jl
add
mov
inc
push
sbb
pop
jl
and
push
outs
push
xchg
mov
mov
sbb
mov
cmc
add
sub
(bad)
mov
cwde
xor
fsubr
jle
imul
aas
add
jmp
dec
rol
loopne
ins
sub
cmp
int3
loopne
mov
xchg
mov
xor
pop
mov
test
dec
or
dec
push
inc
or
push
adc
(bad)
lds
dec
loopne
cld
add
jp
fs
mov
jo
push
lea
pop
dec
repz
xchg
retw
cwde
add
xchg
push
xchg
add
dec
mov
xor
xor
std
pop
mov
pop
push
sub
pop
ins
xchg
je
jo
and
mov
and
sub
and
fild
sub
sub
mov
and
cdq
xor
add
or
lods
xchg
dec
imul
inc
add
or
dec
add
adc
mov
mov
fst
inc
ret
or
xchg
or
adc
inc
xchg
and
and
cmc
xor
mov
test
shl
mov
xor
jno
je
push
pop
adc
cmp
mov
ret
fild
dec
je
add
ror
sbb
pop
in
push
add
pop
mov
dec
imul
add
push
nop
mov
dec
mov
and
lods
jnp
jmp
mov
daa
enter
mov
push
push
xor
pop
dec
sub
sahf
or
lea
push
push
xchg
repnz
or
addr16
mov
jbe
rol
jle
cmp
je
jno
jl
mov
mov
adc
sbb
sbb
lods
add
mov
lods
mov
fild
push
dec
add
adc
add
pop
adc
jle
aaa
cwde
sub
out
ins
add
mov
es
test
mov
popa
add
std
jnp
add
lods
enter
retf
loopne
call
mov
enter
psrlw
mov
jge
pop
dec
dec
push
cwde
lods
xchg
pop
push
dec
dec
lea
sub
sub
in
mov
les
js
fcom
outs
or
inc
es
sub
cmp
pop
xchg
and
repz
xor
sub
js
icebp
mov
cmp
jge
sub
mov
mov
lock
and
push
sbb
cwde
icebp
mov
cdq
aam
add
add
adc
ror
shl
aam
inc
push
or
dec
add
das
daa
push
rol
mov
and
mov
xor
push
inc
pop
sub
dec
es
push
(bad)
pop
inc
out
ins
lea
daa
dec
jo
xor
test
mov
int
sbb
mov
mov
add
adc
mov
or
pusha
dec
adc
jb
sar
loopne
and
mov
mov
xor
shl
nop
inc
cmp
sub
push
pushf
fdiv
imul
cld
dec
rcr
jp
ror
lahf
daa
xchg
sbb
or
iret
pushf
cwde
cwde
add
jecxz
or
test
or
lock
inc
sahf
(bad)
js
sub
iret
shr
nop
sbb
nop
lea
ret
loopne
pop
jne
jnp
adc
xchg
cli
jl
jle
pop
xor
xor
pop
in
shl
(bad)
pop
jne
ss
fwait
add
push
jl
jg
stos
lods
js
sar
mov
jno
dec
add
sahf
mov
sub
int
sub
mov
xchg
xchg
inc
mov
int
sbb
sbb
sbb
inc
xchg
push
and
pop
cdq
mov
fiadd
sbb
sub
shr
push
mov
add
lock
pop
pop
xchg
push
adc
push
xor
or
mov
mov
sub
lea
jmp
imul
sbb
mov
xchg
icebp
mov
mov
or
inc
mov
and
add
add
mov
add
and
add
es
push
in
or
lods
pop
test
jecxz
mov
or
je
ror
mov
cmps
aam
cmc
pop
fld
mov
arpl
xchg
call
test
es
rol
jno
jmp
test
adc
cwde
lahf
push
sbb
dec
cwde
popf
jo
xchg
in
inc
push
push
pop
cmp
xor
test
dec
jl
cmp
fsub
xchg
lods
lock
cwde
mov
cmp
pop
mov
jge
mov
push
mov
std
mov
cmps
mov
ja
dec
sub
pop
jne
fcmovnb
or
stc
mov
outs
sbb
adc
add
loop
mov
mov
or
inc
inc
or
xor
mov
sbb
adc
in
addr16
fmul
gs
sub
sub
sub
xchg
jmp
cwde
test
dec
dec
call
daa
movs
imul
lock
pop
cmp
cs
fsub
or
adc
cmp
in
nop
inc
jp
add
dec
in
loope
and
fnsave
lock
cmp
jo
jnp
out
outs
sbb
shl
call
hlt
dec
(bad)
cwde
cdq
idiv
popa
pop
bound
add
inc
das
sub
mov
dec
test
adc
xor
loopne
mov
mov
cwde
lea
inc
movs
imul
xor
push
out
dec
mov
mov
xor
sbb
cmp
push
or
out
stos
add
dec
call
mov
fsub
dec
std
ss
xor
cmp
movs
into
pushf
aam
or
pop
jle
jmp
sahf
pop
cmp
push
mov
mov
rol
cmps
push
add
enter
aaa
adc
pop
aam
unpckhps
inc
jnp
lods
add
(bad)
mov
and
inc
cmp
add
dec
je
jg
adc
sbb
movs
sbb
pop
loopne
cmp
pop
fld
adc
adc
jb
jno
fcom
adc
jmp
aam
push
add
pop
lods
sbb
pop
and
jnp
mov
or
int
pop
in
lods
movs
pushf
arpl
into
dec
dec
shl
mov
inc
push
rol
or
stos
pop
lds
or
jae
dec
pushf
mov
adc
dec
mov
popf
test
loop
jecxz
shl
pop
shl
dec
popa
dec
jle
dec
pop
xor
xor
sub
cs
pushf
push
leave
and
add
inc
enter
jl
push
xor
(bad)
sbb
sbb
pushf
push
ficom
cmp
mov
pop
add
movs
imul
add
mov
dec
push
out
cmps
adc
lods
inc
out
cmp
cmp
lgs
xchg
lods
or
(bad)
fucomip
les
ficom
test
fisub
adc
lods
mov
jge
cmp
lds
and
es
mov
iret
cmp
rol
sub
ror
mov
repnz
pop
xchg
out
jmp
push
retf
push
dec
or
aas
mov
(bad)
mov
pop
cld
out
cmps
stos
fild
or
inc
pop
cdq
(bad)
add
xchg
cmps
lods
xchg
pop
or
(bad)
loope
push
addr16
(bad)
jo
lods
imul
pop
jg
add
xor
and
xchg
test
stc
xlat
ror
or
push
test
push
data16
es
sbb
mov
rcl
mov
test
mov
jno
add
mov
jnp
xor
sub
inc
iret
add
inc
sub
and
pop
in
je
push
push
cmp
arpl
dec
icebp
inc
sbb
sub
mov
ins
mov
and
cdq
adc
in
jmp
fisub
lods
add
push
add
mov
inc
and
dec
aam
jmp
sbb
mov
push
push
lods
fcomp
mov
pop
add
mov
pop
lea
or
jns
sbb
sub
leave
shl
(bad)
fcom
push
movs
movs
gs
sbb
add
push
mov
cmp
loopne
dec
add
lods
in
sbb
repnz
push
mov
and
shr
clc
adc
mov
mov
dec
mov
into
xor
movs
js
les
jmp
xchg
aas
jmp
add
push
xchg
loopne
outs
mov
adc
stc
test
jb
nop
add
movs
lds
fwait
add
adc
jne
imul
mov
stos
ss
jmp
dec
aas
je
mov
push
push
pop
dec
test
mov
or
stos
imul
ror
dec
dec
jge
add
push
gs
sbb
rcl
or
xor
cld
inc
sbb
add
push
imul
ja
stos
sti
jl
sbb
sub
mov
push
add
push
jmp
cdq
in
pop
lods
aam
mov
call
out
add
shl
dec
add
test
enter
sub
sub
fsubrp
jg
daa
es
in
xor
add
or
adc
or
xlat
jmp
add
dec
inc
in
sbb
push
adc
ss
dec
stc
out
movs
xor
adc
cs
add
in
fcom
cmc
adc
or
and
adc
dec
push
mov
iret
and
nop
or
adc
sub
cmp
shl
jne
adc
jmp
mov
popa
dec
rcr
test
js
inc
lods
xchg
in
test
enter
addr16
xchg
add
or
xor
cmc
push
xor
or
cs
jno
push
adc
idiv
add
bound
sbb
fdiv
inc
aam
sar
fnstsw
sar
cld
fldcw
and
add
dec
add
inc
dec
cmp
adc
dec
sbb
rcr
push
jo
add
push
or
inc
cs
sbb
xlat
or
pop
add
and
xchg
sbb
rol
shl
dec
stos
shl
jne
repnz
or
push
add
test
sbb
scas
sbb
adc
out
mov
inc
daa
sub
xor
push
push
xor
mov
cdq
cmp
xor
inc
push
push
hlt
sbb
push
sbb
and
or
mov
pop
loope
sbb
and
mov
ins
or
nop
mov
pop
cmp
test
mov
jecxz
cmp
call
and
cmp
jno
jo
jo
aam
adc
les
test
or
ret
sbb
(bad)
inc
push
nop
xchg
mov
add
mov
xor
inc
int
xor
push
ret
call
adc
ds
int
sub
sbb
adc
and
ror
fsubr
xchg
sbb
sbb
ins
stc
stc
xor
xchg
sti
mov
pop
or
sbb
mov
adc
adc
(bad)
sub
mov
xchg
pusha
sub
fiadd
out
jmp
or
push
and
sub
aam
jmp
add
cdq
xchg
imul
fwait
dec
push
push
movs
aas
xor
ins
loope
sahf
sbb
icebp
or
add
cmp
xor
out
or
ret
cli
jbe
mov
or
sub
mov
push
and
scas
inc
xchg
sahf
adc
test
and
mov
cmp
xor
mov
dec
cwde
dec
jnp
push
(bad)
aam
out
pop
loope
mov
pop
outs
daa
shl
dec
shl
fs
sahf
sbb
pop
sbb
jg
add
inc
push
test
add
xlat
in
add
dec
int3
jp
rol
fnstenv
sbb
pop
pop
rcl
test
mov
push
cs
retf
gs
xor
and
lock
push
sbb
aam
pop
inc
aam
adc
sbb
stos
fnsave
call
add
inc
pop
iret
dec
mov
inc
ret
sahf
jns
inc
call
jbe
sbb
push
cmp
nop
ss
mov
dec
add
mov
arpl
adc
inc
pop
ret
jp
bound
hlt
cmps
add
mov
sbb
and
sub
scas
mov
sbb
loope
loop
sub
jb
pop
and
fsubr
mov
or
shr
ficom
test
mov
pusha
cmp
cwde
jne
mov
adc
out
sbb
sbb
push
retf
dec
seta
fs
add
cmp
or
jmp
(bad)
adc
popa
push
test
(bad)
addr16
out
xor
dec
pop
xchg
call
psubsb
aas
je
adc
push
push
inc
enter
or
pusha
int3
inc
cwde
xchg
mov
cmp
push
cmp
push
(bad)
les
sti
ror
sub
xor
fidivr
mov
pop
add
aad
ss
cmp
jge
jnp
ror
push
inc
sbb
jmp
push
aaa
daa
push
mov
sbb
push
iret
push
popf
daa
xchg
xor
lea
ins
jge
dec
test
into
mov
xchg
ds
lods
dec
ret
repnz
call
or
dec
inc
jo
dec
rcl
add
sub
ret
xchg
pop
shl
mov
je
add
push
cdq
or
loop
and
lahf
aas
jne
fistp
xor
data16
js
loopne
push
jne
dec
push
jmp
or
movs
icebp
mov
mov
dec
push
push
lods
add
(bad)
gs
lods
loope
and
or
or
in
dec
dec
dec
adc
add
and
xor
mul
push
adc
xchg
xor
push
push
fadd
gs
scas
mov
push
add
inc
xchg
mov
lea
or
cmp
push
(bad)
dec
push
inc
mov
mov
mov
les
leave
movs
xchg
add
retf
adc
add
int
mov
iret
push
dec
inc
dec
and
call
dec
inc
inc
hlt
push
mov
nop
jo
push
pop
pop
push
push
les
test
or
push
pop
fldenv
xor
das
push
dec
add
push
pop
loopne
jo
pop
popf
ror
dec
mov
fadd
sbb
mov
adc
dec
test
mov
ins
jno
fstp
or
or
lea
cmp
stos
xchg
pop
in
sbb
rcl
test
or
inc
xchg
xchg
rcr
scas
inc
sbb
into
pop
push
or
out
pop
lea
mov
jmp
daa
rol
lock
lahf
adc
mov
xchg
adc
add
cmp
add
xchg
cmovno
push
shl
xchg
and
cmp
les
sub
push
dec
push
int
ror
sub
pop
mov
xchg
add
mov
lea
or
stos
inc
nop
mov
cli
and
cld
in
mov
add
add
daa
gs
out
mov
mov
aas
add
es
enter
xchg
pusha
push
pusha
ins
fdivr
or
sub
push
xchg
cmp
cmp
test
xchg
cs
xchg
mov
outs
mov
sar
push
sbb
loopne
dec
cs
clc
cmp
test
shl
sbb
int3
sbb
adc
push
cwde
inc
adc
popf
add
popf
cmp
ret
bound
push
and
and
in
jmp
outs
mov
sbb
rcl
push
pop
cmps
movs
mov
les
xor
or
leave
xor
cld
(bad)
lahf
loope
and
adc
or
jl
lea
adc
xor
sub
push
inc
add
inc
fldcw
cmc
aam
pop
pushf
add
xchg
sub
pop
popa
fs
fidivr
(bad)
les
stos
jmp
cmp
jle
pop
ror
fs
pop
push
inc
and
cmp
xchg
push
add
out
pushf
adc
sbb
test
pop
popa
cmc
aaa
and
bound
outs
test
push
sub
pop
lods
inc
mov
test
and
push
loopne
sub
mov
jp
pusha
push
sbb
dec
sbb
or
cmp
sahf
xor
pop
xchg
mov
or
cmp
cmp
and
pushf
mov
add
rol
cmp
sub
push
adc
cmps
outs
add
push
cmc
inc
pop
pushf
jbe
xor
test
hlt
sub
jge
xor
mov
aam
rcl
jle
and
push
sbb
pop
xlat
push
adc
pop
cmp
hlt
fwait
adc
push
push
mov
sub
sub
adc
cli
retf
out
fisttp
je
add
xor
lea
lahf
test
xor
mov
cmp
cmp
cmp
push
xchg
adc
push
dec
push
lea
or
(bad)
add
sub
jo
sub
adc
test
xor
push
dec
in
std
rol
(bad)
cmp
push
sbb
cli
movs
cs
inc
lea
lods
add
cmp
sbb
sub
popa
js
push
sbb
cs
xchg
cwde
sub
pusha
dec
ret
jecxz
inc
loope
ret
jle
movs
jae
cld
dec
push
idiv
push
and
pusha
fs
sbb
fs
and
cmp
and
push
lods
arpl
outs
push
mov
add
lods
mov
push
xchg
mov
mov
push
out
adc
jmp
mov
jo
cmp
ss
(bad)
push
(bad)
sbb
inc
dec
popa
jbe
hlt
lds
pop
dec
mov
(bad)
(bad)
adc
mov
call
mov
jne
dec
shl
pushf
sub
rcl
mov
mov
inc
push
xor
inc
add
xchg
call
ret
dec
(bad)
xor
sub
xchg
push
and
mov
inc
jbe
push
ds
cmps
retf
pop
cmp
cmp
or
push
mov
es
mov
jns
jg
xor
and
pop
add
js
into
in
or
push
mov
mov
push
add
dec
ins
fisttp
xor
adc
fmulp
push
pusha
std
jmp
rol
in
xchg
and
enter
xchg
movs
test
sub
sub
js
mov
inc
jle
jle
or
sub
rcl
cld
xchg
add
mov
icebp
push
inc
ja
test
aam
jle
jecxz
test
jmp
sbb
jmp
push
dec
js
jecxz
lock
sbb
xchg
inc
and
rcl
adc
dec
arpl
mov
push
pusha
sbb
sub
(bad)
nop
jecxz
(bad)
xor
pop
inc
nop
inc
mov
sbb
dec
sbb
and
pop
frstor
lock
cdq
clc
aam
fsubr
ins
pop
addr16
nop
push
or
outs
fs
retfw
lods
movs
ja
cmp
push
inc
inc
das
sbb
in
or
xchg
cmp
inc
les
xchg
rol
push
neg
adc
adc
add
sbb
cdq
cwde
mov
xchg
or
je
sbb
cmp
dec
mov
mov
rcr
xchg
push
or
loopne
mov
in
mov
mov
stos
push
rcr
sub
sbb
jge
jne
ret
push
xor
les
out
push
xchg
mov
add
pop
rol
inc
ficom
adc
(bad)
mov
push
frstor
push
leave
push
fiadd
or
cmps
mov
stos
push
dec
pop
pop
sub
dec
aas
xchg
outs
or
stos
jmp
rcr
fs
gs
inc
mov
aaa
mov
inc
or
xor
xchg
js
jle
xor
xchg
icebp
or
or
push
aaa
or
(bad)
push
aad
pop
arpl
test
mov
push
ja
call
or
or
ss
(bad)
sub
es
out
sahf
in
shl
adc
das
sub
or
inc
jne
enter
pop
aad
das
add
jge
aad
sub
sbb
enter
je
stos
fdivr
imul
mov
add
imul
outs
push
bound
and
sbb
push
cmp
jle
loopne
mov
push
xchg
out
or
inc
push
pop
jns
xor
jmp
fsub
dec
inc
mov
nop
xchg
mov
fdiv
add
ror
ret
inc
sbb
push
or
mov
adc
pusha
nop
dec
sub
cmp
leave
add
dec
jmp
mov
fstp
pusha
ss
xchg
jmp
cmps
out
pushf
mov
fidiv
cwde
ins
jmp
mov
call
jmp
aam
cmp
mov
adc
retf
stos
add
cmp
ins
(bad)
mov
xor
or
inc
sahf
sub
les
inc
out
dec
add
call
sbb
dec
lds
inc
dec
pop
pop
push
sbb
inc
pop
add
cmp
es
fidivr
ficom
add
in
loope
pop
and
push
cs
inc
ds
(bad)
xchg
aam
mov
dec
pop
mov
jbe
fs
in
xor
xchg
xor
push
cdq
mov
inc
sbb
xchg
jbe
nop
fwait
xchg
sub
jmp
mov
or
jb
adc
in
fisubr
jo
test
mov
or
(bad)
adc
pusha
or
cld
dec
add
jbe
mov
dec
sbb
push
and
push
rcr
ret
fadd
xchg
dec
inc
mov
test
mov
adc
inc
jno
jmp
mov
inc
xchg
ret
xchg
mov
stos
or
sbb
cmp
mov
sbb
sbb
fild
fisttp
inc
pop
in
shl
jbe
jo
fxch
cmp
fstp
fnstenv
fisub
mov
jg
in
jne
inc
add
in
hlt
(bad)
adc
ror
adc
dec
in
cld
cmp
fild
add
push
inc
das
dec
inc
pusha
bound
push
dec
test
cmp
add
push
dec
add
inc
add
rcl
clc
dec
xor
dec
mov
loop
push
adc
cmp
mov
sub
fwait
or
daa
fs
inc
mov
int3
xor
mov
shr
fcmovb
jne
jne
sbb
std
or
cmp
and
(bad)
xor
cmp
and
in
das
sub
inc
pusha
add
add
adc
push
xor
pfrcp
xchg
into
mov
mov
sub
inc
inc
je
mov
fidiv
es
inc
sub
imul
sub
adc
push
sbb
push
jb
outs
xor
add
inc
dec
or
add
add
test
shl
sub
inc
sar
fs
adc
in
add
and
push
jns
mov
out
pop
mov
add
add
mov
jae
adc
fs
addr16
jg
push
je
sbb
or
add
adc
popa
adc
nop
dec
(bad)
and
sbb
mov
test
dec
loop
pusha
ja
es
je
mov
movs
jmp
je
xchg
jle
es
sub
push
fcom
aam
pushf
cdq
bound
test
addr16
lahf
in
inc
xor
test
jge
lods
or
sbb
add
fidiv
psubb
inc
xlat
sub
and
stc
xor
movs
stc
sbb
adc
jne
push
aam
dec
or
aaa
scas
adc
cmp
jb
pushf
mov
and
cmp
cmp
mov
cmp
lea
push
out
aas
test
aad
add
dec
adc
test
push
outs
loopne
pop
sub
ins
inc
out
pop
xor
stc
and
dec
in
mov
and
jmp
xor
mov
jmp
mov
jecxz
xor
sub
jno
neg
shl
jg
jb
xor
(bad)
jp
add
(bad)
adc
mov
movs
xchg
adc
xchg
inc
adc
mov
mov
cmp
push
inc
mov
mov
sbb
or
xor
jo
mov
aam
pop
loop
(bad)
push
push
mov
pop
aas
ja
cmp
inc
mov
scas
sbb
inc
adc
add
rcl
dec
xchg
loop
sbb
(bad)
and
cmp
jne
mov
push
icebp
fiadd
into
nop
add
add
(bad)
sub
pop
add
xchg
dec
in
mov
cmc
cmp
xchg
lods
sbb
arpl
dec
dec
into
mov
and
mov
cld
shl
push
xor
sbb
cmp
jae
test
sbb
repz
adc
xor
or
imul
or
inc
ret
shr
mov
dec
fst
(bad)
dec
clc
push
lock
fs
test
js
push
push
and
ret
inc
cmp
aam
pusha
sbb
mov
bound
adc
retf
movs
add
xor
adc
enter
add
mov
adc
stos
fnsave
add
and
or
mov
add
jnp
mov
pop
enter
sub
in
popa
fadd
pop
dec
out
mov
push
sub
inc
ins
or
and
sub
push
out
xor
sub
adc
sbb
imul
fld
and
rol
inc
push
push
outs
push
jg
add
mov
sub
push
inc
mov
ja
std
pop
pop
cwde
push
mov
les
add
rep
pop
add
add
dec
dec
cs
xadd
cs
mov
(bad)
pop
cs
sub
cmp
mov
add
mov
enter
sbb
xchg
adc
sbb
test
shl
cmp
add
push
add
add
leave
xchg
dec
jae
cmp
clc
jg
and
mov
mov
xor
and
cmp
retf
xor
sub
sti
inc
or
mov
add
(bad)
push
lea
add
sub
data16
add
mov
push
inc
cmp
or
sbb
adc
in
xchg
jo
cmp
call
xchg
imul
or
and
pop
test
dec
xor
inc
push
or
push
and
cmc
mov
adc
repnz
(bad)
or
mov
add
pop
pop
mov
add
(bad)
popa
add
or
and
or
dec
push
test
or
and
and
dec
inc
adc
inc
ror
mov
and
rol
fimul
repnz
in
fwait
adc
mov
lods
scas
scas
xchg
lahf
das
sbb
dec
inc
mov
sub
sar
push
sbb
pop
or
fs
dec
jmp
add
dec
add
xor
add
test
pop
imul
or
push
add
sub
mov
mov
or
mov
mov
ss
jl
xor
je
pop
out
mov
dec
cdq
cmp
fs
add
sbb
adc
mov
cld
pop
outs
push
retf
xchg
repnz
ins
pop
mov
aaa
or
rcr
or
sub
and
adc
int
mov
mov
mov
push
sbb
and
cdq
jno
jp
pop
dec
sub
imul
adc
pop
outs
push
icebp
push
sbb
inc
popa
or
adc
sbb
call
rcr
sbb
gs
(bad)
and
aaa
test
pushf
jae
inc
xor
imul
mov
leave
sub
xlat
inc
and
cld
cmp
dec
ins
sub
cmp
pop
or
shl
push
ja
or
fs
ins
vzeroall
inc
popf
adc
cdq
ret
aam
dec
gs
outs
or
retf
add
add
js
push
jnp
test
jo
fs
push
iret
outs
je
add
movs
xchg
cwde
sahf
ins
sub
shl
add
fld
and
mov
adc
inc
lds
xor
test
xchg
movs
jnp
int3
mov
push
rcr
ja
jo
gs
xor
enter
xchg
cmp
adc
pop
adc
lods
xchg
adc
in
daa
dec
sbb
pop
jmp
inc
xor
push
adc
cmp
and
push
popa
jo
xchg
cmps
test
dec
dec
mov
mov
inc
clc
and
or
pop
or
retf
and
sub
pop
sbb
cmp
jmp
add
test
xchg
test
inc
outs
scas
clc
pop
xor
test
into
adc
pop
jge
add
das
int3
and
push
ins
xor
pop
iret
sub
(bad)
xchg
fcomp
inc
or
sub
adc
setb
mov
or
sbb
adc
jl
jo
push
adc
and
ret
int3
out
sahf
jmp
pop
xor
sbb
inc
mov
add
dec
pop
and
adc
sar
enter
inc
cmpxchg
cmp
mov
lods
icebp
sbb
push
mov
lahf
shr
lahf
and
jno
add
adc
cmp
and
add
xchg
add
cmp
xchg
nop
inc
dec
mov
sub
or
jb
add
xor
push
jge
cmp
xchg
pop
adc
outs
in
adc
inc
cmp
jmp
sbb
(bad)
in
mov
mov
outs
mov
js
inc
dec
movs
cmp
sbb
dec
pusha
dec
fsubr
inc
ja
out
js
dec
inc
jae
and
jo
enter
or
adc
dec
mov
sbb
sub
dec
pop
add
outs
fcmove
xchg
inc
push
cmps
or
outs
out
push
dec
or
and
jne
mov
in
and
xchg
or
pop
sbb
ret
cld
fs
ins
call
dec
popa
mov
mov
push
fcomip
adc
pop
adc
bound
lods
movs
dec
push
shl
or
fsubp
pop
icebp
rol
in
call
pop
or
push
nop
imul
inc
dec
or
or
scas
inc
xchg
dec
push
push
mov
or
add
xchg
sbb
and
jne
adc
and
mov
rcl
adc
add
in
and
(bad)
sbb
push
jb
adc
or
and
jmp
imul
sbb
sbb
aam
call
push
icebp
pop
pop
dec
xchg
inc
retf
inc
lods
push
mov
and
xchg
mov
fsubr
xor
add
es
adc
lods
cmps
lds
mov
ins
jp
(bad)
loopne
push
jmp
jle
sub
or
dec
push
push
push
cmp
push
mov
mov
push
xchg
sbb
dec
and
arpl
ret
nop
mov
sahf
out
ficom
scas
mov
sahf
out
mov
mov
mov
add
or
js
cmp
je
xor
cmp
(bad)
push
or
movs
xor
inc
sub
push
adc
sub
xlat
inc
or
jne
mov
lea
fidivr
inc
mov
daa
sub
lods
add
push
add
lea
mov
test
sub
add
adc
sbb
inc
loopne
xchg
lock
mov
daa
and
sbb
add
dec
push
xchg
mov
repz
mov
into
pop
mov
pop
inc
fxch
sbb
or
in
add
jnp
push
loop
hlt
pop
gs
call
add
xor
xor
mov
pusha
inc
cli
cmp
add
mov
and
(bad)
adc
cmp
scas
dec
int
mov
adc
dec
dec
cdq
adc
retf
addr16
sbb
ss
imul
sub
dec
add
or
and
push
lds
add
pop
frstor
or
iret
lea
jae
adc
adc
xor
dec
pop
xor
mov
xchg
or
add
push
jo
enter
mov
xchg
xor
push
xor
fmul
loope
dec
pop
sbb
test
cmc
mov
add
fisttp
mov
lods
add
add
mov
or
add
push
xchg
sub
add
cmp
add
xchg
add
or
aas
adc
xor
mov
push
mov
or
cs
jbe
or
mov
add
adc
mov
lods
bound
inc
xor
(bad)
daa
sub
addr16
mov
test
fwait
push
xor
(bad)
cmps
push
pop
sar
push
and
sbb
test
pop
dec
stos
adc
add
sub
inc
xchg
xor
mov
sub
jne
ins
inc
xor
push
and
jecxz
sbb
jg
shl
data16
and
je
lock
push
push
sahf
fiadd
das
mov
and
jo
fwait
add
fs
fisub
dec
adc
jo
push
push
mov
loope
es
sar
mov
dec
adc
mov
in
rcr
add
jnp
fcom
add
add
push
in
and
add
jp
jbe
add
nop
retf
aaa
xchg
push
nop
mov
xchg
les
dec
fist
push
jbe
(bad)
push
(bad)
jnp
test
aad
das
push
sub
ds
sbb
ins
sub
scas
mov
add
mov
add
aaa
jle
out
fs
lock
dec
rcl
and
(bad)
iret
arpl
leave
js
sub
or
popf
in
add
lods
cs
push
xchg
rcl
adc
mov
dec
dec
out
pop
mov
call
iret
mov
(bad)
cmp
sub
mov
rcl
sbb
xor
push
sbb
lock
mov
jbe
sbb
mov
cmp
lea
sbb
xchg
jne
xchg
pop
iret
icebp
add
cwde
mov
fwait
cmps
xchg
push
pop
test
cmp
mov
lahf
adc
retf
add
dec
arpl
inc
push
ror
mov
fwait
push
push
or
enter
push
rcr
mov
sub
cmc
push
in
ret
test
sbb
xchg
pushf
mov
and
dec
test
dec
xchg
js
fmul
aaa
cmp
js
mulps
adc
dec
jmp
in
dec
push
xchg
xor
leave
dec
js
fiadd
adc
dec
push
or
mov
adc
mov
add
mov
das
ret
das
loop
push
nop
inc
inc
sbb
test
les
icebp
dec
or
push
add
in
adc
dec
xor
test
sbb
or
loopne
inc
stos
fbstp
mov
mov
movs
and
dec
les
xchg
push
test
shl
or
dec
mov
dec
mov
push
pusha
mov
adc
push
lock
pop
and
retf
mov
nop
pop
or
ja
sbb
dec
add
xchg
cmp
test
add
push
ja
cs
pop
ja
fst
test
ficom
iret
daa
mov
add
mov
dec
jmp
mov
adc
jle
mov
inc
or
popa
add
fimul
aaa
inc
xor
push
ins
movs
mov
or
xchg
imul
xchg
cmc
jmp
jl
rcl
dec
push
test
or
stc
dec
pusha
sbb
pop
push
mov
ins
mov
inc
call
cmc
cmp
cmp
mov
lock
test
or
jnp
inc
xlat
(bad)
adc
inc
or
xchg
xchg
sbb
dec
js
out
outs
add
xchg
adc
dec
rol
neg
adc
inc
fs
retf
loope
dec
retf
adc
sub
aad
mov
dec
dec
pop
dec
mov
movs
inc
test
jnp
gs
adc
aas
iret
mov
jecxz
push
test
(bad)
test
es
xor
pop
dec
and
call
pusha
mov
add
fld
pop
dec
mov
add
inc
sbb
stos
aaa
mov
(bad)
fs
add
daa
enter
and
push
js
scas
inc
mov
inc
test
xchg
dec
adc
sub
push
add
bound
gs
dec
dec
push
inc
cmp
dec
mov
les
mov
xor
mov
adc
dec
lods
sbb
ret
push
js
push
loope
and
js
scas
mov
lods
mov
add
jmp
xchg
js
mov
cmp
loope
push
pop
sbb
mov
adc
inc
paddq
xchg
jb
xlat
or
iret
ss
sub
inc
in
mov
mov
xchg
nop
cmps
add
ror
dec
mov
sahf
stos
jbe
sbb
and
adc
call
bound
ret
(bad)
popf
add
in
loopne
pop
call
aaa
xlat
sbb
into
outs
or
cmp
imul
dec
dec
into
push
add
add
inc
lea
lods
xor
add
jae
add
aad
rol
or
push
mov
or
mov
jo
and
fcomp
(bad)
(bad)
jmp
dec
or
(bad)
sub
retf
aam
mov
inc
movs
stc
daa
add
retf
or
xor
add
xor
stc
ja
(bad)
and
or
add
js
cmp
in
cs
adc
sub
clc
lods
test
sbb
push
add
xchg
pop
mov
push
or
adc
push
sub
cmp
int3
rcr
push
or
nop
dec
les
add
pop
add
inc
mov
add
ins
aad
sahf
push
lock
pop
and
xor
or
pusha
or
cld
or
or
sub
adc
xor
movs
inc
inc
add
movs
shr
and
mov
test
adc
cmp
mov
pop
dec
repz
xor
xor
stos
ret
add
push
pop
sbb
push
in
das
mov
sbb
add
and
dec
inc
mov
rol
frstor
fs
push
ficom
lock
cmps
lock
gs
pop
pslld
mov
dec
mov
fcom
or
pop
or
pop
adc
push
rdtsc
add
dec
(bad)
enter
mov
cmc
out
mov
and
adc
addr16
cmovp
leave
and
cmovl
fistp
movs
ja
and
sbb
mov
popa
call
add
dec
cmp
sub
adc
adc
sbb
pop
arpl
out
inc
pushfw
push
cmp
in
or
or
ret
jle
xor
fxch
adc
sbb
add
js
adc
shl
test
sbb
cmp
jecxz
pop
push
rcl
dec
lods
xchg
inc
sub
cmp
leave
shr
mov
inc
call
dec
and
dec
subps
sub
mov
pusha
gs
sub
imul
movs
dec
adc
dec
cmp
pop
ja
mov
es
add
dec
and
adc
cmps
ss
jge
iret
dec
pop
or
add
iret
mov
adc
das
inc
(bad)
jmp
mov
adc
in
hlt
mov
popa
or
mov
sub
push
cli
or
pop
jo
sbb
pop
jl
xchg
jp
and
push
mov
cmc
fadd
pop
dec
daa
xor
inc
cli
rol
dec
push
xor
js
mov
xor
dec
adc
inc
je
add
dec
push
ss
mov
add
fnstsw
jp
dec
enter
(bad)
adc
nop
or
inc
xor
pop
push
pusha
popa
sbb
push
fdiv
nop
push
mov
push
jo
dec
mov
ret
iret
sbb
mov
and
in
mov
js
mov
add
rol
in
rol
xor
push
sub
dec
test
mov
and
mov
sub
dec
or
xor
and
jne
(bad)
jmp
test
adc
cmp
rol
xchg
or
ins
adc
stos
pop
sub
popa
cld
dec
aas
and
and
aas
xor
push
mov
or
mov
xchg
sub
je
dec
sbb
rol
xchg
jo
add
retf
(bad)
sti
popf
inc
and
xchg
(bad)
sar
fisub
sub
clc
pop
(bad)
push
fmul
sub
jo
dec
sub
mov
mov
push
xchg
cmps
movs
sbb
test
and
and
sub
cmp
int3
xchg
push
movs
cmp
ins
mov
fs
pop
xor
test
cmps
(bad)
mov
mov
add
pop
jne
aad
jg
in
sbb
daa
cmp
clc
test
inc
jae
sub
jle
mov
dec
aad
mov
(bad)
stc
test
aam
add
mov
pop
sub
mov
ret
inc
sub
popa
xchg
pop
repnz
xchg
add
jno
in
ret
pop
xchg
xor
fcom
stos
call
adc
inc
push
and
shr
lods
int
add
mov
jo
jne
daa
loope
mov
sbb
call
sub
fisubr
adc
xchg
mov
pop
pop
push
xchg
rol
jno
(bad)
in
or
dec
adc
(bad)
cmps
inc
mov
push
loopne
push
pusha
cmp
pop
and
dec
push
ret
in
add
add
add
add
sbb
adc
mov
or
retf
add
mov
add
pop
movs
jecxz
ror
repz
not
sub
stos
add
movs
add
rcl
adc
dec
fcmovnbe
cmp
and
jne
lahf
adc
add
add
add
jb
xchg
add
add
push
and
and
sub
adc
inc
cmp
pop
mov
test
adc
dec
fld
icebp
std
into
mov
ja
jns
and
push
push
leave
add
dec
add
test
fld
and
jmp
div
test
xor
fsub
lds
xor
jo
loope
adc
pop
xchg
popa
neg
pop
cmp
dec
dec
cmp
test
cmps
movs
push
mov
dec
or
adc
mov
popf
vmovupd
(bad)
pop
and
dec
add
inc
adc
dec
je
xchg
sub
jmp
push
in
adc
sub
and
adc
outs
and
sub
and
stos
add
push
bound
jbe
jne
or
push
or
add
icebp
ror
push
sbb
das
hlt
mov
(bad)
pop
jg
xchg
ss
cs
xchg
push
sub
mov
mov
cmp
inc
dec
mov
mov
inc
or
push
jb
jne
pop
mov
adc
jl
repz
and
xor
xor
in
sbb
jo
out
add
or
mov
or
retf
in
or
lds
mov
mov
xchg
lods
ins
addr16
or
ret
movs
pop
jbe
lea
movs
jnp
lods
in
test
call
cmovs
mov
push
ret
xchg
pop
pop
or
sbb
repz
fs
dec
mov
iret
sub
mov
mov
inc
pop
or
dec
xor
and
dec
pop
ins
fs
data16
push
fs
cmp
fwait
push
pop
cwde
add
xchg
or
mov
enter
push
push
dec
ins
sub
inc
fsub
cmp
daa
dec
jl
test
sub
imul
xor
adc
outs
adc
or
push
jecxz
xchg
add
push
jne
cmp
or
dec
test
sub
dec
add
nop
sbb
and
jl
push
jo
fcomi
or
jge
push
and
jbe
mov
xchg
or
push
add
or
push
pop
pop
or
jb
pop
adc
xor
mov
sub
test
nop
lock
adc
lods
mov
and
jbe
lahf
or
mov
push
div
and
loopne
sbb
in
pop
mov
mov
sbb
add
cmp
add
outs
or
pop
cdq
test
aam
mov
test
xchg
jo
mov
movs
xlat
push
dec
or
(bad)
mov
movs
pop
inc
loope
dec
or
sub
jnp
adc
adc
push
mov
test
test
push
sub
mov
call
add
mov
jmp
scas
and
ja
add
test
cmovb
or
rcr
ins
fstp
pop
add
xor
adc
push
fwait
sub
sbb
push
rol
inc
inc
ror
enter
dec
or
and
dec
dec
sbb
or
inc
inc
int
ss
xchg
inc
cmp
adc
inc
inc
mov
test
dec
dec
dec
push
jecxz
aam
pop
cmp
xchg
popa
xchg
cmp
mov
dec
jmp
lea
inc
in
add
test
nop
xchg
pop
sbb
ret
aam
leave
mov
add
lock
adc
ret
sbb
cmovo
popf
out
xchg
mov
xchg
shr
mov
test
cmp
outs
push
adc
pop
pop
or
mov
mov
adc
mov
pop
mov
dec
or
add
in
push
sub
push
push
mov
stc
and
mov
movs
dec
push
push
adc
sbb
dec
xchg
repnz
fld
xchg
sub
or
mov
push
dec
outs
or
mov
sub
add
inc
dec
loopne
push
enter
mov
ins
rcr
mov
enter
jmp
add
jo
addr16
enter
jo
add
icebp
ins
pop
pop
frstor
inc
adc
xor
jne
sub
bound
sbb
inc
dec
adc
cmp
ds
dec
push
jbe
push
aas
div
dec
int3
inc
sub
jb
ins
sbb
(bad)
loopne
or
mov
imul
cmc
push
pop
pusha
add
xchg
movs
adc
outs
call
outs
pop
je
dec
imul
lds
out
bound
out
mov
adc
ins
imul
and
repz
or
jae
(bad)
cmps
jmp
movs
xor
push
dec
cmp
ss
push
push
jae
aaa
cdq
xor
dec
xor
inc
jo
and
sub
lds
and
out
jle
xor
jmp
sub
dec
pop
sub
jle
jne
xchg
cmc
mov
sbb
imul
dec
std
jle
push
dec
loop
adc
loop
add
sbb
and
movs
or
push
fs
call
dec
jg
mov
sti
pop
inc
push
cmp
xor
test
jne
push
add
mov
add
pop
test
pop
pop
dec
stos
mov
sbb
outs
xchg
sub
jle
pusha
imul
sbb
loopne
or
add
push
fsubr
sbb
push
pop
sbb
test
cld
xchg
pop
push
mov
and
stos
lock
and
clc
or
sub
mov
daa
test
dec
and
lds
shr
cdq
dec
in
pop
loope
jno
dec
jmp
push
cmp
pop
(bad)
add
dec
dec
add
fidiv
out
jmp
mov
jo
xor
mov
nop
hlt
xor
sub
daa
push
push
sub
or
ja
stos
xchg
push
lock
movs
jl
push
add
pop
and
test
xor
(bad)
push
fst
dec
or
or
ins
je
xchg
ret
mov
xrstor
cmp
adc
test
fwait
xor
or
aaa
pusha
mov
sar
xchg
dec
pop
push
add
call
fsubr
mov
push
xchg
inc
rol
jns
jne
mov
or
add
mul
cmp
lahf
rcl
adc
mov
add
pop
cs
jo
jo
rol
or
jo
rol
shl
mov
sti
pop
ret
adc
fist
lea
xchg
pop
mov
inc
stc
inc
push
add
arpl
add
pop
push
push
rcl
add
xor
int
add
push
dec
rcl
dec
jecxz
xchg
mov
and
stos
mov
dec
pop
or
pop
and
or
adc
pusha
and
inc
enter
dec
mov
rol
sbb
mov
or
push
lock
mov
push
inc
imul
movs
into
dec
pop
fwait
jp
mov
inc
add
jbe
add
imul
ret
shl
sub
dec
sub
lahf
or
outs
push
sahf
inc
jmp
sbb
adc
mov
xor
push
mov
adc
pop
inc
pop
and
imul
jo
movs
add
fiadd
push
push
ins
push
imul
cli
jnp
mov
mov
jo
mov
dec
sub
popa
or
outs
and
test
bound
xchg
mov
int
clc
sub
push
inc
movs
cld
gs
stos
dec
adc
and
fcmovu
xchg
add
call
add
outs
ins
rcl
fcomp
or
push
inc
inc
adc
dec
or
and
jno
repz
pop
jno
jno
jnp
icebp
dec
jecxz
cld
pusha
(bad)
dec
and
and
push
mov
loop
paddd
je
mov
inc
inc
sbb
and
pop
sbb
ds
or
loop
mov
fs
inc
je
add
call
(bad)
retf
sub
or
or
stos
ins
push
inc
ins
sub
xlat
and
jge
cld
sub
push
std
xchg
inc
mov
es
movs
mov
sub
push
add
pop
and
aam
add
enter
mov
jecxz
test
mov
jmp
jo
push
call
xor
pop
or
call
dec
pop
jl
pop
jbe
arpl
sub
das
ror
or
pop
push
pusha
fmul
sub
cmp
retf
repz
add
jo
push
jne
jp
or
js
push
movs
cmovns
popf
mov
into
mov
mov
retf
sbb
add
dec
mov
nop
sbb
mov
es
je
outs
adc
lea
push
xchg
loopne
jl
push
mov
add
and
add
or
lds
dec
jmp
cmp
pop
jg
xchg
dec
lods
or
pop
mov
inc
iret
fmul
inc
add
jnp
pushf
movs
loopne
add
jo
add
add
in
jo
or
aam
test
jmp
mov
mov
add
cmc
outs
sbb
out
sub
dec
push
loop
or
adc
mov
add
mov
jne
cwde
or
ret
xor
pusha
adc
in
imul
inc
enter
cwde
sti
cmp
aaa
stos
mov
cmc
mov
js
push
or
push
fcom
pop
push
mov
xchg
add
add
sbb
and
imul
ds
mov
bound
imul
pusha
and
int3
into
xor
mov
ds
ret
push
add
cs
pop
mov
scas
jp
pop
cli
sub
(bad)
es
in
xchg
call
push
loopne
adc
add
test
or
adc
push
(bad)
fdivr
and
sbb
mov
push
mov
push
iret
mov
cwde
movs
pushf
jl
(bad)
outs
stos
adc
and
xor
add
sbb
sbb
mov
rcl
into
call
shl
add
cs
pop
add
aaa
xchg
xor
pop
xchg
inc
cdq
mov
repnz
stos
or
fcmove
or
test
jl
out
or
cmp
or
xchg
inc
data16
int3
aam
movs
push
cs
adc
pop
int
push
add
jo
rcl
les
popf
call
in
mov
cmp
sub
sub
pop
mov
pop
or
rcl
and
cmp
in
mov
fmul
sbb
mov
clc
or
out
add
ins
ja
jne
and
je
xchg
sub
adc
pop
jb
data16
fstp
or
lock
inc
test
aas
add
pop
inc
pop
lock
dec
cmps
sub
les
jle
mov
or
xchg
cmp
xor
sub
xor
mov
cs
inc
cmp
call
add
test
jne
les
jmp
pop
int3
sti
mov
(bad)
stos
mov
add
xchg
add
test
xchg
cdq
adc
mov
cmps
scas
inc
mov
add
or
add
mov
push
push
movs
xor
mov
jne
inc
or
imul
xchg
out
adc
ficom
pop
adc
xor
lock
fnstcw
test
ja
mov
imul
mov
sub
push
ret
pop
test
mov
cmp
add
sti
add
or
mov
test
or
xchg
push
add
sbb
lahf
jns
fs
dec
add
loopne
(bad)
dec
add
ffree
add
cwde
and
jmp
jae
cmp
(bad)
jo
outs
and
ins
mov
fbstp
mov
or
add
inc
or
mov
dec
adc
push
loopne
sbb
push
(bad)
sti
mov
add
or
push
mov
adc
and
lahf
inc
push
sub
fs
add
mov
sub
(bad)
(bad)
push
push
dec
xlat
leave
les
xor
jbe
sbb
in
add
inc
jb
inc
shl
jo
push
xchg
push
je
sahf
test
jb
adc
or
inc
inc
add
mov
cwde
add
or
sahf
add
stos
retf
and
or
mov
pop
and
mov
sub
push
or
and
in
enter
add
or
mov
sbb
and
in
outs
lea
in
mov
call
push
xor
imul
in
sti
sub
ror
pop
aam
clc
loope
pop
les
pop
sub
or
or
lea
les
mov
and
xor
and
jmp
sti
cmc
aam
test
dec
dec
or
dec
pop
push
push
pusha
add
cmp
enter
xchg
clc
push
jns
or
dec
sub
or
add
cmps
add
cld
retf
and
dec
fs
clc
push
pop
add
add
and
pop
fwait
or
nop
cld
or
pop
iret
in
pop
cmc
enter
xchg
inc
loopne
cdq
push
jl
mov
xor
xchg
retf
in
fs
cwde
pop
sbb
movs
loope
push
and
and
dec
pop
cmp
iret
das
mov
add
ja
or
push
push
sbb
xchg
push
push
das
add
add
mov
xor
inc
cmp
xor
jle
sub
lock
ficom
add
(bad)
jp
push
adc
add
imul
or
jno
xchg
bound
pop
fs
and
stos
push
and
cmp
add
inc
xor
mov
add
lods
sbb
ds
dec
dec
jl
dec
ret
mov
or
add
xor
sub
mov
or
cmp
sbb
leave
push
xchg
cld
ss
mov
xchg
test
frstor
and
add
add
xchg
dec
int
xor
add
sub
mov
mov
test
xchg
wbinvd
adc
mov
xchg
inc
push
cdq
pop
pop
pop
inc
es
pop
fs
push
pop
stos
or
or
sbb
and
and
test
pop
pop
jo
xchg
test
push
dec
inc
loopne
and
cmp
push
repnz
pop
pop
call
sahf
mov
cmp
mov
and
ret
dec
stc
dec
push
enter
push
adc
nop
and
add
mov
test
push
dec
rol
add
test
push
std
or
dec
add
inc
cmp
mov
xchg
push
cmp
(bad)
shl
lock
add
xor
inc
pusha
ror
jmp
imul
dec
mov
(bad)
jmp
push
mov
ins
mov
enter
adc
retf
popf
xchg
inc
push
jle
add
movups
adc
inc
jbe
adc
adc
rcr
jb
loopne
mov
mov
inc
push
nop
sbb
pop
iret
gs
fs
pop
xor
stos
ror
cmp
pop
push
lods
jae
dec
popa
mov
mov
leave
or
push
pop
pop
mov
test
loope
push
stc
leave
jae
sbb
inc
sbb
sbb
retf
add
cmps
push
pop
add
push
lods
add
add
mov
xor
or
push
ret
adc
into
add
xchg
or
add
mov
jmp
out
push
add
sub
or
data16
push
mov
inc
clc
ins
call
jne
or
ror
cmp
out
push
mov
add
add
sbb
mov
push
adc
js
sub
ror
jl
rcr
inc
adc
cmps
add
out
mov
pop
stos
loop
add
mov
push
mov
into
sbb
lds
gs
rol
call
(bad)
ss
add
add
push
cmp
iret
jmp
add
inc
push
inc
inc
imul
pop
push
sub
inc
push
inc
dec
push
push
jle
repnz
mov
mov
pop
push
push
lea
sbb
mov
popa
add
mov
mov
sbb
loopne
dec
aaa
push
dec
push
mov
sbb
ins
ds
mov
mov
in
sbb
push
add
cmp
and
fadd
push
in
jge
push
xor
push
or
sbb
adc
in
jle
cmp
mov
jg
cmps
mov
sbb
in
push
daa
adc
addr16
jns
ficomp
mov
cmp
stos
das
inc
enter
rol
jne
jmp
cmp
pusha
pushf
das
mov
in
sub
imul
xchg
aaa
jne
arpl
pushf
sub
cmp
test
cmp
push
mov
mov
xchg
mov
pop
push
adc
test
dec
inc
push
or
pop
add
dec
sbb
sbb
xchg
or
cmp
push
jecxz
test
int3
jnp
pushf
dec
mov
daa
pop
and
jno
mov
icebp
xor
push
ja
mov
je
cmp
or
add
gs
add
sub
ret
push
stos
dec
sbb
ret
push
pop
push
and
and
or
sbb
add
jbe
sub
cmp
sar
cmps
fcmove
cmp
xchg
pop
sbb
scas
mov
mov
push
jle
xor
aad
sub
add
add
add
js
xchg
or
enter
mov
and
add
inc
add
and
cli
int3
mov
mov
mov
shr
rcl
dec
mov
mov
(bad)
pop
and
test
das
jecxz
inc
mov
inc
pop
dec
jl
push
jl
je
inc
jl
add
push
ins
xor
add
popa
or
test
add
aaa
adc
push
or
push
loope
jo
inc
adc
pop
mov
adc
or
dec
sahf
and
ss
and
mov
fld
rcl
jp
push
sbb
cld
popf
pop
je
mov
mov
jmp
mov
xchg
xor
mov
cmp
dec
(bad)
pop
cmp
lods
jo
jne
add
pop
push
mov
popa
retf
xor
xchg
cmp
xor
xchg
outs
inc
push
push
pop
dec
add
sub
xor
xchg
mov
dec
xor
mov
ficomp
jecxz
adc
inc
cdq
and
sahf
call
rcr
movs
cld
cld
push
push
dec
pushf
mov
push
push
and
or
fidiv
xor
adc
mov
push
aam
fs
(bad)
or
sub
sub
jl
inc
(bad)
es
add
ins
(bad)
jo
dec
repnz
or
mov
jmp
add
ins
sbb
jge
inc
movs
or
add
cmp
mov
dec
push
shufps
or
in
rcl
jl
sub
add
ret
inc
test
enter
mov
enter
jb
shl
in
mov
pop
std
pop
push
pop
sbb
or
sbb
and
arpl
add
or
enter
pop
ins
inc
sub
sub
mov
and
in
dec
push
xchg
or
dec
cs
push
fs
pop
mov
dec
mov
mov
xchg
stos
neg
sahf
dec
inc
and
dec
mov
je
jo
xor
pop
xchg
mov
xor
or
rol
dec
enter
and
pusha
cmp
cmp
cmp
shr
xor
add
xchg
jmp
sub
lds
mov
push
xchg
sub
push
xor
adc
dec
movs
and
add
inc
lea
adc
xchg
sub
pop
push
inc
jo
sub
inc
mov
xlat
out
jge
out
adc
adc
sbb
aam
loop
lock
jl
std
dec
mov
pop
dec
nop
xchg
pop
out
or
or
adc
dec
and
cwde
js
mov
ss
xor
ss
push
push
test
mov
inc
cmps
(bad)
mov
adc
push
and
(bad)
xchg
lock
dec
mov
adc
inc
nop
ret
ror
inc
push
or
sub
and
push
xor
push
push
inc
push
hlt
jmp
inc
push
mov
daa
add
mov
push
and
xchg
and
cmp
jo
dec
loope
shr
dec
aaa
push
clc
or
punpckhbw
dec
mov
cmp
call
mov
adc
inc
and
lea
stos
addr16
pop
adc
inc
inc
sbb
test
movs
pop
xchg
dec
and
rcl
add
dec
xchg
or
inc
dec
daa
and
add
push
loop
ret
in
pop
inc
cmp
dec
cmps
add
inc
mov
or
sbb
mov
xor
adc
push
adc
inc
jbe
or
std
inc
jge
mov
fneni(8087
lea
inc
mov
push
xchg
sar
sahf
ss
push
xchg
jae
inc
inc
jmp
xor
push
push
sub
or
mov
push
and
ret
movs
mov
dec
cmps
jne
stc
pushf
lock
ins
test
and
add
add
add
dec
je
cmps
stc
mov
mov
push
cwde
lock
mov
retf
daa
xchg
cmp
lock
sub
ffree
into
rcl
add
mov
adc
mov
je
shl
stos
ss
or
pushf
push
(bad)
adc
jl
dec
outs
arpl
arpl
jmp
scas
lock
mov
retf
or
leave
pop
sbb
ins
call
mov
push
mov
xor
jbe
fisubr
inc
shr
adc
inc
push
sbb
jecxz
lds
inc
imul
in
rol
add
daa
sub
test
fwait
js
shr
dec
pusha
lock
popf
or
pop
outs
sub
inc
pop
jne
lahf
push
push
ror
cmp
add
pop
add
movs
push
out
or
mov
sub
lock
ret
xchg
aam
push
mov
rol
int
mov
test
xchg
in
retf
sub
fadd
and
into
ror
lods
xchg
pop
add
sub
stc
mov
and
sbb
or
iret
in
pop
lea
icebp
inc
shr
sbb
cwde
xor
sub
xor
jo
cmp
aam
ret
xchg
add
call
sbb
ins
(bad)
mov
or
dec
cmc
ins
sbb
mov
add
and
sbb
dec
lea
in
enter
add
das
dec
dec
aad
retf
xchg
xchg
or
mov
inc
in
or
mov
btr
xor
(bad)
fsubr
(bad)
add
jae
fsubr
call
mov
add
bnd
rcl
inc
add
push
adc
or
mov
add
repnz
push
loopne
jne
nop
(bad)
add
and
xor
pop
jp
push
nop
mov
or
or
or
pop
cmp
add
dec
stos
fisttp
mov
push
xor
sbb
outs
popa
jae
enter
cmps
in
nop
dec
inc
inc
sbb
inc
xchg
sub
add
sub
inc
inc
test
add
add
push
adc
cmp
popa
xor
stos
push
push
movs
(bad)
or
test
imul
pop
xchg
fs
dec
loope
loop
push
add
cli
xchg
adc
push
xor
loop
or
jo
mov
fadd
push
ins
test
push
push
adc
push
or
mov
fwait
stos
pusha
js
cmp
pusha
add
push
mov
aam
adc
add
test
xchg
outs
xchg
ja
fwait
pop
push
mov
push
div
inc
nop
sub
mov
sub
xor
fadd
cs
dec
lods
aaa
mov
jnp
or
cmp
add
cmp
clc
mov
push
push
lea
jmp
pushf
mov
push
test
out
push
add
dec
sbb
pop
mov
ret
mov
push
add
(bad)
or
(bad)
or
call
or
(bad)
jecxz
shl
mov
clc
push
push
sbb
inc
xor
xchg
and
aad
jne
or
test
sar
aam
shl
and
mov
jmp
adc
pop
jmp
adc
popf
inc
imul
cmp
je
add
mov
adc
cmp
push
shl
ficom
add
dec
or
into
push
scas
xchg
cmp
mov
and
xor
jo
dec
popa
add
sub
cmc
sub
pop
pop
stc
push
and
mov
inc
adc
les
mov
cdq
nop
xchg
adc
xchg
adc
mov
(bad)
out
imul
push
fdivrp
jmp
add
add
push
pusha
aaa
push
and
push
inc
cmc
call
cmps
clc
rcl
adc
imul
pusha
or
mov
aaa
add
cld
cmc
dec
push
add
inc
sub
jg
sub
jg
lea
sbb
cmp
lods
push
adc
adc
fdiv
push
es
add
movs
push
pusha
repnz
push
xchg
pop
inc
jmp
inc
inc
jne
fwait
cli
sub
add
ret
mov
xchg
ror
aam
dec
dec
cmp
clc
cmp
cs
mov
adc
(bad)
rol
and
and
inc
rcr
popf
xchg
(bad)
rcr
mov
sub
daa
adc
(bad)
(bad)
les
test
dec
aas
aam
mov
ins
and
dec
inc
dec
aam
cmp
mov
cmp
in
ins
or
cdq
push
int3
fisttp
jmp
fidiv
push
nop
push
dec
and
jns
xchg
mov
mov
xchg
movs
lock
mov
adc
or
sbb
mov
outs
adc
sbb
iret
pop
push
cs
test
add
and
out
adc
inc
add
dec
mov
add
ror
xchg
inc
push
in
or
or
inc
xlat
movs
addr16
sbb
dec
pop
sub
push
add
jmp
jo
adc
aam
(bad)
aas
inc
or
or
lock
rol
popa
jo
or
mov
cdq
rol
test
imul
mov
inc
gs
enter
xor
push
cdq
sbb
and
inc
pop
push
sub
jb
enter
xor
pop
xchg
sbb
sub
and
or
push
xor
popa
xor
mov
xor
jo
and
mov
push
not
movs
inc
shr
and
or
js
aas
cli
jl
js
fdiv
pop
add
or
cmp
xchg
je
adc
mov
pusha
fidiv
and
dec
clc
and
pop
sbb
cmp
pop
stos
sbb
inc
lea
push
push
nop
push
cmp
sbb
inc
add
push
fiadd
test
jl
mul
jmp
inc
inc
lahf
rcr
jne
add
dec
inc
sbb
and
out
sahf
inc
add
pusha
or
outs
xor
dec
mov
inc
das
shr
jle
into
in
(bad)
sahf
sbb
mov
or
and
jmp
mov
jbe
sub
shl
push
cmp
jp
mov
mov
sub
cmp
int
or
push
and
sbb
or
shl
fadd
add
loope
nop
mov
test
push
inc
mov
arpl
pop
pop
arpl
and
sbb
stos
push
pop
or
cmps
or
fiadd
arpl
mov
mov
sub
jmp
call
sub
pusha
xor
add
dec
xchg
or
dec
or
lds
jmp
or
pushf
pop
in
push
retf
ret
mov
xor
push
add
sbb
mov
jno
add
push
(bad)
pusha
inc
popa
sti
adc
sar
imul
sbb
sbb
or
dec
add
ja
sub
xor
ss
sub
push
call
mov
dec
ins
add
inc
dec
jne
scas
add
dec
push
cmp
stos
jmp
and
(bad)
or
cmp
and
cmp
mov
push
clc
cwde
push
bound
push
daa
and
ss
inc
pusha
mov
add
jno
or
jnp
inc
int3
call
cwde
aaa
add
or
mov
add
cli
sbb
push
xchg
xchg
cmps
mov
sbb
inc
pop
dec
mov
and
inc
push
xor
ret
sbb
je
(bad)
inc
mov
arpl
jmp
jnp
add
lods
cmp
dec
dec
push
add
dec
arpl
push
test
dec
mov
push
test
nop
jg
inc
das
mov
push
mov
add
inc
test
pop
dec
outs
add
xor
in
adc
push
add
xchg
iret
mov
adc
(bad)
f2xm1
addr16
inc
adc
shl
or
pop
in
cs
jg
mov
loopne
dec
ret
jne
xor
push
mov
dec
jo
sbb
int3
add
fdiv
lods
cmp
push
dec
pusha
xor
xor
or
call
xor
sbb
loope
fcom
int3
jo
xchg
and
and
lahf
and
sbb
mov
adc
in
sub
rcl
jo
xchg
cmc
shr
push
jmp
ret
adc
retf
test
jmp
movs
add
loope
sbb
inc
mov
and
call
adc
add
or
cmp
dec
test
add
xchg
inc
sub
adc
cmp
push
inc
inc
xchg
loopne
call
sbb
or
pop
adc
add
dec
mov
fld
sub
dec
and
jle
icebp
inc
pusha
inc
push
dec
cmp
jne
and
in
int3
dec
cmp
push
fucomip
call
lods
cmp
inc
sub
add
add
and
sub
add
push
pop
ret
fisttp
(bad)
loopne
inc
or
icebp
sub
jp
jmp
movups
loopne
je
xor
pop
fmul
(bad)
pop
dec
inc
inc
ret
add
rol
dec
or
loope
push
xor
inc
ins
jg
mov
sub
dec
shl
wbinvd
inc
(bad)
add
dec
xor
cld
shl
test
dec
mov
outs
cmp
push
sbb
aaa
test
inc
add
idiv
inc
gs
sbb
inc
and
ret
js
add
ret
dec
pop
ficom
pop
mov
test
mov
jmp
add
push
and
inc
adc
ror
cmps
jmp
jmp
cld
sub
mov
lods
adc
movs
cmc
lea
dec
mov
xchg
push
and
sub
movs
ror
or
shr
test
pop
jnp
sbb
xor
mov
jne
cmp
mov
add
pop
xchg
mov
cmp
xchg
call
mov
inc
mov
pusha
add
loope
adc
or
mov
adc
in
add
push
and
or
in
jno
ins
push
and
and
mov
into
sbb
pop
push
fwait
mov
or
xchg
xor
pop
cdq
pop
add
cmp
cmp
adc
sbb
or
jge
push
mov
pushf
xchg
adc
retf
sub
adc
add
mov
cdq
or
mov
nop
mov
clc
xchg
cmp
daa
loopne
icebp
cmp
loope
and
sub
in
sub
pop
clc
aas
retf
lock
dec
or
or
inc
or
aaa
add
loope
aaa
lea
cmps
inc
add
and
jle
fwait
or
sub
inc
mov
jmp
nop
mov
lea
push
or
inc
pusha
mov
dec
sbb
mov
adc
or
retf
sub
popa
std
pop
add
sbb
nop
xchg
push
pop
pop
xor
clc
cmps
popa
cmp
fs
in
ror
fs
cmp
fistp
add
xchg
sbb
dec
or
inc
dec
fs
sbb
mov
add
or
push
or
aas
out
sub
inc
dec
fst
xor
ss
fist
cmc
xor
les
xchg
add
pushf
and
push
icebp
or
jno
mov
leave
gs
or
add
sub
or
retf
jl
sub
push
dec
pop
call
test
je
push
xchg
fs
push
mov
mov
pop
sbb
sub
push
das
pop
pop
push
pop
ja
and
rol
dec
push
mov
sub
or
inc
jno
cmp
sub
scas
mov
inc
add
mov
inc
ret
xchg
iret
push
adc
push
jle
push
(bad)
sub
lock
push
xchg
add
jno
pop
ret
or
test
loope
push
xor
cwde
adc
and
inc
push
mov
lea
adc
xchg
xchg
iret
ja
pop
dec
or
and
dec
and
sub
and
mov
es
xor
das
push
lock
lods
dec
adc
fs
sbb
push
stc
inc
xor
je
cmp
jb
add
dec
addr16
repnz
mov
leave
pop
test
stc
or
enter
or
or
sbb
push
pushf
pop
add
jmp
xor
xor
lahf
sbb
and
inc
sbb
mov
cmps
sub
cmp
mov
mov
ins
sub
mov
movs
xchg
push
or
adc
stos
rol
in
shr
adc
inc
sbb
pop
push
push
xchg
dec
sub
cwde
call
fidiv
and
or
add
xor
cmps
sub
fcom
jne
or
or
jp
push
add
out
xchg
lods
je
or
adc
sbb
jmp
sbb
push
dec
mov
cmp
add
and
cmovo
xchg
adc
push
adc
mov
pop
pop
mov
hlt
mov
sub
ins
xor
mov
retf
sbb
in
sbb
aam
sar
mov
pushf
mov
leave
pusha
mov
ins
or
sub
mov
push
shr
mov
adc
ss
mov
sbb
mov
mov
jb
test
jno
imul
shr
adc
push
inc
xchg
mov
ror
jmp
lahf
pop
sbb
test
in
and
sbb
movs
(bad)
mov
pop
ret
sub
xor
jb
ss
xor
cdq
lea
cmp
movs
pop
data16
adc
pushf
adc
push
mov
cld
sbb
sub
inc
sbb
(bad)
enter
ja
cmp
xchg
and
and
stc
lea
push
xor
lea
xchg
repnz
call
mov
jecxz
pop
push
nop
lock
and
pusha
or
push
and
push
pop
in
xchg
sbb
push
lods
test
and
fwait
lock
and
xchg
mov
lea
dec
bound
repz
cld
add
dec
cmp
sub
(bad)
jno
aad
pop
and
inc
sub
imul
sub
push
pop
fidivr
dec
push
xor
int
imul
dec
cmp
dec
inc
sbb
inc
fsubr
cmp
and
pop
fdivr
xchg
(bad)
js
dec
push
ins
lods
popf
ins
xchg
je
in
inc
data16
imul
push
dec
loop
in
dec
cli
add
ins
movs
dec
icebp
mov
push
lods
dec
test
aad
stos
mov
adc
mov
jbe
or
push
xor
hlt
push
push
inc
imul
es
adc
mov
cld
lea
cld
sub
inc
xor
or
enter
pop
repnz
push
es
dec
scas
pop
mov
mov
cmp
and
push
jl
scas
call
dec
sbb
pop
mov
xchg
in
mov
and
pusha
adc
arpl
iret
fisub
or
call
adc
cmp
mov
xchg
jo
or
push
xor
push
cmp
fs
mov
imul
leave
xchg
add
pop
add
mov
(bad)
call
fst
add
or
or
mov
add
fisttp
mov
xlat
pop
rol
pop
shl
or
pop
retf
jae
cs
add
lds
repnz
add
pop
cmp
pop
je
jne
add
jno
pop
shl
test
add
mov
cmp
out
push
int3
ja
pop
jp
push
dec
add
pop
std
add
adc
push
or
jnp
(bad)
pusha
add
fwait
inc
push
xchg
push
dec
ror
mov
int3
adc
add
sbb
cmps
mov
mov
cmps
adc
arpl
or
or
hlt
pop
xor
mov
jp
mov
cmp
sub
dec
inc
xchg
daa
inc
jo
fs
push
or
inc
fadd
setle
add
adc
adc
nop
cs
mov
shl
or
pop
or
mov
call
push
test
fisubr
adc
push
pop
sbb
sub
push
or
mov
movs
pusha
daa
ins
add
test
cdq
jmp
add
xor
ins
add
pop
mov
icebp
test
sti
inc
mov
out
stc
dec
jmp
sbb
mov
mov
or
inc
lock
mov
add
jno
push
popa
ja
aad
xor
retf
int
nop
cmps
call
inc
add
lahf
mov
imul
(bad)
inc
pop
jl
inc
loope
sub
stos
addr16
adc
sbb
adc
jl
add
aaa
(bad)
push
inc
scas
push
das
and
push
cmps
or
inc
icebp
sub
push
cmp
in
push
or
inc
pop
inc
cmp
xor
or
jns
adc
sbb
ja
ret
mov
gs
or
and
pop
int
xchg
outs
mov
cmp
test
in
push
jae
add
push
mov
jbe
pop
add
ret
push
pushf
sbb
jbe
sub
out
iret
mov
cmp
sahf
push
mov
or
movs
dec
ins
mov
push
or
sub
xchg
sbb
push
outs
ficom
(bad)
jbe
dec
je
add
push
sub
cmp
or
mov
jmp
js
mov
and
dec
scas
js
sub
call
or
add
nop
xchg
aam
xor
sbb
pushf
push
push
jb
retf
(bad)
xor
fnsave
mov
nop
sbb
mov
add
rcl
mov
jo
ins
or
inc
popa
mov
inc
sbb
dec
mov
retf
movzx
push
clc
or
xor
push
(bad)
je
jae
int
mov
pop
cmp
arpl
add
hlt
add
cmps
push
cwde
nop
and
xchg
inc
scas
sbb
mov
lock
nop
data16
lock
ror
iret
add
mov
inc
or
jo
and
scas
retf
xor
jne
push
mov
test
add
pop
adc
ja
adc
int
inc
jmp
jmp
data16
cs
shl
pop
imul
aas
push
scas
out
xor
push
push
add
shr
nop
or
outs
sbb
sbb
push
xchg
int
mov
arpl
xor
push
cmc
push
loope
test
popa
clc
sub
sbb
iret
dec
jbe
push
inc
adc
jne
mov
dec
push
loope
xor
jo
ret
adc
packsswb
sbb
sbb
and
ret
or
adc
inc
adc
lods
jns
xchg
test
mov
out
or
imul
or
push
fwait
mov
or
icebp
jbe
mov
ja
add
call
daa
lods
aas
rcr
ds
mov
and
mov
mul
cmp
adc
jl
iret
sub
retf
outs
add
add
and
xchg
add
inc
ins
push
test
or
or
out
jmp
movs
in
xor
jg
js
adc
and
(bad)
movs
pop
or
cld
ja
inc
nop
lea
sub
add
dec
jecxz
or
ss
xor
xor
fst
pusha
or
pop
xchg
dec
imul
ret
call
nop
mov
gs
icebp
inc
sub
fisttp
out
cmp
push
inc
ds
nop
xchg
dec
test
dec
mov
aaa
pop
mov
xor
sbb
in
test
jb
ins
fsub
inc
test
jnp
xor
test
inc
popa
inc
in
test
or
movaps
ja
mov
or
and
or
lds
mov
adc
dec
aaa
and
loop
icebp
dec
sub
mov
push
mov
and
fild
popa
mov
adc
add
dec
add
fadd
jne
push
jmp
sbb
jmp
push
retf
pop
xchg
mov
jo
or
in
inc
out
lea
inc
mov
or
add
add
xchg
into
shr
ret
or
xchg
add
daa
or
lods
js
push
nop
ret
sub
jmp
aaa
mov
mov
adc
add
sub
pop
sub
cs
es
inc
retf
aaa
or
popa
push
xchg
add
inc
or
daa
dec
push
dec
js
jns
js
push
push
and
push
push
adc
rcl
add
lahf
mov
lods
sub
sub
jne
call
pop
cs
adc
pop
pusha
movs
add
push
xor
mov
packssdw
ror
jbe
ffreep
fwait
mov
movs
fcom
out
shl
and
add
cmp
push
xor
wrmsr
pop
push
clc
sbb
clc
fimul
jne
cmp
mov
pop
add
adc
clc
add
fstp
xchg
jmp
pop
add
xchg
nop
add
loopne
cmp
pop
sbb
fwait
jbe
or
or
dec
leave
push
mov
inc
ins
mov
mov
pop
nop
in
jo
adc
jp
mov
in
ret
(bad)
push
fucomp
cmps
mov
add
in
add
rcl
sub
leave
dec
mov
das
(bad)
es
push
js
sar
dec
leave
sub
inc
movs
xor
je
pusha
mov
xor
dec
inc
jbe
jmp
mov
inc
stos
mov
xchg
test
adc
xchg
push
mov
aaa
or
mov
xor
or
and
retf
cli
sub
fld
inc
and
cdq
movs
add
or
sbb
mov
shr
cwde
push
pop
ror
push
push
imul
push
push
mov
jnp
test
cwde
shl
fcom
pop
xchg
popa
push
mov
cmps
push
fstp
add
loopne
or
fnstsw
or
retf
(bad)
xor
(bad)
jne
sbb
add
popf
aam
push
in
add
(bad)
cmp
push
fmul
aam
pushaw
adc
test
add
sub
and
dec
and
or
xchg
ins
xor
dec
inc
in
call
mov
gs
push
inc
xor
call
mov
jae
adc
pop
pop
enter
adc
cmps
aad
sbb
inc
outs
pop
ja
js
sub
cmp
retf
in
ror
xchg
push
jmp
jbe
pusha
out
xor
inc
in
jecxz
fidiv
push
push
fnstenv
loope
sub
push
stc
xchg
sbb
fld
imul
and
addr16
xor
lock
jg
inc
adc
sbb
xchg
nop
pop
in
dec
dec
xor
fiadd
lds
in
loope
push
das
adc
mov
icebp
add
(bad)
sub
pop
nop
add
and
aam
add
loopne
jmp
int
adc
inc
jo
movs
jmp
dec
jne
inc
add
or
add
push
and
push
or
inc
mov
adc
ins
or
or
clc
mov
movs
stc
add
fwait
dec
push
retf
shl
adc
adc
fdivr
and
aam
and
sbb
adc
mov
or
pop
sub
fisttp
out
cmp
dec
pop
add
pop
jae
jo
adc
mov
lods
push
mov
xor
shl
leave
inc
sti
adc
sbb
xor
out
or
mov
add
mov
xchg
push
dec
stos
pop
data16
dec
dec
add
mov
jl
sar
pop
ret
mov
xchg
adc
pop
sub
mov
nop
pop
xchg
pop
add
and
inc
xor
bound
(bad)
xchg
pop
jmp
(bad)
sbb
sub
jge
ins
sbb
xor
cmc
pop
pop
adc
adc
das
adc
sbb
movs
jecxz
ins
inc
test
loope
hlt
rcr
mov
ja
and
gs
movs
sub
sub
xchg
dec
call
jge
mov
jmp
lds
sar
add
add
dec
mov
dec
gs
std
inc
imul
bound
test
pop
gs
fwait
adc
or
push
jmp
pop
cmp
add
and
jne
sahf
or
sub
add
or
jle
push
cwde
or
or
add
stos
arpl
je
and
push
cmp
call
aam
and
and
mov
adc
inc
arpl
dec
cwde
(bad)
loope
push
pushf
test
xchg
mov
nop
add
push
enter
or
mov
push
or
jecxz
jo
or
fdivr
retf
(bad)
and
cmps
pusha
int
push
loope
icebp
shl
cmp
inc
adc
xchg
cs
pusha
push
pop
(bad)
and
sbb
add
hlt
cld
or
or
cmps
outs
jmp
cdq
pop
xchg
push
test
ret
pop
clc
and
mov
mov
add
mov
jb
jo
adc
xlat
je
out
jno
cwde
cmp
jmp
xchg
daa
mov
xlat
out
cmps
xor
cs
mov
jecxz
push
and
arpl
in
bound
add
sub
mov
pop
push
and
shl
push
push
sub
jnp
shl
mov
or
cmp
arpl
pushf
popa
retf
xchg
mov
aaa
mov
xchg
push
inc
adc
rcl
(bad)
ins
int
xor
cs
ret
sahf
xchg
imul
or
out
or
and
fcomp
pop
sub
xor
aam
mov
pop
jge
rcr
cli
add
outs
(bad)
pop
call
sub
or
(bad)
ror
mov
add
and
lods
add
stos
adc
ins
sahf
fcomp
push
ds
mov
push
sbb
mov
stos
mov
jae
inc
or
add
sub
xchg
fwait
sub
mov
mov
add
mov
add
enter
xchg
in
popf
lea
cmp
test
pop
loope
in
lds
pusha
loope
jl
fcmovu
push
pusha
and
(bad)
cmp
inc
mov
lahf
daa
dec
sbb
mov
add
(bad)
sbb
add
jl
mov
mov
test
ja
test
pop
or
(bad)
iret
mov
or
shr
add
pop
popa
movs
or
hlt
mov
push
inc
mov
mov
movs
xor
pop
fs
ja
scas
cmp
rcr
(bad)
and
adc
mov
xchg
pop
or
sbb
dec
adc
or
fldenv
or
sbb
xor
add
push
pop
mov
cmp
in
pop
mov
cmp
push
dec
sbb
cs
xchg
in
bound
push
mov
jmp
mov
(bad)
or
pop
or
xor
inc
push
loop
jnp
push
mov
cmc
add
ror
scas
lods
jle
or
pusha
out
iret
push
loopne
push
cmp
push
test
fs
xchg
imul
xchg
cwde
dec
retf
push
jns
fmul
cmp
xchg
pop
nop
sbb
and
inc
ret
outs
or
pop
push
ds
iret
les
mov
lods
mov
cmp
(bad)
add
jbe
(bad)
aas
fcos
push
adc
inc
or
xchg
cmp
and
and
mov
inc
call
dec
push
loopne
cmp
adc
loop
arpl
outs
push
and
sub
xchg
or
pop
inc
inc
push
int
mov
xor
fimul
es
jle
or
jp
ja
aad
xor
mov
es
or
nop
cmp
and
sub
cmp
pop
pop
pop
push
dec
in
inc
cmp
sub
lea
aas
sub
lods
jmp
daa
xchg
xchg
call
sub
dec
add
xchg
cmps
adc
adc
scas
cli
test
js
dec
lds
sbb
push
fdivp
loopne
xchg
push
inc
and
int
icebp
mov
loop
dec
enter
lar
push
xor
adc
jnp
add
push
out
or
push
repnz
push
or
pop
(bad)
fldenv
mov
add
sub
stos
in
sahf
nop
fcmovbe
jnp
and
mov
int
mov
pop
(bad)
or
jno
sahf
das
pusha
add
mov
mov
or
loope
mov
xor
pop
and
test
sbb
mov
sar
and
int3
(bad)
ja
fiadd
inc
aaa
mov
sbb
lea
out
adc
inc
repz
leave
cs
pop
push
loope
add
adc
add
mov
xor
push
xchg
ret
push
push
out
lods
cmp
or
adc
xor
sbb
mov
push
ret
and
daa
add
iretw
shl
add
shr
dec
loopne
iret
inc
jmp
pop
add
inc
jl
mov
pop
or
addr16
xor
jmp
lea
xor
retf
rol
dec
sbb
and
jo
add
fwait
ins
and
push
add
or
mov
xchg
push
xlat
push
pop
popa
mov
aaa
test
push
sbb
cli
dec
cmp
mov
add
inc
or
enter
retf
add
cmp
shr
xor
or
jmp
add
and
cmp
xlat
je
les
adc
or
sub
xor
data16
mov
btr
push
xchg
or
out
pop
repnz
dec
mov
jne
pop
aaa
mov
shl
movs
sbb
mov
in
mov
jge
push
adc
mov
sbb
inc
push
mov
pop
leave
adc
clc
or
sbb
repnz
les
pop
jmp
and
push
cmp
sbb
icebp
scas
or
add
(bad)
adc
mov
adc
mov
xchg
push
stos
add
fsub
xor
mov
js
push
lea
nop
out
fstp
addr16
jae
dec
or
movs
xor
cld
rcl
mov
push
jne
adc
mov
mov
sub
je
ins
push
push
cmp
and
adc
adc
or
outs
popa
fimul
jmp
jecxz
jmp
test
add
mov
add
jle
imul
jo
push
pop
ret
push
xor
xchg
sub
aas
push
add
in
shl
add
mov
std
ror
cli
mov
add
cmp
retf
test
and
leave
les
mov
shl
add
add
inc
stc
and
inc
xor
add
cdq
in
jmp
sub
xchg
add
test
inc
ss
add
rol
into
pop
and
jmp
movs
dec
cli
sbb
adc
xlat
adc
and
xor
sar
shl
adc
sbb
inc
pusha
dec
stc
add
or
dec
shl
sub
xor
dec
shl
or
sub
cmp
inc
jl
push
push
sub
mov
sub
sbb
push
movs
mov
sub
sub
jb
inc
(bad)
stos
cmp
mov
dec
outs
or
add
xor
std
stos
or
out
rep
adc
data16
sub
mov
push
dec
sar
push
sbb
and
dec
push
sbb
adc
ins
jle
imul
cmp
mov
ins
test
adc
ss
xchg
aam
or
les
in
pop
je
lea
fsub
outs
fimul
mov
mov
jmp
bound
add
dec
add
mov
push
add
cmp
dec
js
xor
mov
sbb
cmp
jb
add
mov
mov
jbe
lods
pusha
cmp
je
inc
jl
inc
cmp
stos
push
es
cmps
sbb
jne
es
adc
cmp
or
or
clc
add
(bad)
adc
add
push
or
or
add
movs
loopne
loopne
jae
or
sub
cmps
aas
or
dec
lea
pushf
pop
je
push
mov
mov
rcl
loopne
jecxz
inc
lods
mov
inc
movzx
add
lods
sti
fld
ss
cmp
cmp
loope
adc
jge
fdiv
or
mov
clc
add
test
sub
loope
push
xchg
mov
sub
xor
inc
add
mov
sahf
add
in
pop
lea
ret
pop
aam
inc
popa
loope
ss
ins
shl
dec
js
call
(bad)
ret
mov
in
mov
dec
inc
loopne
xor
dec
cmps
movs
clc
dec
or
clc
test
dec
inc
add
call
in
loop
mov
mov
outs
lahf
outs
or
pop
clc
mov
shr
cmp
jae
mov
ins
inc
lock
push
add
xor
sar
adc
adc
jmp
sub
(bad)
xor
add
jmp
adc
dec
add
sub
(bad)
in
cmp
push
mov
adc
adc
ins
jae
mov
in
push
or
std
call
mov
dec
sbb
rol
jmp
mov
xchg
test
mov
adc
jnp
sbb
arpl
jo
cmp
stos
mov
outs
jae
(bad)
fidivr
sar
xchg
test
mov
xadd
ja
sbb
adc
test
lahf
or
add
push
sub
call
call
sub
inc
shl
dec
xchg
out
int
add
inc
sub
pushf
pop
or
mov
inc
dec
dec
sbb
adc
retf
and
and
mov
stos
add
pop
sbb
jb
and
add
(bad)
mov
jge
mov
or
inc
push
mov
xchg
fwait
icebp
push
pop
inc
shr
dec
xchg
xor
lods
pop
dec
xor
mov
dec
in
or
xchg
jmp
jmp
loop
hlt
repz
retf
sti
shr
cmp
mov
pop
mov
dec
or
xor
aam
push
jmp
and
sub
call
cli
pop
call
sbb
push
mov
cmovb
mov
jno
loopne
inc
int3
test
nop
or
in
sub
popf
sar
cmc
adc
jb
add
(bad)
mov
int
jnp
sbb
int
add
push
jo
cmp
not
(bad)
es
dec
xor
sub
shr
retf
inc
push
mov
loope
inc
sub
add
jb
repnz
cli
sbb
nop
push
aas
fldenv
int3
xor
test
cmp
cld
enter
dec
cld
cmps
stc
sub
pop
inc
pop
push
ror
push
sbb
clc
jmp
fwait
dec
repz
mov
sbb
sbb
sub
xor
adc
sub
mov
cmp
std
out
mov
and
mov
sub
clc
inc
inc
jb
and
in
jle
jl
add
xor
loopne
sbb
leave
inc
xor
mov
or
dec
cs
inc
add
jmp
dec
mov
cmp
push
and
pop
xchg
outs
sbb
mov
adc
shl
sbb
or
and
dec
add
faddp
push
xor
test
in
add
je
jb
or
sbb
mov
jmp
inc
mul
pusha
dec
clc
inc
adc
in
inc
icebp
xor
add
jl
icebp
imul
add
lods
add
mov
pusha
add
out
pusha
pusha
or
mov
test
clc
aad
enter
and
fdivr
js
leave
adc
ins
(bad)
pusha
jo
ins
clc
jmp
test
pusha
fiadd
push
out
(bad)
adc
rol
out
mov
clc
enter
dec
or
cs
jnp
movs
fild
and
mov
mov
sbb
or
jle
push
mov
aam
push
enter
aam
cmc
div
daa
sub
add
add
fild
shr
cmp
jb
sub
or
dec
jne
in
add
mov
int3
sub
cmp
mov
and
jge
add
fdiv
jb
dec
and
mov
jb
xchg
add
or
push
add
sbb
jo
pop
mov
pop
dec
add
arpl
inc
cmp
inc
sbb
dec
inc
shr
jo
inc
jo
dec
nop
call
loopne
outs
or
xchg
push
call
add
xchg
adc
inc
or
ret
push
cmp
inc
lea
sbb
mov
test
cmp
push
js
mov
mov
aam
jb
fs
popa
adc
popa
add
add
or
popa
mov
fdivr
hlt
xor
sub
xor
and
or
dec
shl
sbb
push
shl
dec
fmulp
test
mov
mov
mov
mov
mov
int3
jmp
jo
or
int3
push
sbb
push
sub
icebp
add
or
(bad)
jle
mov
lock
loope
daa
mov
add
ins
das
push
sbb
add
adc
sbb
sbb
or
lods
fmul
addr16
bound
adc
lods
add
sub
ins
outs
mov
pop
nop
add
(bad)
or
gs
push
(bad)
neg
fwait
push
shl
enter
xor
adc
push
je
dec
or
pop
rol
stos
sub
add
push
mov
push
mov
dec
mov
pop
sahf
je
(bad)
mov
jg
dec
mov
xor
test
jb
cmp
xor
movs
sub
push
mov
pop
pusha
ja
rcl
or
push
jns
sub
or
add
jg
jnp
push
sar
sub
shl
mov
add
jae
push
or
or
cs
addr16
dec
push
cmp
jb
push
pop
dec
sbb
ss
pop
outs
loopne
arpl
(bad)
rol
adc
jl
dec
push
fild
ins
or
and
cmp
inc
adc
adc
mov
pop
jecxz
loopne
lock
xchg
fidivr
lock
mov
mov
out
aas
cmp
or
mov
(bad)
mov
xor
push
mov
xchg
jmp
or
movs
pop
xor
loope
pop
inc
push
sub
aaa
add
xor
lea
ret
lahf
sub
pop
cwde
enter
xor
push
jb
cld
std
ins
add
mov
pop
mov
mov
and
mov
dec
sbb
lahf
or
ja
mov
lods
push
stos
mov
ret
retf
inc
and
pop
and
pop
mov
(bad)
push
mov
adc
shl
dec
jg
push
adc
add
ror
in
ret
fistp
mov
adc
inc
in
shl
pop
add
mov
cmp
dec
and
imul
push
jne
push
push
test
xor
cmps
push
mov
pop
rcr
add
sub
and
or
sub
or
xchg
fucomip
mov
int3
stos
or
lods
mov
pop
fs
mov
fnstsw
push
sbb
movs
sub
loope
fsubrp
push
dec
push
(bad)
fld
pop
push
inc
jg
push
jmp
push
mov
mov
or
push
or
inc
or
(bad)
adc
xor
and
pop
push
fadd
lods
in
pop
lock
shl
fld
xor
inc
sbb
imul
ins
pushf
repnz
in
mov
cmp
mov
inc
ins
pop
imul
or
in
jmp
dec
cmps
in
jmp
cdq
sbb
pusha
pop
or
or
adc
mov
inc
arpl
sar
mov
sbb
push
ja
jmp
mov
jle
loopne
cmps
pushf
imul
jnp
dec
pop
cmp
(bad)
rcr
push
out
js
enter
imul
push
outs
fsubr
inc
std
push
xor
add
aaa
mov
fiadd
xor
or
jns
mov
in
mov
sub
mov
shl
dec
push
cmp
mov
stos
cli
adc
shl
dec
push
mov
push
push
cmp
dec
mov
adc
fisttp
xor
cmp
lock
push
lea
cmp
popa
(bad)
sbb
(bad)
dec
add
and
neg
es
cmp
jle
push
inc
add
aas
add
push
xchg
push
sahf
dec
add
mov
push
push
mov
popa
fwait
jl
pushf
adc
cmps
or
lea
add
dec
mov
pusha
push
inc
scas
adc
push
push
or
adc
cmc
je
rol
dec
and
loopne
adc
push
add
inc
inc
pop
push
and
inc
pop
cmp
pop
add
xchg
into
cmp
inc
adc
push
push
jmp
or
in
jmp
push
add
dec
add
jle
cmp
adc
xchg
(bad)
sbb
mov
and
xor
inc
push
mov
add
(bad)
fcomp
pop
push
out
sbb
jne
ret
ss
or
push
fsubr
xor
jp
clc
and
cmp
dec
test
sub
add
and
lods
mov
into
jne
ror
push
lods
add
mov
cmc
push
loope
inc
dec
cmp
loopne
cmp
sbb
xchg
mov
cmp
loopne
fimul
loope
sbb
push
clc
cmp
xchg
jp
adc
loopne
lds
or
sbb
iret
push
adc
xchg
inc
cmp
jae
je
pop
sbb
cmp
dec
aaa
outs
push
xor
add
push
into
sbb
jo
mov
or
push
mov
rol
lock
fldenv
(bad)
mov
test
push
pop
mov
jne
sbb
push
loop
adc
inc
pop
mov
mov
ins
dec
lods
(bad)
mov
mov
inc
mov
push
adc
loop
mov
sub
outs
in
xor
sbb
cmps
loope
bswap
movs
rcl
push
pop
test
cli
xchg
(bad)
push
inc
mov
mov
and
pop
sbb
mov
inc
jle
push
jge
popf
jbe
dec
or
adc
je
shl
add
jb
or
stos
shr
(bad)
xor
xchg
mov
ret
shl
out
or
in
push
mov
jge
movsx
stc
fiadd
fsubr
push
scas
sub
loop
mov
xchg
ins
jp
lea
js
dec
push
shl
or
sbb
cdq
cmp
mov
jo
pop
adc
shl
mov
call
mov
cmp
jbe
adc
inc
and
mov
push
adc
or
and
mov
push
sbb
(bad)
pop
jb
push
pop
pop
jo
sbb
dec
mov
scas
or
and
cmp
adc
push
lock
(bad)
je
jmp
inc
jl
pop
ss
fistp
aas
inc
ins
scas
mov
xchg
sub
inc
add
test
sub
mov
adc
test
lds
mov
or
add
mov
mov
dec
pop
xor
in
mov
mov
cmps
and
in
mov
push
adc
mov
lods
jmp
sbb
popa
adc
imul
jbe
adc
es
mov
enter
sub
sbb
in
jbe
add
ror
mov
mov
pop
dec
inc
adc
jle
mov
pop
shr
dec
(bad)
jbe
dec
test
sub
mov
out
lods
repnz
jg
jmp
or
push
cmp
je
adc
adc
out
das
loopne
adc
mov
ret
nop
loop
mov
mov
imul
cmp
pushf
sub
ror
pop
cmp
cmps
dec
aas
add
mov
mov
add
add
xor
mov
push
cmp
test
or
js
add
push
mov
pushf
sbb
push
inc
jno
test
push
sub
push
xor
xchg
pop
adc
bound
adc
outs
sub
push
not
push
push
push
fsub
aam
int3
or
jno
add
fist
adc
sub
add
or
push
and
mov
mov
xor
fadd
outs
xchg
cmp
cmp
add
push
xor
sbb
sub
xchg
rcr
push
push
sbb
mov
dec
mov
imul
xor
add
push
stos
iret
push
and
mov
fs
sub
mov
jecxz
jmp
(bad)
mov
lods
dec
and
xchg
add
mov
lock
or
loop
int3
push
mov
enter
sub
push
push
and
ss
and
punpckhwd
es
sbb
jmp
dec
jge
push
js
fcom
mov
pop
arpl
pop
push
jg
int3
dec
push
sti
sub
or
jmp
adc
sub
mov
mov
or
jmp
cmp
pop
ja
popf
push
sbb
mov
lods
test
movs
xor
neg
int
sahf
pop
ss
push
lahf
out
sahf
scas
dec
jo
les
add
add
sbb
push
or
movs
mov
add
int3
les
lods
mov
jb
and
add
ret
lea
dec
mov
push
je
inc
mov
sub
inc
pop
mov
inc
loopne
or
jmp
pop
in
cdq
test
and
fld
jmp
push
ret
push
push
jb
aas
adc
jle
(bad)
ror
test
mov
fld
jmp
jmp
dec
add
cs
or
add
pop
or
xchg
(bad)
mov
ins
rol
ja
adc
enter
push
push
or
sbb
cs
sub
dec
push
mov
dec
mov
inc
jo
call
dec
sub
lock
mov
dec
inc
sbb
test
shr
cld
(bad)
pop
in
cmp
mov
jge
mov
rol
pop
loop
je
dec
je
dec
inc
aad
sub
ror
jmp
xchg
adc
js
gs
mov
div
pop
test
adc
or
jae
sbb
pop
js
fisttp
add
cmp
and
dec
add
rol
call
push
or
add
call
lods
push
push
test
sahf
push
bound
sbb
xchg
pop
adc
in
fbld
jns
lea
cmp
ret
push
sbb
retf
cmp
cli
scas
fsubr
and
and
inc
enter
ror
enter
fisttp
lea
lea
ins
scas
pop
adc
mov
out
jnp
push
cmp
push
rcr
add
inc
cmp
push
jge
pop
mov
jmp
dec
inc
dec
sub
cmp
push
cmp
or
sub
les
adc
imul
and
mov
ret
repz
dec
push
fcom
push
and
rol
loopne
daa
mov
shl
test
hlt
mov
ffree
sbb
sbb
pushf
jbe
call
sbb
mov
mov
js
sub
jb
les
xchg
jae
add
pop
push
push
std
jp
je
sub
or
cmp
jmp
out
sub
call
sbb
xor
adc
imul
mov
mov
scas
or
cmp
xor
cld
js
sub
mov
or
add
clc
cld
sahf
add
neg
ss
sub
inc
cmps
daa
jl
inc
inc
push
add
push
xor
xor
fs
pop
movs
mov
out
sub
push
test
sbb
test
jns
push
addr16
lods
add
add
or
add
add
push
adc
pop
or
or
mov
inc
in
push
xor
cmp
je
test
fisttp
ror
or
dec
mov
adc
sbb
xchg
push
and
add
pop
rcl
idiv
sbb
sbb
inc
adc
rcl
int
add
mov
lahf
cmps
xor
inc
js
ret
mov
ret
add
jmp
popf
add
shl
mov
cld
add
add
and
add
adc
cmp
sbb
sub
jae
sub
pop
push
push
call
or
pop
mov
jnp
aaa
loope
jne
sbb
add
jno
mov
xchg
fdiv
js
push
out
pop
fsub
ins
mov
mov
push
add
popf
add
cwde
fisttp
ja
scas
retf
cmc
xchg
dec
retf
rcl
and
and
add
ror
daa
or
xor
mov
add
xlat
pop
mov
jle
adc
mov
mov
xchg
ret
ret
lods
or
mov
nop
mov
adc
mov
or
lock
dec
repz
adc
mov
or
loop
push
add
sub
pop
test
lds
or
add
fcomp
call
jno
add
pop
leave
xchg
ret
adc
mov
into
lock
push
inc
sbb
out
mov
pop
dec
jo
push
xchg
icebp
adc
repnz
nop
lds
sub
ds
push
push
push
int
jge
xor
call
or
adc
xchg
sbb
jg
add
sbb
cld
je
rol
add
cmc
fistp
and
jnp
push
pusha
mov
test
rol
adc
jae
ret
sub
je
cmp
push
sbb
or
sbb
or
lea
mov
jg
or
pop
add
rcr
push
pop
loopne
rol
cmp
xlat
sbb
or
test
mov
xor
mov
clc
push
ficom
mov
mov
ret
xchg
dec
sub
xor
arpl
iret
pop
rcl
sub
pop
sbb
pushf
hlt
and
bts
jg
or
(bad)
mov
xor
lock
pop
cs
pop
fistp
icebp
aam
mov
int3
inc
retf
and
mov
adc
cmp
mov
jae
loopne
mov
add
lock
stos
pop
rcr
push
push
jbe
mov
sub
and
cli
push
stos
sar
pop
pop
mov
adc
cmp
sbb
fcmove
cmp
ins
sbb
mov
les
push
dec
ss
xor
inc
daa
dec
jg
push
mov
jo
xlat
shr
push
ficom
and
or
sahf
sbb
dec
xchg
fldenv
movs
mov
and
add
mov
dec
xchg
fsub
daa
dec
(bad)
mov
jmp
cmp
push
and
or
(bad)
icebp
out
add
lahf
add
aam
and
sbb
and
mov
(bad)
shl
mov
pop
imul
pushw
sub
add
sub
shl
scas
dec
mov
stc
pop
cmp
popf
mov
mov
fs
mov
rcl
lahf
add
test
cmp
cwde
add
and
xchg
and
sub
push
sub
rcl
or
add
test
mov
jo
aam
push
or
into
shl
push
push
mov
and
or
aas
mov
ret
fs
fistp
adc
adc
mov
sub
jl
rol
mov
add
pop
add
pop
mov
pushf
pop
out
xor
sbb
inc
sub
push
xchg
imul
xor
js
in
sbb
je
push
adc
dec
inc
inc
mov
xlat
outs
adc
xchg
push
jmp
or
push
inc
dec
mov
sub
ret
xor
push
push
in
mov
inc
or
dec
push
push
dec
push
or
jo
push
push
mov
dec
push
add
loope
inc
dec
mov
inc
and
xorps
sbb
sub
fistp
cs
pop
das
cmp
add
or
xchg
popf
in
lock
mov
pop
(bad)
adc
sbb
pop
rol
adc
mov
retf
push
push
rcl
jg
clc
mov
mov
fs
mov
xor
cmp
adc
shl
jno
jge
xor
or
rcl
jg
ds
rcl
dec
scas
fild
sti
or
push
gs
push
add
sbb
sbb
xor
data16
pop
pop
or
push
cmp
aam
push
dec
sub
xor
retf
cmp
mov
and
mov
adc
or
cmp
mov
ss
or
push
cmp
mov
mov
inc
gs
adc
test
enter
jmp
sbb
xor
jnp
mov
imul
or
outs
test
push
mov
and
cmp
push
ret
mov
div
pop
mov
pop
adc
or
push
aaa
lahf
push
push
ss
data16
in
adc
fdivr
adc
out
das
and
xor
test
stos
dec
cmp
jnp
adc
cld
push
adc
mov
xchg
xor
add
mov
(bad)
pop
add
jns
xchg
or
rol
rcl
sbb
push
int
sbb
ins
push
jmp
xor
xor
jae
test
inc
inc
jl
inc
sbb
test
mov
cmp
ja
mov
ss
ret
dec
aas
lods
or
add
or
mov
or
mov
pushf
and
add
lds
test
add
push
mov
sub
mov
push
push
leave
or
or
push
call
sub
repz
or
push
hlt
lods
push
and
in
jecxz
mov
jno
and
or
test
adc
rol
push
test
arpl
push
popa
pop
mov
inc
mov
pop
leave
push
sub
shl
push
enter
retfw
jl
clc
leave
movs
jmp
repz
es
inc
cmp
add
ins
lds
or
and
push
loopne
dec
mov
adc
jmp
or
lods
and
adc
sbb
mov
fdivr
adc
or
dec
cmp
cmps
add
push
and
movs
add
pop
xchg
mov
dec
popa
xlat
clc
fwait
and
xchg
inc
jo
and
push
cmp
or
add
retf
sbb
cmp
out
push
push
mov
sub
adc
pop
or
sub
cmp
fbld
ret
lods
xor
and
mov
pushf
jge
add
lods
lahf
push
dec
jo
addr16
sub
add
add
rcr
mov
push
xor
inc
adc
ret
xchg
dec
cmp
xor
pop
adc
test
cmp
neg
pop
clc
sbb
shl
jo
adc
adc
aas
and
js
ror
or
inc
xor
jg
fst
sbb
mov
add
jne
jmp
arpl
sbb
pop
push
test
test
mov
clc
sbb
jle
mov
in
sub
pop
dec
add
lea
lock
or
mov
and
scas
shr
retf
push
mov
movs
inc
dec
add
cmps
aas
pop
cmps
add
or
retf
mov
jo
sbb
in
jmp
push
mov
add
cmp
dec
mov
push
push
movsx
loopne
mov
push
ja
jle
xor
or
mov
movs
stos
test
or
mov
icebp
mov
fs
dec
jg
aaa
std
mov
sar
repz
sub
adc
push
push
cli
fimul
xor
dec
fisttp
add
mov
fild
mov
mov
push
adc
popf
daa
jo
fs
ss
pop
ret
stos
push
mov
or
add
xchg
adc
enter
popf
in
mov
ins
(bad)
jmp
push
mov
in
add
cwde
or
add
imul
sbb
mov
cmp
push
mov
xor
ret
adc
adc
dec
clc
(bad)
sub
cmp
je
test
aam
mov
rcr
adc
lea
aam
ffree
xlat
sbb
dec
cmps
dec
mov
adc
lods
pop
enter
push
and
out
sbb
ins
mov
outs
sub
push
dec
cmp
mov
sbb
daa
js
cmps
push
mov
popf
sbb
leave
loopne
sub
dec
or
or
mov
sti
ss
mov
in
in
add
shl
add
sub
sub
inc
popa
(bad)
ret
imul
sub
ja
ins
mov
pop
fiadd
and
mov
loope
adc
mov
call
cdq
add
ret
in
outs
cmps
mov
cmp
mov
je
adc
and
jge
add
into
ins
cli
in
add
adc
jb
dec
popf
les
pop
cmps
jmp
jp
xor
jne
sub
jp
cmps
and
pop
and
and
jge
push
mov
dec
jg
cmp
jnp
ror
ret
jo
jno
(bad)
movs
jbe
adc
mov
repnz
cmp
jne
pop
jmp
ror
or
mov
pop
inc
enter
js
push
add
pop
cmp
or
cs
fisttp
adc
ins
call
mov
add
sbb
adc
sbb
test
icebp
cmp
les
sbb
lods
jecxz
pop
xor
or
sbb
fstp
mov
addr16
mov
and
inc
jb
xor
xor
adc
rol
jg
push
out
mov
sub
pop
cmp
mov
add
xchg
pop
int3
mov
in
push
pop
(bad)
push
dec
(bad)
into
cmps
pop
inc
xchg
stos
push
jbe
cmp
push
in
lods
pop
add
pop
repnz
push
add
sbb
sbb
sbb
in
inc
sbb
jle
xchg
xchg
inc
pusha
fmul
shl
push
int
dec
fidivr
xlat
push
pop
mov
retf
(bad)
lahf
rol
push
adc
aam
(bad)
and
std
add
or
push
punpckhbw
out
mov
and
or
loopne
ss
jmp
adc
or
aas
(bad)
sub
mov
test
jne
push
retf
push
jle
loopne
push
add
ror
pop
or
shl
cmps
pop
jmp
pop
inc
(bad)
pop
pop
add
mov
outs
test
sub
push
xchg
lods
adc
call
sub
add
and
inc
mov
xchg
sbb
and
xor
mov
sbb
loop
push
sbb
xor
and
push
and
cmp
mov
stos
dec
inc
adc
das
inc
jno
ret
(bad)
sbb
adc
sar
outs
sbb
pop
jle
pop
jb
and
sub
ret
mov
xor
aam
push
push
enter
push
pushf
xlat
push
pushf
repnz
xor
aad
mov
iret
and
mov
(bad)
push
retf
push
fiadd
movs
(bad)
loop
pop
pushf
dec
dec
sub
js
out
rcr
cmp
int3
adc
jae
out
cvtps2pi
adc
and
(bad)
sbb
mov
sub
repnz
popf
push
pop
mul
sub
int
or
pop
push
push
mov
sub
adc
sbb
or
xchg
cmps
or
(bad)
jne
push
push
stos
add
pop
pop
ins
pop
adc
in
push
test
shl
jg
repnz
xor
push
repnz
mov
call
adc
adc
cld
scas
out
sub
loopne
popf
loopne
jae
pop
mov
sub
in
or
mov
adc
shl
add
or
dec
sbb
dec
cmps
dec
mov
or
push
or
in
fwait
sub
repnz
cld
push
fst
cld
rcl
enter
adc
or
cmps
dec
or
js
faddp
pop
jp
sbb
movs
cli
jne
mov
cdq
std
adc
stos
aas
cmp
push
mov
xor
mov
dec
dec
xor
pop
mov
or
arpl
sbb
test
out
outs
(bad)
cmp
mov
jl
xor
jp
add
stos
or
in
mov
or
(bad)
sbb
mov
(bad)
adc
or
mov
jg
pop
pop
mov
adc
and
nop
lea
sub
add
mov
sbb
arpl
xchg
mov
pop
pop
dec
test
mov
sub
fidivr
fsub
sbb
and
in
aas
(bad)
repnz
jno
cmc
push
mov
test
std
add
fsubrp
sbb
bound
sahf
jnp
fsubr
push
imul
or
cmp
jl
and
ins
fs
pop
lods
int3
sahf
cmp
push
push
jo
imul
mov
mov
xchg
rol
sub
mov
sahf
and
inc
or
or
mov
aas
sbb
cmp
jge
push
shl
mov
cmp
push
nop
mov
pop
xor
add
dec
xor
pop
or
add
stc
mov
addr16
aas
test
popa
xchg
lds
bound
inc
pop
test
retf
mov
inc
out
push
mov
push
sbb
lock
mov
movs
sub
inc
call
popf
lahf
(bad)
xor
push
push
inc
dec
pop
jle
adc
cmc
mov
mov
ds
dec
jecxz
lahf
push
push
dec
push
push
sbb
sub
cmp
out
(bad)
cmp
mov
cmp
push
jge
shl
cmp
push
fist
(bad)
hlt
sahf
jmp
push
push
sbb
add
or
jge
sub
and
or
ins
sub
mov
sar
xor
cmps
scas
stos
inc
mov
cmp
or
push
sub
dec
rcr
cld
inc
jne
(bad)
fnsave
fnsave
sar
inc
xchg
inc
push
rcr
or
movs
push
push
js
and
dec
push
push
ins
and
std
lahf
aaa
cmp
jge
pop
ins
shl
jl
mov
bound
push
ins
lods
sbb
or
and
xor
push
push
push
mov
sub
rol
dec
mov
outs
arpl
(bad)
jo
(bad)
nop
es
lea
test
das
add
jl
das
les
inc
fdiv
xor
test
jne
shl
dec
inc
pop
je
add
push
in
les
push
sbb
pop
or
pop
sahf
pop
and
jae
pop
inc
and
mov
loope
jb
jb
pop
(bad)
(bad)
fisub
fsub
sub
sub
popa
pop
pop
movs
inc
push
sub
repz
gs
es
frstor
fxch
(bad)
xor
or
fisttp
lods
inc
sahf
fimul
pop
or
push
mov
loop
(bad)
sub
add
sbb
sub
repz
js
and
dec
in
mov
sub
pop
in
sbb
faddp
frndint
push
loope
lock
dec
sub
fstp
jg
mov
sub
push
je
and
jmp
cmp
push
adc
fld
sbb
pop
add
cmp
jo
cmc
mov
call
int3
enter
cmp
fidivr
(bad)
call
mov
dec
jo
push
adc
jle
mov
call
retf
mov
fbld
xchg
mov
inc
mov
leave
(bad)
lock
or
add
(bad)
sub
mov
mov
enter
add
repz
ret
xchg
and
adc
shr
mov
sub
cmp
in
cmp
add
sti
ret
ret
mov
fimul
imul
pop
fild
or
lods
sbb
bound
lahf
inc
or
or
jae
and
mov
dec
imul
(bad)
fsubr
bound
jo
inc
or
sbb
mov
jno
push
data16
test
imul
pop
or
ja
pop
adc
sub
push
inc
lods
test
in
adc
ins
dec
cs
inc
imul
lahf
pop
add
clc
fcom
sub
pushf
imul
mov
mov
push
je
cs
or
dec
push
and
sar
pop
inc
inc
pop
cmp
jg
call
inc
push
call
xchg
arpl
or
push
jg
jmp
loop
or
add
pushf
outs
mov
(bad)
sbb
pop
shl
dec
lea
inc
cmp
push
shl
adc
add
test
sub
and
les
xchg
inc
inc
mov
mov
(bad)
les
or
aas
add
push
inc
sbb
xor
loopne
int
and
rol
(bad)
jle
dec
add
mov
jno
jne
lods
inc
mov
dec
cmp
push
daa
in
imul
cmp
fbstp
aas
std
cli
ja
xor
push
mov
cmps
inc
imul
into
inc
jo
dec
shl
and
mov
mov
rcr
ds
jl
dec
fisttp
and
loopne
sar
mov
xchg
in
xor
mov
and
or
cld
push
lds
dec
adc
pop
push
mov
mov
mov
lods
push
jb
cli
mov
mov
ret
nop
xchg
aam
pop
adc
xlat
nop
jge
arpl
sub
mov
aad
xlat
or
mov
xor
iret
into
scas
mov
xchg
cmp
scas
sar
aas
les
add
sub
shl
inc
push
lock
pop
(bad)
add
push
ficom
dec
jl
or
or
add
cmps
rcr
icebp
das
test
or
adc
add
mov
shl
xor
sub
mov
pop
sbb
outs
dec
inc
ss
es
in
dec
nop
lods
push
inc
dec
(bad)
outs
shl
adc
outs
mov
call
sub
icebp
retf
and
jns
cmp
push
and
and
inc
or
cmp
cmc
int3
mov
lahf
and
or
dec
loope
adc
dec
fdiv
test
in
add
add
inc
sub
adc
mov
es
fild
fdiv
in
fistp
fdiv
xchg
pop
mov
sub
xchg
add
adc
add
jnp
data16
mov
call
xchg
xor
out
(bad)
and
movs
adc
test
mov
movs
xor
ss
imul
scas
lods
nop
xor
mov
push
cmp
call
adc
dec
mov
cld
mov
add
mov
sbb
pop
(bad)
jmp
mov
mov
dec
push
dec
in
push
ins
sub
xor
(bad)
cs
mov
enter
cmps
and
loopne
jmp
sbb
inc
retf
shr
pop
(bad)
dec
pop
loopne
ror
movs
add
pop
mov
cmp
clc
jae
sub
les
enter
xor
retf
xchg
adc
mov
ret
data16
or
inc
xor
pop
push
jecxz
xlat
adc
jno
sbb
repz
adc
sub
stc
sub
inc
adc
mov
and
pop
imul
or
(bad)
outs
xchg
sbb
out
jne
int
enter
fdivrp
push
inc
xor
xor
fild
push
jnp
icebp
and
dec
mov
shl
aaa
pop
add
cmp
add
dec
pop
push
js
mov
sar
add
jno
es
inc
(bad)
mov
jnp
inc
or
jl
ds
test
add
pop
dec
mov
arpl
add
sbb
in
fld
je
or
xlat
pop
scas
push
cmps
popf
fidiv
adc
loope
jae
gs
imul
push
mov
mov
aam
iret
inc
jne
aad
jl
push
pop
or
push
aad
inc
xchg
lea
or
popa
icebp
mov
jne
cmp
jae
mov
cmp
push
(bad)
cmp
jg
pop
push
cmp
jle
jmp
mov
cmps
retf
mov
jb
iret
imul
xor
inc
dec
lds
sbb
popf
sahf
sub
jle
sbb
mov
arpl
or
sbb
imul
sbb
jmp
dec
cmp
lahf
sub
inc
and
mov
and
adc
and
cdq
pop
add
inc
add
ja
cmp
dec
inc
dec
sub
dec
add
fmul
mov
movs
mov
nop
and
adc
cmp
or
adc
adc
and
es
movs
ret
fsubr
jb
mov
mov
or
arpl
and
test
mov
push
mov
pop
test
ins
xor
dec
or
icebp
dec
or
in
add
and
test
stc
pop
sbb
out
sbb
fmul
add
iret
repz
lahf
rol
inc
int
push
jge
or
add
push
add
fwait
jle
dec
push
or
or
or
mov
push
je
je
sub
cmp
je
movs
adc
fbstp
sete
shl
or
sbb
jmp
or
push
jno
add
leave
ja
xor
xor
xchg
retf
dec
mov
inc
xchg
jne
sbb
std
adc
jae
or
cmp
mov
dec
jne
add
adc
int
inc
inc
push
inc
test
push
sub
pop
scas
jg
push
push
fmul
call
loopne
mov
push
mov
sbb
loopne
repz
cmp
dec
lea
lea
push
inc
and
add
(bad)
pop
rol
fistp
(bad)
lea
add
enter
cmp
jae
jnp
mov
push
push
not
rcl
ror
ret
inc
retf
jmp
jl
pop
dec
shr
mov
mov
push
cld
dec
jb
inc
(bad)
adc
(bad)
adc
inc
push
loope
pop
mov
pop
add
dec
jle
(bad)
jmp
hlt
mov
lods
mov
(bad)
cmp
addr16
sbb
xor
das
leave
xchg
adc
push
lock
mov
lea
cmp
add
pusha
xchg
movs
cli
repz
pushf
xchg
nop
sbb
ret
aas
inc
add
les
mov
mov
adc
or
push
mov
add
xchg
sub
add
xchg
jne
pop
sbb
lock
pop
scas
and
inc
lahf
call
inc
or
mov
shl
adc
ss
aaa
sar
inc
jmp
shl
and
or
xchg
cmp
dec
sub
mov
(bad)
cmp
xchg
pop
inc
push
push
stc
bound
ss
shl
fstp
push
xchg
call
mov
(bad)
fadd
jmp
fdiv
popa
lds
inc
add
or
ret
mov
adc
xor
xchg
je
aam
scas
sbb
jl
shl
cdq
inc
loop
cmova
pop
sbb
jle
sub
cmp
or
jl
mov
out
adc
jl
push
mov
push
int3
fidivr
arpl
hlt
jbe
add
jge
in
inc
and
push
repnz
inc
out
add
adc
cmp
mov
shl
add
jb
popa
fwait
aaa
je
add
dec
pop
test
cmp
aas
jno
je
retf
sub
out
imul
pushf
adc
in
sbb
xor
inc
inc
loop
cmc
jae
push
int
adc
cmp
cmp
mov
and
xchg
xor
ficom
ja
inc
adc
pop
add
inc
(bad)
(bad)
test
sub
sub
xor
loop
add
movs
pop
adc
push
or
movs
pop
mov
push
push
or
fdivr
mov
xor
shl
xchg
adc
push
sbb
push
popf
ss
xor
inc
out
inc
xor
and
add
dec
adc
call
pop
push
sbb
or
outs
test
popa
movs
inc
adc
pop
inc
push
movs
test
out
jne
sbb
sar
fimul
or
xor
push
add
cmps
push
sbb
sub
dec
add
paddb
sub
ret
inc
(bad)
xlat
cmp
inc
test
cmp
loopne
sub
add
mov
out
and
out
jg
mov
test
lea
adc
repnz
fnstenv
pop
mov
mov
adc
pop
outs
jmp
icebp
into
inc
inc
adc
sti
mov
adc
mov
(bad)
inc
or
fcom
jge
pop
mov
mov
dec
out
add
cdq
pop
xchg
jecxz
mov
mov
jecxz
sar
je
mov
ds
cmp
je
jge
scas
mov
psllw
cmp
mov
mov
mov
cld
pop
jmp
mov
call
add
ds
test
fcomp
add
shl
cmc
sbb
inc
push
ror
xor
(bad)
adc
adc
adc
add
push
push
gs
xchg
xchg
xor
dec
imul
je
pop
jnp
or
push
imul
fist
in
sbb
into
shl
jo
(bad)
dec
jp
add
mov
sbb
sub
sbb
cs
adc
push
cmp
inc
lahf
(bad)
lock
enter
push
mov
sub
sub
cli
or
cld
(bad)
cmp
lea
mov
mov
repz
push
push
pop
lea
fisttp
ja
xor
adc
rcl
mov
fwait
push
jp
je
movs
in
or
clc
dec
aaa
inc
or
arpl
mov
inc
push
push
hlt
ins
aam
bound
cld
adc
pop
scas
cs
xchg
aaa
push
or
mov
mov
jmp
mov
sub
mov
xor
push
jmp
cmp
retf
add
and
jl
inc
push
push
adc
push
adc
ja
std
pushf
jmp
add
shl
push
or
mul
xor
inc
dec
pusha
xlat
xchg
cmps
inc
ds
jns
idiv
and
cli
dec
das
mov
cmp
sbb
add
cmp
fcom
push
pushf
xchg
ret
sub
ret
bound
ds
sahf
out
pop
adc
inc
xchg
mov
add
or
add
adc
movs
xchg
push
jne
add
sar
ret
push
cmp
mov
and
inc
adc
push
je
call
mov
sub
aad
push
or
shl
add
shr
or
mov
mov
and
jmp
jmp
jmp
jg
pop
mov
inc
in
mov
je
inc
in
xchg
push
dec
in
pop
mov
xchg
mov
push
pop
mov
xor
push
push
push
adc
sbb
add
add
adc
cmp
add
jg
cli
cmc
adc
ret
pop
stos
dec
xor
lods
jle
sub
mov
push
daa
test
mov
cmp
imul
out
jne
push
push
cmp
shl
enter
push
out
push
rcl
pop
jg
cli
lea
push
push
sub
lea
fiadd
pop
adc
xor
add
push
ss
sar
jp
push
add
add
inc
pop
add
fbstp
inc
push
test
lahf
test
cwde
(bad)
les
(bad)
add
mov
jmp
ret
adc
jl
pop
add
pushf
ret
add
loope
jmp
dec
cmp
fcom
in
mov
out
cmp
push
sbb
jne
push
movs
pop
loopne
add
cmp
lds
jecxz
jo
aas
inc
or
inc
add
add
xor
mov
fsub
or
add
cld
pcmpeqd
and
adc
push
mov
and
mov
push
inc
fcmovnbe
es
add
add
mov
add
adc
and
loope
lods
add
stc
(bad)
pop
je
add
adc
stc
cmp
daa
lea
push
lods
add
pushf
adc
mov
sbb
pushf
or
jl
xchg
mov
push
jnp
or
call
mov
clc
xlat
and
sub
cli
mov
movs
es
idiv
add
es
sbb
popa
add
aad
add
out
sub
mov
stos
dec
jecxz
lock
push
pop
adc
bound
and
mov
sbb
add
jb
mov
shr
jmp
add
mov
ror
call
add
or
lea
pop
pusha
stos
xchg
sub
push
pop
ret
jne
ja
or
xchg
rol
xlat
add
xlat
mov
(bad)
test
push
and
adc
outs
cs
push
push
sbb
(bad)
inc
call
pop
mov
call
(bad)
fnstenv
int3
(bad)
and
pop
or
xchg
stos
call
nop
fisttp
inc
or
xchg
out
sbb
adc
add
arpl
pop
and
inc
jp
pop
push
lock
mov
adc
inc
je
fwait
mov
add
jmp
xor
stos
sar
and
pop
stos
dec
cmp
rcr
xor
cdq
sub
push
or
or
push
sub
fbstp
shr
sbb
push
pop
aam
sub
inc
jecxz
sbb
and
ret
pop
add
pusha
sbb
pop
jg
push
or
adc
int3
pop
sub
sbb
inc
sub
add
cmps
cmp
push
sub
adc
push
adc
aaa
enter
inc
ficomp
add
sub
mov
inc
js
add
fnstcw
push
cdq
pop
cmps
jno
in
or
mov
ins
and
xchg
out
jo
cld
or
ret
push
pop
popa
or
sbb
inc
xadd
cld
xor
xchg
sbb
xor
dec
pop
ins
or
shl
mov
push
jmp
and
push
arpl
mov
jbe
push
adc
or
rcl
inc
add
ds
mov
xchg
push
cmps
lods
pop
push
push
mov
sbb
sbb
lds
mov
push
push
xchg
(bad)
out
jge
push
ins
mov
sti
(bad)
jl
push
inc
and
call
jle
mov
call
in
jno
clc
movs
addr16
push
dec
mov
add
inc
adc
pop
pusha
outs
dec
mov
xor
and
push
cmps
movs
dec
cmp
lods
outs
imul
mov
es
or
xchg
js
pop
int3
mov
dec
sub
rcl
das
stos
test
test
mov
int
jmp
aaa
test
je
sbb
inc
mov
rol
ret
mov
xor
fs
jmp
add
ror
push
jmp
fdivr
dec
aam
sbb
lods
fiadd
int3
fcomp
push
inc
fwait
jge
repz
movs
les
clc
sbb
pop
push
retf
mov
int3
mov
push
push
xchg
mov
xchg
adc
(bad)
cmp
ins
inc
inc
in
sbb
loope
es
sbb
xchg
add
leave
mov
pop
sbb
mov
and
leave
lods
fst
sub
jb
addr16
sub
nop
dec
dec
dec
dec
add
adc
(bad)
jmp
ret
mov
dec
add
movs
aas
call
dec
mov
stos
lock
leave
adc
and
lods
add
in
and
inc
stos
outs
gs
cmp
arpl
sar
addr16
mov
ret
ror
push
shl
add
adc
mov
fdivr
push
inc
pop
mov
add
js
lea
mov
arpl
cwde
inc
xchg
push
mov
mov
mov
add
enter
add
cli
(bad)
rcl
sub
push
test
jb
or
jb
outs
(bad)
sar
adc
inc
iret
push
cmp
lahf
mov
neg
add
paddd
push
cmp
dec
cvttps2pi
retf
dec
adc
xor
sahf
ins
add
sahf
daa
and
jno
dec
pop
ret
lahf
adc
xor
int3
test
cmpps
cmp
sub
mov
iret
inc
mov
push
push
jnp
or
mov
nop
pop
push
push
in
aaa
dec
sbb
inc
cmc
or
xor
push
inc
sbb
cdq
dec
cwde
inc
mov
dec
sbb
cmp
mov
push
and
leave
xor
mov
adc
sbb
movs
or
sub
push
dec
xchg
aam
test
sub
aas
ret
sub
or
sbb
mov
push
adc
dec
aad
and
add
std
jbe
push
and
mov
push
ret
xor
fldcw
imul
outs
retf
shr
xor
jg
cld
fisttp
bound
push
iret
fimul
push
dec
loope
(bad)
push
inc
cwde
mov
xchg
arpl
mov
jne
fdivr
leave
cmps
pop
push
nop
and
jnp
inc
das
xchg
aas
sbb
mov
or
ins
xchg
sbb
pusha
sub
test
add
xchg
sete
jl
lds
push
imul
sbb
cmp
dec
ss
mov
leave
adc
(bad)
stc
jo
cmp
push
fld
out
nop
pop
fdiv
mov
or
or
xchg
icebp
or
or
mov
xor
ins
cmp
(bad)
das
add
cmp
or
(bad)
fidivr
push
sub
xor
popa
adc
push
cmp
repz
pusha
leave
xor
shl
or
jmp
mov
inc
je
ins
push
or
sbb
add
ret
je
dec
pop
sbb
pop
mov
sub
test
dec
lods
add
fsub
mov
cwde
pusha
(bad)
call
cmp
lock
mov
cmp
jne
test
je
mov
mul
out
js
pop
mov
add
es
push
inc
shl
add
jmp
sub
int3
mov
push
inc
cwde
or
cli
add
dec
test
das
push
ins
aam
repz
pop
fwait
mov
fsub
ja
add
xchg
cmp
push
xor
or
push
sbb
es
push
push
aad
dec
push
mov
dec
push
mov
out
ret
sbb
adc
push
test
ret
or
inc
inc
pop
ret
ds
dec
ror
fdiv
rol
nop
push
dec
rol
ret
jecxz
sbb
pop
ret
sub
mov
pop
fs
xor
and
ret
mov
pop
int3
sub
inc
or
push
int3
stos
xchg
inc
fs
inc
pop
je
mov
mov
int
push
icebp
push
aaa
sar
add
adc
and
in
sbb
in
je
or
xchg
jp
xrelease
dec
mov
or
ret
mov
ficom
xchg
add
xchg
push
inc
push
pop
shufps
and
push
aas
out
out
mov
adc
fstp
and
pop
(bad)
(bad)
xchg
add
cmp
aaa
or
lds
fistp
pushf
add
jecxz
or
std
pop
add
dec
push
call
or
call
(bad)
push
or
and
mov
jne
push
or
add
cs
mov
mov
pop
xchg
ss
xor
shl
push
dec
pop
adc
pop
xor
add
pop
push
mov
inc
ss
mov
lods
mov
and
lods
popf
push
push
mov
add
jmp
pop
mov
push
mov
push
rol
(bad)
rcl
xchg
or
mov
xor
xlat
push
mov
pop
pop
(bad)
sahf
jmp
fs
jl
add
pop
leave
call
jne
mov
push
jl
inc
push
and
and
and
xchg
rcl
mov
ret
push
dec
mov
mov
push
pop
test
(bad)
adc
sub
push
and
in
push
mov
or
and
out
adc
mov
adc
arpl
mov
jmp
jo
mov
add
jns
mov
je
pop
rcl
inc
aas
sbb
loopne
and
add
sbb
ss
cmp
inc
xlat
xchg
and
push
ror
or
dec
and
adc
push
adc
mov
adc
jo
push
lods
std
nop
ins
popf
and
jle
add
imul
cdq
ret
mov
cmp
(bad)
inc
pop
icebp
jle
je
cmp
jbe
adc
jne
cli
std
rol
cmp
mov
jl
push
fstp
mov
add
pop
mov
pop
imul
inc
add
or
das
dec
xor
scas
test
sbb
lock
mov
inc
inc
dec
mov
jne
in
aas
pop
sub
rol
sbb
fucomp
mov
sbb
int3
imul
mov
mov
retf
sub
inc
add
ja
call
aas
cmps
in
lock
mov
lock
rep
pop
or
rep
add
fwait
pop
adc
fcomp
add
and
push
add
inc
mov
adc
mov
or
cmp
adc
add
xchg
jbe
out
lahf
add
jecxz
xchg
out
mov
pushf
mov
adc
pop
call
push
ret
mov
in
leave
mov
sub
xchg
fst
mov
in
push
clc
sti
pusha
or
sbb
jle
xor
sub
jnp
add
adc
adc
enter
push
adc
add
pusha
imul
or
js
jne
in
lock
adc
(bad)
mov
cmp
jp
lock
adc
nop
xchg
imul
in
or
push
es
adc
loopne
sbb
dec
clc
sub
and
add
mov
pop
mov
(bad)
jae
adc
push
sar
add
inc
or
or
ret
mov
jno
ins
jge
pop
xlat
arpl
ja
pusha
adc
mov
scas
add
in
cwde
cmp
or
adc
icebp
inc
add
inc
xchg
mov
or
inc
sbb
push
add
add
stos
cdq
mov
push
int3
enter
ret
jg
in
js
or
ror
out
push
sbb
add
pop
adc
in
(bad)
mov
inc
pop
add
cmp
call
movs
xchg
mov
add
ds
cmc
add
push
mov
and
int
out
lock
mov
adc
xchg
cdq
sar
and
push
push
mov
pop
mov
in
jbe
hlt
mov
pop
mov
or
push
jo
js
sbb
push
loopne
xor
xchg
dec
call
cwde
mov
add
shl
add
push
push
pop
sbb
mov
cs
jge
mov
dec
fdiv
mov
outs
sub
popf
add
sbb
push
int
sti
ins
mov
js
sar
fwait
div
test
xor
ja
inc
add
out
inc
fidiv
in
jo
call
lock
mov
mov
aad
(bad)
imul
lock
jmp
pop
xor
sbb
jno
push
push
mov
shl
xchg
(bad)
mov
and
dec
sub
or
in
and
adc
or
adc
and
or
shl
pop
mov
add
mov
ret
in
push
mov
sbb
jbe
push
add
je
add
sub
sub
aam
sub
push
xchg
mov
or
ins
jmp
sub
dec
jmp
or
mov
cmp
mov
adc
or
ins
add
or
imul
xor
jmp
cmp
aad
add
imul
inc
icebp
add
add
pop
xchg
push
mov
mov
idiv
jmp
push
nop
cli
dec
or
or
mov
es
cmp
inc
add
dec
and
and
mov
cmp
sbb
ins
fs
adc
push
xor
mov
inc
lods
or
rol
sar
stc
push
lock
push
popf
rcl
push
imul
or
data16
push
inc
pusha
jmp
mov
ins
dec
aad
fs
or
outs
or
fistp
pushf
jae
mov
mov
push
clc
je
retf
xchg
and
pop
mov
or
addr16
cmps
xchg
(bad)
mov
xlat
sbb
adc
mov
dec
hlt
pop
out
sbb
xor
(bad)
adc
jecxz
inc
inc
clc
call
add
pop
inc
enter
pop
arpl
inc
sti
cmp
jbe
add
mov
sbb
leave
(bad)
fwait
or
push
pop
sbb
add
xor
and
cld
loope
push
adc
fcmovb
sti
loop
jge
ror
pop
ins
jnp
mov
or
loope
add
sub
clc
sub
mov
dec
data16
sub
xor
arpl
in
xor
and
jne
xor
push
xor
or
xchg
retf
mov
out
sub
mov
sub
jbe
stc
test
and
mov
jl
or
mov
jne
add
sbb
imul
sbb
and
add
out
sbb
add
pop
jecxz
or
inc
neg
sub
popa
xchg
sbb
pop
mov
popa
imul
sahf
mov
js
adc
sub
mov
mov
add
push
jp
dec
and
cmp
push
ret
js
out
mov
cmp
push
xor
mov
inc
and
and
ja
std
clc
cmp
lock
push
mov
sbb
add
or
dec
ret
or
outs
mov
inc
xor
sub
jnp
ret
retf
ja
mov
add
test
ins
(bad)
mov
mov
rol
test
or
xor
inc
or
lock
and
xor
cs
mov
jne
cmp
jmp
dec
jne
mov
sub
lods
repz
jo
cmp
out
sub
jmp
push
loope
loope
jne
dec
push
push
mov
inc
loope
add
and
sub
mov
jns
inc
(bad)
fbld
inc
cs
and
and
fbstp
add
push
jmp
sub
sbb
inc
and
inc
inc
pushf
retf
fld
sub
pop
cli
adc
or
and
adc
xchg
call
adc
lock
fsub
std
adc
(bad)
(bad)
cmp
jl
push
aam
lods
sub
add
push
(bad)
xor
cmp
and
ja
jno
xor
icebp
adc
add
loop
dec
add
mov
cld
cdq
ror
in
sub
adc
dec
mov
push
call
xchg
stos
loopne
ret
pushf
(bad)
hlt
push
mov
adc
push
loop
ret
mov
imul
push
cmp
cmp
jnp
(bad)
mov
jnp
scas
ror
aas
lock
pusha
mov
pop
jns
mov
inc
sbb
sub
and
push
or
inc
and
mov
or
jecxz
pop
fst
xor
addr16
sub
sbb
sbb
sub
push
in
xchg
or
xor
aaa
pop
cmp
push
hlt
ds
jb
shr
dec
xchg
fimul
and
push
dec
push
sar
mov
fcom
inc
fwait
and
inc
mov
jl
ins
jp
in
xchg
je
pop
ret
jp
xor
sbb
mov
or
add
xor
add
inc
add
retf
push
or
add
jg
test
and
dec
fidiv
or
jo
mov
adc
add
test
je
mov
jecxz
mov
dec
cmovle
inc
and
jmp
inc
mov
push
ficomp
loopne
into
add
add
push
dec
fld
lods
fimul
iret
pop
push
shr
pop
js
or
inc
adc
mov
pop
ret
jmp
push
ins
mov
arpl
adc
jle
data16
loope
or
mov
sub
fidivr
inc
shr
js
push
dec
mov
cdq
and
in
je
xchg
cmp
cdq
into
hlt
sub
cli
push
xorps
push
retfw
mov
add
ret
mov
test
mov
dec
pcmpgtb
lds
ret
add
push
es
push
xor
sbb
aas
push
dec
xchg
adc
sub
add
loopne
push
mov
jg
push
push
hlt
iret
sbb
test
pop
add
inc
jp
ret
sbb
add
test
push
fld
ror
add
push
push
xchg
or
rcr
inc
jbe
outs
fbld
mov
arpl
sub
test
add
movs
push
cwde
retf
test
clc
outs
sub
mov
pop
mov
mov
sti
js
out
ror
or
xor
jnp
jns
xor
in
pusha
fcomp
inc
adc
cmp
je
mov
test
jne
test
xchg
add
dec
outs
lock
mov
push
add
cmp
clc
push
push
push
sub
lods
sub
pusha
(bad)
retf
jo
jle
cmp
jno
scas
mov
fs
or
adc
or
and
cmp
aas
aaa
mov
lea
fsubrp
lds
mov
and
mov
outs
shr
jnp
push
pop
mov
inc
mov
push
mov
push
les
inc
adc
pop
in
es
cld
out
icebp
cwde
mov
cs
ja
les
pushf
mov
push
hlt
xlat
push
icebp
xchg
lock
xchg
mov
or
add
and
mov
push
(bad)
fist
mov
jle
jno
cmp
push
add
xor
enter
call
cmp
mov
xor
sbb
aas
adc
cmp
jle
and
mov
mov
sub
push
push
inc
mov
lea
cmps
fisttp
imul
shr
test
ss
xchg
xor
ins
mov
in
or
pop
in
adc
sub
and
aaa
pop
mov
in
fs
or
ficom
sbb
js
xchg
movs
push
mov
jle
jle
adc
(bad)
or
push
push
call
jo
pop
imul
mov
loopne
sbb
and
lock
inc
xchg
addr16
push
cli
enter
push
cmp
jl
pop
cmp
xor
inc
dec
inc
call
aaa
in
or
dec
mov
pop
and
mov
out
push
add
dec
inc
jo
ins
push
cmps
and
sbb
jnp
lds
cmps
pop
inc
mov
fwait
or
jbe
mov
sbb
push
cmc
xor
or
mov
xor
push
push
push
jb
shr
lods
and
arpl
push
mov
mov
pusha
add
fadd
loopne
fidivr
nop
jmp
jno
daa
sub
lock
pop
xor
adc
repz
mov
jl
sbb
ja
outs
aaa
mov
retf
ds
adc
push
sub
xchg
dec
stos
cld
or
push
mov
jg
mov
jo
sbb
push
mov
add
stc
jp
sub
jp
retf
dec
xor
adc
add
inc
sub
xchg
leave
int3
ss
xchg
test
fisttp
cmp
loopne
pop
sbb
pushf
dec
inc
jbe
stos
cmp
repz
mov
sub
clc
xor
push
sbb
sti
inc
(bad)
imul
xchg
fwait
xor
xchg
mul
mov
pushf
jmp
ss
xchg
dec
rep
jmp
inc
xor
out
lods
repz
(bad)
or
sub
xlat
lea
push
sbb
adc
pop
ret
sbb
loopne
push
pop
add
nop
test
pop
or
sbb
mov
pop
test
jo
mov
test
imul
dec
sbb
fsubr
inc
push
or
and
mov
das
in
ror
sub
sub
inc
ins
xor
add
test
or
or
shl
mov
mov
xor
adc
retf
inc
rcr
add
add
push
or
shr
cmp
pushf
jmp
sub
popa
mov
and
adc
and
fs
push
popf
dec
jne
into
pop
push
xchg
fiadd
loopne
sub
out
xchg
icebp
daa
aam
in
mov
jns
inc
out
xor
jl
mov
mov
push
inc
add
push
dec
jno
popf
fisttp
mov
test
aam
xor
push
test
xchg
mov
loop
sub
(bad)
test
and
or
loop
and
sbb
rcl
pop
xor
xor
push
call
in
sub
test
or
dec
xchg
sub
sub
jle
pop
dec
dec
xchg
lea
loop
pop
cmp
leave
test
adc
add
mov
stos
(bad)
add
mov
inc
mov
fist
fistp
mov
mov
or
in
xchg
and
lea
ds
mov
push
dec
out
(bad)
adc
cmp
jl
dec
jb
jg
inc
sbb
sub
and
dec
or
push
xlat
fisttp
add
cmp
inc
xor
add
jne
call
mov
adc
lock
into
inc
clc
add
cmp
jl
add
sub
pop
lahf
mov
lea
sub
mov
pop
or
ret
ja
xchg
jmp
fsubr
mov
es
es
or
inc
cli
out
adc
mov
or
repz
push
xchg
pop
mov
dec
aaa
or
pop
sbb
mov
xor
jle
sti
add
jecxz
adc
dec
cmp
jbe
shr
push
sbb
lea
loop
or
sub
iret
cmp
jge
pop
aaa
ins
pop
jle
mov
pop
aad
xchg
ss
jg
aad
jmp
dec
xchg
lea
add
xor
jae
test
fsub
rcl
hlt
fisttp
mov
out
or
bound
mov
test
mov
push
jle
ss
or
int
pop
pop
or
test
bound
jle
std
ret
outs
xor
out
aad
inc
xor
mov
das
add
inc
rcl
adc
mov
and
(bad)
and
and
sub
in
pusha
jl
fcom
push
fst
or
inc
clc
push
xchg
jb
dec
outs
not
xor
out
push
mov
mov
push
repnz
pop
adc
adc
rcr
call
les
inc
pop
push
dec
adc
sbb
cmps
scas
add
xchg
mov
sbb
aas
mov
push
sbb
hlt
fimul
sbb
dec
add
into
cmp
and
imul
aaa
out
pop
jl
xor
mov
adc
inc
sub
inc
mov
push
cld
push
sti
push
sbb
push
mov
shl
or
mov
push
sbb
and
icebp
les
sbb
xor
push
ja
inc
or
push
test
movs
and
and
movs
and
sbb
clc
add
xor
test
mov
xchg
xlat
jmp
xor
add
dec
jle
ins
(bad)
mov
data16
fstp
push
cmps
dec
xchg
add
pushf
add
or
push
cmovae
xchg
test
sbb
inc
sbb
sub
mov
xor
cmp
push
data16
mov
mov
adc
fisubr
retf
ret
sub
retf
and
jnp
and
cmp
nop
dec
push
cmp
sbb
and
jne
and
rol
add
jo
inc
jno
jb
dec
push
push
or
mov
push
jno
adc
xchg
cmp
shl
and
bound
(bad)
out
mov
and
int
jnp
mov
xor
adc
fdivr
sbb
push
out
cli
xor
test
das
rol
test
pop
sub
neg
mov
adc
clc
dec
aas
add
dec
clc
lods
add
clc
push
sub
push
jne
xor
push
push
adc
out
mov
icebp
push
push
push
lods
and
adc
ja
mov
push
in
or
or
add
leave
dec
inc
fcomp
jne
icebp
test
push
lods
inc
or
and
pop
push
ds
or
inc
or
xchg
or
lock
push
ds
xchg
cmp
mov
fsub
and
mov
push
jmpw
cmc
jne
ja
int3
xor
cmp
and
mov
and
loopne
dec
and
adc
movs
dec
shl
add
add
pop
push
push
pusha
and
fdiv
movs
and
(bad)
fcompp
xor
pop
add
and
out
add
dec
add
js
loope
aas
pop
add
or
sub
adc
mov
push
add
fsub
(bad)
xlat
fild
adc
rcl
or
push
and
push
dec
or
mov
in
push
sub
mov
mov
loope
mov
ret
pop
std
or
mov
adc
loopne
scas
mov
push
(bad)
cmp
scas
fld
daa
or
cmp
cmp
push
bound
enter
push
in
dec
xor
rcr
sub
imul
fstp
sbb
xchg
out
das
mov
push
or
pop
hlt
movs
add
ja
push
push
icebp
dec
or
retf
inc
imul
adc
hlt
stos
mov
pop
sub
sub
in
or
dec
xchg
and
inc
movs
or
daa
ret
inc
int3
aas
jb
pop
cmp
push
push
in
call
(bad)
out
sbb
nop
sbb
push
stc
dec
sub
xchg
dec
sub
dec
jp
movs
pop
stos
rcl
loopne
inc
push
neg
sahf
sahf
es
sbb
ret
inc
jo
lods
retf
xor
movs
cmp
sbb
lods
pop
popa
xor
or
xchg
mov
push
outs
sbb
adc
mov
fld
call
xor
adc
pop
xchg
jno
fdivr
pop
sbb
push
(bad)
cld
inc
loopne
jae
add
inc
pop
mov
lock
stc
adc
xchg
ins
xor
jne
add
push
out
pop
outs
xor
hlt
inc
sbb
add
and
sbb
fnstcw
lea
cmp
js
dec
sbb
or
xchg
add
call
aaa
lea
cmp
adc
sbb
push
icebp
adc
in
add
inc
push
pop
movs
aam
inc
adc
pop
cmp
fisub
bound
push
add
ins
cmp
fdiv
push
jle
lods
mov
xor
jmp
xor
ror
add
lods
add
jmp
ror
mov
call
pop
or
adc
add
mov
push
scas
push
rcl
cdq
mov
pop
sbb
sub
iret
sub
aam
clc
repz
add
cmp
push
add
sbb
stos
or
ss
push
xchg
push
push
mov
cli
(bad)
xchg
or
dec
pmulhw
mov
mov
(bad)
or
pusha
add
mov
and
jg
xchg
or
adc
push
xchg
add
mul
(bad)
ret
ins
dec
add
push
lea
sbb
mov
add
jb
mov
test
popf
cmps
pop
and
xor
xor
cmp
adc
ds
cmp
push
je
pushw
mov
fadd
mov
mov
adc
inc
push
jbe
lods
or
push
or
cli
mov
mov
cmps
adc
xchg
pop
retf
cmp
ud2
std
jo
cmps
jp
push
mov
fimul
les
xor
cli
xchg
out
adc
jl
das
push
jp
xlat
mov
mov
dec
in
les
test
or
pusha
inc
inc
scas
push
add
test
inc
cmp
jae
inc
sbb
or
or
xchg
cmps
imul
adc
pushf
xor
inc
sbb
frstor
adc
lock
sub
cmp
jmp
sub
xchg
push
or
push
clc
mov
psraw
inc
es
std
xor
push
fadd
dec
push
jl
jbe
inc
xor
push
sub
jo
ret
or
aaa
sbb
adc
mov
cmp
push
dec
int3
fisttp
xor
xchg
sub
jmp
xchg
add
cmps
pusha
mov
jge
jno
or
jmp
sub
js
jno
sbb
iret
sub
xchg
xchg
loopne
stc
add
loop
mov
push
inc
(bad)
outs
inc
stc
dec
mov
cmp
jo
push
ret
test
ins
movs
out
repnz
pop
sbb
jne
aad
jge
sbb
adc
inc
aaa
ret
ret
imul
pop
and
and
inc
sti
into
jmp
push
lea
inc
mov
jp
fiadd
add
rcr
xor
scas
nop
fstp
pop
test
add
inc
int
adc
inc
leave
and
sub
jno
lods
or
jmp
mov
or
icebp
fidiv
inc
xor
xchg
dec
xor
movs
sub
xor
or
fdivr
rcr
pop
sub
mov
mov
and
fchs
rcr
and
jne
pop
dec
mov
addr16
pop
ret
sbb
sbb
stos
mov
xchg
inc
daa
inc
ins
add
loopne
mov
pop
mov
pop
push
add
or
test
dec
or
inc
scas
loop
and
adc
lea
imul
sbb
repz
shl
jl
jl
or
mov
iret
cmp
jne
aaa
inc
mov
cmps
or
jg
aas
fsubr
mov
sar
stos
or
and
fisttp
mov
nop
mov
scas
sub
rcl
out
sbb
inc
ret
jecxz
ret
pop
adc
shl
dec
jl
add
(bad)
sbb
shl
shl
loop
imul
xchg
mov
sub
push
je
ffreep
adc
js
(bad)
push
ret
push
dec
aad
or
sti
mov
sbb
loop
inc
ja
xchg
fsubr
icebp
retf
mov
clc
adc
inc
and
adc
sub
mov
push
out
adc
push
rcr
dec
retf
popa
cmp
mov
push
ret
popf
sbb
jl
mov
add
test
jbe
rcl
or
ins
frstor
fucom
fcomp
stos
adc
or
js
inc
add
xchg
or
mov
jo
and
pusha
push
jp
mov
xchg
sub
scas
or
inc
add
cmps
or
sbb
sbb
and
sub
lea
sbb
jb
test
lock
sahf
ror
mov
mov
ror
inc
adc
sub
add
adc
aas
mov
cmp
xor
or
xor
js
mov
data16
jl
mov
std
test
popf
aaa
jmp
mov
inc
sbb
add
or
cwde
dec
cmp
mov
ror
sub
inc
inc
or
mov
add
loop
xor
retf
iret
push
dec
nop
adc
fstp
or
lock
cld
and
arpl
add
push
and
test
es
enter
fs
jle
loope
(bad)
popf
lds
push
ret
xor
into
push
push
lods
mov
adc
jl
sub
pop
sbb
test
or
sbb
xor
pop
clc
in
xchg
inc
mov
push
add
xor
test
add
push
cmp
psrlq
rcl
stos
jle
loopne
pop
mov
std
hlt
add
aas
xchg
cmp
loopne
(bad)
jnp
and
push
enter
(bad)
push
mov
mov
xor
not
lods
rcr
mov
lahf
mov
mov
dec
in
xor
mov
lock
cmp
push
loope
mov
dec
fcom
call
sti
adc
fiadd
push
stc
or
or
out
and
rcl
jge
mov
jo
mov
sahf
adc
dec
in
repnz
push
loope
fsub
cmp
adc
imul
into
inc
lock
stos
mov
and
sbb
pusha
cmc
leave
jne
aad
and
lds
and
ja
add
jae
mov
mov
mov
outs
push
ret
xchg
in
xchg
jns
js
jnp
paddb
mov
xlat
mov
jb
out
mov
push
mov
adc
dec
hlt
adc
inc
int3
push
rcr
pop
loop
lock
mov
add
push
or
das
add
femms
dec
push
push
or
add
movs
mov
sti
fcmovnb
push
or
(bad)
adc
dec
add
iret
xchg
mov
iret
sar
cld
and
xor
jge
push
idiv
ss
jg
fnstsw
stc
dec
pop
nop
(bad)
rep
pop
int
cmps
fld
pusha
xor
pop
and
cmp
jg
adc
(bad)
mov
or
dec
cmp
sub
aam
jge
hlt
inc
cmp
inc
jl
mov
test
mov
and
push
and
aad
pop
xlat
xchg
sub
dec
std
popa
jmp
int3
pop
mov
out
dec
xor
push
and
push
into
or
xchg
mov
sub
std
add
add
inc
loope
add
cmp
jbe
mov
or
dec
ss
dec
retf
stos
ins
mov
sbb
icebp
and
adc
inc
and
or
jb
inc
enter
aas
xor
adc
push
mov
rcr
cmps
pop
push
aam
push
xor
sbb
enter
jp
rcr
mov
xlat
and
push
jl
cmps
fwait
aaa
fsubr
fucomi
lods
inc
lea
mov
xchg
mov
sub
fstp
add
adc
dec
push
xor
xchg
pushf
xor
and
dec
jae
mov
xchg
clc
rcr
mov
cmp
jmp
cmc
push
adc
js
retf
jnp
dec
push
mov
push
arpl
xor
(bad)
fcom
fadd
push
push
shl
sbb
shl
sbb
push
int3
out
gs
mov
inc
out
jb
adc
jmp
or
sar
arpl
sub
int3
and
test
pop
add
rol
add
fadd
daa
sbb
fldenv
stc
adc
sub
lea
jl
daa
and
repz
jg
mov
sbb
add
cmp
xlat
inc
add
sbb
or
push
mov
loope
fs
and
sub
and
ss
cmp
shl
cmp
or
pusha
jg
cmp
lock
pop
or
shl
mov
pop
inc
aas
inc
xor
adc
sbb
jmp
cmp
jno
sub
push
inc
mov
xchg
pop
jno
inc
sbb
stos
js
ret
xchg
and
sub
adc
dec
loopne
outs
lods
dec
clc
lea
adc
xchg
adc
loope
sub
sub
dec
movs
inc
or
test
lea
dec
push
sbb
jp
bound
test
mov
mov
add
dec
nop
leave
add
sub
add
jno
add
xlat
push
or
fstp
jmp
inc
pop
xchg
sub
inc
mov
mov
jmp
jns
cmp
movs
test
jne
add
mov
xor
inc
fsub
sbb
jmp
xchg
jae
sub
sbb
scas
sub
add
lock
push
jmp
push
loopne
push
sbb
fdivr
jmp
fwait
or
into
xchg
test
loop
pop
or
adc
jnp
ret
mov
fiadd
neg
shl
add
pop
popa
repnz
ss
mov
clc
xchg
pop
ret
xchg
push
repz
pop
push
out
add
inc
add
ret
jg
push
dec
loopne
sbb
pop
or
inc
mov
sahf
ret
push
xchg
leave
shl
es
adc
cwde
jno
add
mov
cmc
stos
cmp
jne
outs
inc
push
jge
clc
push
jp
cmp
inc
inc
jne
or
ret
sub
add
mov
and
push
mov
push
or
push
inc
push
std
jp
sub
and
dec
call
nop
test
adc
pop
and
retf
rcr
push
sahf
pop
mov
jmp
je
inc
adc
in
ja
add
adc
mov
sbb
push
stos
in
data16
or
inc
push
or
pop
or
sti
pop
push
lock
int
or
pop
inc
(bad)
jmp
sbb
pop
enter
pop
xor
outs
out
mov
pop
mov
add
inc
sub
pop
les
add
fsub
lods
sbb
jmp
hlt
xchg
add
mov
inc
test
xchg
jno
lock
mov
js
adc
(bad)
xor
xchg
(bad)
pop
push
das
repz
mov
mov
call
ficom
add
ret
iret
test
mov
test
sub
(bad)
mov
jge
push
cmp
imul
dec
mov
in
and
xor
scas
xchg
inc
mov
push
cmp
sub
clc
mov
mov
jb
and
mov
mov
shr
or
shl
in
inc
out
push
pop
push
dec
and
add
lods
cmp
push
xor
jo
mov
push
in
xor
mov
push
in
push
push
or
push
sub
ds
mov
adc
inc
es
shl
pop
xchg
add
add
or
mov
ins
mov
jbe
add
add
push
add
es
xor
jo
sub
push
pusha
xor
xor
xchg
cmp
mov
sub
ret
pop
sbb
nop
inc
ss
push
aaa
and
jne
adc
push
aas
jg
jl
and
inc
push
mov
adc
rol
pop
mov
xor
dec
cmp
pop
pop
sbb
push
add
push
xchg
xchg
xchg
(bad)
xor
sbb
out
mov
add
pop
push
mov
inc
push
add
adc
and
xchg
sbb
mov
or
sbb
pop
cmp
add
pop
(bad)
mov
es
daa
rcr
aaa
mov
push
push
out
sbb
mov
out
push
icebp
push
clc
inc
pop
dec
add
clc
add
mov
add
sub
test
in
or
xor
xlat
jb
mov
adc
dec
adc
inc
retf
and
jo
lahf
(bad)
dec
adc
mov
(bad)
loope
jg
pop
mov
push
sub
or
sub
adc
sub
sar
inc
sbb
add
jmp
pusha
nop
sbb
pop
cmp
inc
lods
sbb
pop
inc
or
popa
or
shl
les
add
push
lods
pop
fs
and
(bad)
or
inc
cmp
jae
push
es
sbb
inc
xchg
ret
push
outs
fiadd
xchg
cmc
xor
sbb
push
adc
jb
je
jmp
inc
test
dec
jge
mov
cmp
push
jle
sub
dec
push
mov
inc
or
jo
xchg
cmp
jge
dec
je
inc
add
in
popa
push
in
sbb
dec
retf
iret
sbb
or
inc
and
fs
lock
inc
inc
jecxz
popa
mov
push
push
cmp
jne
pusha
cld
fsub
mov
js
or
lock
ret
jnp
pop
sbb
rcl
inc
push
lods
enter
inc
mov
xor
mov
(bad)
jmp
or
div
pop
adc
add
dec
adc
rcl
push
push
movs
push
dec
(bad)
not
lea
repz
or
test
cdq
mov
ret
cmc
bound
dec
dec
sbb
push
pop
fild
adc
enter
loop
retf
pop
cmp
mov
clc
mov
sub
jmp
shl
push
jge
pop
push
call
cmps
cmp
pop
les
xchg
sub
dec
add
or
cmc
fstp
pop
inc
inc
push
movs
push
push
mov
sbb
push
mov
inc
xor
mov
dec
add
pusha
pop
adc
nop
xchg
pop
push
xor
sbb
jge
cmp
cmp
(bad)
int3
or
or
pushf
div
jmp
inc
sbb
add
dec
pop
gs
cmp
cmp
repnz
cs
and
inc
sub
adc
icebp
adc
sub
inc
push
arpl
out
xor
cmc
cmp
jne
sahf
xchg
loopne
enter
jo
ja
and
dec
fnstcw
jmp
dec
rol
(bad)
cmp
xor
add
scas
adc
dec
dec
push
jge
xor
test
jmp
inc
arpl
popa
add
or
and
test
adc
dec
mov
shl
pop
mov
pop
mov
dec
jne
dec
test
mul
jp
mov
out
adc
pop
dec
adc
sbb
inc
clc
push
mov
lods
xor
cmp
jne
adc
rcr
adc
sub
push
cmp
aam
out
cmp
xor
hlt
iret
enter
pop
mov
dec
mov
adc
adc
add
jne
mov
sbb
pop
pop
inc
retf
dec
arpl
or
sub
inc
and
sbb
add
push
and
sub
fsub
sbb
or
inc
loop
or
push
inc
xchg
test
dec
xchg
je
dec
test
(bad)
xchg
(bad)
adc
inc
mov
cmc
pop
cs
add
sbb
cmp
add
pop
jecxz
dec
es
sbb
inc
cmp
adc
out
nop
or
or
jg
push
mov
mov
mov
pusha
xor
pop
inc
(bad)
mov
ret
push
hlt
xor
ins
sahf
inc
and
cmps
adc
push
dec
dec
add
outs
adc
push
sbb
cld
mov
or
or
(bad)
dec
dec
mov
call
lahf
in
inc
lods
push
je
dec
or
mov
addr16
sub
les
mov
xor
test
sbb
mov
mov
pop
cmp
in
dec
inc
xchg
icebp
jp
mov
(bad)
sub
sbb
sub
aaa
jle
data16
sbb
adc
inc
fistp
popa
pusha
mov
shl
add
cmp
mov
nop
retf
mov
rcl
idiv
les
lea
in
mov
add
mov
inc
add
fisttp
xchg
in
push
inc
add
into
out
inc
adc
lea
mov
inc
adc
out
cmp
sahf
mov
jl
push
push
(bad)
push
xor
mov
or
retf
test
add
xor
push
jnp
ins
xchg
or
jge
sbb
push
fadd
sar
push
push
inc
inc
stos
pop
jp
jl
ins
sub
push
push
mov
mov
mov
test
push
inc
shl
retf
les
push
loopne
push
inc
call
jl
fisub
or
movs
sub
add
jmp
loopne
leave
add
push
inc
fs
xchg
out
stos
bt
sti
(bad)
mov
adc
jg
fadd
out
ud1
js
jl
jbe
push
xchg
shr
mov
xchg
scas
das
mov
adc
xor
(bad)
aas
jo
xchg
jl
out
sub
or
gs
jge
dec
push
iret
test
addr16
add
inc
mov
mov
inc
dec
jne
adc
jecxz
jp
push
iret
sbb
mov
pop
push
mov
cld
push
mov
mov
in
dec
jns
retf
cmp
jge
dec
pop
gs
lea
cmp
out
mov
and
ds
add
dec
test
push
and
push
loop
push
jl
push
ror
add
mov
pop
jne
xor
add
cmp
and
xor
mov
push
out
cmp
inc
and
cmp
sbb
and
push
push
pavgw
lods
sti
dec
adc
enter
loop
lods
sbb
dec
mov
push
xchg
arpl
clc
push
push
mov
shl
outs
mov
(bad)
(bad)
push
or
xchg
das
add
push
stos
cld
enter
push
add
or
ficom
push
clc
jae
(bad)
les
push
or
push
repz
or
inc
push
dec
pop
or
lods
inc
jecxz
mov
push
fadd
xchg
test
dec
pop
jne
and
popw
out
nop
mov
jmp
mov
rol
add
mov
lock
xor
shl
(bad)
mov
ret
imul
lahf
xor
icebp
dec
adc
sbb
adc
xor
dec
test
push
shl
adc
sahf
mov
jo
sar
test
or
div
and
sub
dec
jnp
mov
sbb
rcr
push
sbb
jmp
mov
mov
mov
jg
mov
je
mov
push
cmc
outs
add
movs
mov
pop
clc
out
mov
cmp
ja
inc
jae
pop
mov
and
cmps
enter
cld
pop
cmp
clc
add
sub
mov
mov
les
outs
inc
mov
mov
fbld
push
stos
or
scas
or
add
mov
and
les
out
and
aam
pop
dec
pop
add
je
jge
or
jmp
fmulp
loopne
cwde
shr
adc
push
xor
cld
ror
mov
leave
push
rcl
mov
mov
push
inc
push
rol
mov
adc
inc
inc
mov
fwait
std
lods
inc
adc
or
or
xor
aam
mov
sti
push
mov
cdq
fsubr
les
in
or
push
mov
and
jge
call
daa
xchg
pusha
sub
mov
aaa
daa
mov
lahf
adc
mov
je
mov
xor
cmp
push
add
dec
das
jb
or
je
imul
push
adc
dec
sub
mov
push
pop
jmp
jle
push
ins
mov
or
sbb
xor
push
sbb
stos
dec
push
push
jl
push
xor
gs
adc
dec
jae
xor
adc
add
aaa
sbb
call
jle
jo
or
push
push
mov
mov
pop
mov
jmp
adc
sbb
dec
icebp
div
xchg
lods
idiv
dec
ret
dec
hlt
adc
pushf
in
mov
inc
push
dec
cmp
dec
adc
ins
cmp
jbe
jmp
push
cmp
sbb
loope
outs
ds
aam
push
outs
bound
test
jne
aam
jo
inc
sub
and
push
and
or
push
push
mov
inc
inc
cmp
jl
xor
or
mov
inc
mov
and
mov
sbb
inc
clts
or
cmp
push
push
(bad)
jge
push
(bad)
mov
std
mov
jne
mov
fstp
(bad)
mov
clc
cld
sbb
jbe
push
pusha
repz
sub
add
jnp
mov
lock
push
jno
sub
aaa
loope
in
cli
inc
xchg
mov
or
inc
(bad)
pop
pop
add
or
gs
add
(bad)
and
push
sbb
js
mov
jb
push
shl
out
enter
in
fwait
xchg
in
adc
fadd
push
call
out
mov
(bad)
jmp
movs
adc
and
mov
xor
xor
xchg
les
mov
inc
inc
cmp
adc
lods
sub
push
jl
aas
loop
pop
mov
loopne
pop
and
adc
add
int
pop
int
ds
jno
cdq
add
(bad)
pshufw
jl
inc
ins
ret
ins
ret
cmp
jo
dec
sbb
inc
or
inc
leave
sub
sub
into
push
ret
pop
cmp
add
aas
cmp
push
and
fcmovnbe
fidivr
add
jb
lea
fisub
fsubr
xor
cmp
sub
aas
or
imul
jno
fild
cmp
push
pop
jnp
(bad)
gs
lods
mov
les
mov
and
mov
test
add
mov
mov
mov
pop
mov
cs
je
cmp
push
add
add
mov
dec
push
push
sbb
and
and
or
add
xchg
(bad)
sar
push
ret
sub
stc
jg
xchg
sbb
out
cmp
dec
inc
or
mov
jmp
ss
push
(bad)
in
push
push
(bad)
(bad)
jg
pop
mov
ret
lds
or
xchg
fisttp
cmp
or
adc
mov
push
jne
(bad)
cmp
mov
mov
or
mov
cmp
xchg
(bad)
pusha
push
sub
sub
mov
jb
jae
mov
xor
mov
adc
mov
sub
dec
sbb
mov
cwde
fwait
sub
add
cmp
or
scas
dec
push
nop
sbb
jle
inc
es
sbb
or
xor
push
retf
sbb
nop
repz
mov
jae
add
sbb
pop
ds
adc
xor
jo
mov
rol
push
fnstsw
sbb
xor
setb
sbb
mov
sub
xchg
call
pop
test
push
popf
push
mov
popf
push
and
ins
cmp
pop
je
jno
add
mov
test
sbb
mov
mov
push
adc
jg
inc
test
push
xchg
data16
mov
test
add
pop
ja
adc
leave
pushf
rcl
in
add
sub
pop
pop
mov
mov
loop
add
or
push
je
sahf
data16
push
xchg
xchg
test
es
test
nop
(bad)
ds
test
or
add
pmulhuw
add
xor
add
push
sbb
scas
fadd
or
or
or
or
cmp
add
adc
dec
mov
or
push
mov
pop
mov
js
add
mov
jmp
add
adc
push
and
loop
push
inc
loopne
mov
mov
inc
pop
jmp
push
cmp
pop
push
and
icebp
xchg
inc
and
push
es
inc
pop
inc
and
add
in
mov
xor
rcl
mov
jp
test
mov
push
mov
add
jns
mov
repz
test
nop
or
add
jne
aad
inc
data16
out
movs
sbb
jnp
jl
cmps
pop
add
jge
push
aad
cmp
call
or
rcr
call
out
adc
adc
push
int
push
adc
cmps
add
or
nop
mov
sub
push
jmp
aad
xor
popf
sbb
fistp
adc
inc
push
dec
sbb
loope
xchg
rol
or
mov
mov
jae
nop
sbb
mov
call
lahf
mov
push
in
push
arpl
dec
loop
add
stos
mov
ja
or
or
rol
test
push
lods
pop
push
dec
sub
ja
push
or
inc
test
loop
fcmovnb
sub
add
or
cmp
(bad)
(bad)
push
jmp
cmp
nop
jp
inc
jl
push
inc
sub
ficomp
mov
jge
je
dec
jmp
xor
(bad)
jp
ret
inc
adc
sbb
clc
jle
jmp
adc
ja
sub
pop
cwde
movs
jle
and
fldcw
pop
je
lea
sbb
xor
push
push
imul
mov
sub
mov
mov
add
pop
add
mov
inc
add
fist
or
or
xor
add
jmp
push
cmp
jnp
jge
mov
cmp
aam
mov
rcr
push
inc
mov
xor
or
pop
je
push
xchg
paddsb
std
shl
cld
cmp
ja
retf
loope
call
xchg
mov
mov
dec
sbb
or
jbe
pslld
(bad)
jmp
or
push
sbb
lock
jmp
ds
inc
jecxz
sub
pop
mov
push
add
push
add
sub
loopne
or
add
xor
sub
and
call
mov
lea
lea
dec
adc
inc
push
mov
inc
lock
popa
xchg
cmp
push
pop
jo
and
into
xlat
xchg
mov
or
or
sub
pop
push
mov
or
push
stc
jl
pop
add
jbe
arpl
or
jne
mov
pop
loopne
test
test
lock
inc
inc
ret
pop
or
add
push
push
ss
push
mov
or
inc
rcr
or
fisttp
push
iret
xchg
fucomp
out
call
cmp
adc
fadd
or
add
add
adc
ja
sbb
or
mov
and
mov
add
scas
jne
inc
xor
sbb
mov
dec
cmp
push
jb
mov
cmp
jb
jmp
test
popf
or
dec
push
loop
shl
cmp
pop
cwde
dec
lods
cmps
pop
cmp
inc
mov
imul
ret
pusha
mov
gs
pop
ins
jecxz
dec
sbb
lea
xchg
icebp
enter
push
add
int
lods
iret
push
mov
xchg
push
adc
mov
fdiv
lahf
add
mov
add
ins
dec
jle
add
xor
cwde
les
mov
or
lods
sub
add
jo
addr16
add
push
jle
mov
xor
dec
inc
retf
mov
push
or
xchg
aaa
fisub
sub
sbb
mov
lods
in
dec
inc
add
ret
mov
pop
or
cmp
mov
mov
and
lock
jnp
jmp
cs
dec
push
sub
cli
mov
or
xor
inc
outs
xor
pop
ret
inc
fisub
adc
add
or
test
es
push
cmp
xlat
cmps
fstp
inc
dec
and
jbe
push
call
(bad)
into
fld
les
int3
push
add
mov
inc
xor
test
xor
inc
mov
sub
and
dec
mov
push
mov
or
jl
or
fbld
add
xchg
mov
dec
test
cmp
jl
xchg
cs
jecxz
fsub
jp
push
dec
(bad)
in
push
xchg
sbb
mov
push
inc
pop
dec
rcl
sub
test
pop
test
add
icebp
clc
sbb
cmp
cwde
or
add
jle
(bad)
std
xchg
sbb
and
add
xor
jle
out
jle
scas
(bad)
adc
xchg
ins
mov
cdq
mov
adc
pusha
nop
lahf
xor
out
not
out
outs
daa
or
push
push
in
and
mov
pushf
test
shl
xchg
jl
mov
dec
movs
dec
add
cld
fstp
fsub
cld
jns
mov
mov
sahf
out
shrd
pushf
mov
out
stos
cld
push
and
mov
call
pop
jo
sti
dec
sub
or
dec
sub
fcomp
ins
sbb
into
adc
sub
mov
or
ins
imul
adc
cld
jl
clc
ret
cmp
pop
pop
ins
bound
or
mov
(bad)
shl
(bad)
jp
xor
fcomp
repnz
cmp
push
xchg
pop
jg
scas
daa
bound
pop
cmp
aas
xchg
adc
hlt
clc
push
ffreep
lods
jbe
cdq
mov
cmp
inc
jle
outs
cmc
mov
in
push
pop
xor
pop
push
mov
les
adc
gs
inc
mov
test
push
dec
or
imul
popf
pusha
lea
outs
aad
xor
out
(bad)
sub
lahf
stos
sbb
cmp
mov
retf
push
sbb
dec
stos
inc
retf
mov
movs
sub
mov
aaa
lods
fst
ret
int
call
mov
ret
mov
add
push
mov
fnsave
inc
xlat
cmp
outs
ja
pushw
xchg
and
into
push
cmp
pusha
xor
sub
adc
add
not
sbb
cmp
inc
jecxz
ret
ret
cmc
jl
xchg
xlat
and
lock
push
push
dec
pop
pop
push
mov
es
imul
sub
jo
es
in
ins
lea
je
lahf
or
movs
call
loopne
xchg
int3
jle
jp
in
mov
lds
push
rol
add
inc
lods
je
add
sahf
rcr
cmp
mov
arpl
sub
test
xor
push
cmp
jo
cmp
ret
cld
mov
in
and
push
xor
jle
test
syscall
mov
and
lahf
mov
mov
dec
fsubr
mov
add
lods
jl
pop
rcl
aaa
fwait
imul
jmp
lods
cmp
add
jo
(bad)
loopne
call
ret
mov
inc
mov
push
(bad)
cmp
test
xor
(bad)
call
lods
xor
push
aaa
xchg
xchg
dec
add
or
ins
add
mov
inc
add
xchg
jl
adc
jnp
jns
sbb
inc
push
iret
jnp
out
popf
add
in
add
pop
add
add
enter
nop
fisttp
mov
and
push
jne
sbb
or
jbe
inc
mov
sbb
xor
dec
xor
cmc
sub
lods
or
sub
mov
inc
push
cmp
mov
xlat
ss
push
cmp
daa
mov
sbb
or
cs
(bad)
mov
push
push
loop
mov
or
fst
jbe
dec
mov
pop
sub
loope
inc
sbb
jno
sub
aam
fidiv
sub
and
cmp
(bad)
jmp
arpl
mov
xchg
cmc
push
fld
sti
sbb
dec
into
push
dec
push
pop
repz
mov
xchg
call
push
fdiv
dec
in
fs
or
jg
mov
loopne
mov
jecxz
inc
imul
inc
jl
xor
and
push
loop
dec
pop
and
push
lea
bound
imul
pop
fcmove
cmp
or
shl
mov
fadd
xor
ror
pop
ss
div
dec
xchg
pusha
cs
xchg
sbb
inc
mov
stos
lock
lea
ins
ss
jno
ins
cmp
sub
xchg
ja
push
dec
adc
adc
sbb
movs
jle
or
test
sub
mov
mov
xor
loop
jle
int
push
ins
mov
pop
adc
pusha
mov
sbb
pop
iret
cmp
jo
aas
sub
mov
or
popa
nop
ds
jne
jo
aaa
inc
mov
dec
scas
pop
dec
ret
in
pop
xchg
mov
sbb
push
dec
retf
outs
adc
add
popa
push
(bad)
or
sti
adc
mov
mov
mov
mov
movs
sbb
xor
jbe
sub
sub
pusha
or
addr16
or
inc
sbb
inc
inc
mov
and
rcl
sbb
ret
jns
fadd
jno
mov
and
xchg
push
out
mov
lods
xor
and
loope
ret
pop
call
jecxz
adc
mov
ret
or
or
(bad)
lock
sub
xchg
ins
sbb
cmp
mov
dec
movups
mov
cmp
pop
or
(bad)
mov
repnz
add
call
inc
or
push
ins
mov
jne
pop
jg
adc
in
lds
movs
out
push
and
mov
(bad)
neg
lock
movs
(bad)
jmp
push
fcomp
mul
loop
adc
retf
adc
mov
test
mov
ds
mov
push
or
pop
dec
scas
add
mov
mov
inc
add
push
cmps
pop
gs
ss
sbb
call
mov
add
int
xor
iret
jae
push
movs
cmp
adc
test
out
sahf
and
cli
xor
sub
inc
and
in
pop
clc
sbb
sbb
ror
sub
int
into
dec
or
xor
dec
pop
ret
push
dec
dec
pusha
or
(bad)
in
xor
lea
adc
xchg
mov
inc
pop
push
cmps
mov
mov
popa
stos
lock
add
sub
sub
inc
call
jmp
and
inc
push
std
sbb
dec
push
xchg
add
xchg
xor
gs
push
xor
lds
fistp
adc
mov
xor
nop
cmp
push
jl
fs
push
mov
mov
mov
ror
inc
inc
jl
iret
cld
pusha
push
nop
push
js
mov
sub
bound
sbb
std
pop
xor
call
call
mov
shl
enter
fsub
add
int3
mov
packssdw
ret
sbb
and
aas
aad
call
mov
jl
cdq
xchg
jmp
and
add
adc
cmp
adc
mov
pop
push
mov
and
call
mov
add
add
rol
adc
stos
mov
inc
mov
adc
and
aas
and
mov
and
jmp
add
cmps
lahf
inc
xor
xor
pop
dec
stos
mov
jae
lea
or
js
lea
stos
pop
or
inc
adc
(bad)
sub
cmp
pop
xchg
or
pop
or
dec
mov
push
jmp
ret
cmp
add
sahf
fadd
cmp
mov
mov
sub
mov
sbb
push
ret
mov
pop
neg
or
jmp
and
and
ret
xor
sbb
push
mov
mov
out
inc
and
push
push
sahf
sbb
sti
aas
inc
xchg
adc
rol
or
test
ins
push
or
xor
sbb
outs
in
aam
xor
leave
push
and
std
sbb
and
fstp
pusha
aad
bound
mov
aas
push
xor
sbb
shr
sub
push
and
sbb
arpl
test
lods
mov
dec
clc
ja
lods
push
jl
test
xor
add
add
je
push
push
push
dec
addr16
sbb
push
push
or
push
inc
ss
neg
adc
cmp
jl
and
mov
addr16
push
call
mov
or
mov
mov
mov
test
jle
dec
cmp
jle
inc
jmp
sub
outs
pop
jo
or
test
in
test
mov
push
loopne
mov
icebp
sub
lds
add
and
xor
or
push
out
cmp
setbe
ins
shl
push
push
mov
add
jl
fmul
jmp
cmp
inc
mov
add
inc
mov
sbb
ror
add
js
adc
mov
adc
mov
jmp
retf
jno
and
pop
or
sub
and
dec
and
dec
sbb
loopne
mov
fwait
aas
rcl
bnd
pusha
push
rcl
add
xchg
mov
or
add
push
pop
or
mov
or
push
data16
push
pusha
ins
mov
jb
test
test
cmp
repz
nop
jle
add
push
add
cmp
add
add
mov
add
sbb
stos
mov
jg
push
or
or
fwait
lahf
add
mov
add
cli
jp
adc
icebp
(bad)
adc
push
xchg
or
xor
pop
sar
and
dec
jnp
lea
inc
sti
aas
nop
es
push
gs
xchg
nop
adc
cli
push
mov
iret
movs
add
mov
jns
out
add
add
jmp
inc
stc
add
je
or
or
push
xor
ss
sub
pop
mov
rcl
outs
dec
cdq
adc
jno
mov
push
and
push
xchg
mov
add
add
jbe
push
mov
push
adc
out
cmovbe
pop
or
dec
and
mov
mov
jne
cmp
sbb
aaa
sub
dec
std
dec
jp
test
cmp
or
inc
stos
push
add
sub
sub
outs
add
popf
xor
popa
mov
in
jno
add
sub
push
(bad)
cmp
iret
(bad)
pushf
and
sbb
call
push
cmp
sub
pushf
test
data16
push
push
push
adc
push
dec
(bad)
nop
daa
loopne
std
push
adc
inc
pushf
ret
dec
rol
mov
xchg
lods
add
in
mov
scas
pushf
push
cmp
jae
in
adc
mov
jno
sub
mov
adc
ret
mov
(bad)
ja
adc
or
sbb
mov
add
sub
hlt
push
push
mov
xor
cmp
inc
fldcw
sub
sub
or
mov
sub
xor
sub
jbe
adc
pop
lea
xchg
push
mov
shl
push
mov
mov
rcl
cmp
pop
push
mov
repnz
lahf
sbb
js
push
ret
or
sar
mov
aam
movs
js
sbb
xor
xor
imul
or
mov
(bad)
and
jg
add
cs
sbb
dec
test
jmp
ins
or
(bad)
pop
and
add
div
aas
add
add
xchg
mov
xchg
push
fsub
xchg
sub
xor
cmp
xchg
push
ret
repz
mov
aas
les
xor
jae
fld
adc
sbb
inc
push
test
jg
mov
xchg
ds
sub
mov
bound
sub
inc
bound
push
sbb
mov
cmp
push
pop
loope
dec
scas
add
inc
xchg
or
sbb
sub
jp
ins
shl
mov
ss
ins
inc
mov
jle
cmp
fcom
push
popa
adc
mov
dec
jmp
pop
mov
stos
xor
inc
xlat
out
jbe
ins
xchg
dec
add
shl
mov
ret
jecxz
in
pop
jg
les
(bad)
std
clc
cdq
add
je
mov
push
inc
popa
dec
cmps
fimul
or
push
and
fcmovnb
cmp
xor
and
mov
jl
mov
js
out
rol
jo
pop
imul
cmp
xor
xor
pop
push
sbb
cmc
cmps
mov
inc
in
or
cmp
(bad)
inc
or
int
pop
push
ins
inc
push
push
clc
inc
and
daa
add
mov
sti
inc
jbe
xchg
cdq
mov
hlt
mov
or
inc
in
push
sbb
push
inc
sbb
scas
and
push
adc
fnstcw
loope
push
jo
imul
ins
movs
add
je
(bad)
fld
or
push
sub
or
sti
pop
push
or
or
cdq
sub
je
aam
push
sbb
jp
jmp
push
and
xchg
loopne
aad
int3
push
call
fdivr
cli
cmp
xchg
inc
clc
clc
adc
scas
or
dec
or
inc
rcr
xor
cmp
and
lea
retf
pop
xor
sbb
inc
pushf
cmps
pushf
mov
not
cmps
sahf
cmp
mov
dec
and
enter
imul
mov
sbb
mov
or
jg
and
aad
xor
jae
imul
sbb
sbb
movs
mov
stc
add
adc
xchg
inc
or
daa
push
push
xchg
(bad)
or
add
xchg
lods
mov
rol
add
inc
je
cmp
dec
mov
fidivr
ret
pop
jne
cwde
and
jmp
call
mov
sub
push
lea
jmp
test
xchg
fild
pop
xchg
into
test
and
mov
stos
jl
dec
lods
movs
mov
dec
mov
xchg
stos
inc
cmp
dec
push
pop
push
sbb
mov
inc
inc
push
jns
int3
out
inc
lods
sbb
lods
lods
lods
pop
pop
sbb
fsubr
jecxz
lods
inc
(bad)
adc
add
xor
fsub
mov
pop
and
lock
jbe
jb
adc
cli
and
sbb
or
xchg
push
and
int3
pop
xchg
and
fst
ss
fistp
inc
loop
push
jns
push
ret
jg
cli
or
pusha
mov
call
bound
fs
ins
inc
aaa
(bad)
nop
jo
sub
and
inc
xchg
sub
or
sub
push
dec
dec
jne
in
and
lea
inc
mov
mov
push
or
adc
sbb
xor
rol
jp
(bad)
xchg
jmp
xor
sub
inc
and
out
fcmovnu
sahf
dec
adc
mov
mov
inc
sahf
xchg
add
adc
rol
stos
mov
retf
adc
ss
push
cmp
or
jp
popf
out
and
jno
aam
sub
sub
dec
push
and
outs
je
pop
and
lods
lods
xor
(bad)
int3
rcl
mov
xor
or
inc
jge
jne
jl
out
aas
sub
lock
ins
and
xchg
push
ror
mov
inc
stos
inc
test
int
push
mov
or
cmp
enter
lock
inc
stos
add
ja
mov
inc
xor
xor
sbb
or
dec
daa
imul
int
xor
pop
pop
out
push
cmp
dec
aaa
rcr
or
xor
es
fwait
in
sub
push
les
lea
dec
xchg
sub
jno
cmp
dec
add
call
and
pop
add
dec
jae
jle
xor
mov
lds
push
add
add
xchg
inc
mov
enter
ror
ror
dec
push
jne
sub
or
inc
loope
jmp
push
stos
mov
push
sbb
add
mov
mov
mov
imul
or
push
mov
inc
push
mov
xor
inc
inc
pop
cmp
push
cli
mov
rcr
and
lahf
add
lods
outs
cmp
and
scas
dec
sar
mov
cmp
pop
out
call
ins
inc
mov
mov
push
push
push
and
loope
cld
(bad)
push
or
lods
cdq
or
pcmpeqd
pop
test
retf
cmp
dec
cmp
jge
add
push
add
pop
pop
jl
push
dec
cmp
hlt
mov
pushf
push
in
sub
xchg
add
push
in
jae
add
cmps
mov
mov
push
lea
daa
cs
fidivr
rcr
clc
jbe
fild
je
push
push
push
stos
jmp
mov
adc
rcl
je
jnp
adc
jmp
sbb
jne
jp
mov
je
mov
add
sbb
mov
scas
mov
nop
mov
movs
xor
lods
inc
pop
movs
pop
push
pop
mov
inc
sbb
push
jle
or
(bad)
aad
push
cli
cmp
jl
mov
pusha
sub
pop
into
adc
or
mov
popf
cmp
add
(bad)
jg
pusha
bnd
cwde
jecxz
mov
push
lea
cmp
pop
jle
mov
sub
xor
add
daa
mov
mov
mov
rcl
push
cmp
push
in
xchg
ret
aas
sub
call
push
popf
repz
jbe
inc
mov
sub
in
cmp
or
aas
movs
sub
jne
daa
loop
outs
out
popa
xor
in
les
or
mov
or
mov
stos
jmp
dec
cld
xchg
pop
aam
xchg
push
or
fimul
aas
cmp
je
ret
push
fwait
inc
jne
xor
rcr
and
dec
rol
pop
add
cmp
sbb
std
ror
ret
jne
fcomp
ret
add
pop
inc
or
sub
dec
lea
xchg
ret
ret
xor
push
mov
inc
or
enter
jl
jne
add
push
lock
push
xchg
adc
call
hlt
and
or
fcomp
inc
lods
jge
mov
pop
sti
mov
(bad)
or
adc
push
jo
cld
sbb
mov
into
test
pop
js
sar
sbb
mov
loope
mov
or
stc
xor
ror
mov
cmc
xchg
ror
push
mov
jg
sti
jmp
je
(bad)
xor
and
sbb
push
adc
xor
(bad)
and
and
push
dec
dec
dec
push
xchg
mov
add
dec
inc
cmp
imul
cmp
std
nop
cmps
in
push
mov
jbe
sbb
mov
and
retf
push
push
fst
mov
add
xor
mov
ror
mov
mov
and
jl
lock
cmps
dec
sub
aam
lea
retf
dec
mov
push
or
not
add
jo
jne
ror
in
sub
add
inc
dec
or
gs
(bad)
pop
fstp
in
int
mov
sbb
imul
mov
imul
add
lahf
push
push
adc
popf
movs
push
inc
mov
sub
sahf
shrd
clc
add
jmp
push
fs
(bad)
push
mov
inc
push
xor
push
mov
mov
loope
(bad)
bound
js
add
fwait
nop
(bad)
cdq
jp
xor
or
mov
dec
mov
movs
sub
or
loopne
push
mov
add
sbb
aas
dec
add
mov
out
in
adc
retf
push
and
das
lea
retf
push
adc
and
vshufps
inc
mov
lock
dec
pop
cmp
jl
cmp
adc
dec
pop
dec
mov
cmp
not
daa
dec
add
pop
les
jne
push
xchg
(bad)
repnz
mov
into
shr
fcmovu
les
adc
or
add
adc
repz
xor
std
mov
mov
push
sub
inc
xchg
adc
push
and
ret
dec
je
movs
jo
adc
je
mov
mov
arpl
or
sbb
call
cmc
add
not
dec
mov
sti
push
push
push
pusha
jmp
cmp
xor
hlt
pop
jb
xor
or
mov
sub
or
imul
adc
ror
mov
lods
es
adc
jne
add
and
dec
mov
or
adc
push
sbb
mov
rol
mov
xchg
xor
add
add
add
jo
into
or
mov
mov
(bad)
leave
lods
or
mov
mov
jae
pop
inc
movs
les
add
add
ds
push
jmp
mov
aam
xchg
fsubr
dec
inc
pop
pop
mov
or
mov
(bad)
mov
adc
mov
or
loop
lods
cmp
cmp
nop
add
push
xor
sub
cmp
fbstp
mov
mov
and
inc
jle
mov
jmp
shl
test
add
pop
add
push
jo
cli
and
mov
retf
mov
sahf
dec
or
nop
add
inc
cmp
push
cdq
js
enter
mov
ds
cmp
or
fnsave
xor
movs
mov
pop
pop
div
fst
mov
or
xor
ja
cmc
sub
sbb
xor
jmp
lea
gs
jmp
and
dec
mov
sbb
fild
ins
mov
adc
jns
push
fiadd
xchg
push
adc
xor
inc
pop
adc
jns
fist
ret
icebp
ret
jle
add
inc
cmp
push
push
ret
inc
(bad)
gs
add
push
push
push
aad
arpl
xchg
arpl
dec
ret
cmp
pop
ja
mov
int3
sbb
jnp
ins
sbb
leave
sbb
arpl
mov
cmp
outs
mov
mov
xor
sbb
aas
jmp
sub
push
inc
or
ror
rol
loope
rcl
mov
fild
or
push
pop
mov
add
adc
xlat
(bad)
jmp
adc
test
or
fcmovu
fldenv
sbb
sbb
jl
xor
bound
pusha
or
push
pop
push
cmc
cmps
xchg
add
loope
adc
and
or
push
add
or
lods
mov
test
lahf
jmp
mov
daa
pop
into
ins
into
stos
or
ins
mov
xor
daa
inc
jb
sbb
or
cmp
push
cmp
sbb
jg
xchg
out
call
inc
or
push
jecxz
verw
add
or
xchg
xor
add
rol
test
add
leave
jl
cmp
je
push
fldenv
xchg
inc
inc
aad
cmp
pushf
push
popf
or
mov
adc
and
or
adc
inc
test
mov
fdivr
xchg
xor
sub
clc
iret
test
mov
ins
mov
mul
dec
sub
pop
imul
xor
xor
and
push
push
adc
loopne
sub
jno
jnp
nop
push
movs
dec
push
call
test
jno
jo
and
xor
or
pop
push
je
sar
lods
mov
or
ins
cmp
xor
jbe
lock
xchg
(bad)
imul
sbb
mov
(bad)
mov
mov
mov
fs
dec
jmp
jns
or
cmp
push
ins
cmp
push
fxch
add
ins
clc
fcom
cmp
ror
cmp
call
xor
fistp
jo
fild
push
jns
dec
mov
hlt
pop
loope
add
sub
mov
imul
fdiv
nop
data16
or
into
dec
dec
shl
mov
test
loopne
xchg
or
and
popa
test
add
jge
lea
mov
and
sbb
mov
xchg
mov
add
add
fnsave
xchg
push
jge
push
sub
adc
inc
add
lods
lods
add
std
stc
add
sub
push
xor
jp
mov
push
or
xlat
adc
scas
jl
mov
(bad)
into
pop
jmp
test
test
fcomp
call
or
dec
adc
mov
test
cmp
pop
movs
or
or
mov
adc
mov
inc
ds
rcr
add
lods
mov
or
or
push
dec
mov
or
jmp
add
jnp
and
out
xor
adc
xor
ja
sbb
mov
sbb
push
push
jmp
ins
test
outs
add
popa
or
cs
or
adc
or
popf
add
push
test
fdivr
lds
mov
push
adc
sub
pop
lods
das
xor
dec
repnz
mov
add
jg
in
push
dec
adc
inc
js
push
pop
and
add
in
adc
mov
or
cmp
xchg
pop
sbb
cwde
fsub
mov
jnp
icebp
jb
push
js
sbb
dec
jmp
mov
cwde
imul
add
aas
push
ins
push
test
sti
add
mov
ficom
dec
sub
inc
inc
mov
add
sbb
mov
push
push
dec
mov
sub
dec
ror
mov
outs
add
add
fsubr
rep
ret
dec
add
xchg
and
shl
adc
dec
loop
imul
push
and
sub
mov
mov
mov
sti
inc
cmp
adc
push
adc
and
push
sub
sub
sbb
fadd
out
push
add
pop
nop
cmp
mov
cmp
cmp
mov
mov
aam
les
test
out
mov
cmp
add
loopne
push
and
data16
stos
or
test
dec
pop
cmps
out
test
call
push
fcom
dec
inc
cmp
or
xor
adc
das
add
jae
cli
push
lea
test
mov
pop
addr16
je
dec
adc
xlat
lock
es
push
sbb
jo
nop
and
sub
mov
mov
aad
pop
lea
mov
in
data16
inc
and
imul
mov
mov
xor
or
cld
mov
pop
inc
pop
fdiv
jo
mov
and
enter
xor
adc
sahf
fs
pop
push
sbb
push
and
dec
cmp
les
lock
sti
mov
pusha
mov
stc
sbb
push
sub
scas
adc
xor
out
push
push
mov
enter
rol
push
fldenv
je
adc
ret
test
jbe
cmp
or
loopne
dec
mov
leave
outs
pop
adc
jnp
adc
push
adc
jns
mov
mov
xor
push
int3
dec
mov
outs
and
adc
in
(bad)
lea
cmp
cmp
je
mov
push
rol
push
movs
inc
js
xchg
cld
sahf
mov
mov
push
in
popa
jl
push
lock
mov
ins
enter
sub
mov
mov
push
sub
shld
push
or
jl
shl
das
ss
push
out
add
je
stos
int
popa
neg
bound
pop
xor
sub
in
push
nop
mov
push
add
pop
xor
mov
sbb
in
dec
pushf
idiv
int3
mov
jo
mov
scas
pop
xor
mov
fbld
cmp
sub
jns
xor
(bad)
neg
sub
xor
fcomp
test
sub
sbb
push
fistp
or
add
inc
pushw
push
or
and
jb
dec
add
movs
icebp
jge
adc
xchg
push
xchg
lock
aaa
fs
add
or
leave
in
out
sbb
add
push
xchg
cmps
adc
add
pop
adc
and
or
pop
fs
dec
or
ret
xor
popf
fcom
and
cmp
sub
fnsave
push
and
dec
cwde
lea
aaa
mov
enter
cmp
push
lock
rcl
(bad)
mov
mov
jb
lea
sub
xchg
fcmovnbe
add
int3
pop
dec
or
mov
cmp
inc
clc
sbb
sbb
inc
push
xor
sbb
and
aas
out
ins
sub
add
jne
xor
fiadd
out
scas
lods
and
xchg
mov
setge
aad
push
mov
fstp
or
call
cdq
je
or
ror
sbb
cmp
adc
xor
sbb
dec
dec
add
ds
pop
mov
stos
or
adc
push
push
sub
addr16
fiadd
clc
push
in
das
dec
(bad)
pusha
or
dec
add
test
add
cmp
push
dec
test
sub
push
shr
pop
xchg
pop
cmp
add
or
movs
adc
pushf
pop
pop
pop
outs
add
pop
pop
pop
mov
and
inc
push
sub
stos
xor
mov
xchg
push
movs
hlt
sbb
mov
pop
rcl
inc
dec
nop
shr
dec
add
pop
sar
or
push
and
push
rol
add
adc
mov
ins
pop
pop
add
jae
call
dec
or
mov
and
dec
jp
dec
mov
rol
sbb
pop
push
test
outs
xchg
cmp
pop
test
out
adc
ror
arpl
lahf
out
hlt
push
dec
pop
sbb
add
mov
xchg
add
xor
jmp
xchg
adc
cmp
or
mov
jg
int
mov
leave
add
clc
call
shr
mov
(bad)
fdivr
pop
inc
mov
xor
out
dec
nop
dec
or
cld
add
mov
pop
or
add
cmp
nop
jge
adc
or
jge
bound
lahf
jb
jl
jecxz
sub
xchg
loop
sbb
inc
pop
cmps
inc
dec
mov
adc
call
xchg
ss
fsub
jo
into
pop
mov
sub
xor
jg
cmp
ss
sub
pop
adc
cmp
mov
pop
cmp
ror
in
push
popa
xchg
(bad)
lods
inc
xor
push
jle
in
adc
pop
sbb
add
add
cmp
xchg
or
lea
cld
out
sbb
pop
sub
jg
das
inc
sub
inc
fsubr
sbb
sbb
sbb
mov
imul
or
and
dec
rcr
jmp
and
mov
add
pushf
add
dec
scas
push
add
mov
adc
cmp
cmps
cs
xchg
and
jecxz
mov
cmp
je
add
(bad)
les
rcr
clc
mov
push
sub
shr
mov
lock
sti
dec
add
cli
dec
sub
or
or
sub
inc
mov
adc
dec
movs
jmp
add
clc
dec
adc
cmp
mov
ds
xor
cmp
mov
add
add
mov
adc
push
cdq
lods
dec
test
xor
inc
mov
cld
cmp
inc
cmp
add
pusha
popa
add
jge
adc
push
push
mov
xor
daa
jno
fild
push
sub
cmp
mov
push
in
inc
or
mov
sbb
add
xor
aas
push
inc
pop
adc
push
jp
push
aam
sti
es
aam
jne
mov
cmp
cli
sbb
sub
cmp
mov
add
mov
lds
sti
adc
mov
cmp
mov
loopne
push
mov
and
mov
or
sub
push
mov
sar
shl
mov
test
retf
add
(bad)
jmp
pop
push
sbb
nop
sahf
retf
loopne
push
cld
test
sub
adc
jg
and
sbb
dec
scas
pop
add
and
sbb
ss
outs
pop
sub
inc
sub
repnz
dec
loop
ins
mov
push
fwait
mov
xor
cdq
mov
adc
call
and
sar
push
mov
or
and
int
pop
icebp
mov
push
inc
ins
and
sbb
xchg
jo
mov
fbstp
mov
inc
adc
adc
pop
push
cmp
pop
cmp
adc
rol
mov
adc
dec
pusha
in
test
pop
outs
inc
loope
inc
mov
cmp
adc
rcr
pop
push
in
dec
in
inc
push
mov
sar
inc
shr
ret
vcmptrue_ussd
fmul
repz
gs
int3
add
push
ror
cmp
xor
jo
xchg
and
inc
ret
or
add
lock
xor
ss
mov
cmp
add
add
pushf
mov
jo
ret
push
jle
icebp
arpl
repnz
mov
inc
or
movs
jp
push
inc
mov
sbb
movs
(bad)
push
hlt
jle
sub
popa
out
push
jo
cmp
sub
add
xor
inc
add
popf
push
rol
xchg
ss
call
pusha
clc
mov
add
jbe
lods
dec
scas
pop
adc
cld
ret
fisub
push
pop
jo
xor
xor
and
adc
ret
cmp
jae
sbb
or
inc
(bad)
jg
aam
dec
test
inc
jmp
sub
jmp
pusha
ret
mov
add
dec
enter
inc
and
add
out
aaa
dec
jae
or
add
add
jmp
pop
enter
fimul
fdiv
repz
jmp
pop
lock
enter
aam
rcl
sbb
sub
cli
push
add
das
sbb
retf
or
popa
movs
call
push
sbb
fistp
or
mov
jbe
or
mov
sbb
mov
push
and
inc
inc
shl
inc
loopne
rcl
test
std
pop
push
daa
or
cmpxchg
sub
mov
arpl
push
rcr
scas
jo
xor
sub
jns
or
mov
loop
cmp
cmp
icebp
mov
jne
push
arpl
loope
push
cmp
sbb
clc
shl
arpl
int
enter
test
idiv
or
adc
adc
adc
and
daa
xchg
mov
js
fcomi
sub
sbb
add
push
js
add
push
mov
call
add
xor
push
add
add
inc
mov
dec
xor
rcr
pop
dec
pop
clc
fld
add
adc
add
(bad)
jne
or
inc
cmp
push
add
lock
imul
inc
lods
shl
adc
sbb
mov
dec
add
jnp
push
mov
das
inc
sub
std
sahf
sbb
mov
and
mov
mov
adc
lahf
inc
pop
or
ror
fcom
xor
cmp
xor
pop
movs
mov
inc
test
mov
fadd
adc
popf
out
lock
in
shl
inc
loop
sbb
fistp
jae
mov
xor
pop
cmp
sbb
test
dec
sbb
mov
ret
mov
cmc
mov
js
jo
sahf
cmp
movs
jp
lea
pop
arpl
lfs
mov
ret
xor
pop
adc
imul
xchg
mov
bound
sbb
push
mov
mov
test
jb
sub
rcl
and
or
mov
adc
inc
xchg
int3
adc
pop
fisttp
and
arpl
hlt
das
mov
pop
xchg
adc
jae
pop
dec
aaa
mov
ds
sub
dec
xchg
retf
mov
or
out
xor
add
mov
(bad)
adc
aad
sar
adc
push
pusha
pushf
in
sbb
clc
retf
jmp
lock
jne
or
jmp
fisub
inc
lock
int
add
(bad)
or
mov
hlt
cmc
mov
and
or
shr
shr
ror
out
pop
or
fiadd
mov
and
mov
shr
mov
dec
dec
or
ret
shr
test
mov
jmp
ffreep
mov
hlt
call
test
pop
mov
push
retf
retf
or
bound
jo
dec
or
je
int
retf
sub
call
les
xchg
push
test
sbb
sub
inc
push
add
clc
hlt
add
mov
xchg
add
pusha
dec
imul
inc
sub
loopne
and
pop
cld
adc
xor
sub
cs
leave
loopne
add
sub
pusha
mov
adc
and
(bad)
push
add
dec
in
imul
pop
lods
imul
adc
jmp
mov
and
leave
aaa
loopne
mov
sub
sub
jmp
inc
ins
loopne
push
int3
pandn
mov
sbb
lea
mov
or
addr16
fldenv
mov
inc
mov
mov
push
stos
xchg
mov
add
push
dec
call
outs
loopne
mov
mov
and
jne
mov
or
sbb
cmps
shl
mov
inc
pop
adc
and
jge
js
dec
add
and
cmp
inc
cwde
xor
add
ret
call
pop
jp
(bad)
mov
adc
cli
cwde
outs
or
shr
fsub
jmp
data16
dec
add
push
xor
adc
inc
xor
pop
aam
jb
iret
mov
scas
cli
ret
jb
enter
mov
rol
jp
mov
mov
shr
pop
loope
cmp
std
out
fisttp
jl
xor
add
add
cmp
cmps
or
add
mov
mov
mov
sbb
lock
mov
or
jne
mov
ret
xor
rcl
std
outs
mov
and
neg
rcl
mov
pmulhw
shr
ret
sbb
adc
sbb
mov
cmp
adc
cmp
mov
hlt
pop
mov
out
mov
inc
or
jle
dec
sbb
and
push
sti
and
push
test
push
popf
inc
adc
add
cmp
jae
inc
pop
fmul
jp
dec
sbb
mov
adc
cmove
fld
add
bnd
ins
mov
adc
cmp
ss
add
test
call
pop
add
popf
jmp
adc
cmp
jae
push
outs
enter
mov
or
icebp
add
lods
fwait
popf
adc
das
jge
or
xchg
sbb
adc
add
cmp
push
outs
add
or
jmp
cmp
arpl
adc
jecxz
adc
push
inc
push
div
dec
jo
dec
cmps
push
shl
out
es
leave
rol
inc
inc
or
pop
arpl
push
sub
push
in
jge
retf
inc
mov
ins
test
xchg
jge
aam
mov
adc
pop
ins
sti
into
and
mov
xchg
mov
adc
jg
jae
test
push
std
ja
jnp
sbb
adc
pop
or
mov
add
imul
push
push
int3
icebp
adc
mov
cmc
mov
in
push
sbb
mov
or
cmc
cli
mov
lea
(bad)
fistp
push
push
mov
cld
pop
push
(bad)
call
and
push
sub
add
ins
daa
jl
cld
adc
inc
pop
loopne
popa
dec
test
push
xchg
loope
add
add
dec
inc
pop
mov
cmps
pop
dec
jno
push
test
inc
dec
dec
sub
and
scas
gs
popa
and
mov
aaa
xor
sub
cmp
sub
(bad)
jg
(bad)
lds
push
adc
stos
dec
test
or
fnstcw
inc
jne
jle
cmp
jg
add
icebp
pop
jo
inc
sbb
jno
fsubr
(bad)
jecxz
nop
mov
adc
lock
mov
and
aam
and
mov
or
push
repnz
inc
add
mov
outs
jge
sub
les
jmp
ror
ret
push
js
add
fdivr
push
mov
enter
or
stos
scas
dec
xchg
jne
cdq
int
out
or
dec
pop
leave
(bad)
pop
push
mov
xchg
add
mov
out
div
shl
adc
xchg
dec
pop
or
jl
sub
push
pop
inc
jg
adc
shl
add
inc
jmp
and
fadd
adc
sub
pop
jp
jle
sub
or
pop
jbe
out
xor
push
sbb
xor
arpl
pop
je
hlt
ret
mov
inc
push
aas
fnstenv
fwait
cmp
adc
add
cdq
adc
push
jmp
pop
mov
inc
jmp
stos
push
retf
rcl
add
sub
xor
nop
int3
mov
je
into
fdivr
mov
inc
cmp
mov
daa
lea
rcl
pusha
shr
ja
aad
or
sbb
repnz
sbb
push
jmp
dec
jae
inc
xchg
sub
test
mov
mov
add
(bad)
push
add
or
mov
adc
ins
jmp
int
rcl
adc
xchg
call
aad
add
or
rcr
mov
push
adc
push
cld
pop
push
std
mov
das
sub
mov
dec
ja
sub
cmp
in
and
jns
sub
out
jmp
imul
inc
inc
ror
int3
xor
mov
inc
pop
push
popa
(bad)
and
jge
int3
sub
jb
mov
cmp
mov
mov
push
sbb
cmc
xor
jno
or
sbb
or
cld
mov
jbe
sub
sbb
cmp
mov
jmp
sbb
sub
inc
movs
push
pop
or
fdiv
xchg
cld
cld
imul
cmp
or
jmp
add
mov
in
mov
(bad)
push
repnz
mov
sub
pop
pop
dec
gs
inc
jmp
sbb
fidivr
imul
sbb
mov
pop
and
push
mov
test
or
or
ror
adc
or
popf
push
or
out
fucom
cmp
push
popa
int3
fcom
xor
jo
aam
(bad)
sbb
call
fs
pop
mov
into
pop
fs
xor
sbb
sbb
xchg
adc
inc
sub
and
pop
not
dec
adc
or
inc
fadd
js
dec
cmp
div
cmp
jae
jae
aam
mov
jle
or
jle
jbe
mov
cmp
test
sbb
or
lods
mov
iret
aaa
outs
sub
in
sar
add
dec
xor
cmp
inc
adc
add
xchg
add
push
icebp
inc
std
cmps
mov
and
mov
inc
loope
(bad)
or
mov
jb
cmp
jae
add
lahf
pop
stc
dec
out
fimul
or
xchg
(bad)
pop
push
leave
xor
add
jne
mov
adc
scas
mov
aad
lea
or
inc
call
lds
ret
mov
sub
jge
shr
dec
inc
push
mov
pusha
lds
xchg
ret
outs
ins
jl
xchg
fwait
ror
ja
fcom
mov
and
movs
scas
cmp
cmp
sbb
cmp
add
push
dec
jo
cmp
out
test
and
shrd
ins
inc
addr16
add
push
add
xchg
and
add
adc
test
push
scas
mov
cmp
enter
shl
movs
rcr
repz
rcr
cmp
dec
pop
dec
out
or
or
mov
cmp
inc
mov
in
rcr
cli
mov
xchg
jmp
push
jne
cdq
inc
iret
shl
mov
mov
ins
push
or
push
or
(bad)
jb
or
(bad)
icebp
add
add
mov
shr
jge
and
clc
inc
shr
shl
jle
es
cs
push
sbb
test
push
hlt
pop
dec
add
dec
xor
xor
pusha
lods
out
mov
mov
push
les
add
mov
inc
xchg
fs
fwait
mov
push
lods
xchg
enter
jmp
push
add
fdiv
push
or
mov
popa
mov
push
aam
mov
pop
out
mov
mov
xchg
xor
cmp
shr
cld
adc
dec
(bad)
jmp
jmp
jl
sti
push
das
push
push
mov
sub
sbb
and
jae
sub
movs
add
jge
mov
push
or
ror
cmp
jne
adc
out
jo
sbb
xchg
adc
js
fadd
inc
mov
call
inc
fs
jge
int3
cmp
add
and
jo
(bad)
or
idiv
sbb
pop
iret
push
scas
mov
adc
mov
sub
push
mov
add
inc
adc
(bad)
or
mov
cmp
jnp
sbb
add
das
adc
mov
push
or
pop
xchg
cmp
adc
ret
jo
cmp
dec
out
lods
mov
or
dec
pushf
sub
mov
ficom
(bad)
js
test
mov
in
push
dec
lock
sahf
sub
mov
mov
mov
js
mov
enter
mov
mov
push
sbb
call
sub
or
mov
cmc
jo
pop
(bad)
mov
(bad)
mov
sub
rcr
mov
add
mov
inc
cs
js
call
jmp
idiv
dec
fdiv
or
mov
sbb
dec
fadd
push
push
aad
push
cld
add
movs
les
imul
leave
jge
scas
rcl
dec
xor
loope
sbb
xchg
hlt
fld
or
mov
adc
clc
jl
fnstenv
or
add
lea
cmps
xor
dec
jne
jmp
in
je
imul
lea
je
mov
add
dec
and
sub
xor
xor
rol
or
adc
ret
xor
pop
and
loop
mov
mov
push
loopne
inc
aam
sti
mov
fistp
xchg
or
jbe
inc
popa
ins
push
ret
jae
mov
in
adc
or
add
or
sbb
dec
test
ins
je
jecxz
mov
adc
(bad)
and
sub
xchg
aam
jle
add
test
ret
xor
stos
mov
lahf
loopne
or
sti
inc
cmp
sbb
mov
sub
add
inc
sbb
shl
imul
(bad)
sbb
xor
rol
rol
add
pop
cmp
out
mov
aam
aas
cli
mov
xor
movs
or
inc
add
and
jns
lahf
sbb
add
rcl
inc
mov
icebp
pop
sbb
clc
inc
cmp
dec
xlat
rcr
mov
pop
test
call
jmp
mov
cmp
ja
cmp
jb
imul
dec
push
inc
je
xchg
mov
xchg
and
mov
aaa
cmp
jbe
mul
(bad)
add
aad
sbb
mov
inc
adc
cmp
sub
adc
jno
push
cmp
push
es
cmp
jae
sub
mov
mov
ins
adc
jmp
cmp
xchg
maskmovq
neg
add
sub
add
mov
adc
mov
mov
(bad)
aam
or
mov
sahf
jns
inc
or
lea
and
cmp
inc
sbb
add
popa
lods
add
jl
jge
mov
gs
je
jo
sub
inc
ret
cmp
cs
lahf
or
mov
inc
push
cmp
lods
sub
pushf
xchg
idiv
fdiv
xchg
push
sar
push
pop
sbb
jl
mov
push
into
xor
repnz
aas
nop
out
pop
cmp
dec
cmp
sub
or
jg
sub
cmp
push
cld
jae
loope
outs
or
js
loopne
cmp
push
jnp
push
test
mov
jge
mov
xchg
jg
jmp
imul
add
jb
aam
sub
aad
inc
xor
jmp
rol
aam
fcom
mov
mov
sbb
mov
xchg
stc
mov
repnz
mov
add
in
cmp
je
outs
add
jge
int3
outs
push
inc
pop
sub
mov
pop
cmp
inc
mov
pop
jne
push
dec
fsub
inc
xchg
(bad)
push
cld
aad
inc
cmp
ss
or
push
dec
adc
mov
ficom
aaa
mov
jmp
mov
loopne
and
push
dec
jl
adc
rep
or
pop
in
je
std
push
mov
jmp
pop
jmp
pop
pop
test
adc
out
xor
add
outs
loop
mov
out
push
or
push
add
xor
push
add
(bad)
repz
jecxz
xor
mov
lds
clc
ret
add
fs
int
sbb
sbb
sub
xchg
or
and
mov
std
je
xchg
and
xor
pop
enter
or
xchg
ins
pop
cld
fistp
retf
mov
pop
sub
add
or
ja
xchg
fidivr
sbb
push
push
cwde
sub
mov
ja
or
ja
push
push
fadd
popf
or
dec
and
pop
cmc
adc
(bad)
xchg
xor
out
adc
xchg
adc
enter
xchg
clc
lds
mov
xor
or
inc
cmp
lock
cmp
ror
push
push
inc
xlat
mov
rcl
(bad)
mov
daa
sbb
pop
in
inc
and
test
add
hlt
inc
imul
ins
mov
adc
sub
lods
sbb
add
sub
jmp
retf
jbe
sbb
loope
push
cwde
mov
std
mov
push
mov
(bad)
mov
sar
dec
adc
icebp
or
fsubr
inc
fadd
rcl
adc
(bad)
mov
sbb
xlat
sbb
cwde
mov
push
aam
jne
imul
sbb
pop
inc
adc
lock
test
test
cmp
cmps
repz
add
fidivr
inc
inc
ins
ss
xor
outs
imul
mov
mov
jbe
leave
dec
xchg
add
mov
jb
addr16
and
cs
pushf
and
dec
xchg
push
add
add
dec
dec
fsub
sti
mov
add
jmp
pop
add
adc
add
outs
sbb
push
add
pop
fimul
mov
and
push
adc
hlt
int3
sbb
repnz
loopne
dec
in
mov
jle
jne
add
dec
(bad)
rol
mov
(bad)
jl
mov
cmp
fisttp
xor
jl
add
pop
fiadd
jle
push
mov
and
xchg
lds
or
std
ja
push
xchg
add
inc
pushw
mov
or
icebp
jno
or
inc
sbb
mov
ror
mov
ret
jae
push
sub
jl
inc
push
clc
call
jmp
(bad)
mov
jae
dec
pop
mov
inc
mov
sti
test
adc
cmp
clc
loop
xor
add
sbb
clc
dec
jb
inc
mov
or
mov
push
or
jne
outs
fstp
xor
push
adc
ret
dec
add
les
add
jb
test
or
or
into
ret
rol
push
or
cmp
test
jl
and
cs
xor
push
retf
cmp
in
or
pop
ds
mov
mov
ret
or
inc
stos
data16
inc
rcl
mov
push
cmc
mov
adc
sbb
cmp
add
xor
dec
mov
pop
adc
sbb
sub
sbb
mov
inc
mov
jg
call
dec
and
test
cli
movs
jmp
int3
nop
cmp
test
adc
push
jmp
shl
mov
repnz
jl
popa
xchg
adc
adc
and
jns
push
add
mov
xchg
fsub
xor
lods
sahf
mov
adc
xor
(bad)
sub
fwait
jne
push
push
push
pop
add
sbb
movs
loopne
mov
outs
loopne
mov
jecxz
ret
retf
pop
inc
in
aam
xchg
lds
push
rol
add
ret
adc
inc
or
adc
je
add
add
jge
jae
int3
ins
je
loopne
xchg
test
add
clc
pcmpeqw
retf
sub
int
sub
push
add
popf
xchg
enter
xor
je
adc
jl
loop
cld
clc
shl
inc
dec
sbb
push
add
dec
inc
in
push
ficom
scas
call
es
inc
popa
rcr
fcomp
adc
mov
stos
out
cmp
in
mov
push
add
gs
sbb
mov
mov
add
add
in
push
pop
jg
pop
stc
push
call
xor
clc
jne
sub
mov
dec
in
das
dec
jle
(bad)
and
ja
leave
dec
push
push
addr16
add
imul
inc
and
or
or
push
push
cmp
test
jae
es
jecxz
push
scas
pusha
jmp
pusha
inc
inc
js
dec
add
add
jl
adc
cmp
cmp
pushf
mov
sbb
pop
and
jl
adc
cli
ja
call
ss
or
dec
jo
push
mov
or
test
and
inc
(bad)
loop
xor
ror
cmp
xor
jo
xchg
push
cmp
jmp
push
adc
push
add
and
and
xchg
(bad)
pop
(bad)
add
sti
in
jmp
dec
js
sbb
loope
cmp
cld
or
outs
(bad)
jl
add
jle
(bad)
iret
retf
fisttp
sub
retf
xor
sbb
push
add
out
jbe
loopne
add
loop
sub
cmp
cmp
sbb
push
mov
imul
mov
loopne
pop
inc
(bad)
add
fiadd
and
(bad)
inc
pop
pushf
test
jbe
or
push
ja
add
inc
or
mov
mov
test
jne
data16
call
ja
push
(bad)
ret
scas
shl
push
sub
scas
mov
sub
mov
sahf
adc
and
fwait
adc
adc
sar
adc
loope
sbb
dec
push
jno
mov
jmp
cmp
adc
push
add
xor
mov
call
inc
dec
aam
movs
retf
cmp
ins
jg
ins
jne
cmp
jo
add
sbb
push
dec
xor
mov
(bad)
ror
adc
push
push
cmp
push
je
adc
rcr
xchg
dec
sub
cmp
leave
ss
and
out
rcr
add
(bad)
mov
ss
or
movs
pop
rcl
cmp
cmp
mov
mov
add
cld
loopne
jne
add
lock
or
shl
retf
ds
mov
xor
mov
and
stos
and
loopne
mov
push
and
lea
or
mov
push
lea
dec
push
out
cmp
jo
ret
ret
push
mov
cld
cmps
add
bswap
mov
fild
shl
retf
test
mov
adc
push
sti
aam
ror
inc
push
cli
mov
mov
lock
jp
lods
sbb
xchg
push
dec
cmp
mov
fs
call
test
scas
ror
shr
jb
lahf
out
and
sub
and
pusha
(bad)
dec
repz
adc
dec
fcom
imul
int
pop
xlat
aas
ret
or
adc
call
or
jmp
sbb
sahf
cmp
push
retf
jb
popa
loope
or
retf
sbb
cmp
or
add
les
(bad)
js
test
or
push
vmovups
sbb
mov
or
sbb
sbb
jl
cwde
out
mov
mov
sahf
mov
inc
add
(bad)
push
add
dec
jmp
test
mov
sbb
ret
inc
iret
test
xchg
or
xchg
xchg
loop
jge
(bad)
(bad)
push
ja
data16
sbb
and
aad
call
cmp
sbb
icebp
push
fnstsw
inc
mov
mov
adc
fstp
adc
lock
mov
dec
(bad)
fnstsw
add
leave
mov
mov
xchg
adc
repz
mov
mov
sub
lock
mov
add
add
loop
mov
stc
shl
inc
jne
mov
mov
pop
mov
stos
push
dec
add
int3
sbb
ja
jmp
cmp
jne
push
gs
inc
loope
lahf
mov
ins
cmp
jne
add
rol
scas
pop
adc
dec
push
inc
pop
dec
push
out
mov
add
(bad)
or
pop
(bad)
jb
scas
(bad)
fiadd
add
add
add
cmp
lock
jbe
mov
lock
add
dec
lea
push
pop
sub
dec
mov
int
add
add
dec
test
or
dec
push
fdivr
push
fsincos
les
pop
adc
test
or
add
repnz
pop
enter
jo
jg
fimul
pop
or
inc
cmp
jb
loope
dec
sbb
dec
pop
or
in
call
mov
shr
push
mov
and
xchg
jge
sbb
adc
xchg
or
dec
fadd
repnz
icebp
in
pop
mov
arpl
je
jmp
jne
jl
jno
inc
or
loope
push
add
push
fsubp
add
fistp
movs
bswap
inc
scas
(bad)
retf
and
or
and
mov
push
or
xchg
loopne
pop
les
cmp
add
mov
dec
sbb
fild
rep
mov
cdq
sbb
stos
outs
adc
mov
xchg
mov
cmp
pop
aad
mov
fmul
or
xor
mov
cmp
dec
lods
jle
js
add
or
dec
fdivr
int
xchg
call
add
dec
js
and
inc
or
sbb
in
dec
mov
jmp
inc
or
mov
and
pop
dec
inc
daa
inc
mov
lds
call
mov
call
jecxz
les
fs
dec
loopne
dec
les
adc
mov
sbb
push
ret
inc
jmp
aas
pusha
dec
add
icebp
cdq
loop
ret
loope
ret
in
and
inc
popa
sbb
inc
ss
mov
lea
mov
daa
push
test
call
leave
push
inc
dec
fiadd
xchg
mov
push
cmp
add
inc
sub
cmp
adc
push
mov
nop
les
push
mov
or
cmps
jo
stc
push
ins
cmp
in
and
ja
aaa
inc
mov
fbstp
pop
inc
add
pop
ss
xor
loope
fnstcw
xlat
xchg
inc
into
add
xor
jmp
and
rol
jo
add
xchg
(bad)
xchg
or
jmp
push
cli
iret
pop
pushf
sbb
add
lea
xlat
test
das
in
sub
lea
xchg
push
loop
mov
cmp
push
mov
loopne
sub
repnz
inc
loope
js
outs
jle
mov
xchg
sbb
mov
adc
pop
pusha
push
aam
or
add
cmp
in
push
int3
cli
fs
ret
inc
ja
in
aam
push
mov
loope
dec
jne
mov
add
test
mov
mov
or
push
dec
mov
les
repnz
cmp
daa
push
fxch
test
mov
or
loop
je
xchg
adc
push
ror
and
xor
xor
ins
cwde
jno
rcl
nop
sbb
repz
pop
push
pop
rcl
cmp
adc
inc
lea
sti
ret
jne
hlt
lods
mov
xchg
xchg
fimul
and
and
xor
xor
xchg
mov
cmp
or
rol
iret
or
xor
out
inc
shl
xor
iret
rcl
daa
adc
inc
pop
cdq
loop
sub
fcomi
xchg
dec
add
cmc
data16
rol
js
xchg
(bad)
loopne
test
das
(bad)
pop
and
pushf
and
repnz
jle
rol
ret
xchg
cmp
test
dec
inc
(bad)
dec
adc
dec
pop
mov
aas
and
cs
out
mov
cmp
xor
jne
xor
jbe
mov
dec
inc
mov
sbb
or
cmp
stos
jle
inc
pop
or
fsubr
adc
imul
xor
or
dec
imul
repnz
xchg
push
dec
cmp
(bad)
cmp
push
scas
or
cmp
lea
adc
sub
jl
stos
or
scas
icebp
data16
sbb
dec
(bad)
mov
add
enter
sub
pop
(bad)
(bad)
pop
adc
inc
xor
lds
fadd
mov
adc
mov
sub
cmp
hlt
pop
mov
jle
dec
in
je
movs
inc
jg
xchg
ret
or
add
jne
rol
movs
and
adc
pop
cdq
ret
sub
mov
lea
pop
js
push
sbb
and
cmp
jg
sub
dec
mov
fstp
pop
inc
pop
xchg
mov
mov
adc
jae
mov
add
xchg
(bad)
cmp
(bad)
and
or
mov
dec
mov
cmp
scas
rol
in
xchg
test
mov
mov
sti
rcl
pop
(bad)
mov
and
stos
or
or
stos
inc
repz
sbb
xchg
fild
(bad)
test
das
popa
cmp
push
xchg
das
popa
mov
or
adc
adc
int
or
ds
sub
jl
movs
stos
add
shl
shr
adc
and
fisub
dec
mov
not
and
cmp
adc
icebp
js
mov
rcl
popa
and
or
icebp
(bad)
iret
add
in
aam
push
pavgb
inc
jecxz
jbe
mov
lds
inc
adc
lods
repnz
add
sub
jmp
pop
les
inc
das
dec
call
xchg
push
push
dec
mov
add
jecxz
pop
dec
test
mov
jmp
dec
mov
adc
sbb
and
and
pop
test
das
fadd
xor
xor
pop
cmp
dec
cwde
inc
mov
(bad)
les
dec
sbb
(bad)
jb
test
outs
push
icebp
jo
add
mov
jl
enter
call
jnp
inc
add
push
hlt
daa
mov
push
or
adc
or
div
xor
jbe
rol
push
icebp
ret
jno
adc
add
pop
mov
je
jmp
and
(bad)
cmp
add
cmp
test
ja
out
inc
loope
das
mov
(bad)
adc
mov
pop
pop
pop
push
xchg
int3
inc
das
retf
add
aaa
xor
push
xor
xor
or
scas
inc
cmp
push
aas
popf
mov
or
fild
mov
adc
call
divps
scas
jmp
shl
pop
cmp
dec
je
mov
or
and
fmul
fbld
shr
rol
or
rcr
loopne
(bad)
fst
pop
mov
adc
mov
mov
adc
loopne
cmp
hlt
cmp
sub
fidivr
cmc
mov
push
add
mov
arpl
cdq
pop
push
enter
mov
inc
rol
and
mov
sahf
mov
pushf
and
mov
adc
jno
shr
les
adc
ret
lods
jo
jno
mov
mov
and
adc
sub
(bad)
adc
push
inc
sbb
xor
mov
and
pop
adc
sub
push
push
stc
pop
and
lock
sbb
sbb
add
or
shr
mov
sub
push
lock
inc
clc
pop
mov
dec
push
add
in
mov
dec
jl
mov
jl
ins
je
dec
and
inc
jmp
pop
imul
hlt
jmp
pop
pop
jmp
add
mov
xchg
popa
jecxz
cld
dec
aas
cmp
sar
xor
int
ret
addr16
imul
jmp
rcr
arpl
sbb
and
mov
inc
xor
jecxz
leave
je
add
in
pop
push
dec
hlt
jle
shl
cmc
jmp
mov
inc
mov
or
adc
jmp
pop
jg
and
inc
js
push
ret
sub
daa
stc
mov
adc
mov
call
loop
call
lahf
pop
ds
test
push
add
lock
sbb
popa
ret
ins
sub
xor
sub
mov
pop
add
or
adc
cmp
daa
out
jbe
sub
sub
rcl
push
or
xor
inc
ja
cli
push
mov
mov
sbb
pop
add
or
cld
add
mov
hlt
sub
push
jne
jae
(bad)
sub
push
iret
retw
adc
sbb
sbb
inc
sub
repz
rcr
ins
push
sbb
xchg
nop
xchg
or
pop
shl
pop
dec
les
sub
xlat
outs
sahf
mov
xor
call
ins
movs
push
js
ret
popa
cmp
lahf
sub
test
mov
lea
aam
call
pop
or
int3
les
lahf
add
and
inc
mov
inc
adc
mov
aas
fdiv
sbb
inc
lea
js
cmps
and
inc
push
jg
into
movs
retf
sub
dec
mov
sub
fsub
out
add
pop
or
stc
lahf
std
push
das
popa
mov
cwde
dec
js
fcos
(bad)
mov
xor
ror
cmp
mov
sub
or
dec
test
and
lock
add
cmp
sahf
sbb
or
retf
inc
nop
sbb
push
xor
add
sbb
or
xchg
mov
sub
nop
shr
lea
jge
sahf
mov
mov
mov
jns
out
adc
inc
and
xor
pusha
or
inc
(bad)
and
push
adc
and
out
xor
pusha
jo
add
movsx
push
dec
pusha
mov
add
(bad)
xor
sahf
push
adc
les
mov
dec
add
xchg
xlat
push
les
fs
dec
fistp
push
sub
shl
popf
dec
lea
aad
repnz
cs
xchg
retf
jl
rol
shr
dec
jnp
pushf
je
or
lods
and
push
jo
ds
and
pop
push
cmc
scas
rcl
pusha
pop
and
imul
cmp
dec
xor
stc
push
jp
or
test
mov
xchg
retf
dec
xor
adc
lahf
adc
xor
shl
int3
xor
std
popf
push
pop
xchg
out
xchg
sar
push
ror
cmp
int
repz
cmp
xchg
rol
push
ret
fisub
add
jl
shl
or
(bad)
js
add
pop
ficomp
push
ins
fs
and
pusha
je
mov
push
pop
push
(bad)
lahf
nop
sub
inc
inc
inc
inc
inc
push
adc
aas
add
add
lds
or
or
push
out
fpatan
or
cmp
jno
jo
(bad)
mov
outs
sbb
stos
or
and
ror
fcmovnbe
push
mov
shl
add
imul
jecxz
fisttp
sub
adc
jne
push
mov
push
add
sbb
xor
add
shl
add
add
loope
add
or
shl
or
cld
mov
aad
sbb
push
aad
sbb
in
mov
lods
mov
or
sub
adc
adc
lds
cmp
rep
ror
mov
jmp
push
jo
hlt
and
jmp
out
rol
dec
clc
shr
pop
test
or
je
sub
push
or
mov
mov
pop
data16
adc
dec
pop
inc
and
jl
mov
or
test
push
je
shl
dec
and
jmp
add
jg
into
pop
mov
jge
shl
pop
arpl
arpl
dec
push
call
mov
addr16
and
pop
jl
mov
mov
add
lahf
ret
les
sbb
mov
inc
cmp
jg
sbb
cmps
sbb
push
pusha
xchg
pop
and
push
pop
push
xchg
pop
push
sbb
icebp
add
sub
jb
adc
add
add
(bad)
add
std
adc
dec
add
mov
in
int3
push
sahf
add
xor
loopne
enter
lock
arpl
stc
cmp
ins
sti
ds
adc
inc
push
add
inc
xchg
add
dec
into
inc
pop
jo
mov
add
fld
clc
mov
test
fadd
sbb
jl
repz
mov
mov
es
pushw
cwde
jnp
add
or
inc
cld
dec
and
jmp
pop
jbe
call
add
loope
ficomp
and
push
(bad)
shr
pop
pop
sub
pop
shl
data16
and
movs
hlt
add
fnstsw
hlt
jp
push
push
lock
mov
push
hlt
jmp
sub
movs
aaa
xchg
xchg
mov
push
(bad)
aaa
ret
dec
mov
retf
dec
data16
mov
adc
lock
pop
pusha
push
loopne
and
fild
cmps
sbb
cmp
rcl
or
out
or
pop
pushf
and
inc
fild
or
mov
repz
inc
fmulp
mov
jns
dec
push
rcl
and
xor
inc
pop
and
add
push
push
daa
sbb
adc
and
jl
adc
pop
mov
sahf
outs
js
lods
sti
mov
add
call
or
adc
add
sub
and
jne
dec
sub
push
cmp
ins
sbb
pop
or
cmp
cdq
inc
xor
jl
movs
ja
ds
or
and
and
dec
or
jecxz
xchg
mov
int
inc
in
or
and
movs
cmc
or
jb
shl
stos
mov
lahf
or
mov
push
mov
xchg
fisubr
sub
mov
xor
jmp
mov
fidiv
push
sub
movs
pop
mov
mov
enter
cmp
and
mov
inc
ret
mov
mov
movs
cmp
lock
mov
fcom
xor
ffree
rcl
push
dec
add
jecxz
and
push
in
dec
dec
pop
adc
inc
dec
es
pop
or
imul
push
push
in
fimul
jo
or
xor
cmc
jo
push
imul
int3
push
lds
pushf
mov
ja
push
aad
mov
xor
sets
dec
cwde
je
jbe
and
cmp
ja
push
rep
dec
mov
imul
push
jg
dec
jmp
cld
call
xor
sbb
fbstp
lock
jp
or
xchg
mov
adc
mov
sub
shl
sar
push
xor
js
or
or
or
xchg
hlt
mov
or
dec
enter
shr
xchg
in
mov
clc
mov
addr16
ror
into
out
fsubrp
pop
in
xor
int3
into
fisttp
outs
lea
or
push
dec
(bad)
pop
pusha
lods
add
pop
jnp
mov
dec
movs
push
and
jnp
and
pop
ret
leave
xor
popa
in
sub
adc
pop
or
push
xchg
mov
nop
adc
ins
xchg
je
jmp
jmp
mov
es
lahf
fwait
sbb
pushf
inc
outs
das
or
sbb
push
mov
lods
dec
adc
push
inc
pop
jmp
jns
sub
adc
loopne
js
fwait
and
mov
lods
inc
fsubr
pusha
div
cmp
mov
inc
pushf
mov
nop
xor
inc
xor
test
xor
bound
idiv
sub
rol
retf
cmp
push
cmp
add
dec
pusha
sti
inc
mov
int
icebp
mov
cmp
repnz
xchg
pop
cdq
into
xchg
jbe
jmp
js
cmp
cmp
jl
jge
out
call
sti
sti
xor
repnz
adc
push
aam
fs
sub
je
or
mov
add
mov
add
xor
movs
mov
rcr
movs
shl
fild
mov
loope
ficom
scas
or
jg
jle
mov
mov
pop
les
rol
cli
mov
mov
sbb
xlat
cmp
or
(bad)
(bad)
fld
mov
cmp
mov
jl
jmp
ja
cmps
imul
or
adc
or
cdq
fimul
jmp
mov
lods
mov
inc
inc
cmp
xor
loopne
jo
nop
add
and
je
add
mov
cmp
xor
cmp
adc
mov
shr
or
cli
inc
mov
pop
add
in
rol
call
push
je
ror
or
icebp
sbb
pcmpgtd
data16
cmp
push
sbb
adc
je
test
nop
or
xor
xchg
call
jecxz
cmp
int3
ins
add
or
xor
std
adc
dec
mov
rcl
movs
pop
mov
iret
fmul
mov
push
xor
movs
test
xchg
sbb
add
mov
push
jns
jg
fadd
add
pushf
into
test
or
adc
or
ret
call
inc
test
push
jp
and
push
popa
loopne
dec
shl
xor
jo
cmp
push
push
or
cmp
addr16
sbb
fsubr
es
sbb
gs
test
cmc
and
or
std
xchg
jle
mov
add
js
mov
push
xor
push
or
movs
cwde
pusha
repnz
push
loopne
loop
adc
or
dec
dec
(bad)
jg
fcomp
add
fs
fs
add
mov
mov
push
mov
pop
dec
sub
outs
dec
cmp
lds
mov
xor
dec
or
in
fs
movs
or
push
xor
sbb
cld
push
imul
cmp
rcr
push
ins
push
sbb
push
push
push
jge
xor
dec
je
ret
in
sub
neg
pop
sub
sub
fs
xchg
bound
sub
push
fild
push
mov
popf
jmp
ret
mov
dec
dec
out
push
push
mov
daa
mov
inc
mov
push
and
push
ss
adc
mov
sbb
dec
cmps
imul
mov
loopne
and
adc
lds
and
inc
pop
inc
add
ror
rol
mov
rol
inc
mov
cmps
push
xor
push
mov
xcrypt-ecb
cmps
dec
lods
call
xlat
xacquire
adc
add
lock
dec
popa
inc
push
cmp
cmps
push
movs
loopne
pushf
adc
sub
es
or
repz
mov
pop
mov
xor
test
push
rcr
push
mov
and
stc
xor
pop
add
aaa
xchg
or
xor
inc
inc
ret
popa
pop
nop
cmp
and
mov
out
fs
int
out
movs
mov
sbb
jl
adc
adc
adc
push
das
mov
popa
adc
idiv
push
dec
popa
dec
arpl
jg
xor
arpl
sub
inc
outs
sar
pop
xchg
sbb
ret
shr
rol
inc
jmp
and
inc
hlt
and
sub
mov
fnstenv
and
jmp
retf
mov
add
retf
mov
lods
shl
cmp
or
outs
ficom
ret
mov
mov
mov
std
dec
fbstp
in
add
ret
je
or
clc
sub
xchg
cmp
xchg
add
cli
and
or
je
jmp
add
sub
add
adc
ret
sbb
or
mov
inc
scas
es
adc
and
cs
pop
mov
cmp
push
adc
scas
repnz
push
xchg
xor
mov
sbb
sbb
sbb
sbb
sbb
stos
aad
add
clc
cmc
nop
mov
dec
enter
dec
shl
xchg
pop
jecxz
push
jno
jle
add
push
stos
add
dec
add
ins
(bad)
out
mov
int
sbb
adc
cld
cld
dec
inc
inc
xor
sbb
lock
jp
inc
cmps
lods
sbb
std
ja
pop
sbb
fs
je
mov
aas
dec
stos
add
push
test
rcl
mov
mov
dec
ins
push
add
enter
ret
dec
std
mov
push
je
push
mov
cmp
push
push
add
mov
stos
jp
dec
add
lahf
push
dec
ret
je
add
cmps
xchg
pusha
pop
call
push
pop
add
jmp
inc
je
xchg
push
add
imul
test
es
or
push
xor
fimul
ret
and
jl
adc
mov
add
mov
lods
or
xor
test
push
clc
retf
loope
xchg
push
push
jns
sbb
or
xchg
adc
push
sub
ror
cdq
mov
idiv
push
inc
cmc
arpl
push
mov
push
push
rcl
adc
out
sub
loopne
adc
push
xor
out
jno
xor
or
imul
scas
movs
xchg
sti
jbe
inc
js
or
outs
sub
ins
shl
inc
pop
mov
outs
mov
xchg
je
sub
push
fcom
pop
inc
mov
xchg
or
nop
push
cld
mov
mov
in
push
add
ins
adc
mov
and
mov
push
lods
mov
mov
fs
outs
cmp
xor
fcmovnbe
add
adc
add
loop
retf
aaa
int
add
xor
add
push
adc
adc
xor
add
sub
lock
adc
push
out
jg
fld
adc
sar
jbe
or
cmp
or
add
sahf
add
fsubr
loope
(bad)
xlat
sbb
retf
xchg
mov
cmp
xor
inc
push
movs
jns
pop
sub
pop
(bad)
call
pop
outs
xchg
loope
jo
outs
divps
enter
and
rcr
and
add
dec
lea
push
xchg
rol
in
inc
fisttp
clc
inc
cmp
js
hlt
xchg
xchg
push
xchg
rol
inc
js
and
cdq
nop
mov
jo
loopne
dec
mov
sbb
aam
inc
sbb
clc
push
jmp
call
std
mov
dec
sahf
inc
std
sub
rcl
or
pop
int3
mov
clc
dec
mov
push
shr
xchg
inc
icebp
sbb
retf
push
stos
sbb
or
jb
nop
xchg
cwde
dec
out
jb
jg
adc
sbb
lds
and
push
xchg
mov
mov
mov
scas
add
add
dec
add
js
ja
push
and
das
out
lahf
add
cmp
cmp
add
cmps
mov
mov
sbb
std
xor
lods
pop
mov
or
imul
rol
int3
inc
push
push
inc
jge
pop
add
mov
mov
inc
pop
stc
(bad)
push
popa
jmp
jecxz
cmp
cld
add
mov
out
outs
cmps
rcl
dec
lods
pop
mov
jmp
add
ret
mul
add
jg
enter
lds
add
cmp
jbe
jmp
add
sti
div
jl
sar
jb
ja
inc
imul
push
xor
fbld
test
mov
adc
add
mov
std
std
inc
xlat
outs
dec
and
(bad)
and
sub
xor
pop
call
nop
es
imul
inc
or
mov
push
rcr
jb
frstor
xor
xlat
daa
mov
fimul
xor
jmp
dec
pusha
and
das
(bad)
jmp
sbb
sbb
mov
jne
pop
push
shl
test
dec
cmp
dec
inc
jg
aam
mov
in
jl
inc
jg
pop
add
int3
inc
xchg
or
cld
(bad)
jbe
mov
lock
dec
and
into
sbb
pop
push
push
test
add
ins
add
inc
or
pop
lea
ss
xchg
dec
adc
jo
adc
xor
adc
mov
xchg
cmps
inc
push
add
xor
not
test
mov
push
or
and
pop
into
rcr
xchg
xor
call
add
call
ret
es
xchg
imul
inc
(bad)
push
push
or
inc
jnp
icebp
dec
inc
jmp
rol
ret
mov
or
pop
or
sub
and
(bad)
mov
jbe
out
inc
mov
js
inc
lea
inc
call
pop
std
pop
or
loopne
scas
imul
jb
cmp
sub
call
cmp
test
xor
add
mov
dec
jl
add
dec
in
push
add
dec
(bad)
mov
fs
and
fwait
cmp
jle
mov
cmp
cmc
ret
add
outs
pop
inc
mov
cmp
lods
pop
adc
push
jno
icebp
mov
inc
sub
inc
xor
add
sub
jne
mov
mov
int3
mov
sbb
pusha
dec
jle
adc
add
add
xchg
push
sar
mov
jo
shl
and
ins
jmp
sbb
mov
cmp
push
pop
jae
push
test
pushf
pop
frstor
mov
xor
adc
jp
out
(bad)
addr16
pusha
push
xchg
mov
push
and
sub
in
jo
adc
push
and
ficom
sub
push
and
push
aad
loopne
rcl
sub
jmp
bound
repnz
fs
dec
in
add
adc
and
jge
push
jp
xor
push
and
dec
or
mov
lods
sbb
cld
adc
xor
je
add
in
xor
sbb
mov
in
mov
hlt
mov
cmp
ret
mov
cs
and
add
sbb
mov
or
sbb
cmp
cmp
mov
jl
test
je
ror
adc
icebp
push
movs
int
push
stos
adc
cmp
dec
int3
psubsw
jmp
or
sar
mov
cmp
adc
cmp
xchg
sub
fisttp
cmp
or
or
adc
dec
adc
or
pop
xchg
adc
cmp
cdq
or
xchg
outs
and
cmp
data16
jecxz
movs
pxor
stos
xchg
nop
ss
sbb
xor
nop
push
in
adc
aam
daa
push
cmp
iret
call
clc
(bad)
fcomp
dec
fcom
adc
xchg
clc
or
cmp
mov
int3
push
call
add
xor
int3
or
inc
dec
fs
stos
loope
fcom
inc
push
retf
ret
and
mov
inc
mov
and
retf
cs
aad
div
sub
loop
sbb
loope
mov
sti
mov
pop
adc
ficom
sbb
xchg
add
or
inc
push
inc
push
fdivp
adc
cmp
add
ficomp
or
push
in
and
outs
mov
or
mov
adc
mov
xor
xor
shl
or
mov
sbb
or
mov
add
test
fcmovb
inc
cmps
cmps
jb
pop
in
dec
or
or
push
out
sbb
or
mov
or
sub
dec
jne
pop
push
or
jno
cdq
push
inc
xchg
ins
mov
and
mov
ds
xor
sub
jb
outs
cmp
add
inc
retf
push
push
loop
xor
push
out
call
test
cmp
push
dec
in
jne
xor
mov
inc
or
adc
pop
popa
or
repz
and
push
add
imul
test
and
sub
pop
pusha
shr
mov
aam
add
dec
adc
hlt
inc
loope
sbb
(bad)
and
inc
cmp
jbe
or
mov
or
or
in
sub
jb
or
sub
fild
jbe
js
sub
ror
retf
sbb
into
ficom
movs
outs
fmul
sbb
mov
add
add
ret
xor
out
(bad)
jb
jo
(bad)
fild
js
push
or
push
mov
sbb
adc
ja
cmp
jb
imul
popf
sbb
inc
pusha
push
or
adc
cmp
in
pusha
lods
or
leave
aad
fisubr
xchg
pop
xor
in
in
sahf
adc
movs
sub
sbb
(bad)
aaa
push
sub
scas
mov
push
push
fwait
ins
sbb
sub
adc
lea
inc
(bad)
push
jb
or
mov
mov
push
adc
adc
dec
mov
ins
dec
dec
adc
sub
xor
outs
aam
(bad)
sub
push
push
enter
sbb
fdiv
fisubr
ret
dec
(bad)
lock
sbb
dec
add
sti
inc
mov
push
and
sbb
mov
out
add
out
xchg
add
add
xor
pop
dec
mov
inc
js
cdq
add
daa
sbb
adc
and
mov
jnp
cmp
fist
cmp
xor
add
add
lock
and
cmps
inc
fiadd
mov
sub
das
push
xchg
xchg
cmp
cmp
pop
int3
push
xchg
xor
mov
test
sbb
push
mov
push
leave
or
sahf
test
mov
jne
pop
sub
arpl
mov
call
je
cmovae
mov
cmp
ja
outs
adc
and
cmps
test
into
add
rol
div
jnp
add
rcr
dec
or
pop
mov
sbb
js
enter
fisubr
xor
pop
and
pusha
ret
or
rcl
fdivr
sbb
sub
es
mov
or
or
push
or
jle
clc
jp
fiadd
push
cld
push
push
mov
sbb
inc
dec
adc
and
cli
movs
jne
and
test
or
add
mov
add
imul
push
imul
or
or
les
sar
ins
sahf
adc
adc
xor
fld
outs
movs
or
inc
dec
push
mov
fadd
mov
fsubr
fst
loope
iret
xchg
icebp
adc
in
sub
cmp
or
adc
push
add
sub
test
pop
inc
mov
xor
loopne
jo
mov
dec
jae
jecxz
add
loopne
adc
(bad)
out
mov
shr
jecxz
dec
sub
dec
cld
push
sahf
mov
add
add
imul
mov
ror
fdiv
push
mov
and
mov
jmp
push
sbb
imul
and
mov
jg
dec
jle
in
adc
not
and
mov
sub
add
and
xor
shl
lods
sbb
mov
lock
mov
adc
lods
cmp
arpl
or
mov
mov
cmovp
dec
lock
or
and
inc
sti
leave
pusha
sub
in
cld
stos
ret
adc
or
mov
jae
dec
pusha
mov
xor
add
pop
and
neg
pop
mov
push
or
and
clc
add
pop
adc
add
movs
push
outs
rcr
adc
neg
and
movs
or
jb
call
adc
or
mov
mov
out
jmp
add
xor
add
fst
mov
data16
sub
add
push
lods
out
and
das
into
xor
dec
es
and
push
cmp
cmp
pushf
fdiv
mov
jmp
stc
pop
imul
jmp
add
(bad)
fnstsw
add
scas
or
ds
and
cmp
repz
push
test
adc
je
xor
mov
jne
cwde
sar
mov
or
fcmovne
add
mov
push
push
push
lods
sbb
push
mov
or
pop
pop
xor
xor
sbb
ret
push
sbb
jno
lahf
or
push
jmp
loopne
adc
or
adc
clc
or
imul
inc
mov
sub
fnstenv
jno
adc
test
mov
pop
test
lea
add
or
inc
jp
dec
int3
sbb
push
mov
int3
outs
cmps
lods
add
dec
dec
xchg
ins
xchg
aam
imul
inc
and
mov
adc
sbb
sar
mov
sti
and
hlt
bound
mov
fdiv
sbb
fadd
jno
lsl
call
or
or
xor
test
and
add
xchg
clc
ss
dec
xchg
or
(bad)
inc
or
cld
jbe
push
shr
add
cli
cmp
out
adc
push
rol
add
(bad)
xor
cmp
sbb
fistp
loop
shr
xchg
inc
push
lock
js
adc
mov
ja
repz
mov
jmp
lds
sub
cmp
or
(bad)
int
rcr
xchg
call
inc
ret
mov
add
and
and
jnp
inc
or
ds
shr
mov
mov
jle
cli
sti
aaa
ret
sub
inc
shl
sub
inc
sub
jg
mov
popa
inc
not
and
or
dec
mov
pop
pop
add
sbb
push
and
idiv
and
sub
jecxz
mov
mov
jle
mov
inc
mov
int
out
sub
jmp
push
or
push
jle
inc
jmp
pop
loopne
xlat
add
push
(bad)
pop
stos
jo
push
mov
pop
adc
and
sbb
call
or
fs
pop
ret
lods
adc
pop
adc
or
into
or
jg
inc
outs
jg
mov
not
and
or
mov
mov
sub
dec
shl
or
jb
lock
je
cmp
xor
push
nop
rcl
movs
and
in
sub
jmp
sbb
pop
je
push
das
mov
and
xor
push
xchg
mov
ins
push
add
jbe
ja
repz
cmp
dec
push
or
lahf
or
call
jne
adc
fnsave
ror
cmp
ins
dec
ins
xor
pushw
pusha
mov
mov
mov
inc
js
(bad)
(bad)
add
hlt
add
mov
push
dec
inc
jno
push
cmp
xchg
sub
(bad)
jg
pop
push
test
test
jbe
call
cmp
icebp
pop
mov
ret
jbe
repnz
out
and
pusha
mov
lea
test
jl
xchg
jb
sub
dec
lea
sti
dec
cld
adc
inc
cmps
dec
sti
xor
jmp
shr
adc
pop
dec
dec
jg
cmp
jae
mov
movs
sub
test
mov
push
dec
add
inc
imul
je
mov
lock
shl
sbb
das
mov
xchg
xchg
inc
pop
dec
sbb
je
jnp
cmp
stc
mov
jmp
sub
jb
ds
xor
inc
adc
mov
rcr
dec
xor
loope
lods
std
mov
push
rol
push
mov
ror
fcomp
(bad)
std
dec
clc
push
fucomip
jae
sub
mov
add
push
inc
jp
pop
mov
cmp
mov
test
loope
outs
add
(bad)
das
(bad)
jecxz
or
movs
nop
push
leave
or
mov
sub
repnz
push
imul
fst
or
sbb
dec
fwait
adc
push
pop
imul
in
mov
aas
repz
or
xor
mov
in
retf
mov
jmp
inc
jmp
imul
and
dec
stos
int3
mov
and
and
ret
or
xor
inc
sub
dec
mov
je
movs
add
mov
(bad)
pop
add
jb
shr
jmp
adc
pop
push
retf
sub
std
jge
mov
add
div
jmp
push
push
mov
push
hlt
mov
(bad)
xor
adc
mov
fdiv
and
xchg
dec
push
out
push
dec
test
cmp
and
test
enterw
gs
inc
add
xor
inc
jb
dec
sbb
popf
out
add
dec
xor
div
jbe
test
call
es
add
cmp
add
sub
scas
or
loopne
cmp
pop
rol
iret
stc
cmp
inc
(bad)
fnsave
or
ret
add
daa
sub
test
sbb
stc
xchg
push
dec
loopne
sub
sub
pop
sbb
lahf
and
loop
dec
cld
es
movs
adc
push
and
cmps
xor
sbb
add
aad
popa
pop
bound
xor
or
add
adc
xor
movs
fiadd
xchg
and
shr
repz
adc
push
mov
lock
das
dec
daa
cmp
clc
lock
pop
dec
repnz
xor
inc
lock
inc
mov
and
int
adc
mov
or
sbb
adc
and
sub
and
hlt
and
pop
ret
in
loop
dec
div
mov
mov
jo
add
dec
loopne
cwde
adc
mov
aad
loopne
clc
add
inc
dec
repz
push
cld
add
in
jle
pop
push
pop
push
adc
stos
push
rol
and
add
pop
pop
inc
inc
adc
inc
das
adc
jle
sahf
or
jb
and
dec
stc
test
inc
or
mov
sar
mov
lock
cmp
sti
push
or
fist
jbe
dec
sub
test
and
cdq
nop
test
inc
fcomp
or
xchg
lock
in
in
popa
or
or
dec
mov
adc
sbb
cmp
cmp
jl
dec
loop
xor
sbb
mov
popa
inc
cwde
push
outs
dec
loop
mov
sub
movs
add
mov
jl
push
in
push
xchg
adc
inc
add
jbe
and
fdiv
pop
pop
and
in
sub
loopne
cld
pop
dec
add
rcr
out
fist
mov
inc
jo
movs
push
fwait
inc
pop
lea
push
jp
jmp
mov
push
mov
or
and
outs
movs
mov
mov
ret
sbb
xchg
mov
aas
gs
mov
je
add
ja
xchg
mov
dec
fwait
enter
add
dec
fwait
jnp
cmp
inc
leave
cmp
movs
mov
or
adc
loope
or
xor
adc
ins
in
jno
pop
sbb
push
inc
ds
or
retf
js
ret
fbld
sub
push
pop
add
dec
and
jae
cs
pop
xor
or
and
test
gs
fldz
dec
int3
popa
and
mov
add
push
mov
rol
ss
(bad)
jmp
into
inc
ror
(bad)
in
and
ds
xor
es
jge
sub
iret
repz
adc
sbb
(bad)
dec
pop
cmp
push
jecxz
jae
adc
outs
or
test
imul
fldenv
test
sub
and
and
fidiv
xchg
addr16
pusha
mov
popa
mov
and
add
add
push
add
les
cdq
add
or
aad
fwait
push
ss
outs
dec
rol
xchg
outs
add
pop
cmp
fwait
or
ins
repnz
sbb
push
pop
ror
and
fucomp
add
adc
aad
(bad)
sbb
dec
sub
xlat
mov
out
and
xor
xchg
inc
push
loop
in
push
rol
xchg
add
and
xchg
das
stc
or
or
adc
frstor
push
aad
mov
imul
adc
xchg
pop
xor
rcl
xchg
xor
test
pop
rcr
fst
sti
inc
mov
inc
dec
adc
dec
js
inc
inc
imul
mov
fsubr
fwait
ins
mov
mov
mov
inc
test
in
lea
xor
mov
int3
mov
js
lea
jb
xlat
adc
add
and
enter
adc
dec
pop
clc
xchg
sbb
push
call
aam
mov
sub
adc
lock
fcmovnb
popf
lea
clc
push
fwait
dec
add
es
push
test
or
xor
mov
xor
shl
adc
cs
popa
xchg
or
add
gs
pop
sbb
mov
pop
fdivrp
sbb
icebp
push
mov
add
xor
outs
test
push
jp
fstp
mov
imul
adc
pop
scas
xchg
adc
adc
adc
jnp
sub
ficom
nop
xchg
mov
xor
adc
add
(bad)
mov
pop
push
ret
fmul
adc
and
mov
ret
das
mov
je
adc
push
ret
sbb
pusha
mov
jnp
or
push
repz
mov
add
mov
mov
mov
push
enter
add
push
sti
or
loopne
clc
push
imul
in
frstor
and
dec
jnp
les
rcr
jmp
icebp
mov
inc
nop
(bad)
and
sti
rcr
dec
pop
add
and
xor
sub
movs
mov
push
push
and
and
test
adc
xchg
fcmovnb
push
mov
movs
out
aaa
test
scas
test
in
mov
nop
test
mov
mov
add
push
dec
fsub
add
xchg
cmp
iret
ins
mov
pusha
pop
add
lods
push
push
jp
adc
mov
sub
cmp
pop
leave
jg
pop
inc
(bad)
out
or
int
aam
push
dec
inc
fcom
fwait
push
xchg
jns
dec
int3
test
outs
cs
push
shl
pop
outs
or
xlat
jae
hlt
pop
push
es
test
pusha
(bad)
pop
and
fmul
ja
clc
sbb
mov
adc
adc
movs
ins
add
into
xor
jb
xor
push
mov
iret
mov
push
dec
add
or
aaa
cmp
cmps
ret
jne
xchg
jbe
jno
inc
add
or
inc
in
sahf
stos
adc
je
adc
push
hlt
lods
rol
shufps
pusha
popa
push
inc
mov
or
jbe
pop
add
je
add
movs
dec
loop
mov
push
inc
xor
and
xor
dec
adc
sbb
mov
imul
sub
pop
mov
add
xchg
and
and
lock
or
dec
cmps
js
fld
in
mov
or
(bad)
loopne
pushw
sub
movs
and
clc
jmp
mov
aaa
test
xor
(bad)
xor
mov
push
inc
add
mov
inc
js
xchg
pop
xchg
dec
pusha
mov
or
dec
cwde
loopne
inc
(bad)
or
aas
adc
push
call
jmp
fnsave
fisubr
sub
sti
sbb
(bad)
xchg
aad
in
mov
or
or
push
cmp
outs
inc
sub
test
gs
push
lock
adc
inc
cmps
and
add
pop
sub
aam
xor
lods
pop
add
xchg
mov
and
mov
adc
sbb
mov
sbb
(bad)
and
mov
sbb
sbb
dec
xor
popa
adc
sbb
mov
push
ret
mov
je
mov
or
inc
xchg
in
pop
rcr
inc
loope
call
jb
mov
push
cmp
or
or
sub
or
push
cmp
jg
dec
movs
jge
pop
fdivr
mov
add
test
pop
or
xchg
cmp
push
or
cmp
push
and
adc
xchg
sub
jo
mov
and
push
push
jo
mov
hlt
rol
pop
xchg
rol
xchg
and
pop
sub
pop
sbb
mov
lods
push
lahf
ficom
and
xchg
repnz
jne
mov
pop
in
outs
mov
ins
rol
sub
aam
mov
rcl
fist
xor
ins
mov
cwde
inc
mov
ja
cli
pop
jmp
mov
dec
shl
dec
cli
xor
dec
rol
leave
pop
pop
mov
and
jecxz
fadd
les
pop
mov
jecxz
sub
and
mov
adc
pop
test
push
adc
mov
mov
inc
ret
(bad)
stc
icebp
xor
loope
xor
adc
and
fimul
lock
jbe
push
(bad)
or
sub
and
rcr
int3
mov
xchg
ret
or
inc
mov
or
fiadd
je
push
call
push
test
adc
and
sub
or
cmp
adc
fist
jbe
xlat
jns
sub
arpl
push
jne
xchg
mov
ror
sub
pop
adc
and
fidivr
sbb
aam
push
jnp
push
cmp
cmps
inc
fs
mov
push
inc
add
add
dec
test
ja
bound
outs
retf
rcr
inc
pusha
add
pop
inc
or
sbb
ins
not
aam
iret
inc
nop
test
js
jmp
popf
jae
cwde
je
iret
sbb
xor
dec
or
mov
mov
sub
jb
sub
fs
sub
mov
lods
mov
js
les
push
(bad)
add
test
clc
pop
in
dec
mov
inc
clc
cmovo
ins
in
test
ja
dec
xchg
ror
test
hlt
inc
mov
xlat
push
cld
(bad)
push
iret
and
scas
and
leave
inc
in
call
adc
test
test
or
or
pushf
nop
inc
or
inc
dec
js
add
sbb
lea
push
adc
dec
loop
xor
test
or
fucom
pop
lods
sahf
ja
daa
scas
add
inc
inc
outs
adc
in
mov
add
int
sub
xor
ret
sub
test
inc
in
fcomp
mov
adc
jb
add
adc
pop
pop
movs
ss
mov
mov
mov
mov
mov
push
push
pop
enter
push
push
adc
lock
push
mov
pop
xor
fdiv
pop
or
adc
adc
stos
mov
jl
nop
add
nop
imul
ja
mov
cmps
les
loopne
or
adc
xchg
jmp
adc
mov
dec
add
push
mov
pop
inc
sub
icebp
inc
dec
push
dec
jbe
adc
lock
add
jge
sub
pop
fstp
mov
arpl
inc
out
xchg
and
jp
xchg
lea
xchg
cmp
and
cmp
xor
popf
or
or
add
out
ins
mov
shl
cmp
mov
pop
adc
das
cmp
clc
jge
clc
pop
imul
mov
ror
out
xor
cmp
js
xor
call
xchg
inc
and
shl
jno
xchg
bound
popa
rol
and
jns
div
cmp
sbb
xor
imul
and
in
and
add
jns
leave
push
jb
push
cmp
inc
mov
xor
test
mov
imul
pop
or
in
sub
and
in
imul
imul
imul
push
mov
mov
lods
inc
adc
cmp
mov
inc
sbb
and
addr16
pop
mov
xchg
push
xchg
mov
jae
add
mov
mov
mov
je
push
aad
push
int
push
pushf
jno
pop
push
mov
xchg
sbb
and
push
add
shl
push
pop
aaa
scas
imul
(bad)
shl
adc
movntps
xchg
mov
sbb
mov
mov
add
pop
mov
loopne
sti
or
pop
mov
push
mov
mov
jo
push
out
in
mov
or
mov
ins
add
and
fsubr
repnz
add
mov
xchg
push
daa
mov
and
xor
mov
adc
dec
jp
scas
push
push
push
adc
fidiv
pop
cs
gs
enter
push
ficomp
push
adc
lahf
or
mov
stos
ror
mov
adc
pushf
or
shr
les
adc
mov
sbb
xchg
fs
pop
push
inc
cs
cmp
and
jp
popa
in
push
fdivr
ds
sbb
aam
mov
inc
or
sti
shl
push
fadd
out
fsub
cmp
cmp
mov
pop
add
and
xchg
push
sbb
enter
mov
add
cdq
xor
pop
add
add
push
mov
push
push
inc
mov
mov
in
xor
in
nop
shr
scas
inc
ror
shl
add
shl
ins
mov
jns
shl
mov
push
adc
and
cli
in
nop
adc
sub
fnsave
loopne
call
mov
cmp
xchg
xor
add
mov
mov
(bad)
cmp
sti
scas
call
xchg
inc
ret
lock
xchg
ret
les
xchg
retf
in
mov
dec
add
nop
xchg
inc
(bad)
shr
mov
int
mov
loope
and
push
mov
xor
mov
inc
push
xchg
pop
cmps
loopne
retf
aam
hlt
add
sar
ins
adc
fdiv
mov
(bad)
jb
xchg
inc
shl
or
and
mov
jne
shr
mov
add
pop
xor
mov
sub
mov
mov
and
jb
loopne
call
sbb
mov
ror
mov
dec
mov
nop
sahf
lock
adc
dec
add
sbb
sbb
xor
fcomi
jecxz
or
and
jl
jne
fwait
ja
adc
fcomp
hlt
push
add
ins
dec
jnp
cmp
aaa
add
test
ins
lods
jl
jo
sbb
out
add
mov
adc
inc
add
or
mov
cmps
inc
mov
popf
ret
or
jmp
add
ss
sub
sub
sub
jno
and
xor
mov
in
jl
push
adc
out
xor
push
push
adc
dec
xor
test
dec
add
cli
call
call
cmp
je
mov
pop
or
out
pop
or
adc
inc
jmp
nop
sbb
xor
or
test
in
out
pusha
xor
nop
cmp
cdq
xchg
jne
sar
repz
xor
ja
inc
test
or
nop
push
jne
ja
cmp
dec
rcr
or
and
aad
sbb
push
cwde
scas
push
sbb
pushf
hlt
test
push
aam
sbb
fcom
sbb
jecxz
xchg
or
adc
inc
dec
mov
pusha
sar
jl
sahf
cmp
or
add
add
cmc
sbb
pop
xchg
lock
add
cmps
test
into
shl
push
or
cdq
mov
clc
sbb
repnz
or
jne
and
fimul
sub
shl
cmp
cmp
and
jo
leave
mov
adc
adc
(bad)
push
pop
stc
adc
xor
mov
xchg
and
mov
xor
cld
jne
mov
inc
je
and
ss
test
inc
xor
rcl
loopne
retf
add
adc
push
add
icebp
les
or
xor
adc
sbb
mov
in
jne
mov
(bad)
(bad)
dec
pop
pop
jmp
mov
add
push
pop
fwait
movlps
das
mov
shl
and
cmp
retf
mov
test
inc
clc
pop
xchg
and
cli
cmp
jmp
ror
rol
mov
pop
push
mov
(bad)
lock
fbld
clc
call
push
mov
sub
push
mov
and
pop
fmul
jle
addr16
inc
fdiv
or
inc
jo
sub
mov
push
fcom
or
add
mov
jno
sbb
ror
mov
into
call
int
(bad)
jecxz
dec
aaa
and
out
push
mov
jae
clc
not
out
ins
int
cmp
pop
pusha
xor
xchg
push
push
or
mov
push
push
push
push
mov
adc
push
daa
dec
add
js
or
push
jmp
pop
sbb
(bad)
push
dec
cmp
inc
mov
iret
inc
pop
dec
je
cmp
jne
movs
mov
mov
imul
popf
cmp
je
dec
retf
mov
mov
bound
xchg
ja
outs
adc
(bad)
out
adc
cmp
es
pop
ins
or
sar
aad
stos
leave
push
push
add
add
adc
fs
retf
add
adc
mov
mov
mov
and
cwd
sbb
mov
push
nop
cmp
cs
cld
lock
dec
jmp
cs
call
mov
push
repnz
sbb
xor
fnstcw
ret
and
dec
dec
cmp
mov
push
retf
push
jmp
cmps
test
mov
adc
std
test
cmp
ds
mov
cmp
mov
or
jmp
and
mov
mov
inc
(bad)
push
pop
push
dec
nop
push
add
into
ror
lds
outs
int3
pusha
mov
hlt
mov
mov
sbb
mov
add
or
pushf
mov
outs
push
call
inc
ret
call
jmp
fwait
outs
lahf
or
cld
jne
cdq
or
or
data16
mov
xchg
ins
and
mov
(bad)
push
sub
or
push
jmp
jmp
hlt
fdivr
pusha
or
sub
jmp
pop
or
push
inc
adc
sbb
test
movs
inc
dec
sbb
clc
xor
push
icebp
std
int
jnp
push
sbb
jae
jmp
fisubr
xchg
cmp
mul
push
mov
jbe
and
and
and
sahf
test
hlt
test
cmp
stos
movs
call
js
and
lods
in
jnp
mov
mov
push
call
xchg
nop
xchg
and
sbb
inc
gs
inc
xor
dec
push
cmp
adc
inc
ret
pop
hlt
xor
js
xor
pop
mov
mov
out
adc
add
add
cmps
and
rol
sbb
out
cld
jp
push
scas
sbb
sti
push
mov
call
fdiv
xchg
inc
loopne
push
push
mov
xor
push
cmp
retf
push
popa
mov
leave
mov
std
or
loopne
sub
sub
or
fidivr
xchg
jmp
push
cmp
and
mov
pop
push
xor
inc
or
or
push
imul
dec
js
push
jge
push
mov
ret
mov
add
imul
dec
sub
push
in
mov
jmp
div
cmp
das
or
sbb
mov
or
repnz
push
(bad)
daa
scas
jle
or
push
call
js
ror
jne
xchg
pusha
adc
cmp
pusha
mov
sub
push
dec
xor
dec
mov
outs
add
ss
adc
or
jnp
mov
test
test
jg
pop
jae
pop
jb
push
push
mov
push
adc
cmp
es
aaa
pop
xor
push
les
fisubr
dec
or
js
adc
jne
stos
fs
leave
out
add
cli
and
add
and
adc
dec
sub
and
xor
cmp
xor
xor
(bad)
arpl
js
fisttp
add
add
mov
dec
test
jb
or
das
pop
mov
clc
ins
xor
sub
lea
mov
push
or
lods
jnp
add
scas
cmps
pop
mov
and
loopne
add
add
dec
add
call
pop
retf
or
clc
sbb
pop
and
xchg
dec
xchg
and
dec
cs
sub
add
pusha
and
fs
xchg
out
jne
inc
add
inc
mov
or
stos
je
add
xlat
lods
mov
dec
lock
sbb
rol
stos
sub
add
ins
fsubr
mov
not
push
pusha
fstp
nop
xor
adc
jne
lea
push
jb
pop
add
mov
add
mov
sti
jg
test
test
je
or
sbb
xor
push
jno
scas
sub
dec
jge
popf
adc
add
jmp
jmp
xor
fiadd
mov
or
clc
hlt
rcr
in
add
gs
int
push
xchg
add
retf
ror
sub
icebp
fidiv
push
dec
sbb
or
imul
popf
das
dec
ss
int3
mov
(bad)
fbstp
test
jne
mov
pushf
nop
mov
cmp
jne
or
xor
sbb
add
lea
icebp
push
push
push
aas
ror
and
ret
inc
mov
cmp
sbb
jo
dec
cmp
jbe
add
cmp
sub
test
je
push
adc
jmp
outs
je
push
or
call
inc
push
and
mov
cmp
adc
push
ins
mov
xor
inc
mov
pop
pop
pop
add
lahf
push
sub
push
and
rol
loop
jge
(bad)
inc
mov
dec
jge
jo
dec
sar
pusha
daa
je
mov
lods
jmp
sub
dec
mov
jp
sub
lds
add
or
ret
sbb
or
test
add
and
add
dec
xchg
repz
imul
sbb
cmp
pop
loope
xchg
sub
push
jns
xchg
xchg
mov
xlat
ins
sub
add
xor
dec
fadd
xchg
(bad)
cmp
xor
ret
clc
mov
ficom
cmp
mov
or
mov
mov
outs
dec
lahf
fsubr
ins
lahf
cmovae
xchg
stos
adc
mov
mov
sbb
loope
test
in
mov
jl
xor
sbb
and
aam
mov
sub
cmp
test
and
and
std
cmp
jne
add
enter
mov
fs
sub
cmp
and
adc
add
xchg
ret
(bad)
inc
test
mov
xchg
test
push
adc
in
push
mov
pop
jb
loopne
in
adc
(bad)
jmp
mov
adc
cli
loope
fdiv
mov
fcom
aaa
sahf
sub
das
push
sbb
add
gs
inc
dec
xchg
out
push
retf
pop
dec
ja
and
mov
out
sbb
test
mov
mov
cmp
loope
test
inc
and
and
jnp
dec
push
inc
ret
or
loop
rol
pop
push
rcl
fs
push
into
aam
xor
loopne
test
(bad)
mov
pop
ret
sbb
icebp
cmp
jne
cmp
jb
add
adc
ja
js
movs
mov
xor
push
ret
add
mov
cld
push
retf
ret
or
push
pop
jne
cmp
sub
adc
outs
and
adc
push
push
pop
les
hlt
mov
pop
xor
loopne
test
pusha
loope
ins
das
jo
add
pop
sub
push
pop
sbb
or
cmps
pop
push
(bad)
jae
enter
cmp
fldenv
test
out
shl
int
mul
int
dec
ja
adc
cmp
sbb
dec
push
push
push
xor
sbb
hlt
cmps
push
mov
je
sub
inc
(bad)
adc
sub
in
loope
ror
lock
and
lods
and
mov
mov
jb
sbb
mov
mov
push
test
pop
lea
inc
lock
xchg
add
in
imul
add
sbb
ret
xchg
int3
call
push
jne
ret
adc
ror
jl
pusha
cmp
sbb
repnz
sbb
jl
lea
mov
pop
and
leave
inc
jnp
adc
sub
xchg
or
xor
inc
leave
push
cmp
jae
mov
adc
sbb
inc
sbb
and
cdq
dec
dec
in
or
push
adc
dec
mov
xchg
(bad)
push
cmp
or
mov
pop
mov
xchg
mov
sub
cmp
or
pop
or
push
pushf
adc
sub
pusha
cmp
out
fistp
sbb
(bad)
ja
push
ficom
dec
cmp
add
or
ficom
ror
cmp
clc
mov
add
std
add
xchg
add
in
test
dec
fisubr
or
add
sub
les
sbb
in
sbb
xchg
test
pop
push
push
xchg
push
call
pop
push
data16
cmp
rcr
mov
push
cmp
inc
sbb
adc
mov
loopne
call
cmp
add
jne
or
jp
stos
and
cld
pusha
imul
jae
call
loope
fdiv
adc
ret
adc
xor
pop
hlt
ins
test
setl
and
fldenv
call
push
pusha
and
ret
push
or
xchg
xlat
and
mov
in
and
push
jl
(bad)
iret
das
xchg
add
rol
mov
shr
rcr
repz
cmp
dec
push
leave
inc
nop
mov
pop
es
scas
test
xor
loopne
and
test
push
leave
out
enter
into
daa
sub
stos
in
test
pop
enter
sbb
inc
nop
adc
test
jo
lods
mov
inc
dec
push
sub
or
xor
sub
add
push
inc
dec
and
(bad)
jg
adc
xchg
add
and
enter
out
je
push
xchg
out
pop
cmp
fnsave
out
sbb
and
and
and
jecxz
sbb
or
pop
push
xchg
test
lds
test
cmp
mov
adc
lock
imul
mov
sbb
add
push
xor
lods
mov
or
pop
aaa
xchg
sbb
adc
dec
and
xchg
dec
xchg
mov
inc
push
xchg
hlt
retf
xchg
sbb
add
pop
cwde
lods
adc
ret
add
into
sub
jbe
dec
mov
enter
imul
jl
inc
pop
stc
scas
retf
addr16
mov
fidivr
pop
je
outs
mov
sbb
stos
cmps
out
mov
int
add
js
out
push
rol
ja
test
cld
pop
mov
rcr
mov
push
inc
push
cld
les
jle
(bad)
push
lock
cmp
je
push
mov
lods
jmp
push
addr16
or
xchg
jno
inc
shl
add
into
adc
out
jmp
mov
adc
jle
pop
fnstcw
(bad)
xchg
shl
inc
cmp
int
adc
push
lods
ins
add
sbb
lea
test
or
inc
push
clc
or
sti
dec
jmp
adc
test
xchg
cmp
or
test
adc
mov
movs
loop
xchg
cmp
js
or
and
add
shl
add
mov
add
xchg
pop
mov
bound
gs
aad
outs
xchg
or
jle
in
pop
push
dec
dec
adc
xor
xchg
popa
push
inc
xor
and
fwait
mov
xchg
nop
retf
xchg
sub
push
pusha
out
sub
test
xchg
or
pop
lods
mov
and
or
nop
(bad)
xchg
xor
pop
jae
sbb
add
cwde
push
popa
or
mov
xchg
mov
xchg
sbb
adc
add
cwde
and
add
adc
xor
xor
xor
xor
leave
adc
mov
sbb
adc
push
and
adc
mov
cmp
loopne
adc
shl
adc
and
mov
mov
push
mov
pop
ror
and
add
(bad)
adc
xor
adc
adc
popa
inc
mov
push
lods
xchg
xchg
adc
push
(bad)
aam
adc
adc
add
push
fcom
ret
or
mov
call
push
in
cdq
(bad)
(bad)
popa
mov
jecxz
dec
scas
push
fwait
std
loopne
ret
mov
mov
ror
iret
dec
clc
jge
in
mov
pop
test
push
cli
push
test
daa
dec
or
cmp
adc
or
addr16
call
or
mov
dec
popf
and
mov
jns
aaa
add
jle
mov
and
retf
dec
dec
or
lods
(bad)
iret
xor
jmp
xchg
push
push
or
cmps
jo
retf
ds
loope
cmp
cmp
pop
mov
sbb
je
imul
sbb
pusha
add
dec
(bad)
mov
imul
jecxz
adc
add
push
mov
mov
or
pushf
in
or
sbb
(bad)
cmp
or
mov
push
push
cmc
inc
loope
sub
xchg
icebp
jge
jle
or
xlat
fnstcw
add
jge
(bad)
adc
jmp
and
out
push
test
push
adc
add
push
cwde
add
je
adc
out
hlt
pop
inc
loopne
jge
cld
test
repnz
add
push
in
shl
ret
rcr
or
mov
fadd
ret
bound
and
jo
js
pop
jge
(bad)
jmp
add
or
pop
rol
pop
inc
retf
cmp
aaa
lea
xor
jmp
pop
add
xor
(bad)
sbb
jne
xchg
stos
out
adc
push
push
jb
retf
sar
xchg
loop
pop
dec
and
push
outs
outs
out
mov
sub
mov
je
mov
mov
jle
das
retf
imul
or
and
dec
sbb
imul
ins
aad
int
jne
cmp
cdq
lea
sbb
adc
xor
and
push
nop
pop
add
dec
loop
test
jbe
xor
add
(bad)
jge
js
inc
lock
mov
jg
xchg
je
lods
rcl
cmp
sub
mov
dec
and
rcr
pop
test
pop
mov
scas
test
xor
outs
mov
rcl
loop
pop
sub
ja
inc
push
imul
dec
out
sbb
cdq
jno
pusha
movs
xor
ror
aam
stc
push
adc
mov
pop
sbb
dec
mov
add
add
in
push
es
mov
mov
adc
dec
push
mov
test
mov
test
ror
gs
in
daa
lods
aam
mov
dec
loopne
fisttp
fsub
mov
mov
jmp
movs
mov
mov
in
imul
inc
xchg
das
sbb
inc
sbb
jge
and
or
mov
jb
movs
and
add
sar
mov
adc
sti
das
xchg
sbb
add
not
mov
cmc
pushf
adc
xor
mov
mov
dec
in
js
push
push
and
enter
dec
jecxz
jbe
push
mov
jg
sti
xor
(bad)
mov
or
into
cld
test
adc
inc
enter
inc
cmp
jp
push
sbb
inc
mov
cmp
lock
mov
or
adc
add
out
add
ror
push
pop
cmps
ret
call
(bad)
add
push
lea
ja
adc
jb
mov
dec
sub
sbb
sub
and
xor
or
cmp
xor
je
add
pop
add
adc
loope
jns
sub
mov
out
inc
lock
test
push
pushf
mov
wrmsr
repz
ds
das
add
je
cmp
jne
(bad)
je
pop
add
sbb
cmp
inc
ja
fadd
push
cmp
dec
push
and
mov
sub
es
add
dec
and
jo
ret
push
xchg
and
pop
cmp
dec
adc
dec
ret
cmp
push
sbb
cmc
test
add
push
test
mov
(bad)
sbb
lock
rol
push
mov
xor
fmul
test
add
sbb
lods
adc
push
and
push
xchg
popa
sub
add
dec
xchg
sub
scas
test
test
inc
sbb
push
movs
sub
call
mov
pop
je
gs
pusha
cmp
push
icebp
dec
jecxz
pop
leave
(bad)
pusha
jecxz
mov
push
aam
pusha
jmp
in
mov
mov
xor
xor
cmp
push
push
or
inc
mov
pop
jo
jle
push
ror
cs
adc
cmps
das
mov
sub
mov
popf
jne
sahf
movs
mov
push
jmp
mov
call
sbb
sub
cmp
xor
adc
jae
sbb
cmp
jle
pop
arpl
ds
hlt
mov
or
and
stos
xor
sub
or
mov
cmp
es
adc
push
shl
add
loope
add
cmp
jo
cmp
out
test
push
loopne
pop
fidiv
or
adc
out
push
push
adc
das
imul
loop
sbb
sub
pop
and
dec
nop
ds
pop
movs
jp
jp
mov
lock
pop
add
sbb
mov
cmp
mov
xor
push
pop
adc
dec
add
sbb
or
mov
add
add
or
dec
call
mov
xor
test
push
mov
adc
aad
cmp
cmp
dec
mov
lock
inc
out
icebp
mov
aaa
jmp
push
adc
lea
inc
mov
add
add
js
int3
ret
movs
push
mov
stos
shr
mul
adc
jae
fs
sub
sub
(bad)
dec
movs
fptan
(bad)
sub
sub
fnstenv
(bad)
popa
add
jne
fnstsw
add
and
xlat
add
push
and
cld
shr
fwait
test
mov
retf
ret
(bad)
mov
pop
cli
cdq
scas
cmp
jmp
rcr
sub
xchg
cld
adc
pop
dec
jge
jmp
xchg
or
arpl
popa
test
xor
jbe
test
or
xchg
jno
outs
xchg
sti
mov
pushf
push
rol
lea
jge
xchg
fnstcw
mov
or
inc
sub
or
out
nop
or
rol
cmp
mov
fwait
inc
pop
mov
hlt
inc
test
imul
aam
push
inc
je
mov
jle
ss
and
jne
popa
cmp
mov
cmps
add
adc
push
or
pop
inc
sbb
push
add
add
push
dec
sahf
xor
pop
sbb
popf
dec
retf
add
in
mov
shr
repnz
imul
push
sbb
or
stos
inc
mov
fs
mov
inc
or
dec
das
clc
pop
pop
outs
cli
jg
sahf
sbb
popf
jl
in
stos
cmp
sbb
mov
ins
nop
pushf
adc
sub
push
lock
mov
mov
test
add
push
inc
sti
jmp
inc
pusha
push
mov
adc
test
push
cmp
out
aad
pop
jb
and
mov
fcom
movs
xor
fst
push
xchg
push
inc
or
and
popa
mov
fdivr
pop
push
loope
ret
shr
rcr
(bad)
fs
cmp
mov
mov
adc
dec
lea
dec
jne
in
adc
scas
cmp
jg
addr16
pop
cmp
jne
inc
call
adc
jno
movs
and
in
ins
add
jge
imul
or
adc
mov
pop
pop
pop
push
xlat
and
jo
pusha
ds
daa
and
cmp
fsub
adc
adc
xchg
pop
inc
pop
out
test
lock
dec
scas
mov
int
inc
dec
xor
cmps
mov
(bad)
cmps
(bad)
aad
outs
dec
je
push
test
pop
push
ror
or
dec
rol
push
mov
and
push
outs
outs
loope
ret
mov
and
mov
or
xor
mov
in
adc
gs
lahf
pop
ins
shr
(bad)
imul
add
nop
add
or
js
clc
cmps
or
ret
es
cli
loope
mov
xor
xchg
repnz
rol
outs
sbb
mov
scas
add
pop
cvtpi2ps
push
mov
and
mov
jmp
popa
fidiv
js
call
and
pop
sbb
add
rcl
test
jb
jnp
pop
es
neg
or
rcr
icebp
push
lods
pusha
xchg
or
xor
je
adc
push
cmova
scas
adc
mov
fmulp
popf
icebp
inc
in
push
int
push
mov
push
daa
push
cmc
push
jns
sbb
inc
jo
data16
add
and
mov
sub
xchg
rcr
ret
add
icebp
sub
mov
leave
inc
in
or
loop
addr16
xor
and
pop
inc
pop
or
scas
push
jg
cs
cs
sub
cs
cs
xor
inc
pop
cs
cmp
or
loope
mov
sub
and
and
mov
inc
in
add
jmp
inc
rcl
inc
adc
ror
add
push
loope
and
sbb
push
cmps
mov
xor
adc
outs
outs
or
out
sbb
(bad)
adc
lds
add
push
mov
fst
test
outs
test
int
adc
cmp
ja
dec
or
xor
ds
and
mov
cmp
mov
mov
out
ret
xchg
ss
(bad)
cwde
push
jo
or
and
stos
and
and
push
sbb
not
sbb
sbb
sbb
mov
pop
adc
leave
lods
fiadd
push
jb
adc
js
or
push
adc
sub
fwait
mov
cmps
inc
lods
pusha
ss
and
add
push
sub
ror
push
aaa
dec
cs
mov
jbe
xor
push
pusha
adc
dec
pop
lods
xchg
pushf
or
popa
pop
into
add
cs
jnp
or
ficomp
pusha
dec
or
sub
or
shr
mov
loopne
mov
push
add
mov
ret
cmp
and
xchg
and
stos
gs
mov
cld
pop
ret
jmp
mov
test
or
or
xchg
mov
daa
ins
mov
push
rcl
iret
inc
xchg
jp
sbb
sub
fdivr
xchg
pop
int3
sbb
push
loop
test
cmp
adc
adc
and
ret
lock
mov
(bad)
test
push
sub
lea
and
and
push
add
mov
enter
lahf
or
ret
cmp
das
xor
sub
mov
ins
mov
or
add
mov
jmp
call
inc
mov
(bad)
or
daa
jmp
push
push
pop
inc
adc
push
dec
rcr
or
jecxz
leave
test
pop
mov
mov
mov
into
test
fmul
dec
pop
aas
cld
or
aam
test
push
retf
adc
imul
push
fs
aad
pop
mov
add
inc
add
jge
mov
pop
test
pusha
adc
sbb
mov
mov
sub
push
je
(bad)
jp
or
or
push
scas
mov
fcom
das
push
xchg
fs
push
or
pop
sbb
dec
inc
add
fimul
scas
add
out
shr
js
pop
stc
inc
adc
jne
sbb
add
imul
push
inc
daa
gs
jge
push
xor
movs
ret
pop
dec
jl
jo
or
xor
and
mov
add
dec
add
lock
push
add
ins
cmp
aaa
add
pop
sbb
out
jmp
sbb
add
test
mov
sahf
sub
mov
xchg
or
mov
pusha
retf
inc
or
rol
jmp
loope
inc
in
js
js
cmp
dec
adc
nop
loope
movs
bnd
mov
stc
push
jl
sar
daa
push
mov
adc
cmp
dec
add
dec
push
test
inc
ret
and
pusha
iret
outs
and
pop
pop
push
sbb
add
dec
push
icebp
dec
out
xchg
bound
xchg
xor
inc
clc
cmps
or
sub
rol
dec
ins
cmp
cld
ins
push
mov
cld
ret
adc
sar
jne
xor
out
push
or
or
or
fdivr
jo
sub
mov
inc
inc
add
pop
and
and
push
cmps
inc
sub
cmp
push
inc
mov
push
loop
xchg
mov
punpcklwd
nop
or
sub
call
adc
je
or
push
sub
xor
aad
mov
pop
test
add
test
push
aaa
jo
stc
cs
or
(bad)
mov
popf
inc
push
push
adc
inc
mov
pusha
(bad)
xor
mov
jmp
sar
and
js
adc
movsx
dec
mov
and
mov
sub
movs
ret
xchg
call
dec
xchg
push
push
mov
adc
sub
sbb
adc
hlt
mov
inc
popf
mov
out
mov
test
aaa
loopne
aaa
pop
int
inc
xchg
pusha
mov
test
mov
fwait
call
fistp
cmp
push
push
icebp
adc
cmps
sub
dec
nop
aam
mov
stos
bnd
jbe
aam
ds
outs
fdiv
test
adc
fwait
ja
mov
lea
test
add
cmp
pop
leave
jo
cld
sub
test
mov
and
adc
movs
xchg
and
inc
sbb
push
sub
nop
pop
aas
or
ins
sbb
xchg
jo
cmc
push
xor
push
movs
test
mov
dec
rol
jnp
(bad)
push
loopne
pop
test
xlat
and
or
pop
nop
lahf
in
adc
xor
or
pop
push
pop
add
jo
enter
mov
push
mov
bound
fmul
inc
data16
push
add
fisubr
lea
sub
jmp
or
fst
inc
inc
push
clc
xor
jmp
and
out
add
dec
dec
je
or
xchg
xchg
dec
xor
adc
xor
sub
jmp
sub
and
dec
aas
inc
inc
cwde
push
adc
repz
push
fidiv
cmp
xor
daa
je
sub
stos
or
sbb
call
fild
xchg
or
je
cmp
and
nop
push
sbb
add
xchg
dec
xchg
(bad)
or
test
sbb
adc
and
and
xchg
fs
cld
dec
mov
clc
icebp
lock
xchg
imul
and
xor
shl
sub
sub
sub
aam
sub
push
pop
pop
or
adc
mov
fcmovnbe
ins
out
or
clc
cmp
dec
in
jne
xchg
es
rol
cmp
pop
pop
sbb
mov
mov
add
cs
or
add
fmul
xchg
pop
aas
or
or
pop
push
popa
pop
shr
sbb
push
xchg
add
jnp
push
mov
adc
ds
pop
sub
in
jo
les
test
xor
into
loop
scas
lds
je
sti
adc
hlt
lods
pop
xor
lock
shr
adc
(bad)
or
(bad)
push
test
bound
retf
push
adc
add
mov
mov
int
push
test
stc
pop
les
push
fiadd
pop
ror
lock
(bad)
sub
mov
sbb
(bad)
push
push
cmp
lock
retf
push
add
cmp
jle
xor
jge
and
sbb
add
cmps
jae
add
add
inc
rcl
dec
xchg
and
adc
nop
sub
fadd
xchg
les
cmp
(bad)
push
mov
mov
ret
cmp
adc
pop
mov
add
pop
adc
clc
test
les
jb
sbb
inc
mov
fcom
out
adc
sbb
pushf
jae
xor
jl
aam
je
jp
mov
or
mov
cmp
add
adc
popf
imul
xlat
pop
imul
sbb
js
outs
stos
cmp
add
outs
ins
adc
imul
sbb
adc
cmp
push
add
aam
xor
test
adc
jecxz
pop
or
push
aaa
pop
fs
into
push
push
scas
or
push
cmps
push
push
jl
and
jmp
sbb
xchg
pop
mov
das
dec
and
jmp
push
jmp
shl
fld
addr16
cmc
out
dec
dec
and
int
add
and
movs
push
movs
sbb
mov
and
movs
add
bound
sub
pusha
cmc
test
shr
loope
cld
push
movs
add
stos
leave
jmp
fst
push
jbe
mov
arpl
imul
push
popf
repnz
pusha
add
(bad)
(bad)
or
ins
pop
dec
push
ins
push
sub
jmp
loope
pop
(bad)
mov
push
dec
dec
inc
jl
data16
out
sbb
jae
outs
ja
out
sbb
sbb
das
adc
jmp
push
ss
lahf
push
sub
adc
jae
jmp
(bad)
adc
sub
push
cmp
js
inc
out
pop
ror
mov
inc
sbb
adc
test
in
mov
push
adc
jg
push
add
dec
lods
mov
stc
inc
pop
ins
ret
push
pop
imul
dec
pop
fild
add
push
pop
lea
add
ins
addr16
pop
adc
popa
retf
inc
dec
add
jmp
xlat
call
push
aam
gs
jg
iret
repz
cmps
test
in
in
jns
jg
or
push
je
(bad)
test
pop
xchg
movs
push
iret
in
mov
mov
mov
loopne
int
jns
jmp
iret
in
repz
cmp
push
dec
push
pop
mov
fstp
add
ja
(bad)
pop
inc
lahf
aaa
xchg
and
cmp
movs
lds
adc
pop
cmp
call
mov
sub
ret
ins
je
mov
push
pop
mov
jno
cmp
xchg
mov
mov
add
sbb
inc
inc
adc
cs
mov
movs
in
mov
movs
push
xor
mov
cmp
dec
rcr
mov
jmp
cmp
adc
ret
adc
push
dec
gs
je
sbb
lea
les
ja
aam
pop
nop
loop
and
loope
or
push
cmc
iret
(bad)
popa
cmp
pop
jne
sub
lds
rcr
xchg
loop
pop
sbb
and
inc
adc
mov
hlt
rol
add
lea
es
bound
xchg
adc
and
push
mov
pop
pop
xor
(bad)
in
jmp
stos
adc
or
mov
sbb
sbb
push
push
test
adc
mov
inc
pop
jg
xor
push
sbb
ffree
popf
or
mov
cs
and
dec
xlat
push
add
shr
test
sbb
imul
das
add
or
and
or
sbb
mov
ds
and
leave
inc
pop
ja
cmp
repnz
mov
pop
mov
enter
das
or
cmp
mov
ret
sub
mov
dec
retf
pusha
xchg
jmp
leave
push
xor
stos
pusha
jl
ror
stos
or
push
mov
shr
cmp
push
hlt
jp
pop
mov
pop
das
or
sbb
ret
outs
gs
jmp
push
push
and
std
adc
aaa
xchg
mov
push
daa
adc
pushf
les
(bad)
(bad)
dec
xor
out
jae
mov
lods
pop
mov
ret
clc
xor
in
bound
jno
out
xor
push
clc
or
or
xor
aas
cmp
and
pop
and
in
sub
inc
sbb
and
and
pop
or
xchg
ror
xor
adc
adc
sub
loopne
jb
hlt
adc
mov
push
push
aaa
dec
push
pop
push
push
sub
inc
out
iret
jp
push
adc
test
dec
push
minps
out
mov
or
cmovp
inc
inc
je
mov
mov
je
outs
dec
call
and
test
fmul
js
sahf
ds
sar
or
xchg
add
movs
inc
or
clc
fs
mov
dec
sub
adc
jbe
mov
inc
sbb
and
mov
cmp
dec
imul
push
inc
push
add
mov
loope
xor
sbb
add
adc
das
or
les
inc
data16
rep
call
shr
and
mov
int3
and
and
leave
ror
dec
mov
lods
(bad)
push
and
ins
and
int3
jne
push
jmp
shr
test
xchg
push
jo
mov
cmp
push
ja
xor
fcomp
mov
and
mov
adc
js
inc
push
scas
sbb
push
hlt
mov
jae
add
call
dec
loopne
shl
cmp
in
dec
ficom
ret
mov
cdq
adc
mov
fldcw
sar
ror
adc
and
sub
add
loopne
test
add
cmp
cmp
icebp
push
sub
push
adc
jp
scas
fild
and
je
cmp
addr16
inc
int3
or
iret
jo
inc
pop
icebp
out
or
and
add
inc
icebp
jge
pushf
std
adc
jb
dec
add
or
xor
push
sbb
addr16
or
ficomp
push
cmp
push
jnp
jl
(bad)
cld
cmp
and
inc
test
in
and
inc
inc
adc
je
push
cmp
mov
mov
dec
clc
xor
mov
push
imul
jns
leave
push
cmp
add
sahf
daa
mov
fild
in
bound
adc
add
test
cwde
push
add
sbb
add
cmp
add
lods
or
cmp
mov
add
xchg
xchg
fsubr
sub
fsub
xchg
push
add
push
or
fisttp
push
push
sbb
(bad)
test
add
pop
pop
lea
lods
(bad)
adc
shl
adc
jns
cmp
sti
mov
push
loope
test
or
and
repz
xor
test
adc
xchg
sub
jne
test
push
cwde
xor
dec
mov
dec
dec
into
or
add
cmp
mov
xchg
or
mov
rol
nop
mov
retf
loopne
xchg
(bad)
or
jmp
xchg
adc
in
jnp
mul
std
retf
inc
sbb
repnz
dec
mov
imul
pop
shl
pop
add
ss
mov
add
adc
cmp
jo
mov
adc
retf
shl
mov
pushf
je
int
inc
sbb
cmp
xor
jg
pop
pop
xor
jo
xor
fnstenv
or
pop
or
mov
pop
xor
nop
dec
ret
cmp
and
or
jo
jns
ret
mov
retf
movs
or
push
mov
jae
mov
push
imul
popa
mov
add
movs
aaa
movs
push
dec
jo
xchg
pop
pop
test
jne
push
add
nop
test
and
ds
adc
psubusw
iret
push
xchg
ret
jmp
test
cld
ins
mov
xchg
xchg
adc
int
(bad)
cmp
and
add
xor
fdecstp
push
aaa
daa
mov
outs
and
sti
and
pop
sub
cs
pop
aas
mov
inc
or
xor
push
and
sub
sbb
cmp
and
sub
or
stc
pusha
fdivrp
repnz
push
push
in
dec
and
or
in
ds
repz
loope
push
out
sahf
out
push
ss
outs
addr16
(bad)
mov
js
jl
pop
sub
dec
loope
lea
aad
push
ss
adc
add
lods
push
ret
adc
fisubr
imul
mov
add
mov
or
and
ret
js
std
das
jle
hlt
retf
pop
rcl
and
add
(bad)
js
add
or
(bad)
aam
sahf
inc
inc
mov
aas
inc
sbb
(bad)
dec
jl
jg
fadd
jmp
mov
pop
jmp
jmp
push
dec
ins
loopne
jle
and
call
pop
cmp
lock
pop
add
cmp
jae
(bad)
xchg
mov
add
mov
mov
mov
(bad)
push
icebp
iret
cs
retf
mov
or
dec
xor
retf
push
test
addr16
aas
sub
aam
push
test
and
pop
dec
adc
sbb
ret
xor
and
push
icebp
shr
dec
aad
inc
or
aas
ds
mov
fwait
inc
xor
call
sbb
mov
pop
add
inc
pop
fiadd
pop
dec
cdq
adc
rcl
dec
and
mov
adc
into
mov
popf
adc
push
fld
xchg
dec
sbb
fstp
ret
mov
push
imul
call
ja
(bad)
mov
dec
aam
stos
push
(bad)
push
rcl
dec
js
push
lods
push
test
scas
cdq
les
dec
jge
jmp
repz
inc
movs
jo
dec
nop
aad
mov
mov
loop
clc
adc
sbb
pop
inc
sub
xchg
dec
adc
inc
sbb
inc
push
imul
push
push
adc
jb
cmp
ins
jne
mov
out
mov
mov
je
inc
ret
push
mov
pop
loope
add
or
pop
inc
out
aaa
xor
jo
fsubp
cmp
and
dec
and
stos
or
push
push
les
inc
or
dec
mov
in
pusha
mov
test
call
xor
add
xor
sub
sti
add
pusha
cwde
add
add
xchg
mov
lds
mov
inc
movs
lea
sub
leave
call
cdq
retf
clc
cwde
dec
adc
inc
or
pop
enter
jbe
xchg
pop
imul
repz
add
shr
hlt
fdiv
lea
lea
(bad)
adc
or
and
shl
inc
not
ret
or
push
mov
mov
mov
add
pusha
loopne
es
sub
ds
test
push
jge
mov
lock
push
cmps
lock
xchg
sub
mov
mov
xchg
inc
loope
loope
loope
dec
movs
mov
nop
push
jnp
inc
or
cmp
in
test
sbb
xchg
or
loop
lods
xor
jns
adc
and
cmp
xchg
jb
jae
test
(bad)
fcomp
sbb
popf
dec
scas
dec
rep
or
hlt
mov
inc
addr16
fmul
and
jno
ins
test
inc
cwde
mov
xchg
fcomi
xchg
add
(bad)
mov
neg
inc
aam
mov
mov
imul
push
jmp
xor
xor
add
lods
inc
pop
jl
je
(bad)
adc
enter
pop
mov
fmul
mov
mov
sub
dec
adc
sbb
xor
cmps
arpl
ins
adc
and
mov
shl
mov
or
adc
mul
jmp
adc
xchg
test
inc
lea
mov
ss
dec
ret
adc
outs
or
push
and
and
sub
sbb
bound
adc
inc
or
repz
or
nop
inc
or
or
push
cmp
push
jp
adc
imul
ins
mov
loopne
or
fcom
mov
sub
sub
pop
outs
dec
aam
movsx
pop
xchg
or
pusha
or
inc
mov
cmp
mov
aaa
ret
xchg
add
jecxz
and
sub
sub
(bad)
sub
sbb
cmp
or
mov
jle
into
mov
or
es
pusha
push
dec
adc
mov
ret
or
movs
mov
pop
outs
nop
inc
sub
fstp
push
jno
imul
shl
and
adc
inc
cld
imul
push
mov
or
adc
inc
pop
fimul
add
loope
xchg
inc
inc
and
pop
test
dec
adc
inc
or
inc
sar
icebp
add
and
push
dec
and
or
dec
xchg
mov
and
jo
or
cmp
mov
inc
mov
dec
lea
inc
pusha
lea
cmp
push
add
inc
adc
sbb
inc
loop
pop
ss
xor
jl
jmp
arpl
shl
daa
mov
push
ss
in
outs
retf
scas
adc
retf
mov
xchg
add
loopne
pop
or
mov
sub
dec
je
lahf
inc
or
movs
stos
push
gs
inc
jecxz
push
push
or
mov
pop
or
inc
add
jl
mov
je
pop
add
loopne
mov
bound
cmp
loop
push
and
adc
mov
dec
mov
add
lods
ror
es
mov
shr
add
lea
push
mov
add
call
inc
xchg
arpl
pop
leave
pop
(bad)
sub
or
mov
jae
push
stos
add
mov
sbb
mov
xchg
xchg
jne
or
imul
push
and
test
inc
adc
push
mov
fiadd
adc
lock
add
jae
ror
inc
ja
pop
pop
sub
ret
inc
adc
call
or
dec
iret
out
jmp
cmp
fidivr
call
dec
idiv
sub
int
push
sbb
push
stos
aaa
push
or
ja
pop
sub
xor
jno
xor
and
xor
xor
or
sbb
sub
pop
push
outs
push
mov
ror
daa
in
aaa
repz
dec
dec
cmps
cmp
push
jl
(bad)
sub
cmp
mov
rol
jge
addr16
pop
sub
adc
jnp
jmp
cli
loopne
mov
into
sub
xchg
pop
xor
jl
mov
cs
sub
jbe
sub
add
clc
and
clc
pop
sub
cmp
mov
inc
(bad)
push
jmp
sbb
fld
jmp
stos
clc
in
es
mov
mov
or
sti
jb
push
lea
add
lahf
inc
xor
push
mov
lods
and
cmp
cmp
sub
rcr
mov
nop
cmps
mov
dec
add
enter
adc
mov
push
ficom
inc
imul
fs
sub
loope
dec
fwait
ss
dec
push
or
ror
jmp
dec
sbb
call
or
and
clc
sub
sub
mov
pop
inc
add
xor
cmp
push
fadd
stc
push
and
cmps
mov
rcr
mov
mov
add
adc
jae
cld
cmp
xchg
jle
push
push
sub
xor
mov
(bad)
daa
add
mov
mov
loop
jne
sub
sbb
dec
sbb
jno
ds
or
xor
add
into
das
jb
xchg
or
pop
int3
mov
retf
ret
add
lods
lock
pop
adc
das
sub
shl
push
bound
fwait
inc
ret
xor
jae
ror
or
in
shr
daa
scas
or
xchg
test
loope
out
and
pop
mov
jge
jae
movzx
xchg
push
sahf
sahf
pop
shl
push
adc
in
or
and
jb
push
fwait
mov
es
sub
xor
or
mov
add
sbb
cmp
popa
ins
add
and
jbe
push
add
mov
cmc
int3
mov
ror
inc
mov
imul
push
mov
xchg
fnstenvw
or
sbb
outs
cmp
loop
mov
stos
jno
jmp
push
js
cmps
popa
ficomp
adc
sbb
or
ins
cmp
cmps
scas
js
adc
mov
add
rol
fsubr
add
add
mov
nop
mov
int
imul
icebp
fnstenv
icebp
mov
or
mov
mov
and
js
test
inc
jae
(bad)
xchg
jbe
push
sub
cli
xor
mov
out
lods
dec
and
enter
clc
mov
adc
sbb
jo
(bad)
daa
sub
adc
(bad)
dec
fist
sub
inc
or
rcr
mov
cmp
sbb
sub
xor
fstp
or
sub
add
pop
xlat
mov
out
jne
push
xchg
lock
push
pop
int3
add
mov
mov
mov
mov
push
(bad)
cwde
pop
mov
ins
inc
mov
lahf
push
call
xor
mov
inc
xor
imul
test
xchg
popa
dec
enter
jle
mov
(bad)
push
push
and
cld
iret
inc
jbe
pop
sbb
or
xchg
out
dec
jecxz
ret
inc
movs
adc
movs
adc
rol
add
sub
xchg
dec
or
push
push
aam
jne
psubusb
retf
repnz
add
es
and
neg
push
push
sub
lods
adc
dec
push
scas
(bad)
push
ds
jle
add
add
jmp
add
push
or
add
push
xchg
xchg
das
mov
dec
and
xchg
cmp
fld
push
push
push
jne
add
bound
adc
aad
sbb
push
cmp
mov
(bad)
cs
mov
push
lock
popa
cmp
or
mov
out
int3
mov
or
(bad)
test
stos
adc
mov
inc
adc
mov
xor
jb
iret
push
cmps
mov
js
ret
or
mov
in
mov
stos
pop
jmp
cmp
dec
bound
sub
cmc
ins
stc
sbb
imul
js
es
dec
xchg
dec
pushf
add
jmp
popf
aam
(bad)
and
pop
out
jo
enter
xchg
xchg
pushf
adc
popf
and
pop
push
push
adc
mov
add
xlat
xor
mov
retf
and
inc
adc
mov
hlt
inc
mov
pop
fnstsw
call
inc
cld
dec
or
dec
sub
ins
and
nop
mov
or
call
iret
test
rep
aam
push
data16
sahf
adc
mov
add
push
stc
aaa
push
sbb
sub
outs
shr
sub
mov
daa
cmp
xor
mov
pop
ficomp
xchg
shr
sub
add
jle
test
mov
call
cmp
loopne
jne
and
inc
cmp
fidiv
sahf
(bad)
les
outs
icebp
xchg
imul
add
aas
ret
xor
dec
enter
rol
pop
pop
int3
xor
in
int
popa
fadd
push
cmp
js
shl
(bad)
inc
xor
lea
jl
xor
mov
inc
ins
mov
push
pop
inc
call
pop
lock
pop
add
jmp
mov
add
add
push
imul
fisub
into
je
or
inc
js
adc
push
or
cmps
sbb
sub
(bad)
sti
jmp
push
sub
mov
pop
movs
sub
shl
mov
mov
pop
add
and
les
ret
or
pop
bound
or
dec
mov
jmp
pop
rol
sbb
rcl
jae
shl
or
jb
loope
mov
loope
add
mov
ret
arpl
inc
sbb
outs
ret
(bad)
jns
inc
out
add
enter
adc
shr
je
js
rol
repnz
pop
jne
adc
(bad)
xchg
push
adc
mov
in
mov
jge
push
cmps
popa
dec
lds
ror
stos
inc
jno
push
mov
push
(bad)
mov
push
pop
mov
adc
mov
sbb
xor
fimul
push
jcxz
sub
jb
adc
mov
sbb
rcr
in
inc
stos
mov
jmp
cmp
push
pop
inc
rcl
push
sub
(bad)
mov
out
add
mov
xchg
or
inc
xor
int3
inc
jecxz
(bad)
xor
test
push
cmp
popa
jae
xor
loope
arpl
test
test
xchg
test
inc
lea
add
ss
mov
lds
ret
or
rol
out
lods
xchg
ret
test
mov
cmp
ins
dec
cmp
jbe
mov
lock
clc
push
bound
pop
ins
aam
dec
mov
jecxz
dec
daa
jmp
jb
push
dec
push
cmps
test
push
in
pop
or
xchg
jns
sbb
pusha
shr
cld
aaa
movs
sub
nop
fild
sub
xchg
cmp
dec
stos
test
cmc
push
fsub
loop
in
or
mov
(bad)
rcl
jle
or
call
sbb
xor
or
jae
and
gs
and
add
daa
cmp
test
or
jmp
pushf
movs
sbb
bound
lock
jmp
push
test
xchg
mov
push
dec
sbb
and
into
lods
aam
and
ret
push
lods
xchg
lods
icebp
fdivp
push
pushf
or
ror
retf
call
enter
js
loope
push
and
shl
ins
jmp
ins
repz
mov
sar
pop
cli
pop
sub
stos
mov
add
sbb
sub
imul
scas
and
xor
and
or
sar
pop
jo
xchg
loop
jb
cmp
lods
add
cmp
cmp
(bad)
pop
mov
inc
pop
add
je
test
xchg
pop
jbe
cmp
je
int3
(bad)
mov
push
add
sub
xor
mov
pop
xlat
cli
pop
shl
sub
je
jnp
mov
cmp
dec
inc
call
cmp
inc
and
mov
inc
cmp
cmp
loopne
ret
pop
xor
sub
aam
push
push
sbb
in
ss
leave
fsub
fmul
sub
dec
in
jae
jmp
add
xor
rcr
psadbw
cmp
push
xchg
xor
bound
inc
js
out
scas
jne
pop
cmp
sub
aas
jae
dec
sbb
or
inc
mov
in
mov
out
je
pop
sbb
add
sbb
imul
sub
push
inc
add
in
add
cmp
std
sbb
inc
es
(bad)
je
sub
dec
adc
or
sub
pop
xor
cdq
(bad)
shl
mov
push
sbb
fs
popa
and
je
and
dec
xor
lahf
mov
fdivr
ja
(bad)
jnp
loope
xchg
jbe
gs
push
adc
add
or
sbb
mov
shl
cmps
mov
inc
or
pushf
inc
jle
repz
sbb
sbb
enter
add
int3
call
movs
repz
jnp
cmc
cdq
jmp
and
push
jmp
sub
mov
push
es
ret
xlat
clc
adc
adc
adc
or
pop
and
add
jae
jmp
add
or
test
test
or
or
fstp
jp
dec
dec
dec
out
aas
nop
sub
or
jne
dec
pop
add
jecxz
adc
add
adc
dec
jo
or
stos
and
in
icebp
add
daa
stc
and
pusha
(bad)
push
je
push
sub
repnz
push
adc
mov
pop
cmp
je
or
dec
hlt
ja
je
das
clc
ins
and
sub
or
inc
stos
mov
imul
push
ja
adc
xchg
or
test
jns
lea
or
movs
das
adc
cmp
sti
retf
pop
mov
push
mov
sbb
jmp
and
cmp
adc
daa
and
and
dec
cmp
push
fisub
(bad)
out
(bad)
mov
jle
and
std
mov
arpl
add
mul
push
or
dec
add
push
push
sbb
mov
push
push
sbb
fdiv
jmp
or
jmp
cmp
pop
adc
shl
pop
cmp
mov
sbb
cmp
adc
inc
adc
mov
xchg
ss
and
cmp
movs
xchg
mov
dec
jne
jmp
add
push
pop
jo
add
adc
dec
lds
adc
sbb
in
xchg
push
add
adc
add
sub
and
add
inc
cmpps
popa
inc
std
clc
jbe
cmps
rol
je
jnp
ja
dec
ss
inc
xchg
xchg
imul
es
or
push
jle
jmp
add
(bad)
sbb
and
sub
jle
xor
jp
xchg
mov
sbb
push
push
in
xor
push
xchg
xchg
cld
cmc
sub
test
cmps
enter
fist
mov
mov
lods
mov
xchg
bound
adc
cwde
test
jl
jl
ss
mov
pop
sahf
or
push
js
sti
push
mov
mov
pop
leave
sub
mov
jmp
popa
dec
adc
mov
xchg
outs
xor
js
xchg
add
or
inc
int
mov
aas
gs
adc
sub
enter
dec
adc
(bad)
inc
pop
les
into
lods
sbb
push
pop
test
pop
or
push
add
pop
adc
cmp
xchg
pusha
test
mov
sbb
mov
add
sub
rcr
push
jb
sub
or
jo
adc
jne
and
cmp
in
push
mov
add
ins
pop
add
adc
mov
xor
jae
xchg
push
es
cmp
sbb
mov
js
sbb
mov
js
ret
mov
mov
cmp
in
mov
nop
mov
call
xchg
adc
adc
cdq
xchg
mov
jge
add
push
adc
and
outs
push
pop
xor
jmp
jmp
movs
xchg
xchg
scas
pop
fbstp
push
pusha
add
inc
bound
push
cmp
clc
sbb
sub
dec
lods
mov
pop
xchg
mov
mov
xchg
xchg
push
dec
popf
push
mov
inc
jmp
pop
push
mov
movs
xchg
(bad)
jmp
and
push
dec
call
and
jne
fs
adc
in
icebp
and
pop
cmc
cmp
add
xor
xchg
enter
and
push
in
mov
fs
int
push
mov
sti
inc
inc
add
jmp
test
add
xchg
push
in
jne
push
mov
cmp
ret
mov
mov
test
in
sub
lock
out
push
cmps
jge
sub
icebp
push
and
fs
retf
lock
mov
inc
sub
movs
js
pusha
aaa
mov
jmp
aaa
xchg
adc
dec
call
inc
(bad)
xchg
mov
pop
inc
imul
push
lods
or
mov
fcom
mov
sbb
dec
(bad)
test
mov
xchg
xchg
mov
sbb
aam
lea
push
pop
cwde
xor
aam
test
imul
push
ret
pop
xor
and
xchg
add
nop
dec
shr
adc
inc
sahf
adc
pop
sbb
jo
pop
push
ins
push
outs
rcr
cmp
add
add
(bad)
or
js
mov
and
and
mov
and
xor
sub
lock
mov
jmp
sbb
pusha
lock
mov
or
out
dec
(bad)
leave
cmc
sbb
sbb
adc
xor
loopne
fcmovb
rol
mov
pushf
add
mov
push
push
xor
pop
or
jmp
mov
shl
jae
les
sub
push
xchg
sub
cmp
jnp
jl
dec
adc
nop
inc
pop
loopne
das
adc
cmp
xor
jne
cli
xor
push
jns
push
inc
push
dec
xchg
inc
jmp
pop
pop
adc
jg
xchg
jle
inc
inc
hlt
add
push
pop
push
or
stc
dec
cdq
sbb
es
jl
mov
out
push
ss
or
adc
mov
sbb
add
or
sub
dec
jecxz
or
xor
push
clc
mov
ret
movs
jb
or
or
cmps
jns
or
adc
imul
jo
je
cmp
and
dec
enter
jbe
push
into
inc
adc
jne
sbb
mov
jb
(bad)
(bad)
sbb
pop
imul
retf
pop
adc
mov
lods
or
or
cdq
mov
and
push
adc
repz
add
fld
cmps
adc
xor
dec
jno
sbb
sub
add
or
jne
add
add
mov
or
inc
ss
push
push
pusha
xchg
mov
cmc
inc
mov
test
stos
pop
test
ret
dec
mov
pop
cmp
rol
sub
adc
dec
lock
(bad)
and
mov
xor
sbb
adc
sbb
mov
xorps
sbb
nop
add
dec
or
imul
adc
jp
sub
int3
or
xchg
loopne
adc
sti
xchg
jne
mov
sub
movs
jmp
xor
mov
inc
add
and
lock
pop
and
push
pop
out
adc
fdivr
mov
sbb
lods
sbb
push
xor
sub
pop
call
fld
and
sbb
push
and
pusha
xchg
enter
sbb
jl
mov
inc
and
xor
mov
and
dec
inc
pushw
in
rol
and
sub
je
xchg
cmp
gs
or
std
ins
aam
das
js
jne
push
pop
pop
mov
or
adc
mov
icebp
inc
or
xchg
push
inc
sbb
mov
mov
inc
jne
cdq
mov
adc
(bad)
xor
or
add
aam
adc
bound
and
into
xchg
sti
adc
push
inc
and
xor
rcr
mov
inc
sub
dec
imul
js
fdivr
push
lea
scas
mov
push
into
shr
mov
shr
mov
push
adc
pop
or
je
or
or
pop
jb
pop
and
imul
pop
dec
fmul
sub
stos
sbb
(bad)
xchg
inc
pop
or
inc
adc
sti
scas
pop
dec
loope
dec
and
mov
add
push
retf
or
je
inc
fs
xor
cli
cmps
mov
or
cmp
or
push
or
add
sbb
pop
ds
inc
jecxz
ins
mov
adc
icebp
rol
loop
retf
xor
mov
or
add
in
stos
mov
push
data16
sbb
inc
push
pusha
dec
inc
imul
sbb
and
imul
push
lods
mov
loopne
inc
shl
cmps
and
sub
jno
jg
pop
out
outs
xlat
icebp
(bad)
push
bound
adc
push
jo
rcr
mov
pop
test
push
dec
outs
push
mov
add
mov
sbb
dec
test
xor
retf
enter
ins
ret
mov
sbb
sahf
xor
mov
jno
ret
push
div
adc
test
sub
inc
add
(bad)
and
pop
test
rcr
call
dec
sti
retf
sbb
jae
pop
(bad)
nop
shl
mov
dec
push
or
or
adc
ds
mov
call
cmc
inc
cli
dec
shl
pop
jmp
ror
push
mov
jecxz
ror
adc
movs
fmul
mov
or
mov
adc
xchg
push
stos
mov
xor
js
or
retf
dec
and
je
mov
ror
sub
not
sub
jbe
loop
adc
or
sbb
stc
dec
jl
add
and
cld
dec
push
push
sub
sub
cmps
lds
ja
or
lea
std
sbb
test
bound
add
rcr
pop
push
movs
xor
inc
jbe
or
mov
aad
add
cmc
sar
sub
inc
stos
sbb
mov
cs
push
iret
push
mov
pop
add
fist
test
mov
test
shl
cld
add
and
in
cmp
jle
sbb
jnp
cmp
call
clc
or
scas
iret
cmp
inc
adc
int
jo
loopne
add
xor
sub
mov
rcl
inc
data16
inc
es
pop
pop
dec
dec
mov
push
add
fdivrp
enter
sub
ret
je
scas
cmp
rcl
je
or
xor
pop
popa
fsubr
enter
jo
mov
call
shr
cmp
adc
push
xchg
ret
mov
push
in
inc
mov
cmp
push
mov
and
ficomp
xchg
xchg
pop
fs
mov
and
or
pcmpgtw
gs
sti
inc
ret
lgdtd
jmp
repnz
inc
and
jp
inc
mov
ret
and
push
ins
push
movs
imul
pushf
and
adc
loopne
jl
pop
addr16
fadd
fistp
stos
je
xor
dec
sub
jmp
add
das
jae
push
sbb
adc
jge
adc
movs
inc
or
into
add
jne
pop
or
push
movzx
add
scas
sbb
lock
adc
retf
stos
sldt
add
loopne
adc
jg
dec
fmul
fs
add
or
inc
in
loopne
add
cmps
cs
push
(bad)
sbb
add
and
pop
lock
lods
loop
inc
cmc
xchg
loopne
sahf
(bad)
out
xor
xchg
daa
mov
outs
add
pusha
sbb
xor
pop
icebp
add
mov
iret
retf
add
iret
inc
push
repz
lock
lock
je
dec
or
push
add
sti
cmp
je
inc
and
push
ss
rol
pop
adc
lods
cmp
adc
jmp
push
push
or
loop
jecxz
push
aaa
retf
push
cld
bound
mov
jns
sti
inc
mov
sub
sub
adc
icebp
cmp
(bad)
xchg
pusha
mov
pushf
fisttp
inc
push
cmps
sti
xor
pop
xor
lock
shl
mov
xor
jmp
add
inc
mov
gs
shr
and
das
mov
jns
push
or
sub
dec
std
add
rol
and
or
adc
add
cmp
rol
xchg
inc
cmp
mov
aam
mov
loopne
shr
mov
mov
mov
mov
adc
test
shr
aas
adc
xchg
mov
test
pop
push
out
mov
call
test
outs
jb
cli
mov
mov
mov
nop
xchg
add
xchg
pop
ficomp
mov
inc
jae
mov
and
ret
mov
aad
mov
push
pop
xchg
dec
jmp
jno
mov
mov
mov
and
jmp
cmp
dec
(bad)
cmp
imul
mov
mov
nop
inc
cmp
mov
inc
arpl
cmp
popa
shl
sbb
sbb
add
das
adc
dec
(bad)
pop
mov
pop
gs
adc
int3
xchg
mov
push
or
es
pop
mov
(bad)
sbb
mov
adc
push
add
mov
add
pop
retf
inc
push
or
cld
outs
movs
lahf
xchg
cmp
ror
inc
xchg
rcr
mov
add
popa
jb
xchg
faddp
not
ins
or
adc
out
je
lea
rcr
xchg
xchg
add
jle
mov
mov
je
mov
ret
into
je
or
add
add
sbb
sbb
out
test
into
les
lods
aas
add
add
test
jp
inc
mov
fs
(bad)
xor
test
xor
ins
(bad)
cmp
mov
sbb
add
pop
test
add
je
xchg
jae
xor
icebp
fsub
dec
loope
fisubr
mov
jo
or
inc
test
jns
push
and
loope
fist
fist
ins
ins
daa
jle
bound
mov
pop
test
gs
jl
jmp
push
movs
push
test
mov
cld
int
rol
mov
xchg
aam
jne
inc
test
mov
push
sub
cmp
adc
sub
or
(bad)
(bad)
ins
adc
(bad)
sbb
clc
jp
jnp
sar
push
pop
loopne
dec
(bad)
cli
and
jae
sub
pop
ret
fdiv
and
push
xchg
push
jo
pop
or
jb
adc
or
sub
js
sbb
xor
fadd
sbb
cmps
add
ins
adc
push
lods
lods
push
sub
or
lock
push
fiadd
(bad)
pop
add
mov
dec
sub
adc
popa
adc
xor
jmp
sbb
or
or
cmc
add
out
sub
or
out
add
out
enter
test
loopne
lock
and
pop
xor
cmps
push
mov
clc
std
out
cmp
mov
and
arpl
aas
mov
in
inc
inc
test
enter
push
and
add
push
test
test
jns
pop
mov
leave
push
mov
test
test
mov
adc
mov
jge
fcomp
inc
test
or
inc
cli
dec
sbb
imul
fwait
shr
xchg
xchg
and
int3
push
add
xor
repz
sbb
arpl
jp
cmp
test
shr
ins
lea
(bad)
push
adc
mov
rol
dec
pushf
sub
xchg
inc
movups
adc
or
jmp
push
sbb
xchg
adc
and
cmp
out
inc
(bad)
ss
leave
call
scas
popa
and
xchg
adc
fist
hlt
cmp
outs
add
nop
popa
(bad)
outs
push
add
xor
stos
jne
jae
dec
inc
cmp
jmp
add
dec
inc
sbb
adc
dec
stos
sbb
or
das
push
out
adc
dec
push
sub
sar
(bad)
(bad)
cmc
mov
pop
rcl
inc
push
mov
mov
js
xor
mov
add
pop
leave
ja
sbb
inc
rol
mov
fnop
add
fwait
xor
jecxz
pop
jo
xchg
(bad)
jbe
and
or
xchg
aam
pop
push
in
adc
or
inc
es
and
into
jmp
adc
push
mov
adc
add
jecxz
inc
push
sub
sub
test
add
add
gs
lock
lods
sahf
cmps
adc
dec
(bad)
ins
neg
xor
adc
adc
pusha
xchg
test
cli
mov
xchg
mov
inc
and
mov
or
aaa
retf
jmp
push
jge
sbb
loope
sub
push
add
pop
mov
bound
gs
add
push
jg
(bad)
adc
imul
adc
mov
sbb
mov
test
push
mov
mov
push
or
(bad)
cmp
mov
inc
jp
retf
(bad)
lock
dec
and
inc
pop
pop
jmp
dec
dec
int
out
neg
add
(bad)
or
or
fiadd
xchg
jg
daa
pusha
adc
adc
push
je
add
sub
imul
rol
and
fild
cmps
cmp
test
mov
xor
mov
repz
test
andnps
inc
xor
stos
jo
pop
imul
mov
push
xchg
push
xor
shl
cmp
cmps
inc
jo
inc
inc
es
xchg
xor
aad
inc
popa
push
ret
cli
push
push
add
ins
mov
inc
repnz
pop
cwde
pusha
jnp
push
test
jnp
dec
add
call
jne
dec
lea
cwde
inc
or
dec
pusha
iret
push
or
cmp
loope
or
lock
popa
out
sbb
sbb
push
or
and
sub
or
popa
cmp
sub
cmps
nop
add
push
lock
mov
push
and
adc
jmp
or
cmps
mov
neg
push
xchg
popa
and
mov
or
test
out
xchg
inc
sbb
and
aam
retf
dec
movs
inc
push
or
cmp
js
dec
cmp
cmp
mov
cmp
daa
mov
cmps
shl
into
mov
push
inc
add
adc
or
mov
sbb
mov
inc
call
rcl
jns
cmp
pop
pop
adc
push
fist
out
mov
xchg
and
(bad)
inc
push
add
pop
inc
or
bound
cmp
xchg
sbb
sub
scas
rol
sbb
cli
or
jno
and
and
inc
mov
dec
mov
adc
movs
je
call
movs
mov
sbb
sar
cmp
fimul
add
or
push
pop
add
add
ins
push
repz
jnp
cmp
enter
mov
dec
cmp
adc
dec
es
inc
or
in
mov
inc
mov
xchg
pop
and
inc
adc
or
call
je
mov
adc
jb
cmp
push
mov
leave
push
inc
and
mov
add
and
and
or
test
xchg
inc
int3
or
sub
push
daa
in
pop
fadd
cmp
cmps
push
fstp
pop
fst
stos
shl
xchg
scas
dec
nop
fwait
ins
or
lods
lock
add
xchg
add
popa
gs
xchg
jl
sldt
add
add
loop
mov
js
in
outs
es
push
add
mov
xor
sti
sbb
lods
(bad)
retf
jne
push
push
push
pop
and
dec
or
jmp
shr
mov
add
jne
xchg
pop
dec
cwde
es
push
repz
add
sbb
add
in
rcl
push
xor
xchg
mov
cld
fsubr
jno
call
mov
stos
imul
outs
pop
inc
or
adc
movs
mov
cmp
loop
xor
inc
inc
and
mov
mov
add
or
sbb
and
in
rcl
loope
dec
in
mov
sub
sub
(bad)
cwde
jp
test
jmp
bound
mov
cld
push
inc
loopne
or
movs
jne
add
add
loopne
or
sbb
fwait
les
test
lock
jge
xor
sub
les
xor
fld
stos
fwait
sbb
loop
xchg
push
fst
mov
sbb
leave
cwde
pop
mov
or
inc
(bad)
stos
fdivr
xor
(bad)
sbb
pop
or
stc
out
jmp
lds
inc
movs
jns
or
and
adc
xchg
test
sti
test
fmul
ret
cmp
add
sbb
int
pop
xor
mov
shr
dec
mov
cmps
sub
adc
fwait
shl
sub
cmp
pop
mov
add
push
fild
adc
mov
test
stc
jo
test
stos
gs
loopne
sbb
cwde
inc
shl
mov
push
cwde
mov
out
test
aam
(bad)
hlt
test
lea
mov
shr
jle
jne
jg
xor
cmps
and
mov
mov
ret
sub
test
and
(bad)
icebp
xor
movs
pusha
not
pop
mov
mov
sbb
call
or
test
fdivr
jns
add
mov
sbb
cmps
xchg
das
pop
xor
add
push
mov
mov
mov
xor
cmp
sbb
retf
ss
fstp
clc
jmp
arpl
and
enter
mov
outs
adc
jne
neg
retf
enter
add
ss
fldcw
dec
xor
mov
nop
pop
lds
cmp
cmp
mov
stos
pop
rcl
nop
inc
push
dec
or
rcl
pushw
inc
scas
jge
js
jle
loope
push
dec
call
jno
sti
mov
jle
push
sar
cmps
or
sub
sar
out
pop
faddp
mov
cmp
gs
xacquire
fwait
sbb
in
cmp
test
mov
dec
pushf
mul
push
les
mov
ret
add
cmc
je
jns
mov
jmp
or
xchg
retf
in
mov
xor
xor
fnstenv
dec
and
and
jb
fnstcw
or
(bad)
sub
sbb
aas
or
lea
fs
scas
lahf
xor
inc
cmp
je
mov
scas
lds
enter
(bad)
(bad)
cmp
pop
stos
or
sbb
mov
push
(bad)
push
mov
adc
(bad)
mov
stos
and
jnp
stos
add
mov
out
xor
dec
cmp
rcr
fwait
pop
add
and
popf
jo
add
jns
add
or
xor
je
push
add
cld
and
(bad)
(bad)
sbb
push
add
and
xchg
sub
popf
mov
xor
(bad)
stos
mov
popa
or
jne
mov
cmps
lahf
or
cdq
sbb
and
or
push
jns
sub
in
push
inc
add
sbb
dec
adc
or
mov
test
call
xor
outs
inc
lea
xchg
lea
push
cwde
inc
pop
xor
xchg
pop
mov
cmp
repnz
ror
jp
cmp
fs
daa
pop
mov
mov
pusha
test
sbb
mov
ss
outs
and
push
cmp
mov
test
inc
push
or
jo
aam
inc
pop
inc
aaa
mov
je
movs
shl
push
add
imul
push
mov
push
jl
scas
lock
jne
call
inc
mov
lods
push
mov
pop
int
jo
xor
dec
pop
push
sub
(bad)
pusha
cmp
(bad)
es
mov
mov
push
mov
mov
lahf
and
adc
add
test
cmp
pop
and
inc
je
add
sub
enter
or
clc
inc
push
scas
outs
xor
dec
add
in
lock
add
jge
ss
xchg
add
push
add
push
jns
iret
repnz
movs
test
outs
(bad)
xchg
call
rol
push
bound
pop
loope
or
data16
fwait
clc
inc
pop
push
dec
push
mov
mov
pop
inc
mov
sub
nop
bound
jecxz
nop
mov
rcl
fs
pop
rcl
add
pop
xor
sub
mov
inc
xchg
dec
push
scas
sub
or
inc
inc
mov
pop
mov
and
mov
mov
adc
push
neg
test
pop
repz
push
sub
ss
test
xchg
bound
add
fisub
dec
pop
pop
cmc
or
cmps
jno
cmp
retf
ja
cs
and
xlat
pusha
mov
cmp
fcos
sub
push
neg
push
sub
inc
sbb
je
or
ret
inc
xor
sbb
jmp
cmp
rol
gs
movs
adc
stos
pusha
pop
push
outs
stos
sub
jns
pop
mov
pushf
push
pop
pop
ss
and
mov
shl
adc
mov
xchg
cmp
adc
outs
je
push
mov
push
bound
mov
cmp
jp
xor
or
loopne
sbb
sbb
adc
popa
adc
xchg
rol
sti
jle
adc
jbe
push
jbe
push
imul
fs
test
jb
sbb
pandn
adc
or
xchg
add
or
push
loopne
jmp
dec
mov
sub
mov
hlt
sub
pop
int
inc
sub
cmp
or
xchg
pop
adc
inc
push
out
push
or
out
mov
dec
bnd
push
inc
sub
xor
cmps
push
call
dec
loop
jne
sub
fs
push
dec
add
push
adc
pop
rcl
shl
aam
mov
or
dec
enter
jnp
inc
cmps
add
mov
push
call
or
outs
popa
push
fdiv
cmps
loope
je
pop
ja
mov
popf
lods
mov
push
sbb
fmul
cli
and
adc
dec
inc
mov
or
inc
rcl
fst
sub
jns
cmp
and
push
and
(bad)
xchg
(bad)
inc
lock
pop
clc
cmp
add
cmp
fmul
sub
push
xor
sub
and
mov
fisttp
cwde
cmp
stos
daa
sbb
rol
mov
dec
push
adc
jbe
mov
sbb
icebp
dec
sar
or
push
push
out
xchg
or
rcr
in
test
rcl
lock
mov
shl
gs
inc
(bad)
push
aam
xor
sbb
mov
daa
ret
std
pop
mov
mov
dec
(bad)
jmp
or
and
xchg
jno
nop
ss
push
cwde
popf
cmp
and
adc
mov
out
pop
push
cs
or
int
pop
retf
loope
xor
adc
xchg
xor
lea
stos
dec
push
and
push
(bad)
test
dec
dec
cmp
ins
xchg
mov
aas
mov
jecxz
and
jae
adc
xor
(bad)
push
and
mov
jmp
retf
out
mov
pop
jne
push
xchg
add
das
mov
jnp
iret
jae
popa
sbb
and
lea
mov
mov
add
and
mov
or
popf
lock
inc
add
int
jecxz
xor
push
xor
test
xchg
(bad)
dec
dec
or
add
or
sub
pop
es
xchg
mov
inc
or
and
es
add
enter
jbe
test
push
pop
or
xchg
sar
xor
pop
add
mov
mov
outs
pushf
in
inc
cmp
les
rcl
sub
sahf
out
shr
xor
or
fist
xor
cmp
or
rol
or
push
or
or
in
mov
dec
(bad)
ins
xchg
or
sub
pop
dec
add
test
mov
sbb
js
pusha
jo
cmp
scas
jp
sahf
and
jo
dec
dec
mov
push
popf
inc
push
pop
add
das
js
aas
cs
lea
mov
mov
nop
sub
(bad)
jmp
inc
pop
dec
lods
adc
sbb
sbb
add
xor
add
sub
int3
mov
aas
scas
push
test
rcr
popf
in
shl
push
es
fiadd
jge
popa
sub
xchg
pop
xchg
ins
popf
xchg
movs
and
mov
push
inc
adc
xor
pop
jle
pop
or
inc
popa
sbb
jnp
retf
in
ret
test
xchg
nop
xchg
cwde
pushf
mov
popa
mov
xor
inc
or
mov
or
aam
xchg
retf
in
fsub
in
in
jb
pop
cs
clc
cld
xchg
retf
movs
repnz
add
or
jb
pop
cs
sbb
cs
retf
in
sub
xor
jb
pop
cmp
inc
pop
cs
retf
dec
dec
push
push
pop
retf
in
mov
mov
jo
js
cmps
push
out
add
inc
inc
cmp
push
stos
add
aad
xchg
mov
push
popa
jmp
sub
lea
xchg
sub
xchg
in
cmc
sar
dec
iret
fld
add
mov
pop
jae
mov
and
and
add
inc
adc
imul
push
push
and
call
inc
jne
dec
xor
sbb
or
jmp
pop
enter
or
fstp
(bad)
fs
add
xor
xor
cmp
cwde
mov
aas
sub
mov
fldcw
rep
lods
sbb
dec
xchg
cmp
xchg
popf
push
inc
int
aam
add
sub
jne
outs
je
add
pop
retf
je
adc
js
push
xchg
xchg
add
and
add
ret
je
ror
jo
add
lea
adc
out
add
xchg
xor
enter
rcr
sbb
pop
test
pusha
(bad)
sbb
repnz
enter
sahf
add
mov
leave
or
enter
cmp
cmp
push
inc
cmps
push
sub
sbb
and
(bad)
jle
cwde
push
mov
dec
into
dec
test
push
sbb
lea
sub
mov
sbb
mov
scas
sbb
loopne
mov
lods
mov
jnp
shl
and
or
push
or
cmp
or
pop
les
cs
push
and
into
mov
and
xor
add
cs
(bad)
jno
jne
jae
call
test
movs
les
fsub
(bad)
outs
pusha
mov
cmp
call
jmp
xor
imul
jecxz
or
sub
or
ins
or
mov
or
xchg
(bad)
sub
mov
hlt
and
dec
push
inc
xor
dec
push
or
movs
add
shl
retf
cmps
call
inc
inc
xchg
dec
nop
xor
lods
sub
aam
fisubr
jle
push
iret
xchg
push
inc
and
inc
sbb
sahf
shl
dec
mov
sbb
jbe
jne
inc
mov
adc
inc
cmp
pop
xchg
out
push
or
inc
or
sub
dec
movs
dec
mov
jo
iret
push
jmp
mov
sub
add
stos
inc
or
inc
push
cs
push
dec
push
ins
mov
adc
add
out
adc
popf
call
jge
add
sbb
sbb
cmp
inc
xchg
mov
or
adc
xor
and
and
cmps
pushf
inc
jmp
add
lea
daa
fisttp
outs
cwde
push
hlt
push
rol
mov
cs
loopne
push
cmp
sbb
ss
dec
inc
push
mov
push
pop
adc
or
add
sbb
les
or
lock
inc
add
enter
sbb
xchg
xor
pop
call
sub
and
iret
inc
ds
add
cmp
inc
add
jmp
cmp
jnp
dec
sbb
cmp
push
xor
lea
cmp
sbb
adc
and
cmp
ja
cmp
arpl
ins
jl
into
sub
mov
fdiv
push
jne
ret
test
dec
add
dec
jno
or
cli
xchg
cdq
sub
mov
shr
sub
test
cmp
mov
enter
mov
xchg
sbb
rol
or
mov
add
push
popw
ds
push
adc
pushf
pop
push
xor
mov
nop
mov
xchg
out
jle
scas
daa
movs
cli
in
ja
pop
xchg
popa
fstp
in
and
inc
bound
mov
dec
adc
pop
add
jo
pop
push
and
push
adc
cmp
xchg
mov
cdq
js
cs
out
mov
mov
sub
xor
es
hlt
cmp
je
arpl
pop
xchg
adc
int3
mov
push
(bad)
jne
cmps
inc
mov
fcomp
aas
ins
push
mov
adc
xchg
jmp
jmp
into
int3
sahf
and
neg
mov
mov
or
sub
imul
cmp
lock
les
xchg
pop
cmp
(bad)
(bad)
jns
inc
or
lods
nop
rcl
ss
mov
cmp
jo
push
adc
enter
pop
test
push
cmps
pop
sbb
(bad)
jne
inc
sbb
or
cmp
sub
add
pop
xchg
cmp
jecxz
fwait
inc
cmp
pop
add
ja
scas
sub
mov
dec
cmp
xchg
push
hlt
mov
test
dec
xor
pop
movs
and
lea
and
inc
cbw
adc
xchg
fmul
add
xchg
sub
or
ret
popf
or
shl
gs
cmp
in
add
fwait
dec
(bad)
clc
push
mov
or
inc
inc
jb
popf
nop
sbb
into
pusha
adc
mov
mov
(bad)
inc
stos
add
cmp
pop
jmp
call
aam
adc
inc
or
test
ins
adc
xchg
or
lea
add
(bad)
aad
(bad)
adc
jne
push
or
(bad)
push
mov
ret
adc
inc
retf
dec
add
and
sahf
sbb
or
sbb
mov
dec
xchg
aas
pusha
adc
add
(bad)
push
mov
je
cmp
movs
add
pop
cmp
sbb
js
imul
ins
pop
jo
cld
sub
test
xchg
adc
mov
mov
mov
push
test
pop
cmps
xchg
mov
ret
mov
test
pop
dec
push
adc
in
and
sub
in
in
or
xchg
and
test
rcr
sbb
dec
call
inc
adc
add
dec
test
mov
inc
nop
je
sbb
ss
push
dec
mov
fs
inc
iret
and
xchg
jbe
int
pop
add
jle
inc
das
mov
jbe
mov
xchg
mov
loope
jo
(bad)
mov
inc
call
jnp
mov
inc
xor
add
lock
jmp
cmp
js
push
cmp
je
dec
xor
add
sbb
jne
or
add
xchg
add
aad
inc
and
fld
push
add
paddsb
pop
pop
(bad)
adc
(bad)
cwde
dec
dec
jl
repnz
or
dec
nop
cmp
jns
add
or
xchg
cmps
adc
pop
sbb
jle
cmps
test
(bad)
movs
dec
movs
xchg
jg
data16
shr
call
das
dec
jecxz
cwde
push
xchg
cdq
and
mov
add
xchg
or
add
je
(bad)
add
adc
sub
and
enter
je
test
rcl
jp
xchg
sahf
mov
add
mov
sub
rcl
jnp
sbb
adc
jno
and
js
pop
or
adc
push
cmp
cmps
stc
jne
pushf
and
push
pop
sub
sub
loop
retf
or
test
and
push
pop
cmp
inc
inc
or
xchg
inc
loope
outs
sub
cmp
test
pusha
pop
je
mov
(bad)
inc
adc
aad
test
jmp
jl
add
out
test
pop
jle
push
or
sbb
(bad)
mov
or
mov
xor
fisttp
daa
sbb
sub
inc
push
sub
(bad)
pop
mov
cmp
cmp
adc
xchg
jo
push
mov
sbb
xchg
icebp
push
loope
aaa
pop
jge
push
cwde
dec
inc
pop
xchg
add
cdq
mov
leave
ror
push
mov
je
mov
and
iret
sbb
test
fnstcw
shr
pop
aad
add
addr16
and
cmp
and
call
rdtsc
push
mov
xchg
sub
jle
retf
or
mov
push
push
fadd
jne
or
and
in
cmp
adc
shr
sbb
fwait
add
mov
mov
sbb
adc
jecxz
add
les
pop
mov
imul
inc
sbb
test
cmc
mov
sub
pop
adc
pop
sub
fadd
loopne
push
lock
call
jmp
daa
add
adc
cmp
push
and
es
mov
sbb
mov
xor
mov
test
add
pop
lahf
fisttp
add
push
push
mov
or
test
mov
pusha
out
dec
clc
jp
or
(bad)
test
pushf
dec
xor
addr16
lea
pop
jmp
cmp
cmp
xor
or
pop
or
and
add
add
xchg
adc
pop
movs
add
and
cmp
cmc
xor
addr16
adc
pop
pop
test
add
dec
inc
push
test
xchg
xchg
fst
loop
push
inc
clc
jmp
dec
or
or
js
test
test
xor
pop
push
es
adc
cmp
and
xchg
pop
sub
std
add
lods
mov
stos
push
imul
loope
push
mov
pop
xchg
test
push
stos
sbb
lods
clc
mul
movs
ret
jp
imul
das
(bad)
sar
push
push
inc
jmp
jle
es
mov
jmp
lods
stc
and
mov
cs
in
fsub
pop
and
or
push
movs
and
test
dec
xor
mov
and
sub
or
out
jecxz
fs
inc
sbb
je
mov
or
xchg
jle
pop
add
sbb
add
popa
inc
rol
xchg
mov
pop
adc
mov
xchg
jg
xchg
xchg
xchg
loop
pushf
sub
lea
push
inc
retf
dec
jmp
and
mov
push
out
sub
ins
inc
sar
fadd
sbb
imul
cli
ins
inc
cdq
adc
xchg
icebp
add
cmp
loopne
xor
pop
or
xchg
aad
pop
sar
add
icebp
in
xor
cli
cld
mov
adc
cmp
not
jge
adc
add
ss
adc
into
movs
cmps
add
fsub
inc
adc
(bad)
(bad)
and
lods
test
bnd
cld
push
adc
cmp
mov
mov
cld
lea
and
add
or
sbb
mov
cmp
sub
inc
cwde
push
or
scas
push
mov
ror
mov
sub
jne
(bad)
mov
add
mov
mov
call
inc
mov
cmp
mul
sar
ins
mov
not
or
add
xor
inc
xchg
jecxz
inc
jp
ror
xor
ret
cmp
jae
inc
add
push
push
aam
pop
mov
ret
mov
mov
xchg
mov
pushf
pop
push
push
fsub
shl
dec
jmp
test
and
int3
xor
or
adc
dec
push
int3
jmp
shl
cld
idiv
hlt
ficom
mov
or
lods
fadd
fmul
mov
adc
shl
adc
test
and
in
fcomp
xchg
retf
adc
or
gs
mov
and
jne
pop
mov
retf
loope
or
sub
daa
or
test
nop
mov
out
xchg
push
jne
cld
xor
or
les
int
jnp
mov
pop
jo
mov
xor
push
mov
call
add
sbb
add
dec
je
and
or
es
push
loope
or
sub
mov
in
sub
and
inc
sbb
psrld
push
push
(bad)
jb
jb
fs
or
jecxz
inc
js
add
mov
or
clc
icebp
dec
mov
cmp
(bad)
mov
sahf
add
mov
aas
pusha
adc
pusha
or
pop
cmc
in
add
daa
ja
jnp
sbb
xchg
mov
mov
pushf
fucomi
or
jl
div
adc
test
outs
dec
mov
sub
imul
jl
and
and
and
inc
dec
sar
shl
aam
fidiv
sub
je
cmp
shl
mov
cmp
inc
stos
mov
push
fs
sub
retf
adc
popa
add
and
mov
xchg
jmp
scas
and
cmc
dec
shl
pop
push
in
jg
aam
xchg
jle
stc
pop
add
icebp
test
jp
mov
ret
sub
adc
cwde
(bad)
movs
hlt
aad
in
jp
xor
push
push
or
mov
xchg
sbb
or
mov
adc
jp
adc
inc
outs
jge
in
into
retf
mov
clc
inc
hlt
jae
(bad)
dec
cmps
nop
sub
(bad)
push
in
sub
rol
mov
mov
enter
cmp
mov
push
ja
mov
lods
cli
imul
push
ret
mov
inc
add
sbb
outs
adc
inc
mov
call
enter
or
push
cmp
stos
inc
fmul
jae
or
cmp
sbb
out
fcom
and
ja
pop
in
sbb
and
jmp
sub
addr16
mov
xchg
adc
es
lods
in
fidiv
popf
(bad)
inc
mov
or
mov
cmp
loopne
inc
cli
add
xchg
pushf
or
xchg
das
pop
gs
add
push
call
out
mov
shr
or
jo
in
(bad)
jl
jo
pushf
je
mov
icebp
or
mov
adc
add
movs
hlt
cmp
das
loopne
cs
lods
pop
icebp
push
push
repz
pop
movs
xchg
inc
or
adc
jns
retf
inc
leave
js
sub
test
xchg
mov
mov
jl
iret
xchg
icebp
xor
inc
sub
ins
sbb
jns
(bad)
push
push
and
into
mov
dec
cmps
fwait
dec
in
or
inc
je
dec
jmp
iret
and
sub
mov
stos
rcl
int3
(bad)
nop
nop
add
push
popa
fsubr
shl
call
stc
(bad)
push
test
lods
mov
aam
push
adc
popa
imul
inc
test
loop
and
sbb
(bad)
pop
adc
test
add
add
inc
test
pusha
aas
or
xor
or
ins
out
or
inc
out
es
pusha
outs
cmc
inc
mov
push
movs
xchg
std
test
add
sbb
outs
dec
je
mov
adc
add
push
push
in
pop
test
ins
fs
push
pop
and
cmp
adc
out
fistp
(bad)
push
or
leave
in
ret
push
pop
rcl
popa
push
loopne
push
or
push
repnz
test
test
push
adc
sahf
adc
push
rcl
(bad)
shr
in
loope
or
iret
ficomp
push
rol
pusha
pusha
cdq
rol
push
mov
mov
cmc
mov
lahf
je
(bad)
mov
shrd
add
lahf
and
lock
pop
aad
ss
inc
and
pop
xchg
enter
inc
sub
jmp
xor
pop
jb
inc
(bad)
jle
(bad)
xchg
sbb
rcr
or
dec
adc
pusha
sub
in
mov
sbb
sub
mov
std
ret
movs
and
int3
mov
hlt
movs
pop
jo
dec
add
xchg
xor
rol
stc
push
mov
js
rol
bnd
js
pop
in
push
pop
jge
movs
adc
gs
add
dec
shl
pushf
pop
cdq
cmp
or
dec
mov
dec
cmp
dec
add
jo
loope
out
mov
push
mov
jl
(bad)
jae
inc
in
and
jl
in
adc
mov
pop
call
pop
pop
icebp
pop
dec
sub
cs
aaa
pushf
(bad)
shl
and
js
mov
jns
sahf
mov
push
or
fdiv
outs
or
adc
mov
xor
mov
cmps
pop
mov
push
call
(bad)
or
les
xor
add
or
outs
cmp
and
das
aas
jmp
pusha
dec
inc
xchg
or
aaa
push
or
mov
les
pop
mov
push
rol
les
stos
xor
push
repnz
aaa
hlt
xchg
dec
loopne
or
sbb
mov
adc
push
aas
mov
loopne
mov
mov
in
xchg
jns
dec
in
fimul
add
enter
jecxz
(bad)
and
add
enter
jle
(bad)
pop
(bad)
rcl
mov
push
rcl
lock
dec
add
fiadd
inc
ins
mov
fld
dec
and
add
sbb
nop
cmp
sub
dec
push
dec
in
cmp
fdiv
aad
xor
pushf
out
sub
test
or
adc
cmp
xchg
and
push
sbb
outs
(bad)
jp
mov
fdiv
repnz
pop
inc
lods
and
lock
retf
jle
push
sahf
ins
jle
and
add
or
and
in
fidiv
mov
dec
xchg
out
sbb
dec
in
and
or
movs
or
mov
aam
das
bound
popa
sbb
aam
mov
push
ret
mov
rcl
or
pusha
xchg
xor
add
pop
jl
or
xor
rol
adc
and
add
int3
cmp
xchg
pop
adc
add
js
add
cmp
push
inc
and
outs
pusha
aam
adc
add
mov
add
cli
sbb
sti
or
(bad)
mov
mov
jnp
jnp
es
test
(bad)
cmps
pop
mov
and
inc
mov
movs
fs
add
xchg
mov
cmp
or
xor
dec
sbb
add
stos
mov
or
push
cmp
pop
je
add
dec
in
push
jmp
div
sub
inc
(bad)
pop
test
je
adc
fld
or
cmp
inc
add
ror
rol
mov
adc
out
rcr
ror
inc
leave
pcmpeqw
sub
mov
je
adc
ret
pop
dec
dec
loope
xor
(bad)
pop
adc
mov
inc
jl
neg
or
or
adc
add
adc
stos
dec
enter
pop
ret
push
data16
test
xchg
pop
cmps
aas
lods
ret
movs
adc
mov
xchg
mov
pop
jae
loope
xor
cdq
int3
mov
ret
inc
imul
adc
add
inc
or
or
jmp
dec
stos
sub
jle
dec
push
xchg
enter
cmp
adc
jle
or
push
adc
adc
data16
jbe
shl
or
cwde
or
movs
fist
push
ss
and
sbb
and
test
or
leave
rol
xchg
mov
aaa
or
cwde
dec
add
ins
adc
cmps
cwde
or
(bad)
sub
loopne
repz
add
movs
xor
jne
and
js
inc
adc
sbb
cmp
(bad)
jb
clc
sbb
inc
inc
add
das
lock
mov
fdivrp
fiadd
xchg
push
push
lea
dec
dec
lss
sub
retf
cld
dec
mov
jne
adc
mov
arpl
imul
pop
nop
lea
mov
in
(bad)
xor
std
add
inc
and
sbb
sub
pop
pusha
adc
adc
shl
add
lea
inc
jg
popf
cs
jnp
out
cwde
jmp
sub
push
push
cs
jae
stos
add
lods
cmps
pop
push
sbb
int
das
jo
shl
jl
push
sbb
call
pop
aaa
sub
pop
cmc
add
add
inc
test
dec
cmps
loopne
movs
cmp
sub
adc
leave
push
push
or
mov
pop
xor
cmps
ds
aaa
push
stc
mov
mov
and
(bad)
push
sbb
sbb
dec
push
cmp
push
cmps
pop
inc
loop
push
(bad)
je
or
cmc
in
test
inc
mov
push
pop
or
push
push
push
pop
xor
lock
jb
jbe
or
adc
popf
pop
or
cmp
popa
or
cdq
adc
cmp
xchg
sub
jp
sbb
cli
outs
inc
sar
and
add
jne
pop
adc
scas
sbb
in
xchg
xor
or
sbb
out
pop
push
into
retf
bnd
nop
xlat
adc
call
xor
pusha
test
inc
aas
ss
xchg
sbb
loop
xor
adc
xor
add
or
add
push
jmp
add
jo
cmp
in
or
imul
retf
mov
test
jp
push
inc
jl
pop
pop
mov
sbb
imul
or
call
aam
(bad)
movs
mov
and
mov
cmp
cmp
dec
rcl
jmp
mov
repnz
test
pop
dec
adc
push
push
dec
adc
or
mov
cdq
adc
std
lea
lock
(bad)
push
fcmove
lods
add
ins
inc
scas
shl
mov
jge
int3
clc
inc
dec
arpl
jo
pop
popf
inc
outs
fld
add
lock
rol
(bad)
jb
cmps
jo
cmp
cld
sbb
popf
sti
push
dec
arpl
mov
clc
inc
data16
inc
dec
push
inc
xchg
out
and
sub
mov
hlt
or
push
repz
cmps
or
xchg
xor
das
push
movs
rcl
enter
pop
add
enter
out
stos
icebp
cmp
or
cmc
cs
mov
sbb
fnstsw
add
xor
push
jne
mov
pop
or
jo
lea
sub
ds
nop
or
data16
push
loopne
add
or
mov
jne
call
adc
inc
out
mov
adc
sbb
sbb
inc
rol
into
sub
data16
mov
push
inc
push
pop
or
movs
mov
push
inc
sub
shl
aam
cmp
jmp
ins
add
pop
add
dec
push
push
cmp
gs
je
mov
sub
xchg
and
xchg
mov
imul
or
mov
daa
jnp
mov
add
push
in
cs
or
rol
in
add
sub
xor
mov
sub
inc
sub
cmp
dec
jb
sub
and
sub
retf
pusha
add
jne
out
pop
add
enter
movs
push
sub
jb
push
mov
or
sub
enter
jg
or
nop
cs
sub
adc
adc
push
loop
loopne
add
in
rcl
iret
les
or
push
push
and
mov
jns
bound
sub
xchg
lock
js
xchg
add
arpl
add
xor
mul
fsubr
push
jno
pusha
dec
out
push
pop
xchg
pop
shl
adc
push
jmp
adc
cli
cmp
or
mov
push
outs
xchg
cmps
mov
pop
xor
adc
pop
and
movs
xchg
out
sub
push
int3
add
cmps
jmp
fs
push
adc
pushf
mov
pusha
push
sbb
repnz
mov
sbb
push
(bad)
dec
adc
inc
push
out
or
(bad)
ins
lods
rol
and
iret
dec
dec
sbb
xor
add
rol
or
mov
dec
rcl
or
fsub
pop
clc
shl
clc
xchg
adc
movs
push
and
and
hlt
leave
in
mov
or
aas
cs
clc
inc
inc
xchg
or
rol
inc
repz
rcl
sbb
ja
jnp
add
sub
and
mov
imul
int
sub
inc
in
add
and
xchg
into
mov
dec
movs
rol
cmp
inc
cmp
xchg
xchg
lock
xor
or
mov
loopne
xchg
lods
cmp
cmps
stc
mov
clc
stos
ss
in
inc
dec
inc
iret
push
push
jmp
retf
pop
and
jge
cs
cmp
je
ror
mov
out
ficomp
imul
xor
clc
mov
inc
add
pop
sub
and
clc
ds
add
fisubr
je
sub
retf
neg
test
push
or
mov
push
pop
cmp
ja
add
int
push
and
test
icebp
test
(bad)
shl
jg
ds
out
or
call
jo
and
inc
pop
push
or
or
lock
ror
or
add
sbb
imul
mov
outs
sub
in
test
adc
or
iret
out
xor
dec
(bad)
stc
add
jmp
push
push
retf
add
mov
shl
push
xchg
daa
push
ror
pop
std
loope
adc
fs
je
repz
(bad)
mov
je
push
ins
repnz
push
mov
or
(bad)
je
sbb
ret
cmp
xchg
cld
nop
add
mov
pop
sub
(bad)
cmp
mov
mov
lock
sub
stos
or
out
sub
push
xor
mov
mov
repnz
xchg
pop
or
ja
push
sub
and
or
xor
mov
and
cs
or
push
push
sbb
mov
les
jle
aaa
pop
pop
outs
(bad)
jbe
push
inc
pop
xchg
aas
sbb
ins
outs
mov
pop
scas
mov
mov
jecxz
adc
push
rcl
imul
sbb
mov
(bad)
loopne
mov
cmc
loopne
mov
cwde
or
sbb
adc
mov
ret
nop
inc
call
popf
call
sbb
xor
pop
push
sbb
mov
in
sbb
pop
or
dec
mov
push
lahf
pop
add
ret
push
into
cmp
je
pusha
das
movs
jno
sub
leave
dec
sub
sbb
xor
pop
test
mov
or
xor
retf
and
push
cmps
js
push
(bad)
lods
add
jge
sbb
add
inc
mov
pop
adc
inc
xchg
cmp
shl
xor
popa
jae
shl
test
mov
sar
or
cs
and
adc
push
push
mov
pop
cmps
test
fwait
nop
out
or
(bad)
jmp
imul
adc
pushf
jb
nop
add
or
out
(bad)
push
jne
ficomp
je
mov
and
jne
cmps
daa
push
push
and
int3
stos
xchg
sti
int3
add
mov
mov
out
jno
or
cmps
fwait
push
dec
cwde
or
call
dec
mov
inc
in
mov
daa
and
push
xchg
inc
test
ret
loope
mov
loope
imul
fistp
jge
in
or
movs
add
mov
test
inc
cmp
cdq
mov
push
fild
scas
xchg
sub
mov
cmp
mul
sbb
xor
push
(bad)
sbb
xor
dec
cs
popa
push
das
js
pop
mov
punpckhwd
sub
inc
in
push
mov
jecxz
out
mov
ret
xor
hlt
push
mov
push
mov
cwde
inc
xor
pop
repz
push
xchg
dec
push
xor
sub
dec
and
inc
scas
jne
les
add
pop
xchg
xor
or
fmul
ja
inc
and
xor
adc
popa
jl
mov
adc
cs
pop
inc
jnp
push
fstp
and
cmps
cmps
cmp
sbb
or
pop
pop
add
jmp
push
int
mov
pop
fdivr
adc
dec
and
clc
adc
icebp
nop
cmp
loopne
mov
add
mov
lahf
push
sbb
adc
push
push
adc
push
shl
or
add
mov
sbb
imul
add
ins
or
or
in
mov
dec
jp
add
or
pop
rcr
sbb
and
and
inc
or
(bad)
or
mov
sub
cld
mov
mov
xor
mov
popa
cmps
add
mov
add
nop
sub
cmp
(bad)
xor
aaa
popa
and
cwde
or
pusha
sbb
mov
sar
or
leave
movs
jno
xchg
outs
push
push
add
jb
inc
add
inc
push
cmp
adc
and
push
jo
mov
leave
xchg
xor
leave
sbb
rcr
fcom
push
xchg
out
jno
push
xor
jo
in
mov
add
cwde
test
sbb
xchg
adc
push
stos
and
(bad)
add
adc
pop
cmp
push
fs
sub
xor
nop
xchg
or
push
out
push
test
push
mov
je
cmp
jbe
stos
sub
mov
xchg
gs
add
imul
mov
and
dec
inc
(bad)
mov
stos
es
push
adc
sub
jmp
into
psubq
js
mov
xchg
jo
inc
adc
fs
push
xchg
and
mov
icebp
ror
iret
or
or
addr16
test
test
push
enter
mov
pop
pop
adc
and
movs
mov
add
adc
mov
clc
sub
sub
cmc
add
mov
jge
data16
pop
sbb
or
sub
clc
dec
fadd
xchg
adc
mov
cli
sbb
adc
push
mov
mov
mov
pop
xchg
mov
push
ret
fld
add
aas
push
mov
push
aam
gs
adc
mov
into
inc
xor
jae
or
fs
fcomp
push
sbb
adc
jb
es
push
adc
or
xlat
add
and
pop
push
pop
es
cmps
sti
or
inc
test
and
xor
push
dec
(bad)
ror
xor
mov
cmp
push
clc
mov
jge
test
retf
push
xchg
dec
pop
test
xchg
retf
dec
lock
or
inc
sub
packuswb
ins
or
lock
xchg
sub
cmp
or
lea
jmp
lods
test
sub
cmp
fidivr
sbb
jmp
enter
(bad)
sbb
push
push
push
mov
xor
call
or
push
cmp
sbb
gs
iret
sbb
jne
add
push
inc
xor
outs
or
shl
add
or
pop
fs
das
jne
cmp
jmp
dec
inc
dec
add
loopne
push
cs
call
les
lahf
add
sub
xchg
adc
inc
sub
cmp
call
adc
push
ret
mov
jmp
adc
arpl
sub
dec
push
sbb
outs
jl
cmp
sbb
enter
push
test
adc
mov
inc
dec
leave
mov
popf
shl
je
movs
or
mov
push
sbb
xor
dec
adc
call
lahf
mov
stc
mov
fsub
xor
retf
je
push
js
sbb
and
and
xor
and
into
rcr
call
lods
adc
es
xor
sub
dec
mov
or
in
xchg
sub
imul
fmul
es
mov
loopne
pop
xchg
sar
and
test
adc
mov
adc
push
ret
je
aaa
loope
stos
jmp
push
push
je
dec
and
movs
and
or
stc
outs
push
test
pop
adc
add
add
mov
push
jmp
stos
cli
dec
(bad)
arpl
xor
mov
push
and
inc
cld
push
push
ret
mov
ret
imul
mov
xchg
lock
mov
out
dec
add
jle
jg
pop
mov
sbb
jb
arpl
adc
add
push
dec
add
repnz
dec
popa
test
mov
pusha
dec
movs
jp
aam
adc
mov
lahf
(bad)
pop
xchg
aam
add
pushf
xchg
or
inc
lea
xchg
mov
mov
loopne
ret
sub
and
inc
or
fadd
into
add
push
out
xor
cmp
xchg
jle
mov
push
(bad)
mov
fisttp
fmulp
push
lea
mov
(bad)
ds
sub
movs
out
call
sub
cs
mov
mov
mov
movs
repnz
loope
push
or
inc
jmp
and
test
adc
or
cmovae
ins
inc
sbb
loopne
dec
retf
daa
nop
fwait
rcr
ret
outs
adc
adc
inc
cmps
adc
and
sbb
outs
add
push
nop
jmp
retf
pop
test
push
mov
sbb
add
arpl
sbb
push
add
mov
dec
sbb
inc
call
clc
lods
sub
adc
sldt
add
inc
sbb
retf
rcl
hlt
in
shr
xchg
pop
lahf
or
xor
xchg
js
and
daa
pop
sysenter
ja
fs
xchg
shl
ror
mov
or
add
enter
mov
cmp
jne
lods
ds
inc
stos
sbb
retf
add
loopne
add
out
push
mov
sub
sbb
push
inc
clc
movs
lds
test
cmp
add
xor
or
jae
cmp
jle
push
je
push
jbe
push
add
push
xor
out
test
pandn
ins
jmp
sub
js
mov
mov
push
mov
mov
ret
or
gs
cli
js
push
out
adc
xchg
push
ffreep
jmp
inc
xchg
loopne
cmp
lahf
adc
sub
or
mov
adc
clc
js
add
and
adc
imul
jno
xchg
mov
mov
sub
outs
or
push
mov
xor
or
or
push
fsubrp
jno
add
dec
(bad)
add
push
add
or
shr
push
test
data16
pushf
cmp
inc
ret
clc
xor
and
adc
call
sbb
inc
into
push
pop
adc
dec
inc
push
mov
jae
sahf
add
stos
clc
or
inc
loopne
out
inc
(bad)
out
mov
jo
cmp
sub
ret
and
inc
add
ret
mov
ins
adc
stos
xor
cmp
sbb
jb
test
add
mov
push
adc
xor
sub
or
cld
mul
sbb
adc
mov
pushf
push
jl
sub
and
xchg
adc
jg
dec
push
loope
push
in
adc
jge
clc
push
xchg
lock
rcl
fwait
mov
inc
test
sbb
cs
cmp
inc
adc
test
mov
xchg
or
lds
jbe
pop
call
inc
pusha
inc
rcl
xor
ins
pop
fdiv
enter
mov
aas
sub
xor
shr
dec
imul
in
inc
adc
cmp
sbb
inc
(bad)
into
loop
mov
gs
jg
adc
or
or
test
clc
sub
into
jmp
cmp
sbb
repnz
push
add
rol
mov
sub
sbb
add
cwde
add
test
or
test
das
test
outs
xor
fs
and
ret
bsf
inc
jo
and
sub
aam
cmps
cli
test
or
pusha
call
fldenv
dec
push
dec
xchg
dec
stos
mov
cmp
stc
push
mov
jmp
adc
cmp
cmp
and
sub
shr
ss
push
sbb
fdivr
mov
adc
cmp
xor
sahf
mov
push
lea
jp
retf
data16
test
outs
inc
retf
adc
cmps
mov
pushf
leave
mov
push
lea
mov
jo
or
or
jmp
pop
push
retf
and
(bad)
cmp
clc
add
adc
call
cld
inc
push
(bad)
push
add
add
retf
popf
(bad)
(bad)
rcl
cdq
push
push
leave
sub
xor
xchg
nop
mov
aad
int3
xchg
(bad)
ja
xor
mov
mov
jecxz
je
or
sbb
dec
loopne
add
and
or
add
pop
ss
fisub
jecxz
popa
push
es
rcr
int
fwait
sahf
adc
enter
mul
(bad)
sub
lods
mov
popf
es
lock
mov
pushw
pusha
xchg
cmp
or
mov
xchg
pop
mov
push
pop
(bad)
inc
popa
sbb
jbe
xor
lea
(bad)
daa
cmp
cmp
ret
stos
inc
add
adc
ja
inc
mov
push
into
in
lock
add
in
je
sbb
test
or
adc
dec
and
inc
add
aad
push
inc
or
push
cmps
jmp
imul
sahf
fcmovbe
push
cmps
lahf
jmp
out
mov
fidiv
outs
inc
xor
add
add
add
dec
pop
add
xchg
push
lahf
and
adc
jge
lea
scas
int3
mov
inc
mov
jno
adc
or
push
inc
(bad)
add
jne
xor
cmp
aad
or
add
jne
addr16
imul
push
mov
repz
and
int3
hlt
xor
add
fsubp
fimul
test
fcom
xchg
mov
mov
add
push
and
sbb
xchg
xor
add
add
(bad)
fldcw
jl
outs
inc
sub
or
sar
add
gs
xor
cwde
int3
sahf
inc
or
xor
imul
mov
test
mov
or
int
push
dec
int3
rep
and
dec
jns
cwde
and
push
ins
mov
cmp
adc
shl
loop
cmp
scas
not
pop
adc
push
sbb
and
(bad)
lock
mov
hlt
mov
pushf
adc
ror
mov
adc
add
and
push
push
sub
jno
and
test
(bad)
jmp
je
mov
sar
push
or
test
or
dec
or
inc
clc
and
adc
dec
xchg
call
xchg
out
dec
inc
dec
cmps
ins
cmps
sbb
ficomp
jmp
inc
repz
add
cmp
jge
push
stc
js
cs
inc
out
nop
adc
pusha
and
daa
and
jmp
scas
xchg
push
jae
(bad)
add
stos
xlat
jmp
fsub
ret
inc
jb
mov
jmp
or
cmp
jl
mov
popa
or
push
fld
xlat
sbb
mov
clc
jmp
inc
inc
sahf
sar
mov
push
sbb
sbb
mov
xchg
stc
xor
neg
shr
pusha
loopne
jne
hlt
add
daa
mov
mov
xchg
je
push
push
pop
shr
xchg
cs
xor
cli
ret
push
aaa
adc
cmp
int
fadd
or
xor
outs
xchg
mov
mov
and
push
add
enter
push
aas
int3
inc
dec
shr
adc
call
shr
sbb
pop
stc
ins
gs
or
cmp
dec
or
fnstcw
or
cmps
push
sbb
pop
loope
pop
dec
pop
push
lea
ds
dec
sahf
nop
loope
enter
test
mov
ds
out
test
cmp
jecxz
je
cmp
je
inc
movs
add
je
mov
ins
retf
and
xchg
not
adc
(bad)
mov
mov
ins
ror
jp
das
xor
fwait
popa
xor
mov
fcomp
dec
clc
fcomp
sbb
retf
sub
inc
pop
push
les
enter
mov
ins
test
mov
or
idiv
jne
push
mov
sub
adc
push
hlt
jae
call
xchg
inc
cwde
je
adc
push
jmp
sub
mov
mov
jo
mov
pushf
(bad)
xchg
lock
adc
test
iret
push
sbb
pop
or
dec
shl
je
add
sub
mov
cmp
dec
jne
pop
add
push
and
add
add
push
nop
dec
push
add
push
jo
enter
hlt
cmp
or
mov
movs
test
mov
jb
or
adc
mov
mov
mov
clc
icebp
add
ror
ret
ret
and
int3
sti
adc
xor
inc
imul
cwde
sbb
es
push
mov
ja
add
cld
loop
rcl
push
daa
es
shl
push
lods
adc
loopne
sbb
sub
loope
cmp
or
mov
sub
dec
call
test
inc
inc
push
push
arpl
add
fs
sbb
fld
mov
sbb
mov
pop
inc
adc
xchg
pop
and
jge
scas
lea
call
repz
fldenv
ror
push
loopne
sbb
enter
add
cmps
in
dec
ror
fiadd
cdq
sbb
cdq
lods
cld
jnp
ins
ins
cmp
sbb
or
xchg
add
adc
cdq
add
ins
and
arpl
popa
int3
lods
test
push
inc
jg
addr16
pop
fcomip
ret
or
loope
cli
dec
sbb
das
cwde
adc
gs
push
fcomip
xchg
cdq
xchg
imul
ret
mov
dec
and
add
pop
enter
aam
call
aaa
sub
pop
enter
and
out
inc
and
je
mov
or
jno
mov
pop
popa
sbb
and
pop
clc
push
cmp
inc
and
and
add
mov
mov
inc
push
sub
scas
fcomp
call
sbb
adc
and
xor
data16
loopne
inc
mov
test
inc
sbb
xor
clc
les
and
je
outs
dec
and
add
shl
dec
data16
jo
add
inc
and
shl
sbb
sbb
lahf
pop
fist
mov
nop
or
push
pusha
ret
fadd
or
adc
stos
xor
(bad)
arpl
dec
jmp
xor
imul
xchg
out
dec
inc
and
sub
push
push
popa
(bad)
sar
or
mov
cmp
adc
mov
sti
ds
or
jmp
lock
or
mov
adc
inc
nop
retf
mov
push
push
push
adc
sbb
sbb
push
sub
in
adc
jmp
out
xor
adc
jmp
jle
sub
add
lea
mov
xchg
pop
mov
ret
add
retf
dec
jne
and
sub
mov
test
in
dec
icebp
je
cmp
dec
or
movs
adc
cmp
popf
sbb
push
outs
xor
or
(bad)
enter
mov
cmps
add
test
lea
cmp
xor
add
sub
sub
lods
sbb
js
xchg
ret
sbb
sbb
and
int3
adc
xchg
rcr
push
imul
adc
fidivr
push
ss
xchg
or
jle
xor
out
adc
outs
inc
pop
mov
push
test
mov
and
cmp
je
or
cs
and
mov
ins
xor
push
sbb
mov
sub
xchg
or
adc
ja
jb
pop
jecxz
inc
push
pop
push
xor
fisttp
and
mov
cdq
rol
jmp
adc
sub
in
mov
arpl
and
aad
lock
test
adc
add
jnp
jge
mov
xor
add
lock
pusha
inc
cmp
xor
scas
bound
pop
sar
jne
add
mov
sbb
in
pop
and
xor
mov
pop
cmp
lds
mov
cmp
call
div
xchg
icebp
and
inc
sub
jns
or
ja
xchg
gs
js
sbb
xor
or
mov
cmp
aad
cmp
je
scas
jmp
push
stos
not
cmp
cmp
jb
sub
popf
or
or
pop
cdq
xchg
jl
imul
jp
ret
ficom
sub
or
sbb
aaa
and
jae
nop
xchg
add
cmp
xchg
inc
xor
dec
adc
cmc
push
ret
add
loopne
sbb
unpcklps
imul
mov
gs
or
loope
xchg
sbb
jne
je
adc
stc
jo
adc
lock
ins
inc
jmp
lea
push
sub
dec
jb
jl
popa
pop
cmp
push
into
push
sbb
mov
push
aaa
(bad)
cmps
xor
cmp
sub
ja
cmp
jo
jl
jo
adc
sub
aad
test
sub
or
and
sbb
fbld
cmp
shl
pop
jmp
sub
push
xchg
sbb
ret
push
push
and
xor
and
daa
mov
hlt
je
xor
rol
dec
inc
jb
xor
jb
aas
les
xor
or
inc
dec
call
cmps
sbb
cmps
mov
jmp
inc
and
lds
cmp
sub
adc
cmp
fsub
adc
xlat
js
mov
push
dec
dec
scas
das
loopne
data16
nop
xchg
imul
je
add
and
add
in
in
adc
lahf
push
jg
daa
sbb
mov
jne
mov
push
hlt
push
std
cmp
sbb
inc
adc
rcr
or
cmp
shl
add
sub
cmp
inc
jge
xor
and
and
retw
imul
mov
and
push
dec
mov
xchg
jl
add
and
ins
push
adc
adc
rcr
push
mov
or
mov
jmp
jl
mov
push
inc
sub
movs
xor
call
daa
or
or
sub
or
rcr
fs
and
mov
imul
push
out
inc
test
sub
add
push
mov
shl
arpl
clc
dec
and
lods
adc
iret
add
sub
jne
mov
and
sub
(bad)
sub
cmp
call
add
add
cmc
(bad)
push
jo
pop
cwde
retf
inc
mov
loop
pop
je
or
sub
pop
and
push
or
inc
sub
pop
pop
add
ret
aaa
movs
jb
mov
stos
add
pop
xor
mov
loopne
movs
data16
pusha
mov
lock
jmp
add
test
(bad)
rcl
add
and
arpl
jg
mov
sbb
dec
xor
(bad)
or
add
sub
or
xchg
push
test
xor
fisttp
movs
loop
std
inc
ret
push
icebp
mov
cmp
sub
xchg
inc
adc
dec
ins
rcr
push
sub
and
push
xchg
sub
jle
add
xchg
cmp
je
mov
push
cld
xor
pop
sbb
ss
and
mov
fst
cmps
test
sbb
loop
mov
pop
ror
mov
sbb
push
pushf
daa
adc
addr16
aaa
push
cmp
test
enter
push
sbb
mov
fst
mov
pop
sbb
pop
clc
push
call
add
xor
enter
stc
mov
mov
add
test
mov
shl
or
das
xchg
push
inc
daa
adc
add
(bad)
daa
(bad)
sbb
mov
je
mov
js
pop
cwde
mov
mov
test
adc
sub
fisttp
push
aaa
push
pop
in
test
sbb
sbb
rcl
and
mov
sbb
pop
not
push
jns
sbb
inc
mov
std
xchg
fdiv
adc
repz
loop
or
push
jp
mov
cld
mov
pop
mov
(bad)
push
sar
jne
popf
jmp
mov
sbb
push
mov
pop
jnp
add
daa
inc
dec
jo
sbb
cmp
mov
mov
popa
sub
adc
xlat
sub
repnz
sub
hlt
mov
hlt
inc
inc
dec
cmp
sub
and
pop
cld
jae
and
sub
push
sbb
mov
dec
push
gs
adc
icebp
push
mov
int3
or
or
adc
pop
push
enter
push
and
pop
cmps
mov
adc
xchg
adc
adc
or
loopne
pop
movs
mov
fmul
or
lea
(bad)
jb
mov
out
sbb
pop
push
sbb
cwde
lea
cld
mov
das
cmp
pop
jmp
and
mov
clc
pop
imul
call
xchg
hlt
loopne
scas
or
add
or
test
adc
fild
adc
or
add
pop
pop
xchg
sbb
pop
push
sub
pop
stos
sbb
enter
inc
mov
fimul
je
push
aam
repz
popf
aam
pop
enter
sbb
popf
sbb
dec
dec
xchg
sbb
sbb
and
in
inc
sbb
lods
loope
xchg
adc
and
push
and
and
mov
jb
and
push
leave
test
scas
mov
sbb
ret
inc
scas
sub
scas
sub
ret
push
push
clc
add
pop
scas
out
nop
fsub
or
push
sub
fs
arpl
or
mov
mov
mov
sbb
adc
dec
(bad)
hlt
popf
mov
xchg
(bad)
jle
or
pop
mov
out
mov
push
in
lods
cmp
or
push
xor
movs
test
and
dec
or
jl
push
dec
push
sbb
add
and
sub
addr16
fs
in
mov
push
out
rcl
add
dec
sub
mov
rol
add
sbb
ins
add
sub
retf
cmp
shl
add
jp
jae
mov
add
inc
inc
dec
and
test
or
add
adc
adc
inc
jne
xchg
push
and
and
add
cs
retf
push
mov
js
xchg
xchg
or
hlt
inc
inc
aas
sar
test
dec
dec
or
test
aaa
or
cmps
std
push
xchg
mov
mov
and
inc
loope
adc
cdq
or
mov
ins
lods
sbb
sub
push
xchg
push
sti
adc
sbb
fdivr
ficomp
mov
add
mov
rcr
not
or
aam
popa
mov
push
add
push
sub
add
popf
stos
lock
jns
out
dec
sti
scas
fwait
jbe
test
jmp
push
and
adc
jne
and
jb
xchg
add
sahf
cmps
ins
jle
nop
xor
add
mov
test
push
pop
iret
lods
adc
xlat
fmul
ret
daa
ror
sub
icebp
xor
jge
lds
int3
mov
jg
mov
cli
add
ins
movs
clc
push
loopne
and
jmp
mov
jnp
in
imul
inc
pop
inc
(bad)
sbb
retf
adc
add
call
movs
inc
in
or
adc
jg
sub
jmp
cmp
pop
xor
push
push
es
adc
xor
push
pusha
pop
lahf
nop
or
adc
xchg
sub
push
mov
mov
pop
mov
and
test
sbb
call
push
jp
retf
push
and
push
in
adc
cdq
cmp
(bad)
mov
stc
ds
inc
inc
sub
fild
and
xor
xchg
stos
inc
in
dec
push
daa
mov
sbb
test
push
pop
or
xchg
jg
(bad)
mov
or
data16
ins
repnz
es
cmps
ret
xor
and
int
cwde
xor
or
in
cmp
sar
dec
sub
inc
push
dec
jnp
xchg
cmp
nop
inc
inc
addr16
inc
cmp
repnz
or
inc
adc
enter
dec
adc
cdq
fs
push
dec
scas
addr16
add
push
push
jo
push
or
pusha
xchg
push
and
sub
scas
fld
inc
call
popa
or
shr
addr16
xchg
jne
imul
sbb
or
dec
add
clc
or
pop
add
pop
cli
clc
dec
aas
mov
jne
mov
fiadd
adc
sbb
scas
add
push
mov
popa
(bad)
xchg
(bad)
push
adc
fs
bound
ror
out
adc
cwde
aam
add
enter
cwde
and
pop
fisubr
xor
add
jp
and
das
enter
outs
push
movs
pop
push
pop
add
or
inc
mov
sbb
cmps
test
add
call
pop
mov
xor
add
mov
inc
push
adc
jmp
add
call
icebp
aad
jo
sbb
out
sbb
lock
or
pop
enter
mov
mov
inc
mov
out
ins
inc
inc
out
adc
out
and
or
pop
push
adc
mov
sbb
push
jg
xor
popf
test
rol
pop
xor
or
nop
adc
or
aaa
and
cmp
cmp
or
cmps
dec
in
add
adc
mov
adc
inc
push
dec
in
or
dec
cwde
sahf
test
or
mov
xor
push
imul
inc
or
je
mov
cli
and
push
aaa
adc
jno
rcl
sbb
cmc
mov
adc
mov
add
adc
inc
xchg
punpcklwd
xlat
adc
jne
shl
test
push
scas
stos
scas
(bad)
in
dec
in
adc
mov
sar
push
or
mov
sar
mov
jecxz
cli
lods
mov
sahf
xchg
xchg
or
or
pushf
inc
or
dec
push
add
dec
test
mov
and
inc
sbb
enter
add
push
xchg
xchg
adc
call
(bad)
fisttp
enter
adc
cmp
scas
dec
adc
jo
jecxz
push
inc
push
pusha
into
mov
rcr
adc
add
sub
dec
test
pop
dec
ret
call
inc
inc
add
sbb
loopne
std
push
jl
adc
sbb
adc
rep
push
mov
movs
add
mov
aaa
out
popa
aad
push
(bad)
push
or
retf
cmp
mov
adc
cmc
cmp
or
xlat
das
xor
jmp
or
jp
push
lea
or
mov
popf
addr16
cld
mov
jge
inc
fstp
jb
sub
les
mov
add
jecxz
scas
nop
sub
aaa
imul
pop
shl
fldenv
jecxz
clc
xor
icebp
loop
jecxz
and
cmp
jne
push
leave
addr16
retf
pop
mov
daa
or
dec
fcomi
mov
or
xor
mov
das
or
stos
mov
loopne
jg
stc
mov
sub
pop
pop
pop
jmp
dec
adc
or
xchg
rcr
add
in
xchg
mov
push
inc
adc
pop
imul
psubb
adc
xchg
enter
jbe
or
leave
add
pop
push
out
and
pop
mov
in
or
or
jecxz
and
adc
jbe
sbb
dec
sbb
enter
idiv
clc
sar
pusha
and
in
jle
and
or
and
fst
call
cld
jl
sbb
mov
or
aam
mov
popa
mov
cmp
mov
xchg
and
or
push
fild
enter
packssdw
push
sub
xor
inc
nop
sub
xchg
pop
mov
sbb
adc
aas
adc
mov
cld
xor
cmp
add
icebp
cli
jb
push
sub
jl
jmp
sub
sar
pop
push
mov
and
xchg
inc
ret
push
add
js
rcl
push
mov
xor
div
push
out
pop
dec
pop
cmps
(bad)
cld
aas
push
mov
test
mov
add
movs
sti
adc
test
arpl
sbb
xchg
jmp
jge
adc
mov
and
daa
xchg
pop
imul
shl
push
ficom
rcr
and
sub
cmp
cmp
mov
enter
rol
leave
xor
in
or
aam
shr
cmp
repnz
lea
push
fld
ins
mov
add
push
mov
push
or
sbb
inc
aam
jno
fst
cwde
or
push
outs
in
loop
leave
inc
or
mov
bswap
in
mov
inc
push
sub
sahf
sbb
stc
mov
cmps
into
inc
(bad)
in
cmp
jmp
ja
inc
xor
dec
adc
jbe
div
je
dec
je
call
inc
pushf
and
icebp
sbb
jb
adc
ret
or
mov
xchg
mov
pop
es
mov
adc
jle
mov
rcr
xor
jne
sbb
lds
cwde
iret
push
jcxz
xor
nop
ror
repz
pusha
daa
shl
mov
push
pop
ret
adc
rol
inc
jae
add
adc
or
sub
sbb
and
adc
mov
test
ret
nop
jmp
jle
mov
repz
ret
add
dec
or
ror
ficom
pop
adc
les
pop
mov
sahf
push
sub
jle
sbb
outs
ret
mov
or
mov
(bad)
push
push
inc
push
jl
imul
dec
mov
dec
mov
cmp
cwde
js
xchg
popf
and
sub
add
shl
rol
sub
dec
mov
pop
pushf
popf
pushf
popa
add
or
adc
imul
push
je
add
aaa
inc
(bad)
dec
jns
addr16
sbb
outs
mov
add
push
mov
cmps
mov
push
gs
mov
or
mov
neg
ret
imul
sub
or
mov
jg
imul
xchg
aas
jle
jmp
mov
retf
mov
dec
je
push
aam
das
and
repnz
aaa
jp
das
add
loope
and
fidiv
or
fucomp
sbb
lea
push
sbb
or
mov
lea
pop
cmp
add
(bad)
sbb
dec
push
mov
(bad)
data16
retf
mov
nop
retf
or
retf
add
and
jp
fst
adc
cdq
inc
daa
sbb
add
pop
mov
mov
das
jmp
mov
test
jmp
pop
sub
and
xlat
out
pop
scas
push
or
test
dec
and
pop
add
jbe
push
fucomi
aas
fadd
dec
fcmovnb
dec
push
repnz
es
retf
fbstp
jno
cmp
popa
les
ins
mov
and
dec
gs
mov
push
jne
pop
adc
int3
xchg
imul
push
(bad)
adc
mov
je
and
stos
ret
dec
into
push
dec
dec
sub
add
sbb
inc
jge
and
push
rol
xor
inc
sbb
scas
aam
or
std
pop
out
xchg
add
(bad)
stc
jb
sbb
mov
push
dec
sbb
push
mov
not
je
(bad)
push
fiadd
ins
sub
fimul
cwde
sbb
ds
or
xchg
lock
je
adc
jb
ja
or
xchg
ss
test
or
ror
ret
scas
sbb
mov
leave
adc
or
cmp
or
sbb
test
out
jbe
sbb
push
mov
push
loop
mov
mov
mov
mov
cdq
aam
int3
pop
inc
adc
or
adc
dec
sbb
test
push
sub
inc
mov
fsubr
jns
ret
cmp
jbe
push
add
add
iret
sbb
or
retf
cmp
or
add
or
ret
cld
xchg
add
and
add
adc
ss
xor
add
enter
cwde
xchg
adc
sbb
cld
icebp
jb
cmp
fstp
fs
xchg
adc
add
push
or
lds
loop
add
pop
pusha
push
gs
or
(bad)
xor
shl
dec
add
push
jmp
int3
retf
sub
iret
add
sbb
add
dec
cmp
push
jge
adc
sar
movs
ret
adc
xchg
or
sub
pop
mov
hlt
or
dec
fnstcw
jmp
sub
cmp
push
and
mov
push
sub
aaa
or
pop
pop
repnz
retf
mov
mov
xchg
pop
mov
lods
sbb
retf
xor
adc
es
ret
adc
lods
aas
adc
adc
int3
(bad)
test
sub
lods
dec
mov
push
out
mov
pop
sbb
and
jmp
jle
jge
scas
push
sub
push
ret
cmp
jge
les
push
fwait
ret
mov
les
add
push
rcr
dec
or
adc
jnp
mov
jno
test
pop
pop
cmp
sbb
mov
out
dec
xchg
lds
or
mov
push
fistp
or
jo
test
cmp
or
adc
fld
adc
sbb
inc
mov
ins
js
into
pop
push
mov
ds
mov
mov
push
dec
inc
clc
xor
mov
call
xchg
xor
stos
sub
pop
sbb
dec
mov
push
ins
push
ror
in
(bad)
xor
inc
add
sbb
lea
sbb
sub
jge
adc
test
sub
and
sub
test
inc
adc
xchg
repz
jo
push
pop
dec
adc
rcr
sub
fcom
add
dec
sub
push
sub
inc
(bad)
xchg
rcl
xchg
mov
adc
out
arpl
int
add
cmp
or
pushf
pop
and
inc
int
add
shr
stc
outs
mov
js
dec
clc
jle
push
cmp
or
mov
aaa
cmp
and
ret
jo
fiadd
and
jmp
inc
jo
inc
gs
xchg
dec
add
add
jb
je
mov
pop
mov
inc
sahf
or
mov
inc
cmp
aam
push
adc
jno
fcomp
mov
mov
mov
lahf
rol
jecxz
mov
push
and
inc
daa
jmp
and
cwde
aam
dec
repnz
push
and
or
xlat
and
mov
iret
or
(bad)
repnz
push
cmps
daa
xor
jns
pusha
sub
jne
or
push
sub
xchg
push
and
cwde
pop
push
mov
mov
retf
push
jmp
loop
int
and
shl
lea
pop
jo
call
xor
mov
xchg
and
sub
xor
adc
mov
sub
movs
test
sbb
pop
add
lock
add
mov
ins
sbb
mov
mov
addr16
inc
dec
push
pop
or
push
sub
mov
test
call
addr16
enter
jecxz
mov
and
sbb
jp
add
dec
inc
mov
adc
inc
fld
rdtsc
cmp
push
cwde
les
mov
and
cwde
cmp
cmp
mov
adc
and
pop
add
out
frstor
fisubr
or
mov
pop
cdq
dec
test
push
push
pop
lock
mov
jmp
sub
out
add
mov
or
or
add
pop
mov
jmp
push
cmp
inc
ss
jne
mov
rcl
stc
mov
loopne
std
test
retf
jbe
jmp
je
jmp
push
stc
(bad)
mov
adc
mov
inc
add
mov
das
adc
cmc
int3
xchg
xchg
icebp
sar
and
jbe
add
adc
mov
push
in
xchg
mov
sub
adc
aad
shl
xchg
push
push
rcr
add
xchg
and
sbb
inc
cmp
cwde
fnsave
sbb
jne
or
xchg
rcl
mov
retf
and
out
sbb
jge
xor
cmp
add
js
push
cmp
jl
mov
cld
push
cmp
push
cwde
nop
and
push
cmp
ret
imul
inc
jnp
push
cwde
imul
dec
in
or
fstp
jne
add
add
push
std
stos
dec
popa
sbb
sbb
mov
mov
sub
es
and
cmp
cmp
(bad)
lods
add
add
jmp
sub
sub
sar
and
or
ret
cmp
jne
push
cmp
xchg
mov
jecxz
cmp
jmp
pushf
xchg
or
add
inc
mov
imul
jne
or
push
out
shr
hlt
jno
adc
or
iret
shr
hlt
nop
cmp
(bad)
push
mov
sbb
cmp
ds
fimul
add
enter
inc
or
push
xchg
add
sub
mov
sar
hlt
mov
imul
add
test
daa
arpl
add
ins
xor
push
cmps
shl
ret
or
mov
adc
adc
sub
push
inc
clc
pusha
dec
ins
loope
sub
or
jmp
loop
or
or
fsubr
or
xchg
in
sbb
push
(bad)
mov
cmp
test
pop
mov
stc
xor
push
and
and
cmps
ins
out
mov
inc
es
inc
or
mov
dec
movs
add
mov
or
or
push
mov
adc
add
iret
jg
xor
push
sbb
inc
fwait
loop
push
push
adc
pop
inc
jae
icebp
or
pop
push
mov
aas
inc
ins
sub
pop
and
cmp
cld
inc
pusha
jg
xlat
inc
or
inc
pop
dec
mov
dec
call
push
and
push
lea
and
sahf
test
add
mov
cld
inc
clc
ja
push
sbb
daa
mov
or
push
and
test
cmp
inc
mov
(bad)
icebp
or
push
push
dec
add
imul
sub
or
cmp
add
push
rcr
xchg
xchg
jle
lahf
pop
fwait
add
daa
in
call
xor
xchg
pop
or
and
dec
jo
mov
inc
xor
jo
(bad)
rcr
xchg
mov
pop
pop
lahf
mov
test
(bad)
rol
(bad)
loopne
add
or
jmp
xchg
cmc
dec
loop
adc
test
jg
mov
inc
pop
xchg
imul
sbb
stc
(bad)
and
jbe
xchg
and
(bad)
fcom
sub
in
outs
pop
mov
test
popa
push
hlt
dec
inc
jecxz
dec
add
adc
add
pop
fmul
jae
popa
push
xchg
dec
add
lock
push
(bad)
int3
and
mov
push
jecxz
push
pop
push
push
xchg
test
rol
xor
jne
sbb
ss
mov
add
pop
sub
push
clc
dec
dec
retf
icebp
int
cmp
push
pusha
imul
inc
sub
add
lock
movs
rol
add
sbb
or
nop
sbb
lods
cmps
sub
ficomp
inc
pop
adc
mov
jp
(bad)
sbb
adc
push
adc
inc
add
mov
mov
jnp
or
mov
xchg
push
jmp
or
adc
xor
add
push
adc
and
aaa
mov
ja
add
ret
pop
pop
icebp
inc
adc
sub
lea
in
or
mov
push
mov
xor
sub
and
cmp
xchg
push
fsub
mov
pop
inc
sbb
add
pushf
fldcw
mov
popa
sub
push
neg
jo
inc
lods
(bad)
or
xchg
lods
pop
xchg
in
ins
mov
lods
aas
test
sub
or
call
pop
add
and
pusha
or
mov
cmp
test
or
pop
push
and
or
push
ss
or
mov
ds
push
adc
add
(bad)
push
mov
sbb
and
in
or
push
or
je
inc
lods
ret
jbe
mov
mov
cmps
mov
sbb
push
push
push
fstp
mov
test
mov
and
push
add
push
aas
sub
inc
push
xchg
pop
inc
add
add
rol
sbb
popf
inc
or
xor
pop
push
pop
add
dec
mov
add
cmps
jbe
push
dec
ror
add
jg
test
fstp
repz
ret
sub
neg
push
mov
mov
add
push
push
lds
ds
or
sub
push
push
and
lods
jnp
sub
inc
pop
stos
push
push
cmovns
mov
pop
fild
pop
push
pop
adc
adc
fcmovne
pushf
in
int3
inc
and
in
sub
pop
lods
cmp
test
rcr
add
lds
xchg
rcr
mov
mov
dec
or
fcmovnbe
push
shr
icebp
inc
sub
inc
inc
push
xchg
mov
push
pop
xchg
in
into
(bad)
fisubr
cmp
je
inc
push
(bad)
int
mov
dec
inc
push
movs
and
loope
fld
loope
(bad)
jmp
shr
push
add
fisttp
movs
sub
cmp
mov
push
or
clc
adc
jmp
test
lods
dec
pop
sti
shr
inc
dec
test
mov
jnp
mov
adc
add
adc
jmp
add
sbb
inc
jmp
pop
sub
imul
cmp
and
dec
(bad)
jecxz
je
mov
cmp
shl
repz
xor
mov
add
mov
gs
cs
ja
cmp
cwde
je
in
das
jne
inc
dec
sbb
cli
jb
mov
add
rcl
mov
repz
cmp
jae
pop
push
nop
cmp
arpl
pop
push
adc
bound
dec
sub
adc
lock
add
push
and
or
mov
push
ins
xchg
jno
ja
adc
sub
retf
xchg
stos
add
pop
scas
test
add
ret
mov
mov
aad
jne
cmp
or
daa
jmp
xor
clc
sar
or
rol
(bad)
std
popa
dec
imul
and
les
dec
jnp
movs
daa
adc
inc
jp
sbb
push
adc
mov
aaa
pop
daa
sbb
lea
dec
add
in
dec
or
inc
aam
push
or
sub
(bad)
jecxz
loope
jl
ins
inc
adc
sbb
inc
and
scas
icebp
aam
jne
daa
lds
cmc
scas
mov
cmp
cmp
arpl
cmp
test
shl
jmp
xchg
ror
or
jmp
push
cmp
cmp
test
shl
cmp
jmp
pop
dec
cmp
push
or
pusha
test
jae
push
jmp
mov
cmp
jae
inc
shr
loopne
mov
leave
sar
add
jmp
out
xchg
ror
sbb
or
test
ja
popa
add
clc
push
inc
and
xor
dec
test
xchg
pop
out
pop
push
or
jecxz
pop
mov
nop
fcmovnbe
dec
mov
adc
push
loopne
inc
sbb
jp
int3
test
cmp
stos
fimul
and
sbb
add
cmp
adc
ret
int
in
sub
push
gs
popa
sbb
idiv
xchg
cmp
and
js
adc
div
test
mov
dec
sub
mov
add
pop
adc
jae
mov
pop
je
adc
inc
xchg
or
and
int3
push
add
or
fisubr
jmp
xchg
push
and
mov
xchg
xor
repnz
mov
push
xchg
gs
sbb
add
inc
pop
sub
test
popa
not
push
and
retf
adc
adc
cmp
fcom
cmp
mov
cmp
ror
jmp
add
sbb
dec
adc
inc
fs
popa
mov
or
add
or
(bad)
dec
mov
push
call
mov
call
fimul
pop
inc
mov
mov
inc
mov
mov
jae
nop
mov
rol
adc
fimul
sub
and
mov
mov
clc
xlat
push
fwait
add
shr
jecxz
jp
sub
cmp
pop
sub
adc
ins
je
lods
div
dec
js
not
outs
sbb
xchg
or
cmps
ins
push
bound
xor
xchg
adc
call
and
mov
or
fs
lea
daa
push
push
cli
iret
xor
ins
cwde
and
fs
neg
mov
int
pop
add
xor
pop
mov
dec
clc
add
pop
(bad)
dec
mov
xor
lea
cmp
jg
cwde
or
jmp
rdtsc
inc
inc
les
xchg
push
mov
popa
sub
sub
ds
or
pop
mov
push
ret
jecxz
cli
lahf
adc
imul
xor
clc
sahf
add
icebp
bound
icebp
jae
inc
inc
jl
(bad)
sbb
dec
cmp
add
inc
pop
mov
and
push
into
inc
and
packsswb
sub
pop
rcr
jmp
aaa
or
call
adc
add
cmp
js
mov
sub
push
dec
pop
cdq
inc
jle
push
ret
add
enter
sub
jmp
or
mov
call
mov
add
adc
jo
or
pop
fdivr
inc
jmp
xor
mov
push
aam
(bad)
loop
or
data16
push
or
cld
adc
inc
addr16
sbb
pop
pop
cmp
ins
fsub
jo
stos
pop
stc
or
jp
adc
jne
ror
jmp
inc
push
es
xchg
addr16
pop
sbb
adc
jne
loopne
ret
add
cmp
retf
iret
pusha
pop
imul
pop
mov
push
push
outs
add
add
in
xor
lea
int3
cmp
mov
dec
loope
xor
add
push
or
add
(bad)
pusha
cmp
pop
or
xchg
lea
or
or
(bad)
pushf
cmp
or
stos
retf
jns
ss
dec
adc
aam
arpl
out
js
aam
mov
or
add
add
jo
call
out
mov
iret
in
adc
or
cmp
ficom
pcmpeqd
mov
and
outs
aaa
lods
jge
mov
outs
xchg
js
push
add
push
nop
fadd
sbb
pusha
rcr
push
cmp
jmp
add
dec
hlt
popa
jnp
and
and
mov
jp
jle
popa
je
add
or
jne
movs
aam
fwait
js
jnp
inc
hlt
xchg
xor
xchg
dec
or
and
jbe
lods
push
ds
add
mov
push
nop
add
xchg
jmp
mul
or
mov
xchg
icebp
std
out
sahf
cmp
and
or
adc
adc
sbb
sbb
mov
jnp
js
and
add
add
sub
mov
add
(bad)
inc
ret
scas
xor
xor
adc
or
stc
adc
mov
mov
sbb
cmp
sub
sbb
dec
and
aaa
lock
movs
rcl
dec
rol
cmp
and
add
stos
push
add
data16
je
or
dec
std
jge
push
push
jne
popa
push
cld
jmp
jne
mov
dec
lea
add
mov
sbb
dec
add
popf
xor
dec
xchg
mov
mov
pop
dec
out
js
or
cmp
pop
and
add
and
push
repnz
test
sub
rol
mov
or
inc
pop
js
inc
push
sbb
adc
ja
add
xor
cmp
push
or
adc
pop
mov
fcmovb
dec
push
adc
xor
or
nop
mov
dec
push
sbb
adc
aaa
scas
add
rol
repnz
dec
inc
jno
inc
sub
(bad)
shl
loope
add
inc
and
cmp
mov
out
xor
mov
ret
std
add
or
add
nop
inc
inc
pusha
or
in
mov
mov
xor
jno
cmp
in
cmp
adc
xor
adc
pop
or
stc
jns
add
and
cmp
and
inc
sti
retf
retf
sbb
sbb
stc
jne
in
test
or
out
loopne
push
and
mul
out
jno
push
pop
fcom
shl
add
adc
adc
sub
sbb
lea
in
call
ret
or
cmp
mov
pop
sbb
je
jae
push
xor
pusha
inc
push
cmp
add
arpl
aad
and
out
and
inc
je
add
xor
out
(bad)
jmp
or
jecxz
adc
or
jo
data16
xor
xlat
mov
adc
dec
inc
test
ret
adc
stc
xor
stc
push
adc
dec
ret
adc
mov
mov
push
cmp
adc
adc
jmp
lods
and
or
xor
adc
xor
sub
and
jno
jmp
sbb
repnz
jecxz
mov
test
or
mov
or
or
pusha
and
mov
push
ror
dec
push
xchg
add
xchg
call
and
popa
and
repz
neg
cld
mov
icebp
mov
or
ret
xchg
or
cli
mov
push
adc
push
sub
shr
xchg
nop
cmp
(bad)
push
xchg
adc
and
movs
mov
jg
push
push
xor
hlt
lea
xchg
push
je
pop
and
push
pop
push
add
sbb
adc
cli
daa
dec
push
mov
push
pop
mov
push
jl
add
xor
movs
push
jg
addr16
sti
or
fidivr
cmp
jge
enter
and
mov
ret
ss
push
(bad)
cmp
out
or
in
movs
enter
add
add
clc
push
mov
(bad)
mov
add
cmc
push
mov
jae
jmp
cmp
push
call
loope
or
scas
mov
inc
or
mov
stc
add
push
xchg
pop
hlt
mov
test
cli
adc
movs
dec
aam
pop
jne
adc
jmp
inc
inc
add
cli
mov
mov
or
ret
or
pop
shl
daa
int
pusha
(bad)
call
push
test
mov
mov
mov
lock
or
popa
and
gs
movs
test
pop
push
pop
jmp
inc
xchg
add
sbb
in
mov
cmp
hlt
push
mov
jo
ss
cmp
loopne
mov
adc
lea
test
and
push
jge
pusha
and
or
mov
and
fadd
push
push
add
icebp
or
pop
lods
xor
xchg
movs
xchg
or
xor
neg
push
sbb
xchg
mov
xor
rcl
push
push
or
stc
(bad)
or
push
cld
mov
movs
sub
dec
sti
mov
rcr
adc
cmp
sar
push
mov
pop
sbb
jmp
mov
nop
push
mov
movs
sub
dec
jne
hlt
arpl
ret
dec
and
clc
imul
femms
and
and
or
or
fnstenv
xchg
push
push
lds
mov
(bad)
mov
and
mov
and
or
ds
push
hlt
div
xchg
jo
mov
xchg
sbb
je
mov
and
xor
add
or
or
clc
cmps
add
push
add
test
leave
test
mov
adc
sub
fld
icebp
push
sub
mov
jo
and
sar
scas
out
sub
cli
pop
loop
jmp
push
cmp
xor
dec
adc
daa
add
pop
(bad)
sbb
inc
ja
push
pop
fsub
push
dec
xchg
xor
lea
sbb
jge
test
dec
scas
mov
pushf
call
lds
xor
or
mov
or
mov
movs
test
sub
lods
dec
loop
scas
fcomp
dec
dec
adc
jl
push
gs
shr
sub
lock
into
add
popa
clc
into
and
push
mov
adc
in
mov
mov
mov
xchg
jmp
sbb
ret
push
cdq
fiadd
inc
xchg
push
call
jns
dec
adc
in
fsub
xor
inc
adc
int3
rol
enter
(bad)
add
cmp
sbb
test
scas
leave
push
mov
ins
cmps
aam
or
mov
in
xchg
(bad)
mov
data16
add
jmp
bound
das
lea
repz
inc
add
xor
sbb
cld
jb
push
clc
jmp
adc
dec
or
mov
daa
mov
in
fistp
sbb
(bad)
jo
adc
pop
jne
and
adc
pusha
add
popa
movs
sbb
in
dec
push
cmp
xchg
dec
dec
les
sbb
xchg
xlat
mov
adc
sbb
adc
or
pop
mov
fld
sbb
cmp
and
inc
sub
sbb
adc
push
xor
clc
jb
xor
cmp
sbb
dec
(bad)
sbb
push
or
mov
aam
cli
mov
mov
pop
ins
add
mov
adc
iret
imul
inc
ret
stc
dec
mov
out
sbb
push
adc
and
jle
fidivr
mov
cmp
jp
fnstenv
je
add
adc
je
adc
add
jmp
cmp
iret
pop
and
dec
cs
push
pop
jnp
test
jg
xor
mov
fld
and
and
pop
pop
push
add
adc
jns
mov
sub
and
mov
xor
adc
mov
push
hlt
fs
sbb
or
fiadd
dec
xchg
add
sub
xchg
push
adc
jle
leave
inc
je
or
adc
scas
adc
imul
ror
jmp
and
mov
sub
add
mul
loopne
and
sub
ret
loopne
jne
fcom
adc
adc
dec
jmp
add
jmp
mov
push
sub
pop
add
jno
push
mov
push
adc
shl
pop
push
or
inc
push
mov
mov
and
mov
pop
jge
or
and
cmp
cs
enter
cld
fdiv
and
mov
add
and
pop
jmp
cmp
inc
jo
in
add
pop
push
test
mov
outs
mov
sub
icebp
cmp
xor
push
test
xchg
push
dec
and
movups
cmps
add
je
mov
dec
dec
jbe
add
jmp
add
lea
push
rcr
push
sub
push
mov
ror
push
scas
or
xor
bound
push
push
pop
xchg
cmp
nop
mov
es
or
mov
or
bound
jmp
mov
mov
dec
add
addr16
adc
nop
ficomp
int
pushf
movs
lds
jmp
les
sbb
pushf
push
push
cmp
scas
push
pusha
ins
retf
fsub
or
mov
out
push
leave
push
in
pop
not
push
in
push
adc
mov
jmp
push
shr
push
push
xchg
add
mov
mov
dec
aam
or
mov
in
lock
sub
pop
cmp
add
xor
push
push
dec
and
dec
shl
push
pop
cmp
je
jge
sbb
xchg
inc
xor
jmp
and
popa
ficom
loopne
leave
mov
add
jnp
xchg
cmp
in
clc
call
jl
sub
ret
test
dec
dec
cmps
popa
jnp
mov
sub
sbb
sbb
pop
adc
fnstsw
and
stc
mov
js
icebp
dec
mov
mov
popa
pusha
adc
loopne
pusha
(bad)
icebp
pop
mov
das
push
adc
push
in
or
inc
add
jmp
push
movs
sahf
hlt
cmp
jl
inc
mov
pop
fadd
sub
push
test
inc
xchg
and
shl
in
adc
add
or
add
cmp
loope
mov
pop
movzx
and
cmp
jne
xchg
lock
cmp
es
stos
inc
test
dec
pop
(bad)
retf
mov
rol
pop
pop
sub
xor
icebp
xchg
stos
sahf
arpl
call
stc
sbb
retf
jbe
or
ret
push
pop
(bad)
rcl
in
(bad)
ficom
mov
pop
call
xchg
inc
outs
mov
dec
nop
xor
sbb
ja
fimul
inc
and
xor
jmp
out
enter
jo
jmp
aad
xor
adc
test
xor
or
aam
inc
inc
retf
lock
jge
add
dec
and
inc
inc
pushf
lahf
sub
add
pop
imul
popa
xor
mov
xor
and
dec
and
mov
or
loop
sub
and
loop
add
mov
clc
or
or
xor
mov
sbb
xchg
add
outs
sub
push
dec
xor
pop
out
pusha
inc
bound
sub
inc
enter
sbb
mov
push
pop
cld
pop
pop
mov
adc
mov
arpl
xchg
add
xor
addps
mov
or
add
or
inc
and
push
pop
pop
xor
pop
test
ucomiss
sub
retf
sub
xchg
push
pop
inc
leave
dec
popa
popa
dec
add
sub
das
adc
lods
fs
mov
sub
xchg
test
xor
cld
and
mov
inc
data16
(bad)
ins
inc
je
dec
inc
mov
cs
lods
imul
and
sbb
xchg
(bad)
sar
enter
xor
enter
fsubr
pop
movs
xor
and
imul
sbb
loopne
lock
xchg
add
test
or
xchg
sbb
push
ins
jle
sbb
push
ja
jo
fsub
fwait
push
test
push
push
and
add
or
sbb
inc
add
sbb
add
in
inc
inc
sbb
push
and
push
stc
or
and
mov
clc
pop
xchg
push
sub
ins
fcom
rcl
les
add
jbe
mov
clc
pusha
or
add
pop
add
inc
pop
retf
jg
data16
pop
add
and
or
xor
pop
and
(bad)
inc
sbb
clc
std
or
xor
sahf
push
and
shld
loope
pusha
pop
push
add
jno
out
mov
fild
popf
push
jne
sub
or
popa
lea
cmp
fcom
cmp
inc
imul
out
rol
dec
push
push
(bad)
ins
lahf
adc
repnz
add
daa
mov
pop
sbb
mov
aam
mov
jnp
js
push
inc
add
pop
jmp
jle
jg
sbb
mov
sar
cld
(bad)
shl
sub
retf
xor
jecxz
cmps
pop
stos
and
nop
movs
enter
inc
fsubr
ror
mov
jb
sbb
sub
mov
dec
sub
sub
push
int
jo
clc
sub
or
adc
add
call
lock
inc
dec
inc
cmp
shl
ins
into
sti
push
sbb
ret
xchg
mov
gs
mov
icebp
ins
push
jbe
or
sub
or
scas
int3
cmp
lea
sub
and
mov
jo
lock
into
jnp
fcmovbe
push
xor
ds
mov
mov
mov
mov
ins
sbb
and
xor
push
nop
arpl
mov
mov
or
sub
adc
sub
adc
mov
test
cmp
daa
sbb
push
pop
scas
add
imul
int
xchg
(bad)
jne
push
jmp
das
jns
xchg
cmp
je
and
loope
push
or
mov
push
or
cs
push
lods
dec
mov
scas
les
call
retf
inc
push
adc
xor
fcomp
fmul
jne
retf
ja
xchg
inc
dec
mov
sbb
jmp
or
add
enter
pop
cld
inc
jge
jbe
test
loopne
add
inc
push
pop
jge
inc
or
inc
cmp
imul
scas
ds
jecxz
add
pop
push
sti
cmp
inc
cmp
test
jp
push
ror
bound
push
mov
outs
mov
xlat
imul
cmps
das
js
jge
lods
sub
and
sbb
and
sub
and
lea
test
jmp
dec
mov
and
sbb
push
add
and
sbb
or
dec
les
xchg
or
shl
rol
pop
jmp
out
add
adc
push
fidiv
je
ins
xchg
mov
fmul
hlt
and
mov
popf
(bad)
ja
xchg
or
int3
xchg
mov
pushf
les
clc
cmp
sbb
aam
pop
add
sbb
call
call
mov
pop
add
cmp
fnstsw
es
in
in
rol
fsub
jge
adc
shl
mov
add
(bad)
dec
pop
mov
add
addr16
outs
xchg
cmp
stos
mov
adc
push
and
aaa
push
jbe
cmp
mov
xchg
cmp
push
or
(bad)
or
or
mov
sbb
or
sbb
pop
inc
push
or
ins
nop
xor
(bad)
jmp
arpl
jbe
in
push
adc
ins
loopne
in
jp
mov
adc
push
in
mov
push
mov
adc
xor
cmps
imul
pop
xchg
mov
sbb
repnz
out
and
jmp
add
and
(bad)
and
pop
push
imul
cli
ret
sbb
mov
pop
mov
xchg
data16
cmp
sbb
leave
lds
popa
adc
jbe
sbb
inc
or
push
adc
jbe
(bad)
dec
pop
or
cwde
xor
and
loop
and
fdiv
add
dec
inc
cmp
add
ds
fdiv
jno
sbb
adc
pop
jl
sub
add
mov
aad
gs
dec
or
jecxz
rol
mov
sbb
push
cmp
mov
push
inc
adc
mov
cld
mov
mov
xlat
push
add
sar
(bad)
sub
xchg
sti
sbb
xchg
sub
adc
push
rcr
lea
gs
pop
xor
(bad)
xchg
addr16
arpl
adc
lds
mov
dec
ja
test
dec
sub
fxch
shl
xor
xor
dec
add
(bad)
add
int
jae
cmc
push
push
adc
lock
push
xor
retf
hlt
xchg
std
adc
adc
or
pop
es
sub
mov
ins
mov
mov
pop
push
cmps
inc
mov
das
cmp
hlt
cmp
inc
popf
mov
push
adc
(bad)
test
dec
into
xchg
add
adc
dec
jmp
fld
les
jnp
add
popaw
cmp
call
out
mov
xlat
and
push
(bad)
mov
inc
mov
xor
inc
jmp
mov
aam
inc
ss
sub
sub
stos
movs
and
sbb
pop
xor
dec
imul
inc
push
loopne
adc
es
mov
gs
inc
push
mov
ins
je
lea
pop
imul
int3
adc
sub
sub
das
sub
dec
jae
in
or
rol
test
nop
cmp
in
push
mov
addr16
call
mov
or
jmp
cdq
loope
mov
xor
pop
inc
xchg
les
ror
and
jne
mov
add
es
in
cwde
ret
in
adc
pop
loop
popf
pop
jo
jmp
shl
ins
fwait
sbb
addr16
push
in
sbb
cwde
sbb
sbb
in
and
int3
mov
bound
mov
mov
push
pop
in
daa
jo
mov
sbb
les
data16
mov
or
mov
push
push
push
cs
adc
sub
dec
fimul
and
or
cs
xchg
out
pushf
test
inc
(bad)
mov
adc
loopne
ret
sub
es
cmp
ja
sbb
adc
pop
jecxz
adc
push
out
push
clc
jmp
push
pop
imul
std
fsub
mov
dec
fistp
xchg
clc
inc
cmp
xor
or
push
lock
outs
add
pop
xchg
je
xchg
test
inc
jg
ret
xor
fcom
ror
stos
(bad)
out
ror
or
test
or
fidivr
popa
push
js
sti
mov
je
add
and
mov
bound
add
and
jae
(bad)
lods
sub
inc
cwde
mov
nop
inc
xor
lods
rcr
inc
mov
push
adc
add
sub
in
push
push
pop
xor
scas
in
jnp
mov
cld
pop
or
xor
or
mov
jge
movs
add
les
xlat
sbb
imul
cmps
push
inc
fidiv
shl
jno
in
push
imul
mov
sub
and
add
add
ins
pop
pop
nop
fsub
es
cmp
add
pop
inc
jne
or
pop
rcr
sbb
add
std
inc
and
add
imul
or
sub
aas
inc
mov
loopne
enter
fadd
push
icebp
pop
hlt
mov
sbb
adc
stos
cmp
test
es
repz
and
push
cdq
leave
push
xchg
push
xchg
or
ds
inc
push
mov
into
sahf
imul
xchg
imul
sahf
mov
xor
sti
push
inc
push
push
cmps
les
mov
jl
push
(bad)
jne
imul
jb
cmp
and
jecxz
dec
(bad)
jmp
sub
mov
(bad)
aam
xlat
frstor
or
out
mov
shr
jl
hlt
dec
adc
add
rol
push
pushf
or
xchg
sbb
out
pop
stc
add
dec
adc
push
sub
xchg
and
loopne
pushf
sbb
test
and
ja
add
test
xor
scas
aas
cdq
retf
sub
mov
sbb
mov
or
pop
or
jo
outs
or
popf
in
sub
lock
push
ret
call
sbb
in
jmp
int3
test
sbb
js
jmp
xchg
jl
mov
xchg
xchg
ds
test
or
adc
or
inc
shl
jge
movs
adc
sbb
pop
cli
jb
(bad)
cwde
je
lods
xlat
add
fs
pop
lds
dec
inc
retf
popa
dec
inc
sti
dec
push
or
cmove
sub
push
cmc
jno
mov
jecxz
sub
ins
gs
dec
inc
iret
inc
arpl
mov
push
and
mov
xchg
or
pusha
rcl
pop
js
or
ret
push
xor
inc
pop
cmp
push
sub
cmp
inc
or
add
fdiv
or
lds
mov
loope
add
xchg
cld
and
sbb
aam
push
clc
jns
adc
mov
add
inc
adc
add
loopne
push
idiv
movd
stos
test
loope
add
sbb
popf
test
dec
push
xor
dec
outs
and
shl
scas
dec
lods
icebp
push
call
jmp
and
ds
retf
add
rcr
shl
sbb
inc
push
xchg
and
lahf
pop
ret
jp
pop
add
push
test
jne
fwait
push
inc
add
pop
ja
and
mov
jo
das
movs
jmp
adc
nop
xor
aas
push
mov
aad
cmp
jecxz
mov
and
cs
rcr
aaa
rcl
dec
cmp
mov
cmp
jmp
daa
dec
iret
data16
and
fwait
test
xor
imul
inc
jge
pop
sbb
test
or
or
jne
daa
in
ins
or
pop
mov
adc
mov
add
ins
push
fsub
inc
inc
cmp
and
jge
and
outs
and
mov
add
xchg
cmps
call
imul
cmp
cmps
bswap
dec
test
xor
sti
repnz
inc
mov
int
jge
push
pop
and
or
out
(bad)
imul
call
loopne
ret
adc
xchg
rol
out
fcom
inc
call
adc
ror
data16
lahf
or
or
adc
xlat
sbb
push
nop
sub
dec
cmp
pop
dec
inc
daa
test
pop
and
das
ror
pminub
adc
push
test
mov
test
or
adc
jecxz
mov
push
push
push
mov
and
dec
add
add
jmp
rol
nop
call
jnp
cmp
pushf
mov
mov
cvtdq2ps
mov
xchg
das
inc
test
push
nop
push
push
add
cld
jo
ins
inc
sbb
push
movs
test
or
mov
mov
cld
clc
adc
push
mov
lods
xor
in
ins
adc
(bad)
aam
jmp
daa
inc
pop
inc
fcom
mov
inc
dec
jecxz
or
pop
shl
xchg
jge
mov
adc
(bad)
pop
mov
cmp
or
pop
mov
fldenv
jo
push
adc
sub
aam
or
xor
out
pusha
adc
mov
mov
jmp
add
movs
pusha
and
jmp
mov
or
sbb
ins
pop
clc
or
out
pop
add
sbb
push
mov
mov
loope
test
or
push
inc
fsubr
clc
pop
jmp
mov
int
arpl
inc
inc
adc
dec
or
sti
cmp
xor
xor
loope
fwait
and
test
mov
rcl
(bad)
in
sub
push
or
adc
cmp
push
int3
fs
aam
popa
and
mov
fisub
mov
movs
jecxz
xor
icebp
out
cmp
dec
retf
jbe
sbb
jge
out
fiadd
mov
and
or
and
and
inc
in
clc
jno
popa
jae
clc
rcr
xchg
cmp
push
cmp
clc
push
mov
sbb
sub
or
sahf
jge
sbb
fsub
or
(bad)
js
aas
nop
outs
les
in
test
adc
push
jo
rcl
and
xor
push
test
mov
out
jl
and
rcl
adc
stos
pop
cmp
pop
adc
mov
je
lods
mov
int3
sub
dec
dec
inc
in
mov
cli
(bad)
mov
lock
std
and
fstp
and
ret
pop
pop
fstp
cmp
pusha
wrmsr
outs
sbb
fstp
push
jnp
inc
lods
pop
sub
out
push
mov
mov
inc
retf
fcmovnbe
imul
xchg
push
sbb
push
sbb
inc
sbb
sbb
push
push
nop
lock
retf
mov
mov
lds
test
(bad)
sub
into
adc
mov
adc
cmp
and
mov
inc
push
xchg
mov
inc
mov
and
scas
int3
push
xor
mov
jne
mov
sbb
sub
and
data16
stos
jne
pusha
pushf
nop
pop
in
jp
ret
xchg
les
jne
add
movs
mov
push
fdiv
cmp
je
mov
das
fwait
shr
call
xchg
cmp
pushf
add
push
lea
lahf
inc
fidivr
(bad)
out
or
shl
push
dec
movs
mov
inc
cmp
xchg
xor
xchg
mov
add
or
into
lea
je
xchg
popa
sub
mov
and
rol
inc
sbb
xchg
movs
(bad)
jne
adc
(bad)
les
retf
or
or
inc
stos
sbb
pop
aad
sub
aad
inc
adc
sub
jbe
bound
dec
adc
lock
inc
int3
shl
or
add
push
loope
fldcw
stos
jbe
outs
push
adc
sub
je
xor
sub
(bad)
xor
inc
nop
sbb
je
popa
inc
pusha
(bad)
mov
push
add
xchg
mov
add
sub
add
sub
test
xchg
mov
js
cmp
push
inc
mov
inc
push
and
lods
and
jle
mov
mov
and
js
pop
or
call
ins
fwait
(bad)
xchg
sbb
mov
inc
mov
push
call
cs
jmp
add
adc
xor
ds
(bad)
popa
popa
outs
or
dec
sub
in
sub
or
mov
retf
call
call
push
sub
clc
push
or
and
add
cs
icebp
push
int3
cmp
dec
sbb
lods
lods
jecxz
and
retf
scas
ret
ret
pop
push
jmp
or
xchg
adc
es
imul
inc
inc
loopne
mov
sub
sahf
adc
push
clc
mov
xor
cmp
cmp
imul
push
fst
in
push
xor
fnstcw
out
pop
pop
add
pop
pop
add
add
rol
push
xchg
or
add
sbb
pop
jbe
add
mov
test
hlt
sub
or
jmp
xchg
push
and
mov
inc
jmp
add
mov
adc
mov
pushf
cmp
mov
dec
enter
or
es
adc
or
fs
test
jne
iret
jmp
inc
pop
daa
and
aaa
jo
ret
push
outs
stc
adc
ror
les
scas
movs
imul
pop
imul
add
push
jb
cdq
and
or
movs
cwde
adc
bound
aam
pop
push
ins
jl
sti
add
add
sbb
fld
fstp
add
test
inc
sub
and
shr
cmps
pop
push
imul
je
sub
dec
(bad)
aad
adc
xlat
(bad)
and
inc
ins
mov
push
push
pushf
push
or
outs
mov
cmps
jbe
iret
xchg
add
aam
cs
mov
inc
pop
shr
les
(bad)
mov
xchg
add
xor
or
cwde
cld
add
jmp
test
mov
add
add
out
pusha
xor
int
inc
iret
add
sub
inc
xor
ins
sbb
sbb
mov
add
push
mov
or
or
add
ins
and
xor
xchg
mov
mov
sub
jmp
sahf
rcl
shr
jmp
sub
in
add
push
repnz
inc
sar
adc
sub
jo
mov
es
dec
je
mov
retf
fild
es
ret
push
or
neg
sub
push
inc
inc
jb
nop
cmc
inc
loopne
call
fiadd
dec
push
add
or
adc
mov
and
out
fld
adc
nop
out
or
test
add
jb
cmp
add
(bad)
lods
js
add
sub
fcomp
jge
(bad)
pop
sbb
jmp
mov
int
loop
cmp
inc
or
je
add
retf
(bad)
enter
daa
xor
mov
or
sbb
push
sbb
dec
arpl
xchg
lds
sbb
pop
je
add
shr
pop
add
jne
data16
stos
adc
out
fisttp
sbb
in
inc
add
sbb
stc
sar
inc
push
cmp
loope
cmp
add
imul
aam
inc
sub
and
jb
cwde
bound
xor
and
adc
xchg
mov
mov
mov
dec
int
cmc
inc
arpl
xchg
inc
jbe
repz
ret
mov
pop
je
inc
adc
sub
or
jae
popa
push
add
inc
mov
sub
and
pop
hlt
pop
pop
mov
cmp
jb
cld
lds
sbb
lahf
sbb
push
sub
pushf
and
fcomp
test
sbb
(bad)
sti
cli
ins
mov
or
or
cmp
bound
jne
sbb
pop
mov
push
retf
sbb
das
add
or
add
mov
int
pop
adc
dec
retf
add
and
mov
mov
daa
das
and
mov
dec
adc
mov
lock
test
push
test
push
cmp
sub
imul
jmp
mov
jp
lods
adc
or
pop
je
sub
je
push
or
fldpi
or
popa
movs
out
pop
pop
mov
adc
lods
mov
push
xor
cmp
xchg
je
or
xchg
cmp
mov
pop
or
shr
cmp
xor
pop
ret
pop
lods
pop
push
mov
ret
push
dec
add
mov
movs
loop
aam
or
xchg
xchg
xchg
dec
mov
pop
sbb
in
fadd
addr16
call
push
das
mov
mov
retf
push
push
xor
sbb
outs
push
je
retf
loop
sbb
or
xchg
sub
sub
aas
test
add
jmp
push
mov
sbb
call
push
sub
sbb
cs
aaa
int
sub
je
cmp
dec
das
loopne
add
xor
add
or
sub
sub
test
and
sbb
adc
or
int3
aam
inc
jo
into
and
mov
rcr
lods
mov
mov
and
sub
cmp
shr
push
dec
jb
cmp
sub
sbb
jae
pop
loop
mov
add
jnp
aad
add
fadd
fidiv
or
jae
or
dec
pusha
sbb
out
adc
scas
imul
pop
or
adc
mov
rcl
cmps
mov
arpl
push
retf
jl
mov
adc
xor
and
xor
cmp
xchg
or
in
fwait
ret
imul
push
sub
sar
fs
cmps
cmp
scas
dec
and
add
stos
adc
pop
inc
adc
cmp
pop
pop
fistp
retf
int3
push
pop
jp
adc
fiadd
cmp
inc
pop
and
hlt
mov
push
or
push
cmp
dec
inc
and
adc
dec
sub
inc
or
inc
cmp
imul
sbb
ror
(bad)
loopne
or
xchg
(bad)
jp
add
dec
pusha
clc
imul
sub
inc
js
inc
pop
dec
cmp
add
sub
loopne
jmp
fisttp
jbe
mov
cmp
fs
push
push
dec
pop
and
and
dec
(bad)
movs
repz
movs
xor
sbb
mov
sub
gs
rcl
mov
ins
xchg
inc
pusha
mov
ss
push
pop
(bad)
dec
cmp
sbb
adc
adc
je
data16
push
push
inc
test
cwde
inc
add
push
push
add
inc
jo
or
adc
xchg
dec
stc
push
nop
fiadd
es
adc
dec
xchg
push
test
push
inc
sbb
(bad)
pushf
or
ror
lea
lahf
xchg
inc
adc
ss
mov
jo
push
cmp
lea
cmc
inc
cmp
jb
mov
cmp
in
push
and
pop
add
cmps
(bad)
cmps
and
arpl
add
add
push
dec
add
jbe
xchg
and
loopne
test
mov
jl
mov
mov
shl
inc
pop
or
loopne
push
rcl
in
aas
pop
inc
xor
sahf
adc
ins
inc
loop
push
es
fmul
loopne
dec
mul
cli
add
inc
cmps
sbb
xor
push
adc
inc
aad
retf
stos
movs
jmp
xchg
or
add
adc
mov
popa
jo
cmp
jecxz
inc
and
push
fnstcw
or
xchg
clc
xchg
mov
inc
adc
movs
adc
add
loop
push
sahf
push
int3
sub
sub
add
mov
add
int3
push
add
xor
jno
jae
push
rol
pop
add
cmp
out
leave
cmp
punpcklbw
clc
xor
rcr
les
adc
push
outs
ja
sbb
jge
pop
jnp
mov
mov
sbb
mov
js
add
or
into
dec
shl
rcr
push
mov
jnp
fs
scas
dec
dec
mov
xchg
inc
shl
sbb
or
jo
out
inc
mov
jp
add
jmp
std
ror
push
adc
std
jno
in
out
pop
cmp
jmp
fimul
or
imul
jae
dec
push
jno
pop
inc
movs
pop
repnz
int3
xor
js
retf
ret
add
dec
rol
add
scas
loope
push
sbb
xchg
push
int3
add
or
push
pop
sub
dec
mov
sub
pop
jnp
mov
pop
and
push
sbb
outs
sub
push
push
jae
mov
mov
adc
in
sbb
in
dec
leave
add
mov
push
cmp
lock
mov
push
dec
push
mov
mov
bound
add
dec
add
push
pop
push
shl
cmp
push
or
repz
jmp
out
push
inc
sub
mov
test
or
(bad)
(bad)
cmp
jne
je
jmp
mov
or
fcom
add
jb
movs
mov
bnd
and
jns
les
pop
mov
pop
add
mov
sar
inc
test
adc
fst
arpl
(bad)
xor
loopne
call
adc
mov
js
xchg
je
and
add
mov
push
add
cmps
fnstenv
inc
fdiv
loopne
xor
xchg
push
inc
mov
and
xor
inc
adc
xchg
inc
xchg
or
jge
lods
sbb
dec
or
pop
cmp
pushf
mov
and
adc
ins
inc
ja
cmp
adc
pop
stc
sub
push
jecxz
pop
adc
or
xchg
xchg
imul
mov
push
rcl
aam
sar
cdq
in
push
shl
inc
mov
jl
fcmovnb
xor
and
pop
xchg
pusha
pop
rol
jge
(bad)
or
pop
inc
fdiv
aaa
inc
adc
cmp
pop
jb
scas
mov
pop
cmc
movs
jge
aad
cmp
sti
aam
or
push
or
or
in
push
cmp
pop
xor
mov
push
xchg
add
jnp
mov
pop
retf
scas
sub
jp
and
neg
inc
jb
or
cs
test
fcom
mov
or
sub
mov
je
adc
lea
cs
dec
or
aam
cs
adc
mov
stc
xor
and
push
push
pop
(bad)
leave
ror
leave
cmps
aam
leave
adc
or
jl
mov
ins
imul
repz
and
movs
or
xor
or
out
or
xor
(bad)
or
xor
out
jmp
inc
push
sbb
or
in
das
sbb
push
int3
inc
push
jno
push
out
mov
jmp
xor
jns
lds
inc
or
inc
or
xor
mov
jbe
repz
aam
shl
movs
inc
jg
gs
dec
adc
sub
mov
xchg
pop
adc
or
sbb
out
jo
imul
jp
pop
cmp
jmp
test
in
mov
push
xor
jmp
cli
pop
loope
mov
push
rcl
cmp
add
retf
addr16
inc
sti
push
sbb
imul
call
mov
sbb
jae
cs
adc
ins
jo
loope
mov
adc
push
cmps
out
ret
cmp
and
mov
cmp
push
sbb
pop
lds
mov
add
jge
jg
fidiv
mov
inc
xor
or
out
fimul
dec
or
inc
ins
inc
or
or
cmp
jns
push
and
add
mov
les
push
test
jle
rol
fcomp
and
dec
test
daa
or
or
or
push
sub
cwde
add
xor
sbb
add
xchg
jne
add
pusha
out
or
jp
adc
in
jne
and
add
and
cmps
dec
and
ret
and
xchg
dec
into
xchg
and
adc
add
pop
in
loope
mov
xor
sub
and
add
cmp
dec
fwait
sbb
sbb
cmp
int
mov
out
mov
icebp
cmp
xchg
adc
rol
add
xchg
rol
push
pusha
push
rcr
mov
nop
inc
bound
push
dec
mov
rcl
(bad)
in
ret
test
cwde
add
sub
enter
mov
pop
mov
or
outs
xchg
xchg
aaa
fwait
sar
test
inc
imul
inc
push
push
xor
push
loopne
add
cmp
ja
inc
adc
or
imul
or
stos
pop
push
sbb
or
inc
mov
jg
add
cmp
ins
push
mov
sbb
add
dec
pop
in
lea
inc
push
and
arpl
adc
pop
test
dec
pop
test
xor
xor
push
test
adc
jnp
push
pop
enter
push
nop
fistp
outs
dec
cmp
in
fcomp
inc
cmp
fild
sub
mov
sbb
fcomp
xchg
mov
sub
fisub
imul
call
(bad)
cmps
outs
xchg
xor
add
dec
or
xchg
adc
leave
mov
cdq
inc
dec
adc
adc
imul
dec
repz
inc
push
xchg
push
mov
xchg
or
inc
or
push
loopne
je
adc
(bad)
cli
lea
ss
jmp
cmp
fild
iret
sbb
in
repz
test
adc
jmp
adc
push
push
mov
xor
add
sbb
aaa
push
sub
js
pop
xchg
ror
mov
inc
pop
mov
push
sub
inc
mov
xchg
inc
test
call
jmp
pushf
je
fstp
ds
hlt
inc
or
fmul
or
jne
inc
push
push
adc
(bad)
(bad)
fmul
pop
fisubr
add
(bad)
jb
ja
cli
or
pop
xlat
dec
cmp
(bad)
repnz
adc
adc
adc
push
out
inc
add
pusha
sbb
inc
mov
rcl
cmp
or
xor
jb
xor
xchg
popf
add
mov
push
add
and
mov
mov
inc
or
jne
cmp
popf
jbe
push
add
pop
pop
movs
mov
sub
or
push
push
adc
or
fadd
loope
mov
inc
adc
int3
les
jbe
push
fcos
shr
out
push
jmp
enter
in
and
sbb
push
icebp
pusha
and
inc
mov
push
clc
xchg
and
loopne
cdq
xchg
fcom
inc
sbb
loope
inc
jne
jbe
loope
nop
dec
fsubr
ja
xchg
in
push
xor
xor
jne
push
jae
sbb
xchg
sub
ds
dec
jp
pop
scas
mov
pop
push
xchg
retf
add
jge
daa
cmp
or
xchg
leave
cs
cdq
cs
pop
xor
add
arpl
lock
pop
jns
jbe
mov
push
push
mov
mov
sub
xlat
iret
add
xchg
sbb
loop
sub
dec
je
push
shl
mov
shl
or
in
aam
adc
nop
and
mov
jp
popa
iret
lea
xchg
push
(bad)
movs
outs
add
sti
adc
rcl
mov
outs
dec
mov
sbb
add
shr
push
xor
push
add
pushf
adc
shl
or
out
sbb
or
inc
push
mov
nop
dec
out
xchg
ror
fmul
mov
pop
push
pop
test
mov
repz
sbb
inc
cmps
fstp
cmps
cmp
gs
push
push
and
dec
add
rol
sbb
pop
and
bound
jne
mov
fnstenv
xor
in
out
daa
stos
xlat
in
sbb
ss
retf
fst
je
dec
and
push
dec
hlt
xchg
push
push
mov
adc
in
fdiv
lock
xor
xor
in
xor
sub
clc
pop
mov
mov
in
dec
or
push
mov
mov
pop
(bad)
(bad)
(bad)
outs
sub
lahf
sbb
sub
push
sub
adc
xchg
pop
nop
mov
add
fs
sub
jp
or
ins
jmp
xchg
sbb
sub
inc
rol
fist
test
in
push
iret
mov
pop
pop
shl
loopne
adc
fmul
cmp
sub
inc
push
push
loopne
cmps
cmp
mov
into
rcr
movs
test
and
add
fld
and
pop
leave
arpl
sbb
sub
div
pop
loope
or
seto
jno
es
xor
sub
(bad)
cmps
and
sbb
icebp
cmp
dec
and
push
arpl
cmp
loope
neg
adc
ficomp
scas
aas
xchg
add
push
cs
cmp
aam
mov
jmp
sti
in
add
jne
xor
rol
dec
xchg
outs
shl
in
add
gs
(bad)
mov
hlt
xor
xor
inc
jne
aaa
test
lock
les
mov
push
(bad)
jmp
and
and
pop
jbe
pop
add
sbb
popa
or
cwde
jno
mov
retf
push
add
test
cmp
mov
rcr
dec
lock
or
xor
adc
or
aam
inc
into
ins
dec
lock
mov
lods
cmp
dec
sub
ret
pop
fisttp
pop
and
inc
jne
xor
push
sbb
cmps
rol
or
add
cmps
lock
sub
frndint
xor
xchg
(bad)
adc
sbb
mov
outs
(bad)
inc
push
movs
and
or
adc
mov
repz
and
push
xor
popa
add
pop
push
rcl
mov
or
cmps
sub
add
fsubr
repz
pop
sub
xchg
pop
adc
and
sti
mov
mov
sub
and
or
mov
add
shl
add
xchg
or
xor
sub
loopne
cmp
cmps
loop
sub
xchg
ret
imul
je
dec
(bad)
sbb
arpl
sbb
xor
mov
adc
fild
pop
dec
lds
push
cld
mov
or
cmp
fxch
mov
dec
jo
dec
pushf
dec
xor
cmp
pop
push
xor
pop
dec
aaa
dec
test
pop
push
out
cmps
xchg
mov
push
cmc
xchg
adc
pop
sbb
mov
lock
sub
mov
push
xchg
fld
imul
je
jmp
inc
mov
jbe
(bad)
push
sti
or
jmp
repnz
add
or
call
xor
cmp
fld
fstp
data16
dec
push
(bad)
sub
or
push
and
pop
ss
inc
xlat
pop
(bad)
nop
mov
xor
xchg
xchg
and
mov
aam
mov
or
into
pop
enter
fstp
pushf
mov
test
(bad)
push
sbb
push
dec
mov
adc
xchg
ficom
or
(bad)
jle
or
adc
fiadd
and
test
enter
loop
es
xor
mov
stc
jmp
fiadd
add
mov
leave
lods
xor
add
cwde
movs
mov
mul
in
ret
and
das
outs
cmp
repnz
(bad)
sbb
or
leave
test
fs
and
outs
or
pop
call
xchg
xchg
add
jmp
push
sub
cmp
in
or
test
inc
push
sub
popf
sub
pop
push
or
cmps
push
jo
push
mov
dec
cmp
les
lds
adc
ret
and
fldz
push
outs
pop
scas
or
mov
pusha
scas
or
xchg
mov
mov
mov
or
in
mov
add
lea
mov
push
xor
push
push
mov
jns
(bad)
hlt
mov
or
in
movs
add
add
test
cmp
fild
jbe
dec
fdiv
sub
and
jne
fchs
cs
cmp
xor
in
sbb
dec
in
xor
sbb
sub
xchg
add
mov
or
dec
xor
pop
push
ins
ins
mov
scas
push
add
leave
cmp
and
mov
inc
sbb
in
mov
ret
loopne
cmps
push
sub
jp
pop
jmp
sbb
mov
cs
inc
dec
cwde
sub
str
cmp
dec
(bad)
dec
mov
cli
add
add
test
push
jns
shl
(bad)
or
add
call
mov
loop
cmp
lea
jl
in
dec
lea
push
fild
mov
or
add
imul
nop
sbb
mov
cmc
xor
pop
push
mov
icebp
add
call
or
pop
lods
aam
fisttp
js
xchg
imul
adc
xor
outs
jecxz
push
mov
and
mov
ret
jo
shr
xchg
(bad)
jmp
sahf
and
mov
dec
gs
into
mov
mov
test
pop
in
sbb
sbb
aas
xor
ins
push
push
pop
pop
loope
inc
jmp
sbb
adc
in
jle
iret
fmul
ss
cdq
cmp
xchg
xor
cld
and
xchg
int
movs
add
arpl
pop
pop
xor
sub
es
sahf
test
retf
push
aas
scas
adc
and
push
push
nop
and
adc
push
push
push
cmps
xchg
mov
xchg
xor
inc
cmp
loope
or
xor
inc
xor
jmp
pop
mov
loop
add
jb
jecxz
pop
int
mov
adc
or
pop
inc
add
ins
sbb
sahf
dec
push
pop
sqrtps
cmp
stos
push
or
aaa
pop
inc
enter
dec
adc
jmp
aad
je
mov
add
adc
or
(bad)
arpl
std
div
xor
xchg
or
xchg
in
in
mov
(bad)
inc
cmp
mov
xchg
jbe
xchg
push
test
push
add
and
int3
mov
cmp
aaa
add
and
sti
not
pop
daa
cmp
and
fimul
out
shr
in
push
sub
push
inc
sub
adc
and
or
les
push
jne
inc
jmp
lea
or
pop
dec
mov
push
xchg
fs
sub
loope
cwde
and
mov
dec
or
or
adc
add
aaa
and
jo
sub
mov
jmp
or
or
div
xchg
test
lds
or
lock
pop
sbb
xor
add
enter
(bad)
jnp
dec
dec
test
mov
push
add
sub
xor
(bad)
sti
lock
or
jmp
sbb
jmp
pop
pop
(bad)
arpl
mov
add
mov
dec
adc
or
push
push
cs
cmp
lods
jb
test
inc
add
clc
jp
sbb
stc
or
mov
xchg
pop
clc
push
retf
js
iret
xchg
clc
cli
xchg
xchg
cmp
push
loopne
sbb
cmp
mov
movs
lds
sbb
and
shl
xor
add
in
mov
lahf
inc
mov
neg
adc
push
push
aam
test
popa
sub
sub
push
test
push
scas
int
cmp
or
jp
or
cli
cdq
jmp
add
fxch
push
adc
or
mov
in
sub
pop
ja
pop
adc
imul
add
imul
fwait
xchg
stc
dec
push
jne
ss
arpl
dec
mov
sbb
movs
mov
and
and
and
push
ja
xor
pop
sbb
addr16
in
jne
not
(bad)
mov
loope
pop
es
or
jnp
inc
adc
push
push
ins
test
sub
add
(bad)
push
les
dec
add
test
add
or
in
sti
jge
addr16
jns
scas
xor
lahf
xor
aam
(bad)
and
movs
adc
jl
add
fs
add
mov
ret
js
test
fmul
or
xchg
or
adc
or
call
fld
pmullw
cmp
mov
dec
push
and
adc
leave
or
cmps
cli
and
or
and
outs
adc
jl
xchg
xchg
mov
adc
pop
imul
push
pop
(bad)
sar
xor
adc
fs
sub
pusha
popa
iret
cmp
leave
inc
shr
jno
ins
sar
cwde
pop
aad
inc
lods
dec
push
xor
lock
inc
add
jp
xor
dec
mov
xchg
jmp
into
pop
push
xchg
pop
call
sbb
mov
jb
ret
push
add
pop
cmp
mov
ja
add
in
je
and
cmp
pop
cmc
add
jo
lds
sbb
push
jbe
adc
movs
mov
mov
inc
mov
adc
xchg
push
xor
pop
sahf
mov
jbe
cmp
ss
xor
push
and
sub
bswap
and
lea
sub
pop
sbb
adc
inc
cmp
call
sbb
les
push
popa
adc
retf
ins
call
xor
cli
adc
sub
aaa
add
inc
push
(bad)
aam
(bad)
enter
in
xor
cmp
popa
jp
adc
jb
mov
inc
add
inc
cmpxchg
push
outs
pop
mov
ja
or
mov
push
mov
std
clc
mov
test
adc
mov
mov
cmp
add
push
inc
pop
popf
outs
imul
gs
or
jmp
sbb
loop
bound
or
sbb
pusha
adc
or
jne
fdiv
pop
(bad)
dec
rcr
adc
inc
loop
sbb
push
outs
add
icebp
sub
and
and
loopne
arpl
push
fsub
sub
lea
add
adc
sbb
fimul
xchg
jg
clc
mov
push
xor
add
test
es
out
ja
adc
add
adc
sbb
hlt
pop
jbe
pop
sub
imul
inc
outs
in
rcr
add
mov
jg
sbb
adc
or
sub
cmp
test
add
mov
inc
mov
call
call
adc
cwde
mov
sbb
pop
mov
jo
imul
or
popa
xlat
inc
cmp
pop
dec
aam
adc
dec
aad
add
pop
push
call
pop
lock
dec
cli
xlat
aaa
and
js
pop
sbb
mul
add
adc
loope
(bad)
adc
adc
xor
pop
or
or
and
mov
xchg
pop
jle
dec
xor
lock
lock
jg
and
xchg
aaa
mov
es
sti
or
add
inc
pop
enter
pop
adc
adc
imul
mov
ins
int3
push
xor
fsubr
mov
movs
jle
test
movs
inc
or
scas
cmp
ds
sbb
push
inc
pop
pop
or
int3
jg
nop
adc
ja
cmp
add
cmp
mov
fs
jmp
jae
mov
imul
mov
ret
jno
fdiv
cmp
sub
lods
scas
mov
scas
push
ret
add
jmp
aaa
lods
nop
cmc
lock
pop
nop
adc
adc
and
pop
cmp
aam
addr16
out
or
mov
cmps
and
sub
lods
test
cld
push
dec
and
sbb
xchg
xor
lea
or
jo
retf
xchg
and
cli
inc
enter
test
sbb
or
or
sub
pop
das
inc
mov
movups
jb
not
add
add
mov
push
cli
push
sbb
inc
fiadd
mov
hlt
jbe
add
lea
inc
movs
lods
aad
cmc
pusha
sub
stos
xor
xchg
ror
or
loope
movs
adc
push
sbb
jle
push
inc
test
bound
sar
mov
ss
call
in
and
call
mov
out
mov
push
les
xor
arpl
push
jae
jns
xor
gs
fstp
out
cmp
lock
pop
cs
in
adc
pop
in
movs
nop
add
xor
fiadd
and
xchg
movs
or
xor
sub
xor
hlt
ja
loop
adc
lods
clc
mov
push
jae
(bad)
cmp
cmp
cwde
pusha
ja
mov
jo
xor
daa
add
jns
cmps
cmp
or
into
rol
sub
ins
sar
sub
pop
(bad)
mov
pop
push
dec
mov
cmp
dec
cmp
int3
add
xor
(bad)
fwait
xadd
and
or
movs
inc
add
mov
xchg
imul
adc
or
sub
and
cmc
xor
add
lock
or
jno
jo
mov
mul
ss
and
ja
xor
mov
sub
leave
mov
(bad)
fbstp
inc
rcr
pop
(bad)
fisttp
call
test
pop
imul
inc
test
popa
arpl
jmp
in
ins
dec
pop
add
hlt
ss
dec
mov
fsub
imul
das
out
(bad)
das
jb
loopne
fimul
mov
fcomp
mov
jo
add
cmp
(bad)
gs
cwde
or
jne
movs
inc
fmul
(bad)
dec
ins
or
inc
adc
xchg
jbe
pushf
sub
pop
cwde
and
and
imul
cmp
test
inc
inc
inc
scas
jne
fidivr
dec
dec
jmp
lock
sbb
sar
pop
mov
add
iret
imul
(bad)
or
mov
cmp
nop
clc
rol
imul
mov
mov
ss
inc
xor
or
dec
loop
xchg
pusha
and
push
or
into
loopne
cli
leave
cmp
retf
and
pop
and
mov
xor
repnz
adc
push
push
les
test
stos
stos
stos
or
or
add
or
scas
out
retf
jp
or
add
dec
add
or
sub
rcl
test
cmp
and
push
xor
sbb
dec
mov
ja
lock
push
inc
mov
cdq
mov
ins
xchg
push
or
cwde
mov
in
dec
loopne
lds
adc
xchg
sub
retf
jno
clc
push
loopne
jmp
popf
adc
imul
stos
pop
outs
push
pop
xor
mov
lds
jle
sbb
call
push
scas
fdiv
pop
cmps
jl
bound
fdivr
xchg
sub
mov
cwde
lods
ret
lock
pop
or
mov
retf
adc
xor
add
int3
repnz
mov
mov
xchg
test
sub
sub
dec
mov
cmp
(bad)
sahf
mov
mov
sar
xor
push
sub
sbb
adc
push
mov
add
lods
push
mov
(bad)
aam
std
mov
lea
clc
or
mov
adc
outs
sbb
test
xchg
mov
push
or
adc
add
xor
inc
or
push
push
ret
dec
add
call
push
push
add
jge
add
js
push
cmps
cmps
shl
sbb
jne
push
or
xor
add
jnp
scas
or
or
sti
inc
cmp
cmp
xor
rcr
in
fstp
and
jmp
adc
dec
push
push
sub
push
cwde
mov
in
fcomp
push
test
ins
fst
enter
pop
cmp
je
je
iret
cmps
pusha
or
xchg
sub
push
or
sub
repz
jmp
cmp
push
ret
or
add
shl
addr16
shl
sub
jo
xchg
jb
(bad)
and
add
fld
mov
fisttp
rcl
or
int3
sub
sub
xlat
add
sub
mov
fiadd
mov
idiv
les
mov
pop
test
popf
aam
rcr
not
xchg
cmp
stos
push
lods
sahf
push
rol
push
sub
pcmpeqb
jbe
ds
adc
xchg
and
adc
mov
lods
into
pop
ds
and
dec
es
pushf
sub
ret
int
in
push
mov
(bad)
push
add
adc
nop
ins
inc
cwde
mov
dec
adc
call
enter
push
call
sahf
js
add
xor
loop
lea
pushf
aaa
sqrtps
inc
xor
imul
inc
or
cmp
adc
test
sbb
fbstp
xchg
sbb
dec
xor
or
into
xchg
jmp
(bad)
jl
or
pusha
push
push
(bad)
adc
dec
loopne
out
xchg
popf
pusha
mov
(bad)
mov
(bad)
ja
inc
mov
int3
je
adc
sbb
adc
pusha
push
sbb
sti
out
ja
jmp
fld
fstp
jmp
fst
fstp
clc
mov
mov
es
mov
addr16
add
test
jmp
xchg
ret
sub
loope
(bad)
mov
pop
int3
jecxz
push
lods
lods
inc
add
imul
mov
pushf
sub
das
pop
sub
pop
loop
(bad)
fsubp
cs
add
outs
push
outs
mov
adc
arpl
mov
stos
out
imul
push
mov
mov
cmp
shr
(bad)
push
out
mov
dec
cld
pop
xchg
pop
js
and
jne
or
push
pop
retf
and
icebp
jno
and
outs
or
sbb
cdq
or
pop
adc
and
add
daa
fst
lock
movs
dec
sbb
dec
adc
or
(bad)
jecxz
test
sbb
sub
and
mov
mov
jmp
lods
pop
push
dec
add
or
jecxz
out
retf
inc
pop
mov
or
or
fwait
or
lods
add
je
adc
cmp
cld
in
add
or
int
xor
aas
cmp
jne
ss
enter
fild
ins
data16
sahf
outs
adc
add
movd
test
pop
repz
jbe
push
jo
adc
sbb
jbe
or
push
jo
dec
push
pop
inc
mov
add
lods
jne
dec
aas
cmp
xlat
pop
dec
or
dec
ret
and
pusha
das
cs
fisttp
fisub
aaa
jle
mov
sbb
ror
pop
mov
mov
inc
sub
cs
sub
cmp
je
scas
js
inc
lods
or
ret
mov
xchg
aaa
lahf
pop
movs
sub
push
cmp
dec
add
or
fcom
add
pushf
adc
sub
fstp
xor
mov
mov
sbb
loope
sti
inc
ja
fimul
or
xor
dec
(bad)
aas
je
add
inc
add
imul
pop
aas
stc
pop
and
rcr
ret
les
and
xor
sub
mov
xor
adc
xor
push
xchg
in
xor
es
lea
pop
jmp
ins
pop
and
inc
add
mov
add
or
pusha
jle
mov
cmps
retf
jmp
mov
dec
adc
mov
out
dec
add
inc
jnp
pop
xor
sbb
(bad)
sahf
adc
push
xor
pavgb
push
cmp
push
push
rol
jmp
fs
add
mov
mov
adc
lods
inc
push
jne
xchg
je
jg
in
adc
aaa
or
add
cmp
or
inc
das
in
in
adc
ror
or
and
mov
daa
lods
sub
add
or
adc
ja
jp
neg
stc
aaa
int3
dec
lahf
adc
dec
adc
sahf
sub
and
in
and
inc
jmp
mov
xor
inc
and
retf
push
push
mov
por
push
mov
cmp
int
add
mov
adc
mov
cwde
cdq
in
xchg
dec
(bad)
and
shr
adc
xchg
inc
inc
mov
jbe
ret
inc
mov
sbb
dec
adc
nop
xor
lock
clc
mov
add
or
and
add
repz
nop
cmovae
cmps
cmp
repz
pop
mov
inc
add
inc
and
xchg
or
(bad)
or
dec
mov
sbb
push
das
pop
fld
ss
out
push
cmp
ret
ds
pop
and
dec
sbb
jne
xor
push
push
xchg
add
sbb
xor
stos
jae
adc
mov
xchg
dec
iret
movhlps
push
jne
xchg
mov
and
sbb
mov
cmp
test
adc
mov
aaa
leave
das
(bad)
cmps
dec
and
inc
sbb
inc
and
sbb
ficomp
cmc
or
cmp
mov
lahf
push
popf
fidiv
adc
int3
mov
adc
cld
lea
adc
lahf
mov
xchg
mov
dec
or
xchg
xor
and
inc
mov
pusha
jnp
add
inc
and
cmp
sbb
add
sbb
aas
xor
push
add
ret
loop
popf
pop
sub
adc
push
sbb
enter
jns
(bad)
adc
adc
fs
dec
dec
sub
add
retf
pushf
call
mov
inc
pop
or
ins
add
popf
pop
or
cs
push
imul
add
adc
sub
add
adc
push
xor
inc
push
add
js
or
test
mov
push
cld
icebp
or
push
inc
and
retf
push
jb
in
je
bound
push
pop
imul
cmp
inc
jg
scas
mov
mov
and
cmp
jae
dec
loopne
and
inc
mov
jle
cmp
xchg
shl
mov
lock
ret
or
xchg
cmps
xor
inc
push
stc
inc
mov
push
push
inc
inc
dec
push
cmp
mov
or
add
mov
dec
mov
inc
loopne
pop
inc
imul
xchg
mov
(bad)
pusha
popf
adc
pop
push
nop
xchg
lock
or
mov
push
or
into
inc
pop
sub
sub
mov
daa
sbb
mov
pop
sbb
sub
adc
or
add
xchg
mov
push
inc
jle
mov
adc
mov
into
inc
call
stos
cmp
or
mov
retf
pop
push
fidivr
push
jne
imul
or
ds
xchg
inc
push
test
xchg
add
xchg
dec
mov
imul
cmp
adc
add
jae
push
or
inc
or
or
and
mov
ja
adc
js
pushf
jp
jo
adc
inc
mov
push
pop
jmp
outs
ins
sbb
outs
jo
dec
add
(bad)
lahf
add
add
push
jmp
jle
and
jbe
or
mov
cmp
adc
push
leave
adc
fistp
adc
inc
cwde
push
xchg
dec
fisubr
push
adc
or
mov
les
xchg
dec
into
cs
(bad)
jne
cmp
xor
pop
inc
aaa
xor
fwait
dec
fs
dec
ret
add
and
sahf
lahf
lahf
outs
or
movsx
movzx
lods
sbb
(bad)
push
and
fstp
loopne
or
in
loop
addr16
inc
or
add
jae
xor
push
data16
pmulhw
dec
adc
cmp
sub
mov
sbb
sahf
loopne
popf
cmp
mov
push
add
adc
pop
or
xchg
mov
ins
dec
(bad)
das
outs
push
into
push
mov
cmp
mov
call
inc
mov
jecxz
pop
ja
or
push
xor
jp
call
push
fistp
adc
inc
sub
jb
jle
push
fnstcw
stos
push
outs
aam
or
adc
xchg
gs
sub
push
lods
pop
or
mov
cs
push
xchg
mov
jl
dec
mov
popa
add
mov
inc
mov
mov
adc
lock
arpl
loopne
mov
(bad)
out
pop
cld
ss
(bad)
je
in
push
jmp
ret
ins
jl
pop
pop
ja
repnz
pop
fadd
in
add
test
xchg
xchg
mov
mov
pop
jmp
mov
mov
push
add
hlt
mov
add
ret
bound
mov
nop
mov
push
mov
push
add
xor
adc
xchg
mov
mov
fcom
xor
and
xchg
mov
mov
or
in
mov
pop
mov
add
sbb
sbb
cwde
std
mov
inc
jmp
adc
pop
int3
fld
push
add
test
aaa
inc
loope
jbe
in
ror
rcl
test
lods
je
inc
sub
dec
jl
(bad)
in
call
xchg
int3
and
lock
shl
mov
xlat
push
outs
push
inc
and
leave
add
out
imul
mov
mov
mov
jo
pop
pop
je
fldcw
push
fisttp
fstp
push
add
dec
data16
add
adc
shl
clc
pop
xor
dec
clc
cli
repz
or
dec
jne
inc
sbb
xor
cmp
pop
inc
shl
dec
ins
enter
mov
cmps
gs
bound
jns
cmp
dec
push
aaa
push
aas
sub
in
cmp
inc
push
push
xchg
pop
add
mov
and
sub
add
pop
or
and
lods
inc
adc
and
mov
or
call
adc
push
mov
push
inc
jle
retf
add
fbstp
(bad)
and
mov
pop
xor
add
je
movs
add
pop
daa
mov
and
dec
(bad)
or
add
popa
jmp
add
rcr
fild
lock
test
(bad)
daa
lods
push
ror
sbb
sub
sbb
test
adc
fwait
les
cmp
push
dec
mov
cmp
aas
xchg
inc
sbb
or
retf
xor
push
rcl
add
or
push
mov
scas
or
mov
inc
xor
mov
add
or
or
pop
cmps
inc
add
scas
lea
ror
sbb
add
out
jo
cwde
adc
jl
out
pop
or
adc
in
cmp
adc
sbb
je
sbb
and
adc
ds
stos
jl
test
pop
fld
fmul
inc
imul
mov
xchg
mov
stc
test
cmp
mov
jl
cwde
or
inc
xchg
pop
sbb
(bad)
push
loope
(bad)
int
mov
adc
inc
push
clc
jne
mov
add
in
sbb
add
fst
cwde
jbe
mov
jns
mov
add
lds
ja
jp
or
pop
(bad)
jmp
push
jb
lea
push
out
sub
mov
sbb
add
shl
cmp
cdq
push
inc
dec
push
adc
push
lock
and
call
cmp
dec
inc
mov
mov
loope
daa
pop
pop
pop
add
mov
sub
mov
pop
pop
mov
inc
lods
push
dec
outs
adc
in
jle
jmp
mov
and
popa
and
adc
out
out
gs
(bad)
ret
sub
sub
in
ss
mov
cmp
sub
inc
cs
adc
pop
or
das
dec
mov
xchg
inc
mov
xchg
retf
cmp
icebp
or
outs
fwait
add
inc
cmp
or
sbb
adc
inc
lock
add
nop
test
(bad)
mov
ins
test
cli
jmp
pop
ret
mov
adc
inc
and
and
fsub
pop
cmps
and
or
inc
mov
and
sub
shr
or
mov
push
xor
and
iret
sar
fist
les
lods
cmps
lar
test
sbb
test
cmp
mov
movs
rcl
cmp
sbb
adc
push
cmp
lea
dec
adc
lock
loope
xchg
shl
mulps
rcl
lock
adc
mov
rol
cwde
sbb
rol
loope
test
js
cmps
lea
rcr
bound
or
cmp
hlt
sub
add
inc
(bad)
movs
pop
adc
adc
cmp
sbb
hlt
cwde
cmps
(bad)
pop
pop
imul
add
stos
mov
les
xchg
push
xor
or
(bad)
and
jl
xor
pop
xchg
cmp
add
push
push
xor
cmc
pop
xchg
cs
nop
mov
aad
push
mov
xchg
xor
dec
jbe
out
sahf
add
xor
dec
das
stc
jbe
add
adc
shl
mov
cmp
ja
cmp
mov
out
popa
cmp
ror
pop
ss
push
mov
shl
jbe
les
inc
jo
mov
shl
out
xchg
nop
mov
jbe
add
add
sub
mov
cmp
shl
mov
add
sub
jmp
rcl
popa
fs
and
cmp
outs
adc
push
mov
xor
jae
or
pop
imul
outs
add
mov
jl
mov
or
leave
mov
dec
and
cmp
or
adc
mov
sub
xor
or
ins
leave
cmp
bound
dec
mov
sbb
(bad)
mov
add
jne
fwait
shr
adc
scas
jmp
mov
push
inc
scas
and
arpl
xor
or
mov
adc
jne
adc
add
fwait
add
push
push
mov
cmps
mov
je
fld
xchg
(bad)
inc
mov
daa
sub
je
lea
out
pushf
scas
adc
inc
and
xor
mov
dec
jmp
push
cmp
pop
adc
pop
leave
push
mov
in
push
add
fld
es
ret
cld
loope
jmp
popa
out
(bad)
or
ins
adc
cld
clc
leave
(bad)
sbb
sub
push
cmp
add
nop
jbe
ficom
and
sbb
ja
adc
add
call
push
or
pop
mov
or
push
pop
iret
adc
repz
jmp
or
dec
or
ret
and
cmp
in
cmp
mov
add
push
xchg
add
adc
(bad)
pop
add
inc
ret
push
addr16
pop
jmp
outs
std
loopne
xchg
xchg
pushf
mov
xor
std
jne
sbb
clc
(bad)
jne
push
or
daa
jae
or
cli
pop
pop
mov
cmp
add
mov
lock
mov
cmc
into
add
xor
(bad)
pop
sar
sub
cmp
and
data16
popa
jmp
mov
cmp
cmp
test
hlt
xor
cli
(bad)
or
pop
add
or
push
in
mov
imul
and
sbb
push
pusha
rcr
aaa
or
and
push
cmps
inc
rcr
fwait
arpl
aaa
scas
or
sub
pop
(bad)
gs
pop
nop
mov
rol
ja
push
lahf
push
mov
mov
repnz
fs
pop
inc
jg
dec
pop
(bad)
adc
popa
push
pop
mov
out
mov
push
add
dec
adc
test
and
push
pop
cmp
mov
xor
aas
imul
dec
jne
jle
or
xchg
cmp
mov
div
enter
loop
or
jbe
push
pop
neg
push
push
bound
jo
pop
pop
mov
xor
neg
xchg
push
push
rsm
add
adc
shl
das
rol
xchg
(bad)
mov
out
inc
dec
inc
aam
aaa
cmp
push
add
pop
xlat
push
pop
and
adc
push
push
inc
xchg
popa
sahf
or
mov
mov
je
push
ret
pop
and
and
push
and
or
xchg
jnp
sbb
mov
or
mov
adc
stc
adc
aas
fstp
push
pop
cld
out
js
cmp
inc
es
push
call
call
cwde
into
mov
shl
gs
clc
sub
or
popa
ret
ja
and
xor
call
sbb
adc
stos
push
and
sbb
pop
les
mov
jp
inc
les
mov
imul
jb
sti
push
lahf
pop
push
shrd
pushf
push
pusha
cmp
mov
sub
movs
push
jb
int3
add
and
dec
arpl
and
stos
xchg
int
call
test
xor
(bad)
push
jo
loop
js
dec
scas
aad
sar
fsubr
fld
or
sub
je
aad
jno
add
mov
mov
xor
scas
das
push
je
sbb
push
mov
and
arpl
or
cmp
jbe
fidiv
rcr
mov
sbb
push
add
xlat
pop
ret
ror
lea
mov
or
dec
xchg
(bad)
pop
repz
inc
sbb
es
mov
test
fmul
sbb
pop
pop
xchg
repz
sub
xchg
movs
out
ss
hlt
in
in
cs
inc
add
cmp
test
rol
test
inc
pushf
push
jge
fistp
aaa
ins
mov
sbb
push
push
mov
pop
pop
mov
hlt
call
mov
pop
or
ins
enter
hlt
mov
push
cmp
dec
mov
fdiv
add
clc
data16
cmp
and
dec
not
and
repz
ret
adc
es
icebp
dec
fnstenv
lock
jb
add
sbb
fnstcw
push
movs
mov
sub
jl
mov
enter
sbb
popf
int3
int3
push
popf
push
lds
fs
add
jl
jl
loopne
mov
test
or
call
push
cld
jae
rcr
sbb
inc
ret
stos
in
or
jmp
or
inc
aas
pop
or
xor
mov
fcom
or
jecxz
mov
mov
iret
xor
mov
fiadd
sbb
pop
push
sub
mov
jb
push
cmp
cmc
movs
imul
(bad)
pusha
xor
xchg
mov
mov
out
ins
cmp
and
js
movs
out
cmp
xlat
push
ja
scas
or
add
dec
xchg
sbb
push
fild
jl
test
or
sub
jecxz
(bad)
adc
test
arpl
adc
jae
(bad)
int3
ret
and
jmp
rcl
scas
or
push
adc
rcr
rol
test
ja
(bad)
sub
je
push
not
mov
das
push
ror
cmp
dec
ror
jmp
sar
(bad)
mov
dec
(bad)
jge
test
call
ss
in
add
cmps
add
pushf
sbb
or
loop
sub
xor
xchg
inc
enter
add
ins
cld
mov
jmp
sbb
and
inc
fild
sar
mov
clc
mov
ds
jle
(bad)
and
xchg
ret
shr
mov
rol
mov
cmp
or
ja
jnp
movs
dec
pop
inc
and
lahf
and
and
cmp
test
xor
mov
mov
push
cld
push
psrld
or
pop
ss
daa
cmp
pop
popa
out
gs
push
sub
cmp
and
pop
and
adc
pop
mov
lock
and
push
sbb
shl
pusha
pushf
or
dec
inc
inc
pop
in
dec
xchg
and
pop
clc
loopne
and
push
mov
aas
inc
enter
(bad)
push
shl
lock
adc
add
lds
lods
dec
stc
cmp
push
aam
add
push
je
enter
pop
pusha
pop
pop
(bad)
in
mov
xchg
mov
es
and
jl
mov
adc
mov
ins
jmp
pusha
sbb
scas
mov
pop
jnp
loope
rcl
and
ret
add
movs
fwait
pop
xchg
mov
push
add
(bad)
pop
jmp
inc
pop
sbb
cld
arpl
imul
adc
js
push
icebp
shl
adc
je
and
int3
test
dec
mov
adc
or
cmp
or
or
dec
cmp
jge
inc
mov
mov
jmp
pop
or
pop
jbe
or
add
add
jg
push
int
movaps
mov
adc
or
scas
ds
imul
jns
js
jnp
mov
cmp
push
stos
addr16
and
cmp
xor
icebp
gs
or
rol
pop
cs
int3
or
mov
sbb
fiadd
mov
movs
add
sub
and
les
stc
test
loope
push
sbb
push
sub
cmp
mov
add
mov
xor
add
(bad)
sub
clc
test
add
mov
and
mov
and
imul
push
ins
in
frstor
fwait
push
dec
lock
ds
sub
mov
hlt
shl
or
fisttp
mov
xor
cmp
mov
xor
or
jle
xchg
stos
in
fsubrp
add
sti
loopne
cmp
shr
pop
sbb
cmc
fadd
shr
push
and
hlt
fcom
add
sub
cmp
add
fisttp
sub
lock
pop
test
xchg
int
ja
inc
adc
add
jge
nop
test
movs
xor
add
sub
sti
loope
dec
and
add
mov
mov
(bad)
(bad)
(bad)
jle
enter
or
test
enter
test
mov
mov
jmp
inc
ficomp
rol
(bad)
xchg
shl
nop
std
cld
jne
cs
mov
or
test
mov
adc
xchg
xchg
mov
adc
scas
xchg
sbb
dec
aaa
imul
inc
ret
lods
scas
cmp
and
cmc
xchg
inc
and
cdq
loopne
inc
movs
je
rcl
or
jl
fwait
test
inc
mov
jb
arpl
les
push
in
inc
inc
icebp
cmp
or
add
adc
dec
jo
push
pop
cmc
push
pop
ficom
ss
push
outs
or
aas
or
dec
jecxz
cld
inc
jo
jne
add
add
or
jo
mov
je
jno
mov
shr
jnp
add
add
xor
and
mov
cwde
add
push
or
or
ret
jnp
movzx
pop
or
rol
mov
add
test
lahf
call
inc
mov
mov
retf
rol
mov
sbb
push
adc
mov
mov
inc
mov
inc
ret
jo
loop
or
jne
sbb
jg
fwait
out
dec
xor
mov
jmp
cmp
push
sub
push
push
sbb
mov
sbb
cld
nop
pop
pop
mov
xor
outs
mov
jge
(bad)
sub
sub
inc
js
push
mov
scas
ret
mov
sub
inc
push
mov
adc
sahf
and
xor
push
and
dec
jne
call
ja
movs
rol
and
movs
and
cs
inc
sbb
mov
or
mov
and
xor
mov
fadd
movs
(bad)
movs
retf
loopne
add
jp
adc
mov
sahf
sahf
dec
mov
(bad)
or
test
ds
fwait
shl
mov
mov
lods
mov
in
add
pusha
mov
push
push
sbb
inc
jbe
test
sahf
mov
pop
inc
and
and
dec
in
dec
xchg
popa
std
loopne
sbb
adc
inc
inc
loope
mov
icebp
add
cmp
ss
dec
or
lods
xor
inc
or
add
in
ja
dec
jmp
xchg
data16
inc
push
je
pop
mov
mov
imul
mov
bound
ret
mov
ror
outs
adc
cmps
cmp
nop
rol
shl
xchg
shl
push
push
inc
aaa
add
(bad)
xor
je
or
add
adc
pop
and
jge
jbe
mov
pop
mov
or
fwait
(bad)
pop
dec
dec
stos
dec
cmp
jne
xchg
in
cmps
xchg
lahf
sahf
add
jmp
popa
ins
jle
int3
mov
push
xor
sbb
jne
and
push
jmp
cmp
push
push
jmp
mov
push
jns
iret
sti
or
dec
adc
je
stc
cs
jae
xlat
mov
jl
xor
mov
test
mov
push
mov
test
out
dec
cmps
ficomp
test
adc
iret
dec
sbb
jb
scas
fnclex
shl
inc
pop
and
(bad)
sub
and
aaa
adc
add
cmp
pop
inc
int
(bad)
(bad)
jg
clc
jg
rcr
lock
inc
cmp
fbld
dec
stos
add
enter
adc
mov
jns
fstp
icebp
cmp
in
dec
ins
jae
sub
shr
cmp
out
jbe
enter
adc
ret
mov
or
pop
icebp
aaa
loope
add
adc
mov
(bad)
pop
ret
imul
stc
xchg
ror
jne
movs
add
bound
pop
gs
fs
mov
rcr
iret
fisubr
sbb
stos
add
in
rol
loopne
cmp
dec
and
ret
inc
inc
xchg
jbe
pop
jne
mov
cmp
in
mov
(bad)
push
shr
adc
jecxz
fsubr
adc
test
stos
cli
add
imul
ins
stc
jmp
loop
outs
jo
(bad)
push
pop
dec
pop
dec
jae
mov
or
pop
cmp
add
push
push
mov
mov
test
in
add
pop
or
push
add
push
ins
inc
fs
fimul
mov
mov
rcl
stc
pop
or
sbb
int
or
data16
pop
pop
retw
test
call
scas
fmul
ror
mov
mov
in
sub
jmp
or
adc
loopne
xor
rol
or
cmp
clc
sbb
lea
push
adc
inc
mov
and
inc
add
leave
les
sub
fsubr
dec
or
adc
or
adc
sqrtps
fbld
push
(bad)
pop
cld
cmp
mov
pop
lock
mov
ins
add
sub
clc
je
inc
nop
stc
inc
hlt
sbb
or
lods
inc
add
mov
inc
mov
ds
rol
push
add
(bad)
jle
dec
jmp
or
or
mov
aas
push
int
pushf
clc
push
jmp
mov
adc
mov
mov
cmps
lds
pop
hlt
add
push
inc
mov
dec
(bad)
(bad)
push
arpl
int3
cmp
scas
adc
jl
xor
sub
push
nop
shl
(bad)
jbe
loop
sbb
jb
pop
mov
pop
xchg
mov
pop
and
cmovs
jne
call
pop
push
mov
test
sub
enter
rep
pop
or
or
adc
cmp
inc
enter
ins
out
test
lea
fistp
in
or
and
dec
mov
pusha
js
fnstenv
scas
adc
(bad)
mov
dec
add
mov
pushf
inc
add
add
mov
push
jo
push
out
push
dec
mov
mov
call
call
into
repz
hlt
hlt
clc
clc
cld
and
adc
xlat
loopne
nop
daa
(bad)
push
jno
sahf
mov
sbb
inc
pop
sti
and
and
lea
adc
cmp
or
sub
cld
out
xor
neg
fimul
pop
adc
stc
sub
fidivr
mov
nop
inc
push
push
push
jbe
sbb
out
add
and
xchg
sahf
inc
push
out
pop
mov
mov
mov
add
dec
in
fs
jmp
sbb
cld
add
or
repz
adc
shl
sbb
cmp
repz
adc
adc
repz
repz
or
add
dec
enter
or
cmps
and
aaa
push
add
pop
(bad)
pop
push
add
sar
sbb
imul
out
push
add
rol
add
inc
push
fcmovnb
jnp
addr16
adc
mov
dec
test
mov
mov
jb
pop
jge
shr
push
je
mov
mov
iret
sbb
jp
mov
ret
mov
int3
inc
int3
push
inc
sub
stc
jl
test
fsubrp
add
(bad)
out
cwde
les
cdq
fiadd
add
push
add
ror
xchg
cwde
jmp
add
cmps
mov
push
cmp
ficom
fs
inc
(bad)
cmp
(bad)
fisttp
or
pop
add
shr
sbb
push
pop
dec
xchg
mov
aaa
dec
cld
adc
pop
lods
nop
push
add
test
retf
jbe
push
(bad)
cmp
cmp
push
sbb
jb
mov
imul
fistp
push
imul
dec
mov
dec
movs
or
adc
(bad)
movs
and
nop
push
mov
mov
jmp
inc
and
push
push
xor
sbb
jle
clc
mov
mov
pusha
sub
cmp
pop
ss
daa
pmaxsw
jmp
jecxz
nop
out
pop
push
jno
or
mov
ror
or
xchg
ret
mov
cmp
je
xor
mov
mov
and
leave
rcr
add
add
push
imul
push
cld
not
mov
push
add
in
mov
sbb
mov
or
mov
xchg
push
jge
ja
jge
push
ja
pop
cmp
and
arpl
sbb
or
push
iret
inc
dec
xchg
push
nop
jp
daa
mov
jmp
je
popf
loope
xchg
std
pop
push
dec
sub
dec
std
cmp
mov
add
pop
sbb
shl
or
ret
cmp
jns
sbb
mov
push
mov
pop
sti
imul
mov
mov
jmp
jp
adc
cmp
push
sbb
mov
mov
cmp
mov
adc
loop
hlt
inc
mov
out
pop
fmul
sub
imul
adc
sub
and
movs
test
movs
adc
jmp
add
hlt
inc
ja
cli
add
xor
fld
xchg
sub
mov
xchg
jmp
rcl
fadd
ror
add
mov
rep
mov
dec
jmp
mov
jmp
push
mov
mov
sbb
adc
sub
push
shl
in
cmp
sbb
or
push
push
or
sbb
enter
sbb
pop
xlat
cld
pop
mov
pop
shl
fcomp
mov
cmp
jae
mov
push
mov
dec
mov
sahf
inc
sahf
add
and
das
sbb
je
push
std
dec
jmp
add
nop
clc
or
and
jle
xchg
mov
push
xchg
pop
or
cld
push
jo
dec
cli
fnstcw
lahf
inc
or
add
lods
add
jmp
rol
push
or
ins
fadd
mov
push
mov
cmp
or
iret
push
adc
dec
sub
outs
call
int
hlt
add
fsubr
repnz
inc
clc
mov
add
xor
pop
mov
xchg
mov
ret
mov
enter
pushf
or
xchg
xchg
add
loope
loopne
cmp
sub
cmp
mov
test
adc
push
fptan
xor
xchg
sbb
jb
pop
jb
inc
dec
loope
mov
pop
cmp
jno
or
push
fsubp
and
pop
push
or
imul
xor
add
fld
jbe
and
pop
pop
pop
cmp
std
jb
or
mov
sbb
add
pusha
clc
pop
pop
pop
or
popa
sbb
mov
jmp
mov
int
mov
jl
cwde
dec
sbb
jo
pushf
imul
jae
xor
std
outs
cmp
sub
or
cmps
aam
repz
jno
pop
bound
(bad)
fcom
ja
(bad)
push
adc
jmp
sbb
fiadd
pop
into
sub
inc
mov
dec
sub
lods
cmps
fnstenv
pop
mov
dec
and
add
xor
nop
inc
xchg
add
or
shl
sahf
mov
iret
xchg
jg
imul
xchg
movs
xchg
es
cld
call
sbb
push
mov
mov
push
cmp
adc
inc
dec
cwde
jo
add
cdq
dec
or
mov
mov
push
mov
dec
aam
ret
jo
int
cmp
xchg
add
pop
loop
test
fs
(bad)
iret
cmps
ins
in
or
ins
mov
add
sub
jo
mov
mov
mov
pop
fnstenv
dec
mov
and
stc
popa
add
mov
cli
add
add
mov
mov
or
lock
pusha
add
arpl
sub
data16
and
xchg
jmp
adc
xor
imul
pop
(bad)
pop
add
cmp
mov
loopne
(bad)
pop
lods
aas
mov
cmp
cmp
pusha
and
test
jne
inc
gs
fstp
sbb
out
cmp
je
inc
inc
cli
fwait
inc
mov
and
push
sbb
inc
push
adc
fidivr
inc
test
(bad)
jmp
mov
cdq
jo
and
(bad)
stc
dec
mov
sub
sub
xor
xchg
push
pop
xchg
dec
inc
cdq
mov
jg
or
or
hlt
or
mov
dec
int3
jb
pop
add
sbb
cmp
test
push
mov
inc
and
jmp
sbb
je
inc
inc
xor
adc
jnp
push
sbb
das
mov
cmp
xlat
sub
(bad)
in
pop
inc
mov
cmps
jmp
push
jmp
shr
inc
jecxz
mov
sub
pop
adc
xchg
loope
pop
push
add
or
shl
jae
mov
fld
jae
repnz
xor
mov
clc
jo
pop
pop
mov
shl
pop
ss
or
pop
sub
test
lods
push
leave
cmp
dec
inc
jo
xor
xchg
push
jnp
mov
mov
mov
add
fimul
ret
adc
sub
mov
jns
pop
mov
cld
clc
call
fs
leave
mov
jp
dec
adc
jae
push
sbb
adc
leave
xchg
dec
cdq
lock
sbb
mov
rol
jmp
jno
sub
and
sbb
add
mov
cmp
test
test
cmp
pop
cld
adc
xchg
dec
add
cmp
nop
mov
cmp
jne
adc
sub
push
mov
jo
mov
das
adc
ja
retfw
outs
loope
clc
and
fild
mov
mov
jb
push
jmp
pusha
push
clc
in
xchg
fadd
icebp
adc
into
test
clc
(bad)
jmp
loopne
repnz
add
mov
adc
inc
or
jb
adc
mov
push
sub
adc
into
jne
repz
push
test
lock
cmp
sbb
or
test
loopne
call
ror
jnp
lock
popf
inc
jb
mov
mov
inc
push
sbb
nop
inc
adc
les
mov
push
test
mov
push
pop
jo
test
neg
or
test
daa
mov
ins
loopne
jb
cmps
je
test
jne
outs
dec
push
dec
inc
mov
jecxz
dec
das
cdq
clc
dec
inc
aaa
sub
arpl
xlat
push
popa
adc
add
lea
mov
je
enter
jmp
pop
mov
mov
push
imul
push
sbb
and
jg
rcr
rcl
test
bound
popa
popa
adc
pushf
adc
ror
jbe
sub
adc
add
or
popa
jp
adc
dec
test
loopne
es
mov
add
sub
push
pop
jmp
(bad)
jae
sub
cmp
ds
in
xchg
sbb
jns
jmp
or
outs
push
int
jmp
std
jmp
cld
dec
(bad)
sbb
pushf
adc
data16
jmp
fwait
cmp
sahf
sbb
iret
data16
ffree
jo
adc
inc
add
popa
jmp
add
sub
mov
inc
push
pop
cmp
clc
mov
imul
data16
xchg
add
sbb
mov
xchg
ret
sahf
push
inc
jbe
xchg
les
push
mov
mov
popa
cmp
inc
js
cs
sub
and
sub
imul
inc
adc
or
mov
ret
adc
sub
jo
into
or
shl
inc
dec
stos
shl
mov
shl
dec
inc
imul
jbe
cmp
mov
arpl
ret
fadd
mov
sub
inc
push
and
sbb
xchg
ss
dec
or
or
pop
or
fnstsw
cmp
and
jnp
(bad)
cmc
xor
or
or
push
(bad)
ja
jl
or
push
mov
mov
imul
loopne
shl
xlat
jns
pop
loopne
push
cs
jecxz
aad
ficom
mov
enter
mov
inc
shl
sti
sub
mov
pop
add
sub
loopne
xor
ss
adc
xor
sub
mov
or
pop
cmp
je
cmp
shl
mov
adc
adc
sub
sti
pop
jne
dec
add
add
lds
pop
dec
mov
loopne
retf
movzx
xchg
mov
aad
pop
retf
cli
xor
popf
(bad)
movs
and
cmps
idiv
adc
popa
cmp
sub
add
and
leave
cmp
jae
bound
and
sahf
xor
sbb
mov
adc
mov
push
mov
repz
ret
and
pushf
scas
pop
push
jnp
outs
loopne
out
mov
test
nop
add
ds
mov
mov
pop
add
adc
mov
mul
mov
mov
mov
xchg
(bad)
and
pop
add
mov
push
mov
test
adc
mov
and
lea
lods
test
rol
xchg
pop
xor
xor
add
jecxz
mov
cmp
ficomp
pusha
push
sti
sbb
inc
push
cmp
push
aaa
push
dec
test
stos
jne
std
jne
inc
sbb
xchg
push
pop
push
adc
mov
loopne
cmps
les
xor
gs
into
jl
enter
push
and
push
push
push
ins
jo
aam
sbb
cmp
jg
jb
cmp
sbb
cdq
cmps
icebp
jg
adc
rcr
fidivr
rol
push
dec
push
bound
popf
fcomi
cmp
add
push
test
add
rcr
hlt
fimul
fiadd
out
jne
fisttp
push
push
mov
fidivr
jmp
fadd
sar
jns
sar
ror
repz
or
sbb
mov
nop
fadd
(bad)
sub
movs
push
enter
inc
dec
je
mov
and
nop
fdiv
out
or
push
push
pop
fs
je
loopne
ds
mov
inc
mov
int3
fmul
stos
outs
mov
xor
and
add
pusha
xchg
push
add
es
add
fwait
mov
retf
in
in
inc
ins
xchg
push
call
push
add
cmp
mov
jl
adc
add
xchg
xor
outs
je
lea
mov
cs
movs
loope
push
mov
dec
xor
pop
and
jno
mov
inc
dec
dec
repnz
push
add
inc
push
repz
mov
sub
add
nop
into
adc
sti
lods
rcl
sub
adc
push
pop
inc
pop
inc
clc
xor
xchg
ret
add
adc
test
aas
and
xchg
mov
clc
icebp
inc
and
push
adc
(bad)
loopne
sbb
test
sub
or
dec
bound
js
fcomp
ret
sub
inc
inc
and
xor
jae
mov
sub
push
add
repnz
loope
call
(bad)
mov
pusha
sbb
jecxz
push
dec
cmps
fld1
pop
mov
inc
add
nop
inc
inc
sbb
lds
ds
(bad)
retf
das
out
mov
sbb
push
lds
jo
rol
mov
xor
stos
add
sbb
and
xor
callw
adc
sub
push
add
and
fwait
mov
sub
aas
iret
add
adc
mov
add
pop
iret
sub
dec
test
mov
pushf
mov
nop
mov
jp
jge
sbb
stos
jp
outs
ja
mov
loopne
(bad)
loopne
jne
mov
jbe
retf
dec
and
cmp
or
mov
packssdw
add
inc
inc
loop
inc
xor
xchg
add
jb
cmp
movs
call
push
or
call
sub
and
or
add
add
imul
dec
cmps
out
cld
sbb
(bad)
sar
inc
mul
or
mov
or
cmp
push
adc
mov
inc
fs
mov
cmp
or
mov
pop
push
pop
mov
or
mov
mov
ud0
sub
sbb
arpl
xchg
in
shl
faddp
iret
and
or
dec
sbb
cmp
mov
lods
mov
test
sub
jo
loop
shl
jle
mov
cmp
mov
mov
fdivr
add
jge
sub
jb
cdq
(bad)
jmp
xchg
mov
mov
mov
push
jg
mov
int
imul
int
das
adc
push
(bad)
iret
hlt
popa
xor
cmp
dec
out
int3
sbb
(bad)
mov
sub
fisub
and
and
dec
sub
ffreep
mov
ficom
and
inc
push
pushf
pop
adc
test
prefetch
cmp
mov
jle
fadd
cmp
or
mov
ss
xor
mov
clc
sub
sub
inc
fcomp
mov
or
mov
or
hlt
sub
sub
fadd
xor
cdq
int
mov
fadd
in
lods
inc
dec
(bad)
lahf
retf
inc
cmps
fsubr
add
arpl
shr
(bad)
jge
sbb
daa
dec
mov
or
inc
mov
xchg
dec
inc
sahf
js
dec
ret
test
jo
cwde
xor
pusha
add
dec
and
or
and
out
push
mov
pop
pop
and
cmp
popa
fisttp
or
xor
push
mov
ret
out
fdiv
aad
inc
and
sub
mov
(bad)
jl
test
rcl
sbb
pop
aad
ss
jp
outs
mov
jbe
not
or
je
push
cwde
mov
sbb
sbb
shl
into
cmp
jo
sbb
push
retf
movs
add
mov
dec
(bad)
jb
inc
(bad)
add
out
push
sbb
test
pop
(bad)
pop
push
iret
fsub
mov
pop
int
dec
or
ret
int
xlat
aas
or
clc
jl
sub
ret
js
xchg
shr
inc
add
mov
arpl
sub
sbb
in
icebp
test
jle
fild
pop
imul
sar
and
cli
add
inc
sub
add
sub
test
adc
cmp
and
inc
cmp
jb
jp
fst
pop
test
js
adc
jmp
and
and
sti
xchg
mov
xor
pop
push
(bad)
inc
loope
pop
sub
sbb
sahf
jbe
shl
add
xor
add
xchg
push
fwait
inc
fmul
leave
add
fidiv
add
sahf
movs
jb
mov
add
popa
clc
addr16
mov
cmp
pop
ja
repnz
add
dec
add
retf
outs
ins
xchg
rol
out
mov
in
sub
mov
enter
push
rcr
xlat
or
inc
push
loope
test
leave
(bad)
(bad)
pop
mov
pop
mov
mov
sbb
ret
push
(bad)
out
test
cmp
retf
popa
call
scas
lock
popf
ins
jo
mov
inc
jmp
mov
jo
and
cli
add
adc
rcr
or
dec
or
pop
pop
jmp
and
sbb
add
ja
push
add
or
(bad)
iret
fcom
in
and
push
or
jl
pusha
and
test
gs
lock
add
jns
adc
je
sub
push
adc
call
sbb
mov
cmp
jns
(bad)
sahf
dec
lahf
jp
add
jbe
and
add
fsubr
aam
repz
add
fcom
xchg
in
fcmovnbe
lock
and
int3
pop
inc
sbb
or
and
fisub
pop
cmps
or
mov
or
inc
pop
inc
mov
je
sub
pop
xor
cmp
je
inc
xchg
dec
pop
xchg
or
in
js
jmp
call
and
into
pusha
inc
pop
out
xchg
cmp
leave
repz
sbb
add
sbb
cmp
push
sub
rcl
cmps
push
in
add
sbb
mov
cmp
add
jne
add
and
or
push
sbb
add
test
add
pop
mov
jmp
sbb
push
dec
or
jl
and
retf
int3
sub
xchg
adc
mov
adc
mov
push
jl
inc
sbb
dec
sbb
sub
add
and
and
test
mov
jecxz
sub
add
popa
xchg
cmp
sbb
jb
adc
mov
ret
ins
cli
ss
add
cmp
popf
(bad)
sbb
dec
leave
cmp
mov
ja
enter
test
cmp
mov
xor
je
push
dec
inc
jp
loopne
sub
popa
and
jg
scas
lock
jge
xor
cli
nop
jmp
inc
jo
enter
in
imul
mov
jmp
ficom
push
dec
daa
add
fisub
(bad)
adc
dec
adc
rcl
add
les
pop
mov
xchg
pusha
retf
adc
sub
ret
leave
inc
ret
jp
push
jmp
and
add
mov
jae
or
sub
lock
add
sbb
data16
sub
pop
or
jne
and
cmp
cmps
mov
in
cmp
lar
ins
push
add
aaa
xchg
mov
cmps
inc
mov
sub
jo
dec
inc
mov
fst
jne
in
sbb
out
add
shl
mov
jecxz
jmp
sbb
adc
cs
bound
(bad)
sbb
mov
call
dec
xor
inc
jmp
mov
mov
inc
das
sar
add
cs
or
shl
pop
add
jo
sbb
je
loope
cmp
jbe
push
out
jmp
fisttp
cmp
daa
aam
int3
cmps
mov
cmp
adc
jb
nop
xchg
mov
sbb
dec
sbb
and
sub
outs
add
or
or
inc
nop
and
dec
xchg
sub
dec
sbb
imul
outs
adc
pushf
mov
and
adc
fwait
aad
retf
push
mov
add
or
(bad)
shr
push
gs
or
dec
and
cmp
mov
mov
and
inc
jbe
adc
adc
sbb
lods
and
mov
cmp
cmp
mov
or
add
add
shl
test
sub
pop
and
push
in
ret
retf
mov
inc
or
leave
xchg
inc
loop
ret
test
mov
test
or
add
xchg
add
add
scas
loop
mov
mov
dec
loopne
bound
or
and
imul
cmp
frstor
add
or
nop
pushf
and
sub
mov
shr
xor
sbb
mov
loopne
es
dec
(bad)
cmp
xchg
fnsave
icebp
sub
jmp
test
pop
add
popa
cmp
mov
neg
jo
cmp
jae
stos
cs
and
ins
into
push
aad
jb
push
jmp
adc
fsubp
ins
aaa
fs
ja
pusha
loopne
pop
or
or
dec
ins
test
movs
cmovns
out
xchg
sub
stos
mov
ins
in
lock
jecxz
mov
lods
xor
push
adc
cmp
clc
mov
and
cmp
(bad)
cmp
xor
pop
mov
jne
inc
push
push
mov
aaa
mov
fnstcw
xor
hlt
jb
ja
test
adc
or
test
test
push
hlt
inc
xor
mov
push
xor
je
pop
shl
mov
adc
adc
(bad)
mov
or
sbb
aam
adc
pop
in
add
test
ficomp
test
arpl
cmp
and
aad
pushf
outs
cli
jl
sub
lea
and
sbb
std
add
jo
jnp
xor
push
jae
ror
push
lock
or
push
or
shl
cmp
cmp
sub
sti
(bad)
cmp
push
mov
aad
xor
pop
pop
or
jecxz
jecxz
push
adc
adc
and
inc
(bad)
aam
fisttp
jns
out
sbb
pop
sahf
mov
xor
nop
mov
nop
scas
jno
sub
loope
shr
cmp
push
sbb
pop
movs
pop
dec
loope
dec
inc
inc
lahf
adc
enter
daa
sub
(bad)
mul
pop
les
call
mov
sub
add
pop
xchg
test
fimul
xchg
or
inc
push
neg
cmp
or
ss
sahf
dec
push
sbb
cs
mov
sbb
loope
cmps
mov
jmp
push
xor
jmp
stc
loopne
(bad)
(bad)
jmp
lock
enter
(bad)
cmp
jb
clc
xor
dec
mov
out
fadd
fiadd
out
fwait
dec
ins
not
call
icebp
cmp
adc
rol
outs
repnz
mov
scas
rcr
xchg
jle
pop
inc
inc
(bad)
aas
in
pop
or
fisub
inc
jno
jg
sub
xor
aaa
jbe
pusha
dec
xor
js
fimul
out
inc
mov
(bad)
rcl
push
xor
es
bnd
cmp
ja
fs
jae
dec
lea
inc
pop
jae
pop
jbe
cmc
push
adc
adc
dec
xchg
lods
add
sub
adc
rol
clc
ret
jg
ss
test
inc
gs
add
neg
sbb
sbb
mov
push
pop
mov
and
inc
push
rcr
pop
xlat
je
jl
pop
popa
adc
cmp
mov
dec
jbe
pop
mov
or
push
push
mov
int
movs
stc
inc
call
and
test
and
and
cmp
jle
sbb
mov
cdq
nop
jo
stc
push
dec
mov
xor
push
aam
push
dec
dec
shl
or
inc
imul
push
iret
xchg
(bad)
movs
cmp
pop
shl
lahf
add
push
push
sbb
jmp
cmp
jns
aaa
mov
ins
cmp
imul
cmp
jge
push
push
cdq
pop
idiv
cmp
inc
es
loope
inc
inc
xor
xchg
pop
add
pop
cmp
in
cli
jmp
int
push
shr
clc
mov
jl
mov
shl
mov
jp
ins
ins
cmp
ins
call
xlat
mov
mov
pusha
dec
sub
sbb
add
cmp
push
dec
mov
add
dec
pop
cmps
xor
inc
dec
mov
sub
pop
jle
fadd
shl
sbb
pop
add
mov
xor
rcr
je
or
xor
inc
pop
sahf
je
jge
gs
mov
jno
pop
push
cmp
push
mov
dec
or
jbe
push
xchg
push
sub
jae
js
jmp
addr16
pop
jg
push
cmp
push
jle
mov
popa
inc
(bad)
jmp
mov
cmp
xchg
fldenv
inc
ret
xchg
mov
je
push
inc
scas
and
push
fidiv
in
push
fstp
inc
nop
retf
sahf
sbb
call
cs
inc
out
popa
mov
lods
xchg
jecxz
mov
aad
or
inc
outs
mov
aaa
and
popf
xchg
ss
mov
std
loopne
jbe
(bad)
pop
push
adc
call
jmp
aad
push
pushf
xchg
push
fsub
adc
xchg
(bad)
inc
fdivr
nop
clc
gs
adc
jl
pop
sbb
mov
xchg
pop
and
sub
test
push
and
sbb
cmp
jge
sub
mov
mov
adc
mov
jl
stos
(bad)
aad
hlt
xor
dec
or
pop
jg
add
dec
mov
mov
mov
popa
test
loop
mov
sub
or
imul
push
adc
xor
nop
test
retf
mov
fs
outs
or
cdq
jecxz
ins
jnp
inc
rcr
cmp
push
mul
fimul
cld
add
data16
adc
adc
sti
cmp
jnp
push
loop
in
push
adc
adc
int
add
call
hlt
push
push
call
rep
cmp
cwde
in
jg
lods
rol
add
mov
mov
(bad)
or
and
dec
frstor
or
fnstsw
ja
je
pop
xchg
pop
inc
mov
mov
mov
xchg
mov
sar
xor
cmp
jbe
mov
mov
mov
jmp
pushf
cmps
cmp
(bad)
jg
ins
lods
je
in
xchg
jmp
shl
fstp
outs
cmp
jo
cmc
mov
es
cld
iret
inc
inc
cmp
je
mov
jmp
ins
in
sbb
adc
add
nop
mov
int
mov
pop
or
push
test
xor
ins
xchg
repnz
or
adc
ja
mov
mov
mov
inc
push
clc
lods
shrd
push
mov
push
inc
sbb
cli
mov
cmp
(bad)
rcr
jp
mov
or
bound
icebp
mov
sbb
or
sar
xor
jmp
push
sbb
ret
mov
clc
sub
addr16
out
shr
jb
inc
or
adc
je
loopne
jb
mov
std
mov
mov
jne
push
test
or
and
in
es
pop
mov
shl
inc
stos
fcom
push
lods
adc
jbe
pop
repz
jnp
shr
xchg
pop
jns
jns
sbb
mov
inc
jbe
dec
xor
fild
pusha
ins
sahf
shr
cld
pushf
scas
mov
push
sar
lea
popa
out
dec
jne
add
add
jmp
(bad)
push
jmp
das
add
push
dec
ss
rcr
xchg
rcl
in
or
dec
mov
or
xor
test
lea
dec
pop
sbb
inc
or
fadd
out
repz
sub
les
aam
jo
sbb
in
xchg
loopne
adc
adc
aas
hlt
dec
add
js
je
sbb
inc
push
int3
imul
sub
dec
test
push
mov
sbb
push
add
or
mov
imul
dec
cld
add
imul
add
cwde
lods
test
hlt
ss
mov
gs
(bad)
cld
ja
or
add
mov
xchg
mov
sbb
test
(bad)
jmp
jo
fwait
data16
cmp
jne
pop
sub
jmp
jnp
lock
es
rcl
leave
pop
imul
dec
pop
adc
mov
pop
in
inc
sbb
mov
jg
and
jne
lods
inc
mov
icebp
mov
pop
adc
shr
push
dec
shl
mov
or
jl
iret
jae
or
(bad)
pusha
outs
sbb
mov
jg
outs
inc
xchg
jbe
(bad)
xchg
pop
es
nop
mov
mov
retf
imul
dec
leave
fstp
mov
jmp
sbb
sti
xor
add
or
imul
and
xlat
nop
adc
mov
jmp
mov
mov
fdiv
push
xor
cmps
and
pushf
arpl
in
jne
push
inc
imul
mov
lock
scas
push
hlt
fcomp
sar
movs
je
popf
je
inc
pop
sbb
push
sbb
ret
adc
sub
jmp
fld
sbb
mov
add
cmp
pop
(bad)
out
push
jmp
mov
cmp
sti
xchg
sbb
cmp
ret
les
sub
ss
push
mov
jo
add
fsubr
push
add
adc
cs
push
jp
xor
inc
xchg
outs
sbb
or
cdq
nop
sbb
sbb
mov
and
or
cmp
pushf
jg
and
xor
pop
mov
push
pop
cdq
push
test
outs
(bad)
sahf
je
jl
sbb
pop
dec
mov
inc
addr16
sbb
push
adc
imul
or
mov
dec
std
add
sbb
fldz
jmp
xchg
mov
adc
adc
mov
dec
dec
adc
pushf
test
push
mov
or
ins
mov
jmp
enter
jp
mov
loopne
in
xchg
rol
xchg
sub
adc
fadd
daa
push
lock
and
pop
mov
rcl
js
loopne
lock
pop
je
div
jo
mov
add
rol
jecxz
add
add
(bad)
(bad)
sbb
mov
pop
aam
and
sub
dec
and
dec
int3
add
out
xor
or
add
mov
cmp
ds
fnstsw
add
idiv
pop
add
loopne
add
cmp
add
test
push
and
popa
push
sub
in
mov
rol
iret
jg
mov
mov
add
ror
add
hlt
je
xchg
data16
stos
call
or
mov
mov
lds
rcr
sbb
stos
push
daa
cmc
adc
ret
jmp
adc
shl
clc
inc
cmp
xor
and
and
ins
test
loope
pop
stos
add
sbb
or
jecxz
inc
sbb
push
add
cmc
aaa
arpl
jb
xor
adc
add
inc
or
xchg
push
rcl
loope
test
and
jmp
dec
dec
jl
inc
add
adc
adc
xchg
mov
xchg
sar
push
dec
int3
or
cmp
or
loop
loopne
push
(bad)
mov
inc
retf
retf
test
add
adc
xor
jge
xor
loopne
or
push
jmp
sahf
inc
sahf
cmp
(bad)
add
add
add
fmul
mov
ss
push
and
iret
inc
scas
adc
or
mov
cmp
ds
cmp
sbb
adc
xchg
loopne
xor
mov
aaa
aaa
or
pusha
jle
adc
cwde
push
iret
add
push
add
movs
cmc
push
adc
push
int3
fcom
xor
adc
mov
push
adc
push
sub
add
push
movs
repnz
push
mov
lock
data16
lods
icebp
add
lods
adc
sbb
fbld
sbb
inc
cli
dec
lock
(bad)
ficomp
adc
push
sub
sub
sub
pusha
xchg
inc
fsubr
pushf
adc
adc
movs
out
jg
sub
and
mov
xor
dec
mov
xchg
mov
ss
pop
jge
nop
test
and
clc
aaa
les
jmp
and
cwde
lds
cmp
mov
push
sbb
cmp
int3
sti
mov
dec
mov
and
neg
(bad)
and
push
repnz
outs
call
pop
repz
jne
cwde
pop
retf
bound
dec
test
ins
add
pop
and
dec
lods
cs
or
push
ins
nop
enter
sub
sar
ret
pop
cmp
or
cmp
sbb
cmp
mov
jmp
jne
inc
ret
inc
aam
lahf
cmps
cdq
push
cs
add
add
fiadd
mov
mov
fmul
ror
loop
cmp
call
repz
inc
jae
and
jg
adc
ret
dec
and
sar
add
shl
xchg
js
xor
mov
rol
or
jne
mov
test
jb
adc
and
jne
xor
inc
mov
push
or
mov
xor
cmp
test
sar
push
(bad)
and
jne
mov
xchg
retf
or
dec
add
adc
je
sbb
xor
jp
push
scas
cmc
imul
or
fnsave
pop
jae
jbe
imul
cmp
inc
pop
add
sub
ret
pusha
cwde
sub
xchg
xchg
mov
sub
xchg
retf
and
adc
mov
and
add
cld
sbb
imul
stc
out
loopne
jb
push
adc
pusha
fs
adc
lock
mov
sub
repz
xchg
xchg
inc
adc
out
ins
out
cmp
fnstsw
jnp
clc
or
push
jmp
fst
pop
ins
add
loope
enter
or
xchg
or
xlat
or
out
push
dec
jbe
sub
dec
push
lods
in
add
or
stc
xor
jns
aas
add
ret
or
idiv
or
jb
outs
es
and
push
repz
jne
sub
add
mov
add
jne
enter
xchg
ret
nop
push
cmp
jp
fidiv
scas
cmp
mov
shr
add
dec
ja
movs
mov
mov
and
mov
jg
je
icebp
cmp
stc
in
or
scas
add
add
pop
or
es
or
fadd
add
fisttp
stos
or
clc
add
movd
movaps
test
clc
jae
xor
jle
xor
cmp
ror
lock
out
mov
jl
and
retf
sub
fiadd
js
adc
nop
fld
neg
xchg
nop
adc
(bad)
jnp
mov
shl
mov
into
inc
pop
dec
mov
hlt
mov
mov
xchg
repnz
and
and
in
dec
inc
subsd
int
out
rol
sbb
mov
add
push
push
sbb
dec
push
bound
test
sub
test
or
pop
sbb
lea
pop
xchg
xor
inc
sbb
mov
sbb
jmp
push
push
cmp
jecxz
mov
shl
movs
xchg
cwde
nop
shl
int3
dec
adc
sbb
inc
inc
pop
jmp
sbb
dec
fmul
std
add
pop
push
mov
imul
or
or
stc
clc
or
out
ficomp
dec
lahf
xchg
adc
loopne
adc
jno
jmp
xchg
add
xor
adc
rcl
jns
or
add
xor
fwait
adc
in
xor
xor
xchg
dec
scas
mov
or
(bad)
push
add
(bad)
xor
xchg
cmps
stc
fstp
retf
push
push
jl
and
xchg
xor
cmp
sbb
sub
sbb
inc
inc
adc
dec
jne
add
lods
repz
sub
or
mov
and
pop
shl
add
dec
leave
dec
inc
int3
add
add
scas
mov
outs
cdq
mov
inc
pop
pop
mov
and
add
loop
mov
inc
loope
jbe
push
addr16
xor
push
jae
jp
and
inc
xchg
ins
cmc
adc
sahf
push
jo
pushf
push
inc
std
inc
mov
adc
not
add
repz
cmp
loopne
out
fldln2
add
in
test
enter
add
add
dec
push
or
mov
pop
sbb
out
shl
sti
sub
(bad)
jno
push
add
inc
xor
push
je
aam
cmp
(bad)
pop
ja
mov
sub
push
lods
adc
inc
sbb
mov
mov
fstp
dec
retf
mov
jmp
pop
sub
mov
dec
inc
cli
or
fild
enter
xchg
pusha
sbb
enter
daa
push
out
jp
ja
mov
jb
inc
dec
mov
and
push
adc
push
add
pop
movs
(bad)
mov
retf
sub
xor
mov
shl
es
pop
mov
(bad)
inc
cmp
xchg
jae
mov
ds
jne
sub
sub
pop
mov
or
adc
ins
sbb
jae
xchg
(bad)
mov
das
mov
mov
jne
scas
mov
daa
and
cmp
xchg
fdiv
fbstp
sbb
inc
pop
adc
fsubr
pop
jbe
aaa
sti
jp
test
nop
push
xor
popa
loopne
iret
mov
add
and
pop
ret
cmp
ds
mov
sbb
ss
in
or
jbe
or
call
sbb
cmp
mov
adc
push
jo
cwde
inc
inc
cdq
mov
and
gs
fmul
ror
fbld
inc
mov
jo
sbb
cwde
cli
or
mov
fcomp
dec
add
fnstcw
loopne
adc
cmp
xlat
loopne
mov
add
inc
inc
inc
shl
push
adc
cwde
or
mov
jns
(bad)
and
inc
dec
jle
xor
(bad)
push
xor
mov
shl
fs
or
mov
ret
int
outs
sbb
mul
xchg
inc
and
dec
sti
xchg
cmp
mov
push
into
sbb
jge
std
adc
pop
f2xm1
movs
mov
into
(bad)
movs
sti
cli
mov
dec
or
cli
dec
xchg
retf
clc
into
or
mov
pop
dec
std
mov
lea
test
scas
sub
cmps
inc
push
mov
cmp
(bad)
nop
push
and
push
or
mov
inc
add
or
xor
test
in
add
inc
aam
jns
cmp
inc
inc
adc
and
int
and
xor
hlt
push
std
das
inc
or
retf
out
and
fs
xchg
leave
push
mov
aad
pop
adc
cli
aam
mov
push
mov
sub
fcmovnbe
dec
jecxz
push
adc
sbb
cmp
icebp
inc
(bad)
pop
call
and
jmp
jl
test
les
(bad)
mov
cld
dec
ss
cmp
mov
adc
push
sar
and
fadd
aam
xchg
pop
push
inc
ficomp
or
cld
popa
jno
inc
jno
mov
imul
(bad)
adc
sub
jne
fcmovb
mov
fimul
inc
cmp
jmp
xor
fld
sar
sub
xchg
xchg
test
jl
push
cmp
sub
mov
and
data16
pop
sbb
add
pop
jb
ins
inc
inc
cli
add
cmp
repz
or
inc
jmp
jmp
mov
loope
inc
std
sub
mov
rol
ss
cmp
sub
les
add
mov
popa
pop
in
jge
cmp
fadd
fimul
cmp
les
mov
ins
loopne
xor
pop
mov
sbb
fnstsw
jb
jb
enter
add
or
mov
hlt
xchg
ret
and
mov
or
or
and
rcr
test
stc
clc
or
adc
pop
sbb
dec
ins
cld
adc
jae
popa
cli
(bad)
enter
iret
xchg
fs
aam
stc
push
adc
hlt
add
mov
push
sar
lea
or
scas
sub
add
mul
es
adc
(bad)
or
and
jb
dec
xor
lds
mov
inc
js
fild
pop
ret
sbb
or
pop
mov
or
addr16
mov
xor
cmp
push
pop
in
mov
call
mov
dec
mov
mov
adc
stc
sahf
adc
mov
sbb
not
in
push
jecxz
jbe
xchg
dec
pop
adc
in
iret
push
dec
js
adc
mov
inc
cdq
push
xor
cs
mov
in
ret
xor
push
aaa
popa
or
cmp
and
arpl
mov
cmp
loopne
sbb
push
xor
lock
ror
mov
ret
outs
sahf
mov
cdq
call
imul
mov
aad
and
mov
(bad)
and
ja
sbb
xor
xchg
dec
sbb
inc
add
adc
pop
test
adc
adc
loope
mov
or
or
jmp
sar
ficom
loopne
out
push
push
mov
cmps
je
les
cmp
ficomp
or
mov
or
ret
icebp
jecxz
sbb
shl
jmp
push
loop
sbb
adc
xchg
es
inc
add
rcl
inc
xchg
xchg
pop
aaa
rcl
pusha
inc
add
push
push
ins
sub
add
(bad)
aam
into
push
adc
fisubr
or
sbb
cwde
rol
sar
out
inc
xchg
jne
scas
je
fimul
or
mov
pop
sbb
or
(bad)
adc
cmps
arpl
pop
mov
jns
xchg
push
push
je
jo
repnz
and
xor
cmp
dec
and
pop
push
push
je
outs
popf
cmps
jno
cmp
clc
inc
sbb
(bad)
hlt
fstcw
fwait
mov
mov
cld
fldcw
fistp
or
or
std
in
push
clc
leave
out
sbb
sub
mov
popf
int3
jp
adc
mov
icebp
add
aam
test
push
inc
ss
(bad)
lock
cs
dec
test
je
push
lea
mov
loopne
add
sti
outs
push
cs
and
jne
mov
rcl
sahf
dec
mov
mov
or
loop
or
adc
or
add
inc
and
aaa
push
dec
adc
scas
adc
int
add
inc
pop
mov
add
pop
call
pop
push
lea
pop
cdq
ds
and
sbb
(bad)
mov
xchg
fwait
movs
imul
mov
ja
fnsave
and
mov
cmps
push
ins
loop
adc
cmp
push
pop
or
enter
mov
sub
pop
and
mov
gs
mov
add
enter
popf
leave
ret
xor
add
sub
or
jne
mov
sub
mov
inc
xchg
dec
or
pop
mov
and
adc
dec
push
cdq
mov
jb
in
push
push
cmp
push
ins
and
pop
mov
std
stos
mov
add
or
inc
mov
dec
push
inc
das
sbb
adc
nop
pop
push
push
jmp
js
inc
aaa
inc
outs
bound
and
pop
xor
imul
or
popf
aad
(bad)
adc
jnp
fs
fdiv
xor
and
fcmovb
pusha
mov
push
shr
and
inc
push
sbb
jb
js
ss
inc
dec
xchg
clc
dec
(bad)
shld
cld
jne
pop
and
mov
dec
neg
in
in
or
xor
dec
jae
aad
jae
fcom
and
mov
dec
or
cdq
scas
mov
call
outs
and
jle
clc
setnp
lahf
movs
pop
mov
push
imul
jbe
push
cmp
sbb
sub
pop
aad
aas
push
add
pusha
lahf
sub
jle
xchg
cwde
test
xlat
add
ins
and
sahf
lock
das
cwde
sbb
mov
jo
out
or
in
mov
ret
or
inc
or
add
ror
enter
and
pop
inc
test
arpl
mov
in
or
add
(bad)
cmp
jge
je
lea
xchg
cmp
xchg
rol
xchg
fs
mov
xor
repz
cmc
cld
inc
mov
bound
cmp
ficom
push
mov
sbb
cmps
sbb
inc
sbb
jg
jle
sysexit
jne
or
jmp
mov
test
lahf
add
leave
xchg
(bad)
jmp
xchg
repnz
jge
movs
xor
sub
xor
dec
xchg
adc
dec
sbb
pop
mov
cmpxchg
icebp
dec
in
push
mov
ror
sbb
xor
jne
inc
mov
adc
xor
dec
iret
mov
outs
xlat
add
sbb
pop
inc
pop
xor
ds
mov
add
je
sub
(bad)
pop
push
cmp
test
and
test
inc
add
outs
lahf
xchg
adc
daa
icebp
dec
test
iret
mov
push
add
pop
adc
iret
and
cmp
sbb
mov
aam
cmp
sub
cmp
dec
inc
scas
jle
out
push
or
sbb
xor
dec
fidiv
mov
cmp
push
je
leave
ss
lea
mov
adc
jp
add
cmp
mov
and
aad
mov
push
mov
add
hlt
cmps
add
mov
mov
jl
push
mov
cdq
lock
int3
push
push
pusha
movs
jo
lea
fnstsw
push
sbb
pop
add
add
iret
cld
push
mov
or
ficomp
out
pop
sar
mov
add
inc
cmp
test
sub
rcr
adc
push
pop
shl
outs
sub
out
or
mov
or
ja
xchg
sbb
sub
inc
xor
xchg
out
mov
retf
sbb
or
adc
stos
aad
jno
std
test
lods
sub
sbb
push
out
dec
add
push
adc
sti
retf
leave
test
add
js
dec
(bad)
mov
mov
pop
sbb
adc
xor
or
(bad)
out
push
je
cmp
es
pushf
xchg
test
cmp
jne
sbb
ins
daa
inc
call
int3
inc
mov
out
pushf
xor
sbb
inc
mov
sbb
sub
fiadd
ins
fmul
pop
sub
and
sbb
aam
adc
jno
add
ins
outs
and
sub
fnsave
out
aaa
out
std
or
jle
push
pop
cmp
pop
loopne
mov
cmp
mov
adc
fisubr
inc
dec
jne
push
sbb
jg
das
nop
les
je
inc
push
ss
mov
mov
nop
rcr
push
pop
cmp
mov
das
cmp
test
or
ret
adc
fdiv
inc
sbb
out
es
mov
sbb
push
nop
adc
add
jp
adc
push
pop
cli
adc
adc
inc
lods
or
mov
adc
aaa
inc
xor
sub
mov
dec
inc
xor
pop
and
or
mov
popa
outs
inc
(bad)
jo
cmp
repnz
push
pop
inc
cmp
in
mov
fs
je
jae
rcl
mov
jo
pop
and
or
lods
jg
pushf
or
mov
jmp
jmp
in
push
inc
mov
mov
ss
or
or
mov
aam
out
repnz
add
loopne
lock
cmc
sub
pushf
inc
loope
pop
add
push
xchg
dec
jne
mov
jns
inc
adc
jg
jge
or
push
ins
test
mov
and
cmp
fldcw
sub
xchg
jbe
jl
jg
shl
(bad)
and
mov
adc
pop
or
cmp
jle
dec
call
xor
jle
and
adc
sti
fild
inc
cli
and
mov
jne
inc
jae
cmp
je
dec
add
push
sub
int
bound
jae
pop
add
ds
push
adc
mov
pop
sbb
xor
push
push
sbb
aam
push
sbb
push
dec
and
adc
rcpps
push
cmp
xchg
sub
pop
(bad)
or
imul
xchg
or
fisub
mov
movs
inc
add
add
sub
add
ficom
das
dec
sbb
shl
jmp
xor
cwde
add
pusha
add
loop
cs
pop
dec
call
pop
clc
xchg
pop
push
jnp
push
push
jp
test
ret
test
xor
xchg
adc
xchg
mov
scas
dec
mov
je
fstp
xchg
call
repz
xor
cmp
dec
push
add
sbb
mov
mov
sbb
shl
scas
cdq
xchg
xor
push
sub
inc
mov
stos
dec
bound
adc
cdq
xchg
cmp
(bad)
sub
jo
push
add
adc
dec
pop
mov
push
jecxz
mov
repz
push
je
pushf
js
jle
jle
adc
sub
retf
xor
sub
pop
and
inc
neg
mov
mov
jle
sar
inc
jne
push
add
adc
cwde
jo
neg
inc
imul
popa
(bad)
popa
add
add
add
add
(bad)
fdivr
aam
add
les
mov
div
sub
push
sub
push
add
add
bound
dec
cmps
ds
imul
add
jp
and
sbb
lock
lods
cmp
push
adc
rcr
stc
ins
cmp
(bad)
and
adc
loope
mov
cmp
adc
mov
shl
aas
movs
jle
push
enter
adc
xchg
fcomp
add
ret
mov
movs
jl
push
fidiv
mov
add
add
add
sbb
jp
sub
test
outs
add
jno
jns
stos
arpl
dec
leave
jne
call
in
mov
inc
mov
sbb
cs
inc
fadd
push
mov
add
int3
add
ss
push
xchg
cmp
and
leave
lea
shr
(bad)
push
mov
movs
push
adc
out
je
push
mov
jnp
sub
out
lods
(bad)
add
mov
inc
sub
xor
jl
jle
and
test
dec
cmp
adc
cwde
inc
shl
ja
or
sbb
cmp
push
inc
in
mov
inc
jge
ss
jl
out
test
test
nop
ss
jge
(bad)
js
mov
sub
add
jbe
jne
sub
cmp
enter
jg
cmp
inc
leave
ss
clc
jge
loop
inc
dec
add
sub
mov
(bad)
aad
ins
popa
jbe
jnp
pop
lods
mov
adc
es
lock
call
cli
add
bound
pop
xchg
sbb
jo
xchg
xor
cmp
mov
ret
pop
retf
mov
rol
jo
js
and
pushf
mov
cmp
ss
adc
adc
and
adc
add
or
adc
fs
hlt
xchg
adc
inc
xchg
jo
add
je
add
scas
and
mov
or
icebp
inc
fdiv
mov
push
aad
xchg
nop
inc
fdivr
mov
pop
mov
inc
and
xchg
not
add
hlt
add
lds
stc
push
daa
sbb
pushf
sbb
sbb
mov
mov
push
jo
cmovns
mov
lods
in
int
mov
ins
cmp
xor
push
call
mov
push
cmp
daa
sbb
inc
jne
dec
fsubr
dec
mov
mov
sub
jg
push
push
imul
dec
mov
mov
cmp
sub
sti
cmp
inc
or
xchg
aam
(bad)
cmp
shl
adc
jmp
and
jmp
push
ret
cmp
movs
pop
data16
push
daa
or
or
adc
fsubr
lds
aam
mov
in
ds
je
lods
fdivr
mov
mov
nop
cdq
pop
fwait
lea
sbb
cvtpi2ps
mov
pop
dec
or
add
dec
jo
comiss
push
xchg
fsub
cmps
jae
shr
pop
cmps
add
ins
stos
inc
jno
je
xchg
aas
xchg
rol
and
inc
rcr
daa
sub
jg
movs
and
cmps
xchg
add
mov
add
xor
dec
or
pop
push
cmp
inc
cmp
test
loopne
mov
mov
sar
pop
add
push
push
jno
push
data16
les
or
adc
(bad)
pop
jmp
shl
pop
and
popa
ret
pop
fs
ret
xchg
and
push
mul
div
cmovo
add
pushf
adc
push
cmovs
mov
sub
add
out
pop
jle
xchg
push
fwait
jo
ins
mov
or
pusha
es
cmp
inc
jae
fld1
fadd
push
loop
push
push
pop
xchg
cli
fpatan
or
adc
jl
or
lea
xchg
pop
loop
ja
fs
lods
jle
cmps
str
inc
hlt
sub
fld
scas
pusha
rcr
jmp
mov
dec
jne
sbb
inc
nop
or
retf
stos
sbb
mov
fdiv
pop
test
push
dec
hlt
dec
fadd
mov
sub
leave
mov
jg
and
cmp
je
fldpi
jmp
push
xor
mov
or
and
add
inc
pop
mov
xor
daa
nop
mov
mov
leave
add
or
lea
and
jne
shl
fld
mov
xchg
icebp
cmp
mov
mov
mov
in
dec
mov
adc
js
add
dec
pop
and
jmp
ud0
fnstsw
fwait
sahf
jp
fstp
mov
stc
pop
test
pusha
xor
pusha
sbb
(bad)
mov
jo
sub
out
push
arpl
sbb
push
ins
imul
lock
stc
adc
movs
fldcw
pop
imul
aaa
mov
xchg
jo
out
or
fstp
icebp
dec
dec
cmp
es
(bad)
pop
fst
add
fmul
xchg
xor
or
pop
aas
or
or
inc
jmp
faddp
lods
jmp
sbb
lock
pop
mov
push
xchg
jne
push
push
pop
adc
mov
shl
cmp
lea
mov
ret
ret
jecxz
and
pop
or
(bad)
out
fsave
ins
out
pop
fnsave
sub
fisub
je
adc
dec
call
xor
mov
and
(bad)
neg
push
push
or
or
jg
cmp
inc
jnp
mov
in
pop
mul
pop
jge
pop
aad
push
inc
xor
int
inc
mov
test
push
sub
out
pop
pop
jmp
mov
movs
ins
sub
leave
into
pushf
retf
jge
jnp
shl
pusha
mov
jge
ud0
sahf
jne
fmul
sub
fldenv
add
mov
ins
pop
inc
add
push
pushf
(bad)
mov
push
jb
icebp
dec
adc
aas
adc
js
ffree
xor
stc
push
and
inc
and
push
pop
arpl
jl
jae
test
inc
outs
dec
jno
dec
pop
retf
clc
sbb
xor
pop
add
out
out
push
jbe
jmp
lock
jmp
fild
or
and
push
pop
adc
push
ror
fstp
pop
sbb
in
inc
imul
jo
pop
mov
push
jp
sub
sar
cs
add
xchg
mov
sbb
jnp
sbb
adc
push
ja
in
adc
jno
jne
ret
sar
jg
xchg
js
stos
fcomp
mov
mov
or
dec
rcr
cld
cmp
rcl
mov
jl
jmp
mov
lahf
sbb
add
jp
xor
xor
fldcw
mov
fist
fmul
adc
xor
push
call
add
cwde
jmp
jle
js
push
ja
(bad)
cmp
and
inc
test
test
cmp
imul
cld
adc
dec
enter
pop
pusha
pop
mov
push
test
pusha
ror
inc
(bad)
in
mov
mov
or
pusha
add
test
icebp
cmps
stc
std
and
dec
(bad)
mov
jae
pop
inc
call
mov
cmp
into
add
mov
sbb
mov
cld
pop
clc
mov
mov
out
xchg
push
stc
clc
mov
sub
sbb
add
sub
ins
mov
and
pop
cmps
jno
cmp
out
sbb
sbb
call
gs
push
popa
add
enter
sbb
add
pop
sbb
push
int3
xchg
icebp
sub
retf
je
sub
in
mov
xor
jmp
push
jmp
sbb
pop
data16
arpl
sub
std
jne
pop
ret
push
in
call
ret
pop
pop
xor
std
mov
dec
cld
pop
and
jmp
sahf
or
je
dec
adc
add
enter
xor
repz
push
cwde
adc
outs
or
adc
xchg
add
cmp
or
or
mov
add
aad
test
xor
mov
out
adc
push
inc
mov
cmps
pop
pop
or
cmp
data16
jmp
lods
xchg
icebp
call
push
pop
neg
pop
in
mov
cmp
and
in
lods
add
mov
pop
mov
fs
push
pop
ret
test
lahf
push
push
test
push
(bad)
sub
or
and
jp
or
sbb
call
das
mov
push
sbb
leave
pushf
dec
imul
ds
pop
add
inc
(bad)
movs
adc
cld
gs
inc
push
or
dec
and
bound
jae
cmps
mov
mov
or
mov
mov
inc
and
or
dec
adc
addr16
sbb
or
sbb
jmp
and
mov
clc
or
sbb
pop
bound
clc
inc
adc
adc
hlt
mov
push
fstp
inc
adc
jbe
mov
sbb
sub
aad
ret
imul
stos
and
or
xchg
retf
cmp
cmps
add
or
xor
pop
cdq
jae
or
pop
xchg
xor
push
cmp
sahf
test
jno
jmp
div
xchg
xchg
cmp
xor
loopne
mov
jnp
add
push
imul
jne
scas
sbb
fldz
repnz
call
inc
mov
push
sub
aam
sbb
xor
push
push
into
loopne
stos
and
add
inc
push
ror
cwde
sub
cs
jmp
test
jo
rol
clc
adc
mov
add
adc
mov
adc
or
inc
sub
seto
mov
scas
sbb
or
fbstp
das
add
xchg
fimul
or
pop
ja
je
sahf
inc
inc
and
or
add
adc
add
or
jmp
add
adc
xchg
push
inc
or
mov
jle
jmp
mov
ret
cmp
xchg
jno
inc
(bad)
cmp
je
push
dec
pop
pop
push
jne
mov
ins
and
cdq
dec
or
xchg
data16
sub
mov
data16
rcr
mov
pop
push
sub
movs
xor
xchg
nop
cs
lock
sub
or
adc
fisub
pop
jne
test
je
(bad)
cli
xor
cld
xor
aas
or
ins
mov
push
push
and
in
pop
and
xchg
(bad)
inc
and
lahf
add
push
aad
scas
inc
or
imul
push
cdq
enterw
sub
inc
inc
sub
(bad)
movs
into
cmc
cmp
or
cmp
lods
push
lea
mov
mov
lock
mov
imul
leave
adc
jmp
ins
dec
mov
sbb
jge
dec
mov
cmp
push
pop
mov
cmp
pop
sbb
out
mov
push
mov
fstp
xlat
dec
gs
imul
and
or
push
inc
xor
pop
inc
xor
xor
pushf
movs
push
sub
or
or
test
lahf
inc
adc
mov
jnp
lea
js
jg
or
sbb
cmps
js
(bad)
hlt
sub
or
inc
(bad)
cs
nop
sbb
or
loopne
fstp
push
xor
ins
in
pop
mov
cmp
jle
mov
push
push
js
fld
aaa
add
ja
cwde
sub
or
test
jmp
inc
js
pop
pop
ins
jmp
push
add
jno
pop
sub
pop
sbb
jmp
mov
pop
dec
stos
test
dec
xchg
add
stc
jb
les
ret
sar
rcl
or
jbe
xor
jmp
clc
adc
shl
push
mov
or
ins
aam
sub
or
ja
adc
mov
jmp
scas
sahf
mov
or
push
mov
pop
add
cwde
or
adc
push
inc
f2xm1
mov
push
call
pushf
or
or
cwde
dec
mov
enter
and
inc
and
in
mov
fadd
sub
setg
std
shr
repz
imul
add
dec
add
out
cmp
add
mov
mov
repnz
cmp
je
call
fld
add
sbb
mov
adc
add
jae
sub
or
or
or
pop
enter
or
pop
jns
cmp
or
loop
cmp
or
nop
ja
mov
cwde
in
jns
push
push
ja
and
pusha
nop
push
adc
pop
test
adc
sbb
sub
adc
in
in
adc
adc
sahf
retf
out
adc
ret
fisub
call
adc
and
and
push
push
push
retf
adc
mov
pop
xor
in
call
cmp
add
pop
enter
(bad)
sbb
pop
push
sbb
out
sbb
jb
sbb
add
add
jge
sbb
addr16
push
push
inc
ror
in
push
pop
pop
jne
mov
xor
mov
jae
bound
adc
bound
sbb
dec
add
dec
push
mov
cmp
mov
push
in
jno
repnz
shl
imul
aad
xor
mov
or
fwait
out
cmp
ins
sbb
repnz
outs
or
call
adc
dec
dec
cwde
jmp
xchg
add
sbb
or
sbb
ins
nop
cmps
repnz
in
in
in
cdq
add
pop
mov
push
nop
addr16
out
out
jge
inc
push
inc
out
sbb
pop
add
dec
jae
lock
iret
enter
pmulhw
repnz
repnz
std
push
push
and
repz
std
hlt
add
aam
ror
pusha
hlt
fwait
cmp
enter
inc
jg
add
sbb
neg
(bad)
nop
xchg
cmp
cmp
clc
jb
push
imul
seto
stc
inc
stc
lock
cli
pusha
in
jns
iret
sti
fwait
retf
sbb
stos
cld
cld
cld
je
xchg
mov
cmovl
jnp
push
ss
xor
sbb
iret
repz
(bad)
adc
adc
ss
inc
or
dec
addr16
rol
test
cmps
push
outs
es
and
jecxz
mov
std
sti
in
in
and
adc
(bad)
sbb
out
mov
or
out
outs
dec
push
jno
call
or
pop
or
cdq
repnz
repnz
in
add
inc
popf
cli
sbb
js
out
out
out
cdq
and
add
xchg
pop
leave
das
cli
push
cli
sbb
jmp
sub
sar
push
leave
push
jb
stc
stc
cmps
jb
imul
stc
idiv
pusha
pop
xchg
div
pop
fwait
xor
add
stc
push
xor
out
clc
cmp
rcl
sti
cdq
sbb
outs
in
cld
inc
cld
adc
add
sbb
loopne
sbb
mov
dec
test
cmc
cld
sub
adc
loop
icebp
not
pop
shl
push
xor
scas
idiv
mul
adc
out
out
cdq
cmp
sbb
(bad)
out
inc
not
sub
xchg
and
sbb
sti
imul
jmp
neg
repnz
not
and
jb
or
neg
mov
adc
test
cmps
jb
pusha
sbb
adc
xchg
bnd
cmc
pop
leave
and
in
xlat
xchg
cmc
pop
dec
cmc
sar
fwait
mov
scas
jae
pop
add
clc
jne
cmp
hlt
stc
push
jns
loopne
cmp
mov
dec
cli
jno
hlt
mov
adc
pop
jne
mov
push
hlt
sbb
and
shr
idiv
loopne
fxch
jo
(bad)
sti
lahf
or
adc
dec
push
test
sub
xor
loope
jmp
adc
gs
scas
xrelease
mov
cmps
jb
repz
repz
add
pop
leave
and
push
sbb
(bad)
jmp
outs
cmc
mov
xchg
pusha
leave
mov
sub
mov
leave
and
and
add
mov
movs
mov
icebp
icebp
js
in
ror
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
or
adc
sub
out
sbb
rol
in
enter
cmovno
push
add
mov
iret
add
stos
add
jno
fmul
jp
push
jnp
adc
mov
adc
mov
or
dec
xchg
mov
add
sahf
(bad)
and
add
dec
add
push
int3
test
ss
call
mov
data16
pop
dec
add
pop
push
push
popa
aaa
gs
pop
push
jnp
int
fldcw
test
or
pop
test
sbb
push
fwait
arpl
push
int
fstp
(bad)
jns
cmps
pop
ds
imul
cmp
jns
scas
(bad)
mov
sub
mov
repz
mov
outs
outs
rcr
loopne
mov
xor
inc
adc
neg
mov
sub
es
inc
in
and
xor
add
pop
leave
stos
sbb
push
or
inc
xor
sub
dec
pushf
xorps
push
js
imul
add
loope
or
mov
and
outs
icebp
aam
jp
fistp
dec
mov
ret
pop
mov
mov
jb
mov
adc
ja
cmps
(bad)
lds
dec
call
mov
shufps
lea
(bad)
fild
daa
jle
dec
cmp
jbe
fild
xchg
gs
retf
aam
adc
nop
inc
sub
sbb
fsub
adc
fcmovu
call
fdivr
mov
dec
mov
mov
dec
dec
mov
add
(bad)
das
push
shl
or
(bad)
jge
sub
jl
or
add
cmp
and
in
push
jne
ret
xor
xchg
aam
ja
jo
dec
js
add
das
pop
xor
les
or
mov
shl
pusha
cmp
loopne
scas
lods
mov
into
adc
sahf
pop
adc
add
aaa
lea
inc
rol
jae
or
pop
or
sub
mov
jb
fistp
arpl
sbb
gs
or
or
loop
jno
imul
sbb
mov
clc
xchg
jno
and
pop
pushf
xor
js
dec
popf
add
add
inc
pushf
push
jmp
sbb
xor
sbb
fisubr
dec
mov
lods
xor
outs
mov
mov
and
adc
cld
sub
pop
rcr
dec
and
cwde
mov
mov
or
pusha
arpl
es
add
pop
lods
or
js
push
mov
sbb
mov
push
out
aad
les
add
test
scas
daa
adc
pop
or
push
and
arpl
or
add
ret
cmp
sbb
push
add
dec
add
xor
ror
mov
sbb
retf
int
mov
add
ins
pop
not
sbb
int
iret
jae
dec
adc
push
add
xchg
out
cmp
retf
sub
imul
pop
or
and
add
or
loopne
rcr
pushf
sub
sbb
xchg
mov
add
inc
add
xchg
adc
and
xchg
xor
idiv
lea
call
fst
jmp
adc
pop
jne
mov
mov
inc
inc
cmp
clc
test
fisttp
jmp
daa
or
(bad)
je
sub
xchg
add
fisubr
lea
test
xor
or
test
es
jl
add
add
push
dec
or
and
adc
lea
sbb
cmp
mov
add
jmp
call
add
adc
fld
jmp
or
jmp
imul
mov
mov
or
push
sbb
imul
and
and
shl
dec
mov
or
pushf
pusha
inc
mov
sub
xchg
xor
sub
out
or
mov
dec
dec
dec
or
dec
xchg
sbb
iret
mov
push
aam
or
push
cli
jo
push
es
and
ret
xor
rol
sub
bound
std
fiadd
pop
xor
leave
xchg
data16
pop
adc
add
add
pop
jns
ss
ficomp
sbb
cmp
mov
xor
movd
inc
or
pusha
add
je
mov
aaa
add
pushf
or
mov
or
push
cmp
push
push
retf
loop
jne
sub
(bad)
xlat
push
ds
ret
imul
pop
js
adc
mov
fcomp
lea
test
mov
cmp
mov
add
add
test
dec
cmp
pop
dec
cmp
add
test
rcr
add
adc
adc
test
daa
pop
jmp
test
add
jmp
sbb
dec
dec
loopne
popa
ret
mul
(bad)
dec
or
sub
dec
inc
cmps
inc
jo
or
add
adc
pop
push
jns
jmp
jle
adc
or
or
imul
ret
jae
xchg
shl
mov
jb
add
pop
jmp
ins
inc
fisub
sub
loope
leave
(bad)
push
push
movs
sub
push
cmp
cmp
or
or
scas
xchg
aaa
xor
or
ret
and
cmp
adc
and
adc
pop
mov
sub
mov
xchg
pop
aam
popf
outs
push
outs
jb
mov
sub
sbb
popa
jecxz
cmp
ret
lods
or
jl
pop
mov
or
movs
sbb
mov
ret
test
or
and
and
fninit
or
in
push
mov
push
arpl
inc
(bad)
into
mov
xlat
add
iret
sbb
jne
mov
into
imul
(bad)
std
pusha
leave
pop
dec
pushf
push
movs
inc
inc
adc
pusha
sub
iret
and
dec
mov
or
add
jb
mov
mov
fisttp
mov
sbb
and
je
jmp
sbb
cmp
je
dec
popa
je
cmp
je
cs
mov
xchg
jge
or
sub
pusha
out
mov
or
push
bound
or
je
aaa
cmc
nop
rcr
sub
pop
ret
inc
dec
dec
cmp
je
sub
lods
cmps
cmp
das
loop
cld
and
js
and
retf
jp
aam
inc
cmp
test
adc
ins
cwde
dec
test
and
push
jo
inc
adc
xchg
xor
mov
xchg
rcr
add
xchg
or
jl
(bad)
push
and
add
push
out
mov
mov
cs
or
add
mov
xchg
xchg
dec
inc
(bad)
iret
mov
jne
aas
mov
xchg
loopne
in
loope
mov
push
neg
cwde
mov
push
add
sbb
pop
mov
xchg
rcr
mov
mov
jae
shl
mov
add
daa
dec
clc
inc
std
adc
or
inc
dec
add
sub
push
cmp
push
inc
mov
adc
dec
mov
mov
jg
cmp
add
sbb
aaa
imul
mov
sbb
ja
cmp
rol
and
icebp
add
sub
or
mov
or
and
or
aaa
movs
clc
jle
test
jnp
(bad)
cmp
inc
jl
push
pop
add
push
jne
push
aas
out
loopne
jmp
push
xchg
pop
add
jmp
jecxz
sbb
add
jl
inc
clc
inc
cli
pop
cmp
stos
dec
clc
add
outs
push
and
push
dec
mov
or
(bad)
nop
adc
pop
dec
sbb
ja
call
or
mov
cmp
push
push
lea
icebp
push
cmps
(bad)
or
test
adc
jmp
or
or
loopne
inc
add
(bad)
sbb
pop
xor
or
inc
mov
loop
jb
repnz
cmp
inc
push
bound
ja
or
leave
adc
mov
scas
mov
cwde
sub
inc
or
jb
rcl
(bad)
adc
inc
adc
(bad)
sub
shl
push
cld
fimul
repnz
out
pop
inc
rcl
(bad)
outs
or
push
adc
inc
or
cld
push
and
test
jbe
inc
cli
aas
ret
cli
aas
jbe
push
pop
movs
ror
jp
push
and
push
xor
cmp
or
not
and
dec
jne
add
sbb
sbb
dec
loopne
pushf
mov
in
push
pop
pushf
scas
rol
pusha
pop
adc
add
cmps
jne
pop
and
push
js
pop
addr16
mov
jmp
clc
add
hlt
xor
sar
pop
sub
and
mov
pop
cmp
clc
ja
lods
or
mov
imul
and
cmp
je
stc
cmps
loopne
stos
jno
jno
cmp
mov
pop
cwde
out
not
and
and
dec
fsub
sub
ja
std
xor
sbb
pop
xor
addr16
fimul
cdq
pop
add
dec
adc
imul
mov
fimul
mov
int3
inc
cmps
sar
adc
cmp
sub
mov
xor
push
xchg
cmps
add
call
inc
dec
or
xchg
sbb
sub
lods
dec
(bad)
push
or
rcl
or
inc
xor
dec
fdivr
mov
or
mov
lods
add
or
clc
rcr
call
dec
or
jp
mov
jne
(bad)
aas
gs
push
or
add
and
cld
in
dec
adc
inc
push
push
jmp
popa
clc
(bad)
and
test
and
mov
adc
pop
cmp
adc
addr16
jb
jno
add
(bad)
pusha
push
cmp
enter
aaa
jg
sbb
fiadd
das
mov
cmp
imul
lock
cmp
push
(bad)
outs
push
and
pop
movs
pop
sbb
xor
je
cmp
mov
aad
pop
push
push
sbb
jo
in
push
ss
loopne
xor
sbb
dec
xchg
pop
hlt
movs
inc
or
stos
lea
test
sub
jo
dec
adc
sbb
cmc
xchg
repnz
xchg
add
aam
mov
xor
inc
dec
dec
sar
add
out
sahf
adc
jns
push
(bad)
rep
stos
lea
sbb
lods
cli
scas
ja
ret
stos
add
xlat
paddb
inc
nop
sub
out
and
push
out
jle
lock
mov
call
dec
es
test
mov
or
ds
jb
cmps
loopne
adc
fs
inc
call
mov
inc
mov
add
mov
test
sbb
inc
jecxz
pop
or
add
and
not
and
rol
enter
push
mov
xchg
or
and
xlat
sub
pop
shr
pop
int
mov
cld
rcr
mov
dec
mov
and
out
or
mov
push
or
inc
test
pop
mov
(bad)
cmp
in
xlat
mov
lock
stc
test
push
xchg
pop
push
cmp
mov
inc
cmp
sub
mov
push
cmps
inc
pop
fdivr
fimul
sub
mov
mov
add
adc
and
ds
add
pop
mov
push
stos
movs
or
xchg
sar
dec
cmp
mov
sbb
aad
mov
lea
clc
pop
dec
push
xor
adc
jle
sbb
dec
shl
pop
push
pop
adc
pop
sbb
iret
mov
pop
add
and
and
cmp
test
or
sbb
mov
stos
ins
xor
movs
xlat
mov
and
je
(bad)
data16
clc
js
xchg
imul
push
mov
mov
inc
dec
ins
pop
xor
push
xchg
or
jne
test
movs
pop
(bad)
aaa
imul
xor
cwde
(bad)
sbb
push
fisttp
and
fldcw
fbstp
ja
dec
int3
fcmovb
add
adc
fimul
out
sbb
or
mov
mov
and
stc
mov
push
push
cs
repz
push
bswap
mov
out
cmp
(bad)
or
push
xor
jns
dec
add
loopne
mov
sbb
rcr
fsubr
outs
sub
sbb
sub
xor
stc
jg
ss
dec
or
push
jge
or
shr
adc
adc
rcl
or
jp
or
cmp
and
dec
xlat
push
xchg
ss
adc
xor
(bad)
jb
or
jg
sbb
and
fnstenv
jmp
dec
sub
dec
fidiv
push
lock
or
arpl
cs
pop
jo
jmp
dec
ret
stos
pop
xchg
rol
add
clc
push
adc
mov
(bad)
ss
dec
ins
clc
loope
mov
dec
pop
iret
jne
int3
loopne
sub
dec
mov
xchg
mov
cld
sahf
sub
add
out
jbe
mov
shl
add
mov
push
pop
leavew
inc
test
sub
or
mov
sub
icebp
push
repnz
pop
push
aam
pop
aam
dec
adc
push
xor
jge
iret
dec
fild
loope
adc
cmp
cmp
pop
mov
mov
jle
dec
jne
daa
int3
dec
scas
in
or
sub
dec
mov
ja
mov
pop
pop
dec
bound
dec
push
scas
fwait
or
into
sub
movs
imul
cmp
inc
mov
mov
das
pop
das
or
xor
cmp
jl
aas
jge
out
or
inc
cld
or
pop
adc
inc
or
or
mov
lock
or
mov
or
adc
cmp
shr
gs
test
repnz
ds
dec
call
fcmovu
xchg
cmp
add
setb
out
add
cld
add
push
mov
add
and
nop
fimul
add
mov
add
jb
sbb
or
aad
add
and
loopne
cmp
sbb
bound
rol
or
xor
ins
aam
sbb
push
sbb
push
mov
jbe
jmp
sbb
push
mov
add
add
pop
mov
pop
jl
or
xor
and
xor
fadd
or
je
and
and
stos
add
mov
push
jp
mov
loop
jnp
inc
mov
leave
mov
je
push
mov
aad
stc
jne
push
mov
lods
in
push
push
cmp
cmp
jbe
sbb
push
cld
sub
add
push
mov
inc
and
xor
push
add
push
pop
sar
xor
inc
inc
inc
jle
sti
adc
fdiv
inc
je
je
hlt
xor
out
cmp
inc
std
push
jae
fldenv
lea
inc
mov
adc
pop
lock
ins
cmc
je
xchg
xlat
in
pop
loope
push
and
xchg
push
push
repz
inc
jecxz
dec
adc
mul
aaa
sbb
jp
das
inc
call
mov
mov
xor
lock
or
(bad)
je
xchg
jbe
je
adc
lea
sub
mov
je
test
movs
adc
jmp
pop
push
dec
xor
cmps
test
mov
mov
pop
push
xor
mov
sbb
mov
(bad)
sub
das
jmp
sbb
test
jnp
pop
sub
loopne
inc
lock
cmp
shl
mov
test
div
lods
clc
adc
lods
retf
push
push
add
xchg
sbb
or
ss
inc
call
push
cli
inc
cmps
lahf
inc
cmp
xchg
and
retf
sbb
add
aad
inc
push
dec
enter
jbe
out
or
push
push
xor
mov
lds
mov
add
das
pop
callw
or
test
lods
imul
jb
jns
loopne
leave
shl
push
lods
(bad)
rol
ja
xchg
cmp
rol
push
and
or
mov
inc
sub
call
add
in
push
cmp
fistp
ret
jmp
sbb
ja
ins
mov
mov
(bad)
add
mov
add
shl
mov
inc
jecxz
ss
mov
je
inc
dec
mov
fnsave
sbb
jecxz
das
or
rol
add
inc
loopne
sbb
pop
sub
mov
jb
fcomi
test
and
jle
sbb
xchg
mov
adc
xchg
adc
pop
pop
push
call
xchg
or
imul
je
int
jle
bnd
cmp
jl
mov
mov
mov
cmps
and
mov
dec
push
ds
add
loopne
or
jae
repz
add
inc
and
pop
sub
addr16
jno
jnp
std
jmp
sahf
sbb
loopne
pop
lds
hlt
xor
cmp
movs
rcr
sub
sbb
inc
sti
xor
and
and
inc
sbb
adc
shr
or
sbb
cld
cmp
push
cmp
sub
and
xor
cli
dec
cmp
mov
add
mov
inc
scas
cs
retf
pop
add
(bad)
dec
jl
shr
test
mov
or
or
popf
in
add
adc
jno
dec
mov
jle
pusha
and
xchg
rcl
outs
push
mov
nop
scas
jle
fucomip
xlat
add
push
iret
adc
dec
dec
mov
ret
js
dec
or
fldenv
pop
jae
jp
lahf
cmp
int
push
pop
jl
cwde
test
or
push
out
push
outs
fsub
mov
ins
dec
adc
cmp
retf
loopne
in
lea
je
loope
jno
push
jne
add
shl
add
dec
mov
mov
sub
outs
retf
mov
mov
aaa
mov
loope
fdiv
sub
leave
pop
dec
pusha
fld
push
lods
shl
sub
sbb
mov
fs
sbb
push
iret
adc
cmp
dec
call
mov
dec
push
mov
retf
ret
(bad)
retf
pop
add
or
lods
shl
add
es
sbb
cmp
pop
iret
fsub
and
pop
push
or
or
jnp
jl
nop
and
push
xor
fs
pusha
cs
jne
mov
mov
rcr
cli
push
cmp
pop
cmp
xchg
and
push
mov
sbb
lods
push
loope
add
adc
enter
(bad)
jmp
adc
in
pop
add
mov
dec
sti
retf
cmp
adc
or
push
jne
test
js
outs
or
add
popa
mov
mov
rol
mov
les
loope
mov
sti
popa
aas
sahf
das
repnz
jp
push
mov
adc
sbb
add
pop
push
sub
jmp
adc
and
xchg
or
pushf
cmp
(bad)
jae
fisub
je
xchg
je
mov
rcr
mov
jmp
outs
sub
iret
cmp
add
add
push
mov
dec
push
repz
and
stos
call
add
dec
or
add
pop
adc
adc
pop
jge
add
or
xor
adc
and
adc
jmp
xor
inc
js
pusha
xor
xor
pushf
cs
adc
mov
mov
(bad)
fisttp
and
scas
mov
ret
cmps
inc
xor
cs
pop
pop
adc
mov
or
jnp
jmp
pop
mov
pop
ror
stos
fidivr
(bad)
mov
lea
cmp
je
pop
call
and
rcr
call
sub
std
sbb
dec
inc
inc
push
lea
ja
movs
add
aad
lods
sub
mov
(bad)
inc
xor
push
cmp
jl
sahf
jg
rcl
and
aas
iret
dec
hlt
rol
sub
lea
test
jne
clc
add
stc
dec
imul
into
jg
push
and
jb
xlat
cmp
shr
pop
inc
or
ds
dec
or
xchg
inc
xchg
shl
adc
or
scas
mov
jecxz
ds
retf
add
xchg
nop
add
mov
adc
xchg
and
xchg
or
daa
adc
test
xchg
push
mov
mov
or
fs
lods
push
jmp
fidiv
jne
jne
frstor
fnsetpm(287
mov
mov
or
push
aad
sbb
or
add
adc
or
pop
xor
mov
pop
push
pop
jle
out
inc
inc
sbb
push
movs
add
movs
mov
jecxz
or
add
cmc
xor
(bad)
mov
add
push
push
sub
pop
push
adc
add
sbb
je
add
dec
mov
jno
scas
dec
es
jne
pusha
pop
cmp
jae
cmp
or
adc
cmp
(bad)
mov
adc
adc
pop
pusha
(bad)
ins
aam
xchg
jo
inc
jl
and
jle
jmp
add
test
sbb
fsubr
ret
add
inc
jg
add
fdiv
fs
call
jmp
sbb
das
loopne
jb
adc
adc
or
loopne
jecxz
out
pop
xor
jo
jmp
imul
push
les
(bad)
(bad)
pop
jbe
std
jb
pop
jg
test
faddp
add
cdq
jne
dec
adc
adc
or
or
adc
and
and
fadd
cmp
and
xor
enter
int
jbe
inc
retf
sub
push
test
test
or
lea
stc
gs
pop
xchg
and
adc
mov
sub
cmp
cmp
into
nop
adc
(bad)
adc
call
inc
and
cmp
add
pop
movs
aaa
and
or
jge
push
jmp
inc
pushf
popf
push
and
stos
dec
adc
ins
jns
sub
sbb
pop
adc
daa
lock
or
or
add
movsx
mov
call
(bad)
pop
das
outs
fnsave
and
rcr
inc
std
bsf
inc
js
fs
je
sahf
pop
cdq
jno
shl
lock
pop
jl
jnp
mov
mov
js
in
es
pop
lahf
outs
sub
jmp
clc
xchg
dec
add
or
bound
ins
push
push
mov
push
push
js
out
mov
mov
pop
es
jmp
and
cmp
push
push
inc
push
and
sub
ret
add
or
into
inc
in
mov
(bad)
or
push
or
mov
icebp
lock
jp
pop
and
sbb
push
add
mov
add
ins
pop
stos
add
stos
add
mov
mov
sub
test
mov
pop
push
cmp
mov
test
js
or
(bad)
or
pop
mov
test
(bad)
rol
int
nop
mov
sbb
mov
jb
pop
hlt
push
lea
jge
cmps
add
fisub
mov
push
or
push
arpl
push
adc
sub
cmp
push
bound
inc
and
add
mov
mov
jo
adc
mov
dec
push
sbb
cmps
jmp
and
je
ret
push
and
cmp
adc
sbb
sbb
sbb
cs
push
lea
pop
nop
call
sti
sbb
mov
(bad)
lahf
dec
jae
xor
push
and
and
sub
cmps
mov
call
lea
adc
push
clc
inc
jo
jg
mov
ja
imul
iret
nop
jno
call
add
push
pop
cs
gs
(bad)
neg
dec
mov
mov
push
push
push
mov
test
fs
push
xor
mov
mov
mov
fwait
and
cmp
std
mov
add
inc
enter
sub
inc
push
cwde
cld
fmul
cmp
xchg
jo
les
(bad)
cmp
retf
xchg
add
mov
loopne
add
push
mov
xchg
add
loopne
jo
addr16
pcmpgtw
ret
push
mov
inc
iret
mov
popa
lods
imul
retf
imul
pop
out
push
call
fdiv
clc
dec
mov
add
dec
rcl
inc
inc
jmp
(bad)
lds
mov
lahf
jmp
leave
xor
mov
lea
or
jmp
scas
je
pop
xor
mov
mov
cmp
inc
push
call
das
add
ffreep
fbld
jb
mov
cs
leave
dec
test
cwde
push
mov
out
adc
mov
inc
or
das
mov
inc
inc
inc
dec
pop
cmp
sub
xor
add
adc
sub
or
and
or
and
mov
movs
cmps
js
sub
sub
push
mov
add
and
inc
mov
and
cdq
pop
adc
nop
jmp
pop
mov
ins
dec
add
clc
push
and
add
inc
inc
inc
add
movs
mov
into
add
inc
adc
mov
and
and
call
retf
mov
mov
push
pop
jne
xlat
sahf
dec
and
sbb
loopne
dec
fld
add
retf
ins
mov
or
cwde
(bad)
pusha
push
add
int3
adc
fnsave
inc
jmp
xor
or
pusha
cli
push
jmp
sbb
jmp
cmps
xchg
int
ss
ins
out
and
sbb
push
jmp
jnp
(bad)
sbb
cmp
dec
sub
shl
scas
push
push
js
dec
test
outs
push
and
test
and
jnp
sbb
mov
pop
out
add
push
cmp
pop
clc
sbb
xchg
adc
push
ror
sbb
pushf
shr
jne
xchg
push
xor
push
pcmpgtb
jne
xchg
sbb
or
push
sub
sub
cdq
add
test
push
inc
mov
sub
or
sar
mov
not
inc
xor
ret
inc
mov
push
fadd
push
mov
ds
and
ror
data16
or
dec
cmp
and
push
test
inc
js
ror
dec
out
ficomp
stos
mov
or
inc
(bad)
mov
xchg
cwde
adc
sbb
stos
mov
or
inc
push
xor
and
and
mov
rol
in
or
pop
add
jo
or
or
div
inc
hlt
sbb
and
dec
add
or
xchg
or
add
jo
mov
das
mov
push
pop
sub
and
mov
test
rcl
stc
sbb
call
pop
pop
lods
inc
push
dec
shl
or
add
cmp
push
jmp
mov
dec
pop
cmps
lea
push
dec
bound
pop
sub
mov
fwait
jl
xchg
rcl
stos
or
xchg
retf
add
aad
ror
inc
pushf
jne
xor
imul
ss
cmp
adc
test
movs
mov
xchg
neg
or
movs
fisub
xor
or
sti
sbb
sub
dec
loop
push
inc
and
or
mov
pop
add
add
out
fdivr
fbstp
ins
popf
and
loopne
inc
sbb
int3
add
and
mov
lods
mov
enter
push
sbb
ror
(bad)
dec
outs
sbb
pop
ja
lock
xor
fadd
mov
pop
rsm
nop
shr
rol
and
pop
add
mov
cmc
push
lock
xchg
out
or
add
mov
cmp
shr
ins
mov
mov
xlat
mov
or
je
or
or
or
add
xor
adc
fcmovne
add
add
ins
jne
cmp
and
add
mov
sub
fadd
push
xchg
add
dec
rcr
fadd
sub
repnz
sub
or
sub
inc
mov
add
jge
int3
int
popa
ins
dec
je
or
cmp
in
sub
mov
inc
inc
add
call
and
mov
sbb
adc
or
ss
sbb
xor
adc
out
repnz
cmp
xor
ins
pop
lds
push
in
imul
dec
rep
div
js
pushf
cmps
shl
pop
fsubp
mov
adc
jo
rcl
sub
cmps
sbb
ffreep
fisubr
pop
(bad)
push
stos
dec
sbb
into
jb
mov
xor
cwde
pop
sahf
mov
mov
inc
push
or
dec
add
and
inc
cdq
mov
nop
call
in
jle
lock
xchg
sbb
(bad)
cmp
loope
mov
retf
mov
jne
mov
(bad)
ja
xchg
jmp
and
movs
nop
inc
push
mov
fsubr
adc
test
mov
push
mov
les
movs
xchg
fisub
pop
inc
cmp
cmp
xor
pop
dec
fs
popa
sahf
cmp
outs
lahf
je
push
cld
cs
xor
add
or
test
xchg
pusha
ins
dec
test
mov
push
out
lahf
dec
or
mov
(bad)
xchg
mov
daa
mov
mov
pop
je
jl
push
pusha
add
mov
adc
mov
cmps
hlt
jo
je
pop
jmp
imul
mov
imul
test
daa
and
div
fiadd
rol
movq
(bad)
adc
out
mov
shl
push
xor
cmps
add
pop
sub
stc
movs
jnp
or
js
aad
jbe
jle
inc
inc
sub
mov
push
push
addr16
xor
cmp
jle
push
scas
imul
ins
cld
jle
sub
xchg
and
(bad)
pop
cmp
add
adc
je
aaa
cwde
mov
dec
rcr
pop
push
mov
scas
scas
cs
sub
mov
push
adc
sbb
cwde
adc
add
sbb
lods
xchg
and
and
ins
sbb
jne
jae
add
mov
and
push
dec
cmp
or
rcl
popa
xchg
adc
xchg
xchg
inc
(bad)
pop
cmps
xchg
loopne
mov
and
gs
test
cld
(bad)
pop
fidivr
xchg
cdq
mov
add
adc
mov
jle
mov
add
mov
pop
leave
loopne
add
jle
lods
loop
and
or
or
add
push
imul
add
pop
ror
cdq
jmp
sub
add
pop
cmp
je
pop
add
mov
adc
enter
add
retf
and
rcl
loope
test
jge
jne
add
hlt
push
pop
pop
inc
mov
or
xchg
adc
sbb
bound
jg
xor
and
push
dec
push
inc
pop
int
add
sbb
shl
fsubr
outs
push
add
mov
dec
jmp
lea
out
sub
inc
cmc
add
pop
fadd
push
ret
cmp
stos
xchg
test
xchg
add
add
inc
aad
call
data16
inc
inc
inc
hlt
mov
or
pop
addr16
iret
xchg
cmp
aaa
or
je
cmc
mov
dec
xor
sti
or
std
mov
sub
sub
or
add
les
rol
in
sub
add
and
pop
add
movs
jno
add
mov
sub
nop
jge
lea
push
dec
or
or
mov
xor
nop
adc
pop
mov
loopne
in
sbb
nop
icebp
add
mov
push
js
fiadd
nop
inc
push
inc
push
mul
data16
cwde
nop
(bad)
adc
inc
int
cwde
sub
jmp
add
xor
rcl
push
jl
popa
cmp
sub
lods
repz
sub
stos
ret
scas
out
pop
or
dec
mov
clc
adc
push
rol
push
sub
mov
repz
ja
loopne
dec
add
push
bound
iret
repz
and
inc
movs
pushf
cwde
cmp
xor
mov
mov
test
mov
add
xor
or
adc
dec
ss
mov
mov
xor
xchg
mov
ja
aaa
jno
adc
mov
or
mov
sub
push
js
sbb
pop
(bad)
mov
sbb
je
cwde
ror
push
push
iret
enter
sub
mov
mov
sub
adc
dec
dec
adc
xchg
popa
scas
mov
les
add
jmp
xchg
test
mov
xchg
sub
and
dec
and
dec
stos
std
retf
fcom
ja
adc
push
and
push
dec
sbb
cmp
inc
xor
and
and
in
in
call
mov
cld
mov
mov
test
pop
je
daa
daa
daa
iret
lods
pop
inc
dec
mov
and
ds
jge
xor
mov
retf
test
mov
fs
sub
sbb
les
inc
sub
inc
jns
loop
dec
adc
inc
in
movs
push
xor
lods
and
cld
and
dec
dec
lahf
mov
dec
mov
mov
inc
dec
cld
lahf
dec
dec
aas
pop
adc
test
mov
and
leave
and
mov
fisttp
sub
push
or
dec
lods
test
cmps
lahf
mov
cmp
cdq
adc
in
dec
sub
pushf
retf
pushf
cmp
jb
int3
mov
shr
shl
xchg
pushf
dec
push
mov
dec
data16
dec
test
jne
test
sub
jns
leave
cwde
inc
jb
in
xchg
mov
mov
mov
add
inc
cdq
xchg
cwde
mov
xor
jmp
fbld
mov
sub
test
nop
or
repz
ror
ss
loop
icebp
scas
push
inc
lahf
cs
mov
jmp
inc
fiadd
jo
mov
sub
aam
js
add
dec
adc
push
dec
popf
or
int
cdq
inc
cmp
ror
cmp
pop
mov
and
inc
cdq
or
je
push
js
mov
or
adc
inc
mov
nop
mov
inc
or
popa
in
dec
sbb
inc
xor
loope
mov
test
mov
call
sbb
sbb
push
outs
out
scas
mov
inc
inc
inc
mov
jne
push
inc
das
mov
fldz
ret
push
sbb
xchg
call
dec
pushf
gs
fisttp
mov
les
or
ret
mov
or
push
mov
mov
fdiv
add
and
loopne
mov
in
mov
push
push
js
pop
dec
push
mov
sub
jne
dec
fmul
add
mov
xor
jae
ins
movs
loope
fdiv
into
jbe
or
xor
adc
ror
imul
nop
push
not
dec
pop
pusha
inc
and
mov
clc
add
imul
push
mov
mov
jne
sub
add
adc
pop
sbb
inc
cmp
cmp
and
sbb
ins
pop
mov
add
movs
adc
sub
add
les
lods
xchg
dec
movs
cmp
pop
or
push
inc
das
push
pop
push
rol
xchg
add
test
jl
pop
add
lock
idiv
add
ret
test
pushf
push
or
sub
add
rol
adc
icebp
ret
adc
sbb
push
push
push
and
dec
adc
add
jecxz
mov
mov
xchg
dec
aam
add
sbb
lock
shl
xchg
sbb
outs
push
jbe
inc
ret
les
test
lahf
mov
sub
out
mov
popa
adc
adc
in
mov
shl
sub
pop
dec
push
mov
mov
mov
push
mov
mov
or
jnp
movs
out
data16
scas
and
add
sub
mov
add
cld
xor
fdiv
add
out
in
stc
mov
pusha
neg
call
in
test
mov
ror
and
rcl
add
rol
fnstcw
push
(bad)
dec
cld
xor
dec
or
inc
inc
push
enter
push
adc
add
fmul
movs
mov
xchg
inc
jecxz
sbb
ret
adc
ret
push
ds
push
push
xor
jg
in
mov
enter
js
mov
dec
(bad)
test
popa
xlat
out
imul
and
sbb
and
enter
or
dec
fwait
xchg
adc
add
inc
fscale
lds
test
fist
or
fsubr
out
fiadd
add
inc
and
idiv
pop
(bad)
or
adc
cmp
push
and
jo
les
adc
shl
dec
inc
jl
pusha
jno
add
and
clc
inc
pop
dec
add
not
or
les
ret
jle
or
add
dec
jl
cmp
jbe
(bad)
mov
ss
outs
jo
shrd
inc
lea
mov
mov
mov
sbb
adc
dec
cwde
or
push
add
or
data16
pop
pop
test
xor
xor
out
add
in
sub
push
cmp
pop
and
call
inc
lahf
sub
adc
sbb
sbb
adc
mov
mov
jo
inc
out
aaa
fsub
shr
jp
pop
sbb
js
jg
jl
mov
sub
or
cmp
shl
fidivr
ror
mov
cmp
push
push
push
bound
mov
mov
fdiv
jge
and
cmp
repnz
add
mov
jae
xor
inc
inc
inc
pop
dec
pop
or
jae
sbb
or
push
push
bound
add
jae
stc
mov
dec
sar
add
pop
lahf
icebp
adc
push
(bad)
stos
xor
int
or
cmc
cmps
mov
movups
lds
adc
mov
and
inc
inc
loope
sub
push
add
sub
sub
test
adc
push
mov
sub
test
jge
mov
adc
or
push
add
push
xchg
cmps
mov
push
movs
add
and
(bad)
into
xchg
jl
inc
inc
sbb
adc
iret
test
rol
and
enter
shl
jne
cmp
stos
(bad)
adc
lock
pop
or
adc
inc
lds
sub
and
(bad)
adc
push
imul
pusha
push
cmps
cmp
cld
jl
dec
sub
aam
call
das
mov
mov
das
shr
popa
xchg
jae
jmp
xor
(bad)
imul
pop
pop
adc
or
pop
data16
retf
movs
stos
or
ins
outs
inc
popa
je
inc
je
dec
lods
in
in
icebp
jmp
xor
dec
mov
add
rep
inc
stos
jmp
dec
pop
mov
(bad)
aad
xchg
mov
int3
jb
mov
test
sub
inc
mov
adc
popa
sub
(bad)
adc
call
jne
fmul
ins
push
pop
pop
rcl
push
add
or
movs
dec
popa
mov
pop
div
lods
ins
pusha
and
fadd
mov
adc
or
aam
mov
fwait
jo
jl
test
add
cld
movs
dec
sbb
inc
or
inc
jae
and
fs
dec
and
push
(bad)
jle
hlt
dec
dec
adc
movs
mov
not
mov
inc
dec
imul
test
pop
call
mov
mov
and
or
mov
xchg
and
ror
sub
(bad)
bound
fiadd
inc
jge
dec
and
add
mov
aas
pop
xchg
and
in
ret
ret
fcom
sbb
mov
hlt
fdivr
data16
inc
int
or
pop
nop
sbb
and
daa
jo
cwde
loop
daa
and
add
mov
inc
rcr
je
xchg
ins
aas
or
cmp
(bad)
cmps
pop
add
jecxz
jno
scas
ja
push
fdiv
inc
jnp
cmp
adc
aas
jb
hlt
cmp
je
mov
js
add
(bad)
fimul
and
adc
pop
push
inc
(bad)
es
clc
ins
icebp
push
add
mov
adc
xor
and
mov
dec
pop
push
dec
sbb
adc
mov
and
and
lea
or
popf
lds
mov
pop
call
cli
ret
push
pop
jns
sbb
mov
push
mov
loopne
test
cld
cmp
je
mov
(bad)
xchg
or
lea
scas
mov
test
and
add
push
mov
xor
outs
clc
ds
push
pop
in
popa
sub
dec
push
lock
xchg
loope
xor
jl
jmp
pop
cmp
dec
lock
adc
cmp
mov
(bad)
or
lahf
(bad)
lea
or
mov
cmps
test
int3
outs
and
mov
lods
push
retf
add
dec
cwde
hlt
inc
dec
or
xor
cmp
push
add
adc
jg
lea
inc
cmp
sub
push
cmp
inc
pop
mov
fld
cmp
xor
jp
jmp
(bad)
or
push
cmp
mov
xor
adc
add
jecxz
icebp
sub
add
inc
xchg
dec
shl
pop
cmc
outs
xchg
clc
inc
repz
je
sub
mov
sub
jb
and
inc
jne
push
shl
inc
sbb
inc
movs
sub
pop
pop
jmp
gs
mov
sub
and
cwde
and
pushf
lea
xchg
mov
push
dec
adc
push
and
stc
pop
xor
push
dec
and
push
jg
fsubp
repz
outs
inc
or
jbe
jle
xor
cli
repz
es
jg
jg
jo
ins
mov
or
(bad)
and
repnz
push
pop
adc
sbb
and
xor
inc
leave
ret
movs
or
dec
xchg
adc
sub
test
pushf
dec
sub
mulps
shr
inc
adc
mov
jg
or
add
adc
icebp
adc
jp
mov
ja
sahf
add
sub
mov
retf
call
clc
sub
lock
movs
jmp
inc
and
add
xor
ss
(bad)
and
jmp
repnz
ret
inc
sbb
dec
or
inc
or
cld
(bad)
xor
mov
mov
adc
and
pop
and
xchg
outs
dec
jno
adc
xor
jge
cmp
les
ss
mov
es
cmp
push
jp
push
fidivr
retf
jb
mov
adc
shr
bound
pop
jnp
xchg
lahf
stos
pushf
ins
loopne
pop
cmp
pop
and
and
inc
arpl
push
inc
mov
cld
adc
imul
mov
cmp
push
shl
adc
mov
pop
stc
out
cmp
xor
cs
jl
xor
call
cld
inc
cmp
jb
or
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
inc
js
jbe
sub
mov
jmp
leave
push
sbb
clc
ret
xchg
(bad)
pop
shl
movs
enter
adc
push
enter
add
xor
inc
or
jb
in
or
add
or
enter
and
fadd
movs
add
cmp
or
pusha
cmps
(bad)
jg
push
inc
sub
iret
imul
or
jmp
adc
clc
push
int3
sbb
mov
mov
pusha
sub
mov
lock
rol
paddq
adc
test
les
dec
ja
sti
jmp
mov
mov
ins
cmp
or
cli
mov
xchg
pop
clc
loopne
leave
xor
call
pop
add
in
add
sbb
or
xor
mov
or
pop
int
add
aam
ds
inc
cs
sbb
sbb
mov
fisttp
jnp
xor
xchg
adc
dec
fcmovne
cmp
jge
movs
mov
add
adc
cwde
mov
push
mov
ins
inc
div
fs
outs
dec
jmp
pusha
dec
retf
pop
jo
enter
push
add
ror
xor
lea
xchg
push
adc
or
into
(bad)
adc
enter
fist
sar
push
out
or
xchg
mov
in
mov
mov
push
mov
cs
js
inc
daa
cld
mov
mov
add
test
push
sub
into
rcr
dec
and
pop
mov
pop
and
push
mov
or
adc
pop
inc
inc
xor
jg
pop
push
adc
inc
jmp
inc
pusha
and
xlat
or
mov
mov
fdivr
adc
stos
or
(bad)
call
jmp
add
je
mov
mov
imul
add
sub
inc
inc
cmp
loopne
mov
jl
jmp
(bad)
sbb
retf
mov
sti
dec
sub
in
mov
and
xor
bswap
cmp
in
je
adc
les
and
mov
pop
mov
lea
add
das
add
dec
and
sbb
dec
push
jbe
add
adc
and
adc
mov
pxor
or
es
lea
and
inc
push
pusha
jo
imul
leave
rol
adc
xchg
xchg
cmp
int
adc
loop
or
retf
sub
mov
test
loopne
or
cld
xor
push
loopne
(bad)
out
hlt
rep
imul
scas
(bad)
mov
sub
or
scas
push
and
pusha
stc
add
call
push
mov
mov
mov
(bad)
mov
pop
mov
cmps
fdivr
lock
cmp
jo
pusha
xor
aam
xchg
cmp
add
inc
jmp
clc
lock
sbb
mov
add
(bad)
pop
sub
(bad)
xchg
xor
inc
cs
xchg
mov
scas
sub
pop
popa
sbb
ret
in
dec
mov
xor
pushf
sbb
mov
fsubr
and
pop
ss
sub
mov
call
cmp
sbb
push
aad
stos
add
lock
sbb
mov
jne
xor
push
in
or
push
in
pop
xchg
jnp
shl
sahf
mov
cmp
outs
fst
push
adc
push
push
sbb
sbb
sub
inc
or
add
nop
sar
(bad)
cdq
stos
test
fs
mov
add
call
add
in
fcmovb
lea
inc
leave
gs
and
test
repnz
sub
rcr
mov
cmps
xchg
lock
test
mov
scas
ret
xchg
ret
je
test
sub
push
sbb
test
and
jg
inc
pop
fisub
jle
mov
test
je
mov
inc
push
add
les
inc
add
mov
mov
add
jmp
bound
xor
xchg
mov
cmp
ret
mov
fcom
add
fild
lea
jbe
inc
rcr
adc
adc
std
or
push
cmp
jne
rcr
cmp
mov
aaa
(bad)
push
ds
es
jne
call
cmp
or
cmp
es
cmp
mov
aas
push
jmp
adc
out
jns
(bad)
jmp
std
std
jmp
cld
addr16
inc
or
jmp
fimul
adc
adc
or
sbb
inc
add
dec
pop
sub
jmp
pop
stos
xor
xor
nop
sbb
je
mov
sub
cmp
add
pusha
sub
xchg
cmp
and
es
add
aaa
test
aas
test
cmp
pop
xchg
jne
push
cs
push
mov
and
xor
mov
into
inc
in
jne
adc
adc
add
mov
xor
adc
mov
dec
mov
in
and
mov
into
adc
sahf
retf
fidiv
adc
pop
inc
xchg
dec
in
pop
mov
movs
sbb
lods
mov
inc
test
xor
lea
and
ret
pusha
loop
xchg
mul
in
push
fmul
das
add
int3
sbb
mov
jp
xor
in
repnz
movs
sbb
and
or
and
adc
ds
sar
push
out
pushf
pop
out
cmc
jo
mov
jmp
sahf
inc
mov
or
adc
inc
inc
cmp
out
or
xor
out
push
or
loopne
mov
and
push
sbb
jg
popf
or
mov
int
sti
inc
repnz
push
inc
outs
push
adc
push
mov
mov
push
push
push
jp
add
sub
loopne
push
adc
mov
test
lea
aam
sbb
(bad)
dec
stc
fnstcw
mov
mov
and
lea
sbb
dec
fild
out
cmp
mov
sub
and
add
fnstenv
out
add
mov
in
adc
push
adc
call
or
lahf
push
js
shr
jl
push
rcl
push
lea
xor
pushf
and
inc
loope
sbb
push
inc
dec
fistp
mov
lods
mov
sbb
adc
dec
jae
cs
clc
aad
call
rcl
jmp
sbb
push
fdivr
shl
in
dec
fiadd
retf
loopne
pop
fisttp
pop
mov
mov
jnp
mov
adc
mov
mov
push
test
mov
and
je
add
leave
lods
adc
mov
jo
pop
cmc
rol
and
dec
xchg
or
sbb
rol
test
popa
aad
push
call
or
sub
lods
pop
mov
and
and
dec
push
mov
inc
jne
js
pop
aam
sub
clc
dec
sub
jne
movs
clc
adc
lds
lock
pusha
add
lahf
retf
ror
test
pusha
xor
pop
(bad)
dec
les
push
xchg
and
add
push
cmp
pop
lods
sbb
mov
adc
(bad)
xor
sub
mov
dec
stc
inc
loopne
mov
dec
fadd
inc
xor
jb
cwde
loope
lods
jno
pusha
mov
retf
xchg
and
pop
mov
pop
sub
mov
js
or
adc
leave
sar
je
jmp
stos
mov
adc
and
js
sbb
sbb
fiadd
(bad)
xchg
lahf
xor
adc
test
push
test
test
jnp
inc
adc
xchg
jne
addr16
inc
aas
pop
into
sbb
test
push
jle
add
stos
(bad)
not
mov
div
sar
and
in
pusha
add
icebp
and
cmp
push
or
dec
loope
loop
jle
ja
xchg
mov
bound
sbb
int3
dec
add
xor
pusha
xchg
in
nop
and
push
call
retf
(bad)
icebp
inc
adc
push
pop
cmp
push
pop
jno
aas
in
int
lahf
xchg
daa
mov
or
popa
push
dec
add
pop
test
add
nop
aam
and
pop
retf
mov
mov
cmp
ror
inc
xor
add
adc
sub
push
and
rcl
(bad)
movs
pop
xchg
cmp
adc
stos
and
scas
sbb
adc
(bad)
mov
test
or
push
test
jbe
or
outs
mov
add
or
add
(bad)
scas
jnp
fistp
dec
sub
dec
push
and
sub
ds
stos
push
add
or
sbb
jp
add
push
enter
xchg
push
fsubr
adc
out
inc
and
movhlps
inc
inc
inc
mov
rol
out
xchg
xor
fmul
add
jb
je
sub
cmp
shr
or
jmp
in
jne
xchg
xchg
sbb
rol
and
jb
mov
add
inc
mov
or
sbb
mov
je
or
and
shl
lods
pop
mov
cmp
int3
add
or
popa
movs
mov
sbb
cmp
sbb
rol
add
into
push
popf
pop
dec
push
pop
(bad)
push
sahf
inc
or
(bad)
retf
jo
lock
or
jne
lods
ret
dec
bound
fild
or
pop
mov
aas
fcom
or
test
and
ja
push
add
jmp
xor
push
xor
or
mov
pop
sbb
xchg
pop
add
(bad)
ins
mov
out
add
cs
pusha
jl
push
or
xchg
or
je
icebp
dec
add
jbe
hlt
rol
pusha
fcmovnb
test
pop
add
ss
mov
js
hlt
or
push
and
fistp
adc
adc
jb
dec
push
cmovo
add
pop
sbb
movsx
mov
sub
aaa
jl
inc
es
add
pop
dec
into
test
inc
push
push
add
(bad)
data16
mov
add
es
xor
inc
sub
sub
mov
div
cs
push
mov
add
test
std
ret
dec
loopne
test
xchg
loope
mov
adc
addr16
rol
es
(bad)
out
lds
fild
jne
(bad)
loop
popw
sbb
pop
add
xor
jae
mov
pop
sub
fcom
push
xchg
push
or
add
ror
adc
(bad)
ja
jnp
bound
lea
stos
mov
inc
out
inc
iret
xor
mov
jae
retf
add
add
sbb
jb
pop
push
daa
(bad)
scas
mov
scas
mov
repz
clc
adc
and
fwait
push
jmp
pop
pop
push
sbb
fst
addr16
sbb
push
push
sub
test
enter
add
inc
adc
push
pop
dec
adc
xchg
fbstp
inc
sahf
sub
xor
ins
imul
xchg
je
into
or
imul
push
dec
(bad)
popf
push
fs
dec
(bad)
mov
xchg
into
adc
push
push
inc
ret
adc
aaa
pop
add
add
pop
mov
mov
add
mov
lods
movs
fwait
rcl
sub
fnstenv
xchg
inc
xchg
or
add
and
test
or
rcr
mov
out
cmps
mov
adc
cmp
(bad)
or
add
jmp
xchg
push
enter
dec
lea
add
pop
add
and
or
ficomp
sub
cmps
push
rcl
rcl
bound
dec
xor
iret
movs
add
push
mov
mov
inc
inc
mov
test
(bad)
cmc
ss
cmp
pop
adc
xchg
lods
cmp
fild
sbb
nop
pusha
inc
adc
push
call
adc
inc
nop
enter
cmp
jl
(bad)
and
xor
mov
movs
dec
add
jmp
(bad)
xchg
sub
neg
ret
dec
or
bound
add
cld
jp
xchg
inc
and
push
aaa
sub
ds
mov
jne
adc
les
adc
push
cmps
or
je
and
mov
loop
push
mov
mov
lds
jbe
mov
sti
mov
shl
and
mov
pop
ret
jno
leave
or
xor
or
add
inc
or
dec
retf
xchg
std
inc
inc
repnz
sbb
cdq
and
pop
rcr
adc
and
shl
loopne
xchg
pushw
or
add
push
add
sub
ja
pop
adc
or
lods
gs
pushf
add
add
int3
or
jmp
and
add
test
xchg
aaa
lea
inc
mov
sar
retf
cmovs
leave
mov
iret
or
cmps
mov
mov
mov
sbb
pop
pop
and
punpckhwd
xor
cmp
(bad)
xchg
or
and
push
rcr
push
or
mov
inc
inc
mov
and
jmp
cmp
popa
sub
fistp
fdivr
or
and
retf
ret
test
push
bound
aam
loopne
je
xor
push
xchg
sub
jne
or
popa
loopne
test
jne
and
mov
hlt
xor
and
gs
ins
and
push
mov
je
pop
sub
pop
mov
pusha
jnp
int
movs
adc
or
push
fild
xchg
xor
push
or
es
xchg
mov
cmp
add
push
and
pop
push
adc
retf
inc
les
ret
dec
dec
cmp
pop
ja
or
and
push
jo
sahf
or
dec
sbb
jns
or
xchg
test
sbb
push
ret
jo
mov
or
xchg
sbb
sbb
retf
fsubr
inc
std
xor
clc
push
test
add
popa
lods
sbb
clc
icebp
jb
popa
in
outs
inc
push
movs
scas
xchg
jmp
or
sub
cmp
pop
js
mov
push
arpl
(bad)
fadd
push
add
adc
cld
cmp
xchg
(bad)
cs
ins
sbb
xchg
add
pushf
lea
and
and
stos
ficomp
or
push
pop
or
dec
adc
aad
sub
imul
fdiv
iret
call
add
cld
add
add
dec
inc
cwde
(bad)
(bad)
dec
adc
sub
inc
es
mov
mov
nop
sbb
jecxz
dec
jg
adc
mov
add
stc
dec
xchg
nop
mov
stos
push
jo
enter
repz
cs
shr
outs
fldcw
jne
rcl
cmp
scas
les
and
push
dec
inc
ins
movs
pop
dec
jne
jge
test
xor
ins
adc
or
push
pop
rol
inc
lock
and
push
push
stos
add
mov
loopne
pop
outs
mov
push
mov
shr
aad
(bad)
jbe
aad
add
jl
add
dec
call
shl
pop
add
(bad)
(bad)
sbb
adc
add
shl
pushf
add
(bad)
adc
mov
inc
ins
movs
out
lods
mov
lea
push
lods
dec
lods
inc
or
movs
dec
test
jo
imul
jo
mov
pop
pop
jae
fs
es
cmp
inc
mov
push
and
mov
adc
jae
adc
add
fmul
or
fdivrp
push
push
xchg
mov
clc
cmp
jg
jecxz
cs
xor
shl
ret
cmp
sub
neg
mov
loope
and
cmp
cmp
jl
and
xchg
mov
pop
dec
dec
jp
pop
pop
in
aas
je
mov
cmp
mov
jb
mov
cmp
add
jb
ret
adc
gs
jo
xchg
lds
shl
adc
ins
mov
mov
adc
cli
and
(bad)
in
popa
xchg
ins
div
pop
in
rol
sub
mov
daa
xchg
inc
retf
lds
mov
add
jb
popa
cmp
xor
retf
sahf
add
xor
outs
cmps
adc
cmp
add
xor
jae
nop
stos
jp
adc
xchg
or
ja
dec
xor
movs
sub
sbb
push
or
movs
inc
xchg
movs
add
jo
add
or
add
and
ins
inc
adc
mov
add
popf
inc
mov
retf
push
xchg
or
nop
inc
adc
or
scas
mov
test
pop
mov
jmp
add
xor
add
nop
mov
lods
je
add
or
jg
jmp
lods
mov
movs
loopne
inc
mov
das
jne
pop
push
xor
xor
xchg
push
jo
mov
pushf
push
(bad)
or
jbe
jmp
sub
jo
adc
call
and
adc
or
xchg
daa
adc
pushf
cmp
xchg
stc
sbb
sbb
inc
shl
add
dec
test
fs
adc
push
iret
sbb
jb
fadd
aad
xor
das
inc
fmul
int3
dec
inc
adc
inc
dec
shl
or
adc
outs
mov
inc
xor
lock
dec
shl
inc
inc
mul
in
call
dec
out
fld
mov
test
fxch
add
js
xor
mov
xor
call
or
sub
pop
add
cwde
fadd
enter
push
cmp
push
dec
fs
add
ss
adc
pop
in
pop
enter
scas
xor
fdiv
fsub
loope
adc
hlt
jp
sbb
lea
cmp
dec
sbb
clc
push
pusha
pop
sbb
(bad)
aad
cmp
test
js
mov
dec
or
mov
and
sub
add
pop
mov
rcl
outs
jbe
outs
cwde
mov
pop
shr
add
jmp
pop
ret
mov
lock
inc
out
mov
pop
aaa
loopne
pushf
mov
imul
call
xor
mov
push
adc
cmp
ret
ret
xor
mov
adc
add
push
and
lahf
movs
scas
push
push
push
fidiv
push
push
(bad)
into
rol
adc
dec
fst
loopne
stos
shl
ror
adc
outs
jo
nop
inc
fisttp
retf
jae
adc
inc
add
or
sbb
movs
adc
sar
adc
test
fcom
push
pop
add
adc
jecxz
xchg
dec
sub
inc
test
or
push
xor
push
inc
push
sbb
xor
imul
jno
mov
cmp
jl
cmp
jg
push
or
out
mov
les
sar
imul
inc
push
pop
mov
jge
add
sbb
dec
enter
push
cs
loop
shl
and
adc
dec
jp
adc
mov
and
add
loopne
pop
xor
fwait
addr16
xlat
xchg
adc
sbb
push
shl
sub
test
lea
cwde
cmps
je
adc
ds
mov
jnp
jmp
sbb
fistp
mov
adc
xchg
dec
enter
into
gs
sbb
call
and
shr
nop
push
cld
sub
ret
lea
stos
and
pusha
bound
add
lds
push
xor
adc
adc
and
inc
mov
jnp
in
pop
inc
and
nop
into
xlat
push
or
xchg
xor
ins
and
or
jo
xor
fbld
cs
and
and
leave
mov
aam
repnz
jecxz
mov
pushf
and
inc
outs
imul
sbb
dec
xor
(bad)
into
popa
push
mov
jns
or
sti
pop
es
sbb
or
setge
add
inc
dec
xchg
or
(bad)
xor
inc
xor
jecxz
adc
sbb
xchg
jb
adc
xlat
fbstp
jnp
xor
enter
mov
outs
in
sahf
nop
push
sbb
setb
adc
and
or
push
push
mov
push
lahf
push
sub
mov
int3
xor
nop
out
jb
ds
cmp
nop
mov
neg
sbb
pushf
or
out
push
or
jle
add
push
xor
push
mov
mov
adc
mov
or
xor
mov
out
sbb
jg
push
jle
jge
movs
ins
fwait
in
add
and
repnz
jle
mov
sbb
or
test
or
xchg
ss
ret
inc
jne
add
inc
jl
sbb
jmp
test
adc
ret
inc
sbb
scas
fsub
dec
shr
push
and
sbb
in
rcr
jle
js
jb
inc
push
fnsave
inc
dec
cmp
loop
inc
sbb
cdq
in
mov
xchg
adc
push
out
cmps
popa
sbb
fcomp
retf
call
inc
mov
repnz
ror
mov
aad
inc
xor
sbb
loop
and
sub
stos
sbb
mov
push
push
stos
push
xchg
xchg
cmc
jecxz
xor
clc
scas
lea
and
inc
mov
adc
sbb
push
mov
(bad)
push
and
push
out
push
push
hlt
fwait
jg
out
jae
mov
(bad)
or
repnz
push
mov
jl
or
inc
xchg
push
pop
idiv
mov
cli
and
ret
inc
add
outs
jmp
ss
or
push
sbb
imul
loop
outs
inc
or
adc
cmpps
xor
int3
outs
imul
retf
mov
test
inc
je
data16
ss
sbb
jl
fld
hlt
test
mov
mov
push
cmp
fsub
pop
cdq
cld
or
in
test
sbb
iret
std
push
mov
in
push
dec
inc
mov
ins
fs
retf
sub
adc
adc
movs
cmps
dec
movs
(bad)
push
jbe
adc
arpl
or
ss
dec
repnz
sbb
xor
sbb
sub
pop
rcr
sub
jns
jmp
and
psubw
mov
gs
adc
sbb
xchg
in
jns
or
call
cmp
adc
jae
xor
mov
ret
add
sar
push
sti
push
(bad)
cdq
push
mov
and
imul
add
ds
mov
aad
pop
sub
inc
or
fld
or
loop
pop
add
sbb
jmp
shl
cdq
mov
push
imul
ret
dec
pop
or
or
or
call
add
push
or
daa
jb
pop
cwde
jbe
icebp
push
push
in
sbb
mov
pop
cdq
fnstsw
imul
add
enter
ins
xor
dec
pop
imul
enter
mov
inc
jne
inc
aad
jp
cmp
sub
lods
retf
iret
(bad)
mov
call
sub
into
and
rcr
rcl
and
push
imul
xchg
add
add
push
jmp
add
or
and
sub
xor
adc
and
loop
jo
ret
and
inc
loopne
mov
retf
(bad)
inc
push
sbb
fild
push
js
inc
dec
pop
call
add
add
jl
pop
push
inc
adc
jl
and
nop
add
lods
iret
push
pop
mov
mov
add
push
pop
inc
xor
ins
mov
jne
clc
mov
mov
mov
cmp
test
or
or
or
jmp
xor
stc
or
inc
(bad)
loopne
xchg
loopne
add
ret
inc
loopne
xor
add
add
sub
rol
mov
fisttp
jmp
test
sbb
lods
jmp
cmc
into
jmp
xor
dec
mov
test
jmp
cmps
mov
jbe
mov
sbb
xor
cmp
call
cmp
jle
jle
cmp
push
xor
leave
and
push
jmp
dec
pop
lds
and
(bad)
stos
mov
inc
js
xchg
lods
shl
cmp
mov
lahf
add
add
sbb
jge
sbb
ret
ret
xor
pop
jge
(bad)
sti
sahf
xor
mov
inc
push
adc
jns
jne
dec
jae
imul
sbb
or
cmp
push
sub
fisubr
call
cmc
mov
dec
(bad)
sub
pop
push
sub
mov
or
mov
dec
cwde
adc
pop
xchg
push
and
jb
or
sub
mov
push
icebp
cmp
jbe
jo
test
mov
cmp
call
adc
mov
inc
nop
pop
into
adc
cmps
cmp
dec
js
xor
add
test
pusha
and
shr
mov
xor
mov
or
adc
cli
ret
and
dec
lock
adc
mov
or
jecxz
jge
imul
add
or
cwde
or
icebp
xor
sub
xor
xor
and
push
mov
jp
mov
inc
cmp
xchg
add
shl
mov
fcom
cmp
cmp
mov
or
cmp
pusha
iret
dec
cmp
mov
addr16
jle
push
add
data16
adc
push
lods
sar
add
pop
mov
or
inc
ret
je
mov
cmp
rcr
jb
mov
gs
rol
mov
or
mov
jle
out
aam
ins
jl
leave
mov
lds
push
xchg
clc
shl
and
jg
stc
and
adc
and
call
dec
cli
adc
(bad)
std
mov
pop
mov
or
sub
pop
inc
test
mov
enter
inc
addr16
or
repnz
sub
jl
and
or
cmp
call
or
mov
fmul
cwde
add
pop
test
ret
mov
leave
nop
adc
or
sbb
mov
mov
les
scas
retf
sbb
dec
nop
loopne
hlt
lods
jae
add
mov
push
push
mov
aaa
cld
loopne
ins
mov
jge
add
mov
sbb
adc
test
jg
add
adc
sahf
fcomp
sub
lock
gs
jmp
test
cs
jmp
and
pop
mov
jg
adc
dec
sub
mov
or
data16
in
mov
push
fcom
ins
mov
pop
shl
fnstcw
push
jnp
sahf
dec
sbb
jne
xchg
ror
data16
push
mov
xor
dec
push
push
adc
push
xor
ins
call
sbb
add
inc
inc
xchg
adc
dec
mov
in
jmp
and
ficomp
push
pop
clc
xor
iret
cmp
mov
sub
and
and
or
ins
dec
test
xchg
add
push
mov
add
or
test
jbe
retf
stc
inc
push
or
popf
pusha
mov
xchg
scas
repnz
movups
add
jae
call
inc
mov
add
mov
xchg
(bad)
mov
fistp
mov
dec
add
push
push
sti
sahf
out
xor
retf
push
jno
sahf
out
pop
fcmovnbe
jg
mov
and
test
and
sbb
std
xor
and
mov
pop
inc
add
cli
and
stc
add
adc
(bad)
(bad)
shl
or
outs
cld
and
xchg
retf
daa
or
add
sub
add
or
adc
pop
jecxz
imul
cmp
and
xor
inc
or
pop
sbb
mov
jbe
sub
mov
inc
dec
add
fld
or
xchg
mov
xchg
fcmovu
push
test
je
movs
dec
sbb
pop
push
arpl
sub
fwait
imul
inc
mov
xchg
fcom
cmc
inc
mov
and
pop
mov
mov
inc
pop
inc
mov
mov
aaa
fwait
jp
daa
pop
mov
mov
push
jp
cmp
(bad)
aaa
je
mov
push
xor
adc
sbb
sbb
inc
ins
sub
mov
outs
xchg
mov
mov
cmp
je
dec
pusha
call
xchg
(bad)
or
pop
je
pop
xlat
xlat
adc
mov
xor
adc
inc
jo
push
inc
add
adc
or
push
lock
pop
push
and
or
inc
icebp
fmul
push
ror
lea
pop
push
pop
jo
push
je
push
or
adc
or
adc
sbb
pop
sbb
add
add
xchg
dec
call
xchg
adc
push
mov
int
or
stc
xor
shl
sti
cld
std
(bad)
xchg
sbb
cld
inc
sub
sbb
clc
xor
xchg
mov
xor
add
mov
call
sar
xchg
in
shr
adc
add
(bad)
mov
inc
push
or
test
add
cmc
retf
add
fdivr
lahf
xor
call
fld
or
mov
push
sbb
xor
stos
push
mov
arpl
mul
push
in
mov
push
leave
mov
bnd
jmp
(bad)
push
dec
out
fld
add
fdiv
mov
jmp
das
mov
pop
sar
jmp
je
add
and
sbb
pop
jmp
pop
outs
sti
ins
xchg
loopne
ins
jmp
ficomp
pop
pop
fnstenv
div
jmp
ror
ret
add
xlat
pop
cmp
test
jno
mov
mov
retf
push
jns
mov
call
mov
sub
inc
pop
adc
call
push
mov
fmul
fst
push
mov
inc
aaa
adc
or
jne
and
mov
mov
iret
repz
cmp
push
test
cmp
repz
cmp
fsub
and
test
out
push
pusha
cmps
jo
in
dec
or
sub
mov
push
repz
js
arpl
jne
jecxz
iret
push
out
sbb
pop
push
mov
jns
cmp
jb
push
xchg
(bad)
push
out
jmp
inc
rcr
scas
pop
ud2
retf
scas
sbb
push
mov
or
jae
and
ret
and
push
push
adc
lds
adc
sbb
push
outs
sbb
rol
sbb
test
pop
xor
in
xchg
sbb
or
pop
push
iret
ret
xor
mov
sbb
pop
jo
xor
pop
xchg
inc
daa
sbb
xchg
cmp
jne
hlt
mov
or
pushf
inc
push
pop
mov
(bad)
pop
add
rcl
daa
hlt
fmul
cmc
int3
pop
inc
shl
sbb
inc
(bad)
mov
test
sbb
stc
(bad)
cmp
jp
sbb
bound
int3
inc
jmp
push
inc
push
xchg
dec
push
adc
iret
popa
mov
inc
cmp
cld
das
cli
inc
dec
retf
pop
je
push
push
push
ror
adc
sbb
mov
add
call
(bad)
pop
xor
or
dec
xor
dec
je
adc
js
sbb
lea
push
loop
adc
xchg
sub
xchg
(bad)
loope
or
add
adc
and
cmp
adc
mov
pop
add
and
inc
cmp
ficomp
mov
inc
and
mov
add
and
mov
je
inc
hlt
inc
aad
sti
and
or
and
mov
mov
scas
push
sub
dec
jmp
xor
in
xchg
dec
mov
retf
inc
push
push
sbb
and
inc
pop
je
pop
es
dec
mov
je
cmp
mov
int3
test
add
jmp
and
add
js
jo
xor
call
inc
js
fcom
mov
out
and
adc
leave
es
mov
or
test
cli
jb
popf
inc
repz
pop
add
adc
aas
lock
or
xchg
repz
add
adc
(bad)
icebp
pop
adc
int
inc
push
mov
mov
fstp
test
or
cmp
xchg
mov
hlt
cmp
icebp
add
xlat
mov
pop
adc
and
add
inc
cmovb
outs
add
jge
(bad)
and
imul
push
fistp
dec
push
aaa
test
test
call
jmp
test
inc
fmul
pop
sub
mov
sbb
rol
in
cmp
call
inc
not
cmps
(bad)
(bad)
jmp
cmp
je
add
pop
popa
jbe
add
or
jmp
push
push
adc
ja
and
je
cmp
cmp
out
fisubr
dec
cmps
cmp
adc
nop
push
push
mov
test
adc
pop
fsubrp
hlt
pop
cmp
cmp
dec
or
loop
and
push
data16
sahf
inc
xor
or
div
mov
xchg
pop
inc
(bad)
iret
fisttp
jg
pop
mov
cld
pop
and
lea
fild
pop
scas
jg
add
cmp
mov
cmps
lock
mov
dec
push
pop
movs
test
inc
sub
dec
shr
pusha
lahf
xchg
icebp
mov
les
jne
sahf
pusha
xor
psubb
in
inc
jae
push
dec
sbb
mov
push
mov
mov
or
ds
adc
lock
not
push
rcl
or
mov
jmp
loop
nop
inc
loopne
cmp
(bad)
jge
cmp
cmove
sub
aas
and
nop
call
sub
dec
xchg
hlt
sar
inc
jmp
add
sbb
enter
pop
cmp
sub
bound
cdq
or
cmp
add
in
jmp
cmps
inc
push
add
(bad)
fadd
test
ss
dec
test
jmp
add
xchg
inc
sub
add
int
or
inc
rol
test
adc
inc
pusha
jle
shld
call
sti
xor
div
test
jne
test
pop
mov
nop
add
adc
add
dec
pop
mov
mov
pop
inc
cmp
or
add
mov
pop
add
push
push
xchg
adc
adc
xchg
and
jnp
xor
rcr
and
test
leave
clc
jmp
jle
daa
(bad)
xchg
and
clc
cmp
aam
jmp
and
jg
je
and
inc
or
push
in
adc
or
mov
adc
popa
cmp
ja
xchg
lock
adc
add
imul
or
fs
pusha
sbb
mov
les
push
add
adc
push
sbb
pop
sbb
push
aas
rcl
or
mov
rol
dec
ret
jnp
clc
push
jns
xchg
jo
cmp
jmp
hlt
add
(bad)
in
je
adc
pop
or
dec
lds
mov
mov
loopne
cmp
pop
(bad)
popa
xbegin
or
ss
(bad)
xor
inc
cmp
idiv
lea
dec
jg
jp
call
(bad)
pop
mov
push
shl
or
adc
cwde
aas
mov
add
mov
and
or
push
adc
mov
push
inc
inc
data16
je
push
icebp
or
mov
jns
pop
push
xchg
je
cmp
shr
add
pop
and
add
or
inc
dec
sbb
cdq
push
jge
mov
and
adc
inc
xor
sub
dec
sbb
sbb
or
or
xor
or
pusha
inc
cmp
or
inc
and
add
and
cmps
sbb
or
sbb
push
add
pop
mov
in
push
inc
mov
add
pop
or
aam
(bad)
inc
inc
test
popf
mov
mov
rcr
xchg
into
or
ja
push
adc
(bad)
sbb
or
dec
jbe
fdiv
mov
pop
sub
fucompp
fadd
es
push
clc
(bad)
(bad)
xchg
rcl
dec
jne
(bad)
sbb
(bad)
inc
(bad)
push
and
adc
cmp
test
xor
sub
cmp
shr
add
out
mov
rcl
rol
adc
adc
dec
in
xchg
or
sub
pop
adc
or
test
push
je
and
jne
and
aaa
jo
jg
and
js
cmp
pop
cwde
rsqrtps
imul
mov
adc
jbe
ins
dec
lahf
popa
das
mov
jmp
add
xor
add
jg
enter
push
or
or
dec
inc
inc
imul
adc
loope
and
or
cmp
mov
dec
add
aaa
dec
add
xor
mov
push
add
inc
sbb
add
rep
les
cmps
pop
cs
shl
xchg
xchg
(bad)
adc
into
adc
jg
ins
and
dec
je
mov
nop
sub
jno
mov
xchg
cmp
retf
mov
fldenv
jmp
pop
int
fmul
loopne
pop
inc
or
js
add
test
aaa
xlat
test
adc
cmp
add
dec
push
cld
add
xchg
add
push
rol
jb
cwde
add
cwde
add
jmp
pop
cmps
jp
or
ja
mov
adc
push
and
xchg
cmp
dec
push
dec
mov
add
dec
aad
inc
loopne
ret
dec
push
(bad)
sahf
jbe
inc
inc
xlat
sbb
call
les
inc
jge
pop
or
pop
xor
jmp
push
stc
inc
pop
pop
xchg
push
adc
cmp
loopne
or
mov
inc
ret
jae
cmps
xor
call
adc
cmp
xor
movs
sbb
sahf
push
lods
xor
jl
sbb
js
or
dec
jg
dec
imul
popa
or
xchg
shrd
dec
jne
(bad)
movs
jmp
sub
fmul
cmp
ss
add
cmp
(bad)
mov
call
shr
pop
xor
jne
xor
lods
mov
inc
dec
and
or
and
fwait
fwait
inc
outs
je
js
ss
mov
lods
ror
call
pop
ret
mov
adc
jmp
iret
lock
imul
fadd
jmp
dec
sti
cmp
cmp
sub
or
mov
mov
sbb
sub
dec
enter
xchg
fimul
adc
cmp
adc
inc
sbb
sahf
or
mov
push
and
outs
js
xor
test
pop
push
jnp
in
pop
test
mov
push
sub
add
mov
mov
cmp
cmp
rcl
push
jne
ret
pop
shl
or
(bad)
push
fst
jl
sub
arpl
je
pop
cmp
jle
scas
adc
xor
cmp
add
add
pop
xor
fistp
mov
sub
ret
jmp
xchg
push
cmp
mov
fadd
add
mov
mov
bound
daa
xor
or
add
fwait
aam
lock
test
add
adc
call
inc
int3
fdiv
mov
add
cmps
adc
adc
pop
add
xor
jbe
cmp
pop
aad
aaa
nop
outs
test
push
pusha
pop
mov
repz
pop
imul
loopne
fimul
add
pop
enter
add
dec
rcl
add
mov
hlt
push
cdq
pop
test
and
push
pushf
and
loope
hlt
jmp
leave
add
push
add
mov
fdiv
mov
and
inc
xchg
mov
add
fimul
add
xor
popa
pusha
xor
and
push
hlt
ds
pusha
jg
jle
jmp
mov
jecxz
fisub
mov
jbe
jmp
sub
jl
mov
mov
clc
and
ins
adc
adc
(bad)
(bad)
mov
in
add
shl
stos
add
or
cli
repnz
test
cwde
loopne
inc
add
inc
rcr
jl
jmp
inc
punpckhbw
je
push
cwde
mov
ss
push
mov
aas
call
pop
and
pop
cld
and
data16
sub
clc
hlt
mov
punpckhwd
adc
adc
xchg
pop
mov
cld
adc
or
sbb
jo
pushf
mov
enter
sbb
mov
std
add
add
mov
pop
or
pop
mov
jno
add
sahf
push
fcos
(bad)
and
or
pop
inc
mov
mov
jmp
inc
cmp
adc
sbb
je
cmp
jbe
sub
mov
jmp
ret
cmp
ja
sub
lods
enter
fdivr
add
mov
add
mov
shl
shr
lea
jne
xchg
shl
mov
test
mov
nop
test
adc
pop
push
pop
mov
push
in
cmp
cmp
fmul
sub
adc
fmul
fnsave
jg
push
sti
js
inc
push
pop
or
arpl
loopne
sbb
jle
iret
je
mov
test
inc
xchg
(bad)
outs
or
movs
in
sti
jmp
jmp
push
pop
xor
sahf
pop
jg
inc
ins
hlt
add
enter
add
js
dec
rol
mov
movs
jecxz
dec
clc
push
cmp
mov
call
jb
cmp
dec
in
iret
push
ins
dec
mov
mov
sub
jne
jmp
add
(bad)
aam
sbb
fild
and
mov
or
mov
cwde
cmp
fidivr
clc
mov
jge
shld
add
push
mov
inc
add
ins
dec
shl
and
enter
mov
xor
sub
in
mov
cmp
push
imul
add
shl
jp
fisttp
fild
fdivr
inc
lea
cdq
add
adc
sbb
xchg
push
mov
push
call
add
stos
dec
sbb
adc
lods
dec
dec
add
mov
pop
add
and
pop
lahf
or
shr
sub
cmp
sub
add
es
adc
test
jmp
jg
add
fild
mov
pusha
in
mov
les
jne
cmp
pop
imul
lock
push
or
imul
mov
push
nop
fsubr
and
imul
shl
(bad)
lock
jb
scas
imul
inc
dec
test
sub
aaa
mov
add
and
loop
xchg
jo
xor
gs
inc
jmp
mov
mov
mov
and
cmp
add
js
cmp
cmps
nop
cmps
jne
popa
mov
xchg
inc
add
les
ds
in
lea
mov
dec
cmp
add
push
cmp
push
jne
lods
test
dec
sbb
cmp
inc
cmc
ret
cmp
push
pop
ins
mov
arpl
es
dec
mov
jmp
or
push
in
dec
sbb
ret
push
inc
mov
push
xchg
xor
leave
clc
(bad)
loopne
mov
inc
sub
test
mov
inc
dec
mov
jle
jne
outs
pushf
pop
cli
fdivr
push
mov
cwde
movs
repnz
mov
nop
repnz
inc
or
pushf
xor
ss
push
mov
mov
jecxz
add
or
aaa
xor
cmp
movs
and
ret
in
xchg
icebp
add
jns
cmps
push
lock
repz
ins
or
push
fxch
xchg
pop
cld
inc
cld
adc
add
dec
inc
mov
sbb
xchg
mov
lock
inc
sti
inc
sti
(bad)
jno
add
dec
add
and
jle
and
arpl
add
or
push
xchg
xchg
push
add
ds
cmp
mov
je
adc
(bad)
push
xor
stc
and
hlt
inc
add
test
pop
adc
adc
cld
pushf
adc
add
loopne
out
popf
or
test
(bad)
cmp
add
xor
and
and
sbb
mov
repz
push
pop
(bad)
(bad)
dec
arpl
cli
push
sub
rcpps
ret
push
pop
mov
int
retf
stc
sbb
imul
je
rol
cld
add
inc
enter
push
xchg
in
movs
sbb
pop
(bad)
out
in
lea
inc
mov
fwait
cld
xchg
mov
add
inc
icebp
aad
lods
cmp
mov
cmp
lods
(bad)
icebp
repz
ins
lock
fimul
add
and
iret
pop
push
call
add
xlat
leave
inc
cmp
push
in
aad
in
aaa
push
pop
jno
xchg
xor
and
sbb
imul
inc
mov
cli
push
hlt
push
movs
test
add
dec
int3
push
push
aam
jns
mov
push
ret
cld
mov
add
add
mov
jecxz
xor
mov
pusha
xor
popf
shl
scas
add
nop
add
(bad)
(bad)
jmp
xchg
xchg
call
icebp
jo
lods
dec
sti
iret
test
xchg
cmp
shl
cmp
push
jo
clc
enter
repz
sub
ror
mov
movs
stc
xor
inc
nop
nop
mov
mov
inc
sbb
mov
or
cld
add
push
sub
add
test
test
xor
mov
pop
cmp
dec
in
jmp
fs
cmp
inc
cmp
jo
rcr
dec
inc
or
clc
je
xchg
cmp
mov
jl
cld
repnz
sbb
inc
imul
ds
sbb
sbb
je
jecxz
push
jge
data16
or
jmp
test
icebp
push
hlt
sbb
movs
call
cld
cld
add
pop
push
into
mov
pop
mov
ret
inc
or
in
repz
add
outs
ret
mov
and
push
inc
repz
ret
inc
sbb
pushf
push
add
aas
push
cli
add
into
push
push
fnstsw
adc
push
or
dec
dec
lahf
jl
cmp
outs
jne
dec
xchg
add
fwait
add
movs
rol
xor
and
push
loopne
jne
sbb
cmp
push
jae
add
jne
push
add
pop
add
mov
xor
cmp
xchg
ret
loop
inc
jo
mov
lock
or
or
xor
pushf
sub
jmp
aam
jno
or
shl
and
jno
mov
inc
adc
inc
lock
lods
dec
cmp
or
xchg
and
mov
and
fs
add
sbb
add
hlt
cwde
or
sub
into
popa
test
add
cmp
hlt
(bad)
inc
imul
mov
pusha
sub
rcr
add
dec
std
push
inc
je
add
add
repz
pop
sbb
jae
pop
push
push
enter
jl
xchg
jne
pop
cmp
in
mov
push
scas
(bad)
mov
jmp
in
popa
dec
inc
rol
mov
pop
(bad)
adc
sub
xor
push
loope
int
mulps
daa
mov
or
in
mov
xor
in
add
sbb
mov
jmp
mov
sbb
pop
xor
xchg
cdq
sub
and
aaa
mov
dec
lea
mov
enter
jg
dec
or
mov
fucomip
adc
add
inc
adc
and
rol
or
mov
pop
sub
xor
fwait
(bad)
test
in
push
shl
inc
addr16
push
xchg
cmp
int3
push
aas
add
add
or
ins
loope
lea
and
sti
loop
pop
or
jmp
push
(bad)
test
inc
add
add
push
dec
add
pop
mov
daa
push
mov
mov
add
(bad)
out
test
dec
jnp
push
xchg
jmp
inc
pop
pop
jne
adc
(bad)
imul
cmp
sbb
mov
sar
push
call
mov
pop
push
repz
test
out
lea
daa
cmp
retf
mov
retf
lods
add
or
dec
sbb
push
mov
movs
arpl
add
fsub
add
jnp
lds
imul
pop
dec
imul
jb
repz
hlt
fcmovnb
daa
sub
or
das
push
aas
sub
test
enter
dec
gs
push
test
or
push
ret
or
adc
lods
sub
add
fadd
cli
jmp
xchg
out
inc
nop
mov
add
mov
push
leave
and
(bad)
pop
adc
adc
pop
jne
push
add
out
and
movs
cmp
cmp
and
jmp
shl
outs
adc
jg
xor
fdivr
clc
mov
movs
and
ficom
xor
jge
js
or
jmp
popa
mov
lods
retf
push
or
data16
sbb
adc
pop
movs
cmp
clc
sbb
ins
cmp
push
pusha
hlt
dec
add
loop
aad
add
retf
or
add
adc
sar
sub
test
mov
add
and
dec
bswap
(bad)
add
push
add
dec
jno
jecxz
(bad)
movs
repz
ja
movzx
imul
xlat
daa
sub
bndldx
jbe
iret
ja
cmp
clc
retf
push
add
xlat
add
cmp
cld
popa
add
popa
jecxz
xor
rol
mov
mov
imul
cmp
inc
fsub
and
inc
enter
ja
mov
or
push
pop
(bad)
dec
inc
or
pop
cmps
push
ins
add
pop
(bad)
jo
into
push
xchg
into
and
dec
std
sbb
mov
add
dec
sub
push
dec
retf
icebp
mov
mov
add
(bad)
iret
mov
paddsb
test
inc
xchg
push
add
xor
loopne
pop
sub
je
popa
cli
sti
sub
add
jge
dec
jb
(bad)
jmp
adc
ror
or
adc
and
and
ins
sbb
test
sub
add
sub
sti
outs
adc
int
mov
cmp
adc
retf
js
pop
jo
push
mov
xlat
mov
jmp
push
push
call
adc
mov
psubw
test
out
test
int3
daa
xor
jecxz
test
cld
add
add
mov
mov
jmp
sar
push
and
aas
rcl
ins
sbb
inc
push
imul
or
inc
aaa
dec
pop
dec
or
aaa
shl
jns
jge
cmps
clc
or
cdq
mov
ret
jne
(bad)
scas
push
mov
repnz
movs
and
or
add
sub
add
jmp
cmp
cmp
dec
pop
inc
add
es
cmp
jge
sub
pop
xor
ret
in
xchg
mov
repz
add
aam
pop
fld
sub
add
push
or
cmps
xor
movs
je
xchg
les
sub
arpl
hlt
jmp
and
das
stos
fld
in
imul
push
add
or
retf
aam
xor
or
cli
outs
adc
dec
add
inc
push
xchg
imul
inc
or
sbb
out
enter
push
cdq
push
sbb
sbb
push
in
and
push
xor
push
mov
adc
(bad)
xchg
cs
and
les
dec
push
mov
xor
and
mov
xor
call
sub
mov
mov
sbb
clc
inc
push
mov
ja
jo
jmp
das
and
les
pop
inc
pop
xlat
adc
xor
jge
add
dec
shr
addr16
sbb
aas
test
bound
test
jle
push
pop
xchg
ins
pop
add
nop
daa
fwait
ret
xor
push
and
nop
cdq
xor
shr
movs
dec
mov
add
addr16
pusha
dec
retf
xor
add
jl
clc
in
into
imul
adc
dec
loope
mov
test
push
ret
lds
jo
push
pop
lahf
or
add
jmp
adc
cmp
push
sbb
sti
retf
xchg
int3
push
dec
jmp
test
sbb
lock
adc
xor
aas
xchg
shl
shr
or
mov
pop
and
jmp
add
(bad)
nop
xchg
or
imul
rcl
inc
enter
fstp
sub
sub
hlt
jmp
sbb
fidiv
sub
aad
fidiv
adc
fwait
(bad)
out
(bad)
movntps
inc
jl
scas
cmp
or
or
das
mov
jae
out
ja
mov
inc
stos
test
inc
push
push
inc
popa
push
clc
adc
test
aas
movs
xchg
aam
push
dec
xor
push
sub
ror
call
or
sar
xor
xor
mov
pop
adc
test
push
add
jbe
cmps
and
dec
cmp
sub
inc
rcr
sub
xchg
data16
sbb
imul
cmp
inc
inc
call
dec
push
nop
out
dec
dec
push
dec
call
cmp
dec
out
call
cmp
xchg
data16
jo
imul
call
ret
jns
ds
in
cs
mov
add
jbe
das
mov
xchg
out
dec
mov
das
inc
jl
jb
cwde
sub
and
leave
aaa
movs
das
and
push
or
adc
or
data16
adc
pushf
push
test
xchg
mov
lds
jb
or
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
shl
leave
cmp
inc
and
in
in
inc
cmovs
add
in
pop
xchg
pushf
adc
xchg
pop
add
jo
pushf
pushf
pushf
je
jl
jnp
adc
sbb
and
dec
xor
xor
xchg
cwde
pushf
mov
movs
test
sub
sub
popa
jg
div
add
push
cmp
push
jecxz
add
daa
jne
inc
test
jmp
ror
sub
xchg
add
enter
scas
mov
xchg
repz
aam
or
sub
pop
gs
aaa
pop
adc
xor
mov
out
shld
pusha
jbe
cmp
mov
mov
fnstsw
jae
push
sbb
xchg
jae
jne
cmp
mov
sbb
lahf
cmps
xor
push
adc
popf
(bad)
jge
pop
mov
mov
push
nop
rep
push
movs
xlat
sbb
inc
pop
or
ror
dec
dec
scas
leave
clc
dec
cld
jne
inc
dec
mov
or
gs
fadd
ds
imul
sub
repz
int
dec
or
adc
das
mov
cmp
xor
push
les
dec
cmc
aam
mov
or
inc
aas
jmp
clc
xor
in
xor
cmp
sub
retf
pop
pop
mov
cmp
inc
xor
push
dec
mov
mov
jmp
mov
inc
sbb
pop
sub
rcl
fmul
xor
das
ins
push
rol
and
je
inc
push
sbb
or
mov
mov
mov
out
out
jge
adc
sbb
outs
movd
fiadd
ins
movs
cdq
nop
data16
sbb
cmp
sbb
js
lods
movs
cdq
nop
jl
add
mov
pusha
shr
inc
test
adc
in
or
loope
sbb
mov
popf
cmp
mov
mov
inc
loopne
jge
ret
je
clc
jle
push
jne
rol
xchg
xchg
bound
js
adc
es
cmp
rcl
adc
add
pop
or
sbb
movs
push
xor
test
nop
dec
sbb
sub
call
sub
jl
daa
sub
nop
mov
imul
es
das
push
or
jecxz
push
(bad)
mov
pusha
xchg
dec
or
add
xchg
ret
mov
sub
dec
test
lea
add
xchg
cwde
pop
inc
xchg
mov
ret
daa
cwde
jb
xor
test
and
add
mov
nop
xchg
xor
mov
mov
(bad)
hlt
fwait
pushf
xchg
mov
(bad)
inc
cdq
imul
pop
and
inc
ds
inc
mov
cmp
call
out
sbb
sbb
aam
jmp
not
and
hlt
cmp
jle
lods
xchg
rol
sub
sub
push
shr
arpl
dec
and
add
or
adc
retf
xchg
gs
add
hlt
xor
inc
dec
jnp
sub
imul
outs
pop
cmp
inc
pop
adc
push
and
mov
xchg
(bad)
rcr
inc
cmp
jns
push
fsub
sbb
dec
cmp
mov
inc
leave
pop
lods
sar
push
and
jno
xchg
mov
inc
jl
stc
pop
jle
dec
fdiv
shl
mov
and
add
mov
cmp
adc
js
add
data16
and
dec
mov
push
mov
add
in
shr
adc
out
adc
mov
or
dec
or
adc
add
retf
xchg
fadd
(bad)
sub
hlt
enter
and
or
add
icebp
cmc
push
adc
jo
cs
push
inc
jmp
mov
enter
sub
clc
adc
movs
xor
cs
sbb
aad
lds
rcpps
sbb
push
sbb
mov
(bad)
inc
and
adc
sub
je
imul
cmp
jb
jb
push
imul
or
outs
jbe
jne
fbstp
add
aam
js
push
into
add
xlat
in
push
jae
jle
jno
xchg
movs
add
jne
sbb
and
push
mov
adc
dec
and
inc
mov
add
inc
cli
add
pop
fcom
push
cmp
(bad)
fist
sbb
jmp
loopne
or
jnp
xor
daa
fimul
xchg
das
in
test
cmp
fwait
mov
add
cmp
xchg
inc
movs
jge
add
and
or
pop
shld
test
add
or
sub
sbb
sbb
sbb
sbb
push
out
push
(bad)
fadd
add
in
or
add
jmp
pop
add
dec
dec
ret
push
mov
jmp
and
or
mov
xor
pop
pop
cmp
leave
ret
xchg
cmp
pop
nop
adc
xor
popf
and
int3
mov
cmp
mov
dec
repnz
nop
lea
(bad)
cmps
or
stos
mov
inc
adc
adc
aad
into
push
cdq
(bad)
cmp
inc
popf
icebp
cmp
dec
pop
dec
dec
cmp
or
sti
jnp
pop
cmp
pop
jmp
or
jo
jl
push
sbb
lock
ins
pop
ds
xor
pop
dec
into
das
sub
cmps
rcl
les
xchg
or
jno
push
adc
test
retf
hlt
xor
(bad)
jge
out
push
int
jo
dec
rol
int
inc
sahf
mov
dec
cmp
rcl
loope
imul
imul
cmp
mov
jns
dec
data16
mov
pop
push
shr
movs
and
dec
inc
ins
rcr
mov
je
inc
fild
cmp
mov
push
scas
adc
cmp
add
loopne
sbb
add
adc
test
mov
inc
sub
sub
xchg
add
sbb
push
adc
push
mov
mov
and
inc
minps
lea
jb
push
inc
mov
aad
adc
or
pop
ds
sbb
adc
enter
sub
ret
mov
sbb
(bad)
jmp
mov
mov
mov
push
adc
leave
mov
mov
or
pop
fld
push
fstp
xchg
call
loop
sub
push
sbb
push
aad
mov
xchg
adc
test
pop
mov
cmp
pop
(bad)
push
cmp
enter
push
push
retf
cmp
aas
dec
xchg
out
out
fst
repnz
cmc
adc
inc
inc
xor
mov
stc
inc
mov
adc
and
pop
test
out
adc
push
xabort
mov
and
adc
fsub
adc
mov
clc
inc
mov
add
xlat
(bad)
jmp
xor
je
push
add
and
test
mov
jnp
shr
push
or
rol
pop
push
fbld
cmp
inc
rol
xchg
inc
ja
cs
repnz
sub
js
xchg
push
loop
pop
lock
inc
pop
out
jb
repnz
into
mov
xchg
test
sbb
into
adc
loope
mov
xchg
out
test
idiv
fdiv
add
out
retf
sahf
sbb
push
(bad)
dec
add
ins
mov
push
outs
xor
ja
iret
adc
test
out
xor
dec
pop
neg
test
repnz
out
retf
hlt
inc
sahf
mov
into
repnz
cmp
sar
cmps
repnz
cmp
dec
(bad)
mov
mov
sbb
inc
iret
(bad)
jp
enter
cmps
dec
adc
push
fistp
shl
loope
shr
in
push
jecxz
shr
cmp
arpl
in
jo
out
neg
or
retf
jb
int3
fimul
xlat
sar
xor
jmp
or
clc
(bad)
ss
mov
cli
aas
pushf
jbe
loop
jno
xlat
addr16
mov
loope
lahf
adc
add
add
sar
cdq
pop
cld
push
(bad)
cmc
loope
pop
shl
pop
movs
(bad)
scas
mov
inc
xor
rcr
adc
jg
fsub
adc
sub
or
xchg
xchg
sub
rcl
rol
retf
fstp
push
lea
push
leave
push
sar
mov
cmp
jmp
add
mov
inc
add
sbb
xchg
mov
push
les
imul
icebp
add
inc
lock
adc
(bad)
idiv
test
cmp
push
lock
lahf
clc
mov
jp
add
repnz
iret
add
(bad)
mov
jmp
mov
popf
pop
sub
mov
mov
cmp
fisttp
sbb
add
shl
rol
rol
mov
and
sub
add
fiadd
fcomp
stos
mov
jmp
int
leave
iret
cmp
stc
mov
icebp
in
std
rol
mov
mov
xchg
or
add
les
add
mov
add
add
adc
test
or
push
fld
or
test
add
in
add
pop
ret
stgi
add
cmp
mov
jmp
or
ficomp
shr
push
iret
cmp
in
inc
or
ret
add
push
mov
fild
out
jbe
loop
and
sub
cmp
inc
inc
inc
nop
mov
xlat
jo
dec
mov
aam
scas
and
scas
add
fldcw
add
push
pop
mov
mov
loope
loopne
retf
mov
jbe
add
retf
or
fldcw
test
fldcw
push
call
icebp
inc
add
cmp
or
fld
and
push
mov
aaa
(bad)
jbe
or
stos
or
fstp
outs
xchg
jl
clc
scas
cmp
pop
xchg
and
adc
mov
outs
cmp
pop
pop
ret
or
test
or
ds
sub
adc
call
repz
(bad)
cmps
jbe
push
outs
mov
je
and
(bad)
data16
pop
mov
jne
fistp
retf
sbb
enter
xchg
daa
fld
sub
fstp
mov
fcomp
inc
(bad)
sbb
or
push
je
repz
add
test
aam
mov
repnz
jo
push
add
js
push
cmp
xor
xor
mov
clc
loop
mov
sub
xor
and
push
sar
call
pop
xchg
xlat
ret
xchg
pop
stos
cdq
pop
xor
pop
sub
xlat
es
xlat
shl
add
dec
mov
repnz
mov
pop
(bad)
push
fadd
cmp
mov
mov
outs
fdiv
add
ret
and
call
xchg
cmp
popf
sbb
push
gs
daa
out
sbb
push
and
popf
lea
popa
add
ret
xchg
pop
fninit
fadd
xor
daa
std
push
mov
imul
shl
out
jl
sbb
enter
and
pop
je
sub
lock
loope
iret
loopne
vcvttss2si
mov
fprem1
out
adc
shl
scas
jmp
out
dec
xor
pop
test
fidiv
lods
div
sub
or
or
loop
and
bound
cmp
mov
(bad)
aaa
mov
sahf
lock
push
pushf
neg
pop
push
ret
mov
xor
outs
ror
in
inc
adc
add
cvtps2pi
inc
jae
leave
retf
jle
mov
pop
jecxz
mov
popf
pop
inc
pop
fistp
pop
mov
aam
aad
shl
cld
and
stc
xlat
cli
xchg
sbb
adc
pop
(bad)
loopne
fidiv
fst
iret
cli
jmp
(bad)
fmul
pop
int
ret
push
mov
(bad)
mov
xor
inc
cs
ror
dec
cs
movs
lods
out
ret
les
add
and
mov
les
cmp
cs
adc
inc
add
outs
and
push
(bad)
jb
xchg
jp
push
push
sub
xchg
retf
jnp
sbb
pop
nop
out
add
jns
xor
xchg
lods
es
cmp
icebp
fst
retf
push
mov
lahf
iret
mov
je
jne
mov
or
call
inc
and
xor
mov
mov
mov
imul
movs
sbb
mov
ret
fldcw
scas
ror
xchg
std
lods
mov
inc
jmp
das
and
add
add
sti
retf
ja
add
xor
or
retf
in
jmp
pop
add
rcl
sar
push
loopne
popf
jle
les
jbe
shl
lock
and
movs
cmp
add
lods
jl
lods
aaa
sub
(bad)
ror
push
push
or
pop
pop
push
mov
bound
mov
add
sbb
push
data16
fcom
dec
pop
fs
push
or
pop
rcr
xlat
or
movs
fmul
inc
mov
neg
ins
imul
add
out
hlt
jbe
mov
add
ins
sar
sar
lar
mov
mov
nop
mov
daa
dec
rol
cdq
(bad)
sub
or
or
sbb
pop
pop
pop
daa
in
push
sbb
or
fadd
mov
sub
in
jbe
outs
into
sub
jmp
nop
push
xor
xor
cmp
stos
adc
sub
or
jb
into
cmp
call
scas
sbb
es
out
push
xchg
stc
xor
aas
adc
dec
fdiv
jnp
fcmovu
scas
push
int
fdivr
adc
lds
stos
or
fstp
adc
jnp
ins
in
scas
mov
out
jno
or
xor
or
jnp
lea
fisubr
lea
pop
mov
nop
push
pop
retf
xchg
bound
(bad)
(bad)
cs
mov
out
xor
das
inc
retf
enter
retf
xor
or
mov
imul
movs
and
pusha
das
inc
retf
dec
push
in
retf
int3
retf
movs
cwde
sub
mov
jge
xor
das
inc
int3
es
jb
int3
int
push
int3
xchg
fdivr
movs
sub
xor
das
inc
int
add
sub
outs
cmp
rcl
jnp
jge
xor
das
inc
into
leave
sbb
and
mov
mov
movs
sbb
lods
mov
push
cmp
push
pop
call
xchg
mov
test
xor
push
jbe
je
fnstenv
dec
pop
inc
mov
or
outs
xlat
dec
movs
in
adc
xor
les
jb
xchg
or
xchg
imul
fisttp
add
or
(bad)
add
and
add
push
adc
or
and
enter
arpl
dec
sbb
sub
sti
add
loopne
push
mov
or
dec
or
or
sub
cmp
inc
adc
dec
in
dec
mov
and
mov
xor
stos
test
pop
lock
adc
das
sar
out
out
adc
sub
ja
xor
add
and
fldcw
sub
mov
ss
arpl
rol
mov
movs
pop
sbb
retf
ret
inc
adc
adc
fstp
jmp
cmp
add
jne
aaa
es
jo
cs
xor
mov
jmp
add
aas
aaa
adc
arpl
and
repnz
sub
sar
fdivr
or
push
inc
mov
in
fldpi
(bad)
adc
push
sbb
sub
jb
retf
push
xor
je
fchs
jmp
das
clc
rcr
sub
push
fnsave
push
add
mov
or
xchg
fst
xor
sbb
adc
inc
add
xor
and
or
fldcw
(bad)
mov
xor
xor
push
out
xor
test
xchg
je
dec
pop
xchg
xor
mov
(bad)
sbb
or
jns
inc
sahf
xchg
retf
and
loope
jns
sub
and
fwait
cmp
rcl
add
mov
jmp
jns
je
push
lock
adc
and
in
cmp
cmc
cmc
ror
cmp
add
dec
popf
xchg
test
add
push
and
add
sub
adc
jmp
xchg
sbb
cmp
lock
adc
jo
jge
sbb
cli
adc
add
adc
and
lock
sub
add
xor
add
adc
out
push
rol
adc
retf
inc
adc
sbb
push
sub
pop
fmul
push
into
imul
cvtdq2pd
dec
lock
cmp
movs
sti
mov
test
or
sbb
pop
and
(bad)
push
and
and
rcl
imul
sahf
pop
ret
test
mov
add
movs
push
out
fdivp
xor
mov
adc
call
fdiv
repz
push
push
int
rcl
cs
rol
ret
mov
jns
jnp
cli
rol
(bad)
cld
sbb
push
dec
scas
adc
pusha
xor
sahf
xor
cmp
inc
or
add
xlat
sub
pop
ds
mov
sub
cmp
mov
mov
out
(bad)
and
push
fld
daa
sar
mov
call
jmp
hlt
add
mov
jo
cmp
cmc
loope
sub
iret
icebp
or
rol
and
loope
and
sub
mov
add
jg
loope
cmp
ja
pop
loopne
xchg
pop
sbb
adc
popa
fsub
pop
push
js
add
retf
add
cwde
jo
mov
fiadd
cwde
aas
iret
cld
in
retf
or
pop
mov
mov
test
adc
(bad)
outs
adc
add
idiv
icebp
sub
cmp
not
lock
test
push
jo
mov
daa
mov
test
leave
pop
or
jmp
jecxz
push
test
pop
lods
pop
mov
fcmovnb
mov
jle
dec
adc
mov
cmps
mov
ficom
cmp
jo
jne
loopne
cmp
rol
sbb
mov
repz
pop
adc
cli
out
fisttp
out
repz
js
test
mov
ret
jns
ror
loope
addr16
mov
sbb
ret
pop
(bad)
jge
cmp
push
or
pop
mov
test
mov
xchg
mov
rol
jb
pop
xlat
daa
jo
or
ja
jl
fwait
or
add
mov
cli
clc
cmovle
add
or
call
aad
loopne
or
addr16
inc
fsub
lock
xor
in
pop
push
les
je
cwde
adc
add
add
xor
ds
mov
ja
jne
mov
test
(bad)
cmp
sar
sbb
or
and
(bad)
push
rcl
mov
push
cmp
out
xor
sbb
cmp
fsub
retf
leave
outs
or
aaa
and
mov
add
sub
stos
cmp
pop
and
rol
add
jne
mov
cld
inc
xor
int
push
sbb
jo
add
in
ins
or
cmp
jbe
ins
retf
xchg
aaa
sub
aaa
cmp
push
in
adc
mov
mov
push
or
stc
jnp
enter
out
or
sbb
mov
xchg
mov
sbb
and
push
ds
loop
lock
sti
push
jae
jg
mov
aaa
dec
lock
push
faddp
add
jmp
or
lahf
inc
loopne
fild
add
xor
daa
jae
in
jo
int3
lock
rol
cmp
arpl
dec
mov
popa
xor
int
and
cmp
(bad)
sbb
jb
pop
ja
imul
cwde
adc
int3
adc
pop
jmp
fld
rol
ss
dec
adc
jg
inc
cmp
mov
mov
es
add
dec
mov
add
mov
inc
cmp
add
rol
mov
sub
(bad)
dec
aas
adc
lods
and
ror
pop
shl
add
lods
mov
loopne
add
pop
add
cmps
imul
mov
add
repz
adc
ss
inc
sbb
mov
stos
(bad)
test
pop
mov
loop
mov
dec
pop
popa
iret
bnd
pop
mov
lahf
cmps
xor
mov
adc
dec
mov
mov
(bad)
std
mov
std
xor
mov
shr
out
dec
stos
inc
inc
je
(bad)
or
pop
test
sbb
sbb
and
loope
out
and
xor
sub
cmp
pop
mov
rcl
sub
imul
sbb
sbb
cmp
scas
test
inc
in
jne
shl
or
xor
ficom
push
les
test
xchg
sbb
xchg
icebp
pop
jge
ret
std
xchg
jmp
ins
sbb
sub
adc
mov
aad
loope
lahf
cmp
or
ds
ret
mov
in
js
add
inc
in
fwait
loope
jne
sub
ret
inc
popa
cmp
cmp
push
pop
in
jmp
sbb
cmp
in
mov
push
sub
dec
loopne
xchg
sub
cs
jmp
push
jo
ja
or
jb
xchg
add
lea
cmp
cmps
popf
push
mov
push
dec
sbb
push
fisttp
add
daa
jbe
frstpm(287
sbb
lock
xor
sbb
fmul
bound
xchg
mov
xchg
or
or
jge
frstor
push
push
je
xchg
pop
lahf
push
or
dec
loope
mov
dec
pop
scas
and
es
xor
jl
push
pop
clc
dec
clc
gs
or
or
push
or
pusha
addr16
test
or
pop
pusha
or
or
jle
cmp
xor
jg
push
jmp
jecxz
es
fcmovu
fxch
mov
pop
outs
adc
mov
js
jne
jno
adc
inc
or
and
xor
mov
xchg
ins
daa
xor
movs
adc
pop
inc
ja
sub
sbb
and
or
jne
test
fcomp
bound
je
and
out
pop
push
pusha
adc
ret
ins
sbb
pop
adc
js
push
add
jne
not
cdq
jne
xor
or
mov
rcr
mov
add
test
lock
lods
inc
mov
out
mov
fcom
mov
mov
xchg
lock
and
adc
add
jge
sub
xor
and
int3
aaa
and
mov
adc
hlt
push
mov
xchg
or
popf
mov
pop
je
and
push
rol
(bad)
pop
int3
pop
jo
mov
retf
pop
push
push
cmovge
(bad)
mov
pop
mov
dec
or
adc
gs
xor
rcl
outs
fucomi
test
add
or
adc
out
gs
pusha
pop
push
test
sbb
adc
mov
dec
xor
std
pop
aam
scas
or
sub
jo
into
mov
cmp
sub
cmp
pop
add
js
ror
not
push
aam
push
sahf
or
adc
xor
iret
adc
pop
add
bound
dec
push
pop
jge
add
test
and
nop
retf
xor
add
or
adc
rol
and
xor
mov
xor
and
shr
push
mov
cdq
in
cmps
and
and
pusha
test
push
cmp
ret
mov
test
adc
test
lea
ret
add
and
cmp
rcl
int3
xor
daa
je
or
or
dec
pusha
mov
jne
mov
push
clc
jb
outs
mov
sbb
lock
ja
frstor
cld
mov
and
aaa
outs
sbb
sbb
je
xchg
jmp
test
imul
inc
sub
push
or
xor
sub
out
and
inc
and
or
jb
pop
adc
cli
mov
pusha
pusha
loope
pop
sub
cdq
push
mov
dec
and
adc
out
and
fnstsw
pusha
pusha
(bad)
movs
cmp
push
add
cmps
gs
mov
(bad)
adc
sti
mov
test
fbstp
loopne
popa
mov
(bad)
cmp
mov
dec
jne
or
adc
xchg
sar
xor
sub
pop
test
inc
or
add
xchg
or
inc
jb
es
dec
jnp
and
inc
add
adc
(bad)
xor
pop
fld
addr16
push
push
add
out
and
xchg
jo
or
sub
add
imul
mov
or
cmovns
sbb
js
jne
js
xor
popa
imul
sti
jnp
add
jp
fwait
ror
push
inc
xchg
xchg
loope
les
push
aaa
stos
mov
sahf
sbb
mov
sbb
dec
add
mov
sti
jnp
jmp
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
xchg
imul
push
xor
jl
sbb
pop
jnp
mov
or
jmp
in
adc
into
retf
or
pop
outs
jge
fidivr
jl
scas
jmp
loop
ins
adc
xchg
cld
imul
jp
imul
jmp
fisubr
movs
jp
ins
lock
xor
pop
cmp
rcr
mov
cmp
mov
push
cwde
ins
pop
xor
pop
pop
sub
out
gs
std
mov
and
dec
test
push
stc
and
and
fs
retf
loope
retf
scas
or
jnp
jg
mov
pop
or
hlt
mov
jp
push
push
xor
adc
mov
test
out
adc
add
cmp
fisttp
fwait
mov
out
sbb
mov
adc
push
sar
xchg
adc
and
in
repz
movs
cld
ins
adc
and
adc
into
cmp
jne
pop
(bad)
hlt
ret
movs
add
mov
popa
test
mov
mov
lea
or
mov
mov
and
or
imul
sbb
test
and
mov
pop
pop
stos
test
rcr
mov
sub
(bad)
adc
cmp
arpl
add
xor
add
adc
and
push
fistp
and
pop
mov
out
ins
or
jp
and
or
pop
test
addr16
add
loope
mov
or
movs
push
sbb
or
pop
mov
inc
jns
or
xor
data16
mul
mov
and
dec
adc
or
in
int3
pop
shl
mov
jecxz
push
and
outs
add
dec
sub
push
xchg
sub
add
push
sub
and
xchg
sub
aas
xchg
and
fnstsw
movsx
adc
mov
cs
loop
mul
add
(bad)
adc
or
or
nop
pusha
test
ins
or
sbb
xchg
or
sub
sbb
loopne
inc
cmps
(bad)
adc
and
sub
movs
or
lods
ja
adc
dec
or
jle
fstp
sbb
push
mov
add
jmp
pop
add
fld
inc
cmp
mov
sbb
cmp
push
scas
push
push
sbb
sahf
mov
push
int
mov
cmp
inc
aas
add
out
pop
add
add
and
popa
aad
pop
(bad)
int3
test
les
xor
jbe
call
or
mov
pop
lods
or
adc
or
dec
cmp
adc
xchg
pop
and
add
xlat
test
ins
or
ja
xchg
add
rol
add
push
sar
inc
push
leave
push
xchg
cmp
mov
jp
aaa
loopne
movs
pop
sub
or
inc
add
scas
inc
xor
cmps
inc
mov
sub
int
jmp
repz
dec
and
adc
add
loope
gs
sbb
inc
call
fimul
icebp
add
outs
push
clc
mov
loopne
loop
xor
cmp
xchg
sbb
mov
jns
dec
fadd
add
adc
xor
inc
dec
iret
jne
aam
add
add
(bad)
lahf
mov
sbb
xlat
xor
adc
fimul
sbb
es
adc
jge
mov
jge
cmp
or
ret
stc
cld
sbb
jae
mov
add
in
add
dec
sbb
or
sbb
or
or
jno
jae
(bad)
ins
add
loopne
push
dec
mov
ret
jne
je
sub
test
mov
mov
ds
je
mov
ror
dec
push
movs
cmp
jbe
inc
add
frstor
jmp
pop
sbb
jae
popa
inc
xchg
les
mov
jns
(bad)
mov
jo
jbe
cmp
js
jmp
fwait
mov
lods
push
or
pop
add
mov
ror
inc
shl
jl
repz
sbb
mov
in
shl
pop
test
loopne
or
xor
push
test
or
fsubr
sbb
add
push
in
add
sbb
jnp
inc
add
xchg
imul
cmp
test
je
test
mov
xor
mov
aam
clc
pop
loop
adc
push
dec
push
dec
fcom
dec
inc
movq
or
scas
cmps
or
sbb
es
dec
enter
lods
add
jecxz
adc
push
hlt
cmps
sbb
sbb
dec
xchg
push
es
inc
sbb
clc
dec
adc
sbb
nop
and
jge
lea
adc
fcom
pop
push
sbb
enter
cs
imul
int3
test
adc
mov
sbb
pop
xchg
and
shl
sbb
cmp
popa
push
inc
mov
mov
inc
retf
push
lock
shr
pop
dec
lods
lea
sbb
test
sub
dec
call
fisub
jb
cmc
das
shr
mov
cmp
jb
pusha
retf
lds
in
xchg
loope
mov
sub
js
cmp
push
or
fs
xor
test
pop
int3
retf
mov
xchg
sub
push
mov
jmp
pop
sar
leave
xor
and
clc
cli
xchg
ror
hlt
push
in
and
jbe
je
cmps
cmp
push
sbb
sahf
cmp
jb
shl
cld
cmp
jb
mov
fadd
inc
dec
mov
adc
jb
nop
adc
and
add
jae
jno
jl
sbb
sahf
cmps
mov
jbe
jl
ins
(bad)
aad
push
clc
cmp
jb
sbb
mov
and
add
loopne
js
lock
mov
or
in
sub
xlat
pop
ds
out
push
mov
adc
or
dec
jl
daa
mov
sub
jle
icebp
dec
fist
sub
push
clc
add
xor
lods
sbb
push
mov
outs
sti
add
mov
add
inc
loopne
loopne
add
movs
or
cmp
sti
mov
pop
call
add
jge
jo
imul
lahf
add
adc
pusha
sar
jg
retf
outs
in
lds
add
xchg
cli
xchg
inc
mov
cmp
(bad)
mov
stos
sbb
push
xor
in
dec
pop
dec
adc
cmps
lea
mov
jl
mov
leave
and
inc
in
cmp
clc
add
xchg
in
cld
je
cmp
and
jge
push
je
dec
inc
mov
adc
test
loope
adc
push
popf
push
sub
push
sub
cmp
pop
imul
test
jl
jmp
out
loopne
(bad)
out
daa
je
adc
pop
cmp
or
inc
dec
xchg
jbe
repnz
outs
mov
add
les
sbb
mov
sub
pop
xchg
add
xlat
adc
jbe
jmp
adc
sub
mov
clc
loopne
xor
push
lahf
sub
gs
or
cwde
out
adc
pop
and
push
jo
lods
pop
dec
icebp
leave
pop
bound
adc
jne
mov
dec
sbb
inc
jle
in
mov
scas
add
jmp
retf
cmp
imul
cmova
dec
sbb
jl
ret
and
xchg
test
call
push
jle
xor
cmp
cld
jb
gs
inc
mov
add
push
add
mov
int
jae
push
cld
test
cmp
pop
not
mov
outs
cmp
xor
xor
jb
adc
adc
ret
push
jecxz
iret
sub
es
add
push
pop
xchg
add
mov
and
xchg
inc
and
mov
out
and
dec
mov
push
mov
cld
sbb
fdiv
sub
add
ds
mov
push
and
pusha
and
jmp
pop
lods
mov
and
inc
push
add
pop
push
xchg
sar
cdq
je
shl
shl
cmp
mov
inc
push
cmp
pop
mov
pop
add
mov
inc
sub
nop
lds
cdq
ins
ret
outs
xor
dec
or
das
sub
aaa
or
or
add
add
mov
mov
or
mov
inc
and
movs
xor
xchg
in
cmp
and
hlt
add
or
cwde
cmp
add
mov
mov
sub
mov
es
xor
cwde
jne
or
aaa
xor
xchg
adc
cs
inc
cmp
add
pop
push
loopne
inc
std
sbb
inc
adc
cmps
jp
and
pop
ret
or
pop
push
nop
add
pop
xor
push
adc
xor
pop
ficom
push
sbb
cmovno
dec
pop
mov
pop
cdq
dec
xor
and
mov
daa
clc
inc
push
xchg
push
mov
adc
fadd
out
adc
cmps
adc
xchg
out
mov
cs
jmp
or
std
nop
sbb
scas
mov
cmps
push
sub
dec
push
push
(bad)
and
or
jno
mov
popa
or
cmp
dec
push
enter
icebp
(bad)
sbb
stos
sbb
es
in
iret
dec
inc
and
jecxz
sbb
aas
pop
cmc
and
movs
or
add
and
or
ds
(bad)
mov
pop
leave
inc
enter
bound
pop
inc
jmp
adc
sbb
adc
popa
leave
scas
push
adc
sbb
push
fiadd
cmps
cmp
mov
dec
sub
sahf
lods
mov
mov
adc
xchg
or
popa
and
push
sbb
sub
adc
add
add
or
mov
(bad)
enter
pop
and
add
xor
(bad)
and
adc
push
mov
test
dec
repnz
or
inc
or
pop
call
fimul
adc
jmp
pusha
bound
ss
or
dec
and
and
call
xchg
dec
dec
xor
xchg
sub
ret
sbb
pop
xchg
lods
cmp
inc
inc
js
inc
inc
push
movs
and
nop
ja
ds
mov
jle
jno
or
retf
adc
xor
dec
cmp
fstp
sbb
jl
xor
lock
add
je
(bad)
in
jb
push
xor
jmp
data16
ins
pop
push
icebp
push
popa
sub
sar
mov
mov
push
cmp
cli
sub
shr
mov
int
int3
xchg
adc
and
fdivr
fnstcw
add
or
add
je
cmp
in
and
(bad)
jg
adc
and
inc
jo
pop
xor
jmp
dec
add
add
stc
cs
clc
loopne
or
or
into
imul
pop
inc
xchg
clc
jg
fld
rol
jmp
or
add
test
pop
je
mov
and
ins
mov
sub
stc
pop
pop
(bad)
fcmovb
adc
cmp
pushf
aam
retf
mov
dec
adc
mov
mov
sbb
data16
pop
mov
sub
add
pop
test
jae
cmp
push
add
dec
xchg
add
or
dec
adc
add
add
dec
add
sbb
dec
test
xor
mov
add
and
movs
rcr
xchg
adc
sbb
push
dec
jns
or
sbb
jmp
int
lods
rcl
jmp
jmp
sub
dec
xor
and
mul
push
or
lock
push
ds
je
or
and
and
jmp
sar
js
inc
je
pop
(bad)
add
rol
jno
xor
inc
inc
pushf
ror
xor
adc
or
dec
or
scas
push
pop
shl
rol
bound
icebp
movzx
pushf
pop
sub
pusha
popf
loopne
shr
mov
outs
mov
and
or
pop
pop
and
or
or
sahf
adc
dec
pop
gs
and
push
add
inc
add
out
inc
sub
add
dec
or
sbb
xor
xchg
shl
cmc
sbb
fsub
add
xor
push
test
out
test
dec
aad
fadd
pop
sub
js
add
js
(bad)
sbb
dec
adc
pop
std
ins
loope
lods
or
dec
and
mov
and
fcompp
(bad)
(bad)
pop
cmp
lods
xchg
dec
inc
das
(bad)
je
sub
test
je
ror
ret
mov
mov
(bad)
xor
loope
es
mov
shr
sub
push
push
popf
ja
scas
sbb
int3
dec
sbb
outs
sbb
inc
mov
or
out
xor
call
repnz
pop
arpl
xor
or
jle
adc
in
mov
inc
push
dec
sub
or
pop
inc
loopne
or
mov
fsubr
pop
pop
jmp
pop
push
inc
mov
mov
and
add
mov
outs
dec
mov
(bad)
repnz
add
inc
pop
and
mov
adc
adc
rol
pop
lods
add
add
add
sub
jl
cmp
xor
out
xchg
adc
(bad)
test
daa
inc
outs
and
lods
fistp
imul
add
push
popa
pop
inc
jne
add
test
add
scas
lock
add
sub
xor
pusha
add
xchg
and
mov
and
sub
adc
jb
xchg
pop
jmp
pusha
das
pusha
cdq
inc
sub
xor
jo
mov
and
shl
mov
loop
enter
sbb
xchg
cmc
jecxz
and
or
jnp
hlt
inc
push
lods
popf
ror
jmp
int3
and
jne
push
push
push
push
pusha
aaa
mov
sbb
loopne
push
and
inc
ret
xlat
jecxz
xchg
retf
mov
sbb
adc
pop
push
(bad)
mov
dec
popa
mov
mov
jg
loop
mov
into
es
mov
je
jmp
int
and
mov
cmp
nop
loope
std
ja
add
cmp
adc
(bad)
cmp
mov
adc
mov
icebp
ss
mov
sbb
ret
les
clc
xor
pop
dec
cmp
mov
jne
mov
loopne
enter
sbb
push
lods
aaa
or
ja
push
call
add
dec
cmp
cmp
or
stos
add
jne
or
mov
push
jbe
js
or
push
push
sbb
nop
dec
push
add
add
or
cmp
jne
mov
add
add
and
inc
or
aaa
sbb
jmp
repnz
push
cmp
sub
sti
add
add
xchg
fstp
movs
push
fstp
pop
test
cmp
jl
bound
cli
fstp
in
mov
dec
sub
mov
ds
and
lods
inc
push
push
dec
push
add
sbb
adc
pop
dec
pusha
push
mov
sbb
jl
push
call
xchg
movs
push
cmc
sahf
test
adc
and
rol
shr
push
push
or
repz
pop
(bad)
jmp
rcr
mov
out
mov
sub
loopne
jo
into
adc
inc
mov
dec
sub
xor
inc
les
(bad)
jmp
ret
std
out
call
jb
cmp
sub
and
inc
jae
dec
loop
mov
jecxz
jns
mov
jecxz
je
enter
outs
adc
sub
add
or
push
ja
enter
fiadd
add
fsubr
rol
cmp
dec
dec
stos
inc
and
ret
or
movnti
push
aam
xor
cmp
ror
nop
mov
and
mul
sub
mov
push
cld
not
mov
outs
ret
adc
sbb
xchg
or
movs
mov
out
retf
push
pop
jl
and
cli
inc
or
or
and
sub
call
xchg
mov
push
mov
adc
jge
popa
mov
in
and
iret
int3
mov
hlt
test
and
and
xchg
push
xor
and
xlat
inc
push
lea
cli
mov
cli
xor
fs
push
pop
adc
push
xor
pop
inc
dec
sub
jbe
dec
jns
nop
inc
inc
sub
adc
inc
mov
jecxz
inc
add
ins
cmp
loope
jmp
mov
imul
push
mov
dec
call
jo
inc
jge
pop
and
mov
out
cli
adc
loopne
fwait
pusha
sub
push
out
and
inc
test
nop
data16
pop
jge
adc
lea
ror
mov
mov
xchg
inc
dec
or
adc
mov
or
into
xchg
loop
in
xor
sbb
lahf
mov
inc
cs
add
hlt
pop
add
hlt
add
push
and
or
sbb
push
xchg
add
lahf
scas
mov
add
cld
add
push
pop
ret
iret
push
out
enter
arpl
add
movs
add
mov
adc
pop
test
das
mov
pop
cmps
adc
push
aam
rcr
repz
xchg
inc
cmp
aaa
mov
fcmove
fcmovb
and
out
pop
xor
lds
retf
fs
add
or
or
lods
inc
out
int3
push
data16
sub
or
inc
imul
sbb
pop
fnstcw
dec
adc
push
je
inc
pop
int3
inc
icebp
nop
or
lods
idiv
sub
fnstcw
inc
test
lods
adc
add
shl
test
cli
mov
clc
add
fimul
lock
adc
nop
or
js
adc
add
or
aas
xor
or
outs
add
stc
xchg
adc
inc
test
mov
jbe
das
pushf
adc
ins
or
inc
or
sub
or
es
cmp
xor
loope
not
or
jle
iret
shl
sbb
aad
mov
xlat
in
pusha
adc
aas
sbb
xchg
sub
or
test
pushf
rol
pop
dec
inc
pop
mov
pop
dec
and
cmp
add
bound
clc
dec
jne
rol
cpuid
popf
sbb
adc
sbb
repnz
dec
out
jp
push
rcr
push
movzx
fiadd
inc
add
test
mov
aam
into
mov
push
mov
adc
sub
mov
pop
adc
mov
ds
add
fnstenv
int3
add
mov
jmp
xor
xor
sub
shr
xchg
clc
or
arpl
xchg
inc
loopne
sub
and
sub
dec
mov
push
daa
adc
xchg
or
fs
shl
test
rcr
test
aaa
pop
call
xchg
pop
retf
stos
lock
js
inc
xchg
aas
and
push
lods
shl
and
add
popf
mov
aam
pop
scas
retf
movs
jo
mov
movups
jg
movs
jb
pop
ret
mov
cli
dec
mov
ss
sti
js
jg
movs
movs
test
xchg
(bad)
xchg
fwait
(bad)
pop
ja
jmp
rol
add
pop
repnz
sbb
fnsave
mov
in
jae
push
ret
lods
mov
scas
push
ret
jno
inc
adc
pusha
sbb
cdq
outs
in
push
sub
hlt
jne
mov
pop
pop
mov
push
and
imul
call
fnstcw
aad
dec
mov
pop
sbb
sub
jge
ret
push
aad
push
adc
add
mov
inc
jl
adc
outs
inc
xor
pop
lods
sub
out
cmp
mov
push
add
add
mov
or
mov
push
inc
inc
and
adc
mov
jmp
sub
popa
add
and
and
js
sbb
pop
or
retf
ret
adc
out
or
and
out
push
push
mov
push
mov
sti
adc
inc
sbb
add
mov
sbb
and
jp
mov
pop
cmp
xor
xor
sbb
jne
(bad)
ins
add
fs
in
inc
push
sbb
pcmpeqb
and
fbstp
or
ins
xchg
fs
(bad)
mov
add
push
inc
pop
cwde
pop
and
ins
push
cdq
push
pusha
jmp
popa
and
inc
pop
mov
xor
or
nop
add
xor
sub
mov
leave
rol
fs
push
jmp
push
dec
cwde
xchg
xchg
adc
pop
call
add
sub
mov
pop
jge
sub
iret
cmp
or
pop
cli
or
jb
inc
add
out
dec
(bad)
xor
xor
pushf
imul
ror
retf
sbb
lock
int3
loopne
add
jnp
pop
int3
or
mov
test
fdivr
in
clc
sbb
or
mov
test
push
xchg
inc
adc
add
push
inc
mov
or
fidivr
test
inc
sub
mov
xchg
out
jge
dec
push
add
mov
inc
push
jmp
push
rcr
dec
pop
push
cmc
test
add
or
rcl
cmps
and
or
and
inc
inc
mov
mov
rcl
fidivr
pop
sbb
mov
(bad)
rcr
loopne
inc
clc
xor
push
ror
push
sbb
or
(bad)
mov
fs
and
adc
call
push
sbb
mov
les
adc
xor
push
scas
and
push
xor
sub
xor
push
pusha
push
dec
adc
push
sbb
cmp
jge
add
or
fadd
inc
jecxz
jno
bound
pop
scas
adc
inc
xchg
or
stos
pop
shr
push
pop
adc
or
dec
jo
push
cs
or
jl
push
mov
push
adc
mov
cmc
adc
lock
in
pop
or
mov
or
push
data16
mov
js
pop
add
stos
stos
sbb
pop
rol
sub
pop
or
lock
jmp
ss
scas
cli
jbe
push
fsubr
sub
pop
add
cmp
jne
or
add
in
jecxz
jne
sahf
push
jne
push
sar
add
adc
into
aad
push
outs
sar
mov
mov
test
mov
aam
fsub
cmps
lods
add
jo
add
pusha
push
and
add
loope
sub
loope
cmp
inc
test
(bad)
push
dec
pop
mov
js
sbb
aaa
and
outs
fwait
pushf
popa
ret
mov
lock
inc
pop
int
and
out
pop
ror
or
mov
mov
sti
or
adc
or
ss
or
fistp
and
sub
mov
test
xor
rcl
lock
jmp
mov
pop
pop
mov
xchg
jne
xchg
cmps
push
jae
fs
or
fcomp
bound
xor
loopne
inc
push
in
sar
ss
adc
pop
lahf
es
xchg
add
ss
fadd
add
sub
xchg
cmp
lods
int3
xor
(bad)
dec
jmp
push
add
adc
mov
or
cmp
add
shl
pop
aad
push
add
rol
push
sbb
push
data16
dec
or
pop
fmul
add
and
add
mov
pusha
jmp
(bad)
add
xchg
not
sub
pushf
or
push
or
js
xchg
jmp
popa
loope
mov
adc
push
add
jmp
push
test
loope
or
or
push
test
aam
cmp
push
or
mov
push
inc
pop
xchg
mov
loopne
ds
jp
jbe
jo
push
adc
adc
loopne
jle
movlps
icebp
sahf
pusha
jno
cmp
std
sbb
dec
add
push
xchg
or
mov
ja
mov
cmps
jb
xchg
jg
xor
adc
fdiv
cld
(bad)
mov
jle
lods
iret
aad
push
jbe
mov
mov
icebp
int3
pop
retf
fstp
loopne
mov
mov
sbb
dec
jl
mov
or
or
(bad)
mov
jle
push
jmp
xchg
mov
sbb
add
xor
sbb
adc
movs
mov
ja
xor
cmp
leave
movs
adc
sbb
dec
js
xor
and
pop
inc
movs
nop
jbe
rcr
clc
cmps
xor
sbb
shl
jo
xchg
mov
test
pop
imul
and
retf
push
or
or
adc
fst
test
push
mov
je
lds
cmp
and
push
rcr
loop
add
push
add
push
ror
push
push
test
ds
lods
mov
fild
adc
js
fimul
pop
sbb
push
sub
push
fstp
dec
frstor
add
and
ins
dec
loopne
jl
pop
outs
cld
and
xchg
nop
stc
test
imul
or
fidivr
or
test
mov
or
nop
xchg
sub
mov
test
mov
pop
dec
sbb
je
push
retf
cwde
out
ins
shl
jecxz
retf
and
jecxz
push
cmp
rcr
mov
push
rcl
rcl
repz
repz
xlat
fcomp
jmp
sti
fstp
push
and
ins
loope
xchg
out
inc
add
push
and
sub
aam
cs
and
xchg
setne
or
push
add
push
jno
or
add
add
xor
mov
sahf
and
push
sub
dec
and
mov
and
test
jmp
push
pusha
je
cmp
test
or
data16
sbb
push
push
loopne
rcl
or
xor
push
ror
ret
pop
jp
leave
adc
xor
xchg
pusha
call
dec
lea
inc
cmp
fnstcw
mov
mov
fild
retf
(bad)
cmp
jle
out
jge
inc
or
cwde
jbe
sbb
(bad)
mov
je
(bad)
dec
sub
lods
invd
push
cmp
xor
es
sub
dec
pop
inc
sbb
pushf
jb
mov
adc
push
sbb
push
(bad)
or
pop
es
mov
into
aaa
mov
popf
retf
xor
adc
and
xor
pop
or
mov
ins
pop
ins
frstor
aaa
inc
fiadd
add
(bad)
cmp
adc
outs
data16
adc
sbb
mov
cmps
cli
pushf
fidiv
sbb
inc
add
mov
dec
sbb
adc
or
mov
pushf
dec
inc
sub
mov
xchg
inc
call
dec
add
movs
ret
shr
jp
add
sub
jle
lea
push
test
imul
lods
cmp
es
lods
mov
adc
pop
dec
push
xchg
sub
mul
sub
add
inc
test
xor
pop
inc
mov
jg
xadd
xchg
movs
sbb
ds
pop
xor
clc
jg
add
xchg
add
lock
xchg
shl
xor
jmp
imul
adc
std
dec
dec
jg
adc
push
sub
int
pushf
shl
fiadd
mov
(bad)
ret
inc
mov
mov
mov
mov
adc
mov
mov
push
or
test
lock
lock
cmp
repnz
cli
xor
retf
add
repnz
ret
setle
loop
or
mov
cmp
jmp
pop
ds
rol
mov
sbb
in
lods
sbb
push
mov
mov
or
inc
aaa
fcmovb
mov
cld
icebp
add
loopne
and
leave
inc
cmp
sar
test
dec
daa
sbb
inc
arpl
(bad)
pop
or
cmp
rcl
jmp
jne
fmul
aam
cmp
push
shl
leave
jno
lahf
hlt
lods
lods
push
clc
icebp
popa
mov
mov
in
cmps
push
push
outs
outs
data16
mov
cmp
cmps
fidivr
mov
add
and
xchg
mov
push
cmp
jle
repnz
pop
fisttp
ficom
pusha
out
shl
bt
adc
dec
sub
jo
sbb
sahf
pop
add
lahf
es
xchg
retf
jmp
fimul
mov
lock
cmp
lock
push
(bad)
retf
inc
xor
xchg
mov
sbb
jecxz
jne
xchg
adc
cdq
inc
(bad)
dec
xor
fs
bound
sbb
pop
xor
cmp
(bad)
inc
outs
call
stc
mov
push
addr16
xchg
or
shr
or
int
aaa
push
add
xchg
daa
and
mov
xor
add
push
jg
sbb
mov
push
pop
push
jae
xor
push
or
arpl
inc
push
out
adc
sub
ds
in
lods
sbb
call
add
push
rcl
pop
fisub
aaa
inc
push
neg
pop
mov
std
out
sub
ins
push
loopne
icebp
mov
fisub
loope
call
loopne
xor
pop
hlt
inc
cld
lea
js
clc
in
sbb
pop
cmp
inc
popa
(bad)
in
xchg
loopne
les
jne
push
or
imul
lock
or
xor
les
enter
xchg
outs
dec
into
add
cli
push
xabort
sub
mov
jne
xor
(bad)
out
shl
add
popa
add
add
lods
pop
push
mov
les
fcom
out
add
add
sahf
into
or
xchg
aaa
or
call
mov
xchg
dec
mov
dec
cmp
jge
out
xor
mov
cmp
add
dec
cmp
mov
or
mov
inc
sub
fisubr
mov
add
sbb
xor
mov
aad
jp
es
jae
push
ror
dec
jno
mov
inc
inc
push
icebp
scas
ret
and
add
push
add
inc
test
adc
sahf
add
(bad)
enter
dec
push
imul
loope
and
inc
mov
retf
mov
and
je
inc
sbb
into
cmp
cmp
or
add
sti
or
or
mov
out
pop
mov
mov
ret
pop
je
adc
and
sbb
adc
pop
push
inc
jnp
push
ret
js
mov
add
add
ret
out
sbb
mov
mov
dec
and
xor
pusha
movs
repnz
pusha
inc
and
jg
mov
pop
and
dec
cs
adc
or
pushf
add
sub
(bad)
or
lods
ud2
fst
xchg
aas
push
imul
push
or
push
call
push
sub
dec
rol
sbb
dec
lea
cdq
adc
js
sar
push
or
jmp
pop
jmp
add
mov
mov
sbb
jo
mov
add
sub
mov
ins
(bad)
adc
pop
and
aaa
shl
pop
mov
mov
cmp
in
adc
ins
push
xchg
adc
leave
add
dec
xchg
jae
add
dec
scas
jnp
or
adc
and
pop
push
jmp
jo
sbb
jb
lods
xor
add
ss
xor
rol
pop
push
pop
cmps
sub
sub
into
or
add
or
push
push
sahf
retf
add
mov
and
adc
cmp
bound
sbb
inc
in
pusha
sbb
into
mov
mov
sub
mov
dec
or
jecxz
test
or
add
push
or
jno
push
(bad)
or
add
cld
xor
adc
sub
cmps
shr
pop
xchg
sub
xor
mov
mov
popf
retf
dec
push
retf
in
(bad)
pushf
sbb
push
mov
xor
sbb
(bad)
cdq
into
xlat
jb
inc
lock
jg
retf
jmp
int3
es
xor
jbe
pop
add
mov
add
or
cmovb
add
pop
push
enter
xor
adc
xor
sti
push
test
adc
mov
lea
cmc
and
movsx
inc
or
outs
jg
ret
aad
stos
sub
jo
rol
les
sbb
and
jp
sbb
ins
cmp
clc
ins
inc
jne
idiv
pop
and
push
stc
push
or
stc
mov
inc
adc
pop
fsubr
add
mov
and
fnstsw
inc
out
nop
cmps
push
jmp
cld
cmp
push
cld
cld
jmp
femms
dec
jo
jbe
iret
pause
sbb
clc
hlt
int
inc
and
dec
cmps
sbb
sub
pushf
scas
pop
mov
dec
jmp
inc
hlt
in
test
mov
rcr
inc
aad
loop
xor
lds
dec
(bad)
and
dec
lea
pop
mov
test
je
imul
scas
and
xor
lods
or
in
rol
stos
and
out
mov
ret
(bad)
sub
and
xlat
pop
adc
lods
arpl
cli
sar
add
add
sbb
push
fldcw
or
mov
jno
inc
sub
ja
or
rol
sbb
test
or
cmps
out
pusha
movs
icebp
sbb
and
inc
pop
stos
in
sub
jecxz
in
mov
push
cmp
cli
mov
add
fadd
hlt
ret
push
pop
push
and
adc
and
das
push
mov
les
js
movs
xchg
imul
cmps
cmps
leave
dec
fld
rcl
out
mov
jle
push
lods
sub
es
xor
jle
mov
inc
cmp
jl
pop
rol
cmps
mov
shl
fisubr
mov
or
sbb
repz
ss
sub
icebp
pusha
sbb
pop
jmp
xchg
pop
stos
push
jp
ficom
pop
or
add
inc
add
test
cwde
je
mov
xor
and
(bad)
aaa
and
test
adc
inc
retf
in
inc
icebp
adc
sub
push
xlat
je
mov
inc
in
jb
adc
mov
jne
add
xchg
jbe
jl
pushf
sbb
mov
push
inc
dec
mov
iret
push
pop
push
je
jge
dec
xor
push
sar
scas
icebp
push
push
(bad)
mov
neg
adc
dec
dec
in
dec
dec
cs
pop
jmp
xchg
aaa
mov
test
fsub
popa
jge
(bad)
push
cmp
mov
adc
sbb
enter
cld
cmp
add
add
in
inc
push
or
adc
inc
push
cmp
sbb
add
adc
and
add
aam
cmp
adc
or
shr
lods
enter
movs
xor
adc
fsubr
int3
xchg
je
sbb
dec
enter
xchg
pop
call
aad
and
and
fisub
(bad)
es
dec
int3
stos
or
add
push
fmul
and
xor
cmps
and
sbb
xor
inc
cmp
gs
dec
jmp
fdivr
rcl
pop
movs
or
xor
add
or
loopne
inc
sbb
add
push
cwde
rcl
pop
cmps
jo
repz
mov
inc
push
fst
icebp
adc
(bad)
push
sub
in
xchg
adc
loopne
pusha
fild
add
or
jne
jle
movs
add
push
mov
cmps
and
daa
push
test
add
das
ror
fdivr
and
jmp
fist
test
jmp
push
and
add
jne
jmp
sbb
mov
xchg
add
sbb
mov
push
push
test
es
pusha
dec
ret
sti
cmps
mov
cmovle
add
lods
or
into
imul
fdiv
sbb
fadd
jne
fld
aam
into
cmp
xchg
std
lahf
retf
icebp
ret
and
test
mov
jle
pop
fimul
push
xchg
sbb
neg
or
jae
adc
ret
adc
mov
sbb
sti
ret
je
pop
cs
(bad)
cld
call
out
ins
pop
mov
push
dec
inc
mov
dec
mov
xor
pushf
inc
push
das
push
scas
xor
cmc
push
pusha
loope
cmp
into
nop
sub
add
call
sub
es
and
add
je
imul
js
ss
(bad)
push
js
in
mov
sti
test
pop
mov
push
or
or
jb
inc
jnp
loopne
movs
add
inc
push
test
or
sar
mov
mov
rcl
ins
lea
and
mov
push
lahf
pop
pop
jnp
mov
and
addr16
sub
cld
in
cwde
sbb
fsubr
inc
call
sub
repz
dec
xchg
jl
jbe
mov
or
mov
or
int3
dec
inc
cmps
test
retf
ret
inc
fmul
jb
xor
inc
fadd
inc
nop
test
mov
mov
xchg
xchg
xchg
push
push
or
in
add
pop
cmp
mov
icebp
xor
ret
mov
push
js
mov
movs
(bad)
call
inc
rol
pop
mov
cmp
mov
push
adc
xchg
inc
jno
inc
test
dec
fdiv
dec
sbb
cmp
mov
ja
dec
mov
js
xchg
add
pop
inc
enter
in
add
sbb
add
or
add
add
add
in
push
jl
or
cwde
sbb
shl
retf
in
push
add
sbb
retf
rol
les
or
push
and
cmp
mov
je
aaa
das
mov
jl
jl
sar
push
or
xchg
sub
jl
or
add
push
xchg
pop
adc
lds
add
retf
scas
pushf
mov
mov
enter
mov
sbb
adc
add
cmp
mov
mov
fs
or
pop
mov
cmc
add
xchg
mov
mov
dec
adc
mov
ret
mov
adc
cmp
ffree
add
in
cmp
loopne
cmp
gs
push
jmp
imul
jmp
mov
sbb
add
in
jns
cmp
xor
jle
dec
add
jno
loopne
imul
test
popf
in
sub
push
mov
mov
in
ins
xor
sbb
cs
stos
lea
in
ret
js
pusha
call
lods
in
cwde
rol
dec
mov
gs
xchg
mov
jns
in
int3
(bad)
fisub
inc
mov
jmp
jno
push
lods
fdivr
pop
push
ja
sbb
mov
fcom
sub
cmp
stos
mov
add
mov
and
or
add
loopne
lock
cmp
or
ret
(bad)
dec
shl
push
add
scas
jl
xchg
add
mov
xchg
fdiv
sub
inc
das
in
rcr
mov
and
setbe
popa
das
cmp
test
cmp
or
and
(bad)
mov
pop
paddusb
and
cmp
cmps
add
dec
pop
dec
and
add
test
inc
mov
cdq
add
(bad)
fmul
and
inc
xor
je
adc
lock
in
ret
out
xchg
fisub
push
inc
dec
jb
fadd
ret
hlt
cmp
xor
inc
cmps
in
jo
pusha
dec
ret
xchg
xchg
cmp
dec
repnz
and
in
or
les
ins
stos
imul
and
cdq
in
fsub
icebp
outs
xchg
dec
adc
or
add
push
daa
inc
jno
ror
pop
jb
(bad)
xchg
sbb
repz
repnz
dec
enter
and
mov
xchg
adc
fisubr
xor
aad
pop
fwait
je
xor
mov
mov
sbb
ss
enter
ficom
rcl
in
xchg
pop
enter
(bad)
cwde
nop
mov
push
mov
sbb
call
call
adc
sbb
leave
cmps
push
mov
gs
inc
test
add
les
loopne
jae
test
ror
leave
fxsave
or
adc
test
and
push
adc
inc
lock
or
pop
mov
xchg
retf
sbb
aam
mov
nop
pop
jae
test
xor
adc
stos
lock
or
fs
inc
pop
fmul
push
mov
jge
in
imul
cmp
nop
or
int3
enter
mov
jne
xchg
inc
je
xor
mov
push
stc
mov
nop
mov
adc
or
(bad)
mov
inc
pushf
ja
int
(bad)
test
mov
xor
cdq
push
pop
xor
aam
mov
lea
stc
mov
inc
cmps
(bad)
and
loope
and
cmp
stos
cmps
jg
or
call
scas
js
xor
jl
sub
pop
in
xchg
and
cmps
imul
daa
sbb
adc
sbb
adc
test
push
aad
jne
enter
sub
in
in
cs
ror
outs
sbb
test
aas
adc
jne
inc
fisubr
aas
loopne
jno
push
test
ror
test
xchg
cmp
push
pop
mov
push
dec
lea
and
inc
ins
or
loopne
pushaw
adc
sahf
and
popf
mov
hlt
shl
mov
mov
cmovo
fbld
retf
adc
cmp
inc
sbb
sbb
sbb
enter
hlt
clc
out
and
add
jbe
xchg
and
mov
mov
push
jo
add
in
sbb
retf
pop
add
fild
xchg
aam
adc
jb
adc
nop
pop
mov
shl
mov
test
std
add
adc
cmps
mov
aam
cmps
inc
xor
jg
(bad)
xchg
or
push
retf
push
cld
sub
or
or
adc
xchg
imul
mov
daa
cmps
seto
push
test
inc
xlat
xchg
ss
and
add
fist
in
push
ins
aad
movs
das
dec
cmps
fiadd
mov
bound
mov
inc
jmp
test
ds
xchg
fst
inc
push
jmp
sbb
in
in
adc
pusha
movs
ins
or
mov
inc
loopne
and
test
mov
add
movs
adc
add
test
add
jb
mov
adc
mov
pop
mov
cmp
ss
and
lods
mov
and
xor
fisubr
retf
xor
fadd
inc
push
dec
pop
mov
inc
aam
adc
add
dec
push
sbb
sub
ret
mov
outs
dec
push
xchg
sbb
pop
or
jo
jo
xchg
adc
loop
cmp
scas
add
mov
xchg
ficomp
mov
mov
or
add
mov
sub
add
mov
loopne
push
fwait
mov
in
pusha
add
in
or
sbb
(bad)
lock
adc
imul
outs
loopne
test
pop
add
loop
int3
fistp
pusha
add
clc
fistp
in
push
daa
mov
cmp
fnstsw
loope
pop
pop
add
mov
mov
bound
aad
fisubr
xor
mov
enter
ror
pop
fwait
dec
out
loopne
pop
enter
pop
icebp
fcomp
in
ss
int
add
pop
les
movs
add
dec
ins
xor
xchg
stos
pusha
aas
outs
scas
mov
adc
xor
push
pmulhw
test
sub
pop
cwde
rol
add
inc
xchg
lock
jo
inc
jb
xchg
enter
xor
das
movs
mov
in
loopne
ror
scas
or
test
add
mov
pop
push
xor
aam
mov
cmp
fsub
adc
push
and
in
jo
xor
test
popa
aam
push
add
in
enter
and
pop
leave
mov
inc
in
cmps
mov
rol
daa
fadd
mov
adc
adc
or
push
inc
pop
adc
mov
mov
sbb
push
add
adc
xor
fs
pushf
shr
cwde
int3
out
xchg
pop
sbb
call
gs
push
inc
xchg
mov
dec
rol
add
sbb
cdq
imul
fs
pop
test
push
jne
fsubr
call
dec
les
jne
pop
jo
adc
jmp
das
call
ins
fstp
adc
stos
push
es
sbb
cmp
sub
cld
imul
add
or
mov
xor
mov
inc
mov
mov
sbb
mov
or
fidiv
sub
push
mov
ror
pop
retf
mov
rcr
push
adc
lods
in
cmp
bound
mov
adc
in
lahf
mov
cmp
xchg
add
rcr
in
aaa
or
clc
add
shr
xchg
inc
adc
pop
mov
jb
arpl
pop
pop
enter
adc
aas
and
dec
enter
sbb
mov
mov
jmp
xor
cmp
jae
adc
cmp
jbe
cmp
push
pop
push
push
adc
or
leave
pusha
fsubr
jmp
sbb
enter
xchg
fadd
jns
lods
mov
ffreep
in
cmp
adc
in
fsub
dec
push
xor
lock
retf
cdq
or
mov
mov
adc
jecxz
jb
fadd
aam
icebp
xor
mov
or
xchg
add
mov
xor
scas
pop
inc
popf
(bad)
dec
or
pop
ret
inc
out
mov
mov
mov
aad
leave
ins
lods
shld
jb
inc
sbb
add
mov
adc
fadd
pop
sbb
pop
and
or
cmp
adc
adc
js
jno
daa
pop
repz
mov
pop
mov
repz
loop
xor
in
inc
je
cmps
pusha
(bad)
lock
mov
push
adc
push
inc
ss
aam
sbb
in
pop
int3
dec
pop
in
loop
call
test
shr
fisub
ins
add
sahf
or
jnp
inc
hlt
push
ins
adc
push
mov
xor
pop
xchg
xchg
xchg
fistp
cmp
pop
sbb
dec
xor
pop
in
bound
cmp
xor
xor
and
push
test
push
dec
mov
imul
call
add
inc
sbb
add
outs
dec
ds
adc
xchg
xchg
add
and
xchg
(bad)
xor
adc
ins
or
pop
inc
adc
sub
push
xor
push
or
cdq
fs
sbb
and
push
bound
dec
adc
loopne
jmp
cwde
dec
fiadd
mov
cmp
repz
or
sbb
adc
loopne
mov
je
xor
cs
sbb
adc
rcr
dec
xor
sahf
mov
sub
add
inc
leave
in
inc
call
out
leave
inc
add
cmp
in
cmp
out
nop
stc
ror
sbb
nop
mov
push
adc
mov
mov
mov
jb
cmp
daa
cmps
pop
lahf
xchg
push
mov
mov
cmp
cli
add
jbe
pop
xor
cmp
loop
fmul
test
cmp
mov
scas
invd
or
inc
dec
dec
and
leave
inc
movs
mov
mov
dec
or
int3
daa
lds
rcl
fnstsw
test
fisttp
jne
test
mov
cs
jmp
das
or
sbb
add
xchg
adc
mov
test
test
adc
test
pop
fs
cld
std
test
pop
dec
popf
dec
aad
fsubp
mov
mov
xchg
lods
push
pusha
fiadd
xor
clc
popa
shl
es
enter
leave
rcl
leave
and
xchg
or
dec
sub
mov
sub
cwde
pop
ret
in
(bad)
mov
dec
cmps
cmp
les
leave
mov
(bad)
or
das
xor
adc
shl
or
xlat
test
fs
pop
retf
or
mov
mov
enter
add
inc
lods
jno
dec
cmp
inc
mov
dec
add
les
jb
rcl
js
push
nop
arpl
shr
push
enter
push
rcl
test
adc
jl
xor
pusha
es
ror
push
out
pop
push
ret
cvtpi2ps
stos
cdq
sub
fcomp
and
shl
in
(bad)
mov
adc
dec
lods
dec
pop
rol
pop
mov
push
add
imul
pop
mov
retf
mov
mov
test
ins
fidiv
xchg
pop
push
mov
ror
jmp
mov
add
pushf
add
daa
mov
mov
inc
ins
cdq
xor
pusha
mov
jo
sbb
out
test
mov
fdivr
sbb
sbb
sub
pmulhuw
or
iret
and
jbe
or
cmp
aas
sub
or
pusha
aas
or
sbb
mov
out
inc
outs
xchg
cs
je
dec
rcr
das
aaa
movs
push
ins
mov
xor
pop
mov
bound
lahf
fs
ins
push
and
inc
ins
iret
(bad)
push
sub
fs
enter
sti
retf
scas
aas
add
pop
stos
movs
adc
jo
push
rol
fld
fnsave
push
seto
adc
lahf
add
shr
and
mov
push
mov
mov
pop
jns
cmp
add
shl
clc
pop
mov
imul
aam
push
sub
dec
sbb
in
inc
fcom
adc
jmp
push
inc
add
push
or
push
and
in
or
dec
xor
mov
in
in
in
xor
and
in
in
in
mov
xchg
dec
in
in
push
mov
and
cmp
or
mov
or
push
push
pop
add
aaa
nop
mov
mov
rcl
add
adc
test
and
jne
and
or
push
arpl
push
fcom
sbb
xchg
jmp
loopne
int3
enter
ret
push
sbb
inc
pop
push
pop
push
or
test
dec
push
add
test
addr16
fwait
push
pusha
pushf
pusha
mov
dec
xchg
ja
add
add
sub
hlt
stos
jmp
repnz
xor
push
rcl
inc
fadd
fs
push
loopne
push
ins
adc
and
sbb
ja
shrd
push
cmp
pop
add
inc
daa
out
loop
loopne
jnp
icebp
bound
push
xchg
cmp
das
cmp
test
adc
push
sub
push
dec
fwait
call
nop
pop
movs
inc
stc
div
cmp
shl
adc
repnz
push
js
fcom
rcl
jbe
sbb
(bad)
adc
cmp
xchg
imul
push
addr16
cmp
adc
push
push
push
xchg
shl
mov
mov
or
xor
jmp
sub
add
pop
mov
adc
sbb
push
in
outs
sbb
cmp
pmulhuw
dec
add
mov
mov
xchg
push
jmp
xor
inc
adc
push
inc
xchg
jmp
adc
push
pop
scas
mov
cmps
test
add
sbb
jmp
pop
je
and
dec
push
add
push
test
inc
cmc
or
mov
imul
sbb
push
int
and
inc
inc
in
jo
enter
or
and
ret
lods
push
add
cmps
mov
sbb
mov
and
xchg
cmp
div
mov
sbb
test
add
mov
sbb
sbb
add
fadd
call
pop
or
jmp
pop
push
and
dec
add
lock
adc
xchg
adc
mov
or
mov
jo
test
aas
les
lock
ds
sbb
push
mov
in
aam
lods
dec
sbb
je
xchg
push
push
loop
pop
sbb
icebp
push
mov
dec
fdiv
lea
dec
adc
fstp
push
cmp
fucomp
adc
xchg
cmps
(bad)
push
lds
int3
(bad)
fmul
rcl
pusha
add
xchg
add
scas
imul
inc
jo
js
xor
sbb
mov
out
sub
inc
rcr
stos
pop
push
das
movlps
and
pop
and
xor
adc
ins
lods
push
cmp
imul
jb
or
pop
sbb
push
dec
retf
jl
sub
push
xlat
push
jb
push
and
pop
shl
fiadd
js
lods
pop
xor
cdq
lods
and
xchg
xchg
ret
dec
add
mov
dec
pop
xor
pop
loopne
mov
inc
mov
fwait
nop
or
stc
les
lods
gs
es
fs
push
xchg
inc
aam
push
pop
xchg
add
cmp
cmp
push
push
aam
in
jo
sbb
jmp
push
enter
xchg
add
test
lods
(bad)
mov
xor
sti
adc
adc
shl
mov
or
xchg
arpl
and
sub
pop
retf
sub
cvttps2pi
dec
xor
push
sub
push
xor
and
cmp
inc
inc
and
or
push
fdiv
or
push
pop
fcom
push
xor
int3
icebp
mov
mov
scas
cmp
mov
and
mov
leave
mov
add
lea
adc
or
sbb
in
dec
or
test
icebp
fdiv
cmps
je
mov
mov
and
jo
add
pop
rol
push
add
dec
jl
or
push
xor
mov
push
xchg
xor
ror
outs
inc
rol
bound
es
mov
enter
adc
jns
ret
sub
pop
dec
es
call
es
sub
es
add
fmul
lods
sti
xchg
lock
inc
sub
sbb
xor
cld
pop
push
lods
and
aaa
adc
add
in
int3
add
add
sbb
push
(bad)
movs
or
shl
and
add
push
shl
in
push
push
sbb
mov
sub
push
adc
movs
mov
pop
lock
dec
or
push
cmp
test
inc
adc
cwde
ss
sbb
sub
add
call
outs
push
popf
shl
sub
xor
add
int3
mov
or
nop
jbe
sub
mov
xor
or
sub
inc
mov
retf
push
dec
test
sub
cmp
popa
add
loopne
jne
stc
lock
sbb
pop
xchg
ret
xchg
mov
inc
ficom
fstp
inc
test
xchg
lock
lods
and
inc
cli
sbb
jp
ins
add
sub
xchg
add
es
add
shr
popf
mov
loopne
jno
pop
push
movs
or
imul
adc
xchg
xchg
pop
mov
in
fucomip
fucomip
fbstp
cmp
ret
lea
add
or
adc
icebp
adc
inc
sbb
or
mov
sti
push
jne
push
push
test
sbb
test
xchg
popa
or
cdq
adc
test
das
dec
mov
arpl
sbb
call
dec
sbb
aaa
les
test
xchg
jnp
fcomp
in
push
mov
ins
sub
and
or
xchg
pop
jl
outs
call
das
inc
or
xchg
test
or
push
shl
xor
jmp
arpl
inc
push
gs
or
es
jb
cmps
mov
pop
sar
cmpxchg
leave
mov
je
sbb
adc
dec
cmovo
xor
aaa
fstp
pop
lock
cdq
movs
dec
imul
xor
mov
push
and
rcl
imul
xor
add
cwde
and
jmp
xor
and
jo
loopne
ror
sub
int3
mov
push
jecxz
xor
push
mov
cmp
stc
jge
aam
sub
loopne
in
movs
add
xchg
pop
ss
or
or
lods
pop
call
nop
and
cwde
mov
xor
adc
push
jmp
add
(bad)
and
or
mov
push
inc
in
fdiv
adc
mov
mov
or
ret
shl
dec
jne
enter
xor
test
cmps
es
rol
shr
pusha
cmp
sub
xchg
add
cmp
mov
inc
jb
sub
popa
pop
mov
pop
push
mov
lods
mov
sbb
jo
mov
sbb
sbb
push
sar
movs
push
or
imul
push
bound
push
repz
cmp
cmp
jae
cmp
inc
jo
xchg
inc
leave
loope
mov
lea
(bad)
mov
(bad)
lock
dec
lods
or
push
adc
mov
inc
or
and
sub
dec
cmc
or
push
add
xlat
sub
mov
fild
(bad)
shr
mov
pop
push
rol
int3
xor
and
inc
mov
mov
or
shl
push
inc
sub
cmp
adc
pop
ds
movs
push
dec
xor
sbb
mov
jmp
(bad)
lea
add
les
mov
hlt
ds
aas
cmp
mov
ja
(bad)
add
cmp
sbb
inc
adc
mov
lods
nop
inc
or
mov
xor
dec
outs
(bad)
mov
inc
or
cmp
bound
jl
dec
(bad)
dec
jecxz
lea
daa
stos
fs
cmps
xchg
mov
sbb
mov
inc
dec
mov
jbe
push
xor
stc
cmp
rol
nop
inc
inc
or
inc
shl
mov
call
inc
jbe
lock
add
adc
out
adc
cmc
push
sub
dec
mov
movs
xchg
xchg
or
das
lock
or
or
sbb
mov
add
add
mov
inc
ror
sbb
and
jmp
pusha
inc
push
fistp
sub
mov
xchg
lods
cmps
sar
test
adc
add
fldcw
jne
test
pop
fdiv
xchg
kmovw
stos
xchg
test
repnz
loopne
cmp
mov
xor
and
mov
adc
sbb
xor
inc
dec
(bad)
int3
cmp
pop
mov
pushf
loopne
or
inc
adc
nop
sbb
in
(bad)
or
lds
mov
inc
push
cmps
add
dec
das
daa
nop
add
pop
sub
push
sbb
cmp
xor
inc
pop
add
adc
jo
call
call
add
aas
sbb
sub
jne
or
in
sub
nop
sub
(bad)
fs
imul
and
lea
xchg
mov
push
jnp
loopne
jne
sub
test
inc
jne
int3
enter
in
retf
call
pop
adc
sbb
ret
add
inc
sub
sbb
pop
and
add
dec
stos
jbe
and
movs
pop
dec
dec
inc
cwde
inc
nop
mov
clc
sbb
loopne
xchg
call
es
pop
fmul
mov
in
sub
lods
fsub
and
scas
pop
leave
aam
nop
add
inc
lods
xchg
adc
and
in
inc
inc
mov
inc
fs
in
nop
sub
(bad)
leave
add
xor
dec
mov
adc
pusha
sub
xchg
js
pusha
and
adc
inc
mov
or
cmp
popa
dec
cmps
jo
(bad)
mov
mov
lods
imul
das
or
dec
xor
pop
xchg
test
mov
push
sbb
sbb
dec
popa
or
aam
pushf
adc
push
mov
push
test
sub
fsubr
and
loope
ror
cmp
js
movs
(bad)
in
xor
daa
int3
adc
push
xor
push
push
cmp
cmp
shr
push
lahf
aam
sbb
mov
jne
bound
fiadd
inc
lods
jg
cmp
jns
xchg
les
push
ins
dec
ins
or
cmc
enter
pop
inc
push
pop
xor
call
imul
ret
inc
in
pop
inc
mov
ja
sbb
dec
sbb
daa
pop
xor
xchg
push
sub
mov
sbb
push
leave
std
mov
dec
cs
xchg
loopne
mov
and
adc
mov
push
adc
adc
vcvtss2sd
xchg
xor
xor
jecxz
add
sub
add
pop
(bad)
les
sbb
pop
fmul
mov
cmp
daa
movs
in
adc
mov
daa
mov
lock
sbb
js
push
inc
pop
mov
inc
sub
enter
pusha
hlt
pop
and
adc
jnp
cmc
inc
dec
js
inc
lahf
and
shl
sbb
or
add
lea
pop
mov
loopne
and
movs
sub
popa
mov
sub
rol
loope
push
push
and
dec
mov
inc
xchg
or
adc
lea
or
pop
mov
sbb
iret
lods
xchg
push
je
push
inc
xchg
adc
push
jo
jg
adc
xchg
push
hlt
or
shr
pop
inc
loopne
push
fiadd
ins
outs
pop
pushf
sbb
and
lods
test
mov
enter
inc
or
aad
lahf
ret
imul
push
cmp
gs
inc
imul
or
pushf
test
test
mov
mov
shl
xchg
jb
pop
out
or
xchg
cmp
bound
add
or
dec
jb
push
fcom
sub
mov
xor
adc
lahf
inc
jge
pop
(bad)
std
add
push
das
lods
push
cmp
or
aad
call
adc
inc
test
or
call
pop
bound
xor
test
mov
sub
dec
xchg
ret
push
sub
fidivr
rcr
adc
jge
xchg
add
pushf
addr16
test
mov
fwait
dec
js
ret
mov
ret
loope
aad
mov
and
loope
dec
in
ret
mov
mov
dec
fisttp
dec
test
adc
xor
imul
cmp
sbb
or
hlt
fs
imul
and
shr
mov
adc
sub
sub
ficom
rcr
inc
je
ror
sub
and
pusha
gs
retf
xchg
xor
xchg
xor
ins
sbb
sbb
je
ins
int3
ret
and
pop
loopne
jno
xchg
sbb
(bad)
xchg
pushf
dec
xchg
test
xchg
mov
push
push
add
mov
imul
sub
push
sub
in
mov
sbb
call
pop
shl
leave
adc
jno
fadd
or
hlt
sbb
push
add
daa
shr
mov
dec
pop
test
mov
pop
fwait
loopne
push
adc
push
imul
mov
and
or
push
adc
mov
sub
pop
(bad)
ficom
pushf
ror
xchg
in
cmp
loope
push
xor
dec
dec
xor
loop
lods
and
push
cmp
adc
dec
mov
ret
inc
sbb
add
test
outs
add
or
and
inc
rcl
ror
dec
fadd
loopne
push
adc
in
push
push
xchg
cmps
aam
or
jp
jo
clc
gs
or
dec
aam
fcomp
lds
cmp
(bad)
js
or
mov
daa
xor
inc
or
jns
and
ins
jb
mov
push
mov
sub
pop
or
and
push
jae
cmp
adc
sbb
cmp
movs
ins
mov
ja
hlt
add
popa
lods
pop
jmp
movs
cmp
mov
lea
and
cwde
hlt
or
jge
jno
je
jbe
push
je
cmp
and
pop
inc
mov
or
cld
jne
push
loop
or
bound
inc
or
outs
pusha
js
pusha
or
jo
mov
push
loopne
or
or
xchg
jbe
pop
push
mov
dec
adc
test
outs
mov
push
shl
inc
in
add
inc
add
pop
ja
cmp
mov
ja
in
inc
xchg
add
and
clc
jne
mov
mov
jno
mov
push
mov
sbb
fmul
lods
fwait
ror
fdiv
inc
adc
jns
xchg
mov
xchg
jns
test
and
loopne
movs
stos
adc
fld
mov
add
les
imul
call
test
adc
jp
push
cmp
xor
mov
fwait
inc
jb
jnp
jnp
add
xchg
lods
jnp
add
mov
pop
and
addr16
movs
or
mov
dec
fild
in
and
sbb
xchg
sbb
xchg
pop
lock
inc
and
jmp
push
(bad)
shr
pushf
adc
sbb
inc
cmp
inc
and
stos
add
lods
(bad)
mov
stos
cmp
jnp
sar
mov
sub
and
jno
jle
jmp
adc
push
fwait
xchg
fwait
mov
rcl
mov
mov
stos
dec
pop
xlat
call
mov
outs
arpl
jg
leave
mov
inc
(bad)
lock
sbb
in
pop
sbb
movs
adc
xchg
mov
sub
xchg
add
in
adc
gs
sbb
rcr
xor
lea
pusha
xor
xor
leave
xor
les
in
sbb
jmp
sub
xor
xor
pavgb
sub
or
pop
test
and
add
test
adc
cmp
sbb
xchg
mov
xchg
test
loopne
adc
add
mov
loope
xchg
test
mov
call
or
xchg
in
or
or
test
or
ins
add
ins
leave
push
dec
sbb
xor
xor
cmc
in
test
push
mov
adc
icebp
mov
test
xchg
and
and
mov
inc
pushf
sbb
mov
test
stos
addr16
pushf
dec
call
nop
inc
int
test
cmp
adc
xor
movs
push
push
retf
add
xlat
or
enter
loopne
in
cld
push
xor
pop
mov
mov
leave
adc
stos
and
mov
ins
and
movs
fcom
push
and
dec
pop
mov
imul
fld
mov
in
scas
sbb
and
pop
jne
mov
cs
repnz
adc
mov
sbb
jno
stos
inc
sar
jg
movs
imul
push
ret
test
sbb
out
sbb
cmp
mov
mov
mov
or
sub
xor
add
test
out
sub
mov
repnz
push
xchg
aas
mov
test
inc
mov
pop
in
cmps
sub
mov
push
jge
adc
mov
(bad)
sub
mov
push
xchg
mov
leave
xchg
dec
sbb
ins
push
test
add
nop
mov
and
pusha
xchg
sbb
lock
jmp
nop
je
add
in
jo
sub
jmp
ror
and
sub
paddsb
or
(bad)
cs
in
or
(bad)
int3
popf
cmp
xlat
enter
inc
fadd
mov
sub
inc
jnp
in
dec
call
pop
dec
jb
add
xor
rol
jno
retf
sbb
mov
adc
hlt
je
pop
fsubr
dec
adc
or
xchg
push
sbb
jns
lea
sbb
adc
add
rol
fsub
pusha
xchg
jecxz
cmp
loope
xchg
and
icebp
hlt
ss
dec
and
ror
lods
xchg
push
pop
les
das
clc
xchg
add
stc
xor
icebp
sub
imul
xor
add
movs
lock
push
cmps
xor
push
xlat
mov
mov
cwde
mov
and
add
test
push
jo
rol
or
add
in
pop
rcl
mov
adc
and
ins
sbb
rol
mov
bound
ficomp
jne
pusha
and
adc
sub
cmps
mov
test
shl
add
push
sbb
aam
in
cmp
xlat
lock
push
xchg
test
inc
fcmovnu
mov
enter
pushf
nop
movs
bound
xchg
in
repnz
inc
pushf
sbb
mov
adc
(bad)
test
stos
test
int3
mov
fsub
xchg
movs
adc
push
ret
sbb
rol
mov
add
outs
test
xchg
xchg
and
popa
shl
fcomp
and
sahf
pop
lahf
adc
nop
inc
loopne
cmp
jp
in
mov
xor
sub
in
bound
sbb
xchg
mov
push
call
pop
adc
lock
(bad)
fmul
scas
xchg
pop
xor
adc
xor
xchg
mov
or
shr
mov
sti
push
push
mov
sub
jns
add
test
adc
mov
inc
loopne
jecxz
pop
aam
cdq
adc
nop
adc
push
jmp
and
movs
xor
add
ins
repnz
or
ret
mov
mov
sbb
add
and
add
lods
push
dec
cmp
movs
jns
xlat
ds
mov
into
aad
ror
pop
popa
inc
in
dec
das
xchg
adc
and
sub
movs
fld
popa
push
jne
js
cmps
aad
cmps
push
mov
adc
rol
stos
adc
and
lds
pushf
loop
xchg
and
fst
inc
lods
test
mov
gs
je
and
arpl
pop
cmp
and
(bad)
mov
mov
adc
dec
and
test
push
mov
push
mov
or
sub
push
test
dec
out
adc
test
or
mov
ror
fs
bndstx
adc
in
pop
dec
int
push
sbb
sbb
mov
push
jb
adc
fsubr
add
rep
aaa
xor
push
or
stos
or
or
lds
in
cmc
mov
xchg
or
icebp
cwde
inc
lods
fsubr
mov
pop
push
or
mov
test
inc
xor
mov
dec
adc
lods
xor
sub
adc
lods
add
cmp
fsubr
lds
xlat
mov
or
inc
inc
shl
int3
inc
ins
xor
or
or
cdq
jbe
push
fsub
xor
lods
les
sub
lock
mul
adc
pop
bound
mov
mov
sbb
or
push
sub
jmp
mov
cmp
xor
outs
mov
mov
ficom
rol
mov
adc
push
imul
in
adc
xchg
push
leave
inc
cs
scas
sub
add
push
daa
test
cmp
add
inc
ins
push
add
cmps
loop
test
in
or
jo
in
jne
dec
jne
ins
push
sub
dec
mov
add
inc
push
xor
ins
mov
sub
add
rol
aad
ror
loopne
outs
int3
movs
adc
loopne
mov
fsubr
stos
or
movs
mov
push
or
jae
xchg
sub
mov
mov
loopne
push
jb
sub
mov
mov
add
in
add
inc
fcomp
leave
nop
pop
or
in
xchg
test
sbb
popa
cwde
push
test
loopne
pmulhuw
mov
call
inc
fs
mov
sbb
sbb
sbb
mov
fcom
mov
sbb
jne
dec
inc
mov
jo
dec
and
enter
xchg
inc
loopne
push
add
mov
push
mov
in
lds
jmp
cs
in
mov
and
retf
lock
or
enter
daa
mov
test
mov
sub
jns
mov
mov
leave
in
mov
mov
add
movs
sub
jno
das
adc
mov
adc
aaa
sbb
push
sub
jmp
add
add
pusha
mov
dec
sbb
pop
xor
and
das
arpl
stos
jecxz
and
push
adc
daa
xor
aam
mov
xchg
leave
adc
leave
pusha
adc
cmp
popa
stc
mov
(bad)
retf
stos
clc
pop
leave
cli
test
popa
in
adc
movs
fidivr
mov
ficom
enter
mov
add
push
jns
dec
stc
fiadd
in
les
sub
or
fsubr
enter
and
jmp
inc
jb
aaa
inc
xchg
stos
mov
lds
fdiv
sbb
shl
mov
push
sub
outs
pusha
loop
shr
les
jmp
outs
adc
pop
aam
sub
leave
mov
clc
adc
sub
lds
repz
inc
leave
add
rcl
imul
xor
rol
jl
add
ss
pop
movzx
mov
adc
push
ret
test
lea
call
and
sub
and
or
test
sbb
inc
fstp
xor
loope
dec
(bad)
ss
lea
les
and
inc
test
dec
push
in
jb
dec
sub
sbb
xchg
pushf
and
test
push
ins
sub
(bad)
or
les
sbb
adc
jo
rol
sbb
sub
mov
push
xor
daa
das
loopne
cmps
es
(bad)
jno
test
and
(bad)
sbb
dec
cmp
scas
(bad)
dec
(bad)
nop
mov
push
enter
mov
das
jl
dec
pop
inc
adc
enter
ins
jl
push
pusha
lfs
dec
sahf
pop
test
les
adc
push
inc
add
repnz
push
retf
add
or
xchg
push
movs
retf
and
ror
gs
icebp
hlt
js
add
retf
push
stc
add
push
repnz
mov
fadd
sti
dec
xchg
cmp
loop
out
mov
sbb
in
ins
int3
call
sub
add
and
mov
pop
xor
int
jne
sub
daa
inc
test
add
call
sub
je
jmp
push
popa
xchg
cmp
jb
cdq
ins
sbb
into
xor
iret
std
pop
iret
mov
pop
cwde
dec
mov
sub
sar
and
aam
stos
or
loopne
xor
dec
or
push
sub
mov
push
aaa
mov
cmp
ror
jno
dec
test
rcl
sub
sbb
ret
pop
movs
iret
mov
vmread
adc
in
pusha
setge
rcr
mov
push
add
lea
lea
inc
aad
cmp
or
rol
stc
adc
rcr
aam
inc
adc
inc
aam
adc
push
xor
push
dec
pop
imul
(bad)
xchg
dec
cdq
fadd
push
sar
arpl
push
inc
ss
xchg
cwde
add
or
loopne
mov
dec
aad
stos
test
or
mov
nop
xchg
fisttp
lods
pop
add
fsubr
and
nop
jb
sbb
and
test
dec
push
xchg
aad
xchg
mov
push
sbb
sub
aam
mov
in
inc
cmp
xor
mov
add
dec
jl
sub
sub
ficom
leave
test
cmps
and
loop
xchg
sbb
and
and
dec
xlat
icebp
jb
loope
add
push
lea
push
inc
mov
popa
ins
dec
inc
push
jae
adc
and
adc
or
or
xchg
fsubr
dec
push
sbb
inc
jne
(bad)
cmp
sub
pop
sbb
cmp
sbb
rcl
sti
jo
or
and
mov
push
movs
ret
ret
push
or
das
fstp
adc
fnstsw
push
xchg
push
pop
ja
mov
push
fisttp
adc
mov
test
mov
fcmove
dec
fistp
inc
mov
inc
in
fmul
mov
adc
mov
in
movs
xor
fisubr
mov
adc
push
imul
lods
inc
and
fstp
push
and
mov
rcl
pop
pmulhuw
aam
stos
leave
cwde
cs
sbb
push
fwait
aam
adc
push
repnz
ficom
test
inc
aad
push
or
push
sbb
add
push
xor
(bad)
pusha
sbb
inc
in
pop
jmp
outs
sbb
xchg
and
clc
test
loopne
mov
xchg
jno
inc
push
dec
das
cwde
arpl
loopne
mov
test
in
loopne
sbb
xor
sbb
loope
js
cmp
sub
loope
loop
sbb
cdq
fs
dec
lea
cs
jl
xchg
mov
cld
loope
inc
call
push
cmp
shl
loop
pushf
mov
(bad)
or
sbb
pushf
add
push
lea
aaa
in
test
adc
test
mov
jecxz
clc
mov
pop
mov
push
xchg
xchg
and
in
test
mov
push
push
sbb
in
xchg
adc
push
push
inc
mov
inc
inc
xor
je
in
loopne
mov
imul
dec
out
or
add
int
stos
or
fs
adc
(bad)
sub
sbb
dec
or
fnstcw
je
sub
mov
push
call
push
inc
(bad)
jae
jmp
mov
xor
call
add
movs
call
push
clc
call
sbb
int3
and
in
nop
daa
ret
dec
mov
sbb
bound
xor
cmps
jmp
dec
lds
ins
or
adc
add
scas
and
pop
sbb
jle
push
leave
or
jmp
mov
inc
dec
pop
or
jmp
push
push
icebp
add
cdq
xchg
ss
jecxz
repnz
jmp
in
and
or
dec
in
movs
stos
mov
mov
(bad)
adc
push
mov
add
cmc
aad
sbb
movs
inc
je
in
leave
add
push
in
lds
and
sbb
adc
mov
mov
sub
in
in
in
or
pusha
movs
and
and
push
out
das
sub
bound
push
rcl
out
clc
out
sbb
out
jo
and
adc
adc
sub
mov
inc
adc
test
repz
cmp
xor
or
push
or
mov
aad
icebp
add
mov
icebp
and
jbe
xchg
mov
push
icebp
ja
or
cmc
sub
repnz
les
ins
stos
mov
fsub
xor
push
nop
and
xchg
pop
xchg
loopne
mov
push
mov
mov
repz
push
in
jb
inc
repz
sbb
aam
pushf
repz
rep
or
pusha
add
mov
mov
dec
aam
nop
pushf
pop
jge
hlt
shl
test
rcl
or
cmc
or
leave
shl
cmc
and
and
jl
jno
add
enter
sub
add
idiv
(bad)
rol
ins
mul
test
jae
test
jno
pop
inc
hlt
inc
neg
and
inc
xor
scas
hlt
or
fidiv
pop
loope
repnz
scas
pop
lds
clc
stos
cmps
push
adc
pusha
les
push
jae
movs
bound
jno
inc
mov
clc
clc
xor
lds
or
or
loopne
shrd
or
adc
or
mov
xor
mov
cmp
mov
sbb
cli
xchg
in
test
aam
ins
mov
add
inc
iret
add
lock
mov
mov
leave
xchg
in
jmp
xor
fmul
adc
sbb
and
pop
loopne
inc
cmp
push
ins
add
js
sbb
cmp
mov
sbb
xor
mov
inc
push
dec
loopne
mov
int
std
lds
adc
fs
push
lods
inc
fdivr
in
cmp
(bad)
cwde
lea
ror
mov
or
mov
xchg
mov
inc
cwde
push
enter
cmp
xchg
cld
sub
push
push
sub
lods
or
add
inc
in
sbb
jo
mov
push
mov
xor
or
cwde
outs
daa
xchg
or
shl
dec
call
mov
sub
nop
push
and
in
test
cmp
ror
inc
cmps
xchg
test
sub
inc
leave
test
xor
and
sbb
sub
dec
dec
je
cmps
xchg
test
sub
and
test
push
xor
cmps
xchg
mov
sub
push
pushf
fdivr
pop
rol
or
or
or
or
push
and
sahf
or
ret
mov
jo
fsub
jnp
or
aad
popa
pushf
shl
sbb
loopne
lods
cmp
push
pusha
arpl
call
ss
in
fisub
mov
pop
jno
push
cmp
sub
ins
fdivr
push
pushf
outs
xor
pusha
dec
(bad)
or
setge
or
xor
test
push
cmp
cmps
xchg
test
ret
add
out
or
sbb
popa
add
push
jo
fld
in
in
shr
mov
test
ss
xchg
leave
cld
shl
sbb
xor
(bad)
dec
pop
imul
push
push
stc
mov
(bad)
inc
pop
or
lea
cmps
sbb
fsub
das
mov
xlat
sub
ret
test
or
add
or
out
mov
mov
pop
xchg
dec
loopne
inc
xchg
mov
aam
add
in
fwait
mov
sbb
push
push
aam
inc
fld
daa
cmp
dec
les
es
nop
or
push
stos
lea
xor
or
retf
xchg
push
loopne
pop
ror
inc
sub
push
shl
jmp
cs
mov
adc
inc
int3
fistp
adc
lods
test
xor
outs
cmp
or
jl
or
jbe
or
adc
push
inc
es
in
xor
aad
(bad)
and
mov
dec
push
dec
adc
or
push
xor
add
inc
adc
ret
pop
jno
xchg
add
adc
(bad)
push
(bad)
jno
xchg
cwde
(bad)
movs
adc
push
arpl
leave
adc
or
ss
inc
iret
mov
push
push
sub
xor
or
sbb
popf
mov
repz
mov
or
js
sub
leave
movs
and
inc
pop
inc
sub
hlt
jo
jge
mov
jp
push
jg
sbb
inc
inc
ins
xchg
test
or
cmp
lea
sbb
adc
push
sbb
rcr
jecxz
(bad)
movs
or
jb
ins
pusha
sbb
loop
jb
mov
sbb
sbb
mov
punpckhdq
sub
or
mov
push
dec
mov
adc
mov
fdiv
nop
mov
xor
fs
jno
sbb
add
aam
cmp
ja
movs
adc
fcom
js
rcl
inc
test
and
lock
fld
(bad)
rep
sbb
dec
test
(bad)
sbb
jns
sbb
jmp
test
or
cmp
or
jne
inc
cwde
push
adc
or
add
cmp
jno
or
cmps
aam
adc
jne
imul
sbb
pop
mov
lahf
push
inc
mov
and
pusha
ficom
and
inc
sbb
js
inc
jg
and
loope
cmp
or
dec
sub
push
rol
xor
pop
mov
dec
push
(bad)
mov
nop
xchg
arpl
xor
es
xchg
inc
cmp
fsub
nop
xchg
inc
inc
inc
or
adc
leave
and
adc
leave
and
push
jns
test
dec
mov
mov
sub
push
loopne
movs
inc
shl
or
mov
sbb
mov
test
fs
inc
xchg
xor
cmp
pushf
push
pushf
inc
enter
loop
and
and
js
mov
fs
pop
jne
mov
fld
and
shl
adc
pop
movs
add
jo
frstor
fisub
or
jg
and
sub
ins
mov
push
sub
es
push
push
fisttp
stc
inc
int3
ret
cmp
fnstsw
jo
shl
mov
xchg
test
mov
pop
cmp
sub
je
adc
enter
sub
fsubr
mov
jb
ja
aam
inc
es
ins
mov
xchg
cwde
fcomp
mov
les
mov
jecxz
sub
inc
dec
sub
ins
mov
push
in
or
in
push
jb
icebp
shl
leave
push
cmp
mov
sbb
mov
ficom
call
ret
mov
sub
test
call
xchg
ror
cs
sub
cmps
xchg
test
xchg
pushf
and
dec
adc
enter
ja
add
pop
movs
inc
int3
stos
push
mov
sub
xchg
clc
xor
push
jmp
jb
daa
adc
jmp
add
repnz
call
dec
xor
nop
add
xor
mov
mov
pusha
and
fsubr
push
mov
imul
in
jbe
cmp
mov
mov
in
adc
and
ins
popf
xchg
es
shl
lfs
in
xor
lea
daa
xor
cdq
add
and
lea
test
test
in
xor
leave
and
call
pushf
mov
xor
cs
enter
lods
inc
fcom
inc
jno
fwait
mov
inc
ss
or
inc
popf
test
stos
xor
ror
push
cwde
adc
cli
outs
out
dec
int3
xchg
adc
lods
push
imul
pop
xor
and
scas
sbb
cdq
pushf
inc
cmps
fdiv
enter
imul
inc
shl
push
jb
dec
test
mov
jp
pop
push
xor
sbb
punpcklwd
cmp
jge
inc
inc
jns
inc
arpl
rcl
les
iret
xor
pop
enter
jge
cmp
and
cmp
xchg
cld
loope
ret
push
inc
dec
jb
nop
(bad)
enter
jb
mov
pop
add
imul
not
inc
pop
sub
inc
dec
cmp
inc
nop
pop
adc
xchg
push
xchg
ins
test
enter
inc
xchg
cmp
xor
adc
daa
dec
push
dec
fsubr
mov
pop
and
sub
xchg
mov
push
repnz
xchg
les
in
mov
push
push
pushf
fs
imul
inc
int3
call
mov
and
cmp
les
dec
xor
nop
int3
call
nop
mov
mov
mov
xor
and
mov
pop
cwde
aam
leave
and
adc
xchg
dec
les
icebp
adc
test
outs
sbb
call
mov
fld
sbb
dec
jg
and
mov
mov
mov
nop
xlat
outs
and
add
sbb
sbb
mov
fwait
cmp
jae
cmp
popf
in
push
fwait
int
add
or
dec
and
push
jmp
and
jl
es
push
mov
movs
push
inc
dec
dec
push
push
scas
dec
hlt
sub
jmp
iret
mov
pusha
nop
xchg
dec
sub
mov
push
sub
dec
movs
movs
test
mov
out
cmp
fcom
out
mov
call
movs
rcl
or
hlt
clc
or
xchg
cld
add
add
lods
outs
mov
jb
ss
and
inc
ss
fisub
inc
es
or
xchg
cmp
dec
je
dec
movs
dec
push
push
pop
fstp
cs
pop
and
rcl
push
loope
adc
xor
sets
outs
(bad)
add
in
adc
cmp
or
jne
mov
mov
add
jecxz
mov
xchg
mov
adc
loop
imul
jnp
jecxz
adc
adc
test
not
pop
cdq
mov
push
inc
or
cmp
mov
jb
adc
and
loop
cmp
cmp
loopne
adc
sbb
pop
cmp
leave
mov
pushf
push
push
adc
loopne
cld
into
jecxz
(bad)
outs
push
in
call
xchg
jmp
add
and
pop
mov
loope
(bad)
or
cmp
ret
adc
xor
sahf
test
inc
fdiv
movs
and
mov
xchg
adc
or
xor
and
repnz
fst
mov
sbb
arpl
int3
adc
js
and
daa
aam
in
mov
jl
ins
addr16
fcomp
inc
cmp
adc
idiv
mov
ret
sub
add
mov
add
aas
cmp
dec
test
call
iret
repz
cwde
xor
call
adc
jns
out
daa
xor
sahf
out
imul
stos
mov
int3
xlat
in
cmp
repz
add
cmp
repz
cmp
pop
iret
repz
data16
xchg
cmp
mov
leave
aam
ds
repz
cmc
add
or
jns
out
and
inc
sahf
out
sahf
dec
pop
arpl
xchg
push
aaa
adc
jns
iret
repz
bound
ftst
sahf
ja
out
cli
push
cmp
push
ins
jns
sahf
out
cmps
mov
rcr
dec
push
je
add
repnz
fild
dec
fisubr
mov
push
nop
fcomi
fadd
dec
inc
pushw
push
fmul
es
sbb
jmp
jb
pop
inc
inc
outs
ins
bound
outs
js
ins
addr16
pop
mov
dec
(bad)
push
(bad)
call
rol
cld
not
dec
into
sbb
lds
mov
dec
add
add
inc
add
call
mov
mov
fcom
sbb
cmps
fisttp
or
ficomp
pushf
dec
push
pop
mov
fwait
int
dec
add
inc
sub
mov
loope
sbb
not
(bad)
imul
add
call
add
jns
xchg
fucomp
push
fwait
das
pop
repz
cmp
sbb
sbb
pop
es
ss
push
out
push
ficomp
mov
sbb
js
xchg
mov
pushf
in
push
mov
pop
add
xchg
dec
sub
stc
xor
clc
daa
sbb
in
in
lds
fbld
paddd
dec
add
jl
js
dec
ficomp
jo
fild
rcr
adc
inc
ds
sbb
addr16
cmp
fisubr
push
pushw
bound
sbb
push
add
fbld
dec
and
push
loope
xchg
push
push
inc
pop
dec
(bad)
(bad)
test
pop
or
dec
dec
push
das
pop
dec
dec
inc
dec
mov
ds
push
les
or
push
mov
xchg
lahf
dec
fmulp
leave
jg
push
retf
test
daa
mov
leave
imul
cs
in
(bad)
(bad)
jg
inc
jne
imul
popa
ins
ins
adc
jb
outs
inc
popa
sbb
ror
mov
sub
xlat
add
jle
fiadd
ss
ds
pop
or
pop
sbb
outs
(bad)
jle
pop
inc
dec
dec
inc
ins
add
adc
push
push
mov
cdq
std
pop
and
push
push
pop
push
and
inc
dec
push
neg
call
les
and
ds
xor
sahf
ins
data16
daa
dec
inc
push
add
inc
sbb
xchg
push
dec
jbe
inc
adc
inc
pop
inc
bound
daa
dec
lock
or
sar
outs
(bad)
pop
into
arpl
gs
jne
inc
imul
xchg
cmps
ins
add
push
push
je
jb
outs
neg
test
push
jne
dec
outs
push
outs
cs
inc
arpl
imul
imul
push
outs
imul
je
jne
inc
gs
js
outs
sti
popa
jbe
adc
mov
push
cmp
jae
push
push
inc
pusha
inc
sbb
cmovbe
push
gs
fistp
add
(bad)
imul
ins
push
gs
lds
gs
je
inc
js
and
in
ss
pop
pop
popf
push
or
pop
mov
rcl
int
sub
add
push
xor
add
outs
push
add
fs
iret
sbb
lea
mov
mov
ins
or
mov
popa
loope
ins
hlt
out
jne
ins
daa
scas
cmp
lahf
push
imul
ins
mov
cmp
pop
push
fnstsw
and
dec
inc
push
sub
dec
fisub
ja
jp
cmp
daa
inc
gs
jo
cvtpi2ps
ins
jle
push
ds
scas
push
or
or
inc
jbe
in
jo
add
imul
jmp
lock
ficom
mov
(bad)
loop
and
outs
xor
cmp
out
cmc
push
jo
out
push
inc
pop
pop
push
adc
sbb
cs
pop
adc
outs
jo
and
ja
gs
dec
imul
shl
xchg
jb
imul
rcl
(bad)
pop
jno
add
or
pop
dec
outs
arpl
mov
stos
lahf
outs
lods
pop
enter
es
fisttp
cwde
pop
and
aaa
aaa
push
push
push
rcpps
inc
in
out
cmp
dec
inc
inc
aaa
inc
inc
and
xor
xor
xor
cmp
fisubr
xor
xor
aaa
adc
xor
ds
data16
je
and
sub
out
pop
or
xor
imul
or
ja
dec
push
dec
inc
pop
and
pop
ss
xor
xor
pop
lea
xchg
push
inc
dec
ins
in
lahf
or
xlat
gs
data16
mov
fld
adc
mov
push
push
jle
add
push
mov
inc
add
jbe
adc
pop
mov
mov
pop
sub
and
pop
ins
outs
jne
mov
inc
push
jne
pushf
or
dec
sub
fstp
push
and
sub
aas
inc
not
push
out
sub
pop
jmp
sbb
gs
and
mov
out
pop
inc
dec
popa
or
add
add
and
push
mov
int3
xchg
sar
xchg
clc
in
push
fistp
add
test
adc
inc
mov
jnp
cmp
andnps
sbb
inc
xor
jb
ret
push
push
fist
xchg
shl
ins
adc
mov
fwait
int
mov
push
cmp
jmp
sub
mov
not
mov
ret
xor
pop
cmp
sbb
fst
aad
jo
pop
jb
and
lmsw
mov
and
mov
scas
push
not
add
cwde
sahf
sub
jae
and
sub
push
enter
cmp
pop
jp
pop
add
ins
ins
data16
sbb
js
push
xor
dec
sub
retf
push
aaa
inc
inc
push
fcom
imul
in
add
cmp
sub
das
or
and
xchg
loop
in
movs
adc
out
adc
sbb
cdq
nop
iret
or
add
push
xlat
add
bound
and
(bad)
add
xchg
add
and
fwait
dec
inc
out
inc
mov
pop
xchg
scas
pop
adc
push
and
addr16
pop
mov
pop
xchg
and
jae
adc
jb
add
and
jle
shl
jnp
push
push
dec
mov
and
sbb
addr16
iret
inc
pop
popa
stc
sub
push
xchg
das
inc
outs
outs
shl
lods
fnstenv
hlt
pop
mov
test
out
mov
ins
add
je
pop
cmp
or
aaa
xchg
jne
dec
gs
fs
jnp
iret
pop
lahf
pop
cmps
pop
scas
dec
dec
dec
dec
daa
mov
mov
pop
push
adc
fdiv
aaa
mov
pop
mov
mov
fisttp
xor
ja
jns
dec
outs
push
int3
imul
jae
bound
dec
arpl
inc
jne
mov
sbb
fcomp
popa
aad
inc
jb
mov
imul
sub
daa
inc
popa
arpl
(bad)
int3
inc
out
ret
cmp
pop
fs
into
or
mov
cmps
jns
xlat
pop
sub
outs
jne
xor
fbstp
dec
mov
and
jmp
aas
and
or
cmp
cmp
add
pop
adc
ds
cmp
ds
daa
and
outs
xchg
aam
ss
pop
into
std
jl
addr16
jae
jno
outs
and
jb
outs
inc
add
(bad)
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
jle
add
pop
pop
pop
popa
bound
scas
mov
mov
imul
icebp
(bad)
jg
jno
pushf
jne
ja
jns
xor
xor
xor
ss
cmp
sub
add
mov
and
data16
or
and
and
int3
ins
into
imul
inc
outs
arpl
jo
hlt
lock
mov
sbb
mov
jae
adc
cmps
mov
and
popfw
inc
sbb
pop
and
cmps
das
imul
push
arpl
int
sub
dec
add
pop
add
ret
jb
and
mov
mov
xchg
push
cmps
arpl
aas
ds
cmps
pop
cmp
out
cmp
comiss
daa
push
outs
loope
mov
add
inc
shr
push
ror
push
arpl
ds
pop
pop
sbb
pop
and
and
push
ret
sub
sub
cmp
daa
test
mov
js
and
sbb
daa
inc
int3
mov
mov
shl
jae
push
dec
lods
in
adc
dec
outs
inc
pushf
xchg
and
pop
fldcw
and
cmps
sahf
into
arpl
jbe
add
xchg
sbb
aam
aam
(bad)
scas
inc
in
addr16
outs
jl
ret
sbb
ficom
sbb
mov
dec
dec
and
and
lea
pop
shr
je
imul
ss
inc
pop
jb
pop
cmp
mov
ja
adc
leave
jne
dec
xor
js
pop
pop
data16
mov
leave
mov
push
stc
rcl
sbb
push
cmp
dec
push
fild
xchg
push
sub
sub
jl
jl
dec
cdq
dec
imul
push
sub
or
aaa
dec
mov
jge
dec
scas
and
fwait
inc
cld
fucomi
sub
inc
inc
dec
pop
dec
daa
inc
push
dec
push
push
inc
mov
push
lea
mov
mov
pop
sahf
popa
hlt
add
cs
pop
cmp
in
mov
or
push
push
outs
gs
jge
pop
sub
loop
push
sub
push
or
jmp
xchg
fbld
bound
jle
test
outs
js
xor
inc
jne
jne
xor
fcomp
stos
xor
xor
xor
cli
inc
mov
pop
push
aas
xor
add
fcmovbe
pop
dec
push
xor
addr16
inc
stos
add
dec
cmp
pop
xor
push
mov
jae
mov
stos
in
mov
ror
adc
mov
jb
xchg
data16
test
inc
push
adc
mov
retf
aam
outs
push
jne
dec
outs
and
and
repz
adc
xchg
inc
mov
or
xchg
in
xor
and
loop
fnstenv
jp
popa
movs
and
and
mov
stc
sub
cs
push
test
pop
das
inc
jge
jae
or
pop
add
(bad)
hlt
fs
pop
js
mov
adc
jae
gs
xor
sbb
dec
cs
cdq
pop
retf
push
xor
imul
pop
push
jae
rcr
sbb
jne
or
push
jo
push
push
or
(bad)
jle
pop
dec
or
push
dec
sbb
shr
es
sbb
add
add
pop
sub
pop
xchg
inc
outs
ins
or
adc
dec
jae
push
daa
push
pushf
xchg
or
fcom
sti
jo
movs
ins
rcr
pop
cmp
jb
call
cmp
push
imul
stos
mov
aaa
add
xor
and
int
loope
cmp
inc
mov
xor
mov
adc
mov
sti
dec
outs
addr16
fcom
aaa
(bad)
hlt
sbb
push
and
mov
(bad)
push
jns
es
imul
sub
dec
imul
and
inc
pop
mov
loope
gs
push
mov
(bad)
adc
imul
or
js
dec
popa
or
hlt
jb
dec
in
pop
sbb
and
les
ret
xchg
push
sub
out
or
cmps
mov
push
shl
and
shl
jne
pop
pop
push
retf
mov
into
pop
int3
popa
jo
inc
cmp
mov
bound
cmp
ret
add
aad
add
jp
jae
pop
test
nop
sbb
fs
xchg
fs
(bad)
xor
rcl
cmp
fs
inc
inc
xor
int3
sbb
inc
dec
outs
aad
stos
retf
outs
test
inc
rcl
pop
xlat
pop
arpl
jp
leave
add
dec
ins
dec
mov
or
xor
inc
gs
push
stos
call
sub
mov
out
xchg
ret
xchg
aaa
stc
cld
jbe
sub
add
push
test
add
loopne
and
mov
dec
jb
loopne
cs
sub
jp
das
ja
popf
cs
cmp
mov
fwait
and
push
jbe
cmp
mov
mov
test
aas
out
xchg
in
adc
out
add
add
int3
inc
add
out
ds
sub
cmp
int
frstor
sub
pop
mov
ss
dec
inc
xor
dec
dec
cdq
aad
jbe
dec
mov
xor
jg
iret
push
cwde
mov
scas
das
and
add
pop
test
dec
mov
stos
cmp
ja
pop
push
(bad)
inc
dec
sub
fadd
in
pop
xchg
mov
jg
dec
inc
push
push
push
inc
sbb
ins
das
das
sbb
dec
push
push
push
jns
sbb
sbb
(bad)
imul
push
xor
cmps
ret
rcl
iret
daa
pop
ficom
and
jnp
retf
ins
add
mov
xchg
mov
mov
add
sub
aas
inc
dec
jmp
stos
xchg
rcl
das
pop
xchg
aas
or
inc
inc
push
dec
push
dec
xchg
iret
jmp
inc
push
push
dec
dec
in
push
sbb
fisubr
mov
loope
xchg
sbb
inc
xchg
pop
cmp
movs
es
ja
rol
in
xor
push
outs
jb
xor
(bad)
addr16
arpl
push
jae
mov
jne
mov
mov
out
adc
add
enter
rol
hlt
pop
add
shr
lods
push
pushf
pusha
adc
jmp
(bad)
or
xchg
mov
or
shl
pop
xor
jp
xor
mov
push
pop
out
cld
sahf
test
adc
addr16
gs
gs
jb
les
outs
add
loopne
gs
pop
xor
ret
mov
mov
and
adc
push
jne
daa
jne
pop
aad
xor
cmp
inc
xor
sub
sbb
jnp
mov
or
or
pop
jbe
jo
inc
fs
sub
push
inc
loope
jecxz
out
popa
bound
push
(bad)
jo
or
fs
dec
dec
ficom
fistp
ins
movs
push
and
jns
bound
in
test
mov
popa
mov
xchg
add
or
ins
repz
push
pop
dec
mov
add
mov
push
push
adc
gs
pusha
js
out
add
push
mov
dec
test
sub
inc
pminsw
in
jl
das
pop
imul
fistp
push
jno
push
das
(bad)
push
std
push
(bad)
test
imul
fld
pop
xor
dec
jg
jae
adc
lahf
repz
add
je
ficomp
push
fs
sar
sahf
add
aas
push
pop
(bad)
cmp
and
outs
ror
jo
pushf
(bad)
pop
sar
adc
enter
cs
inc
jae
push
add
jo
or
js
cmp
or
rcl
mov
nop
sub
inc
daa
addr16
fldcw
pop
jo
sub
pop
add
imul
jb
and
or
push
jle
arpl
cmps
aas
jbe
jb
fsub
xchg
es
data16
push
add
mov
ins
and
sahf
clc
jno
das
dec
dec
aam
xor
sub
test
or
das
leave
cmp
pop
call
into
jp
or
addr16
jns
popa
(bad)
inc
cmp
lods
dec
and
inc
and
popf
add
cmp
in
bound
sbb
dec
ja
inc
sub
dec
cmp
js
out
pop
cmp
fild
loopne
and
pop
sbb
jae
sub
sub
and
add
(bad)
mov
adc
test
mov
mov
pop
pop
inc
fild
or
dec
add
sbb
jns
test
push
sub
xchg
cmp
and
test
stos
sub
push
xor
or
push
aam
(bad)
outs
pop
jae
adc
js
pop
sbb
dec
out
out
or
add
loopne
nop
pop
sbb
mov
push
aas
inc
push
jle
or
cmp
ret
pop
push
dec
in
push
outs
loope
inc
pop
jecxz
nop
inc
dec
dec
in
sub
inc
sbb
scas
aad
mov
mov
mov
call
sub
push
popf
daa
bound
ror
into
or
outs
addr16
mov
das
sub
sti
or
or
or
adc
js
fadd
arpl
inc
cmp
jp
mov
inc
punpckldq
bound
add
xchg
or
popa
add
sbb
shr
fs
and
sub
ja
xor
(bad)
jne
xchg
xchg
cmp
jge
jo
in
popf
mov
sub
push
or
addr16
ins
dec
imul
cmp
jp
aas
cli
bound
cwde
cmc
and
aas
dec
mulps
push
dec
sub
sti
mov
dec
pop
dec
dec
pop
push
inc
dec
dec
push
inc
das
add
push
cmp
and
jle
aas
nop
push
push
dec
inc
adc
inc
not
sbb
or
push
jbe
push
jp
pop
imul
arpl
adc
in
cdq
div
push
jne
adc
das
inc
mov
or
mov
stc
push
push
cld
inc
fwait
mov
data16
jo
mov
jo
and
loopne
pop
bound
fcmovbe
or
push
inc
inc
push
dec
push
pop
push
cmp
cmp
and
mov
pop
dec
inc
inc
pop
inc
inc
call
cmp
mov
dec
adc
add
pop
dec
cld
sbb
ror
in
mov
push
mov
out
inc
ins
pop
lahf
dec
dec
imul
daa
les
fbld
push
lock
dec
inc
(bad)
dec
pop
mov
cmp
pop
dec
inc
dec
inc
push
inc
push
jb
or
ja
dec
mov
inc
sbb
push
aas
ins
cmps
push
cs
and
aaa
or
dec
and
jmp
sbb
test
cmps
jbe
or
inc
inc
push
repnz
bound
iret
push
xor
mov
call
jae
jb
xor
gs
das
jae
mov
adc
cmps
sub
jg
add
dec
adc
cmp
cmps
inc
stos
push
gs
add
add
fiadd
push
movs
push
dec
push
iret
nop
clc
pop
pop
jle
jnp
ret
mov
and
pusha
fistp
cmp
pop
cmp
ficomp
(bad)
fwait
and
cmp
pop
sub
ins
sbb
je
push
rcl
jbe
mov
jo
pop
jbe
retf
adc
ja
cmps
pop
inc
test
adc
pop
int3
out
movs
xchg
cwde
out
jno
(bad)
aaa
rcl
cwde
xchg
add
nop
bound
inc
adc
push
jo
aam
dec
addps
inc
push
fsub
mov
add
dec
movs
add
or
cmp
xor
fadd
pusha
push
sub
add
in
cmps
and
sub
push
push
dec
ja
rcr
inc
fcom
push
dec
pop
inc
pop
bound
(bad)
shl
dec
gs
lods
sar
mov
dec
dec
inc
add
shr
push
inc
cdq
pop
dec
cs
xchg
(bad)
jb
pop
iret
pop
xor
and
jo
dec
pop
inc
clc
inc
pusha
pop
add
sbb
or
adc
ficom
ins
ror
call
mov
push
and
push
sub
adc
push
xchg
daa
push
movs
and
adc
dec
push
sub
jb
mov
inc
ss
jb
inc
fcom
fcomp
push
push
aam
jo
or
imul
xor
aaa
or
pop
daa
cmp
dec
inc
cmp
inc
aad
imul
sub
xor
sbb
push
fisubr
adc
fisttp
outs
aas
inc
pop
sub
daa
pop
sub
into
push
xor
mov
jg
and
xor
xor
cmp
fwait
dec
stos
test
xor
test
ins
imul
pop
add
mov
adc
add
xor
cmp
mov
aad
aas
ss
xor
outs
loope
xor
in
or
or
push
pop
mov
push
jle
bound
sbb
mov
xlat
bound
fcom
shl
add
xlat
inc
loope
inc
push
dec
push
out
dec
sbb
inc
dec
xchg
mov
xlat
cs
and
sbb
loope
popa
jbe
xchg
pop
mov
repnz
adc
cmp
cmp
jno
inc
push
repnz
push
(bad)
jne
cs
dec
dec
or
loope
in
push
push
push
add
inc
adc
sbb
add
and
mov
das
inc
inc
push
sub
sbb
addr16
add
int3
xor
cmp
add
add
pop
stos
inc
mov
hlt
dec
sub
push
lock
rcl
jne
fisubr
in
mov
in
jo
(bad)
and
push
ret
push
gs
lods
sbb
and
xor
sbb
out
xchg
ret
pop
aas
jae
addr16
pop
sbb
cli
cmp
add
push
sbb
rol
(bad)
mov
mov
outs
mov
adc
pop
fcomp
sti
das
add
jg
je
call
pop
inc
ficom
repz
rcl
inc
and
sub
scas
mov
jne
stc
pop
test
lahf
sub
or
nop
add
test
inc
nop
jecxz
pushf
jae
push
out
mov
lea
push
dec
push
push
jne
aad
inc
cmp
nop
or
mov
aas
je
fst
jo
xor
cmp
scas
mov
adc
arpl
sbb
or
push
push
loop
lods
inc
lock
inc
das
pushf
ins
outs
xor
out
(bad)
into
sub
xchg
xor
daa
repnz
and
xchg
and
cmp
(bad)
das
movs
ret
pop
rol
inc
or
or
fs
dec
pop
jg
sbb
mov
inc
inc
cmp
test
out
adc
lock
push
bound
js
sbb
add
cmps
and
outs
cmps
inc
pop
mov
sub
lods
adc
packuswb
mov
scas
arpl
pop
push
mov
cmp
add
cmps
lock
and
test
jmp
xchg
mov
aam
outs
sti
popf
mov
dec
pop
xlat
mov
xchg
xchg
(bad)
cwde
inc
inc
mov
or
sahf
cmp
sbb
cmps
test
dec
cmp
push
ins
inc
dec
int3
fsub
sub
popa
out
aad
mov
pusha
sbb
jne
xchg
nop
cwde
out
jo
push
sub
cmps
das
pop
cs
lea
jle
pop
inc
jne
gs
sub
jno
adc
scas
mul
stc
mov
mov
addr16
rcl
xor
mov
sbb
xchg
xchg
inc
outs
push
inc
xor
inc
sub
mov
imul
iret
dec
cmp
imul
ins
sub
dec
dec
xor
sub
cmps
push
sub
pop
mov
push
out
add
pushf
push
dec
cld
popf
add
adc
pop
jmp
add
rcr
ss
inc
xor
nop
loope
cmp
scas
aas
mov
rol
ror
xchg
push
arpl
inc
pop
ret
jae
or
dec
and
rol
mov
(bad)
popa
test
push
sbb
inc
vmread
jns
add
mov
xor
(bad)
mov
inc
rcr
aaa
bound
out
mov
mov
push
popa
out
test
cmp
aas
pop
ret
call
iret
pushf
add
add
push
add
loopne
ja
stc
ret
sub
out
jg
rol
inc
div
and
and
mov
jmp
and
or
retf
cmp
cmp
jecxz
push
jo
popa
jns
lea
jno
dec
add
add
inc
int3
movq
jae
and
out
pop
push
push
cmp
in
adc
add
dec
adc
lea
jo
mov
add
mov
addr16
pop
pushf
mov
bound
pop
or
mov
inc
bound
daa
aas
fsub
fidiv
dec
jae
ror
dec
gs
jo
imul
adc
or
push
mov
bound
mov
addr16
xchg
jno
jne
fnstenv
pop
(bad)
daa
mov
ja
leave
imul
aam
mov
push
and
out
add
pop
mov
data16
outs
sub
and
popa
push
add
or
push
sbb
lea
ret
inc
inc
pop
lahf
hlt
xor
je
mov
pop
or
and
mov
daa
mov
mov
push
inc
push
test
mov
int
div
add
sbb
cmp
hlt
sub
mov
mov
pop
cmp
seta
daa
or
jg
push
sbb
inc
push
adc
and
fsub
or
inc
inc
jl
pop
adc
add
aam
inc
push
inc
dec
push
in
fsubp
imul
fimul
inc
mul
push
push
in
mov
loop
inc
push
outs
iret
sbb
cmpps
das
(bad)
daa
inc
call
data16
mov
inc
and
int
jecxz
pop
sbb
and
mov
push
or
or
jbe
xchg
and
mov
cwde
cmps
repz
fdiv
mov
push
les
lds
cli
add
sub
imul
das
jbe
pop
push
mov
pop
push
dec
hlt
dec
add
(bad)
arpl
aaa
sbb
or
daa
push
mov
sub
(bad)
js
outs
mov
cmp
stos
imul
ja
inc
cmps
aas
call
jne
add
dec
xchg
(bad)
inc
sbb
push
mov
fmul
daa
xlat
adc
adc
test
imul
fistp
cmps
and
cmps
mov
popa
jo
pop
mov
dec
pop
fsub
inc
pop
mov
and
cld
adc
mov
stos
dec
add
and
js
mov
ss
push
push
mov
add
mov
pop
sbb
lods
das
dec
inc
into
lock
aaa
les
and
pop
je
pop
rol
ins
ja
out
dec
dec
sbb
sbb
jb
call
dec
mov
fisubr
jne
cs
and
push
push
or
fs
inc
push
(bad)
daa
ins
imul
aas
outs
xlat
inc
add
mov
sar
inc
bound
scas
mov
push
mov
aaa
mov
ficom
lahf
(bad)
push
inc
cmp
mov
push
enter
push
jg
daa
push
imul
pop
dec
mov
xchg
imul
cmps
and
dec
push
inc
mov
fisttp
add
dec
add
inc
mov
mov
les
fadd
inc
cmps
inc
jo
outs
and
jg
push
aas
not
inc
dec
inc
dec
inc
adc
int
stos
sbb
or
pusha
jge
das
sbb
add
inc
inc
xchg
inc
inc
dec
je
rcr
or
pop
sbb
add
outs
stos
pop
xor
cmp
inc
push
push
adc
adc
call
sti
sbb
and
and
add
xor
jb
push
movs
add
add
aaa
mov
pusha
and
pop
xchg
nop
jbe
inc
sub
and
inc
add
push
dec
inc
add
adc
pop
dec
bound
retf
aas
sub
xor
push
jno
and
lock
xor
inc
mov
addr16
jl
sub
adc
xchg
push
aad
and
jg
sbb
aas
sub
jecxz
ret
push
ret
inc
pop
inc
dec
mov
pushf
das
push
pop
inc
push
loopne
dec
(bad)
dec
fmul
dec
pop
push
inc
cld
loop
pop
sub
shl
fnstenv
outs
sub
daa
sbb
dec
iret
mov
gs
inc
push
test
das
pminsw
add
xchg
je
push
inc
mov
dec
sub
xor
push
xor
outs
sar
mov
push
adc
inc
push
bound
add
pusha
pop
mov
mov
xchg
aas
or
cs
sbb
inc
dec
inc
dec
inc
inc
mov
das
add
pop
xor
xor
pop
imul
pop
push
dec
retf
add
xchg
lock
inc
inc
pop
sub
(bad)
outs
test
xchg
push
or
aaa
cmp
je
sub
es
iret
mov
or
cmps
call
aaa
clc
aam
inc
test
or
sub
or
popa
jno
mov
inc
cmp
push
xor
ins
aas
xor
and
and
xor
or
dec
es
mov
pop
pop
cmp
ret
stos
or
sub
(bad)
call
rcl
(bad)
fmul
push
sub
js
or
dec
mov
loopne
inc
add
sub
jnp
inc
sub
and
sbb
scas
adc
or
inc
int
out
hlt
xchg
rol
mov
cmp
fadd
dec
push
aad
movs
xchg
adc
aad
aad
ins
sub
push
mov
(bad)
test
inc
and
jecxz
addr16
adc
add
rcl
out
daa
arpl
inc
inc
pop
inc
xlat
inc
xchg
das
push
inc
aaa
ret
test
loop
inc
(bad)
aam
sbb
daa
in
sar
scas
push
sbb
jmp
aas
leave
cmp
pusha
ja
imul
lods
lods
or
add
mov
jge
aaa
push
jbe
mov
dec
aas
adc
cmp
aad
mul
leave
ins
shl
push
add
dec
clc
(bad)
lock
xor
das
mov
fnstcw
ins
aad
or
add
mov
mov
dec
jno
pusha
mov
aas
clc
outs
dec
push
int
mov
push
inc
sbb
or
mov
ret
pcmpgtw
jbe
ins
sub
pop
inc
inc
inc
test
lods
inc
add
aas
push
push
push
sbb
(bad)
mov
inc
ret
or
(bad)
push
dec
inc
push
fistp
fadd
push
dec
pop
aas
inc
adc
xor
aaa
ja
ss
pop
fistp
movs
lea
test
aaa
ror
mov
mov
aam
cmp
pop
aaa
mov
mov
iret
pop
rol
inc
mov
mov
cmps
adc
movs
les
outs
inc
lahf
outs
dec
mul
push
or
lea
mov
dec
cs
inc
mov
outs
sbb
icebp
ret
xor
aas
jae
mov
inc
daa
push
pop
and
fild
mov
xor
(bad)
push
sub
outs
inc
ins
cmp
mov
jg
rol
addr16
xchg
mov
aaa
daa
xchg
fcom
mov
adc
mov
cmp
push
pop
ds
inc
pop
pop
aas
sub
push
ficom
push
pop
mov
pop
sbb
shl
push
and
into
inc
push
sahf
popa
shl
pop
add
(bad)
push
mov
sbb
push
dec
aas
mov
xor
fisubr
xor
adc
movs
pop
inc
xor
les
gs
inc
mov
das
pop
repz
mov
fild
mov
scas
cmps
and
movs
and
xlat
jnp
add
mov
ja
mov
push
and
lods
out
das
dec
das
fst
sub
fst
aas
and
sub
add
fmul
mov
inc
movs
pop
addr16
dec
shl
(bad)
(bad)
ins
das
push
pop
cmp
add
das
ins
test
pop
xchg
add
push
push
dec
imul
stos
mov
mov
cmps
sbb
out
ins
xchg
jp
adc
push
imul
movzx
fdiv
fist
clc
in
add
mov
pusha
sub
xchg
mov
cmps
aas
ja
push
push
dec
aad
dec
in
aam
dec
sbb
or
fdiv
(bad)
xchg
xor
sub
aas
add
mov
aas
sbb
mov
inc
data16
xchg
sub
adc
data16
or
push
js
pop
enter
pop
cs
pop
dec
push
test
adc
daa
mov
push
cmp
pop
(bad)
cli
js
dec
dec
les
pushf
shr
daa
mov
xchg
ins
mov
rcl
pop
inc
xchg
and
ficom
cmps
mov
push
dec
aas
mov
pop
cmp
dec
add
aas
push
(bad)
ins
mov
inc
mov
aam
not
xchg
mov
pop
dec
pop
cmp
cwde
ins
inc
add
ja
or
mov
pop
add
jbe
pop
inc
ja
popa
mov
out
ja
bound
mov
ret
mov
ds
jo
aaa
inc
inc
inc
retf
sar
xchg
sbb
push
das
ss
aam
lea
sbb
test
push
mov
jp
dec
fisttp
fbld
retf
xor
out
xchg
(bad)
(bad)
jg
mov
inc
arpl
mov
leave
xchg
out
add
inc
das
cmps
inc
bound
ins
cmps
es
in
or
mov
mov
vpminub
mov
(bad)
push
add
pop
inc
mov
sbb
mov
out
call
les
das
lods
loope
loopne
adc
(bad)
ja
stos
lea
pop
idiv
call
jmp
mov
out
aas
mov
nop
mov
dec
sub
ret
iret
sbb
shl
dec
das
dec
inc
fistp
push
jmp
addr16
fcom
pop
ret
daa
shl
ror
shl
aad
fwait
das
inc
push
push
jae
cmp
aad
jge
aad
(bad)
push
push
inc
in
adc
cmps
lods
ret
outs
dec
aas
pop
or
pop
in
lods
das
pop
daa
sub
in
outs
daa
mov
mov
daa
cmps
das
aaa
popa
mov
pop
jmp
or
push
(bad)
jecxz
outs
cs
dec
inc
dec
sbb
stos
cmp
cmps
imul
cmp
(bad)
mov
aas
push
push
pop
inc
lahf
add
inc
mov
cs
movs
aaa
mov
aaa
and
pop
push
retf
lea
pusha
ins
das
cmp
mov
xchg
cwde
scas
and
test
or
dec
aas
xor
aaa
(bad)
lea
cmp
push
loopne
inc
or
inc
retf
adc
and
popf
adc
jmp
jmp
mov
sbb
pop
pop
inc
push
and
push
jg
jno
fiadd
pop
or
fld
ja
fcom
aaa
dec
inc
pop
xchg
jbe
pop
mov
or
fdivr
aas
mul
sub
mov
sbb
push
nop
cdq
dec
adc
mov
add
cs
mov
mov
pop
jno
or
xchg
cs
mov
(bad)
mov
lahf
mov
xor
dec
inc
push
dec
shr
dec
push
arpl
dec
sub
sbb
sbb
push
add
mov
gs
(bad)
pusha
mov
xor
bound
inc
xchg
cmp
mov
or
pop
and
xor
ja
dec
push
sub
mov
and
xchg
push
aas
mov
mov
and
add
arpl
cwde
inc
sbb
add
pop
imul
shl
inc
js
mov
dec
test
bound
imul
or
int3
dec
shr
js
dec
sbb
xor
out
dec
dec
sub
aaa
imul
aas
movs
cmps
xchg
push
aas
pop
mov
outs
test
and
adc
scas
mov
push
adc
jmp
gs
addr16
or
pop
inc
pop
pop
jg
add
mov
sub
adc
jecxz
inc
add
push
push
inc
jnp
jge
pusha
adc
mov
inc
ja
mov
(bad)
inc
cmp
mov
cld
adc
adc
sahf
les
inc
jmp
inc
xchg
cmp
aas
cmp
and
mov
cld
outs
pusha
sbb
push
js
lea
xor
xor
sbb
ins
outs
loopne
pop
jae
and
sbb
test
daa
push
movs
mov
test
xor
cmc
ins
lods
fcomp
stos
cmp
cmps
loopne
inc
inc
inc
pop
inc
jl
adc
push
sbb
push
and
cmp
mov
addr16
adc
jae
shl
inc
popf
sbb
add
dec
movs
test
add
inc
adc
cwde
ror
adc
push
popa
lods
pop
jb
inc
pop
sub
cmps
out
mov
loopne
xor
(bad)
and
pop
adc
cmp
add
jbe
icebp
and
loope
pop
mov
adc
(bad)
push
inc
jle
sub
outs
add
mov
push
bound
loopne
xor
movs
mov
add
sub
jo
loopne
in
and
cs
push
inc
push
push
sub
cld
dec
or
adc
xlat
add
pop
(bad)
and
add
push
xor
pop
jo
stc
xchg
aas
sub
adc
and
fild
dec
sub
jbe
call
enter
adc
lods
push
and
cs
ror
xor
mov
pop
inc
push
adc
inc
cwde
xchg
inc
xchg
mov
movs
inc
js
outs
mov
xchg
xor
xor
push
pop
cmp
fwait
pushf
inc
sahf
inc
xchg
push
imul
adc
add
std
adc
dec
cs
ret
mov
xchg
mov
xor
das
inc
in
cmp
push
rol
in
nop
pop
push
mov
add
cmp
cmp
outs
das
test
fild
cmp
test
dec
mov
iret
inc
and
pop
push
stos
pushf
and
sbb
xchg
pop
fidiv
xor
xor
push
repnz
xor
pop
imul
jno
aaa
aaa
aaa
jno
mov
xor
das
and
idiv
push
push
inc
das
pushf
push
sbb
in
aaa
sti
outs
das
pusha
push
xor
les
jl
lahf
xchg
cli
inc
sahf
loope
inc
inc
dec
pop
jbe
pop
xchg
xchg
sar
mov
clc
ret
mov
push
stc
(bad)
aaa
mov
push
int3
cmps
test
in
imul
(bad)
xor
push
js
push
cmp
addr16
outs
retf
mov
sub
jae
inc
aam
pushf
jo
mov
ja
ret
scas
or
enter
add
add
pop
add
clc
xor
bound
(bad)
rol
nop
movs
test
lahf
sbb
lsl
inc
inc
add
fdiv
cld
jg
dec
add
dec
arpl
pushf
in
xchg
jmp
mov
inc
mov
dec
inc
cmp
jno
stc
mul
jbe
xor
loope
add
dec
nop
int
xor
pop
add
cmovbe
mov
cmp
mov
push
data16
scas
jbe
das
add
dec
mov
imul
cmp
movs
stc
jno
adc
loope
test
xor
mov
pop
lahf
dec
call
dec
dec
add
(bad)
ins
fisttp
and
inc
pop
add
movs
ins
inc
cmps
jp
inc
pop
outs
popa
jo
or
xor
gs
aam
sbb
mov
cmps
and
pop
jo
(bad)
outs
mov
aas
jae
sbb
push
inc
push
dec
and
sbb
test
sbb
dec
fs
mov
xchg
sub
add
dec
test
idiv
sub
add
popa
test
push
sbb
add
mov
xlat
dec
pop
xor
push
imul
out
push
sub
fs
xor
pop
jl
adc
sbb
add
jnp
pop
add
mov
push
enter
add
repz
rcl
sbb
and
pusha
mov
cmp
rcr
pop
add
cs
xor
xor
cs
inc
and
lock
fs
cmp
sub
add
fild
pop
add
pop
xchg
push
push
push
adc
outs
adc
pop
adc
add
les
sub
pop
inc
test
pop
mov
sar
ret
xor
(bad)
mov
jns
push
inc
ins
int3
add
pop
mov
fcom
inc
pop
xchg
add
add
push
cmps
add
(bad)
pop
mov
jnp
imul
inc
xchg
inc
add
sub
aas
cmc
cmps
inc
iret
sahf
or
jl
adc
test
cmp
cwde
push
inc
call
or
aad
out
sbb
and
test
iret
lds
xor
mov
int
lahf
or
pop
jbe
inc
mov
icebp
pop
popf
sub
pop
cmps
cs
imul
add
mov
aas
xchg
xor
ja
popa
(bad)
(bad)
(bad)
dec
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
aad
mov
rcl
mov
(bad)
(bad)
(bad)
mov
nop
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
call
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
das
xor
or
outs
pop
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
jmp
fild
mov
xor
fild
or
shr
cmp
(bad)
(bad)
mov
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
(bad)
(bad)
dec
or
and
or
adc
stos
sbb
data16
inc
(bad)
dec
mov
rcr
mov
adc
push
mov
call
xor
(bad)
call
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
fdiv
test
or
in
xchg
push
ins
jnp
cs
(bad)
(bad)
jg
or
(bad)
fnstenv
adc
mov
mov
bound
ficom
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
(bad)
(bad)
push
dec
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
(bad)
(bad)
jmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outs
and
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cdq
adc
(bad)
cmp
mov
cmp
lods
ins
mov
pop
fs
mov
ins
shl
jmp
movs
(bad)
(bad)
(bad)
fild
push
fdiv
or
test
fs
ds
or
or
push
dec
xchg
(bad)
or
sahf
pop
jge
xchg
(bad)
sar
(bad)
(bad)
jmp
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
(bad)
(bad)
jmp
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
(bad)
(bad)
(bad)
call
fdivr
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
(bad)
call
or
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
(bad)
(bad)
(bad)
inc
outs
and
xchg
ja
int3
add
mov
das
es
lds
(bad)
(bad)
(bad)
dec
mov
sub
mov
cmps
call
ret
shl
sbb
ret
es
(bad)
(bad)
push
arpl
pushf
mov
ins
add
ss
jmp
addr16
jb
push
cld
(bad)
(bad)
(bad)
inc
jp
loop
sub
or
mov
xchg
or
out
fdivr
fisttp
(bad)
(bad)
(bad)
call
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
ja
mov
(bad)
(bad)
jg
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jmp
js
or
push
add
mov
cmp
cmps
not
ins
cld
(bad)
jmp
dec
inc
imul
push
scas
fcomp
fldenv
fild
(bad)
jg
add
push
scas
mov
fidivr
mov
jmp
repnz
(bad)
(bad)
(bad)
mov
push
cmps
mov
sar
sub
push
mov
jp
mov
dec
hlt
(bad)
(bad)
jmp
add
push
sub
mov
or
sbb
add
sub
scas
lahf
mov
ret
rol
add
or
(bad)
aam
in
or
push
cs
add
adc
mov
jmp
repnz
enter
inc
pop
push
add
js
jae
stos
arpl
mov
add
imul
xchg
inc
icebp
lahf
or
push
jne
dec
test
push
aaa
fs
pop
xor
lea
mov
arpl
imul
cmps
or
lds
shr
cmps
in
mov
out
push
test
sbb
outs
adc
inc
retf
mov
xor
add
fisubr
popa
aad
mov
push
xor
adc
bound
and
add
ins
shl
jae
adc
rcl
mov
imul
movs
ja
add
outs
data16
popf
test
outs
push
cs
lock
int
jae
data16
pop
or
mov
add
add
shr
add
adc
or
jae
xor
and
adc
cmp
mov
loopne
popa
cwde
sub
(bad)
js
and
fdiv
and
adc
dec
scas
aam
ret
jbe
mov
rol
daa
adc
imul
adc
inc
push
jb
dec
cmps
test
neg
shl
mov
and
call
fwait
out
add
dec
movs
push
mov
sbb
test
inc
xchg
mov
lock
mov
add
addr16
out
imul
out
xor
inc
add
dec
push
jae
arpl
pushf
daa
imul
je
test
dec
add
push
pop
test
mov
dec
cmovae
mov
xchg
sub
mov
mov
test
xchg
jmp
add
push
mov
(bad)
(bad)
xor
rcr
lods
out
xor
pop
pop
imul
pop
push
(bad)
dec
push
fsubr
mov
adc
imul
inc
sar
pop
fwait
iret
int3
push
out
adc
ficom
inc
out
mov
cmps
adc
push
xchg
clc
cmc
hlt
lods
(bad)
inc
mov
test
mov
sbb
jne
das
in
adc
das
sub
out
shr
push
xchg
add
sub
in
jbe
shl
push
neg
ret
stc
cs
fsub
pop
mov
push
jo
pop
jl
shr
jp
pop
pop
inc
js
aas
pop
inc
lea
push
jl
stos
loopne
imul
daa
or
cmps
xor
inc
add
je
mov
out
mov
je
das
sbb
add
inc
in
sbb
aaa
mov
icebp
and
rol
std
xor
cmp
pop
imul
shl
and
inc
sub
adc
xlat
dec
fldcw
sbb
imul
ret
pop
xor
retf
fs
cs
push
sbb
fisub
push
dec
cmp
and
sbb
pop
xor
rol
pushw
and
add
inc
pop
lahf
cmp
sub
popa
inc
push
xor
addr16
or
cmps
test
pop
and
loope
test
xchg
pop
mov
ins
cs
arpl
pusha
rcl
and
adc
cmps
push
jle
(bad)
jo
mov
xchg
and
adc
xchg
int3
hlt
arpl
inc
xor
inc
clc
add
and
or
jle
outs
aam
cmp
stc
ss
sbb
jo
data16
ds
fdivr
cmp
push
stc
ds
arpl
rol
or
test
push
nop
pusha
push
iret
mov
fcom
daa
mov
inc
sbb
push
repz
lods
fidiv
inc
add
lahf
add
sub
sub
cmps
sar
push
inc
iret
inc
ins
inc
mov
out
push
pop
dec
mov
add
cs
push
adc
push
aas
pop
or
push
push
push
mov
lea
fsub
aas
and
out
ds
jle
push
dec
mov
mul
push
push
ins
stos
push
push
stc
pop
icebp
ins
test
jg
cld
pop
push
inc
xlat
jl
sti
lahf
outs
push
inc
pop
nop
push
pop
dec
push
add
and
pop
je
or
pop
retf
inc
jne
inc
js
inc
lock
arpl
cmps
inc
out
out
and
push
jo
mov
add
xor
mov
push
mov
out
dec
mov
arpl
imul
pushf
outs
or
inc
and
mov
cmp
outs
xchg
jmp
mov
dec
addr16
ins
pusha
mov
cmp
call
dec
sbb
xchg
imul
or
mov
outs
outs
sbb
xor
cmp
dec
add
push
cld
aas
je
pop
nop
inc
sar
out
aas
adc
mov
add
cmp
dec
add
sub
data16
in
jne
add
mov
mov
pop
adc
test
sti
fnsave
mov
or
sub
imul
add
xor
addr16
stos
add
retf
scas
jnp
imul
das
adc
jae
pop
rol
add
sub
popa
xor
mov
or
push
or
push
(bad)
imul
mov
imul
das
sub
std
cmp
pop
cmc
nop
fsubr
test
xor
aam
jecxz
push
arpl
mov
add
aaa
dec
dec
push
outs
aaa
arpl
repz
aaa
iret
pop
in
movs
inc
cmp
out
mov
dec
fimul
pop
mov
sbb
dec
imul
popf
pop
jae
inc
arpl
mov
popa
xor
pusha
outs
es
inc
push
std
adc
xchg
push
cmps
ss
lock
adc
add
jno
sti
jne
je
inc
jae
daa
add
ror
sub
outs
lods
aad
(bad)
inc
lahf
cwde
out
mov
test
mov
dec
not
jns
nop
inc
cmps
xchg
inc
adc
sub
add
fild
inc
inc
outs
cmp
jo
call
push
repnz
jo
rcl
inc
inc
dec
fadd
js
xchg
ss
mov
aaa
xchg
xchg
cwde
inc
(bad)
and
push
jmp
or
add
loopne
pusha
inc
lods
push
push
cmp
sub
push
nop
gs
add
sahf
adc
mov
mov
mov
xor
popa
outs
add
xchg
xchg
outs
and
adc
sbb
inc
inc
sbb
call
xor
fcmovu
sbb
inc
cmp
sti
lea
sub
xchg
add
ins
and
dec
sbb
pop
dec
or
mov
aam
push
dec
daa
jae
dec
jl
outs
or
outs
sbb
jb
dec
xlat
cwde
add
pop
out
adc
pop
jle
shl
(bad)
or
jo
mov
add
adc
add
ins
xor
cmps
aas
outs
into
cmp
pop
aas
or
(bad)
ins
mov
sahf
add
mov
loopne
out
not
pcmpeqb
xchg
jge
push
pop
adc
ret
sbb
sbb
cmps
sahf
xor
test
pop
inc
fs
cmps
or
ror
inc
add
add
test
sbb
and
add
inc
push
push
pop
push
in
dec
cmps
inc
jle
jns
das
push
outs
pop
dec
cmp
gs
cmp
sbb
inc
mov
das
mov
mov
cmp
outs
pop
das
cmp
dec
inc
xor
outs
sub
outs
icebp
mov
jbe
add
in
xchg
iret
add
mov
sub
aas
inc
pop
shr
pop
and
fstp
js
jae
xchg
or
outs
jno
or
cmp
sbb
movs
push
pusha
dec
cs
sbb
out
dec
push
add
(bad)
jo
gs
inc
cwde
dec
and
mov
ret
xor
out
inc
pop
je
loopne
cmp
cmp
and
sbb
mov
or
jmp
sub
shrd
rcl
xor
ja
pop
sbb
mov
addr16
push
and
add
or
jmp
push
test
mul
dec
push
or
(bad)
adc
cmp
xor
daa
inc
sahf
and
jne
(bad)
mov
inc
pusha
push
sbb
ja
push
pop
je
xor
cmc
pop
(bad)
or
xlat
inc
and
sbb
mov
fistp
mul
and
push
ins
and
mov
mov
mov
or
fadd
ret
jg
jo
data16
mov
mov
out
ret
add
pop
inc
je
inc
les
outs
adc
inc
and
out
xchg
jo
add
fld
sbb
cli
in
imul
mov
push
cs
mov
and
inc
add
adc
mov
mov
mov
push
pop
sbb
xor
adc
and
(bad)
and
ret
add
inc
int3
ins
inc
mov
in
jns
rol
dec
out
mov
jns
cmp
xor
(bad)
and
mov
jae
cmps
mov
inc
push
xlat
push
jmp
retf
aam
push
dec
pop
and
aaa
sub
xor
add
push
ret
add
cmp
shl
test
dec
nop
inc
das
jae
pop
pop
dec
pop
and
movlps
jo
pop
and
ret
xchg
sbb
jle
pop
push
add
fdiv
push
sbb
ror
pusha
les
push
mov
inc
popa
aam
inc
or
ret
mov
mov
and
inc
ret
fst
lahf
aad
adc
sti
add
push
sbb
pop
xor
inc
mov
mov
and
jbe
and
sbb
mov
cmp
stos
push
inc
mov
jle
inc
dec
pop
adc
sub
ja
pop
xchg
add
push
outs
and
test
cmp
or
push
test
mov
inc
rol
mov
dec
outs
ins
cmp
or
xor
inc
es
pop
cmp
dec
push
call
fistp
pop
sub
mov
mov
and
pop
ins
cmp
add
mov
pop
sub
inc
sbb
and
pop
dec
push
pop
push
mov
inc
push
cmp
imul
pop
cmp
adc
mov
or
mov
clc
mov
xchg
inc
fisub
mov
jl
inc
shr
pop
xlat
scas
mov
cmp
pop
call
or
sar
ss
pop
stos
inc
ret
push
scas
js
fisub
and
cli
daa
dec
pop
add
daa
inc
dec
mov
pop
and
push
int3
sbb
cmp
mov
test
out
pop
inc
sbb
jb
xor
daa
or
push
inc
inc
sub
push
pop
lock
xchg
mov
not
inc
mov
and
add
hlt
pop
ja
mov
outs
addr16
pop
inc
bound
out
aaa
div
cmps
cmp
fstp
mov
dec
ins
das
mov
add
lock
loop
sbb
push
cmp
pop
stos
mov
xor
ja
add
sbb
push
js
mov
dec
scas
sbb
aas
jae
sbb
(bad)
js
xlat
mov
ins
ss
adc
sti
jne
ins
cs
jb
aas
call
xchg
inc
xor
mov
jo
jmp
push
pop
push
jbe
out
ja
out
in
pop
prefetcht1
cmp
push
push
dec
ins
pop
fsubr
dec
or
outs
popa
mov
mov
mov
push
jle
into
inc
add
inc
aaa
nop
jbe
jo
inc
daa
inc
scas
dec
push
sahf
jp
add
call
das
lds
mov
pop
loope
mov
jmp
push
dec
add
sbb
xchg
stos
mov
inc
int3
pop
and
inc
call
cmps
shr
inc
les
push
int
pcmpgtw
pop
push
sub
ins
inc
adc
dec
das
ins
fucomi
adc
mov
jno
sub
xlat
dec
movs
inc
dec
ins
mov
add
mov
sub
fstp
or
xlat
jl
js
or
mov
adc
xlat
cld
sub
daa
sub
jle
xor
frstor
mov
sbb
mov
xor
ins
imul
leave
sbb
mov
mov
fist
movs
jge
lods
xor
shl
movs
add
sub
fild
shr
xchg
dec
addr16
popa
pop
or
mov
imul
jb
rcl
lahf
mov
mov
pusha
popa
not
adc
mov
vmread
scas
or
das
jecxz
and
mov
sbb
lea
(bad)
push
inc
sbb
push
shl
addr16
dec
aaa
mov
outs
add
sub
adc
fidiv
shr
xor
scas
dec
add
sub
inc
push
mov
inc
cmp
mov
mov
jno
stos
jmp
cmp
sbb
lds
sbb
mov
mov
daa
jg
mov
pop
sar
push
xor
lds
rcr
dec
retf
push
mov
mov
dec
test
mov
add
pop
dec
add
push
dec
lods
fld
test
cmp
hlt
xor
ins
bound
jo
dec
daa
xor
and
rol
ficomp
test
mov
iret
lahf
sub
mov
inc
mov
and
dec
ror
repnz
dec
inc
or
add
out
pop
fsub
pop
mov
out
lea
dec
mov
mov
pop
push
jbe
adc
mov
adc
sub
mov
mov
pop
addr16
dec
cdq
and
in
out
bound
out
pop
xchg
scas
xor
call
mov
pushf
aaa
cmp
jbe
jecxz
daa
dec
(bad)
pop
fwait
cdq
xchg
inc
inc
xchg
lods
test
mov
ud0
fistp
les
pop
cs
ret
sub
jge
je
inc
ja
fsub
sbb
inc
push
ds
pop
neg
inc
scas
es
mov
pop
jg
test
test
idiv
push
mov
or
adc
aam
cmp
mov
dec
outs
ret
sbb
movs
add
fwait
sti
inc
stos
mov
sar
shrd
mov
(bad)
xchg
test
daa
daa
shl
daa
(bad)
and
lock
add
cmp
fild
iret
pop
cmp
sbb
or
add
lock
jae
add
dec
xchg
push
sbb
inc
pop
hlt
test
or
inc
invd
inc
pop
mov
pop
pop
or
in
outs
xchg
mov
or
dec
das
daa
or
xor
adc
rcr
daa
xor
sbb
retf
dec
adc
push
cdq
(bad)
cmp
daa
fiadd
xchg
das
add
daa
inc
lods
test
daa
sub
aas
stos
test
movs
aaa
lods
sar
sbb
push
popa
call
xchg
adc
loope
ret
sub
mov
out
pop
pop
movs
fs
pop
mov
cmp
mov
mov
in
stos
pop
jae
dec
gs
or
pop
pop
ds
ret
gs
je
loope
and
outs
imul
pop
cmp
push
jbe
push
rcr
inc
adc
ret
sbb
imul
mov
ins
push
outs
das
sbb
mov
out
xor
and
int
cmp
cmp
frstor
int3
lods
aad
pop
jne
imul
test
mov
arpl
mov
push
into
push
jae
data16
and
mov
fbstp
lds
mov
movs
inc
les
adc
ja
dec
adc
jge
inc
sub
fcmovnbe
xchg
and
das
sbb
daa
inc
inc
loope
bound
and
mov
push
mov
pusha
inc
cmp
pop
in
ror
sbb
cmp
pop
pusha
pop
lock
test
daa
test
mov
push
les
aaa
sub
scas
jo
mov
mov
aas
pop
aas
bound
sbb
cmps
xlat
dec
pusha
rol
xlat
and
mov
aas
aas
dec
dec
dec
dec
push
rcl
add
adc
(bad)
scas
dec
push
inc
dec
add
inc
wrmsr
add
or
nop
inc
push
sub
xor
add
sbb
jae
jae
pcmpgtd
jae
bound
je
mov
inc
push
aas
push
sbb
aad
add
pop
dec
push
mov
inc
pop
imul
sbb
mov
inc
ror
rcl
jo
loop
retf
mov
mov
push
fcomp
jo
movs
add
aam
shl
movs
inc
mov
mov
sbb
jmp
mov
inc
jecxz
inc
push
ds
pop
add
mov
outs
fs
xor
test
daa
push
fs
ins
and
daa
(bad)
jmp
stos
pop
fsub
fcmovb
not
pop
pop
push
sbb
sub
inc
inc
adc
imul
outs
jae
pop
aaa
inc
push
loopne
or
mov
call
xor
lea
cmp
loopne
jnp
xchg
push
cmps
sahf
pusha
cmp
add
mov
xchg
shr
mov
mov
ret
add
enter
ret
dec
data16
mov
(bad)
mov
shl
daa
popa
push
push
inc
add
imul
addr16
dec
pop
jne
mov
xchg
inc
or
das
mov
push
fistp
cwde
push
push
pop
sub
pop
mov
cmp
xchg
inc
and
push
dec
mov
adc
pop
xor
mov
xchg
imul
adc
xchg
or
out
ds
ror
shr
mov
ds
dec
push
sub
punpckhbw
and
cmp
add
fistp
xor
jecxz
ins
adc
les
xor
jnp
adc
add
pop
test
fiadd
outs
jmp
mov
bnd
mov
sub
jmp
and
cdq
cs
dec
cmp
pop
or
rol
xchg
leave
mov
es
fistp
or
and
test
outs
shr
xchg
cs
aaa
(bad)
arpl
mov
inc
push
pop
dec
dec
clc
(bad)
es
adc
ja
and
push
lods
pop
xor
push
js
not
aas
fwait
test
dec
sub
or
pop
inc
add
fsubr
push
das
adc
add
mov
cs
mov
aaa
into
or
lahf
sbb
psadbw
mov
jae
jmp
push
push
pop
xchg
mov
add
(bad)
mov
pop
xchg
aam
xlat
fsub
and
cmp
pop
ins
inc
push
dec
cmps
xor
cmp
push
sbb
push
pop
jecxz
aam
push
pop
inc
add
lock
xor
or
outs
push
or
test
mov
add
xor
lods
sub
sahf
retf
cmp
ret
adc
wbinvd
mov
das
adc
jne
adc
add
pop
inc
pop
cmp
xlat
add
mov
add
cmp
(bad)
push
inc
inc
mov
jle
adc
push
xor
jp
xchg
lock
shl
add
fistp
aas
push
(bad)
fidiv
fwait
mov
xchg
push
add
cmp
xchg
(bad)
push
adc
or
cwde
mov
popa
fcom
fwait
icebp
mov
addr16
mov
daa
pop
lds
outs
popf
lods
jne
dec
or
jae
xor
or
jo
sbb
cmp
and
out
mov
inc
es
and
push
push
std
ins
rcr
dec
pop
xchg
push
mov
pop
sbb
xor
jnp
and
pop
adc
jae
xchg
dec
pushf
pop
rcl
ret
push
or
adc
ds
push
mov
jno
cmp
and
test
fidivr
popa
mov
aas
and
add
(bad)
adc
jg
inc
push
adc
es
dec
sar
ret
push
dec
loopne
ret
push
test
dec
and
popa
fwait
or
aas
sub
mov
fadd
mov
das
and
adc
jg
or
lds
jg
sbb
out
mov
mov
pop
test
mov
mov
adc
dec
out
pop
add
call
je
add
test
je
jl
jl
test
adc
es
js
ds
push
jne
lea
pop
(bad)
cli
inc
add
je
stos
push
jmp
cmps
jo
je
cs
cs
ds
mov
sbb
xchg
push
fimul
cmps
sbb
aaa
inc
out
push
and
cmp
xor
scas
push
(bad)
cmp
in
or
cmp
outs
cmp
and
loopne
inc
inc
ss
add
inc
gs
inc
sbb
jge
xchg
inc
xchg
mov
pop
inc
mov
xor
jns
push
add
ins
dec
cwde
data16
lea
dec
add
call
imul
dec
test
scas
ins
jmp
or
daa
lsl
mov
push
mov
push
or
mov
test
push
icebp
imul
scas
push
push
jbe
cmps
stos
jle
or
test
adc
retf
mov
cmp
(bad)
jle
or
das
push
lar
and
dec
push
xchg
fist
add
xchg
(bad)
jo
push
call
es
add
test
push
add
dec
dec
test
jecxz
adc
or
test
outs
inc
outs
adc
mov
add
sar
stos
mov
shl
jmp
pusha
jne
pop
adc
push
pop
fwait
push
and
adc
dec
xor
div
jle
pop
push
dec
add
pusha
rol
push
pop
imul
add
dec
sahf
sub
adc
adc
pop
dec
adc
scas
add
dec
jl
inc
out
xchg
retf
and
dec
xchg
gs
xor
pop
mov
or
jmp
push
dec
xchg
pop
mov
mov
arpl
and
inc
ret
xor
inc
push
sar
and
lea
xchg
inc
add
xor
stos
sub
adc
call
scas
pop
ja
hlt
push
sbb
or
mov
pusha
push
movs
fcom
ins
sub
gs
xor
outs
ret
fist
dec
inc
(bad)
push
inc
push
push
dec
ror
mov
push
dec
dec
movs
xchg
xchg
fistp
push
dec
dec
push
dec
dec
inc
(bad)
push
inc
pop
push
fidivr
popa
lahf
data16
adc
adc
jb
xor
inc
push
mov
pop
pop
pop
push
inc
pusha
xlat
dec
fcom
push
movd
cmovge
inc
dec
jp
push
inc
push
pop
pop
cmp
inc
ins
jb
push
enter
outs
push
sbb
call
dec
jnp
idiv
jb
push
sbb
jae
sbb
imul
ss
jge
int
mov
cmp
daa
jg
outs
sahf
xchg
scas
mov
fst
fs
mov
(bad)
and
fldcw
xor
(bad)
bound
test
add
ror
dec
pop
sbb
mov
pop
or
jecxz
adc
cmp
out
fidiv
sbb
out
enter
rcl
out
cwde
test
mov
loopne
in
nop
ja
fwait
scas
push
sahf
push
dec
mov
sbb
pop
xchg
and
jmp
push
aas
or
dec
jge
push
aaa
jg
rcr
add
add
mov
sub
or
jecxz
push
neg
mov
and
loopne
push
or
cmp
popf
or
outs
or
jno
movs
das
pop
enter
shl
fisubr
lahf
inc
and
lods
mov
lds
adc
sub
xchg
leave
aaa
retf
and
adc
call
das
mov
out
(bad)
push
pop
add
or
adc
mov
test
and
xor
ins
ss
mov
and
dec
sbb
sub
sub
ins
jns
out
movzx
(bad)
hlt
retf
fs
dec
inc
push
push
fiadd
dec
dec
push
dec
and
inc
in
adc
and
mov
add
popf
sub
lods
push
rcl
fistp
sbb
mov
add
inc
mov
bound
and
outs
sbb
neg
das
sbb
inc
mov
mov
mov
mov
mov
pop
mov
sub
test
fbstp
pop
lds
mov
adc
mov
xchg
xor
ret
sub
xchg
mov
jbe
aas
fs
mov
iret
push
cmp
pop
sub
scas
cmp
stos
sbb
outs
push
sbb
dec
mov
mov
sbb
pop
mov
dec
cmp
sub
(bad)
int
sbb
push
xchg
pop
sahf
jne
mov
lds
jnp
(bad)
outs
pop
into
inc
jb
cmp
retf
outs
adc
inc
sbb
ret
bound
rcl
call
adc
and
xchg
cmps
pop
popa
pop
rol
xchg
jecxz
push
lock
mov
mov
adc
adc
adc
cmp
fstp
call
clc
jp
mov
pop
pop
jnp
pushf
ins
pop
mov
xor
es
push
or
mov
rcl
arpl
dec
leave
or
dec
fucom
fmul
pop
outs
ss
int
dec
jl
fimul
loopne
jb
inc
ins
jmp
popf
xchg
in
and
popa
push
popf
sbb
jp
test
push
ins
pop
lods
mov
dec
cdq
cmp
dec
xor
and
cdq
fcom
dec
mov
sub
jb
enter
imul
es
dec
dec
call
data16
inc
push
dec
mul
dec
leave
sbb
cli
ins
add
movaps
test
push
add
fbld
push
mov
icebp
inc
ret
and
cdq
inc
stos
imul
xor
mov
(bad)
cmp
xor
aas
sbb
or
jae
sbb
loope
fbld
and
or
add
or
push
into
pop
inc
inc
imul
icebp
xchg
xchg
lds
xor
sub
and
out
inc
mov
sbb
das
push
(bad)
imul
(bad)
popa
cmp
int3
sub
xor
xor
xchg
mov
sub
test
xor
xor
mov
fcomip
add
jecxz
dec
sbb
xchg
push
test
dec
jae
sbb
mov
add
repz
cmps
hlt
inc
dec
cmp
pop
push
sub
jnp
dec
stc
or
xor
dec
jo
xchg
fld
and
movs
mov
aaa
xor
shr
inc
pop
rol
jecxz
call
cli
gs
jg
sti
dec
loop
ret
cmp
sub
xlat
nop
jno
push
jmp
hlt
add
fdiv
imul
imul
push
lahf
dec
pop
popa
dec
shl
inc
and
push
cld
std
ins
xchg
inc
xchg
outs
mov
inc
cmp
inc
and
lods
add
leave
scas
mov
or
push
test
mov
dec
or
dec
push
inc
mov
ins
(bad)
adc
sub
or
and
test
div
call
xchg
adc
xchg
sub
push
pop
ss
cmps
movs
xchg
bswap
pop
dec
pop
mov
add
or
push
aam
xchg
add
dec
inc
push
sbb
fsub
pop
cmp
mov
adc
loope
fisub
pop
cli
push
sub
mov
or
jmp
xor
add
xchg
add
(bad)
xlat
cs
mov
sbb
cmp
movs
das
pop
daa
sbb
dec
add
das
mov
test
inc
dec
push
jno
aas
sbb
xchg
int
and
aas
cmp
lods
fs
jl
and
and
push
cs
cs
das
dec
push
inc
mov
dec
adc
push
pop
xor
pop
xor
fdivr
xor
jmp
add
ror
ja
in
dec
sbb
aaa
or
dec
push
gs
or
xchg
aad
je
sub
add
xor
int
inc
mov
xor
inc
dec
cmc
jns
loope
xor
dec
cmp
and
cmp
shl
sbb
lahf
or
pop
xor
fdivr
and
bound
xchg
push
jle
inc
lds
inc
pop
and
and
and
pusha
add
lds
pop
hlt
(bad)
jle
or
inc
cdq
inc
test
dec
cmps
dec
add
aaa
pop
push
sub
imul
fnstcw
or
scas
add
jl
push
enter
push
ret
and
pop
aaa
or
mov
or
push
xor
sbb
icebp
cmp
add
adc
dec
rol
xchg
or
adc
inc
pusha
add
fild
or
push
jg
push
and
rol
inc
clc
push
mov
leave
adc
(bad)
ja
nop
push
dec
push
xor
adc
out
dec
cmp
push
les
fs
cmp
cmp
xor
out
sbb
jl
ror
push
mov
jge
ins
pop
push
push
push
sar
imul
cwde
enter
aas
xlat
cmp
sub
fild
mov
add
inc
inc
test
ss
in
dec
inc
outs
xchg
pop
icebp
add
jmp
shl
int3
pop
xor
gs
pop
adc
adc
jmp
xor
addr16
adc
jg
arpl
push
arpl
jmp
mov
sbb
inc
data16
mov
addr16
aaa
cmps
fild
xor
clc
mov
cmp
popa
pusha
push
dec
inc
repnz
ret
arpl
data16
cmps
xchg
fistp
mov
dec
add
imul
push
xchg
fwait
mov
fnstcw
and
adc
jno
out
ds
xor
cld
cmp
push
cld
repz
xchg
imul
cli
xor
ins
popf
and
fadd
inc
and
in
dec
jge
dec
pusha
outs
or
cmp
imul
add
(bad)
nop
pop
sbb
fistp
or
dec
add
adc
cmp
cmp
cs
jbe
popa
loopne
sbb
fdivr
or
xor
mov
cmp
repnz
mov
dec
mov
push
enter
xor
cmp
inc
mov
das
es
cdq
cmp
scas
adc
nop
pop
nop
dec
dec
xchg
dec
or
and
pop
das
scas
daa
inc
sbb
nop
cmc
cwde
(bad)
dec
adc
test
cld
jmp
cmp
call
push
sbb
mov
out
das
jl
repnz
das
iret
xor
das
add
push
or
scas
xchg
jnp
pusha
inc
or
test
aad
lods
jle
rol
mov
dec
cwde
out
scas
push
fadd
cs
(bad)
hlt
aad
loopne
pop
ret
dec
sub
js
scas
add
pusha
sar
mov
dec
sub
xchg
pop
add
mov
dec
popa
jb
je
addr16
out
scas
gs
and
into
stc
cmps
dec
xchg
cmp
push
inc
jecxz
loop
pop
jno
fild
cmp
scas
mov
dec
xor
dec
in
in
add
dec
add
dec
rcl
in
xchg
(bad)
pop
xlat
dec
push
ror
(bad)
and
ror
jns
jns
xchg
scas
adc
add
jo
enter
movs
mov
div
shr
scas
cmp
add
lods
lock
lahf
dec
stos
dec
aaa
shl
ret
out
fbld
jg
jg
stos
add
lahf
or
push
add
cmp
add
and
pop
push
icebp
mov
seto
mov
das
or
paddusb
and
xor
(bad)
cmp
cdq
loop
dec
es
shl
sub
xor
adc
add
mov
push
mov
inc
daa
cmp
dec
mov
retf
sahf
sub
xchg
dec
mov
mov
sbb
(bad)
les
inc
mov
and
push
mov
push
push
jne
mov
(bad)
push
adc
imul
outs
sub
inc
sub
call
sub
addr16
aaa
out
adc
pop
sub
pushf
rcr
pop
add
push
out
fdiv
rcr
inc
scas
push
or
inc
ret
xchg
sbb
aas
daa
daa
(bad)
adc
pop
pop
sbb
or
pop
sub
adc
sbb
sahf
pop
dec
mov
xor
dec
shl
add
sbb
dec
lahf
and
inc
mov
retf
imul
push
movs
xchg
je
sub
cmp
pop
pop
bound
pop
xor
push
call
xchg
daa
and
add
lahf
push
jno
cmps
imul
aaa
fwait
add
test
or
add
jo
jnp
sub
cs
add
inc
lahf
inc
ror
push
retf
je
mov
ins
int
clc
mov
ficomp
ss
imul
in
out
repz
xor
push
ja
cmp
(bad)
cdq
fsub
push
xlat
cmovnp
adc
xchg
inc
or
push
mov
mov
ins
pop
bound
fwait
int
mov
in
mov
(bad)
jecxz
ins
mov
cmp
push
push
call
add
jmp
scas
loop
jmp
inc
les
sbb
sub
ins
ss
out
lock
dec
js
fisubr
fldcw
jbe
mov
adc
loopne
add
jae
cmc
mov
cs
call
jo
ins
outs
ja
sub
shl
sar
xchg
cmp
dec
cdq
popa
cmps
dec
xchg
add
(bad)
adc
maskmovq
div
fucomip
test
fs
dec
std
mov
fs
std
push
inc
cld
add
and
scas
xchg
(bad)
adc
cmp
repz
inc
enter
(bad)
or
pusha
add
sbb
repnz
fisttp
or
shl
or
push
out
add
vmovups
pop
sbb
sub
or
add
pop
push
jo
ins
(bad)
idiv
int
sub
das
sbb
jge
cmp
push
and
cld
push
push
mov
dec
shr
nop
arpl
push
cmps
out
seto
dec
pop
push
sbb
or
mov
or
push
es
ins
sbb
mov
and
out
imul
das
dec
out
sub
cmp
retf
mov
sti
nop
outs
(bad)
mov
ret
ins
pop
and
ss
int
mov
xor
sub
jecxz
xchg
ins
dec
xor
aas
mov
xlat
(bad)
sbb
into
inc
push
inc
inc
or
cmps
push
aad
push
cmp
ins
dec
jae
mov
jne
mov
icebp
sar
(bad)
fadd
mov
dec
dec
jmp
inc
and
in
xor
mov
loop
sbb
push
pop
mov
pop
push
pop
or
mov
int
dec
add
outs
dec
mov
stos
pop
jo
cwde
jo
mov
dec
inc
push
(bad)
neg
sbb
shr
(bad)
jmp
mov
movs
(bad)
push
iret
pop
dec
mov
scas
adc
push
jmp
sub
push
ds
dec
cmps
mov
pop
and
pop
pop
popa
and
push
cmc
pop
xchg
scas
sub
(bad)
pusha
dec
mov
popa
dec
mov
add
push
sub
sbb
push
repnz
in
adc
push
push
adc
ds
pop
dec
mov
repnz
push
lea
mov
mov
push
mov
and
pop
pusha
mov
jle
inc
test
scas
mov
inc
lods
jg
arpl
xchg
add
fistp
pop
add
push
lods
dec
or
or
dec
cmp
scas
pop
aas
mov
(bad)
outs
or
jmp
dec
outs
adc
or
pop
pop
push
mov
icebp
xor
fild
mov
scas
dec
push
cmp
or
adc
loopne
mov
add
scas
push
pop
adc
pop
loopne
dec
in
add
sbb
jl
push
xor
cs
or
jno
dec
das
and
add
add
iret
stos
mov
fnstsw
ja
add
dec
cmp
lock
pop
xchg
repnz
jbe
ja
enter
ja
ja
punpcklbw
stos
or
repnz
(bad)
js
adc
adc
(bad)
outs
inc
enter
dec
lea
inc
lods
outs
ins
sub
inc
push
fist
or
imul
jle
push
test
call
xchg
sbb
inc
bound
pop
fsub
test
das
ds
stos
(bad)
sub
inc
dec
lahf
aaa
adc
iret
xchg
cs
hlt
dec
xchg
iret
and
loope
outs
(bad)
stos
pop
sbb
dec
jl
sub
xor
pop
in
mov
and
cmps
hlt
adc
push
movs
sbb
outs
and
xchg
stc
sahf
sbb
dec
ret
mov
cmp
in
dec
out
pop
mov
out
push
xchg
call
ins
mov
aaa
ret
movs
iret
add
push
xor
(bad)
and
dec
dec
dec
shr
pop
inc
imul
jl
fs
or
test
jne
stos
mov
inc
(bad)
push
and
aas
mov
sub
cs
mov
movs
cld
push
pop
lahf
add
cmp
or
xor
add
and
aaa
adc
aas
and
inc
sub
xor
cmp
sti
das
xor
jo
data16
push
push
inc
sub
mov
jnp
or
stos
add
push
jo
ficom
mov
pop
add
jae
push
fmul
lods
and
rol
jne
mov
bound
and
inc
mov
dec
inc
pusha
jo
add
mov
pop
arpl
mov
adc
add
adc
clc
mov
out
sub
adc
call
fistp
dec
(bad)
fsub
xlat
shl
enter
sar
ficomp
loopne
loopne
fnsave
into
mov
fistp
(bad)
xor
xor
test
rcl
pushf
add
std
cmp
inc
pop
gs
cwde
loopne
cmp
lahf
push
mov
mov
mov
push
mov
dec
sar
push
loopne
out
sar
cmp
xor
mov
pop
shl
push
sub
adc
cld
test
push
aas
pop
ror
jl
scas
jmp
mov
idiv
xor
adc
sub
jo
cmp
lods
shl
fnstsw
jmp
out
neg
out
cs
add
pop
push
xor
sahf
out
sahf
pusha
and
fucom
jns
or
lock
clc
push
jns
jnp
nop
push
hlt
rcr
repnz
cmp
js
in
fcomp
icebp
inc
dec
not
aam
icebp
int3
repz
out
push
enter
xor
iret
jnp
rcr
mov
mov
test
(bad)
(bad)
arpl
fsub
mov
cmp
xchg
aas
cmp
mov
xor
neg
call
stc
lods
clc
retf
shl
add
mov
test
cs
neg
fisttp
lds
adc
jns
out
mov
loopne
jl
dec
repz
jo
sar
xor
adc
inc
sub
dec
iret
rcr
jnp
rep
and
xor
sub
and
rcr
mov
or
cmp
clc
les
nop
lock
inc
iret
repz
in
sbb
rcl
xor
mov
lahf
sar
pop
call
mov
test
dec
mov
pop
loopne
inc
(bad)
sub
jne
mov
cwde
iret
shl
fimul
out
sbb
clc
retf
fmul
push
lock
jnp
push
loopne
fcom
push
dec
enter
lods
movs
nop
xchg
out
add
add
add
in
mov
test
pop
add
and
popa
xor
add
and
mov
and
xor
cwde
movs
cmp
add
loope
mov
and
cmp
or
mov
lock
test
push
add
sbb
sahf
out
pop
(bad)
cld
int3
push
clc
lock
jnp
cs
push
enter
jns
and
mov
or
jns
pushf
push
or
add
sub
cmp
push
push
std
xchg
mov
call
adc
add
(bad)
(bad)
(bad)
aas
or
push
or
(bad)
fstp
fcmovnu
(bad)
xlat
(bad)
aad
rcl
rcl
iret
into
int
(bad)
(bad)
dec
retf
retf
mov
rol
mov
mov
mov
mov
mov
scas
lods
(bad)
(bad)
(bad)
jmp
cmps
movs
movs
mov
sahf
popf
pushf
fwait
call
xchg
xchg
xchg
nop
(bad)
mov
mov
xchg
cmp
jl
jp
js
jbe
mov
shl
push
ins
ins
imul
gs
add
arpl
cld
pop
pop
pop
pop
pop
push
push
add
inc
adc
push
(bad)
jg
mov
dec
dec
mov
inc
inc
inc
inc
inc
aas
ds
ja
cli
cmp
aaa
ss
cs
sub
(bad)
(bad)
(bad)
jmp
and
and
push
sbb
sbb
push
adc
adc
push
or
es
(bad)
(bad)
jmp
add
or
sbb
push
sbb
and
sub
das
add
mov
pop
adc
daa
or
(bad)
(bad)
push
add
or
sbb
and
sbb
add
pop
sub
push
adc
adc
pushf
add
or
add
or
xchg
(bad)
jmp
sbb
adc
adc
adc
push
pop
sbb
sbb
sbb
fcmovbe
(bad)
call
pop
and
and
and
es
sub
sub
sub
cs
in
or
adc
ins
or
(bad)
in
scas
adc
sbb
or
adc
and
xor
and
adc
nop
push
adc
sbb
sub
cmp
xor
and
push
movhps
and
xor
es
daa
cs
aaa
ds
mov
sar
adc
sbb
xor
cmp
sub
(bad)
(bad)
call
inc
cmp
adc
sbb
adc
and
dec
sbb
aaa
inc
push
push
mov
push
addr16
gs
pop
pop
bound
arpl
das
arpl
fisubr
sbb
sbb
cmp
sbb
fnstcw
cli
dec
add
sti
fdivr
dec
jle
add
adc
adc
mov
orps
loopne
or
and
outs
mov
test
nop
add
push
add
sub
add
lock
cld
(bad)
jg
pop
sysret
add
loopne
fwait
and
adc
sbb
and
and
std
lahf
lods
jmp
sub
xor
cmp
inc
inc
dec
push
push
push
pop
pop
pop
pop
(bad)
(bad)
fisttp
ins
outs
jno
jne
jns
jge
add
(bad)
(bad)
(bad)
call
pushf
sahf
mov
cmps
cmps
test
stos
lods
scas
mov
mov
mov
mov
(bad)
(bad)
inc
ret
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fcmovnu
(bad)
fstp
ficomp
fild
loopne
loop
in
sahf
cmps
imul
cmps
jns
cmps
jmp
jns
out
lock
repnz
jns
out
cmc
div
clc
stc
test
sti
cld
std
dec
push
icebp
inc
or
add
dec
pop
xchg
dec
outs
add
into
sbb
xor
xor
push
sbb
or
sub
xchg
mov
jb
cmp
mov
outs
loope
dec
repnz
xchg
mov
test
sub
cmp
fsubr
inc
lock
dec
ins
ror
or
mov
pop
xor
(bad)
popa
mov
push
jle
xor
jo
or
push
and
adc
imul
je
jg
sti
add
aaa
(bad)
js
mov
add
gs
dec
cmp
shr
jmp
ins
adc
in
push
loopne
retf
shl
jecxz
pop
push
and
jmp
jbe
or
push
mov
out
push
ds
gs
imul
sbb
popa
imul
das
or
sbb
pop
pop
stos
adc
or
out
gs
jbe
push
ins
mov
or
or
rcr
enter
jbe
cld
jne
adc
and
pop
push
outs
iret
add
fbstp
shl
push
outs
jb
pop
mov
aaa
sar
(bad)
into
test
pop
inc
dec
adc
retf
das
xchg
mov
mov
data16
jno
jbe
ss
stc
and
lea
xchg
jl
jp
push
(bad)
mov
push
mov
leave
xchg
lods
mov
push
add
push
div
inc
dec
(bad)
popf
fbld
and
xor
xchg
mov
and
cmp
push
sbb
mov
test
outs
cmp
outs
daa
fs
stc
hlt
aaa
scas
xor
xor
test
jns
mov
jns
push
mul
add
dec
pusha
ffreep
daa
add
dec
inc
gs
inc
rol
outs
mov
gs
dec
inc
das
in
mov
push
(bad)
pop
sub
daa
cmc
loopne
adc
xlat
mov
lods
mov
jb
ja
dec
xor
or
push
push
jb
outs
xchg
loopne
lods
mov
inc
into
adc
push
in
ja
add
add
add
dec
ins
pop
push
ins
outs
mov
inc
inc
sbb
jb
jo
imul
outs
aas
push
push
ins
xchg
push
je
dec
inc
jo
std
pop
jnp
push
jbe
mov
add
jbe
shl
fs
push
jne
rcr
lahf
inc
sub
xor
push
stos
loopne
scas
push
arpl
mov
pop
mov
cmp
jg
mov
mov
dec
popa
pop
ja
pusha
rcr
imul
outs
pop
mov
mov
mov
sti
push
inc
movs
test
sub
in
push
dec
repz
cmp
cmps
xchg
icebp
int
imul
pop
test
int
imul
push
stos
imul
mov
scas
stc
out
lods
ins
push
mov
lods
push
clc
xchg
sub
out
mov
sub
dec
or
jo
jg
cld
aas
idiv
outs
add
xchg
cmp
adc
add
cmp
jp
mov
nop
xor
and
and
jmp
push
or
xchg
daa
add
das
jl
inc
jl
inc
mov
push
outs
arpl
xchg
loop
mov
iret
mov
jbe
(bad)
inc
cs
sti
or
dec
lds
pusha
xchg
cs
cmp
jnp
pop
enter
call
in
sbb
pop
out
idiv
fcmovnb
push
ret
iret
repz
(bad)
ret
arpl
jns
les
mov
add
xor
into
cmp
adc
adc
int3
push
add
push
sub
xchg
sub
daa
dec
sub
mov
add
shl
fiadd
retf
pop
and
xor
ss
or
jmp
div
xor
das
mov
xor
nop
or
add
aaa
icebp
aad
sub
ins
mov
add
dec
movs
sbb
mov
jns
das
(bad)
and
pop
sbb
pop
in
jns
adc
sub
adc
out
icebp
mov
mov
and
iret
test
add
and
adc
push
leave
sbb
cs
push
pop
pop
(bad)
mov
sbb
sbb
mov
mov
cs
cmps
out
dec
mov
mov
add
or
add
fld
add
add
dec
data16
pop
push
rcr
sub
inc
out
cwde
add
inc
popa
and
mov
mov
jo
(bad)
xchg
add
mov
dec
(bad)
das
push
js
adc
pusha
mov
movs
push
push
push
push
clc
sbb
xlat
ins
fs
add
dec
xlat
add
fsubr
push
scas
cmp
mov
popf
mov
pop
movhps
(bad)
jns
rol
add
pop
mov
inc
enter
add
push
xor
inc
jbe
bound
jg
test
push
loopne
add
mov
adc
jmp
jmp
cmp
sahf
push
in
ds
dec
lea
or
in
imul
xchg
inc
dec
cs
icebp
outs
repnz
xlat
test
push
out
adc
jle
cli
xchg
inc
lods
cs
sti
dec
mov
dec
mov
outs
jae
xchg
inc
adc
dec
sbb
sbb
xchg
stc
fdivp
xchg
dec
into
loopne
push
fmul
xor
inc
jecxz
cmps
aam
push
mov
push
mov
add
test
pushf
xchg
pop
adc
dec
stc
inc
add
push
push
jbe
jle
aam
ja
cmps
mov
imul
test
das
and
dec
das
push
mov
pop
ds
or
dec
das
jecxz
(bad)
bound
retf
add
add
movs
jecxz
addr16
adc
dec
bound
popa
(bad)
shr
or
or
adc
ins
ss
inc
xchg
or
push
or
shl
add
test
adc
pop
data16
push
xchg
bound
int3
push
aaa
ins
xor
mov
imul
addr16
fwait
jae
push
wrmsr
clc
mov
arpl
ds
inc
sbb
push
jb
adc
cmps
adc
push
inc
mov
lea
push
and
dec
aad
mov
xchg
aam
cmp
call
or
add
push
das
mov
in
xchg
dec
push
stc
mov
pop
xor
call
jmp
pop
dec
xor
add
rcr
add
cmps
push
xchg
aas
jbe
sbb
adc
pop
aad
inc
inc
dec
jecxz
add
mov
adc
dec
cmps
outs
bound
sar
push
pop
jmp
inc
sbb
sbb
ss
add
sar
xchg
das
and
ds
xor
daa
jne
call
bound
jbe
test
dec
mov
repnz
sar
lahf
ins
xor
add
dec
imul
jmp
dec
pop
jl
dec
jnp
loop
push
mov
adc
pop
dec
adc
xor
wbinvd
cs
jmp
shr
and
repz
dec
xchg
sub
mov
sub
add
push
add
cmp
jg
jae
in
inc
and
push
adc
rcr
xor
js
pop
or
mov
jno
mov
out
add
out
das
and
stos
sbb
add
aad
pop
xchg
and
loopne
fadd
inc
mov
loop
add
cmp
sub
dec
sahf
dec
add
das
outs
and
add
and
push
push
out
pop
out
sahf
imul
add
scas
in
xchg
add
push
inc
loope
jnp
xor
das
mov
push
out
std
fs
outs
cs
das
cmp
sbb
or
loopne
xchg
test
cs
push
shl
popa
ds
call
cmp
fmul
add
and
inc
and
mov
bound
loopne
xor
inc
push
inc
je
inc
and
adc
(bad)
fisttp
pop
sbb
adc
push
fdivr
out
adc
ret
je
ins
ds
dec
ror
xchg
xor
leave
shr
fs
lods
cwde
jg
push
add
mov
add
pusha
ret
out
cwde
les
or
cmp
push
jge
jmp
or
jle
xor
inc
inc
jg
ja
sbb
push
inc
lods
popf
and
daa
xchg
mov
cdq
lea
pop
dec
push
and
push
das
fstp
cmp
push
dec
bound
jge
arpl
dec
xchg
and
mov
das
ss
fwait
iret
lds
test
pusha
mov
mov
cmp
clc
mov
jnp
cmps
es
gs
icebp
fs
inc
popa
push
mov
push
adc
mov
pop
outs
leave
mov
pop
mov
mov
xchg
cmp
inc
loope
scas
in
in
scas
jne
adc
aaa
das
cmp
out
mov
cmp
pop
mov
push
sub
xor
add
ja
push
gs
lock
adc
dec
jne
popa
xchg
stos
push
arpl
mov
arpl
sub
cs
imul
jne
lods
enter
scas
inc
cmp
inc
fisttp
and
fisttp
push
out
sub
xchg
pop
push
xchg
lods
fadd
(bad)
iret
ins
dec
jb
add
mov
sahf
inc
call
xchg
or
dec
push
imul
rol
add
and
dec
dec
mov
je
jo
mov
sbb
or
add
xchg
cmp
sub
daa
xor
ficomp
jae
aaa
xchg
rol
iret
push
icebp
jns
addr16
jp
aaa
add
xor
stos
xchg
adc
push
sbb
ss
sar
addr16
push
data16
xchg
loope
aas
in
rol
dec
jmp
xchg
push
sub
lahf
lods
inc
mov
fild
dec
push
(bad)
sahf
push
out
js
jl
aaa
dec
jl
jnp
cwde
into
pop
push
js
in
loopne
dec
inc
push
das
push
mov
xchg
fucomip
(bad)
dec
mov
nop
fiadd
jp
jbe
ins
pop
pushf
ss
(bad)
in
and
pop
dec
inc
inc
dec
cmp
or
test
fs
cmp
ins
ds
cmp
pop
jecxz
aas
lea
adc
cmp
xchg
cmps
imul
cwde
dec
js
call
cmp
mul
xchg
push
mov
jge
imul
push
mov
sub
cmp
cs
(bad)
pop
nop
and
in
jae
jb
push
lea
mov
daa
sahf
ds
jle
imul
pop
repnz
(bad)
(bad)
pop
mov
pop
mov
iret
daa
outs
daa
inc
sub
adc
pop
add
sub
xchg
push
add
and
shl
xchg
push
jg
add
mov
jle
mov
dec
js
fdiv
xchg
pop
and
call
inc
sbb
mov
sbb
pop
mov
loope
mov
sub
sar
test
daa
sbb
outs
xlat
scas
add
push
dec
rcl
inc
add
mov
sbb
and
js
test
xor
push
sbb
cmps
out
sahf
out
mov
push
adc
or
pusha
repz
clc
cdq
in
lahf
xchg
xchg
mov
xor
dec
repnz
addr16
mov
es
adc
mov
fiadd
mov
(bad)
jmp
dec
add
lods
test
push
inc
push
xchg
push
mov
ds
aaa
stos
cs
aaa
mov
xchg
test
push
mov
lods
fsub
aas
les
ds
in
ss
gs
movs
mov
arpl
scas
outs
(bad)
xchg
in
jnp
push
mov
push
jmp
daa
push
lods
ins
jg
shl
stos
lahf
mov
popf
cmp
rcl
jl
(bad)
scas
and
inc
enter
mov
push
test
inc
and
cwde
ret
das
das
movs
and
pushf
pop
popf
inc
bswap
jbe
adc
or
pop
sub
sbb
inc
inc
jae
test
add
inc
cmp
pop
xchg
jbe
xor
and
xchg
popa
cli
add
push
and
movs
dec
sti
fwait
das
dec
inc
add
dec
cmp
mov
add
jecxz
mov
push
es
inc
xchg
lods
ins
xor
and
inc
popf
mov
xchg
popf
pop
pop
mov
xor
clc
add
ins
jae
jp
mov
icebp
ins
sti
daa
jo
add
imul
sub
pop
ja
(bad)
cld
into
xchg
test
mov
sub
ror
mov
rol
adc
cmp
loop
sub
dec
test
adc
or
retf
(bad)
retf
sahf
lsl
rol
aam
das
pop
and
lods
aad
(bad)
dec
push
adc
shr
outs
rcr
add
ffree
(bad)
repz
call
sub
dec
cdq
inc
ror
adc
pop
cli
mov
jb
xlat
inc
lods
sbb
mov
push
push
aaa
fadd
fld
xchg
inc
and
fdiv
or
mov
(bad)
sbb
aas
scas
push
(bad)
push
mov
pop
ficom
clc
(bad)
in
jnp
je
(bad)
iret
push
add
lea
cmp
or
mov
jg
in
iret
mov
leave
push
cwde
push
out
push
outs
or
sahf
push
pop
loopne
addr16
cs
loopne
movs
not
repz
fidiv
jle
mov
cwde
movs
rdtsc
imul
iret
imul
cmp
ds
xchg
mov
in
clc
aaa
and
fistp
das
nop
ja
ficom
cmps
xor
outs
sub
dec
pop
add
mov
push
inc
dec
dec
jg
dec
inc
movs
inc
imul
enter
mov
sub
in
push
jp
dec
sar
call
and
dec
inc
mov
fld
adc
adc
popa
(bad)
dec
xchg
xchg
iret
repz
sub
fadd
cmp
inc
ror
push
pop
iret
aas
push
in
in
inc
pop
hlt
jg
jg
cli
(bad)
test
rcl
xchg
call
jecxz
sub
cmp
sahf
out
das
inc
cmp
adc
add
jns
out
add
or
out
inc
sbb
fld
mov
jo
into
scas
and
bound
ins
repz
mov
xchg
sbb
inc
popa
and
xchg
addr16
fild
adc
jae
sbb
push
lods
in
ja
push
inc
cs
pop
mov
or
mov
sbb
sub
push
push
sbb
mov
cmp
jecxz
fistp
imul
ds
out
xor
test
mov
fisubr
dec
mov
ins
ds
into
sar
cmp
sbb
aaa
idiv
inc
test
mov
cmp
scas
imul
jle
mov
jl
inc
mov
inc
out
sbb
sti
scas
popf
stos
push
int
les
push
pop
inc
pop
sub
xchg
das
leave
pop
in
bound
or
xor
or
outs
xchg
js
mov
(bad)
add
sub
fadd
mov
mov
jge
mov
pop
or
nop
xor
repz
or
imul
xor
and
cmp
getsec
stos
pop
cmp
retf
push
lahf
or
ins
(bad)
movs
cs
and
iret
and
sub
jns
iret
rcr
imul
adc
imul
pop
xor
out
ds
repz
pop
jg
(bad)
mov
or
pop
movs
xor
scas
push
and
and
fwait
and
es
adc
out
imul
mov
mov
mov
js
cmp
jo
pop
lods
lods
(bad)
(bad)
jle
push
aas
jo
cmp
adc
inc
and
inc
loope
dec
pop
pop
add
sub
int
outs
inc
lods
jno
mov
dec
push
adc
iret
mov
(bad)
es
ja
repnz
rol
mov
cs
mov
xor
cmps
push
or
loop
cmps
mov
movs
xchg
test
pop
mov
inc
mov
sbb
scas
into
add
rol
and
mov
jb
movs
lea
lea
cmc
cmp
arpl
jmp
or
lods
mov
dec
inc
out
fdiv
fist
pop
cs
pop
(bad)
(bad)
pop
or
mov
enter
add
(bad)
push
fld
scas
pop
cmp
xchg
pushf
ret
stos
dec
sub
out
scas
div
inc
mov
push
ja
nop
dec
loopne
jmp
push
imul
push
cmp
das
inc
adc
inc
push
mov
add
fcomp
mov
and
or
xchg
iret
sbb
mov
mov
cmc
jg
fwait
lea
nop
adc
test
nop
sub
dec
movs
push
push
sbb
rol
es
jecxz
pop
add
add
add
pop
mov
iret
sar
push
or
sar
pop
int3
stos
push
test
aas
rcr
test
lock
outs
push
ss
jl
(bad)
jl
popf
jmp
(bad)
cmc
push
xlat
push
imul
lahf
out
popf
push
sahf
in
and
fild
push
pop
inc
dec
lock
xor
popf
loopne
movs
sbb
push
pop
or
aad
arpl
pop
pop
fstp
(bad)
dec
bound
add
dec
call
rcr
pop
movs
jne
sbb
aas
loop
les
or
mov
gs
ins
inc
mov
imul
mov
sub
aaa
xor
mov
pusha
shl
mov
imul
push
jae
and
call
aaa
xor
mov
mov
in
and
inc
sub
aaa
aaa
dec
xor
xor
or
inc
not
lahf
pop
add
mov
aas
pusha
pop
inc
bound
cmps
div
pop
test
cmp
lahf
cmps
and
test
sbb
cmp
repz
cwde
mov
call
and
mov
cmps
push
push
ins
jl
sahf
cmps
stc
sahf
mov
push
sub
in
aad
cmp
cs
imul
cmp
(bad)
or
nop
aas
mov
inc
scas
push
add
cmp
repz
je
sbb
repz
ret
in
pop
scas
mov
xor
jns
jbe
dec
pop
pop
pop
push
scas
dec
in
push
ret
inc
ss
sbb
add
mov
ret
pop
jo
mov
xchg
push
xchg
pop
xor
dec
in
pop
cmpxchg
outs
cdq
or
add
lods
(bad)
xor
add
(bad)
inc
mov
(bad)
outs
adc
mov
push
and
popa
sbb
mov
(bad)
push
gs
inc
ins
jae
push
cmovnp
inc
add
push
add
inc
(bad)
test
inc
sub
push
push
push
pop
pusha
mov
jne
push
fwait
aam
aam
sbb
or
dec
dec
cmp
cmp
mov
sub
dec
and
jns
add
sbb
loopne
das
das
adc
xchg
push
addr16
cmp
push
xchg
jbe
dec
loopne
ret
xchg
call
inc
adc
adc
push
xor
xchg
adc
ins
xchg
ins
lahf
iret
nop
sbb
bound
inc
movs
adc
into
mov
xchg
cmp
sahf
outs
jns
jg
addr16
xor
adc
xor
xor
daa
push
gs
sbb
pop
inc
out
push
jne
out
and
setl
fld
inc
lea
in
ds
popa
das
jo
or
rcr
rol
cmp
rdpmc
jno
movs
imul
mov
movs
inc
std
ud0
arpl
gs
jle
push
add
scas
dec
test
pop
test
or
mov
dec
inc
push
inc
outs
aaa
test
push
pop
inc
movhps
xor
ins
or
in
push
inc
adc
mov
in
cs
push
rol
ror
les
inc
dec
add
adc
lds
clc
cmps
add
cmp
cmp
ds
inc
add
pop
adc
fwait
test
loope
jnp
jge
jg
pop
cs
cdq
cmp
movs
add
stos
lods
aas
add
mov
and
adc
adc
inc
cmp
xchg
dec
add
sbb
(bad)
add
sbb
push
imul
cdq
jbe
add
ja
adc
call
add
pop
add
aaa
mov
pop
fimul
add
add
add
add
mov
mov
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
bts
mov
mov
mov
mov
aam
(bad)
add
(bad)
(bad)
loopne
loop
lock
(bad)
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
xchg
adc
dec
bound
mov
push
dec
or
mov
scas
dec
gs
sub
sbb
or
mov
fwait
loope
test
and
push
xor
adc
and
sub
push
jmp
lock
adc
in
inc
popa
xchg
dec
add
jmp
or
dec
dec
dec
xor
cmp
mul
daa
jae
or
cwde
push
cmp
popf
cs
aas
xor
and
aaa
jne
out
dec
mov
and
stos
add
cld
xchg
jb
jae
add
pop
test
sbb
int3
pop
das
dec
imul
mov
or
fidiv
push
outs
jnp
enter
pusha
in
ds
popf
jb
leave
adc
into
inc
femms
aaa
movs
fcom
sub
(bad)
lds
das
arpl
add
adc
dec
popa
sub
clc
loopne
(bad)
ja
cmp
xor
xor
mov
daa
test
inc
sbb
ret
xor
or
xor
cmp
dec
fisttp
cmps
cs
ficomp
adc
xchg
push
fisubr
aas
xor
pusha
adc
ror
add
xor
fdiv
outs
outs
ss
adc
fs
jo
cli
jbe
nop
out
pop
movs
inc
xchg
push
mov
mov
gs
mov
or
xor
pop
add
xlat
jb
inc
mov
push
cmp
pop
and
call
push
push
inc
aaa
ins
(bad)
ret
dec
imul
jmp
xor
add
pop
or
add
jmp
rol
mov
pop
cmp
adc
call
sbb
cmp
ja
in
repnz
add
(bad)
ret
ins
pop
push
cmp
fs
popa
add
xchg
arpl
xchg
sbb
out
jne
jo
push
lods
jae
add
push
and
xor
mov
jbe
add
inc
data16
out
or
dec
mov
(bad)
imul
jns
push
jmp
xchg
dec
(bad)
outs
sar
jmp
movs
cmp
and
fwait
pop
add
adc
add
add
add
add
loopne
pop
and
push
pop
pop
or
aaa
jg
inc
or
push
push
push
or
pusha
repz
js
or
sub
sti
mov
xor
xor
sbb
add
sub
fild
push
xchg
test
mov
mul
mov
pop
(bad)
daa
push
cmp
sahf
jge
push
push
and
sub
jb
int3
push
add
mov
dec
mov
mov
jle
push
or
cmc
xchg
inc
inc
dec
jae
pop
or
sbb
add
xor
jmp
sub
cmp
mov
in
or
(bad)
xchg
add
mov
xor
out
loope
push
lahf
lods
mov
mov
mov
lods
or
cmp
cmps
pop
in
xor
stos
in
loope
mov
dec
and
cmp
push
pop
cmps
push
imul
out
pop
cs
(bad)
nop
bnd
sub
ins
mov
cdq
ja
adc
push
fisttp
push
jbe
pop
pusha
rcr
(bad)
fldl2e
outs
adc
loop
add
push
das
dec
fild
fsubr
or
jae
adc
rol
call
or
and
add
imul
test
test
add
dec
mov
jno
cmp
add
fistp
loop
loope
cmovle
cmps
cmps
je
fimul
stos
pop
shr
sbb
add
out
adc
sbb
(bad)
mov
inc
or
jg
fistp
xchg
add
ret
fsubr
push
rol
das
call
mov
fisub
ret
xchg
xor
pop
aaa
mov
pop
mov
(bad)
aas
shl
mov
cmp
cmps
packsswb
cmp
rcl
sar
rol
mov
inc
add
add
adc
add
cs
push
cmp
add
add
add
add
pusha
adc
sub
push
rol
dec
or
add
push
fs
mov
sub
pop
lods
xchg
fxch
jg
pop
loopne
ds
push
mov
rol
push
out
ret
das
retf
jno
icebp
pusha
inc
mov
clc
ret
inc
xchg
(bad)
(bad)
data16
xchg
retf
daa
aas
aaa
add
rcl
seta
loopne
gs
bound
hlt
loopne
add
icebp
push
mov
ja
ds
movs
mov
adc
adc
mov
jle
push
call
int3
add
sbb
and
ss
sub
loopne
adc
sub
rcr
jg
imul
gs
jp
ins
(bad)
jnp
sar
push
data16
push
ins
daa
ret
xor
(bad)
cmp
or
add
arpl
cdq
inc
mov
adc
cmp
add
jmp
dec
xchg
pop
shr
pop
cmp
pop
ins
mov
xchg
shl
xor
lahf
and
add
shl
pop
sbb
fcom
push
lds
rcr
or
inc
mov
lods
mov
dec
pop
(bad)
ret
pop
outs
pop
cs
jae
and
add
sbb
test
sbb
mov
daa
arpl
loopne
add
outs
fdivr
xchg
int
jg
inc
and
dec
loop
daa
ins
stos
imul
pop
pop
pop
bound
popa
xlat
add
jbe
pop
jo
or
cmp
das
ss
adc
xchg
hlt
dec
test
dec
ret
push
fadd
imul
sbb
and
push
jae
daa
mov
loop
dec
imul
cmp
sub
and
push
addr16
(bad)
pop
adc
adc
sbb
cmp
div
push
data16
cdq
enter
jne
rcr
call
lods
sbb
nop
mov
or
pop
sub
imul
imul
aaa
mov
das
jbe
push
xor
pop
in
inc
lock
imul
ss
pop
xor
aaa
push
cmps
mov
or
xchg
pop
and
movs
popa
pop
fs
test
in
stc
daa
or
(bad)
fisubr
mov
jae
inc
daa
fist
dec
mov
call
jmp
into
fsubr
inc
lock
std
daa
call
add
add
and
sbb
inc
pop
xor
add
dec
aas
xor
jbe
pop
dec
dec
jg
add
add
jle
inc
dec
push
add
in
in
enter
int3
pop
aam
aas
rcr
outs
in
in
add
mov
stc
fwait
xor
pusha
cmovb
push
das
pop
mov
dec
add
pop
add
push
add
push
add
retf
mov
retf
scas
loopne
rol
inc
add
(bad)
stc
repnz
add
mov
add
xchg
das
pop
inc
add
push
ds
retf
call
push
dec
push
sub
dec
dec
push
add
outs
add
push
push
mov
push
push
les
inc
add
in
xchg
mov
add
add
mov
pusha
inc
add
cmp
and
retf
xchg
das
dec
add
lock
pop
mov
loopne
add
pop
add
xchg
das
push
add
add
shl
ins
leave
scas
push
iret
rep
and
pop
scas
push
push
inc
inc
xlat
sub
inc
push
dec
leave
outs
out
inc
cvtps2pd
add
sub
and
lahf
mov
and
jl
dec
dec
or
es
mov
enter
loopne
push
retf
xor
mov
out
out
push
pop
inc
inc
add
xor
daa
mov
dec
jo
cmp
jl
(bad)
enter
idiv
pop
pop
or
sbb
adc
add
or
adc
sbb
fwait
or
fiadd
inc
push
dec
cmps
dec
add
push
pop
mov
in
add
in
mov
outs
(bad)
aas
pop
daa
cmc
xchg
cmp
push
ret
scas
frstor
sub
imul
stc
out
mov
mov
xor
loope
xor
jecxz
call
mov
pop
out
adc
push
lea
lahf
ret
repz
jl
enter
or
mov
shr
xchg
mov
arpl
jbe
jmp
in
cld
mov
sbb
fwait
outs
(bad)
(bad)
mov
mov
or
shl
and
(bad)
xlat
ins
or
mov
outs
mov
(bad)
loope
sbb
movs
call
sbb
call
and
xor
dec
pop
mov
nop
and
aas
pop
push
sbb
and
bswap
cmp
jge
repz
aaa
jg
in
adc
movs
jle
fwait
or
repnz
pop
or
(bad)
(bad)
xor
scas
inc
lods
retf
cmps
daa
dec
push
and
rol
fwait
outs
(bad)
out
test
and
mov
retf
ins
xchg
mov
outs
mov
jno
fcmovnu
cmps
lock
xchg
stos
fmul
add
(bad)
inc
movaps
mov
pop
neg
daa
out
int3
pusha
data16
add
fistp
push
shl
imul
rep
pop
(bad)
out
lahf
out
cs
cmp
ficom
mov
pop
push
cld
in
lahf
adc
ins
imul
idiv
sub
movlps
aaa
(bad)
pushf
or
in
cli
es
jmp
repz
stos
mov
int3
int3
push
scas
adc
mov
sbb
fnstcw
lods
pop
push
sub
outs
inc
xor
in
mov
and
test
rcr
icebp
add
out
outs
sbb
call
fsubr
sub
sub
popf
mov
cwde
ja
loopne
jmp
(bad)
int
push
call
popw
fadd
movs
sub
jg
aaa
popa
lods
leave
fnstenv
jmp
aas
scas
ins
sub
stc
fwait
outs
xor
push
repz
mov
pop
add
cmp
das
sub
push
jmp
je
mov
out
sub
or
int
sub
bound
xchg
lahf
sahf
outs
mov
mov
and
and
sbb
in
mov
pop
jge
imul
mov
sti
mov
mov
cld
retf
cvtps2pi
sub
push
push
adc
ins
ins
imul
or
aas
xchg
loopne
mov
jecxz
sub
cli
mov
call
dec
sub
pop
pop
inc
mov
shr
cs
outs
jg
out
imul
fxtract
outs
push
fist
lea
in
(bad)
ficom
outs
mov
mov
aam
pushf
in
out
ret
out
push
and
(bad)
out
xchg
test
xor
out
loope
push
adc
int
jo
mov
loop
mov
pop
mov
add
cwde
jnp
jmp
add
push
test
cwde
lock
xchg
outs
mov
jmp
nop
add
cli
rol
dec
mov
pop
jb
in
scas
inc
fwait
mov
arpl
shl
rol
in
ja
jmp
out
dec
repz
xchg
outs
daa
and
loopne
xor
xor
adc
aaa
jg
int
fstp
cmps
ds
push
sub
ret
in
aaa
(bad)
int
mov
pusha
mov
push
(bad)
cmp
push
adc
mov
mov
push
push
push
push
jmp
shl
push
out
mov
test
lods
and
jb
ror
lods
stc
fwait
outs
(bad)
adc
inc
adc
or
dec
sahf
out
pushf
in
pop
js
int3
in
int
(bad)
mov
sub
clc
mov
and
fimul
repz
(bad)
ja
sub
loopne
sar
dec
fistp
pop
add
mov
stc
nop
jnp
movs
das
ret
test
outs
mov
pop
cmc
pop
push
sbb
pop
sub
stc
rep
leave
cld
mov
sbb
xchg
pop
iret
mov
icebp
lahf
(bad)
(bad)
idiv
hlt
dec
ret
aas
mov
and
add
xor
outs
mov
push
push
(bad)
or
add
cdq
mov
ja
mov
jmp
mov
call
(bad)
test
ja
les
in
xchg
cs
nop
sub
dec
jbe
dec
or
in
repz
stc
fwait
outs
mov
jecxz
push
mov
repz
jbe
cli
idiv
jmp
outs
scas
cwde
jp
push
and
imul
aas
add
cli
jl
aaa
fistp
lods
loope
push
jecxz
or
repz
ret
js
inc
enter
call
inc
stc
call
outs
mov
repz
fiadd
jmp
stc
fwait
jge
call
sbb
retf
mov
stc
out
cmp
out
mov
jmp
xchg
sar
int3
int3
(bad)
test
scas
inc
(bad)
aas
mov
sbb
sbb
sbb
mov
mov
loopne
popf
dec
xchg
test
hlt
rcl
(bad)
add
cld
int
(bad)
aas
stc
(bad)
(bad)
or
mov
(bad)
mov
sar
repz
fisttp
rcl
push
cwde
xor
gs
mov
dec
(bad)
mov
enter
(bad)
or
aas
aad
shl
mov
dec
and
push
dec
aaa
cmp
(bad)
das
mov
pop
mov
cmp
loop
mov
push
cmp
aam
repnz
aad
or
ins
sbb
iret
mov
bound
stos
push
dec
xor
fs
daa
cmps
hlt
or
mov
mov
sbb
add
adc
dec
and
fs
out
sub
jne
or
xchg
adc
ficom
push
js
(bad)
fwait
outs
(bad)
neg
or
out
and
lea
mov
mov
adc
test
mov
pop
sahf
stc
cmps
mov
sbb
jmp
popa
loopne
cmp
stc
out
call
inc
int3
xchg
fstp
inc
outs
(bad)
out
jmp
push
xchg
ret
sbb
bound
sub
and
aas
inc
mov
xchg
pop
loope
rcl
loop
inc
scas
cmp
mov
sti
(bad)
int
out
leave
lahf
mov
push
inc
jmp
in
(bad)
call
fisttp
pop
xor
into
aas
push
mov
fwait
mov
pop
imul
mov
loope
ficomp
in
and
fcmove
cdq
outs
sar
pop
retf
in
jmp
stc
mov
(bad)
mov
movs
mov
outs
sbb
shr
mov
outs
mov
xor
mov
shl
mov
sbb
sahf
jmp
cld
repz
jle
hlt
outs
cs
fcom
add
push
xchg
adc
repz
ret
and
jg
and
push
bound
into
and
(bad)
lock
inc
or
popa
rol
lar
mov
mov
sar
add
or
push
clc
int
jg
mov
and
hlt
mov
fidivr
je
mov
sahf
ja
sbb
fistp
popa
jmp
int3
(bad)
xlat
clc
mov
neg
sar
pop
popa
fisttp
scas
gs
ficom
sar
adc
cli
sbb
data16
mov
ins
push
xor
sbb
(bad)
push
push
mov
sbb
ror
loop
pop
mov
outs
jg
int
repz
imul
loopne
push
jmp
or
jns
adc
jl
mov
test
mov
cwde
xor
repnz
adc
jnp
fidiv
mov
aas
xchg
add
ret
mov
in
js
cld
int
jg
and
mov
or
cli
imul
hlt
cmp
jg
aaa
(bad)
adc
adc
inc
(bad)
ret
pop
ss
call
aas
lds
in
push
xor
enter
add
jg
mov
clc
xor
lea
sub
sub
mov
call
retf
or
sti
out
jns
cmp
(bad)
xor
jp
add
xchg
push
mov
add
push
mov
daa
and
add
test
dec
out
lahf
xchg
(bad)
sahf
jg
cli
pop
xlat
aam
repz
pushf
int
(bad)
(bad)
lods
mov
jae
xlat
aas
push
mov
or
test
cld
pushf
and
inc
in
cmp
cwde
xor
ss
jg
jmp
aas
arpl
jns
inc
nop
iret
jae
cmp
pop
pusha
add
cmps
xchg
jge
push
inc
out
(bad)
mov
push
iret
mov
aas
icebp
(bad)
xchg
sub
(bad)
cld
int
inc
leave
xchg
mov
and
push
mov
mov
sub
std
cwde
and
rol
cli
jmp
ret
sbb
fdivrp
(bad)
cld
jg
call
aas
aas
and
xchg
pop
fidivr
mov
loop
cld
in
fwait
push
cwde
or
das
mov
adc
inc
lds
or
jmp
(bad)
aas
mul
fstp
inc
ss
jg
mov
ja
jne
mov
jmp
nop
or
imul
xchg
fdivr
mov
adc
sti
out
mov
jo
add
rol
and
jge
ja
fwait
mov
adc
nop
push
fild
mov
cld
out
popa
xlat
sbb
add
mov
lea
(bad)
in
mov
sbb
jns
push
fild
pop
sub
aaa
jg
push
ds
lods
push
xor
sahf
jmp
sub
int
hlt
pushf
hlt
push
pop
outs
in
outs
in
cmps
inc
fidivr
sub
fsub
or
lods
mov
cmps
outs
(bad)
test
test
dec
fcmovne
push
in
retf
fidivr
mov
mov
pop
and
repz
adc
jg
mov
push
xchg
sub
cwde
pop
cmps
sbb
in
(bad)
fidivr
ds
push
xchg
pop
addr16
fcomip
aaa
or
push
shl
repnz
call
loopne
mov
(bad)
imul
and
stos
cmp
dec
inc
mov
std
lock
cmp
pop
inc
pop
sti
mov
stc
(bad)
jg
outs
dec
int
pop
in
sbb
mov
sub
jo
sbb
push
sub
push
out
jl
icebp
icebp
jl
int
(bad)
fisttp
xor
xchg
mov
rcr
loope
jnp
sti
sbb
mov
sahf
data16
lahf
imul
imul
jmp
stc
inc
fisub
loop
or
xor
push
repz
jl
pop
loopne
pop
push
int3
and
pushf
imul
stos
stc
int
jg
clc
sbb
call
mov
aaa
call
das
mov
adc
mov
xchg
mov
pminub
inc
ficomp
inc
imul
cmps
cmp
outs
(bad)
call
jle
xor
aas
pop
pop
cmp
icebp
in
ficomp
in
fcmovnu
jl
mov
sbb
inc
in
mov
pop
loopne
in
add
inc
ins
and
aas
push
push
ss
in
sbb
les
sub
aaa
(bad)
pusha
mov
add
push
stc
or
rol
(bad)
shl
outs
(bad)
jg
outs
movs
push
fidivr
(bad)
out
imul
stc
aaa
cdq
mov
sbb
fs
push
fidivr
cld
jmp
mov
adc
aas
bound
sub
adc
mov
push
mov
fiadd
pop
ins
dec
test
push
jmp
mov
pop
repz
pop
loopne
adc
iret
mov
add
jg
int
cwde
aas
mov
and
pop
inc
dec
sub
std
out
sahf
adc
and
pop
ret
cmp
xor
outs
pop
ror
cld
cmps
pop
std
mov
sub
ins
jge
pop
sar
jge
jg
jg
gs
xor
pop
dec
nop
push
mov
xchg
mov
pop
outs
sbb
push
add
adc
repz
or
das
jb
cmp
setle
iret
mov
aas
test
rcr
xor
jmp
test
cmc
mov
das
xchg
jnp
jae
sbb
aas
push
push
es
pop
scas
jle
int
or
jle
cdq
or
loop
(bad)
in
add
in
jbe
sbb
test
xchg
adc
and
outs
(bad)
out
fisttp
push
adc
jno
clc
ja
and
mov
repz
and
aas
shl
stc
xor
fcomip
idiv
adc
adc
hlt
sahf
jne
outs
mov
jb
jns
adc
cmps
sbb
inc
ja
(bad)
out
sub
js
outs
sahf
cmp
sbb
lock
sar
jno
jno
jmp
in
outs
pop
ins
push
fisubr
sti
movs
in
add
popa
repnz
adc
in
dec
add
jl
jmp
mov
popf
mov
inc
pop
cmp
repz
push
(bad)
adc
retf
sub
in
jl
lahf
outs
sub
scas
sub
xchg
pop
movs
fmul
add
repz
push
jmp
lds
(bad)
fsubrp
das
js
bound
out
dec
mov
mov
in
jne
(bad)
sbb
pop
rcr
sub
in
jmp
stos
in
jnp
mov
inc
leave
cld
cmc
mov
out
out
fistp
cwde
xor
xchg
in
jne
pop
mov
fild
xor
loopne
fs
mov
ret
loop
aaa
(bad)
std
adc
or
push
dec
int
pop
loope
sbb
(bad)
fdivr
mov
fistp
clc
cmp
lock
cmp
cld
fdivrp
mov
xchg
movs
cmps
or
fsub
(bad)
aas
add
popf
cs
fcmovbe
pop
int
add
(bad)
(bad)
sahf
cmp
fxch
push
dec
jae
les
push
test
repz
outs
jle
jp
dec
fcmovnbe
add
adc
jnp
dec
sub
aad
int
jle
mov
out
iret
inc
jmp
mov
mov
mov
loop
inc
std
scas
inc
pop
lahf
(bad)
sub
cld
out
mov
dec
iret
inc
mov
jg
pop
lock
jle
fist
int3
imul
call
outs
div
mov
in
xchg
popa
xchg
enter
retf
push
outs
jle
jg
in
and
sub
adc
aaa
mov
mov
sbb
xor
sub
or
ret
repz
sub
ret
xor
inc
sar
inc
ror
iret
outs
jle
dec
xor
xor
mov
mov
movs
rol
xor
call
aaa
mov
div
mov
mov
repz
stos
xor
stc
cmp
test
sbb
scas
jno
outs
jle
imul
jbe
add
fwait
mov
(bad)
stc
int
lahf
out
xor
movs
pushf
jae
retf
sbb
push
or
jmp
repz
xchg
push
lahf
mov
repz
or
test
sti
out
(bad)
fist
add
push
mov
stos
sub
jl
cld
test
rcr
pushf
ins
mov
xor
add
or
jg
repz
jl
mov
mov
jge
jbe
stc
int
xchg
sahf
dec
jl
jae
les
push
cmp
pop
or
cs
outs
jle
or
je
loopne
pop
push
or
stc
out
aad
fidiv
mov
in
push
xor
mov
imul
mov
add
sub
xor
loopne
cmps
loope
pop
mov
iret
out
mov
cs
fist
dec
adc
repz
repnz
jl
(bad)
test
cmp
lock
sub
cld
bound
xchg
cmp
in
xor
cld
out
push
push
lea
xor
aad
(bad)
sub
cmp
repz
sub
xchg
adc
sub
repz
and
mov
and
mov
movs
jecxz
and
les
adc
(bad)
out
adc
sub
leave
sbb
pushf
mov
pop
push
or
repz
in
mov
(bad)
and
push
repnz
add
out
retf
lock
out
std
out
aas
clc
out
mov
mov
cmp
and
out
aaa
mov
jecxz
fidivr
cld
mov
push
and
push
int3
repz
mov
add
cmp
pop
xor
push
mov
sahf
mov
int
jle
sub
dec
sbb
outs
popf
aaa
mov
cld
out
mov
scas
mov
jg
inc
cmp
pop
jne
repz
inc
sar
sub
(bad)
jno
or
lds
stc
int
scas
dec
jne
repz
inc
pop
ret
aas
jmp
pop
aaa
fidiv
cld
out
sbb
push
sahf
call
push
es
repz
mov
adc
fsubrp
push
mov
xor
in
pop
fistp
stc
cmp
fsub
inc
ror
outs
jle
pushf
mov
dec
or
and
gs
stc
sub
repz
push
push
jecxz
xchg
repz
sub
int3
jp
add
ins
aam
outs
stc
int
jle
push
sub
cld
sbb
mov
push
xchg
inc
mov
mov
addr16
icebp
out
add
sbb
mov
call
into
mov
cli
xlat
sti
in
aas
and
xor
outs
jle
adc
xlat
or
into
call
out
mov
fldcw
out
sahf
icebp
je
xor
mov
out
mov
sub
jle
movs
mov
and
cmp
(bad)
sbb
lahf
fistp
call
mov
cmp
ss
in
xchg
sub
out
mov
cmp
retf
cmp
mov
repz
jae
or
adc
icebp
retf
dec
sub
jp
mov
stc
int
jle
cmp
mov
cs
loop
xchg
stos
push
jmp
aaa
mov
pop
xor
push
jo
aaa
or
bound
fucomip
aas
repz
inc
cli
xor
jae
dec
sar
enter
stos
fnstsw
jle
add
enter
jne
(bad)
ins
sar
out
mov
hlt
cmps
mov
dec
dec
test
xchg
inc
fwait
(bad)
(bad)
xor
cmp
call
(bad)
shr
repz
ins
ja
sbb
add
pop
cmp
or
mov
and
out
gs
sub
jp
inc
push
or
cmps
clc
(bad)
jmp
push
push
(bad)
push
add
loopne
aas
inc
mov
int3
push
daa
dec
mov
jg
fwait
pusha
js
aam
pop
push
sub
inc
shl
and
int
js
sbb
shl
add
test
jmp
aas
mov
outs
push
sahf
and
pop
jns
dec
shl
aas
call
mov
std
shl
fcmovb
out
loop
icebp
fdivr
outs
jle
repz
jnp
push
popf
scas
xor
mov
sbb
int
pop
lods
call
loopne
rcl
dec
inc
aaa
mov
fcomip
push
mov
outs
fistp
mov
sub
xchg
mov
xchg
cmps
(bad)
(bad)
(bad)
fnstsw
cli
add
aas
stos
lea
xchg
fstp
sub
mov
push
pop
mov
push
ret
cs
xor
and
je
aaa
stos
out
(bad)
aas
or
aad
and
mov
aam
mov
(bad)
ror
jmp
sbb
sar
pop
mov
mov
lock
sub
sahf
adc
mov
aas
arpl
mov
cmc
call
xchg
cmp
(bad)
das
or
aas
(bad)
jns
and
xchg
sldt
mov
push
add
aas
xor
add
sti
fdivr
aas
jmp
call
sbb
lahf
aas
pop
mov
in
les
les
test
aas
call
aas
(bad)
jg
rol
jmp
add
cmp
inc
xchg
ss
and
bound
or
jbe
jmp
jg
xor
fimul
leave
ds
movs
out
jg
mov
push
sets
inc
xchg
inc
rol
pop
pop
xor
jb
mov
mov
cmp
inc
in
out
push
mov
inc
inc
mov
mov
xchg
addr16
add
or
cld
fimul
inc
mov
int3
out
cmovo
push
add
shl
outs
scas
inc
outs
daa
xadd
pop
or
fsub
addr16
in
movs
(bad)
pop
cmp
in
in
push
inc
fucomp
lods
jo
in
dec
pop
inc
and
jmp
add
push
dec
in
enter
jmp
add
in
xchg
fisttp
and
call
in
lods
xchg
and
leave
leave
retf
fistp
pmuludq
inc
shr
mov
addr16
das
and
fcmovnu
in
leave
add
loop
scas
ror
mov
xchg
add
pop
in
ins
in
add
add
ror
ins
in
in
add
in
paddsw
scas
in
xchg
in
pusha
pop
loopne
in
inc
sub
jnp
pushf
das
loop
pop
mov
aas
cdq
leave
in
jbe
sub
(bad)
leave
and
dec
mul
outs
loopne
add
addr16
retf
sahf
pop
ror
divps
xor
cmp
mul
pavgw
pop
mov
mov
sbb
pop
dec
xor
and
jmp
dec
in
loopne
outs
xchg
and
loopne
mov
jb
aas
xchg
je
in
in
inc
xor
das
dec
add
shl
std
xchg
lahf
jmp
div
fld
sahf
cmp
push
jp
and
adc
fs
aas
inc
xchg
xchg
stc
jmp
jmp
mov
xlat
pop
xchg
dec
pop
mov
jo
cmp
cmp
aas
(bad)
mov
dec
lods
aas
or
retf
or
aas
in
das
xchg
xchg
(bad)
out
(bad)
fist
dec
pop
test
aas
inc
pop
adc
push
clc
dec
push
aas
test
(bad)
repnz
mov
(bad)
mov
pusha
and
inc
rcl
(bad)
mov
inc
call
jb
call
pop
mov
ror
xlat
mov
aas
push
add
(bad)
jg
push
cmp
je
stos
mov
inc
scas
daa
jp
ret
aas
mov
gs
mov
lahf
pop
je
push
jbe
(bad)
fwait
and
ret
dec
push
pusha
nop
fs
rol
(bad)
aas
(bad)
aas
push
lds
js
movs
pop
(bad)
aas
clc
out
pop
jmp
jmp
call
enter
mov
rcr
push
mov
aas
adc
push
ror
jg
jg
sub
xor
retf
xchg
mov
scas
adc
or
mov
(bad)
mov
stc
dec
int
sub
mov
into
aas
repnz
(bad)
(bad)
std
sbb
jle
jecxz
mov
data16
mov
push
ss
js
mov
add
or
icebp
cmp
mov
into
adc
mov
cmp
sti
fwait
outs
push
lock
or
xchg
aas
ds
nop
movs
inc
sar
les
cld
pop
aam
call
lods
push
fistp
ds
cmc
xor
sti
call
add
fdivp
jecxz
rcl
dec
pop
pop
inc
test
aam
ins
ret
outs
mov
mov
sbb
add
int
aaa
(bad)
mov
aad
dec
mov
cmp
add
jmp
jne
jae
jle
(bad)
aas
les
and
mov
out
xchg
daa
loop
push
aaa
cmp
xor
jg
jno
outs
shl
mov
mov
mov
fdivr
jbe
retf
add
cmp
fbstp
push
call
sahf
rcr
fnstcw
addr16
mul
ds
std
mov
(bad)
mov
or
xor
mov
std
std
lea
jne
dec
jle
mov
mov
nop
xor
pop
sar
daa
(bad)
mul
jmp
fstp
pusha
pop
sahf
or
dec
js
jle
push
and
or
out
(bad)
jg
mov
inc
inc
xor
(bad)
(bad)
(bad)
loop
pop
add
and
cdq
fnstsw
add
call
push
sar
loop
mov
mov
sub
loop
lock
aas
loope
mov
or
add
inc
shl
sub
jo
sahf
xor
fistp
fld
sahf
ins
std
push
popf
imul
lock
test
dec
out
pop
daa
inc
mov
push
lea
or
js
mov
fmulp
ins
jle
call
shl
movs
push
adc
push
pop
inc
xor
pop
repz
fbstp
mov
(bad)
inc
rcl
sbb
retf
int
jl
je
arpl
pop
push
and
std
int
jg
pop
add
mov
jno
add
aas
(bad)
mov
push
movs
sub
mov
ja
cmps
adc
xor
sahf
xor
mov
ja
dec
dec
cmc
add
mov
adc
fist
(bad)
jg
movs
mov
call
xlat
outs
push
and
push
cmp
jg
call
inc
xchg
sbb
ds
and
outs
mov
and
outs
xor
enter
cld
call
xlat
mov
div
xor
inc
or
jg
lahf
hlt
and
cdq
retf
(bad)
mov
pop
sub
push
call
fwait
push
cmps
jb
mov
(bad)
inc
xchg
(bad)
(bad)
mov
dec
push
aas
push
xor
mov
jle
sbb
aam
inc
scas
dec
shr
mul
ins
repz
pusha
sbb
jns
call
mov
fwait
aam
call
pop
push
in
popf
sar
push
jg
push
jg
jo
clc
adc
sbb
lock
or
sar
mov
xchg
aaa
xor
xchg
mov
or
jle
ins
inc
mov
sar
shl
mov
shl
xor
push
sub
jmp
sti
sar
not
(bad)
sub
push
mov
mov
repz
fcmovnu
push
inc
in
enter
sahf
mov
iret
mov
jbe
cmp
sar
sar
repz
outs
ss
ins
(bad)
push
lods
int
or
(bad)
mov
lahf
cmp
cwde
ror
mov
int
add
pop
cld
retf
mov
cld
mov
push
nop
test
cmp
es
pop
jmp
mov
pop
in
dec
retf
(bad)
bound
inc
loop
jge
mov
arpl
ds
mov
lods
test
repnz
and
movs
or
inc
push
jg
fwait
aas
jg
mov
out
(bad)
push
ins
cmp
ds
mov
pusha
xor
mov
sbb
jle
and
lods
arpl
mov
aaa
or
and
cmp
out
movs
xchg
les
xchg
mov
mov
pop
and
push
inc
push
loopne
push
stc
ret
ss
ret
cmp
rcr
pusha
je
repz
jecxz
xor
cmp
sar
mov
(bad)
mov
in
sar
fimul
inc
scas
clc
push
pop
or
xor
mov
(bad)
cld
jg
cld
mov
pop
in
js
mov
sbb
cli
mov
sti
dec
(bad)
mov
stos
retf
adc
mov
mov
daa
aaa
sahf
jmp
pop
cld
mov
(bad)
stos
idiv
cmp
mov
retf
aaa
cld
sti
push
add
stos
xor
jmp
pop
adc
inc
jmp
(bad)
(bad)
call
mov
sbb
cmp
inc
mov
mov
sbb
fistp
pop
fdivr
test
mov
int3
scas
jmp
(bad)
hlt
mov
call
pop
jbe
cmp
cmp
mov
xlat
jl
data16
push
cmp
cmps
sahf
push
scas
repnz
xor
push
and
jg
mov
(bad)
stc
lds
movs
dec
and
or
xor
call
sub
jp
jge
xchg
mov
icebp
add
mov
shl
mov
mov
pop
sub
mov
lods
push
adc
(bad)
js
les
ja
int
mov
arpl
in
inc
(bad)
out
paddd
cld
leave
leave
leave
leave
sti
cli
stc
clc
leave
leave
leave
leave
div
cmc
hlt
leave
leave
leave
leave
repz
lock
leave
leave
leave
out
out
in
in
leave
leave
leave
leave
jmp
jmp
leave
out
in
leave
leave
leave
leave
jecxz
loope
leave
leave
leave
leave
(bad)
fstp
leave
leave
leave
leave
fcmovnu
(bad)
leave
leave
leave
leave
xlat
(bad)
aad
in
in
rol
in
in
into
int
in
in
retf
retf
in
in
mov
in
ret
ret
adc
outs
cmp
jns
jo
daa
daa
daa
push
push
push
push
sub
daa
daa
or
jb
or
jb
jb
or
or
jb
or
or
jb
jb
or
or
jb
jb
or
or
jb
jb
or
pop
pop
jb
jb
pop
push
push
push
jb
jb
push
add
jb
add
jb
jb
add
add
jb
add
add
jb
jb
add
add
retf
ins
jb
add
cmovo
sub
sbb
lock
aas
push
popa
(bad)
outs
xchg
xor
or
and
xor
sbb
push
or
sub
cmp
mov
mov
xchg
daa
popa
add
dec
aas
(bad)
sub
(bad)
mov
leave
cwde
push
aas
sub
lods
sub
jp
adc
push
aas
mov
fisttp
push
add
mov
adc
xchg
mov
inc
call
pop
mov
aam
(bad)
hlt
inc
es
jg
fild
retf
dec
cmp
loopne
or
fild
inc
sahf
clc
jmp
mul
sbb
jg
(bad)
stc
mov
and
cli
lahf
push
nop
pop
dec
pusha
xor
call
xor
lock
dec
gs
xor
dec
(bad)
(bad)
stc
call
aas
inc
div
sbb
pushf
xor
pop
mov
dec
call
mov
imul
mov
adc
aas
test
(bad)
out
into
mov
adc
stc
int3
mov
sar
stc
ins
aas
ds
(bad)
(bad)
cld
mov
jl
cmp
aad
imul
adc
mov
aam
clc
idiv
xchg
jmp
aas
jp
add
or
jno
adc
cmc
push
inc
ja
repz
loope
xchg
jge
pop
add
pop
test
mov
fcos
xchg
(bad)
mov
ficom
aas
mov
mov
fbld
or
lock
(bad)
imul
call
(bad)
push
in
shl
enter
(bad)
(bad)
aas
pop
in
xor
xor
or
and
jbe
out
adc
test
jg
cmp
xor
inc
pop
dec
jle
sbb
stos
ja
jno
inc
or
mov
push
gs
xor
or
fist
rcr
aas
lds
mov
mov
add
and
sub
int
mov
dec
call
sub
pop
rol
ss
jnp
rcr
(bad)
std
jg
ret
jl
ja
xor
mov
dec
mov
pop
(bad)
std
out
sub
loopne
jge
nop
sahf
and
jns
jle
icebp
aaa
jg
jl
les
pop
sbb
mov
pop
inc
int
(bad)
(bad)
fiadd
pushf
pop
mov
nop
xchg
xor
or
pop
retf
cmp
push
cmp
(bad)
je
push
int3
lea
dec
push
xor
(bad)
cld
int
shl
iret
push
and
mov
cmp
aaa
ret
repnz
aas
cmp
outs
mov
gs
popf
data16
call
dec
add
push
ret
sbb
adc
cli
sub
iret
fild
mov
sub
xchg
fild
adc
(bad)
(bad)
out
(bad)
and
fadd
sbb
pop
and
aam
adc
cmp
shr
cmp
out
mov
hlt
neg
mov
jecxz
test
out
(bad)
(bad)
cli
repnz
clc
aad
dec
push
clc
rcr
adc
mov
aaa
fst
cs
iret
mov
(bad)
jle
dec
dec
mov
and
xor
aam
jg
out
inc
retf
in
ret
inc
fsub
(bad)
repnz
inc
sbb
(bad)
aas
inc
mov
inc
xchg
daa
stos
xor
imul
pop
js
int3
mov
jle
int3
xchg
retf
(bad)
lods
jbe
dec
mov
pop
mov
inc
iret
push
gs
ins
cli
sbb
aas
(bad)
jmp
mov
cmc
jne
sar
aam
cld
dec
mov
cdq
jl
(bad)
cld
stc
mov
xchg
rcl
cmp
push
inc
dec
pop
lock
(bad)
jbe
call
loope
mov
or
and
test
adc
mov
aaa
jg
ja
sub
pop
dec
ins
es
and
test
cwde
shl
test
aas
jg
fdiv
mov
add
call
cs
loope
(bad)
out
inc
sub
lea
jbe
dec
mov
push
aaa
mov
jo
call
mov
xor
outs
(bad)
hlt
int3
jp
outs
out
fucom
or
add
jo
add
lahf
(bad)
mov
bnd
push
xchg
or
dec
loopne
call
int
xor
das
xor
sbb
outs
mov
mov
fwait
jg
pusha
or
mov
push
or
add
call
mov
or
rcl
mov
(bad)
mov
mov
scas
cwde
shr
dec
mov
repnz
push
push
es
sbb
test
imul
mov
cmp
jg
jmp
test
mov
or
lock
fstp
cld
enter
pop
(bad)
fldcw
sbb
repz
repz
out
inc
cmp
dec
mov
jge
sbb
in
and
(bad)
(bad)
mov
es
xor
jnp
push
mov
mov
adc
cmp
fwait
jg
pop
loop
gs
inc
(bad)
mov
fs
stc
sti
pop
mov
push
scas
xor
push
ret
mov
sbb
inc
push
sar
fnstenv
mov
xor
clc
(bad)
jnp
bound
jg
ja
mov
sbb
repz
jle
pop
mov
retf
jmp
int
dec
lds
push
xchg
pusha
mov
movs
push
(bad)
(bad)
clc
jo
into
mov
(bad)
jbe
jmp
inc
pop
mov
pop
cmp
fisttp
sbb
pop
mov
mov
push
xor
mov
imul
and
dec
hlt
pop
or
stc
add
pop
sbb
xor
dec
inc
sahf
inc
aaa
gs
call
retf
mov
mov
dec
cdq
ins
std
ror
cli
nop
inc
imul
or
jg
stos
jp
cmp
jl
call
inc
push
dec
push
mov
mov
lahf
xor
mov
into
xor
repz
mov
pop
stc
mov
inc
aaa
inc
push
sbb
xor
and
das
(bad)
adc
(bad)
out
(bad)
mov
ret
push
mov
inc
mov
lea
aas
inc
fldenv
dec
inc
mov
cmp
mov
mov
lock
stc
and
mov
mov
in
lahf
scas
lea
sbb
pushf
dec
sub
cmp
pop
adc
adc
mov
outs
fsubp
fcom
pop
sub
xor
(bad)
jmp
lea
xchg
and
push
inc
add
inc
fsubr
xchg
inc
ds
cmp
jb
mov
ss
xor
in
jb
xor
cs
mov
fcmovne
sub
pop
daa
fmul
daa
outs
and
pop
and
mov
outs
sbb
jbe
sbb
outs
pop
push
pop
xchg
fcmovne
leave
adc
adc
dec
outs
daa
mov
pop
or
cmp
push
outs
add
jb
add
call
std
adc
jb
sbb
pop
cli
stc
add
mov
div
rep
bnd
jb
lock
out
in
in
outs
fcmovne
in
in
jmp
outs
daa
mov
in
pop
loop
outs
fistp
pop
(bad)
fnstenv
cmp
aad
outs
fcmovne
in
in
rcr
iret
into
outs
daa
daa
mov
int3
retf
pop
leave
enter
dec
outs
outs
(bad)
ret
jb
mov
mov
in
in
mov
mov
(bad)
scas
popf
fmul
outs
lods
stos
pop
stos
test
jb
mov
movs
mov
mov
popf
daa
mov
fistp
xchg
xchg
pushf
fmul
outs
xchg
xchg
pop
xchg
nop
fidiv
fistp
inc
mov
mov
sahf
fmul
dec
popf
popf
pushf
outs
fwait
mov
call
cmp
in
jb
xchg
xchg
xchg
aas
xchg
in
in
in
xchg
nop
nop
outs
fcmovne
leave
leave
(bad)
mov
xchg
xchg
mov
daa
mov
outs
mov
dec
outs
aas
xchg
fmul
outs
add
cmp
jle
jb
jb
jge
jl
jnp
in
jbe
aas
jns
js
leave
in
in
jbe
jbe
xchg
xchg
fcmovne
je
aas
jae
daa
mov
xchg
jno
jo
outs
outs
dec
outs
daa
daa
outs
ins
aas
ins
ins
pushf
fmul
imul
imul
addr16
addr16
cmp
gs
arpl
jbe
jb
bound
pusha
in
in
in
pop
pop
pop
outs
fcmovne
leave
leave
pop
pop
pop
pop
aas
xchg
xchg
xchg
xchg
pop
pop
pop
push
daa
daa
daa
mov
outs
push
push
push
push
dec
dec
dec
outs
aas
push
push
push
push
popf
pushf
pushf
fsubr
push
dec
dec
cmp
cmp
dec
jb
jb
dec
outs
dec
dec
dec
sub
ins
ud0
push
cli
ja
idiv
add
and
outs
dec
fdiv
pop
sar
xchg
call
push
mov
add
xlat
ds
(bad)
pop
dec
dec
sbb
mov
(bad)
out
inc
fnstsw
mov
es
jg
add
fstp
(bad)
(bad)
in
(bad)
sub
sar
inc
fadd
std
es
stc
mov
fistp
add
cmp
popf
mov
add
ds
sub
scas
cld
jns
mov
or
arpl
push
repnz
inc
ds
test
mov
pop
shl
or
or
mov
cld
mov
xchg
mov
retf
sti
inc
pusha
or
cmc
bound
inc
call
add
mov
mov
ds
loope
push
(bad)
out
into
fmul
int3
push
add
ds
mov
inc
adc
mov
es
adc
cld
ds
or
mov
stc
jg
or
pusha
ins
xchg
jb
inc
pop
or
sar
and
xor
(bad)
jg
mov
cmp
iret
pop
push
(bad)
or
add
mov
and
adc
jae
fist
aas
lea
and
pop
xadd
mov
inc
mov
call
xlat
aaa
stc
xchg
xor
mov
adc
aas
jno
ins
loope
ins
sub
adc
and
scas
inc
das
jg
adc
add
and
push
aas
jmp
mov
loop
or
pop
and
aas
xor
cdq
or
xchg
sbb
xchg
(bad)
fistp
hlt
sti
in
cmp
sub
or
sub
dec
addr16
mov
loopne
inc
or
mov
pop
jb
add
aas
fcomi
jae
shr
jg
int
inc
sub
rcl
mov
out
(bad)
(bad)
dec
test
pop
and
or
out
jo
pusha
jno
pop
dec
and
idiv
ret
outs
cld
bnd
not
pop
xor
mov
mov
xchg
push
aam
inc
push
aas
iret
jmp
pop
test
aas
daa
push
lock
out
cmc
cmp
sub
data16
xor
mov
inc
pop
sti
(bad)
std
out
inc
adc
shr
cmp
fist
nop
out
addr16
and
imul
adc
dec
xchg
mov
jg
neg
sahf
cmp
pop
aaa
sbb
xor
out
jmp
popa
sbb
adc
or
mov
sbb
(bad)
out
pop
add
xchg
push
rol
jg
mov
outs
jle
mov
aas
aam
adc
repnz
jmp
jno
push
sub
sti
shl
add
and
rcr
mov
pop
jo
xor
int
call
jl
aaa
pop
and
das
ret
and
pop
mov
dec
out
outs
scas
sbb
ds
xor
inc
stc
fwait
mov
cmp
pop
cmps
sub
mov
(bad)
pop
adc
add
aas
mov
xor
push
xchg
mov
mov
cld
sub
inc
out
mov
adc
dec
cmp
in
adc
aas
and
(bad)
add
mov
sub
pop
(bad)
shr
call
jg
sti
out
xor
dec
fiadd
clc
jg
xor
push
bound
add
clc
xor
fwait
lahf
cmp
xor
cmps
test
data16
inc
jg
neg
jle
dec
pop
push
cmp
fnstcw
sub
inc
pop
(bad)
loop
mov
daa
cmp
jle
mov
sbb
int3
jnp
and
loope
mov
or
iret
rcr
(bad)
call
aas
movs
jmp
add
inc
jo
cld
jnp
scas
and
out
aad
out
sar
stos
out
cmc
or
inc
and
int
call
mov
jne
and
cmp
inc
or
es
in
scas
ins
dec
loopne
cmc
outs
mov
dec
xor
mov
mov
jmp
fcmove
pop
test
fdivr
scas
cld
int
lock
add
dec
into
dec
push
push
aas
or
daa
mov
stc
fwait
sub
mov
inc
scas
inc
jbe
add
aas
repnz
push
(bad)
sub
inc
jle
pusha
dec
and
loope
mov
mov
rcl
cmp
adc
aas
jmp
jle
in
ror
sub
dec
mov
push
lock
xor
shr
cwde
ds
and
fwait
push
add
xor
lods
mov
adc
push
mov
and
xor
and
mov
and
lahf
or
mov
push
repz
adc
out
inc
cs
jne
inc
fdivr
int
cmp
ss
mov
push
fld
xor
std
jmp
push
mov
or
aas
mov
and
and
cmp
lahf
jg
pop
mov
pop
js
jns
inc
cmp
inc
xchg
fisttp
adc
popf
rcr
in
jecxz
sub
movs
xchg
rcr
(bad)
fdiv
adc
sti
in
lock
int3
inc
sub
cmp
pushf
xchg
loope
int
mov
dec
push
xor
push
test
js
in
scas
cld
dec
jge
add
dec
adc
test
mov
aaa
jg
js
pop
inc
fcomp
mov
push
mov
lods
popf
retf
aas
rol
xchg
stc
fld
pop
aas
adc
push
push
cmp
pop
addr16
nop
loope
fsubr
dec
shl
push
inc
ret
dec
call
cmp
cmp
out
aaa
outs
pop
cmp
movs
push
ja
dec
pop
sahf
dec
dec
repnz
push
(bad)
mov
fstp
add
cmp
inc
bnd
mov
pop
cmp
cmp
shl
ret
cld
fs
push
add
aas
jle
dec
jl
or
cld
in
jae
xor
push
les
test
pop
repz
ret
(bad)
sti
ror
ds
dec
lahf
pop
mov
push
add
adc
or
pop
adc
adc
movhps
movs
retf
into
rcr
push
mov
ins
push
(bad)
out
mov
mov
adc
or
(bad)
jle
div
lds
push
movs
shl
aam
mov
(bad)
jg
outs
pop
jl
das
push
mov
fs
xor
call
fistp
adc
sbb
jmp
ficomp
cld
int
lahf
jno
sbb
push
test
mov
jle
in
cmp
add
aas
adc
pop
mov
stos
ja
pop
stc
jg
outs
push
xor
and
es
adc
dec
xchg
pushf
cmp
inc
int
fistp
mov
inc
test
jg
(bad)
xor
outs
scas
cld
les
inc
retf
adc
fcomp
mov
clc
mov
rcr
das
repz
mov
(bad)
adc
pop
scas
cld
int
ret
sbb
mov
mov
scas
jg
in
pop
mov
dec
sub
cmp
dec
ds
stc
fwait
sub
fisttp
ja
push
pop
loopne
repnz
fbld
inc
and
out
adc
jl
sbb
test
mov
les
inc
loop
dec
in
scas
cld
and
test
pop
cmp
loop
adc
xor
fwait
sub
je
das
loope
cli
mov
(bad)
stc
sub
out
jmp
fist
mov
loopne
int
mov
mov
cdq
out
(bad)
xchg
in
push
imul
cld
push
adc
je
and
dec
adc
mov
ret
test
mov
out
out
ret
mov
or
out
jle
adc
stos
cmp
jl
xor
int3
out
inc
shr
ja
jae
add
adc
call
sbb
xor
mov
outs
mov
push
jmp
aas
es
cli
mov
jge
int
cs
inc
cld
jae
xchg
mov
ror
in
add
aad
jg
jecxz
mov
dec
or
nop
push
mov
xor
std
fist
sub
xlat
lahf
cmps
and
cs
inc
sti
mov
ja
jg
jge
xor
(bad)
xor
and
adc
stc
aas
sub
lahf
repnz
dec
jge
mov
fstp
push
inc
and
or
cmp
cld
mov
mov
scas
xchg
dec
cld
fdivr
or
out
cmp
fwait
lods
xor
pop
rcr
mov
sbb
(bad)
rcr
add
pop
adc
pop
inc
cmps
bnd
mov
mov
add
outs
push
mov
mov
lahf
push
push
or
cld
mov
dec
loopne
dec
mov
(bad)
mov
jg
in
inc
clc
mov
std
mov
aas
push
xor
jl
push
aas
pop
in
or
mov
out
(bad)
out
fistp
test
dec
mov
out
xlat
shr
out
aas
cli
lahf
out
js
sbb
pop
cmp
jg
aaa
push
dec
jbe
sbb
call
fisttp
xor
cld
mov
mov
shl
jmp
mov
fild
jmp
add
sbb
dec
pop
loopne
lahf
mov
rcl
stc
(bad)
xor
xchg
push
scas
movs
mov
inc
xchg
add
fmul
cmp
pop
stc
fwait
jg
dec
xchg
fld
shl
pop
out
aas
adc
repnz
bound
add
fild
mov
lods
jbe
cmps
out
jg
fistp
cmp
push
inc
clc
pop
push
sub
aaa
push
(bad)
pop
loop
mov
push
inc
fiadd
pop
or
jnp
jg
add
adc
inc
mov
or
dec
repnz
push
icebp
fwait
sub
mov
inc
push
repz
adc
(bad)
cli
add
sti
mov
xchg
repz
and
imul
xchg
mov
fdiv
sub
stc
xchg
cmp
pop
pop
jmp
push
adc
ret
sti
outs
(bad)
mov
xor
aas
push
push
push
test
dec
mov
push
std
mov
loopne
dec
in
pop
pop
inc
out
mov
mov
cmp
in
cmps
rcr
adc
sahf
sub
mov
dec
sti
mov
int
call
lock
mov
test
(bad)
stc
mov
(bad)
in
retf
inc
call
sbb
xchg
xchg
mov
repz
mov
xchg
mov
repz
repz
or
pop
pop
lods
hlt
push
mov
xlat
push
dec
jg
outs
scas
push
inc
push
retf
sub
cmc
mov
push
(bad)
pop
stc
mov
iret
test
xchg
idiv
hlt
mov
sub
aas
out
push
aaa
inc
xchg
cmp
inc
pop
idiv
mov
fldl2t
pop
aaa
out
lock
or
mov
shr
sbb
push
in
(bad)
out
(bad)
out
pop
push
pop
pop
test
aas
idiv
cmp
xor
jg
retf
jmp
(bad)
mov
or
sub
cmc
jg
mov
pop
and
idiv
mov
call
in
mov
jo
aaa
(bad)
jg
cmps
clc
jmp
ins
fnstsw
adc
xor
mov
out
pop
stc
jg
dec
jmp
cdq
out
pushf
lock
jmp
mov
dec
jmp
xor
sti
jg
mov
shr
pop
sti
(bad)
out
mov
push
jmp
aas
xor
jmp
mov
xor
inc
mov
jg
mov
stos
sahf
cmp
pusha
movs
cmp
push
fistp
pop
jle
mov
cmp
mov
jne
adc
add
inc
std
call
scas
cmp
mov
mov
mov
cmp
ss
(bad)
call
mov
mov
cmp
out
fistp
retf
mov
push
push
cmp
cmp
fistp
(bad)
mov
loope
inc
jmp
(bad)
inc
adc
(bad)
(bad)
inc
fadd
addr16
mov
push
aas
pop
call
cmc
int
cmps
push
mov
mov
add
mov
jmp
jg
aas
out
push
fs
cmps
ret
jns
arpl
add
inc
cs
pop
pop
ret
mov
cmp
mov
call
ja
call
nop
jno
test
call
push
outs
leave
ja
sbb
nop
mov
mov
gs
movs
loop
lea
(bad)
(bad)
fdivp
(bad)
imul
mov
fist
jne
inc
xchg
test
jg
push
cmp
repz
retf
xor
dec
xchg
cmp
mov
ins
pop
mov
int
outs
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
jno
loop
fcomp
nop
cmp
aaa
(bad)
mov
in
jecxz
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
jnp
dec
out
(bad)
inc
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
inc
movs
ins
mov
mov
mov
call
das
xchg
pop
mov
enter
stos
out
mov
jnp
jge
mov
xlat
mov
aaa
inc
cmp
mov
xchg
shl
adc
jmp
mov
in
dec
jnp
pop
mov
pop
add
loopne
pop
imul
xor
stos
mov
repz
add
sahf
cmp
frndint
and
mov
sbb
outs
(bad)
mov
cmp
adc
xchg
(bad)
cld
push
jge
dec
pop
push
in
movs
xchg
xchg
jle
cmp
jne
jp
jb
(bad)
mov
out
mov
mov
cmp
cmps
mov
into
push
pop
movs
hlt
hlt
mov
fnstsw
inc
imul
(bad)
fldl2t
inc
cdq
xor
fild
cmp
loope
pop
(bad)
jmp
cmc
popf
sahf
push
adc
cmp
(bad)
sar
mov
repz
or
in
test
aam
fist
nop
cmp
das
ds
(bad)
jg
and
inc
bswap
jno
adc
push
repz
in
xor
push
mov
scas
xor
jo
push
jl
sbb
push
fs
jmp
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aaa
(bad)
mov
out
pop
mov
jno
jmp
data16
ins
scas
mov
sahf
mov
(bad)
ss
fwait
jmp
jne
in
adc
sub
aaa
clc
jmp
xor
dec
cmps
fdivrp
neg
lock
ficomp
lods
add
cli
push
repz
push
stc
and
xchg
mov
sub
mul
or
hlt
aas
js
xor
repz
mov
cmc
xor
repz
sub
dec
iret
sub
jp
dec
cmp
add
outs
(bad)
jg
mov
xchg
pushf
cmp
cmp
mov
xchg
bound
cmp
rcl
lock
mov
(bad)
retf
cdq
cmp
sub
aad
mov
xchg
inc
out
aaa
(bad)
jge
or
fdiv
js
mov
cmps
sub
jbe
stc
cld
(bad)
(bad)
jmp
push
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
std
pop
aam
ficomp
setb
movs
push
ds
(bad)
aas
dec
ss
outs
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
out
(bad)
stc
call
cmp
dec
fld
stos
inc
inc
add
mov
pop
mov
leave
cmc
fwait
(bad)
fistp
mov
dec
cmp
dec
and
out
xor
cmps
test
pop
push
or
jbe
loope
idiv
inc
ficom
inc
loop
push
cmp
(bad)
xchg
mov
jle
and
int3
xor
inc
xor
outs
mov
(bad)
and
xor
xchg
mov
mov
mov
and
cmp
cmp
sahf
mov
xor
stc
(bad)
in
aaa
mov
rcr
or
addr16
mov
das
sbb
mov
push
(bad)
mov
cmp
push
stc
jge
test
and
je
in
fistp
call
cdq
jp
xchg
add
fnstcw
fwait
jmp
inc
push
jmp
shr
push
pop
and
pop
fimul
cmp
jmp
push
add
mov
add
jae
mov
ja
test
shl
in
rcl
push
ror
cmp
dec
iret
ss
jns
out
(bad)
(bad)
mov
adc
ds
daa
add
aas
sub
xchg
mov
mov
xlat
xor
mov
sbb
int
mov
in
xchg
inc
fstcw
call
fwait
clc
(bad)
lahf
mov
(bad)
mov
mov
repz
push
sub
(bad)
push
es
xchg
jmp
mov
xor
mov
jecxz
xor
jo
sub
xchg
jecxz
adc
in
aaa
(bad)
inc
or
stc
aas
and
in
int
aaa
aaa
push
mov
jle
add
push
enter
cmp
movs
xchg
jl
jbe
push
dec
ficomp
int
pop
rol
mov
mov
xchg
mov
outs
(bad)
mov
xchg
les
jl
cmp
sbb
repz
out
retf
cmp
in
jnp
or
aad
pop
dec
pop
stc
(bad)
in
push
mov
fwait
xor
stos
fdivr
xor
mov
push
push
(bad)
mov
outs
das
popf
mov
sahf
jns
arpl
retf
fwait
cmp
std
jns
cld
jmp
push
imul
cli
nop
cmp
repz
out
xor
call
lods
rcr
lahf
call
int
xchg
cmp
mov
sub
push
sti
aas
and
(bad)
jg
inc
mov
mov
xor
bound
pop
call
ins
mov
mov
jbe
cmp
mov
jg
mov
sub
cld
sahf
mov
push
int3
test
int
sar
xlat
pop
ret
pushf
imul
std
pushf
push
test
sbb
aas
fisttp
adc
fimul
pop
stos
inc
push
or
and
inc
fwait
cmp
rcl
icebp
lods
cmp
jg
dec
dec
mov
xchg
ins
pop
dec
mov
nop
out
fsub
mov
int
outs
fisttp
ror
add
cli
ret
pop
push
or
jb
adc
div
mov
dec
sub
jp
inc
aaa
fidivr
das
push
sbb
push
popf
jno
dec
popf
mov
sbb
aaa
pop
xlat
add
ds
(bad)
mov
push
jecxz
pop
call
push
xchg
mov
out
xor
jmp
and
and
ret
js
ficom
xor
fistp
sbb
movs
sub
(bad)
push
adc
and
mov
push
mov
cs
push
(bad)
int3
test
push
inc
sti
push
jp
lea
and
xchg
cmp
nop
movs
mov
or
xchg
sub
sub
lods
(bad)
jg
call
mov
xchg
pushf
mov
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
jmp
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
mov
cdq
cmp
mov
dec
std
jnp
xor
popf
mov
shl
dec
adc
aaa
inc
sub
shl
jns
xchg
je
bound
jg
add
test
test
fisttp
ins
pop
outs
xor
out
fcom
mov
(bad)
call
or
aas
ja
mov
aas
mov
cmp
mov
jp
movs
adc
movs
lods
adc
pop
leave
pop
sub
pavgb
jo
ficomp
lahf
xchg
pop
pop
outs
add
push
je
fist
bound
jns
push
fst
iret
xor
add
daa
push
jns
outs
je
arpl
cmps
lods
int3
enter
loope
xchg
pop
pop
(bad)
imul
pop
dec
xchg
or
daa
aaa
pop
adc
dec
and
call
cs
daa
ja
adc
retf
sbb
add
xchg
pop
daa
daa
pop
mov
pusha
pop
js
ss
mov
jae
adc
jne
add
pusha
ins
xchg
jbe
mov
xor
rcr
jbe
pop
pop
pusha
inc
jbe
(bad)
push
sbb
push
jnp
lahf
xchg
cmp
and
fs
push
pop
pop
dec
aaa
or
pusha
gs
pop
or
mov
pusha
xor
es
dec
(bad)
mov
ror
clc
nop
sbb
adc
aas
cmp
add
inc
jmp
push
sub
adc
jbe
(bad)
rcl
pop
or
add
inc
dec
nop
adc
outs
push
jne
je
push
out
mov
sub
fild
dec
jge
jg
push
or
(bad)
sbb
inc
add
sub
pandn
mov
adc
cwde
push
fs
jae
sub
xchg
jg
xchg
pusha
fdivr
mov
push
outs
aad
mov
push
fld
dec
ins
outs
xchg
push
jmp
mov
popw
pop
cmp
push
jl
cmp
cmp
push
das
out
sub
jns
sub
push
pop
jle
cmps
xor
add
sub
inc
ds
mov
sbb
sub
cmp
inc
(bad)
jmp
(bad)
and
xchg
iret
cmp
inc
out
inc
inc
push
pop
pop
jne
icebp
dec
and
pop
push
jb
(bad)
and
ss
cdq
loope
or
xchg
push
lods
ds
out
sbb
xor
fxch
cmp
jo
sub
jbe
pushf
jl
lahf
sub
in
aas
cmp
repz
push
fmul
shl
xchg
mov
mov
cmp
les
cmp
push
add
lahf
idiv
ins
push
ror
movs
rcl
push
dec
dec
push
inc
adc
stc
or
push
add
pop
ds
jns
test
cmp
push
cmp
jae
ds
imul
xchg
repz
neg
push
sbb
scas
adc
out
iret
adc
add
hlt
ds
repz
loopne
mov
repz
jl
cmp
out
sahf
out
cmp
sahf
out
sahf
push
xor
and
or
sar
(bad)
shl
xor
loopne
out
sahf
cmps
les
pop
cmp
or
cmps
inc
gs
mov
adc
adc
cwde
clc
dec
(bad)
or
rcl
jmp
outs
push
mov
outs
(bad)
push
retf
daa
pop
lea
inc
inc
daa
lea
mov
sbb
or
and
cmp
rdtsc
and
inc
dec
verw
rcr
cmove
mov
ins
and
mov
push
(bad)
out
adc
add
es
jl
add
push
add
lds
in
or
and
pop
enter
push
iret
(bad)
(bad)
iret
adc
push
xchg
add
mov
xor
mov
add
sub
and
push
and
pop
sbb
mov
cmp
add
imul
in
repz
xor
add
not
jg
dec
pop
scas
sub
adc
in
mov
mov
push
loopne
add
sar
test
inc
inc
mov
xor
pop
mov
push
mov
mov
cmp
jecxz
dec
mov
mov
add
aas
jmp
jbe
pop
shr
ror
adc
pop
in
repnz
push
jmp
enter
or
pop
sbb
adc
or
loop
mov
sbb
les
fstp
mov
jl
push
pop
jb
pop
jge
jle
pop
jb
xchg
popf
mov
jno
xchg
or
rcl
lahf
mov
enter
mov
cwde
pop
call
jg
pop
enter
enter
or
pop
arpl
test
jns
test
adc
pop
adc
test
mov
pop
enter
jp
jb
pop
xchg
xchg
test
pop
jb
push
jb
jnp
int3
jl
dec
test
xchg
inc
rcr
mov
pop
movs
pop
cmps
nop
or
mov
or
je
nop
or
mov
mov
or
stos
mov
mov
scas
mov
mov
nop
or
mov
mov
or
add
sub
cmps
daa
std
jg
pop
adc
pop
mov
and
cmc
add
adc
or
add
and
sbb
mov
push
xor
sti
xlat
test
mov
mov
fwait
jg
adc
fdivr
fimul
inc
jae
sbb
out
push
test
xchg
shl
mov
repz
aam
das
jbe
pop
adc
mov
gs
xchg
adc
mov
or
cmp
rcl
cmp
dec
inc
fwait
popa
mov
ss
mov
adc
pop
mov
lock
push
repz
mov
push
xor
add
mov
add
and
jg
add
dec
jnp
dec
mov
pop
scas
mov
scas
in
add
sahf
mov
add
outs
push
add
xchg
jl
or
adc
push
enter
aam
pop
xor
inc
jle
push
push
dec
sahf
stos
mov
aam
pop
mov
out
mov
lods
mov
xlat
or
fsubr
(bad)
call
push
or
addr16
sub
dec
das
sahf
dec
cmp
imul
and
mov
loop
jl
inc
ins
dec
aas
jl
mov
inc
add
or
(bad)
mov
or
das
add
dec
das
nop
or
and
add
in
and
and
push
ins
daa
cwde
not
inc
ds
pushf
dec
lods
dec
in
add
pushf
xchg
lahf
or
inc
mov
clc
add
nop
or
and
mov
fiadd
push
push
dec
(bad)
push
sbb
cmp
lahf
or
movs
jl
mov
add
dec
iret
test
ror
loopne
pop
and
ror
pushf
nop
iret
in
push
and
push
test
in
dec
enter
pop
push
ins
push
je
pop
enter
add
and
movs
push
aas
mov
les
dec
and
and
sahf
xor
add
adc
or
mov
inc
push
pop
push
push
ins
cmp
push
mov
dec
mov
shr
mov
movs
push
push
sub
(bad)
daa
fs
fcom
push
hlt
push
add
addr16
dec
enter
mov
xor
cmp
es
mov
push
shl
jl
push
dec
jl
xchg
push
pop
or
dec
xchg
jns
pop
aas
ins
les
fsubr
pushf
mov
pop
lods
or
neg
dec
and
fldcw
push
lods
lea
nop
out
xchg
in
push
je
pop
iret
test
sbb
movs
mov
nop
or
and
sub
mov
mov
sub
ret
or
xchg
inc
push
jmp
imul
lahf
inc
jo
or
sub
pop
repnz
enter
test
pop
jb
mov
fs
sbb
push
aam
ret
outs
(bad)
clc
mov
push
daa
ds
(bad)
sbb
sahf
cmp
rcr
or
xor
add
clc
add
leave
out
push
adc
push
(bad)
in
das
fs
jo
(bad)
push
enter
push
push
push
enter
inc
dec
jo
pop
(bad)
pusha
or
xchg
pop
leave
mov
sbb
push
jmp
hlt
ja
mov
sbb
push
xor
out
pop
and
in
fistp
jo
add
push
outs
adc
add
nop
pavgb
adc
pop
dec
jae
lahf
and
fucomi
fdivr
lahf
call
js
xor
inc
pop
sub
pop
js
pop
enter
xchg
cwde
jl
jb
pop
repnz
cwde
jl
test
aam
fsub
and
enter
int
stc
jo
push
adc
and
sub
sub
addr16
ss
daa
or
pop
pop
ins
pop
sbb
jns
xor
mov
dec
xor
fnstcw
pop
adc
mov
leave
xor
lahf
les
push
pop
mov
add
xchg
dec
sahf
or
mov
add
pop
enter
sbb
pop
jb
fcomp
cdq
fs
xor
inc
pop
pop
cmp
fiadd
outs
xchg
pushf
jo
and
pushf
loopne
and
jo
mov
xor
int3
push
loopne
xchg
cs
fst
cmps
mov
jl
pop
xchg
and
pop
inc
outs
aas
mul
and
xchg
and
jns
pop
and
mov
or
mov
dec
sahf
pop
lock
mov
pop
test
pop
add
ss
xchg
cmp
test
jb
adc
jmp
(bad)
out
push
mov
aas
movs
xchg
jns
jbe
mov
lods
cs
(bad)
push
adc
sub
pop
leave
xor
(bad)
adc
loopne
dec
pop
ja
jbe
jo
mov
push
pop
mov
pushf
jg
clc
pop
int3
mov
in
pop
sub
adc
dec
sub
pop
out
sub
in
neg
cmp
sub
fstp
rep
outs
dec
dec
push
repnz
pop
dec
add
enter
mov
enter
enter
dec
and
pop
pusha
mov
daa
inc
inc
inc
pusha
sbb
ins
outs
dec
fcom
cmp
pusha
out
dec
(bad)
push
and
aaa
lock
test
lock
cld
pusha
pop
enter
aaa
loopne
xchg
sti
fiadd
dec
push
push
sub
ja
xchg
xlat
(bad)
fstp
add
scas
ja
cmps
test
test
in
das
or
pushf
loopne
outs
movs
xchg
inc
or
cmc
cmp
cmp
bound
dec
push
fild
push
pop
(bad)
iret
rcl
dec
aam
les
push
movs
(bad)
(bad)
push
add
jg
outs
jae
ds
dec
in
aam
in
add
bound
arpl
adc
xlat
sub
inc
repz
cmp
cmps
dec
cmp
sub
es
arpl
arpl
pop
sbb
pop
push
dec
jg
lahf
ret
mov
je
daa
add
scas
jbe
or
mov
adc
fs
ins
outs
push
and
ds
fs
fsub
xchg
out
(bad)
stc
daa
movs
mov
clc
push
jl
ret
js
xchg
mov
xchg
fs
pusha
ins
inc
xchg
pop
outs
out
pop
jbe
outs
daa
loopne
adc
nop
dec
pusha
cmps
(bad)
in
adc
iret
cld
add
push
aas
(bad)
in
adc
ja
or
ja
or
and
gs
and
dec
lods
and
out
outs
nop
push
mov
lahf
or
aas
sets
dec
loopne
clc
gs
int3
cmps
jl
sbb
xchg
xchg
int
stc
sub
inc
data16
lods
sub
or
jo
mov
test
pop
xor
sub
push
aam
mov
dec
xor
inc
outs
daa
ins
dec
enter
addr16
sbb
or
mov
addr16
and
addr16
dec
xchg
dec
addr16
out
sahf
lods
cwde
test
loopne
cs
lods
cwde
sar
jns
in
loopne
clc
sar
add
in
sub
int
test
push
add
sub
test
fidivr
mov
pop
jle
push
mov
popf
sub
addr16
dec
enter
lock
imul
jo
jns
in
imul
add
nop
and
iret
test
test
enter
jae
loopne
enter
and
test
outs
das
push
sub
ror
outs
(bad)
lock
push
jo
pop
repnz
dec
repz
mov
add
stos
mov
jns
clc
pop
imul
call
dec
jae
inc
imul
stc
(bad)
push
addr16
cmp
mov
in
mov
mov
fmul
or
push
xor
inc
cmp
mov
mov
inc
ds
test
dec
loopne
or
xor
pop
dec
ins
ins
ins
cld
jns
enter
stos
ins
mov
ins
push
aas
jmp
iret
or
mov
outs
outs
push
dec
(bad)
cmp
call
add
nop
ins
ins
pop
stos
pop
enter
je
aam
fs
loopne
fs
jl
add
cwde
adc
xor
out
outs
sub
cwde
nop
iret
xchg
outs
add
fstp
pop
repnz
in
pop
(bad)
fsub
mov
mov
inc
lods
(bad)
daa
add
shl
jg
or
(bad)
outs
xlat
and
push
enter
push
movs
or
cmps
and
je
add
mov
test
outs
lods
dec
jl
mov
dec
test
outs
xlat
pop
xchg
clc
push
int3
push
in
xlat
test
lds
nop
lods
mov
faddp
test
inc
push
pop
jo
outs
and
(bad)
(bad)
lods
pop
mov
out
js
ja
mov
jmp
lods
jo
or
test
ja
mov
outs
daa
fstp
repnz
add
push
sbb
cmp
xor
xchg
outs
pop
lods
xchg
dec
aam
add
call
(bad)
jl
inc
inc
ds
nop
pushf
shr
iret
mov
outs
xchg
cwde
int3
sub
ja
and
in
enter
xchg
fdiv
push
sub
cmp
pop
jb
push
cwde
jle
dec
ja
call
(bad)
es
ja
scas
adc
add
(bad)
(bad)
jb
or
scas
inc
jae
dec
adc
fs
dec
hlt
add
sbb
dec
and
or
cmp
dec
dec
jae
push
fs
adc
dec
aas
outs
mov
jl
movs
in
mov
lahf
or
test
lock
jae
pop
ins
pop
das
xchg
loopne
mov
jae
sub
scas
cmp
inc
lods
lods
es
aas
pop
addr16
adc
cld
je
test
cdq
fs
je
je
mov
fistp
jl
lahf
outs
dec
push
daa
jmp
call
cmp
sbb
push
mov
jne
and
adc
xor
jne
fwait
adc
scas
pusha
jne
jne
aad
dec
pop
aaa
xchg
sar
push
scas
jne
add
call
jae
(bad)
jo
add
or
xchg
jbe
jbe
jbe
nop
sub
pop
jbe
test
jg
mov
jbe
and
iret
pushf
movs
mov
dec
sbb
mov
in
fs
xchg
scas
daa
in
mov
xchg
hlt
and
ja
nop
dec
ss
hlt
movs
stc
lods
outs
xchg
push
mov
jl
and
jns
push
mov
jae
iret
test
enter
leave
aam
mov
mov
(bad)
js
cdq
neg
lahf
mov
ret
lods
ja
xlat
pop
js
push
dec
inc
jmp
sbb
mov
pushf
lods
js
repnz
lods
sbb
int
call
js
add
inc
fisttp
sahf
jns
aaa
push
outs
add
icebp
pop
jg
mov
adc
scas
(bad)
jl
imul
jns
stos
popa
fwait
inc
mov
dec
enter
add
int3
jns
and
add
test
lods
jg
sub
mov
sub
and
ins
jp
dec
leave
out
jp
jp
inc
sahf
or
jp
ror
xchg
out
fdivr
xchg
fmul
jg
stos
add
push
dec
sub
push
div
call
jnp
sbb
add
nop
out
pusha
mov
jnp
shr
mov
or
jl
sbb
sub
aaa
movs
mov
fistp
jg
loopne
jb
iret
test
imul
mov
dec
sahf
or
aam
mov
pop
enter
add
cdq
xchg
int
adc
sub
cmp
fiadd
jg
lods
pop
jb
iret
test
lods
cmc
pop
enter
dec
mov
mov
rcl
aaa
sub
in
jg
ja
jns
pop
ror
jle
and
cmp
cmps
bnd
or
mov
xchg
cmp
js
mov
jae
pop
push
clc
pop
int3
loopne
not
ss
in
dec
mov
cmps
fs
and
jg
mov
pop
dec
and
pusha
scas
in
nop
fs
pusha
sahf
or
mov
fsubr
ror
xchg
ret
mov
push
xor
pop
imul
push
imul
(bad)
in
daa
pop
dec
test
mov
mov
les
ja
mov
sub
adc
cmp
dec
jae
pop
mov
aam
pop
cld
adc
out
ja
adc
in
cmp
adc
cmps
push
push
je
lods
sbb
(bad)
outs
push
mov
xchg
outs
push
movs
xor
push
int3
sub
je
and
test
add
mov
mov
add
mov
dec
jnp
(bad)
sahf
test
daa
outs
mov
and
test
mov
pop
enter
inc
or
je
add
add
call
or
and
clc
pop
dec
repz
test
rol
out
add
movs
jns
mov
(bad)
mov
and
inc
add
rep
lods
outs
dec
js
test
bound
adc
push
ins
lahf
js
or
pushf
mov
mov
add
or
or
lock
pop
enter
mov
out
dec
test
sahf
outs
sub
mov
lods
push
mov
in
cld
movs
repnz
sub
xor
fwait
adc
dec
xchg
xor
mov
ja
and
test
add
in
sahf
or
in
pusha
inc
mov
mov
inc
mov
add
mov
push
xchg
mov
lahf
add
mov
cmp
mov
add
sub
imul
daa
stos
add
addr16
mov
pop
add
fs
cmp
repnz
inc
cs
sub
dec
enter
mov
cmp
imul
ror
scas
xchg
lods
mov
repnz
nop
mov
ins
les
and
scas
les
ds
mov
mov
js
sub
inc
push
test
add
inc
call
out
pop
dec
outs
inc
cmps
outs
xor
mov
push
dec
(bad)
fwait
cdq
test
mov
mov
pop
lods
nop
popa
add
sbb
outs
inc
ss
sbb
xor
dec
mov
push
aas
stos
or
xchg
sub
cmp
repnz
lods
sar
push
enter
call
lock
fs
and
mov
sahf
mov
das
ja
cld
xchg
mov
push
mov
mov
xor
test
mov
xchg
xor
jg
pop
bnd
push
cld
or
and
push
cld
mov
pop
dec
mov
int
fisttp
xchg
ja
cs
lahf
mov
or
movs
add
adc
and
(bad)
push
enter
adc
mov
and
not
push
ins
daa
ds
ins
shl
pushf
sbb
pushf
push
dec
dec
nop
out
jmp
cdq
pop
xor
fdiv
test
pop
lahf
dec
xor
lahf
fdivr
mov
fsubr
push
fcomp
inc
imul
xchg
mov
cmp
packssdw
(bad)
or
xchg
mov
call
outs
cwde
fist
mov
inc
xchg
nop
call
shl
mov
add
nop
or
dec
mov
xchg
xchg
cmps
outs
add
add
mov
ror
je
xchg
or
adc
repz
push
mov
push
xchg
aas
cmp
jl
aam
sub
push
loopne
or
mov
ja
out
inc
into
les
mov
dec
inc
dec
or
call
outs
test
xor
xchg
xchg
jmp
addr16
mov
jbe
xlat
adc
lock
ret
xchg
ins
dec
add
inc
xchg
(bad)
adc
sub
iret
mov
scas
(bad)
addr16
xchg
bnd
adc
sbb
loopne
sub
xchg
call
call
adc
pop
mov
fbld
xor
mov
outs
call
pop
ror
xchg
xchg
pop
sbb
and
sbb
xchg
dec
sahf
or
call
nop
xchg
fadd
xchg
and
fstp
xchg
(bad)
stc
mov
inc
outs
pop
loopne
jnp
bnd
sbb
sahf
lods
shr
jo
pop
ja
loop
or
add
inc
fsub
push
loop
dec
and
iret
jl
mov
outs
xchg
inc
inc
xchg
enter
push
pusha
inc
in
(bad)
push
outs
xchg
ins
nop
inc
cs
mov
or
lods
sub
mov
dec
out
inc
fsub
mov
dec
pop
les
fiadd
outs
xchg
in
mov
and
in
movs
jns
pop
mov
aam
das
jns
in
or
mov
xor
cwde
pop
cmp
sti
xor
inc
cwde
lahf
xor
jns
mov
ja
push
jo
inc
sahf
or
nop
or
sar
movs
je
cs
rcr
and
xor
fiadd
pusha
nop
clc
or
daa
push
xchg
mov
xlat
test
dec
clc
mov
adc
push
fcomp
fs
pop
fstp
sbb
inc
cs
pop
xor
cld
out
mov
inc
call
adc
repnz
enter
mov
int3
das
jbe
pop
cld
mov
xor
xor
test
or
mov
push
das
inc
xchg
cld
ds
mov
fs
(bad)
push
ins
mov
pop
xchg
outs
out
in
xchg
adc
mov
push
and
fwait
(bad)
lock
add
inc
mov
pushf
push
mov
in
push
dec
inc
rcr
jmp
pushf
rcl
fistp
and
call
das
inc
add
and
popf
shl
jbe
pop
push
das
or
outs
ins
jg
test
fcom
ins
popf
dec
mov
ja
test
out
or
popf
push
fcom
sub
push
dec
cs
sbb
clc
push
or
scas
clc
xlat
mov
shl
call
add
sbb
sahf
data16
cdq
sahf
push
test
sahf
(bad)
mov
xchg
xchg
jne
adc
les
cmc
xor
push
mov
movs
jns
dec
inc
push
add
push
jg
test
lock
or
lahf
push
enter
push
and
es
inc
out
in
hlt
jl
add
pmulhuw
xchg
int
test
xor
push
mov
in
or
mov
call
pushf
and
mov
pushf
pop
aaa
ds
lods
mov
pop
aam
jmp
jbe
aaa
push
jl
ja
add
pop
aaa
mov
pop
push
pop
adc
jg
pop
pop
bound
scas
push
sar
sub
mov
jns
lods
outs
(bad)
call
mov
push
aam
lahf
les
clc
es
mov
mov
fistp
xchg
test
fadd
xor
mov
jns
in
clc
shl
in
enter
mov
clc
ror
test
(bad)
mov
mov
sahf
outs
ins
outs
xchg
push
push
js
push
push
add
mov
push
aam
dec
pop
add
lahf
mov
out
lock
addr16
and
jmp
(bad)
ja
enter
fs
(bad)
je
jl
push
jb
iret
movs
add
test
ds
test
rcr
int3
xchg
or
dec
cs
movs
add
push
push
ins
mov
cmps
push
pop
sbb
mov
aam
dec
aas
dec
cs
jbe
jmp
and
or
fsubr
pushf
jmp
cmps
ja
cmps
lahf
call
dec
dec
repz
jmp
push
enter
sub
push
scas
xchg
push
cmps
dec
mov
jo
mov
daa
addr16
and
in
cmps
xchg
add
jmp
dec
jmp
cmps
push
pop
cmps
jge
imul
js
adc
cmps
(bad)
jns
add
sets
mov
inc
mov
ja
vmread
push
in
repnz
test
rol
push
push
test
call
add
or
test
clc
lods
mov
lahf
ja
in
scas
adc
scas
out
ins
dec
ins
in
or
dec
enter
in
ja
and
mov
cwde
pop
push
js
test
je
enter
jmp
icebp
adc
in
loopne
pop
stos
pop
das
in
pusha
call
jl
and
(bad)
stos
push
push
sahf
ins
stos
cmc
pop
ins
fwait
dec
lahf
ja
in
adc
call
(bad)
(bad)
cmps
add
mov
jnp
iret
push
in
stos
mov
stos
stos
push
outs
aad
scas
loop
add
xchg
sbb
ficom
adc
sub
mov
mov
dec
pusha
(bad)
jo
(bad)
sbb
aam
mov
jmp
mov
call
and
hlt
in
stos
stos
stos
(bad)
push
in
and
hlt
fbstp
sub
fwait
adc
lods
dec
lods
pop
lods
and
lods
out
sbb
(bad)
fdiv
out
(bad)
lods
stos
ret
jmp
int
out
lods
lods
lods
(bad)
push
sub
cmps
iret
outs
fwait
adc
stc
xchg
movs
or
sbb
sub
movs
outs
sbb
cmps
and
fs
mov
ss
iret
jae
mov
sbb
xchg
iret
fsubr
pop
scas
cld
cmps
sbb
pop
sub
push
jmp
(bad)
jge
push
nop
out
sbb
inc
cwde
fadd
test
scas
xchg
out
cs
fs
clc
or
and
outs
rcr
dec
test
int
and
shr
scas
mov
inc
xor
mov
pop
pop
outs
dec
lock
rol
(bad)
int3
scas
push
or
mov
lock
xchg
adc
inc
and
and
add
xor
(bad)
adc
mov
mov
push
and
xchg
mov
fdivr
mov
das
clc
dec
mov
xor
clc
iret
add
aaa
adc
test
jg
addr16
int3
movs
scas
jge
paddd
mov
(bad)
aaa
xor
fdivp
add
pop
and
add
add
add
cmp
jns
push
add
sbb
or
xchg
jl
mov
mov
jb
jb
int3
(bad)
repz
ja
push
push
add
pop
adc
in
or
and
dec
fcomp
jb
mov
iret
cmp
(bad)
into
add
in
jns
fild
ficomp
add
and
and
pop
jb
js
pop
jb
pop
movs
xchg
rol
cld
mov
or
sti
pop
or
push
pop
sub
ror
dec
and
add
movs
mov
fxch
xchg
and
fimul
ficom
ficomp
fisub
movaps
xor
mov
inc
cmovns
xchg
ja
lar
idiv
inc
pop
je
cmp
cmp
pushf
mov
je
xchg
inc
fld
inc
cmp
daa
xor
inc
ss
call
inc
ins
(bad)
fmul
fstp
pop
cmp
pop
add
fisttp
sidtd
clc
mov
in
fs
sbb
cmp
mov
jb
adc
push
(bad)
dec
mov
in
adc
out
ds
in
repnz
push
adc
sub
mov
out
pop
pop
sub
mov
daa
movs
scas
movaps
out
push
xlat
aam
cmp
inc
mov
popa
or
neg
pop
inc
dec
cmps
mov
(bad)
call
ja
test
mov
scas
enter
jo
jb
(bad)
fsubr
push
das
(bad)
ja
add
loope
repnz
fsubr
mov
and
js
fsubr
fadd
retf
retf
retf
push
fsub
outs
fdivr
mov
cwde
fsub
repz
or
or
or
cmp
repz
in
push
cli
vmwrite
adc
adc
jns
out
xor
inc
adc
out
sahf
dec
adc
jns
out
js
xchg
xchg
out
sahf
out
mov
out
sahf
mov
and
cmp
mov
push
in
dec
fimul
push
ficomp
mov
xchg
je
dec
leave
inc
mov
push
rcr
push
jo
pop
pop
fisttp
fisttp
xor
aaa
xchg
iret
inc
jb
mov
xchg
and
data16
jbe
sbb
jb
jle
xchg
mov
xchg
push
push
dec
dec
mov
fbld
mov
out
xchg
push
and
loope
pavgb
pop
loopne
in
push
aad
daa
push
mov
stos
daa
inc
loopne
push
loopne
loopne
inc
mov
loopne
loopne
loopne
jb
enter
loopne
loopne
loopne
mov
shl
fnstsw
in
loopne
loopne
enter
loope
loope
loope
sbb
jb
loope
loope
loope
loope
xchg
and
loope
loope
loope
cmp
xchg
loope
loope
loope
loope
and
int
fndisi(8087
jmp
jmp
adc
lea
jb
loop
loop
loop
cmp
jae
pop
dec
rcpps
pop
jg
push
icebp
movs
mov
and
es
popf
pushf
pushf
pushf
(bad)
jmp
sti
leave
dec
mov
cmp
nop
jbe
push
jecxz
enter
jecxz
jecxz
fbstp
xchg
mov
mov
(bad)
iret
xlat
pandn
add
out
out
pop
neg
enter
jecxz
pop
in
push
xor
retf
and
xor
cmp
mov
pop
ja
add
mov
cmp
jo
fistp
lods
addr16
dec
loopne
push
add
stc
adc
or
inc
and
js
sub
xchg
dec
fisubr
mov
(bad)
xchg
push
add
cmps
fild
retf
add
adc
pop
pusha
ror
in
out
out
outs
and
out
(bad)
cs
mov
pop
xchg
leave
leave
pop
popa
imul
jns
or
ja
xchg
xchg
mov
repnz
mov
loop
pslld
or
inc
adc
and
das
sub
out
daa
fnstsw
push
pop
mov
addr16
adc
aas
push
leave
leave
inc
repnz
ins
ret
(bad)
aaa
jb
leave
cmc
add
adc
pop
push
mov
pushf
mov
mov
mov
inc
push
sbb
push
pop
mov
ret
movs
mov
call
xchg
and
test
jb
les
enter
call
dec
mov
daa
sbb
call
jmp
out
cmp
pcmpgtw
mov
cmps
or
push
lds
cdq
dec
xchg
popf
stos
jmp
(bad)
mov
jmp
jecxz
jmp
repz
into
in
add
ud2
inc
cs
add
pop
xchg
and
push
jmp
in
jae
jle
mov
xchg
call
pusha
mov
pushf
rcr
jmp
popf
inc
push
or
inc
pop
and
jmp
cmovbe
pop
pushfw
pushf
pushf
pushf
outs
jbe
xchg
sahf
cmps
pushf
pushf
pushf
pushf
scas
mov
(bad)
pushf
pushf
pushf
pushf
into
(bad)
fsubp
sahf
pushf
pushf
pushf
out
idiv
push
in
fld
test
jb
ror
xor
inc
dec
jb
jb
push
pop
popa
imul
or
jb
jb
mov
ror
jb
jb
fabs
jmp
icebp
stc
sbb
push
pop
cmp
add
push
push
les
lock
dec
pop
jb
sbb
in
push
mov
out
iret
sub
cmp
out
add
into
shl
push
ja
inc
cmp
in
cmp
pop
dec
and
sbb
icebp
out
scas
inc
cmp
push
retf
mov
out
xchg
and
sub
fisub
jae
out
push
out
int3
cmps
fmul
cs
lea
neg
inc
repnz
mov
xor
push
mov
xchg
mov
pusha
leave
mov
xchg
sti
mov
lock
loop
xor
lock
rcl
jbe
mov
int3
ja
repnz
add
enter
xchg
out
push
jmp
lods
rcr
icebp
xchg
push
fcomip
fmul
in
in
cdq
icebp
mulps
mov
int
dec
push
(bad)
popf
fild
mov
dec
cs
out
js
loop
jns
dec
in
push
add
mov
sbb
rol
aas
repnz
leave
and
inc
repnz
push
fld
jp
in
push
daa
jp
into
aaa
pushf
into
mov
stos
mov
mov
popf
ret
das
ror
add
inc
inc
mov
and
pop
pop
adc
jmp
or
dec
inc
iret
dec
push
sahf
out
jbe
pcmpgtd
jbe
or
jle
pop
pop
mov
xlat
mov
mov
pushf
into
(bad)
xchg
adc
mov
add
wbinvd
xchg
xchg
xchg
xchg
adc
and
xchg
xchg
xchg
xchg
xor
inc
dec
xchg
xchg
xchg
xchg
push
pop
popa
imul
cmp
xchg
xchg
cdq
hlt
scas
pop
mov
and
hlt
pop
add
push
out
sbb
addr16
in
mov
cmc
(bad)
sub
lods
sahf
frstpm(287
xor
cmp
inc
or
xchg
out
andps
or
fs
daa
iret
mov
je
adc
ja
lods
cmc
(bad)
mov
xchg
pop
adc
dec
sahf
out
adc
hlt
pop
jo
pop
(bad)
int3
hlt
aam
fdiv
jns
in
mov
in
in
ds
cmp
rcl
inc
ror
enter
add
adc
neg
repz
iret
pop
xor
outs
daa
iret
or
minps
(bad)
pop
add
div
jge
cmp
mov
dec
jb
(bad)
movs
test
mul
mov
ja
add
mov
sub
jb
inc
repnz
dec
inc
inc
jb
inc
jb
stos
adc
call
mov
lahf
mov
retf
retf
(bad)
not
mul
imul
test
test
clc
retf
retf
retf
retf
xor
inc
clc
push
clc
pop
clc
retf
retf
retf
retf
ins
clc
jp
mov
xchg
clc
ret
retf
movs
clc
mov
sar
clc
sub
(bad)
mov
clc
xchg
aam
inc
mov
in
(bad)
stc
scas
jb
daa
mov
cvttps2pi
(bad)
pop
push
jo
mov
xor
jb
enter
stc
mov
shl
into
lock
(bad)
xlat
jmp
stc
stc
in
xchg
and
cli
adc
sbb
jb
cli
aas
cli
dec
cli
pop
cli
enter
imul
sbb
jb
xchg
cli
mov
cli
(bad)
xchg
xchg
add
push
out
push
(bad)
and
and
cli
add
or
daa
mov
sti
adc
sbb
sub
daa
daa
daa
xor
inc
dec
daa
daa
daa
daa
push
pop
fs
daa
daa
daa
daa
je
test
pushf
movs
lods
daa
daa
daa
daa
mov
(bad)
int3
test
daa
daa
aam
in
enter
pop
xlat
daa
pop
cld
leave
leave
ins
in
cld
sub
xor
jmp
dec
push
jg
sub
cmp
out
dec
sahf
push
das
cmp
sahf
jb
jb
cmps
xsaveopt
jb
into
(bad)
fidiv
jb
out
idiv
cmp
sbb
std
push
push
push
cmp
cmp
es
cmp
inc
dec
push
pop
cmp
cmp
data16
jbe
cmp
cmp
xchg
cmp
cmps
scas
mov
cmp
cmp
(bad)
into
(bad)
fidivr
cmp
cmp
out
idiv
iret
repz
dec
cs
das
pushf
pushf
pushf
cmp
es
pushf
pushf
pushf
ds
dec
push
loop
pushf
pushf
pop
data16
xchg
inc
iret
in
scas
fbld
push
mov
(bad)
(bad)
aas
add
fldcw
and
(bad)
fucomip
pslld
and
cli
add
or
pop
nop
sub
cmp
push
jb
cmp
pop
or
jae
enter
sub
retf
mov
inc
call
fcmovne
daa
(bad)
out
dec
out
add
jmp
push
cmp
repz
push
add
add
repz
repz
xor
cmp
dec
or
loopne
sbb
test
daa
daa
movs
scas
mov
daa
shl
out
or
push
fcomp
add
cmp
sub
cmp
fld
pushf
out
add
imul
mov
call
lds
add
out
fild
fdiv
push
add
xchg
xchg
mov
(bad)
push
jo
ss
add
fcmovne
inc
dec
xchg
leave
jae
mov
xchg
mov
push
pop
test
and
pop
iret
hlt
repnz
xchg
xchg
and
adc
leave
dec
cmp
pop
lss
mov
dec
push
xchg
fisubr
xchg
mov
enter
jae
jnp
pushf
add
ins
in
add
popf
pushf
pushf
dec
iret
xlat
fucomip
pop
cmc
(bad)
mov
out
add
ss
daa
add
pop
(bad)
jb
cmp
pop
push
add
pop
les
adc
int3
add
add
dec
dec
lds
sbb
in
repnz
or
cmp
add
xor
cmp
inc
push
push
dec
daa
pop
leave
rol
xor
imul
daa
daa
jnp
mov
setnp
sahf
out
or
sahf
out
or
fld
mov
sti
adc
sar
adc
adc
mov
sbb
das
sub
sbb
jb
xor
inc
dec
daa
iret
jae
push
pop
push
arpl
outs
daa
daa
jae
scas
fstp
and
and
mov
sub
sub
retf
xchg
in
jno
aam
sbb
push
loop
push
xchg
mov
loop
inc
dec
and
pop
adc
test
mov
stc
jp
and
ja
aaa
push
add
add
out
out
aas
add
and
xchg
jecxz
mov
jnp
repnz
sbb
outs
pop
sub
cs
popa
out
xchg
cld
push
dec
dec
dec
dec
pop
gs
jne
adc
dec
dec
in
mov
test
mov
xchg
fninit
jmp
in
in
push
add
sti
xchg
or
and
and
or
or
daa
daa
mov
or
(bad)
inc
dec
in
cmp
push
jg
adc
in
adc
mov
xchg
out
outs
pinsrw
fiadd
aam
jb
je
aam
(bad)
cmp
iret
movhps
addr16
xchg
dec
or
inc
mov
mov
ins
pushf
dec
and
xor
nop
cwde
popf
pop
and
fs
out
add
add
in
idiv
aam
repnz
or
rdtsc
or
fimul
fistp
or
out
pop
inc
repnz
add
jb
leave
xchg
leave
mov
mov
fisttp
in
add
lock
or
and
into
mov
xor
ja
outs
daa
adc
add
in
and
movs
mov
test
and
aam
jmp
idiv
inc
jmp
pop
cwde
scas
and
scas
push
add
add
in
cmp
inc
dec
gs
mov
or
ja
pop
jb
mov
in
jbe
call
addr16
jmp
div
int3
sahf
pushf
inc
push
femms
add
fisub
sub
push
push
fcom
xchg
and
add
in
cmp
push
xchg
jo
jnp
push
dec
and
jns
inc
jmp
pushf
pushf
pushf
pushf
mov
sahf
pushf
pushf
jmp
mov
push
call
test
js
dec
push
lods
jmp
inc
es
cld
jmp
vmwrite
mov
jns
in
in
scas
das
mov
pop
mov
(bad)
into
aas
(bad)
push
or
sahf
out
dec
out
out
push
push
test
cmps
cmp
push
adc
sbb
jg
inc
adc
jb
sub
pushf
in
cmps
fs
out
xchg
pop
ror
adc
add
mov
adc
mov
lds
xor
mov
call
cmp
adc
in
outs
in
adc
push
mov
in
xchg
fcmovne
mov
adc
dec
outs
daa
mov
push
pop
mov
imul
jns
leave
repz
pop
jnp
or
mov
mov
stos
iret
into
adc
mov
icebp
adc
aaa
jb
adc
jmp
inc
ret
out
fist
sbb
iret
xchg
push
cmp
jg
adc
jb
enter
adc
ins
adc
daa
iret
sbb
pop
or
cwde
mov
(bad)
mov
enter
mov
psubusb
adc
call
into
xchg
adc
adc
adc
jo
push
mov
mov
daa
daa
daa
data16
jbe
fcmovne
add
mov
(bad)
mov
mov
das
xchg
adc
cmps
or
mov
xchg
adc
adc
or
cmp
in
adc
push
push
and
movs
adc
sub
xchg
int
sub
adc
sahf
ja
(bad)
xchg
jl
inc
repnz
fdiv
leave
leave
leave
scas
mov
(bad)
pop
and
mov
(bad)
cmps
add
in
add
enter
adc
scas
cmp
jns
repnz
repnz
in
in
adc
push
daa
daa
mov
adc
mov
daa
daa
daa
cmps
out
mul
daa
daa
daa
scas
(bad)
mov
daa
out
mov
dec
cs
aas
ss
mov
push
popa
push
jg
jo
dec
adc
lock
pop
pop
mov
dec
ja
aaa
push
add
call
or
jp
repz
inc
(bad)
iret
in
jbe
das
sub
xor
pushf
inc
(bad)
ds
cmp
mov
cmp
add
jb
jb
mov
shl
jb
rcr
loopne
jb
jb
lock
add
jb
cmp
or
sbb
and
cmp
jae
pop
xor
cmp
sahf
ja
push
sbb
sbb
cmp
in
pusha
push
push
push
out
and
and
out
sahf
mov
nop
and
and
mov
sub
shr
push
sub
sahf
out
mov
das
loopne
cs
lock
clc
aas
sub
xor
(bad)
or
push
adc
sbb
jae
mov
cmp
leave
rep
daa
inc
cmovs
cmp
repnz
jecxz
sbb
and
cmp
ins
in
sbb
pushf
pushf
pushf
pushf
fwait
mov
pushf
pushf
mov
push
out
daa
iret
or
jecxz
or
sahf
push
repz
and
iret
rep
aas
out
rdpmc
push
add
adc
leave
repz
adc
pop
imul
dec
sahf
out
dec
push
sbb
arpl
add
sbb
pop
test
cmp
cmp
cmp
mov
sbb
popf
cmp
push
add
sub
call
fs
stc
mov
iret
repz
push
add
add
add
and
sub
aaa
pushf
cmp
repz
or
repz
pushf
pushf
pop
popa
ins
push
pushf
cmp
leave
je
adc
pushf
popf
aam
mov
mov
fucomip
js
sahf
pushf
cmc
add
sbb
push
adc
sbb
sbb
mov
pop
sbb
sbb
inc
scas
jo
sbb
fsubr
fisttp
dec
lahf
cmps
imul
add
adc
mov
pushf
pop
and
(bad)
lahf
ja
popf
jmp
add
or
adc
sbb
jns
in
and
sub
or
cmp
repz
sahf
ja
push
push
dec
push
push
adc
leave
leave
pop
bound
adc
shl
jp
adc
mov
cwde
cli
xlat
lods
sbb
xchg
and
bswap
jae
mov
aad
fnstsw
daa
cmc
paddw
mov
pop
adc
iret
repz
adc
repz
inc
adc
outs
daa
iret
repz
adc
cmp
leave
repz
sbb
sbb
push
adc
inc
mov
inc
dec
xor
pop
push
loopne
call
and
push
clc
(bad)
mov
fisttp
adc
and
cmp
pushf
pushf
pushf
dec
push
pop
pusha
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
mov
pushf
pushf
test
mov
pushf
enter
sahf
pushf
pushf
pushf
call
dec
dec
dec
inc
or
sbb
dec
dec
dec
dec
sub
cmp
dec
dec
dec
dec
push
pop
pusha
or
je
push
dec
push
mov
xchg
and
bt
add
repnz
push
fmul
daa
pop
out
psadbw
sahf
test
femms
add
iret
cmp
es
or
add
iret
repz
inc
push
or
dec
sahf
out
or
fsubrp
in
outs
pcmpeqd
adc
es
xchg
mov
mov
xchg
mov
mov
iret
add
leave
and
repz
pushf
in
pop
cli
mov
movs
jmp
and
or
nop
daa
daa
es
daa
daa
iret
repz
adc
pop
jb
cmp
push
jb
jb
jb
sahf
xchg
mov
out
jbe
mov
(bad)
aad
fcmovne
repz
loopne
psadbw
leave
enter
pop
and
mov
out
sub
cmovle
daa
daa
push
popa
ins
sub
cmp
repz
jg
jbe
jno
xchg
and
out
inc
inc
mov
shl
and
and
and
enter
and
and
and
and
and
and
sahf
out
mov
aaa
or
aas
dec
push
pop
xchg
xchg
xchg
out
pushf
xchg
xchg
xchg
xchg
jnp
outs
cmps
lss
sbb
cmp
mov
(bad)
cmp
enter
and
iret
leave
repz
loope
iret
repz
daa
dec
pop
xchg
fwait
arpl
test
mov
cmp
mov
das
(bad)
iret
repz
or
or
or
pop
jo
cmp
in
cmc
addr16
fs
invd
adc
adc
jae
mov
pop
xor
iret
repz
adc
push
repz
pop
punpcklbw
push
leave
jo
jo
repnz
pop
xchg
and
iret
in
mov
mov
rep
pop
pop
aam
fcomp
sub
bnd
sub
sub
cld
es
jae
cmp
or
adc
sbb
iret
repz
daa
xor
xor
iret
repz
sahf
ja
pop
pusha
pop
aaa
push
fisttp
js
cmp
jns
outs
pop
cwde
mov
int3
icebp
mov
addr16
add
cmp
daa
jmp
scas
daa
addr16
and
add
sub
sbb
dec
sahf
add
addr16
pop
jno
sub
xor
mov
sub
xchg
xchg
xchg
sub
push
sub
arpl
repz
imul
adc
jnp
iret
jae
or
adc
iret
repz
pop
mov
sahf
out
mov
sbb
sbb
cmp
in
shr
push
fistp
or
jmp
repz
sub
ss
adc
sbb
and
sub
leave
repz
xor
sub
inc
sub
leave
repz
sub
mov
out
arpl
imul
dec
sahf
out
xor
cmp
push
ss
mov
cmp
cmp
daa
daa
iret
cmp
(bad)
fidivr
aas
in
sahf
out
inc
out
inc
div
ds
(bad)
push
inc
push
sub
sub
sahf
ja
push
push
push
inc
es
repz
ss
ds
jns
fcmovne
inc
dec
orps
push
dec
in
in
data16
jbe
in
in
xchg
in
cmps
scas
mov
in
in
(bad)
into
(bad)
fsubp
in
in
out
idiv
repnz
lahf
arpl
sub
cmp
repz
jae
addr16
iret
add
imul
daa
iret
ins
dec
push
outs
pop
sahf
out
jbe
pop
outs
jbe
jle
popf
fmul
jle
retf
(bad)
sub
sub
cmp
retf
fisubr
loop
pop
push
cmp
jne
pop
sbb
dec
add
sbb
or
sbb
daa
sub
cmp
inc
push
or
sahf
out
ficomp
or
ins
or
jne
jge
test
jbe
lea
scas
popf
push
adc
dec
aad
pmulhw
and
or
cmp
add
sub
out
sbb
add
add
mov
sub
cmp
repz
dec
or
sub
dec
mov
sahf
out
add
in
add
retf
aad
inc
repnz
sti
sbb
jb
push
adc
sbb
daa
cs
repz
mov
cs
leave
imul
push
(bad)
jbe
push
xor
xor
call
call
cmp
(bad)
rcr
out
in
cmp
cs
std
or
inc
mov
das
xor
mov
pop
push
adc
repz
adc
mov
out
dec
dec
jb
xchg
das
shr
or
inc
repnz
push
xchg
or
das
mov
jb
das
stc
das
add
wrmsr
enter
sbb
and
cmp
cmp
inc
xor
xor
xor
mov
cmp
enter
xor
cmp
sbb
push
adc
adc
out
xor
and
push
jmp
retf
xor
aaa
enter
ret
xchg
pusha
push
js
and
push
jmp
(bad)
mov
fsub
in
sbb
xchg
or
ins
xchg
mov
sub
mov
leave
and
mov
mov
in
scas
mov
pop
xor
dec
push
add
push
setne
in
or
sbb
call
loope
dec
xchg
xor
dec
xor
das
push
xor
and
pushf
pushf
xchg
pop
mov
add
stos
mov
(bad)
mov
dec
xor
cmp
cdq
femms
push
push
inc
xor
enter
dec
xor
xor
xor
jbe
cmps
mov
xchg
adc
in
sahf
test
push
push
sti
fild
xchg
out
repz
mov
aaa
xor
(bad)
pop
xor
scas
mov
test
and
adc
mov
fs
not
ficom
sbb
repz
jg
and
das
ss
add
imul
adc
(bad)
push
xor
cs
mov
mov
xchg
jae
pop
aaa
inc
daa
aaa
in
jb
daa
pop
dec
push
aaa
aas
pusha
aaa
stc
sub
adc
sbb
and
xchg
xchg
scas
(bad)
stos
aaa
mov
ret
aaa
rcl
fbstp
in
aaa
sti
aaa
or
pop
cmp
xchg
xchg
xchg
xchg
cmp
pop
cmp
jns
xchg
xchg
xchg
cmp
push
adc
mov
mov
xchg
inc
pop
cmp
int
xchg
iret
or
mov
xor
cmp
loop
cs
outs
inc
dec
and
pop
cld
adc
cmp
and
pop
sbb
jb
int
fstp
jmp
and
add
cmp
jb
enter
cmp
pop
cmp
inc
mov
cmp
cmp
jb
enter
cmp
mov
xlat
push
inc
cmp
push
and
in
pop
leave
lock
sbb
mov
xchg
mov
sbb
leave
jae
xor
cmp
mov
(bad)
cmp
out
in
inc
xchg
cmp
adc
mov
xor
and
in
mov
mov
shr
cmps
ror
jg
cmp
in
xchg
adc
cmp
cmp
cmp
sbb
jb
cmp
sub
scas
pop
ror
mov
call
pop
out
mov
add
push
rol
push
test
iret
js
mov
cmp
js
or
sbb
cmp
push
(bad)
xlat
sbb
cmp
push
daa
adc
fwait
cmp
mov
mov
cmova
js
push
xchg
test
in
fldz
sahf
lsl
dec
adc
mov
outs
sbb
scas
adc
xchg
daa
mov
enter
cmovle
ins
mov
scas
outs
aas
push
setno
add
leave
jae
cdq
add
xchg
dec
outs
mov
mov
aas
xchg
mov
or
jb
inc
repnz
popa
inc
inc
jb
inc
xchg
ins
shl
into
mov
ja
xchg
dec
cs
jmp
popf
in
das
push
inc
xchg
push
inc
add
dec
jb
mov
inc
cmp
push
scas
mov
fisub
aaa
fild
mov
jg
jmp
push
pop
out
divps
call
repnz
pop
and
das
inc
cmp
inc
add
pusha
inc
in
mov
rcr
add
repz
(bad)
sti
push
bound
sbb
push
push
push
es
ucomiss
dec
dec
ss
dec
dec
dec
dec
dec
push
pop
mov
push
mov
mov
rcr
cld
cli
add
jns
xchg
inc
inc
addr16
fisubr
pop
ja
addr16
fbstp
pusha
pop
leave
jae
push
pop
leave
and
cdq
push
and
jae
dec
cs
inc
xlat
cld
mov
leave
xchg
inc
sbb
pop
lds
and
mov
push
mov
cld
lds
and
push
xchg
xchg
inc
push
pop
in
nop
inc
xor
pop
leave
and
in
jns
iret
add
mov
test
inc
mov
mov
xchg
in
add
jnp
cmp
or
aam
mov
inc
xor
and
push
cdq
test
inc
loopne
cmps
adc
jge
inc
jmp
mov
and
test
mov
mov
syscall
inc
mul
pushf
push
and
add
ja
sbb
pop
sbb
and
inc
mov
inc
outs
daa
iret
mov
add
leave
in
in
or
(bad)
pmaxub
leave
leave
leave
out
idiv
xchg
lahf
je
push
dec
push
dec
inc
push
dec
push
out
outs
xchg
dec
es
cs
sahf
push
ds
inc
dec
nop
dec
repnz
(bad)
jno
and
xor
jbe
push
sbb
xchg
or
ins
and
and
sbb
dec
in
in
dec
cmc
xchg
xchg
mov
dec
std
syscall
dec
or
adc
enter
dec
dec
aam
scas
mov
and
bswap
dec
xchg
adc
xchg
pushf
or
add
cmp
cmps
jmp
inc
dec
dec
dec
pop
jb
xchg
mov
outs
test
dec
mov
dec
scas
dec
in
in
mov
dec
loopne
in
in
out
dec
cld
dec
or
dec
in
in
es
xor
inc
dec
push
dec
mov
dec
ins
dec
jp
out
dec
push
shr
test
ja
or
mov
addr16
add
pushf
dec
dec
xor
dec
xchg
and
stc
dec
add
cmovl
jb
enter
dec
ss
inc
dec
and
sbb
dec
pusha
dec
outs
dec
jl
in
xchg
dec
mov
cmps
dec
aam
sbb
mov
ret
push
push
arpl
sub
ins
sbb
sbb
dec
daa
les
and
clc
in
daa
pop
or
leave
out
sub
mov
pop
leave
and
enter
dec
dec
adc
pop
ins
fcmovu
sbb
and
iret
shl
sahf
out
daa
push
xchg
pop
add
mov
sub
fidiv
sahf
mov
mov
add
cmp
hlt
call
xchg
stos
cld
and
pushf
pushf
fmul
xor
ror
mov
dec
push
addr16
mov
(bad)
mov
add
inc
xor
jns
pop
cmovae
into
fsub
in
sbb
mov
lock
mov
das
pop
xchg
push
addr16
push
cld
in
shl
leave
inc
fcom
add
frstor
adc
xchg
mov
mov
daa
iret
repz
add
add
jns
cmp
xor
push
leave
and
mov
dec
push
mov
daa
daa
pop
jnp
mov
jb
push
(bad)
jmp
jb
(bad)
xor
xchg
icebp
addr16
mov
cmp
scas
pop
ds
push
xchg
and
pop
pop
pop
pop
sub
xor
cmp
inc
daa
iret
jae
cmovl
push
or
dec
dec
outs
(bad)
je
aas
test
pushf
pushf
pushf
mov
iret
movs
adc
iret
mov
pop
aaa
jmp
cmp
fmul
ror
mov
push
sbb
push
and
ss
in
repnz
cmps
or
jl
in
in
pop
fs
je
xchg
fucomi
xchg
setge
movs
sbb
cmp
dec
cmp
cmp
call
in
in
push
add
push
adc
xchg
xchg
pop
mov
xor
inc
dec
push
sahf
xchg
xchg
xchg
pop
pusha
push
stc
xor
push
das
mov
pop
push
(bad)
mov
jp
push
push
pop
les
sbb
sub
(bad)
pop
push
jo
jo
mov
hlt
out
stos
ja
es
pop
daa
add
fs
mov
and
icebp
out
aas
out
push
not
jae
enter
push
push
push
sbb
inc
lea
push
or
xchg
xchg
cmp
push
das
sub
xchg
and
or
adc
cmp
enter
push
mov
mov
mov
or
icebp
stc
pop
add
mov
and
sub
pop
leave
and
xor
mov
and
outs
rcr
xor
pop
xor
ja
jb
xchg
call
sahf
add
cmp
in
test
mov
add
pop
call
leave
test
dec
pop
hlt
xor
mov
push
mov
in
mov
pop
xchg
sbb
jb
pop
xchg
pop
sahf
pop
cmps
cmp
iret
mov
mov
or
jae
(bad)
into
xlat
icebp
add
mov
aas
add
outs
jb
enter
inc
pop
dec
pop
and
cmp
cs
pop
xchg
xchg
out
and
outs
mov
movs
lods
pop
outs
cmp
inc
rol
leave
leave
leave
fsub
in
hlt
jns
in
cld
add
or
push
push
adc
jb
cmp
and
xor
sbb
ret
pop
pop
pop
xor
xlat
sbb
ja
aaa
lea
push
push
cmps
pop
scas
pop
mov
mov
mov
mov
xchg
xchg
loop
mov
es
or
enter
or
pop
(bad)
mov
ins
je
xlat
jl
test
loope
sub
aaa
pop
xchg
pushf
in
pop
pop
ins
cmp
jb
pop
pop
pop
test
sahf
aaa
mov
sbb
and
ficom
(bad)
cmp
dec
leave
repz
dec
push
pop
push
add
mov
into
push
iret
das
mov
add
jb
dec
push
aam
mov
out
jbe
call
out
add
add
and
leave
out
cmps
sub
or
xchg
and
pop
sbb
pop
cmp
rdtsc
add
mov
cdq
(bad)
or
ins
je
mov
add
jns
ficomp
push
pushf
iret
in
in
mov
movs
test
xchg
cmp
(bad)
sar
div
push
mov
cmp
inc
jb
imul
mov
ret
add
mov
xchg
mov
sbb
push
call
pusha
dec
pop
pusha
xchg
dec
mov
cmp
inc
repnz
loop
cdq
mov
mov
das
das
das
das
mov
pusha
shl
sbb
fldcw
xchg
out
popa
cld
add
jb
retf
add
sub
jp
popa
jmp
xchg
hlt
in
(bad)
lea
iret
sub
fisubr
sahf
aam
(bad)
(bad)
jbe
and
bound
bound
ja
leave
enter
xor
jb
pusha
jns
dec
mov
pushf
(bad)
dec
xchg
sbb
xchg
enter
retf
(bad)
in
sbb
(bad)
call
arpl
and
cmp
dec
push
arpl
shl
cmp
mov
jb
stos
mov
pop
jb
jb
out
sbb
cmp
adc
pop
fs
cmp
cmp
fs
mov
iret
sub
xchg
sahf
pushf
pop
and
test
or
or
xor
pop
test
pop
push
xor
add
or
adc
sahf
out
pop
pop
gs
add
add
aaa
push
aas
inc
cmovg
cmp
jg
neg
leave
leave
inc
mov
jne
mov
xchg
xchg
in
fs
add
enter
call
sbb
call
ds
mov
popa
imul
loopne
xchg
leave
leave
inc
repnz
mov
jb
out
maskmovq
neg
dec
outs
pop
(bad)
jl
das
addr16
mov
inc
dec
adc
push
addr16
imul
addr16
mov
pushf
je
xchg
push
outs
(bad)
mov
sahf
out
jg
neg
jb
mov
sub
push
add
in
repz
dec
cs
dec
outs
push
add
jle
mov
jb
inc
push
sbb
lock
stos
iret
gs
mov
ja
aaa
adc
push
mov
lahf
dec
aaa
aad
dec
fmul
fnsave
int
fbld
lods
xchg
into
addr16
push
add
(bad)
call
or
jns
inc
(bad)
add
add
and
mov
jecxz
test
xlat
imul
add
dec
and
in
push
mov
nop
in
xor
movs
push
rcr
das
fs
push
es
pop
push
push
imul
imul
push
dec
je
xor
jl
push
ss
ins
inc
adc
jb
adc
imul
add
out
(bad)
push
dec
clc
fisubr
xchg
shl
mov
(bad)
xchg
popf
(bad)
lods
pop
(bad)
movs
out
jo
stc
or
pop
rol
jb
in
repnz
call
jb
add
clc
inc
cli
imul
adc
push
adc
out
imul
or
push
inc
jne
jge
pushf
pushf
pushf
gs
dec
push
mov
push
clc
xlat
leave
leave
in
in
test
mov
xchg
iret
leave
leave
ror
dec
dec
or
es
add
jns
stc
(bad)
or
pop
imul
sub
js
imul
inc
jp
pop
repnz
repnz
jns
cs
and
pop
jns
adc
inc
pop
scas
inc
dec
lock
jg
outs
mov
mov
inc
or
or
jbe
or
push
daa
pushf
pop
pop
mov
je
daa
mov
fmul
outs
out
jle
jns
ins
daa
mov
add
push
jb
or
or
dec
dec
sub
pop
push
add
ror
das
cmps
sub
imul
jg
dec
push
mov
and
push
pop
adc
cdq
dec
ss
dec
imul
cmp
loop
(bad)
cld
add
or
jns
and
ins
sbb
and
dec
dec
sahf
out
or
inc
sahf
out
jns
dec
push
push
pop
mov
imul
cmp
jg
pop
xchg
xchg
ins
dec
dec
dec
es
lahf
cmps
scas
mov
in
in
pop
mov
leave
leave
repz
or
out
iret
leave
leave
out
idiv
adc
ins
dec
je
inc
movlps
ins
cmps
(bad)
sbb
cmp
cmp
xor
push
xchg
and
js
ins
xchg
push
iret
ins
in
jb
jp
or
or
leave
repz
or
iret
stos
push
mov
ja
dec
repnz
cmp
in
dec
cdq
shr
repnz
and
outs
push
outs
sub
outs
dec
mov
pop
data16
das
outs
leave
outs
mov
outs
daa
daa
adc
pop
in
js
scas
outs
dec
pop
sub
push
outs
push
add
shr
xchg
mov
dec
mov
cmp
addr16
pushf
pop
fsubp
mov
and
pop
or
jo
enter
xor
lock
adc
scas
repnz
sahf
dec
pop
addr16
outs
jo
in
xor
ja
jo
out
cmps
pushf
cmp
mov
(bad)
cmp
cmp
retf
in
nop
dec
out
jo
mov
pop
xchg
scas
mov
and
leave
dec
dec
cs
dec
sub
leave
and
pusha
sahf
cmps
cmp
cdq
ja
add
add
push
call
cld
and
jns
adc
push
pop
and
dec
xor
and
cmp
xchg
pop
and
fcom
sub
push
sub
shl
inc
mov
jb
jb
jb
repnz
jae
jae
fild
mov
addr16
jae
leave
retf
inc
call
popa
jae
outs
daa
daa
pop
xchg
cdq
mov
and
push
inc
popf
pushf
pushf
dec
rcr
loope
sbb
popf
out
add
dec
and
and
inc
mov
je
je
daa
mov
xchg
xlat
imul
ja
mov
xchg
xchg
mov
rol
les
je
inc
test
leave
add
call
jne
jne
jne
xchg
cmp
mov
add
mov
stc
pop
jmp
cmp
iret
cmp
xchg
das
xor
jne
jl
jne
jne
sbb
jmp
inc
cmp
jbe
jbe
scas
lea
jbe
xchg
hlt
out
cmp
sar
push
fist
jb
jb
rcr
loope
mov
add
stc
jbe
ja
rcl
dec
addr16
push
movs
into
ja
add
inc
repnz
add
mov
fcmovne
xchg
cdq
ja
ja
jns
mov
add
inc
movs
ds
loopne
aaa
and
push
pop
and
fstp
pop
dec
jp
sbb
out
jne
stc
inc
fdiv
loopne
push
push
call
lock
addr16
fcomip
mov
push
push
add
iret
repz
add
add
add
das
movs
repz
dec
(bad)
outs
js
add
xchg
pop
and
push
cmp
push
fcom
rcr
dec
cs
dec
in
inc
loopne
adc
sbb
inc
pop
pop
mov
and
xchg
lahf
xchg
mov
add
lahf
jns
lea
cmps
jns
jns
push
repnz
int3
or
js
dec
clc
dec
pop
pop
fs
rcl
addr16
call
or
cwde
mov
pushf
mov
pop
mov
popf
pushf
dec
rcr
jecxz
jmp
stc
je
repz
or
dec
pop
xchg
fnsetpm(287
in
jnp
cs
sahf
xchg
ss
push
push
xchg
out
sahf
push
pop
pop
or
js
popf
imul
pop
(bad)
push
add
jmp
ss
cmp
mov
push
fs
bound
in
push
jb
jp
cmp
pop
setb
call
or
fild
fcomip
xchg
mov
xchg
and
sub
xor
jge
inc
repnz
inc
sbb
push
leave
xchg
imul
pop
pop
mov
cmp
bts
and
jge
cmp
sbb
retf
jge
jge
jge
cmp
sbb
push
or
or
fsubr
or
or
add
cwde
icebp
push
mov
mov
loope
repnz
test
(bad)
jp
mov
mov
xchg
test
push
jmp
add
pop
push
xchg
daa
pop
jg
jg
adc
in
fs
xor
inc
bswap
rcl
jmp
mov
xchg
pop
jl
mov
inc
and
or
jbe
jns
pmulhuw
jne
mov
ja
fidiv
and
dec
add
sbb
(bad)
jg
mov
mov
inc
repnz
ins
fninit
pushf
call
sti
jg
add
or
xchg
xchg
xchg
mov
adc
stos
push
out
(bad)
popf
(bad)
jg
xchg
(bad)
inc
cmp
popf
cmp
mov
rcl
adc
push
jp
sti
add
lock
push
cmp
pop
popa
fild
dec
sahf
ja
xchg
jno
mov
aaa
pop
arpl
in
in
fs
pushf
movs
lods
bswap
leave
leave
leave
mov
(bad)
int3
cmp
jmp
inc
adc
push
sub
jb
enter
add
sub
dec
fsub
inc
fs
jb
cmp
nop
leave
dec
xor
mov
leave
retf
shr
mov
push
cmp
mov
sbb
cmp
cmp
cmp
inc
dec
(bad)
daa
iret
jae
add
popa
push
cld
cmp
repz
pop
jo
shld
and
xchg
gs
loopne
dec
xlat
add
jb
jns
out
out
test
jns
test
or
pop
pop
mov
daa
das
iret
push
test
test
jmp
inc
xor
outs
mov
xchg
push
test
mov
mov
iret
cwde
ja
jecxz
dec
cs
aam
test
push
test
test
dec
push
imul
out
mov
pop
ja
push
dec
dec
dec
cs
mov
ficom
addr16
lock
or
iret
ins
and
ins
fist
fadd
iret
cli
add
xchg
movhlps
or
dec
xor
dec
ret
enter
xlat
leave
leave
leave
in
jo
js
mov
leave
inc
jb
stos
mov
and
add
in
push
imul
test
leave
retf
pop
(bad)
and
xchg
pop
sub
xchg
pushf
add
ins
xchg
inc
repnz
or
sbb
jns
leave
leave
xchg
lahf
cmps
push
add
add
add
repnz
(bad)
jl
jb
leave
leave
repnz
add
sbb
adc
mov
push
shl
add
sbb
jb
punpcklbw
jo
popf
mov
mov
push
push
test
mov
sub
mov
xchg
mov
js
mov
in
pop
lods
jl
add
xchg
cmp
lahf
cmps
ja
rcr
ins
addr16
and
sahf
add
add
fwait
in
std
fild
mov
xor
push
push
add
jbe
mov
cdq
daa
pop
in
xchg
mov
daa
pop
leave
and
pop
leave
and
inc
xor
and
pushf
loop
mov
fild
pushf
dec
js
dec
addr16
cmp
leave
jae
into
mov
leave
and
daa
cmp
mov
and
sub
adc
mov
add
mov
jb
jp
jmp
xchg
xchg
mov
dec
(bad)
jo
mov
mov
or
jns
sbb
in
in
inc
xchg
pop
iret
in
and
mov
or
movs
lods
dec
sahf
or
push
add
cmp
cmp
push
adc
das
sbb
call
mov
pop
pop
sbb
cmp
mov
in
bound
push
mov
and
(bad)
mov
xchg
mov
push
mov
(bad)
mov
nop
jb
and
mov
retf
retf
les
(bad)
aas
(bad)
js
jb
fbstp
outs
push
or
in
sub
out
and
sub
cmp
xchg
mov
nop
aaa
inc
fwait
in
seto
nop
mov
leave
cmp
hlt
lahf
fcmovne
inc
ins
jne
add
je
pushf
dec
and
mov
and
inc
retf
rcl
add
add
stc
push
dec
inc
xchg
dec
xchg
sub
es
xchg
je
xor
cmp
xchg
inc
stc
shl
dec
push
add
pop
and
push
out
cmps
cwde
test
pushf
movs
mov
out
pushf
lods
pop
iret
xlat
mov
enter
xchg
push
jp
dec
cld
and
leave
retf
sub
ja
xchg
xchg
xchg
pop
pusha
push
mov
jb
jb
mov
aam
in
mov
xor
inc
mov
push
sbb
addr16
leave
jae
aas
push
add
and
xchg
sbb
jb
xchg
xchg
xchg
popf
xchg
fsub
stc
es
ja
into
inc
js
in
fs
fmul
enter
ss
xchg
retf
retf
xchg
rcl
retf
retf
retf
retf
or
xchg
fs
sub
or
xchg
sbb
jb
xchg
arpl
pop
add
sahf
push
dec
dec
cmps
cld
js
in
mov
leave
rcr
loope
add
pop
in
mov
xchg
mov
xchg
adc
sahf
out
jb
xchg
and
sub
xor
sub
xchg
mov
or
jb
xor
jbe
jb
jg
setb
stc
jno
push
call
test
sahf
fdiv
add
cs
(bad)
dec
inc
mov
pushf
pushf
pop
mov
ja
test
jnp
mov
xchg
dec
dec
mov
in
or
inc
dec
repnz
dec
push
loop
xchg
(bad)
jl
leave
stos
adc
xchg
daa
daa
mov
xchg
packssdw
cs
sub
leave
repz
dec
cmps
scas
push
add
mov
dec
aad
psubw
push
dec
popf
cmp
cwde
cmp
xor
cwde
cwde
push
add
dec
pop
loop
imul
mov
mov
xchg
setl
movs
lods
lfs
out
add
out
in
or
fsub
sahf
out
sahf
or
or
or
jns
add
(bad)
adc
xchg
ins
jle
inc
dec
adc
aas
cdq
inc
cdq
dec
sahf
fcmovne
xchg
cdq
push
cdq
pop
xchg
push
mov
or
call
cmps
or
shr
iret
jae
add
call
push
fisub
xchg
or
adc
sbb
dec
call
pop
jae
and
push
add
mov
mov
and
dec
fwait
mov
sub
je
iret
in
and
add
jns
aam
lods
xchg
pop
movs
or
(bad)
pop
add
out
push
add
add
add
jns
out
add
add
in
pop
pushf
das
femms
add
pop
pop
daa
das
aas
aaa
cmp
daa
daa
aas
inc
dec
adc
cmp
repz
adc
addr16
jae
adc
cmp
iret
pop
xchg
(bad)
mov
adc
mov
clc
add
rcr
(bad)
aas
and
outs
mov
inc
pop
cmp
push
jns
dec
dec
pop
arpl
repz
in
jnp
or
or
mov
scas
mov
mov
push
inc
nop
popf
jl
cld
mov
pop
push
dec
ja
xchg
out
das
data16
add
das
cmp
test
lea
pop
and
mov
and
jecxz
mov
dec
lahf
jnp
mov
xlat
inc
test
xor
lahf
iret
inc
lahf
enter
dec
lahf
dec
lahf
xchg
pushf
xor
push
(bad)
test
jae
push
movs
mov
outs
pop
retf
shl
xchg
pushf
pop
cmc
std
add
das
das
rsm
jmp
mov
popf
pop
mov
ja
pop
xchg
mov
mov
mov
in
xchg
dec
in
pop
fadd
and
test
mov
and
mov
scas
pop
mov
cmps
dec
push
cmp
jb
(bad)
jp
pop
jb
xchg
mov
jb
ror
mov
cs
dec
jmp
push
leave
retf
xchg
jp
mov
mov
ja
pusha
push
ja
add
daa
daa
daa
pop
xchg
fwait
mov
and
push
repnz
mov
add
mov
mov
mov
in
rcl
in
and
xor
hlt
cdq
push
outs
movs
push
icebp
push
sbb
cmp
mov
outs
mov
int3
call
add
mov
int
js
cmp
lock
add
movs
ins
sub
add
lahf
and
push
inc
movs
movs
ds
cmovle
ror
jns
sub
xchg
cdq
push
ror
iret
add
jmp
paddq
mov
enter
inc
cmps
pop
xsha1
cmps
dec
repnz
cmps
jl
out
pop
cmps
(bad)
cmps
or
mov
push
jne
test
leave
cmps
cmps
cmps
lahf
mov
retf
retf
stos
cmps
mov
mov
sbb
xchg
out
jg
das
add
push
sbb
inc
mov
sbb
xor
cmp
pushf
pop
mov
cmps
fs
je
add
pushf
jl
cmps
jmp
pop
sub
rcr
mov
mov
cmps
jmp
mov
clc
push
push
test
(bad)
mov
xchg
mov
xor
icebp
xchg
push
(bad)
(bad)
or
xchg
mov
int3
vpmacssdd
test
sahf
out
fimul
push
retf
pop
ror
pushf
out
jns
jecxz
out
enter
pop
push
nop
adc
sbb
jb
sbb
and
sub
xor
xchg
and
cmp
inc
test
in
push
test
outs
test
sbb
xchg
xchg
xchg
xchg
xchg
popf
movs
lods
mov
xchg
xchg
xchg
mov
jb
mov
in
cmc
cmp
jns
std
add
jae
cmp
xor
adc
adc
iret
repz
pop
push
pop
dec
gs
daa
xchg
iret
add
or
xchg
mov
nop
stos
cwde
stos
mov
jb
stos
mov
mov
xchg
and
stos
shr
mov
dec
xchg
add
cmp
stos
sbb
enter
xor
leave
xor
dec
stos
push
stos
or
fsubr
pop
jp
jp
pushf
pushf
call
popf
mov
iret
leave
in
in
jecxz
repz
sti
sbb
lods
or
mov
inc
lods
dec
lods
xchg
xchg
and
lods
pop
lods
fs
xchg
xchg
xchg
ins
je
or
cmp
mov
cmp
cmp
mov
jbe
jb
fucom
in
cmc
idiv
mov
jg
lods
out
push
jns
lods
(bad)
inc
repnz
jbe
pop
lods
cmps
add
jle
int3
mov
clc
les
scas
out
add
xchg
push
adc
mov
xchg
addr16
sub
iret
add
xchg
xchg
pop
and
sbb
scas
mov
add
add
js
or
jb
xchg
jl
adc
addr16
jb
pop
jb
call
js
scas
push
out
sub
xchg
pop
push
add
dec
cs
pop
ret
rol
cmps
aam
lock
ss
arpl
push
scas
or
mov
in
adc
and
repnz
mov
inc
and
sub
cmp
xchg
sahf
pop
xchg
lahf
mov
stos
mov
leave
inc
dec
ja
fnclex
inc
jb
out
or
xchg
mov
sbb
push
lock
mov
ror
mov
cdq
enter
jg
cdq
mov
mov
enter
mov
jecxz
in
aad
in
in
mov
sub
pop
add
sub
das
das
(bad)
and
out
cs
das
cmp
pop
dec
ret
xchg
xchg
ins
je
mov
pop
call
lahf
jbe
cmp
cmps
scas
mov
mov
loopne
aas
mov
xchg
xchg
xchg
loop
repnz
cmp
enter
push
add
out
pop
and
sub
mov
cmp
aas
push
out
cmp
pop
bound
xchg
out
sahf
jb
jp
sbb
xchg
push
call
stos
xor
int
aad
mov
mov
cwde
pop
ja
adc
cmps
or
int3
cmps
cmp
ds
cmps
push
movs
pushf
ss
adc
push
cmps
pop
pop
fnsave
jmp
out
xor
pop
or
and
pop
pop
push
inc
mov
mov
mov
pop
pop
pop
push
mov
mov
mov
mov
mov
inc
mov
(bad)
das
push
or
mov
sbb
mov
mov
inc
mov
mov
ret
inc
cmp
pop
int3
mov
jb
out
idiv
leave
repz
mov
add
leave
pop
daa
das
or
mov
inc
push
vmwrite
je
jl
xor
push
and
fcom
stos
push
rcr
pushf
scas
sub
sahf
(bad)
adc
das
mov
repz
mov
add
xchg
je
inc
fist
jb
outs
ja
xchg
xchg
pop
mov
jb
mov
xchg
mov
add
in
cmc
sbb
(bad)
xchg
std
add
adc
iret
add
or
leave
in
in
cmp
xchg
xchg
fist
pop
gs
sahf
out
sahf
jne
jge
test
sahf
out
jns
xchg
adc
out
movs
pop
lods
mov
jns
dec
(bad)
fdiv
in
adc
mov
mov
sbb
scas
mov
cs
out
cmp
fild
mov
in
mov
out
sub
loopne
push
and
adc
cmp
and
and
and
and
pushf
fmul
cmp
push
inc
sahf
lock
pop
divps
(bad)
jp
adc
enter
aas
call
sbb
sahf
ja
push
sbb
retf
shl
in
mov
ss
or
adc
push
mov
jb
mov
dec
push
pop
ins
xor
imul
or
dec
ds
add
inc
mov
stc
add
btc
mov
pop
mov
mov
mov
xchg
jae
popf
(bad)
seta
xchg
xchg
mov
xlat
rcr
mov
mov
add
or
and
fstp
das
mov
inc
pop
pop
pop
pusha
mov
mov
mov
mov
repnz
in
call
sbb
and
cmps
dec
mov
push
ins
js
js
inc
call
aas
hlt
cmps
mov
mov
adc
jbe
out
cmps
dec
cmps
mov
mov
jns
cmps
and
sub
dec
and
lock
mov
daa
pop
add
and
daa
lods
ja
sar
fisttp
stc
cmp
add
in
and
fist
dec
jb
mov
jne
fcmovu
mov
ror
(bad)
dec
in
push
inc
add
test
aaa
dec
push
daa
adc
add
add
mov
pop
retf
aas
or
mov
xchg
imul
mov
test
fs
stos
iret
dec
fisub
xchg
sar
add
mov
jns
rcr
call
mov
add
daa
adc
dec
retf
retf
retf
cmp
inc
rcl
ror
mov
add
xchg
xchg
pop
and
sub
iret
push
stos
scas
adc
inc
cmp
pushf
pushf
fmul
adc
and
pushf
pushf
pushf
pushf
xor
inc
dec
loopne
pushf
pushf
push
pop
arpl
or
lods
xchg
daa
daa
mov
setbe
daa
daa
mov
(bad)
into
sar
daa
(bad)
fidivr
and
add
lods
ja
adc
(bad)
loopne
pop
ret
in
mov
add
inc
add
push
minps
repnz
cmp
gs
ins
or
daa
iret
jae
or
jbe
xchg
popf
xadd
ret
cwde
dec
push
mov
pusha
lods
ret
and
pop
pop
push
hlt
ret
cld
ret
enter
xchg
lods
pop
les
les
ja
push
push
add
cdq
dec
ds
jne
dec
cs
fsubr
mov
add
out
les
ja
sbb
and
pushf
adc
sbb
daa
lds
jb
enter
lds
push
lds
sbb
popa
lds
or
and
iret
repz
cdq
pop
dec
dec
cs
mov
dec
dec
dec
jecxz
stc
add
in
xchg
and
(bad)
and
cs
jp
aaa
jb
(bad)
dec
push
ffreep
adc
jg
pop
and
push
sub
pop
mov
test
rcr
popf
fld
in
outs
(bad)
cmp
add
and
pusha
leave
xchg
adc
sub
xor
daa
cmp
addr16
(bad)
or
inc
repnz
and
sahf
pop
mov
cmp
into
jbe
jle
mov
push
cmp
(bad)
ja
push
mov
dec
dec
dec
mov
dec
dec
dec
fsubp
lock
out
sbb
mov
enter
xchg
add
test
ror
and
mov
xchg
iret
sub
sub
lea
rcl
ja
pop
jo
cmp
cld
fild
or
leave
ja
mov
cdq
push
leave
pushf
cmp
push
mov
dec
rcr
repz
jp
or
fcmovne
inc
pop
(bad)
cmps
scas
paddq
nop
mov
dec
xor
js
mov
leave
ja
mov
aaa
xlat
pop
cli
pop
add
lahf
or
outs
sub
sysexit
cmp
push
pusha
mov
pusha
retf
setb
pop
pop
mov
mov
dec
scas
and
(bad)
icebp
xchg
pushf
push
adc
sub
xchg
pop
and
pop
mov
ror
pop
dec
dec
dec
mov
or
dec
dec
mov
dec
mov
mov
jb
int
(bad)
mov
fmul
in
cmc
std
dec
and
pushf
push
(bad)
push
(bad)
inc
pop
inc
int3
dec
int3
frstor
and
push
int3
int3
movd
xchg
int3
call
push
and
int3
mov
mov
clc
xor
mov
dec
and
int
push
pop
and
pop
dec
xchg
je
test
xlat
adc
es
pop
test
mov
ret
out
inc
adc
(bad)
js
jns
dec
into
adc
sbb
fisub
jae
iret
into
das
dec
into
push
push
into
mov
pop
jb
ja
jg
mov
cmps
inc
mov
in
cmpps
ror
hlt
jbe
jb
loop
dec
adc
pop
das
pop
stos
call
xor
pop
mov
pop
(bad)
cmp
outs
lock
scas
mov
mov
das
iret
bt
dec
outs
pop
stos
mov
vpmulhuw
int
aad
setae
into
out
or
mov
xlat
fdivr
sub
sysenter
cmp
dec
dec
sahf
xchg
addr16
add
xor
xchg
(bad)
rcr
dec
xor
mov
cmp
(bad)
mov
cmps
test
in
aaa
cmc
sahf
mov
paddw
cmp
and
cmp
call
das
push
mov
stos
pop
and
cmc
and
rol
repnz
and
addr16
js
leave
dec
push
adc
not
inc
stc
sar
mov
shl
mov
xchg
mov
loope
add
xchg
xchg
das
or
or
adc
imul
rcr
mov
mov
mov
test
xchg
daa
daa
daa
fisttp
sahf
cmps
scas
mov
daa
daa
daa
ror
fsub
daa
daa
daa
loope
repnz
aam
mov
test
loopne
jmp
leave
leave
sub
pusha
push
jo
outs
fwait
aam
aam
aad
inc
aam
scas
call
addr16
aam
mov
inc
sysenter
sar
inc
es
sbb
cmp
cmp
sub
cmp
int
cmp
(bad)
mulps
leave
leave
leave
popa
imul
aam
aad
shl
sbb
ret
aad
aad
shr
or
dec
test
leave
pop
rcl
daa
(bad)
jb
jb
xor
inc
jb
jb
dec
push
pop
fs
xor
jne
or
and
mov
cmp
mov
ror
xchg
xchg
fisttp
ror
fsub
xchg
rcl
(bad)
jmp
and
push
ins
ret
xchg
xchg
xchg
pop
movntps
cmp
xlat
ret
data16
jmp
jns
pop
sub
shl
in
mov
pop
leave
mov
enter
out
out
clc
add
push
mov
into
or
leave
sub
inc
outs
dec
nop
into
dec
lahf
pop
ja
daa
pop
ins
add
jns
outs
daa
stos
xchg
in
and
fild
push
loop
jb
clc
ins
sbb
mov
cwde
(bad)
call
out
cmovs
fs
pushf
popa
push
cmps
cmp
daa
mov
mov
sub
fcompp
xlat
iret
leave
leave
leave
fsub
call
pop
and
(bad)
dec
cs
adc
add
push
mov
(bad)
lahf
jbe
jle
jae
cmp
push
xchg
mov
add
cmps
push
scas
jae
cmp
mov
mov
iret
or
(bad)
(bad)
jnp
sub
stc
addr16
(bad)
jb
xor
adc
and
(bad)
(bad)
jb
(bad)
fisttp
xor
fcomi
push
loope
xchg
(bad)
cs
inc
iret
leave
or
xchg
fld
mov
dec
sahf
or
call
mov
add
dec
outs
xchg
fmul
push
es
push
mulps
fcom
sub
mov
or
push
add
pop
jo
cmp
scas
pop
mov
xadd
rcr
cmp
cmp
loop
repz
mov
mov
fisttp
daa
push
fst
pop
leave
in
jbe
addr16
sqrtps
in
in
imul
int
or
xchg
xchg
xchg
cdq
mov
out
mov
pushf
pushf
fmul
paddsb
cld
pop
dec
inc
sahf
add
or
fidivr
xor
push
pusha
stc
fadd
mov
(bad)
jle
in
and
mov
enter
retf
mov
fimul
repz
mov
cld
add
or
ds
(bad)
cmp
(bad)
stos
pop
jb
pop
arpl
xchg
pop
jo
cmps
aam
xchg
mov
xchg
fbld
adc
leave
call
(bad)
in
inc
xor
hlt
(bad)
fild
loopne
xchg
loope
repnz
int3
cmp
fld
dec
pop
push
minps
outs
mov
jne
sub
stos
loopne
dec
pop
mov
or
xchg
out
fwait
repnz
jns
or
push
loope
es
loope
in
and
(bad)
in
and
fcom
or
stos
(bad)
dec
es
xor
dec
xor
cmp
into
jg
in
leave
sub
loop
popa
out
adc
mov
outs
xchg
data16
loop
dec
in
pop
dec
push
loop
pcmpgtb
aas
(bad)
seta
in
inc
sbb
addr16
xchg
pop
and
add
mov
jecxz
adc
push
and
dec
ja
fcmovbe
scas
cmp
inc
leave
leave
leave
leave
dec
push
pop
gs
mov
mov
xchg
push
pop
js
cdq
mov
mov
pop
lods
mov
mov
aam
pmulhuw
jecxz
jnp
cld
xlat
hlt
jecxz
(bad)
in
daa
in
and
in
xor
xor
pop
in
ror
dec
pop
jb
mov
push
das
cdq
lods
js
(bad)
add
rcl
(bad)
xchg
xchg
xchg
xchg
loope
repnz
add
leave
enter
adc
call
mov
leave
leave
leave
sub
dec
outs
cmp
pshufw
dec
dec
or
leave
inc
stos
mov
mov
ret
retf
out
in
mul
or
push
inc
fwait
rcl
cmp
jmp
outs
ja
leave
jae
add
dec
outs
stos
add
into
(bad)
fsubr
stc
adc
push
sbb
sbb
cmp
out
push
out
outs
mov
pushf
pushf
out
and
aad
rsm
or
out
and
das
loop
in
out
xchg
in
mov
mov
jb
call
push
retf
leave
inc
repnz
xor
out
call
ja
das
test
cmp
shl
or
es
or
iret
jae
rcr
or
(bad)
leave
add
mov
and
and
jmp
leave
repz
add
cmp
cmp
dec
or
jns
iret
repz
push
push
or
jp
stos
jmp
(bad)
int
lock
xchg
mov
sbb
xchg
inc
sbb
ss
inc
(bad)
enter
jmp
enter
add
shl
jmp
jb
stos
jmp
into
jmp
inc
add
push
jmp
mov
mov
cmp
dec
inc
dec
pop
ja
jl
sahf
fild
push
add
mov
and
adc
jmp
xchg
dec
pop
and
in
push
cmp
inc
xchg
xchg
mov
xchg
mov
enter
add
leave
jae
movs
add
retf
in
daa
daa
rcr
cmp
jb
enter
paddsw
in
mov
inc
cmovl
ja
fiadd
mov
(bad)
in
mov
xchg
pop
jns
mov
(bad)
in
push
jmp
out
sbb
xchg
dec
cwde
aaa
out
mov
push
out
ja
(bad)
popf
mov
les
jnp
mov
(bad)
repnz
sbb
out
repnz
out
cmps
out
(bad)
out
iret
out
repz
in
xlat
das
fild
out
cmp
leave
out
imul
pop
(bad)
out
jns
movs
retf
push
or
repz
out
or
das
repz
iret
adc
aas
adc
jns
iret
adc
push
adc
sahf
push
addr16
out
xchg
out
dec
cmps
inc
inc
call
cmp
out
push
icebp
iret
addr16
in
add
wbinvd
lock
repz
sub
inc
popf
pop
and
add
push
mov
clc
mov
test
jns
push
mov
pushf
add
sbb
iret
in
mov
push
add
mov
sub
imul
in
mov
inc
repnz
xlat
xchg
and
fistp
pop
leave
les
nop
pop
push
inc
repnz
repnz
repnz
repnz
inc
mov
test
mov
mov
out
in
xchg
pushf
in
repz
inc
sub
pop
cmp
and
mov
loope
dec
pop
push
xchg
repz
repz
push
loopne
pop
mov
and
sbb
and
loop
repnz
hlt
xchg
xchg
in
out
push
push
(bad)
aas
hlt
push
loop
mov
scas
ins
hlt
push
sbb
je
jl
jl
in
shl
jle
hlt
pminsw
jmp
adc
mov
inc
mov
addr16
scas
pop
pop
mov
popa
test
cmp
fdivrp
sbb
mov
mov
cmc
cs
outs
dec
pop
out
cmps
jo
jns
inc
dec
push
test
sbb
leave
push
ja
div
push
call
xchg
imul
mov
push
int3
cs
dec
cs
rol
in
outs
test
add
in
mov
and
movaps
jns
out
push
add
add
or
(bad)
jnp
popf
pop
mov
mov
cmps
push
pop
imul
mov
iret
inc
out
leave
xchg
xchg
cmc
std
add
in
inc
sub
xor
cmp
jb
pop
test
imul
call
and
mov
movs
mov
jmp
out
inc
push
pop
mov
or
retf
retf
adc
stc
push
out
jns
dec
mov
stc
clc
dec
call
or
mov
push
mov
mov
enter
sbb
loop
fsub
nop
mov
inc
cli
out
or
leave
inc
repnz
jmp
jns
js
add
xchg
xchg
nop
cdq
mov
(bad)
fcmovne
int
pmaxub
jmp
setb
add
or
inc
push
pop
mov
cs
inc
xor
jmp
pop
packsswb
xchg
xchg
jne
xchg
stos
sahf
pop
mov
add
aad
sub
loopne
ja
fidiv
push
sub
dec
ja
xor
mov
xchg
dec
push
dec
push
js
xchg
in
inc
inc
mov
xchg
mov
xchg
aad
call
mov
std
(bad)
in
push
mov
xchg
mov
inc
mov
pinsrw
pop
std
iret
add
cmp
mov
mov
cs
fcomp
in
mov
adc
test
(bad)
in
xchg
jae
inc
dec
push
(bad)
shr
jmp
xchg
jbe
push
in
mov
out
(bad)
out
add
mov
dec
repnz
dec
cmps
sub
mov
jmp
jne
and
cmps
out
lock
leave
aam
cmp
cmp
in
sbb
push
mov
cmps
aas
push
ficom
pop
xchg
out
inc
in
jmp
ja
arpl
imul
pmaxub
in
jbe
das
or
xchg
ds
movs
mov
lock
out
sub
add
jnp
mov
add
add
dec
mov
push
push
cs
add
mov
add
rcr
xchg
mov
push
jb
pop
xor
xchg
pop
fs
jg
pop
mov
sahf
adc
add
push
ins
clc
fisubr
repnz
mov
rsm
daa
mov
add
ret
ror
fiadd
cmp
ins
cmp
lods
(bad)
std
daa
daa
mov
outs
add
or
cmp
adc
add
aaa
xchg
pop
call
inc
ror
push
in
pop
leave
and
xchg
mov
in
shl
xchg
mov
hlt
das
dec
mov
jo
js
xchg
pushf
pop
mov
ja
mov
out
pop
and
sub
and
sbb
div
ja
fimul
push
inc
cmp
leave
dec
and
push
pop
and
lods
jb
add
aam
xchg
pushf
popf
test
addr16
xchg
mov
scas
ror
sahf
out
pop
push
add
add
jmp
pushf
out
dec
prefetch
xor
push
aaa
push
jo
adc
mul
jb
cmp
push
and
sbb
push
mov
pop
in
fiadd
mov
cmps
jecxz
xchg
pop
adc
push
pop
pop
in
jb
jb
ja
dec
push
fstp
jge
xchg
xchg
imul
ja
mov
dec
dec
dec
mov
dec
cs
stc
in
das
xchg
fcomp
(bad)
or
aaa
jb
or
push
call
pop
sbb
out
push
fnstsw
or
and
daa
xchg
iret
add
mov
test
jp
clc
mov
cmps
push
or
or
dec
outs
daa
iret
add
cs
aas
dec
dec
dec
dec
dec
push
pop
bound
dec
dec
imul
jo
dec
lea
js
ret
or
xchg
cmc
nop
xchg
mov
or
add
pop
ror
mov
push
mov
jae
cmp
or
pop
or
add
and
mov
cs
dec
cs
loop
adc
dec
or
adc
sub
xchg
out
xchg
add
iret
leave
repz
jp
add
pop
and
loopne
add
iret
clc
adc
push
xor
and
cmp
pop
cmp
in
fnstenv
jl
enter
or
and
sbb
push
addr16
cld
lods
cld
leave
push
fwait
inc
xor
fcomp
pop
enter
xchg
std
iret
inc
cs
aad
enter
fisttp
lods
nop
imul
movs
mov
sbb
sar
das
mov
sub
sbb
add
ins
dec
pop
ds
pop
push
jbe
xchg
or
mov
pop
xchg
push
daa
sbb
mov
iret
ror
and
outs
dec
mov
(bad)
int3
scas
fadd
in
pop
and
cmp
and
push
sub
fucomp
aad
mov
xchg
lock
inc
push
fs
pop
leave
enter
and
xchg
mov
add
and
mov
test
and
shl
and
push
ss
push
inc
push
outs
js
repnz
into
aaa
push
aas
push
mov
push
dec
push
push
fist
dec
jp
mov
xchg
in
cmps
loopne
sbb
leave
mov
in
mov
dec
lods
and
leave
mov
lock
sahf
dec
pop
xchg
add
inc
jb
(bad)
add
push
in
mov
xor
mov
xchg
mov
mov
xchg
(bad)
mov
repnz
mov
loopne
or
inc
jb
inc
clc
cmp
and
ds
popa
mov
test
xor
add
pop
inc
in
ins
dec
es
adc
cwde
mov
les
mov
sbb
and
dec
and
dec
pop
and
pop
mov
and
mov
cs
int3
sub
adc
dec
cs
and
outs
and
xchg
leave
and
test
leave
and
rol
mov
xor
imul
ret
out
in
(bad)
addr16
add
ins
and
leave
adc
push
inc
adc
mov
mov
cs
dec
push
daa
pusha
cld
test
nop
xlat
push
sub
das
jo
leave
out
loopne
push
xchg
adc
xchg
ret
xchg
or
and
pop
lods
or
leave
out
mov
jmp
or
daa
and
repnz
jmp
adc
retf
retf
add
adc
adc
pop
ins
mov
pop
jbe
outs
or
mov
sbb
out
pop
jbe
cdq
scas
pop
mov
lahf
fcom
sub
icebp
and
add
jl
xchg
push
push
test
les
and
cmp
ror
sub
pop
inc
adc
fwait
dec
gs
xor
xchg
pop
jb
pusha
stos
pop
jb
pop
mov
mov
icebp
in
and
jns
push
adc
xchg
cmp
push
xchg
out
jo
ss
out
shl
or
add
or
dec
fmul
nop
pop
push
push
cwde
dec
ja
test
pop
ins
add
and
es
lods
fistp
loope
shl
sbb
dec
cld
das
nop
adc
fucomip
push
retf
daa
or
pop
pop
sub
dec
sahf
add
jl
and
rcl
add
in
and
test
pop
mov
fcomp
push
add
test
add
xor
jne
dec
sahf
push
dec
xchg
mov
lahf
and
outs
add
push
mov
fild
sbb
and
test
inc
mov
adc
nop
cmp
inc
enter
test
jge
dec
iret
(bad)
test
stc
mov
mov
sbb
and
pop
sub
mov
mov
adc
ja
sbb
ja
cmp
jb
jb
mov
jo
cmc
inc
mov
leave
sbb
sbb
and
loopne
and
je
scas
pop
cmp
sub
out
inc
dec
aas
in
in
sbb
push
sbb
push
jl
add
sub
xchg
daa
xchg
add
call
inc
pop
xchg
push
ret
sar
mov
jb
adc
cmc
pop
aad
jbe
sbb
call
mov
pop
sub
ret
das
call
test
xchg
dec
mov
cmps
mov
cwde
das
popa
sbb
xchg
and
emms
jns
cmp
add
enter
out
shr
clc
add
in
das
cs
ss
sbb
in
dec
mov
imul
enter
and
adc
pop
and
ds
scas
mov
fs
fcomip
sbb
in
sub
push
call
ins
sbb
sub
loopne
xor
jns
pop
push
cmp
in
mov
pop
inc
pushf
jb
(bad)
repnz
push
enter
sbb
sbb
or
adc
pop
shr
sbb
push
mov
lahf
dec
push
add
inc
repnz
ins
fs
nop
cmp
lock
push
jle
mov
mov
int3
iret
jecxz
cmps
adc
sbb
push
outs
retf
sub
pop
push
(bad)
leave
inc
sbb
dec
ja
int3
cwde
push
dec
pop
call
mov
in
add
sbb
enter
jl
or
push
movaps
and
or
xlat
push
xchg
sbb
push
push
add
pop
adc
xlat
jl
nop
inc
int
mov
pop
fucompp
out
mov
add
add
adc
mov
or
and
pop
fwait
scas
and
xchg
pop
pop
push
pop
in
xchg
mov
or
mov
xchg
push
leave
jecxz
or
sbb
pushf
inc
into
xlat
sub
and
and
dec
inc
into
and
pusha
sbb
jns
loopne
cmp
pop
sbb
add
and
aaa
lods
repnz
and
jmp
and
jbe
dec
sbb
addr16
jbe
and
pushf
cmp
add
sbb
xchg
setnp
ins
addr16
out
mov
push
loope
or
jmp
mov
loope
(bad)
cmc
push
and
push
dec
and
(bad)
mov
test
loopne
fisttp
push
push
nop
push
nop
xchg
pop
xor
clc
push
js
(bad)
in
repnz
push
or
cld
stos
leave
sbb
and
cdq
sub
sub
xchg
retf
out
rcl
mov
ror
push
iret
ins
in
and
addr16
and
pushf
pop
push
pop
clc
inc
repnz
sub
leave
inc
jb
mov
fidiv
inc
jb
(bad)
mov
adc
inc
and
fsub
leave
inc
clc
sub
mov
in
inc
xor
imul
mov
in
mov
fidivr
leave
mov
aam
and
and
sub
and
dec
hlt
and
scas
and
mov
shl
and
mov
and
xchg
dec
dec
pop
es
dec
cs
dec
push
xchg
xchg
add
out
lods
daa
in
and
inc
in
and
and
xchg
push
in
inc
inc
loope
inc
and
push
xor
and
es
xchg
es
and
add
rcl
daa
daa
xlat
mov
daa
cmp
loopne
or
jmp
xor
cmp
sbb
daa
jle
xchg
and
and
cs
push
(bad)
mov
and
add
sbb
xchg
mov
xchg
and
cmp
mov
je
sub
ja
adc
mov
dec
cmp
push
xor
es
jbe
mov
xchg
sbb
leave
sub
cmp
dec
daa
mov
or
xchg
leave
out
cmp
and
shl
push
ds
adc
ss
iret
orps
imul
sub
(bad)
push
mov
loop
mov
adc
jb
sub
sub
sub
pusha
dec
cli
push
dec
iret
and
adc
xor
aad
outs
jl
pop
sub
xchg
popa
imul
pop
cmp
lds
(bad)
movs
sub
daa
(bad)
mul
rcr
sub
in
jbe
repnz
and
push
push
iret
cld
aad
cmp
in
inc
xor
mov
nop
mov
xchg
mov
mov
imul
sbb
mov
sub
and
in
mov
jne
and
xchg
mov
mov
cvtpi2ps
xchg
sti
and
call
sub
inc
test
pop
and
mov
and
pop
xchg
stos
dec
es
xchg
or
xchg
xor
pusha
pop
leave
and
adc
ss
pop
in
pop
leave
in
adc
mov
xchg
mov
xchg
ret
xor
mov
xchg
or
inc
sub
and
dec
sbb
jno
in
mov
mov
das
out
pop
dec
pop
xchg
iret
and
pushf
movs
dec
xchg
lods
dec
into
xor
addr16
out
dec
mov
xlat
mov
sbb
or
sub
scas
clc
iretw
repz
call
adc
cmp
fdiv
fmulp
pop
ja
es
sub
(bad)
add
cs
cmp
mov
out
pop
or
mov
add
ja
in
and
add
iret
fcmovne
inc
jb
sahf
cmps
mov
add
rcl
cld
mov
shl
adc
mov
pop
(bad)
push
add
daa
iret
jae
add
push
cmovp
dec
dec
inc
cmp
push
and
sahf
xchg
imul
loope
push
sub
das
push
repnz
or
unpcklps
and
dec
movs
stos
push
adc
pop
nop
inc
xchg
js
ja
dec
dec
xor
(bad)
jmp
ins
inc
dec
pop
data16
aas
cmp
pop
jnp
dec
daa
shl
mov
xor
pop
loopne
and
jns
xor
lock
lods
push
xor
inc
xor
das
cdq
inc
iret
nop
xor
pop
add
repnz
int3
cmp
adc
leave
cmps
(bad)
sbb
jl
fcmovne
xchg
adc
xor
dec
psubw
push
pop
push
mov
and
jle
cwde
mov
xor
in
mov
clc
xor
daa
xchg
xor
adc
dec
ss
pop
ss
dec
and
movs
xchg
pop
and
mov
mov
or
addr16
xor
dec
js
movs
scas
xchg
dec
xchg
push
(bad)
sub
sub
xor
mov
xor
or
xchg
(bad)
ins
ja
inc
dec
repnz
fdiv
popf
xor
push
mov
inc
cmp
pushf
xchg
adc
popf
ins
cmp
xor
fwait
inc
nop
inc
iret
jl
sahf
dec
leave
or
cmp
dec
push
add
aaa
xor
pop
and
push
pop
push
pop
test
aas
aam
dec
aas
nop
adc
sbb
pop
fwait
sar
inc
repnz
jne
dec
add
dec
and
push
ret
test
into
mov
fdiv
leave
dec
pop
cmp
(bad)
xor
iret
in
(bad)
inc
jb
aas
test
leave
out
adc
mov
out
call
add
xchg
repnz
mov
sbb
dec
push
pop
adc
rdtsc
pushf
and
xor
das
jbe
aas
js
aam
daa
xchg
pop
or
mov
jg
enter
and
je
nop
mov
int3
dec
cmps
mov
mov
leave
inc
xchg
sub
sub
and
or
sub
arpl
jbe
dec
dec
add
aam
out
and
fimul
push
daa
sub
imul
jo
jp
dec
test
mov
cmp
dec
dec
jne
repnz
cs
(bad)
jbe
push
in
inc
cmp
ss
mov
daa
sbb
mov
imul
(bad)
movs
mov
mov
jmp
je
in
push
daa
fs
pop
jno
mov
mov
sbb
xor
dec
add
and
ds
(bad)
outs
neg
add
adc
pop
and
cmp
push
dec
sbb
and
or
push
sbb
pop
cld
xchg
and
and
add
sbb
push
ss
xchg
scas
sbb
pushf
mov
and
dec
retf
leave
cs
dec
(bad)
fs
sar
adc
xchg
ins
push
loopne
loopne
loope
ror
or
and
mov
lock
inc
jb
hlt
shl
call
and
fimul
dec
aas
push
xorps
adc
adc
(bad)
out
(bad)
push
jo
adc
xor
and
es
mov
push
mov
sub
inc
push
iret
fsub
adc
push
cdq
mov
aas
adc
xor
push
jg
pop
lock
adc
push
fadd
add
inc
adc
pop
sar
aam
call
hlt
add
xor
jnp
pusha
push
jl
nop
lods
int3
jns
out
in
inc
push
sub
out
sahf
out
push
cwde
lods
sbb
(bad)
sahf
rcl
(bad)
mov
pushf
retf
je
xchg
fwait
sbb
nop
rol
add
fcomp
cmp
retf
popa
sub
sbb
cmps
push
or
fdiv
inc
daa
popa
outs
pop
imul
xchg
test
push
mov
test
aas
push
ins
cmp
xchg
or
pop
pop
bound
mov
call
jo
or
into
in
popf
dec
bound
mov
push
sbb
push
fild
jnp
jbe
inc
or
inc
cli
sub
xor
sbb
pusha
mov
and
imul
movs
mov
(bad)
loopne
dec
mov
cmovg
dec
add
push
push
sbb
mov
and
add
addr16
mov
shl
inc
addr16
movs
nop
adc
xor
xor
mov
cmp
jge
pop
or
or
xor
push
dec
outs
inc
xor
sub
xor
sub
mov
mov
addr16
push
cs
or
add
add
push
ins
push
or
leave
call
and
xor
xor
or
add
daa
push
push
mov
add
(bad)
(bad)
inc
ds
cs
ss
es
cmp
sub
xor
and
jl
pop
sbb
sub
or
xor
adc
and
(bad)
(bad)
inc
cmp
push
jo
xor
push
nop
adc
pusha
mov
add
imul
push
add
jle
out
add
or
or
push
xchg
xchg
add
dec
push
addr16
add
add
adc
sbb
xor
or
(bad)
fwait
jbe
or
push
add
or
or
mov
cmp
or
fiadd
add
or
or
add
adc
call
and
rol
adc
pop
les
or
ins
fistp
ret
jmp
nop
add
pavgb
loopne
loopne
loopne
loopne
loopne
loopne
mov
sti
loopne
loopne
and
or
add
or
inc
or
add
pusha
pop
pusha
or
pusha
or
pusha
add
pusha
add
pusha
push
pusha
or
add
cmp
pusha
add
nop
add
add
cld
lds
inc
sbb
mov
jl
add
or
pop
mov
sbb
sub
adc
dec
sbb
mov
jne
dec
push
xor
add
cmps
or
and
or
add
inc
adc
push
sub
adc
xor
add
add
add
adc
(bad)
mov
loop
add
and
dec
push
push
push
or
mov
out
mov
mov
repnz
and
jbe
or
dec
out
xor
bound
pop
sub
add
cmp
ss
mov
cdq
mov
and
adc
mov
jmp
sbb
or
adc
add
sbb
inc
adc
sbb
jo
(bad)
inc
sbb
or
sbb
add
adc
push
adc
mov
(bad)
inc
sbb
or
sbb
or
adc
add
sbb
pop
pop
inc
int
sub
adc
adc
adc
(bad)
jmp
or
push
mov
or
add
or
scas
and
and
and
and
and
and
and
and
and
and
dec
or
rol
or
add
or
inc
ror
push
ror
add
or
add
or
mov
inc
pop
inc
or
or
les
leave
or
pushf
add
call
ds
inc
or
xor
inc
push
inc
push
inc
or
cmovg
pop
cmp
adc
sbb
xor
adc
cs
cld
stos
or
or
push
add
aas
inc
push
mov
inc
inc
das
sub
mov
push
sub
push
mov
pop
inc
sbb
sbb
mov
push
icebp
pop
(bad)
push
mov
jbe
aas
or
mov
das
cmps
shl
or
(bad)
push
retf
or
and
adc
cmps
ja
mov
xchg
scas
dec
or
ficomp
(bad)
mov
cmps
dec
or
xchg
into
inc
xor
push
xor
add
sub
xchg
dec
sahf
push
inc
dec
mov
aad
iret
es
or
sub
jge
jnp
xor
mov
je
add
dec
bound
xor
aas
fdiv
lea
dec
push
inc
inc
sbb
push
pusha
in
add
mov
sub
cmps
xchg
jmp
or
lea
dec
fs
data16
push
iret
repz
je
test
or
cmp
pushf
movs
xor
aad
syscall
pop
das
xchg
sar
dec
inc
push
add
xor
sbb
inc
loope
movs
push
add
push
mov
into
inc
adc
pusha
dec
and
jne
xchg
not
pop
jb
outs
sub
adc
xchg
inc
xor
int
test
fcomip
outs
adc
add
cmps
xchg
xchg
dec
ja
mov
push
push
test
dec
addr16
or
cmp
dec
adc
or
je
xchg
loope
xchg
push
ins
dec
and
lahf
xchg
popa
cmp
inc
jb
dec
lods
push
lock
lods
and
ins
iretw
stc
xor
or
hlt
ins
pop
add
push
pusha
adc
and
pop
test
mov
sub
inc
retf
xchg
add
push
aas
xchg
(bad)
sbb
ret
ins
lods
add
push
push
sbb
sbb
mov
mov
pop
pause
dec
mov
or
cmp
into
and
fld
enter
xchg
movs
iret
dec
stc
mov
pop
mov
add
xchg
sbb
into
retf
push
fdivr
xchg
mov
or
movs
aad
in
lds
push
jl
xchg
(bad)
cmp
xchg
cs
jns
and
test
shr
dec
sbb
adc
xlat
addr16
or
mov
xor
xchg
sub
fcmovnbe
jns
cmps
ret
shl
mov
shr
pop
ss
daa
ins
and
mov
iret
nop
push
jb
adc
in
mov
aas
(bad)
xchg
jle
sub
inc
lds
or
inc
pop
jmp
pop
mov
pushf
mov
cwde
mov
and
(bad)
mov
and
inc
mov
xor
dec
jg
pop
cmp
dec
push
add
push
jbe
cmp
dec
add
mov
xchg
mov
movs
ins
dec
mov
push
mov
push
dec
ins
mov
lahf
pop
mov
outs
jecxz
or
jp
dec
pop
dec
sbb
push
ret
cmp
lahf
or
inc
mov
sub
mov
dec
(bad)
cmp
xchg
push
in
xor
inc
xor
xor
hlt
push
ror
inc
call
adc
cs
les
mov
mov
pusha
(bad)
(bad)
lea
fcom
pop
aaa
loope
mov
jle
jae
scas
mov
adc
mov
ficomp
mov
or
enter
fsubr
xor
shl
inc
or
jno
xlat
pop
inc
call
add
leave
ds
repz
addr16
add
repz
enter
loopne
and
add
rol
pushf
xchg
mov
ror
mov
adc
(bad)
(bad)
(bad)
inc
and
or
cli
or
and
inc
ja
sar
iret
push
mov
(bad)
(bad)
push
sub
mov
test
pop
or
(bad)
push
xchg
sbb
jns
cmps
or
shr
call
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cdq
jg
icebp
inc
cdq
mov
(bad)
mov
repnz
push
cld
mov
dec
push
jno
(bad)
pop
movs
jle
xchg
hlt
(bad)
je
(bad)
(bad)
call
jb
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
(bad)
(bad)
call
(bad)
pusha
sub
jns
retf
fstp
push
sbb
pusha
mov
sahf
ins
mov
mov
ja
(bad)
(bad)
call
mov
pusha
pop
pusha
push
repz
push
stos
bound
call
(bad)
(bad)
dec
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
clc
pop
lds
je
ds
into
push
xchg
xchg
pop
iret
and
adc
(bad)
in
xchg
scas
mov
mov
int3
or
popa
xchg
test
and
pusha
lods
jl
xor
out
mov
test
add
fmul
mov
(bad)
(bad)
(bad)
inc
lods
xchg
shl
outs
ins
(bad)
inc
hlt
add
test
fwait
pop
sahf
inc
push
(bad)
call
pushf
or
lock
stos
shl
push
fsubr
cmps
setbe
(bad)
fbld
stos
ins
or
outs
in
jp
push
lock
sbb
(bad)
(bad)
push
scas
cmp
pop
retf
push
inc
sbb
out
mov
test
pop
mov
fdiv
loopne
(bad)
(bad)
push
rol
push
push
bound
aas
ss
(bad)
sbb
xlat
shl
sub
rcl
jmp
call
sbb
neg
call
jecxz
dec
jns
mov
jmp
push
rol
test
inc
ret
pop
arpl
sbb
push
aaa
cld
(bad)
(bad)
jmp
cmp
outs
in
push
cmp
push
cld
ins
sub
xor
mov
(bad)
inc
jecxz
std
dec
xor
pop
sub
data16
sbb
retf
ror
enter
or
(bad)
sar
mov
xor
mov
(bad)
jns
sub
(bad)
and
pop
sti
clc
jmp
xor
(bad)
in
(bad)
(bad)
fist
jne
adc
push
push
das
stos
push
add
pop
xchg
std
dec
jnp
push
sbb
(bad)
(bad)
inc
ds
mov
cs
xchg
fld
fcomip
test
aad
(bad)
jle
(bad)
xor
jae
(bad)
(bad)
(bad)
dec
mov
pop
imul
mov
lock
mov
mov
dec
pop
sar
(bad)
(bad)
call
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
(bad)
fucom
xor
movs
inc
adc
(bad)
call
jmp
into
fcmove
and
add
(bad)
sahf
jle
mov
icebp
sub
fist
jno
lods
jmp
xchg
imul
mov
loopne
(bad)
scas
das
pop
cmp
mov
jne
sti
loop
(bad)
sub
repnz
(bad)
(bad)
(bad)
dec
dec
sbb
(bad)
iret
shr
and
das
ja
push
mov
mov
inc
mov
int3
mov
(bad)
rep
sbb
dec
test
mov
(bad)
(bad)
(bad)
call
std
cmp
lods
shl
pop
push
add
jae
xchg
ja
sbb
and
call
or
inc
push
(bad)
iret
xor
int
mov
sbb
dec
jle
scas
sub
push
and
and
push
fwait
(bad)
jg
push
fs
mov
arpl
cmps
fistp
inc
sar
pop
fldenv
(bad)
(bad)
inc
mov
sub
enter
jae
retf
mov
test
sbb
cmp
adc
(bad)
in
fwait
mov
add
mov
call
cld
(bad)
mov
push
imul
repnz
arpl
cs
jg
call
lds
mov
mov
inc
dec
push
test
jo
dec
inc
sub
(bad)
(bad)
jmp
mov
outs
lods
jge
cmps
dec
mov
mov
(bad)
jno
stos
in
call
(bad)
(bad)
neg
loope
mov
movs
add
sbb
dec
pop
inc
adc
cmp
in
cwde
(bad)
call
cld
push
aas
gs
inc
pop
or
cdq
pop
pushf
shl
out
sub
(bad)
call
lock
fisttp
jo
(bad)
jmp
push
add
imul
out
mov
cmp
jmp
test
mov
aaa
pop
push
stos
sbb
pop
mov
(bad)
mov
in
inc
jge
mov
fidivr
mov
or
add
(bad)
(bad)
call
push
or
mov
mov
pop
jp
and
stc
adc
jl
(bad)
(bad)
(bad)
inc
xchg
add
and
fcmovb
aaa
xor
mov
cmps
(bad)
call
ror
ds
(bad)
(bad)
inc
enter
jne
cdq
int
loop
push
jmp
mov
sbb
mov
mov
call
mov
xor
jl
and
mov
push
scas
mov
fidiv
std
(bad)
call
or
mov
aas
iret
fcomp
jb
push
and
imul
(bad)
xchg
test
(bad)
mov
adc
fimul
je
call
cmp
jp
cli
sbb
(bad)
(bad)
(bad)
dec
arpl
ret
les
sbb
or
adc
fst
mov
mov
sub
(bad)
(bad)
frstor
adc
dec
xor
(bad)
ja
sbb
push
xor
xlat
cmp
adc
movs
and
in
out
repnz
sti
icebp
xchg
sub
mov
dec
push
jo
jecxz
mov
jmp
xchg
out
push
jg
push
cmp
sub
sbb
and
dec
cs
(bad)
(bad)
(bad)
call
pushf
mov
jmp
hlt
sub
div
cmp
cmp
pusha
jns
(bad)
(bad)
inc
sbb
cmps
and
adc
imul
lods
jmp
pop
ret
jmp
jnp
shl
jg
sub
(bad)
inc
fnsave
push
pop
ins
mov
add
into
out
cmp
das
fisttp
sub
and
jne
fucomp
adc
(bad)
(bad)
jmp
popa
jmp
(bad)
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubr
(bad)
inc
bound
pop
stos
pushf
outs
test
mov
push
mov
mov
mov
xor
(bad)
(bad)
call
inc
mov
sub
mov
push
fwait
cdq
mov
not
call
clc
ja
jecxz
pop
xchg
in
adc
mov
(bad)
mov
mov
(bad)
(bad)
inc
sbb
ret
sbb
or
push
in
(bad)
out
jmp
jmp
(bad)
jae
jl
fst
pop
jecxz
fs
jg
dec
mov
loop
stos
stos
mov
(bad)
(bad)
(bad)
call
dec
retf
cli
inc
hlt
inc
(bad)
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
(bad)
(bad)
(bad)
call
cmp
mov
mov
rol
adc
imul
(bad)
(bad)
inc
mov
sbb
add
and
lea
cmc
push
or
hlt
(bad)
(bad)
(bad)
jmp
and
jle
(bad)
icebp
in
pop
(bad)
fstp
and
fidivr
out
retf
cmps
repnz
(bad)
(bad)
inc
into
test
clc
sbb
out
call
stos
cmps
imul
add
add
fmul
or
inc
ret
add
call
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
(bad)
ds
(bad)
push
sub
out
ds
sub
sbb
pop
cmp
(bad)
inc
xchg
sbb
dec
div
imul
hlt
mov
cmp
push
or
push
and
mov
mov
scas
popa
pushf
idiv
inc
(bad)
(bad)
call
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
xor
aaa
std
cmps
jmp
mov
ins
lods
jg
test
les
jmp
lock
(bad)
inc
std
push
out
and
stos
and
sub
fiadd
mov
(bad)
(bad)
call
sub
int3
imul
out
lea
dec
mov
mov
call
hlt
jp
push
into
stos
in
pop
aaa
rcr
sub
xor
test
fldcw
(bad)
(bad)
(bad)
dec
cmp
cli
leave
sbb
xor
es
jecxz
je
outs
cmp
inc
pop
(bad)
out
push
stc
and
dec
cmc
xchg
mov
fsubr
dec
mov
xchg
(bad)
(bad)
(bad)
jmp
dec
xchg
xchg
sar
adc
int3
xor
loope
push
dec
sub
sbb
call
push
pop
jl
sub
jo
daa
add
adc
add
and
(bad)
(bad)
jmp
in
adc
dec
fadd
stc
pop
nop
movs
jns
inc
pop
outs
mov
push
pop
xor
push
(bad)
inc
fwait
aad
sar
js
and
mov
arpl
ret
adc
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
mov
mov
test
or
fisubr
mul
sar
xchg
mov
bound
jge
lock
(bad)
(bad)
(bad)
dec
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outs
outs
cmp
std
(bad)
jg
(bad)
clc
hlt
pusha
fcom
test
fucomp
mov
imul
push
jnp
aaa
sub
ins
cmp
gs
(bad)
dec
mov
rcr
(bad)
or
add
xchg
(bad)
mov
in
punpckhwd
lahf
jnp
pushf
jge
cmp
dec
or
xchg
mov
mov
adc
mov
(bad)
cmp
(bad)
call
cmp
jns
adc
xchg
loop
sub
inc
push
int3
dec
jne
sbb
cs
(bad)
(bad)
(bad)
js
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
retf
mov
loope
aaa
std
jmp
pop
push
inc
inc
xchg
adc
outs
in
or
sub
fs
test
fimul
(bad)
mov
fs
cmp
jnp
pusha
dec
dec
(bad)
(bad)
(bad)
inc
std
shl
scas
inc
ja
cld
xlat
xor
xor
lock
mov
pop
add
(bad)
(bad)
(bad)
mov
scas
call
push
popa
cs
mov
mov
out
je
ret
xchg
(bad)
(bad)
inc
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
(bad)
(bad)
(bad)
dec
push
mov
xchg
push
aad
dec
fiadd
leave
loope
or
dec
bound
jne
(bad)
(bad)
push
fsubr
xor
les
pop
pop
call
and
(bad)
outs
sbb
sbb
movs
movs
or
xacquire
sbb
fdivr
push
cmp
into
loop
push
jg
dec
(bad)
(bad)
(bad)
inc
pop
adc
add
les
out
daa
mov
call
pusha
ret
mov
test
mov
jmp
jp
lock
cmc
shr
jmp
out
arpl
cmp
xchg
ffree
push
xor
ret
hlt
mov
mov
(bad)
(bad)
jmp
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
sar
(bad)
call
cld
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
(bad)
inc
adc
out
aad
les
push
into
mov
(bad)
fnsave
call
and
cli
push
cmp
into
cmp
iret
cmc
cli
shl
(bad)
(bad)
(bad)
push
stos
sbb
mov
inc
aaa
mov
sar
mov
aad
jae
mov
call
(bad)
imul
mov
cmp
mov
outs
ss
stos
dec
push
(bad)
(bad)
(bad)
(bad)
jns
xchg
mov
enter
out
clc
rcpps
lea
or
(bad)
dec
ror
cmp
(bad)
mov
mov
lods
add
pop
xchg
aad
mov
loop
out
arpl
out
xchg
(bad)
(bad)
call
imul
and
stos
add
movs
movs
shl
pushf
mov
push
fwait
push
adc
fs
push
std
mov
loope
cmps
xchg
out
shr
das
(bad)
(bad)
(bad)
(bad)
push
push
imul
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
call
xor
fnstenv
sub
cmp
add
ds
shr
sub
lahf
pop
fwait
(bad)
(bad)
mov
adc
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
mov
(bad)
shr
int3
push
cmp
sub
clc
sub
adc
add
pusha
jne
inc
push
xchg
push
(bad)
push
mov
jecxz
ins
add
mov
lock
nop
cmp
loopne
(bad)
call
daa
xchg
sub
cmp
cmc
and
sti
stos
cmc
sbb
fdivr
inc
mov
cmc
cld
mov
xor
add
ja
sub
(bad)
push
inc
addr16
int3
stos
pop
xchg
lods
int3
push
pop
call
bound
aaa
xchg
stc
and
(bad)
(bad)
jp
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimul
out
adc
cld
(bad)
(bad)
jmp
(bad)
sub
pop
or
inc
call
fisubr
enter
(bad)
inc
lock
sbb
ror
mov
push
fld
pop
cmp
add
xor
mov
push
cli
scas
adc
sub
jmp
inc
outs
cmp
arpl
fwait
rcr
(bad)
scas
jo
dec
test
(bad)
(bad)
call
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shl
(bad)
(bad)
(bad)
mov
mov
sbb
lahf
mov
into
cmp
outs
sub
add
(bad)
mov
daa
mov
adc
out
jns
mov
cmp
push
(bad)
(bad)
(bad)
push
mov
sbb
not
(bad)
mov
(bad)
stos
call
sbb
(bad)
(bad)
dec
(bad)
sar
fimul
aad
ret
cmp
addr16
(bad)
jl
stc
lea
mov
mov
sahf
not
cmc
inc
cmp
fldenv
sub
xchg
jg
dec
jno
xchg
(bad)
adc
cli
jmp
mov
pop
fs
ret
mov
mov
push
jecxz
push
rcl
inc
movs
add
push
lock
std
(bad)
(bad)
(bad)
fistp
dec
fs
pop
lahf
fist
mov
mov
or
xor
dec
and
(bad)
jbe
lea
cdq
fwait
ss
(bad)
(bad)
jmp
sbb
fimul
fcomp
push
iret
jns
into
outs
jle
int
mov
push
add
ror
test
repz
and
cmps
xor
int3
push
bound
jne
xchg
ss
(bad)
(bad)
(bad)
jmp
jae
mov
dec
mov
dec
adc
(bad)
jno
mov
xor
shl
cli
(bad)
(bad)
inc
jnp
ret
std
push
stos
leave
add
test
loop
and
xor
and
add
push
das
push
retf
mov
pushf
jbe
sar
push
jmp
lock
inc
and
jmp
cmp
lds
and
retf
test
(bad)
call
jp
(bad)
(bad)
(bad)
jle
stc
dec
pop
ret
mov
ret
add
loope
(bad)
imul
pop
cmps
sub
lock
call
popa
dec
mov
loop
into
jecxz
(bad)
push
out
ret
cmp
loop
and
dec
cmp
inc
popa
sbb
test
inc
xor
xor
popa
inc
arpl
test
push
icebp
pop
mov
push
aaa
xchg
or
push
and
out
push
into
mov
inc
lea
mov
add
and
stos
fadd
mov
test
adc
aas
scas
dec
sahf
mov
lds
call
jmp
aaa
nop
xchg
and
xchg
or
adc
sbb
xchg
inc
dec
outs
imul
cmp
sub
push
adc
inc
jae
cmp
dec
push
push
sbb
pop
add
inc
sbb
inc
and
movs
mov
ins
pop
inc
sub
mov
pop
aaa
add
outs
xor
jo
fsub
lods
sbb
inc
sub
and
aad
adc
mov
mov
and
js
daa
aaa
push
aaa
mov
mov
fsubr
pusha
shl
or
rol
add
adc
push
fs
lods
cmc
mov
pusha
shl
imul
ins
mov
jl
mov
and
out
inc
cmps
gs
pextrw
or
mov
pop
(bad)
retf
dec
mov
inc
sbb
and
cmp
inc
movs
outs
mov
call
or
mov
sbb
pop
lahf
addr16
cmps
sar
mov
add
out
je
jmp
xor
push
sbb
and
inc
xlat
push
ja
add
arpl
test
xchg
inc
or
pop
sub
aas
mov
ds
mov
in
and
daa
pop
stos
add
cmp
push
outs
inc
inc
cli
push
imul
dec
pop
imul
out
not
out
xchg
xchg
mov
(bad)
mov
ss
ret
mov
pusha
pop
mov
and
add
out
inc
aaa
aad
cmp
push
push
adc
(bad)
aas
psubb
cmp
push
add
ficomp
imul
fnstenv
cmp
clc
bound
fs
mov
scas
xchg
jo
and
imul
add
push
enter
push
push
or
enter
and
or
and
rcr
pushf
and
movs
pop
ss
clc
sahf
ins
mov
mov
pop
(bad)
inc
ins
inc
mov
stos
pusha
shr
cmps
mov
inc
sbb
addr16
daa
add
outs
xor
xchg
int
or
inc
les
cmps
mov
sbb
daa
mov
dec
jb
push
add
xor
sub
cmp
jno
aaa
mov
and
test
inc
push
xor
push
add
mov
mov
aad
inc
ss
pop
pop
inc
or
inc
inc
enter
ror
sub
dec
mov
je
and
call
fs
and
sub
cld
add
inc
and
ror
stos
das
test
popa
adc
and
push
das
ja
or
cdq
mov
ja
xor
fmul
fs
pop
xor
lea
aaa
inc
xor
add
in
adc
lods
cmc
xchg
inc
fadd
push
adc
jb
jle
pop
mov
nop
or
mov
inc
push
cld
xchg
sbb
and
push
enter
clc
lods
xor
xchg
shl
cdq
jge
pushf
popa
xor
aas
pop
aaa
pop
adc
addr16
jle
cmp
sbb
push
bound
stos
les
rcl
sub
test
or
add
imul
pusha
cmps
ja
xor
iret
aas
mov
aaa
dec
in
es
aas
mov
push
daa
repnz
sbb
push
aaa
outs
int3
dec
push
push
mov
xchg
mov
dec
fst
(bad)
mov
mov
or
xchg
sahf
mov
mov
test
clc
push
sub
dec
xchg
xchg
and
ficom
js
push
jbe
push
std
sbb
cmp
push
inc
push
stc
movs
jbe
adc
xchg
leave
rcl
cmc
jbe
pusha
rol
in
and
mov
xor
ins
xchg
add
stos
and
sahf
outs
jg
mov
enter
pushf
dec
sahf
mov
jle
push
dec
call
mov
mov
adc
push
js
ds
mov
nop
fwait
mov
dec
out
inc
xor
sub
aas
aaa
(bad)
mov
sar
inc
inc
data16
loope
out
mov
pusha
stos
loope
ja
inc
outs
pop
fcmovbe
mov
adc
adc
add
add
jae
mov
xchg
out
push
inc
sahf
out
mov
jae
sub
inc
inc
mov
jbe
into
push
(bad)
push
js
add
push
inc
mov
adc
add
push
enter
dec
fld
or
scas
xchg
inc
mov
pop
xor
sbb
addr16
out
pop
xor
xchg
mov
pop
jecxz
inc
pop
(bad)
cmps
add
stos
scas
loopne
xchg
push
dec
(bad)
sub
mov
test
or
inc
outs
mov
add
adc
sub
push
push
add
mov
fsub
(bad)
and
(bad)
ja
inc
adc
sub
pop
ja
push
aas
call
dec
sbb
pop
outs
and
adc
cmp
bound
cs
adc
rcl
dec
xchg
enter
and
add
push
or
jo
ror
or
imul
mov
gs
inc
mov
mov
sbb
fisub
in
inc
fwait
jnp
push
mov
das
sub
lods
clc
add
mov
ffreep
(bad)
out
pop
jecxz
jmp
mov
fs
arpl
popa
push
or
rol
shl
sbb
pop
jae
add
popa
sbb
or
mov
mov
and
data16
pop
jno
mov
rol
loope
fsub
jo
(bad)
gs
jno
lock
jnp
sub
add
(bad)
scas
push
lea
jae
and
mov
push
push
out
sbb
je
mov
sub
adc
enter
daa
pop
cmp
nop
out
add
in
test
mov
pop
das
je
adc
xor
out
ins
xchg
mov
xadd
mov
add
nop
and
(bad)
sbb
push
cdq
daa
and
or
daa
jne
push
mov
sub
add
pop
cdq
out
sub
pop
mov
jo
arpl
inc
pop
stos
add
push
inc
xor
loope
iret
lods
xchg
mov
xchg
and
outs
jno
les
in
call
pop
xor
jae
adc
cmp
inc
outs
dec
cmp
gs
imul
pop
out
push
stc
fidiv
shl
outs
adc
or
popf
cmp
or
mov
jg
pop
rep
mov
jp
xor
xor
mov
seta
xchg
xor
pop
xlat
sbb
movs
daa
xchg
sbb
arpl
lock
arpl
out
cmp
sub
mov
xor
jne
addr16
jns
push
mov
daa
pushf
add
cmp
push
lds
pop
cs
xchg
adc
bound
xchg
and
xchg
(bad)
gs
(bad)
lahf
xor
mov
lahf
xchg
inc
dec
or
mov
outs
xchg
jmp
dec
stos
cmp
mov
outs
pop
cmp
and
sub
sub
sub
daa
icebp
mov
mov
xchg
jo
jb
ins
scas
and
xchg
rcl
and
xor
daa
scas
inc
or
push
mov
inc
cli
pop
push
pop
adc
inc
das
ror
jmp
ins
ins
mov
push
pop
inc
dec
xlat
sbb
or
xor
mov
test
in
scas
inc
mov
imul
fs
inc
add
ficom
sub
push
mov
aaa
test
pop
mov
mov
daa
call
pop
test
sub
add
out
inc
sub
adc
(bad)
cmps
xlat
ret
cmp
mov
nop
into
ja
push
mov
arpl
mov
call
xor
mov
ficomp
jno
mov
int3
cmovl
mov
div
pop
dec
inc
mov
das
nop
dec
in
dec
pop
call
or
mov
lds
adc
pop
mov
push
pop
in
or
sub
addr16
inc
fadd
push
dec
mov
or
ret
ss
(bad)
sub
and
cmp
ror
push
idiv
daa
mov
popf
push
in
mov
movs
test
inc
mov
das
movs
jecxz
jae
mov
mov
sub
rcl
int3
and
and
lods
aaa
sub
sbb
adc
add
or
push
pusha
hlt
arpl
mov
xor
adc
xchg
jbe
and
icebp
pop
bound
adc
or
jnp
ja
add
jne
sbb
ins
fst
or
mov
push
mov
test
ret
xchg
shr
inc
sub
sbb
sbb
mov
hlt
sbb
aas
dec
or
and
pop
jecxz
cmp
(bad)
xchg
data16
xor
clc
adc
aas
adc
add
nop
test
aaa
das
add
mov
push
rcl
ja
in
arpl
inc
add
or
cwde
fs
outs
sub
mov
gs
or
mov
jmp
ins
call
sbb
xlat
je
mov
push
xor
pop
mov
and
push
jb
mov
inc
and
fist
inc
xchg
sub
test
adc
sub
imul
daa
dec
pop
arpl
mov
sbb
out
adc
sub
out
push
test
add
jo
movs
in
and
add
adc
icebp
mov
cmp
inc
and
pop
imul
and
sahf
sbb
inc
jg
iret
mov
xchg
mov
push
fidivr
sahf
mov
mov
aad
add
dec
movs
ins
int
aas
rcr
rcl
inc
sub
mov
shl
mov
les
bts
sbb
pop
jne
ins
inc
jbe
lock
mul
bswap
lock
gs
cs
stos
sahf
jno
dec
aas
ret
movs
jmp
cmp
in
jb
sbb
jae
mov
test
test
xchg
popa
add
nop
jo
jo
sub
pop
icebp
aaa
or
xchg
inc
mov
sbb
test
pop
or
dec
pop
xor
jne
cmp
js
pop
pusha
pop
and
dec
adc
loope
dec
pop
dec
or
push
sbb
daa
pop
mov
and
ror
daa
inc
jecxz
andps
sub
inc
call
push
pop
rcr
sar
mov
sub
ds
jp
repz
not
arpl
xchg
je
cmp
fild
sahf
gs
sahf
mov
jbe
xlat
sar
add
push
in
pop
cmp
outs
out
xchg
mov
test
xor
cmp
xor
addr16
mov
adc
cmp
imul
bound
int3
ja
pop
retf
popa
adc
push
inc
or
inc
fstp
cmps
mov
jbe
(bad)
pop
jbe
test
popa
fldcw
adc
mov
pop
mov
mov
das
mov
daa
xchg
jecxz
push
dec
sbb
aas
test
mov
or
lahf
and
loope
dec
cmp
push
bound
vmread
push
das
fcomp
mov
rcr
push
mov
movs
pushf
xchg
movs
and
push
cmp
xor
sub
dec
sub
mov
mov
jg
and
fild
xchg
adc
adc
aas
pop
mov
inc
stos
ds
cs
add
daa
(bad)
pop
mov
adc
sbb
push
retf
xlat
pusha
cmp
jo
jmp
pop
popf
sub
inc
sub
clc
dec
movs
int
pop
adc
mov
dec
sub
mov
popf
push
sub
push
dec
fsub
das
push
pop
imul
pusha
add
fcmovu
xchg
fwait
cmp
sbb
push
xchg
sub
outs
test
sub
mov
push
ins
xchg
sbb
jns
mov
xor
cmp
arpl
cmp
inc
ds
push
and
or
sub
test
mov
inc
or
add
daa
fs
cdq
xor
outs
mov
outs
loop
loopne
stos
jbe
dec
addr16
jnp
stos
sub
mov
mov
mov
add
xor
addr16
leave
xor
dec
pop
scas
iret
cmp
call
xlat
pop
add
sub
lds
lahf
inc
loopne
sbb
or
sbb
repz
adc
sahf
out
sahf
xor
nop
mov
mov
fnstcw
jno
add
jae
(bad)
bound
mov
shr
inc
aas
add
cmpps
add
add
(bad)
(bad)
(bad)
jg
add
add
push
adc
pop
and
xor
inc
mov
adc
lods
call
xor
inc
ret
xor
or
stos
stos
inc
arpl
add
mov
lods
lahf
inc
cmp
xchg
add
add
loope
imul
iret
or
add
add
adc
scas
adc
or
ins
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
jne
jno
xor
ret
push
outs
mov
int3
or
adc
aaa
add
fistp
icebp
and
add
pushf
bnd
add
cs
aas
add
pop
or
add
push
sbb
jg
pop
or
loopne
lahf
aas
daa
ds
mov
jle
pop
pop
push
dec
inc
cld
js
sbb
in
add
add
(bad)
(bad)
inc
add
add
add
add
inc
pop
inc
pop
pusha
add
add
add
add
or
mov
add
add
add
outs
adc
add
add
add
add
xor
xor
push
daa
(bad)
fisttp
pop
or
pop
pop
add
sub
sub
adc
and
sbb
pop
icebp
inc
add
add
sbb
sbb
adc
adc
or
or
or
or
or
(bad)
aas
sti
sub
sub
sub
or
push
or
push
or
and
and
jg
std
dec
pop
or
dec
or
xor
xor
xor
xchg
add
ss
(bad)
(bad)
push
or
or
addr16
or
or
or
or
or
or
or
or
or
or
or
push
(bad)
fisttp
cwde
or
push
fwait
or
or
or
or
or
or
or
pop
(bad)
call
sbb
or
or
pop
add
push
add
or
pop
mov
mov
or
or
sub
or
ins
(bad)
(bad)
(bad)
dec
aaa
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
std
(bad)
(bad)
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
(bad)
(bad)
mov
daa
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
(bad)
push
or
or
jp
ins
or
dec
or
jae
je
jne
jbe
ja
push
movs
or
dec
push
or
fs
inc
mov
int3
test
inc
test
add
pop
inc
inc
inc
call
arpl
pop
call
out
add
inc
push
pop
in
dec
dec
adc
add
stc
fidiv
pop
inc
sbb
add
sbb
sbb
aaa
sub
add
loopne
cmp
add
sar
add
inc
push
pop
mov
jg
mov
arpl
dec
dec
sub
das
dec
xor
add
pop
daa
pop
pop
ret
adc
xor
outs
fisttp
mov
iret
or
push
pop
(bad)
inc
or
push
push
mov
pop
pop
aas
push
popf
pop
in
inc
or
or
dec
or
push
cwde
pushf
shl
test
cmps
add
cmp
pop
lock
sub
(bad)
rcl
ins
pop
add
add
sub
out
aas
jg
stos
(bad)
jae
jg
sub
nop
mov
mov
and
pop
(bad)
(bad)
jg
mov
clc
enter
js
fdivr
mov
ins
(bad)
in
hlt
lods
mov
jmp
in
int3
cmp
add
test
mov
jl
sub
(bad)
ja
pop
pop
mov
add
add
xor
iret
push
add
arpl
mov
lods
push
iret
das
add
test
aad
lods
ja
inc
jmp
or
inc
aas
pop
aas
mov
xor
cmp
add
lock
stos
add
hlt
push
mov
(bad)
and
xchg
cmp
push
call
(bad)
mov
xchg
adc
fsubr
add
pop
imul
mov
imul
or
sub
fdiv
jbe
je
cmp
repz
jno
outs
iret
repz
outs
ins
ins
imul
into
repz
addr16
sbb
cmp
pop
repnz
dec
pop
ins
iret
repz
and
repz
xor
push
dec
ins
or
repz
mov
outs
shl
pop
pop
inc
sbb
add
aas
lods
xchg
push
mov
fs
dec
aaa
add
cmp
mov
mov
xchg
push
mov
scas
ja
stos
mov
and
cwde
dec
dec
dec
dec
or
mov
mov
mov
pop
inc
ror
test
fild
push
rcr
das
push
push
repnz
dec
shr
push
xor
out
mov
push
mov
test
xor
dec
pop
xchg
add
ja
int3
les
pop
shl
mov
jl
ins
and
add
imul
inc
cmp
js
fimul
je
aaa
dec
pop
(bad)
pop
int
test
and
rcr
(bad)
out
dec
xchg
test
imul
jno
sub
add
dec
mov
cmp
add
and
sub
test
xor
xchg
jbe
xchg
rcl
test
add
mov
cmp
fisttp
retf
jne
pop
call
xor
outs
jne
mov
dec
aam
pop
jmp
pop
imul
test
xchg
push
fld
add
aad
pop
xchg
scas
cmp
dec
dec
push
dec
aaa
mov
fadd
dec
inc
(bad)
push
dec
jae
enter
push
mov
stos
xlat
jg
lods
inc
es
add
into
dec
dec
add
sbb
or
add
rol
push
push
jmp
fs
addr16
pusha
dec
mov
imul
mov
lea
sub
xor
aaa
loopne
test
xchg
mov
(bad)
xchg
cs
pushf
push
add
jns
out
add
or
pop
pop
jno
and
popf
and
fidiv
mov
pop
jo
push
jl
mov
push
mov
or
push
pop
push
mov
xchg
arpl
pop
mov
xchg
mov
pop
push
pop
test
arpl
adc
pushf
or
pop
(bad)
push
add
pop
add
inc
int
adc
adc
lock
rol
ins
ins
arpl
sbb
ss
fadd
cmp
lea
test
mov
push
les
fisub
inc
stos
and
aas
iret
fidiv
jle
dec
outs
iret
imul
sbb
xchg
mov
inc
sbb
xor
lea
mov
sub
imul
dec
add
(bad)
adc
(bad)
mov
xchg
ins
movs
xor
ss
or
mov
and
add
push
loop
lock
js
mov
inc
cld
sbb
inc
sub
dec
mov
push
sub
pop
aaa
dec
mov
push
aas
ss
mov
ss
inc
ret
sub
js
fiadd
push
jecxz
xor
push
inc
and
pop
push
sbb
popf
cmp
xor
(bad)
jp
inc
push
pop
jae
push
inc
ins
(bad)
xor
fisubr
inc
inc
pop
iret
lods
imul
xor
nop
lock
inc
xchg
sbb
dec
clc
test
sar
mov
sub
movs
lea
in
rcr
pop
or
add
lods
rol
stos
lods
lods
mov
pop
aas
aad
pop
jnp
and
(bad)
(bad)
jae
push
pusha
xchg
and
xchg
out
outs
imul
mov
push
cwde
fcom
adc
bound
mov
add
push
xor
outs
mov
inc
neg
imul
cmp
push
(bad)
daa
add
push
in
or
dec
ins
imul
xor
add
push
clc
test
mul
adc
mov
(bad)
and
or
xor
scas
or
xor
lahf
mov
mov
fsubr
dec
push
xchg
pusha
xor
mov
aad
xor
lea
inc
call
aaa
jg
cmp
dec
pop
mov
and
fisub
pop
sub
and
xor
dec
mov
fldcw
(bad)
dec
cmps
mov
or
xchg
cmp
mov
(bad)
sbb
dec
out
rcr
sbb
jae
sbb
dec
add
fist
push
setle
jns
add
add
xchg
out
pop
or
or
mov
or
xchg
ja
scas
adc
adc
adc
and
cmp
inc
push
addr16
in
jbe
das
push
xorps
jns
outs
das
ins
push
and
fild
pop
and
iret
add
add
cmp
mov
fsubr
cmp
sbb
ror
data16
mov
push
iret
repz
add
mov
hlt
lock
loopne
int3
sar
test
pop
mov
sahf
cwde
xchg
nop
mov
jns
jl
push
in
push
push
dec
inc
xor
repz
sub
adc
or
and
imul
add
mov
push
add
add
punpcklbw
xchg
rcl
jne
aaa
rcl
fadd
pop
add
push
inc
sbb
pop
ss
sbb
cbw
mov
popa
mov
into
aas
dec
add
push
rcl
push
(bad)
pop
pop
sbb
shufps
fstp
mov
push
cs
fstp
fbld
(bad)
jmp
fdiv
das
aas
push
or
arpl
dec
ret
sar
push
or
ror
adc
adc
rcl
jns
out
adc
sahf
out
sbb
fdivr
sbb
push
xchg
pop
xor
clc
mov
iret
sar
js
jns
or
cmp
jp
push
cld
dec
pop
pushf
aaa
mov
push
and
inc
lods
or
jle
push
and
fcomp
mov
ja
add
fs
adc
nop
sbb
add
xor
or
dec
and
call
xchg
add
and
mov
xor
in
mov
pop
pusha
cmp
cmps
fbld
sbb
mov
ins
repnz
(bad)
mov
mov
sbb
in
call
dec
and
adc
push
ficomp
mov
pop
fisubr
xor
fcomp
loopne
jb
jle
pop
mov
imul
push
sbb
push
pop
add
loope
dec
scas
mov
push
out
xor
push
(bad)
enter
xchg
cld
es
push
das
sahf
dec
mov
ror
sbb
xchg
pushf
xchg
lea
mov
and
shl
out
xchg
cmp
pop
js
push
(bad)
xor
out
(bad)
push
and
hlt
(bad)
loopne
cmp
repz
repz
push
cmp
sbb
cld
sahf
out
call
data16
out
pushf
jl
inc
lds
repz
repnz
sbb
hlt
(bad)
in
jnp
mov
enter
cwde
je
cmp
das
sub
bound
pop
add
add
scas
adc
dec
mov
iret
xor
icebp
dec
mov
add
mov
add
daa
pop
fmulp
jae
push
pop
cmp
push
mov
movs
cwde
js
xor
xor
ins
add
out
pop
ja
sahf
out
xchg
mov
repnz
xchg
lock
mov
dec
aas
pop
add
scas
out
sub
pop
imul
pop
jg
push
ins
mov
daa
jg
pop
xchg
mov
pop
add
jge
in
push
in
in
pop
mov
aas
pop
jno
(bad)
movs
add
mov
pop
lds
mov
sahf
push
and
push
mov
sahf
out
(bad)
fsub
dec
repz
add
cmp
cmp
repz
mov
iret
repz
(bad)
adc
out
sahf
out
push
push
jbe
sahf
out
sahf
mov
cli
cmp
sar
cs
pop
jp
cmp
repz
sahf
mov
iret
jmp
out
sahf
inc
bound
mov
jns
loope
push
push
xor
xor
jg
(bad)
fsub
xor
test
mov
inc
push
adc
ss
or
sbb
xchg
std
adc
add
dec
adc
sbb
lods
jge
sar
shr
clc
(bad)
jmp
dec
mov
cmp
clc
push
push
mov
(bad)
cmp
in
pop
dec
cmp
iret
mov
jo
popf
idiv
nop
jnp
xlat
mov
push
add
adc
cmp
jns
and
push
or
mov
dec
adc
mov
enter
cs
sbb
idiv
push
pop
fsub
push
jnp
out
dec
and
sahf
jl
sub
cmp
push
mov
adc
in
pop
add
pop
sahf
lods
push
outs
pop
dec
cld
pop
inc
push
and
jmp
sar
mov
cmps
jg
push
mov
in
enter
inc
enter
pushf
or
ret
mov
adc
cs
adc
pop
(bad)
jmp
sbb
into
sbb
ror
and
sahf
mov
sub
(bad)
(bad)
(bad)
inc
pop
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
(bad)
inc
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
(bad)
(bad)
(bad)
jmp
mov
or
add
cmps
xchg
cmp
xor
dec
cmp
loopne
cmps
in
cmp
sahf
xchg
pop
sbb
mov
and
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
and
add
les
dec
add
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shr
mov
icebp
aas
ror
and
pusha
cld
mov
imul
(bad)
(bad)
jg
into
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
(bad)
(bad)
(bad)
dec
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
(bad)
(bad)
dec
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
ja
xchg
mov
inc
inc
xor
movs
daa
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
call
jp
and
cmp
mov
cmp
std
xlat
cmp
(bad)
(bad)
(bad)
fild
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
(bad)
(bad)
(bad)
call
mov
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
fisttp
adc
into
imul
faddp
jge
in
(bad)
(bad)
(bad)
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
pop
fisub
sar
lahf
into
ror
add
cmps
fmul
xchg
pop
add
pop
jne
fild
test
dec
add
inc
lahf
cmp
repz
push
xchg
push
pushf
cmps
mov
idiv
repz
into
fsub
in
data16
out
xchg
not
push
or
sub
mov
test
or
or
push
add
mov
add
es
push
add
ins
xchg
test
iret
repz
jo
loopne
cmp
out
adc
sbb
shl
and
sbb
out
test
pop
cmp
pop
repz
dec
push
(bad)
rcr
xor
iret
popw
add
add
loopne
lock
add
fild
outs
dec
clc
sar
ret
xchg
mov
push
imul
stc
cmps
nop
xchg
add
cmp
jnp
int
test
push
leave
dec
test
f2xm1
ins
out
and
sub
fst
nop
jl
push
clc
jg
ja
out
js
xchg
push
add
iret
pop
add
add
in
jae
lldt
pop
mov
sub
add
push
or
addr16
in
add
add
mov
or
adc
and
fist
(bad)
cld
push
clc
jg
aas
dec
mov
pop
pop
cld
xor
int
add
add
pavgb
sbb
add
bound
addr16
push
pop
sub
push
push
sbb
sbb
add
aaa
inc
push
jae
sbb
add
shl
pop
push
es
push
push
arpl
pop
daa
push
push
push
push
aaa
inc
push
addr16
push
jnp
dec
pop
push
adc
push
add
repz
cmp
add
bound
mov
out
sahf
jnp
add
add
pop
daa
ss
inc
or
addr16
sbb
cld
pop
addr16
cld
pushf
fnsave
out
inc
pop
pop
daa
ss
sbb
adc
inc
add
jnp
adc
and
daa
adc
add
aas
push
ja
inc
push
loopne
fs
shl
add
push
(bad)
in
mul
loopne
clc
addr16
aaa
aaa
inc
enter
adc
push
stos
neg
adc
push
inc
test
out
sahf
add
add
add
push
mov
aas
cld
lahf
aaa
out
mov
repz
add
(bad)
cmp
repz
clc
lock
adc
push
fwait
add
cmps
fnstenv
imul
and
sahf
idiv
and
cmp
loope
addr16
ins
push
mov
repz
pop
sysret
mov
into
or
in
inc
pop
and
jecxz
mov
and
ror
pop
sbb
addr16
(bad)
xor
loopne
lock
fsubrp
(bad)
sbb
push
das
iret
outs
inc
enter
or
jg
cmp
test
cmps
push
adc
inc
data16
mov
sbb
xor
inc
dec
inc
ds
test
dec
into
xor
pushf
jl
push
add
pop
mov
cmp
aas
jg
or
lahf
xchg
(bad)
lahf
xchg
pusha
cwde
jmp
fstp
xor
push
or
jnp
or
adc
adc
adc
or
mov
aaa
inc
push
addr16
ins
cmps
push
iret
repz
(bad)
icebp
(bad)
(bad)
(bad)
sub
fild
aas
clc
push
jo
lock
pavgb
adc
neg
inc
push
addr16
cmp
addr16
jnp
stos
adc
inc
push
and
mov
mov
adc
dec
addr16
xchg
inc
enter
int
xchg
into
inc
add
inc
add
pushf
jae
inc
and
pop
pop
daa
aaa
inc
dec
add
cmp
addr16
fldcw
sahf
into
aas
cld
aas
cld
ds
cmp
cmp
cmp
pop
pop
daa
aaa
scas
sbb
adc
dec
add
xchg
inc
aad
inc
out
div
retf
jo
pop
pop
push
xchg
push
daa
add
push
movs
add
adc
jbe
test
add
sub
inc
ds
pop
pop
pusha
mov
inc
add
pop
push
mov
scas
dec
adc
dec
ret
push
out
movs
mov
and
mov
add
fnstsw
add
push
emms
inc
jle
enter
ud0
rcr
in
pop
pop
(bad)
outs
and
xchg
cmps
and
fadd
jbe
and
pop
(bad)
retf
mov
mov
ja
lock
cmp
xchg
vmread
lock
mov
imul
daa
mov
cwde
pop
in
out
add
lock
adc
xchg
pop
add
daa
push
sub
add
add
add
inc
dec
nop
test
xor
xchg
add
sbb
stos
mov
jae
mov
and
gs
inc
xchg
mov
stos
mov
pop
call
or
add
out
mov
push
jb
push
je
ins
sbb
sar
cmp
add
lahf
pop
add
pop
jnp
push
jae
rol
daa
push
pop
pop
adc
cmps
or
push
out
or
cmps
jg
ss
xchg
fild
add
pop
jnp
outs
xor
mov
stc
aaa
add
cmp
inc
fimul
pop
push
add
outs
add
out
xor
adc
(bad)
(bad)
imul
mov
cmp
shl
nop
add
cs
dec
push
fild
iret
jae
lds
add
sub
jne
and
dec
popa
cmp
or
test
imul
aaa
jmp
imul
pop
repnz
add
push
shl
das
inc
xchg
or
out
arpl
ins
jg
mov
dec
add
repnz
jb
add
push
add
mov
mov
test
add
ins
bnd
aaa
test
mov
ret
pop
mov
add
cmp
mov
xor
clc
cmp
bound
addr16
icebp
jo
inc
pop
pop
add
ret
inc
repz
mov
adc
(bad)
out
retf
xlat
aad
mov
jg
add
jbe
sbb
fidiv
xor
add
add
lds
mov
or
out
sbb
add
shl
popa
push
retf
add
jne
xor
int3
(bad)
daa
sbb
xor
mov
push
cld
add
arpl
jecxz
add
ins
pop
pop
jb
addr16
mov
xor
adc
xchg
jp
iret
dec
inc
repnz
popa
pop
adc
outs
mov
push
repnz
aaa
push
push
ds
cld
dec
test
gs
jo
inc
mov
loopne
pop
outs
sbb
cmp
xor
push
push
ss
outs
push
push
and
jecxz
mov
mov
pop
ss
ja
or
clc
aaa
or
jb
push
inc
jb
push
aas
aas
or
loop
cmp
fneni(8087
cmps
pop
push
outs
popf
mov
ja
div
mov
jb
dec
lds
cmp
cmps
popa
jns
pop
adc
repnz
push
pop
lods
add
cs
add
jo
mov
push
mov
lock
out
ret
lea
push
outs
add
xor
push
xor
push
sbb
idiv
sbb
sbb
pop
xchg
pop
add
or
add
mov
je
test
push
iret
sbb
push
test
das
or
mov
add
out
pusha
js
ja
push
mov
inc
or
ja
jp
push
fild
jnp
(bad)
mov
loop
add
fs
sbb
sub
mov
ds
cdq
ss
out
dec
sub
push
push
jns
loope
adc
enter
enter
adc
ret
jmp
sub
outs
and
push
bound
pop
data16
jns
gs
jmp
push
pop
popa
mov
out
jno
imul
loopne
mov
dec
add
push
push
cmp
push
or
daa
call
add
jo
pop
push
out
jns
xchg
jbe
inc
(bad)
idiv
mov
imul
rol
push
sub
das
in
loop
pop
(bad)
pop
lahf
movlps
pusha
rcr
jnp
outs
push
ins
xor
or
sbb
sahf
outs
sahf
(bad)
stos
rol
ja
out
rcr
jnp
add
bound
outs
daa
cmps
cmp
sub
dec
mov
mov
push
pop
popa
fist
sbb
sbb
pop
sahf
and
mov
jae
sbb
mov
xor
dec
ss
ins
shr
pop
push
lock
push
imul
sahf
outs
jne
pop
or
out
arpl
mov
out
add
dec
jnp
repz
mov
scas
ins
adc
dec
mov
arpl
sbb
jbe
adc
dec
mov
sahf
adc
mov
jb
pop
sub
ss
lock
outs
fbstp
fs
sub
pop
outs
pop
arpl
dec
ins
inc
inc
arpl
sbb
outs
or
sti
mov
push
mov
sbb
je
jns
adc
jnp
shr
fimul
mov
or
cs
inc
mov
ja
xchg
sti
outs
div
pop
jmp
icebp
test
daa
push
bound
imul
icebp
push
lock
pop
mov
dec
jno
ja
sbb
push
aam
fild
ret
mov
retf
shl
ins
add
dec
pop
mov
jbe
sbb
imul
xchg
imul
aas
jo
ins
ret
dec
cmp
ins
iret
pop
jae
cmp
xchg
ret
add
scas
cmp
fwait
push
out
sar
imul
aas
loop
or
scas
dec
jb
mov
sub
retf
adc
cmovbe
stos
movhps
jbe
xchg
ins
dec
mov
jae
sub
inc
sub
daa
pop
adc
or
xor
movs
addr16
ret
push
sbb
mov
clflush
fs
outs
pop
sub
es
sbb
pop
and
rol
pop
sub
imul
add
movs
lea
(bad)
(bad)
and
sahf
arpl
jns
jne
xchg
(bad)
(bad)
mov
push
jbe
jp
ins
lds
xor
ja
mov
mov
arpl
mov
sar
repz
push
cmp
push
sub
push
sub
add
pop
adc
add
in
mov
(bad)
xchg
daa
jb
out
and
aam
imul
pop
inc
dec
bound
xchg
push
jo
sub
xor
mov
aaa
cmp
push
retf
sub
imul
pop
sub
fsub
xor
stos
mov
adc
xchg
adc
inc
inc
mov
adc
or
jp
test
call
adc
dec
pop
lods
sub
cld
push
outs
push
pop
or
mov
imul
fs
push
ins
jmp
sub
jb
xor
jbe
jns
mov
dec
ds
pop
push
outs
(bad)
movs
pusha
adc
cmp
ss
retf
pop
mov
jle
outs
jl
push
outs
fs
imul
mov
jae
ins
jle
lods
(bad)
ror
pop
and
ret
jbe
(bad)
imul
or
(bad)
(bad)
cmps
cmp
pop
or
sub
fld
rcl
inc
ja
cmps
and
mov
shl
sub
shl
xchg
cs
pop
sbb
push
popa
adc
push
xor
adc
mov
add
aam
add
xor
xor
xchg
mov
push
mov
ret
add
scas
ja
es
jmp
outs
arpl
int
icebp
jo
mov
bound
sub
push
les
into
jp
mov
(bad)
jno
adc
daa
ins
add
test
ds
ja
sub
xor
mov
sub
shl
mov
xchg
movs
pop
outs
and
rol
mov
lds
je
push
jecxz
sub
dec
popa
cmp
rol
das
push
adc
fwait
rcl
add
rcl
xchg
and
cmp
push
sahf
sbb
sub
movhps
rol
test
inc
aaa
mov
xchg
jae
inc
test
add
in
out
cmp
stos
adc
sbb
stos
shl
push
ins
cmp
(bad)
fild
stos
(bad)
test
cmp
push
popa
or
sbb
test
xor
pop
test
ss
mov
lea
dec
inc
pop
sub
mov
imul
sbb
inc
mov
adc
sahf
dec
mov
stos
mov
retf
inc
mov
adc
xlat
jae
aaa
imul
adc
ret
ins
jg
ret
sbb
imul
inc
and
ja
repnz
mov
fs
adc
xchg
pop
jo
push
push
je
mov
sub
shr
les
xchg
mov
pop
adc
in
xor
cmp
(bad)
sbb
adc
shr
lds
cmp
pop
and
cwde
xchg
mov
dec
dec
sbb
xchg
addr16
xchg
daa
out
fisubr
aas
add
adc
and
ficom
dec
xchg
fs
cmps
mov
sbb
add
xchg
add
xchg
mov
add
adc
sbb
dec
add
daa
scas
in
cmps
or
cmovp
in
scas
in
or
scas
adc
pop
sub
add
and
lock
xchg
call
xchg
xor
push
repnz
popa
je
xor
add
and
ror
inc
add
jo
rcl
and
rol
test
retf
pop
js
and
inc
mov
or
jecxz
cmc
call
out
push
popa
pop
retf
inc
pop
push
pop
nop
(bad)
cmp
fwait
pop
jbe
dec
jmp
int
sbb
xor
shr
gs
add
xor
adc
das
and
push
and
ins
stos
add
shl
cdq
inc
imul
inc
or
enter
mov
and
inc
jg
mov
pusha
add
inc
ret
sub
add
out
or
inc
daa
gs
repz
or
ins
push
je
push
outs
xor
xchg
push
popa
pop
mov
jbe
ja
ret
lock
inc
pop
lahf
dec
inc
dec
aad
rol
jo
mov
jno
lock
ins
ret
ins
jae
mov
push
gs
push
dec
pop
jnp
dec
sbb
outs
(bad)
xor
ret
pop
xor
mov
add
dec
push
sar
xor
test
and
rcr
add
jo
fisub
(bad)
ja
push
call
and
data16
jo
int3
(bad)
pop
dec
adc
outs
inc
add
xor
jae
popa
pusha
cmp
xchg
cmc
mov
scas
adc
sub
fisttp
addr16
je
push
(bad)
inc
mov
daa
inc
fs
adc
and
push
jae
add
arpl
push
xor
xchg
mov
mov
jle
out
jne
cmp
push
pop
imul
sbb
or
xor
add
sbb
inc
sub
dec
lods
cmps
jbe
inc
sub
adc
inc
ret
mov
int3
fwait
pop
xor
out
mov
and
sub
arpl
adc
outs
add
int
in
ds
push
mov
or
push
mov
xor
push
mov
xor
bound
ret
xor
jmp
pop
pop
sbb
jne
nop
mov
push
fldcw
push
jnp
xchg
push
adc
dec
outs
sub
add
push
dec
push
mov
sub
lods
pop
ret
aam
inc
out
push
push
inc
pop
xor
and
jo
xchg
adc
and
int
add
add
add
dec
inc
shl
adc
pop
fwait
outs
jo
scas
out
xchg
shl
jmp
dec
pop
mov
dec
add
(bad)
cmc
test
movs
xor
dec
or
adc
xor
mov
push
and
cmps
lods
adc
dec
jmp
add
add
sub
fild
jbe
js
mov
ins
cdq
popa
xor
adc
add
dec
shr
push
sub
mov
sbb
mov
imul
add
mov
pop
(bad)
mov
fst
jo
push
xchg
or
aad
sti
adc
ss
inc
adc
mov
mov
or
icebp
inc
pop
inc
pop
and
dec
mov
add
fnstcw
and
rcl
dec
jbe
jmp
ror
xor
push
(bad)
cmp
aas
adc
ins
and
(bad)
adc
inc
stos
imul
inc
ins
scas
push
ins
pop
(bad)
jne
or
and
sbb
jp
add
imul
bound
add
mov
sbb
xor
inc
pop
mov
data16
icebp
lods
fnsave
xor
into
add
inc
out
bound
jp
addr16
fstp
pop
setle
xor
shr
inc
dec
inc
push
rcl
push
pop
sub
pop
mov
mov
jle
or
pop
inc
mov
lock
mov
out
inc
adc
icebp
adc
adc
mov
test
or
mov
lods
sar
adc
adc
lods
inc
test
out
mov
retf
xor
pop
mov
pop
ja
in
test
xor
sub
jno
outs
xchg
xlat
xchg
cmp
ins
test
fwait
xchg
mov
lds
inc
dec
sbb
jae
add
xor
jae
adc
gs
and
fisub
mov
xor
sub
or
mov
xor
(bad)
adc
jno
arpl
les
add
dec
pop
xor
adc
test
adc
aaa
(bad)
aaa
adc
je
inc
and
pop
in
adc
and
xor
sbb
mov
jo
addr16
mov
mov
cmps
inc
dec
adc
cs
inc
ja
pop
dec
jge
ret
mov
test
inc
imul
outs
mov
scas
sbb
les
pop
pop
dec
xchg
dec
inc
outs
mov
inc
pop
xadd
pop
and
add
int3
jle
ror
mov
or
sub
inc
jo
in
shl
pop
sub
dec
retf
cmps
repz
outs
pop
inc
mov
or
inc
fimul
sub
dec
jbe
movs
popa
add
add
mov
popf
jp
inc
icebp
cmc
add
or
(bad)
popf
cmp
pop
xchg
xlat
lds
add
dec
mov
ins
mov
cmps
dec
fidiv
pop
imul
inc
ret
imul
jg
cdq
inc
mov
mov
imul
mov
add
js
xchg
push
fbld
adc
mov
or
add
bound
cli
dec
xor
or
cmps
out
lods
mov
pop
ret
jb
rcl
(bad)
sbb
pushf
inc
push
or
shr
dec
pop
mov
push
aaa
mov
ins
xchg
cmp
dec
adc
xor
jb
test
sahf
test
ds
xor
bound
cmp
imul
jo
push
sub
sub
add
cmp
pop
push
bound
jg
push
frstor
and
into
dec
dec
std
push
jae
dec
cld
pop
push
cmc
dec
outs
dec
retf
setl
(bad)
in
in
adc
fcomip
frstor
pop
or
mov
mov
xor
mov
and
push
pop
add
sub
(bad)
jbe
adc
add
or
adc
ret
and
mov
out
sbb
aaa
jmp
mov
cmp
and
adc
inc
cmps
and
pop
cmp
imul
jo
xor
or
and
cmps
mov
push
outs
cmp
adc
or
add
xchg
push
add
add
call
mov
jns
mov
hlt
cmp
push
sbb
repnz
xchg
xor
adc
dec
adc
pop
jmp
loope
dec
imul
mov
add
adc
int
mov
jecxz
pop
jb
jmp
daa
mov
mov
popa
pop
push
rol
retf
shr
mov
dec
cmp
clc
and
add
pop
push
and
jns
cmp
sub
and
xchg
mov
xchg
repnz
or
ins
cld
push
or
fldcw
push
fidivr
shl
js
loopne
ret
bound
inc
pop
or
pop
mul
inc
dec
ins
or
push
pop
cmp
movs
xor
pushf
pushf
shr
into
stos
jne
push
cmp
ror
sub
inc
inc
inc
mov
test
and
or
(bad)
js
rep
icebp
test
cmp
jne
sub
jmp
sub
loopne
xor
rcr
xchg
add
dec
jg
add
inc
add
sbb
sub
jne
or
add
pop
jns
jb
inc
xchg
loopne
call
iret
ret
mov
jg
arpl
mov
push
add
jecxz
sbb
cmp
adc
pop
cmc
xor
pop
icebp
ss
lock
nop
fcmovu
pop
jnp
xchg
mov
ins
adc
add
pop
or
bound
mov
repnz
jbe
and
and
mov
inc
pop
fisttp
pop
or
pop
test
fstp
test
call
mov
push
and
jo
movs
jecxz
test
cmp
mov
mov
cmp
pop
xchg
mov
outs
cmp
xlat
daa
sbb
dec
cdq
push
rcl
fnstenv
inc
pop
pop
inc
outs
rcl
jne
sub
and
jns
pop
dec
fild
in
adc
or
push
pop
nop
je
int
push
dec
or
xor
ror
popf
dec
pop
xlat
sbb
and
pop
or
xchg
cmc
sub
movs
(bad)
mov
adc
push
dec
test
aaa
push
mov
push
mov
int
jns
ins
push
fisub
repz
out
adc
sar
int
adc
pop
pop
dec
repnz
inc
pop
es
adc
imul
loope
and
adc
xor
les
loop
xchg
movs
sub
xor
mov
shl
ins
stc
dec
add
dec
or
xlat
push
adc
sub
(bad)
sub
pop
xor
add
nop
shr
add
lea
cmps
adc
das
or
push
stos
push
jmp
pop
ror
outs
ds
mov
jno
or
fwait
push
loopne
mov
sbb
sahf
mov
adc
adc
test
fcmovbe
jae
pop
jmp
shl
shr
sub
arpl
push
imul
sbb
jmp
iret
mov
pop
mov
cdq
nop
add
pop
loopne
mov
imul
(bad)
das
xchg
xchg
push
sbb
cmovne
and
and
data16
sub
and
ins
outs
jo
sbb
mov
mov
dec
cdq
movs
sub
adc
cmp
push
imul
arpl
pop
push
lods
pop
sti
out
and
xchg
jae
xor
in
jge
push
movs
fild
dec
xor
sub
sub
sbb
xchg
mov
gs
sub
cmp
pop
stos
dec
dec
add
fisttp
ret
or
fiadd
in
mov
sub
push
fwait
outs
push
repz
adc
xchg
ins
xor
adc
mov
aam
or
xchg
push
push
inc
shr
out
fimul
xor
cmps
sub
dec
mov
or
dec
push
cmps
movs
adc
xchg
dec
cdq
test
adc
(bad)
jnp
sbb
and
aas
iret
adc
push
add
sbb
adc
dec
mov
add
adc
jg
and
cwde
mov
fld
div
mov
ins
or
add
out
fnstcw
adc
push
add
mov
fstp
movs
dec
add
mov
or
pop
cs
and
pop
xlat
mov
smsw
sub
cmp
mov
(bad)
cmp
cs
add
jg
out
outs
cmovg
cs
jb
mov
ss
out
and
lahf
test
ins
es
dec
jg
das
pop
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
