mov
add
add
add
dec
add
add
add
add
sbb
add
add
add
add
push
xor
add
and
add
add
adc
add
add
sldt
push
sub
add
xor
add
add
add
adc
and
add
add
add
add
add
add
and
add
add
add
add
add
add
jnp
add
add
adc
add
outs
adc
add
or
pop
or
add
or
add
or
and
add
sub
jge
add
add
outs
push
add
or
jne
add
add
outs
pop
add
or
add
add
add
adc
add
outs
adc
add
adc
and
add
adc
add
je
add
add
add
add
sub
jge
add
add
add
push
add
or
add
and
add
adc
adc
or
add
add
add
jnp
add
add
and
add
add
add
add
add
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
add
jnp
add
add
and
add
add
add
add
push
add
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
add
jnp
add
add
jnp
add
add
sub
add
or
sbb
add
outs
sbb
add
add
add
add
jnp
add
add
and
jnp
add
add
add
add
sbb
add
add
add
add
add
add
sbb
add
sub
sbb
add
add
add
pop
add
add
add
add
jge
sub
add
add
xor
add
add
add
add
add
sbb
add
mov
add
add
and
sbb
sbb
jnp
add
add
add
add
sbb
add
add
add
add
push
add
or
add
sbb
add
mov
add
add
or
add
add
or
mov
jnp
add
add
outs
pop
add
or
pop
jge
add
add
jnp
add
add
sbb
add
sub
add
or
fimul
add
jge
add
add
add
jnp
add
add
dec
add
add
add
sbb
add
sub
sub
add
or
jnp
add
add
sbb
add
sub
xor
jnp
add
add
adc
add
add
add
add
sbb
add
outs
and
add
add
add
add
sub
jnp
add
add
outs
pop
add
or
jnp
add
add
add
add
sbb
add
add
sbb
add
mov
add
add
mov
add
add
add
or
add
add
add
adc
add
add
add
add
adc
add
outs
and
add
pop
pop
outs
and
add
add
add
add
add
sbb
add
mov
add
add
sbb
sbb
add
or
add
add
adc
add
add
ja
or
add
add
xor
add
add
add
add
add
sbb
add
mov
add
add
and
sbb
sbb
jnp
add
add
add
add
sbb
add
add
add
add
push
add
or
add
sbb
add
mov
add
add
or
add
add
or
mov
jnp
add
add
outs
pop
add
or
pop
jge
add
add
jnp
add
add
sbb
add
sub
add
or
fimul
add
jge
add
add
add
jnp
add
add
dec
add
add
add
sbb
add
sub
sub
add
or
jnp
add
add
sbb
add
sub
xor
jnp
add
add
adc
add
add
add
add
sbb
add
outs
and
add
add
add
add
sub
jnp
add
add
outs
pop
add
or
jnp
add
add
add
add
sbb
add
add
sbb
add
mov
add
add
mov
add
add
add
or
add
add
add
adc
add
add
add
add
adc
add
outs
and
add
pop
pop
outs
and
add
add
add
add
add
sbb
add
mov
add
add
sbb
sbb
add
or
add
add
adc
add
add
ja
or
add
add
sub
sub
add
outs
pop
add
or
jnp
add
add
jnp
add
add
sbb
add
outs
sbb
add
sub
xor
add
add
add
add
add
sbb
add
mov
add
add
or
add
add
or
add
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
add
outs
pop
add
or
sub
add
push
sub
add
outs
pop
add
or
jnp
add
add
jnp
add
add
sbb
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
sbb
add
mov
add
add
or
add
add
or
add
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
add
outs
pop
add
or
sub
add
push
sub
sub
xor
add
add
add
add
add
sbb
add
mov
add
add
mov
add
add
add
or
add
add
add
add
or
add
or
pop
or
and
add
adc
add
add
add
add
add
or
outs
sub
add
outs
and
add
push
pop
pop
or
push
das
xlat
add
add
add
sub
add
xor
add
add
add
add
add
sbb
add
mov
add
add
mov
add
add
add
or
add
add
add
add
or
add
or
pop
or
and
add
adc
add
add
add
add
add
or
outs
sub
add
outs
and
add
push
pop
pop
or
push
das
xlat
add
add
add
sub
sub
add
add
add
or
jnp
add
add
pop
add
or
add
sub
add
sub
add
adc
push
add
pop
add
add
add
rol
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
pop
pop
sub
add
or
add
or
jnp
add
add
add
add
xor
jnp
add
add
fs
adc
add
or
add
or
jnp
add
add
outs
cmp
add
add
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
test
jae
add
or
add
or
jnp
add
add
adc
xor
jnp
add
add
fs
adc
add
or
add
or
jnp
add
add
outs
cmp
add
add
add
add
inc
add
add
jae
add
or
add
or
jnp
add
add
outs
cmp
add
add
add
add
daa
add
jo
add
fs
push
sbb
out
add
add
add
or
add
or
jnp
add
add
sub
adc
add
or
add
or
jnp
add
add
push
add
jo
xor
jnp
add
add
ds
sbb
add
or
add
or
jnp
add
add
outs
cmp
add
add
add
add
pop
add
jo
sbb
add
add
add
add
outs
cmp
add
add
add
add
daa
add
jo
add
fs
push
sbb
out
add
add
add
or
add
or
jnp
add
add
adc
add
pop
adc
add
or
add
or
jnp
add
add
ins
add
jo
xor
jnp
add
add
sub
sbb
add
or
add
or
jnp
add
add
outs
cmp
add
add
add
add
jnp
add
sbb
add
add
add
add
add
add
add
add
or
add
or
jnp
add
add
add
jo
xor
jnp
add
add
outs
add
or
jnp
add
add
ss
adc
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
aas
add
or
jnp
add
add
mov
mov
xor
add
outs
xor
add
add
add
add
xchg
add
jo
xor
jnp
add
add
outs
add
or
jnp
add
add
xor
adc
add
or
add
or
jnp
add
add
or
cmp
add
add
add
add
outs
aas
add
or
jnp
add
add
jb
add
jo
inc
add
or
add
outs
inc
add
or
jnp
add
add
add
jae
add
or
add
or
jnp
add
add
retf
add
jo
xor
jnp
add
add
jo
jo
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
or
or
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
push
add
push
jae
add
or
add
or
jnp
add
add
jb
add
jo
inc
add
or
add
outs
inc
add
or
jnp
add
add
add
jae
add
or
add
or
jnp
add
add
pop
add
jo
xor
jnp
add
add
jo
jo
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
push
outs
inc
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
outs
pop
add
or
jnp
add
add
mov
add
and
add
add
add
or
add
or
jnp
add
add
pop
add
jo
xor
jnp
add
add
or
adc
add
or
add
or
jnp
add
add
movq
add
or
jnp
add
add
outs
pop
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
mov
add
and
add
add
add
or
add
or
jnp
add
add
xor
add
xor
jnp
add
add
or
adc
add
or
add
or
jnp
add
add
adc
add
or
jnp
add
add
outs
pop
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
daa
add
jo
add
sbb
push
sbb
out
add
add
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
adc
add
or
jnp
add
add
pop
pop
inc
jae
add
or
add
or
jnp
add
add
inc
add
jo
xor
jnp
add
add
outs
dec
add
or
jnp
add
add
and
add
jae
add
or
add
or
jnp
add
add
adc
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
inc
or
add
jae
add
or
add
or
jnp
add
add
daa
add
jo
add
sbb
push
sbb
out
add
add
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
adc
add
or
jnp
add
add
test
jae
add
or
add
or
jnp
add
add
push
add
jo
xor
jnp
add
add
outs
dec
add
or
jnp
add
add
and
add
jae
add
or
add
or
jnp
add
add
adc
add
or
jnp
add
add
inc
or
cmp
add
outs
cmp
add
add
add
rol
add
jae
add
or
dec
add
or
pop
sub
add
add
jo
add
and
add
jae
add
or
dec
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
sub
add
add
add
add
push
add
or
push
sub
add
add
add
jo
xor
jb
add
jo
sbb
add
add
add
add
push
add
or
jnp
add
add
push
add
or
push
sub
add
add
push
add
or
pop
sub
add
push
sub
add
jae
add
push
sub
add
sub
add
pop
add
or
add
add
xor
add
add
add
add
jle
add
add
sub
add
sub
jb
add
jo
add
add
sub
add
or
add
or
add
or
push
adc
add
adc
add
sbb
add
add
push
add
sub
jle
add
add
push
jae
add
push
sub
add
je
add
add
sub
add
bound
add
sub
pop
dec
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
out
sbb
pop
daa
add
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
data16
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
ret
iret
add
add
or
or
add
or
add
add
add
add
or
add
add
js
cli
add
add
inc
dec
inc
add
mov
or
popa
add
arpl
dec
add
jp
add
add
sub
add
add
jmp
add
jo
mov
add
jo
pop
jae
add
adc
add
adc
add
iret
cmp
inc
push
js
in
mov
xchg
fistp
fwait
ins
jmp
shl
pop
repnz
add
ins
leave
push
mov
data16
ins
xor
push
xchg
or
jp
adc
push
mov
fs
outs
jb
sub
mov
mov
pop
and
add
mov
jnp
add
cli
into
fdivr
push
int3
int3
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fwait
inc
jbe
pop
aas
push
xchg
and
adc
xor
cwde
cmp
int3
sub
mov
addr16
jg
cld
ins
icebp
mov
sub
inc
cld
dec
icebp
outs
les
fild
dec
sub
xchg
lahf
mov
adc
cld
mov
fwait
loop
mov
pop
sub
xor
cld
adc
pop
pushf
daa
and
inc
and
ret
xor
push
mov
and
pop
out
pop
out
adc
adc
inc
and
(bad)
sahf
sbb
cwde
cdq
dec
mov
ds
cli
iret
lds
jg
into
adc
std
ins
bound
lahf
cmp
fsub
xchg
dec
cmp
lds
inc
xor
jmp
mov
cld
push
inc
div
pop
or
stos
mov
fs
xor
adc
mov
in
into
dec
out
pop
jl
mov
and
xor
jl
jl
mov
adc
mov
fsub
and
mov
sub
xor
mov
cs
pop
loop
or
repz
pop
daa
call
loop
xor
jle
pushf
popa
sbb
ficom
dec
lahf
adc
xchg
xor
clc
inc
les
dec
sahf
gs
ror
push
cld
mov
inc
stos
inc
test
inc
idiv
adc
adc
loop
and
sbb
sub
cmc
and
xchg
inc
lock
pusha
cmp
cmp
or
cmc
test
fcmovne
ins
inc
push
(bad)
adc
std
outs
loop
cmp
loop
icebp
dec
icebp
xchg
enter
popa
sbb
in
push
xor
mov
js
pusha
push
sar
fs
mov
data16
mov
inc
push
dec
(bad)
adc
xor
mov
lds
xchg
mov
inc
(bad)
adc
es
popa
xchg
pop
dec
or
imul
dec
pop
add
adc
dec
ss
(bad)
test
dec
(bad)
adc
test
(bad)
daa
xor
sbb
xchg
imul
test
jnp
retf
xchg
add
pop
sbb
cmp
adc
pop
loop
push
sub
mov
(bad)
mov
jmp
mov
or
xchg
adc
push
ds
aam
(bad)
outs
adc
sub
push
mov
cwde
cdq
jns
sbb
sub
push
cmc
push
or
or
xor
punpckhdq
add
mov
or
fs
add
fldcw
pop
inc
mov
daa
pop
sbb
test
sub
fs
xchg
pop
pop
fld
ins
sub
jbe
sar
fwait
clc
push
call
popa
sbb
rcpps
add
sbb
mov
add
mov
aas
xchg
(bad)
jl
repz
xchg
data16
ret
xor
jp
inc
nop
xor
fsubr
add
inc
mov
jae
sbb
cmp
mov
loopne
push
xor
call
es
mov
ins
push
xchg
in
inc
xchg
aad
or
xor
cmp
iret
test
dec
mov
rol
mov
push
pop
in
sbb
shl
ins
sbb
cdq
cs
inc
add
add
mov
popa
ds
adc
push
aas
fcmovnu
iret
xor
test
add
jp
pop
mov
sub
loope
adc
lea
inc
in
scas
aas
imul
into
mov
ret
xor
adc
jae
retf
pop
xchg
adc
mov
adc
mov
mov
push
popa
sbb
int3
xchg
or
add
outs
icebp
cmp
sti
or
sbb
dec
pushf
aas
dec
(bad)
(bad)
aas
rcl
push
hlt
sbb
popa
jnp
inc
add
mov
addr16
add
dec
mov
nop
and
jmp
aas
mov
xchg
push
fstp
icebp
jbe
popf
cwde
dec
add
and
stc
sti
mov
xchg
push
sub
adc
pushf
cli
dec
push
loopne
mov
push
xor
cld
jae
les
shl
or
sub
and
push
xchg
call
icebp
dec
shr
pop
sti
leave
sbb
lods
(bad)
aaa
or
xor
and
jno
clc
test
sar
in
inc
icebp
jg
xchg
fsub
xchg
inc
push
aas
adc
adc
mov
lods
fbld
xor
data16
push
pusha
scas
push
aad
dec
pop
ins
(bad)
xor
enter
cmps
loop
inc
sub
jno
data16
push
or
sbb
mov
shl
(bad)
mov
and
cmc
mov
neg
out
xor
and
pushf
sbb
std
mov
pop
shl
push
jo
rol
inc
icebp
arpl
sbb
xor
dec
pop
ja
jle
jecxz
mov
jbe
cmps
mul
mov
add
(bad)
test
iret
(bad)
xor
daa
test
sbb
in
out
inc
clc
sub
cmp
mov
movs
add
fnsave
clc
pop
or
add
pusha
mov
add
cmp
and
pushf
pop
(bad)
imul
repnz
pop
clc
test
cld
stc
(bad)
adc
sbb
sub
push
mov
call
cld
out
cli
lods
mov
aas
addr16
cli
sbb
rol
enter
jge
mov
sbb
sub
and
es
mov
addr16
sub
(bad)
loop
jno
(bad)
std
ror
adc
cli
rcl
ja
std
pop
je
dec
jge
mov
jno
imul
push
pop
push
mov
mov
jmp
add
cmp
dec
test
sub
ror
scas
repz
push
aaa
movd
jb
cmp
jnp
xor
int3
xchg
addr16
inc
pop
mov
jbe
out
aaa
dec
pmuludq
sti
push
clc
jle
fmul
(bad)
std
(bad)
xchg
bound
int3
retf
add
push
fmul
dec
jno
(bad)
out
mov
inc
mov
dec
mov
adc
xchg
retf
cmp
fbstp
cmp
ja
cmp
mov
mov
mov
(bad)
fistp
popf
out
fdivr
jle
repz
stos
pop
add
mov
mov
call
ret
repz
out
mov
es
pop
sbb
or
jbe
jnp
jge
aaa
aad
movs
iret
outs
dec
aas
imul
lahf
jmp
sahf
jmp
pop
cmp
mov
jns
(bad)
std
in
gs
test
(bad)
call
pop
mov
add
loopne
cdq
mov
push
mov
mov
(bad)
call
pushf
clc
xlat
and
sub
shl
scas
vpaddw
fmul
scas
sub
cmp
sub
rcl
fild
adc
ins
cmp
pop
mov
ss
sub
fstp
push
or
sbb
ja
ret
mov
inc
mov
mov
(bad)
and
inc
fwait
jmp
in
js
push
aas
add
xchg
out
sti
arpl
jae
popa
repnz
mov
ins
retf
out
outs
jg
jp
std
mov
mov
outs
fnstenv
sbb
and
adc
addr16
das
ds
add
push
mov
jno
xchg
clc
pop
bound
add
loop
leave
rol
sti
mov
jecxz
mov
pop
mov
sbb
xchg
(bad)
daa
push
mov
(bad)
iret
sub
aam
add
mov
xchg
pop
out
(bad)
aad
pop
fsubp
lds
pushf
outs
xlat
dec
ds
in
mov
adc
nop
dec
int
push
dec
adc
stc
push
loop
adc
cmp
jle
dec
das
mov
int3
jnp
mov
jecxz
ds
inc
(bad)
adc
mov
jbe
(bad)
enter
out
mov
add
push
or
cmps
(bad)
stc
mov
bound
add
xchg
push
xor
jbe
mov
sub
je
pop
lahf
repz
cmp
xchg
sub
adc
push
scas
stos
cmc
adc
sub
popa
jp
mov
push
add
xlat
out
pop
cld
lods
jmp
mov
scas
jbe
add
aas
cmc
pcmpgtb
adc
mov
out
and
xchg
sahf
aad
mov
test
iret
stos
(bad)
(bad)
mov
sti
xchg
movs
push
xchg
push
inc
shr
nop
cmp
and
inc
popa
stc
pop
dec
fmul
out
mov
add
loop
add
out
jnp
push
mov
xchg
aas
jne
sub
mov
je
mov
lods
iret
rcr
mov
xor
jg
add
mov
shl
and
outs
test
xchg
je
fldcw
mov
adc
test
mov
jmp
mov
div
hlt
adc
sbb
fucomip
inc
not
das
cmc
ffreep
shl
sbb
sub
in
or
iret
(bad)
fmul
xchg
sub
js
mov
arpl
dec
sbb
xor
pop
out
jb
mov
mov
jl
ja
movs
enter
and
out
dec
add
sbb
adc
not
fstp
adc
cli
sub
mov
inc
(bad)
mov
mov
and
into
push
js
jo
sar
add
retf
loop
int3
sub
aam
jg
sub
fld
sahf
adc
jb
aas
sbb
xchg
add
ror
movs
adc
sbb
jmp
jo
shl
adc
push
and
or
arpl
cmp
mov
mov
test
inc
mov
sbb
repz
jae
js
sub
jns
dec
add
shl
clc
cwde
clc
pop
loop
adc
push
imul
push
nop
(bad)
cmps
call
add
pop
test
pop
(bad)
jp
das
push
into
jmp
cld
les
push
icebp
dec
je
or
ret
push
and
inc
adc
xor
adc
retf
stos
pop
and
inc
not
arpl
mov
jbe
das
cdq
xchg
mov
imul
mov
inc
dec
cld
ret
(bad)
fstp
fdivr
jg
mov
dec
dec
stc
push
inc
je
push
pop
rcl
adc
ror
xchg
ja
jecxz
adc
sbb
sub
bound
adc
lea
in
into
out
in
add
xor
inc
adc
pop
sbb
jbe
pop
(bad)
or
idiv
adc
mov
jp
outs
sbb
(bad)
cmps
push
add
rcl
adc
das
jno
xchg
pushw
jmp
cld
out
inc
cli
lahf
or
ror
dec
arpl
adc
sbb
sub
mov
(bad)
cmp
and
clc
data16
adc
fld
cmp
in
pop
or
loop
xor
pop
pop
xchg
pushf
fwait
ja
repz
jl
cmps
icebp
sti
leave
mov
adc
and
dec
(bad)
repz
les
mov
arpl
add
icebp
sti
mov
push
xchg
retf
sub
jg
jle
mov
rcr
dec
jle
pushf
retf
daa
adc
or
lods
mov
sub
mov
ret
mov
cs
add
fiadd
mov
(bad)
jmp
add
out
aam
xor
ins
daa
sbb
enter
daa
fbld
cs
mov
xor
pop
jbe
call
cld
and
mov
xchg
(bad)
retf
mov
packssdw
push
sti
pushf
jg
jl
call
jns
inc
or
sub
dec
dec
mov
push
add
add
sbb
test
jnp
dec
cmps
mov
push
push
int
and
jmp
cs
sub
loop
pop
cli
inc
jns
xor
pop
fiadd
mov
rol
sbb
push
pusha
inc
xor
jecxz
add
or
imul
cmps
test
lea
leave
retf
sub
push
(bad)
shl
fild
and
sub
scas
push
mov
stc
dec
cld
(bad)
iret
sbb
add
into
add
scas
fistp
fdivr
jo
rol
rcr
mov
sti
retf
es
cmp
sbb
pop
and
sbb
jge
clc
cmp
mov
cmps
das
(bad)
fld
mov
jne
inc
add
ss
clc
pop
mov
jecxz
add
(bad)
and
mov
outs
fstp
(bad)
mov
data16
xor
aas
inc
jmp
dec
fnstsw
mov
pop
mov
jno
gs
pop
(bad)
jp
scas
add
jbe
sti
and
cs
and
nop
xor
je
fwait
shl
xlat
or
adc
popf
shr
loope
mov
lahf
popf
stc
data16
add
jnp
jp
sub
add
or
add
add
pop
sbb
sub
push
xchg
loopne
fsubp
push
imul
sbb
xor
push
fistp
push
cmp
rcr
pop
xchg
inc
retf
pop
daa
scas
xchg
(bad)
mov
pop
leave
stc
imul
pusha
mov
out
dec
push
sbb
sub
inc
movs
fcom
adc
mov
idiv
lods
inc
js
jl
mov
sub
sub
jmp
add
shr
add
push
dec
lea
rcr
stc
inc
ret
push
jp
arpl
fistp
neg
xor
loope
out
cmp
setp
loope
cmps
inc
jp
cld
cli
movs
and
and
scas
adc
push
jge
adc
pop
cmp
jl
and
adc
push
jo
icebp
cmp
scas
imul
dec
sub
scas
fnstenv
push
jge
inc
shl
add
ins
inc
cmps
(bad)
xor
pusha
mov
mov
(bad)
mov
jno
push
xor
sub
mov
xor
in
(bad)
ins
loope
pop
pushf
cmp
sbb
sub
adc
mov
mov
jle
inc
les
xor
mov
out
inc
(bad)
jle
and
scas
addr16
mov
jmp
sbb
add
push
dec
add
add
pushf
sub
push
std
(bad)
sbb
sub
cmp
lahf
sbb
cwde
sbb
retf
sbb
pop
(bad)
pop
sbb
js
pop
jmp
movs
hlt
aas
out
sbb
or
or
dec
cmps
or
and
add
jnp
call
dec
xchg
dec
pop
call
add
pusha
(bad)
jmp
test
add
sub
pop
adc
add
cmp
(bad)
mov
mov
std
rcr
add
(bad)
jo
inc
jecxz
arpl
outs
mov
jmp
push
add
xchg
loop
cmp
cli
jne
jge
aas
out
xchg
into
xor
inc
clc
ds
xor
jo
shl
arpl
mov
fcmovnbe
cmp
add
movs
sbb
jmp
cmps
mov
dec
mov
jmp
dec
ret
popa
ss
test
push
out
mov
call
jecxz
mov
stc
rcr
adc
jno
dec
or
int
xchg
sub
xor
(bad)
cmps
or
loope
dec
loope
dec
xchg
mov
test
pop
or
xor
pusha
and
cwde
add
mov
push
mov
add
lock
jb
xor
gs
xor
scas
cmp
sub
repz
movs
cli
fstp
loopne
dec
jae
arpl
cld
call
pop
dec
(bad)
jge
fsubp
mov
push
(bad)
mov
jge
mov
nop
lods
dec
das
dec
lods
push
loop
add
pop
push
fincstp
jp
xor
pusha
and
cwde
add
cmp
out
inc
fidiv
stc
jle
cmp
push
fldcw
imul
stc
out
mov
lahf
add
or
jno
mov
adc
in
pop
pop
mov
pop
gs
sub
sti
iret
cli
ins
xchg
dec
cld
pop
mov
xchg
sub
mov
adc
mov
jae
mov
add
ins
inc
cmps
(bad)
xor
pusha
xchg
or
xchg
inc
stos
cmps
cmp
lock
mov
repnz
jno
adc
push
scas
lahf
jno
clc
pop
add
inc
cmc
add
inc
jnp
pop
and
or
repnz
scas
pop
jae
aam
lock
lahf
mov
(bad)
(bad)
(bad)
out
jbe
iret
pop
xchg
pop
out
adc
movs
jmp
je
jne
jle
pusha
mov
and
jge
(bad)
add
dec
push
xchg
ss
mov
jge
adc
push
(bad)
jmp
aas
jp
lahf
repz
dec
xchg
pushf
out
fdivr
call
cmc
repz
jmp
jecxz
not
into
jno
out
xlat
out
adc
aaa
sbb
iret
push
repz
mov
jecxz
out
cld
jo
aam
lock
shl
inc
mov
hlt
iret
mul
push
fistp
sbb
mov
xchg
inc
xlat
jo
pop
cmp
pop
jnp
jb
add
and
cwde
add
cld
mov
or
mov
fisubr
push
lea
in
sbb
xchg
push
out
(bad)
jmp
and
clc
xchg
ss
loope
sbb
push
pop
inc
ss
(bad)
repz
aas
or
rol
add
or
mov
jns
inc
pop
inc
or
sbb
jne
movs
jns
fs
retf
push
retf
cmc
into
and
leave
add
shl
stos
add
cwde
dec
enter
add
pop
test
stos
mov
jmp
adc
and
inc
jg
sar
sbb
fxtract
push
add
or
and
xor
jg
sbb
mul
(bad)
cmp
jno
jl
bound
inc
or
hlt
jns
pop
xchg
cmp
loopne
shl
fsub
jecxz
std
sbb
mov
xchg
clc
imul
dec
int3
jl
mov
xor
dec
ins
adc
data16
xor
mov
sbb
ror
push
outs
out
aas
cmp
je
jne
jmp
ds
ds
push
sub
dec
in
mov
cmp
leave
ret
and
pop
or
jmp
rol
stc
xor
mov
mov
std
(bad)
adc
out
repz
mov
jl
mov
add
fld
push
ret
xor
push
ficomp
addr16
cmp
mov
jle
xchg
mov
daa
int
and
dec
push
dec
pushf
aas
jge
iret
push
lds
sbb
pushf
cmp
sahf
add
es
push
(bad)
(bad)
addr16
push
pop
mov
xchg
xchg
js
xchg
into
jp
or
dec
enter
add
pop
repz
(bad)
sti
sub
mov
push
xchg
movs
in
dec
mov
stos
(bad)
fidiv
sti
adc
and
mov
adc
pushf
mov
ror
out
and
xor
fld
cmc
add
xchg
cmc
clc
push
jmp
add
(bad)
hlt
sbb
clc
cmp
jecxz
mov
push
mov
add
add
sub
imul
or
jnp
xchg
(bad)
data16
push
add
popf
or
sub
and
repnz
daa
mov
jne
add
js
test
mov
jbe
es
call
scas
and
or
mov
idiv
add
and
cwde
add
push
retf
rcl
mov
ins
inc
sbb
pusha
jno
inc
add
cmp
inc
dec
and
jge
xor
out
inc
nop
push
mov
mov
nop
jecxz
rcr
stos
data16
pushf
jbe
sub
add
iret
cmps
or
mov
add
add
sub
push
adc
in
fcmovnbe
(bad)
aas
pop
sub
test
jo
mov
xor
mov
jns
(bad)
out
xchg
xchg
lahf
cmp
dec
arpl
mov
pop
shl
cdq
dec
scas
push
stc
and
fs
rol
scas
pop
das
hlt
sub
loop
or
pop
lahf
sbb
dec
enter
add
or
ins
inc
ret
or
rol
call
arpl
jge
push
repz
fsqrt
int3
push
lock
pop
cmps
cmp
xchg
out
inc
aas
movs
dec
push
retf
scas
push
bound
bound
inc
pusha
das
add
and
dec
or
xor
or
sbb
dec
adc
jo
out
mov
push
or
movs
lock
sti
(bad)
xchg
mov
fbstp
cmps
add
(bad)
loopne
add
ror
jp
jecxz
loope
into
jne
movs
add
add
mov
fcomip
test
test
add
ret
call
xchg
hlt
push
je
adc
inc
js
mov
mov
icebp
add
setbe
and
dec
add
sti
mov
neg
sbb
(bad)
mov
add
add
sub
imul
inc
popa
push
jmp
cdq
pop
addr16
mov
lock
pop
push
(bad)
outs
jnp
xor
(bad)
in
clc
sbb
shl
cmp
pusha
or
ret
mov
jnp
cwde
add
dec
enter
add
or
adc
sub
shl
ds
daa
(bad)
fwait
jg
pop
retf
(bad)
icebp
or
(bad)
sti
ficom
test
mov
dec
fmul
xchg
call
pop
adc
adc
xor
add
inc
mov
jmp
inc
sbb
pusha
sub
mov
jp
arpl
ja
xor
add
and
cwde
add
and
hlt
jg
fwait
jmp
call
jnp
mov
nop
std
add
adc
push
inc
call
pushf
adc
call
add
and
cwde
add
xchg
sub
shr
push
(bad)
jnp
stos
or
pop
add
cmps
sahf
std
add
jae
jecxz
test
loop
in
jl
xor
jb
stos
stc
mov
idiv
cwde
dec
enter
add
push
add
idiv
push
fld
and
sub
and
pop
pop
mov
mov
inc
sbb
or
add
cmps
aam
and
aaa
sbb
xlat
mov
mov
adc
adc
xor
inc
adc
in
retf
into
(bad)
in
jno
fsubr
add
sar
call
cmp
(bad)
jmp
cld
pop
xor
mov
or
adc
mov
pop
mov
adc
adc
xor
inc
adc
loope
lahf
ja
shl
adc
xor
add
jmp
jecxz
mov
lock
mul
or
call
bound
and
sbb
daa
mov
bound
push
push
test
gs
cmp
add
es
adc
mov
scas
xor
add
call
vcvttss2si
ins
test
add
outs
xchg
inc
hlt
xor
and
dec
add
dec
xor
pop
lss
shl
shr
adc
mov
mov
add
pop
adc
adc
xor
inc
jo
icebp
hlt
mov
lods
dec
fbstp
pop
sbb
sbb
(bad)
out
xor
repz
pop
xchg
jmp
dec
add
shr
mov
and
pop
add
int
xor
adc
daa
dec
cld
faddp
rol
fnstcw
cdq
sbb
cwde
add
fwait
nop
test
adc
cmc
jge
(bad)
js
cs
rcr
loopne
push
ror
mov
xor
pop
div
mov
(bad)
fdiv
cmp
add
enter
enter
js
aas
sbb
out
jae
dec
fld
sbb
push
xlat
out
sahf
das
(bad)
arpl
int
les
add
and
cwde
add
aaa
add
shl
add
inc
mov
or
push
sub
jno
sbb
xor
aas
pop
popa
imul
out
and
jns
lds
jp
scas
xchg
cmps
cld
mov
adc
(bad)
or
sbb
dec
cs
es
adc
mov
hlt
rol
push
push
mov
xchg
scas
test
mov
enter
clc
fsub
jmp
adc
pop
test
inc
add
cmp
push
and
pop
or
aam
xor
lods
push
dec
mov
aad
sub
jne
push
arpl
cwde
add
fwait
nop
test
add
rol
std
(bad)
ror
adc
push
mov
mov
repnz
(bad)
and
sub
dec
inc
in
(bad)
or
aam
jo
cwde
push
and
xor
push
daa
popa
push
or
scas
pop
in
xlat
jb
or
xchg
mov
jo
cwde
add
fwait
nop
test
add
add
retf
xchg
mov
xor
les
mov
and
movs
xchg
xor
sbb
push
push
mov
mov
fisttp
jne
popa
pop
sbb
leave
add
add
cmp
test
add
jl
(bad)
loopne
mov
iret
and
adc
movs
in
pop
push
enter
xchg
cmp
scas
push
sbb
(bad)
pusha
retf
std
xchg
mov
in
push
cmp
test
mov
idiv
fisttp
add
fs
sahf
mov
cmps
cwde
mov
loopne
xor
pusha
and
cwde
add
(bad)
or
test
outs
aaa
sbb
xor
add
inc
inc
adc
shl
fisttp
fnstcw
jmp
fimul
adc
or
lods
sbb
cmp
mov
jp
daa
inc
push
gs
add
mov
jle
fsubrp
ins
and
add
and
sti
dec
es
es
adc
mov
scas
ins
adc
jns
mov
or
lahf
pop
int
add
mov
jmp
rcl
cmp
and
xchg
addr16
xlat
xor
sub
stos
inc
popf
sar
popf
shl
inc
test
adc
adc
sub
ret
mov
add
add
sub
imul
mov
mov
mov
clc
mov
xchg
rcr
cdq
or
popf
adc
jg
jne
test
jne
sub
inc
jl
xchg
mov
jecxz
xchg
sub
cmp
mov
neg
or
loope
add
xor
pusha
and
cwde
add
(bad)
jno
pusha
outs
pushf
dec
neg
(bad)
js
popf
mov
pop
test
scas
inc
das
xchg
jge
mov
add
xlat
outs
imul
(bad)
jbe
sub
or
adc
scas
stc
icebp
or
adc
xlat
xchg
xchg
dec
push
es
es
adc
mov
scas
ins
adc
adc
in
mov
rol
addr16
iret
repnz
add
sub
inc
(bad)
popa
inc
daa
push
adc
or
push
add
inc
sub
(bad)
fst
enter
ror
test
(bad)
xor
bound
pusha
repnz
pusha
and
cwde
add
add
sbb
jmp
mov
mov
sbb
xchg
add
add
mov
fs
sbb
ins
add
xchg
cmp
adc
fdivr
add
sahf
cmp
add
add
or
or
cmp
iret
push
out
xor
daa
add
add
cld
ins
jmp
inc
test
rcl
jmp
add
inc
xchg
and
in
add
xchg
ss
jp
xor
xchg
ds
adc
add
or
sub
and
jmp
xchg
in
mov
add
mov
(bad)
(bad)
cwde
data16
jge
cmc
inc
or
iret
hlt
test
push
mov
in
cmp
add
ds
cmp
pushf
lds
pop
loop
lahf
jmp
inc
inc
add
sbb
add
fwait
nop
test
add
add
or
dec
addr16
std
lock
in
pop
popa
stc
push
loop
in
sub
mov
in
sub
psllw
sbb
mov
out
jae
adc
mov
add
add
sub
pop
add
jge
jbe
or
and
retf
loope
pop
test
sbb
mov
cmovb
sbb
or
or
cmp
mov
dec
or
or
jecxz
add
add
pop
adc
adc
xor
inc
jo
mov
push
pusha
sub
ss
int
xor
sub
daa
inc
add
scas
adc
or
push
fcom
mov
pop
sub
outs
(bad)
fwait
or
fld
push
nop
push
add
jmp
or
sub
scas
dec
cmp
daa
pop
sbb
cmc
add
cld
adc
mov
lahf
jmp
jp
inc
jbe
xchg
or
add
addr16
repz
(bad)
stos
popf
clc
std
pop
aam
fsubr
or
add
fld
push
shl
jbe
scas
jge
es
cmp
adc
loope
xor
xchg
int
pop
mov
sbb
add
lahf
aad
xchg
rcr
inc
xor
add
or
mov
loopne
adc
xor
(bad)
out
aas
sti
add
jp
aas
add
movlps
adc
xor
inc
dec
add
jge
jne
in
add
sbb
bound
mov
jae
jns
int
ds
outs
push
pop
imul
adc
out
aas
fiadd
push
jmp
cmp
data16
clc
inc
pusha
inc
inc
scas
cdq
or
fld
push
shl
mov
dec
add
imul
idiv
(bad)
out
pop
jo
pushf
pop
mov
sbb
and
fisttp
adc
add
es
es
adc
mov
mov
and
int3
data16
stc
xor
test
mov
mov
xor
xchg
ds
mov
(bad)
jmp
mov
iret
ret
and
pop
mov
adc
in
and
mov
inc
mov
pop
jecxz
push
out
inc
sub
add
movlps
adc
xor
inc
adc
inc
cmps
sub
and
fs
(bad)
add
leave
adc
daa
jne
cmc
int3
pop
jl
add
push
pusha
dec
sbb
(bad)
adc
fidivr
iret
push
mov
add
bound
std
out
jbe
ja
icebp
lahf
fstp
add
add
sub
imul
fisub
jmp
mov
ds
add
not
add
aaa
inc
add
jge
cs
lahf
sar
ins
cmp
ds
shl
in
or
add
jo
loope
and
add
sbb
mov
arpl
pusha
push
adc
pop
add
add
cmp
enter
adc
iret
mov
jmp
or
lahf
pop
cmc
ss
inc
dec
ror
xor
rcr
into
jmp
test
arpl
xor
add
add
add
(bad)
ins
cmc
outs
jne
cmp
dec
test
or
jmp
jg
pop
pop
push
fidiv
aaa
xlat
(bad)
js
fwait
jmp
add
or
push
mov
aad
inc
out
in
mul
das
jno
cmp
repnz
xor
pusha
and
cwde
add
pop
ins
(bad)
out
jae
dec
dec
add
push
pop
(bad)
arpl
sar
cs
xor
xchg
out
jecxz
popf
out
shl
adc
mov
and
mov
push
jae
std
mov
mov
add
adc
adc
xor
inc
jp
rcr
pop
push
adc
xchg
dec
mov
mov
pop
pop
jg
xchg
mov
dec
xchg
cdq
daa
bswap
adc
(bad)
imul
add
popa
les
lds
jl
xor
pusha
and
cwde
add
inc
les
ins
sbb
jae
mov
sti
mov
or
and
mov
mov
pop
jmp
jns
loopne
jnp
cwde
mov
scas
push
sub
fidiv
(bad)
iret
outs
into
jg
xor
pusha
and
cwde
add
in
and
data16
fcmovb
add
in
aas
addr16
add
or
xor
cmp
add
pushf
xor
(bad)
mov
sub
sbb
mov
daa
or
add
xor
add
cwde
lea
out
push
arpl
cdq
xchg
popa
(bad)
adc
cmp
das
mov
and
cwde
mov
inc
(bad)
cmc
pusha
mov
cli
and
in
(bad)
mov
cmps
mov
add
add
sub
rol
dec
cmp
push
pop
adc
xchg
dec
in
out
sub
sti
sbb
mov
sbb
or
jae
lahf
jmp
dec
add
add
push
add
into
frstor
pop
stc
inc
cdq
rcr
shl
push
add
add
pop
add
shl
inc
js
cdq
and
mov
dec
add
dec
enter
add
pop
arpl
pop
out
fs
jb
out
or
cwde
pop
rol
or
sub
ins
jl
add
out
cld
cmps
ret
out
xchg
fnstenv
rcl
cdq
sbb
add
sub
imul
and
xor
mov
cdq
add
mov
sub
add
mov
add
data16
pusha
mov
jno
cwde
add
fwait
nop
test
and
push
out
pop
fist
jo
mov
pushf
add
cmp
pop
test
pop
aad
jbe
cmovo
scas
push
or
movs
in
mov
mov
stc
int3
add
movlps
adc
xor
inc
stc
add
cdq
jecxz
pop
or
push
push
add
adc
and
mov
fisub
add
inc
fmul
mov
fild
xlat
or
adc
fnstcw
add
add
sub
push
mov
mov
mov
or
daa
mov
fs
sti
dec
and
idiv
cmp
out
add
in
or
test
pusha
imul
int
cli
call
push
or
shl
jge
jmp
sbb
(bad)
or
sub
push
mov
sahf
or
xor
sub
cmp
(bad)
xlat
out
xor
xor
ss
retf
scas
mov
repnz
or
push
in
hlt
imul
sar
jmp
fdivr
jmp
test
add
ret
call
arpl
pop
add
cmp
ss
push
sbb
and
xlat
xor
js
cmp
stos
cmp
or
sbb
add
sbb
das
enter
mov
inc
cmp
stos
(bad)
lahf
sbb
dec
enter
add
pop
imul
xchg
add
shr
xor
fsubr
pop
imul
adc
ror
lahf
lahf
hlt
ins
sar
pushf
js
inc
int3
mov
out
loope
mov
sub
dec
sahf
xchg
sbb
jl
in
push
sub
adc
push
and
test
inc
cmps
(bad)
xor
xor
loope
jae
arpl
sbb
xor
leave
mov
out
push
jbe
in
or
call
int3
adc
repnz
jecxz
or
(bad)
sti
xchg
push
push
jp
push
pop
cli
xor
sbb
scas
ja
lock
(bad)
in
jno
mov
test
(bad)
pop
or
retf
sbb
inc
cmp
sar
add
add
sub
cmp
ja
in
sbb
in
or
xchg
inc
jl
cmp
jg
sbb
mov
stc
loop
mov
movs
clc
mov
mov
cmps
pop
xchg
sahf
xchg
mov
push
vprotd
cmp
repz
ror
lahf
jle
in
jecxz
enter
gs
xchg
xor
pushf
jg
(bad)
xchg
ins
or
push
lods
sbb
sbb
add
es
adc
mov
call
int
ficomp
popa
mov
and
adc
test
sbb
mov
repnz
pop
addr16
movs
call
and
cmp
dec
nop
jle
xor
(bad)
pop
iret
in
inc
ret
sub
rcl
stc
enter
mov
mov
gs
cmp
int3
test
aad
fs
fmul
stc
out
repz
addr16
std
into
mov
add
add
sub
imul
ror
inc
lahf
movs
push
pushf
jns
cmp
rcl
cmp
mov
push
outs
push
jp
push
ins
iret
or
out
dec
mov
sbb
sbb
dec
inc
mov
jae
rcr
imul
dec
popa
sub
js
(bad)
jmp
mov
int
(bad)
pop
fsubrp
xchg
(bad)
icebp
sbb
and
mov
inc
dec
(bad)
in
add
ins
inc
cmps
(bad)
xor
xor
cdq
jg
fstp
(bad)
mov
jns
push
sbb
sbb
repnz
aaa
fmul
push
ss
jl
and
xor
and
std
cmps
push
adc
enter
jno
dec
xchg
add
mov
mov
cld
cmp
idiv
adc
lahf
(bad)
cs
shr
jmp
clc
(bad)
jnp
out
ds
pop
ins
push
sub
std
(bad)
hlt
aas
in
(bad)
fcomip
test
test
add
adc
xor
push
sbb
mov
mov
or
out
pushf
jmp
imul
add
jae
xor
and
inc
pop
in
mov
sbb
(bad)
jle
out
fnstcw
xor
mov
dec
imul
pop
scas
sbb
mov
je
and
add
scas
jnp
cmp
sub
lahf
out
addr16
loopne
(bad)
mov
xchg
jno
(bad)
inc
ins
adc
data16
xor
mov
sbb
shr
add
(bad)
dec
and
jnp
jo
loopne
shl
cli
adc
xor
xor
ficom
pop
xsha1
cmps
or
pusha
inc
pop
dec
std
mov
lahf
jecxz
jge
mov
ins
ret
out
out
not
jl
and
mov
outs
xor
jno
dec
push
sub
arpl
es
xor
bound
add
es
adc
mov
push
lea
mov
mov
ret
pop
cli
xor
jo
and
jg
addr16
jae
call
test
mov
dec
(bad)
mov
mov
ss
lods
out
jnp
lahf
dec
and
xor
pushf
stos
fyl2xp1
inc
cld
jle
retf
mov
repnz
pop
arpl
add
ss
dec
sbb
push
xchg
shr
add
add
xchg
mov
push
mov
sbb
jo
imul
dec
ret
mov
jmp
sub
jg
mov
sti
sbb
mov
adc
jg
sbb
arpl
iret
sar
mov
test
clc
imul
fisub
pushf
sub
rcl
push
sbb
pop
data16
cmc
ret
mov
add
imul
dec
mov
call
out
jecxz
loopne
mov
xor
ja
fisub
jg
lahf
and
stos
or
adc
dec
xchg
fdivr
ja
add
inc
push
jecxz
add
cld
mov
nop
out
cmp
sahf
and
add
not
pop
into
xchg
or
lock
jae
inc
fsub
sbb
cmp
mov
inc
cli
mov
pop
add
xchg
stos
push
repz
lock
data16
inc
mov
xlat
aas
pop
xrelease
arpl
les
ins
adc
data16
xor
mov
add
adc
cmps
jae
jge
add
pop
mov
aas
not
(bad)
jle
or
mov
mov
jecxz
ja
scas
mov
call
mov
xchg
xchg
jle
pop
dec
inc
inc
inc
test
repz
not
xchg
idiv
adc
xchg
leave
xor
aas
daa
mov
mov
pop
mov
test
adc
into
mov
jo
loopne
adc
scas
adc
jmp
adc
mov
sbb
push
push
inc
mov
(bad)
dec
je
jecxz
pop
cmp
dec
lahf
out
xchg
add
push
outs
fnsave
iret
out
jmp
rol
dec
mov
test
aas
adc
fdivr
mov
add
add
push
test
mov
in
sub
push
or
push
add
mov
cmp
in
add
xor
cmp
mov
clc
mov
add
xchg
jmp
inc
dec
sbb
scas
push
jmp
sub
repnz
add
mov
loop
retf
sub
in
mov
lahf
or
pop
mov
aas
arpl
xor
pusha
and
cwde
add
mov
mov
mov
movs
cmp
clc
ds
pop
cs
add
(bad)
imul
(bad)
or
mov
test
pop
repz
mov
mov
or
adc
push
div
daa
add
outs
jmp
xchg
jecxz
setg
push
cmp
ins
mov
pop
dec
add
add
cmp
int
stos
icebp
mov
js
add
or
or
or
add
nop
enter
push
imul
not
stc
add
cmps
inc
pop
inc
pusha
lock
sti
or
pushf
or
mov
(bad)
pop
in
mov
stc
lahf
push
dec
add
add
pop
fist
adc
ins
xor
push
call
xchg
mov
mov
mov
loope
inc
sub
dec
or
mov
popa
mov
cmp
lock
mov
pushf
xor
loope
mov
adc
jmp
jg
ds
push
dec
add
cmps
dec
add
jge
add
ins
pop
retf
mov
and
cmp
push
fwait
or
and
arpl
int
aaa
dec
addr16
add
in
mov
push
ins
mov
pop
hlt
pop
pushf
popa
dec
dec
int3
push
out
push
xchg
gs
retf
fstp
pop
stos
bnd
dec
sub
fs
retf
add
cdq
test
fnstcw
aad
dec
das
dec
add
sti
out
scas
dec
jge
fistp
xchg
in
cmp
jmp
(bad)
pop
stc
shl
xchg
add
nop
imul
je
scas
xchg
cmps
xchg
mov
add
push
add
mov
mov
add
in
pop
in
lock
rcr
add
add
rol
std
ja
aam
inc
xchg
lods
sahf
cmp
sbb
aam
and
or
mov
push
jecxz
mov
mov
mov
xchg
add
in
popa
pop
and
xchg
or
add
shr
xor
or
xchg
(bad)
adc
cmps
xchg
mov
xor
inc
xor
shl
add
cmp
and
mov
dec
(bad)
sub
jmp
clc
xor
sub
xchg
and
out
push
inc
std
and
pop
xor
jg
sub
add
push
or
xor
adc
xchg
push
test
iret
add
in
xchg
pop
push
push
nop
in
dec
ins
pushf
jle
es
ds
push
cmp
loop
ins
sti
dec
retf
add
fwait
hlt
out
ret
pop
jbe
and
push
push
imul
inc
sbb
(bad)
jmp
jl
pop
fisttp
add
std
stc
(bad)
mov
ret
lahf
push
sbb
mov
popf
fmul
jecxz
and
test
pop
dec
data16
dec
pushf
dec
xor
nop
or
sub
sub
in
sbb
cmps
xchg
sub
jmp
mov
ds
xor
dec
jmp
xor
out
fdivr
mov
dec
pop
pop
clc
push
xor
push
test
stos
adc
sub
sar
dec
stos
call
mov
sbb
loopne
sbb
addr16
add
adc
add
add
add
xor
mov
mov
pop
ror
ins
sbb
dec
(bad)
xlat
inc
out
jno
loope
fdiv
adc
ret
jmp
mov
cmps
mov
out
js
xor
mov
sbb
inc
movs
fidivr
mov
jl
inc
and
std
rol
dec
jne
or
cmp
mov
and
mov
ss
aas
rol
fnstsw
inc
jmp
sbb
in
pop
in
cdq
xor
pop
or
repz
imul
inc
push
fcomp
popa
data16
fidiv
mov
ror
inc
push
jns
xor
push
add
into
sub
and
jp
cmp
cmc
xchg
sar
cmc
ja
jge
push
retf
jecxz
xor
aas
jbe
or
das
stos
xchg
inc
imul
(bad)
rol
rcr
shr
add
xchg
je
push
leave
je
push
aam
push
pop
cmp
sbb
sti
add
gs
adc
or
fucomp
xchg
dec
adc
ins
adc
(bad)
retf
add
add
mov
xor
cwde
mov
jae
xchg
inc
cld
pop
jb
mov
clc
ins
scas
leave
jmp
jp
loope
das
jl
mov
mov
mov
out
outs
fdivr
sar
add
aad
lahf
js
dec
jmp
out
imul
out
add
ins
jo
xchg
(bad)
int3
push
leave
and
cs
mov
adc
jb
sbb
sub
enter
jmp
add
outs
cmp
ins
call
jmp
adc
dec
add
dec
xor
xchg
dec
out
mov
or
add
jg
sbb
adc
inc
xor
pop
pop
rcl
inc
(bad)
fsub
cmp
sub
mov
retf
jne
cli
mov
add
xchg
shl
cs
fcomip
sar
mov
cmp
addr16
mov
mov
inc
pusha
mov
add
shl
nop
test
xchg
add
loop
fwait
and
mov
adc
sbb
ins
sub
fisub
imul
gs
adc
jno
mov
cmp
sbb
jne
into
jne
pop
iret
repnz
std
mov
cmp
pop
dec
add
jl
add
std
sub
push
in
iret
aad
add
or
add
mov
dec
das
add
jno
dec
(bad)
xchg
movs
cwde
mov
and
icebp
jmp
maskmovq
pop
cmp
repnz
add
mov
or
add
ja
ins
mov
(bad)
pushf
cmp
stc
int3
inc
inc
sti
aas
sbb
mov
shl
ins
pop
adc
imul
test
mov
xor
xchg
sbb
mov
sub
neg
test
aam
or
ds
dec
mov
and
repz
push
ret
hlt
push
and
mov
xor
mov
jecxz
push
jg
cld
sub
vpsrlq
sub
or
js
add
cmp
out
rdtsc
sub
xor
mov
call
loopne
adc
xchg
push
out
cmp
outs
jg
pushf
adc
sti
cld
pop
fsub
imul
mov
lea
xchg
das
adc
pop
ret
inc
fwait
xor
xor
inc
adc
sbb
add
mov
cdq
(bad)
test
out
ds
aas
and
ins
stc
jae
sub
adc
inc
out
push
jmp
test
rol
or
adc
das
fcomp
add
in
jo
(bad)
stos
pop
in
cmp
lock
mov
mov
test
push
loope
std
cmc
add
aad
shr
fnstsw
mov
jbe
jb
nop
aam
pop
aam
dec
add
popf
xor
and
jne
mov
icebp
push
lods
or
movs
and
shr
adc
and
sbb
jp
sar
daa
dec
push
ins
ins
mov
stc
dec
mov
imul
(bad)
xor
in
shl
(bad)
mov
push
aas
inc
lea
dec
sar
rcr
stc
inc
mov
pop
clc
shl
fiadd
pop
fdivr
(bad)
jne
out
lods
ficom
adc
add
aad
cmp
and
cld
sub
in
ffree
iret
xor
jge
add
and
mov
outs
in
jl
pop
add
rol
pop
jecxz
add
or
clc
sbb
pop
out
popa
outs
cld
xor
sbb
push
fsubp
xchg
dec
adc
mov
push
lea
jecxz
enter
ja
jecxz
pop
fidiv
mov
xor
fstp
std
or
movs
add
pop
iret
pop
xchg
add
cmps
mov
out
sbb
out
sbb
pop
fst
sub
push
out
sub
lods
ficom
mov
dec
inc
iret
sbb
std
enter
or
out
inc
rcl
stc
loop
jl
fidiv
shl
sbb
clc
mov
push
pop
xor
add
jecxz
jae
loop
es
xchg
mov
mov
out
xchg
in
fnstsw
out
pop
fcomip
pop
hlt
add
imul
cmps
mov
cld
adc
outs
inc
jnp
(bad)
xor
jle
xchg
loope
sti
iret
push
pop
jae
dec
mov
xchg
outs
sub
repnz
not
or
shl
pop
into
jno
iret
xchg
mov
ret
call
stc
pop
mov
sub
mov
mov
mov
aas
addr16
jno
mov
sar
mov
addr16
(bad)
dec
push
nop
mov
cmc
(bad)
loope
inc
iret
sbb
add
cmps
(bad)
icebp
add
mov
push
(bad)
rcl
push
int3
push
ins
fdiv
push
lahf
push
inc
addr16
test
or
cmp
(bad)
je
jmp
inc
xor
hlt
pop
jmp
ret
repz
in
mov
or
shrd
or
cmp
xor
sbb
(bad)
mov
push
push
add
stc
sub
push
popf
inc
xchg
push
or
scas
sub
or
fistp
rcr
imul
xor
push
sub
mov
enter
sbb
add
jnp
ror
mov
shr
test
mov
ins
cmp
xchg
mov
neg
loopne
jge
pop
add
(bad)
mov
push
sub
sbb
ins
cmp
(bad)
call
lods
daa
or
or
xor
icebp
lahf
imul
pushf
popa
cmp
inc
stc
xchg
(bad)
push
sti
jmp
add
jno
test
add
mov
pop
sub
push
xor
icebp
xor
pusha
sbb
in
xor
(bad)
sti
mov
popf
pushf
(bad)
mov
inc
add
inc
movs
fwait
sbb
or
loope
xor
fnsave
outs
push
push
cmp
push
or
aad
jbe
xor
xor
push
add
std
ja
jnp
(bad)
sar
mov
repnz
add
add
mov
jne
out
mov
sar
xchg
loopne
and
adc
out
jns
cmp
ins
int3
hlt
mov
add
jecxz
adc
inc
arpl
pop
pop
and
xchg
jnp
jle
out
iret
pop
out
mov
in
sbb
inc
cli
pop
(bad)
imul
or
or
and
adc
lods
ds
out
mov
sti
dec
xlat
(bad)
hlt
test
loopne
clc
aam
movs
cmp
popa
cld
pop
jmp
add
mov
inc
xor
add
(bad)
fsubr
sahf
lahf
or
pop
shl
arpl
adc
jle
mov
jecxz
xor
add
add
add
pop
xor
sti
loope
cmp
mov
sbb
cwde
iret
cmps
aas
pushf
sbb
push
push
mov
pushw
xor
into
lods
ficomp
mov
cmp
jle
fbstp
pop
cmc
test
xchg
je
rol
cwde
xor
out
sahf
out
les
push
xor
(bad)
mov
cmp
adc
mov
out
(bad)
stc
and
cld
fsub
push
out
push
js
add
movs
sub
hlt
jmp
shl
dec
add
mov
xchg
aam
cli
ret
repz
add
enter
sbb
int3
and
adc
xchg
daa
fsubrp
ss
cmp
jo
out
sub
push
dec
mov
pop
pop
int
jge
add
inc
inc
sub
sbb
cwde
inc
shl
or
sahf
mov
inc
dec
add
xchg
sbb
jecxz
dec
shl
hlt
ja
cmp
xchg
mov
add
(bad)
hlt
scas
in
stos
imul
push
aad
hlt
(bad)
aad
inc
xor
add
fnsave
cmp
das
add
mov
add
xor
cmp
jmp
jecxz
(bad)
xor
xor
pop
rcr
fcom
mov
dec
add
jbe
push
mov
add
push
ret
dec
add
dec
inc
or
dec
add
push
arpl
shl
mov
jecxz
(bad)
in
sbb
(bad)
jae
aam
call
ret
dec
call
ins
test
sub
out
in
sub
mov
in
test
adc
mov
out
xor
mov
sub
popf
iret
pop
in
aaa
or
and
or
cli
sub
cld
test
push
hlt
push
push
adc
aaa
sub
gs
mov
in
test
sub
(bad)
sahf
xchg
add
xor
xor
ficomp
jmp
mov
xchg
push
shl
fistp
mov
lock
out
pop
(bad)
mul
arpl
mov
inc
xchg
(bad)
and
in
enter
and
mov
inc
xor
jmp
or
out
push
lahf
add
cmp
add
mov
add
sub
xchg
ja
je
xor
xor
icebp
cwde
ja
or
mov
pop
in
push
mov
add
loopne
je
loope
fld
std
aaa
out
retf
fist
or
sub
xor
push
popa
push
adc
add
pop
jnp
scas
pop
push
mov
loope
pop
out
pop
sti
or
outs
mov
and
sbb
sti
mov
and
mov
jge
add
fbstp
sbb
cmps
enter
out
(bad)
call
enter
sbb
cld
enter
test
dec
outs
into
xor
add
mov
addr16
mov
mov
push
arpl
cmp
add
cdq
add
cmp
out
out
icebp
sbb
mov
add
sub
adc
push
fwait
xchg
lods
dec
imul
pop
arpl
mov
dec
fcomp
arpl
js
jg
dec
add
rcl
mov
xchg
es
xchg
lods
pop
mov
push
jns
jle
div
or
add
mov
jbe
push
add
sbb
and
out
shl
(bad)
lds
adc
xchg
push
inc
sbb
shl
scas
dec
idiv
shr
xchg
jg
std
addr16
mov
fprem
ds
lock
sti
jmp
fstp
xlat
mov
arpl
xor
push
stos
pop
mov
outs
ficom
aas
je
out
add
mov
or
mov
(bad)
das
lock
sub
and
rcl
popf
xor
ret
xor
imul
lahf
inc
(bad)
(bad)
cld
movs
ds
retf
xchg
sub
cli
mov
hlt
(bad)
mov
fidivr
inc
stc
xchg
jle
xchg
cmps
imul
ss
mov
fcmovb
lea
ss
lods
or
mov
popf
dec
mov
cmp
add
fnstenv
jp
mov
inc
rcr
test
adc
or
mov
mov
jo
iret
pop
in
pop
cmp
outs
jmp
inc
aad
mov
retf
xchg
scas
inc
add
fwait
pop
xchg
aas
jmp
push
ins
xor
push
test
sbb
aad
je
imul
loopne
loopne
adc
xchg
mov
jae
mov
mov
pusha
mul
inc
or
and
fcom
inc
inc
movs
js
lods
ins
cdq
cmp
out
in
xchg
mov
mov
jecxz
mov
sbb
mov
cmps
iret
shr
fdivrp
dec
pop
(bad)
rcl
mov
pop
or
lahf
imul
mov
dec
sar
arpl
clc
out
stc
shr
cli
in
call
add
jno
movs
rcr
pop
ins
test
mov
leave
sahf
mov
jo
rol
imul
mov
jae
test
xchg
cwde
and
sub
fsubr
inc
(bad)
in
std
xor
xchg
test
aas
std
inc
aas
aas
test
mov
and
loop
xor
cwde
in
inc
aas
rcr
adc
jge
xor
fnstsw
ja
sub
fdiv
arpl
add
sbb
jge
inc
out
in
cmp
or
aaa
out
enter
cwde
jmp
jp
and
push
fwait
add
ins
lea
test
jo
outs
push
faddp
sbb
test
add
arpl
adc
or
jp
imul
jle
jecxz
or
push
mov
xchg
mov
lea
lahf
mov
mov
clc
fs
test
mov
inc
cmps
aas
aaa
sbb
inc
cld
imul
cmc
dec
stc
shr
call
dec
xor
scas
pop
pop
cmp
cli
(bad)
or
not
mov
sbb
sub
aam
loop
adc
pusha
popf
cmp
add
js
test
test
xchg
(bad)
cmp
and
(bad)
jmp
mov
or
hlt
retf
(bad)
pop
aas
(bad)
es
or
cs
in
(bad)
sahf
cmp
jae
js
out
mov
mov
xor
loopne
mov
mov
ins
sub
dec
mov
daa
jbe
test
retf
aad
scas
int
adc
add
mov
xor
aam
enter
mov
xchg
(bad)
icebp
xor
test
or
out
call
in
pop
outs
or
inc
pop
or
jg
add
cmp
repz
cmp
cmp
sub
mov
bnd
push
hlt
mov
popa
sbb
pushw
retf
sub
aas
adc
bound
mov
ins
retf
comiss
nop
sbb
lods
iret
xor
add
sbb
add
(bad)
fnstsw
mov
add
and
sbb
repz
sbb
add
ficom
xchg
hlt
pop
scas
pop
pop
fld
sub
mov
pop
lea
push
nop
adc
xchg
and
outs
into
mov
shl
pushf
mov
mov
scas
into
mov
int3
cmc
dec
cmp
jmp
add
or
cmps
popf
stc
push
popa
add
mov
aas
mov
inc
adc
cli
jmp
retf
cmp
ret
xor
jbe
add
ja
mov
jge
aad
pop
aas
add
jmp
popf
stc
cmps
pop
fwait
repz
test
mov
clc
popf
add
ins
or
inc
(bad)
call
and
lea
in
mov
pusha
sbb
(bad)
or
pop
pop
rcr
cmp
jae
scas
test
aaa
test
mov
leave
fidivr
enter
or
add
aad
in
leave
xlat
fdiv
mov
push
and
(bad)
mov
lea
add
xor
dec
pop
xor
loopne
in
(bad)
imul
das
ins
sub
lea
aam
xor
jo
push
outs
push
xor
lea
scas
mov
and
and
xchg
xor
xchg
sub
mov
(bad)
pop
mov
and
xchg
rcr
sti
xchg
mov
call
lods
xor
push
test
out
mov
ins
sub
inc
mov
scas
(bad)
pop
jbe
sub
out
enter
ret
xor
clc
add
pop
sub
inc
out
cmps
mov
pop
or
mov
(bad)
pop
(bad)
movs
pop
jmp
aad
xlat
and
stos
dec
mov
xor
mov
aas
je
push
test
repz
inc
popa
pop
fild
sti
push
add
call
popa
sbb
push
hlt
adc
lods
jnp
into
sti
mov
xchg
and
mov
xchg
cmps
aad
jmp
test
or
mov
sar
imul
test
adc
xlat
ins
or
add
add
popa
sbb
lods
bound
add
sti
lds
pop
xor
adc
or
or
repnz
push
aam
or
add
sub
ja
adc
jo
inc
std
inc
push
sbb
movs
lods
shl
xchg
xor
push
or
dec
xchg
aam
pushf
xchg
pop
jb
repnz
cmc
mov
inc
and
cmc
sar
dec
popa
mov
sbb
inc
shr
sbb
dec
cmp
stos
adc
adc
xchg
mov
cmp
add
mov
dec
mul
fnsave
or
or
into
pop
inc
loopne
or
mov
ret
inc
mov
xor
push
test
rol
inc
movs
jbe
jmp
pop
lods
pop
mov
xchg
clc
or
xor
cwde
pop
xor
add
ja
sub
pop
cmps
mov
mov
loop
stc
loope
pop
test
into
add
xor
movs
adc
sahf
into
mov
jge
inc
dec
aas
or
mov
dec
pusha
leave
sahf
jo
adc
xchg
or
or
cwde
jns
daa
adc
cmp
(bad)
outs
imul
sbb
repz
pop
and
xor
mov
aas
lods
sti
push
dec
xor
add
mov
add
ficom
jmp
int3
loop
and
push
mov
inc
cmp
shl
add
(bad)
repz
push
test
adc
add
(bad)
xor
test
test
xchg
or
push
fbld
dec
add
xchg
add
adc
push
popf
xor
cmp
sub
mov
jmp
call
sbb
jecxz
pop
dec
in
repz
inc
pushf
jg
cpuid
das
mov
push
pop
imul
sbb
(bad)
aaa
add
cmps
(bad)
test
inc
fst
jae
jnp
mov
addr16
sub
call
xor
retf
cmps
ficomp
in
(bad)
in
popf
jg
and
dec
mov
ss
pop
iret
xor
dec
add
jno
add
inc
add
add
jmp
ror
shl
ja
push
adc
add
push
data16
cmps
ficomp
jl
pop
arpl
jecxz
mov
nop
or
mov
xor
mov
jecxz
(bad)
repnz
xor
adc
adc
(bad)
dec
or
xchg
cs
dec
(bad)
imul
pop
out
or
push
or
test
xchg
jno
mov
adc
sub
bound
mov
pop
add
sub
lock
add
or
mov
ins
iret
jnp
enter
add
jl
adc
shl
mov
xor
test
cld
movs
xlat
stc
xchg
cmp
and
jae
jle
inc
iret
add
lea
push
add
inc
cmc
addr16
add
or
inc
inc
cli
outs
test
rol
push
mov
adc
sub
jg
or
xor
xchg
xchg
test
bound
mov
pushf
gs
(bad)
stc
dec
push
(bad)
sti
ret
sub
cld
ss
leave
adc
ficomp
sar
popf
dec
inc
sub
outs
setl
adc
mov
adc
stc
stos
push
xchg
and
dec
sahf
iret
sbb
outs
sbb
mov
int3
(bad)
jecxz
(bad)
arpl
jmp
xor
jecxz
jp
mov
bound
dec
(bad)
jmp
aam
mov
lea
aas
xor
ret
jl
lea
sub
dec
paddusw
or
sub
out
sbb
ret
xor
or
xor
push
(bad)
pop
out
mov
jo
in
and
addr16
sbb
mov
cli
mov
inc
jl
in
dec
add
jno
add
sbb
mov
cmp
push
and
push
inc
push
and
mov
pusha
xor
adc
ins
push
lods
and
sbb
dec
xor
cmps
lahf
rcr
fwait
cmps
inc
outs
test
pop
stos
sti
or
outs
fstp
(bad)
div
mov
arpl
inc
sbb
jge
push
(bad)
popa
lahf
cwde
cwde
cli
dec
mov
dec
cmps
(bad)
sbb
js
xchg
xor
sbb
xor
adc
inc
inc
and
jge
jmp
mov
sbb
mov
xor
jge
mov
and
(bad)
icebp
xchg
movs
cmc
mov
mov
mov
arpl
mov
mov
add
dec
add
add
retf
aam
add
dec
mov
jg
(bad)
mov
mov
imul
or
sub
hlt
add
or
pop
sub
xor
jmp
retf
aas
outs
test
mov
pop
adc
in
jecxz
scas
outs
retf
cmp
sbb
cli
mov
daa
stc
lahf
lahf
not
xchg
push
out
shl
aad
jmp
dec
and
leave
call
dec
je
mov
pop
dec
adc
xchg
lahf
aas
adc
fadd
dec
mov
pop
gs
xchg
cmc
test
sbb
inc
(bad)
ss
xor
mov
xchg
and
sbb
rcl
jmp
cmp
in
imul
pop
xchg
(bad)
jb
adc
ret
sbb
sub
data16
sti
test
xchg
daa
cld
jno
mov
add
mov
sbb
pop
add
cdq
add
or
cmp
adc
ja
mov
mov
rcl
xor
cmp
stos
push
int
xchg
mov
aad
or
jbe
pop
dec
jno
into
sahf
dec
sub
arpl
lea
cmps
cwde
push
test
movs
clc
jae
lock
dec
(bad)
mov
hlt
jge
lahf
jns
fist
xor
or
and
push
js
and
sar
inc
dec
pop
xor
push
test
and
movs
sub
aam
inc
push
lods
inc
or
mov
add
(bad)
jmp
push
add
aaa
and
js
push
sub
add
xor
inc
add
pusha
lods
fs
fs
sub
jmp
js
nop
mov
jmp
mov
sub
sbb
daa
rol
ret
sub
or
jg
sbb
add
and
sbb
jmp
jo
sub
ret
jp
xor
das
add
sbb
imul
cmp
mov
xor
std
jb
(bad)
popa
dec
add
mov
retf
cs
or
sbb
inc
mov
mov
shr
xchg
inc
sbb
add
inc
int
popf
test
fadd
dec
dec
add
mov
sbb
aam
in
inc
adc
js
mov
jno
iret
arpl
xchg
inc
sbb
fisub
out
jg
ror
fwait
mov
int3
jo
adc
mov
pop
in
cli
outs
imul
fnstsw
push
stos
sub
mov
jnp
add
jg
sbb
dec
cmps
mov
xor
ret
xor
in
inc
pop
out
xor
fsubr
cmp
inc
mov
pusha
sbb
mov
xchg
mov
add
adc
mov
mov
outs
loopne
inc
add
jecxz
jmp
and
cmps
mov
test
mov
mov
push
sub
jg
pop
pop
add
pusha
push
loop
jg
into
jl
jne
jae
xlat
outs
leave
cdq
add
mov
into
jnp
into
dec
or
add
inc
sub
popa
dec
and
push
ficom
or
mov
add
stos
scas
pop
push
jo
push
cwde
fisub
lahf
test
nop
pusha
sbb
cmp
scas
out
pop
mov
xlat
mov
mov
fwait
jbe
push
mov
test
pop
jecxz
and
jo
in
je
(bad)
movs
(bad)
pop
jo
in
or
push
xchg
push
mov
mov
xchg
les
mov
cld
lea
mov
in
mov
(bad)
jl
push
clc
or
inc
jp
inc
add
in
push
outs
lods
ins
pop
mov
(bad)
add
movs
(bad)
pop
jae
push
mov
repz
or
xchg
movs
push
adc
add
cmp
ds
adc
add
fadd
sbb
add
sbb
popa
pushf
cmp
(bad)
xlat
clc
ja
mov
fst
data16
xchg
jecxz
lock
(bad)
lock
add
repz
xor
inc
add
cmp
call
xchg
pop
mov
sbb
inc
rol
jmp
fs
xchg
(bad)
aam
cld
xchg
xchg
dec
pop
cmc
push
xchg
jmp
xchg
retf
cwde
jno
(bad)
out
or
ss
jl
cmp
sbb
xor
retf
lods
call
pushf
pop
aam
hlt
das
fcom
rcl
dec
add
fcom
add
out
int3
rdtsc
xchg
jmp
inc
adc
lahf
and
and
es
ins
btc
jle
push
jb
gs
mov
and
or
xor
cmp
(bad)
push
pusha
retf
jne
mov
in
mov
jae
pop
inc
push
outs
movs
div
aas
xchg
icebp
ficom
loope
mul
pop
in
cli
adc
xor
test
push
daa
test
mov
aaa
jo
mov
adc
mov
iret
and
adc
sbb
shl
loope
add
xchg
sbb
ret
cwde
int
xor
cmp
sti
sbb
jecxz
jo
add
push
xchg
mov
ja
outs
imul
mov
inc
iret
aas
mov
scas
fild
scas
inc
out
aad
inc
movs
call
sbb
sbb
xchg
fldcw
loop
lods
xchg
test
iret
dec
xchg
mov
sub
push
sub
and
dec
mov
test
test
stos
dec
ret
xor
rcr
mov
(bad)
loope
scas
pusha
sub
jge
lods
js
push
mov
jo
mov
imul
xor
cmc
mov
ss
stc
aaa
pop
jno
or
lea
or
nop
xchg
sbb
inc
xor
fs
clc
jl
out
shl
sahf
push
icebp
and
mov
fadd
lea
js
sbb
(bad)
out
xchg
popa
gs
push
mov
mov
fisttp
inc
out
imul
(bad)
movs
pop
sar
sub
scas
pop
push
cmp
mov
adc
cmp
sub
xor
sub
imul
and
cmp
or
cwde
in
clc
xor
and
add
sbb
cmp
ror
fxch
test
loopne
sbb
ficom
or
or
stos
add
mov
add
inc
movs
fsubr
mov
xchg
out
movs
pop
push
jne
je
adc
outs
sbb
aas
inc
jno
sbb
js
jl
cmc
pop
add
aaa
in
enter
adc
xchg
imul
vandnps
or
add
xchg
outs
ficomp
lods
test
cmp
mul
xchg
sub
daa
and
jmp
cmps
and
data16
lahf
add
rol
mov
ret
movs
fiadd
js
cli
fadd
jl
mov
add
rcr
test
xor
or
ror
jge
sbb
sbb
or
ins
mov
cwde
add
scas
rcl
mov
add
mov
retf
xor
xor
mov
mov
aas
js
out
jg
shr
inc
movs
(bad)
(bad)
mov
rol
ss
adc
in
push
sbb
fstp
xchg
(bad)
in
push
jg
xor
jne
ins
and
pop
add
mov
(bad)
fsub
cmc
dec
mov
stc
nop
push
popa
add
pop
int
popf
mov
push
push
ins
push
sbb
jbe
pop
test
fs
or
add
xchg
cmp
pop
std
mov
cld
(bad)
sub
call
aaa
in
enter
pushf
outs
mov
pop
bound
mov
jae
fidivr
mov
int
and
mov
add
mov
dec
and
ret
xor
jbe
test
mov
ds
daa
std
mov
in
xchg
ja
sbb
mov
fst
sahf
scas
pop
(bad)
xchg
outs
xchg
or
mov
jae
fstp
(bad)
fs
dec
sub
(bad)
jle
pop
pop
inc
xor
xor
sar
mov
add
push
repnz
test
or
sub
jg
inc
mov
xor
push
test
pop
ficom
mov
aad
(bad)
fdivr
sar
lea
mov
das
out
les
sub
pusha
sbb
addr16
aas
mov
(bad)
std
jecxz
pusha
add
inc
(bad)
std
mov
fwait
push
in
stos
imul
add
mov
pop
pop
mov
aas
(bad)
add
push
in
jg
xchg
cmps
retf
push
adc
xchg
mov
fs
test
pop
adc
cmp
loope
jbe
pop
in
cli
in
call
xor
push
test
inc
imul
dec
ror
je
add
pop
cmps
add
xor
xor
inc
push
push
pop
int3
je
fs
fdiv
ins
int
inc
inc
(bad)
std
mov
fwait
hlt
cwde
xchg
aam
xor
ffree
popf
popf
jne
dec
not
mov
jno
pusha
outs
fisubr
mov
or
xor
push
ret
pop
das
sub
pop
call
dec
jbe
mov
mov
shr
cli
mov
xor
mov
outs
fst
imul
push
mov
fnstenv
sub
pop
pop
ins
and
xor
out
(bad)
js
push
sbb
xor
push
outs
or
loope
pop
adc
or
cli
mov
or
pop
add
add
xlat
mov
test
xchg
mov
jg
(bad)
jecxz
mov
add
add
dec
(bad)
into
add
push
arpl
xchg
add
daa
adc
sti
mov
lahf
loopne
cmp
sar
push
add
in
adc
out
pop
add
fst
cmp
inc
lea
fld
mov
js
mov
mov
sbb
xor
fs
ret
xor
jmp
cli
das
mov
pop
bnd
cli
xchg
dec
mov
pusha
sar
mov
scas
call
inc
pop
xchg
sahf
cmps
inc
cwde
add
add
or
xchg
push
adc
rol
and
pop
mov
(bad)
mov
out
sub
pusha
sbb
aas
inc
out
ins
cwde
ja
or
sar
int
inc
dec
not
popf
pop
jne
adc
add
and
add
inc
pop
in
jne
push
(bad)
fist
ss
xor
add
xor
jno
das
(bad)
cld
or
sar
and
push
lahf
(bad)
fistp
xor
mov
jp
jle
or
add
add
pop
lea
inc
lds
stos
loope
test
inc
mov
and
adc
xchg
aad
push
pop
fstp
ja
test
(bad)
xor
call
ins
mov
and
jg
add
dec
add
jno
add
add
xor
loop
cmp
xchg
or
cwde
jae
outs
retf
mov
mov
pop
add
sbb
jae
lahf
jle
rcr
xchg
mov
cld
fistp
cmp
mov
add
mov
out
adc
jp
adc
aad
push
xchg
add
jno
sub
movs
lods
jns
out
add
add
inc
inc
cld
popf
cmc
mov
dec
retf
jmp
ins
xchg
inc
inc
nop
push
lahf
leave
loopne
out
cs
in
das
adc
(bad)
fmul
mov
or
inc
adc
push
gs
push
sbb
cmp
or
push
call
aas
dec
add
sbb
retf
loop
sbb
(bad)
in
adc
add
add
xor
push
(bad)
fs
out
sar
stc
(bad)
xchg
repz
repz
(bad)
div
(bad)
stc
adc
mov
pushf
ins
add
and
jmp
add
dec
cmps
add
daa
and
cmp
shl
loop
fldenv
and
mov
dec
adc
push
cmp
xor
xchg
pusha
pop
add
xor
inc
mov
push
aas
lds
jb
call
clc
fcmovne
jne
mov
add
xor
shr
das
fist
and
cmp
aad
int
add
ins
into
stc
mov
stos
add
(bad)
mov
mov
or
imul
popa
sbb
ja
les
(bad)
jno
inc
out
in
sti
adc
and
adc
mov
jl
mov
xor
daa
lods
mov
mov
mov
adc
arpl
and
and
int3
or
cmp
fmul
dec
sbb
mov
les
jno
inc
mov
push
jae
xlat
outs
or
jl
in
mov
cmp
bnd
sub
in
(bad)
adc
xlat
dec
pop
mov
push
add
cmp
add
push
xor
pusha
cdq
or
add
push
mov
mov
and
popa
sbb
and
jno
sbb
mov
inc
dec
mov
cld
dec
jmp
mov
aam
mov
arpl
push
sbb
retf
loopne
sar
mov
mov
out
retf
add
xor
add
jbe
xchg
mov
dec
push
cmp
shl
mov
adc
xchg
xchg
adc
clc
hlt
adc
add
aas
sbb
mov
pop
xchg
push
and
jae
mov
ins
movs
nop
fwait
or
xchg
cmc
jnp
lahf
sbb
jmp
adc
or
loop
retf
cwde
add
xor
adc
sbb
(bad)
xchg
shl
cmp
xchg
call
cmp
cmp
test
adc
pop
je
pop
mov
cmps
push
xchg
mov
mov
daa
nop
bound
add
sub
data16
push
cmps
jg
(bad)
mov
sub
sbb
ret
loopne
repnz
xchg
inc
je
pop
out
dec
mov
sti
and
neg
inc
(bad)
mov
mov
inc
dec
fst
jl
or
jno
ror
(bad)
jo
outs
mov
adc
ror
mov
sbb
mov
sbb
xchg
mov
or
sub
cmp
pushf
scas
call
pop
mov
dec
hlt
xchg
dec
mov
sub
loope
cmp
jmp
mov
inc
movs
fimul
pop
fstp
push
or
repz
fnsave
test
mov
push
rcl
and
dec
fstp
and
les
inc
adc
cld
or
fild
and
mov
cmps
adc
xor
pop
xchg
push
and
inc
pop
mov
push
jecxz
xchg
hlt
ffreep
ror
iret
iret
xchg
sub
fs
or
sbb
mov
xor
lahf
sar
mov
push
stos
test
arpl
inc
lea
in
je
mov
pusha
mov
cmp
(bad)
fisubr
call
adc
iret
inc
daa
cmps
xor
je
ret
xor
mov
ds
int
je
stos
mov
cwde
xor
jno
push
(bad)
cli
icebp
jge
mov
cmp
ins
dec
cmp
hlt
sbb
scas
(bad)
sti
pushf
mov
sahf
pop
push
xor
fstp
or
dec
add
hlt
das
jmp
xor
jno
ret
movs
ficomp
mov
adc
or
mov
movs
mov
in
mov
fwait
popa
sbb
pcmpeqd
std
xchg
mov
(bad)
jmp
mov
cld
jnp
out
cmp
xchg
sti
(bad)
cmc
jl
jne
adc
sti
loope
push
rcr
(bad)
into
mov
fs
(bad)
stc
(bad)
xchg
sbb
call
jg
pop
mov
xor
push
test
push
imul
loopne
in
sbb
sti
(bad)
(bad)
std
fdiv
xchg
mov
mov
popf
dec
xor
and
push
or
loopne
sub
fbld
aam
pop
and
into
dec
xchg
out
cmc
loop
add
fild
add
loop
inc
stos
dec
in
(bad)
loop
std
jg
loopne
cmp
out
mov
(bad)
mov
sub
pop
mov
jnp
cli
or
jae
(bad)
dec
pop
in
out
nop
jle
mov
in
repnz
jb
lahf
test
mov
inc
call
repnz
mov
out
push
out
int3
aaa
fdiv
rcl
inc
lea
inc
cvttps2pi
cs
cmp
adc
jno
sub
and
mov
test
sbb
pop
xchg
cmp
xchg
ja
sub
xchg
ins
adc
xchg
jno
inc
cmp
mov
inc
xchg
aaa
in
jmp
(bad)
cmp
loopne
pop
jmp
scas
jae
popf
cmc
outs
mov
out
out
scas
ja
jp
(bad)
jge
jns
fsub
ja
je
std
add
sbb
push
mov
fwait
pop
arpl
mov
scas
mov
jo
ficom
add
inc
es
bnd
or
lahf
mov
pop
or
into
dec
xor
mov
push
loopne
ret
jg
repnz
add
lock
shl
pop
jae
adc
add
aad
in
sub
add
sbb
add
je
sub
or
cwde
or
jmp
xchg
or
mov
dec
inc
mov
(bad)
ja
pop
lea
sbb
scas
ret
leave
ins
lods
or
mov
ja
fst
mov
mov
cmp
jge
out
xchg
add
xchg
xchg
mov
lahf
ds
jge
call
repz
mov
fwait
out
inc
cmp
lea
inc
repz
icebp
call
xchg
jne
out
iret
arpl
stos
out
mov
fmul
imul
xlat
inc
push
hlt
call
and
mov
mov
sub
sbb
jmp
or
mov
pusha
mov
imul
sbb
xlat
fs
mov
push
jae
xchg
lock
adc
and
xor
dec
mov
mov
jb
jp
adc
xchg
push
ja
imul
cld
sbb
imul
jno
jl
inc
add
bound
mov
mov
into
or
sbb
inc
loopne
or
cs
xlat
pop
jbe
adc
addr16
mov
sti
out
addr16
sahf
jecxz
nop
xor
loop
mov
jg
mov
out
out
ds
mov
jl
add
mov
out
aaa
adc
jle
in
not
mov
inc
repz
jmp
jecxz
js
sahf
xchg
out
aam
jl
lock
add
lock
xchg
push
sar
dec
and
jp
mov
gs
aaa
leave
sub
dec
aam
mov
(bad)
pop
or
jno
(bad)
dec
fiadd
mov
fwait
movs
test
or
jmp
sti
outs
fcom
pop
mov
call
(bad)
fwait
ja
pop
outs
outs
sub
cmps
adc
pop
push
pushf
adc
xchg
add
push
adc
or
jg
add
das
xchg
aad
or
mul
xchg
scas
(bad)
jb
aaa
mov
push
je
pushf
cmp
cmc
cmp
outs
(bad)
fiadd
test
lahf
xchg
xor
mov
mov
call
and
loop
ds
sbb
or
stos
cmps
iret
jo
(bad)
retf
scas
lahf
cmp
std
inc
out
in
jp
outs
and
pop
adc
pop
xchg
cmp
add
out
icebp
ret
fld
jbe
jl
loopne
add
cmp
jp
xlat
sub
sbb
pop
jecxz
mov
or
fmul
std
inc
repz
sti
mov
jno
add
fidiv
push
scas
dec
into
mov
add
aad
mov
xlat
js
mov
cmp
adc
cli
dec
inc
pop
cmp
adc
shl
jge
inc
bound
sbb
adc
or
inc
adc
les
das
sub
arpl
mov
jbe
retf
movs
lock
movs
fmul
jge
mov
mov
test
out
push
cmps
(bad)
mov
gs
sub
ficom
aas
and
and
icebp
popf
xchg
sti
mov
xchg
out
popf
jmp
mov
cmc
rcl
pop
adc
stos
and
in
xchg
jmp
popf
adc
dec
adc
aad
cmp
and
cs
xor
cmps
stos
cld
mov
iret
std
cmp
add
jg
das
(bad)
movs
shr
dec
xor
sub
jle
jns
push
adc
fmul
xchg
in
dec
or
js
mov
popa
test
popf
dec
jmp
in
mov
rcl
sub
lock
iret
daa
shl
ficomp
sbb
(bad)
cli
jmp
inc
cld
cmps
mov
loop
jno
dec
push
mov
test
and
(bad)
fisttp
mov
mov
xor
jnp
cmp
lahf
inc
mov
iret
pop
cli
mov
lods
fs
(bad)
addr16
aas
sbb
or
test
je
mov
popa
jns
add
mov
or
mov
(bad)
iret
xor
dec
call
mov
jno
cs
mov
dec
or
mov
shr
aaa
call
push
xchg
inc
stos
adc
ins
inc
cmp
idiv
pop
push
arpl
and
shr
int3
xor
jmp
popf
xchg
and
inc
test
out
mov
ret
jmp
shr
jecxz
out
ret
jecxz
(bad)
int3
test
inc
clc
cmp
pop
inc
loop
retf
mov
in
dec
and
jecxz
inc
jb
sti
repz
test
repz
cdq
out
mov
lds
(bad)
xchg
cli
add
out
cmp
enter
mov
and
loopne
adc
add
adc
add
inc
jo
popa
fwait
pusha
(bad)
ja
inc
pop
(bad)
repz
les
xchg
xor
repz
jecxz
outs
ficomp
xchg
pop
imul
add
aad
pop
push
pop
sbb
outs
lods
sbb
mov
mov
add
and
sar
or
pop
popf
repz
cmps
mov
ins
sbb
aaa
add
xor
push
es
inc
inc
mov
jbe
xlat
stc
xor
aad
pop
mov
dec
jmp
dec
add
jmp
sahf
les
mov
ins
push
or
addr16
sti
iret
sahf
cmp
pop
sbb
lock
loope
add
and
(bad)
mov
mov
pop
lods
and
retf
out
nop
aad
inc
xchg
xor
std
ss
sti
xchg
push
test
fs
jecxz
or
adc
in
sub
dec
ins
or
test
xchg
outs
imul
dec
xor
test
clc
cmp
ror
jmp
sbb
mov
cld
or
stos
push
push
movs
movs
mov
les
lds
ja
rol
xor
add
es
movs
mov
mov
loopne
jne
mov
adc
aaa
pop
and
aas
ret
std
pop
into
in
out
inc
cmp
adc
pushf
dec
(bad)
iret
cdq
jne
clc
sbb
aas
shl
and
xor
push
in
sub
xchg
adc
xchg
aad
sar
es
fist
fstp
push
sub
adc
cmp
lea
push
sbb
and
jmp
and
repnz
jmp
or
mov
or
popa
add
inc
or
mov
jge
call
push
imul
mov
push
lahf
mov
add
adc
pop
adc
xchg
lods
mov
sub
ret
leave
test
les
mov
mov
pop
pop
dec
mov
test
arpl
xchg
jae
int
inc
loopne
or
mov
aas
mov
les
mov
dec
jecxz
popf
jb
mov
outs
(bad)
movs
ins
bound
fisttp
lods
mov
lock
je
mov
fcmovne
and
daa
push
mov
scas
fstp
mov
dec
(bad)
jecxz
sbb
inc
and
sub
push
rcl
sbb
iret
fwait
je
repnz
cmc
dec
push
mov
popa
dec
sbb
(bad)
jno
jle
jnp
pop
mov
out
mov
mov
cmc
(bad)
fwait
jb
push
ret
shl
cld
sbb
int3
add
loopne
mov
loope
xchg
mov
cld
std
repz
out
out
mov
sub
shr
in
(bad)
jmp
xor
cmp
scas
xchg
or
mov
outs
ficom
aaa
test
mov
pop
or
imul
mov
push
xor
or
cmp
fadd
je
xor
push
or
jb
test
xchg
fstp
ret
jae
mov
bswap
jne
jle
sahf
sbb
dec
and
popf
jle
rcr
sub
or
add
sub
(bad)
int
iret
aas
xor
fnsave
sbb
jp
mov
lods
ss
xchg
push
repnz
lea
jl
mov
pop
ficom
or
add
jp
ins
xor
push
test
lea
and
mov
push
xchg
and
sbb
pushf
(bad)
mov
mov
out
ror
fist
cmp
fnstsw
xlat
mov
mov
sbb
mov
mov
sbb
iret
test
add
hlt
repz
sti
neg
icebp
cmc
pushf
inc
fadd
mov
push
mov
xchg
adc
dec
and
push
jbe
ficomp
add
cli
mov
push
pop
mov
push
mov
xchg
rcl
imul
out
into
sti
add
js
xor
xchg
mov
repz
sub
in
add
fdiv
push
or
mov
popf
in
mov
and
pop
cmp
popf
(bad)
out
dec
aas
cmp
sbb
xchg
or
mov
int
movs
fisubr
stos
jge
xchg
cwde
(bad)
cmps
and
call
pop
mov
xlat
je
neg
add
cmps
inc
stos
adc
mov
jle
(bad)
movs
push
std
xor
sbb
inc
and
clc
dec
scas
adc
ins
xchg
mov
pop
jle
sahf
sti
mov
dec
push
daa
clc
dec
push
cmp
cmp
push
push
cld
lock
out
sub
aas
xlat
addr16
ja
inc
inc
hlt
or
dec
clc
sbb
aad
fisub
xchg
or
sti
outs
ficom
fbstp
pop
cmp
mov
mov
adc
ret
add
mov
test
xor
(bad)
shl
js
fidiv
fistp
pushf
aas
add
popa
fnstsw
ret
mov
cmc
add
aas
xchg
sub
and
cdq
pop
or
jb
dec
or
add
imul
xchg
mov
mov
or
out
adc
aaa
fstp
xchg
outs
pop
(bad)
outs
add
stc
call
push
scas
fstp
sbb
loop
add
inc
push
jecxz
mov
pop
shl
inc
repnz
std
movs
xchg
aas
mov
cmps
sti
int
lahf
jle
cdq
add
sbb
popf
mov
jae
shl
test
add
cwde
cmps
push
(bad)
sub
(bad)
push
jmp
loopne
cmp
mov
out
out
in
sub
out
cs
add
scas
mov
adc
jo
push
outs
mov
adc
xor
cmp
push
pop
imul
js
add
iret
iret
or
enter
iret
jge
into
lahf
jge
jge
lahf
cmp
pop
jl
shl
or
ja
add
and
mov
add
mov
jns
dec
add
xchg
mov
std
fdivr
cli
mov
icebp
push
jmp
xchg
adc
jmp
dec
sub
or
ficomp
js
jae
loopne
sbb
cmc
dec
dec
and
sub
sbb
pop
adc
jb
fcom
jne
stc
aas
jns
pop
imul
adc
call
cli
inc
inc
adc
and
ror
dec
pop
jmp
fcmovnbe
(bad)
pop
ins
aas
cdq
js
and
mov
mov
jg
outs
fisttp
addr16
mov
sar
addr16
mov
inc
movs
pop
arpl
inc
xor
lods
or
les
rcl
rcr
and
cmp
pusha
pop
xchg
lahf
aad
or
test
sbb
xlat
mov
sar
cmps
jb
inc
xchg
inc
xchg
pop
dec
(bad)
test
adc
mov
lds
out
cmp
(bad)
push
cmp
and
(bad)
sbb
add
mov
pop
pop
mov
mov
push
test
outs
pop
jecxz
scas
ret
sub
mov
sbb
ss
imul
sbb
jg
dec
fst
xchg
repz
xchg
inc
pop
arpl
ss
add
test
lock
jae
jb
test
pop
adc
mov
mov
bound
pop
xor
or
cli
out
push
hlt
fbld
xchg
push
fcomp
sar
pop
inc
popa
mov
push
int3
add
mov
pusha
sub
in
in
or
sbb
add
add
dec
mov
sub
lds
jmp
arpl
fnop
xchg
hlt
rol
fdiv
ficomp
sar
(bad)
jp
cmp
adc
retf
dec
ins
leave
or
scas
call
dec
jp
ret
call
inc
xor
in
and
and
jmp
mov
ficomp
and
lock
sbb
dec
cmp
fistp
xlat
jge
mov
inc
mov
mov
nop
add
mov
xor
push
add
jae
sbb
adc
add
cld
leave
or
hlt
xchg
jmp
xor
popa
push
(bad)
jmp
std
mov
sub
mov
sub
mov
scas
xor
and
add
stos
add
add
out
ja
ret
xor
sar
jae
lea
(bad)
pop
jmp
push
push
push
add
out
sahf
arpl
test
fwait
mov
ret
or
mov
(bad)
jg
sti
lds
sbb
add
inc
mov
jns
popa
push
movs
pop
cwde
add
or
sbb
inc
sbb
mov
fcomp
scas
inc
add
or
or
mov
es
addr16
clc
cmc
(bad)
out
(bad)
xchg
cmp
sqrtps
out
pop
lahf
out
sahf
mov
mov
shl
or
(bad)
xor
jmp
sti
fstp
sbb
inc
adc
mov
or
jo
jae
js
outs
popa
push
jle
pop
pop
or
cmps
sub
aam
inc
push
mov
outs
faddp
aad
pop
frstor
cmc
add
pop
imul
cli
push
arpl
shl
push
push
jg
rol
add
mov
cmp
mov
imul
call
mov
add
and
push
xchg
sbb
mov
add
add
mov
inc
das
add
js
add
add
inc
repnz
repz
sbb
sub
and
mov
push
pop
dec
and
or
ja
jnp
push
into
loopne
inc
jmp
add
adc
repz
jle
pop
dec
push
mov
and
or
out
jnp
(bad)
in
ret
das
sbb
xor
aas
inc
outs
pop
iret
xor
(bad)
(bad)
jecxz
xor
add
(bad)
call
jg
cwde
or
mov
mov
sbb
popa
push
add
add
loop
mov
cld
cwde
add
sub
fs
loopne
scas
stc
jo
and
fs
je
fs
repz
dec
mov
pop
ins
or
jp
pop
cld
dec
icebp
pop
push
add
lock
adc
xchg
outs
push
mov
inc
hlt
popa
popf
daa
repz
and
enter
in
push
call
xor
jmp
push
xor
in
std
repz
cld
call
add
adc
fdivr
rcl
repz
push
bound
add
and
cmp
repnz
(bad)
ins
test
mov
pusha
lahf
cwde
jo
cld
mov
stos
add
into
sub
inc
daa
mov
pop
or
das
or
jge
sbb
(bad)
and
loop
les
gs
hlt
adc
cld
add
fdiv
adc
jb
add
push
add
xor
add
ja
xor
(bad)
jle
inc
add
mov
fld
ds
sub
aas
mov
shl
cmp
out
jbe
inc
(bad)
sti
stos
(bad)
or
push
mov
cmp
xchg
std
cmp
adc
push
nop
push
adc
cmps
adc
xchg
push
add
mov
or
(bad)
hlt
xchg
sub
push
aaa
add
adc
or
adc
sub
mov
sbb
arpl
push
xchg
dec
sti
push
fs
jb
fsub
clc
arpl
(bad)
sahf
loop
cli
sub
popa
add
cdq
add
daa
jae
xor
int3
add
push
push
dec
in
or
ss
sub
add
movs
mov
outs
ret
xor
ja
add
outs
add
adc
cmp
add
mov
loopne
jl
lea
xchg
cld
lods
out
sar
cmp
arpl
inc
(bad)
mov
cmp
mov
aam
mov
cld
outs
ficom
add
or
or
inc
add
fiadd
lahf
or
(bad)
shl
xchg
add
nop
add
std
jae
adc
aad
int3
cmp
and
mov
mov
add
add
in
ffree
push
das
push
(bad)
aaa
out
into
stc
in
in
clc
jp
pusha
nop
pop
pop
add
and
mov
rol
xor
add
mov
sbb
rcr
and
aas
out
enter
dec
and
jnp
cmc
add
(bad)
popa
sbb
xchg
add
mov
out
add
push
imul
mov
jne
pop
adc
stos
sbb
(bad)
push
(bad)
pusha
mov
pushf
lock
(bad)
imul
pop
cmps
push
(bad)
lock
js
push
xchg
in
gs
bswap
cdq
sbb
dec
add
jno
sub
clc
pop
fadd
xor
sbb
scas
add
in
and
fmul
(bad)
arpl
cmp
sbb
jg
nop
cmp
xor
push
stos
adc
or
xchg
mov
jecxz
cmc
lock
div
and
adc
xor
sti
shl
jecxz
out
(bad)
js
mov
stos
mov
ficomp
or
cwde
cmps
and
pop
cmp
out
dec
(bad)
jl
aas
fldenv
repz
xchg
lock
xchg
test
mov
push
mov
addr16
or
dec
jae
mov
adc
push
and
push
adc
call
lds
mov
sbb
cmp
aas
push
out
jnp
mov
test
xor
ficom
out
lea
cmc
scas
cmc
mov
stc
or
inc
push
(bad)
cmp
out
scas
fimul
inc
jle
lods
ds
cs
inc
pop
ficomp
mov
add
lods
add
movs
mov
cdq
jne
fs
cmps
loope
retf
add
sbb
sub
les
retf
dec
test
movs
xor
or
xor
jl
popf
and
out
cmp
sar
popf
sti
mov
inc
mov
add
jae
sbb
jge
fidivr
mov
jp
sbb
mov
icebp
push
mov
ins
fadd
(bad)
xor
aas
mov
(bad)
sbb
jecxz
iret
clc
int
adc
xor
out
scas
or
add
leave
(bad)
or
mov
ins
mov
adc
inc
add
push
in
pushf
adc
cmp
lods
mov
mov
daa
and
je
push
call
or
movntps
sub
inc
adc
cld
and
sub
xchg
pop
xchg
mov
popa
stos
mov
fisttp
pop
fmul
pop
call
add
(bad)
sub
push
daa
mov
das
lahf
cmp
std
clc
loope
out
imul
mov
xchg
ja
div
sar
mov
std
loope
leave
js
xlat
hlt
(bad)
mov
sbb
fdivrp
jmp
cld
sbb
lods
out
xchg
aas
shr
fbstp
rcr
add
movs
dec
xor
adc
xchg
push
jnp
push
mov
aam
sub
inc
rcl
inc
jmp
std
rcl
nop
xchg
arpl
cs
addr16
fcomip
jmp
and
dec
dec
xor
enter
pop
sbb
sub
mov
ret
outs
dec
pop
daa
push
jge
inc
into
jge
pop
fidivr
(bad)
into
xchg
jecxz
or
mov
inc
inc
push
inc
sti
and
fidivr
mov
fmul
pop
repnz
mov
xchg
jb
je
pop
(bad)
fcomip
mov
icebp
jle
push
adc
idiv
inc
inc
jmpw
mov
retf
dec
mov
sub
sub
sbb
sbb
lea
mov
adc
push
(bad)
out
mov
dec
xchg
inc
cmps
sbb
push
mov
js
(bad)
into
xchg
fs
add
repz
ret
sbb
jl
scas
fstp
fstp
pop
jmp
out
into
mov
mov
retf
popa
js
popa
add
fdivr
fwait
bswap
jne
mov
aaa
out
push
pop
scas
fisub
arpl
cmps
loop
pop
ss
push
(bad)
js
pusha
sub
pop
std
sub
repz
mov
repnz
or
(bad)
or
lahf
hlt
(bad)
pop
push
adc
add
aad
dec
xor
push
imul
add
clc
dec
add
add
add
mov
ja
das
push
and
call
add
jecxz
xor
mov
sahf
pop
imul
jnp
pop
into
mov
ret
jae
jecxz
jmp
inc
pop
mov
out
jnp
jmp
push
adc
(bad)
sbb
aad
inc
jno
dec
(bad)
aad
adc
add
pop
xor
pop
mov
out
inc
in
inc
shl
faddp
mov
jg
ins
sub
mov
inc
lea
or
retf
sbb
xor
shl
je
cmp
test
ret
(bad)
pop
dec
and
xchg
leave
iret
movs
sbb
iret
out
pop
test
mov
mov
jo
gs
(bad)
test
mov
mov
fdiv
out
fwait
jecxz
jno
out
pop
jmp
or
loopne
or
dec
(bad)
shr
or
pop
fcom
xchg
pop
sub
ret
mov
sub
push
hlt
adc
out
in
sub
retf
icebp
aaa
fnstsw
mov
fcmovnu
or
add
(bad)
fld
mov
(bad)
sbb
or
in
stc
add
imul
nop
clc
cmp
popa
mov
pop
jmp
mov
xchg
mov
mov
loopne
mov
dec
mov
xchg
mov
dec
pop
fwait
out
mov
out
sub
test
dec
inc
add
(bad)
(bad)
ins
jle
push
jmp
sbb
adc
inc
out
jmp
je
popa
stc
xchg
shl
(bad)
pop
jbe
fwait
outs
fcom
add
sub
or
jmp
ins
int3
repnz
cs
fbld
xor
mov
inc
or
pop
jmp
xchg
movs
popa
sbb
add
adc
push
add
mov
mov
add
mov
xor
rol
cwde
adc
or
stc
retf
stc
mov
dec
lods
jnp
or
fs
mov
mov
mov
mov
jl
pushf
pop
scas
aas
inc
add
(bad)
or
ins
sub
outs
mov
iret
imul
cmp
pop
dec
jle
into
into
ret
shl
int3
repnz
into
and
pop
and
(bad)
shl
add
ret
cmp
add
mov
add
mov
(bad)
sub
pop
aas
pop
jo
cmp
inc
cwde
gs
(bad)
cmp
(bad)
jae
xchg
jmp
lds
pop
xchg
push
jecxz
rcr
dec
adc
sti
std
push
ins
jno
pop
cmps
das
mov
inc
(bad)
pop
mov
shl
jl
pushf
jg
mov
(bad)
outs
ficom
mov
shl
xor
and
dec
or
test
inc
add
test
out
dec
xor
xchg
pushf
add
add
in
xchg
jnp
out
imul
aas
push
xor
shr
movs
popf
nop
xor
clc
test
mov
imul
sbb
cmp
repz
add
sbb
xchg
fcomi
ja
clc
aaa
test
ds
dec
cwde
lahf
test
add
ret
retf
cmp
sbb
sti
xor
outs
pop
mov
(bad)
pop
jae
aaa
xor
sbb
sub
jne
adc
in
popa
adc
add
pop
and
inc
sbb
sahf
push
sahf
xchg
pop
and
inc
mov
or
fist
jl
inc
fidivr
dec
popf
sti
rol
fisttp
fwait
out
xchg
dec
aam
inc
pusha
cli
mov
popf
ins
or
dec
xchg
into
jne
mov
pushf
jg
std
inc
int3
jmp
pop
test
pop
ja
clc
pop
inc
aam
retf
aas
imul
or
jae
add
sub
xor
ret
scas
shl
or
aaa
out
inc
jecxz
(bad)
mov
out
fsubr
not
mov
or
out
dec
lds
xchg
movs
call
push
in
lods
je
dec
(bad)
std
or
sbb
pop
xchg
and
jbe
push
add
or
xchg
fdivr
repnz
mov
stc
mov
leave
xchg
push
sub
movs
mov
daa
inc
cld
xor
addr16
xchg
out
pop
out
aad
jns
fsub
lea
add
adc
stc
xor
add
rcl
popa
push
mov
push
xchg
sbb
mov
cld
mov
jg
pop
mov
cwde
add
mov
loope
fcmovb
jmp
jb
aaa
out
into
rdtsc
xchg
aas
jge
hlt
test
jno
arpl
adc
daa
mov
test
sub
mov
inc
or
adc
push
cs
adc
xchg
sbb
retf
push
add
and
add
and
sub
sti
fcmovb
mov
jae
repz
add
bnd
cmp
test
adc
scas
jmp
je
mov
outs
jmp
inc
std
dec
iret
nop
repnz
repz
jb
lds
adc
push
and
aam
jle
add
(bad)
lock
adc
xor
mov
cdq
cmps
ins
in
push
jge
retf
(bad)
imul
aam
fisubr
mov
cwde
add
adc
dec
mov
mov
aas
sub
dec
dec
add
dec
adc
or
int3
sti
mov
sub
add
mov
inc
mov
aaa
xor
jecxz
into
add
add
cmp
xchg
std
cmp
int
add
fmul
shl
sbb
sbb
shl
dec
aad
cmp
xlat
sbb
iret
mov
in
and
imul
jecxz
mov
inc
mov
sbb
xor
push
mov
out
cld
pop
sub
(bad)
cwde
jmp
pop
retf
mov
out
xor
outs
push
and
and
stos
dec
popf
aad
loopne
xchg
jecxz
nop
push
(bad)
retf
inc
xchg
loope
jne
dec
cmp
or
ret
test
ds
adc
push
sar
daa
push
ror
add
and
shl
and
sbb
(bad)
mov
mov
and
stos
cld
xchg
out
inc
ss
mov
rol
adc
xlat
scas
sahf
sub
(bad)
icebp
mov
fs
adc
jmp
pop
pop
or
cdq
xor
jmp
push
stc
daa
push
call
add
fistp
ss
int
pop
xor
cmps
mov
pop
cmps
(bad)
pop
(bad)
jmp
outs
sbb
daa
imul
or
mov
inc
scas
pop
jle
add
push
mov
jno
scas
pop
pop
fld
sbb
inc
retf
xor
cwde
popa
mov
add
cmp
cwde
stc
sub
sub
mov
mov
rcr
dec
and
xchg
sbb
mov
ror
sub
fadd
push
jo
xor
out
dec
shl
unpckhps
mov
push
jmp
cli
clc
cmp
(bad)
xchg
lods
sbb
lods
sbb
mov
fisttp
adc
adc
retf
icebp
mov
jg
push
fild
xchg
inc
mov
out
ja
mov
sbb
out
jge
pop
(bad)
pop
(bad)
fsub
dec
jnp
mov
lds
ins
sub
mov
aas
js
mov
add
fucom
cld
add
push
cmp
add
or
ror
sbb
outs
xor
or
xor
adc
inc
or
add
sbb
xchg
ss
ins
xchg
xor
and
add
mov
jle
inc
add
dec
inc
inc
dec
mov
out
lods
ja
jl
aam
push
sub
popf
sbb
lods
aad
xchg
mov
and
pop
aad
mov
xchg
bound
sbb
sub
retf
cld
dec
sbb
clc
dec
loopne
and
jmp
hlt
xlat
push
into
aas
ret
mov
rcr
clc
pop
mov
xor
mov
inc
movs
fwait
pop
add
sbb
add
ja
jge
stc
mov
aaa
clc
fs
push
add
add
sti
sti
push
ins
sbb
jno
inc
cmp
mov
ja
cmp
call
xchg
ret
jmp
dec
sar
test
pop
pop
shl
mov
or
cdq
inc
cld
pop
icebp
jae
call
leave
cld
mov
cmp
sti
leave
scas
and
jb
ret
jne
mov
pop
mov
add
jg
pop
fdivr
xchg
scas
rcr
call
pop
pop
mov
or
xor
push
scas
lods
ins
adc
add
aad
pop
sbb
cwde
add
or
icebp
inc
fimul
pop
mov
dec
cmp
inc
push
or
and
retf
mov
into
loopne
or
or
in
and
and
and
in
add
pop
adc
(bad)
push
add
(bad)
pushw
fwait
lods
push
retf
or
lods
sbb
out
xor
out
addr16
clc
mov
xor
push
or
fbld
int
xchg
ds
aam
mov
mov
add
sub
mov
jle
xor
push
pusha
or
std
dec
or
or
push
(bad)
movs
(bad)
jmp
xor
add
sub
sbb
pop
add
and
in
cwde
push
and
inc
mov
(bad)
lahf
outs
loop
xor
ins
es
add
and
xchg
sub
push
pushf
push
cmp
fadd
not
outs
and
mov
jb
cmp
(bad)
xchg
fsub
je
push
fld
div
jmp
jl
xchg
dec
jmp
cmp
mov
add
das
mov
ret
mov
retf
scas
jecxz
sbb
in
inc
add
out
or
(bad)
sub
call
mov
sbb
mov
lea
nop
or
bound
push
xchg
imul
mov
rcl
xchg
push
or
xchg
leave
adc
xchg
sub
inc
and
dec
pop
sbb
mov
and
adc
or
xchg
adc
idiv
xor
push
aas
add
mov
fwait
add
jno
je
xchg
lods
out
icebp
jge
ficom
lahf
cmp
dec
jmp
std
(bad)
cld
or
adc
push
(bad)
xchg
inc
mov
(bad)
cmps
iret
out
jge
fcmovb
stc
ret
test
add
stos
das
xchg
test
mov
mov
(bad)
mov
inc
nop
(bad)
jmp
in
push
out
retf
adc
xchg
push
ins
retf
aad
(bad)
imul
add
jmp
mov
dec
mov
ins
sbb
push
es
add
aaa
out
sahf
aas
mov
xor
out
push
lock
inc
bound
fimul
jl
adc
bound
cwde
jecxz
push
pushf
jecxz
push
test
add
cmps
and
and
inc
ror
cmp
inc
jecxz
(bad)
sbb
dec
loopne
lock
sub
addr16
mov
mov
inc
clc
dec
jnp
aas
jg
cli
jne
mov
adc
dec
clc
je
je
test
(bad)
mov
cmp
push
je
xchg
mov
clc
pushf
js
add
ficomp
jmp
bound
mov
mov
jb
stos
(bad)
(bad)
cli
sbb
stc
(bad)
jle
(bad)
cmps
fistp
or
call
cmp
outs
dec
jmp
mov
jmp
sbb
push
mov
add
push
bound
add
loopne
retf
mov
jl
loopne
adc
pop
nop
and
cmps
pushf
and
adc
in
inc
das
push
enter
loopne
adc
xchg
test
pop
loope
adc
(bad)
stc
and
clc
mov
add
jnp
inc
loop
dec
out
and
jmp
test
les
push
jle
hlt
(bad)
mov
add
push
fwait
inc
out
add
add
cmps
jno
cmc
into
repnz
neg
shl
(bad)
out
rcr
cmp
add
aad
dec
xor
adc
jle
and
jmp
mov
in
mov
pusha
sbb
add
mov
mov
xchg
and
loopne
bound
add
call
jae
xor
cmps
or
mov
mov
adc
(bad)
je
mov
les
loopne
sub
or
and
loopne
inc
hlt
into
arpl
ds
iret
int
inc
inc
(bad)
and
into
(bad)
push
jle
movs
jp
not
xchg
pop
lock
or
ror
pop
and
mov
jge
bnd
daa
data16
daa
sar
out
sub
and
das
mov
sub
in
outs
outs
sub
jnp
add
ficomp
adc
movs
loop
cwde
jmp
add
xchg
add
xor
push
mov
pop
sub
and
cmps
inc
add
call
xor
loopne
jb
inc
xlat
cmp
add
loope
popf
xor
jnp
pop
mov
es
jo
mov
cmp
mov
repz
movs
test
js
(bad)
in
jge
(bad)
repz
dec
pop
mov
mov
cmps
int3
stc
daa
add
dec
nop
jmp
bound
xchg
sar
add
xchg
jge
add
aad
in
cs
fst
pop
ficomp
pop
mov
cld
movs
jb
dec
test
mov
push
fprem
xchg
cs
add
scas
ja
xchg
mov
cmp
inc
xchg
and
pop
mov
push
sub
dec
into
cmp
xor
push
ficomp
jne
sub
pop
out
retf
and
clc
cwde
ror
retf
jp
scas
cmp
mov
xor
and
aas
inc
add
fst
(bad)
jnp
jns
cwde
sti
daa
pusha
les
mov
jbe
inc
jecxz
test
repnz
inc
shr
add
movs
call
mov
mov
mov
xor
daa
icebp
xor
pop
cmp
mov
xchg
xor
(bad)
adc
scas
mov
into
jno
sbb
jecxz
mov
push
sub
or
inc
int
fisub
jne
mov
call
fs
jg
std
int
cs
pop
cli
mov
adc
pop
add
add
sbb
mov
lock
cmp
sti
shl
not
mov
sub
sbb
aaa
out
into
bswap
lahf
hlt
retf
mov
jmp
inc
movs
call
pop
aaa
mov
mov
(bad)
fdivrp
cmp
fsub
push
lods
pop
mov
aad
in
or
sbb
dec
adc
cld
fsubr
addr16
rcr
sbb
scas
sub
(bad)
popa
inc
out
in
sub
lods
xlat
lods
fs
dec
mov
test
out
scas
and
fiadd
jle
aad
es
sbb
push
hlt
jo
fcomip
(bad)
pop
inc
adc
out
lock
int
shl
test
mov
test
or
push
pop
pop
jmp
ror
in
fwait
inc
dec
xchg
aas
jecxz
shr
cmp
retf
lock
dec
add
cmp
jge
xchg
jns
(bad)
sti
out
out
sbb
clc
hlt
aaa
sub
push
add
fimul
sbb
pop
(bad)
into
jae
cmp
xor
add
jno
cmp
mov
fadd
or
mov
fcmovnu
or
pushf
iret
add
jecxz
lods
ds
xlat
test
sbb
sbb
xchg
pusha
xchg
pop
cmp
push
or
jbe
fadd
ret
test
loop
iret
pop
add
ja
add
ffree
out
pop
dec
add
loopne
cmp
cmp
shl
cmp
rcr
(bad)
iret
pop
call
sbb
push
lahf
out
mov
add
fsub
cmp
pop
mov
push
std
das
ficomp
ret
ds
adc
mov
aam
sti
in
ins
or
or
xor
jmp
ret
dec
mov
outs
pop
and
(bad)
(bad)
fsub
mov
push
cmp
sub
add
add
push
add
xchg
add
fst
repz
add
cmps
into
push
in
or
cdq
add
add
ja
or
(bad)
clc
mov
pop
or
add
out
popf
add
inc
add
scas
(bad)
call
call
jmp
add
jg
add
mov
add
add
xor
jb
aas
cmps
add
add
das
fcomp
mov
data16
add
retf
add
sbb
ja
fidiv
xlat
mov
push
sbb
enter
adc
mov
jmp
std
sti
jmp
jp
ins
sti
lds
out
dec
mov
mov
idiv
jmp
test
scas
or
iret
aam
aas
in
cmps
sub
xor
mov
loopne
cmc
adc
out
push
xchg
aad
add
mov
xor
cmp
or
lods
push
dec
xor
and
into
das
add
push
and
xor
in
sub
cmp
(bad)
jge
loope
out
out
into
ja
jle
or
xchg
sbb
out
jg
jo
pop
push
pop
out
dec
add
ss
and
xchg
fdiv
add
xchg
outs
mov
movs
icebp
pop
ins
jg
add
mov
(bad)
sbb
(bad)
jp
cwde
sbb
pop
lock
out
icebp
jnp
or
fisub
add
dec
add
mov
dec
xor
ret
bound
addr16
add
fld
add
xor
jecxz
xchg
push
add
cmc
jge
in
dec
mov
fmul
and
ins
ja
(bad)
mov
sbb
push
es
stc
sbb
in
enter
(bad)
mov
mov
jbe
pushf
jmp
mov
mov
adc
hlt
test
jmp
mov
ret
dec
jecxz
sbb
cmp
(bad)
jp
mov
fst
cmp
movs
fstp
aas
repz
xor
jp
daa
cmp
add
aad
ins
popa
mov
xor
pusha
sbb
xor
cmp
nop
and
push
(bad)
aad
pop
sub
add
push
cmp
pop
adc
ss
inc
fs
aas
mov
ins
adc
mov
xor
lods
call
pop
repz
or
pop
adc
inc
pop
nop
test
sbb
mov
or
popa
add
add
(bad)
xlat
ins
jg
xor
sub
and
nop
push
fdiv
(bad)
ja
cmps
add
fmul
push
out
xor
pusha
sbb
dec
adc
aam
jo
loopne
jb
das
sub
jmp
adc
clc
cmp
ins
cmp
push
jnp
cdq
inc
xor
or
xor
mov
outs
cmp
mov
dec
int3
jno
rcl
xchg
or
add
jmp
or
push
fsubr
cmps
jge
das
(bad)
sar
scas
dec
push
xchg
ret
mov
sbb
add
mov
sub
mov
cmp
arpl
inc
xchg
enter
lds
cmps
xor
jp
or
add
lahf
xchg
arpl
out
mov
dec
add
and
xchg
cmp
mov
fst
and
nop
inc
sahf
(bad)
clc
ficom
in
ret
dec
mov
fldenv
xchg
jno
adc
out
push
in
inc
dec
pop
pop
adc
mov
pusha
cmp
and
jg
(bad)
mov
pop
imul
push
pushf
sti
push
ror
out
or
xor
add
lock
cmp
add
push
aas
stos
and
push
dec
adc
add
or
add
movs
sbb
xor
adc
pushf
adc
(bad)
ret
add
sbb
cwde
cmp
dec
and
je
(bad)
pop
or
repz
shr
movs
dec
cmp
arpl
pop
pop
cmp
out
add
cs
nop
mov
por
pop
jmp
push
sbb
hlt
xchg
out
push
dec
add
mov
test
mov
leave
mov
cmp
push
(bad)
in
jle
fdiv
sar
dec
inc
pop
iret
add
inc
add
xchg
in
outs
movs
add
xchg
je
je
or
movs
pop
ret
xor
or
sti
xlat
and
shl
cmp
inc
stc
mov
out
dec
test
(bad)
mov
jo
je
(bad)
in
and
add
(bad)
icebp
push
call
push
xchg
lods
dec
cmp
dec
and
fdiv
xchg
fwait
das
test
push
push
cmp
add
cmps
cli
inc
jns
lock
jecxz
loopne
add
in
out
ja
scas
pop
jno
aas
imul
push
jmp
or
out
mov
add
or
cmp
popf
add
or
scas
cmp
add
cmp
jmp
pop
js
adc
cmps
popa
sbb
xchg
xor
(bad)
fwait
ja
leave
into
jg
in
iret
mov
and
push
mov
push
popf
out
mov
mov
jp
retf
test
or
mov
mov
xchg
out
bound
shl
dec
iret
xchg
cmp
ins
xor
jge
idiv
pusha
adc
xlat
repz
and
jmp
mov
lods
in
mov
icebp
(bad)
js
mov
out
les
sub
add
xor
add
push
xor
jecxz
or
sub
xchg
xor
movs
mov
push
inc
mov
mov
and
mov
add
xchg
and
call
dec
and
ret
loope
cmp
out
repz
mov
repz
fldenv
loopne
inc
(bad)
lahf
mov
data16
and
bswap
repz
cwde
mov
or
aas
dec
add
hlt
mov
adc
cmc
out
sbb
addr16
jmp
arpl
dec
lea
das
jmp
sbb
(bad)
clc
out
jmp
(bad)
jmp
jae
add
adc
xor
add
popf
mov
lds
xchg
pushf
mov
mov
imul
inc
aad
cli
fwait
popa
sbb
daa
jle
cld
jns
(bad)
sti
inc
cmp
dec
add
test
and
js
jp
ret
(bad)
mul
ret
jae
mov
push
retf
aam
adc
icebp
into
ror
mov
shr
fistp
das
loopne
fxch
xlat
iret
repz
je
test
add
sbb
add
repz
sbb
sub
inc
mov
mov
fnstsw
dec
cmp
lahf
or
mov
retf
dec
repnz
add
scas
mov
pop
jno
jle
sti
pop
js
adc
aad
push
xor
popa
mov
(bad)
in
push
std
mov
mov
dec
mov
popa
jmp
lahf
mov
mov
mov
mov
jne
popa
sbb
xchg
int3
pop
or
push
and
inc
mov
pop
test
repnz
cld
out
dec
dec
sbb
xor
leave
call
add
push
out
jno
movs
stos
jno
int3
pop
(bad)
add
(bad)
cld
fdiv
cmp
push
aas
sbb
mov
mov
sbb
mov
adc
call
in
repz
jmp
arpl
test
retf
adc
cmps
fs
mov
pop
push
dec
push
clc
(bad)
pop
sbb
xchg
cld
cdq
cmp
js
arpl
addr16
add
pop
add
cwde
call
mov
pop
mov
gs
es
mov
cmp
cmp
ret
push
adc
add
or
cmp
or
sbb
inc
jge
pop
xor
push
cmp
inc
add
pushf
or
mov
add
sub
in
pushf
sub
sbb
aad
lods
xlat
dec
cmp
dec
je
shl
push
xor
iret
xor
out
jae
fs
adc
inc
je
pop
xlat
mov
(bad)
adc
cli
test
test
int
mov
std
leave
ret
push
pop
mov
add
in
fs
jmp
dec
jno
sbb
mov
stos
aas
cmp
sub
jge
mov
pop
iret
dec
fisttp
popa
add
pop
add
or
mov
es
mov
into
in
add
movs
inc
aaa
stos
arpl
cdq
add
pop
popf
xchg
frstor
pop
mov
sub
cmps
popa
sbb
arpl
data16
sub
sahf
out
push
add
push
inc
aam
in
sub
jo
movs
neg
adc
push
dec
lahf
pop
mov
and
and
add
scas
xor
rcl
mov
mov
mov
cmp
sar
stos
xor
lock
and
add
mov
push
cli
rol
xlat
xor
sub
in
rol
cld
sbb
pop
idiv
push
cmps
pop
ret
(bad)
sti
or
outs
mov
div
mov
icebp
idiv
jbe
scas
mov
jno
fbstp
icebp
sbb
cwde
or
adc
fwait
sar
and
mov
outs
add
sub
outs
adc
adc
je
nop
rcl
mov
or
pop
iret
inc
jge
sub
out
adc
push
mov
mov
popa
pushf
sbb
xlat
call
out
mov
loop
ror
xchg
shl
fcmovne
retf
cmc
inc
loop
mov
push
je
movs
mov
mov
popf
out
retf
sbb
fcmovb
mov
adc
pop
pxor
jns
(bad)
jge
repnz
call
push
(bad)
jl
mov
iret
and
jecxz
mov
call
or
popa
pmaxub
popf
aaa
test
int3
test
imul
retf
scas
jmp
pop
xchg
mov
(bad)
fidivr
scas
es
jae
fstp
(bad)
int
jb
mov
in
cmp
mov
cli
mov
enter
jl
jbe
push
add
adc
add
push
or
add
dec
out
xchg
inc
mul
mov
xlat
xor
into
jl
sbb
je
inc
movs
add
es
jbe
mov
imul
icebp
loope
add
fsubr
xor
push
xchg
and
retf
gs
aaa
cmp
outs
sti
push
cmp
mov
dec
repz
dec
imul
pushf
xchg
ja
or
ja
fld
jb
dec
adc
sub
ficomp
xchg
int3
dec
test
sub
or
xchg
sar
clc
mov
outs
jl
fsubp
mul
cwde
mov
mov
ret
and
cmps
inc
les
push
lahf
iret
dec
movs
iret
mov
inc
sti
inc
daa
lahf
pop
cmp
mov
lea
std
or
scas
push
lods
mov
xlat
sub
mov
jle
add
mov
cwde
sar
leave
mov
sbb
inc
sbb
add
mov
enter
add
add
std
stos
not
call
jbe
(bad)
jp
cmp
cli
jecxz
add
inc
mov
dec
mov
push
jmp
sub
dec
sbb
or
mov
out
out
and
jo
in
sar
xchg
mov
and
add
cmp
clc
and
mov
inc
and
mov
or
in
pop
test
xor
jae
sub
movs
mov
xor
in
sbb
or
mov
iret
xchg
cmp
jl
lock
test
call
adc
inc
xchg
or
adc
or
xchg
pop
push
xor
jp
movs
scas
push
cli
outs
pop
arpl
add
nop
outs
mov
add
(bad)
add
xor
fimul
sbb
outs
pushf
repnz
pop
xchg
pop
sti
test
xchg
push
fistp
(bad)
mov
xlat
and
stos
lods
fidiv
lea
mov
std
jae
push
out
scas
dec
sbb
les
adc
(bad)
mov
int3
sub
inc
and
cmp
and
mov
addr16
arpl
call
and
enter
sbb
into
pop
cmps
pop
aaa
movs
sar
and
into
or
inc
jae
(bad)
out
mov
xor
add
add
rol
fistp
pop
out
adc
dec
and
imul
sub
sbb
test
retf
arpl
scas
and
(bad)
jae
mov
mov
inc
movs
repz
mov
scas
iret
xchg
jl
xor
loope
xchg
ds
js
xchg
call
enter
iret
addr16
mov
mov
add
add
icebp
or
mov
jecxz
jecxz
jg
call
adc
pop
xlat
stc
sti
sti
or
mov
jge
aaa
lods
fnsave
xor
push
test
xor
ja
lods
fnstcw
add
fdiv
lea
sub
clc
add
jge
jbe
pop
sbb
add
aaa
dec
add
dec
cmps
add
and
daa
add
lods
sub
add
xchg
call
mov
add
loop
mov
pop
inc
and
pop
loop
jno
inc
fidivr
(bad)
cmps
sub
cmp
jb
repz
inc
mov
aas
mov
ret
arpl
sahf
mov
in
cmp
in
add
aaa
inc
lea
unpcklps
mov
push
cmp
ss
dec
ds
stc
out
pop
xchg
outs
shl
adc
lahf
xchg
add
iret
or
test
arpl
add
mov
mov
sub
loop
icebp
xor
(bad)
xor
lahf
cmp
sti
into
sbb
mov
(bad)
jmp
cs
fcmovbe
mul
add
aad
neg
and
xlat
cmc
popf
aas
and
xor
imul
or
test
cmp
sbb
sub
mov
rol
test
dec
adc
push
repnz
(bad)
enter
jno
cmp
adc
out
xor
jbe
icebp
ds
retf
add
xchg
add
adc
lock
into
jb
cmove
or
jmp
retf
jae
and
ds
fwait
xlat
loopne
adc
(bad)
mov
test
iret
xchg
(bad)
(bad)
out
(bad)
mov
pop
scas
mov
js
mov
leave
jo
lea
pop
fiadd
arpl
add
mov
inc
aam
lock
cmp
mov
sbb
mov
ret
repnz
mov
pop
mov
sti
dec
adc
xchg
push
jp
push
mov
out
lea
jp
sbb
rcr
bound
and
mov
push
or
out
mov
jmp
xor
cmp
pop
add
inc
push
add
inc
pop
adc
loop
mov
jnp
and
dec
xor
add
out
xor
sbb
pop
je
or
imul
jno
test
out
daa
dec
(bad)
jae
mov
movs
clc
sbb
clc
mov
das
data16
or
mov
sbb
les
clc
mov
push
jl
ficomp
pop
mov
add
or
inc
pop
pusha
int3
aad
(bad)
jmp
sbb
fist
xchg
pusha
sti
bound
test
(bad)
loopne
fimul
cmc
outs
in
mov
int
cmp
xchg
cwde
add
leave
call
sbb
idiv
xor
push
or
adc
or
enter
lock
fcomi
pop
or
shr
js
adc
mov
and
movs
call
in
stos
jne
or
mov
and
fist
ret
pop
xchg
shl
inc
jmp
xchg
fnsave
jge
hlt
fild
(bad)
arpl
fs
cli
jno
(bad)
(bad)
imul
ds
jg
pop
imul
xor
pop
test
push
cmp
loop
or
pop
jecxz
jb
add
sbb
jg
mov
clc
fstp
jle
icebp
sbb
cli
mov
push
sbb
iret
sbb
ror
jg
mov
pop
in
sub
jbe
scas
add
mov
jmp
call
sbb
fdivr
rcr
mov
and
pushf
icebp
or
cli
mov
jg
pop
je
out
fdiv
addr16
adc
sbb
inc
pusha
sbb
fwait
loopne
rcr
xchg
pop
es
sbb
add
idiv
fidiv
mov
stos
clc
pop
sub
and
push
sub
movs
popf
outs
call
and
ds
cmp
jmp
imul
cmp
jbe
daa
add
cwde
cmp
imul
mov
jg
test
dec
push
add
and
sbb
hlt
xchg
jle
sub
and
or
push
push
jg
push
cld
and
fisub
add
outs
js
out
pop
push
in
cli
ja
sub
fcmovbe
mov
popa
outs
fcmovnbe
jg
mov
pop
sbb
out
pop
and
xor
jmp
fimul
dec
add
cmp
push
out
test
ds
fs
push
bound
jmp
int3
inc
cmp
add
cld
xchg
dec
mov
sub
add
out
addr16
sbb
mov
pop
inc
add
add
sub
fninit
fidivr
push
sbb
push
push
cmp
cmp
lahf
aaa
jmp
movs
icebp
and
sahf
or
xchg
jl
bound
cmps
idiv
es
test
mov
xchg
and
jne
rol
xor
mov
xchg
xor
pop
mov
daa
and
push
mov
ret
sbb
test
add
(bad)
xor
jo
xlat
mov
mov
outs
fstp
jae
dec
adc
xchg
push
(bad)
(bad)
in
imul
mul
movs
fiadd
mov
lea
add
add
pop
jo
and
add
cmp
xor
sbb
mov
xor
jle
sbb
out
pop
div
out
or
iret
or
mov
xor
xor
enter
andnps
popa
mov
cmc
lds
push
and
mov
jb
sahf
repnz
leave
mov
out
clc
enter
inc
push
add
bound
(bad)
leave
jmp
sub
or
jle
ds
inc
adc
fdivr
mov
cmp
sub
dec
(bad)
push
into
in
pop
movs
sub
ret
jg
mov
pop
mov
test
dec
cmp
das
daa
adc
sti
fidivr
mov
fcom
jns
jae
sub
(bad)
jl
mov
fldenv
into
dec
cmp
jp
pop
xlat
jne
(bad)
repz
push
pushf
sbb
in
mov
jl
add
push
push
cmp
push
bound
xchg
test
neg
mov
mov
adc
jge
fsub
pop
idiv
lods
sti
bound
add
loope
xchg
or
test
ins
(bad)
xchg
test
imul
and
mov
xchg
jle
ror
jecxz
inc
cmp
sub
lahf
cmps
cld
(bad)
cmp
das
ror
jns
aas
scas
xor
dec
sahf
xor
sbb
retf
adc
sub
sbb
push
aas
pop
cld
and
clc
or
jbe
(bad)
icebp
xchg
mov
add
(bad)
jmp
push
sub
mov
pop
jp
dec
(bad)
(bad)
xchg
(bad)
pop
mov
fistp
aad
ja
lods
jp
jle
jge
imul
ins
lods
popf
jg
mov
xchg
(bad)
xchg
call
shl
int
in
call
fnstsw
stos
mov
into
sahf
xchg
or
xchg
inc
add
aad
push
ins
rol
je
cmp
cdq
add
sub
popa
jnp
jo
push
inc
cmps
sub
add
(bad)
icebp
mov
jno
mov
out
icebp
imul
cmps
push
fidiv
in
jge
add
mov
xchg
sub
cmps
xor
jle
cmp
scas
dec
and
in
mov
das
or
ret
xchg
add
sahf
out
mov
dec
pop
fwait
ret
retf
mov
in
and
mov
xchg
ret
out
sbb
bound
std
mov
imul
fwait
pop
into
xchg
dec
sbb
sub
(bad)
jmp
(bad)
idiv
outs
clc
(bad)
fdivp
int
mov
out
ins
ins
imul
mov
adc
push
imul
pop
cmp
xor
in
cmp
dec
pop
or
jmp
add
dec
add
inc
cmps
sub
js
dec
adc
retf
dec
sbb
stc
test
inc
sbb
bound
cmps
out
dec
ret
xor
mov
mov
dec
mul
fisttp
shr
ja
push
mov
push
rcr
mov
jo
dec
cmps
and
mov
lods
add
adc
adc
xchg
cmp
imul
cmp
shr
fistp
dec
adc
or
mov
int
and
mul
movs
pop
sar
push
ds
xor
sbb
add
pop
out
aad
(bad)
cmps
push
rcl
icebp
not
popa
stc
pop
lock
popf
loope
idiv
cmps
cmp
outs
dec
jmp
and
mov
lahf
sub
lock
mov
outs
in
stc
xlat
ins
lods
fnstsw
fcmovu
fcmovbe
fdiv
dec
jle
mov
adc
sbb
movs
aad
sbb
push
adc
mov
mov
xor
xor
fsub
out
add
jmp
and
sbb
cmps
mov
imul
adc
movs
mov
sar
mov
ds
je
(bad)
pop
adc
mov
div
shl
pop
call
and
xor
call
inc
int3
mov
mov
jmp
mov
int
jg
out
idiv
outs
imul
inc
aam
add
add
cwde
push
call
lods
movs
jae
inc
shl
test
neg
out
aam
xor
dec
adc
xchg
lahf
xchg
bound
aad
daa
out
popf
jecxz
cmp
not
(bad)
mov
jno
pop
push
out
dec
pop
lds
sbb
fild
std
fdiv
scas
jecxz
cmc
cwde
sub
mov
fs
inc
xor
inc
(bad)
loop
inc
jmp
sbb
in
jo
pop
jae
fisubr
jecxz
in
pop
(bad)
out
hlt
pop
jmp
mov
dec
icebp
shl
jle
jno
xchg
push
push
and
jbe
mov
lods
fst
ins
jge
inc
outs
cmc
mov
pop
or
inc
mov
cld
nop
jmp
out
sahf
jg
scas
sti
xchg
imul
or
imul
pop
scas
pop
leave
(bad)
test
xor
jge
in
fdiv
mov
or
and
test
fsub
sub
adc
mov
push
jnp
iret
dec
or
inc
icebp
cmp
imul
pop
mov
adc
popf
push
das
out
call
cmp
dec
popf
out
push
add
xchg
mov
pop
shl
rol
out
popf
dec
loope
arpl
aas
lahf
retf
sub
xor
mov
sar
pushf
jmp
pop
(bad)
into
jae
cmp
xor
and
das
mov
out
jl
lods
imul
sub
cld
scas
imul
std
repz
(bad)
(bad)
mov
dec
xor
movs
lods
movs
repz
xor
lods
mov
mov
aam
cld
cmps
scas
push
shl
leave
and
xor
sbb
fwait
out
jle
adc
cmp
jge
popf
ja
mov
sub
inc
in
mov
movs
(bad)
mov
jle
clc
jl
movs
inc
out
add
add
cmpps
test
in
jbe
jae
ins
cmp
movs
lods
mov
mov
(bad)
mov
(bad)
fst
(bad)
out
xchg
mov
aam
clc
adc
mov
lods
lods
popf
mov
jae
into
outs
out
in
mov
xchg
add
hlt
cwde
clc
(bad)
rol
mov
add
jnp
add
jnp
mov
jge
cmp
out
adc
mov
sbb
cld
sub
arpl
cmc
fwait
adc
call
dec
cmc
sub
pop
and
daa
fstp
in
ins
lods
in
mov
cmps
cld
dec
fucomi
dec
add
push
dec
imul
and
(bad)
lods
ror
xlat
in
movs
rcr
movs
(bad)
fisubr
xchg
adc
mov
mov
mov
lock
sti
cmp
pusha
adc
retf
dec
or
mov
int
scas
aas
cmp
mov
adc
jl
mov
out
cmp
nop
in
mov
and
je
cmp
iret
mov
ins
mov
sub
mov
inc
shl
jmp
shl
pop
jle
call
(bad)
sub
inc
out
call
ss
pushf
fist
mov
inc
inc
lea
pop
dec
test
lds
mov
leave
add
ret
xor
adc
jmp
push
(bad)
out
outs
sub
cld
stc
xchg
repz
js
(bad)
aaa
inc
(bad)
sub
mov
xchg
in
mov
mov
cli
cmp
dec
mov
lahf
sub
neg
sti
out
test
mov
jle
add
sub
popa
out
jg
mov
ins
(bad)
xchg
mov
scas
sti
in
cs
dec
stc
cmps
sub
or
lods
mov
fbstp
add
sar
ret
scas
mov
pop
jmp
idiv
pop
xor
sbb
jae
sbb
jmp
mov
les
or
mov
mov
cmp
ins
pushf
lods
inc
rcr
mov
jnp
dec
mov
int
add
pop
sub
adc
sti
inc
pop
cwde
pop
add
cmps
sbb
out
outs
push
out
inc
fsubr
fucomi
lahf
mov
mov
inc
into
mov
push
jg
sar
(bad)
lods
push
sub
mov
dec
imul
pop
pop
cmp
stos
xor
pop
pop
test
mov
imul
jecxz
jge
dec
or
arpl
sub
cmp
pop
aas
pop
push
inc
clc
in
jb
jb
dec
push
add
add
pusha
sbb
in
xchg
leave
fmul
daa
mov
xor
push
ins
xor
jb
and
aas
addr16
xchg
mov
pop
popf
outs
sub
jg
out
cmp
and
mov
mov
jg
(bad)
loop
(bad)
mov
mov
dec
fistp
lahf
xchg
fistp
mov
int
push
mov
nop
sbb
pop
push
cmc
push
das
dec
int
(bad)
(bad)
in
ja
loopne
div
and
add
add
add
test
mov
cs
xlat
ja
dec
xchg
cld
sahf
idiv
js
into
iret
xchg
jmp
out
popf
idiv
inc
(bad)
hlt
loop
(bad)
in
mov
fist
jnp
das
loope
pushf
aas
in
inc
pop
dec
mov
ds
dec
push
pusha
sub
(bad)
fcmovnu
jge
mov
jne
imul
xchg
add
cs
(bad)
aas
push
and
das
or
push
mov
jo
add
lods
clc
xchg
aam
inc
or
sti
jmp
xor
fs
xor
lea
or
seto
sahf
jecxz
dec
(bad)
sub
in
cmp
gs
dec
xor
cld
arpl
mov
dec
cli
ficom
iret
sbb
inc
mov
mov
push
sti
push
add
add
adc
frstor
jns
add
inc
adc
pop
mov
pop
mov
ja
stc
das
cmp
push
mov
pop
call
xchg
jg
inc
cmp
lea
scas
pop
(bad)
stos
mov
mov
lods
in
cmp
and
xchg
xchg
or
fst
and
mov
and
sbb
aas
jle
scas
scas
sub
sar
mov
dec
pushf
dec
fisubr
pop
ss
jmp
jae
adc
xchg
repnz
cwde
mov
lahf
movs
jle
fnstsw
add
lea
fs
ficom
fcomp
push
fidivr
es
mov
sbb
test
mov
jmp
fidiv
das
in
jg
adc
mov
retf
xchg
jbe
push
int3
stos
leave
add
std
fnclex
fild
and
lock
test
dec
cmp
mov
fcmovnu
out
aas
push
daa
cmp
adc
xchg
or
mov
sub
xor
fwait
jae
dec
add
jle
into
inc
sti
ret
dec
push
adc
add
pusha
call
test
loope
sbb
loope
mov
mov
cld
ds
iret
xchg
enter
cmc
xchg
dec
mov
test
add
sub
bts
cmc
test
(bad)
xor
(bad)
fidiv
(bad)
lods
out
mov
or
sbb
cld
inc
ds
stc
mov
mov
fwait
mov
stos
ss
add
cmps
clc
mov
jecxz
pop
(bad)
cld
jae
xchg
loop
xchg
or
jnp
out
and
add
mov
or
xor
es
rcr
sti
push
add
cld
mov
out
in
cmp
(bad)
cmp
cmp
sub
les
cli
outs
(bad)
mov
inc
sti
mov
out
das
retf
jno
jno
push
cmp
repz
jns
out
std
push
fbstp
sub
push
push
imul
dec
stos
add
inc
(bad)
pushf
or
dec
mul
fsubr
mov
jb
int
mov
sub
inc
(bad)
loope
icebp
jg
mov
mov
xor
or
out
dec
mov
out
rcr
cli
pop
and
fcmovnu
jns
fcmovnu
repz
add
popa
sbb
leave
sub
rcl
add
mov
pop
xchg
xchg
popa
sbb
ja
gs
and
iret
dec
ins
add
gs
js
mov
push
lahf
(bad)
mov
adc
loopne
(bad)
scas
aam
mov
or
adc
in
mov
mov
repz
or
aas
jp
sahf
lahf
jmp
retf
sbb
inc
sub
xchg
out
add
daa
inc
add
repnz
mov
pop
cld
jp
lods
pop
lahf
jb
cmp
pop
mov
imul
lock
loope
stc
test
xchg
inc
ret
xor
aas
push
mov
les
fsubr
mov
(bad)
stos
movs
xchg
mov
daa
sub
cmp
adc
add
hlt
push
cs
lea
inc
mov
aad
loope
lea
xor
and
inc
repz
pop
(bad)
ret
popa
leave
and
call
mov
and
sbb
dec
push
jg
cmps
push
mov
adc
jle
bound
lahf
and
repnz
sub
stc
jae
pusha
cmp
jno
add
adc
dec
add
cmp
rcr
into
mov
in
ja
xchg
jg
das
in
xchg
sbb
adc
std
adc
fcmovnu
jg
fwait
sbb
repnz
les
mov
lds
xor
sbb
imul
sub
mov
and
pusha
and
xor
cdq
add
mov
or
mov
mov
imul
pop
into
lea
dec
inc
and
push
mov
in
mov
or
inc
mov
xchg
in
test
sub
and
push
mov
sub
inc
jo
scas
jnp
or
aas
add
test
pop
ja
adc
iret
leave
cdq
add
aad
popa
sbb
lahf
push
cli
sub
cld
mov
icebp
(bad)
enter
imul
mov
test
es
pop
fcomip
jmp
mov
dec
outs
push
out
xchg
(bad)
enter
or
(bad)
je
inc
add
clc
and
jo
repz
fistp
popf
test
ins
cmp
cwde
xchg
push
push
add
push
ret
lods
add
xlat
cmp
rol
adc
iret
push
dec
mov
cwde
imul
dec
pop
cmp
mov
(bad)
dec
test
lock
ds
xchg
fisttp
repz
inc
je
mov
adc
(bad)
jno
cmc
mov
or
xchg
out
mov
jae
lahf
ja
mov
jg
lahf
mov
pop
mov
inc
mov
or
movs
inc
test
ja
adc
hlt
and
pusha
dec
neg
sub
(bad)
iret
sbb
pop
popf
int
mov
sub
sbb
je
das
retf
inc
loope
cdq
jg
mov
and
jo
and
movs
mov
add
test
sub
out
sbb
je
pop
adc
inc
mov
pushw
retf
mov
adc
std
push
aas
dec
icebp
jae
mov
inc
cli
scas
fstp
shl
int3
out
jmp
sar
pop
ins
xchg
push
mov
adc
mov
std
rol
mov
mov
iret
cwde
aad
jns
xor
mov
not
mov
call
daa
imul
stc
sbb
dec
add
and
or
push
loop
mov
jl
clc
test
push
pop
imul
jno
fild
pop
inc
mov
cdq
(bad)
or
cwde
dec
(bad)
and
mov
sub
sti
mov
mov
mov
cmp
push
movs
sbb
lock
pop
mov
sub
test
dec
adc
add
loopne
add
mov
cmp
mov
mov
xchg
jle
xlat
xchg
iret
les
repnz
inc
mov
out
or
lods
stos
sub
mov
scas
pop
jb
retf
scas
sub
les
loop
jne
sub
mov
cmc
add
and
or
fidivr
jno
jnp
in
mov
fst
mov
rcr
(bad)
push
cmp
push
mov
pushf
mov
test
and
(bad)
outs
rcl
loop
mov
push
lahf
and
outs
out
mov
cmp
aaa
or
lock
jne
mov
add
cwde
push
(bad)
sub
and
adc
mov
mov
and
dec
repz
jmp
push
dec
retf
jmp
jno
aam
sti
gs
cmp
add
adc
fwait
aad
aaa
inc
adc
mov
mov
xchg
sar
dec
xlat
adc
je
xchg
inc
jl
loop
xchg
mov
retf
cmps
cmc
adc
and
or
test
and
(bad)
aaa
pop
or
cli
inc
out
pop
adc
mov
jmp
leave
xor
sub
add
out
jnp
into
hlt
jmp
in
add
and
fmul
inc
fbld
adc
fucomp
div
dec
arpl
stc
mov
mov
fcomi
jg
call
pop
sub
adc
pop
push
cmp
nop
data16
dec
outs
inc
out
outs
dec
neg
lock
movs
ss
mov
xor
pusha
sbb
ja
sub
xchg
sar
mov
icebp
sbb
stos
mov
pop
aad
daa
push
sbb
dec
add
inc
sub
fdiv
or
ins
or
pop
jno
jp
dec
fldenv
sbb
sahf
jmp
sahf
clc
cld
loope
dec
push
cmp
out
and
loop
cli
adc
mov
add
pop
in
xor
jl
xor
jne
mov
lods
pop
pop
shl
js
push
push
mov
add
add
and
retf
test
fdivr
(bad)
jae
fisubr
dec
pop
xlat
and
cld
jbe
loop
imul
mov
call
pop
or
aas
cwde
int
mov
add
and
xchg
push
adc
fldcw
jnp
lea
iret
lahf
stc
bound
xchg
in
push
and
cwde
or
sub
and
xor
rcr
pop
fwait
push
sbb
jno
add
add
mov
adc
inc
popa
and
push
and
icebp
fiadd
mov
out
or
pushf
sbb
mov
cwde
out
jns
jle
mov
adc
mov
add
hlt
inc
xchg
inc
and
addr16
icebp
sbb
loope
and
popf
xchg
push
jecxz
and
loopne
mov
and
add
fmul
iret
inc
sti
ds
cmc
mov
and
jmp
inc
std
push
mov
push
add
jno
(bad)
adc
jg
fsub
push
out
jbe
add
ins
mov
rol
ins
(bad)
lock
data16
dec
out
ficomp
sbb
sub
dec
mov
or
fwait
scas
into
cmp
sbb
data16
mov
or
sbb
leave
or
mov
and
test
add
pop
add
sbb
xchg
cmp
inc
(bad)
add
dec
or
das
or
sub
jno
xor
pop
mov
rcr
xor
sub
sub
dec
push
push
retf
jae
mov
out
in
loopne
cdq
add
cmp
aam
cld
in
icebp
mov
das
popf
or
ds
cli
repz
sti
movs
mov
sahf
xchg
int
sti
movs
xchg
jp
jle
cmp
enter
pop
call
inc
or
fisubr
ins
add
into
jp
mov
push
jp
icebp
addr16
pop
imul
std
mov
add
mov
adc
cld
mov
bound
sbb
push
and
pop
push
dec
popa
dec
shr
fld
inc
add
xchg
jo
les
mov
or
out
mov
xor
push
sbb
xchg
ret
inc
movs
cmp
sbb
cmps
mov
ins
and
int
ja
push
sub
sbb
sub
sbb
inc
pop
and
jp
push
xor
xchg
aaa
scas
in
xor
daa
dec
je
cmp
iret
or
sbb
shl
jo
jns
enter
push
in
cmps
sbb
cld
jnp
inc
leave
mov
lds
jp
ret
push
add
cmp
mov
jno
and
xor
pop
add
ds
jmp
xchg
mov
icebp
adc
cli
lods
lods
pop
push
mov
out
div
xor
lahf
sbb
(bad)
in
add
(bad)
ffreep
out
or
lea
sbb
sahf
mov
inc
add
cmp
test
push
jg
hlt
fdivp
lea
out
mov
clc
or
cmp
add
lahf
test
fcom
addr16
push
cmp
pop
adc
adc
xor
or
(bad)
adc
push
dec
in
sub
inc
adc
(bad)
test
pop
sbb
mov
(bad)
in
test
mov
vlddqu
sub
mov
std
jl
test
push
or
stc
and
clc
push
dec
mov
icebp
jp
mov
cmp
add
rcr
sub
jmp
sub
pop
mov
sbb
pop
pop
enter
(bad)
push
clc
mov
fsub
(bad)
jg
fcmovnu
mov
(bad)
shr
pop
or
mov
stos
pusha
in
call
call
sbb
pop
in
add
data16
loop
jno
jl
and
test
sbb
in
mov
test
dec
jle
or
dec
outs
out
mov
retf
sahf
psubq
adc
or
and
or
pop
cmp
in
sbb
dec
(bad)
add
loope
xchg
pop
sub
stos
and
scas
clc
jne
mov
fcomp
mov
rol
xchg
and
xchg
mov
enter
or
mov
test
cmc
loop
dec
std
jge
jecxz
call
cmc
jg
nop
ja
(bad)
int3
repz
mov
test
cmps
scas
std
mov
add
dec
xlat
jl
daa
out
jmp
ret
jne
mov
mov
cli
xlat
cli
jge
jbe
lods
xchg
rcr
in
pop
ja
pusha
lods
xor
addr16
std
add
push
sti
outs
adc
mov
test
ss
or
pop
das
push
mov
and
xor
aad
bound
mov
iret
ss
push
div
not
fcomp
mov
call
jmp
pop
add
push
cwde
ss
cdq
retf
mov
jmp
popfw
out
iret
out
mov
addr16
out
stos
pushf
lds
les
sub
and
sub
cli
rcl
pop
or
mov
outs
mov
repnz
dec
xor
jne
mov
pushf
scas
pusha
jp
int
jle
imul
and
push
test
scas
arpl
loope
and
jb
add
sbb
mul
scas
mov
iret
(bad)
scas
rcr
mov
inc
mov
push
ins
lea
mov
pop
mov
jg
pusha
out
xchg
jmp
fsub
xlat
sbb
pop
leave
bound
adc
out
ds
mov
lds
pusha
je
jb
or
fist
and
sar
pop
jbe
sub
addr16
jmp
pop
mov
shl
xchg
and
dec
fist
call
fdivr
jnp
xchg
and
add
lea
sar
cmp
lea
data16
xor
add
adc
xchg
sub
hlt
sbb
jns
xchg
cld
enter
jg
das
adc
retf
loope
pop
fstp
sbb
add
jmp
xchg
call
add
out
in
(bad)
out
jp
fst
pop
xchg
mov
imul
jge
aad
(bad)
adc
mov
mov
pop
xchg
scas
add
mov
and
cmps
loopne
test
add
inc
fsub
dec
and
sbb
(bad)
aam
sar
pop
adc
push
jne
cmp
fsubr
xchg
pop
ss
adc
fsubr
or
mov
xchg
cmp
das
ja
je
fdivr
sti
in
inc
add
out
les
cmp
fimul
add
dec
and
add
xchg
in
sar
pop
sub
dec
xor
retf
iret
das
cmps
dec
adc
push
out
lods
inc
std
out
add
fistp
jl
jnp
pop
mov
sub
mov
or
shr
and
inc
movs
pop
scas
dec
mov
push
xlat
lock
add
cmp
je
in
push
fistp
fisttp
test
cld
mov
xor
dec
aam
pop
sub
scas
movs
cld
int
outs
mov
or
and
cli
lahf
sub
mov
xor
and
mov
mov
inc
adc
fcomi
jmp
lahf
ret
xor
xchg
nop
out
ins
fucomip
push
jmp
idiv
dec
pop
add
cmps
pop
and
(bad)
icebp
aas
cmp
adc
in
add
out
(bad)
outs
cmps
ret
call
inc
shr
cmp
les
lods
out
(bad)
popa
sbb
data16
or
ins
sub
mul
mov
arpl
loopne
cmc
pushf
mov
xor
mov
out
sub
push
sar
xor
push
fcom
shr
xchg
mov
fld
push
mov
fistp
jnp
repz
fistp
cmc
add
ins
fistp
sub
lahf
out
and
inc
mov
sbb
cld
jnp
cmps
outs
lds
xor
cmp
pop
sbb
shr
in
sbb
add
add
call
or
and
pusha
sbb
loope
rcr
fisubr
fidiv
mov
push
cs
xchg
or
mov
imul
add
pop
(bad)
out
inc
jae
nop
pop
add
cmp
jnp
jp
push
and
add
not
mov
jns
ss
mov
adc
fisubr
adc
lea
cli
and
test
sbb
pop
lahf
jne
sbb
cmp
repnz
test
inc
cmc
mov
nop
add
inc
aam
xor
and
pop
ins
push
ins
out
repz
aam
bound
xor
xchg
xchg
ja
ror
adc
cmp
dec
or
ja
or
sar
inc
bound
imul
jbe
in
sahf
jmp
mov
or
cmc
loopne
adc
div
pop
sti
or
cs
js
jno
xor
pop
and
fwait
stc
sbb
xchg
mov
adc
mov
int
retf
fsub
ficomp
js
push
test
xlat
loop
jns
fiadd
out
test
les
mov
sbb
test
jecxz
inc
pop
shl
out
cs
ja
je
dec
pop
mov
xchg
or
xor
shl
pop
mov
inc
inc
std
pusha
and
out
inc
and
pop
aas
retf
out
adc
mov
sbb
mov
inc
sar
sbb
add
xor
idiv
ret
popf
lahf
jo
in
jle
xchg
aam
dec
xchg
adc
xchg
mov
jmp
push
and
or
push
mov
sub
hlt
add
sbb
loope
and
test
sti
loopne
iret
adc
mov
sti
dec
fiadd
jge
out
xor
(bad)
out
icebp
je
cld
aas
add
or
repz
popf
pop
ja
cmp
xchg
inc
(bad)
aam
inc
jmp
das
mov
lds
shl
pop
mov
popf
xchg
gs
inc
xor
out
mov
adc
sbb
jns
clc
xchg
pop
sub
push
test
inc
and
sub
inc
stos
and
es
arpl
jb
movs
lods
fistp
or
pushf
xor
mov
retf
(bad)
mov
mov
pop
(bad)
lea
jno
adc
call
add
jecxz
call
pop
sti
shl
mov
scas
xor
add
jg
pusha
sbb
and
dec
rcl
idiv
inc
icebp
aaa
inc
(bad)
js
mov
data16
push
cmp
enter
adc
outs
push
jmp
fwait
pusha
push
and
movs
xor
add
loopne
icebp
and
fist
ins
lods
int
cmp
mov
aas
imul
cmp
add
inc
cmp
imul
mov
(bad)
lahf
das
test
iret
jbe
cli
imul
call
(bad)
(bad)
xchg
adc
stos
aam
sbb
into
leave
jge
pop
jno
pop
(bad)
js
mov
data16
ins
pop
popf
sub
push
fcom
add
test
pop
inc
xor
sub
push
adc
mov
in
ins
inc
ins
sbb
push
add
and
in
imul
mov
iret
jbe
sar
jle
imul
leave
daa
into
std
push
cld
aaa
shl
jnp
repz
mov
cmps
(bad)
loope
(bad)
mov
push
mov
mov
cmps
jle
stos
sub
test
fnstenv
jmp
cmp
adc
add
sbb
cmp
push
idiv
cmp
pcmpeqw
call
fadd
xchg
cmps
add
(bad)
fistp
popf
(bad)
cmp
aam
outs
pop
stos
call
jmp
push
xlat
sar
mul
scas
push
xor
xor
xchg
sub
add
adc
add
push
cwde
ss
mov
mov
fistp
xlat
sar
out
je
je
int3
pop
add
clc
cmps
push
add
mov
int
shl
imul
push
ins
stc
mov
imul
fistp
push
repnz
call
xor
stos
sub
jmp
lods
ins
call
outs
imul
mov
sbb
aad
mov
push
inc
sub
repz
mov
mov
mov
cmc
jmp
fstp
ss
movs
mov
mov
out
ins
lods
int
inc
sub
pop
int
sub
mov
das
ret
xor
jmp
add
fistp
rcr
mov
push
jecxz
out
jmp
ja
loope
jmp
inc
rcr
test
aam
lea
aad
imul
aam
fist
aas
(bad)
fidiv
clc
iret
es
int3
int3
int3
mov
mov
xlat
jns
adc
retf
inc
jl
mov
out
adc
shl
popf
pop
add
xor
sbb
or
push
stos
inc
mov
xlat
inc
out
loope
sub
(bad)
div
cmps
mov
fchs
out
pop
pop
pop
(bad)
push
sar
data16
in
(bad)
scas
loopne
into
stos
adc
mov
loopne
adc
add
ins
idiv
jl
dec
or
dec
sbb
jg
into
mov
iret
mov
xchg
dec
mov
mov
ficom
xchg
add
sar
sub
xor
xor
mov
push
push
jg
cld
adc
(bad)
pop
ja
push
cld
inc
dec
jecxz
xor
shl
fwait
cld
cs
push
js
mov
jmp
jg
aam
push
dec
inc
add
ins
test
ins
jmp
enter
clc
movs
ficom
int
(bad)
lods
clc
in
movs
stc
int
int3
int3
int3
stos
leave
sbb
inc
in
jle
movs
(bad)
in
pop
pop
push
(bad)
ja
jge
arpl
mov
xchg
repz
lods
test
std
(bad)
in
sub
mov
je
iret
cmp
dec
sti
ins
scas
mov
xchg
imul
cld
sar
repnz
stc
mov
pusha
or
outs
es
data16
dec
into
and
fcomp
mov
mov
loopne
sbb
scas
inc
adc
jmp
add
stos
jl
dec
pop
add
jle
jnp
ja
and
gs
and
adc
mov
sahf
cmp
push
out
out
out
idiv
and
mov
cmps
pop
mov
(bad)
cwde
pop
dec
push
in
xchg
std
loop
sbb
jl
fwait
cdq
cdq
cdq
cdq
int
mov
inc
mov
push
cmp
jge
sbb
xor
push
dec
mov
enter
ret
sbb
jl
fdivr
cmp
xor
nop
mov
dec
mov
mov
cmp
sahf
mov
jmp
fist
cld
jno
sbb
imul
pop
popa
add
int3
int3
int3
int3
lods
fs
dec
add
call
cld
mov
xchg
and
jbe
std
in
ja
bound
ss
sti
jl
cdq
mov
addr16
or
cmps
or
xchg
adc
std
shl
jnp
cmps
loopne
pop
fnstsw
fbld
fistp
std
hlt
or
mov
cmp
les
push
ror
sbb
repz
dec
jae
cdq
cdq
cdq
cdq
cdq
add
add
jle
adc
push
jp
lahf
inc
xchg
scas
mov
sahf
mov
sar
xlat
test
xchg
rcr
jne
in
mov
cmc
mov
out
pop
adc
inc
iret
cmp
sar
jnp
jmp
out
or
outs
out
in
arpl
(bad)
out
pop
loop
icebp
das
add
cmps
inc
fsub
data16
and
(bad)
and
add
add
cmp
jle
jecxz
mul
(bad)
pop
out
test
movs
out
mov
or
lahf
jnp
imul
add
cmc
adc
or
rcr
sbb
jecxz
std
sti
fcmovbe
lds
xchg
inc
std
inc
in
repz
fisubr
fsubr
mov
mov
xor
xor
xor
mov
and
jo
mov
push
daa
sbb
cmps
ins
mov
or
rcr
out
aam
dec
sub
daa
popf
sbb
xchg
outs
xchg
mov
sti
shl
xchg
adc
sar
aad
cdq
out
ja
cmp
or
ins
fucomi
cmp
jbe
shl
ret
and
leave
popa
imul
xor
xor
retf
mov
sub
jecxz
sbb
les
pop
add
cli
cdq
dec
inc
cwde
and
shl
mov
and
ds
jmp
lock
add
adc
cwde
(bad)
adc
xchg
jo
add
(bad)
push
ins
pop
sbb
cmps
aas
pop
loopne
dec
mov
outs
out
out
mov
sar
xor
xchg
jecxz
jae
or
mov
test
aam
(bad)
jmp
sub
sti
mov
xor
dec
(bad)
pop
or
int3
int3
(bad)
shl
fist
jno
and
enter
mov
lds
loop
inc
add
imul
in
mov
pop
cmp
mov
test
(bad)
pushf
add
mov
sbb
add
sub
int
pop
add
bound
(bad)
inc
mov
jp
fnstsw
jle
or
jmp
sbb
mov
inc
stc
and
movs
jle
fdivr
stc
pop
in
data16
mov
add
inc
mov
adc
es
mov
push
jle
adc
out
mov
or
stos
pop
pop
ret
xlat
inc
and
cs
out
ds
into
lock
das
or
enter
xor
and
arpl
mov
add
xchg
and
das
jbe
retf
loope
repz
adc
cmp
push
mov
imul
(bad)
(bad)
not
test
lods
jne
mov
jmp
cmp
enter
aas
xor
js
loopne
hlt
mov
cdq
cdq
cdq
cdq
dec
fsub
cld
sbb
mov
add
cmp
(bad)
call
mov
or
pop
jmp
cmp
outs
add
leave
mov
sub
fs
pushf
and
or
push
cmps
and
xchg
and
xchg
pushf
or
jns
scas
adc
std
ds
clc
cmp
loope
fcomip
imul
jle
in
cmp
sub
mov
lahf
iret
iret
adc
push
retf
popf
ins
cmp
fistp
mov
mov
or
mov
les
pop
adc
aas
cwde
cdq
cdq
cdq
cdq
cdq
popf
xchg
movs
popf
dec
ret
ins
sbb
push
sar
and
mov
add
shr
xor
adc
pmaxsw
in
push
adc
inc
push
dec
add
xchg
popf
pop
repz
iret
jne
in
(bad)
adc
ret
ret
stos
arpl
xor
and
cmp
js
or
out
mov
scas
ror
(bad)
xor
and
js
pushf
(bad)
test
addr16
xor
mov
xlat
sti
ins
jp
cmp
cwde
outs
mov
aaa
(bad)
dec
test
mov
hlt
xor
mov
repz
loop
loop
add
jg
inc
mov
cdq
cdq
cdq
cdq
cdq
fldcw
pop
mov
fcom
fisttp
and
dec
sbb
ror
add
sbb
fwait
pop
add
mov
or
loop
mov
outs
jg
push
add
std
push
aas
aas
into
les
loopne
scas
(bad)
mov
mov
fucom
cli
test
push
cmp
add
mov
aas
sar
pop
iret
dec
jmp
(bad)
rcr
sti
test
daa
push
cmps
cld
cli
jl
sbb
call
cmps
cmp
jbe
lahf
retf
cmps
mov
ret
in
imul
cmc
sub
add
fwait
xor
out
jmp
adc
fs
push
stc
ja
imul
icebp
mov
mov
mov
dec
xchg
push
repz
(bad)
pop
imul
repz
repz
inc
xor
sbb
lock
add
or
push
mov
loope
fcmovnu
ror
jg
add
pusha
out
mov
adc
dec
je
fcomp
arpl
idiv
mov
sbb
ja
mov
jmp
cld
jae
std
icebp
add
dec
dec
and
cmps
push
neg
jnp
cmp
jmp
mov
jecxz
adc
cmp
neg
shl
outs
adc
enter
cld
and
data16
bound
daa
push
or
sahf
and
sub
call
ins
pop
pop
cmp
inc
inc
jns
sbb
loope
sbb
and
js
or
push
push
dec
inc
mov
add
cld
cli
jle
loope
ficom
push
or
add
out
pop
mov
mov
mov
lahf
test
(bad)
mov
jns
icebp
xor
cld
dec
jo
arpl
jg
push
jle
mov
loop
add
xor
aas
loop
or
xor
les
data16
fs
into
inc
and
sub
out
stc
mov
shl
addr16
xchg
clc
xchg
push
cmp
je
sub
sbb
in
shr
iret
adc
cdq
repz
xchg
inc
mul
std
lock
lock
jmp
and
and
cwde
jo
das
imul
dec
mov
push
icebp
lahf
add
cs
icebp
fwait
cdq
cdq
cdq
cdq
popf
pop
sub
or
and
sbb
fwait
and
pop
xchg
or
xor
adc
pusha
xor
mov
xor
loope
and
test
loop
les
adc
pop
gs
xchg
jae
pusha
scas
call
mov
lock
inc
jp
int3
rcl
xchg
in
cmp
sbb
outs
or
cmp
jle
clc
or
aam
mov
jge
and
jg
mov
arpl
add
outs
push
mov
data16
into
sub
aas
adc
cmp
inc
and
scas
pop
jmp
xchg
js
jo
or
adc
jmp
es
and
rep
add
mov
loop
and
cwde
(bad)
arpl
add
cld
imul
int3
sub
mov
push
or
fist
cmp
pop
dec
lods
adc
(bad)
mov
int
add
or
ins
jle
sub
int
inc
in
inc
mov
shr
push
xor
cmp
mov
dec
pop
fwait
test
adc
jae
aas
xchg
sti
test
loop
or
out
popa
or
fld
cdq
cdq
cdq
cdq
cdq
pop
push
pop
xchg
xor
or
cmc
add
add
mov
add
lods
es
ja
(bad)
out
outs
push
push
ret
out
adc
cmp
loopne
jo
stos
mov
push
cmps
dec
push
sbb
or
sbb
or
add
sbb
adc
cmps
add
fild
fs
(bad)
or
ss
aam
dec
xchg
out
jno
pop
push
cld
ins
xlat
sti
mov
test
sti
in
cdq
cdq
cdq
cdq
cdq
int
retf
jb
sbb
adc
les
loope
and
rcl
push
sbb
shl
fcom
xchg
adc
lahf
adc
scas
xchg
cmp
sub
mov
add
mov
ror
pop
push
and
sar
xor
cmp
dec
xor
ds
and
cmp
mov
xor
xor
xor
fwait
rcl
or
into
xchg
cmp
dec
and
add
loop
mov
fild
adc
pop
pop
fs
xchg
in
into
sahf
add
sub
pop
dec
les
jnp
and
pop
sub
cli
cwde
mov
adc
add
dec
jnp
pop
sub
lahf
sbb
out
test
push
push
inc
fs
adc
cdq
int
retf
jb
arpl
(bad)
and
inc
hlt
lea
mov
addr16
and
xor
iret
aam
pop
sbb
xchg
movs
add
inc
adc
mov
cs
pop
pushf
cld
jg
and
jne
xchg
iret
lods
(bad)
pop
or
xor
xor
xor
mov
and
repz
addr16
add
test
cmps
(bad)
sub
adc
jb
ss
lahf
or
adc
retf
arpl
cmp
call
js
pop
mov
sbb
je
(bad)
int3
int3
int3
int3
int3
int3
in
and
retf
test
data16
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
pop
push
test
pop
iret
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fstp
add
or
or
add
or
add
add
add
add
or
add
add
js
cli
add
add
inc
dec
inc
add
mov
or
popa
add
dec
inc
inc
push
js
in
mov
jns
cdq
xchg
jmp
mov
push
nop
xchg
imul
pop
jmp
shl
(bad)
mov
add
into
test
sbb
enter
inc
inc
lea
adc
(bad)
add
cs
xchg
push
xchg
sar
and
jl
xor
sti
iret
xlat
mov
push
int3
lahf
sahf
neg
jle
cmps
neg
push
mov
jp
stos
pop
stos
idiv
jmp
mov
cmc
scas
outs
jg
mov
inc
xchg
and
xchg
and
pop
(bad)
(bad)
fistp
ins
clc
fcomip
and
loop
xchg
and
(bad)
retf
shl
std
ja
out
mov
pop
mov
adc
inc
loop
xchg
mov
sbb
lods
jecxz
stc
mov
int
nop
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
loopne
shl
(bad)
mov
pop
xchg
nop
arpl
xchg
nop
arpl
xchg
nop
arpl
(bad)
cld
aas
call
jbe
cmp
xchg
test
loop
test
loop
test
loop
test
loop
test
inc
js
inc
and
ret
clc
div
cmp
sahf
js
inc
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
and
cmp
loop
ret
(bad)
jp
clc
imul
(bad)
mov
mov
mov
mov
mov
mov
xchg
or
xor
iret
arpl
xor
cld
mov
jecxz
fucomi
mov
and
jae
cmp
lds
cmp
lds
cmp
lds
cmp
dec
icebp
push
cld
jno
pusha
jl
or
jecxz
fsub
nop
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
mov
mov
icebp
xor
cmp
int
add
mov
mov
jns
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
sbb
cmp
or
or
(bad)
ds
push
xor
add
scas
imul
xor
sahf
inc
enter
inc
enter
inc
enter
inc
enter
loope
add
pop
scas
retf
xor
fild
xor
sahf
inc
enter
inc
enter
inc
enter
inc
enter
inc
enter
xchg
ret
push
add
stos
mov
ret
mov
cwde
add
or
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
xchg
mov
add
mov
sbb
add
inc
in
popf
and
jns
sbb
mov
sbb
mov
sbb
mov
inc
loop
outs
out
ret
add
sti
movs
inc
test
or
in
and
jne
adc
arpl
xchg
nop
arpl
xchg
nop
xor
cmovle
push
sbb
add
xor
or
pop
dec
mov
js
and
mov
mov
mov
cld
adc
das
es
es
or
or
and
popf
adc
push
enter
inc
enter
inc
enter
inc
enter
inc
enter
cmp
ja
push
ds
pusha
mov
and
vmovsd
jb
mov
adc
mov
adc
mov
adc
mov
adc
bswap
dec
jnp
bndstx
adc
push
jmp
icebp
adc
test
loop
test
loop
test
loop
test
sti
leave
mov
pop
test
inc
and
clc
call
arpl
xchg
nop
arpl
xchg
nop
arpl
mov
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
test
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
sub
div
pop
sbb
inc
sbb
jns
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
pop
js
jg
(bad)
(bad)
int3
js
push
test
dec
push
jb
mov
adc
mov
adc
mov
adc
mov
adc
xchg
loop
clc
jecxz
mov
xor
pop
ret
mov
mov
js
and
mov
mov
mov
lds
lods
not
aas
add
(bad)
pop
inc
or
cmps
popf
adc
fs
mov
mov
mov
mov
cmc
sbb
cld
bound
mov
mov
xor
movlps
icebp
xchg
test
loop
test
loop
test
loop
test
loop
test
add
icebp
stos
in
xor
cmp
adc
test
pop
pop
das
push
enter
inc
enter
inc
enter
inc
enter
inc
enter
inc
enter
ds
stos
mov
ret
mov
cwde
add
xlat
adc
adc
fidivr
inc
cmp
xchg
test
xchg
in
js
jbe
stc
je
mov
(bad)
retf
adc
mov
adc
mov
adc
pop
adc
aam
xor
inc
jge
cld
jmp
add
test
loop
test
loop
test
dec
(bad)
mov
cld
in
ja
mov
xor
push
repz
sahf
cmp
(bad)
(bad)
into
into
aas
clc
aad
cmps
fimul
aad
retf
jg
xchg
and
cwde
pop
iret
and
cwde
scas
cdq
pop
mov
jl
fistp
jno
add
popa
add
stos
mov
test
loop
test
loop
test
mov
cmp
push
int
pop
imul
sub
jmp
pop
ret
loopne
fs
idiv
sub
lahf
scas
loope
sti
scas
popa
icebp
adc
test
movs
jns
cwde
add
xlat
pushf
add
and
leave
inc
mov
sbb
push
jns
cmps
(bad)
xchg
adc
out
xchg
lds
dec
dec
mov
call
cmps
nop
arpl
xchg
cld
das
es
es
or
or
and
popf
adc
push
enter
inc
enter
out
mov
repz
outs
out
jp
jne
adc
popf
adc
cld
jl
mov
js
and
mov
cld
push
js
out
clc
cmp
or
out
add
dec
adc
mov
adc
mov
shl
xlat
repnz
mov
xor
adc
or
sub
cwde
pop
xchg
xchg
div
push
xor
sbb
and
cmps
(bad)
cmp
and
jae
cmp
mov
lock
sub
sub
dec
fisttp
std
sub
sahf
inc
enter
inc
enter
cmp
rcl
and
(bad)
jl
scas
or
out
jae
cmp
lds
cmp
stos
jecxz
cmp
mov
jge
mov
test
nop
arpl
xchg
pop
inc
and
jecxz
xor
sahf
inc
enter
inc
enter
iret
mov
sub
inc
xor
ss
or
(bad)
cld
(bad)
std
pop
and
mov
mov
jl
mov
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
scas
mov
jne
lds
mov
or
jnp
cmp
or
(bad)
(bad)
fidivr
pop
iret
and
cwde
pop
iret
and
cwde
scas
xchg
xchg
and
xor
sbb
loop
test
loop
test
aad
lods
mov
push
jle
sti
pop
out
or
lds
cmp
lds
pop
push
sbb
out
jae
cmp
lds
cmp
stos
jecxz
icebp
mov
pop
adc
add
inc
loopne
out
push
push
call
std
pop
and
mov
mov
jl
mov
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
scas
xchg
addr16
sbb
lock
loopne
cmc
or
(bad)
(bad)
sub
jg
xor
sahf
inc
enter
inc
enter
das
dec
push
sbb
out
jae
cmp
lds
cmp
stos
in
sbb
and
js
jo
pop
test
jg
jmp
iret
and
cwde
pop
iret
and
cwde
scas
xchg
pop
pop
ss
jmp
mov
sbb
loop
test
loop
test
push
repnz
pushf
fwait
std
cmps
adc
adc
(bad)
xor
pop
mov
hlt
adc
stos
dec
jmp
(bad)
mov
mov
inc
push
pushf
loopne
js
aad
icebp
cmp
(bad)
sbb
les
jb
push
retf
ret
sub
mov
xchg
adc
loopne
fmul
movs
mov
in
scas
(bad)
std
(bad)
mov
mov
jl
cmp
jg
icebp
aaa
ds
push
mov
stc
add
mov
loop
xchg
sub
cwde
scas
xchg
neg
sub
sbb
pop
sbb
aas
out
jae
cmp
lds
cmp
imul
clc
xchg
jle
daa
add
sbb
lock
aam
xor
mov
call
adc
push
ins
out
scas
mov
pop
cmps
nop
arpl
xchg
jmp
popa
add
jle
add
xor
pusha
cld
neg
add
and
out
dec
(bad)
mov
ret
iret
lahf
lahf
ffree
(bad)
sub
jg
mov
iret
and
cwde
scas
cdq
xchg
das
daa
add
js
test
pushf
xor
or
stos
inc
sub
out
daa
pop
xchg
nop
arpl
mov
iret
aas
fld
mov
and
xchg
jge
in
and
dec
and
mov
jl
push
mov
adc
test
add
or
cmp
ret
into
pop
jnp
mov
pop
xchg
nop
arpl
stc
(bad)
push
(bad)
inc
icebp
mov
fsubr
mov
(bad)
mov
cld
and
inc
or
test
and
popa
add
inc
enter
inc
enter
mov
push
mov
cmp
push
add
and
cmp
lds
cmp
jns
adc
jl
fistp
jno
add
popa
add
stos
mov
test
loop
test
pop
leave
mov
call
mov
mov
mov
fidivr
mov
xchg
push
das
push
enter
inc
enter
or
jmp
inc
test
xchg
sub
cwde
aas
dec
fisub
ja
fistp
test
and
imul
cmp
inc
mov
sbb
mov
rol
add
in
xlat
jae
adc
sbb
in
mov
loop
or
out
jae
cmp
pop
jecxz
jne
div
sub
pop
dec
in
push
or
push
fistp
call
test
loop
test
push
loope
mov
add
add
inc
enter
inc
enter
mov
xor
fsubrp
in
cmps
dec
mov
pop
jmp
xor
sahf
inc
enter
pop
fcmovbe
jnp
enter
or
xchg
sub
cwde
pop
iret
and
cwde
pop
bnd
sbb
cli
ins
sub
mov
stos
pop
aad
jg
mov
mov
js
and
cld
jle
ins
inc
push
loope
ror
sbb
xor
pop
iret
and
cwde
pop
iret
and
cwde
pop
xchg
test
adc
test
sub
mov
pop
mov
jmp
popf
das
loop
or
out
sbb
test
out
jae
cmp
lds
cmp
pop
in
mov
sub
sbb
mov
sub
fdiv
pop
pop
jmp
enter
rol
ins
lods
dec
jecxz
xor
sahf
inc
enter
inc
enter
iret
or
lds
dec
jb
lds
test
aad
ror
scas
(bad)
(bad)
jecxz
pop
inc
mov
sbb
mov
sbb
mov
sub
inc
and
jecxz
xor
sahf
inc
enter
inc
enter
iret
mov
jmp
movs
lds
ret
ror
scas
(bad)
(bad)
arpl
or
out
jae
cmp
lds
cmp
repnz
push
ret
retf
adc
xor
xor
xor
sahf
inc
enter
inc
enter
mov
mul
pop
shr
in
mov
in
and
push
imul
or
out
jae
cmp
lds
cmp
stos
in
or
and
mov
mov
cld
dec
js
loopne
pop
das
js
scas
mov
ficomp
pop
scas
nop
arpl
cmp
lds
cmp
lds
cmp
mov
mov
inc
fcomp
(bad)
xchg
arpl
xchg
nop
arpl
cmp
jb
(bad)
std
dec
movs
pop
xadd
stos
mov
xchg
and
cwde
out
cmp
cmp
jns
sbb
mov
sbb
mov
and
mov
dec
jmp
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
fistp
iret
mov
test
mov
jmp
js
mov
pop
ins
neg
nop
arpl
ja
(bad)
sbb
(bad)
mov
mov
jl
pop
js
jg
(bad)
(bad)
int3
js
push
test
dec
push
jb
dec
xchg
addr16
out
es
arpl
sub
inc
lock
or
popf
std
fistp
jb
sbb
loop
test
loop
test
movs
js
(bad)
js
outs
jl
or
pop
test
les
das
pop
enter
sahf
adc
cmps
pop
lods
pop
in
iret
cs
adc
popf
std
fistp
push
test
loop
test
loop
test
movs
js
(bad)
popa
mov
aaa
(bad)
sub
in
aas
cld
adc
and
retf
jbe
sub
push
mov
fmulp
in
retf
(bad)
(bad)
mov
xor
sahf
inc
enter
inc
enter
xchg
push
jle
fisubr
add
pop
aas
sbb
dec
cmp
sahf
js
inc
mov
popf
rep
add
sbb
pop
je
inc
hlt
cmp
aas
jp
push
test
loop
test
loop
test
and
jb
ror
ret
cwde
add
int3
mov
mov
and
cmp
pop
rol
inc
scas
push
push
ret
fst
cli
popf
std
pop
cmp
jns
sbb
mov
sbb
mov
xchg
cmp
xchg
(bad)
jp
add
clc
icebp
stos
in
xor
add
add
cmc
test
test
mov
adc
or
arpl
adc
dec
push
les
sub
dec
cmp
xor
(bad)
mov
mov
jl
pop
test
popa
add
aas
out
push
les
dec
add
jae
addr16
or
out
jae
cmp
test
imul
pop
or
into
dec
push
xor
(bad)
mov
mov
jl
pop
clc
idiv
dec
add
int
addr16
(bad)
dec
add
lods
into
dec
adc
mov
adc
out
add
arpl
push
xlat
adc
push
mov
jmp
sbb
pop
cmp
nop
arpl
xchg
push
adc
aam
ficomp
out
cdq
inc
inc
xchg
rol
adc
pop
enter
cmp
push
popf
(bad)
std
push
pop
pop
xchg
scas
pushf
ja
cli
popf
std
lahf
jl
cli
test
loop
test
loop
test
inc
lock
cld
out
jp
pop
and
add
jg
mov
mov
js
and
jl
iret
mov
int
inc
imul
mov
and
pop
aas
jae
sub
enter
inc
enter
inc
enter
ud0
cwde
xor
sar
mov
sbb
mov
mov
jge
outs
or
jne
mov
enter
inc
mov
lods
jecxz
and
and
cwde
pop
iret
and
cwde
outs
repnz
out
pop
add
aam
inc
mov
js
mov
aad
(bad)
call
push
js
fdiv
jg
retf
adc
addr16
mov
mov
inc
push
pushf
loopne
sahf
ins
call
popa
arpl
repz
test
loop
test
fnstcw
push
sbb
dec
xor
(bad)
and
jae
cmp
jb
(bad)
mov
sbb
loop
test
loop
test
fnstcw
push
mul
test
mov
xchg
test
enter
jl
test
loop
test
loop
test
inc
js
inc
and
jecxz
xor
sahf
inc
enter
inc
enter
mov
mov
fcomp
mov
xchg
mov
and
icebp
ins
adc
mov
adc
mov
adc
pop
loope
or
and
mov
mov
mov
jle
movs
aam
xchg
gs
cmp
js
jp
jecxz
jecxz
cmp
icebp
sbb
mov
sbb
mov
and
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
ja
lods
or
xor
bnd
or
jno
icebp
je
fbstp
(bad)
mov
mov
jl
pop
xchg
ror
sbb
sar
jb
mov
adc
mov
adc
mov
(bad)
std
push
push
or
mov
sub
test
enter
mov
js
and
mov
jl
pop
xchg
ror
sbb
sar
jb
mov
adc
mov
adc
mov
(bad)
std
push
push
or
mov
add
jns
ffree
mov
in
pop
iret
and
cwde
pop
iret
and
cwde
das
ret
fwait
div
pop
sbb
inc
sbb
jns
sbb
mov
sbb
mov
lods
js
js
(bad)
std
push
push
or
jl
mov
ret
icebp
fsubr
clc
push
and
mov
mov
jl
pop
js
jg
(bad)
(bad)
int3
js
push
test
dec
push
jb
push
lds
scas
ret
loop
loop
push
or
jno
icebp
fsubr
clc
push
and
mov
mov
jl
push
mov
fdivrp
sbb
fisub
ficomp
icebp
les
jb
outs
lds
scas
loop
mov
pop
aas
cmp
(bad)
out
(bad)
aaa
or
out
jae
cmp
lds
cmp
dec
icebp
push
cld
ret
jp
std
adc
outs
mov
lock
and
sbb
les
jb
outs
int
bound
in
lock
mov
pop
sub
cwde
pop
iret
and
cwde
pop
iret
and
cwde
das
lds
(bad)
sub
add
out
add
pop
data16
pop
mov
inc
add
cmps
popf
adc
fs
cld
(bad)
cmp
ss
dec
mov
stos
addr16
mov
and
cld
(bad)
out
test
loop
test
loop
test
add
icebp
stos
in
xor
cmp
adc
test
mov
cmp
mov
fwait
jecxz
sbb
inc
into
pop
in
pop
iret
and
cwde
pop
iret
and
int3
clc
es
cmc
cmp
add
jecxz
fld
loope
add
xor
jmp
ja
cmp
popf
and
fsubr
ins
push
sub
loop
retf
adc
or
in
pop
iret
and
cwde
pop
iret
and
int3
mov
jmp
adc
test
add
int3
inc
popf
popf
and
cwde
pop
iret
and
cwde
scas
xchg
ja
fsubr
mov
bound
mov
test
retf
repz
js
and
mov
push
(bad)
xchg
add
mov
xor
adc
or
jns
sbb
mov
push
(bad)
popf
popf
jg
mov
lds
fstp
dec
pop
sub
inc
mov
test
sbb
mov
sbb
into
mov
add
xor
test
pop
mov
arpl
fdivrp
es
in
(bad)
fimul
mov
(bad)
loope
dec
rcl
add
jns
adc
pop
cwde
pop
iret
and
cwde
pop
iret
and
cwde
nop
dec
jle
cmp
adc
inc
into
push
cmp
pop
cmps
nop
arpl
xchg
stc
(bad)
jbe
mov
xlat
mov
out
out
cmp
or
out
jae
cmp
fwait
lods
clc
cmp
or
out
add
dec
adc
mov
adc
push
int
arpl
adc
les
ss
push
sbb
inc
mov
inc
mov
sbb
mov
es
in
jmp
jle
inc
inc
int3
dec
lods
jae
dec
adc
int3
pop
sbb
(bad)
xchg
lea
sub
por
jecxz
jo
out
ret
loop
or
out
dec
xchg
ins
call
popa
arpl
repz
test
loop
test
mov
mov
pop
mov
mov
sub
scas
repnz
imul
and
mov
mov
and
push
and
mov
cld
xor
inc
mov
out
popa
xor
js
mov
pop
mov
das
push
enter
rol
ins
lods
dec
jecxz
xor
sahf
inc
enter
inc
enter
std
loopne
cld
cmp
pop
ds
repz
ja
(bad)
das
pop
in
stc
inc
mov
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
mov
sti
mov
ins
add
ret
inc
in
cmp
mov
xor
and
mov
jl
mov
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
repnz
pop
dec
lds
xor
into
leave
arpl
(bad)
jg
xchg
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
repnz
push
pop
loop
jnp
xchg
mov
jb
dec
popf
iret
cld
mov
or
stc
and
or
and
mov
mov
cld
or
clc
cld
in
rep
lds
test
loope
repnz
xchg
popf
sbb
jb
push
leave
sub
hlt
pop
sbb
inc
sbb
jns
sbb
mov
sbb
mov
adc
sub
xor
sbb
xor
pop
pusha
mov
(bad)
cmc
and
nop
arpl
jg
(bad)
(bad)
int3
js
push
test
dec
push
jb
bswap
mov
lock
sub
test
pop
mov
rcl
loopne
mov
mov
(bad)
mov
mov
lds
outs
cld
lea
mov
sbb
adc
add
and
js
adc
ins
adc
and
push
mov
out
jbe
push
popf
ret
repz
jl
es
inc
mov
sbb
mov
sbb
sbb
jg
out
cmps
jg
ror
(bad)
inc
dec
cmp
sahf
js
inc
mov
or
int3
pop
cmp
jp
loop
mov
push
fisub
jns
repz
jl
es
inc
mov
sbb
mov
sbb
sbb
cmp
lds
popa
add
jle
add
xor
pusha
cld
neg
add
and
jns
or
lods
adc
mov
scas
jne
inc
pushf
pop
cmp
pop
iret
xchg
pop
and
mov
mov
inc
cmp
jle
sub
and
adc
call
push
and
jg
dec
adc
int3
mov
adc
mov
lods
or
ins
(bad)
stos
jno
add
scas
push
mov
imul
jle
sahf
das
mov
sbb
mov
sbb
into
mov
push
iret
ret
add
add
pop
xchg
jge
inc
or
sahf
jo
nop
xor
fidivr
loop
xor
or
lds
call
ret
loop
js
aad
jno
lock
call
sbb
loop
test
loop
test
inc
jge
cld
jmp
add
test
loop
test
cmp
fchs
jg
lods
sbb
loop
mov
pop
icebp
outs
sar
mov
jb
mov
adc
mov
adc
lock
jge
add
fwait
std
into
loop
fwait
add
cmp
adc
pop
popf
popf
and
cwde
pop
iret
and
cwde
fild
iret
push
(bad)
movs
(bad)
(bad)
sub
pop
loop
leave
cmp
aas
jnp
out
out
stc
xchg
sub
cwde
pop
iret
and
cwde
pop
iret
and
cwde
xchg
add
cmc
mov
add
jnp
adc
dec
push
jb
out
xchg
add
arpl
pop
das
icebp
retf
ja
cld
cmp
nop
arpl
jb
mov
adc
pop
and
dec
out
scas
out
and
add
std
aaa
or
retf
adc
int3
mov
nop
or
dec
movs
js
xlat
mov
push
out
xchg
mov
(bad)
jl
stc
xchg
sub
cwde
pop
iret
and
cwde
aas
push
push
(bad)
cmp
pop
xor
cmp
cld
adc
sbb
cmp
fchs
pop
jge
outs
dec
lds
jl
icebp
mov
fs
xchg
and
js
inc
iret
mov
js
and
cld
and
rcr
out
pop
add
aam
inc
mov
in
ss
inc
pop
sti
fwait
(bad)
adc
fstp
jecxz
mov
out
hlt
cld
dec
adc
mov
adc
mov
clc
and
(bad)
jl
scas
or
out
jae
cmp
lds
or
dec
mov
mov
mov
adc
cmp
stc
xchg
je
lds
sbb
loop
sub
xor
sbb
loop
test
loop
enter
inc
and
or
es
loop
mov
dec
cdq
pop
loope
jecxz
xchg
je
lds
sbb
loop
sub
xor
sbb
loop
test
loop
enter
(bad)
inc
ss
push
outs
cmps
mov
iret
js
and
mov
sbb
mov
xchg
sbb
inc
sbb
jns
sbb
mov
cmp
in
imul
test
sbb
xchg
icebp
jl
ds
cli
test
loop
test
loop
sub
xor
sbb
loop
test
loop
enter
(bad)
(bad)
sub
ss
push
outs
xor
jmp
cmp
popf
jg
inc
mov
sbb
mov
xchg
sbb
inc
sbb
jns
sbb
mov
jp
cmp
jg
adc
cmp
push
sahf
inc
or
cmp
stc
xchg
jne
jne
cmp
lds
cmp
lds
pop
push
sbb
out
jae
cmp
(bad)
or
(bad)
arpl
push
fwait
adc
stc
pop
and
xor
xchg
nop
arpl
xchg
sub
div
pop
sbb
inc
sbb
jns
sbb
mov
and
mov
loop
lds
mov
repz
dec
enter
inc
enter
inc
xchg
or
xchg
sbb
inc
mov
and
mov
jl
iret
push
out
(bad)
(bad)
(bad)
sub
ss
enter
push
outs
icebp
pushf
jg
inc
mov
sbb
mov
sbb
sbb
aas
fdivrp
sbb
fisub
ficomp
icebp
(bad)
jmp
or
dec
mov
out
leave
mov
fistp
ds
or
out
jae
cmp
jne
sti
jmp
lods
and
ror
mov
pop
cmps
ins
add
in
outs
sub
inc
mov
call
pushf
jg
inc
mov
stc
mov
iret
and
cwde
aas
adc
jmp
popa
add
jle
add
xor
pusha
cld
neg
add
cmc
retf
in
jg
sub
loop
jns
mov
test
sub
sahf
inc
enter
xchg
das
daa
add
js
test
pushf
xor
or
stos
inc
sub
out
mov
cmp
les
fmul
push
push
or
pop
sahf
mov
in
pop
iret
and
cwde
aas
and
mov
adc
test
add
or
cmp
ret
into
pop
jnp
mov
xchg
(bad)
std
in
mov
leave
icebp
mov
or
jns
repz
jge
aaa
test
loop
test
xchg
or
fistp
mov
cwde
and
in
add
(bad)
mov
cld
push
cmp
mov
push
sbb
sub
fs
repz
jmp
into
pop
sahf
mov
enter
inc
enter
mov
add
fwait
std
into
loop
fwait
add
cmp
adc
pop
popf
popf
and
cwde
pop
iret
and
cwde
fisttp
cli
pop
mov
and
mov
sub
sub
lahf
adc
arpl
sar
cwde
add
xlat
pushf
add
and
leave
inc
mov
lods
jns
xor
pop
inc
jno
mov
jnp
jnp
cmps
fadd
(bad)
jl
nop
arpl
xchg
clc
pop
dec
add
dec
jle
cmp
adc
inc
into
push
cmp
pop
cmps
nop
arpl
jns
sub
pop
mov
push
mov
xchg
out
(bad)
out
test
loop
test
xchg
ret
jg
out
loope
push
dec
add
or
cmp
nop
arpl
in
push
inc
lds
loop
sbb
or
mov
jl
mov
sbb
mov
inc
out
cmp
(bad)
push
mov
js
inc
mov
sub
pushf
lahf
std
dec
lds
loop
sub
cmp
(bad)
push
cmp
xchg
fld
adc
out
jl
enter
inc
enter
mov
push
cmp
adc
stos
mov
repz
out
xchg
repz
out
jae
cmp
lds
pop
push
sbb
out
jae
cmp
jbe
jmp
lds
or
mov
pop
ins
pushf
retf
pop
lahf
iret
int3
mov
adc
mov
mov
or
sub
cmp
mov
adc
pop
or
stos
mov
sbb
imul
loop
leave
sti
jmp
xor
cli
pusha
pop
cmp
nop
arpl
and
inc
and
jecxz
xor
sahf
inc
enter
cmp
rcl
xor
das
fild
stc
xchg
dec
pushf
iret
out
xlat
pop
cmp
or
xor
loopne
out
sub
jl
popf
sbb
cmp
popf
ins
mov
pop
mov
mov
sbb
sub
repz
and
dec
and
cld
inc
lock
inc
fcomp
(bad)
xchg
arpl
xchg
dec
popf
fwait
pop
push
push
pop
das
int
lods
lock
push
or
jl
mov
icebp
adc
mov
inc
fcomp
(bad)
xchg
arpl
xchg
(bad)
in
in
cld
aas
push
cmp
addr16
cmp
int3
mov
add
cmp
sbb
mov
xchg
cmp
mov
dec
jmp
jno
cwde
pop
iret
and
cwde
aas
cmp
fbstp
fwait
scas
pushf
fwait
pop
fwait
pusha
jno
not
mov
jecxz
or
mov
mov
mov
in
out
push
jns
stos
add
stos
mov
push
enter
das
mov
inc
mov
push
jecxz
js
and
lods
daa
mov
pop
fwait
push
fimul
mov
cli
std
sbb
jg
cmps
aaa
pop
cld
div
outs
mov
xlat
scas
pop
mov
fdivr
stc
iret
jg
mov
inc
outs
mov
cld
call
std
mov
out
das
pop
add
add
push
lods
lahf
iret
je
xlat
sbb
mov
fdivrp
sbb
fisub
ficomp
icebp
push
mov
sbb
pop
xor
xchg
mov
fidivr
sti
loope
mov
(bad)
bound
cld
fcomi
mov
mov
mov
lahf
scas
jmp
sub
scas
lahf
iret
je
xlat
sbb
mov
pop
out
cmps
jg
ror
(bad)
inc
dec
cmp
fiadd
idiv
inc
jno
cmc
mov
jl
(bad)
(bad)
or
test
jnp
xchg
das
fdivr
scas
fcomi
cmps
call
mov
jecxz
fcmove
addr16
pop
jecxz
adc
xchg
push
jle
fisubr
add
pop
aas
sbb
dec
cmp
fiadd
cld
mov
movs
cmp
push
jle
(bad)
xlat
cmc
dec
or
lahf
pop
jg
(bad)
stos
lahf
stc
dec
jmp
aad
call
aad
fcmovne
addr16
pop
jecxz
adc
xor
add
pop
xchg
jge
data16
int
add
nop
xor
fidivr
loop
into
cmp
aas
jnp
gs
lea
xchg
xchg
call
push
icebp
outs
repnz
out
add
movs
(bad)
mov
(bad)
ins
(bad)
js
and
cwde
pop
iret
and
int3
clc
es
cmc
cmp
add
jecxz
fld
loope
add
xor
jmp
ja
cmp
popf
and
mov
push
pusha
mov
in
in
fdivr
cld
jmp
loop
aam
(bad)
jmp
cli
scas
retf
movs
jns
outs
fcmovne
addr16
add
mov
push
xor
fistp
mov
cwde
and
in
add
(bad)
mov
cld
or
stos
lods
fldenv
(bad)
stos
pop
pop
fldcw
xlat
pop
sbb
cmp
in
cmps
mov
jg
(bad)
sbb
outs
daa
(bad)
jg
pop
cli
scas
retf
inc
lock
pushf
fwait
pop
(bad)
arpl
icebp
and
xor
sahf
inc
enter
mul
sub
mov
outs
or
in
and
jne
adc
arpl
addr16
cmc
shl
scas
jns
pop
push
mov
jmp
cld
dec
mov
(bad)
mov
lods
ss
addr16
repnz
inc
mov
(bad)
jmp
fwait
or
out
jae
cmp
imul
popa
add
pop
jae
sar
cmp
and
js
cwde
fidivr
loop
ret
fwait
dec
icebp
cmpps
push
inc
sub
jns
imul
enter
mov
nop
arpl
xchg
cld
das
es
es
or
or
and
popf
adc
push
enter
sahf
or
mov
sahf
pop
jno
in
lods
clc
pop
loope
add
cwde
mov
js
mov
idiv
lds
lahf
sub
push
pop
scas
(bad)
pop
and
mov
cld
push
js
out
clc
cmp
or
out
add
dec
adc
mov
adc
mov
ins
inc
cmp
jns
lds
(bad)
imul
pop
fimul
cmps
cmp
fadd
fdivp
mov
adc
cmp
cmc
sar
in
cmp
lds
cmp
cmps
les
jp
sbb
adc
push
jmp
icebp
adc
fld
or
fisubr
jmp
cmp
clc
imul
(bad)
mov
arpl
jmp
repz
enter
mov
adc
in
or
pop
sahf
ins
call
xor
outs
out
or
out
jae
cmp
cmp
pop
fcompp
sbb
jnp
shl
ins
das
comiss
rcr
xlat
xor
xlat
jmp
mov
xchg
jecxz
in
pop
je
inc
pop
pop
mov
sbb
(bad)
mov
cld
inc
lock
inc
fcomp
(bad)
xchg
arpl
xchg
sbb
xor
cmp
push
cmc
ss
push
sub
cdq
imul
(bad)
cmp
int3
popf
stos
add
sar
in
cmp
lds
cmp
jb
(bad)
mov
sbb
loop
test
xchg
out
add
cmp
loope
jge
mov
or
div
mov
outs
fwait
imul
ins
fiadd
scas
add
mov
arpl
xchg
pop
inc
and
jecxz
xor
sahf
inc
enter
sahf
or
cli
fstp
cmp
in
mov
popf
mov
shl
cmp
mov
retf
mov
pop
pop
test
sbb
mov
and
or
and
mov
cld
in
xor
or
lods
scas
ins
xor
lock
cmc
(bad)
(bad)
sub
sub
in
mov
lods
mov
and
jmp
inc
enter
inc
enter
mov
push
movs
jno
cwde
pop
iret
and
cwde
lahf
cmp
push
(bad)
jg
push
out
xchg
loopne
jg
pop
mov
cmc
fisttp
push
jecxz
push
pop
pop
mov
mov
nop
arpl
and
inc
and
jecxz
xor
sahf
inc
enter
cmp
adc
pop
sbb
push
pop
stc
pusha
pop
test
retf
arpl
aam
test
(bad)
mov
repz
js
and
pop
xor
(bad)
mov
cld
inc
lock
cmps
cmp
pop
xchg
(bad)
xchg
arpl
xchg
ss
not
pusha
pop
mov
fdivrp
push
push
mov
shl
ret
sub
pop
jmp
or
mov
mov
mov
stc
movs
jmp
es
pop
iret
and
cwde
scas
xchg
pop
pop
std
pop
iret
arpl
xor
sub
sbb
add
(bad)
std
loope
test
shl
pop
(bad)
xlat
push
lods
xlat
push
mov
dec
repz
add
cmp
les
dec
enter
inc
enter
pextrw
pop
outs
cld
lea
mov
sbb
adc
add
out
mov
xchg
push
rep
jns
cli
mov
xchg
xchg
lods
stc
js
mov
jg
out
cli
call
xchg
scas
mov
and
mov
jl
cmp
push
sbb
adc
jle
call
push
in
jl
outs
mov
mov
xor
scas
cld
inc
aad
arpl
jecxz
mov
xlat
push
repnz
(bad)
daa
in
pop
iret
and
cwde
scas
xchg
xchg
push
jle
fisubr
add
pop
aas
sbb
dec
cmp
ficomp
lock
loopne
jge
outs
stos
cmp
mov
mov
pop
jnp
inc
out
movs
pop
jl
push
and
jne
jmp
jmp
jmp
jb
mov
adc
xlat
int3
inc
cmp
jle
sub
and
adc
call
push
and
mov
iret
push
mov
sbb
adc
fs
mov
(bad)
arpl
sub
jmp
xlat
push
(bad)
cmc
(bad)
and
and
cwde
scas
cdq
xchg
push
iret
ret
add
add
pop
xchg
jge
inc
or
sahf
jo
nop
xor
fidivr
loop
shl
adc
fbld
lds
out
xor
mov
adc
iret
fdivr
fist
(bad)
xchg
js
aad
jno
icebp
cli
retf
fiadd
sbb
xor
adc
aam
into
scas
(bad)
jno
and
popa
add
inc
enter
inc
fsubr
div
repnz
cmc
nop
mov
icebp
loop
add
mov
jecxz
and
jbe
and
ret
jmp
sti
jp
adc
mov
adc
xlat
int3
or
fiadd
out
sub
mov
xor
adc
or
jns
adc
retf
xchg
or
popf
push
call
pop
xadd
lea
aam
outs
push
out
adc
xchg
adc
in
(bad)
test
loop
test
in
popa
add
pop
jae
sar
cmp
jne
push
mov
sbb
or
or
jecxz
mov
adc
not
cmps
js
xor
stos
add
in
(bad)
test
loop
test
push
loopne
jg
add
aaa
stc
(bad)
fdivr
inc
sub
inc
adc
inc
in
mov
inc
mov
sub
mov
loope
mov
fwait
mov
mov
js
sti
out
pop
sti
test
cdq
mov
scas
js
mov
(bad)
mov
cld
push
js
out
clc
cmp
or
out
add
dec
adc
mov
(bad)
std
push
cmp
cs
into
aad
mov
push
js
adc
in
arpl
int3
mov
das
div
(bad)
adc
int3
mov
adc
dec
mov
xor
sbb
and
cmps
(bad)
cmp
and
cmp
aam
or
pop
in
out
into
jns
adc
push
jns
adc
xadd
cli
cdq
push
outs
(bad)
jp
or
out
jae
cmp
not
aas
test
cwde
scas
icebp
xor
push
and
jl
cmp
fcom
(bad)
std
dec
popa
lock
push
mov
push
push
das
add
(bad)
icebp
enter
daa
(bad)
data16
out
or
stc
lods
scas
fbld
in
pop
iret
and
cwde
scas
xchg
xchg
and
xor
sbb
loop
test
push
icebp
ins
pusha
mov
push
sub
into
dec
popf
add
mov
(bad)
cmp
test
sbb
mov
in
fucomip
cli
or
sbb
mov
sub
inc
and
jecxz
xor
sahf
inc
enter
iret
push
mov
push
sbb
dec
cdq
add
cli
add
(bad)
adc
xor
aad
xor
out
sbb
test
out
jae
cmp
stos
jecxz
loopne
popa
mov
or
lds
add
in
jecxz
repz
lock
dec
push
scas
push
pop
scas
pop
pop
mov
out
jb
push
leave
retf
adc
popa
arpl
inc
mov
sbb
mov
jmp
into
jbe
pop
mov
fild
xchg
(bad)
frstor
sbb
inc
lahf
inc
loopne
lods
push
mov
xchg
xlat
jmp
xlat
das
test
loop
test
push
repnz
inc
fcomp
(bad)
xchg
arpl
xchg
adc
mov
jb
cmp
(bad)
fbld
mov
lods
dec
add
push
pop
push
xchg
ja
das
test
cmc
pop
in
inc
mov
sbb
mov
sub
inc
and
jecxz
xor
sahf
inc
enter
out
cdq
jae
jg
shl
in
js
cld
(bad)
(bad)
mov
pop
and
dec
(bad)
mov
out
aad
pop
cmps
mov
enter
inc
enter
lss
jg
test
out
jae
cmp
stos
in
jne
div
sbb
sbb
sub
gs
jl
xor
icebp
jle
(bad)
comiss
mov
dec
js
stos
add
pop
in
cli
gs
cmp
nop
arpl
jg
(bad)
(bad)
int3
js
push
test
pushf
idiv
mov
repz
sbb
sbb
mov
push
imul
lgs
(bad)
loopne
js
jns
sub
imul
inc
mov
pop
jns
(bad)
js
outs
jl
or
pop
test
les
mov
mov
jo
cmp
out
or
test
pop
pop
and
mov
jo
cdq
mov
in
xchg
sub
cwde
scas
xchg
xchg
pop
(bad)
sti
jmp
lods
and
ror
mov
out
mov
dec
push
retf
adc
lahf
mov
xor
cmps
cs
mov
ficomp
hlt
cli
and
(bad)
jl
cmp
jae
repnz
jle
add
std
push
add
cli
sar
aas
dec
add
sbb
sub
jge
sbb
mov
retf
test
outs
adc
jg
scas
jle
std
aad
(bad)
(bad)
lahf
popf
mov
jmp
sbb
xor
sub
sahf
ret
retf
or
loop
pop
xchg
jge
data16
int
add
nop
xor
fidivr
loop
loopne
cmp
in
js
cmp
cmps
push
pop
jmp
js
fdivr
fcmovnbe
push
(bad)
call
pop
ret
push
mov
or
cwde
das
leave
ret
aaa
stc
test
popa
add
pop
scas
retf
jg
rol
mov
out
sbb
or
mov
imul
ret
mov
shr
cmc
xchg
mov
lahf
(bad)
stos
add
(bad)
cld
and
inc
or
test
and
popa
add
inc
enter
cmp
pop
push
jmp
cmp
pop
jne
cs
stc
jmp
push
push
scas
aas
lea
inc
mov
inc
loop
outs
out
ret
add
fucomip
ja
jg
adc
fld
add
jmp
repnz
pop
int
in
js
pop
clc
inc
mov
jp
push
out
jns
stc
js
xor
js
imul
stos
sbb
test
jo
add
xlat
pushf
add
and
icebp
mov
pop
in
and
js
dec
mov
jecxz
aas
stc
xchg
pop
push
(bad)
mov
arpl
xor
push
pop
xchg
leave
push
jle
outs
lea
inc
mov
sub
lock
cld
out
jp
pop
and
add
jg
mov
mov
pusha
mov
dec
fs
imul
icebp
(bad)
dec
lds
mov
ins
xlat
das
jmp
xor
adc
nop
xor
cmp
cld
adc
clc
into
pop
fild
mov
sbb
cmp
dec
aad
mov
lahf
stc
enter
cmp
icebp
enter
movs
aad
fld
pop
adc
cmps
div
add
xor
mov
adc
push
enter
jnp
cld
in
xchg
imul
xchg
cmp
pxor
dec
shr
js
add
jmp
movs
mov
stos
lods
mov
push
jecxz
js
mov
pop
test
inc
and
clc
call
arpl
ficom
sbb
in
cmc
cwde
cmp
sub
cmp
mov
(bad)
(bad)
mov
int3
jecxz
loop
js
stos
add
dec
mov
pop
xchg
(bad)
xchg
arpl
xchg
or
inc
push
push
xor
mov
ins
fimul
(bad)
jbe
push
lods
push
xchg
ret
imul
jne
jge
bound
(bad)
fnstsw
nop
arpl
xchg
xchg
ror
sbb
sar
jb
mov
adc
bswap
mov
out
(bad)
adc
and
imul
imul
lea
push
xchg
ret
sti
(bad)
pop
imul
cmps
imul
jge
xchg
mov
sub
xlat
(bad)
jmp
fwait
or
out
jae
cmp
stos
in
or
and
mov
cld
dec
js
sar
ss
mov
pop
js
out
jnp
dec
in
(bad)
sub
sub
in
data16
mov
(bad)
in
je
(bad)
fsubp
mov
pop
cmps
mov
pop
and
mov
jl
mov
push
movs
jno
cwde
pop
iret
and
cwde
fisttp
iret
push
cdq
cmp
push
popf
pop
push
cmp
cs
sbb
arpl
jmp
cmp
lahf
cld
in
pop
mov
cmp
pop
ja
mov
loop
fidivr
out
cmp
lds
cmp
stos
in
or
and
mov
cld
dec
js
rcr
dec
jle
scas
test
inc
fisubr
pop
jns
gs
mov
aam
push
sbb
inc
rcl
loope
pop
pop
xchg
mov
cli
int
jb
mov
pop
mov
sbb
mov
and
movs
jno
cwde
pop
iret
and
cwde
fistp
iret
push
cdq
or
or
xor
enter
test
pop
ja
sbb
and
sub
sahf
cmp
int
jb
ja
pop
cmp
jns
sbb
mov
and
mov
dec
jmp
jno
cwde
pop
iret
and
cwde
fistp
iret
push
cdq
fwait
xlat
pop
popf
cs
imul
pop
mov
pop
fdivrp
add
out
add
ja
fsubr
fcmovbe
iret
pushf
jp
repz
int
jb
(bad)
cmp
sbb
mov
inc
push
pushf
loopne
js
aad
icebp
cmp
xor
lea
sbb
rcr
(bad)
pop
sahf
ss
ins
mov
(bad)
imul
xchg
ds
push
mov
push
or
jg
aas
push
push
in
lahf
lahf
jge
xchg
outs
xchg
jo
repz
out
sbb
repz
test
movs
js
(bad)
js
outs
jl
or
pop
test
addr16
fild
iret
push
call
(bad)
les
push
pop
mov
scas
dec
aad
cld
jno
inc
jae
imul
adc
sub
scas
jnp
(bad)
mov
arpl
xchg
lds
lods
not
aas
add
(bad)
pop
inc
or
cmps
popf
adc
cmp
dec
mov
mov
stos
pop
jle
xor
mov
mov
les
repnz
(bad)
call
cwde
pop
iret
and
cwde
das
lds
(bad)
sub
add
out
add
pop
data16
pop
mov
inc
add
cmps
popf
adc
cmp
inc
mov
mov
cmps
out
ds
dec
mov
sub
ret
jp
push
cmp
jnp
mov
xlat
jg
cmp
adc
mov
adc
xchg
in
sahf
ret
retf
or
aas
pop
xchg
jge
data16
int
add
nop
xor
fidivr
loop
lock
lock
div
repnz
cmc
adc
sti
pop
cld
and
jecxz
mov
xor
and
mov
mov
jl
push
mov
adc
test
add
or
cmp
ret
into
pop
jnp
mov
shl
or
mov
dec
xchg
not
addr16
bound
pop
mov
div
mov
(bad)
cli
dec
sbb
bound
jns
sbb
mov
xchg
mov
add
mov
sbb
add
mov
int3
out
add
(bad)
(bad)
sub
fcomp
gs
js
inc
mov
cmp
fcomi
xor
cmp
(bad)
lods
lods
push
mov
sahf
xlat
jg
js
adc
mov
adc
xchg
in
outs
out
ret
add
fucomip
ja
jg
adc
fld
add
jmp
lock
sar
fchs
mov
test
sbb
movs
clc
add
pop
pop
or
and
ins
lea
ret
add
add
mov
add
jnp
adc
into
mov
mov
pop
mov
test
fiadd
in
sar
(bad)
cli
dec
push
psubd
sbb
inc
lock
cld
out
jp
pop
and
add
jg
mov
mov
push
iret
push
mov
mov
sub
fdiv
xchg
retf
arpl
in
xlat
aam
dec
jl
xchg
(bad)
and
mov
mov
iret
push
loop
lahf
xor
out
jae
cmp
xchg
loope
jecxz
lock
add
add
inc
enter
cmp
sub
sti
stos
jge
(bad)
push
pop
xchg
sbb
aam
aas
cld
shl
fistp
push
js
mov
icebp
mov
xor
out
jae
cmp
fwait
mov
xchg
mov
xor
mov
adc
ss
loopne
aas
cmp
aam
js
push
mov
imul
movs
neg
(bad)
xor
scas
sub
jg
sti
(bad)
(bad)
mov
sti
js
cmp
ficom
xchg
push
mov
in
pop
iret
and
cwde
div
ins
inc
push
loope
ror
sbb
xor
pop
iret
and
cwde
iret
out
pusha
mov
fcomp
xchg
push
mov
loop
imul
scas
in
je
mov
mov
ins
inc
mov
dec
idiv
shl
in
pop
iret
and
cwde
das
ret
sbb
inc
sbb
jns
sbb
mov
ins
sahf
or
in
aas
push
sbb
test
xchg
cli
dec
in
mov
jnp
jecxz
fiadd
dec
(bad)
mov
mov
sbb
dec
sbb
sahf
fs
das
ins
inc
mov
sbb
mov
and
movs
jno
cwde
pop
iret
and
cwde
ja
ins
inc
pop
jns
outs
stos
sbb
lock
fild
stos
adc
cli
xor
jge
in
js
jnp
js
mov
jecxz
imul
int3
mov
adc
pop
loope
or
and
mov
mov
retf
and
pop
ds
repz
shl
jne
push
jns
mov
ins
pop
xlat
pop
jecxz
push
jo
call
daa
scas
icebp
gs
enter
inc
enter
daa
fmul
retf
adc
popa
arpl
inc
mov
sbb
mov
iret
push
and
jg
push
inc
dec
ds
cwde
add
imul
jne
jp
xor
pop
pop
sub
adc
clc
rcl
int3
mov
adc
pop
loope
or
and
mov
mov
repnz
xchg
pop
mov
scas
retf
(bad)
sub
sub
loope
gs
repz
xor
ja
xchg
js
push
pop
call
mov
and
movs
jno
cwde
pop
iret
and
cwde
ja
in
loop
not
pusha
aam
inc
jecxz
(bad)
mov
sub
in
add
pop
loop
mov
mov
sbb
fsub
dec
push
enter
inc
enter
pop
pop
ss
jmp
mov
sbb
loop
test
pop
icebp
in
loop
cmp
push
shl
jmp
(bad)
cs
push
fbld
adc
jnp
pop
pop
sub
xchg
lods
(bad)
xchg
and
cwde
pop
iret
and
cwde
das
lds
scas
dec
outs
adc
aad
push
pop
add
(bad)
std
push
cmp
lods
clc
nop
jns
adc
pop
adc
out
pop
or
cmp
icebp
fs
icebp
and
jae
cmp
dec
icebp
push
cld
icebp
(bad)
(bad)
add
sbb
movmskps
into
mov
in
add
push
clc
in
outs
out
inc
icebp
xchg
push
add
inc
mov
sbb
mov
pop
and
cwde
pop
iret
and
cwde
das
lds
por
hlt
dec
add
outs
jmp
xchg
repnz
bound
cmp
mov
stc
imul
mov
mov
jge
std
std
mov
or
sbb
movs
js
out
in
stos
std
xchg
inc
sti
cmp
cmc
xor
jg
add
mov
loop
rol
pusha
mov
inc
loop
outs
mov
jl
test
in
outs
in
(bad)
arpl
jns
push
int
push
bound
stc
and
adc
adc
aam
js
add
(bad)
stos
mov
ret
movs
cmp
push
adc
fidivr
out
js
popf
fwait
std
xchg
or
loop
outs
cld
call
dec
push
(bad)
(bad)
scas
mov
jle
mov
gs
fdiv
jg
ss
jb
pop
sbb
xchg
aam
xor
cmp
(bad)
push
gs
test
add
in
mov
into
inc
icebp
scas
pushf
fwait
pop
push
push
adc
iret
xor
mov
dec
aad
cld
mov
sti
das
xlat
loop
outs
pusha
jl
data16
clc
push
ins
mov
nop
xor
test
popf
pop
std
jecxz
inc
int3
adc
add
xor
jne
adc
add
in
mov
inc
xchg
ret
(bad)
push
push
imul
jle
(bad)
jg
outs
test
xchg
clc
push
ins
mov
nop
xor
add
in
ja
jg
adc
fld
add
jmp
mov
dec
ss
and
loop
repz
push
jae
xchg
ret
pop
std
xchg
(bad)
stos
add
push
ins
mov
nop
arpl
push
adc
aam
ficomp
out
cdq
inc
inc
xchg
rol
stos
nop
ja
push
cmp
sub
aas
movq
out
push
in
lds
mov
jns
arpl
sti
js
mov
test
sub
cmp
or
out
pop
adc
jl
fistp
in
inc
test
add
sti
outs
add
xchg
xor
into
mov
out
dec
popf
(bad)
loopne
fs
loop
cmc
sbb
aas
pop
push
pop
mov
and
mov
js
inc
mov
sub
pop
xor
cmp
cld
adc
js
or
jecxz
div
push
pop
dec
push
xor
shl
sbb
adc
clc
shl
jecxz
ret
xchg
dec
jnp
bndstx
adc
push
jmp
and
out
mov
jnp
sbb
sub
or
aam
mov
cmp
push
imul
xchg
xchg
scas
dec
mov
stos
lock
push
xchg
not
mov
mov
mov
repz
loop
loop
mov
fld
rcr
jo
jl
stos
sbb
adc
popa
arpl
inc
mov
sbb
mov
add
(bad)
imul
icebp
and
call
pop
jp
pop
jnp
cmp
ds
loop
shl
test
sbb
test
out
jae
cmp
pop
lods
iret
mov
add
mov
repnz
aad
pop
imul
clc
test
(bad)
and
sar
lahf
popf
mov
aad
jg
js
or
and
mov
cld
xchg
ja
push
mov
mov
aad
(bad)
(bad)
mov
xlat
jle
push
xchg
xchg
movs
cmp
clc
outs
icebp
dec
or
and
mov
cld
xchg
div
xor
and
jbe
xchg
das
aas
rcr
cmp
pop
stc
les
sti
aad
sub
inc
in
cmc
int3
test
jp
jecxz
lds
sub
xor
sbb
loop
test
sub
not
jbe
(bad)
cmp
shr
js
jle
fwait
cmp
(bad)
mov
xchg
mov
mov
(bad)
mov
sbb
push
repnz
inc
fcomp
(bad)
xchg
arpl
xchg
in
mov
out
cmps
sbb
(bad)
je
lds
inc
test
repz
mov
and
xor
lea
lahf
sub
inc
xchg
dec
jnp
jge
and
mov
cld
push
iret
fimul
pop
jae
push
sbb
cld
pop
aas
xor
loop
mov
fistp
pushf
imul
xchg
clc
mov
pop
jno
sub
(bad)
mov
mov
inc
mov
push
jecxz
js
icebp
in
loop
cmps
jns
cmps
js
add
fstsw
jecxz
dec
mov
xchg
sti
cmp
jecxz
fsubrp
dec
push
inc
push
popa
pop
loop
mov
pop
jno
sub
(bad)
mov
lds
outs
cld
lea
mov
sbb
adc
add
fld
xchg
sbb
pop
(bad)
xor
and
mov
idiv
sbb
fdiv
push
loop
lods
push
mov
jecxz
(bad)
js
dec
mov
sbb
loop
cmp
mov
dec
inc
sbb
and
neg
jle
call
enter
push
dec
push
out
xchg
mov
dec
push
(bad)
cs
push
fbld
cmp
push
das
retf
sbb
jecxz
jmp
xchg
sub
cwde
pop
iret
and
mov
lods
neg
es
test
shufps
add
into
mov
loopne
lds
fcmovb
fldpi
or
(bad)
pop
mov
lds
cli
rcl
ds
hlt
pop
mov
dec
out
scas
push
mov
jecxz
jmp
xchg
sub
cwde
pop
iret
and
int3
test
lock
ror
ret
cwde
add
int3
mov
into
movs
jns
and
mov
mov
mov
jle
ret
(bad)
pop
push
sti
push
dec
icebp
xchg
push
add
call
pop
push
out
add
inc
dec
popa
pop
loop
aam
pop
in
cmp
lds
cmp
mov
adc
test
add
or
cmp
ret
into
pop
jnp
dec
call
mov
xchg
or
fwait
xchg
jmp
out
jnp
retf
fnstcw
push
iret
lds
push
mov
jecxz
out
xchg
and
cwde
pop
iret
and
int3
mov
jmp
adc
test
add
int3
inc
popf
popf
and
cwde
fild
iret
shl
push
scas
lahf
xlat
mov
jo
mov
jg
stc
repz
fnstsw
mov
out
push
or
mov
mov
mov
adc
lock
jge
add
fwait
std
into
loop
fwait
add
cmp
adc
pop
popf
popf
and
cwde
fild
iret
cs
push
push
cmp
sub
pop
pushf
xlat
aaa
add
jmp
cmc
pop
mov
lahf
ffree
icebp
test
jb
mov
adc
in
xor
inc
cmp
cmp
call
cmp
ret
in
scas
test
mov
loopne
push
(bad)
push
js
inc
sub
mov
sbb
sbb
in
sbb
mov
arpl
adc
pop
dec
add
dec
jle
cmp
adc
inc
into
push
cmp
pop
inc
jbe
pop
pop
mov
rol
pop
fild
(bad)
loop
mov
jmp
(bad)
sar
arpl
push
mov
movs
or
out
xchg
xchg
mov
ret
xchg
push
add
cld
into
jns
icebp
inc
pop
sti
fwait
shl
and
fwait
stos
mov
jmp
shl
xchg
in
cmp
mov
(bad)
stos
adc
(bad)
icebp
cs
movs
or
out
cdq
xchg
div
push
xor
sbb
and
cmps
(bad)
cmp
sar
fxtract
aam
psllw
sbb
jnp
inc
out
mov
jg
imul
out
jecxz
mov
jae
retf
cmp
dec
enter
mov
loope
ror
sbb
xor
pop
scas
inc
jbe
idiv
div
aad
inc
mov
sub
in
jle
std
aad
pop
sub
loopne
in
sub
cs
lds
pop
push
sbb
out
jmp
pop
pusha
pop
pop
in
pop
push
outs
cmp
dec
(bad)
loope
dec
adc
jo
mov
dec
mov
push
adc
ja
jecxz
lahf
nop
arpl
mov
xchg
(bad)
xchg
arpl
push
fld
aad
fcomp
dec
pop
jnp
(bad)
test
bound
adc
mov
out
fisub
mov
xchg
sbb
inc
sbb
jns
cmp
out
jg
pop
in
push
mov
neg
out
shl
lds
jg
retf
scas
jge
cwde
sbb
jae
inc
mov
out
xchg
(bad)
mov
js
or
and
mov
stos
cmc
mov
or
neg
push
mov
(bad)
inc
lock
jp
pop
push
neg
xlat
mov
mov
jecxz
xchg
nop
arpl
mov
xchg
(bad)
xchg
arpl
push
fld
aam
fcomp
pop
jnp
lds
retf
jnp
(bad)
scas
mov
add
ins
jg
sahf
(bad)
adc
gs
mov
out
mov
mov
js
or
and
mov
mov
fcomp
pop
sti
xchg
sbb
dec
push
lahf
cmps
jp
(bad)
jmp
inc
push
popa
sbb
sub
inc
xchg
dec
jnp
jge
and
mov
mov
fcomp
pop
sti
shl
or
das
mov
cmps
imul
mov
mov
arpl
outs
sub
imul
mov
mov
inc
mov
push
jecxz
js
cmp
adc
scas
cld
bound
outs
pusha
pop
retf
dec
in
mov
sbb
scas
(bad)
ja
jle
adc
cmp
clc
mov
in
pop
iret
and
mov
icebp
or
ss
pop
ret
mov
sahf
pop
inc
sub
mov
cmp
out
fmul
sbb
pop
push
push
lahf
(bad)
call
xchg
xor
jne
(bad)
mov
jb
pop
or
lds
lods
not
aas
add
(bad)
pop
inc
or
cmps
popf
fldcw
pop
inc
js
outs
mov
jbe
fidiv
mov
jo
arpl
stc
repz
lods
dec
js
js
popf
fwait
pop
out
cmp
out
in
sahf
arpl
es
test
shufps
add
into
in
cmp
arpl
mov
push
out
aad
jl
movs
mov
arpl
fsub
xor
das
(bad)
out
cmp
imul
mov
in
aas
and
jmp
ss
test
add
int3
cmp
cmp
mov
fcomp
loop
aas
push
mov
cs
ins
pop
loopne
(bad)
sub
ror
icebp
loope
lahf
cmp
dec
(bad)
scas
(bad)
addr16
das
pop
jmp
icebp
mov
in
aas
and
mov
adc
test
add
or
cmp
ret
into
pop
jnp
push
(bad)
mov
in
ffreep
push
sti
lds
pop
call
xchg
fimul
pop
cld
mov
call
cmp
pop
pusha
mov
outs
jb
fsubr
or
loop
sbb
add
jecxz
inc
int3
adc
add
xor
jne
adc
and
(bad)
inc
cmp
ss
cld
mov
lods
aas
jae
std
xlat
data16
jbe
mov
xor
cld
fsubr
or
loop
outs
out
ret
add
fucomip
ja
jg
adc
fld
add
jmp
cmp
inc
push
sbb
loop
mov
jecxz
jle
cmc
or
in
jmp
movs
clc
inc
ins
pop
(bad)
(bad)
jg
push
outs
cmps
mov
aaa
cmp
cmp
jg
cmp
dec
add
jnp
cli
imul
or
pop
dec
pop
iret
leave
mov
jecxz
xchg
das
into
test
sbb
dec
lds
ret
call
js
lock
out
mov
mov
dec
and
cwde
aas
inc
push
(bad)
pop
adc
jl
fistp
in
inc
test
add
sti
outs
add
xchg
xor
into
in
xor
mov
iret
cs
jo
jbe
mov
fstp
mov
aam
cmp
mov
pop
loop
mov
mov
dec
and
cwde
aas
push
push
(bad)
cmp
pop
xor
cmp
cld
adc
pushf
lahf
std
outs
and
stos
xchg
(bad)
clc
rol
imul
pop
mov
add
pop
fs
mov
inc
out
cmp
(bad)
push
mov
xor
fild
shl
push
js
scas
pop
mov
loopne
jmp
jnp
mov
outs
stc
pop
and
dec
mov
cwde
pop
das
inc
mov
stos
lock
push
pop
adc
pop
or
leave
mov
xor
mov
fcomi
sahf
mov
jne
test
adc
aas
icebp
stos
loope
(bad)
clc
(bad)
icebp
mov
js
mov
mov
and
lock
(bad)
(bad)
jns
mov
inc
mov
mov
movs
iret
dec
mov
ds
js
call
arpl
(bad)
jecxz
repz
sub
xor
sbb
pop
lds
push
dec
icebp
jmp
out
jecxz
push
mov
loop
jns
cmp
jg
dec
stos
sbb
leave
fnstcw
xchg
ror
sbb
sar
jb
pop
adc
jnp
int3
fist
lds
pop
sti
div
out
xor
movsx
icebp
inc
(bad)
jmp
xchg
out
test
sbb
inc
(bad)
addr16
sahf
xchg
and
xor
sbb
pop
mov
es
repnz
fisubr
hlt
ins
xchg
fistp
lahf
es
pop
icebp
sar
dec
mov
aaa
pop
or
lea
jle
arpl
dec
loop
jnp
mov
sbb
outs
fcomi
xor
sbb
xchg
aad
dec
sbb
sbb
ror
sbb
sar
jb
pop
sbb
imul
neg
test
into
ins
mov
sub
ja
xor
icebp
fcmovnu
pushf
push
jmp
pop
mov
add
stos
sbb
sbb
in
jmp
mov
sbb
pop
leave
mov
mov
pop
push
outs
js
ins
pop
loopne
xchg
(bad)
lock
(bad)
jl
push
std
xchg
arpl
jbe
mov
(bad)
(bad)
push
mov
mov
pop
std
pop
iret
arpl
xor
sub
cmp
fistp
push
mov
cmp
jne
mov
loop
jg
adc
out
xchg
jmp
pushf
ja
xchg
push
lods
(bad)
cmps
je
jecxz
pop
adc
lds
outs
cld
lea
mov
sbb
adc
add
dec
popf
fwait
std
fld
pop
pop
dec
mov
mov
fdivr
pop
mov
mov
ins
sbb
outs
aad
add
push
lds
lods
not
aas
add
(bad)
pop
inc
or
cmps
popf
cdq
sbb
sti
addr16
daa
jle
jbe
mov
retf
loop
mov
add
out
cli
scas
iret
loop
retf
popa
je
mov
xchg
call
dec
nop
in
iret
mov
das
push
sti
or
add
sbb
push
add
ret
push
sub
pop
pushf
sbb
outs
sbb
jae
loopne
jbe
cld
mov
cmc
ins
jae
std
xlat
gs
inc
out
lods
push
push
idiv
jae
cmp
loopne
stos
mov
ret
movs
cmp
push
adc
fidivr
addr16
or
addr16
pop
loope
mov
std
hlt
pop
pop
data16
std
movs
(bad)
sub
push
fcmovne
xlat
out
cli
scas
int
push
ret
pop
cmp
push
idiv
xchg
(bad)
jp
add
clc
icebp
stos
in
xor
add
add
cmc
test
test
xchg
(bad)
in
test
arpl
ins
daa
jp
sub
pop
fdivrp
mov
pop
mov
mov
(bad)
outs
fucom
push
lds
(bad)
mov
push
(bad)
adc
add
out
cld
jmp
add
test
sbb
cdq
out
pop
cmp
adc
add
outs
mov
inc
popa
sbb
xlat
fdivr
mov
out
repnz
shr
sub
cld
and
ret
popa
add
aas
outs
or
in
and
jne
adc
repz
daa
ja
push
mov
pop
push
add
scas
cmp
das
mov
scas
pop
ficom
pushf
jp
jae
in
fwait
and
lahf
mov
mov
add
xor
test
(bad)
mov
cli
shl
mov
(bad)
dec
push
outs
mov
clc
push
inc
fcmovne
pop
xlat
fdivr
js
repz
sti
pop
and
cld
adc
das
es
es
or
or
and
popf
cdq
sbb
dec
call
lahf
cmps
jbe
mov
pop
jg
aad
jl
repz
mov
imul
mov
outs
cmps
xor
jae
outs
sbb
repz
loope
mov
add
add
inc
enter
mov
cmp
mov
test
jns
fmulp
push
lahf
push
mov
inc
ins
out
add
mov
lods
cmp
cwde
and
out
and
cld
xchg
js
dec
out
popa
and
mov
and
push
xor
iret
dec
fidivr
daa
js
ja
xor
mov
addr16
loop
mov
(bad)
jl
not
jl
or
dec
push
lods
push
popa
sbb
js
cmp
out
cmp
not
aas
test
cwde
scas
icebp
xor
jns
mov
fs
jp
outs
movs
mov
(bad)
aad
cmp
ficomp
pop
cld
mov
dec
and
cwde
jecxz
out
pushf
and
cwde
aas
or
ror
sbb
sar
jb
dec
call
and
dec
push
scas
jle
or
jecxz
mov
iret
jle
pop
out
iret
push
jnp
mov
cmp
mov
jecxz
(bad)
jecxz
icebp
cmp
xor
mov
push
movs
jno
cwde
lahf
xor
dec
shl
jp
fidiv
xlat
(bad)
call
push
mov
add
aas
icebp
rcr
jne
inc
mov
sbb
jnp
out
and
cld
inc
lock
inc
fcomp
(bad)
xchg
arpl
cmp
inc
mov
xor
push
xchg
add
xchg
mov
mov
ds
test
xor
jae
mov
stc
and
or
cmp
cmp
pop
das
(bad)
xor
outs
ror
leave
loop
mov
je
jae
ficomp
xchg
stos
add
sbb
lahf
push
test
pop
ror
sbb
inc
sbb
stc
mov
call
dec
das
cmps
movs
lds
mov
jb
pop
clc
inc
hlt
out
cmc
pop
std
xchg
push
stos
loope
mov
push
jecxz
(bad)
jecxz
icebp
cmp
in
aas
or
ror
sbb
sar
jb
out
add
xlat
dec
rcl
sub
je
aas
mov
pop
inc
adc
in
jle
std
cmp
fist
mov
mov
loop
pushf
xor
mov
pop
sbb
inc
sbb
stc
mov
sti
fcomp
pop
xchg
js
out
inc
mov
rcr
jg
push
outs
(bad)
jns
mov
cli
out
icebp
cmp
in
dec
sbb
arpl
stc
pop
jns
aad
icebp
cmp
xor
lea
sbb
mov
ret
sbb
repz
pop
xchg
xchg
popa
add
cmc
(bad)
jmp
js
repnz
cmp
out
adc
daa
(bad)
idiv
mov
pop
jns
(bad)
js
outs
jl
or
pop
test
addr16
out
dec
fyl2xp1
fcomp
xchg
cs
repnz
or
mov
mov
call
out
inc
push
mov
jae
sub
nop
jecxz
sahf
cmp
test
mov
cli
daa
add
sbb
lock
aam
xor
in
les
inc
test
out
call
call
movsx
lahf
mov
data16
cmps
sar
aas
sti
sbb
lds
mov
mov
xlat
retf
(bad)
sub
add
out
add
pop
data16
pop
mov
inc
add
cmps
popf
test
jmp
jg
mov
ins
mov
mov
add
in
out
mov
js
jecxz
pop
or
jne
out
pop
jecxz
xchg
nop
arpl
mov
push
fld
popa
cmps
jo
sbb
add
or
popf
jecxz
(bad)
or
jg
(bad)
fimul
mov
lds
(bad)
dec
lahf
cmps
iret
xor
dec
xchg
mul
xchg
test
scas
jae
iret
push
out
fild
dec
ds
stos
mov
ret
mov
cwde
add
xlat
adc
adc
fidivr
mov
mov
xchg
dec
(bad)
mov
imul
(bad)
imul
iret
xor
movs
jns
aad
xor
out
fild
or
test
and
popa
add
mov
arpl
lahf
cld
push
mov
std
xlat
popf
push
jg
cli
jge
ins
std
pop
ficomp
mov
jns
and
sbb
cmp
inc
mov
call
shl
popf
lds
aaa
add
add
ds
fwait
addr16
fcmove
arpl
pushf
cld
mov
das
cmp
popf
mov
std
sub
sahf
inc
dec
aad
xor
imul
inc
mov
fidivr
cwde
add
xlat
pushf
add
and
popf
fs
outs
stc
fstp
daa
jg
lds
or
repz
cld
int3
dec
mov
fidivr
fdiv
rep
jnp
std
daa
pop
sti
div
push
mov
mov
jne
out
scas
icebp
jle
enter
push
(bad)
pop
adc
jl
fistp
in
inc
test
add
sti
outs
add
xchg
xor
into
push
shl
sub
stc
aaa
sub
loope
ret
pop
lds
or
add
jns
std
daa
pop
mov
push
jge
cmc
test
in
outs
mov
div
popa
add
add
inc
jbe
sub
in
pop
mov
cld
mov
movq
pop
dec
cmps
xor
test
imul
mov
and
push
xchg
int
adc
(bad)
jg
daa
mov
stos
jl
sub
adc
ds
mov
push
in
aas
icebp
rcr
out
clc
cld
in
and
inc
enter
cmp
rcl
and
(bad)
jl
scas
or
out
loop
mov
cs
cmps
ret
repz
mov
xor
ins
fcmovnb
sub
popa
lock
jbe
shr
and
cwde
fild
jl
mov
push
movs
jno
cwde
scas
mov
push
push
sti
mov
mov
cmp
push
fsubp
lgs
fwait
imul
xchg
aam
fldenv
push
mov
cmp
mov
mov
inc
fcomp
(bad)
xchg
arpl
pop
cmps
je
mov
xchg
add
psraw
cmp
das
(bad)
ins
mov
jp
jnp
cmp
mov
repz
repnz
inc
fcomp
(bad)
xchg
arpl
aaa
pop
lahf
lahf
sbb
das
(bad)
ret
aas
ds
repnz
ins
ja
std
dec
mov
xchg
ret
mov
push
cwde
and
or
mov
repz
repnz
inc
fcomp
(bad)
xchg
arpl
lahf
ffreep
leave
sub
vcvtpd2dq
or
push
mov
push
jae
std
dec
mov
pop
iret
pop
ds
cwde
and
or
mov
cmc
add
out
in
or
and
jl
mov
mov
xchg
xor
xor
out
push
mov
jne
mov
popf
mov
and
add
inc
xchg
cli
sbb
inc
fcomp
(bad)
xchg
arpl
data16
jo
and
leave
loop
lahf
mov
sub
push
movs
mov
test
push
fistp
mov
pop
ret
rcl
add
fidiv
int3
push
leave
sub
hlt
pop
sbb
inc
sbb
stc
push
(bad)
popf
popf
jg
icebp
in
jp
xchg
aas
push
test
mov
inc
scas
jle
jae
in
outs
xchg
lds
scas
lds
(bad)
jnp
mov
cmp
jns
aad
icebp
cmp
xor
lea
sbb
xchg
adc
dec
mov
pop
lahf
xlat
push
mov
push
jns
mov
jmp
outs
outs
js
cmp
scas
sub
pushf
sbb
(bad)
js
outs
jl
or
pop
test
addr16
loope
jno
(bad)
fmul
daa
imul
mov
xor
pop
stc
addr16
std
in
push
mov
icebp
les
xor
fwait
mov
(bad)
push
mov
cli
daa
add
sbb
lock
aam
xor
sub
data16
sub
pop
push
sub
js
push
out
add
stos
clc
adc
push
mov
pop
xor
loopne
int
ficomp
nop
push
and
cmc
sbb
cld
bound
mov
mov
xor
movlps
fsubp
mov
mov
sub
and
scas
ds
aad
ret
xchg
loope
int
mov
ret
fcomi
push
iret
loope
add
pop
scas
retf
xor
dec
pop
push
test
enter
pushf
add
jne
mov
push
cmp
mov
sbb
xchg
(bad)
lock
(bad)
out
neg
sti
ja
out
out
sbb
sub
sahf
xchg
ror
mov
lea
sbb
loope
and
mov
(bad)
data16
not
cmp
adc
cld
mov
not
icebp
push
sbb
cwde
iret
icebp
jg
jmp
test
popa
add
aas
out
push
les
dec
add
jae
out
pop
repnz
xor
outs
pop
repz
std
adc
mov
pop
repz
cli
dec
mov
sbb
jecxz
(bad)
(bad)
jge
outs
loope
sti
xor
shl
popf
lds
aaa
add
add
ds
or
retf
in
dec
push
icebp
bnd
mov
pop
icebp
(bad)
(bad)
(bad)
jmp
jns
std
daa
pop
mov
loopne
jns
out
push
pop
pop
adc
cmc
or
repz
out
cdq
inc
inc
xchg
fwait
dec
out
jns
xor
lds
xchg
xchg
add
repz
dec
mov
repnz
pusha
mov
jmp
jmp
sub
jmp
jge
push
cwde
add
and
jb
ficomp
jns
fwait
mov
adc
mov
ins
mov
mov
mov
cld
mov
(bad)
lahf
movs
int
in
aas
icebp
sar
sub
pop
cld
ja
cmc
or
bndstx
add
push
cld
icebp
outs
lods
not
dec
cwde
sbb
jo
pop
mov
add
sub
dec
fwait
ja
mov
sahf
js
shr
push
sub
faddp
inc
out
pop
add
aam
out
push
into
int
jae
fs
repnz
imul
(bad)
imul
pop
scas
rcl
retf
shl
pop
out
outs
scas
lds
outs
int
mov
mov
push
and
fwait
cmp
aas
test
cwde
scas
icebp
xor
cmp
lock
mov
pop
cmp
mov
pop
stos
push
mov
adc
add
repz
fwait
arpl
les
out
sub
or
out
in
or
and
cld
loopne
cmp
cmps
xlat
dec
sub
sahf
js
sub
pop
cmp
pop
ret
int
(bad)
cmp
cmp
jp
call
mov
test
push
repnz
inc
fcomp
(bad)
xchg
arpl
cmp
loopne
(bad)
dec
sbb
mov
pop
cmp
xor
dec
mov
or
ins
add
push
dec
mov
inc
popf
pusha
mov
inc
mov
sub
inc
and
jecxz
xor
jnp
push
jle
sub
push
sub
js
mov
mov
in
(bad)
adc
in
std
lea
icebp
adc
dec
std
enter
push
leave
retf
adc
popa
arpl
inc
mov
popf
lock
and
fs
jle
scas
loop
jne
icebp
les
xchg
mov
pop
inc
sub
(bad)
retf
lock
jecxz
out
fs
inc
mov
sub
inc
and
jecxz
xor
sti
xlat
push
jp
sub
pop
lds
das
retf
loop
xchg
jecxz
in
ds
cmp
stos
in
or
and
cld
into
js
nop
outs
pop
aas
call
sub
mov
stos
addr16
mov
or
out
jmp
mov
mov
fcmovbe
jg
test
out
retf
popf
hlt
fcomp
xchg
dec
push
icebp
repnz
out
mov
pop
sub
push
xchg
or
xchg
sbb
sub
clc
pop
lds
jmp
lods
loop
pop
cmp
jb
fisub
sahf
cmp
inc
xchg
push
ja
jg
jmp
stos
nop
arpl
outs
cld
lea
mov
sbb
adc
add
push
jbe
mov
test
pop
cmp
jb
fiadd
push
push
or
push
jmp
mov
movs
or
out
icebp
push
cld
ret
jp
std
adc
outs
mov
lock
and
cdq
pushf
loop
repz
push
mov
adc
(bad)
loop
xchg
arpl
pop
jns
mov
cli
adc
stc
push
cmp
jae
repnz
jle
add
std
push
add
cli
sar
aas
dec
add
cdq
pushf
loop
jge
outs
movs
xchg
sub
loop
xchg
arpl
(bad)
retf
mov
scas
(bad)
mov
or
std
mov
mov
dec
push
jmp
push
fld
popa
cmps
jo
sbb
add
or
popf
arpl
lock
jecxz
outs
pop
daa
mov
mov
fdivrp
sub
lods
inc
frstor
dec
stos
inc
xor
(bad)
jl
push
mov
adc
test
add
or
cmp
ret
into
cmp
out
shr
in
scas
adc
arpl
(bad)
retf
mov
leave
mov
ja
jg
jmp
pop
push
cwde
add
(bad)
mov
adc
int3
sbb
pop
cld
and
jo
lods
sbb
mov
cmp
dec
mov
jnp
and
(bad)
lahf
in
aam
in
das
leave
or
fiadd
out
sub
mov
xor
and
stos
in
in
mov
loop
cmp
ret
fiadd
js
das
push
repz
scas
cmp
jle
jae
sahf
sti
clc
mov
int3
dec
jle
pop
mov
pop
mov
icebp
xchg
stos
add
and
mov
imul
out
aaa
std
xor
test
fadd
jnp
in
add
pop
jmp
loop
mov
out
jge
fdivr
lock
imul
pop
sti
fiadd
aaa
scas
inc
inc
inc
xor
inc
dec
repz
push
inc
pop
inc
frstor
leave
stos
inc
pop
inc
mov
and
pop
dec
add
dec
jle
cmp
adc
inc
into
push
cmp
cli
fcomp
daa
xlat
ret
xchg
jecxz
(bad)
ja
jbe
stc
aas
stc
sbb
jge
sub
or
lds
das
das
es
lods
aas
iret
mov
in
sar
lahf
lahf
ffree
cli
xchg
push
(bad)
mov
icebp
lock
jnp
mov
sbb
add
add
cmc
loop
cli
fcomp
daa
xchg
js
in
leave
pop
adc
das
jle
(bad)
cmc
out
dec
pop
aad
dec
mov
mov
outs
and
movs
(bad)
adc
fild
iret
mov
aam
cs
jl
jge
adc
aaa
jns
dec
out
popa
and
mov
and
call
rcr
in
outs
or
xchg
js
movs
mov
(bad)
jmp
out
sub
jmp
xor
cli
stc
dec
out
scas
js
push
scas
sbb
mov
push
fwait
nop
arpl
mov
out
cmp
rcl
and
(bad)
jl
scas
or
out
jns
mov
push
sti
fwait
ror
and
test
(bad)
daa
stos
pop
mov
fwait
loop
test
or
iret
push
jp
lds
ds
retf
jle
aam
push
jmp
scas
outs
ins
inc
mov
and
movs
jno
cwde
ja
in
sbb
mov
sar
mov
loop
(bad)
sbb
retf
mov
ds
pop
push
icebp
stc
(bad)
mov
or
cmc
int3
push
(bad)
test
inc
js
inc
and
jecxz
xor
loop
add
in
outs
stos
daa
xchg
js
ds
fdivp
xlat
(bad)
mov
cld
add
lds
jae
dec
inc
lods
std
daa
pop
sti
div
mov
cwde
and
xor
xor
pop
pop
jb
pop
loope
or
and
mov
mov
inc
xchg
lds
das
mov
sbb
loop
outs
pop
mov
lods
mov
inc
sbb
mov
nop
arpl
test
out
cmp
sbb
(bad)
inc
sbb
push
mov
jnp
sar
mov
cmp
loop
outs
pop
repz
icebp
out
fs
adc
sbb
cdq
mov
repz
js
inc
and
jecxz
xor
out
inc
shl
mov
inc
sbb
pop
(bad)
mov
loope
inc
cmp
icebp
fidiv
mov
mov
mov
xor
xchg
and
xor
sbb
pop
icebp
in
add
sti
stos
loopne
call
cmp
pop
js
dec
ja
lods
jae
retf
test
imul
push
cmp
loop
outs
pop
repz
repz
lods
or
cmc
ins
stos
cli
push
test
inc
js
rcr
lods
dec
jecxz
xor
(bad)
std
sbb
pop
cmp
jb
js
aas
jle
dec
mov
jb
js
inc
fstp
dec
in
mov
retf
ds
icebp
sahf
repz
test
lods
addr16
aad
and
cwde
das
lds
scas
dec
outs
adc
aad
mov
mov
mov
sbb
test
aam
retf
or
or
fcmovu
sar
daa
pop
sti
div
mov
loop
fs
call
adc
ins
pusha
(bad)
mov
adc
mov
icebp
(bad)
retf
jno
xchg
jmp
fiadd
hlt
mov
jnp
cmp
jne
adc
aas
lods
not
aas
add
(bad)
pop
inc
or
call
loop
inc
cmp
mov
in
scas
(bad)
mul
adc
movs
jecxz
pop
mov
les
movs
mov
push
jmp
popa
add
jle
add
xor
pusha
cld
neg
es
in
int3
jae
jmp
icebp
jb
into
ret
adc
adc
mov
fimul
into
into
aas
pop
mov
xchg
jp
pushf
sbb
sbb
dec
add
icebp
stos
in
xor
cmp
adc
test
aaa
mov
xlat
mov
in
xor
mov
dec
sbb
enter
cs
rcr
aas
mov
adc
test
add
or
cmp
ret
into
pop
je
cs
rcl
(bad)
xchg
out
jl
mov
sbb
jmp
push
jmp
pop
mov
add
jecxz
inc
int3
adc
add
xor
cmp
xchg
std
idiv
test
daa
pop
mov
out
jecxz
push
push
lods
xchg
loope
push
inc
hlt
lahf
js
push
outs
sbb
jno
arpl
jge
push
das
int
(bad)
xor
shl
popf
lds
aaa
add
add
xor
(bad)
stc
nop
pop
dec
mov
out
daa
push
adc
gs
cmps
push
cld
popa
cmp
cmp
(bad)
sub
test
out
cmc
xchg
push
adc
aam
ficomp
out
cdq
inc
inc
xchg
sbb
stc
out
push
cmps
jbe
lock
sahf
js
out
loop
clc
mov
xor
loop
js
jmp
mov
stos
(bad)
push
mov
imul
or
mov
mul
inc
popa
add
std
aaa
or
cmp
jge
xchg
das
leave
loop
xchg
jecxz
fisubr
mov
cld
icebp
(bad)
mov
sti
test
mov
(bad)
sub
js
aas
enter
data16
mov
fcomip
jnp
mov
sbb
add
add
icebp
(bad)
ficomp
loopne
sub
icebp
push
adc
retf
(bad)
in
push
mov
push
lahf
ja
cmp
sub
pop
sub
cs
das
sbb
jp
sbb
adc
sub
push
scas
fadd
mov
pop
jmp
movs
repnz
and
jns
jecxz
arpl
(bad)
jmp
push
test
mov
and
pop
test
inc
and
clc
call
push
sbb
sahf
js
inc
outs
stos
(bad)
sub
test
mov
jge
arpl
sbb
daa
pop
les
stos
add
pop
mov
mov
jno
cwde
pop
mov
push
add
je
lods
pop
cmp
pusha
sub
xchg
mov
jb
aas
(bad)
stos
aas
pop
jmp
cmp
sub
arpl
jmp
pop
lods
pop
shr
xchg
ror
sbb
sar
jb
das
jns
(bad)
out
fidiv
les
(bad)
rcl
ds
xchg
fsubr
push
pop
fisttp
adc
daa
pop
xchg
mov
aaa
(bad)
pop
lds
cmp
xchg
mov
xchg
cmp
outs
(bad)
mov
ds
aas
sti
out
pop
sti
arpl
jecxz
mov
scas
call
xchg
data16
(bad)
(bad)
jns
mov
(bad)
jnp
mov
dec
xor
sub
fild
xchg
(bad)
frstor
sbb
inc
lahf
lds
das
mov
(bad)
sbb
sub
(bad)
cdq
xor
adc
xchg
xlat
xor
mov
pop
fdivrp
add
xchg
jecxz
gs
(bad)
retf
icebp
cmp
(bad)
mov
fisubr
push
iret
cmp
(bad)
dec
mov
push
cmps
jbe
mov
dec
add
(bad)
jmp
shr
push
push
ins
push
dec
mov
mov
xchg
nop
arpl
test
fsub
xchg
dec
jnp
jge
and
cld
push
iret
cmp
sahf
cmc
into
mov
daa
cmp
ja
cli
add
(bad)
(bad)
fst
cwde
add
jbe
(bad)
sub
lock
push
or
and
jecxz
mov
pop
js
jg
(bad)
(bad)
int3
js
push
test
dec
data16
mov
test
retf
mov
loop
fcomp
dec
repnz
test
js
sub
loopne
pop
or
and
jecxz
mov
sbb
aas
fdivrp
sbb
fisub
imul
test
dec
jno
add
pop
lods
mov
jmp
pusha
icebp
(bad)
retf
jno
das
imul
sub
mov
cli
daa
add
sbb
lock
ins
sar
clc
fistp
loopne
pop
cmp
push
lea
inc
lock
out
mov
pop
pop
repz
test
adc
mov
or
push
pop
pop
pop
pop
jmp
scas
sub
jp
push
jle
fisubr
add
pop
aas
sbb
lea
(bad)
cmp
xor
mov
ja
lds
fdivp
pop
cld
dec
xchg
mov
jne
push
mov
das
jae
pushf
sbb
sbb
dec
add
icebp
stos
in
xor
cmp
adc
test
jne
cmps
sub
js
push
dec
mov
loop
add
mov
sti
div
mov
jo
aam
(bad)
(bad)
into
jp
and
int3
clc
es
cmc
cmp
add
jecxz
fld
loope
add
xor
jmp
ja
cmp
lods
and
pop
jmp
push
push
jbe
ss
js
outs
repnz
cld
(bad)
ja
cs
inc
lock
mov
xchg
push
das
fwait
ja
and
(bad)
(bad)
fidivr
sub
int3
mov
jmp
adc
test
add
int3
popa
call
cmps
mov
ret
(bad)
cmp
test
(bad)
mov
bound
xchg
dec
int
inc
mov
fld
cli
fcomp
push
test
add
mov
jecxz
add
push
ret
push
mov
push
icebp
rcr
icebp
jb
(bad)
jnp
jecxz
push
pop
lods
xchg
loope
rcr
outs
sub
icebp
jecxz
out
fs
lods
xchg
test
dec
add
jnp
cli
imul
or
pop
cs
arpl
jg
lods
xor
pop
stc
rcl
mov
icebp
retf
cdq
jmp
mov
lods
std
adc
pop
div
mov
pop
mov
cmc
xor
xor
cmp
out
jp
pop
and
add
jg
mov
jge
outs
or
dec
cmp
push
sbb
sbb
mov
push
cdq
cmps
ss
lds
dec
mov
cmp
cmc
xor
xor
lods
mov
sbb
xor
xchg
rol
adc
(bad)
ins
repnz
stc
std
mov
push
(bad)
(bad)
jmp
outs
push
cmp
icebp
enter
in
popf
(bad)
aad
dec
push
jg
in
jmp
jle
inc
inc
int3
out
(bad)
faddp
(bad)
cmps
jbe
(bad)
retf
mov
fnstsw
push
aaa
cmps
pop
push
imul
dec
out
mov
cmp
icebp
dec
mov
scas
call
xchg
out
push
push
shl
adc
sub
ins
push
std
fst
adc
popa
arpl
lea
cmp
fisubr
rcl
loop
pop
mov
sbb
(bad)
bound
idiv
div
mov
icebp
jb
loope
cmp
cwde
and
pop
(bad)
fnsetpm(287
cli
pop
dec
push
outs
cmp
stc
fcomp
mov
cmp
loop
xchg
arpl
scas
jmp
sbb
pop
lds
mov
mov
dec
in
push
or
sub
ins
jb
sub
xchg
sbb
lods
imul
aam
leave
push
dec
mov
jle
jnp
add
jmp
movs
lock
neg
icebp
push
cmp
jmp
es
(bad)
mov
mov
imul
(bad)
into
dec
mov
loop
mov
sti
xchg
sub
sti
push
cld
jg
ret
(bad)
pop
div
cmps
lds
das
(bad)
push
fdivrp
sub
lods
inc
popf
gs
test
pop
push
jecxz
push
js
outs
jecxz
aas
adc
adc
(bad)
movs
js
stos
sbb
jae
bound
cli
(bad)
mov
ins
sti
mov
mov
loop
js
fmulp
sub
sub
gs
test
pop
jbe
mov
pop
xlat
jbe
cmps
into
outs
mov
loop
mov
mov
lds
or
sbb
imul
loop
xchg
jecxz
jns
stos
add
data16
fild
jbe
mov
sbb
sbb
dec
mov
test
in
mov
cmps
sub
in
fistp
imul
data16
pop
mov
adc
retf
cmps
cmp
cwde
stos
jno
xchg
xchg
(bad)
(bad)
sub
in
movs
lds
das
mov
dec
mov
loop
mov
inc
aam
(bad)
pop
push
std
pop
xchg
in
stos
jmp
jns
fs
sbb
lods
cmp
push
jno
das
sub
js
ficom
cdq
gs
in
mov
lahf
ffree
jp
stos
mov
aas
fdivrp
sbb
fisub
sbb
push
jnp
mov
pop
mov
ret
(bad)
jae
loop
pop
mov
stos
(bad)
mov
jge
lods
outs
not
fbld
(bad)
sti
jmp
lods
and
mov
das
pop
sti
fwait
inc
mov
pop
stos
(bad)
loop
adc
lds
(bad)
das
ss
cs
aad
test
bswap
jnp
push
ins
retf
out
in
stos
std
xchg
inc
sti
cmp
cmc
xor
jg
add
push
jmp
pop
call
ins
icebp
repnz
movs
push
(bad)
mov
(bad)
lahf
mov
neg
std
pop
mov
loop
js
mov
xchg
pushf
cli
fist
data16
js
add
(bad)
stos
mov
ret
movs
cmp
push
adc
icebp
fcomp
adc
pop
mov
pxor
push
mov
(bad)
push
pop
mov
(bad)
pushf
jmp
movs
(bad)
mov
ficom
outs
pop
pop
mov
mov
test
popa
add
pop
scas
retf
jg
rol
js
mov
mov
in
dec
in
popf
sub
lahf
mov
sub
mov
xchg
in
cli
loope
sti
scas
imul
mov
inc
(bad)
lock
inc
jge
cld
jmp
add
pusha
aas
call
xchg
lds
das
(bad)
mov
scas
(bad)
(bad)
aaa
pop
jp
pop
popf
lds
push
jge
pop
test
cmc
in
shl
js
fisub
outs
fwait
ret
mov
popa
add
aas
outs
or
in
and
dec
icebp
mov
mov
loop
js
mov
sbb
pop
sti
jmp
sbb
pop
call
mov
inc
retf
aaa
jb
adc
pop
mov
cmp
cmp
in
test
add
jns
dec
jg
or
dec
and
sbb
adc
out
sub
xor
lds
test
scas
data16
jg
xchg
jge
ret
xor
sti
(bad)
xchg
jecxz
js
stos
add
aas
cmp
or
mov
mul
inc
popa
add
std
aaa
or
xchg
cmp
jecxz
jecxz
repnz
ja
es
imul
mov
sti
outs
cmp
xlat
ins
cmp
stc
bound
dec
mov
add
mov
inc
icebp
movlps
ror
inc
iret
into
fild
jo
mov
lods
scas
test
pop
sub
dec
mov
les
stos
add
aas
pushf
div
push
xor
sbb
and
das
pop
int
mov
ret
mov
loop
pop
cmp
jb
sahf
js
jle
in
stos
clc
jecxz
imul
ret
adc
mov
cmp
jb
sahf
js
push
dec
mov
gs
adc
rcr
xchg
inc
mov
push
fdivr
loop
xchg
gs
(bad)
retf
mov
loop
mov
in
and
sti
icebp
mov
and
fistp
out
daa
pop
mov
adc
(bad)
loop
xchg
jecxz
js
cmp
jmp
or
out
mov
sbb
xlat
mov
sbb
fidiv
jb
sahf
js
push
scas
sbb
test
sub
mov
call
pop
mov
adc
(bad)
loop
out
cmp
pop
mov
sub
data16
push
sbb
shr
dec
mov
out
clc
cmc
xchg
add
int
packsswb
js
push
dec
mov
mov
sbb
push
(bad)
rcr
pop
cmp
jmp
sub
daa
pop
mov
adc
(bad)
loop
xchg
jecxz
pop
shr
sub
mov
(bad)
add
(bad)
sbb
icebp
in
cld
iret
fdivr
dec
push
dec
mov
mov
adc
(bad)
cdq
mov
gs
sbb
pop
outs
cld
lea
mov
sbb
adc
idiv
popf
cmp
mov
pop
cmp
jb
sahf
js
push
dec
mov
stos
add
por
hlt
dec
add
outs
jmp
lock
mov
test
jmp
pop
mov
adc
(bad)
loop
xchg
jecxz
js
int3
sbb
cmp
in
aaa
dec
add
out
add
pop
data16
pop
mov
inc
add
or
mov
pop
xchg
sub
pushf
push
mov
pop
mov
adc
(bad)
loop
(bad)
outs
cmc
pop
call
fimul
loope
add
pop
scas
retf
xor
pop
lods
sub
ficomp
in
je
popf
mov
icebp
(bad)
retf
mov
loop
pop
cmp
jb
mov
fisttp
add
les
or
rol
fadd
jb
popf
mov
js
in
cmp
jb
sahf
js
cs
mov
loope
add
aas
out
push
les
dec
add
jae
fsubr
pusha
shr
(bad)
retf
mov
loop
pop
cmp
jb
call
mov
iret
push
mov
add
fwait
std
into
loop
fwait
add
cmp
adc
cmp
fcmovnbe
sbb
jae
popf
and
mov
mov
mov
add
xlat
pushf
add
jp
pop
sahf
dec
out
xlat
mov
xchg
arpl
(bad)
retf
mov
in
push
into
int
pop
sbb
in
pop
jg
ds
fisttp
ret
in
add
mov
dec
test
js
in
cmp
jb
pop
pop
push
(bad)
sti
mov
push
fistp
fild
loopne
adc
(bad)
lahf
pop
out
xchg
addr16
(bad)
retf
mov
loop
pop
mov
(bad)
out
mov
mov
imul
fistp
fdivr
loop
pop
cmp
jb
sahf
js
push
outs
push
pop
hlt
cmc
ror
xor
mov
jecxz
leave
mov
loop
pop
cmp
jb
sahf
js
push
add
out
push
mov
jne
mov
cmp
dec
mov
mov
adc
(bad)
and
outs
popa
cmp
xchg
add
cmp
cmp
jb
sahf
js
push
dec
mov
popf
and
mov
popf
mov
icebp
jb
sahf
js
push
dec
mov
pop
sbb
pop
push
fcomp
mov
mov
pop
mov
adc
(bad)
xchg
lock
cmp
dec
jbe
shl
mov
mov
loop
mov
jo
inc
sub
cdq
push
mov
pop
mov
adc
(bad)
loop
xchg
jecxz
js
adc
inc
adc
loop
xchg
arpl
(bad)
retf
mov
scas
call
xchg
out
jns
adc
adc
mov
adc
inc
mov
sbb
jb
sahf
js
scas
xchg
mov
add
icebp
or
repz
(bad)
fist
pop
ror
sub
sahf
js
push
dec
mov
mov
out
add
popa
mov
ss
in
cld
jg
outs
jmp
xchg
dec
mov
mov
adc
(bad)
xchg
repz
das
push
sti
or
add
sbb
cwde
add
loop
xchg
gs
(bad)
retf
mov
loop
mov
addr16
xchg
sti
push
fld
popa
cmps
jo
cld
jmp
lock
add
mov
les
das
(bad)
loop
xchg
arpl
(bad)
retf
icebp
adc
ret
add
pop
out
push
gs
test
add
retf
call
into
mov
pop
stos
lds
das
(bad)
loop
xchg
jecxz
lock
pop
jmp
jnp
push
(bad)
mov
xor
clc
xor
(bad)
jns
popf
and
mov
mov
sti
add
xchg
add
mov
xor
cmp
mov
ret
arpl
pop
stos
lds
das
(bad)
loop
xchg
jecxz
js
in
stc
jmp
sbb
add
repz
xchg
cdq
add
sbb
repnz
cmp
imul
arpl
dec
mov
mov
sub
ret
(bad)
(bad)
aas
ja
addr16
retf
jg
pop
iret
aaa
fs
(bad)
stos
cmp
inc
loopne
jmp
mov
dec
popf
and
lds
das
(bad)
loop
xchg
arpl
retf
pushf
fwait
pop
mov
mov
(bad)
sti
pop
clc
or
or
add
and
lds
das
(bad)
loop
xchg
arpl
retf
cmp
std
lahf
shl
sysexit
add
xchg
(bad)
sbb
xchg
outs
icebp
(bad)
retf
mov
loop
pop
mov
int
sbb
or
xor
lock
cmp
xor
daa
pop
mov
adc
(bad)
loop
ret
cmp
aas
jnp
movs
mov
int3
sub
add
jae
dec
mov
loop
pop
cmp
jb
fisub
retf
leave
mov
sbb
mov
loop
pop
cmp
jb
sahf
js
sahf
cmp
push
xchg
in
mov
lock
sbb
das
(bad)
loop
xchg
arpl
pop
push
lock
mov
xchg
xlat
repz
ja
js
mov
sahf
js
push
dec
mov
mov
cmp
jl
loopne
dec
push
int
mov
popf
leave
mov
loop
pop
cmp
jb
sahf
js
push
add
cld
int
icebp
aad
cmps
fidivr
fsubr
fcmovb
cmp
retf
loop
xchg
arpl
(bad)
retf
mov
loop
cmp
xchg
lods
xchg
inc
lahf
(bad)
pop
test
cld
sbb
cmp
rol
daa
(bad)
mov
mov
loop
cmp
aad
lock
repz
fwait
xor
rol
scas
or
movs
into
dec
mov
loop
pop
cmp
jb
sahf
js
dec
in
and
test
fdivrp
sbb
fisub
push
cld
mov
mov
xor
movs
into
dec
mov
loop
pop
cmp
jb
sahf
js
dec
in
out
(bad)
mov
sbb
retf
mov
out
cmps
jg
ror
movlps
jecxz
xor
cmp
sbb
js
push
dec
mov
mov
jns
lds
stos
cld
bound
mov
mov
xor
movlps
aas
inc
out
and
movs
into
dec
mov
loop
pop
cmp
jb
sahf
js
dec
in
clc
daa
mov
mov
das
daa
add
js
test
pushf
xor
or
fdivr
test
add
jne
mov
adc
(bad)
loop
xchg
arpl
(bad)
retf
jno
das
out
jg
jg
xchg
(bad)
jp
add
clc
icebp
stos
in
xor
add
add
cmc
test
sti
mov
sbb
push
out
pop
cmp
jb
sahf
js
push
dec
mov
dec
jbe
icebp
sysexit
cmp
add
cmp
cwde
and
lds
sbb
js
push
dec
mov
mov
jns
cwde
push
out
test
out
shl
outs
idiv
mov
outs
or
in
and
in
loop
and
imul
sahf
iret
push
push
dec
mov
adc
(bad)
loop
xchg
arpl
(bad)
retf
jno
das
stc
out
std
adc
scas
cmp
mov
add
xor
test
cmp
clc
xor
fwait
push
addr16
cmp
jb
sahf
js
push
out
loopne
neg
(bad)
jmp
out
jp
pop
and
add
jg
mov
fcomip
clc
fyl2xp1
sbb
mov
xor
mov
add
mov
js
push
dec
mov
mov
(bad)
mov
mov
mov
icebp
jnp
mov
sbb
add
add
clc
fwait
push
sbb
mov
lock
setle
push
dec
mov
mov
neg
pop
into
iret
jle
ds
dec
cmc
mov
jg
dec
out
sub
das
push
mov
xchg
in
call
js
mov
pop
dec
mov
mov
jnp
fucomip
mov
mov
push
not
sar
(bad)
mov
pop
fistp
fwait
(bad)
cmc
mov
enter
aad
movs
ins
inc
push
loope
ror
sbb
xor
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
outs
push
movs
jno
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
sub
cmps
cmp
pop
xchg
(bad)
xchg
arpl
xchg
nop
arpl
xchg
nop
arpl
xchg
sub
pop
std
pop
iret
arpl
xor
sub
sbb
sbb
loop
test
loop
test
loop
test
loop
test
movs
js
(bad)
js
outs
jl
or
pop
test
les
das
pop
enter
inc
enter
inc
enter
inc
enter
inc
xchg
inc
icebp
por
hlt
dec
add
outs
jmp
xchg
das
pop
enter
inc
enter
inc
enter
inc
enter
inc
xchg
inc
cmp
in
aaa
dec
add
out
add
pop
data16
pop
mov
inc
add
cmps
popf
adc
fs
mov
mov
mov
mov
inc
cmp
jle
sub
and
adc
call
push
and
mov
dec
enter
inc
enter
inc
enter
inc
enter
cmp
xchg
(bad)
jp
add
clc
icebp
stos
in
xor
add
add
cmc
test
test
mov
js
and
mov
mov
cld
and
inc
or
test
and
popa
add
inc
enter
inc
enter
inc
enter
inc
enter
inc
enter
inc
enter
pop
mov
jl
fistp
jno
add
popa
add
stos
mov
test
loop
test
loop
test
loop
test
loop
test
dec
adc
out
cli
femms
adc
aam
ficomp
out
cdq
inc
inc
xchg
rol
adc
pop
enter
inc
enter
inc
enter
inc
enter
inc
enter
ud0
out
scas
out
and
add
std
aaa
or
retf
adc
int3
mov
adc
mov
adc
mov
adc
mov
adc
pop
sub
call
cwde
xor
sar
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
and
dec
out
popa
and
mov
and
push
and
nop
arpl
xchg
nop
arpl
xchg
nop
arpl
jns
mov
test
jb
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
or
sub
cmp
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
or
sub
cmp
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
mov
aaa
sbb
push
pop
test
loop
test
loop
test
loop
test
loop
test
loop
test
loop
sub
add
test
xchg
nop
arpl
xchg
nop
arpl
xchg
nop
arpl
mov
test
div
loop
xchg
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
pop
iret
and
cwde
das
ret
xor
cmp
sbb
jb
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
push
jb
sbb
sbb
das
pop
enter
inc
enter
inc
enter
inc
enter
inc
enter
xchg
inc
mov
lea
sub
js
inc
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
xchg
cmp
icebp
aaa
add
mov
xor
and
jae
cmp
lds
cmp
lds
cmp
lds
cmp
xchg
and
mov
xchg
dec
loop
xchg
and
(bad)
retf
xchg
js
in
mov
xor
scas
ret
pusha
xlat
lods
and
icebp
jb
sahf
js
adc
sbb
outs
push
daa
clc
add
repnz
aas
sbb
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
or
add
push
je
imul
add
adc
add
add
add
push
push
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
or
adc
mov
push
add
add
add
push
add
add
push
add
imul
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
fs
add
add
mov
or
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
ss
gs
test
scas
add
fld
add
mov
or
or
mov
or
and
mov
push
add
imul
add
mov
or
dec
push
mov
push
add
imul
add
add
add
push
add
or
inc
mov
or
add
mov
push
add
pop
mov
pop
mov
pop
ins
pop
adc
xchg
pop
ins
pop
push
add
add
pop
ins
pop
adc
loopne
ins
pop
adc
jmp
or
push
add
or
adc
inc
or
add
imul
add
add
add
or
adc
add
ins
pop
push
add
or
push
add
or
xchg
add
add
or
mov
mov
push
add
or
or
add
add
inc
add
mov
push
add
add
ror
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
sub
add
push
add
add
add
add
add
sub
add
jno
sub
add
test
aaa
add
add
add
add
add
adc
inc
inc
add
add
add
add
add
xchg
leave
add
add
add
add
add
add
add
hlt
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
adc
sub
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
sbb
sti
add
add
xchg
or
add
sbb
add
add
add
xchg
or
add
sbb
or
add
add
xchg
or
imul
add
add
xchg
leave
add
add
add
das
add
add
xchg
sbb
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
ins
add
add
add
add
add
jns
jno
leave
add
jns
leave
add
add
mov
leave
add
xchg
add
add
cdq
add
add
mov
add
add
add
add
add
add
leave
add
add
rol
leave
add
fld
leave
add
jmp
add
add
add
add
add
add
add
rol
add
test
add
pop
push
xchg
add
add
add
add
add
fwait
add
add
add
lahf
add
add
movs
add
add
mov
push
rol
add
xchg
add
add
add
add
add
mov
add
add
add
push
aas
add
loop
fild
push
add
add
push
loope
or
jmp
add
pop
jmp
add
add
add
add
leave
add
add
leave
add
add
leave
add
add
leave
add
add
push
pop
or
and
pop
pop
or
jns
leave
add
add
add
add
add
add
add
add
movs
pop
jle
mov
leave
add
add
add
pop
sbb
pop
add
add
add
pop
xor
test
add
add
add
or
add
dec
or
add
dec
add
movs
pop
jle
dec
add
es
add
add
add
add
add
mov
add
or
pop
add
or
loope
leave
add
jmp
add
add
or
or
push
or
add
add
je
stc
add
add
add
(bad)
and
xchg
or
add
add
leave
add
add
lds
aas
add
fmul
mov
dec
add
or
add
add
add
add
add
add
add
add
add
add
fiadd
pop
add
in
popa
add
add
add
add
add
add
add
or
sbb
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
daa
add
add
add
mov
add
add
add
add
add
add
rol
add
lock
add
sbb
add
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pusha
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
add
cli
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
gs
jp
imul
cs
add
jb
xor
push
imul
outs
jb
jae
jo
ins
imul
xor
push
jb
addr16
ins
add
jae
jne
arpl
add
jp
imul
cs
jb
jo
jb
imul
je
outs
addr16
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
arpl
ins
imul
gs
add
push
arpl
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
arpl
add
imul
jne
imul
push
dec
gs
jbe
outs
je
jb
jae
je
js
inc
outs
js
pop
dec
gs
outs
ja
add
je
outs
js
pop
dec
gs
outs
ja
add
outs
je
jb
jae
jo
arpl
gs
outs
js
pop
inc
ins
imul
je
jb
inc
outs
js
pop
inc
ins
imul
popa
bound
xor
ins
imul
je
outs
js
pop
dec
gs
outs
ja
add
gs
xor
inc
ins
imul
je
outs
js
pop
dec
gs
outs
ja
add
je
outs
js
pop
push
gs
arpl
dec
outs
fs
push
add
je
outs
js
pop
dec
gs
outs
ja
add
je
outs
js
pop
dec
gs
outs
ja
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
push
gs
inc
outs
js
je
js
inc
outs
js
add
je
outs
js
add
gs
add
gs
xor
ins
popa
bound
xor
je
js
inc
outs
js
add
je
outs
js
add
arpl
gs
outs
js
jo
arpl
gs
outs
js
add
arpl
gs
outs
js
add
je
outs
js
add
je
outs
js
add
outs
je
imul
outs
outs
je
imul
dec
imul
ins
imul
add
je
outs
js
add
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
jae
outs
fs
add
jo
jae
outs
add
ins
jne
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jp
imul
add
push
arpl
ins
ins
arpl
outs
add
je
dec
je
ins
jae
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
push
je
imul
bound
push
popa
jb
add
jbe
dec
gs
add
imul
ins
add
outs
je
outs
ins
add
je
push
gs
add
je
push
gs
add
je
add
jae
inc
outs
outs
jbe
jb
add
je
imul
jae
addr16
dec
gs
outs
fs
jne
ins
jae
inc
outs
arpl
add
je
push
imul
inc
arpl
popa
ins
add
arpl
popa
ins
add
jne
add
add
je
inc
outs
jne
je
push
gs
outs
jbe
inc
je
inc
jo
ins
imul
add
imul
je
fs
outs
fs
outs
ins
ins
arpl
outs
add
je
push
gs
arpl
dec
outs
imul
je
dec
je
ins
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
dec
push
jne
jo
jb
dec
outs
imul
add
imul
push
jne
jo
outs
fs
popa
jns
jne
add
jae
gs
cs
jb
ja
outs
add
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
jp
add
je
push
imul
pop
push
popa
bound
fs
dec
gs
jbe
outs
je
popa
outs
fs
gs
popa
fs
dec
gs
outs
ja
add
je
inc
jne
outs
push
imul
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
push
gs
inc
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
dec
outs
jb
jp
outs
je
ins
inc
ins
imul
add
je
push
gs
inc
ins
imul
dec
bound
arpl
ins
popa
add
je
dec
ins
popa
add
arpl
gs
outs
js
imul
add
je
push
imul
add
je
push
popa
bound
outs
jo
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
je
outs
outs
je
outs
ins
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
dec
je
ins
dec
imul
ins
arpl
outs
dec
outs
fs
je
push
gs
arpl
outs
dec
outs
fs
fs
push
gs
arpl
dec
outs
fs
push
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
jae
je
dec
popa
js
ins
imul
inc
outs
fs
outs
imul
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
inc
push
push
inc
je
jb
bound
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
arpl
outs
jb
push
gs
imul
add
outs
arpl
outs
outs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
jp
imul
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
add
add
adc
add
je
inc
add
js
xor
add
je
add
je
inc
add
js
xor
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
ins
add
bound
add
add
or
imul
popa
add
or
bound
add
add
pop
inc
add
jne
add
je
add
je
inc
add
js
xor
add
js
je
inc
add
js
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
je
add
je
inc
add
js
aaa
add
adc
add
je
inc
add
js
cmp
add
ins
add
jae
je
inc
add
js
xor
add
ins
add
jae
je
inc
add
js
xor
add
inc
add
jb
ins
add
add
pop
push
add
jp
ins
add
arpl
jp
add
imul
push
add
jp
ins
add
arpl
jp
add
imul
push
add
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
in
cdq
dec
xchg
mov
inc
pushf
jbe
mov
add
mov
pop
push
sbb
mov
and
add
push
or
and
add
adc
and
add
adc
add
add
add
push
adc
add
adc
add
adc
add
adc
add
adc
xor
add
xor
adc
xor
add
xor
add
add
adc
or
adc
and
add
add
jno
and
add
add
add
jge
and
adc
sbb
add
or
add
and
push
add
add
push
or
push
adc
adc
add
popf
add
add
sbb
add
adc
add
add
sbb
and
or
test
or
pop
add
or
add
sub
add
adc
pop
jg
aad
cmp
or
and
add
cmp
add
and
add
push
and
add
add
and
or
adc
push
and
add
or
and
add
sbb
and
sbb
push
and
add
sbb
and
add
and
and
add
and
and
add
sub
and
add
push
and
add
xor
and
add
cmp
and
adc
add
adc
mov
add
add
add
add
add
add
push
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
sbb
and
adc
add
adc
adc
push
and
add
sbb
add
add
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
adc
dec
add
sbb
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
push
imul
outs
jb
jae
jo
ins
imul
xor
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
aaa
gs
cmp
cmp
sub
sub
sub
xor
xor
aaa
add
or
add
xor
xor
xor
xor
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
retf
data16
pop
add
add
add
add
sbb
add
pop
cwde
add
pop
jp
add
inc
push
mov
shl
xor
dec
or
add
arpl
pop
push
jae
jb
pop
inc
jb
outs
jb
pop
inc
outs
arpl
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
push
imul
outs
jb
jae
jo
ins
imul
xor
loop
xchg
and
jo
popa
pop
push
imul
outs
jb
jae
jo
ins
imul
xor
push
push
gs
gs
jae
pop
push
outs
jp
imul
cs
bound
mov
add
add
add
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
