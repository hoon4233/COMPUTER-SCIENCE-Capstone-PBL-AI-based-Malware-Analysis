add
cld
dec
test
lahf
add
mov
push
and
mov
cmp
and
idiv
(bad)
(bad)
out
lea
mov
push
call
inc
add
cmp
jb
pop
mov
push
push
xor
in
mov
call
mov
push
es
add
or
daa
iret
idiv
push
fwait
cwde
mov
cmp
sti
xchg
dec
add
lods
mov
push
popf
cmps
loopne
aas
mov
pop
mov
dec
dec
pop
mov
js
push
out
mov
retf
in
xor
pop
cmp
add
call
cdq
ret
push
jle
jae
push
xor
mov
sbb
jle
pop
xchg
call
mov
add
in
push
fadd
adc
cmp
out
adc
add
cmp
std
fisttp
xor
dec
(bad)
sub
pop
inc
push
inc
xchg
sbb
jb
sub
dec
cld
jmp
gs
push
mov
xor
cmp
je
push
lea
mov
or
push
pop
or
div
mov
cmp
je
cmp
je
adc
shr
shl
mov
mov
imul
adc
cmp
jbe
mov
add
mov
jae
movs
sbb
lea
cmp
and
pop
sbb
mov
add
push
mov
(bad)
in
lods
rcr
out
jmp
clc
jge
lea
add
out
add
shl
add
sub
mov
pusha
add
add
mov
bound
je
push
add
pop
loope
jg
pop
ret
mov
jnp
mov
lock
jbe
fadd
xor
test
je
movzx
dec
clc
aas
jle
push
jge
cmp
ret
ror
mov
sbb
jl
mov
test
je
mov
push
dec
or
jno
inc
mov
sub
mov
jno
mov
in
or
aam
dec
xchg
add
pusha
inc
dec
ins
call
cmp
je
mov
and
inc
sbb
push
iret
and
sti
sbb
xchg
jno
inc
test
jne
cmp
push
ja
retf
xor
outs
mov
(bad)
cld
add
pop
push
jmp
cwde
inc
push
push
or
(bad)
jmp
fsubr
fdiv
lock
pop
pusha
push
jb
je
add
inc
ret
nop
mov
inc
mov
pop
ret
imul
ret
int
jae
in
(bad)
in
xor
xor
shr
mov
adc
and
inc
pop
movs
loopne
paddsw
inc
jmp
in
es
loop
into
repz
push
inc
je
ds
xchg
adc
sbb
sub
ins
and
sar
out
das
js
push
(bad)
rcl
lea
push
sbb
push
push
bound
or
add
int
xlat
sub
lods
mul
inc
in
sbb
mov
pop
add
pop
fsub
adc
push
xor
setge
std
jp
or
xor
add
lea
inc
cmp
adc
push
ss
xchg
sbb
jbe
cmp
fstp
test
sub
adc
mov
lahf
aaa
mov
sbb
cmp
jg
ins
pop
xor
or
into
jg
or
mov
(bad)
(bad)
cwde
cmps
xchg
out
sub
lea
mov
(bad)
outs
adc
mov
cmp
jne
mov
imul
xor
jp
or
clc
xor
lahf
into
ficomp
jl
xor
idiv
pushf
inc
or
sbb
jo
adc
(bad)
sub
add
push
in
das
repnz
mov
pop
cld
mov
les
and
lods
sbb
fisttp
adc
punpckhwd
scas
retf
sub
pop
pop
add
pusha
sti
outs
call
pop
js
inc
jl
sub
mov
xchg
test
adc
or
sbb
in
fidivr
xor
shl
cmp
dec
dec
ins
imul
push
push
mov
mov
mov
outs
pop
fs
add
jl
sahf
dec
jo
push
arpl
fmul
inc
pusha
or
enter
scas
popa
leave
or
sub
stos
in
lock
jl
test
test
sub
lahf
loope
cmp
mov
cli
js
and
or
add
push
sub
rol
jg
popf
push
add
mov
or
or
push
int3
in
scas
mov
sbb
mov
cmp
in
(bad)
fsubr
mov
fsub
and
les
push
sahf
jne
push
mov
sub
loopne
punpckhbw
and
xor
or
adc
inc
or
pusha
cmp
loopne
loopne
lea
into
cmps
xchg
dec
push
stos
push
mov
ficom
xor
inc
rcl
mov
mov
mov
inc
outs
je
cmp
mov
jns
dec
mov
jmp
mov
sub
mov
add
cmps
imul
cmps
imul
xor
jne
cmp
and
sbb
and
adc
xchg
adc
jp
sar
adc
or
sbb
das
mov
mov
xchg
or
add
in
sub
add
or
outs
mov
add
push
mov
cmp
sub
cmp
or
iret
inc
inc
dec
cmp
cmp
sbb
and
sub
jmp
jle
xor
sbb
push
ins
pop
add
sbb
add
sbb
mov
dec
sub
cmp
push
popa
xchg
(bad)
pop
ret
add
jge
loopne
clc
fidivr
ret
cmp
and
repz
sbb
jle
ret
push
add
xor
jmp
dec
outs
mov
sahf
push
int3
push
or
or
inc
adc
shl
jno
adc
and
inc
mov
cmp
je
and
sar
jne
or
test
xor
jmp
jl
pop
outs
outs
adc
push
mov
sbb
mov
into
push
jmp
pop
clc
push
adc
push
sbb
sbb
dec
sbb
ret
push
adc
not
fdiv
clc
inc
add
rol
test
fisubr
push
sti
adc
push
jb
inc
lahf
pop
push
or
in
(bad)
mov
jmp
cmp
jg
test
loop
jbe
mov
push
lea
push
push
push
fisttp
fwait
push
xor
dec
inc
jmp
lahf
jle
jg
inc
cmp
jae
mov
mov
jg
mul
seto
neg
or
push
add
jmp
icebp
(bad)
in
and
mov
push
popf
push
or
je
jo
or
lods
cli
ins
or
inc
push
jns
fsub
div
cmp
nop
inc
push
push
inc
mov
(bad)
sahf
fistp
pushf
inc
mov
fbstp
pop
test
mov
mov
mov
in
jge
mov
mov
mov
cwde
loopne
xchg
retf
ja
dec
in
or
lock
cmp
sti
jge
clc
or
mul
add
gs
stos
add
or
retf
and
and
sub
xor
pop
stc
cmp
dec
sub
ins
addr16
mov
js
stc
inc
jl
repz
mov
mov
in
int
cli
lea
jb
cs
and
cli
cli
out
cli
mov
add
sbb
out
cmp
mov
es
test
in
lock
int3
jnp
cli
or
cs
dec
sbb
or
push
es
mul
pop
loopne
loop
adc
mov
pusha
je
mov
or
add
jns
cld
push
pop
mov
std
sbb
jl
mov
mov
sub
gs
dec
fsub
push
lods
add
add
in
adc
test
cmp
inc
or
std
out
mov
and
mov
push
lods
jle
pop
xor
mov
xchg
or
ins
sub
mov
mov
clc
outs
inc
inc
mov
pop
call
cmp
in
enter
sbb
ror
ds
das
clc
sbb
out
scas
dec
lock
bound
js
add
add
movs
push
stos
push
push
push
inc
inc
ficomp
xchg
and
xor
shl
add
inc
cs
sbb
and
lods
mov
or
ins
cld
mov
jge
add
or
pop
sub
sub
std
xor
es
xor
mov
enter
mov
sar
test
and
jb
sbb
dec
sub
add
cmps
test
xor
mov
inc
mov
cmps
fsub
sbb
iret
xchg
xchg
cmp
add
and
pop
adc
nop
retf
retf
sets
test
enter
inc
sbb
add
inc
mov
lahf
pop
sub
or
and
and
xchg
cld
sbb
or
fs
add
fs
lock
cdq
lea
or
neg
sar
call
sbb
and
cmp
mov
dec
push
outs
not
or
pusha
push
jno
fs
js
add
xor
inc
push
outs
mov
mov
mov
push
mov
nop
adc
pop
fdivr
mov
xchg
fsub
or
inc
shl
xchg
out
outs
or
dec
push
call
or
adc
inc
push
popf
xchg
pop
in
or
fs
lock
add
fidivr
push
sub
and
fild
pop
or
and
and
mov
in
sbb
sbb
cmp
inc
and
addr16
aaa
dec
or
push
or
or
inc
inc
push
mov
and
enter
sub
aam
mov
xchg
iret
retf
xchg
cld
add
add
push
pop
sub
sub
xor
enter
pop
pop
pop
pusha
fs
retf
retf
dec
mov
xchg
mov
sbb
sbb
mov
call
sahf
mov
or
and
push
sbb
and
or
push
inc
inc
push
push
cmps
cmp
jo
movs
or
jl
test
das
addr16
or
sbb
or
cmp
fwait
jge
cmp
popa
push
sbb
xchg
xor
inc
xchg
mov
test
lods
mov
pop
push
inc
mov
es
xchg
sub
and
in
sbb
iret
retf
retf
xchg
or
adc
adc
or
fs
retf
cmp
xor
gs
ret
lds
movs
mov
pop
je
rcr
pushf
mov
or
enter
inc
push
mov
cld
add
pop
ds
add
mov
sub
mov
xor
fstp
inc
inc
push
pop
pusha
fs
and
sbb
xchg
inc
mov
sub
jmp
xchg
or
les
and
xchg
or
(bad)
mov
or
xor
in
or
inc
inc
or
xor
gs
push
push
push
xor
enter
test
sbb
mov
xor
jb
sbb
lods
mov
push
jns
pop
sahf
or
adc
adc
push
inc
push
sbb
cmp
inc
and
push
sub
je
xor
push
repnz
xor
push
push
push
cmp
sbb
in
push
push
push
mov
pop
cmp
push
clts
sbb
mov
int3
aaa
(bad)
seta
jae
or
stc
jno
test
mov
sahf
inc
iret
(bad)
inc
inc
push
(bad)
(bad)
nop
mov
xchg
inc
push
mov
mov
inc
les
and
lock
repz
inc
mov
xor
enter
adc
sbb
repnz
int3
inc
adc
adc
sub
sbb
ds
inc
jl
mov
xor
pop
sbb
sbb
mov
fcomp
loopne
pop
sahf
mov
adc
adc
push
mov
cmp
cmp
push
inc
inc
inc
inc
xor
and
sub
and
xchg
inc
cs
pushf
mov
movs
mov
fs
mov
mov
adc
mov
inc
retf
out
enter
add
mov
leave
sub
sub
xor
fs
retf
fs
pop
pusha
push
cdq
arpl
add
jnp
adc
inc
adc
mov
inc
adc
and
adc
adc
xchg
xchg
inc
inc
adc
adc
and
lahf
adc
xchg
iret
enter
inc
adc
fs
adc
sub
enter
jl
test
retf
repz
lods
mov
enter
cs
fdivr
xor
in
push
mov
pop
sahf
or
adc
adc
sbb
les
pop
or
in
xchg
xor
movs
adc
adc
pop
in
adc
dec
inc
ins
enter
jo
jne
cwde
mov
xor
pushf
mov
sbb
in
int3
rcl
mov
push
mov
cld
add
add
push
inc
sub
mov
xchg
inc
pop
push
inc
inc
push
pop
pusha
fs
sub
and
xchg
xchg
inc
sub
dec
mov
xchg
rol
dec
call
in
lock
adc
out
in
sbb
sbb
and
and
fs
retf
dec
add
dec
push
mov
xor
add
mov
push
adc
adc
push
fstp
pushf
adc
and
lahf
xchg
push
push
or
push
xchg
sub
mov
mov
mov
inc
fmul
enter
loopne
in
leave
xchg
mov
pop
or
adc
fs
xchg
out
pop
jne
cmp
pop
gs
inc
pusha
mov
gs
jo
dec
xor
xor
cwde
pushf
mov
movs
ss
jb
sbb
jge
clc
cld
sbb
sbb
or
sbb
mov
xor
xchg
pusha
fs
push
sbb
mov
push
inc
xchg
int
out
and
push
push
call
xor
xchg
xchg
dec
js
pop
rcr
xor
in
xor
cwde
cmps
mov
movs
xor
mov
es
fcomi
lahf
cmp
push
and
sbb
or
fs
mov
xor
dec
gs
mov
movs
xor
add
lods
mov
mov
in
and
dec
xchg
sbb
ret
es
enter
inc
cmp
sub
and
push
xchg
inc
ins
jo
cmp
enter
cwde
pushf
mov
movs
and
xchg
retf
aam
clc
in
mov
sub
jle
enter
in
sbb
hlt
inc
sub
or
xor
push
push
xchg
ins
push
sbb
xor
fs
retf
out
pop
pop
pusha
xor
dec
gs
xor
sbb
sbb
or
call
mov
sbb
dec
in
jb
sbb
sbb
sbb
ss
retf
sbb
sbb
push
sbb
jae
pushf
sbb
sbb
push
ss
retf
leave
sbb
sbb
push
adc
sbb
sbb
retf
in
jb
cmp
sbb
fwait
sbb
inc
mov
push
inc
inc
push
adc
or
jns
or
push
mov
sbb
jb
sbb
sbb
test
rcl
in
das
inc
push
sbb
cld
add
add
cs
mov
sub
sub
xor
jno
pop
pop
sub
and
adc
mov
nop
xchg
(bad)
enter
mov
retf
retf
sbb
in
stc
jno
fs
or
inc
jnp
jl
inc
push
pop
pop
pop
pop
mul
and
pop
xchg
inc
inc
and
pop
pop
and
lahf
xchg
pop
pop
sub
pop
xchg
iret
enter
pop
(bad)
pop
dec
xchg
lods
sbb
js
sbb
mov
pop
pop
loope
fs
in
dec
inc
or
inc
or
adc
fs
retf
out
and
sbb
cmp
gs
inc
jae
push
ins
jo
test
in
pushf
mov
push
sbb
lahf
xchg
xchg
and
and
lahf
xchg
and
inc
cld
add
add
mov
das
sub
sub
xor
inc
cs
cmp
mov
adc
sbb
and
fwait
ss
mov
and
sbb
mov
and
and
xchg
and
add
and
and
add
jl
cs
sbb
clc
cmps
xor
lahf
xchg
xchg
inc
and
and
enter
and
and
iret
and
and
or
fs
inc
fcomp
das
sub
and
in
and
and
and
and
mov
xchg
inc
inc
cmp
sbb
inc
in
movs
and
xor
sbb
and
jmp
and
and
sbb
and
and
sbb
inc
and
and
das
aas
and
loopne
and
popf
push
cdq
int
xor
out
cs
xchg
cs
ins
jns
inc
test
adc
push
sbb
(bad)
sbb
lds
mov
aad
sub
test
or
sub
mov
mov
inc
cmp
mov
shl
cmp
adc
sbb
jl
outs
jnp
test
enter
lods
mov
fbld
xor
loopne
adc
cmp
in
repnz
adc
sbb
gs
mov
and
adc
pop
jle
shl
and
xchg
xor
sub
in
sbb
mov
mov
xchg
sbb
popa
mov
jle
xor
retf
out
mov
jae
sub
ins
mov
enter
outs
xor
jge
and
fbstp
ss
repnz
sub
cmp
add
jo
cld
sub
pop
cmp
cdq
popa
xchg
ins
jno
sub
jb
pushf
aaa
mov
or
sar
add
test
fwait
aad
pop
ficomp
cmp
sub
xor
inc
push
sbb
pusha
ins
xlat
sub
sbb
jo
xchg
xchg
inc
cs
enter
call
leave
retf
call
cmp
and
push
xor
enter
js
sbb
in
add
test
mov
or
pop
inc
fiadd
fcomp
loopne
inc
push
mov
ds
and
cmp
inc
and
push
cdq
int
mov
push
jo
xor
dec
lds
fs
in
cdq
aaa
int3
shl
fsub
call
in
enter
aaa
sub
xor
nop
xchg
or
pusha
xor
enter
mov
call
or
push
mov
and
jnp
fwait
inc
inc
fs
retf
iret
inc
xchg
mov
inc
inc
xor
enter
pop
inc
inc
fs
in
inc
dec
xchg
outs
lods
fmul
mov
fsub
gs
push
inc
or
fs
repz
cmp
cmp
adc
inc
dec
and
test
mov
ins
nop
retf
in
hlt
cwde
pushf
aaa
mov
dec
sub
int3
rcr
in
xchg
sub
cld
add
cmp
stc
pop
sub
inc
sub
xor
pop
pop
pusha
inc
push
mov
mov
dec
push
mov
gs
call
jb
add
call
mov
inc
or
ss
inc
inc
inc
adc
jl
mov
adc
inc
mov
push
fsub
inc
loopne
or
inc
imul
add
inc
sbb
add
pop
les
outs
(bad)
and
enter
ins
jo
mov
pop
cwde
pushf
mov
rol
enter
xor
dec
ins
clc
cld
add
jns
repnz
sub
inc
xor
sbb
mov
add
pusha
mov
pop
adc
mov
mov
and
call
das
sub
sbb
inc
and
xchg
add
enter
push
cmp
js
xor
retf
aaa
inc
test
sbb
mov
fcomp
mov
rcl
mov
popa
sbb
inc
jp
inc
jbe
inc
addr16
fmul
inc
cmp
mov
xchg
adc
sbb
mov
jo
or
or
push
add
rcr
mov
sub
inc
sub
iret
mov
inc
pusha
dec
xlat
inc
or
xor
test
jb
xor
fcomp
or
cmp
dec
gs
sbb
lea
pop
lahf
mov
xor
push
mov
mov
adc
mov
dec
pushf
out
cmovo
sbb
cmp
mov
or
cmp
es
jns
mov
es
dec
fs
ins
js
pushf
and
ins
or
xor
aaa
pushf
mov
or
aas
(bad)
repnz
and
mov
int3
fmul
hlt
clc
or
retf
retf
retf
xchg
nop
and
sub
sub
inc
inc
inc
sahf
cmp
jns
push
mov
data16
addr16
mov
mov
aas
enter
jg
and
ins
in
aas
clc
in
fist
sbb
jg
add
and
int
das
inc
add
dec
aas
pop
mov
ins
in
je
js
mov
fwait
lea
movs
jno
or
xchg
addr16
inc
sahf
xchg
fsubr
pop
add
mov
add
cmp
cld
xor
add
add
aas
and
enter
xor
repz
ins
inc
xchg
cmp
fxch
xchg
cwde
or
xchg
mov
sbb
mov
out
in
jb
xor
and
sub
int3
inc
sahf
cmp
push
xor
add
sbb
(bad)
mov
add
mov
in
int
mov
ds
mov
iret
enter
enter
dec
and
(bad)
in
clc
inc
and
js
mov
add
add
and
iret
sub
pop
inc
je
mov
and
movs
repnz
cdq
lea
aas
call
push
or
push
data16
or
aas
xor
adc
sub
mov
cmp
fldcw
ins
aas
js
xchg
repnz
fimul
int3
pop
sti
cmp
sar
inc
inc
hlt
or
or
dec
adc
enter
cwde
fs
shl
pop
pop
mov
int
aaa
repnz
test
adc
sub
(bad)
repnz
pop
in
cld
retf
cmps
mov
mov
inc
sahf
fadd
call
xchg
movs
adc
dec
ins
js
loope
arpl
or
iret
div
and
or
or
fsubr
cld
or
mov
mov
and
les
sbb
xchg
or
push
inc
fisub
cwde
xchg
mov
addr16
in
xor
inc
call
or
lea
loope
ror
or
enter
pop
inc
js
xor
iretw
mov
mov
xchg
aaa
xor
call
sbb
or
xor
or
repnz
and
dec
aam
lea
cwde
pushf
mov
lock
xor
xor
cmp
or
add
or
sbb
pop
pop
push
mov
xchg
mov
dec
jns
inc
in
clc
cld
xor
retf
push
adc
push
and
iret
sub
pop
sub
jl
sti
and
xor
sbb
push
sbb
(bad)
and
mov
or
xor
cmp
iret
lods
rol
ins
or
push
cwde
pop
loope
xchg
pushf
test
call
addr16
fdivr
clc
xor
cld
sbb
or
adc
enter
xor
sbb
and
enter
mov
xor
mov
dec
call
xor
pusha
sub
adc
cmp
mov
and
pushf
js
fucomp
mov
mov
outs
mov
loopne
adc
xor
and
and
fsubr
hlt
sub
xchg
sub
adc
or
sub
xor
repnz
cmp
cmp
iret
enter
js
sub
inc
sahf
pop
adc
js
sbb
inc
int3
fcomp
bound
adc
mov
enter
cmp
pop
mov
cmc
cdq
and
sub
adc
addr16
(bad)
jo
xchg
xchg
and
clc
cmp
mov
sahf
xor
or
sub
outs
dec
adc
adc
sub
pop
jl
xor
and
jns
xchg
adc
call
xor
out
adc
cmp
mov
fisub
dec
adc
push
push
mov
cwde
test
popf
xchg
addr16
in
jae
xor
or
sub
and
push
sub
ss
and
push
xchg
xchg
addr16
movs
mov
jns
sbb
in
clc
sbb
sbb
fcomp
mov
adc
addr16
out
add
sub
int
addr16
jl
pop
das
rcr
pop
mov
clc
dec
call
pushf
dec
into
pop
movs
sbb
pop
cmp
addr16
fnstcw
sbb
das
dec
js
outs
xchg
retf
sub
pushf
test
push
int3
leave
enter
mov
cmp
dec
cmp
sbb
pushf
sub
cmp
cdq
fs
pop
push
mov
fs
das
stos
sbb
mov
sbb
mov
sbb
mov
mov
lods
sbb
ds
mov
fsub
iret
enter
xor
sbb
dec
repz
pusha
cmp
dec
cmp
jl
js
xor
inc
test
fmul
int3
mov
add
iret
sbb
sbb
xor
xchg
xchg
int
sbb
pusha
xor
sbb
xor
mov
mov
mov
xchg
aaa
enter
in
xor
jnp
sub
fdiv
sbb
mov
xor
xor
push
xor
lods
fs
loop
mov
fadd
retf
xchg
addr16
push
or
or
xor
cmp
loopne
sbb
push
enter
ja
xor
enter
push
and
xchg
out
clc
or
je
pop
fs
shr
cmp
cmp
outs
push
fdivr
out
mov
in
ds
adc
sbb
arpl
xor
jnp
and
xor
sahf
fxch
xor
js
mov
test
pushf
jns
pop
cmp
dec
xor
mov
je
push
or
add
jae
and
ins
std
inc
and
fwait
retf
in
and
das
push
and
inc
sbb
and
mov
pusha
mov
sbb
adc
cmp
cmp
addr16
push
cld
rol
inc
and
inc
and
xor
fsubr
aas
jo
dec
clc
and
and
and
cmp
pop
iret
ins
test
push
cwde
mov
mov
and
enter
enter
clc
shl
and
jnp
mov
and
adc
adc
or
fptan
add
and
imul
xor
xchg
addr16
enter
or
xor
cmp
and
dec
js
and
cmp
and
test
sbb
inc
enter
enter
scas
and
enter
cmp
and
mov
and
retf
out
cmp
pop
inc
xchg
and
sbb
dec
add
inc
fsub
dec
arpl
sti
dec
sbb
cs
xchg
es
pushf
push
es
mov
mov
in
es
es
es
cmc
inc
es
out
cmp
es
(bad)
cs
xchg
es
daa
out
and
ret
mov
mov
mov
or
cmp
or
imul
sub
mov
aaa
mov
or
test
xchg
es
mov
fptan
cmp
xor
bound
in
inc
daa
or
xor
pop
cs
in
daa
daa
daa
lahf
aam
enter
inc
pusha
fs
retf
pushf
fimul
gs
xchg
lds
xor
(bad)
fimul
mov
lock
or
mov
sbb
and
and
mov
stc
pop
push
dec
dec
push
ret
es
push
ins
pop
js
jl
sub
and
xchg
xchg
xchg
inc
lods
mov
jl
fsub
lock
fldcw
ins
fs
js
cwde
pushf
xchg
xchg
retf
addr16
cmp
int3
inc
inc
inc
sahf
fcomp
cld
or
pop
pop
mov
sub
sub
cmp
xor
repnz
pop
push
dec
mov
and
xor
lods
sub
sub
or
sub
or
adc
inc
pop
(bad)
enter
inc
inc
inc
push
ins
jo
mov
inc
in
rol
retf
sub
sub
jmp
mov
sub
clc
inc
cld
jns
mov
sub
imul
sub
mov
xor
mov
fs
mov
fsubr
fist
jl
sub
sbb
inc
call
dec
sbb
jns
pop
pushf
js
mov
movs
cmp
test
lods
xor
loop
mov
xchg
xchg
jmp
std
or
and
mov
adc
stc
inc
ficomp
js
adc
pop
cs
sub
ins
jb
jno
sub
sub
retf
mov
call
inc
lock
cmc
cmc
sbb
retf
retf
xchg
sub
and
and
and
into
sub
sub
and
pop
fild
and
sub
sub
and
inc
lods
mov
mov
xchg
inc
fcomp
loopne
leave
retf
retf
imul
or
nop
retf
out
adc
sub
jne
addr16
inc
cmc
test
imul
and
mov
cmp
iret
clc
dec
cmp
sbb
enter
sub
cmp
scas
mov
and
push
fiadd
test
mov
enter
clc
test
pop
mov
or
and
cmp
pop
int3
push
sbb
sbb
je
jns
dec
and
pop
push
inc
inc
mov
sub
and
cli
xor
enter
sub
sbb
sub
jb
sbb
sub
sub
sub
sbb
sbb
inc
mov
push
iret
mov
lods
mov
mov
push
inc
inc
lock
retf
or
cmps
xchg
cs
sub
inc
and
mov
test
lods
mov
in
fsubr
jge
jl
lock
or
sbb
cmp
cmp
or
or
nop
pop
sub
adc
cmp
mov
pop
test
pop
enter
mov
fdiv
sbb
mov
mov
cs
push
mov
cs
cs
jmp
(bad)
cs
xchg
fwait
retf
cs
enter
test
cs
rol
out
cmp
cs
shr
das
das
das
das
xor
sbb
sbb
mov
push
inc
push
lods
mov
cwde
pushf
sub
inc
mov
enter
inc
retf
or
test
sub
xor
sbb
mov
xor
loopne
inc
cs
iret
enter
cmp
and
movs
and
das
pop
das
or
xor
mov
and
pop
jno
push
jecxz
cmp
retf
fimul
cmp
and
das
das
das
jle
inc
xchg
xchg
inc
cs
das
xor
and
add
xor
mov
dec
mov
pop
pop
push
inc
inc
pusha
fs
mov
xchg
inc
cs
xchg
xchg
(bad)
sar
retf
hlt
sbb
or
xor
mov
and
and
mov
sbb
ss
inc
dec
push
push
xor
push
pushf
sbb
xor
xchg
xor
xor
pop
das
xlat
xchg
mov
xchg
or
or
or
cmp
fst
dec
mov
inc
inc
inc
sahf
js
cwde
pushf
test
sbb
jns
enter
(bad)
sbb
clc
clc
and
cmp
xchg
out
jl
xor
xor
sbb
add
mov
and
sub
cwde
sub
push
mov
xor
sbb
fcom
(bad)
gs
mov
jb
mov
xor
(bad)
cmp
inc
in
inc
inc
push
mov
pushf
sbb
push
test
gs
xor
mov
inc
jmp
rcl
jmp
inc
mov
xor
ss
sbb
xchg
leave
xor
aaa
xor
movs
jb
xor
add
inc
sahf
repnz
call
xor
xor
xor
cdq
mov
xor
iret
ins
in
pop
jl
push
mov
test
xor
sbb
xor
ds
popf
fstp
call
inc
scas
xchg
addr16
cld
cmps
xor
sbb
mov
inc
xor
inc
and
xor
add
xor
xor
sub
enter
xor
xor
iret
xor
sub
xor
xor
or
or
lods
mov
cmc
inc
inc
push
mov
movs
or
push
stos
loop
xor
fwait
retf
in
xor
adc
cs
xor
xor
mov
dec
xor
push
iret
js
aas
jmp
xchg
addr16
(bad)
xor
cdq
arpl
and
cld
add
outs
or
dec
aas
cmp
clc
xchg
xor
push
mov
adc
pop
inc
push
addr16
mov
cwde
cwde
aas
and
cmp
xor
enter
loope
and
in
clc
mov
jae
pop
xchg
xor
inc
fwait
retf
in
xor
mov
pop
dec
cs
ftst
mov
scas
xor
and
int3
aad
xchg
xchg
rcl
mov
xor
xor
xor
ins
jb
sbb
inc
enter
xor
test
pop
nop
retf
retf
fs
mov
fs
sbb
sbb
mov
inc
and
mov
int3
dec
pop
lock
lahf
fnstenv
xor
inc
sahf
fptan
xchg
xor
xchg
(bad)
cli
int3
and
cmp
ss
or
xor
cmp
jbe
iret
dec
pusha
inc
ja
js
cmp
xchg
jl
and
adc
cwde
enter
inc
push
mov
ss
mov
mov
add
repnz
sub
add
dec
pop
sbb
sbb
push
fwait
mov
test
mov
lods
mov
pop
push
inc
mov
mov
and
loopne
test
cmp
cmp
cmp
jl
xchg
xchg
inc
cmp
xchg
inc
mov
mov
xchg
cmp
hlt
clc
shl
xchg
ss
or
scas
fcomp
aaa
aaa
xor
clc
jl
inc
inc
pop
pop
push
sbb
xchg
addr16
lahf
xchg
xchg
call
cdq
mov
cmp
xor
in
sbb
js
pushf
addr16
mov
and
inc
push
test
cmp
shr
and
cmp
jae
cmp
cmp
xcrypt-ecb
enter
cmp
fs
xchg
iret
cmp
lods
cmp
mov
cmp
outs
stos
inc
jmp
rol
imul
cmp
cmp
movs
popa
sbb
add
cmp
lods
mov
test
hlt
mov
cmp
fwait
xchg
out
cmp
or
cmp
repnz
and
dec
and
jecxz
xor
inc
inc
addr16
and
dec
repz
push
cmp
out
int3
and
inc
ins
mov
and
cmp
and
push
cwde
in
sbb
mov
cmp
sahf
pop
jno
clc
in
and
cdq
int
in
aas
clc
adc
repz
stc
call
or
xor
(bad)
cmp
cmp
pop
xchg
fldcw
je
js
jl
inc
inc
sahf
mov
lods
lds
repnz
mov
(bad)
cmp
dec
cmp
call
mov
cmp
or
sbb
sbb
dec
fs
fs
addr16
xchg
rcl
aas
test
inc
and
enter
enter
es
sbb
jl
retf
jg
cmp
cmp
ss
inc
push
pop
aas
pop
in
xchg
addr16
and
iret
ins
mov
cwde
ins
mov
mov
and
push
mov
retf
in
icebp
cwde
inc
int
ds
ds
lods
inc
ds
in
mov
mov
je
mov
fdiv
mov
xchg
xchg
mov
aam
into
ds
and
aas
aas
fs
or
aas
xor
xchg
xchg
addr16
pop
fs
sahf
xchg
xchg
push
jl
inc
inc
cwde
pushf
test
inc
cdq
int
push
iret
aas
or
fs
hlt
clc
cld
in
dec
jae
inc
call
cmp
cmp
inc
push
iret
in
add
or
aas
push
and
repnz
repnz
mov
fnstcw
pop
in
cmps
clc
mov
aas
in
clc
add
mov
xor
pushf
sbb
sbb
pop
and
ins
in
je
mov
movs
addr16
test
aas
mov
(bad)
xor
aas
fsubr
and
push
jl
inc
jecxz
inc
inc
pop
out
and
inc
aas
xor
cmp
fnstcw
cmp
dec
sbb
fs
cdq
xor
sub
and
enter
pushf
test
les
enter
push
test
clc
aam
xor
mov
inc
ins
inc
inc
inc
cmp
iret
aaa
inc
aas
cmp
pop
into
inc
aas
push
gs
inc
aas
cwde
sbb
sbb
mov
mov
enter
jmp
clc
call
mov
cmp
aas
inc
push
xor
dec
lahf
fldcw
inc
or
dec
mov
enter
inc
aas
mov
push
aam
fadd
clc
mov
je
jecxz
inc
cdq
mov
or
aas
xor
sbb
sbb
cmp
movs
addr16
xchg
xchg
rcl
test
(bad)
enter
jns
fdiv
hlt
clc
jns
sbb
cld
or
dec
and
data16
dec
mov
and
inc
aas
pop
push
sub
clc
jb
adc
dec
lods
inc
inc
enter
push
enter
and
enter
clc
xchg
movs
and
nop
push
inc
jns
mov
adc
cmp
mov
je
aam
lahf
xchg
xchg
addr16
dec
das
vunpcklps
adc
inc
inc
xor
dec
xor
sbb
sbb
dec
inc
add
xchg
cwde
js
js
or
or
add
movs
mov
xor
push
push
outs
pop
mov
inc
mov
mov
mov
repz
mov
sbb
mov
push
cmp
mov
(bad)
(bad)
dec
mov
adc
inc
cmp
mov
outs
inc
loopne
mov
mov
and
imul
std
or
xchg
rcl
jl
rol
or
rcr
pop
mov
mov
pop
ret
int3
add
xor
push
mov
je
cmp
or
add
in
gs
pop
mov
popa
sar
frstor
mov
clc
call
ins
movs
jo
jmp
and
cmp
test
nop
iret
adc
movs
mov
js
iret
scas
loopne
jl
adc
mov
call
int3
or
scas
push
mov
fcom
xchg
(bad)
sub
pop
out
test
mov
add
or
js
(bad)
adc
sti
pop
mov
sti
popa
loopne
in
call
mov
inc
pop
rcl
mov
inc
push
test
jbe
mov
mov
(bad)
cmp
jne
add
add
jmp
mov
add
pop
sbb
and
inc
imul
sub
push
adc
xchg
mov
inc
leave
mov
mov
adc
push
mov
pop
or
jbe
fiadd
jns
mov
in
lods
(bad)
pop
cmps
lea
cmp
mov
clc
and
lods
push
je
xor
bound
loope
and
lahf
int
or
push
mov
push
adc
cmp
outs
sub
(bad)
mov
mov
sub
fadd
push
push
push
xchg
pop
loopne
in
xchg
or
(bad)
pop
add
sar
data16
fimul
cmp
ja
jo
and
push
add
cmp
dec
cmp
jne
add
out
dec
mov
push
out
add
cmp
add
sbb
data16
daa
mov
jmp
aas
push
prefetchw
je
push
(bad)
outs
mov
add
push
(bad)
adc
inc
push
add
scas
xor
cli
(bad)
mov
cmp
loopne
push
add
dec
vpcmpeqd
mov
cld
ss
jle
sbb
mov
mov
mov
scas
pop
mov
mov
mov
test
sbb
adc
jb
out
jg
sbb
pop
dec
mov
test
je
cmps
ins
dec
test
cwde
mov
push
mov
mov
jmp
mov
xor
cdq
fwait
retf
mov
mov
mov
repz
ficomp
inc
jmp
sbb
dec
sbb
push
and
ins
push
and
jne
cmp
sbb
pop
popf
sbb
and
dec
or
inc
sub
inc
dec
push
pop
ds
mov
or
clc
dec
arpl
xchg
inc
add
jo
ss
xchg
fcom
int3
add
(bad)
xor
pusha
ficom
jno
ret
add
mov
mov
cmp
and
mul
or
ins
or
mov
inc
cmp
dec
in
mov
adc
adc
jle
mov
in
mov
ins
sbb
pop
xchg
dec
(bad)
pop
mov
and
sub
fnstcw
leave
sbb
inc
inc
or
push
mov
xor
sbb
mov
push
xlat
scas
test
push
push
sub
push
repz
jmp
push
cmp
je
push
and
fsubr
mov
arpl
dec
cmp
je
cwde
sub
push
adc
mov
sahf
or
and
pop
pop
in
pop
ret
fsub
and
(bad)
(bad)
ss
push
fmul
sub
adc
(bad)
(bad)
add
data16
lea
push
je
push
and
mov
jo
sub
jae
mov
push
movsx
ret
call
cmp
jge
inc
jmp
enter
mov
nop
sbb
dec
sub
mov
lea
ins
mov
cmp
adc
adc
and
loop
loop
in
xchg
mov
inc
jo
mov
das
dec
ror
lods
fsubrp
stos
and
(bad)
in
add
or
test
sub
ds
push
dec
stc
push
or
cmp
and
imul
(bad)
inc
cmp
je
mov
cmp
inc
xor
lea
cmp
(bad)
aas
dec
mov
test
cwde
bound
or
push
add
daa
dec
xlat
add
mov
add
ins
and
mov
leave
lock
add
xchg
add
push
dec
push
lea
mov
mov
data16
add
js
inc
sub
into
outs
sbb
mov
cmp
adc
pushf
dec
sbb
ins
sti
jg
ja
jmp
fld
and
sbb
mov
mov
cmp
je
mov
push
dec
add
out
stos
jmp
mov
ja
jo
cli
or
adc
nop
add
aad
ret
push
sub
into
mov
cmp
ret
push
and
push
loop
push
or
aas
cmp
add
pop
xchg
add
push
adc
imul
and
cs
mov
or
cmp
pop
or
add
stc
jmp
mov
adc
cmp
icebp
push
lahf
iret
repz
test
xchg
dec
cmp
xchg
and
stc
pusha
clc
mov
scas
jb
xor
retf
movs
dec
push
movq
sar
cwde
scas
and
repz
sti
(bad)
pop
rcl
inc
push
jo
jl
div
cmps
push
cmc
(bad)
xor
dec
push
inc
ss
ret
mov
sbb
mov
jp
cmp
mov
pop
rol
jle
inc
aam
call
cmp
sbb
adc
inc
je
stc
add
mov
out
sub
ja
mov
inc
dec
stc
add
dec
jb
out
jbe
dec
pop
outs
or
pusha
add
(bad)
bswap
mov
into
into
sbb
jecxz
sahf
add
cmp
int
dec
scas
retf
mov
mov
mov
cdq
int3
xor
cmp
enter
push
adc
(bad)
ja
cmp
in
ret
push
es
pop
jl
jne
pop
fs
popa
dec
sar
cdq
pop
push
dec
push
jb
shr
dec
adc
je
and
push
pushf
mov
push
and
in
popa
inc
(bad)
xchg
daa
dec
sahf
clc
dec
or
dec
fmul
mov
fdiv
js
(bad)
xor
rcl
sbb
mov
add
call
inc
cmp
dec
and
push
fld
xlat
test
sbb
add
add
sbb
lock
je
mov
add
push
push
mov
pop
stos
dec
add
cmp
jecxz
je
ja
push
lock
dec
sub
inc
jecxz
sbb
leave
xchg
inc
add
adc
and
cmp
adc
or
add
fwait
sbb
aam
push
xchg
mov
inc
pop
in
jmp
call
std
std
or
lods
inc
pop
sub
sub
mov
jle
cmp
sbb
imul
xor
ins
adc
lock
sub
adc
ret
xor
sub
mov
int
add
cdq
fwait
add
dec
xchg
adc
std
cmps
mov
push
push
mov
dec
loopne
daa
iret
(bad)
fdiv
jmp
dec
push
mov
test
dec
sub
mov
mov
les
push
ret
push
xor
mov
adc
push
or
push
push
or
sub
add
sub
push
xor
dec
mov
inc
imul
dec
push
adc
or
int
retf
dec
jg
or
hlt
test
inc
add
mov
jmp
add
cmp
bound
dec
xchg
lahf
sahf
data16
or
xchg
dec
fdivp
frstor
test
mov
pop
dec
leave
imul
mov
dec
cmp
repnz
dec
cdq
dec
pushf
dec
mov
xor
add
mov
stos
pop
pop
push
jb
cld
sar
popa
mov
sahf
and
inc
mov
ja
dec
pop
mov
sbb
fld
lods
xor
js
dec
(bad)
das
mov
mov
dec
sahf
pushf
in
dec
fs
jl
mov
leave
xchg
daa
mov
dec
add
jp
outs
fnstenv
xchg
dec
nop
inc
inc
pop
mov
arpl
outs
pop
adc
fcmovu
lds
push
sub
test
ja
mov
out
retf
lods
inc
inc
ds
hlt
in
das
inc
stc
mov
xchg
aaa
fwait
dec
jle
sub
cwde
dec
loope
sub
enter
imul
and
cli
push
pusha
movs
lock
cmp
loopne
mov
mov
enter
sub
stc
sbb
mov
(bad)
std
fst
or
xlat
in
push
ror
fdiv
and
sub
lds
dec
scas
pop
ins
add
dec
fidiv
push
and
ror
in
inc
add
imul
test
mov
test
xchg
int3
int3
jecxz
cwde
neg
push
dec
add
add
add
dec
mov
mov
add
jecxz
or
mul
push
test
mov
call
add
sub
sbb
in
add
cmp
push
pop
jle
test
je
push
sar
cmp
inc
pop
inc
xor
leave
xchg
dec
sahf
dec
xor
clc
pusha
fistp
push
(bad)
bound
adc
dec
pop
jne
jno
enter
inc
push
pop
test
jns
mov
je
push
cmp
jnp
inc
iret
jg
push
repnz
stos
push
mov
push
jmp
pop
pop
mov
inc
call
ss
xor
push
inc
add
test
adc
cld
or
add
call
(bad)
ins
mov
adc
push
inc
push
xchg
jg
dec
int
pusha
(bad)
cmp
push
popa
cmp
pop
or
cmp
mov
mov
or
cmp
inc
or
cld
mov
bnd
test
inc
dec
sahf
cmp
cwde
ins
mov
mov
sbb
rol
loopne
xor
or
jno
jns
outs
and
inc
cmp
fcomp
pop
mov
mov
dec
or
dec
loopne
jp
cmp
xchg
adc
(bad)
mov
test
or
mov
lea
add
ss
loop
mov
xchg
mov
ds
dec
adc
ror
daa
imul
cmp
adc
inc
mov
add
(bad)
das
stos
ror
test
test
sbb
jo
pusha
mov
imul
mov
adc
or
mov
xchg
out
adc
outs
ja
dec
push
pop
cld
dec
stos
push
add
lea
mov
mov
jl
and
idiv
xor
add
in
xchg
pcmpgtb
cmp
popf
cmp
fs
adc
out
mov
pop
or
push
pusha
movs
jle
loope
mov
cmp
mov
popa
add
fstp
fnstenv
outs
pop
sbb
pop
test
ins
imul
sbb
outs
adc
add
mov
mov
inc
ins
mov
call
call
inc
inc
mov
push
sahf
mov
shr
jl
adc
imul
jle
add
mov
add
call
jl
pop
ja
mov
sub
and
data16
jmp
mov
push
repnz
sbb
lea
cmp
push
cs
cdq
sbb
sbb
inc
inc
sbb
(bad)
arpl
popa
or
loopne
cmp
cmp
mov
or
push
idiv
jl
test
xchg
out
sahf
pusha
stc
out
or
add
or
or
(bad)
and
mov
pushf
jbe
and
cmp
sbb
sbb
cmp
popa
fcmovu
inc
inc
xor
iret
and
je
nop
xor
int
loope
cmp
lahf
and
outs
sub
jo
inc
repz
or
dec
push
mov
inc
push
or
je
pusha
div
add
test
jo
fs
add
mov
pop
dec
sahf
cmp
out
lock
cmc
pop
or
in
jg
(bad)
jg
maxpd
push
imul
(bad)
mov
imul
cld
shr
xor
fld
push
das
leave
lods
add
sbb
add
int3
inc
cmp
ja
(bad)
mov
sub
fdiv
(bad)
leave
into
std
pop
xor
shr
mov
jmp
push
fisubr
jge
(bad)
movs
cli
imul
pop
sbb
idiv
int
push
xlat
cmps
(bad)
imul
dec
pop
xchg
in
sar
lock
stc
sahf
out
mov
cmovs
ss
jns
int
lea
mov
jnp
push
pop
scas
pop
pop
stc
pusha
out
ins
cmc
outs
test
pop
lock
stc
mov
sub
pop
push
push
mov
not
aas
push
test
or
sbb
or
jge
add
push
jmp
js
sahf
add
sbb
and
mov
ret
(bad)
mov
xlat
pop
adc
push
or
mov
mov
mov
mov
or
sbb
fimul
mov
pop
cmp
cmp
je
fs
lea
fisubr
je
pop
jo
(bad)
ss
jge
mov
aaa
jl
lea
fld
push
and
mov
aam
leave
(bad)
sbb
mov
rcl
retf
loopne
mov
dec
dec
lea
loopne
mov
add
adc
pop
push
push
xor
(bad)
ds
loop
cmp
mov
jae
clc
cdq
mov
dec
cmp
jge
je
jbe
mov
pop
xor
sbb
jb
popf
mov
retf
adc
pop
lock
sub
or
add
mov
pop
adc
inc
add
not
rol
inc
sahf
setp
inc
mov
in
xchg
daa
iret
lahf
fistp
lods
lock
and
shr
cmp
in
mov
inc
push
xchg
or
fisubr
cmp
sahf
test
jo
icebp
mov
and
add
inc
cmp
in
xchg
das
add
cwde
in
xchg
xchg
neg
xchg
jns
sbb
(bad)
fwait
or
inc
and
inc
adc
inc
nop
loopne
test
push
fwait
inc
and
in
xchg
fwait
cmp
dec
fwait
push
fwait
std
cli
in
ins
fwait
inc
mov
inc
inc
xor
cmps
int
xor
ja
and
pusha
mov
fcomp
xchg
xor
adc
js
mov
and
jmp
push
jne
cmps
imul
stos
xor
div
mov
cld
cld
push
mov
sahf
mov
mov
or
mov
mov
pop
inc
js
inc
push
adc
pop
fld
cmp
adc
inc
dec
call
aam
xchg
mov
push
and
xchg
xchg
fidiv
and
cmp
dec
xchg
pop
push
sbb
(bad)
scas
and
jp
mov
and
mov
mov
clc
popa
and
mov
loop
fsubr
add
test
pop
aas
sub
jbe
xor
loope
pop
or
sbb
add
xchg
ds
jmp
sbb
jne
popf
fs
or
mov
add
sbb
sbb
dec
cmp
inc
rcr
push
inc
rcl
mov
inc
dec
jne
stos
xor
and
mov
fdiv
add
and
retf
inc
xor
xchg
and
add
mov
jbe
push
popf
int
idiv
jmp
iret
xchg
cmps
je
mov
rol
test
ror
and
mov
outs
sbb
inc
es
sbb
das
mov
mov
add
push
pop
dec
adc
stos
test
xor
daa
ret
mov
inc
icebp
pmuludq
jle
dec
mov
jmp
pop
pop
add
js
test
mov
cdq
stos
pusha
mov
sahf
cmp
inc
dec
sahf
dec
sahf
popa
sahf
loopne
pop
fwait
adc
loope
rcr
loop
jmp
sbb
aas
dec
push
inc
imul
pop
push
pop
xchg
push
mul
add
or
mov
inc
mov
ret
daa
xor
aam
loopne
add
ss
sbb
push
sub
xor
bound
fs
mov
cmps
shl
and
mov
loopne
push
push
mov
mov
adc
inc
aaa
cmp
ins
cs
push
es
or
sar
stc
fstp
in
add
push
jb
aas
(bad)
test
mov
add
call
das
mov
push
in
adc
popf
dec
test
and
pop
xchg
test
out
cdq
mov
lea
sar
mov
cmp
je
push
int3
cmp
mov
push
aas
adc
jecxz
lahf
jo
sbb
mov
and
or
sbb
push
call
adc
pop
pop
xor
fld
dec
mov
mov
or
dec
test
mov
sub
ror
jb
jmp
(bad)
std
sbb
mov
xor
mov
push
sbb
stos
xchg
or
mov
xor
(bad)
xor
inc
pop
push
or
inc
mov
or
adc
push
pop
mov
mov
push
jne
push
and
sub
loopne
mov
adc
sbb
fcomp
arpl
sbb
and
xchg
dec
jbe
jl
or
mov
jge
jl
jmp
add
rol
mov
mov
or
jns
inc
test
test
adc
das
mov
je
sbb
ins
mov
xchg
push
push
add
lock
mov
mov
push
mov
stos
cmp
mov
repnz
mov
or
push
xchg
retf
mov
int3
fdivr
popf
cmp
xchg
add
adc
retf
jno
(bad)
mov
or
push
cli
inc
ret
or
mov
adc
add
sbb
(bad)
data16
jg
ret
stos
nop
and
inc
add
push
mov
int
xchg
shl
add
cmps
je
inc
add
fild
mov
movaps
sub
sub
ror
push
xor
dec
div
push
push
cdq
push
pushf
pop
push
mov
neg
imul
mov
pop
pop
add
pop
repnz
add
push
pop
or
or
or
push
movups
adc
test
int
adc
push
pop
add
mov
mov
test
or
jg
dec
mov
mov
push
shl
aas
stos
push
inc
pop
cmps
push
ins
add
test
jl
stos
push
push
cmps
cmp
or
imul
sub
mov
lods
ins
dec
loope
cmp
inc
out
cmps
dec
shl
dec
mov
shr
inc
test
push
sbb
je
and
push
add
add
test
mov
mov
jg
ret
sar
fnstcw
or
add
jne
gs
pop
push
xchg
pop
je
pop
aam
ret
sti
inc
jle
adc
sbb
outs
push
add
or
dec
or
loopne
mov
mov
mov
mov
sbb
cld
pop
addr16
sbb
mov
repz
js
dec
aaa
dec
push
push
pop
mov
imul
adc
pop
fcom
lods
into
pop
xchg
push
or
dec
fcom
(bad)
xchg
inc
jmp
or
jo
retf
push
dec
cli
pusha
daa
popa
mov
sahf
push
daa
push
lock
imul
aaa
dec
into
imul
add
mov
test
xchg
ins
xor
or
test
lea
jmp
scas
imul
cmp
push
push
bound
loopne
jp
and
push
(bad)
ins
lea
mov
push
ins
add
stos
lds
pop
mov
jle
int
stc
adc
call
imul
cmp
cmp
jbe
or
mov
push
cmp
out
test
pusha
dec
dec
or
add
jl
cmp
inc
push
in
(bad)
mov
lock
mov
int
gs
inc
dec
push
add
fiadd
inc
push
cmp
cmp
je
push
xor
mov
xor
dec
add
outs
ret
mov
cmp
test
add
out
rol
mov
mov
sbb
je
aas
add
inc
movaps
leave
test
adc
ror
and
cmp
fadd
mov
sbb
std
sbb
(bad)
ss
or
stc
ins
mov
not
(bad)
shl
stc
jle
inc
loope
mov
xor
adc
add
sbb
call
(bad)
retf
ret
push
mov
jl
add
lahf
and
lea
bound
div
cmp
cmp
ins
cmp
dec
push
pop
(bad)
jl
shl
test
sbb
add
mov
rol
add
pop
push
pop
xor
cmp
hlt
sbb
cmps
adc
mov
and
pusha
int3
cmp
add
xchg
loope
add
sbb
fild
mov
push
cmp
je
pushf
outs
cld
sub
(bad)
jbe
and
add
leave
add
into
jno
aas
lock
add
cs
bound
and
out
jae
repz
or
imul
push
pop
sbb
test
outs
(bad)
psrlq
dec
fs
sbb
add
int
sbb
mov
imul
jecxz
push
mov
sub
xchg
jmp
inc
test
push
inc
movs
or
jge
outs
mov
(bad)
cmp
je
or
mov
push
movs
fild
cmp
push
fiadd
jns
adc
js
adc
mov
push
mov
in
push
popf
mov
pusha
outs
adc
int
outs
sbb
bound
loopne
or
dec
jle
or
add
scas
aam
pop
rcl
sub
inc
fnstenv
movs
loopne
mov
enter
jnp
ins
mul
sahf
or
cmp
or
icebp
mov
fs
repz
outs
sbb
repnz
pop
jo
jo
jo
cmp
repz
add
cmp
cmp
out
push
cmp
sbb
das
jo
scas
jle
lea
jecxz
in
mov
lahf
test
dec
or
xor
mov
inc
push
sbb
daa
mov
inc
jo
enter
imul
retf
mov
xor
dec
dec
imul
jge
scas
sub
xchg
jle
stos
jl
in
sbb
rcl
rol
add
in
and
ret
jne
ror
and
cmp
scas
ins
imul
jecxz
call
add
or
add
add
mov
sbb
mov
mov
mov
lock
jl
add
dec
ret
shl
adc
xor
xor
shr
test
or
test
mov
push
adc
sbb
rcr
dec
dec
retf
add
loopne
dec
aam
inc
mov
jbe
mov
aam
jo
xor
add
fs
push
int3
adc
push
mov
add
adc
mov
jmp
mov
in
mov
ins
dec
jnp
jns
push
xchg
xor
push
mov
loope
pop
or
les
hlt
or
in
xchg
cs
(bad)
jle
cmp
jnp
sub
add
cmp
jnp
or
nop
lahf
test
mov
add
xchg
jns
jns
xor
mov
push
inc
pop
add
jle
scas
jns
stos
and
cmp
popa
add
cmp
sbb
ja
ror
and
aas
sub
cmp
adc
outs
pop
jae
push
or
sub
push
xor
ja
nop
sub
inc
pop
test
mov
jnp
enter
jnp
jnp
jnp
rol
cdq
cmp
enter
dec
xchg
mov
dec
adc
pop
mov
sbb
add
sbb
jo
test
mov
mov
and
dec
xor
mov
pusha
rcr
cli
push
push
sub
jns
pop
adc
(bad)
mov
aam
adc
enter
adc
xor
icebp
or
aaa
dec
push
and
jle
mov
call
adc
push
sub
rcr
pop
sbb
sahf
xor
fwait
mov
or
sub
sahf
clc
or
rcl
jp
jb
in
cmp
jp
jp
mov
and
inc
lahf
retf
push
jbe
xor
nop
cmps
cmp
scas
push
cmp
enter
(bad)
jnp
xchg
push
xor
ds
inc
cmp
sub
rol
mov
xchg
outs
push
leave
call
dec
repz
jnp
sahf
(bad)
sbb
imul
add
add
jecxz
mov
call
adc
imul
mov
pop
sbb
(bad)
in
shl
ins
lea
xor
ins
add
mov
sti
add
inc
xor
cli
bound
xchg
mov
inc
jo
or
add
cmps
mov
jno
movs
add
cmp
movs
mov
test
adc
xchg
ror
add
cdq
cmc
(bad)
addr16
xchg
add
adc
and
pop
into
test
dec
loop
outs
pushf
out
sub
movsx
xor
inc
add
sti
jl
dec
cmp
pop
(bad)
cli
mov
and
cmps
movs
sahf
icebp
movs
jne
out
out
sti
(bad)
add
mov
js
fsubr
mov
mov
push
push
push
lods
pop
or
sbb
dec
fcom
or
adc
iret
mov
or
ss
sub
and
jne
and
cs
outs
stos
and
jne
lea
xchg
lahf
fcomp
sbb
jae
hlt
(bad)
mov
push
inc
test
fisubr
jo
inc
jmp
pop
cld
or
into
sar
push
cs
ds
mov
jae
ret
mov
je
dec
clc
popf
dec
push
push
jge
es
jmp
sub
sbb
push
jl
jecxz
test
push
mov
or
xchg
mov
sub
sbb
sbb
push
out
pop
sub
and
xchg
push
out
dec
push
bound
dec
movs
and
leave
xchg
out
push
mov
sahf
xchg
cmp
push
dec
add
push
xor
leave
inc
sub
push
jae
jl
(bad)
jl
add
cli
add
icebp
adc
call
xchg
and
sbb
push
sbb
inc
push
and
xor
sbb
push
mov
daa
mov
or
mov
sbb
out
mov
xor
pop
fcomp
pop
mov
gs
daa
cmc
push
cmp
out
xlat
pop
push
enter
inc
push
push
rcr
pop
lods
cmp
cld
pop
add
pop
std
iret
data16
pop
inc
or
movs
adc
xchg
js
xor
mov
fdiv
stos
xchg
lea
push
mov
test
cmp
or
push
inc
inc
mov
mov
data16
jmp
xor
add
jo
push
enter
push
sti
adc
(bad)
push
and
inc
xchg
cmps
cmp
pcmpeqb
cmp
and
mov
stos
jb
pop
cmp
mov
cmp
cmp
jbe
push
icebp
and
push
(bad)
or
cmp
inc
mov
adc
sub
jb
or
cmp
in
cmp
mov
in
stos
jns
mov
adc
repnz
push
stos
push
scas
push
int3
adc
push
inc
cmp
pop
and
inc
pop
sub
push
add
ret
out
cwde
cmp
dec
push
pop
call
movs
mov
pop
pusha
pop
mov
xor
in
mov
adc
cmp
or
inc
sub
xchg
xor
mov
cdq
pop
or
call
setg
lea
mov
data16
pop
adc
div
jmp
loope
int
dec
add
and
push
test
and
lea
dec
repz
and
push
jae
xor
and
aas
loopne
mov
adc
push
lock
cld
sub
sbb
adc
add
mov
cmp
ins
fld
je
fwait
add
add
xchg
data16
in
or
sar
fdiv
pushf
mov
inc
add
add
add
shl
popa
mov
pop
(bad)
or
push
shl
neg
imul
imul
push
or
dec
mov
add
add
pop
cld
sbb
push
sub
xor
shr
sub
test
push
sbb
dec
add
ret
pop
and
add
push
cmps
lock
or
js
cmp
or
inc
andps
popf
mov
mov
pop
loopne
jecxz
pushf
sbb
or
shl
inc
int
xchg
jmp
das
(bad)
inc
mov
ja
and
pop
xchg
outs
push
fs
sub
mov
inc
add
jbe
pop
adc
or
jl
sbb
jmp
pop
add
inc
sbb
and
pop
movs
sub
adc
xor
add
(bad)
mov
mov
push
movs
or
js
push
out
add
(bad)
add
dec
sbb
sbb
lock
cmps
mov
or
in
arpl
and
std
out
cli
lods
shl
call
rcr
mov
adc
jb
jmp
xor
pop
xchg
arpl
xchg
fimul
pop
add
call
mov
and
and
mov
int
add
sbb
jmp
adc
and
add
mov
or
ja
retf
sbb
and
mov
(bad)
adc
mov
mov
mov
cmp
push
nop
in
inc
adc
and
mov
pop
bound
mov
push
dec
xchg
popa
shl
dec
cmp
sbb
push
jmp
(bad)
aaa
push
(bad)
shr
inc
nop
mov
fild
add
fist
sub
add
push
fidiv
call
inc
and
mov
repnz
iret
fld
fisubr
xor
cs
mov
dec
mov
jle
adc
in
sub
out
int
inc
sbb
jb
jge
mov
xor
mov
push
jmp
adc
adc
jge
hlt
xchg
cld
push
push
stc
nop
(bad)
scas
call
or
or
enter
shr
iret
(bad)
lods
sub
fcmovb
scas
and
pop
xchg
pushf
mov
push
sub
lods
push
adc
pop
test
pop
xchg
pusha
sub
iret
mov
lea
fstp
sbb
or
jle
adc
lock
retf
and
push
push
jecxz
add
jecxz
mov
and
push
adc
ja
add
or
or
test
aaa
or
push
test
jne
ret
and
add
cmp
pop
mov
lock
mov
lahf
movzx
out
inc
sub
inc
cmp
pop
aam
cmp
push
push
dec
mov
sbb
outs
int3
mov
sub
adc
scas
sub
clc
sbb
mov
dec
lahf
neg
or
lock
(bad)
mov
push
pop
call
scas
inc
add
pusha
jmp
and
sbb
out
ins
cld
cmp
mov
jge
cmp
jne
jecxz
movs
cmp
add
lock
(bad)
repnz
cdq
add
adc
cdq
mov
aam
(bad)
push
sbb
les
mov
popf
adc
addr16
push
jno
sbb
or
xchg
je
cmps
sub
jae
mov
or
xchg
arpl
inc
pop
push
std
add
dec
cmp
inc
in
rol
xor
xor
lea
add
sti
(bad)
(bad)
sti
test
inc
push
je
and
push
pop
mov
cmp
ins
push
xchg
fdiv
out
clc
pop
xchg
push
or
push
test
adc
or
lods
int3
inc
sbb
test
jp
(bad)
jl
cld
aad
adc
push
add
call
andps
inc
ret
add
jne
(bad)
jg
sbb
int
in
pop
sbb
push
je
popf
ja
push
ret
push
add
xlat
or
jb
dec
nop
sub
lahf
cmp
xchg
and
and
test
aas
pop
pop
leave
xchg
daa
pop
xor
in
out
repz
shr
in
in
or
out
aam
(bad)
ret
or
xchg
dec
imul
addr16
fcom
test
add
push
inc
fld
call
jl
xchg
test
fild
or
cld
mov
adc
mov
jl
xor
sub
cmp
push
xor
jecxz
mov
dec
pcmpgtb
aad
dec
nop
rol
cdq
dec
cmp
or
stos
add
je
iret
push
lea
xchg
push
pushf
adc
jl
fmul
inc
gs
dec
xor
dec
inc
add
leave
fidiv
mov
cld
into
sbb
xchg
fs
adc
push
push
sbb
mov
pop
pusha
xchg
jo
fsub
push
and
sbb
xor
sbb
pop
cmps
fdivr
and
fiadd
pop
push
call
and
mov
mov
jbe
adc
and
(bad)
mov
loopne
or
xchg
pusha
mov
call
ret
mov
shl
push
push
rol
clc
call
xchg
mov
imul
cs
xor
xchg
sub
and
pop
jg
jle
cmp
(bad)
push
dec
je
test
jne
or
cmp
rcl
ds
or
ret
pop
sbb
mov
sub
cmp
pop
gs
mov
and
aaa
mov
fldz
sub
fld
push
cmps
add
pushf
call
jnp
pop
and
xchg
xor
bound
fadd
sbb
cs
mov
in
sub
mov
rcl
push
pop
das
dec
pop
pop
popf
inc
cmp
dec
fisub
ror
sbb
sbb
add
xchg
sbb
hlt
adc
add
clc
sbb
pushf
xchg
or
inc
mov
push
push
push
retf
or
jo
pop
sub
inc
or
mov
push
and
lea
shl
sub
fcom
iret
repnz
test
xor
adc
adc
test
push
mov
push
sbb
add
sub
js
jno
pop
aaa
bound
shl
xchg
or
sub
jg
inc
fstp
js
add
mov
cmp
dec
loop
or
fiadd
ret
inc
ret
fistp
movs
frstor
adc
cmp
dec
mov
adc
lds
adc
xchg
repz
and
jae
pusha
push
sub
or
xor
je
icebp
mov
mov
test
cmp
call
mov
dec
mov
dec
adc
fwait
mov
push
nop
inc
jmp
mov
add
sbb
fisttp
sub
je
pop
push
(bad)
sar
adc
sbb
sti
jl
adc
push
mov
das
add
inc
jg
pop
dec
retf
mov
add
jecxz
mov
dec
mov
push
int3
push
mov
mov
(bad)
arpl
stos
mov
push
aam
mov
sbb
jg
mov
jle
jmp
mov
jb
and
adc
sbb
push
adc
jmp
ds
fs
mov
sar
repz
pop
inc
or
rcr
not
adc
imul
dec
dec
and
cmp
loop
sbb
in
fcom
mul
mov
and
les
inc
mov
xor
inc
jl
xor
outs
call
mov
rcl
mov
cmp
cmp
lods
idiv
cli
cwde
adc
cli
je
jl
out
retf
mov
out
dec
lock
jne
sbb
cld
mov
xlat
cmp
sub
mov
(bad)
(bad)
mov
lods
mov
add
into
inc
stc
inc
stc
mov
pusha
mov
rcr
mov
and
adc
inc
sbb
and
dec
sbb
pop
or
les
adc
adc
mov
xchg
pop
iret
add
daa
and
mov
loopne
sti
or
fdivr
pop
stc
imul
pushf
mov
mov
in
push
repnz
inc
and
test
cmc
and
add
add
mov
push
mov
in
mov
mov
push
clc
sub
sti
jbe
or
lods
aad
fisubr
dec
daa
adc
ins
fwait
les
push
outs
push
or
inc
sub
jecxz
int
inc
and
adc
inc
inc
mov
movs
add
cli
pop
popf
hlt
xor
mov
push
popa
push
pop
dec
mov
and
jecxz
into
rcr
add
cmp
jge
mov
push
dec
fdiv
ins
loope
push
adc
(bad)
jns
ss
cmps
pop
dec
pushw
sbb
or
inc
push
jo
ror
pop
add
inc
nop
cmp
add
push
fsub
int3
ins
sbb
in
adc
cmps
adc
sar
fsubr
mov
dec
sbb
mov
in
jmp
dec
pop
mov
pop
mov
jmp
push
test
or
add
xor
push
cmps
les
add
xchg
in
adc
icebp
jle
push
call
pop
inc
scas
sub
pop
inc
cmp
cmp
inc
(bad)
mov
int3
push
dec
add
inc
pop
int3
adc
push
popa
les
mov
adc
shr
xor
ror
lds
pop
push
out
outs
add
sbb
or
or
(bad)
and
xchg
test
or
leave
and
inc
(bad)
adc
sbb
js
adc
jmp
and
and
data16
aam
adc
or
stc
mov
push
inc
adc
or
inc
adc
sub
push
fistp
mov
outs
push
outs
jle
xor
inc
push
fsubr
popa
pusha
dec
adc
push
out
mov
cmp
les
sbb
adc
and
adc
cmp
es
push
push
jl
(bad)
cmc
xor
sub
scas
dec
mov
addr16
cmp
adc
add
fst
add
mov
adc
jg
stos
mov
mov
add
mov
jne
(bad)
mov
add
sbb
inc
sub
cmp
outs
aad
mov
outs
shr
or
(bad)
out
xor
jno
dec
mov
jmp
sub
pop
push
data16
addr16
fild
inc
cmp
xchg
movs
jns
fstp
(bad)
je
xchg
and
mov
outs
jmp
xchg
adc
je
rcr
push
push
pop
or
and
cmp
mov
sbb
fild
in
mov
pop
and
sbb
add
jnp
or
cmc
add
invd
inc
jmp
mov
xor
out
mov
mov
nop
jge
stc
jo
inc
add
jne
lahf
or
mov
cmp
ins
(bad)
add
jg
and
push
xor
mov
sub
pop
mov
mov
mov
sbb
retf
je
or
inc
dec
dec
jge
scas
(bad)
jne
or
aaa
cmp
jo
add
push
dec
push
push
inc
inc
and
lods
lods
pavgw
push
cli
xor
push
(bad)
mov
daa
push
push
cmp
lock
adc
icebp
aad
ret
inc
and
nop
pop
jmp
lahf
push
lock
arpl
dec
adc
aas
jg
pop
mov
iret
bnd
aas
xlat
inc
cmp
mov
xchg
dec
sbb
cmps
inc
movs
mov
cmp
mov
or
mov
lock
mov
xchg
dec
or
rcl
dec
or
mov
adc
adc
mov
and
dec
jmp
mov
shr
scas
pop
ins
pusha
fs
mov
or
es
push
or
inc
bound
stos
xor
lock
(bad)
and
push
movs
push
movs
daa
jl
lods
push
ja
mov
nop
stos
and
adc
iret
push
pop
sbb
mov
pop
push
leave
call
fimul
jbe
test
dec
frstor
dec
xor
mov
lods
sbb
mov
lahf
js
mov
cmp
shr
outs
add
test
add
(bad)
stc
add
mov
stos
in
out
das
xchg
das
add
lock
jle
sbb
jae
mov
jae
add
fisub
(bad)
mov
xchg
adc
(bad)
sub
sub
int
sbb
push
call
add
add
outs
nop
cld
mov
jno
aam
ror
pop
sahf
push
cmp
aas
fmul
sub
les
in
dec
jne
int3
cmp
mov
(bad)
sub
inc
and
mov
sub
inc
cld
bound
jmp
adc
adc
cs
jmp
and
lds
test
sbb
scas
stos
sbb
imul
pop
out
fisttp
and
js
gs
imul
(bad)
mov
jns
pop
push
xchg
adc
je
out
sti
inc
imul
mov
push
or
or
jb
(bad)
lock
jp
or
fisubr
pop
je
pushf
popf
test
and
lds
adc
cmp
dec
adc
mov
aaa
pop
lea
mov
jp
jb
add
push
dec
mov
movntq
sub
inc
pop
adc
sub
lea
sahf
push
jg
(bad)
ins
add
repnz
mov
lock
push
pop
mov
inc
div
movs
push
pop
mov
xchg
int3
inc
inc
ins
and
inc
loope
scas
dec
push
jge
sti
ss
addr16
fdivr
shl
icebp
jge
and
add
or
sbb
ins
enter
push
dec
scas
sbb
and
dec
(bad)
mov
pop
dec
jns
sub
fwait
sar
xchg
popf
sbb
mov
inc
pop
and
jmp
add
mov
or
cld
sahf
or
dec
push
mov
pop
fld
push
mov
cmp
loopne
xor
xchg
xchg
xchg
xor
loop
idiv
inc
cmp
and
mov
inc
movs
mov
lods
rol
push
add
leave
mov
xor
inc
movs
cmp
and
sub
mov
shr
lahf
pop
mov
rol
xchg
shr
iret
push
sar
cs
push
aam
nop
adc
iret
pusha
ins
ss
mov
add
add
(bad)
fiadd
add
push
add
push
or
or
popa
leave
pop
and
push
or
int3
xor
sub
xor
sbb
mov
inc
rcr
movs
xor
mov
jle
jle
adc
inc
in
adc
out
and
iret
in
dec
ret
xor
jmp
inc
cmp
loope
xor
je
test
hlt
inc
xor
adc
pop
jo
pop
mov
cmp
push
stos
mov
ret
jl
or
je
and
push
pop
add
ja
cs
adc
iret
ins
cld
pmaxsw
and
mov
in
and
mov
pop
cli
mov
and
mov
mov
mov
cmovbe
jne
xor
inc
outs
adc
ror
cmp
sub
jnp
aas
je
xor
mov
dec
or
ja
mov
jb
cmp
adc
push
cli
cmp
mov
shr
dec
add
dec
add
mov
stos
iret
test
imul
pop
fimul
sbb
cli
js
stc
call
jne
add
push
jge
das
neg
mov
into
repnz
push
(bad)
and
push
inc
push
xchg
sbb
dec
mov
add
add
and
daa
xchg
add
int3
and
inc
(bad)
repnz
mov
xor
popf
fistp
dec
ins
pop
jbe
or
pop
ja
fist
cmp
inc
inc
jmp
sbb
icebp
jmp
push
mov
push
cmc
jae
mov
jl
nop
push
push
out
bound
retf
mov
je
mov
dec
(bad)
jnp
sub
sub
iret
fisub
retf
jl
int
cmp
mov
call
stos
and
icebp
test
jl
fnsave
xor
xor
cs
add
sub
cmp
pop
dec
or
lahf
fbstp
sub
mov
je
or
je
cmp
jg
je
data16
cmp
jg
push
mov
push
cmp
mov
push
push
das
out
cld
test
ins
dec
cmp
dec
sbb
add
inc
loopne
movs
not
jle
dec
jmp
mov
add
inc
cmp
jl
lea
lea
push
(bad)
mov
mov
not
adc
call
fcom
rol
int3
add
setb
neg
or
adc
fmul
push
les
cmp
mov
lea
jl
ret
push
loope
push
rcl
into
jns
mov
scas
mov
mov
xor
lock
std
je
cmp
jle
test
cld
push
sub
nop
aaa
mov
aaa
ror
pop
icebp
leave
cld
inc
jmp
(bad)
adc
mov
push
fmul
adc
adc
mov
jecxz
or
retf
nop
dec
push
mov
cmc
inc
stc
cmp
xchg
add
hlt
pop
cwde
cmp
xchg
stos
popa
adc
int3
push
nop
push
adc
repnz
lock
jo
jae
mov
ret
jbe
xchg
(bad)
rcl
(bad)
pop
cmp
inc
lock
inc
add
xchg
pmuludq
(bad)
xchg
aam
and
mov
dec
je
call
dec
jb
loop
lds
les
aas
add
sub
sub
popa
mov
sbb
xor
scas
jmp
add
jmp
and
js
clc
add
lea
push
sub
push
clc
jg
mov
push
push
pop
jl
jle
lea
cmp
jle
imul
dec
lea
retf
hlt
lods
mov
and
in
pop
mov
jae
inc
(bad)
xor
pop
sub
stc
dec
or
dec
and
push
mov
fisttp
fwait
into
mov
adc
clc
jne
repz
sub
call
sbb
es
test
or
les
pusha
in
imul
shr
adc
stc
push
cmp
iret
mov
pop
and
inc
add
push
arpl
rol
dec
push
inc
jl
das
pop
test
adc
inc
add
inc
sbb
loopne
fild
in
xor
or
sub
push
adc
pop
mov
mov
mov
sub
fild
mov
clc
or
add
sbb
push
test
mov
cmp
sbb
call
lea
fidivr
or
add
je
add
pop
out
jne
or
int3
les
shr
pop
mov
add
pop
jmp
add
dec
push
push
jne
rol
mov
push
test
addr16
mov
ret
outs
pop
test
fld
nop
push
push
pop
mov
pop
push
loope
adc
mov
mov
cmp
fwait
add
or
or
sahf
add
adc
or
sub
ja
push
jo
lods
loopne
ficomp
mov
lock
cmp
sbb
push
cld
stos
push
sbb
add
sub
ins
push
add
dec
cmp
and
push
cmc
sahf
xchg
retf
mov
fdivr
int
mov
(bad)
adc
cdq
push
mov
icebp
imul
sbb
fdivrp
fmul
ins
sub
or
pop
mov
dec
sbb
pop
inc
xchg
push
xchg
adc
das
les
pop
adc
xor
push
mov
sbb
outs
sbb
adc
out
fistp
clc
sbb
aad
call
gs
loopne
add
push
push
dec
push
push
sub
mov
push
push
rcr
adc
jmp
inc
ret
inc
jmp
je
sti
pop
adc
cwde
dec
ret
pop
pop
add
and
clc
rol
and
sub
mov
(bad)
dec
ins
ficom
mov
test
pop
cmps
adc
sahf
je
addr16
sahf
mov
cmp
idiv
mov
xor
adc
ins
and
mov
pop
inc
cli
fs
add
mov
test
pop
std
or
mov
lods
mov
fcom
test
aad
mov
movs
mov
or
and
and
sbb
stos
ss
sar
sbb
mov
mov
add
cdq
and
adc
add
or
pop
mov
pusha
sti
repz
xor
cmp
xchg
push
or
mov
mov
fld
imul
fcom
mov
xor
or
test
adc
or
mov
rcr
dec
xchg
rol
push
call
jo
adc
mov
sbb
push
mov
ss
lahf
push
and
or
je
leave
leave
adc
sbb
sub
or
(bad)
or
mov
add
add
add
xor
(bad)
mov
dec
cmp
cmp
push
dec
inc
push
jno
outs
int3
gs
enter
jbe
mul
sub
mov
push
je
sbb
sub
lea
cli
js
adc
adc
enter
cmp
(bad)
jnp
dec
(bad)
cmp
xchg
add
xchg
(bad)
stc
outs
mov
cmc
add
int
jns
pop
sbb
loope
or
jle
add
adc
sbb
dec
mov
push
jp
aad
sbb
sub
xlat
and
in
pop
xlat
mov
xchg
sub
ret
rcl
or
mov
xor
inc
mov
not
or
lahf
fdivr
or
iret
xchg
sar
arpl
and
xchg
or
hlt
test
jle
add
jg
ficomp
sar
inc
adc
bound
fld
ret
and
sub
pop
mov
push
jle
pop
test
fnstsw
mov
pop
cmp
mov
rcl
jo
lds
sub
pop
mov
inc
fs
add
popa
fdivr
mov
jecxz
loopne
and
leave
test
loopne
sub
or
inc
cmp
ret
cmp
or
neg
sbb
jl
or
loope
lahf
test
push
push
push
call
sub
push
pop
sahf
or
cs
test
pop
push
cmp
mov
adc
xor
sbb
jmp
adc
cmp
imul
xchg
mov
adc
push
jp
not
int3
inc
mov
xchg
cmps
jmp
movs
adc
mov
lea
cs
ret
jnp
xchg
dec
add
data16
test
cmp
xchg
lahf
mul
pop
test
push
mov
or
dec
jne
es
and
movs
add
add
test
mov
mov
sub
add
xor
rcr
and
in
xchg
int3
retf
mov
cmp
loope
or
mov
in
sub
push
add
lahf
mov
and
sbb
push
scas
or
shr
push
out
lods
sbb
inc
push
sub
ins
je
test
adc
mov
dec
xchg
xor
pop
mov
sbb
add
enter
fmul
adc
hlt
mov
inc
lods
or
icebp
adc
jmp
sti
or
lahf
or
lahf
(bad)
dec
mov
lock
xor
clc
cmp
inc
not
(bad)
mov
sbb
xchg
das
dec
fbstp
cmp
mov
arpl
adc
cmp
and
mov
inc
xchg
lea
test
in
xor
sub
adc
mov
pop
pop
sub
outs
test
jg
es
add
nop
jecxz
rcr
cmp
lahf
fdiv
jo
fs
je
and
iret
pop
call
cmp
mov
xchg
ror
cmp
enter
cmp
ds
add
push
pcmpeqb
cmp
mov
sar
loope
or
or
xor
xor
push
ins
jmp
inc
stos
ja
push
pop
add
pop
loopne
mov
cmp
inc
movups
enter
out
mov
mov
call
adc
test
add
mov
mov
add
sbb
pop
and
js
mov
push
lea
dec
adc
mov
int
rcl
jl
and
fldcw
dec
lock
and
test
lock
mov
push
(bad)
out
jnp
mov
cwde
xchg
ret
cmp
ins
fadd
sub
mov
jo
dec
mov
pop
in
sti
jo
dec
dec
cmp
sahf
arpl
add
cmp
ins
loop
mov
loopne
cmp
mov
in
cmp
inc
int
sbb
xchg
cmp
clc
stos
sub
jo
add
mov
(bad)
cmp
add
nop
(bad)
cmc
pop
fdivr
push
jle
adc
jecxz
es
ret
loopne
aad
mov
push
sub
xor
sbb
push
inc
test
imul
cmp
cld
mov
or
enter
adc
mov
mov
inc
loope
test
je
push
push
push
mov
sti
push
imul
clc
push
push
push
push
cmovae
aaa
push
mov
xchg
and
cmp
jecxz
pop
xlat
inc
je
and
cmc
mov
pop
(bad)
cmp
dec
in
sub
jae
data16
sahf
inc
(bad)
push
push
js
mov
push
dec
or
lahf
dec
gs
jmp
ins
mov
push
inc
mov
loopne
sar
pop
sbb
repnz
pop
adc
pusha
xchg
sub
xchg
add
fcom
cmps
sbb
inc
push
adc
sub
ss
enter
jle
xor
leave
cmps
(bad)
je
sbb
xor
lods
fsubr
add
shl
in
sub
lods
mov
inc
rcl
jb
mov
lds
add
fisttp
js
dec
mov
mov
xor
jge
sbb
test
adc
mov
call
data16
lds
dec
sbb
nop
inc
iret
push
test
scas
arpl
mov
mov
xlat
push
sahf
data16
jns
inc
mov
jg
js
addr16
push
rol
mov
push
mov
or
jp
and
jp
xor
jne
or
addr16
test
bound
mov
sub
mov
and
and
pop
mov
or
cmps
mov
mov
jne
mov
push
iret
sbb
pop
dec
or
je
aas
push
dec
(bad)
sbb
fdiv
sub
pop
and
xor
je
clc
mov
movs
xor
jg
aad
jmp
push
push
daa
jle
xchg
pop
push
aad
pop
jne
mov
sub
movs
mov
sbb
xor
retf
mov
pop
xchg
or
stc
je
ja
mov
nop
scas
test
dec
(bad)
xor
call
jae
js
push
ja
sub
jge
sti
add
sbb
sbb
mov
or
jno
inc
inc
jge
push
call
call
xor
add
lods
sahf
pop
pop
stc
xchg
imul
xor
lods
add
je
fucomp
push
(bad)
js
mov
mov
inc
movups
and
add
cdq
ficom
outs
out
dec
retf
add
test
loopne
inc
cmp
mov
jecxz
sbb
cmp
gs
rcl
pop
(bad)
add
push
pop
icebp
push
dec
push
dec
mov
js
jl
sar
dec
push
inc
push
inc
mov
xor
jno
dec
sbb
mov
cli
iret
inc
add
mov
ffree
jecxz
add
test
xchg
inc
lea
cmps
adc
(bad)
sahf
or
ror
push
jg
ret
ficomp
inc
es
rol
jg
test
jbe
dec
data16
ror
mov
push
shl
fisttp
and
pop
call
xchg
lods
stos
in
inc
adc
or
push
push
sub
sub
mov
sub
push
inc
ret
mov
push
movs
dec
aad
add
pop
mov
sbb
sub
mov
mov
pop
(bad)
leave
enter
add
mov
inc
cmp
pop
call
inc
movs
cmp
jne
push
mov
loop
in
and
call
mov
xor
sbb
push
psllw
in
mov
mov
loope
std
xor
movs
retf
in
dec
add
aad
repz
mov
sub
inc
sub
shl
inc
jbe
adc
out
cmc
mov
ret
pushf
dec
sbb
idiv
fmul
inc
mov
pop
xor
xor
dec
xlat
adc
jmp
dec
xchg
jnp
add
cld
inc
ror
dec
mov
pop
push
imul
gs
mov
pop
pop
push
adc
js
fistp
adc
or
ret
mov
cmp
add
mov
mov
add
jne
call
lea
stos
adc
je
push
sbb
pop
mov
or
inc
and
mov
push
or
sbb
loope
enter
push
rcl
mov
or
inc
and
sbb
xor
dec
test
mov
sub
xchg
outs
sub
push
sbb
movs
cmp
mov
jns
fdivr
cmp
and
inc
iret
aas
in
push
cmps
mov
push
in
cmp
or
int
cmp
inc
ss
mov
mov
fstp
out
push
jge
sbb
lock
xor
out
dec
call
(bad)
std
iret
add
pop
pop
ret
pop
prefetchw
cmp
xchg
pop
imul
pop
cmp
adc
cmp
dec
std
sbb
add
push
xor
imul
inc
clc
mov
pop
out
je
lea
push
mov
pop
xor
retf
adc
enter
mov
fmul
mov
(bad)
dec
cmps
mov
jle
push
lea
gs
push
mov
out
pop
push
mov
test
push
jo
inc
inc
pop
stc
cmp
or
cmp
sar
mov
mov
push
sub
cwde
xor
ins
or
scas
repnz
or
inc
clc
jbe
lea
inc
or
and
cmp
lock
sub
jbe
sti
int3
test
cld
movs
jle
je
or
jg
mov
dec
or
and
loope
xchg
(bad)
mov
mov
cmp
xor
cli
mov
lock
fadd
sub
mov
ret
sbb
fcomip
add
aaa
cdq
push
push
mov
or
je
pmuludq
mov
lahf
sub
push
push
int3
jecxz
clc
(bad)
(bad)
rcl
push
into
int3
clc
or
jl
(bad)
dec
sub
int
dec
std
mov
push
push
push
push
push
xor
xor
cmp
push
shr
test
pop
add
in
jle
(bad)
jo
shr
add
dec
in
aaa
in
pop
cmps
shr
pop
or
pop
ja
mov
dec
cmp
out
ss
inc
or
mov
cmp
ret
jecxz
inc
pop
arpl
mov
dec
scas
ret
lock
lea
lea
loopne
xchg
ret
ja
adc
scas
and
xchg
les
ret
xor
stos
aas
cdq
xor
cmp
ret
es
dec
sbb
sub
xchg
bound
add
and
mov
xchg
and
inc
mov
push
adc
mov
in
(bad)
call
test
xor
cmp
mov
cmp
or
cmps
bnd
cmp
cmp
jbe
addr16
mov
adc
inc
xchg
cmps
jmp
rcr
sbb
je
or
fadd
cmps
or
push
bound
mov
mov
outs
jae
out
push
call
jo
pop
push
sbb
imul
dec
sbb
es
mov
das
pop
add
adc
popa
fistp
sbb
xor
sub
pop
pop
push
fcmovu
nop
rcr
xchg
fwait
mov
nop
lock
data16
mov
cmp
pop
and
sub
outs
cmp
xor
xor
cmp
dec
jmp
nop
xchg
scas
inc
jo
je
jl
outs
(bad)
div
test
rcr
nop
xchg
xchg
out
mov
pushf
mov
in
pop
mov
das
call
lahf
inc
mov
bound
repnz
test
test
mov
mov
jns
lods
sub
jne
mov
cmp
ret
mov
inc
outs
fstp
lock
sahf
mov
call
sbb
inc
clc
push
test
pop
jmp
adc
and
(bad)
fdiv
mov
neg
rcl
jno
sub
cmp
pop
and
adc
dec
ret
sbb
sbb
aad
xchg
ins
add
pushf
(bad)
and
fistp
jmp
adc
out
dec
clc
js
adc
cmp
loope
mov
ror
push
sahf
adc
jo
scas
sbb
and
dec
lock
push
push
fisubr
aas
fistp
xor
sub
in
dec
loop
call
push
xchg
push
je
aas
loopne
xchg
jg
je
or
xor
jmp
out
inc
push
jo
dec
dec
add
scas
test
sar
das
lea
movs
add
outs
pop
jne
push
push
mov
jp
into
push
(bad)
leave
fdiv
mov
gs
inc
arpl
mov
inc
jae
push
xor
inc
call
mov
jp
je
scas
lods
cmp
adc
mov
enter
push
add
adc
xchg
movs
xchg
xor
scas
adc
xor
cmc
and
sub
dec
pusha
inc
add
add
sbb
loope
sub
enter
fistp
fistp
inc
pop
or
inc
nop
pop
inc
in
adc
(bad)
xor
shl
xor
daa
push
or
imul
aaa
or
dec
cli
add
mov
or
or
sbb
fmul
push
cmp
mov
int
jne
cmp
push
sbb
hlt
add
push
and
retf
into
mov
mov
add
jo
pop
and
mov
or
cmc
ins
js
call
retf
(bad)
lods
sub
dec
mov
das
stos
mov
lea
push
sub
inc
loop
jae
pushf
sahf
cld
push
mov
jo
imul
out
mov
xor
push
(bad)
fnsave
xchg
add
push
push
inc
icebp
sub
dec
test
lea
sub
jl
inc
add
xor
adc
xor
pop
and
mov
add
data16
sbb
xchg
cmp
ins
sahf
sahf
jl
xchg
adc
or
adc
push
xor
sub
and
inc
loopne
or
add
inc
lock
dec
cmp
or
cld
cmp
dec
lods
test
adc
ret
and
cmp
bound
ficomp
call
and
push
or
mov
xchg
gs
cdq
push
or
xchg
mov
inc
cli
retf
or
or
and
push
push
addr16
inc
loopne
inc
cmp
mov
sbb
push
jo
mov
mov
add
pop
xchg
mov
mov
js
inc
fist
jp
scas
push
mov
xchg
or
ins
aam
add
cmp
cmp
jb
push
cli
pushf
ss
(bad)
in
push
cmp
dec
sbb
sbb
dec
push
out
push
repz
js
mov
cmp
xor
dec
sub
loopne
mov
jne
ins
add
pop
cmp
daa
fst
loopne
cmp
lock
dec
push
push
jns
mov
inc
inc
or
dec
fcom
retf
jnp
dec
fdiv
add
es
push
rcl
adc
loope
pop
scas
push
jle
mov
pop
push
jb
ins
aaa
adc
outs
inc
std
inc
shl
mov
test
adc
xlat
push
add
xor
cmp
push
jl
int
inc
jmp
dec
cwde
push
inc
stos
mov
(bad)
adc
mov
xchg
xchg
std
jbe
adc
adc
sbb
test
nop
lea
jnp
dec
enter
sbb
in
jnp
jmp
in
dec
cmp
sbb
jg
shr
cmp
add
and
fistp
(bad)
adc
push
add
xor
fst
adc
mov
adc
adc
sub
push
add
mov
pop
mov
adc
adc
(bad)
cmp
jmp
mov
lahf
push
push
mov
test
jb
das
mov
pushf
sub
add
xor
fs
mov
inc
sbb
sbb
repz
fcomp
pop
push
jb
xor
cmp
cld
retf
xor
push
aad
scas
inc
inc
dec
cld
mov
or
push
and
lock
adc
jge
xor
sub
push
xchg
or
clc
cld
scas
jo
fmul
aad
dec
cmps
cs
jo
xor
push
mov
adc
(bad)
and
adc
aad
xchg
sbb
scas
xchg
rep
add
cmp
sub
push
sub
fxch
mov
das
jo
sbb
ffree
jns
jmp
xchg
aas
sub
dec
sub
inc
arpl
adc
jmp
xor
cmp
outs
sbb
mov
push
pushf
xchg
push
mov
mov
cmp
ret
test
sbb
inc
adc
xor
pushf
je
xchg
(bad)
call
adc
cmp
lea
mov
mov
or
test
mov
inc
inc
push
jne
out
test
pop
cmp
int3
add
push
inc
repz
lds
mov
xchg
adc
mov
xor
mov
mul
push
xor
lods
xchg
or
jle
adc
je
sub
(bad)
push
test
daa
test
call
loope
js
mov
fisub
sbb
getsec
repnz
enter
or
sbb
arpl
mov
pushf
mov
push
aaa
dec
adc
imul
or
sbb
sub
icebp
retf
mov
dec
sbb
sahf
sub
int3
cmps
mov
mov
jno
push
inc
and
adc
data16
ins
or
dec
adc
adc
jle
add
and
aaa
jbe
jne
(bad)
jl
pop
jge
mov
push
clc
and
daa
dec
push
jne
(bad)
iret
data16
xor
add
bound
dec
mov
sub
xor
sub
adc
jmp
pop
inc
inc
add
push
(bad)
and
pusha
and
ins
addr16
movs
mov
test
cmps
rcl
sub
shl
add
push
push
fwait
cmp
fsubr
sbb
mov
sbb
pop
pop
fs
mov
fisttp
sahf
jmp
ror
cmp
add
jne
ins
mov
bound
mov
pop
push
cdq
int
(bad)
dec
pop
ret
lock
fcom
mov
dec
pop
inc
xor
fdivr
mov
test
arpl
out
or
jo
fdiv
je
jnp
or
push
test
stos
xor
and
popf
add
lods
aad
ror
fmul
mov
xor
mov
and
jb
addr16
xchg
jle
js
imul
push
cmp
dec
scas
push
dec
fld
jo
pop
ror
(bad)
and
pop
pop
add
adc
outs
(bad)
mov
cmps
adc
sub
ret
push
or
loopne
push
jns
jo
xchg
inc
xchg
push
adc
sub
test
inc
pop
cmps
sbb
push
jb
cmp
sub
imul
mov
push
cs
inc
aaa
lock
bound
lods
not
add
push
push
inc
add
pop
jbe
call
cmp
push
xchg
das
std
or
cmp
lock
cmc
in
xor
sbb
add
inc
add
mov
repz
loopne
cwde
mov
sub
inc
mov
rcl
jmp
mov
lods
sbb
mov
sbb
adc
mov
maxps
cmp
push
mov
paddsw
dec
shl
ret
pop
jl
cld
or
shr
and
pop
push
dec
inc
mov
or
lea
mov
in
test
popa
and
add
sbb
inc
fdivp
adc
repz
stos
sub
push
add
sar
dec
push
push
das
and
xor
push
lea
add
in
aaa
adc
cmp
mov
mov
popa
sbb
sbb
fimul
add
mov
loope
cmp
jae
adc
jo
enter
js
add
mov
fcomp
and
call
adc
or
sti
hlt
adc
jbe
(bad)
mov
not
push
jae
cmp
movs
push
movs
repz
dec
inc
xchg
inc
pop
mov
jl
sbb
shr
inc
cmps
inc
sahf
(bad)
jle
jle
dec
mov
or
push
add
test
aaa
ror
in
or
add
adc
lea
jp
jl
das
imul
xor
and
or
mov
fdivr
aaa
inc
jbe
xor
dec
xor
cmp
inc
push
cmps
push
les
push
je
cld
mov
mov
and
adc
mov
fs
and
or
add
mov
std
imul
rol
add
enter
(bad)
and
cmp
call
test
or
shl
sar
ins
cmp
jmp
add
adc
and
adc
fidivr
adc
push
mov
div
pop
retf
sti
mov
add
lea
into
or
repnz
mov
fst
fptan
in
and
out
loop
scas
(bad)
cmc
call
fisubr
fimul
sub
xchg
fidiv
aaa
sub
adc
inc
xor
div
jmp
xor
dec
leave
das
fcomp
test
mov
jmp
dec
fistp
enter
and
nop
imul
cwde
std
jae
outs
popa
pusha
(bad)
dec
pop
shl
mov
cmps
aas
adc
push
mov
push
ins
fnstsw
and
mov
mov
sti
daa
sbb
lods
sti
jbe
bound
fdivrp
add
out
sub
mov
ror
ja
repz
push
pop
pop
es
push
adc
mov
adc
stos
(bad)
mov
into
or
jg
mov
adc
(bad)
rol
fdivr
cmp
fistp
adc
add
cld
sbb
out
fcomp
out
gs
jle
and
sti
shl
cmp
sub
and
xor
ret
and
stc
add
cmps
in
dec
add
clc
mov
or
xor
add
loop
bnd
fild
dec
sub
aam
xor
jmp
inc
cmp
inc
xor
aaa
lea
rol
add
retf
xor
cs
jmp
adc
sub
and
ins
adc
shl
sub
das
add
or
in
ror
xor
add
xor
mov
inc
jmp
pusha
adc
push
rol
lock
(bad)
addr16
ins
scas
jnp
dec
mov
fcmove
xor
xchg
sub
out
bnd
mov
add
jle
sub
mov
pusha
push
jg
stos
xor
daa
mov
dec
and
aam
fimul
retf
mov
sub
sbb
pusha
or
stos
add
rcl
push
rcr
mov
sub
in
(bad)
stos
out
add
clc
jl
pop
out
push
ins
push
gs
lods
les
into
push
or
mov
pop
inc
and
hlt
push
pop
out
imul
jecxz
neg
inc
mov
fldcw
fimul
cmp
sahf
out
xchg
stos
psubusb
mov
imul
or
jg
out
pop
gs
int3
or
and
xor
jge
out
call
or
lahf
sbb
pop
test
test
stc
sbb
out
(bad)
out
fcomp
mov
xchg
aas
inc
repnz
cmp
iret
nop
cld
sbb
repnz
adc
rcl
sub
not
(bad)
(bad)
xor
add
(bad)
imul
or
enter
push
rcr
les
add
inc
cmp
cmp
es
inc
inc
add
mov
test
inc
aam
es
dec
cmp
outs
ret
mov
inc
cmp
out
or
push
js
jecxz
xchg
popa
adc
mov
fs
loopne
sub
sbb
adc
(bad)
xchg
and
pushf
xchg
hlt
xor
idiv
jl
jge
test
jae
inc
ror
and
add
outs
sub
in
xchg
pop
mov
nop
push
mov
inc
cld
add
mov
cmp
xor
mov
cmp
ror
inc
adc
lods
xchg
mov
sbb
mov
jl
loope
std
dec
mov
lea
cld
daa
xor
fiadd
loop
dec
and
adc
mov
cmp
inc
mov
or
adc
push
sub
xlat
jl
rol
fwait
loope
aas
outs
sub
push
push
mov
jmp
popf
scas
add
(bad)
mov
inc
add
jmp
je
in
es
ss
sub
mov
or
imul
adc
repnz
mov
sbb
xor
cmp
cmps
xchg
add
ins
pop
add
adc
push
sub
jns
sub
mov
and
imul
imul
pop
ror
push
inc
jecxz
jp
pop
fmul
cmp
push
sbb
shl
(bad)
mov
inc
inc
dec
inc
inc
xor
inc
ins
push
or
das
push
jb
or
les
fs
push
pop
add
sub
pop
or
loope
movs
dec
xchg
(bad)
push
cmp
dec
(bad)
sbb
mov
fmul
inc
push
push
out
push
stos
mov
or
add
inc
adc
popf
test
sub
js
push
add
pop
xchg
movs
rcr
movs
popa
mov
adc
imul
test
adc
push
dec
lods
mov
sar
cmps
lahf
sahf
mov
mov
aas
fs
push
(bad)
push
push
fdivr
fmul
sbb
or
adc
add
pushf
push
addr16
loop
sti
adc
or
mov
icebp
push
mov
sti
pop
test
or
rcl
mov
sub
mov
ror
push
fwait
cmps
mov
hlt
mov
inc
or
(bad)
mov
mov
inc
add
cld
ret
(bad)
dec
xchg
jg
cli
cmp
popa
push
inc
loopne
sar
push
push
enter
inc
xchg
add
xchg
aas
call
mov
xlat
mov
jb
add
jg
fwait
push
add
inc
loope
call
or
sbb
fsub
(bad)
sub
adc
xor
pop
or
inc
sub
pop
and
or
jmp
rcr
call
in
mov
mov
outs
add
push
sbb
out
in
inc
sbb
dec
dec
and
lock
xchg
imul
scas
mov
push
push
in
test
dec
push
imul
and
iret
pop
or
add
and
ins
or
add
into
int
bound
mov
or
xor
idiv
mov
stos
xor
adc
adc
adc
test
scas
push
mov
lods
or
ror
pop
mov
push
jle
dec
fimul
lgs
xlat
data16
inc
pop
jbe
outs
sbb
test
add
les
adc
test
js
jae
pop
ficom
dec
frstor
movs
jle
mov
xor
cmp
add
lock
in
call
or
mov
inc
hlt
rcl
int
int3
retf
retf
gs
enter
mov
mov
mov
iret
sbb
push
xor
mov
jge
cmp
retf
and
mov
add
(bad)
loopne
(bad)
sub
lahf
call
mov
leave
cli
and
cli
add
test
cmp
or
inc
rol
repz
ror
mov
and
add
add
jmp
ins
pop
test
mov
daa
push
or
ret
aas
push
jl
leave
in
pop
push
push
xor
out
cld
adc
jl
add
movs
xor
mov
or
adc
mov
movs
or
xor
dec
loop
mov
mov
push
add
aam
shl
cs
inc
sub
add
cmp
or
and
je
shl
(bad)
test
jbe
sub
call
inc
je
mov
aaa
ret
sbb
sbb
(bad)
and
xlat
jno
jecxz
inc
dec
imul
rcl
pop
jne
or
adc
scas
(bad)
loop
(bad)
xchg
test
push
inc
(bad)
adc
and
adc
lock
mov
call
ss
bound
pmuludq
xor
add
faddp
dec
add
mov
scas
callw
movs
cwde
shl
xor
dec
jne
xchg
int
(bad)
shl
div
cmc
mov
enter
and
jno
mov
pop
mov
in
ins
jecxz
and
sub
and
pop
sub
add
mov
ret
iret
movs
mov
xor
sbb
pop
outs
add
push
repnz
push
mov
pusha
pusha
add
in
jo
ds
adc
sbb
mov
sbb
mov
add
mov
pop
cmp
or
jle
sbb
pop
push
sub
jns
or
add
aaa
xor
icebp
call
or
pop
push
cmp
nop
out
inc
mov
dec
xchg
push
daa
inc
outs
or
push
jae
fcom
sub
hlt
je
mov
repz
push
jp
popa
call
add
or
pop
(bad)
call
jl
and
push
jle
fwait
cmp
xor
imul
pop
(bad)
pop
mov
mov
sbb
cpuid
imul
mov
or
hlt
scas
mov
pusha
fisub
hlt
pusha
out
sub
movs
cmp
cmp
xor
dec
imul
mov
adc
add
and
add
adc
dec
mov
push
std
std
fucomp
or
add
jmp
clc
sti
lods
cmp
mov
dec
imul
or
int3
mov
push
hlt
and
and
fidiv
xchg
inc
jne
adc
rcr
pop
jp
jp
neg
pop
frstor
sub
daa
(bad)
pop
inc
sbb
jmp
dec
pop
jl
dec
cld
je
mov
jmp
jno
add
clc
addr16
jne
add
popa
mov
ucomiss
popa
mov
loopne
fisttp
clc
jno
add
lea
leave
push
mov
mov
mov
inc
add
add
pusha
push
retf
dec
cmp
mov
mov
fdivr
rol
mov
inc
or
lods
push
in
mov
jb
pop
cs
mov
movs
js
jo
bnd
pop
adc
sbb
rcl
loopne
xor
inc
test
cmp
rcr
ror
mov
ins
add
or
fld
fcom
mov
sub
dec
mov
idiv
dec
lock
movs
xchg
pop
pop
pop
jmp
dec
push
xchg
xchg
cmp
mov
mov
ficomp
jb
and
leave
ret
test
ffree
mov
or
in
sbb
aad
fstp
std
pop
push
lea
daa
addr16
inc
hlt
jecxz
gs
inc
add
push
mov
xor
jne
arpl
jne
adc
(bad)
nop
shr
mov
cmp
cli
enter
fs
pop
sar
cld
dec
jb
mov
into
add
adc
sbb
push
inc
scas
stc
(bad)
test
jne
add
add
adc
or
fidivr
xlat
adc
xchg
add
jmp
(bad)
push
jne
sbb
mov
or
fwait
push
cmp
loopne
inc
cmp
movs
cmp
inc
loope
jo
mov
adc
or
cmp
ins
jl
pop
ja
and
cmp
lock
jmp
add
out
and
sub
push
add
inc
inc
inc
inc
lock
nop
and
ficom
je
jmp
jbe
mov
mov
shr
cmp
inc
and
gs
iret
sbb
add
sub
and
jb
xchg
xor
xchg
push
mov
xor
test
(bad)
jmp
mov
sbb
mov
pop
rol
sub
inc
outs
outs
add
into
enter
add
sub
jmp
jo
mov
push
or
adc
jp
test
ret
push
je
shl
sub
cli
jbe
cmp
clc
je
pop
pop
push
push
mov
and
icebp
ja
add
pop
push
and
mov
inc
movs
mov
mov
test
rol
push
pop
fcmovbe
fsubr
rcl
push
jmp
ja
push
ins
mov
sbb
push
jmp
push
xor
push
mov
push
push
repnz
adc
stc
cmp
rcl
adc
shl
jnp
mov
pop
ret
adc
xlat
inc
cli
sub
add
in
push
ins
mov
lock
sbb
rol
out
rcl
push
in
cmp
or
in
cmp
jb
rcr
push
or
fild
enter
sbb
inc
fild
pop
inc
jne
push
mov
mov
cmp
shrd
adc
or
add
pop
pop
jo
mov
jae
adc
cmp
gs
push
mov
xchg
retf
inc
mov
mov
loope
push
mov
dec
inc
(bad)
or
jle
mov
js
(bad)
daa
imul
fsubr
in
loopne
out
add
mov
div
xor
in
sbb
ss
jp
(bad)
jbe
sub
xlat
test
in
bound
cmp
je
cmps
fmul
adc
mov
lahf
push
pop
jmp
push
inc
cld
dec
sbb
out
jge
sub
or
or
xlat
aas
movs
call
push
push
aad
and
sbb
pop
jbe
and
sbb
pusha
pusha
(bad)
retf
retf
sbb
add
xchg
in
shr
sbb
push
or
hlt
mov
shl
xor
je
ficomp
js
movs
lock
push
mov
inc
imul
daa
fisubr
inc
xor
xchg
adc
hlt
inc
and
je
add
dec
or
cmp
out
cmp
cmp
xor
push
addr16
lock
inc
adc
mov
add
mov
or
mov
test
fs
mov
jb
scas
pop
or
add
xchg
cmovs
test
movs
xchg
not
jbe
mov
loop
ss
dec
add
sub
movs
es
push
nop
movs
cmp
jb
and
add
xor
in
out
push
sahf
push
push
dec
push
and
mov
dec
mov
dec
mov
or
scas
adc
jl
int3
cmps
push
push
pop
pusha
mov
add
inc
add
add
retf
or
push
mov
cld
lahf
out
mov
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
dec
je
cmp
or
(bad)
lock
fst
jmp
clc
loope
or
and
leave
ret
nop
inc
pop
popa
mov
pop
sti
and
ret
push
and
push
lea
jl
adc
or
into
mov
out
jo
neg
adc
and
daa
stc
sub
or
mov
test
rcr
add
mov
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
jmp
mov
or
push
xor
pop
lahf
out
inc
dec
push
addr16
sahf
out
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
aaa
icebp
xchg
xor
push
add
pop
and
inc
(bad)
ja
pop
les
into
mov
in
dec
or
cwde
dec
fild
mov
mov
push
inc
loope
and
and
xor
mov
sbb
mov
add
sub
je
xor
loop
or
sbb
ds
xor
in
cmp
dec
add
jns
xchg
add
add
adc
xlat
add
add
dec
add
mov
jno
je
call
fld
add
sbb
mov
adc
add
jae
sub
or
or
or
pop
enter
or
pop
jns
cmp
or
loop
cmp
or
nop
ja
mov
cwde
in
jns
push
push
ja
and
pusha
nop
push
adc
in
lods
xor
pop
adc
fwait
sub
cmp
retf
add
popa
adc
adc
add
adc
add
inc
fisub
cdq
and
enter
adc
and
push
push
push
pop
call
sbb
call
sbb
call
pop
enter
push
sbb
push
push
and
jb
xor
out
sbb
ret
jns
jge
sbb
inc
sahf
push
push
inc
push
pop
clc
dec
in
jne
add
add
sub
cmp
jae
dec
out
mov
xchg
add
mov
sahf
mov
jmp
and
cmp
je
call
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
sub
sbb
dec
add
pop
enter
je
call
nop
test
sub
jmp
jmp
jmp
(bad)
push
mov
call
xchg
add
pop
in
inc
in
sahf
sbb
inc
sahf
out
out
jge
int
or
sbb
pop
lock
enter
icebp
xor
cmp
pslld
pop
enter
repz
push
jns
leave
std
hlt
hlt
shl
pop
in
cdq
or
fwait
mov
cmp
push
inc
push
nop
neg
cmp
movs
test
clc
clc
fmulp
add
clc
cdq
adc
inc
stc
in
cmp
lock
cli
cli
nop
adc
inc
outs
sub
je
cld
in
pop
repnz
jne
std
xor
nop
out
cmps
sbb
(bad)
adc
inc
cmp
add
imul
sub
leave
test
ror
adc
shl
and
es
jecxz
sbb
out
repnz
sti
in
in
xchg
stos
lods
mov
inc
mov
stc
daa
xchg
sti
out
fsub
add
outs
and
mov
sti
inc
add
pop
sub
sbb
cs
jmp
jns
jne
(bad)
in
add
and
test
out
out
cdq
adc
enter
add
mov
das
cli
push
cli
nop
cmps
jb
sbb
scas
xchg
pop
ins
repz
sar
push
sub
cmp
mov
pop
stc
neg
scas
dec
div
pop
fwait
xor
jno
clc
add
stc
xchg
xchg
mov
clc
rol
sub
sti
sti
cdq
push
nop
aaa
jb
cld
inc
cld
or
inc
pusha
mov
sbb
mov
je
add
pusha
loop
cs
(bad)
mul
pop
dec
pop
and
shl
scas
test
out
push
fsub
out
(bad)
out
and
mov
not
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcr
jno
les
and
and
and
neg
(bad)
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
cmps
xlat
bound
retf
jge
rol
sti
lahf
xchg
mov
adc
sub
cmc
pop
call
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmps
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rcl
inc
sbb
icebp
repnz
(bad)
div
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fst
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
mov
push
adc
sub
out
pop
sbb
rol
in
enter
cmovno
push
add
mov
iret
add
stos
add
xor
sub
or
adc
adc
or
mov
add
jmp
(bad)
jns
fst
sbb
rcr
scas
or
(bad)
xor
xchg
inc
push
fs
cmp
data16
leave
cmp
cmp
inc
pop
cmp
fwait
iret
repz
addr16
aaa
mov
cmp
shr
cmp
daa
dec
int
mov
lods
xor
sbb
std
xor
outs
jne
out
out
call
js
adc
je
imul
pop
add
push
cmp
cmp
add
cmp
jb
inc
push
fld
sub
mov
je
add
mov
shl
add
or
fnstcw
nop
je
rep
mov
dec
jmp
mov
adc
or
xor
(bad)
sar
mov
and
pop
xor
icebp
jge
pop
inc
inc
je
dec
jne
xor
dec
and
(bad)
push
xchg
xor
shl
or
shr
loop
leave
xor
mov
mov
or
pop
jl
add
fsubr
jg
push
shl
jne
mov
or
or
add
jmp
pushf
cmp
adc
ja
lock
sub
and
add
adc
cmp
jb
iret
sub
or
or
push
sub
test
sbb
ficomp
xor
pop
sti
adc
inc
loop
xor
push
mov
mov
cmp
neg
cli
dec
mov
sbb
(bad)
in
lods
movs
sub
sub
fmul
and
cli
stc
inc
rol
lahf
lahf
ror
inc
(bad)
jb
(bad)
dec
js
test
pinsrw
push
adc
dec
cmp
dec
dec
add
jne
cmp
scas
adc
jg
jl
or
loope
pop
jmp
push
(bad)
adc
adc
xor
sbb
push
pop
(bad)
das
inc
mov
jmp
jae
add
(bad)
je
sbb
mov
mov
jle
cdq
inc
call
mov
pop
sti
sbb
mov
sub
stos
and
mov
(bad)
cmps
inc
and
ins
mov
xor
and
add
scas
push
cmps
sub
pop
add
jge
push
sub
push
call
dec
retf
adc
mov
jne
cwde
jmp
and
adc
inc
or
iret
and
push
je
cmp
js
adc
ins
adc
mov
cmps
lea
jge
js
aas
adc
mov
xchg
adc
xchg
xor
jmp
loopne
sbb
or
push
idiv
repz
mov
xor
and
xchg
mov
and
push
ror
ret
push
stos
test
js
lods
cmp
sub
dec
aas
or
xor
(bad)
cmp
lock
mov
and
pop
mov
outs
or
and
retf
fstp
ja
push
inc
xor
aas
sbb
ret
adc
div
dec
mov
imul
cmp
inc
or
aaa
adc
adc
sub
fdiv
shl
movntps
push
shr
fisubr
dec
fs
outs
sbb
jo
add
test
jle
clc
int3
shl
push
pop
mov
push
and
icebp
test
test
pop
mov
test
mov
or
adc
fisubr
fisttp
sbb
jle
sahf
cli
dec
push
ds
jae
mov
int3
adc
mov
(bad)
cmp
jb
les
sahf
pop
inc
push
lock
iret
loop
inc
je
sar
push
lea
mul
mov
daa
sbb
push
pop
loopne
add
xor
adc
mov
scas
push
xchg
push
inc
dec
mov
sbb
push
pop
jg
shr
jp
mov
push
adc
mov
bound
cmp
shl
daa
test
cmp
rol
sub
ds
push
adc
daa
inc
das
pop
pop
dec
movs
and
ins
cmp
in
jne
dec
pop
out
test
shl
adc
nop
jl
push
cmc
mov
loopne
xchg
aaa
sub
loop
adc
and
sbb
push
loopne
cmp
ret
lods
and
xor
inc
adc
push
push
jbe
push
mov
jmp
fimul
(bad)
cmp
pop
sub
inc
lods
mov
fsub
pop
fsubr
jne
call
add
in
cmps
ja
and
xor
mov
or
ret
push
dec
daa
and
leave
push
out
arpl
loope
adc
cmp
je
mov
add
test
xchg
mov
les
xchg
aas
push
inc
(bad)
jg
mov
add
xor
xor
jp
add
adc
je
mov
jb
test
mov
push
mov
push
je
jmp
and
out
ret
adc
jecxz
jb
std
cld
pop
sub
and
or
outs
(bad)
inc
rol
pop
and
iret
inc
and
push
add
sti
jns
jmp
or
jmp
std
jmp
add
sub
pop
or
sbb
mov
mov
jle
sub
jmp
in
pop
icebp
sbb
loope
xor
mov
ret
fist
paddusw
jo
data16
imul
sub
addps
cmp
pop
dec
jne
ins
inc
inc
add
popf
enter
pop
dec
lahf
int
hlt
arpl
cmps
jne
mov
dec
jmp
adc
popf
adc
(bad)
psubusw
ss
test
pop
cmps
pop
jmp
repz
mov
clc
add
fcomp
clc
or
adc
pop
fiadd
add
loop
sub
in
or
data16
inc
push
or
push
cwde
push
add
add
shl
sub
pop
mov
jne
cmp
jne
and
xchg
mov
or
sbb
sbb
fdivr
push
add
jne
sub
daa
shr
jmp
dec
or
aam
pusha
(bad)
ja
adc
push
std
and
fsub
sub
push
popa
push
rol
stos
dec
call
mov
jmp
cmp
inc
mov
xor
(bad)
retf
mov
mov
fwait
das
je
sub
xor
push
pop
sbb
jle
jle
out
neg
mov
sub
je
mov
repnz
inc
call
clc
cmp
jbe
fwait
and
hlt
hlt
iret
jmp
push
jne
adc
fcom
adc
cdq
push
pop
ds
jb
jl
pop
int3
jge
push
retf
in
and
jne
je
mov
sub
lock
mov
repz
cmp
jbe
push
push
mov
repnz
inc
push
xchg
dec
nop
icebp
and
nop
loopne
shr
je
jbe
pop
sbb
jbe
and
xchg
inc
inc
and
cmp
adc
push
pop
push
add
push
inc
mov
jne
push
mov
xchg
jmp
push
xchg
out
(bad)
and
stos
mov
sbb
fstp
leave
mov
sbb
fadd
dec
adc
adc
loop
xor
bnd
mov
push
fwait
ds
add
add
mov
(bad)
pop
adc
dec
dec
jle
je
das
loop
adc
dec
xor
or
or
clc
stc
or
js
lods
sbb
dec
sbb
xor
enter
mov
xchg
sar
ret
jne
adc
push
fistp
pusha
sub
pop
add
enter
inc
loope
scas
enter
es
lods
inc
pop
in
adc
push
fild
outs
fsubr
mov
cs
push
push
and
adc
movs
retf
mov
adc
scas
inc
cmc
xor
nop
mov
pushf
repz
sub
(bad)
pop
cmp
sbb
cmc
lahf
cmp
push
push
push
cmp
and
in
sub
imul
sbb
ja
adc
inc
adc
add
sub
or
sub
sbb
test
cmp
jne
or
jns
cmps
fstp
popa
adc
call
jne
sub
mov
xchg
mov
add
jne
ror
sbb
loopne
imul
xchg
test
mov
shl
push
cmps
bnd
sub
mov
add
movs
mov
dec
mov
bound
cli
sub
mov
mov
lahf
call
lea
(bad)
and
inc
mov
rcr
push
cmp
cmp
int
dec
mov
push
cmp
jne
(bad)
es
adc
(bad)
jne
(bad)
jp
test
push
cmp
push
cmp
jmp
jns
fidivr
sbb
(bad)
jmp
std
in
in
out
std
jmp
cld
cld
jmp
fucomi
pmaxub
adc
adc
inc
inc
dec
jne
ret
jl
shl
push
enter
dec
add
out
push
mov
dec
pmulhuw
pop
lds
inc
and
and
and
clc
in
and
cld
push
mov
jmp
add
pop
retf
in
imul
cmp
mov
jmp
mov
cmp
inc
push
leave
and
adc
push
mov
popf
and
and
adc
scas
aaa
mov
inc
iret
fld
jmp
and
addr16
push
das
add
into
push
jne
mov
jne
jmp
pop
sbb
ins
and
scas
std
pop
test
jns
dec
cld
inc
jmp
test
je
test
rcl
rcl
and
sbb
mov
push
sahf
pop
aad
(bad)
mov
add
adc
pop
bound
in
inc
mov
inc
lods
or
rol
dec
push
push
or
adc
inc
pop
dec
inc
and
add
inc
or
call
inc
pushf
dec
mov
jmp
adc
fbstp
enter
retf
push
add
inc
fisubr
xor
cmps
jge
iret
jmp
mov
mov
jecxz
test
jp
mov
cmps
ds
adc
ins
inc
sar
imul
call
hlt
mov
je
sbb
cwde
loop
xchg
sbb
cmp
sbb
cmc
inc
pop
and
and
(bad)
test
sub
mov
jb
mov
or
aam
rcr
pop
sub
ja
lock
add
test
fild
push
jmp
cmp
jb
(bad)
aaa
jb
or
pusha
jge
sub
pop
clc
jb
or
ret
and
sub
jge
(bad)
(bad)
jecxz
popa
push
iret
fidivr
fnstcw
push
outs
hlt
jmp
sbb
mov
fstp
push
sub
mov
shl
js
jg
add
ins
mov
pushw
or
inc
aam
mov
je
(bad)
mov
cmps
jmp
sar
push
xchg
int3
cmp
xchg
into
inc
or
and
push
mov
push
sbb
jae
jp
pushf
test
loope
sbb
or
dec
aas
test
or
jmp
mul
imul
fs
lods
push
push
fcom
mov
push
pop
add
adc
jmp
cmp
or
adc
dec
pandn
dec
in
xor
clts
mov
push
inc
je
xchg
or
inc
push
add
test
or
aad
sbb
pusha
inc
xor
dec
clc
mov
inc
pusha
inc
add
iret
mov
or
div
add
jbe
cmp
or
push
jmp
inc
mov
retf
xchg
adc
lock
cmp
nop
hlt
jmp
sbb
ja
push
das
add
ds
loopne
add
adc
inc
cmps
fwait
jle
loopne
loop
cld
and
jb
add
mov
sar
cmp
jbe
lods
inc
or
xor
or
repz
movs
fisub
adc
pushf
or
fstp
iret
dec
ja
cmp
sar
fcomip
dec
dec
mov
xchg
jmp
test
inc
mov
fld
inc
xor
test
jmp
hlt
fiadd
push
adc
add
sub
call
adc
dec
imul
(bad)
pop
inc
push
pop
add
dec
push
add
mov
adc
and
jmp
lods
rcl
stc
aaa
or
adc
int
xor
jne
sbb
sbb
and
dec
jae
and
xor
inc
aas
dec
dec
jge
adc
inc
mov
sar
cmp
pop
addr16
fcom
push
adc
and
loopne
shl
inc
push
jne
push
jns
inc
in
add
or
adc
cli
ret
lea
loope
add
or
in
inc
and
jne
push
sbb
push
or
stc
sahf
loopne
mov
and
inc
and
add
cmp
jo
mov
adc
cmp
push
and
test
fstp
movs
clc
sbb
dec
loopne
xchg
ror
push
push
sbb
push
daa
sbb
push
or
push
sbb
pop
and
inc
xlat
mov
fs
push
or
pusha
jno
xor
push
xor
mov
pushf
js
push
add
int3
and
sub
or
inc
push
sub
pop
repz
jecxz
mov
jne
add
loope
sub
dec
outs
in
or
or
xchg
or
pop
pop
add
pop
pop
add
add
pop
pop
pop
call
pop
pop
or
pop
shl
pop
pusha
and
call
pusha
pusha
sbb
mov
jae
or
popa
popa
xor
shl
popa
popa
popa
popa
imul
popa
push
or
leave
lahf
int
add
adc
call
pop
jne
out
add
out
ja
add
xchg
pusha
jne
sti
retf
mov
push
push
push
ror
pop
or
or
ss
xor
call
dec
stos
sbb
in
mov
mov
jae
fsubr
add
repz
and
sbb
mov
jmp
xor
(bad)
adc
push
mov
or
mov
inc
fild
or
sbb
sub
push
dec
and
sbb
add
fisttp
cmp
lds
inc
or
jl
pop
add
retf
sahf
push
sub
add
je
cwd
add
sub
jp
add
add
push
push
add
adc
stos
push
push
les
fisubr
lods
fdivr
and
mov
sub
je
dec
sbb
xchg
dec
jp
pop
test
jmp
test
jmp
cmp
je
inc
adc
adc
adc
xor
jae
sbb
cld
and
push
sbb
cmps
jo
mov
xchg
adc
iret
jne
sub
mov
jo
daa
mov
fld
mov
(bad)
cs
dec
dec
scas
(bad)
or
or
push
mov
sbb
pop
and
iret
int3
ror
sti
xor
or
cld
shl
je
pusha
call
push
sbb
jbe
push
inc
inc
bound
(bad)
pop
outs
int
push
ins
mov
imul
cmp
xlat
jne
push
pusha
fcomp
jne
jne
sub
cdq
xchg
ins
sbb
mov
cmp
shr
dec
into
fsub
scas
jg
ja
test
sub
sar
lea
rol
lea
mov
add
push
movzx
movsx
and
(bad)
sar
cmp
push
add
pop
movs
test
add
cmp
dec
or
mov
and
or
adc
daa
sub
mov
call
or
loop
and
mov
in
push
ins
and
cmc
adc
jge
pop
sbb
rcr
je
fs
cwde
rol
and
repz
jl
ds
xor
push
mov
fwait
and
sub
ror
sbb
les
sar
jecxz
jl
cmp
loope
xor
add
bound
push
rol
out
pop
add
pop
test
aam
add
in
push
mov
lods
jne
or
mov
dec
fist
out
pop
mov
sub
test
cli
dec
jne
les
fmul
xor
imul
test
fs
mov
sub
xor
je
loopne
das
jo
es
and
rcr
xchg
adc
cmp
popf
push
loop
lods
or
push
fwait
or
and
fiadd
test
xor
jl
sub
ret
adc
in
mov
movd
mov
scas
rcr
and
add
out
sub
imul
pop
jmp
test
sub
sub
jge
and
and
in
sbb
xor
cmp
push
xchg
adc
sar
movs
sub
jle
aam
pop
sar
cmp
fisttp
mov
inc
xchg
push
(bad)
shr
push
shr
rol
mov
test
inc
mov
sar
fdivr
das
cmp
jne
cmc
pop
push
stos
push
dec
cld
mov
mov
adc
add
jne
or
sbb
ds
jmp
in
lds
loopne
cli
popf
push
push
das
add
mov
dec
pop
ins
or
dec
xor
add
aam
jb
call
push
imul
pop
add
pop
mov
fs
daa
popa
xor
cmp
test
add
push
mov
inc
clc
add
shl
lea
ins
dec
sub
or
popa
push
push
push
pop
retf
add
push
in
push
test
jnp
in
dec
ins
mov
lods
movzx
mov
les
inc
ins
pop
cld
push
push
popf
xor
jnp
push
push
jae
jmp
cld
or
cmp
in
or
mov
xchg
push
fdivr
(bad)
push
mov
and
cmp
jne
fld
pop
pop
jp
mov
jl
je
jecxz
ror
xchg
push
jb
add
add
cmp
add
pop
ins
and
sub
jmp
sub
dec
fldz
fadd
rol
lods
inc
jp
loopne
mov
shl
add
clc
js
cmps
adc
sub
fidivr
adc
dec
(bad)
(bad)
xchg
(bad)
dec
in
repz
push
jg
cmp
jbe
pop
or
sub
add
add
cmc
pop
xchg
shr
test
pusha
inc
call
pop
sub
inc
inc
call
jge
mov
inc
adc
push
lea
add
lods
ret
cmp
push
mov
ret
sub
outs
cld
mov
or
icebp
inc
(bad)
jmp
je
mov
rol
movs
adc
leave
(bad)
add
test
pop
mov
cmp
jae
pop
cmp
jne
test
add
inc
cmp
jb
cmp
push
dec
hlt
movs
sub
inc
sub
pop
jmp
sbb
loopne
mov
(bad)
std
pop
and
add
sar
aam
sbb
jmp
test
xor
and
or
pushf
sub
and
mov
enter
mov
or
bound
shl
rcl
pop
neg
jmp
arpl
imul
jge
xor
ja
call
sbb
test
adc
inc
sbb
jmp
je
push
jbe
movs
es
mov
push
rcl
push
jbe
or
mov
xchg
xor
xchg
stos
or
test
push
lods
xor
push
inc
jnp
push
xlat
push
push
iret
or
inc
push
xor
stc
xor
int
scas
sbb
push
pop
pop
leave
sub
pop
in
dec
retf
and
sbb
sbb
adc
pop
jecxz
lock
push
inc
pop
inc
lea
fwait
pushf
sub
data16
fmul
nop
or
lea
add
mov
shl
cmp
arpl
imul
sbb
push
push
shl
sbb
cld
cmp
jl
jbe
mov
add
sub
push
ds
adc
mov
adc
mov
add
mov
rol
xchg
fisubr
pop
aam
cdq
sbb
push
hlt
jmp
cld
jge
(bad)
mov
popf
rcr
in
mov
mov
ret
xor
or
je
sbb
test
mov
mov
inc
jl
push
pop
pop
lea
ret
add
fiadd
jl
and
out
sbb
in
or
addr16
pop
add
mov
jl
adc
mov
pop
push
push
arpl
pushf
leave
cmp
jg
hlt
imul
xlat
test
out
jg
mov
cmp
das
jl
xor
clc
aas
jo
dec
or
pop
jmp
add
push
push
adc
and
jge
mul
jne
add
mov
push
sbb
jp
arpl
ins
pop
cmp
pop
push
lds
test
push
and
push
jl
sbb
jge
test
adc
jge
addr16
ins
lods
jbe
pop
pop
jge
xchg
mov
adc
leave
loope
outs
push
adc
and
clc
jmp
adc
inc
add
fnstsw
fwait
sahf
jp
fstp
(bad)
adc
add
clc
jbe
mov
inc
dec
push
pop
dec
mov
adc
scas
fs
push
push
inc
pop
add
stos
ret
or
sub
imul
add
jmp
imul
wbinvd
mov
retf
push
jl
jg
xchg
pcmpgtd
(bad)
jne
ins
bound
mov
adc
add
and
adc
cmp
sub
cli
fidivr
dec
add
mov
jl
clc
inc
and
push
cdq
sub
xchg
sbb
test
inc
cwde
jge
mov
std
mov
daa
inc
into
jne
dec
rol
adc
jle
cmp
mov
xor
sub
(bad)
adc
sbb
push
imul
stc
ins
mov
adc
nop
dec
movs
and
jnp
stc
add
je
push
loope
mov
add
test
fisttp
mov
clc
sub
ret
fst
jmp
sub
fiadd
outs
push
pop
cmp
add
jl
adc
js
jge
cmp
mov
jbe
(bad)
aaa
adc
fs
add
add
sub
fisub
addr16
sub
sbb
xchg
inc
cmps
or
or
xor
imul
xchg
shr
sub
leave
jbe
adc
pusha
cli
cdq
pop
idiv
add
mov
cmc
jl
out
cmp
int3
cld
lea
dec
push
push
shr
and
dec
ins
int3
or
cmp
pop
push
mov
sbb
adc
mov
adc
imul
adc
sbb
adc
xor
mov
and
and
push
(bad)
mov
test
aas
adc
fdiv
(bad)
jo
push
and
or
sbb
sti
dec
dec
je
dec
sub
and
add
test
gs
push
not
pop
div
fcom
jae
out
(bad)
je
cmp
aaa
jmp
in
loopne
daa
sbb
and
mov
sub
call
stos
nop
push
fnsave
jnp
movs
push
dec
mov
pop
push
mov
pop
or
jecxz
pop
les
pop
mov
fdivr
rol
mov
sbb
test
mov
sbb
cmp
dec
jbe
xor
cmp
ret
xchg
add
fild
clc
stos
mov
or
gs
fidiv
jl
xchg
jle
mov
lahf
dec
sar
adc
mov
pop
push
adc
fsub
dec
or
stc
push
adc
and
in
push
dec
mov
mov
pop
les
mov
enter
or
or
push
mov
push
mov
jb
add
sub
or
xor
dec
loop
ins
gs
cmp
ins
inc
dec
xchg
jl
adc
fdiv
push
and
adc
out
(bad)
shl
add
adc
and
data16
dec
sub
add
inc
jp
mov
or
sbb
loopne
adc
inc
push
shl
push
je
push
push
iret
retf
ins
mov
mov
or
sbb
push
add
test
fsub
or
add
popa
jno
or
add
add
test
shl
sbb
pop
popa
hlt
mov
push
pop
jno
jbe
mov
loopne
movs
xchg
jle
sbb
pop
nop
test
je
add
adc
inc
cdq
add
pop
lock
loopne
adc
sub
dec
loope
sub
mov
pop
or
push
jecxz
mov
push
or
(bad)
movs
adc
pop
push
xor
call
cmp
into
enter
inc
add
add
xchg
shl
lea
stos
add
ja
push
pop
sub
mov
adc
jne
lea
repz
xchg
or
icebp
push
in
fsub
or
lds
sub
xchg
mov
adc
loope
out
mov
mov
test
mov
not
and
push
lea
dec
aaa
enter
ja
sub
inc
xchg
inc
push
or
adc
inc
mov
inc
(bad)
fcom
jbe
ja
mov
fdivr
ficom
push
push
mov
add
add
imul
(bad)
push
cmp
sbb
xchg
inc
inc
ficom
add
push
fndisi(8087
and
mov
test
push
or
cmp
mov
adc
xchg
pop
jmp
mov
aad
jmp
mov
test
mov
jne
sub
mov
cmp
and
sti
sbb
retf
add
jmp
cmp
push
outs
inc
mov
jmp
cmp
jb
or
pop
xor
pop
fild
push
jo
push
mov
pop
inc
jo
sbb
pushf
ja
movs
dec
lods
push
(bad)
ret
inc
or
rol
jmp
push
sbb
add
jno
mov
dec
mov
mov
push
cld
shl
adc
(bad)
imul
mov
rcl
jecxz
or
ror
test
add
jne
mov
in
inc
and
cmp
std
jne
pop
sbb
xor
jmp
sub
lock
jmp
movs
inc
adc
inc
xchg
push
pop
lods
or
cmp
sbb
push
pop
pusha
ins
int
cmp
pop
cmps
nop
xchg
pusha
mov
cmp
or
in
push
mov
fs
mov
cmp
and
call
adc
lea
push
inc
rol
fistp
jae
cmp
jbe
out
movs
iret
lahf
cmp
jne
mov
cmp
or
inc
pop
leave
inc
js
cli
stc
bound
leave
xor
xchg
sbb
lds
xchg
jg
fcomp
sub
add
jmp
loopne
sub
cmp
call
out
inc
inc
add
mov
shr
add
adc
xor
(bad)
xor
inc
cmp
mov
mov
mov
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
test
ds
sub
add
jbe
sbb
jle
out
ds
sbb
jo
mov
inc
dec
jne
rol
lods
shr
movs
mov
test
mov
rcl
test
xor
sub
mov
push
pop
outs
adc
arpl
push
sub
dec
shl
or
and
(bad)
pop
popf
leave
pop
call
mov
sti
rep
and
or
ficom
pop
mov
jne
pop
push
(bad)
(bad)
push
icebp
or
sub
xlat
push
mov
adc
bound
jb
xor
sbb
std
jb
sub
and
push
ins
retf
stc
or
jo
enter
xor
jge
loopne
fbld
dec
loop
pop
sub
jmp
xor
add
mov
mov
add
push
bound
ret
ss
lods
out
arpl
xchg
jne
pop
shl
jmp
outs
cmp
and
inc
and
push
mov
jmp
mov
or
xchg
push
push
add
jmp
ins
fcomp
add
js
dec
xchg
mov
mov
pop
or
jne
sbb
cdq
sub
push
xchg
inc
mov
pushf
cdq
sub
lahf
das
imul
rol
and
int3
call
int3
pop
mov
and
and
push
mov
push
xchg
cmp
cwde
mov
jne
push
push
mov
jle
(bad)
pop
pusha
dec
or
push
cmp
fs
pushf
add
pop
cmp
bound
adc
add
sub
xchg
or
sbb
add
jo
mov
(bad)
mov
and
push
sbb
loopne
lea
jnp
mov
aaa
cmp
push
fdiv
push
xchg
ret
jo
sbb
lsl
les
dec
xor
xchg
xor
in
jecxz
push
je
push
mov
rcr
sbb
adc
inc
pop
in
mov
and
xor
(bad)
call
jo
and
adc
sub
add
jbe
lea
ds
mov
sar
rol
jmp
push
fsubp
stos
jb
sbb
jbe
pop
xchg
mov
mov
add
cmps
out
mov
push
cmp
and
clc
add
sbb
daa
mov
pop
inc
sbb
adc
jns
jl
push
fs
(bad)
aam
or
push
mov
inc
jb
sub
fucomip
ss
ss
xor
sbb
stc
fdiv
clc
jne
and
and
(bad)
movs
pop
or
push
sbb
push
push
fsubr
pop
sar
movs
or
push
mov
dec
cs
adc
xor
test
(bad)
into
mov
and
inc
inc
mov
adc
push
scas
sbb
sbb
jne
call
push
cld
push
jo
xchg
inc
or
add
loopne
test
inc
loope
push
or
in
xchg
clc
mov
and
in
push
bound
add
cmp
lock
mov
sbb
add
inc
dec
jecxz
jmp
lahf
push
adc
std
dec
pop
stos
cmp
and
fs
fisttp
mov
inc
or
dec
inc
pop
loopne
ret
jmp
lods
xor
sub
dec
shl
or
xchg
ret
push
add
dec
sbb
xor
sbb
loop
sbb
pop
cmp
push
popa
mov
push
xchg
dec
cwde
mov
arpl
or
dec
jbe
cmc
add
out
lea
and
pop
cmp
cmp
std
dec
je
jle
or
push
in
clc
jne
outs
xchg
std
ins
outs
adc
jge
mov
jg
je
xor
push
inc
jne
rcl
pop
lods
pop
imul
aas
jne
cmp
or
in
pop
jp
mov
sbb
jnp
(bad)
xor
fistp
idiv
cwde
les
cwde
pushf
pushf
pusha
mov
inc
sub
shl
mov
or
(bad)
sbb
add
xor
cmp
add
ja
mov
test
xchg
jno
sub
adc
pop
sbb
retf
imul
pushf
movs
lods
out
nop
mov
push
int
gs
cwde
scas
cmps
and
mov
push
add
inc
sbb
aad
cmp
pop
das
and
pop
movs
out
iret
test
xchg
sub
dec
dec
and
lea
fadd
das
aaa
scas
cdq
je
test
add
xor
aam
sub
xor
sub
loopne
fcom
sub
int3
data16
clc
or
test
movs
rcl
aas
das
lods
mov
dec
mov
mov
mov
popf
mov
mov
call
adc
dec
pop
mov
add
rol
add
sbb
adc
adc
(bad)
fcom
push
lea
or
ror
and
and
pop
push
aaa
sahf
scas
cdq
xchg
sar
mov
and
add
loopne
ret
or
mov
pusha
add
pusha
arpl
inc
cmp
jb
mov
dec
in
push
adc
sbb
ss
add
mov
or
rol
in
mov
push
mov
and
popa
or
fidiv
cmps
push
mov
pop
call
jne
inc
cli
cmp
push
sbb
sar
pop
aad
cmp
and
or
xor
clc
xchg
jl
mov
fld
mov
call
into
sti
not
pop
clc
or
push
jmp
outs
fcom
mov
push
adc
shr
mov
add
rol
mov
jg
push
push
mov
push
dec
mov
mov
jb
cmps
xchg
lahf
jge
or
cmp
cmp
sub
add
push
ja
mov
sahf
push
push
pop
add
add
repnz
adc
dec
push
push
and
xchg
call
lods
(bad)
push
sbb
add
xchg
cld
cld
xor
outs
loopne
(bad)
fdivr
fidiv
sbb
add
push
imul
adc
add
xchg
imul
je
out
pop
mov
shl
push
push
pop
cmp
mov
enter
(bad)
jge
cmp
mov
cmc
mov
mov
push
add
xor
(bad)
sbb
adc
fisubr
jl
es
and
xor
(bad)
adc
xchg
adc
dec
test
and
sbb
cmp
call
pop
push
cli
jle
movs
pop
es
push
pop
int
sbb
add
cmp
mov
or
add
and
sbb
and
push
push
add
popa
push
cli
(bad)
jmp
jmp
push
ins
jo
int
clc
ror
xchg
ffreep
adc
jmp
push
popf
into
push
or
sbb
jne
sub
mov
add
in
or
xor
jle
in
inc
or
ror
(bad)
fnstsw
mov
push
sub
jne
mov
js
push
mov
jnp
pop
in
mov
fimul
cmp
mov
scas
mov
test
rol
mov
fiadd
add
and
adc
call
(bad)
jns
lock
mov
rol
mov
dec
sbb
xchg
dec
add
loopne
mov
inc
jnp
gs
mov
adc
push
or
xchg
push
ins
jno
bound
sbb
bound
stc
jb
mov
add
push
and
adc
ds
push
and
add
pop
cwde
push
popf
fild
(bad)
hlt
sub
xchg
adc
push
std
out
or
xor
lds
lock
or
add
loope
dec
loopne
sub
fdiv
jg
and
mov
shr
neg
add
mov
mov
ret
fisttp
mov
mov
cmc
aam
sub
jbe
sub
add
jle
push
push
mov
lea
loopne
xor
jge
push
shl
sbb
popf
call
mov
add
add
dec
dec
sbb
jno
cmp
push
mov
or
push
dec
mov
loope
cwde
adc
xchg
iret
xor
cmp
in
dec
or
test
movs
hlt
add
push
call
fiadd
(bad)
sti
sbb
arpl
test
dec
xchg
xchg
push
lods
leave
jo
loop
and
mov
call
inc
movs
lahf
mov
call
jge
adc
mov
push
or
cmp
jno
and
imul
(bad)
dec
dec
cmp
push
movs
sub
xor
and
in
fs
fwait
pop
lods
test
pop
and
iret
lock
adc
ror
inc
cs
jno
add
mov
add
cmp
cmp
lods
retf
mov
stos
lock
pusha
ja
sbb
js
push
leave
aaa
mov
push
rol
mov
out
push
popa
cmp
fistp
xor
fisub
push
cmp
push
dec
clc
dec
adc
imul
or
and
imul
ret
or
or
mov
xor
movs
test
or
jne
pushf
mov
and
jnp
inc
lods
lahf
pusha
rol
add
and
ins
mov
shl
or
cmp
jge
imul
repnz
jle
and
cmp
add
cmp
jl
js
fsubr
pusha
jne
mov
nop
pop
scas
or
or
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
iret
js
cld
jbe
loopne
imul
sbb
push
sbb
add
sbb
pusha
(bad)
fsub
mov
sub
xchg
mov
(bad)
cmp
or
add
or
imul
pop
ret
mov
in
hlt
add
cmp
jae
cmp
jno
das
aas
enter
les
xchg
lock
xor
dec
inc
sbb
lods
or
test
or
repz
push
or
adc
into
fst
jne
test
mov
mov
or
pusha
push
shl
xor
or
pop
xchg
sub
je
cwde
push
cmp
mov
inc
adc
pop
jmp
and
and
mov
mov
mov
aam
cmp
xchg
ins
xchg
movs
sub
mov
fcomp
les
or
rcr
xlat
mov
sti
or
jecxz
fwait
cmp
sti
add
sbb
inc
pusha
call
jne
sbb
inc
mov
in
outs
adc
ja
add
cmp
jge
mov
mov
add
mov
jmp
frstor
push
aas
mov
test
pop
xchg
push
push
dec
jmp
mov
or
add
loop
mov
add
xor
dec
xchg
adc
sub
or
and
xor
arpl
mov
pop
loopne
sub
sub
sahf
jnp
lahf
stos
push
loopne
leave
cmp
rol
push
(bad)
pop
dec
mov
mov
and
mov
or
shr
stc
mov
movq
push
dec
adc
push
and
jl
repz
xor
push
dec
and
push
jg
mov
inc
or
jbe
jle
xor
cld
out
es
jg
jg
jo
mov
dec
sbb
add
jne
mov
repnz
cmps
jns
or
or
xchg
movs
ret
mov
cmp
push
retf
and
or
sbb
prefetch
xlat
jne
mov
popa
test
ds
adc
sub
adc
icebp
push
add
cmp
xchg
sub
outs
push
data16
dec
push
mov
sub
mov
add
sub
jmp
lock
sbb
rep
mov
movs
imul
enter
sub
in
ja
loop
mov
jp
or
sub
push
push
push
ret
clc
jmp
ins
loopne
dec
xor
ret
mov
rol
pop
add
push
lods
and
xchg
mov
lods
js
sub
or
and
push
mov
add
(bad)
jae
pusha
nop
dec
ins
inc
push
sub
pop
adc
pop
mov
je
push
popf
push
mov
imul
not
jecxz
push
adc
cld
data16
pop
idiv
adc
daa
hlt
push
arpl
mov
mov
push
add
or
sub
sub
pop
push
sub
cmp
inc
adc
and
inc
xchg
jo
rcl
sbb
icebp
adc
dec
xor
xor
add
mov
jo
xchg
mov
sbb
add
sbb
xchg
rcr
rep
sub
(bad)
mov
sub
pop
sub
push
add
cmp
mov
jbe
mov
push
pop
add
xor
or
mov
pop
mov
push
xchg
ret
mul
out
mov
shr
inc
push
pop
push
push
inc
mov
jmp
rcr
or
jne
div
pop
dec
adc
inc
or
ja
mul
pop
jb
cmp
cs
(bad)
(bad)
push
jbe
dec
sub
sbb
je
std
jns
or
(bad)
into
fisubr
retf
mov
mov
pop
inc
mov
push
or
js
xor
cmps
rcl
mov
(bad)
mov
cmp
sub
repnz
push
sub
pop
cmp
pusha
jge
add
or
call
push
pop
psraw
mov
add
xchg
mov
mov
inc
sub
push
push
sub
cs
dec
pop
xchg
jne
inc
and
mov
mov
js
psllq
fst
adc
arpl
jno
push
pop
push
xor
mov
jns
imul
pop
fcomp
out
xchg
jmp
push
pop
cmp
ja
pop
xchg
lea
ins
sbb
xor
ja
adc
sbb
and
jae
ins
or
dec
jo
sub
clc
jbe
add
fild
cmp
test
jne
sbb
add
add
in
imul
outs
dec
adc
ret
jmp
mov
add
pmaxsw
cmp
sub
xchg
icebp
jne
jbe
or
cmps
add
xor
test
pop
popa
mov
fs
add
je
and
fidiv
jmp
xor
adc
inc
push
mov
lods
lods
ret
and
pop
in
xchg
scas
aam
push
pop
jmp
push
sub
cwde
dec
xor
rol
lock
rcr
jb
sbb
inc
push
push
in
fmul
dec
mov
cmp
ror
mov
cmp
xor
(bad)
push
(bad)
xor
mov
mov
dec
test
das
aad
aam
adc
das
xchg
(bad)
mov
bound
push
clc
push
sbb
mov
add
in
int
or
xchg
sub
pop
mov
int3
rol
out
sbb
lea
cmp
cld
jnp
push
mov
dec
ja
mov
movs
(bad)
mov
jb
je
adc
js
jl
jne
mov
ja
pop
call
enter
inc
cmp
clc
xor
stc
test
je
push
div
test
cmp
mov
aas
shl
dec
lea
iret
xchg
xor
push
or
mov
loop
adc
ds
data16
jbe
dec
or
shl
or
pop
mov
push
shl
nop
shl
xor
cmp
and
mov
or
jp
ins
mov
mov
repnz
shl
add
dec
gs
and
push
or
xor
test
mov
adc
test
mov
shr
shr
push
add
push
xchg
push
leave
or
fs
adc
inc
cdq
add
add
cmp
push
pusha
ss
clc
hlt
mov
rol
shr
rdmsr
add
or
push
fcom
dec
pop
imul
push
mov
cmps
adc
in
dec
mov
pop
push
cmps
(bad)
(bad)
jmp
mov
blci
sbb
push
ja
fbstp
je
and
not
fimul
push
test
mov
push
mov
inc
pop
fdiv
icebp
add
inc
imul
hlt
jne
repz
sub
or
inc
jne
inc
jmp
pop
jge
int3
pop
pop
and
sbb
xor
push
into
sbb
clc
dec
cmp
pop
(bad)
adc
push
mov
pop
sub
mov
ret
lea
call
rcr
mov
popa
xchg
loope
jg
add
je
push
push
push
push
hlt
sub
out
inc
jb
jmp
pop
in
push
sub
popa
xchg
jmp
shr
mov
ins
xchg
xchg
pop
xchg
mov
push
mov
sub
sbb
add
or
sbb
pop
push
dec
outs
add
dec
cli
push
or
cmp
pop
or
inc
sub
push
cld
mov
je
data16
repnz
jmp
retf
add
mov
addr16
jns
adc
call
ins
push
xor
xchg
ret
or
adc
adc
mov
sub
mov
ror
popf
in
mov
jb
hlt
fadd
fmul
jle
push
cmp
ret
or
test
out
mov
popf
xchg
adc
and
test
push
mov
mov
mov
dec
push
or
xor
in
jp
loopne
ror
imul
inc
outs
das
xor
ret
sbb
ffree
call
test
and
pop
sar
pop
push
cwde
cmp
cmc
bound
add
lods
lods
inc
je
out
add
mov
sar
popa
int3
ins
add
je
or
je
sbb
xor
addr16
push
jo
pusha
scas
pushf
pop
cs
int3
pop
or
add
sub
sbb
adc
sub
not
or
neg
pop
inc
mov
aas
mov
test
icebp
ror
pusha
xchg
mov
in
xchg
or
es
or
jbe
out
sbb
xor
cmp
push
or
inc
cmp
sbb
mov
test
in
es
ins
loopne
inc
or
sbb
scas
pop
adc
and
fcmovnu
jne
or
xor
mov
push
inc
inc
fimul
xor
mov
fs
or
pop
ss
adc
pop
outs
cmc
and
dec
xor
js
pop
push
movs
loope
xlat
je
mov
push
lea
push
pop
cmp
pop
aas
retf
inc
xchg
cdq
inc
(bad)
or
jle
cmps
sbb
shl
inc
je
add
sahf
adc
or
imul
mov
add
cld
shr
pusha
add
lock
test
je
push
jae
ins
push
stc
cwde
cld
test
xchg
xchg
call
ja
adc
pop
sbb
fdivr
mov
in
push
test
in
and
es
sub
inc
mov
mov
jmp
mov
or
dec
pusha
xor
inc
push
ins
cmp
xchg
pop
scas
jl
xor
mov
int3
test
sub
xchg
add
neg
mov
retf
or
aam
xor
inc
cmp
pushf
add
mov
jbe
clc
fucomi
push
mov
push
adc
int3
or
add
fisttp
call
mov
inc
(bad)
mov
dec
mov
pop
nop
cmp
xchg
add
xor
add
xor
mov
sbb
jns
push
xchg
mov
iret
sbb
push
ss
jo
add
add
pushf
into
add
addr16
in
sbb
cmp
jno
clc
outs
je
lock
outs
test
ins
inc
fwait
jp
sub
fsub
pop
mov
mov
fistp
xor
xor
mov
dec
pop
push
sub
xchg
inc
or
adc
les
push
pop
pushf
or
adc
pop
adc
cs
ret
sub
pop
outs
ret
call
arpl
fnstsw
cmp
jle
ins
cmp
inc
lock
sti
mov
xor
add
mov
int
or
(bad)
pop
or
xchg
xor
je
fiadd
adc
movsx
jl
fcmovnbe
adc
dec
sub
psubusw
sar
adc
or
mov
int3
jbe
cmp
(bad)
sbb
dec
scas
clc
add
jne
and
push
or
shl
test
add
sub
(bad)
call
dec
mov
fild
xchg
push
lds
add
sbb
cmps
xor
gs
xor
sbb
push
adc
in
push
retf
stc
scas
call
push
xor
dec
je
adc
fwait
dec
push
fdivr
cdq
jmp
test
mov
aaa
int3
je
cdq
nop
ror
adc
sbb
pop
shl
mov
inc
(bad)
outs
push
pop
fimul
mov
or
into
je
inc
sbb
dec
test
pop
mov
or
jne
and
sub
test
cmp
xchg
push
inc
je
mov
cdq
rol
fadd
adc
stc
cmp
xchg
clc
cmp
jg
sahf
add
mov
dec
jmp
pop
xchg
sub
mov
fadd
aas
jle
pop
push
mov
into
cmp
je
sbb
and
xor
ss
js
fisub
mov
loope
or
lods
cmp
sub
sub
sar
rol
ins
(bad)
push
sti
fisubr
test
mov
jmp
ror
sub
push
test
dec
mov
outs
inc
and
mov
jmp
popf
fcom
or
pop
sbb
pop
mov
shl
push
jp
xchg
xor
dec
fdivr
push
cwde
jne
lea
or
adc
push
jbe
dec
pusha
pop
call
cmp
nop
aaa
cmp
sub
in
fistp
rcl
btc
pushf
test
push
shl
lods
add
cmps
sbb
scas
push
cmp
adc
push
and
fistp
jl
test
push
xchg
jnp
cmp
jbe
adc
movs
daa
daa
push
aas
icebp
pop
mov
(bad)
mov
or
test
sub
movs
cmp
push
or
ds
std
ja
push
xor
inc
dec
push
(bad)
xchg
int
imul
mov
xor
test
or
ins
fs
js
cmp
push
das
or
stc
lea
mov
sub
data16
retf
mov
sar
pop
add
rcl
sub
xchg
sub
sbb
xor
sub
je
xchg
pop
rcr
dec
push
cs
mov
xor
adc
mov
cmp
pop
sub
(bad)
push
aad
xor
enter
jae
sub
clc
sub
dec
add
cmp
pop
sub
and
pusha
and
adc
adc
lea
fsub
loopne
popa
mov
jmp
sub
add
dec
scas
push
call
mov
and
add
or
sub
or
shr
mov
imul
push
fwait
and
dec
or
adc
js
sahf
add
xor
sbb
mov
and
add
loop
jbe
or
je
cli
add
cmp
mov
pop
aaa
dec
std
nop
push
dec
or
in
sub
jae
(bad)
scas
and
mov
shr
xchg
add
shl
pop
mov
and
fmul
add
sbb
lea
xor
cmp
pop
add
cmp
dec
pop
add
add
pop
and
(bad)
xor
push
or
sub
lds
shl
add
adc
mov
(bad)
sbb
sar
xor
or
pop
cmp
jbe
mov
mov
imul
pop
jl
(bad)
and
jb
gs
lock
mov
mov
sti
pop
mov
shr
not
and
add
fild
pop
and
xor
sbb
pop
pop
jp
jl
push
jle
push
retf
pop
cmp
mov
cld
retf
dec
xor
mov
push
mov
sar
inc
cmp
or
adc
std
xchg
pusha
mov
mov
inc
mov
mov
cmp
xchg
lods
clc
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
jge
or
je
inc
xor
lock
rep
inc
cmp
jnp
dec
xor
xor
adc
add
out
je
scas
jp
xor
cdq
jp
pop
gs
push
or
into
cmp
sub
dec
inc
adc
dec
adc
add
and
fisub
mov
jo
and
rcr
int
sbb
loopne
int
adc
adc
adc
cmc
inc
jo
dec
pop
into
push
push
std
je
push
scas
dec
jp
or
mov
ret
das
mov
and
mov
sub
xor
or
mov
pop
stos
jae
sbb
xor
mov
add
neg
inc
aam
pop
push
add
mov
add
jo
push
retf
push
shr
add
aas
jo
push
push
fucomi
fwait
or
lods
jne
mov
lds
push
adc
clc
add
jno
aaa
out
sbb
mov
inc
aam
sub
loop
imul
inc
clc
pop
add
inc
or
cmp
hlt
or
sti
mov
push
sbb
dec
movs
xchg
ja
hlt
cmc
lea
push
cli
ja
(bad)
sub
rol
add
jmp
repz
or
lea
outs
mov
push
out
jle
cld
lock
call
adc
add
outs
nop
jno
adc
add
inc
xor
aam
sub
fmul
mov
sahf
inc
mov
sahf
cli
(bad)
inc
inc
mov
lock
push
mov
jle
mov
scas
js
lds
not
and
lods
add
int3
inc
leave
cmc
add
fwait
or
adc
add
add
xlat
sub
pop
shr
add
retf
cld
push
add
icebp
mov
add
cwde
jle
inc
push
and
cmps
add
loop
hlt
rcl
gs
push
mov
int3
push
cmps
add
mov
xchg
inc
stc
sbb
clc
not
nop
es
add
cmp
inc
or
call
add
push
jns
or
add
sub
add
and
add
or
ja
mov
inc
or
inc
fstp
pop
hlt
lea
add
shl
adc
jle
mov
retf
dec
pop
pop
push
pop
adc
imul
or
and
and
ffree
test
test
cmp
ins
out
xor
xchg
mov
mul
cdq
jle
sti
lea
mov
sub
jl
je
or
lea
mov
dec
ins
pop
xor
push
sar
dec
loopne
rcr
movs
(bad)
pop
mul
add
cmp
loope
xchg
xor
cmp
shl
sahf
dec
je
fisttp
push
or
jecxz
dec
push
fld
rol
fcmovu
ja
(bad)
push
push
push
add
mov
xor
(bad)
pusha
loope
int3
jo
fsub
jns
mov
dec
add
add
mov
in
jb
lods
dec
into
mov
dec
cmp
rdmsr
cmp
xchg
arpl
mov
add
add
mov
inc
ins
loope
dec
xchg
and
add
lock
push
cmp
dec
push
push
push
adc
out
adc
cli
icebp
and
or
stos
or
jo
dec
or
mov
and
inc
inc
jmp
push
or
mov
push
jne
mov
clc
out
fnstenv
jmp
mov
pop
lock
aaa
arpl
xchg
dec
lock
jecxz
fsub
lock
add
mov
mov
mov
cmp
je
mov
dec
sbb
push
sbb
jl
inc
mov
dec
pop
popa
push
dec
jecxz
jne
dec
jno
xchg
xchg
into
xchg
push
adc
adc
jmp
pop
jbe
mov
enter
mov
mov
push
pop
outs
leave
inc
test
sub
or
mov
sub
icebp
sub
pop
in
sbb
sbb
xchg
dec
add
cmp
cmp
push
mov
jl
out
and
mov
mov
push
dec
jne
clc
repnz
jmp
gs
cwde
popf
jp
mov
adc
bound
dec
push
and
push
clc
into
xor
and
ror
int
sahf
xchg
mov
or
das
pop
xor
sub
mov
mov
or
ret
pop
ror
out
or
dec
cld
or
inc
or
ror
in
mov
add
jl
or
nop
mov
aad
or
adc
lock
call
sbb
mov
lea
adc
sbb
sbb
cmc
adc
sub
imul
inc
add
xor
cs
outs
pop
ror
adc
mov
adc
fistp
call
lea
jge
icebp
add
outs
mov
mov
and
adc
test
or
fs
sub
imul
out
add
out
pop
stc
mov
xor
push
push
add
dec
clc
stc
add
push
pop
imul
lods
lods
mov
push
arpl
cmp
sbb
sub
sbb
jne
aam
bound
lock
adc
sbb
xchg
push
xchg
call
push
test
or
dec
cmp
ja
popf
xor
mov
jne
mov
or
mov
sbb
or
sbb
push
add
jno
mov
out
jmp
daa
or
add
stos
hlt
dec
mov
cdq
and
mov
je
mov
push
cs
dec
(bad)
pop
push
stos
retw
icebp
adc
inc
je
xor
add
mov
ja
gs
pop
jae
pop
repz
or
lods
and
out
push
xchg
sbb
inc
or
inc
loopne
loopne
lods
xchg
xlat
in
(bad)
push
push
add
pop
push
or
cmp
data16
dec
inc
xchg
fidivr
nop
inc
or
cmp
add
xor
sub
lea
scas
das
data16
push
jae
push
xchg
fistp
adc
into
jmp
add
sar
sbb
adc
sub
lahf
mov
push
and
ja
mov
adc
ins
xor
sub
cmp
push
push
ret
mov
test
and
jno
pusha
fdivrp
add
fsubr
pop
cmp
push
pop
jge
fsubr
aas
add
popf
mov
xchg
sbb
sub
sub
dec
pop
or
add
or
mov
js
xor
add
add
mov
fwait
push
add
pusha
ja
sbb
scas
je
(bad)
data16
out
out
sbb
or
add
dec
pop
addr16
and
mov
push
mov
pop
mov
push
and
fcom
std
jbe
cld
mov
xor
scas
cmp
add
or
addr16
sub
jmp
push
in
lods
loop
sub
test
or
add
ficom
and
pop
rol
ins
jecxz
sub
or
and
adc
cmps
push
mov
adc
mov
shl
jmp
push
inc
test
mov
inc
adc
xchg
out
repnz
dec
pop
mov
les
mov
jae
int3
add
push
cmp
scas
mov
push
xchg
mov
xor
push
inc
xlat
fnclex
pop
jl
mov
push
adc
push
push
adc
mov
mov
or
mov
fisub
stos
mov
dec
adc
lods
pop
inc
adc
fild
ficom
loopne
or
loope
fadd
adc
add
les
inc
mov
add
mov
into
pop
sub
enter
xchg
sbb
mov
push
movsx
rcl
add
add
inc
je
sub
cwde
jge
dec
mov
mov
gs
rcl
test
scas
jbe
mov
test
add
push
lods
cmp
pop
lods
sahf
or
adc
mov
pop
sbb
inc
inc
jle
pushf
add
sub
push
pusha
cwde
retf
pusha
inc
xor
loopne
adc
rol
push
ins
mov
enter
xor
pusha
call
outs
mov
push
jmp
arpl
jno
enter
sbb
dec
test
inc
mov
ret
or
mov
test
mov
data16
fsubr
dec
data16
gs
mov
cmps
mov
cwde
sbb
xor
pusha
cdq
je
jmp
jbe
out
repnz
and
out
in
dec
repnz
mov
jmp
in
rol
xchg
inc
mov
lea
jno
sub
sub
fucom
imul
mov
adc
pop
dec
aad
and
push
icebp
in
or
not
call
jbe
sub
mov
and
inc
mov
enter
adc
or
sbb
or
lock
cmp
jl
inc
mov
dec
call
ds
clc
inc
and
and
fld
inc
jmp
adc
jg
imul
or
ficom
fsubr
mov
cwde
jmp
pop
adc
aas
sbb
call
lock
cwde
mov
dec
or
mov
dec
mov
push
sbb
push
cwde
test
jmp
fldenv
mov
xchg
addr16
xor
and
pop
or
adc
inc
adc
jmp
jnp
scas
sbb
add
sub
add
ja
xor
inc
adc
pop
mov
adc
inc
(bad)
jp
adc
lods
ror
lods
lods
cmp
mov
sbb
shl
cmp
add
mov
lea
movs
add
shl
mov
sub
neg
nop
into
mov
mov
lock
and
and
out
and
shl
and
jns
shl
mov
or
pop
stc
mov
or
add
lock
inc
inc
xlat
or
test
enter
das
cmp
jne
test
into
jne
inc
add
pop
cmp
dec
mov
fmul
hlt
int3
add
jne
adc
mov
adc
pop
outs
or
inc
pushf
or
rol
or
mov
xchg
lea
(bad)
add
scas
sar
xor
inc
lock
ins
push
dec
shl
ja
outs
out
add
inc
and
ins
mov
and
mov
loopne
xor
jg
add
cmc
mov
jge
test
js
mov
das
add
adc
aam
and
test
add
jmp
push
out
jae
pushf
ins
pop
mov
jg
or
mov
sub
(bad)
lock
add
push
cld
(bad)
call
ins
fadd
loopne
shr
or
mov
or
dec
xor
test
dec
inc
add
push
add
cmp
ja
ins
aam
loope
data16
or
push
mov
jge
cmp
repnz
add
ficomp
(bad)
fcmovbe
sti
pop
fidiv
in
add
jmp
call
sar
(bad)
mov
and
arpl
into
out
ret
popa
pop
nop
dec
mov
dec
shr
test
mov
push
mov
mov
(bad)
enter
cmp
push
push
into
jmp
fmulp
cmp
jb
loop
enter
or
jno
les
(bad)
mov
ins
int
dec
xor
retf
adc
sub
add
not
adc
jmp
add
sahf
(bad)
adc
and
ficomp
in
xchg
inc
bound
add
or
nop
xchg
add
pop
imul
retf
push
sahf
repz
out
xor
icebp
jns
iret
fstp
dec
add
inc
mov
cmps
add
add
or
ja
test
rcl
xchg
es
popa
sub
adc
int3
je
cdq
gs
data16
les
sub
test
adc
xor
popa
xchg
aad
xor
cmp
fcom
lea
test
lock
call
jb
enter
lea
xor
inc
push
mov
lods
std
ret
sub
cmps
test
push
mov
js
add
or
inc
ja
add
shl
and
sar
dec
ret
arpl
sti
addr16
lahf
xchg
(bad)
cmp
enter
mov
aam
loopne
mov
inc
js
test
les
popf
(bad)
std
or
test
aaa
mov
sub
cmp
jle
sbb
push
xchg
std
add
rol
mov
mov
ror
rcl
loope
cs
sbb
xor
fisttp
push
cs
mov
pop
add
scas
lea
add
inc
pop
sbb
add
mov
cld
cmp
fisttp
(bad)
stc
or
fsub
mov
add
mov
jl
call
outs
pop
xchg
mov
call
mov
push
or
inc
fwait
lods
xor
rol
dec
sub
fdivr
inc
sub
mov
pop
and
cmp
jne
cmp
jne
inc
jne
cmp
inc
xor
mov
pop
cmp
push
movs
test
lds
ret
imul
lods
cmp
dec
mov
icebp
mov
sub
ret
sti
test
cmp
mov
mov
pop
push
push
repz
in
sbb
pop
das
mov
call
add
in
fiadd
js
push
or
sbb
mov
sti
push
scas
and
loop
cmp
sbb
lahf
std
mov
mov
inc
test
test
ror
or
xor
es
mov
jno
adc
test
les
mov
cmp
xchg
or
(bad)
jns
in
sbb
sahf
add
fimul
je
inc
cld
xchg
xchg
pinsrw
dec
imul
enter
mov
dec
nop
dec
fisubr
loopne
sub
arpl
in
pop
pop
lods
mov
and
je
test
clc
mov
or
xchg
std
rcr
jecxz
and
dec
mov
push
mov
lock
loopne
lock
and
xchg
mov
add
jb
std
fdivr
xor
dec
add
out
shl
clc
and
ror
push
mov
jne
cmp
inc
mov
mov
add
pop
mov
std
call
cld
aas
mov
mov
shl
std
push
mov
and
xor
fdivr
call
std
inc
mov
lea
loope
or
lea
das
push
lea
imul
movs
std
push
sbb
mov
pop
sbb
xchg
xchg
cmp
std
inc
icebp
push
push
in
loop
mov
aaa
adc
sbb
mov
cs
out
push
inc
add
mov
inc
sahf
aad
dec
add
mov
push
xchg
mov
sbb
adc
out
rcl
inc
inc
adc
and
pop
cmp
leave
addr16
cmp
lock
lock
push
jb
test
std
call
and
xor
repz
jbe
shl
xlat
inc
jl
pop
loopne
mov
xchg
mov
repz
loopne
in
popa
(bad)
sti
mov
push
fdivrp
or
push
push
ds
cs
adc
xor
sub
test
sub
or
in
jmp
dec
sub
push
cmc
shl
std
jno
lods
push
pop
lock
xor
xchg
jg
dec
push
sub
sbb
jmp
test
je
mov
jge
int3
cmp
jnp
sub
iret
mov
fdivr
mov
sar
mov
pop
fdivr
enter
jns
dec
jle
ins
lock
dec
sbb
fbstp
mov
mov
mov
out
in
mov
movs
adc
push
(bad)
sti
sbb
sar
inc
push
inc
retf
jne
cmp
pushf
add
xchg
sbb
inc
pushf
sbb
jne
xchg
cmp
repnz
das
push
dec
or
push
je
pop
bound
push
std
jbe
jb
std
std
loope
add
dec
cwde
and
out
xchg
mov
jge
fsubr
dec
mov
sub
jmp
enter
leave
mov
lods
repnz
inc
jo
retf
or
push
in
jne
je
mov
xor
sub
data16
imul
add
jge
leave
mov
bound
in
push
mov
clc
inc
popa
adc
sub
adc
mov
stos
xchg
inc
cs
jl
xchg
xor
and
hlt
mov
pop
inc
jmp
cmp
es
add
sub
xor
dec
dec
inc
cmp
mov
aas
xor
pop
cmp
je
aaa
inc
ror
adc
out
out
outs
ins
adc
pop
jne
dec
add
add
lds
sbb
push
mov
adc
sub
or
mov
jmp
je
popf
dec
pushf
aas
xor
cmp
cs
jg
test
and
adc
sbb
jb
movs
je
add
retf
scas
and
pop
dec
and
adc
test
xor
adc
cmc
mov
and
movs
xor
hlt
mov
lds
mov
pop
jb
adc
ret
mov
mov
xor
iret
aad
cmp
cld
jmp
sbb
or
and
jbe
sbb
je
or
sub
test
je
add
(bad)
loopne
add
or
add
add
or
add
pop
jb
push
sahf
push
sbb
mov
(bad)
pop
cmps
sbb
jp
call
adc
or
je
push
mov
outs
mov
nop
or
je
xor
jne
pop
adc
imul
test
std
popf
loop
aad
fcomp
adc
stos
aaa
dec
jae
xchg
inc
push
lock
iret
add
mov
jge
nop
fisttp
or
jne
int
mov
mov
jmp
lock
je
push
push
je
das
adc
add
loop
sub
sbb
ret
add
outs
jne
or
jmp
hlt
jne
and
pushf
(bad)
or
fisubr
and
pop
arpl
pop
pop
daa
ins
add
(bad)
mov
mov
in
add
fcomp
cmps
mov
lock
cmp
out
adc
test
loop
xor
sti
in
mov
xchg
stc
pop
cmp
add
cs
mov
bound
push
xchg
jns
add
nop
cmp
adc
and
add
std
inc
push
add
lock
and
add
xchg
or
xlat
test
lods
jbe
(bad)
pop
jp
adc
cmp
inc
push
sbb
adc
lods
movs
xchg
xchg
add
gs
xor
pop
iret
and
push
mov
shl
sub
std
test
adc
adc
ins
imul
shl
loopne
xor
push
mov
dec
push
inc
inc
jmp
push
dec
dec
push
std
in
push
arpl
pop
mov
imul
pushf
xor
pop
mov
mov
sbb
ins
sbb
add
mov
(bad)
cmc
add
jo
push
or
lods
or
sbb
add
dec
add
xor
or
dec
adc
test
xchg
loop
retf
ss
xchg
(bad)
mov
cdq
fiadd
adc
jo
push
sub
mov
mov
inc
sub
xor
es
inc
and
xchg
(bad)
in
xor
cli
adc
bnd
lea
lea
or
jnp
jmp
mov
jge
lods
mov
sbb
or
pop
test
mov
xchg
fcom
adc
cmps
ds
mov
enter
sub
cmp
retf
mov
sbb
adc
in
add
pop
mov
and
push
add
cmp
sbb
push
pop
mov
push
mov
mov
mov
(bad)
loopne
add
inc
push
ffree
shl
add
dec
js
in
lock
cld
mov
and
jp
add
call
fidivr
fs
or
adc
jne
gs
sbb
or
cmps
retf
xor
or
nop
(bad)
mov
int
rcl
ss
add
(bad)
repz
aas
sbb
add
enter
jle
std
(bad)
js
and
test
or
iret
pop
jnp
and
imul
mov
popa
xor
or
pop
xor
add
jmp
xor
leave
and
push
retf
pop
or
aad
retf
or
(bad)
push
(bad)
inc
pop
and
retf
mov
add
lea
sub
imul
fwait
push
or
popf
call
mov
push
loope
rcr
aas
movs
jno
mov
xor
mov
push
and
cmp
add
cmpps
sar
stos
inc
shl
add
mov
add
sar
pop
pushf
dec
out
mov
mov
(bad)
or
les
xor
push
out
stc
mov
push
or
hlt
clc
test
mov
jb
mov
dec
sbb
push
xor
adc
imul
mov
mov
sar
add
enter
add
adc
cmp
fild
cmp
xor
adc
adc
jns
and
cld
inc
int3
fstp
test
or
movzx
in
test
push
jl
fbstp
pop
adc
mov
popf
jno
es
(bad)
fidiv
adc
jle
add
dec
ret
mov
cmp
test
adc
nop
push
cwde
jae
dec
cmp
fnsave
mov
leave
outs
mov
mov
rol
movs
xor
xor
rcr
(bad)
adc
fbstp
xchg
add
inc
sar
sbb
mov
jb
xchg
aaa
cmp
mov
pop
push
imul
rcl
xlat
xor
dec
or
xchg
pop
into
fisubr
dec
or
retf
mov
push
inc
pop
dec
or
add
adc
cmp
scas
lock
or
sub
inc
xor
cmc
test
dec
xchg
std
mov
cmp
ja
mov
dec
or
sub
rcl
sbb
xchg
sbb
ins
xchg
push
(bad)
jne
dec
sub
pop
ins
or
lods
xor
nop
ins
adc
or
inc
pop
inc
sub
retf
les
movs
pop
mov
outs
out
loopne
push
fisttp
leave
stos
sub
sbb
cmp
test
cdq
or
pop
aad
(bad)
sbb
xor
pop
mov
jmp
mov
push
sub
mov
sar
fdivr
sti
imul
shl
ins
add
and
inc
not
mov
fisttp
and
iret
ins
push
cmp
dec
jmp
or
scas
movs
ja
je
adc
adc
cld
sub
ins
rcr
sbb
mov
inc
dec
adc
sbb
out
mov
cwde
bound
mov
and
pop
dec
sub
pusha
cmp
mov
and
jo
(bad)
imul
jmp
inc
add
test
jl
push
cmps
addr16
fs
scas
or
in
jmp
mov
cmp
mov
movs
sar
xor
push
hlt
mov
and
je
dec
inc
out
pusha
lock
and
out
pop
aas
(bad)
out
retf
add
push
fsub
pop
dec
loope
push
data16
cmps
and
lea
adc
sbb
daa
xchg
sbb
dec
inc
lea
or
push
clc
int
lods
out
inc
lea
push
lods
jnp
(bad)
or
fcom
xchg
inc
lock
jl
popf
sbb
add
movs
(bad)
pop
cmps
xor
mov
mov
es
adc
add
ss
push
test
shl
push
add
(bad)
icebp
cmp
ret
test
mov
bound
jne
xor
jp
(bad)
aam
mov
mov
cmps
jecxz
out
inc
int
push
(bad)
mov
pop
cmp
or
test
sub
pop
cmp
sbb
add
stc
mov
mov
inc
adc
push
sysenter
sbb
xor
add
sub
or
jae
cmp
push
pop
pop
ret
xchg
mov
clc
fsubr
sub
sub
mov
loopne
out
int
jae
mov
adc
cli
cmp
daa
push
pushf
aas
mov
inc
mov
adc
nop
cmp
mov
outs
fmul
push
and
mov
inc
pop
inc
fisub
mov
cmp
ins
xor
jmp
or
jmp
pop
gs
repnz
sahf
sbb
cmp
rcl
inc
lods
push
sbb
div
or
inc
inc
sbb
or
dec
adc
sub
add
push
add
nop
inc
aas
mov
loopne
xchg
dec
dec
stc
pop
mov
cmp
add
jl
pop
xchg
push
xchg
mov
or
add
inc
pop
sub
mov
inc
lock
push
cmp
or
and
mov
std
call
xchg
mov
sbb
(bad)
push
out
lea
mov
push
jo
retf
jmp
ret
repz
aad
pop
and
mov
or
(bad)
lea
sbb
jge
mov
sub
cdq
sub
mov
fdivr
jne
jmp
xor
cmp
adc
into
pop
gs
xor
jnp
cmps
pop
pusha
(bad)
jmp
mov
inc
je
xchg
in
nop
js
cmp
frstor
sbb
mov
(bad)
sar
ret
mov
movs
sbb
adc
pusha
push
inc
jb
xlat
pop
iret
pop
pop
and
inc
xlat
pop
sbb
aad
in
je
mov
cdq
inc
jne
test
jp
sub
jne
inc
inc
cld
xchg
cwde
push
mov
addr16
(bad)
and
jg
imul
dec
cs
cmp
cmp
mov
(bad)
sbb
movs
test
jle
outs
or
pop
repnz
and
jns
fadd
push
mov
xlat
imul
enter
sub
fcomp
push
mov
out
sti
sub
addr16
xchg
inc
add
or
lods
nop
gs
mov
daa
test
and
push
in
add
rcr
pop
mov
add
adc
or
loope
jb
sbb
sbb
or
xlat
scas
mov
sbb
xor
push
cs
pop
pop
inc
ds
je
ret
cmp
dec
mov
pop
inc
fdivr
test
pop
pop
dec
mov
and
cmp
pop
or
cmp
ds
popa
xor
sub
mov
dec
push
dec
add
adc
add
xchg
or
dec
or
push
adc
pop
and
mov
mov
(bad)
pop
call
mov
in
retf
retf
(bad)
repz
jecxz
or
sar
sub
fcmovnu
xor
(bad)
mov
push
mov
data16
lock
cmp
mov
sar
shl
push
cli
dec
inc
or
je
aaa
and
repz
mov
dec
push
pop
adc
mov
not
cmp
adc
cli
sbb
movs
mov
lahf
xor
and
jo
push
mov
jmp
push
shr
fsub
mov
jbe
adc
push
cs
popa
or
inc
xchg
xchg
or
xchg
mov
mov
push
sub
inc
ror
cmp
push
push
sub
add
inc
pop
mov
test
je
mov
xchg
je
or
mov
sahf
je
mov
xor
fisub
out
lods
jecxz
(bad)
add
pop
xor
mov
push
sahf
jmp
xchg
inc
cmp
add
or
push
movs
sbb
lea
add
or
sbb
test
xor
fmul
mov
ret
mov
shl
pop
add
inc
push
(bad)
xor
out
add
xchg
fcomp
into
test
pop
je
mov
into
nop
or
and
mov
ret
into
inc
xchg
(bad)
push
fdivr
or
mov
add
ins
scas
sbb
xchg
ret
inc
inc
mov
add
clc
out
xchg
or
mov
jmp
icebp
and
ins
dec
ret
dec
add
mov
outs
dec
cmp
cmp
je
dec
push
pop
inc
and
push
mov
ins
fsub
mov
mov
jmp
push
xchg
jge
fs
xor
dec
sub
sub
push
inc
adc
cwde
sti
inc
(bad)
movs
mov
test
add
sahf
add
mov
ret
sar
add
or
fimul
test
add
movs
mov
jg
clc
jb
dec
push
or
mov
mov
sbb
xor
(bad)
mov
cmp
sub
fsubr
inc
popa
and
mov
lods
mov
jl
jo
mov
and
es
sub
int3
cdq
pusha
add
mov
cmp
cwde
es
es
loopne
call
or
xchg
sbb
push
pop
es
enter
xor
mov
leave
push
mov
push
ret
jecxz
lods
pop
inc
add
out
dec
push
xor
(bad)
retf
out
push
sub
int3
mov
jbe
gs
ss
inc
inc
inc
inc
jmp
push
sar
iret
sub
cmps
push
pushf
stos
or
sahf
cmp
aas
jge
fistp
xor
mov
and
push
add
inc
sbb
jb
push
sub
fdiv
clc
call
outs
push
jle
jp
jmp
jns
pop
test
cmp
dec
mov
inc
test
jle
sbb
mov
lea
push
sub
aaa
add
inc
sbb
stos
push
inc
cmp
mov
dec
adc
call
rcr
ror
in
xchg
loop
pop
lds
pop
pop
jp
xor
push
cmp
push
aad
or
xchg
cmp
pop
sbb
inc
imul
xor
mov
or
fisubr
xor
loopne
adc
add
(bad)
mov
inc
sub
std
and
ror
add
sbb
cmps
jmp
mov
push
push
mov
push
out
mov
sbb
leave
push
push
push
add
add
sub
push
mov
fcom
add
(bad)
adc
jbe
lea
inc
add
fidiv
add
and
push
and
inc
mov
push
or
outs
add
cmp
cld
leave
mov
shl
call
or
push
(bad)
jl
mov
popf
add
lea
loopne
or
lock
pop
mov
add
and
ror
and
and
mov
jbe
add
jg
popf
pushf
or
cmp
cmp
in
ins
push
cld
pop
or
mov
sub
add
cmp
add
xor
add
test
mov
jnp
jae
inc
or
pushf
xchg
fmul
mov
inc
adc
xchg
loop
pop
mov
repz
int3
or
sub
(bad)
xchg
sbb
push
sbb
dec
and
and
sar
fwait
jno
inc
mov
mov
lahf
add
mov
xor
or
add
or
je
add
dec
mov
dec
push
sti
xor
pop
loope
js
adc
adc
or
adc
in
and
adc
int3
mov
xor
test
mov
jg
jae
sbb
call
lea
pop
push
push
push
mov
movs
pop
mov
and
lock
cmps
js
bound
adc
hlt
ret
pusha
adc
push
mov
inc
push
enter
jl
(bad)
and
hlt
(bad)
js
pop
sbb
push
add
or
mov
add
and
nop
cmp
jle
mov
push
inc
pop
pop
jae
pop
xor
mov
fiadd
popa
and
xchg
push
jne
cmp
mov
les
xor
push
jmp
or
add
rol
or
dec
out
ss
cmp
ror
or
or
mov
ror
mov
xchg
cmps
loopne
or
dec
rcl
nop
dec
or
adc
es
push
ss
out
test
call
dec
sbb
mov
cmps
and
and
or
(bad)
sbb
mov
push
add
mov
cmp
or
in
test
outs
lea
xchg
ss
dec
push
xor
ss
adc
div
out
cmp
je
mov
stc
mov
inc
cmp
jecxz
push
dec
add
jbe
inc
pushf
dec
add
sbb
mov
leave
add
fmul
jnp
mov
leave
jae
adc
aam
and
add
mov
popa
imul
add
cmps
inc
and
hlt
lock
xchg
adc
scas
xchg
mov
pop
add
fcom
sbb
mov
pop
xor
pop
lea
shl
push
icebp
test
add
rcr
jmp
out
aaa
popa
out
dec
sub
(bad)
lock
sar
call
add
inc
sar
je
daa
test
mov
daa
mov
mov
cld
loopne
add
cmc
es
jl
int3
push
cmps
loop
ret
iret
cmp
popa
mov
iret
mov
add
jmp
and
ret
pop
adc
cmc
push
xchg
sbb
loope
push
ror
push
mov
xor
push
pop
retf
jmp
cld
inc
or
sbb
ror
pop
cmp
add
mov
cmp
test
gs
les
ret
push
mov
dec
ffree
or
inc
inc
repz
dec
lock
dec
push
and
ret
fcom
sub
icebp
jmp
iret
add
out
or
push
test
inc
xor
add
int3
or
je
cmp
dec
sub
mov
idiv
lock
imul
sbb
xor
push
pop
xchg
loope
add
clc
or
jmp
adc
or
push
pop
je
into
push
pop
or
xor
add
jp
leave
stc
jbe
push
call
jnp
imul
icebp
and
call
or
mov
(bad)
xchg
sbb
add
gs
(bad)
outs
aas
pop
add
or
inc
push
adc
mov
cmp
jnp
sbb
or
add
imul
sub
jmp
inc
cmp
push
jl
adc
jae
movnti
sbb
push
or
xor
hlt
or
(bad)
push
ret
data16
out
call
add
and
test
and
cs
dec
xchg
add
or
or
nop
in
fcomp
and
xor
loope
jb
fst
xor
and
shr
cs
inc
dec
add
mov
add
push
pop
push
mov
dec
or
test
pslld
or
adc
test
je
xlat
les
mov
xor
or
or
sub
sbb
jmp
in
clc
inc
fbstp
sub
adc
lock
and
mov
in
out
movs
pop
and
aaa
jecxz
sbb
fdivr
int3
out
or
jo
sbb
sub
loop
outs
mov
or
pusha
(bad)
aaa
jge
loopne
ffreep
aam
and
mov
sub
pop
adc
pusha
mov
fbstp
pusha
pusha
loope
pop
sub
dec
and
cdq
push
inc
jecxz
pop
fstp
cwde
out
and
pusha
pusha
(bad)
sbb
add
ins
mov
push
ret
add
repnz
adc
test
and
adc
scas
cmp
cmps
sti
add
add
test
adc
(bad)
xor
mov
ss
jecxz
clc
ret
mov
dec
je
add
dec
jne
pop
shl
sub
push
and
rcr
stos
xor
pop
neg
mov
out
and
add
add
imul
jmp
push
and
or
icebp
or
mov
fld
fstp
jmp
fisttp
mov
sbb
mov
les
add
arpl
or
aam
inc
cmp
adc
outs
jecxz
(bad)
push
pop
jmp
sub
sahf
lock
push
lods
dec
rol
xor
xor
retf
loop
or
or
adc
inc
aaa
sbb
or
sbb
fld
pop
clc
les
sub
sub
jmp
cmp
mov
sub
push
xor
or
fldcw
xchg
(bad)
test
int3
not
mov
adc
push
push
repnz
ja
jb
sbb
xor
outs
inc
aaa
loopne
sub
mov
xchg
into
jbe
ficomp
jge
enter
or
dec
mov
fadd
fadd
dec
mov
mov
fs
add
dec
into
scas
push
shr
sbb
jp
dec
in
add
call
loop
jo
or
mov
push
push
sbb
gs
sahf
jmp
pop
pusha
stos
adc
mov
jmp
adc
and
and
sbb
xchg
mov
neg
jno
sbb
jle
push
add
popa
outs
add
and
sbb
pop
mov
pop
cmp
push
jmp
or
(bad)
adc
push
out
out
add
fwait
jo
out
add
sar
inc
stos
cmps
add
and
lods
js
enter
out
sbb
fwait
mov
xor
pop
shl
or
sbb
sbb
adc
mov
dec
and
mov
inc
inc
adc
sub
call
or
pop
(bad)
or
xlat
jbe
das
lods
fwait
jno
mov
cmp
and
daa
push
jmp
(bad)
or
or
sbb
out
add
xchg
push
sub
xchg
cmp
jnp
mov
cmp
shr
imul
add
das
jns
add
jae
lea
push
or
int
cwde
pusha
out
mov
(bad)
sub
scas
cmp
rol
or
scas
mov
or
cs
fld
inc
adc
sbb
mov
je
jbe
data16
mov
pop
(bad)
mov
pop
mov
pop
mov
je
cmp
loope
mov
loop
fldcw
sbb
cdq
push
and
add
add
ins
or
aas
movs
pusha
pop
push
mov
fld
push
mov
pop
or
test
call
ins
xchg
jbe
inc
adc
sub
mov
fstp
sbb
jmp
test
int3
xor
add
mov
add
sbb
push
(bad)
je
jl
pop
xor
sub
ss
or
test
int
daa
popa
push
sbb
adc
retf
adc
inc
cwde
cwde
call
or
xor
inc
sbb
in
mov
adc
cmp
add
aas
inc
test
push
jae
mov
lock
or
jae
shld
shl
pop
sar
push
jp
ret
movs
jb
cmp
ret
call
mov
mov
pop
fs
out
mov
loopne
cmp
adc
div
mov
inc
cdq
ror
sbb
neg
call
jl
dec
ror
xchg
and
repnz
inc
jmp
retf
cmc
add
lea
inc
outs
(bad)
fiadd
fwait
mov
sbb
shl
lea
cmp
clc
out
(bad)
jg
jo
leave
fst
adc
push
jnp
sbb
movs
xchg
add
not
test
sub
mov
xor
xchg
add
test
add
push
mov
dec
mov
test
xor
cmp
or
outs
jb
cmp
je
push
xor
mov
sub
inc
push
and
outs
mov
loopne
loop
inc
fmul
inc
call
ret
bound
and
(bad)
jg
inc
cmp
inc
jmp
das
jl
(bad)
and
add
add
outs
push
cmp
std
fstp
fld
fabs
fcomp
nop
retf
in
sti
jae
fmul
pop
add
mov
push
mov
call
test
jne
cmp
sbb
lea
jnp
mov
sbb
lea
pop
mov
loope
push
(bad)
push
push
or
jae
fld
frstor
mov
add
mov
push
aas
or
push
mov
push
fcom
jne
or
sub
dec
outs
pop
stos
add
movs
or
cli
push
neg
ins
div
add
jp
add
jp
(bad)
(bad)
mov
(bad)
mov
jmp
mov
jb
pop
aad
jnp
jg
or
mov
pusha
or
add
(bad)
shl
loope
mov
inc
and
xlat
adc
and
add
add
fiadd
fcom
push
or
int
iret
cld
(bad)
sub
das
and
rol
mov
add
loopne
shl
add
les
cld
ds
ins
stc
inc
sbb
adc
idiv
fldz
ret
or
test
lods
loopne
and
or
dec
lods
push
lahf
popf
pop
pop
ret
stgi
add
mul
or
pop
pop
faddp
test
and
fisttp
jo
cmp
inc
cwde
add
je
fchs
inc
(bad)
push
adc
adc
lods
or
jle
push
fdivrp
pop
jo
inc
shr
cmp
and
in
addr16
data16
aas
add
popa
jns
movs
cmps
fldcw
sub
fmul
xchg
pushf
mov
inc
sbb
sub
mov
bound
jmp
and
stos
adc
push
mov
jae
jmp
adc
push
rcl
mov
es
adc
stc
fs
movs
and
in
mov
in
outs
and
dec
fdivr
sub
push
int
fdivr
adc
sub
and
jbe
jecxz
ret
and
and
(bad)
out
jno
sbb
or
ins
in
and
ins
iret
pop
loop
cs
inc
sbb
mov
xchg
imul
pop
mov
adc
(bad)
jge
pop
mov
das
xchg
or
add
retf
leave
ins
jb
retf
bound
lds
(bad)
jge
lods
pop
(bad)
xor
inc
inc
retf
retf
in
cmp
mov
bound
rcl
ins
out
xor
and
int3
jb
sbb
int
cmp
pop
adc
(bad)
jge
imul
jb
inc
adc
int
dec
push
in
int
or
movs
cwde
sub
mov
dec
pop
out
xor
or
into
fsub
pop
jb
into
cmp
xchg
adc
(bad)
jge
fisub
das
mov
cmp
mov
sti
push
test
fidivr
or
loopne
cmp
ja
adc
fnstenv
dec
call
pop
retf
jae
push
cwde
or
outs
sub
into
test
fld
enter
push
adc
xchg
or
lock
sbb
leave
fisttp
fnsave
out
or
fmul
pandn
add
fild
sbb
inc
push
nop
mov
or
jl
or
nop
and
xchg
add
fsub
pop
sub
jmp
push
mov
push
xor
jmp
or
cmp
clc
arpl
mov
(bad)
dec
es
cs
sbb
ret
in
stos
test
pop
adc
fld
out
das
sar
and
jb
fdiv
xor
js
movs
sub
mov
ss
jecxz
or
sub
mov
es
or
test
mov
mov
sbb
jb
loopne
fstp
jmp
adc
aaa
es
xor
or
jl
mov
cmp
pusha
stos
int3
pop
(bad)
aas
jbe
add
out
enter
and
fabs
or
jle
sub
fcom
popa
mov
popa
mov
add
or
cmp
sbb
sub
call
mov
loopne
or
push
(bad)
cmps
das
clc
inc
je
fst
int3
and
pop
jg
sub
add
fsubr
out
mov
sbb
shr
in
cmp
xor
and
xchg
pop
pop
xor
jmp
sbb
bound
test
add
bound
pop
ret
ret
cmp
and
jb
jns
movntq
call
sub
and
or
ja
dec
add
sti
sbb
and
jns
je
sub
inc
sbb
adc
adc
outs
ret
jb
sbb
cmc
cmc
call
add
enter
sbb
into
add
clc
scas
aad
push
and
add
mul
adc
mov
pop
mov
xor
pop
enter
cmps
add
in
fsub
push
mov
les
mov
mov
cmp
cs
aaa
fdiv
add
sub
test
test
xchg
jecxz
iret
call
cmc
imul
adc
add
or
xor
inc
push
mov
les
cmp
je
mov
idiv
inc
in
out
pop
add
xor
and
pusha
int3
adc
mov
add
cmp
push
das
(bad)
add
fistp
dec
jmp
sbb
push
mov
stos
sub
retf
inc
mov
sar
jbe
mul
sbb
mov
ret
aas
addr16
adc
int
sub
and
push
sub
and
push
push
push
mov
les
inc
call
or
pop
aas
jmp
adc
ins
(bad)
ficomp
outs
jo
push
push
xor
outs
movs
or
imul
push
dec
aam
aas
mov
pop
or
fadd
out
btc
(bad)
sub
push
aam
cmps
mov
fsubrp
push
mov
aaa
and
and
movs
pop
sbb
or
or
enter
inc
inc
or
imul
sahf
and
or
jl
cmp
jg
inc
jmp
add
int3
es
pop
ret
ins
mov
jne
imul
cmp
push
pop
inc
jo
jge
aas
sbb
test
cmp
lock
cld
js
movsx
in
jle
push
pop
adc
loopne
push
dec
sti
dec
push
fsubr
inc
pop
das
or
mov
add
lock
mov
mov
int
lods
cmp
xor
ror
dec
hlt
fcmovb
push
sbb
pop
idiv
(bad)
pop
lea
ret
mov
rcl
cld
loopne
mov
sbb
cmps
add
retf
sub
lea
sbb
pop
dec
push
jb
cdq
sbb
ror
cdq
mov
adc
jmp
push
or
daa
loopne
sbb
and
fild
sub
jo
push
sbb
push
xlat
add
sbb
jmp
lock
xchg
and
mov
jo
or
cld
pop
push
cmp
jle
sub
jmp
icebp
xchg
movzx
mov
pop
fbld
add
imul
dec
and
and
xor
out
imul
mov
fisubr
pop
xor
push
pop
ficom
jmp
mov
mov
jmp
cmps
fstp
adc
call
ja
mov
add
dec
sbb
cmp
sti
std
sub
inc
push
adc
lock
hlt
jne
call
outs
aas
nop
push
push
retf
or
les
adc
in
mov
adc
jp
xor
outs
out
fldz
add
or
or
or
cmps
push
push
add
and
xor
push
push
jmp
pop
push
push
push
push
add
or
mov
xor
dec
mov
loop
dec
ds
xchg
loop
loop
mov
mov
mov
in
inc
adc
push
sbb
mov
push
cmp
xor
or
cmp
mov
clc
jge
inc
mov
retf
and
sub
cmps
push
pop
push
push
or
fs
outs
jnp
and
push
das
stos
dec
mov
mov
jle
jge
cmp
adc
fwait
mov
jle
jge
clc
fnstenv
fcmovnb
in
and
repnz
jle
mov
bnd
das
inc
add
pop
jmp
mov
or
popf
rol
xor
sbb
sar
inc
mov
shl
sub
adc
cmp
or
sbb
cdq
add
arpl
mov
popf
mov
mov
jl
or
fimul
pop
in
mov
or
xchg
std
div
xchg
add
jle
int3
adc
xor
scas
sbb
(bad)
je
mov
rol
es
and
sub
jg
jl
inc
add
psubw
push
jmp
cs
call
iret
es
xchg
ja
in
xor
ror
add
mov
adc
jge
jns
mov
mov
cmp
(bad)
retf
lock
lea
sub
mov
inc
call
sub
sbb
push
mov
popa
imul
idiv
std
jg
inc
inc
xor
imul
add
dec
or
imul
sub
cld
inc
mov
(bad)
jmp
mov
or
mov
jmp
ss
or
loopne
sub
mov
jo
inc
sub
add
adc
cdq
xor
lds
jne
rcr
aam
mov
cmp
inc
ss
sbb
jl
(bad)
dec
adc
add
xchg
jo
xchg
(bad)
in
add
xor
cld
jg
xor
fs
push
sbb
enter
lock
call
inc
and
push
dec
inc
inc
fldcw
sbb
and
dec
inc
daa
sbb
jno
sbb
mov
cs
out
or
sbb
xchg
push
xor
jge
inc
dec
push
inc
neg
neg
sbb
dec
xor
mov
sbb
out
push
loope
sbb
(bad)
jo
adc
xor
ret
shr
rcr
(bad)
fcomi
inc
push
test
adc
pop
mov
sbb
push
dec
xchg
lods
bound
iret
fst
mov
sbb
xchg
lock
sbb
aas
test
in
dec
jns
jmp
inc
xor
loope
out
popa
dec
js
ret
xchg
or
sbb
jmp
adc
push
mov
pusha
iret
or
call
loope
inc
bound
ret
push
inc
cs
sub
and
mov
outs
imul
cmp
sub
push
cs
sbb
add
cmp
and
test
sub
mov
push
push
or
es
ret
mov
lods
dec
gs
cmp
and
dec
mov
sbb
jne
mov
push
cmp
inc
inc
jmp
inc
or
pusha
mov
(bad)
sub
dec
pushf
sbb
test
(bad)
pop
adc
push
clc
cmp
ins
std
lea
jle
icebp
addr16
inc
push
neg
pop
jecxz
pop
xor
es
or
je
jmp
outs
mov
mov
xor
pop
je
push
and
loop
cmp
push
push
and
test
mov
mov
mov
mov
mov
adc
xor
sbb
ret
dec
sub
nop
add
sbb
addr16
mov
ret
mov
loop
jl
sub
xchg
sbb
mov
dec
cmp
inc
push
add
sbb
push
pop
pop
jmp
inc
xchg
das
inc
inc
sbb
add
pusha
pop
fs
loopne
jbe
out
je
or
jne
dec
push
ret
inc
clc
inc
sbb
(bad)
ins
fdiv
dec
sub
fs
jl
in
dec
dec
jmp
aas
mov
push
inc
ds
add
js
inc
inc
es
je
xor
inc
lea
clc
and
or
push
push
lahf
and
xchg
add
cs
or
jmp
dec
pop
push
pop
add
or
js
in
mov
and
cld
jne
pop
sbb
pusha
jnp
or
xor
sbb
lea
sbb
adc
xchg
ret
cmp
add
int3
(bad)
and
jecxz
xor
adc
mov
sbb
fisttp
or
sbb
cli
xor
mov
add
pop
clc
ret
imul
or
jae
movs
inc
pop
js
stc
ss
lea
and
data16
mov
cmp
or
and
pop
mov
sbb
adc
add
sub
fwait
rcl
push
(bad)
fimul
jne
scas
clc
xchg
stc
repnz
inc
push
in
push
push
xlat
push
in
test
je
(bad)
call
push
ret
sbb
dec
xor
mov
movs
mov
ins
mov
div
inc
mov
das
clc
ret
cld
or
shl
push
lahf
xchg
xor
pop
mov
lock
ins
push
pop
shl
(bad)
call
cwde
sbb
mov
jmp
repz
pcmpgtb
adc
lock
not
xchg
outs
sbb
push
shl
ret
retf
pop
pop
repnz
fdivr
cmp
jne
nop
sub
imul
xor
js
ins
add
repz
sub
sbb
nop
dec
sbb
push
inc
cwde
jne
in
mov
aas
push
mov
cs
or
mov
aaa
adc
inc
(bad)
adc
lds
call
jmp
mov
nop
and
dec
rcl
cmp
mov
xchg
inc
jle
imul
xor
and
or
or
xor
(bad)
out
ja
pop
sahf
or
xlat
push
dec
cdq
ins
jne
shr
cmp
dec
push
fimul
mov
cmp
pop
inc
test
test
sti
sub
dec
cmp
jge
data16
pop
push
jne
dec
arpl
adc
jne
int3
add
cmp
and
cli
ss
mov
pop
and
jecxz
sub
out
int3
sbb
lds
mov
or
jle
push
cs
div
mov
aas
or
ja
pop
pop
lods
mov
(bad)
bound
popa
ret
pushf
fcom
push
cmp
or
shr
sbb
jp
hlt
fdiv
pop
xor
imul
push
xlat
or
xor
or
es
add
lahf
(bad)
cmp
aaa
sub
dec
mov
loop
adc
shl
sbb
jb
inc
jge
(bad)
xchg
xchg
cmps
cmp
push
hlt
cmp
je
mov
in
sbb
jle
push
(bad)
mov
xchg
adc
data16
pop
add
push
mov
fstp
pop
mov
mov
add
adc
sbb
mov
lock
jo
ret
int3
push
test
je
mov
mov
add
outs
cmp
cmp
adc
push
push
push
inc
mov
aam
js
sbb
ins
push
sahf
imul
cmp
aas
xor
sub
cmp
je
mov
(bad)
xlat
push
sub
fsub
ins
es
sbb
hlt
jecxz
jmp
lock
push
cmp
or
push
inc
and
clc
(bad)
push
pusha
in
je
push
ficomp
not
jl
jmp
lahf
adc
adc
fst
mov
sbb
jle
inc
lea
push
ins
jne
inc
xchg
leave
lds
mov
ret
cmp
fisttp
fisub
jmp
shl
aad
(bad)
int3
cmp
push
scas
sub
(bad)
push
xlat
push
int3
lods
arpl
and
mov
add
cmp
dec
mov
add
add
pop
mov
and
or
movs
inc
sbb
sub
xor
hlt
mov
leave
cli
je
stos
jmp
in
and
sar
cmp
(bad)
cmps
enter
jmp
sbb
pop
sbb
mov
adc
and
cmp
inc
test
inc
add
cmp
sub
cmp
pushf
data16
mov
cld
push
(bad)
in
int
mov
and
sbb
sbb
mov
and
or
ret
jbe
movs
add
fadd
daa
ins
pop
push
sbb
daa
daa
daa
adc
ss
pushf
fsubr
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
cmp
adc
xchg
dec
es
mov
xchg
cwde
pushf
aaa
cdq
fs
mov
les
xor
cwde
add
mov
enter
or
xor
xor
jne
push
mov
and
movs
cdq
sbb
nop
inc
and
movs
movs
or
div
mov
dec
retf
xchg
cmc
inc
int
push
xor
cmp
shl
(bad)
cmp
je
inc
dec
jne
je
nop
inc
sub
out
or
sbb
xchg
dec
xor
add
mov
mov
or
ret
test
jl
add
jmp
mov
fwait
out
and
mov
xor
adc
rol
jno
dec
repz
xor
push
cmp
pop
repz
push
mov
jmp
adc
shl
iret
sar
mov
mov
inc
inc
cmps
push
jmp
sbb
or
out
jns
fmul
ret
fmul
pusha
mov
fisttp
fsub
pop
cwde
pop
and
call
test
test
repz
and
xchg
add
push
cmp
and
dec
fdiv
in
leave
pop
icebp
push
jns
sub
out
jno
mov
mov
xchg
arpl
lea
sub
xor
mov
fiadd
push
mov
or
dec
cmp
(bad)
push
loope
fstp
inc
sbb
clc
sub
cmc
movs
icebp
jnp
sbb
add
mov
scas
inc
fmul
or
add
xor
sbb
sbb
dec
cmp
dec
jnp
dec
add
aas
repnz
shl
inc
inc
call
test
jo
push
mov
or
add
shl
shl
mov
mov
out
call
adc
add
add
or
das
adc
or
mov
dec
inc
and
cmps
call
fnsave
lea
mov
xor
nop
push
lahf
mov
es
or
lods
fwait
test
stos
cmp
sub
mov
in
push
dec
loop
leave
lea
arpl
mov
cwde
sub
ss
sub
push
cmp
lea
sbb
jne
scas
ret
clc
mov
mov
test
or
js
(bad)
nop
imul
cmp
or
and
das
pop
leave
mov
imul
cdq
or
and
das
sti
add
cmp
dec
xchg
imul
or
aaa
cmps
adc
cmp
mov
(bad)
shl
fxch
mov
das
fld
mov
sbb
adc
nop
xchg
popa
(bad)
lods
loopne
sub
ds
xchg
xor
jecxz
faddp
or
popf
jbe
jmp
cmc
jle
pop
add
or
or
stos
mul
dec
push
add
adc
ins
mov
lock
enter
rol
adc
and
lods
inc
adc
inc
or
sub
loopne
sub
dec
cmp
and
adc
and
pop
or
test
cld
mov
fwait
jb
push
fidivr
push
or
mov
iret
lea
sbb
mov
daa
sbb
lods
or
dec
test
loopne
push
test
mov
sub
enter
cmp
adc
fst
movs
shl
(bad)
daa
popf
(bad)
aaa
or
mov
jmp
mov
int
pop
fdivr
jmp
and
mov
lea
lock
sbb
or
cmps
adc
js
stos
mov
loop
lea
int3
loope
inc
adc
and
dec
adc
add
mov
xchg
enter
cs
or
ret
mov
or
in
add
inc
cmp
xchg
xor
cmp
push
js
xchg
gs
sub
call
cmp
cmp
cmp
cmp
cld
ret
mov
rol
sahf
pop
mov
inc
neg
jne
dec
xor
and
out
jle
test
retf
push
inc
add
dec
jge
mov
add
movs
jl
loope
ret
and
inc
xchg
ret
imul
push
push
push
add
xchg
test
or
adc
gs
mov
jb
cmp
mov
cli
test
out
mov
dec
sbb
xor
push
mov
movs
nop
fsubr
(bad)
mov
cli
cmp
imul
sub
cld
mov
jbe
push
pop
or
or
sub
sbb
es
or
sub
inc
xchg
mov
ror
movs
outs
cdq
mov
mov
ja
push
or
iret
rcl
test
mov
shr
aaa
sti
and
xchg
xchg
mov
mov
movs
fild
push
and
ret
jnp
mov
dec
cmp
enter
jb
sti
push
push
mov
adc
test
cld
into
ds
or
je
inc
mov
in
rol
push
add
cmp
cs
mov
cs
or
and
and
loopne
jp
jb
push
mov
sbb
(bad)
les
pop
dec
icebp
adc
sbb
fwait
mov
xor
test
xchg
(bad)
outs
in
mov
pushf
jnp
int
ds
cdq
loopne
dec
es
data16
loop
hlt
pop
or
enter
cmps
and
cmps
loop
adc
cdq
adc
cs
outs
adc
dec
(bad)
test
push
xadd
and
pop
and
sbb
adc
push
repnz
push
sub
mov
rol
ins
mov
pop
jl
dec
jno
jmp
push
nop
or
adc
adc
inc
ds
push
shl
pop
sbb
int
in
je
pop
and
xor
pusha
jno
rol
pop
cdq
xchg
gs
sub
push
hlt
jmp
jnp
popf
push
fs
pop
in
inc
scas
sahf
xchg
icebp
ins
je
out
sahf
cli
mov
test
je
cmp
jae
inc
in
push
rcl
(bad)
imul
in
pusha
imul
mov
or
xor
add
loopne
dec
mov
sub
test
inc
cmp
add
adc
ins
jbe
test
dec
or
jl
cdq
neg
or
stos
stos
push
stos
pop
pop
mov
jo
sub
ins
jae
sub
movs
add
in
adc
mov
add
popf
ins
test
inc
fs
lock
dec
or
inc
lea
pop
test
outs
push
les
retf
loopne
sbb
pop
rcl
inc
inc
mov
loop
ror
test
add
mov
jmp
(bad)
cdq
ins
pop
and
mov
out
gs
aaa
mov
inc
stos
sub
in
cmc
mov
stos
jbe
dec
mov
add
out
cmp
fmul
or
sbb
sbb
jae
je
cmp
sub
es
inc
jae
xchg
test
(bad)
adc
jns
movs
cs
push
pusha
xchg
and
add
sub
lock
adc
rep
stc
add
aam
mov
jle
mov
sub
dec
stos
and
pop
inc
xor
ror
je
lock
aam
xor
cmp
ror
push
mov
inc
hlt
cmp
stos
sub
sbb
out
and
adc
not
dec
pop
popf
and
mov
and
mov
out
push
ins
mov
and
lock
inc
jbe
mov
adc
or
lock
retf
xor
ret
int
lock
je
mov
inc
lds
and
popa
and
mov
dec
mov
adc
test
pop
add
mov
inc
and
call
(bad)
xchg
aam
nop
data16
cmps
inc
add
pop
push
cmp
mov
pop
clc
pop
add
or
xor
inc
lock
loopne
adc
inc
mov
xchg
inc
mov
shl
jae
cmp
mov
out
add
mov
iret
in
sbb
int3
jge
pop
loopne
inc
mov
add
movs
xor
into
out
or
pop
lock
push
iret
and
push
jo
add
and
into
sub
adc
xchg
cld
mov
dec
and
call
inc
pop
scas
shl
mov
rol
(bad)
mov
(bad)
or
es
popa
in
out
dec
ds
or
and
mov
push
adc
push
fadd
repnz
cmp
inc
in
lock
cmp
nop
push
lock
cmp
and
and
mov
xor
clc
sbb
nop
lock
pop
jle
cmp
cs
jmp
inc
pop
adc
fdiv
cmp
lea
bound
jg
adc
dec
push
inc
adc
mov
leave
jne
pop
cmp
in
sub
outs
pop
pop
sti
scas
and
mov
cmp
ins
inc
cs
jg
xchg
or
ss
cmp
je
or
jl
test
je
mov
add
sbb
sbb
add
or
mov
jmp
fldz
call
push
addr16
add
jecxz
add
add
fild
dec
xor
mov
ja
add
adc
or
push
mov
xchg
push
jecxz
push
push
cmp
fnstcw
jmp
dec
pop
repnz
cmp
add
cmp
xor
fisub
jp
pop
or
add
xchg
jnp
cmp
xor
sbb
mov
mov
sbb
mov
or
add
or
add
sub
int
inc
(bad)
mov
push
in
adc
mov
pop
and
sub
dec
cld
retf
adc
imul
cmp
mov
jne
mov
lea
cmp
mov
cmp
loopne
cmp
fidiv
pop
xor
mov
es
cmp
add
add
xchg
push
outs
ins
enter
sub
add
cmp
or
call
dec
add
mov
mov
out
mov
popf
inc
cs
dec
push
neg
es
jbe
jl
cdq
call
sti
inc
push
mov
push
or
add
and
test
test
(bad)
push
add
xchg
xor
xor
xor
inc
es
xchg
shl
push
push
aam
xor
adc
mov
mov
mov
sysexit
xor
loope
adc
mov
push
pop
mov
aam
sub
push
repz
out
or
adc
mov
shl
(bad)
push
out
cli
ins
rol
pop
jmp
pop
or
mov
push
pop
push
adc
pop
test
pop
test
adc
cmp
ret
fcomp
push
inc
aam
xor
pop
lods
outs
div
das
int3
imul
dec
call
retf
in
jmp
jl
addr16
out
jge
lods
ror
add
dec
inc
add
adc
sub
call
sub
ins
fucomp
jmp
and
cmp
nop
or
lods
mov
sbb
sar
push
inc
adc
pop
add
nop
in
xor
neg
dec
pop
mov
ss
fs
cmp
and
and
adc
pop
clc
lock
inc
enter
dec
mov
js
inc
or
fwait
add
je
xor
xchg
dec
and
add
cmps
mov
ins
and
sub
enter
pop
sbb
dec
fwait
push
inc
pop
das
mov
neg
sbb
jecxz
cmp
jg
ret
jo
dec
pop
js
shl
cmp
sti
mov
out
in
and
imul
or
out
add
mov
inc
mov
push
lds
ret
add
adc
inc
daa
(bad)
jg
ja
pcmpeqd
test
mov
xchg
add
and
dec
shl
movsx
icebp
dec
nop
fcmovnb
and
jg
movs
mov
or
jbe
mov
ret
adc
cld
add
dec
shrd
xor
cmp
push
ss
jl
cmps
inc
call
push
sti
fadd
add
ins
add
add
out
adc
in
dec
adc
mov
(bad)
sub
or
pop
or
pop
mov
xchg
push
push
add
mov
pop
xor
shr
call
xor
jo
cmp
mov
inc
out
and
jg
shr
jp
pop
sbb
js
jg
jg
lds
inc
jmp
cmp
fidivr
ror
(bad)
lock
mov
sbb
loop
mov
popa
or
xor
jbe
push
shl
and
jg
lods
jb
mov
dec
dec
inc
dec
pop
aaa
inc
repnz
or
or
xor
add
daa
adc
adc
pop
stc
mov
mov
sub
xor
mov
fmul
jb
jbe
xor
jge
es
and
adc
cmp
add
jge
(bad)
or
das
cmp
pop
sub
mov
mov
or
mov
push
loopne
xor
xchg
sub
jp
sub
jge
mov
jo
jae
or
and
or
popa
push
mov
pop
xor
add
lods
mov
add
mov
and
adc
jo
je
or
xor
or
adc
rol
jne
cmp
or
inc
sbb
xchg
aam
test
ror
mov
mov
push
push
push
ins
add
jmp
ins
cmp
arpl
add
cld
jl
xor
mov
or
mov
rcr
inc
cmovae
push
xchg
mov
sbb
inc
mov
ds
ins
outs
mov
pop
or
pop
data16
dec
js
mov
ja
mov
cmp
popa
je
inc
je
dec
leave
psubusb
inc
xor
xor
ds
inc
pop
dec
ins
and
repnz
dec
xchg
push
(bad)
xchg
pop
dec
inc
sub
mov
adc
repz
adc
fstp
xor
inc
call
dec
add
push
pop
clc
fstp
or
data16
push
jns
add
mov
add
jnp
or
add
data16
inc
test
pushf
xor
cld
cli
jo
push
inc
pop
sbb
jmp
lock
retf
clc
lea
or
ins
repz
add
or
push
or
or
fsub
add
shr
shr
or
mov
sti
test
or
bound
scas
push
clc
xchg
and
jb
sub
or
je
call
in
inc
or
inc
adc
outs
add
(bad)
int3
cld
push
push
call
js
inc
test
mul
push
inc
add
xchg
or
jg
or
mov
shr
cmp
mov
loope
push
adc
or
mov
add
mov
jp
adc
dec
xor
pusha
cmp
adc
(bad)
sbb
or
(bad)
cmp
adc
rol
dec
rol
dec
gs
xchg
dec
loope
pop
cdq
inc
xchg
sar
es
fidiv
add
ret
lds
iret
jbe
mov
fild
jle
adc
mov
or
lods
test
dec
sbb
sti
pop
stos
sbb
cs
sub
or
test
sub
sbb
test
mov
pushw
or
sbb
test
sbb
cmpxchg
inc
jbe
add
pusha
in
fwait
inc
in
ds
rol
cmp
popa
and
pop
lock
jmp
mov
pop
daa
outs
shl
push
push
add
or
jmp
pop
add
xor
xchg
and
pop
push
mov
ds
jp
add
dec
test
inc
pop
pop
or
int
dec
inc
push
adc
xor
sbb
jg
jo
sbb
xor
adc
pusha
push
sub
jmp
mov
imul
jo
sbb
jbe
lods
jmp
xchg
rcl
xor
sub
add
sbb
add
dec
mov
int3
xchg
mov
shl
movs
mov
sub
cmp
jmp
or
(bad)
js
adc
out
cdq
xchg
or
adc
mov
rcr
adc
push
rol
pop
push
(bad)
mov
xchg
dec
jo
les
out
add
mov
enter
retf
into
repz
push
sbb
loopne
jne
sbb
dec
loopne
xchg
outs
jmp
sbb
adc
xchg
jmp
mov
icebp
adc
ret
pop
mov
jg
je
sbb
popa
and
test
adc
or
in
ficomp
es
push
sti
iret
sbb
cmp
inc
fidivr
ret
jmp
sub
mov
add
adc
push
test
and
sahf
mov
xor
inc
je
or
ror
enter
neg
mov
add
jge
test
aas
or
adc
and
jmp
out
mov
mov
(bad)
xor
jecxz
hlt
mov
mov
adc
mov
sbb
cmp
int3
(bad)
clc
ja
loop
xor
pop
lea
mov
mov
enter
add
ja
jmp
jbe
loopne
pop
clc
xor
ss
inc
stos
shl
xor
add
loope
(bad)
inc
imul
adc
test
and
mov
or
es
dec
call
pop
sub
push
in
jle
add
gs
mov
jl
add
aas
cmp
add
mov
adc
and
or
xor
xchg
mov
or
je
push
push
push
int
push
inc
imul
dec
icebp
or
pop
cld
cmp
imul
dec
mov
nop
sbb
jmp
pop
add
movs
cdq
pop
dec
or
call
add
add
clc
popa
or
jge
inc
loopne
hlt
imul
sbb
add
push
sub
sbb
sti
sbb
or
and
add
je
cmps
sbb
or
sbb
stos
add
pop
fld
add
pop
fst
sahf
jle
sahf
inc
mov
mov
shl
add
and
mov
jae
pushf
xchg
xchg
mov
gs
call
call
adc
jbe
or
xor
cmp
mov
jb
sbb
push
or
dec
(bad)
or
pop
mov
sbb
arpl
inc
or
je
push
and
sub
pop
shl
xchg
jl
(bad)
xor
(bad)
out
clc
je
inc
je
sar
jge
out
mov
fild
rol
adc
addr16
je
fcom
movs
jl
rcr
push
sub
test
gs
push
mov
in
mov
adc
sbb
sti
shr
(bad)
ds
inc
sub
xchg
(bad)
or
inc
adc
cdq
cmp
mov
push
jne
ins
das
push
mov
(bad)
lea
cli
lahf
popa
jg
add
cmp
jg
retf
sbb
mov
aas
jecxz
mov
xor
and
xor
inc
pop
rcr
sbb
es
loope
out
push
inc
and
or
mov
or
pop
jb
jp
or
jge
xchg
pop
out
mov
stos
jl
mov
dec
mov
scas
pop
lods
and
aad
shl
push
mov
cmp
int
lds
movs
jge
into
dec
popf
adc
and
xchg
mov
nop
ds
push
cmp
and
cmp
stos
add
shr
dec
ud0
(bad)
adc
cmp
adc
jg
adc
sub
push
push
jecxz
pop
inc
inc
cld
aaa
dec
rol
jmp
and
inc
not
test
je
or
stos
pop
inc
mov
lea
xchg
(bad)
adc
dec
pushf
xchg
loopne
dec
jmp
adc
xor
out
ja
call
jp
rol
repz
xor
mov
mov
push
es
mov
and
stos
push
xor
jne
pop
rol
mov
lock
in
push
lea
mov
das
add
je
dec
sub
or
(bad)
mov
js
mov
pop
inc
mov
mov
push
or
cmp
xor
add
mov
mov
cmp
pop
pop
push
or
push
or
push
dec
add
dec
adc
mov
push
mov
sub
fadd
cmp
or
push
push
pop
pop
pop
pop
sub
hlt
push
cmp
add
inc
out
(bad)
shr
idiv
add
mov
and
or
outs
xor
mov
pop
xchg
mov
cmp
addr16
stos
jmp
cmp
rcl
je
cmp
mov
or
push
mov
inc
stos
mov
test
jne
mov
cmp
mov
xchg
xor
add
cs
or
pusha
mov
pop
mov
push
mov
pusha
add
xchg
rcl
out
mov
sbb
mov
dec
ficom
loope
mov
mov
dec
mov
lea
retf
sbb
sbb
adc
pop
or
mov
enter
add
retf
mov
(bad)
mov
dec
jmp
adc
jo
mov
dec
push
pop
and
jmp
mov
fucomip
push
fisttp
retf
dec
imul
js
mov
or
je
mov
ret
cmp
ret
mov
dec
push
mov
call
inc
add
and
mov
movs
je
jl
mov
pop
jmp
loopne
call
and
inc
sub
xchg
adc
add
or
je
jle
mov
and
int
sbb
adc
mov
or
mov
(bad)
fistp
inc
sub
jecxz
pop
mov
leave
add
or
clc
sbb
sub
imul
js
scas
or
or
add
push
xlat
ret
les
mov
fstp
dec
movs
hlt
or
and
xchg
xor
sub
mov
or
add
popa
xchg
dec
inc
movs
push
inc
xchg
bound
cmp
cmp
ret
or
xchg
in
je
cmp
jne
push
inc
inc
gs
loope
push
inc
sbb
xchg
shl
add
and
loop
stc
dec
loop
jmp
cmp
or
pop
xchg
mov
loop
loop
cmc
sub
movs
jg
mov
retf
sub
and
mov
add
lea
(bad)
cmp
mov
adc
loope
fbstp
add
fs
in
mov
or
mov
adc
or
pop
adc
or
mov
mov
bound
cs
cwde
(bad)
inc
xchg
je
pop
jmp
and
sbb
pop
adc
dec
add
pop
sub
xor
inc
sbb
cmp
fsub
test
cmp
in
xchg
ss
(bad)
je
sub
mov
(bad)
shr
and
xor
push
dec
in
(bad)
in
call
test
mov
in
vpunpcklbw
push
popf
pop
jg
sub
inc
int3
push
sbb
push
ret
hlt
mov
shl
jne
rol
arpl
mov
pop
je
pop
mov
sbb
sahf
or
inc
push
dec
and
loopne
shl
mov
jge
or
popf
mov
rol
dec
cdq
mov
lea
jnp
or
jg
mov
push
add
sbb
or
sbb
cmp
(bad)
push
or
pop
fnsave
mov
adc
cwde
sbb
mov
xchg
xchg
xchg
fist
sbb
or
lahf
xchg
sub
dec
mov
out
lods
movs
(bad)
mov
pop
idiv
test
cld
fiadd
mov
ja
sbb
cwde
or
add
mov
mov
or
ins
push
inc
cmp
js
or
pop
out
push
add
movs
add
ret
sub
mov
push
xchg
push
nop
into
inc
rol
retf
or
inc
and
add
cmp
rcr
and
inc
or
mov
lods
lods
add
pusha
das
sbb
mov
sbb
push
pop
adc
jg
fisub
mov
nop
hlt
sbb
jmp
pop
imul
and
(bad)
es
jmp
xor
les
sub
and
xor
pop
mov
jmp
andnps
pop
pop
rcl
or
xchg
cmp
aad
aas
cmp
and
sub
retf
sub
mov
adc
jge
push
aaa
je
pusha
outs
sbb
dec
add
test
lea
or
sub
and
test
add
mov
add
test
rol
jle
es
pop
leave
arpl
adc
sbb
fwait
pop
push
loope
adc
ror
and
ror
aas
or
add
and
mov
push
outs
pop
ins
test
daa
jp
cmps
mov
cmps
push
cld
mov
mov
cmps
mov
cmps
popw
mov
stc
cld
mov
lea
cmp
lods
push
sbb
cli
adc
sbb
outs
adc
pop
cmp
add
stc
movs
xor
add
cmp
jno
pop
adc
adc
neg
ret
xor
mov
(bad)
jp
test
fist
fdivr
pop
fwait
or
push
dec
das
je
not
sub
sub
(bad)
adc
sub
sti
aam
inc
jmp
mov
shr
push
jmp
sub
xor
dec
xor
jge
movs
mov
or
and
adc
and
fnsave
mov
jle
mov
inc
call
les
and
ror
cmp
adc
mov
lock
mov
cmp
sbb
aas
xor
cmp
dec
inc
cmp
je
hlt
cmp
sbb
mov
popa
outs
mov
push
test
push
and
inc
push
push
mov
inc
clc
es
pop
and
call
inc
adc
(bad)
dec
push
test
and
aam
mov
je
push
cmp
sub
popf
or
or
adc
inc
sbb
jo
(bad)
imul
ror
mov
stc
or
add
ret
enter
shl
mov
fcmovu
add
xor
rol
leave
add
aas
hlt
or
or
jo
pusha
adc
xchg
or
adc
lea
cmp
shl
or
call
and
adc
out
adc
lea
in
jge
push
cld
movs
movs
movs
xor
test
in
fwait
gs
cwde
(bad)
mov
movsx
and
cmp
ret
jecxz
or
mov
or
movs
pop
jg
cmc
dec
push
aaa
stos
in
adc
xchg
test
into
enter
sbb
add
rcr
adc
sbb
sub
add
jnp
(bad)
fs
pop
aaa
movs
xor
loope
call
and
cwde
cld
lock
je
cmp
push
aad
not
push
jne
cmps
or
mov
arpl
rcl
scas
sbb
pusha
mov
inc
adc
xor
outs
cdq
das
dec
jp
jae
(bad)
add
lods
jns
inc
mov
and
xor
inc
dec
or
lock
js
inc
mov
setns
daa
inc
stos
cmps
and
push
push
push
test
mov
or
sub
lods
fidiv
ret
movs
jb
stos
or
ret
dec
(bad)
or
fnstenv
mov
jg
(bad)
ja
mov
xchg
add
mov
dec
arpl
stos
cmp
or
ins
inc
loopne
push
pop
hlt
jmp
or
jl
jae
push
ja
add
int3
push
inc
jmp
(bad)
pop
dec
cdq
or
inc
inc
push
adc
out
and
xchg
jbe
and
call
adc
in
call
popa
outs
xchg
(bad)
out
add
mov
push
les
ret
xchg
enter
in
aaa
outs
dec
inc
dec
ds
jmp
shl
adc
das
sbb
pop
and
gs
push
out
mov
gs
int
push
cmp
jbe
push
inc
sbb
jns
aas
pushf
cmp
mov
clc
adc
frstor
xchg
ss
daa
fdivp
inc
aas
push
or
xchg
jo
idiv
and
loopne
dec
sub
rcr
jmp
out
or
and
fs
cmps
add
pop
ror
push
loopne
pop
push
gs
lea
jmp
and
inc
dec
loope
push
sbb
mul
inc
ss
push
adc
ss
inc
cmp
adc
cmps
je
cld
jae
mov
leave
in
dec
sub
test
cmp
hlt
stos
mov
or
je
mov
pop
mov
xor
push
mov
je
jb
mov
cmp
jb
cmp
ja
add
cmp
adc
pop
or
std
(bad)
cmp
sar
mov
adc
imul
cld
shl
test
into
leave
aas
dec
xor
sbb
mov
lods
xor
nop
and
ds
mov
shl
xchg
stos
and
movs
push
mov
jnp
and
lea
xchg
lods
mov
cmp
cmp
jg
add
or
jmp
dec
xor
mov
sub
sbb
sub
in
(bad)
jge
add
cmp
ja
push
pop
dec
jmp
cmp
enter
or
xchg
sbb
pop
add
into
jmp
mov
mov
mov
lods
jbe
mov
pop
cmp
sub
cmp
std
cmps
or
cmp
inc
jle
cmp
push
xor
aas
sar
(bad)
dec
xor
sbb
or
push
lods
jp
clc
movs
imul
add
push
jmp
scas
sbb
or
mov
inc
ins
cmp
shl
pop
jge
(bad)
mov
cmp
test
jns
xor
jbe
nop
add
jne
call
jae
imul
sbb
inc
test
stos
mov
xchg
and
test
xchg
add
clc
xor
stos
sub
and
pop
jns
stos
cmp
sbb
add
imul
add
push
and
push
stos
push
cmp
mov
stos
xchg
sbb
fsubr
mov
push
xor
aas
ret
je
test
fldenv
sbb
mov
(bad)
and
adc
add
and
mov
xor
pop
iret
mov
cli
and
lock
std
jecxz
test
or
pop
mov
xor
fs
dec
cmp
cwde
xchg
add
movs
test
cdq
or
test
nop
add
xchg
dec
sahf
add
(bad)
out
inc
xor
cwde
mov
pushf
cld
in
pushf
movs
mov
fs
retf
xchg
mov
movs
js
mov
pushf
cmp
(bad)
clc
enter
ja
jb
leave
add
enter
sbb
leave
add
xchg
xchg
fcomi
jns
mov
dec
ja
movs
fcomp
dec
push
imul
adc
sahf
and
push
out
je
test
push
and
sbb
sbb
jge
jle
retf
rcr
enter
loop
inc
ror
jns
out
push
rcl
rcl
aad
jns
out
xlat
fcomp
(bad)
add
pusha
fstp
xchg
mov
nop
xchg
icebp
(bad)
sub
push
mov
jmp
or
and
push
into
in
das
jno
inc
mov
cli
pop
lock
js
add
ficom
mov
add
ss
add
push
cmp
imul
pop
jecxz
sub
sub
popa
mov
test
jp
test
xor
adc
test
call
cwde
das
imul
sbb
push
push
dec
sbb
sub
add
adc
add
push
add
sbb
pop
test
call
imul
adc
jmp
js
je
add
xor
ds
mov
test
adc
mov
call
fist
into
jmp
sub
cli
out
or
retf
mov
das
jecxz
sub
mov
cmps
or
add
sar
fisub
addr16
pushf
mov
sar
sub
mov
or
cld
push
or
or
lock
push
sti
jmp
add
cmp
and
and
mov
pop
(bad)
sbb
xchg
jae
and
dec
xchg
or
inc
test
adc
into
push
push
jno
push
inc
test
push
in
jmp
jne
inc
inc
or
cmp
mov
adc
leave
retf
jne
inc
hlt
stos
rol
dec
lock
push
bound
dec
or
pop
mov
xchg
mov
mov
push
xchg
cmps
stc
(bad)
cld
imul
and
lea
cmp
shl
mov
cwde
cmp
and
data16
inc
inc
cmp
and
ror
add
jle
rcl
xchg
fnstenv
jnp
loopne
sti
lock
mov
add
cmp
cwde
and
xor
dec
ror
leave
dec
add
mov
push
retf
(bad)
(bad)
retf
inc
rol
test
sti
add
dec
bound
push
hlt
shr
xor
or
mov
shl
jmp
dec
sahf
dec
sub
inc
inc
lods
lock
inc
repnz
cmp
xchg
inc
cli
cli
inc
cli
test
fcomip
repnz
sub
mov
call
mov
jnp
mov
mov
movs
test
mov
xchg
add
sub
ret
mov
gs
and
push
mov
mov
int
dec
stc
dec
mov
add
sbb
lock
sub
je
pop
repnz
mov
loop
out
sbb
cmp
push
sub
enter
sar
outs
ret
xor
jne
inc
pop
aam
cmp
cmp
cmp
sub
repnz
jne
fdivr
aam
inc
and
or
jbe
dec
ss
sub
lods
dec
lea
adc
mov
or
adc
mov
fs
cld
lea
cmp
fnstcw
std
xchg
pop
ins
mov
mov
inc
sub
cdq
add
iret
idiv
sbb
push
data16
test
rcl
test
retf
lock
fs
add
out
or
jge
loope
sbb
inc
lock
rcl
movs
adc
add
jne
xor
push
jns
fnsetpm(287
loopne
lea
lods
dec
or
mov
or
bound
xor
sub
imul
mov
inc
mov
pop
icebp
popa
mov
add
push
nop
cmp
call
push
adc
adc
out
dec
sub
loopne
aam
leave
mov
popa
call
mov
push
shl
jbe
jne
sbb
neg
and
add
inc
imul
jmp
loopne
fisttp
xchg
fdivr
mov
push
and
push
mov
jecxz
adc
add
hlt
xchg
xor
out
cmps
clc
loope
mov
and
xchg
stos
dec
push
or
mov
add
sbb
or
and
into
or
lea
sbb
outs
inc
sub
ins
imul
push
mov
adc
mov
cmp
push
shl
xchg
enter
dec
int3
push
jb
or
sub
jne
cmp
sbb
(bad)
into
or
mov
inc
jmp
mov
dec
adc
hlt
jg
dec
mov
dec
cmp
jge
sub
cmp
daa
mov
cmp
pop
mov
dec
add
add
fadd
pop
add
mov
adc
mov
jp
jp
jne
dec
mov
jb
int
adc
pusha
xchg
mov
push
cld
sub
dec
and
add
push
add
mov
jbe
ret
adc
and
add
(bad)
dec
push
imul
test
sub
adc
aad
ret
retf
push
and
je
push
or
nop
inc
xlat
cmp
test
jno
or
dec
popa
mov
clc
jns
inc
nop
push
or
add
or
popf
jmp
pop
scas
add
fld
ret
cwde
sub
or
mov
sub
push
ret
or
xchg
adc
xor
mov
test
retf
movs
repnz
and
cmp
xor
into
pusha
aas
pop
push
sub
and
pop
cmp
nop
mov
jb
dec
mov
or
xchg
push
add
add
into
lock
ret
not
inc
push
pop
jae
or
add
add
add
ja
add
jl
aam
add
(bad)
mov
push
je
loope
popf
jmp
push
ficom
or
dec
pop
inc
shl
ins
add
adc
into
mov
xor
mov
mov
cmp
test
rol
cmp
jo
ror
scas
push
loopne
test
xor
daa
fldcw
add
cld
cld
xor
sub
sbb
inc
jo
push
xor
push
push
ret
add
mov
out
cmp
fxsave
lock
mov
ss
or
add
int3
dec
xor
or
adc
xchg
out
xchg
jle
lock
inc
pusha
mov
xor
inc
in
in
jg
into
into
into
aaa
xchg
mov
mov
pop
sub
mov
pop
nop
pop
cwde
js
sbb
xor
add
mov
loop
rcl
pop
jns
pushf
mov
pop
push
bound
inc
pop
call
add
leave
lahf
pop
test
inc
sahf
xchg
add
or
adc
imul
pop
sbb
je
and
jne
dec
xchg
xchg
adc
inc
(bad)
sub
in
rol
cli
cmp
leave
dec
retf
ret
jae
xor
add
jp
sbb
test
inc
stos
dec
dec
dec
push
dec
pop
retf
sub
add
lods
push
push
cmp
jl
cmp
add
push
ficom
outs
sbb
dec
dec
add
sbb
add
add
add
jle
jle
pop
push
test
movs
ret
stos
jp
pop
adc
add
xlat
jle
and
daa
or
int
and
adc
addr16
loopne
mov
jl
or
ss
stc
add
retf
jne
call
mov
sti
or
dec
sbb
xor
cmc
and
and
outs
adc
icebp
cs
(bad)
ins
push
sub
inc
or
mov
push
call
adc
xchg
and
dec
sub
add
daa
pop
fisttp
ds
je
mov
sti
sbb
call
mov
cmp
jb
cmp
jbe
inc
inc
(bad)
call
ret
xchg
jb
jle
fiadd
fild
push
mov
jo
xchg
(bad)
int
jbe
loope
shr
das
cmp
adc
or
(bad)
xor
pop
rcl
loopne
(bad)
mov
and
and
cld
adc
repz
adc
sub
mov
and
test
and
xchg
cmc
pusha
jmp
js
mov
test
loopne
iret
sub
xchg
pushf
dec
cmp
xchg
inc
or
shl
sbb
add
xlat
sub
push
leave
and
(bad)
repz
je
test
ja
test
xor
mov
ds
rol
or
(bad)
fcom
sub
inc
mov
enter
cmps
jge
jge
add
bound
sbb
xor
call
or
paddusb
mov
fmul
fstp
sbb
jmp
call
jnp
or
and
pop
jge
lea
imul
mov
imul
mov
je
and
xor
adc
pop
push
shl
push
enter
jg
and
mov
adc
adc
ret
or
ds
push
cs
jo
shr
sub
push
adc
cmp
jmp
ss
and
xlat
stc
test
scas
jp
mov
cmp
je
test
adc
xchg
sub
mov
loopne
ficomp
jmp
mov
or
nop
call
inc
cmp
jl
dec
stos
or
mov
push
stos
inc
inc
lods
mov
sbb
rcr
loopne
push
xchg
xor
jo
and
sub
sub
sbb
test
xchg
fsubr
pop
outs
loope
mov
cmp
push
or
les
or
mov
mov
jno
add
jg
mov
mov
cmp
xor
in
fidivr
push
test
push
cli
test
sbb
jb
xchg
jg
xor
inc
push
call
mov
sub
cld
add
nop
pop
jl
ror
jbe
push
pop
cmps
ss
int3
ror
cmp
adc
or
mov
mov
outs
or
aas
jae
fsub
pop
cld
push
sbb
push
jmp
dec
loop
ret
xor
add
ss
sub
jnp
js
ja
cli
xchg
dec
rcl
cld
lea
mov
push
pop
pop
xchg
stos
hlt
sbb
inc
push
dec
inc
ret
and
das
in
cmp
pop
push
das
test
sub
mov
mov
in
mov
inc
stos
xchg
enter
stos
sub
rol
(bad)
xor
js
fimul
and
xchg
or
jl
mov
sub
inc
mov
ret
xor
adc
xor
adc
add
(bad)
mov
imul
and
aaa
or
mov
mov
aad
mov
or
mov
xchg
mov
je
ret
shl
or
sti
adc
dec
jmp
and
cmp
or
pop
scas
xor
ds
push
aas
push
inc
bound
push
or
push
jmp
or
mov
adc
ret
lds
sub
pop
arpl
loopne
into
jmp
or
je
xchg
dec
mov
push
sub
and
(bad)
and
shl
push
ror
cmc
bound
aaa
ror
xor
iret
mov
xor
mul
retf
pop
dec
jne
and
mov
add
and
gs
mov
pop
mov
cmp
je
out
mov
adc
lahf
push
aam
xchg
pop
addr16
(bad)
outs
or
add
ret
movs
fstp
jmp
and
std
rcr
f2xm1
fimul
std
cmp
or
in
sbb
icebp
inc
repz
xchg
fld
sbb
loope
mov
imul
rcr
fsqrt
push
jmp
out
pop
fadd
pop
out
repnz
push
sbb
adc
dec
adc
iret
jle
sar
enter
or
sbb
sub
xor
(bad)
repnz
lock
or
clc
adc
add
xor
in
push
xchg
fisttp
add
fstp
push
sub
mov
adc
and
or
fidiv
loop
add
loopne
(bad)
pusha
popf
test
int3
add
mov
mov
and
ret
sbb
cvttsd2si
aaa
adc
sub
lea
scas
loopne
and
xor
fistp
mov
adc
fbstp
sar
fstp
adc
hlt
movs
rcl
leave
fnstenv
sub
das
dec
in
xchg
fcomp
adc
es
xchg
mov
lds
xchg
add
repnz
ins
push
fmul
repz
push
repnz
pop
push
add
int3
push
push
xor
push
add
or
adc
repnz
sahf
push
push
add
inc
mov
add
or
mov
test
add
cld
jnp
or
repz
xchg
add
sbb
ins
(bad)
std
xor
sbb
xchg
or
or
cmps
sti
and
ins
dec
pop
or
adc
(bad)
in
fsubrp
hlt
push
pop
mov
or
into
(bad)
add
pushf
pusha
idiv
push
jge
add
or
pop
cmp
inc
push
and
inc
adc
and
imul
cmp
fcomp
cmp
lea
int3
or
outs
pop
adc
cmps
ins
sbb
jmp
push
sub
dec
(bad)
push
push
mov
les
daa
adc
inc
push
push
push
add
imul
push
add
inc
fs
mov
lea
adc
push
ins
jo
adc
outs
call
push
inc
add
lock
ja
sti
xchg
retf
and
xchg
mov
mov
pop
add
xlat
int3
jle
mov
in
dec
adc
and
push
out
popf
nop
call
xchg
dec
cmp
sub
push
mov
in
mov
jle
jns
jne
mov
mov
add
inc
popf
mov
pop
or
retf
enter
adc
pop
add
jne
sbb
xor
xor
and
lahf
sub
add
jge
mov
jnp
xchg
add
mov
dec
add
add
add
js
mov
adc
lods
mov
sub
mov
or
xchg
scas
sub
adc
xchg
add
jl
es
and
lea
or
or
mov
dec
sar
pop
mov
cmp
(bad)
mov
mov
adc
cld
dec
cmp
je
call
sbb
cmps
mov
pop
rcr
cld
neg
push
or
mov
jne
sub
jns
add
push
mov
pop
cwde
test
sbb
lahf
ror
mov
test
cdq
xlat
jmp
push
add
and
outs
pop
jge
adc
sbb
mov
xor
cmp
stos
jne
std
jmp
push
jno
sbb
ds
jle
pop
or
add
sbb
inc
push
popf
xchg
add
xor
sub
test
pmuludq
cli
call
inc
pop
push
pop
pop
adc
jo
pop
les
adc
in
push
sahf
dec
pusha
xlat
push
push
mov
sbb
cmps
aas
jecxz
fs
xchg
es
mov
movs
cmp
push
dec
sar
inc
ja
sub
pop
pop
ret
pop
or
sbb
mov
add
bnd
dec
push
cli
cmp
add
adc
xchg
into
ins
(bad)
loop
inc
(bad)
outs
xor
nop
inc
add
jmp
push
mov
inc
mov
stos
adc
add
fiadd
dec
add
iret
je
nop
cmp
cdq
inc
cmps
stos
or
mov
mov
ins
inc
and
(bad)
icebp
outs
sbb
push
lahf
inc
pop
xchg
jb
ds
ret
test
in
mov
pusha
sbb
and
mov
xchg
mov
add
add
mov
and
add
jmp
stc
push
inc
repnz
je
pusha
push
sbb
pop
out
push
push
adc
jo
fldcw
xor
pop
rol
je
stc
mov
je
push
das
sub
pusha
call
jo
sbb
loope
in
ret
into
xlat
ds
or
push
into
inc
in
lods
pop
add
dec
rcl
mov
mov
or
scas
xchg
adc
push
data16
inc
jle
jl
out
or
shl
call
in
nop
in
out
aam
pushf
pop
mov
fwait
cmp
inc
or
jne
imul
sbb
mov
ss
test
movs
jnp
push
jnp
mov
add
push
push
push
xor
inc
push
jb
cmps
jge
adc
loopne
out
jecxz
sub
(bad)
xor
shr
push
leave
push
jb
inc
add
mov
cmp
push
mov
sar
and
and
or
push
mov
into
cmp
je
add
xor
pushf
jmp
and
dec
and
je
inc
adc
outs
adc
xchg
add
cdq
std
jns
in
test
or
adc
xchg
inc
push
mov
dec
push
mov
push
test
pop
adc
mov
sar
lock
fdivr
inc
push
in
xchg
sbb
or
test
loopne
pop
xor
cwde
xor
ret
push
les
movs
push
pushf
inc
pusha
cwde
sbb
inc
ins
or
sbb
pop
pop
add
add
mov
hlt
icebp
sub
push
adc
ds
inc
rol
ret
push
add
inc
test
loop
and
clc
les
push
fldz
cmps
clc
jle
push
inc
jnp
sbb
je
aam
scas
mov
pop
adc
aam
nop
or
xlat
mov
das
cmp
xor
mov
cmp
mov
in
test
or
xor
xor
scas
inc
loopne
js
jne
pusha
add
daa
test
outs
addr16
cmp
ret
push
iret
adc
cli
ret
es
fld
xor
test
jle
out
test
inc
cmp
mov
mov
xor
mov
mov
mov
fidiv
aam
fwait
cmps
mov
inc
add
push
xchg
push
sub
mov
or
mov
add
shl
movs
ins
dec
repz
inc
cs
cwde
sub
sub
fild
cmp
jle
jecxz
call
test
stc
adc
ret
add
(bad)
sbb
(bad)
mov
ins
popf
mov
xor
add
jbe
add
jle
push
scas
add
ss
fadd
and
or
push
out
add
xor
addr16
ins
add
add
dec
neg
xchg
jns
jae
jnp
es
dec
push
push
jmp
jge
adc
add
mov
dec
push
and
inc
fdiv
dec
imul
adc
or
pop
es
mov
pop
inc
or
or
call
addr16
lods
push
mov
fs
sub
xchg
fisttp
xor
push
mov
ins
add
or
movups
mov
pushf
xchg
push
push
push
loopne
mov
mov
adc
jle
mov
add
add
dec
outs
sub
xlat
add
loope
xor
or
inc
pop
sti
test
add
sub
jo
xor
sbb
xor
mov
scas
inc
cmp
dec
stc
es
xor
(bad)
call
test
test
loope
cmp
loopne
scas
sahf
jne
pusha
or
jle
es
jmp
inc
and
dec
or
icebp
push
push
push
xchg
inc
dec
pop
and
ins
clc
bound
in
dec
mov
cmp
rol
out
mov
outs
inc
ja
pop
pop
jbe
add
stos
add
inc
dec
push
rol
jne
pop
pop
pop
push
lods
cs
js
stos
mov
xor
je
pop
mov
pushw
ret
mov
mov
arpl
ret
ret
sub
or
add
cmp
jbe
pop
xor
push
cmp
lock
(bad)
mov
adc
cmp
sub
les
push
push
add
push
dec
lea
pop
pop
sub
pop
cs
xor
bound
mov
nop
mov
push
shl
inc
xchg
push
mov
pop
or
mov
inc
inc
mov
test
push
clc
add
ret
push
mov
mov
push
sbb
iret
pusha
add
(bad)
shl
jl
ror
inc
lahf
fstp
jl
jg
imul
and
mov
add
xchg
and
ficomp
jg
mov
adc
ins
or
and
je
sub
mov
mov
add
inc
jno
inc
xchg
test
je
add
push
push
jle
call
add
pop
test
lock
inc
mov
pop
fbstp
je
or
das
mov
scas
xchg
les
(bad)
bound
dec
inc
or
and
aam
add
in
mov
inc
push
outs
xor
jmp
xchg
jbe
addr16
xor
mov
addr16
inc
inc
test
sbb
lock
mov
or
add
jmp
shr
(bad)
cld
mov
adc
movs
and
loopne
imul
jbe
inc
aaa
popf
add
adc
ja
into
or
scas
and
add
inc
inc
mov
mov
or
outs
fisubr
fsubr
js
enter
mov
add
adc
dec
and
test
and
mov
(bad)
int3
sbb
jmp
or
cmp
fild
jne
inc
cmp
sbb
cmp
pushf
jecxz
cmp
das
imul
enter
repz
mov
aaa
dec
mov
ret
push
dec
shr
push
and
push
push
in
push
movs
(bad)
lods
adc
and
adc
mov
mov
cmp
dec
xor
pop
inc
adc
mov
inc
imul
lods
or
sbb
mov
shr
jmp
bound
sub
mul
dec
push
inc
sub
int
cmp
dec
test
push
push
pop
or
sub
add
repnz
cmp
mov
fidiv
cmc
mov
mov
sub
cs
aas
jp
lods
mov
mov
pop
iret
not
xor
aad
inc
mov
data16
mov
frstor
xor
fld
sbb
cmp
test
mov
xor
add
adc
xchg
cmp
fwait
scas
fsub
test
mov
fld
lea
repnz
js
and
pop
jnp
inc
cmp
jmp
sete
sub
out
out
sbb
add
pop
push
lock
jp
sub
inc
and
xor
mov
sahf
test
mov
jl
shr
cld
call
sbb
icebp
mov
test
int3
push
xor
repz
and
cmp
outs
ret
test
lods
cmp
cld
inc
das
jmp
mov
inc
test
jno
cmps
and
xor
or
adc
enter
mov
dec
jl
sbb
jo
xor
mov
push
add
cmps
stos
pop
test
adc
sbb
dec
mov
(bad)
lods
xchg
inc
sub
test
add
popa
aad
mov
and
retf
dec
cmps
ja
out
adc
add
dec
inc
push
ret
js
xor
(bad)
mov
sub
sar
mov
out
test
push
xchg
idiv
lea
jmp
cmp
jg
mov
adc
xchg
lea
cmp
xor
mov
sub
rol
sub
loopne
push
push
repz
lea
xor
test
ins
repz
pop
jmp
das
push
and
outs
fld
rol
or
mov
ror
and
xor
xor
xchg
mov
adc
xchg
and
mov
daa
jp
xor
pop
jbe
test
add
add
pop
mov
xor
inc
repnz
mov
es
lods
mov
or
inc
jae
push
inc
xor
xchg
dec
mov
ret
push
mov
push
imul
les
inc
mov
cmps
mov
mov
xchg
rcr
sar
adc
or
mov
sub
sar
mov
retf
loop
push
push
mov
push
push
cmp
pop
mov
sbb
mov
addr16
sub
mov
mov
push
jne
sbb
dec
popa
shl
stos
test
ds
lods
stos
inc
sub
cdq
nop
pusha
push
movs
inc
add
imul
inc
and
cmp
sbb
sub
fdiv
fsubr
pop
adc
push
or
add
pop
push
pop
or
mov
loope
sbb
mov
and
mov
and
call
mov
add
mov
inc
adc
sub
xor
out
not
xor
mov
jbe
mov
inc
sahf
dec
xchg
xor
mov
js
mov
cmps
sbb
or
mov
ret
loop
push
aas
shl
rcr
pop
inc
test
inc
sub
pop
dec
and
push
push
call
inc
loop
mov
push
ds
cmp
fstp
add
mov
sub
es
dec
pop
pusha
test
pop
xchg
movs
xor
sub
enter
(bad)
dec
mov
mov
jae
ds
int
test
cmp
push
je
cmps
test
clc
je
fdiv
pusha
jo
leave
lods
jno
xlat
dec
lea
inc
mov
test
inc
add
add
nop
add
fcom
pop
in
cwde
inc
test
mov
mov
push
test
push
pop
sub
pop
mov
mov
sbb
daa
inc
sub
inc
pop
ds
lock
cdq
jne
xchg
lods
push
pop
and
mov
out
int
and
inc
nop
retf
mov
not
into
test
push
cmps
dec
cmp
fs
in
popf
test
dec
sti
stos
dec
cmp
mov
cwde
adc
dec
push
mov
mov
mul
add
aam
adc
rcl
out
out
test
jle
enter
sbb
or
jns
pop
and
cmps
sbb
cmp
xor
cmp
and
sbb
cmp
mov
repnz
mov
jb
inc
or
dec
sbb
gs
icebp
pusha
imul
pop
sub
fdiv
jne
xchg
push
in
in
jo
(bad)
mov
sub
fs
test
jne
add
add
sbb
push
dec
(bad)
mov
adc
shl
fadd
push
push
add
and
js
gs
mov
add
inc
outs
mov
aaa
dec
adc
ret
push
inc
pop
(bad)
or
cmp
and
adc
and
or
stc
and
(bad)
adc
xor
(bad)
adc
add
adc
js
inc
mov
pop
add
push
add
adc
mov
pop
inc
mov
dec
lahf
lock
movs
add
xchg
sub
and
in
inc
jp
jmp
jmp
or
inc
outs
loope
adc
repnz
cmp
sub
dec
add
stos
jmp
loope
or
dec
xor
nop
cmp
scas
adc
loope
or
(bad)
cmp
loope
sbb
fnstsw
ja
test
add
inc
mov
clc
push
push
push
push
dec
pusha
xchg
ja
ret
inc
inc
js
mov
add
jne
xor
fstp
les
ins
sbb
jne
xchg
mov
adc
adc
push
xchg
mov
push
not
scas
add
inc
or
out
or
fild
mov
fild
cmp
es
aas
pop
sbb
clc
mov
dec
sbb
mov
cmp
call
iret
fnclex
push
push
push
cmp
ja
push
fadd
add
push
cmp
sub
inc
loope
rcl
imul
cmp
(bad)
enter
ins
leave
(bad)
cmp
cmp
(bad)
test
cs
pop
inc
sbb
call
mov
mov
pop
mov
mov
mov
sbb
in
fadd
repnz
sbb
push
cmc
push
data16
sub
sub
sbb
push
push
fstp
outs
sub
shl
repz
xchg
sub
inc
add
jnp
or
add
sti
pushf
popf
ss
inc
xchg
inc
lahf
mov
outs
cmps
xor
fcomp
add
xchg
add
jge
bnd
sbb
std
(bad)
inc
dec
arpl
xor
sub
mov
xchg
or
push
push
in
aad
rol
fild
out
mov
mov
push
test
mov
movzx
popf
out
iret
add
pop
imul
xor
mov
or
sbb
pop
xor
xchg
mov
test
or
xlat
outs
sbb
and
in
jne
mov
adc
int3
fidivr
push
mov
jae
test
mov
or
push
ins
sub
loop
or
push
xchg
mov
mov
mov
or
test
inc
jmp
rcr
mul
mov
inc
add
int
cmps
sub
add
cmp
mov
(bad)
push
mov
sbb
pop
mov
push
aam
shl
sub
mov
xchg
jp
add
xor
or
push
jle
jg
(bad)
sub
mov
mov
xchg
out
mov
test
mov
sub
or
or
jecxz
dec
or
rcl
pushf
(bad)
ret
or
dec
sub
jmp
ret
movs
dec
xchg
adc
pusha
shl
in
push
data16
ror
dec
loope
mov
and
mov
scas
stc
push
cmp
in
sub
ficom
fcomp
mov
rsm
push
shl
pop
jne
jg
repz
cmp
pop
push
push
enter
adc
mov
push
movs
(bad)
or
mov
and
xchg
es
inc
scas
and
mov
jno
sub
pop
cs
into
xor
dec
cmps
push
stos
retf
ins
add
out
fmul
dec
mov
pop
cmc
pop
jge
ret
or
(bad)
int
cmps
lock
add
mov
mov
sub
pop
sbb
sub
mov
cld
sbb
mov
(bad)
enter
dec
adc
(bad)
fild
(bad)
cmc
cmp
je
cld
(bad)
inc
dec
and
cmp
sbb
cmp
cmp
sbb
mov
push
cmc
cmps
mov
stc
jmp
mov
vpaddw
jnp
mov
add
int
sub
sti
mov
jb
pop
or
mov
push
loopne
jno
xchg
(bad)
fnstcw
pop
add
mov
push
mov
dec
clc
pop
xor
cmp
jbe
fcom
test
or
adc
inc
or
xchg
cmp
setle
scas
add
das
inc
push
js
xor
jns
or
and
push
mov
jne
retf
ret
sbb
test
pop
mov
xor
cld
adc
fsubrp
test
mov
push
adc
rcl
je
les
test
push
pushf
daa
mov
adc
out
push
sar
push
sbb
adc
pop
push
imul
dec
scas
mov
in
mov
push
cs
daa
adc
add
or
dec
test
jg
stos
jo
add
add
xchg
and
bswap
movs
les
sbb
jo
push
push
push
js
shrd
add
cmp
add
adc
add
(bad)
dec
mov
push
push
int3
push
fild
and
shl
leave
jo
div
pop
ror
pop
repz
push
test
xchg
jmp
enter
iret
shl
fisttp
add
shr
xchg
cmp
lea
xlat
outs
dec
das
xchg
ror
sbb
push
add
xor
adc
mov
and
test
clc
rep
sbb
or
nop
push
dec
arpl
jo
cmp
push
popf
mov
push
xchg
adc
jo
pushf
cmps
push
sub
cmp
imul
adc
mov
mov
adc
out
daa
scas
adc
lods
or
test
and
or
mov
mov
int
sbb
add
push
adc
inc
xchg
cmp
ins
test
sub
mov
add
movs
iret
pop
xor
add
adc
mov
fcomp
bound
or
adc
inc
dec
out
ret
jl
mov
xchg
fimul
mov
push
or
mov
aas
cmp
mov
push
inc
(bad)
out
aam
adc
enter
mov
mov
jns
push
aaa
or
ret
bound
movs
push
xchg
sbb
movs
es
js
sbb
jg
xor
push
nop
sbb
add
adc
retf
aad
add
or
stos
pop
pop
call
pushf
mov
push
add
sbb
add
rcl
pusha
push
mov
and
sub
mov
lock
ins
(bad)
int3
js
and
dec
daa
mov
bound
pop
adc
ds
adc
and
cmps
pop
jmp
test
cmp
mov
xchg
push
rol
outs
stos
int
add
ins
retf
fdiv
stc
pop
mov
mov
dec
js
push
sahf
jl
test
loopne
mov
jg
test
psubd
mov
jle
mov
jle
or
lods
add
mov
imul
xchg
or
adc
test
mov
mov
adc
into
sbb
bound
rcr
jp
fimul
adc
test
int3
ins
adc
xor
sub
fucompp
mov
mov
adc
setl
shr
push
push
mov
(bad)
das
add
push
sti
mov
pop
enter
das
mov
fld
sub
push
cmps
push
dec
nop
mov
pop
mov
adc
inc
cdq
xlat
inc
mov
cmp
shl
out
test
push
fld
jmp
loope
lea
adc
mov
xor
or
sub
inc
dec
push
mov
lock
rep
or
sbb
not
ret
add
(bad)
call
(bad)
adc
xchg
jae
cmp
xchg
les
pop
or
dec
dec
push
in
mov
cmp
mov
ffreep
cdq
mov
dec
sbb
dec
pop
inc
and
or
xor
retf
jl
cs
scas
ror
loopne
xor
add
jp
(bad)
jmp
push
mov
lea
rcr
push
ror
test
jmp
fs
add
cld
add
bound
test
push
sbb
and
xor
mov
test
rcl
sub
cmp
mov
pop
sub
mov
(bad)
sbb
jmp
dec
jo
mov
push
push
jbe
adc
sti
add
and
rol
arpl
push
dec
add
(bad)
jo
push
inc
mov
dec
sahf
mov
mov
and
push
call
and
arpl
rcr
push
mov
or
lock
ret
xchg
mov
push
xchg
sbb
xor
ret
jmp
add
push
xchg
stos
inc
fsub
(bad)
sbb
popa
jmp
les
mov
jne
loop
loope
inc
adc
cmp
dec
dec
daa
aaa
jne
push
xor
inc
mov
ret
sbb
dec
adc
mov
sbb
adc
add
cmp
popf
fmul
or
or
push
movs
lock
iret
idiv
bound
inc
adc
ss
mov
stos
push
push
sub
popa
or
lods
and
mov
and
mov
or
add
pop
xchg
add
pop
cmp
ins
test
stc
jge
sub
sub
add
nop
and
fwait
rcl
dec
sbb
movs
dec
push
pop
inc
rcl
cmp
lock
mov
mov
test
pusha
push
je
(bad)
dec
and
push
and
xor
or
mov
inc
sub
mov
daa
push
js
fwait
sub
syscall
inc
test
int3
test
cmp
(bad)
sbb
xor
and
loop
add
or
or
addr16
add
retf
inc
mov
xchg
xor
mov
jmp
add
adc
add
pushf
neg
je
add
or
sbb
push
push
mov
push
pop
pop
js
out
push
out
jle
lahf
jne
mov
or
jae
push
test
jbe
enter
ja
mov
nop
das
daa
jbe
or
data16
stos
cmp
jge
jne
(bad)
into
mov
pushf
jp
xor
div
jbe
push
push
jno
bound
into
push
push
(bad)
cmp
je
push
mov
ds
adc
gs
(bad)
or
dec
sbb
popa
test
js
es
add
push
add
fadd
je
xchg
cmp
pushf
inc
ins
rol
jns
adc
cmp
xor
push
jnp
stc
inc
add
or
sbb
jb
push
pop
aad
dec
jns
push
bound
mov
jle
sbb
out
or
addr16
inc
xor
cmc
push
in
retf
cs
push
sbb
lods
and
and
mov
cdq
test
jl
push
in
int
mov
fst
je
daa
(bad)
sbb
jg
into
mov
adc
bound
jno
sub
sub
mov
and
sbb
jnp
ins
retf
jne
or
cs
jge
add
adc
frstor
div
sbb
std
mov
rol
fst
push
and
inc
rol
fadd
dec
frstor
outs
jecxz
xor
and
jns
aad
pop
mov
in
xor
jge
push
sar
nop
fidiv
mov
or
int
push
jne
mov
bnd
pusha
jne
(bad)
push
add
xor
lods
sub
sbb
aad
jl
outs
iret
std
(bad)
call
jecxz
or
jge
adc
jno
imul
mov
cmp
cmp
inc
lods
push
(bad)
(bad)
loope
add
add
jnp
jne
xchg
inc
cmp
ret
xor
pop
ret
mov
es
call
mov
dec
sub
cwde
clc
and
(bad)
sahf
js
idiv
ja
jo
jecxz
in
je
jae
mov
(bad)
out
xchg
mov
imul
fld
dec
sub
xor
dec
and
inc
in
test
and
call
or
test
xor
mov
inc
ds
and
add
sub
add
das
pop
sbb
add
jns
push
adc
sub
jp
xor
enter
xor
iret
js
js
call
cmovns
pop
jno
push
xchg
sub
or
push
adc
call
jg
cmp
jmp
push
icebp
push
mov
mov
adc
adc
(bad)
out
mov
stos
dec
and
movs
push
jge
leave
je
add
ss
adc
nop
mov
leave
inc
xchg
inc
outs
xchg
lds
in
xor
leave
retf
xor
js
bnd
fcom
lea
fmul
in
ds
mov
cmp
and
and
stos
add
fisttp
fxch
xchg
add
pop
dec
ins
and
inc
aas
js
loop
sahf
lods
js
js
pop
jbe
and
mov
fistp
xor
test
sub
fwait
pop
in
or
mov
dec
outs
and
sub
loopne
aaa
jno
ficomp
jb
mov
in
adc
jns
mov
jb
cmp
mov
stos
and
jp
je
xchg
push
imul
je
call
pop
mov
(bad)
arpl
cwde
fnstsw
xchg
xchg
push
enter
or
or
dec
outs
jb
or
or
int
xchg
out
xchg
ret
push
in
repnz
jns
xchg
sbb
in
push
jns
jns
jns
and
nop
push
jns
jns
das
nop
and
jns
dec
repnz
and
ja
mov
jns
push
mov
cmp
jo
add
pop
sub
push
or
rcl
dec
sub
dec
retf
sbb
cld
push
mov
(bad)
pusha
add
or
inc
sbb
in
jl
jg
test
add
push
ins
add
adc
(bad)
jae
inc
add
mov
test
add
enter
add
ret
addr16
retf
mov
sahf
xchg
in
mov
pop
xor
cdq
loopne
jp
pop
outs
inc
xor
push
mov
mov
je
fld
fcom
(bad)
pop
mov
jae
mov
mov
mov
gs
jmpw
leave
cmp
xor
cs
jae
xlat
adc
imul
sub
xchg
pop
sbb
adc
(bad)
ss
jp
inc
nop
adc
cmp
leave
in
add
cmps
adc
test
mov
dec
jbe
dec
adc
cmps
inc
(bad)
lea
popa
xor
or
mov
mov
mov
inc
call
jmp
add
mov
jmp
pop
cmp
and
retf
or
call
mov
push
add
and
shl
nop
push
push
nop
xchg
sbb
in
push
and
mov
into
pop
arpl
shr
fmul
push
shl
es
shl
push
lds
mov
icebp
dec
add
push
adc
pop
mov
xchg
neg
je
es
in
push
mov
add
cli
sahf
and
mov
xchg
scas
push
movs
stc
adc
xor
aad
(bad)
xlat
lea
iret
jnp
push
push
pop
mov
iret
(bad)
out
imul
xor
jae
pop
jp
in
test
test
push
stc
fimul
mov
push
jle
mov
ror
adc
in
mov
or
faddp
or
ja
mov
and
jae
add
pop
cwde
sub
cmp
cwde
xchg
retf
call
popa
add
das
in
xlat
push
inc
adc
call
jns
cmp
ins
add
mov
movs
push
popa
cmps
mov
add
scas
icebp
out
(bad)
xchg
lock
mov
xor
dec
pop
push
call
push
inc
outs
in
push
inc
jmp
sbb
jmp
push
push
push
jmp
in
adc
out
pop
mov
aam
add
pop
jecxz
push
cmp
cmps
push
push
sub
dec
fstp
ret
ret
pop
lds
adc
and
call
adc
shl
into
rol
add
call
mov
mov
int3
(bad)
(bad)
mov
lds
les
inc
loope
mov
mov
cmp
push
dec
cwde
clc
dec
jl
xchg
cld
arpl
shr
adc
push
cs
call
je
pop
dec
test
adc
ja
fdivr
stos
pusha
jmp
or
sbb
adc
test
push
cdq
(bad)
jge
les
xchg
mov
add
dec
ja
or
push
and
es
jle
retf
add
push
sub
ins
loope
mov
dec
adc
or
jb
leave
pop
popf
fist
pusha
push
sub
jo
jmp
test
push
push
rcr
test
test
nop
cmps
loope
cmps
or
xchg
push
test
cmp
mov
or
inc
push
xor
je
fidiv
xchg
pop
mov
adc
xor
mov
nop
push
xchg
data16
push
sub
retf
outs
dec
or
mov
fld
imul
xor
mov
loope
push
cmc
push
push
cmp
imul
imul
push
movs
sub
fsub
xor
dec
fcom
mov
(bad)
fnstsw
adc
out
jae
inc
mov
push
daa
sbb
inc
pop
push
sbb
ror
or
xchg
cdq
push
mov
xchg
xor
inc
push
popa
mov
mov
lahf
adc
aam
fwait
test
or
inc
push
cmps
xor
(bad)
pop
sahf
xor
pop
cli
lods
(bad)
shl
cld
test
sbb
adc
xchg
add
std
sti
sub
cmp
or
add
pop
cmps
and
mov
xchg
retf
pop
and
mov
push
xor
mov
and
mov
or
jl
xchg
das
and
add
mov
int3
ja
and
js
hlt
cld
enter
inc
mov
and
sbb
xchg
jl
test
sbb
neg
xchg
xchg
ins
add
cli
or
mov
add
jne
outs
out
mov
xor
mov
sti
jne
dec
not
and
ja
jb
xchg
(bad)
mov
les
inc
(bad)
call
push
lock
add
xchg
push
cmp
and
pop
push
sbb
mov
outs
sub
xchg
mov
cwde
xchg
xchg
push
jns
imul
push
push
mov
push
push
sub
shl
mov
sbb
cmp
pop
jns
pop
push
cmp
or
cmp
and
adc
inc
adc
jmp
retf
mov
lods
dec
and
sub
pop
mov
inc
outs
pop
shl
jge
fcmovbe
sbb
pushf
adc
add
xchg
push
dec
rol
arpl
sub
mov
sbb
popf
pusha
pop
test
fcom
xchg
cwde
ins
fs
jl
lahf
add
add
rcl
pop
je
or
out
sbb
and
mov
lods
not
jbe
inc
mov
pusha
nop
lods
xor
xchg
(bad)
stos
push
test
cmp
xor
inc
cmp
push
out
adc
int
mov
sub
and
xor
cmp
add
add
jns
adc
dec
test
ror
fist
or
rcl
dec
or
jbe
xlat
pop
pusha
out
push
(bad)
stc
push
pop
popa
cmp
inc
inc
retf
or
and
aas
shr
leave
inc
shr
push
pop
sub
add
or
loopne
jg
dec
jb
rol
je
dec
shr
stc
stos
pusha
and
add
dec
xchg
sbb
pushf
inc
and
pop
ret
fadd
sbb
mov
aad
lods
sub
mov
sub
xchg
jnp
sbb
test
mov
or
sbb
sbb
sbb
jg
and
daa
sbb
mov
push
inc
mov
sbb
sbb
das
add
mov
loope
popf
xor
mov
adc
add
aas
inc
int3
and
nop
or
xchg
inc
jp
lds
pushf
iret
inc
lds
sbb
push
or
jns
cmp
jno
shl
add
outs
inc
lea
iret
mov
or
enter
(bad)
cmps
push
ss
cmp
xor
je
retf
dec
or
xchg
xchg
sbb
xchg
fcmovne
fild
push
adc
add
inc
add
outs
xchg
or
repnz
aad
or
sbb
jg
xor
xchg
lods
and
jbe
jge
mov
pop
fbstp
out
ror
mov
ins
sar
aas
shl
lea
out
or
adc
sub
bound
les
stos
aam
sbb
xor
inc
or
outs
loop
movs
sub
sbb
xor
adc
inc
jle
mov
(bad)
mov
inc
loop
xor
jbe
in
pop
mov
push
push
jecxz
add
ret
xor
adc
jo
shr
movs
movs
push
lods
dec
adc
imul
add
mov
mov
dec
les
xchg
mov
leave
xor
adc
mov
jno
adc
sbb
out
sub
push
(bad)
int
jmp
pop
imul
add
aas
xor
adc
or
xchg
mov
imul
add
and
push
jmp
sbb
inc
inc
cmp
jl
jbe
add
sub
ins
jbe
mov
mov
or
sbb
fidivr
sbb
mov
or
or
(bad)
fcomp
mov
pushf
pop
ds
pop
xor
pop
pusha
adc
loop
cmp
add
xchg
add
mov
xor
test
scas
mov
mov
dec
icebp
(bad)
pop
inc
retf
inc
push
jmp
jb
aaa
dec
xchg
push
xchg
jnp
or
inc
sub
jmp
mov
jb
nop
pop
add
call
daa
outs
sub
ret
dec
das
loop
push
rcl
sahf
push
sbb
mov
dec
lea
jmp
shr
inc
add
movs
or
ds
sub
jmp
dec
jmp
add
adc
adc
fld
xor
out
push
inc
mov
clc
sub
or
pop
mov
ret
adc
and
cmp
add
inc
add
adc
pusha
sub
dec
cmp
inc
push
dec
pop
cwde
sub
push
mov
cmp
and
call
cmp
lea
ins
and
inc
popa
fnsave
sbb
cs
out
xor
dec
cld
inc
xor
fisttp
push
cmp
std
ins
mov
add
ret
mov
mov
and
int3
cmp
mov
scas
int3
fwait
xchg
adc
add
imul
and
sbb
arpl
loopne
sbb
and
cs
fs
pop
mov
sbb
in
push
mov
sub
sbb
dec
push
jge
mov
sub
adc
fmul
push
fsubr
and
mov
popa
pop
pop
addr16
jo
bnd
xchg
scas
push
jg
loopne
cmp
push
aas
and
aaa
push
aas
das
ror
jg
lahf
dec
push
and
lahf
xor
inc
jae
push
gs
ret
(bad)
jo
sahf
das
and
add
sbb
xor
pop
push
jp
jle
lea
push
push
push
xor
and
fcom
sbb
mov
mov
movs
push
dec
cmps
inc
xor
mov
ins
sub
xor
fstp
pop
adc
dec
lea
into
clc
scas
add
dec
xchg
add
repz
push
push
and
push
rol
jne
xor
(bad)
adc
ds
and
test
and
or
mov
sbb
sub
cmps
sub
xchg
jle
call
popf
dec
sub
gs
popa
dec
cmps
pop
(bad)
fwait
nop
add
jmp
enter
add
pop
and
jle
ret
lock
icebp
push
fsub
cmps
inc
mov
add
inc
push
loope
and
call
mov
inc
or
inc
(bad)
stos
gs
xchg
mov
jne
jl
push
inc
jg
jle
or
mov
mov
add
add
ret
cmp
out
nop
sub
dec
and
in
ins
pop
and
dec
inc
sti
dec
shl
xor
and
iret
or
movs
loopne
dec
leave
add
push
bound
jle
or
jbe
es
and
xchg
jae
sbb
aaa
ja
cmp
cmp
(bad)
fwait
cwde
imul
inc
ss
rcl
test
inc
push
into
rol
sbb
pop
movs
and
loopne
inc
cmp
cwde
xchg
push
lods
sbb
push
fcom
inc
in
pop
dec
jg
mov
inc
fnstsw
mov
pop
xor
sbb
or
std
dec
push
dec
xor
fst
fcomi
xor
loopne
cmp
in
or
mov
cmp
ret
push
in
pop
jmp
mov
or
das
mov
aad
jecxz
mov
sbb
push
lahf
sbb
gs
cs
mov
outs
xchg
pusha
sbb
adc
pop
je
call
pop
or
fwait
push
ss
stc
movs
imul
add
inc
lods
add
adc
mov
loop
and
add
sbb
sbb
sbb
add
adc
fisubr
push
(bad)
enter
mov
inc
push
mov
push
dec
pop
dec
push
inc
pop
xchg
lock
sub
jb
enter
add
pop
test
push
push
adc
inc
xor
mov
adc
pop
xchg
retf
test
sbb
xchg
xchg
xchg
cmp
jge
ss
jge
repnz
bnd
jge
out
xchg
js
jmp
mov
xchg
cmc
mov
mov
jp
and
and
inc
inc
in
dec
push
outs
dec
ja
ins
repnz
and
pusha
imul
cmp
xchg
push
and
sbb
push
gs
mov
test
mov
cwde
cmp
dec
adc
js
ret
or
fild
enter
ret
(bad)
xlat
dec
and
jo
out
out
(bad)
push
jl
call
loop
pop
xchg
sbb
mov
icebp
xchg
ins
icebp
aam
pop
xchg
sub
data16
inc
loope
sub
push
ins
sbb
dec
xlat
xor
add
sub
dec
jl
inc
jle
addr16
pop
cmove
fld
mov
push
pop
push
and
inc
jmp
mov
inc
push
repnz
out
jge
shr
xor
add
mov
add
or
push
and
mov
mov
cwde
xor
ins
(bad)
aaa
push
inc
sub
rcl
iret
adc
xor
aas
adc
xchg
or
fidiv
mov
add
popa
push
mov
in
pop
mov
and
pop
adc
push
adc
mov
pop
mov
jmp
fst
pop
ret
nop
inc
push
pop
xor
int
shl
cmp
sahf
imul
nop
jne
iret
repz
add
xchg
sar
mov
xchg
inc
jne
pop
mov
lock
jle
cmps
push
mov
cmp
shr
repz
jbe
fiadd
scas
popa
hlt
cs
mov
hlt
js
idiv
int
push
or
das
xchg
hlt
sysret
int
jns
and
lods
sub
idiv
mov
sysret
inc
xor
in
addr16
cmp
sahf
cmc
jmp
jbe
not
iret
repz
movs
daa
movs
jl
xchg
mov
sti
cmp
adc
clc
pop
out
mov
push
sub
mov
sahf
or
sub
xor
sbb
and
xchg
pop
xchg
sar
jmp
mov
add
push
push
push
push
pusha
or
sub
(bad)
rol
addr16
push
push
mov
ss
dec
lahf
mov
jmp
jl
push
sub
mov
or
movs
sbb
xchg
mov
pop
fs
push
mov
je
cmp
sbb
jecxz
sahf
pop
push
add
aam
pop
jne
mov
lock
pop
dec
push
and
and
and
addr16
push
and
jns
pop
mov
aaa
call
push
test
test
jbe
dec
nop
inc
xor
test
inc
or
call
(bad)
push
loopne
push
or
movs
jge
mov
inc
mov
push
sub
dec
test
ret
lahf
add
pushf
pop
inc
(bad)
(bad)
mov
and
add
inc
push
hlt
hlt
cmp
mov
jl
mul
xchg
add
sbb
pop
fisttp
cmps
test
mov
or
cmps
mov
imul
xor
xchg
jge
test
sub
in
pop
inc
mov
mov
push
push
aam
add
fisttp
and
rcr
js
jo
add
loope
lds
lods
mov
ss
adc
mov
add
add
xor
int3
adc
mov
xchg
shl
add
popa
dec
hlt
mov
mov
xchg
cmp
fs
mov
jb
push
push
dec
ror
dec
pop
jo
int3
pop
ins
add
(bad)
push
mov
xor
cmp
or
or
imul
ins
pop
jns
pop
push
call
adc
into
ror
test
mov
rcl
aad
mov
xor
or
push
or
movs
xor
test
sub
imul
mov
sub
push
leave
dec
mov
add
adc
adc
xor
lea
or
sbb
test
je
inc
and
enter
or
mov
cmp
pop
inc
sub
jmp
mov
test
push
pop
ror
jmp
xor
mov
loopne
inc
lock
daa
nop
aaa
sub
scas
loopne
or
test
or
retf
xor
xchg
ja
call
aas
push
push
inc
xchg
daa
inc
pop
xchg
arpl
pop
dec
leave
sti
pop
sub
jo
push
and
stos
pusha
movs
pop
in
push
aam
mov
cmp
xor
cmp
jae
mov
pop
pop
in
xor
xor
cmp
pop
xor
sbb
es
lods
pop
popf
ja
ret
mov
push
mov
clc
(bad)
push
jbe
cmc
(bad)
out
sub
scas
popf
xor
nop
ret
cmp
out
mov
push
iret
inc
aad
(bad)
sub
add
jbe
mov
sub
ds
push
add
test
or
cmovo
cmp
xchg
jp
xor
mov
retf
and
adc
(bad)
aaa
int3
add
sub
sbb
xor
add
xchg
dec
push
inc
mov
push
and
sbb
hlt
add
pop
add
cmp
add
lock
add
push
push
sub
pop
xchg
mov
shl
add
es
bound
add
aaa
jle
xchg
inc
mov
mov
jb
jnp
cmp
push
mov
neg
fnstcw
pop
xchg
lea
xor
shl
fimul
sbb
sub
lods
int3
jmp
ins
mov
push
retf
xlat
push
push
rcl
sbb
sti
ror
stos
jl
jle
sub
mov
mov
cdq
inc
arpl
mov
and
cmp
addr16
jnp
add
sub
adc
dec
std
cmp
dec
stos
mov
cmp
jae
lahf
mov
sbb
sub
and
or
daa
and
mov
sub
inc
add
mov
add
add
jo
sahf
adc
test
mov
arpl
mov
mov
stos
(bad)
imul
test
pop
dec
xor
dec
test
mov
imul
sub
mov
cs
mov
xchg
cmp
arpl
mov
sahf
push
jns
push
nop
cmps
cmp
pusha
sub
pop
xor
cmovg
push
dec
or
cmps
jecxz
push
dec
leave
nop
lods
or
and
popa
pusha
fisttp
mov
test
xor
sub
imul
rcr
jnp
outs
pop
stos
out
dec
loopne
push
dec
push
push
sub
or
icebp
xchg
adc
dec
sub
jl
inc
mov
sub
icebp
inc
push
or
cmp
sbb
test
push
loope
outs
xchg
mov
mov
dec
jo
mov
or
imul
and
pop
jnp
scas
popa
and
test
mov
cmp
inc
and
std
and
mov
pop
add
sub
sub
sbb
fdivp
call
shr
fcom
xchg
clc
push
inc
dec
popa
sbb
daa
dec
inc
sub
test
or
cld
loopne
into
push
adc
push
push
push
iret
(bad)
rcl
clc
stos
pushf
add
jg
mov
mov
and
pop
mov
sbb
jp
sub
push
dec
rol
cdq
aad
not
jge
adc
dec
inc
or
pusha
adc
xor
xchg
and
sbb
shl
cmp
mov
les
fwait
idiv
cld
jnp
push
mov
jle
pop
(bad)
mov
add
je
inc
xlat
jo
mov
pop
mov
jo
sbb
mov
sbb
in
and
xchg
out
neg
div
mov
(bad)
ficomp
cmp
loopne
cmp
ror
add
les
scas
push
mov
push
xor
div
inc
mov
lods
xor
ret
dec
push
pop
inc
push
mov
mov
add
pop
aam
(bad)
pop
jns
add
shr
or
adc
mov
pop
cmp
xchg
push
rcl
jne
cmp
rep
cmp
cmp
xor
cs
dec
xchg
cmp
std
pop
mov
dec
sahf
pop
and
add
xchg
test
push
adc
iret
sbb
daa
add
xor
and
fld
cmp
sbb
jb
in
idiv
rol
sbb
lea
ret
jmp
sbb
xchg
pushf
mov
mov
adc
fs
daa
xchg
dec
scas
cmp
jmp
inc
and
add
rep
xor
xchg
xor
or
mov
ins
inc
rcl
jp
sbb
sub
xchg
es
adc
xor
push
and
call
imul
sbb
enter
mov
repnz
bound
sub
or
or
pop
mov
adc
xor
ins
jns
ja
movs
add
push
pop
jo
push
sub
xchg
and
add
outs
leave
retf
add
adc
push
inc
pop
push
popa
push
adc
es
add
lods
push
or
add
sub
(bad)
mov
sub
cmp
mov
fld
into
mov
out
sbb
push
(bad)
js
fidiv
ret
mov
xor
xchg
into
add
sbb
push
jl
mov
push
mov
mov
adc
pop
jl
dec
cmp
push
or
mov
sub
adc
rcl
sub
mov
icebp
inc
mov
ds
mov
cmps
mov
add
jno
(bad)
cli
xchg
rcl
dec
loope
push
push
sub
xor
cmp
xchg
ins
sub
mov
jns
call
sbb
sbb
les
cmp
jg
push
sbb
push
push
mov
cmp
pop
jcxz
lea
pushf
lock
xlat
xchg
lahf
in
cmp
jne
mov
mov
adc
das
or
dec
jmp
fnstsw
jmp
jo
or
inc
sbb
popa
cmp
push
xlat
mov
add
xor
mov
enter
mov
pop
shl
xor
in
ret
nop
dec
mov
aaa
push
add
clc
xchg
mov
icebp
pop
push
dec
add
mov
out
or
add
inc
in
test
jno
pop
inc
add
pop
pop
jo
sbb
dec
test
xchg
outs
fld
fstp
adc
sub
sub
mov
aas
dec
adc
mov
cmp
inc
adc
ret
outs
inc
jg
cmp
leave
push
mov
sahf
push
dec
xor
push
xor
fwait
mov
adc
jo
add
daa
sbb
sub
mov
add
push
daa
fsubr
add
xchg
xor
cmps
push
mov
adc
jecxz
jmp
add
es
rcl
in
and
push
push
not
jne
adc
cmc
stc
xchg
cdq
cmp
(bad)
push
inc
sbb
rol
push
test
retf
dec
pusha
ret
mov
jno
mov
jae
test
je
mov
inc
xor
mul
mov
pop
xchg
(bad)
xchg
repnz
push
iret
dec
rcl
add
sbb
stc
icebp
mov
scas
pop
pop
mov
mov
sbb
(bad)
out
pop
xor
fs
pop
retf
mov
mov
inc
sbb
cmp
leave
retf
and
rcl
scas
shl
and
mov
fisubr
push
cwde
mov
inc
adc
sub
adc
arpl
add
pop
push
pop
int
test
or
or
das
add
dec
(bad)
push
in
and
(bad)
jns
sub
jge
xor
sbb
loope
adc
fisub
xlat
inc
(bad)
adc
cmc
adc
or
fstp
mov
mov
push
(bad)
and
ficom
sahf
push
or
sbb
ret
add
dec
xchg
cmps
ror
pusha
leave
dec
inc
mov
push
push
and
lea
loop
mov
sbb
or
test
ds
xor
sbb
cmp
or
pushf
je
xchg
xchg
pushf
xchg
pop
cmp
xchg
subps
inc
scas
pop
xchg
push
add
pop
sbb
repz
pop
retf
xchg
jns
add
movs
adc
add
cmp
sub
js
call
rcr
pusha
add
jle
push
scas
add
sub
cdq
push
push
push
add
daa
popf
test
or
in
cmp
pop
jmp
les
mov
sbb
add
and
add
sub
jns
popa
sbb
xor
push
adc
add
pop
pop
cmp
into
sbb
push
shr
mov
js
aad
push
popf
lar
movs
add
and
das
pushf
xchg
and
icebp
add
jg
jecxz
sbb
jo
sbb
xchg
in
add
add
sub
xlat
(bad)
js
js
stos
and
mov
or
dec
add
or
xchg
mov
or
dec
and
and
sbb
mov
sbb
or
jns
retf
nop
or
sub
pushf
cwde
pop
xchg
dec
leave
gs
nop
nop
repnz
inc
push
leave
dec
rol
mov
xor
cmp
loop
leave
xchg
nop
scas
push
loopne
inc
xchg
ins
xchg
xchg
or
ins
and
or
call
fwait
nop
xchg
and
or
add
xchg
mov
and
add
and
inc
add
or
sub
and
xchg
jns
pshufw
pushf
retf
push
setae
ins
or
xor
jmp
sahf
cmp
mov
shl
(bad)
(bad)
dec
mov
dec
add
adc
cld
pushw
in
xchg
fimul
inc
xor
push
push
mov
clc
cmp
add
dec
gs
pop
lock
pop
in
(bad)
cmp
mov
jo
dec
sar
jb
or
daa
inc
add
(bad)
push
dec
or
fisttp
xchg
push
sbb
fs
(bad)
adc
dec
leave
in
xchg
test
repz
or
pop
add
sbb
sub
pusha
outs
loop
push
mov
mov
popf
outs
enter
sub
push
pop
xor
xchg
ins
push
mov
sub
movs
fmul
mov
and
jg
inc
mov
(bad)
enter
jnp
ret
mov
mov
mov
mov
repnz
cmp
sbb
mov
jb
push
push
imul
cmp
pop
add
mov
rcr
and
push
xor
lods
mov
das
enter
icebp
daa
bound
mov
ss
loopne
xchg
or
mov
and
jo
jl
pop
cmp
push
mov
cmovo
adc
mov
repnz
in
movs
jl
leave
retf
dec
push
push
push
cwde
aam
xchg
pop
push
lahf
js
and
call
add
cwde
aam
xchg
mov
pop
sar
or
lods
ja
fpatan
and
lea
int3
ror
icebp
sub
add
pop
les
out
sub
cdq
and
jns
jmp
test
sbb
mov
pop
mov
mov
add
movs
rol
and
frstor
inc
dec
pop
mov
dec
dec
scas
and
inc
inc
jp
inc
cmp
or
or
adc
cmp
stos
jle
jno
xchg
retf
dec
mov
test
adc
addr16
in
inc
dec
mov
(bad)
jmp
sub
jo
aaa
repnz
mov
cdq
pop
adc
inc
call
dec
(bad)
fistp
xchg
mov
mov
cdq
mov
repnz
enter
pop
(bad)
lods
call
or
sar
call
call
adc
inc
xlat
into
mov
mov
inc
jo
xchg
pusha
fwait
push
call
call
bnd
out
jmp
ret
push
enter
stos
jmp
sub
fwait
xchg
inc
enter
test
leave
sbb
mov
aam
sub
mov
loopne
nop
lahf
add
hlt
test
test
mov
loopne
xchg
jo
xchg
mov
or
push
add
test
jmp
das
xchg
daa
mov
push
sub
(bad)
fisubr
mov
inc
push
dec
push
and
jo
adc
mul
push
lods
lods
jbe
and
nop
ret
and
mov
int3
and
test
push
daa
aad
push
and
int3
out
jbe
adc
aad
xor
mov
or
adc
cli
adc
push
jp
mov
xor
add
sub
ins
add
jo
mov
sub
mov
xor
adc
pop
cmps
add
fld
inc
inc
push
fadd
popa
pop
mov
test
or
ror
mov
cmp
inc
add
shr
mov
fsubrp
and
push
and
xchg
repnz
and
xchg
cmp
inc
cmp
mov
sbb
inc
sahf
movs
mov
dec
fmul
out
test
push
mov
fld
daa
add
fdivr
or
sub
push
lea
cmps
xchg
mov
cwde
push
add
or
test
pop
dec
push
faddp
les
mov
mov
or
mov
lds
xor
dec
aad
pop
nop
shl
sbb
sahf
xor
pop
mov
push
(bad)
test
test
sub
movs
shl
(bad)
jecxz
xor
loop
addr16
inc
mov
sahf
(bad)
adc
and
pop
das
xchg
push
push
sub
leave
retf
cmp
ret
xchg
mov
inc
not
shl
and
dec
mov
jmp
mov
leave
mov
mov
ficomp
adc
test
and
sub
jecxz
push
xchg
pop
rol
push
arpl
jecxz
in
out
cli
mov
xor
or
sbb
lods
mov
les
test
cld
call
mov
xchg
cld
shl
mov
inc
mov
fs
sbb
add
xchg
es
add
add
fidiv
ret
test
or
or
xor
(bad)
mov
retf
pop
fwait
mov
and
sbb
or
je
mov
cmc
pusha
dec
add
mov
into
arpl
je
cwde
ret
fiadd
mov
popa
xchg
inc
cld
mov
xor
xor
or
(bad)
jmp
pop
or
push
frstor
xchg
mov
into
mov
call
add
jno
cmc
add
or
rol
push
cmps
neg
inc
inc
test
movntq
addr16
test
pop
push
and
leave
add
cmp
test
jge
ror
test
and
xchg
data16
or
ret
mov
adc
push
ja
fld
sub
or
fbstp
ret
adc
outs
mov
mov
or
loope
jmp
sbb
out
add
pop
pop
and
add
cmp
or
push
not
ror
add
bndldx
sub
repz
pop
pop
sbb
fs
add
pop
bts
fimul
test
lahf
das
movhps
xchg
(bad)
cs
pop
dec
adc
mov
out
mov
test
mov
(bad)
xchg
and
(bad)
fs
lock
ror
sbb
jno
xor
pop
push
pop
popf
dec
sbb
mov
in
add
das
cmp
or
xor
mov
pop
in
mov
sub
movs
jb
repnz
inc
bound
adc
pop
mov
popf
test
daa
dec
test
mov
test
cmp
and
and
inc
repnz
imul
in
pop
test
push
cmp
sub
test
das
aas
mov
mov
adc
and
jne
jnp
inc
mov
leave
inc
(bad)
fistp
pusha
adc
mov
inc
pusha
test
imul
ins
mov
out
or
adc
xor
retf
jp
or
popa
add
cld
pusha
push
push
aas
jge
pop
xchg
and
shl
outs
mov
cmp
lods
jecxz
dec
mov
test
jb
sbb
jl
ja
fsubr
or
(bad)
dec
rcl
ret
lea
mov
outs
mov
pop
cmp
test
sbb
in
sbb
ds
mov
sub
push
push
shl
and
push
cli
sub
and
sar
les
xchg
lock
mov
or
inc
in
inc
add
cmp
xchg
pop
sbb
push
outs
(bad)
movs
add
mov
fwait
outs
or
pushf
cmp
inc
pop
pop
enter
shl
xchg
mov
popa
mov
jmp
adc
xchg
popa
shr
pushf
push
movs
mov
aas
push
inc
outs
pusha
rol
fisttp
loop
push
xchg
mov
mov
cwde
xchg
nop
adc
stos
add
popf
push
out
adc
pop
or
sub
in
add
mov
data16
sahf
out
push
clc
push
das
cmp
sti
xor
out
inc
lods
pop
xchg
pop
cmp
rep
and
mov
out
jmp
adc
outs
dec
jmp
nop
repz
ins
mov
lea
dec
imul
cmps
sti
or
dec
pop
sub
push
inc
jo
sbb
popa
and
or
ss
das
ret
cmp
mov
cmovns
(bad)
fidivr
bound
push
mov
xchg
fprem
dec
mov
pop
adc
push
mov
add
in
dec
xchg
sub
dec
and
or
ficom
mov
test
mov
imul
test
push
mov
pop
mov
push
fwait
adc
pop
add
pop
pushf
mov
cld
sbb
scas
add
push
nop
cmp
or
call
inc
je
in
lods
rol
pop
push
lea
dec
ins
fistp
mov
sar
mov
les
cmp
add
loope
sub
in
jp
pop
shl
push
mov
push
pop
popa
loope
fcomp
add
enter
das
popa
std
dec
test
pop
cwde
ret
and
inc
test
loope
jbe
inc
(bad)
and
pop
mov
ret
push
inc
cmp
sub
jl
bound
and
scas
adc
jo
(bad)
sbb
push
or
ror
add
and
outs
jle
cmps
mov
push
sub
out
dec
inc
or
in
cmp
lock
adc
dec
ds
xor
xor
mov
adc
loop
cli
aaa
loopne
jns
xor
adc
cmc
xchg
or
push
(bad)
lock
loope
jmp
add
add
and
fstp
or
add
leave
shr
dec
sbb
jl
add
data16
xor
or
cmp
xor
or
mov
shl
ret
inc
lods
xor
xchg
jge
test
jg
mov
je
inc
add
sub
enter
popa
sub
aas
or
stc
adc
mov
pop
inc
inc
mov
mov
xor
das
out
cmp
jg
rol
jle
hlt
sub
sti
add
jmp
je
push
sub
jp
imul
jne
mov
dec
sti
(bad)
jg
jne
cmp
ja
jmp
dec
loopne
lods
sar
and
or
mov
jae
dec
xchg
sbb
call
aam
sub
mov
add
test
mov
scas
inc
je
hlt
add
push
out
aam
pop
sub
lods
nop
ds
jle
lock
hlt
or
add
sbb
adc
outs
addr16
or
mov
dec
dec
sar
leave
sbb
or
sub
push
inc
pop
ret
cld
repz
mov
sbb
dec
push
test
xchg
mov
add
pop
loopne
push
or
dec
dec
je
mov
cmp
sahf
scas
cld
icebp
push
xchg
sbb
push
out
sub
hlt
clc
popa
mov
fldcw
sub
(bad)
jp
dec
jle
in
push
adc
in
sbb
or
or
mov
pop
lock
test
pop
push
(bad)
je
mov
in
mov
dec
pop
imul
mov
push
js
inc
retf
sub
mov
sti
mov
sub
lods
add
test
imul
xchg
add
pop
mov
push
rol
(bad)
je
cmp
mov
addr16
repnz
out
(bad)
mov
xchg
repnz
repnz
jno
ins
fbstp
out
je
out
dec
test
dec
call
or
popa
push
lods
dec
je
adc
in
jl
stos
or
fdiv
pushf
xchg
mov
dec
cmp
xchg
(bad)
push
out
push
mov
pop
scas
dec
(bad)
push
mov
cmp
jge
(bad)
sti
test
rol
popf
add
push
add
add
call
clc
adc
add
pop
jl
cli
xchg
dec
ds
and
and
push
push
imul
mov
aaa
add
fdivr
mov
push
loop
jg
test
mov
add
int
or
xor
sub
scas
add
clc
aad
sub
je
or
mov
shr
aad
adc
adc
dec
inc
inc
cmp
jne
call
mov
es
pop
adc
mov
mov
icebp
push
jns
cmp
retf
ss
pop
lods
or
mov
mov
xchg
adc
je
adc
mov
adc
scas
dec
fld
mov
in
pop
pop
push
loope
xor
dec
push
push
(bad)
jmp
pop
jne
cmp
jne
inc
jmp
mov
mov
inc
xor
popa
sbb
je
mov
push
jae
cwde
in
inc
je
addr16
(bad)
ficomp
sub
or
adc
adc
xor
add
jmp
lea
jnp
mov
rcl
or
adc
and
xor
outs
push
xor
pcmpeqw
xchg
sbb
and
push
les
xor
lods
fldcw
inc
jl
shl
emms
and
sub
dec
dec
jb
imul
add
xor
add
mov
add
or
gs
scas
pusha
in
and
mov
cmp
pop
jne
jae
repnz
add
test
scas
loopne
inc
test
lea
add
inc
popf
clc
inc
xchg
sub
fs
out
pusha
inc
ja
aam
mov
push
ret
or
sbb
push
cmps
sub
gs
data16
jl
scas
dec
test
xor
or
push
dec
push
add
mov
cmps
loope
inc
mov
add
push
dec
cmps
jo
into
cmp
je
jmp
test
arpl
out
jmp
cmp
das
(bad)
mov
xchg
push
adc
ficom
in
add
jnp
xchg
push
add
sbb
ret
inc
ret
(bad)
mov
sbb
mov
shl
cwde
add
fisub
adc
mov
mov
adc
mov
adc
inc
and
jno
add
cmp
add
scas
mov
add
add
fs
mov
adc
inc
pop
out
lea
sbb
mov
and
sar
cs
cwde
mov
sub
scas
repnz
sbb
call
imul
mov
inc
cld
mov
outs
push
nop
sbb
clc
push
bound
icebp
cmp
push
xchg
rcl
jne
in
jecxz
lahf
inc
in
ins
sub
add
xor
retf
outs
add
add
or
add
sahf
push
or
sbb
out
fimul
or
add
add
cdq
nop
daa
addr16
xlat
sub
shl
iret
in
dec
movntq
test
ins
cld
bound
rol
or
lods
or
pop
fsub
and
and
cmp
adc
pusha
pop
call
push
inc
pop
rol
in
cmp
sbb
shr
ins
into
repz
mov
cmps
and
add
lea
and
mov
pop
xor
pop
lock
push
aam
jl
mov
jne
jg
jmp
mov
out
jne
inc
lock
leave
pop
cmp
jne
popa
cmp
aaa
fidivr
inc
call
dec
cmp
mov
lock
add
dec
sub
mov
cmps
mov
jl
xor
or
add
lea
jmp
pop
jne
sbb
inc
inc
outs
inc
add
pop
jne
std
cmp
or
push
cmp
daa
push
pmaxub
stc
inc
cmp
jne
cmp
hlt
push
xor
imul
jno
sub
jle
and
jne
pop
or
or
jp
push
lds
sub
inc
cmp
je
cmp
je
inc
test
jge
inc
xchg
sbb
pop
jae
fisubr
or
movs
cli
or
jne
mov
lods
and
js
inc
cmp
dec
jb
push
jbe
rcr
imul
dec
jbe
cli
jmp
mov
sbb
or
inc
adc
push
and
add
xchg
or
lock
push
fwait
icebp
adc
test
cmps
push
cwde
mov
sbb
mov
dec
loope
push
sbb
pop
lea
inc
adc
mov
mov
in
mov
mov
pop
jge
not
aad
into
mov
pop
mov
stos
ret
sbb
jge
out
mov
xchg
and
retf
pop
enter
sahf
dec
dec
leave
jl
cmp
or
into
jge
mov
mov
mov
outs
mov
cli
ds
retf
sub
cwde
jne
inc
sbb
jl
fld
adc
push
and
shl
pop
imul
mov
xchg
xor
and
or
(bad)
sti
clc
(bad)
mov
cmp
push
neg
shr
and
ins
push
fs
aam
inc
fnstsw
mov
fcom
imul
leave
cmp
imul
call
mov
clc
pop
inc
out
ficomp
adc
add
dec
ror
or
mov
test
js
pop
sub
push
dec
sub
call
dec
push
fsubr
mov
mov
lods
jb
mov
sbb
add
dec
js
push
sub
jnp
dec
sub
lea
aas
inc
inc
aas
lods
nop
cmp
(bad)
sub
icebp
pop
push
sbb
mov
test
in
inc
jmp
mov
mov
mov
mov
popf
shl
jp
outs
mov
push
add
fwait
sti
ja
and
lea
pop
xor
xchg
mov
movs
sbb
cmp
and
push
sbb
xor
pop
in
lds
(bad)
call
mov
pop
dec
sub
pop
call
call
or
xchg
cmps
ss
or
fiadd
xor
cmc
shl
ror
and
jl
(bad)
push
call
fdivrp
(bad)
xor
or
ja
int
sti
add
sar
sar
add
jbe
cmc
mov
adc
xor
jnp
jg
jp
push
add
ret
jmp
mov
je
inc
or
inc
clc
pop
jl
and
rcl
pushf
xchg
or
add
es
add
mov
add
mov
daa
jbe
mov
call
push
pop
jle
sbb
add
stos
mov
pop
dec
xor
cmp
sahf
inc
push
jns
jb
popa
loop
inc
dec
pop
fld
xchg
cmps
inc
and
lahf
call
call
inc
xor
mov
je
imul
ja
sbb
push
(bad)
dec
push
mov
int
ffreep
push
lds
push
outs
pusha
fistp
add
add
dec
jge
sub
and
add
cmpxchg
push
and
adc
pushf
int3
retf
add
and
mov
add
je
push
adc
cmp
daa
add
je
iret
sti
mov
pop
adc
mov
mov
and
les
add
pushf
add
push
les
popf
ss
sbb
and
loop
sbb
or
adc
adc
(bad)
(bad)
push
test
sub
pop
xor
imul
add
faddp
push
push
test
pop
dec
xchg
push
cmp
test
or
adc
xchg
lea
push
dec
loope
adc
ds
or
push
fisttp
test
cmp
cmp
out
in
add
mov
add
aam
push
out
mov
and
or
add
ds
jae
loopne
mov
cmp
retf
mov
push
pop
push
mov
add
xchg
imul
fiadd
pusha
icebp
or
push
(bad)
retf
push
sub
xor
call
jno
inc
inc
sahf
dec
add
inc
mov
inc
and
pop
jae
or
adc
mov
movs
je
jae
test
xchg
jle
or
inc
ins
out
out
jecxz
retf
les
hlt
jp
mov
fisubr
push
ins
sbb
jo
jne
mov
xor
sub
sti
out
mov
arpl
add
pop
rol
retf
jmp
lea
push
push
add
add
and
sbb
pushf
call
jle
(bad)
push
xor
or
daa
cmp
(bad)
sbb
cmp
loopne
push
movs
test
push
push
leave
les
adc
pop
(bad)
jo
jno
push
xor
ror
or
xchg
push
in
mov
inc
adc
pop
push
inc
mov
push
pusha
or
sbb
adc
and
xlat
shl
cmp
push
xor
adc
or
pusha
fs
pushf
shl
cmp
dec
inc
push
sbb
jecxz
push
into
sbb
jge
inc
sbb
xchg
test
inc
sbb
dec
add
or
push
test
push
push
cmp
ja
fadd
xchg
cmp
mov
inc
jbe
cmc
pop
mov
cli
jo
int
ss
jb
dec
cmps
(bad)
aas
or
jno
push
sub
pop
add
pop
mov
or
and
imul
push
cmp
cld
cmc
(bad)
inc
lods
adc
nop
adc
cmp
sbb
sub
test
pop
cmp
pop
cmp
cmp
cmp
ret
xor
dec
ss
cmps
inc
inc
cmp
push
mov
sub
data16
data16
push
mov
out
int
pop
dec
jb
pop
(bad)
dec
adc
push
pop
cmp
aas
outs
push
je
pusha
jbe
push
fild
repnz
mov
push
test
fcom
inc
pusha
enter
xchg
ss
xchg
shl
in
(bad)
cmp
pusha
mov
inc
inc
push
call
into
fdiv
xor
or
dec
in
inc
outs
dec
call
add
xor
dec
pop
inc
enter
lea
and
adc
pop
js
icebp
inc
adc
cmp
xor
rcr
sbb
(bad)
inc
cmp
(bad)
clc
aam
pusha
cwde
fsubr
fdiv
shr
ret
and
(bad)
loope
mov
into
and
out
rcr
inc
inc
sub
xchg
pop
and
mov
cdq
test
and
mov
outs
je
sbb
and
lds
je
das
push
je
and
mov
or
ret
xor
cmp
mov
jg
outs
je
push
jne
retf
loope
aam
sub
cmp
pop
xchg
push
and
dec
mov
fisttp
add
sti
sub
add
(bad)
jo
aas
rcl
push
cbw
imul
int3
cmp
jmp
sub
jb
daa
mov
cmp
jle
(bad)
scas
addr16
mov
jb
cs
push
add
retf
push
popw
sub
pop
cwde
sbb
adc
or
xor
adc
xor
sub
cdq
mov
jle
test
je
leave
je
sbb
cmp
lods
push
sti
inc
push
or
cmp
in
dec
cmp
jb
mov
stos
add
or
rcl
and
cmc
mov
adc
add
out
push
ss
xor
pushf
test
imul
icebp
add
aaa
sbb
retf
aaa
int3
xchg
scas
inc
adc
add
mov
cmp
or
pusha
sub
adc
mov
int
jg
les
push
mov
dec
ret
push
cmp
mov
repz
repnz
mov
dec
inc
and
inc
mov
test
sti
mov
xor
mov
or
mov
(bad)
pop
jo
aas
mov
mov
push
jnp
int3
dec
mov
adc
fsub
mov
jle
mov
inc
add
xor
mov
mov
js
les
call
sub
or
add
add
add
add
push
add
rcl
dec
imul
mov
repz
add
int3
pop
cs
pop
cmp
repz
mov
jmp
outs
js
xchg
mov
push
cdq
pop
push
in
test
push
jo
mov
mov
enter
nop
add
cmp
mov
inc
add
push
ficomp
inc
es
push
imul
in
sub
call
inc
mov
or
aaa
adc
pop
cmp
pushf
into
test
pop
out
and
dec
push
sbb
rcl
xlat
mov
cmp
and
pop
cmp
or
push
and
call
nop
inc
xor
sub
inc
dec
ret
int
je
aam
adc
push
add
add
sbb
fadd
sar
lock
jp
lahf
pusha
test
jmp
cmp
add
sbb
sahf
pusha
scas
add
add
addr16
(bad)
shl
push
mov
add
push
and
xchg
jle
dec
mov
and
or
jnp
sub
push
xchg
adc
jl
lock
cmps
jne
push
push
shl
icebp
test
or
push
jo
ficom
ds
fnstenv
or
cmp
xlat
push
test
mov
jmp
punpcklbw
mov
mov
cmp
enter
mov
fsincos
lock
sbb
inc
push
and
fidivr
xor
push
adc
add
enter
cli
adc
test
push
or
inc
jo
mov
and
push
or
test
(bad)
cmp
test
cmp
mov
aad
add
std
inc
out
(bad)
mov
push
dec
pop
ja
jmp
sub
loopne
mov
sub
inc
and
mov
(bad)
sub
push
cmp
test
add
fbld
adc
pop
call
enter
jmp
mov
int3
add
push
and
sbb
out
arpl
add
ss
xchg
push
and
adc
dec
jmp
cmp
mov
pop
data16
mov
ds
jge
cmc
mov
and
fist
sbb
jge
sub
loop
in
aaa
adc
popa
and
jle
xor
inc
out
add
cs
xor
fdivr
sbb
pop
and
mov
fadd
add
and
ins
and
and
xchg
and
push
imul
enter
cmp
or
sub
repnz
jnp
(bad)
dec
and
sub
xor
lahf
cmp
sub
xchg
dec
js
mov
and
int3
adc
dec
xchg
mov
push
push
mov
scas
aad
sub
stos
mov
mov
or
dec
rcl
mov
jno
add
in
pop
and
clc
and
mov
icebp
sbb
ja
test
test
sbb
mov
test
jns
xlat
ins
sub
sub
rcr
ret
push
pusha
jo
mov
movzx
pop
fnstcw
icebp
pop
add
pop
fucomi
push
mov
je
or
add
mov
jnp
scas
movs
dec
daa
add
xor
out
sbb
adc
and
push
dec
cmp
push
cmp
sbb
mov
loop
xchg
dec
or
cmps
pop
pop
dec
xchg
(bad)
rol
(bad)
aaa
movs
(bad)
sub
inc
add
dec
xor
pop
bound
push
xlat
ret
inc
popf
mov
(bad)
out
mov
jbe
pop
enter
retf
mov
adc
ss
ficom
stos
inc
xor
add
sub
out
inc
call
push
push
cmp
lods
add
push
push
loop
dec
(bad)
ss
in
data16
mov
cmp
push
push
imul
and
cmp
cmp
rcr
mov
add
cwde
ret
add
jo
scas
in
adc
aas
js
rcr
clc
xchg
adc
das
cmp
push
test
jno
jle
add
adc
push
xor
cdq
nop
push
ds
pop
sub
mov
lea
cmp
inc
int
cmp
rol
sub
loop
and
(bad)
xlat
and
cwde
xor
fistp
mov
push
or
sub
xor
(bad)
imul
sbb
jnp
cmc
sbb
mov
lahf
xchg
bound
jne
jmp
in
cmp
inc
fcom
popa
add
inc
push
push
rcl
ret
sbb
xor
inc
jecxz
data16
aas
add
aad
push
adc
xchg
push
and
xor
add
not
and
(bad)
data16
xor
stc
or
push
call
arpl
gs
out
stos
loopne
ds
ror
jg
push
push
jo
rcl
int
jbe
sub
movs
add
add
or
push
movs
sbb
pusha
push
pop
scas
xor
pop
lea
jne
inc
out
add
repz
mov
cmp
addr16
lea
js
pavgw
push
cmp
or
mov
mov
(bad)
fst
jbe
adc
ret
push
icebp
push
cwde
and
test
add
in
rcl
fs
mov
pop
and
and
retf
or
dec
push
push
xor
xor
les
hlt
mov
arpl
ins
cmp
and
adc
mov
xchg
dec
cmp
lods
fstp
pop
add
popf
(bad)
out
dec
jmp
sub
push
jne
jmp
mov
aam
cwde
cmp
outs
ss
aaa
cmp
jne
jg
cmp
dec
neg
pop
and
and
sub
or
push
mov
xchg
xchg
push
pop
hlt
push
movs
ror
push
fld
stc
or
mov
inc
inc
imul
sti
xchg
mov
mov
and
cmc
sub
int
xor
pop
les
pop
sbb
aas
sub
xor
loopne
push
neg
mov
xchg
scas
xor
fisttp
jl
or
sub
dec
jl
push
dec
enter
jns
push
mov
enter
inc
push
inc
loope
cmp
jne
mov
inc
lea
and
inc
and
or
ret
lahf
jne
fldz
pop
es
shr
sbb
sbb
xor
mov
pop
xchg
and
inc
xchg
push
loop
and
pop
inc
adc
sub
movs
int
add
mov
adc
jecxz
out
dec
inc
add
in
add
fnstenv
jmp
das
add
mov
test
imul
add
shl
test
or
pop
lock
add
xchg
imul
mov
xchg
mov
jne
push
mov
mov
push
outs
addr16
dec
(bad)
push
add
mov
mov
pusha
ror
dec
pop
in
imul
push
frstor
dec
ins
push
mov
cmp
or
dec
xchg
aaa
and
movs
or
jo
sbb
cmp
xor
and
mov
not
aaa
and
enter
push
and
mov
or
xor
into
adc
sub
fsubr
mov
pusha
cmps
in
clc
push
je
push
jnp
add
adc
jne
jne
sub
push
out
push
mov
aam
dec
push
dec
ret
or
mov
or
xor
cmp
jmp
cmp
mov
add
out
fnstenv
mov
add
mov
or
and
push
or
pop
imul
sub
fidivr
mov
aad
jno
icebp
call
test
(bad)
xor
jge
icebp
pop
icebp
cmp
mov
jl
test
into
pop
mov
inc
arpl
add
xor
enter
cmp
jbe
stc
dec
push
xor
imul
add
mov
inc
cmp
sub
retf
sar
dec
pop
lock
rol
aad
fld
push
dec
push
fucom
push
push
or
pusha
sub
cmp
outs
ins
xor
xchg
add
jo
call
pop
cmp
fxch
xor
fidiv
jp
adc
and
(bad)
aad
lahf
lods
sub
sbb
sub
fadd
inc
sbb
cmp
jl
cdq
aad
das
mov
jb
add
adc
vsubsd
pusha
stos
ret
push
jnp
push
data16
add
pop
(bad)
add
mov
pop
mul
inc
pop
sbb
xchg
in
mov
cmp
adc
push
sbb
xchg
or
mov
rol
sbb
inc
or
sbb
lods
and
inc
test
jle
icebp
or
inc
sub
inc
xor
scas
pop
sbb
jb
pop
add
sub
rcr
mov
xchg
movs
test
fld
and
jmp
clc
aam
jae
cmp
and
lock
push
mov
mov
inc
call
jmp
cld
adc
mov
and
mov
push
hlt
daa
dec
inc
xor
or
push
sub
jmp
movd
(bad)
and
lahf
pop
adc
nop
add
add
pop
dec
mov
add
out
mov
mov
pmuludq
xchg
ret
je
pop
jo
pop
loope
mov
push
dec
and
call
adc
jl
or
jg
cmp
in
adc
call
jne
xor
aas
je
inc
sbb
adc
push
rcr
sbb
dec
outs
xor
adc
cmps
nop
push
inc
sub
xchg
scas
or
jecxz
and
and
sbb
add
std
push
cmp
and
outs
ins
les
xchg
dec
pop
adc
add
inc
fwait
leave
mov
cmp
adc
cdq
push
or
inc
pop
dec
or
out
push
cdq
sub
sbb
shr
push
imul
ins
push
fild
sub
lock
std
dec
push
mov
push
lds
test
add
mov
mov
(bad)
sub
fs
add
cmp
sub
cli
or
or
sti
cld
mov
xchg
sbb
test
pop
push
test
mov
add
and
xor
test
mov
pop
sahf
mov
lea
or
adc
dec
dec
xor
inc
xor
(bad)
cmp
lea
dec
adc
pop
in
adc
fistp
dec
ins
xchg
jo
or
fimul
mov
adc
pop
stos
pushf
cli
mov
xor
xchg
lock
inc
cmp
xor
sbb
adc
push
mov
pop
ret
mov
or
jno
mov
or
inc
imul
push
xor
mov
lods
movs
rcl
adc
add
mov
or
and
adc
stos
sbb
add
add
mov
dec
int3
adc
cs
push
mov
mov
add
jno
jle
repnz
inc
lds
push
mov
or
xchg
data16
mov
push
push
inc
in
sbb
dec
xchg
ror
ja
das
test
mov
scas
ret
sbb
not
add
nop
push
jo
(bad)
les
and
cmp
ficomp
xor
test
rcr
sub
add
and
loopne
inc
imul
adc
or
js
mov
sbb
cmc
in
mov
cmp
fistp
inc
iret
je
dec
sub
cs
mov
fadd
mov
test
add
jb
mov
push
add
imul
fist
adc
sahf
adc
(bad)
cmps
add
popf
pop
mov
loop
ds
cs
loope
and
push
stos
test
cmp
xchg
jo
xchg
adc
sbb
xor
pop
mov
repz
inc
jge
push
leave
adc
cmps
or
test
hlt
cli
daa
dec
dec
dec
repz
and
push
adc
jmp
jge
mov
ficom
inc
xchg
cmp
jbe
cmp
pop
jns
jle
adc
mov
pushf
neg
add
repz
or
fdivr
into
jge
(bad)
and
push
xlat
and
sahf
mov
add
mov
daa
jge
popa
add
(bad)
(bad)
(bad)
pop
test
ins
sub
neg
loop
loopne
adc
and
push
dec
ds
or
repnz
js
sub
add
sub
mov
pop
add
cmp
out
sub
cmp
adc
sbb
(bad)
mov
cmp
in
or
adc
jno
(bad)
arpl
add
fistp
xchg
xor
lea
push
mov
das
out
popa
pop
xchg
je
dec
mov
mov
cwde
mov
dec
add
jno
adc
cmps
inc
sbb
jo
sub
cli
mov
enter
pop
ja
je
(bad)
cdq
cmp
rcl
pop
gs
xor
call
xor
nop
imul
adc
mov
out
xor
jg
mov
push
shl
pop
(bad)
sub
mov
js
lods
pushaw
and
adc
push
retf
xchg
add
cdq
mov
sub
jns
sub
adc
mov
test
sbb
stc
dec
xor
sbb
mov
push
and
pusha
jl
les
sub
push
dec
iret
shl
popf
dec
popa
or
jbe
or
inc
lds
and
or
add
stos
sbb
(bad)
mov
add
sub
sbb
pop
mov
pushf
pop
push
fbstp
call
or
add
and
aad
std
cmp
dec
pop
jb
jle
mov
push
ja
or
js
stc
mov
push
sar
push
sub
sub
xchg
test
mov
ins
aad
jl
pop
push
add
push
push
xor
mov
or
sahf
test
test
sbb
mov
inc
sub
push
aas
scas
and
scas
jbe
or
icebp
pop
xchg
mov
fidivr
inc
sub
dec
push
jge
lock
aad
in
mov
add
retf
pop
scas
out
(bad)
and
cwde
sub
push
movs
and
xor
je
or
pop
adc
pop
adc
xchg
cmp
xor
add
push
mov
and
mov
add
(bad)
mov
sbb
repz
or
arpl
add
cmp
add
jp
push
add
dec
inc
dec
pop
adc
or
fucomp
sar
daa
shl
loop
clc
sub
or
mov
xchg
test
clc
sbb
push
fisttp
scas
cmp
mov
mov
dec
jb
cli
ror
test
jb
or
ja
adc
xchg
es
jle
ds
popa
jb
data16
lock
popa
pop
push
add
push
inc
dec
shl
iret
xchg
ficom
mov
movs
adc
sub
add
ror
je
pop
mov
fcom
or
jae
jae
or
add
add
sbb
xor
jmp
imul
cmp
test
or
test
ret
not
jl
pop
pop
push
push
mov
test
adc
xor
mov
test
jb
rep
mov
cs
ret
(bad)
mov
xchg
rcl
add
sub
adc
aad
pop
loope
add
jbe
outs
xor
adc
call
inc
test
dec
sub
jge
pop
loop
imul
lods
adc
xchg
pusha
cmp
mov
ss
adc
movs
nop
je
xor
sahf
jo
sub
idiv
dec
adc
xchg
in
sbb
icebp
xchg
and
push
bound
repz
inc
adc
out
adc
push
sbb
sbb
pop
mov
push
sub
push
pop
or
or
nop
rcl
sub
mov
jne
mov
lea
xor
mov
jnp
adc
push
dec
and
sbb
int3
ret
push
dec
jne
xor
dec
adc
jbe
popa
add
rol
imul
call
push
adc
clc
leave
nop
jnp
imul
pop
lods
mov
or
xor
or
dec
(bad)
stos
(bad)
(bad)
jle
inc
js
cmp
pop
or
inc
inc
dec
cmp
push
pop
adc
cmovbe
sbb
mov
or
pop
cmp
cmp
shr
call
int3
test
sbb
sub
sar
fdivr
rol
push
sub
ss
pop
neg
out
sub
push
test
and
pusha
stc
daa
push
push
inc
dec
mov
lea
lea
(bad)
adc
push
fwait
sub
rcl
or
xchg
inc
sbb
add
sub
push
jno
dec
push
xor
inc
or
test
ins
addr16
rcr
xor
fsubr
sub
push
jmp
add
add
adc
loope
repnz
push
push
sbb
sub
stos
or
push
pop
xchg
pop
inc
mov
xor
push
mov
push
sahf
adc
cmp
inc
aad
mov
add
inc
sub
push
sahf
sbb
push
rcr
call
(bad)
movhps
and
mov
sbb
push
jo
xchg
shl
cmp
inc
add
adc
add
hlt
sbb
pop
daa
xor
and
loop
mov
or
dec
cmp
cmp
push
mov
jb
shld
add
dec
push
sbb
pop
cwde
out
pusha
add
pop
lds
xor
xor
pop
sbb
ja
cmp
inc
and
mov
inc
cmp
cli
aas
xor
or
sar
jle
mov
mov
adc
xor
daa
xor
sub
push
sub
xchg
sahf
ret
add
test
(bad)
stos
(bad)
jg
dec
out
add
fidivr
lods
(bad)
arpl
outs
and
ror
pop
cmp
sub
or
call
pop
mov
inc
rcl
sub
or
adc
dec
out
(bad)
xchg
push
push
jo
xchg
mov
ret
fsub
adc
fld
(bad)
cmp
or
shl
sbb
push
pop
push
mov
and
sbb
and
sub
cmps
lods
push
xchg
cs
and
jmp
xor
mov
pop
dec
adc
pop
push
(bad)
in
and
inc
je
adc
test
xor
lahf
pop
adc
push
sbb
test
movs
movs
add
lods
sbb
jmp
cdq
jns
adc
scas
shl
sbb
dec
popf
inc
dec
jle
xor
stc
inc
mov
inc
xchg
push
test
es
imul
pusha
je
test
mov
das
int3
xchg
inc
mov
dec
ins
sub
mov
or
mov
push
cs
ret
es
(bad)
push
lahf
xchg
stos
lods
xor
dec
or
or
mov
xor
sub
loopne
cld
or
je
out
(bad)
inc
add
jb
popf
pop
pop
daa
(bad)
adc
popa
xor
jns
out
mov
into
or
xchg
or
test
adc
push
rcl
xchg
arpl
popf
sub
enter
pop
or
enter
xchg
sbb
sub
inc
lods
and
jp
xor
ss
lock
imul
and
imul
sbb
js
repnz
jo
popa
inc
adc
imul
setne
cwde
outs
imul
dec
sti
test
jne
xchg
push
push
ret
test
test
test
in
div
js
test
jp
pop
test
cld
push
and
push
das
sbb
cs
in
mov
ror
mov
inc
out
inc
inc
jb
fdivr
jl
bound
je
jp
in
or
call
jl
bnd
pop
add
call
add
stos
push
cwde
retf
sub
jae
inc
push
cmp
push
push
or
mov
or
je
jl
mov
jb
sbb
adc
imul
fld
and
jnp
enter
dec
or
sub
sub
stc
fsubr
into
push
dec
push
push
pop
adc
mov
mov
pop
or
inc
and
sbb
dec
and
inc
pop
add
push
pop
sbb
pop
and
out
mov
js
into
xchg
or
jns
lods
or
sbb
xchg
inc
xor
xchg
push
out
cmp
mov
test
dec
xchg
in
cmp
inc
mov
mov
mov
inc
jmp
adc
jns
ret
sub
dec
pop
iret
arpl
add
adc
xchg
add
adc
sub
addr16
js
xchg
jg
jne
cmp
hlt
adc
leave
lods
pop
or
rcl
mov
pop
in
adc
(bad)
lods
ret
xor
mov
(bad)
movs
pop
lods
lock
shl
push
or
push
shl
ret
mov
(bad)
or
loop
cmc
mov
lods
gs
push
dec
push
int3
sub
adc
cmc
nop
fxch
test
adc
call
lea
sbb
push
inc
popa
fs
int3
adc
or
sbb
inc
and
push
xchg
std
dec
sub
jmp
sbb
hlt
mov
dec
test
fidivr
add
mov
pop
test
xchg
jmp
mov
mov
lds
push
mov
push
or
and
jo
or
inc
movs
xor
test
rcl
push
xchg
push
push
pop
dec
sub
inc
sub
leave
inc
lock
lods
dec
sub
inc
pop
mov
push
or
add
data16
add
add
push
jmp
mov
sti
add
movs
and
lea
push
cs
sbb
mov
xchg
ds
in
push
and
inc
pop
or
inc
dec
stos
inc
cmp
inc
sub
pop
mov
cld
add
pop
push
es
sbb
mov
push
sub
jnp
and
inc
shrd
cmps
cwde
cmp
sahf
aam
fs
xlat
and
outs
add
enter
or
inc
pop
pop
jmp
add
or
or
push
cmps
xchg
and
and
nop
sbb
jne
shr
inc
dec
popf
in
pop
test
sub
ror
push
push
push
aaa
bound
xchg
out
mov
loopne
inc
enter
in
mov
jmp
sub
dec
adc
push
sbb
cmp
or
fadd
cmp
cmp
aam
push
bound
cli
sbb
rcr
inc
lea
ja
sbb
add
cmp
mov
popf
sub
and
mov
or
pop
jecxz
and
clc
fist
lock
sti
js
push
shl
stc
das
add
and
lock
adc
or
ret
cmp
sub
cmp
adc
in
adc
cmp
pusha
mov
sub
mov
push
or
push
adc
add
sub
inc
pusha
adc
cmp
or
inc
fcomp
jmp
push
lods
push
adc
pusha
sbb
ss
pusha
scas
push
add
loopne
mov
push
mov
cmp
dec
cmp
test
lock
repz
nop
mov
mov
dec
xchg
inc
mov
in
rdmsr
add
mov
pop
sbb
or
add
xchg
push
mov
jmp
sub
jo
test
or
je
push
add
mov
or
or
adc
pushf
mov
leave
jmp
pop
push
iret
nop
rcl
push
or
jg
cmp
pop
sbb
mov
adc
cmps
or
add
push
dec
mov
rcr
cmp
fmul
sub
push
push
or
adc
jo
add
dec
dec
jne
jnp
fld
sti
vmovaps
(bad)
sbb
inc
or
cmp
fs
jo
pop
dec
bound
sbb
push
jg
push
push
sub
retf
sbb
push
push
sub
rol
(bad)
push
jo
adc
(bad)
mov
inc
fwait
or
daa
fiadd
cmps
enter
push
xchg
in
test
jle
inc
push
mov
jle
mov
push
cs
faddp
sbb
mov
push
outs
mov
pcmpeqw
pop
loopne
jb
mov
jnp
jecxz
or
add
loopne
jne
push
jg
dec
jge
sbb
inc
push
inc
pusha
mov
push
inc
dec
sub
or
push
pop
push
mov
jae
adc
pop
add
aas
mov
push
push
sbb
adc
adc
sbb
xchg
sbb
push
shr
xchg
nop
daa
sbb
idiv
push
add
aad
fld
adc
nop
xlat
xlat
inc
cmovo
jmp
and
mov
je
add
and
mov
outs
inc
sub
and
sub
jmp
and
xchg
and
sub
push
cmpps
add
jb
pop
dec
jge
jb
mov
adc
mov
or
test
cmp
popf
rcr
cmp
popa
push
cmp
cwde
nop
push
dec
cwde
or
adc
pop
push
inc
or
imul
and
test
mov
lds
jmp
push
dec
pop
fsub
mov
loope
imul
mov
lds
mul
loop
xchg
xchg
mov
sbb
and
add
inc
and
js
ins
out
dec
pop
push
add
outs
inc
test
enter
cmp
jge
loopne
sub
pop
mov
mov
jns
nop
dec
or
xchg
loopne
dec
pop
cmp
test
or
jmp
sub
push
push
clc
retf
pop
inc
lock
or
mov
jbe
shr
inc
cwde
push
mov
sub
pop
mov
dec
rol
ficom
mov
xchg
std
nop
push
shl
adc
inc
stc
xchg
and
iret
or
ret
(bad)
int3
and
xor
inc
test
xchg
sub
xor
sbb
out
ror
call
adc
call
and
add
clc
mov
pop
test
xor
inc
adc
and
adc
je
or
push
popa
xor
es
push
data16
adc
lea
rol
cmp
xor
xchg
repnz
mov
test
cmp
and
add
cmp
xor
xor
inc
arpl
add
div
test
mov
dec
cmp
hlt
enter
push
push
sbb
test
test
push
mov
add
idiv
jmp
sbb
ret
sub
repnz
push
push
sub
pop
hlt
jne
lock
jne
inc
pop
add
mov
jmp
rcl
sub
aad
movs
sbb
push
cmps
aad
fmul
push
add
popf
add
shl
mov
ret
xor
cld
and
clc
or
(bad)
imul
adc
push
add
mov
push
push
xor
jnp
inc
or
jne
push
add
pop
adc
cmp
dec
sbb
adc
addr16
inc
cmps
or
add
xor
xchg
test
dec
int3
inc
imul
test
inc
std
inc
mov
adc
inc
sub
jg
gs
lahf
push
pop
and
inc
inc
aaa
jmp
popa
jl
mov
jg
pop
push
pop
pop
sahf
mov
adc
and
cdq
mov
add
and
cmc
push
and
jo
dec
add
sbb
cmp
push
mov
push
mov
pop
adc
sahf
fadd
test
sub
or
pop
cmp
push
imul
mov
inc
push
fs
xchg
push
sbb
mul
(bad)
pop
(bad)
xor
adc
pop
adc
ret
xchg
push
and
in
mov
jmp
and
rcr
iret
and
outs
mov
pop
mov
stos
pop
dec
movs
frstor
adc
mov
mov
fdivr
retf
ja
jne
test
cmp
pop
mov
stos
pop
cmp
dec
cmp
scas
inc
cmp
ss
in
cmp
and
and
pop
adc
imul
cld
xchg
cmc
pop
bound
in
cmp
inc
mov
mov
xor
cmp
sbb
test
cmc
jne
mov
or
enter
add
sub
je
xor
or
(bad)
enter
mov
sub
dec
arpl
pop
jmp
xor
and
push
adc
gs
xchg
outs
add
sbb
into
rol
sbb
je
sub
jbe
fcmovbe
push
adc
cmp
ins
push
push
(bad)
aaa
or
(bad)
iret
jb
push
(bad)
imul
adc
pop
and
test
push
add
sub
mov
dec
adc
pop
push
push
jno
je
into
aaa
or
sub
loopne
popa
push
push
or
push
jb
pop
and
cld
lock
jl
pusha
xchg
sub
call
mov
mov
jnp
jmp
das
push
sub
mov
fmul
and
push
addr16
mov
and
sbb
dec
sub
popa
xor
pop
ss
mov
pushf
lods
fnstsw
add
cmp
fcmovb
inc
inc
cmps
pop
pop
sti
ss
jl
sti
outs
add
sahf
fwait
mov
(bad)
out
add
adc
dec
push
xor
lea
dec
and
add
xor
xchg
dec
ins
test
fwait
jo
sbb
jl
icebp
add
jno
nop
xchg
dec
and
popf
cmp
push
or
pop
mov
or
and
push
xchg
jp
loopne
and
jg
or
stos
mov
xor
add
clc
push
rol
inc
and
pop
ror
sbb
or
cmp
ss
jge
sub
jle
dec
pop
shl
push
mov
xchg
rol
push
mov
sbb
or
push
inc
inc
cmp
cmp
cli
add
push
or
push
add
fistp
and
inc
pusha
outs
popa
jbe
les
scas
ss
mov
outs
test
clc
pop
pusha
clc
push
aad
inc
push
add
mov
add
ror
bound
adc
mov
rcr
add
add
push
pop
sbb
or
or
sbb
mov
mov
daa
add
cwde
std
call
xchg
sbb
pusha
bnd
mov
into
mov
inc
mov
inc
cld
ja
cdq
jo
idiv
mov
jbe
mov
mov
retf
repz
sbb
popa
push
pop
push
mov
sbb
mov
sub
mov
cmp
xlat
sub
xchg
(bad)
loopne
repz
cmp
add
or
cld
push
push
push
jmp
les
add
dec
cmc
shl
mov
mov
add
add
loop
ins
bound
fidiv
push
sbb
and
and
adc
push
mov
push
cmp
imul
mov
(bad)
leave
add
sub
lods
sub
mov
sbb
push
push
push
pusha
jns
adc
push
push
outs
or
inc
and
mov
loopne
aas
and
ret
ret
mov
sub
hlt
(bad)
and
outs
and
lock
push
and
mov
or
cmp
les
pusha
or
jge
and
xor
jl
dec
inc
mov
retf
syscall
std
out
add
sub
or
sub
sbb
xor
mov
cmps
add
or
mov
in
rcl
inc
inc
sub
lea
mov
or
nop
xor
sub
adc
les
jbe
lods
cmp
sbb
or
movs
cmp
jmp
adc
mov
sbb
sub
add
adc
dec
cmp
cld
mov
dec
dec
xor
shl
jge
xchg
sbb
loopne
rcr
sbb
aas
push
(bad)
shr
sbb
mov
xchg
and
(bad)
rol
or
in
cmc
pop
or
iret
sbb
pop
push
inc
sbb
or
sub
enter
sub
push
sahf
dec
int3
aad
aam
and
push
ja
mov
xor
cmp
and
stos
ror
push
aad
icebp
jle
or
adc
mov
repz
sub
into
push
and
xchg
cmps
pop
sub
cli
sub
push
ret
data16
inc
test
enter
mov
push
daa
push
jo
add
push
push
xor
xchg
or
xchg
push
add
push
sbb
inc
mov
sbb
push
sbb
mov
or
adc
push
push
mov
rcl
jmp
pusha
repz
inc
dec
out
into
lock
out
dec
inc
mov
test
and
or
mov
mov
sti
pop
repz
(bad)
in
push
add
push
push
aad
dec
jo
and
push
mov
sbb
sti
push
add
push
dec
dec
push
push
push
xchg
lods
push
pop
add
stos
mov
fidivr
jmp
add
push
adc
push
or
or
test
fcomp
mov
inc
dec
or
sar
or
lods
test
inc
adc
add
lods
push
das
sbb
jne
es
push
bound
cmp
add
sub
mov
push
jne
inc
push
mov
sub
pushf
mov
push
push
cwde
test
push
aam
sub
popa
or
imul
icebp
popa
stos
add
(bad)
push
inc
dec
pop
aaa
xchg
jnp
movs
sbb
mov
push
or
cli
add
dec
add
or
test
add
cmps
sahf
adc
sbb
add
out
clc
cmp
dec
sbb
cmp
cmp
add
cmps
push
jae
xlat
push
ret
or
sub
test
mov
inc
call
jbe
dec
repnz
ds
xor
popa
pop
jg
mov
add
jne
jp
add
pushf
xor
adc
adc
pop
or
and
fwait
add
adc
mov
mov
sbb
push
inc
pop
cmp
pop
ret
or
and
inc
lea
push
jmp
in
push
popa
and
dec
add
push
add
cmp
(bad)
sbb
mov
scas
or
jo
(bad)
adc
push
lods
xlat
inc
xor
xor
adc
stos
push
movs
xor
or
arpl
push
xor
pop
sbb
push
aaa
js
scas
mov
(bad)
cmps
aad
call
popa
loop
xchg
or
inc
inc
mov
pusha
jae
aam
pop
dec
add
add
jo
and
mov
es
ja
(bad)
push
push
cmp
jle
and
outs
rcl
push
ret
rol
sub
rol
cmc
(bad)
adc
xchg
pusha
adc
les
push
jecxz
mov
inc
mov
jae
jne
adc
ds
js
dec
push
ret
mov
and
push
call
adc
add
cmp
mov
sbb
mov
xor
add
dec
and
cmp
inc
ss
pop
cmp
sub
cld
or
mov
int
dec
sub
aaa
mov
bound
or
mov
repz
adc
test
int
sbb
sub
or
push
pop
mov
adc
push
jb
inc
mov
ficom
jb
push
cmp
ins
in
lock
xchg
pop
or
cdq
xor
or
(bad)
mov
mov
mov
push
push
sbb
cmps
(bad)
mov
xor
push
ror
mov
in
loopne
jp
(bad)
aad
adc
in
mov
rcr
xor
mov
pop
scas
push
dec
retf
cmp
pushf
cwde
jmp
adc
and
xor
pop
sbb
mov
sub
mov
jmp
xchg
sub
mov
inc
adc
movs
add
loope
popa
and
or
push
mov
or
push
jp
aas
mov
(bad)
sbb
pop
es
stos
pop
inc
xchg
or
push
dec
adc
xchg
fsubr
cld
test
sbb
inc
inc
xchg
sbb
shl
mov
sub
push
add
pop
cmp
(bad)
adc
mov
xor
mov
lock
dec
(bad)
and
xor
pop
outs
in
or
pop
or
rol
je
push
jmp
and
xchg
xlat
or
add
jp
push
mov
hlt
cmp
into
cmp
outs
mov
mov
jno
mov
outs
loope
jns
sub
addr16
ss
add
imul
dec
cmp
push
sbb
shr
inc
test
push
ds
mov
push
pop
sbb
dec
pop
pop
ins
add
pusha
sbb
outs
out
jg
add
ins
cmp
out
mov
and
in
(bad)
in
shl
dec
addr16
clc
(bad)
lock
(bad)
xor
sub
ss
and
jmp
std
or
movs
inc
jne
inc
add
and
xchg
jle
(bad)
or
xchg
adc
test
cmp
(bad)
push
popf
xchg
xchg
out
(bad)
or
call
add
add
repz
aam
mov
cdq
sbb
test
xor
jae
jecxz
jb
adc
xchg
pop
ret
stc
aas
pop
(bad)
div
in
enter
ret
add
cmp
cmp
hlt
lock
adc
lahf
movzx
mov
neg
push
sbb
push
(bad)
outs
mov
sub
pusha
leave
enter
rcl
mov
cmp
jg
add
push
ins
or
inc
sub
jmp
das
push
pop
push
xchg
push
loopne
popf
mov
jl
push
and
std
daa
lock
mov
leave
inc
sbb
sub
inc
jg
test
push
mov
push
dec
sbb
dec
pop
mov
and
out
out
ins
pop
mov
mov
pop
lea
inc
inc
pop
mov
pop
lock
loop
inc
(bad)
jge
push
push
pop
pop
movs
mov
test
inc
lock
mov
cmpps
sbb
dec
add
retf
add
push
jmp
stos
pop
inc
jle
pop
mov
adc
push
xor
dec
push
pop
(bad)
jb
bswap
mov
dec
rcr
add
or
inc
adc
clc
shl
sahf
cdq
add
sbb
es
shl
cwde
add
sbb
mov
jo
out
popa
(bad)
dec
push
xor
mov
mov
add
add
add
(bad)
jmp
sub
jne
pop
pop
test
vmwrite
outs
mov
bound
(bad)
pop
push
cmp
rcl
fsubr
je
aaa
push
sbb
add
adc
inc
ret
xor
cwde
xchg
cs
jecxz
mov
inc
adc
ret
int
jg
sub
xchg
mov
pop
nop
xlat
adc
pop
cmp
ret
add
leave
fidivr
pop
mov
(bad)
call
je
dec
push
pop
mov
mov
pop
jge
cmc
add
xchg
push
sbb
mov
sub
inc
loope
sbb
push
inc
pop
mov
cmp
popf
ins
mov
cmps
rcl
xchg
sahf
aad
and
dec
sub
pushf
cs
inc
xlat
push
xchg
and
ds
pop
clc
(bad)
mov
sub
fistp
add
shld
mov
test
daa
vmread
lods
mov
add
mov
jnp
sti
shr
xchg
adc
jl
retf
adc
push
pop
movs
pop
arpl
push
push
jnp
xor
cli
xor
fisttp
adc
mov
jbe
jnp
pop
mov
jle
mov
jbe
push
jno
xchg
jl
adc
shl
inc
and
rcr
or
jecxz
sti
cmp
dec
js
cld
push
(bad)
ins
bound
adc
sbb
add
dec
jecxz
inc
push
push
and
add
mov
jbe
test
mov
or
cmc
leave
addr16
cmp
or
pop
push
hlt
cmp
mov
lds
push
loope
sbb
aad
pusha
and
ds
pop
xor
xchg
add
adc
add
and
lock
aam
nop
call
push
xor
xor
dec
cmc
add
push
dec
pop
mov
call
xor
clc
adc
or
inc
or
cmovo
aaa
sub
inc
dec
mov
pop
adc
test
adc
or
pusha
push
pop
shl
sbb
add
xor
sbb
xor
jb
jl
push
push
inc
sub
fld
sahf
outs
adc
test
shl
in
arpl
inc
daa
push
lea
fisttp
inc
ret
pop
push
test
mov
mov
mov
sub
in
cmp
mov
jno
sbb
aaa
jbe
lea
les
mov
and
xor
outs
dec
xor
sub
shl
fisttp
push
jne
xchg
or
aaa
jb
mov
add
pop
clc
sbb
fimul
or
repz
pop
pop
ret
sub
push
xchg
mov
jne
inc
clc
dec
sar
ret
lock
or
sub
jmp
jo
pop
sbb
int3
lods
lods
jnp
mov
adc
scas
push
add
dec
out
retf
mov
pop
lods
fstp
sbb
and
xchg
rol
cmp
sub
adc
js
inc
push
inc
push
mov
inc
call
std
or
fcmovnu
dec
add
push
repnz
push
or
or
imul
xchg
imul
dec
adc
in
shr
push
adc
in
in
adc
push
sbb
loopne
sbb
ss
sbb
and
sbb
cmps
mov
pop
mov
push
cmps
jno
adc
dec
les
jp
inc
add
add
fist
inc
sub
pop
clc
mov
add
cmp
sti
scas
add
cmp
jae
xor
push
rcr
inc
cmp
ds
sub
mov
or
adc
ins
cmc
mov
fcomp
xchg
and
inc
add
adc
js
iret
xchg
cmp
sbb
ja
jb
pushf
or
jbe
mov
icebp
daa
cmp
(bad)
xor
out
xchg
or
or
or
or
dec
add
rcr
xor
mov
lods
sub
rcl
repnz
and
cmp
bswap
fdiv
jne
mov
pop
aas
sbb
jb
jne
dec
add
cld
add
jge
jne
imul
sahf
add
inc
(bad)
mov
int
pushf
add
(bad)
xor
pop
sbb
test
adc
bound
mov
add
repz
call
and
push
sbb
ss
cmp
and
movs
dec
clc
mov
sahf
scas
cmp
cmp
outs
shl
outs
test
push
adc
or
pop
js
sbb
push
jl
add
sahf
dec
adc
inc
xchg
fldenv
and
dec
ins
dec
iret
ins
or
add
ins
mov
add
push
xchg
add
mov
or
lock
mov
xchg
into
rcr
and
pop
cs
push
test
inc
int3
jge
push
rcr
inc
jmp
scas
or
stc
outs
cmp
rol
(bad)
sti
ror
mov
jmp
push
es
inc
mov
and
mov
or
push
push
push
push
push
add
add
repnz
cmp
stos
cmp
sub
rol
cs
or
fdiv
jle
mov
sti
sbb
dec
cmp
jb
(bad)
pop
jp
adc
push
dec
je
mov
or
out
jg
xchg
loope
lock
add
aas
retf
cwde
or
movs
dec
xchg
enter
scas
sub
add
push
test
sbb
and
dec
lock
xor
sbb
pop
add
sbb
adc
mov
pop
push
push
mov
(bad)
jns
mov
cmp
(bad)
mov
cs
add
pusha
and
xor
js
(bad)
in
(bad)
sub
(bad)
cmp
test
push
xchg
xor
push
arpl
lods
(bad)
retf
fxch
mov
jg
(bad)
call
push
sub
lock
or
push
test
movs
mov
cmp
je
sbb
or
cmp
inc
mov
aas
cmp
(bad)
mov
fadd
inc
add
cmp
cmp
ins
imul
sub
mov
mov
lods
mov
pop
mov
les
push
mov
or
and
add
push
and
call
and
pusha
or
stos
push
ret
sbb
sbb
sti
pop
mov
sub
mov
ins
(bad)
jmp
iret
push
pop
dec
or
sbb
mov
and
adc
or
mov
push
pop
stos
push
imul
call
pop
pushf
bound
jmp
add
dec
ror
dec
adc
and
jl
mov
shl
nop
and
sahf
add
fcom
sub
mov
and
or
mov
aam
inc
cmp
mov
mov
(bad)
fisubr
dec
js
adc
rol
push
dec
push
test
cmp
xchg
imul
outs
pop
and
cmp
inc
jl
push
lahf
inc
mov
and
mov
int
out
xor
cmp
dec
jmp
adc
enter
lea
push
and
clc
jecxz
in
fucomip
cmp
pusha
sbb
rcr
test
push
(bad)
push
jno
push
and
(bad)
sbb
or
pusha
lods
std
mov
cmp
and
gs
imul
mov
xchg
lea
pop
or
int
pop
jae
dec
and
xor
daa
das
cs
loopne
xchg
push
push
xor
sbb
dec
dec
sub
jg
add
jbe
xchg
imul
ret
out
inc
jne
stc
je
inc
es
lock
add
pop
sbb
or
ss
jns
or
ss
les
mov
sbb
and
adc
repnz
inc
xchg
or
or
or
add
xchg
stos
cmp
dec
adc
mov
xchg
push
loopne
adc
ror
dec
gs
push
or
retf
jb
push
stc
sub
fimul
mov
add
jl
pop
add
adc
sbb
jmp
mov
cmp
push
loopne
mov
jle
fnsave
mov
pop
inc
call
pusha
or
es
jle
and
popf
cwde
push
pop
jb
adc
add
push
xor
push
rcl
adc
jle
inc
xor
add
pop
push
ret
loopne
je
dec
mov
and
cs
dec
and
xor
adc
mov
add
sbb
js
jne
add
clc
lods
push
neg
nop
pop
repz
ret
sub
loop
jb
cmp
(bad)
sub
dec
sbb
fsubr
fidiv
push
push
shr
pop
sub
push
push
call
into
inc
mov
mov
pop
mov
inc
push
inc
mov
rol
sbb
(bad)
bound
cmp
push
sub
ficom
into
jg
pop
or
pop
adc
adc
push
sbb
cmc
repz
jb
jg
xlat
or
push
in
cmc
aad
push
dec
add
ror
dec
sbb
jb
adc
pusha
push
dec
cmp
add
pop
jle
cmp
adc
add
or
add
ss
and
repnz
xor
iret
adc
pop
xor
nop
retf
in
sbb
jns
inc
xchg
xchg
push
into
call
lock
cmp
repz
inc
pop
sub
inc
(bad)
mov
retf
adc
jbe
scas
outs
pop
xchg
xchg
adc
cs
cmp
jne
inc
fwait
mov
add
and
and
add
adc
and
push
in
ja
xor
aas
and
jnp
inc
test
bound
push
sbb
ja
aaa
add
shl
jns
adc
pop
jo
and
jno
push
and
pop
and
in
push
cld
sbb
cmp
das
and
xor
jbe
add
and
xor
bound
add
xor
push
je
stos
je
test
aaa
mov
xor
lock
sbb
jbe
push
and
add
test
push
clc
xor
adc
inc
jmp
pushf
push
jp
push
mov
(bad)
xor
cmc
cmp
loope
or
push
xor
nop
and
push
in
retw
sbb
repz
inc
mov
xor
xor
movs
push
and
jecxz
adc
imul
mov
jbe
mov
sub
pop
sub
mov
rcr
popf
and
and
(bad)
inc
sbb
call
aas
push
add
or
push
int3
sub
setle
loope
mov
xchg
adc
shr
adc
into
or
ss
sbb
out
addr16
int3
and
mov
pop
mov
dec
and
sub
sbb
dec
pusha
jnp
or
pextrw
add
xchg
out
mov
movs
jl
jg
push
mov
mov
push
cmp
or
pusha
dec
das
rol
push
and
push
movs
mov
jle
mul
loopne
dec
mov
or
add
xor
gs
push
test
xor
(bad)
xor
push
mov
js
outs
imul
mov
adc
push
push
pop
inc
xchg
add
pop
push
or
inc
mov
les
pop
dec
enter
retf
pop
push
push
push
pushf
das
inc
ret
push
cmps
repz
lea
(bad)
and
aam
push
mov
add
ds
rol
retf
pusha
and
(bad)
clc
or
lds
daa
imul
mov
fimul
xchg
shl
pop
test
std
push
popa
cmp
or
aad
pcmpeqb
(bad)
xor
jmp
(bad)
loope
mov
shl
and
adc
addr16
mov
or
mov
pushf
xlat
movs
sbb
push
adc
shl
mov
cmp
sub
jle
fs
inc
jbe
cmps
ins
inc
mov
push
or
push
jg
(bad)
push
and
sub
test
cs
jg
fwait
sub
(bad)
shr
fs
dec
or
ret
cs
leave
aam
in
jg
je
mov
loop
cmp
jl
mov
sub
xchg
mov
fidiv
add
inc
test
mov
inc
adc
jle
pop
pushf
mov
push
push
push
cmp
xchg
push
mov
shl
inc
sub
je
cmp
jp
stos
xor
push
xchg
mov
push
or
add
maxps
dec
rcl
imul
sbb
enter
adc
adc
push
pop
js
xor
rol
fstp
dec
aas
dec
push
xchg
mov
fild
jmp
xchg
or
cmps
bound
dec
mov
xchg
add
push
lea
jbe
dec
xchg
in
sub
dec
test
xchg
sbb
ja
sub
add
push
mov
outs
mov
or
ja
cdq
add
mov
push
stc
jg
mov
retf
out
dec
jbe
inc
add
mov
daa
or
inc
dec
lahf
jle
inc
inc
retf
daa
push
dec
dec
push
fs
and
retf
daa
sub
repnz
add
(bad)
cmp
sub
sub
sub
out
rcl
and
and
call
add
adc
repnz
sbb
sub
or
pop
push
pop
or
add
adc
test
(bad)
cld
add
mov
cs
push
iret
and
dec
mov
in
repnz
add
test
cmp
test
jle
pusha
ss
mov
dec
inc
inc
cmp
xchg
push
test
das
jg
lds
mov
dec
push
mov
sub
cmp
pop
push
lock
sub
aas
pop
cli
xor
daa
inc
push
retf
es
mov
lods
or
scas
mov
out
sbb
xlat
and
pop
clc
xor
mov
fs
xor
inc
add
inc
and
add
cmp
gs
jno
push
lods
push
sbb
fisttp
repnz
jecxz
retf
and
movs
sbb
jecxz
ins
xchg
xchg
retf
and
cld
cmp
fcom
mov
push
test
cmp
xor
stos
dec
push
mov
lea
sbb
pop
jmp
aam
sub
adc
adc
push
mov
xor
jp
data16
inc
jmp
test
fist
pop
xor
mov
fadd
xor
and
pop
mov
int3
rcl
dec
in
sub
and
gs
xchg
dec
jg
dec
lea
push
mov
ss
or
sub
cmps
jl
add
fidiv
sub
xchg
xchg
jp
out
popf
lock
inc
gs
jle
and
fwait
jne
inc
inc
xor
scas
jmp
xor
xor
sti
and
inc
adc
jb
mov
or
scas
in
jl
ins
test
shl
or
pop
sti
sbb
(bad)
jecxz
imul
jmp
xchg
mov
mov
inc
fisubr
xor
scas
ret
jne
mov
mov
mov
shl
ins
or
add
out
les
sub
ret
add
(bad)
in
and
add
ins
test
or
or
test
fimul
icebp
inc
addr16
jmp
push
dec
or
stos
nop
add
(bad)
mov
or
repnz
mov
push
je
mov
sub
xchg
and
push
xchg
xor
xchg
jne
movs
inc
sbb
ja
xchg
(bad)
mov
xor
fld
or
pusha
in
dec
lods
mov
mov
push
retf
dec
rcl
push
cwde
push
ret
xchg
push
shr
in
nop
xchg
daa
imul
push
pop
xchg
jmp
add
inc
cmp
pop
es
dec
dec
es
dec
xchg
jg
xor
pop
(bad)
pop
cmp
jge
add
adc
sar
loopne
xchg
xchg
cmps
sbb
popa
sbb
in
jnp
add
add
inc
lea
mov
add
aad
bound
sub
outs
inc
cmps
cmp
add
or
push
ror
mov
call
aaa
loopne
pop
xchg
in
cmp
sbb
inc
mov
xchg
jne
mov
sbb
and
test
shr
dec
inc
test
push
imul
fmul
push
ret
cmp
mov
pop
xchg
add
adc
jmp
(bad)
fnstsw
(bad)
adc
int
ror
ror
fstp
retf
jg
shl
ins
mov
push
jecxz
aam
loop
xor
push
dec
fisubr
lahf
pop
repnz
outs
fiadd
dec
cmp
lahf
push
cld
dec
lea
and
addr16
mov
addr16
rcr
xor
shl
leave
mov
mov
(bad)
cli
add
cdq
hlt
push
inc
jl
pop
xor
or
jl
loop
mov
pusha
inc
cld
sub
ret
stc
push
sbb
ja
inc
repz
push
add
jl
push
xchg
cmp
ds
ret
push
popf
mov
jl
(bad)
bt
inc
into
dec
cmp
out
lahf
xlat
push
push
cdq
adc
dec
jmp
adc
add
retf
push
inc
inc
mov
(bad)
dec
dec
push
arpl
xor
jne
and
and
mov
dec
xor
inc
xor
xchg
add
in
push
ja
mov
movs
and
pop
push
cmp
mov
mov
sub
int3
ret
push
cmp
ret
hlt
dec
mov
push
push
jo
sbb
sahf
add
icebp
je
pop
sbb
xlat
xor
cmp
sbb
dec
shl
out
ds
cdq
enter
mov
jl
jg
xor
fistp
lds
fcomp
pop
jle
adc
sahf
push
rcr
and
dec
push
xchg
pushf
mov
push
sbb
dec
sbb
sahf
pop
scas
push
fst
push
inc
dec
inc
mov
jp
hlt
pop
mov
bound
jecxz
or
jb
sub
sub
retf
in
mov
call
dec
xor
jge
fild
outs
sbb
jmp
mov
pop
jecxz
inc
cmp
fld
push
jge
sub
fnstsw
scas
data16
call
ret
(bad)
fdiv
adc
jl
sub
fisub
lea
mov
or
cmp
sbb
mov
out
cli
jne
pop
test
aam
and
dec
add
push
dec
mov
push
jge
pop
gs
lock
sbb
add
out
dec
dec
lea
jmp
add
cmp
cmc
jne
sti
cmp
xor
in
dec
repz
cs
mov
and
mov
inc
mov
inc
push
pop
es
test
mov
mov
pop
add
jbe
cmp
xor
in
inc
inc
inc
jbe
imul
cmp
ins
outs
sub
test
in
jp
sbb
pusha
sub
inc
jbe
sub
mov
push
sub
daa
in
punpckldq
sbb
sbb
sbb
mov
xor
cmp
adc
sbb
repnz
jmp
sbb
je
es
ds
inc
jmp
mov
call
je
outs
nop
and
and
ror
adc
pop
enter
add
sub
adc
movs
sub
push
sbb
inc
jb
mov
sub
jo
fld
clc
cmp
xchg
lahf
push
add
and
fcom
push
mov
je
sbb
push
int3
shr
daa
push
pop
jns
icebp
add
inc
xchg
cmp
test
pushf
sbb
inc
movs
adc
push
sbb
pop
inc
add
jg
test
cdq
sub
add
or
xlat
sgdtd
mov
jmp
lock
add
nop
lods
pop
call
mov
jne
sub
or
and
inc
cmp
and
add
xor
pop
jae
nop
mov
cmp
stos
dec
sub
add
daa
adc
or
movs
adc
mov
sbb
dec
add
adc
cmps
loopne
loopne
jo
loop
dec
rol
inc
leave
in
jns
mov
xchg
pusha
fnsave
inc
nop
add
adc
add
dec
push
adc
test
jb
stc
shl
ins
ret
xchg
rol
test
inc
push
jmp
loop
daa
leave
adc
cmp
ret
xor
adc
mov
test
fdiv
mov
popf
add
outs
ret
sub
test
ret
adc
adc
xor
cs
ins
add
or
push
push
push
inc
inc
cmp
jle
movs
repnz
sbb
dec
ror
pop
adc
push
fwait
add
mov
popf
nop
shr
je
enter
js
or
(bad)
rcl
fsincos
fadd
or
in
test
call
repnz
es
dec
jg
cs
repnz
sbb
dec
mov
fsubr
push
sub
scas
dec
cmp
xor
and
mov
add
mov
push
ret
pop
xchg
cmp
imul
xchg
jbe
aaa
and
jmp
pop
xchg
push
lock
or
popf
dec
(bad)
push
into
and
lahf
adc
cs
sbb
jb
adc
mov
pop
inc
cli
into
aad
sbb
mov
sar
xchg
pop
push
ds
dec
xchg
loopne
or
adc
int
lea
nop
vandnps
add
push
sub
mov
jmp
and
inc
pushf
sbb
stc
imul
and
seto
lahf
enter
repnz
cmp
jl
leave
in
xor
fiadd
dec
dec
and
or
push
xor
inc
leave
fld
jle
stc
sbb
cmp
push
stos
push
nop
(bad)
(bad)
call
adc
adc
sbb
fistp
mov
retf
lods
enter
pusha
jp
add
ret
jbe
mov
pop
adc
push
mov
mov
sbb
dec
std
sbb
cld
add
loope
sbb
add
call
sub
and
jle
inc
pop
adc
rol
test
fild
fcmove
mov
sub
or
or
clc
aam
je
imul
call
xchg
add
dec
xor
or
mov
outs
add
in
pop
push
push
je
cmp
or
jne
jmp
cmps
adc
and
push
mov
sub
test
leave
cmps
sbb
cmp
cld
les
lahf
lods
inc
cmps
cmps
cmps
loopne
dec
call
add
cmp
data16
ds
jmp
add
adc
fist
add
mov
ja
add
mov
js
inc
fidivr
pop
and
or
inc
xor
dec
dec
and
and
mov
add
push
add
aas
clc
add
imul
push
jb
je
stos
nop
shl
adc
add
add
push
enter
(bad)
jg
add
add
dec
add
add
add
add
test
cmp
dec
je
xor
inc
or
add
sbb
inc
push
and
push
mov
jle
dec
cmp
add
add
mov
adc
lods
push
rcl
and
or
adc
or
into
aaa
inc
lea
ds
xchg
add
push
inc
inc
int
cmps
cmp
and
xor
das
push
add
out
lahf
jo
sub
pop
dec
push
jb
inc
dec
clc
adc
cmp
jno
jmp
outs
pop
fidivr
das
and
adc
sub
out
pop
js
mov
xor
add
in
add
and
sahf
loope
fadd
(bad)
sar
jl
xor
mul
jae
xchg
dec
jb
inc
(bad)
jl
dec
mov
or
pop
mov
sbb
dec
cmp
cmps
shr
ret
inc
es
in
nop
push
daa
or
fs
call
enter
adc
pop
fdivr
and
fwait
add
ins
add
xchg
jmp
pop
jge
sahf
stc
cmp
adc
dec
je
inc
jmp
movs
cmp
inc
xor
jne
pop
xchg
xchg
push
dec
pop
adc
xchg
xor
leave
mov
inc
push
je
inc
loope
arpl
pop
add
push
clc
ret
dec
test
rcr
add
cmp
lea
fs
or
cmp
push
and
arpl
jg
and
rol
mov
cwde
dec
adc
sub
cs
lods
pushf
popa
stos
pushf
rcr
adc
fiadd
add
inc
movs
lahf
scas
xchg
js
pop
jne
scas
aaa
cmp
pop
es
jmp
test
repnz
jo
jne
push
pusha
or
adc
dec
adc
pop
mov
mov
sub
xchg
mov
pop
lock
pop
jne
daa
fld
mov
shr
push
jne
or
jno
jno
jo
(bad)
and
jne
push
mov
and
adc
in
or
and
add
and
push
(bad)
push
(bad)
xchg
xchg
cmp
cmp
cwde
or
imul
xor
dec
sub
nop
cmp
sub
loopne
adc
jo
cmp
mov
sbb
xchg
mov
xor
xchg
xchg
mov
retf
shl
int
dec
cmp
test
dec
cmp
bound
sub
pop
mov
pop
and
inc
xchg
call
adc
repz
pop
(bad)
adc
cld
mov
(bad)
loopne
sub
jmp
mov
sbb
sub
ror
mov
aad
sub
(bad)
jae
mov
mov
push
jb
enter
call
mov
jo
outs
adc
jp
in
cmp
nop
and
inc
add
push
into
sub
sbb
bound
fwait
or
mov
mov
movs
pop
sbb
test
mov
loopne
lods
adc
add
adc
or
mov
or
mov
pop
add
es
shl
es
shl
test
arpl
je
je
ret
pop
lods
mov
mov
adc
add
dec
clc
xor
and
aam
loop
xor
or
sbb
inc
adc
dec
mov
mov
ror
sahf
stc
push
xchg
adc
or
cdq
sub
sub
mov
push
popa
pop
pop
sub
jp
or
cli
iret
or
fdiv
pop
cmp
push
dec
movs
cmp
cmp
test
jle
cmp
or
jae
and
add
mov
mov
xchg
push
imul
sub
ret
gs
shl
js
sub
and
add
sbb
xor
enter
out
xchg
mov
ret
call
sub
mov
mov
out
pop
test
push
jne
mov
lods
loopne
jb
xor
mov
adc
es
inc
ja
xor
outs
(bad)
push
aam
int
pop
les
xchg
dec
inc
cmps
bndldx
loop
sbb
imul
mov
or
arpl
fadd
imul
mov
adc
push
sub
pop
rol
xchg
cmpxchg
cmps
xor
pop
pop
leave
cmp
mov
rcl
mov
dec
aaa
icebp
jl
and
cmp
inc
dec
mov
push
iret
jmp
xor
or
jmp
xor
xchg
xchg
mov
dec
and
sub
or
mov
cmp
xor
mov
adc
mov
sbb
pushf
stos
or
xchg
stos
add
adc
adc
and
test
fs
add
mov
add
bound
icebp
ds
pop
aad
cmps
and
sar
pop
push
cmp
adc
push
push
push
mov
jmp
push
call
push
inc
mov
rcr
inc
(bad)
pop
sbb
shl
sbb
mov
push
xlat
je
adc
(bad)
mov
inc
sbb
cwde
rcl
jecxz
ror
add
fisttp
pop
pop
jb
out
sbb
mov
adc
inc
or
jge
neg
or
inc
add
mov
imul
popa
rol
aaa
imul
call
xchg
sub
pop
inc
mov
inc
repnz
test
lahf
mul
fwait
sbb
cmp
add
add
xchg
jg
pop
std
cmc
xor
pop
xchg
jo
or
cmp
iret
fld
sbb
or
xchg
aas
cmp
rol
nop
pop
or
cmc
mov
sbb
mov
or
and
ret
inc
mov
sub
ror
fbstp
ins
adc
or
pop
inc
xor
sub
xchg
push
stos
lahf
jg
repz
repz
repz
and
movs
test
repnz
loopne
daa
test
add
and
dec
and
cmp
or
out
add
int3
movs
dec
loopne
sbb
adc
or
dec
or
pushf
sub
mov
add
jo
das
xchg
repnz
jmp
or
inc
sbb
inc
jecxz
mov
test
(bad)
int
test
(bad)
out
fdivr
(bad)
jmp
clc
mov
enter
sbb
add
cmps
xchg
das
sbb
and
pop
xor
pop
add
cs
mov
sbb
icebp
jnp
fmul
(bad)
dec
adc
ret
jp
mov
js
pushf
(bad)
and
sbb
mov
call
xchg
popa
imul
outs
xchg
mov
repnz
adc
gs
mov
xchg
jp
mov
add
pop
jmp
adc
pop
paddusb
xor
pop
test
and
retf
mov
cmp
xchg
sbb
loope
xchg
out
mov
jl
(bad)
jl
push
xchg
xchg
xchg
or
pop
mov
fnstsw
jmp
xor
sbb
push
test
enter
add
out
dec
loop
xchg
xchg
xor
aad
cs
xchg
mov
and
nop
push
shl
mov
push
sbb
sub
and
inc
sub
add
dec
jecxz
fs
cmps
inc
adc
cmp
out
inc
fbld
test
fldz
scas
mov
fnsave
inc
clc
nop
pop
mov
push
and
sbb
jnp
dec
mov
iret
push
inc
bound
hlt
add
add
fisttp
ds
pop
sbb
cdq
dec
out
inc
adc
add
in
leave
das
inc
test
sub
add
jae
cmp
jmp
in
jbe
xor
jno
(bad)
cmps
retf
sbb
cmp
lods
sbb
je
rcr
or
fadd
pop
loopne
or
inc
push
push
pusha
sub
nop
scas
les
cld
mov
data16
rol
adc
cmp
imul
rol
aam
fldcw
sub
push
and
add
idiv
cmps
shl
jle
sub
sar
int
mov
fdiv
int
iret
dec
sub
push
xchg
repz
aam
ins
movs
cmps
stc
cmp
mov
iret
mov
jns
es
jns
cdq
sub
ins
(bad)
call
push
loop
dec
mov
cmp
push
xchg
mov
inc
sbb
push
push
mov
mov
push
imul
push
ret
adc
shl
xchg
inc
arpl
je
mov
ror
fwait
inc
inc
lahf
inc
adc
jg
adc
push
pop
sbb
sbb
add
sbb
and
and
in
sub
sub
sub
xor
xor
xor
ss
ja
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
dec
arpl
out
xchg
mov
int
mov
push
mov
sbb
dec
retf
repz
jae
loope
push
dec
loop
lock
ds
dec
jecxz
fmul
and
jno
inc
fwait
int
pop
std
push
(bad)
push
fcmovnu
retf
loopne
out
ss
stos
fiadd
out
cmp
sti
cmp
test
ja
sub
jnp
jnp
jnp
ret
ds
addr16
mov
loopne
pop
in
and
add
test
jmp
scas
shl
out
(bad)
out
mov
leave
adc
push
or
pop
add
iret
repz
aaa
icebp
addr16
(bad)
out
fwait
mov
fwait
repnz
lods
jg
push
cld
repz
and
push
gs
repz
inc
add
mov
sbb
jg
add
or
pop
dec
jmp
jns
pop
es
ficomp
sub
push
mov
push
jno
pop
push
inc
push
pop
xchg
(bad)
(bad)
adc
in
aaa
popa
or
mov
loopne
pushf
cmp
sub
shr
movs
lock
mov
cmp
push
or
ret
and
inc
dec
adc
push
mov
js
mov
dec
loope
xchg
loopne
sbb
cli
jmp
dec
arpl
or
int
jmp
in
cmp
ja
xchg
loop
aam
pop
jno
(bad)
xor
ins
lods
hlt
sti
inc
xchg
ret
inc
jl
idiv
mov
imul
dec
cmp
xor
add
out
cmp
test
mov
je
push
popa
(bad)
aaa
jmp
sbb
pop
jne
pop
or
add
cmps
jg
jmp
pcmpeqd
cmp
add
and
add
add
or
sbb
imul
add
push
popa
pop
stos
adc
mov
xchg
xchg
and
xor
xchg
add
addr16
shl
push
or
xchg
je
ror
add
inc
pop
inc
mov
ret
pusha
je
or
daa
mov
je
cmp
je
inc
je
call
mov
sbb
or
iret
test
jne
jmp
sbb
ror
pop
push
lock
dec
stc
mov
int
pusha
push
cmp
push
lahf
push
push
data16
xor
push
or
and
enter
add
push
fisubr
cmp
xor
mov
push
rol
sub
push
add
test
retf
(bad)
jmp
or
bnd
mov
ret
out
cmps
inc
dec
clc
cmp
sbb
pop
lock
or
and
mov
cmp
adc
or
jno
or
and
add
adc
push
add
lods
inc
ret
pop
sub
mov
and
add
jg
adc
dec
push
hlt
outs
sbb
call
push
or
les
sub
add
push
sar
jbe
jmp
push
push
mov
sub
cmp
ja
cmp
jne
jmp
loope
sbb
fldcw
fwait
shr
and
jo
das
or
mov
mov
cmp
sar
xor
adc
and
js
fisubr
dec
dec
cdq
push
jmp
or
and
repnz
or
sub
and
add
call
xchg
sar
test
or
sbb
inc
inc
push
push
imul
retf
mov
sbb
jae
xor
addr16
sub
cmps
sub
inc
push
add
aas
popa
sbb
xchg
xor
push
jg
sbb
push
pusha
and
inc
inc
cli
lds
xchg
mov
xchg
sbb
pop
dec
int
mov
push
xor
aad
mov
add
xlat
and
fcmovbe
repnz
adc
int3
push
add
or
lock
lock
and
pop
cdq
sbb
xor
inc
jnp
ds
imul
faddp
inc
pop
sub
into
sub
xor
ins
jmp
shl
push
dec
sbb
clc
mov
cmp
leave
mov
xor
outs
push
(bad)
daa
jne
jmp
mov
and
imul
retf
lods
jbe
jae
retf
daa
jp
aas
bound
jg
sub
mov
retf
in
gs
jg
mov
xchg
sbb
repz
ss
mov
lfs
pop
in
imul
mov
je
jne
adc
je
js
pop
dec
clc
xchg
jg
je
adc
das
cdq
hlt
or
jne
or
mov
icebp
pop
push
nop
arpl
lahf
imul
pushf
jg
je
adc
jl
push
or
xor
ins
bound
and
cmps
sahf
das
test
sub
xchg
fxch
or
and
sub
mov
mov
jmp
cmp
xor
adc
sbb
(bad)
sbb
call
mov
add
sbb
lds
jle
or
inc
sbb
fnstcw
pop
inc
repz
and
add
push
mov
inc
lds
xor
lahf
jb
test
repnz
pop
icebp
add
and
(bad)
(bad)
mov
pop
cmps
dec
call
push
inc
cmp
(bad)
push
cmp
cmp
(bad)
(bad)
arpl
das
pop
inc
mov
inc
adc
pop
(bad)
aas
xchg
cmps
cdq
or
jo
adc
movs
mov
pop
in
push
rol
dec
cld
int
imul
sub
and
ins
dec
jae
pop
dec
add
das
dec
mov
pop
sti
sti
repnz
jmp
test
sub
div
in
shl
shr
loopne
pop
and
pop
inc
lds
shl
xor
xor
dec
and
shl
cmp
mov
sub
pop
jb
sbb
or
dec
clc
jns
cmp
pop
nop
mov
repz
out
das
push
pop
push
loop
cli
sahf
out
adc
cmp
data16
and
out
add
pop
pop
adc
sahf
mov
sbb
sbb
popf
iret
jnp
repz
sbb
push
loop
push
div
int3
movs
aad
inc
pop
xchg
jbe
iret
sar
ds
cld
pop
aas
lock
idiv
adc
ja
add
outs
add
test
adc
retf
xor
sbb
push
and
cmp
push
add
mov
mov
fnsave
ja
lahf
mov
jb
mov
jmp
or
or
add
mov
add
ja
jb
pop
sti
dec
add
mov
adc
add
pop
mov
push
or
test
xor
hlt
movs
add
push
push
xchg
jo
mov
jo
sub
xchg
adc
adc
pop
jne
mov
fbld
mov
xchg
cmps
popf
inc
cmp
adc
outs
cmps
mov
xor
pop
rol
test
pop
scas
pusha
cmps
and
loopne
stc
(bad)
in
in
mov
xchg
rcr
mov
mov
or
ret
std
sub
adc
xor
pop
and
push
add
dec
pop
inc
cdq
jno
lahf
mov
adc
jge
xor
add
in
cld
mov
inc
inc
neg
(bad)
jns
add
lock
repz
sub
sub
mov
jne
push
push
push
cwde
or
push
sub
jge
mov
adc
cmps
and
sbb
push
lock
pop
loop
aas
cmp
push
push
jecxz
and
sub
jns
ror
push
shr
in
xor
out
mov
dec
fwait
jb
or
pop
push
cs
or
add
cmp
push
or
or
mov
mov
jmp
out
(bad)
mul
or
xchg
retf
(bad)
cwde
xor
add
xchg
rcr
adc
push
and
add
push
sub
jb
out
ffree
ror
mov
pop
dec
fistp
or
xor
push
sbb
dec
ins
add
mov
mov
xchg
scas
fdivr
int
lock
pop
movs
xor
mov
xor
sbb
add
jne
(bad)
test
test
adc
push
push
cmc
cli
movs
das
add
sbb
adc
push
add
push
js
adc
lea
jo
fnstsw
sub
cmp
cmp
data16
in
or
jp
mov
jbe
ret
imul
adc
pop
pushf
test
lea
add
sar
push
jne
int
and
scas
imul
xor
sub
and
retf
std
sub
push
add
push
ret
adc
cmp
push
popf
add
mov
dec
sub
xchg
xchg
or
daa
movs
push
mov
ror
or
or
test
cld
sub
fsub
adc
mov
add
jb
sbb
cmp
xor
mov
sub
adc
push
xor
push
mov
dec
xor
das
adc
add
mov
cmp
xor
outs
inc
fwait
imul
or
stos
hlt
mov
popf
out
push
mov
xor
push
mov
in
and
and
sub
stos
into
test
int3
sub
test
inc
inc
and
ins
inc
xchg
push
ins
cld
adc
les
mov
jnp
sub
sub
dec
je
jle
inc
dec
in
js
jb
std
addr16
and
sbb
jl
adc
sbb
pusha
jne
jnp
ret
arpl
mov
cmps
mov
sub
cmp
xor
icebp
inc
mov
xor
jg
fdivr
sbb
push
jo
ja
sub
push
adc
sti
xor
fsubr
or
ins
pusha
xlat
popa
jecxz
test
iret
or
enter
sub
jnp
std
nop
sub
iret
mov
mov
push
sub
ins
ins
mov
outs
fmulp
and
jo
sub
pop
je
jmp
add
shr
daa
mov
push
mov
jb
je
jb
push
aas
jl
sub
add
cmps
mov
mov
mov
cmp
mov
push
pusha
fcom
pop
aad
inc
js
dec
sub
and
add
(bad)
push
xchg
push
inc
cmp
mov
cmps
inc
ret
pop
add
xor
xor
jmp
and
mov
test
into
push
loopne
out
xchg
stos
adc
mov
cmp
sub
cmp
or
(bad)
ss
inc
push
push
push
inc
leave
sbb
xor
add
pop
xor
sub
xor
jl
aam
outs
dec
push
sbb
mov
out
popa
sub
cmp
sub
and
lock
repz
add
push
mov
xchg
add
mov
xchg
rol
or
or
push
push
xor
push
repz
arpl
jl
inc
ret
dec
xor
fdiv
dec
mov
mov
int
shr
xchg
or
jle
and
fistp
mov
int3
xchg
mov
popa
mov
adc
xor
outs
jl
cmc
mov
sbb
adc
adc
or
fsub
outs
sbb
mov
cmp
daa
mov
clc
mov
cmp
int
jo
mov
jle
pushf
jbe
push
jne
mov
sbb
jl
cmp
test
clc
aas
mov
mov
das
mov
mov
data16
dec
and
mov
adc
or
js
adc
mov
shr
(bad)
add
pop
push
call
cmp
pop
adc
cs
mov
mov
clc
add
mov
clc
pop
lock
dec
cmp
je
mov
fcom
cmp
sahf
xor
mov
push
adc
or
fistp
ja
mov
mov
test
sahf
and
or
add
jle
xbegin
pop
jb
(bad)
gs
sub
pop
dec
inc
(bad)
je
sub
jnp
jne
enter
ja
and
add
sbb
test
and
add
les
les
lock
push
push
or
arpl
adc
pop
imul
scas
xor
cmps
sbb
cmp
xchg
push
xchg
or
push
stc
add
mov
mov
or
icebp
lahf
xchg
xor
js
(bad)
xchg
imul
mov
mov
das
out
xor
adc
inc
lods
or
arpl
dec
and
add
dec
mov
dec
jo
mov
loopne
pop
lea
popa
jge
sub
sbb
push
adc
jnp
or
adc
and
retf
mov
push
push
dec
loop
or
push
xor
(bad)
call
inc
sbb
cmp
loop
push
addr16
sbb
in
push
jo
ds
fdiv
push
cmp
mov
retf
sub
in
push
addr16
add
inc
cld
xor
sbb
inc
stos
daa
inc
test
mov
std
mov
pop
dec
push
mov
fwait
inc
div
push
xlat
mov
ret
mov
pop
aas
lds
adc
lahf
mov
and
dec
retf
xchg
inc
sbb
adc
and
or
std
add
mov
jl
loope
mov
mov
cmp
jne
sbb
adc
mov
js
and
into
inc
lea
cmp
ret
inc
mov
jg
daa
iret
pop
in
inc
and
or
jle
dec
pop
arpl
test
hlt
rcl
jae
add
daa
mov
add
jle
mov
jmp
pop
jne
inc
test
popa
inc
cs
xor
call
clc
push
adc
scas
ss
or
adc
ds
pop
pop
add
mov
pusha
aaa
mov
(bad)
test
add
add
(bad)
sub
movs
mov
push
es
mov
mov
mov
sub
sar
jmp
xor
push
inc
add
push
cs
adc
xchg
add
and
sbb
pop
mov
hlt
cmp
and
add
dec
xchg
and
dec
ror
call
push
je
push
mov
(bad)
sar
xchg
dec
lahf
jo
scas
fld
cmp
or
sbb
add
add
loop
push
es
call
xchg
push
dec
lahf
hlt
dec
imul
and
push
push
sub
sar
dec
inc
add
add
sub
ret
stos
pop
jns
cmp
fidivr
shr
(bad)
push
or
shl
and
fldz
xor
mov
je
jb
ss
test
jb
in
scas
nop
movs
pop
add
or
pop
dec
sbb
xor
cmps
push
cmp
leave
adc
inc
dec
in
jp
popa
fld
jb
add
and
pushf
inc
sub
sub
es
dec
aas
fstp
push
push
mov
adc
pop
mov
jnp
mov
xchg
das
adc
imul
or
push
sub
push
test
add
xor
mov
xor
and
or
jmp
scas
push
aas
mov
dec
adc
sub
inc
adc
add
jnp
test
xchg
cmp
popa
dec
popa
sbb
icebp
add
inc
jmp
adc
add
adc
test
jno
pop
fs
test
adc
push
cld
outs
stos
loopne
aam
ret
and
mov
mov
cmp
je
pop
js
sar
cwde
mov
and
sahf
mov
lock
repnz
pop
mov
add
adc
scas
mov
mov
jl
push
pop
push
in
dec
loope
sbb
fsubr
aaa
test
in
or
push
push
(bad)
(bad)
push
dec
mov
mov
dec
int
imul
cmp
jnp
out
in
add
lock
pop
dec
(bad)
push
jmp
or
pop
outs
out
lods
inc
std
mov
in
add
pop
pop
or
sub
jmp
cmp
push
push
aas
push
inc
sti
pop
imul
add
add
push
sbb
add
sbb
xchg
scas
mov
test
jo
cdq
sub
dec
call
iret
mov
adc
cmp
and
mov
cwde
ds
arpl
rcr
iret
adc
mov
mov
test
inc
inc
mov
jp
out
cmps
and
or
xchg
(bad)
iret
push
mov
mov
push
stos
inc
mov
mov
adc
adc
popa
pop
stos
and
pop
pop
sbb
sub
cdq
das
mov
mov
add
retf
(bad)
or
or
and
test
ror
cmp
cmp
aam
mov
aam
and
add
and
mov
mov
dec
icebp
lahf
inc
cmp
jne
cmp
mov
outs
lods
jmp
loope
cmp
js
outs
adc
push
mov
cmps
adc
mov
and
mov
sbb
push
mov
mov
pop
push
popa
mov
ss
in
dec
add
mov
ins
pop
and
mov
pop
pop
loopne
jo
jno
movups
movs
nop/reserved
data16
lock
adc
stos
cmp
sbb
or
fcmovu
sbb
rcl
mov
sub
popf
add
test
jl
pop
inc
mov
lods
jnp
dec
add
push
clc
xchg
or
dec
lods
daa
or
shl
push
loop
fisub
sub
in
sub
fiadd
loopne
pop
or
mov
or
and
pop
das
jae
ss
dec
(bad)
adc
pop
and
inc
or
xchg
inc
adc
cs
sbb
xor
push
in
push
or
dec
mov
adc
inc
sub
mov
pop
inc
fnsave
cmp
add
or
jne
and
cmp
inc
sub
xchg
push
sbb
(bad)
arpl
loopne
adc
shr
push
aam
adc
inc
int3
or
fist
push
adc
pusha
inc
loope
sbb
xor
inc
mov
inc
inc
jnp
dec
cs
mov
or
mov
pushf
dec
jmp
and
push
sub
sbb
je
inc
or
pop
push
pop
mul
and
push
ror
inc
test
clc
mov
fcom
jmp
popa
(bad)
neg
jne
inc
cmp
aam
cld
push
pusha
and
pop
or
push
push
lahf
cmp
or
add
mov
add
lea
nop
mov
in
jne
out
into
jnp
test
sbb
adc
push
scas
movs
or
and
and
test
mov
jmp
sbb
or
jp
test
sbb
cmp
xor
sbb
pop
xor
cmovno
push
lock
xor
push
push
adc
xor
es
xchg
push
push
push
out
mov
jno
mov
lds
push
cmp
not
jp
sti
jle
inc
inc
pop
dec
pushf
shl
ins
es
cmp
push
popf
lock
aas
sub
add
cmps
or
sub
jbe
aam
cwde
test
pushf
adc
dec
aam
cmp
and
inc
mov
sbb
xchg
sbb
aaa
or
je
mov
pusha
(bad)
and
pop
pop
sbb
test
lahf
adc
pop
rcl
add
add
fmul
(bad)
and
pop
xor
(bad)
adc
add
add
je
xor
cmp
push
jl
test
mov
rol
fld
adc
adc
add
outs
jmp
add
enter
adc
pop
mov
mov
mov
adc
ret
pop
dec
sub
mov
sbb
mov
or
in
xchg
outs
stc
or
and
arpl
icebp
cmp
je
aaa
lods
or
(bad)
out
mov
add
nop
cmp
xor
xchg
inc
shr
and
push
add
out
sbb
add
xchg
sbb
sar
xor
dec
pop
and
mov
or
or
jecxz
rcl
xor
iret
and
dec
stc
or
pop
add
arpl
rol
aas
mov
add
dec
jne
sbb
mov
cmp
add
sbb
mov
rol
in
fimul
call
inc
mov
jmp
inc
inc
je
adc
repnz
icebp
and
push
ret
add
jle
or
ins
sbb
icebp
add
sub
push
xchg
sub
push
jno
rol
jge
adc
clc
lods
dec
fisub
adc
add
dec
les
jb
mov
add
pop
dec
pop
cmp
push
lahf
push
shl
rol
popa
add
mov
pop
sbb
inc
jge
jmp
add
push
cdq
lods
push
add
mov
push
clc
jae
add
mov
pop
ret
lea
xor
or
ins
mov
push
push
shl
fdiv
add
daa
test
outs
add
jle
fs
push
shr
mov
sbb
movs
pop
aaa
and
sar
add
push
cs
add
xor
add
rcr
jmp
add
hlt
stos
or
xchg
lea
ror
push
xor
(bad)
les
and
push
sub
pusha
rcr
daa
stc
or
gs
arpl
adc
add
ins
mov
push
jne
leave
test
mov
das
lahf
cmove
xchg
sbb
bound
arpl
and
sbb
pop
xchg
dec
xor
add
mov
and
jmp
sub
test
leave
adc
ja
bound
dec
inc
cmp
ins
mov
sub
add
xchg
push
jne
sbb
and
pop
and
mov
pop
pop
in
fsubr
mov
sub
xor
je
mov
fwait
sub
xchg
test
sbb
add
mov
out
inc
dec
or
add
cmps
mov
shr
mov
and
push
rcr
arpl
aas
retf
(bad)
mov
repz
dec
sub
jb
sbb
push
pop
adc
hlt
jl
mov
mov
ror
add
mov
mov
mov
loop
bound
cld
stos
bound
xor
jb
or
xchg
hlt
jnp
outs
dec
cmp
adc
ins
mov
daa
inc
dec
or
dec
or
mov
inc
sbb
inc
sbb
and
dec
push
cmp
mov
or
mov
mov
xlat
in
daa
dec
test
inc
inc
sbb
pop
call
cmp
jne
rol
outs
jmp
xchg
adc
fisttp
pop
add
xor
jb
pop
cs
icebp
outs
xchg
mov
add
add
loopne
cmp
pop
sbb
ror
shl
mov
mov
push
xor
dec
push
sub
stos
dec
sahf
mov
add
mov
pop
add
or
add
out
mov
das
ds
push
inc
mov
add
pop
(bad)
push
stos
xor
sbb
aam
and
shr
xor
clc
call
cld
jne
mov
push
enter
(bad)
dec
and
loop
ret
outs
shl
retf
and
pop
xor
pop
in
inc
into
jnp
jns
add
call
in
dec
or
mov
push
adc
fiadd
mov
add
or
or
jae
aas
sbb
je
or
mov
xor
lea
cmp
mov
inc
add
jae
dec
(bad)
fild
sti
cmp
push
lock
jg
mov
movs
jb
fs
je
js
cs
sbb
popf
je
inc
mov
shl
not
xchg
mov
sbb
or
push
in
and
jne
sbb
add
mov
aam
adc
popaw
shl
add
pop
mov
inc
inc
inc
or
ins
or
and
or
je
ja
and
pop
imul
xchg
push
sbb
jns
test
and
mov
out
ins
pop
nop
or
cdq
outs
xor
inc
pop
scas
(bad)
arpl
popf
pusha
out
add
push
inc
inc
mov
cld
int3
imul
scas
cmp
add
push
inc
adc
cmc
shl
fld
push
dec
mov
sub
or
mov
add
ror
adc
add
arpl
jg
xor
push
ds
mov
ror
enter
pop
movaps
mov
out
lods
rcr
pop
inc
call
lock
icebp
mov
add
adc
out
jae
mov
or
not
mov
xchg
(bad)
mov
add
push
mov
mov
inc
or
ret
sub
adc
sbb
int3
dec
jb
xchg
lea
add
lock
sbb
add
in
jbe
sub
mov
call
lock
or
pop
pop
ss
add
add
xchg
fbstp
xor
mov
pop
pop
outs
inc
xor
ds
pop
add
rcr
or
jmp
ds
push
push
and
push
repz
aam
jmp
cmp
fsubp
inc
jp
sbb
dec
dec
sub
inc
cld
mov
aaa
or
sub
push
aaa
mov
xchg
and
es
xor
inc
sub
fwait
sub
mov
js
and
(bad)
mov
or
scas
and
clc
out
fwait
inc
pop
mov
iret
or
inc
fisub
js
adc
nop
(bad)
out
shl
pushf
adc
xor
(bad)
push
pop
mov
jmp
mov
add
pop
popf
dec
and
xchg
cmc
dec
cmp
or
mov
xor
and
inc
and
ins
xchg
push
in
movs
sub
jmp
sub
pop
sbb
adc
sahf
inc
sub
xor
xor
sbb
adc
fs
inc
mov
or
mov
add
mov
mov
mov
push
pop
push
xor
int
dec
mov
sbb
jae
ins
outs
push
pop
xor
dec
mov
movs
cmps
scas
ret
sahf
or
mov
or
js
sub
dec
sbb
in
loope
or
cwde
mov
pop
pop
cdq
ins
pusha
jnp
or
sub
jo
and
add
push
stc
dec
sub
xor
and
push
adc
leave
and
push
test
inc
sbb
and
adc
(bad)
aaa
ret
test
je
sti
ins
cmps
xchg
and
xchg
jno
bound
fistp
cli
hlt
dec
dec
mov
jns
mov
add
out
(bad)
adc
and
pop
xor
rcl
cs
imul
jns
and
sbb
jp
xchg
jne
adc
and
gs
mov
mov
and
sbb
and
xlat
dec
xlat
(bad)
adc
or
ss
sar
sbb
mov
add
jmp
ret
sub
aaa
rcr
push
push
pusha
pop
and
fist
les
pop
pop
cmps
mov
or
mov
fisttp
pop
inc
push
sbb
xor
mov
(bad)
sub
ins
add
imul
push
pop
adc
dec
aam
frstor
mov
push
push
pop
ss
mov
ds
shr
adc
and
repz
or
push
sub
test
dec
fwait
inc
and
cmp
xor
cdq
push
mov
and
sbb
scas
sar
sbb
and
xor
dec
nop
add
jb
movs
pop
adc
sbb
imul
add
add
or
out
add
lods
dec
inc
or
push
ret
adc
push
aam
push
xchg
adc
dec
(bad)
loope
cmp
ds
inc
xchg
mov
(bad)
and
in
mov
mov
out
mov
(bad)
adc
jno
int3
xor
das
sbb
inc
add
mov
cmps
(bad)
sbb
xor
ret
sbb
push
xchg
fs
jecxz
inc
in
cmp
aam
imul
dec
sbb
sbb
sub
mov
pop
mov
push
mov
xor
adc
mov
add
mov
jbe
lea
push
push
or
push
xor
jl
sar
les
outs
in
push
add
retf
test
call
mov
les
pop
push
push
mov
loope
and
adc
lea
retf
ss
cmp
(bad)
jne
mov
repnz
push
clc
test
stos
outs
add
push
imul
mov
shl
dec
mov
(bad)
xor
push
imul
mov
gs
push
mov
inc
and
cmps
loopne
xlat
jle
(bad)
pop
adc
cmps
pusha
sub
pop
shl
add
js
(bad)
dec
push
cmp
xchg
mov
xchg
sub
cmp
xor
mov
jbe
cmps
mov
add
push
aaa
inc
push
cs
lods
imul
cmp
pop
call
jns
ds
sbb
scas
nop
pop
dec
in
and
addr16
gs
clc
dec
push
cmps
test
(bad)
aad
jnp
(bad)
leave
es
ja
pusha
pop
xor
sub
or
or
add
mov
mov
xor
xor
fsub
dec
in
dec
movs
push
mov
pop
sbb
ret
(bad)
sub
clc
call
add
adc
push
push
cmps
add
call
test
or
lea
jmp
hlt
or
ins
je
lahf
inc
cmp
pcmpeqd
add
mov
cwde
lea
pop
cli
or
out
idiv
fistp
je
lods
mov
or
mov
pop
jb
daa
inc
xor
adc
cmps
loop
fisttp
icebp
mov
daa
mov
mov
xor
fistp
add
sbb
mov
push
gs
sbb
dec
daa
adc
and
or
xor
retf
jno
mov
mov
je
gs
xor
stos
sbb
add
sbb
pop
jge
push
imul
pop
xor
jb
or
add
cli
sahf
loopne
ret
mov
inc
mov
aas
cs
and
push
push
mul
dec
mov
mov
sbb
xor
fistp
inc
pop
(bad)
xchg
enter
rcr
xchg
rcl
rcl
xlat
inc
jns
jnp
dec
mov
and
sbb
movs
xor
je
js
mov
or
(bad)
jge
and
test
push
icebp
and
dec
dec
popa
and
outs
push
nop
mov
xchg
inc
adc
cmp
inc
je
add
or
cmp
pop
(bad)
fnstsw
(bad)
gs
and
adc
cmp
pop
ret
adc
cmp
(bad)
push
xchg
sbb
add
out
movs
retf
jo
scas
add
test
ins
add
ror
lock
hlt
dec
and
rol
ss
mov
add
adc
scas
add
adc
add
fwait
push
and
enter
or
sbb
aas
test
and
or
cmp
sub
pushf
push
ret
inc
mov
ret
inc
jg
sub
xchg
adc
sbb
jp
mov
pop
mov
test
or
or
js
add
inc
or
test
xor
mov
push
nop
pusha
inc
les
mov
xor
xor
mov
imul
add
pop
jge
push
rcl
xchg
dec
inc
pop
jp
inc
sub
dec
mov
movs
jl
or
stc
pop
cmp
dec
cmp
(bad)
jl
clc
add
xor
rol
jge
out
add
adc
and
add
and
sub
mov
or
in
dec
cmp
lea
xchg
xchg
inc
and
ja
test
xchg
dec
aam
mov
adc
dec
inc
mov
popa
fucomip
push
pusha
inc
mov
sub
shr
cmp
icebp
jle
sub
mov
leave
sar
loopne
dec
xor
sbb
xor
xor
and
fld
and
push
lea
mov
or
cwde
jbe
mov
pop
pop
shl
dec
adc
adc
aas
push
scas
jle
mov
xor
ss
xchg
mov
sbb
inc
das
lea
push
les
out
inc
and
push
cmp
jae
jne
push
daa
mov
dec
mov
fild
mov
sbb
and
fadd
stos
inc
stos
jl
in
pop
mov
ss
adc
test
mov
movs
and
jns
add
xor
inc
fbstp
push
pop
add
xchg
push
mov
or
sbb
add
push
cmps
push
pop
and
jnp
dec
ins
clc
daa
add
stos
cmp
shr
inc
shl
je
and
push
jne
add
mov
jmp
xor
mov
aaa
sub
cmp
jnp
add
adc
or
push
xchg
jnp
or
pop
out
fwait
push
push
push
rol
sbb
jle
cmp
xlat
mov
stc
je
mov
add
pushf
shl
push
inc
bound
loope
jne
test
mov
aad
mov
movs
cmp
dec
sub
add
add
ins
pushf
add
pop
pop
jo
das
jg
push
cmp
or
ror
xor
adc
mov
add
in
mov
stos
dec
add
and
icebp
sbb
xchg
imul
inc
loope
push
jecxz
fwait
inc
mov
or
add
mov
adc
or
sbb
pop
cmp
adc
psubsb
stos
movs
sub
jbe
sahf
in
mov
xchg
xchg
add
shr
dec
push
(bad)
into
nop
rol
out
mov
push
pop
add
add
sbb
in
xor
and
sbb
adc
dec
dec
mov
add
mov
mov
sbb
inc
push
(bad)
mov
cmp
sbb
out
mov
xchg
lds
and
mov
adc
call
add
lds
jb
and
push
or
push
pushf
pop
shl
dec
xor
xor
mov
xor
movs
mov
inc
inc
aam
inc
sahf
add
shr
add
imul
fldcw
cmovbe
cmp
xchg
jl
dec
cmp
rcr
rol
test
sbb
and
cmp
cmp
push
mov
xor
aad
hlt
ret
or
add
outs
rcr
pop
jg
pop
in
inc
shl
leave
loopne
push
ins
call
repnz
dec
or
stc
outs
loopne
or
and
inc
pop
add
les
je
push
dec
mov
retf
push
dec
lea
jb
add
ror
test
push
push
fld
push
push
dec
xchg
push
mov
dec
push
cld
mov
xlat
and
and
inc
pop
mov
sub
xor
ja
(bad)
push
adc
sub
add
lea
es
xor
jne
adc
gs
int
add
push
jno
data16
cmp
push
les
shl
dec
fiadd
adc
and
dec
dec
push
pop
fucompp
push
push
push
sub
dec
jecxz
je
adc
dec
loop
in
sub
cld
sbb
or
cmp
aas
or
dec
cmovae
inc
or
dec
sahf
or
imul
sub
sub
cdq
adc
push
and
out
je
sub
sbb
fdiv
adc
fcmovb
sbb
adc
sbb
jnp
sbb
push
sbb
into
adc
dec
or
or
adc
mov
dec
jne
int
inc
dec
adc
ror
push
nop
add
outs
enter
dec
mov
jle
dec
adc
jecxz
inc
add
loopne
mov
mov
dec
dec
(bad)
mov
scas
retf
add
cmp
lods
in
pop
mov
test
push
cdq
add
dec
inc
or
inc
jo
pushf
add
add
push
arpl
push
xor
sub
add
add
add
adc
sbb
sbb
inc
je
aaa
dec
test
hlt
add
inc
out
jnp
adc
push
jns
fdivp
sbb
push
or
xchg
cmp
or
sbb
ret
add
cs
push
shr
pop
mov
pop
ret
or
push
cmp
xor
add
cmp
mov
aad
inc
neg
push
push
addr16
imul
imul
sar
or
xor
and
pop
adc
pusha
cdq
and
add
adc
cdq
dec
leave
fiadd
dec
(bad)
shr
push
fdivr
enter
jmp
sbb
adc
movs
pop
daa
cmp
jecxz
cmp
shr
jl
loope
scas
aad
mov
outs
inc
push
mov
adc
or
push
rcl
add
sub
xchg
jmp
mov
ret
and
sbb
movs
cmp
push
pushf
xor
jae
xchg
call
push
add
lea
push
push
add
pop
push
sub
sub
or
sbb
or
cmp
in
neg
mov
push
inc
push
jg
mov
ja
mov
inc
jmp
xchg
jmp
data16
inc
xor
or
inc
mov
aad
add
outs
jb
or
or
aad
ja
les
ja
pop
pop
xor
test
dec
adc
inc
test
(bad)
dec
sub
mov
jmp
push
iret
enter
daa
adc
gs
dec
mov
push
dec
inc
add
in
add
inc
push
outs
xchg
inc
es
cmp
adc
hlt
je
(bad)
in
mov
inc
mov
mov
dec
adc
and
adc
jnp
arpl
and
adc
lock
xor
js
es
jns
shl
adc
pop
cmp
jns
dec
loope
pinsrw
mov
or
jbe
mov
or
push
leave
mov
call
jecxz
dec
jge
test
cdq
mov
addr16
call
pop
pop
gs
jb
and
or
jno
jo
jecxz
xor
dec
pop
mov
mov
sub
inc
shl
cmp
push
in
sub
mov
and
int3
aad
adc
jae
(bad)
out
shl
aas
cmp
cs
pop
mov
dec
xor
inc
cmps
adc
enter
inc
leave
and
movs
push
int3
loop
xlat
and
xchg
popa
pop
mov
push
push
aad
ret
add
dec
sbb
cmp
xor
mov
and
pop
mov
ins
add
xor
add
stc
icebp
lea
push
ss
add
inc
bound
aad
loopne
sbb
mul
inc
adc
ss
dec
cmp
pop
(bad)
push
xor
sar
lea
xchg
jle
xor
sub
sbb
movs
lea
std
mov
mov
push
push
push
retf
jno
jp
les
cmp
adc
jno
bound
cmp
retf
mov
clc
and
inc
fld
jp
and
sub
and
fcom
xor
ds
ret
jbe
and
sar
test
inc
call
push
fsub
add
mov
inc
call
add
sti
push
push
test
cmp
loopne
or
cmp
cmp
jl
inc
shr
adc
nop
test
cmp
adc
inc
sub
xor
mov
mov
movups
xchg
jl
xor
and
(bad)
lock
test
jmp
dec
cli
dec
add
shl
push
xor
dec
inc
rcl
push
push
or
cmc
pusha
movs
and
jp
or
adc
or
push
mov
pop
(bad)
out
dec
push
push
dec
add
(bad)
cmp
jne
or
cmp
jl
add
push
dec
je
out
je
cmp
or
adc
push
ins
xchg
mov
adc
sub
cmp
sub
gs
push
mov
add
push
cmp
out
fnstsw
and
(bad)
pop
mov
sbb
out
or
(bad)
dec
cmp
pop
loope
mov
xor
or
imul
and
fcmovb
call
xor
and
das
cmp
inc
sub
popf
dec
push
adc
push
xor
sahf
aas
or
test
xchg
mov
in
cmp
push
xor
sbb
jmp
clc
dec
pop
add
call
pop
xchg
jle
jbe
mov
dec
popf
mov
add
cwde
add
fcom
add
ret
xor
aas
or
cmp
or
mov
pop
push
cmp
mov
jg
das
arpl
lea
mov
or
(bad)
inc
push
cmc
add
sub
mov
jo
xor
(bad)
jo
fild
nop
push
add
jo
adc
xor
fwait
cmp
imul
fwait
int
mov
push
fs
and
dec
test
dec
test
sbb
or
sub
mov
movs
dec
shr
cwde
cmp
test
stos
dec
lea
adc
sub
xor
pop
loopne
les
lea
push
xchg
add
adc
add
lods
push
or
ret
or
enter
cmps
fbstp
xor
xchg
inc
jne
ficom
fbstp
fcom
repnz
cmp
push
dec
in
push
fsub
and
or
movs
add
adc
nop
xchg
xor
data16
inc
cmps
dec
or
inc
pop
xor
adc
enter
adc
les
jo
cmps
in
cli
pop
ss
sub
test
pop
repnz
adc
sub
add
mov
fcomp
jo
push
mul
in
shl
mov
push
out
sbb
test
or
xchg
xor
call
dec
pop
push
push
push
neg
scas
mov
dec
es
int3
mov
ja
mov
or
dec
mov
push
or
sbb
in
xor
mov
cwde
jge
dec
push
push
push
push
les
(bad)
std
push
push
mov
xor
sbb
mov
jl
or
sub
retf
dec
imul
rol
xor
sbb
mov
clc
jmp
or
gs
push
and
lods
cs
shl
vzeroupper
jbe
push
pop
adc
fcomp
dec
or
fwait
sbb
push
hlt
mov
sbb
sbb
es
add
ficomp
xor
push
adc
das
das
adc
mov
push
cmp
xchg
cmp
hlt
sub
test
xor
ret
xor
aad
pop
mov
xor
push
adc
mov
adc
dec
jb
pop
daa
popa
push
push
daa
pop
div
stos
cmp
or
push
popa
fst
out
cmp
push
pop
test
xchg
test
stos
scas
sub
jb
inc
mov
fs
aad
sti
inc
cmp
push
xchg
ret
shl
add
ret
xor
scas
xor
mov
xor
mov
hlt
(bad)
inc
xchg
ja
jl
sub
shr
or
sti
adc
and
and
pop
ret
aam
push
mov
add
xor
inc
pop
adc
pop
pop
push
or
daa
in
dec
xor
push
and
dec
(bad)
int3
aad
imul
cmp
sbb
xchg
scas
(bad)
sbb
push
ds
jbe
retf
cmps
cdq
shl
xor
or
jecxz
mov
(bad)
(bad)
fs
dec
fimul
add
sbb
push
cmp
(bad)
mov
ret
std
clc
jp
jno
add
and
js
sbb
rcl
jmp
jge
push
xor
gs
mov
cld
mov
in
push
fmul
push
push
cwde
cwde
jb
bnd
movs
inc
push
jnp
aaa
inc
push
or
jb
fimul
push
inc
inc
punpckhbw
push
pop
xchg
ja
sub
add
rol
mov
js
push
mov
not
push
or
mov
cwde
pop
sbb
sbb
pop
inc
add
mov
or
push
and
add
test
inc
sub
jecxz
fcom
xor
jb
pop
jnp
pop
jl
and
push
mov
cwde
or
pop
retf
jo
or
add
push
push
sbb
sub
frstor
cmc
add
or
scas
rcr
sbb
pusha
xor
out
pop
jp
sub
add
push
call
call
add
pop
push
aaa
clc
test
sub
sub
rcr
push
push
push
bound
sub
lock
inc
jg
femms
and
stos
daa
sub
movs
sti
inc
xor
gs
add
jl
sbb
add
loopne
push
ss
cmp
pop
fmul
adc
dec
mov
sbb
enter
jl
cmp
push
jne
std
fdiv
xchg
adc
rcr
sub
xor
mov
not
js
xchg
popa
xor
out
jecxz
push
stc
mov
pop
or
sub
jl
dec
popa
das
je
push
inc
mov
xor
jns
jecxz
sti
mov
scas
mov
jno
dec
pusha
fstp
cld
push
pop
add
mov
pop
icebp
sbb
mov
push
and
mov
or
jge
adc
mov
rcr
cmp
mov
inc
dec
mov
movs
pop
leave
inc
sbb
adc
adc
push
pop
loope
xchg
xchg
mov
xor
xchg
movs
push
dec
xchg
call
ss
jmp
xor
rcl
add
fdiv
xchg
xchg
dec
pop
push
call
sbb
imul
cli
inc
sbb
call
push
ror
push
pop
mov
outs
xor
paddd
inc
std
xchg
fcom
push
or
pop
rcr
push
push
cmp
ins
dec
(bad)
ds
std
or
xlat
jge
mov
call
pop
arpl
shr
inc
cmp
leave
enter
push
add
mov
xchg
or
sbb
pushf
add
cmp
jne
sbb
imul
shr
mov
jmp
sbb
ret
loopne
sbb
adc
in
pop
inc
retf
add
push
or
mov
jl
mov
mov
call
push
or
xchg
in
xchg
(bad)
cmps
xor
add
mov
fld
fs
and
adc
sbb
cmps
clc
sub
push
outs
pop
mov
pop
adc
push
(bad)
mov
inc
ficom
jo
pop
pop
or
xor
ins
pshufw
sti
or
dec
add
mov
dec
cmp
ja
or
nop
mov
js
sar
cmp
mov
or
pop
js
mov
js
cld
addr16
sti
jo
jne
inc
jmp
scas
sbb
inc
jecxz
out
inc
(bad)
les
xor
popf
push
add
rol
add
lock
lods
mov
inc
mov
dec
cmp
sti
push
jmp
mov
push
outs
arpl
shl
jg
jmp
add
add
mov
mov
push
je
inc
adc
push
pop
mov
mov
test
je
mov
rol
popf
cmp
cmp
jge
add
and
clc
jg
push
and
je
or
addr16
pop
aas
mov
lods
clc
test
dec
mov
loop
inc
std
adc
lock
mov
adc
inc
jmp
cmp
jl
lea
and
call
and
popa
je
jo
cmps
pop
pusha
xor
sbb
mov
push
jo
nop
add
mov
je
adc
enter
or
or
xlat
cmp
loopne
call
fldz
add
xchg
or
xchg
and
adc
xor
jae
cmp
jne
sbb
fsubr
je
sar
xchg
xor
push
and
adc
out
sub
shl
add
cmp
jne
mov
rol
pop
add
fwait
cmp
add
add
add
jae
sub
dec
add
push
lods
add
inc
push
mov
clc
push
pop
mov
inc
fs
cs
add
pop
jnp
mov
xor
lock
aam
push
imul
shl
xor
sahf
xchg
jmp
xchg
or
gs
adc
stos
ss
ja
mov
cmp
jne
add
ja
push
add
dec
je
aaa
xchg
push
jae
xor
add
ret
enter
hlt
jae
cmp
push
and
jmp
sub
fucomip
sbb
push
ror
cmp
ror
sbb
lea
imul
mov
mov
sbb
(bad)
jl
pop
das
cmp
ror
mov
pop
loopne
mov
cmp
inc
dec
jb
xchg
ins
pop
fstp
mov
pushf
mov
dec
cmp
mov
fwait
push
pop
jle
test
in
cmp
lds
cmps
ins
lock
(bad)
add
leave
jo
out
daa
or
pushf
inc
sbb
push
popf
test
imul
xor
nop
iret
push
mul
mov
inc
add
lock
jae
inc
mov
pop
arpl
jmp
or
inc
jnp
push
jmp
cmp
sbb
sbb
popf
imul
lds
push
or
pop
xchg
into
jb
jo
fadd
sbb
inc
jp
and
ja
fst
and
or
jp
jge
and
xchg
loop
rol
cmp
jbe
xor
or
mov
or
dec
cmp
ss
add
push
push
(bad)
(bad)
sbb
stc
pop
xchg
jnp
aam
add
mov
sub
jbe
jmp
dec
and
std
add
ror
jl
outs
pop
or
imul
mov
lods
lahf
fidiv
mov
mov
(bad)
adc
xor
add
pop
ds
mov
cmp
add
out
imul
adc
mov
imul
cs
add
loop
push
sub
xor
push
test
inc
jne
push
cmp
repz
shl
xor
jnp
add
jns
dec
(bad)
push
jbe
inc
sbb
mov
aam
mov
xor
cmp
jp
jo
out
and
and
(bad)
ror
stos
and
pop
cmp
mov
push
cmp
cs
movs
adc
xlat
dec
jle
pop
call
inc
push
inc
jl
and
add
call
mov
adc
mov
cmp
jle
pop
push
neg
(bad)
pop
ret
push
add
or
int
out
nop
push
popf
mov
or
shl
jb
loop
adc
(bad)
xor
mov
adc
adc
inc
xor
je
hlt
popa
mov
or
int
jne
mov
ja
pusha
sub
popf
and
xor
push
test
retf
aam
cmps
fcmovb
inc
dec
jmp
in
les
out
push
mov
jge
std
loop
cmp
sub
fwait
cli
pushf
imul
push
arpl
mov
pop
mov
mov
clc
mov
push
int
add
add
push
mov
inc
sar
mov
dec
jns
mov
jo
cmp
shl
loopne
lods
mov
jecxz
cmp
sahf
push
and
outs
jns
mov
add
enter
pusha
mov
loop
jo
mov
pop
js
lea
add
dec
add
repz
inc
cld
shr
lea
push
push
add
push
push
ins
retf
xor
das
jmp
fs
sbb
outs
je
loopne
and
push
mov
into
dec
iret
sti
div
ret
je
xor
outs
or
sub
inc
or
mov
adc
xchg
das
(bad)
aas
sbb
push
jmp
pop
jl
lea
inc
call
jbe
adc
dec
daa
mov
test
jp
icebp
add
(bad)
outs
enter
mov
je
adc
or
push
shr
sub
rol
add
pusha
sub
test
ja
loope
ins
cs
add
adc
sub
aaa
or
add
idiv
jmp
add
cmps
sbb
jno
faddp
add
and
in
add
fwait
aad
cdq
push
outs
jp
sub
ret
jecxz
add
lods
mov
xchg
int
push
dec
xchg
push
push
mov
js
dec
adc
cmps
mov
sbb
and
add
test
(bad)
dec
or
xor
(bad)
or
into
pop
xlat
push
clc
fild
in
sbb
add
dec
jmp
retf
mov
mov
add
jp
out
xchg
cmp
pop
loope
sub
sub
outs
nop
mov
push
sub
pop
add
call
cmp
aam
adc
dec
mov
and
inc
pop
inc
or
push
push
aas
or
jle
cli
pop
and
pusha
jbe
pop
test
std
sub
test
call
jl
test
push
sub
(bad)
(bad)
jnp
push
add
add
add
add
add
add
pop
es
add
jno
and
push
xor
cmc
mov
out
push
adc
lds
clc
imul
push
jmp
cmp
cmp
inc
bound
or
js
lea
rcl
lock
dec
mov
test
mov
or
inc
cld
inc
scas
mov
pop
sub
dec
and
sub
test
loope
aas
dec
(bad)
cmp
jne
and
push
push
dec
sbb
pop
sbb
inc
out
dec
aam
sub
or
cvttps2pi
pusha
stc
mov
adc
and
jle
popf
pusha
into
cmp
jge
jmp
add
adc
and
into
xchg
push
movd
cmp
mov
xchg
(bad)
mov
test
add
pusha
add
mov
sbb
push
cli
and
or
cs
(bad)
paddusw
jb
push
sar
loopne
adc
mov
dec
js
xchg
cmp
retf
xchg
fdiv
neg
lea
cmp
fdivr
sbb
div
sbb
xor
dec
cwde
push
test
(bad)
cmp
adc
mov
mov
adc
pop
cmp
push
mov
mov
pop
inc
inc
inc
xchg
mov
or
mov
jns
cs
adc
dec
js
pusha
dec
mov
push
cmp
cmp
fadd
push
xchg
or
inc
mov
in
dec
cmps
dec
pop
mov
add
lea
cwde
add
xchg
push
(bad)
lock
and
xchg
push
mov
push
shl
outs
loopne
cwde
sbb
or
and
push
adc
es
addr16
and
fwait
jbe
add
pop
(bad)
push
dec
xchg
or
or
sub
pop
mov
lahf
cmp
fmul
xchg
add
jo
jo
xor
loopne
and
mov
mov
shr
ins
inc
push
out
add
mov
add
push
inc
jmp
jg
mov
cmp
je
cmp
je
cmp
je
nop
add
push
mov
sub
cmc
hlt
jo
movs
fwait
ja
js
dec
or
fwait
lods
push
sub
add
rol
jp
(bad)
mov
sub
fld
test
sbb
or
pusha
xor
inc
enter
mov
sbb
inc
icebp
loope
jge
sub
ja
mov
add
and
test
add
and
xchg
sub
movs
mov
or
out
inc
ins
sub
movsx
inc
jne
mov
jl
ror
imul
jae
inc
cmp
je
les
and
nop
jg
pop
(bad)
mov
and
pop
or
dec
mov
mov
(bad)
shl
cmp
inc
shl
pop
sub
ror
and
inc
jl
adc
or
push
popa
jnp
icebp
mov
push
and
push
dec
add
push
xor
mov
pop
xchg
cmp
in
adc
add
or
pusha
mov
mov
aad
ins
adc
sti
adc
push
add
jp
add
repnz
xchg
shl
daa
call
or
aas
xchg
nop
rcl
rcl
shr
dec
int3
dec
(bad)
(bad)
(bad)
retf
aam
fcmovbe
stc
add
lock
icebp
pusha
sbb
push
pop
lock
arpl
mov
add
js
rcr
or
fld
int3
mov
inc
push
popa
mov
or
mov
or
lds
jb
aam
xor
or
jbe
push
daa
jne
(bad)
ss
daa
cld
or
sub
or
or
mov
cdq
test
or
or
sbb
adc
push
or
push
or
(bad)
retf
dec
call
and
add
xchg
cmp
add
xchg
push
ror
xor
cmps
add
add
nop
adc
adc
push
jmp
sbb
inc
shr
mov
push
iret
inc
jmp
or
adc
jmp
push
pop
mov
lods
adc
xchg
pop
cmps
mov
in
je
cld
push
in
adc
movs
ret
dec
push
dec
(bad)
mov
bound
fist
push
gs
cmp
inc
mov
repnz
xchg
xor
jle
jbe
fist
push
xchg
movs
test
ins
adc
ja
xor
jg
jg
mov
stc
sahf
mul
aad
push
out
inc
push
jb
scas
cdq
daa
and
outs
add
imul
pusha
add
add
mov
inc
mov
adc
inc
inc
or
dec
mov
inc
jne
or
add
dec
adc
loope
or
cmp
pop
xor
ds
cmp
je
cmp
je
jne
mov
mov
and
xor
inc
adc
call
jp
mul
jo
xor
push
xchg
das
pop
leave
or
sbb
mov
inc
outs
xchg
ltr
ret
push
and
sbb
rol
push
je
adc
and
cmp
jo
cmp
or
xor
adc
jno
nop
inc
inc
add
pop
mov
push
add
push
xchg
xlat
and
add
mov
stos
inc
push
xchg
jl
cmps
or
xor
retf
xlat
lea
push
in
or
jp
jo
jb
pop
push
in
jle
mov
mov
shl
push
mov
or
js
test
mov
push
pop
retf
pop
mov
inc
sbb
pop
sub
cld
dec
div
test
xchg
mov
push
cmp
or
mov
test
push
dec
mov
je
cmps
and
and
push
movs
xor
add
dec
lds
xchg
lea
adc
rol
and
jg
test
push
adc
and
or
add
push
inc
cmp
cmp
xor
jnp
and
adc
sub
(bad)
mov
add
nop
jl
mov
outs
js
(bad)
fisubr
xchg
cwde
aam
imul
mov
push
mov
movs
and
std
xchg
popa
lahf
or
xor
retf
fs
xor
mov
(bad)
sub
inc
pop
loop
lea
xchg
rep
pop
ret
icebp
or
add
adc
adc
sub
imul
pop
mov
xor
jo
pop
or
add
cmp
in
mov
cmps
lods
pop
fidiv
adc
mov
inc
sub
dec
jne
sub
pop
data16
ret
rcl
stc
or
xor
and
sbb
push
xlat
nop
icebp
dec
add
sbb
(bad)
movs
lea
add
cs
loop
aad
mov
adc
pop
ds
sbb
cs
cwde
call
cmp
mov
test
dec
ins
mov
outs
push
jne
call
enter
or
add
sbb
daa
fst
call
fs
outs
inc
or
(bad)
pop
add
cdq
adc
neg
addr16
inc
int3
pop
sbb
or
dec
cmps
call
sbb
outs
adc
add
fdivr
pop
shl
mov
dec
pop
ret
(bad)
xchg
mov
scas
dec
or
js
adc
push
xchg
lock
adc
fild
call
movs
int
ret
sbb
xor
mov
dec
sbb
das
in
or
and
out
and
inc
dec
push
jge
lea
add
lods
xchg
add
pusha
mov
outs
cli
movs
push
and
jo
js
fs
pusha
push
xchg
test
ja
pop
(bad)
aad
inc
ss
adc
xor
pop
loop
xchg
or
or
xchg
mov
inc
mov
mov
out
inc
imul
cdq
movs
push
sti
test
(bad)
and
dec
dec
pop
sub
sbb
je
test
pop
mov
push
dec
push
jg
or
mov
add
fisub
inc
adc
xchg
popf
jb
sub
or
test
or
int3
xor
(bad)
adc
in
sbb
ror
into
and
rcl
dec
rol
adc
add
shl
jle
imul
mov
sahf
cmovs
add
push
cmps
jl
ret
js
cmp
je
or
jle
xchg
and
and
sub
test
jbe
leave
int3
add
xor
adc
adc
push
push
adc
push
push
ins
mov
mov
fcomp
test
push
fs
loope
cwde
cmp
add
loopne
add
push
adc
mov
loop
push
out
sar
mov
jle
or
ret
ins
mov
ss
add
rol
invd
adc
cmc
adc
cmp
pop
inc
mov
enter
add
mov
repz
inc
hlt
aas
adc
pop
add
pop
daa
aam
idiv
push
add
add
xor
outs
call
(bad)
mov
mov
ss
mov
movs
push
xchg
dec
stos
dec
inc
push
and
pop
pop
add
add
xor
adc
sub
sub
les
mov
js
and
into
ds
popf
adc
and
rol
add
fisttp
call
call
aam
div
and
pop
jmp
xchg
xchg
fwait
fs
int3
adc
jg
sbb
mov
cmp
inc
mov
and
jmp
sub
and
cli
test
push
inc
mov
xor
clc
dec
mov
jmp
inc
dec
fstp
rol
sub
sbb
mov
add
jmp
loop
mov
or
jns
sbb
push
add
je
sbb
shl
pop
jp
fmul
or
mov
cmp
mov
add
dec
test
(bad)
pushf
adc
add
test
fisttp
outs
fidiv
mov
push
push
adc
jne
add
es
adc
push
outs
add
jmp
test
dec
dec
test
cmp
ret
(bad)
adc
dec
push
mov
and
das
bound
mov
cli
scas
in
cmps
xor
popa
cmps
xchg
cmp
ja
test
les
je
pusha
es
js
fucom
clc
in
ror
repz
fst
push
shl
(bad)
dec
adc
and
add
dec
hlt
xor
fnstenv
imul
mov
xor
rol
icebp
(bad)
fstp
dec
xchg
push
aaa
xchg
aam
or
mov
es
ss
cs
sub
or
add
add
or
or
call
mov
inc
jle
adc
imul
push
xor
imul
pop
jne
js
sub
retf
and
mov
jecxz
out
popf
dec
ins
in
movs
jbe
xor
pop
inc
iret
add
pop
or
adc
add
mov
xchg
and
cli
push
mov
std
and
or
or
lods
ds
add
icebp
nop
mov
add
push
push
(bad)
jle
jne
xor
push
sbb
cmp
mov
sub
pusha
mov
jl
mov
arpl
and
mov
in
xor
sub
add
jne
test
mov
xchg
mov
push
xor
push
test
ret
jecxz
add
add
in
or
or
jns
adc
mov
mov
mov
or
mov
add
mov
and
test
or
and
push
adc
add
sub
xchg
xor
bnd
or
add
lahf
mov
sub
retf
repnz
sub
fwait
cmp
adc
sbb
push
adc
and
inc
and
sub
and
sbb
addr16
adc
dec
sahf
xchg
and
inc
gs
out
cmp
add
push
push
cwde
push
and
and
test
xchg
push
or
xchg
push
cmp
push
cs
add
aas
sbb
jg
call
aam
or
stos
mov
dec
mov
sub
lods
dec
dec
push
adc
and
test
mov
adc
sbb
or
loope
(bad)
mov
inc
pop
rcl
nop
test
inc
js
cmp
addr16
fsubr
outs
cwde
sub
cmps
clc
and
add
loop
fstp
sbb
and
dec
dec
dec
mov
xchg
mov
sbb
loope
jae
jb
adc
(bad)
fiadd
test
adc
in
pusha
scas
xchg
xchg
xchg
sbb
push
loope
push
daa
dec
dec
inc
cmp
stos
or
pop
sub
int3
and
movs
pop
mov
add
movs
or
movs
pop
push
cmp
aam
ret
sbb
adc
pop
cmp
add
and
mov
add
and
or
mov
push
pusha
mov
leave
lods
xchg
dec
push
mov
mov
push
ret
and
or
aas
xor
sbb
sar
sbb
pop
inc
add
mov
ss
xchg
fsub
inc
loopne
xchg
mov
not
pop
mov
inc
fiadd
adc
dec
push
in
add
test
aas
fld
inc
invd
inc
mov
and
xor
sbb
dec
fs
imul
add
dec
movs
jbe
add
imul
inc
push
dec
and
add
jmp
add
fisttp
data16
mov
add
cmp
outs
dec
xor
push
aaa
out
dec
pop
ss
add
je
adc
inc
add
push
push
scas
(bad)
or
jmp
push
dec
call
sbb
(bad)
and
and
test
mov
mov
sub
and
dec
mov
jg
cld
dec
mov
and
ss
mov
data16
mov
int3
xchg
push
and
mov
jmp
aas
xchg
ret
or
jb
in
ds
push
cmp
jmp
(bad)
enter
adc
xchg
jne
sbb
adc
rcr
dec
sti
inc
or
dec
or
inc
sbb
pusha
cld
adc
inc
retf
push
addr16
stos
inc
mov
jnp
aam
pop
xor
cmp
mov
jmp
sbb
fwait
test
imul
jo
hlt
lods
mov
sub
push
push
sahf
pop
popa
out
int
cmp
(bad)
push
aam
xor
adc
(bad)
stc
es
or
mul
popf
dec
sar
out
push
outs
call
or
aas
jns
movs
xor
xor
and
loopne
lods
push
add
push
(bad)
(bad)
xlat
cmc
bound
mov
enter
push
mov
sub
jns
out
xor
outs
movs
push
aam
iret
sar
out
push
jg
movs
push
cdq
xchg
movs
lock
into
and
sbb
or
push
or
fld
or
test
repnz
dec
sbb
sbb
adc
ds
sbb
pop
jb
les
xchg
div
and
push
aaa
or
movs
test
adc
dec
push
imul
out
push
call
dec
cmps
dec
test
cmc
pop
(bad)
fs
sbb
mov
mov
hlt
popa
retf
push
add
cmps
push
push
dec
pop
adc
inc
dec
out
out
in
sbb
pop
push
push
mov
pop
nop
and
repnz
mov
push
mov
icebp
xchg
mov
aam
and
pop
push
shr
inc
xor
rol
jle
ret
fst
mov
movs
push
call
and
pop
push
fist
mov
fs
adc
cmp
inc
out
les
xor
mov
pop
cdq
ret
adc
inc
adc
xor
jbe
sbb
ficomp
inc
js
shr
adc
pop
pop
and
stos
or
pop
fwait
or
jmp
or
jmp
test
xor
fs
adc
jmp
sbb
cdq
mov
mov
inc
imul
or
xor
call
data16
movs
sub
(bad)
call
and
adc
out
ss
hlt
xchg
inc
pusha
sbb
add
add
cmp
xor
push
xor
popa
test
aas
xor
test
jl
test
mov
push
cmp
xor
or
jns
outs
addr16
xor
mov
add
and
nop
das
ss
scas
sbb
jecxz
imul
sbb
add
movs
mov
jne
cmp
shl
xor
pop
push
push
push
push
xchg
jbe
sbb
gs
mov
sbb
inc
inc
(bad)
sub
or
jo
xor
and
mov
push
pusha
movsx
sub
xor
push
pop
jne
es
pop
jne
or
jo
and
jne
dec
push
mov
and
push
pop
jmp
dec
pop
push
push
out
movs
outs
in
and
push
jnp
pop
dec
(bad)
mov
cmp
jne
pop
and
inc
or
dec
mov
xchg
inc
xchg
es
loopne
loope
add
push
jne
cmp
mov
adc
mov
cmp
pop
ret
(bad)
repz
pop
dec
sub
xor
inc
jmp
mov
or
outs
push
in
xchg
fld
jo
call
ja
shl
add
jo
xchg
(bad)
rol
test
sub
cwde
movs
out
enter
stc
adc
add
mov
adc
pop
fisub
(bad)
adc
lods
mov
cdq
cld
dec
sbb
inc
add
push
adc
mov
mov
and
push
push
(bad)
mov
out
int
sbb
test
ja
cdq
cmp
(bad)
push
xor
stos
push
dec
push
cmps
jmp
lods
dec
fild
iret
push
sbb
mul
leave
dec
ret
or
rol
push
imul
mov
xchg
ret
pop
inc
jle
push
pop
add
jp
xor
stc
imul
inc
inc
push
push
dec
fimul
add
pushf
inc
sub
adc
push
cli
(bad)
test
sub
sub
add
fs
sti
xor
and
push
or
scas
or
popa
or
inc
mov
cwde
or
and
push
popf
lods
popf
add
shr
sbb
sub
inc
sbb
jns
pop
ins
scas
sbb
mov
add
add
lods
inc
les
pop
test
in
cmp
cmp
and
movs
and
xor
or
sub
je
pop
je
or
in
sbb
out
scas
mov
mov
push
cmp
dec
sub
sbb
mov
outs
in
das
push
push
mov
das
rcl
sub
dec
ret
data16
xor
fsubr
out
jmp
mov
pop
enter
adc
outs
loopne
je
mov
xlat
outs
test
mov
add
mov
or
jnp
nop
sub
(bad)
pop
sub
push
pop
add
fild
jg
push
pop
xchg
mov
jno
cmp
and
mov
(bad)
pusha
xchg
lock
or
jne
jno
ret
sbb
ret
jl
test
and
mov
pop
rcl
hlt
mov
or
jnp
inc
ret
stos
loope
jge
int3
cwde
int3
mov
movaps
ror
add
nop
test
loope
mov
add
fdivr
xchg
mov
push
mov
jle
mov
mov
jne
inc
dec
(bad)
in
or
push
push
push
loopne
pop
push
loope
cmp
je
dec
cmps
push
or
cs
es
inc
pop
xlat
push
pusha
(bad)
add
inc
loope
jl
push
push
in
jbe
adc
clc
sbb
or
daa
xchg
jbe
repz
rol
cmp
imul
push
out
mov
push
add
out
cmp
rol
mov
push
add
pop
xor
jmp
adc
xchg
hlt
lahf
pop
ins
xor
ds
add
call
scas
mov
lea
clc
cmps
add
xchg
lods
dec
or
mov
cmp
mov
iret
jl
imul
(bad)
in
sub
or
popa
bound
cdq
and
adc
xor
fild
sub
pop
cmp
and
loopne
pop
adc
sub
mov
jns
mov
inc
jb
cmp
mov
and
rcl
cmp
add
sbb
icebp
adc
adc
sahf
mov
push
mov
or
sbb
or
mov
dec
rcr
daa
ins
nop
mov
or
mov
or
sub
sbb
imul
xor
ins
xor
inc
jb
or
mov
clc
inc
shl
enter
pop
push
out
movs
(bad)
cmovae
or
mov
int
aaa
dec
xchg
out
sub
push
aam
and
aam
fwait
test
and
add
loopne
leave
bts
es
mov
mov
out
shr
nop
mov
int3
xchg
rcl
xchg
repz
or
test
mov
mov
movs
mov
xor
in
shr
lock
cmp
adc
jbe
pop
mov
jbe
popa
push
lods
add
inc
into
sbb
(bad)
out
mov
push
fild
inc
xchg
cs
loopne
adc
sub
sbb
jne
sbb
lea
retf
repz
pop
pop
jne
push
or
xchg
jl
gs
and
adc
sub
sub
adc
add
mov
pop
push
clc
add
sahf
repz
fld
mov
jne
loop
lock
nop
pop
mov
out
mov
add
push
push
push
mov
in
mov
cmps
xor
iret
sbb
xchg
out
mov
neg
push
or
inc
mov
(bad)
int
int3
test
sub
dec
cmp
loopne
rol
mov
xor
jecxz
and
dec
inc
(bad)
pusha
sbb
sbb
jle
cmps
or
inc
add
sahf
cdq
retf
jp
push
xchg
add
sar
xchg
out
ror
inc
inc
pop
dec
push
mov
cs
or
and
mov
fisubr
xor
repz
push
inc
out
dec
inc
pop
loope
daa
push
fcomp
push
mov
call
push
sub
addr16
adc
sbb
pop
aas
push
mov
sbb
push
pop
or
xchg
and
ds
add
sub
pop
jne
xor
xchg
inc
or
imul
enter
and
jmp
inc
loop
xor
es
adc
or
shr
ficom
fild
mov
push
sar
jnp
ret
movs
or
es
enter
es
out
loopne
xor
mov
shr
sub
fs
cmp
add
out
xchg
xor
stc
push
adc
jle
push
mov
add
xor
mov
stos
push
ins
add
mov
xor
xor
add
push
push
adc
add
mov
aaa
pop
fwait
mov
scas
mov
rcl
outs
or
enter
or
arpl
nop
cmps
sub
push
push
lods
mov
dec
xor
add
test
push
xchg
adc
push
push
add
adc
mov
fld
adc
mov
push
inc
push
dec
pop
sbb
movs
test
mov
inc
xor
aad
jo
shr
adc
mov
jle
inc
les
pop
lea
sahf
cmp
out
or
and
mov
adc
sar
sbb
jmp
push
in
ret
xor
call
sbb
or
(bad)
or
sub
dec
std
dec
dec
mov
imul
xchg
shl
jae
mov
test
jecxz
xor
es
in
nop
and
test
sbb
popa
mov
cmps
add
or
icebp
mov
ret
adc
pop
jo
(bad)
int
xor
adc
fcomp
retf
cld
ins
pusha
sub
and
inc
pop
ret
std
aaa
(bad)
mov
aad
lea
push
xor
and
push
inc
cmp
pop
stos
jp
movs
(bad)
retf
lea
pop
imul
unpckhps
pop
xor
aaa
repnz
cmp
je
xor
fcom
push
setge
mov
sub
pop
sub
rol
scas
push
stos
jns
xor
ja
in
xchg
rcl
ror
cmp
fcomp
pop
sbb
jne
mov
sbb
jns
pop
and
and
ret
inc
cld
loope
push
dec
fbstp
aam
fldenv
sub
ds
das
xchg
xor
shl
outs
xor
jo
adc
jle
cmc
and
inc
(bad)
cmp
sub
xchg
jno
pusha
and
mov
cmc
adc
adc
retf
fmul
cmovle
adc
call
adc
add
xor
cmp
mov
aas
jae
inc
push
call
add
or
iret
pop
sar
cmp
jl
mov
push
sbb
adc
sub
aaa
jmp
xchg
ja
cmp
jge
jle
mov
nop
mov
push
add
stos
mov
into
jns
sbb
cld
pop
call
push
sub
dec
or
shl
clc
add
cmp
fadd
scas
ins
mov
push
jmp
adc
cmp
ins
xor
adc
or
push
daa
push
pop
xchg
mov
adc
add
bound
call
mov
or
test
test
dec
ds
push
mov
es
stos
inc
adc
loopne
mov
jg
add
inc
test
dec
and
and
sahf
push
arpl
xor
push
lea
fadd
push
aas
pop
lea
leave
adc
add
lds
or
jl
add
mov
adc
dec
inc
mov
push
and
test
add
hlt
inc
mov
dec
cmp
add
jmp
or
ret
shl
xor
jle
adc
(bad)
fst
in
or
xchg
dec
jmp
dec
push
xchg
test
fild
mov
popa
stos
out
cs
sub
add
dec
push
inc
movs
add
cmc
(bad)
push
sahf
das
test
add
cmp
xlat
push
data16
jo
jecxz
cmp
sbb
push
inc
pop
pop
sahf
es
jle
xchg
mov
xchg
adc
ret
mov
dec
addr16
in
sbb
lods
lods
popf
and
ins
nop
push
pusha
jne
xchg
jne
cmp
dec
mov
push
das
in
push
rcl
ret
jbe
sub
xor
rcr
adc
push
push
jecxz
xor
inc
les
inc
jmp
and
je
dec
cmp
pop
mov
add
fdiv
inc
fmul
pop
pop
sbb
adc
mov
add
or
add
into
inc
stos
cli
add
sub
xchg
sub
mov
and
adc
sbb
adc
sub
jnp
int
into
cld
dec
push
mov
inc
dec
jp
xor
(bad)
test
or
push
aas
notrack
data16
pop
(bad)
cmp
fidivr
pop
in
pop
push
jmp
rcr
cwde
push
ins
cmp
add
ret
ficomp
xor
add
shr
sub
loopne
pushf
ja
dec
in
cmp
pop
push
aas
imul
xor
jmp
shl
pop
inc
gs
sub
sub
fcmovu
adc
les
mov
sbb
iret
repz
push
and
or
retf
mov
into
or
retf
aam
push
or
ds
ret
or
and
jne
addr16
cmp
xchg
push
xchg
retf
cmp
test
pop
inc
jbe
loopne
mov
mov
sbb
adc
rol
mov
nop
sub
das
mov
dec
dec
pusha
adc
sub
iret
lea
jo
mov
sub
inc
test
cdq
aam
outs
dec
push
adc
retf
test
xor
scas
loope
mov
lods
ss
inc
sbb
and
xor
mov
mov
add
push
push
xchg
xchg
out
mov
dec
add
and
adc
add
pusha
ror
add
pusha
sbb
mov
(bad)
adc
push
inc
and
xchg
fs
mov
add
xchg
xchg
in
imul
add
jnp
sbb
cdq
jge
test
dec
out
adc
mov
push
mov
push
push
int
dec
stc
nop
cmp
pop
mov
push
inc
sbb
sbb
add
jb
add
lea
or
jo
and
int
mov
jecxz
in
push
and
push
dec
into
es
and
add
sub
inc
lods
sbb
jl
cmp
adc
jmp
or
xchg
cmp
push
arpl
fild
pop
sub
mov
inc
imul
cdq
push
mov
or
mov
cmp
push
pop
sub
pusha
sub
or
sti
arpl
popa
js
cwde
inc
retf
popf
fmul
popa
inc
mov
call
stos
repnz
sub
xor
cld
stos
push
loop
xchg
inc
outs
pop
mov
aam
or
mov
sbb
add
push
test
xchg
sub
in
movs
fisttp
data16
shl
sub
inc
int
add
dec
jl
mov
daa
add
lock
sub
shl
jbe
xlat
xor
jmp
push
push
adc
sbb
adc
pusha
add
sbb
arpl
fimul
cmp
jl
popa
adc
pop
pop
sbb
rcr
adc
adc
jbe
mov
mov
fidiv
fcmovnb
mov
dec
ins
aas
js
mov
test
mov
mov
mov
inc
sub
outs
cmp
mov
ret
or
lods
pop
out
mov
adc
fidivr
xchg
jbe
mov
pop
xchg
jl
and
test
je
and
shl
es
adc
xchg
sbb
xchg
leave
les
or
leave
mov
cmp
sar
or
push
xchg
and
push
adc
dec
xchg
push
or
ret
inc
inc
scas
les
lea
test
sbb
xchg
shr
sbb
push
js
fnstcw
mov
mov
sub
cld
push
mov
xor
loope
dec
or
jg
xor
pop
das
(bad)
leave
movs
and
shl
add
push
adc
fcmovnu
mov
push
cmp
div
ficom
aad
leave
je
icebp
shr
cs
cmp
or
adc
fwait
jmp
xchg
push
jo
ins
enter
mov
mov
xchg
cdq
frstor
push
add
shl
icebp
loop
inc
mov
adc
jecxz
lock
jmp
cmps
mov
jo
shl
out
adc
(bad)
or
nop
scas
pop
retf
add
and
dec
xor
inc
out
sbb
or
add
into
lea
push
ds
rol
(bad)
ins
sbb
pop
jbe
jmp
push
ret
sbb
pusha
cmp
push
movs
std
cmc
and
push
test
push
and
outs
push
add
push
ins
fs
aad
ret
pop
add
or
fisub
jb
xor
or
cmovae
add
xor
ret
jne
mov
pop
inc
pop
xor
int
xchg
xor
jb
pusha
cmps
cmp
das
pop
fild
mov
jmp
scas
or
loop
mov
jne
mov
or
inc
push
and
ss
push
je
or
sub
or
jl
adc
jl
lea
push
cld
inc
sahf
inc
inc
mov
pop
(bad)
cld
in
add
das
adc
sbb
lock
mov
call
das
jp
cs
push
push
mov
and
pop
mov
inc
sub
cs
mov
movs
test
push
add
mov
test
cmps
into
aam
cmp
pusha
pavgw
mov
add
and
pop
jo
sub
pop
add
mov
mov
cwde
lods
adc
dec
jae
push
cmp
cmc
add
mov
adc
adc
cmps
call
xchg
push
jne
push
dec
add
call
jl
sbb
enter
or
adc
adc
push
dec
or
push
inc
and
sbb
push
adc
test
push
xor
movzx
inc
mov
test
push
ror
jo
add
xor
shr
push
loopne
push
ror
mov
sbb
fdivr
inc
add
ins
mov
in
rol
jmp
fdiv
sbb
or
xchg
mov
ja
movs
or
push
adc
into
out
adc
shl
in
adc
or
ins
adc
(bad)
jne
pop
xchg
repz
mov
into
mov
mov
jmp
and
shl
js
push
xchg
fcom
xchg
xchg
adc
add
xchg
adc
rcr
cmp
sub
inc
mov
and
(bad)
mov
push
add
test
rcr
push
push
xor
ret
(bad)
sar
jb
add
out
or
xor
push
and
imul
dec
dec
add
and
pop
mov
sar
mov
inc
sahf
rol
scas
shr
pop
fsubr
xchg
mov
cli
pop
ja
cmp
mov
mov
stc
add
mov
or
xchg
inc
daa
mov
mov
add
push
push
ret
push
pusha
xchg
movs
mov
and
xor
sbb
dec
ins
push
add
int
push
ret
(bad)
in
ja
add
mov
dec
xchg
fdiv
bound
add
repz
mov
mov
ret
stos
dec
imul
cmc
fld
(bad)
je
adc
mov
inc
add
repnz
push
fisubr
jae
push
inc
and
push
xchg
retf
jp
out
sbb
sub
or
outs
and
or
push
mov
and
push
call
inc
loope
out
sbb
das
mov
jnp
lock
adc
sti
mov
pop
push
pop
lock
test
and
ret
pop
imul
and
mov
cmp
inc
test
or
mov
outs
dec
enter
dec
loop
jge
cli
arpl
ja
repz
mov
jne
inc
lahf
inc
jmp
test
dec
jo
inc
push
rcr
popa
mov
(bad)
ds
enter
imul
push
pop
pop
imul
and
mov
push
aas
movs
test
aam
push
inc
ret
push
xor
cmc
(bad)
mov
pop
add
push
and
sbb
push
adc
inc
or
and
aas
mov
add
or
cwde
sar
fidivr
es
sub
jl
sub
cdq
mov
or
test
pushf
fidiv
cmp
mov
(bad)
test
sbb
por
mov
aaa
ret
push
add
add
add
push
pop
gs
push
sub
mov
stos
or
cdq
mov
push
sbb
dec
and
push
or
in
and
push
push
dec
gs
sbb
xor
inc
add
push
push
(bad)
fld
and
or
or
pop
mov
ss
push
int
mov
jae
sbb
xor
mov
fcmovnb
bound
test
ror
xor
inc
add
cmp
daa
cmp
cmps
repz
xor
inc
push
les
gs
add
inc
sub
and
je
sub
daa
or
adc
ins
loopne
pop
push
add
cld
ss
stos
orps
or
mov
out
sub
adc
push
add
movs
imul
arpl
inc
ror
sbb
add
push
scas
data16
jle
lods
rol
test
lea
popa
stc
outs
inc
mov
mov
and
xchg
dec
push
popf
xor
inc
sbb
fstp
add
retf
outs
or
pop
mov
imul
lods
nop
movs
vcvttsd2si
jbe
arpl
in
and
retf
dec
add
push
or
and
and
dec
pop
sbb
(bad)
mov
xor
imul
dec
pop
movs
jno
test
inc
data16
mov
das
ja
gs
sahf
push
sbb
jnp
test
xchg
or
mov
jmp
es
xchg
mov
rol
sub
retf
jl
jnp
(bad)
jmp
sub
pop
push
cmp
and
sbb
dec
popa
push
icebp
sub
pusha
sar
sbb
cmps
shl
sti
adc
or
sub
xlat
test
sbb
pop
xchg
test
xchg
xor
jae
std
push
pop
sbb
sbb
sti
data16
add
push
push
stc
push
loope
out
vpcmpeqb
jmp
outs
or
adc
sub
push
inc
call
and
mov
pop
add
rcl
inc
ss
mov
add
mov
or
test
pop
ins
inc
adc
mov
jnp
add
cli
cmp
imul
add
sub
test
push
rcl
xchg
dec
xchg
adc
add
sahf
or
dec
call
xor
int3
lea
not
push
mov
or
and
pop
add
test
imul
mov
jns
fs
adc
pop
ins
or
dec
or
leave
retf
inc
push
imul
mov
and
jmp
paddusb
popa
pop
pop
xchg
lods
inc
or
cmp
add
pop
rcr
xchg
or
ins
stos
test
adc
mov
adc
or
or
pop
mov
adc
in
inc
test
push
js
movs
or
sahf
jle
adc
mov
add
loopne
stc
dec
sbb
sub
or
ret
outs
rcl
dec
or
pop
xor
mov
sbb
fmul
mov
inc
and
push
push
mov
sbb
aaa
mov
mov
sub
add
rol
inc
adc
push
das
mov
lahf
xor
fnsave
test
push
(bad)
loop
loopne
add
fcomp
jecxz
or
add
mov
aaa
movs
or
mov
xchg
xchg
mov
leave
ja
movs
mov
add
add
jl
xchg
inc
jl
sbb
add
dec
inc
inc
ins
out
inc
in
je
(bad)
jo
add
mov
retf
dec
adc
sbb
mov
add
pusha
or
dec
cmps
movs
pop
xor
add
int
adc
or
dec
ds
jp
sub
sbb
pusha
xchg
cmps
mov
ret
sbb
rcl
and
sbb
inc
xor
inc
jmp
shl
pushf
pop
sub
cmp
pop
and
imul
retf
sbb
mov
cmp
hlt
dec
dec
and
xchg
test
or
add
add
test
inc
or
mov
in
jmp
add
and
inc
sbb
fnstsw
dec
cmp
inc
inc
sub
outs
inc
arpl
push
or
dec
call
xor
dec
push
sub
pop
and
add
ss
pop
sub
sbb
xchg
sub
js
cmp
xor
aad
imul
pop
jb
add
xor
js
and
adc
inc
pop
cmp
push
mov
jne
and
push
add
imul
or
(bad)
xchg
add
push
faddp
mov
sub
inc
imul
push
and
push
push
push
pop
push
or
push
rol
fcomp
sahf
in
add
mov
aad
sub
pop
pop
adc
fidiv
jbe
or
mov
mov
cmp
add
sbb
dec
and
inc
pop
push
aaa
add
pop
jecxz
lods
push
push
call
xor
adc
mov
xorps
add
or
cmp
test
js
sub
lods
ins
inc
and
mov
jnp
ja
fcomi
xor
jne
repz
add
mov
push
(bad)
mov
adc
clc
pop
push
xchg
sbb
es
inc
out
dec
or
in
and
add
cmp
je
jae
adc
rcl
add
adc
lods
scas
cmp
jns
or
ss
sbb
std
sub
jmp
sbb
shl
inc
xor
aam
movs
xor
arpl
lock
adc
push
cmp
pop
add
add
xor
push
xchg
das
pop
add
jl
push
je
pop
test
xor
test
push
push
xchg
mov
dec
jl
jne
mov
xor
jo
sub
scas
cmp
ss
ins
arpl
mov
in
daa
sbb
fisttp
inc
xor
push
mov
xchg
add
add
enter
hlt
push
mov
scas
int3
ret
dec
dec
mov
rcl
adc
or
push
inc
daa
jne
les
pusha
xor
inc
mov
mov
ja
ins
push
cmp
jne
rcl
test
les
adc
fnstsw
and
jl
popa
pop
and
call
jg
push
pop
xor
stc
and
mov
movs
xor
add
lods
add
aaa
ja
daa
test
inc
shl
mov
aad
(bad)
ficom
loopne
xchg
sahf
adc
or
add
pop
arpl
mov
popf
shl
test
jp
or
add
adc
inc
xchg
push
test
push
push
js
xor
loope
std
add
mov
pop
je
inc
(bad)
repnz
jae
scas
stos
das
xor
lock
rcl
popa
popf
dec
or
push
sub
test
and
sub
cmps
add
aaa
pop
sbb
or
mov
add
jo
xchg
and
mov
jno
call
mov
adc
or
push
ror
cmp
ret
or
pusha
jmp
mov
scas
and
arpl
dec
jmp
ror
add
dec
popa
es
jne
cmp
rcr
xor
cmp
cdq
das
jmp
and
pop
dec
mov
cmp
adc
mov
adc
xor
sbb
lds
mov
fisubr
xchg
mov
mov
cmps
std
xor
push
or
dec
or
int
push
bound
mov
cmp
sbb
add
or
mov
popf
cwde
sbb
mov
aaa
je
rcr
add
or
aam
lock
(bad)
jnp
pop
sub
and
push
dec
dec
jmp
adc
or
inc
movs
adc
sbb
fadd
cs
in
clc
sub
sbb
fsubp
imul
cmp
and
cs
or
sub
mov
dec
scas
sub
add
(bad)
push
rol
pop
rcl
mov
xchg
jl
adc
mov
mov
xor
push
dec
pop
add
in
into
push
and
loopne
dec
sub
mov
inc
add
mov
jmp
jo
jecxz
std
lahf
or
fst
add
add
mov
pop
cli
mov
add
xchg
jno
sahf
jnp
push
and
mov
enter
jno
add
or
nop
push
setnp
pop
test
sub
jg
andps
and
retf
and
dec
aaa
mov
pop
push
rol
in
cmp
push
cdq
dec
dec
jb
and
inc
sbb
sbb
xor
call
add
xor
push
mov
loop
sbb
pop
jbe
out
add
inc
and
mov
cwde
push
fldenv
and
add
push
adc
popa
mov
out
ds
xor
mov
push
mov
jl
jle
dec
adc
dec
adc
or
dec
mov
mov
add
xor
mov
xor
xchg
push
pushf
fidiv
mov
jmp
sbb
sub
push
cs
inc
inc
jns
sbb
jae
sti
push
dec
lds
mov
adc
jns
and
lock
jp
inc
js
adc
xor
xchg
ss
into
xor
xchg
sub
call
jnp
pop
push
pop
inc
xchg
cmps
mov
mov
push
icebp
and
shl
sbb
jo
popf
jne
mov
jbe
add
loope
stos
movs
mov
jmp
sbb
and
push
push
jns
adc
out
push
ins
add
mov
jo
sbb
shr
dec
add
imul
rol
cmp
out
nop
pusha
or
and
add
cwde
mov
imul
into
mov
xchg
popa
enter
adc
mov
test
or
nop
mov
add
lea
xchg
adc
push
fwait
aam
xchg
mov
cmc
gs
dec
in
call
add
imul
scas
movs
mov
or
xor
adc
jne
mov
ficom
lods
and
or
mov
pop
pop
inc
bound
mov
in
adc
or
(bad)
add
icebp
add
out
idiv
call
movs
push
xchg
or
in
sti
mov
rol
xchg
mov
icebp
mov
ds
pop
cmp
sub
jl
or
sbb
sub
pop
push
mov
cwde
or
sub
pop
repnz
call
(bad)
out
adc
sbb
xor
(bad)
pop
jl
aad
jns
push
jo
mov
popa
push
xchg
daa
cmp
and
add
cmp
push
popf
add
xor
sbb
or
pop
test
(bad)
push
mov
pop
xchg
cmp
repz
and
enter
or
or
(bad)
cs
leave
je
xchg
push
push
std
sbb
imul
mov
and
push
loopne
mov
dec
adc
dec
xchg
xor
xor
mov
sbb
pusha
dec
scas
jo
pop
(bad)
pop
push
sub
leave
rsqrtps
xor
jp
movs
add
rol
mov
xchg
inc
jae
lock
scas
xor
sbb
xchg
repz
hlt
or
pop
push
and
jecxz
lods
or
sub
xchg
mov
add
imul
jns
add
dec
push
cmp
es
add
pop
push
fdiv
aam
xor
add
inc
ret
inc
ret
pop
jp
xchg
xor
fcom
or
and
and
inc
jl
dec
mov
mov
xor
adc
mov
stos
mov
mov
mov
movs
sub
xchg
pop
xchg
lods
lods
sub
or
push
(bad)
fcom
jge
sub
inc
or
call
cmp
xchg
and
dec
add
retf
jg
add
pop
inc
inc
enter
sbb
cmp
jl
lock
push
mov
stc
cmp
sbb
adc
push
xor
jecxz
cmp
jo
or
mov
arpl
ret
retf
and
inc
adc
cwde
cs
xor
test
int
add
mov
sub
sub
push
sub
dec
pop
jb
or
arpl
adc
pop
cdq
sub
aad
or
repnz
stos
sbb
dec
ins
cmp
jb
mov
and
and
add
mov
nop
setbe
mov
xchg
push
inc
mov
push
hlt
outs
enter
or
stc
xor
mov
dec
sbb
or
xchg
sub
adc
xor
or
cmp
xchg
mov
and
sbb
xor
add
or
adc
in
adc
outs
out
rcr
fsubr
ja
xor
adc
add
cmp
add
xchg
adc
lods
adc
sub
loope
add
dec
pop
daa
inc
dec
pop
rol
stos
pop
mov
jo
fbstp
dec
pop
pop
sbb
xor
and
inc
push
cmp
lds
or
dec
push
dec
lahf
sbb
mov
inc
cmp
push
and
add
pop
sub
xchg
jne
dec
and
xlat
fs
mov
ror
rcl
push
aaa
push
jmp
icebp
dec
js
hlt
mov
push
jecxz
js
xchg
add
xor
test
add
lea
mov
jge
mov
mov
dec
add
retf
repz
adc
xchg
aad
fsub
mov
push
pop
pop
inc
ss
adc
fsub
xor
push
adc
inc
loope
jecxz
loope
and
mov
(bad)
cwde
xor
and
arpl
adc
sti
mov
adc
or
je
lea
or
sbb
lea
loope
cld
dec
add
add
jl
push
daa
sub
shl
add
test
outs
adc
sbb
cld
iret
enter
test
jne
add
aas
jns
xchg
nop
out
jmp
xchg
jno
fstp
xchg
fmul
xor
mov
or
jl
mov
mov
and
lea
sub
push
sbb
cmps
shr
pop
and
push
test
shl
sbb
pop
sbb
adc
sbb
and
adc
out
jb
add
imul
pop
mov
dec
dec
mov
pusha
ins
or
loopne
lea
xor
add
ror
cli
mov
inc
shl
mov
inc
inc
sbb
push
shr
lds
nop
xchg
add
lods
inc
fs
sbb
nop
add
ss
lods
mov
push
push
push
sbb
inc
pushf
mov
add
ret
movs
add
or
mov
xchg
jge
push
shl
imul
mov
mov
add
push
sbb
or
mov
shr
cdq
sar
sbb
sbb
dec
call
push
xchg
int3
mov
push
jp
data16
or
mov
loopne
ins
repnz
push
or
cmp
into
mov
inc
aam
xchg
mov
xchg
fist
dec
in
add
inc
xchg
int3
push
mov
push
sub
mov
mov
sub
adc
or
dec
add
mov
enter
adc
pop
mov
add
mov
arpl
test
sbb
mov
jg
push
rol
in
in
lea
push
rcr
pop
test
popa
push
(bad)
push
pusha
push
in
pop
jp
fs
lahf
inc
(bad)
cmc
(bad)
pop
xor
maskmovq
idiv
js
fwait
jae
fisub
xor
jnp
fs
pop
add
push
mov
addr16
jo
test
arpl
fwait
lock
jb
push
leave
leave
and
cmps
mov
push
ret
or
push
inc
sub
adc
or
pop
mov
mov
out
pop
push
outs
std
ror
add
xor
mov
inc
cld
mov
test
mov
cmp
test
lock
je
or
sub
jo
test
cld
add
or
adc
adc
sub
sub
push
and
cmps
or
retf
nop
add
jp
jnp
mov
fcom
or
push
push
cwde
sbb
pusha
mov
mov
int3
xchg
cli
add
cmp
je
xor
push
lods
inc
cmp
adc
or
(bad)
sub
push
(bad)
jae
add
or
pop
adc
or
mov
mov
xor
mov
out
push
push
ret
das
add
fist
(bad)
push
sub
cmp
ss
add
and
mov
or
xor
pop
rcl
xor
js
add
cmp
call
pop
push
iret
mov
hlt
outs
jmp
push
jne
push
mov
cwde
mov
aas
or
inc
shr
push
push
je
sbb
dec
rol
push
sbb
cmp
or
outs
push
xor
pop
jo
or
pop
add
sub
mov
xchg
inc
sub
pop
les
jl
fild
cld
stc
mov
dec
push
lahf
mov
mov
sub
add
mov
(bad)
jmp
neg
push
cmps
push
jle
add
push
add
add
shr
movs
add
push
loopne
cmp
stc
(bad)
imul
xor
push
adc
(bad)
lahf
inc
pushf
dec
jnp
aas
mov
jmp
fld
adc
loop
sub
(bad)
js
mov
or
and
adc
and
and
dec
xchg
push
xor
adc
aas
and
mov
test
and
add
push
ret
mov
lods
push
lds
push
shl
addr16
push
inc
aad
daa
pop
inc
push
and
outs
jno
push
inc
add
iret
test
and
cmp
ret
dec
xor
inc
outs
loop
sub
xor
push
dec
add
mov
adc
adc
sbb
sbb
stos
or
jns
add
push
sub
bound
addr16
jmp
pop
scas
xor
xchg
xchg
push
xor
call
inc
jg
lea
repz
in
inc
push
std
push
adc
push
int3
inc
or
xor
call
and
and
lods
adc
and
pop
sbb
sbb
ja
push
xchg
mov
mov
into
je
mov
push
cmp
jmp
adc
repz
addr16
push
pushf
lea
cmp
mov
jle
add
add
aas
std
or
sti
imul
cmp
dec
ror
jnp
(bad)
je
sub
inc
fidiv
push
pop
rcl
jnp
cmc
bound
jne
mov
xor
or
add
add
xchg
push
jge
adc
pop
cli
fs
jno
push
imul
dec
add
xchg
mov
pop
mov
sub
aas
xchg
mov
mov
mov
sbb
push
lds
aaa
xchg
or
fst
in
xlat
xchg
aad
sub
adc
pop
bound
add
aaa
xchg
movs
jg
jns
shr
sahf
push
arpl
stc
xor
(bad)
mov
xor
dec
call
and
jmp
adc
jbe
scas
mov
pusha
repnz
or
sbb
mov
mov
inc
add
pushf
idiv
mov
dec
or
add
jne
or
sbb
rcl
push
jb
sub
mov
mov
cmp
mov
test
or
xchg
fwait
sub
lea
or
aaa
adc
push
jne
xchg
cs
imul
mov
add
adc
pushf
pop
pop
xchg
mov
sbb
mulps
out
xor
or
call
idiv
xor
and
push
push
cmps
add
xchg
pop
mov
addr16
les
or
inc
ret
add
mov
fs
ss
(bad)
mov
pop
pop
bound
jnp
fcomp
adc
push
out
fisubr
push
fdivr
push
xchg
jle
xor
inc
sahf
or
mov
push
mov
sahf
adc
mov
push
cmps
int
je
loopne
pushf
in
rcr
ret
mov
data16
mov
cwde
dec
call
sbb
or
ja
out
sar
es
push
adc
test
or
and
and
aam
fsub
mov
mov
ins
pushf
addr16
fwait
lea
rol
loopne
in
cmp
add
call
cmp
repnz
and
add
add
adc
mov
add
xor
sbb
push
or
xor
sub
repnz
dec
xor
outs
fs
push
popa
sbb
lods
lock
dec
aaa
mov
and
adc
mov
scas
push
fs
or
xchg
outs
jl
sub
and
add
xor
fs
jne
pop
fst
push
fdivr
xor
xchg
repnz
pop
in
inc
push
mov
or
mov
add
scas
or
sub
fs
test
enter
mov
pop
inc
mov
dec
cdq
mov
fwait
xor
inc
dec
dec
loopne
enter
stos
out
out
xchg
(bad)
repnz
add
inc
mov
mov
push
into
mov
lea
add
jmp
push
cmps
sub
mov
ja
test
pop
dec
add
pusha
mov
and
cmp
(bad)
lea
imul
mov
push
outs
mov
push
js
xor
retf
pop
and
and
pusha
fs
sub
test
(bad)
(bad)
dec
dec
jne
jl
aam
cwde
sbb
cld
lds
ds
dec
or
sbb
mov
je
call
ins
test
xchg
inc
inc
mov
cmc
int3
mov
mov
outs
add
retf
enter
mov
nop
jno
add
and
or
adc
je
and
out
mov
rcl
test
mov
mov
cmp
add
and
enter
mov
mov
xchg
retf
or
and
mov
rol
push
add
into
xor
cmp
shl
xchg
retf
dec
enter
popa
mov
movs
dec
addr16
mov
clc
enter
push
and
ds
enter
icebp
int3
mov
add
dec
(bad)
stc
std
mov
sbb
in
add
add
xor
cmp
and
xchg
add
mov
mov
or
dec
aam
pop
je
movs
sbb
cdq
or
fmul
fcom
enter
pushf
scas
sahf
dec
inc
inc
es
cmps
stos
scas
dec
fld
push
in
outs
pop
hlt
test
mov
mov
add
les
loope
cld
add
add
xchg
retf
daa
lds
add
sbb
pop
clc
in
add
add
loopne
add
call
in
or
idiv
cmp
or
or
adc
push
ds
movs
lock
add
or
pushf
fisttp
sbb
fdivr
adc
and
push
rcl
sub
sub
clc
je
rcl
push
add
pop
mov
add
(bad)
popf
xchg
(bad)
inc
imul
in
les
sub
sub
push
mov
add
add
xor
and
inc
push
mov
jns
dec
inc
pop
inc
sar
fs
add
push
aas
push
or
or
mov
xchg
out
add
jl
movs
sbb
cdq
lea
dec
inc
inc
sbb
call
cmp
cmp
mov
mov
or
cmp
dec
push
imul
add
call
and
aaa
add
lods
sbb
loope
inc
addr16
jb
lea
pop
add
scas
outs
sub
je
inc
daa
in
popf
adc
dec
bound
retf
or
sub
imul
lock
mov
(bad)
inc
daa
test
xlat
add
mov
xor
and
(bad)
sub
mov
add
add
add
test
adc
jmp
fwait
cwde
jb
inc
mov
inc
bound
cmp
popa
ror
int
mov
mov
ja
or
dec
in
sub
popa
pop
xchg
xchg
and
adc
sub
inc
add
(bad)
dec
push
push
adc
cmps
xor
pop
shl
movs
jg
xchg
xchg
or
inc
dec
mov
in
inc
mov
out
and
nop
push
jne
nop
sub
push
adc
ins
ins
shl
and
ins
sub
push
cmp
jp
adc
add
ins
test
push
cmps
leave
shr
push
add
sub
sbb
inc
push
xchg
pusha
ja
mov
fucom
push
jge
shr
or
mov
retf
jle
(bad)
xchg
jne
jmp
scas
das
dec
pop
push
fimul
pop
sub
and
add
inc
mov
push
fst
adc
push
inc
cmps
jl
inc
test
fisub
(bad)
imul
mov
daa
sub
out
and
bound
lds
add
aad
fist
pop
push
jmp
nop
cbw
cmps
and
or
in
gs
retf
dec
(bad)
xchg
aaa
ins
xor
and
repnz
pop
and
mov
mov
fstp
jmp
gs
frstor
popaw
jp
pusha
inc
cmps
les
adc
hlt
mov
pop
mov
inc
adc
outs
mov
pop
test
mov
dec
mov
retf
call
stos
sub
sbb
leave
in
sbb
sbb
sbb
int3
sbb
stc
cmp
mov
sub
jns
sbb
call
sbb
push
xor
call
xchg
dec
mov
jo
lds
push
sub
inc
frstor
ss
pop
cmp
sbb
and
adc
add
sub
sbb
ds
loope
pop
jle
mov
js
(bad)
pop
ja
pop
add
ror
sbb
test
and
nop
ds
lock
add
dec
xor
sbb
adc
cmp
push
je
push
inc
mov
dec
leave
sub
push
or
sbb
cmp
or
jne
and
adc
pusha
push
sbb
pop
jb
clc
push
push
(bad)
adc
sub
pop
retf
cmp
sbb
adc
mov
loopne
mov
xlat
data16
popf
xchg
lock
mov
cmc
js
or
sbb
or
dec
(bad)
sub
mov
(bad)
stos
fld
aaa
sub
mov
sub
dec
sbb
ret
jne
hlt
retf
xchg
cmp
cmp
push
dec
mov
dec
mov
popa
push
mov
sbb
sbb
rol
es
lods
jle
or
enter
les
push
mov
push
mov
cwde
push
mov
dec
cmps
push
or
std
mov
cmp
daa
push
xlat
cwde
jmp
out
add
cmp
ds
adc
inc
push
data16
mov
sbb
pop
or
cmp
scas
sar
cmp
pop
fsub
fisttp
and
sub
mov
cmp
xor
jne
mov
stos
adc
push
push
jno
(bad)
imul
cmp
pop
inc
call
dec
call
push
in
cmps
add
shl
push
inc
push
sbb
add
inc
sbb
sub
or
sbb
mov
pop
xchg
sub
retf
inc
add
mov
xor
call
or
pop
mov
sub
call
and
lds
sbb
and
sub
ins
sbb
xor
add
cmp
loope
adc
cmp
ins
ss
inc
cmp
fldcw
jo
in
xlat
test
xor
xchg
xchg
mov
push
sub
push
sahf
xchg
adc
adc
pop
add
mov
cmp
xchg
in
shl
cmp
and
int
jnp
rcr
rcr
mul
fs
push
xchg
push
sub
adc
adc
ins
xchg
add
ret
fmul
clc
ficomp
push
mov
inc
push
sbb
aas
and
fidivr
or
and
ret
xor
push
out
push
jmp
and
xchg
and
ins
and
push
jo
mov
aam
and
inc
add
icebp
add
pop
popf
jl
and
xor
cmp
(bad)
xor
pop
and
xchg
adc
dec
jae
xchg
daa
cmps
leave
inc
aaa
test
aad
and
popf
adc
inc
fstp
push
arpl
push
mov
retf
jecxz
or
cmp
push
repnz
pusha
stc
cwde
and
mov
icebp
fcomp
outs
mov
mov
xchg
inc
cmp
out
gs
pushf
pop
or
lock
dec
mov
rol
dec
out
jmp
xchg
jp
ret
dec
rol
sub
pusha
psubsb
mov
test
mov
and
pop
lock
inc
mov
and
ss
add
sti
sbb
retf
mov
test
adc
cmp
sbb
rcr
movs
daa
or
and
pusha
jnp
out
aas
cmps
inc
mov
(bad)
mov
inc
dec
sbb
and
and
xor
jo
pushf
outs
push
xor
int
sub
loope
adc
xor
add
cmp
in
mov
adc
lods
or
popf
add
pop
mov
mov
mov
(bad)
loopne
fninit
mov
xchg
cmp
ror
repnz
mov
(bad)
adc
adc
jp
or
push
test
add
arpl
xor
push
xor
shr
ds
cmp
push
outs
call
adc
nop
push
jb
jp
mov
push
mov
(bad)
ja
sbb
jno
jp
sub
push
sub
gs
xor
sbb
push
icebp
push
pusha
movs
std
in
sub
aam
xor
(bad)
mov
std
mov
pop
ins
push
rcr
mov
dec
dec
xchg
retf
pop
sbb
pusha
pop
popa
das
xor
or
and
lock
movs
mov
cmp
mov
cmp
loope
inc
mov
mov
in
add
sbb
fwait
xor
add
mov
pop
push
sub
add
bound
push
sub
and
xor
lods
adc
or
lock
dec
(bad)
inc
bound
inc
sbb
aaa
pop
push
xor
mul
movs
sub
sub
neg
push
std
xchg
fld
leave
lock
add
retf
or
cmp
push
sbb
xlat
mov
dec
sub
jbe
inc
mov
(bad)
les
mov
ror
pusha
jno
add
cdq
push
xsha256
cmps
adc
pop
sub
xchg
shl
(bad)
arpl
adc
push
mov
mov
nop
popa
(bad)
test
clc
adc
inc
push
stos
xor
imul
mov
maxps
add
rcr
stc
je
in
mov
cmp
pavgw
push
dec
cwde
inc
lea
mov
pop
add
jg
sub
or
sbb
std
ins
loop
clc
fwait
push
add
push
mov
sbb
and
fidiv
fwait
std
or
jbe
or
adc
push
(bad)
cmp
lds
sub
or
retf
and
add
cs
and
sbb
test
add
int
out
adc
(bad)
std
pop
sub
or
lock
jnp
enter
mov
xor
pop
frstor
or
in
call
mov
dec
movs
mov
in
ds
sub
pop
inc
xchg
jmp
scas
or
ficom
pop
push
push
cwde
or
jno
push
sbb
(bad)
lock
in
adc
mov
sub
push
ins
out
fcomp
mov
jg
(bad)
shl
push
xor
or
add
mov
add
add
pop
cmp
pop
out
jmp
(bad)
loope
lods
or
inc
leave
add
sbb
shl
xor
cvtps2pd
xor
xchg
sahf
sbb
mov
xor
sbb
and
push
jns
cmp
push
push
push
mov
sub
mov
(bad)
jmp
sbb
jl
je
add
and
jmp
or
pop
stos
mov
push
or
fsubr
adc
mov
and
call
sub
loopne
adc
jns
add
clc
push
and
in
imul
sbb
mov
dec
push
(bad)
jmp
adc
adc
enter
and
adc
or
mov
push
lea
mov
in
xchg
jo
adc
push
lods
ret
push
sbb
jle
call
pop
add
or
push
push
sub
mov
add
add
or
add
leave
rcl
inc
inc
mov
daa
add
out
push
xchg
push
push
test
xor
cmps
ds
lods
std
std
or
inc
sbb
in
pusha
and
dec
xor
shl
into
cmp
sbb
push
or
inc
clc
hlt
test
cs
popa
and
jbe
gs
inc
jg
imul
fxch
push
jp
je
ja
pop
lock
cmps
cmp
(bad)
jno
(bad)
imul
sbb
mov
adc
pop
push
and
add
adc
je
push
ins
cmp
dec
push
pop
mov
loope
sub
mov
inc
sbb
jbe
pop
sub
pushf
adc
push
jae
or
xchg
sbb
and
or
or
loopne
test
inc
and
sbb
xchg
xchg
xchg
mov
sub
outs
arpl
adc
push
(bad)
fmul
sbb
test
xchg
aam
mov
push
dec
and
call
dec
int
in
inc
jbe
dec
sub
cmps
ret
push
adc
add
stos
mov
xor
clc
push
sub
(bad)
cmp
mov
in
test
ss
lock
dec
daa
loope
xchg
loopne
bound
nop
iret
adc
jmp
xchg
and
shl
std
hlt
cmp
inc
jmp
push
add
mov
mov
cmc
test
lea
daa
dec
movs
pop
mov
enter
cmp
test
cli
(bad)
push
cmp
sub
push
and
cmp
or
call
and
sub
inc
sub
(bad)
in
movs
in
sar
dec
pop
sbb
mov
scas
or
cmp
sub
adc
xchg
sbb
popa
xor
jbe
xor
jg
xor
inc
daa
mov
add
hlt
adc
dec
pop
out
dec
sub
sbb
dec
xchg
mov
getsec
xor
cmp
pop
add
pusha
mov
sub
jno
clc
push
dec
addr16
movs
data16
mov
sbb
loope
add
jge
inc
mov
sbb
test
add
mov
les
je
xchg
mov
xor
dec
ss
xor
retf
inc
std
push
mov
cmp
or
mov
ficomp
xchg
call
push
iret
add
push
mov
nop
lods
pop
jp
push
fst
sub
test
mov
and
leave
pop
pop
mov
push
xor
dec
mov
add
loopne
xor
bound
push
retf
mov
sbb
imul
or
sub
mov
add
and
fdivr
popf
sbb
push
cmp
lods
pop
pusha
jne
mov
js
sbb
push
(bad)
push
pushf
dec
add
sub
inc
and
push
repnz
imul
push
xor
jo
or
inc
or
or
adc
jge
xchg
shl
test
and
sbb
add
retf
cmp
call
add
mov
mov
add
xchg
sbb
dec
jno
inc
sub
push
and
or
rol
rol
cmp
in
and
ins
or
aaa
xor
(bad)
rcr
add
or
push
add
jg
rol
ja
and
add
jbe
bound
jmp
xor
dec
add
add
push
call
cmp
add
pop
pop
mov
sbb
dec
or
js
xchg
pop
nop
fnsave
sbb
fs
push
adc
lods
or
adc
inc
mov
pop
aam
pop
adc
js
or
adc
retf
mov
inc
mov
stos
shl
and
mov
lea
rcpps
retf
or
jmp
xlat
push
sub
push
into
xchg
fisub
mov
fs
push
and
(bad)
adc
data16
jl
mov
retf
cmp
lea
mov
push
in
adc
adc
and
and
jmp
popf
test
out
or
iret
cmp
inc
(bad)
fcom
cmps
add
add
in
push
jmp
or
push
(bad)
jns
pusha
mov
rcr
into
add
adc
fmul
lea
sbb
add
dec
nop
push
inc
sahf
cmp
cli
dec
add
fcmovne
or
rcl
sar
mov
daa
stos
test
add
xchg
leave
add
lahf
dec
mov
enter
xchg
mov
push
shl
push
add
cmp
push
mov
ja
sub
ins
cs
pop
xor
in
sbb
(bad)
into
adc
cmp
inc
add
mov
xchg
and
or
cld
mov
or
dec
dec
xor
pop
or
or
arpl
adc
push
das
inc
loopne
enter
imul
sbb
add
jae
(bad)
mov
dec
int3
xor
mov
push
aaa
pop
imul
or
ds
sbb
cmps
mov
sub
add
into
pusha
xor
push
push
ins
xchg
aam
adc
pop
pop
call
aam
mov
dec
inc
push
and
add
out
pop
je
push
or
(bad)
jg
mov
xchg
dec
jns
dec
adc
add
in
in
adc
add
pop
enter
lock
add
psubb
mov
not
mov
xchg
leave
adc
test
push
xor
adc
pop
add
inc
test
int3
cs
cmp
push
xor
jl
and
dec
push
push
inc
dec
mov
js
es
or
push
inc
cs
clc
(bad)
cmp
dec
jmp
imul
lods
mov
movs
push
xor
mov
add
push
ins
add
mov
push
shr
or
movs
(bad)
mov
and
cmp
stos
inc
loop
imul
test
fmul
in
icebp
xor
aas
push
sar
add
mov
sub
(bad)
movs
xor
mov
movs
fstp
mov
mov
push
popa
add
clc
in
retf
out
push
mov
jns
dec
push
enter
call
xor
imul
mov
push
scas
arpl
sub
inc
shl
add
push
mov
mov
xchg
sbb
sbb
ret
dec
pop
push
push
pop
lock
les
and
and
repz
fadd
push
cwde
push
inc
sub
and
mov
and
mov
dec
loopne
sbb
test
add
pop
mov
and
add
sub
sub
daa
jl
cs
sbb
shl
aaa
loope
pop
fdiv
sbb
in
push
push
int
popa
cmps
in
adc
xor
push
xor
sbb
in
mov
push
fimul
out
js
push
pop
push
cmp
test
pop
sub
jo
ret
mov
jmp
test
mov
ja
pop
and
add
pop
lods
cmp
push
adc
or
sbb
mov
push
mov
jne
add
add
mov
ret
sar
sbb
fldenv
fist
cmp
and
(bad)
in
push
je
mov
inc
out
leave
sbb
adc
sub
xchg
movs
adc
lock
add
jmp
dec
cmp
add
dec
push
push
pop
pop
dec
jl
iret
pusha
fs
push
test
cwde
test
test
or
mov
xor
jl
(bad)
popf
mov
fstp
into
nop
pop
das
and
push
stos
push
mov
and
daa
sub
xchg
mov
cmp
inc
out
retf
dec
cmp
xor
nop
xor
outs
jae
mov
or
gs
lods
rol
push
clc
push
pop
and
jg
cdq
les
fsubr
push
bound
lods
sub
ror
cmp
push
fidivr
shl
mov
mov
jnp
jg
cmp
jle
sub
jmp
sbb
into
inc
les
(bad)
jnp
mov
sub
sub
int
nop
(bad)
xchg
or
cwde
push
dec
fs
ins
fdivr
xor
inc
jl
push
js
mov
adc
push
sub
test
dec
push
mov
push
xchg
adc
repz
or
sbb
mov
push
and
sti
loope
test
push
fs
scas
push
retf
fs
pushf
xchg
jbe
stc
int3
xchg
pop
cld
mov
adc
mov
xor
mov
aam
sahf
test
es
adc
gs
retf
sbb
ror
cmp
mov
push
push
adc
inc
pop
clc
adc
dec
push
push
push
or
push
sgdtd
inc
sbb
mov
adc
pop
mov
out
add
call
xor
lods
bound
bound
mov
mov
mov
ds
test
add
mov
xor
xchg
mov
and
popa
inc
cwde
and
and
cmps
mov
clc
inc
loope
inc
sbb
sub
add
pop
jmp
inc
xchg
jmp
lahf
inc
ret
outs
jle
jno
push
and
pop
jmp
mov
movs
test
sbb
or
cmovno
aas
xor
shl
mov
xor
das
inc
push
inc
neg
jns
push
(bad)
push
jl
and
call
(bad)
sbb
mov
or
sti
mov
inc
test
icebp
adc
sub
add
inc
dec
out
push
scas
pop
push
cmovl
and
dec
add
or
outs
pop
xor
loope
adc
pop
mov
imul
push
or
scas
xchg
aas
jo
aam
cmp
ror
and
fadd
loope
and
movs
js
shl
mov
sbb
push
scas
sbb
jmp
cmp
cmp
jmp
inc
ss
push
sub
sub
xchg
and
lods
aaa
arpl
mov
inc
and
push
in
jo
or
lods
mov
xchg
sbb
mov
xor
add
inc
or
or
psrld
or
jnp
cmp
(bad)
jae
cld
xchg
(bad)
sbb
and
int
sub
imul
dec
pop
inc
adc
rcr
popa
jmp
or
in
enter
mov
test
mov
add
test
inc
inc
cmp
xchg
add
mov
push
shr
push
jne
push
add
mov
push
ins
ret
cmp
push
rcr
call
pop
je
fmul
les
into
(bad)
dec
inc
and
nop
js
scas
in
sub
sbb
aam
cs
jne
or
ins
movs
mov
imul
lahf
and
sbb
jbe
cmps
mov
ret
or
pop
or
adc
dec
mov
and
sbb
clc
xor
pop
adc
sbb
and
popf
mov
jo
aad
and
mov
mov
popa
pop
js
inc
sbb
lds
jl
popa
int3
xor
inc
or
rol
jmp
adc
int3
rcr
ret
pop
test
rcl
push
sub
pop
jbe
add
push
movs
dec
lods
xor
cmp
push
sub
push
adc
and
or
or
xor
and
dec
fdiv
in
sbb
sti
(bad)
ret
dec
push
push
xor
fild
push
psraw
ret
gs
dec
fmul
jo
inc
push
rcr
and
mov
xchg
add
and
mov
adc
out
pop
push
adc
sbb
xor
fs
inc
add
sti
inc
adc
popf
mov
sub
cmp
mov
inc
jno
add
in
mov
fbld
mov
mov
mov
or
xchg
push
jne
mov
xchg
test
xchg
int
cmp
or
push
add
in
xchg
loopne
rcr
sub
arpl
xchg
aam
add
or
sbb
cmp
outs
bound
fstp
push
xor
rcr
xchg
mov
sub
xor
push
mov
lea
daa
push
push
add
and
aam
push
aam
fs
mov
or
out
push
inc
xchg
push
or
add
aam
jo
xchg
data16
push
mov
mov
adc
daa
movs
mov
cmp
mov
call
and
out
scas
mov
adc
mov
movs
and
loope
lock
inc
(bad)
rcr
mov
addr16
xchg
adc
jnp
ja
mov
ja
sub
push
mov
ds
mov
jmp
push
and
jnp
or
xlat
mov
inc
adc
jne
xchg
lock
imul
push
and
jae
inc
in
push
push
mov
imul
cmp
call
nop
rcl
add
or
push
and
das
xchg
cmps
imul
sar
add
sti
jmp
jp
and
test
xchg
sub
xlat
cli
jne
stc
sub
adc
dec
ror
shl
(bad)
nop
dec
push
emms
xor
or
test
pop
scas
enter
and
(bad)
dec
inc
sar
loopne
and
clc
cmp
mov
jnp
icebp
cmp
je
mov
paddusw
add
pop
mov
add
popa
mov
ins
in
sahf
and
inc
cmp
ficom
and
and
inc
les
push
je
add
or
cmp
repz
push
(bad)
icebp
mov
(bad)
mov
mov
adc
mov
ret
cmc
push
popa
test
test
je
inc
cmp
je
inc
js
imul
pop
sub
mov
scas
sbb
rcr
call
xor
clc
mov
xchg
out
fsubr
aas
push
aaa
nop
add
in
jno
push
cmp
repnz
ins
push
aaa
add
sbb
loopne
movs
lds
cmp
repz
or
push
push
push
mov
xor
inc
inc
ret
imul
xchg
lock
das
nop
je
xchg
sbb
call
pop
sub
or
adc
(bad)
xchg
ficom
add
mov
inc
pusha
shl
xchg
pop
pop
inc
and
ret
push
cmp
mov
jmp
jo
jno
push
jge
sub
dec
push
pop
or
dec
or
adc
push
cmp
sub
shl
outs
test
shl
bound
pop
frstor
inc
pop
cmp
repnz
pop
bound
and
and
rol
mov
sub
jne
inc
jnp
sub
push
scas
dec
imul
mov
inc
push
test
adc
(bad)
iret
sahf
adc
mov
jmp
rcl
enter
push
xchg
push
test
mov
test
sub
ja
int
push
push
lea
or
add
add
inc
push
or
adc
mov
adc
inc
daa
and
movs
aad
ret
inc
clc
mov
mov
cmp
mov
ror
xchg
push
sbb
or
daa
and
mov
sbb
dec
sti
add
mov
outs
or
cmp
push
pop
adc
nop
sbb
jae
lea
gs
ins
cmp
jmp
jl
add
lods
mov
sub
shl
call
sbb
(bad)
dec
jmp
rcr
sub
inc
jmp
add
mov
push
and
dec
sti
or
rol
sar
xchg
or
push
ins
retf
sbb
push
sbb
daa
adc
adc
lods
daa
xor
sbb
cmp
dec
sbb
mov
sbb
daa
or
xor
div
rol
sbb
pop
inc
sbb
fiadd
sbb
ins
stos
inc
pusha
sbb
pop
data16
add
inc
(bad)
and
ficom
movs
or
cli
sub
or
xor
das
cdq
in
xor
push
push
jge
sbb
fld
push
mov
jmp
loop
shl
push
and
inc
dec
adc
cmc
sub
ja
je
fstp
mov
pop
mov
fist
or
jb
mov
jp
js
bound
mov
in
push
push
sub
and
push
ss
data16
mov
mov
mov
push
pushf
or
fnsetpm(287
mov
sub
retf
aad
fisubr
std
cmp
aaa
push
rcr
call
or
or
pop
es
mov
in
push
pop
je
cdq
adc
stc
jae
sbb
stos
sub
mov
leave
imul
and
and
cld
inc
test
xor
jo
pop
xor
jb
movs
inc
or
scas
fnstsw
add
xchg
cld
movs
mov
ja
aam
xor
push
mov
fld
movs
adc
pop
pop
mov
xchg
mov
je
adc
sub
sub
dec
push
adc
cli
jns
inc
inc
mov
test
jne
push
ret
and
xchg
imul
les
jp
inc
jecxz
pop
sbb
add
jo
int3
xchg
pop
inc
jb
push
or
dec
jae
dec
push
dec
pop
repnz
mov
pop
enter
push
ret
dec
jae
mov
push
jmp
pop
mov
pop
enter
add
jmp
push
sub
mov
aam
mov
pop
mov
aad
push
stos
sbb
es
jo
inc
rol
(bad)
jnp
mov
mov
ja
outs
daa
jecxz
daa
mov
(bad)
dec
ror
push
addr16
add
loop
xchg
test
test
adc
mov
(bad)
and
sbb
mov
add
push
push
dec
xchg
xor
and
xchg
sar
in
mov
ss
or
pusha
daa
fcmovnbe
pop
or
fs
and
push
jecxz
fs
stc
mov
adc
mov
ret
push
enter
das
add
sub
inc
dec
dec
inc
xchg
sub
xor
fldcw
lock
loope
pushf
xor
inc
mov
jo
mov
adc
mov
test
xchg
stos
adc
push
mov
ret
sbb
jne
push
cmovne
pop
int
je
outs
dec
js
or
je
pop
add
ja
retf
inc
dec
ret
popf
push
fnsave
jmp
xchg
push
adc
scas
loopne
jb
out
sbb
or
sub
sti
out
ret
jne
nop
inc
or
cli
dec
ret
cmp
push
ja
mov
lea
sar
enter
std
inc
mov
sub
das
pusha
jae
fadd
cmp
or
(bad)
jbe
jmp
(bad)
cmp
daa
icebp
mov
or
jmp
aam
xor
and
cmp
xchg
xor
fisttp
and
dec
add
mov
daa
jmp
ins
xor
mov
xchg
test
mov
fst
dec
mov
adc
add
neg
inc
xor
sbb
push
add
cmp
add
scas
jge
add
xchg
xchg
je
or
sbb
icebp
mov
mov
and
add
dec
jecxz
sub
push
xlat
(bad)
in
test
enter
int3
xchg
push
fimul
dec
lds
test
push
xchg
dec
mov
data16
sbb
and
add
xchg
mov
xchg
push
outs
ss
stc
or
sub
into
lock
sar
mov
xchg
mov
sar
push
push
push
fcmovnb
push
js
jl
jmp
dec
push
push
pop
ins
rol
xor
xor
xor
dec
nop
pop
clc
push
sahf
adc
retf
cmp
ret
jecxz
mov
cmp
shl
daa
pop
je
jae
inc
and
aad
test
dec
sbb
add
dec
or
or
adc
pop
push
in
xchg
push
mov
adc
mov
mov
sar
cmp
push
ins
or
or
pusha
sub
cmp
add
fcmovnb
mov
(bad)
dec
or
pushf
stc
mov
ret
xchg
adc
je
das
jne
dec
aas
(bad)
xchg
jno
pop
sbb
sbb
push
pop
xchg
and
push
adc
shl
test
and
sbb
dec
mov
sub
mov
inc
stc
xchg
mov
imul
mov
dec
mov
or
mov
ins
pop
mov
push
add
dec
inc
xchg
or
bound
inc
fist
mov
sbb
cmp
ror
jnp
test
mov
pop
push
dec
ss
call
and
inc
lock
dec
mov
ret
cmp
inc
fist
mov
dec
sahf
or
adc
outs
mov
gs
cmp
inc
aad
add
sub
dec
xor
add
stc
idiv
outs
mov
cmp
pop
mov
dec
bound
inc
and
out
stos
add
or
push
idiv
iret
cmp
loop
stc
repz
pop
and
mov
sub
mov
sbb
adc
add
xor
lods
inc
lds
adc
add
mov
add
mov
push
adc
xor
inc
sub
sub
mov
and
xor
hlt
cs
inc
cmc
mov
pop
loop
pop
in
and
xchg
mov
pop
lock
in
xor
sub
adc
sbb
or
data16
inc
cmp
cmp
xor
sub
jl
out
dec
leave
lahf
leave
xor
mov
push
push
fdivr
mov
jne
stos
and
add
fwait
mov
inc
inc
sub
aam
add
sub
retf
and
dec
pop
sub
xchg
xlat
shl
inc
cmp
(bad)
sbb
ret
sbb
stos
sbb
shr
inc
add
or
push
jo
jnp
xor
mov
push
cmp
add
cmp
lock
and
in
adc
adc
pop
inc
cmps
mov
daa
enter
ret
and
push
fsubr
jl
and
add
jb
and
add
and
xchg
add
(bad)
jle
xchg
xor
sbb
je
lock
mov
add
mov
xchg
sub
adc
inc
inc
test
jnp
dec
mov
adc
jmp
add
(bad)
or
int3
jl
scas
frstor
mov
sar
dec
ja
pop
lods
mov
sub
fcomp
mov
add
jno
sbb
pusha
mov
dec
mov
add
xor
push
and
mov
jne
std
scas
cmp
mov
inc
or
shl
add
aam
aaa
js
jg
js
or
rcl
outs
sbb
sub
sar
pop
mov
sub
cld
sbb
mov
es
std
cmp
pop
cmp
in
jl
aas
sub
jg
cmp
(bad)
mov
jae
mov
jns
or
(bad)
cdq
cmps
repnz
adc
and
sbb
mov
ins
inc
in
mov
jmp
cmp
outs
aam
jge
loop
add
cmp
add
mov
fcmovne
shr
add
je
add
lock
hlt
adc
ss
inc
sub
push
inc
out
mov
shr
push
(bad)
xlat
or
xor
or
data16
jo
cmp
test
sub
and
push
js
out
mov
push
add
or
arpl
add
and
jne
jmp
aaa
std
outs
imul
xor
int3
stos
icebp
jecxz
and
push
rcr
lds
sbb
lahf
pusha
mov
add
setb
adc
xchg
jg
lock
xor
js
imul
xor
nop
xchg
fst
pop
xchg
adc
(bad)
pop
jns
test
or
dec
xlat
add
push
cli
push
or
outs
push
fisub
cmp
sbb
in
fild
ins
in
push
jo
aas
push
inc
xlat
add
and
and
and
push
sub
jbe
mov
push
aam
add
and
and
loope
bound
rol
cwde
leave
aaa
in
bound
aaa
mov
shl
test
jmp
pusha
pop
aas
push
push
inc
aad
lock
inc
push
sbb
jne
outs
jbe
bound
repz
inc
lds
jnp
cmps
push
jns
push
or
das
mov
mov
xor
into
jle
sbb
jge
jo
outs
xchg
(bad)
sub
mov
lods
loope
aas
enter
push
jmp
xor
cmc
sbb
push
movs
push
cmp
push
xchg
jge
or
loop
lahf
push
in
push
xchg
ins
(bad)
push
inc
call
mov
fisubr
outs
shl
push
je
dec
dec
mov
daa
mov
xor
mov
dec
sar
in
jne
icebp
xor
and
inc
mov
mov
or
loopne
lods
xchg
pop
or
imul
mul
je
fsub
mov
mov
jl
pusha
push
push
sbb
inc
arpl
mov
jl
xor
push
jl
adc
jg
shr
cmp
jae
xchg
dec
dec
ret
cmp
cwde
stc
jmp
fst
add
clc
add
sub
test
xchg
cli
jmp
and
fimul
hlt
inc
cmps
adc
and
enter
scas
ins
pop
inc
in
es
jl
mov
in
rcl
(bad)
push
jle
lods
adc
jae
rcl
sbb
sub
or
inc
xor
mov
push
fild
inc
and
test
lahf
pop
js
shl
cli
dec
push
in
test
sbb
lea
jae
sub
pop
mov
addr16
pop
push
jb
pop
lea
xchg
clc
cmp
mov
mov
pop
fs
mov
lods
sub
(bad)
and
or
sahf
test
pop
adc
add
lea
inc
push
or
fdiv
lock
jmp
jbe
lea
nop
mov
jbe
adc
jns
ja
fwait
rol
jb
push
and
mov
iret
jmp
mov
cmp
mov
sub
shr
call
adc
lahf
ret
mov
fnstenv
sub
sbb
cld
push
mov
add
movs
push
loope
sub
ret
lods
sub
inc
mov
and
sar
pop
jmp
test
adc
xchg
jo
(bad)
add
fcmovne
je
arpl
test
or
mov
cmp
sbb
mov
push
jmp
jnp
push
xor
nop
out
push
cmp
sbb
and
test
fwait
test
leave
leave
and
add
dec
fsub
mov
or
xchg
cmp
and
sbb
sub
jle
xor
push
ds
adc
aas
add
sub
aam
and
dec
icebp
xor
add
add
add
jae
movs
sbb
sbb
push
push
jp
mov
scas
lods
add
xchg
sub
pop
jne
test
adc
adc
imul
push
xor
lock
add
xchg
clc
or
push
xchg
push
add
sbb
add
gs
adc
mov
push
add
xchg
ja
mov
push
inc
push
sub
adc
pop
dec
xchg
(bad)
movs
lods
addr16
test
xchg
inc
dec
push
mov
or
or
mov
(bad)
xchg
jne
(bad)
push
pusha
lea
push
lahf
and
mov
pop
movs
(bad)
mov
gs
push
(bad)
mov
test
xor
in
push
add
out
adc
or
movs
retf
inc
cwde
cmp
pop
push
sub
rcl
or
jmp
adc
push
addr16
aad
loopne
and
and
push
lods
shl
push
adc
ret
xor
mov
and
rcl
xchg
or
and
or
jo
push
fld
cmp
pop
pop
and
rol
cmp
repnz
rol
pop
icebp
or
jbe
add
lods
add
aam
xchg
xor
mov
add
dec
imul
or
mov
dec
pop
dec
les
and
sub
mov
fidivr
cli
fdiv
jge
ret
and
adc
xor
repnz
(bad)
adc
enter
or
adc
or
inc
cmp
dec
xchg
add
inc
cmps
imul
and
pop
shl
clc
sub
ds
loop
shr
add
inc
or
adc
movs
ss
sbb
and
leave
and
pop
adc
aaa
ret
and
push
fldcw
xor
or
mov
jmp
lods
or
popf
idiv
and
inc
inc
or
pop
popa
das
retf
and
shl
mov
fsub
mov
cs
imul
mov
shl
imul
add
popa
fdiv
out
(bad)
dec
cmp
test
arpl
cmc
ins
push
mov
sbb
rcr
ret
pop
and
pop
clc
add
icebp
das
es
pusha
or
xchg
add
int3
jo
adc
or
cmp
push
jb
and
add
pop
add
xchg
rol
in
sbb
add
sbb
cmp
stc
sub
cdq
and
push
xchg
and
mov
xlat
lea
ficom
sbb
cmp
inc
sbb
add
push
xor
mov
popa
push
fstp
inc
ret
fistp
push
add
dec
or
in
xlat
cs
jge
data16
pop
shr
push
sbb
inc
or
mov
dec
mov
or
xor
mov
fwait
xor
jge
sbb
push
add
push
inc
outs
jae
cs
sub
add
push
int3
or
mov
jmp
lea
or
and
xlat
adc
sbb
inc
cmps
push
mov
xchg
ja
dec
xchg
mov
adc
xor
xor
add
cwde
pop
inc
xchg
xor
adc
out
sbb
imul
xchg
aaa
dec
cmp
lds
movs
ds
test
inc
xchg
mov
test
outs
sahf
add
push
xor
sbb
movs
jo
bound
jmp
pop
and
mov
fld
outs
or
push
push
inc
sub
xchg
sbb
imul
sub
lea
aaa
add
push
add
adc
xor
mov
mov
pop
adc
lock
mov
adc
dec
cld
xor
push
jl
dec
sbb
test
cmps
mov
mov
inc
dec
js
push
ror
add
int3
rol
sub
inc
and
sbb
movs
cmp
cmp
cdq
push
sbb
inc
push
cmp
jae
and
xor
movs
inc
shl
ins
pop
(bad)
mov
add
push
inc
fsubr
inc
push
jg
and
mov
(bad)
jge
and
and
adc
push
pop
mov
popf
cmp
cmp
mov
add
xor
or
test
jmp
xor
and
pushf
out
lds
add
push
or
xor
(bad)
aam
dec
sbb
outs
push
push
and
adc
(bad)
icebp
cld
mov
cmp
push
mov
push
aam
cmp
push
add
mov
ror
xor
xchg
movs
push
sbb
cmp
xchg
popf
jmp
mov
aam
cmp
loop
arpl
and
push
lahf
mov
or
push
and
rcr
inc
ret
mov
add
mov
mov
mov
push
push
out
xchg
movs
and
mov
pop
jne
inc
in
mov
add
test
fisubr
mov
push
imul
sbb
mov
cmps
mov
add
(bad)
sbb
dec
push
sbb
sbb
push
ret
sbb
fs
pop
or
aam
movs
sub
sbb
and
ins
test
rcpps
or
scas
call
fisub
mov
test
call
xor
push
popf
or
xchg
fldenv
pushw
leave
mov
mov
cmp
mov
mul
dec
jecxz
sbb
mov
adc
fwait
push
stc
fdivr
fld
sub
fucomp
cs
popa
mov
and
sub
add
xchg
xor
test
out
and
mov
dec
inc
je
or
push
cmps
jp
aas
test
jg
test
je
stc
cmp
or
mov
jmp
stc
pusha
imul
or
out
sub
loopne
inc
int
jge
inc
add
(bad)
push
pop
mov
mov
pusha
in
xchg
mov
adc
and
cmps
jp
or
mov
and
cmp
mov
sbb
loop
push
lds
sbb
sub
mov
mov
aam
mov
ja
imul
sahf
push
jno
cdq
mov
jl
out
pop
dec
sub
adc
xchg
aas
xchg
jno
stos
add
add
stc
push
dec
clc
scas
sub
add
mov
popa
jne
mov
mov
or
jmp
icebp
pop
xor
adc
adc
ins
sbb
sub
mov
pop
aam
and
leave
or
adc
sub
jl
(bad)
jnp
cmp
sbb
push
add
push
fwait
sahf
cmp
dec
mov
inc
or
xor
inc
enter
mov
sbb
(bad)
add
add
inc
cmp
jl
jmp
or
push
mov
cld
bound
mov
lods
cmc
adc
push
cmp
jg
pusha
inc
int
leave
inc
adc
jp
or
sub
test
inc
inc
stos
push
sub
push
mov
adc
sub
hlt
sub
pop
jle
inc
inc
jne
push
daa
popa
mov
dec
sbb
add
imul
(bad)
sbb
(bad)
pop
lea
les
mov
or
sar
xchg
add
ss
inc
xor
cwde
push
dec
imul
push
mov
retf
push
push
fs
mov
mov
push
jge
sti
jns
ins
or
push
xchg
add
or
jp
in
jae
pop
or
aas
ret
call
pop
and
adc
inc
pop
rol
add
pusha
cli
adc
fucom
or
lods
dec
inc
xor
push
xchg
in
sub
pop
adc
xor
jecxz
mov
iret
shl
pop
mov
cmps
adc
mov
jmp
fld
hlt
sbb
and
bound
cld
push
push
aas
or
adc
push
and
and
and
dec
mov
cli
push
nop
imul
mov
(bad)
in
jecxz
sbb
jge
sub
ss
push
sub
push
lods
inc
icebp
icebp
jle
fild
(bad)
sahf
out
stc
sbb
or
rcr
js
push
sub
mov
icebp
into
les
je
cli
adc
and
and
sbb
retf
sub
lea
enter
daa
and
jbe
adc
cdq
adc
mov
mov
push
in
jne
sub
jl
sub
dec
jmp
add
je
adc
xchg
das
mov
sub
or
push
dec
xor
or
or
xchg
xor
adc
add
mov
push
dec
retf
push
mov
mov
inc
jb
push
enter
and
addr16
pop
xor
xor
jb
adc
inc
sahf
sub
jle
ins
push
dec
fmul
push
pop
enter
push
call
stos
adc
mov
or
(bad)
sub
or
cmp
sar
sbb
idiv
rcl
jg
fmul
adc
push
repz
mov
or
add
and
jle
and
mov
out
sbb
adc
imul
jmp
test
mov
jl
pop
imul
pop
lods
mov
retf
fs
push
cmp
push
pop
lock
adc
pop
clc
nop
inc
push
dec
inc
into
push
cmc
add
add
retf
or
or
outs
cmp
or
lods
ret
sub
cs
push
add
movs
cmp
rol
or
push
push
pushf
rcr
adc
lock
pop
push
and
mov
ret
test
repnz
adc
cs
xor
hlt
jbe
loopne
pop
add
push
iret
cmp
cli
icebp
cmps
add
pop
mov
push
dec
pop
lock
push
push
in
push
or
inc
gs
ins
sub
call
mov
into
and
push
mov
inc
add
push
sbb
sti
call
and
push
nop
or
fnop
pop
loop
lahf
adc
sub
or
add
sbb
xor
loope
push
jno
mov
xchg
ds
pop
mov
imul
push
jg
cmpxchg
clc
add
mov
push
push
push
test
fcom
push
push
jae
and
shl
adc
jns
adc
add
or
je
or
and
jne
out
dec
loopne
cmps
and
jg
mov
movs
sub
cmp
fild
inc
mov
pusha
sbb
pop
push
rol
add
pop
shl
xor
inc
es
add
mov
pop
add
cli
adc
push
dec
pop
sbb
shr
scas
xchg
add
mov
xchg
rcr
sbb
into
repnz
mov
js
dec
lds
or
adc
adc
or
fs
ret
fild
sub
imul
pop
stos
jge
inc
adc
call
loope
mov
sub
addr16
les
sbb
push
add
jp
jle
add
add
inc
mov
nop
mul
inc
inc
inc
mov
test
out
and
aad
jl
add
loopne
adc
push
push
cwde
sub
sbb
jo
push
les
ret
test
jbe
mov
inc
sub
ret
pop
jo
dec
or
(bad)
mov
cmp
push
adc
fild
sub
and
add
add
test
inc
mov
cmp
mov
adc
ret
add
dec
or
add
scas
add
rcl
adc
jge
or
or
mov
das
cmp
or
add
sub
bound
sub
in
add
add
xchg
int
fild
inc
pop
mov
xor
xchg
lds
sbb
jl
or
gs
add
push
clc
dec
push
les
mov
out
mov
push
xchg
popa
mov
dec
mov
or
cmp
popf
jns
pop
cmp
aam
xchg
adc
jmp
and
mov
mov
push
add
mov
and
mov
inc
(bad)
and
pop
mov
shr
xor
mov
sub
iret
or
jg
ret
add
xchg
test
in
and
mov
pop
cmp
jns
aad
mov
cmovno
sbb
push
jmp
xchg
xor
int
push
and
js
int3
dec
add
mov
clc
movzx
jmp
dec
aaa
add
idiv
js
and
ret
rol
jmp
fdivr
xchg
inc
dec
pop
inc
xchg
push
xor
sbb
adc
add
dec
repz
retf
fdivr
repz
mov
sub
push
loope
fbld
add
cmp
mov
cmp
adc
push
scas
pusha
push
adc
popf
push
push
sbb
push
and
jge
dec
xchg
mov
nop
popf
or
ss
(bad)
mov
push
pop
enter
cwde
outs
add
mov
(bad)
xchg
addr16
cmp
jne
mov
jmp
push
je
add
cs
add
arpl
jle
and
das
and
aad
push
jo
das
sti
ret
add
inc
push
sub
rol
xor
sub
xchg
xchg
mov
cmp
or
mov
sbb
xchg
sbb
dec
and
loopne
mov
stos
mov
add
int
adc
inc
pcmpeqw
daa
lods
(bad)
outs
jle
movs
add
icebp
fs
fisttp
fldenv
mov
addr16
sub
dec
jl
mov
sbb
push
add
nop
mov
mov
sahf
popa
sub
add
ror
push
jp
dec
pop
or
(bad)
jge
stos
mov
jnp
js
jl
or
test
ret
dec
test
std
loop
addr16
jge
mov
dec
or
(bad)
mov
(bad)
cmp
push
cmps
pop
dec
sub
push
dec
jo
or
ror
mov
mov
pop
jmp
dec
jo
mov
and
jno
adc
retf
add
or
push
nop
xchg
(bad)
jbe
(bad)
push
rol
or
cmp
jp
inc
loope
outs
jo
sti
rcl
jle
push
dec
push
pop
jmp
add
mov
call
jo
adc
xchg
loopne
cmc
mov
dec
fcmovnb
mov
jno
hlt
adc
dec
ins
fidivr
lods
cmp
jne
jmp
add
sub
loope
arpl
push
and
std
push
mov
jmp
add
inc
inc
push
sub
cmp
and
mov
int3
adc
clc
sbb
dec
xor
pop
jmp
rcr
ds
mov
test
ret
cs
dec
mov
scas
jmp
or
pop
ret
sti
out
pusha
or
inc
pusha
dec
call
mov
cwde
add
lods
cmp
rcr
jecxz
ds
aam
jmp
pop
xchg
pop
nop
sub
js
add
adc
in
ficomp
mov
popf
cmp
pop
xchg
push
xchg
pop
adc
or
push
and
xchg
jmp
in
cmp
dec
xchg
pop
fdiv
in
xor
(bad)
adc
or
dec
add
fdivr
inc
test
and
cmovs
push
test
push
xor
push
mov
in
sbb
adc
mov
jmp
ss
test
mov
loopne
mov
out
neg
mov
(bad)
cs
push
pop
call
nop
add
test
or
pop
push
scas
mov
sbb
add
pop
mov
loope
mov
pushf
imul
mov
es
aam
je
pop
and
scas
call
or
cmp
daa
mov
in
mov
cmp
imul
inc
inc
jmp
ror
dec
pop
outs
mov
mov
ds
mov
ins
push
inc
clc
mov
mov
loopne
sar
and
pop
inc
adc
mov
mov
jmp
push
jne
mov
inc
movs
inc
mov
jnp
(bad)
jne
cmp
(bad)
imul
xor
aam
sub
add
nop
jp
mov
pop
(bad)
outs
sub
mov
jmp
mov
xor
adc
mov
daa
or
xor
(bad)
push
push
daa
add
mov
cmp
scas
icebp
cwde
push
inc
add
pop
sar
and
shr
sar
cmp
(bad)
repz
sub
adc
in
sub
jb
push
mov
push
sub
and
scas
pop
outs
jbe
retf
nop
pop
add
pop
retf
out
push
ins
and
retf
jb
mov
add
add
(bad)
and
cmps
dec
adc
jmp
mov
shr
aas
adc
sar
mov
in
pop
mov
lock
sub
sbb
push
movs
or
shr
pop
push
cmps
push
ss
adc
add
push
sbb
loop
jb
jns
outs
mov
push
or
add
aas
sbb
push
(bad)
xor
mov
mov
and
movs
inc
xchg
xlat
mov
cdq
ins
push
imul
mov
or
or
cmp
ror
outs
inc
(bad)
mov
or
mov
shr
pop
xor
lahf
inc
mov
popa
push
add
jns
inc
es
(bad)
pop
or
adc
mov
sahf
push
adc
inc
or
dec
gs
push
add
inc
dec
movs
xor
adc
add
mov
mov
test
push
mov
ins
sub
push
dec
add
hlt
push
inc
inc
push
lods
dec
and
retf
lea
sub
(bad)
cmp
sub
mov
or
pop
xchg
mov
add
or
jle
mov
sbb
fisttp
xlat
rcl
xchg
xor
ss
mov
loopne
ret
mov
pop
jo
popa
sub
and
mov
xchg
je
mov
cmp
shr
sbb
cmp
xor
xor
in
gs
push
rol
add
fisub
scas
add
cmp
cmp
pop
(bad)
ss
pop
dec
jae
sub
push
lahf
mov
je
push
int
push
pop
add
sub
xor
mov
cmps
sbb
jne
loopne
jno
or
int
sbb
pop
add
fwait
out
stos
arpl
jne
push
cmc
jmp
dec
jne
sahf
xchg
xor
aam
dec
jle
sub
test
or
dec
dec
cmp
inc
cmc
or
fmul
add
jge
inc
push
adc
fidiv
es
and
lds
or
mov
and
dec
aas
fisttp
xor
int
aad
or
push
pop
and
sub
rol
inc
out
pop
mov
xchg
lds
lahf
pop
add
imul
or
fisttp
push
lahf
shl
ins
shl
inc
mov
xchg
test
std
sbb
and
add
jne
retf
loopne
xchg
jns
js
(bad)
dec
arpl
sbb
and
call
dec
mov
push
cmp
movs
popa
ss
int
nop
(bad)
mov
loope
fwait
mov
or
(bad)
arpl
pop
dec
nop
out
(bad)
cmp
cmp
jl
pop
adc
enter
clc
aam
sbb
jo
adc
not
lock
loope
pop
xor
sub
or
add
xor
mov
les
xor
ins
sub
jne
dec
jmp
sbb
cmp
xor
clc
mov
xchg
lods
fsub
nop
jns
test
push
dec
ret
or
(bad)
fistp
adc
mov
shr
fiadd
test
add
jmp
adc
sub
adc
out
add
mov
dec
lds
or
repnz
ins
test
inc
and
xchg
cmovb
sub
adc
mov
inc
and
add
cs
pop
aaa
or
mov
pop
out
lods
add
outs
push
xor
adc
push
daa
pusha
rcr
leave
or
or
aam
inc
fiadd
and
and
fwait
int3
cmp
cmp
inc
inc
cmp
dec
xchg
test
xor
cs
mov
jmp
pop
loop
and
fcom
cmc
fwait
adc
pop
sbb
(bad)
fmul
repz
lock
add
fimul
mov
adc
push
(bad)
xor
xchg
int3
xor
or
adc
inc
ret
add
dec
sbb
je
inc
aaa
mov
mov
push
ins
push
add
push
add
call
mov
mov
and
cmp
push
inc
popa
sub
mov
sub
inc
aas
xchg
sbb
inc
push
push
aas
dec
ror
pop
dec
pop
cld
mov
test
ja
add
mov
mov
mov
mov
and
inc
push
mov
pop
pop
push
xor
cmp
je
xor
inc
sbb
inc
(bad)
add
pop
pop
and
sub
or
pop
shl
movs
lahf
sbb
iret
sbb
add
dec
mov
repz
jp
pop
bound
inc
cmp
add
add
xchg
or
pop
add
add
sbb
fs
pop
mov
mov
mov
cld
mov
dec
and
mov
cmp
sbb
pop
adc
ss
clc
aam
jmp
push
sub
movs
lods
sbb
(bad)
in
push
sub
inc
retf
sub
mov
ss
fcmovne
mov
into
jb
outs
xor
dec
dec
mov
push
mov
(bad)
jnp
mov
daa
mov
rcl
sub
lahf
lea
and
add
mov
push
dec
imul
(bad)
and
ja
add
dec
jne
inc
push
nop
data16
loope
inc
push
mov
mov
pop
sbb
pop
adc
xchg
js
shrd
(bad)
push
jmp
jg
adc
xor
mov
add
add
(bad)
hlt
nop
or
int3
sbb
push
mov
push
lods
movs
jmp
dec
inc
test
pushf
lahf
push
and
and
sahf
adc
sbb
xor
outs
loop
inc
retf
pop
inc
fs
pop
push
jnp
push
cmp
inc
mov
je
sar
push
aam
mov
cmps
lock
sub
push
retf
test
xor
(bad)
jmp
or
or
fistp
loope
inc
inc
pop
aaa
dec
or
push
dec
js
pop
shl
jb
sbb
sar
pop
movs
inc
ret
pop
sbb
push
gs
dec
or
jecxz
test
movs
test
cmp
mov
(bad)
lock
dec
fnsave
ja
stos
add
sub
and
sub
jae
dec
sub
ret
sbb
add
xchg
sbb
jne
cmp
inc
scas
cmovg
push
adc
inc
xchg
sbb
xchg
inc
sub
aaa
mov
stos
mov
dec
(bad)
dec
mov
xor
dec
adc
data16
(bad)
(bad)
es
pop
or
sub
push
(bad)
repz
push
jns
mov
ja
dec
xchg
pop
jnp
xor
ret
ret
push
call
add
nop
rep
das
push
add
or
inc
leave
sub
scas
mov
inc
test
push
pop
cmc
mov
pushf
loope
jp
inc
les
ret
les
cmp
fstp
xchg
nop
jns
sbb
xchg
adc
lods
inc
je
jl
test
mov
adc
cmps
pop
scas
scas
jno
xchg
test
and
mov
push
dec
cmp
add
fdivr
loop
adc
dec
stos
ss
push
jo
jno
push
call
scas
add
cli
or
jns
jne
les
jge
popf
rcpps
jl
pop
pop
mov
loopne
push
adc
jnp
js
lods
mov
aad
push
scas
jle
repz
xchg
or
pusha
in
pop
or
in
loope
cdq
iret
repz
retf
test
imul
lahf
jne
sub
mov
add
add
clc
xor
test
xchg
push
cmp
cmps
call
dec
xlat
mov
ret
outs
mov
cld
jmp
(bad)
ficom
popw
push
mov
mov
shl
shr
je
xchg
fdivr
cmc
adc
(bad)
xor
arpl
je
push
stc
sbb
out
push
jmp
int3
in
(bad)
cmp
sbb
mov
mov
push
push
jmp
push
sub
pop
add
mov
div
push
mov
outs
add
adc
nop
adc
push
adc
mov
add
add
push
push
gs
or
dec
add
xchg
ror
mov
or
pop
iret
sub
jno
mov
and
mov
or
mov
fwait
and
sbb
push
jp
sbb
add
add
mov
sub
push
push
lea
sbb
mov
push
push
push
ret
ins
gs
outs
shl
fld
fadd
dec
jae
push
sar
jbe
scas
xchg
out
push
into
inc
test
scas
or
pop
sbb
lock
or
(bad)
pop
add
xchg
sub
jecxz
push
jp
pop
iret
and
add
inc
mov
sahf
mov
cli
in
xchg
or
adc
scas
ja
ficomp
sbb
mov
mov
and
into
cmps
jns
mov
push
mov
and
call
push
retf
adc
rol
cmp
idiv
dec
pop
push
cmp
fdivr
mov
icebp
loopne
or
or
push
push
push
jnp
xor
add
adc
test
sahf
jl
ja
push
and
jmp
outs
lock
inc
add
inc
daa
xor
into
into
ret
cmp
jge
cmc
test
jl
xchg
inc
push
pop
mov
pop
push
push
dec
sbb
xor
ja
cld
call
mov
int
clc
dec
cmp
mov
cmp
push
icebp
repz
iret
(bad)
sti
test
ret
sub
cmp
fisttp
mov
sub
and
or
cmp
fnstcw
jle
xor
ja
stos
xor
outs
pushf
ss
sub
clc
aad
inc
sub
sbb
shr
pop
push
(bad)
push
shr
fsubr
pop
rol
push
ror
adc
mov
jmp
jmp
mov
jb
or
icebp
adc
lahf
add
pop
adc
jb
and
es
cwde
jnp
fist
fild
jge
xchg
lea
std
out
std
or
push
in
pushf
push
lods
movsx
and
xchg
dec
sbb
fidiv
or
call
push
(bad)
jmp
mov
lds
les
push
mov
push
xchg
or
add
scas
ss
in
and
jmp
in
jmp
sbb
loopne
movs
xlat
lods
xchg
rcr
mov
mov
aaa
cmp
push
fidiv
add
jg
or
shl
sub
loopne
lea
push
jmp
sub
ins
add
or
push
inc
(bad)
or
inc
loope
adc
push
aaa
sub
inc
inc
mov
sbb
imul
test
inc
outs
call
cmp
xor
outs
gs
fs
ja
mov
jne
test
sub
iret
ret
xchg
sbb
test
xor
xchg
dec
push
cmp
stos
push
cmps
xchg
add
jmp
mov
or
imul
in
ffreep
call
and
adc
jge
ins
xor
inc
pusha
dec
xchg
arpl
sbb
push
push
call
punpcklbw
mov
fs
push
lods
jp
mov
adc
or
pop
je
adc
xchg
rcr
cmc
or
push
div
loope
stos
push
or
and
cmp
mov
cmovbe
(bad)
jb
xchg
je
xchg
fcmovnb
cmc
jmp
jp
or
sbb
hlt
inc
pusha
mov
popa
cwde
jo
cmp
xlat
(bad)
cmp
ins
ss
add
sub
xor
inc
(bad)
aas
and
pop
pop
xchg
dec
add
mov
pop
lock
jp
daa
pop
add
sbb
in
dec
jmp
leave
xor
movs
cmps
fcom
push
movs
sub
ret
jecxz
and
fsubr
dec
(bad)
test
shl
das
mov
fcom
pusha
mov
int3
xchg
add
pop
add
add
sbb
mov
push
popa
mov
test
push
loope
pop
pop
js
dec
push
push
pop
aam
les
mov
cmps
xor
and
inc
jmp
loope
sub
call
(bad)
jne
jmp
loop
sub
cmps
rcr
pop
add
(bad)
hlt
aam
push
dec
(bad)
xor
xchg
js
sub
cld
mov
inc
push
push
dec
and
daa
xchg
cmp
and
cmp
push
movs
xor
inc
xor
jb
jae
test
cmp
jb
iret
jae
cmp
push
enter
adc
jns
sbb
sbb
cmps
sbb
outs
mov
push
cmps
pushw
fdiv
xchg
dec
xchg
mov
dec
shl
and
dec
push
dec
popa
adc
jmp
cmp
and
and
cmp
loopne
pop
pop
add
push
mov
or
mov
pop
sub
cmp
mov
dec
cmp
in
movs
pusha
sub
inc
fbld
cmp
sub
cmp
inc
ret
add
sub
mov
add
iret
jo
adc
mov
jmp
push
je
and
fwait
(bad)
jno
push
push
inc
sub
ret
stc
inc
mov
movs
out
add
je
test
mov
jecxz
add
aas
sbb
mov
mov
jo
retf
lods
mov
(bad)
fisttp
add
call
push
push
add
xchg
pop
icebp
imul
sub
dec
dec
and
or
repz
mov
fnstcw
adc
mov
pop
cmp
nop
pop
(bad)
dec
mov
dec
mov
cmp
pop
les
add
jmp
retf
inc
push
lods
movs
add
jmp
push
xchg
arpl
or
ins
je
add
dec
push
mov
or
movs
jecxz
pop
push
je
push
add
sbb
xor
sub
mov
sub
dec
xor
and
xlat
hlt
sub
clc
push
or
sub
pop
or
and
add
outs
adc
dec
xlat
push
or
pop
xchg
jne
sbb
mov
push
and
mov
or
push
neg
or
or
mov
cmps
cmp
push
gs
push
lea
or
sub
adc
test
xchg
pop
pop
dec
sub
add
sbb
sbb
and
add
xor
sub
fs
push
outs
or
pop
adc
mov
add
sbb
arpl
or
popa
cmp
into
or
ja
pop
push
call
shl
frstor
jb
add
cmp
mov
lea
push
pop
or
sbb
cmp
cs
adc
jno
(bad)
div
dec
xor
push
popa
jne
jae
hlt
and
pop
enter
dec
add
jo
je
xchg
jo
xor
pop
pop
jecxz
push
mov
loope
or
mov
adc
ss
mov
sahf
xor
pusha
jne
pop
jl
enter
and
out
sub
pop
inc
push
shl
push
jmp
sub
pop
xchg
inc
dec
sub
cmp
dec
sub
jns
push
sahf
dec
inc
push
push
dec
cmp
sub
iret
movs
imul
outs
and
mov
add
and
pop
sub
repnz
lahf
xchg
cmp
add
lea
push
jae
mov
dec
idiv
stc
cmp
xlat
push
sbb
add
inc
or
mov
or
adc
inc
adc
pop
sub
fild
rcr
loop
les
test
lock
xor
sbb
test
dec
cmc
aad
fmul
add
sbb
dec
fdivrp
xor
jg
sbb
loopne
adc
jecxz
daa
cmp
(bad)
jmp
sub
sbb
test
(bad)
sub
ja
dec
mov
or
mov
mov
mov
ss
sbb
adc
pop
mov
imul
(bad)
mov
push
sub
push
xchg
jne
pop
jmp
aaa
push
pop
mov
pop
or
inc
push
test
dec
repz
iret
in
aad
xchg
sbb
ret
cmps
fnstcw
ds
sub
dec
pop
mov
fmul
add
mov
cmps
and
dec
add
rcl
mov
or
push
and
mov
test
mov
mov
push
add
sbb
fist
enter
xor
lea
dec
sar
les
mov
xor
jns
gs
add
je
shr
xchg
or
imul
add
arpl
push
pop
add
or
jo
xchg
push
(bad)
push
shl
call
lea
xchg
dec
jle
add
inc
add
add
rol
enter
lods
jns
and
and
add
cmc
fs
mov
dec
lea
xchg
sbb
ss
mov
test
ret
(bad)
adc
mov
fs
inc
jmp
std
and
push
mov
mov
jmp
dec
pop
call
mov
nop
les
inc
and
inc
jne
sbb
push
repnz
sub
xchg
adc
ror
push
inc
mov
jg
cmp
jl
mov
xor
push
fcom
int
mov
adc
inc
inc
js
cmp
push
pop
xchg
popa
icebp
push
repnz
pop
ds
cld
dec
int3
xchg
pop
mov
mov
pop
pop
int
shr
imul
mov
movs
push
aam
xor
sbb
icebp
add
in
fsub
jp
xlat
add
push
or
mov
inc
pop
sub
jmp
inc
and
or
ret
pop
or
aam
(bad)
jne
rol
pop
mov
loopne
push
mov
adc
push
stc
mov
add
xor
pusha
rol
add
adc
push
scas
or
jno
push
add
imul
int3
test
inc
sub
add
push
rcr
ins
and
adc
add
popf
mov
les
inc
in
out
ficomp
and
sub
das
ss
inc
or
shl
dec
movs
xchg
fs
fcom
and
cmp
push
adc
mov
push
push
xchg
imul
js
add
scas
aam
add
or
push
mov
xchg
fcomp
inc
pop
arpl
aaa
push
lock
add
add
pop
fwait
mov
add
fcomp
mov
xchg
(bad)
bound
xor
push
sbb
stos
(bad)
pop
dec
arpl
inc
cmp
add
or
int
dec
call
push
adc
aam
dec
pop
or
fisttp
mov
sbb
aaa
adc
mov
jns
inc
lea
loopne
ret
push
adc
push
push
int3
lods
je
rcr
lea
push
mov
retf
test
xchg
outs
dec
jae
aas
xchg
les
pusha
pop
or
or
je
retf
adc
dec
lods
adc
push
dec
test
inc
outs
je
mov
mov
jmp
nop
sbb
jmp
scas
adc
inc
jmp
cmp
popf
and
mov
jnp
hlt
mov
jbe
cwde
and
or
and
jg
addr16
jmp
pusha
push
jbe
inc
sbb
cmp
mov
jnp
add
(bad)
or
and
adc
push
adc
mov
(bad)
jno
mov
test
cmp
inc
in
call
mov
outs
test
inc
pop
sti
test
mov
jbe
or
add
adc
sbb
vcvtps2pd
sbb
jbe
ja
mov
pop
inc
int
in
xor
push
mov
add
push
in
add
gs
or
push
or
inc
sahf
push
out
rcl
loopne
or
jb
cmp
stc
ja
pop
retf
fwait
xor
inc
sahf
jnp
inc
push
push
sbb
pushf
cmp
jb
jge
add
(bad)
ror
rcl
sub
mov
sar
push
adc
xlat
addr16
push
push
mov
pop
xlat
push
mov
jg
or
sub
rol
xchg
cmp
rcl
add
push
jae
add
loopne
addr16
push
sbb
mov
retf
test
inc
inc
call
push
das
iret
imul
push
sbb
add
in
mov
aas
imul
pop
jmp
jo
sub
inc
xchg
loopne
pop
je
push
add
ror
pop
shr
add
test
movs
inc
popf
add
xor
sub
loop
sbb
fnsave
adc
pusha
pop
xor
or
mov
cmps
scas
sbb
mov
sbb
js
xor
rol
test
mov
jmp
jbe
loope
pusha
and
(bad)
ret
xchg
xor
hlt
rcr
add
and
adc
pop
ret
fild
arpl
test
xor
(bad)
shl
loopne
fwait
lea
push
or
sbb
mov
(bad)
sub
and
xchg
inc
pop
and
xchg
retf
pop
push
push
loop
mov
add
or
jb
or
adc
or
daa
mov
dec
mov
mov
repnz
mov
mov
in
xor
push
es
xchg
jg
cmps
icebp
mov
add
test
sub
add
and
mov
add
inc
dec
or
pushf
fld
and
push
ret
add
inc
adc
add
cmp
xor
dec
adc
dec
inc
shr
mov
rcl
mov
les
adc
add
lea
pop
pop
das
mov
or
adc
and
cmp
call
xchg
inc
fdivp
inc
pop
ret
imul
mov
fwait
and
push
add
pop
fsubr
outs
je
xor
xor
mov
jb
add
lods
loop
add
and
or
add
xor
sub
jno
in
mov
aam
ja
push
push
dec
ret
add
ja
jmp
or
mov
enter
sti
add
ror
inc
push
nop
fsub
hlt
or
pop
shr
jae
sahf
out
push
mov
cmp
repz
aam
xor
es
dec
adc
pop
push
add
sbb
adc
sub
std
or
xchg
int3
add
inc
call
ja
mov
push
int3
xchg
inc
ins
sub
pop
jne
xchg
mov
push
sbb
into
push
test
movs
xchg
loop
and
shl
xor
sbb
dec
bound
dec
bound
or
push
(bad)
xchg
sti
scas
int3
sub
inc
test
les
test
and
cmp
ins
push
and
jb
ficomp
pop
sahf
sbb
sub
sub
xor
fwait
(bad)
gs
sti
push
xchg
push
imul
or
dec
sbb
pop
dec
jbe
cmps
push
pop
rcr
add
or
inc
mov
or
mov
push
mov
jg
pop
push
dec
test
cld
mov
inc
xor
add
xchg
int
pop
or
inc
ficomp
mul
(bad)
gs
pop
add
pop
and
or
dec
and
cmp
push
ret
adc
gs
ja
ror
in
or
pop
and
sbb
addr16
mov
imul
jmp
xor
inc
loop
jmp
add
push
add
test
pusha
aad
push
pop
and
xchg
ret
sub
adc
sahf
es
jp
inc
pop
pop
rcr
or
popf
jl
loop
jp
xchg
test
add
adc
mov
inc
hlt
xchg
lods
jo
mov
dec
pop
push
and
sub
mov
sub
ja
sbb
add
imul
fbld
jne
push
mov
sub
mov
lods
jne
push
aaa
jmp
push
xchg
cmps
inc
pusha
loope
adc
cwde
add
push
not
push
sub
and
or
add
xlat
mov
addr16
and
cmp
add
cmp
mov
icebp
cmp
sbb
and
dec
push
mov
push
cmps
ret
xor
dec
adc
stc
or
iret
push
add
das
or
push
sbb
jp
add
lea
adc
dec
shl
sub
test
and
push
movs
sub
add
shl
jno
add
cmp
push
adc
dec
test
and
or
jns
jp
mov
ss
and
sbb
jne
fstp
xor
push
sahf
inc
adc
inc
or
adc
sbb
pop
mov
(bad)
cs
jns
adc
mov
mov
adc
mov
xchg
and
bnd
and
inc
inc
add
data16
wrmsr
loop
rol
pop
mov
stos
push
add
ins
ss
mov
push
popa
mov
adc
retf
jle
and
int3
movs
inc
mov
sub
cld
sbb
push
aam
mov
push
mov
jecxz
arpl
scas
repz
ret
jmp
cmp
dec
lock
add
sub
sbb
push
movs
test
lds
and
xchg
add
adc
jno
cmp
xor
add
adc
inc
jmp
cmp
loopne
fisttp
hlt
push
mov
jno
or
add
pusha
mov
jb
fcomp
pop
xchg
pop
(bad)
mov
jmp
push
jmp
xor
mov
repz
in
outs
push
je
inc
push
and
test
sbb
or
outs
and
adc
stos
mov
movs
or
gs
push
or
xor
dec
(bad)
xchg
dec
ins
test
(bad)
icebp
xor
add
xchg
cmp
or
xor
sahf
rcr
jbe
inc
sub
push
sub
jne
scas
push
fist
xor
adc
shl
add
pop
pop
inc
xor
pop
and
push
or
push
je
push
shr
mov
add
jbe
push
enter
or
sar
cwde
cmp
das
ds
ja
mov
xor
add
call
add
es
in
xchg
or
dec
inc
xchg
jo
and
fld
sbb
inc
loope
or
cmp
aam
retf
push
and
mov
dec
and
sbb
xor
or
out
xor
sbb
mov
or
ins
add
mov
adc
add
test
movs
add
ins
outs
sub
shl
mov
fs
push
cmps
sbb
stc
adc
or
in
sbb
jp
mov
and
or
or
ror
enter
rol
or
out
dec
ins
add
(bad)
je
es
push
out
ins
clc
jb
add
rcl
dec
call
adc
add
shl
sub
dec
popa
push
bound
jp
shl
adc
sbb
jg
adc
bound
xor
arpl
jle
add
cs
sbb
fcomp
mov
cmp
in
aaa
push
ret
sbb
pop
movs
adc
lock
add
and
std
jbe
movs
mov
or
mov
jmp
lods
cmp
jno
sbb
jo
and
sub
add
fmul
or
xor
mov
sbb
or
and
aas
mov
cmp
add
sbb
push
sbb
push
std
pop
xor
and
inc
lods
and
aad
adc
popa
xor
and
call
scas
push
xchg
stos
(bad)
ret
add
or
add
mov
outs
movs
cdq
les
mov
(bad)
popf
and
mov
sahf
movs
repnz
cmp
fs
jge
call
dec
mov
or
adc
adc
inc
(bad)
jne
out
jecxz
dec
jo
je
hlt
dec
cmc
addr16
fnstcw
or
push
pusha
push
push
ins
je
je
js
push
jl
or
lea
mov
rol
xchg
mov
mov
fidivr
sub
and
in
push
mov
push
fmulp
sbb
sbb
iret
in
cmp
jne
jnp
sbb
sbb
mov
mov
jns
fmulp
sub
xor
fcom
loopne
add
outs
movs
mov
in
dec
in
lock
lahf
xchg
sub
(bad)
xchg
pushf
add
lea
adc
std
cmp
sbb
and
adc
xor
pop
sahf
inc
gs
xchg
pop
sbb
retf
add
cmp
xor
leave
cmp
push
pushf
call
add
test
movs
sbb
dec
jo
sbb
sbb
mov
aad
cs
add
add
cwde
push
sub
mov
add
push
or
mov
out
mov
dec
sub
mov
and
xor
mov
hlt
mov
jns
cdq
jge
inc
and
adc
cmp
outs
in
pop
sub
and
cld
mov
dec
ins
pushf
out
lods
or
sub
mov
test
xchg
iret
enter
nop
or
in
mov
clc
enter
jns
pop
adc
mov
mov
cwde
shr
inc
int3
fdiv
ret
js
xor
sahf
and
add
cmc
add
out
sub
push
dec
add
inc
adc
jo
imul
and
lea
and
adc
es
cmp
mov
dec
mov
dec
and
xchg
(bad)
sbb
pop
jle
inc
mov
dec
jb
mov
jnp
cmp
push
or
mov
add
add
xor
sub
popa
movzx
xchg
cmp
add
jl
dec
in
add
mov
inc
or
outs
ror
cs
fld
mov
add
mov
push
adc
and
fcomp
or
and
dec
jno
je
fimul
fnstenv
je
mov
mov
inc
retf
cmp
popa
mov
adc
mov
sbb
jp
test
sbb
and
imul
fld
test
xlat
out
mov
std
mov
sbb
in
inc
sbb
xor
or
jbe
jae
mov
js
pop
and
in
add
test
add
adc
lds
test
adc
xor
shl
rol
inc
enter
sti
xchg
add
aam
test
jge
cmc
pop
leave
pop
test
inc
inc
call
and
and
push
ret
add
or
push
(bad)
pusha
or
loopne
add
pop
push
push
loopne
cli
and
jmp
out
jl
or
or
pop
xor
cdq
je
dec
adc
aaa
inc
jbe
aas
imul
cdq
push
cmp
cs
jp
add
dec
mov
jb
or
dec
fbld
mov
jno
pop
xchg
cmp
(bad)
ins
push
fld
(bad)
pop
or
xchg
add
ds
and
cmp
dec
xor
mov
jmp
fstp
mov
add
push
jmp
cmp
adc
pop
push
sub
fcom
pop
aaa
js
test
pop
xchg
aam
fs
xor
adc
or
cmp
cmc
cmp
add
xchg
std
cli
sar
sub
or
lock
adc
push
call
push
aaa
push
in
mov
mov
stc
jbe
les
xor
fadd
mov
inc
cmp
push
adc
sub
test
add
xor
jge
mov
shl
sub
mov
jmp
mov
mov
and
lea
repz
repnz
std
xor
(bad)
aad
inc
mov
add
or
mov
mov
jmp
mov
add
test
push
jmp
mov
xchg
dec
adc
rol
push
push
push
or
(bad)
pop
clc
and
add
nop
addr16
fadd
pop
jmp
int
rol
mov
clc
dec
les
loopne
xchg
or
add
sahf
retf
mov
adc
adc
or
xor
inc
add
push
in
test
push
lods
add
or
pop
or
enter
dec
jl
adc
ror
ss
pop
push
pop
aas
jmp
(bad)
je
ja
or
fst
sub
add
mov
enter
dec
popa
or
stc
add
rcl
or
inc
movs
push
sbb
int
lods
jno
scas
movs
vpmaxsw
mov
fstp
cdq
repnz
and
sbb
pop
js
or
repz
das
jnp
inc
pop
add
xchg
cs
add
sub
adc
sbb
mov
push
and
add
or
jge
adc
add
xchg
inc
and
or
lock
inc
push
loope
js
adc
add
test
xor
push
je
lea
mov
push
push
fstp
outs
outs
jo
aad
xor
and
add
inc
jmp
push
jae
pop
sub
lahf
(bad)
add
cmps
mov
cmp
and
shr
enter
js
xor
jg
iret
add
sbb
xchg
cmp
movs
test
(bad)
scas
or
adc
pop
push
(bad)
call
push
xchg
and
pop
pop
sbb
lea
loopne
inc
xchg
push
retf
dec
adc
xchg
xchg
sbb
ror
mov
push
and
add
cmp
jmp
push
add
push
adc
pop
or
add
adc
in
nop
xor
fisttp
call
add
or
test
mov
cmp
push
and
xchg
data16
clc
icebp
push
loop
push
fcomi
fs
repz
mov
add
add
jno
lods
mov
cli
inc
loop
xchg
rcl
movs
push
mov
lods
(bad)
outs
in
in
in
add
mov
sbb
sbb
xor
xor
cmp
cmp
inc
and
in
inc
test
in
in
dec
test
pushf
sbb
sbb
and
push
adc
ss
cmp
push
jg
add
in
repnz
shr
push
stc
dec
ins
out
sbb
cmp
or
or
push
test
jle
pusha
es
cmp
add
fnstcw
loopne
mov
dec
mov
or
das
and
xchg
add
or
jns
push
jne
(bad)
sub
lds
inc
cmps
dec
adc
pop
push
push
add
mov
adc
div
push
inc
mov
or
imul
jbe
xchg
enter
lock
icebp
cmps
add
adc
cdq
add
cmp
cmps
jb
shl
add
xchg
jbe
xor
jb
cld
and
outs
cmp
jnp
push
clc
or
dec
leave
add
xlat
mov
std
and
loope
jmp
(bad)
(bad)
jl
dec
push
inc
inc
jg
sbb
imul
inc
in
popf
outs
rcr
arpl
or
test
popa
dec
and
sahf
je
or
ins
gs
inc
dec
pop
push
adc
mov
mov
sar
push
iret
xchg
xlat
pop
jg
add
and
jns
mov
mov
ja
rcl
inc
xor
lds
add
inc
sar
sub
add
xor
addr16
xchg
mov
pusha
push
fstp
add
fiadd
mov
adc
push
rol
jb
sbb
imul
pop
bndstx
push
fisttp
mov
ss
inc
nop
inc
push
inc
pop
inc
push
pop
out
ret
icebp
push
cs
ret
mov
push
xor
xchg
(bad)
cmp
bound
jmp
cdq
mov
push
adc
cmc
xor
inc
jp
sbb
sub
jp
mov
das
xor
jmp
pop
sar
ret
adc
stc
cmps
adc
repz
js
fmul
xchg
test
mov
int3
push
and
xchg
outs
xchg
js
adc
inc
imul
cld
fcom
xor
fdivr
ss
xor
cli
and
pusha
or
or
or
mov
jp
dec
adc
inc
push
jo
dec
push
test
push
push
gs
cmp
pop
test
pop
bound
(bad)
not
push
or
or
adc
add
dec
mov
dec
or
jp
test
stos
loopne
jae
add
or
mov
inc
dec
cmps
lock
sub
pushf
inc
push
jmp
inc
push
pop
adc
fnstenv
bound
test
rcl
adc
sub
int3
sbb
sub
call
fpatan
and
sbb
and
mov
js
in
pop
mov
sbb
push
js
add
dec
push
lock
sar
adc
xor
dec
jnp
or
mov
or
xor
push
xchg
sub
cmp
cmc
and
je
scas
retf
mov
inc
mov
sub
fimul
add
add
mov
inc
jb
pop
add
xor
cmp
enter
les
lahf
add
scas
repz
mov
mov
mov
out
mov
cmc
mov
sbb
lds
sar
movs
push
(bad)
ret
loope
cmp
jne
scas
pop
fimul
rol
sti
adc
dec
add
add
or
xchg
ins
test
mov
dec
add
push
cmp
mov
test
add
fisub
fidivr
psrld
cmp
sti
and
test
cmp
sub
retf
in
fcom
in
mov
sti
cmp
test
pop
fistp
jmp
push
ins
fcmovnb
call
push
cmp
dec
aam
adc
mov
mov
in
stc
(bad)
jno
sub
and
add
cmp
les
add
push
ficom
sahf
retf
ins
sbb
sub
mov
inc
and
js
pop
ror
sahf
ins
jl
inc
push
push
jnp
and
repnz
jo
loopne
push
pusha
fsub
mov
into
ds
xchg
ins
or
sbb
jae
dec
rcr
sub
sbb
pop
xor
sub
cmp
stos
fst
les
dec
pop
push
lea
out
call
(bad)
call
add
cmp
in
js
xlat
hlt
or
out
lahf
and
push
push
cmp
sub
and
or
inc
adc
fldenv
cmp
shr
(bad)
ds
xor
dec
add
cwde
pop
sbb
cmp
sbb
mov
xchg
bound
int3
lds
mov
or
push
sub
add
sub
push
push
cmovno
jo
aaa
sbb
shl
sub
inc
inc
dec
scas
lds
mov
nop
call
cdq
dec
mov
mov
sbb
outs
es
fild
cmps
outs
mov
adc
(bad)
inc
mov
arpl
gs
test
leave
test
outs
sub
icebp
pusha
imul
movs
xor
push
es
fnstsw
and
retf
ret
cmp
push
add
pop
pop
jo
rcr
rol
popf
rol
aas
push
jge
(bad)
repnz
pop
dec
push
sahf
and
pop
push
pop
(bad)
mov
sbb
jmp
(bad)
ja
fadd
or
xor
and
inc
popf
fucomp
sahf
xor
xor
(bad)
jle
add
add
lods
xchg
sub
cmp
test
dec
sbb
mul
sbb
jl
arpl
or
push
cmp
inc
add
test
(bad)
and
call
arpl
mov
add
push
push
xor
or
sbb
adc
pop
scas
stc
and
dec
sahf
xor
push
cmp
nop
out
add
or
nop
sub
push
call
jecxz
shr
sbb
push
imul
inc
test
pop
or
or
or
mov
sub
jae
sub
pop
loopne
add
push
dec
sbb
(bad)
xor
retf
adc
jbe
rep
loope
retf
xchg
movs
sbb
dec
mov
pusha
mov
call
sbb
out
pop
adc
das
or
push
fisttp
jp
cs
dec
xor
push
pop
xor
lea
sbb
mov
cmp
jns
or
je
xchg
mov
mov
mov
loop
push
jb
mov
je
jb
fwait
xor
daa
adc
loopne
or
push
adc
aam
jp
cs
lea
or
sbb
dec
or
test
test
adc
add
add
faddp
sub
inc
pop
ins
inc
dec
sbb
ret
sar
or
dec
and
xchg
sub
cmp
stos
push
wrmsr
push
fs
or
in
aam
cs
pop
jge
xchg
test
sbb
add
lods
(bad)
inc
test
add
das
jae
ds
leave
je
inc
test
outs
ja
push
cs
faddp
fldenv
dec
(bad)
dec
(bad)
fiadd
enter
mov
inc
cmp
(bad)
cmp
rcr
jl
je
inc
in
das
sbb
mov
cmp
neg
push
pop
(bad)
(bad)
inc
shl
pop
pop
dec
cdq
movs
cmps
or
lods
aaa
mov
lea
jb
push
jns
sbb
retf
jmp
jp
je
add
cs
pop
icebp
mov
mov
mov
or
or
(bad)
sbb
jle
push
mov
fsub
mov
ret
adc
add
lea
shr
cli
in
xchg
test
iret
hlt
mov
aad
loop
jge
sbb
or
and
or
sub
jg
push
sub
dec
jmp
not
les
push
push
pop
and
jl
rcr
sar
and
movs
pop
adc
(bad)
or
inc
add
or
pushf
inc
dec
ins
jg
arpl
ss
jp
or
(bad)
js
or
nop
sub
or
cli
and
mov
arpl
cmps
out
cmp
je
or
and
or
mov
add
jne
ss
std
lds
cmc
call
fild
or
sub
and
jb
sub
push
pop
push
xchg
jae
sub
icebp
not
push
repz
rcr
jge
dec
mov
jp
mov
or
rol
adc
pop
mov
mov
call
es
mov
call
pop
bound
mov
leave
dec
xor
dec
xor
jp
jg
xchg
je
bound
dec
and
pop
sbb
ins
push
inc
test
sbb
mov
mov
add
pop
push
in
rol
rcl
inc
push
fnstenv
and
xor
add
add
jge
in
xchg
mov
fbld
pusha
or
push
pop
add
adc
xchg
cmp
popa
loope
out
xchg
ins
sub
add
dec
xchg
jmp
mov
xchg
jle
jmp
jne
mov
push
cwde
xor
lahf
ficomp
rcr
or
xor
enter
(bad)
jnp
ficom
mov
add
push
stc
sub
or
push
call
push
cwde
add
ret
xor
out
cmp
sub
stc
adc
std
adc
mov
adc
loop
mov
mov
inc
cmp
dec
mov
movs
xchg
add
mov
push
pop
jo
xchg
xchg
push
push
inc
push
inc
jb
test
pushf
or
xchg
test
and
adc
sub
or
sbb
sub
adc
cmps
mov
push
lds
loope
dec
jns
and
popf
or
sub
pop
aad
add
data16
jno
add
aaa
ret
push
adc
fadd
and
xchg
push
sbb
movs
and
jmp
add
imul
jmp
and
repz
xor
inc
sbb
adc
push
lock
adc
mov
or
jmp
inc
push
or
xor
pop
add
or
imul
add
xor
scas
or
fadd
add
mov
pop
movs
mov
aaa
into
xchg
mov
and
movs
push
or
sub
sub
shr
gs
sbb
push
cdq
jmp
adc
cmps
pop
aaa
in
push
add
daa
xor
jne
sbb
sbb
stos
or
push
iret
pop
add
ret
test
imul
adc
fnclex
mov
inc
iret
cmp
sbb
jb
dec
add
push
and
mul
fdivr
(bad)
push
cmp
ss
and
xchg
push
sub
(bad)
mov
shr
and
push
xor
add
jl
mov
sub
add
scas
dec
add
push
jbe
push
dec
xor
mov
int
popa
popf
ja
addr16
es
ficomp
fld
push
and
or
xchg
or
add
or
fwait
mov
retf
and
jmp
leave
cmps
out
add
add
add
or
cld
or
cli
lds
arpl
call
daa
sbb
add
outs
jmp
aaa
gs
test
add
imul
pmulhw
sub
(bad)
sbb
adc
sub
popf
add
inc
xor
nop
add
jns
xor
ins
adc
inc
clc
ret
add
jp
mov
push
push
push
sbb
jge
out
adc
nop
inc
ret
ds
dec
pop
dec
and
ret
adc
pop
pushf
inc
dec
pusha
stos
dec
daa
adc
hlt
rcl
mov
adc
push
fld
ds
vmovupd
pop
sbb
js
daa
pop
push
xor
or
or
and
sbb
in
and
js
mov
shr
mov
repz
es
sub
in
jmp
jne
sbb
lea
mov
in
jbe
push
shl
dec
sub
sub
inc
into
jbe
lods
and
jl
adc
sbb
dec
dec
cmps
cmps
dec
dec
jno
add
sbb
popf
popf
lock
out
and
push
pop
xchg
sbb
push
push
jmp
or
dec
adc
sub
stos
adc
mov
push
sub
lea
xor
jns
jmp
xor
mov
loopne
mov
mov
retf
inc
call
jo
mov
sub
add
repnz
and
sbb
or
or
pop
adc
sub
into
xchg
push
xor
jle
pop
ins
mov
xchg
push
mov
or
push
dec
push
cmp
das
call
add
mov
push
cmp
sbb
das
push
jno
dec
hlt
cmp
nop
addr16
jecxz
leave
xchg
add
adc
or
in
and
lds
in
fwait
jecxz
xchg
in
mov
inc
(bad)
scas
loopne
dec
test
inc
jne
jae
or
inc
xchg
push
popf
movs
sbb
mov
shl
mov
sub
loopne
mov
mov
cmp
and
add
stc
jmp
ins
leave
sbb
es
stos
sbb
clc
sbb
xor
movs
add
lahf
ror
sbb
add
sub
push
add
rol
xor
and
adc
aaa
sbb
js
ret
aas
sub
cmps
je
dec
shr
dec
sbb
push
rcr
gs
push
sub
js
in
pushf
in
loop
jp
push
pop
push
xchg
push
or
inc
je
(bad)
sbb
adc
dec
(bad)
ror
lahf
jns
(bad)
add
jo
or
xlat
fucomip
push
outs
jmp
pop
push
daa
sahf
xchg
pop
xlat
lea
xor
test
lea
push
add
jl
xor
adc
sbb
aam
inc
pop
pop
leave
push
pusha
adc
sbb
rcl
es
dec
sbb
xor
push
push
add
outs
pop
call
daa
or
add
or
or
add
or
inc
mov
popa
or
dec
or
(bad)
mov
rol
loope
xchg
sahf
xor
inc
sub
pop
jne
jo
add
hlt
lods
jne
add
mov
adc
add
cmp
sbb
ins
movs
inc
jne
xchg
mov
xchg
mov
pop
push
and
or
inc
push
jmp
dec
xchg
adc
add
nop
jo
add
mov
mov
inc
ds
add
(bad)
jno
jecxz
aam
rol
clc
dec
push
inc
push
xchg
mov
add
dec
adc
dec
pop
test
sbb
add
dec
adc
push
or
imul
cdq
add
pop
ins
inc
loope
add
stos
add
xor
dec
add
push
push
inc
add
sti
adc
mov
push
adc
add
pop
xchg
add
pop
pushf
or
jp
cwde
sbb
push
xor
or
push
sub
xor
pop
test
push
mov
aad
pop
and
adc
(bad)
mov
sbb
mov
pushf
inc
rcl
movs
fwait
scas
dec
in
sbb
sbb
jbe
ins
fs
cs
adc
addr16
outs
retf
sbb
test
inc
out
nop
mov
adc
mov
lods
arpl
sti
aas
cmp
mov
fwait
test
adc
(bad)
sbb
mov
dec
xor
popa
dec
imul
add
inc
mov
add
push
call
adc
sbb
xor
bound
sub
adc
jb
jno
or
sbb
imul
mov
push
add
je
movs
and
lods
push
(bad)
test
ds
ret
cdq
add
dec
aaa
lds
lods
pop
ret
jae
xor
popa
or
divps
jmp
sbb
push
int
add
jne
sbb
jne
push
mov
xchg
fld
imul
inc
fcom
or
xchg
xor
ret
daa
mov
pushf
jne
mov
aas
jl
xchg
jmp
call
and
and
(bad)
mov
mov
xor
loope
aaa
enter
add
adc
nop
jno
sub
dec
mov
push
cmp
dec
ret
loope
dec
mov
jb
jmp
add
xchg
jmp
int3
pop
mov
add
xchg
mov
xor
xchg
fstp
or
adc
mov
mov
test
scas
movs
retf
sbb
and
pop
(bad)
adc
imul
daa
test
cmp
aam
inc
xchg
add
add
mov
pop
push
sub
cmp
repz
je
or
jbe
je
popa
je
repz
je
jae
push
dec
je
push
repz
je
outs
je
dec
je
outs
je
sub
fdivr
rol
jmp
or
in
mov
icebp
add
add
mov
je
and
push
or
jmp
rol
sub
mov
arpl
push
outs
push
push
loopne
and
dec
mov
aas
out
mov
add
xchg
mov
dec
dec
ficom
push
and
xchg
outs
mov
fwait
adc
xor
add
shr
call
popf
rcr
cmp
or
ja
mov
and
mov
lods
push
adc
push
sub
jl
and
cmp
jle
pop
push
push
sti
or
jns
mov
xlat
scas
aad
adc
push
xchg
adc
movs
sub
cmp
and
loopne
sbb
push
cmp
sbb
mov
sub
(bad)
and
fwait
jns
cwde
sub
jg
and
push
not
add
inc
sahf
xchg
and
inc
add
stc
cdq
nop
dec
add
cli
inc
test
nop
push
pusha
iret
adc
pop
cs
or
push
enter
sub
mov
add
add
adc
je
push
(bad)
push
jp
xchg
push
(bad)
mov
jo
dec
out
or
repz
and
cmp
xor
push
push
add
cmp
enter
clc
or
rol
jl
adc
ins
bound
scas
sub
pop
mov
inc
or
xor
jo
sub
mov
sbb
sub
adc
mov
call
adc
in
sub
sub
lock
nop
jg
cmp
inc
adc
movs
pop
pop
pop
mov
ja
movs
lea
outs
int3
xlat
add
sub
fldcw
loopne
xor
aam
jge
test
xchg
jbe
push
cmp
rcr
sbb
pop
loope
xchg
dec
push
clc
nop
xor
leave
cmp
adc
pop
inc
xor
inc
inc
(bad)
inc
add
xchg
add
sbb
inc
cs
add
mov
sbb
jbe
push
fst
adc
(bad)
push
in
pop
push
or
ins
jne
mov
push
adc
aad
and
inc
mov
test
loope
mov
add
push
push
pop
sbb
adc
call
jne
push
add
pop
lock
pop
jp
xor
pop
sub
inc
pop
jbe
stos
inc
dec
sbb
cdq
and
push
dec
xchg
clc
popf
das
or
lea
dec
add
adc
push
cmp
push
push
pop
dec
fcmove
xor
mov
and
(bad)
xor
inc
test
loop
inc
icebp
add
call
and
pop
mov
rcr
test
nop
adc
jecxz
adc
sub
add
gs
dec
cmp
das
fcomp
adc
les
ja
adc
cli
jg
add
push
dec
push
mov
push
xor
test
dec
pushf
dec
sbb
push
push
imul
adc
sub
pop
stos
cmc
inc
pop
or
inc
adc
dec
mov
cmc
mov
dec
lods
sbb
push
cmp
add
add
sub
pop
popf
stos
xor
sbb
and
push
out
les
scas
and
or
inc
mov
movs
dec
xchg
adc
or
fisub
loopne
das
inc
daa
push
inc
repnz
cmps
lods
rcl
xor
dec
loope
(bad)
push
and
shr
dec
jmp
shl
cmp
and
mov
inc
pop
in
add
jmp
add
nop
retf
add
pop
scas
jnp
popf
add
es
xor
lea
mov
ins
pop
adc
in
shl
push
inc
add
loope
mov
mov
mov
push
add
leave
add
push
and
dec
or
sbb
dec
sbb
add
imul
out
adc
inc
xor
cli
and
inc
inc
push
mov
daa
inc
adc
mov
or
xchg
adc
enter
inc
fwait
sub
inc
sub
sub
and
shl
iret
add
mov
imul
fisubr
daa
dec
sub
mov
push
nop
aam
cmp
sar
and
jmp
push
mov
xor
and
das
xchg
add
(bad)
push
aas
sub
lods
movs
mov
adc
sahf
ja
popa
xchg
push
pushf
mov
add
test
loope
mov
xor
bound
sub
pop
or
pop
sub
mov
xor
test
movs
xor
pop
cmp
push
test
dec
inc
test
call
jo
out
mov
popf
daa
fstp
xchg
jne
xor
(bad)
mov
aad
movs
sub
xor
sbb
xchg
and
aas
test
jecxz
mov
mov
pop
xor
ins
push
cld
test
xor
pusha
xchg
inc
mov
pop
and
retf
and
cmp
in
enter
sbb
sbb
or
cmp
mov
stos
sub
mov
test
or
or
and
jnp
mov
push
pop
cdq
add
mov
and
ins
mov
push
sar
enter
and
sbb
fcom
sbb
dec
push
sub
cmp
retf
add
mov
pop
push
in
jns
sbb
int
push
test
loope
lds
sbb
lea
nop
mov
pop
jae
dec
addr16
pusha
xchg
mov
push
shl
sbb
shl
int3
test
jge
mov
pusha
xor
inc
minps
sub
or
jmp
mov
sbb
outs
dec
jns
jb
cmp
(bad)
rol
inc
lods
fcom
adc
cmp
mov
push
push
fild
mov
test
ret
add
pop
add
xchg
and
pop
jb
xor
inc
rcl
mov
sub
jmp
inc
mov
xor
cs
add
shl
outs
sbb
cmp
dec
add
mov
or
les
mov
adc
pop
enter
enter
jmp
and
out
sub
cmp
mov
clc
mov
xor
adc
ret
repnz
sbb
cmp
xor
add
and
jne
mov
and
mov
inc
pop
lock
or
adc
inc
dec
adc
or
js
cmps
sar
test
or
xchg
cmp
imul
mov
xlat
sbb
push
sub
adc
adc
adc
push
enter
dec
scas
sti
push
dec
add
add
add
mov
sbb
dec
jne
icebp
or
ret
mov
dec
xchg
mov
fs
add
pop
loope
sbb
push
pop
pop
push
adc
cmp
xchg
rcl
add
test
in
push
mov
mov
and
jmp
jo
das
out
call
inc
sbb
mov
fs
mov
cmp
push
mov
add
js
mov
add
adc
inc
push
mov
icebp
cmp
add
lea
ja
xor
jmp
and
iret
push
jb
cmps
out
je
xor
sub
test
inc
jmp
repnz
add
ret
adc
je
xchg
loopne
mul
mov
or
lods
push
and
ret
adc
mov
nop
int3
aad
cs
mov
(bad)
jl
not
mov
cmp
out
mov
or
bound
js
sbb
sbb
jne
addr16
or
pop
(bad)
and
mov
mov
loop
pop
je
rol
add
test
scas
rol
and
das
push
cmp
sti
and
adc
push
jg
loopne
pop
sar
add
sbb
hlt
(bad)
fcomp
rol
push
int3
add
sbb
or
pushf
mov
clc
mov
and
add
leave
push
sub
ret
inc
ss
pop
cmps
jns
add
sub
dec
sub
out
clc
push
jl
stos
adc
xor
xchg
dec
jecxz
scas
and
cwde
and
sub
adc
call
inc
fidivr
ret
push
inc
push
sub
mov
mov
inc
sbb
pop
imul
dec
test
stos
push
and
and
and
jp
sub
lods
outs
ud1
ds
add
pop
mov
jb
dec
jns
or
push
pushf
mov
call
and
sbb
loopne
nop
adc
push
and
inc
mov
xor
(bad)
imul
mov
pop
inc
fs
xchg
out
imul
(bad)
jo
jo
jbe
inc
dec
fwait
pop
add
xchg
xchg
adc
cmps
outs
add
jl
enter
sub
adc
xor
js
jg
xor
pop
jbe
or
sub
xchg
rcr
add
mov
into
add
jns
add
pusha
mov
fiadd
ficom
in
adc
jge
xchg
adc
(bad)
outs
loope
jbe
sbb
test
add
mov
or
jl
fiadd
add
ror
sbb
mov
adc
jno
adc
mov
fadd
inc
stc
jl
inc
arpl
push
sar
jne
cmp
test
push
adc
xchg
pop
add
cmp
mov
or
or
arpl
add
xor
xor
or
add
stc
loop
inc
add
sub
mov
or
retf
adc
jb
mov
movs
pop
(bad)
(bad)
test
mov
xor
pop
out
adc
jb
into
jns
mov
test
lds
xlat
imul
or
sbb
dec
pop
mov
sbb
stc
clc
cmp
add
jbe
jmp
pop
mov
mov
ins
adc
mov
call
mov
and
(bad)
cmps
movs
mov
ss
pop
shl
pop
and
aaa
jo
push
dec
dec
mov
ins
push
inc
dec
xchg
iret
in
jo
xor
push
pop
js
pop
nop
add
adc
pusha
push
add
cmps
sbb
or
(bad)
enter
or
fild
add
aas
jo
loope
mov
lods
sub
xchg
stc
dec
jp
lods
cmp
push
ror
repnz
fisubr
es
loope
adc
adc
loop
mov
adc
sbb
popa
push
gs
pusha
sbb
sub
or
pop
clc
fsubp
jge
sbb
clc
int3
(bad)
dec
movs
push
and
push
repnz
cmp
sub
mov
or
imul
test
sbb
bnd
jg
fwait
or
mov
test
mov
mov
or
stos
sub
popa
adc
add
jmp
imul
ins
xor
jne
test
jge
adc
outs
pusha
ror
mov
aaa
jle
xchg
xor
(bad)
fild
add
and
mov
je
jb
cmp
test
fistp
scas
mov
daa
pop
add
pop
ud2
xlat
iret
loop
dec
xor
cld
mov
sbb
or
or
jnp
push
sbb
ficom
outs
retf
cmp
add
cmp
gs
loop
mov
sub
xchg
sbb
fs
or
cwde
out
bound
lods
cmc
aas
retf
jb
pop
inc
mov
cwde
xlat
xor
repnz
add
int
test
push
push
adc
enter
leave
fisttp
sbb
pop
retf
jmp
aas
xor
xor
sbb
or
das
xchg
fsubr
inc
push
jl
push
adc
xchg
movs
push
mov
dec
push
out
add
add
push
pop
add
xor
jo
ss
sbb
dec
jno
push
sbb
scas
xchg
mov
inc
mov
mov
xor
add
add
pop
inc
mov
fdivr
adc
push
push
xor
push
pushf
or
pop
fldenv
sub
add
jecxz
sbb
jns
adc
imul
sbb
ins
mov
mov
lds
add
pop
xor
dec
inc
jmp
je
sbb
into
int
hlt
jecxz
sbb
cli
fs
pop
xor
mov
in
pop
imul
mov
cdq
mov
test
test
jno
and
mov
mov
in
jle
fcmovb
dec
push
cmc
adc
aas
je
bound
retf
je
test
mov
sub
mov
jno
or
xchg
out
dec
sti
add
or
imul
setle
pop
mov
pop
jge
dec
pop
ins
push
in
dec
xlat
outs
push
imul
push
xchg
jmp
mov
imul
aaa
test
scas
fidiv
sub
xor
xchg
mov
mov
jb
mov
add
movs
mov
test
mov
lods
addr16
add
(bad)
cmp
add
jp
dec
jb
add
aaa
icebp
aam
inc
pop
or
bound
mov
int
test
adc
mov
ffree
mov
xor
sbb
sbb
sbb
loop
cmp
xchg
repz
mov
sbb
nop
js
movs
push
pop
and
jl
cmovnp
mov
jae
lock
mov
stos
ret
nop
xor
es
xchg
or
sbb
cmp
or
sub
pop
sub
xor
(bad)
mov
dec
call
fidivr
push
clc
add
inc
mov
nop
fwait
and
inc
inc
cmp
shl
cmp
inc
scas
nop
xor
fwait
mov
popa
daa
mov
and
je
lods
mov
pop
in
add
jnp
xor
push
inc
ret
sar
dec
xchg
mov
cmps
adc
test
outs
mov
jg
jmp
mov
inc
or
jb
xchg
or
push
xchg
push
scas
arpl
sub
movs
pop
aas
dec
mov
sbb
dec
pop
stos
pop
adc
loope
sub
fadd
sbb
dec
mov
or
add
or
je
push
mov
pop
or
ins
add
test
mov
xchg
sub
sbb
and
xor
mov
lock
push
fdivr
push
mov
inc
mov
or
ss
out
mov
inc
cwde
or
or
add
dec
pop
out
lods
pop
jae
inc
sub
push
sahf
aam
iret
push
add
stos
test
add
fcomp
sbb
or
add
jmp
add
jo
jne
lea
mov
out
add
or
rol
push
or
jge
mul
pop
arpl
mov
mov
pop
xor
fimul
push
cmc
ds
mov
mov
int
push
cmps
std
bnd
jno
sub
ja
inc
mov
or
fcom
adc
sbb
xor
adc
es
pop
mov
add
xor
and
sub
lea
add
das
enter
inc
add
popf
xchg
scas
sub
retf
inc
or
in
adc
sti
jbe
sub
push
and
mov
int3
(bad)
pop
push
xor
sbb
dec
mov
or
loope
adc
lds
or
enter
or
xchg
call
movs
inc
and
pop
sbb
mov
add
into
gs
adc
or
sub
dec
inc
imul
add
sbb
jb
cdq
sub
or
call
jns
shr
movs
std
mov
xchg
xchg
mov
mov
pop
jnp
ins
mov
pop
das
iret
dec
daa
and
sahf
pop
add
frstor
xor
inc
jecxz
push
out
fisttp
imul
mov
cmp
or
push
xchg
lahf
out
cmp
ficomp
or
push
mov
inc
jns
push
pop
mov
mov
jnp
push
pusha
jg
pop
rcr
inc
jbe
jnp
inc
jns
xchg
dec
pop
and
mov
out
daa
cwde
stos
push
mov
shl
push
or
mov
jg
test
or
and
fld
sbb
shr
inc
popa
jg
sub
cmp
gs
inc
add
push
dec
in
xor
inc
adc
ror
xor
xor
imul
lods
inc
mov
or
sahf
jb
(bad)
(bad)
gs
popa
shr
jno
sub
pop
repz
scas
(bad)
jmp
add
or
fiadd
std
and
fimul
adc
gs
jne
push
out
lea
jmp
and
mov
mov
jnp
rcr
pusha
push
test
push
xor
and
adc
popf
add
inc
js
sbb
dec
adc
mov
(bad)
push
add
rol
jno
push
inc
mov
add
xor
pop
fild
mov
js
into
ficomp
add
cmps
popa
(bad)
rol
jnp
push
adc
xchg
push
nop
shr
adc
pop
loop
lahf
fldcw
cmp
sar
mov
adc
adc
or
or
pop
retf
cmp
(bad)
aam
xor
jnp
loopne
mov
xchg
movs
ror
mov
push
stos
sub
inc
push
jb
mov
aas
neg
or
add
xchg
add
dec
fs
out
fild
imul
add
and
je
cs
inc
repnz
fwait
add
enter
call
call
jmp
lds
movs
dec
das
enter
xor
or
stc
pop
push
mov
jbe
or
shl
push
cmp
dec
fstp
aaa
nop
loopne
xchg
xchg
xor
pop
mov
add
xor
sbb
fwait
xchg
push
push
out
bound
test
in
push
dec
or
push
inc
imul
nop
push
cmp
and
jb
adc
add
aaa
pushf
mov
sbb
loop
xor
xchg
cmp
mov
add
enter
push
adc
inc
fcom
mov
mov
sbb
mov
sub
inc
sub
ret
mov
and
mov
xlat
je
xlat
jno
call
call
test
mov
jge
jo
stc
data16
popa
ins
out
inc
push
aas
xor
sbb
mov
push
push
cld
inc
sbb
push
xor
or
pop
adc
xchg
inc
pop
sub
sub
or
and
fisttp
dec
push
div
je
sub
movs
xchg
adc
mov
xchg
inc
add
ret
pusha
ret
xor
and
push
pusha
add
(bad)
or
pop
or
aas
pusha
or
cmp
inc
add
jmp
fistp
sub
sbb
xchg
inc
and
push
add
in
cmp
sub
out
dec
mov
add
sub
(bad)
sub
push
imul
ror
jmp
arpl
scas
ja
cmp
sub
sub
sub
inc
js
(bad)
(bad)
adc
data16
dec
enter
(bad)
dec
mov
add
jns
dec
hlt
xor
jecxz
push
push
xchg
xchg
add
inc
push
sbb
ja
or
mov
jne
dec
push
add
mov
sti
sbb
or
arpl
and
inc
cmp
push
or
and
push
pop
repnz
dec
imul
dec
jnp
sub
dec
sbb
repz
dec
leave
adc
push
mov
arpl
test
sub
or
and
pushf
sub
(bad)
push
add
enter
aaa
push
or
mov
cmp
mov
mov
aad
push
or
xchg
nop
scas
add
mov
lock
mov
daa
imul
add
or
test
pop
jmp
cmp
sar
push
add
inc
jne
shl
dec
sbb
inc
push
es
ins
add
pusha
stos
add
gs
push
mov
mov
xlat
pop
or
retf
(bad)
dec
dec
mov
push
sti
cmp
test
sbb
sbb
dec
cmp
sub
cli
sub
sub
pop
and
popa
adc
imul
or
push
lahf
cmp
cld
ins
inc
add
out
xchg
or
pop
adc
dec
out
push
jnp
push
rcl
adc
push
push
push
xor
pop
or
(bad)
jmp
gs
mov
cmp
popf
pop
rol
push
and
data16
les
mov
xchg
loope
rcl
or
cmp
xchg
aad
shl
cwde
popf
push
aad
mov
shl
push
arpl
movs
loopne
bswap
pop
mov
add
or
sub
inc
push
emms
movs
rcr
psllw
jp
iret
mov
sub
test
aaa
pop
push
dec
js
push
xchg
xor
push
or
mov
or
out
lds
movs
xor
xchg
nop
jo
mov
add
push
push
adc
aam
in
cmp
sbb
jne
test
cmp
dec
and
sbb
mov
mov
sub
or
scas
inc
pop
push
xchg
and
outs
inc
push
fstp
xchg
cmps
add
sbb
add
vorps
call
shr
push
push
mov
push
clc
inc
outs
imul
pop
enter
mov
mov
jno
mov
adc
xor
cs
sub
jmp
mov
add
pop
adc
mov
adc
mov
dec
add
inc
and
push
je
mov
arpl
loopne
aam
pop
cmp
jne
add
xchg
inc
push
test
mov
jmp
push
add
fidivr
xchg
or
les
xchg
into
push
fcomp
scas
push
xchg
aam
push
sbb
icebp
aas
stos
push
dec
and
aas
scas
and
fild
icebp
pusha
lods
mov
addps
lahf
jge
mov
mov
ror
pop
sub
fs
int
loopne
adc
push
jb
sbb
jmp
jb
rcl
mov
into
test
cwde
imul
cmp
push
cli
(bad)
and
push
add
push
sub
enter
imul
cmp
sahf
sub
jecxz
push
push
sar
and
(bad)
rcl
je
js
fist
push
icebp
mov
iret
iret
or
or
pushf
mov
(bad)
dec
inc
ret
or
in
outs
and
add
mov
lods
popf
jbe
jne
or
pop
sbb
or
loop
jno
in
aam
mov
es
and
test
cmp
adc
jmp
add
rol
std
push
lods
mov
mov
sub
xchg
xor
js
dec
add
les
mov
stc
dec
lods
push
inc
sub
add
and
call
sbb
mov
cmp
gs
dec
sahf
ret
or
das
push
test
xor
stos
mov
dec
add
push
and
sub
gs
pop
imul
pushf
daa
jl
jge
adc
adc
(bad)
es
push
dec
and
xor
test
es
push
mov
movs
pop
shl
pop
sub
adc
mov
jmp
push
dec
pop
inc
adc
push
fimul
push
xchg
bound
sub
or
sbb
cli
fmul
jbe
jmp
call
and
sbb
pop
and
or
or
push
sbb
cmc
int3
out
sahf
jb
add
jbe
inc
jae
add
daa
mov
rcl
or
neg
cmp
or
mov
nop
pop
pop
cmps
dec
or
movsx
daa
or
cs
jle
mov
ins
scas
xchg
sub
and
dec
lock
cmp
push
in
and
mov
dec
sbb
hlt
sti
or
jg
pop
test
cmp
or
movs
cmp
mov
pop
xor
stos
xor
mov
xor
mov
adc
inc
fmul
and
call
gs
mov
or
add
in
adc
adc
sub
aaa
pusha
or
mov
scas
shl
out
addr16
adc
lea
mov
and
inc
jg
pop
dec
lods
sbb
add
or
add
hlt
das
or
stos
movs
ret
jo
jno
or
cmp
xor
push
and
inc
xor
outs
ins
lock
cmp
or
inc
add
call
pop
ja
sbb
sub
add
mov
sub
or
cmp
cwde
push
fwait
push
(bad)
(bad)
movs
xor
dec
inc
shl
push
xor
or
lea
sub
pop
daa
sub
mov
sub
push
daa
xchg
mov
jle
lods
adc
sub
inc
bound
fist
fistp
or
test
pusha
rol
mov
and
inc
jp
out
mov
call
mov
outs
sbb
xchg
nop
clc
mov
or
fs
jecxz
pop
dec
stos
shl
pop
push
test
lock
adc
pop
ret
inc
fistp
pop
pop
or
and
add
mov
movs
jne
sub
dec
(bad)
cmp
adc
fstp
stos
or
sbb
icebp
mov
or
cld
jl
mov
fwait
mov
cmovno
and
(bad)
or
jle
int
add
and
daa
int
rcr
das
sub
je
xor
inc
and
dec
fcmovnbe
mov
arpl
xor
das
sbb
xchg
sub
das
mov
aad
movq
mov
outs
sub
mov
add
clc
jmp
fld
cdq
test
inc
mov
sbb
mov
loopne
je
mov
stos
imul
mov
jne
mov
pop
push
adc
pop
ins
adc
or
inc
test
popf
mov
out
cmp
outs
jae
pop
inc
push
bswap
repz
lahf
and
mov
popf
cmp
fadd
loopne
sbb
sar
sbb
imul
imul
lock
popa
mov
in
or
xor
call
rol
sbb
pop
pop
and
cmp
and
mov
gs
mov
call
ss
and
jb
dec
push
jne
popf
ret
outs
ret
push
call
mov
push
test
loopne
mov
sub
mov
xchg
add
dec
scas
adc
xor
lea
pop
inc
and
inc
mov
out
inc
and
addr16
push
jo
or
adc
inc
gs
imul
pop
fild
sbb
add
inc
jae
jle
sub
inc
lea
dec
add
test
adc
inc
(bad)
sbb
cld
mov
inc
mov
imul
test
out
adc
(bad)
push
mov
sti
sbb
loope
add
cdq
and
xchg
sbb
dec
sub
inc
sub
push
shl
mov
xor
out
xor
dec
add
add
add
je
or
dec
jmp
add
es
xor
(bad)
dec
add
cmp
popa
jmp
pusha
ret
and
add
or
imul
pop
or
sub
call
hlt
fldl2e
je
hlt
lea
push
push
call
or
test
add
dec
push
xchg
mov
sbb
jp
movs
xchg
sar
lea
shr
inc
icebp
adc
ss
adc
jne
add
inc
push
push
adc
and
sbb
in
xchg
fsubr
imul
ins
or
ins
push
fs
jle
call
mov
mov
jb
iret
or
jl
push
add
ins
jmp
dec
fsubr
rol
cmp
xchg
fcomp
sbb
xchg
pop
ret
inc
add
and
dec
mov
pop
adc
add
push
test
jge
sahf
add
sbb
or
icebp
call
push
das
push
pop
xlat
mov
pusha
inc
add
add
add
cmp
jmp
inc
jmp
mov
test
mov
push
test
add
add
clc
add
inc
mov
or
scas
imul
push
add
adc
push
das
xchg
mov
or
mov
add
push
cmp
mov
jecxz
add
sbb
ret
ins
(bad)
sub
inc
add
push
xor
(bad)
out
pusha
pop
and
(bad)
push
add
adc
push
xchg
imul
or
in
push
inc
arpl
pop
inc
cmp
jne
pop
xor
cwde
(bad)
and
mov
adc
icebp
sub
retf
cwde
ins
repnz
adc
mov
shl
inc
in
fidiv
push
sub
jbe
and
test
adc
fcmovu
lods
shr
mov
push
jns
cmps
bound
or
push
mov
push
pop
dec
cld
adc
fimul
sub
ret
jmp
sub
sar
jne
mov
xchg
cdq
mov
or
call
sbb
stos
adc
or
lea
sub
xchg
cmp
mov
jmp
push
mov
ror
add
out
imul
repnz
or
in
or
add
sbb
scas
pop
cs
add
dec
out
inc
pop
jmp
aaa
pop
ret
pop
sar
pop
cmp
xor
add
or
pop
mov
push
pop
mov
iret
fisttp
mov
shl
mov
out
jmp
arpl
lahf
test
(bad)
int
or
int
loop
jl
sbb
lea
iret
repz
not
cmp
jnp
mov
ret
pop
jl
dec
loopne
loopne
adc
push
pop
add
sbb
test
sub
sbb
adc
imul
adc
sbb
ins
xchg
jo
xchg
in
js
fucomip
add
or
fadd
jp
jg
fwait
or
repz
aam
pusha
or
jmp
add
push
sub
lock
dec
in
aad
push
xchg
and
add
jnp
das
in
inc
ds
rol
lods
mov
repnz
stos
inc
push
add
and
arpl
push
xchg
rol
mov
add
add
dec
add
(bad)
out
push
sahf
out
push
jmp
add
sbb
xchg
add
jbe
cmp
inc
sbb
in
movs
push
mov
add
in
add
adc
add
push
adc
loop
ss
add
mov
xor
and
xor
cmc
mov
push
dec
dec
jle
sar
shl
mov
das
add
pop
cmps
push
in
movs
xchg
test
ficomp
movs
sbb
pusha
push
pop
pop
lods
push
push
addr16
dec
mov
and
dec
imul
aam
cmp
mov
outs
rcr
(bad)
mov
sbb
cmps
pop
in
repnz
sub
inc
add
mov
mov
cwde
inc
test
(bad)
jbe
mov
retf
jge
pushf
lea
mov
add
or
fisub
pop
pusha
xor
outs
dec
shr
push
and
jecxz
pop
jbe
lahf
cmp
mov
pop
jne
mov
frstor
inc
jne
jno
mov
cmp
mov
jno
push
popa
cld
cmp
ficomp
add
js
loopne
ja
(bad)
add
adc
mov
mov
mov
js
cmp
stc
das
add
add
inc
add
lea
fnstcw
dec
push
in
js
push
shr
xchg
test
fistp
inc
inc
push
add
(bad)
push
adc
sub
mov
jl
mov
cmp
test
out
add
xchg
es
sbb
mov
daa
sbb
cwde
mov
test
or
adc
jg
dec
rol
xor
retf
scas
xor
xor
jmp
cmp
sbb
js
ins
gs
mov
mov
cmp
push
and
jno
out
ins
call
ins
ret
pop
ss
ins
or
arpl
or
and
or
or
add
mov
xchg
loope
pop
inc
push
push
inc
cmps
dec
xchg
fcom
movs
mov
scas
push
cmp
sub
dec
or
ss
icebp
add
je
sbb
je
mov
mov
xchg
movs
mov
pop
ins
push
aas
push
jae
adc
(bad)
cmp
es
(bad)
mov
jge
add
shr
(bad)
cmp
push
push
stc
mov
push
jne
or
sbb
inc
xor
jne
inc
mov
sub
aas
sbb
push
sbb
sar
ret
mul
(bad)
sub
sbb
dec
push
and
scas
pusha
(bad)
shl
dec
xor
mov
loopne
in
and
movs
xchg
test
sbb
cs
pusha
cmp
jo
mov
push
jmp
and
outs
int
movs
mov
popa
cli
jge
add
dec
xchg
loope
cmp
xor
sub
inc
inc
das
cmp
or
cmc
add
cs
inc
bound
push
pop
sbb
fldenv
sbb
xchg
push
adc
cs
inc
or
dec
inc
and
and
mov
sub
dec
fild
imul
mov
jbe
mov
stos
mov
cmp
xbegin
mov
inc
push
mov
xor
bound
pop
adc
pop
xchg
mov
ret
xchg
ins
pop
out
je
aas
push
gs
iret
test
dec
jg
fs
std
jne
jmp
fidiv
jle
pop
jne
mov
inc
push
xchg
adc
mov
push
stos
pop
pop
add
inc
jge
hlt
or
inc
stos
lea
add
iret
ins
cmp
inc
stc
fsubr
mov
and
jae
adc
mov
push
push
inc
sub
mov
pop
es
imul
cmp
sbb
enter
aad
inc
je
in
ja
ret
loop
sub
push
in
add
inc
push
jmp
scas
xor
add
imul
mov
into
add
mov
lock
mov
pop
push
lods
xor
(bad)
dec
jp
sbb
inc
jbe
mov
xor
call
pop
dec
cmp
or
movs
or
mov
push
push
test
sub
cmp
ins
es
jns
xor
jb
sub
mov
rol
mov
mov
adc
add
dec
mov
clc
sub
hlt
mov
mov
mov
es
and
loopne
loop
ja
lea
fidivr
dec
mov
push
push
rcl
lds
jl
test
(bad)
ret
test
retf
sbb
push
mov
xchg
add
jle
cmps
mov
sbb
jbe
not
and
push
rcl
leave
(bad)
jns
aas
ret
jmp
sbb
jne
ror
sbb
push
fidiv
test
not
xchg
shl
mov
ss
retf
jnp
out
xor
or
pop
aad
adc
or
(bad)
loope
adc
xchg
add
push
xor
scas
es
push
dec
push
xchg
or
inc
imul
lods
test
neg
sar
lea
xchg
jge
sbb
icebp
dec
in
inc
adc
jne
mov
stos
pop
xchg
and
or
inc
jne
js
and
mov
add
sbb
pop
retf
mov
pop
out
test
add
pop
push
out
cmp
push
cli
or
add
xchg
loope
mov
adc
nop
mov
push
sub
inc
cmp
cmps
or
bnd
sbb
dec
ds
sub
cmp
lock
sub
xor
fisubr
mov
cmp
mov
arpl
pushf
inc
xchg
and
or
adc
sub
icebp
and
xchg
xor
sub
pop
or
xor
sahf
push
jo
ds
adc
push
rcr
adc
xor
daa
mov
push
not
movs
or
adc
pop
add
lock
cdq
dec
out
ja
jo
xchg
cld
xchg
dec
adc
repnz
mov
add
xor
sbb
add
and
or
pop
das
and
sbb
pop
add
and
or
fst
ins
and
mov
dec
out
add
mov
inc
jmp
sbb
mov
adc
pop
xor
pop
mov
jg
and
cmp
sbb
pop
stc
or
sbb
and
xor
add
push
cmp
das
inc
lea
into
mov
mov
inc
mov
and
and
or
in
and
and
adc
fstp
mov
sahf
xchg
mov
fcomip
fs
inc
ret
fldcw
daa
repz
xor
inc
sub
es
fs
lahf
leave
aaa
fdivr
sbb
call
mov
movs
sbb
loopne
std
cmp
test
mov
jns
sub
sbb
out
and
xchg
bnd
xor
pop
ds
jne
add
pusha
inc
jne
pop
in
or
mov
add
adc
leave
cld
mov
push
data16
sub
jno
shr
sahf
jl
xor
les
inc
mov
rol
xchg
ret
mov
cmp
push
test
sar
pop
add
mov
inc
or
pusha
and
xor
out
jle
add
dec
test
arpl
jb
imul
mov
mov
iret
mov
mov
push
mov
retf
into
sub
dec
push
jbe
iret
adc
sbb
hlt
rcr
pop
or
jbe
lds
mov
xchg
nop
ins
dec
cwde
popa
rol
das
pop
xor
cmp
or
dec
or
pop
cvtps2pd
push
popf
movs
call
push
sbb
cmp
popa
scas
sub
jg
adc
sbb
dec
cmp
lods
and
xor
xchg
and
call
jne
add
push
cmc
jg
(bad)
push
pop
mov
shl
sar
(bad)
and
div
mov
dec
shl
xchg
dec
dec
inc
push
dec
inc
stos
jle
loop
or
clc
xchg
push
shl
out
sub
pop
cmp
add
ss
dec
and
jg
and
dec
mov
ins
aas
adc
or
test
sbb
jnp
movs
cmc
sbb
cmps
jge
adc
mul
adc
adc
xor
xor
jecxz
leave
adc
js
or
or
inc
and
mov
aad
inc
scas
(bad)
jns
sbb
jl
xor
nop
xchg
and
inc
stos
inc
add
jge
sub
cmps
or
dec
cli
rcl
mov
inc
and
jb
cld
outs
in
loope
lea
fiadd
inc
shl
or
and
jo
xchg
inc
mov
add
sbb
xor
inc
add
dec
test
call
in
je
call
(bad)
ror
(bad)
sub
outs
rcl
int
enter
mov
rcl
sub
xchg
rcr
push
add
mul
fdiv
dec
repnz
mov
mov
or
je
inc
out
dec
jno
mov
mov
aas
jg
push
not
mov
xor
repz
pop
test
xchg
push
push
call
or
cmc
cli
mov
lods
cmp
call
out
push
pop
call
ret
das
sub
int
rol
sbb
and
or
adc
or
xchg
std
xchg
sub
xchg
push
test
inc
test
cmp
scas
and
add
xor
push
mov
leave
ret
jbe
cmp
sub
inc
les
adc
mov
lock
out
jbe
out
inc
and
dec
and
xor
ins
call
loope
jne
iret
push
and
repnz
add
or
ins
push
cmp
cmp
rcl
pop
arpl
push
dec
inc
loope
sub
or
out
in
mov
pop
jae
leave
mov
dec
sub
push
aaa
test
cmp
dec
xor
jns
jmp
mov
xchg
mov
adc
dec
jae
cs
test
int
int
pop
je
or
cmp
xor
sub
xchg
xchg
stc
out
xchg
push
jo
add
add
ret
pop
mov
xor
enter
js
mov
cmp
mov
add
jge
data16
jo
xor
pop
(bad)
popa
mov
jne
jne
fs
ins
xchg
cmp
mov
push
es
push
or
shr
fs
inc
clc
xchg
push
or
xor
add
sub
lea
mov
adc
cmp
jne
lea
add
or
xchg
leave
inc
rol
mov
mov
ja
shl
mov
loopne
xchg
add
add
in
cli
fidiv
divps
shl
mov
into
mov
shr
pop
inc
or
dec
test
mov
rol
add
inc
add
cld
push
shl
cmc
push
(bad)
push
fist
fisub
enter
frstor
les
cmp
int3
and
enter
repz
xchg
movs
retf
adc
or
fcomp
jle
ror
lds
ret
add
je
jnp
cmc
ja
push
repz
sbb
(bad)
cmps
cmp
jae
jp
or
cmp
pop
ins
sar
call
dec
add
lock
dec
mov
fadd
xor
push
fs
inc
pop
xchg
popa
(bad)
sub
sub
and
push
jp
loope
xor
aaa
dec
cmp
(bad)
push
dec
pop
in
rol
add
xchg
sbb
mov
sar
js
cwde
loop
add
or
ss
pushf
xchg
je
outs
dec
xchg
mov
leave
call
inc
sub
cmps
adc
bound
lods
pop
xor
push
sub
add
xor
dec
pop
pop
call
jo
jmp
sbb
mov
add
fxch
lock
sar
xchg
sbb
inc
mov
cmp
in
add
sub
int3
or
call
cmp
inc
fnstcw
add
ss
daa
jmp
int3
adc
repz
mov
add
mov
js
sub
shr
mov
mov
sbb
stos
push
add
dec
mov
ret
sbb
cmc
xchg
pop
push
xchg
and
test
mov
stos
adc
and
retf
sbb
or
add
lea
ins
pushf
mov
mov
repz
unpcklps
inc
mov
push
stc
scas
inc
pop
rcr
push
inc
adc
mov
ja
div
call
mov
out
sub
jne
pop
add
fs
add
mov
dec
in
sub
xor
pusha
dec
ret
fsubr
das
inc
int3
push
cmc
xor
inc
test
(bad)
inc
je
mov
inc
xor
adc
push
shl
sahf
or
cmp
cmps
sbb
sub
jb
loopne
int3
add
mov
or
dec
fnstenv
add
xchg
and
inc
stos
adc
push
rcl
push
mov
xchg
xor
xchg
push
dec
or
mov
mov
push
add
nop
xchg
in
xor
lock
mov
mov
xchg
shr
dec
pop
mov
inc
add
push
adc
fisub
(bad)
xchg
test
or
mov
dec
mov
sbb
add
inc
not
(bad)
adc
fsubr
push
jns
and
fidiv
rcl
lock
outs
push
cmp
lea
mov
enter
out
mov
ret
mov
add
add
inc
push
inc
shl
pop
xor
add
or
pop
push
and
or
add
jb
jl
pusha
sub
push
adc
scas
test
lods
xor
(bad)
add
mov
je
int
cmp
nop
sub
xchg
push
clc
retf
(bad)
shr
pop
mov
jl
jl
idiv
mov
pop
mov
call
dec
dec
xchg
inc
push
stc
repz
sbb
ret
and
push
adc
inc
cmp
mov
outs
fiadd
cmp
sbb
scas
pop
inc
push
xor
sub
jne
mov
mov
sub
clc
mov
sbb
push
jecxz
test
rol
jmp
or
inc
pusha
nop
loope
jne
sub
call
jo
cmp
popf
jns
adc
jmp
sub
push
or
in
pop
sub
and
and
sub
and
and
adc
adc
inc
inc
adc
adc
xor
and
cmp
dec
sbb
push
out
adc
std
aam
jbe
pop
mov
and
pop
je
cdq
push
bound
dec
add
adc
mov
push
and
loope
js
mov
push
mov
push
leave
or
pop
and
jp
sub
enter
les
jp
sar
fimul
imul
sbb
dec
xor
fld
push
pop
test
cmp
adc
jo
sbb
pushf
cmp
in
fdiv
pop
leave
pop
fwait
dec
loopne
push
push
jge
mov
add
pop
retf
(bad)
(bad)
std
jne
inc
es
add
fdivr
mov
cli
data16
adc
dec
nop
jge
jo
sub
xor
and
cmp
(bad)
repz
push
pop
mov
xchg
xchg
sbb
test
adc
cmp
jne
xchg
jno
inc
popa
push
hlt
dec
add
and
add
aam
jb
and
inc
inc
and
mov
ss
or
jne
ret
add
cmp
out
cmp
push
pop
cmps
in
fs
and
add
fcomp
cmp
jne
scas
adc
adc
jne
sbb
add
sahf
neg
fucomip
cmp
mov
jmp
and
daa
xor
sbb
jl
sub
add
fs
outs
or
sub
xchg
jae
sbb
(bad)
sub
sub
and
pop
add
or
dec
jmp
cmp
add
fcomp
mov
fstp
stos
fimul
inc
cmp
inc
mov
adc
or
adc
jle
fst
or
sar
test
test
jb
jne
(bad)
or
sar
xor
test
dec
xor
(bad)
xor
dec
rol
add
ret
call
push
add
std
fst
mov
adc
add
cmp
(bad)
sbb
jl
outs
cmp
jge
jbe
ror
test
sub
inc
mov
in
or
xchg
mov
rcl
and
sti
adc
sbb
dec
add
sub
pop
adc
and
adc
dec
add
test
jmp
xor
xchg
int
test
add
inc
sar
fmul
bnd
mov
or
pop
call
push
push
xchg
push
cmps
pop
add
mov
in
mov
mov
adc
adc
ins
je
in
mov
sub
push
sub
sub
xchg
pop
ss
push
mov
das
or
jmp
mov
lock
or
add
mov
loopne
fs
xchg
es
(bad)
adc
pop
mov
jge
adc
inc
push
retf
inc
les
mov
pop
mov
add
pop
jl
pop
sub
sub
push
mov
jecxz
ss
push
jmp
adc
cs
cmp
sub
test
push
xor
ret
gs
adc
stc
jg
pop
push
or
add
inc
cmp
jnp
dec
adc
add
lock
sbb
push
lock
xchg
add
jle
mov
mov
sahf
sub
mov
dec
lds
adc
mov
clc
cmps
inc
xor
push
xchg
add
int3
pop
rcr
sbb
mov
push
or
pop
rcl
loop
push
in
inc
mov
and
mov
mov
adc
jb
mov
xchg
jae
rcr
jne
test
stos
in
in
jne
or
push
out
jle
nop
cvtdq2ps
or
inc
inc
in
adc
sbb
adc
rol
data16
scas
ss
add
push
push
pop
fmul
ds
outs
mov
pop
icebp
call
dec
inc
adc
and
or
movs
add
lock
sub
sub
loopne
push
in
push
cmc
xor
vucomiss
dec
fmul
or
retf
sub
cwde
test
sbb
(bad)
dec
mov
mov
jmp
or
outs
sti
jbe
or
mov
scas
push
ss
push
add
aaa
cmp
jne
arpl
inc
xor
and
leave
add
add
jl
inc
or
jmp
rol
ret
adc
sub
add
push
out
xor
inc
rcl
mov
push
or
inc
or
mov
lods
sbb
sbb
mov
jne
jmp
dec
nop
push
fdiv
add
add
arpl
inc
or
sub
fwait
adc
lods
pop
test
out
inc
sub
dec
stos
mov
or
cdq
sub
and
add
adc
push
mov
retf
mov
gs
sub
enter
push
sub
repz
push
bound
mov
dec
leave
jo
pop
shl
jg
fnstenv
xchg
mov
pop
mov
pop
enter
(bad)
retf
xor
pusha
loope
lahf
inc
call
inc
jl
fs
pop
xchg
pop
pop
cmp
pop
or
shr
clc
int
icebp
add
adc
pop
das
enter
ret
daa
mov
xchg
push
loop
mov
push
dec
mov
cli
pop
inc
cmp
push
dec
or
adc
add
sbb
cmps
jge
inc
xor
adc
sbb
cmp
inc
icebp
cwde
mov
pop
jnp
cmps
jle
xchg
adc
pop
pop
sub
shl
push
or
mov
sbb
call
bswap
jo
and
mov
pusha
test
je
ins
loop
sub
aas
mov
mov
jae
dec
add
cmp
xchg
inc
xor
loop
jo
rol
inc
ret
inc
js
pop
add
pop
cmps
sub
mov
or
aas
pop
inc
or
das
xchg
ror
or
push
or
dec
ins
push
sbb
jmp
pop
mov
or
lea
inc
jns
pop
outs
aas
or
jne
dec
ret
ret
add
(bad)
not
and
adc
and
into
sbb
adc
adc
push
mov
dec
add
mov
adc
cmp
xchg
sbb
retf
(bad)
cmps
sar
inc
add
mov
inc
and
div
inc
or
stc
test
lock
xchg
ja
ret
and
cmc
shr
loopne
ror
pop
rol
(bad)
cmp
cmp
call
(bad)
retf
and
push
add
cli
mov
push
add
out
mov
repz
xor
aaa
add
or
call
or
xor
push
dec
sbb
lds
adc
pop
adc
sbb
add
lods
ret
cmp
sub
add
sar
daa
mov
sbb
add
jl
rol
xchg
inc
pop
mov
or
sbb
ret
push
daa
pop
or
xchg
dec
add
mov
jae
cmp
xchg
mov
xchg
dec
sub
dec
loopne
rol
mov
mov
ins
adc
or
std
mov
lods
add
rcl
xor
fist
push
mov
cmp
push
or
je
daa
jmp
(bad)
push
pop
fdivr
adc
in
mov
add
jmp
add
xchg
adc
inc
lea
inc
jae
stos
jge
jo
or
cs
mov
add
push
cmc
(bad)
adc
or
mov
lods
jmp
mov
shr
adc
cmp
fmul
shl
fcom
arpl
icebp
cmp
loopne
test
sbb
push
ds
jecxz
das
shl
sbb
xlat
sbb
das
or
mov
nop
mov
or
int3
sub
test
mov
jmp
jno
jo
mov
fwait
cmp
outs
daa
sub
cld
mov
ja
pop
dec
push
fild
out
dec
or
push
add
add
push
je
add
mov
sub
sbb
mov
adc
mov
sub
rol
pushf
adc
jmp
fnstsw
add
add
or
inc
test
cli
pusha
jo
pop
mov
pop
popf
add
call
retf
lods
jo
adc
scas
adc
(bad)
ins
mul
fsubr
inc
pop
test
push
push
cli
and
dec
cmp
dec
add
sbb
sub
and
mov
adc
pop
add
lds
push
and
inc
cmp
dec
cmp
mov
pop
mov
jno
push
xchg
cmps
sub
lgs
into
pop
loope
lods
inc
or
jp
mov
neg
add
test
shl
or
loope
jns
scas
es
xchg
nop
test
int
fldenv
loopne
sbb
mov
inc
dec
jmp
dec
je
xor
pop
pop
add
inc
aaa
cdq
mov
xor
and
aaa
adc
adc
mov
ja
in
call
cmp
dec
lock
call
clc
pop
add
pusha
(bad)
repz
inc
add
nop
xchg
or
inc
rcl
pushf
push
adc
fs
fisub
dec
jp
retf
test
mov
adc
cmp
cdq
mov
jmp
in
fwait
aaa
dec
scas
inc
mov
mov
(bad)
inc
cmps
push
repnz
mov
ss
dec
pusha
sbb
mov
cmp
and
and
paddsb
inc
sbb
in
pop
loopne
pop
push
mov
js
repz
lds
daa
push
push
rcl
pusha
cmp
enter
stos
in
mov
mov
scas
mov
sbb
or
shr
rcr
mov
sbb
dec
outs
ret
arpl
jns
mov
(bad)
inc
mov
add
xchg
xchg
pushf
int
int
jnp
scas
push
out
test
test
pushf
out
push
and
int
add
add
add
push
ins
push
lods
push
lock
or
aas
mov
and
int
jns
lds
int
repz
in
xlat
sahf
push
lahf
xor
sbb
lock
add
or
cmp
add
pop
loope
or
or
fiadd
cmp
loopne
(bad)
jnp
out
ror
lods
mov
cmps
ds
sti
xor
push
cmps
ss
movs
jne
cmps
adc
lock
fcom
add
push
in
adc
(bad)
or
push
shl
add
cmp
repz
leave
into
rol
xor
retf
sbb
add
add
push
or
out
sbb
jl
push
jne
mov
jo
lods
push
mov
or
jmp
xchg
pop
das
jmp
imul
outs
inc
pop
nop
lock
sub
mov
out
imul
jb
mov
mov
push
pop
sbb
dec
xor
cmp
aam
xchg
inc
fisubr
jp
retf
enter
add
and
mov
lock
cmp
cmp
lea
call
ins
and
or
dec
iret
sub
dec
mov
and
or
pop
sub
xor
sub
jo
lods
movaps
fist
pop
jge
ins
sbb
in
test
adc
gs
(bad)
mov
into
ss
stos
jg
je
fiadd
rcl
or
jmp
cdq
push
fisubr
sub
cmp
push
mov
adc
(bad)
sub
xor
inc
xchg
adc
push
cld
jb
and
push
xchg
or
fld
lods
push
sti
push
bound
(bad)
push
pusha
push
jle
and
sbb
sub
push
add
jbe
aad
dec
add
push
push
(bad)
call
or
mov
inc
sub
mov
push
or
loopne
gs
xchg
lahf
out
ror
jl
pop
lods
mov
pop
mov
fs
ins
push
jo
je
test
mov
xchg
mov
mov
cwde
pushf
mov
mov
and
lods
sub
shl
loopne
xchg
or
pop
or
(bad)
lods
cmp
mov
pop
push
sub
adc
jp
jb
jmp
dec
loopne
push
pop
dec
sbb
add
rol
jne
call
or
jne
dec
retf
fnsave
xor
arpl
es
sti
movs
and
xor
xchg
pusha
mov
xor
sar
push
je
fild
inc
sub
cmp
test
adc
and
or
rcl
or
je
push
mov
xor
loop
mov
sub
pop
pop
rcl
dec
add
and
xchg
adc
inc
jmp
sbb
imul
dec
xor
xor
(bad)
mov
or
shl
pop
mov
inc
dec
cmp
add
add
pop
daa
push
push
add
add
outs
add
sub
adc
push
jle
popf
jbe
dec
adc
adc
add
ret
xchg
cmp
out
out
xor
jne
xchg
lds
repz
(bad)
outs
push
jnp
xor
xchg
loopne
fbld
mov
sub
scas
or
push
pop
mov
sbb
jle
inc
add
mov
pop
jne
add
shl
push
inc
cmc
adc
xchg
in
outs
inc
pop
mov
adc
sub
retf
jbe
retf
bound
adc
pop
fiadd
inc
adc
mov
and
pusha
les
mov
in
leave
mov
xor
adc
push
and
push
ins
jge
xchg
leave
add
sar
xchg
mov
fwait
sub
mov
or
sbb
mov
jno
sbb
push
pop
and
pusha
inc
pushf
test
inc
add
push
dec
mov
movs
dec
mov
cmp
and
sbb
fimul
add
test
int3
adc
iret
cs
or
nop
mov
mov
mov
sub
add
cmp
icebp
data16
sbb
push
add
into
sbb
and
and
sub
or
mov
jne
add
inc
xor
pusha
pop
inc
sub
push
add
add
mov
fwait
jmp
aam
cmp
cmp
jg
lds
shl
cs
jecxz
or
stos
pop
xor
push
test
pop
hlt
cmp
jmp
or
pop
push
pop
arpl
stos
cdq
adc
mov
dec
outs
mov
(bad)
mov
xchg
jmp
inc
(bad)
(bad)
and
mov
cmp
retf
cmc
add
push
ror
ret
push
inc
and
and
and
push
jl
popa
pop
cs
arpl
retf
call
mov
pop
add
or
xchg
inc
xor
rcl
push
aam
test
add
mov
sub
mov
cmp
ss
push
idiv
sar
scas
sbb
push
test
push
pop
inc
mov
xchg
jo
pop
and
mov
or
adc
mov
cmp
sbb
add
add
or
ret
test
inc
and
and
lea
pop
test
or
aaa
out
xchg
stc
mov
sub
mov
adc
push
fwait
push
ins
cmp
movs
inc
push
and
stos
push
test
pop
sub
xchg
push
jne
mov
adc
mov
jo
xchg
out
cmps
mov
rcl
shr
cmp
mov
sbb
or
(bad)
pop
(bad)
cld
inc
inc
dec
div
cmp
mov
lods
dec
dec
pop
push
or
push
xchg
rcl
sub
add
arpl
push
shl
mov
inc
add
int
hlt
push
xchg
cmps
push
dec
dec
ret
push
adc
adc
and
dec
adc
sub
inc
jmp
adc
bound
iret
add
sub
iret
xchg
and
jl
inc
mov
add
push
dec
arpl
and
xchg
fwait
inc
mov
mov
and
xor
mov
add
or
dec
jmp
push
dec
pushf
and
fnstenv
pop
inc
rcl
pop
push
(bad)
ss
add
push
pop
and
int
cmp
and
rcl
mov
push
push
jl
and
xchg
xor
outs
(bad)
xlat
std
test
shl
sub
xor
xor
xchg
mov
inc
push
sub
dec
hlt
cmps
or
mov
imul
push
jb
push
jnp
int3
mov
mov
in
add
pushf
push
push
movs
dec
les
sub
and
xchg
inc
and
and
sub
lods
test
pop
cmp
pop
adc
inc
(bad)
(bad)
push
xchg
adc
lds
adc
sbb
and
fsub
or
dec
pop
push
push
mov
add
pop
xor
mov
stc
sbb
arpl
inc
push
mov
adc
je
jb
adc
push
push
sub
fwait
ret
addr16
pop
mov
lock
add
or
mov
pop
in
xchg
sbb
mov
dec
xchg
loope
and
sub
or
sub
sub
sub
xchg
and
add
in
das
add
add
mov
and
inc
les
int3
mov
cmp
pop
push
les
add
cmp
loopne
add
and
jo
or
sbb
xor
or
inc
cwd
adc
push
push
push
and
or
mov
or
add
xlat
daa
inc
je
dec
jbe
fmul
xor
pop
jb
pop
inc
mov
nop
fmul
stos
push
or
xchg
(bad)
cmp
xchg
or
ret
inc
test
add
add
sar
das
or
mov
add
or
shl
sbb
ret
js
xor
test
xchg
out
pop
push
sbb
sbb
xor
call
ss
xchg
mov
adc
ja
inc
shl
sbb
pop
adc
arpl
jo
bound
sbb
dec
adc
mov
mov
push
std
or
xor
and
test
jne
repnz
scas
std
add
add
or
push
or
add
sbb
sbb
cmp
in
sub
stos
and
jecxz
ret
stos
xor
cmp
loop
xor
and
xchg
hlt
aaa
(bad)
push
jbe
lock
test
push
fnop
hlt
add
adc
pop
pop
mov
push
leave
movs
repnz
test
and
mov
pop
jg
ins
sub
jae
push
jne
or
rcl
adc
jp
fisub
pop
and
adc
sub
mov
jle
aaa
mov
sub
inc
cmp
rcr
and
jmp
jns
add
shl
xor
andps
ja
push
xchg
add
bound
inc
xor
and
leave
or
sti
je
call
(bad)
leave
(bad)
imul
mov
mov
test
or
and
xchg
jecxz
idiv
aad
std
xor
ror
jne
and
dec
enter
repz
nop
mov
adc
pushf
xchg
lds
bound
mov
lea
mov
cmp
dec
mov
push
jns
loop
xor
pop
ss
pushf
push
je
jle
jmp
retf
and
inc
cmp
adc
inc
sbb
inc
sbb
cmp
xchg
dec
add
lock
in
adc
mov
sti
mov
push
ret
gs
scas
mov
outs
adc
xor
mov
jo
dec
and
inc
and
popa
mov
dec
test
fcom
int3
or
xchg
retf
mov
test
add
push
and
cdq
inc
or
call
jl
inc
sbb
dec
cwde
es
push
or
adc
test
jae
pop
jbe
ja
dec
adc
cmp
mov
or
movs
rol
jo
sti
loope
mov
pop
xor
mov
jo
add
lahf
push
mov
(bad)
retf
or
ret
mov
or
jae
fnstenv
cld
and
and
lea
out
leave
push
or
xor
pop
and
cmp
jle
and
cwde
push
leave
ret
in
call
scas
js
leave
jnp
call
adc
sti
and
push
adc
sbb
je
ins
or
cwde
jnp
fisubr
sar
push
sar
jno
or
rol
mov
inc
pop
adc
int
into
push
sbb
fisub
push
jne
int3
push
repz
add
add
jo
cmps
jl
push
stos
cmp
xchg
inc
push
stc
or
popa
add
xchg
je
push
add
or
nop
adc
mov
xchg
mov
into
add
mov
test
rcl
adc
stos
imul
mov
stos
jge
mov
rol
sbb
call
movs
adc
lods
repz
test
inc
mov
xchg
movs
dec
and
movs
movs
(bad)
xchg
js
test
not
fdivr
push
xchg
stos
aad
xchg
or
xor
loope
inc
xor
outs
mov
iret
cmp
and
cmp
inc
imul
sbb
push
test
push
xor
(bad)
test
push
mov
leave
rcr
call
mov
clc
add
and
jle
xchg
xchg
push
push
fs
add
lods
xchg
mov
call
outs
xchg
call
mov
dec
adc
add
div
dec
mov
stos
or
add
imul
mov
or
xchg
mov
sbb
xchg
je
loope
jns
cld
js
cmp
mov
fisttp
add
shl
dec
aam
add
push
pop
imul
adc
add
xchg
mov
lea
mov
loopne
outs
cmp
push
mov
xchg
mov
loopne
mov
sbb
hlt
pop
adc
xchg
xor
shl
push
jo
and
cmp
retf
push
movs
lds
sbb
add
ret
or
cmp
mov
or
retf
xchg
push
jge
adc
xor
add
push
xor
(bad)
dec
leave
fsubr
dec
xor
int3
adc
loopne
cwde
dec
sbb
js
xchg
xchg
mov
movs
push
adc
daa
dec
sbb
shr
add
sbb
push
lds
ror
lods
mov
clc
mov
cmps
aaa
xchg
inc
push
adc
aam
pop
dec
jle
fisttp
ins
add
sbb
call
sbb
xor
imul
(bad)
leave
or
or
cmps
sub
fs
xchg
inc
into
movs
inc
mov
xor
shl
cmp
adc
sbb
and
push
push
cmps
sti
and
sub
rol
push
aas
dec
aam
test
and
sub
xchg
imul
dec
pushf
jmp
mov
fs
fdiv
pop
adc
jle
daa
sub
jmp
add
out
popa
inc
mov
xor
mov
xor
and
out
(bad)
cmps
pop
adc
out
imul
xor
lahf
dec
mov
push
push
push
inc
push
leave
cmp
test
inc
add
sbb
dec
adc
jmp
push
xchg
popw
mov
pop
or
test
test
rcl
lea
jmp
jb
and
mov
fild
lods
jl
xchg
sbb
or
or
fldenv
xchg
or
adc
dec
mov
add
jb
or
pop
and
jmp
jns
add
jg
pop
sar
movs
and
sub
push
add
sbb
push
aaa
add
add
add
mov
aaa
xchg
jnp
loope
jle
push
and
mov
mov
and
xchg
or
xor
xor
cmps
add
loop
and
xor
cmps
sbb
movs
or
in
test
or
xor
in
scas
into
and
ror
xchg
adc
jbe
mov
aad
pop
pop
and
inc
pop
cmp
fiadd
push
(bad)
mov
nop
cmp
jno
add
cmovnp
loop
dec
jmp
add
and
sbb
(bad)
int
push
jmp
mov
jbe
or
and
mov
es
jmp
xor
cmc
rcr
dec
iret
fs
pop
xor
arpl
xor
in
jnp
ins
arpl
inc
push
gs
inc
out
pushf
add
test
push
cmp
xchg
inc
mov
jp
sub
push
jl
bound
or
dec
jecxz
pop
push
inc
xchg
mov
push
movs
xor
adc
fs
mov
mov
and
cmps
adc
xor
mov
fild
mov
pop
jl
or
mov
sub
add
xchg
adc
bound
sahf
xor
mov
push
loopne
mov
xor
xchg
push
lods
and
das
add
push
inc
(bad)
(bad)
mov
(bad)
add
out
scas
jmp
or
out
inc
cmp
mov
and
lea
imul
lods
jge
cmp
sbb
sub
push
adc
inc
ss
push
repnz
add
sub
sbb
xor
jmp
ror
ins
ds
inc
push
jmp
out
mov
shr
mov
ins
push
mov
inc
dec
mov
mov
dec
add
sbb
and
cmp
iret
sub
inc
sbb
sub
dec
dec
push
mov
inc
adc
inc
pop
popa
mov
and
test
push
jecxz
je
imul
and
sbb
cmp
inc
pop
add
fdiv
inc
pop
nop
les
shl
push
bound
and
xchg
(bad)
sbb
push
or
std
push
inc
xchg
xchg
or
pop
push
dec
loope
add
jo
ins
imul
xchg
lods
inc
mov
je
or
mov
mov
xor
rcr
add
or
dec
fidivr
test
and
add
or
pop
and
and
sub
add
inc
cmp
pop
or
mov
add
lods
jmp
retf
leave
aam
fs
inc
and
dec
inc
jle
mov
inc
movs
sbb
js
pop
sbb
and
call
popf
aaa
push
cmp
add
push
adc
inc
add
sbb
dec
sbb
lock
jp
int
mov
push
jb
or
int3
xor
test
enter
pop
repnz
inc
addr16
mov
cmp
adc
jne
mov
adc
and
inc
push
sub
sub
push
xor
xor
movsx
xor
jo
(bad)
ror
hlt
rol
lock
jnp
clc
daa
out
dec
ins
movs
adc
cmp
mov
sbb
mov
ins
fdiv
inc
loopne
mov
or
jge
loop
nop
mov
test
xor
or
adc
mov
cs
pop
fcomp
cdq
push
inc
outs
push
jl
cmp
add
in
cwde
push
fs
das
xchg
mov
push
cmps
lock
inc
xchg
sub
push
add
push
sbb
jae
cmp
fwait
test
sbb
add
pop
scas
nop
outs
mov
inc
add
and
push
dec
push
inc
mov
popa
xchg
mov
mov
and
leave
mov
push
cdq
rcl
xor
cdq
xchg
out
pop
jg
je
sub
nop
push
push
iret
aad
jns
push
test
es
cs
push
aas
je
add
or
inc
mov
ret
push
or
pop
out
xor
pop
or
dec
push
push
or
mov
sub
fstp
pop
push
sbb
push
and
mov
adc
jmp
dec
lods
dec
ins
mov
ins
and
test
jmp
adc
repnz
shl
cmc
(bad)
movs
mov
sub
inc
lods
sbb
jno
sbb
fstp
mov
(bad)
inc
add
push
iret
repz
push
fisttp
push
repz
cmps
mov
cmps
stc
add
test
cmp
out
cmp
or
loopne
cmp
cmps
xlat
pop
loope
scas
loope
imul
call
shr
jb
test
sar
stc
or
pop
push
out
out
cwde
sahf
out
fisubr
int
ds
repz
or
xchg
out
cmp
in
pop
dec
repz
in
jmp
out
pop
lahf
cmps
stc
cmp
cwde
fisubr
out
xor
out
out
imul
mov
add
es
sahf
out
jo
mov
int
jmp
jmp
xchg
sbb
xor
push
adc
xor
push
add
stos
clc
add
cdq
mov
push
pop
push
pop
push
out
inc
sbb
fisub
test
imul
jb
or
push
fnstsw
mov
retf
cdq
mov
call
imul
ins
mov
mov
imul
imul
inc
inc
pop
push
mov
stos
sbb
xchg
hlt
push
shl
mov
cmps
add
inc
push
dec
and
sub
or
fadd
inc
imul
sub
inc
push
inc
dec
or
xor
xor
add
inc
loope
daa
xchg
push
pop
call
pusha
inc
mov
fidiv
mov
adc
cmp
push
push
mov
sbb
add
jmp
jge
xchg
imul
or
scas
cmp
push
imul
or
or
add
cmp
push
sti
cmp
mov
pusha
(bad)
dec
or
mov
(bad)
and
push
add
inc
cmps
fld
retf
xor
pop
aad
inc
jge
(bad)
inc
xor
push
jl
mov
sbb
sbb
je
cdq
inc
cmp
jmp
movs
movs
xlat
call
cwde
pusha
rol
lods
add
(bad)
or
xor
and
es
arpl
je
mov
xchg
push
jnp
test
lds
cmp
aas
cmps
push
addr16
inc
pop
dec
cmps
sub
imul
push
xor
pop
or
pop
or
lds
adc
call
out
loope
scas
push
xlat
out
ins
scas
and
pushf
inc
jmp
les
dec
jmp
or
ret
imul
or
jp
fiadd
sar
inc
out
xor
adc
les
dec
inc
aas
adc
pusha
dec
dec
pop
push
lods
jne
adc
pushf
dec
mov
pushf
mov
sub
push
ret
pop
sub
mov
outs
adc
xchg
add
pushf
inc
sbb
push
dec
sub
mov
xchg
xchg
and
int
push
(bad)
sti
sbb
hlt
dec
push
std
mov
inc
dec
xor
in
and
sub
add
dec
inc
jne
retf
xor
add
adc
sbb
(bad)
add
mov
mov
cmp
adc
mov
add
mov
add
sar
xchg
lods
adc
pop
fidivr
loope
and
push
rol
rcl
cmp
rol
add
mov
lods
pop
arpl
push
add
xchg
fstp
mov
retf
and
dec
or
scas
fcom
sbb
adc
dec
adc
fwait
sub
ret
rol
adc
stc
jo
js
adc
call
mov
adc
mov
lods
pop
adc
ud2
repz
adc
jae
in
mov
int
sbb
lods
std
adc
out
xchg
mov
adc
daa
jne
fild
dec
les
rcl
ret
cmps
or
mov
shr
or
dec
ror
push
(bad)
rep
or
inc
mov
or
test
cmp
popf
and
jle
(bad)
mov
pop
and
mov
ja
xchg
inc
cmp
arpl
push
cmp
rcr
mov
jg
das
push
js
xor
pop
popf
mov
and
add
dec
daa
(bad)
pop
cmp
cmp
or
push
cmp
pop
sub
inc
and
pop
push
ss
push
mov
xchg
call
iret
add
dec
lods
and
push
dec
inc
jmp
sbb
stos
adc
loopne
fdiv
lock
pop
mov
xor
adc
jbe
mov
pop
jle
jns
sub
add
fiadd
test
push
fucom
or
pop
xchg
and
fisub
and
push
fucomp
sbb
mov
xor
add
sbb
icebp
or
add
and
add
xor
cs
xlat
js
sbb
into
sbb
shl
ret
inc
pop
sub
fst
inc
fxch
inc
push
es
fidiv
mov
push
cmc
jmp
pop
fwait
cmp
pop
or
and
xor
sbb
je
add
je
lea
mov
sbb
mov
adc
push
les
nop
xchg
mov
mov
push
inc
enter
push
or
sub
sbb
push
(bad)
jae
sub
loope
sub
retf
adc
xlat
dec
sub
add
push
ret
cmp
add
gs
mov
retf
pop
pop
jmp
sbb
inc
fcomp
xchg
or
add
dec
push
or
fadd
pop
shr
add
push
or
daa
popa
pusha
jle
and
push
icebp
jno
cmp
inc
arpl
jo
movs
fld
popa
in
fcomp
dec
push
sbb
sub
and
lods
out
add
inc
xchg
add
xchg
retf
sbb
dec
retf
sbb
std
sbb
popa
mov
inc
and
xor
add
mov
xchg
sbb
and
sbb
inc
or
lock
cmc
sub
sbb
mov
adc
test
inc
inc
mov
adc
push
scas
sub
jg
pop
and
push
lea
sti
out
mov
je
sbb
lea
mov
mov
fwait
lods
xchg
fsub
inc
sub
scas
in
push
mov
das
adc
inc
xchg
xor
ins
pop
cmp
cmp
fimul
jp
mov
in
xor
dec
cmp
lea
iret
cmps
cmp
pop
push
xchg
or
sbb
lds
pop
sub
pop
loop
sahf
retf
cmp
pop
cmps
dec
xor
push
mov
pop
aaa
lea
inc
adc
adc
jbe
dec
(bad)
mov
mov
xchg
in
xor
adc
add
xor
pop
mov
imul
xchg
sbb
add
lods
loope
push
push
xor
add
add
push
pop
shl
sbb
shl
sbb
mov
push
loopne
or
jmp
add
sub
or
pop
ja
ror
loope
dec
fisttp
add
inc
stc
dec
add
leave
cmp
xchg
and
out
inc
push
or
mov
dec
sub
mov
push
sub
mov
lahf
(bad)
dec
inc
leave
sbb
js
pop
jge
and
add
inc
std
pop
ret
add
sub
adc
rcl
sub
pop
pop
push
loop
mov
or
dec
lds
or
pop
shl
in
daa
mov
pop
jo
call
mov
xor
push
and
adc
into
mov
jmp
or
ret
pop
popa
xchg
add
jae
(bad)
loop
cmps
push
enter
add
bound
and
movs
cmc
xor
jnp
push
or
arpl
loope
push
inc
sbb
into
aad
add
mov
or
and
movs
out
mov
mov
lods
add
test
adc
sub
sahf
int3
mov
sbb
dec
pusha
outs
mov
and
rol
cmps
nop
mov
pusha
xchg
xchg
adc
dec
push
push
(bad)
push
jmp
adc
arpl
and
jle
xor
mov
add
cs
unpcklps
pop
rcl
push
jo
pop
cmp
in
adc
adc
pop
push
push
add
mov
adc
jl
sub
push
inc
pusha
setnp
xor
push
inc
or
push
sbb
push
pop
mov
inc
out
out
xchg
or
pop
dec
js
cmp
mov
shr
cwde
cdq
inc
test
mov
aad
mov
dec
pusha
and
enter
or
and
stc
test
cmp
mov
adc
mov
nop
jne
fsubr
std
test
inc
push
push
xchg
push
pop
and
pop
xchg
adc
ficomp
mov
std
je
sahf
cmps
stc
push
or
push
dec
sub
jns
out
pushf
shl
(bad)
ins
call
mov
inc
inc
scas
add
and
adc
mov
sbb
push
pop
shr
les
sub
icebp
adc
sbb
and
pop
push
adc
add
(bad)
das
lods
and
mov
in
cs
sub
fadd
jbe
or
dec
push
push
cli
inc
mov
mov
out
xchg
cli
or
pop
mov
push
push
jecxz
aad
call
or
js
mov
xchg
add
sbb
dec
rcl
add
or
scas
or
mov
inc
xor
dec
clc
pop
inc
mov
cmp
push
adc
inc
nop
cmc
mov
jle
int
push
mov
(bad)
jnp
cmp
cmp
sbb
xor
mov
out
pop
mov
rcl
mov
jo
inc
pop
and
add
mov
nop
inc
out
ss
add
xor
arpl
mov
mov
ret
ror
dec
xor
fisttp
xchg
fs
ret
adc
mov
add
cmp
shl
(bad)
movs
adc
or
adc
shl
cld
aaa
loopne
ror
push
adc
push
xor
add
dec
lock
push
mov
aas
shl
xchg
push
test
movs
inc
clc
adc
cs
movs
adc
add
fldcw
pop
test
xor
mov
aam
adc
mov
sub
dec
cmp
(bad)
xor
inc
dec
clc
movs
sti
push
dec
mov
pop
xor
(bad)
sbb
xchg
lods
repz
add
push
sbb
adc
pusha
jge
push
or
adc
gs
dec
call
xor
addr16
jne
mov
xchg
push
adc
(bad)
jne
or
mov
sbb
push
in
ss
xchg
into
pusha
vpsubsb
pop
movs
aam
xor
stos
sub
mov
arpl
int3
pop
call
je
mov
movs
lods
mov
xchg
sub
sbb
lock
add
sbb
mov
xor
das
push
dec
inc
inc
ins
push
call
dec
inc
jecxz
or
inc
xchg
movs
add
lods
imul
mov
adc
outs
aam
sbb
cmc
add
or
sbb
mov
gs
and
xchg
add
pusha
xlat
lock
pop
and
xlat
lods
xchg
jne
or
test
(bad)
out
sub
dec
cmp
push
dec
mov
in
shl
push
push
out
and
mov
popa
add
adc
movs
push
cmp
mov
jmp
inc
in
fnsave
sub
adc
mov
and
ret
out
push
and
sbb
or
ficom
cmp
cdq
cwde
sbb
pusha
or
pop
inc
xor
push
popa
addr16
push
push
and
shl
iret
push
and
pusha
nop
mov
mov
add
mov
sub
cwde
inc
cmp
aas
fs
and
cld
fisubr
fld
jl
das
pop
mov
ret
sbb
and
loopne
push
adc
xchg
xchg
ins
mov
push
and
mov
sub
je
scas
das
movs
or
and
test
clc
jle
pminub
mov
adc
mov
push
jmp
stos
dec
imul
loop
test
dec
sbb
xchg
add
addr16
push
fisttp
dec
mov
sbb
cdq
cmp
adc
scas
test
or
push
add
dec
sahf
aas
es
retf
icebp
adc
inc
sbb
jno
push
unpckhps
dec
mov
shl
xchg
push
fdivr
xor
and
push
push
stc
push
aad
sub
xchg
jecxz
fld
pop
jp
sub
inc
and
xor
add
cmps
push
mov
cmp
push
stc
add
jmp
lahf
push
popa
pusha
mov
or
loop
dec
add
ds
jp
push
xor
in
pop
gs
and
inc
mov
pop
cmps
jno
pop
lea
rol
mov
or
mov
pop
in
or
retf
rol
sub
mov
(bad)
cld
adc
push
mov
popf
inc
sub
inc
cmps
or
iret
imul
pop
movs
fist
(bad)
push
sub
inc
or
sub
jmp
adc
or
in
cmp
jp
mov
aas
mov
adc
pop
sbb
add
xor
push
sbb
cmp
sbb
pusha
ror
xchg
call
rcl
lea
sbb
jo
xor
rol
inc
js
das
jmp
sub
sar
rcr
dec
adc
dec
sub
mov
shr
ror
add
daa
idiv
mov
jb
sub
rcl
into
xchg
test
xchg
push
mov
leave
cmp
adc
ins
adc
retf
repz
neg
dec
push
or
jb
sbb
sbb
adc
pushf
jmp
test
lea
push
jb
out
sbb
and
pop
lods
pop
and
adc
pop
out
pushf
jp
loope
popa
in
dec
xchg
dec
xchg
inc
sbb
loopne
pop
jb
sub
bound
jmp
adc
leave
or
jo
sub
adc
inc
xchg
push
dec
or
pop
or
xlat
leave
popa
pop
les
push
int3
add
xor
mov
loope
or
lods
jmp
cs
jmp
mov
mov
inc
dec
add
sub
sbb
enter
push
test
mov
jno
or
inc
push
jnp
retf
rol
jle
jmp
xor
xchg
(bad)
cs
mov
jmp
jmp
movs
xchg
and
adc
shl
out
xchg
jmp
add
add
adc
ss
dec
aam
or
mov
and
(bad)
push
lea
xor
xor
cli
dec
xor
mov
jmp
mov
hlt
adc
dec
int
mov
call
(bad)
push
imul
mov
jo
dec
cmps
mov
jnp
out
dec
aas
pop
cmc
cmp
jbe
sub
jbe
cmp
push
and
push
mov
pop
pop
jae
inc
mov
imul
imul
enter
mov
(bad)
inc
add
push
inc
jmp
xlat
inc
push
(bad)
sub
jle
test
les
mov
mov
add
add
inc
inc
mov
movs
push
mov
xor
inc
adc
jmp
mov
nop
clc
mov
push
cmp
xor
or
push
adc
dec
adc
dec
add
push
dec
add
push
aam
std
sub
or
adc
fmul
cmp
movs
adc
or
adc
sti
jbe
dec
jne
inc
cmp
or
adc
adc
push
push
jge
xchg
xor
sbb
ret
dec
adc
push
xor
fadd
test
add
shl
inc
inc
jno
fisubr
push
jbe
enter
inc
mov
jmp
sub
dec
push
jle
(bad)
dec
test
jno
jp
std
loop
inc
fs
sbb
push
lock
ins
jge
sti
jmp
push
inc
push
mov
mov
(bad)
mov
xor
repnz
mov
mov
sbb
test
imul
ret
cmp
cmp
add
test
add
sbb
push
push
add
add
test
cmp
test
mov
cli
lea
mov
sbb
and
mov
mov
mov
sub
call
pop
xchg
imul
push
loope
pop
cld
cmps
add
or
movs
cs
adc
dec
add
jl
jmp
mov
cmps
or
movs
movs
adc
pop
mov
fimul
jp
imul
and
add
mov
inc
call
sub
push
cmp
lahf
add
inc
lods
jne
aad
cmp
dec
hlt
movs
aam
psrlw
sbb
lods
popf
push
jg
cmp
test
out
sbb
jns
rcl
(bad)
jb
sub
sahf
and
jle
add
xchg
sub
(bad)
xlat
pusha
inc
push
or
loop
pand
ret
sar
adc
loope
mov
jmp
and
pop
mov
je
sub
lock
xchg
and
inc
and
mov
mov
pop
jno
jo
inc
mov
xor
ja
dec
(bad)
sbb
push
jmp
cmp
mov
inc
add
jno
mov
nop
push
sti
dec
mov
adc
ffreep
pop
fcom
inc
push
arpl
xor
rol
icebp
aam
nop
into
mov
stc
cld
jno
pop
adc
js
lods
rol
loopne
sub
inc
iret
or
stc
add
sub
js
push
sub
rcl
nop
cmps
test
ins
lods
cli
dec
jl
(bad)
jmp
add
or
das
sub
add
mov
pop
fidivr
dec
shl
add
mov
cdq
aam
jo
dec
dec
adc
mov
xor
das
push
dec
jl
sub
and
and
cmps
jl
jno
and
popa
bound
xchg
push
pop
cmp
sbb
ss
jne
ror
mov
rol
pop
cmp
sub
mov
xor
add
fs
jp
dec
inc
cs
add
loopne
sbb
or
or
mov
sbb
push
xchg
loopne
cmp
inc
sub
push
inc
pop
cmp
stc
inc
jp
push
cmp
popa
and
inc
dec
mov
mov
mov
pop
adc
dec
pop
or
adc
add
cmc
and
lea
push
xor
aas
and
xor
inc
loop
sbb
sbb
ja
or
or
mov
or
push
or
push
pop
add
scas
(bad)
sbb
or
xlat
push
in
and
dec
jmp
sub
xor
loope
jge
das
xor
add
cld
retf
sub
retf
(bad)
sar
dec
movs
(bad)
jecxz
xchg
pop
mov
add
adc
mov
adc
sub
add
sbb
push
push
dec
jmp
fisubr
mov
in
or
movs
std
or
xchg
xor
jp
je
cli
and
mov
add
movs
or
push
pop
cmp
fisubr
inc
dec
sbb
in
xchg
mov
push
ds
enter
cwde
cmp
mov
fwait
inc
mov
inc
aas
xor
(bad)
ret
test
(bad)
or
cmc
popf
push
ficom
rcr
jo
es
es
and
cmp
push
adc
lock
cmp
mov
inc
es
leave
xor
cmp
loop
cs
and
xlat
cmp
les
in
or
rcr
test
jmp
test
dec
jnp
retf
push
xchg
outs
push
int3
ficomp
push
add
bound
clc
push
and
pop
push
fild
inc
sti
idiv
add
or
ffree
adc
sub
cmp
lahf
mov
sbb
push
fnsave
adc
push
jge
cmp
xchg
xchg
mov
mov
ret
aad
inc
not
call
jge
and
add
push
xor
xchg
bound
loop
mov
and
adc
adc
popa
xor
push
(bad)
ds
and
xor
push
adc
mov
fild
add
out
fadd
je
addr16
repnz
adc
add
dec
movs
ja
jecxz
inc
inc
xorps
loope
popa
cs
jp
dec
inc
fidivr
ins
je
inc
xchg
mov
push
mov
cmp
push
add
fbstp
mov
iret
dec
push
add
mov
pop
imul
ss
dec
add
inc
adc
std
inc
jmp
ins
js
outs
inc
jl
arpl
push
push
add
popa
sbb
mov
push
mov
xchg
lock
or
push
inc
or
push
cwde
ins
int3
js
dec
inc
cmp
inc
stos
ja
cli
cmp
dec
nop
jo
xchg
push
and
test
xchg
clc
rcl
push
lock
push
dec
cmp
xor
aaa
ds
xchg
jmp
push
xor
and
and
pop
inc
mov
cmps
leave
or
inc
ss
sbb
add
cmc
inc
div
test
dec
retf
fdivr
sub
call
mov
adc
pop
in
fild
sub
je
adc
jo
rol
pop
sub
push
adc
pop
dec
push
dec
push
add
je
sub
add
push
jmp
push
retf
push
xlat
jmp
add
data16
xchg
jbe
add
jnp
and
retf
pop
inc
add
xchg
mov
xchg
cdq
fld
add
and
add
icebp
xchg
push
push
mov
add
dec
sbb
inc
imul
ss
pusha
(bad)
sbb
out
push
pushf
add
xor
cmp
ds
pop
sub
add
dec
loopne
je
add
jmp
add
xor
(bad)
mov
xor
sbb
jae
adc
adc
enter
ret
adc
hlt
add
pusha
push
gs
nop
fiadd
mov
test
sbb
imul
sub
in
mov
inc
mov
jg
cmps
bound
pop
inc
sub
xor
dec
mov
add
or
sub
arpl
cmp
pop
pop
jmp
cmp
or
loopne
adc
push
dec
adc
dec
adc
sbb
sub
je
xor
inc
lods
dec
bound
xchg
and
jns
cmp
push
not
cmovg
ins
push
adc
mov
push
or
test
xlat
add
and
ja
or
ins
mov
dec
jo
mov
sbb
test
cmps
cmps
pop
sub
mov
retf
loop
or
icebp
sub
dec
hlt
jnp
add
mov
jle
adc
call
add
shr
sti
mov
jl
inc
mov
mov
cmp
inc
int
mov
lock
mov
and
sbb
push
mov
in
jmp
mov
das
sub
fstp
jle
lods
xor
outs
dec
cmp
in
cmp
adc
add
pop
adc
lahf
rol
xadd
dec
pop
or
sub
add
cmp
movs
lea
mov
repz
adc
pop
sahf
sub
mov
fdivr
out
add
pop
ja
sbb
sbb
icebp
adc
(bad)
outs
dec
mov
test
ss
test
push
cmp
xchg
mov
push
das
push
lea
dec
xchg
sbb
and
and
test
sub
movups
ins
xor
icebp
ror
adc
cmps
imul
and
out
adc
jl
xor
shl
aas
cdq
add
adc
sbb
adc
pop
popf
jae
adc
pop
inc
lsl
(bad)
fnstcw
fiadd
and
push
xor
imul
and
daa
xchg
xor
jb
pop
push
ror
mov
(bad)
fcomp
mov
dec
or
push
or
add
pop
test
jns
inc
ror
ins
test
mov
adc
popa
mov
adc
add
xor
pop
mov
mov
mov
and
add
sbb
ss
jbe
mov
popa
cmp
test
add
retf
dec
mov
popa
xchg
mov
cmp
cmp
lea
mov
test
daa
push
xor
mov
dec
cmp
cmp
xchg
xor
push
jbe
in
ins
mov
loopne
test
inc
shl
ins
sub
cmc
mov
mov
mov
lods
inc
(bad)
add
imul
cmps
or
push
pushf
push
aad
pop
fstp
jbe
mov
jmp
jae
xor
add
add
ret
arpl
imul
sbb
ret
(bad)
add
shl
add
dec
sbb
call
fwait
test
mov
mov
dec
(bad)
sbb
mov
mov
neg
xchg
pusha
js
and
mov
or
cs
push
pop
shl
cmp
push
dec
add
movs
movs
rcl
add
dec
sub
xchg
retf
xor
jo
outs
jnp
sub
ins
mov
dec
dec
bound
pop
das
inc
push
repz
and
mov
cmp
xlat
inc
test
jmp
fstp
sbb
add
mov
and
add
imul
push
and
push
(bad)
ret
stos
in
cs
(bad)
and
dec
add
push
push
jmp
das
push
enter
es
ds
add
inc
retf
xor
lea
or
sub
mov
sbb
add
xor
and
mov
adc
add
nop
int
retf
push
push
push
push
cmp
ret
mov
adc
sub
mov
rol
inc
call
add
push
scas
sub
pusha
inc
mov
ret
scas
stos
inc
add
adc
push
ror
outs
and
and
sar
push
stc
add
pop
(bad)
add
movs
out
add
pop
sbb
inc
aam
or
and
jb
add
enter
cmp
and
push
jmp
movs
mov
cli
xchg
and
movs
adc
mov
sub
sbb
dec
(bad)
or
or
sbb
jmp
xor
test
pop
lahf
fimul
and
sub
lea
or
fstp
jmp
xchg
fwait
add
scas
jne
test
out
push
or
jbe
rcr
sbb
adc
adc
pusha
cmp
pusha
or
sbb
mov
push
add
jb
ret
xlat
inc
add
sbb
jo
push
cmp
or
xor
in
fild
add
icebp
add
xchg
adc
fdiv
mov
inc
pop
jbe
test
mov
pushf
mov
(bad)
and
sbb
adc
fild
pop
jb
mov
fadd
clc
xchg
out
sub
adc
adc
jnp
jne
push
adc
adc
push
add
lock
adc
mov
icebp
call
pop
(bad)
push
loopne
adc
enter
rcr
ret
sub
retf
adc
aaa
fisttp
cwde
cmp
das
adc
ror
jl
repnz
mov
jae
fstp
adc
adc
fs
add
and
xchg
mov
iret
push
cmps
dec
mov
sbb
mov
out
xchg
inc
mov
imul
les
dec
jo
cli
ficom
adc
add
data16
inc
and
imul
scas
xchg
(bad)
arpl
cmp
and
in
add
repnz
inc
sub
pusha
pusha
inc
loop
xchg
and
adc
rol
pop
iret
xor
in
mov
cmp
inc
sahf
or
or
mov
pop
dec
xor
sub
clc
xchg
pop
or
cdq
enter
jl
push
add
xor
lods
mov
fs
xor
adc
xor
mov
xlat
rol
inc
inc
jb
rcl
inc
jnp
sbb
push
inc
add
(bad)
jb
or
ja
cmp
jb
adc
mov
mov
push
or
jbe
add
cmp
mov
lods
rcr
out
(bad)
fidivr
fidivr
(bad)
xor
mov
or
sub
sub
inc
sub
push
dec
ins
push
jle
les
cmp
add
xchg
pop
in
fdivr
cmps
push
sar
scas
popa
(bad)
and
shr
mov
jae
sbb
dec
imul
dec
or
imul
stc
xor
je
test
fnstsw
jmp
and
cmc
xor
and
push
cmp
and
movs
pop
add
into
mov
or
or
sub
cmp
je
test
jmp
xor
or
xor
add
inc
sub
mov
push
or
(bad)
or
(bad)
adc
and
sub
push
sbb
sbb
adc
dec
mov
push
(bad)
dec
fisubr
mov
jnp
add
aaa
push
add
xor
fwait
shr
push
cmp
cwde
(bad)
fs
ret
push
hlt
inc
int3
cmp
xor
int
push
dec
out
aaa
sbb
mov
cmp
je
jbe
xchg
xchg
mov
xchg
or
or
xchg
vmovddup
dec
and
sbb
sbb
sub
loopne
cmp
cmp
inc
push
(bad)
xor
xor
pop
aam
sahf
pop
push
aas
push
inc
dec
add
cmp
loop
push
sub
or
xchg
or
add
jmp
xchg
movs
daa
push
mov
dec
adc
or
inc
pop
ins
push
add
or
jbe
in
xor
mov
and
clc
and
cmp
cs
cwde
add
push
sbb
and
cmp
mov
scas
fcom
push
mov
pop
test
xchg
rcl
jecxz
jmp
rcl
pop
dec
mov
cmp
(bad)
xchg
loopne
sub
sub
xchg
ret
and
push
jne
add
or
mov
ret
xor
movs
in
popa
sbb
dec
add
cmc
or
xor
xor
and
fisub
scas
and
aam
and
out
xor
and
push
pop
dec
sub
jmp
and
icebp
xchg
or
inc
sub
rol
fdiv
mov
rcl
loopne
scas
mov
jle
sbb
push
add
push
int
jne
dec
push
inc
adc
nop
jp
push
mul
sbb
dec
shl
icebp
jmp
xchg
xchg
or
pop
lea
xor
scas
hlt
or
inc
add
and
or
cmp
xor
xchg
mov
push
jns
sbb
and
and
dec
dec
loopne
mov
xchg
fadd
jne
push
(bad)
lods
cmp
push
pop
dec
inc
push
stos
push
adc
cmps
fs
cmps
adc
sub
ins
push
sti
sbb
out
push
sub
and
in
mov
sub
xchg
add
outs
sub
sbb
add
lea
inc
inc
jl
jae
add
push
pop
or
adc
push
push
and
rcl
and
dec
jno
aad
(bad)
scas
push
push
mov
movs
dec
clc
scas
push
adc
mov
adc
adc
daa
add
push
xchg
or
movs
fcmovu
inc
(bad)
and
rol
ins
jecxz
xor
inc
dec
cmp
inc
dec
adc
inc
(bad)
adc
sub
mov
test
sub
popa
das
adc
xchg
jne
sub
nop
push
jb
pop
or
xchg
add
adc
inc
jecxz
rol
std
dec
or
jp
int3
jbe
inc
dec
stos
test
inc
mov
inc
pop
inc
sahf
pop
add
imul
shr
mov
fs
cdq
pop
sub
xchg
jge
inc
jo
iret
xor
push
inc
add
jl
cmp
add
adc
(bad)
test
popf
xchg
imul
pop
xor
and
or
add
pop
xchg
push
mov
paddusb
adc
pop
scas
sub
test
(bad)
movs
mov
dec
dec
add
push
mov
sbb
sbb
push
xchg
or
dec
xchg
int3
push
add
push
and
push
leave
lods
(bad)
dec
and
aam
adc
dec
popa
jmp
sub
or
and
(bad)
ss
outs
xor
xor
push
adc
ret
xchg
daa
dec
inc
les
mov
and
sub
test
cmp
cpuid
loope
inc
add
add
nop
cmp
das
fs
sbb
data16
jne
repnz
or
and
nop
or
cmp
push
loopne
adc
sar
(bad)
mov
mov
inc
cmps
loopne
dec
cmp
pop
(bad)
test
sbb
scas
and
lods
imul
mov
cmp
and
sbb
imul
jp
popf
add
aad
push
dec
dec
push
aas
adc
or
int3
xchg
sar
pop
push
add
cmp
test
aaa
jae
js
in
mov
add
test
adc
retf
movs
jne
cld
sub
xor
sub
xor
fs
rcl
inc
jge
out
mov
sbb
pusha
mov
jle
or
push
inc
or
sub
sbb
cmp
daa
dec
push
add
cwde
int
out
jp
popf
cmp
jle
mov
dec
cmp
ror
mov
jl
sub
sub
and
lds
(bad)
fld
add
call
ror
add
and
jmp
adc
out
pop
and
imul
or
push
push
sub
push
fild
or
or
inc
sub
aad
xor
xor
rol
inc
jmp
ds
mov
inc
fldpi
push
and
push
add
dec
push
push
adc
sub
dec
retf
sbb
pop
sub
push
aas
or
jmp
in
lods
push
xchg
mov
imul
pop
push
push
push
or
mov
push
push
push
dec
out
add
inc
es
push
add
fwait
jb
dec
ins
add
sub
sub
adc
sub
xchg
add
inc
adc
sub
sub
xchg
and
cmps
xor
aam
cmp
add
cmps
mov
or
mov
mov
xchg
xor
mov
in
rcl
push
mov
ss
leave
adc
addr16
mov
sti
jae
add
cmp
ins
arpl
adc
cmp
or
clc
xor
mov
(bad)
js
aas
adc
inc
cmp
popf
(bad)
xchg
mov
dec
push
cmp
das
push
sbb
or
adc
dec
push
sbb
les
or
push
push
das
cmp
mov
ret
adc
mov
mov
test
mov
not
or
add
cdq
lea
fimul
outs
adc
sbb
xchg
adc
add
mov
add
popa
rol
mov
aad
push
pop
xor
add
pop
push
mov
test
dec
or
loope
adc
(bad)
call
jp
adc
fs
std
jmp
jge
jnp
cwde
push
data16
stos
and
add
jne
add
and
mov
add
int
jge
push
push
or
test
mov
sbb
mov
icebp
and
pop
mov
sbb
push
cs
sbb
add
jge
push
aam
dec
js
inc
push
cmp
sub
mov
pop
add
jo
and
arpl
sbb
adc
mov
xchg
inc
and
arpl
or
ss
call
je
std
ss
(bad)
je
shl
jmp
bnd
pop
fstp
fsub
dec
fist
xor
push
add
pop
pop
and
sbb
adc
adc
cmp
add
inc
jno
and
popa
mov
push
nop
mov
jno
test
xor
cdq
mov
mov
retf
cs
addr16
stos
inc
jecxz
dec
loopne
xchg
pop
add
sub
retf
shl
adc
mov
clc
ss
mov
or
nop
fild
in
je
cli
cmp
add
inc
mov
and
adc
ficom
lea
and
mov
or
call
jnp
movs
dec
test
shl
or
cmp
je
dec
inc
call
inc
push
sbb
ret
push
adc
or
add
mov
add
pop
js
or
cmps
dec
test
inc
inc
rol
outs
pop
inc
or
or
inc
mov
push
repnz
popf
xchg
xchg
add
add
loopne
xor
lds
cmp
cmc
dec
jo
dec
call
movs
dec
add
adc
ins
pop
cld
inc
add
sub
xchg
imul
pop
leave
inc
inc
jecxz
push
(bad)
xor
jne
cwde
inc
xchg
or
test
gs
outs
mov
jae
dec
jno
xchg
xor
mov
and
mov
mov
or
scas
movs
jl
hlt
inc
pop
scas
popf
xor
sbb
inc
cmp
sub
ret
retf
iret
pop
out
out
scas
cwde
cbw
jnp
inc
mov
mov
or
add
xbegin
or
enter
push
push
push
inc
add
and
adc
outs
xor
les
xchg
and
adc
rcr
mov
lea
push
add
mov
cmp
ins
loopne
inc
sub
xchg
push
retw
out
pop
adc
xor
xchg
or
popa
sub
push
xchg
fisub
test
inc
popa
cmp
mov
adc
pushf
daa
push
sbb
daa
push
test
or
retf
mov
jbe
jae
stos
push
mov
jb
pop
mov
inc
cdq
adc
push
sbb
push
fs
push
pop
mov
rcl
sub
add
in
iret
outs
push
dec
aas
outs
inc
mov
push
(bad)
sbb
dec
and
int
repnz
push
fbld
sub
shl
imul
jnp
fwait
pop
jmp
stc
pusha
nop
jo
adc
mul
dec
enter
inc
inc
jge
sbb
mov
jle
add
arpl
aam
dec
adc
inc
aas
pop
ins
ins
cs
cmp
xor
dec
movsx
inc
sbb
and
loope
mov
sub
dec
xor
jo
popa
add
dec
xchg
jns
dec
adc
icebp
pop
or
add
jns
test
xor
ret
mov
or
inc
mov
kmovw
scas
sub
adc
inc
ret
jae
sub
(bad)
pop
mov
and
dec
rol
ds
enter
and
(bad)
mov
cdq
jecxz
sti
ins
inc
icebp
inc
int
sti
arpl
pop
enter
jns
fwait
or
dec
pushf
cmovnp
imul
xchg
adc
add
ins
pop
adc
shl
mov
push
lock
add
stc
arpl
rcr
ja
mov
xor
dec
enter
test
inc
jmp
mov
add
sub
inc
cmp
push
mov
pshufw
clc
loope
jb
adc
sbb
and
ror
pop
sbb
aad
push
jae
xor
inc
loopne
inc
or
dec
cmp
cs
pop
push
(bad)
ins
retf
or
add
pop
fcom
add
pop
(bad)
or
stos
adc
imul
xchg
pop
dec
push
add
adc
es
or
or
jle
ror
ins
into
adc
jnp
add
cmp
mov
rol
or
pushf
ds
imul
add
stos
jns
sub
enter
jo
push
shl
imul
std
fst
mov
je
inc
push
cmp
stos
xchg
nop
sbb
mov
xchg
xchg
or
jle
xchg
jmp
popa
movs
and
popa
add
xlat
and
lds
outs
mov
cmp
or
sbb
ja
jle
test
push
test
cwde
push
pop
test
or
dec
nop
sar
outs
clc
adc
pop
or
test
add
dec
gs
push
and
movs
mov
lea
xor
ja
call
or
call
add
jl
dec
pop
ins
inc
add
stc
sti
ins
nop
out
pusha
ja
dec
xlat
push
mov
test
rcl
and
shl
inc
push
pop
mov
jne
ror
dec
cmps
adc
cmps
xor
or
pop
lock
cld
stos
ret
pop
cmp
fiadd
mov
cdq
arpl
pusha
sbb
(bad)
outs
stos
push
rcl
add
jmp
stos
and
and
sbb
cmp
int
ins
mov
pop
pop
xchg
xor
rcl
pusha
sub
ins
push
adc
ss
sub
scas
adc
mov
mov
test
push
ss
mov
push
dec
inc
dec
fwait
mov
ret
and
imul
outs
nop
xor
pandn
dec
outs
jae
mov
arpl
xchg
test
dec
loope
push
idiv
push
cdq
inc
push
stc
ins
not
and
xchg
ins
xor
int3
(bad)
mov
add
inc
imul
(bad)
bound
pop
xor
adc
test
add
fst
xchg
push
add
stos
mov
push
mov
fimul
jo
ja
scas
popw
pusha
jne
dec
lea
lods
push
or
push
mov
gs
jmp
adc
and
or
mov
pop
push
neg
imul
push
push
push
and
or
and
aad
push
rcl
imul
push
jb
imul
jge
push
repz
dec
add
or
push
sbb
ja
arpl
or
sub
dec
xchg
sti
daa
inc
and
mov
inc
xlat
data16
ret
(bad)
jmp
sub
sar
repz
add
adc
std
cmp
xchg
jne
dec
ret
rcr
test
mov
cs
fimul
in
adc
cmp
mov
xor
repz
push
and
jp
aad
mov
rcl
jmp
int
ret
pushf
xchg
mov
or
ins
dec
jmp
or
mul
js
mov
push
inc
xor
pop
mov
iret
repnz
shl
push
icebp
enter
rol
rcl
aam
loopne
mov
push
push
xchg
test
je
adc
mov
xchg
mov
cmp
loopne
mov
mov
rcl
lods
xor
mov
test
inc
push
aas
in
push
je
dec
inc
ins
cmp
adc
sbb
xchg
movs
or
and
cmp
sub
push
xor
sbb
or
lea
bswap
xor
adc
mov
and
dec
add
mov
xchg
rcr
sbb
cmp
jbe
adc
or
test
sub
fcomp
mov
add
mov
call
rol
lock
jmp
je
das
adc
pop
jp
pusha
or
sbb
repz
add
pop
imul
pop
shl
cli
adc
fldenv
imul
dec
cld
fs
mov
je
and
xchg
ss
pop
mov
sub
or
es
jo
xchg
mov
pop
jnp
add
xor
dec
shr
and
adc
jo
xchg
jo
ins
jb
or
and
and
sub
scas
dec
and
je
sub
mov
test
sub
or
adc
popa
add
add
adc
das
les
push
jne
adc
dec
sbb
push
xor
pop
mov
lds
cs
push
cld
push
ins
sub
fs
movs
dec
push
out
dec
call
add
mov
jl
shl
mov
daa
adc
inc
pop
push
ins
xor
inc
lods
pushf
ins
xor
cdq
dec
ins
sbb
adc
sbb
je
push
aaa
sahf
dec
ins
cmp
xchg
add
popf
(bad)
dec
jo
or
and
push
out
add
adc
inc
cmp
(bad)
ins
adc
add
push
inc
and
pop
xchg
popf
inc
mov
push
cmp
add
movlps
mov
repz
xchg
ficom
(bad)
aaa
or
sub
xor
dec
add
rcl
add
mov
jbe
into
fimul
mov
xchg
add
mov
adc
sub
hlt
sub
sbb
or
out
inc
pop
fdivr
xchg
mov
sti
sti
pop
test
xchg
icebp
sbb
(bad)
or
push
sbb
xchg
int3
push
ss
push
push
iret
push
cmps
dec
cmp
lods
push
gs
inc
int3
inc
push
movs
and
pop
call
mov
sbb
add
popf
mov
call
adc
sti
mov
(bad)
sbb
not
xor
jnp
dec
sub
push
lea
jo
push
(bad)
sbb
cmp
call
frstor
daa
lds
lea
cmp
arpl
jo
popf
out
dec
jmp
jmp
add
sub
clc
inc
rol
pop
adc
inc
push
dec
xchg
or
jl
jne
cmp
jns
dec
mov
mov
clc
add
adc
pop
mov
push
sbb
mov
mov
or
es
mov
rol
js
sbb
aam
es
mov
mov
stos
sbb
and
cmp
mov
xor
adc
add
and
fcomp
inc
es
fchs
pop
pushf
push
cmp
fld
dec
jl
adc
out
int
and
xor
push
ss
jns
aaa
cmp
cmp
cmp
outs
imul
mov
xor
xchg
stos
push
mov
nop
aam
mov
pop
stos
mov
es
out
out
js
jb
sbb
mov
push
push
ins
sub
lods
mov
xor
ja
add
mov
jno
xchg
add
repz
dec
xor
sti
in
inc
ins
push
mov
test
adc
and
in
daa
push
cmp
mov
movs
xor
sub
aam
imul
add
(bad)
mov
loopne
aam
inc
dec
imul
inc
jo
shr
ret
xor
add
into
pusha
ror
xlat
push
ins
sbb
fcmovnbe
push
xor
pushf
inc
scas
sbb
ins
push
and
push
mov
add
lods
xor
lds
(bad)
cmp
je
sbb
pop
mov
jp
pop
xchg
jne
rol
or
mov
dec
ret
sub
adc
or
sub
mov
mov
push
inc
or
maskmovq
popa
pop
retf
jmp
mov
fcom
imul
push
cmp
mov
leave
jno
shr
pop
pop
ins
jo
sub
xor
loop
or
sbb
inc
pop
or
add
and
push
ret
add
cdq
inc
int3
push
aaa
add
aam
add
pop
add
sub
movups
push
add
sbb
int3
add
gs
push
sbb
xor
or
jo
sar
cmp
xchg
mov
cmp
dec
aam
dec
and
leave
repz
push
push
adc
fcomp
aaa
iret
push
inc
adc
outs
gs
and
push
push
fldcw
mov
unpcklps
adc
mov
and
outs
dec
sub
adc
imul
test
inc
xchg
xchg
in
hlt
ror
push
add
pop
jne
pop
push
or
les
sti
jge
xchg
mov
mov
ror
scas
movs
rol
jno
mov
sub
xlat
mov
xor
lahf
adc
mov
into
sub
and
mov
adc
popa
mov
push
push
out
fld
sub
lods
cmp
das
fadd
test
rcl
sub
das
sbb
adc
sub
sub
cmps
cmp
jb
jo
sbb
xor
int3
pop
dec
aaa
sahf
cmp
je
fld
dec
imul
imul
mov
jbe
cmp
sub
aas
add
in
mov
and
imul
mov
fdivr
cmp
jae
push
add
add
adc
mov
inc
ret
cmp
mov
mov
xor
mov
and
sbb
inc
out
xor
mov
xor
xor
call
dec
test
nop
jl
and
xchg
adc
sub
loope
pushf
mov
imul
test
ret
repz
icebp
and
in
pop
adc
sub
sahf
mov
xor
xor
sub
sbb
jp
inc
cmp
stos
mov
pop
push
inc
push
test
nop
loope
mov
push
stos
pop
jmp
pop
or
and
ds
adc
pop
pusha
cmp
dec
pop
dec
push
loop
stos
cmp
mov
fist
jge
mov
mov
shl
(bad)
jne
into
add
xor
(bad)
loopne
mov
pop
push
xchg
arpl
mov
adc
mov
inc
cmc
std
mov
mov
retf
xor
cwde
push
jae
xlat
sbb
dec
ins
add
aam
xchg
push
pusha
arpl
push
clc
cmp
jge
mov
and
out
adc
inc
xchg
push
imul
add
or
call
xchg
or
mov
in
rcr
imul
fdiv
jl
aad
adc
nop
inc
or
cwde
in
lock
adc
add
pop
lods
mov
add
test
mov
in
loop
mov
rol
popa
add
push
lea
cmc
add
jmp
ins
pushf
aaa
pop
outs
sub
mov
pushf
pushf
inc
sbb
xor
dec
cmp
and
cmc
mov
inc
cmc
mov
gs
neg
ficom
mov
xor
popf
mov
jne
mov
xchg
push
inc
test
or
dec
xor
adc
les
push
addr16
retf
adc
(bad)
outs
fs
cmp
ja
jl
int
and
dec
hlt
dec
mov
xchg
iret
outs
mov
pop
jmp
lea
mov
cdq
cs
adc
pop
dec
sbb
sub
enter
pop
and
adc
pop
test
sbb
jmp
cmp
adc
jp
out
imul
ret
or
jb
or
cmps
int3
mov
and
or
ins
movzx
fcom
lods
jne
retf
pop
sbb
aad
xor
test
aas
and
and
int
fadd
jge
inc
arpl
mov
pop
jp
push
retf
popa
leave
test
add
ret
inc
popa
shl
sahf
fsubr
je
icebp
jmp
adc
out
sub
or
jle
in
and
jns
sub
inc
sub
add
push
repz
nop
or
cmps
add
nop
shl
push
lahf
mov
arpl
ins
movs
aas
inc
push
mov
sbb
push
lea
pop
fs
adc
sar
adc
pop
mov
pop
inc
inc
sbb
adc
cmp
por
xor
arpl
adc
out
pop
pop
ja
hlt
mov
xor
adc
adc
mov
mov
or
push
int3
les
pop
push
nop
fcom
mov
test
dec
mov
retf
adc
jmp
jmp
cmps
and
adc
aad
push
xchg
push
sub
mov
enter
fadd
test
aas
jne
sbb
adc
push
add
das
push
and
lahf
mov
xor
cmp
out
test
xor
je
or
mov
and
daa
test
shr
rcl
std
xchg
xchg
cmp
push
push
dec
rcr
mov
cmp
pop
sbb
mov
sub
push
lock
loopne
and
lahf
les
repnz
and
in
mov
bound
jno
fs
pop
stos
add
mov
fstp
mov
loop
inc
dec
push
adc
jb
sbb
pusha
(bad)
cmp
ss
sbb
xor
dec
in
or
push
test
inc
mov
sub
sbb
jno
lea
push
push
push
mov
ins
ret
mov
add
or
add
scas
sbb
xchg
je
mov
stc
fild
xchg
cdq
dec
and
pop
push
jne
xor
or
and
not
jnp
jbe
jae
inc
sub
clc
mov
xor
cmp
or
jmp
dec
(bad)
(bad)
les
rol
push
sbb
xor
inc
mov
loop
popa
cmp
and
cmp
jp
test
dec
cmps
sub
or
add
into
inc
jp
dec
ret
add
(bad)
and
cmp
or
cmp
add
dec
jmp
jne
leave
popa
ficom
push
or
push
pop
mov
ins
push
cmp
pop
pop
test
rcl
outs
mov
rcr
sti
sub
xchg
xchg
or
mov
cmp
jo
push
rcr
ins
sub
outs
sbb
push
jb
jns
sahf
call
leave
or
mov
dec
and
in
dec
loope
int
sub
pusha
add
sbb
push
add
cmp
adc
mov
data16
sbb
adc
sbb
rol
add
leave
repnz
and
int
sbb
sub
mov
enter
stc
fucom
int
aaa
test
and
push
cmp
pop
leave
cdq
mov
std
adc
push
outs
nop
iret
xor
xchg
push
pop
xchg
adc
cli
inc
cmp
push
fst
dec
and
inc
jmp
dec
mov
inc
cmp
jmp
sbb
xchg
mov
inc
data16
jmp
mov
xor
mov
loopne
push
in
xchg
or
(bad)
or
(bad)
sti
adc
sub
rcr
sbb
sub
push
inc
sub
add
scas
loop
ret
imul
nop
push
inc
pop
fdivr
inc
push
xor
mov
jle
je
(bad)
js
push
sbb
add
mov
add
xchg
adc
ret
add
push
js
inc
mov
ret
stos
xor
mov
cmp
mov
or
pop
outs
jne
or
fsub
(bad)
xchg
mov
push
push
pop
arpl
xchg
pop
je
mov
jg
push
ja
lods
inc
dec
inc
inc
add
adc
mov
nop
dec
cmp
inc
dec
rcl
scas
les
inc
jmp
cmp
cmc
mov
ins
imul
wrmsr
jno
mov
imul
jne
cmp
push
adc
pop
es
inc
stos
xor
dec
in
pop
add
cmp
jbe
lods
or
sub
shl
sbb
push
add
pop
cmovae
mov
in
add
movs
lock
inc
daa
push
cmp
imul
mov
mov
js
dec
jnp
dec
loope
add
movs
push
cmp
dec
adc
sbb
mov
lea
push
aas
scas
loopne
sar
inc
mov
jbe
push
sahf
push
push
ret
cmp
jp
add
jp
jl
xlat
push
mov
jnp
cmps
stc
cmp
jns
fistp
stc
mov
adc
dec
sti
add
dec
push
out
push
pusha
jle
dec
jnp
idiv
push
dec
jns
jge
push
add
dec
jg
push
gs
aad
ret
push
sub
or
mov
sbb
sbb
dec
data16
fidiv
repz
or
jle
inc
out
adc
popa
mov
lahf
out
sbb
xchg
clc
push
stos
daa
je
adc
push
sbb
sub
mov
mov
aas
test
mov
or
leave
add
retf
movs
and
rcr
les
push
inc
cmps
sub
ret
add
sub
call
or
cwde
sbb
rcr
lahf
mov
call
push
sub
fprem
xor
mov
mov
or
add
push
pop
dec
dec
sub
popa
and
push
cmps
adc
fld
cmp
mov
sar
cli
jo
jno
out
rol
and
mov
dec
mov
mov
xor
call
sub
dec
adc
or
push
inc
adc
push
sbb
jo
lahf
sub
push
or
dec
push
xor
hlt
pop
pusha
xchg
add
(bad)
in
ror
cmp
sbb
test
push
in
or
cmps
jae
add
jne
xor
ins
and
ret
add
pop
mov
rcl
sub
icebp
and
rol
jmp
shl
loope
ficom
push
xchg
and
or
add
cli
xchg
inc
push
mov
outs
loope
xor
sahf
push
sbb
xor
dec
xor
add
imul
sub
cmp
add
lea
jns
xor
pop
int3
xor
sub
repnz
dec
lods
clc
sbb
mov
push
add
enter
pop
pop
push
xor
push
dec
or
pop
push
sbb
inc
das
mov
adc
inc
push
ins
lods
cmp
repz
aas
movs
rdmsr
out
cmp
repz
xchg
or
or
dec
fucom
or
out
dec
ret
inc
cld
mov
sbb
add
push
sbb
add
inc
adc
or
or
add
or
sbb
add
adc
or
push
lsl
add
push
adc
xor
and
enter
add
or
or
add
sbb
or
add
add
or
sbb
imul
push
fcom
ror
xchg
lods
inc
and
(bad)
movs
and
in
jl
sub
pushf
mov
test
invlpg
arpl
add
xchg
(bad)
ss
jg
cmp
jne
cmp
jne
jg
push
test
dec
add
(bad)
je
sub
dec
pop
push
leave
and
sub
dec
push
mov
aad
or
ins
mov
pop
jmp
sub
xor
add
sub
or
pop
rol
inc
cmp
or
sbb
jl
add
or
imul
or
cmp
jmp
test
mov
mov
sti
les
imul
sub
outs
dec
test
jmp
inc
xchg
mov
sar
js
sbb
dec
sbb
fld
cmp
jp
ret
and
bound
or
fs
stos
dec
pop
or
push
pop
jg
je
xor
sub
inc
jne
dec
daa
dec
rol
xchg
test
mov
push
call
jmp
in
adc
pop
pop
jg
mov
mov
hlt
sub
add
xchg
mov
rcl
sub
mov
sub
pop
gs
call
mov
push
adc
sbb
test
add
jl
pop
je
inc
into
or
push
nop
sub
mov
jne
mov
sub
sbb
pop
and
sub
(bad)
push
mov
inc
dec
loop
and
rol
bound
adc
and
lds
or
rcr
cs
push
enter
sbb
and
ins
jg
sub
mov
push
stos
jne
cmp
jne
rol
lds
xchg
mov
xor
pop
pop
cmp
das
cmp
jmp
mov
nop
add
jle
dec
mov
adc
movs
pop
or
cmps
lods
cdq
mov
dec
fnstcw
retf
pcmpeqw
push
xchg
dec
imul
push
fwait
ins
loopne
cmp
ins
scas
sub
daa
cmp
gs
xchg
add
lods
retf
fldcw
outs
mov
inc
push
sbb
pop
mov
inc
jg
push
mov
rcr
xchg
repnz
cmp
pop
pop
cmp
js
add
pusha
push
push
adc
pusha
mov
and
and
jmp
add
mov
mov
imul
push
mov
xor
sbb
popa
mov
nop
dec
sub
ja
inc
sbb
mov
pop
pop
stc
dec
and
movs
mov
push
xchg
out
ret
inc
imul
adc
inc
popf
jge
fs
and
hlt
ret
push
scas
sbb
push
cmps
in
add
add
jmp
sbb
inc
hlt
jg
xlat
mov
pop
stos
clc
js
and
lss
enter
mov
xchg
dec
jmp
sub
dec
jae
inc
adc
ja
cdq
stos
or
pop
xor
pop
loopne
rcr
rol
sbb
push
or
mov
or
dec
(bad)
sbb
jg
lock
or
je
mov
sbb
jecxz
ins
dec
scas
push
sbb
bound
or
test
jb
sbb
and
mov
xchg
mov
scas
in
pop
sub
push
push
out
cmp
jmp
xchg
ins
pop
inc
or
xor
sbb
mov
push
in
cmp
push
pop
mov
cmp
cmp
fwait
leave
or
ret
add
jg
out
adc
push
cmp
adc
dec
adc
adc
sbb
cmc
push
mov
jge
dec
fcmovbe
mov
push
popa
inc
sbb
mov
xor
dec
retf
jp
scas
xchg
adc
inc
lods
jecxz
rol
(bad)
mov
jmp
cwde
xor
inc
movs
lods
inc
cmp
jl
mov
ror
xchg
xchg
pop
jno
add
cmp
push
stos
stos
cld
inc
adc
cmp
rcl
xor
sbb
inc
jge
jno
dec
data16
jle
jecxz
cli
loope
bnd
jmp
(bad)
and
sbb
pop
cdq
mov
popf
add
aaa
clc
adc
test
daa
adc
inc
pop
xchg
xchg
push
xor
clc
rcr
imul
adc
pop
push
shl
pusha
dec
and
jne
neg
or
pop
and
adc
mov
mov
mov
inc
mov
test
xchg
lods
add
push
sbb
mov
popa
mov
daa
dec
and
into
add
call
daa
(bad)
mov
adc
sbb
mov
sub
mov
mov
mov
sbb
in
jmp
dec
and
std
adc
retf
jg
and
push
push
and
add
loop
test
ret
pop
xchg
inc
dec
(bad)
fld
adc
mov
test
inc
push
sbb
and
and
sbb
xchg
mov
out
daa
enter
test
sar
mov
jo
mov
fdiv
loope
and
dec
lea
mov
repz
pop
dec
jecxz
inc
bound
mov
mov
ds
and
push
pop
xchg
icebp
xor
lods
adc
pop
pop
dec
test
dec
add
sub
lea
pusha
xor
sti
xor
shl
adc
mov
xor
xchg
jp
dec
je
je
jle
or
sub
je
dec
je
xor
pushf
ror
test
enter
aam
(bad)
or
or
cmp
test
pop
add
into
adc
rep
and
jb
pop
sbb
push
push
shl
cmp
add
xchg
retf
fld
inc
dec
lahf
pop
inc
add
pop
or
inc
inc
je
or
xor
imul
loop
or
add
or
rcl
add
retf
ret
(bad)
mov
xchg
imul
pop
mov
xor
cmp
fsubp
stc
jg
sbb
out
inc
stos
mov
aas
jg
dec
xchg
push
mov
sub
daa
cwde
pop
std
pop
cmp
(bad)
jg
mov
(bad)
int
inc
sbb
sbb
leave
sbb
jle
rcr
dec
gs
inc
sub
add
jns
ficom
mov
nop
xchg
cmps
imul
pop
dec
dec
mov
retf
sub
adc
fadd
cdq
pop
dec
sbb
idiv
xchg
sbb
test
rol
jno
pop
push
xor
adc
and
inc
fstp
imul
in
mov
push
fdivr
xor
mov
movs
ret
add
and
mov
mov
xchg
add
and
nop
sbb
pushf
call
push
dec
imul
push
xchg
cld
outs
rcr
fsub
(bad)
hlt
adc
sub
sbb
lock
fimul
pop
xor
in
mov
adc
dec
ret
test
xor
dec
inc
sub
and
adc
add
mov
mov
and
in
cmp
lahf
adc
not
and
lock
mov
mov
xor
xor
jae
jmp
sub
and
js
loope
popa
fist
cmps
add
std
jmp
retf
adc
or
pop
add
pop
mov
jne
nop
or
inc
es
and
push
jo
and
das
sbb
push
mov
pop
jmp
es
dec
fs
daa
jmp
daa
fild
shl
jmp
repz
rcl
imul
nop
ret
and
xchg
xor
mov
add
dec
dec
hlt
test
fs
jmp
sti
(bad)
lock
xor
mov
sti
mov
addr16
ins
test
pusha
sahf
pusha
nop
enter
inc
inc
add
or
nop
and
push
mov
and
mov
repz
xor
jnp
sbb
fwait
popa
jmp
mov
or
lods
rol
scas
inc
cmp
fmul
and
mov
fidiv
add
sti
outs
loope
add
add
xchg
xor
jecxz
mov
ret
cmp
dec
popa
js
sbb
dec
int3
xchg
call
jns
pop
ret
push
loopne
mov
dec
and
cdq
add
mov
xchg
(bad)
(bad)
(bad)
mov
pop
in
clc
je
jmp
mov
sbb
sbb
fld
test
xchg
push
arpl
mov
jle
mov
mov
mov
ror
movs
xchg
add
sub
push
sub
icebp
push
pop
ins
sti
out
mov
loope
je
jb
lock
add
lock
and
jns
ds
add
pop
mov
push
push
xchg
inc
cmpxchg
hlt
enter
pop
dec
xor
mov
mov
inc
xchg
or
inc
test
and
daa
xchg
fnstcw
scas
aad
jg
in
test
sub
in
inc
fs
cmc
inc
jmp
(bad)
out
mov
push
push
push
adc
fimul
nop
mov
sbb
jle
adc
dec
or
push
in
mov
lods
imul
jne
loopne
add
push
jmp
std
fild
sbb
pushf
adc
cs
ins
xchg
xchg
sub
mov
pusha
js
stos
pop
outs
and
jl
popa
sub
sbb
and
das
dec
pop
es
mov
fist
int3
xchg
icebp
mov
cmp
dec
add
cmp
sar
inc
xchg
aas
jne
push
jne
cmp
ror
adc
hlt
mov
sbb
cmps
push
or
inc
(bad)
scas
add
cmps
fsubr
xchg
adc
leave
xor
jmp
inc
xor
mov
movs
inc
xchg
in
xor
popa
xor
mov
or
xchg
push
or
jo
mov
fs
cmp
sti
adc
mov
fs
mov
add
push
mov
js
or
jne
mov
mov
test
push
ds
dec
mov
out
dec
fsubr
bound
mov
mov
data16
inc
cmp
ss
add
lock
nop
adc
inc
retf
xor
or
fdiv
sahf
pop
(bad)
in
dec
and
daa
add
dec
xchg
mov
xchg
retf
push
pop
push
mov
aam
cmp
nop
push
mov
push
sub
out
jg
xchg
popa
icebp
add
jl
out
lds
xchg
sbb
jno
sbb
(bad)
jp
cmp
add
sbb
addr16
cdq
adc
and
inc
data16
adc
push
jle
mov
lahf
lods
imul
jmp
xor
test
lods
in
popf
or
xor
mov
and
push
xor
fs
addr16
xor
sbb
and
push
push
push
nop
pop
mov
jecxz
bound
lods
ins
sbb
loopne
enter
cs
add
push
(bad)
xor
adc
inc
call
xchg
rol
jne
pop
push
adc
xor
adc
test
adc
call
shl
and
ror
imul
or
and
adc
test
or
es
ret
pop
adc
adc
cmp
jbe
cmp
push
inc
into
(bad)
rol
das
pminub
les
mov
adc
mov
cmp
icebp
and
adc
push
rol
scas
pop
sub
fld
loope
arpl
mov
jo
xor
adc
and
inc
stc
mov
add
sti
mov
sbb
lock
inc
pop
mov
add
and
mov
sub
stos
fidivr
fs
add
pop
ins
inc
add
adc
rol
ins
div
pop
dec
lock
test
test
add
or
jne
mov
cli
and
push
inc
add
iret
or
sbb
sub
xchg
mov
xor
jle
sahf
(bad)
dec
push
mov
leave
mov
adc
retf
add
cmp
xchg
imul
rcl
pop
(bad)
je
(bad)
or
sbb
mov
ins
sbb
retf
adc
imul
or
rcr
(bad)
stc
clc
pusha
ret
loopne
pop
dec
xor
rcl
arpl
xchg
ss
mov
fild
pop
jne
inc
or
push
aaa
dec
ret
inc
dec
add
sbb
jae
xor
and
cld
jne
or
lods
sub
and
mov
rol
mov
dec
test
push
add
cmps
test
or
jns
cvtdq2ps
popf
clc
sbb
rol
jnp
mov
dec
cld
mov
lock
mov
dec
mov
and
inc
xor
and
inc
aad
lds
repz
sbb
scas
stc
cmp
repz
test
add
add
fldcw
mov
outs
mov
mov
nop
push
add
mov
dec
push
prefetchwt1
push
xchg
adc
add
xchg
adc
push
daa
inc
movs
cwde
fst
(bad)
mov
nop
neg
sti
adc
dec
dec
or
xchg
push
sbb
rcl
mov
add
aas
xchg
icebp
push
jo
(bad)
mov
and
loop
lods
mov
mov
and
inc
add
add
loope
test
jmp
test
sbb
adc
gs
dec
or
inc
xor
mov
or
das
test
mov
xchg
push
push
test
mov
mov
pusha
ja
jmp
cwde
jb
sub
cmps
sbb
mov
jne
jae
std
push
mov
cdq
xchg
jb
pusha
sbb
sbb
sub
or
push
and
pusha
data16
fimul
pop
push
aaa
hlt
mov
or
rol
scas
das
nop
add
jbe
pop
xor
mov
mov
test
lods
mov
add
mov
aad
push
test
dec
pop
mov
or
sbb
add
pop
mov
jno
mov
cmp
adc
push
mov
inc
les
mul
push
test
je
mov
dec
retf
push
imul
sub
pop
ret
mov
mov
pop
les
shl
push
(bad)
inc
and
das
outs
call
cmp
outs
lock
scas
pop
xchg
aaa
or
xor
lea
xor
and
pusha
add
and
mov
sbb
inc
ins
rol
imul
sbb
pusha
inc
movs
push
pop
dec
aaa
and
push
retf
xor
jno
retf
cwde
adc
fs
push
arpl
cmp
jne
sbb
pop
mov
xchg
sub
mov
in
push
add
pop
ins
inc
dec
mov
add
add
add
or
cwde
shr
mov
dec
mov
mov
sub
dec
cmps
lods
push
add
add
xchg
jae
cmp
dec
test
pop
mov
mov
xor
push
or
jbe
push
cmp
cmp
sub
es
mov
sbb
xor
mov
pop
ret
push
cmc
add
neg
cs
push
jne
push
add
into
sbb
or
inc
push
(bad)
push
sbb
add
jl
push
adc
inc
add
push
clc
jmp
dec
or
and
pop
dec
into
repz
mov
hlt
dec
push
jb
inc
adc
fdiv
mov
sub
cmp
jo
aam
imul
or
inc
jnp
push
xlat
sbb
sbb
mov
xchg
xor
mov
or
jle
push
mov
fiadd
xor
std
xchg
xor
mov
mov
sbb
adc
ret
shl
ds
mov
push
mov
inc
rol
xchg
fs
imul
xor
xor
xor
push
aaa
nop
or
enter
adc
inc
and
add
out
dec
fisttp
sub
jecxz
shl
jno
and
test
push
jno
push
or
xor
adc
and
arpl
cmp
movs
loopne
inc
ret
cmp
adc
add
add
mov
dec
loope
cmp
sub
xchg
mov
dec
imul
cwde
(bad)
cmps
xor
repz
or
bound
mov
and
jb
pusha
jmp
inc
sbb
fimul
xor
cmp
and
jbe
dec
fstp
xchg
push
inc
push
mov
push
arpl
dec
and
mov
ficomp
leave
jne
or
pop
xor
ret
mov
movs
or
mov
loop
inc
push
and
xchg
dec
jmp
sahf
bound
test
ins
add
sub
fs
and
mov
push
mov
adc
inc
sbb
psrlq
add
imul
imul
adc
push
jno
fbld
jg
cwde
push
adc
jecxz
rol
test
and
or
xor
adc
pushf
and
or
js
xor
fidiv
fsubr
add
cld
mov
push
cmp
xchg
std
ss
nop
push
push
push
dec
mov
inc
bound
and
adc
mov
stos
test
pop
mov
inc
fld
sbb
sub
inc
test
out
or
xchg
push
xor
jnp
push
or
jo
enter
loop
nop
or
nop
int3
and
out
sbb
repnz
aam
cmp
xchg
add
mov
retf
and
push
push
cmps
ins
inc
movs
xor
mov
cmp
or
mov
mov
and
sub
and
ror
xor
push
rcr
mov
mov
sub
inc
pop
in
js
aas
cld
add
push
dec
les
jb
add
jmp
adc
out
nop
inc
sbb
or
add
lods
arpl
xor
js
or
jmp
mov
sub
dec
fdiv
adc
xchg
xchg
rcl
sar
add
dec
add
ins
movs
gs
push
sub
stos
or
outs
adc
lods
xor
adc
adc
mov
imul
jecxz
les
or
xchg
popf
nop
(bad)
push
aad
xchg
mov
add
and
and
jno
daa
call
xor
lods
pop
pushf
lds
inc
rcr
lods
and
and
and
(bad)
es
sub
sbb
xchg
mov
ds
sbb
cmp
pop
test
shl
and
mov
cs
jp
sbb
imul
clc
adc
jo
sbb
sub
and
sbb
add
inc
mov
cdq
sbb
push
xchg
xor
mov
ss
pop
dec
and
add
je
push
inc
test
shl
push
pop
jno
add
push
lods
stos
adc
cmp
pop
sbb
mov
and
mov
bound
icebp
sbb
and
ficom
mov
cld
push
push
lock
rcl
addr16
mov
xor
sub
lods
test
jno
adc
xor
or
cmp
lds
xor
cmps
xor
inc
sbb
inc
xchg
cmps
test
add
cmp
cmps
cmps
mov
jne
sub
js
sub
jle
stc
or
add
mov
dec
adc
pop
jo
ins
repz
xchg
into
ins
add
xor
adc
pop
jne
xor
add
push
xchg
jns
xor
cmp
cmps
mov
or
ss
lea
xchg
mov
xor
pop
ror
sub
mov
add
xor
fwait
xor
xor
data16
call
sahf
or
mov
dec
sar
jae
mov
or
(bad)
or
lahf
pop
je
inc
cmp
in
mov
into
jo
add
mov
into
stc
push
inc
sub
leave
ja
push
push
iret
ins
adc
or
sbb
mov
sbb
xor
das
jl
imul
xor
popf
add
add
imul
push
outs
imul
data16
add
and
mov
je
sub
test
repz
jb
xchg
push
mov
test
pop
aas
xchg
inc
push
xchg
cmp
fimul
lea
mov
retf
ret
push
push
and
or
inc
pop
pusha
std
or
xor
test
or
movs
dec
ret
sbb
mov
mov
inc
mov
bound
sbb
inc
or
inc
inc
arpl
in
sbb
or
das
outs
pusha
xor
cmp
pop
cmp
sbb
cmp
mov
or
pop
lods
push
inc
adc
sub
popa
inc
ins
push
xchg
cmps
inc
fsub
xor
xor
dec
and
loope
je
adc
dec
sbb
xor
jns
mov
dec
jo
mov
ja
popf
add
test
inc
pop
pusha
and
pop
mov
out
call
out
and
jmp
and
dec
fld
pusha
in
mov
inc
adc
test
movs
add
and
bound
push
mov
test
or
popa
adc
sbb
in
adc
movs
out
jns
jle
jb
dec
mov
int3
stos
mov
xor
out
pop
push
sbb
test
jb
ja
imul
push
push
push
jne
pmulhuw
or
por
xchg
inc
xor
xchg
lock
lahf
imul
jmp
add
adc
loope
or
sbb
adc
adc
or
xchg
dec
add
imul
sub
add
add
pop
popa
aam
inc
add
icebp
adc
mov
push
lea
cdq
out
ficom
and
pop
mov
ins
mov
(bad)
pop
leave
mov
or
mov
or
scas
pusha
(bad)
add
int3
and
lock
aas
xchg
sbb
xor
jne
dec
iret
mov
pop
mov
xlat
cmp
jb
fisttp
sub
dec
mov
movs
xchg
lock
mov
mov
push
test
outs
loopne
mov
shr
mov
sbb
cmp
jb
mov
je
push
pop
xchg
jne
mov
pop
add
or
(bad)
pop
fdiv
dec
fsubr
mov
inc
sbb
adc
adc
loope
sahf
pop
mov
in
test
push
int
add
add
mov
loopne
xchg
push
inc
add
cmp
je
pop
sub
dec
adc
outs
xor
sub
sub
je
jmp
mov
dec
mov
cmc
add
ror
mov
std
push
es
mov
and
shl
fsub
cmp
adc
sbb
adc
pop
leave
sbb
jmp
mov
mov
or
dec
movs
mov
push
out
ret
dec
dec
add
jmp
sub
test
adc
test
lea
jmp
xor
mov
fild
ret
movzx
imul
je
pop
adc
leave
adc
sub
push
into
inc
pop
xor
daa
pusha
mov
sub
or
fnstenv
mov
and
je
pop
call
clc
or
push
mov
(bad)
popa
or
push
sbb
cld
add
push
add
add
sub
aas
dec
add
cmp
pop
push
sbb
dec
shr
mov
(bad)
imul
mov
mov
ret
mov
popf
js
adc
sbb
pop
clc
mov
pop
or
rcr
cmp
inc
adc
dec
sar
icebp
sub
dec
pavgw
and
jae
adc
test
je
pop
lea
cmp
or
jge
xchg
js
add
push
cmp
loop
inc
push
out
xchg
add
xchg
lea
sub
jg
add
and
xor
mov
xor
inc
jb
dec
xchg
dec
mov
outs
dec
xchg
xchg
nop
inc
sub
repnz
and
or
popf
push
lock
add
dec
pop
mov
retf
sahf
xlat
lock
nop
mov
retf
sbb
scas
mov
push
outs
rcl
div
idiv
push
or
and
add
cli
add
nop
or
js
jns
mov
adc
(bad)
or
xchg
jne
jmp
ficom
and
jle
sbb
mov
mov
xchg
sub
push
frstor
add
iret
loope
and
and
ins
adc
mov
js
out
aaa
or
cmp
rcl
data16
push
je
mov
test
data16
sbb
sub
adc
jmp
push
sub
or
ss
push
sub
or
in
mov
mov
int3
inc
mov
fnsave
mov
or
adc
cmp
out
push
xchg
mov
ja
inc
jle
mov
retf
fmul
or
push
ret
and
test
push
xor
ret
mov
push
push
add
mov
xlat
xchg
in
push
add
push
xor
pop
dec
(bad)
sti
push
and
ins
iret
xlat
ror
shr
add
push
fwait
push
fcom
or
out
(bad)
push
dec
pop
mov
push
push
push
mov
loope
add
dec
and
cwde
jge
dec
in
leave
push
jmp
fmul
push
cmp
fwait
loopne
push
mov
mov
inc
jecxz
xchg
mov
mov
sbb
and
(bad)
fld
add
mov
push
push
sub
push
push
repz
push
cmp
lods
cmp
inc
jle
aas
add
xchg
cmp
cmp
cmp
xlat
push
lahf
xor
ds
sub
mov
mov
cli
pop
cmp
test
imul
test
pop
lahf
ds
ja
adc
int3
and
(bad)
repz
cmps
ins
push
and
push
jmp
jo
xor
out
iret
add
add
push
fcmovb
mov
and
push
add
push
xor
push
repnz
push
or
cmp
mov
add
dec
adc
or
iret
repz
push
inc
adc
xor
out
call
cmps
push
adc
loopne
or
fld
push
or
movs
aaa
out
or
or
pop
fadd
in
mov
lods
or
xchg
and
test
xor
adc
cs
mov
jp
add
jmp
fnstcw
inc
sbb
jbe
pop
movq
push
fmul
dec
mov
shl
arpl
mov
adc
cmp
add
iret
repz
mov
(bad)
out
test
add
dec
inc
add
jo
stc
imul
xor
in
mov
adc
pop
rol
test
add
sbb
pop
enter
adc
test
sbb
call
or
push
mov
inc
jo
mov
test
pop
and
in
pop
sbb
add
add
in
out
inc
mov
sbb
mov
(bad)
xor
pop
sbb
(bad)
(bad)
pop
sar
cmps
stos
fcmovne
adc
push
mov
jmp
or
jnp
mov
or
ret
jmp
adc
(bad)
jg
pop
scas
or
rcl
xchg
dec
add
scas
(bad)
lods
dec
add
(bad)
jg
pop
jg
popa
and
ins
outs
arpl
imul
ficomp
and
js
inc
outs
jb
js
je
mov
cmp
jae
ins
add
arpl
outs
add
add
add
fxch
add
jae
js
outs
imul
imul
ds
(bad)
sahf
pusha
add
cmp
add
je
loopne
sbb
push
pop
sbb
ins
retf
xor
shl
sub
adc
inc
dec
add
sbb
inc
loopne
adc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
in
(bad)
mov
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
call
push
ins
ins
push
jo
jb
je
jbe
js
jp
jl
jle
mov
inc
outs
arpl
push
outs
imul
mov
mov
jmp
xor
inc
adc
add
dec
ins
inc
gs
inc
ins
jae
jb
rcpps
push
jae
in
mov
pop
inc
inc
fnsave
or
push
jo
jb
and
mov
add
push
push
sbb
inc
xor
inc
and
push
xor
adc
push
jl
inc
loop
jo
ins
imul
mov
cs
ins
adc
je
push
mov
mov
out
fidiv
inc
and
fs
or
jb
and
cmps
cwde
je
jns
or
fidiv
aaa
mov
xor
outs
je
arpl
daa
mov
jne
pop
xor
and
fistp
xchg
loopne
cmp
sub
add
dec
mov
rol
mov
imul
jb
jnp
mov
xchg
jbe
dec
mov
sbb
xlat
loopne
dec
jp
push
pop
es
in
mul
bound
push
and
je
and
push
or
in
ds
(bad)
imul
add
ins
and
cmp
fmul
mov
sub
dec
imul
ins
jb
cwde
shl
dec
popa
push
data16
sub
mov
pop
pop
mov
add
inc
xchg
dec
popa
imul
xchg
xor
int3
or
popf
push
sbb
push
call
sbb
pop
xor
lds
sub
gs
push
xchg
jnp
sbb
cmps
cs
out
or
or
xor
shl
mov
adc
pop
dec
add
add
imul
(bad)
nop
ss
fs
jo
cli
jbe
add
dec
imul
inc
xchg
push
mov
inc
pop
push
gs
das
mov
add
push
mov
out
fisttp
jae
inc
jle
outs
push
mov
out
push
cmp
cmp
xor
(bad)
or
inc
aaa
ins
in
jmp
adc
imul
xchg
bound
imul
push
pop
in
inc
jno
push
stos
jle
jae
push
push
leave
nop
mov
call
jbe
fucomip
mov
adc
adc
cmp
fadd
inc
and
and
add
movs
cmp
cmp
pop
mov
addr16
jae
xor
or
mov
out
mov
mov
mov
adc
push
sub
retf
inc
pop
add
sub
pop
dec
jmp
jbe
pop
add
cmp
pop
sub
inc
mov
cmp
out
gs
dec
mov
into
pop
and
dec
cmp
jns
xchg
xchg
out
ror
sbb
xchg
out
or
mov
fnstcw
inc
add
outs
add
sub
sub
push
fiadd
add
adc
add
add
add
push
add
pop
and
push
pop
pop
lods
aaa
out
pop
adc
pop
and
lds
pusha
push
scas
enter
add
inc
out
rcr
or
xor
sbb
test
push
push
add
add
pop
xor
dec
cmp
test
inc
inc
es
into
test
dec
call
inc
sbb
data16
sub
bound
jns
push
xor
data16
mov
adc
(bad)
je
sbb
ins
fs
ret
das
cmp
aas
sub
sub
retf
push
arpl
ins
(bad)
outs
inc
outs
jae
jbe
ret
push
push
jno
sub
xor
out
fstp
nop
dec
addr16
cvttps2pi
sub
dec
xor
outs
sbb
ltr
ja
add
je
push
inc
sub
out
push
js
loope
dec
dec
inc
push
out
aaa
ror
inc
out
jg
or
inc
dec
into
sets
inc
lock
xor
pop
out
dec
dec
push
shr
retf
jb
push
popa
jns
repz
bound
jb
jo
dec
dec
dec
mov
inc
push
gs
dec
outs
jbe
add
inc
sbb
and
sub
push
jb
jl
add
test
sbb
add
and
add
(bad)
mov
ja
add
adc
add
add
inc
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
popa
mov
add
(bad)
(bad)
out
or
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
mov
rol
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
mov
mov
mov
popa
push
adc
lea
xchg
mov
aas
push
cmp
cmp
rcr
cld
sub
dec
and
jns
add
das
aam
or
adc
dec
push
inc
dec
mov
push
popf
add
sbb
pop
enter
or
fidiv
jne
jnp
cwde
loopne
adc
pop
inc
or
xor
loop
arpl
pushf
mov
into
mov
out
xchg
pop
frstor
inc
popa
mov
xor
sbb
int3
lahf
mov
and
xor
clc
sbb
js
cmp
nop
and
jbe
inc
dec
sub
cmp
add
push
clc
sahf
cmc
es
outs
ja
je
cs
jae
push
test
fimul
push
dec
jecxz
loope
add
ss
popa
add
sub
fwait
mov
jo
pop
(bad)
jmp
mov
mov
outs
ds
inc
push
xor
cs
dec
jle
mov
xor
add
jle
push
loopne
(bad)
movs
adc
dec
jae
or
mov
fdivr
out
mov
data16
test
dec
pop
(bad)
lods
popa
mov
adc
add
cdq
neg
add
xor
mov
push
or
push
inc
pop
test
push
mov
sub
jb
aad
lods
sbb
push
add
add
and
or
push
ins
gs
and
push
lock
and
aaa
ins
pop
and
xchg
jns
cwde
jae
scas
popf
cmp
ds
pushf
dec
inc
jb
movs
and
daa
pop
inc
aam
fiadd
ss
jns
mov
push
pop
jb
and
arpl
xchg
cmp
outs
cmps
sbb
pusha
push
retf
hlt
jns
sbb
movs
sub
pop
aaa
push
jbe
(bad)
push
push
add
jns
and
jae
dec
test
dec
xor
retf
inc
jo
inc
jae
and
mov
pusha
gs
stos
loopne
and
or
xchg
push
push
mov
adc
test
idiv
push
push
jae
imul
pusha
ins
mov
movs
add
sbb
adc
(bad)
das
inc
ja
mov
mov
loopne
dec
mov
push
push
push
push
dec
test
dec
dec
repnz
xor
ss
or
fild
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outs
jae
inc
mov
inc
push
in
xchg
jg
and
pop
popa
push
push
cmp
ins
mov
jne
adc
or
push
(bad)
outs
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmps
cmp
es
cmp
iret
repz
and
sub
inc
jl
fbstp
es
addr16
jle
sub
sub
out
idiv
jle
add
in
out
sub
sub
sub
sahf
sub
push
mov
add
push
cmp
je
add
mov
addr16
xor
xor
ss
add
in
and
sahf
sbb
sbb
in
push
adc
popa
pop
out
inc
jo
jnp
inc
out
mov
jl
bound
iret
repz
jb
sub
call
aam
cmp
mov
pushf
nop
out
iret
out
test
cwde
in
sar
pop
jl
je
fisttp
jo
sahf
out
ins
push
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
out
sahf
adc
add
cld
repnz
repz
hlt
lock
call
in
(bad)
aam
repz
enter
nop
test
idiv
push
mov
adc
out
sahf
cmps
push
shr
jns
and
icebp
fdivp
push
in
fsub
jns
out
mov
xchg
js
idiv
pop
xor
loopne
out
cwde
loope
sahf
out
push
and
out
jle
out
fwait
add
inc
mov
std
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
jmp
push
das
push
cs
jecxz
jmp
adc
inc
es
cmp
dec
push
dec
loopne
js
outs
push
inc
outs
(bad)
lock
push
aaa
dec
sbb
mov
sbb
das
inc
mov
ja
mov
push
outs
inc
pop
jmp
xchg
lock
les
push
mov
inc
out
jge
ja
add
inc
sbb
dec
outs
inc
adc
or
dec
aas
xor
inc
loopne
and
inc
jne
sub
jp
mov
cs
and
data16
push
jo
gs
popa
pop
add
mov
popa
push
into
addr16
xchg
cmp
push
and
push
push
xlat
add
inc
push
add
es
push
dec
xchg
jbe
dec
jo
sbb
imul
cmp
scas
fstp
das
adc
pop
scas
addr16
scas
jb
out
jbe
mov
mov
dec
mov
das
retf
xor
pop
in
mov
fisub
addr16
mov
js
arpl
es
outs
push
loopne
outs
test
push
adc
jo
push
imul
test
inc
daa
popa
dec
fsub
shl
test
dec
push
outs
sahf
loope
fidiv
sti
sub
ins
inc
jns
mov
shl
cmp
jae
pop
scas
rcr
sub
mov
test
inc
mov
xchg
mov
das
jbe
xchg
gs
xchg
arpl
fisubr
in
push
jmp
jnp
js
pop
jae
jbe
cs
xchg
or
mov
ins
aas
pop
dec
out
adc
bound
inc
push
js
dec
pop
ret
fisubr
and
fdiv
ror
push
xchg
push
push
push
js
cmp
in
mov
test
out
mov
jae
out
mov
fwait
mov
out
xchg
fist
in
aad
ja
add
ret
push
dec
iret
mov
sbb
cmc
lods
scas
call
pop
xlat
stos
sti
outs
inc
push
out
jo
jnp
push
jae
jne
fbld
sbb
test
orps
pop
fsubp
ror
cmp
sub
xchg
not
not
dec
stos
fcom
lods
frstor
dec
inc
retf
pop
add
xor
test
call
outs
jae
mov
mov
xor
stos
mov
fbld
jo
mul
inc
push
fsub
repnz
sub
paddsb
pop
test
jge
jmp
daa
in
push
sahf
push
lods
mov
iret
repz
add
mov
out
retf
imul
pop
int3
push
lods
out
into
repz
cmp
sub
fmul
psubusw
das
lahf
das
je
jbe
jno
mov
outs
pop
addr16
cld
mov
movs
push
and
imul
gs
xor
adc
mov
ja
xor
movs
lahf
popf
xchg
dec
popa
push
jns
call
cli
push
push
xor
ins
jne
imul
adc
das
xlat
xchg
dec
(bad)
clc
push
scas
(bad)
stos
cmps
vpblendmd
ja
mov
inc
daa
ror
js
add
aas
jbe
xlat
fnstsw
sub
cmp
cmp
and
fisttp
dec
verr
and
sub
ins
add
add
inc
(bad)
jle
or
or
mov
aaa
xlat
add
aaa
out
and
pop
xchg
or
push
and
(bad)
push
and
lods
or
jle
stos
sub
imul
dec
sbb
xchg
mov
out
ss
mov
js
aaa
in
sbb
xor
ins
pop
sub
add
push
out
sub
push
mul
sub
and
outs
(bad)
mov
jb
gs
popa
test
pop
fisttp
scas
outs
or
arpl
xor
out
dec
call
adc
pop
test
mov
mov
sub
daa
je
mov
ja
inc
jns
das
das
mov
test
xchg
add
aam
sub
xor
popa
cmps
(bad)
jo
jae
das
jl
(bad)
sbb
fld
(bad)
mov
cmp
aas
fiadd
addr16
jne
and
in
push
add
lods
xlat
pusha
jmp
fs
pop
ds
stc
cmp
mov
mov
cmp
mov
inc
aad
sti
imul
push
dec
dec
push
cmp
inc
dec
push
dec
aas
out
(bad)
xchg
(bad)
dec
push
dec
dec
inc
push
sub
out
fbstp
sub
and
and
push
dec
and
push
test
dec
dec
ficomp
inc
push
push
push
dec
dec
mov
mov
pop
xor
sbb
and
imul
ror
pop
inc
push
push
xor
xor
arpl
dec
inc
inc
dec
jle
inc
dec
fcmovu
pop
imul
pop
push
and
or
cmp
ds
test
pop
push
push
inc
push
dec
inc
pop
push
pusha
cmp
(bad)
push
dec
dec
push
dec
(bad)
pop
shl
in
lods
pop
dec
es
inc
push
and
mov
add
pop
inc
inc
dec
push
xor
dec
inc
push
daa
push
inc
push
es
adc
inc
add
jle
mov
xchg
inc
inc
inc
dec
popa
pop
cwde
add
dec
cld
dec
mov
dec
inc
inc
mov
push
dec
push
mov
lds
pfcmpeq
std
popa
jae
punpckhbw
inc
pop
xchg
pop
jb
inc
out
pop
dec
push
push
push
inc
daa
sbb
stos
pushf
pushf
fsubr
cmp
cmp
ss
pushf
pushf
pushf
xor
jo
pushf
xor
outs
sub
lods
dec
push
pushf
dec
(bad)
push
neg
inc
das
imul
xor
jge
sbb
pop
addr16
mov
push
inc
and
push
inc
inc
pop
ja
int
nop
inc
(bad)
xor
dec
push
inc
inc
xor
rcr
fld
aas
jb
push
mov
ret
add
xor
jns
int
cmp
cmp
ss
jns
xor
pop
mov
loopne
push
add
cmp
cdq
and
pop
fidiv
xsaveopt
lahf
add
push
and
dec
xor
retf
idiv
cmp
out
push
sub
cmp
and
and
dec
into
mov
addr16
data16
nop
push
(bad)
add
pop
adc
pop
xchg
adc
jne
bound
sar
imul
add
mov
outs
and
sbb
jo
dec
sub
or
adc
and
pop
add
loope
add
sbb
add
push
add
add
out
cmps
nop
mov
pop
push
call
cmps
sar
inc
jg
dec
loopne
aaa
(bad)
repz
lock
jbe
push
pop
popf
cmp
repz
add
add
in
add
add
add
pop
test
add
add
and
inc
outs
jns
adc
bound
or
imul
inc
push
sbb
xlat
push
addr16
push
outs
jo
ins
xchg
ss
mov
inc
jb
ins
xor
inc
imul
jecxz
push
jp
jbe
imul
(bad)
pop
inc
bound
imul
inc
arpl
jne
jg
push
jb
imul
sbb
out
sub
add
stos
adc
inc
xor
dec
imul
je
jb
cmp
dec
add
inc
fisubr
pop
push
mov
dec
je
imul
addr16
ins
xor
fwait
inc
outs
mov
sbb
or
imul
push
dec
mov
int3
pop
adc
xlat
adc
push
addr16
or
fiadd
inc
or
push
addr16
mov
pop
xchg
out
jle
push
jbe
sbb
popa
push
je
imul
and
push
scas
and
mov
and
ins
pop
fsub
add
call
or
arpl
ins
bound
(bad)
ror
pop
pop
inc
adc
outs
repnz
lahf
imul
mov
sbb
inc
dec
arpl
add
cdq
sub
xor
fcom
add
pop
push
lods
mov
sub
pop
mov
imul
clc
fnsave
xlat
dec
ins
pop
fsubr
imul
test
adc
and
jae
cdq
cmps
imul
add
gs
mov
addr16
sub
outs
and
push
imul
outs
dec
push
gs
xor
call
popa
cmps
popa
shl
adc
jb
pop
push
push
in
imul
iret
gs
jns
ss
popa
or
dec
les
mov
and
in
push
bound
aam
out
sub
or
sbb
or
or
sub
add
mov
fimul
push
and
push
cmp
test
add
jo
mov
ds
add
adc
add
add
and
or
cmp
scas
push
fcom
or
sub
in
(bad)
sub
or
mov
add
pop
mov
or
mov
push
lea
add
aas
aas
mov
lahf
or
test
add
aas
aas
aas
sldt
adc
int
add
adc
fistp
aas
aas
aas
adc
in
add
adc
sti
lahf
lahf
fwait
aas
pop
add
add
add
sbb
adc
add
sbb
and
add
add
sahf
lahf
ds
add
loopne
cld
jle
pop
xchg
push
add
add
and
pop
add
cld
cld
inc
add
add
jle
setge
ja
push
add
add
jae
jle
add
jle
cld
cmps
inc
add
add
scas
jmp
cmps
add
push
add
add
daa
add
(bad)
int
push
rol
add
iret
out
not
and
add
or
loop
add
sub
stc
sub
jmp
add
(bad)
stc
stc
stc
popa
add
bound
add
add
adc
add
inc
loop
inc
jp
(bad)
cmp
add
das
add
xor
in
fnstenv
mov
sub
cmp
iret
hlt
push
dec
(bad)
cmp
add
push
dec
push
icebp
cld
and
add
loop
sbb
lahf
(bad)
xor
cs
add
xor
jg
add
xor
mov
add
add
add
add
lahf
lahf
mov
add
adc
pop
jno
out
add
into
fcmove
sbb
add
add
dec
test
sub
xor
pop
fiadd
les
cmps
inc
jle
jle
mov
xchg
mov
mov
or
jg
cmp
or
push
clc
ins
xlat
add
push
js
sbb
add
lea
lods
inc
add
sbb
imul
add
pusha
adc
pop
stos
push
add
cs
push
adc
out
cmp
cmp
pop
sub
inc
mov
cli
jmp
(bad)
jg
pop
cmp
out
mov
out
out
jne
neg
(bad)
clc
pop
in
push
(bad)
jmp
clc
jne
data16
add
sti
es
call
jge
arpl
xor
or
es
out
lock
stos
cmp
or
inc
inc
push
clc
dec
dec
ret
(bad)
dec
dec
push
inc
dec
fimul
inc
cli
dec
call
inc
test
and
jns
fmul
ins
jg
push
add
push
clc
inc
fcmovne
imul
sub
xchg
adc
dec
add
into
or
or
outs
jne
rcr
fidivr
mov
popa
outs
dec
arpl
jb
fs
adc
mov
cwde
pusha
add
mov
or
or
xchg
add
ja
jb
or
xor
pop
lds
out
imul
inc
cmp
pop
mov
lea
add
add
ja
rcl
xchg
xchg
pop
loopne
add
fnstcw
mov
and
rcr
and
jo
outs
fs
ds
pop
out
es
arpl
mov
or
outs
pusha
adc
add
and
shr
ins
stos
jae
mov
pushf
bound
jne
(bad)
sbb
movs
jnp
sub
lock
jno
mov
data16
sbb
add
aas
ss
cmps
ins
imul
lods
xor
pop
stos
out
push
add
jbe
add
inc
or
ss
inc
cmps
adc
jae
call
push
xor
outs
data16
xor
or
aam
imul
jnp
or
or
aaa
xor
aam
pushfw
ins
outs
adc
sub
sub
in
lods
or
cmp
mov
out
add
or
aas
and
ins
mov
push
dec
pop
stc
adc
dec
mov
fwait
loopne
lds
outs
xor
ja
jne
push
inc
data16
sub
push
data16
es
outs
push
sub
mov
ins
inc
bound
dec
dec
mov
jo
fs
test
int
dec
push
adc
mov
dec
ffreep
gs
je
mov
sub
push
ret
arpl
sub
or
inc
or
rol
xor
jmp
loop
sbb
fadd
jnp
cmps
mov
addr16
push
aas
xchg
jbe
add
jns
leave
cs
ret
sbb
lods
and
jb
sbb
jo
std
sbb
outs
imul
inc
or
fnstenv
cmp
js
ins
clc
(bad)
mov
les
and
mov
sbb
pop
fs
outs
sub
pop
mov
cmp
test
loopne
inc
call
sub
popf
push
push
sti
pop
sub
mov
inc
push
icebp
fistp
sub
dec
cmc
aaa
add
or
cmp
les
rol
rcl
ins
sbb
adc
pusha
(bad)
push
push
adc
mov
fld
pop
cmp
sahf
(bad)
cli
aad
sbb
sub
pop
js
push
lods
stos
add
xor
jno
mov
mul
mov
xor
add
outs
int3
lahf
cmps
ins
sub
ins
dec
push
sub
(bad)
(bad)
pop
jne
sti
inc
push
cdq
loopne
adc
and
xor
sbb
loop
ret
xor
push
arpl
arpl
dec
test
push
fst
and
xchg
lock
aam
push
dec
jns
js
mov
retf
dec
je
(bad)
test
jecxz
or
xor
mov
jae
mov
jns
or
sbb
loope
or
xor
lds
inc
icebp
rcr
leave
sbb
add
bound
les
add
shr
cld
sub
imul
adc
shl
cmpxchg
xor
push
addr16
inc
jbe
fadd
add
popa
ins
in
xor
jae
pop
jb
pop
xor
aaa
mov
popf
dec
ins
push
sub
xor
adc
and
imul
push
adc
push
jl
or
mov
sub
jge
or
jg
push
inc
add
dec
dec
inc
outs
outs
cmp
es
and
stos
shr
sub
pop
lahf
dec
push
fld
push
(bad)
pop
addr16
mov
mov
addr16
sub
mov
adc
das
adc
jle
ins
inc
mov
lods
ja
and
and
jmp
inc
rcl
inc
sub
add
rcr
push
or
popf
je
ret
pop
pop
iret
add
mov
dec
ins
cmp
rcr
clc
push
ins
push
in
dec
dec
imul
add
push
xor
mov
mov
add
retf
enter
add
and
xchg
bound
add
pop
sbb
xchg
or
sub
and
jb
scas
sub
ja
dec
inc
outs
loopne
jecxz
inc
xor
aaa
add
push
and
add
pop
in
add
aaa
add
adc
scas
lods
or
adc
mov
push
cmp
cmps
mov
jae
cmp
inc
cmp
fbld
xor
in
pop
out
or
jmp
dec
xchg
ja
xchg
aas
xlat
mov
mov
ja
cld
and
inc
loopne
jle
mov
shl
iret
push
jne
mov
sub
xchg
inc
sahf
sbb
add
push
ja
lock
lods
pop
je
mov
push
test
push
sbb
lock
jo
outs
adc
inc
addr16
inc
ret
(bad)
push
ins
in
adc
sar
in
bound
add
addr16
out
jb
dec
mov
and
push
pop
dec
mov
pop
push
push
and
pop
loop
and
aaa
inc
jle
inc
pop
ja
dec
mov
fucomip
or
cs
xchg
jno
loop
repz
jae
xor
xor
stos
cmc
push
xor
xchg
adc
dec
add
stos
xchg
loopne
fldpi
dec
mov
xchg
pop
adc
ror
mov
(bad)
in
out
push
push
adc
imul
cmp
das
pop
les
repnz
sbb
sub
dec
push
push
inc
adc
not
inc
les
mov
rol
sbb
fwait
mov
mov
das
and
push
bswap
pop
push
push
outs
adc
mov
arpl
pop
mul
rol
jp
nop
fisub
xchg
fbstp
(bad)
daa
repnz
pop
mov
das
inc
xchg
sub
sub
push
inc
scas
push
mov
or
dec
pop
dec
push
ins
mov
div
outs
mov
sbb
fisttp
add
pop
fidivr
sbb
jmp
inc
fdiv
pop
call
xor
sub
jno
mov
pop
push
lock
xchg
push
cmp
std
push
xchg
push
movs
pop
daa
ror
xor
cmp
inc
mov
out
xlat
shl
es
push
jo
cmp
inc
xor
(bad)
jnp
ds
and
mov
inc
xor
xor
pop
dec
in
push
out
and
rcl
(bad)
dec
push
daa
xchg
add
(bad)
out
jp
jle
add
push
inc
pop
cmp
push
fmul
push
push
push
iret
xchg
(bad)
fdiv
pop
sbb
aas
pop
movs
pop
js
imul
arpl
(bad)
repz
adc
inc
dec
jg
inc
xor
mov
inc
stos
pop
jbe
lds
daa
ss
sub
push
push
(bad)
div
pop
stos
pop
xchg
div
fsub
fwait
inc
addr16
imul
dec
out
push
mov
retf
das
adc
cmp
inc
out
mov
jmp
inc
push
imul
(bad)
(bad)
add
ins
inc
push
rcr
(bad)
dec
pop
out
inc
das
pop
mov
xchg
mov
sti
jbe
mov
pop
dec
jmp
scas
(bad)
pusha
rol
aaa
dec
mov
jo
xlat
aas
ja
adc
aaa
and
push
jle
es
sbb
and
fdivr
bound
push
pop
pusha
test
je
add
push
ja
ret
jns
push
mov
push
jo
push
outs
push
pop
das
mov
mov
mov
cmps
rcpps
es
inc
inc
push
sub
dec
outs
cmp
pop
outs
(bad)
pusha
jnp
push
pop
outs
pop
sub
packssdw
lods
xchg
pop
jae
sbb
popa
mov
add
xchg
les
hlt
mov
and
inc
lahf
inc
aad
xor
out
inc
dec
inc
xlat
pusha
fild
jo
pop
outs
pop
jae
sbb
pop
inc
inc
jbe
(bad)
out
inc
pop
aas
pop
ins
or
test
dec
push
jg
fld
aaa
out
cmps
add
pop
and
dec
out
xor
test
aaa
add
movq
pop
(bad)
push
mov
push
add
(bad)
das
inc
xlat
das
mov
aas
push
ss
cwde
pusha
dec
jle
inc
aas
push
mov
jg
push
mov
push
jnp
outs
call
call
pop
pop
xor
push
push
mov
outs
out
out
loope
cmps
fist
pop
repnz
pop
and
push
rcr
aaa
jnp
lds
imul
bound
push
stos
dec
dec
(bad)
imul
push
aaa
dec
dec
xchg
cmps
mov
inc
dec
das
(bad)
pop
loopne
outs
mov
das
(bad)
daa
push
fcmovnu
jle
xor
ror
aas
push
mov
aaa
pop
mov
pop
aas
mov
dec
add
fisubr
push
popa
lock
out
jmp
ss
push
dec
lahf
jmp
(bad)
push
mov
mov
pusha
sub
inc
lods
ret
cmovg
aas
(bad)
jae
bound
pop
pop
pop
das
loop
or
jp
(bad)
mov
inc
and
test
ror
inc
out
mov
mov
inc
mov
add
daa
push
add
retf
inc
stos
jg
loope
sar
push
sbb
jp
push
fwait
pop
or
push
imul
dec
aaa
push
into
(bad)
fidiv
xor
adc
push
pop
mov
mov
jecxz
mov
sbb
inc
ins
or
adc
mov
adc
push
inc
inc
inc
in
mov
aas
add
ret
sub
sub
rcl
push
pop
dec
dec
mov
and
dec
lea
add
inc
fbstp
dec
addr16
push
sbb
inc
lahf
push
xor
jg
fwait
xor
push
push
loop
inc
mov
push
pop
push
(bad)
push
push
xor
shl
push
push
jae
mov
xchg
or
push
(bad)
pop
mov
mov
mov
push
popa
mov
inc
aaa
push
or
push
ins
and
xchg
das
push
push
jb
scas
mov
xor
push
outs
add
sub
add
dec
mov
stos
or
fild
in
loopne
push
ss
iret
push
ins
xor
fimul
sbb
and
imul
push
add
inc
mov
push
aas
dec
inc
cmp
and
dec
fisttp
mov
xchg
es
mov
aaa
sti
repnz
dec
aas
and
push
pop
aas
dec
aas
add
aaa
addr16
mov
add
xor
dec
inc
mov
test
lea
sbb
fidivr
dec
(bad)
push
xchg
mov
adc
push
sub
bound
adc
das
jmp
mov
lds
ins
push
clc
jp
sbb
aaa
out
rcr
shr
inc
sahf
dec
sbb
daa
push
mov
and
daa
ins
fwait
xchg
adc
pop
inc
(bad)
movs
sub
cs
shr
daa
daa
pop
mov
dec
(bad)
cmp
aas
ss
or
push
dec
sub
or
mov
mov
or
dec
(bad)
out
push
sub
add
fimul
pop
push
sub
push
add
dec
add
mov
adc
xchg
aam
sub
inc
das
xchg
xor
sbb
aas
inc
pop
sub
rol
ret
test
fisub
mov
sub
fist
add
pop
adc
cmp
ret
dec
not
int3
push
js
stos
andnps
fild
inc
ins
adc
aas
pop
daa
inc
bound
push
dec
shl
pop
push
aaa
push
jl
(bad)
jg
out
jmp
xchg
cmps
daa
mov
mov
jnp
nop
pop
push
xor
loop
hlt
mov
push
test
or
inc
aaa
inc
xlat
mov
jle
jle
dec
(bad)
push
test
jp
ret
out
das
daa
scas
pop
xchg
inc
rol
or
imul
aas
scas
rcl
and
fld
dec
pop
not
pusha
(bad)
out
scas
ss
outs
mov
cmps
sbb
dec
cs
or
pop
daa
sahf
push
sbb
add
mov
dec
mov
mov
repz
imul
pop
pop
pop
add
pop
aas
fwait
sahf
shl
dec
aas
adc
sti
imul
pop
aas
daa
pop
shl
je
lahf
outs
punpckhwd
nop
out
jnp
push
push
cmp
sub
stos
mov
aaa
dec
mov
sub
fmul
out
mov
cmp
pop
xor
movs
cmp
push
mov
loope
pop
ds
packuswb
(bad)
push
jmp
daa
out
xor
inc
inc
loop
push
xlat
add
and
inc
push
add
out
mov
das
pop
pop
vpxor
das
dec
mov
outs
adc
adc
pusha
push
pop
push
add
(bad)
jle
mov
jns
inc
setb
mov
dec
shl
adc
cmc
push
ds
(bad)
dec
pop
lods
lds
jmp
das
aaa
push
in
sbb
cli
inc
aaa
neg
adc
fisub
lods
ja
adc
outs
mov
arpl
sub
inc
aaa
mov
push
outs
pop
add
aas
mov
pop
or
mov
lods
fdiv
rcl
rcl
or
popa
aas
das
shl
pop
push
das
bound
test
aaa
shl
js
mov
out
dec
pop
pop
ins
(bad)
(bad)
aas
add
mov
dec
fistp
scas
push
ret
mov
test
push
sub
aad
xlat
daa
xchg
mov
dec
rol
cmps
dec
pop
sti
(bad)
jmp
outs
xor
ret
mov
in
shl
add
or
pop
jecxz
(bad)
outs
ins
das
jg
inc
cmp
inc
jno
mov
daa
imul
aas
daa
lods
push
loop
add
pop
stos
aas
sbb
xor
xchg
sub
jae
pop
or
push
mov
aas
stos
lods
mov
js
in
das
(bad)
sub
mov
sub
push
or
rcl
imul
ins
and
mov
push
mov
inc
pop
aaa
ins
mov
push
pop
jae
jmp
jp
iret
das
iret
push
mov
lock
dec
aaa
aaa
pop
and
shr
and
push
jnp
and
or
daa
iret
jg
mov
pusha
cmps
daa
inc
pop
dec
inc
adc
call
call
fist
mov
push
mov
imul
xor
pop
aaa
lea
imul
inc
rcr
dec
cmovl
scas
scas
xor
jecxz
shl
shl
mov
sbb
fwait
imul
lahf
hlt
jbe
imul
mov
jae
das
xchg
xchg
cmps
xchg
push
mov
push
or
or
xor
stos
and
inc
xlat
mov
lods
push
adc
cmps
mul
or
outs
push
xor
(bad)
mov
add
sti
cs
mov
daa
dec
loopne
fisubr
xor
xchg
pop
push
push
sbb
daa
dec
das
retf
mov
inc
ret
ins
ret
add
mov
pop
and
aaa
and
and
imul
add
loop
ror
add
jo
sub
push
jl
outs
arpl
lods
dec
push
ror
jbe
bound
xchg
jmp
imul
mov
pop
jne
outs
sbb
push
or
push
pop
pop
sbb
pop
pop
pop
mov
jae
mov
mov
jne
add
mov
xor
fwait
je
mov
inc
dec
add
xchg
bound
xchg
pop
inc
dec
jle
inc
das
(bad)
fisttp
dec
push
push
push
jmp
dec
fld
fwait
cs
mov
daa
out
dec
pop
pop
sbb
lahf
aas
out
xchg
jno
add
ins
sti
or
jge
pop
pop
sub
iret
mov
inc
push
or
shl
sbb
pop
rol
pop
xchg
or
call
mov
cmp
mov
gs
je
xor
push
push
xor
je
mov
hlt
mov
add
ja
sbb
gs
pop
pop
je
cmps
adc
sahf
mov
cmps
out
add
pop
inc
sub
and
ins
mov
addr16
bound
(bad)
bound
push
(bad)
mov
inc
inc
daa
inc
jns
jo
adc
mul
mov
push
add
dec
push
scas
aaa
jo
mov
ja
popa
fstp
ja
pop
pop
jbe
add
push
pop
iret
xor
arpl
out
mov
ret
dec
outs
imul
out
addr16
xor
iret
mov
mov
sub
ror
mov
cmp
jns
xchg
xor
bound
out
imul
xchg
xchg
push
ins
add
mov
cmps
adc
addr16
add
addr16
xor
mov
ret
jmp
aaa
mov
mov
push
sub
adc
daa
aaa
mov
mov
dec
daa
mov
ja
mov
not
mul
mov
retw
aas
lahf
sahf
add
sbb
jnp
pop
ret
cmp
dec
push
jns
xchg
push
out
xor
lods
loopne
inc
mov
adc
sub
call
mov
daa
mov
dec
sub
aaa
dec
pop
jb
aad
jg
and
xor
sub
iret
dec
xor
xchg
out
mov
jmp
jecxz
push
push
es
jecxz
cmp
sbb
sub
jle
jb
xchg
ja
inc
addr16
push
je
sbb
es
xor
sbb
jp
mov
packuswb
ror
sub
rcl
dec
ja
mov
inc
mov
jo
push
cvtdq2ps
push
jo
pop
jbe
pop
ss
lock
dec
or
(bad)
mov
or
loope
arpl
xchg
mov
push
inc
out
lods
js
push
xchg
ds
jmp
ins
pop
jg
fs
pusha
repz
hlt
test
arpl
inc
ins
push
xor
adc
and
jbe
aam
push
loop
arpl
sbb
xchg
add
imul
les
push
es
inc
retf
xlat
cmps
(bad)
repnz
jnp
push
nop
dec
add
pop
(bad)
and
xchg
es
(bad)
sub
mov
fistp
or
push
pop
add
or
and
add
add
dec
or
imul
mov
add
mov
frstor
xchg
jbe
repz
mov
jae
push
aas
add
dec
ins
pusha
xor
xchg
sub
or
adc
mov
test
stos
(bad)
cmps
maskmovq
test
sar
out
sbb
outs
jbe
jecxz
ins
sub
ins
stos
ja
dec
fdivr
mov
pop
mov
xchg
imul
inc
add
xchg
lock
mov
es
repz
dec
mul
imul
cmp
mov
pop
rol
das
daa
and
scas
or
add
cmp
xchg
(bad)
jbe
sub
daa
xchg
fbstp
cmp
outs
mov
out
jmp
popf
xor
ret
ja
clc
cs
cli
ins
daa
addr16
test
aaa
dec
adc
inc
push
and
pop
and
movs
call
es
ins
inc
bound
pop
rcr
outs
pop
outs
mov
or
inc
mov
dec
data16
push
imul
dec
or
popa
icebp
retf
xchg
(bad)
sti
arpl
push
repz
mov
add
dec
or
dec
nop
mov
adc
mov
pop
ja
or
jo
pop
push
cmp
xchg
fimul
shl
push
unpckhps
scas
xor
sbb
xor
test
aam
xor
push
xlat
(bad)
or
dec
xor
(bad)
(bad)
aas
xor
mov
leave
clc
jae
jg
sbb
adc
arpl
sbb
jb
daa
shl
scas
push
xchg
out
jmp
and
movs
ins
xor
and
lods
and
mov
inc
mov
das
(bad)
mov
adc
sbb
aas
sbb
xor
xor
dec
sbb
inc
loopne
aaa
push
xchg
popa
mov
lea
daa
out
jbe
fwait
xchg
out
xor
mov
cs
xor
mov
mov
cmps
jg
xor
mov
sahf
xor
aas
(bad)
xchg
ret
push
ror
mov
pop
fsub
movs
and
imul
jnp
in
sub
das
xlat
dec
aaa
inc
mov
dec
pop
aas
in
adc
xlat
fisttp
lods
jecxz
cmp
pop
mov
or
mov
inc
jae
(bad)
adc
inc
aaa
mov
lods
fisubr
(bad)
push
xor
inc
jp
shl
das
pop
arpl
daa
loope
outs
mov
scas
or
push
in
adc
sbb
call
in
adc
add
jnp
dec
mov
add
aaa
inc
inc
adc
pop
inc
add
adc
addr16
push
ins
jno
mov
mov
or
pop
out
inc
rcr
pop
das
push
inc
stos
or
(bad)
call
dec
xchg
push
sub
xchg
add
push
and
popa
fild
xchg
(bad)
push
sub
mov
mov
inc
jmp
or
stos
fisttp
dec
lods
mov
push
pop
dec
inc
adc
xchg
inc
adc
dec
fild
inc
movs
div
adc
out
add
jb
test
test
jg
pop
das
inc
xchg
jbe
mov
aas
frstor
mov
dec
pop
push
bound
mov
add
add
mov
push
imul
(bad)
rcr
jno
cmps
outs
xlat
inc
sbb
cmps
fwait
jo
iretw
dec
jp
int
or
cs
pop
xor
(bad)
enter
pop
jae
mov
and
aam
add
jae
mov
inc
cli
inc
and
mov
xor
push
rcr
add
ins
sbb
add
fdiv
push
pop
add
xor
ins
movs
dec
inc
imul
xor
in
dec
imul
sub
jbe
arpl
lock
aas
inc
stos
imul
jmp
ins
xor
out
jecxz
cmp
inc
adc
push
outs
rol
rcl
and
outs
mov
and
mov
sub
mul
jnp
pop
push
sub
cmovno
ret
mov
mov
pop
add
mov
inc
daa
pop
pop
fs
sub
daa
push
fisttp
bound
inc
xor
xchg
xor
xchg
(bad)
aam
aam
jne
xor
iret
jge
push
pop
outs
rcr
mov
ins
inc
mov
mov
add
or
add
mov
aas
das
stos
sbb
loop
das
mov
add
mov
sub
jbe
pop
std
jns
aaa
add
add
mov
push
jo
aad
ja
push
push
fbld
aas
outs
jmp
jbe
mov
mov
div
imul
jne
cmps
pop
xlat
sbb
sbb
push
out
test
lahf
sbb
dec
mov
pop
sub
pop
dec
jo
push
xor
outs
bound
test
pop
mov
rol
mov
or
iret
jne
je
jne
imul
add
sbb
pop
ret
xor
jbe
push
cmp
dec
cmps
addr16
jecxz
mov
add
dec
mov
or
cmps
pop
xchg
sbb
or
cmp
or
mov
aas
push
das
push
jg
and
xor
shl
pop
aaa
sbb
(bad)
aad
(bad)
dec
(bad)
dec
aaa
inc
pop
leave
mov
outs
daa
push
int
mov
pop
sub
mov
das
inc
out
jmp
test
jae
adc
stos
loope
dec
inc
pop
dec
sub
pop
adc
push
inc
add
push
mov
and
add
aaa
mov
mov
jmp
xchg
fisub
or
fadd
imul
imul
data16
inc
sbb
pop
sti
scas
pop
out
fisubr
mov
mov
adc
dec
push
aas
and
sar
xor
ds
xlat
sub
bound
inc
dec
adc
xor
(bad)
adc
bound
push
dec
lods
(bad)
mul
xchg
fcom
sbb
lods
aaa
mov
test
lods
(bad)
out
aaa
outs
pop
sar
out
dec
or
sub
pop
mov
inc
cmp
sbb
push
je
test
mov
fadd
scas
inc
daa
and
and
mov
add
sbb
addr16
and
adc
mov
inc
dec
pop
fst
or
dec
aaa
xor
ds
out
shl
and
nop
dec
push
dec
push
sbb
pop
or
dec
loopne
sbb
jnp
inc
rcr
add
dec
arpl
jg
dec
sub
inc
cmp
push
jle
dec
adc
jp
cs
mov
jae
sub
add
fsub
inc
aas
inc
inc
sub
add
sbb
pop
add
imul
dec
push
pop
or
sub
mov
enter
sub
inc
sub
or
ret
dec
dec
pop
or
and
push
pop
pop
xchg
fcmovnu
retf
iret
pop
add
cmp
mov
clc
inc
pop
(bad)
div
int
add
(bad)
mov
and
sar
loopne
mov
jnp
lahf
ret
sar
(bad)
add
stos
pop
add
inc
lods
jb
pop
mov
mov
das
inc
add
mov
push
repnz
pop
dec
(bad)
jae
add
out
int
daa
and
inc
jg
in
lods
out
pop
daa
aas
out
add
xchg
and
movs
faddp
push
lock
or
imul
dec
and
xchg
ja
daa
xor
pop
in
daa
aas
aam
es
pop
outs
dec
shl
cmp
push
mov
inc
jb
push
sub
xchg
adc
jp
ins
pop
or
and
mov
daa
dec
pop
mov
aaa
(bad)
fmul
aas
out
aas
mov
jno
pop
cmp
pop
dec
aas
and
cmp
add
outs
mov
push
ja
push
pop
sbb
xor
ror
aas
in
fidiv
pop
fmul
mov
(bad)
push
fbstp
mov
nop
aas
loop
ret
xchg
adc
shl
cmp
sbb
nop
scas
aas
adc
daa
mov
cmp
call
out
pop
mov
mov
pop
idiv
adc
shl
pop
stc
jg
clc
inc
(bad)
js
loop
stc
iret
je
inc
into
add
adc
add
nop
or
sbb
jns
xchg
pop
enter
rcr
xor
sahf
sub
(bad)
cmp
popf
sub
mov
mov
jge
inc
popf
add
mov
sub
pop
mov
fiadd
test
cs
inc
push
jbe
test
pop
inc
sahf
inc
inc
or
aaa
not
or
dec
cmps
dec
mov
adc
cmps
nop
out
add
pop
add
cs
movs
ins
pop
in
push
and
or
or
xchg
jbe
in
mov
int
pop
test
ins
or
(bad)
rcr
pop
test
add
push
and
add
cmp
and
and
adc
sub
sub
pop
pusha
push
lds
imul
jbe
movs
add
cmp
cmps
fbld
inc
sbb
mov
pop
mov
mov
pop
push
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outs
mov
xor
fcomp
loopne
jb
jle
sub
inc
xlat
inc
mov
add
mov
or
add
ret
cwde
ins
rcr
scas
mov
test
dec
(bad)
es
xlat
inc
push
push
iret
jae
and
add
cmp
or
or
sub
or
or
(bad)
imul
daa
adc
adc
in
movs
fwait
das
and
fcmovne
inc
push
addr16
das
push
xorps
mov
ins
das
ins
push
and
sbb
push
pop
cmp
(bad)
or
in
jns
pop
xchg
sub
in
movs
fbld
pop
shl
in
sbb
data16
repz
mov
mov
out
sahf
out
fist
int3
adc
js
dec
sbb
dec
repz
in
ficomp
mov
repz
repz
push
push
xor
jns
iret
pop
rcr
and
int
fsub
add
fstp
jnp
jns
jp
push
cld
int3
xor
mov
inc
ins
das
aas
pop
push
mov
push
aas
pop
fdiv
mov
js
sar
adc
jne
jae
loop
add
add
sbb
dec
sub
lahf
aaa
or
push
rol
fdivrp
clc
call
mov
sub
adc
repz
repz
je
jo
push
pop
pusha
adc
push
cmp
repz
dec
or
iret
repz
xor
iret
push
and
and
sbb
iret
repz
adc
or
outs
in
repz
into
cld
loop
push
adc
repz
sbb
push
fdiv
cmp
repz
aam
shl
iret
repz
int3
and
and
loopne
mov
adc
mov
xchg
fsub
push
fdiv
fimul
leave
jmp
xchg
lahf
add
or
loopne
push
or
fnsave
push
mov
aaa
add
mov
mov
lahf
inc
(bad)
xlat
hlt
pop
stos
pop
repz
jg
or
push
sahf
out
sahf
(bad)
xchg
call
jns
into
shr
out
repz
repz
sbb
ds
iret
repz
arpl
mov
stc
cmp
add
and
jns
out
inc
pop
jb
cmps
out
sahf
out
(bad)
dec
repz
push
or
outs
cmp
repz
mov
sahf
out
repz
out
sahf
out
jb
xchg
mov
repz
mov
jmp
pop
imul
lock
daa
push
push
push
inc
jne
mov
(bad)
push
push
pop
neg
out
add
imul
inc
push
inc
cmp
repz
repz
sub
sbb
imul
in
in
call
in
(bad)
aam
repz
out
int3
enter
mov
mov
mov
out
sahf
mov
jns
out
push
dec
inc
sub
les
shl
or
data16
mov
cmps
jl
in
jg
xor
and
mov
cld
mov
mov
cmp
sbb
and
add
pop
enter
inc
enter
pushf
or
ret
mov
adc
repnz
adc
sbb
leave
sbb
xor
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
(bad)
mov
cmp
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
(bad)
inc
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
(bad)
(bad)
(bad)
jmp
mov
or
add
cmps
xchg
cmp
xor
dec
test
(bad)
jmp
pop
cmp
pop
cmps
lock
mov
popa
(bad)
(bad)
mov
fsub
stos
xchg
clc
repz
mov
sub
inc
sar
fwait
xchg
and
and
(bad)
out
(bad)
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
(bad)
(bad)
push
aas
ret
shr
mov
icebp
aas
ror
and
cmps
(bad)
(bad)
(bad)
mov
imul
aas
xor
aad
mov
std
std
into
popa
test
(bad)
(bad)
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
(bad)
mov
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
mov
fst
arpl
int3
and
call
cmp
jp
and
cmp
or
mov
cmp
cmp
mov
(bad)
(bad)
(bad)
call
mov
jecxz
cmps
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
(bad)
jmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
(bad)
(bad)
(bad)
jmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
bound
std
outs
(bad)
std
or
pop
ficomp
frstor
add
out
adc
js
xor
out
mov
repz
xor
xor
repz
ins
add
pop
ja
iret
repz
mov
repnz
cmp
repz
dec
ins
inc
mov
lods
popa
(bad)
fisubr
cmp
add
push
add
iret
repz
add
idiv
xor
and
mov
retf
push
clc
cmc
fdiv
(bad)
cmc
(bad)
mov
or
mov
jns
xchg
or
push
cwde
nop
sahf
out
sahf
mov
pop
push
xor
out
inc
and
in
shl
iret
repz
je
sub
out
sahf
out
popa
les
sahf
pop
inc
sub
cld
pusha
in
cmp
repz
mov
cmp
repz
dec
and
fcomp
cmp
repz
pusha
inc
jns
out
sbb
pop
in
lods
out
sahf
out
test
inc
jns
jns
xor
or
pop
pop
push
enter
out
pushf
test
out
sahf
dec
inc
cmp
pop
pop
repz
rol
les
repz
je
inc
sub
add
cmp
ds
mov
cmp
pop
inc
sub
add
in
sub
sbb
ficomp
ins
mov
sub
sub
jge
shl
or
mov
pop
aad
add
add
push
push
dec
mov
inc
call
mov
push
or
dec
dec
mov
cwde
ins
dec
test
push
dec
out
dec
pop
or
inc
mov
test
dec
pop
add
mov
add
or
mov
pop
adc
pop
or
and
pop
pop
mov
or
lahf
push
or
out
repz
push
pusha
pusha
and
push
dec
iret
repz
cmp
and
cld
sahf
out
call
jns
out
sar
sahf
out
pop
dec
xor
jns
stc
sahf
adc
clc
and
(bad)
out
sahf
out
mov
cwde
mov
fs
dec
pop
ret
sub
aaa
lahf
cmps
pop
in
add
aaa
adc
inc
lock
stos
pop
ja
add
adc
and
(bad)
jne
pusha
aad
cmp
push
mov
(bad)
add
cmp
xchg
aaa
shl
ins
or
rcl
daa
xchg
shr
cmp
fisub
adc
rol
dec
xchg
or
fisttp
mov
push
xor
mov
mov
aaa
or
dec
aaa
outs
fs
test
cmp
jno
icebp
(bad)
mov
sub
and
xor
xor
xor
mov
out
mov
xor
xor
xor
push
outs
bound
outs
gs
and
js
and
iret
repz
push
mov
test
cmp
repz
xchg
nop
mov
jl
je
iret
repz
ins
push
cmp
repz
dec
inc
cmp
repz
repz
sbb
adc
imul
add
in
out
sahf
(bad)
enter
jns
out
test
cwde
nop
mov
jns
out
js
pusha
push
sahf
out
sahf
dec
cmp
sub
sbb
lahf
out
adc
add
add
repz
repz
shl
mov
pop
dec
cmp
repz
xor
adc
jns
cmps
stc
clc
add
fmul
mov
lods
pushf
nop
mov
js
fs
push
inc
mov
add
call
repz
stos
(bad)
cs
sub
or
sbb
jb
iret
repz
je
jbe
js
daa
iret
repz
jnp
sub
or
cmps
imul
imul
cmps
imul
imul
imul
cmps
imul
pop
or
imul
cmps
imul
mov
mov
aam
fwait
ins
clts
xlat
sbb
test
lods
fild
test
and
fcomp
pop
cld
jmp
pop
bound
xor
leave
xor
es
rcl
push
dec
sub
push
cmp
sub
inc
adc
(bad)
jg
(bad)
jmp
popa
inc
gs
imul
pop
outs
dec
adc
inc
sahf
mov
adc
xchg
and
add
nop
push
add
inc
inc
add
add
add
and
inc
add
sub
aaa
adc
cmps
adc
push
push
scas
es
dec
adc
test
test
inc
sbb
add
fbld
mov
int3
add
push
mov
dec
jo
(bad)
mul
jo
and
adc
fisttp
test
mov
imul
ror
adc
popf
repnz
cmp
inc
adc
or
jmp
jbe
test
add
push
aas
bound
dec
inc
xor
jns
add
add
xchg
sub
sub
sub
or
ret
add
or
push
leave
pop
fs
dec
loope
ror
outs
jae
popa
imul
(bad)
push
inc
adc
push
pop
fist
aas
ja
ret
pop
inc
imul
sbb
xor
mov
and
rol
pop
jb
add
pop
ja
(bad)
jnp
jbe
mov
xor
out
mov
dec
imul
mov
inc
loop
adc
ins
retf
jnp
sub
rol
dec
(bad)
bound
sahf
dec
popa
das
mov
push
(bad)
(bad)
pop
jae
ret
xor
mov
push
nop
inc
sub
inc
inc
daa
push
push
cli
push
nop
ret
fs
xlat
scas
inc
add
push
or
push
and
mov
mov
sub
pop
outs
or
(bad)
jbe
mov
inc
pop
lock
ficom
gs
inc
push
inc
xchg
adc
pop
arpl
inc
fs
mov
push
adc
pop
dec
adc
cmp
inc
sbb
out
add
sbb
inc
pop
add
push
imul
xor
sti
jle
shl
and
fs
sbb
push
and
adc
sbb
js
xlat
push
adc
pop
mov
push
ficomp
ja
scas
stos
sub
pusha
sub
push
mov
mov
pop
pop
inc
jo
rcl
mov
add
test
push
cmp
cwde
and
fist
pop
mov
loopne
pop
jae
adc
mov
jne
dec
ret
dec
ja
xor
xor
(bad)
adc
pop
mov
cmps
jnp
loope
sbb
inc
ss
push
aaa
imul
cmps
pop
clc
jno
or
jnp
loopne
and
jg
fild
jl
cmps
addr16
and
jae
cmp
jne
aas
gs
jg
adc
retf
xor
cmp
jne
sub
shr
cli
xor
sub
push
xchg
mov
and
mov
inc
sub
mov
shl
jae
(bad)
xor
add
fild
mov
mov
addr16
js
sub
xor
les
push
inc
push
ja
or
mov
xor
ja
test
sub
and
cmp
outs
adc
mov
dec
ret
mov
pop
add
das
imul
out
bound
jnp
aaa
loope
cs
imul
gs
add
sub
bound
pop
push
mov
cmps
outs
push
xchg
mov
(bad)
xor
jmp
repnz
mov
add
and
mov
dec
add
pop
rcl
test
inc
fwait
sub
movs
sub
sbb
or
imul
or
sub
add
or
sub
xor
enter
mov
sub
ja
ja
push
cmpxchg
and
or
inc
xchg
sub
imul
sub
or
jecxz
popa
icebp
push
out
xor
push
sahf
and
dec
ins
js
pop
inc
out
pushf
imul
push
lods
adc
stos
imul
(bad)
scas
sbb
push
adc
mov
out
or
mov
sbb
mov
cs
outs
pop
lods
dec
movs
ret
adc
ret
or
scas
jb
push
inc
lock
in
push
mov
xlat
or
sub
xor
dec
push
mov
xchg
mov
pop
jecxz
pop
mov
xor
add
popa
inc
stos
xor
pop
xchg
ja
lods
inc
sub
xor
mov
imul
(bad)
js
add
(bad)
outs
mov
mov
ret
cmp
das
das
xlat
and
(bad)
pusha
xchg
push
ror
out
inc
aas
sub
dec
aam
pop
inc
retf
sbb
cmp
add
mov
mov
ins
fcom
jae
sbb
mov
fdiv
sbb
fwait
outs
repz
jl
adc
mov
aaa
adc
inc
nop
push
and
inc
lea
test
sub
push
jo
push
pop
xlat
sbb
push
jmp
or
das
mov
xor
xor
imul
pop
xchg
lahf
sbb
shr
gs
sub
popa
sub
xchg
das
fild
cmp
push
mov
sub
xchg
lea
mov
mov
push
das
out
and
push
add
mov
cmp
pop
cmp
rol
repz
imul
push
test
xchg
pusha
(bad)
mov
fist
jo
push
inc
jb
fisubr
adc
scas
outs
das
mov
jbe
ds
xchg
and
sub
sbb
test
push
pop
fild
test
inc
in
and
lahf
aaa
and
push
add
rol
pushf
xor
xchg
cwde
xchg
jae
iret
stos
adc
cmp
push
adc
ds
pop
or
(bad)
aam
adc
pop
inc
out
jecxz
mov
iret
mov
sub
push
and
(bad)
loope
inc
mov
ja
mov
lods
ror
dec
sub
inc
repnz
mov
out
jnp
cs
or
(bad)
aam
stc
xchg
je
adc
fcomi
mov
pop
fdiv
sub
out
stos
rol
cmp
ja
xchg
mov
imul
lds
jbe
mov
pop
mov
mov
and
stos
add
aas
aas
mov
jae
(bad)
ss
xlat
jnp
sti
cmp
scas
add
push
or
sub
sub
sub
dec
sbb
sub
scas
xchg
clc
shr
loopne
xchg
xchg
sub
(bad)
mov
je
mov
ror
cdq
and
xor
fbstp
pop
in
shr
or
jnp
lahf
xchg
add
push
cmp
sbb
daa
cs
out
mov
js
jecxz
inc
push
add
push
loopne
es
pusha
pop
sar
xor
daa
aad
or
jp
fld
push
loopne
arpl
ja
xlat
adc
jecxz
(bad)
(bad)
jg
sbb
dec
out
fwait
imul
lea
aad
adc
jle
inc
inc
mov
or
stos
imul
lods
cmp
pop
lods
push
sub
sbb
sbb
sub
das
iret
test
neg
data16
loopne
movs
and
popa
jae
adc
scas
xchg
les
mov
mov
stos
mov
mov
dec
rdpmc
add
dec
aad
lds
push
pop
push
mov
mov
das
and
sbb
jae
es
xor
pop
das
mov
call
xor
push
mov
and
retf
cmps
stos
or
mov
add
adc
pop
xor
adc
add
dec
clc
dec
cld
pop
xor
xor
or
es
loop
jne
xchg
push
dec
loop
shl
fs
push
pop
ficomp
pop
inc
js
sbb
scas
sbb
ins
fwait
mov
retf
pop
inc
push
jne
jns
push
and
arpl
clc
inc
outs
jne
loop
int3
pushf
sbb
inc
jb
fwait
push
push
add
popa
fwait
mov
dec
jo
mov
aaa
push
cmp
fisttp
repnz
or
push
push
and
mov
cmps
rcl
icebp
push
sti
add
push
outs
outs
ins
push
xor
jo
ins
xor
in
push
and
push
je
repnz
gs
mov
inc
push
test
and
pusha
bound
iret
pusha
xlat
mov
jns
pop
loop
or
pop
inc
out
cmp
inc
das
cmps
sbb
ins
pusha
jb
imul
jbe
mov
jns
push
or
or
push
or
push
loop
push
and
in
pop
cdq
les
push
je
shl
jae
mov
sbb
sbb
push
inc
adc
jbe
outs
popw
inc
or
cmp
add
dec
popa
ins
mov
bound
addr16
inc
jno
sbb
popa
nop
add
rcr
ror
in
mov
push
mov
mov
dec
dec
loop
rcr
dec
popa
push
(bad)
and
mov
imul
gs
sbb
jge
loope
je
cmp
sbb
jno
imul
adc
pop
sub
jl
sar
inc
xchg
out
dec
sub
xor
mov
xchg
fcom
push
jle
push
sbb
ins
cmp
and
je
xchg
add
call
stos
cmp
mov
push
xor
xchg
mov
repnz
imul
dec
arpl
push
aaa
imul
sub
fwait
ret
outs
add
push
mov
ins
pop
mov
push
into
dec
ins
sub
sbb
jns
cmp
jae
jae
call
xor
jne
mov
and
loope
xor
je
pop
jb
dec
mov
mov
dec
outs
inc
stos
jmp
stos
pop
sub
inc
xchg
xor
push
movs
imul
mov
mov
push
out
sub
inc
adc
in
sub
ins
sbb
(bad)
data16
sbb
outs
pop
add
jne
pop
pop
mov
in
jb
add
add
or
inc
sub
in
enter
sub
push
mov
push
pop
or
cs
in
xor
(bad)
in
jp
outs
sar
pop
add
add
aad
sbb
mov
call
cld
pop
aad
add
adc
xor
pop
mov
fs
dec
add
not
or
inc
mov
fcom
xchg
and
(bad)
shl
ret
gs
loope
add
sbb
or
pusha
hlt
mov
test
jo
ret
sbb
mov
aas
jnp
add
fdivr
fld
cmovg
adc
add
sbb
jb
pop
or
ror
sbb
push
xor
mov
mov
fs
rol
aaa
push
fst
fs
and
and
dec
sbb
cwde
and
mov
inc
push
test
mov
xchg
dec
cmp
in
mov
inc
lahf
inc
xchg
inc
rcr
or
sbb
clc
je
ja
in
ins
ret
and
fidiv
mov
xchg
add
popa
mov
pop
xor
jae
pop
add
jne
data16
inc
dec
xor
and
fiadd
xchg
or
das
push
ins
in
push
mov
gs
addr16
sub
xchg
js
sub
or
sbb
dec
ret
pop
mov
inc
sbb
add
mov
xchg
leave
jo
sbb
xchg
push
pop
pusha
or
pop
xchg
mov
add
and
cmp
outs
or
ficom
and
jns
cmp
pop
push
mov
xlat
push
jae
stos
out
rcr
cmp
bound
fistp
adc
stc
xor
in
jbe
sub
and
inc
push
or
ss
mov
(bad)
jb
sub
sbb
outs
imul
addr16
jmp
in
sbb
mov
or
pusha
sub
jo
push
sub
outs
sbb
mov
add
arpl
dec
out
fadd
xor
ss
sbb
mov
xor
add
clc
outs
sub
push
xor
push
sub
lods
xor
xor
test
or
jnp
pop
adc
and
sbb
(bad)
mov
add
mov
pop
xor
adc
jnp
cmc
and
mov
fsubr
add
lods
sub
sbb
outs
aas
scas
push
sahf
or
sbb
sub
sbb
sar
dec
xchg
and
and
iret
jno
adc
xor
cmps
add
adc
or
loopne
mov
cwde
jo
inc
out
pop
sahf
sahf
repz
ror
or
xchg
mov
ret
push
mov
xor
sub
inc
inc
sbb
mov
xor
mov
jbe
mov
in
or
js
and
xchg
push
imul
and
mov
ins
add
xchg
adc
inc
or
cmp
out
inc
dec
sbb
daa
add
inc
jnp
aam
pop
pusha
cli
or
(bad)
dec
bound
lock
jb
and
pusha
pop
pop
and
sbb
mov
retf
jo
jns
ja
pop
xchg
fwait
sbb
clc
daa
shr
ja
int3
mov
out
dec
jb
je
pop
std
inc
mov
mov
jmp
sahf
add
inc
jb
push
mov
rcr
inc
mov
or
cmp
lods
das
inc
mov
call
stos
sub
adc
push
daa
loope
mov
push
addr16
mov
xchg
cmp
les
sub
lock
fadd
push
dec
nop
mov
pop
sub
das
mov
xchg
jbe
sub
mov
(bad)
fisubr
stos
push
sub
mov
stos
push
outs
jne
(bad)
jo
in
imul
mov
jns
push
xchg
mov
dec
fs
xor
push
pop
jmp
inc
fiadd
xor
or
dec
outs
dec
xchg
push
push
popa
jae
adc
xor
cmp
dec
dec
inc
adc
sbb
sti
into
gs
pop
dec
push
aas
dec
mov
or
sub
inc
pop
xchg
pop
pop
sub
or
ja
ja
inc
xchg
es
ins
js
movs
test
push
pop
scas
stc
iret
jae
xchg
xchg
cmp
call
cmps
mov
add
or
mov
add
shl
or
es
shl
inc
xor
pop
and
push
xchg
lods
sbb
jno
sub
arpl
dec
dec
mov
pop
xchg
or
pop
inc
ins
retf
je
enter
not
inc
jmp
fdivr
clc
push
nop
pusha
mov
jb
ins
fs
push
call
data16
ror
addr16
jmp
or
std
sub
imul
jns
nop
jecxz
daa
dec
popa
or
adc
inc
inc
inc
mov
loopne
inc
pop
dec
outs
stos
data16
push
imul
inc
jns
rcr
inc
mov
dec
jo
call
loop
xchg
arpl
sbb
bound
fsubr
cmps
sub
jmp
push
mov
sub
repnz
mov
dec
into
sbb
jo
cmp
push
jne
and
cmp
pop
jae
pop
outs
sub
fild
push
xchg
xchg
shl
sub
lahf
fldenv
ins
call
mov
jl
pop
aam
xor
sbb
push
push
das
adc
mov
sub
push
adc
adc
je
jmp
out
xor
adc
sbb
push
shl
test
xchg
aaa
push
je
mov
sub
pop
adc
cmp
bound
movs
dec
push
dec
shr
and
inc
inc
sbb
xchg
lds
sub
mov
addr16
popf
xor
pusha
sbb
aaa
inc
push
sbb
inc
loopne
push
imul
jecxz
pop
mov
lods
inc
cwde
ins
addr16
clc
scas
popa
inc
test
pusha
cmp
jmp
data16
out
jecxz
xchg
xor
in
mov
push
push
je
adc
ret
mov
pop
enter
test
add
dec
call
ins
adc
pop
gs
aam
dec
push
addr16
sbb
push
jne
mov
or
stos
add
sbb
cmp
(bad)
loop
adc
sub
pop
retf
sbb
rcr
sub
pop
ins
pop
push
pop
cmp
mov
aam
stos
push
movs
xchg
movs
push
inc
pop
inc
out
inc
xchg
cmps
jg
nop
jb
sbb
push
or
iret
sbb
fist
pop
jo
mov
xor
push
push
ins
sbb
sbb
sbb
imul
not
xor
pop
mov
inc
inc
pop
mov
mov
cwde
xor
sbb
fidiv
push
jae
inc
inc
push
add
(bad)
daa
mov
xchg
(bad)
stc
xchg
ins
jp
ret
pop
and
pusha
dec
sub
xor
fwait
ret
mov
dec
imul
cmp
and
xchg
jge
aam
and
pop
mov
rdmsr
test
inc
mov
adc
pop
pop
dec
sbb
xor
push
sub
push
sub
out
add
xor
adc
popa
push
outs
loope
int3
pop
xchg
add
int3
ret
xchg
cmp
(bad)
mov
data16
xchg
movs
aam
jmp
add
lock
das
xor
ror
sub
rol
mov
leave
shl
mov
cmp
int
sbb
cmp
out
cmc
scas
adc
ror
scas
push
push
pop
cmp
out
xor
clc
and
out
mov
pop
ins
jae
jno
xchg
test
xchg
mov
pop
retf
test
xchg
mov
js
jbe
jge
imul
not
aas
jg
sbb
daa
ins
push
push
xchg
inc
add
sub
dec
and
psubusw
mov
sub
or
cs
mov
or
jge
mov
adc
jno
sbb
and
daa
or
in
inc
cmp
scas
sub
inc
setge
push
das
inc
call
push
mov
add
push
std
dec
add
sbb
(bad)
mov
inc
outs
mov
sbb
rcl
add
int
add
add
sbb
sbb
sub
cmps
dec
adc
adc
and
(bad)
mov
add
add
inc
pop
push
xor
sbb
mov
jmp
outs
mov
dec
sti
pop
outs
gs
mov
sub
push
cs
push
or
je
js
add
jmp
pop
push
cmp
div
adc
(bad)
adc
imul
in
xchg
sbb
xchg
mov
pop
je
inc
push
loopne
inc
xchg
push
add
dec
mov
test
dec
sar
dec
xchg
push
adc
cmp
inc
rcr
or
mov
add
add
adc
cmps
imul
sub
pop
or
cli
push
dec
dec
jmp
and
or
mov
mov
push
shl
pop
inc
xchg
mov
push
add
in
lea
fist
stc
mov
ins
prefetch
jp
add
add
out
mov
mul
dec
adc
cmp
loopne
clc
push
mov
pop
and
div
outs
add
shl
sbb
aad
(bad)
ret
out
ins
outs
out
add
dec
rcr
push
test
rcr
ins
jo
out
xchg
(bad)
dec
js
mov
mov
in
sub
iret
or
push
dec
xchg
and
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
