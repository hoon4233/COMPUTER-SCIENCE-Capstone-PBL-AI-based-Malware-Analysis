fcomp
add
and
mov
add
add
or
sub
jge
dec
fdiv
stos
push
aam
and
xlat
push
jae
mov
adc
add
pop
(bad)
addr16
jne
inc
das
or
daa
pusha
cmc
jl
xchg
mov
jge
cli
shl
inc
xor
cmc
pusha
(bad)
mov
jb
arpl
mov
pusha
stc
jns
mov
jmp
lahf
xor
push
pop
dec
and
push
into
and
imul
les
jo
mov
ja
hlt
in
adc
jno
inc
sbb
mov
fwait
push
adc
ja
xor
int
dec
fs
xor
fmul
or
fisubr
icebp
and
pop
dec
xor
jns
dec
lea
dec
xchg
out
(bad)
imul
dec
shr
jb
fwait
repnz
stos
mov
pop
div
pop
add
jmp
xor
add
ds
fst
dec
and
dec
call
or
lods
add
hlt
rcl
dec
gs
pop
jbe
ins
xor
sbb
repnz
cli
outs
lds
add
popa
lods
mov
xor
sbb
push
mov
mov
daa
std
xor
test
bound
das
mov
ins
xor
mov
cmp
add
js
pusha
or
inc
cmps
iret
push
adc
loop
(bad)
sbb
int
leave
sbb
and
out
mov
aas
jl
mov
(bad)
in
sbb
ins
and
and
xlat
push
(bad)
sub
xchg
popa
adc
xchg
push
imul
and
enter
int3
fmul
cmp
and
js
(bad)
test
aas
in
rcl
sub
dec
mov
and
imul
mov
pop
repz
and
xor
nop
xor
mov
xor
sbb
cmps
test
xor
push
and
jo
or
push
jle
xchg
dec
loop
lahf
jo
gs
sti
xor
adc
inc
push
inc
in
jmp
shr
xchg
push
push
add
or
in
add
add
add
divps
movs
ret
push
inc
(bad)
cli
outs
adc
int
pop
cmp
inc
and
es
mov
lahf
sar
cmp
xchg
sbb
push
inc
mov
mov
fisttp
stos
jmp
js
mov
sub
xchg
xchg
dec
jge
jge
fsubp
test
cmp
inc
call
push
adc
xchg
shrd
gs
xchg
xor
add
in
jge
pop
cmp
fstp
mov
mov
xchg
test
mul
cwde
xor
and
xchg
into
lods
jb
jecxz
outs
cli
imul
jo
push
fdivp
sbb
sub
xor
scas
icebp
bsr
push
call
dec
add
push
xlat
movs
xlat
inc
dec
mov
mov
out
adc
in
movs
sbb
mov
dec
aam
add
xlat
iret
and
ret
test
adc
lds
sbb
cli
add
push
sbb
sbb
(bad)
ins
(bad)
into
add
push
pop
jbe
mov
jno
mov
pop
aam
push
rol
sub
icebp
inc
or
cmp
jge
not
pop
add
ja
xchg
scas
inc
push
mov
sub
or
stos
imul
les
jmp
jne
cli
leave
jmp
dec
xchg
xlat
(bad)
fdiv
cli
xor
fbstp
pop
out
ins
push
int
bound
das
mov
mov
nop
(bad)
jg
retf
mov
cmp
or
xchg
jb
fisubr
push
sbb
lock
adc
and
push
mov
push
daa
xchg
outs
add
fnsave
pop
stc
jle
xlat
jp
xor
aas
data16
(bad)
mov
test
sahf
scas
cmp
push
enter
dec
sbb
jmp
push
mov
mov
adc
xchg
std
inc
ins
mov
fisttp
dec
jb
outs
jecxz
push
out
cmps
or
loope
jne
xchg
mov
cs
lods
(bad)
mov
test
xor
retf
cmp
cdq
je
jecxz
stos
int3
jo
je
test
lods
ret
cmps
add
push
ret
jg
jg
ss
xchg
test
jl
add
push
mov
push
inc
fdivr
xor
cld
inc
div
pusha
cmp
mov
mov
sub
xchg
cdq
es
inc
xor
ins
hlt
and
imul
shl
lods
push
rcl
adc
jmp
pop
cld
sbb
dec
leave
cmp
adc
sub
ds
cmp
mov
shl
and
rol
pop
and
in
shr
sbb
lahf
adc
xor
out
int3
sbb
sti
dec
inc
aad
les
add
push
fcomp
fsubr
outs
sbb
retf
out
dec
mov
xor
xor
es
push
sbb
repnz
push
xchg
xchg
push
cmps
ret
adc
cmp
(bad)
loopne
jbe
jnp
push
pop
nop
repnz
cmp
adc
add
(bad)
inc
push
sbb
out
aaa
js
and
movs
push
pop
jle
sbb
mov
xchg
cmp
seta
es
add
inc
pop
lods
fimul
mov
(bad)
in
ja
lods
sbb
fbld
dec
mov
movs
xchg
imul
mul
repz
jne
aas
arpl
or
enter
pop
(bad)
aaa
cwde
clc
mov
rcl
fiadd
in
mov
(bad)
stc
repz
retf
cmc
sbb
jecxz
cmp
daa
cmp
imul
mov
or
ror
retf
imul
inc
adc
adc
ss
test
out
inc
inc
push
stos
mov
movs
sbb
mov
icebp
mov
mov
cmp
push
hlt
aam
lea
or
into
mov
mov
js
add
ds
push
in
pop
pop
mov
pop
pushf
or
ins
ds
out
test
imul
push
shr
sub
in
addr16
test
dec
xchg
mov
mov
and
xchg
pop
sub
push
xchg
and
scas
mov
cmp
cmp
scas
adc
(bad)
(bad)
or
push
dec
pusha
sub
adc
mov
daa
sbb
nop
push
dec
dec
push
fst
in
sub
mov
pop
push
add
pcmpgtw
inc
jo
popf
div
cmc
int3
sbb
sbb
in
xchg
sbb
lods
scas
or
ds
fadd
stos
jmp
sub
and
push
mov
mov
ret
xchg
sar
loope
adc
aam
imul
ret
mov
mov
(bad)
and
in
add
loopne
jl
aad
cs
xchg
loope
call
(bad)
dec
cmp
mov
xchg
shl
movs
in
sbb
jae
pop
stos
(bad)
pop
sar
cli
ret
pusha
mov
mov
dec
cmc
sub
mov
scas
in
mov
cmp
mov
push
xchg
sub
xor
movs
dec
and
jp
xchg
pop
cwde
call
std
pop
jnp
adc
xchg
pop
xchg
rcr
dec
xchg
mov
mov
mov
std
test
hlt
enter
push
test
jne
sub
pop
popf
jns
nop
cwde
int3
sahf
addr16
ror
jbe
call
mov
(bad)
stc
in
cld
mov
pop
inc
js
ds
loop
and
sub
adc
xchg
pusha
call
je
not
ror
fisttp
push
lea
mov
imul
rcr
adc
sbb
add
dec
sub
dec
fs
rol
dec
cmp
icebp
inc
daa
rcr
retf
iret
dec
(bad)
rol
and
(bad)
cli
sbb
sbb
lods
std
push
pop
aaa
cmp
and
ret
ficom
push
int
mov
icebp
arpl
push
pop
hlt
repz
xlat
jge
lock
retf
add
jmp
or
rcl
pop
mov
mov
and
sar
jmp
mov
jge
or
push
dec
sub
xor
(bad)
nop
dec
bound
shl
ss
inc
dec
xchg
shl
pop
inc
out
mov
push
pop
setle
in
mov
shr
dec
xor
cmp
cs
pushf
repnz
in
dec
outs
pop
add
fnstenv
sub
add
outs
jecxz
dec
lea
call
(bad)
sar
adc
mov
fist
and
jb
call
icebp
iret
retf
mov
adc
icebp
jbe
mov
and
push
cmp
test
lods
ror
gs
lahf
stos
lods
sbb
ins
xchg
test
daa
sbb
dec
in
retf
mov
cs
(bad)
ins
cmovb
imul
push
inc
adc
inc
jl
sub
stos
ds
add
aam
lock
xor
outs
movs
lahf
push
push
push
clc
repnz
pop
and
addr16
mov
ja
add
ret
sar
shr
popa
mov
dec
mov
push
xlat
jmp
jl
fistp
bound
pop
mov
sahf
push
loopne
xlat
bound
ds
add
rcr
in
test
lods
push
repnz
sar
test
or
in
push
and
sar
or
jbe
into
cdq
mov
int
aaa
xchg
and
sub
sbb
push
dec
cmc
sbb
mov
inc
jg
jmp
in
bound
cmp
cmc
not
add
fsubrp
sub
hlt
mov
or
push
cmp
xchg
sub
inc
push
dec
in
add
and
fmul
mov
(bad)
int
shl
ja
ins
xchg
dec
jb
data16
outs
les
mov
mov
add
fwait
fwait
sbb
xchg
cmp
cmps
not
dec
dec
cmp
push
mov
hlt
mov
push
arpl
sti
add
pop
or
jl
int
daa
mov
rcr
or
stc
inc
lahf
mov
jbe
jns
call
xor
jg
iret
stos
in
stos
in
sub
es
jb
aad
push
mov
xchg
mov
inc
inc
mov
lds
jmp
out
outs
add
stos
ror
sar
shl
shl
adc
ret
call
adc
test
xchg
jp
or
jmp
dec
xchg
adc
cmp
xchg
inc
jae
pushf
(bad)
shl
scas
cli
(bad)
movs
lahf
test
cli
lods
adc
stc
jmp
inc
xor
cmp
add
outs
int3
dec
int
ss
mov
jbe
call
xor
lds
mov
sub
mov
repnz
and
or
cmpxchg
sub
pop
mov
cli
or
mov
jnp
add
retf
lahf
shl
arpl
jge
lods
and
movs
mov
xchg
out
stc
rcl
retf
jmp
in
xchg
aas
retf
fadd
mov
test
(bad)
outs
movs
lock
or
add
cmps
loope
mov
js
icebp
jb
lock
repnz
das
mov
add
or
mov
cmp
push
in
retf
sub
add
nop
lock
test
out
inc
int
les
push
add
cmp
jl
or
jns
(bad)
aam
cwde
ror
cmps
and
sbb
out
fmul
mov
loope
pop
jmp
movs
test
test
fmul
dec
je
je
push
push
xchg
jno
dec
or
pop
add
or
dec
repnz
stos
add
shl
sub
mov
(bad)
mov
pusha
ins
shr
fsubr
mov
mov
mov
mov
cwde
js
into
push
push
or
mov
(bad)
shl
fisub
imul
sbb
pop
mov
sahf
cmp
ins
lods
add
cmp
into
sti
nop
adc
and
test
leave
rcl
inc
arpl
das
mov
movs
retf
lds
jg
or
push
sbb
in
ins
jne
btr
pop
lock
ins
movs
mov
jns
out
push
and
mov
jb
js
cmp
xchg
rol
cmp
scas
xor
inc
jbe
in
mov
mov
mov
pop
dec
iret
jo
pop
adc
cmp
add
inc
push
push
pusha
(bad)
pop
int3
cmp
nop
sbb
retf
vmovd
sub
push
in
sbb
cmp
sub
lahf
adc
test
xor
pop
jle
jnp
sti
cmps
test
mul
mov
pop
sbb
add
push
adc
mov
jmp
leave
outs
arpl
out
loopne
sahf
push
adc
int3
fwait
xchg
pop
jg
pushf
cmp
call
sbb
xor
sub
adc
cmps
aaa
pop
enter
sbb
arpl
cmp
dec
push
mov
sar
cwde
pushf
fs
ret
(bad)
loope
cli
xor
push
imul
or
jbe
fist
mov
ja
pop
aaa
cmp
pop
test
push
xor
sub
(bad)
mov
ins
(bad)
loop
shl
int3
adc
push
psubd
fld
sub
mov
dec
nop
int3
in
(bad)
arpl
ror
xor
cld
push
cwde
sub
mov
xor
dec
jmp
jp
fld
pop
out
adc
adc
mov
pop
mov
dec
xor
cli
pop
pop
ins
cs
daa
scas
pop
mov
dec
xor
(bad)
xor
arpl
xor
dec
mov
mov
sub
adc
add
cmp
push
loop
push
pushf
std
inc
rcr
or
sub
out
(bad)
aad
push
mov
ds
dec
loopne
fisubr
pop
mov
xchg
pop
xchg
test
sub
mov
sbb
enter
dec
push
dec
cmps
xchg
pop
ins
pop
push
mov
ror
fld
call
retf
loopne
mov
cmp
cs
cmp
lods
cmovne
inc
jl
add
daa
xor
jp
xor
rcr
stos
add
mov
mov
sbb
pop
mov
mov
outs
fwait
gs
pop
out
loop
xchg
fs
cld
mov
cmp
inc
mov
sub
int3
xlat
nop
out
into
in
jg
imul
fstp
bound
ud0
adc
add
push
and
test
add
adc
lock
mov
scas
test
inc
(bad)
aad
inc
imul
or
daa
xchg
aad
cdq
nop
xor
sbb
xor
aas
repnz
(bad)
push
test
mov
ds
adc
stos
icebp
test
(bad)
push
adc
bound
out
sbb
add
fsub
repnz
mov
push
popa
xchg
inc
scas
inc
ret
popf
xchg
lock
movs
sub
push
sbb
xchg
mov
mov
mov
pushf
lods
adc
pusha
inc
jmp
mov
sub
adc
inc
dec
dec
dec
repnz
xchg
xchg
mov
push
pushf
mov
out
sbb
adc
jl
das
xchg
mov
jle
mov
cdq
pushf
ja
data16
cmp
je
int3
pop
inc
aad
sub
mov
jp
pop
jmp
cdq
sub
rcr
mov
adc
int
mov
repnz
sub
dec
adc
pop
adc
sub
int
out
gs
mov
bound
movs
jne
addr16
pop
xor
jmp
js
clc
sbb
jmp
pop
cmp
sti
mov
enter
xor
mul
fs
movs
jmp
jl
mov
cmp
clc
pushf
repz
xchg
rcl
pop
ins
push
mov
xor
ret
mov
shl
js
push
iret
aad
push
in
scas
adc
dec
aaa
ja
fs
mov
inc
push
dec
mov
(bad)
rcr
sub
mov
and
(bad)
jge
jae
mov
loop
dec
mov
jp
ins
xor
(bad)
cmp
and
adc
pop
inc
sti
aad
mov
cpuid
add
repz
pop
cdq
xlat
jne
or
add
dec
adc
(bad)
addr16
mov
pop
push
add
adc
sub
mov
test
mov
xchg
movs
out
sbb
rcr
adc
cmp
mov
or
add
cld
vmread
inc
scas
xchg
aaa
mov
pop
pop
fs
fadd
xchg
out
in
pop
faddp
jnp
outs
pop
adc
mov
ja
neg
sbb
fcomp
(bad)
jecxz
pop
cmp
aaa
shl
mov
jmp
cmp
stos
jnp
movs
daa
cli
(bad)
hlt
and
clc
xor
cwde
retf
(bad)
xor
test
gs
cmp
outs
mov
add
or
sbb
or
and
mov
xchg
adc
mov
lods
pusha
sti
or
fcom
xor
and
ror
sub
outs
ins
xor
push
add
movs
mov
shl
fdiv
mov
aad
and
fwait
ds
mov
bound
mov
mov
jl
or
xchg
addr16
(bad)
pop
je
or
dec
mov
pop
icebp
push
mov
sub
frstor
or
(bad)
iret
dec
int
es
mov
sbb
jae
xchg
out
mov
add
scas
mov
sub
adc
jno
ss
scas
jl
mov
sub
push
mov
stos
cmp
inc
pop
jg
cmp
lahf
out
stos
adc
push
hlt
bound
sub
jmp
sub
jns
inc
aas
sub
mov
jecxz
repnz
fwait
ja
fistp
aam
in
sbb
shl
add
adc
sub
jmp
mov
jb
mov
sar
jmp
aam
push
test
xchg
inc
test
stc
mov
arpl
loope
add
inc
in
daa
gs
mov
scas
inc
sub
mov
dec
repz
lds
pop
sbb
or
inc
inc
cmp
mov
call
dec
(bad)
cmp
jmp
fs
ja
sbb
sub
mov
movs
sti
out
sub
out
xchg
ret
jns
jmp
ins
and
int
jg
aas
mov
aas
(bad)
loopne
jmp
rcl
pop
outs
xor
scas
jecxz
pop
sbb
xchg
fild
or
inc
inc
aad
sub
movs
ret
sbb
sbb
dec
sar
pop
mov
push
mov
dec
mov
gs
pop
sbb
and
sub
or
sub
mov
inc
sub
std
push
push
pusha
jae
push
xor
or
and
mov
xchg
aam
jmp
aas
scas
sbb
inc
pop
xchg
shld
cli
pop
dec
mov
and
or
imul
cs
push
fucomip
inc
(bad)
in
fsubr
sbb
outs
cmp
ror
add
cmp
push
int3
(bad)
jno
imul
ror
mov
and
jns
stos
jle
pop
push
(bad)
iret
jne
jecxz
pusha
repnz
push
jge
push
and
jp
dec
sub
mov
sbb
sbb
stos
test
(bad)
sbb
fs
lahf
ss
or
pushf
mov
mov
test
sbb
sub
hlt
retf
sub
sub
push
pop
ins
jl
cwde
sbb
inc
movs
clc
ins
daa
das
mov
or
and
pop
mov
and
push
in
lods
icebp
mov
into
retf
addr16
inc
or
dec
call
push
push
dec
sbb
aad
rcr
repnz
add
into
mov
jmp
push
aad
cmps
shl
stc
push
xor
arpl
push
xchg
mov
push
(bad)
cmps
aad
adc
icebp
sbb
outs
and
movs
cmc
enter
xor
cmp
or
call
mov
add
dec
out
or
sbb
or
xchg
dec
int
add
fild
bound
nop
adc
pop
sti
outs
in
call
repnz
int
pop
mov
icebp
dec
mov
mov
aam
int3
cld
add
imul
xor
jmp
movs
ja
fisubr
jge
gs
pop
shr
sbb
pop
test
into
dec
sub
mul
pop
aad
inc
inc
sbb
push
adc
ins
movs
push
aam
bound
xor
xchg
sub
mov
sub
add
call
inc
push
sbb
mov
imul
paddsw
inc
imul
cwde
sub
stc
mov
mov
cmp
and
push
add
(bad)
shl
xor
xchg
jmp
mov
cmp
imul
push
xor
test
sbb
rcr
mov
popa
sub
add
pushf
test
xor
or
data16
ins
rol
adc
xor
jg
sub
pop
(bad)
mov
cmps
or
call
(bad)
sbb
ret
pop
(bad)
outs
push
ror
data16
xchg
sub
fidivr
mov
test
(bad)
and
stc
xor
pop
movs
cmps
inc
xlat
fcom
mov
inc
xchg
mul
push
or
out
jb
test
push
adc
(bad)
mov
ins
ins
in
scas
ss
cs
dec
shl
push
outs
mov
mov
cmp
aas
test
mov
mov
inc
dec
sub
data16
xlat
(bad)
mov
loopne
xor
cmp
xchg
jno
retf
push
inc
jb
xor
mov
sahf
mov
xchg
pusha
cmp
mov
call
sub
dec
ins
push
test
mov
pop
and
add
ja
or
cmp
sub
mov
(bad)
aam
pop
add
pop
cmp
pop
outs
loop
push
and
lods
add
jg
sbb
cld
xlat
shl
inc
jae
sub
jmp
shr
imul
jb
ins
pop
inc
mov
popf
arpl
daa
out
dec
adc
adc
mov
inc
je
mov
sbb
in
imul
repz
fcom
mov
jnp
jge
adc
and
std
jge
adc
xor
push
cmp
(bad)
out
mov
ret
repnz
lods
adc
dec
pop
xor
add
fbstp
in
(bad)
mov
pop
ret
pop
les
dec
in
xor
aas
and
add
std
or
dec
ret
jp
jecxz
sub
xchg
ja
cmp
aam
loop
mov
or
mov
stos
mov
stos
in
and
jp
cs
or
daa
stos
jo
ds
ror
das
sub
idiv
fild
mov
add
push
daa
icebp
or
xor
mov
or
in
(bad)
es
pop
xor
stc
add
int3
pop
setl
(bad)
mov
add
xor
test
leave
adc
lahf
pop
and
fld
jmp
mov
pop
push
add
push
ds
or
sbb
hlt
cld
cmps
and
fcomp
and
inc
or
xchg
xor
bound
jg
(bad)
loop
push
mov
gs
movs
add
mov
sbb
inc
fwait
out
pop
push
mov
xlat
sub
jo
push
xor
enter
dec
retf
pop
mov
ret
test
into
ror
adc
pop
aam
mov
leave
mov
ret
push
clc
mov
ja
loopne
and
mov
(bad)
shl
push
dec
pop
ds
jne
cmps
out
repnz
out
inc
fwait
call
mov
add
in
jo
xchg
daa
daa
cmps
es
and
(bad)
popa
dec
enter
cmp
div
dec
push
xchg
inc
jp
xlat
repnz
pop
shl
adc
cmp
adc
aas
add
xor
jae
adc
daa
movs
pop
jo
pop
jns
xor
adc
jp
(bad)
push
sub
mov
int
cmp
lea
sbb
pop
pop
outs
leave
push
xchg
fidiv
push
repz
jecxz
or
stos
jae
aam
adc
push
mov
sbb
xor
nop
sbb
fcmove
movs
pushf
push
imul
and
shr
pop
mov
loope
scas
fs
movups
push
or
mov
stos
mov
pop
cli
adc
retf
imul
imul
dec
fmul
inc
fistp
rcl
fsub
ficomp
outs
jns
inc
jbe
mov
or
inc
jnp
nop
shl
(bad)
inc
in
icebp
(bad)
push
mov
out
xchg
inc
mov
lods
push
push
mul
mov
cmps
cmp
inc
jbe
loope
test
cmp
fstp
dec
sbb
add
mov
leave
in
or
(bad)
sahf
xchg
vandnpd
in
sbb
js
mov
loopne
pop
cli
aaa
inc
xchg
or
xchg
inc
mov
add
mov
adc
mov
push
adc
mov
xchg
call
rcl
dec
popa
xchg
ror
push
xor
inc
rcr
int3
push
xor
push
sub
xchg
cld
sbb
pop
pop
push
xchg
cmc
adc
aaa
in
stos
in
ds
sahf
mov
sub
add
aam
(bad)
lock
or
test
mov
inc
(bad)
mov
test
and
cld
sahf
dec
or
jmp
mov
test
out
add
aad
arpl
in
push
vphaddwd
push
cs
aam
outs
xor
adc
shl
(bad)
(bad)
out
lahf
out
add
dec
dec
je
out
fwait
cwde
test
cli
sbb
rcr
ds
push
mov
mov
dec
bound
pop
mov
not
loopne
shr
clc
xchg
cs
ja
xchg
fistp
mov
hlt
push
fdivr
or
not
outs
inc
pushf
dec
pop
out
cs
inc
in
push
push
and
test
cmps
jp
or
ror
mov
mov
cmp
movs
or
mov
(bad)
sbb
cmc
xchg
icebp
(bad)
(bad)
push
(bad)
jg
mov
mov
cmp
shl
add
(bad)
leave
sbb
movs
les
imul
inc
and
out
push
nop
imul
adc
int3
inc
pop
or
sbb
outs
ins
repz
lea
adc
in
retf
xchg
test
(bad)
inc
add
xchg
sbb
inc
fnstenv
addr16
xchg
enter
sahf
jge
retf
leave
xor
loop
lahf
push
sti
stos
adc
push
inc
and
jnp
imul
ins
pop
popf
shr
je
lock
outs
iret
lock
pop
add
call
sub
xor
shr
adc
cmps
mov
stos
aas
in
add
es
push
adc
pop
es
cmps
push
push
fisttp
stos
mov
mov
(bad)
lahf
mov
lock
adc
or
cmps
mov
adc
outs
cdq
jg
sub
jmp
mov
mov
stos
lods
mov
fbstp
outs
je
in
leave
sub
dec
enter
and
or
inc
dec
sbb
jmp
fnstsw
mov
arpl
pushf
cdq
bts
or
cmp
jg
xchg
lea
je
cld
xchg
js
push
dec
push
jmp
mov
dec
call
push
jno
or
in
xchg
lock
test
add
fiadd
xchg
mov
mov
xchg
add
push
js
lea
jbe
ficom
add
setb
pop
repnz
pop
test
sbb
cmc
jg
stos
ret
dec
pop
mov
call
xchg
inc
mov
ret
mov
jle
mov
fistp
cld
les
fld
(bad)
outs
pop
cmp
sti
add
pop
jp
dec
sbb
stc
retf
jge
ja
int3
imul
lods
sub
fs
ds
and
(bad)
mov
pop
adc
gs
or
test
nop
jmp
or
lods
jmp
arpl
cmp
inc
xchg
dec
and
fcom
das
xlat
sbb
sub
scas
xlat
adc
jbe
retf
cmp
stos
adc
scas
sbb
pop
or
mov
adc
sub
test
(bad)
enter
mov
jne
add
ret
add
lahf
loop
xchg
mov
in
push
scas
sub
and
inc
mov
icebp
ins
out
jmp
loope
mov
dec
push
xor
repnz
sahf
call
mov
addr16
fisttp
or
mov
int3
fcom
adc
enter
mov
xor
mov
icebp
add
lods
iret
ret
sbb
daa
or
xor
adc
movs
xor
and
(bad)
jo
push
hlt
inc
inc
push
mov
aam
dec
test
cmp
stc
and
fisttp
in
sub
lds
mov
add
mov
mov
inc
xor
fistp
les
xor
cmp
lods
out
xor
push
sar
ror
cmp
push
repnz
inc
rcl
mov
mov
xor
xchg
data16
add
xor
(bad)
(bad)
cld
ins
mov
add
fdiv
lods
pop
pop
dec
cmp
dec
retf
cmp
xchg
dec
int3
or
jbe
popa
push
jmp
test
xor
(bad)
jge
int3
or
mov
in
movs
dec
sahf
or
in
imul
imul
rol
and
(bad)
repnz
lock
sub
dec
shl
movs
lds
cmp
xor
dec
and
jb
mov
sbb
fdivr
sbb
not
sub
push
repz
dec
jns
retf
pop
enter
fisttp
jecxz
lods
push
nop
sbb
push
imul
mov
js
loop
cs
aas
mov
xor
pop
mov
jmp
xor
pop
mov
call
mov
arpl
xlat
aam
sbb
sbb
shl
add
mov
loope
push
cmp
movs
xchg
leave
or
add
pop
in
lods
lock
inc
jl
retf
dec
push
int
outs
push
into
xchg
mov
int3
pop
cmp
push
cmc
push
sti
mov
mov
popa
aaa
adc
das
add
push
dec
xor
jmp
mov
fwait
enter
test
repz
xchg
je
fisttp
test
add
adc
mov
in
add
int3
movs
test
fidivr
icebp
sbb
jmp
inc
mov
push
push
call
repz
cmp
jo
cmps
and
and
repz
xor
dec
arpl
or
inc
outs
xor
mov
icebp
push
shl
mov
add
cmp
dec
stc
push
stc
das
mov
nop
test
and
aam
lahf
cli
pop
mov
inc
test
(bad)
mov
mov
xlat
xor
ror
std
push
clc
xor
cmc
pop
add
sub
mov
jg
jmp
mov
ins
mov
sub
push
adc
push
mov
dec
and
loop
sub
in
xchg
bndstx
lods
out
enter
(bad)
lods
call
or
call
and
in
test
mov
fistp
fisttp
mov
push
jne
jae
xlat
sbb
pusha
jb
inc
or
add
pmaxsw
and
add
jmp
mov
into
cwde
loopne
xchg
add
cli
repz
or
xchg
aaa
adc
ja
mov
stos
dec
(bad)
lahf
xchg
mov
mov
xchg
jo
nop
push
daa
sub
or
sahf
inc
sbb
scas
fadd
mov
mov
add
movs
xor
std
hlt
in
inc
jmp
dec
mov
inc
test
add
lahf
adc
ss
adc
bound
in
out
pushf
stos
in
jae
mov
jns
xor
jo
push
jecxz
mov
imul
xchg
mov
jnp
pop
loopne
mov
test
cs
sbb
std
or
dec
dec
mov
sub
retf
mov
faddp
and
mov
fcmovnb
sub
pop
cli
add
push
pop
inc
xchg
pop
arpl
lds
sahf
out
ret
and
pusha
(bad)
imul
test
push
xor
xlat
aam
dec
ins
and
cdq
xchg
jbe
push
dec
in
jge
sbb
mov
or
out
cmp
jo
cmps
mov
push
sbb
gs
iret
xor
push
cmp
mov
mov
scas
or
jns
jmp
mov
sbb
or
adc
mov
rep
arpl
and
add
add
jmp
jl
test
add
fistp
xor
xchg
sbb
das
sub
mov
lods
call
mov
or
lods
mov
xchg
jmp
add
or
test
dec
or
sub
mov
push
pop
mov
mov
ja
jl
cmp
mov
hlt
xchg
dec
sub
fldcw
pop
dec
pop
cmc
imul
popf
fcmovb
dec
pop
xchg
fld
push
mov
inc
lods
ror
inc
fs
xchg
or
into
sahf
push
jg
das
test
cmp
jae
sub
mov
lock
fbld
xchg
outs
in
xchg
(bad)
xor
daa
in
mov
rcr
xor
cmps
imul
in
into
push
push
cli
inc
or
jl
inc
mov
pop
or
xchg
leave
ins
cmps
cwde
test
inc
jne
sbb
es
lds
mov
enter
inc
inc
push
pop
lahf
xchg
add
pushf
dec
leave
inc
lods
jns
xchg
push
or
adc
xchg
inc
mov
iret
add
sbb
cmps
(bad)
mov
rcr
xlat
cs
lea
dec
(bad)
adc
xchg
jnp
fadd
enter
sbb
inc
(bad)
out
ds
push
and
fs
(bad)
fadd
sub
shr
mov
add
cmp
push
cli
mul
xchg
rol
dec
pushf
push
ror
cld
or
ret
push
sahf
push
into
mov
push
inc
(bad)
out
push
test
xchg
mov
fcomp
retf
xchg
inc
or
xor
push
rol
push
jle
loop
jns
inc
es
jmp
jo
fmul
mov
movs
and
sub
adc
imul
stos
imul
and
imul
xchg
mov
aam
ficomp
sbb
ret
aas
adc
push
sbb
fsubp
add
adc
imul
pop
cmp
push
rcr
retf
lahf
or
daa
out
pop
aam
mov
mov
scas
test
mov
xchg
div
jg
and
in
movs
sbb
xor
bound
push
push
int
push
out
retf
xlat
dec
adc
js
lods
dec
inc
pop
dec
ffree
mov
jb
mov
push
mov
cmc
lahf
jnp
mov
movs
dec
mov
mov
push
(bad)
sub
xor
inc
call
int3
gs
xchg
cld
sub
and
aas
loop
dec
xchg
repz
popa
mov
mov
in
jmp
or
movs
movs
mov
ins
test
repnz
cmp
pop
rcr
(bad)
aas
cmp
outs
pop
sbb
fist
jg
int
loopne
call
and
push
inc
pop
out
and
mov
push
test
bound
stos
out
lahf
mov
test
cmc
loopne
inc
push
clc
mov
ja
cwde
es
jnp
pop
iret
iret
mov
gs
loop
mov
inc
mov
shr
jae
inc
pop
scas
mov
aam
jmp
ja
es
inc
into
pop
ja
call
xor
pop
fnsave
push
enter
cdq
cmp
fwait
jecxz
mov
test
rol
push
mov
cmp
aaa
add
cmp
data16
nop
test
pop
xchg
scas
xchg
test
iret
push
sub
and
dec
mov
pushf
popa
sbb
and
jmp
dec
lods
jp
push
sub
jo
jb
xchg
(bad)
xchg
lods
es
test
test
inc
fs
mov
cmp
xchg
scas
xchg
in
jmp
fadd
mov
dec
mov
mov
jle
push
and
aad
sbb
mov
mov
in
mov
in
das
fwait
jo
call
bound
pop
fimul
(bad)
adc
adc
test
rol
shl
push
in
sbb
sti
mov
fdivr
iret
and
fwait
inc
jb
jbe
xchg
in
arpl
cmp
xchg
pusha
lahf
fst
repnz
in
pop
mov
mov
test
test
pop
dec
sub
xchg
inc
fsub
or
inc
pop
call
rcl
or
ret
fidivr
inc
xchg
dec
aaa
sub
push
lea
xchg
fs
xor
jbe
jne
mov
out
jae
ss
(bad)
call
mov
data16
mov
xchg
jne
jp
lods
adc
fiadd
stos
arpl
mov
imul
mov
fisub
xchg
into
pmulhuw
aaa
loop
and
xchg
rcr
test
ss
mov
ficomp
loopne
out
es
ror
adc
mov
dec
mov
fnstenv
(bad)
arpl
jge
or
idiv
push
xchg
xor
(bad)
popf
jl
pop
dec
fstp
push
rcr
cmp
loop
pop
stos
movs
je
loope
cmc
cld
bound
fisubr
cmc
and
(bad)
repz
lock
cld
push
xchg
aad
or
sahf
jno
xchg
jnp
pop
mov
xchg
jecxz
out
add
stos
mov
(bad)
mov
(bad)
ficomp
lods
pop
leave
jb
enter
fsubr
mov
enter
inc
sbb
retf
outs
lock
daa
cmp
data16
mov
lods
and
in
fld
jge
adc
sbb
push
adc
mov
add
mov
je
sbb
std
int3
jae
and
push
xchg
stc
(bad)
ret
mov
int3
jbe
loop
rcl
out
xchg
inc
or
popf
(bad)
mov
cdq
pop
shl
jbe
data16
daa
xor
(bad)
sub
jns
xchg
xor
inc
or
dec
shr
(bad)
dec
mov
pop
or
or
push
into
mov
cli
jnp
out
outs
movmskps
out
lods
push
and
push
test
jg
test
xor
mov
mov
cmp
gs
push
jle
rcr
adc
stos
mov
dec
lea
mov
inc
mov
int3
addr16
lahf
test
nop
xchg
loopne
pop
cmp
mov
movs
call
add
je
jmp
sbb
xchg
and
fdivr
mov
cmp
fisubr
sti
call
push
dec
shl
mov
(bad)
loope
mov
loop
(bad)
push
sub
cmp
shl
jo
je
in
jbe
in
mov
aaa
(bad)
outs
xchg
imul
mov
jp
pop
loopne
(bad)
add
clc
mov
das
mov
cld
inc
iret
lds
imul
xor
dec
rcr
mov
into
mov
or
inc
rcr
(bad)
(bad)
push
and
lods
icebp
or
retf
or
push
(bad)
call
xor
dec
inc
imul
jnp
dec
jb
jl
rcr
cmp
sahf
ss
add
bound
mov
in
xchg
les
loop
jmp
add
fsub
iret
js
sbb
mov
lock
push
(bad)
fsubr
cmp
sub
mov
fisttp
inc
imul
pop
out
mov
pop
jmp
fst
daa
outs
fisubr
mov
mov
ds
fld
sti
push
into
gs
stos
dec
cmp
outs
clc
stos
push
std
or
push
sbb
mov
inc
sahf
xor
test
push
push
(bad)
daa
(bad)
inc
pop
mov
jae
xchg
iret
and
jmp
pop
aad
jecxz
add
jg
jnp
call
xor
sub
mov
into
in
out
xchg
jo
xchg
in
jl
stc
arpl
sub
fbstp
inc
test
hlt
inc
dec
jbe
push
sub
dec
jae
call
stos
jmp
inc
jmp
std
call
(bad)
inc
ret
lods
lods
pop
sbb
movs
retf
add
xor
lahf
stc
in
test
rol
mov
and
push
and
adc
cwde
cld
aad
or
mov
and
lods
and
mov
mov
mov
cmp
stc
aad
jp
int
test
aam
or
sbb
je
popf
mov
clc
mov
adc
push
cdq
(bad)
(bad)
mov
inc
push
loopne
cwde
pop
fnstcw
push
ja
lea
pop
inc
jecxz
loop
push
push
aas
pop
add
mov
push
scas
hlt
(bad)
dec
cmp
pop
ret
cmp
repz
mov
mov
je
je
jecxz
add
inc
mov
ins
aam
jno
add
jbe
mov
push
or
lds
scas
int
push
repnz
sbb
fdiv
sbb
jns
pop
pop
in
repnz
neg
dec
popf
inc
lock
ret
push
push
inc
cmp
fst
mov
mov
dec
loopne
push
lock
push
jmp
push
test
imul
push
and
push
movs
shr
sbb
push
sbb
not
pop
sub
shl
adc
pop
mov
jo
and
or
loop
div
out
loope
sbb
jno
cmp
push
xlat
fistp
mov
xchg
lock
mov
fistp
loop
loopne
mov
or
and
add
test
pop
push
call
jns
sar
push
loopne
push
mov
inc
dec
js
in
leave
(bad)
outs
lea
mov
fucomip
xchg
mov
fimul
and
cdq
aas
pop
or
xor
aam
push
cmc
push
mov
xchg
stos
(bad)
mov
cmps
or
or
sbb
test
adc
mov
sbb
sub
aam
not
adc
mov
daa
add
add
adc
aad
into
cmps
mov
cmp
(bad)
jns
xchg
test
std
sub
repnz
out
nop
test
adc
mov
mov
xor
mov
out
leave
dec
inc
jmp
inc
pop
push
mov
add
gs
sub
gs
ins
sbb
jg
push
neg
daa
mov
clc
ds
jae
adc
aad
(bad)
xor
test
dec
loop
or
fdivr
scas
mov
or
inc
dec
aaa
sbb
jmp
ror
idiv
jg
dec
repnz
push
mov
fcmovne
pop
int3
adc
cld
ficom
sbb
aad
lods
mov
daa
cmovbe
fdivr
lea
shr
pop
pop
xchg
jbe
movs
xor
xchg
out
adc
aaa
add
(bad)
mov
ins
repnz
add
inc
add
push
xor
fild
and
lods
ret
ret
or
jle
repnz
stos
pop
fdiv
fsubr
push
sub
out
data16
push
add
inc
or
adc
movs
or
ds
dec
test
lahf
retf
pop
dec
sahf
inc
adc
xchg
push
addr16
call
fistp
dec
mov
push
sub
add
xchg
pop
sbb
iret
rol
neg
sbb
ss
push
lds
inc
and
add
lods
adc
icebp
cmp
ficomp
mov
in
inc
mov
fstp
es
push
push
adc
inc
jns
int
adc
ror
(bad)
xor
jno
and
push
and
dec
outs
pop
dec
push
dec
movs
test
(bad)
lock
mov
test
inc
xor
sahf
sbb
das
add
int3
xchg
push
pop
stos
or
add
aam
fimul
fldcw
dec
pop
xor
and
jecxz
pusha
cmps
ror
cmps
add
shl
sbb
lods
cli
cmp
add
xor
mov
iret
adc
sbb
mov
sub
mov
dec
sub
shl
mov
and
shl
mov
add
pusha
jg
call
jp
sti
leave
fsubr
mov
mov
cmp
cli
imul
mov
and
mov
scas
pop
test
(bad)
mov
push
push
xchg
jno
adc
test
scas
cmp
mov
add
fisttp
aam
icebp
adc
mov
jg
inc
xor
fucomip
or
sbb
pop
lea
mov
jo
add
aas
movs
cmp
jl
add
dec
daa
jne
shl
jl
movs
call
lods
and
mov
mov
repnz
mov
repnz
not
mov
loopne
mov
(bad)
shr
inc
jae
inc
stos
lods
pop
in
xor
mov
jnp
mov
jno
test
pusha
and
in
sbb
icebp
dec
sub
push
adc
mov
stos
out
rcl
cmc
and
test
add
pop
push
aad
xchg
cdq
(bad)
push
sub
add
cmp
xchg
scas
jb
hlt
jo
push
push
and
shl
mov
mov
(bad)
jmp
xor
into
test
adc
bound
out
dec
sub
pop
bound
(bad)
dec
movs
lahf
xor
(bad)
js
out
fcomp
fistp
adc
pop
daa
fsub
mov
rol
push
or
pop
mov
pop
or
out
adc
idiv
in
or
in
dec
xor
cmp
(bad)
adc
pop
inc
dec
xchg
out
out
test
mov
cmc
mov
jns
cmc
dec
jg
lahf
adc
je
fistp
xor
ds
and
mov
add
sbb
mov
add
inc
into
xor
and
lock
dec
int
pop
jne
inc
dec
(bad)
pop
loopne
(bad)
or
lds
sbb
push
jb
mov
mov
retf
lea
sub
xor
xchg
hlt
adc
push
add
jb
(bad)
and
xchg
adc
xchg
ret
int3
xlat
mov
sahf
pop
mov
pop
cmp
and
fcomp
jmp
and
xor
dec
lahf
and
mov
mov
push
push
sub
sbb
sub
push
mov
dec
stc
dec
pusha
inc
rol
jp
pop
xchg
cwde
pop
ret
mov
sbb
adc
adc
stos
cmp
mov
out
jne
mov
mov
or
mov
xchg
ins
test
scas
repnz
adc
fmul
mov
shr
arpl
inc
shr
popa
fcmovnu
sub
adc
adc
and
sbb
cli
inc
iret
adc
jne
mov
ds
movs
cmp
dec
ret
nop
inc
ss
in
mov
iret
or
jl
dec
push
xor
inc
dec
adc
push
or
pop
adc
dec
xor
pop
shl
mov
call
xor
(bad)
psllq
mov
jns
or
fldcw
aam
dec
arpl
movs
outs
sbb
(bad)
xor
cmp
add
es
jecxz
(bad)
sbb
cmc
jecxz
mov
pop
icebp
push
retf
aaa
pop
in
mov
add
add
push
rcr
out
dec
out
pop
daa
ror
call
outs
xchg
adc
mov
add
lods
or
xlat
sub
fld
mov
and
mov
int3
pop
retf
jl
push
ss
mov
or
adc
cmp
in
sub
loope
sbb
retf
sub
rol
jne
sar
xor
sub
xor
in
mov
push
in
dec
and
iret
in
add
xor
fstp
les
call
retf
xor
ins
adc
in
inc
jmp
inc
(bad)
ins
fisubr
cmp
jno
inc
fisttp
xchg
jmp
add
jge
lods
inc
in
jno
cmp
popa
fld
mov
test
in
in
ss
movs
mov
fdivr
(bad)
and
sub
lock
js
ins
mov
or
jmp
xlat
pushf
adc
test
imul
sub
xor
je
mov
dec
gs
xchg
mov
xchg
das
push
dec
sar
or
xor
push
scas
inc
(bad)
pop
add
out
mov
mov
loope
push
sbb
xor
or
push
jp
cmp
in
add
xchg
enter
mov
(bad)
aaa
lock
dec
mov
mov
xchg
ret
stc
mov
or
scas
out
fcmovnbe
adc
mov
adc
cld
neg
neg
mov
dec
leave
outs
pop
pop
mov
mov
rol
out
mov
pop
lea
or
cwde
mov
mov
jns
xchg
and
movs
jle
mov
mov
ins
out
dec
jae
jb
iret
pop
pop
aam
gs
mov
in
fwait
or
mov
add
xchg
pop
mov
or
pop
pop
(bad)
loopne
jecxz
jne
inc
imul
and
cmp
(bad)
jns
adc
mov
cmps
imul
rol
xor
or
push
scas
lods
retf
mov
loope
mov
arpl
(bad)
popa
mov
call
mov
and
(bad)
cli
out
sub
daa
sahf
call
push
jo
jae
in
imul
push
pop
scas
mov
test
das
retf
mov
lea
popf
or
sbb
or
gs
cmp
add
test
mov
mov
xchg
sub
mov
adc
inc
popa
jle
xchg
and
int
shl
xor
(bad)
cs
pop
dec
scas
std
inc
int3
aaa
cmp
and
out
dec
out
sbb
sahf
cmc
inc
add
retf
nop
fdivr
mov
mov
rcl
sbb
outs
sbb
xchg
xchg
rcr
mov
stos
cdq
jmp
cmp
sbb
sbb
mov
out
stos
or
dec
sub
push
and
xor
popa
jnp
inc
gs
jp
cmp
push
fidiv
cwde
add
xchg
sar
(bad)
in
cmp
jae
call
mov
mov
pop
ret
inc
stos
xor
(bad)
and
push
pop
xor
dec
out
frstor
add
jmp
pop
pop
sbb
pop
or
test
lea
dec
out
sbb
push
popa
dec
ja
inc
mov
cs
pop
movs
jne
sub
jnp
sub
adc
scas
pop
sub
push
xor
push
add
mov
mov
adc
ret
mov
pop
outs
dec
mov
cmc
and
xlat
and
add
jecxz
dec
inc
scas
fidiv
out
aaa
mov
fsubr
icebp
lods
out
je
mov
pop
push
lods
inc
adc
fimul
mov
repnz
daa
mov
cmps
mov
fcmovnb
xchg
loop
xchg
mov
fsubp
sti
push
cmp
shl
mov
cmp
aas
sbb
mov
test
pop
addr16
xchg
mov
aas
mov
jne
jbe
dec
fist
popa
push
inc
or
mov
dec
and
out
mov
add
dec
rcr
pushf
out
sub
(bad)
ins
les
shr
push
cmp
(bad)
jb
jp
dec
mov
or
adc
pushf
inc
shl
cwde
mov
dec
and
adc
call
mov
inc
pusha
jp
jg
icebp
test
push
test
fdiv
jle
std
jl
aad
repnz
inc
ja
hlt
es
in
xchg
ja
ins
aas
lds
data16
push
xor
dec
mov
aad
and
cdq
adc
(bad)
jecxz
outs
fwait
jo
lds
sub
inc
test
adc
sar
lea
inc
sub
dec
adc
rcl
xchg
adc
sbb
mov
imul
dec
mov
pop
loop
fsub
sub
cs
jg
pop
cld
gs
push
push
inc
movs
int3
jmp
pushf
adc
sbb
int3
(bad)
stc
sub
fcmovbe
retf
lahf
adc
jecxz
xchg
inc
or
cdq
sbb
add
into
mov
pop
leave
xchg
sub
popa
sbb
das
jns
dec
in
push
cmp
jmp
dec
lea
pop
cmp
and
cmp
adc
outs
push
xchg
hlt
mov
leave
add
outs
dec
repnz
adc
mov
(bad)
rol
mov
cmp
mov
push
ror
xchg
or
das
lahf
je
ss
lods
fwait
add
cmc
movs
pop
lea
in
xlat
cmp
cmp
sbb
add
cmp
adc
mov
xchg
xchg
push
adc
xchg
sbb
sub
inc
inc
push
scas
scas
adc
out
add
xor
sub
iret
pop
popa
lea
iret
cld
inc
repz
js
add
sbb
xor
inc
mov
fs
into
ror
pop
test
sub
and
into
cwde
pop
movs
js
stc
add
aaa
mov
ficomp
icebp
sbb
xchg
(bad)
lock
daa
cdq
sub
aaa
cdq
push
dec
ins
call
mov
mov
adc
sub
daa
cmps
and
pop
mul
pop
ins
adc
js
and
xor
out
inc
aam
fwait
mov
mov
int3
sti
clc
or
shl
stc
mov
int
xchg
push
fdivp
repz
adc
jmp
push
pop
sub
js
mov
mov
xchg
sar
xor
pop
mov
sub
pop
popf
add
in
movs
sub
(bad)
mov
lock
iret
(bad)
mov
cmp
pop
lods
fwait
(bad)
fstp
or
cmp
test
sbb
iret
imul
adc
inc
ins
xlat
pop
mov
or
pop
test
sbb
mov
test
add
adc
cli
sbb
cs
or
and
dec
pop
fldenv
outs
xor
in
adc
in
adc
jb
jne
inc
shr
cdq
xor
mov
sub
sbb
(bad)
fld
cmp
pop
sbb
test
aas
jo
dec
mov
hlt
mov
adc
add
fimul
(bad)
fpatan
mov
rcl
jl
out
dec
movs
mov
pop
repz
or
cmp
cmc
dec
mov
add
pop
and
push
addr16
mov
mov
or
inc
mov
jbe
aam
sbb
pushf
dec
test
into
mov
and
push
dec
lahf
mov
mov
cdq
popa
add
xchg
fwait
mov
cli
xchg
xor
sub
pop
jmp
xchg
sbb
or
sbb
bswap
lock
jne
ins
dec
push
push
icebp
add
out
inc
ja
mov
into
cdq
aas
cmps
push
out
ret
daa
sub
(bad)
mov
inc
imul
push
fwait
adc
mov
jecxz
sbb
xchg
ins
cwde
out
js
rcl
xchg
push
call
gs
xchg
fstp
mov
adc
sub
call
outs
sub
jecxz
fcmove
stc
sub
xchg
sub
pushf
test
movs
shl
dec
mov
and
sub
or
(bad)
in
mov
out
fld
pushf
or
repnz
xchg
imul
outs
pop
int3
test
fldcw
cmp
push
sub
push
adc
gs
push
rcr
jmp
lds
jmp
(bad)
pop
mov
repnz
sbb
jnp
(bad)
mov
and
std
out
lds
fs
shr
dec
jno
shr
pop
cmps
int3
sub
and
popf
outs
add
movs
ret
sub
inc
repz
leave
ins
add
cmp
mov
dec
test
mov
or
xchg
cmp
mov
mov
imul
dec
dec
repz
scas
jno
pushf
fmul
mov
pop
fistp
pop
jmp
sbb
fwait
inc
pop
repnz
scas
add
mov
inc
pop
std
sub
lock
inc
sbb
pop
repnz
xchg
add
stc
pop
mov
fidiv
jae
lods
int3
aad
mov
pop
pop
jecxz
in
cmp
cmps
push
sub
jle
repnz
push
xchg
jp
gs
sub
rcl
jl
mov
pop
aas
clc
mov
sub
mov
adc
pusha
retf
lea
xchg
add
and
les
cmps
sbb
loope
cmp
xchg
fsubr
movs
shr
(bad)
mov
shr
fs
mov
jle
cmps
mov
cwde
xchg
addr16
mov
push
mov
add
add
sub
leave
daa
lods
push
sub
adc
scas
test
pop
lahf
push
mov
mov
dec
add
out
xchg
daa
mov
and
xor
and
fnsave
pop
pop
mov
ret
fisttp
popf
popa
imul
sub
popa
sub
push
jl
xor
cmps
jbe
test
cmps
hlt
fidiv
aad
stc
mov
or
fldcw
into
loopne
or
add
out
repz
mov
ja
hlt
xchg
nop
cmps
cmp
xrelease
push
mov
push
sahf
adc
push
cli
push
dec
pop
pop
xchg
sahf
in
stos
retf
scas
mov
jmp
jno
ins
mov
ret
icebp
or
clc
sbb
mov
fisttp
sbb
push
lods
sub
stc
mov
or
xchg
add
sysenter
sub
add
jmp
(bad)
cwde
push
jo
jge
pop
add
jge
pop
mov
jmp
jns
mov
pop
aas
xchg
push
mov
std
or
retf
pushf
push
xor
(bad)
xchg
add
(bad)
sub
xchg
mov
lods
pop
punpckhwd
fwait
div
int3
lds
mov
add
adc
add
mov
fs
shr
shr
out
pop
mov
xor
imul
sahf
data16
outs
cmp
lock
inc
inc
push
mov
mov
adc
mov
push
shr
xchg
jg
test
cdq
jecxz
les
dec
mov
cs
in
sbb
jns
out
or
sub
aam
cmps
mov
and
mov
add
push
xor
pop
in
cmp
loopne
int3
adc
mov
pop
pop
aam
(bad)
mov
mov
call
inc
leave
scas
repnz
mov
data16
lds
lods
inc
les
lods
pop
lea
or
push
addr16
aam
adc
lea
scas
rcr
adc
xor
pop
mov
in
adc
call
daa
arpl
(bad)
or
lock
aas
dec
ret
adc
mov
ja
sbb
pusha
xor
pop
push
imul
or
adc
xlat
test
mov
pop
(bad)
std
dec
rol
std
or
cmp
pop
jbe
addr16
test
xlat
mov
cmp
cmp
add
inc
aaa
inc
xor
stos
sbb
inc
mov
mov
les
xchg
popa
xchg
push
bound
add
xor
inc
xor
(bad)
lea
ret
clc
sub
add
pop
dec
jg
rol
enter
fbld
mov
lds
pop
sar
addr16
pop
pushf
mov
daa
mov
in
add
adc
out
cmps
mov
mov
fwait
jmp
dec
hlt
jae
lds
adc
cmp
shl
xor
xchg
int3
aaa
adc
stos
add
xchg
push
or
cli
div
push
movs
in
and
lods
out
and
lds
mov
mov
pop
int
jns
inc
mov
pusha
dec
xor
inc
dec
pop
in
aaa
mov
inc
pop
mul
into
fadd
repnz
in
js
fdivr
hlt
(bad)
cs
fs
popa
retf
cmp
gs
and
fisubr
ret
push
mov
retf
jmp
mov
movs
shr
xchg
mov
jmp
int
retf
gs
pop
push
jo
aaa
inc
add
inc
je
xor
xlat
test
pop
push
ss
or
xor
loope
or
cmp
enter
xor
div
adc
in
dec
or
and
push
or
sbb
or
mov
retf
mov
jo
fwait
or
add
sbb
cwde
sbb
(bad)
and
mov
fmul
sti
or
mov
scas
or
inc
jno
and
add
lods
hlt
ds
retf
jnp
fistp
jp
adc
call
(bad)
je
hlt
xchg
inc
xchg
jp
pop
not
mov
mov
or
hlt
ret
fcom
or
jae
sub
xchg
mov
xchg
retf
xlat
push
sub
xchg
xchg
enter
ja
in
test
stc
sbb
mov
imul
pop
loope
inc
pop
retf
idiv
retf
fsubp
cs
imul
dec
mov
fs
xchg
add
lahf
jo
pop
lock
sar
aam
jbe
in
pop
and
cmps
adc
mov
rol
and
and
pop
push
psrlw
xor
adc
mov
int3
int
push
jo
mov
push
in
dec
sar
(bad)
mov
pop
iret
sub
push
outs
add
popa
fs
and
dec
imul
arpl
iret
dec
nop
ja
adc
retf
lods
mul
xor
(bad)
sub
pop
inc
sti
mov
inc
sbb
jae
push
mov
or
mov
movs
call
popa
sub
push
xor
mov
mov
adc
out
ret
inc
clc
mov
inc
mov
inc
push
jns
mov
retf
dec
and
cmp
pop
cwde
xchg
std
pushf
cmc
pop
pop
pop
movs
pop
sub
int
inc
mov
daa
int3
mov
ret
and
call
inc
push
rcr
clc
test
push
dec
push
mov
jnp
retf
push
sbb
mov
xlat
aas
fcmove
or
xchg
cmc
sub
push
jge
mov
in
pop
dec
inc
rcr
push
out
sub
cwde
push
sbb
cmp
sub
in
add
scas
mov
jp
(bad)
jae
adc
add
mov
shr
mov
dec
mov
jg
mov
stos
ins
sub
retf
enter
retf
jmp
sub
jge
mov
loope
and
and
aaa
and
sti
ja
int
lock
and
fldcw
mov
push
add
xchg
xlat
xchg
and
sahf
mov
sbb
int
adc
add
cmc
xor
add
fst
(bad)
dec
pop
fdiv
cdq
sub
ins
shl
push
and
cmps
sub
dec
mov
mov
pop
dec
test
push
dec
rol
leave
lahf
push
xor
fchs
inc
jnp
daa
dec
pop
nop
or
xlat
bound
and
sbb
lods
rcl
in
dec
mov
mov
push
adc
cli
js
jo
fadd
adc
int3
cs
mov
sbb
jl
ror
inc
dec
sti
inc
add
pop
dec
call
adc
aas
das
jne
mov
add
push
jbe
adc
fbld
or
dec
pop
inc
aaa
lds
mov
push
dec
jns
or
popa
xchg
(bad)
mov
ins
jo
(bad)
into
rol
cdq
pop
addr16
mov
mov
mov
dec
sar
add
push
shl
pop
fwait
repz
push
rcr
scas
cmc
push
xor
loope
lods
sahf
adc
mov
pop
pop
loopne
dec
imul
jmp
popa
jb
cmc
cmps
daa
out
fcomp
cmp
test
das
les
js
add
add
in
xor
mov
sar
in
adc
mov
pop
enter
jg
mov
and
add
jmp
sbb
cmp
pop
push
mov
pop
cmp
or
aad
das
xor
ja
mov
scas
or
daa
loop
jl
inc
repnz
xchg
fistp
dec
adc
iret
push
cmp
cmps
mov
inc
jmp
shl
movsx
iret
fild
fbld
call
inc
mov
(bad)
or
test
mov
call
or
repz
xor
outs
adc
cwde
loopne
adc
into
fcomi
lahf
sub
sub
sub
xchg
movs
mov
popf
aam
sbb
push
jmp
add
ins
fcmovnb
js
sub
sbb
nop
xchg
push
push
stos
dec
int
movs
xchg
xor
push
int
sub
(bad)
stos
ss
pop
jecxz
out
je
hlt
add
je
mov
dec
xchg
push
icebp
sbb
pop
add
lds
fs
sbb
add
jl
cmp
dec
(bad)
rcl
hlt
push
and
fcomp
sar
arpl
retf
jne
push
mov
(bad)
pop
in
dec
jle
mov
cmp
aaa
test
rcl
pop
xor
jle
sub
imul
loopne
leave
call
pop
cs
int3
mov
das
mov
and
add
ficomp
mov
push
mov
(bad)
shr
ja
xor
mov
sahf
ficomp
mov
fsub
jmp
and
mov
xchg
cdq
outs
inc
scas
(bad)
scas
jmp
fs
stc
pop
sub
mov
mov
sub
mov
cli
mov
pop
or
call
ficomp
movs
fldcw
stos
pop
data16
cs
mov
out
and
ret
outs
xor
or
(bad)
jno
pop
shl
in
dec
or
jg
push
xchg
push
retf
ror
addr16
test
jnp
ret
push
ret
push
rcl
cs
mov
mov
adc
int3
(bad)
or
dec
retf
pop
jo
shr
js
(bad)
or
and
jnp
dec
inc
ja
pop
jmp
add
or
jo
inc
mov
scas
(bad)
icebp
xchg
jle
rcr
out
lods
daa
mov
shl
aas
jl
mov
jmp
shr
dec
sub
stos
xchg
mov
push
popf
sbb
sti
jno
sbb
cmp
add
test
xchg
or
mov
pop
in
sti
sub
outs
cmc
or
rcl
xor
pop
cmovs
ss
and
(bad)
jne
fldenv
sbb
fwait
pop
aas
pusha
mov
mov
and
cmp
mov
ss
add
xchg
jno
dec
(bad)
lods
sbb
call
mov
idiv
xchg
pop
and
inc
into
imul
mov
dec
and
adc
jnp
pop
outs
jmp
adc
in
mov
and
jl
test
add
adc
lahf
jmp
pop
shr
movs
jb
xchg
inc
jno
jmp
xor
addr16
iret
xor
push
lods
xor
cmps
dec
test
addr16
jbe
in
dec
xchg
fistp
fisttp
iret
and
std
mov
sub
faddp
sub
push
(bad)
push
jl
push
mov
and
cmp
adc
test
jne
out
jle
mov
mov
pop
popf
jecxz
sbb
sub
jnp
addr16
pop
sar
dec
jne
ror
sahf
test
(bad)
dec
stos
add
retf
push
or
xchg
(bad)
fcomp
retf
(bad)
mov
mov
cmp
mov
inc
in
inc
and
stos
out
mov
rol
and
xchg
movs
sbb
(bad)
mov
push
inc
rcr
test
dec
mov
imul
sub
jp
cmp
mov
cld
into
inc
inc
xchg
jmp
pop
std
test
ror
fwait
in
stc
add
(bad)
ins
add
dec
cwde
sbb
int
fistp
mov
xchg
cmp
fadd
pop
push
int3
jb
daa
xor
outs
push
jnp
cli
add
jg
iret
jmp
popf
sub
mov
iret
outs
fdivr
xchg
xchg
fdiv
adc
sbb
sbb
icebp
cdq
push
sahf
lock
dec
xchg
sbb
push
dec
lods
mov
retf
sbb
lea
pop
(bad)
mov
(bad)
or
(bad)
inc
sbb
ret
add
and
push
jno
shl
pushf
stos
cdq
dec
int
mov
mov
jbe
xlat
call
repnz
pop
addr16
jmp
mov
rcl
movs
popf
mov
sahf
popa
xor
or
push
clc
push
repnz
or
xchg
clc
test
jb
inc
mov
rcr
gs
aam
pop
or
mov
mov
cld
icebp
jns
push
out
mov
retf
dec
gs
(bad)
cmp
outs
jns
clc
cld
xor
dec
mov
ins
cmc
pop
ret
xor
shl
xchg
xchg
push
lock
fs
fwait
inc
sbb
or
test
lods
cmp
rcr
rep
xchg
push
iret
sti
bound
ror
aad
ss
lahf
xchg
sbb
out
sti
(bad)
mov
scas
mov
ficom
push
jo
jg
jbe
stos
imul
dec
jno
(bad)
jp
aad
dec
inc
and
push
fadd
mov
add
mov
sbb
pop
inc
ss
cmps
fisub
adc
jbe
call
jo
push
sti
imul
ins
test
xor
and
scas
push
and
fadd
adc
dec
dec
xlat
or
mul
sbb
jl
sti
sbb
mov
int3
fmul
push
xchg
jmp
clc
adc
xchg
addr16
mov
or
movs
enter
add
jl
repz
movs
mov
les
jp
cmp
pop
mov
inc
and
adc
inc
dec
mov
cmc
xor
cld
punpcklwd
inc
mov
adc
cmp
lods
mov
jmp
sbb
add
aas
out
je
stc
sub
arpl
and
or
pop
mov
out
iret
std
iret
mov
nop
jle
or
imul
jle
jne
out
gs
loop
retf
fst
and
rol
mov
mov
leave
and
adc
outs
push
mov
in
pop
inc
fdiv
push
fimul
mov
xor
inc
inc
int3
or
mov
dec
das
ficomp
jg
loope
ins
pop
loop
cli
cld
call
(bad)
shr
(bad)
dec
mov
out
sub
xor
cdq
rol
mov
pop
cmp
sub
test
stc
inc
cmovbe
adc
icebp
out
test
loop
xor
addr16
mov
add
pop
add
cdq
sub
adc
cs
sub
aaa
cmp
addr16
mov
lds
shr
cmp
ret
xor
or
fisubr
xchg
xor
test
jns
or
xor
add
or
test
rcl
arpl
popf
cs
icebp
mov
sbb
(bad)
fbstp
loopne
and
test
xchg
je
jb
mov
xor
sar
out
fisub
sbb
xchg
mov
xchg
sub
pusha
xchg
outs
add
dec
sti
mov
mov
pop
scas
and
fldcw
and
cmp
mov
inc
xchg
inc
leave
jmp
cmp
mov
(bad)
(bad)
leave
enter
aam
mov
(bad)
out
cs
sahf
stos
repz
mov
pop
iret
or
movzx
dec
cmps
or
dec
sar
sub
(bad)
jae
fdivr
pop
xchg
mov
cdq
(bad)
mov
mov
pop
push
push
mov
popa
aas
xchg
mov
fbstp
sbb
(bad)
int
or
mov
xor
sub
pop
dec
aad
add
adc
xor
test
mov
mov
push
push
xchg
mov
call
in
in
mov
loop
xor
pop
out
mov
sub
jmp
inc
out
test
and
and
aad
stc
add
cs
mov
cmp
push
mul
mov
mov
push
clc
jle
and
aad
sub
mov
inc
aad
ror
fcmovnu
mov
push
xor
xor
pushf
cmp
lds
jg
fldcw
jge
and
xor
out
and
inc
inc
outs
(bad)
or
dec
xor
sbb
pop
inc
mov
cmc
jp
je
out
dec
jnp
retf
pop
or
adc
ins
(bad)
jmp
adc
mov
in
rol
mov
add
cwde
adc
add
cld
in
rcr
in
jl
cmp
pop
loope
cmp
cmc
jecxz
mov
pop
sbb
jmp
call
int3
movs
and
into
mov
sbb
or
sub
pushf
fdivr
call
fucomp
xchg
inc
outs
inc
push
sub
xchg
sub
(bad)
call
inc
(bad)
cmp
jne
inc
xchg
scas
pop
push
pop
mov
ins
mov
mov
je
sahf
(bad)
xchg
(bad)
sbb
stos
shl
and
ds
and
or
jge
add
scas
add
sub
dec
jns
test
pop
mov
sbb
cmp
push
mov
cmps
out
aam
adc
xchg
mov
mov
repz
aaa
loop
fadd
mov
out
repnz
mov
ret
mov
mov
retf
push
add
fimul
addr16
adc
add
xchg
cmp
dec
mov
jne
add
inc
inc
mov
cld
add
and
stos
dec
rep
test
pop
retf
dec
ret
adc
arpl
outs
pop
std
int
(bad)
call
not
xchg
mov
jns
xor
xor
inc
stc
adc
cmp
in
push
dec
(bad)
cmc
repnz
push
movs
sbb
addr16
in
cmp
adc
(bad)
test
es
sub
jge
jmp
xchg
dec
clc
mov
aas
jg
sbb
cmp
cmps
pop
call
adc
push
int
nop
xlat
sbb
mov
test
out
mov
inc
sub
sub
sbb
sub
xor
cmp
xor
aam
sub
xor
dec
jb
in
stos
int
xchg
fmulp
iret
jae
fdiv
push
(bad)
push
ins
loopne
inc
mov
call
mov
repz
mov
(bad)
(bad)
popa
and
cmp
push
sbb
adc
mov
sub
jl
adc
movzx
sti
jg
mov
cmp
test
xor
mov
gs
mov
cmp
hlt
xor
in
aad
std
pusha
rol
fucom
jae
aam
lahf
dec
je
std
sahf
enter
mov
sbb
mov
jns
dec
or
lds
dec
fisttp
dec
or
or
fdiv
mov
jne
or
mov
test
adc
sub
push
clc
jb
and
jb
push
mov
push
ror
fsubrp
inc
cwde
and
movs
mov
cmc
aad
add
pop
sub
push
mov
push
hlt
iret
adc
mov
push
fwait
loop
xor
or
xor
cmp
sub
rol
push
xchg
push
loope
dec
fcmovnbe
repnz
cmp
xchg
imul
stos
das
or
xchg
adc
and
bound
sbb
push
mov
or
div
add
inc
jmp
or
mov
jbe
stos
jbe
es
pop
sbb
adc
pop
dec
repnz
arpl
and
mov
or
fdivr
sbb
lds
adc
outs
or
out
sub
sbb
(bad)
lahf
sbb
sbb
test
xchg
shl
(bad)
jo
jecxz
jo
outs
dec
movs
mov
mov
call
mov
fistp
add
cdq
xor
outs
inc
push
repz
mov
and
out
cmp
test
xchg
shl
push
sub
aaa
in
shr
push
push
jno
cmp
stc
and
js
cmc
mov
(bad)
mov
inc
jns
jp
mov
int3
movs
pop
lahf
nop
loope
push
aaa
inc
cmp
sar
xchg
sbb
pop
out
xor
out
and
xor
nop
push
push
fld
cli
push
outs
fwait
ror
pop
popf
sbb
cmp
int3
fidivr
jbe
push
and
push
adc
xchg
call
mov
xor
imul
sahf
aaa
leave
cli
aas
pop
xor
adc
loopne
mov
sub
pop
int
mov
bound
adc
int
cmp
(bad)
push
inc
sahf
inc
outs
jecxz
into
sbb
ds
jg
scas
pop
repz
icebp
cmp
and
(bad)
cmp
sub
or
sbb
ins
mov
popf
dec
dec
xchg
xlat
(bad)
adc
xchg
lods
aas
mov
je
mov
ret
dec
cli
or
jnp
shl
hlt
(bad)
xor
cmp
adc
vpmacssdd
fistp
xchg
inc
jbe
je
xchg
mov
retf
rcl
hlt
add
push
jle
aad
sub
div
pop
jmp
pop
push
jb
(bad)
mov
jne
popa
jecxz
xor
cmp
add
push
inc
dec
repz
inc
ret
mov
or
outs
add
sti
xor
aad
fiadd
arpl
rol
mov
sti
mov
xchg
pop
(bad)
mov
push
push
mov
repz
mov
pop
in
scas
xchg
push
or
adc
ins
inc
mov
mov
or
data16
(bad)
cld
mov
push
mov
sbb
rcr
inc
ret
addr16
cmp
add
or
and
inc
(bad)
mov
imul
and
pop
(bad)
not
mov
xchg
mov
jb
pop
test
retf
cmp
dec
mov
das
movs
fsub
sti
push
cmps
bt
sbb
in
arpl
je
popa
in
ss
add
je
out
push
ss
loope
push
ds
and
jle
mov
mov
add
aad
ds
retf
lea
in
cli
dec
test
fild
fucomi
sub
arpl
mov
adc
mov
out
and
and
jmp
mov
jae
inc
aaa
sub
cmp
dec
ds
out
push
lods
jae
je
movaps
inc
pusha
jmp
and
adc
fst
pop
sahf
cwde
sahf
cmc
push
and
sbb
in
arpl
pusha
jnp
aad
popa
cmp
xor
dec
icebp
sbb
in
and
xchg
retf
mov
push
mov
out
lea
xor
cmp
mov
inc
push
mov
and
sub
out
jb
mov
inc
(bad)
test
or
rcl
jb
sub
in
sbb
mov
inc
mov
inc
fnstsw
mov
mov
(bad)
js
xor
mov
loop
jecxz
adc
int
(bad)
cli
popf
(bad)
cmp
adc
dec
pop
inc
jg
clc
dec
(bad)
pop
mov
adc
test
add
jmp
in
sbb
push
jae
or
fcom
fcmovu
xor
pop
jle
aad
leave
mov
arpl
cwde
and
mov
loope
imul
jo
xor
fs
loop
dec
aam
mov
jae
mov
xor
cmp
push
popf
jne
out
cmp
sbb
hlt
data16
ror
sbb
into
sbb
adc
loop
clc
lock
cmps
sbb
push
mov
iret
pop
test
pop
clc
icebp
or
lahf
movs
in
xchg
push
dec
test
pop
or
test
push
pop
mov
rol
inc
jnp
xchg
test
inc
out
push
mov
and
mov
icebp
xor
test
sub
loope
or
icebp
lods
mov
fidivr
stos
enter
jo
in
mov
mov
ret
jno
mov
scas
sub
cmp
enter
push
ret
xor
pusha
dec
jae
mov
lahf
adc
jmp
xchg
cli
jnp
inc
mov
cmc
xlat
fdiv
call
lods
xor
cmp
cmps
repz
out
add
ins
adc
out
gs
imul
test
push
or
push
stc
pop
(bad)
sar
jp
frstor
xchg
push
mov
aas
imul
ins
or
cmps
jo
jno
jmp
movs
call
call
mov
mov
fcom
and
ja
and
ret
pushf
push
fiadd
sbb
test
dec
es
cdq
fs
loop
mov
retf
pop
and
das
xrelease
in
mov
fs
mov
hlt
(bad)
fwait
sbb
jo
dec
sub
jns
ins
mov
iret
jmp
xchg
pushf
sti
js
mov
mov
shr
mov
hlt
mov
mov
pop
and
jb
and
or
(bad)
rcl
mov
in
nop
push
loopne
sub
shl
xor
cli
(bad)
jbe
or
add
pop
sbb
call
mov
fisub
or
(bad)
xor
inc
push
imul
mov
mov
xchg
nop
fs
lahf
test
sbb
adc
cwde
movs
and
loope
aad
adc
mov
imul
sbb
add
cmp
add
and
dec
es
mov
add
sbb
sahf
inc
js
(bad)
loope
jg
adc
mov
mov
and
ret
sahf
in
dec
mov
loopne
mov
cdq
push
fwait
in
fs
mov
pop
sbb
cmp
cmp
sub
movs
sbb
rcl
sbb
mov
ret
fmul
imul
scas
adc
shr
daa
cmp
push
mov
pop
xor
rol
mov
aad
in
rol
call
repz
lock
inc
dec
fisttp
ds
pop
xchg
mov
cs
fs
xor
jp
jl
mov
rol
sub
push
mov
inc
cdq
test
and
jb
mov
vcvtps2pd
pop
shl
loope
jmp
(bad)
adc
pusha
shr
pop
xchg
mov
loop
adc
fcomp
scas
or
mov
pop
iret
int
(bad)
out
(bad)
xchg
mov
xchg
or
jle
xchg
fld
push
and
outs
ret
adc
les
das
rol
cmc
pushf
repz
cmp
sub
inc
jp
sbb
ror
lods
jge
xor
dec
dec
and
jns
mov
sbb
inc
pop
ins
int3
or
ds
push
jnp
cmp
mov
xchg
dec
sbb
xchg
repz
cmp
out
push
clc
fld
or
cld
clc
push
ins
jg
pop
xor
(bad)
rdpmc
fmul
dec
jno
mov
mov
mov
sti
mov
(bad)
xchg
sub
dec
leave
and
lds
dec
pop
fimul
xchg
dec
pop
cmp
fidivr
mov
cdq
fnstenv
int
pushf
rcr
sbb
cmp
mov
jo
push
jmp
repnz
add
pop
and
ins
sbb
pop
and
test
sbb
push
pusha
je
cmp
fcmovnu
jbe
add
mov
lahf
call
pop
std
pop
sbb
mov
sti
push
out
pusha
out
inc
movs
mov
(bad)
push
in
inc
fmul
mov
xchg
mov
inc
sub
enter
scas
ficomp
adc
(bad)
std
enter
and
and
pop
mov
mov
adc
push
test
and
jmp
scas
mov
sub
sti
hlt
or
inc
adc
mov
mov
pop
dec
adc
dec
add
dec
pop
test
push
add
(bad)
add
adc
mov
pop
jecxz
xor
adc
and
mov
ss
(bad)
xchg
push
cmp
(bad)
je
mov
shr
xlat
mov
xor
lea
xchg
inc
dec
sub
(bad)
push
pop
cmp
outs
lods
leave
mov
inc
outs
hlt
push
sar
daa
inc
dec
je
test
mov
in
in
mov
fild
adc
ins
jecxz
fsub
lahf
dec
adc
imul
adc
sbb
(bad)
mov
xchg
sub
adc
call
sub
inc
lods
out
movs
sbb
sub
jl
(bad)
lahf
dec
call
mov
lock
and
outs
cmp
cld
mov
push
mov
mov
push
retf
call
xor
shr
dec
fiadd
pop
lahf
xor
dec
scas
and
fwait
iret
lds
rcl
mov
and
jno
iret
mov
fsubr
outs
sbb
dec
aam
push
mov
cmp
rcr
mov
ds
popf
ins
ins
pop
loopne
outs
and
lock
push
xchg
fnstsw
sub
and
push
aaa
mov
mov
ret
mov
cmp
ds
jbe
std
pop
das
push
xor
push
xchg
jbe
gs
or
popf
test
sub
cmp
inc
xchg
test
loop
dec
sbb
cmp
retf
jns
aas
push
sub
mov
mov
stc
int3
(bad)
int3
mov
jbe
mov
push
lahf
xchg
jg
jge
fst
xchg
stos
push
mov
xchg
jmp
shl
ins
in
sbb
push
sub
push
clc
push
test
stos
hlt
(bad)
adc
out
push
dec
sbb
add
xchg
out
pop
int
sbb
and
ss
mov
repz
adc
add
jne
fistp
sub
leave
sbb
sbb
cmp
cmp
sub
inc
cwde
pop
jmp
(bad)
popf
xchg
icebp
popa
call
hlt
sahf
ins
xor
pusha
pop
(bad)
cld
fsubr
dec
scas
out
inc
pusha
sub
and
fs
repnz
adc
mov
xchg
test
xor
inc
sbb
xor
rsqrtps
cmp
cs
dec
jae
jno
fdiv
pusha
push
adc
outs
dec
cmps
shl
sbb
add
cwde
nop
div
dec
jne
(bad)
mov
cs
pusha
push
mov
inc
xor
mov
mov
fist
dec
mov
outs
js
cmpps
adc
gs
adc
shr
jne
mov
push
sub
push
dec
push
fwait
or
add
rol
dec
fidiv
xor
jp
xchg
(bad)
pop
in
or
bound
mov
push
bound
sub
ins
pushf
mov
fs
pushf
adc
adc
ret
dec
and
push
sub
retf
pop
mov
call
loop
inc
inc
cdq
ins
aad
imul
mov
push
call
sub
add
repz
dec
outs
sub
ins
mov
cmp
lods
sbb
push
jmp
adc
and
inc
call
jp
push
ficomp
neg
sub
and
push
fistp
iret
fs
js
fnstenv
cmp
cmp
call
xor
pop
add
outs
xchg
xor
scas
xchg
cmp
mov
cwde
mov
or
sub
and
stos
cmp
cwde
(bad)
dec
cmps
lods
xchg
dec
add
shld
mov
arpl
cmps
fdiv
stc
sbb
push
mov
out
cmp
inc
cmp
cmp
xor
pop
shl
mov
sub
and
fiadd
shr
mov
adc
adc
push
aaa
add
scas
mov
push
fs
movs
clc
mov
test
stos
adc
inc
push
ja
mov
sahf
push
ins
or
rcl
xor
cmc
add
(bad)
dec
jne
jns
fwait
outs
add
mov
jbe
mov
mov
(bad)
shl
addr16
jo
div
mov
push
mov
sub
enter
or
add
sahf
push
mov
into
mov
xor
sbb
js
mov
(bad)
in
iret
les
and
and
popa
pop
into
jnp
mov
push
into
dec
mov
pop
mov
pop
sbb
cwde
test
jo
mov
ins
cdq
out
and
mov
jmp
out
mov
mov
dec
mov
adc
aaa
ins
mov
mov
and
(bad)
xor
mov
xor
call
push
xchg
jne
add
jecxz
aad
adc
rdtsc
adc
sti
dec
inc
retf
jbe
test
cmp
or
push
mov
loope
inc
mov
jmp
movs
mov
cmc
(bad)
dec
retf
enter
cld
cmp
pop
icebp
dec
xchg
ret
nop
jno
or
add
cdq
ss
ins
movs
xchg
test
in
ror
movs
stc
or
outs
loope
fisub
fcmovnu
int3
mov
shr
imul
sbb
test
pop
push
sahf
inc
(bad)
adc
mov
push
in
cmps
in
ret
inc
dec
xchg
mov
retf
push
push
push
mov
adc
mov
push
push
rol
ins
in
pusha
add
push
xchg
dec
ror
jp
push
push
pop
lods
and
sub
xor
ss
push
hlt
jae
mov
mov
into
shl
scas
lods
inc
cwde
jecxz
push
adc
sub
xor
mul
enter
cmp
push
jmp
(bad)
cmp
jp
add
mov
(bad)
pop
jl
inc
call
xor
mov
ret
(bad)
adc
push
ja
sub
(bad)
and
mov
mov
add
lock
cmp
sbb
sbb
jg
int
push
push
mov
jecxz
mov
xchg
jp
or
jmp
jno
(bad)
dec
out
sahf
retf
push
or
xlat
add
mov
rcl
cwde
push
jecxz
loope
sub
out
dec
push
test
add
pushf
hlt
add
adc
mov
outs
mov
jg
out
es
cmc
cmc
popa
dec
or
jmp
aad
popf
fdivr
(bad)
int3
loop
pop
scas
data16
add
aas
(bad)
xor
jo
cwde
enter
sub
sti
sub
mov
pusha
ss
xor
imul
sbb
adc
pushf
out
mov
mov
push
aad
stos
das
stc
lds
out
ss
dec
in
cld
xor
scas
jl
mov
es
jnp
or
(bad)
xchg
sbb
call
pop
dec
ficom
pop
mov
or
pop
movs
xor
and
pop
lods
jae
es
mov
loope
inc
pusha
repz
scas
jle
cmp
push
bound
pop
dec
xor
mov
inc
in
sub
dec
jle
nop
push
sub
sahf
retf
mov
movs
pop
jle
test
inc
inc
mov
sub
mov
inc
retf
or
cmp
push
inc
adc
lods
imul
mov
and
std
into
rcl
loope
jno
fmul
pop
sahf
in
sbb
cmps
jmp
js
pop
es
inc
std
mov
push
(bad)
and
pop
out
(bad)
push
clc
scas
or
inc
push
mov
mov
add
push
rcl
xlat
cmp
jecxz
out
test
or
(bad)
or
jae
cmp
adc
retf
push
mov
addr16
vpmulhw
mov
xchg
mov
es
ret
mov
mov
cli
cwde
retf
cmp
dec
jae
xor
sti
dec
pop
fs
pop
out
popf
xor
and
mov
and
jmp
mov
mov
sbb
cmps
push
hlt
and
movs
or
std
(bad)
in
pop
add
mov
ins
mov
stc
movs
fsubp
mov
popf
sub
(bad)
call
fistp
das
icebp
push
jno
mov
cli
or
cmps
pop
mov
or
push
mov
es
js
clc
ins
xor
and
ds
mov
sub
push
and
cmp
scas
pop
xchg
jg
pushf
and
mov
push
jmp
mov
push
in
adc
cs
aas
adc
xchg
mov
mov
sub
mov
js
scas
imul
pop
je
call
shl
outs
and
or
push
stos
paddw
shr
jp
inc
xchg
xchg
inc
sub
shl
xchg
cld
xor
xchg
and
jno
xchg
mov
scas
xor
scas
mov
popf
outs
es
out
sub
pop
loop
repnz
repnz
shld
in
mov
xor
int3
in
jl
xchg
(bad)
fistp
std
pop
ds
(bad)
cdq
push
sbb
jae
jb
push
ja
ds
stc
sbb
xchg
sub
jmp
jbe
bound
(bad)
mov
add
out
xchg
aas
fild
mov
sbb
fld
add
xor
pop
jno
cmp
pop
retf
adc
sbb
cmp
aas
ficomp
out
(bad)
int3
lea
add
cmp
inc
cmp
clc
test
inc
and
mov
stc
push
enter
adc
repz
add
(bad)
fsubr
rcr
sbb
shl
imul
(bad)
call
add
lods
aam
ret
push
mov
lock
daa
dec
mov
jbe
inc
mov
or
mov
xor
dec
pop
or
mov
lea
pushf
push
cmp
mov
test
cmps
xchg
cmp
test
or
push
les
loope
aam
or
lea
movs
lock
jae
imul
outs
(bad)
cmp
xchg
fistp
xor
loope
xchg
(bad)
cmp
enter
imul
js
pop
loop
sahf
push
cbw
dec
mov
or
jmp
jmp
inc
xchg
adc
(bad)
outs
out
div
(bad)
loope
jmp
xor
ins
in
and
(bad)
popa
gs
in
inc
sbb
and
pop
dec
ret
dec
or
or
jae
stos
sbb
arpl
or
out
mov
(bad)
retf
jae
jb
repz
lock
inc
addr16
shl
pop
sbb
mov
cwde
jg
dec
mov
ret
je
stc
mov
pop
out
xor
or
sbb
cmps
jno
je
xchg
fiadd
scas
add
jl
pop
js
mov
mov
movs
push
int
(bad)
jne
dec
fild
jno
cmp
out
out
add
es
ins
mov
fsubr
push
lods
int
nop
stos
mov
cli
mov
xchg
js
mov
(bad)
(bad)
cmp
popa
and
cmp
test
stos
ins
push
jle
push
lods
cmp
add
movs
xlat
jnp
(bad)
lds
in
(bad)
idiv
xor
jns
dec
and
ror
mov
lea
xchg
lods
je
in
or
test
mov
push
fcomp
test
bound
pop
xor
mov
push
aad
js
iret
adc
cmp
inc
inc
push
sub
pop
push
jp
cld
sti
dec
jl
mov
mov
inc
pop
in
sbb
std
imul
ins
sbb
mov
jno
jo
xor
jnp
dec
pop
push
xor
push
je
mov
in
les
adc
jae
or
scas
mov
and
call
js
pop
std
adc
loope
xor
aad
pusha
rol
lock
and
dec
sbb
sbb
pop
icebp
aas
std
jne
dec
xchg
mov
mov
daa
call
cmp
(bad)
xor
jb
adc
inc
test
mov
add
hlt
mov
movs
in
loope
mov
jge
(bad)
sub
pop
xchg
inc
clc
mov
nop
and
in
popa
push
movs
mov
loopne
aas
mov
add
cmp
cmps
push
fbld
inc
aam
dec
xchg
sti
movs
mov
cwde
xor
ss
imul
push
stos
pop
popf
mov
xor
and
mov
xor
dec
pop
not
adc
repz
xchg
mov
repz
setle
adc
xchg
jmp
ins
imul
aaa
pop
in
lods
and
bound
lea
xor
ror
out
icebp
cmps
jne
pusha
test
scas
int
or
adc
idiv
sbb
jo
mov
jns
pop
and
call
and
push
jecxz
sub
push
cmp
sub
(bad)
hlt
pop
out
in
mov
sub
dec
jne
push
xchg
xor
xchg
mov
adc
mov
retf
shl
xchg
cld
test
clc
push
fcomp
push
(bad)
addr16
repnz
fnstcw
push
xchg
add
and
or
out
xor
jmp
push
xchg
js
addr16
mov
adc
lds
add
add
fs
test
test
xchg
inc
push
xlat
pop
and
es
jae
mov
sar
sub
lods
lahf
iret
mov
rol
jg
sub
xchg
and
movs
jmp
mov
push
lods
push
sbb
pop
mov
ret
push
mov
cmp
mov
add
mov
dec
inc
pop
mov
and
cmp
pop
inc
sbb
sbb
enter
or
dec
sbb
ds
mov
cld
repz
jmp
or
imul
shr
xlat
rol
add
ret
retf
pop
jae
into
push
jg
jae
sub
pop
fidiv
xchg
pop
ss
lds
lahf
aad
mov
and
inc
lods
sub
push
dec
pop
adc
sub
push
aad
mov
inc
call
xor
push
or
and
jnp
mov
js
or
and
cmp
ss
fsubrp
add
inc
(bad)
jb
fstp
icebp
fnstcw
stos
aam
sub
add
or
sbb
lods
in
in
cmp
aas
cs
add
mov
jmp
mov
arpl
xchg
inc
jecxz
mov
(bad)
out
pop
inc
retf
mov
fst
cmp
push
movs
dec
inc
dec
(bad)
fwait
mov
mov
loope
rol
inc
rol
mov
int
or
js
(bad)
fwait
movs
mov
xor
ds
ins
aas
and
xchg
pop
inc
dec
mov
xchg
jecxz
jmp
xchg
ja
pop
mov
retf
mov
das
les
cmp
leave
les
or
sbb
and
pop
inc
je
ret
scas
in
dec
aas
cmps
mov
imul
jmp
dec
mov
sbb
jne
jle
jle
cli
and
pop
lds
inc
call
xor
int3
ficomp
jmp
ds
sbb
loop
push
out
sbb
fmul
add
xor
into
movs
and
xor
mov
jle
int
dec
inc
push
sar
mov
sar
jmp
inc
mov
icebp
cwde
sub
ror
mov
or
mov
or
or
inc
(bad)
mov
mov
xor
sbb
std
xchg
call
ja
xchg
or
dec
xlat
push
call
add
in
retf
push
cmp
dec
jne
dec
lods
movs
pop
cwde
rcr
and
xchg
movs
jge
mov
dec
push
mov
sbb
shr
xchg
in
fs
inc
test
dec
add
push
clc
and
sahf
inc
sub
inc
mov
jnp
lods
int3
jg
scas
xchg
sub
pop
lgs
pop
adc
cmp
sbb
mov
push
push
cs
add
lds
and
jnp
push
lea
mov
stos
and
movs
dec
or
aas
push
shr
jg
(bad)
jge
test
shl
sbb
test
std
xchg
pushf
mov
outs
cmp
shl
into
loope
lds
jle
adc
pop
xor
gs
outs
inc
cmp
xor
ss
icebp
outs
leave
sar
(bad)
adc
inc
out
and
int
rcr
mov
and
(bad)
mov
or
rcr
add
sbb
pop
add
mov
mov
sub
stc
push
jmp
imul
sbb
sbb
cmp
add
popa
mov
xchg
mov
add
neg
imul
push
scas
jmp
cmp
shl
mov
iret
test
out
aas
imul
mov
out
les
ja
dec
or
jecxz
sub
retf
scas
or
cli
mov
arpl
sub
push
test
push
push
push
mov
pusha
je
cwde
dec
jb
pop
lods
mov
outs
clc
jle
xchg
bnd
mov
lahf
in
inc
mov
or
or
or
(bad)
push
addr16
push
pop
(bad)
out
lock
out
dec
mov
jp
out
add
jmp
add
jl
push
das
inc
inc
(bad)
(bad)
sbb
imul
in
jp
in
push
cmp
dec
xchg
out
xchg
gs
rcl
pop
out
inc
lock
add
test
jmp
(bad)
cmp
push
xchg
xchg
(bad)
cmp
call
std
mov
jmp
shl
cmps
ins
rcr
in
or
(bad)
mov
scas
rcr
and
out
sub
outs
jl
sti
ds
sti
ins
retf
cmp
sub
jl
fdivr
cs
or
test
scas
pop
add
adc
add
jbe
(bad)
fwait
mov
dec
and
and
adc
add
cwde
sbb
or
add
push
movq
mov
xor
and
inc
sub
mov
and
mov
in
push
cwde
mov
out
sbb
adc
das
adc
ins
sub
mov
push
outs
xor
sub
in
cmc
sbb
and
outs
xchg
jns
mov
adc
pop
pop
mov
lods
int3
mov
ins
(bad)
xor
shl
(bad)
cmc
or
xchg
dec
stos
pop
or
adc
cmp
jbe
rcl
jmp
ss
popf
inc
push
dec
dec
inc
jo
cmp
frstor
lods
jecxz
push
(bad)
adc
xor
cdq
inc
ret
mov
gs
dec
fcom
dec
jle
cs
mov
fwait
xchg
fdiv
sub
arpl
or
adc
xchg
xor
ja
mov
mov
jmp
(bad)
mov
test
(bad)
inc
(bad)
leave
or
in
test
cld
jb
or
mov
cmp
mov
retf
jle
hlt
mov
mov
sub
push
sub
movs
xchg
add
push
in
xchg
and
jns
push
jne
jne
and
aam
pushf
cmp
mov
fadd
sti
add
jle
lods
loope
xchg
mov
xor
push
mov
scas
cld
stos
iret
bound
mov
and
addr16
push
repz
jns
or
stos
pusha
(bad)
push
daa
add
jl
xchg
lods
ret
xchg
xor
dec
mov
jno
sub
cli
xlat
test
or
repz
xor
mov
loope
xchg
fcom
inc
xor
outs
ror
sub
sar
aaa
inc
repz
jbe
add
add
out
push
mov
jb
inc
lahf
outs
arpl
out
sub
lahf
outs
loopne
ja
pop
mov
jg
push
fmul
inc
sahf
std
push
mov
adc
mov
call
push
shr
daa
movs
in
jmp
icebp
mov
push
movs
lock
or
dec
sahf
movs
push
test
das
stos
and
sbb
aaa
or
or
jne
mov
aad
adc
fld
sbb
test
movs
bound
jecxz
dec
cdq
inc
mov
pop
adc
lock
loop
iret
pop
fisttp
cmp
scas
dec
(bad)
in
in
push
(bad)
inc
enter
add
jl
ret
adc
enter
cmc
push
sbb
in
and
cmp
aam
mov
xchg
push
cwde
xchg
cmp
inc
les
dec
fcmove
fidiv
pushf
sbb
sbb
retf
dec
dec
and
ficomp
pop
mov
(bad)
or
add
jo
mov
xor
add
sbb
sar
out
add
(bad)
test
sub
shr
xchg
xchg
rol
mov
fist
pop
mov
inc
mov
or
mov
push
outs
push
push
inc
xchg
sbb
sub
retf
sub
dec
movs
mov
push
xor
push
leave
adc
dec
xor
cmp
cmp
cmp
and
sbb
ja
xchg
std
loopne
scas
pop
mov
sti
push
mov
jno
sub
test
pop
aad
jbe
cdq
jno
aad
dec
dec
cwde
adc
test
or
xor
sub
inc
sar
dec
and
jae
pop
jns
lahf
gs
btr
mov
aas
(bad)
stos
jb
cmp
imul
inc
mov
jg
pusha
call
mov
or
call
fild
mul
shr
mov
retf
sbb
adc
fmul
mov
sub
or
sbb
cmp
push
(bad)
ja
pop
ins
rcr
or
popa
adc
xchg
mov
sub
or
jno
add
(bad)
in
xchg
repnz
cli
adc
jo
pusha
lahf
gs
fs
mov
mov
cld
mov
call
out
out
out
jp
(bad)
ins
ja
pop
add
scas
or
push
dec
sbb
and
loopne
push
shr
cli
inc
in
repz
imul
xchg
jge
int3
in
add
out
mov
test
dec
inc
pop
nop
mov
or
ret
mov
rcl
cdq
fiadd
xchg
jbe
add
sbb
jmp
dec
cmp
or
scas
jp
movs
jne
mov
push
or
push
fild
fldcw
outs
gs
test
dec
sub
in
retf
cwde
push
mov
movs
push
cmp
call
jns
push
aad
lds
cmp
xlat
nop
jg
mov
outs
mov
mov
mov
fs
mov
inc
and
(bad)
ror
mov
sbb
loopne
popf
push
mov
dec
pushf
jg
retf
push
mov
sbb
test
cmp
ins
retf
sub
(bad)
call
cwde
sar
or
cmp
(bad)
sbb
inc
dec
jg
out
pop
cmps
jb
in
sti
xchg
gs
mov
hlt
icebp
ja
mov
mov
mov
sub
adc
sub
push
lock
cld
and
and
mov
sub
adc
jae
mov
push
scas
cmc
sar
pop
lock
pop
sbb
fnstenv
femms
hlt
push
push
popf
nop
inc
ret
jp
enter
push
jp
mov
sbb
addr16
out
adc
dec
outs
jp
fst
adc
sbb
adc
jne
sub
adc
jmp
lods
loopne
cmp
mov
jae
adc
pop
js
and
pop
dec
dec
inc
inc
jmp
stos
scas
sbb
cmps
and
jnp
iret
jl
add
push
dec
imul
or
call
fs
ins
rcl
jle
mov
test
pop
add
aam
mov
xchg
in
scas
or
aad
mov
mov
fistp
int3
mov
and
mov
ins
push
sub
or
xchg
pop
call
and
mov
dec
inc
and
cmp
jle
dec
test
div
das
ds
xor
sub
in
into
dec
pop
repz
in
sbb
fcom
sbb
xchg
movs
mov
fwait
stos
or
pop
fnsave
sbb
les
test
xlat
mov
mov
push
dec
cmps
mov
mov
test
test
jecxz
aaa
pop
xchg
dec
aam
dec
inc
xchg
pop
(bad)
enter
cmps
int3
xor
add
imul
mov
shl
idiv
xchg
mov
rcr
inc
adc
dec
pop
test
or
xchg
(bad)
out
push
or
out
je
(bad)
dec
inc
cs
sti
mov
cmp
rcl
gs
and
sbb
jmp
(bad)
neg
push
cmp
pcmpeqd
aas
cs
sbb
arpl
pop
in
pop
or
mov
sti
dec
cli
cwde
jns
repnz
stos
psllq
cmp
mov
xchg
mov
movs
dec
nop
popf
sti
paddd
dec
stos
push
fisubr
mov
jb
and
push
inc
cmps
jmp
mov
(bad)
pop
fcomi
shr
out
aas
sahf
dec
pop
popf
fmul
movs
(bad)
push
leave
stc
push
mov
hlt
rcr
pop
pop
sbb
or
mov
aas
rcl
and
adc
push
pop
push
sahf
sbb
ins
sub
cmp
or
popa
jnp
push
iret
aas
jb
pop
jne
sub
push
push
ja
jns
int3
mov
pop
(bad)
jmp
rcl
mov
not
js
jp
scas
(bad)
cmps
aad
jns
jmp
cmp
inc
sahf
jle
push
xor
mov
xchg
jnp
push
hlt
cmp
or
mov
cmp
sbb
push
pop
cmps
and
xchg
mov
fiadd
imul
lods
gs
enter
rol
out
pop
and
das
pop
dec
mov
mov
call
or
(bad)
fmul
je
and
daa
adc
sahf
loop
inc
leave
sub
ffreep
pop
test
fst
xor
mov
adc
pusha
jmp
sub
mov
pop
pop
cmc
push
rcl
lahf
mov
fstp
xlat
in
pop
ja
and
in
fistp
(bad)
lods
adc
push
push
loope
call
cmps
push
sub
mov
jle
nop
aad
call
aas
jecxz
stos
cdq
pop
fdiv
fidivr
(bad)
or
ds
cmp
lods
push
mov
adc
jge
call
push
outs
xor
hlt
sti
sbb
push
pop
rcl
nop
lods
xor
jb
add
sub
and
sub
rol
mov
xchg
mov
pop
ficom
out
xchg
jle
imul
adc
lahf
cmp
test
dec
aaa
jbe
das
pop
ins
cmp
scas
stc
xor
inc
mov
loop
xchg
pop
inc
je
lds
jp
jae
sub
(bad)
jne
inc
inc
out
sbb
mov
(bad)
shr
add
test
mov
sbb
jo
stc
ss
and
jns
jae
pop
sbb
or
add
fincstp
xor
sub
cwde
enter
sub
pop
int3
pushf
mov
cmps
js
xchg
sbb
sbb
movs
fsubr
sub
adc
mov
es
sar
scas
jmp
iret
cmc
sti
or
sbb
in
std
adc
mov
fcmovb
aad
stos
add
loope
icebp
dec
popa
and
xchg
push
pop
inc
dec
cmp
push
pop
sbb
outs
cmps
sub
or
xor
in
cmp
in
push
cs
pop
mov
sub
adc
mov
call
pushf
inc
cmc
fsincos
not
(bad)
in
repz
push
test
push
mov
adc
and
jne
xor
jbe
lahf
stos
push
cld
push
dec
les
pop
pop
jge
dec
pop
ficom
sub
mov
sahf
dec
fldenv
daa
adc
pop
loope
mov
daa
or
sub
sbb
mov
popf
(bad)
arpl
lods
imul
mov
xor
mov
mov
mov
or
adc
xchg
mov
lock
or
sbb
mov
movups
je
in
movs
repnz
sbb
aas
add
pop
loopne
xor
mov
pop
test
ret
ret
and
repz
sbb
adc
test
sub
iret
or
xchg
xchg
jb
daa
adc
(bad)
xchg
mov
fiadd
bound
in
cmps
fisttp
jbe
sub
repnz
das
and
jle
add
out
fwait
pop
push
stc
mov
popf
xor
sub
pop
out
xchg
iret
test
or
pop
xlat
mov
fnsave
fidivr
mov
js
or
adc
clc
movs
mov
inc
push
jne
inc
pop
(bad)
aas
test
shl
xor
mov
rcr
shl
cmp
push
call
addr16
dec
mov
xchg
pop
and
sub
in
mov
loop
sbb
xchg
mov
xchg
(bad)
imul
push
es
adc
dec
sahf
jp
mov
xchg
dec
cmp
push
lahf
shl
fild
inc
in
mov
in
clc
mov
pop
or
xchg
pop
fbld
add
clc
test
xor
cmc
or
push
mov
(bad)
push
stos
fsubr
pop
jecxz
jp
cmp
jge
push
or
or
and
jmp
sar
call
mov
push
imul
ror
push
(bad)
cmc
mov
xchg
pop
jns
adc
in
mov
sti
lds
mov
lahf
pop
ret
sub
(bad)
push
adc
(bad)
jmp
retf
mov
pop
and
out
ja
(bad)
cmp
sar
rcr
mov
xor
pop
inc
dec
adc
fwait
xlat
jle
ret
ret
cmp
push
das
xchg
pop
inc
cmp
movs
sti
data16
mov
xchg
(bad)
out
test
cli
push
in
cmp
mov
mov
push
cmps
outs
inc
ds
fucomp
cmp
dec
retf
out
nop
data16
(bad)
dec
sahf
jb
and
popa
sbb
iret
cmp
mov
pusha
mov
sbb
lahf
daa
mov
or
aas
mov
call
mov
inc
jmp
sub
xchg
lods
push
push
ret
stos
push
cmp
or
mov
and
pop
cmp
mov
mov
inc
sbb
push
mov
cmp
xor
or
aaa
push
pop
dec
mov
js
dec
imul
mov
jge
loop
and
jnp
xor
movs
repz
adc
or
adc
sbb
or
or
and
mov
or
fsubr
pop
pop
jmp
retf
mov
xchg
dec
and
icebp
shl
mov
div
sbb
jecxz
sub
outs
and
mul
in
adc
(bad)
dec
mov
cdq
stos
mov
shl
(bad)
pop
xchg
retf
movs
int
hlt
ss
cmps
out
jbe
test
test
jmp
pop
rcl
pop
push
cmp
mov
fdiv
and
adc
pushf
outs
les
cmps
aaa
in
jae
jmp
pusha
ins
aam
push
dec
arpl
xchg
shl
xchg
pop
inc
mov
pusha
dec
(bad)
enter
mov
pop
cmp
and
js
les
and
xchg
adc
mov
loope
adc
xchg
add
pop
adc
mov
retf
and
xor
push
mov
and
fldcw
and
nop
pop
inc
or
lock
idiv
and
shl
push
cmps
sbb
mov
adc
xor
mov
in
xlat
jp
fwait
dec
and
fwait
ss
leave
mov
repz
movs
stc
comiss
cmp
push
mov
fnstcw
adc
aas
jmp
stos
leave
sub
xchg
xchg
xor
imul
jno
dec
and
fcom
cmp
shr
sbb
pop
pop
mov
cmp
pop
sub
loop
cwde
out
fs
(bad)
stc
movs
xchg
pop
fsubr
push
mov
and
ss
lods
lea
pop
and
adc
xor
or
pushf
test
sub
push
sub
test
adc
xchg
lods
xchg
jbe
enter
or
inc
sbb
and
jae
bound
in
sti
dec
gs
rol
arpl
daa
sub
cmp
test
imul
pop
shl
ret
rcr
pop
pop
jle
jp
cmps
sahf
scas
inc
daa
cmp
jmp
add
int
mov
fs
xor
fcomp
dec
aad
loope
cmp
stos
fadd
ficom
add
ret
aad
lods
xor
out
test
inc
stos
je
add
lds
push
mov
les
lods
popf
xlat
pop
mov
fstp
push
repnz
adc
mov
cmp
add
aas
aas
leave
aaa
ret
sahf
cdq
or
sbb
leave
or
clc
inc
push
cmps
cwde
xor
cmps
push
addr16
inc
aaa
out
in
in
pop
movs
loop
pop
(bad)
xchg
(bad)
mov
push
dec
push
dec
inc
adc
jmp
mov
lock
cdq
in
pop
nop
pop
sbb
aad
sbb
inc
mov
ror
mov
sub
dec
arpl
fidivr
jbe
lods
xchg
add
aad
jmp
push
ins
pop
test
or
imul
shld
and
mov
shld
lods
jae
xchg
jns
and
in
lahf
(bad)
lods
push
cld
loopne
xchg
js
js
add
and
pop
icebp
push
mov
inc
pop
data16
loope
adc
not
cmp
gs
cmp
pop
sub
das
xlat
in
stos
out
xchg
fstp
xor
xor
pop
aad
lods
adc
inc
inc
mov
mov
adc
or
pop
push
inc
mov
gs
stc
test
xor
out
sahf
movs
mov
jmp
stc
mov
ror
inc
fsubr
push
pop
pop
stc
adc
repnz
and
lods
mov
gs
enter
jb
push
cmp
mov
or
cwde
in
sub
mov
jp
fisttp
ins
push
retf
dec
lods
(bad)
cmp
mov
pop
iret
mov
movs
add
icebp
adc
cs
and
les
cli
dec
push
cmp
mov
cdq
push
jg
lock
pop
xor
nop
sbb
sub
mov
js
repnz
dec
jg
cmp
ja
xchg
xchg
sbb
inc
retf
call
mov
ins
cwde
push
neg
aaa
hlt
daa
jbe
icebp
mov
data16
nop
inc
sar
adc
sahf
icebp
pause
loop
cmp
mov
mov
fimul
or
cmp
adc
fnstsw
sbb
fs
scas
jmp
fsubr
inc
sub
stos
sub
sub
push
push
popf
stos
and
lods
xchg
das
loope
cmc
inc
addr16
test
add
sbb
cmp
xor
inc
jno
sar
mov
jb
repnz
imul
fwait
mov
aam
xor
(bad)
fsub
test
lahf
or
mov
jl
cld
popf
inc
push
(bad)
jp
inc
xor
je
sbb
xchg
rep
fs
stos
test
daa
test
addr16
xor
mov
pushf
adc
repnz
enter
js
mov
xchg
scas
mov
sub
inc
jg
popf
shl
xchg
pop
xchg
and
xor
stos
aas
call
loop
and
int
pop
adc
aaa
jns
mov
adc
ror
scas
add
fild
stos
cmp
or
cwde
or
dec
inc
pushf
lds
fwait
sar
repnz
test
bound
into
xor
add
cmp
mov
pop
push
call
fs
adc
icebp
in
or
dec
and
mov
leave
js
popa
push
mov
ret
mov
pusha
xchg
les
(bad)
mov
xchg
xchg
jo
pop
cwde
call
test
mov
inc
fcom
sub
pop
cmp
sbb
pop
in
or
jl
jge
pop
adc
sub
or
jmp
scas
mov
icebp
cwde
fcomp
dec
cmp
jmp
sub
lea
iret
fwait
dec
or
pop
int
leave
cmps
add
dec
scas
dec
xor
out
les
gs
rcr
dec
nop
cld
in
xor
push
or
cwde
rol
inc
push
mov
cs
inc
pop
imul
ret
sbb
(bad)
pop
popa
mov
sub
pop
mov
mov
cmp
cmp
not
jecxz
neg
push
dec
mov
lods
dec
movs
cli
xor
add
inc
pop
jg
popa
jbe
cmps
mov
out
push
scas
lock
push
test
std
cmps
cli
xor
popa
daa
cmp
mov
les
cli
xor
call
dec
sbb
(bad)
shl
or
inc
sbb
adc
fadd
ins
iret
repnz
cwde
or
xor
cwde
cmp
imul
in
mov
dec
stos
aas
dec
xchg
in
inc
pop
call
pop
cmp
jnp
fwait
xor
aad
cmp
aas
ret
mov
(bad)
mov
outs
hlt
xchg
jb
or
jns
adc
(bad)
jge
jl
rol
pop
movs
push
sbb
and
pop
ret
adc
fdiv
xchg
lea
dec
dec
xor
daa
inc
cmc
jg
push
arpl
xchg
(bad)
xlat
cmovbe
shl
and
inc
pop
inc
adc
xchg
mov
in
in
jae
jae
xor
pop
stos
jnp
iret
jne
imul
in
daa
scas
outs
push
cmp
nop
mov
xchg
cld
xchg
fcmovu
loop
out
cld
jo
daa
lods
jl
nop
sub
retf
loopne
or
std
add
js
arpl
jge
xor
(bad)
pop
(bad)
mov
add
inc
lock
dec
fsubr
loope
xchg
jl
sub
enter
(bad)
inc
xchg
xchg
sets
clc
adc
cmps
aad
adc
sbb
mov
addr16
cmp
cdq
mov
pop
sar
xchg
cdq
movs
cmp
jnp
lods
cmc
shr
push
shr
sub
add
test
sbb
jmp
add
mov
sub
(bad)
pop
adc
mov
ins
push
xor
bswap
lea
out
mov
jae
cmp
lods
in
fcom
mov
xor
mov
jo
jge
inc
cmps
xchg
adc
fldenv
push
dec
fld
mov
ja
mov
xchg
sahf
lods
and
fcmovnb
xlat
and
pop
in
fimul
jbe
jno
aas
les
movs
fisttp
call
sub
push
mov
adc
push
jecxz
sbb
push
sqrtps
jns
pop
mov
test
retf
and
mov
mov
lock
inc
lock
in
cmc
jecxz
add
dec
dec
gs
retf
fld
loopne
ss
daa
xor
icebp
jle
loope
iret
and
(bad)
xor
xchg
mov
imul
ffree
(bad)
shl
add
int3
inc
mov
push
scas
lods
int3
cmp
lahf
adc
push
retf
inc
cmp
sbb
scas
icebp
mov
and
push
(bad)
sbb
inc
xor
cli
leave
jg
and
adc
adc
or
adc
rcr
xlat
sahf
cs
in
out
xor
sahf
mov
push
into
jmp
ror
fnsave
daa
hlt
sbb
xchg
das
sub
inc
mov
jns
cmp
jl
out
mov
sub
ins
push
nop
mov
aam
adc
jmp
add
retf
or
pushf
cmp
stc
mov
mov
stos
aad
test
cmp
pop
xor
imul
and
and
add
out
and
mov
movs
xor
inc
rol
mov
int
inc
ror
out
pop
repz
fwait
dec
mov
mov
xchg
pop
(bad)
js
(bad)
sub
fs
mov
into
pop
ja
dec
(bad)
push
cmp
pushf
and
sub
aad
adc
test
push
mov
fadd
dec
mov
in
inc
mov
pop
and
cdq
dec
fld
mov
cmp
cmp
jmp
(bad)
push
sbb
in
mov
push
fld
push
mov
cmp
pop
push
mov
scas
xacquire
jnp
jne
inc
lock
cmp
(bad)
rcl
imul
add
pop
cmp
retf
call
mov
cmc
add
scas
xchg
add
cmp
bound
fist
out
mov
mov
test
sbb
out
cmc
(bad)
jb
and
ret
cmp
xchg
out
xchg
pushf
sub
pop
adc
int
mov
mov
or
lahf
xor
sbb
dec
cmps
mov
test
push
sub
mul
sub
repz
xchg
sub
jp
or
repz
mov
fwait
cld
pop
outs
pop
xchg
cdq
fnstcw
psubsb
je
sbb
lahf
cmps
mov
test
cmp
inc
jae
mov
and
test
mov
popa
imul
mov
test
or
push
sub
or
in
add
sub
test
jl
push
xchg
(bad)
inc
cmp
lea
and
or
cmp
inc
dec
rcr
fprem1
mov
jae
ror
popa
and
outs
cmp
js
call
clc
mov
add
pusha
mov
xor
imul
cmp
jmp
inc
push
fnsave
cs
pop
sbb
clc
retf
mov
dec
jmp
and
mov
and
popa
push
adc
pop
sub
fs
add
fdiv
jb
or
retf
xchg
mov
pop
and
mov
call
clc
push
dec
jmp
jno
in
cld
inc
cmp
aaa
mov
aad
adc
xchg
inc
rol
cmp
sbb
push
setns
jmp
inc
fwait
jecxz
imul
inc
cmp
adc
jno
inc
lods
mov
dec
sti
lahf
retf
fwait
pop
pop
(bad)
fstp
pop
inc
imul
inc
mov
gs
xchg
stos
cmps
(bad)
enter
adc
fsub
(bad)
js
or
movs
loop
pop
mov
sub
add
popf
inc
nop
hlt
sub
mov
arpl
push
pushf
stos
adc
or
pop
je
arpl
leave
fs
pop
inc
enter
(bad)
ins
dec
stc
jnp
sub
dec
mov
push
enter
sub
test
adc
rcl
pop
inc
cli
pop
xchg
out
fsubr
mov
jo
das
inc
dec
dec
mov
retf
cwde
dec
shr
in
retf
iret
sbb
enter
dec
mov
or
les
pop
sahf
xchg
and
pushf
fnstenv
xor
mov
push
ret
inc
pop
add
push
mov
sbb
iret
lock
inc
into
or
mov
pusha
shl
mov
mov
sub
js
(bad)
mov
and
mov
push
pop
push
cmp
dec
out
hlt
jno
jge
pop
pop
and
mov
mov
adc
lds
imul
pushw
inc
pop
dec
jp
push
mov
jns
pop
push
(bad)
or
stos
pop
mov
out
xchg
and
ret
cmps
mov
icebp
fdivr
dec
popa
call
adc
adc
out
cmp
jo
sub
ret
xor
ret
mov
cmp
dec
dec
sub
aad
or
test
adc
push
retf
lea
and
mov
les
cmps
dec
pop
test
jge
and
cmp
cmp
sub
mov
imul
inc
sahf
push
pop
xchg
test
sbb
inc
test
inc
movs
push
imul
push
xchg
into
popa
mov
jecxz
mov
jp
(bad)
jg
in
cdq
repz
xchg
scas
jg
test
mov
(bad)
out
shl
xor
fs
ret
sbb
push
jle
lea
adc
lea
movs
imul
pop
ds
lahf
inc
inc
pop
push
jno
mov
inc
(bad)
pop
scas
dec
inc
ror
sub
push
das
ds
rcr
sar
mov
lods
xor
cmc
sub
cmc
(bad)
hlt
jb
dec
ds
outs
jecxz
imul
sbb
jge
movs
pop
push
mov
fidivr
add
sbb
(bad)
and
cmp
gs
xor
xchg
xchg
push
push
push
push
pop
or
mov
jge
push
adc
ror
pop
das
aad
lahf
das
adc
shr
push
hlt
ja
xchg
inc
mov
bnd
(bad)
pop
xchg
gs
ins
cmp
xchg
sbb
sub
adc
jp
addr16
or
sbb
or
push
fxch
loop
mov
std
rcr
cmp
mov
out
sub
mov
leave
push
mov
and
imul
mov
adc
inc
xchg
out
dec
cmp
(bad)
mov
(bad)
xchg
jne
hlt
dec
pop
adc
and
es
cmp
data16
jle
ja
out
ret
pop
(bad)
adc
cmp
fist
je
jnp
cdq
test
cmpxchg
add
or
pop
mov
loopne
fisub
push
sbb
dec
mov
stos
pop
call
out
push
das
out
mov
lea
(bad)
(bad)
test
fbld
int3
mov
aaa
or
cmp
xor
cwde
sbb
sub
cs
cs
arpl
lods
stc
lock
push
aaa
hlt
loope
xchg
sub
pop
xchg
xor
jle
adc
dec
(bad)
sub
mov
ret
idiv
imul
fstp
fbstp
test
ret
mov
jo
into
sub
mov
pop
xor
cld
popa
xor
xchg
add
neg
test
or
sbb
sub
sti
retf
dec
add
addr16
ja
fwait
in
pushf
icebp
mov
rcr
or
push
out
push
sub
pusha
ins
xor
dec
sub
adc
dec
pop
add
xor
test
sbb
push
inc
push
mov
jbe
jmp
pop
xchg
gs
or
push
daa
in
stos
lahf
inc
icebp
dec
inc
(bad)
call
int
lods
cmp
scas
xchg
sbb
retf
enter
repnz
cmp
fdiv
int
data16
sbb
mul
pop
push
loop
std
dec
dec
inc
cmc
ja
or
lds
fld
dec
jbe
test
ds
sub
and
sbb
inc
leave
adc
xor
jle
jb
mov
aas
lods
inc
(bad)
ja
nop
imul
or
pop
jmp
stc
dec
sub
dec
jne
pop
push
adc
popf
mov
repz
mov
out
mov
and
dec
push
mov
test
adc
mov
mov
cmp
lods
mul
pop
dec
mov
mov
inc
stos
aas
iret
mov
loopne
jb
mov
mov
push
repnz
icebp
jecxz
cld
lahf
jns
retf
pop
jl
mov
ins
fcom
and
shr
fwait
fwait
xor
cmps
xchg
ds
xchg
bound
pop
xor
int
es
int
xchg
sub
sub
movs
fadd
mov
fdivr
stc
xor
push
push
test
inc
imul
xor
out
jmp
je
ret
pop
sbb
jns
xor
and
jle
jo
ss
xchg
ficomp
push
fstp
mov
daa
dec
mov
xchg
pop
enter
arpl
add
jle
das
stos
xlat
mov
lds
clc
cld
jge
mov
shl
sub
call
enterw
sbb
mov
inc
pop
cld
push
imul
(bad)
add
mov
push
outs
push
mov
ja
xchg
or
jmp
and
aam
mov
pop
dec
movs
aad
lock
adc
inc
cmp
dec
fdiv
pop
loope
add
scas
arpl
cmp
cli
lea
(bad)
movs
mov
lods
push
mov
pop
add
jb
xor
push
add
or
stc
xchg
nop
(bad)
fistp
sub
mov
pop
leave
jo
jo
popa
div
add
sbb
vcvtpd2ps
dec
jnp
ud0
lock
mov
inc
ss
ror
and
xor
sbb
cmc
push
(bad)
mov
ja
and
cs
xchg
mov
add
inc
fmul
js
xchg
(bad)
jle
push
xchg
inc
jo
retf
adc
pop
dec
(bad)
iret
inc
jne
add
inc
jnp
cli
pop
fld
xchg
adc
fsub
mov
repz
(bad)
ins
inc
cdq
xor
dec
fs
jl
dec
aam
dec
aam
mov
clc
mov
mov
xor
inc
fs
mov
jge
out
mov
dec
les
fstp
jge
push
mov
shl
mov
popf
xor
(bad)
xchg
pop
inc
call
call
adc
mov
mov
xchg
stc
push
cli
scas
dec
mov
mov
dec
mov
sbb
daa
push
sub
pushf
push
inc
jae
and
sar
jae
cmp
test
jb
push
rol
mov
daa
gs
xor
cmp
lods
jnp
(bad)
mov
xchg
sbb
loop
fcmovnbe
xchg
nop
fcomip
add
popa
lock
pop
loopne
js
outs
xchg
out
repnz
mov
jl
stos
in
sbb
sbb
inc
mov
xchg
dec
fs
or
bound
call
xchg
out
bound
jno
jecxz
clc
mov
mov
mov
lea
sbb
arpl
data16
mov
lahf
fnstenv
int3
sub
xlat
mov
mov
dec
idiv
js
iret
(bad)
aam
mov
mov
sub
cmps
jmp
pop
rol
aam
cs
sub
add
push
sub
pop
loope
(bad)
dec
fwait
xor
clc
das
jle
movs
and
xchg
ret
mov
jne
jg
jne
test
push
push
out
inc
inc
sbb
ds
jmp
das
test
jo
mov
add
les
xchg
lods
xor
lea
popa
test
lock
pop
cs
pop
loop
sbb
daa
xlat
jbe
aaa
xchg
movs
cmp
xchg
cli
aad
int3
mov
repz
retf
sub
jno
aad
and
sti
loopne
les
pop
sub
out
xchg
aas
dec
adc
sub
in
add
xor
push
push
aam
clc
rol
jl
dec
inc
data16
bnd
push
mov
mov
js
xor
enter
shl
pop
jl
or
inc
in
sbb
xchg
and
std
std
jge
lods
sbb
jbe
dec
aaa
frstor
mov
add
sub
dec
das
pop
ds
cmp
or
outs
add
push
adc
ret
lods
cmp
outs
ret
dec
dec
popa
mov
pop
mov
loopne
jne
inc
or
push
call
xchg
push
dec
add
nop
cmp
pop
sub
add
cmp
jg
jge
pop
clc
or
cdq
out
gs
fst
cmps
or
aad
mov
dec
jecxz
ror
jb
hlt
ret
jmp
call
neg
ss
repz
adc
cmps
nop
enter
sub
stos
push
aas
scas
cmc
mov
mov
out
mov
push
stc
add
ret
mov
jl
loopne
pop
lock
shl
xor
mov
daa
xchg
inc
or
mov
fisttp
add
loopne
or
aam
xor
mov
mov
popa
fidiv
das
mov
cmp
sub
pop
and
pushf
or
imul
rcl
(bad)
loop
xor
imul
in
sub
dec
dec
push
adc
dec
cwde
test
or
test
mov
ds
or
push
inc
mov
std
aaa
cmps
not
sub
mov
mov
mov
in
add
cmp
xchg
aad
inc
test
iret
(bad)
add
enter
jecxz
retf
cmc
jbe
sbb
and
or
loop
stos
movs
into
xor
push
push
mov
xchg
jnp
push
mov
cmp
xor
cmp
(bad)
mov
sbb
(bad)
inc
lds
jl
fcmovne
cld
pop
retf
xchg
push
call
scas
pop
push
cdq
pop
push
aam
mov
push
aad
(bad)
cmp
or
mov
pop
pop
call
push
xor
mov
sbb
clc
push
enter
int
and
lds
mov
loope
clc
adc
ror
hlt
jmp
or
daa
xchg
sub
mov
fcmovnb
gs
icebp
lea
dec
pop
xchg
push
inc
fwait
daa
push
enter
(bad)
xchg
push
mov
test
mov
test
xlat
out
mov
ffree
push
dec
xor
mov
push
icebp
push
(bad)
cmp
sbb
pop
push
loopne
ds
neg
cli
add
jg
jge
xchg
sub
dec
rol
mov
jl
sti
xchg
jnp
ja
mov
sbb
std
jecxz
psubq
cmp
inc
lock
int3
pop
pop
sbb
ret
aad
push
mov
pop
add
dec
je
mov
pop
mov
inc
dec
fisttp
dec
mov
sub
mov
sbb
xchg
sbb
dec
fmul
retf
xchg
ret
cwde
mov
shl
mov
cmp
pop
enter
dec
sti
imul
setge
div
repz
xchg
adc
mov
bound
popf
in
cld
fdiv
dec
sbb
rcr
leave
into
jb
or
cmp
repnz
xchg
jae
inc
ds
fwait
icebp
mov
mov
or
nop
imul
sbb
mov
std
mov
mov
jle
and
jno
inc
ror
stc
pop
jno
stos
in
jae
cs
and
jecxz
or
adc
test
out
iret
dec
in
nop
out
pop
jl
mov
daa
push
clc
fld
test
mov
repz
ror
mov
xchg
cwde
pop
(bad)
mov
(bad)
jbe
jp
ins
test
mov
std
pop
test
sbb
dec
and
xchg
(bad)
push
arpl
cmc
into
jge
data16
or
ret
and
fnsave
out
(bad)
out
mov
xchg
push
sbb
inc
ror
data16
sbb
lahf
push
je
or
(bad)
aas
adc
pop
mov
cmp
xor
test
adc
pop
mov
pushf
or
mov
add
mov
rol
adc
scas
jle
cmp
test
ins
mov
int
sub
sahf
lods
push
pop
out
mov
xchg
(bad)
dec
in
inc
or
pop
stc
rcr
mov
fld
push
lea
in
outs
fst
sub
nop
dec
mov
int3
and
add
sub
call
push
nop
std
or
inc
call
je
and
inc
add
pop
sbb
test
mov
push
sub
in
sbb
sub
out
cmps
stc
and
adc
jecxz
fstp
fisubr
mov
sahf
iret
gs
inc
ss
fisubr
dec
push
dec
and
test
push
mov
sbb
lea
jp
pusha
sub
call
dec
cld
retf
adc
movs
jg
adc
or
mov
inc
pop
and
aaa
sbb
mov
mov
lods
mov
mov
in
jbe
inc
sbb
xor
repz
stc
push
jmp
sbb
pop
sbb
fdiv
mov
(bad)
jle
in
cmp
mov
xor
loope
sub
sub
push
xor
sbb
call
inc
cmp
and
arpl
loope
mov
push
std
cmp
or
ja
mov
push
sbb
cs
mov
jecxz
adc
inc
dec
jge
mov
sbb
out
and
jmp
lds
sbb
push
xchg
rcl
dec
nop
mov
clc
scas
test
pop
retf
inc
pop
popa
loopne
xor
fdiv
cwde
mov
mov
sub
pop
mov
add
xor
and
add
loopne
push
out
mov
sahf
mov
test
les
lods
or
sbb
sub
fld
sbb
xchg
test
inc
mov
sub
sub
test
xchg
gs
inc
es
les
aaa
imul
mov
mov
movs
push
sub
xchg
xor
ds
dec
les
xor
lock
jno
add
sbb
fs
xor
pop
xchg
iret
push
movs
mov
mov
fwait
or
mov
sub
scas
mov
mov
fdivr
pop
mov
sbb
int
popf
test
ficom
les
(bad)
add
icebp
test
or
pop
scas
movs
add
add
pop
stc
pop
inc
test
mov
dec
mov
dec
enter
lods
cmp
loope
mov
js
jno
out
in
std
xor
push
rol
sbb
jl
mov
inc
push
and
sub
call
jp
cmovb
ins
push
lds
jne
enter
pop
ds
push
(bad)
mov
mov
test
push
test
push
jne
call
dec
adc
stos
add
icebp
fidivr
stos
test
dec
mov
setp
cs
popa
mov
xchg
(bad)
and
xchg
inc
mov
mov
mov
aas
push
outs
jmp
mov
add
sub
enter
mov
ins
out
jmp
(bad)
and
mov
popa
inc
mov
enter
test
pop
stos
mov
pop
sar
fbstp
inc
pop
mov
outs
out
je
xlat
mov
push
pushf
(bad)
pop
jecxz
and
jnp
mov
mov
mov
and
and
jge
xor
mov
adc
adc
daa
test
cmps
xor
mov
call
and
jg
sub
inc
sub
arpl
dec
fldcw
jp
mov
test
outs
pop
mov
aad
jo
loop
mov
mov
test
push
cmp
cld
repz
pop
pop
ins
dec
push
fs
vdivss
mov
out
fwait
sar
stos
jmp
idiv
and
addr16
jg
cmps
fldenv
pop
xor
mov
pop
pop
adc
xor
jmp
adc
fwait
cs
fistp
xchg
jge
adc
fstp
fs
sub
fwait
int3
adc
cld
mov
popa
push
out
pop
push
shl
add
jl
leave
xchg
sahf
mov
xchg
in
fstp
dec
jne
test
cmps
fwait
cmp
das
mov
int
std
lock
fs
inc
movs
adc
push
sub
cmps
hlt
test
mov
mov
out
xchg
sub
mov
mov
jmp
test
add
cmc
and
jb
in
dec
mov
rcr
and
mov
std
jbe
pusha
sar
mov
mov
outs
cmp
adc
lahf
leave
mov
arpl
rcl
xor
retf
and
pop
mov
xor
jo
stos
fucomip
fwait
mov
sub
push
xor
adc
clc
mov
pushf
mov
fs
mov
xchg
sbb
(bad)
out
jl
and
add
add
sub
inc
fwait
xchg
fsubr
push
(bad)
dec
repnz
data16
mov
icebp
sub
stos
mov
adc
les
sub
inc
neg
lods
stos
or
dec
aaa
fsubr
gs
cmps
cmps
dec
loopne
pop
lods
mov
cdq
mov
dec
mov
fsubr
fwait
popf
movs
jle
ficomp
ret
and
xor
fimul
sahf
xchg
lds
imul
mov
pop
hlt
jg
fwait
pop
or
jnp
jge
sbb
stos
out
in
cmps
ret
ja
or
std
and
xor
sub
jecxz
test
into
push
loopne
mov
xor
mov
nop
je
jb
dec
js
ficom
xor
pop
test
adc
or
movs
xlat
imul
pop
push
outs
push
aaa
dec
scas
jnp
push
xor
sti
loopne
add
out
jmp
xor
sub
xchg
int3
mov
fs
mov
inc
mov
(bad)
sub
outs
loopne
mov
and
or
outs
fadd
out
dec
imul
sbb
add
dec
sbb
cli
push
jae
add
std
mov
std
(bad)
push
add
jbe
pop
jge
mov
xor
mov
mov
test
sbb
or
popf
jle
pop
in
mov
dec
xor
sub
popf
and
cmp
imul
push
push
fwait
adc
imul
and
sub
jno
and
icebp
adc
xor
rol
xchg
test
les
int
lods
add
jl
out
inc
pop
adc
(bad)
loop
pop
adc
les
sub
rcr
call
cmp
leave
dec
xlat
loopne
cmp
repnz
dec
adc
pop
or
mov
lock
or
jbe
push
xor
inc
xor
sub
dec
xor
cmp
jmp
xchg
xchg
xchg
cmps
push
or
fs
aaa
jge
adc
sti
retf
aas
pop
mov
gs
stos
in
push
mov
(bad)
cwde
sub
je
jg
adc
lods
inc
push
retf
push
inc
push
stos
mov
rcl
test
arpl
pop
popf
ins
mul
jmp
add
test
(bad)
in
xchg
sbb
mov
adc
hlt
add
in
rcr
clc
inc
inc
inc
(bad)
pop
ret
(bad)
frstor
xor
mov
jl
push
out
std
pop
fnstsw
enter
gs
ja
leave
cld
fsubr
pop
dec
push
xchg
jp
mov
cmp
(bad)
cs
inc
hlt
add
aad
popf
sbb
sub
xor
inc
lds
pop
inc
inc
ja
dec
imul
loopne
sub
call
pop
out
data16
cmp
push
stos
mov
pop
mov
fdiv
add
mov
clc
inc
inc
cwde
clc
into
push
mov
xchg
jmp
mov
cdq
scas
js
lea
dec
mov
(bad)
(bad)
fsubr
fisub
pop
sbb
adc
push
inc
xor
ror
data16
movs
ja
ins
popf
push
nop
test
xchg
loop
movs
add
push
mov
sub
ins
les
ret
fs
dec
adc
lock
arpl
sbb
fidivr
addr16
xor
and
jmp
add
or
in
hlt
xchg
mov
(bad)
in
(bad)
es
mov
cli
or
mov
in
aaa
inc
sbb
lds
and
xor
jb
int3
push
jne
mov
je
fstp
retf
add
xchg
outs
mov
xchg
xor
adc
mov
stos
pop
stos
xlat
lods
push
(bad)
xlat
ins
scas
movs
mov
loope
outs
cmc
fbstp
sti
push
in
in
repz
and
mov
out
jmp
rol
sub
fwait
adc
je
(bad)
adc
dec
dec
leave
pusha
repz
jmp
inc
je
add
or
fcomp
addr16
pop
jmp
jb
mov
lea
gs
push
mov
sub
pop
shr
mov
xchg
and
(bad)
mov
imul
sbb
outs
xchg
fimul
cld
out
test
and
das
repz
push
lahf
jmp
(bad)
addr16
js
cmp
sbb
and
push
js
mov
add
cwde
and
mov
(bad)
movhps
cmps
cwde
xor
mov
lods
dec
cwde
dec
inc
(bad)
fld
mov
daa
inc
inc
jnp
xor
mov
popf
and
sti
sahf
lea
fwait
mov
(bad)
aam
push
xchg
js
xchg
sub
je
inc
mov
sub
mov
mov
pop
pop
add
lds
arpl
dec
dec
push
and
xchg
jae
shr
div
and
jbe
cmp
push
mov
add
ins
inc
mov
pop
xchg
pop
adc
sbb
xchg
outs
test
jo
and
adc
jae
jmp
movs
inc
mov
fucom
pop
das
imul
addr16
add
mov
push
retf
cs
ret
jbe
sub
stc
dec
add
or
pop
loope
adc
mov
dec
add
push
push
xor
add
add
lds
push
aad
xchg
sbb
sub
mov
push
push
inc
pop
test
xchg
loope
frstor
nop
xchg
sub
cmp
stc
outs
add
ins
mov
fild
jne
mov
gs
sub
mov
sahf
cmc
inc
jo
in
mov
or
jg
int3
bswap
out
sbb
aad
cmp
dec
out
stos
mov
outs
xor
pushf
xchg
sbb
(bad)
fstp
adc
aaa
pop
xor
sbb
out
sub
(bad)
fisub
int
sub
cwde
or
cdq
pop
imul
pushf
mov
arpl
adc
lods
add
in
mov
sbb
ja
add
and
fstp
sbb
push
pop
lahf
push
mov
adc
icebp
jmp
daa
fcomp
adc
lds
mov
jo
mov
add
js
in
or
fidivr
xlat
jae
mov
in
and
xchg
jb
aam
jae
stc
or
cs
or
pop
stos
fldenv
or
dec
(bad)
imul
out
ror
in
lock
and
ret
sub
int
xchg
(bad)
imul
mov
jne
jo
sbb
adc
gs
aaa
mov
not
jmp
push
pop
jmp
push
cmp
sti
xchg
enter
ret
cmp
sbb
push
sub
sti
cmp
adc
fmulp
daa
cld
or
inc
mov
aas
mov
hlt
push
adc
int3
pop
cmps
push
or
xor
push
outs
es
dec
mov
frstor
dec
push
ror
mov
sub
mov
xor
mov
cmp
adc
mov
or
jae
jo
jecxz
mov
push
sbb
or
fild
cmp
rcl
stos
popf
dec
adc
cmps
push
dec
adc
dec
mov
pushf
jns
aad
adc
shl
xlat
into
mov
cli
push
jno
and
xlat
aas
sub
pop
(bad)
fidiv
pop
push
fistp
dec
call
loopne
sub
imul
push
adc
mov
adc
(bad)
ins
ins
into
and
dec
xchg
jne
jmp
jbe
popa
leave
cmp
nop
ror
xchg
pop
lods
pop
and
sub
mov
add
dec
mov
stos
jl
out
imul
jne
jge
push
test
and
lds
or
sbb
cli
sub
add
cmc
add
pop
frstor
(bad)
test
mov
std
out
inc
mov
lods
xor
ins
mov
xor
xor
fiadd
sub
push
mov
xchg
sti
and
cmp
add
adc
jno
sub
and
sbb
push
call
push
mov
push
dec
jg
data16
add
inc
in
stos
ds
popa
call
aaa
or
dec
scas
and
jne
and
or
mov
jl
ds
das
or
mov
push
rcr
jne
in
(bad)
lea
mov
inc
iret
push
test
dec
popf
enter
fwait
dec
sbb
popf
jge
stos
sbb
push
dec
mov
add
and
push
shl
ja
mov
(bad)
in
cwde
fadd
leave
icebp
mov
jl
jbe
cmovo
xor
imul
cld
in
(bad)
repnz
imul
scas
dec
popa
repz
sub
hlt
jecxz
lods
jp
or
mov
jbe
mov
cld
sub
mov
add
fwait
and
popf
ja
inc
cmp
aad
and
jo
push
lahf
hlt
inc
shl
adc
xor
cmc
aas
add
lds
cwde
jg
addr16
pop
mov
add
mov
push
dec
xchg
icebp
xlat
push
mov
aaa
xchg
mov
push
sbb
fs
jecxz
into
rcl
fisttp
push
xchg
out
je
clc
out
jecxz
cmps
popa
or
cmps
pop
es
dec
add
lods
dec
add
shl
dec
daa
mov
dec
jg
dec
xor
and
dec
xchg
cmp
add
cld
cmps
pop
ins
sbb
shl
pop
stc
mov
pop
pop
mov
push
out
pop
jge
xchg
sbb
aam
push
pop
push
in
mov
ja
inc
xchg
out
mov
adc
mov
js
and
cmp
pusha
sub
add
sub
inc
les
push
xor
push
xchg
(bad)
gs
mov
sahf
(bad)
jmp
aad
inc
rcr
or
dec
pop
jae
xor
jno
arpl
xor
inc
pop
imul
stos
mov
aad
mov
adc
cmp
repnz
sbb
sub
sub
add
sbb
adc
dec
cmp
push
test
movs
mov
mov
inc
pop
imul
ret
mov
mov
cmp
pop
fcomi
push
mov
call
mov
cli
test
jns
das
sahf
push
retf
mov
mov
sub
lea
sbb
inc
xor
add
popf
out
lods
aam
neg
bound
(bad)
push
mul
popa
js
xor
push
mov
cli
dec
arpl
jae
mov
mov
and
cmp
mov
push
push
sub
mov
cli
add
std
clc
jnp
xlat
cmp
mov
xor
adc
dec
vpunpcklbw
cdq
popf
cmps
xchg
out
pop
xor
push
int3
add
in
and
fstp
mov
push
fsub
adc
xchg
add
xchg
push
push
sbb
push
sar
or
hlt
ja
pushw
jle
or
jnp
out
(bad)
sti
add
pop
and
inc
mov
jmp
and
mov
inc
movs
cmp
sbb
scas
cmc
and
(bad)
scas
xor
xor
std
jo
stc
mov
sub
outs
sbb
stc
mov
sti
fs
pop
call
add
push
pop
cmc
aam
(bad)
fwait
xchg
cmp
mov
adc
lock
sub
sub
int
xor
ja
jb
fsub
test
cmp
push
and
push
inc
call
lock
int
cmp
pop
sbb
adc
stos
int
xor
daa
gs
cmp
or
daa
inc
sub
retf
xchg
sar
push
and
jno
sub
push
dec
xchg
xchg
cmp
and
push
(bad)
lock
ins
xchg
fadd
pushf
cmps
mov
aaa
pop
pop
in
cmps
cmps
mov
pop
inc
jo
sbb
sti
fbstp
sbb
or
sub
das
fimul
fimul
inc
push
xchg
inc
push
rcl
mov
jmp
loop
sbb
jge
xor
jnp
scas
daa
mov
cmp
test
mov
ss
inc
mov
shr
mov
mov
add
cmp
sbb
ja
ins
ret
mov
fcom
mov
imul
cmp
test
cs
fwait
repnz
push
loopne
push
mov
adc
and
mov
jecxz
and
dec
add
popf
or
ds
nop
loope
adc
xchg
out
(bad)
jp
test
jl
pop
(bad)
out
fdivr
(bad)
fild
sub
push
clc
rcr
jo
sub
aad
mov
adc
push
add
xor
and
(bad)
imul
enter
dec
(bad)
int3
adc
call
inc
and
sbb
call
xchg
or
pop
dec
out
inc
daa
cli
out
mov
in
out
int
and
cmp
or
aad
std
call
popf
add
gs
test
xor
cmp
and
mov
cmp
mov
inc
cmp
inc
cwde
or
pop
pusha
leave
fs
cs
mov
cmp
leave
mov
sbb
out
ins
or
les
add
scas
loopne
pop
test
fdivr
and
inc
jmp
sub
popf
inc
fadd
fnsave
xchg
ret
shl
mov
xor
ja
and
out
call
test
mov
lods
loopne
call
pop
(bad)
in
iret
movs
in
lahf
mov
pop
xlat
mov
inc
xchg
xchg
test
fnsave
outs
sahf
lds
push
jbe
lock
cmp
and
pop
cmp
inc
out
push
aad
adc
scas
mov
ins
mov
mov
cli
jg
adc
sar
dec
sub
jmp
nop
push
mov
test
push
or
xor
and
int
gs
(bad)
out
test
fwait
push
dec
std
(bad)
sbb
xchg
(bad)
mov
push
pop
mov
mov
inc
push
mov
out
sbb
in
das
sub
mov
xor
add
xor
adc
adc
(bad)
stos
mov
jnp
(bad)
mov
loop
pusha
imul
dec
dec
push
or
test
mov
sti
mov
pop
iret
shl
cmp
add
sbb
ja
stc
repnz
gs
jmp
enter
movs
jne
cmp
and
pop
lahf
inc
(bad)
cmp
stos
jnp
sub
mov
lahf
add
adc
sub
add
mov
add
cmp
mov
into
je
inc
lea
call
ret
lods
cmp
lea
icebp
aaa
mov
dec
clc
sahf
outs
ins
push
out
mov
jae
out
call
es
inc
repz
cld
xchg
aaa
mov
sahf
mov
cmp
xchg
pop
push
and
push
in
add
es
shl
mov
xor
cli
add
ret
adc
lds
lods
push
mov
add
push
sbb
cld
add
popa
jo
les
mov
sub
mov
cmp
sbb
movs
test
xchg
jg
pop
not
mov
sbb
sbb
xor
adc
arpl
adc
cwde
jnp
lea
dec
popa
leave
stos
pop
(bad)
cwde
jbe
sub
mov
inc
sbb
jae
cmp
icebp
jmp
push
push
outs
out
dec
dec
aaa
rcl
fcmovnb
cmp
aaa
hlt
gs
sbb
mov
xchg
sub
inc
stos
pop
pop
iret
dec
push
hlt
jl
cmp
adc
xor
cmp
sbb
test
outs
xor
jb
in
or
mov
in
mov
dec
out
into
push
lahf
lock
dec
scas
push
popa
dec
in
test
inc
push
aaa
dec
popf
pop
popf
in
push
cmp
fmul
pop
hlt
(bad)
add
sub
and
adc
push
jg
pop
lods
int
data16
stos
sbb
in
(bad)
xchg
cmp
push
sub
test
clc
imul
fsub
jle
mov
arpl
pusha
push
push
(bad)
into
test
(bad)
jmp
out
adc
inc
adc
adc
mov
push
idiv
xchg
cmp
mov
cmp
nop
enter
shr
fmul
loop
sub
cmp
out
and
daa
jnp
dec
adc
xor
mov
xor
mov
ror
dec
jns
loopne
movs
gs
fst
js
aas
popf
sbb
push
or
std
add
dec
pop
aam
test
sub
jecxz
cmp
mov
xchg
push
ja
push
outs
mov
aaa
pushf
mov
sub
loopne
sbb
xchg
sub
sub
js
int
adc
ins
not
dec
popf
mov
sar
das
ret
test
fcom
and
rcl
xchg
xchg
fstp
test
retf
pusha
lods
sahf
mov
jns
lods
dec
rcr
xor
adc
mov
inc
inc
outs
in
add
aam
bound
enter
push
jg
sbb
sbb
les
in
dec
or
test
mov
ja
or
jp
mov
add
adc
bound
enter
ja
inc
mov
adc
xor
cmp
ret
stc
or
pop
dec
xchg
sbb
sahf
outs
inc
mov
adc
push
(bad)
fisubr
xor
mov
call
inc
repnz
jg
xchg
or
cli
inc
cmp
mov
repnz
test
(bad)
ja
mov
jo
or
lds
sahf
push
push
out
or
test
push
(bad)
push
rcl
cmps
jg
sub
gs
sub
popa
fld
mov
add
xchg
jl
cld
push
mov
dec
into
fild
lock
jae
aam
cs
movs
data16
es
dec
out
mov
(bad)
ja
jmp
ins
lods
cmc
retf
(bad)
mov
lds
add
jae
add
(bad)
pop
(bad)
stc
cdq
xchg
mov
dec
inc
rcr
adc
or
enter
(bad)
loop
sbb
dec
mov
cmp
adc
and
inc
push
sbb
jo
popa
sub
sub
popa
push
pop
fs
mov
aas
mov
jo
sbb
mov
scas
add
add
call
xor
xor
mov
adc
mov
lea
add
mov
outs
ins
test
xor
push
or
and
enter
lods
mov
imul
push
xchg
mov
outs
popa
sub
sbb
dec
pushf
cdq
test
sti
fst
or
(bad)
in
xor
or
cmp
cmp
cmps
ret
hlt
fstp
jecxz
sub
sbb
jecxz
inc
and
mov
mov
aas
es
not
movs
pop
das
lods
imul
push
cdq
fsubr
mov
aaa
sub
test
aas
aam
or
jbe
mov
retf
pop
rcr
adc
mov
add
pop
pop
xor
mov
adc
xchg
fcomp
push
bound
jnp
adc
(bad)
dec
ds
sub
jg
fsubr
fs
sbb
or
nop
test
out
lea
call
xadd
push
popa
dec
pop
lods
sbb
jmp
jne
fcmove
cld
stos
ret
sub
out
fs
jge
push
add
sub
mov
inc
js
aas
outs
cmp
or
pop
push
dec
push
shr
add
pop
pop
je
daa
and
pop
div
popf
mov
cwde
in
mov
out
outs
inc
out
sbb
mov
pop
stos
test
sar
mov
jle
lock
mov
hlt
adc
test
dec
adc
aas
ja
mov
(bad)
addr16
cmp
pop
cwde
xor
imul
stos
xchg
jge
sub
pop
xchg
inc
jb
popa
sub
mov
cmp
and
fistp
xor
rol
sub
xchg
sbb
sub
ss
pop
leave
out
mov
iret
mov
xor
sbb
out
stc
pushf
mov
xchg
add
mov
lds
sub
fwait
push
aad
mov
jp
shl
pop
mov
and
fistp
push
(bad)
sbb
jp
fs
sbb
ret
mov
stc
or
aad
push
movs
out
add
jp
inc
mov
shl
rol
enter
inc
sbb
ror
jnp
stc
fcomip
dec
xlat
inc
adc
cmp
rcr
ins
and
leave
jae
xchg
dec
inc
ins
push
and
stc
mov
mov
dec
rcr
enter
int3
int
sub
push
fsub
xchg
push
sub
mov
call
pushf
lea
movs
mov
lea
mov
fwait
jle
push
rcr
hlt
(bad)
adc
or
aam
mov
clc
pop
in
cld
adc
push
call
outs
sbb
std
sub
mov
(bad)
xlat
imul
jle
(bad)
out
sbb
imul
(bad)
movs
add
mov
mov
aaa
jp
inc
push
adc
mov
cmps
cs
retf
xchg
inc
jns
add
enter
mov
fstp
xchg
outs
push
mov
hlt
dec
xchg
sbb
ins
(bad)
xchg
out
sti
pop
push
pop
and
or
dec
lods
and
jo
pop
loopne
sbb
mov
inc
pop
jg
xlat
push
adc
lock
pop
cli
or
jecxz
cmp
pop
in
push
or
out
cmp
pop
push
(bad)
push
cmp
xchg
pop
inc
in
mov
js
je
xchg
xchg
lods
ja
rcr
dec
test
lock
mov
(bad)
out
or
cmp
ins
int3
jne
mov
repz
outs
mov
jp
mov
push
shl
dec
jbe
xchg
add
jge
mov
dec
dec
xor
jmp
pop
push
mov
call
dec
mov
je
xchg
mov
jecxz
mov
fld
pop
xchg
and
mov
sbb
fistp
lahf
dec
ss
movs
mov
ret
jbe
retf
jmp
jge
scas
jne
out
stos
cmps
sbb
mov
outs
std
loop
jns
adc
outs
xor
out
mov
ins
add
mov
pop
mov
outs
and
inc
mov
or
not
xor
mov
shr
dec
mov
mov
xchg
xchg
hlt
movs
jne
jnp
cmp
lods
imul
and
jle
sbb
jnp
jge
adc
cli
fldenv
sub
mov
popf
mov
jl
call
pop
adc
aaa
js
dec
push
mov
leave
enter
(bad)
data16
dec
movs
dec
adc
js
les
stos
cmps
(bad)
mov
ds
inc
inc
mov
dec
fwait
shl
scas
mov
shl
clc
mov
xor
xor
clc
fidiv
cmp
sbb
adc
mov
scas
jmp
push
xchg
cli
dec
neg
(bad)
fsin
out
lock
cdq
xchg
push
imul
push
and
and
cdq
ins
sbb
aam
daa
mov
and
mov
push
repz
ror
inc
dec
cmc
sahf
cmc
popa
pop
movs
retf
std
xchg
enter
xor
(bad)
or
xor
push
lods
in
ror
sub
mov
inc
mov
shl
push
xchg
scas
cmovae
cmp
and
idiv
popf
dec
jg
mov
mov
inc
in
outs
adc
jne
ins
imul
jle
test
gs
sahf
xchg
sbb
mov
mov
(bad)
addps
sahf
popf
outs
cmps
sub
adc
pop
sub
outs
div
cs
lods
push
jmp
fcom
out
dec
jb
aas
xchg
les
xlat
sbb
or
push
inc
andnps
add
push
mov
into
shl
inc
push
jmp
icebp
inc
outs
add
lods
pop
loopne
ret
fldenv
jmp
(bad)
mov
(bad)
out
cdq
push
aaa
adc
or
dec
mov
mov
xchg
pop
icebp
push
in
cmp
jnp
jnp
pusha
or
xor
mov
stos
sub
pop
push
ret
mov
prefetcht1
jns
mov
pop
or
icebp
mov
sbb
lahf
push
pop
aad
pop
sub
addr16
xchg
test
movs
push
leave
dec
sub
(bad)
push
repnz
mov
push
iret
jns
add
(bad)
mov
or
add
repz
jnp
jl
dec
add
imul
xor
(bad)
jmp
mov
mov
xchg
inc
cld
rcr
push
mov
jbe
scas
jno
sahf
sahf
xchg
jge
mov
ins
stc
mov
mov
adc
aaa
mov
cmps
adc
mov
jns
push
bound
imul
std
push
pop
adc
bound
(bad)
cmps
cdq
xchg
sbb
jmp
mov
bound
das
(bad)
das
xchg
lods
dec
lods
inc
loop
daa
shl
iret
xchg
or
add
inc
(bad)
fdiv
arpl
mov
jl
int
xchg
and
popf
mov
fs
out
iret
ja
clc
xlat
push
push
clc
les
popa
or
ret
mov
fwait
jo
out
int3
fistp
inc
gs
jl
add
sub
push
les
cdq
and
xchg
retf
add
mov
adc
cmp
pop
dec
fwait
call
mov
mov
sub
repnz
mov
dec
jno
ret
lock
scas
lds
dec
xor
sbb
je
shl
jnp
jl
push
sbb
into
lock
and
push
enter
es
fild
leave
xor
ss
mov
mov
retf
fisub
fnsave
pop
cmp
cmc
add
sbb
xchg
mov
loope
adc
add
add
sti
pop
cmp
loopne
scas
(bad)
mov
fsub
js
fs
jmp
movs
pop
or
push
pop
fisttp
clc
xor
dec
inc
mov
pop
rol
lahf
adc
rcr
and
add
(bad)
jne
leave
mov
push
pop
(bad)
ror
jbe
jne
push
xor
inc
and
test
lds
mov
dec
cmp
ror
cmc
push
jmp
shl
inc
cmp
sbb
dec
lock
cmp
or
repnz
mov
push
pop
push
jl
mov
fs
addr16
in
jns
arpl
sbb
out
sub
xchg
movs
sbb
ins
popa
lods
ret
cmp
jmp
retf
inc
(bad)
xchg
xchg
(bad)
jmp
jmp
inc
int
bound
adc
in
retf
hlt
icebp
into
outs
mov
sub
in
shl
cmp
adc
mov
pop
enter
lahf
out
sub
inc
setne
xor
inc
sbb
push
mov
xor
outs
dec
nop
or
shl
repnz
adc
test
mov
addr16
(bad)
dec
xor
jo
push
jle
clc
mov
jno
and
jl
sbb
jnp
leave
cmp
cmp
sbb
push
(bad)
arpl
jg
or
fs
mov
dec
or
popa
in
loopne
add
rcl
mov
fld
ret
ret
and
arpl
and
mov
lea
test
(bad)
out
in
(bad)
xchg
mov
mov
mov
je
dec
out
cdq
scas
pop
rcr
push
mov
jle
push
push
mul
mov
push
sbb
shl
(bad)
push
sbb
xchg
mov
pushf
nop
mov
dec
pop
ror
je
pop
and
jmp
or
and
or
inc
icebp
addr16
and
std
add
addr16
pop
fld
push
sti
dec
ss
fs
mov
jge
push
scas
daa
pop
pop
cmps
mov
jbe
xchg
push
call
arpl
mul
scas
lock
fld
or
stos
mov
(bad)
xchg
mov
add
jle
ss
and
out
je
fdivr
push
int
mov
idiv
and
out
cs
jb
dec
popf
xchg
pushf
xchg
dec
(bad)
jae
add
mov
jb
mov
add
jmp
je
sub
loop
std
xchg
rcr
ja
and
(bad)
mov
repnz
into
inc
fcomip
call
jne
out
test
lods
gs
dec
in
fist
ins
mov
pusha
pop
sbb
xchg
xchg
dec
out
not
jne
std
jnp
mov
scas
push
div
add
(bad)
push
scas
jae
ficom
aam
push
add
push
dec
add
icebp
xor
daa
xchg
ret
pop
sbb
pushf
sar
sub
push
xchg
sbb
mov
aas
test
loopne
xchg
mov
jmp
xor
popf
ja
pop
in
ret
jle
test
cwde
add
clc
add
mov
mov
rol
inc
cwde
repnz
xchg
dec
sbb
mov
pop
mov
push
ret
icebp
or
inc
sbb
cs
xor
sbb
xchg
mov
loopne
in
jecxz
pop
movntps
mov
(bad)
rcr
xchg
mov
sbb
cdq
arpl
sbb
mov
add
ror
imul
hlt
shr
dec
pop
sbb
lods
adc
sti
retf
push
mov
dec
shr
call
hlt
xchg
pop
jne
adc
inc
xchg
or
loop
push
data16
pusha
mov
adc
jb
adc
jo
xor
push
fwait
movs
push
and
out
lods
into
movs
ss
pop
retf
test
mov
int3
lods
mov
cmp
push
add
call
push
dec
or
in
inc
addr16
mov
push
adc
mov
inc
(bad)
jne
bound
ins
pusha
mov
pop
add
mov
mov
das
stos
or
jge
push
cmps
fwait
dec
or
push
cwde
imul
push
dec
je
daa
(bad)
mov
jne
mov
paddusb
addr16
inc
loope
inc
or
aam
in
mov
aad
and
inc
ror
add
cmp
push
out
mov
aad
fsub
pusha
add
push
in
jno
mov
pop
or
mov
cmp
sbb
sahf
fbld
adc
fld
xchg
(bad)
addr16
jg
sub
das
xchg
xchg
cmps
and
pop
xor
push
pop
add
(bad)
aas
fs
(bad)
fcmove
xor
in
outs
out
and
push
(bad)
stc
jmp
pop
or
push
jmp
movs
cmp
jmp
mov
test
test
arpl
xchg
xor
fwait
xchg
fidivr
pop
je
push
int
xchg
lods
into
aad
scas
addr16
shl
mov
xchg
dec
adc
fistp
bound
rdtsc
mov
dec
bound
xchg
sbb
sar
mov
or
xor
jne
push
cmp
jno
pop
and
bound
inc
or
fistp
nop
lods
cmp
dec
jne
mov
shl
pushf
retf
ret
dec
pop
iret
sbb
push
gs
xor
popf
xchg
out
mov
in
xor
repz
sti
repz
cmp
shl
std
pop
add
dec
xchg
mov
stc
fldenv
call
push
jbe
mov
xor
jno
mov
sbb
mov
push
or
sub
in
push
adc
out
mov
mov
and
retf
push
fs
push
sub
clc
lds
sub
mov
xor
repnz
imul
cmp
cmc
out
icebp
rcl
popf
mov
test
mov
jo
bound
scas
sbb
(bad)
add
scas
xchg
hlt
sti
jb
fnstsw
movs
inc
pop
xchg
arpl
dec
lock
xchg
xchg
mov
cwde
xchg
sub
inc
mul
or
cmp
xchg
sbb
dec
ins
das
xchg
pop
pop
das
pop
cs
cmp
mov
in
cmp
sti
adc
jae
stos
xor
fsubr
es
in
fbstp
add
dec
ds
fwait
outs
or
pop
dec
xchg
xor
pusha
jne
mov
pop
mov
(bad)
jge
shl
or
ja
stc
dec
push
and
int
ins
enter
rol
stos
sub
sub
pop
dec
fs
mov
jle
inc
leave
dec
jge
dec
gs
imul
cmps
icebp
adc
jecxz
ds
mov
xchg
dec
mov
fdivr
mov
pop
imul
cmps
fxch
add
pop
addr16
mov
bound
mov
cmp
(bad)
fisub
add
sbb
mov
ret
mov
pop
std
or
sub
sbb
(bad)
jmp
pop
mov
out
out
mov
xchg
enter
imul
rcr
mov
out
jecxz
xchg
std
pop
adc
outs
ds
push
mov
(bad)
div
xchg
repz
dec
xchg
inc
xchg
and
dec
test
or
scas
add
loope
or
inc
mov
mov
aaa
cwde
sbb
stc
arpl
arpl
mov
test
daa
xchg
test
pop
push
scas
cdq
mov
mov
dec
inc
pushw
lock
or
mov
push
push
rol
ja
(bad)
pop
es
pop
push
pop
fdivr
fidivr
cmp
lods
loope
int3
ds
inc
mov
lds
mov
push
mov
or
sbb
test
mov
out
fucomip
dec
(bad)
dec
(bad)
idiv
xor
ret
jmp
jns
(bad)
xor
jmp
dec
mov
mov
cmp
test
repnz
jmp
pop
xchg
mov
test
push
cld
call
cld
icebp
pushf
clc
imul
push
in
icebp
dec
xchg
pop
add
jns
cmp
sbb
and
push
in
cmp
sbb
dec
into
mov
push
mov
dec
sbb
(bad)
xor
push
mov
les
pop
mov
dec
or
cs
in
add
mov
(bad)
in
add
mov
test
enter
or
sbb
inc
add
shl
int3
xor
sbb
dec
out
ds
fs
dec
cli
popa
mov
sub
sub
jne
pop
fcmovnb
push
mov
sbb
mov
mov
push
ja
dec
int
pushf
out
out
lods
push
sbb
aaa
mov
or
mov
mov
or
xchg
jno
jmp
push
lds
jl
add
dec
xor
xchg
pop
inc
rcl
pop
add
and
jle
lods
xor
jbe
mov
cld
xchg
stos
(bad)
stc
adc
and
and
std
xor
push
jl
and
mov
lds
dec
fist
jecxz
mov
movs
sbb
and
mov
rcr
mov
(bad)
mov
jg
adc
cmp
cmp
loop
mov
repz
iret
cmps
neg
inc
das
in
mov
mov
mov
jo
push
xor
scas
xchg
stos
outs
(bad)
lock
clc
jl
iret
sub
sar
pushf
xchg
mov
lock
loop
adc
mov
fucom
popa
adc
rcr
pop
and
popa
xchg
movs
adc
adc
inc
add
nop
inc
data16
or
jb
xchg
pop
jl
mov
adc
and
out
add
sti
mov
jmp
mov
aam
pushf
clc
jge
aad
aaa
test
test
mov
ret
sbb
adc
bnd
push
icebp
or
pushf
or
cld
adc
xchg
push
outs
fisttp
mov
lds
movups
inc
or
popf
inc
cmp
scas
mov
mov
fdiv
dec
sub
aaa
je
ds
test
and
pop
popa
push
mov
dec
leave
imul
push
cmc
pop
xchg
xchg
cmp
push
stos
add
outs
loop
imul
fs
jo
mov
cdq
mov
cli
mov
adc
sbb
mov
jns
jecxz
call
test
or
jmp
push
inc
jno
aad
pop
pop
movs
add
pop
cmp
retf
daa
sub
cmc
cmp
(bad)
and
and
mov
addr16
rep
not
or
dec
add
sar
ds
sbb
fist
mov
pop
pop
(bad)
je
rcl
cmp
or
add
mov
or
cmp
mov
gs
inc
ds
sub
pop
sbb
sub
mov
lock
jl
enter
std
out
pop
mov
xchg
ins
mov
clc
add
or
sbb
jae
cli
hlt
xchg
add
call
sbb
dec
push
lods
add
xchg
adc
daa
push
xrelease
adc
popf
fstp
fist
mov
js
dec
mov
ret
ins
sub
ins
mov
mov
fiadd
ss
cmc
std
mov
in
sahf
jbe
ds
pop
shl
in
sub
xchg
cmp
inc
sub
push
test
pop
push
(bad)
or
sti
enter
pop
into
ret
jnp
daa
fstp
jp
jecxz
jecxz
pop
or
call
lds
fstp
loope
dec
shr
nop
imul
xchg
js
push
jbe
mov
stc
shr
jno
add
adc
mov
push
inc
or
jp
push
aam
fs
xor
nop
cs
div
pop
jmp
mov
je
pop
enter
xor
repz
push
jecxz
in
int
sar
add
and
push
or
jge
inc
std
aaa
push
das
mov
inc
fist
imul
popf
add
push
mov
jmp
test
ins
add
push
pop
xchg
(bad)
or
bound
xchg
scas
dec
mov
das
mov
pop
dec
mov
dec
sub
pop
(bad)
iret
(bad)
cmc
jo
sub
aaa
test
add
jnp
int3
dec
mov
dec
xchg
enter
fwait
inc
cmp
and
nop
scas
retf
push
mov
mov
sub
pop
push
mov
fmulp
cli
jmp
in
jnp
(bad)
inc
or
fcomip
mov
cmps
xor
imul
inc
ss
push
dec
aaa
sbb
jns
sbb
mov
jns
iret
adc
jmp
xchg
icebp
nop
mov
popa
aaa
imul
fs
ret
or
cmp
or
sub
aad
fnstenv
inc
push
sbb
icebp
mov
mov
sbb
xchg
mov
int3
push
cmp
add
dec
(bad)
cwde
or
adc
xchg
loopne
jae
mov
push
jge
imul
mov
and
pop
jle
in
jge
mov
pop
sub
hlt
test
or
fdiv
xchg
inc
pop
and
fs
add
int3
cmps
and
or
mov
xchg
call
(bad)
adc
lea
test
test
pop
jne
iret
jge
fldenv
fidivr
test
pop
xchg
push
sti
movs
in
dec
mov
or
icebp
dec
push
lahf
in
(bad)
loope
in
sbb
push
add
push
int3
push
test
mov
out
mov
ds
sbb
mul
jmp
es
imul
stos
push
ficom
adc
movs
jae
sub
push
jmp
or
aas
dec
fwait
shr
arpl
es
and
push
lods
xor
and
stos
retf
in
daa
neg
jmp
and
retf
sti
mov
arpl
mov
(bad)
xor
out
sahf
cdq
jecxz
mov
mov
mov
hlt
cmp
lahf
outs
dec
popf
sar
fldenv
popf
xor
nop
int
sbb
sbb
mov
out
cmps
mov
sbb
adc
push
(bad)
in
adc
xchg
xchg
push
pusha
or
mov
or
and
arpl
push
mov
add
shl
shl
or
or
aad
inc
dec
jl
retf
in
mov
xchg
out
pop
dec
inc
aaa
cdq
sub
fild
lahf
sub
xchg
push
mov
mov
inc
fnstcw
ja
xchg
ins
xor
movs
(bad)
xchg
inc
movs
rcr
xor
stc
mov
cmps
clc
fidivr
es
push
mov
loopne
iret
scas
repnz
dec
xchg
adc
jg
ins
adc
pop
sub
cmp
jae
and
popa
mov
xlat
sbb
lods
cmp
out
sub
les
sahf
xchg
cmc
loope
mov
add
and
xor
je
push
jl
xchg
jge
movs
sbb
jle
sbb
ins
mov
mov
test
out
jo
mov
mov
sar
and
daa
mov
push
dec
mov
mov
xlat
dec
push
popa
outs
retf
and
fdiv
outs
xor
jne
bound
ins
fsub
and
pushf
leave
dec
stos
inc
push
out
cdq
mov
clc
(bad)
inc
rcr
mov
jmp
sti
adc
pop
push
inc
and
(bad)
and
pop
ja
and
xor
repnz
aas
inc
mov
sbb
add
cmp
shr
shl
xchg
clc
sbb
push
adc
xchg
xor
pop
in
pop
push
xor
pop
and
jbe
sti
(bad)
dec
adc
in
mov
push
outs
jmp
push
xchg
aam
mov
xchg
sti
fidivr
or
cwde
sub
(bad)
xchg
xchg
shl
mov
fsub
fist
cmps
mov
retf
aad
push
loopne
push
retf
enter
lods
sub
adc
je
aas
cld
fiadd
push
icebp
in
pushf
lahf
dec
inc
inc
loop
out
ins
inc
mov
dec
push
xor
icebp
test
add
pop
push
add
dec
push
pop
and
inc
mov
pop
idiv
xchg
hlt
movs
in
push
enter
sbb
cdq
ins
sub
in
mov
aad
inc
inc
sub
mov
sbb
test
movs
jo
leave
stos
mov
out
pop
cli
dec
push
ja
cld
mov
xor
dec
mov
aam
enter
in
push
aaa
push
push
mov
mov
push
jbe
call
pop
out
dec
fldpi
cmp
cmps
push
and
icebp
push
icebp
daa
nop
xchg
or
stc
in
clc
inc
lods
pushf
hlt
fcmovne
call
daa
mov
mov
mov
xchg
mov
mov
in
leave
jne
add
push
push
(bad)
daa
pop
sub
jne
dec
mov
jecxz
fistp
fisttp
test
fimul
and
pushf
(bad)
cwde
xchg
push
add
lahf
iret
test
fsubr
jmp
push
push
jb
mov
push
or
cli
inc
pop
lods
fisub
shl
cs
add
ficom
sub
jmp
idiv
(bad)
call
bound
xchg
inc
aam
into
ds
xchg
jmp
and
pop
pop
les
stos
pop
cmp
je
adc
lock
test
sti
inc
cmps
mov
ds
sbb
daa
test
pop
aaa
int3
push
inc
gs
or
in
mov
mov
push
xchg
mov
outs
aaa
jl
xor
dec
xchg
arpl
jae
cmp
fisub
xchg
xchg
(bad)
imul
mov
stc
lea
scas
sbb
les
(bad)
jo
in
test
mov
js
pop
and
xor
xchg
sub
jo
xlat
push
js
jecxz
dec
shl
xchg
fs
cmp
lea
mov
mov
daa
xchg
xchg
dec
add
sub
in
lds
adc
ret
leave
jbe
jmp
mov
(bad)
xchg
xchg
xor
push
loop
adc
popf
push
mov
sub
movs
cmp
push
xor
inc
(bad)
mov
pop
mov
test
fcomip
add
add
or
sahf
je
pop
push
add
call
lods
cmp
in
mov
popa
push
fadd
sbb
shr
out
lock
mov
imul
call
rcl
cld
add
adc
scas
lahf
lea
loopne
(bad)
loope
inc
adc
sbb
jecxz
lock
cmp
inc
sbb
dec
jnp
int
inc
mov
js
fnstsw
dec
jno
jnp
push
rcr
jg
xchg
fwait
popf
(bad)
hlt
test
pop
gs
cli
or
push
pop
push
add
retf
das
xchg
repz
aas
shl
mov
lds
adc
jne
xchg
jbe
in
in
int
adc
inc
(bad)
sub
xchg
imul
fdiv
pop
gs
mov
mov
jge
in
pop
push
push
jne
cmps
mov
test
int
cdq
xchg
cli
dec
inc
shl
idiv
les
in
out
ror
cdq
jmp
ja
mov
xchg
shl
cwde
aaa
adc
into
stc
jns
push
xor
dec
test
pop
inc
fild
fadd
rol
xchg
arpl
adc
stc
pop
jecxz
mov
or
into
in
popa
lods
retf
pop
xchg
adc
push
cmp
mov
(bad)
retf
xor
sti
in
jl
sbb
shl
jne
and
dec
(bad)
sub
sbb
mov
(bad)
xchg
pushf
test
call
dec
popa
pushf
daa
ror
cli
lods
jp
sub
sbb
jecxz
retf
jne
shl
xchg
pop
push
jmp
ins
aas
push
xchg
xchg
xchg
or
push
xlat
pop
cdq
inc
icebp
push
sub
(bad)
jg
ins
mov
xor
and
loop
repz
add
clc
scas
ins
bound
cwde
ret
mov
repz
add
pop
inc
jbe
ret
jl
ss
imul
mov
mov
in
inc
addr16
mov
push
add
clc
cmp
dec
xchg
(bad)
fidivr
out
(bad)
mov
pop
(bad)
(bad)
aam
repz
xchg
and
out
fld
ds
cmp
cmps
xchg
jmp
in
(bad)
adc
push
or
aad
mov
mov
mov
cmp
lds
cmp
and
mov
adc
xchg
jp
sub
out
das
jns
xor
mov
ror
stos
iret
in
adc
xor
jmp
and
test
pop
ins
and
loope
xchg
inc
es
push
fxch
push
test
pop
dec
mov
xchg
pop
hlt
inc
mov
out
and
add
gs
inc
aad
sbb
jnp
sub
push
jno
dec
dec
mov
int
and
clc
cld
aam
mov
sub
or
rol
(bad)
sub
jp
aam
test
in
and
add
imul
je
jnp
and
cmp
aam
in
cmc
cmp
pop
imul
retf
test
and
(bad)
bound
clc
adc
sbb
pop
cmp
mov
shl
xor
xchg
into
bts
adc
test
dec
popa
cmps
out
movs
scas
cld
cmp
mov
mov
inc
push
xor
add
shl
jb
sbb
js
sub
in
cmp
es
popa
imul
xlat
int
mov
shl
les
mov
fnstcw
out
xor
or
inc
sysexit
repz
retf
jmp
aaa
jo
repnz
mov
add
mov
mov
dec
cs
popf
in
fmul
and
inc
xchg
cmp
cmps
xchg
fs
out
xor
jne
daa
test
les
mov
movs
sbb
dec
fs
mov
and
jae
pop
out
outs
inc
inc
lea
mov
mov
or
daa
retf
mov
fild
aam
pop
test
movd
out
mov
std
dec
inc
test
push
imul
pop
ins
retf
ins
ins
bound
xlat
(bad)
retf
movs
movs
fdiv
dec
mov
out
enter
int3
push
test
std
out
shr
add
cld
lods
xchg
inc
scas
xchg
jecxz
dec
fnstcw
dec
pop
mov
cmc
shl
and
sub
xchg
daa
in
icebp
stc
add
fld
adc
dec
mov
xor
outs
shl
jp
inc
jmp
jae
adc
cmp
dec
out
pusha
(bad)
mov
in
add
pop
mov
out
lods
aas
sbb
bound
mov
mov
mov
cmc
cdq
movs
mov
pop
out
arpl
(bad)
(bad)
cmps
sahf
imul
sahf
aad
fld
push
mov
mov
pop
cmp
iret
loope
xchg
adc
repz
ror
xchg
(bad)
mov
inc
pop
in
out
sub
or
add
pop
inc
pop
add
sbb
push
and
(bad)
inc
outs
imul
and
push
movs
das
xor
and
int3
mov
fistp
test
movaps
repnz
inc
mov
pop
fadd
mov
(bad)
dec
out
add
pop
std
xchg
sub
push
or
imul
test
xor
fistp
gs
mov
mov
dec
call
inc
jbe
fcomp
inc
loop
sub
adc
mov
pop
dec
fcom
stos
or
adc
mov
mov
fsubr
aaa
in
fmul
lea
aam
push
jg
jae
cdq
mov
push
push
xchg
sub
push
mov
loop
xlat
jle
lods
imul
sti
in
sub
(bad)
bound
test
or
sahf
imul
or
fdiv
ja
jmp
(bad)
push
repz
dec
dec
xchg
sti
(bad)
imul
das
daa
xchg
loopne
inc
cld
cmp
repnz
adc
push
imul
shl
into
inc
push
retf
xchg
rol
(bad)
in
cmp
sbb
pushf
xchg
push
dec
sbb
adc
sbb
in
call
mov
fcompp
cmps
sub
lods
mov
push
iret
adc
inc
sub
imul
adc
movs
mov
mov
out
mov
ins
push
jnp
pop
retf
xor
iret
leave
outs
add
or
fldcw
mov
out
rcr
xchg
sub
lock
jmp
xchg
shr
mov
jmp
pop
jecxz
enter
mov
sbb
xor
mov
inc
(bad)
stc
sub
dec
cmc
aam
bound
sbb
xchg
repnz
test
cmp
div
fs
cmc
stos
inc
in
int3
cmp
push
mov
outs
(bad)
cs
loope
cmp
jge
in
call
pop
xchg
push
xchg
adc
shl
push
sbb
xor
pop
and
into
jno
mov
push
outs
out
jae
ds
cdq
dec
or
mov
loopne
push
push
inc
iret
sub
mov
mov
push
xchg
jecxz
xlat
shr
xchg
loop
jo
adc
(bad)
(bad)
mov
mov
dec
or
jbe
(bad)
and
mov
cli
icebp
pop
xor
xor
loopne
pushf
xor
cs
sbb
enter
pop
int
jg
imul
cmps
cli
push
push
and
sub
leave
aas
inc
cdq
and
gs
mov
mov
push
retf
pop
(bad)
outs
lods
mul
fs
mov
aaa
movs
ins
add
jp
mov
sub
inc
jae
and
mov
mov
jae
lea
fsub
pusha
stc
xlat
mov
test
jo
fnstcw
push
je
lea
mov
lods
les
outs
push
cmps
call
daa
adc
inc
ds
jmp
pop
out
nop
je
pop
or
aaa
jecxz
(bad)
fidiv
pushf
mov
(bad)
cmp
popf
out
stos
aaa
repz
and
mov
pop
lea
cmps
pop
pop
cmps
popa
mov
cmp
and
push
std
jmp
lea
cmps
inc
adc
push
sbb
int
and
mov
fidiv
cmps
loop
sub
lods
(bad)
add
xchg
jno
(bad)
scas
mov
scas
loop
xlat
loopne
ficom
lods
test
dec
ret
aad
lahf
rcl
loop
mov
pop
jnp
dec
scas
push
data16
repz
adc
icebp
push
mov
sar
(bad)
mov
inc
mov
push
xor
pop
stos
cmp
sbb
push
dec
out
cmp
iret
scas
in
add
fdivp
add
fsubr
sub
ror
nop
jne
dec
stos
pop
push
mov
sbb
push
(bad)
imul
test
xchg
repz
mov
sub
(bad)
pop
test
outs
add
pop
pushf
xchg
jb
sub
iret
adc
and
out
or
dec
mov
cmp
mov
and
adc
jge
mov
jb
popa
xor
arpl
mov
cmps
dec
push
inc
sub
dec
sahf
jae
std
fisttp
jl
cmp
adc
mov
popf
inc
(bad)
loope
cmp
movs
loopne
pop
mov
xor
int3
cwde
push
jnp
aad
jge
sahf
mov
daa
out
ds
xor
test
cmp
inc
xchg
or
or
test
xor
jmp
in
aam
inc
push
add
test
or
outs
push
sub
pop
(bad)
call
ret
and
cli
mov
xchg
mov
rol
(bad)
shl
add
js
jmp
retf
(bad)
inc
xchg
or
aam
xor
loope
sbb
shl
pop
rol
mov
inc
outs
lock
dec
sbb
cmps
shl
pop
fisub
hlt
scas
jl
jnp
in
shr
cs
retf
mov
sub
call
test
sub
stos
dec
pop
(bad)
push
je
and
xchg
dec
dec
dec
pop
push
fsub
mov
pop
or
xor
xrelease
jecxz
cmp
repz
jo
dec
aas
jne
mov
inc
or
nop
int
jae
cmp
sbb
jo
cwde
rcr
xlat
repnz
mov
jge
mov
mov
xor
retf
add
and
in
push
rcl
(bad)
retf
imul
lahf
mov
test
cmp
ret
je
div
sub
adc
aaa
adc
pop
pusha
aas
adc
mov
(bad)
(bad)
idiv
pop
in
and
out
sub
out
cmp
push
sub
aas
std
and
adc
popf
xor
jbe
push
push
jns
lods
jle
push
scas
dec
cwde
je
mov
stc
pop
dec
stos
stc
jno
lahf
aas
loop
dec
adc
shl
sub
cmps
cmp
stc
and
ja
(bad)
test
pop
jno
dec
arpl
inc
je
cmp
popf
in
cmc
mov
ficom
mov
push
add
ret
jp
cli
call
cbw
inc
outs
pushf
pop
adc
or
ret
je
cwde
sub
push
outs
outs
jp
jno
iret
retf
loope
xchg
(bad)
jbe
fnstsw
push
stc
mov
adc
jmp
dec
jne
dec
sbb
mov
dec
push
fimul
lds
jmp
(bad)
imul
scas
(bad)
sbb
shl
sar
fwait
out
dec
gs
ss
xor
leave
jecxz
add
sub
push
stc
or
dec
out
sub
cmp
aas
mov
adc
aas
sub
pushf
int
scas
fild
sub
jmp
cmp
scas
leave
mov
cs
sbb
(bad)
sub
mov
mov
aam
sub
pop
mov
rcl
and
mov
jne
ins
push
es
mov
je
adc
jl
fimul
pop
cmp
stos
paddd
dec
retf
arpl
adc
dec
mov
call
scas
repnz
inc
push
xlat
fidivr
jge
push
add
cmps
(bad)
cmp
repnz
sti
ds
call
out
jbe
aam
fmul
in
xchg
sahf
xchg
scas
xchg
dec
xchg
mul
test
jmp
int3
lods
add
sbb
into
out
push
imul
inc
push
sbb
movs
pop
push
popf
cmp
sub
cmp
adc
lods
mov
lods
dec
ror
cmps
xor
pop
test
sub
add
xchg
jl
clc
mov
aaa
enter
push
push
xlat
xchg
inc
cli
popf
loope
test
xchg
ins
sub
mov
mov
mov
jmp
push
sub
popf
push
cld
(bad)
jecxz
jl
call
or
push
dec
pop
cmp
mov
and
mov
dec
int3
jmp
les
or
leave
scas
imul
out
(bad)
in
and
add
xchg
(bad)
loopne
sub
imul
pop
les
cmp
cmp
out
ds
mov
sbb
fsubr
xchg
test
sub
inc
stc
aaa
push
stos
in
mov
shl
xor
xchg
adc
rcl
fst
ins
test
or
jnp
mov
or
sbb
cs
rcl
jno
rcr
push
(bad)
or
arpl
cmp
sbb
mov
int
adc
cmc
sbb
or
scas
inc
dec
cmps
jp
mov
cmp
fisttp
jl
retf
mov
sub
lods
out
mov
sub
push
add
xchg
sbb
mov
sahf
jl
sbb
ja
or
and
dec
in
mov
in
sbb
push
pop
(bad)
out
mov
gs
mov
push
les
je
cmps
dec
jae
jbe
fimul
xchg
(bad)
jbe
fsub
ds
add
and
pop
nop
pop
cmp
mov
xchg
out
mov
imul
xor
sbb
pop
dec
pop
in
xlat
cmp
or
jle
sub
or
xlat
std
jnp
sahf
gs
jmp
hlt
test
dec
dec
(bad)
je
fisub
add
scas
sub
mov
dec
adc
stos
out
push
into
cmp
sbb
lahf
adc
cmp
test
scas
mov
push
cs
xor
ja
fdivr
mov
jne
adc
ror
lds
inc
imul
(bad)
jnp
into
and
inc
(bad)
sub
(bad)
idiv
jb
or
cmps
mov
sub
lahf
mov
mov
cmp
jle
enter
lods
pop
gs
jb
mov
push
stos
test
mov
(bad)
jne
cmp
jge
lods
sub
(bad)
jo
xchg
adc
pop
xchg
out
jnp
loopne
sbb
arpl
cmp
pop
add
data16
mov
fistp
pop
or
(bad)
add
xchg
cmp
cmp
mov
pop
dec
pop
adc
(bad)
push
fist
push
test
fstp
mov
cmp
lods
repz
mov
loope
fidiv
pop
pop
mov
inc
jle
lock
addr16
sti
jmp
enter
fdivr
adc
sub
xor
inc
sbb
call
scas
inc
cmp
pop
sub
retf
nop
mov
aad
pop
xchg
sbb
mov
or
outs
cs
inc
das
dec
dec
clc
jne
stos
ja
xchg
out
cmp
and
out
ja
push
popf
enter
adc
sbb
push
out
scas
test
jo
cmc
fwait
mov
and
or
cmp
mov
xchg
mov
je
iret
outs
mov
push
or
stos
add
(bad)
or
fist
push
shl
adc
pop
enter
test
and
mov
push
retf
adc
mov
ins
cwde
xor
inc
ja
retf
icebp
mov
(bad)
call
cdq
pop
cmp
sbb
jnp
fs
cmp
sub
scas
stos
popf
lahf
outs
in
popf
iret
mov
mov
mov
ins
scas
jecxz
fisubr
inc
fs
mov
xor
icebp
dec
mov
fisttp
dec
xlat
jecxz
add
or
icebp
dec
shl
or
adc
add
jmp
sub
mov
cmp
sar
sub
cmp
sbb
pop
loope
sub
lods
inc
mov
mov
(bad)
and
into
jb
push
sbb
and
outs
ins
add
jecxz
pusha
xor
xor
lods
mov
push
dec
fbstp
std
jge
int
mov
cmps
daa
test
jl
pop
mov
jle
pop
cmp
sar
loopne
gs
xlat
rcl
cli
or
mov
xor
clc
push
std
adc
retf
xchg
push
in
movs
dec
adc
add
mov
mov
pusha
scas
out
movs
xchg
adc
add
sbb
adc
xchg
inc
mov
inc
cwde
xor
retf
stos
xor
rcl
pushf
clc
in
(bad)
xchg
mov
xchg
mov
sub
ror
stos
inc
sub
and
hlt
lea
(bad)
pop
shl
sub
ss
test
sub
add
movs
fidiv
jp
mov
mov
lods
mov
jo
and
shr
test
pop
sub
leave
cmc
inc
movs
xor
loopne
inc
jge
loope
fcomi
(bad)
es
push
push
lea
mov
outs
push
inc
jmp
cmp
stos
inc
xchg
(bad)
sbb
push
push
shr
je
mov
jg
std
inc
in
addr16
ror
cs
aaa
sbb
arpl
outs
inc
cmps
adc
inc
ins
or
adc
fdiv
cmps
sub
push
cdq
cmps
ror
xlat
imul
sub
push
nop
fcomp
push
hlt
push
retf
or
or
or
dec
mov
mov
mov
out
inc
mov
jnp
and
dec
adc
adc
loop
loop
adc
jmp
aaa
stc
mov
cwde
dec
repnz
cmp
sti
addr16
leave
jmp
in
adc
pop
push
push
dec
xchg
and
inc
in
int3
stos
jae
dec
mov
fcom
add
rol
fisttp
call
sbb
pop
jo
add
popa
addr16
mov
out
jb
popa
dec
push
mov
push
ins
mov
add
push
test
adc
xor
jae
in
ds
jno
aas
mov
mov
push
and
sub
ret
jge
call
lods
and
pop
xchg
xchg
int
sub
ja
xor
xlat
push
jmp
xor
dec
push
das
aaa
scas
lock
push
fwait
jp
mov
(bad)
stc
cs
nop
int
gs
dec
mov
lock
cli
movs
xor
mov
mov
xor
add
ret
sar
imul
sbb
ja
jo
movs
nop
leave
cmp
sbb
test
inc
push
add
sbb
mov
mov
sub
arpl
mov
in
xchg
and
jmp
pushf
xor
imul
mov
ins
div
fistp
or
adc
mov
push
test
shr
jnp
and
leave
mov
leave
sbb
xor
adc
leave
ret
cmp
and
pusha
repnz
pop
inc
mov
mov
mov
adc
retf
std
sub
jmp
add
(bad)
int
out
and
mov
fnstcw
jmp
data16
pop
iret
pop
arpl
int
jp
shl
pop
outs
out
and
pop
outs
adc
shr
mov
fstp
sahf
fldcw
(bad)
cld
shl
arpl
mov
cmp
fstp
imul
test
notrack
inc
xlat
loopne
loopne
sub
icebp
jmp
xchg
das
fs
mov
rcr
popf
aas
shl
cmc
ret
push
imul
rcr
in
imul
jnp
push
xchg
mov
enter
or
dec
dec
inc
mov
sub
sbb
sub
xchg
sbb
nop
or
sbb
add
out
ins
sbb
push
cmp
pop
(bad)
cmps
(bad)
into
xchg
iret
cmp
cld
sbb
rol
jno
lock
sub
xor
test
adc
adc
(bad)
(bad)
in
fld
sub
dec
mov
add
inc
int3
sbb
mov
ret
cwde
xor
mov
mov
nop
out
sub
add
dec
data16
jbe
lods
mov
xor
vpor
dec
(bad)
fidiv
rol
xchg
jbe
cld
cmp
jno
(bad)
out
pop
add
sub
fmul
out
dec
add
push
mov
aam
jecxz
cmps
push
or
mov
pop
inc
into
in
loope
(bad)
enter
or
push
mov
push
jno
bound
xchg
je
xor
retf
dec
dec
loopne
xor
sub
mov
xor
aam
mov
jmp
stc
out
imul
pop
sbb
fcomp
sub
jg
mov
aam
push
int
add
ja
dec
iret
pop
sti
xor
shl
movs
mov
cmps
pop
fist
or
rcl
xchg
jg
movs
adc
adc
sbb
sahf
fwait
jg
mov
adc
test
xchg
adc
jae
jg
repz
and
aas
je
push
push
sbb
jecxz
mov
xor
dec
xor
idiv
outs
jmp
mov
(bad)
sbb
cmp
int3
loope
cmc
loop
dec
jae
xchg
ret
push
and
add
in
cli
(bad)
fs
lods
idiv
scas
iret
scas
mov
sbb
sahf
in
(bad)
adc
adc
xchg
loopne
inc
mov
push
add
inc
pop
test
lock
popf
out
lahf
push
js
test
ins
mov
sub
jg
call
adc
inc
push
xchg
nop
push
jg
mov
xor
add
push
rol
mov
xchg
mov
xor
jl
and
ins
icebp
pop
scas
stos
adc
and
adc
or
outs
push
fsubr
xor
jecxz
jmp
icebp
inc
cdq
retf
xchg
sub
pop
movs
pop
xchg
adc
inc
xor
aas
inc
out
les
inc
arpl
push
mov
(bad)
xchg
lock
call
sbb
lahf
add
imul
inc
aas
push
mov
test
add
cmc
push
jns
mov
pop
push
adc
in
inc
dec
cld
test
popa
pop
in
in
sub
pop
ret
and
fidiv
and
sub
mov
or
int
dec
mov
adc
jmp
inc
adc
dec
or
inc
imul
dec
gs
sub
jl
push
enter
jno
sub
cmps
xchg
xchg
adc
aad
test
movs
jmp
lods
cmps
xor
ins
std
push
sbb
mov
add
push
push
add
dec
scas
sahf
(bad)
cmp
sbb
sbb
fs
mov
lahf
mov
movs
ins
call
add
imul
lds
and
mov
fwait
sbb
sub
sbb
mov
jmp
dec
cmps
or
jbe
out
inc
imul
xchg
popf
stc
(bad)
icebp
sbb
jle
xor
cld
adc
cmp
inc
int3
add
mov
mov
fsubr
dec
dec
jbe
xchg
fisttp
popf
pop
mov
mov
xor
mov
cmp
sbb
jb
add
inc
mov
add
mov
mov
js
mov
dec
push
dec
les
add
fild
mov
inc
cmp
or
xlat
cmp
sti
fdiv
mov
stos
aam
mov
mov
mov
stc
repnz
mov
inc
jecxz
fs
mov
xchg
(bad)
(bad)
aam
dec
and
dec
test
mov
sbb
pop
sbb
push
cmp
sar
pop
sub
jnp
cdq
adc
inc
rcr
call
push
or
test
cld
es
adc
sar
loope
cmp
mov
(bad)
push
or
inc
sahf
fcom
sbb
data16
out
dec
cwde
sub
ins
and
push
(bad)
fldcw
adc
hlt
xor
jo
rol
sbb
sub
ficomp
jnp
test
push
stc
sub
sub
or
xchg
not
sbb
xchg
jge
cdq
test
(bad)
inc
loop
retf
jo
out
dec
lds
cmps
out
iret
xlat
pop
iret
sbb
pop
gs
cmp
sti
pop
adc
add
call
sub
icebp
inc
outs
add
adc
xor
and
lahf
into
and
cmp
movs
mov
fsub
ret
or
add
or
xchg
outs
ror
xchg
data16
push
adc
jmp
cld
mov
sub
push
sbb
ja
pop
cwde
and
push
sbb
cld
jbe
adc
push
adc
inc
out
push
inc
shr
xor
push
hlt
dec
retf
sub
aaa
xor
xor
sahf
repz
adc
xor
imul
add
sahf
push
adc
out
add
inc
out
fdivr
lods
in
jmp
inc
out
add
cmps
les
in
(bad)
jnp
push
mov
(bad)
mul
outs
leave
test
jl
inc
and
adc
dec
std
mov
bndldx
out
cdq
pop
jmp
aaa
mov
sbb
mov
fisubr
std
mov
inc
xchg
(bad)
jmp
xor
inc
mov
dec
jecxz
push
sti
(bad)
jae
gs
cmp
jmp
idiv
push
movs
scas
adc
fldenv
adc
popf
mov
dec
ja
inc
mov
sbb
sbb
or
pop
pop
push
add
ret
jno
pusha
and
fdiv
or
mov
xchg
pop
xchg
pop
ins
mov
mov
pop
repz
retf
aaa
pop
stos
or
loopne
sbb
or
enter
call
sub
retw
loop
sahf
loopne
imul
out
ja
and
cdq
call
jp
push
cli
clc
adc
cmc
push
es
repz
int
fistp
imul
sub
pop
dec
mov
xchg
push
fadd
fcomp
cmp
loope
call
retf
add
(bad)
sbb
push
mov
mov
gs
cmp
and
jbe
in
aam
xor
popf
cmps
movs
pop
jecxz
mov
shr
out
dec
or
or
cmps
es
mov
or
out
push
imul
inc
(bad)
cmp
div
pop
mov
retf
mov
and
punpckhwd
jp
(bad)
adc
inc
cld
cmp
push
pop
fsubr
rcl
dec
mov
(bad)
loop
adc
jl
rcl
stc
imul
pop
js
mov
xor
fldenv
sbb
cmps
jle
mov
mov
(bad)
pushf
(bad)
adc
in
xchg
not
add
call
outs
pop
mov
pop
bnd
xchg
pop
clc
or
inc
mov
fldcw
test
sub
xor
pusha
jae
pop
or
lods
add
scas
mov
in
push
lea
retf
pop
test
and
aad
and
cwde
adc
test
dec
push
xchg
cmp
pop
push
dec
or
lahf
jp
es
fbstp
mov
xchg
jno
jo
add
movs
outs
jmp
imul
and
dec
xchg
mov
mov
dec
mov
in
cmp
dec
sbb
fmul
jecxz
mov
mov
cmp
es
mov
popf
cmc
sbb
adc
cmp
adc
repnz
push
mov
test
cmps
rol
stos
mov
pop
rol
xor
scas
dec
push
into
push
sbb
iret
scas
pop
inc
sbb
sti
dec
mov
fnstenv
jb
xchg
in
push
push
data16
xchg
nop
ja
test
mov
mov
mov
cwde
cmp
inc
mov
outs
ja
fistp
pusha
push
and
test
push
sub
jl
lds
aam
jl
mov
out
imul
and
push
std
mov
ins
aam
xlat
cs
cmp
cmp
pop
(bad)
ret
pop
fadd
push
sub
lds
cmp
je
or
or
ds
cmp
cmps
mov
pop
mov
adc
jae
push
dec
push
push
fs
cmps
adc
push
outs
ss
inc
fs
lds
push
pushf
fwait
and
aam
xchg
cmp
mov
test
ss
daa
dec
arpl
inc
ret
icebp
lea
retf
sbb
jle
inc
push
(bad)
pop
push
stc
xchg
call
rol
test
pop
adc
test
inc
mov
mov
out
(bad)
cli
pop
scas
push
adc
dec
ds
jp
(bad)
push
sub
iret
movs
jmp
out
fld
ds
or
and
cmps
add
aad
lahf
xor
cwde
jae
in
mov
clc
les
pop
xchg
stos
mov
or
(bad)
cmp
xor
cmp
cdq
daa
jns
test
iret
test
jmp
and
dec
jne
or
gs
(bad)
in
pop
scas
inc
mov
jge
push
cmp
iret
pop
push
adc
add
sti
dec
xchg
inc
(bad)
lahf
and
gs
fstp
jge
leave
add
pop
xchg
cmp
jmp
sbb
or
mov
ret
std
test
push
cld
xor
jno
sub
shl
mov
jge
jne
cwde
sub
lods
add
lds
call
mov
inc
push
pushf
cmp
sbb
push
les
mov
xchg
dec
adc
sub
pop
jno
popa
addr16
jno
rcr
jecxz
and
mov
pusha
inc
xor
xchg
adc
and
movs
ror
mov
loope
mov
jp
in
mov
int3
mov
cmp
lods
scas
jns
cmp
das
xor
pop
aam
pop
aaa
xchg
push
mov
dec
add
jno
imul
fld
add
sti
std
push
adc
or
mov
iret
xor
inc
cmps
sbb
stos
sbb
and
xor
jecxz
add
cli
sbb
xchg
mov
or
aaa
cmp
ja
mov
dec
dec
inc
xchg
jbe
inc
loop
pushf
in
or
cmp
pop
jecxz
loopne
sub
outs
pop
pop
jb
int
adc
aaa
or
cdq
push
jnp
repnz
adc
cmps
xor
add
lods
imul
or
out
adc
jno
in
xor
jbe
test
sti
shr
aaa
(bad)
pop
cmc
test
xor
cli
adc
xchg
test
dec
ror
js
mov
es
add
sar
add
enter
push
jbe
inc
pop
jp
cli
aad
fidiv
dec
pop
or
xchg
lea
out
mov
and
push
sti
dec
cdq
out
sub
dec
jp
inc
ror
sbb
lahf
xor
pushf
rcr
cmp
sub
push
je
movs
pusha
daa
imul
fistp
in
jmp
xor
(bad)
cmp
div
nop
in
sbb
inc
ins
test
mov
sahf
jp
out
inc
sbb
mov
into
adc
cmc
enter
inc
sbb
sbb
(bad)
cmp
cmp
dec
lds
sub
retf
and
sub
adc
sbb
hlt
test
xchg
clc
ret
xchg
dec
inc
adc
mov
icebp
add
sub
sub
stos
enter
dec
gs
sbb
movs
loope
push
pushf
and
adc
inc
fisttp
rcl
pop
hlt
adc
stc
inc
xor
bound
pop
jge
(bad)
mov
test
add
jmp
add
push
mov
xor
call
fwait
dec
test
retf
inc
pusha
cwde
lods
or
jmp
lock
loop
or
pusha
neg
sbb
int
sti
fs
sbb
jo
push
mov
pop
push
retf
into
mov
(bad)
push
xchg
ins
cmp
push
mov
and
jae
xor
fnsave
cmp
(bad)
in
and
cmp
into
add
or
dec
mov
jle
xchg
mov
js
pop
sub
cmp
movs
mov
lea
add
xchg
cmps
inc
push
test
dec
or
sbb
push
push
(bad)
push
pop
arpl
push
pop
jge
in
sbb
jl
je
aaa
in
sub
mov
adc
fcmove
test
inc
push
loop
mov
xor
sub
loop
mov
jae
adc
pop
dec
test
cmp
out
xor
and
cmp
jno
sahf
repz
ror
stc
sub
enter
jp
aam
int3
nop
sub
push
push
mov
je
hlt
lods
in
aad
loopne
sub
xlat
popf
sbb
mov
lock
(bad)
mov
cmp
cld
out
pop
mov
xor
shl
lds
leave
xlat
xor
inc
popa
pop
psubq
inc
or
sub
cld
lods
adc
fimul
push
or
jmp
inc
imul
in
leave
inc
out
js
cmp
cmp
xor
jg
je
xor
icebp
xchg
nop
cwde
cmc
enter
int3
(bad)
in
inc
adc
pop
add
(bad)
push
jp
je
arpl
or
js
jnp
xor
push
std
jp
pop
repz
xchg
popa
shl
xor
sub
cli
mov
pushf
xchg
and
dec
mov
fmulp
push
out
stos
mov
aam
push
stc
mov
call
jo
jno
in
add
aam
mov
pushf
jp
jnp
shr
loope
call
adc
add
and
cmp
dec
in
scas
rol
(bad)
mov
mov
mov
cmps
inc
lahf
pusha
and
push
mov
jge
and
hlt
add
frstor
daa
adc
fcmove
xchg
or
xchg
icebp
jge
add
das
in
jecxz
pusha
sar
es
fist
xlat
enter
cmp
test
stos
das
test
popf
push
mov
mov
lock
adc
shl
jle
mov
sub
cdq
popa
push
push
rol
loop
or
(bad)
mov
pop
mov
cmp
pusha
retf
mov
fldenv
add
jg
dec
(bad)
adc
bound
push
and
clc
out
inc
test
in
pushf
in
div
neg
repz
jno
sbb
adc
and
xchg
nop
outs
sub
and
(bad)
dec
jns
mov
inc
hlt
add
dec
mov
ins
mov
outs
cmp
jmp
xor
fs
push
xchg
and
rcr
sbb
call
lahf
hlt
(bad)
lahf
and
ss
div
xchg
scas
or
sub
mov
rcr
push
inc
das
cmp
loop
mov
lods
pop
out
mov
push
cmps
pop
ret
push
aaa
les
test
test
jmp
xchg
leave
stos
adc
out
int3
jns
sbb
loop
popf
imul
adc
mov
mov
aad
(bad)
into
inc
mov
es
jle
stos
mov
mov
xor
hlt
fdivr
inc
nop
mov
mov
sub
mov
sbb
test
aam
jl
nop
pop
sbb
pop
mov
pop
jo
movs
pop
jae
out
inc
call
in
xor
ja
and
fisttp
or
adc
and
arpl
pop
test
xchg
sbb
aas
bound
adc
test
dec
jo
mov
inc
mov
push
pop
jge
movs
nop
xchg
or
xchg
ror
xchg
mov
xchg
(bad)
fbstp
cdq
loope
fld
pop
jmp
cmp
loopne
aas
and
outs
inc
rcr
push
mov
loop
pusha
fbld
outs
add
sahf
and
jle
xchg
sahf
add
inc
add
xchg
out
xchg
fiadd
out
push
adc
dec
leave
leave
enter
jbe
xchg
cmp
arpl
cmove
loopne
sbb
cwde
pop
sub
add
jnp
out
scas
inc
jle
mov
and
add
mov
rol
xor
dec
push
(bad)
mov
clc
arpl
mov
mov
cmp
pop
arpl
iret
dec
popf
inc
(bad)
pop
fs
mov
sub
jg
jg
test
out
lahf
lea
leave
or
pop
repz
stc
cmp
cmp
cmc
fistp
xchg
mov
sub
pop
mov
out
inc
sbb
fistp
ret
lahf
movs
mov
inc
sub
inc
iret
jecxz
cmp
sub
(bad)
mul
call
fstp
jae
arpl
jae
mov
xchg
sbb
inc
sar
mov
vpmovsxwq
mov
xor
jo
ret
and
xor
cdq
stos
(bad)
stc
mov
push
xchg
lds
out
std
sar
mov
mov
mov
setb
inc
mov
not
sbb
mov
stc
jmp
sbb
jge
cmps
je
call
or
dec
mov
ret
pop
outs
int
sub
sub
sub
xor
jle
fmul
jo
call
mov
cmp
sbb
mov
dec
cmps
(bad)
out
pop
add
ret
dec
sbb
push
xchg
fstp
ret
add
stos
mov
inc
dec
and
add
mov
dec
int
xchg
add
pop
jmp
iret
scas
and
test
ret
mov
cs
repnz
pop
xlat
mov
mov
mov
out
cmp
arpl
and
rcr
dec
imul
pop
outs
stc
push
mov
sub
mov
xlat
mov
jge
aaa
jb
jbe
push
pop
mov
mov
mov
fdiv
push
mov
pop
fxch
cmp
retf
mov
(bad)
mov
xor
out
cmp
outs
imul
xchg
jns
add
mov
cmp
sub
cmps
test
js
sub
cmc
jg
arpl
ja
mov
push
pop
mov
addr16
movs
mov
jmp
dec
icebp
nop
sbb
in
popf
dec
cmps
push
and
sbb
push
fistp
mov
xchg
in
shl
jne
retf
and
int3
and
in
xchg
js
addr16
std
out
sub
dec
fcom
mov
lods
push
and
or
retf
nop
stos
addr16
sub
enter
cmp
jbe
cmp
add
mov
sbb
mov
aas
(bad)
push
stc
inc
imul
dec
cmp
ss
mov
addr16
push
add
(bad)
test
and
push
in
sbb
popa
out
test
add
push
jnp
sbb
call
mov
pop
sub
sbb
retf
adc
cmp
push
or
push
fwait
cmp
jp
test
jb
add
cmp
outs
sub
nop
sbb
ret
sub
or
or
jmp
jge
lds
dec
outs
mov
mov
cmp
mov
call
mov
out
sahf
movs
dec
mov
mov
and
push
imul
ficom
mov
xchg
cmps
(bad)
push
jg
test
fild
and
out
adc
clc
xor
xor
daa
(bad)
aaa
in
in
out
dec
and
or
sub
stos
sbb
frstor
out
popf
sahf
cmp
adc
mov
mov
hlt
(bad)
sbb
xlat
sar
jl
cld
inc
jb
add
shr
ss
scas
std
sub
stos
jp
add
xchg
mov
cmp
fmul
fdivp
add
cli
push
mov
jns
cmps
sub
shl
es
imul
out
je
fldcw
stos
push
adc
and
into
cwde
ins
jo
loope
lock
pop
sbb
or
inc
out
or
mov
push
(bad)
cmp
push
out
popf
and
mov
(bad)
stc
inc
int
xor
or
ret
fidivr
pop
jge
add
in
test
or
es
or
enter
sar
mov
stos
mov
pop
mov
test
dec
sub
mov
inc
xchg
mov
test
aam
jnp
icebp
lock
cmps
mov
aam
push
movs
jae
outs
push
sub
(bad)
call
data16
adc
or
jnp
mov
push
in
adc
xchg
sub
jae
gs
icebp
mov
imul
in
fcom
add
or
test
sub
push
cmp
ins
cmp
xor
ja
mov
adc
icebp
loopne
add
lahf
retf
pop
mov
pop
(bad)
icebp
je
sub
add
add
jl
pusha
cmps
mov
in
shl
sub
sahf
aam
cmps
jne
cmp
ret
fst
and
lahf
movs
and
mov
sbb
mov
cmp
jae
push
mov
cmp
aas
inc
fstp
iret
push
scas
push
or
jns
retf
push
pop
pushf
xor
repnz
rcr
fst
shr
lds
mov
ss
leave
cmc
adc
mov
ins
imul
fucom
lsl
xor
sub
cmps
mov
dec
xchg
(bad)
mov
and
mov
jo
jle
ss
jnp
int3
jmp
jne
enter
mov
dec
and
iret
push
fdiv
sub
call
aas
jl
(bad)
mov
jnp
into
cmp
movs
pop
dec
dec
sub
inc
stos
and
fdivr
mov
xchg
xor
push
sbb
(bad)
icebp
ror
sbb
std
fldcw
mov
add
mov
sbb
pop
stos
test
jnp
repz
pop
sub
es
push
or
mov
jmp
outs
dec
jg
out
sbb
ss
call
cli
sbb
inc
jns
test
jmp
jmp
inc
push
out
jmp
or
xor
pop
add
or
xchg
or
add
dec
sbb
out
movs
into
inc
push
and
jecxz
and
mov
std
shl
daa
cmp
xchg
mov
ds
dec
clc
in
sub
mov
push
jb
(bad)
stos
lds
fld
mov
xor
push
cld
inc
xor
inc
mov
push
into
loopne
enter
aad
inc
adc
aaa
xlat
sar
or
ins
(bad)
in
cs
inc
outs
popf
repz
mov
jle
pushf
mov
xchg
int
push
aas
add
loope
and
ja
ror
ds
mov
sub
sub
stos
dec
xchg
retf
cmp
xchg
out
mul
mov
add
test
pop
mov
ret
ret
jne
pushf
sub
jle
lahf
inc
mov
js
popa
lock
out
sub
lahf
mul
(bad)
push
dec
rcr
daa
scas
push
sub
repz
imul
mov
js
fiadd
div
xor
dec
jno
jmp
leave
loop
retf
lock
cld
jmp
gs
cld
ins
xchg
test
je
pop
sbb
int3
retf
rep
loopne
pop
xor
ins
mov
leave
mov
sahf
lods
mov
cld
mov
push
pop
std
sbb
into
loopne
cmp
push
adc
mov
imul
rcl
sbb
or
imul
jno
add
fisubr
and
mov
add
scas
test
jp
add
in
out
mov
push
pop
mov
scas
call
outs
aas
scas
aam
aas
shl
mov
and
xchg
ins
push
or
ftst
or
pop
sbb
mov
lods
jns
mov
xor
scas
push
lods
lock
dec
retf
out
or
sub
in
daa
pop
ret
jle
popf
and
mov
push
jmp
jns
jle
cmc
stos
mov
adc
(bad)
mov
ja
call
ins
jae
loopne
hlt
cmc
or
xchg
mov
dec
popaw
pusha
(bad)
in
inc
stc
cli
aad
add
aam
sti
bnd
frstor
test
std
xlat
push
jmp
pop
mov
jl
imul
icebp
push
movs
int
jo
lods
enter
repnz
or
push
xchg
gs
cmps
dec
vmovlps
test
idiv
jmp
push
cld
std
inc
pusha
dec
cmc
rcr
ret
mov
dec
cmp
add
fucompp
movs
mov
add
das
scas
and
jo
push
cmpxchg
lods
adc
test
out
dec
or
in
imul
xchg
push
mov
or
xlat
jns
repnz
pusha
xor
and
or
fwait
add
fsubr
(bad)
jne
fwait
rcl
int
int
cdq
mov
mov
add
imul
mov
(bad)
sub
xlat
arpl
lods
jne
push
fmul
popa
jb
jp
xor
jb
in
xchg
ja
mov
dec
int3
ins
pop
xchg
(bad)
pop
mov
dec
pop
imul
rol
addr16
jns
repnz
out
cs
mov
xor
mov
ins
inc
dec
inc
push
aam
xchg
lock
xchg
lods
fcomp
mov
shl
js
xchg
out
out
cld
imul
xor
mov
or
scas
pop
push
mov
sti
jmp
ret
push
neg
push
(bad)
xchg
hlt
xchg
imul
les
fimul
leave
add
adc
adc
sbb
and
in
jns
mov
xchg
arpl
das
pop
fisub
and
xchg
inc
in
nop
push
adc
dec
mul
std
adc
push
inc
sbb
or
pop
call
ins
sbb
out
sbb
neg
jl
(bad)
neg
out
jle
popa
repz
jecxz
mov
mov
cli
mov
fld
pop
push
mov
push
hlt
cli
nop
dec
fdiv
mov
mov
fimul
ds
fadd
cwde
add
sub
imul
mov
add
out
pop
push
pop
(bad)
xchg
into
fiadd
jo
or
loopne
test
sbb
out
pop
ss
das
outs
int3
jecxz
into
cdq
cmc
or
(bad)
inc
gs
ja
dec
adc
mov
mov
pop
pop
mov
jb
test
push
xchg
cs
xchg
xchg
or
fwait
adc
sub
test
test
xor
call
in
not
cdq
int3
mov
mov
adc
les
loope
push
pop
data16
ret
sbb
fistp
aad
jl
xor
push
xchg
dec
inc
push
sbb
adc
inc
and
push
dec
test
sahf
push
pop
sbb
ror
aam
out
jle
repnz
sub
shl
mov
out
mov
pop
dec
test
bswap
jp
sbb
icebp
movs
sbb
shl
xchg
bnd
call
or
lods
popf
addr16
mov
ds
std
adc
mov
fist
loopne
dec
pop
pop
push
ret
mov
or
cli
mov
cs
pusha
loope
push
xor
cmc
or
dec
ins
(bad)
mov
fmulp
(bad)
pop
ret
cld
adc
push
dec
cwde
shl
add
cld
mov
(bad)
repnz
xor
bound
cld
or
sbb
ret
repz
jg
or
jmp
rol
mov
or
das
mov
inc
stos
mov
push
(bad)
or
mov
and
rol
fistp
sbb
loopne
mov
pop
fisttp
mov
test
inc
push
out
push
push
mov
sti
stc
bound
mov
test
or
fwait
repnz
mov
fld
and
ret
or
dec
mov
push
dec
ret
fistp
aad
in
int
dec
or
and
out
ins
popf
dec
mov
adc
add
push
gs
or
xor
jne
mov
xor
out
ja
shr
mov
cli
aas
xor
sbb
xor
or
xchg
xor
out
icebp
jge
lods
mov
jo
jmp
xlat
jb
rcr
sti
add
inc
lods
xor
mov
xchg
imul
push
jne
sbb
xor
call
cmp
add
and
ror
lods
pop
(bad)
xor
arpl
mov
out
test
in
jge
add
pop
popa
mov
lea
sub
xor
sub
cmp
push
gs
in
movs
out
pop
pop
push
lahf
mov
gs
jecxz
shl
push
outs
push
popf
xchg
xchg
dec
mov
shl
xor
in
cmp
xor
das
sbb
scas
dec
icebp
pop
pop
gs
add
jg
shr
test
ja
mov
jle
adc
addr16
xchg
adc
adc
jae
in
(bad)
in
shr
jecxz
repnz
in
jle
stos
iret
outs
inc
push
xchg
out
cmp
arpl
daa
daa
call
fs
and
loopne
adc
pop
or
cli
jbe
mov
neg
lods
sbb
mov
loop
cmp
(bad)
mov
sar
(bad)
sbb
mov
adc
pushf
pop
rcpps
pop
push
scas
fdivr
dec
mov
ins
daa
test
mov
ret
js
sub
or
out
fstp
jns
test
das
and
mov
mov
shl
je
ins
mov
mov
xor
pop
xchg
fs
shl
dec
dec
scas
lahf
adc
lds
mov
cmp
sub
jg
dec
mov
add
push
xchg
(bad)
jle
loop
(bad)
fiadd
call
rol
ret
clc
ja
jmp
sbb
adc
or
bound
sar
and
jecxz
inc
dec
add
aas
jae
jnp
push
mov
loopne
jmp
pop
ror
mov
push
std
or
push
ins
js
bound
or
bound
sub
xlat
and
sbb
(bad)
std
cmp
dec
jne
mov
push
cmp
xor
pushf
mov
jmp
adc
scas
shl
int3
neg
sbb
adc
adc
mov
div
cmp
mov
sub
(bad)
cmp
retf
cmp
cmps
pushf
xchg
cmp
cmc
dec
mov
(bad)
repnz
xor
jmp
pusha
inc
in
pop
xchg
sahf
and
retf
ja
mov
xlat
mov
cmp
push
jp
jecxz
out
pop
hlt
xchg
mov
repnz
arpl
imul
jne
adc
aas
push
data16
ds
pop
xor
push
das
mov
jno
dec
call
sbb
pop
mov
jl
ins
mov
push
inc
shr
(bad)
ret
add
cmp
push
push
aaa
fs
test
and
repz
jae
xor
fnstcw
push
dec
rep
xchg
retf
push
pop
or
ds
jl
add
mov
mov
cli
or
push
mov
ror
sub
shl
shr
hlt
add
ds
dec
jmp
(bad)
(bad)
pop
and
sbb
jp
or
ret
jo
dec
pop
jge
push
xor
fadd
std
sbb
aaa
imul
jb
fidiv
aas
mov
mov
xchg
sub
cmp
std
dec
fimul
dec
inc
ins
mov
movs
cmps
test
cwde
cmps
inc
add
pop
xlat
cmp
cmp
jmp
inc
push
mov
push
mov
sbb
add
jbe
fstp
mov
xchg
leave
dec
or
ja
shl
adc
dec
push
in
stos
dec
mov
test
inc
sbb
inc
push
stos
push
mov
or
pop
(bad)
mul
outs
scas
mov
(bad)
and
xchg
out
mov
outs
jp
sahf
xchg
ins
aaa
jb
mov
xlat
or
xchg
inc
inc
pop
js
jbe
mov
inc
adc
sub
repnz
adc
pusha
ror
or
pop
mov
mov
call
sbb
xlat
sub
cmp
dec
(bad)
mov
pusha
lock
mov
das
fiadd
push
jle
sub
jmp
aad
arpl
fbstp
pop
cmp
outs
cmps
fisttp
adc
adc
adc
cdq
or
in
nop
mov
je
pop
iret
cs
lods
jbe
addr16
or
gs
inc
ror
sbb
out
jnp
into
sub
mov
jg
sub
inc
xchg
rcr
sub
mov
ins
into
xchg
or
mov
jno
dec
inc
cwde
rcr
fsin
mov
mov
dec
fs
stc
pushf
mov
mov
in
mov
push
in
faddp
mov
ss
pop
lahf
pop
and
dec
xchg
lods
stc
inc
ret
adc
mov
mov
jmp
fnstsw
xor
jl
cmp
xor
xor
loopne
pop
push
xor
xchg
jg
call
lock
inc
adc
and
xlat
repnz
neg
fstp
inc
call
cmp
ret
jmp
cmp
xor
push
(bad)
iret
(bad)
and
and
lds
or
or
into
xor
(bad)
sbb
push
or
and
mov
cmp
out
push
mov
ret
fsub
jecxz
hlt
shl
push
pop
sub
fsubrp
popa
int
mov
jno
and
lahf
js
or
pop
cdq
stc
aaa
adc
push
in
jge
lods
xchg
xchg
mov
add
adc
shl
add
cwde
aas
stc
int
outs
jbe
add
inc
pusha
mov
adc
jb
jae
sqrtps
fstp
dec
inc
adc
jge
mov
test
lock
ins
jne
fadd
add
adc
mov
push
pop
cwde
dec
push
bswap
imul
mov
inc
sahf
mov
test
fs
pop
xchg
arpl
rcr
retf
fwait
lods
mov
lock
jne
dec
and
fisubr
test
les
mov
jns
movups
jb
xlat
call
xchg
dec
sahf
hlt
mov
aas
shl
inc
mov
mov
jl
adc
mov
inc
xchg
or
cli
retf
outs
dec
dec
int
pop
mov
out
sbb
inc
sbb
add
retf
lahf
sbb
add
jl
jae
and
xchg
mov
cmp
cmp
dec
icebp
xchg
scas
(bad)
fwait
mov
loop
adc
xchg
cmp
pop
adc
gs
data16
loope
or
ss
pop
push
sub
in
mov
inc
xor
ins
lahf
inc
jg
adc
cmp
hlt
xor
cmps
movs
pop
pop
fsubr
mov
push
push
movs
mov
pop
pop
push
adc
mov
ffree
mov
fstp
in
and
(bad)
(bad)
cmp
lods
add
jecxz
stos
pop
and
cmps
fnstenv
inc
jecxz
movs
cli
inc
std
shr
ret
xchg
sub
stos
cdq
xor
xchg
jl
sub
test
inc
fild
pop
js
lods
mov
es
bound
mov
cmp
cmp
and
inc
and
mov
jp
fwait
cmps
int
sti
jb
xchg
pusha
mov
xor
xchg
pop
aas
and
mov
outs
das
fidivr
repnz
push
popf
pop
loopne
sub
not
inc
ja
add
(bad)
mov
push
fstp
mov
mov
fwait
repnz
mov
out
sti
or
xor
jmp
jge
stos
adc
hlt
hlt
push
bound
scas
push
mov
leave
adc
inc
mov
or
push
(bad)
pop
add
jmp
inc
repz
push
mov
lock
daa
popf
call
js
xchg
shr
mov
xor
fnstcw
sub
xchg
iret
leave
in
cmps
or
inc
inc
mov
std
cmp
js
or
mov
popf
jbe
imul
aas
cmp
addr16
push
jne
mov
inc
push
mov
pop
popf
or
ret
stos
lahf
sub
cdq
movs
dec
jge
cmp
fst
jge
xchg
out
pop
call
jecxz
int3
popa
fwait
inc
in
add
out
cmp
dec
cs
jmp
aaa
jmp
sbb
cld
pop
sbb
pop
sbb
pop
retf
inc
ja
ss
lock
and
addr16
xor
nop
mov
jo
pop
and
loope
inc
loop
pop
xchg
and
fwait
jmp
mov
pop
in
arpl
arpl
call
pushf
ja
fnstenv
cmp
test
jae
mov
sahf
cmp
mov
dec
stc
movs
data16
push
mov
push
test
mov
add
mov
push
int3
leave
inc
mov
daa
cmc
inc
push
enter
dec
jl
(bad)
dec
mov
adc
and
loope
repnz
test
or
ret
frstor
lahf
pop
push
test
out
int
fs
pop
add
clc
mov
imul
stc
fstp
dec
fst
xor
pop
mov
inc
dec
sar
aas
mov
es
fsub
scas
mov
inc
stos
dec
xchg
push
int3
mov
lea
pop
mov
add
sbb
fdivr
add
sub
or
leave
pop
aas
adc
rol
cmp
dec
stos
nop
sbb
neg
pop
mov
sbb
lods
add
inc
adc
lea
mov
aas
pop
data16
das
scas
pop
adc
and
pop
int3
das
pop
inc
push
dec
xor
not
push
xchg
or
mov
or
sahf
mov
and
in
mov
push
int
pop
addr16
leave
xlat
push
fwait
sub
fdiv
enter
pop
outs
jns
and
sbb
(bad)
cmc
aaa
pop
or
mov
push
sbb
mov
cmc
mov
inc
test
ret
mov
nop
mov
inc
xor
aad
loope
xchg
lahf
cwde
idiv
xchg
mov
in
in
in
xchg
sub
mov
jge
jnp
jne
and
sub
popf
test
add
dec
in
mov
mov
adc
push
push
cmp
sub
int
inc
pop
jmp
push
push
cmp
dec
or
cmc
sar
jmp
add
sbb
cmp
ja
pushf
push
mov
jle
jecxz
clc
pop
push
xor
push
push
stc
div
adc
cmp
xchg
(bad)
hlt
xchg
mov
dec
sub
sub
mov
jb
mov
pop
fild
push
shr
shl
aaa
inc
divps
add
gs
xchg
in
(bad)
mov
and
stc
and
inc
pop
dec
mov
loope
fmul
ins
cmps
fcmovb
or
mov
iret
and
leave
lds
xchg
loopne
addr16
call
pop
push
pop
pop
xchg
sub
jecxz
dec
pop
ss
and
cs
enter
cdq
mov
adc
adc
rcl
cmp
mov
add
mov
std
cmp
ins
js
xor
cdq
mov
push
push
mov
xchg
mov
add
or
gs
int
stc
push
repz
jp
push
cmp
inc
loopne
test
push
xor
and
xchg
test
and
int
dec
aas
jno
cs
cmp
jne
daa
cmp
mov
cmp
ss
and
mov
push
popa
(bad)
jbe
(bad)
sets
repnz
dec
cwde
xlat
mov
shr
add
ror
adc
shl
mov
mov
rcl
pop
sub
rcr
movs
pop
or
loopne
push
(bad)
fld
fcomp
call
inc
(bad)
std
stos
hlt
lock
adc
push
xchg
movs
add
(bad)
and
leave
jg
jae
add
push
pop
lahf
sbb
fidivr
or
adc
cmp
int3
inc
and
sbb
test
and
mov
mov
adc
adc
inc
popa
jbe
add
jl
dec
and
ror
ss
or
xlat
add
lock
out
aad
leave
(bad)
sti
js
pop
xchg
push
movs
mov
test
push
inc
pop
adc
out
xchg
pop
adc
in
push
in
jo
je
lods
inc
xor
(bad)
mov
xor
imul
repz
scas
cmp
sub
xchg
test
adc
fwait
rcr
xchg
icebp
(bad)
sub
mov
into
lds
push
cmps
retf
jno
xchg
jl
xchg
into
dec
fild
or
cmps
cmp
jb
enter
outs
mov
mov
pop
dec
cdq
dec
ins
jl
sar
lock
in
loop
xlat
xor
sbb
jg
nop
add
retf
imul
in
scas
(bad)
push
imul
popa
(bad)
ins
sub
outs
mov
in
pop
cmps
push
xor
cmps
jo
dec
fiadd
push
or
outs
mov
mov
jmp
sbb
(bad)
sahf
out
and
mov
pop
push
push
adc
xchg
cmp
aas
aaa
loopne
push
sahf
fs
dec
test
inc
adc
push
repnz
push
cmc
add
cs
mov
adc
das
sbb
enter
mov
repz
lahf
jmp
call
jne
retf
pop
dec
push
push
js
data16
mov
sbb
es
js
inc
movs
loope
mov
adc
fwait
das
call
xchg
dec
stos
inc
xchg
sbb
xor
popa
or
mov
push
mov
dec
ds
sub
cmps
mov
adc
(bad)
in
js
test
adc
popf
in
adc
loopne
and
retf
in
mov
gs
jp
clc
xor
lods
gs
sbb
mov
push
loop
xchg
push
out
aaa
mov
jno
xor
es
or
arpl
das
mov
pop
xchg
or
xchg
adc
pushf
aam
fs
push
test
jnp
adc
mov
data16
or
in
sub
imul
popf
cmps
or
je
mov
dec
pop
sti
not
movs
dec
iret
bound
dec
pop
jmp
cli
sbb
pop
mov
faddp
cmp
cmps
(bad)
aad
sbb
scas
lods
add
mov
or
pop
xchg
push
(bad)
jo
int
je
pusha
stos
adc
in
inc
lahf
cmp
rcl
repnz
sbb
push
test
rol
repz
les
cmp
adc
jmp
xchg
sub
mov
in
mov
addr16
inc
(bad)
mov
mov
pop
mov
ins
adc
xlat
icebp
xor
out
in
data16
sub
lods
lock
dec
dec
das
adc
add
pop
xor
popf
dec
cmp
xor
test
enter
or
cmp
inc
add
mov
cmc
pop
imul
sbb
and
mov
int3
sar
scas
das
jbe
jno
cwde
ins
sbb
aaa
sub
add
lods
in
jge
mov
sbb
leave
ins
mov
pusha
ins
outs
mov
ins
cmp
sbb
jne
mov
xchg
inc
adc
js
fdivr
scas
inc
test
bound
dec
adc
dec
loope
pushf
pop
lds
mov
imul
inc
pop
jle
mov
loop
adc
sub
mov
lahf
test
fiadd
add
xor
fcomip
mov
sub
outs
stc
sbb
mov
stos
mov
push
lahf
cmp
cmp
push
dec
cmp
inc
js
ror
in
dec
jnp
(bad)
cmp
and
xor
cmp
xor
xor
mov
inc
idiv
add
cmp
inc
ret
les
call
jle
adc
pop
and
sub
jp
stos
pop
cdq
cmp
mov
xchg
call
or
jmp
rcl
arpl
mov
pop
es
xchg
inc
shl
inc
mov
mov
mov
retf
pop
aas
mov
xchg
pop
sub
fucomi
ja
fsub
cwde
jno
aad
stos
(bad)
ja
or
jnp
or
mov
arpl
push
cmp
aas
cmps
scas
push
mov
cs
jo
es
sbb
(bad)
mov
pop
ficomp
shl
mov
(bad)
mov
iret
adc
hlt
sbb
mov
aaa
xor
push
sbb
lds
cmp
pushf
mov
stos
rcr
mov
xchg
cmp
iret
push
jo
and
out
xor
mov
les
int
jecxz
jecxz
movs
jns
jne
js
ins
sbb
aam
mov
xchg
jmp
dec
fs
push
pop
in
je
xor
cmc
or
xchg
pop
les
push
mov
dec
pop
and
mov
dec
ret
sbb
popf
pop
pop
add
fdivr
sar
aam
inc
and
mov
aaa
sbb
ins
jecxz
in
ret
ficomp
lahf
out
pop
outs
cdq
inc
push
inc
push
push
pop
addr16
addr16
pop
and
jo
mov
xchg
xchg
push
test
aaa
pop
shr
ror
fisttp
jnp
addr16
call
xchg
jmp
ja
jg
(bad)
outs
in
outs
xchg
mov
xchg
cli
or
fwait
test
or
jecxz
adc
adc
ja
movs
ins
movs
stos
retf
jmp
(bad)
sbb
jge
push
mov
iret
xchg
add
xor
pop
stc
adc
retf
nop
rcr
add
and
fldenv
xor
mov
lea
push
sub
xchg
jge
loopne
imul
js
mov
(bad)
inc
cdq
xor
(bad)
pop
or
(bad)
cmp
(bad)
fsubr
push
add
scas
xlat
aad
jecxz
imul
imul
sub
sbb
push
jmp
add
mov
jecxz
ficomp
jae
test
mov
enter
jo
xor
rcr
ret
imul
and
cmp
mov
loopne
retf
mov
and
stos
rol
loop
movs
xchg
aas
aad
add
adc
xchg
push
jns
aaa
in
add
push
sahf
jp
jecxz
pusha
add
and
mov
(bad)
rcl
jae
(bad)
movs
jg
and
cli
arpl
add
dec
xchg
stc
hlt
xor
(bad)
ja
scas
sbb
shr
and
mov
mov
xor
into
int3
xor
sahf
iret
imul
and
push
mov
out
popa
add
comiss
push
dec
imul
fs
and
adc
jnp
push
cmps
jb
jmp
inc
not
mov
mov
inc
or
jns
stc
push
loopne
jne
inc
ja
sbb
stc
push
enter
jle
adc
or
in
pop
push
scas
in
shl
xor
ficomp
loopne
rol
jo
lods
shl
ja
std
shl
in
rcr
in
push
daa
cmp
push
adc
adc
pop
mov
mov
xchg
xchg
jno
test
or
cwde
(bad)
(bad)
outs
sbb
adc
xchg
or
push
push
inc
and
jl
adc
mov
les
fbld
(bad)
mov
gs
mov
(bad)
xchg
retf
int3
call
jo
mov
(bad)
fs
in
test
aas
out
jecxz
je
ret
jecxz
pop
sar
cmp
jp
repz
pop
mov
pop
mov
pop
or
popf
pop
dec
adc
pop
in
or
idiv
xchg
mov
int3
xor
pop
jae
push
inc
inc
push
adc
and
in
adc
mov
dec
in
mov
inc
inc
add
xor
cmp
jge
adc
xor
sub
shr
xor
jp
xor
ja
movs
not
push
lods
sbb
inc
and
adc
mov
mov
mov
repz
shl
int3
adc
call
dec
jne
loope
out
xchg
call
retf
ds
addr16
scas
mov
xchg
jo
(bad)
mov
movs
jns
test
xor
fild
fadd
das
call
jp
das
stos
pop
sub
(bad)
jmp
test
sbb
cmp
mov
mov
aas
cmp
and
dec
push
outs
adc
dec
pusha
inc
sbb
addr16
scas
cli
enter
jmp
xchg
test
fcom
cmps
pop
cwde
test
out
lock
test
aam
in
out
dec
cmps
pop
mov
pop
mov
jg
jne
mov
mov
repz
jg
add
mov
lea
xchg
stos
lahf
and
sub
movs
in
mov
fdiv
inc
push
dec
and
lock
pop
test
cmp
jbe
add
rcr
fisubr
call
push
and
and
int3
mov
(bad)
je
pop
mov
cwde
aad
fcmovnbe
mov
cmp
hlt
cmc
inc
xor
and
jo
bound
arpl
jge
jge
adc
es
dec
pop
sub
push
ds
mov
loopne
sub
mov
sahf
aad
pop
test
cs
shl
pop
add
test
xor
adc
xchg
loope
jno
xchg
in
pop
fisttp
and
push
sub
enter
mov
mov
push
ret
cld
add
imul
loope
jns
sbb
jmp
in
stc
push
push
test
push
js
push
retf
fmulp
cld
test
adc
push
sti
cmps
pop
inc
adc
and
out
push
fs
mov
iret
int
lock
push
stos
(bad)
out
ss
jmp
add
jmp
popa
mov
mov
and
out
and
xchg
aaa
popa
lahf
mov
adc
ds
mov
mov
retf
sti
pop
jmp
cmp
out
test
dec
jmp
xor
sub
js
mov
mov
push
js
push
push
je
and
jecxz
loope
loop
xor
imul
icebp
stos
cmp
ins
push
imul
fisub
adc
pop
mov
stc
inc
out
sbb
(bad)
xor
inc
fmul
fsub
repz
add
fiadd
test
clc
or
(bad)
mov
inc
jne
sbb
push
dec
and
cs
push
push
pop
call
gs
stos
xor
stos
cmp
xchg
int3
scas
push
sbb
pop
dec
movs
in
dec
or
(bad)
jne
adc
cmps
inc
adc
inc
xchg
(bad)
cmp
fdivr
add
push
ss
fdiv
cmc
sub
push
and
adc
mov
ja
loope
push
push
mov
dec
jg
scas
fist
fisub
bound
outs
aam
pop
inc
(bad)
cs
(bad)
fnstsw
inc
repz
fbstp
aad
not
pop
adc
hlt
ja
(bad)
push
sub
out
xor
jge
xchg
loope
add
push
add
aas
add
clc
xor
(bad)
xor
repnz
and
dec
cmp
mov
out
mov
adc
stos
sub
mov
cmp
jge
jb
sar
pop
or
xor
pop
aas
shr
cmp
adc
fisub
in
push
cwde
out
scas
mov
dec
xchg
in
mov
jge
pop
cmp
fimul
shl
iret
aas
xchg
xchg
mov
mov
adc
out
stc
jo
jnp
jne
and
or
jg
cmps
add
dec
out
rcl
es
into
stc
pop
pop
xchg
aam
cmc
stos
xor
and
sub
aam
out
jns
mov
and
idiv
adc
add
cmp
icebp
ins
pop
aad
ficomp
inc
popf
aad
pop
cmp
mov
jbe
xor
scas
add
imul
cwde
rcr
xchg
lods
scas
xchg
outs
push
and
hlt
cmps
mov
popf
ret
inc
dec
jmp
sub
xchg
sar
pop
and
mov
jmp
or
jp
clc
jmp
xor
jo
push
inc
test
addr16
bnd
or
shl
mov
pop
les
xchg
test
mov
mov
pop
adc
xchg
jno
sbb
jmp
add
mov
gs
mov
(bad)
lods
adc
xchg
retf
rol
sahf
adc
add
pop
mov
loopne
jg
imul
js
jp
test
xor
mov
sbb
jmp
jle
jecxz
fadd
js
jb
mulps
fisubr
lea
scas
jne
and
dec
mov
mov
mov
std
inc
dec
lods
jne
popf
out
(bad)
shr
ret
je
push
add
mov
xlat
xchg
scas
cmc
movs
cmps
scas
in
sub
xor
mov
xor
adc
jl
pop
outs
sbb
cs
push
mov
adc
mov
enter
or
leave
int3
dec
outs
mov
jecxz
and
adc
mov
xchg
xor
and
add
mov
mov
pop
mov
cmc
rcr
xor
fs
das
or
div
retw
mov
cmp
shl
adc
lods
jns
jnp
xchg
test
xor
jno
or
mov
les
bound
mov
inc
shl
inc
push
cwde
sub
sbb
xchg
cmp
xor
(bad)
push
adc
sbb
dec
xchg
dec
movs
push
leave
add
sub
push
fwait
xchg
pop
mov
aaa
jecxz
add
jecxz
ins
leave
dec
jb
dec
push
push
in
or
test
cmps
rol
jmp
imul
push
test
sar
lods
mov
sysret
xchg
icebp
sbb
(bad)
popf
scas
fs
mov
shr
lahf
mov
in
ret
mov
retf
jns
xor
ins
ret
cmp
shr
lods
mov
xchg
gs
movs
dec
mov
aaa
pop
les
lahf
int
test
and
add
cmp
fcomp
sbb
mov
inc
cmp
bound
push
cmp
push
cmp
sbb
enter
inc
or
cmp
adc
ins
bound
stc
(bad)
and
push
pop
sub
cmp
rol
gs
loopne
and
shl
push
jno
cmp
addr16
je
les
pop
movs
nop
mov
bound
mov
dec
push
xchg
in
mov
mov
test
and
sub
out
push
sbb
sub
fild
(bad)
test
popa
mov
scas
(bad)
sub
cmps
sbb
dec
icebp
and
popa
mov
cwde
js
pusha
out
sti
fisub
cmp
ins
sub
scas
enter
push
xor
pop
retf
stc
pop
mov
or
add
adc
nop
or
jb
out
adc
jge
inc
mov
dec
push
dec
shl
pop
mov
movs
into
push
daa
add
sahf
data16
stos
das
out
int3
pop
xchg
adc
jmp
mov
push
pusha
test
mov
xlat
out
pop
aad
pop
jl
out
(bad)
in
add
fwait
xor
popf
or
pushf
push
pop
add
je
sbb
cwde
sbb
pop
pop
and
jg
push
or
inc
movs
pusha
mov
(bad)
pop
push
mov
fnstsw
dec
jb
inc
retf
(bad)
jg
and
sahf
or
mov
or
out
(bad)
add
adc
movs
sub
pop
data16
jno
xor
outs
in
push
and
aas
out
icebp
jae
popa
push
jb
gs
pop
rol
pop
mov
mov
inc
(bad)
imul
sbb
inc
mov
into
(bad)
cli
and
xchg
pop
retf
inc
mov
or
hlt
jg
jns
mov
fs
cmp
mov
inc
mov
push
mov
movs
div
int
jmp
out
xor
mov
out
outs
jp
rcr
cmc
dec
cmp
jo
stos
enter
ss
push
mov
jle
aaa
mov
popa
daa
dec
mov
leave
sub
in
adc
std
or
je
jne
jae
push
sub
and
sbb
(bad)
int
inc
bound
outs
cmp
cmp
mov
cdq
mov
inc
cmp
(bad)
mov
cs
inc
out
push
inc
xchg
and
or
cdq
or
in
sub
and
or
pop
(bad)
jg
test
imul
loopne
jns
pop
out
adc
je
and
loopne
je
addr16
push
pop
xor
hlt
movs
call
enter
add
or
lock
add
xor
lds
jnp
mov
jle
mov
push
movs
mov
scas
clc
inc
cmps
mov
dec
push
jl
or
xchg
mov
scas
scas
shr
pop
or
repnz
js
mov
lods
and
and
repnz
fldenv
sub
mov
sbb
shl
mov
test
retf
fs
imul
add
ds
into
xchg
inc
xor
inc
arpl
cmp
mov
movs
out
outs
aaa
sbb
loopne
xor
adc
pop
push
push
sub
pop
inc
cs
orps
inc
xor
or
(bad)
popa
int3
mov
jle
adc
enter
push
mov
retf
cmp
(bad)
push
cdq
dec
push
nop
pushf
pop
inc
pop
mov
lea
sahf
or
(bad)
dec
(bad)
pop
cmps
xchg
pop
es
dec
add
inc
retf
inc
lds
stos
mov
movs
pushf
lods
lahf
or
sub
sub
pop
jae
rol
pcmpgtw
call
fld
adc
mov
jmp
sbb
or
sbb
dec
cmps
leave
pop
int3
call
mov
cmp
pop
repz
aam
cs
mov
jae
popf
jecxz
pop
pusha
leave
daa
in
or
pushf
lods
pusha
lahf
sbb
hlt
adc
mov
cmc
xchg
add
in
retf
icebp
std
jl
in
mov
mov
repz
test
or
adc
fimul
outs
xchg
js
ss
sub
inc
jb
lods
fmul
adc
adc
inc
pop
cmp
mov
fsubr
test
fiadd
es
imul
xchg
jns
pop
dec
jo
xor
loop
jg
iret
addr16
outs
fstp
rcl
in
into
je
adc
pop
bswap
mov
out
aam
cld
ds
retf
lahf
and
ficomp
mov
jnp
mov
adc
in
sti
mov
mov
ins
adc
add
outs
dec
sbb
ins
outs
ins
xor
push
sbb
mov
or
cld
jmp
adc
ror
stc
push
pop
jnp
std
mov
mov
xchg
dec
mov
pop
daa
xor
je
jg
test
cmp
jno
(bad)
and
xor
cmp
ss
sbb
leave
imul
icebp
dec
push
mov
jmp
bound
outs
lods
stc
idiv
sub
in
xor
dec
push
leave
test
imul
sub
hlt
or
and
jae
jne
mov
sti
stos
pop
adc
mov
retf
stos
mov
mov
rcl
movs
cmp
fadd
imul
fld
xchg
or
dec
inc
imul
inc
lods
jae
pop
imul
jae
hlt
loope
or
shl
cmp
ins
adc
dec
and
cmc
sub
les
mov
sbb
xor
mov
push
mov
or
jle
mov
and
inc
push
jae
jmp
or
out
aas
mov
jge
push
sahf
shl
mov
push
dec
dec
pop
xor
bound
adc
scas
sti
aam
add
mov
scas
scas
cmp
repnz
inc
out
or
sub
cmp
cmp
and
mov
mov
and
jne
or
sub
push
adc
aam
adc
push
mov
mov
inc
in
scas
pop
lods
xor
scas
fwait
(bad)
mov
jmp
neg
imul
movs
je
pop
lock
mov
in
outs
je
xor
inc
sbb
fidivr
pusha
sub
ins
jle
or
mov
aaa
jne
jmp
sbb
inc
fwait
push
push
in
out
test
repz
fwait
cwde
stc
test
lock
cmp
push
retf
into
push
outs
add
dec
iret
sub
loop
or
dec
mov
push
sbb
outs
imul
and
jae
xor
and
mov
jle
adc
inc
pop
xor
fidivr
jbe
adc
test
mov
ins
adc
jb
aad
arpl
jb
xor
mov
dec
sub
das
ins
ss
add
add
mov
loop
adc
xor
mov
xlat
fld
das
and
fnstcw
xor
jmp
lock
pop
lods
mov
cmps
and
cli
cwde
retf
call
push
cmp
cli
add
mov
loope
cdq
mov
pop
stos
daa
mov
dec
mov
sbb
pushf
jnp
mul
je
call
arpl
fwait
stos
push
xchg
out
inc
mov
cmps
sbb
xlat
mov
adc
mov
adc
test
jge
cmp
xchg
mov
pop
push
fbld
mov
(bad)
hlt
cmpxchg
push
repz
ret
sbb
dec
jp
loopne
cli
and
or
lods
pop
jge
jmp
int
fdivr
mov
fiadd
addr16
retf
mov
sar
adc
divps
push
pop
jne
stos
outs
arpl
or
adc
and
cmp
inc
or
stos
mov
or
inc
leave
sbb
out
sar
clc
ins
(bad)
xchg
push
mov
dec
(bad)
retf
add
or
mov
in
adc
mov
mov
dec
dec
sub
mov
adc
xor
ret
fimul
jl
cmc
mov
add
mov
push
cmp
mov
inc
or
cli
dec
pop
fild
test
push
popa
bnd
pop
out
add
add
or
add
or
sbb
jnp
out
loopne
fucom
in
loopne
scas
imul
xchg
fcom
rol
jbe
push
adc
or
test
push
es
add
ins
scas
xchg
in
jg
fcmove
movs
add
cmp
aas
xchg
out
mov
xor
loopne
arpl
fisubr
xor
pop
lods
xor
sbb
pusha
(bad)
das
mov
fistp
aaa
add
iret
cdq
sub
ins
fdiv
xor
pop
jnp
dec
jne
pop
iret
pop
ror
cmp
pop
jns
or
pop
iret
nop
fild
outs
popa
adc
jns
imul
test
fdivr
dec
fild
in
std
xor
inc
xor
sub
sub
xchg
pop
nop
mov
pop
retf
add
icebp
(bad)
mov
js
add
dec
(bad)
mov
and
mov
adc
cmp
and
or
sbb
pop
inc
je
aas
in
(bad)
push
adc
mov
pop
js
pop
dec
xor
aam
outs
dec
push
or
mov
mov
xchg
cld
mov
clc
add
jno
arpl
retf
aad
mov
and
sti
xor
leave
xchg
xor
call
inc
std
out
mov
movs
loopne
outs
push
push
adc
or
sbb
(bad)
lahf
dec
xor
jp
jne
sub
jmp
cmp
fiadd
pop
inc
adc
mov
stos
dec
inc
and
shr
push
jno
xchg
xchg
sbb
cwde
jne
repz
add
push
rcl
cli
outs
cmp
mov
xchg
xchg
and
mov
mul
sub
mov
popa
xor
ficomp
push
lds
in
leave
das
jge
inc
arpl
sbb
or
arpl
loopne
sbb
test
dec
push
(bad)
repnz
push
inc
pop
icebp
xor
data16
outs
cs
dec
mov
inc
cmp
dec
lahf
dec
movs
xchg
addr16
xchg
ja
sub
and
adc
inc
xor
push
dec
cmps
dec
dec
ja
inc
dec
outs
xchg
in
repnz
call
pop
mov
cmps
ins
cs
loop
in
mov
adc
or
scas
mov
and
pop
xor
cmps
xchg
hlt
jle
in
in
out
dec
fisttp
les
imul
mov
movs
xor
jecxz
fcomi
rol
icebp
repz
das
jp
ss
xor
mov
or
mov
sbb
mov
bound
mov
aad
xor
fwait
stos
fistp
in
jbe
cdq
push
jp
and
mov
or
sub
xor
mov
rol
fst
pushf
imul
cmc
mov
xor
add
inc
aam
ins
jecxz
jl
icebp
pop
adc
mov
or
dec
pusha
xlat
sahf
enter
push
xor
call
or
sub
shl
in
jge
mov
inc
pop
push
xchg
inc
aaa
int3
jae
jno
psllq
test
fsub
(bad)
sti
mul
shl
jp
test
into
pop
and
add
scas
pop
cmps
stc
cmp
push
aad
or
test
(bad)
mov
cdq
mov
xchg
cmps
out
push
lds
and
repz
xor
add
into
push
fs
popf
dec
and
sub
cs
inc
xor
loope
imul
pcmpeqb
and
mov
add
cwde
jns
cwde
test
fsub
push
fmul
cmp
push
scas
stos
cmp
pusha
mov
lahf
aas
sar
mov
sub
jno
add
stc
sbb
or
mov
daa
cli
mov
adc
xchg
xchg
shr
or
inc
push
sahf
xchg
(bad)
dec
fiadd
pop
mov
and
jns
xor
and
push
dec
mov
enter
jg
push
scas
test
and
sbb
push
sub
test
ret
xor
lods
jle
mov
dec
mov
inc
jp
mov
je
rcr
inc
lahf
sbb
add
or
jp
std
adc
dec
repnz
cmp
cmps
pop
call
and
jno
mov
test
mov
mov
push
xchg
mov
rol
push
movs
dec
mov
inc
cmc
fimul
xchg
dec
ret
cmc
inc
sub
fsub
and
cmps
inc
adc
in
dec
mov
int3
dec
ret
fwait
cmps
cmp
add
stc
out
bound
add
sbb
jecxz
mov
push
cmp
and
pop
cmp
and
sub
or
mov
in
cld
out
jb
sbb
mov
mov
push
icebp
mov
mov
(bad)
cs
les
push
dec
cmps
out
lahf
scas
fdivrp
jge
aaa
sbb
imul
in
in
outs
mov
xchg
dec
js
dec
jae
add
jp
and
ret
jne
pop
cmp
push
repnz
sahf
arpl
in
add
jl
popa
call
push
mov
popf
sub
(bad)
jb
stc
adc
rcr
pop
adc
(bad)
xchg
daa
adc
add
jbe
cld
dec
add
repnz
jle
popa
cmp
push
jae
cs
jae
push
imul
retf
mov
sub
lods
xor
cmps
iret
sbb
inc
jb
and
popf
outs
push
ret
and
enter
xchg
out
mov
jl
stos
mov
jg
lahf
ins
int3
mov
jmp
mov
mov
mul
push
(bad)
jns
sub
ins
movs
icebp
je
(bad)
pop
rol
mov
adc
add
mov
in
sbb
jge
and
mov
sub
pop
jnp
push
popa
hlt
stos
stos
in
ss
adc
out
jp
arpl
jecxz
js
aas
dec
leave
xchg
cmp
jnp
mov
pop
mov
ins
fnstenv
repz
mov
ins
int3
ja
shr
xor
mov
(bad)
std
inc
push
inc
jge
ret
sbb
mov
jne
stos
(bad)
mov
(bad)
lods
fcom
push
add
mov
adc
mov
test
(bad)
imul
in
ss
ret
cmp
outs
fist
jg
pop
std
push
lods
cdq
adc
outs
or
xchg
retf
fwait
stos
mov
fst
adc
scas
sub
jmp
lahf
outs
das
mov
inc
lods
es
mov
je
jecxz
outs
xor
pop
cmp
scas
out
mov
inc
mov
popa
stos
repz
and
test
repnz
jge
jp
push
mov
push
pop
scas
shl
cld
and
xor
sbb
lods
outs
mov
xor
mov
stos
pop
imul
call
mov
stos
pushf
ja
mov
inc
xor
dec
in
ins
inc
in
mov
add
js
repnz
lods
dec
add
repz
ins
xor
popf
aaa
lea
popf
dec
call
imul
or
push
ss
cmp
jecxz
sub
xchg
ret
push
loope
rcl
adc
push
fdiv
and
and
pusha
mov
or
movs
mov
mov
pop
jno
int3
xchg
mov
jmp
clc
cmp
mov
hlt
scas
jge
data16
sar
pop
retf
jmp
and
repz
xchg
inc
or
sbb
jecxz
jns
js
cmp
and
sbb
mov
cmps
inc
stc
sar
cmp
popa
sar
pop
ja
mov
push
add
add
cmps
cmp
mov
aas
pop
sub
test
lods
adc
dec
dec
xchg
cmps
test
loope
xchg
xor
ds
adc
daa
or
scas
aaa
push
and
shl
fdivr
xor
push
in
mov
inc
or
ror
cli
sbb
ficom
test
xchg
stos
inc
pop
ins
push
sbb
outs
pop
cld
xor
or
cmp
cs
je
repz
scas
jp
xor
sub
stos
dec
pop
or
xchg
in
or
mov
imul
mov
sbb
pop
and
cld
inc
cmps
sub
push
sbb
loop
std
mov
mov
adc
mov
bound
mov
or
imul
test
mov
pop
call
nop
mov
sub
jbe
mov
inc
jmp
sub
jmp
daa
and
pop
pop
cmc
and
jnp
mov
jae
and
and
loopne
mov
retf
in
scas
cmp
jbe
rol
int3
jns
scas
adc
shl
adc
mov
jbe
push
dec
jmp
lahf
or
push
enter
stos
aam
push
repnz
shl
sub
cmps
stos
push
mov
pop
call
je
or
leave
adc
call
mov
inc
mov
je
cdq
mov
fild
pop
mov
dec
sbb
ret
idiv
or
xor
out
repz
call
add
cmp
xchg
imul
push
cmps
inc
jbe
dec
pop
cmp
sti
shr
push
xor
mov
xor
mov
fsubr
pushf
xor
hlt
outs
ds
push
sahf
ja
jb
repnz
mov
imul
cmp
sub
push
cmps
in
in
inc
test
push
add
pop
push
shl
mov
ss
xor
mov
sbb
mov
mov
mov
ret
push
mov
cmps
dec
inc
mov
and
iret
add
scas
and
jbe
mov
in
xor
add
std
mov
or
mov
jl
gs
cwde
enter
aad
in
xchg
outs
cmc
out
mov
xlat
pusha
xchg
xor
sub
dec
aas
iret
mov
lea
dec
dec
rcr
xor
test
sbb
inc
dec
mov
hlt
addr16
dec
lods
inc
and
dec
ror
pop
scas
mov
cmp
rep
ret
cmp
clc
(bad)
xchg
mov
cld
nop
mov
mov
imul
sub
fxch
mov
fadd
sahf
ffreep
ss
(bad)
jp
ins
cmp
fstp
(bad)
fs
pop
jg
inc
fwait
inc
xchg
fadd
call
aad
shl
cmps
(bad)
loop
inc
cmp
adc
or
gs
xor
aad
pop
sub
or
or
aas
mov
ror
fdiv
lea
clc
cmp
mov
out
xchg
cmc
pushf
je
pop
test
sub
xchg
stos
and
add
cli
test
adc
xchg
dec
shl
es
adc
sbb
leave
jmp
xlat
xor
mov
pop
cdq
cs
sub
popf
fcmovnb
cmp
mov
es
mov
and
cmc
outs
adc
mov
jg
and
jmp
mov
dec
sub
fldenv
aad
retf
xor
into
sub
scas
sbb
nop
pop
cdq
sbb
in
dec
jle
mov
mov
out
jb
mov
ret
jmp
cs
stos
cmps
fucomip
loope
and
xchg
cmp
mov
aam
and
inc
stos
jle
ss
push
fwait
mov
push
shl
mov
cmp
fiadd
cmp
mov
popfw
jmp
test
addr16
ret
sbb
sti
mov
add
sub
pop
ret
ret
mov
sti
pop
lods
std
xor
xchg
sub
rcr
out
push
shl
jns
cmp
adc
jl
out
call
cmps
jmp
or
or
adc
nop
popf
enter
dec
mov
mov
imul
adc
cmp
xchg
push
adc
retf
xchg
pop
ja
or
adc
call
stos
dec
(bad)
mov
out
fcom
repnz
fdiv
or
adc
add
jo
repnz
add
div
xor
jo
out
leave
loope
dec
lods
enter
test
adc
jbe
mov
sbb
push
inc
loope
iret
inc
dec
xchg
movs
cmp
or
popf
in
push
dec
lods
ret
push
add
into
lock
cmp
cs
and
ds
dec
test
test
in
sub
aas
xchg
cmc
sbb
(bad)
jmp
fistp
xchg
add
xchg
and
scas
xlat
adc
fiadd
xlat
mov
fs
loop
das
pop
mov
dec
dec
(bad)
sbb
pop
push
std
cmp
gs
dec
adc
and
or
push
shl
pop
imul
push
aad
dec
fs
push
xor
jmp
scas
or
sahf
sub
fld
cmp
xor
pop
add
xor
aas
inc
aad
push
xlat
fs
mov
jnp
add
pop
xchg
adc
dec
or
frstor
ror
cmps
pusha
jecxz
push
das
push
or
sbb
pop
xor
mov
stc
sahf
jb
sbb
push
push
pop
dec
jl
es
in
call
in
and
push
mov
add
and
mov
(bad)
mov
setno
dec
xor
pushf
cmp
jno
xor
jmp
xchg
dec
std
cmp
jle
mov
pop
mov
dec
dec
mov
and
(bad)
hlt
adc
dec
cmps
sbb
enter
pop
cli
sub
and
aam
lds
aaa
adc
test
push
mov
hlt
mov
and
sahf
lds
jecxz
push
cwde
test
xor
mov
gs
(bad)
mov
inc
jge
pop
lods
in
in
adc
cmp
push
xchg
cld
and
pusha
jmp
lea
sar
(bad)
bnd
repnz
test
ror
push
retf
dec
or
adc
xchg
xchg
xlat
sub
xchg
into
movs
call
jne
xchg
ror
or
push
pop
pop
lds
fxch
sub
xchg
mov
out
in
dec
sub
(bad)
es
inc
inc
ds
xchg
add
xchg
push
leave
test
loopne
shl
ror
arpl
xor
test
xchg
(bad)
call
aaa
test
cmp
popa
test
ret
jb
test
jg
rcr
arpl
nop
in
fist
push
cmps
aaa
bound
cdq
(bad)
mov
(bad)
xchg
pop
sbb
fisubr
push
fidiv
jae
imul
push
xchg
shr
lds
pop
ret
add
aas
fs
out
xor
adc
add
js
ja
dec
or
ins
les
(bad)
push
mov
in
cmc
cmp
repnz
fdiv
fidiv
fwait
arpl
rcl
and
aaa
fcmovnu
lahf
and
or
dec
(bad)
fisubr
pop
xchg
ror
add
cmp
cmp
out
lea
mov
cmp
daa
adc
into
push
inc
add
data16
xchg
call
fdivr
pop
jmp
loop
loope
mov
jecxz
jp
xchg
movs
inc
push
cmps
arpl
adc
arpl
mov
stc
neg
fisttp
sub
(bad)
in
sbb
loopne
push
daa
add
pop
fcmovu
mov
lock
inc
stos
xor
jo
mov
aaa
dec
xor
or
repz
clc
std
int3
push
test
inc
and
dec
ss
inc
cmp
cmp
push
adc
xchg
addr16
or
popa
and
aam
jo
xor
mov
popa
mov
cld
cwde
call
jl
sub
mov
(bad)
(bad)
mov
mov
lods
in
pop
sbb
adc
test
cwde
sub
test
fimul
mov
sbb
(bad)
loope
dec
test
dec
or
retf
aad
jbe
mov
mov
sub
pushf
xchg
add
stos
xchg
pop
push
pop
inc
xchg
or
stos
xchg
push
jle
out
push
movs
daa
aam
scas
adc
mov
cmp
push
in
or
adc
mov
sub
sbb
pop
and
pushf
nop
adc
shr
ins
test
jmp
stc
push
dec
sahf
add
push
or
es
dec
adc
jmp
mov
fsubr
pop
mov
ret
lods
das
mov
fadd
add
das
cmp
idiv
push
add
and
jbe
addr16
sbb
es
loope
and
mov
out
adc
pusha
popf
test
jbe
xchg
mov
mov
xchg
fld
jns
ss
cmc
stos
fs
ds
mov
mov
and
xor
push
mov
outs
out
aaa
movs
jne
addr16
adc
jae
mov
div
(bad)
rol
out
jbe
and
push
or
pop
fwait
lds
dec
mov
inc
inc
pop
loope
mov
xchg
and
stos
or
jns
xor
or
pusha
mov
clc
or
cli
out
mov
in
push
add
dec
pop
dec
gs
cdq
aaa
cmp
jl
dec
push
ret
addr16
xor
loop
jne
aaa
(bad)
inc
bound
sbb
push
sub
pushf
daa
or
cld
hlt
push
inc
lea
or
jl
loope
mov
into
lock
cmp
mov
and
dec
(bad)
adc
imul
xchg
push
push
shr
xchg
push
pop
es
mov
cmp
inc
add
cmc
les
sub
xor
push
jp
out
pop
dec
xlat
arpl
jmp
ret
pop
das
ret
pop
sbb
xchg
popa
sbb
push
sub
jg
lock
sbb
loopne
icebp
loopne
push
mov
pop
or
xlat
xchg
mov
jg
dec
xor
fisttp
das
push
cwde
mov
pop
test
pop
mov
int3
jbe
mov
push
ins
pop
push
jb
push
xchg
imul
adc
les
loopne
cdq
cmp
and
inc
mov
jmp
in
mov
je
repz
fist
out
cmp
mov
and
ficomp
or
outs
inc
sbb
test
cmp
dec
inc
movs
stos
inc
jne
xchg
das
ins
lahf
cmp
mov
inc
mov
test
push
sar
mov
js
pop
mov
popa
sbb
bound
ja
xchg
xchg
out
outs
inc
adc
mov
mov
popf
aad
sbb
pop
xchg
in
pushf
ins
aaa
ins
jl
mov
rcl
popa
cdq
popf
jmp
mov
sti
shl
f2xm1
(bad)
cmp
jmp
cmps
mov
pop
xchg
dec
dec
(bad)
int
test
pop
ja
out
jns
lahf
dec
jns
adc
sbb
pop
popa
dec
add
sahf
cmp
pop
sar
inc
and
cmovle
mov
dec
mov
neg
adc
int3
pop
and
pop
push
dec
mov
jmp
fs
dec
add
pusha
jo
dec
xchg
test
clc
icebp
pop
gs
push
mov
aam
mov
ret
rcr
mov
out
(bad)
ror
fs
fsub
imul
cwde
sub
enter
iret
adc
cld
call
adc
stc
push
les
jg
call
sub
in
ror
fwait
mov
cmps
sbb
adc
(bad)
xor
sahf
push
push
pop
icebp
sub
movs
or
dec
push
test
sbb
lods
leave
inc
mov
cmp
daa
add
(bad)
popf
frstor
xchg
inc
popf
jns
jno
mov
push
jl
fisttp
xchg
stos
jnp
adc
inc
xchg
sub
outs
fwait
jl
xchg
and
add
mov
jmp
inc
sub
adc
pusha
xor
icebp
mov
scas
fnstsw
js
dec
in
add
bound
mov
lea
pusha
cld
es
call
clc
pop
push
push
xor
mov
adc
in
pop
out
bound
nop
fimul
jne
add
scas
push
(bad)
push
dec
mov
out
xor
push
dec
jle
ret
xchg
jmp
mov
xchg
mov
out
data16
inc
shl
jo
pop
fst
fwait
pop
test
push
shl
mov
xor
out
loop
test
addr16
dec
xchg
push
xchg
cmps
xchg
sti
mov
inc
scas
ja
fisubr
add
hlt
addr16
jns
or
inc
jae
mov
out
push
sbb
push
cs
mov
sub
loop
mov
addr16
sbb
cwde
push
pop
dec
adc
in
mov
mov
sub
(bad)
sub
jbe
pop
fsubr
cli
adc
imul
mov
sbb
mov
and
lahf
and
push
mov
mov
or
adc
xchg
sub
mov
sbb
pop
xor
dec
ret
repnz
mov
dec
push
into
mov
dec
nop
(bad)
jmp
sub
std
push
jns
mov
popf
jns
dec
ja
push
sub
push
inc
add
dec
pop
int
in
push
rol
jmp
xchg
les
imul
mov
ins
jmp
pop
sar
or
lock
sar
xor
dec
int3
mov
shr
inc
mov
retf
push
daa
or
std
mov
mov
sub
lods
neg
fldcw
or
outs
shl
shl
push
je
in
mov
push
dec
or
sub
cwde
pop
sub
jle
jns
and
xchg
sbb
out
fsub
lahf
iret
loopne
fadd
mov
mov
add
addr16
imul
mov
inc
rcl
cs
gs
aas
mov
sub
xor
xor
push
add
cmp
or
(bad)
xor
pop
data16
inc
lea
and
jl
jge
inc
mov
push
les
fdivr
imul
cmp
jns
ret
sti
rol
lods
pop
aad
or
(bad)
stc
fcomp
outs
fnstcw
add
adc
or
pop
(bad)
pushf
xlat
cmps
or
leave
mov
pusha
call
mov
retf
mov
rcr
in
add
stc
dec
rol
cmp
jnp
mov
mov
inc
in
sub
outs
fdivr
aam
ds
loop
js
call
lahf
cmp
fadd
aas
pushf
sti
mov
sbb
or
mov
jl
lahf
ja
pop
xor
push
push
push
loop
xor
stos
mov
or
lahf
mov
mov
pushf
push
sbb
into
dec
mov
out
pop
push
xchg
mov
int
sbb
push
jne
arpl
aaa
gs
push
cs
ja
dec
xchg
ins
lea
mov
sbb
cdq
popf
dec
xchg
xor
adc
mov
mov
cmp
cmp
lock
frstor
jge
cld
xor
retf
sbb
ins
push
jmp
sub
into
adc
add
les
repnz
cmp
lds
xor
ss
inc
mov
or
xor
mov
fild
shr
in
xchg
lock
inc
inc
cs
sub
cs
sub
mov
(bad)
pop
js
(bad)
cmp
inc
mov
dec
xchg
(bad)
sbb
scas
xor
sub
enter
sub
jge
mov
std
add
rol
cmps
mov
mov
outs
mov
retf
shl
or
xor
xor
(bad)
in
jle
aad
cwde
lahf
js
cmp
div
aad
pop
adc
xchg
add
mov
jb
and
cld
jge
retf
movs
lahf
aad
pop
outs
sub
pop
fbstp
sub
dec
push
fimul
pop
ret
mov
call
lahf
dec
add
jne
xchg
inc
(bad)
cmp
lods
test
les
icebp
mov
jl
dec
lea
aaa
add
aam
mov
out
je
sbb
sbb
sbb
adc
cwde
sar
xor
xor
dec
inc
stos
addr16
mov
movs
dec
jge
repnz
mov
add
bound
pop
push
xor
data16
push
xor
and
mov
les
or
cmp
stos
adc
pop
pop
(bad)
mov
out
jmp
aam
sbb
xor
pusha
pop
and
movs
call
add
ret
lods
sub
pushw
fstp
frstor
add
xchg
js
or
mov
mov
fiadd
mov
rcr
sub
push
mov
xor
jle
mov
nop
gs
inc
shl
pusha
jle
shr
loop
push
mov
ret
jno
test
cwde
enter
xchg
dec
mov
mov
mov
or
or
sub
loopne
sbb
adc
jo
popf
add
xchg
push
inc
ss
ja
pop
fisttp
dec
sub
adc
mov
test
hlt
fwait
push
add
push
not
pop
and
mov
in
fcomp
and
out
pop
dec
and
jp
mov
into
or
mov
add
leave
push
and
xchg
sbb
dec
popa
add
nop
inc
fisubr
hlt
fisttp
call
mov
cmp
movs
in
out
xchg
or
nop
cmc
in
ror
fdivrp
neg
pop
mov
sbb
fadd
xchg
push
or
pop
mov
jmp
sti
mov
pcmpgtd
adc
sbb
aas
arpl
inc
add
stos
les
push
and
cmp
repnz
sub
push
mov
adc
jg
das
mov
or
lds
(bad)
out
inc
mov
stos
test
les
mov
mov
mov
imul
shl
aad
and
mov
retf
adc
es
add
dec
adc
xchg
adc
lock
(bad)
hlt
push
sahf
repz
fnstenv
mov
xchg
or
sbb
inc
and
push
push
xor
xor
test
mov
mov
inc
sahf
jae
aas
scas
xor
icebp
jmp
clc
clc
retf
push
push
jmp
push
fbld
rcl
(bad)
jecxz
xchg
push
(bad)
push
call
jle
(bad)
not
pop
cs
cmp
cwde
pop
jmp
ins
stos
fisttp
push
int3
data16
or
dec
sti
or
xchg
(bad)
mov
mov
adc
mov
xchg
jmp
imul
loope
cmps
test
or
ja
inc
in
pushf
mov
daa
mov
mov
call
sbb
push
out
imul
and
out
cmp
mov
mov
dec
popa
adc
mov
or
movs
jae
ins
cmp
jmp
jmp
add
pop
shl
push
aas
mul
jl
shl
sub
sub
fild
sbb
lahf
shl
mov
shl
mov
aas
ror
cmps
shl
jmp
cmp
mov
cmc
aam
mov
into
movs
(bad)
mov
in
pop
mov
mov
mov
add
popf
xor
push
daa
sbb
repz
mov
inc
cwde
rcl
call
into
popa
push
mov
pop
inc
pop
xor
mov
sbb
pop
sbb
pop
xchg
popa
and
sbb
add
test
cdq
inc
xor
data16
scas
jge
or
push
add
jp
(bad)
cdq
adc
mov
jbe
jns
clc
popaw
lock
xchg
das
stos
jo
inc
mov
fadd
jl
adc
dec
add
out
sahf
rol
clc
aas
mov
aad
dec
imul
push
jp
ficom
loop
clc
jmp
mov
aam
adc
xor
sub
dec
lods
out
jnp
or
xor
dec
lods
test
inc
xor
jecxz
sub
mov
(bad)
outs
push
outs
xor
jecxz
ins
iret
fimul
enter
cwde
lock
xor
sbb
mov
pop
movs
pop
js
imul
dec
out
sahf
dec
or
and
push
cmp
adc
cdq
icebp
popa
fwait
sbb
retf
jl
sub
mov
push
jbe
inc
pop
xchg
add
xor
(bad)
rcl
shl
jecxz
xor
fstp
jmp
push
popa
loop
into
mov
movs
imul
xchg
movs
push
adc
jmp
mov
mov
in
cmp
mov
dec
inc
inc
pop
jg
js
and
stos
js
pop
xor
and
(bad)
fiadd
ror
xor
sbb
adc
fnsave
pop
popa
lock
jo
cdq
popa
dec
mov
movs
mov
(bad)
push
mov
cmp
add
add
mov
add
dec
cmp
repnz
or
dec
xor
mov
out
xchg
sub
mov
cmp
lea
xbegin
dec
or
sub
sbb
rcl
or
cdq
or
data16
fidiv
and
jns
fwait
inc
ds
dec
es
pop
xchg
mov
(bad)
pop
in
pop
rcl
jmp
in
aad
test
mov
sbb
fidivr
cmps
pop
push
mov
jae
retf
adc
iret
mov
jne
mov
aam
sbb
cwde
dec
xor
xchg
sbb
fiadd
mov
pop
shl
or
ins
sbb
aaa
fcomp
sar
out
mov
sar
cwde
adc
jl
pop
call
xor
push
aas
sbb
imul
sub
or
sbb
pop
push
xchg
mov
mov
add
int3
sbb
scas
mov
or
pop
xlat
mov
xchg
cs
push
xchg
rol
sbb
cmp
or
sub
push
shl
fisttp
scas
mov
inc
mov
cmp
add
mov
mov
in
(bad)
and
push
jbe
sar
xchg
xlat
sahf
imul
cmp
(bad)
sub
xchg
in
xor
out
neg
fincstp
add
pop
jg
aas
pop
jg
in
es
(bad)
and
es
or
jl
jae
add
adc
adc
adc
inc
adc
ss
cmc
push
xor
sti
mov
das
or
jmp
(bad)
in
jmp
rol
push
mov
xchg
ret
dec
xchg
ja
ror
mov
pop
push
pop
push
and
lods
adc
shl
daa
mov
dec
fist
out
pushf
lds
ffree
(bad)
call
or
in
dec
sbb
mov
scas
retf
mov
mov
cmc
xchg
into
mov
out
test
scas
in
lock
sub
xchg
sub
add
loop
aas
mov
xor
xchg
xchg
cli
sti
imul
and
les
enter
xor
adc
pop
or
xor
(bad)
mov
xlat
xchg
push
cwde
(bad)
push
daa
xchg
mov
xor
push
and
and
jmp
sub
into
mov
sub
push
int3
leave
(bad)
rcl
or
jle
cmps
push
and
xor
lea
mov
aam
cs
in
xchg
xchg
stc
add
dec
mov
lods
aam
jp
or
push
and
stc
push
mov
daa
fidiv
xchg
sub
ds
sbb
mov
in
fisubr
data16
mov
xor
jo
sbb
or
jmp
or
imul
sbb
xor
add
pushf
(bad)
push
jo
nop
(bad)
add
call
es
shr
adc
inc
test
int3
shl
mov
ret
mov
sub
lahf
mov
scas
retf
dec
adc
mov
sbb
jg
ins
call
ins
xchg
jg
ror
cld
and
shl
daa
in
xchg
mov
and
xchg
and
dec
jo
jl
lods
or
call
call
sub
(bad)
std
push
mov
cmps
call
mov
rcr
mov
pop
or
into
cli
bnd
js
mov
mov
xor
push
retf
in
inc
inc
fldenv
lahf
retf
push
mov
add
mov
sti
leave
pop
cmc
aad
imul
sbb
cdq
test
sub
fdiv
pop
mov
mov
fidiv
fldpi
inc
push
cmp
rcr
push
pop
(bad)
push
mov
sub
outs
mov
(bad)
mov
mov
xchg
push
xchg
pop
in
sub
jmp
rol
mov
inc
sbb
cmp
jns
call
ins
push
add
fdiv
xlat
ss
xor
dec
or
cmp
mov
in
push
iret
pusha
pop
sub
add
aad
fstp
inc
mov
xchg
add
pushf
mov
cmps
ja
test
push
pop
lea
pop
fstp
stos
scas
cmp
inc
and
push
scas
mov
sbb
xchg
or
mov
clts
jns
cmp
icebp
xchg
sub
pop
pop
inc
ins
cmps
dec
es
push
push
push
lds
fidiv
icebp
dec
mov
pop
pushf
push
mov
imul
je
arpl
test
mov
iret
inc
lods
test
jae
xor
ins
(bad)
sbb
fs
sub
dec
das
lods
xchg
and
int3
aam
jno
fsub
sahf
out
mov
stos
or
lock
std
hlt
pusha
(bad)
cld
mov
mov
xchg
bound
pop
fcomp
jmp
pop
and
inc
imul
jb
(bad)
xchg
sbb
ja
sbb
inc
mov
in
fs
jae
xchg
cs
cmps
addr16
xchg
push
mov
pop
mov
outs
mov
pop
push
ins
rcl
loope
sbb
fsubr
ficomp
sahf
ins
or
fmul
jge
xchg
cmp
mov
push
jbe
or
data16
jg
call
mov
ss
lods
repz
xchg
adc
sbb
push
sbb
fisttp
out
mov
adc
xor
or
sbb
(bad)
xchg
daa
stc
shl
shr
movs
xor
mov
je
mov
cmp
push
and
loop
inc
mov
xor
outs
ins
aad
mov
in
(bad)
div
fistp
hlt
mov
pop
sbb
test
cmc
adc
add
arpl
xor
sub
ret
mov
adc
inc
out
jno
icebp
xor
sub
mov
push
fwait
dec
jge
jae
or
daa
push
arpl
sbb
adc
hlt
dec
rol
mov
sbb
stos
ret
(bad)
ins
pushf
mov
mov
std
popa
sbb
pusha
(bad)
and
fcomp
and
sbb
(bad)
les
gs
adc
scas
ror
xchg
xchg
sub
call
sbb
test
cld
or
pop
adc
fiadd
ins
addr16
push
dec
adc
stos
rcl
xchg
jns
(bad)
dec
scas
dec
out
xchg
inc
adc
cli
sub
adc
retf
inc
jno
push
addr16
test
ins
mov
cld
movs
sti
hlt
fwait
mov
dec
xchg
adc
mov
or
shr
rol
mov
cmp
shr
fs
int
stos
cmp
fadd
xchg
es
or
ins
xlat
mov
dec
call
aaa
cwde
or
mov
iret
jb
daa
add
push
popa
call
mov
fsub
and
sub
stos
shl
sbb
cwde
push
mov
call
mov
mov
pop
repnz
push
movs
sahf
pop
mov
pop
xchg
sub
jmp
jmp
sub
dec
add
jae
fmul
pop
ja
dec
std
(bad)
sbb
jmp
mov
and
repnz
push
daa
inc
add
xlat
or
sub
jp
inc
daa
xchg
js
lods
lock
inc
xor
inc
hlt
(bad)
mov
shr
sahf
(bad)
pop
aaa
mov
in
popa
xchg
shl
mov
and
xchg
adc
jne
inc
mov
not
and
sbb
dec
adc
fild
call
icebp
pop
fs
and
shr
push
inc
mov
inc
in
punpcklbw
adc
jg
mov
(bad)
fcom
push
mov
pop
and
pop
or
retf
pop
pop
mov
adc
pop
(bad)
addr16
loope
push
daa
mov
test
mov
clc
add
push
outs
movs
adc
lods
jne
retf
sbb
es
es
mov
outs
or
addr16
(bad)
rcr
xchg
cmps
jg
jl
jge
lods
fadd
dec
movs
sub
push
sbb
stc
and
jne
iret
mov
mov
(bad)
int3
mov
imul
fbld
jl
(bad)
cwde
pop
xchg
add
retf
cmp
test
mov
jbe
add
mov
ror
dec
cmps
retf
jae
cs
add
outs
mov
jb
mov
push
mov
mov
aad
(bad)
dec
mov
sbb
pop
mov
icebp
adc
repnz
mov
gs
sub
jae
fcmovnu
adc
jne
fwait
jmp
jle
test
dec
xchg
inc
dec
add
(bad)
enter
imul
sub
imul
adc
add
pop
sub
xor
inc
out
mov
sub
frstor
sbb
mov
dec
shr
lahf
rol
pop
je
aad
cmp
adc
sbb
xchg
int
les
or
sbb
ins
xlat
xor
mov
icebp
mov
imul
test
mov
enter
add
adc
ret
xchg
mov
call
popa
fs
aad
xchg
test
rol
enter
xchg
scas
xor
jnp
les
je
mov
aam
pop
adc
jnp
pop
pop
jp
call
jecxz
pop
fmulp
iret
adc
sbb
(bad)
leave
inc
(bad)
out
xchg
jne
add
cmp
outs
cmp
sahf
mov
xor
je
mov
jg
dec
fld
lods
test
lods
and
(bad)
xor
push
and
in
es
add
xor
jg
cwde
in
in
lods
mov
imul
xor
test
adc
arpl
mov
xlat
cli
cmp
xchg
daa
and
xchg
sub
aam
mov
stos
(bad)
mov
arpl
inc
dec
xchg
sbb
push
push
inc
pop
lods
je
mov
repz
jmp
mov
xchg
cmc
ret
cmp
daa
les
ins
mov
imul
xor
inc
arpl
shr
test
bnd
cmps
popf
dec
sub
inc
neg
cmp
adc
arpl
(bad)
jne
stc
loop
stc
xchg
jo
inc
lahf
push
fld
cmps
cs
push
retf
cwde
jle
ins
sub
adc
push
mov
cmc
retf
mov
pop
xchg
mov
pushf
mov
arpl
nop
pop
les
fistp
test
mov
cmp
jb
add
jmp
mov
test
shr
push
aaa
ins
outs
mov
push
inc
cli
mov
shl
(bad)
sub
cmp
or
bswap
adc
pop
scas
mov
inc
mov
jp
popf
push
and
sahf
push
les
(bad)
iret
pop
lds
mov
and
mov
dec
int
fisttp
lock
sub
(bad)
mov
jae
out
add
enter
dec
dec
stos
push
xlat
loopne
rol
push
jg
das
cwde
in
lahf
data16
outs
lds
sbb
or
mov
push
cmp
cs
and
inc
mov
div
and
mov
cmp
fsubp
int
gs
xchg
mov
jo
loope
jmp
ins
or
out
inc
jnp
and
(bad)
adc
mov
sub
cwde
add
pop
dec
jb
pop
cs
(bad)
out
mov
in
jmp
add
cmp
or
push
mov
pusha
imul
xor
mov
inc
dec
cmp
sub
adc
cmp
mov
dec
mov
int
je
jb
dec
xor
inc
dec
push
mov
mov
out
movs
push
pop
shl
cmps
sub
out
jle
xor
mov
xchg
aaa
dec
fisub
stc
mov
jecxz
movs
enter
jp
inc
and
sub
fsub
pop
adc
shl
frstor
or
cld
mov
test
push
jge
aam
scas
push
and
pop
retf
test
aaa
out
mov
rcr
sub
fwait
cmp
add
push
movs
sahf
stos
inc
es
cld
pop
mov
and
and
jns
add
mov
pop
xchg
scas
cmp
(bad)
or
repnz
mov
arpl
out
jmp
clc
out
enter
cmp
out
(bad)
mov
shl
sbb
dec
mov
pop
fsubp
lahf
jecxz
fild
mov
dec
jae
ret
cmp
imul
loope
adc
push
dec
lods
xchg
stos
out
dec
in
(bad)
adc
scas
call
pop
or
popa
sbb
push
xor
sub
outs
jle
neg
pop
mov
cdq
cwde
push
ins
scas
bound
pop
inc
cmp
inc
fsubp
sbb
cmp
std
lock
(bad)
fdivr
jno
push
fidiv
mov
jo
or
pop
dec
gs
push
daa
inc
jns
fwait
mov
(bad)
hlt
fwait
das
dec
pusha
aaa
cdq
sub
jp
mov
jmp
xor
in
lods
lea
jecxz
sahf
nop
inc
int
sbb
push
retf
fcmovne
mov
ror
sub
lock
scas
daa
lahf
fidivr
cmp
shl
jmp
icebp
jns
push
rol
stos
push
adc
in
test
fs
xor
mov
cs
scas
jns
jnp
add
arpl
enter
(bad)
enter
sub
inc
scas
into
std
dec
and
arpl
inc
movs
sbb
fistp
xchg
addr16
test
js
jg
cmp
(bad)
dec
adc
or
call
out
add
iret
cmps
push
fucom
add
sbb
scas
(bad)
lahf
jecxz
sti
shl
ins
sub
hlt
ins
loope
in
cmp
sahf
pop
pop
xchg
cmp
out
(bad)
xor
(bad)
fnstsw
mov
sbb
pop
(bad)
leave
test
mov
imul
pop
fidiv
adc
push
movs
xchg
in
pushf
lea
pushf
call
cmp
pop
je
pop
mov
test
jo
mov
jns
cmps
fldcw
fisubr
xor
xchg
fcom
sub
mov
outs
adc
xor
dec
icebp
out
adc
mov
loope
scas
dec
out
add
jp
push
push
int
xchg
imul
sbb
test
add
push
js
ins
xor
fdiv
into
pop
movs
jl
xchg
jp
push
mov
xor
dec
jl
pop
cmps
(bad)
sub
fisub
xlat
push
gs
popf
sbb
cli
loopne
mov
icebp
lods
into
out
mov
out
jle
and
shl
fdivr
add
(bad)
mov
mov
cmp
mov
rcl
xor
pop
lock
mov
cmp
aas
shl
pop
popa
dec
movs
jns
(bad)
cdq
cmps
scas
jbe
int3
ins
sahf
scas
pop
loope
ja
lods
(bad)
cmp
out
adc
in
xor
bound
lods
or
(bad)
sub
sub
fbld
stos
or
xor
fcompp
jbe
add
mov
retf
pop
push
(bad)
mov
xchg
xchg
icebp
push
push
jg
push
das
push
mov
mov
imul
shl
dec
sbb
popf
movs
das
jns
in
das
add
dec
add
mov
or
arpl
aas
adc
pop
sar
cld
stc
in
jne
inc
gs
outs
pop
mov
scas
sbb
xor
and
outs
setge
rcl
in
mov
or
fisttp
lods
mov
fbstp
sbb
push
loop
xor
ds
lods
adc
mov
retf
mov
stos
inc
and
ret
push
bound
fdivrp
cmc
clc
not
mov
cwde
sub
jns
sbb
xchg
adc
cmp
fidiv
in
jl
inc
cdq
jl
mov
sar
outs
and
retf
mov
xchg
leave
xchg
xchg
movs
push
shl
call
push
(bad)
fwait
mov
add
fidiv
and
xor
adc
in
jmp
and
xchg
cmp
in
and
push
lds
push
mov
into
mov
jp
cdq
xchg
adc
out
xor
(bad)
(bad)
in
mov
test
lods
das
mov
sbb
aaa
call
out
xor
or
iret
push
popa
pop
pusha
cmp
jno
and
jne
arpl
les
hlt
in
jo
loop
jno
jne
xchg
xor
rcl
pop
ffree
shr
add
inc
pop
lods
ins
inc
mov
inc
mov
hlt
xchg
popa
shl
(bad)
cmp
jle
push
mov
xchg
cwde
(bad)
retf
pop
and
xor
hlt
jns
or
jo
inc
ja
jne
fwait
aad
ret
push
ds
inc
jge
push
jmp
sub
pop
sar
call
std
aam
xchg
mov
xor
and
jnp
xchg
cmp
and
xor
xor
out
fcmovnbe
pushf
nop
ja
push
leave
shl
mov
cmc
dec
mov
sbb
mov
jge
xchg
movs
das
pop
sbb
and
shl
pop
lahf
jmp
or
in
cmps
xchg
imul
jne
push
mov
sub
sbb
test
out
xor
push
cmps
sbb
shr
in
ja
jp
push
loop
lds
cmp
cld
sti
sub
test
mov
jmp
push
xor
pop
mov
or
mov
test
scas
inc
fldl2t
mov
mov
jmp
or
add
mov
fst
inc
outs
aas
inc
pusha
mov
dec
ss
mov
inc
jl
push
jbe
xlat
lods
sahf
inc
inc
cmp
arpl
mov
xchg
jmp
mov
jecxz
popf
sbb
or
jge
lea
call
jae
cdq
jl
test
in
cs
cli
lods
in
mov
div
push
and
daa
jg
pusha
sub
jno
ins
xchg
dec
lahf
and
sbb
aad
xlat
repz
js
xchg
dec
push
adc
adc
repnz
pop
(bad)
ffreep
push
mov
leave
push
test
xor
dec
jmp
xor
sbb
cmp
int
aad
jnp
and
scas
scas
loop
loope
mov
jb
mov
xor
mov
cmp
(bad)
stos
jg
lock
jns
jge
std
sub
push
sahf
and
pushf
sub
sub
cmps
jbe
scas
sub
jl
pop
fucomi
pop
inc
cmp
lods
adc
loope
adc
out
pop
xchg
idiv
xor
cmp
sahf
rcl
out
or
scas
loop
in
popf
ss
pop
mov
push
pop
mov
or
jae
inc
les
fwait
in
cmc
in
or
movs
pusha
push
mov
ja
popa
jl
out
xchg
push
jecxz
mov
outs
test
ret
leave
mov
stos
pop
and
pushf
mov
test
aaa
jo
(bad)
test
mov
jmp
mov
enter
inc
cmps
fistp
or
repnz
mov
mov
sahf
xchg
into
jbe
mov
push
push
xchg
xchg
pusha
lds
cmp
sbb
clc
les
rol
cmps
xchg
out
jo
scas
not
rcl
mov
fs
push
mov
adc
add
adc
mov
inc
pop
push
js
movs
rcr
or
cld
push
and
iret
cmps
scas
or
push
jp
vpmadcsswd
xor
mov
lds
or
lods
mov
mov
jl
ins
pop
retf
dec
js
ins
rcr
fsubr
fcmovnb
add
popa
imul
xlat
movnti
cmp
add
scas
out
or
or
mov
pop
shl
gs
adc
cwde
cmps
pop
cmp
lea
cmp
shl
(bad)
jmp
iret
add
adc
test
and
push
push
dec
(bad)
jae
in
xchg
dec
xor
dec
dec
dec
sahf
xchg
movs
cmps
loopne
ins
iret
es
movs
mov
and
adc
mov
xchg
add
test
fs
xchg
xchg
adc
imul
movs
pop
and
in
sub
dec
ret
mov
clc
punpcklbw
jl
imul
jo
lds
jae
mov
jmp
xchg
fisttp
cld
icebp
sub
mov
call
cmp
sub
gs
mov
fistp
jge
call
xor
out
and
mov
jbe
js
fst
xchg
cmps
mov
fs
ss
lahf
mov
push
mov
mov
repnz
add
inc
xor
dec
ins
pop
jl
sahf
pop
rcr
or
inc
cmps
arpl
cmp
dec
(bad)
jle
cmps
jecxz
add
sti
outs
dec
retf
xchg
add
push
das
scas
add
xchg
or
stos
mov
mov
cmps
xor
mov
fnstcw
xchg
or
daa
or
mov
adc
cli
fild
fs
in
xchg
fist
push
push
jo
out
jle
and
push
cdq
out
push
mov
jnp
sti
iret
sub
mov
xor
push
cmp
loopne
outs
push
outs
jmp
ins
pop
mov
add
in
xor
pop
(bad)
shl
loope
inc
out
sub
js
add
into
push
mov
(bad)
in
bound
fidiv
jmp
mov
test
es
pop
mov
sti
xlat
jl
xor
inc
repz
lods
jmp
fwait
adc
mov
pop
xchg
xchg
add
ror
loopne
out
arpl
ret
icebp
fiadd
or
ss
cmp
jmp
inc
ficomp
call
cmp
stos
out
cmps
xchg
fisttp
dec
or
add
(bad)
rcr
iret
in
dec
jno
aam
imul
movs
jg
pop
lds
sahf
adc
jne
ret
and
or
sub
fnsave
xchg
daa
inc
lock
std
sbb
inc
mov
mov
and
scas
lahf
icebp
lods
mov
(bad)
inc
cmps
repnz
cmps
push
dec
add
(bad)
test
jnp
in
and
mov
and
sbb
sub
mov
out
push
stc
or
dec
loope
or
sub
mov
jle
test
mov
cmp
pop
pushf
cmp
xor
ss
ret
push
imul
scas
fldenv
mov
cmp
xor
ficom
arpl
iret
test
push
dec
leave
ss
xchg
mov
inc
neg
int
push
mov
pop
sub
call
pop
xor
loop
enter
ds
fsubr
sub
sub
inc
mov
push
mov
inc
scas
jg
cmp
sub
pop
push
aad
adc
out
lds
xchg
xchg
adc
(bad)
in
outs
retf
fldenv
sbb
enter
pop
push
cld
mov
cdq
loopne
xor
push
arpl
(bad)
adc
mov
daa
cld
jnp
(bad)
fiadd
xor
add
cmps
enter
and
xlat
pop
retf
int
not
pop
rcr
in
outs
dec
mov
jmp
or
push
jp
jns
rcl
pop
add
xor
add
dec
sti
adc
test
add
mov
fwait
les
dec
ss
pop
inc
jo
and
xchg
mov
sub
jle
jns
(bad)
mov
scas
xchg
aam
xor
sbb
xchg
stos
dec
cmp
or
loope
clc
and
jnp
pusha
cmp
retf
je
mov
addr16
(bad)
or
dec
leave
cmp
mul
jl
mov
(bad)
xchg
xlat
int3
lods
inc
xlat
shl
das
adc
fwait
leave
dec
and
adc
adc
xlat
and
inc
dec
jno
outs
int3
mov
push
loop
lea
push
jnp
and
jae
aad
retf
jno
test
cmp
lods
out
fcmovnu
lods
(bad)
dec
es
dec
add
pop
mov
sbb
pop
push
loope
nop
sbb
dec
sub
xchg
mov
mov
test
and
ffreep
sub
loop
and
pop
add
or
arpl
mov
les
nop
push
sahf
xchg
push
fs
out
std
mov
inc
cmp
inc
stc
cwde
mov
jmp
jne
sbb
(bad)
xchg
xor
adc
stos
out
outs
or
sahf
nop
cmps
shl
push
int3
cld
in
iret
sbb
or
add
loope
ins
jmp
pop
mov
dec
pop
or
adc
cs
add
std
add
out
bnd
sti
arpl
test
or
sub
or
cmc
dec
push
inc
xor
cmps
mov
dec
inc
loop
movs
push
loope
cmp
movs
jmp
rcl
jae
int
mov
pop
and
fisttp
xor
int3
add
push
xchg
out
daa
daa
cdq
jbe
or
mov
sub
clc
sar
sti
push
push
clc
aad
adc
test
call
jle
xchg
es
outs
pop
dec
sub
rol
imul
int
push
clc
sbb
sti
push
or
mov
mov
imul
xor
cli
cmp
or
cdq
cmps
lds
sub
pop
and
fs
ins
ret
in
mov
dec
jp
mov
std
hlt
dec
repnz
fcom
xor
mov
ins
push
rol
clc
fsub
std
mov
mov
dec
push
cld
push
jge
pop
ror
dec
push
loopne
sbb
and
ds
pop
inc
sub
ficom
push
pop
enter
mov
out
mov
cmp
adc
sub
push
adc
fdivrp
jno
xchg
cli
(bad)
push
dec
outs
pop
arpl
mov
popa
sub
enter
shl
push
int3
cmp
jg
adc
cmp
adc
shr
push
cld
push
ins
adc
jge
jp
ins
or
and
retf
sbb
idiv
js
jge
repnz
mov
cdq
dec
inc
retf
jbe
mov
or
fldcw
push
(bad)
jnp
push
push
pop
pop
jb
add
inc
cmp
and
adc
stos
(bad)
fmul
in
pop
call
into
fmul
pop
(bad)
out
mov
cmp
jmp
scas
outs
dec
mov
dec
imul
sub
cmps
fs
imul
dec
jle
enter
aam
adc
and
lock
retf
ret
daa
xor
fwait
loopne
xchg
mov
arpl
add
jge
(bad)
stos
mov
or
pop
push
cld
jmp
popf
cli
add
pushf
popf
mov
(bad)
sbb
cmp
fcmovnbe
popf
cmp
jg
test
repz
dec
add
sub
jne
jns
out
sub
adc
out
test
or
int
push
cmp
call
push
test
and
sbb
scas
pop
out
mov
repz
fwait
mov
pop
(bad)
push
sbb
int3
fcmovu
mov
stc
test
arpl
mov
(bad)
add
xchg
jge
sub
fst
pop
sbb
push
leave
and
les
and
test
sbb
jo
(bad)
mov
lds
retf
push
sub
xlat
cmp
xor
inc
sub
mov
fwait
or
pop
jne
push
loop
adc
pop
xchg
int
mov
dec
cmp
les
ins
push
pop
movd
mov
loopne
adc
xlat
push
and
xchg
sbb
iret
repnz
sbb
cld
xchg
cmp
lods
stc
shl
push
shr
adc
(bad)
cdq
fld
push
(bad)
mov
movs
mov
ret
add
push
scas
fcom
pop
mov
push
scas
shr
jmp
mov
ret
pop
ja
div
xor
jo
mov
jmp
or
lods
repnz
aam
dec
outs
and
shr
dec
cmp
mov
cmp
sub
pop
dec
jmp
fisubr
addr16
jo
retf
xor
outs
fsub
loope
ret
sub
jbe
pop
popa
inc
adc
xor
cmp
sbb
stos
hlt
mov
xor
pop
and
xchg
ds
mov
push
dec
xchg
stos
stos
call
cmp
imul
dec
or
and
sbb
(bad)
cmps
mov
pop
in
or
xlat
sub
mov
dec
dec
xor
addr16
cdq
es
mov
xchg
in
mov
icebp
les
or
inc
popa
xchg
or
lods
add
arpl
dec
adc
cmps
xchg
mov
sub
les
fwait
sub
cli
add
mov
or
mov
push
stos
cdq
call
xor
mov
in
cmp
jmp
dec
shr
fld
call
add
lods
mov
stc
mov
repnz
inc
jp
inc
add
and
lea
xor
stc
pop
movs
and
and
jecxz
int3
or
push
retf
out
sub
test
aad
bt
push
repnz
movs
out
dec
inc
lds
sbb
dec
fucomi
stos
int
loope
push
cmc
pop
mov
rol
loop
test
aam
ror
int3
sbb
push
xchg
js
push
ror
inc
pop
hlt
sar
cdq
sbb
retf
movs
std
mov
or
inc
push
fwait
or
outs
adc
aaa
mov
cli
pop
jmp
(bad)
adc
in
xchg
retf
addr16
jmp
pop
popf
jp
pop
ret
sub
sub
push
sahf
sahf
fild
out
retf
mov
shr
test
(bad)
cmc
sti
movs
jnp
js
mov
push
daa
jbe
das
lock
sub
xlat
rol
mov
pusha
fisub
ror
in
movs
jecxz
ret
retf
dec
sub
in
idiv
cmp
dec
pop
xchg
push
loopne
sub
pop
or
dec
mov
xor
rol
xor
pop
mov
fistp
or
shl
inc
or
int
mov
jecxz
imul
cmps
ret
inc
push
push
adc
or
jae
xlat
sub
jb
xchg
neg
inc
mov
pop
mov
loop
jg
dec
mov
mov
out
rol
out
inc
in
jns
inc
push
movs
repz
imul
ds
jl
push
mov
aas
stos
in
fisttp
adc
scas
mov
stos
ret
cmps
and
ret
pusha
dec
sbb
js
movs
cmp
adc
add
push
xchg
jl
push
retf
sbb
jb
dec
cdq
cmp
out
push
add
test
cmp
jns
out
fwait
inc
adc
mov
and
jno
inc
test
sti
es
adc
adc
in
mov
push
lea
mov
sbb
mov
push
inc
push
scas
in
or
and
sbb
xor
inc
jp
fld
fs
mov
iret
cmp
lods
or
pusha
lock
xchg
sbb
pop
loop
leave
mov
retf
mov
inc
ja
and
jnp
stos
inc
repnz
icebp
popa
mov
jb
loope
xchg
jmp
aad
sub
cmps
mov
and
test
loop
push
pusha
push
frstor
addr16
mov
scas
lahf
pop
dec
hlt
sub
div
pop
add
push
adc
div
mov
add
cmp
fimul
cld
fistp
dec
adc
in
pop
xchg
push
cmp
lahf
bndstx
stos
js
or
pushf
sar
dec
xchg
sar
xadd
mov
xchg
jns
ss
cld
mov
inc
push
rcr
mov
dec
dec
pusha
outs
(bad)
jmp
cmps
aam
adc
cmp
lods
mov
shr
mov
xchg
xor
or
dec
mov
aam
imul
jbe
xor
in
ins
popf
sti
or
repz
movs
push
push
jp
xor
ret
push
sub
in
hlt
mov
cmps
lea
inc
aad
cwde
ficom
adc
fidiv
xor
mov
pop
mov
push
push
jae
pop
mov
pusha
popa
mov
adc
ins
jl
cmp
sub
jb
popa
add
mov
dec
test
jnp
scas
lods
sbb
das
pop
mov
add
repz
cmp
sub
je
xor
test
loope
test
lds
jae
(bad)
pop
mov
daa
pop
repz
addr16
pop
mov
add
jmp
xchg
sbb
adc
dec
cmc
xchg
mov
push
retf
bound
xchg
adc
gs
lea
sbb
jbe
sti
push
push
nop
push
push
push
xor
popf
xor
jae
das
dec
pop
mov
dec
cmp
nop
test
js
data16
cmp
pop
and
or
scas
aaa
ss
das
outs
in
add
jb
inc
out
lahf
bound
inc
in
add
shl
mov
rcl
mov
or
mov
dec
mov
push
mov
fnstsw
shr
push
dec
mov
(bad)
std
inc
mov
sub
jge
cmp
add
movs
push
mov
and
aas
jnp
xor
mov
inc
fsub
inc
cwde
add
repz
mov
fadd
adc
mov
movs
div
imul
jo
sbb
or
nop
sbb
jae
ins
sub
div
rcl
neg
fs
inc
dec
add
in
test
dec
push
dec
pop
stos
jg
or
mov
adc
test
sub
mul
pop
scas
stos
fidiv
and
and
adc
test
pop
popa
clc
addr16
adc
out
ja
jle
xchg
cld
out
mov
pushf
shr
and
retf
add
gs
adc
add
loop
fs
xchg
outs
mov
or
call
cwde
mov
je
icebp
xchg
sbb
push
ss
mov
mov
std
imul
and
aaa
mov
out
or
adc
in
jp
pop
inc
leave
jo
(bad)
adc
fild
and
(bad)
fadd
mov
jnp
enter
sbb
add
xor
les
mov
rcr
lock
ins
xchg
outs
bndldx
or
fld
jecxz
icebp
repnz
sar
stos
das
push
push
add
dec
push
mov
cmp
fcmovbe
(bad)
fist
jbe
jecxz
dec
mov
xor
das
fwait
fwait
dec
dec
inc
sti
mov
bound
cmp
call
mov
or
push
jg
add
mov
fld
mov
sub
shr
adc
dec
pop
cmp
mov
dec
mov
stos
and
pop
imul
std
mov
imul
loopne
mov
in
test
sahf
inc
mov
jo
mov
fnstenv
jne
adc
pop
xchg
sbb
xchg
aam
lods
mov
cmp
and
add
inc
mov
jns
nop
popf
or
jmp
lods
scas
scas
pop
inc
push
movs
dec
scas
lods
(bad)
call
lea
sbb
adc
leave
jb
push
xchg
or
cdq
cli
sbb
jecxz
test
ins
mov
scas
sti
push
std
adc
popf
xchg
out
arpl
ret
jle
cdq
rol
and
add
ja
retf
add
inc
xchg
pusha
int
fstp
and
or
test
jp
dec
mov
mov
jnp
jge
jl
sbb
xchg
ret
jno
ficomp
mov
out
push
shl
jno
mov
loop
popf
movs
mov
xor
jae
ror
out
adc
hlt
outs
cli
out
test
cmp
dec
cld
fwait
jae
adc
xchg
jb
mov
es
mov
add
add
fstp
ror
mov
jne
adc
mov
lods
cmc
mov
in
push
push
sub
pushf
xchg
mov
icebp
jns
dec
rcr
shl
pop
arpl
and
popf
dec
pop
sub
mov
add
mov
arpl
ins
cwde
fld
jmp
lods
jle
fndisi(8087
or
(bad)
in
push
enter
rcr
xor
inc
fwait
cli
mov
mov
in
push
sub
cdq
add
inc
adc
cmp
std
sub
xchg
(bad)
imul
sub
pop
pop
repnz
cmps
cmp
nop
inc
pushf
vcvtss2si
push
or
pop
xlat
xchg
js
loop
nop
ds
mov
jnp
mul
sti
test
clc
loopne
popf
and
out
push
aaa
test
jo
or
xchg
jne
push
sub
stos
ds
or
cmp
pop
nop/reserved
jmp
fidiv
fs
xchg
sar
mov
rcr
outs
std
and
addr16
scas
jp
dec
test
out
adc
ins
enter
int
outs
in
mov
pop
imul
xor
mov
mov
fisubr
sub
jbe
dec
jne
or
push
mov
xchg
or
pop
popa
test
rol
inc
jae
bound
add
lock
xchg
xor
adc
arpl
(bad)
push
les
sti
sub
es
push
pushf
retf
pop
jmp
jg
inc
lds
ja
sbb
ds
sub
cmp
(bad)
pop
push
pop
sub
inc
sbb
push
das
adc
jnp
inc
(bad)
jb
retf
nop
pusha
dec
shl
mov
rol
mov
imul
add
push
jmp
cmp
dec
in
lock
aam
push
push
sub
push
xor
push
(bad)
push
cmp
mov
addr16
xor
cmp
jns
dec
add
sub
clc
xchg
push
mov
jle
pop
or
stos
or
(bad)
adc
cmp
scas
and
ret
movs
cmc
lods
mov
out
lods
test
xchg
jge
xor
cld
mov
repnz
push
int3
arpl
jb
mov
retf
fld
add
mov
popf
call
add
jo
lods
inc
popa
fadd
jb
cld
add
retf
in
push
stc
adc
and
stos
int
scas
(bad)
daa
imul
sbb
stc
mov
xor
into
add
add
xor
imul
inc
clc
sub
lea
ret
dec
dec
fmulp
mul
dec
and
inc
add
jno
jbe
and
inc
jnp
repz
and
jns
mov
and
outs
jg
add
pop
in
jmp
adc
xor
or
adc
or
(bad)
jp
shr
fs
jp
mov
clc
xchg
adc
add
scas
xchg
mov
shl
mov
cdq
inc
xchg
(bad)
fsubr
es
mov
dec
xor
pop
jns
and
jecxz
and
inc
sub
jge
or
arpl
or
adc
sub
aas
sbb
lock
ds
mov
fcomp
daa
jl
and
scas
inc
add
or
test
sti
out
xor
jno
(bad)
xor
push
and
inc
mov
or
test
dec
int
pop
push
inc
lods
adc
adc
push
add
xchg
push
pop
or
and
int
or
movs
and
or
xchg
cmps
rcl
shl
xor
xor
pop
mov
sbb
xchg
jp
ja
and
scas
adc
rcr
fadd
ret
js
add
nop
ja
stos
(bad)
dec
aad
push
repnz
xor
xor
loope
(bad)
mov
into
cmp
jae
mov
js
aas
and
and
sbb
inc
daa
mov
adc
sbb
cs
mov
div
aaa
mov
push
shr
mov
lods
call
(bad)
push
dec
clc
retf
loopne
pop
jecxz
(bad)
lea
dec
xchg
data16
pop
sahf
xchg
pop
adc
das
js
pop
push
fidiv
mov
aaa
shr
inc
test
fcmovb
or
fdivr
es
scas
addr16
cdq
fnstcw
clc
int3
dec
mov
jmp
xchg
jae
leave
or
xchg
fmul
pop
add
dec
nop
mov
jmp
and
fsubp
add
popf
xor
scas
push
xlat
mov
dec
popf
call
fisubr
pop
lock
hlt
adc
gs
jmp
cmp
pop
inc
mov
test
mov
mov
ins
dec
push
adc
dec
cmp
test
shr
or
fstp
dec
test
scas
movs
cmps
and
fwait
mov
cmp
jns
aad
pop
sub
ror
add
jl
out
or
sbb
mov
and
dec
xor
daa
mov
jp
or
ds
loop
das
lock
sbb
jmp
mov
ss
xchg
mov
in
sbb
dec
movs
sub
or
pop
mov
mov
std
cld
sar
sbb
iret
dec
pop
push
call
mov
test
or
fldenvw
out
sub
test
(bad)
mov
adc
lods
sub
push
cmp
sub
mov
mov
xchg
or
fistp
ret
adc
dec
jl
int
outs
(bad)
imul
push
add
adc
jmp
ret
and
int3
dec
mov
mov
lods
cmps
sub
outs
inc
sbb
mov
inc
or
push
leave
mov
inc
mov
or
jb
(bad)
jmp
xchg
enter
xor
ficom
dec
scas
xor
in
dec
pop
dec
ret
icebp
cld
adc
pop
cdq
mov
dec
mov
addr16
add
jp
nop
xor
xor
out
jo
sbb
xchg
sub
call
idiv
les
or
out
adc
xchg
sub
repz
dec
xchg
pushf
xor
enter
sbb
jg
mov
inc
sub
jo
push
fcmovu
dec
mov
call
fsubr
test
or
ss
rcl
dec
add
(bad)
fsubr
out
aas
jmp
adc
(bad)
loop
inc
or
push
add
loopne
int3
cmp
push
out
fwait
leave
add
enter
rcl
ins
imul
push
cld
ins
bound
movs
jge
outs
fild
add
iret
mov
ds
xchg
or
or
pop
xchg
and
push
stc
scas
sahf
pop
fs
push
mov
div
shl
scas
ins
int3
jmp
pop
retf
je
and
clc
and
dec
aam
into
out
sbb
shr
rcl
jno
popa
shl
inc
inc
sbb
test
ds
dec
inc
add
fdiv
mov
test
or
sub
sar
mov
mov
popf
stc
cmc
in
xor
adc
dec
mov
hlt
jmp
jmp
inc
push
xor
dec
and
cmps
jl
rcr
cmp
jb
aad
mov
outs
ss
movs
(bad)
sbb
cmps
leave
pop
mov
add
jns
push
fiadd
(bad)
sub
push
scas
ficom
js
stos
pop
pop
and
adc
mov
(bad)
int
imul
mov
push
inc
mov
loopne
add
push
or
push
test
and
xchg
lds
cmp
xchg
inc
cmp
(bad)
and
ret
pop
dec
push
xchg
dec
mov
dec
sub
push
and
out
(bad)
sub
out
mov
and
xchg
pop
stc
mov
jecxz
sbb
jne
(bad)
mov
cmp
xchg
popf
fld
jp
push
xchg
xor
fidiv
aaa
adc
push
jmp
pop
push
xchg
jns
lock
sbb
xchg
pop
aam
mov
lods
adc
repnz
xchg
stos
cmc
sub
dec
dec
add
imul
add
ja
iret
popa
shl
or
out
xor
add
dec
jmp
mov
aad
loope
hlt
dec
or
mov
push
out
cmc
repz
cli
test
and
test
wbinvd
add
mov
inc
mov
xor
sbb
xchg
pop
xchg
sub
fadd
call
hlt
sub
inc
xor
cmc
fst
jbe
pushf
iret
je
fs
retf
scas
inc
out
dec
lahf
fbld
mov
outs
xchg
pop
imul
mov
clc
outs
mov
(bad)
mov
aad
pop
sub
mov
ins
call
fcomp
xchg
test
adc
into
daa
push
adc
sar
es
xchg
cld
push
mov
mov
repnz
pop
dec
jnp
gs
scas
dec
dec
idiv
repz
and
ins
outs
addr16
nop
cmp
adc
das
xor
rol
in
fsub
jnp
in
jne
jb
mov
imul
sub
xchg
lahf
lea
or
pop
mov
xchg
movs
jecxz
addr16
inc
sahf
popa
jae
cmp
xor
adc
stc
cmp
sub
adc
lahf
jnp
aam
inc
inc
cmps
int
xchg
stos
ja
mov
int3
sbb
rcl
test
inc
popa
adc
adc
into
mov
ins
ror
or
add
ret
ds
(bad)
jb
jae
adc
sbb
xchg
push
in
mov
mov
dec
push
inc
xor
lods
pushf
and
pop
dec
sbb
pusha
int
xchg
dec
lea
mov
cmp
retf
movs
or
push
and
xor
mov
fild
adc
lea
jp
xor
push
push
call
adc
dec
cmps
push
aaa
add
leave
out
push
pop
ret
ins
fwait
mov
xor
clc
adc
ror
cmp
inc
jmp
pusha
cmc
retf
fimul
push
add
inc
sub
lods
in
cmp
ret
or
add
cmp
sbb
aas
(bad)
lods
not
sbb
dec
pop
repnz
mov
xor
pop
popa
or
(bad)
xchg
(bad)
aaa
mov
mov
jmp
mov
scas
(bad)
sub
(bad)
(bad)
adc
jmp
clc
ins
jp
aam
enter
daa
xor
stos
shl
addr16
icebp
mov
fisub
movs
jne
nop
mov
inc
(bad)
xchg
mov
jp
mov
cmps
sahf
rol
pop
retf
mov
and
xchg
test
(bad)
loop
sub
cwde
inc
mov
mov
sbb
shl
mov
sub
sti
ror
xchg
add
cmps
or
jmp
fidiv
pop
cmc
push
adc
ror
mov
retf
xchg
adc
add
sbb
mov
mov
mov
(bad)
shl
call
mov
mov
ffreep
ins
xor
aaa
cmp
sub
jne
cmp
nop
adc
inc
aaa
mov
push
and
mov
xchg
push
dec
jae
jo
rcl
icebp
mov
push
xlat
cmp
xor
outs
inc
fidiv
jmp
cmp
test
loope
sbb
(bad)
cs
popa
dec
fcom
cmp
push
loope
(bad)
retf
xchg
stos
bound
outs
retf
push
cmps
inc
sub
xor
push
call
movs
mul
jae
mov
call
loopne
lods
push
cld
in
aas
adc
adc
jae
arpl
clc
mov
push
pop
pop
(bad)
adc
outs
gs
pop
mov
adc
mov
std
pop
mov
xchg
icebp
popa
data16
push
jb
pop
das
fstp
jb
fimul
cmp
test
repz
jns
(bad)
ins
xor
xchg
movs
or
jno
dec
adc
push
out
mov
fwait
hlt
pop
ficom
cmp
(bad)
mov
shl
push
mov
and
xor
cs
call
aad
jmp
shl
lods
jge
mov
and
xor
add
fist
push
and
mov
ja
(bad)
and
push
adc
xchg
stos
mov
adc
push
fldcw
jae
retf
sbb
and
(bad)
mov
pop
xchg
(bad)
push
fidiv
ja
inc
or
mov
call
bound
push
out
or
mov
in
xchg
stc
sbb
fs
lods
dec
in
loope
cs
push
mov
push
int3
not
test
test
and
jns
pushf
push
or
ins
cmp
fnsave
je
sbb
mov
loope
xor
sti
sbb
or
shl
cmp
xchg
mov
adc
xor
dec
das
mov
imul
(bad)
mov
loopne
stos
jle
fiadd
nop
xchg
in
jo
mov
int3
add
repz
js
mov
test
sbb
push
in
and
test
add
pop
xchg
xchg
mov
jbe
lahf
mov
mov
cmps
and
rcl
fisub
jnp
mov
lods
inc
lock
data16
mov
push
mov
je
(bad)
jmp
pop
xor
test
xchg
mov
mov
(bad)
ja
cmc
adc
cmp
fisubr
jo
xor
(bad)
push
outs
xor
arpl
adc
pop
sub
mov
test
ret
xchg
sub
inc
rol
in
dec
cmps
mov
das
ins
enter
push
jb
cmps
int
xor
fisub
popa
aaa
clc
inc
sbb
sbb
(bad)
mov
lea
jmp
pusha
jmp
pop
add
xlat
sti
es
add
ja
adc
xchg
or
xchg
xchg
(bad)
sbb
test
outs
popa
scas
inc
push
clc
or
lahf
icebp
cmc
out
cmp
add
fcmove
arpl
xchg
ffreep
xchg
xor
inc
loope
push
bound
mov
ret
xchg
add
or
dec
repz
test
sbb
(bad)
mov
gs
mov
inc
jmp
pop
xor
and
std
out
xor
cmp
and
or
and
(bad)
cwde
aad
xchg
popf
sbb
jmp
mov
push
gs
and
pop
fwait
popa
nop
push
cmps
adc
shl
(bad)
xor
cmp
push
add
dec
ins
repz
push
inc
mov
in
push
aam
(bad)
jp
and
rcr
xchg
xchg
mov
mov
fdiv
jl
mov
loopne
data16
dec
test
jo
pop
inc
ins
call
mov
or
inc
jg
(bad)
div
push
pop
inc
push
int
sbb
add
repnz
and
inc
call
div
imul
ss
jge
mov
mov
loope
and
out
mov
int3
daa
mov
push
mov
xchg
and
ds
std
cmps
xchg
cli
shl
ror
mov
sbb
nop
xchg
push
pop
jg
daa
dec
arpl
mov
in
fcmovbe
inc
std
iret
cmps
imul
test
jae
dec
(bad)
xchg
xchg
test
fst
mov
mov
not
retf
sub
push
cmps
dec
mov
outs
push
js
cmp
call
or
mov
dec
mov
into
mov
dec
sub
loope
sub
cmp
or
pop
(bad)
sar
mov
ror
fiadd
out
pop
and
fldcw
push
hlt
es
nop
xchg
jl
mov
cmp
add
adc
stc
and
sub
sub
dec
cmp
push
push
sar
sub
inc
mov
inc
jmp
mov
scas
xchg
jo
leave
lods
adc
nop
cmp
cmp
add
xchg
jns
fild
add
push
pop
cmp
and
xor
add
sbb
push
hlt
pop
hlt
push
out
int
shl
or
cmp
mov
jge
or
inc
frstor
jecxz
add
sbb
in
(bad)
sti
or
loop
jmp
sub
and
fld
cmps
fisub
push
mov
pop
mov
aam
mov
into
mov
repnz
dec
mov
and
adc
jp
mov
es
jl
add
fnstsw
pop
cs
adc
jecxz
test
push
and
jbe
fs
push
movs
add
rcr
inc
dec
gs
addr16
shl
pushf
or
add
js
iret
test
out
test
std
cmp
daa
cmp
in
mov
cmp
fdivr
mov
sub
adc
inc
jns
sahf
(bad)
adc
ds
outs
jp
dec
in
leave
cmps
cli
cmps
or
es
and
jge
inc
adc
inc
call
aas
jge
sub
fcomp
mov
sub
out
shl
arpl
rol
iret
movs
xlat
or
xchg
enter
pop
push
push
pushf
fisubr
xor
enter
scas
add
add
loope
nop
push
cmp
movs
rol
les
xchg
jno
retf
mov
loop
jecxz
(bad)
jecxz
mov
inc
stc
mov
mov
pop
je
pop
xchg
stc
repnz
lds
push
call
and
adc
and
xlat
(bad)
loop
sbb
cmps
inc
shr
mov
jo
cwde
and
gs
inc
and
ins
movs
push
xchg
call
scas
(bad)
dec
aad
pop
pushf
jne
int
adc
mov
jns
dec
pop
xchg
adc
and
pop
or
and
idiv
mov
and
ds
cmp
dec
pop
mov
pop
jle
pop
fisubr
pop
fcom
adc
push
test
adc
and
mov
into
and
outs
add
cli
fimul
loop
jmp
(bad)
bt
xor
lods
test
cmc
lds
adc
les
dec
cmp
stos
leave
adc
cmps
pusha
(bad)
cmp
add
(bad)
(bad)
jg
xor
jns
ret
fnstcw
and
call
xchg
sub
pop
push
sub
ror
sar
adc
addr16
in
fmul
add
push
fist
leave
out
scas
loopne
es
imul
fimul
and
(bad)
loopne
add
jne
out
lds
aas
push
adc
push
dec
dec
jns
inc
sub
das
(bad)
stc
jb
loopne
xlat
and
push
shl
stc
xor
fidiv
repnz
sbb
mov
xor
xchg
cwde
nop
adc
int
popf
in
loopne
popa
lods
call
mov
and
inc
sbb
jmp
ficom
inc
cmc
mov
imul
cdq
jae
sbb
sbb
cwde
cmc
adc
adc
jge
or
sbb
pop
adc
add
pop
shl
stos
int
add
sbb
outs
jmp
sbb
in
inc
jbe
dec
mov
mov
inc
data16
in
mov
cld
push
lea
and
(bad)
adc
push
pop
jg
call
xchg
jae
fsubr
cli
retf
adc
dec
sahf
sbb
mov
pop
ror
loope
fdivr
and
or
mov
popf
jb
and
int
int3
jne
mov
js
push
retf
arpl
sar
(bad)
pop
ss
add
mov
xchg
fst
retf
dec
sahf
push
and
repnz
dec
test
mov
sar
cmp
mov
mov
push
mov
(bad)
xor
sbb
sub
aaa
or
cmp
mov
stos
loop
mov
int3
inc
mov
retf
cmc
push
and
lds
mov
xchg
movs
xchg
inc
pop
test
loopne
scas
add
aas
pop
fstp
aam
cmp
(bad)
sub
div
div
int
and
push
jl
inc
jl
mov
cdq
mov
cmps
lock
pusha
pop
shl
mov
inc
inc
mov
mov
aam
adc
loop
jecxz
pop
mov
in
sub
fs
sbb
dec
iret
sub
adc
nop
cmp
or
xchg
xchg
outs
fwait
jae
aas
ja
pop
mov
ins
(bad)
loopne
lahf
sub
cld
test
xchg
fadd
mov
test
jae
aad
cmc
inc
fs
pop
dec
sbb
adc
out
mov
push
(bad)
and
hlt
aam
mov
adc
jle
xchg
test
push
pand
dec
mov
(bad)
retf
cmp
sub
les
jge
mov
push
pop
daa
push
mov
out
and
in
dec
cmp
jb
mov
push
fsub
mov
cmp
adc
jmp
mov
fisub
jne
mov
mov
pushf
test
xor
xor
aas
add
or
scas
(bad)
jo
cmp
sub
cmps
ja
mov
cld
sti
sbb
fsubr
movs
loop
sti
les
inc
or
cmp
ss
push
push
fs
jmp
dec
sbb
dec
mov
les
scas
fucomip
mov
movzx
sub
cmp
(bad)
jae
sbb
rcr
pop
int3
push
sbb
out
in
jbe
pop
lahf
stos
neg
not
xor
ror
addr16
movs
test
jno
dec
sbb
push
cld
mov
fldenv
or
test
sbb
loope
rsqrtps
fadd
inc
fs
jnp
xor
jge
(bad)
iret
jne
sar
mov
sbb
aad
push
movs
jno
inc
and
mov
(bad)
mov
mov
add
mov
jg
sbb
pop
xor
addr16
jmp
sbb
dec
mov
cmc
xor
jnp
push
(bad)
call
sar
mov
add
and
int3
inc
adc
jp
mov
lods
fcom
nop
popf
(bad)
enter
(bad)
mov
ret
icebp
stos
retf
sub
fstp
inc
aaa
fs
shl
scas
cmp
data16
ins
je
(bad)
fcomp
jl
in
mov
adc
or
inc
mov
inc
add
arpl
mov
loopne
inc
(bad)
jge
ins
dec
jl
popa
nop
jmp
loopne
jp
out
mov
std
ror
xor
pop
push
adc
cmc
or
cmp
jo
dec
mov
out
or
das
push
pop
mov
dec
ss
das
mov
dec
push
cli
mov
adc
lock
add
pop
and
aad
idiv
retf
mov
lahf
rcr
cmps
mov
dec
xchg
gs
cmp
mov
mov
dec
fnstsw
mov
push
pop
push
repnz
ja
jne
xchg
sub
pop
sti
js
or
cs
loope
cmp
cld
js
pop
xchg
jge
gs
push
pushf
es
or
enter
fdivr
ja
add
pop
mov
clc
push
jbe
push
hlt
iret
push
pop
ins
and
pop
std
jecxz
in
xchg
data16
frstor
in
fwait
leave
pop
mov
mov
(bad)
lea
jne
jbe
sbb
call
jmp
iret
and
add
idiv
push
(bad)
lods
mov
xchg
jg
aam
inc
pop
fsub
call
xor
outs
std
mov
push
mov
dec
mov
push
jnp
ss
scas
jmp
sar
arpl
arpl
stos
jge
jo
sub
mov
imul
add
sbb
enter
mov
repz
adc
push
ror
push
in
dec
paddsw
cmp
out
sub
idiv
pop
cs
in
xor
fild
and
push
mov
sbb
jbe
adc
enter
xor
add
scas
mov
outs
adc
nop
and
je
movs
mov
sbb
ss
aas
jns
es
pop
daa
leave
repz
inc
pop
out
gs
jae
dec
int3
stc
jl
mov
lock
retf
int3
jae
lea
dec
dec
or
sub
lea
les
push
test
retf
not
ja
jns
mov
mov
jmp
mov
popa
mov
mov
out
cli
idiv
shl
cmp
xchg
je
mov
mov
adc
xor
sub
adc
xor
cmps
xchg
cmps
sar
aad
js
push
lock
call
into
test
(bad)
test
adc
stc
mov
fstp
ret
loop
call
pushf
pushf
fwait
sar
out
mov
cmp
adc
jo
enter
inc
add
push
jg
sbb
dec
mul
sub
test
pop
frstor
js
inc
adc
push
test
mov
fsub
int
rol
mov
push
nop
push
and
fidivr
imul
into
jp
stc
inc
jmp
sbb
jmp
addr16
syscall
mov
inc
repz
mov
imul
xchg
push
mov
xchg
cmp
call
test
dec
out
jb
jle
or
push
ror
mov
pop
jnp
xchg
mov
xor
mov
(bad)
cwde
cld
movs
pop
mov
fbld
xor
dec
inc
out
ret
cmp
and
iret
push
cmp
add
mov
or
cmc
pop
cmp
and
add
(bad)
test
pop
in
dec
pusha
clc
and
inc
sbb
test
xor
fucomi
mov
xor
mov
jnp
aad
dec
mov
adc
xchg
retf
jb
sar
lea
inc
loope
xlat
inc
cmp
fst
retf
dec
push
adc
mov
mov
xor
push
xor
imul
movs
push
out
repnz
leave
pinsrw
pop
out
into
jl
(bad)
mov
and
cmp
mov
xchg
jl
cmc
fwait
jae
outs
test
repnz
das
mov
mov
int3
call
xchg
mov
sub
int
scas
imul
mov
test
ss
fstp
fild
(bad)
cld
push
push
out
repz
inc
mov
stos
adc
xlat
dec
retf
fs
jmp
pop
xlat
push
ficomp
aas
mov
jne
or
pop
mov
jns
mov
inc
mov
hlt
or
in
inc
fwait
inc
mov
out
add
and
rol
test
mov
pop
sub
add
xchg
and
mov
(bad)
out
sbb
inc
movs
aaa
lock
mov
push
out
push
daa
js
mov
and
repnz
add
cmps
test
pop
push
sbb
inc
jecxz
jp
dec
adc
inc
fbld
sbb
es
ins
push
or
(bad)
ss
xor
sbb
into
fidivr
fs
imul
pushf
pop
and
les
sub
retf
mov
enter
cmp
or
cli
loope
jg
div
ss
jge
add
outs
mov
jbe
iret
push
push
fs
pop
jns
inc
in
mov
xchg
fwait
arpl
adc
ja
ins
rol
push
xchg
lods
aas
xlat
dec
imul
in
add
mov
or
mov
pop
xor
das
inc
sub
mov
mov
cmc
jnp
popf
fsub
dec
pop
ja
pop
adc
ins
jno
idiv
adc
jp
sbb
aas
shl
xlat
xchg
rcr
adc
gs
je
retf
ret
(bad)
mov
aad
cmps
add
sbb
pop
adc
pushf
sub
cmp
fstp
jecxz
inc
lahf
ds
pop
bnd
cdq
arpl
pop
sar
cs
mov
add
cld
in
add
das
mov
and
add
fsub
addr16
shl
dec
cmps
ss
test
nop
or
icebp
xchg
aam
dec
mov
inc
test
push
jne
adc
mov
and
sbb
and
sahf
dec
aam
inc
ins
jb
and
mov
outs
out
jp
or
pop
mov
mov
test
push
leave
sbb
mov
cmps
cmc
shl
pop
pop
and
rcl
mov
fimul
icebp
lods
cdq
sbb
(bad)
jp
popf
add
inc
dec
out
cmps
pop
lea
movs
fistp
mov
outs
push
daa
add
aas
xchg
cmp
pop
dec
imul
repnz
lds
pop
adc
add
dec
nop
xchg
aad
mov
enter
or
sub
(bad)
adc
aaa
mov
or
int
(bad)
jmp
adc
mov
icebp
lahf
cmp
jbe
mov
loopne
push
inc
int3
fs
ret
xlat
fdiv
push
push
dec
jne
imul
sbb
ret
outs
scas
jp
fst
out
jg
cmp
(bad)
push
push
dec
je
out
popf
loopne
pop
push
fist
stc
adc
sbb
dec
xor
ficom
jge
dec
int3
adc
pop
fcom
aam
xlat
mov
push
sahf
cmp
add
jbe
call
sar
adc
xchg
fimul
ror
cmps
and
fwait
int
ins
mov
jbe
dec
pop
add
dec
nop
pop
xchg
mov
loop
xlat
aad
xchg
dec
ins
sub
fcmove
rcr
aaa
mul
lea
(bad)
sub
rcl
aas
jmp
gs
sbb
test
dec
sbb
or
cmp
cld
jno
nop
xchg
inc
pop
stos
arpl
mov
es
xchg
nop
fld
in
and
das
mov
sti
mov
aaa
jns
fwait
mov
xchg
test
cmp
xor
fidiv
inc
adc
mov
dec
mov
xor
mov
adc
lds
(bad)
mov
mov
cmp
inc
mov
pushfw
sub
mov
stc
xor
das
pop
add
dec
ins
mov
mov
clc
mov
jmp
and
ror
push
out
sub
cmp
ror
and
xor
fndisi(8087
arpl
call
mov
inc
movs
cmovg
xchg
scas
loop
inc
(bad)
out
lds
fld
pop
ins
mov
cmp
mov
jae
rcr
(bad)
(bad)
jne
mov
mov
sbb
mov
push
or
sbb
mov
xchg
mov
leave
mov
push
(bad)
mov
push
sub
addr16
loop
add
or
add
mov
or
mov
imul
pop
mov
clc
mov
jno
rol
mov
imul
adc
(bad)
ror
pop
stos
aam
and
cmp
repz
test
(bad)
fisttp
stos
movs
pop
xor
pop
adc
mov
aas
sub
xor
dec
aad
xchg
push
xlat
jb
imul
cs
jb
push
sbb
in
mov
lea
rcr
xor
imul
sub
xchg
outs
sar
and
arpl
jne
fstp
inc
mov
icebp
fsub
xchg
pop
ret
sbb
sub
cli
jp
push
nop
mov
std
mov
pop
jo
cmc
jns
in
loop
arpl
repz
mov
add
into
mov
or
add
movs
jg
imul
sbb
sbb
dec
pushf
xchg
xchg
imul
popfw
hlt
and
(bad)
lock
xchg
push
outs
scas
sbb
retf
mov
in
xchg
jl
mov
jbe
mov
movs
imul
sub
sub
inc
aaa
mov
cmps
xchg
sub
push
fstp
add
sub
pop
jo
stos
sbb
push
pop
mov
shr
xor
inc
jmp
xchg
jle
(bad)
scas
jmp
or
fxch
popf
(bad)
clc
mov
xchg
jns
cmp
lea
mov
xchg
push
popf
sbb
fldcw
sbb
daa
lahf
popf
retf
hlt
and
bound
dec
into
nop
ss
mov
jge
clc
or
test
add
and
(bad)
adc
push
mov
gs
push
int3
mov
and
test
adc
push
or
pop
scas
add
test
dec
(bad)
and
test
xor
cmps
pop
leave
mov
out
mov
jecxz
fcomp
jecxz
xor
inc
or
mov
out
pop
pop
xor
jge
imul
retf
out
push
fdivr
and
int3
test
cwde
or
xor
(bad)
xor
inc
adc
stc
sub
inc
cmp
and
and
mov
lock
jbe
push
hlt
push
out
mov
xchg
mov
or
(bad)
fnsave
movs
and
leave
and
add
pop
popa
loop
popf
nop
dec
dec
mov
int
and
clc
xor
call
mov
pop
aam
mov
ds
pop
dec
cmp
inc
cli
xor
mov
xchg
jecxz
les
imul
jns
or
mov
adc
cmp
jae
enter
cmp
sbb
push
and
movs
dec
inc
sbb
retf
scas
gs
pop
xchg
imul
xor
push
fbstp
push
add
clc
mov
in
mov
out
dec
int3
push
dec
lock
push
test
pop
std
mov
lahf
mov
mov
or
adc
xor
sbb
adc
rcl
cli
or
cmc
retf
inc
imul
sbb
push
(bad)
idiv
xor
sbb
push
daa
push
cmc
and
pop
and
cld
arpl
into
hlt
sahf
pop
addr16
les
add
jo
push
or
fstp
xchg
xlat
fisub
inc
sub
lea
mov
cmp
jb
pop
inc
xor
bound
xor
loopne
idiv
stc
sbb
ret
adc
push
std
adc
mov
jp
shl
mov
jbe
add
xchg
pushf
(bad)
loop
cmp
fsubr
sbb
xor
vmptrst
dec
sbb
mov
add
aaa
jbe
(bad)
loop
mov
mov
test
xlat
outs
mov
int
sub
jmp
cmp
dec
xor
xchg
pushf
inc
adc
push
and
jp
add
jbe
mov
add
jns
or
mov
inc
xchg
mov
dec
pop
in
push
(bad)
push
cmp
in
icebp
xor
add
icebp
add
and
icebp
push
or
outs
scas
jmp
mov
sti
inc
(bad)
popa
fadd
aam
ficom
(bad)
jmp
or
jo
(bad)
jmp
lods
adc
sub
scas
fdivp
or
pop
(bad)
cmp
jb
adc
dec
imul
inc
je
out
into
mov
sbb
adc
add
neg
push
(bad)
and
fwait
loope
xchg
cmp
add
mov
push
scas
mov
(bad)
je
fdivr
je
push
(bad)
xchg
cwde
push
fs
cmp
stos
out
push
fstp
xchg
mov
int
push
ins
jecxz
pop
mov
add
or
outs
sti
mov
addr16
fs
hlt
loop
mov
jmp
les
ret
lods
or
(bad)
icebp
mov
xchg
stos
iret
sub
movs
push
xor
shl
imul
fwait
retf
mov
inc
stos
fstp
mov
and
add
int
xchg
stos
fldenv
mov
pop
mov
cmps
jle
add
push
push
or
inc
pop
xchg
xor
mov
or
pop
cld
scas
sub
std
mov
add
sub
nop
adc
call
stos
pop
sahf
xchg
and
xor
shl
dec
jecxz
lock
shr
pop
cwde
fs
in
enter
mov
movs
fsub
dec
retf
xor
arpl
or
pop
fistp
rcr
nop
loopne
retf
cwde
rcr
jns
dec
mov
jno
mov
xchg
push
mov
cwde
imul
repz
(bad)
mov
repz
mov
push
arpl
imul
push
mov
sub
mov
dec
rcr
add
or
push
cmp
xlat
xchg
inc
dec
mov
cmps
add
int
pop
xor
call
call
pushf
or
cs
int
xchg
pusha
inc
adc
test
mov
imul
ficom
mov
mov
and
pop
shr
(bad)
mov
outs
push
sub
pop
pop
jb
pop
lods
lock
cmp
xchg
xchg
icebp
rcr
cmp
adc
mov
loope
pop
cmp
mov
or
fiadd
leave
movs
xchg
and
mov
jecxz
xor
cld
add
call
or
inc
or
push
or
jno
outs
or
mov
fsubr
out
shl
pop
pusha
cmp
movs
jne
and
cld
(bad)
lahf
pusha
fwait
xchg
xlat
shl
pop
addr16
test
push
xchg
pop
push
jmp
ins
mov
jecxz
call
jnp
or
test
xlat
dec
pop
jns
mov
clc
sbb
(bad)
dec
pandn
mov
in
popa
dec
jecxz
pop
nop
xor
test
pusha
imul
or
scas
add
xor
ret
ins
dec
fdivr
mov
in
pop
fisubr
retf
in
int3
fsqrt
cli
inc
mov
mov
cmps
repnz
pop
push
inc
jmp
jb
dec
out
daa
pop
inc
aam
cmp
add
gs
cmp
out
jmp
cmps
rol
pop
jne
fsubr
loope
neg
lahf
pop
mov
dec
cmp
loop
fdiv
ror
push
xchg
mov
daa
outs
aaa
loope
adc
dec
dec
dec
and
xchg
or
and
mov
push
inc
cmp
cmp
sbb
(bad)
popf
scas
cld
jecxz
shl
pop
loop
enter
sar
fdiv
scas
out
loop
arpl
je
(bad)
test
push
dec
sub
or
push
pusha
adc
adc
jne
out
sub
jne
add
mov
cmp
mov
ins
mov
(bad)
stc
mov
pusha
mov
jo
or
sub
icebp
push
or
push
or
mov
retf
aaa
adc
and
outs
xor
pop
mov
daa
imul
and
inc
gs
stc
cdq
and
rcr
xor
mov
add
dec
and
sbb
cmp
scas
dec
popf
xor
and
fs
mov
in
or
retf
dec
imul
cmp
fstp
dec
jg
xchg
mov
mov
mov
sbb
scas
cs
sbb
pop
int
fnstcw
out
and
pusha
mov
dec
or
mov
rol
jl
push
xchg
xor
outs
gs
xor
jg
add
mov
dec
in
cli
pop
aad
and
mov
fs
dec
aam
in
xchg
mov
mov
nop
jnp
add
retf
ja
cs
loop
mov
repz
mov
mov
jl
or
push
inc
les
sub
mov
pusha
(bad)
out
lea
inc
out
pushf
mov
mov
jmp
mov
js
mov
fsubr
push
mov
adc
lods
or
adc
inc
mov
dec
sub
clc
inc
ins
add
ss
outs
or
mov
xchg
or
jae
push
cmove
inc
stc
ror
sbb
pop
sbb
outs
inc
adc
imul
jae
and
xchg
and
mov
inc
or
pusha
popa
add
lahf
pop
push
cmps
enter
fst
lea
fidiv
clc
pusha
out
lds
xchg
and
leave
idiv
mov
cmc
dec
push
inc
mov
stos
inc
sub
in
pop
in
xchg
in
jns
cmp
push
push
es
jp
dec
add
and
call
loopne
gs
mov
pop
idiv
sub
fldcw
dec
shl
xor
xor
imul
and
mov
bound
add
xor
add
fcom
cmp
xor
add
js
xor
out
sbb
xor
cli
pop
lods
and
adc
sub
xchg
dec
push
push
not
stos
out
sti
adc
lods
fadd
or
icebp
mov
jmp
jno
xor
push
mov
inc
dec
push
inc
jecxz
mov
out
add
jae
(bad)
cmp
mov
inc
daa
(bad)
add
mov
fst
pop
fisub
mov
ja
sub
cli
out
and
mov
lds
pop
movs
fs
arpl
pop
mov
push
pop
mov
cmc
jb
push
test
aam
dec
repz
not
ret
ss
sar
sbb
retf
daa
xchg
cmps
das
int3
pop
scas
pop
jl
out
inc
adc
and
xchg
inc
les
or
xchg
push
push
cmps
cmps
xchg
fwait
or
inc
inc
outs
addr16
sbb
popa
and
imul
dec
or
inc
out
and
mov
fs
imul
(bad)
mov
ins
xchg
nop
jecxz
jb
xchg
mov
bound
into
jb
xchg
clc
cmp
bound
sbb
sub
add
add
push
ins
rcl
rcr
and
rcr
xchg
xchg
sahf
mov
cli
sbb
xor
push
test
or
jmp
pop
jae
xchg
jg
loope
cmp
loope
pop
rcl
inc
inc
pop
or
jl
addr16
jle
call
jg
sub
shr
lods
(bad)
xchg
pop
stos
sbb
pop
sub
or
mov
jae
xor
mov
cwde
xchg
cmovnp
inc
int
outs
add
arpl
ins
ficomp
add
mov
jecxz
adc
not
pop
or
sub
jecxz
pop
shl
rcr
mov
(bad)
jo
pop
test
inc
pop
sar
pusha
push
fst
mov
cmc
dec
imul
mov
jbe
hlt
mov
ffree
or
fs
mov
je
adc
cmp
(bad)
xor
jmp
inc
call
push
push
xchg
mov
shl
push
xchg
push
icebp
leave
cld
int3
inc
int3
mov
adc
cmp
sbb
pushf
jno
jp
jmp
cwde
cdq
mov
out
fisubr
cli
add
dec
sbb
movs
pop
xor
mov
fcom
mov
cmps
bound
sub
mov
mov
cmp
adc
repnz
inc
push
pop
loop
fdivr
xchg
and
cmps
inc
mov
jno
shl
repz
fwait
mov
std
loopne
ror
(bad)
das
mov
push
or
test
aad
pop
add
test
xchg
cmp
mov
cmc
out
stc
xchg
mov
sub
enter
in
or
test
fsub
xor
js
std
and
push
repz
outs
hlt
dec
mov
imul
call
pop
sbb
xchg
add
jl
sbb
in
shl
xlat
push
and
pop
cmp
push
and
adc
adc
push
aam
adc
adc
mov
movs
xor
leave
mov
cli
fwait
das
dec
fsub
(bad)
(bad)
ds
and
(bad)
xchg
push
rcl
stos
cmp
push
add
outs
aas
iret
sti
cld
shl
cdq
out
retf
sahf
call
hlt
and
cmp
mov
push
dec
and
inc
shr
hlt
fwait
sbb
sahf
mov
xor
ror
push
test
or
retf
adc
cmp
and
jbe
stos
sub
leave
daa
dec
cwde
dec
lock
dec
jl
add
pop
mov
(bad)
mov
popa
sub
int3
mov
jmp
xchg
dec
movs
fldenv
mov
test
scas
into
pop
xchg
pop
push
imul
adc
jmp
or
pop
jb
push
out
in
gs
retf
int3
push
test
mov
scas
or
pmullw
xlat
add
pop
cdq
fsubrp
xor
fs
xor
inc
xchg
fbstp
test
jbe
push
xchg
mov
sbb
add
(bad)
mov
jns
rol
push
ss
fst
add
sbb
mov
sub
adc
rcl
xlat
retf
cwde
mov
cmp
mov
loopne
adc
dec
push
(bad)
jmp
scas
stos
mov
(bad)
and
movs
in
push
cmp
cmps
adc
jmp
out
mov
push
push
dec
pop
pop
pop
xor
dec
adc
xchg
outs
jmp
sub
xor
pop
mov
jns
cld
xchg
jno
jbe
test
test
out
pop
jmp
imul
shl
jp
mov
dec
js
sti
push
(bad)
(bad)
je
pop
mov
mov
loope
or
cmps
and
sbb
ds
addr16
inc
adc
sahf
stc
lods
mov
pop
mov
and
mul
and
adc
cmp
mov
mov
jns
stos
mov
xchg
dec
jecxz
push
div
icebp
jno
xor
cmp
fistp
dec
arpl
push
xchg
adc
xor
mov
scas
daa
lds
fldenv
stc
pushf
test
call
jmp
mov
jno
adc
xchg
mov
pop
pushf
add
xchg
xor
push
add
jge
addr16
sbb
(bad)
in
mov
inc
into
push
cmp
dec
cmps
ja
or
sbb
call
jae
push
add
sahf
push
add
fidivr
aas
inc
jmp
in
xor
neg
stos
(bad)
sub
sub
dec
(bad)
shr
mov
into
clc
mov
call
push
scas
inc
pop
sub
or
sti
jbe
call
fcom
test
cmp
jl
in
scas
popa
add
mov
fnstenv
ret
aaa
jmp
add
push
mov
shr
ret
add
and
stos
ins
and
fdivr
inc
inc
xchg
cmps
test
pop
xchg
mov
push
out
popa
jp
movs
inc
dec
jb
jo
sbb
jle
inc
aam
inc
ffree
shl
shl
mov
dec
jns
fbld
std
jl
fiadd
iret
hlt
sub
ja
in
inc
mov
dec
inc
neg
inc
cmps
popa
out
ins
into
pop
pop
push
inc
dec
jmp
add
idiv
and
add
mov
cmp
jl
js
cmp
push
nop
pmaddwd
cwde
pop
sub
mov
push
jmp
pop
(bad)
mov
adc
pop
mov
in
stos
loopne
loope
sbb
xor
stos
mov
stos
aaa
jne
mov
pop
xchg
iret
and
cld
movs
shl
addr16
pop
mov
cmp
int3
xchg
das
jb
stos
les
mov
pop
fidivr
into
pop
fadd
jno
(bad)
lgdtd
hlt
xchg
push
in
aam
(bad)
aad
nop
movs
jle
mov
xchg
cmp
enter
or
js
push
out
sub
inc
jmp
cs
dec
mov
xchg
popf
jmp
inc
test
lods
adc
fisubr
dec
xchg
adc
mov
jge
push
js
or
outs
mul
dec
cmp
fld
xor
or
in
or
aad
lea
push
xchg
adc
out
xchg
and
daa
aaa
in
arpl
xchg
jae
dec
ret
and
sub
mov
dec
out
movs
loope
push
pusha
inc
cmps
mov
inc
inc
xchg
inc
push
jge
les
xor
unpcklps
sbb
ins
shl
jbe
outs
sahf
pushf
add
mov
cmp
sub
inc
xor
sub
sbb
test
fcmovnb
inc
sub
test
es
cs
out
or
(bad)
ds
rcr
push
daa
mov
cmp
jo
repnz
ins
int
mov
xor
inc
adc
cdq
or
shl
xchg
out
ss
pop
jne
cdq
sbb
aaa
ins
adc
ins
fstp
inc
xlat
outs
or
xchg
jmp
sbb
mov
mov
retf
xchg
cmp
adc
ds
cmp
mov
adc
retf
lods
icebp
xor
in
sub
inc
ret
repz
jge
inc
shufps
mov
sbb
nop
dec
aaa
sti
add
imul
sbb
mov
loopne
mov
mov
mov
int3
xchg
xchg
adc
inc
xor
jbe
scas
and
dec
jecxz
int
test
test
mov
cld
cmp
push
mov
mov
pop
mov
jns
ja
pop
xor
cmp
xchg
jmp
outs
mov
add
in
sub
pop
dec
retf
dec
and
fidivr
inc
repnz
in
into
dec
adc
les
and
cmp
ins
mov
ret
int3
faddp
pop
inc
cmp
dec
pop
daa
mov
pop
outs
mov
fisubr
and
jno
shl
pop
push
out
sub
ret
cmc
es
mov
lock
adc
aam
jo
push
call
into
adc
dec
movs
pop
or
xchg
xor
xchg
mov
add
inc
cmp
push
mov
out
test
sahf
out
dec
add
push
hlt
fld
adc
cmp
fsub
mov
jg
dec
and
punpcklwd
aas
ins
adc
push
call
test
inc
lods
ds
dec
leave
push
sahf
dec
fst
sub
mov
ror
in
push
mov
jb
scas
xlat
xchg
push
hlt
ss
je
ror
test
push
cwde
pop
pop
shl
ins
mov
add
sub
les
or
inc
and
aas
jne
mov
push
es
cdq
inc
scas
add
and
loop
cmp
mov
dec
mov
nop
sahf
(bad)
ss
cmps
lods
inc
into
inc
shr
and
jmp
cmps
out
or
dec
cmp
sbb
sub
loop
sub
mov
xor
scas
cli
push
sahf
adc
lock
pop
sbb
sub
jno
push
fcomp
pop
popa
mov
jg
addr16
dec
arpl
repz
(bad)
ficomp
push
popf
mov
and
jmp
cmp
or
push
pand
retf
cmps
fistp
out
inc
ins
out
inc
bound
push
enter
sub
jecxz
dec
xor
xchg
pop
(bad)
stos
mov
lahf
sub
mov
je
mov
push
inc
xor
xor
inc
cmp
xchg
shl
sub
lea
mov
stc
aas
jns
push
(bad)
fistp
aad
or
jle
pusha
retf
(bad)
push
jl
ret
aam
rcr
inc
test
push
inc
lds
mov
ds
rol
or
sbb
sbb
test
sub
mov
fimul
mov
imul
jno
add
icebp
bound
data16
inc
ficomp
imul
or
lock
mov
jmp
and
mov
movs
push
inc
xor
test
stos
mov
loopne
xchg
icebp
and
scas
push
adc
mov
cmp
(bad)
pop
adc
mov
sahf
mov
inc
pop
xlat
out
push
xor
mov
push
daa
ret
jmp
pop
add
xchg
cmp
mov
(bad)
cmps
(bad)
(bad)
push
in
xor
jg
dec
jp
lods
movs
clc
fwait
xchg
add
outs
xchg
jp
fisttp
mov
push
test
dec
xchg
jmp
jge
fmul
lods
jecxz
sub
imul
or
icebp
leave
and
call
adc
add
and
retf
xchg
sbb
into
mov
pop
test
stos
cmp
jae
or
and
retf
cmc
add
shl
xchg
mov
jmp
(bad)
(bad)
cs
into
cdq
xchg
xchg
pop
inc
hlt
xchg
push
sbb
add
ss
xor
in
adc
outs
inc
mov
movs
xor
push
xchg
jne
push
cdq
lods
movs
sar
adc
mov
sahf
lahf
dec
sub
cdq
shr
retf
pop
sbb
jp
jae
call
cmp
and
in
and
mov
test
xchg
rcl
out
je
mov
in
xchg
push
aad
out
ja
pop
and
mov
push
xchg
pop
xchg
push
fcom
(bad)
retf
inc
adc
pop
ficomp
and
sub
cmp
leave
out
sbb
daa
hlt
das
dec
(bad)
jnp
dec
mov
or
call
inc
scas
fcmovbe
sbb
(bad)
dec
repnz
mov
call
stos
(bad)
cdq
mov
ins
fwait
outs
pop
or
mov
jb
scas
xchg
mov
xchg
repz
and
in
pop
jo
out
out
push
mov
mov
pop
movs
daa
pop
nop
retf
mov
mov
int
sbb
int3
pop
sbb
pop
mov
xor
icebp
pop
sahf
inc
and
push
(bad)
mov
cmp
inc
jns
mov
mov
mov
cmp
popa
mov
mov
outs
xchg
test
sub
loop
test
add
dec
test
xchg
js
jecxz
push
(bad)
jbe
push
inc
jnp
rol
dec
stos
jo
out
pop
inc
popf
or
jl
daa
clc
mov
cdq
shl
sbb
sub
arpl
cwde
test
push
inc
les
fsubp
jo
dec
in
scas
fnop
inc
pusha
div
enter
pop
sbb
adc
inc
inc
(bad)
fs
out
mov
cmp
movs
sahf
mov
mov
jb
sar
shr
push
shr
mov
imul
(bad)
pop
das
into
push
jne
jo
cmp
shl
jge
fucomi
mov
and
rol
ja
stos
mov
(bad)
retf
push
push
mov
pop
dec
pop
cmp
jo
clc
cmp
test
lea
cmp
xlat
pop
into
imul
gs
xchg
inc
daa
pop
(bad)
out
nop
push
enter
mov
and
xchg
sub
or
int
test
push
pop
cmp
mov
ret
jle
fcomi
mov
loop
sbb
or
nop
retf
mul
addr16
aaa
out
and
pop
int3
in
(bad)
xchg
inc
push
sbb
adc
and
adc
xor
loop
ret
retf
mov
call
outs
mov
add
cmc
fistp
rcl
sbb
jle
pop
retf
cmp
push
mov
pop
enter
cmp
sahf
dec
out
pop
lods
fwait
pop
std
sbb
cmps
adc
add
mov
sbb
mov
sahf
mov
add
out
dec
inc
xor
add
es
sti
mov
stc
inc
mov
and
sub
scas
cdq
stc
in
push
fwait
retf
push
aas
sbb
cmp
fnsave
mov
sub
sub
pop
ins
fs
cmp
inc
xor
jle
out
xchg
adc
sbb
ret
ret
push
mov
outs
mov
fimul
adc
ins
xchg
(bad)
loopne
adc
push
xchg
push
iret
xchg
mov
xchg
stos
xchg
xchg
and
ins
dec
loopne
push
retf
leave
push
ret
clts
xor
mov
cmp
sahf
add
push
fs
mov
pushf
cmp
cs
jge
test
mov
bound
mov
lock
adc
pop
cmp
adc
xchg
cwde
sub
test
xchg
shl
ins
sub
nop
cmps
nop
stos
xchg
fbstp
test
xor
mov
in
or
xor
addr16
lds
mov
aad
push
ret
sbb
stc
adc
stc
gs
je
xor
push
(bad)
test
bound
bnd
call
fsubr
clc
push
sub
sub
push
adc
aad
jg
cs
(bad)
jbe
mov
mov
pushf
sub
scas
xor
rol
sbb
loope
fmul
addr16
and
imul
das
dec
out
xchg
push
add
nop
push
outs
xchg
loopne
stos
clc
pop
cs
neg
movs
mov
pop
mov
fst
(bad)
aas
xchg
gs
les
push
xor
test
stos
call
jl
pop
xor
sbb
lds
sbb
xor
js
test
cmp
jo
dec
mov
or
int3
push
xchg
and
sub
cdq
imul
inc
xchg
cmc
push
repnz
cmp
push
pop
push
imul
adc
jno
mov
mov
outs
ds
mov
pushf
stos
xchg
mov
pop
mov
mov
out
cld
sub
mov
dec
das
popf
call
movs
pop
pusha
in
imul
stos
dec
loopne
fwait
sbb
(bad)
jae
xor
or
clc
xor
mov
imul
js
cmp
inc
and
pusha
xlat
cmps
pop
sub
and
xor
sbb
fst
lahf
xchg
xchg
call
ror
push
push
dec
int3
pop
pop
jo
rep
adc
jl
out
sbb
in
xchg
out
bound
add
retf
test
(bad)
cmps
hlt
jl
adc
pop
jo
das
retf
int3
std
mov
jle
pop
sbb
push
xchg
aaa
push
popf
pusha
(bad)
fnstcw
sti
in
mov
jnp
lds
out
and
xchg
sub
cmp
dec
add
movs
and
cmps
dec
std
das
cwde
das
pop
in
clc
fs
daa
sub
or
xchg
or
addr16
imul
add
and
mov
das
adc
adc
inc
xor
xor
add
cld
and
or
out
add
bound
mov
xchg
sbb
lds
cli
cs
arpl
repnz
repnz
outs
sbb
int3
call
xchg
jne
inc
mov
jno
mov
mov
mov
jns
cmp
repz
aam
sti
xchg
sti
xchg
cmp
gs
fsub
push
ror
dec
and
or
adc
test
add
mov
jno
imul
jge
mov
movs
jmp
jmp
push
loope
push
sbb
sbb
mov
lods
loope
pop
data16
jp
icebp
(bad)
push
into
sbb
bound
pusha
pusha
cmp
sub
mov
cmps
jo
repnz
loope
push
pusha
retf
or
sub
mov
js
movs
add
mov
mov
mov
sub
fisttp
push
mov
or
jne
dec
jge
sbb
je
les
(bad)
aam
ins
mov
adc
cld
pop
fst
cli
adc
enter
std
mov
dec
(bad)
pop
mov
ret
push
mov
inc
push
push
fsubrp
sahf
sbb
pop
dec
sub
jg
mov
test
jmp
add
ja
push
jl
or
imul
dec
push
in
mov
mov
je
push
or
pop
and
xor
leave
hlt
adc
movs
pushf
xchg
sti
pop
jl
add
daa
outs
hlt
cmp
jmp
and
inc
push
pop
jne
inc
mov
mov
dec
out
push
xlat
inc
adc
fdivp
adc
fisttp
repz
xchg
push
pop
movs
push
mov
inc
sahf
ins
loop
pop
(bad)
sub
push
data16
adc
aam
cmp
ret
mov
xchg
mov
xchg
push
daa
push
vaddsubpd
cmp
mov
cs
mov
push
xchg
aas
lock
mov
add
and
xor
jno
retf
inc
pusha
mov
out
sub
out
into
outs
jge
jecxz
movs
sbb
inc
movs
int
cmp
scas
xchg
ins
ret
pop
mov
call
ret
sbb
push
cmp
sub
fst
mov
cld
(bad)
sub
out
sbb
pop
movs
stos
daa
je
inc
inc
fstp
loopne
fcomp
es
sub
icebp
jecxz
test
jne
mov
outs
sub
outs
jmp
jl
cmps
ret
(bad)
rol
enter
call
fsubr
mov
aaa
shr
test
mov
mov
dec
into
lods
popa
in
dec
jno
inc
repnz
ret
push
lods
fsubr
movs
addr16
inc
dec
mov
jmp
je
push
mov
ror
dec
xor
cmps
or
pusha
jp
repnz
dec
adc
cmps
and
cmps
xor
cmp
adc
nop
hlt
imul
cmps
push
mov
loopne
mov
adc
repnz
cmp
popf
jmp
mov
sbb
popf
cmps
std
ja
(bad)
loop
fs
sub
push
cmps
mov
ss
cmps
out
xor
ret
aaa
and
mov
fcomp
xor
ja
iret
xchg
rcl
ss
daa
fmul
mov
jb
and
int3
cmp
ret
shl
ds
ret
pusha
xor
dec
retf
dec
rcpps
jb
aad
pop
out
mov
outs
ret
scas
stos
sbb
(bad)
scas
ss
ret
mov
int
test
js
mov
sbb
js
mov
je
or
sub
push
cmp
add
sbb
cdq
adc
mov
mov
inc
arpl
xor
dec
jns
pop
out
mov
cli
jo
arpl
xchg
add
mov
inc
test
dec
xchg
sub
mov
ror
test
mov
in
push
pop
mov
adc
or
jmp
jae
add
push
sub
inc
repz
imul
(bad)
mov
pop
mov
mov
push
or
xchg
gs
mov
mov
push
jae
xor
mov
stos
mov
mov
iret
cmps
pop
enter
adc
add
cmp
inc
shr
cmp
scas
je
xor
inc
int3
jbe
and
mov
adc
aam
dec
retf
shr
(bad)
popf
ins
push
pop
mov
pop
arpl
or
inc
xchg
data16
daa
push
stc
xor
test
outs
add
and
push
push
dec
loop
paddsw
std
sahf
(bad)
rol
dec
xor
call
ds
sub
cmps
mov
(bad)
(bad)
scas
aad
and
push
mov
mov
sub
mov
ins
ret
mov
rcr
ror
cli
shr
mov
in
sbb
mov
ret
jno
ret
adc
iret
mov
sti
ins
or
jbe
xor
sub
lahf
mov
retf
stos
outs
sub
fsub
mov
mov
push
out
jg
and
mov
test
or
iret
scas
out
cmps
loop
(bad)
jle
out
jns
mov
(bad)
mov
jmp
inc
adc
xchg
cli
jecxz
scas
mov
and
sbb
les
pop
stos
mov
popa
sbb
test
test
nop
(bad)
inc
mov
jp
xchg
cmp
mov
scas
jbe
adc
repz
jmp
mov
inc
rcr
mov
(bad)
mov
mov
dec
test
adc
xlat
lds
pop
mov
jnp
stos
outs
xor
fild
sbb
adc
jns
icebp
xchg
je
push
icebp
add
push
pop
fisubr
in
push
pushf
push
frstor
je
add
lods
loopne
sti
or
rol
push
fwait
aad
cld
push
push
out
jno
repz
in
pop
out
xchg
pop
push
xchg
out
inc
ds
and
add
mov
xor
xor
dec
arpl
data16
xor
push
cs
or
dec
xchg
sbb
fcomp
movs
retf
cwde
adc
pop
mov
xchg
jne
and
cmps
push
adc
jmp
scas
rcl
arpl
rcr
pop
fldenv
push
pop
shl
cmc
lods
cmp
sbb
loop
imul
pop
xchg
sti
repnz
popf
mov
adc
retf
dec
push
lahf
sub
mov
cmp
popf
adc
cmp
sub
(bad)
mov
inc
or
ret
push
mov
pop
cs
sub
cmp
mov
pop
add
jecxz
adc
jmp
mov
out
jl
mov
pusha
fs
inc
popa
cmp
add
dec
sar
add
ds
cmc
scas
xchg
scas
xchg
ins
outs
stc
mov
dec
xor
xlat
pop
jmp
xlat
enter
sti
xor
jb
sbb
jno
je
mov
adc
cwde
popa
fs
push
pop
xlat
adc
(bad)
cmp
add
out
adc
repnz
xor
xor
mov
mov
mov
cmp
and
(bad)
out
(bad)
nop
mov
push
leave
sbb
adc
push
or
pushf
dec
scas
sbb
and
sar
aad
inc
inc
mov
nop
aam
sub
loope
daa
add
xchg
jl
mov
or
inc
push
lock
pushf
pop
pushf
dec
inc
sub
inc
je
push
sti
in
into
push
jb
xor
into
pop
lahf
(bad)
ror
loopne
jb
imul
je
ret
ds
and
jnp
pop
(bad)
mov
imul
rol
stos
stos
cmp
lds
in
adc
cli
movs
mov
lods
pop
ins
mov
je
fst
nop
fst
fwait
sar
and
jb
loopne
into
or
mov
fs
jb
adc
adc
cmp
aam
(bad)
jbe
pop
add
fidiv
mov
xor
adc
ret
sbb
add
mov
test
test
stos
jae
push
rcr
aad
int3
adc
mov
pop
pop
rcr
or
lea
(bad)
ins
and
in
ret
push
jb
and
cdq
test
mov
xor
nop
stc
femms
lods
mov
sub
push
jl
mov
mov
adc
inc
sbb
push
sahf
pop
xlat
stos
lahf
pushf
out
outs
mov
cmc
inc
ror
daa
add
adc
xchg
je
ret
call
push
dec
mov
es
inc
xchg
jae
sub
adc
xor
xor
sub
jmp
pushf
xchg
xor
outs
jmp
outs
sub
sub
loope
inc
sub
cmp
stc
adc
ret
xor
jae
fcmovnb
out
lds
inc
xchg
jp
nop
dec
sub
jb
or
in
jp
adc
js
in
mov
loop
jnp
shl
scas
ins
mov
loopne
retf
ret
das
mov
pop
pop
(bad)
mov
stc
cld
dec
retf
cmp
fdiv
mov
movs
sahf
test
adc
inc
clc
(bad)
add
or
ds
xchg
shl
xchg
sub
fucomi
or
xchg
pop
lods
push
mov
std
out
ss
movs
mov
or
test
rcr
inc
rcl
aad
mov
pop
(bad)
mov
inc
je
std
dec
pop
add
in
push
add
out
add
pop
inc
add
out
mov
(bad)
popa
pushf
jmp
out
mov
mov
push
xchg
dec
add
stc
popf
jecxz
mov
out
cmp
fisttp
sub
call
cld
imul
in
inc
lods
xchg
cmc
cmp
add
aam
pop
cmc
inc
stos
xchg
xlat
in
out
sub
dec
rol
call
ret
loope
or
rcr
sbb
add
xor
mov
out
int3
mov
imul
test
jno
jns
xchg
ss
leave
sbb
in
dec
cmp
inc
mov
stc
mov
movs
mov
std
push
fwait
pop
jl
sahf
in
sar
pcmpgtd
mov
clc
mov
or
stos
or
in
push
call
out
push
sub
ror
mov
sahf
xor
add
jg
out
or
xor
inc
xchg
fcom
jmp
dec
pusha
out
jno
(bad)
rcr
dec
je
es
imul
call
jmp
cmps
mov
pand
mov
pop
jl
mov
aas
movs
mov
out
ins
(bad)
mov
ins
adc
dec
xchg
xchg
fstp
xchg
xlat
and
cld
vmread
jecxz
cmps
test
mov
add
xchg
mov
xor
jne
and
mov
icebp
lock
rol
mov
xchg
mov
jmp
repnz
cmps
ret
aam
outs
pop
xor
pop
call
cmp
out
jmp
retf
pop
mov
jp
inc
push
cmps
sub
cmp
dec
in
inc
stos
shr
fisubr
aam
fstp
pop
(bad)
test
add
push
mov
div
aaa
and
mov
xchg
push
cli
mov
xor
inc
pop
inc
cdq
mov
pop
js
(bad)
and
out
in
cwde
outs
sti
push
(bad)
(bad)
and
test
pop
jp
mov
xor
call
inc
lods
fs
add
das
pop
loopne
sub
(bad)
mov
lds
mov
add
mov
retf
or
add
inc
xchg
hlt
sbb
pop
dec
cwde
movs
sub
inc
cli
scas
idiv
and
mov
aad
sbb
sub
sti
fidiv
test
(bad)
push
jmp
xchg
shl
cmps
test
or
clc
out
mov
pop
addr16
xor
pusha
ss
mov
pop
out
and
cmp
sub
xchg
mov
mov
call
nop
inc
lods
mov
jmp
mov
mov
dec
xchg
ss
cmps
mov
daa
stos
pop
aam
xchg
mov
aaa
repz
xchg
jmp
push
jno
into
repz
loope
repnz
cdq
adc
je
sbb
ds
jo
in
scas
pop
data16
sbb
jle
push
loope
jmp
fmul
xchg
int
push
cdq
cmp
mov
fdivr
dec
push
dec
(bad)
shl
inc
cmp
out
jb
add
les
push
adc
imul
mov
sub
test
arpl
or
cmps
das
clc
dec
fsubrp
in
in
add
daa
outs
inc
xor
fwait
rcr
add
and
xor
add
push
xchg
xchg
ds
nop
mov
lods
mov
pop
add
jg
adc
scas
aaa
cmps
(bad)
fnstenv
int3
jne
sar
daa
pop
cmp
or
fst
(bad)
jg
mov
xchg
out
bound
lods
xor
retf
push
mov
dec
mov
aam
sbb
into
jge
cmp
test
test
xor
sub
aas
add
std
mov
mov
scas
pop
or
jns
sub
adc
stos
pop
inc
lds
aas
ja
cmp
xor
mov
pop
js
hlt
xchg
push
in
cwde
lds
push
inc
shl
sub
je
nop
jge
push
mov
retf
test
in
neg
aas
dec
mov
fidivr
rcl
dec
adc
jb
sub
push
daa
sub
xchg
popf
repz
neg
push
add
es
sbb
enter
and
sbb
push
cmp
mov
and
data16
adc
mov
push
ret
or
sub
jl
push
dec
out
call
xor
sti
daa
or
xchg
or
je
pop
push
push
fdiv
popa
popa
in
fs
sbb
inc
xor
scas
mov
cmp
cwde
adc
movs
fldenv
jle
push
adc
xchg
cli
sbb
dec
xchg
std
retf
inc
push
bound
inc
hlt
xor
add
movs
jae
rol
stos
push
arpl
gs
add
in
mov
not
call
cwde
mov
rcr
mov
pmulhw
daa
shl
and
sub
loop
mov
sbb
push
mov
pop
mov
outs
psllw
adc
sti
enter
mov
fbld
int
cmp
aas
(bad)
push
or
xchg
cdq
dec
lods
imul
popa
mov
or
nop
jecxz
add
cmps
adc
jbe
sbb
sbb
fxch
mov
add
aad
add
pop
and
ror
mov
add
mov
xor
stos
mov
(bad)
shl
shl
inc
jp
jo
push
stos
pop
xor
jnp
les
retf
xchg
enter
sub
pop
jmp
popf
cs
and
movs
jbe
and
shl
fs
les
mov
cli
xchg
aaa
sub
scas
fcmovnbe
enter
xor
ret
push
cmps
movs
sbb
je
ds
jecxz
pusha
das
dec
ins
mov
loopne
mov
push
sbb
rcr
fcom
rol
push
into
push
or
js
inc
xchg
mov
div
xchg
xor
pop
in
rcl
mov
(bad)
jecxz
cmp
or
and
xor
add
xor
pop
fdiv
iret
jae
pushf
push
shr
and
nop
imul
lahf
movs
mov
clc
adc
jno
in
jne
jmp
dec
inc
popa
jo
ror
(bad)
xchg
movs
xchg
mov
imul
rol
aas
loope
dec
fild
test
jmp
inc
sahf
(bad)
neg
fiadd
sbb
push
pop
cmps
mov
scas
aad
sub
mov
in
xchg
js
push
lahf
arpl
mov
mov
mov
pusha
ret
stc
ds
xchg
movs
xchg
stos
mov
lds
sbb
rcl
cmp
sar
shl
iret
sub
mov
nop
sub
int3
pop
popf
mov
xchg
mov
push
xor
mov
xchg
outs
ret
repz
push
loop
mov
push
mov
repz
jle
repz
cmp
in
stc
jb
jg
cmps
cmp
retf
jbe
inc
out
in
rcr
and
adc
setno
popf
fdiv
aad
movs
dec
cmp
and
mov
cli
sahf
push
cmp
and
mov
add
cmc
mov
call
sbb
out
test
xchg
fxch
test
or
mov
add
scas
push
gs
dec
dec
fwait
add
sbb
xchg
pop
fist
scas
outs
mov
pop
or
cmp
mov
xor
movs
addr16
fld
neg
repz
rcr
or
cwde
push
aaa
je
ret
sbb
inc
aam
lea
jmp
in
ja
pop
mov
adc
sub
jle
xor
mov
xchg
push
mov
xor
dec
jns
and
jle
and
or
pop
hlt
and
push
arpl
cmp
and
sahf
mov
xchg
stc
fbld
or
inc
rol
rcl
xchg
movs
loope
mov
aas
repnz
stos
inc
outs
cwde
push
sub
int3
ja
ret
lods
dec
or
mov
jp
fs
arpl
cmps
loopne
cli
sub
fdiv
mov
jo
jns
mov
jp
jae
adc
(bad)
lods
push
int
push
rcl
xchg
mov
es
bound
cmp
es
sub
push
arpl
ror
sbb
dec
xchg
mov
pop
cmps
inc
retf
xor
push
mov
jl
mov
std
jge
xor
psubsb
xor
outs
jne
inc
mov
and
mov
fiadd
cwde
add
sub
scas
hlt
inc
adc
push
or
push
inc
xchg
jecxz
loop
sub
(bad)
xor
int
mov
test
dec
std
test
cmp
inc
sub
and
or
sbb
inc
cld
sbb
adc
arpl
or
jmp
jge
and
fcom
into
sti
mov
and
pop
dec
ret
sub
jo
push
xchg
dec
jo
xchg
in
cli
dec
xchg
retf
inc
mov
hlt
sbb
js
cmp
sbb
sbb
mov
outs
or
pop
rcl
in
sub
aaa
push
lock
test
leave
into
and
lds
mov
out
int
xchg
push
fs
mov
je
fwait
rcr
(bad)
mov
pop
xor
mov
loope
bound
sbb
pop
cwde
cmp
(bad)
dec
add
pop
js
mov
shr
jo
jo
clc
out
movs
loope
jmp
adc
and
push
pusha
inc
push
test
xlat
xchg
in
and
or
mov
mov
xor
rcr
sbb
mov
mov
or
movs
mov
cmp
xchg
bound
loop
cwde
movs
dec
dec
push
sub
ss
pop
sbb
mul
loop
mov
xor
rol
dec
(bad)
in
mov
mov
cmp
xchg
out
fistp
int3
cmovno
arpl
cmp
das
sub
pusha
inc
das
(bad)
test
out
xor
enter
mov
sub
adc
jb
xor
pop
push
inc
or
aam
in
mov
aam
xchg
pop
jno
push
shr
lods
xchg
adc
pop
mov
pop
jge
hlt
jbe
pop
add
pop
stos
retf
das
fstp
mov
imul
and
std
jno
aad
in
sub
cmp
arpl
int3
mov
and
pop
xor
xchg
mov
out
movs
lea
mov
sub
icebp
mov
fdiv
lahf
loop
in
inc
adc
add
dec
in
jb
mov
jnp
bound
add
push
mov
xor
xor
shl
mov
or
dec
sub
or
xor
mov
jle
sub
pushf
push
push
scas
mov
stos
push
inc
adc
rcl
dec
fdiv
jp
std
cmps
xor
retf
mov
pushf
mov
sub
or
out
sub
inc
jmp
inc
push
in
in
pop
out
mov
inc
outs
test
pop
push
jno
mov
lahf
xchg
jns
(bad)
xchg
xor
push
call
xchg
inc
push
dec
or
xor
push
cwde
pusha
sub
popa
mov
jge
cmp
inc
ror
js
ret
lock
mov
and
cwde
hlt
loopne
fbstp
push
dec
mov
mov
mov
popf
out
mov
or
cmp
pop
adc
mov
and
inc
mov
push
jp
pop
ds
mov
xchg
aaa
mov
std
fbstp
call
xchg
rcl
dec
movhps
and
bound
std
(bad)
fcmovne
sahf
clc
clc
stc
jb
cmp
push
pop
out
out
mov
xlat
mov
mov
mov
pop
out
aad
push
into
mov
cdq
(bad)
cli
jne
pop
je
pop
sbb
xchg
xchg
imul
stos
push
xchg
adc
mov
mov
mov
dec
add
cs
xchg
pop
inc
mov
cmp
stos
cwde
jmp
icebp
fdivr
fs
les
or
xchg
mov
loopne
(bad)
xor
loop
test
daa
fmul
repnz
test
outs
mov
sub
adc
adc
dec
push
lods
push
stos
arpl
mov
jmp
xchg
loope
mov
in
cmc
inc
fstp
pop
sbb
jbe
adc
push
push
loope
and
xor
jecxz
jmp
sti
arpl
xchg
adc
imul
add
inc
mov
jg
or
inc
das
mov
std
stc
and
ficom
fstp
cmc
dec
xchg
cmc
int3
pop
inc
inc
das
xchg
out
sti
jbe
adc
xor
mov
cmp
mov
push
hlt
adc
or
int
jle
push
loopne
lahf
loopne
cmps
pop
dec
jg
sahf
(bad)
out
push
inc
cmp
xor
mov
(bad)
push
cmps
dec
fucomip
or
inc
and
es
inc
aaa
jle
dec
fsubr
mov
(bad)
push
fisub
lock
jecxz
or
(bad)
int3
adc
pushf
inc
int
sub
loopne
mov
mov
xor
cld
inc
sbb
sar
add
adc
mov
pavgw
addr16
push
xchg
pop
ret
clc
sub
pop
pop
stos
jg
mov
lock
cmps
shl
sbb
stos
mov
xchg
scas
mov
stos
enter
sub
gs
(bad)
call
or
jb
je
(bad)
pop
ins
popa
arpl
inc
in
dec
push
mov
push
adc
ins
lods
add
push
test
fsubr
int3
xor
cmc
rcr
xchg
dec
ret
mov
jno
cwde
and
and
xor
stos
xchg
jnp
and
fdivr
clc
cmp
(bad)
rcr
idiv
xor
jmp
bound
in
aad
cmp
out
add
adc
es
mov
dec
leave
jo
push
inc
cs
(bad)
cld
or
aad
sub
pop
sbb
outs
aaa
push
sbb
std
out
inc
loopne
stos
cmps
hlt
call
dec
ds
(bad)
xor
in
or
lds
gs
add
mov
mov
sbb
sbb
dec
in
(bad)
adc
test
cmp
imul
hlt
outs
(bad)
out
mov
jns
push
mov
or
add
fwait
pop
jg
dec
sbb
dec
ja
clc
mov
and
in
pusha
adc
repnz
push
jb
adc
ret
rol
xchg
data16
pop
cmp
sub
lds
xor
jo
cmp
jg
(bad)
scas
fcmovu
lods
popf
repz
jnp
das
jmp
dec
(bad)
retf
lods
out
sbb
ficom
dec
neg
push
rol
cmp
pop
int3
lahf
shr
call
mov
jl
repz
sub
xchg
cmp
jmp
je
add
cld
push
or
retf
inc
stc
aad
ret
or
pop
sub
addr16
imul
(bad)
jle
push
fwait
jns
inc
loop
jmp
call
mov
push
lods
dec
icebp
xor
xor
or
xchg
ret
add
inc
dec
fnsave
sub
in
popa
ins
adc
lods
jge
cdq
loope
sub
dec
aaa
aad
dec
mov
sbb
sbb
aas
push
dec
sbb
aad
xor
mov
mov
cmp
loop
jle
sub
(bad)
retf
mov
and
stos
mov
(bad)
aam
mov
fmul
dec
dec
and
or
enter
sahf
mov
outs
push
data16
mov
add
test
mov
cmp
pop
or
dec
cmp
and
out
sub
ret
xchg
mov
inc
or
pop
mov
cmp
push
ja
jle
(bad)
ds
loop
popf
mov
mov
cwde
fisub
mov
out
jg
pop
add
adc
dec
jae
in
jnp
xor
(bad)
ins
dec
mov
xchg
adc
imul
inc
iret
scas
push
sbb
cmp
adc
lea
lea
mov
or
dec
pop
aad
out
inc
outs
cmps
test
sub
scas
xlat
dec
data16
loop
cmp
adc
mov
fcomp
fmul
test
pushf
ds
pop
mov
or
mov
in
push
or
(bad)
repnz
or
pusha
stos
aas
adc
cmps
and
add
movs
or
xor
ins
popa
mov
adc
or
addr16
in
sbb
jmp
mov
(bad)
stc
ja
imul
stos
and
dec
retf
cli
ret
push
xchg
mov
or
push
les
inc
rcr
mov
enter
es
and
pop
xchg
mov
mov
es
test
cwde
jge
pop
mov
div
push
mov
retf
call
nop
bswap
pop
push
xlat
sbb
add
mov
inc
push
and
dec
retf
mov
leave
sub
and
ja
xchg
cmps
in
cmc
ja
mov
int
mov
mov
sbb
fucomi
sub
dec
dec
popa
scas
inc
stc
xlat
inc
push
imul
imul
sub
mov
xchg
ficomp
jo
jne
rcl
aam
xor
and
test
jne
retf
shr
cmp
sub
push
in
mov
add
push
dec
stc
ficom
pop
or
push
fiadd
retf
inc
sti
mov
adc
cmps
aaa
or
iret
and
das
xor
jmp
jnp
aad
mov
push
fsub
mov
mov
mov
shl
leave
xlat
mov
fucomp
push
and
sar
retf
loopne
xor
fisttp
jecxz
sub
aam
xchg
enter
je
pop
pushf
cdq
add
stos
jb
fstp
xor
retf
or
retf
test
sbb
call
mov
and
mov
mov
push
add
aad
pop
sbb
push
mov
cs
or
inc
adc
jo
pop
pop
cmp
hlt
jns
cmp
inc
(bad)
rol
push
xchg
add
pop
jae
pop
add
movs
fild
jmp
add
out
(bad)
sbb
mov
out
jns
bound
rcr
gs
push
cmp
in
ds
enter
push
mov
mul
inc
push
movs
aam
adc
and
dec
mov
mov
icebp
cmps
mov
movs
or
mov
or
iret
adc
cmp
aaa
cmp
sbb
out
outs
rcl
ret
std
xchg
retf
stos
cmps
out
pextrw
xor
inc
xchg
sub
mov
add
inc
out
mov
dec
(bad)
mov
jb
xchg
and
and
jmp
sahf
mov
add
jp
jns
enter
ds
or
js
shl
rcr
cmps
fmul
movnti
in
fucom
or
jo
rol
js
jns
nop
lock
add
hlt
mov
and
and
scas
movs
or
pop
(bad)
xlat
popf
sbb
and
push
jb
xor
inc
xor
dec
or
push
xor
fstp
mov
js
push
aad
gs
mov
and
out
dec
push
adc
mov
fild
loop
adc
pop
cmps
pop
nop
adc
push
das
inc
ficomp
inc
or
pushf
cmp
and
jmp
mov
add
pop
lods
stos
(bad)
jle
inc
pop
sbb
leave
or
ja
sub
mov
sahf
shl
dec
mov
mov
sbb
sub
pop
jb
pop
cmp
xor
ror
arpl
fisttp
leave
std
inc
mov
rcl
les
adc
in
ret
ja
xchg
imul
mov
pop
mov
mov
sbb
dec
or
jmp
cmps
icebp
xor
in
(bad)
jns
or
sub
mov
and
mov
cwde
or
inc
(bad)
inc
in
jge
xlat
mov
stos
xchg
lods
lea
pop
push
mov
mov
mov
push
int
xchg
adc
add
xchg
inc
jno
mov
push
fwait
sub
stc
cmp
(bad)
xchg
dec
rcr
movs
mov
jp
lods
enter
inc
add
mov
mov
fcmovnbe
xor
addr16
hlt
mov
jg
fistp
pusha
pop
xor
xor
in
xor
movs
jae
imul
cmp
xor
push
sub
call
sub
sbb
lea
pop
mov
push
cs
xor
inc
(bad)
cmps
movs
jb
pop
pushf
mov
dec
rcr
jns
push
pop
fld
mov
mov
enter
mov
loope
not
add
adc
inc
xchg
push
xchg
adc
fidiv
lock
hlt
int
loop
sbb
dec
and
mov
cmps
call
out
lods
ret
(bad)
push
loop
in
scas
popf
ds
ds
push
lds
mov
xchg
dec
daa
arpl
xchg
xor
push
dec
cmc
out
dec
xchg
repz
fs
rcr
ja
or
or
shl
xchg
add
add
mov
rcr
in
enter
retf
imul
sub
mov
dec
ds
jae
sar
out
pop
mov
shr
mov
mov
fs
and
add
loopne
pop
cmp
dec
pop
shl
add
sbb
pop
fcomp
push
retf
lea
pop
push
int3
pop
mov
das
mul
pop
push
mov
pop
push
je
add
icebp
fwait
lods
call
popa
pop
imul
inc
sti
cmp
or
jmp
xor
test
cdq
int3
out
movs
xor
mov
je
pop
dec
xchg
dec
xchg
and
pop
xor
add
xor
mov
jmp
and
cmp
jl
adc
jmpw
leave
jo
neg
cmp
dec
xchg
mov
jmp
int
fdivr
lock
jmp
ins
add
ja
call
jb
mov
(bad)
mov
(bad)
mov
fcom
sub
loopne
xor
and
dec
in
call
repz
xor
sub
mov
stc
rol
rcl
imul
mov
das
sub
jbe
je
test
dec
pop
sti
fs
cmp
sub
stos
loop
mov
imul
(bad)
loope
jmp
movs
fadd
div
into
mov
xor
or
aas
mov
(bad)
mov
mov
cmp
aam
pop
stos
test
fdiv
pop
inc
mov
add
inc
mov
push
pop
loop
push
hlt
mov
and
(bad)
jae
inc
jae
loope
fadd
mul
pop
pop
or
fnstcw
sbb
imul
push
fwait
jmp
pop
out
mov
stc
int
stc
lea
out
pushf
mov
vcvtps2dq
and
fs
and
and
sar
pushf
gs
in
push
loop
gs
cdq
pop
push
cmps
xor
jo
fcomp
idiv
inc
shr
ss
fild
clc
idiv
call
mov
(bad)
in
lahf
or
pop
js
sub
fcom
out
or
pop
pop
call
les
cmc
ja
add
cmps
push
inc
xchg
adc
addr16
cmp
ficom
mov
in
push
repnz
jbe
pop
push
jne
cli
inc
fimul
mov
mov
add
and
mov
jno
jmp
jo
jg
movs
cmp
(bad)
ss
fiadd
(bad)
test
outs
hlt
loop
sti
(bad)
and
dec
scas
aad
repnz
nop
dec
pop
jmp
je
les
movs
sub
out
and
cld
loopne
and
call
mov
or
fisttp
ja
(bad)
sub
out
sbb
sub
out
cwde
pop
add
int3
mov
aam
sub
push
inc
or
push
cmp
xchg
add
pushw
(bad)
jg
loope
push
pop
jle
mov
enter
cwde
lds
iret
rol
cmp
mov
mov
jg
jmp
sub
adc
cmp
les
adc
sub
inc
sbb
push
pop
loop
jmp
mov
(bad)
scas
or
rol
adc
or
cmp
push
cld
aam
push
shl
aam
int
jecxz
jl
aas
call
mov
mov
pop
and
xor
adc
mov
mov
cs
and
test
movs
pop
push
cmps
pop
cmc
repz
mov
or
xchg
cmp
jns
mov
js
push
jmp
call
pop
test
je
icebp
pop
pop
jg
xchg
jbe
bound
mov
jecxz
add
loopne
loopne
movs
leave
mov
cdq
fstp
clc
mov
xor
xchg
cli
xchg
jo
gs
movs
lock
out
fld
cwde
mov
add
dec
ja
ret
mov
xor
das
outs
inc
jg
loopne
inc
jge
sub
and
mov
arpl
jp
push
push
mov
lods
int
jle
push
out
cmc
cmp
idiv
ja
sub
sub
and
hlt
sbb
loop
ins
lahf
push
or
dec
aam
fistp
push
or
cs
fnstsw
movs
repnz
push
sbb
jbe
jnp
shr
out
loope
scas
mov
repnz
cs
cli
(bad)
mov
and
sub
test
imul
inc
pushf
scas
cmp
outs
cld
pop
popf
int3
fisttp
jmp
inc
mov
xor
fdiv
cmps
paddusw
add
xor
fs
adc
cmp
ret
int3
js
sti
cmp
ins
rcr
mov
mov
stos
mov
and
cmc
fiadd
pushf
cmp
inc
les
or
xor
jb
(bad)
shl
in
and
fnstenv
cmp
xchg
ja
stc
retf
out
enter
adc
fwait
xchg
and
icebp
das
fldcw
fwait
push
or
(bad)
or
(bad)
neg
gs
retf
pop
adc
rcl
sub
sub
xor
pop
test
popa
add
dec
leave
enter
lds
cmp
pop
add
arpl
mov
jmp
jns
cmp
pop
addr16
stos
inc
jge
sub
sar
xor
in
retf
mov
std
dec
and
enter
pop
enterw
jmp
or
inc
aas
cmps
js
call
mov
dec
je
cmp
xchg
mov
test
and
pop
sti
mov
outs
out
arpl
pop
push
mov
xor
popf
adc
xchg
jo
or
or
je
sub
mov
leave
adc
pop
sub
adc
cmp
cwde
cli
mov
scas
mov
(bad)
in
fwait
pop
mov
xchg
push
xchg
inc
and
sub
loop
sbb
lds
pop
jbe
xor
mov
push
das
(bad)
push
push
sbb
or
outs
in
and
cmps
movs
xchg
xchg
push
or
cld
into
int
xchg
lock
xchg
ds
fsubr
(bad)
int3
adc
out
xchg
pop
or
icebp
cmp
shr
xlat
stos
sub
mov
lods
das
mov
xor
xchg
movs
xlat
cmp
dec
rol
sti
and
movs
adc
loope
outs
cmps
into
xor
pop
mov
and
mov
cmp
shl
xchg
xor
mov
mov
or
mov
cdq
xlat
jg
mov
push
mov
xlat
dec
inc
cmps
xchg
sub
mov
nop
(bad)
out
shr
mov
xor
jg
jle
daa
pop
in
fstp
scas
cmp
and
push
rcl
inc
pop
cmc
inc
(bad)
sub
mov
pop
mov
or
ins
(bad)
rcr
ret
jae
fcomi
add
scas
inc
mov
stc
ss
mov
test
hlt
inc
adc
or
arpl
dec
bnd
call
add
out
adc
xchg
loope
ret
mov
stos
pop
jmp
in
fwait
neg
dec
cmps
adc
xchg
sub
jo
adc
sbb
mov
xchg
mov
or
xchg
cmp
retf
mov
sar
nop
cwde
and
pushf
fcmovnbe
je
retf
mov
mov
inc
xchg
sub
fsub
cmp
sbb
int3
sub
push
daa
cmp
in
sbb
add
lds
mov
add
sub
cdq
add
xor
add
ss
ss
adc
inc
push
ins
dec
in
sub
inc
popa
retf
aas
loop
jo
sub
nop
lea
jmp
arpl
out
sahf
pusha
fld
sub
sti
cmc
add
push
cdq
mov
enter
or
cmp
fwait
and
push
add
es
cwde
sbb
fbstp
push
hlt
mov
loope
sub
ja
fist
sahf
mov
xor
retf
or
stc
xlat
data16
adc
mov
(bad)
sbb
mov
xor
dec
sbb
add
cdq
mov
and
nop
sbb
aaa
cld
dec
pop
and
js
xlat
(bad)
xchg
xchg
xor
(bad)
jg
repnz
sub
ins
inc
in
mov
push
add
int
inc
push
test
cld
push
cmp
jbe
sbb
mov
push
adc
mov
retf
repnz
lods
stos
xchg
shl
push
jb
sub
adc
imul
lods
fs
jg
in
mov
cmc
dec
push
sar
jns
xor
pop
adc
aaa
xor
mov
mov
mov
ja
push
and
rcr
sti
xchg
push
leave
mov
push
dec
sti
cli
mov
mov
mov
(bad)
in
adc
or
push
test
jg
in
xchg
cmp
xor
xchg
push
jl
in
das
daa
icebp
add
push
fisttp
xor
retf
in
xor
call
call
lds
in
jbe
sbb
loopne
sar
je
jg
mov
push
scas
inc
dec
push
(bad)
mov
jno
mov
mov
add
xor
(bad)
inc
sbb
push
inc
jg
nop
outs
ja
add
xchg
std
pop
addr16
test
sbb
das
es
test
xchg
cmps
cwde
sbb
xor
sahf
or
push
inc
sar
cmp
dec
loopne
xchg
imul
sub
bsf
inc
add
loopne
nop
adc
lods
loope
dec
or
jl
stos
pop
pop
imul
ds
dec
pop
or
cmp
sub
das
jmp
pop
shr
xchg
or
mov
sbb
bound
lea
outs
xor
mov
daa
mov
lods
in
push
mov
(bad)
(bad)
jmp
mov
retf
sbb
push
shl
push
jnp
stos
inc
cli
push
fistp
imul
add
sub
dec
cmc
movs
rsm
data16
lea
xor
lods
add
(bad)
addr16
int
shl
(bad)
xchg
scas
or
xlat
pop
xchg
dec
shl
scas
mov
mov
out
dec
mov
dec
pop
bound
sbb
lods
icebp
or
cwde
test
pop
xchg
fstp
add
jg
arpl
mov
test
lea
mov
imul
test
jge
xor
fcomp
push
test
out
mov
std
cmp
adc
ret
jle
pushf
mov
cld
cmp
setge
shr
pop
cmp
mov
popf
outs
pop
scas
mov
call
scas
cmp
adc
jnp
and
stos
fwait
loop
in
mov
rcr
rol
rcl
(bad)
aas
and
dec
push
adc
mov
mov
mov
xor
pop
call
pop
in
mov
cmp
add
fld
leave
cmp
mov
push
adc
xchg
jb
ror
xor
mov
mov
jmp
cmps
lods
les
test
stos
repnz
clc
ins
mov
push
int
add
fwait
mov
xor
out
push
xchg
scas
xor
mov
scas
sbb
push
pop
jae
repnz
jp
bound
ins
mov
xchg
retf
jns
popf
gs
rol
jmp
not
test
pop
icebp
repz
call
and
aad
sar
in
jmp
jo
pop
mov
fidivr
pop
stos
or
ja
mov
cwde
mov
test
xchg
scas
aas
sar
jmp
repnz
push
mov
and
leave
push
xlat
xchg
pop
pop
inc
cmp
ret
test
jg
cmp
sub
js
push
xor
sub
or
push
jne
scas
mov
push
jnp
mov
xor
mov
cmp
scas
mov
(bad)
call
or
mov
cmc
fwait
ret
clc
jmp
fcom
push
retf
out
dec
aam
push
ss
jb
xchg
in
xor
and
popa
fst
or
outs
dec
and
pop
popf
in
mov
arpl
cmp
xchg
jmp
cmp
and
aaa
jle
js
sub
call
inc
fidivr
stos
cmp
lods
and
dec
rcr
std
bound
adc
lods
xor
clc
scas
mov
adc
movs
dec
dec
mov
inc
enter
adc
jge
int3
dec
xlat
(bad)
jecxz
movs
mov
in
sbb
add
pop
mov
pop
inc
or
push
adc
int
add
xchg
adc
jl
or
test
or
int
push
push
retf
mov
xor
int3
pusha
call
mov
das
cmp
(bad)
push
fmulp
dec
jl
lods
push
movs
mov
lods
ins
addr16
adc
clc
repz
comiss
movs
push
into
mov
icebp
iret
test
test
fxch
and
pop
into
repz
mov
fsubr
jge
aad
pop
sub
jmp
fidiv
or
inc
aad
dec
shr
mov
mov
add
lock
cwde
sbb
push
retf
cmps
sub
popa
jp
mov
inc
icebp
gs
fsubr
sbb
jmp
jl
adc
push
cdq
cmps
sahf
nop
and
in
test
fnstcw
jne
xor
(bad)
dec
mov
jl
fnsave
pop
into
shl
movs
inc
pop
adc
inc
add
into
sbb
push
sub
ds
or
push
idiv
inc
jb
arpl
std
push
mov
jecxz
push
mov
fsubr
pop
lds
mov
pop
mov
addr16
out
loop
mov
out
pusha
add
lahf
jns
out
xor
fmul
push
leave
and
inc
pop
ins
mov
sub
xor
stos
pop
aam
xor
scas
adc
mov
cmp
test
fcom
and
imul
adc
test
data16
mov
repnz
jmp
push
mov
into
rcl
fisttp
ret
stc
das
xchg
fs
xor
xchg
(bad)
sub
scas
xchg
adc
(bad)
aaa
add
adc
hlt
dec
cmp
mov
xchg
mov
scas
xchg
push
lods
retf
and
loope
mov
push
aaa
mov
mov
push
sbb
out
or
adc
js
jmp
ret
lea
mov
loope
pop
loop
icebp
sub
rcr
rol
push
popf
int3
call
mov
cmp
jge
loop
cmp
mov
push
rcr
jmp
xchg
xor
dec
mov
inc
(bad)
fist
jnp
push
cmc
mov
jecxz
mov
idiv
mov
jne
dec
call
lock
cmp
jmp
adc
adc
xchg
cmp
fmul
fisttp
fimul
add
or
lar
xchg
clc
(bad)
xchg
inc
fdiv
add
iret
cmp
scas
iret
int
cmp
or
jecxz
sbb
xor
pop
fstp
into
xchg
es
and
push
cdq
add
add
and
pusha
ja
ins
imul
lds
cmp
ja
shl
and
inc
or
jle
dec
adc
push
test
jp
shr
cmp
push
daa
call
jb
mul
aam
mov
pop
adc
inc
stos
xlat
fucompp
jns
call
sbb
sub
cmp
fcom
push
push
push
inc
pop
xchg
lods
jmp
sti
shr
jl
aas
retf
sbb
inc
popa
lods
mov
inc
mov
and
push
movs
push
adc
retf
xchg
scas
sub
dec
out
ins
jae
add
lahf
cmp
jecxz
jmp
loop
push
out
mov
push
mov
fst
cmp
out
sub
fidiv
pop
stc
push
xchg
xor
add
jl
pop
fucom
je
mov
test
in
mov
rcl
jp
into
out
mov
bound
cmps
push
xchg
cld
(bad)
(bad)
push
jae
pop
push
rcr
hlt
js
ss
dec
mov
jmp
jmp
mov
xchg
cs
push
and
and
jl
in
mov
call
imul
xor
aam
cmp
in
test
jnp
sbb
pop
shr
loop
jge
mov
mov
pop
mov
jmp
arpl
(bad)
mov
mov
sub
out
out
jg
sar
mov
adc
jge
sub
ss
retf
xlat
mov
adc
dec
(bad)
cmps
add
push
sbb
cmc
adc
cmp
mov
cmps
xor
add
sbb
dec
dec
sbb
outs
loopne
call
mov
jmp
mov
cmp
in
push
mov
mov
mov
sub
mov
pop
into
(bad)
mov
imul
fcmove
mov
sbb
stc
in
retf
mov
jle
popa
mov
sbb
push
aam
rol
popf
inc
lods
ret
iret
rol
ins
in
sbb
popa
mov
pusha
fs
outs
movs
or
ins
sbb
das
cmp
into
cmp
sahf
add
mov
or
ja
icebp
push
jns
mov
hlt
xor
xchg
push
in
arpl
xor
fisubr
retf
jle
test
imul
fwait
int
inc
pusha
sbb
inc
pop
ins
(bad)
mov
adc
jle
jno
sbb
arpl
add
ret
fist
nop
mov
or
xchg
push
dec
sbb
pop
sub
jno
cmps
xor
and
add
inc
push
out
xor
cwde
inc
pop
xor
test
jno
push
or
jle
dec
addr16
push
jmp
pop
das
in
push
cdq
push
loop
mov
call
cmp
nop
loopne
cli
or
out
jbe
(bad)
(bad)
mul
fwait
xor
push
ss
stc
cmc
jp
movs
ror
test
push
or
jecxz
cmp
scas
clc
shl
dec
fcmovb
mov
xchg
mov
cwde
and
cmp
push
adc
outs
xor
scas
sub
jecxz
mov
mov
cld
ins
sbb
sub
inc
push
push
scas
cmp
sbb
in
cs
lahf
xor
out
mov
dec
or
sbb
scas
mov
add
push
ret
jb
or
cwde
push
jle
or
add
inc
add
sbb
ss
ja
rdmsr
and
int
and
or
lea
pop
pop
pop
addr16
rcr
aaa
adc
call
jnp
and
dec
dec
pop
fidivr
out
lods
cmp
mov
mov
inc
arpl
push
dec
push
retf
pusha
add
adc
loopne
aad
inc
or
lds
xchg
pop
sbb
mov
or
jae
scas
call
cmp
jno
mov
xchg
or
lea
test
push
jl
out
shl
adc
push
in
je
mov
dec
les
push
push
xor
fld
popf
cmps
(bad)
(bad)
cmc
aad
mov
mov
fstp
mov
jo
test
jns
aam
imul
pop
push
cld
popa
dec
mov
jl
mov
jbe
mov
inc
push
adc
ins
cdq
enter
je
mov
fldcw
xor
dec
cli
call
fcomp
sti
movs
enter
adc
and
jg
adc
sbb
xchg
pop
add
bound
mov
jmp
push
pop
push
jg
xchg
or
xor
imul
hlt
out
and
add
sbb
leave
xlat
imul
cmp
sub
dec
xchg
add
hlt
mov
jne
push
repz
cmc
movs
and
aad
xchg
mov
fwait
pop
into
je
pop
adc
add
test
mov
fisub
fistp
sub
xchg
fwait
outs
inc
sbb
jmp
xchg
sub
inc
sti
sbb
push
jl
call
ins
mov
mov
aam
mov
push
call
call
push
test
cmp
ror
xchg
push
fidivr
(bad)
or
mov
jg
aam
cmp
cmps
mov
jae
inc
xor
rcl
push
pop
or
push
(bad)
pushf
jl
dec
retf
mov
xchg
jbe
std
ret
retf
sub
enter
pop
out
outs
pushf
cmps
sbb
(bad)
cmp
in
mov
mov
mov
imul
ret
add
repz
and
ins
sar
mov
ins
loope
push
les
rcl
clc
push
mov
cwde
sbb
std
jmp
daa
mov
inc
inc
xchg
loope
sub
xchg
push
outs
sub
jge
push
cmp
inc
ret
pop
punpckhbw
test
js
jmp
cmp
xor
push
and
push
xchg
ja
xor
dec
outs
out
add
mov
leave
mov
fdivr
pop
(bad)
fisubr
ret
inc
inc
cmps
arpl
je
jmp
movs
xchg
or
and
or
inc
imul
fcom
lds
jb
mov
scas
add
call
xchg
pop
pop
xchg
xchg
imul
mov
sbb
xchg
stos
pop
aas
sti
mov
xchg
or
xlat
push
inc
repz
inc
sbb
and
xor
pop
cmp
ds
sub
std
cmp
lahf
movs
or
inc
pop
fsub
(bad)
inc
pop
cmp
sahf
imul
leave
neg
xchg
adc
dec
je
add
in
pop
fsub
ss
fidiv
mov
outs
inc
dec
xor
not
mov
int3
inc
ss
mov
fsub
xchg
cwde
dec
add
mov
(bad)
pop
mov
out
jmp
mov
xchg
mov
dec
push
addr16
ss
inc
jmpw
(bad)
neg
test
jb
cwde
add
sbb
mov
xlat
pop
mov
jg
push
les
mov
mov
scas
mov
in
fsub
lods
cli
pop
call
retf
movs
xor
je
pop
retf
call
xchg
fwait
mov
dec
sar
mov
div
add
jb
push
mov
jno
popa
fistp
adc
pop
leave
movs
mov
rol
dec
out
dec
or
cmp
xor
xor
daa
mov
movs
push
xchg
cmp
pop
sub
dec
sub
out
subps
sbb
mov
lahf
inc
mov
stos
ficom
sbb
dec
test
dec
add
out
mov
inc
int3
push
retf
sbb
push
and
sbb
push
add
sub
cmp
mov
adc
mov
ins
xor
retf
sub
clc
cmova
mov
jno
ins
enter
ins
fldpi
jo
loop
mov
mov
jno
ss
rol
lods
sbb
loop
in
cmp
pushf
mov
pop
pop
adc
inc
lods
adc
lds
rol
imul
push
push
lds
sub
xor
cmp
xlat
dec
popa
(bad)
jne
adc
movs
nop
popa
push
ss
jbe
sbb
loopne
leave
mov
cmps
sub
test
push
sbb
(bad)
jmp
mov
lock
sti
dec
in
dec
mov
sbb
pop
repz
or
dec
and
mov
fst
outs
xchg
push
inc
sti
mov
js
cmc
test
jnp
mov
dec
les
xchg
inc
or
pop
arpl
ins
add
adc
je
or
pop
pop
into
call
xchg
and
xchg
dec
aaa
adc
movs
inc
sub
xchg
les
lock
xor
push
or
add
retf
pop
inc
inc
and
loope
add
rcr
xor
jecxz
pop
lds
leave
in
shl
mov
cld
sub
inc
cmc
jmp
fwait
les
and
inc
ds
adc
je
mov
sub
pop
div
adc
xlat
xor
rol
(bad)
pop
lea
mov
sub
or
pop
stos
loop
push
adc
in
inc
or
jl
mov
pop
pushf
lock
lock
push
dec
push
jmp
or
out
aad
test
leave
fist
hlt
inc
push
cs
inc
loop
test
ret
or
adc
das
sub
pop
cmp
sub
xchg
mov
imul
pop
std
enter
mov
cdq
enter
sahf
and
rol
jg
repnz
loop
std
lahf
(bad)
xchg
test
ins
pushf
or
xchg
sbb
mov
in
movs
add
stc
in
adc
stos
je
or
jmp
jo
sub
gs
shr
and
fwait
inc
pusha
pushf
into
cmp
sbb
hlt
mov
add
retf
xor
pushf
cmp
stc
inc
mov
pop
and
adc
add
leave
sti
into
add
nop
dec
push
add
into
movd
xchg
xchg
xchg
sub
adc
jno
daa
jmp
inc
sub
inc
pop
mov
(bad)
in
mov
xor
hlt
dec
es
(bad)
push
mov
and
inc
pop
(bad)
sbb
and
or
aas
or
or
cmp
sbb
inc
test
leave
fs
pop
bsf
rcl
test
enter
push
and
inc
push
movs
inc
push
push
outs
mov
lods
jbe
lea
push
push
call
jae
dec
push
out
repnz
push
jp
mov
pop
mov
sub
cmps
mov
or
cwde
add
jecxz
cmc
in
jp
pop
repz
into
push
mov
jecxz
push
aas
pusha
aaa
aad
cli
sahf
popf
stc
pop
(bad)
mov
add
jnp
scas
mov
aam
adc
popf
jns
das
inc
(bad)
movs
or
push
call
inc
push
or
push
cmp
mov
or
cmp
cmc
add
mov
xor
ins
jo
push
or
cmp
push
mov
fcomp
nop
mov
out
sti
mov
dec
cmp
xor
pop
cmp
movs
out
mov
(bad)
loop
sub
jo
cdq
pushf
(bad)
xchg
or
test
sub
(bad)
in
inc
fs
mov
push
pop
push
ins
or
jge
lods
sub
xchg
int
push
and
mov
push
add
ffree
cwde
cs
(bad)
jg
out
jae
imul
push
out
out
push
int3
out
jge
mov
sti
add
sub
retf
sbb
ror
jnp
adc
ficom
(bad)
pop
sbb
out
and
ins
test
mov
rcr
cmp
sbb
loopne
dec
retf
ror
lahf
cwde
jmp
mov
stc
fiadd
xchg
xchg
cmps
pop
popa
add
sub
inc
(bad)
loop
clc
pushf
pusha
xor
aaa
ror
mov
aam
add
adc
test
movs
ja
loope
ror
inc
out
loopne
mov
adc
sub
mov
data16
adc
add
mov
outs
fbld
sub
clc
jbe
sub
gs
(bad)
jmp
adc
jge
in
rcl
cwde
sub
stc
inc
xchg
mov
add
xchg
mov
adc
gs
mov
cmps
nop
scas
adc
add
outs
fwait
xlat
pop
lds
inc
inc
jge
or
enter
inc
test
imul
cmp
push
dec
fs
cmp
aas
push
sbb
outs
inc
fs
bound
push
out
add
mov
and
fild
shr
sar
add
mov
rcr
jbe
out
out
fld
imul
add
jecxz
push
inc
xor
push
fdiv
xor
ret
scas
xor
dec
adc
fs
(bad)
xlat
pop
loop
and
repnz
shl
xchg
mov
jp
xor
fcmovnu
test
pop
adc
cmps
cmp
add
fisubr
xchg
add
ins
mov
sbb
lods
lea
fbld
fidivr
push
mov
or
xchg
jne
scas
dec
add
sub
(bad)
pop
xor
and
enter
cmp
loope
dec
adc
in
mov
shl
cmp
push
or
enter
in
or
js
sbb
mov
push
add
call
mov
inc
cmc
sbb
mov
pop
(bad)
and
popf
repnz
dec
adc
inc
mov
jecxz
neg
push
sub
fstp
dec
fwait
gs
dec
mov
fldenv
jno
in
lahf
pop
xchg
push
mov
bswap
xchg
loope
outs
in
mov
test
adc
mov
out
sahf
(bad)
test
mov
cmp
xor
inc
retf
nop
sub
test
cmp
push
shr
enter
cmp
pop
sub
push
dec
iret
dec
or
push
dec
dec
jl
sub
loopne
xchg
pop
outs
xchg
and
push
mov
mov
or
jbe
ror
(bad)
jg
jns
jge
jmp
xor
shl
cmp
shr
(bad)
enter
out
inc
nop
cmp
mov
or
ins
push
mov
xchg
daa
inc
pop
movhps
in
sbb
arpl
pop
inc
sbb
and
push
leave
xchg
mov
neg
mov
push
mov
xchg
xor
cmp
mov
pop
cmp
fisttp
sub
stos
push
test
dec
scas
sub
cmp
imul
inc
xchg
ja
fst
pop
fisub
mov
sbb
push
xchg
ds
xor
int
(bad)
sub
or
sahf
xchg
mov
cmps
xlat
xor
mov
clc
xor
jo
retf
pop
cs
pop
cmps
push
ss
add
fild
ins
mov
pusha
mov
jns
repz
fcom
retf
pop
push
fstp
push
push
mov
sbb
fld
(bad)
xchg
daa
loop
sub
retf
cli
push
push
xchg
inc
in
fbld
inc
mov
push
lock
cmp
jb
dec
cmp
mov
xchg
or
mov
sahf
pop
in
sbb
adc
jns
dec
(bad)
pusha
xor
es
les
sti
inc
inc
fdivr
sbb
jb
sbb
dec
add
xor
std
dec
icebp
inc
fld
push
popa
jg
adc
sbb
shr
or
daa
je
or
rcr
dec
fs
and
jge
push
nop
xor
dec
adc
add
cmps
and
rcr
lods
lock
mov
retf
jbe
adc
jae
xor
mul
out
push
jae
mov
jmp
jle
mov
jmp
cmc
int
mov
loopne
aam
dec
push
out
xor
lods
adc
inc
mov
and
add
les
mov
aaa
ja
in
cdq
stos
cs
out
add
nop
int3
pop
loop
mov
jp
inc
lock
and
lahf
cld
nop
inc
mov
fwait
or
inc
test
arpl
cmp
inc
push
ss
loope
cdq
or
pop
mov
int
mov
push
and
stos
xor
fwait
mov
add
push
mov
pop
out
mov
xlat
pop
adc
fsubr
(bad)
mov
mov
aam
ds
call
(bad)
inc
mov
stc
xor
ins
push
mov
in
pop
xlat
fistp
test
mov
test
pop
pushw
dec
arpl
mul
imul
iret
mov
call
mov
cmp
retf
mov
add
or
adc
mov
in
jne
mov
add
sbb
ret
mov
(bad)
sub
shr
add
jnp
cmps
out
fild
xor
mov
aad
sub
xlat
imul
arpl
jnp
fs
mov
jns
mov
xor
jge
cli
push
mov
scas
(bad)
inc
frstor
hlt
mov
jbe
loopne
leave
stos
imul
add
aad
(bad)
mov
jnp
jb
retf
ss
addr16
test
sub
aas
cmps
rcr
es
add
ror
mov
jns
call
push
or
outs
rol
jae
mov
rcl
call
adc
stos
jmp
shr
outs
xchg
pop
fld
addr16
test
daa
aam
add
xchg
push
lahf
mov
cmp
ins
les
xor
adc
xchg
xchg
loopne
sub
fild
mov
int3
jb
mov
adc
push
in
loope
adc
mov
rcl
mov
repnz
(bad)
inc
ret
mov
sbb
iret
rcr
mov
idiv
retf
pop
adc
cmp
sti
xor
sbb
lock
loopne
xchg
xchg
sub
not
mov
inc
cmp
add
mov
push
arpl
push
lea
aaa
sbb
sbb
test
gs
xor
jle
cwde
mov
out
hlt
jge
pop
jge
pop
cwde
movs
jb
add
mov
sbb
ss
movs
imul
add
sahf
sub
sub
dec
pop
push
aad
inc
sub
push
icebp
mov
push
inc
mov
pop
push
aaa
(bad)
loopne
stos
test
setae
stos
pop
jno
mov
mov
lock
xchg
dec
dec
sar
outs
sub
jle
ret
xchg
js
stos
outs
xchg
mov
xchg
xor
xchg
stos
mov
fs
inc
iret
and
adc
in
outs
loope
fdivr
jno
xor
test
mov
ret
loopne
fldcw
or
inc
pusha
inc
jns
mov
repz
mov
xchg
or
int3
and
lock
xor
(bad)
mov
mov
sub
and
lods
jl
jae
pop
pop
fdiv
mov
call
push
mov
call
and
pusha
adc
sbb
cmp
(bad)
add
and
cmp
retf
into
lahf
jmp
mov
shl
sbb
add
rcl
mov
push
dec
lea
mov
cmc
setae
xor
shr
pop
dec
pop
dec
lds
popa
mov
xchg
pop
xor
repnz
xlat
fs
or
aad
lock
push
popa
mov
cmp
loopne
sub
call
cmps
push
mov
mov
jp
iret
mov
fs
pop
jnp
fsub
pop
popf
xor
xchg
xor
aad
pop
pushf
mov
loop
in
addr16
dec
mov
rcl
mov
enter
idiv
or
jo
es
inc
jecxz
xchg
jmp
enter
mov
(bad)
mov
mov
mov
xchg
out
cmps
imul
cmp
mov
shr
in
cs
push
jp
(bad)
int
pop
shl
imul
push
jo
or
fs
add
shl
add
mov
sbb
pop
imul
xor
ds
push
mov
mov
or
cmp
inc
dec
push
sbb
mov
mov
retf
add
idiv
mov
inc
aam
push
stos
aad
pushf
pop
popf
xlat
mov
jge
mov
cmp
dec
fld
fwait
movs
xor
push
push
push
pushf
loop
and
adc
fld
mov
mov
ins
out
clc
cmp
fbld
mov
cmp
aaa
mov
mov
mov
test
pop
mov
pop
pop
mov
js
or
(bad)
xor
outs
in
dec
jp
fld
fwait
mov
dec
add
push
xchg
mov
push
sar
into
xchg
jae
mov
lahf
mov
rol
and
adc
sti
hlt
mov
pop
test
ds
xchg
dec
(bad)
pop
call
dec
sti
ins
pop
mov
add
imul
push
fst
outs
ficomp
jnp
je
add
(bad)
mov
mov
clc
adc
scas
mov
jb
call
daa
(bad)
fnstenv
pop
addr16
push
dec
out
adc
outs
or
fild
mov
das
jp
mov
std
cli
pusha
arpl
mov
sub
js
popf
sub
mov
test
sub
in
aas
pushf
or
push
in
inc
xor
retf
ins
loopne
pop
pop
aam
arpl
retf
push
jmp
outs
pop
and
aad
lahf
adc
pushf
add
sub
cmp
rcr
or
jno
jg
and
pop
test
mov
fidiv
jecxz
jbe
sub
(bad)
push
xor
cmc
pop
xchg
or
cmc
js
mov
stos
mov
into
xor
stos
jl
dec
jp
out
add
sahf
je
cmp
xor
mov
cs
addr16
imul
xor
clc
adc
or
gs
rcr
dec
pop
bound
in
mov
not
add
jmp
jecxz
in
jg
out
sub
adc
aaa
repz
dec
stos
xor
mov
gs
dec
xchg
ror
dec
pop
pop
fs
xor
mov
movs
es
cli
repz
adc
rol
jp
std
inc
inc
jmp
sbb
call
pop
(bad)
cmp
out
push
mov
xchg
pop
adc
out
and
je
movs
ja
outs
pop
and
cmp
stc
mov
mov
push
cmp
pop
sub
jmp
repz
icebp
outs
push
imul
cmp
push
mov
loop
shr
mov
inc
cmp
frstor
xor
jbe
fwait
addr16
xchg
and
pop
sub
test
mov
arpl
mov
mov
hlt
push
(bad)
fimul
cli
into
inc
inc
leave
and
lock
mov
movs
sbb
xchg
adc
mov
(bad)
loop
push
daa
sub
int3
push
sub
fild
frstor
and
xor
je
cdq
jns
jle
sbb
mov
xchg
mov
xchg
dec
xchg
xchg
lods
push
adc
jno
add
mov
push
movs
ja
push
div
inc
out
fiadd
cmc
push
sar
sub
mov
lahf
mov
xor
outs
mov
mov
pop
shl
jb
sar
outs
mov
adc
gs
cmp
lds
jp
pop
jmp
inc
xchg
mov
mov
mov
and
adc
adc
mov
bound
nop
mov
jl
mov
pop
inc
addr16
or
xchg
std
xchg
aas
push
cmc
mov
jp
sub
push
pop
sbb
pop
(bad)
cmp
inc
lahf
pop
and
mov
xor
pop
and
and
cwde
mov
loopne
dec
jl
mov
jecxz
ror
or
retf
mov
ins
sbb
dec
test
inc
sahf
arpl
imul
(bad)
cdq
mov
jmp
imul
xchg
dec
(bad)
cmc
enter
lock
cmp
sbb
or
sbb
sti
(bad)
int
xchg
icebp
xchg
and
inc
or
daa
loop
dec
jmp
adc
lods
adc
push
xor
rcr
movs
neg
add
out
lods
and
xchg
lahf
jp
cmps
mov
imul
cmp
adc
dec
lods
adc
sub
cmp
lds
inc
stos
add
cmps
fadd
pop
jo
sbb
push
std
in
lods
dec
xchg
pop
retf
(bad)
push
or
outs
push
xor
xor
mov
mov
les
outs
jecxz
retf
or
das
loopne
daa
mov
push
int3
xor
push
icebp
loope
lods
and
fisub
xchg
adc
cdq
iret
hlt
push
mov
jmp
ss
cmps
jns
push
mov
das
sub
aam
fisttp
or
push
cmp
repnz
sub
mov
cmps
sub
push
icebp
add
push
enter
lock
fs
xlat
pop
and
jmp
pop
call
leave
xchg
mov
aad
call
jmp
and
call
jp
xchg
sub
loope
das
mov
push
pop
pop
push
sbb
sub
das
dec
out
add
sbb
fsub
sub
sahf
dec
xchg
xor
data16
add
inc
movs
loop
pop
out
inc
retf
div
mov
jo
arpl
stos
xchg
and
je
popf
in
arpl
adc
xor
jmp
sti
sub
jmp
arpl
sbb
cmp
lods
pop
and
mov
xchg
dec
add
sbb
sub
mov
imul
sbb
pushf
mov
in
aas
mov
in
pop
shl
shr
pop
sar
mul
jecxz
add
mov
jle
mov
pop
cmp
movs
sbb
repz
movs
pop
nop
scas
arpl
sub
fidivr
inc
sub
xchg
outs
js
fmul
sbb
xor
es
dec
stos
jno
jge
pop
stc
add
data16
mov
outs
mov
repz
xlat
ds
xor
or
mov
lods
push
jo
pop
jbe
sub
pop
pop
sub
dec
push
sub
test
sahf
int
pop
aas
aam
jp
push
jns
add
xchg
push
jp
in
mov
dec
jne
sub
outs
sub
gs
popf
push
add
add
mov
mov
out
xchg
out
loop
stos
lods
in
mov
mov
loop
adc
xor
(bad)
pushf
aas
data16
ins
sub
mov
in
js
mov
jno
jmp
or
mov
retf
shl
(bad)
mov
xor
or
int
inc
mov
push
mov
add
inc
lods
jns
dec
cmps
sti
leave
push
in
mov
test
stos
mov
mov
mov
adc
sar
stos
int3
push
ror
outs
adc
push
pushf
mov
mov
ds
mov
push
movs
repz
and
icebp
adc
adc
xor
xor
sbb
mov
bnd
pop
cwde
into
dec
addr16
pop
fsub
jbe
clc
xchg
pop
enter
(bad)
pop
push
or
pop
mov
and
std
ins
test
pop
int3
or
sub
xchg
aad
(bad)
cmp
jmp
retf
push
je
push
sub
pop
cmp
test
stc
sar
aam
and
fild
jmp
in
int3
mov
pop
mov
mov
cdq
shl
mov
mov
mov
add
cs
lods
retf
imul
cmps
xor
fwait
sub
jne
add
add
dec
jp
or
les
inc
cdq
ins
dec
jp
(bad)
shl
mov
stos
dec
jecxz
adc
mov
clc
js
xchg
cli
pop
jecxz
rcl
cmp
(bad)
fwait
xchg
inc
lahf
push
sahf
ss
mov
pop
add
xchg
jmp
ficom
cli
fs
dec
fidiv
mov
fnstcw
and
mov
xchg
fs
jmp
jne
mov
inc
iret
jp
bound
bound
jae
stos
in
add
xor
mov
lahf
(bad)
mov
fldcw
inc
fistp
cmp
movs
sub
push
xchg
xor
mov
push
in
jb
dec
sbb
push
out
cwde
add
loop
test
sub
test
push
sbb
imul
sahf
sahf
sub
imul
das
ss
jge
mov
cs
mov
adc
inc
xor
xlat
mov
mov
mov
stos
clc
pop
bound
mov
(bad)
es
pop
lahf
call
or
(bad)
cmc
fisubr
loopne
clc
adc
inc
or
ins
push
push
mov
and
sub
pushf
and
popa
mov
mov
push
cdq
bound
lahf
mov
aad
retf
sbb
pop
shr
jmp
aas
call
inc
xchg
icebp
pusha
in
push
sub
ja
inc
push
mov
sub
xchg
or
xchg
mov
pushf
xchg
out
jne
push
pop
dec
mov
xchg
dec
xchg
hlt
daa
imul
inc
add
jb
cmp
cwde
or
fidiv
push
dec
in
mov
add
or
sbb
cmps
xlat
cmp
push
sbb
jg
pusha
repz
daa
adc
push
cmp
sbb
stos
push
xchg
pushf
mov
mov
sti
imul
jo
(bad)
(bad)
movs
out
(bad)
add
mov
popf
add
stos
jle
(bad)
aaa
pusha
bound
mov
push
sub
pop
and
loop
push
sbb
add
jno
add
outs
movs
xor
mov
cmp
jmp
out
mov
inc
fcmovnu
mov
push
gs
test
ins
mov
aad
fnstcw
fs
adc
test
aaa
int3
inc
ins
std
mov
pusha
jb
test
adc
aad
in
mov
and
dec
cmps
ins
xchg
(bad)
leave
stos
ss
sar
mov
sahf
add
fist
test
clc
or
pop
adc
fisub
mov
and
sub
cs
sub
push
sub
jno
out
push
sbb
ficomp
ficom
inc
lods
add
dec
pop
jl
xchg
dec
push
repz
add
pop
out
imul
xchg
scas
or
mov
jecxz
cmp
xchg
sar
and
adc
gs
fstp
dec
ins
fisttp
cld
xchg
xor
or
js
cld
add
add
jns
mov
pop
jmp
xchg
aad
dec
ds
ins
icebp
ins
mov
xor
sahf
lock
rcl
dec
fsub
fadd
mov
jb
fidiv
sub
jno
aaa
sbb
fisub
into
xlat
xchg
pop
mov
fcomp
ds
push
es
test
cmp
cmp
inc
into
fild
das
mov
pop
jp
jae
fbld
push
adc
push
sbb
xchg
dec
ret
pop
jno
push
mov
mov
test
not
cdq
jo
(bad)
shl
or
(bad)
adc
rol
mov
lahf
push
xchg
or
repnz
lahf
jbe
pop
inc
mov
rcl
xchg
sub
inc
mov
mov
mov
lahf
xchg
jg
ins
in
xchg
xor
cmps
adc
cmp
int3
xchg
push
mov
sbb
cmp
mov
call
or
xchg
test
dec
imul
sbb
inc
iret
dec
inc
or
leave
xor
lock
or
int3
xchg
imul
imul
adc
pop
enter
pop
jno
adc
mov
neg
cdq
dec
push
jne
movs
(bad)
out
pop
cli
into
imul
retf
stos
inc
push
aad
xor
jge
dec
jae
(bad)
lods
sbb
cli
xchg
icebp
and
daa
mov
jns
or
fs
imul
out
mov
clc
mov
sub
fs
sbb
leave
mov
xlat
fimul
sahf
ins
in
xor
retf
cmps
xchg
adc
and
inc
scas
dec
inc
std
repnz
mov
mov
mov
fidivr
ret
or
pop
sub
enter
je
inc
cdq
adc
xor
mov
add
sbb
mov
cmc
aad
test
and
scas
dec
out
or
jno
mov
imul
dec
mov
jno
shl
aas
jbe
and
push
mov
sbb
or
(bad)
mov
aad
(bad)
not
jne
nop
push
xor
inc
mov
jmp
cmps
mov
mov
pop
push
push
(bad)
sbb
push
adc
push
and
sar
ss
push
mov
in
clc
mov
clc
cmc
mov
enter
mov
or
mov
cmp
fild
stc
mov
sbb
dec
sub
pop
adc
mov
pop
push
mov
mov
das
repnz
lds
call
mov
cmc
add
push
dec
or
add
xor
ret
dec
jns
sbb
push
(bad)
btc
xor
lea
(bad)
mov
sub
shr
movs
pop
pop
and
shl
lods
sbb
addr16
fiadd
icebp
movs
pop
arpl
jno
inc
and
popa
dec
mov
mov
inc
lahf
lock
push
sub
js
or
les
cmp
iret
lds
inc
jmp
mov
cmp
push
enter
daa
mov
sbb
lea
cdq
xchg
sub
sbb
mov
push
sub
sar
int
push
daa
bound
daa
push
stc
adc
adc
iret
data16
xchg
stos
mov
in
cs
adc
inc
push
loopne
push
daa
shr
ret
mov
repz
repnz
sar
call
sub
pop
mov
mov
pop
mov
imul
jmp
push
idiv
mov
add
jge
adc
movs
daa
xlat
jno
fdiv
or
(bad)
and
iret
mov
sti
gs
fcmovu
mov
scas
or
nop
inc
inc
and
fistp
mov
lods
push
cmp
shl
ds
stc
cli
push
inc
sub
sbb
(bad)
je
add
sub
xor
rol
jnp
clc
ins
xchg
(bad)
int3
scas
sti
add
cwde
inc
in
sbb
mov
jmp
dec
cmc
out
jne
das
mov
out
(bad)
shl
movs
mov
cmp
mov
ins
xor
adc
mov
fs
loope
hlt
pop
jo
shr
xchg
aad
xor
sub
loop
push
jne
sbb
sub
push
xchg
dec
add
jl
push
fcomp
test
fs
(bad)
movs
push
xchg
jno
jbe
pop
repz
xchg
(bad)
out
inc
and
cmps
fdivr
int3
mov
inc
push
cmp
aad
cwde
mov
(bad)
mov
lods
fdivp
jbe
cdq
dec
cmp
mov
loopne
cmps
test
sub
fimul
adc
dec
jns
mov
iret
stc
dec
dec
mov
dec
cmps
icebp
dec
ror
xor
adc
mov
dec
popa
add
dec
fsubp
rcr
arpl
or
and
push
gs
jecxz
out
fist
cmp
jecxz
xchg
icebp
outs
add
mov
sbb
jmp
into
sbb
jmp
jge
cmc
cmp
adc
imul
jge
fst
jbe
xchg
jg
fisub
lods
jecxz
aam
stos
push
(bad)
in
cld
ret
in
cmps
dec
aad
and
popa
fsubr
or
jns
lea
mov
jbe
(bad)
iret
cdq
out
aaa
scas
adc
push
sbb
shl
sub
iret
ins
cdq
xchg
or
inc
scas
imul
loope
movs
dec
push
or
lods
aas
and
pushf
adc
or
sbb
sahf
daa
retf
inc
in
into
inc
cmp
add
stos
call
add
push
jecxz
or
idiv
push
lahf
pusha
imul
mov
push
xchg
mov
mov
cmp
pop
sbb
xor
dec
xor
adc
loope
mov
or
mov
sbb
std
mov
ds
jbe
aad
pop
pusha
icebp
or
jno
pop
push
mov
pusha
retf
cld
xchg
sbb
or
sub
or
imul
fs
clc
in
adc
retf
stos
(bad)
inc
inc
push
imul
out
add
adc
jae
cmps
inc
mov
retf
into
add
inc
sub
sub
add
nop
aaa
(bad)
jmp
pop
cmps
cmps
adc
movs
leave
mov
inc
stos
add
or
cmp
pusha
(bad)
loop
out
ja
cmp
inc
aad
push
mov
ins
movs
mov
jae
and
(bad)
cmp
test
or
mov
pop
mov
cmp
repz
push
xchg
lods
(bad)
lahf
test
mov
and
xor
scas
out
sbb
in
push
xchg
mov
pop
retf
sbb
jp
rol
daa
test
xor
mov
push
repnz
adc
stos
aam
jmp
ins
sbb
popf
fld
into
add
jno
jg
shr
sub
leave
cmp
icebp
mov
sub
sbb
leave
lods
push
add
hlt
inc
jo
cmp
lar
mov
inc
cmp
jmp
fsincos
in
mov
pop
jnp
lods
and
scas
mov
mov
sbb
cs
addr16
jns
sub
and
(bad)
cmc
iret
call
cmps
jl
cmps
mov
pop
mov
cmp
sbb
xor
ins
push
xchg
fmul
ror
jmp
in
int
fdivr
ret
sbb
dec
ss
pop
adc
and
stos
loop
je
push
sub
jp
int
fcomp
jb
std
jno
jl
fdivr
int
push
jl
leave
mov
mov
lock
jp
pop
pop
push
test
test
jecxz
push
push
jge
inc
pop
mov
mov
and
aaa
xor
out
(bad)
mov
(bad)
pop
imul
je
sar
adc
mov
push
add
or
popf
rcr
nop
dec
in
jl
xchg
sub
xlat
imul
sbb
jbe
push
cmps
and
mov
xor
lds
sub
nop
jae
mov
mov
push
mov
jle
cmp
jno
cmp
and
inc
sub
mov
sbb
scas
jae
jnp
dec
mov
iret
sbb
or
inc
xor
mov
or
cmp
add
cwde
sub
cmp
fcom
jl
xchg
mov
stos
aas
mov
jecxz
js
ror
(bad)
xor
sahf
fwait
jg
js
(bad)
xor
in
nop
scas
and
or
xchg
outs
add
icebp
mov
jae
icebp
or
dec
sub
cmp
xor
inc
call
cmp
call
jl
adc
and
daa
push
in
push
repz
sub
pop
cmps
and
enter
inc
in
xor
js
push
iret
cmp
lahf
cmps
fisub
cs
in
and
outs
dec
push
jge
jmp
jge
mov
jae
jb
dec
mov
or
in
shl
loope
fs
sub
and
mov
cmc
cmc
sbb
fwait
mov
jnp
movs
xchg
push
lods
inc
inc
mov
clc
mov
xchg
jne
movs
adc
mov
sub
(bad)
mov
js
ins
jnp
dec
ret
jecxz
fidivr
mov
cld
mov
lods
movs
or
lahf
mov
jbe
test
dec
ja
cmc
push
xchg
xchg
mov
push
sahf
xchg
mov
jae
outs
push
sti
(bad)
xor
jne
jno
cmp
mov
stc
dec
fild
mov
push
outs
mov
js
cmp
jae
xor
push
sub
arpl
movs
(bad)
outs
aad
nop
or
ins
push
fnstcw
pop
cmps
mov
rcl
data16
dec
add
aaa
lahf
pop
retf
dec
rcr
push
aaa
jecxz
pusha
std
int3
mov
or
and
out
jnp
dec
test
or
xor
sti
inc
jbe
ret
out
pop
xor
mov
fdivr
ja
nop
mov
cmp
(bad)
repnz
or
push
mov
jns
cmp
dec
add
jge
stos
sub
and
inc
cmp
popf
out
mov
sbb
xchg
or
jp
mov
pop
out
out
aaa
jmp
adc
in
fdivr
fisub
dec
mov
push
loop
dec
ja
sub
mov
pop
add
aam
test
ja
fwait
cmp
dec
(bad)
sub
in
xor
stos
jmp
jo
std
icebp
xlat
push
push
jnp
inc
mov
cld
fucomi
jge
push
data16
mov
pusha
push
pusha
fstp
lods
fs
icebp
pop
mov
(bad)
jbe
mov
cld
rol
out
pop
sbb
xchg
out
push
out
or
test
sti
ficomp
mov
mov
popf
cmp
inc
sbb
outs
inc
popf
ret
sahf
dec
stos
stos
and
fs
jns
mov
retf
aad
repnz
push
(bad)
push
test
lods
xor
ja
mov
push
rcl
gs
(bad)
lahf
xchg
adc
inc
pop
fdivrp
shl
lods
je
test
popf
(bad)
jae
mov
lds
test
loop
xchg
mov
call
pop
inc
test
dec
xor
cmp
icebp
sbb
cmp
not
cmc
pop
dec
sbb
adc
loop
adc
data16
xchg
jae
mov
push
xor
mov
xchg
cmp
pop
in
mov
loopne
push
movs
dec
sub
neg
add
pop
adc
add
push
(bad)
scas
movaps
xor
js
out
imul
out
jl
ins
mov
inc
jns
movs
cld
add
inc
fwait
xchg
mov
int
popf
xchg
ins
add
fmul
dec
aam
pop
fld
stos
inc
rcl
mov
xchg
xchg
xor
fmul
rcr
jbe
ret
inc
retf
cmp
fisttp
daa
jmp
sbb
scas
and
lods
imul
sar
aad
xchg
dec
mov
fldcw
fsub
outs
sar
pop
adc
jno
sbb
mov
sar
ins
jge
sbb
and
push
pop
addr16
sub
pop
bound
pop
xor
test
push
push
xchg
sahf
push
dec
lock
int3
ret
stos
icebp
push
popa
jno
xchg
test
pop
out
mov
dec
fwait
(bad)
xlat
pop
mov
mov
int3
into
xchg
pop
sti
adc
out
clc
fidiv
loope
out
mov
push
in
pop
loope
sub
ret
repnz
jp
int
xor
imul
sbb
imul
(bad)
fistp
rcr
jecxz
or
mul
jno
das
aas
mov
test
mov
and
mov
sub
mov
mov
pop
sub
mov
outs
xor
add
jo
lock
mov
(bad)
push
mov
xchg
jge
mov
push
ins
push
and
jmp
dec
or
xor
(bad)
(bad)
repz
xor
gs
nop
jmp
xor
dec
(bad)
pop
das
into
std
adc
fsub
hlt
ja
cwde
out
pop
rol
or
or
dec
and
mov
(bad)
jno
mov
add
imul
jg
xchg
mov
pop
jo
jbe
es
pusha
mov
in
and
xor
sahf
cmp
rol
mov
adc
sub
clc
adc
inc
cmps
cli
push
sbb
call
jg
jmp
popf
mov
and
setle
cdq
sbb
clc
fwait
imul
xor
neg
mov
xadd
jno
inc
jb
push
retf
pop
loope
int
stos
fbstp
es
mov
ins
mov
les
sbb
fcmovne
sub
mov
stos
mov
and
out
ret
rcl
gs
xchg
xchg
push
xchg
in
sub
outs
mov
cmp
js
cli
clc
movs
adc
mov
push
pop
bound
test
mov
push
mov
adc
pushf
shr
cmps
cdq
mul
repz
mov
ret
cmp
loopne
mov
(bad)
into
xchg
cwde
inc
mov
push
jae
and
call
dec
sbb
sub
stos
cdq
inc
ss
daa
push
les
das
shl
xchg
sub
in
imul
pop
pusha
pop
and
add
arpl
scas
fistp
mov
sub
(bad)
jecxz
mov
int3
jbe
xchg
mov
scas
cmp
int
jmp
push
(bad)
jl
cmp
pop
movs
cwde
pop
fld
or
mov
sbb
xchg
mov
(bad)
(bad)
popa
leave
sahf
sub
mov
cmp
pop
shr
out
and
mov
xchg
mov
stos
jne
aas
retf
scas
xor
pushf
jge
sbb
push
loop
std
and
scas
cmps
cmp
sbb
cld
(bad)
hlt
mov
fs
jecxz
add
push
neg
arpl
push
jp
adc
ins
jns
add
fcom
add
repnz
cdq
cmp
dec
test
fisttp
pusha
add
mov
out
dec
lahf
push
gs
jo
xor
or
add
sahf
stos
daa
imul
sub
xchg
pop
jecxz
cmp
jecxz
dec
in
sbb
frstor
pop
jbe
mov
call
or
xor
and
fistp
dec
test
fwait
inc
(bad)
xor
xor
div
icebp
lds
add
js
bound
xchg
not
inc
popf
dec
push
add
push
call
ret
xchg
add
mov
cdq
hlt
and
sti
cmp
loopne
icebp
out
lock
frstor
ins
shld
mov
xor
xchg
clc
jmp
call
pop
test
inc
clc
js
lods
sahf
sbb
adc
or
add
xchg
enter
push
sar
enter
lds
mov
je
test
in
pop
sar
mov
jp
cwde
dec
test
xchg
sbb
(bad)
iret
jo
sbb
aad
jecxz
xlat
mov
push
dec
adc
pusha
inc
pop
and
add
int3
pushf
shl
cmc
les
inc
stc
mov
cld
jns
cld
add
pop
popa
push
xchg
js
shl
imul
dec
pop
(bad)
xchg
cdq
inc
push
(bad)
lahf
lea
mov
and
mov
ret
push
pop
sub
cmps
std
enter
fist
cwde
jbe
cmp
icebp
dec
in
cmp
sti
out
and
inc
gs
hlt
mov
mov
js
mov
adc
out
popa
lods
xchg
retf
and
out
loope
lock
add
add
sub
sub
adc
xor
jg
sbb
(bad)
(bad)
jae
mov
jno
ret
sbb
clc
push
rol
pop
in
jp
sbb
jge
mov
imul
mov
scas
mov
mov
pop
mov
push
pop
adc
gs
mov
dec
out
xchg
push
xor
(bad)
mov
(bad)
jo
adc
add
mov
loop
xor
scas
adc
(bad)
mov
in
add
jmp
push
stos
loopne
movs
xor
sar
sbb
mov
es
jmp
(bad)
xor
lods
test
inc
loope
xchg
lock
mov
pop
sti
mov
pusha
outs
std
(bad)
push
call
ret
stos
ins
seto
sbb
mov
jne
popf
jl
pusha
sbb
es
mov
add
mov
pop
retf
out
outs
lods
rol
gs
(bad)
stos
mov
lods
out
dec
xor
rcl
jbe
inc
das
sub
pop
pop
in
fwait
popa
jge
sahf
and
aas
or
add
je
mov
call
(bad)
mov
fld
sbb
cdq
mov
pop
inc
mul
ins
(bad)
ficom
enter
adc
bt
enter
xchg
pop
mov
cwde
or
sub
test
adc
bound
mov
mov
add
xlat
mov
jns
shl
jae
loop
dec
ins
pop
rol
dec
lock
jb
adc
popa
mov
orps
mov
fsub
aas
push
ret
jbe
inc
sbb
loopne
out
and
ins
pop
sbb
push
daa
fwait
lods
add
fsub
sub
adc
pop
scas
mov
scas
mov
jnp
jp
jb
ret
les
push
test
push
aam
adc
pop
xor
rcr
leave
in
adc
cmc
(bad)
inc
int
mov
test
(bad)
adc
cmp
inc
outs
je
loope
test
jno
jl
push
push
call
pop
sbb
lahf
das
hlt
and
or
or
sbb
ror
int3
ror
clts
retf
adc
movs
out
retf
loop
fwait
mov
and
in
fs
jns
pushf
add
pop
push
jns
mov
xchg
ret
aam
js
xor
sub
xchg
sti
or
int3
jg
outs
mov
sbb
in
(bad)
hlt
pop
pusha
mov
jnp
xchg
sub
xchg
lods
outs
add
adc
and
stos
inc
sbb
xor
cmps
inc
push
cmp
(bad)
pusha
bound
xor
mov
xor
inc
repz
jne
pop
mov
(bad)
jle
or
sbb
idiv
xor
mov
dec
imul
shr
sub
cdq
jl
cmps
jae
push
dec
rcl
outs
mov
cli
adc
mov
ins
outs
mov
sbb
adc
inc
fdivr
outs
into
fild
scas
fst
add
leave
in
cwde
rcl
push
and
jo
loope
shl
xor
in
sbb
and
lods
int
ds
xchg
inc
rcl
adc
pop
jmp
mov
rep
or
inc
cmp
call
cmp
(bad)
jmp
fst
sahf
out
in
add
inc
test
inc
and
and
mov
adc
mov
je
jno
push
and
sub
scas
cli
shr
cwde
mov
into
xchg
pop
pop
stos
out
movs
test
cmp
inc
daa
hlt
jle
into
(bad)
mov
das
fs
sar
fimul
lods
fs
lahf
add
xchg
arpl
pop
pop
movs
les
das
jae
push
adc
jmp
iret
cdq
xchg
mov
inc
test
(bad)
and
out
mov
data16
(bad)
lahf
mov
sbb
xor
cmp
cmp
pop
sahf
cmps
mov
push
dec
sbb
out
fcmovnb
sub
sbb
pop
jno
pop
mov
xchg
cld
(bad)
retf
add
add
add
shl
jmp
lock
xor
(bad)
rol
add
gs
jl
scas
pop
jne
add
sbb
lahf
popf
mov
je
dec
in
mov
ins
pop
jne
dec
retf
xchg
dec
les
push
jge
aad
movs
mov
and
sti
push
int3
mov
das
sub
mov
mov
ret
pop
cdq
push
out
cmp
inc
add
movs
xor
push
xchg
ins
xchg
and
xchg
and
loopne
rcr
mov
cwde
jmp
or
repz
push
jb
int
add
jl
das
jne
icebp
or
cmc
sbb
int3
int
jmp
cwde
dec
leave
sub
out
push
cwde
jl
and
mov
sbb
leave
cmps
jno
in
hlt
les
lock
mov
cwde
xchg
mov
test
add
test
scas
(bad)
jnp
jae
mov
aad
jno
jecxz
das
mov
pop
adc
jecxz
adc
mov
fcmove
retf
lahf
add
push
xor
pop
cmp
(bad)
jmp
xchg
cmp
xlat
sub
mov
pushf
not
sbb
add
add
fcmovbe
dec
xchg
mov
push
push
mov
je
outs
or
sbb
(bad)
sti
cmp
jle
ins
cmp
(bad)
repnz
ficom
call
pop
sbb
in
pop
pop
(bad)
js
movs
adc
dec
pop
inc
ds
hlt
ret
mov
daa
adc
mov
xor
test
or
in
(bad)
xor
jge
rcl
push
lock
jecxz
shl
or
dec
not
lods
cmp
shl
aas
or
pop
mov
in
dec
and
cmp
lock
sub
mov
ins
int
mov
add
mov
cld
(bad)
icebp
out
xchg
aam
sub
pop
jb
mov
hlt
dec
shl
lods
js
mov
push
push
retf
cmc
(bad)
data16
sub
push
mov
aam
sbb
cmps
xchg
outs
sbb
or
mov
std
(bad)
in
repnz
in
add
neg
xor
lods
ja
sub
sub
add
xor
sete
into
aaa
enter
fs
jbe
cwde
jge
fstp
gs
and
cmp
test
jecxz
mov
in
cmp
push
gs
adc
mov
xchg
fisttp
dec
call
rol
or
pop
cmp
int
and
jmp
aas
mov
mov
test
aas
movs
cmp
jp
sar
fwait
inc
dec
nop
loop
sub
arpl
push
ja
mov
inc
daa
or
std
jge
cwde
pushf
xor
cmps
adc
sub
jg
in
pop
pop
push
in
cli
xor
jge
lds
push
jmp
imul
repnz
test
les
ja
add
out
and
repnz
js
popa
add
push
mov
push
jmp
sbb
pusha
or
sub
aad
inc
cmps
xchg
rol
jno
jo
(bad)
adc
(bad)
js
push
frstor
loop
inc
xchg
shr
mov
enter
push
adc
test
punpcklwd
or
pusha
cvtpi2ps
cmc
test
add
gs
idiv
sbb
popa
push
inc
mov
mov
pusha
cmps
(bad)
int3
call
push
xor
fld
xor
inc
push
out
sbb
push
inc
fsub
inc
cmps
dec
sub
push
mov
pop
enter
add
and
pop
sbb
add
dec
jo
outs
push
lods
pop
(bad)
(bad)
cmp
mov
in
not
std
inc
mov
jo
or
popa
js
shl
push
fld
arpl
arpl
push
je
push
or
fdiv
ret
sbb
es
push
sub
push
or
imul
pusha
dec
out
psubb
int
push
push
or
test
xchg
sbb
jg
mov
sbb
retf
scas
adc
or
fwait
int
(bad)
cwde
jg
cmp
sbb
mov
loope
stc
pop
cmp
cmps
and
dec
xchg
jb
or
fidiv
jle
sbb
dec
push
popa
xchg
cli
cmc
pusha
movs
adc
shr
mov
xchg
and
jg
pushf
call
out
add
cmps
push
sbb
fs
dec
inc
cmp
sbb
test
xor
ds
outs
pop
pusha
adc
add
mov
inc
ds
jns
add
pusha
xchg
sbb
cmp
jb
fs
sub
cvtpi2ps
cmp
iret
xchg
push
dec
ret
scas
ins
sbb
arpl
test
inc
test
push
jb
push
mov
push
dec
lahf
ret
inc
jno
mov
push
jp
arpl
sub
popa
test
mov
fwait
cmp
xor
ds
pop
inc
lods
nop
jno
xor
scas
pop
pop
dec
pop
(bad)
mov
add
sbb
inc
loop
sub
repz
sti
mov
(bad)
leave
call
or
repz
scas
enter
cmps
mov
dec
xchg
mov
outs
pop
out
fistp
popa
int3
scas
push
xor
in
xor
jl
push
movs
push
out
jo
test
dec
addr16
mov
pop
test
adc
xlat
popa
repnz
cmp
cli
dec
shl
ds
in
pop
pop
(bad)
movs
sbb
xor
jecxz
icebp
out
aaa
repz
mov
sbb
or
int
or
test
adc
call
xchg
mov
or
bound
loopne
jae
shl
stos
ret
mov
lods
sti
sub
les
and
sbb
xchg
push
dec
leave
xor
mov
ret
mov
push
push
in
sub
dec
fwait
call
in
inc
sbb
loop
outs
mov
mov
inc
retf
mov
xchg
bound
shl
push
int
mov
sbb
stos
stc
shl
or
and
movs
mov
mov
mov
push
dec
dec
xchg
leave
xchg
sbb
jns
bound
ret
call
mov
imul
pop
mov
sub
in
pop
mov
push
mov
mov
mov
push
aas
(bad)
or
sub
adc
push
mov
mov
dec
jg
cld
and
cmp
dec
ins
hlt
mov
scas
jbe
mov
dec
xchg
dec
cmp
adc
adc
sar
or
adc
out
sbb
jae
aad
adc
mov
lods
sti
loop
out
loop
scas
das
pop
icebp
mov
punpcklwd
pop
in
ins
cmp
adc
dec
pop
push
jle
add
inc
sub
dec
scas
mov
scas
sbb
xchg
lods
jno
out
push
cmps
lods
adc
in
sbb
jp
pop
cmp
stos
mov
aas
pop
jbe
jno
in
inc
shr
or
aas
icebp
sbb
movs
call
mov
mov
jne
test
into
adc
retf
cmp
pop
jbe
cmc
adc
xor
and
iret
pop
fistp
mov
fidiv
jne
and
jno
les
out
loope
mov
inc
pop
sub
test
sbb
ins
out
mov
test
sbb
mov
shr
gs
daa
idiv
push
pop
jae
loope
xchg
fdivr
mov
out
and
aaa
or
jmp
(bad)
xchg
fmul
sbb
mov
jle
sbb
dec
jb
pop
mov
sub
bound
and
xchg
(bad)
mov
mov
inc
pminsw
push
jecxz
sub
je
xchg
and
retf
adc
stos
sbb
int3
ss
inc
add
or
mov
jmp
push
in
add
add
daa
idiv
mov
retf
mov
or
test
mov
pop
adc
int
sbb
pop
mov
inc
mov
out
pushf
push
es
dec
inc
xor
mov
push
lds
sbb
fist
sbb
icebp
jnp
or
or
je
retf
cli
jecxz
push
and
lods
scas
push
add
mov
mov
leave
addr16
jae
mov
sbb
scas
rcr
xor
cmp
adc
mov
aam
xor
sahf
(bad)
retf
xchg
(bad)
ret
(bad)
mov
fwait
xlat
mov
push
stos
sahf
push
lods
aam
xor
gs
aam
pop
shl
rol
das
iret
mov
shl
mov
push
dec
pop
popa
mov
in
scas
out
pop
outs
sbb
fcom
push
gs
sub
and
mov
inc
fiadd
adc
outs
leave
(bad)
sbb
xor
loop
call
imul
cwde
mov
in
sub
rcl
or
popa
ret
push
xchg
aam
dec
leave
mov
pop
inc
inc
xchg
jp
lahf
cdq
sub
(bad)
out
cld
sti
call
sbb
sub
mov
adc
inc
jb
and
jmp
mul
mov
push
mov
ds
into
add
and
mov
pop
adc
xor
pop
fcomp
outs
dec
mov
sbb
jge
les
sbb
sbb
push
mov
push
neg
out
or
sub
xchg
in
(bad)
mov
jle
mov
sub
adc
aam
pop
ins
adc
ror
dec
inc
xchg
xor
jb
jp
test
stos
xor
add
or
loope
push
inc
xchg
push
add
ror
cwde
and
inc
(bad)
and
cli
es
mov
push
daa
xchg
sbb
ret
les
and
int3
gs
push
inc
dec
sub
mov
mov
cld
jno
mov
test
out
push
hlt
sub
mov
sbb
adc
fdivp
jnp
iret
sub
adc
int3
adc
(bad)
pop
adc
mov
lods
mov
mov
sub
push
sbb
ds
out
xchg
inc
pop
jae
mov
sbb
lahf
(bad)
in
ja
stos
or
shl
out
adc
add
mov
mov
or
mov
outs
jnp
sar
lock
cli
or
mov
mov
xchg
jl
push
js
sub
pop
movs
dec
aad
pop
stos
(bad)
cmp
xor
sub
test
xchg
jmp
pop
push
ins
ret
dec
fwait
aad
sar
jno
push
in
nop
mov
into
pop
mov
in
dec
scas
or
xor
push
fs
mov
nop
and
inc
les
ret
or
jmp
xor
les
push
loop
xor
xor
cmp
mov
loop
enter
cmp
cld
sbb
(bad)
pop
adc
and
in
dec
fcomp
mov
movs
jg
xchg
iret
xor
cmp
mov
gs
daa
cmp
pop
movs
mov
pop
jle
jecxz
dec
mov
jb
in
pusha
sub
jl
cwde
enter
pop
js
sbb
mov
pushf
inc
xlat
mov
and
cmp
ret
pop
mov
push
int3
and
fs
push
in
xor
dec
push
xchg
(bad)
adc
les
adc
fld
dec
test
jecxz
scas
jl
mov
mov
(bad)
mov
mov
pop
jecxz
bound
pop
aam
or
lock
inc
retf
jb
out
sub
in
mov
or
sub
adc
push
cmps
xchg
icebp
xor
(bad)
les
dec
and
addr16
xor
cmp
inc
cmp
push
loopne
pop
(bad)
jg
fsin
push
add
ja
fsubr
push
jg
jg
outs
jl
leave
xchg
or
dec
sahf
movs
add
push
in
arpl
cwde
push
int
fstp
sti
(bad)
mov
cmc
cmp
inc
mov
or
cmps
inc
xor
pop
mov
mov
mov
test
sub
mov
mov
dec
daa
(bad)
push
repnz
clc
jne
fbld
int3
ja
fsubr
push
xor
jle
stos
fistp
jae
fisubr
add
sahf
and
push
pop
and
imul
(bad)
out
lahf
xor
loope
aaa
movs
enter
cmp
inc
mov
push
adc
xor
test
mov
push
in
or
fiadd
(bad)
outs
cmp
out
ins
mov
inc
repnz
cmp
out
sar
fld
out
mov
out
push
push
xor
add
adc
gs
add
cmp
push
push
push
sti
inc
ja
sbb
sub
mov
push
sub
inc
int3
add
bound
pop
jg
mov
push
jns
xchg
pop
stos
or
dec
and
sbb
repnz
jecxz
and
push
inc
jg
xchg
dec
mov
int
mov
test
and
or
sbb
or
sar
add
data16
cmp
lahf
cmp
rcl
and
xor
fimul
ins
add
add
test
ins
xchg
sbb
(bad)
jo
push
and
inc
pop
cmp
mov
xor
xchg
ficomp
dec
xchg
dec
cmp
add
repz
jp
hlt
or
ja
call
xor
in
adc
sbb
xor
mov
cdq
repnz
je
mov
(bad)
or
add
mov
adc
test
aaa
sub
mov
pop
int
leave
mov
add
test
in
cmp
mov
daa
cmp
mov
inc
daa
jmp
in
mov
xchg
add
xchg
jbe
lods
int
sbb
das
sub
imul
push
xlat
and
xor
dec
mov
les
dec
xor
aad
loope
aas
mov
mov
jecxz
out
xchg
sar
fild
sbb
test
fst
fidivr
fcom
sub
neg
sbb
push
mov
xchg
ror
pop
sbb
sti
pop
inc
mov
cwde
xchg
clc
lods
pop
inc
(bad)
retf
cli
mov
shl
(bad)
mov
add
jmp
jmp
movs
data16
popf
jmp
das
or
xchg
into
in
mov
jmp
adc
add
push
int3
cmps
xchg
mov
ret
test
ret
xchg
ret
mov
repnz
adc
and
lods
in
leave
dec
jbe
adc
jmp
pop
mov
outs
sbb
xor
ret
test
mov
and
sub
or
push
dec
div
mov
js
(bad)
push
ins
and
cmp
mov
xor
movs
xor
jne
add
cmp
inc
sbb
cmps
mov
xlat
bndldx
dec
mov
call
mov
or
(bad)
mov
sbb
int
not
mov
add
add
test
mov
sti
lahf
div
ja
dec
add
int3
fcom
mov
jne
sub
inc
xor
xor
rcr
loop
out
push
dec
repz
loope
pop
xor
dec
mul
(bad)
dec
sti
jns
xor
sub
scas
xor
push
test
dec
mov
movs
shl
imul
jg
ret
stc
pop
xchg
sub
inc
xchg
cld
mov
pusha
fmul
test
pop
loopne
nop
loop
icebp
dec
les
pop
leave
dec
pop
jmp
adc
retf
test
leave
test
or
xor
fistp
dec
jmp
outs
stc
icebp
inc
loopne
(bad)
(bad)
jg
dec
lahf
fidivr
jae
jnp
inc
or
lds
cmp
push
jle
push
test
xchg
push
sbb
outs
push
push
stc
push
jmp
test
pop
add
xor
clc
add
mov
xchg
jge
mov
add
mov
xchg
lock
push
xchg
(bad)
push
fld
fwait
addr16
push
mov
ret
xchg
dec
cwde
in
xchg
push
cwde
js
add
mov
fild
fild
push
sub
pusha
lahf
sub
cmp
xchg
and
fs
or
or
mov
pop
outs
mov
loope
jg
mov
add
rcl
shl
js
lahf
mov
fiadd
push
pop
pop
cmps
and
pop
out
mov
cld
mov
mov
test
adc
out
mov
mov
sub
addr16
in
mov
fidivr
cmps
out
mov
push
add
jmp
out
(bad)
jl
and
and
jmp
js
push
sbb
push
ds
mul
push
adc
jnp
cmc
loope
mov
(bad)
sbb
fwait
and
xor
cs
loope
add
jge
sbb
push
and
or
inc
dec
test
mov
mov
mov
in
push
ins
scas
test
ins
xor
jl
stos
in
cmp
xor
inc
sar
out
mov
data16
outs
(bad)
and
int
mov
rcl
pop
sbb
xchg
adc
jae
pop
inc
add
xor
rcl
add
popf
dec
test
or
test
std
inc
(bad)
jno
and
fistp
mov
cmp
push
aaa
or
inc
out
push
mov
or
pop
push
mov
mov
inc
ret
inc
ret
jmp
cli
test
cwde
or
les
je
test
xchg
xor
(bad)
(bad)
xchg
jl
clc
mov
int3
push
cwde
(bad)
jae
stos
ror
adc
jns
adc
jo
push
sahf
jmp
xor
imul
outs
mov
dec
and
(bad)
sti
inc
or
adc
ja
pop
adc
inc
xchg
scas
sbb
ret
(bad)
(bad)
popf
(bad)
clc
retf
push
add
pop
adc
mov
mov
mov
nop
add
gs
or
inc
mov
sti
ffreep
movs
jle
mov
and
retf
hlt
and
lds
loop
and
adc
jmp
out
pop
inc
jne
pop
cdq
daa
ret
cmp
mov
popf
jl
les
or
test
fadd
mov
js
xor
sub
mov
fmul
retf
outs
fcomp
pop
xchg
popa
js
mov
xchg
sbb
sub
cmp
push
adc
mov
hlt
push
icebp
xchg
enter
lahf
mov
pushf
shr
loope
push
xor
repz
int3
xor
mov
xor
sub
test
aad
or
fdivr
outs
cld
mov
pop
mov
sbb
test
(bad)
ins
loop
add
cld
xchg
in
sahf
push
sub
xchg
inc
shr
xor
repnz
popfw
in
cmp
push
out
adc
mov
lods
aad
dec
push
imul
cmp
mov
stc
imul
jno
dec
into
inc
xor
call
adc
movs
jg
fmulp
add
test
inc
mov
sub
mov
imul
or
push
xor
cmp
cmp
xchg
enter
cmps
cmp
dec
(bad)
pop
mov
repnz
cli
sub
pop
xor
xlat
mov
shr
and
(bad)
mov
fs
jbe
ins
mov
add
push
and
retf
push
add
pop
loopne
xor
ins
xor
inc
in
arpl
or
adc
xor
fist
std
stos
out
xchg
jne
sbb
mov
hlt
movs
jno
jne
dec
and
test
fbstp
stos
sub
add
and
xor
enter
mov
cmp
push
ret
movs
int3
xchg
xchg
push
cs
cmps
push
int
jl
push
das
mov
pop
cdq
js
jbe
xchg
outs
pop
dec
(bad)
sbb
es
ret
cmc
mov
jb
scas
addr16
pop
popf
cli
adc
push
inc
in
xchg
movs
ins
cmc
call
loopne
sbb
jno
lahf
shl
xor
cmp
or
test
dec
les
imul
push
or
rol
or
dec
push
fwait
movs
outs
mov
pop
and
and
pop
cmp
xchg
cmps
sub
or
jp
pushf
dec
cmp
dec
retf
sahf
leave
xlat
jno
lea
mov
addr16
sub
retf
mov
iret
xchg
cs
data16
push
and
cs
xor
or
jp
aas
cmp
jecxz
push
ins
pop
or
adc
idiv
or
popa
cmp
cld
movs
call
cmps
xchg
or
push
sbb
mov
add
call
repnz
std
out
jno
(bad)
call
ret
(bad)
mov
scas
pop
(bad)
data16
icebp
xor
daa
(bad)
int3
nop
shl
push
cmp
ror
test
dec
pusha
test
jp
sub
nop
test
or
xchg
push
pop
mov
hlt
or
pusha
std
push
(bad)
lods
mov
cmp
sub
out
stc
cmp
ret
(bad)
aaa
bound
cmp
stos
sahf
shl
fnstcw
add
enter
sub
xlat
sti
and
pop
call
pop
cmp
mov
les
pop
mov
cmp
std
mov
and
data16
pop
cmp
int
mov
mov
sbb
sub
idiv
and
jle
test
std
mov
cmp
mov
ds
mov
data16
aas
sub
inc
mov
mov
enter
rcl
in
jg
sahf
cmp
(bad)
leave
stos
mov
or
(bad)
into
add
and
sbb
ret
or
jmp
in
add
data16
mov
inc
test
jge
nop
xchg
dec
test
lea
inc
mov
cmc
inc
cmp
jbe
aam
stos
mov
imul
inc
nop
jl
cmc
mov
add
cmp
and
scas
xor
sbb
mov
neg
mov
inc
sub
nop
mul
scas
pop
cmps
(bad)
fstp
xchg
sbb
mov
lea
xchg
cmps
in
adc
jno
stos
jp
fsub
adc
push
fild
jmp
mov
lods
pop
and
stc
pop
outs
repz
in
adc
sbb
mov
sbb
in
fidivr
cdq
es
xor
adc
jb
lock
pop
lods
addr16
retf
and
push
inc
xor
mov
mov
mov
cmp
imul
adc
jl
cmp
in
and
ret
mov
xchg
pop
mov
sbb
mov
lock
mov
xor
add
aas
jle
xor
mov
pop
es
add
cdq
imul
jl
idiv
ret
cmp
xchg
lds
and
mov
push
lods
and
loop
push
jae
cmp
aas
(bad)
and
inc
push
(bad)
stc
add
pop
inc
push
cmp
rcl
xchg
call
xor
movs
shr
jo
mov
inc
sbb
mov
in
inc
iret
xchg
lds
xor
out
es
aam
sub
aaa
ds
pmulhw
fistp
in
fist
inc
ds
jbe
shl
(bad)
cwde
clc
sahf
add
push
sti
outs
icebp
cmp
pop
jb
adc
movs
xor
stos
push
retf
xchg
pushf
leave
hlt
inc
pop
cmp
adc
mov
inc
cdq
stos
out
jbe
jns
xchg
movs
jge
in
aam
into
pop
jmp
in
int3
stc
imul
mov
mov
mov
sbb
sbb
ret
pop
bound
jmp
shr
jmp
mov
push
xchg
pop
push
dec
push
sbb
inc
popf
inc
mov
sahf
sub
mov
mov
mov
lods
jmp
jge
cmp
not
jne
mov
cmp
popa
add
stos
fistp
lds
sti
fst
lods
popf
addr16
arpl
test
or
jmp
in
and
mov
into
ins
out
cdq
enter
mov
test
inc
xchg
fwait
ror
inc
iret
aam
imul
clc
xchg
mov
push
ds
out
dec
mov
xor
addr16
iret
and
xor
pop
push
rcr
stos
leave
daa
push
inc
or
push
stos
dec
es
mov
lahf
and
imul
add
fist
mov
cs
and
loopne
mov
pop
add
cmp
imul
push
dec
jge
test
sub
dec
sbb
inc
movs
xlat
ds
dec
or
add
jbe
cwde
dec
sub
jl
inc
test
mov
jmp
ds
imul
push
push
mov
inc
ds
mov
fwait
mov
push
add
addr16
and
aaa
jns
(bad)
mov
icebp
push
jo
ret
fwait
dec
jnp
mov
jmp
or
mov
std
mov
push
sub
ss
adc
cmp
mov
mov
repnz
call
(bad)
xor
ds
das
xchg
test
xchg
jbe
lea
add
pushf
hlt
loopne
jge
int
sub
popa
or
shr
sub
shr
fild
rcr
mov
and
sti
aad
sbb
pop
(bad)
mov
pop
mov
adc
jo
stos
xor
jp
std
ret
bnd
test
clc
dec
sub
pop
push
retf
icebp
cwde
fild
cmps
jl
out
jmp
jmp
jmp
ret
ja
sbb
sbb
inc
push
and
adc
sahf
rcl
fstp
mov
add
repnz
sbb
mov
adc
(bad)
(bad)
cmovae
movs
pop
jge
jl
xchg
imul
(bad)
gs
sbb
dec
cmp
or
adc
or
sub
fisub
cmp
or
stc
xchg
dec
aaa
and
jns
leave
jo
jae
xchg
sbb
mov
js
cmp
stos
ret
jne
mov
jg
rol
out
sub
ficomp
in
dec
mov
cmc
out
pop
dec
shl
outs
adc
push
jns
mov
cli
pop
push
movs
repz
mov
fst
cmp
(bad)
in
mov
cmc
jno
(bad)
ins
dec
push
add
(bad)
jle
push
into
repnz
movs
add
adc
jge
sub
ins
jno
addr16
(bad)
pop
sub
xlat
sbb
ret
retf
push
xchg
fdivr
jecxz
xchg
mov
xchg
(bad)
pusha
int
inc
popa
repnz
inc
sti
clc
fwait
push
leave
sub
movs
sub
pusha
repz
(bad)
loop
cmps
cmp
adc
dec
cld
lods
test
retf
xor
add
mov
mov
retf
nop
sbb
push
sbb
sub
jns
mov
(bad)
adc
cmps
push
sub
stos
xchg
ins
not
int3
in
mov
fistp
fidivr
stos
sahf
mov
xlat
shl
or
adc
mov
call
stc
jo
and
mov
adc
inc
aam
mov
xchg
mov
les
cmp
add
in
outs
or
adc
xor
(bad)
ret
sub
rcl
adc
mov
imul
cmp
in
out
pop
xchg
push
imul
lds
loopne
and
cmp
rcl
mov
repz
in
sbb
fstp
addr16
outs
or
js
ret
mov
push
rol
and
jo
fmul
inc
out
(bad)
cmc
(bad)
sbb
pop
retf
inc
cli
push
adc
sbb
pop
es
push
push
jae
jge
(bad)
pop
mov
arpl
popa
loop
test
neg
dec
inc
pop
lods
dec
jl
inc
into
cmp
sahf
in
inc
xchg
cdq
stos
xor
mov
pop
mov
xchg
in
arpl
pop
rcr
pop
lods
pop
mov
or
idiv
mov
jmp
movs
add
stc
jmp
pop
pop
cwde
mov
test
or
(bad)
es
scas
push
sub
jmp
xchg
cmp
xchg
cmp
or
push
dec
push
outs
and
add
xor
sbb
pop
loop
arpl
in
or
inc
inc
lea
xchg
push
mov
out
sbb
and
cmp
mov
mov
adc
div
sbb
push
call
dec
inc
fstp
lds
mov
inc
xor
pop
cmps
div
and
xchg
(bad)
sbb
sub
dec
pop
in
imul
scas
sub
xor
enter
dec
push
imul
int
cwde
inc
sbb
and
(bad)
jb
repnz
mov
ja
add
inc
push
je
cmp
dec
enter
pushf
fimul
(bad)
sbb
arpl
dec
push
in
jmp
jb
out
(bad)
mov
(bad)
sahf
jmp
fstp
push
out
mov
cmp
mov
dec
push
push
or
loope
and
push
cmps
out
pop
push
setne
sahf
addr16
repz
dec
ss
sar
pop
inc
sti
cmp
test
sub
arpl
fisubr
cmp
fisubr
inc
fwait
inc
sbb
imul
jmp
pop
imul
ret
retf
sbb
dec
adc
(bad)
loop
ret
sbb
jne
mov
sub
cmc
xor
jle
mov
ds
xchg
push
push
lahf
lahf
pop
jp
es
iret
mov
(bad)
popf
(bad)
pop
rcr
(bad)
imul
test
dec
mov
add
(bad)
push
(bad)
push
cmp
jle
cmp
sub
push
xor
sub
stc
out
pusha
xchg
daa
outs
or
pop
push
xchg
mov
ds
pop
and
adc
popa
mov
rcr
idiv
mov
ins
inc
test
jae
shr
fdivr
or
cmp
in
(bad)
neg
dec
scas
out
nop
xchg
xchg
adc
sar
jbe
dec
cmps
jae
imul
fstp
jae
push
xor
ret
push
pop
add
stc
dec
retf
or
movs
dec
jmp
dec
(bad)
repnz
movs
and
lock
jo
fiadd
pop
vpmacssww
mov
inc
xor
(bad)
jl
xchg
pop
icebp
dec
adc
pop
sub
in
cmp
or
ja
inc
inc
repnz
in
xchg
xchg
int3
xchg
dec
xchg
lods
xchg
scas
mov
jmp
sbb
mov
stos
inc
adc
push
lds
loopne
in
enter
enter
cdq
not
xchg
jnp
sbb
dec
loop
sub
cmp
out
pop
adc
call
cli
inc
das
push
gs
pop
mov
fdivr
scas
or
mov
mov
add
int
jne
dec
dec
pop
in
ds
inc
xchg
jno
not
dec
mov
dec
test
movs
retf
jecxz
test
and
(bad)
adc
lock
add
cmp
popa
dec
inc
enter
mov
mov
cli
stc
xor
fisubr
stos
outs
sbb
dec
add
sar
add
adc
rol
or
repz
pop
pop
(bad)
xor
mov
sub
and
cli
test
call
xchg
cmps
daa
inc
inc
add
fbld
pusha
stos
retf
popa
pop
cmp
mov
mov
mov
lock
iret
sub
xor
in
mov
(bad)
pop
and
scas
imul
jb
push
dec
jne
aam
sar
sbb
inc
cmp
xor
mov
xor
jg
sbb
sbb
hlt
mov
mov
jae
dec
and
add
scas
(bad)
frstor
ficom
(bad)
rcl
xlat
pop
pop
ja
dec
cmc
xchg
jno
cmp
xor
ins
add
adc
mov
and
into
fimul
and
pop
jmp
fstp
imul
adc
sbb
inc
(bad)
xchg
(bad)
popf
ret
int
or
(bad)
mov
jecxz
dec
mov
inc
addr16
dec
ins
sbb
arpl
test
int
test
sahf
push
pushf
dec
ret
cmp
(bad)
mov
xchg
mov
fsub
mov
aad
sbb
cmp
hlt
xor
adc
cld
fnstenv
adc
shl
sbb
sub
xchg
je
(bad)
dec
cmp
icebp
mov
ss
test
xlat
push
jg
mov
mov
pop
jmp
cs
pop
ins
dec
xchg
aad
xchg
inc
mov
movs
add
xor
cs
sbb
pop
iret
nop
dec
(bad)
cmps
bnd
(bad)
fmul
ud0
repz
inc
and
mov
(bad)
out
mov
dec
inc
jb
jnp
idiv
xor
iret
lahf
mov
cmc
or
mov
cmp
rol
sbb
ret
in
mov
arpl
or
nop
and
sub
and
fs
inc
repz
pop
sbb
mov
call
mov
pop
ins
cs
shl
jle
(bad)
adc
jp
cwde
push
lods
xchg
cmps
ret
xlat
pop
addr16
or
std
es
mov
ds
add
push
cmp
lods
popf
push
jae
not
(bad)
bnd
mov
jg
fbld
aas
repnz
dec
inc
aas
sar
push
sahf
push
xlat
pop
fidivr
xor
outs
mov
call
push
fnstcw
xor
xor
test
lock
rol
out
int3
pop
xchg
repz
jg
jo
test
xor
fsub
adc
fdivr
push
int
inc
inc
sub
loop
mov
into
mov
hlt
rol
inc
push
add
adc
mov
push
shr
add
sbb
int3
popf
cld
and
xchg
addr16
(bad)
es
(bad)
cwde
popa
sbb
(bad)
aam
in
sbb
scas
cmp
adc
jae
aaa
and
test
leave
add
push
sub
adc
push
leave
nop
in
movs
arpl
loope
mov
bound
fcom
mov
cmp
dec
call
jbe
loope
push
push
out
push
outs
mov
movs
(bad)
xor
sbb
rcl
adc
popf
lock
sub
popa
xchg
into
rol
cmc
jb
add
pop
push
jg
fiadd
pop
aaa
daa
and
add
adc
out
mov
jecxz
enter
shr
pop
cmp
or
adc
lds
in
sahf
out
jmp
in
retf
retf
mov
test
aaa
test
dec
(bad)
jp
jno
push
mov
hlt
bound
sub
jae
xlat
cld
out
jmp
movs
dec
xor
movs
mov
pop
adc
aaa
or
retf
push
mov
mov
xor
pushf
mov
int3
pop
out
xor
push
stos
lds
test
shr
or
clc
or
sub
cli
pop
stc
sub
xchg
ret
movs
(bad)
or
push
fsub
xor
xchg
cmp
push
test
push
shl
xor
push
imul
pop
adc
xchg
sbb
or
cli
loop
cmp
sub
outs
das
cmp
sbb
mov
stos
mov
test
jno
test
pop
xchg
dec
test
mov
(bad)
pushf
add
or
lock
in
lahf
fild
sub
outs
sbb
ror
push
ror
test
loopne
fcmove
fisubr
cmp
mov
push
popa
xchg
and
push
repz
idiv
aas
xor
in
dec
js
out
aas
adc
je
inc
test
lahf
fidivr
ret
imul
rol
mov
jg
fwait
lds
imul
xchg
cmp
pusha
push
xor
or
mov
cmps
ret
adc
loopne
mov
cmp
sub
xor
lods
inc
jo
into
inc
pop
xor
into
pop
and
jl
or
xchg
shl
hlt
sbb
mov
mov
stos
xchg
test
imul
xchg
cwde
nop
test
cmp
add
inc
push
jae
sbb
mov
pop
dec
sti
sar
mov
mov
dec
rcl
imul
out
xchg
jg
mov
pushf
mov
cmovle
hlt
dec
xlat
aad
das
adc
ins
mov
mov
pop
sub
test
retf
mov
inc
sti
cmp
and
push
stc
bound
or
cmp
sbb
mov
dec
retf
lock
adc
ds
pop
sub
cmp
cmp
xor
jmp
std
jmp
fild
inc
sbb
xchg
dec
(bad)
std
add
out
stos
(bad)
dec
dec
add
add
push
outs
fwait
sub
(bad)
cmc
and
inc
(bad)
mov
out
push
scas
cwde
xor
ret
ja
jne
mov
(bad)
(bad)
in
gs
ins
pop
xchg
sub
shl
mov
inc
out
mov
sub
cmps
mov
mov
dec
pop
fstp
push
iret
cdq
daa
and
and
movs
imul
sbb
jge
ret
(bad)
js
in
aas
jo
cmc
(bad)
lahf
mov
test
jnp
mov
lahf
idiv
ins
fwait
push
add
imul
push
lods
mov
cmc
mov
call
cpuid
sub
fwait
fwait
xor
mov
inc
mov
cmp
cmp
fcomp
int3
int3
mov
iret
mov
cmp
fwait
in
popf
pop
in
enter
call
cdq
lock
test
mov
mov
jecxz
xchg
out
arpl
mov
cs
ds
lds
leave
out
retf
jnp
pop
xchg
adc
fstp
std
mov
nop
add
mov
jb
mov
xchg
(bad)
ret
lods
gs
sbb
lods
fnstenv
fbstp
jno
ficom
pop
in
lods
aas
shr
aas
sar
or
xchg
xor
test
std
mov
jg
loopne
push
imul
js
test
jbe
ins
mov
in
retf
push
add
repz
cld
xchg
hlt
imul
sbb
add
jg
dec
sar
fistp
pop
jne
push
scas
in
ja
in
scas
sub
pop
xchg
and
inc
mov
inc
out
add
fs
jge
cmp
aaa
and
stos
xchg
ins
or
cmps
(bad)
movs
pop
test
in
out
popa
popa
xchg
rol
pusha
movs
dec
or
xchg
and
in
push
cmc
stc
xor
test
jle
rol
movs
cmp
cs
hlt
inc
shr
fisttp
jmp
iret
push
not
mov
cmp
icebp
stos
test
lods
fstp
loopne
(bad)
cdq
cmp
das
hlt
js
aad
sbb
fwait
mov
add
clc
xchg
rol
daa
mov
cli
fdiv
shr
mov
clc
popa
das
mov
jl
adc
sub
je
aas
mov
aaa
test
sbb
fdivr
push
test
fdiv
call
cmps
cdq
xor
dec
sub
cmp
mov
sti
jmp
mov
cli
jae
adc
mov
sbb
ds
mov
int
sbb
sub
movs
shl
test
adc
inc
push
push
dec
add
jne
sub
xchg
sub
test
ins
jp
cmps
or
cmp
test
xor
call
or
aad
jmp
fmul
ins
xchg
stos
rcr
jne
inc
cmp
movs
loope
dec
inc
dec
test
ja
jge
or
mov
mov
mov
push
scas
mov
repnz
dec
stos
in
fs
cmps
inc
ins
mov
adc
loop
call
mov
xor
add
mov
cmp
push
and
xchg
jl
in
add
push
add
cmps
push
mov
xchg
cdq
movs
or
fwait
retf
xchg
push
mov
sub
call
mov
(bad)
(bad)
(bad)
je
out
adc
jno
hlt
pop
test
fisttp
dec
pop
bound
fcmovbe
pop
data16
stos
xchg
ret
cmp
es
dec
adc
and
pusha
mov
ss
cld
lds
adc
lock
aas
sbb
fxch
or
scas
cli
mov
sahf
sbb
lock
mov
mov
add
lds
adc
or
or
mov
rcl
mov
add
add
jmp
shr
scas
jmp
inc
push
dec
and
les
fldenv
jmp
cwde
pop
mov
aad
jns
pop
jns
or
push
inc
ret
fidivr
sbb
les
iret
push
mov
mov
sbb
into
add
int3
jbe
pusha
jle
inc
movs
sbb
das
sbb
sub
sti
inc
les
mov
js
mov
(bad)
mov
dec
xor
rol
dec
retf
(bad)
mov
mov
outs
movs
pop
int3
sbb
sbb
sub
inc
mov
sbb
ins
out
ret
arpl
or
or
push
jo
test
xor
mov
sti
loop
and
cmp
in
dec
ret
js
bound
jne
cmp
into
cmp
ror
test
jb
mov
hlt
cmps
cmp
mov
mov
mov
pop
mov
das
(bad)
cmc
outs
daa
dec
inc
out
out
cwde
retf
mov
aam
add
inc
ret
ds
adc
or
pop
test
lods
je
adc
add
loopne
jb
dec
xor
cmp
(bad)
out
cdq
or
pushf
jmp
mov
push
mov
jp
stos
int3
sub
and
movs
jp
dec
mov
mov
(bad)
xor
das
add
dec
pop
or
popf
mov
jnp
jge
cdq
xchg
je
outs
les
mov
js
dec
push
cmp
fcmove
stos
inc
cmps
push
fdiv
shl
imul
clc
enter
scas
jbe
aad
cs
sbb
fucomip
out
pop
xchg
xor
or
(bad)
push
cs
outs
xor
push
outs
dec
push
sbb
jno
in
ja
mov
or
adc
jno
pop
mov
shl
leave
pop
cmp
or
mov
sbb
ficom
cmp
imul
mov
and
es
add
sub
test
(bad)
xor
push
stc
adc
jbe
js
push
adc
jmp
arpl
and
xchg
jmp
sub
xchg
add
xchg
dec
das
inc
lock
shl
xchg
nop
inc
and
std
not
mov
loopne
lds
add
mov
pop
loopne
dec
ja
mov
or
push
lods
add
xchg
cmps
inc
mov
in
out
js
mov
js
aad
rcl
daa
rol
xlat
daa
fstp
mov
loopne
dec
mov
xchg
jmp
xor
aas
pop
mov
xor
mov
cdq
mov
rol
jecxz
sahf
hlt
sbb
and
lods
neg
in
stc
pop
mov
xchg
jnp
push
shl
int
mov
lds
ret
add
lea
(bad)
cwde
and
xchg
leave
push
dec
jne
jle
out
les
lock
xchg
out
pop
adc
pusha
lahf
adc
sbb
xlat
jno
add
icebp
ins
jp
mov
test
cmp
ret
dec
out
inc
xor
mul
xchg
(bad)
out
das
cmovg
ret
sar
(bad)
popa
mov
adc
outs
int3
cli
sbb
out
les
inc
dec
daa
jecxz
or
sub
sub
cs
or
or
or
push
loop
inc
call
imul
adc
ds
aam
jp
ds
fild
add
jns
out
add
mov
xor
jecxz
stc
mov
cmc
jo
ins
xchg
cmps
mov
into
icebp
ss
dec
xchg
jle
push
adc
sbb
push
pop
cmp
pop
mov
add
jo
(bad)
int
bound
rcl
dec
inc
xchg
push
(bad)
inc
(bad)
xor
jmp
adc
and
xchg
lea
xor
jbe
aas
mov
shl
in
icebp
js
cli
ins
push
sahf
in
call
fadd
mov
inc
and
jno
push
jmp
shl
cmc
rcr
dec
push
(bad)
mov
scas
sbb
jo
xor
test
mov
div
nop
cmp
sahf
mov
pop
ins
sub
ror
out
dec
outs
popa
cmp
adc
cmps
retf
inc
pop
inc
scas
sbb
cmps
ret
push
lock
mov
emms
test
lock
(bad)
pushf
ret
ret
ins
xor
cld
and
int3
fst
xor
vmwrite
nop
dec
sahf
out
shl
cmp
shl
mov
push
fs
xchg
sub
mov
add
in
xchg
ins
mov
pop
shl
jne
mov
pop
xchg
mov
sub
inc
pop
imul
push
adc
cmp
in
movs
mov
and
jbe
icebp
sub
cli
xor
xchg
clc
cmc
adc
bound
fistp
mov
pop
adc
movs
(bad)
(bad)
adc
xor
dec
stos
dec
lea
jb
ret
pop
repz
shr
sub
or
outs
cmc
hlt
ss
pop
xor
ret
xor
aam
mov
adc
repnz
add
jnp
sub
fstp
and
scas
arpl
lock
fimul
stos
test
sub
mov
push
mov
jl
and
xchg
cmps
mov
jno
xor
cld
jne
call
adc
stos
ins
add
pop
push
pop
push
mov
dec
sub
pop
pop
xor
gs
mov
mov
adc
inc
sub
add
mov
pop
xor
lock
test
lea
das
neg
popf
or
cmp
dec
and
gs
cmps
and
call
sub
xchg
repz
pop
xchg
push
sub
test
sbb
add
test
sbb
clc
mov
out
repnz
hlt
mov
lods
imul
pop
das
fist
dec
(bad)
mov
outs
addr16
jbe
lahf
inc
jnp
data16
mov
pusha
or
nop
adc
(bad)
inc
pop
dec
(bad)
icebp
add
sbb
mov
sahf
push
push
cmc
hlt
xor
jae
pusha
bound
push
fcmovbe
jo
ss
add
loop
jno
les
(bad)
dec
or
mov
sbb
into
shl
clc
lahf
adc
scas
nop
push
pop
aad
adc
addr16
fwait
mov
rol
pop
sar
or
sbb
xchg
pop
stc
das
sbb
or
rcl
sub
es
adc
or
(bad)
mov
ror
int
call
imul
jno
in
and
shr
(bad)
jmp
mov
std
mov
cs
out
adc
jae
xchg
mov
mov
xchg
and
out
daa
mov
aad
push
in
fld
add
xchg
mov
arpl
jp
cwde
adc
adc
mov
push
lahf
fldcw
fld
rcl
in
mov
jge
fst
jbe
in
cs
sub
adc
lds
rcr
lahf
ins
sub
pop
mov
(bad)
pop
push
sub
mov
mov
or
test
jecxz
xchg
mov
(bad)
push
pop
cmp
dec
pop
sbb
adc
jmp
dec
cmp
mov
scas
xor
scas
imul
retf
pop
std
sbb
sbb
mov
pop
aam
xchg
in
or
call
and
inc
loop
bound
lahf
push
shrd
jb
lds
sbb
sub
fild
mov
mov
mov
leave
mov
fs
loope
cmp
mov
pop
lea
jecxz
retf
pop
mov
fild
adc
mov
(bad)
stos
inc
fidivr
xor
xor
mov
cdq
call
int
int3
xor
dec
mov
aaa
enter
movs
jbe
and
mov
iret
cmp
adc
cmp
inc
hlt
pusha
movs
in
imul
xchg
(bad)
mov
mov
ds
push
adc
add
test
mov
sahf
out
or
fistp
fistp
jecxz
fdivr
pusha
in
push
xchg
xchg
or
scas
daa
mov
fxch
jo
xor
inc
mov
add
cmp
xchg
imul
sbb
and
dec
push
xor
mov
sub
add
cli
scas
xor
stc
shr
fstp
sbb
das
addr16
or
(bad)
(bad)
cdq
push
sbb
cmps
dec
aad
push
loop
daa
arpl
sub
cmp
push
sbb
lahf
pop
es
inc
cs
addr16
mov
mov
dec
add
cli
xchg
jns
mov
dec
push
test
mov
adc
je
or
jae
popf
jno
dec
ins
loop
(bad)
call
and
cmps
xchg
ffree
out
jo
test
pop
movs
loope
push
int3
scas
sub
add
jecxz
or
(bad)
les
and
out
jo
mov
stos
xor
(bad)
retf
adc
mov
and
mov
(bad)
mov
xor
xchg
sar
leave
sub
into
repnz
xor
pop
adc
shr
(bad)
pop
test
ret
add
pop
ucomiss
dec
hlt
xlat
xchg
ret
int
sub
or
in
jecxz
mov
sub
jmp
xchg
and
xchg
ret
mov
scas
adc
std
sub
inc
push
add
scas
mov
jbe
add
outs
mov
test
popa
add
fsubr
cmps
scas
test
and
or
ss
test
xor
lods
mov
jmp
shl
cmp
mov
cmp
(bad)
cli
(bad)
push
popf
push
jae
ins
and
ds
pop
push
test
sub
sbb
ret
push
dec
in
inc
inc
mov
cmp
add
xchg
loop
push
ds
push
add
(bad)
push
jmp
gs
push
mov
xlat
dec
std
xor
mov
jle
sbb
popa
cld
add
adc
movs
xchg
cwde
hlt
xor
out
jecxz
xor
pusha
or
jns
adc
jnp
rcr
push
popa
push
sub
adc
lds
jne
stc
shr
retf
(bad)
dec
adc
pop
and
or
in
fs
pop
lock
inc
stos
and
(bad)
inc
jle
jnp
std
push
imul
dec
mov
and
pushf
and
adc
and
pop
repz
cmp
ret
repnz
pop
sub
xor
mov
cmp
cmp
xchg
sti
push
pop
aam
pushf
lods
(bad)
out
xchg
sbb
push
adc
and
adc
cdq
sahf
sub
scas
mov
mov
repz
jp
sbb
aad
stos
sti
aas
xlat
mov
daa
idiv
inc
mov
ja
outs
retf
add
sub
xchg
loope
pop
fwait
dec
jbe
(bad)
jl
add
mov
std
and
mov
mov
js
arpl
mov
mov
nop
retf
out
pop
xor
xor
dec
loope
and
into
add
jns
mov
rcr
xchg
or
in
jmp
pop
jge
ret
jmp
sbb
jns
mov
add
pop
cmc
push
sbb
cs
inc
cwde
ret
pop
xor
hlt
mov
loopne
xlat
les
sub
cs
mov
int3
push
aam
ds
sbb
mov
mov
cmps
jmp
pop
jae
inc
pusha
popa
nop
nop
jp
xchg
mov
cwde
fisttp
outs
inc
xor
add
mov
inc
loope
mov
shl
dec
rcl
test
pop
int3
sbb
mov
nop
adc
inc
int
sub
(bad)
shr
sti
pop
pusha
cmps
leave
jne
leave
dec
sbb
loope
cmp
(bad)
cdq
mov
sbb
sub
adc
addr16
aad
mov
adc
sbb
jmp
xlat
retf
xchg
adc
add
mov
retf
stos
popf
sub
push
add
pop
sahf
out
mov
xor
idiv
out
sbb
pop
mov
pop
ds
movs
fs
push
cdq
jb
(bad)
xor
xchg
add
loopne
pop
js
xchg
dec
lods
fdiv
mov
xchg
in
dec
push
adc
pop
div
adc
idiv
xor
rcr
sub
in
mov
xchg
iret
or
mov
mov
les
cmp
imul
or
adc
in
imul
cli
pop
or
lds
sahf
add
mov
pushf
push
sub
js
push
inc
adc
shl
or
push
data16
push
lahf
aaa
push
ins
mov
popf
or
or
fld
jp
push
jnp
hlt
pop
inc
mov
sbb
(bad)
jns
lds
jmp
inc
jg
enter
jp
shl
pop
loop
out
ret
leave
inc
je
into
add
xchg
dec
scas
inc
fiadd
cmp
jne
mov
jle
adc
pop
sub
stc
ja
repnz
fistp
xchg
mov
and
test
loopne
pop
dec
sbb
test
fs
cmps
in
es
adc
adc
mov
outs
push
retf
push
pop
push
(bad)
mov
add
xchg
or
rcl
outs
ficomp
lock
ss
and
fldenv
jmp
cld
sbb
pop
or
imul
movs
outs
xchg
mov
ficomp
xor
test
cmps
or
inc
sbb
inc
mov
cld
pop
leave
imul
mov
pushf
and
mov
arpl
sub
lds
dec
sbb
dec
sbb
mov
push
sti
out
nop
xor
mov
jp
out
add
(bad)
das
ins
add
or
mov
mov
popf
sub
jne
jp
pop
push
cli
ja
cmps
shl
sbb
popa
aam
cmp
sar
in
cmp
lods
push
and
pop
in
sbb
and
not
clc
enter
or
push
dec
ror
fwait
pop
mov
loope
(bad)
cld
lods
sti
or
stos
pop
in
push
xor
xor
mov
cmp
repz
mov
in
int
sub
aad
sbb
in
dec
lahf
sahf
sbb
adc
push
adc
add
imul
adc
pusha
add
ror
dec
mov
mov
retf
xchg
add
rcpps
push
test
shl
ja
mov
imul
dec
scas
lods
sbb
pop
call
sub
mov
mov
iret
mov
mov
push
inc
ret
out
xchg
cmp
lods
(bad)
jbe
addr16
popf
mov
sub
mov
mov
mov
out
popf
test
ret
mov
dec
adc
(bad)
push
pop
ins
icebp
inc
sub
cwde
pop
inc
hlt
push
stc
pop
xor
pop
and
fwait
inc
je
jno
stc
add
pop
cwde
jle
das
sub
loopne
in
adc
inc
push
xor
jmp
mov
retf
mov
cwde
xchg
push
sbb
jne
pop
cmp
mov
ss
sti
cmp
shl
sub
pop
xor
bound
add
mov
daa
push
cmp
push
nop
in
add
xchg
and
inc
push
outs
pop
shr
pushf
and
cs
ror
pop
mov
mov
or
cmp
jp
pop
in
fiadd
fld
pop
pushf
repnz
ins
lahf
and
xor
mov
fldcw
not
xor
adc
repz
ins
pop
sahf
inc
fld
xchg
movs
sbb
and
xor
je
js
daa
loop
fidivr
ret
shr
xor
mov
xor
jb
in
sub
lar
leave
call
mov
outs
das
jbe
xchg
test
sahf
icebp
sti
mov
outs
xor
adc
dec
push
in
leave
popf
mov
retf
call
jnp
lock
sub
test
mov
daa
imul
sbb
add
test
mov
arpl
dec
dec
push
ins
test
rcl
mov
lock
cs
sbb
jno
jns
mov
jne
inc
xor
xchg
pop
lahf
push
or
add
mov
lahf
bound
lods
js
pop
popf
pop
cmp
mov
push
xor
jge
push
jl
test
std
cmp
arpl
cli
mov
(bad)
fwait
iret
ss
adc
and
test
jmp
clc
mov
jae
or
or
fst
lods
or
cmp
and
(bad)
lahf
sub
outs
cld
gs
dec
call
adc
stos
call
jmp
mov
inc
loop
in
pop
inc
cld
cdq
or
sub
enter
mov
emms
icebp
inc
mov
test
cmp
adc
outs
cmc
jbe
and
adc
fdivr
ss
sub
push
push
fnsave
mov
mov
repnz
cdq
dec
dec
or
das
movs
mov
jo
pop
adc
in
xor
pushf
mov
in
les
mov
push
xor
sub
ins
mov
or
scas
pop
(bad)
pop
retf
lds
test
cmp
movs
push
inc
test
int3
leave
jl
push
sbb
in
leave
jge
jge
punpckhbw
xchg
(bad)
test
dec
pop
dec
and
inc
jns
and
xchg
mov
jnp
(bad)
xchg
aaa
pop
inc
mov
add
in
call
fmulp
add
out
mov
pop
mov
(bad)
ret
das
jb
data16
push
sti
fnstcw
test
push
mov
or
mov
pop
test
mov
mov
aas
pop
sub
hlt
repnz
loop
sti
xor
and
test
ins
ss
cdq
addr16
xchg
xchg
imul
xchg
mov
mov
mov
out
out
iret
lock
inc
ss
cmp
mov
dec
adc
fsubrp
aas
jge
movs
leave
test
les
xchg
sub
(bad)
mov
movs
retf
mov
sub
test
or
popf
mov
clc
mov
pop
mov
push
mov
loop
imul
mov
std
das
rol
cdq
sbb
imul
hlt
adc
ja
adc
cmc
and
mov
xlat
cmp
jno
cmp
xchg
and
push
sub
or
sbb
sbb
jb
mov
pop
jg
or
dec
mov
sub
cmp
pop
cmp
xchg
push
push
rol
cs
push
mov
sti
lock
inc
pop
push
xor
loopne
ret
and
jo
adc
pop
push
pop
test
ror
(bad)
imul
out
sahf
mov
mov
es
mul
push
es
in
jns
(bad)
push
push
test
mov
int
xchg
sti
dec
retf
stc
mov
scas
xor
into
pushf
push
rcr
in
and
movs
or
jns
jl
aad
es
ficom
add
cmc
mov
inc
and
ins
(bad)
adc
sub
ds
clc
add
ds
mov
fcom
jge
stos
sub
add
mov
retf
clc
outs
addr16
leave
xor
jns
xchg
mov
mov
pop
mov
jo
ficom
arpl
shr
retw
fwait
inc
fs
lahf
xor
mov
mov
jb
dec
leave
sbb
(bad)
hlt
jne
iret
sbb
jle
cli
iret
xor
xchg
fldenv
adc
icebp
in
xor
test
xchg
push
mov
fdivr
or
ss
add
sub
imul
adc
pop
(bad)
les
sti
jg
lods
outs
es
mov
imul
jp
fsub
inc
cmp
pop
outs
data16
and
iret
shr
ja
jge
adc
leave
inc
retf
mov
sub
mov
xor
mov
std
test
mov
or
mov
fsub
push
addr16
jle
push
pop
(bad)
mov
enter
pop
loop
aaa
push
or
scas
push
xor
sub
push
lock
stos
leave
jne
or
pop
pop
in
neg
(bad)
pushf
xor
repz
add
or
cld
pop
pop
fcom
inc
lods
mov
lods
cmp
scas
push
inc
xchg
push
in
ds
jnp
xchg
dec
ins
cmp
and
add
inc
push
sub
adc
inc
std
sbb
adc
retf
mov
xchg
push
cmp
rol
out
sbb
pop
xchg
fnstcw
add
aam
jmp
movs
ss
scas
mov
xor
outs
jp
sbb
fs
fisttp
rcr
inc
enter
out
loope
stos
stos
(bad)
dec
push
inc
out
pop
adc
clc
fidiv
sub
lods
push
js
mov
retf
enter
call
jmp
and
jo
movs
pop
push
mov
(bad)
(bad)
cmp
out
and
inc
jl
fstp
sar
aaa
push
fnstenv
mov
jae
outs
fistp
shl
repz
leave
add
sub
add
or
pop
mov
push
int3
and
add
pusha
arpl
retf
xor
ret
loop
ins
dec
inc
aaa
cmp
out
push
test
mov
mov
mov
ret
movs
pop
inc
mov
rol
mov
icebp
pushf
adc
bound
mov
div
cmp
push
mov
into
fidiv
imul
rol
inc
and
mov
mov
shl
pop
call
test
enter
push
movs
test
jno
pop
daa
inc
cmc
adc
or
call
addr16
adc
retf
das
push
sub
cmp
jge
xchg
scas
push
shl
jmp
sub
neg
adc
leave
out
sub
inc
enter
push
mov
xor
sahf
out
(bad)
mov
xor
xchg
sbb
and
into
push
out
out
loop
mov
mov
jmp
push
add
lds
dec
xchg
mov
fwait
push
jl
adc
call
or
gs
push
xchg
adc
push
out
mov
pop
cmc
mov
out
cmp
mov
add
int3
add
push
and
xchg
and
rol
lea
nop
ds
push
das
push
dec
loope
adc
cmp
xchg
inc
adc
add
push
jbe
mov
push
adc
add
or
js
inc
movs
mov
out
imul
fidivr
into
pusha
jge
ins
mov
bound
sbb
loope
in
add
retf
mov
inc
adc
ss
push
xlat
mov
xchg
mov
add
add
aam
jg
rol
mov
xor
push
sbb
out
icebp
sub
arpl
test
pop
scas
xor
mov
into
scas
inc
mov
or
test
mov
xchg
int
fdiv
arpl
and
xchg
repz
in
retfw
mov
mov
das
aas
and
imul
ins
(bad)
xchg
xchg
push
or
and
xlat
lock
(bad)
mov
and
data16
shl
mov
out
jmp
and
add
or
jmp
(bad)
xchg
into
shr
adc
rcr
cld
mov
movs
jle
fadd
out
or
sbb
mov
mov
in
jnp
loope
and
jl
outs
bound
nop
out
iret
out
adc
xchg
sbb
mov
dec
daa
and
outs
xchg
ja
xchg
xor
or
inc
cmp
add
or
and
sbb
mov
lods
xor
dec
sti
push
pop
jle
xchg
fistp
jns
pop
xlat
adc
adc
into
sub
push
lahf
jnp
jae
mov
sbb
imul
cmp
jae
add
cmp
push
add
popa
dec
shl
inc
push
cmp
imul
in
pusha
clc
(bad)
xchg
mov
imul
xlat
mov
iret
clc
xor
or
pop
shr
popf
push
(bad)
mov
bound
jo
(bad)
mov
mov
imul
and
jb
call
pop
aad
cmps
(bad)
pop
xchg
fld
test
sub
mov
xor
test
mov
bound
jns
adc
cmp
mov
and
jns
jmp
mov
ficomp
stos
int
sbb
push
sbb
call
fwait
out
stos
push
retf
mov
popf
enter
mov
cmp
iret
or
repnz
retf
xchg
and
in
fucom
inc
call
inc
das
mov
imul
dec
mov
nop
rcr
and
shl
xchg
add
and
add
or
inc
sbb
int3
scas
xchg
popa
inc
sbb
inc
lock
or
xchg
enter
or
push
call
std
mov
xchg
dec
aas
imul
adc
rol
cli
jo
mov
loope
das
push
in
std
repnz
sub
hlt
mov
add
jmp
jae
aas
xchg
jno
inc
sbb
or
ds
push
in
ret
scas
test
pop
xchg
sub
sahf
call
fwait
jle
mov
inc
pop
js
jbe
dec
or
mov
gs
ret
mov
(bad)
fistp
not
or
leave
cmp
jmp
adc
xor
in
push
add
dec
jne
push
repnz
sub
sahf
out
ja
push
inc
pop
or
mov
ins
aad
ficom
ds
lahf
(bad)
ins
lahf
and
push
je
cs
loopne
aas
aas
inc
add
push
push
fucom
jns
stos
stc
adc
pop
cmp
outs
sbb
mov
data16
or
rcr
push
fldcw
adc
icebp
jmp
cli
mov
xchg
inc
std
add
call
adc
fmul
mov
aaa
inc
dec
xor
mov
out
mov
mov
adc
push
popf
fs
inc
xor
popa
icebp
out
push
or
clc
dec
pop
pop
fimul
cmp
push
or
pop
pop
dec
mov
clc
test
mov
repnz
into
aad
ficom
mov
xchg
jae
xor
js
xor
add
sahf
enter
ins
or
test
jmp
ror
ja
sbb
and
cld
(bad)
mov
xchg
pusha
pop
(bad)
mov
inc
daa
es
adc
or
pop
es
pop
pop
mov
movs
addr16
pop
jb
xor
cli
mov
or
or
pop
xor
fstp
pop
mov
jns
lods
mov
adc
xor
xlat
sub
(bad)
bound
jae
adc
rol
push
mov
mul
push
pop
mov
xchg
xor
aas
dec
and
cdq
call
pop
shl
add
div
push
fwait
pop
(bad)
xlat
pop
push
mov
inc
popa
or
test
cli
pop
std
popa
and
stos
push
dec
push
dec
clc
dec
outs
mov
xor
es
pop
fcomp
mul
mov
mov
test
hlt
enter
aas
mov
jl
sbb
mov
dec
adc
push
inc
inc
stc
inc
pop
mov
repz
mov
out
xor
xchg
and
loopne
fsub
or
or
pop
push
sahf
popf
sahf
jo
pop
aam
add
mov
cmps
inc
inc
into
retf
ret
aas
add
inc
fcmovnbe
sbb
mov
fwait
out
fld1
xor
lahf
rcr
clc
sbb
jge
rcl
ret
aaa
test
pop
pop
or
push
sub
xchg
push
in
test
out
ins
xchg
loop
adc
dec
test
xchg
data16
(bad)
enter
sub
aad
pop
jmp
adc
dec
mov
xchg
jne
(bad)
xor
stc
ins
loop
mov
mov
jmp
leave
shr
js
push
rcl
retf
in
dec
mov
pop
outs
sub
sub
ror
mov
mov
xchg
ret
sbb
cwde
mov
add
cmps
leave
push
jae
out
ins
adc
or
cs
push
cmp
ins
aaa
xor
mov
nop
gs
inc
mov
add
add
mov
lds
xchg
(bad)
pop
add
gs
scas
pop
dec
and
inc
add
daa
adc
out
sub
aaa
aam
add
ins
mov
call
fstp
lock
xchg
std
imul
loope
add
outs
push
mov
in
pusha
nop
push
mov
push
imul
cmp
stos
fisub
cwde
(bad)
mov
and
adc
loopne
lahf
outs
cmc
pop
movs
pop
lea
mov
add
pop
nop
inc
adc
xchg
jbe
jbe
das
mul
push
fwait
mov
mov
test
adc
add
div
and
sti
push
nop
xor
push
mov
cmp
jo
call
push
cld
les
and
xlat
es
mov
fadd
mov
xchg
div
(bad)
cwde
adc
jb
ss
push
rcr
repz
imul
sub
test
stos
sbb
out
dec
call
jbe
mov
stc
rcr
lds
adc
inc
jl
xchg
and
mov
adc
ret
mov
or
test
sahf
mov
sbb
inc
dec
dec
push
xchg
ins
sub
in
adc
jmp
push
mov
pop
cdq
(bad)
cmps
sub
push
icebp
mov
dec
rol
adc
int
ins
mov
(bad)
xlat
comiss
sub
lock
cmp
xlat
xchg
mov
imul
cmp
xchg
jmp
pop
xor
out
ficomp
inc
test
jns
(bad)
mov
pop
mov
cmp
or
daa
out
(bad)
(bad)
push
sub
ror
and
inc
sub
sub
rol
push
std
sbb
test
pop
pop
mov
addr16
xchg
jmp
adc
push
ficom
test
pmaddwd
fsubr
jo
pop
mov
mov
shl
dec
aad
pop
xor
lods
test
sbb
gs
sti
scas
jmp
jge
cmps
dec
rcr
inc
inc
inc
mul
inc
mov
pmaxub
repnz
clc
push
cmp
mov
fucomi
mov
jp
lods
and
rcl
add
pop
cmovl
es
xor
and
jno
repnz
push
sbb
je
mov
ror
(bad)
ret
test
push
add
or
sub
mov
jmp
(bad)
mov
pop
and
jecxz
push
xor
jge
jb
scas
movs
imul
neg
pop
fcmovbe
sbb
in
int3
dec
push
or
aam
and
leave
jmp
cvtdq2ps
xchg
ins
sub
sub
cwde
aam
xchg
mov
and
jl
lea
lds
(bad)
stc
shl
bound
pop
das
dec
scas
ds
mov
sub
dec
and
lods
mov
xor
lods
mov
stos
mov
ret
aas
jge
sahf
mov
test
shl
push
shr
ret
jg
jnp
push
ret
iret
pop
mov
xor
rep
aam
dec
pusha
cli
cli
scas
mov
mov
sahf
aas
popa
dec
mov
cmps
lahf
cmp
or
push
out
es
bound
sub
cmp
rcl
loopne
and
jmp
mov
mov
daa
loope
xchg
lahf
xchg
xchg
and
mov
push
(bad)
mov
and
mov
jmp
push
add
das
in
popf
sub
cwd
jge
inc
sub
mov
or
inc
mov
retf
push
inc
sar
xchg
jo
cmps
retf
pusha
aam
jb
inc
mov
inc
leave
test
es
iret
xchg
ret
add
pop
repnz
sbb
xchg
mov
sti
add
adc
ret
add
xchg
mov
sub
mov
or
cmp
test
aas
jo
(bad)
mov
mov
cmp
cmp
dec
sub
cmp
and
push
push
cs
outs
adc
push
inc
cwde
xlat
(bad)
(bad)
pop
aas
stc
(bad)
mov
fwait
icebp
fwait
or
sub
in
iret
mov
push
sub
arpl
dec
mov
push
xchg
and
retf
sub
iret
inc
ret
mov
adc
cmp
mul
stc
pop
pushf
(bad)
pop
and
inc
test
aaa
inc
aaa
add
xchg
and
cmp
stc
adc
xchg
cmp
jns
movs
imul
pop
scas
dec
mov
dec
gs
adc
xchg
icebp
add
cli
adc
jb
or
call
loope
pop
ins
add
imul
movs
inc
mov
imul
out
ss
in
jae
retf
adc
popf
mov
dec
mov
je
cwde
dec
clc
das
sub
xor
mov
test
mov
lea
enter
out
ss
lods
lock
and
add
sbb
pop
int
cdq
popa
jo
mov
dec
jl
jbe
adc
sub
cld
and
shl
mov
xchg
adc
retf
cmp
mov
xlat
mov
dec
nop
out
dec
fiadd
sar
cmp
inc
or
dec
sub
hlt
xchg
dec
jge
mov
adc
sbb
(bad)
push
jae
mov
stos
loop
dec
inc
sbb
mov
fs
test
jge
push
aad
popf
ret
repnz
mov
lahf
retf
scas
das
aaa
loop
ret
dec
sbb
mov
push
push
fnstsw
aad
pop
mov
imul
inc
(bad)
fisttp
push
add
add
cmp
fadd
or
push
movs
cmps
fnsave
add
fwait
mov
into
mov
(bad)
shl
in
and
sbb
les
retf
dec
jo
fbstp
adc
faddp
daa
jns
mov
xor
mov
ret
push
popf
ins
push
std
addr16
xor
test
add
cld
and
(bad)
sub
jno
in
push
out
repnz
mov
out
aaa
cmp
(bad)
sti
stc
cs
xor
push
xor
clc
out
lods
out
jge
stos
call
jmp
je
dec
cmc
test
lea
inc
mov
ss
adc
call
sbb
add
les
cmps
push
pop
cdq
sub
pop
jne
or
push
and
and
out
and
pushf
pop
push
sbb
inc
xchg
cmp
outs
jnp
retf
add
mov
fwait
mov
or
jle
movs
test
mov
inc
and
(bad)
dec
sbb
cmps
push
jbe
push
lea
and
sbb
jns
lds
sbb
inc
jae
or
and
loop
ins
mov
retf
inc
push
xor
push
fcmovu
repnz
sub
jmp
fsub
mov
fistp
mov
push
mov
push
push
cmps
push
cmp
adc
jge
cmp
and
cmp
sub
jle
stc
or
jge
pushf
jecxz
repnz
jl
stc
movs
and
fs
inc
or
cmp
push
fbstp
mov
adc
out
mov
jmp
nop
push
sub
adc
dec
fsub
mov
test
bound
or
aas
aad
adc
(bad)
jg
pop
cmp
xchg
mov
xchg
(bad)
mov
(bad)
das
cmps
jmp
jecxz
test
pop
(bad)
rol
cmp
add
add
and
sbb
mov
ret
and
xchg
pop
add
lods
imul
sar
fisubr
stos
push
jl
adc
fimul
and
dec
push
jmp
pop
frstor
gs
add
sub
mov
adc
lods
ds
fs
loop
out
shl
test
js
arpl
add
arpl
cmps
cld
cwde
add
std
push
cdq
sub
or
add
popa
or
mov
icebp
jbe
data16
mov
dec
mov
add
or
lahf
push
pop
aas
and
or
aad
adc
mov
inc
sbb
test
add
addr16
add
ins
and
cmps
iret
pop
cmps
and
mov
add
mov
loope
add
(bad)
jmp
mov
add
pop
retf
push
jbe
mov
inc
les
cmp
push
sub
dec
jae
repnz
xor
es
aas
push
xor
cli
addr16
std
(bad)
in
xchg
ret
ficomp
not
xchg
sbb
cmps
out
inc
sbb
test
jle
and
ins
mov
arpl
jb
fcom
call
cmps
or
jp
sbb
inc
push
jle
add
iret
ret
fwait
push
push
or
sub
arpl
pop
loopne
aaa
hlt
xchg
xor
shl
add
sbb
pop
jbe
or
cmp
sar
repnz
mov
inc
rol
dec
test
retf
popa
mov
sub
mov
inc
xchg
dec
aas
xchg
in
pop
jnp
nop
jmp
call
jo
retf
or
icebp
jp
adc
in
cmp
or
push
mov
test
cld
in
daa
sbb
sub
dec
nop
sub
in
aad
mov
iret
gs
adc
imul
mov
in
cmp
push
loope
add
adc
pushf
xchg
push
les
fst
cwde
mov
push
add
push
into
push
or
jge
add
mov
ss
and
jo
push
inc
mov
push
mov
mov
adc
leave
adc
push
sub
(bad)
mov
cli
push
stc
repz
mov
bound
dec
leave
sub
sbb
sub
dec
mov
push
inc
xchg
fistp
push
add
sub
inc
dec
(bad)
mov
inc
xor
sbb
xor
retf
inc
ins
push
out
js
jnp
lahf
in
adc
mov
fucom
pop
ja
sti
mov
adc
test
cdq
retf
xchg
dec
es
rcl
int3
fst
mov
xchg
inc
mov
loop
sub
(bad)
push
and
aas
sbb
repnz
icebp
xchg
(bad)
mov
ss
scas
pop
mov
jl
icebp
(bad)
add
dec
leave
push
jecxz
inc
push
shl
out
jmp
call
cld
in
fcmovb
cmc
repnz
pmaxsw
jmp
shr
movs
aaa
cmp
adc
ins
mov
sbb
xchg
rcl
jb
fs
mov
imul
daa
cmc
test
cwde
and
cmp
xor
in
hlt
adc
sub
(bad)
cdq
fsub
mov
mov
and
dec
test
jne
dec
ss
pop
adc
and
(bad)
push
out
mov
add
movs
xchg
outs
push
repnz
inc
xor
mov
push
xchg
push
(bad)
js
mov
jno
mov
dec
aad
js
fnstcw
popf
sub
sbb
stos
sub
pop
scas
dec
and
or
add
jmp
inc
enter
and
sub
das
cmps
mov
fisttp
into
xchg
xchg
xchg
mov
addr16
lea
aam
stos
stos
fs
fsubr
adc
in
iret
push
mov
test
jmp
je
or
les
push
test
sbb
and
loope
jmp
jg
retf
dec
push
fcom
jne
pop
lds
cmp
mov
ror
shl
add
fs
fwait
inc
in
hlt
sub
add
stos
mov
jns
mov
add
lods
sahf
ret
add
or
jp
iret
(bad)
cld
shl
test
mov
shl
and
stos
inc
mov
sub
xchg
mov
mov
addr16
mov
xchg
xor
imul
mov
mov
and
mov
leave
loop
push
and
popf
retf
sbb
aad
cmp
or
add
xchg
xor
mov
pop
cdq
jmp
clc
sub
test
mov
jmp
push
mov
pop
add
xchg
popa
pop
xchg
inc
fdivr
xor
cmp
inc
fwait
sub
cmp
jb
inc
movs
push
aas
dec
push
(bad)
adc
inc
mov
stos
out
pushf
cwde
pop
popa
pop
std
addr16
add
nop
dec
mov
pop
and
leave
mov
inc
push
imul
dec
mov
xor
fidiv
les
jmp
pushf
add
sbb
aaa
inc
pop
(bad)
push
mov
jl
cmp
mov
jno
in
mov
or
movs
jl
push
cmp
ds
enter
xlat
inc
jo
and
xor
sub
rcr
lahf
les
arpl
push
cs
inc
dec
aam
mov
ss
push
test
sbb
pop
les
pushf
js
jl
and
movs
push
sbb
imul
es
imul
push
in
ins
fwait
pop
ror
cmps
icebp
jecxz
jne
into
iret
sbb
jge
sub
movs
sbb
fimul
add
cmp
pushf
xor
xchg
std
xchg
sahf
jnp
sbb
mov
sbb
ret
test
xchg
pop
push
es
ret
out
out
xchg
xor
pop
in
(bad)
cmp
inc
ins
sub
call
aas
add
or
rcl
inc
xor
sub
nop
fnstenv
mov
mov
or
int3
mov
and
xlat
sbb
aas
nop
add
inc
jmp
in
and
fimul
shl
mov
std
dec
fld
popf
sbb
sub
scas
sbb
sub
push
rol
sub
jmp
inc
mov
fcmovnb
fs
inc
in
cmps
(bad)
leave
movs
inc
dec
xor
sub
fsubr
adc
(bad)
out
ror
fbstp
inc
cmp
adc
(bad)
add
cmps
inc
sub
mov
std
aaa
dec
scas
xchg
jno
push
xor
push
test
mov
pushf
retf
enter
jo
in
fldenv
out
adc
push
push
mov
sub
push
arpl
jl
inc
loop
stos
movs
dec
scas
jns
jle
jmp
addr16
push
push
xor
pop
pop
push
sub
out
push
retf
imul
jecxz
lock
mov
cld
and
cmps
pop
add
inc
push
xchg
add
stos
add
mov
sub
loopne
push
sub
out
cmp
jle
sbb
js
inc
das
xlat
outs
imul
cmps
pop
mov
das
sub
xchg
mov
out
push
lods
mov
inc
jae
cmp
xchg
mov
add
(bad)
cmp
xchg
xor
xchg
cdq
xchg
lahf
pop
popf
sub
fstp
ret
mov
repnz
bound
xchg
pop
xor
shr
xchg
cdq
mov
cmp
or
xlat
adc
movs
mul
addr16
push
inc
lea
test
pop
ins
div
frstor
pop
lock
stos
cmp
pop
jp
popf
lods
(bad)
cli
inc
mov
xchg
outs
push
hlt
aam
or
xchg
fnstsw
jp
outs
pop
mov
das
sbb
femms
mov
int3
dec
xchg
addr16
cmps
lea
push
scas
jbe
dec
clc
xor
in
mov
and
jmp
xor
sub
cmps
in
std
ins
out
nop
or
add
inc
add
pushf
or
in
ret
mov
push
data16
push
loope
mov
loop
or
or
mov
leave
pop
pop
cwde
xchg
dec
lods
xor
(bad)
dec
leave
in
loop
cmps
dec
fsubr
in
sub
scas
mov
shl
outs
shr
lahf
and
ins
jmp
inc
(bad)
mov
cmp
jnp
and
ret
cmc
xor
xchg
(bad)
lock
cmp
jl
in
outs
jnp
pop
shl
sahf
fsubrp
nop
cmc
fldenv
out
cmp
mov
xor
scas
pushf
(bad)
scas
psraw
aam
inc
in
daa
retf
xchg
xchg
fld
cli
test
dec
lods
fldln2
add
(bad)
retf
inc
mov
mov
neg
and
sbb
cs
or
mov
and
dec
mov
mov
pop
add
test
jle
pop
push
retf
scas
outs
data16
jns
and
dec
or
xchg
jecxz
mov
mov
rcr
mov
cmp
arpl
add
push
cmps
sbb
ffree
scas
je
and
inc
xchg
push
cdq
ja
loop
test
nop
int3
mov
xchg
inc
out
retf
sub
adc
lahf
ja
imul
loope
sahf
cs
xor
fnstsw
push
and
jmp
daa
add
dec
push
lea
and
add
aad
sub
inc
lea
or
jnp
jecxz
test
enter
sub
push
ret
xor
adc
(bad)
adc
xchg
aam
dec
dec
sub
fisttp
jae
mov
jmp
popa
push
call
push
cld
cmps
or
fistp
inc
(bad)
pop
lahf
inc
cmp
cs
push
shr
enter
sbb
scas
stc
adc
push
dec
imul
stc
sub
jg
add
mov
xchg
jns
arpl
push
gs
push
mov
cmp
ins
imul
mov
xchg
imul
in
adc
jae
push
loop
jns
adc
js
push
and
outs
shl
call
out
ret
mov
push
push
data16
jmp
std
mov
or
mov
mul
add
inc
mov
push
je
push
push
pop
ja
rol
pop
or
(bad)
es
jg
cdq
sub
inc
jb
mov
inc
pusha
jb
retf
inc
or
sub
xchg
outs
jb
scas
shl
add
jg
mov
push
lahf
dec
inc
and
mov
js
cmp
imul
pop
jb
xor
add
and
cmp
add
rcr
add
aaa
xor
iret
mov
rcl
push
xor
add
cmp
jge
retf
and
dec
cmp
xor
in
cld
hlt
mov
repz
cmps
mov
push
cwde
imul
mov
in
pop
inc
ror
jmp
mov
aam
jmp
(bad)
jbe
jge
mov
jmp
inc
(bad)
les
pop
int3
aas
xchg
nop
mov
movs
je
or
add
dec
jecxz
div
test
outs
lock
or
sbb
sti
sbb
aas
out
xchg
push
aam
xor
sbb
loop
cmp
jae
mov
(bad)
pop
dec
fbld
jmp
sub
loope
jle
push
cmp
cmp
inc
imul
not
(bad)
shl
fdiv
dec
mov
std
inc
arpl
loopne
lds
int3
mov
sti
add
jecxz
fwait
and
cmp
fs
pop
pop
add
in
pop
cmp
dec
fnstenv
sbb
test
dec
dec
inc
in
in
pop
cmp
xchg
fdivr
out
inc
(bad)
into
lea
aas
fwait
rol
mov
call
bnd
fcmovne
out
repnz
and
push
or
or
xor
dec
add
push
jle
jb
push
mov
outs
inc
iret
dec
inc
call
dec
mov
out
movs
icebp
add
cmp
fs
mov
mov
dec
xchg
cli
push
pop
mov
leave
test
lock
imul
test
mov
mov
dec
adc
mov
test
xor
fcom
inc
or
mov
inc
inc
test
mov
fcomp
xchg
sahf
ins
cmp
and
and
repnz
leave
imul
and
test
pop
ret
dec
call
cld
int
pop
push
sub
mov
jg
loop
cmp
sbb
cmp
fwait
xchg
scas
dec
add
mov
add
inc
enter
xor
sbb
das
je
repz
inc
js
add
popa
jge
aad
jno
adc
xchg
not
test
ins
mov
push
mov
call
repz
aaa
xchg
fcom
cmp
loope
jnp
cld
mov
std
cmc
or
jns
inc
ins
arpl
frstor
cmps
nop
je
add
fstp
xor
retf
xor
xchg
pop
addr16
jnp
jle
(bad)
xor
xor
js
mov
dec
cdq
sbb
int3
adc
jg
imul
ss
test
mov
add
cld
adc
fwait
out
inc
sbb
cld
push
sub
mov
push
jl
pop
das
retf
push
inc
xchg
retf
cmp
jae
and
jle
fwait
jns
jmp
(bad)
xchg
sar
imul
push
popa
push
test
inc
aad
push
dec
cli
into
adc
dec
mov
jnp
div
aaa
ja
dec
push
xor
jecxz
adc
es
rol
mov
sbb
cmps
imul
or
fidiv
xchg
pop
jne
(bad)
pop
outs
xchg
and
call
jns
out
jg
scas
aam
xchg
pop
and
retf
mov
jl
popf
push
aaa
xor
movs
mov
aas
iret
leave
sbb
pop
(bad)
push
jp
aam
adc
into
scas
movs
fwait
call
test
push
dec
cmc
or
pusha
in
scas
jmp
xchg
jl
lods
cmp
cmps
aas
and
jae
add
es
in
rcr
cmp
push
test
in
xchg
imul
movs
imul
loop
std
jmp
test
fild
xor
movs
stos
inc
add
lds
mov
xor
mov
mov
jmp
call
mov
fist
push
fld
dec
push
jl
movs
cmp
arpl
leave
cmp
outs
xchg
outs
sub
mov
sub
jns
mov
inc
das
or
stos
addr16
scas
cld
mov
pusha
pop
jb
in
in
fs
pop
aaa
scas
xor
cld
fsubr
adc
jbe
call
cmp
mov
rcr
out
movs
and
fisttp
pop
out
cmc
(bad)
int3
stos
loopne
je
mov
mov
data16
dec
adc
add
xor
sar
lea
js
dec
and
(bad)
fcomp
addr16
aaa
mov
cmc
(bad)
stc
xor
call
push
adc
loope
out
lds
mov
pop
push
je
jno
out
sahf
in
jge
push
repz
sar
aaa
lock
ins
dec
or
pop
ret
aas
dec
(bad)
loope
loopne
and
movs
xor
and
push
es
sbb
sub
je
fidiv
xchg
xchg
or
pop
(bad)
and
fistp
scas
scas
repnz
xor
sbb
xchg
push
imul
rcl
adc
movs
outs
ja
sbb
mov
mov
ficom
push
je
adc
aaa
lock
into
xor
imul
arpl
xor
xor
mov
cmps
inc
jns
add
call
xchg
jecxz
push
adc
mov
cmp
mov
adc
loop
xor
pop
cli
(bad)
pop
cmps
mov
jge
push
dec
jge
sbb
sbb
sahf
cli
adc
inc
js
and
xor
and
(bad)
arpl
movs
xchg
lock
or
push
pop
mul
mov
retf
mov
arpl
ror
adc
mov
mov
mov
scas
mov
leave
js
jnp
daa
in
mov
push
sbb
mov
or
mov
pop
cwde
mov
in
and
sbb
imul
xor
in
pop
cwde
fnsave
pop
mul
iret
inc
mov
ret
sar
inc
dec
popf
xchg
jle
pop
pop
jecxz
inc
cmps
lock
push
imul
xchg
push
and
imul
pop
add
in
mov
mov
stc
movs
loop
mov
outs
add
pop
call
je
call
lods
nop
imul
cld
mov
(bad)
and
xchg
and
(bad)
cli
test
xchg
sub
(bad)
jnp
sub
in
inc
xor
cwde
ja
(bad)
and
jae
cmp
xchg
or
es
add
cmc
leave
sbb
mov
push
cmp
jae
jb
add
jae
shl
mov
or
popa
mov
rcl
push
and
mov
dec
out
ret
clc
jl
xor
inc
test
cmp
lds
xor
cmp
xor
dec
or
xchg
xor
jnp
cdq
rcl
leave
mov
pusha
adc
push
sbb
push
dec
mov
bswap
mov
lods
test
sub
xchg
nop
lock
xchg
inc
add
add
cmps
cmp
fimul
and
adc
fild
out
add
call
push
ficomp
dec
das
mov
bswap
ins
(bad)
shr
jecxz
and
cmp
mov
add
xor
and
mov
cmp
icebp
or
leave
fidivr
into
inc
loope
int
sbb
adc
pop
stc
daa
dec
fsub
add
aam
scas
pop
addr16
sub
cwde
sbb
adc
sub
retf
lods
stos
mov
pop
mov
ds
in
and
mov
aam
push
cmps
lock
pop
fsub
xor
enter
aaa
cmp
(bad)
movs
add
xor
sbb
jnp
mov
dec
push
cmps
mov
out
test
jo
test
cmp
pop
add
sahf
inc
imul
push
cmp
mov
xchg
ja
mov
imul
lds
mov
pop
in
adc
in
cs
jbe
js
cdq
(bad)
mov
cmp
jle
cmp
adc
push
xchg
or
sahf
retf
cld
call
pop
mov
or
jle
outs
sub
outs
jg
inc
(bad)
jle
mov
mov
mov
sub
push
cmc
(bad)
pop
mov
es
sti
loopne
cmp
jl
dec
mov
loopne
hlt
jne
inc
imul
jne
es
in
sub
xlat
mov
jecxz
mov
ja
or
lods
sbb
sbb
sbb
sbb
fs
out
mov
add
pop
iret
or
push
xchg
sahf
mov
inc
sub
imul
imul
push
jmp
pop
fisub
add
sahf
dec
inc
(bad)
mov
xchg
retf
or
sti
jmp
call
mov
cdq
sub
test
js
mov
leave
add
cmp
(bad)
outs
mov
scas
aad
cmp
add
sar
call
nop
(bad)
shr
stos
shl
jmp
test
rcr
daa
mov
ins
inc
les
and
popf
imul
ror
jl
push
push
and
jl
ins
int3
adc
sub
and
fcom
mov
mov
dec
dec
rcl
mov
mov
push
repnz
mov
lods
jne
and
movs
inc
xor
ds
emms
xor
pop
add
cld
pop
xor
popa
fsub
stos
in
in
fbstp
adc
jle
iret
in
push
pusha
add
sahf
adc
into
cli
push
shr
mov
mov
jl
dec
xor
mov
clc
sti
je
xchg
clc
out
inc
mov
adc
das
mov
shl
xchg
dec
dec
(bad)
imul
pop
inc
fild
daa
adc
lods
call
pop
ja
cmp
fcmovu
mov
push
int
lods
add
repnz
inc
cli
xor
dec
scas
test
jbe
fiadd
push
and
cmc
into
push
and
bound
mov
loope
jno
fdivr
test
inc
sub
dec
mov
shl
mov
jbe
mov
or
aad
mov
jbe
jle
(bad)
mov
ret
dec
outs
and
sub
adc
xchg
stc
fwait
mov
mov
pushf
jmp
scas
add
lock
(bad)
repnz
xor
mov
xor
jae
cmp
call
mov
xor
jle
xor
sbb
adc
stos
ret
add
out
jb
rol
pop
sbb
ja
lds
aam
fdiv
mov
or
add
dec
ins
fnsave
add
enter
add
push
xchg
ss
stos
adc
lods
popa
int3
aad
jno
cmp
out
(bad)
outs
in
mov
retf
jo
mov
xchg
and
add
(bad)
out
cld
pop
movs
sub
mov
(bad)
mov
jo
push
call
xchg
aas
ret
(bad)
es
(bad)
test
mov
dec
repz
pop
es
aas
fstp
xor
add
pop
lahf
push
addr16
mov
cmps
push
inc
and
lock
dec
std
loopne
mov
ret
in
push
xor
push
movs
test
mov
push
xor
lds
hlt
call
dec
xor
push
outs
test
stos
push
das
mov
nop
shl
jp
push
movs
les
outs
pop
rcr
cmp
js
retf
inc
fist
or
mov
sar
pop
rcl
stos
int
xor
rep
sub
push
cmp
pop
mov
xor
mov
mov
add
mov
call
xor
push
pusha
mov
je
jg
(bad)
fistp
shl
inc
es
xchg
add
push
pop
stos
jle
mov
les
leave
add
xor
scas
push
cmp
fisttp
ret
loopne
cwde
cmp
scas
fcmovb
in
inc
xchg
test
sti
fcom
fldcw
mov
jmp
test
out
sbb
dec
inc
mov
popf
mov
cmp
jp
(bad)
jns
push
xchg
repnz
jl
mov
mov
test
stc
std
test
test
jnp
arpl
xor
jb
mov
cmp
jne
repnz
lock
test
pusha
ss
clc
push
fldcw
mov
fcomp
adc
stos
mov
mov
mov
xchg
push
es
test
test
adc
aam
cld
pop
inc
push
pop
cmp
mov
mov
sub
add
sbb
scas
outs
ret
pop
push
call
imul
and
out
leave
ja
push
gs
ret
in
or
pop
cld
jg
pushf
stos
sbb
mov
call
inc
cmp
imul
inc
test
inc
gs
ds
pusha
popf
clc
mov
push
leave
xor
dec
test
mov
pop
movs
jmp
imul
ja
jno
jmp
jmp
push
or
mov
test
xchg
mov
jl
mov
call
push
xchg
push
xor
fwait
out
inc
popf
xchg
inc
outs
mov
shl
mov
je
stos
jecxz
loop
lods
mov
push
mov
stos
add
lods
retf
imul
bound
sbb
pop
in
pop
scas
ds
loop
out
push
mov
pushf
(bad)
idiv
pmaddwd
push
mov
xchg
imul
jbe
and
lods
sub
jg
in
or
inc
popf
mov
mov
xor
sub
cmp
mov
and
daa
xchg
mov
fiadd
(bad)
xchg
(bad)
movs
(bad)
sbb
cdq
pop
btc
gs
adc
loopne
ins
out
mov
(bad)
xlat
out
cli
mov
add
xchg
or
add
(bad)
adc
sbb
mov
xor
in
xchg
ja
loope
out
sbb
dec
mov
cs
pop
pop
aam
movs
inc
dec
sbb
push
mov
ds
sahf
adc
fmulp
loop
lds
pop
pop
jae
mov
add
sub
sbb
cmp
xchg
push
mov
cmp
xchg
push
push
mov
jo
pop
lods
call
mov
adc
or
adc
call
mov
cli
test
test
dec
jmp
mov
xchg
(bad)
(bad)
out
hlt
pop
outs
pop
arpl
lods
cmc
stc
scas
(bad)
clc
lock
pop
shr
retf
and
or
mov
sbb
add
(bad)
jae
fs
pmulhw
(bad)
jmp
out
adc
aaa
ins
loop
loop
cwde
sbb
jns
lahf
call
out
and
les
gs
lods
les
cs
test
idiv
aad
jae
das
xlat
mov
cmp
or
sub
nop
fiadd
out
es
fdiv
push
mov
pushf
enter
dec
push
lds
cmp
popa
inc
aas
or
loopne
jecxz
cmps
out
loope
lock
mov
add
outs
outs
mov
jo
enter
mov
cwde
and
add
aaa
or
xchg
iret
outs
pop
mov
jne
out
push
imul
cmc
inc
adc
dec
or
xchg
sbb
pop
jg
xor
popa
jmp
add
and
push
pop
mov
mov
pop
and
out
pop
iret
add
inc
iret
jecxz
xor
push
sbb
xchg
adc
pop
lds
push
jbe
jle
pop
xchg
sub
daa
adc
xchg
ins
aas
add
inc
cmps
mov
push
gs
sbb
push
jne
mov
ret
scas
ret
test
dec
sbb
ins
add
fld
sub
retf
popf
lds
addr16
outs
mov
mov
sbb
xor
inc
xchg
add
and
cli
retf
mov
shl
pop
pop
enter
ds
push
fwait
xchg
ficomp
sahf
enter
pop
add
jge
test
mov
scas
xor
xchg
call
xchg
mov
mov
outs
fbstp
hlt
out
scas
es
cmp
aad
aaa
and
cld
fucompp
or
lods
lock
xchg
mov
jl
and
fwait
sbb
dec
xchg
(bad)
test
xchg
xlat
xchg
repnz
or
or
mov
mov
cmp
dec
je
mov
loopne
pop
(bad)
push
pop
xor
pop
inc
sar
outs
sbb
add
test
ds
inc
stos
or
or
mov
mov
and
in
cld
in
xor
mov
ins
shr
sbb
xchg
int
push
iret
mov
bound
pop
cmp
jbe
xchg
shl
pop
loop
shl
or
dec
clc
dec
add
ja
retf
mov
movs
xchg
dec
xchg
test
mov
inc
jp
mov
jp
dec
lods
pop
sub
cwde
test
mov
push
adc
mov
adc
jmp
xchg
mov
xchg
lods
mov
push
push
fwait
or
or
sbb
sbb
(bad)
out
outs
int
inc
mov
push
sbb
sar
xor
daa
pushf
jp
cmp
(bad)
sbb
arpl
scas
ret
retf
imul
movs
push
xchg
or
(bad)
(bad)
aam
jge
test
pusha
nop
inc
xor
mov
dec
adc
dec
xchg
pusha
pusha
inc
mov
push
cld
js
xor
outs
rol
cmp
adc
(bad)
xchg
out
inc
iret
fs
test
test
lods
retf
inc
outs
repnz
in
mov
mov
and
and
sub
add
push
sbb
inc
iret
xchg
or
and
in
dec
call
add
push
or
xor
xchg
stos
xor
fstp
stos
add
icebp
pop
jae
jb
push
xchg
push
sbb
les
adc
xchg
jae
push
cmp
jns
(bad)
jp
cmc
and
mov
in
movs
or
ret
mov
xchg
out
div
pusha
mov
push
shl
arpl
das
loopne
mov
push
mov
push
adc
jo
pop
mov
sbb
pop
iret
pop
jge
jne
daa
adc
cwde
das
sbb
popa
push
add
jb
sbb
inc
shr
mov
pop
mov
sbb
cmp
adc
push
and
push
add
mov
data16
dec
xchg
or
jmp
movs
pop
jno
(bad)
repnz
mov
shl
mov
inc
(bad)
(bad)
lock
movs
pushf
mov
mov
das
dec
jecxz
add
xchg
push
sub
jae
push
push
push
fwait
dec
jo
jns
popf
add
push
inc
(bad)
push
xchg
stos
mov
cmc
clc
xor
jge
or
ja
pop
fadd
pop
and
mov
cmps
test
mov
iret
xor
or
mov
push
fmul
pusha
jno
adc
mov
retf
ret
sub
cmp
into
dec
and
shl
fs
mov
dec
or
fwait
inc
js
push
shr
push
lea
mov
add
das
inc
loop
into
stos
int3
sahf
iret
xor
xor
sbb
dec
dec
or
sbb
cmp
push
jns
xor
jbe
xchg
js
lock
dec
pop
idiv
rcr
xchg
and
iret
jno
mov
sbb
leave
adc
ror
in
jmp
(bad)
rol
stos
sbb
shr
outs
icebp
add
mov
scas
mov
mov
xor
push
jne
mov
adc
call
sbb
mov
or
cwde
out
stos
pop
inc
cld
pop
pop
and
in
push
mov
inc
pusha
dec
mov
stos
and
jl
ja
ins
xchg
cs
jl
movs
push
movs
(bad)
in
or
add
push
dec
sub
jnp
hlt
xchg
cmc
outs
push
gs
mov
int
mov
std
test
cmp
scas
out
imul
mov
retf
retf
adc
push
shl
mov
or
pop
inc
push
add
push
shl
mov
or
call
das
(bad)
dec
push
popf
mov
mov
xchg
stc
jg
shr
jmp
pop
cs
int
idiv
or
mov
adc
fsubr
rcl
stos
call
mov
or
inc
cmps
mov
fcomp
sub
ficomp
xchg
aam
cmps
push
xor
mov
cs
mov
sbb
repnz
add
out
ret
mov
cmps
and
mov
pop
(bad)
mov
jmp
sub
jle
push
test
movs
dec
daa
jbe
push
dec
sub
push
inc
fs
xor
les
(bad)
dec
xor
pop
out
out
cmp
and
lea
jmp
push
pop
sti
fcom
ror
jmp
enter
outs
test
fst
in
add
pushf
push
add
jbe
jnp
jne
test
pop
xchg
adc
rol
jns
xchg
inc
adc
sub
pop
push
pop
and
push
and
pop
xchg
mov
push
andnps
int
push
mov
pop
sub
inc
push
rcr
lds
popf
mov
push
xchg
or
cmc
dec
xor
in
push
push
cmp
jle
mov
stc
lock
test
cmp
mov
sub
test
lzcnt
mov
fdiv
pop
jge
cmp
in
pop
scas
or
inc
cmps
stc
sbb
call
ret
jge
pop
das
dec
adc
xor
pop
(bad)
push
les
pusha
adc
push
mov
neg
fadd
fimul
pop
lds
pusha
xchg
rcl
xchg
and
sub
sub
jg
adc
sub
in
popf
or
retf
ss
add
ficomp
push
lea
dec
sar
push
lods
sub
jo
ss
not
mov
test
add
shr
mov
push
inc
lods
push
mov
push
(bad)
jae
sub
gs
lods
lds
cld
jbe
adc
push
cs
in
mov
into
mov
in
(bad)
ins
inc
pop
sbb
das
cmps
jnp
cld
(bad)
mov
adc
or
sbb
cmp
dec
adc
adc
jno
mov
lods
(bad)
into
scas
cld
enter
cld
pushf
adc
fs
jns
js
test
xor
iret
adc
mov
repnz
and
push
scas
or
jbe
fs
or
xor
sbb
fnsave
cmp
xlat
aam
xor
repz
adc
pushf
fsubr
sbb
bound
push
loopne
add
cwde
jne
loope
and
jns
push
cli
xlat
cmp
ja
mov
or
mov
cwde
sbb
and
push
into
mov
lds
push
lock
mov
std
pop
shl
stos
and
adc
popf
jae
mov
jp
sti
and
lock
xor
mov
imul
ds
ficom
outs
stos
mov
mov
pop
dec
mov
in
stos
div
neg
jno
push
cmp
cld
jp
add
sub
int3
rol
pop
push
ror
es
js
retf
sub
xor
pusha
arpl
inc
das
adc
fwait
jnp
xor
std
aas
cmp
clc
div
mov
in
(bad)
(bad)
mov
push
lea
push
int3
rcr
jns
xlat
sub
cs
sti
jmp
inc
sub
or
inc
mov
outs
ins
shl
cdq
sub
and
cmc
and
pop
inc
out
xor
aaa
xor
cmp
adc
cmp
push
push
dec
adc
clc
in
dec
inc
cmp
clc
(bad)
into
cmc
cmp
push
dec
and
int3
out
fdivr
inc
sub
sbb
xlat
cmp
xor
push
cs
sbb
or
in
(bad)
mov
add
jge
loope
adc
xchg
dec
loopne
(bad)
push
mov
loope
repnz
pop
pop
mov
mov
cli
mov
mov
pop
pop
and
push
(bad)
mov
mov
daa
add
mov
test
inc
fmul
(bad)
scas
out
pop
movs
cwde
or
adc
xor
fisttp
sbb
sbb
pushf
add
push
dec
(bad)
pop
push
inc
inc
ret
(bad)
das
fsubr
repz
ret
cwde
jne
lds
jbe
sbb
fsub
scas
test
xor
out
dec
and
xor
add
shl
pusha
xchg
sub
inc
pop
rol
js
inc
cmp
pop
fidivr
aaa
dec
or
fadd
mov
cmp
not
loope
dec
dec
rol
cmps
into
outs
iret
stos
out
jmp
jne
push
cs
popa
fimul
sub
dec
aas
sbb
leave
mov
iret
addr16
mov
hlt
pop
jae
les
pop
fstp
xchg
xchg
push
inc
aaa
call
sbb
push
xchg
dec
nop
add
nop
xchg
dec
xchg
(bad)
retf
inc
cmp
or
sub
add
pushf
pop
lods
cmp
xchg
sbb
scas
rol
and
popa
fwait
sbb
(bad)
fwait
(bad)
fild
xchg
xor
clc
pop
repnz
call
add
in
pop
iret
fist
adc
mov
xchg
test
dec
repnz
add
mov
repz
sbb
mov
out
mov
out
mov
dec
les
xchg
in
sbb
cmp
xchg
repz
and
stc
cmp
xchg
bound
cmp
int3
push
(bad)
call
fadd
pushf
ins
mov
inc
sub
or
xchg
std
pop
xchg
leave
(bad)
mov
xlat
push
mov
or
into
sbb
mov
and
ja
pop
xchg
jbe
ret
in
sbb
cmp
jg
push
and
std
cdq
sbb
ins
xor
or
pop
mov
test
jae
or
push
clc
mov
lds
test
cmp
mov
sub
movs
xchg
or
(bad)
(bad)
push
add
mov
jb
adc
scas
jo
cdq
xchg
cli
dec
outs
stc
popa
mov
cmps
mov
ss
push
scas
(bad)
ins
push
or
and
cmp
or
cmps
dec
cmps
pop
sahf
and
mov
sub
cmp
out
(bad)
data16
lock
cwde
iret
pop
xor
mov
les
std
pop
pop
cwde
mov
dec
jns
out
mov
or
mov
sahf
into
shr
pop
pop
popf
pop
and
xchg
sub
cmp
fisubr
inc
out
xchg
popa
(bad)
jnp
outs
mov
jle
out
pop
lds
ficomp
inc
imul
test
in
inc
in
cmp
adc
retf
inc
test
sbb
cmp
sub
jg
mov
push
mov
cmps
inc
cmp
out
cld
or
int3
ror
out
add
dec
je
dec
imul
loop
xor
cmc
adc
adc
adc
lods
pop
inc
sub
sbb
emms
sbb
in
loope
div
lea
call
fisub
aas
ficomp
movs
inc
xor
nop
push
stc
pop
inc
(bad)
out
movs
daa
loope
retf
cld
hlt
test
movs
mov
mov
mov
adc
xor
mov
mov
lahf
mov
add
or
movs
mov
call
and
sbb
add
xchg
dec
in
inc
sahf
adc
mov
and
jmp
mov
rcl
mov
push
mov
lahf
and
cwde
iret
mov
dec
and
jp
call
test
dec
mov
pop
push
pop
or
cdq
push
xchg
pop
ins
stc
popa
and
xchg
push
jo
hlt
push
mov
repz
daa
mov
mov
xchg
lock
push
jp
sbb
loop
int3
in
xor
inc
pop
stos
loope
jmp
dec
jnp
add
cmp
push
inc
or
aad
jb
ret
loope
push
inc
jb
push
aam
cld
aad
mov
cli
adc
imul
js
cld
bound
int3
pusha
jmp
call
inc
out
std
cmp
call
inc
push
ret
imul
inc
sub
dec
nop
dec
add
ins
sub
sbb
xor
or
and
fidivr
les
mov
shr
movs
pushf
ror
ja
retf
mov
push
inc
xor
jge
lock
inc
or
mov
outs
and
ds
loop
imul
and
dec
and
mov
push
lods
ror
es
push
push
add
inc
pop
xchg
mov
mov
ins
mov
fidivr
dec
jmp
imul
mov
sbb
test
pop
and
cmc
pusha
imul
mov
inc
das
sbb
pop
lds
pop
and
mov
retf
aas
es
dec
fimul
inc
in
pop
in
pop
lock
inc
call
mov
inc
call
inc
cld
mov
cli
inc
std
dec
ins
add
mov
shr
je
cmp
aam
inc
push
cmp
inc
test
add
ja
jne
pop
dec
cmps
sbb
fnstcw
pop
(bad)
jo
cmp
in
aas
fs
cwde
popf
dec
and
imul
stos
mov
lods
jns
or
lds
mov
mov
fidivr
or
pop
fmul
test
and
and
and
and
loopne
lahf
jo
test
call
movs
mov
dec
push
je
(bad)
jge
and
or
add
scas
std
xchg
sbb
aad
nop
mov
pusha
mov
shl
out
mov
push
jno
aas
or
leave
xor
scas
adc
es
sbb
or
ss
js
inc
ficom
dec
test
xchg
sbb
and
nop
xchg
mov
fisttp
test
sub
in
pop
lock
outs
in
bound
mov
adc
shl
mov
cli
popf
je
jge
inc
cmps
cmps
mov
inc
aaa
fsubr
sub
fisubr
call
or
mov
xor
das
jp
gs
cmp
adc
push
adc
cmp
add
stos
sub
adc
mov
nop
jp
dec
mov
outs
cmc
inc
push
jmp
push
add
fst
adc
mov
or
cmp
add
xor
sbb
jmp
cmp
adc
mov
xchg
data16
ror
jmp
inc
loop
xlat
xchg
or
test
cmps
pop
movs
fdiv
cld
xchg
fdiv
shr
ja
cmp
inc
or
mov
cmp
pop
add
xchg
sahf
adc
in
mov
pushf
imul
movs
ret
stc
xchg
into
das
mov
ins
sbb
jecxz
shl
loope
sbb
pop
mov
into
adc
loope
sub
aad
mov
imul
mov
sub
nop
pop
jbe
or
shr
fcmovnbe
in
inc
sbb
pop
or
dec
mov
aas
fsub
sub
dec
inc
aas
loop
nop
in
inc
ds
jmp
xchg
das
pop
xor
dec
mov
jbe
adc
sbb
fstp
ds
shl
fcomp
inc
add
scas
rcl
out
aas
and
call
jge
repz
es
and
and
fsubr
fs
sahf
outs
add
mov
pop
and
int3
ja
inc
data16
aas
and
das
lahf
je
mov
pop
in
sbb
mov
cmp
sub
cmps
fwait
push
data16
or
push
in
out
ins
in
adc
add
arpl
out
outs
fimul
sub
or
add
adc
ja
nop
adc
sbb
xor
int3
ficomp
imul
and
fxch
sbb
xchg
rcr
arpl
pusha
cmc
add
adc
cmp
sti
adc
in
pop
xor
into
aam
scas
clc
loop
movs
and
pop
cmps
inc
pop
sub
inc
scas
mov
shl
push
sbb
pop
dec
dec
ins
pop
das
sub
iret
and
or
test
adc
push
push
pop
jo
xor
sbb
cdq
or
mov
jo
loopne
ror
movs
retf
cli
pop
mov
jb
mov
dec
jo
or
and
adc
cmp
mov
aam
hlt
mov
xchg
push
pop
popa
or
ret
out
in
int3
shr
and
std
in
jb
push
stos
fs
sbb
out
adc
loope
icebp
stos
enter
adc
cmp
and
rcr
mov
imul
rcr
sbb
movs
push
mov
clc
movs
xchg
add
sbb
dec
ror
sub
add
mov
pop
out
das
mov
sbb
jmp
xor
out
push
lods
cli
int3
pop
cmps
push
jns
cmp
psrld
clc
mov
and
loop
sub
and
ins
clc
scas
mov
adc
cmc
mov
mov
mov
push
pusha
pop
and
neg
cmp
ror
or
sub
out
mov
idiv
xchg
popf
int
add
cmps
push
jno
dec
and
or
sub
cli
pop
fidiv
or
ret
or
test
dec
or
sahf
pushf
pop
outs
pusha
jmp
iret
xor
mov
retf
out
fnsave
add
(bad)
loopne
mov
mov
or
xor
mov
inc
nop
or
dec
(bad)
sub
dec
xchg
xor
sbb
inc
ret
pop
jne
ss
mov
sbb
or
(bad)
aam
rol
jg
ins
ja
pop
les
adc
movs
imul
popa
mov
dec
retf
and
ins
jns
(bad)
push
mov
cld
push
jne
aam
dec
test
xor
inc
xor
dec
add
dec
cdq
stc
xchg
cmp
fisttp
and
adc
dec
in
push
aad
pusha
push
pop
mov
xchg
inc
jg
pop
mov
jne
mov
mov
pop
cmp
arpl
popf
adc
sti
addr16
xchg
dec
shr
loopne
or
jno
dec
pop
xchg
out
add
sbb
jp
pop
sub
xchg
jb
sahf
sar
shl
xor
jne
add
mov
std
movs
mov
mov
dec
ds
cmp
push
sahf
inc
ins
and
dec
dec
jg
mov
inc
add
inc
mov
xchg
dec
cli
(bad)
jns
lea
adc
add
xchg
outs
fnstsw
xlat
push
or
sar
inc
sbb
xchg
mov
jo
sysexit
jl
test
xor
test
pop
popa
loop
inc
mov
stos
leave
lock
xchg
or
mov
std
icebp
cmp
cs
mov
cld
sub
daa
push
sub
mov
imul
push
push
bound
adc
jmp
or
clc
addr16
idiv
cmps
cmp
cmp
inc
mov
or
fisttp
cmp
int3
cmp
scas
sbb
neg
call
dec
add
push
es
movs
mov
jae
pop
xchg
popa
pop
jp
push
shr
out
cmp
pop
fmul
mov
adc
sbb
sti
mov
and
xchg
add
in
cmp
retf
pop
mov
add
adc
mov
xchg
cwde
call
xchg
shr
leave
and
dec
dec
(bad)
mov
sti
adc
dec
mov
clc
cmps
es
mov
iret
es
rcr
xor
cmc
xchg
shl
out
fpatan
adc
mov
rcl
iret
pushf
lods
sar
and
bound
add
sub
imul
in
cmps
lds
pop
mov
mov
sbb
xor
jge
mov
pop
fiadd
cs
loopne
cmp
stos
xor
rcl
adc
add
inc
fmul
pop
mov
js
sahf
je
repnz
jge
adc
mov
out
push
sub
mov
outs
sub
add
sub
adc
or
xchg
iret
test
xchg
adc
and
sbb
xlat
(bad)
fistp
mov
pop
mov
fcmovnbe
test
add
push
pushf
rcr
xor
fnstsw
pusha
sbb
push
push
addr16
pop
repz
adc
arpl
jmp
inc
fiadd
scas
dec
(bad)
cmp
push
dec
fdiv
fistp
lods
xor
dec
call
(bad)
fiadd
test
es
cli
adc
cmp
gs
inc
daa
ficomp
jae
(bad)
in
dec
sbb
call
and
shr
adc
movs
push
xchg
cwde
xorps
jmp
scas
xchg
cdq
cmp
fld
dec
and
xchg
mov
ficom
daa
push
mov
mov
cli
cmps
aad
and
mov
bound
sub
rcr
shl
mov
fidivr
cmp
ret
lods
fdivp
imul
cmp
mov
mov
out
adc
jmp
retf
xor
sbb
dec
mov
pop
js
fcomp
push
xchg
cmps
jae
outs
(bad)
and
mov
sub
pop
movs
sbb
rcl
fidiv
xchg
sub
imul
and
hlt
xor
or
sub
ret
jge
xlat
retf
aaa
xor
loope
fist
daa
jns
std
sahf
dec
sub
adc
jmp
iret
inc
mov
dec
mov
retf
es
jecxz
lds
dec
fisubr
sub
xlat
xor
pop
fstp
scas
jmp
out
pop
dec
test
int3
mov
das
rol
xchg
call
or
lock
and
pop
(bad)
and
adc
shl
(bad)
pop
popa
cs
dec
call
test
xchg
sbb
pop
cli
or
jne
cmps
and
movs
dec
stos
inc
add
jmp
pop
and
call
sub
out
cmp
adc
in
mov
ficom
sbb
or
sub
xchg
push
and
test
jge
inc
and
sbb
inc
mov
cwde
jno
iret
sub
lods
aas
dec
push
ret
mov
jmp
loopne
das
cmps
fisttp
(bad)
push
shl
sbb
mov
cmp
mov
mov
adc
mov
or
mov
inc
xchg
sbb
jp
or
pop
mov
cmovnp
arpl
xchg
movs
jb
test
lock
dec
ja
adc
adc
aas
das
scas
shr
in
jmp
xchg
(bad)
jbe
adc
shl
lods
popf
aas
popf
cwde
shr
sbb
mov
or
pmullw
or
sub
jne
inc
es
in
jb
cmp
sub
test
jne
repnz
xor
xchg
test
sub
or
pop
addr16
push
test
xor
jnp
mov
adc
push
mov
push
fild
mov
arpl
or
imul
(bad)
loopne
sahf
push
out
pop
mov
adc
and
xchg
pop
(bad)
aas
dec
js
dec
fs
stos
dec
retf
mov
push
jns
adc
xchg
adc
ficomp
pop
inc
call
stos
mov
movs
pusha
xchg
ins
xor
mov
inc
add
stc
inc
mov
neg
mov
mov
dec
push
pop
out
sbb
loop
push
inc
data16
repnz
in
or
rcl
dec
pop
fcom
mov
or
lea
mov
pop
bt
test
pusha
stc
test
sub
shl
mov
icebp
dec
leave
int3
lds
push
xchg
pop
retf
xchg
push
xor
adc
neg
mov
inc
cld
mov
cmp
cmp
pop
es
xor
mov
nop
or
js
xor
ins
les
pop
add
ror
dec
neg
pop
scas
xchg
(bad)
pop
les
out
call
(bad)
cmps
cmps
mov
aas
cld
cmp
cmp
or
test
or
or
or
out
(bad)
stc
add
mov
das
mov
mov
adc
imul
and
adc
stc
int
movs
ds
in
jl
push
mov
lods
sar
adc
outs
pop
or
int
nop
mov
popf
into
loop
test
call
mov
fstp
xlat
rol
mov
jl
ss
jecxz
cmp
push
popf
mov
mov
and
cmp
adc
xor
mov
js
add
gs
push
rol
dec
xor
sbb
pop
and
cmps
mov
xchg
je
mov
and
daa
ja
inc
fist
inc
jmp
jnp
inc
out
test
call
shl
xlat
jo
sbb
nop
gs
xchg
push
or
stc
jne
movs
pop
mov
pop
iret
addr16
fnstsw
ins
(bad)
rcr
mov
xchg
push
sub
push
inc
pop
mov
sbb
fild
out
sub
mov
xchg
sbb
popf
popf
sub
mov
mov
test
shl
push
push
dec
mov
mov
test
xor
fidiv
(bad)
inc
fwait
push
inc
inc
popa
adc
add
in
jecxz
js
loop
aas
mov
and
jo
ret
dec
(bad)
add
call
push
loop
(bad)
je
jge
mov
fsubr
mov
aam
pusha
mov
inc
dec
(bad)
or
in
and
adc
test
fs
test
dec
push
push
push
fnstcw
movs
mov
call
test
cmc
jle
ret
sub
jbe
test
in
int
mov
sub
pop
push
test
loope
mov
inc
lds
leave
in
(bad)
pop
enter
aaa
retf
je
movs
dec
mov
fwait
xlat
cmp
cli
and
icebp
xor
jb
dec
sbb
shr
lea
or
add
inc
js
xchg
imul
dec
add
jecxz
sub
push
sub
sub
test
(bad)
out
mul
mov
adc
sbb
cmc
mov
rol
mov
mov
push
cmps
sub
push
xlat
inc
xchg
jle
lock
pop
push
xor
xor
std
enter
xor
jp
jp
stos
inc
enter
jle
fwait
movs
mov
lea
test
adc
cmp
lds
les
fcom
out
lds
ins
pop
dec
pusha
loop
sahf
ret
xchg
inc
imul
repnz
jno
lahf
jne
and
jle
inc
and
pop
jno
inc
test
fistp
stc
mov
cld
inc
fwait
lods
jb
inc
jmp
or
not
pop
or
push
cmovp
ins
stos
cmp
add
or
or
add
sub
jmp
sbb
sub
repz
add
sbb
sbb
pusha
fld
push
mov
xor
mov
dec
xchg
mov
sub
ror
test
pop
gs
mov
jo
mov
out
aad
add
sbb
xor
cdq
jne
cmp
jl
add
lods
pop
adc
fbstp
je
cvtpi2ps
sub
pop
dec
push
ds
mov
test
push
adc
lahf
or
out
ins
jnp
repnz
int
mov
jo
loope
test
inc
cmc
cwde
pusha
jb
mov
shl
push
pop
and
int3
sbb
clc
xor
dec
inc
out
sbb
rcr
ins
or
adc
fild
adc
add
outs
arpl
add
ins
add
retf
jg
push
pop
popf
es
mov
mov
popf
sahf
adc
ds
arpl
jecxz
std
dec
adc
inc
icebp
mov
add
shl
mov
mov
psubw
mov
push
out
pop
lds
inc
xchg
mov
call
adc
or
inc
mov
daa
mov
(bad)
mov
cs
outs
in
movs
out
jo
out
lock
inc
jb
in
fist
rol
lahf
mov
mov
push
cwde
ins
add
jnp
inc
dec
outs
sbb
push
loopne
out
xlat
jae
sub
call
cmp
jne
aam
pusha
and
xchg
pop
add
retf
cmp
repz
mov
sub
cdq
mov
sub
cmps
lods
mov
push
(bad)
push
out
xor
xchg
test
push
(bad)
out
bound
pxor
mov
in
dec
scas
sub
in
xchg
fadd
fabs
aaa
push
mov
inc
sub
mov
outs
and
add
scas
push
push
add
call
call
ins
ss
sub
in
hlt
mov
lock
cli
in
das
sub
(bad)
(bad)
adc
cmp
jmp
ret
sub
inc
jl
and
shr
ret
(bad)
stc
adc
scas
imul
sub
jmp
int3
iret
dec
pushf
or
push
xor
loopne
pop
and
jecxz
mov
clc
and
arpl
jnp
ja
push
int3
lock
std
and
dec
sbb
push
sub
ins
pushf
xor
or
sahf
push
div
pop
cdq
pop
repz
dec
xor
adc
and
cmp
jle
lods
aas
retf
ins
push
mov
into
pop
sub
jne
mov
cwde
sbb
sbb
xchg
cli
sub
jo
and
faddp
stos
and
ins
xchg
data16
xchg
pop
mov
repnz
imul
jp
push
mov
mov
inc
adc
add
xlat
in
in
cmp
and
dec
push
into
std
clc
in
cdq
pop
hlt
cs
ret
in
int3
jno
ret
pushf
into
stc
mov
popf
fst
cmp
inc
std
out
adc
or
arpl
(bad)
cmp
cmps
dec
inc
inc
bound
stos
out
xor
push
ret
jg
scas
xchg
xchg
hlt
in
adc
loop
retf
adc
sub
enter
les
ret
jnp
or
test
cmp
ss
call
leave
cmps
mov
daa
in
adc
push
push
cmps
pop
dec
repz
repz
push
mov
clc
pop
inc
jg
dec
dec
mov
mov
jb
mov
mov
cld
fisubr
mov
(bad)
xor
mov
imul
jmp
pop
jge
enter
push
jmp
in
aam
scas
hlt
mov
ds
dec
jnp
movs
pusha
xchg
add
ja
in
stos
adc
js
cdq
push
jbe
jae
xchg
push
stc
sub
dec
or
cmc
dec
movs
adc
(bad)
aaa
ds
jnp
xchg
scas
test
add
lods
add
out
and
sbb
pop
or
mov
aam
and
lds
pop
fldenv
fcomip
and
and
dec
fst
iret
loope
icebp
(bad)
hlt
(bad)
out
data16
or
xchg
or
cli
dec
loop
or
sbb
jno
cmp
fld
cs
dec
fiadd
xchg
xor
add
xchg
xchg
push
js
jne
xor
mov
adc
sub
adc
or
or
jg
sbb
sbb
sbb
shr
imul
bound
dec
push
sub
dec
lods
int
test
or
movs
add
mov
cmp
push
inc
bound
daa
ins
icebp
cdq
and
mov
push
mov
pop
sbb
in
cmc
cmp
cld
add
xor
jmp
jmp
xchg
push
call
sbb
fidivr
loop
pop
(bad)
and
lahf
jmp
in
ret
inc
dec
sub
aam
div
jp
nop
or
dec
mov
jno
and
or
and
jb
inc
cs
mov
xchg
jbe
cwde
xchg
lea
out
popf
or
cmp
mov
jmp
rcr
xlat
fs
enterw
aad
repz
arpl
add
cmp
(bad)
push
mov
jecxz
fisub
and
cmc
cmps
cmp
shr
loopne
push
popf
mov
pop
push
icebp
addr16
xchg
xor
dec
xor
and
outs
shr
mov
shl
pop
and
imul
adc
mov
scas
std
push
sbb
inc
cs
(bad)
(bad)
and
sbb
sub
popf
leave
(bad)
data16
stc
pushf
mov
fwait
cs
popf
test
jae
sub
pop
das
test
fcmove
leave
out
stos
popa
mov
add
mov
stc
adc
push
jmp
sahf
shr
jl
fst
dec
adc
sbb
sbb
fs
imul
xor
push
pop
mov
sbb
xor
adc
pushf
mov
push
(bad)
ss
cmp
jo
sbb
shl
pop
add
outs
sar
adc
inc
scas
clc
mov
cmc
jbe
mov
jle
xchg
mov
loopne
stos
inc
mov
sub
and
jle
or
cmps
icebp
movs
jmp
jl
jbe
es
jmp
or
dec
push
hlt
sti
fnstcw
(bad)
jg
xchg
js
ret
out
loopne
icebp
push
fdivr
lods
pxor
ds
mov
fisttp
push
ror
(bad)
cmc
sbb
gs
sbb
mov
cmp
jns
mov
out
push
imul
fst
sub
push
loop
or
and
rol
and
push
push
xlat
jmp
xchg
cdq
xchg
ror
mov
or
dec
mov
pop
xor
push
sub
jp
ret
jb
mov
cmps
and
lods
cmp
cmp
test
fmul
xor
(bad)
test
xor
sbb
sbb
mov
ret
and
mov
mov
cmp
into
inc
jl
sub
lods
cli
scas
sub
not
call
sub
dec
es
push
mov
sbb
(bad)
cmp
adc
inc
cmps
mov
outs
arpl
xor
(bad)
sbb
leave
or
and
loop
(bad)
retf
pop
dec
xchg
sub
fstp
sbb
sub
push
push
and
and
jecxz
xchg
mov
inc
pop
mov
retf
adc
lods
scas
sbb
fiadd
cmp
scas
fwait
sahf
add
pushf
and
sub
push
test
leave
daa
sub
in
outs
jecxz
push
icebp
jno
or
xchg
pop
jae
add
mov
xchg
push
das
das
inc
xchg
stos
aam
out
popf
and
push
mov
aas
in
(bad)
das
and
fsubr
popf
imul
imul
or
movs
inc
test
push
repnz
(bad)
fcmovu
adc
dec
in
push
inc
sub
inc
bound
in
mov
sbb
div
iret
fsubrp
rcl
sub
in
jne
addr16
mov
mov
(bad)
cmc
(bad)
cmp
or
lods
in
jno
out
pop
mov
sub
or
pop
push
add
test
aad
inc
mov
xchg
mov
fwait
push
mov
es
cmp
fidiv
cmp
jno
mov
(bad)
mov
push
push
jp
in
dec
(bad)
fwait
xor
loop
dec
data16
sar
or
bswap
(bad)
or
in
jb
jp
out
add
cli
xor
pop
dec
aas
pop
pop
retf
pushf
mov
jb
pusha
scas
bnd
iret
xlat
loope
mov
adc
je
addr16
clc
or
dec
mov
add
lsl
inc
and
pop
stos
(bad)
stc
js
(bad)
enter
inc
pop
mov
adc
imul
adc
push
out
jns
xchg
repz
xchg
aaa
sub
push
pop
push
bound
fist
jmp
fidivr
jns
lea
jl
inc
and
pop
pop
or
out
sub
rcl
test
mov
xor
mov
test
push
out
retw
jmp
les
push
pop
lock
xor
aas
ins
scas
mov
or
adc
test
cmp
adc
loope
in
sbb
data16
inc
and
jbe
adc
add
gs
sub
je
mov
(bad)
and
mov
movs
add
pusha
xchg
arpl
dec
ins
shl
sub
fxch
xchg
pop
dec
stc
arpl
sbb
fst
inc
push
sub
aas
jge
push
iret
dec
mov
aad
shl
movs
nop
mov
mov
fsub
sbb
pop
sub
pop
inc
mov
rcl
and
test
mov
ds
xchg
sbb
or
cmps
jne
ret
mov
retf
sub
sub
dec
jnp
xor
inc
fmul
enter
popa
xchg
mov
mov
and
jmp
mov
sti
into
rcl
call
sub
pop
ret
cli
out
push
fild
ror
call
(bad)
into
xchg
xchg
sub
push
(bad)
nop
aad
pop
(bad)
cli
mov
cmp
jecxz
fnstenv
adc
cli
(bad)
add
pushf
shr
inc
rcr
in
scas
test
rcr
outs
cwde
inc
mov
dec
sub
or
adc
ror
add
jbe
inc
addr16
pop
mov
xchg
retf
mov
bound
pop
push
push
jge
sub
jns
into
out
pushf
jl
sub
mov
and
sub
not
neg
jp
retf
shr
leave
add
int3
push
adc
push
mov
mov
out
dec
cdq
xchg
pop
test
jns
sbb
and
adc
mov
cmp
jg
in
xor
mov
fld
mov
ins
and
inc
push
or
inc
clc
add
mov
fidiv
out
pop
pop
xchg
xchg
jle
jmp
lods
fistp
popa
daa
adc
adc
test
int3
fidivr
dec
shl
sbb
lock
ds
ja
xor
hlt
cmp
xor
nop
xchg
pop
jno
mov
popf
push
test
jmp
or
outs
dec
loopne
mov
loopne
adc
xchg
lds
mov
add
adc
pop
mov
out
in
ja
xor
xchg
sub
xor
jbe
mov
clc
(bad)
mov
mov
cmp
mov
call
push
out
adc
dec
retf
push
loopne
(bad)
stos
mov
adc
add
loopne
or
mov
out
jbe
xchg
mov
std
add
daa
std
sbb
pop
cmp
aas
movs
fdivp
sub
loope
mov
inc
ret
outs
fldenv
shr
pop
xor
inc
icebp
mov
enter
push
xor
pop
xor
mov
loope
mov
jnp
retf
cwde
aaa
push
inc
jecxz
out
mov
repnz
mov
adc
std
dec
mov
xchg
jae
lock
pusha
jg
add
aas
call
adc
stos
fwait
aad
mov
mov
mov
xchg
xchg
mov
cmp
jp
mov
es
ins
scas
mov
cmc
test
and
fstp
jle
call
call
loope
inc
lods
jg
(bad)
and
call
movs
pop
outs
mov
out
and
push
aas
mov
adc
xchg
retf
lock
and
xchg
mov
lock
pusha
sbb
mov
dec
mov
inc
sub
pop
push
adc
(bad)
lahf
fidivr
jnp
test
xor
loop
or
fdivr
ret
mov
xor
cli
pop
cdq
out
sbb
sbb
mov
push
scas
add
cmps
mov
xchg
xchg
xchg
bound
cmp
popf
repz
cwde
jg
cli
outs
dec
xor
mov
mov
ret
clc
es
and
ror
push
out
fstp
sub
lahf
dec
repnz
sti
scas
or
dec
jl
and
ret
adc
retf
cmp
xor
arpl
jmp
add
fxch
jmp
sbb
ss
or
push
sub
add
xor
add
add
cmp
int3
mov
movs
out
sbb
out
pop
addr16
repnz
data16
mov
and
sub
or
mov
cmp
pop
sbb
mov
sbb
cmc
sub
retf
mov
xchg
jl
jge
push
loop
inc
sbb
jo
mov
mov
adc
jmp
sbb
pop
pop
mov
adc
das
movs
data16
(bad)
mov
jns
push
pop
outs
push
add
dec
pop
aaa
mov
sub
xor
mov
xor
pop
test
push
dec
dec
push
(bad)
test
int
fistp
push
pop
dec
stc
repz
xchg
les
sbb
pop
push
fidiv
lods
enter
loopne
jmp
push
gs
les
hlt
daa
enter
clc
add
add
fld
(bad)
cld
cmp
dec
mov
movs
es
aad
jmp
lods
xchg
cdq
sbb
or
es
jle
xchg
dec
fsub
les
into
adc
or
jle
nop
jb
cli
mov
ret
cmps
push
pop
(bad)
jb
call
cmc
xchg
pop
xor
retf
mov
cmp
jnp
dec
dec
test
sub
sahf
jnp
push
in
pop
inc
lods
jmp
(bad)
mov
test
inc
xchg
int
push
mov
test
nop
sub
mov
imul
fsubr
repz
rcl
jnp
and
out
jo
and
jne
popa
or
movs
mov
sub
jmp
lds
add
shl
sar
pusha
add
les
sbb
or
inc
sub
sub
xchg
cdq
in
test
lds
arpl
pop
jmp
imul
popf
inc
bound
adc
push
mov
sub
sahf
pop
movs
jae
and
dec
aad
rol
mov
hlt
fwait
rcl
xchg
sub
(bad)
cmps
mov
adc
xchg
or
shr
shl
sbb
xor
fld
pop
mov
pop
pop
xchg
push
aaa
and
cmpxchg
or
push
fld
push
cmp
fnsave
out
mov
push
sub
mov
mov
sbb
test
lods
push
add
scas
repnz
mov
sbb
popf
jbe
ret
dec
(bad)
xchg
addr16
jmp
gs
out
(bad)
pop
adc
dec
mul
xchg
dec
mov
nop
shl
push
aaa
cmp
int
scas
in
scas
xchg
mov
mov
dec
out
mov
in
lods
fisttp
fs
ds
fidivr
pushf
xchg
outs
push
rcr
sub
scas
adc
std
xchg
vmovhps
arpl
in
and
pop
fidiv
adc
xchg
(bad)
push
fist
cmp
call
push
jbe
jns
retf
mov
pop
retf
mov
mov
or
mov
imul
imul
mov
mov
add
(bad)
mov
dec
xchg
mov
adc
jecxz
xchg
fistp
(bad)
pop
shl
or
into
repnz
mov
out
inc
ret
inc
inc
imul
arpl
fcmove
xor
outs
push
push
scas
iret
ds
mov
jmp
ss
mov
repz
sub
js
repnz
jo
xor
or
pop
mov
je
jp
or
aam
xor
lods
repz
test
jecxz
std
push
push
jl
addr16
sbb
enter
das
les
out
iret
jns
or
pop
or
mov
cmp
mov
mov
dec
inc
pop
inc
push
movs
mov
xlat
jmp
scas
cmp
into
add
ins
mov
inc
xlat
not
inc
jbe
xor
in
test
xchg
mov
cmp
mov
std
adc
jo
fcompp
enter
sbb
call
imul
inc
data16
mov
pusha
pop
jge
mov
jo
and
out
arpl
enter
add
in
in
mov
fiadd
mov
xor
push
lods
mov
movs
popa
xlat
push
out
cmc
lahf
pop
jp
sbb
or
out
outs
ss
jecxz
dec
lahf
mov
shr
shl
outs
or
adc
test
inc
sub
popf
jne
dec
pop
daa
push
fist
sub
dec
push
push
idiv
into
fld
inc
mov
(bad)
bound
int
push
ficom
or
in
cmp
push
and
jle
and
mov
push
clc
mov
ins
cmp
dec
(bad)
repnz
daa
mov
cmps
popf
in
adc
mov
cmc
shr
das
imul
aas
xchg
je
pop
test
shl
inc
add
inc
mov
xchg
or
loop
(bad)
loop
call
pop
lods
aaa
mov
hlt
mov
push
and
cmp
adc
xchg
xor
jnp
jnp
dec
jns
aam
dec
aaa
pop
movs
repz
lods
ficomp
or
icebp
dec
push
dec
dec
cmps
js
or
push
and
das
jp
sub
les
inc
inc
cmps
sbb
cmp
imul
mov
xor
xchg
push
adc
dec
mov
aam
outs
test
mov
mov
je
xor
data16
fdivrp
jge
sub
add
sbb
mov
jl
les
stc
push
popf
dec
push
repz
adc
test
pop
scas
sbb
adc
sbb
movs
inc
push
inc
dec
test
fst
jne
rcr
not
sbb
cmp
fcmovnb
mov
mov
mov
xchg
pop
rol
(bad)
outs
mov
push
movs
outs
sub
aam
push
mov
stos
dec
jecxz
sub
adc
jle
fdiv
pop
dec
inc
sbb
psrlq
in
xor
dec
dec
mov
in
stos
adc
lds
cwde
dec
retf
jmp
adc
(bad)
imul
cli
test
xor
adc
addr16
stos
mov
int3
push
pop
or
push
add
movs
jb
stos
pushf
adc
xchg
mov
stos
loop
nop
shl
or
ret
scas
mov
dec
aaa
cdq
scas
dec
iret
scas
add
or
rcr
loopne
add
shl
add
xchg
mov
retf
add
in
xor
(bad)
sub
pop
mov
sti
xor
cmp
dec
pushf
not
adc
pop
movs
ret
or
cmp
cli
int
rcl
repnz
movs
xor
xor
xor
pop
lods
ss
jge
das
xchg
in
aam
xchg
repz
fdiv
mov
lds
fimul
ret
dec
mov
ja
jo
push
jmp
aad
cmc
and
sbb
lds
or
retf
push
push
cwde
lods
mov
mov
ja
das
mov
shr
cmc
cmp
add
int3
fld
pmuludq
scas
(bad)
mov
push
xchg
xor
scas
xchg
push
ds
push
call
call
xchg
jmp
jns
stos
int
pop
stos
dec
xor
jbe
test
fwait
sahf
inc
lea
jo
push
gs
push
ffreep
repz
dec
mov
dec
dec
adc
cmp
xlat
leave
mov
test
jge
add
test
xchg
cmp
jns
mov
or
adc
push
ins
push
cld
xor
ja
ret
(bad)
or
ja
mov
(bad)
push
adc
jno
fdiv
js
xor
lea
cli
or
mov
gs
cmp
(bad)
dec
jp
stc
popf
imul
add
adc
mov
push
cdq
inc
fld
in
add
push
mov
sbb
hlt
ret
test
icebp
mov
ja
in
add
pop
mov
(bad)
dec
lods
fist
inc
sub
xor
(bad)
pop
mov
cld
xchg
ja
test
(bad)
(bad)
cmp
push
push
addr16
adc
out
addr16
mov
jns
lahf
aam
lds
sbb
xchg
lock
in
inc
jge
jp
mov
push
cmps
sbb
(bad)
in
fbstp
xor
sbb
div
fadd
nop
push
ror
leave
push
jbe
(bad)
aaa
dec
mov
mov
xchg
fmul
add
mov
mov
adc
leave
loopne
outs
mov
cld
(bad)
pop
ja
sub
xor
add
or
daa
sub
pop
pushf
dec
mov
das
or
int3
xlat
mov
shl
xor
add
fs
pop
push
call
push
daa
pushf
add
and
cld
js
push
scas
out
daa
shl
add
aad
and
mov
rcl
push
add
adc
pop
push
inc
popf
and
mov
shr
mov
arpl
fnstcw
mov
mov
inc
mov
int
xchg
mov
int
add
daa
jo
xchg
js
ss
jecxz
mov
jp
icebp
cdq
push
ja
xchg
push
pop
imul
sti
outs
mov
xchg
xchg
imul
cdq
in
mov
pop
hlt
mov
imul
popf
sub
cmp
inc
cmp
pop
stos
test
fld
ins
cmp
and
adc
int
out
and
adc
jp
out
mov
inc
sub
loopne
dec
pcmpeqb
sub
sti
scas
push
lea
push
inc
push
stos
adc
movs
out
or
shr
jne
sbb
div
fsubr
sbb
int3
xchg
outs
lds
pop
ror
jmp
mov
psubw
add
xchg
(bad)
xor
ficomp
in
mov
sbb
into
stc
ret
popf
mov
stos
inc
pop
stos
sbb
(bad)
xchg
dec
push
jp
and
jge
scas
lock
or
mov
cmp
cli
out
retf
sbb
js
push
mov
mov
jmp
xchg
or
repnz
xchg
loope
sbb
enter
sbb
xor
test
jmp
data16
push
in
xor
and
ins
aam
pxor
rcr
jle
test
add
lods
sar
cmp
outs
jbe
adc
jge
iret
fld
mov
test
aam
in
xor
test
dec
stc
bound
jno
xor
add
icebp
loop
xchg
inc
pop
add
pop
add
mov
add
xchg
call
test
repnz
push
xor
xor
pop
jbe
in
fidivr
in
std
xor
mov
ret
test
pusha
rcl
mov
fisubr
retf
add
jecxz
mov
jns
mov
scas
dec
in
xlat
jp
retf
pop
sti
adc
inc
xchg
int3
push
rep
stos
dec
ja
aam
shr
cmps
mov
sahf
add
and
clc
mov
jl
mov
pop
scas
cmp
(bad)
repz
xlat
test
(bad)
sbb
pop
enter
sbb
cmps
test
sub
and
sahf
add
jmp
(bad)
cmp
dec
cs
pushf
or
cmp
shr
sbb
jl
rep
xchg
fild
pslld
loopne
jmp
push
mov
not
test
mov
jmp
xor
popa
ror
xchg
adc
setbe
dec
jge
sub
jne
sar
jp
mov
or
test
stos
es
scas
add
call
dec
ret
loopne
pop
shl
pop
pop
adc
dec
test
mov
inc
mov
popa
hlt
nop
repz
push
test
rol
mov
xor
inc
push
cli
scas
pusha
push
dec
cdq
dec
push
cmps
int
jmp
xor
in
jne
sar
pop
outs
xlat
sub
int3
les
and
cwde
cwde
inc
out
outs
jmp
push
iret
pop
xchg
dec
repz
cmp
cld
mov
sub
jmp
jg
fcom
mov
xchg
lods
pop
sahf
int3
or
stos
rcl
arpl
repz
test
imul
cmp
ror
les
lea
mov
in
(bad)
jmp
sbb
shl
cli
mov
add
ss
scas
dec
inc
shl
ja
or
mov
shl
out
scas
ins
jp
(bad)
mov
cmps
daa
and
inc
pop
stos
js
cmp
bound
jge
pop
push
call
pop
mov
and
xor
loope
js
cmc
mov
ret
shl
add
cmps
scas
sbb
dec
xor
lods
push
enter
jl
or
loop
imul
sbb
xchg
dec
dec
push
popa
loopne
scas
test
das
(bad)
push
jl
cmp
jp
test
jge
sbb
cmp
xchg
push
cmps
popf
xchg
push
ret
repnz
out
mov
loopne
fcomp
mov
xchg
imul
cmps
pusha
dec
jmp
push
loopne
je
mov
jge
int
mov
jecxz
jbe
inc
jge
pop
dec
and
cmp
and
js
aaa
cmp
jno
movs
pop
inc
cmps
movs
dec
add
mov
sbb
jl
jg
in
clc
sub
add
push
enter
xchg
cmps
inc
pop
test
add
retf
or
mov
cmps
cmp
clc
jns
retf
dec
or
call
pop
mov
sub
push
push
or
(bad)
test
fild
jns
push
mov
pop
xor
lea
mov
inc
int
jne
mov
xchg
mov
pop
and
mov
out
xchg
es
pop
rcl
fwait
sub
gs
add
pop
mov
call
adc
cmp
adc
fs
dec
mov
bnd
mov
out
push
test
aaa
rcl
in
cmp
pop
cmp
jmp
in
imul
sub
cmp
mov
imul
inc
out
rol
mov
int
ret
pushf
fcom
sbb
mov
or
cdq
push
sub
fnsave
test
and
cwde
pop
popa
in
inc
push
jne
dec
add
jbe
test
lahf
outs
lods
retf
pusha
scas
(bad)
pop
dec
mov
cmp
fwait
xchg
jb
(bad)
out
dec
adc
pop
cmp
jbe
xor
loope
out
sar
push
inc
sbb
daa
push
aad
imul
add
stc
mov
push
sub
outs
call
fwait
inc
sahf
outs
ins
ins
pop
and
sub
push
cmps
sbb
loop
and
or
fidivr
dec
push
repz
and
lods
ds
int
inc
xor
mov
hlt
aam
pop
jg
xchg
mov
in
jae
imul
dec
mov
mov
inc
dec
xchg
stos
mov
in
test
leave
test
test
dec
xor
mov
cdq
int3
pop
rcr
jns
xor
xchg
cli
rcr
pop
push
cld
nop
xchg
js
std
inc
int3
mov
mov
das
(bad)
movs
fisttp
(bad)
jge
jmp
push
retf
mov
mov
xchg
loopne
adc
inc
paddusw
out
loope
sti
test
lods
push
repz
sub
xor
clc
mov
jnp
int
out
rcl
stos
in
or
cld
lahf
xchg
fstp
outs
lahf
aaa
test
xor
mov
mov
jnp
sbb
lahf
or
pusha
pop
jo
mov
das
cwde
loopne
stos
out
cmp
or
inc
icebp
clc
add
dec
cs
and
or
movs
mov
scas
les
scas
cmp
dec
xor
push
mov
cmp
cmp
jmp
out
pop
xor
cmp
rcl
mov
ins
in
ins
aas
jg
pop
add
push
dec
out
pop
adc
dec
les
and
xchg
add
stos
jp
(bad)
sti
jmp
clc
stc
mov
xchg
cmp
or
loopne
xor
(bad)
inc
ret
add
imul
stos
retf
push
jl
push
out
add
(bad)
cmps
sub
push
pop
or
int
or
push
mov
push
ins
mov
bound
es
adc
(bad)
mov
mov
addr16
mov
sar
sbb
lods
push
add
sbb
and
or
jle
cmp
mov
push
add
sbb
sub
movs
add
scas
mov
pop
fistp
push
mov
adc
pop
fbstp
jno
mov
fs
lea
loope
in
add
test
jmp
test
mov
adc
sub
jbe
ins
dec
xor
cli
mov
in
inc
in
xchg
sahf
cli
xchg
enter
aas
stos
ds
jb
push
adc
pop
out
pop
stos
daa
movs
inc
mov
xor
bound
push
jnp
mov
(bad)
jb
inc
(bad)
jmp
lahf
loop
pop
mov
cmc
popa
test
ret
jno
cs
or
ins
repz
mov
jmp
sbb
or
xchg
sti
lds
mov
and
add
mov
jno
fucom
inc
(bad)
pop
xchg
jl
mov
loopne
mov
(bad)
jge
dec
das
mov
(bad)
adc
push
sbb
mov
out
xor
rol
add
jae
mov
(bad)
cmc
pop
imul
cmp
loop
sbb
cmp
add
loop
mov
push
call
and
retf
xchg
push
rcl
cdq
packsswb
lock
mov
sahf
ret
shl
outs
or
cmp
lock
call
stos
mov
ss
push
aam
sub
not
inc
mov
pop
scas
sub
iret
jo
jno
sub
lock
pop
inc
jae
push
loope
xchg
imul
and
pop
test
call
jns
(bad)
xchg
fsub
add
push
cmps
retf
imul
popf
xchg
call
adc
jno
push
jmp
cmp
imul
rcr
call
adc
(bad)
out
or
inc
xchg
xor
aam
push
fiadd
retf
stos
fucomp
jmp
pop
push
adc
dec
iret
dec
(bad)
lahf
loop
xchg
imul
sub
not
ins
out
das
sub
daa
sub
shl
cmp
xlat
mov
pop
(bad)
fnsave
push
mov
(bad)
outs
and
gs
and
or
or
jge
push
es
xor
and
(bad)
pop
fs
xchg
jecxz
les
jmp
stc
ins
fwait
xchg
mov
int3
outs
jne
sbb
cmp
fstp
ficomp
xchg
xchg
ja
je
add
cmps
pop
xchg
xchg
outs
sub
pop
mov
gs
popa
or
aad
shl
call
mov
arpl
(bad)
mov
adc
mov
cmp
mov
ret
jb
sbb
fnsave
retf
call
daa
sub
mov
mov
adc
xor
fdivp
and
(bad)
movs
jae
jbe
les
push
stos
out
mov
sub
ret
mov
cmp
xlat
xor
ins
clc
xchg
(bad)
lock
or
or
cld
icebp
dec
aas
mov
xchg
inc
mov
push
outs
jl
sbb
sub
mov
pusha
dec
fwait
out
sbb
test
outs
push
xor
mov
icebp
fdivp
pop
push
or
pop
pop
push
mov
pop
jne
ret
(bad)
je
jae
enter
and
sub
in
jle
add
dec
popa
paddsw
sub
lods
daa
mov
loope
dec
add
jp
push
or
and
and
add
js
jmp
cmp
xlat
(bad)
xchg
mov
shl
mov
jge
jg
hlt
mov
mov
mov
ss
iret
les
sbb
adc
inc
push
xchg
sub
jmp
inc
xor
gs
xchg
push
pop
dec
xchg
cmp
inc
in
pushf
push
xchg
pop
cmps
ficom
jmp
mov
cs
add
clc
call
mov
cmp
cdq
out
add
pop
or
adc
cmp
add
int
inc
je
dec
arpl
cmp
dec
test
sbb
and
iret
and
cmp
and
(bad)
jl
outs
cli
push
xchg
cwde
out
adc
mov
xor
mov
push
fldenv
aam
mov
or
stos
xor
and
aaa
inc
mov
rcr
fsub
xchg
pop
add
js
cs
mov
out
stc
and
rcl
pop
pop
ss
push
data16
cld
push
mov
xchg
les
sbb
push
imul
cmp
pushf
mov
sub
mov
pop
mov
sbb
imul
ror
out
pushf
mov
push
mov
add
das
in
loopne
gs
adc
mov
bound
and
jl
jne
imul
jmp
add
pop
push
push
jno
daa
jge
push
fisttp
scas
popa
sbb
es
retf
cmc
lods
mov
pop
dec
jmp
adc
or
jbe
xchg
mov
movs
repz
fistp
fstp
or
in
test
enter
pop
mov
stc
lods
xchg
loopne
into
push
xlat
call
ins
out
iret
sahf
in
(bad)
std
out
(bad)
daa
rol
popa
sahf
xor
in
adc
bound
ficom
pop
xchg
or
cmp
mov
mov
mov
sub
je
pop
leave
dec
lds
nop
or
fldenv
and
jo
inc
add
int3
das
adc
test
lock
push
cmovns
xor
imul
push
cmps
cs
adc
sbb
test
(bad)
call
or
mov
xchg
inc
jmp
(bad)
jmp
jnp
xor
lock
cmps
outs
mov
je
xlat
mov
test
fsub
inc
(bad)
aam
repz
pop
xchg
loop
add
push
mov
rcr
xchg
fistp
add
jns
sub
fwait
pop
or
lock
xor
mov
or
std
or
adc
cmp
(bad)
adc
push
jno
jecxz
mov
xor
sbb
sub
and
and
das
dec
push
shl
call
jmp
inc
cmp
xchg
stc
adc
dec
outs
push
loop
xor
test
mov
xlat
inc
lods
test
pusha
adc
jmp
repnz
outs
icebp
push
retf
outs
loopne
cmc
int3
es
cs
call
sub
stos
push
test
fmulp
dec
or
inc
cld
and
mov
lock
mov
shl
scas
sbb
nop
inc
sbb
or
dec
mov
jbe
dec
pop
fldcw
mov
mov
cmps
popf
lods
pop
adc
hlt
or
jl
jge
sub
mov
xor
xchg
push
or
pop
mov
and
hlt
xchg
dec
bnd
sub
mul
lods
mov
fstp
loope
out
loopne
fwait
adc
stos
(bad)
fmul
lock
jae
push
jne
inc
mov
xor
mov
and
jae
outs
inc
ret
jae
jmp
push
or
push
jl
dec
cmp
mov
dec
push
mov
xchg
jbe
aaa
xchg
dec
mov
add
in
sahf
scas
push
frstor
mov
jg
push
iret
outs
dec
sahf
pop
jl
call
outs
cwde
ret
jmp
mov
and
ins
dec
dec
cli
inc
pushf
js
inc
dec
dec
scas
cmps
sub
and
or
dec
sbb
cmovnp
fdiv
cmps
mov
loopne
mov
stos
out
xor
(bad)
or
add
popf
in
stos
test
movs
sub
or
xchg
or
pop
xchg
adc
xlat
shl
and
cmps
mov
adc
mov
jl
cmp
cmp
xchg
in
jl
fisubr
fsubr
mov
sbb
popf
mov
imul
movs
fbstp
int3
js
cmp
inc
or
sub
(bad)
dec
and
fld
sbb
dec
jg
fbld
call
mov
gs
or
pop
movs
add
or
imul
jns
outs
rol
aam
bound
lfs
lods
sbb
jbe
int3
pop
cli
xlat
std
cmp
nop
out
ss
jnp
dec
ins
(bad)
xchg
int3
popa
dec
push
dec
add
adc
pop
sbb
ds
xchg
adc
and
sbb
xor
adc
xlat
adc
xchg
or
in
lods
xchg
pop
dec
mov
aas
push
mov
mov
leave
mov
cmp
cmps
adc
cmp
aaa
push
loopne
and
jle
push
popa
and
jmp
sub
push
data16
inc
lods
mov
pop
jmp
in
xlat
loop
pop
jg
jne
mov
adc
and
adc
ins
mov
arpl
sbb
and
mov
ror
or
mov
adc
clc
cmps
(bad)
rcl
jmp
jl
mov
sub
ins
pop
or
jge
loope
dec
lods
shl
fsubr
inc
cmp
into
jmp
int3
dec
scas
pop
inc
sbb
lds
loop
add
repnz
stos
or
and
add
pushw
pop
shr
nop
or
lock
push
cmp
sub
retf
pusha
jbe
pop
pop
pop
push
ret
dec
iret
stc
xchg
xor
pop
and
sbb
enter
xchg
mov
xchg
into
in
sub
pop
mov
loope
dec
pop
mov
cmp
push
cli
(bad)
stc
stc
adc
aad
out
loop
inc
add
push
ret
inc
fimul
or
mov
add
es
sub
push
sbb
jecxz
in
std
rol
push
shl
jg
add
push
mov
call
sub
pusha
leave
test
int3
sbb
rol
inc
das
cmps
sar
mov
pop
inc
jle
or
outs
inc
push
cmps
outs
aam
inc
js
imul
push
call
imul
sbb
out
or
add
daa
icebp
ret
sub
inc
sbb
dec
sbb
test
lds
push
mov
std
or
sbb
mov
xlat
cmp
mov
js
int3
ss
push
iret
in
test
int
adc
dec
out
cmp
adc
in
pushf
mov
jnp
cli
dec
mov
int
or
inc
jbe
outs
enter
cmp
xchg
repnz
add
mov
out
or
or
dec
pop
or
mov
dec
dec
hlt
call
mov
loope
xchg
mov
gs
pusha
rcr
jnp
jmp
std
das
push
pop
pop
mov
scas
les
jge
retf
je
iret
shr
rcr
test
test
mov
mov
and
fs
fnstsw
push
add
adc
mov
inc
mov
mov
mov
mov
mov
je
and
outs
sahf
sbb
test
es
scas
push
mov
inc
inc
or
mov
loopne
lods
and
test
xor
pop
iret
(bad)
push
cmc
mov
call
pop
mov
mov
mov
or
mov
push
cmp
sub
imul
js
mov
fisubr
dec
out
push
clc
jo
xchg
pop
mov
lahf
pop
push
(bad)
push
inc
lods
aad
pop
daa
sub
std
pop
inc
out
call
mov
pop
push
sub
jns
jbe
js
call
sub
xor
jbe
inc
jge
rcr
(bad)
data16
mov
je
pop
rol
repz
rcr
dec
xor
popf
jo
jo
mov
mov
test
js
(bad)
cmp
in
sub
xchg
xor
mov
push
shl
and
cld
ja
test
pop
jns
jmp
lods
jmp
pop
out
cld
loopne
inc
mov
mov
and
scas
push
cmps
test
pop
sub
inc
sub
and
test
inc
pop
jl
cmc
xchg
mov
ins
sub
pop
adc
in
xchg
sub
mov
mov
(bad)
push
outs
or
loop
push
aaa
jge
pop
adc
ficom
popa
sub
arpl
pushf
xor
sub
fcmovnbe
sub
out
add
std
mov
mov
gs
jmp
cmps
fisttp
push
jmp
inc
jo
dec
jb
clc
(bad)
pop
push
mov
retf
add
iret
xchg
popf
xor
cmps
clc
and
lock
dec
and
mul
push
ins
(bad)
xor
lea
xchg
call
shr
aad
add
fucomi
out
ror
pop
or
add
jmp
adc
lods
and
rol
or
das
push
cmps
sbb
adc
push
in
push
hlt
scas
(bad)
cmp
test
scas
jmp
jp
dec
(bad)
fisubr
adc
sub
sbb
out
out
test
dec
in
xchg
adc
int3
sbb
stos
bound
jbe
clc
add
xchg
xor
(bad)
test
retf
sahf
aas
jp
and
xchg
test
jle
jbe
cmp
stos
push
pop
mov
adc
mov
cld
mov
and
pop
xchg
outs
jg
pop
mov
rcr
xor
inc
das
ins
xchg
fadd
addr16
mov
lods
jp
and
cmp
adc
add
jnp
cmp
std
dec
push
mov
int3
push
icebp
sbb
pop
icebp
imul
or
inc
loope
rcr
jle
sub
push
add
mov
pop
dec
jp
loope
xchg
mov
xlat
hlt
mov
pop
and
jle
sti
in
cmp
cmps
jg
retf
retf
xchg
mov
adc
push
mov
in
mov
push
in
in
(bad)
test
xchg
aad
lods
dec
retf
mov
sti
in
mov
ret
(bad)
cmp
and
add
push
pop
push
dec
xadd
call
jge
lods
lea
mov
test
mov
mov
xlat
and
(bad)
and
cmp
jp
ins
mov
and
xchg
dec
jnp
push
(bad)
js
ja
xchg
mov
mov
addr16
push
shr
dec
pushf
call
lods
push
sar
gs
xchg
cmp
cmp
iret
inc
popa
dec
fsub
dec
jbe
or
cdq
test
aam
retf
mov
xor
scas
mov
inc
or
jmp
cmp
jno
cmps
sub
int3
xchg
loopne
movs
or
popf
adc
dec
ins
mov
jbe
mov
addr16
mov
xchg
adc
out
jecxz
sub
fisttp
pop
ret
xor
mov
cmp
aad
add
scas
cmp
int
lods
jle
cdq
mov
(bad)
xor
sbb
mov
stos
inc
stos
cmp
xor
inc
aaa
out
jle
iret
iret
fstp
dec
test
inc
pop
mov
or
lea
mov
test
enter
clc
arpl
shl
pop
cmp
pop
js
and
and
adc
imul
sbb
call
xor
push
and
enter
sbb
pop
pop
xor
daa
retf
push
test
test
fxch
mov
dec
xor
sub
test
mul
sub
int3
ror
outs
cmp
jo
jmp
outs
mov
idiv
out
adc
iret
adc
cmp
mov
or
(bad)
pop
nop
iret
push
daa
add
ja
sub
imul
repz
repnz
or
mov
daa
cmp
cmp
sub
pop
in
sub
adc
cmp
jnp
adc
mov
adc
movs
in
mov
(bad)
icebp
movs
and
psrlq
test
jb
sub
and
test
dec
adc
bound
retf
and
popf
jle
push
imul
test
mov
sti
push
mov
in
dec
cdq
xchg
fild
(bad)
push
sbb
fwait
sub
retf
out
sbb
adc
test
test
(bad)
pop
(bad)
jge
mov
cmps
xchg
iret
test
or
pop
iret
and
cmps
cmp
(bad)
call
call
fld
lahf
hlt
ins
mov
xor
jmp
push
mov
jnp
rol
pop
(bad)
or
stos
inc
or
xor
in
jp
in
shl
ss
mov
xchg
rcr
jecxz
or
adc
popa
cmps
test
call
xlat
js
cmp
sub
fsub
and
dec
mov
jo
or
jge
jl
sbb
les
das
sbb
add
mov
fs
cmc
pusha
mov
std
std
repz
mov
fst
sbb
push
push
sub
iret
jne
or
out
movs
ret
push
cwde
inc
sbb
inc
xor
ret
fist
cld
fidiv
das
sti
cli
out
push
xchg
mov
loope
test
imul
jl
cmps
mov
xchg
call
xor
sahf
arpl
(bad)
cmp
inc
cmc
push
dec
cmp
pushf
ins
cmp
fcmovb
(bad)
fyl2xp1
sbb
int3
cmp
fs
sub
jae
js
cli
pop
jecxz
scas
cmp
stos
dec
test
push
jnp
ds
fdiv
sar
shl
xchg
ins
push
jno
lods
push
push
dec
xchg
call
jae
popa
in
xor
or
test
mov
xor
fwait
mov
cmps
and
pop
mov
into
jae
xor
fsubrp
cmp
call
(bad)
mov
popa
push
add
ficomp
jo
xor
adc
and
mov
lea
cmp
inc
imul
jb
fst
retf
jmp
int3
js
sub
mov
scas
fldcw
sub
jg
lea
inc
fwait
push
jne
(bad)
bnd
nop
xchg
mov
jge
retf
in
hlt
jae
jb
cld
sub
inc
mov
ja
and
push
sahf
daa
lahf
into
test
shr
push
outs
and
inc
test
cdq
mov
jbe
retf
cdq
add
ret
xchg
les
lods
inc
pop
jg
int3
add
scas
jp
(bad)
fpatan
gs
not
outs
mov
sbb
ja
add
icebp
jno
add
mov
(bad)
sahf
xchg
pop
sbb
gs
int3
cmp
popf
clc
jb
ret
fsubr
xor
pop
in
dec
or
and
out
xlat
pop
mov
lods
jne
(bad)
push
data16
sbb
pop
in
nop
mov
hlt
sub
jno
loope
pushf
pop
jmp
mov
(bad)
jmp
inc
mov
xor
or
mov
sub
scas
cmps
add
mov
jne
fsub
cmps
jne
or
int3
dec
mov
enter
cmp
into
inc
mov
xchg
xor
addr16
leave
dec
out
push
add
inc
adc
add
not
jle
add
rcl
mov
addr16
sub
and
cmps
aad
arpl
pop
cmp
inc
cwde
pop
jg
fist
outs
or
dec
int3
jl
push
inc
sahf
stos
xchg
loopne
sbb
sbb
lods
add
cmps
stos
leave
and
push
xor
mov
jo
retf
dec
add
fild
and
retf
sbb
pop
not
pop
cmp
imul
aas
jb
out
push
(bad)
cmp
es
adc
frstor
cmps
dec
es
or
mov
sti
ins
movs
aas
or
pop
aas
xchg
addr16
pop
retf
retf
ret
adc
push
sbb
fnop
inc
pop
ins
aaa
inc
ret
xchg
pop
mov
mov
jge
mov
mov
xor
ret
in
cmp
adc
lods
mov
jnp
add
jmp
jne
sahf
adc
push
pop
inc
mov
cmps
lods
mov
sub
sbb
and
aaa
js
fxch
rcr
ror
sbb
pusha
repz
mov
das
fstp
das
mov
fdivr
sub
fadd
mov
jp
loop
leave
xchg
mov
mov
call
popa
dec
pushf
call
mov
xor
lea
xchg
(bad)
fist
mov
inc
retf
jne
cmp
jecxz
pop
adc
retf
add
sub
(bad)
mov
icebp
inc
es
or
push
cmp
xchg
mov
jne
sub
test
fdiv
pusha
clc
in
fldcw
sti
retf
inc
scas
dec
arpl
dec
outs
stos
shr
xchg
in
pusha
out
push
xchg
test
xchg
push
jecxz
cmp
idiv
pop
fnsave
mov
mov
pop
mov
loope
jp
cmp
pop
xlat
and
rcl
test
mov
push
mov
mov
mov
std
jg
test
cmp
test
icebp
mov
ins
push
mov
dec
ja
mov
aad
dec
in
dec
mov
(bad)
cli
out
pop
inc
cmp
outs
mov
addr16
sub
jecxz
cmp
cmps
imul
std
adc
jmp
imul
ror
sbb
mov
pusha
lock
sahf
ss
es
(bad)
push
aad
cmps
cld
cwde
push
xor
ins
sub
push
cmps
xchg
into
js
dec
rcr
sar
jecxz
jno
push
arpl
in
js
cld
push
fisttp
xor
cmp
add
enter
cdq
int3
cld
sub
xchg
push
fdiv
test
pop
rcl
repz
data16
xchg
xor
pop
add
xchg
shl
mov
movs
or
sub
les
mov
xchg
xor
mov
adc
retf
sbb
sar
daa
ds
add
add
out
inc
sti
cs
sbb
in
cmp
mov
pusha
idiv
fdivrp
xor
pop
faddp
aad
sub
jb
ins
ror
lods
(bad)
jnp
cmp
mov
ret
movs
je
jbe
mov
aaa
out
sub
cmc
mov
hlt
add
das
push
inc
dec
dec
jns
pop
and
push
sbb
sub
mov
or
mov
jno
xlat
mov
in
pop
dec
mov
mov
mov
inc
out
jns
jmp
add
lods
or
or
mov
add
mov
xor
pop
mov
outs
push
in
mov
in
xor
jns
push
cvtps2pd
loopne
movs
cmp
(bad)
retf
lock
cmp
sahf
std
ret
or
push
and
add
ins
aad
lods
add
jmp
sbb
xor
(bad)
es
and
or
or
jb
mov
pusha
in
jl
sub
and
addr16
arpl
ja
or
xchg
pop
fwait
loop
jle
cdq
xchg
inc
xchg
jg
ret
adc
push
mov
call
pop
cmp
js
or
movs
jecxz
(bad)
xchg
push
pop
and
or
stc
pop
mov
or
sub
mov
inc
pop
jge
rcl
xor
arpl
out
aas
ds
shl
xor
fsub
movs
into
lods
sub
sbb
test
mov
das
adc
add
fidivr
aaa
mov
iret
push
jecxz
fs
jmp
ins
push
fwait
inc
into
mov
mov
mov
push
stos
push
xor
call
mov
push
stos
xchg
sub
mov
retf
inc
daa
into
mov
pop
or
out
stc
scas
ins
mov
mov
aaa
inc
jno
(bad)
cmps
mov
scas
das
xchg
sub
(bad)
popa
clc
and
bound
outs
test
imul
cli
inc
loop
mov
pusha
pop
aas
mov
cld
inc
push
xchg
jp
mov
dec
inc
adc
pop
ins
xchg
push
test
repz
jl
pop
mov
add
push
movs
jle
ficom
mov
and
xor
out
xor
and
leave
(bad)
into
pop
mov
aas
dec
jmp
loop
adc
arpl
hlt
retf
cli
pop
inc
fist
mov
lahf
gs
xor
out
add
fwait
sahf
shl
sbb
idiv
(bad)
cwde
jns
in
mov
inc
cmps
inc
fisub
add
and
dec
xor
cs
mov
rcl
dec
mov
push
mov
or
pushf
sbb
or
adc
pmulhw
nop
je
sti
popf
xor
mov
xlat
sbb
or
aam
sti
xchg
(bad)
dec
fs
jns
lahf
fmul
lods
dec
dec
fmul
or
sti
push
dec
jle
int3
push
mov
xor
mov
mov
cmp
sbb
and
retf
ret
mov
pop
imul
adc
adc
(bad)
xchg
int
icebp
push
hlt
cli
imul
push
dec
ss
pop
pop
into
push
cdq
rol
dec
sub
inc
cld
cmp
fnstenv
out
jb
mov
mov
jns
vcmpss
sub
xor
aaa
call
mov
inc
cmp
sbb
scas
mov
and
in
aam
mov
adc
dec
sub
hlt
push
ror
mov
xchg
dec
jmp
fwait
(bad)
out
pop
sub
jmp
dec
jmp
mov
dec
repnz
(bad)
(bad)
and
das
adc
inc
sbb
icebp
push
out
and
pop
sub
cmp
dec
sbb
jns
movs
outs
ja
xchg
ds
and
out
cdq
std
iret
add
iret
out
jp
dec
imul
movs
es
into
xchg
fist
clc
xlat
(bad)
fisttp
ja
or
mov
inc
out
(bad)
loop
(bad)
fdivrp
aas
sub
call
es
mov
xor
jnp
mov
std
leave
jp
pusha
int
mov
or
sub
cli
jecxz
ret
pop
inc
lea
and
push
sbb
and
fnsave
and
cmp
fs
shr
push
xor
scas
ds
or
sub
ins
jecxz
xor
test
cmp
jmp
clc
outs
add
setns
ror
sub
iret
call
cmp
adc
cli
xor
inc
inc
adc
adc
cmp
vpmovmskb
jo
les
mov
mov
je
(bad)
(bad)
or
(bad)
pusha
xchg
pushf
movs
shr
push
ret
sbb
ficomp
jl
enter
lds
jmp
jns
dec
loopne
imul
ins
in
dec
stos
jne
in
xor
pop
bound
add
imul
mov
mov
xchg
jge
xchg
push
mov
(bad)
jp
mov
shl
inc
dec
test
gs
xchg
iret
leave
ins
add
cmps
jne
fnsave
lods
ret
mov
sub
mov
lea
cmps
mov
mov
jmp
xchg
rol
daa
dec
and
or
sub
test
pop
mov
js
ja
xor
cmc
fcom
mov
add
adc
jno
cmp
ins
mov
fdivr
std
ror
js
xor
das
mov
sti
fisttp
push
and
shr
jnp
or
push
dec
enter
fadd
xlat
into
bound
mov
pop
jg
sub
push
nop
and
test
cmp
pusha
add
sahf
jp
int3
aaa
sub
in
sti
xchg
or
pop
mov
xchg
hlt
adc
add
movs
jbe
imul
fild
cmps
jg
sub
push
(bad)
cmp
mov
daa
cdq
mov
xchg
jae
and
pop
test
repz
clc
sbb
sbb
shl
add
sub
push
movs
jae
call
test
lea
rcr
sar
or
dec
cmp
test
aam
mov
add
js
(bad)
shl
fnstenv
jne
(bad)
xor
pop
bnd
mov
pop
in
jae
js
or
xchg
jle
adc
sub
rep
and
push
add
daa
mov
push
xchg
lods
stos
ror
jg
mov
ins
xor
push
stos
dec
mov
jecxz
jns
sub
in
fist
pop
adc
mov
mov
push
push
jle
inc
pop
test
das
inc
push
add
xchg
push
nop
pop
dec
shr
rol
nop
sub
repz
out
int
aad
inc
dec
adc
cmp
jb
cld
rol
jecxz
push
xor
test
xchg
retf
jmp
enter
psubw
or
bound
call
movs
fsubr
jne
in
sti
or
pop
sub
mov
lahf
adc
sub
dec
or
mov
pop
push
mov
cmp
js
cwde
les
mov
ret
mov
or
mov
push
stc
xchg
jg
shr
cli
ins
imul
add
cmp
pop
xchg
cmps
jno
and
xchg
sbb
neg
lahf
and
xor
jb
inc
jno
fisub
sbb
(bad)
adc
push
cwde
sub
lahf
in
xchg
das
shl
pop
retf
jecxz
or
and
add
sub
push
test
jns
inc
rol
(bad)
jns
jnp
jae
movs
stos
nop
fidiv
or
stc
sbb
mov
and
xor
jae
xor
add
dec
fcmovnb
sbb
cmps
fwait
add
xchg
push
xchg
cwde
cmc
fmul
pop
push
idiv
push
aad
pop
push
leave
cmp
(bad)
push
mov
mov
or
call
fcmovne
mov
add
popa
mov
test
daa
out
pop
dec
call
rcr
jbe
out
jge
mov
mov
stos
sub
mov
cmp
xor
xchg
mov
mov
cmp
inc
and
mov
mov
or
pop
and
push
sbb
inc
out
out
add
cmp
int
adc
stos
xor
fild
fld
imul
mov
dec
mov
pop
and
div
aaa
(bad)
fmul
jne
cmp
(bad)
das
mov
ss
scas
mov
fcmovnu
cmps
mov
(bad)
jmp
aaa
dec
xchg
js
push
xor
mov
xchg
sar
xor
ficom
imul
retf
scas
or
aaa
mov
mov
jnp
pop
cdq
popa
arpl
mov
movs
or
ffreep
cmps
mov
mov
or
bnd
cmps
mov
pop
(bad)
sbb
adc
lds
dec
(bad)
jmp
mov
xchg
mul
inc
lahf
pusha
pop
in
test
out
dec
fadd
test
xlat
ins
es
jmp
into
scas
(bad)
hlt
mov
push
mov
fs
xor
or
outs
lock
cmp
xor
fwait
mov
xchg
push
sahf
mov
stos
jmp
push
jmp
cdq
jae
loope
push
xor
stos
adc
mov
jg
xchg
call
ss
bound
fistp
arpl
xor
outs
mov
mov
out
mov
pop
inc
js
sub
sub
mov
ja
dec
stos
dec
jbe
mov
sbb
add
arpl
xor
out
call
lods
mov
lock
or
xchg
iret
dec
aam
rol
popf
cmp
push
add
mov
or
pushf
mov
lahf
pusha
sbb
mov
enter
sahf
add
push
fwait
xor
xor
repnz
sbb
jno
sub
push
hlt
ds
mov
int3
lahf
aam
push
cli
lods
bnd
addr16
xor
scas
push
push
daa
aad
xor
or
sar
push
pop
inc
gs
push
pusha
mov
mov
mov
(bad)
enter
cld
mov
ins
aas
cmp
and
dec
dec
enter
xchg
adc
call
shl
lods
pop
imul
stos
sub
js
dec
sub
jge
lods
pop
xchg
push
mov
mov
cdq
mov
jno
pusha
and
out
xchg
push
pop
mov
mov
mov
pushf
inc
je
add
les
int3
mov
sar
mov
and
push
push
sub
aaa
pop
retf
mov
int
out
icebp
mov
add
(bad)
pop
xchg
aam
ret
lds
retf
aad
adc
jg
out
sbb
mov
adc
adc
cmp
iret
lea
and
ret
cli
mov
sub
gs
inc
jmp
pop
repnz
test
adc
pop
mov
mov
sbb
lea
fcom
outs
pop
std
icebp
fdiv
xchg
lea
add
add
xchg
in
mov
cmp
mov
inc
retf
cmp
clc
les
mov
xchg
sbb
fcomp
fwait
inc
jno
sbb
xor
mov
or
sbb
mov
ins
cmp
pop
sub
out
xor
js
je
inc
cmps
imul
mov
retf
(bad)
fcom
sub
std
aam
mov
adc
out
push
inc
test
xchg
xchg
sbb
dec
ret
xchg
es
test
push
mov
add
pop
cmc
mov
or
inc
retf
cmp
mov
int
jmp
(bad)
xchg
(bad)
imul
js
lea
iret
add
jg
and
fld
sbb
pop
leave
sbb
sahf
xchg
jbe
pop
loope
jl
inc
push
dec
cmp
iret
push
mov
(bad)
aas
jle
mov
fdivr
pop
ins
cmp
push
mov
push
jae
loopne
pop
arpl
mov
adc
adc
xchg
setnp
mov
mov
cmp
cs
fmul
int
ret
xchg
push
and
repz
xchg
jae
pop
sub
es
das
mov
outs
movs
or
xor
add
or
jmp
imul
sbb
adc
ret
ret
push
mov
or
or
shl
mov
or
mov
sbb
dec
push
xlat
mov
add
rcl
fld
fisttp
sahf
repz
pop
pop
xchg
mov
mov
into
sbb
mov
sbb
push
sbb
ficomp
pop
ja
rol
jne
add
and
jnp
sub
ins
inc
pop
adc
xchg
push
mov
jae
add
xchg
mov
dec
jbe
push
pop
add
push
dec
sub
retf
cwde
pop
mov
mov
ret
push
mov
cld
jnp
dec
iret
mov
js
xor
xor
pop
je
enter
and
ja
push
cmps
inc
jb
inc
push
rep
inc
jle
aam
and
sbb
test
and
in
pop
iret
out
(bad)
jmp
loopne
icebp
sub
cmc
or
or
mov
mov
imul
or
je
adc
mov
(bad)
outs
shl
inc
push
(bad)
aad
jl
std
sub
or
scas
and
test
(bad)
aas
ds
test
jmp
cs
int3
mov
cmps
sub
hlt
cmp
inc
and
pop
es
cmp
jo
(bad)
test
das
out
mov
(bad)
mov
and
retf
push
or
arpl
sbb
lock
movs
cmp
cs
mov
add
adc
xor
jmp
lea
std
pop
out
addr16
xor
clc
arpl
jo
ftst
pop
fmul
in
out
(bad)
das
ds
shl
in
movs
pushf
sub
add
test
hlt
jl
dec
imul
jnp
lods
mov
(bad)
cmp
sbb
jp
sbb
fcmovnbe
hlt
jo
sbb
cs
and
push
lea
sbb
sbb
xchg
adc
ret
push
and
icebp
ficomp
cmp
popa
inc
pop
and
inc
sbb
inc
push
xchg
inc
inc
jge
inc
pop
mov
pmulhw
push
sbb
sar
adc
mov
xlat
cli
(bad)
jb
fwait
mov
cmp
ja
gs
cli
aas
pop
dec
mov
lea
inc
inc
and
int
lock
jb
int
adc
xor
(bad)
jae
xchg
iret
stos
cmp
xor
cld
cmovns
push
rcl
lock
add
push
or
outs
add
pop
xchg
ret
jnp
xor
std
aad
xor
out
in
in
test
shr
xor
sbb
out
adc
test
mov
lock
ds
ror
mov
(bad)
jbe
xor
dec
outs
dec
mov
cmp
adc
cmc
inc
test
repnz
or
adc
(bad)
ja
or
push
mov
or
sub
shl
test
sub
adc
adc
push
stos
adc
mov
inc
fmul
add
stos
retf
iret
movs
xor
adc
sub
push
fs
xor
push
fcomp
aad
push
scas
adc
push
movs
popa
jmp
das
mov
jbe
dec
jl
xor
xchg
cmp
sbb
xchg
ds
pop
push
fld
pop
mov
push
mov
push
cmc
das
or
pushf
je
outs
xor
mov
mov
jns
push
mov
cmp
sbb
add
outs
fwait
clc
shl
jbe
add
lock
fcom
js
and
adc
mov
inc
clc
and
imul
clc
dec
mov
(bad)
int
push
sub
sar
xor
imul
jmp
mov
stos
movs
mov
inc
cmp
je
(bad)
mov
imul
adc
push
es
sbb
or
(bad)
test
jne
pop
adc
outs
cmp
pop
aad
push
imul
sub
or
pop
inc
inc
mov
mov
jp
sub
daa
mov
dec
leave
push
mov
mov
mov
enter
fdivr
outs
adc
cmps
ss
add
mov
cmp
or
nop
lea
xchg
mov
jg
das
jns
mov
call
pop
int3
add
loope
add
jmp
jo
inc
stos
out
outs
jo
sar
clc
pop
stc
outs
icebp
test
out
xchg
aad
(bad)
cmp
call
ss
mov
dec
aad
push
dec
inc
and
pop
je
mov
imul
push
stos
mov
into
inc
dec
stos
lods
sub
fsub
or
fwait
add
xchg
push
mov
pop
ins
push
pop
jns
xchg
pop
cmps
xor
movs
mov
jge
rcr
and
pusha
repnz
adc
jno
test
mov
adc
cmp
sar
push
mov
sti
pusha
fstp
and
in
cmc
dec
hlt
push
sbb
mul
sub
push
call
mov
movs
pop
pop
dec
xchg
add
lea
js
fwait
mov
adc
outs
das
cwde
cwde
retf
inc
jmp
js
(bad)
jmp
shr
mov
loopne
add
shl
imul
or
or
cmps
jb
pop
or
pusha
sub
sub
shr
sbb
stos
dec
mov
fisubr
cmp
cdq
mov
jbe
xchg
popf
inc
sub
pop
fbld
pop
inc
jne
sbb
mov
pushf
push
jns
out
pop
mov
lahf
cmp
mov
push
push
cmp
sar
fmul
cmc
cmp
cmp
cmc
mov
pushf
test
in
mov
or
test
push
add
xchg
aad
xchg
rol
nop
test
xor
in
xchg
cmp
and
adc
xchg
test
xlat
nop
push
cmp
push
xor
mov
or
add
aad
fwait
push
aad
fwait
ror
ins
dec
pushf
and
in
xchg
sub
scas
dec
call
test
mov
popf
in
movd
jno
pushf
ret
inc
aaa
cmc
xchg
stc
add
xchg
jno
int
cmp
cmp
inc
jo
push
sub
or
test
mov
popa
sub
mov
pop
jns
adc
pop
sub
pop
inc
jns
cmps
imul
pop
jae
adc
(bad)
gs
cli
in
pop
push
inc
gs
xchg
xchg
xchg
or
jns
xchg
mov
mov
stc
iret
xor
mov
push
in
mov
sbb
bound
xchg
mov
adc
(bad)
pop
pop
push
std
lods
(bad)
cmp
cmps
int3
sub
ret
lds
nop
shl
xor
jns
movs
add
lods
xchg
or
call
jb
add
loope
and
enter
adc
out
clc
cmp
mov
mov
ror
xchg
lea
jge
inc
adc
mov
mov
leave
imul
nop
mov
and
and
(bad)
aaa
cmp
shl
cli
and
std
push
add
(bad)
push
lods
pushf
pop
cmp
in
in
rol
ret
push
popa
aaa
adc
int3
sahf
getsec
xor
and
inc
in
xchg
push
or
aad
mov
in
jle
fist
in
mov
push
leave
jne
sub
test
sub
xchg
out
push
dec
dec
adc
or
mov
int
mov
and
cmp
retf
dec
add
and
into
push
std
push
push
jnp
adc
jl
cs
movs
pop
add
xor
and
aaa
ret
sti
jle
fs
call
mov
mov
jns
mov
mov
xchg
gs
push
mov
bound
sub
adc
jae
and
outs
mov
in
je
xor
push
push
ror
retf
jle
(bad)
push
jno
test
jb
pop
jno
pop
pusha
call
mov
xchg
pushf
and
xor
loope
mov
pop
mov
imul
ja
mov
cmc
sub
mov
cmps
or
pop
xor
jp
inc
bound
xor
mov
lods
inc
cli
jmp
and
clc
fldcw
fild
cmp
cdq
and
mov
into
jg
call
add
ins
jno
cld
and
aad
jg
or
xchg
mov
loope
push
in
jmp
stc
jg
mov
mov
test
xchg
(bad)
cmp
mov
xlat
and
inc
or
sbb
pushf
jmp
jno
push
arpl
inc
lock
sbb
fdivp
or
outs
fbstp
mov
mov
movs
xchg
test
fwait
lods
and
or
add
iret
outs
stos
xchg
ds
pop
sar
mov
mov
int3
mov
std
out
rcr
sahf
push
std
ins
and
mov
in
hlt
dec
retf
pop
cmc
into
ja
js
adc
sub
jo
sub
inc
dec
mov
pop
mov
and
mov
mov
ret
loop
jbe
fwait
push
loop
stos
push
outs
mov
sub
lods
inc
sbb
hlt
inc
xor
mov
std
dec
movlps
loopne
test
call
push
hlt
in
push
jmp
and
inc
mov
mov
mov
push
jl
loope
rcr
pop
push
movs
pushf
inc
push
sub
test
in
sbb
sbb
jg
(bad)
mov
xchg
jge
in
dec
dec
adc
out
push
sbb
or
cmc
imul
movs
into
out
pop
add
xchg
sbb
inc
push
jecxz
scas
rcr
int3
xchg
cmp
int3
jb
lods
stos
mov
mov
push
push
sbb
jns
icebp
xor
xchg
fst
push
mul
push
sub
lods
xor
cmc
cwde
fild
push
jo
sub
cmps
mov
cld
add
xor
jbe
fcomp
stos
inc
int3
push
push
and
mov
xchg
ror
add
mov
cld
sbb
mov
out
ss
call
cdq
inc
or
shr
cmps
xor
lahf
inc
pop
mov
loop
adc
ror
stos
and
outs
jmp
ror
xchg
cmp
push
test
out
dec
mov
adc
scas
push
xchg
sub
daa
mov
rcl
ins
dec
(bad)
lds
dec
scas
cmp
add
lods
dec
lock
outs
adc
stos
les
cld
out
inc
mov
xor
fild
ret
sti
dec
aad
pop
add
xchg
and
sbb
dec
jb
and
aaa
and
cld
pop
sub
lods
push
inc
call
out
jmp
add
test
push
scas
inc
pop
lahf
cmp
scas
jmp
mov
xlat
out
jbe
xor
movs
mov
(bad)
hlt
pop
lods
sub
enter
daa
mov
popa
mov
jo
push
lahf
mov
(bad)
cli
lods
lods
or
bound
sbb
and
stos
jne
(bad)
in
es
inc
test
or
movs
xor
outs
push
xchg
pushf
mov
pop
fcmovb
(bad)
dec
jp
cmp
pop
cmp
outs
ja
lods
ss
dec
rcr
repz
fidivr
adc
dec
adc
mov
clc
stos
or
xchg
dec
mov
or
sub
pushf
and
fisubr
mov
adc
inc
mov
jecxz
cmp
call
leave
pop
jecxz
push
push
fistp
dec
ret
pop
push
mov
mov
push
dec
les
pop
xchg
pop
iret
mov
add
jmp
aad
iret
das
jnp
div
in
add
daa
subps
out
or
mov
inc
and
cli
mov
loop
push
mov
arpl
or
push
xchg
cdq
es
sbb
call
mov
leave
mov
fld
lahf
jmp
test
mov
fdivr
ret
(bad)
jne
push
jb
mov
pusha
mov
mov
sti
mov
(bad)
adc
rcl
lea
stos
lock
stos
sbb
xor
adc
(bad)
es
lods
push
test
out
cmps
daa
bound
adc
outs
xlat
das
icebp
out
nop
inc
jo
(bad)
adc
in
mov
int
fnstsw
mov
into
cdq
outs
dec
movs
(bad)
jnp
js
stc
adc
out
inc
pop
pop
jbe
mov
shl
inc
sbb
sbb
and
ins
das
sub
jbe
adc
mov
or
mov
ins
jnp
out
je
addr16
pop
ja
jmp
(bad)
clc
cli
in
push
in
dec
inc
adc
xchg
push
sub
mov
lods
jg
pop
jo
lods
cmp
and
daa
inc
sbb
call
mov
dec
xchg
push
movs
mov
repnz
xor
cmp
jmp
cmps
loope
(bad)
int
cli
sbb
jno
leave
iret
sbb
mov
add
mov
mov
es
mov
sub
adc
aam
pop
mov
mov
stos
push
outs
fdivr
ins
call
int
pop
jp
rcl
dec
mov
or
int3
inc
mov
je
fdiv
rcr
jge
popa
add
cmps
xchg
pop
bound
xchg
ds
ja
scas
cmps
idiv
out
outs
mov
inc
int3
cmp
sub
retf
sbb
clc
xor
jo
xor
movs
mov
fadd
mov
lock
push
push
pop
jge
mov
adc
scas
add
xchg
or
fadd
jno
push
adc
fld
fst
ins
jmp
call
lods
imul
push
and
leave
pop
cwde
mul
mov
cld
movs
addr16
scas
fisub
xlat
mov
ret
add
outs
inc
out
pushf
push
scas
lods
pop
aaa
mov
mov
mov
stos
xchg
je
push
sahf
fstp
aas
pop
or
add
mov
(bad)
int3
sar
mov
jnp
stos
aam
push
add
ja
adc
jmp
lods
pop
ds
sbb
imul
imul
sub
popf
cli
xchg
loop
or
mov
mov
adc
dec
adc
lods
int
mov
sub
and
mov
and
mov
cmp
hlt
adc
lock
inc
cmps
push
out
in
jns
imul
out
(bad)
mov
jno
out
adc
pop
lods
or
cmp
(bad)
cmp
and
mov
push
dec
push
and
or
cmc
imul
stc
push
or
mov
punpckhdq
pop
stos
jge
add
cmp
sbb
xchg
lods
aam
gs
jg
dec
dec
fdivr
xchg
mov
aad
int
xor
cld
cmp
in
push
in
xor
fidiv
mov
popa
mov
jmp
mov
add
mov
pusha
push
lods
lock
sbb
je
jmp
adc
or
cmc
xor
mov
pop
jecxz
nop
rol
test
sbb
(bad)
addr16
jecxz
(bad)
xchg
adc
mov
push
mov
mov
adc
cwde
sbb
(bad)
(bad)
mov
call
jg
inc
dec
add
sub
lock
sub
mov
mov
test
(bad)
inc
cmc
sbb
add
jmp
bound
xor
and
stos
push
mov
xlat
mov
pop
cs
shl
or
push
popa
es
mov
jb
pop
push
nop
repz
xor
repz
inc
or
cmp
push
jns
lahf
xor
and
mov
xchg
js
sbb
gs
out
retf
ins
ds
les
inc
repz
enter
dec
es
aad
push
mov
pop
inc
dec
mov
pop
pop
cmp
int3
jle
out
jo
ss
nop
shl
(bad)
scas
mov
rcpps
mov
xor
mov
inc
sbb
ror
sub
aam
rol
push
cmps
jne
push
sbb
sbb
sahf
mov
sahf
push
push
and
cmp
mov
imul
or
or
fwait
xchg
mov
cmp
rcl
push
addr16
mov
(bad)
mov
dec
inc
xchg
inc
mov
mov
mov
sub
dec
xor
dec
mov
test
adc
(bad)
fwait
jns
mov
cmp
xor
in
inc
push
int
mov
fnstsw
jge
xchg
xor
lods
pop
cmp
rcl
repnz
rol
pushf
inc
scas
jbe
and
pop
test
dec
push
pop
adc
idiv
ror
xchg
mov
and
rol
pop
cmp
jle
inc
test
in
or
inc
arpl
xchg
call
daa
movs
in
xor
pop
rcr
fisub
push
sbb
jmp
pusha
jae
dec
stc
pop
lahf
inc
and
cld
out
sahf
inc
icebp
adc
test
aas
cmp
adc
pop
out
push
out
mov
pop
or
test
jo
pop
(bad)
mov
adc
leave
cmp
jbe
xchg
(bad)
sahf
sbb
mov
adc
jns
js
mov
je
inc
push
shl
sbb
in
mov
daa
test
cmp
lds
inc
xchg
push
leave
sbb
jb
cld
mov
jne
pushf
cmp
lods
jmp
adc
jp
push
push
(bad)
packsswb
mov
xchg
enter
test
and
sar
or
inc
xchg
push
push
sub
gs
push
je
sub
aam
popf
and
je
and
mov
mov
mov
test
pop
mov
out
repz
iret
mov
adc
call
jb
or
loop
pop
out
cld
fidiv
push
dec
retf
imul
cmp
imul
fdivrp
loope
cmp
pop
cmp
sbb
pop
jl
jmp
ret
mov
inc
or
and
jecxz
inc
sbb
aam
mov
fwait
jo
add
cmp
sub
mov
and
fldenv
sbb
cmp
bound
xchg
jp
add
push
ror
lahf
sbb
leave
fidiv
inc
or
mov
retf
cmps
fchs
iret
leave
dec
fisttp
sbb
and
mov
leave
loopne
mov
push
inc
nop
stos
into
sub
inc
sub
pop
pop
hlt
in
mov
mov
retf
dec
jno
mov
es
fsincos
lea
or
loop
popf
mov
cmp
shr
cmovb
and
rcl
jp
add
test
enter
(bad)
shl
mov
and
jmp
nop
sub
daa
cli
jne
dec
leave
sbb
std
fmul
fistp
adc
xchg
daa
add
sar
inc
test
push
in
mov
out
inc
jns
cmp
add
jne
loop
mov
iret
jg
cmp
add
or
push
movaps
rcl
or
cli
push
daa
js
mov
push
pop
push
ins
sub
fstp
test
push
repz
inc
cmp
cmps
dec
pop
mov
xchg
movs
pop
hlt
ja
fsubr
outs
adc
and
mov
mov
xor
fwait
inc
scas
push
push
aam
js
in
sub
cli
mov
jmp
(bad)
popa
test
outs
je
jecxz
fidivr
dec
mov
inc
push
std
jmp
retf
jmp
inc
inc
pop
hlt
(bad)
repnz
mov
inc
cmps
xchg
or
add
fisubr
aas
lea
sub
fistp
ror
mov
mov
pop
aaa
xchg
mov
cmp
mov
or
mov
pushf
push
in
(bad)
mov
xor
sbb
int3
cmps
cld
bound
adc
jbe
lds
push
xor
jp
pop
mov
dec
not
mov
pop
xchg
mov
jo
cmp
or
fnstenv
into
pop
cmp
jg
mov
es
cmps
mov
ds
ss
in
lea
cld
sti
pop
int3
dec
ds
in
bound
mov
xchg
inc
fsub
xlat
sar
cli
push
out
ror
jp
jmp
fsubr
daa
or
ss
sbb
lea
add
les
push
hlt
sub
gs
mov
les
rcl
js
mov
and
mov
mov
mov
gs
movs
sbb
mov
fwait
ds
mov
and
lea
adc
add
in
jecxz
mov
mov
mov
or
ficom
mov
xor
xchg
sub
jae
es
je
mov
call
jg
push
push
pop
jp
dec
ins
jp
je
les
(bad)
or
hlt
xchg
cmp
and
shl
mov
push
push
sub
(bad)
and
sbb
aas
(bad)
into
jl
lea
aam
aad
in
jp
and
into
pop
mov
or
movs
aam
cmps
mov
ret
sbb
dec
jae
or
test
jno
pop
inc
cmp
dec
push
push
mov
adc
ret
cld
sub
xchg
add
and
xor
out
idiv
xlat
les
cmps
out
pop
jmp
popa
gs
cmp
cmp
xlat
(bad)
imul
and
dec
jle
(bad)
or
pop
xor
cli
xor
or
sbb
xchg
push
adc
arpl
xchg
fadd
dec
push
sbb
xchg
jge
mov
ret
inc
push
mov
inc
sub
addr16
mov
mov
pop
out
adc
out
dec
cmp
jge
(bad)
push
dec
dec
jne
shl
repz
(bad)
fisttp
or
jge
push
jmp
sub
jl
xchg
xchg
ja
je
lock
fs
jmp
sub
loop
mov
inc
mov
aam
movs
fnstcw
daa
xchg
hlt
fisttp
dec
jne
xchg
dec
mov
dec
pop
sub
and
lea
ds
sub
lods
push
jmp
jbe
out
not
dec
outs
sub
imul
lahf
mov
fstp
js
ins
push
sti
inc
mov
movs
ret
test
(bad)
push
jne
add
xchg
jge
rcr
test
sub
(bad)
jmp
dec
xorps
sbb
mov
mov
lds
mov
fisttp
mov
jbe
jns
mov
pop
dec
mov
xchg
xor
dec
movs
mov
mov
out
rcr
lods
push
jb
mov
retf
cdq
mov
jge
mov
sub
test
sbb
stos
cs
sub
hlt
scas
add
and
jmp
jb
inc
and
les
pop
jle
(bad)
jns
sbb
push
mov
dec
repnz
sahf
enter
pop
mov
inc
movs
inc
adc
mov
pop
xor
into
mov
retw
cmp
jbe
inc
xlat
jbe
add
push
(bad)
fcomp
lods
cmp
arpl
cdq
push
fwait
or
jge
xchg
xchg
dec
add
jp
pop
and
push
dec
idiv
dec
mov
aam
psubb
leave
dec
mov
retf
call
or
test
mov
das
adc
pop
movs
pop
popf
pop
xchg
xor
call
das
pushf
cmp
xchg
dec
mov
push
pop
push
retf
mov
popa
mulps
adc
repz
xchg
iret
mov
push
and
push
adc
mov
jge
sahf
mov
(bad)
dec
movs
cmp
xor
adc
xchg
jno
xor
xor
mov
inc
int
mov
cdq
cmps
int
jl
mov
dec
jb
pop
add
mov
jb
mov
jg
outs
add
xlat
je
inc
shr
test
retf
mov
mov
push
fdivrp
jb
mov
jecxz
mov
mov
out
xor
outs
outs
sti
or
add
lock
(bad)
mov
xor
sti
stos
out
(bad)
int
stos
cmp
xchg
xor
mul
clc
out
push
mov
pop
dec
xchg
xchg
jne
fld
(bad)
repz
cmc
and
cmp
mov
cli
loope
inc
add
shl
mov
xlat
ret
lds
frndint
xor
jl
pop
in
and
imul
test
test
loope
shl
call
jge
ins
mov
push
sbb
loopne
xchg
fwait
jnp
and
mul
repz
xor
xor
xchg
lea
int3
push
fnstsw
sub
xchg
outs
mov
mov
in
xor
sti
jl
test
xor
retf
jb
(bad)
cmc
push
add
mov
mul
aad
jg
adc
pop
je
fdiv
out
xor
iret
or
shl
push
fidivr
push
test
rol
push
lds
rcr
xchg
dec
jge
sub
js
and
pop
call
dec
pop
in
cwde
sub
sub
and
and
cs
push
jne
(bad)
outs
pop
repz
mov
mov
xlat
push
pop
fcmovnb
inc
sbb
lods
push
popf
cmp
xchg
stos
mov
adc
cmps
fs
ins
icebp
mov
jmp
fs
loop
lahf
jne
pop
rcr
pop
aam
popf
or
out
xchg
loop
sbb
cmp
scas
and
int
mov
cmp
add
mov
dec
in
jp
leavew
(bad)
repnz
dec
sbb
int3
inc
sbb
cmp
add
xchg
cwde
xchg
icebp
push
dec
mov
js
mov
mov
lock
fidivr
inc
push
xchg
cmp
xchg
popf
gs
xlat
mov
mov
mov
cmps
sub
mov
cmp
add
or
dec
cmc
stos
cwde
cli
adc
adc
lods
adc
arpl
xchg
bound
retf
sub
movs
aas
mov
xchg
shl
in
loope
fisttp
dec
or
dec
cs
cmps
fld
fcomp
adc
sti
shr
rol
push
sub
jnp
fnsave
sahf
sbb
aad
or
mov
mov
fwait
or
idiv
add
je
dec
or
dec
iret
(bad)
pop
xchg
pop
xor
repnz
sub
popf
jbe
scas
test
push
ins
pop
ror
mov
mov
or
mov
fwait
xchg
and
adc
clc
aaa
imul
push
std
jl
inc
cdq
mov
popf
aaa
test
(bad)
sub
inc
aam
push
cdq
pop
lds
mov
fadd
sub
cmp
sub
cli
aam
in
cmps
movntps
jns
xor
xor
repz
mov
sahf
xchg
jne
imul
xchg
sti
ins
and
push
addr16
xlat
mov
retf
push
(bad)
jne
lods
jns
and
ja
sub
push
push
push
(bad)
rcl
adc
sbb
movs
addr16
inc
(bad)
nop
xchg
inc
cdq
push
sbb
int
mov
jle
loope
cmc
test
cmp
mov
inc
pop
add
rcr
je
leave
out
ficom
icebp
test
sbb
popa
inc
add
stos
lods
in
xchg
pop
lods
mov
xchg
inc
dec
(bad)
call
mov
leave
nop
call
mov
imul
add
daa
jno
cs
nop
int
dec
ins
(bad)
cmc
imul
jge
xor
mov
pop
xchg
clc
test
daa
xor
jb
push
mov
sub
jmp
add
xchg
jbe
enter
out
pop
cdq
xchg
popf
jmp
stos
cmp
inc
ins
mov
and
out
arpl
repz
adc
int
xchg
ins
pop
call
inc
scas
mov
fs
loopne
neg
test
or
cmp
mov
retf
retf
dec
push
jns
daa
cmp
pop
sbb
iret
mov
or
test
inc
sub
mov
sahf
aaa
stos
adc
xchg
pop
iret
outs
nop
clc
loopne
mov
pop
cs
lahf
add
jl
loop
cmp
shl
push
adc
movs
fmul
mov
shr
inc
mov
das
scas
dec
sub
mov
add
lods
cdq
dec
sbb
jo
jae
mov
xchg
test
xchg
xlat
xchg
sbb
pop
pop
movs
pop
sti
inc
jb
mov
call
in
lds
aaa
push
add
stc
loope
iret
das
sub
loope
or
dec
lods
gs
imul
pushf
jb
push
and
push
xchg
jle
and
mov
mov
mov
mov
je
mov
mov
and
pop
inc
pop
test
and
pop
stos
mov
mov
(bad)
pop
xor
out
jecxz
and
jge
aam
and
jmpw
shl
movs
pop
xchg
fcom
dec
lods
mov
xchg
imul
xor
out
retf
daa
push
gs
ds
jmp
mov
or
cmp
or
or
mov
lea
ret
push
loopne
mov
daa
mov
sbb
xchg
inc
mov
lds
test
aad
sbb
add
call
loopne
(bad)
jbe
retf
dec
aaa
mov
adc
test
mov
push
(bad)
and
(bad)
push
push
jo
test
into
popf
call
sbb
test
xlat
ins
fidivr
es
xchg
mov
add
movs
xor
push
cmc
test
outs
aam
jnp
sub
ins
dec
ds
mov
xchg
imul
add
jne
xchg
ins
push
dec
inc
and
cmp
and
and
jg
pop
ja
les
xchg
cmp
cdq
(bad)
push
push
out
adc
pop
mov
(bad)
add
int
rol
mov
jmp
pop
add
sbb
mov
int3
xchg
aaa
pop
mov
jmp
div
out
sbb
(bad)
sub
xchg
leave
stc
gs
pop
cmp
(bad)
jne
cmps
cwde
mov
out
mov
push
and
and
gs
imul
ss
jno
adc
or
xchg
mov
xchg
pop
fnstsw
in
push
scas
and
je
or
sub
outs
jne
out
sbb
(bad)
out
or
ror
mov
adc
jne
or
dec
lods
sar
pop
aad
stc
lods
xor
inc
fdivr
outs
xchg
jg
or
adc
(bad)
dec
dec
pop
(bad)
(bad)
adc
cld
mov
fsubr
icebp
mov
jmp
mov
xchg
sti
aad
loope
push
inc
ss
imul
adc
stos
mov
loop
pop
fwait
lock
push
adc
data16
inc
(bad)
clc
pop
lds
add
stc
cmps
adc
and
xchg
lods
xor
or
dec
ins
repz
popa
pop
mov
fwait
dec
xchg
add
push
or
nop
pop
aam
jae
out
adc
add
pop
cmp
or
sar
push
aas
xor
in
mov
lahf
fdiv
lock
outs
lods
and
cli
and
test
(bad)
push
push
pop
mov
mov
fild
cmp
out
xor
outs
(bad)
hlt
add
push
xchg
and
jns
jnp
div
adc
mov
cmp
(bad)
and
xchg
mov
pop
pop
adc
mov
jnp
ret
mov
neg
aam
jmp
lds
scas
ss
inc
mov
pusha
push
int
sbb
(bad)
movs
movs
push
(bad)
stos
sub
sbb
cmp
mov
mov
xchg
add
mov
(bad)
add
inc
dec
lds
repz
push
(bad)
stos
mov
hlt
xchg
add
and
or
pop
test
fmul
mov
in
(bad)
jo
pop
pop
inc
ja
jge
lea
xor
pushf
pop
inc
daa
ficomp
out
cmp
in
add
pop
stos
mov
jp
xchg
js
mov
int3
or
xchg
xlat
sub
dec
sbb
dec
fidiv
fwait
pop
(bad)
loop
stos
bound
and
stos
mov
movs
ja
hlt
pop
pushf
ret
call
pop
and
push
std
mov
js
(bad)
aad
jp
and
cdq
movs
cwde
or
mov
test
repz
push
lods
mov
mov
sahf
push
clc
frstor
or
sub
jne
pop
mov
enter
cmp
mov
mov
out
pusha
cmp
mov
push
pop
push
shl
(bad)
iret
mov
cmps
aaa
in
adc
dec
pop
and
mov
dec
retf
inc
pop
cmp
int3
sbb
ror
test
fld
xchg
push
retf
xor
xor
dec
retf
pop
les
sub
push
add
(bad)
pop
ins
add
xor
push
movs
aaa
push
ror
dec
lds
and
cli
cmp
xor
add
bound
sub
sbb
stos
add
add
arpl
(bad)
adc
sub
xor
pop
loopne
mov
push
mov
ret
les
add
xchg
fld
test
out
int3
mov
sbb
mov
xchg
mov
pop
aas
adc
leave
fcmovu
out
xchg
sbb
fist
cmp
dec
inc
sub
jo
push
jmp
push
ret
fidiv
pop
xor
mov
mov
neg
push
xlat
cmp
mov
rcr
cmps
cmc
jg
lods
pop
jo
lods
push
xor
(bad)
xchg
cwde
test
sbb
lods
arpl
popf
xchg
in
pop
mov
jg
pop
sub
mov
xchg
mov
mov
test
cli
dec
mov
aam
je
sub
cmc
ds
push
in
loopne
mov
jbe
mov
ins
sub
jne
and
clc
scas
test
xor
dec
mov
lods
jb
pop
clc
mov
add
push
push
xchg
jmp
xor
sbb
xchg
outs
inc
test
jnp
sbb
call
inc
(bad)
jecxz
push
fcom
xchg
es
push
push
xchg
loop
dec
push
jecxz
xor
jne
mov
mov
xor
xchg
lds
jbe
daa
or
imul
mov
xchg
push
sub
xchg
les
xchg
ins
push
cmp
jbe
inc
mov
outs
pop
mov
sbb
rol
(bad)
push
loop
sbb
mov
leave
mov
dec
xor
aaa
jns
fbld
adc
add
data16
mov
dec
mov
pop
push
cmps
fist
dec
lods
xchg
int
gs
(bad)
ins
retf
dec
shr
mov
(bad)
push
je
test
sbb
pop
stos
jg
retf
mov
sub
fcmovnu
xchg
out
sbb
lock
dec
mov
mov
enter
mov
mov
popf
mov
sub
call
xchg
sbb
or
mov
mov
aam
cdq
xchg
jnp
leave
push
ins
lods
aaa
(bad)
mov
(bad)
in
jmp
mov
mov
(bad)
mov
les
jge
loopne
mov
sar
sbb
hlt
out
shr
sar
outs
loopne
inc
outs
inc
cmps
pop
jmp
popa
int3
js
clc
dec
pop
dec
ins
popf
fst
sub
mov
push
fs
adc
arpl
arpl
sub
fisttp
sbb
adc
adc
mov
bound
(bad)
or
je
in
add
sbb
outs
or
and
mov
xlat
enter
cmps
jne
iret
mov
(bad)
xor
aaa
jo
sub
loop
add
fdiv
jle
sahf
pop
dec
test
dec
scas
mov
adc
retf
xor
lds
xor
mov
xchg
cwde
jmp
xchg
mov
(bad)
aas
test
xchg
inc
into
pop
popa
pop
adc
fcomp
in
fisttp
cmp
sub
je
rcl
retf
mov
lods
or
mov
in
cmp
adc
inc
sub
push
push
mov
jbe
mov
pop
sbb
sbb
(bad)
pop
nop
jmp
ss
pop
aad
fstp
nop
fisub
sbb
js
iret
movs
add
add
mov
popa
repz
or
ret
dec
dec
mov
jae
push
push
imul
push
cmp
xor
add
sar
fst
icebp
rol
push
push
pop
lahf
xor
mov
mov
pop
mov
fld
(bad)
pop
inc
rol
sbb
mov
repz
sar
mov
int
stos
(bad)
js
mov
pop
xchg
mov
rcr
into
call
mov
ret
xchg
pop
and
dec
cs
fwait
jnp
mov
(bad)
sub
mov
or
prefetch
or
test
mov
cli
jae
ror
mov
lahf
inc
and
in
retf
push
aad
(bad)
push
adc
dec
jle
xchg
fld
cmp
xor
int3
mov
jne
aam
aas
jns
xchg
leave
and
cmp
jns
xor
xor
addr16
test
in
jg
call
dec
or
push
ret
pop
push
cmp
jnp
test
sub
dec
cdq
cwde
leave
sub
das
and
and
sti
rcr
mov
mov
push
push
lods
popf
movs
push
rcr
xor
xchg
in
pop
sbb
test
mov
jmp
sbb
clc
ret
mov
ret
cmps
cmps
pop
cwde
pop
test
sub
xor
jb
pop
jge
dec
nop
push
inc
js
das
sahf
dec
aad
adc
sbb
std
inc
pop
lahf
(bad)
xor
in
sub
dec
clc
pop
imul
dec
pop
push
add
cmp
cmps
xchg
jns
mov
loop
dec
mov
jb
imul
int3
rol
and
js
addr16
(bad)
or
cmp
and
je
mov
push
stos
xor
into
and
mov
ror
adc
mov
(bad)
lock
jmp
sbb
mov
imul
fwait
jne
stos
inc
in
pushf
lock
sub
jae
push
loop
icebp
xchg
jmp
out
fldcw
mov
aam
inc
cmp
xchg
rol
or
xchg
mov
std
inc
pop
popf
sbb
xchg
cmp
or
dec
out
add
push
xlat
stc
repz
add
mov
mov
mov
lods
cmp
test
xor
cwde
mov
jmp
add
ficom
push
pusha
out
adc
int
lock
inc
call
xchg
sbb
int
out
xor
inc
icebp
or
popa
in
rcr
hlt
fs
sbb
inc
sbb
cdq
push
call
outs
push
ins
rol
dec
cs
jb
dec
push
lock
inc
test
aaa
test
in
cmp
enter
cmp
movs
int
xlat
sbb
pop
sub
pop
pop
or
setp
out
int
pop
pop
out
mov
mov
mov
pop
out
and
aaa
jno
xor
lahf
xchg
jbe
push
xchg
add
push
sub
scas
into
arpl
mov
push
into
inc
stos
test
inc
(bad)
(bad)
xchg
sub
mov
cmp
(bad)
cmp
inc
pop
dec
repz
jne
shl
shr
(bad)
pushf
call
sbb
mov
cmc
addr16
dec
and
push
push
loop
stos
sub
mov
add
imul
hlt
(bad)
dec
loope
cld
dec
xchg
push
cmp
mov
cmps
or
aam
stos
stc
xchg
sbb
push
popf
and
add
fistp
inc
xor
inc
push
and
and
sti
jmp
popa
pushf
push
scas
mov
sahf
jae
xchg
and
(bad)
out
stc
jno
out
add
pushf
cs
aas
pop
retf
js
xchg
stos
mov
mov
dec
cmp
fyl2xp1
pop
dec
(bad)
nop
arpl
push
enter
dec
mov
mov
dec
dec
mov
jp
out
cmps
sti
rcr
test
pop
or
mov
pop
or
push
outs
inc
shr
or
mov
cmp
adc
outs
mov
mov
je
movs
xor
ss
mov
les
mov
(bad)
fidivr
pop
jg
mov
or
inc
inc
arpl
icebp
xchg
loop
push
pop
push
add
and
sub
push
dec
neg
and
inc
jmp
dec
(bad)
movs
test
push
nop
push
ins
retf
dec
stos
dec
mov
xchg
test
(bad)
stos
push
push
inc
mov
and
ret
ja
aam
stos
jmp
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
cmp
aam
dec
and
mov
or
daa
jge
popf
mov
cmps
scas
inc
movs
pop
cmp
loop
xor
sbb
mov
dec
cmc
loope
outs
dec
stc
loopne
pop
jns
pusha
stos
mov
sbb
dec
ss
push
loop
fstp
add
scas
add
sbb
cmp
ret
(bad)
out
jmp
or
cmc
xchg
pop
push
push
sub
push
dec
inc
pop
(bad)
dec
es
mov
(bad)
pop
ins
mov
mov
(bad)
out
clc
jb
add
das
xchg
lods
js
std
and
into
test
dec
sub
sub
fs
add
jbe
es
shr
movs
add
add
test
outs
sahf
push
es
pusha
mov
fmul
lds
aaa
shl
xchg
and
bound
cmc
cmp
cmps
fs
stos
rcr
push
jmp
cmp
dec
mov
add
inc
xchg
(bad)
jmp
pop
sbb
lods
popa
push
mov
jg
sar
int
or
lea
imul
pop
movs
(bad)
lods
sub
add
xchg
loopne
cmp
jns
(bad)
dec
pop
movs
imul
mov
clc
or
nop
movs
push
cmp
arpl
inc
fmul
leave
xlat
mov
repnz
push
les
inc
cmp
adc
ror
xlat
sbb
add
int
dec
fsubr
xchg
andps
or
adc
leave
dec
scas
mov
(bad)
bound
sbb
push
jle
pop
xor
jmp
std
loopne
aam
mov
lea
outs
cdq
xor
cdq
add
lods
dec
cmp
dec
and
mov
push
sar
push
xchg
or
outs
test
and
mov
push
fld
jns
in
ins
mov
mov
cdq
mov
pop
pop
cld
mov
mov
xor
dec
fwait
test
fdiv
stc
mov
repnz
int
inc
sbb
std
sub
cs
sbb
(bad)
lods
test
je
mov
jmp
xor
sti
mov
call
and
and
cmp
push
stc
and
shr
enter
lea
scas
cld
add
out
jmp
sahf
fs
fiadd
fiadd
pop
leave
mov
sub
sbb
aam
test
or
outs
xchg
add
bswap
adc
cmp
xlat
test
xchg
or
hlt
shr
dec
inc
inc
and
shl
inc
sub
mov
imul
aad
gs
xor
clc
and
das
fisttp
dec
inc
mov
sub
out
xor
fild
dec
and
cmp
sub
(bad)
sub
ja
mov
cmp
cmp
pop
cmp
push
or
cmps
mov
(bad)
ret
(bad)
jp
fstp
test
sub
daa
cmc
xor
popa
cmp
aaa
and
cmp
and
in
jb
(bad)
cdq
movs
fwait
jno
pop
leave
stos
xor
pop
fst
jmp
repz
(bad)
or
stos
movs
mov
shl
pushf
mov
mov
xchg
(bad)
xor
or
jnp
push
adc
inc
xchg
movs
popa
xor
cmp
into
fdiv
adc
cmp
add
dec
outs
adc
pop
arpl
xchg
add
adc
out
fucom
mov
int
cwde
imul
jmp
lds
out
test
fdiv
test
imul
imul
mov
not
popf
(bad)
mov
cdq
repnz
fstp
and
mov
ins
cld
fidivr
mov
and
xchg
mov
dec
enter
pop
fstp
mov
ins
pushf
and
mov
ins
mov
test
ins
inc
add
imul
sbb
xchg
shl
jmp
iret
push
push
cmps
adc
scas
ret
push
jae
mov
into
fs
cli
adc
push
adc
push
cld
gs
mov
push
dec
mov
lods
mov
or
into
sbb
hlt
arpl
pop
jbe
in
int
inc
repz
aad
sbb
sbb
mov
cmp
aaa
push
dec
push
in
cmp
lahf
in
push
pop
in
ja
pop
nop
push
jbe
rcr
stos
push
lea
xchg
lods
add
shr
pop
xchg
pop
sub
cmp
lods
adc
test
inc
dec
jmp
imul
inc
jle
xchg
ret
add
pop
(bad)
ret
sti
mov
rcl
pop
xchg
push
and
xor
push
mov
dec
mov
add
dec
mov
xor
inc
lock
arpl
sti
inc
enter
iret
movs
fld
sub
cmp
inc
inc
or
or
pushf
xchg
or
jp
jmp
fistp
or
mov
shl
add
std
std
dec
cdq
les
dec
jmp
mov
sahf
sbb
test
and
sbb
in
mov
xor
fnstsw
cmc
mov
jge
dec
(bad)
sti
jmp
cmp
into
sbb
fisubr
sbb
data16
push
adc
movs
test
adc
and
adc
inc
xchg
pushf
push
shl
pop
pop
jle
fisttp
jp
hlt
dec
or
and
cdq
push
stc
and
xchg
aas
jb
dec
mov
dec
(bad)
aam
sub
add
mov
pusha
inc
and
sbb
mov
dec
jg
cmp
inc
lds
pop
jl
or
in
adc
mov
push
xchg
retf
and
push
pop
add
movs
xchg
jg
cmps
pop
xchg
xor
adc
iret
mov
xor
out
jns
icebp
or
pop
add
sub
jecxz
dec
pop
mov
test
lods
les
mov
adc
inc
ds
das
call
sti
rol
push
xchg
ins
gs
aam
imul
jnp
push
cli
dec
dec
mov
and
es
cli
in
mov
push
in
mov
dec
test
cdq
int3
cs
push
dec
not
das
adc
js
ret
and
adc
loope
fwait
mov
(bad)
pop
js
push
jecxz
dec
neg
stc
or
jbe
mov
or
adc
sbb
and
sbb
cli
xor
arpl
(bad)
or
xor
xchg
jnp
inc
(bad)
jmp
ret
call
jl
or
in
inc
in
lds
add
jo
xor
jge
xor
inc
mov
inc
rcr
pop
push
jae
cmc
lahf
jne
out
cmp
xor
mov
mov
pop
cwde
mov
fwait
movs
jae
or
sbb
aad
not
ja
ins
xchg
jne
adc
into
xchg
ds
retf
sbb
cmps
mov
test
test
dec
stc
push
xor
pop
jmp
sub
loope
push
jge
clc
je
(bad)
test
cmp
ds
out
cmp
cmps
ficomp
stos
cli
push
adc
adc
iret
sti
mov
jge
sub
movs
xor
rcr
(bad)
outs
pop
sub
mov
(bad)
pop
mul
inc
pusha
xor
cmps
(bad)
rcr
xchg
sbb
js
test
xchg
jne
add
ret
sar
xchg
mov
sbb
and
ins
popf
jne
in
lea
jno
lods
inc
sbb
addr16
cwde
pusha
mov
push
outs
loop
pop
push
inc
pop
cs
mov
mov
aas
push
shl
cmp
sbb
sahf
retf
jb
mov
ret
leave
jl
cdq
mov
in
pop
clc
lock
sar
test
push
jecxz
clc
call
add
aad
es
dec
(bad)
popa
movs
lock
push
pop
ret
(bad)
jp
call
ret
std
sahf
xchg
(bad)
out
mov
pushf
mov
repz
in
pop
adc
add
jmp
xor
ins
inc
push
fs
movs
sahf
test
cld
dec
popa
push
call
mov
ds
lock
cmp
push
xchg
test
fs
stos
jmp
out
movs
dec
ins
lea
mov
loop
mov
adc
fisttp
loop
dec
mov
out
jg
rcr
retf
sbb
out
sub
out
dec
mov
pop
mov
cdq
lea
xchg
xchg
sbb
pop
adc
push
add
lods
xchg
loop
xor
into
add
sbb
push
mov
lock
push
pop
sub
mov
fistp
shr
jl
and
pop
jp
xchg
in
push
loope
jge
cmps
xchg
or
jle
add
adc
inc
lds
inc
push
and
dec
push
int3
sbb
inc
inc
mov
push
inc
xor
aad
ret
or
aaa
movs
repz
jb
retf
sub
mov
push
jmp
lds
loope
outs
loopne
popa
inc
jne
lahf
pop
lods
xchg
nop
jno
push
add
pop
scas
cdq
inc
cli
mov
mov
xchg
dec
ins
(bad)
cwde
push
dec
xchg
sti
jno
cmps
jnp
pop
dec
push
data16
dec
outs
dec
out
jmp
dec
imul
lahf
and
cmp
push
aam
cmp
les
lods
bound
or
sahf
in
(bad)
pop
aam
inc
sub
std
sub
in
lea
and
pop
sbb
or
frstor
dec
fs
pop
mov
loope
imul
retf
mov
sub
fst
or
xchg
test
push
jg
mov
dec
out
inc
mov
aam
loop
(bad)
js
mov
or
(bad)
fild
cmp
xchg
enter
clc
xchg
in
cli
fmul
fadd
dec
add
dec
shr
cmp
or
iret
mov
and
xchg
add
daa
add
lea
mov
int
data16
xchg
jmp
lock
and
mov
xchg
fld
jo
arpl
cdq
push
ins
sbb
mov
sbb
sbb
aaa
jp
push
sbb
push
cmp
ins
xor
or
mov
jo
sub
jo
mov
push
fsub
icebp
mov
nop
push
push
add
sbb
adc
sub
mov
xor
jbe
into
add
mov
and
mov
hlt
cwde
mov
mov
je
inc
jg
jge
jg
sub
(bad)
adc
imul
fwait
lahf
ja
cmc
test
nop
hlt
xchg
jge
jo
rcl
jecxz
lahf
retf
das
jecxz
xchg
out
mov
in
cmps
push
ret
imul
and
jb
(bad)
mov
adc
adc
sahf
in
xor
in
inc
mov
stos
fcom
xlat
(bad)
mov
dec
sub
mov
sahf
cmp
cmps
pop
xor
scas
enter
pop
mov
pushf
stos
(bad)
ret
xchg
and
popa
stc
shl
pop
jne
inc
fdivr
or
mov
test
and
or
jbe
mov
cmp
dec
mov
mov
or
leave
(bad)
cmp
sub
and
sar
mov
lahf
inc
popa
lods
ror
ror
out
cmp
jg
jmp
jmp
loope
xor
sbb
jmp
jo
js
xchg
and
sbb
ins
shl
stos
(bad)
push
popa
jmp
dec
xchg
xchg
mov
out
xor
sbb
adc
test
mov
sbb
popf
jb
push
pop
and
xchg
inc
adc
sbb
cmp
mov
fs
les
inc
dec
sbb
xchg
jbe
movs
push
adc
fs
movs
mov
call
addr16
add
xchg
jmp
and
ror
hlt
xchg
cmp
mov
sar
and
les
jecxz
fcmovne
inc
adc
inc
or
cmp
lock
sbb
bound
xor
cmps
or
(bad)
xchg
dec
sub
loop
repz
sub
test
pop
pop
xchg
mov
ss
or
jnp
push
push
push
inc
lock
adc
out
fnstsw
xor
mov
es
ficomp
scas
pop
and
inc
and
call
or
or
sar
inc
test
cld
sub
std
dec
dec
das
arpl
mov
xchg
mov
out
sbb
xchg
push
jmp
add
int
xchg
cdq
aam
xchg
ret
xor
inc
jae
adc
sub
(bad)
push
add
test
psrld
mov
pop
mov
in
cmps
jnp
jno
push
cmp
aam
mov
jle
jae
push
dec
jmp
es
cmp
mov
mov
mov
push
call
arpl
xor
jg
(bad)
fstp
pusha
mov
mov
mov
fisttp
cmp
push
shl
add
movs
mov
popf
nop
aaa
int
mov
retf
ins
jg
mov
dec
arpl
mov
shl
outs
retf
sbb
(bad)
nop
cmps
xchg
xor
test
sti
pmaddwd
or
or
jecxz
ret
test
test
xchg
mov
push
ins
daa
mov
fwait
cmps
push
xchg
pop
xchg
ins
jb
sbb
xchg
fwait
and
xor
push
leave
and
js
pop
and
xchg
ror
(bad)
hlt
int3
cmp
mov
cwde
ds
test
fld
xchg
add
xlat
ret
adc
and
push
lss
adc
adc
cli
out
int
adc
or
jb
or
mov
xchg
mov
sub
cli
push
and
push
dec
aam
sub
retf
mov
mul
fnstsw
mov
addr16
loop
arpl
in
mov
mov
test
sub
lds
cld
jnp
std
fwait
in
retf
in
xchg
jmp
fs
dec
sbb
mov
mov
outs
nop
ror
mov
pop
imul
sahf
hlt
sbb
or
mov
adc
push
arpl
and
bound
popf
sbb
in
sub
add
stos
mov
and
rcl
pop
popf
jle
ror
xor
outs
in
xchg
jb
(bad)
retf
xor
adc
das
jp
test
jnp
mov
das
sbb
rcl
into
mov
mov
sub
cmps
xrelease
push
ins
inc
inc
push
aaa
out
lds
test
mov
(bad)
pusha
dec
stos
mov
adc
inc
pop
(bad)
cmp
ds
ret
invd
cmp
mov
lahf
popa
js
xor
fwait
and
sbb
imul
aaa
aas
aam
aam
jg
and
ins
and
cmp
out
jl
jo
mov
les
sub
clc
cmp
sub
int
push
pop
jmp
or
sbb
adc
mov
test
fwait
ds
lods
popa
jne
push
xchg
xchg
cmp
dec
mov
inc
xor
in
xor
add
mov
cmp
jge
push
mov
loopne
mov
stos
outs
iret
scas
scas
cmp
xchg
leave
cli
fdivr
int3
sub
enter
(bad)
pop
or
aaa
sbb
mov
enter
jo
jnp
test
pop
xchg
sbb
xor
test
adc
cmp
dec
sbb
xor
xchg
stos
xchg
ss
sub
dec
fs
and
test
jb
lea
adc
mov
leave
js
lea
xlat
dec
out
inc
cmp
in
add
in
ds
mov
mov
inc
push
cmp
adc
addr16
test
pop
jecxz
fs
inc
imul
repnz
sub
test
sbb
or
jl
xchg
mov
or
pop
cwde
sbb
sub
sub
fs
shl
loopne
jmp
mov
cmps
in
(bad)
aad
imul
sbb
xchg
sub
pop
add
cmp
lock
movs
out
jmp
pushf
cmps
sub
fsub
into
inc
cmp
adc
int
lds
stos
inc
dec
fs
out
mov
lahf
or
push
leave
xor
add
fs
enter
pusha
call
cmp
mov
fadd
aaa
push
push
cdq
jne
sub
nop
add
mov
cmp
addr16
mov
cmps
lock
cmp
shr
cmp
iret
and
sub
mov
sbb
push
inc
clc
add
test
dec
mov
fiadd
pop
push
in
icebp
inc
fsub
loope
add
std
cmp
xchg
pop
pop
bound
sub
mov
jl
(bad)
dec
mov
xor
lods
add
and
adc
neg
addr16
or
and
or
imul
add
nop
cmp
aad
lahf
mov
sti
fstp
mov
or
and
pop
call
retf
not
scas
lods
into
dec
and
loopne
cmp
sbb
and
repz
(bad)
(bad)
std
imul
sub
jae
pop
fidivr
addr16
cmp
mov
addr16
(bad)
sub
rol
cmp
call
jne
xor
(bad)
or
shr
dec
rcr
test
push
fdivr
out
and
mov
out
mov
test
lock
jne
jb
aam
dec
cmp
xor
pop
cmps
jb
cmps
ja
dec
mov
lods
xchg
adc
push
xchg
mov
jo
ja
xchg
adc
push
dec
lods
fisttp
sub
inc
repz
mov
xchg
add
jp
fimul
xlat
pop
pop
stos
pusha
loopne
jmp
jecxz
clc
stc
(bad)
arpl
jecxz
xchg
jp
mov
xchg
out
lods
sbb
jmp
dec
xchg
icebp
fnsave
mov
pushf
into
scas
adc
hlt
pop
out
jg
xchg
add
inc
mov
mov
clc
xor
scas
push
lahf
jmp
jbe
enter
or
inc
or
ss
stos
into
xlat
leave
icebp
mov
leave
ja
dec
mov
leave
pop
pop
jge
pop
in
pop
in
hlt
mov
div
retf
cs
jns
inc
das
movs
inc
xchg
ror
and
nop
fadd
xchg
push
push
mov
popa
pop
jb
(bad)
fld
and
cmp
leave
inc
dec
mov
in
and
adc
fsubr
push
fst
cmp
mov
pop
je
stos
cmps
add
push
cmps
jo
or
pop
add
mov
cmp
push
push
jmp
xor
adc
jo
mov
stc
enter
pshufw
aas
(bad)
cmp
add
pop
popa
add
ret
xor
mov
iret
test
es
adc
das
cmp
rcl
mov
loope
xchg
cmovno
inc
mov
inc
cli
neg
cmp
ss
pop
cmp
retf
cmps
mov
ss
ss
lods
cmp
adc
mov
and
in
inc
inc
inc
mov
(bad)
scas
shl
push
daa
lds
mov
stos
nop
or
mov
outs
fbld
xchg
out
inc
loop
add
(bad)
enter
jecxz
sub
and
fsub
cld
(bad)
push
rol
shr
je
xor
push
movs
push
or
fs
mov
jle
sbb
jge
fisttp
ret
movs
mov
pop
ret
loope
sub
cdq
enter
jmp
sti
aaa
inc
test
repz
ret
adc
jmp
adc
cmps
pop
(bad)
aam
in
dec
pop
jae
mov
xchg
mov
test
ficomp
push
mov
mov
sar
xchg
push
mov
inc
fs
cmp
pop
xchg
in
xor
imul
cmp
mov
out
mov
mov
outs
mov
iret
enter
repz
inc
jnp
in
loop
jnp
cmps
xchg
xor
mov
dec
shl
ss
sbb
out
test
rcr
stos
ins
cmp
sbb
xor
ins
adc
int
bound
pop
jl
pop
lea
mov
jmp
stos
popa
dec
add
test
push
fisttp
push
shr
cmp
shr
cmp
mov
cmp
aad
stc
iret
cmp
and
(bad)
adc
or
pop
xchg
popf
sbb
lods
movs
loop
ds
icebp
je
enter
mov
pop
inc
ds
jmp
bound
lea
cmp
cmp
sahf
cmc
jecxz
and
jp
mov
jbe
aam
gs
and
out
push
dec
mov
les
in
xor
ror
repnz
call
jecxz
leave
test
mov
bound
leave
mul
stc
add
retf
movzx
ret
loope
jnp
lea
xchg
mov
idiv
pop
pusha
or
repnz
push
sub
push
scas
mov
cmp
mov
push
ins
adc
sbb
or
in
arpl
fild
xchg
fadd
cmp
std
jl
pop
push
cmp
mov
(bad)
xor
add
xchg
out
xlat
and
inc
inc
outs
out
fwait
inc
mov
out
cmp
add
mov
popf
pusha
or
sub
xchg
sar
rcr
mov
loop
add
int
ret
adc
repnz
rcl
pop
aaa
sti
jle
lea
xor
adc
adc
sbb
cmp
jb
and
adc
mov
adc
fist
dec
test
(bad)
lods
bound
pushf
cwde
sbb
cmc
fwait
shl
sahf
jae
xchg
cmp
mov
mov
cwde
test
mov
inc
cld
or
rcr
js
push
repz
movs
jb
sub
mov
aad
ds
inc
loope
inc
imul
pop
sub
shr
pushf
(bad)
jno
(bad)
dec
cmps
pop
out
lock
fisubr
pop
rol
adc
add
ja
mov
cmc
mov
jb
jae
sar
mov
sbb
fs
cmp
dec
cmp
jl
(bad)
sub
add
(bad)
enter
das
stos
pop
fsubrp
test
mov
mov
push
repnz
repnz
lock
push
jbe
push
push
icebp
sbb
jae
mov
repnz
out
repnz
sahf
cmps
iret
cmps
retf
push
test
cmp
push
jge
bound
icebp
popf
vcvtdq2ps
xlat
je
int
mov
mov
mov
push
push
mov
add
inc
mov
pop
inc
push
ins
scas
sbb
mov
dec
mov
inc
in
push
jge
iret
(bad)
std
mov
pushf
fisubr
jle
neg
pusha
adc
adc
xor
dec
imul
inc
inc
sahf
pop
and
mov
jg
call
retf
xchg
pop
ins
ins
cmc
sahf
cmp
mov
mov
leave
pop
test
inc
fimul
shl
cs
push
and
sbb
fidiv
lds
mov
lds
adc
push
js
in
sub
je
jmp
xor
jb
and
adc
es
ficom
aam
ret
rcr
mov
mov
arpl
aas
sbb
dec
mov
ror
(bad)
(bad)
push
or
jnp
pop
lock
movs
aas
lds
cmc
push
push
(bad)
out
sub
lock
inc
mov
and
ins
cmps
adc
dec
loopne
xchg
mov
lds
nop
rol
test
jns
retf
inc
and
lock
cmps
pop
hlt
sahf
jge
lods
(bad)
sbb
iret
jecxz
add
into
cmp
movs
test
sti
cdq
jle
xor
fmul
lea
js
sub
mov
sbb
push
or
and
sbb
xor
add
int
jge
mov
cmp
add
jne
pop
xor
test
imul
lods
int3
pop
das
ja
cmp
jmp
adc
(bad)
and
pop
sti
jnp
daa
jne
aas
or
dec
cmp
or
sbb
int3
xor
cmps
jp
xlat
push
xor
adc
pop
xchg
js
pop
in
imul
push
dec
inc
sbb
pop
jmp
int
add
adc
push
fnstenv
adc
pop
push
adc
pushf
fyl2x
xchg
adc
(bad)
out
test
std
mov
pop
dec
dec
(bad)
movs
mov
sub
mov
lock
in
dec
imul
and
int3
jl
lahf
aad
dec
push
in
sbb
push
mov
aaa
fs
cmp
mov
rcl
jmp
adc
shl
das
xchg
adc
mov
push
and
loopne
jmp
add
lds
mov
icebp
push
sbb
push
(bad)
out
add
leave
or
call
mov
cmp
addr16
inc
dec
push
gs
or
ds
test
call
jmp
arpl
xchg
popf
xchg
ret
jmp
adc
outs
jae
xchg
adc
leave
xor
lods
jnp
lock
pop
in
ds
push
or
jge
in
or
(bad)
clc
sub
mov
in
adc
sbb
push
jno
iret
jle
pop
jo
mov
mov
adc
arpl
js
arpl
ja
ffreep
mov
adc
call
into
pop
ror
gs
fldz
dec
in
mov
mov
add
outs
stc
lock
mov
pop
xchg
retf
ret
daa
(bad)
pop
loopne
or
or
adc
mov
xchg
adc
iret
push
call
pop
add
mov
add
das
std
mov
sbb
int
pop
xor
sbb
cdq
adc
enter
pop
stc
jmp
test
aam
inc
sub
adc
inc
call
xor
or
pop
test
mov
dec
outs
outs
jb
rcl
pop
loop
sbb
(bad)
push
mov
movs
(bad)
sbb
and
ret
mul
bound
js
xor
or
xchg
xor
sub
lea
scas
sbb
mov
iret
shl
loope
fmul
mul
dec
gs
push
fwait
shl
or
pusha
xchg
(bad)
jl
les
cmps
mov
pop
icebp
push
dec
js
jge
test
iret
and
mov
neg
(bad)
xchg
sbb
test
jnp
inc
(bad)
mov
xor
push
(bad)
fcomp
stos
mov
pop
cmc
jbe
test
mov
push
and
cwde
push
sti
fwait
jp
xchg
test
cdq
fstp
sbb
inc
add
push
pop
jae
inc
shr
sub
repz
push
outs
xor
jmp
es
pop
scas
or
sbb
arpl
pop
popa
add
sub
or
pushf
cmps
or
data16
xchg
stc
jo
pop
sahf
mov
mov
jle
xchg
stos
or
fadd
loop
sti
add
cmp
(bad)
(bad)
les
sub
sbb
add
push
mov
mov
inc
hlt
arpl
hlt
xlat
adc
cwde
stc
pop
add
leave
xchg
mov
pop
inc
xchg
and
adc
push
retf
out
xchg
cmp
inc
cmp
inc
mov
jl
inc
jle
xchg
sub
rol
sbb
(bad)
mov
cmp
addr16
cmovbe
retf
cmp
test
cwde
(bad)
xchg
push
lea
mov
mov
fnstsw
lods
stos
adc
xchg
lea
mov
retf
scas
mov
jl
dec
shl
scas
mov
jl
in
imul
and
ret
sahf
push
xchg
mov
dec
push
call
sub
mov
pop
dec
xor
call
neg
mov
fadd
div
jb
push
cmp
push
mov
(bad)
shl
push
sbb
mov
in
push
pop
cld
aad
sbb
xor
fist
or
jae
push
sbb
ss
or
mov
push
pusha
inc
or
loope
out
dec
test
jmp
mov
mov
xchg
(bad)
test
pop
dec
inc
xor
call
test
in
test
imul
push
fbld
(bad)
aaa
adc
lods
fisub
and
lods
xor
mov
pop
jnp
je
xor
scas
inc
fcmovbe
mov
push
popf
stos
mov
int3
push
les
push
call
mov
inc
xchg
movs
cs
mov
mov
in
xor
jbe
xchg
sbb
sar
xor
push
fsubrp
xchg
in
pop
dec
pop
cli
outs
mov
mov
jns
jp
outs
mov
xor
jno
push
mov
mov
xchg
rcl
ja
imul
in
in
inc
cmp
and
cmp
stos
cmp
retf
mov
les
sbb
jne
int3
mov
mov
inc
cs
jl
stos
mov
call
shl
in
das
clc
or
inc
shr
call
jecxz
in
mov
js
xchg
jecxz
mov
pop
shl
add
adc
retf
test
dec
fcmovbe
mov
es
or
mov
fs
enter
cmp
xchg
je
jne
jp
push
inc
inc
stc
sub
(bad)
arpl
or
ret
in
ins
push
and
jo
push
loopne
test
pop
xchg
rcl
jnp
ds
mov
lock
(bad)
or
cmps
fcom
outs
aad
push
mov
and
into
mov
loope
mov
pop
outs
fbld
stos
xor
xor
cmp
pushf
jle
jbe
or
int3
mov
pushf
push
add
and
mov
push
jl
je
xchg
cmp
cld
jb
mov
jbe
push
pushf
out
cs
mov
mov
bound
loopne
and
call
push
push
cmpps
push
cmps
pop
xor
mov
dec
sbb
xchg
rcr
jle
cmps
pop
jmp
(bad)
out
movs
jl
pushf
mov
inc
movs
xchg
adc
test
push
mov
mov
push
add
outs
add
jl
cmps
mov
xchg
cmps
inc
or
cmp
ffreep
mov
mov
ja
sahf
aam
mul
rol
push
mov
cmp
mov
pusha
ror
inc
mov
inc
sbb
shr
push
lods
xlat
xchg
hlt
fs
sahf
and
mov
jb
(bad)
loopne
jbe
lds
mov
in
jmp
call
push
push
add
xor
jmp
or
dec
in
loop
xor
fs
mov
or
add
cmp
mov
jmp
xor
pop
jno
mov
hlt
dec
cmp
call
jp
retf
adc
(bad)
popf
aam
rol
and
xor
add
dec
scas
imul
scas
dec
xor
test
mov
jmp
inc
inc
fisttp
aas
jmp
fwait
cmp
cmp
jmp
cmovs
lea
ret
adc
int
jg
adc
iret
test
in
pop
sub
add
(bad)
xchg
inc
popfw
or
inc
inc
push
das
xchg
arpl
lods
out
add
mov
cdq
stos
push
iret
add
loopne
icebp
xchg
sbb
mov
cdq
pushf
hlt
jge
dec
fdiv
in
mov
xlat
mov
adc
mov
cld
jecxz
adc
pusha
sub
shl
adc
pop
push
inc
ficom
mov
sbb
or
mov
sbb
fstp
mov
push
push
pop
mov
dec
movs
mov
scas
push
fild
and
and
xlat
fiadd
jnp
movs
sub
jle
mov
(bad)
movs
fdivr
pop
imul
test
aas
repz
cmp
sbb
mov
mov
cmp
das
push
in
sub
mov
push
das
mov
rol
jge
jmp
push
xor
or
ficomp
mov
aaa
xor
xor
ret
cmps
cli
cmps
sub
inc
scas
ins
push
sub
mov
xchg
(bad)
int3
leave
mov
or
inc
stos
test
ins
movs
fcom
inc
mov
mov
xor
mov
loopne
xor
sub
dec
sbb
addr16
mov
sbb
scas
cmc
jo
ret
outs
fmul
cmp
test
sbb
sub
out
inc
loopne
out
sti
hlt
inc
adc
sub
js
add
mov
popf
aaa
and
mov
mov
mov
adc
mov
stc
std
cld
and
push
jae
dec
jl
xor
clc
inc
add
aaa
shl
cdq
movs
mov
fld
add
sub
push
push
adc
xchg
pop
outs
sub
cmc
call
test
dec
jo
add
add
push
and
jmp
sub
push
pop
rsm
xchg
mov
jmp
mov
pusha
xor
sbb
inc
and
push
pop
jb
mov
movs
push
dec
ficomp
cdq
setl
push
dec
in
sti
leave
push
push
pop
cmc
ret
sar
sbb
rol
les
xor
or
out
scas
stc
mov
ret
hlt
js
js
and
push
(bad)
pop
xchg
gs
out
or
jmp
test
mul
popf
(bad)
jae
jno
imul
jno
fcmovbe
jl
add
lods
jmp
mov
mov
retf
inc
adc
push
push
lea
mov
aaa
add
and
jne
push
cmps
daa
add
cmp
sub
ins
repz
mov
pop
push
pushf
popa
cmc
push
aad
adc
push
jge
and
fstp
imul
(bad)
scas
test
mov
sub
out
lahf
mov
sbb
fs
pop
rcl
and
hlt
ja
sahf
dec
sub
(bad)
imul
pushf
push
imul
push
xchg
add
jae
jo
push
jb
cs
xor
daa
mov
push
test
dec
sbb
in
push
xchg
add
test
inc
mov
pusha
inc
dec
xchg
gs
push
lods
cs
movs
scas
in
jp
jmp
mov
inc
dec
inc
and
out
xor
cmp
mov
add
push
ins
stos
call
dec
sbb
add
bound
mov
aaa
arpl
bound
aas
aam
pop
sub
imul
iret
jg
and
loope
(bad)
push
jmp
xor
sti
add
pop
mov
out
dec
in
pop
neg
adc
and
jle
add
(bad)
fld
arpl
fnstsw
cwde
lahf
ds
leave
ss
and
test
adc
bound
pop
adc
inc
push
inc
(bad)
aad
daa
mov
mov
imul
cmp
cwde
dec
ins
xchg
inc
fisubr
sbb
mov
(bad)
sub
dec
imul
cmc
mov
xchg
test
out
jmp
ss
xchg
lahf
movs
mov
xchg
mov
popf
gs
mov
fiadd
cli
mov
mov
aas
pop
add
bound
inc
push
jno
pusha
leave
jne
jmp
mov
pop
and
push
popf
inc
rcl
mov
and
or
ror
outs
pop
mov
cmp
mov
mov
sbb
scas
popf
loopne
addr16
int3
inc
jge
je
mov
push
pusha
xchg
adc
push
inc
push
and
sbb
out
inc
inc
ss
adc
dec
pop
(bad)
in
sbb
lea
leave
fdiv
repnz
(bad)
inc
cmps
jb
jmp
xor
inc
xchg
jl
(bad)
lea
outs
pushf
aad
push
mov
in
mov
leave
stos
inc
outs
xor
dec
icebp
jl
imul
scas
cmc
aad
and
cmp
dec
psrlw
loope
out
and
jle
xchg
mov
fdivr
sub
enter
(bad)
pop
push
lods
icebp
xor
pop
cmp
jg
or
stos
pop
leave
adc
or
or
or
mov
in
mov
sub
scas
mov
inc
int
fiadd
nop
daa
mov
pop
sub
xchg
pop
and
mov
and
mov
rcl
inc
leave
jg
and
push
mov
and
shl
in
out
iret
hlt
outs
stos
daa
mov
mov
jle
scas
push
adc
nop
enter
lds
mov
imul
inc
in
lea
jle
sub
arpl
push
cmc
pop
in
pop
xlat
dec
std
retf
out
mov
imul
push
sbb
add
push
pop
enter
inc
retf
mov
push
dec
sub
imul
mov
in
mov
in
lock
or
addr16
xor
pop
jns
test
hlt
lods
pop
mov
adc
vaddsd
or
pop
shl
jmp
mov
and
jle
adc
hlt
mov
dec
add
sub
call
cmps
pop
out
mov
cmp
leave
arpl
(bad)
in
mov
jmp
icebp
inc
xlat
outs
sub
imul
xchg
outs
int
cs
rcr
mov
pop
dec
loop
out
(bad)
std
push
adc
aad
jg
and
scas
ins
lock
jns
dec
jl
mov
inc
sub
das
std
popf
fcomp
mov
retf
ss
fbstp
adc
sub
les
lock
jl
(bad)
(bad)
push
and
retf
jae
add
add
mov
retf
test
mov
cmp
sti
and
mov
pop
lock
sbb
xchg
mov
arpl
mov
add
jo
pop
imul
sti
jmp
mul
or
mov
shl
pop
cmps
sub
sbb
mov
mov
or
mov
fdivr
xchg
imul
mov
mov
data16
sbb
dec
ret
leave
clc
cmc
xchg
dec
data16
into
dec
(bad)
or
or
cld
in
nop
dec
jo
pop
hlt
test
mov
mov
mov
lahf
push
and
bound
push
mov
ds
test
cwde
xor
push
imul
fadd
iret
data16
mov
add
xor
mov
mov
cmp
cmp
(bad)
add
and
jp
and
inc
dec
arpl
test
loope
push
call
into
xchg
sub
mov
inc
add
aas
aas
add
scas
icebp
cs
xchg
int
jg
xor
pop
fptan
aas
in
xchg
dec
mov
icebp
lea
mov
mov
pop
aam
mov
les
sub
inc
repz
aaa
xor
or
pop
cli
repnz
ins
outs
int
push
movs
mov
xchg
and
push
or
jp
mov
push
data16
fld
mov
jns
mov
adc
mov
push
adc
xor
mov
or
mov
loop
push
adc
and
fild
sbb
dec
push
push
jl
pop
mov
jo
loope
push
dec
push
jns
pop
sar
les
(bad)
mov
push
lock
cdq
fdivp
add
enter
jae
push
ins
push
and
pushf
test
and
inc
ss
sbb
sub
jecxz
push
popa
icebp
or
gs
dec
ins
movs
cmps
jge
repnz
xchg
sub
fld
pop
jecxz
adc
call
dec
sbb
push
or
inc
stc
jecxz
mov
pop
add
into
dec
or
lock
sub
mov
or
and
add
push
fiadd
stos
mov
mov
(bad)
and
or
mov
aad
jnp
bound
cdq
mov
inc
imul
je
inc
add
in
pop
daa
cdq
enter
cmp
popf
xchg
cdq
add
and
mov
out
jne
inc
out
push
pop
outs
data16
hlt
ins
mov
out
mov
repnz
scas
in
arpl
aaa
out
into
fsub
mov
add
jl
icebp
mov
adc
lds
imul
leave
pop
dec
mov
data16
jnp
dec
sbb
(bad)
cld
push
add
(bad)
push
(bad)
sub
and
inc
pop
mov
sbb
xchg
out
dec
dec
cmp
mov
mov
inc
sbb
mov
or
js
cli
out
cmp
std
ss
cs
jb
adc
(bad)
and
inc
push
pop
jmp
pop
inc
mov
ds
ins
pop
loope
test
out
icebp
and
pop
inc
dec
push
adc
add
or
mul
inc
pop
rcr
scas
inc
popf
adc
or
sbb
add
jno
or
fcomp
dec
lock
int3
je
int3
hlt
push
std
imul
mov
cmc
aas
pop
movs
sahf
sar
dec
and
or
ds
movs
loop
mov
xchg
fild
ins
enter
aam
int
mov
mov
aaa
cli
cli
(bad)
dec
or
adc
ret
scas
fcomp
jo
push
sbb
mov
fistp
push
rcl
test
std
sub
iret
mov
aad
xchg
sub
mov
or
dec
rcr
and
in
add
imul
jmp
push
xor
add
adc
push
clc
daa
cs
mov
retf
jmp
data16
fst
jge
shr
shr
push
jnp
out
mov
or
xor
or
pop
mov
adc
inc
call
call
dec
retf
dec
or
ja
adc
fst
dec
(bad)
jbe
pop
xor
ja
aas
ror
and
jae
sub
loopne
inc
sbb
mov
lods
test
sbb
xchg
jnp
adc
sub
not
pop
inc
dec
sbb
push
sub
dec
jno
in
push
adc
in
jbe
shl
aad
lods
ins
cmps
pop
loop
popf
jbe
push
rcl
push
mov
in
stos
mov
xchg
sbb
xchg
stos
and
lock
push
push
and
and
xchg
mov
xor
pop
lea
xor
add
in
jl
pop
test
sar
enter
stos
add
and
daa
xor
inc
sub
sbb
sub
pop
jg
jecxz
sbb
pushf
adc
sbb
mov
(bad)
mov
gs
mov
push
mov
rcr
lods
xchg
aad
iret
in
xchg
mov
adc
fcomp
test
xor
xor
retf
je
sbb
aas
pop
xchg
push
mov
cmps
test
push
lahf
arpl
sbb
jmp
jp
aas
sub
pop
loopne
adc
and
dec
push
fcomi
arpl
inc
out
pushf
jnp
test
lea
dec
loop
pop
xchg
(bad)
std
fisttp
outs
lock
jg
bound
cmp
and
pop
jmp
push
cs
imul
mov
push
jg
(bad)
push
pop
jae
adc
int3
inc
repnz
add
imul
sub
mov
and
mov
call
xor
retf
sub
ss
sbb
ret
daa
sahf
dec
inc
add
(bad)
imul
fisubr
aad
or
sub
fldcw
sbb
xchg
jae
fiadd
pop
not
lahf
cmps
scas
xchg
xlat
stos
mov
push
inc
lea
cmp
out
add
scas
jg
add
pop
adc
enter
pop
scas
mov
add
ins
mov
stos
stos
stc
push
into
fidivr
pop
jp
es
adc
(bad)
pop
push
pop
push
adc
mov
cli
out
pusha
sub
call
xchg
test
addr16
sub
xor
clc
xchg
push
aas
and
adc
jle
pop
data16
mov
jmp
jnp
sub
popa
mov
out
adc
adc
jno
je
cmps
jo
jg
dec
shl
and
push
jne
ret
xchg
or
pop
out
lea
pop
icebp
xchg
sbb
and
cmp
inc
mov
lds
adc
jl
mov
fcom
inc
jg
fwait
and
sbb
lock
push
sbb
shl
mov
fild
cmp
fimul
retf
out
cdq
pop
out
sbb
sti
lds
sbb
sub
out
out
mov
ins
cld
pop
jge
lods
jbe
sub
adc
jnp
fiadd
cmps
enter
jecxz
clc
movs
pushf
pop
mov
inc
leave
adc
jmp
push
and
sbb
sbb
and
aam
jmp
add
mov
ins
(bad)
sbb
fisubr
rol
sub
jb
jne
pop
call
imul
pop
mov
imul
mov
out
jo
push
in
mov
sbb
repnz
cli
mov
in
sar
pop
test
hlt
sub
retf
inc
out
lea
or
ins
enter
fild
inc
fstp
out
adc
rol
inc
or
or
xchg
inc
lods
rcr
push
inc
or
lock
cmc
sub
or
and
inc
or
cdq
movs
aam
push
aam
movs
lds
push
ret
out
jns
inc
call
pop
sub
call
and
ret
int
das
sbb
shl
ss
xchg
int
jmp
or
movs
sub
test
jne
in
add
pop
xor
or
nop
dec
mov
xlat
lods
or
jae
mov
mov
jge
mov
outs
icebp
adc
inc
fs
mov
fsin
add
into
cmps
aas
aas
out
jmp
int3
adc
mov
in
mov
movs
or
or
dec
sub
fwait
push
(bad)
sub
xchg
movs
sbb
test
xor
(bad)
sub
aam
sbb
mov
mov
clc
dec
ret
rol
or
loop
imul
or
nop
pop
pop
push
mov
or
ret
adc
in
pop
lsl
fadd
jbe
add
inc
shr
inc
and
fidivr
aad
mov
jl
adc
in
dec
and
add
push
es
fdiv
in
dec
inc
fisub
pop
int
or
xchg
sub
jmp
punpckhbw
and
movs
xchg
add
shl
xchg
test
lods
lea
push
mov
jle
jb
push
inc
int
inc
mov
push
lock
add
dec
sbb
mov
into
sub
cwde
adc
lods
jl
mov
mov
push
es
das
pushf
in
or
cmp
popa
bound
and
ror
add
sub
lock
xchg
jae
cmps
cld
jp
pop
pop
sbb
lock
ret
dec
(bad)
scas
or
jnp
xchg
call
xor
sahf
push
enter
jle
lds
popa
js
cmp
out
aaa
ficom
pop
gs
jg
mov
ret
cvtps2pd
mov
ret
jnp
mov
sbb
jne
sbb
push
mov
sbb
and
pop
pop
add
cmp
sub
inc
jg
mov
sub
daa
addr16
out
add
ja
gs
and
fwait
mov
push
add
mov
push
xchg
push
sbb
popf
nop
dec
mov
xchg
fwait
dec
in
mov
push
and
mov
je
pop
sub
lods
leave
int3
scas
stos
add
sub
out
(bad)
std
mov
push
xchg
imul
dec
les
das
into
movs
add
mov
dec
test
sbb
push
ficomp
fdivr
push
aas
out
loop
xor
fwait
div
cmps
loope
loop
or
adc
sub
jb
repz
por
inc
addr16
adc
adc
iret
pop
retf
(bad)
inc
retf
je
or
test
(bad)
push
sub
loopne
mov
push
clc
sbb
mov
dec
inc
(bad)
loope
mov
pop
jb
fld
pop
iret
dec
push
icebp
pop
mov
inc
loope
in
leave
push
xor
out
out
sahf
mov
popf
movs
sub
dec
fdiv
nop
inc
pop
sti
jl
mov
mov
nop
retf
leave
fs
mov
and
and
mov
cmp
lea
fnstsw
pop
pop
outs
sahf
ss
dec
stc
xor
dec
sbb
add
jns
xchg
dec
sbb
mov
sub
(bad)
sub
add
(bad)
xchg
xor
addr16
loope
mov
mov
adc
inc
jo
adc
mov
js
xchg
cmp
pop
in
xchg
lea
push
(bad)
neg
inc
pop
imul
push
push
cmp
scas
sub
movs
out
push
outs
mov
loopne
mov
cmc
mov
inc
push
push
cwde
cmp
mov
mov
or
pop
add
jne
push
popa
bound
mov
aaa
cmp
pop
imul
inc
test
inc
sub
adc
inc
or
mov
and
xchg
mov
or
xchg
jne
mov
pop
shr
bnd
int3
fnstcw
out
sub
cld
les
adc
push
xor
inc
adc
and
dec
pop
cmp
push
scas
pop
cmp
lea
and
fwait
out
jae
fwait
(bad)
call
cld
(bad)
mov
jle
pop
adc
aaa
or
retf
cmp
jae
add
adc
(bad)
mul
cmc
jmp
data16
pop
jnp
sub
cmps
inc
push
mov
cs
in
and
ins
inc
mov
lock
jb
xor
daa
mov
or
aas
cmp
or
push
cmc
cmps
lds
retf
dec
in
pop
xor
mov
jge
in
test
into
fld
stos
xchg
loop
and
fwait
cld
xor
adc
sub
or
mov
cmp
xchg
and
scas
xor
js
mov
xor
aam
ja
lea
retf
pop
std
outs
ins
or
and
les
test
std
out
mov
icebp
nop
jge
fwait
dec
stos
jle
lds
nop
aaa
into
ret
scas
repz
push
stos
ins
je
push
or
pop
jl
mov
les
mov
mov
push
and
push
(bad)
int
sub
rcl
jmp
js
mov
(bad)
xlat
inc
cdq
cmps
test
not
or
inc
shr
xor
pop
imul
jmp
mov
(bad)
jmp
jp
inc
pop
stos
pop
scas
cs
cld
call
pop
push
xor
cmp
mov
std
jnp
dec
jno
pop
les
cli
mov
inc
in
xor
adc
inc
xchg
std
sbb
mov
mov
leave
call
jge
(bad)
mov
inc
push
xchg
imul
mov
jmp
fwait
add
test
shl
add
push
cmp
mov
pop
mov
mov
cmp
movs
sbb
push
xor
mov
icebp
sbb
and
(bad)
adc
cmp
mov
(bad)
xor
xlat
dec
test
aad
ret
push
scas
push
xchg
addr16
mov
jae
bound
in
not
push
xchg
adc
add
pop
push
mov
fcomp
test
inc
cmc
iret
dec
rcl
(bad)
mov
hlt
cwde
inc
pop
pushf
sub
ss
mov
dec
les
lods
daa
pop
xlat
inc
fdivr
xor
in
sti
xchg
ss
push
gs
test
sbb
or
sbb
jecxz
int
mov
scas
and
mov
sahf
inc
test
adc
mov
mov
das
sahf
add
fstp
or
jp
cmps
popa
out
push
mov
and
push
std
and
rcr
xor
cli
inc
xor
movs
cmp
shl
jns
sub
mov
mov
icebp
test
sub
mov
retf
dec
test
(bad)
not
push
jno
fimul
test
bound
jne
xor
shr
sbb
xchg
xchg
push
cs
xchg
cmp
mov
outs
cmc
mov
mov
call
jnp
add
jmp
xor
shr
xlat
cmc
mov
adc
adc
sub
ja
int3
mov
addr16
fstp
hlt
rcl
mov
cmp
and
add
adc
cmp
pusha
out
fimul
mov
(bad)
lods
jnp
aas
and
jp
call
fistp
inc
addr16
fcom
jb
test
not
cmp
in
mov
lahf
adc
mov
mov
dec
and
adc
sbb
cld
add
xor
in
sub
mov
pop
sbb
and
ror
add
mov
mov
sbb
je
mov
mov
stos
dec
(bad)
xchg
cmp
push
in
inc
retf
(bad)
add
shld
add
push
imul
lea
scas
jl
cld
sbb
xchg
imul
cdq
pop
mov
sub
xor
inc
pop
sti
stos
arpl
retf
jb
cmp
mov
stc
add
fs
scas
sub
jmp
into
add
sar
xchg
mov
ret
dec
jns
sbb
push
mov
inc
out
cwde
fistp
stos
cmp
ins
jo
push
in
addr16
jmp
out
sbb
mov
stos
sbb
out
not
xchg
inc
sub
inc
add
mov
lahf
and
add
pop
adc
dec
inc
mov
out
dec
into
in
or
and
pop
sbb
push
fmul
mov
sbb
loope
push
xchg
push
ret
ins
push
mov
cs
das
sub
imul
mov
sub
(bad)
add
inc
jl
cmc
adc
test
mov
mul
jae
cmp
xor
repz
pop
add
lods
mov
sub
add
mov
rcr
call
movs
mov
xor
inc
push
xor
mov
xchg
xchg
add
mov
and
scas
fwait
retf
imul
push
adc
jge
sti
xchg
adc
mov
rcr
cmp
jecxz
cmp
and
xor
and
dec
cwde
mov
into
inc
in
inc
dec
xchg
lahf
adc
sub
fsub
(bad)
stos
jb
mov
fyl2xp1
mov
dec
sbb
dec
test
pop
cwde
xchg
cmps
or
in
pop
movs
xchg
cmp
dec
stc
pusha
adc
pop
iret
into
xchg
dec
cs
cdq
sbb
lods
sub
sbb
jnp
add
bound
push
pushf
dec
jecxz
xacquire
mov
(bad)
ss
push
in
jbe
movs
bound
xchg
xor
sbb
fnsave
mov
shl
cmc
mov
push
and
or
sti
add
popf
cmps
stos
xlat
or
inc
mov
adc
bound
lock
xchg
push
mov
add
sub
fimul
inc
push
std
adc
and
ins
sub
pop
or
dec
lahf
ja
pusha
mov
pop
imul
sbb
mov
add
jle
(bad)
sbb
xor
mov
stos
xchg
jns
dec
add
icebp
popf
sub
ins
xchg
push
movs
pop
xchg
xor
int3
popa
inc
jo
jnp
inc
jbe
sbb
cdq
ins
hlt
rep
je
xor
out
inc
cmc
repnz
sbb
sub
leave
xchg
cmp
imul
sub
add
aam
xor
xchg
jp
jno
int
jg
pop
xor
sbb
sub
cmp
std
xor
adc
rcr
mov
and
push
arpl
sahf
test
sub
aad
data16
dec
jl
mov
(bad)
lods
jb
jl
es
into
pusha
cli
daa
add
movs
or
in
stc
xor
add
mul
pop
lods
(bad)
into
cmp
aad
push
pop
arpl
jle
pop
cli
in
push
cmps
es
call
pop
dec
ret
jb
dec
adc
jne
xlat
or
push
cmp
mov
inc
bnd
call
fs
push
rcr
ins
or
mov
xor
mov
stos
sub
sar
sti
push
mov
xlat
jae
lahf
pop
pop
retf
xchg
ins
push
outs
out
and
mov
std
sbb
xor
inc
jno
cmp
jmp
xlat
cli
pop
jo
outs
jecxz
int3
adc
inc
sbb
dec
loop
(bad)
jecxz
cmps
clc
xchg
sub
clc
inc
sbb
inc
dec
jmp
sub
test
push
mov
movs
or
loop
fnsave
les
stc
xor
mov
adc
sbb
push
push
(bad)
dec
ins
or
fcomp
out
ror
push
bnd
adc
or
cmp
aas
imul
pavgw
mov
or
vmread
cmp
gs
cmp
fisttp
or
jmp
pop
mov
mov
ret
or
and
ins
in
cmp
mov
push
jno
mov
mov
jp
ror
xor
hlt
lds
adc
cmp
pop
ja
leave
and
mov
shr
clc
jno
jnp
out
adc
stos
fwait
mov
loopne
pop
adc
xchg
daa
ret
ret
out
ja
movs
ficom
push
xchg
mov
(bad)
cs
mov
imul
xchg
xchg
(bad)
(bad)
arpl
les
xchg
add
pop
je
imul
test
add
inc
lahf
lds
xchg
sub
and
xor
out
mov
inc
push
dec
mov
add
fdivr
adc
icebp
mov
add
push
jbe
dec
test
imul
pop
loope
fnstcw
mov
and
in
test
xchg
mov
dec
xlat
out
dec
push
adc
cld
mov
repz
add
(bad)
popa
sahf
push
aas
dec
xchg
neg
sub
and
pop
gs
mov
(bad)
iret
dec
mov
jle
sbb
push
bound
in
xor
dec
bound
push
(bad)
stos
sar
(bad)
cmp
lea
mov
lods
push
fnstcw
inc
in
push
inc
fstp
movs
cwde
mov
arpl
into
jns
fadd
ret
mov
sbb
retf
sbb
mov
data16
jle
inc
jnp
sbb
icebp
cmps
sub
push
(bad)
mov
xor
and
sub
sbb
mov
pop
xor
and
dec
push
cmp
cmp
mov
repnz
sahf
and
mov
pop
es
cmp
popa
jle
add
outs
add
out
movs
xchg
push
test
sbb
aaa
jle
repz
adc
(bad)
scas
sub
test
addr16
cmps
mov
mov
repz
jnp
adc
scas
pushf
out
imul
cmp
cmp
or
adc
mov
pop
pop
leave
fist
in
dec
call
into
lea
mov
mov
pop
mov
push
mov
sub
xor
imul
dec
adc
inc
xchg
pop
test
mov
sar
out
(bad)
(bad)
push
xor
shr
int
add
xor
inc
daa
aaa
lds
(bad)
and
mov
retf
test
es
pop
stos
push
and
xchg
adc
(bad)
in
(bad)
repnz
pop
loope
and
mov
xor
ret
fnsave
jae
mov
daa
popa
and
cs
dec
jle
mov
aas
xor
sbb
lods
stos
pop
mov
movs
pop
add
mov
sub
aas
sub
sbb
jae
xchg
inc
add
xchg
or
jno
push
jae
pop
loopne
test
add
jg
jb
ror
(bad)
retf
fistp
sbb
lods
pop
arpl
cmp
mov
popa
inc
mov
sbb
stos
ins
rol
and
push
in
movs
mov
retf
int3
(bad)
adc
xchg
out
mov
adc
jp
adc
movs
movs
test
neg
push
mov
stos
adc
mov
leave
loopne
add
inc
add
(bad)
scas
in
cmp
test
retf
js
mov
pop
enter
mov
mov
xchg
sub
add
ins
dec
arpl
inc
test
jg
in
adc
iret
sub
pop
push
lahf
mov
push
xchg
lock
imul
fsub
push
xchg
cmps
sti
cmps
mov
adc
cwde
jmp
or
fwait
addr16
add
int
push
mov
mov
xchg
in
fidivr
mov
mov
mov
xor
add
jnp
mov
inc
sub
int
push
mov
adc
inc
in
jno
pusha
inc
into
jmp
and
aas
jne
push
loope
jle
dec
and
into
cmp
mov
int
fistp
add
out
adc
cmp
ja
jno
add
push
mov
push
mov
jmp
xrelease
pop
mov
pop
add
xchg
pop
add
xor
cmp
fstp
js
into
push
imul
mov
iret
fs
js
pop
fnstenv
outs
rcl
sub
and
mov
test
out
mov
pop
dec
xchg
mov
dec
sbb
xchg
adc
pop
loopne
lea
mov
ror
and
in
test
push
out
push
mov
sti
adc
aaa
mov
ret
shl
cmp
mov
fisttp
and
mov
inc
sbb
ja
jne
sbb
mov
or
xchg
push
ins
int3
inc
xor
cmps
mov
sub
mov
call
jne
cmp
push
or
mov
dec
(bad)
sub
leave
scas
(bad)
fld
and
fidiv
mov
fild
out
popf
test
movs
xlat
ret
mov
fst
daa
int3
mov
xchg
shl
xor
mov
ret
and
imul
and
dec
inc
pushf
or
xor
pop
and
loop
cmp
push
and
int
jae
(bad)
lods
mov
popf
jp
push
pop
mov
push
pop
or
jns
or
pop
arpl
shl
into
adc
shr
out
push
jb
jae
mov
imul
cmp
push
cmp
mov
(bad)
fyl2xp1
dec
int3
movs
ret
jp
call
imul
sahf
rcr
ja
ss
out
pop
pop
(bad)
ret
ret
in
and
sub
pop
ja
cli
xor
mov
stos
test
ret
push
sar
fidiv
pusha
jmp
rcr
lods
movs
or
adc
call
cmp
fdivp
imul
mov
inc
add
retf
or
inc
xor
es
cmp
push
arpl
mov
das
test
icebp
bound
mov
mov
out
cwde
out
cmp
imul
popf
fcmove
in
mov
xor
call
add
jecxz
and
ja
out
hlt
out
xchg
retf
movs
jge
xlat
js
xchg
(bad)
mov
add
into
sbb
inc
int
out
(bad)
out
inc
aas
ror
das
sahf
aas
cmps
xchg
adc
push
out
jbe
pop
ret
and
adc
jno
addr16
dec
xchg
pop
xor
mov
out
dec
shl
arpl
jns
sub
jnp
mov
sbb
xor
mov
jmp
jne
lea
push
push
jecxz
sbb
je
xor
mov
sub
pop
test
xchg
popa
push
retf
mov
fs
stos
jo
jmp
jmp
adc
cmc
pushf
test
outs
xor
fldenv
rol
cmp
movs
stos
xor
ja
arpl
test
ins
out
popa
ja
pop
mov
xchg
and
push
lock
mov
inc
sar
sbb
adc
ins
clc
mov
or
or
or
sub
mov
loop
xchg
jae
pop
mov
fsub
movs
aas
stos
mov
jmp
cmp
inc
xchg
outs
add
das
popf
jae
ds
mov
jg
dec
pop
fnsave
mov
ret
mov
(bad)
push
xchg
rol
mov
fsubr
movs
jne
cmp
out
popf
and
shl
(bad)
cmp
mov
mov
sahf
sub
mov
loopne
cmc
inc
adc
dec
adc
push
test
mov
mov
push
pop
sub
mov
mov
aam
sti
or
dec
es
cli
sar
pop
xchg
push
dec
and
xchg
jb
xchg
(bad)
into
sub
scas
xchg
and
mov
push
out
push
sub
enter
sub
cmp
(bad)
sbb
and
mov
ins
pop
repz
test
jp
mov
jmp
sub
sub
fstp
inc
outs
cmp
xchg
mov
jo
inc
fs
mov
movs
and
aam
fistp
mov
sbb
mov
in
jnp
sub
and
loopne
xor
popf
outs
or
xor
rcl
repz
movs
jl
or
dec
xor
cmp
inc
test
sti
jg
jbe
mov
pop
enter
add
lods
(bad)
dec
jmp
cs
rcl
movs
inc
push
push
xchg
scas
jbe
bound
std
stc
or
stos
dec
(bad)
or
mov
out
addr16
iret
stos
dec
and
sub
xchg
aaa
pop
mov
xchg
push
xchg
dec
inc
outs
pop
pop
jo
mov
inc
int3
inc
adc
push
push
mov
pop
in
cwde
retf
push
movs
or
push
inc
cwde
dec
push
push
cmc
pop
or
sbb
rcr
retf
push
add
out
and
pusha
fnstsw
xor
in
dec
(bad)
retf
shr
mov
jb
rcr
sub
xchg
mov
mov
iret
bound
add
sbb
es
add
adc
lods
push
jge
mov
lods
leave
mov
les
inc
pop
and
push
outs
es
vpsubw
int3
push
cdq
jns
test
ja
add
rol
mov
inc
enter
push
test
jae
mov
xor
std
sub
xchg
xchg
fnstsw
jmp
sbb
pop
pop
lods
fs
xor
push
dec
iret
lahf
sub
fst
mov
adc
repnz
jge
int3
ja
cdq
push
call
outs
scas
out
dec
jns
(bad)
call
std
push
push
push
fs
pop
outs
rol
mov
inc
mov
or
iret
rcr
pop
cmp
sar
cld
adc
jae
lahf
push
in
cmp
outs
dec
out
(bad)
(bad)
pop
dec
adc
mov
fld
pop
(bad)
std
add
jg
push
inc
clc
xor
or
mov
push
arpl
xchg
mov
or
mov
or
mov
xor
push
cmps
dec
mov
push
jl
push
addr16
cmp
scas
mul
sbb
sbb
lds
out
in
adc
add
(bad)
fcom
push
xchg
adc
aad
stos
push
inc
sbb
dec
jge
mov
push
fcomp
enter
mov
cmp
push
jg
rol
cmovno
and
movs
xor
pop
(bad)
dec
dec
cmc
std
pop
dec
dec
push
std
out
cmp
mov
outs
std
cld
cmp
jns
fcom
sbb
cmp
xor
inc
(bad)
int3
imul
in
sahf
lock
cdq
adc
jno
pcmpeqw
cmps
ret
xchg
mov
push
gs
adc
xor
adc
inc
mov
adc
test
mov
iret
pusha
cwde
ins
xor
cmp
mov
push
stos
xor
mov
add
ret
cmp
mov
push
retf
and
scas
ins
cmps
cmp
cmp
inc
push
div
cmp
out
out
lock
inc
and
lea
lahf
xor
mov
sbb
and
das
inc
shr
dec
mov
cmp
cmps
adc
pop
in
test
add
pop
jo
out
cmp
retf
neg
cli
push
jg
sub
mov
fsubr
addr16
push
in
(bad)
sbb
mov
dec
sbb
fldcw
bnd
push
(bad)
hlt
movs
mov
mov
adc
mov
xor
jg
mov
lock
cli
cli
lods
dec
push
cmp
stos
jne
shr
sub
xchg
pop
lock
xchg
daa
fidiv
lods
rcr
les
int
pop
in
and
or
out
jecxz
push
(bad)
jecxz
inc
pop
xor
adc
xchg
pop
or
aaa
inc
les
pop
jp
lods
mov
add
retf
jnp
mov
pushf
inc
ins
aam
repnz
and
fwait
jl
and
ins
imul
sbb
sahf
mov
lock
aad
es
out
xor
aaa
loopne
pop
jl
in
hlt
xlat
cmp
hlt
sub
mov
adc
dec
arpl
pop
pop
xor
mov
adc
lds
inc
xchg
jo
jne
inc
sbb
scas
sahf
es
jns
push
es
inc
mov
cld
dec
jbe
out
mov
mov
ficomp
xchg
dec
xor
das
adc
dec
rcr
fldenv
sub
jae
mov
inc
pop
pop
and
stos
aas
shr
xchg
daa
inc
mov
xchg
and
ins
repnz
(bad)
mov
loope
dec
add
faddp
xchg
(bad)
loop
das
icebp
(bad)
jge
ret
push
(bad)
dec
xor
push
sub
xchg
stos
enter
adc
ins
xchg
ror
push
sub
sbb
xchg
stos
add
sbb
cmp
stc
dec
idiv
push
(bad)
fisubr
loope
sbb
sbb
dec
movs
inc
push
sbb
mov
mov
or
ret
int3
jno
jbe
call
cdq
jmp
mov
dec
cdq
scas
imul
sbb
dec
cmp
inc
daa
jbe
sbb
mov
add
jnp
fsubr
sub
fiadd
jne
mov
jo
cmp
xor
(bad)
loope
test
xor
sbb
dec
scas
jb
lock
retf
mov
cld
cmp
lods
mov
pusha
sbb
ds
xchg
mov
fs
je
call
shl
jp
push
jae
push
in
push
ins
pushf
dec
push
mov
mov
xor
sar
add
push
(bad)
lock
lods
std
shl
dec
jecxz
jp
in
xchg
jo
mov
daa
hlt
pushf
aaa
xchg
movs
mov
(bad)
es
loop
aam
mov
mov
sti
fldcw
mov
shr
icebp
int
add
cmp
or
bound
lock
push
loopne
inc
not
retf
cld
mov
mov
pushf
push
mov
aas
ret
stc
mov
mov
cld
inc
loopne
mov
mov
inc
retf
cmps
jp
cmp
cmc
je
pop
pop
fimul
stos
pop
fcmovu
mov
dec
fdiv
add
jns
lock
xchg
and
push
les
pop
sub
fcomp
rcr
pushf
add
pop
push
mov
(bad)
jp
out
dec
add
mov
xor
leave
xor
loopne
add
(bad)
loopne
mov
mov
xchg
mov
push
or
fisubr
sub
or
sahf
push
push
out
stos
sub
pop
(bad)
das
sub
and
int
(bad)
lods
dec
popf
sub
dec
mov
pop
pop
mov
add
popa
cmp
cmp
sbb
fstp
pop
xchg
outs
dec
cmp
call
inc
iret
xchg
movs
push
test
pop
mov
xor
movs
mov
inc
bound
mov
xor
sub
ds
scas
in
inc
js
dec
ja
xor
or
(bad)
pop
fmul
sub
pop
jnp
inc
scas
lds
sti
std
inc
inc
mov
jp
or
cmp
in
add
sub
idiv
jle
inc
dec
push
ds
ja
loop
add
or
jo
jle
sbb
mov
pop
jbe
sub
xor
adc
or
fs
mov
pop
scas
cmp
jne
jl
or
jbe
mov
ror
in
sub
inc
jne
sub
adc
fcom
fs
shr
repnz
mov
mov
iret
clc
bswap
test
fdiv
adc
jbe
(bad)
outs
aas
fwait
stos
scas
mov
imul
mov
ret
push
pop
test
jb
fcmovnb
pop
icebp
lahf
sub
sbb
pop
not
adc
pop
dec
cmp
js
popf
iret
and
push
punpcklbw
pop
fistp
xchg
add
push
sbb
push
fcomi
xchg
pop
cdq
inc
aad
sbb
aaa
enter
lds
enter
jae
cmc
cmps
inc
pusha
jae
or
mov
sub
imul
adc
mov
mov
push
ins
inc
xor
dec
push
ret
pop
mov
inc
repz
sub
xchg
or
call
mov
cli
pop
pop
mov
dec
jnp
(bad)
nop
stc
sub
fbld
xchg
fisub
lea
pushf
xchg
add
mov
or
arpl
jnp
fistp
adc
aaa
dec
mov
xor
sub
cli
adc
mov
xor
adc
push
or
popa
test
or
adc
call
inc
iret
jb
ficom
mov
jo
mov
mov
dec
in
mov
std
mov
retf
lahf
xchg
je
push
sahf
jnp
dec
mov
sbb
jp
stos
dec
lahf
mov
pop
push
dec
inc
push
mov
mov
cmps
push
fcmovu
push
inc
push
xchg
dec
sub
jno
inc
in
cmp
popf
rcr
retf
xor
mov
ret
mov
xchg
out
xlat
pushf
das
(bad)
sub
mov
push
mov
test
mov
sub
sbb
dec
add
mov
mov
push
adc
in
rol
jne
cmp
mov
cwde
xchg
ja
mov
aad
gs
out
jmp
retf
pop
imul
xor
xlat
loop
add
in
mov
and
out
inc
and
sub
and
inc
icebp
mov
sub
dec
leave
mov
fstp
pop
cmps
js
test
and
stos
push
bound
loope
jae
and
dec
sbb
push
mov
inc
outs
mov
mov
inc
jge
shl
sbb
lea
fst
cmp
leave
loop
stos
push
outs
(bad)
arpl
(bad)
xchg
popf
fldenv
fs
mov
test
pushf
ins
sub
mov
sbb
out
sub
jle
daa
sub
mov
sti
hlt
push
(bad)
pop
push
imul
push
std
mov
cmp
mov
jbe
xor
xor
push
hlt
call
test
xchg
pop
and
int3
outs
inc
cmp
cmp
sti
mov
push
ret
clc
and
int3
cdq
fstp
ror
push
cmp
adc
jae
out
mov
aam
popa
and
fnstsw
jmp
sti
aad
test
jecxz
adc
das
adc
xor
inc
ror
xor
sbb
mov
scas
ins
cmp
inc
out
aaa
cmp
jmp
add
cmp
jno
pop
inc
pop
cli
in
mov
nop
jp
jo
dec
add
adc
push
ror
cmp
mov
call
jae
ror
xor
imul
cmp
test
pop
and
icebp
xor
jp
and
inc
stc
push
cmc
movs
fidivr
shr
and
pop
inc
pop
dec
xchg
lods
and
gs
je
stos
outs
nop
sbb
(bad)
bound
push
in
or
int3
into
shl
jno
test
push
pop
or
fisub
in
xor
test
xor
lods
je
retf
pop
push
inc
jno
outs
rol
dec
cs
int
gs
rcr
lock
pop
les
cmp
cwde
stos
jae
test
ins
xchg
addr16
sub
xor
xchg
inc
std
in
add
test
sar
lea
aam
add
(bad)
fdiv
(bad)
sub
add
dec
jge
(bad)
or
mov
sahf
into
(bad)
xor
push
mov
cli
xor
xchg
popf
jmp
lss
lahf
test
mov
ins
pop
dec
cmp
or
shr
stos
dec
mov
cs
inc
pusha
(bad)
cmp
xor
xchg
adc
out
jp
jle
xlat
ret
sbb
adc
clc
mov
mov
outs
jae
(bad)
push
sub
add
xor
stos
push
xchg
dec
sub
ja
adc
dec
sub
dec
rcl
and
mov
outs
cmc
retf
fwait
pop
xor
push
dec
xchg
cmp
ins
test
sub
pop
push
cmp
ins
inc
repz
adc
rcr
fistp
ins
je
cmp
mov
ret
retf
pop
mov
sub
jge
jns
mov
and
fs
sub
mov
cld
hlt
push
inc
pop
aam
icebp
inc
(bad)
not
popa
mov
in
mov
inc
stos
mov
sbb
shr
lahf
shr
sbb
movs
cmps
mov
ror
inc
mov
popa
cwde
je
jno
int3
inc
fimul
lea
push
push
fsubr
add
loop
sub
ret
les
sub
int
stos
and
(bad)
adc
std
xchg
inc
cwde
outs
and
push
jmp
or
movs
mov
xchg
outs
aam
xor
or
test
dec
add
jb
pop
jmp
jmp
lods
adc
mov
xlat
or
push
xchg
pop
push
jnp
(bad)
stos
scas
dec
iret
mov
fcmove
mov
nop
(bad)
push
jne
pop
mov
push
ss
mov
sub
mov
adc
jg
imul
lock
repnz
xor
hlt
push
ret
xchg
xchg
push
adc
xchg
fild
push
out
aam
mov
push
ror
mov
repz
inc
rcr
call
dec
inc
retf
js
shl
or
clc
sahf
mov
or
pop
mov
scas
imul
xchg
retf
fisttp
test
pop
ds
adc
xchg
cli
xchg
(bad)
cmp
rol
mov
js
mov
loope
cs
in
dec
pop
sbb
in
inc
rol
ret
jg
pop
das
outs
jnp
ret
enter
cdq
cld
cmps
mov
jae
mov
push
dec
dec
retf
cs
stos
in
(bad)
add
jp
mov
sub
ss
test
mov
daa
(bad)
rol
stos
(bad)
stc
jno
mov
int
test
xchg
xchg
loop
retf
and
mov
jl
or
into
mov
lock
jecxz
rcr
repnz
into
sub
movs
pop
mov
loopne
aaa
mov
test
add
add
dec
cmp
or
ret
push
imul
outs
movs
(bad)
mov
sub
fsubr
jg
out
push
test
inc
rcr
dec
inc
shl
xchg
adc
jae
sub
(bad)
xor
movs
sub
or
sub
add
rol
es
mov
jmp
and
inc
out
in
ins
movs
fidivr
ror
mov
sbb
fldcw
or
test
mov
iret
mov
jmp
and
xor
fadd
fdivr
nop
cmp
call
popf
adc
cli
(bad)
fwait
cmp
in
outs
(bad)
(bad)
mul
mov
shl
pop
test
cli
cs
push
(bad)
mov
sbb
fsub
ret
pushf
(bad)
sbb
dec
pop
sahf
retf
outs
xchg
ss
pop
fadd
into
pop
stos
data16
push
mov
cmp
pop
aaa
sti
ins
pop
pushf
scas
ret
dec
repnz
icebp
hlt
inc
in
mov
pop
lahf
adc
idiv
mov
cmp
in
(bad)
jns
lock
cmp
push
lds
mov
xor
aam
push
adc
mov
sub
and
inc
pop
adc
(bad)
mov
push
xchg
rcl
jmp
jae
outs
sbb
out
hlt
and
sub
pop
sbb
pushf
(bad)
repz
mov
push
stos
add
mov
sub
rcl
test
sbb
lods
call
adc
stos
pusha
add
bound
fs
std
loop
xchg
adc
xor
and
add
fstp
and
cli
jne
fwait
popa
and
sbb
add
sub
mov
retf
and
pop
sub
inc
sbb
mov
cmc
or
jg
clc
pop
push
call
hlt
mov
call
in
inc
pusha
push
mov
cmp
mov
(bad)
addr16
aas
push
jbe
fidivr
or
push
jns
test
jbe
adc
jo
mov
gs
stos
iret
sub
or
add
jp
inc
push
push
cmp
xor
jb
fnstenv
xchg
test
mov
mov
fisub
pushf
dec
dec
pop
xor
fist
daa
out
adc
xor
(bad)
outs
sbb
mov
or
(bad)
push
add
mov
xlat
add
mov
push
dec
fs
xchg
test
mov
adc
sbb
shr
mov
aad
and
cs
popf
jae
xchg
pop
inc
imul
push
or
or
xchg
and
adc
sub
cmps
mov
ja
inc
ins
jns
pop
xchg
test
in
test
mov
sub
mov
cmp
dec
ja
push
int
sub
mov
aad
loope
clc
shl
mov
repnz
inc
dec
out
xor
push
sbb
push
cmc
inc
sbb
imul
jns
push
int
xchg
call
int3
mov
jnp
push
inc
hlt
cmp
jae
sti
adc
dec
mov
int3
add
mov
sbb
inc
push
pop
cmp
repz
push
or
retf
outs
inc
mov
adc
cmp
ror
xchg
jmp
pop
sub
pushf
jp
xchg
inc
dec
js
mov
cmp
mov
cs
gs
outs
(bad)
sbb
ins
dec
adc
jne
ins
jnp
mov
(bad)
push
lea
xchg
rdpmc
pop
xchg
push
or
ins
dec
imul
pop
cmps
jbe
mov
fistp
rcl
outs
movs
pusha
xor
add
adc
mov
movs
adc
sbb
sub
shl
jno
movs
test
popf
mov
gs
sbb
xor
mov
mov
push
aad
jmp
and
dec
in
dec
sub
pushw
mov
into
push
stos
mov
das
xor
div
test
pop
cwde
jge
adc
cmp
lahf
jmp
pop
sbb
icebp
out
add
sbb
int3
add
push
lods
mov
scas
(bad)
add
cmc
mov
aaa
cwde
bound
aad
xchg
adc
jmp
add
or
stos
cmp
and
lahf
mov
cmps
mov
fwait
(bad)
repz
cmp
(bad)
ins
and
inc
inc
pop
(bad)
mov
adc
push
mov
ins
sbb
or
(bad)
xlat
movs
xor
fdiv
push
cmp
in
cdq
fld
popa
push
data16
out
mov
inc
(bad)
jbe
inc
in
jl
push
popf
mov
lods
test
pop
(bad)
mul
and
stc
jae
(bad)
test
mov
or
je
and
call
jnp
mov
pop
outs
push
or
ins
scas
icebp
leave
add
pop
(bad)
add
mov
add
add
test
push
cli
aas
sub
sub
jne
jl
in
xor
mov
and
(bad)
mov
jno
xlat
mov
xchg
push
jecxz
and
mov
(bad)
xor
call
cs
mov
push
mov
xchg
in
ins
cmp
cs
rcl
scas
jmp
mov
pop
jp
xchg
hlt
push
shl
shr
jmp
push
inc
enter
(bad)
pop
(bad)
lods
pop
xor
(bad)
or
into
push
dec
pusha
fistp
imul
mov
and
xchg
pop
(bad)
or
sahf
push
xchg
popa
pop
push
adc
push
push
imul
mov
leave
inc
xchg
movs
xchg
movs
jmp
cli
test
xor
xchg
mov
push
cmc
fdivr
sub
hlt
retf
and
(bad)
adc
daa
imul
icebp
cwde
fstp
jg
sub
xor
push
es
stos
repz
xor
test
mov
cmp
adc
push
mov
jmp
(bad)
or
jle
jl
xor
test
push
aam
mov
fnstcw
lods
pop
or
mov
out
dec
pop
ss
imul
cs
xchg
push
ja
ret
jns
push
in
pop
adc
mov
mov
cmp
aad
fstp
and
aam
jbe
xor
cmp
mov
and
jb
dec
add
xchg
std
jl
cmp
jns
pop
icebp
add
push
xchg
imul
test
inc
(bad)
jb
pop
push
xor
fld
test
(bad)
push
cmp
sbb
fsub
repnz
(bad)
dec
or
fdivr
and
cdq
push
scas
cld
pop
lods
sub
xchg
cmp
and
jle
aam
push
in
imul
dec
cmps
leave
sbb
jo
fdivr
sahf
mov
jp
inc
adc
shr
dec
push
add
adc
xor
(bad)
mov
aad
stos
(bad)
sbb
mov
sub
pop
cli
xor
jge
fmul
adc
jl
(bad)
push
lahf
mov
std
or
push
in
jg
iret
sub
outs
das
icebp
in
(bad)
jmp
aaa
xor
cdq
mov
lods
push
jle
jmp
pop
rol
inc
aaa
sub
xchg
fisttp
ficomp
int3
ret
ret
ins
push
or
mov
in
out
mov
adc
out
dec
xchg
mov
leave
jl
cmp
lods
sbb
sub
mov
cwde
int
(bad)
fucom
pop
mov
dec
sub
lds
retf
mov
pop
jns
xchg
scas
bound
and
push
mov
aas
out
cmp
or
(bad)
movs
mov
mov
fwait
add
mov
xlat
pop
jb
dec
dec
sbb
imul
jno
fstp
inc
mov
repnz
imul
inc
jp
pop
pop
inc
sub
pop
push
fdivr
pop
dec
adc
(bad)
in
and
xlat
(bad)
push
mov
mov
fidivr
and
rcr
cmps
mov
push
cmp
jns
inc
jmp
mov
pop
mov
push
xor
bound
mov
add
inc
out
test
inc
inc
inc
push
clc
add
test
mov
push
leave
repnz
scas
jl
jge
movs
cld
sub
inc
and
and
rcl
sti
or
lods
or
movs
cmps
or
mov
pusha
sbb
cmp
mov
out
movs
push
lds
lea
int
fdivr
lea
pop
test
fcom
add
ret
cmps
xor
and
mov
adc
dec
cmp
push
push
div
sti
xchg
enter
in
adc
das
adc
daa
lds
in
jp
fisttp
lods
dec
and
inc
xchg
mov
mov
cmp
xor
int3
push
mov
push
loope
mov
bound
xor
cmp
dec
xchg
lea
mov
push
shl
xlat
int3
fsubr
mov
sub
mov
shr
dec
dec
or
lock
cmp
bound
jbe
mov
or
mov
sub
xor
mov
add
cmc
daa
mov
and
loop
mov
mov
mov
jmp
mov
les
xor
push
mov
xchg
repnz
inc
les
outs
mov
sbb
pop
xchg
mov
push
repz
mov
sar
sbb
in
or
xlat
shl
dec
pop
hlt
cmp
nop
rol
mov
lods
int
mov
or
daa
xor
sub
mov
imul
js
outs
xchg
movs
jecxz
les
scas
inc
jae
stc
mov
jg
jmp
and
push
movs
rol
ja
(bad)
shl
out
push
and
mov
add
xchg
ror
jle
push
and
push
cmp
add
in
hlt
and
and
dec
fcmove
inc
(bad)
aam
scas
xchg
jle
mov
loopne
cmp
jno
lods
or
or
int3
mov
scas
mov
jle
adc
loop
add
fs
cmp
dec
or
fsubr
lea
dec
mov
add
nop
bound
push
push
inc
push
or
pop
cld
xchg
cdq
mov
adc
aaa
fwait
mov
push
push
xchg
inc
call
cdq
inc
inc
ss
mov
test
dec
call
es
pop
xor
data16
cmc
mov
sbb
pop
shl
shr
push
popa
add
mov
aad
pop
jbe
jecxz
mov
mov
cmp
inc
pop
lahf
shl
xlat
sbb
mov
push
fild
scas
cli
push
add
fcom
lods
xchg
dec
jnp
shl
mov
pusha
(bad)
test
jae
fadd
into
rol
imul
xchg
aas
xor
xchg
loop
pop
sbb
(bad)
xchg
add
and
jp
nop
pop
pop
data16
out
mov
xor
fisttp
fstp
(bad)
ficom
pop
mov
sub
inc
add
not
outs
push
jg
xchg
sbb
shl
push
mov
es
mov
and
fiadd
out
sbb
cmp
mov
jno
dec
enter
and
pusha
outs
sub
ss
inc
imul
cmp
xor
mov
test
or
rol
scas
pop
push
or
xor
pop
shr
xchg
and
pop
movs
push
into
mov
cld
or
mov
dec
sub
dec
or
(bad)
mov
xchg
cwd
rcl
(bad)
mov
jle
scas
add
gs
and
sbb
pop
loopne
jecxz
cmps
add
pop
ret
sbb
hlt
mov
jl
add
hlt
pop
loopne
add
pushf
inc
mov
cmc
add
lods
add
or
mov
mov
xor
loop
je
mov
or
fwait
icebp
call
sub
shl
xchg
sub
fidiv
add
pusha
sub
mov
lods
rol
ret
pop
test
lds
add
push
add
loope
xchg
mov
xor
xor
rcr
xor
stos
adc
(bad)
in
or
rcr
add
add
or
dec
jmp
fs
aad
test
inc
mov
mov
out
or
iret
xor
popa
or
retf
std
mov
mov
cmp
fild
rol
shr
das
mul
cmp
xor
or
and
add
cdq
dec
pusha
cmps
inc
leave
mov
popf
(bad)
xchg
xor
ror
pop
test
test
push
hlt
lods
arpl
pop
mov
sbb
popa
jge
mov
sbb
push
pusha
fnsave
cmp
ret
ins
icebp
sub
xchg
loope
inc
std
sub
(bad)
pushf
ror
push
push
dec
outs
aas
aas
(bad)
mov
(bad)
into
xor
or
gs
fsubr
push
pop
jge
jno
and
test
mov
jmp
xlat
and
cld
outs
add
mov
pop
fnstenv
mov
jmp
sbb
enter
jno
and
pop
ja
fmul
(bad)
jo
mov
mov
lds
mov
test
adc
or
mov
into
or
push
stos
(bad)
pop
scas
mov
add
jle
dec
add
dec
lahf
inc
pop
push
add
clc
jl
mov
sbb
rol
aaa
add
shr
test
sub
and
cdq
adc
lds
lea
jae
adc
sbb
(bad)
pop
popf
cwde
mov
pop
call
dec
dec
in
aam
push
iret
jmp
ficomp
cmc
mov
mov
mov
adc
mov
or
shl
or
xchg
add
pop
clc
in
pop
and
mov
sbb
leave
ins
shr
jmp
in
ins
push
addps
sbb
jns
mov
test
leave
das
mov
aaa
or
pop
(bad)
call
fadd
(bad)
cmp
xor
push
xchg
in
pop
cli
adc
ret
ret
dec
leave
das
xlat
cmp
cli
sbb
or
adc
pop
stos
and
xchg
aas
cmp
dec
out
cmp
xchg
mov
addr16
test
cmp
imul
mov
sbb
fsubr
shr
imul
xchg
(bad)
xchg
call
call
adc
xor
ret
xor
fisubr
push
jmp
test
fsubr
xchg
mov
push
and
test
fcmovnu
sub
pop
rol
jg
pop
xchg
pop
sti
repnz
pop
xchg
jae
jle
int
(bad)
icebp
mov
pop
inc
add
lahf
jns
and
outs
imul
inc
lods
mov
push
in
mul
ins
cmp
xchg
sub
push
push
pop
fnstsw
js
fcomp
mov
pop
jle
ret
or
jl
and
push
mov
xor
xor
mov
add
mov
dec
popf
ficom
movs
push
int3
jne
cmps
les
dec
pop
(bad)
mov
lock
movs
lods
xor
and
outs
pop
cli
les
ss
addr16
idiv
mov
cwde
std
mov
ins
adc
fs
dec
aaa
shl
hlt
(bad)
bound
mov
or
sbb
add
fstp
and
and
inc
jle
inc
and
add
jmp
in
ja
pusha
cmp
or
pop
retf
daa
es
xlat
jmp
sahf
test
shl
mov
shl
pop
or
and
rcl
ins
outs
jle
sub
gs
loop
sbb
jp
popf
mov
data16
mov
(bad)
fwait
mov
cmp
cs
test
pop
jl
pop
aas
rcr
jbe
leave
pop
jne
fwait
add
test
push
push
pop
test
lods
icebp
test
hlt
hlt
sub
xchg
ins
lods
das
out
les
sub
pushf
push
jae
pop
jge
stos
imul
fnstcw
call
cmp
mov
push
sbb
out
cmp
sbb
xchg
jp
fptan
or
mov
(bad)
shl
push
and
in
outs
in
sbb
(bad)
cdq
jb
inc
imul
sbb
mov
push
cmp
mov
fisub
sub
ins
pop
xchg
push
sub
push
push
sti
cmp
jb
mov
jmp
inc
xchg
mov
shl
ins
test
mov
retf
sub
mov
retf
push
mov
jmp
inc
mov
or
xchg
sub
iret
sub
and
mov
push
test
daa
cmp
push
mov
cmp
retf
sbb
es
scas
jl
iret
int3
lahf
sbb
out
int3
mov
(bad)
out
or
cmps
xor
lock
mov
mov
enter
sub
mov
jb
push
bound
fsubr
ret
push
jmp
mov
mul
cmc
inc
mov
mov
xchg
xor
xor
mov
adc
mov
aad
inc
push
mov
(bad)
adc
(bad)
(bad)
cld
fild
mov
int3
and
sbb
push
ins
dec
inc
stc
fs
inc
js
nop
lods
mov
push
fidiv
repz
in
pop
ins
push
cdq
pop
in
fninit
lock
xor
or
jmp
mov
add
mov
jnp
clc
jmp
ja
ins
mov
sbb
cmp
test
repnz
xchg
hlt
fld
adc
in
scas
jmp
sub
or
pop
shl
cmp
in
jne
xor
ret
or
mov
sbb
jp
call
fdiv
arpl
dec
add
aaa
add
dec
or
xchg
repnz
fs
xchg
ja
mov
xchg
mov
lea
mov
imul
(bad)
cmps
jbe
sahf
pop
dec
enter
lds
dec
sub
inc
scas
add
call
data16
push
adc
sbb
push
xchg
iret
sbb
outs
jle
sub
cmp
sbb
cmc
gs
stos
mov
repz
int3
add
mov
mov
mov
sbb
retf
xchg
pop
xchg
test
mov
pop
aam
add
mov
fild
mov
or
jmp
in
mov
jmp
iret
xchg
sti
adc
xchg
scas
jmp
push
push
mov
mov
in
pop
es
sub
jo
xor
adc
test
sbb
mov
inc
adc
shl
push
ret
sti
and
mov
mov
sub
aas
or
xor
aas
mov
mov
pusha
jno
bound
fdivr
dec
ja
popf
inc
adc
lds
gs
ret
add
sbb
mov
pushf
dec
shr
imul
jne
iret
mov
xor
or
mov
cmovo
aad
sub
lock
loop
outs
cmp
xchg
inc
inc
push
mov
in
mov
push
sbb
hlt
call
lock
xor
and
and
(bad)
wbinvd
int
out
fbstp
ins
jae
sub
push
or
cmp
mov
mov
jmp
xor
or
inc
leave
xor
jbe
dec
adc
out
daa
xchg
imul
xchg
add
fmul
test
xchg
mov
add
cmp
call
aas
xchg
aam
push
or
push
fimul
adc
add
or
popa
fdivrp
mov
jmp
test
add
jbe
lods
cmp
xchg
aad
dec
xor
jne
xor
jnp
xor
mov
mov
push
int3
push
js
pop
sub
pop
movs
call
mov
lods
(bad)
(bad)
mov
or
mov
adc
loopne
mov
in
jns
sub
retf
mov
fisubr
inc
mov
inc
sub
inc
iret
adc
jns
dec
and
addr16
sub
xchg
mov
scas
leave
xor
pop
mov
dec
push
pop
gs
rcr
mov
retf
pop
imul
mov
in
add
sub
aaa
add
mov
cmp
jecxz
jge
mov
adc
dec
xchg
into
adc
fucomi
add
dec
sub
sub
repz
sub
adc
pop
sub
and
in
adc
pop
loopne
jp
xor
push
xchg
cwde
push
jl
adc
(bad)
dec
inc
sub
jo
inc
push
add
and
xchg
in
jae
ret
xor
or
sbb
mov
adc
fidivr
fmul
sub
and
ja
paddsw
cli
mov
call
fcom
push
or
cwde
lahf
and
stos
mul
scas
stc
icebp
int3
aaa
pop
jo
ret
cmp
iret
std
mov
loope
popa
push
scas
out
and
and
jae
addr16
sub
out
pusha
xor
mov
dec
jg
jl
mov
aas
scas
(bad)
mov
call
call
repnz
mov
mov
mov
pop
add
or
push
aam
push
dec
(bad)
xor
xor
cmc
lods
test
xor
outs
pop
ret
jmp
test
das
push
xor
cdq
test
(bad)
jmp
adc
out
push
lea
call
mov
imul
js
ret
ins
shl
sar
jbe
sbb
mov
loop
in
push
ins
sub
aam
mov
sub
jge
push
xchg
jl
xlat
fisubr
ins
dec
ss
sbb
push
rcl
jp
push
pop
jb
push
jecxz
(bad)
aad
(bad)
and
or
and
dec
push
or
sbb
das
std
lods
dec
sti
xor
fist
sbb
es
sbb
ds
aas
jae
cld
les
cld
push
(bad)
movs
mov
mov
repnz
outs
jl
aam
cmp
add
(bad)
push
xor
(bad)
mov
jnp
mov
pop
xor
out
jle
rcr
popf
test
hlt
add
gs
jl
mov
fcomp
fdiv
mov
jp
ret
scas
(bad)
in
(bad)
(bad)
xor
int3
or
inc
loope
cmp
retf
or
stos
dec
hlt
je
mov
in
std
pop
mov
jnp
ret
push
pop
pop
div
loope
add
add
ss
cmp
cmp
push
test
fs
jl
pop
xor
push
dec
addr16
mov
pop
sub
je
(bad)
pusha
imul
lock
and
cmc
jge
xor
bound
xchg
adc
hlt
ja
add
and
lahf
pop
test
xchg
adc
retf
cmp
inc
push
sub
ins
jae
(bad)
(bad)
or
sub
add
add
mov
ja
test
cmp
xor
jp
dec
inc
test
aam
jecxz
and
push
or
pop
jecxz
sbb
inc
dec
ins
sbb
adc
lods
popa
mov
xor
xchg
pop
sar
icebp
loopne
outs
push
push
add
leave
cld
xor
fimul
push
or
ins
das
push
xchg
cwde
cmps
inc
int3
sub
stc
add
int
fdivr
sar
push
out
(bad)
pop
sub
mov
es
mov
je
int
sub
jmp
ins
js
mov
and
je
sbb
push
into
xor
jl
fwait
sub
out
popf
fs
jnp
aas
je
pop
adc
aas
js
mov
les
cmc
push
or
in
or
aad
cmp
mov
fcom
mov
test
popf
mov
mov
push
sbb
sub
dec
hlt
jp
mov
jbe
sub
neg
call
lahf
sahf
out
and
dec
scas
sub
(bad)
fwait
int
std
stc
sub
loopne
mov
movs
je
aas
sar
in
xlat
dec
leave
out
sub
xchg
mov
jmp
pop
jnp
ja
jl
shl
adc
jecxz
shl
mov
popf
nop
jmp
ins
fwait
neg
cmp
pop
pop
xchg
xchg
cmc
mov
mov
adc
aad
jns
mov
sub
cmps
or
sub
lea
inc
setb
push
scas
cmps
sti
xchg
xor
(bad)
mov
pop
jno
mov
mov
push
pop
icebp
cmp
jl
popa
aad
das
in
and
frstor
add
inc
or
in
jg
movs
into
push
test
dec
mov
dec
xchg
inc
jge
and
test
mov
das
mov
rcl
fidivr
ss
fcomp
ror
rol
mov
or
mov
dec
mov
xor
std
sub
into
xchg
sti
mov
inc
or
js
mov
ja
cs
in
xor
inc
test
call
adc
adc
neg
mov
jl
jo
lock
dec
or
dec
stc
inc
icebp
outs
and
js
(bad)
ror
xor
or
pop
adc
rcl
mov
pop
adc
mov
sub
in
in
xchg
jp
fild
int
cli
xor
mov
int3
cmps
cmp
or
jb
sbb
mov
aas
stc
fwait
jg
dec
inc
jbe
out
hlt
ds
push
inc
push
xchg
(bad)
stos
push
xor
add
es
stc
test
cli
xchg
enter
adc
test
sub
sbb
fs
sub
mov
and
mov
push
mov
out
sub
pop
pop
jb
(bad)
cmp
popf
mov
push
int3
inc
and
adc
out
mov
enter
sti
lock
js
test
xchg
push
lds
push
(bad)
pop
in
lahf
mov
call
xor
in
enter
pop
call
lods
push
mov
jmp
mov
push
int
arpl
aad
mov
add
das
xchg
add
mov
repz
fwait
rol
mov
sub
cmp
ret
out
mov
mov
ret
or
pop
mov
es
ins
mov
pop
pop
loope
retf
xchg
les
push
cmp
and
sbb
lea
cmp
inc
clc
sbb
cmp
or
fwait
or
push
pop
sub
sub
mov
xor
mov
(bad)
(bad)
rcl
adc
adc
jg
inc
mov
repz
push
(bad)
(bad)
cmp
clc
scas
pop
nop
arpl
xchg
and
cwde
add
mov
es
mov
lods
in
cld
cmp
leave
pusha
inc
pop
mov
xchg
pop
sub
out
pop
in
sub
movs
in
cmps
dec
cmp
cmps
dec
mov
mov
(bad)
arpl
mov
xchg
inc
cmp
fs
add
sahf
stos
jl
retf
loopne
ja
add
mov
cmp
mov
sub
mov
ss
and
fdiv
div
mov
cld
neg
iret
mov
and
lock
dec
lock
ret
popa
lds
movs
xchg
test
mov
cmp
mov
cmp
mov
or
mov
fwait
test
dec
add
ins
jne
mov
int
aad
push
push
lock
in
pop
imul
add
mov
push
cld
inc
out
push
fstp
add
add
fild
push
int
imul
idiv
lods
arpl
test
sahf
and
and
sub
les
std
(bad)
mov
(bad)
loopne
mov
xchg
push
retf
mov
push
mov
push
outs
movs
cmp
jl
xchg
fisttp
dec
push
inc
sbb
rcr
cs
imul
add
inc
push
add
mov
or
fbstp
push
leave
outs
adc
sbb
inc
jne
dec
(bad)
pop
xchg
xchg
(bad)
div
pop
cwde
cs
inc
cmp
stc
call
xor
loope
test
inc
cwde
xor
jb
push
jp
xchg
cmp
fisub
stc
xor
fs
jns
mov
cmc
fistp
cmp
jle
cmc
sub
add
fsub
jmp
dec
repz
or
cmp
sub
cli
mov
adc
pcmpgtd
cli
inc
ss
push
xor
aas
ror
inc
pop
sub
xlat
push
mov
or
or
pushf
mov
xchg
cmp
mov
(bad)
push
cmp
stos
pop
pop
cli
push
jecxz
pushf
stos
je
paddq
ins
stos
nop
adc
mov
sbb
xchg
test
jg
arpl
xor
retf
outs
(bad)
cs
xchg
movs
sbb
push
add
mov
shl
fdiv
jae
call
mov
enter
out
pop
xor
mov
or
mov
mov
ja
retf
push
mov
xor
mov
test
xor
xchg
movs
repnz
fisttp
xor
test
in
or
cwde
ror
or
(bad)
sub
inc
pop
imul
retf
adc
xchg
mov
adc
pop
(bad)
je
adc
push
or
cmp
jns
jl
and
(bad)
(bad)
cdq
dec
inc
push
stos
jmp
hlt
jp
dec
test
cld
mov
jns
push
sahf
hlt
dec
enter
ret
sub
mov
mov
stc
lods
xchg
jmp
pop
in
sub
and
xor
add
mov
adc
mov
cli
movs
js
mov
push
mov
adc
(bad)
jne
arpl
in
mov
mov
cs
fs
inc
cs
xor
adc
mov
bound
int
lods
push
test
adc
movs
es
call
and
cs
cdq
aad
arpl
out
scas
jl
lods
add
rcl
cmp
push
mov
cmp
cmps
add
in
dec
(bad)
enter
sub
rcr
es
sahf
sub
mov
inc
loopne
bound
fadd
ror
dec
pop
stos
cmps
xor
sub
loope
sbb
sti
add
clc
shl
and
fs
sbb
xor
adc
sbb
int3
repz
pop
sbb
popa
rcl
inc
dec
iret
mov
pop
(bad)
test
ins
in
push
mov
(bad)
jl
mov
and
sbb
ret
jmp
enter
bound
cmp
out
adc
hlt
daa
scas
mov
jno
or
cs
jecxz
xchg
mov
pop
sub
dec
mov
sar
ror
push
loope
mov
cs
lea
lahf
xchg
fild
sub
jecxz
inc
xchg
ins
call
sbb
pop
movs
mov
xchg
iret
and
xchg
push
scas
pop
repnz
test
sbb
and
and
loop
mov
inc
rcl
jmp
sbb
ror
inc
fwait
jo
pop
xchg
pop
adc
dec
xlat
aad
enter
add
hlt
mov
idiv
neg
dec
fcom
fiadd
cmps
sti
push
or
cmp
das
int
out
pop
sub
pop
mov
js
mov
js
lock
cmp
int
mov
or
stos
sbb
jp
mov
call
outs
pavgw
cwde
add
cs
mov
add
ret
sub
stos
hlt
call
mov
xchg
aas
jmp
retf
shl
sbb
sub
test
jne
jb
int3
in
inc
icebp
and
mul
jno
idiv
test
pop
sub
scas
pop
lahf
fnstenv
mov
out
test
pop
adc
push
fcomp
adc
and
cwde
mov
add
call
cli
pushf
leave
call
fdivr
pop
mov
inc
jmp
adc
dec
(bad)
popf
mov
mov
add
push
mov
mov
jecxz
dec
xchg
int3
jge
mov
in
(bad)
out
xor
mov
fisub
jg
pop
in
and
mov
xor
(bad)
aaa
xchg
stos
clc
mov
pushf
add
dec
mov
adc
out
xchg
jg
xchg
jo
in
mov
sub
stos
mov
(bad)
sub
cli
js
addr16
lahf
sbb
sub
pop
sbb
dec
out
mov
cld
push
push
mov
das
lock
add
(bad)
out
vpmacsdd
mov
cmps
cwde
fmul
sbb
pop
dec
mov
push
rcr
sbb
mov
ret
sub
fiadd
xchg
mov
inc
jge
(bad)
cmp
xchg
xchg
pusha
push
pop
ror
mov
dec
pusha
push
ret
jmp
xchg
adc
mul
and
jne
pop
xor
dec
sub
and
and
js
fwait
shl
adc
dec
(bad)
push
or
rcl
cmp
pop
mov
mov
psubusb
or
ror
fistp
or
mov
mov
gs
inc
push
out
test
adc
icebp
and
sub
dec
fcomp
jb
ret
icebp
les
pop
mov
cli
es
or
or
test
jo
out
sub
or
and
push
lahf
mov
cli
ret
cmp
fs
in
inc
mov
jmp
sub
es
inc
cmp
loope
cmp
loope
mov
push
in
sub
adc
sbb
mov
pop
sbb
xchg
dec
dec
mov
jne
inc
xlat
lods
repz
test
std
repnz
mov
push
mov
jmp
mov
sbb
adc
dec
dec
inc
dec
movs
fidiv
pop
sub
in
mov
lods
call
push
outs
dec
sub
inc
push
xor
clc
jb
(bad)
pop
pop
cdq
mov
adc
dec
cmp
leave
repz
or
in
cmp
js
sbb
(bad)
test
add
lock
in
ja
fwait
or
and
(bad)
push
and
push
loopne
mov
call
or
enter
mov
rcl
sub
xchg
outs
and
pop
mov
mov
stos
pop
aas
pop
jae
pop
mov
fnstenv
and
mov
stc
inc
dec
ins
cmp
dec
xchg
inc
arpl
push
ds
fcomp
in
stos
idiv
xor
push
inc
mov
mov
loop
test
shl
push
repnz
mov
ret
mov
repnz
cmps
jno
in
scas
mov
push
iret
cmp
jo
mov
mov
mov
fadd
je
aaa
ret
imul
jns
mov
imul
mov
imul
xchg
jle
loop
call
mov
and
loope
clc
or
and
mov
iret
adc
xchg
stos
pushf
rcr
scas
pop
pop
call
hlt
or
dec
sub
ret
inc
test
mov
(bad)
cmps
pop
xor
pop
repz
inc
sbb
and
scas
fsubrp
xor
loopne
push
lods
mov
dec
jp
sar
cmp
inc
and
sahf
adc
movs
add
push
lds
je
pushf
fdivr
popf
mov
bound
or
adc
inc
cmp
mov
sub
jmp
retf
scas
ds
cmp
xchg
inc
out
inc
adc
mov
in
rcr
sbb
test
push
inc
js
(bad)
mov
in
je
xchg
xlat
mov
loop
mov
call
movs
lock
inc
push
push
sub
jmp
cmp
mov
mov
test
stos
xor
movs
adc
push
int
push
aam
dec
scas
xor
cmps
jp
mov
xor
rsm
sbb
xchg
mov
mov
xchg
xchg
mov
mov
sbb
lds
pop
push
popf
call
bound
int
xchg
pop
and
cdq
or
mov
sbb
xchg
push
sbb
pop
imul
mov
sbb
dec
and
leave
jbe
push
or
inc
test
jl
inc
test
das
pushf
popa
ins
pop
or
mov
push
mov
retf
and
dec
adc
out
sbb
and
cld
das
push
or
xchg
mov
mov
test
pop
in
push
pop
and
std
ss
and
pop
mov
dec
add
addr16
dec
sbb
ja
jmp
add
and
fdivrp
push
popa
mov
in
fnsave
je
clc
xor
fistp
push
mov
stos
and
iret
cmc
(bad)
fcom
cmp
push
mov
mov
mov
mov
int
or
ja
pushf
mov
inc
fild
test
and
cld
mov
xchg
es
popa
ins
adc
cli
push
mov
scas
pop
xor
clc
lods
sbb
pop
xor
inc
pushf
fistp
(bad)
imul
test
mul
mov
adc
add
mov
sbb
(bad)
sbb
repnz
loopne
jmp
movs
mov
push
fadd
sub
ds
dec
xchg
sahf
jge
call
mov
fcom
xchg
das
mov
movs
push
xchg
adc
int
popf
fdiv
imul
call
and
add
fmul
mov
arpl
jle
pop
and
xor
and
arpl
movs
dec
sbb
cmp
mov
aas
mov
jns
mov
xchg
sub
sub
imul
xlat
inc
sbb
mov
xor
out
sbb
mov
out
cmps
sub
jns
mov
jb
loop
sbb
push
or
jecxz
adc
push
outs
or
inc
lds
pop
nop
(bad)
cld
sub
in
mov
xchg
loop
or
mov
push
adc
fs
xchg
mov
in
inc
cmps
dec
pusha
and
jbe
and
jle
and
div
js
dec
push
and
adc
or
out
movs
sahf
push
xor
and
imul
lds
or
not
push
fstp
cmps
inc
pop
mov
sub
push
cmc
push
ret
push
inc
dec
cmp
dec
and
shl
ins
loopne
test
shl
das
fild
dec
dec
call
xchg
scas
sub
inc
test
adc
cli
outs
std
push
push
das
aaa
dec
int
pop
xor
ret
bnd
dec
inc
jge
mov
dec
mov
ins
retf
enter
and
fsubr
mov
mov
jle
mov
cmp
add
arpl
movs
cli
xchg
cmp
inc
fisub
mov
sub
jmp
add
sub
scas
dec
out
scas
add
cmps
xchg
iret
ins
jmp
xchg
mov
dec
sbb
das
jmp
mov
popa
mov
je
sbb
push
cwde
mov
ds
mov
ror
cmc
std
xchg
jl
xchg
xchg
js
jmp
movs
mov
data16
xchg
mov
and
jnp
sbb
and
mov
fadd
push
orps
pop
or
push
arpl
test
jmp
fld
sar
push
icebp
imul
test
dec
jecxz
out
fmul
movs
(bad)
fmul
push
les
xchg
(bad)
sbb
ins
ds
inc
add
cmp
stc
scas
aas
sbb
(bad)
into
aad
mov
adc
add
jmp
sbb
sahf
out
outs
enter
xchg
fisub
test
pop
test
out
es
mov
icebp
pop
sbb
mov
cmp
jle
and
std
pop
cmp
xor
ins
adc
cmp
and
dec
inc
xchg
rol
jno
mov
cdq
sub
pop
mov
iret
inc
mov
enter
jno
mov
xchg
push
test
jecxz
mov
push
jns
sar
add
int
xor
in
mov
icebp
push
stc
push
int
or
mov
pop
sti
xor
or
pop
out
ffree
pop
or
push
sbb
xchg
push
xor
inc
test
dec
inc
cs
(bad)
call
outs
lods
loope
mov
je
cmp
add
mov
sub
sbb
mov
jae
sub
jae
enter
shl
shr
mov
sub
add
xor
and
sub
xor
mov
mov
fimul
add
mov
dec
jo
jo
cwde
test
pop
int
retf
sbb
(bad)
mov
dec
pop
cld
xor
inc
push
mov
rcl
aas
mov
jns
ds
movs
nop
test
out
inc
pop
pusha
scas
mov
jnp
lods
cmps
mov
dec
gs
in
shl
pushf
shl
cmp
mov
push
test
mov
push
push
mov
xchg
imul
adc
jne
xor
sahf
dec
cmp
in
ja
xchg
test
lea
mov
fsub
cmc
sti
lahf
call
jmp
mov
mov
adc
ins
adc
pusha
pop
repz
and
sti
ins
pop
dec
aas
into
jecxz
repz
inc
mov
push
xchg
rcl
xor
rcl
pop
add
sbb
mov
jg
leave
cdq
(bad)
int3
loop
add
std
push
aam
jnp
cmp
or
mov
pushf
pop
pop
ror
or
cli
outs
mov
jb
fcmovnbe
imul
aam
sahf
fldcw
(bad)
xchg
mov
neg
push
lea
mov
and
jp
push
pop
inc
or
push
fmul
ds
cmp
jne
mov
add
mov
or
or
clc
lahf
inc
movs
mov
mov
dec
ss
shl
shl
aad
sbb
or
js
dec
pop
or
rcr
hlt
fnstcw
xchg
in
aaa
lods
mov
or
push
xor
add
mov
push
into
mov
ins
push
ret
xlat
gs
dec
(bad)
(bad)
jbe
mov
and
cmp
lods
aas
ror
and
mov
mov
arpl
test
mov
mov
cld
sbb
cmp
sar
and
and
aad
sbb
std
rcl
(bad)
aas
cmp
xchg
mov
mov
jle
call
lea
inc
dec
cwde
dec
aaa
(bad)
stos
out
loopne
push
adc
in
bound
dec
adc
sahf
ins
ins
mov
sub
push
mov
ins
clc
and
pop
in
jl
pop
addr16
outs
shr
mov
int
dec
loopne
cmp
mov
jecxz
push
mov
(bad)
into
sbb
mov
pushf
jmp
inc
mov
shl
mov
jmp
xchg
add
xor
aas
pushf
test
cmp
xchg
or
cmp
icebp
fld
imul
mov
sbb
fild
xchg
ffreep
lds
test
scas
push
mov
in
test
sbb
pop
lods
or
push
dec
add
sub
adc
xchg
push
xor
call
loop
jmp
loope
fucomi
pusha
(bad)
sahf
jno
xor
xchg
in
xchg
shr
pop
sbb
jno
sbb
inc
fucomip
enter
mov
and
popa
es
mov
cmp
or
lea
pushf
cmps
push
cmp
jnp
jmp
or
xchg
sub
xor
jnp
in
loopne
adc
add
ins
dec
push
push
push
push
das
arpl
xchg
sti
popa
jno
jnp
aam
psubusb
mov
push
sahf
fisubr
(bad)
fcomip
cmp
fcmovu
sbb
into
and
sbb
out
iret
xor
les
outs
and
jns
daa
jmp
or
mov
inc
les
jge
adc
inc
push
and
mov
loop
xor
sub
inc
sbb
pop
data16
or
bound
xchg
push
call
jmp
push
imul
jle
xor
mov
mov
fdivr
test
jle
pop
js
dec
add
(bad)
in
in
adc
test
jecxz
xchg
arpl
xchg
cdq
jmp
inc
cmps
test
movs
cs
hlt
pop
dec
jnp
nop
or
sub
cdq
arpl
mov
cmp
out
add
mov
popa
cmp
test
les
std
shl
sar
sbb
test
sub
enter
repnz
popa
xchg
mov
fcomp
aaa
mov
jmp
dec
in
ficomp
adc
push
cld
(bad)
mov
es
mov
mov
adc
adc
sub
out
add
mov
mov
push
retf
push
test
inc
push
sub
xchg
adc
xor
sbb
xchg
fwait
daa
out
int
jp
inc
xor
sub
sbb
(bad)
leave
xor
or
fstp
jbe
les
pop
into
mov
(bad)
or
jmp
data16
test
adc
in
jecxz
mov
push
pusha
adc
loope
imul
add
push
inc
adc
fst
cwde
and
retf
mov
cmc
repz
dec
pop
jns
sub
lahf
shl
call
ja
push
mov
daa
jmp
jp
loop
cdq
in
fcom
es
shl
mov
test
mov
cmp
mov
cmp
movs
adc
sub
or
sahf
out
mov
pop
ds
xchg
dec
and
cmp
in
mov
(bad)
sbb
sub
dec
in
arpl
cmp
adc
mov
or
mov
inc
lea
jl
cld
das
pusha
push
sbb
out
lods
add
repnz
cmps
adc
dec
es
cmc
(bad)
call
cmp
jp
xor
not
pop
ins
pop
cs
and
inc
clc
enter
mov
or
sub
call
sub
clc
into
adc
sub
lock
dec
dec
xchg
les
mov
pop
(bad)
push
icebp
cmps
movs
ret
sbb
sub
and
push
pop
pop
pop
xor
daa
push
or
(bad)
mov
aaa
push
xlat
mov
sbb
sbb
adc
aaa
loopne
sub
dec
pop
cmp
pop
sbb
sbb
push
add
mov
dec
arpl
xor
out
and
lock
scas
jb
xchg
jae
pop
sub
outs
stc
push
pop
sub
jbe
push
mov
jp
sub
mov
call
mov
push
repnz
pop
inc
sbb
cmp
not
ror
mov
push
out
mov
dec
xchg
out
mov
dec
fdivr
cmp
mov
leave
pop
pop
adc
cld
in
clc
mov
inc
or
dec
daa
fmul
fidivr
pop
inc
or
ja
test
inc
pop
push
test
cmp
and
out
cld
sbb
sti
leave
pop
int
arpl
pop
jmp
add
(bad)
cmp
xor
push
mul
ret
fiadd
sbb
sbb
inc
aaa
adc
adc
push
fwait
shr
(bad)
neg
push
xor
pop
sub
push
out
xchg
iret
inc
call
push
ficomp
mov
mov
pop
cmps
jne
je
push
das
rcr
mov
xchg
and
jbe
movs
jbe
and
aad
cmp
dec
loop
retf
ret
in
jmp
sub
int3
add
cmp
nop
add
(bad)
cs
xchg
mov
sti
imul
xchg
adc
jnp
repnz
scas
scas
mov
lahf
dec
repz
xchg
jnp
add
inc
add
pop
add
adc
cmps
cmp
call
xor
push
mov
test
lock
cwde
mov
push
leave
icebp
daa
hlt
aaa
repz
or
xchg
daa
mov
cs
jo
xchg
outs
sar
int
cmp
addr16
iret
test
jmp
mov
scas
neg
inc
mov
jg
clc
push
pop
dec
scas
arpl
fimul
cmp
dec
lods
rcr
push
xor
loopne
jns
fist
mov
adc
jg
pop
outs
sbb
xor
popf
pop
fwait
loopne
leave
jnp
mov
mov
mov
scas
(bad)
mov
push
(bad)
popa
addr16
jb
data16
aaa
dec
es
lock
fisubr
jl
sahf
sub
or
sub
pusha
mov
sahf
cmps
cmp
or
out
pop
fwait
mov
mov
cdq
jge
into
jnp
cmp
rcl
mov
xchg
aad
or
inc
pop
stos
stos
rcl
sbb
loope
fsubr
inc
and
fwait
test
inc
gs
dec
in
lock
mov
popf
ja
call
xchg
ror
jmp
lods
adc
imul
add
mov
dec
ins
dec
jns
arpl
repz
lods
(bad)
pop
(bad)
ret
jg
sub
sbb
inc
dec
js
(bad)
dec
call
jle
frndint
pop
add
mov
or
mov
jle
cmp
iret
cmp
(bad)
cmp
add
pop
xor
mov
push
mov
out
xchg
neg
loop
daa
mov
loop
out
dec
icebp
xchg
xchg
xchg
adc
mov
mov
jne
xchg
shl
mov
adc
or
in
pop
mov
sub
adc
(bad)
dec
mov
scas
pop
add
rol
std
loopne
pcmpgtd
int
jmp
cmp
aas
je
clc
add
xchg
pop
add
daa
jb
cmp
std
sti
inc
sbb
jle
push
test
clc
ficomp
sbb
pop
jno
and
xor
es
addr16
jne
pushf
cli
dec
adc
popa
push
js
xchg
scas
mov
dec
and
ins
in
addr16
cmp
je
push
jo
in
aas
xchg
push
iret
mov
mov
lods
scas
add
lahf
pop
das
sub
imul
sbb
mov
jns
dec
cdq
retf
xchg
add
add
xchg
sar
call
fs
sbb
add
add
push
fiadd
and
mov
repnz
shl
lods
xlat
or
dec
(bad)
out
lods
pop
cs
inc
(bad)
sbb
cwde
or
inc
mov
pop
mov
aam
mov
sub
cmp
movs
pop
icebp
daa
pop
popf
dec
dec
ins
xchg
dec
jns
xchg
popa
ins
add
add
cmp
fidiv
mov
mov
sub
mov
dec
mov
dec
int
icebp
cmp
int3
sbb
jmp
jb
psllw
sub
scas
jae
sub
lods
mov
ins
inc
aas
inc
gs
shl
mov
je
push
stos
xor
jp
cmp
xor
into
cmps
jno
push
mov
aaa
call
push
push
sbb
sar
cmp
call
sahf
mov
ds
scas
dec
cmp
dec
div
das
inc
jmp
imul
daa
jnp
and
jge
movs
scas
pop
sbb
push
inc
jns
and
mov
icebp
aaa
loope
pop
dec
and
xor
add
fwait
push
sbb
dec
xor
jecxz
sbb
in
fmul
ret
mov
push
mov
(bad)
sahf
mov
xor
ret
in
push
ds
jmp
popa
cmc
cmp
ja
mov
jo
jmp
(bad)
in
xchg
mov
inc
pop
out
mov
retf
pop
jne
movs
ret
xchg
mul
sbb
das
mov
movs
enter
sar
outs
lahf
shl
inc
jp
dec
push
mov
inc
idiv
mov
or
or
out
popa
sar
or
in
in
fdivr
xor
out
pop
sti
mov
dec
mov
sti
dec
ret
jb
jle
jae
and
std
cmp
push
or
je
idiv
jp
sub
add
sar
inc
iret
das
jge
cld
lods
mov
and
shl
dec
pop
mov
xchg
add
pop
bnd
xlat
sbb
and
repnz
pop
outs
cmp
les
jns
std
cmp
push
sub
neg
sar
jg
push
mov
mov
sub
aad
xchg
push
mov
stos
push
loopne
push
dec
mov
sbb
cmp
bound
outs
xchg
pop
imul
les
cmp
not
push
loop
mov
cmps
ds
gs
fnstcw
pop
aam
das
shr
adc
mov
cmps
ins
xchg
sub
push
sbb
adc
sub
ds
mov
cwde
cmps
xchg
movs
jne
and
in
add
lahf
xor
xchg
dec
cld
cmps
jbe
add
mov
mov
fwait
xchg
mov
loope
push
int3
push
fst
ins
xor
sub
sub
lea
popf
sub
movs
clc
or
out
mov
mov
data16
sbb
scas
or
jb
and
sbb
mov
mov
(bad)
adc
bound
stos
sti
cwde
stos
or
int
xlat
dec
lods
cmp
jmp
mov
jno
test
jle
dec
push
popf
and
stc
in
out
jno
jo
xchg
js
(bad)
mov
pop
repz
das
je
nop
or
and
or
arpl
int
mov
xor
cmps
in
mov
jmp
mov
adc
popa
(bad)
and
test
out
adc
or
repnz
cmp
and
aam
fist
scas
mov
(bad)
pop
or
addr16
cmps
std
or
dec
in
inc
xchg
xchg
push
cmp
sbb
push
je
jg
jge
stc
push
ret
xchg
inc
sbb
pop
cld
shl
ret
loopne
jl
mov
retf
or
cmps
imul
jnp
stc
sub
aad
add
fadd
outs
sbb
iret
mov
test
loop
cmp
loop
sub
inc
adc
or
dec
imul
xor
and
int
mov
sahf
ja
arpl
aas
mov
test
inc
jnp
jecxz
sbb
idiv
cmp
mov
push
or
enter
inc
ret
into
into
(bad)
cmp
add
or
and
clc
jmp
pop
icebp
mov
sahf
xor
push
sar
xchg
mov
push
ins
movs
or
mov
mov
rol
push
inc
adc
sahf
dec
rol
fmul
lds
adc
jecxz
cmps
repnz
jecxz
xchg
mov
xchg
loope
cmp
mov
dec
icebp
jne
lock
lds
ins
or
and
sub
jnp
in
push
inc
inc
retf
jge
pop
movs
je
out
jo
pop
in
div
jmp
fcom
ins
in
push
xchg
inc
inc
bound
(bad)
ins
fsub
and
(bad)
into
(bad)
aad
imul
(bad)
(bad)
xchg
push
imul
mov
call
aas
outs
push
in
loop
pop
push
out
int3
clc
jne
xor
cmp
pop
rol
loopne
push
and
sub
xchg
ins
movs
sbb
(bad)
adc
hlt
jle
ins
mov
test
loopne
mov
mov
ss
test
leave
jbe
sub
push
and
ds
sub
aaa
push
pop
loope
sahf
mov
rcr
dec
sar
je
out
(bad)
mov
pop
pop
jb
xchg
inc
pusha
mov
xchg
adc
mov
push
push
int3
push
(bad)
aam
push
xchg
push
xchg
cmp
div
repnz
neg
out
xchg
pop
fild
push
in
add
push
mov
mov
push
jns
xchg
pop
jae
add
mov
or
loop
xchg
push
jecxz
movs
into
rol
in
sub
ror
or
pop
sbb
into
(bad)
xor
cs
out
sub
add
dec
stos
inc
das
call
or
xchg
je
mov
iret
or
push
popf
enter
cdq
cwde
dec
sbb
out
mov
movs
(bad)
aam
mov
inc
leave
ins
push
mov
add
push
xchg
dec
sub
(bad)
jno
inc
xchg
ins
sbb
push
adc
lahf
pop
cmp
in
outs
jg
pop
fs
(bad)
retf
call
pmuludq
pop
scas
xchg
push
sti
ret
jb
outs
push
retf
stc
inc
outs
call
bound
add
test
push
in
inc
xor
sbb
cmp
mov
mov
aas
xchg
mov
outs
pop
dec
test
idiv
stos
mov
and
or
pop
dec
movs
jge
pop
sti
out
add
push
loopne
xchg
(bad)
lds
test
pop
cmp
test
jmp
jns
pop
rcr
xchg
cmc
cmp
xchg
fstp
jg
add
sbb
int
add
adc
mov
xor
mov
lea
fsqrt
add
stc
pop
xor
mov
std
inc
mov
leave
xor
xchg
and
push
cmp
or
pushf
scas
ficom
pop
pop
mov
test
popf
sahf
xchg
cmp
imul
and
xor
rcl
jge
cmps
loopne
mov
pop
leave
movs
pushf
(bad)
daa
jbe
inc
in
push
ss
sub
jle
sbb
loope
das
sbb
leave
inc
jp
inc
cs
mov
rol
add
(bad)
cld
and
push
cmc
mov
inc
loopne
lods
loope
sub
cli
xor
and
inc
(bad)
jae
sbb
adc
aam
sub
xor
in
mov
jp
push
rcr
sbb
adc
shl
out
inc
movs
adc
push
mov
xor
push
ds
cmps
xor
push
rol
and
aad
daa
mov
imul
test
mov
(bad)
xor
out
in
add
leave
in
sub
xchg
lods
sub
in
fbld
loopne
and
push
imul
push
call
jbe
push
pop
ja
dec
xchg
mov
jo
jnp
(bad)
push
daa
enter
inc
xlat
bound
and
imul
sti
sbb
add
mov
loop
retf
dec
and
pop
fidivr
mov
mov
jmp
or
test
add
std
push
mov
call
pop
ss
or
mov
fmul
jae
outs
(bad)
(bad)
lds
cwde
lods
jmp
xchg
push
out
ror
loop
in
aas
adc
jnp
fwait
sub
retf
inc
jp
jmp
aad
test
inc
dec
mov
push
sahf
push
stos
rol
mov
lds
iret
in
into
out
jae
retf
fcom
pop
mov
xlat
push
(bad)
nop
and
jmp
inc
scas
iret
cs
xchg
cmp
out
test
mov
jmp
jne
fmul
ja
iret
and
repnz
xchg
mul
clc
shr
mov
jnp
hlt
inc
test
enter
movs
ror
movs
popa
xor
rcl
out
cmp
xchg
mov
aaa
(bad)
jnp
ret
sub
pop
push
jne
outs
out
mov
mov
jle
inc
inc
aam
scas
mov
mov
or
jbe
mov
push
xchg
or
mov
mov
imul
retf
sar
jo
adc
jo
jo
or
in
xor
sbb
pop
imul
jno
sub
mov
push
jecxz
in
sbb
push
shl
inc
xor
xchg
call
mov
sub
and
jge
mov
sub
aam
push
in
mov
pop
inc
jge
adc
ds
adc
inc
dec
pop
fnsave
retf
mov
mov
mov
(bad)
cmp
lea
push
add
fild
pop
jmp
jmp
outs
adc
cmp
pop
add
cwde
adc
or
jae
(bad)
jo
ret
cmp
pop
inc
je
out
cmc
mov
imul
stos
inc
cmp
xor
pop
mov
or
cli
mov
sbb
stos
loop
push
gs
cmp
sub
cmp
and
out
in
das
popa
test
dec
xchg
cmp
cmp
cmp
mov
fmul
jmp
jmp
pop
cmps
mov
push
xor
(bad)
loop
fist
sub
icebp
dec
outs
xor
fucomip
(bad)
xchg
lahf
mov
in
ret
popa
mov
mov
jmp
stos
fild
ud1
add
pop
ret
mov
and
xor
xchg
call
mov
or
ret
dec
xor
(bad)
xchg
and
mov
js
xchg
jns
cmp
cmp
push
je
fcomp
stos
in
pop
(bad)
fnstsw
mov
push
iret
and
sbb
aad
pop
test
inc
sti
int3
jne
inc
adc
or
fild
popa
cmps
cmp
fdivr
sbb
jmp
in
(bad)
cli
jg
lahf
adc
and
shl
jmp
dec
out
pop
mov
std
es
into
sbb
rcl
jge
cmps
inc
call
adc
jp
loop
mov
xor
pop
cmps
add
int3
mov
out
adc
mov
lds
cli
xor
jno
inc
cmp
or
retf
and
sub
pop
dec
dec
bound
dec
sar
icebp
mov
xchg
sbb
div
inc
mov
mov
aad
add
lods
sub
loope
test
mov
imul
adc
in
or
jnp
out
mov
push
test
and
pushf
cmps
and
sar
cwde
or
jle
adc
jle
test
mov
jp
ret
mov
sar
cdq
xchg
or
dec
js
cld
ficomp
sbb
rcr
inc
mov
imul
push
push
iret
or
jl
out
frstor
inc
push
push
push
xchg
xor
and
(bad)
cs
cmp
bound
je
int3
ficom
mov
retf
dec
or
mov
dec
lahf
in
mov
fstp
pusha
inc
cmp
sub
push
jle
xchg
push
or
xchg
push
jg
mov
mov
xchg
in
sbb
ret
add
cmps
call
std
dec
lods
ror
push
pop
or
add
sbb
ins
mov
cld
shl
inc
mov
nop
aad
push
cmps
mov
loope
sti
inc
fiadd
cli
ss
in
cli
fiadd
cmc
jne
add
enter
bound
inc
pop
add
mov
or
iret
cmc
loop
mov
sub
mov
mov
scas
adc
pop
aad
in
xchg
cmp
sbb
lock
and
cmp
cmp
enter
cs
xor
popa
scas
push
mov
(bad)
mov
mov
imul
or
js
jne
cmps
enter
jnp
push
xchg
fbstp
pop
jmp
mov
loopne
pop
lock
inc
mov
mov
mov
jmp
aas
cld
and
call
shl
test
mov
inc
retf
(bad)
call
std
push
jne
push
adc
(bad)
xchg
cmp
test
cmp
xor
xchg
std
into
push
xchg
push
dec
int3
or
add
aam
in
pop
ret
push
pusha
sbb
push
inc
mov
push
jecxz
mov
mov
xchg
push
pop
retf
add
in
scas
movs
mov
push
out
xchg
push
sahf
hlt
popaw
mov
jecxz
inc
jg
daa
enter
les
fsubr
iret
adc
fdiv
repz
(bad)
call
dec
ja
jns
mov
dec
std
mov
cmp
imul
(bad)
mov
(bad)
jmp
out
cmp
rcr
and
lock
jge
pop
stos
mov
add
(bad)
gs
pop
sub
jo
push
rcl
mov
mov
in
out
(bad)
repnz
fwait
mul
hlt
enter
sbb
sar
add
nop
xor
jg
mov
cmp
dec
std
push
jno
cmp
into
ins
and
inc
dec
push
scas
xor
push
add
test
cmp
popf
int
and
inc
or
out
and
stos
cmp
add
push
dec
adc
loope
mov
dec
loope
adc
imul
mov
inc
scas
jl
pusha
mov
push
icebp
jb
xchg
inc
push
dec
fldcw
add
(bad)
lock
add
enter
mov
push
lods
fisubr
ss
xchg
pop
stos
gs
mov
xchg
cdq
(bad)
test
dec
data16
je
inc
nop
jp
pop
jmp
add
jnp
cmp
jmp
mov
cmp
outs
(bad)
jne
jg
dec
jnp
adc
fidivr
inc
push
add
rcr
clc
sub
xchg
mov
xchg
aad
mov
rcl
push
mov
nop
(bad)
or
sub
xchg
ss
jae
pop
ins
in
adc
test
push
jb
cmps
loop
add
xlat
ins
aad
xchg
shl
jb
sub
cmp
push
jbe
and
mov
add
inc
push
call
add
sub
test
adc
pusha
pop
or
retf
daa
(bad)
ror
(bad)
pop
nop
or
jecxz
jmp
mov
retf
adc
dec
push
daa
xor
or
sbb
lock
mov
jae
test
add
jbe
fsubr
mov
or
mov
out
pop
fdivr
xor
or
push
sbb
into
xor
and
mov
pusha
push
add
cmps
pop
push
enter
xor
mov
lods
dec
xchg
pop
mov
adc
pop
lea
ficomp
jne
test
into
movs
mov
iret
iret
adc
in
fwait
adc
jns
pushf
sub
push
(bad)
fdivr
add
xchg
enter
pop
aas
push
scas
or
push
pop
dec
jb
add
lea
xchg
xchg
rol
iret
push
(bad)
and
sub
push
arpl
push
push
aad
mov
and
fnstenv
fld
jbe
sub
test
inc
outs
(bad)
or
mov
int
dec
mov
int
adc
std
sbb
pop
leave
hlt
sbb
inc
(bad)
mov
ds
push
aam
xchg
push
(bad)
cmp
retf
inc
mov
pushf
push
icebp
repz
inc
mov
sub
and
adc
loopne
jp
lods
pop
(bad)
ficomp
(bad)
(bad)
cmp
test
cmp
gs
ins
ja
sbb
fst
fiadd
fisttp
ds
je
test
iret
sbb
call
mov
push
pop
sub
pop
or
fs
lods
cmp
mov
or
fisubr
or
test
dec
and
push
loop
test
les
jmp
mov
inc
cmp
test
lock
addr16
sub
in
lods
jmp
jo
ror
leave
fmul
popa
jno
lea
pop
jle
cmp
les
or
mov
es
xchg
into
js
int3
inc
ret
movs
sbb
jmp
xor
xchg
aad
add
addr16
std
and
pop
jnp
test
fdiv
jb
cli
arpl
mov
ins
adc
rcl
pop
imul
mov
inc
push
ror
adc
mov
xchg
scas
or
out
inc
sbb
inc
imul
jecxz
fadd
jbe
xchg
push
inc
add
pop
clc
jne
stc
add
hlt
pop
inc
nop
jmp
into
int
sbb
jge
cmc
mov
lahf
movs
mov
lds
inc
add
push
idiv
outs
jmp
ror
inc
jno
sahf
test
jmp
add
jne
sbb
push
mov
les
cmp
jb
xor
xor
adc
rol
cmp
repnz
out
jl
mov
pop
push
test
mov
pusha
adc
add
jmp
dec
aad
pop
xchg
dec
mov
mov
mov
loopne
bound
clc
ins
mov
cmp
or
cmc
jmp
cmps
cmp
cli
out
mov
jge
inc
push
cs
mov
test
arpl
pop
movs
pop
test
retf
or
mov
fist
out
adc
sub
outs
cmp
add
pushf
or
clc
das
pusha
pop
jmp
pop
xchg
ds
mov
xchg
mov
aad
leave
out
mov
inc
mov
mov
cmps
loop
xchg
aaa
jg
inc
lock
shl
adc
lea
outs
xchg
ds
mov
ret
jb
pop
jmp
(bad)
sti
mov
jmp
add
repz
out
cld
cmp
in
sub
retf
xor
enter
cmps
xchg
aaa
xor
aam
call
or
das
mov
(bad)
aam
jge
jnp
es
retf
out
mov
jle
xchg
dec
jbe
icebp
add
cdq
inc
jno
call
(bad)
fcomi
and
ret
outs
in
mov
mov
rcl
lock
xor
mov
mov
scas
mov
enter
daa
or
(bad)
sbb
mov
jp
inc
inc
and
mov
mov
or
(bad)
pop
test
ja
xor
pop
lods
ret
test
mov
mov
nop
ror
fs
enter
push
inc
mov
loope
sbb
push
nop
jae
jnp
stos
sub
jmp
loop
mov
aad
push
mov
loopne
shl
ins
clc
mov
adc
and
jne
jp
mov
mov
mov
iret
mov
push
add
mov
loop
imul
scas
nop
or
dec
xchg
xor
mov
(bad)
dec
jbe
sub
sbb
(bad)
pushf
inc
addr16
dec
mov
test
inc
es
fild
fistp
loop
dec
xchg
mov
call
in
or
retf
push
adc
inc
push
adc
mov
cmps
jl
shr
inc
add
jns
das
inc
cmc
rep
sub
(bad)
sub
dec
movs
mov
pushf
dec
and
call
sub
mov
pop
mov
pop
mov
ret
leave
sti
add
jae
int
pop
gs
mov
(bad)
jp
sbb
adc
dec
mov
mov
movs
loop
sub
arpl
xchg
int
xchg
out
ja
in
mov
sbb
push
push
std
jbe
jno
loopne
lahf
cdq
movs
or
int
loop
push
or
sar
loope
mov
pop
(bad)
cmps
cmps
int
jae
(bad)
inc
xchg
jbe
loope
mov
aas
addr16
jne
(bad)
mov
fdivr
out
inc
or
cmps
xchg
fnsave
test
or
xchg
mov
fsubr
push
push
addr16
or
das
jmp
sub
xchg
fldcw
mov
scas
sub
out
ror
bnd
ss
adc
jg
jmp
fisubr
xchg
add
sub
outs
aas
rcr
dec
(bad)
cli
aad
mov
inc
mov
pop
adc
push
inc
jno
push
jno
outs
sbb
mov
dec
rcl
lods
xor
das
es
and
out
repz
and
inc
dec
cmp
imul
repz
inc
aaa
mov
xor
xchg
retf
pop
fdiv
xchg
and
or
inc
call
mov
push
jb
or
shl
jmp
shr
lahf
push
out
loopne
cmp
out
arpl
or
cmps
mov
jbe
adc
mov
cs
xchg
mov
pop
mov
cmps
add
cmc
dec
jl
adc
push
add
adc
xor
push
jb
mov
and
pop
push
(bad)
stos
jb
mov
loopne
sub
nop
inc
rcl
xchg
enter
mov
rol
out
dec
dec
(bad)
jp
pushf
stos
xor
inc
cmp
outs
xchg
mov
jmp
fiadd
das
ins
mov
inc
shr
jmp
jecxz
je
dec
push
inc
movs
push
mov
add
push
jge
cs
ja
mov
mov
mov
rol
ds
push
adc
sar
sub
mov
add
adc
xchg
icebp
sub
sbb
xchg
jns
mov
iret
pop
cdq
lock
mov
outs
das
rcl
sbb
sub
mov
ins
xchg
call
push
enter
data16
jge
in
push
(bad)
fcmovbe
stc
rcr
push
test
sub
pop
inc
out
and
mov
mov
cld
sbb
adc
imul
cmp
dec
test
sub
stos
sub
xchg
dec
pop
push
xadd
sub
jo
push
jo
div
mov
push
dec
push
les
mov
jmp
shl
add
mov
sbb
sahf
and
or
outs
xor
mov
shl
dec
js
pop
mov
jo
stos
cmp
call
mov
retf
dec
in
int3
jo
sub
adc
ret
pop
inc
xchg
nop
cmps
data16
mov
call
add
mov
or
mov
fadd
das
mov
cmp
out
cmp
es
pop
popa
sub
pop
cmp
sub
and
adc
arpl
mov
jnp
fabs
out
and
les
sbb
sar
mov
mov
xchg
dec
mov
xor
(bad)
mov
mov
push
rol
jl
ins
movs
mov
sbb
ja
out
inc
dec
or
mov
or
mov
xor
mov
popf
test
fmul
inc
daa
sar
mov
ret
jns
movs
repnz
sbb
sar
sbb
mov
add
std
mov
sub
cli
retf
adc
pop
jnp
daa
jae
ds
cld
fimul
sub
pop
jo
(bad)
daa
idiv
enter
add
mov
scas
in
xor
cli
mov
add
jb
pusha
ja
push
popa
and
xchg
xchg
and
pcmpgtb
ret
add
or
mov
sub
repz
dec
pushf
inc
stos
or
push
test
leave
(bad)
icebp
cmc
idiv
or
sahf
add
inc
jbe
or
mov
dec
cmp
or
imul
sbb
sub
and
test
daa
loope
or
aaa
jmp
icebp
js
or
movs
(bad)
sub
push
inc
cmp
add
int
inc
inc
push
out
add
cmp
ret
dec
cmp
daa
pop
scas
jg
pop
clc
loopne
xor
adc
stos
lods
dec
xchg
repnz
and
lock
sbb
jb
inc
push
jbe
cs
call
xor
mov
adc
ret
jmp
das
cli
fisubr
pop
mov
jg
fldenv
jns
adc
push
ret
jmp
aam
cmp
in
daa
loope
xchg
ins
and
dec
dec
loope
cdq
(bad)
mov
jb
and
lock
xchg
xor
dec
add
mov
(bad)
mov
(bad)
mov
jl
adc
pop
xor
push
mov
cdq
fadd
repz
stos
or
dec
mov
jno
xchg
in
punpckldq
lods
call
xchg
not
lock
cmp
outs
enter
dec
mov
mov
ror
pop
enter
add
or
das
xor
xor
pushf
in
lods
and
add
sub
and
mov
add
repz
cmps
popf
cld
in
les
push
out
movs
retf
out
int
xor
xor
retf
add
das
and
movs
rcr
into
jge
rcl
in
mov
cmp
stc
sub
pop
cmps
imul
mov
mov
sub
inc
in
fwait
or
mov
movs
adc
pop
jbe
call
repz
xor
in
bndldx
push
and
add
or
sub
mov
ret
(bad)
call
call
push
mov
mov
rcl
sub
push
inc
arpl
push
sbb
push
mov
lds
call
dec
sbb
mov
arpl
mov
stc
push
mov
jns
mov
imul
loop
jle
out
fstp
dec
push
xor
ror
rcl
dec
scas
stc
es
int
push
std
fcomp
out
xchg
je
enter
mov
xor
mov
mov
mov
lods
int
repz
xchg
into
cdq
inc
mov
int
fidiv
mov
mov
mov
(bad)
dec
ss
dec
out
and
jmp
inc
cmp
jecxz
aad
inc
(bad)
mov
or
or
sbb
xor
mov
inc
aaa
ss
dec
es
pop
add
setbe
mov
inc
sbb
(bad)
sub
aad
mov
mov
mov
leave
test
icebp
cmp
aaa
add
fdivr
add
mov
dec
mov
push
pushf
mov
dec
fnstcw
and
call
lock
add
pop
cmp
pop
jo
bound
jo
sbb
xor
mov
dec
xor
ret
stc
rol
mov
(bad)
std
mov
sbb
mov
popa
sub
cmps
inc
xor
cmp
jnp
stos
inc
es
outs
daa
adc
and
xchg
sti
mov
add
rdmsr
push
mov
stos
or
xlat
outs
rcr
xor
sub
and
xchg
clc
push
jp
hlt
es
arpl
lock
stos
pop
adc
cmc
xor
xor
imul
mov
xlat
out
mov
mov
push
in
imul
and
jae
lea
sbb
mov
sbb
pusha
push
sar
sbb
in
adc
inc
cmp
push
rcr
int3
cmps
adc
push
cmps
sbb
sub
push
mov
cmp
lock
fcom
out
fdivr
repz
jecxz
es
sbb
popa
cld
lahf
fdiv
loope
pop
fbld
sahf
add
and
shr
fld
ret
lea
outs
jne
ins
mov
inc
dec
xchg
movq
lds
inc
sahf
ja
pop
aaa
hlt
mov
and
out
mov
push
cmp
lahf
arpl
sub
mov
ins
js
iret
pop
cmp
inc
fst
mov
sub
fwait
push
adc
jmp
aad
stos
cmp
push
sar
test
sbb
sbb
jae
call
popa
gs
adc
and
push
ss
cmp
add
retf
adc
mov
jbe
sub
lahf
mov
iret
add
jno
pusha
or
fldenv
jns
sub
xor
movs
fbld
adc
retf
(bad)
xchg
xor
nop
mov
rcr
fcomp
ficom
and
mov
xchg
cmp
pop
int3
mov
cmp
sbb
ror
and
cs
inc
outs
add
in
mov
pop
ins
retf
fistp
mov
mov
cmc
jns
ror
xchg
cmp
and
bound
das
movs
hlt
and
xlat
call
mov
in
sti
adc
lods
sub
mov
mov
out
cmp
ret
test
ret
mov
out
ins
mov
popf
push
rcr
sub
in
dec
es
popa
cmps
adc
bound
movs
lods
cmps
pop
int3
mov
push
push
xchg
scas
and
ss
fistp
jp
xchg
mov
lods
jbe
cld
xchg
lods
mov
jg
and
rcl
mov
scas
jnp
std
(bad)
aam
in
stc
dec
jb
rcl
xor
fdiv
inc
scas
mov
dec
(bad)
or
mov
sbb
inc
or
(bad)
or
push
jae
jl
rcr
in
mov
pop
or
(bad)
jmp
(bad)
ret
mov
test
bound
add
push
inc
xchg
(bad)
push
test
dec
sar
sub
loop
sbb
inc
xchg
cmp
lea
ficom
cmp
cmp
fst
and
push
lea
fist
popf
lea
inc
sub
push
hlt
add
aas
mul
dec
mov
push
xchg
nop
dec
mov
fimul
add
test
push
mov
int3
jae
inc
xor
jmp
mov
mov
stos
fild
inc
inc
f2xm1
into
and
mov
jne
loope
sahf
push
pop
pop
push
imul
aas
or
sahf
scas
dec
mov
xor
not
repz
inc
sub
int3
js
pop
xchg
div
mov
imul
push
mov
aas
dec
xor
jae
retf
mov
pushf
inc
arpl
jge
outs
test
xchg
imul
arpl
retf
inc
inc
mov
ins
push
stos
inc
(bad)
xchg
jb
stos
and
jge
lea
push
ins
cmp
and
sbb
fcmovne
shl
outs
adc
js
adc
jl
jae
fdivr
inc
pop
cdq
mov
mov
and
sbb
(bad)
iret
jns
clc
cld
retf
ret
stos
sbb
cmp
xor
pop
cmp
adc
popa
test
mov
aad
call
mov
inc
pop
and
sbb
daa
fwait
sbb
sub
fbld
outs
jl
push
pop
jecxz
sbb
lea
mov
int
les
mov
popa
mov
dec
fcom
sbb
xor
nop
cmp
addr16
pushf
fadd
(bad)
dec
cdq
push
(bad)
int
test
repz
mov
xor
cmc
xor
push
inc
mov
mov
cld
adc
jg
loopne
pop
cli
jecxz
mov
cmps
je
addr16
mov
fadd
pop
scas
inc
arpl
dec
mov
add
sub
fsub
jge
xchg
jecxz
retf
mov
or
les
xchg
gs
das
neg
popa
or
or
mov
lods
inc
shl
cmp
mov
mov
xchg
movs
push
shl
xchg
adc
lods
inc
loopne
loopne
xchg
in
xor
mov
pushf
sub
adc
jbe
adc
dec
or
ja
mov
push
call
retf
out
loope
nop
and
mov
mov
sbb
retf
fptan
adc
iret
call
repnz
cmp
push
jne
popf
jle
sbb
xchg
psraw
stos
js
xchg
jno
call
int3
sub
push
mov
cmp
pop
sbb
mov
or
push
and
jmp
mov
ror
das
bound
pop
adc
out
cdq
movs
loopne
sbb
ss
dec
pop
and
jbe
inc
dec
cs
push
xor
imul
inc
xor
lea
fcmovu
mov
bound
pop
inc
adc
popa
lds
or
mov
add
(bad)
add
enter
stos
cmp
pop
push
pop
jmp
pop
push
hlt
dec
or
mov
push
push
dec
sub
cld
adc
stos
push
data16
cmp
imul
jno
outs
aas
test
cmp
xor
cmc
dec
pushf
xchg
push
xchg
jecxz
mov
je
pushf
mov
shl
jle
or
leave
xchg
jnp
stos
inc
inc
xor
movs
pop
mov
aad
push
aam
xchg
adc
or
inc
dec
mov
jmp
stc
jle
sar
aaa
pop
adc
add
cmc
mov
sbb
jne
mov
xor
repnz
test
mov
pop
xchg
mov
xchg
jmp
inc
cld
fsubr
mov
adc
ja
mov
push
jmp
cli
push
dec
adc
(bad)
les
xchg
call
(bad)
and
push
adc
xchg
cdq
ins
cmp
mov
gs
sbb
dec
xor
inc
or
pop
div
mov
or
add
nop
adc
inc
dec
push
adc
inc
cmp
xor
sbb
sbb
shl
xor
sbb
ret
xchg
cmp
inc
jmp
dec
adc
lahf
cld
dec
mov
add
das
cmp
nop
push
dec
scas
lds
xchg
mov
push
sbb
lods
mov
or
ret
repz
ffreep
or
fstp
shr
and
mov
adc
test
faddp
in
stc
pop
fnstcw
loop
pop
(bad)
stos
sbb
pop
outs
movs
or
sub
cmp
(bad)
jg
adc
mov
(bad)
mov
cmp
xor
imul
pop
mov
sbb
push
sbb
jl
cli
mov
in
jge
or
stc
dec
xchg
pushf
adc
test
inc
sub
cmp
and
loope
in
ds
(bad)
cmc
and
push
sub
je
mov
int3
mov
jmp
add
ins
bound
xchg
xchg
leave
jmp
jle
(bad)
mov
iret
jb
pop
(bad)
(bad)
fs
mov
mov
fs
icebp
or
pop
push
mov
cmp
inc
ror
inc
loope
arpl
sbb
or
clc
fstp
mov
nop
jne
sti
mov
jp
sub
inc
jecxz
xchg
mov
dec
fcomp
mov
retf
icebp
sahf
int3
mov
nop
mov
sub
int3
jne
and
and
ins
cs
xor
mov
and
mov
pop
lock
dec
loopne
xchg
push
popf
iret
lods
(bad)
jmp
cli
or
pop
jae
lea
inc
push
dec
cld
fcomp
add
ret
aam
int
pop
push
aas
sbb
es
adc
jno
cmps
retf
mov
movs
imul
xlat
or
pop
sbb
mov
stos
sub
mov
test
mov
sbb
lock
mov
movs
in
out
mov
mov
arpl
xlat
push
push
inc
push
mov
aad
push
xchg
dec
mov
test
stos
iret
mov
(bad)
mov
lods
movs
or
or
cmps
jbe
imul
mov
pop
in
stc
jnp
shl
inc
pusha
jmp
jl
iret
sbb
sti
or
inc
pop
adc
jno
pop
mov
cmc
jbe
xchg
xchg
and
mov
loop
xchg
pop
inc
mul
pop
mov
and
into
test
test
push
(bad)
sub
aad
jecxz
push
add
addr16
add
pop
and
jge
sbb
test
fcomp
mov
loop
adc
cmp
jge
daa
fs
xor
sbb
xchg
and
stc
lock
repz
push
stc
in
xchg
mov
mov
mov
cld
dec
(bad)
in
outs
mov
jl
xor
jecxz
test
adc
mov
xor
ins
pop
jo
cmp
(bad)
pop
stos
imul
jb
jp
(bad)
fcom
adc
inc
fcom
mov
pop
mov
mov
mov
mov
jp
mov
mov
push
inc
pop
cmps
dec
jge
nop
imul
std
stos
xor
div
mov
cmp
loope
cs
and
xlat
cmp
push
aaa
out
mov
mov
pop
jnp
sbb
xor
popa
rcl
adc
xchg
cmc
jmp
ins
pop
mov
or
sbb
xchg
push
mov
test
or
mov
rol
outs
outs
push
das
stc
xchg
or
cwde
mov
imul
jmp
add
or
sub
jle
sbb
rcr
mov
pusha
add
or
cmp
mov
fwait
sub
test
xor
popf
daa
enter
ss
dec
stc
cwde
rcl
lahf
int3
es
cs
or
inc
mov
pop
sbb
(bad)
sbb
jecxz
cld
add
ja
int3
clc
xor
xor
aam
adc
dec
adc
mov
(bad)
pushf
xor
push
cmc
xor
jmp
bnd
lods
lods
dec
daa
imul
mov
mov
mov
sub
push
sbb
cdq
mov
mov
scas
sbb
jne
mov
in
inc
std
cdq
push
xchg
jae
cmpxchg
test
pop
clc
jmp
mov
sbb
push
inc
lds
push
push
pop
pop
dec
ficomp
mov
pop
mov
scas
and
aam
mov
xchg
sar
in
pop
adc
add
or
add
adc
scas
sub
ffree
(bad)
sbb
call
jmp
ret
mov
jp
sbb
and
pop
cs
gs
rcl
cmp
add
cpuid
fnstsw
clc
rcl
ret
mov
int3
jl
scas
daa
outs
add
neg
cmp
and
hlt
xchg
mov
out
mov
call
mov
out
out
pop
(bad)
ror
jbe
call
mov
push
xchg
scas
push
xchg
mov
and
xchg
push
(bad)
jbe
shl
ret
out
movs
mov
inc
popf
dec
in
or
cwde
pop
lock
call
cdq
fisttp
or
pop
(bad)
nop
push
adc
xchg
xor
sar
mov
les
push
mov
shr
fidiv
imul
aaa
add
xchg
lods
sbb
or
test
stos
pusha
add
aas
cmp
xchg
retf
stos
jmp
lods
push
iret
jne
sbb
inc
dec
in
add
(bad)
ins
pop
fisub
retf
jge
sbb
stc
mov
or
out
dec
sub
sbb
(bad)
sbb
in
sbb
inc
aas
aam
outs
sar
inc
retf
dec
pusha
cmp
lea
in
or
call
lods
dec
sbb
mov
out
mov
adc
mov
shl
test
adc
pop
stos
lods
xor
mov
cmp
loop
dec
daa
mov
das
clc
sub
inc
or
out
mov
mov
mov
popa
(bad)
test
sub
mov
sub
mov
jecxz
imul
pop
jge
aam
outs
test
mov
mov
jle
call
jmp
popa
out
cmp
cmp
(bad)
mov
shl
loope
adc
mov
jmp
dec
sub
pop
jbe
lahf
mov
mov
in
out
ficomp
lea
jb
cmp
jo
add
jmp
mov
fistp
inc
out
mov
fs
gs
sub
pop
out
das
neg
jp
fcmovnb
xchg
add
pop
mov
aas
gs
mov
jl
mov
(bad)
scas
retf
jnp
arpl
pop
test
sub
and
mov
add
je
add
stos
mov
out
jle
inc
mov
sbb
mov
pop
ins
rcl
mov
adc
rcr
hlt
fdiv
rol
dec
mov
sar
pusha
dec
in
scas
icebp
push
push
xchg
dec
pop
out
mov
add
xchg
sub
movs
mov
test
ja
and
arpl
cwde
aad
(bad)
sub
fnop
jl
and
enter
add
mov
add
mov
int3
or
xchg
jg
adc
dec
call
sub
js
js
stos
jp
adc
rol
lods
stc
dec
mov
and
fisttp
or
test
cli
xchg
jne
out
pushf
sub
push
or
cmp
fistp
cmovge
sar
and
push
mov
fstp
into
adc
nop
stos
iret
push
add
push
inc
inc
dec
xchg
btc
push
push
je
or
pop
xchg
add
lahf
and
add
les
mov
mov
mov
stos
stos
pop
xor
fs
dec
xor
sub
sub
out
fild
push
add
inc
jge
pop
fstp
neg
jb
cwde
jae
lods
fisub
add
enter
adc
or
test
movs
into
sbb
mov
fwait
mov
add
pop
push
jbe
imul
inc
std
push
shl
rol
xor
mov
mov
addr16
pop
jg
or
clc
popf
rol
xchg
pop
jmp
nop
sbb
hlt
iret
call
rol
icebp
push
cmc
not
sub
sbb
leave
fnstsw
imul
xor
jae
jl
xor
cmp
pop
scas
loop
lahf
mov
icebp
xor
sbb
mov
mov
pop
dec
cwde
jmp
jbe
in
mov
xor
adc
fwait
and
mov
aad
aas
popa
sub
hlt
sbb
retf
fnsave
mov
inc
xchg
add
cmp
fprem1
inc
sahf
arpl
(bad)
loopne
jmp
sub
je
cmp
jl
push
add
lods
outs
out
sbb
shr
xchg
cmp
or
jg
lock
idiv
mov
mov
cmp
pop
fistp
xor
sbb
xchg
movs
push
mov
cmp
lea
add
jbe
push
pop
fwait
popf
dec
outs
pop
aad
xor
shr
mov
cmp
jno
mov
and
adc
push
or
and
dec
inc
test
movs
(bad)
lods
cli
test
push
xchg
cmc
sbb
sub
xor
in
mov
mov
mov
and
ret
movs
shr
repnz
mov
pop
stos
fcomp
mov
out
inc
dec
stos
push
shl
out
pop
mov
popf
cmp
mov
(bad)
out
test
aas
mov
cmc
in
aas
adc
(bad)
call
test
(bad)
out
popf
iret
mov
mul
clc
cmp
xor
inc
imul
jae
push
add
lods
and
mov
leave
je
cmp
enter
sbb
popa
mov
dec
shl
movs
xchg
mov
in
mov
aam
in
pop
test
fiadd
and
or
scas
push
outs
lock
loope
cwde
sar
mov
push
or
inc
mov
and
pop
pop
push
add
or
out
inc
outs
mov
cmp
cmp
pushf
or
pop
aad
hlt
ret
add
push
les
and
addr16
std
ins
mov
mov
call
daa
rcl
retf
in
retf
clc
cmp
jmp
dec
pop
imul
cs
mov
jecxz
mov
data16
sar
loopne
ins
adc
and
inc
mov
int3
cs
mov
test
sbb
xchg
cmp
xor
xor
sub
popa
dec
push
and
sub
sub
movs
mov
cmp
mov
imul
popa
add
retf
push
xor
das
icebp
inc
inc
sub
jge
nop
std
ja
rcl
xor
mov
mov
add
rcl
loope
iret
mov
and
das
mov
jmp
arpl
outs
and
and
mov
(bad)
(bad)
sti
xor
xchg
dec
scas
aad
popa
pop
das
je
xor
or
adc
hlt
dec
or
adc
jle
jg
push
jne
push
clc
xchg
dec
fdiv
es
sbb
(bad)
cmp
stos
mov
in
(bad)
(bad)
gs
retf
sub
into
fld
inc
xlat
xchg
adc
adc
retf
push
gs
icebp
sti
and
jmp
add
fadd
push
or
cmp
mov
(bad)
xchg
pop
dec
pop
jbe
dec
cld
adc
jbe
mov
shl
enter
loopne
push
push
adc
mov
or
out
call
popa
cdq
das
mov
daa
jmp
repz
bnd
cmps
push
or
cs
call
mov
retf
sub
(bad)
mov
pop
xor
and
lods
jno
in
ss
dec
outs
cmp
fistp
ret
xor
mov
jnp
mov
scas
out
icebp
xor
sbb
stc
mov
not
in
int3
je
adc
or
retf
cmc
mov
sub
mov
clc
mov
retf
cld
sahf
cld
call
cmp
stos
fild
adc
stos
cmp
fdiv
mov
jle
lods
xchg
xchg
repz
or
mov
sub
adc
popa
jno
pop
push
(bad)
aaa
fcomp
mov
lods
and
xor
xor
mov
cdq
pop
mov
push
and
test
cmp
outs
imul
or
pop
mov
mov
adc
or
or
cmp
addr16
dec
mov
(bad)
mov
xor
pop
mov
out
and
mov
adc
jle
inc
mov
inc
and
jno
into
scas
xchg
adc
push
ror
movs
dec
test
hlt
jp
aam
inc
inc
dec
sti
(bad)
in
(bad)
icebp
mov
nop
jns
lock
not
sbb
aas
scas
adc
imul
mov
adc
mov
jecxz
pop
cmp
movs
hlt
inc
mov
jae
sub
ret
test
pop
dec
or
sub
jle
aam
sbb
xlat
jnp
mov
inc
dec
js
pop
sbb
jo
jmp
daa
inc
xchg
jp
imul
jge
pop
aam
pop
test
xchg
or
mov
inc
stos
scas
sbb
stc
in
jns
shl
pop
mov
sbb
xlat
pushf
addr16
xlat
call
push
inc
and
push
clc
iret
add
inc
jno
imul
jno
jnp
mov
mov
jmp
jno
(bad)
cmps
cdq
imul
arpl
adc
les
mov
xor
jp
lahf
adc
mov
fiadd
repz
cmc
dec
dec
lods
repnz
jecxz
mov
dec
ja
ins
mov
(bad)
inc
mov
(bad)
int
fild
inc
inc
cwde
pop
sub
mov
mov
mov
fwait
xchg
jle
sbb
mov
pop
or
ja
lock
scas
mov
mov
outs
mov
sub
adc
cmps
cmp
inc
daa
sub
push
adc
xor
sbb
push
outs
movs
cmp
adc
leave
rcr
jns
stc
and
in
inc
or
sub
xchg
daa
aaa
jmp
std
frstor
dec
ror
(bad)
fnstsw
add
jnp
iret
xor
(bad)
aas
(bad)
pop
xor
pop
fld
cli
imul
adc
inc
jne
xlat
adc
retf
xchg
and
fsub
dec
shr
xor
adc
jmp
jg
mov
sysret
mov
xor
mov
test
fidivr
mov
cwde
movs
add
jp
nop
mov
pop
sub
clc
mov
add
jge
jecxz
jecxz
fmul
xchg
movs
jmp
lds
lea
fdivr
mov
adc
mov
retf
push
retf
stos
dec
(bad)
hlt
sbb
push
(bad)
sub
das
mov
inc
sahf
wbinvd
addr16
(bad)
enter
rcl
das
nop
rcr
sub
pusha
inc
sub
mov
cmp
scas
nop
(bad)
cmp
add
push
xchg
add
das
push
or
inc
fcomp
fimul
and
bound
pop
dec
pop
push
into
xchg
inc
aas
jb
in
or
dec
cwde
pop
xchg
out
pusha
mov
push
and
add
pop
cmps
retf
mov
mov
and
in
xor
jno
ins
jnp
add
adc
or
or
push
(bad)
addr16
icebp
sbb
xchg
rcl
inc
test
frstor
nop
push
clc
int
jo
adc
hlt
lock
mov
sub
js
popa
inc
adc
add
mov
mov
mov
pop
dec
icebp
jge
nop
sahf
not
mov
mov
lods
sbb
mul
cmp
jae
adc
xchg
cmp
mov
lock
adc
jp
xor
jbe
cmp
sahf
cmc
pop
cs
(bad)
xor
cld
loop
je
inc
enter
sub
dec
add
pushf
(bad)
hlt
or
clc
inc
movs
cwde
and
mov
shl
jmp
xchg
call
push
jb
clc
mov
pop
add
adc
inc
and
loop
fsubr
cld
inc
ficomp
sbb
in
idiv
(bad)
repz
enter
pushf
adc
inc
sbb
add
mov
inc
add
cli
cmp
or
cmp
out
fucomip
(bad)
xchg
in
mov
scas
mov
dec
mov
cmp
xchg
sub
mov
cmp
fwait
xor
call
jae
cmps
mov
inc
arpl
js
mov
inc
sub
push
and
call
aaa
popa
push
(bad)
xchg
xchg
cli
imul
(bad)
aas
push
ss
ins
xor
fisub
mov
inc
retf
into
call
mov
add
ds
push
cmp
push
jae
fucomip
stos
inc
mov
cmp
sbb
jmp
or
gs
cmp
push
and
les
loopne
gs
outs
xor
and
dec
fiadd
mov
(bad)
fst
dec
xor
js
dec
inc
mov
cmp
mov
inc
into
rcr
mov
mov
and
scas
xchg
push
adc
xchg
push
push
adc
sar
les
or
and
add
fs
mov
push
inc
(bad)
sub
mov
shl
fisttp
dec
(bad)
jo
mov
int
or
ss
ror
popa
sub
inc
cdq
cmp
or
mov
or
sub
ficom
jl
sbb
int
dec
jne
das
dec
test
mov
repnz
inc
mov
jno
xor
outs
sbb
ds
call
push
retf
jle
scas
cmp
ins
jae
sub
test
pop
push
xlat
mov
call
push
outs
lods
outs
inc
adc
lods
adc
out
test
mov
(bad)
adc
hlt
out
rol
xchg
fisttp
jecxz
jmp
mov
mov
fdiv
inc
xchg
clc
mov
ins
push
push
sub
dec
inc
inc
sbb
add
sbb
xor
mov
daa
sub
mov
movs
ds
xchg
xchg
ret
mov
jo
cmc
das
cmp
pop
or
adc
in
push
mov
addr16
cmps
lock
push
fmul
outs
cmc
xchg
mul
push
paddusb
bound
add
xchg
inc
cmp
out
jae
xchg
je
in
add
shl
stos
push
adc
cmps
or
div
add
ds
test
mov
movs
(bad)
in
adc
je
add
jb
and
push
inc
inc
and
inc
js
cli
cld
repnz
jo
jmp
mov
xor
fwait
add
repnz
call
retf
mov
fisubr
sub
mov
test
sahf
add
enter
jne
or
sub
push
sbb
(bad)
lods
xchg
(bad)
jp
int3
ret
pop
pop
je
icebp
cdq
adc
adc
test
repnz
inc
jne
ds
sbb
jmp
sti
stc
sub
ss
sbb
arpl
(bad)
stos
add
(bad)
addr16
xor
test
scas
xchg
or
add
mov
into
dec
sbb
or
jnp
loopne
rol
test
mov
push
dec
jge
lea
and
sub
enter
lods
gs
sbb
adc
loopne
mov
jnp
dec
or
pop
pop
ds
xchg
sbb
push
pop
in
cmp
jae
in
pusha
ss
sti
xor
ret
(bad)
mov
sub
fwait
iret
jmp
daa
call
data16
int3
int3
push
popa
punpcklbw
push
iret
retf
mov
fist
mov
pop
jmp
push
mov
mov
xchg
or
loop
xor
xor
add
test
mov
add
sub
cmp
aam
xchg
mov
dec
sub
lock
cmp
jge
popa
repnz
scas
add
std
inc
xchg
add
xchg
mov
lods
cs
into
sbb
cmp
jno
test
jb
mov
fs
hlt
xchg
retf
jae
mov
push
or
das
pop
or
(bad)
cmp
pop
xor
push
mov
pop
int
cs
out
into
ins
movs
test
retf
jnp
outs
adc
adc
out
sub
sub
clc
lods
loop
(bad)
mov
ss
push
je
cld
sbb
cmp
je
ss
bound
inc
(bad)
cli
retf
cdq
sbb
sbb
and
jle
shl
repnz
rcr
and
ds
sub
add
sbb
mov
mov
jne
ins
test
test
pop
sub
cli
mov
cmp
aad
jb
std
mov
push
fwait
sub
push
shl
cs
adc
sar
adc
inc
icebp
aad
ss
js
enter
lahf
adc
sbb
je
scas
popf
cmp
cmps
push
and
ja
les
adc
icebp
mov
mov
mov
pop
sbb
mov
pop
scas
jp
pop
test
mov
inc
ret
ss
(bad)
xchg
dec
fs
jbe
cli
push
mov
into
daa
bnd
xlat
stos
(bad)
test
sbb
rcl
nop
push
aam
ins
push
inc
hlt
pop
outs
movs
add
add
inc
pop
or
lock
pop
cmp
jg
xor
mov
fisttp
lods
enter
mov
add
cmp
ret
or
faddp
pop
imul
es
inc
pop
add
(bad)
xor
loop
mov
cmps
or
pop
pop
cmp
rol
xchg
sahf
movs
mov
test
mov
stc
push
mov
es
cmps
mov
inc
ins
fcmove
mov
add
and
in
and
add
sahf
xchg
sti
test
or
cs
push
fdivr
mov
adc
push
shr
bswap
add
ror
stos
xor
mov
sbb
shl
or
pop
lock
in
add
cmp
xor
push
(bad)
mov
pop
inc
dec
iret
inc
adc
dec
call
sub
imul
retf
jl
fild
jg
jmp
int
sub
ret
adc
push
enter
(bad)
xchg
rol
jns
mov
adc
adc
retf
sub
cdq
pusha
mov
mov
pop
rol
add
into
stc
cmp
lds
or
cli
lahf
imul
mov
js
xchg
loopne
ss
xchg
sahf
push
mov
jo
mov
pop
test
lods
(bad)
push
and
idiv
lock
jnp
jg
inc
dec
cmp
push
repz
pusha
jp
fstp
fwait
push
pop
shl
jge
inc
imul
jb
xlat
fmulp
cwde
rcl
ins
addr16
fwait
in
inc
(bad)
ins
or
repz
clc
adc
(bad)
dec
adc
dec
and
repz
pop
adc
ins
sub
imul
(bad)
cdq
inc
fsubp
shl
sti
jmp
pop
or
js
add
pop
shl
cdq
xchg
push
movs
jnp
xor
sub
dec
iret
adc
lds
mov
adc
(bad)
mov
popf
and
jae
inc
jg
mov
hlt
cmp
iret
inc
and
jmp
inc
fwait
test
add
xchg
in
movs
pop
jmp
popa
xchg
or
fs
jg
imul
xchg
hlt
jg
fwait
mov
mov
loope
dec
rcl
jle
das
add
mov
rol
dec
jbe
dec
xor
mov
verw
xor
(bad)
xor
and
sahf
fidiv
fwait
xchg
rcl
sbb
pop
cld
das
xchg
inc
mov
fs
loope
stc
out
jbe
xchg
mov
mov
data16
js
ins
push
lock
lahf
add
cmp
rcr
jnp
adc
ficom
test
in
and
xor
push
loop
popf
mov
sub
movs
call
shl
test
and
sbb
cdq
gs
hlt
or
loopne
inc
(bad)
jle
adc
outs
out
dec
dec
mov
ret
dec
stos
cdq
adc
dec
push
cmps
pop
jno
sbb
dec
cmp
inc
jle
mov
ret
sbb
jmp
mov
push
sbb
push
sbb
imul
xchg
lock
(bad)
cld
ss
mov
int3
mov
jg
fwait
call
push
pop
loope
and
and
scas
sub
or
and
out
pop
and
or
idiv
aam
repz
xlat
jae
sub
jle
cmp
push
hlt
mov
mov
(bad)
push
test
jecxz
push
daa
dec
fwait
cmp
mov
jle
cmp
jp
pop
mov
repnz
outs
jbe
dec
ins
mov
stos
and
sbb
mov
int3
jo
or
fsubr
pop
(bad)
int3
xchg
aam
cmp
inc
adc
out
fldenv
mov
add
pop
fisub
add
jmp
out
and
sbb
ret
sbb
frstor
and
movs
in
push
rcl
add
xchg
cmp
cmp
mov
mov
daa
mov
xor
mov
dec
loope
mov
call
mov
fsub
je
mov
fs
cmp
lds
mov
(bad)
(bad)
xchg
test
mov
into
popa
sub
aad
cmp
inc
pop
popf
jmp
rcr
xchg
scas
or
sbb
addr16
das
int3
sar
lods
outs
pop
sahf
pusha
jmp
mov
int
or
sub
clc
stc
xor
push
pop
jb
imul
out
ret
icebp
test
loop
or
push
or
(bad)
xlat
icebp
mov
shl
pop
mov
adc
movs
sbb
daa
ss
pop
or
xrelease
sub
sub
ins
repz
or
cdq
and
pminsw
mov
cmp
xor
mov
pop
call
add
jmp
inc
scas
lods
je
sub
test
(bad)
cmps
imul
mov
xlat
aad
loopne
(bad)
push
sbb
mov
out
mov
cs
mov
outs
popf
dec
lahf
hlt
popf
sbb
jge
shl
(bad)
fistp
in
sub
mov
sbb
mov
inc
das
xor
repnz
cmc
add
jp
mov
in
outs
leave
icebp
xor
mov
fimul
imul
mov
xor
(bad)
mov
sub
or
shl
in
fistp
das
xlat
mov
and
mov
ror
mov
stos
cmc
add
lods
push
push
(bad)
cdq
out
aam
(bad)
dec
fld
fwait
cmps
dec
or
in
call
mov
push
cmc
stos
dec
dec
shr
jno
sahf
inc
sahf
or
mov
cwde
imul
pusha
add
ffree
cdq
mov
or
dec
cmp
jne
imul
sbb
dec
fistp
mov
sbb
js
cmp
add
jecxz
push
out
cli
jmp
push
nop
fdivr
(bad)
data16
in
lds
adc
mov
inc
rol
adc
out
mov
push
hlt
in
jge
stc
jle
leave
pop
std
adc
imul
inc
out
mov
jb
sti
iret
cld
add
das
xor
ja
std
call
push
fdiv
mov
pop
jl
test
or
add
(bad)
aam
add
pop
fdiv
and
cmp
jbe
(bad)
test
fs
arpl
add
or
or
and
jg
or
jge
mov
movs
bound
cmps
popf
loopne
outs
sti
movs
push
lods
lahf
add
jmp
js
pop
aad
xchg
loopne
push
int3
das
ror
icebp
in
sbb
int3
sub
lea
aaa
in
xor
or
ja
dec
clc
scas
cwde
cmp
push
adc
sbb
ds
stos
add
scas
mov
adc
stc
repz
cmp
push
(bad)
out
ds
pop
nop
nop
mov
call
or
(bad)
cmp
fild
adc
cli
jnp
cwde
cmp
inc
popa
jmpw
ret
jae
mov
fwait
push
dec
leave
and
inc
xchg
inc
stc
ja
pushf
shr
les
loope
add
int3
sbb
push
ins
nop
inc
xchg
xchg
lahf
and
jecxz
push
ror
bound
jnp
loope
add
adc
pop
(bad)
(bad)
xchg
cmp
jnp
dec
pop
sbb
adc
xchg
xchg
push
mov
(bad)
retf
inc
cs
leave
jg
mov
xor
sub
cwde
push
mov
mov
mov
xchg
mov
sub
(bad)
out
popa
xor
pop
neg
xor
mov
pop
sub
adc
jo
bound
lds
pushf
popa
cli
les
aaa
js
cmps
sub
popf
jmp
loop
dec
or
and
push
inc
jnp
in
add
arpl
les
cmp
dec
sar
cmp
loopne
adc
mov
ss
imul
xchg
popf
dec
int
pop
xchg
fimul
test
fadd
les
ja
(bad)
inc
jmp
mov
pop
push
mov
adc
xchg
lock
das
push
fisttp
pusha
jno
cmp
lds
or
mov
imul
push
scas
mov
push
or
pop
pop
inc
push
adc
push
bound
outs
dec
add
fnsave
mov
ins
fwait
cmp
idiv
popa
lock
mov
in
ins
ret
xor
sbb
cmp
sub
hlt
push
gs
sahf
xchg
xor
adc
mov
jno
sahf
pop
inc
das
cmp
cmps
mov
push
jmp
nop
in
jl
cwde
in
or
adc
pop
push
jb
dec
mov
in
push
ret
mov
mov
movs
out
dec
jp
jns
in
dec
movs
inc
aaa
cmp
mov
xchg
dec
push
cld
scas
mov
call
xor
sub
push
inc
jecxz
jne
outs
daa
xchg
test
mov
pop
(bad)
pusha
or
int3
mov
mov
cmps
lods
fsubr
push
pop
in
cdq
xor
call
xchg
ret
popf
and
xchg
or
aad
and
repnz
aas
and
xlat
pop
in
push
shl
lods
movs
pushf
out
sub
inc
pusha
xor
stc
loope
pop
lock
pop
xchg
push
imul
aam
outs
ret
idiv
push
and
add
int
fldenv
(bad)
aad
jmp
dec
inc
data16
dec
or
js
and
(bad)
mov
pop
imul
cs
and
mov
clc
mov
inc
mov
fmul
shr
pop
das
xchg
push
add
cmps
rcl
mov
ins
shl
push
inc
stos
add
mul
movs
loope
dec
dec
or
jne
rcr
enter
sti
in
outs
xchg
rcr
xor
inc
test
push
cdq
shl
lock
mov
pop
cmp
sbb
add
adc
xor
cmp
inc
push
push
daa
mov
mov
sahf
mov
xchg
addr16
xor
cmc
xor
jp
mov
nop
or
test
xor
clc
aas
(bad)
jg
fimul
jbe
or
retf
ror
repnz
leave
test
inc
mov
clc
push
clc
push
add
fst
addr16
aad
inc
cwde
or
and
mov
add
dec
fmul
mov
jmp
out
mov
mov
xchg
in
sub
or
std
sbb
call
mov
cmps
mov
and
push
(bad)
or
(bad)
fdiv
mov
adc
mov
inc
push
adc
xchg
push
sbb
and
push
and
push
or
dec
cmps
cdq
sub
mov
jge
dec
cmc
jl
ret
daa
retf
stos
fimul
mov
jbe
out
add
mov
aam
add
mov
arpl
jns
adc
loope
cmp
jle
jno
and
mov
in
xor
sbb
nop
ins
std
push
enter
sub
pop
sbb
adc
mov
lahf
mov
jmp
jno
retf
fnsave
xchg
mov
ret
lahf
push
repz
xchg
mov
inc
jns
fdivr
cmp
or
sbb
out
jle
icebp
add
ror
jg
sub
cs
mov
pop
popf
and
daa
retf
shl
sub
in
out
cwde
jle
in
(bad)
std
lods
mov
(bad)
lds
inc
adc
add
pusha
xchg
sub
mov
push
retf
mov
pop
mov
out
je
xchg
jns
jl
add
fs
sti
xchg
xchg
fcom
jmp
pop
mov
sub
cmp
sbb
adc
sahf
fs
or
jecxz
aas
mov
or
popa
xor
stc
adc
je
add
xchg
xor
ja
fisttp
jb
adc
pop
jbe
xlat
dec
inc
int3
pop
sti
aam
dec
pop
adc
call
sti
or
mov
ins
shl
in
sahf
pop
mov
mov
mov
adc
retf
pop
sub
neg
mov
cmp
rcl
fstp
(bad)
mov
sti
xor
sbb
jg
sbb
or
jg
mov
or
cld
loop
mov
jmp
add
sub
loop
pop
push
sbb
jl
cmc
stc
add
dec
out
jnp
or
out
or
out
movs
and
scas
jne
stc
repnz
or
in
jecxz
jbe
fist
mov
retf
scas
jne
adc
xchg
cdq
inc
xchg
popf
mov
popa
aad
mov
sub
pop
push
into
mov
(bad)
jmp
cli
data16
loopne
fnsave
cmp
(bad)
adc
inc
push
shr
js
jmp
jecxz
push
mov
mov
jae
dec
adc
outs
push
xlat
rcr
push
ds
fwait
test
sub
sbb
pop
cmps
out
jno
outs
stos
pop
mov
adc
xor
aas
mov
ret
add
(bad)
call
sub
xchg
call
mov
mov
push
and
jo
jp
pop
mov
ja
gs
das
in
mov
xchg
mov
jne
jmp
jb
je
sbb
add
addr16
arpl
jbe
lods
scas
sti
dec
neg
xor
inc
shl
movs
test
jae
rol
adc
push
mov
lea
je
sbb
pop
dec
push
ins
sbb
sub
pusha
and
inc
rcr
pop
mov
popf
mov
xor
jle
jns
adc
mov
rdpmc
icebp
add
xlat
pop
(bad)
clc
mov
add
adc
mov
xchg
mov
aaa
push
adc
add
mov
sub
mov
dec
mov
imul
and
fnsave
cmp
mov
movs
adc
test
aaa
fidiv
jns
fnstcw
push
in
add
je
mov
cmp
test
adc
cmp
jb
push
or
mov
lods
jae
sti
enter
rcl
arpl
retf
xchg
(bad)
jge
test
bound
jg
in
mov
ret
mov
inc
loopne
or
xchg
aad
mov
cmp
or
test
dec
std
jge
sbb
and
xchg
repnz
leave
xchg
aaa
jmp
pusha
cmp
popf
int
jg
or
clc
(bad)
outs
sub
add
adc
sbb
clc
jp
test
cdq
jmp
adc
xchg
mov
stos
shr
or
xchg
repz
shl
mov
popf
enter
jl
cmp
(bad)
clc
xchg
(bad)
mov
test
push
scas
lea
and
loope
mov
hlt
lea
rcr
adc
ja
(bad)
hlt
push
dec
add
or
sbb
lock
ss
jo
cmp
mov
sbb
adc
dec
fld
add
sbb
or
clc
or
in
aad
sbb
xchg
jmp
push
sub
daa
cli
jmp
push
ins
lods
add
add
add
sbb
ja
sbb
cmp
jecxz
push
fimul
jecxz
mov
outs
add
mov
fwait
adc
sbb
add
cwde
and
loop
adc
call
sbb
pusha
cmp
movs
out
mov
shl
mov
into
xor
popa
push
jno
(bad)
aam
mov
add
loope
out
call
bound
pop
mov
jns
xchg
mov
pop
repz
daa
mov
iret
mov
(bad)
shl
mov
jo
leave
test
repnz
dec
data16
cmps
jae
push
adc
inc
sub
clc
fwait
sahf
add
into
jne
fcmovnu
pop
mov
mov
pop
cmp
cmp
dec
pop
inc
add
cdq
xchg
mov
bound
imul
dec
inc
mov
pop
fist
push
sbb
dec
jbe
inc
mov
int
(bad)
mov
add
pmulhw
xchg
popf
repnz
(bad)
cmp
cmp
or
into
jmp
sbb
popf
sub
push
fsubr
inc
or
push
out
(bad)
in
mov
dec
add
mul
jl
or
loope
and
sub
mov
jne
ins
lahf
jle
inc
sub
fbld
jl
add
inc
mov
aam
jp
stos
aas
adc
adc
mov
es
sub
cwde
xchg
jae
inc
call
int3
ret
mov
loop
call
add
std
and
in
call
jo
sub
xor
imul
gs
mov
push
dec
ja
dec
push
xor
push
inc
dec
(bad)
neg
inc
pop
dec
cld
jge
jg
clc
ficomp
pusha
in
mov
mov
and
popa
jl
pusha
or
sbb
push
mov
cmp
stc
out
mov
(bad)
or
out
sbb
and
cmp
arpl
dec
xor
pop
cwde
and
div
in
or
pop
in
mov
rcl
fwait
lock
enter
jae
mov
add
lods
xchg
std
es
clc
xor
ds
push
call
loope
dec
aam
lock
jmp
fdivr
or
push
xchg
out
and
push
mov
fcmovnb
pop
mov
ror
fwait
jae
mov
mov
jbe
xchg
sbb
push
jb
push
lods
shr
jge
add
push
jnp
add
and
sbb
xchg
ja
hlt
adc
out
aam
xchg
or
sbb
xor
mov
jbe
jo
mov
sbb
sbb
in
mov
cmp
mov
mov
ss
add
add
(bad)
in
mov
je
jo
pushf
sbb
ror
jno
mov
xchg
and
in
leave
daa
fstp
mov
pop
test
daa
jge
pop
push
cli
jle
xchg
sub
ret
inc
jl
scas
inc
jp
add
sub
div
and
fldenv
ret
add
mov
cs
cmp
lods
add
xchg
or
push
fbstp
dec
scas
in
dec
and
shr
mov
xchg
aam
sub
ins
das
jl
mov
loope
mov
sub
fwait
jno
ins
pusha
(bad)
(bad)
out
inc
jmp
icebp
cmps
imul
xchg
mov
push
push
bound
jle
push
ja
mov
dec
and
mov
enter
fstp
ins
mov
fdiv
dec
stc
fwait
push
cmc
lea
(bad)
fwait
cmp
repz
out
scas
cmps
add
cmp
pop
cmp
mov
test
das
xchg
cmp
jne
sbb
jnp
and
loopne
jns
xlat
addr16
das
test
add
cmp
cld
idiv
in
ror
les
lock
push
into
jge
pop
sbb
outs
loopne
call
fsubr
mov
mov
test
mov
jno
lock
ins
bound
aam
ins
mov
xchg
mov
sar
jl
ds
sub
push
addr16
add
sbb
xor
(bad)
daa
addr16
enter
mov
out
fistp
and
mov
(bad)
push
fnstenv
adc
push
dec
in
leave
cli
dec
ds
mov
fmul
xchg
fsubp
iret
cmp
pop
arpl
cmp
adc
jmp
or
xor
outs
aas
mov
sbb
lock
or
in
or
sub
xor
rcr
enter
ror
jnp
(bad)
mov
test
(bad)
test
pop
sti
leave
inc
jmp
fs
stc
mov
adc
ret
cdq
jle
jnp
adc
jne
aam
xchg
xchg
push
mov
mov
sti
adc
popa
je
push
adc
sub
test
pusha
daa
fiadd
dec
icebp
inc
xor
inc
rcr
retf
int
mov
ret
add
jae
jo
repnz
and
das
fwait
jl
dec
scas
xchg
in
retf
push
mul
mov
push
jne
mov
int
mov
in
arpl
outs
mov
dec
mov
xor
push
jo
inc
lock
cmp
outs
cmp
sub
inc
fdivr
dec
cdq
(bad)
jns
inc
imul
fwait
movs
cld
je
cmp
cdq
sub
inc
and
loopne
or
cs
std
mov
fmul
push
in
and
outs
adc
shr
mov
fimul
pop
push
stos
je
movs
out
push
mov
ins
jmp
adc
clc
adc
pop
retf
in
mov
add
shl
loopne
xchg
jge
push
jo
sub
cwde
imul
mov
adc
ja
push
mov
outs
(bad)
add
fwait
jo
sub
rcl
dec
xchg
mov
and
sahf
test
mov
push
cmp
add
(bad)
jne
call
inc
out
sub
xor
jnp
pop
add
sub
xchg
xchg
xchg
fnstcw
sub
lock
hlt
jo
scas
imul
jge
jbe
int3
push
inc
imul
sahf
cmp
sub
ret
mov
mov
mov
outs
rcr
pop
mov
mov
lahf
jmp
sbb
scas
sbb
aaa
cld
(bad)
xchg
ja
pusha
adc
xchg
push
mov
imul
fisub
ret
mov
inc
mov
gs
or
xchg
in
push
outs
imul
mov
dec
cmp
fmul
inc
push
push
test
std
pop
fcmovu
xor
hlt
jo
inc
pushf
imul
push
lds
pop
mov
fwait
movs
adc
mov
push
jne
test
mov
call
inc
mov
add
push
pop
cli
shl
mov
test
jno
adc
inc
sub
jne
dec
jae
adc
je
jb
lods
cli
jmp
out
call
out
inc
retf
xchg
jnp
sub
stc
out
push
mov
cmps
lea
in
jp
cmp
add
sahf
or
in
out
xlat
test
(bad)
adc
inc
xchg
mov
or
push
push
les
jecxz
ins
int3
cs
clc
push
sbb
loope
(bad)
push
pop
js
mov
loopne
mov
xor
fwait
ins
(bad)
cmp
(bad)
leave
loope
or
jns
js
scas
sub
or
xchg
shr
sub
sar
gs
xchg
jge
rcr
mov
jo
int
bound
or
cwde
cmp
lods
lock
sbb
retf
inc
pop
inc
push
inc
or
fist
push
stos
stos
mov
inc
xor
fwait
clc
out
test
lds
cmp
sbb
jmp
fwait
jmp
out
fisubr
repnz
retf
jns
ins
sub
and
scas
push
xchg
sbb
jbe
jmp
xor
js
xchg
sbb
mov
sahf
ins
icebp
les
jle
xor
push
mul
daa
sbb
jns
xor
cdq
jno
outs
retf
mov
cmps
je
aam
(bad)
and
add
test
test
and
push
data16
add
adc
out
jl
mov
xor
xchg
ds
and
or
mov
lods
fldenv
xchg
mov
neg
pop
ror
movs
popa
in
xchg
(bad)
(bad)
mov
stc
xor
jno
sub
stos
cmps
js
arpl
mov
and
cmc
adc
cwde
call
and
leave
mov
lods
inc
cmp
ficomp
imul
push
enter
and
mov
mov
aad
fs
shl
retf
xor
loop
popf
xor
fmul
retf
iret
fist
mov
rcr
jmp
pop
dec
and
in
xchg
scas
push
into
jecxz
popa
mov
dec
stc
xchg
jae
sbb
mov
jmp
xor
iret
aaa
mov
mov
xchg
mov
mov
cmps
pop
mov
push
jbe
mov
jge
sar
push
aas
test
or
jnp
cmp
popa
adc
and
gs
and
not
cmps
into
mov
and
pop
shl
js
adc
adc
pop
dec
scas
aam
cmp
je
and
add
xor
xchg
sub
pop
mov
push
pushf
mov
xor
mov
(bad)
push
and
in
sub
das
push
push
ficom
int3
retf
out
mov
or
adc
sub
cli
xor
mov
and
and
test
addr16
in
sbb
inc
or
retf
mov
pop
xor
pop
add
scas
in
jle
jns
push
lahf
cmp
mov
push
retf
push
divps
add
(bad)
mov
pop
dec
dec
bound
ins
pop
test
sub
sub
inc
fdiv
outs
shl
cmp
gs
cli
imul
imul
(bad)
dec
mov
and
call
push
jne
add
push
(bad)
fwait
mov
iret
cmp
data16
mov
cmps
pop
cmp
and
and
cmps
mov
clc
jg
mov
enter
cs
mov
sar
cmc
push
scas
push
pop
stos
out
mov
stos
or
ror
xchg
data16
push
sub
cmps
dec
push
retf
std
jbe
push
ja
mov
dec
(bad)
push
rep
fcmove
pop
mov
in
into
iret
jmp
imul
in
jmp
push
dec
and
lea
xchg
enter
repz
stos
add
(bad)
push
out
cmps
inc
ret
xchg
mov
inc
mul
(bad)
mov
adc
arpl
iret
(bad)
cwde
mov
jmp
mov
jmp
push
test
scas
(bad)
or
pop
pop
stos
xor
sbb
xlat
nop
and
idiv
jns
or
push
push
test
xchg
pop
jmp
loop
adc
dec
adc
lods
sti
jb
pop
rcr
cs
inc
jl
stos
fist
ror
mov
stos
cmp
lods
or
xor
adc
sub
cld
mov
lahf
adc
mov
xor
cmp
mov
cmps
sbb
loopne
arpl
cmp
jb
bnd
clc
push
pop
inc
and
dec
pop
sbb
fsub
or
xor
mov
xor
outs
pop
into
or
mov
fcomp
sti
pop
fcomp
xor
add
xor
out
inc
mov
not
out
cmp
lods
ror
xlat
dec
sbb
mov
pop
arpl
aam
clc
xor
cwde
les
(bad)
push
xor
lods
sbb
inc
imul
cmp
in
stos
pop
ret
lock
or
mov
adc
adc
xor
dec
pushf
loope
fimul
arpl
sub
dec
pop
fimul
ret
out
push
int3
mov
push
rcl
movs
cmps
fstp
sbb
pop
lock
push
outs
mov
mov
scas
pop
add
dec
aad
stos
es
fldenv
cmps
xor
stos
test
inc
mov
aaa
push
ror
sar
jnp
retf
out
nop
enter
mov
adc
nop
push
pop
sbb
aas
daa
sub
push
(bad)
mov
jg
push
fldenv
mov
aas
xchg
sub
aam
lahf
sti
push
ds
cmps
mov
je
pop
xchg
fdiv
push
sbb
sbb
pop
push
push
fxch
retf
adc
retf
pop
je
cmp
add
(bad)
fist
inc
call
shl
std
lods
sub
mov
test
push
xchg
lahf
cs
shl
ror
sar
adc
adc
jo
mov
ss
les
ja
and
sbb
rcr
shl
sub
movs
ja
push
xchg
test
movs
fisttp
out
mov
test
out
stos
mov
or
or
dec
push
ret
sbb
in
dec
push
gs
out
arpl
mov
fcmovnu
push
lods
sbb
fcomip
pop
jle
faddp
mov
push
xchg
stos
sbb
jnp
mov
popf
cmc
popf
fs
fwait
inc
not
movs
mov
pop
call
fdiv
jp
jne
mov
or
dec
mov
inc
in
dec
mov
or
pop
daa
pop
popa
aam
jbe
retf
ins
jne
push
fs
xor
mov
pop
leave
mov
inc
xchg
pop
in
aas
jo
mov
fst
scas
inc
es
mov
xchg
clc
not
pusha
stc
mov
or
sub
je
test
loope
(bad)
xchg
(bad)
cmp
ret
dec
in
icebp
push
jnp
into
sar
and
xchg
mov
xlat
retf
test
push
and
mov
mov
mov
jne
or
adc
scas
push
cmp
jge
out
gs
mov
adc
test
xchg
in
mov
dec
mov
cli
mov
pushf
fwait
mov
cdq
mov
sbb
retf
ds
xor
mov
repnz
and
sub
je
aam
fcmovbe
mov
push
test
cmp
inc
sbb
jo
and
jmp
fs
sub
mov
push
cvttps2pi
add
jae
int
pusha
sub
in
pusha
xchg
pop
xchg
push
lods
xchg
imul
enter
pop
idiv
dec
pop
sar
mov
push
or
dec
jns
scas
xchg
mov
push
mov
dec
cmp
mov
pop
lea
mov
xchg
push
hlt
adc
dec
pop
push
lea
dec
sahf
jg
cmp
and
dec
je
xchg
jmp
mov
cwde
mov
push
ret
nop
push
in
test
in
call
adc
sub
pop
outs
call
lods
stos
jb
xlat
mov
idiv
jnp
dec
sbb
lds
push
imul
repnz
sub
mov
mov
xor
cs
jae
ja
dec
inc
ins
inc
out
push
popf
sub
push
lock
mov
add
dec
fs
xchg
sbb
ins
xchg
cmp
ja
dec
inc
xchg
push
cmp
pop
cli
dec
sub
fs
mov
cmp
std
aad
sub
bnd
dec
sbb
cmp
movs
pop
(bad)
xlat
xlat
mov
xchg
int3
or
stos
stos
cmp
and
sub
(bad)
mov
jp
cdq
ret
ret
jg
push
add
push
stos
xchg
cmp
fwait
cwde
out
cmp
enter
inc
or
dec
stos
pop
or
jp
sub
mov
pop
jno
call
nop
or
jecxz
mov
or
mov
dec
dec
(bad)
jmp
arpl
imul
sbb
pop
movs
ins
stos
pop
jnp
out
adc
ins
inc
mov
sbb
repnz
adc
and
push
cmp
mov
enter
jmp
push
jnp
mov
jl
in
sub
scas
bound
and
jle
int
jbe
dec
movs
sub
pop
aam
mov
dec
test
popf
add
fs
(bad)
loopne
shl
lods
xlat
lock
or
cmp
movs
sub
push
add
lods
aaa
retf
mov
and
lea
mov
push
test
lea
int3
enter
inc
cmp
das
add
fiadd
push
dec
test
inc
sub
inc
add
add
sub
push
iret
iret
mov
xor
xlat
dec
pop
jmp
popf
or
jmp
add
xchg
les
loope
sub
mov
push
jmp
push
gs
(bad)
mov
fwait
mov
(bad)
aaa
mov
js
leave
jl
aas
aad
or
pop
jmp
jb
mov
fisub
inc
pushf
ds
fdiv
cmps
(bad)
dec
int
icebp
fldcw
jo
push
call
icebp
mov
inc
rcl
jmp
pop
inc
push
(bad)
lea
dec
mov
push
mov
data16
cmp
ja
cmp
xor
xor
add
inc
pop
xchg
push
sub
pushf
and
shl
add
outs
cmp
mov
xor
xchg
mov
ror
movs
jns
xor
rol
mov
pop
fs
jmp
cmps
sub
adc
adc
psubd
xor
enter
sub
xchg
std
sub
mov
mov
jge
sub
jno
leave
je
popa
jno
adc
xor
std
arpl
(bad)
cmp
cmp
jns
fisttp
repnz
call
inc
jp
xlat
data16
(bad)
push
or
not
test
pop
cmp
stc
repz
nop
test
mov
jns
dec
hlt
mov
call
lock
push
adc
popf
xchg
or
pushf
inc
push
xchg
sti
push
fild
fcmovnb
xor
xor
jne
icebp
mov
cmps
sub
psubsb
xchg
jle
enter
xchg
ds
mov
jb
ins
push
mov
(bad)
cld
aad
pop
iret
in
sub
fwait
or
or
imul
xor
js
int3
or
aas
sbb
imul
jle
xor
lea
cmp
stos
push
shl
push
test
lahf
test
mov
push
push
jo
pusha
sub
pusha
xchg
cmp
call
in
fadd
fist
mov
inc
mov
dec
aas
fs
fild
outs
in
cmp
inc
inc
xor
dec
jecxz
add
mov
rol
xchg
jb
ret
popf
fwait
add
dec
jle
lock
jmp
xchg
xchg
sahf
sub
pop
mov
mov
out
mov
js
enter
cs
xchg
xor
imul
pop
push
xchg
sbb
add
(bad)
call
sti
(bad)
adc
dec
js
mov
sahf
jo
cmp
sti
jne
push
clc
sub
mov
xchg
add
dec
xchg
aas
dec
jnp
add
(bad)
call
pop
ins
or
stos
cdq
mov
movs
and
mov
dec
fistp
(bad)
xchg
test
sub
enter
adc
adc
dec
dec
sub
jae
push
inc
push
or
lea
in
or
xchg
pop
neg
retf
outs
cdq
mov
jp
dec
(bad)
das
cmp
imul
xchg
ret
ret
das
in
inc
and
cdq
ret
or
fnstsw
bound
xchg
das
imul
cmp
mov
cmps
adc
dec
call
cmp
call
xchg
iret
ss
fstp
xchg
push
lea
xchg
cmp
and
mov
sbb
inc
push
addr16
out
dec
les
push
mov
sbb
pop
xchg
xor
aas
test
retf
stos
(bad)
xor
mov
addr16
out
in
fadd
daa
jecxz
xor
inc
dec
cmp
add
mov
fdivp
scas
push
pop
shl
lea
push
dec
jns
or
xchg
jo
inc
sbb
out
push
xor
adc
aad
pop
ins
mov
pop
nop
fdiv
xor
ret
mov
xchg
imul
and
hlt
stos
out
ds
jno
ins
popa
test
pop
je
leave
lahf
xlat
loope
bound
mov
ret
mov
loop
pop
mov
push
enter
nop
push
mov
mov
dec
test
aaa
sub
stc
jne
mov
jnp
inc
imul
jbe
and
test
adc
aad
pushf
and
mov
std
shl
movups
push
gs
pop
xor
(bad)
push
jg
cmp
inc
push
push
pop
aas
mov
add
aaa
aaa
mov
jae
sub
pop
(bad)
adc
mov
rcl
repnz
pop
ret
ins
movs
fwait
dec
sar
xchg
adc
popf
sbb
outs
leave
push
sub
out
inc
and
push
pop
nop
(bad)
cmp
cmps
xchg
ds
je
sub
fild
jns
lahf
xchg
dec
dec
pop
inc
aas
mov
push
movs
jno
mov
dec
mov
jp
sbb
sub
fbstp
lock
sub
fst
in
jno
push
adc
sbb
inc
test
sti
test
gs
xor
hlt
sbb
push
dec
inc
or
sti
xor
jmp
shl
aaa
lea
loope
loopne
das
or
adc
aas
call
lods
jp
data16
cdq
mov
into
mov
jmp
add
push
cmps
xor
std
aaa
push
jecxz
aas
jbe
test
cli
out
mov
or
aas
into
les
iret
aam
sti
les
adc
mov
stc
lods
out
popa
dec
mov
call
mov
stos
push
pop
sahf
lods
push
and
pop
xor
repnz
enter
fild
enter
cmp
sub
addr16
(bad)
ins
mov
dec
into
cmps
aaa
lea
imul
xor
inc
and
or
mov
out
sbb
add
(bad)
arpl
das
jbe
icebp
int
fiadd
cmp
jbe
jo
jge
mov
repnz
pop
mov
fidivr
xor
ds
adc
jno
or
cmp
lods
pop
jbe
xchg
sar
push
xor
dec
mov
in
popf
pop
nop
adc
mov
sub
enter
or
ja
and
push
xlat
push
inc
pop
inc
sti
push
mov
mov
xchg
jp
xchg
xchg
std
data16
popf
or
outs
mov
(bad)
inc
sahf
(bad)
lock
into
std
jle
sti
call
lods
push
jo
mov
std
nop
jle
jno
push
pop
adc
sbb
jmp
sar
ror
inc
call
cdq
shl
imul
push
add
fmul
retf
subps
mov
out
push
push
scas
jnp
(bad)
jbe
call
mov
sbb
push
stos
(bad)
(bad)
sub
(bad)
adc
or
outs
inc
in
sbb
scas
mov
xor
push
pop
in
pop
gs
fsub
sub
popa
(bad)
xchg
or
push
call
fldcw
idiv
enter
and
jp
pop
test
enter
push
add
stos
xchg
lea
mov
hlt
stc
stc
or
div
daa
test
cmp
dec
ins
sti
or
stos
sub
add
jg
stos
add
jo
leave
cdq
or
lds
cld
pusha
fcom
out
test
movs
sub
es
inc
jns
or
test
iret
dec
nop
ins
jmp
sub
adc
movs
in
cli
adc
jbe
sbb
jmp
add
test
idiv
es
test
push
shr
rol
pop
dec
stos
xchg
iret
cmp
cmp
mov
dec
xlat
pop
mov
out
cs
mov
pop
mov
scas
mov
(bad)
pop
scas
sahf
sub
lods
sar
(bad)
into
xor
add
inc
inc
fwait
scas
jp
mov
cmp
loope
mov
jnp
fs
clc
ror
sub
xchg
mov
popf
call
add
or
js
xor
push
push
(bad)
loopne
push
into
inc
push
mov
hlt
mov
sub
cmc
test
scas
push
(bad)
sti
lds
and
xchg
push
pusha
into
cwde
xor
shr
ja
(bad)
in
mov
xchg
or
pop
cmc
fcmovb
sbb
cmps
dec
in
jns
mov
inc
sbb
jp
xchg
in
dec
int
dec
dec
repnz
xor
xor
mov
push
xchg
push
out
xchg
xchg
outs
fdivr
or
jecxz
nop
mov
out
popf
idiv
and
das
pop
cdq
ds
lock
xor
adc
ja
cld
or
jb
(bad)
icebp
js
pop
xchg
push
xchg
mov
je
jl
scas
(bad)
lods
movs
push
jmp
or
popf
arpl
inc
mov
ret
push
cmp
ds
lods
sbb
pop
sar
js
or
add
mov
cmp
push
std
push
mov
ds
pop
fst
mov
fistp
push
cwde
mov
repz
stos
or
mov
dec
push
push
sbb
icebp
jo
inc
scas
xchg
mov
out
call
inc
mov
aaa
mov
aam
push
jmp
sbb
stc
mov
inc
push
lock
fstp
ret
fdivr
in
(bad)
movs
inc
sub
pushf
mov
cmp
xlat
fnstsw
cli
das
jp
test
xlat
aam
push
(bad)
push
xchg
ins
cmp
mov
fiadd
adc
addr16
fisttp
cmp
add
call
cmp
addr16
int3
setns
inc
inc
cmp
fisub
push
mov
sbb
and
aad
js
push
mov
aaa
adc
sbb
push
cld
imul
scas
sbb
push
shl
adc
int
ins
push
inc
cwde
lods
jns
call
pop
dec
jecxz
cs
out
sub
dec
inc
or
sahf
xlat
sbb
sti
add
sar
dec
fisubr
lock
add
mov
neg
cmp
push
outs
sub
jmp
in
xor
sbb
pop
iret
push
sub
mov
loope
or
sti
test
or
clc
cmc
in
add
cdq
stc
jecxz
fsubr
fs
ds
sti
pop
scas
test
pop
sbb
cmc
stos
adc
adc
jbe
push
push
js
nop
int3
pop
jo
xchg
adc
jno
mov
add
fmul
loop
outs
push
xchg
call
jno
cmp
xchg
int3
stos
in
sahf
mov
or
sub
inc
push
popa
cs
cmp
test
movs
xchg
mov
mov
jns
rol
and
mov
daa
sub
adc
or
stc
in
pop
mov
inc
jno
imul
dec
push
pop
fcmovnb
cld
fstp
ins
dec
xor
lds
rol
cmp
mov
arpl
mov
xchg
fdivr
adc
jae
mov
xchg
push
push
jnp
lods
(bad)
jmp
test
aam
push
jl
sbb
pop
scas
cmps
or
dec
bswap
cmps
movs
loop
jl
pop
mov
sbb
pop
mov
pop
jmp
cmc
out
and
or
out
jo
cmps
xchg
mov
cmp
icebp
xor
push
mov
xchg
dec
lds
push
ja
jo
pop
sbb
ret
mov
ret
into
inc
pop
lea
mov
adc
out
add
ss
pushf
cmp
ror
iret
dec
fneni(8087
rcr
xchg
stos
sub
das
inc
sub
adc
or
mov
(bad)
aam
cmp
xchg
loopne
mov
ds
push
mov
sti
add
mov
xor
test
lods
fdivr
jne
push
shl
int
mov
cli
pop
in
cli
jno
or
ret
fadd
out
mov
mov
leave
mov
sbb
cmp
stos
jbe
push
sub
push
jnp
mov
das
xchg
sub
shr
sub
mov
jmp
loopne
int3
scas
repz
fsub
inc
in
mov
imul
push
mov
push
shl
test
in
les
pop
lds
cld
mov
sub
pop
loop
jle
xchg
fwait
and
lods
imul
sbb
daa
mov
pop
test
mov
and
jle
es
in
stc
sbb
xchg
imul
fs
jle
xchg
in
mov
inc
repnz
scas
call
add
pop
(bad)
add
in
add
pop
test
jle
sar
icebp
int3
movs
imul
fld
icebp
and
and
dec
pop
pop
clc
or
dec
adc
or
xor
mov
lods
mov
outs
cdq
mov
ja
jmp
xor
and
cld
and
or
or
jp
push
sub
mov
push
or
mov
push
inc
cmp
or
aad
jecxz
mov
stos
xor
scas
stos
rcr
adc
ffree
repz
outs
pop
or
lea
dec
pop
mov
pushf
xor
sub
mov
adc
push
cmp
sahf
push
xor
sub
addr16
xor
push
add
and
sbb
fidiv
les
addr16
adc
mov
mov
jne
cmps
sub
jne
sbb
shr
push
mov
push
mov
shl
fwait
add
pop
fdiv
fiadd
scas
dec
loop
cs
sbb
jnp
dec
mov
pop
pop
ror
sbb
push
cmp
sub
inc
adc
pop
es
fcmove
pop
pushf
mov
pushf
and
add
push
push
test
popa
sbb
dec
xchg
jl
dec
int3
push
es
retf
push
scas
je
leave
mov
mov
lock
mov
xchg
xchg
add
scas
push
rcr
dec
adc
outs
fstp
sub
lea
movs
dec
mov
rcl
out
sub
daa
mov
or
loopne
lds
retf
(bad)
cmp
sub
cmp
push
sti
xchg
mov
fild
push
outs
iret
retf
and
mov
pop
add
xor
pop
jbe
inc
pushf
movs
inc
ja
push
ret
enter
daa
retf
les
adc
int
iret
rol
les
dec
imul
mov
mov
mov
and
hlt
mov
fs
es
mov
das
hlt
xor
shr
call
xor
mov
out
dec
add
dec
mov
repz
dec
retf
add
in
or
or
push
push
in
in
and
in
lock
daa
mov
sbb
dec
ficom
outs
dec
pop
push
cdq
cmp
cmp
xchg
xor
cmp
call
lods
dec
rcl
dec
(bad)
scas
pop
ins
cmp
sub
or
add
and
mov
xor
rol
xlat
fcom
adc
sbb
fdivr
jb
aad
cmp
and
pslld
and
inc
std
add
aad
xchg
movs
stc
adc
sar
pop
inc
inc
push
sbb
cmp
jmp
aad
outs
retf
sar
adc
cs
not
xor
jb
jns
popf
out
xor
loop
inc
cs
loopne
mov
mov
jmp
jne
jmp
arpl
push
scas
ret
mov
std
pop
outs
out
jno
js
dec
fimul
add
jo
pop
movntps
adc
test
pop
fiadd
test
nop
xchg
imul
int3
cmp
lea
xlat
jp
movs
and
inc
in
daa
adc
inc
xchg
xor
loope
int3
dec
jge
pusha
shl
push
xor
ins
lahf
xchg
cdq
jmp
aaa
bswap
nop
lds
mov
mov
mov
(bad)
push
sub
stc
fsubr
and
cmova
inc
add
mov
push
xor
adc
les
push
cmp
pop
rol
fnstsw
imul
fstp
cmp
xchg
mov
mov
aaa
mov
out
sahf
inc
popa
lods
(bad)
xor
sbb
(bad)
jl
fstp
mov
pop
imul
loop
xchg
and
mov
(bad)
jbe
push
sub
push
mov
inc
inc
movs
(bad)
(bad)
mov
in
stc
mov
push
fsub
cmp
dec
popf
xchg
mov
test
cmp
push
inc
jmp
cwde
shr
xor
jmp
jb
mov
mov
out
clc
mov
cs
add
(bad)
and
loopne
lahf
movs
mov
cmps
jne
and
popf
jp
jp
or
jl
sub
jmp
and
xchg
stos
aam
repz
call
cmp
cld
fcmovnbe
jno
pop
add
cmp
stos
fnsave
(bad)
sbb
adc
sub
adc
js
jo
neg
and
pop
mov
cdq
mov
ins
push
(bad)
hlt
sahf
push
and
pop
js
dec
cmp
adc
fsub
push
push
bound
pop
cmp
int
and
pop
jb
inc
arpl
mov
xchg
(bad)
sbb
cmp
dec
xchg
push
nop
dec
mov
sbb
cmp
scas
out
mov
and
inc
mov
dec
push
movs
(bad)
and
popa
or
pop
cmps
cmps
test
adc
retf
aaa
fwait
rcl
cdq
test
push
cmp
cmp
stos
(bad)
inc
and
push
lahf
aas
jae
shr
jge
or
mov
outs
ret
push
call
bound
sub
adc
jmp
cmp
pusha
test
daa
sub
xor
jb
mov
mov
rcr
adc
in
pop
mov
imul
add
dec
mov
call
xor
lods
sub
xchg
sti
sar
ds
xor
sub
or
std
mov
idiv
add
cmp
rcr
les
retw
int3
daa
dec
pop
in
push
mov
in
lahf
push
mov
mov
add
inc
jbe
add
fnsave
js
pusha
sbb
es
aam
pusha
sbb
fdiv
(bad)
cmp
imul
pop
outs
lods
cmp
call
jne
mov
pop
xchg
xchg
cmps
hlt
jmp
sbb
or
rcl
pop
mov
mov
loop
sub
ins
mov
cli
imul
pop
push
cmc
jg
movs
iret
dec
cld
in
dec
int3
imul
aad
mov
enter
lahf
rcr
iret
ss
mov
loop
add
push
es
jns
jle
stos
xchg
pop
and
repnz
call
pop
xchg
or
sub
xor
mov
ins
jne
sub
xor
mov
enter
add
or
xchg
std
loop
and
icebp
pusha
lock
mov
xchg
xchg
fnstsw
sysenter
pop
jns
(bad)
outs
ja
push
mov
jmp
pop
inc
mov
pusha
jo
je
adc
adc
aas
mov
mov
adc
pop
mov
loop
jne
mov
xor
cs
add
xchg
sbb
test
repnz
jo
cwde
adc
xor
out
pop
jnp
inc
fmul
pop
lahf
lahf
das
lea
dec
imul
in
add
mov
cmp
jecxz
jg
pop
js
jo
mov
(bad)
and
mov
aas
test
add
jae
xlat
and
loop
adc
test
or
retf
sbb
(bad)
mov
jmp
cmp
jne
cwde
loope
div
add
cmp
push
sar
les
push
xchg
adc
iret
(bad)
or
dec
fs
xchg
xor
lods
sub
dec
sahf
cmp
cld
(bad)
das
mov
ror
sub
or
pop
sbb
add
fld
jne
xor
sbb
test
mov
cmp
fwait
nop
jbe
aaa
mov
xchg
(bad)
scas
add
cdq
pop
add
add
cmps
ret
xor
inc
(bad)
ja
fcom
shl
fist
add
xchg
add
loopne
das
cmc
bound
inc
push
xor
jno
cmp
add
fst
push
push
pop
xor
mov
cld
sub
and
fist
daa
shr
inc
pop
cmp
jl
push
add
xor
jecxz
test
pop
jbe
es
jecxz
imul
jno
inc
inc
adc
loope
mov
in
ror
(bad)
mov
push
sub
aaa
add
ret
cmp
(bad)
fld
jge
std
popa
jo
sbb
push
pop
push
mov
push
dec
ss
stos
shr
cwde
clc
mov
sbb
pop
into
arpl
inc
(bad)
jnp
xchg
call
and
stos
add
adc
addr16
adc
rol
shr
data16
fst
sub
cld
sub
xchg
inc
mov
push
mov
add
mov
xchg
push
mov
fwait
sub
out
mov
jg
fcomp
mov
movups
jl
imul
jns
mov
shl
cmc
mov
cmc
xor
xchg
adc
fwait
sub
and
xchg
pop
enter
add
adc
dec
xor
fisttp
fcomip
es
cwde
shr
or
push
inc
inc
sub
xor
je
enter
xchg
rcr
pop
and
inc
cmp
add
push
push
out
aaa
mov
outs
push
shl
jge
inc
je
movs
lds
mov
out
xor
(bad)
aam
out
push
mov
ret
shl
sub
mov
fs
xor
shr
xchg
in
jbe
test
inc
(bad)
int3
lahf
sbb
pop
cmp
mov
les
adc
call
test
cmc
repnz
mov
enter
lahf
cmps
adc
out
jns
mov
jl
pop
cmps
sar
fwait
scas
repnz
pop
sbb
push
push
cdq
lds
mov
out
in
sbb
icebp
inc
xor
outs
dec
int
and
es
push
sub
(bad)
mov
xor
repz
pop
das
sahf
test
lods
retf
in
fistp
pop
retf
pop
scas
adc
and
test
dec
pop
mov
repz
imul
in
sub
add
enter
and
lea
cmps
js
jb
fidivr
adc
jge
lods
loope
leave
int3
inc
ret
in
pop
sbb
sti
sub
mov
push
pop
add
cld
out
and
push
sbb
xchg
cmp
nop
inc
push
add
inc
or
xchg
retf
adc
outs
sbb
cmps
push
pop
adc
inc
mul
xchg
jle
push
jp
adc
hlt
mov
add
(bad)
mov
imul
or
popa
jmp
outs
sub
dec
push
mov
mov
int3
inc
dec
sar
(bad)
pop
aad
inc
adc
stc
lods
xor
or
xor
adc
dec
pop
sbb
(bad)
ins
gs
push
std
sub
in
add
lds
mov
scas
repnz
pop
jmp
mov
fisttp
es
push
xchg
push
rcr
std
je
aas
mov
cdq
cmp
jp
mov
fbld
rcr
stos
and
loope
inc
cmp
fisttp
and
mov
pop
fs
sub
(bad)
scas
mov
cmc
dec
int
fcom
shl
std
shr
inc
ret
out
int
pop
xor
push
pushf
scas
outs
aaa
mov
ja
pop
dec
xchg
pop
js
cmp
lods
mov
imul
mov
cmp
push
mov
in
pusha
pop
mov
std
daa
cmc
loop
sbb
mov
xchg
sub
pop
dec
dec
enter
ror
clc
int3
setbe
test
outs
cmps
inc
jbe
mov
sub
or
ret
pop
mov
aam
outs
xchg
sbb
scas
out
scas
fild
out
ds
js
dec
mov
pop
out
repz
inc
inc
cmp
ror
mov
lods
mov
xchg
adc
fsub
add
and
cs
inc
cmp
sub
jle
mov
dec
ret
pop
rol
add
or
jae
lds
in
sbb
and
jne
mov
loopne
cmc
mov
jecxz
push
in
xlat
lock
sub
leave
retw
int3
mov
push
test
cld
cmps
jns
and
sbb
push
dec
sub
or
sti
xor
xchg
bound
mov
push
bound
mov
iret
sub
imul
mov
xlat
(bad)
imul
stos
mov
std
cdq
int3
mov
xor
outs
aam
loop
out
out
push
ins
jae
ins
repnz
jge
out
out
scas
test
jmp
call
fs
sbb
leave
sbb
cmp
sar
js
pop
xlat
mov
push
retf
pop
rcr
(bad)
jmp
out
mov
push
in
and
mov
enter
and
and
and
aam
sub
test
pop
cmp
cmps
(bad)
pushf
sbb
xchg
mov
and
call
sahf
out
(bad)
adc
push
add
(bad)
in
stc
in
(bad)
cld
lock
mov
sbb
out
ror
mov
push
iret
inc
clc
mov
inc
jp
popa
push
cmp
repnz
test
inc
and
daa
cli
sub
xchg
or
inc
lahf
out
pushf
add
or
stos
rcr
xor
cmp
inc
lock
mov
jmp
add
fs
ret
push
mov
add
sub
cmp
into
mov
fnstsw
adc
scas
(bad)
dec
pop
aas
xor
fwait
cld
jo
or
popf
(bad)
fidiv
mov
sahf
ins
mov
pop
push
add
mov
cmp
xor
out
cld
fistp
pop
pop
bound
and
fcmovb
std
cmp
cs
push
push
enter
mov
adc
mov
add
jns
dec
movs
and
cmp
or
out
into
mov
fucomi
mov
lahf
fisttp
(bad)
clc
hlt
lahf
std
in
aad
imul
(bad)
adc
push
vmptrst
push
mov
push
or
mov
and
add
and
pop
lds
jb
test
adc
repz
test
clc
fmul
mov
adc
and
push
arpl
sar
jmp
inc
in
sti
mov
mov
mov
(bad)
popf
data16
popa
in
bound
imul
adc
cmp
js
pop
fnsave
xor
xchg
mov
push
inc
xor
jo
push
lock
sbb
or
arpl
lea
jno
pop
and
retf
fs
test
inc
add
into
xchg
mov
sub
xchg
jb
popa
mov
in
pop
ja
mov
pop
imul
push
test
shr
aam
inc
pop
jge
jecxz
(bad)
xchg
dec
adc
sbb
jne
xchg
and
addr16
jp
sub
adc
pop
fnstcw
jns
imul
std
stos
mov
rol
dec
fwait
jg
add
mov
push
leave
loope
xchg
dec
sub
in
pop
in
(bad)
in
fdivr
xchg
int
xor
in
xchg
jne
xchg
mov
mov
lahf
aaa
jno
call
mov
popa
pop
xor
xor
or
loope
or
or
loop
inc
mov
movs
div
outs
outs
jne
push
lods
(bad)
rol
sub
add
in
adc
inc
fcom
in
test
movlhps
and
pushf
(bad)
sub
pop
sar
test
dec
cli
ins
mov
ins
jb
adc
mov
sub
ret
dec
aaa
push
lods
popa
movs
lods
test
data16
or
repz
xchg
adc
xchg
jl
mov
inc
mov
inc
fidivr
test
jns
fild
add
test
icebp
and
mov
mov
mov
nop
dec
mov
xchg
lahf
mov
das
jg
adc
or
sub
mov
je
pop
jle
jmp
addr16
fnstsw
ds
adc
or
in
dec
clc
cmp
ds
sbb
ret
pop
outs
mov
ss
xlat
push
mov
push
aas
add
mov
loope
lea
inc
cmps
xor
jb
outs
mov
cmp
into
nop
js
mov
jns
sub
add
je
in
jmp
xor
ja
sti
add
sbb
pop
lahf
repnz
iret
(bad)
mov
in
xchg
es
inc
mov
add
mov
or
mov
mov
aaa
es
mov
gs
addr16
pop
gs
jge
push
add
jl
out
daa
jge
jbe
lds
adc
inc
repnz
arpl
jb
adc
lea
arpl
cmp
in
cs
es
test
and
mov
repnz
pushf
inc
inc
inc
push
(bad)
stos
daa
xor
jl
out
xchg
or
pop
pop
and
idiv
(bad)
pop
mov
inc
sahf
cli
jno
mov
nop
pop
mov
sbb
and
xchg
xchg
xchg
daa
js
imul
jbe
int
inc
and
lods
push
or
push
xchg
pop
imul
shr
retf
ss
sar
sub
mov
pusha
cld
jle
sub
cmps
sub
dec
xor
inc
mov
mov
xor
std
out
jae
out
mov
and
sti
mov
pop
adc
int
aad
aam
push
iret
inc
and
repz
ret
cmc
mov
add
cld
in
sbb
mov
outs
fiadd
sahf
shl
loop
xor
outs
mov
adc
(bad)
pop
adc
mov
retf
mov
pop
in
xchg
push
shl
mov
or
xchg
or
stos
mov
mov
xchg
mov
push
mov
mov
jp
pop
xlat
mov
(bad)
rcr
movs
lds
mov
ror
inc
cmp
mov
jb
and
ds
in
adc
fwait
mov
cwde
pop
jl
dec
loop
lahf
or
shl
test
mov
add
leave
mov
pushf
(bad)
mov
jb
stos
scas
add
push
cmp
mov
cmp
adc
cmps
jle
xor
cmc
cdq
xlat
sub
sahf
add
aad
lea
sub
xor
sbb
mov
loopne
and
inc
push
sar
push
inc
jg
xchg
fs
fld
mov
fistp
sub
jns
(bad)
or
cmps
sbb
std
sbb
and
icebp
iret
and
add
outs
out
aad
mov
cmp
xchg
aam
out
dec
jb
push
popa
test
xchg
adc
test
das
jno
lahf
cmp
jmp
lods
push
icebp
repnz
push
sbb
in
out
sbb
mov
cmp
cld
out
xchg
jp
mov
inc
xchg
jmp
mov
aas
les
ins
iret
sub
mov
mov
xlat
outs
js
in
push
int3
sub
jecxz
cmp
adc
adc
fs
ror
dec
shl
xchg
inc
and
scas
add
outs
ss
jmp
pusha
inc
outs
adc
mov
fild
popf
jecxz
cld
scas
call
rol
xor
repnz
or
into
mov
cmp
popf
not
push
jmp
mov
inc
mov
pop
hlt
dec
lods
inc
leave
ja
and
jecxz
xchg
xchg
xchg
cmps
bound
lds
(bad)
cmp
(bad)
test
pop
jecxz
sub
pop
repz
lods
jne
xor
int
and
mov
es
jecxz
jns
ret
cmp
dec
aas
lahf
(bad)
adc
je
add
mov
dec
hlt
add
icebp
mov
sub
shr
sub
rcr
pop
cld
adc
imul
nop
add
inc
or
sub
jmp
jno
sti
inc
addr16
mov
pop
adc
fcomp
dec
fisubr
xor
les
sysenter
jl
adc
cmp
int
imul
(bad)
out
adc
inc
push
adc
sub
mov
aam
imul
xchg
jp
loopne
or
enter
cmp
lock
push
pop
scas
bound
not
pop
sbb
lds
mov
fcomp
into
dec
in
mov
hlt
push
mov
retf
lods
sub
mov
push
xchg
popa
adc
adc
add
or
dec
mov
inc
cmp
jge
mov
sub
shl
inc
jo
cmc
fadd
popf
mov
jne
xor
int3
xchg
mov
cli
(bad)
cli
jg
sbb
mov
inc
mov
dec
jns
mov
pop
mov
and
enter
mov
and
mov
sbb
push
cli
cs
in
pop
pop
inc
add
lea
jmp
js
inc
xor
xchg
popf
jp
push
jmp
sti
or
addr16
cld
loopne
and
mov
lods
popf
mov
jae
add
out
(bad)
adc
push
cmp
inc
std
pop
int
iret
xor
mov
and
pop
and
and
aam
lds
out
jl
or
xor
jb
mov
xor
inc
adc
sub
stos
sub
pop
dec
arpl
dec
push
(bad)
mov
lds
sub
icebp
jae
cld
js
bnd
jg
fisub
jns
(bad)
std
in
dec
or
je
loop
mov
add
mov
aaa
dec
cmp
cmp
or
sub
and
mov
stc
pop
sbb
call
mov
lods
push
cld
push
mov
xchg
sbb
mov
enter
inc
div
or
mov
mov
out
xchg
mov
in
repnz
push
pop
test
inc
ja
cmp
call
imul
and
dec
call
(bad)
cmp
js
gs
dec
in
sub
fild
adc
jnp
mov
jb
aad
mov
jg
add
outs
sbb
push
xchg
push
xor
mov
sbb
inc
leave
ins
js
lods
ret
push
inc
push
fstp
sub
dec
stos
mov
cmp
push
(bad)
fistp
mov
test
xchg
inc
out
stos
mov
shl
fidivr
loop
mov
imul
les
test
in
mov
and
xchg
out
jne
adc
xchg
sub
adc
test
adc
xchg
sub
pop
popf
cmps
shr
call
xlat
inc
stos
xor
mov
mov
jmp
call
out
ja
push
or
sahf
pop
cmp
pop
pop
ror
jp
push
in
iret
pop
(bad)
ins
xor
jmp
xor
inc
mov
jnp
aam
gs
mov
pop
repz
push
mov
mov
mov
test
dec
les
jnp
pusha
mov
pop
arpl
cli
mov
or
out
sbb
icebp
scas
sti
inc
add
jns
enter
adc
or
aad
push
out
xchg
bound
(bad)
gs
cmc
jae
dec
adc
jge
sub
retf
sub
jg
ins
imul
icebp
dec
mov
mov
push
outs
pop
retf
mov
jmp
ds
lea
ins
jmp
popf
fidiv
and
inc
ins
loop
call
test
sbb
dec
xlat
dec
sub
sbb
mov
pop
std
gs
js
mov
adc
mov
mov
sti
mov
imul
repz
ja
(bad)
cmc
test
lea
jp
mov
or
arpl
daa
jo
pushf
cli
adc
aam
repnz
fistp
aad
sbb
imul
sub
sti
xor
jecxz
mov
adc
call
outs
js
xor
out
and
scas
mov
jne
sub
inc
mov
imul
xchg
jo
xor
add
add
cdq
or
jnp
cmp
and
xchg
adc
xchg
push
inc
lods
mov
jge
xor
(bad)
nop
aas
imul
pop
outs
lahf
(bad)
cdq
cmp
mov
jp
dec
fs
test
pop
mov
sbb
mov
out
add
in
in
mov
jge
or
or
fiadd
sbb
mov
cld
into
dec
and
out
dec
add
mov
int
jp
enter
shl
pop
or
std
out
pop
adc
ficomp
ins
fadd
pop
in
xchg
sbb
out
ss
push
xlat
ds
ret
pop
ss
cmps
xchg
dec
inc
imul
inc
int3
mov
lods
shr
adc
sub
cli
xchg
xor
push
push
inc
into
mov
xchg
mov
xor
pop
mov
test
fs
jb
(bad)
fstp
dec
mov
les
jbe
jno
mov
add
test
push
mov
push
sbb
addr16
mov
push
sbb
sbb
jnp
sbb
fwait
or
pop
rol
cmc
adc
pushf
int
adc
push
xchg
sub
pop
(bad)
stos
sub
popa
push
or
sub
(bad)
mov
mov
fwait
lock
pop
test
iret
jno
aam
mov
and
dec
or
test
sub
loopne
adc
in
mov
loop
aaa
push
xchg
movs
jp
dec
imul
dec
mov
mov
cmp
ret
mov
cmps
cmp
sub
or
fs
stos
push
das
jne
test
(bad)
stos
pop
mov
pop
cmps
ss
mov
cs
xlat
jns
jmp
mov
push
out
mov
lds
movs
mov
dec
add
adc
(bad)
cld
outs
shr
sahf
fldcw
inc
jne
mov
jb
inc
call
sbb
push
push
fsub
daa
dec
jmp
xchg
and
or
cmp
adc
cmp
ret
and
jo
xchg
dec
add
xor
js
lds
std
mov
pop
lock
es
in
ret
ja
inc
hlt
cld
(bad)
es
(bad)
jp
ficomp
mov
push
imul
shr
pop
cmp
xchg
imul
ins
cmp
retf
jg
mov
dec
dec
xor
or
or
sbb
xor
pop
push
inc
push
or
xchg
out
xchg
mov
inc
test
fcom
or
adc
xchg
mov
jp
(bad)
js
fist
inc
mov
xchg
push
fst
rcr
adc
icebp
xor
mov
sub
ret
adc
movs
loope
mov
call
loop
or
inc
jg
iret
in
aad
in
cmp
sub
jo
pop
sbb
cli
call
sbb
enter
fst
int
test
cld
or
icebp
mov
and
push
call
cmps
lods
dec
mov
lods
lods
ret
std
cmp
jae
dec
adc
repnz
je
dec
aas
xchg
cwde
push
inc
cs
aam
lock
push
das
jle
outs
jge
add
loop
sbb
adc
into
iret
cmp
jnp
and
cmp
cwde
jbe
or
pop
into
retf
or
in
pushf
movs
adc
in
add
or
mov
ins
or
jl
repz
add
mov
fwait
xor
scas
retf
in
jno
clc
sbb
mov
jmp
mov
mov
ss
xor
into
bnd
jp
cmc
cli
cmps
jge
rol
stos
dec
imul
pushf
add
inc
mov
jno
outs
mov
push
mov
mov
xor
arpl
jecxz
aaa
les
jecxz
mov
movs
mov
jae
ret
popf
daa
mov
mov
inc
mov
push
stc
out
sub
std
mul
jmp
bound
into
push
inc
jns
mov
mov
hlt
shl
mov
pop
pop
dec
ret
ins
ss
jmp
xchg
push
jns
pop
add
jo
pop
xchg
or
xchg
call
pop
pop
or
jns
ret
scas
cmc
nop
mov
inc
jmp
clc
adc
out
mov
mov
(bad)
dec
cmps
mov
in
xchg
jg
pop
addr16
fcompp
jp
push
xchg
aad
je
push
pop
sub
repnz
or
push
xchg
cli
cmc
push
mov
icebp
add
xlat
dec
in
or
cmp
adc
fdecstp
icebp
mov
jmp
cmps
out
scas
adc
test
add
adc
test
mov
cli
(bad)
je
mov
les
inc
ss
pop
loope
(bad)
sbb
mov
out
add
rol
hlt
out
(bad)
xchg
loopne
jl
(bad)
loopne
lds
inc
mov
xchg
cmps
sbb
out
es
dec
hlt
mov
and
clc
xchg
xor
dec
out
in
add
stc
push
and
call
aaa
jle
lea
and
mov
jb
pop
or
mov
das
cwde
push
mov
sub
adc
push
movs
rol
ret
push
fnstsw
lods
pop
int3
fsubr
adc
sub
xchg
repz
ja
cli
in
loop
cmp
push
sub
leave
sub
mov
dec
imul
dec
inc
movs
xchg
punpcklwd
inc
loop
adc
mov
mov
aam
test
movs
rol
sub
shl
enter
fiadd
adc
mov
push
inc
cmp
sub
call
adc
ds
pop
test
(bad)
pop
dec
pop
cmp
mov
push
xchg
pop
and
jo
add
cli
lea
jns
ja
add
jno
fdiv
sti
push
ds
jae
cmps
or
retf
sub
xlat
std
adc
push
das
dec
dec
test
add
mov
push
jmp
bound
mov
daa
adc
push
sub
mov
jns
cwde
adc
scas
mov
aas
inc
xchg
jbe
xor
dec
int3
pop
ins
aaa
mov
mov
in
lds
je
mov
cmp
loope
cmps
xchg
stos
add
dec
and
pop
or
cmp
nop
out
and
mov
mov
jnp
xchg
and
jl
sub
and
sbb
mov
sub
repnz
push
or
jnp
and
xchg
cmp
jg
outs
test
add
inc
push
xlat
xchg
dec
ins
sbb
mov
sbb
mov
push
jmp
in
xchg
xchg
pop
mov
mov
add
inc
xor
lea
add
xlat
dec
stc
or
inc
outs
push
pop
mov
inc
xor
outs
inc
xchg
or
shl
mov
scas
stc
fstp
inc
int3
imul
outs
xchg
jmp
mov
jle
adc
fwait
ins
(bad)
fiadd
dec
jecxz
mov
mov
scas
dec
pop
adc
imul
inc
test
jle
push
mov
retf
shl
lock
pop
cmc
(bad)
xlat
jmp
rcl
push
push
(bad)
cld
or
in
stc
mov
mov
mov
ret
test
or
outs
adc
push
fld
fldcw
ja
sub
je
call
add
sub
add
inc
dec
add
popf
es
jbe
aaa
pop
shr
sbb
xchg
lds
out
mov
lock
and
aas
jp
dec
and
cdq
mov
popa
push
in
or
std
bound
pop
xchg
fwait
das
jbe
and
lock
(bad)
aad
retf
sbb
mov
dec
mov
xchg
adc
mov
dec
jb
pop
sub
fcomp
outs
mov
arpl
lock
and
cmc
jae
ja
fcomp
clc
aad
sti
jg
pop
ds
inc
retf
or
dec
stos
loope
data16
add
jg
xor
add
call
outs
add
out
imul
push
imul
mov
movs
jecxz
ret
fcomi
cmp
addr16
lea
sub
sub
aad
ins
mov
sbb
sub
jnp
(bad)
je
pop
xchg
and
fdivr
fimul
cmc
add
leave
or
sub
jns
retf
test
(bad)
cmc
popa
fs
cmps
pushf
retf
xor
test
pop
sub
(bad)
push
hlt
and
out
(bad)
adc
jne
jg
loope
test
inc
(bad)
add
mov
and
es
inc
cdq
and
ret
sahf
xor
mov
adc
mov
xchg
inc
jl
enter
out
cld
(bad)
mov
inc
sbb
lds
es
enter
add
cld
out
inc
inc
(bad)
daa
pop
add
shl
inc
enter
and
cs
cmp
(bad)
das
push
adc
mov
jno
(bad)
mov
adc
sar
jge
retf
je
xor
xchg
cmp
ds
jne
mov
add
xlat
clc
outs
nop
enter
sahf
xor
push
outs
aad
jb
pop
stos
lds
enter
or
push
xchg
xchg
test
es
mov
ins
popf
call
call
adc
push
xchg
fsub
dec
imul
rcr
adc
push
add
sar
mov
(bad)
in
daa
movs
and
retf
aad
push
push
icebp
or
mov
adc
enter
cmps
push
mov
add
push
push
mov
popa
mov
mov
push
js
jg
cmp
mov
movs
test
push
sub
aad
xor
jl
mov
xchg
mov
ror
jmp
retf
push
aaa
lock
lods
(bad)
shl
inc
pop
test
sub
fxch
pop
inc
sbb
cmp
push
into
mov
pop
inc
cmps
pop
push
push
jns
out
sbb
mov
ficom
pop
xor
sbb
ss
inc
add
push
sub
inc
adc
out
pop
cmc
fistp
push
call
out
xor
and
jno
xchg
in
xor
out
push
(bad)
sbb
je
inc
and
fmul
int
repnz
push
call
test
enter
fidiv
iret
ins
stos
fidiv
mov
nop
push
jl
arpl
neg
dec
cmps
inc
ss
xor
bound
xor
test
inc
cmps
xchg
inc
test
test
enter
ret
imul
pop
out
push
jge
int
or
adc
push
add
out
outs
cld
aaa
or
sbb
and
retf
push
inc
out
push
nop
fild
ja
enter
int
repnz
jge
push
adc
gs
popa
hlt
or
sub
add
data16
(bad)
mov
clc
aaa
ins
scas
(bad)
jno
or
in
push
(bad)
mov
mov
push
test
xor
stc
out
cmc
hlt
stos
mov
mov
std
add
jmp
pop
mov
retf
push
(bad)
cmp
(bad)
push
imul
ja
sub
cmovle
sti
pop
xor
push
sahf
jle
mov
pushf
sahf
addr16
jmp
jg
fmulp
pop
rcr
inc
int3
cmp
cmps
fnstcw
(bad)
cmc
mov
scas
xor
xlat
inc
stos
mov
push
bound
dec
cmp
sub
jb
popa
fwait
test
js
iret
(bad)
dec
ficom
cmps
mov
mov
pop
adc
jo
inc
ss
push
cs
in
sbb
iret
stos
dec
push
(bad)
shl
dec
fwait
icebp
xadd
stos
fdivr
xor
shl
adc
paddd
fsub
daa
call
(bad)
aaa
cmc
ja
cld
inc
fmul
jle
inc
mov
and
sub
xchg
mov
lods
sub
jae
cmp
xor
outs
dec
out
inc
sbb
or
dec
pop
jp
test
int
loop
mov
(bad)
mov
cmp
rol
mov
loope
mov
jae
ins
mov
ja
stos
test
inc
xchg
push
pop
xchg
cdq
and
daa
sahf
cdq
pop
inc
sub
mov
jge
lahf
push
sbb
or
cmp
movs
jp
pop
sub
aad
xchg
push
sub
jbe
js
adc
cmp
adc
jb
imul
pushf
sbb
scas
push
push
pop
pop
mov
pop
pop
cmps
xor
pushf
in
jmp
inc
mov
pop
push
in
aad
popa
hlt
aam
imul
cmp
jns
out
clc
outs
or
sub
cmp
js
jnp
test
jns
xor
push
push
mov
retf
push
(bad)
push
pop
mov
jne
cmp
xchg
inc
and
fcom
xchg
cs
neg
retf
scas
sbb
pop
jmp
(bad)
mov
sbb
ins
mov
int3
or
jbe
fist
pop
invd
sar
or
mov
adc
enter
push
enter
rcr
mov
and
sahf
push
repz
ds
hlt
lahf
test
leave
jge
and
jbe
hlt
sub
push
test
dec
pop
and
loope
push
or
test
mov
jp
loop
cs
pop
and
mov
out
and
idiv
dec
add
or
xlat
push
inc
and
cmps
push
xchg
dec
cmp
test
or
sbb
inc
pop
je
nop
jecxz
pop
(bad)
mov
xor
cli
adc
stos
add
stc
clc
ja
mov
mov
mul
in
std
iret
mov
or
adc
out
pop
fldpi
arpl
loope
or
pop
add
inc
or
(bad)
fcmovu
loop
hlt
ret
sub
inc
aad
add
pop
push
cmp
ror
xor
ret
retf
push
push
lock
pop
mov
scas
sbb
jb
in
add
movs
jl
cmp
std
sar
mov
pop
pop
jne
out
repz
shl
in
pop
js
(bad)
sbb
inc
retf
pop
jmp
mov
dec
loope
mov
mov
inc
jecxz
dec
push
ret
in
or
mov
inc
dec
pop
cdq
mov
mov
mov
xchg
popf
aad
int
sbb
dec
mov
imul
inc
imul
aam
sbb
ret
mov
retf
xor
mov
int3
retf
ret
or
inc
mov
dec
test
scas
xor
js
or
jecxz
jns
sbb
stos
and
inc
into
js
mov
sysenter
add
loop
sub
pop
and
fmulp
push
adc
cmc
outs
movs
dec
test
addr16
test
jbe
imul
jge
or
retf
xchg
cmps
or
loopne
push
pop
sahf
and
je
in
xor
sub
dec
cmp
ds
xor
adc
mov
push
pop
cmc
push
fnstcw
sar
dec
sub
push
jb
xchg
mov
mov
inc
jg
pop
lock
(bad)
ins
jns
or
loop
sub
inc
sbb
pop
push
push
push
mov
test
pop
mov
push
cmp
xor
jo
lock
push
cld
xor
xchg
or
mov
jmp
pop
addr16
cmc
adc
ins
stc
jne
loopne
pop
inc
inc
jmp
mov
and
add
push
jg
(bad)
or
jne
inc
jnp
fnsave
mov
mov
push
repnz
mov
mov
xchg
mov
cmp
jno
push
dec
retf
psubd
imul
mov
mov
in
add
loop
mov
sub
cmp
dec
cmp
xchg
xchg
and
fs
xchg
in
jo
mov
push
dec
xor
sbb
repnz
mov
push
cli
inc
jp
lea
add
(bad)
into
repnz
fld
shl
jns
jno
mov
push
and
or
cld
add
add
mov
loop
imul
loope
adc
inc
pop
pushf
fneni(8087
pusha
aas
cmp
test
ins
xchg
adc
aas
in
xchg
mov
lea
mov
xlat
xlat
js
iret
popa
dec
ds
cld
retf
xchg
xor
out
in
xchg
std
sbb
xchg
and
sub
lea
dec
xor
xchg
push
outs
inc
or
stos
int
pusha
sub
pop
add
dec
ret
cmps
sub
in
jmp
movs
xchg
pop
ret
pushf
and
cmps
pop
jmp
pop
test
iret
sbb
jmp
popf
jmp
or
mov
dec
pushf
or
and
jecxz
sbb
or
add
and
dec
or
test
call
movs
daa
adc
loopne
out
ja
and
xchg
fs
dec
cmp
inc
imul
mov
scas
cmc
mov
mov
sbb
and
sub
imul
adc
out
popa
mov
gs
(bad)
push
xchg
sti
inc
jno
popf
cmps
fwait
cmc
mov
call
pop
push
ror
in
mov
call
xor
cs
push
add
sub
mov
scas
hlt
inc
jb
sub
dec
push
(bad)
cmps
add
xchg
sbb
pop
pop
adc
ror
jecxz
or
shl
(bad)
leave
mov
dec
push
sub
mov
xchg
outs
(bad)
jo
mov
pop
add
int
and
push
popf
scas
jb
add
push
inc
xchg
(bad)
and
mov
xor
sbb
pop
adc
push
out
cs
or
das
mov
scas
mov
cwde
and
call
imul
jg
or
jecxz
or
daa
jbe
xchg
and
xchg
fcom
dec
mov
sar
xor
sbb
in
fwait
iret
pop
out
test
les
push
ror
mov
das
movs
daa
xor
aaa
stc
pushf
retf
inc
ins
popf
push
sbb
jecxz
pop
sub
ror
(bad)
mov
sar
and
outs
sub
int
lock
(bad)
push
js
shl
mov
enter
in
or
pusha
neg
clc
ja
jecxz
mov
adc
xor
add
scas
jo
push
pop
xor
cmc
popa
sti
repz
mov
cs
dec
mov
retf
dec
push
mov
xchg
jne
in
pop
lea
fs
jge
mov
loop
mov
into
xlat
push
ja
jbe
popa
jl
push
or
sub
inc
je
shl
and
dec
call
add
pop
xchg
sub
xor
inc
sbb
xchg
dec
es
in
loop
adc
push
lods
(bad)
loop
test
lods
adc
mov
push
rep
out
out
push
xchg
dec
dec
fsubr
dec
ins
mov
lds
mov
xchg
or
xchg
hlt
push
xchg
jae
out
cld
cmps
mov
cld
leave
fisub
push
cli
mov
sbb
xchg
xlat
xor
cwde
ficomp
push
stc
sbb
inc
add
or
mov
inc
add
popa
ret
jno
mov
jle
aaa
sub
dec
mov
jb
push
sub
mov
ins
inc
jno
popf
fld
xchg
ss
pusha
fs
cmp
test
je
ret
sbb
mov
ret
daa
or
(bad)
mov
ins
dec
push
int3
shl
push
pop
inc
js
aas
adc
ror
add
mov
fs
pushf
mov
iret
and
fiadd
inc
data16
cmpps
or
ss
sbb
mov
in
sbb
or
or
lds
dec
bound
mov
add
sbb
imul
mov
fld
jbe
pop
xor
out
test
xchg
pop
dec
repz
mov
cmp
fadd
xlat
hlt
and
pushf
pop
mov
add
aad
aad
jle
and
fadd
sub
pop
xchg
mov
out
pusha
inc
repz
add
imul
jno
ficom
jmp
in
loop
das
aam
stos
xchg
inc
add
mov
lea
xor
int
cld
pop
mov
adc
mov
cmps
jno
fistp
std
fnsave
inc
jae
das
fsubr
push
dec
mov
push
ror
mov
test
jmp
adc
cld
inc
add
push
mov
add
push
pop
mov
sbb
sar
sbb
adc
mov
push
or
comiss
jno
mov
stos
dec
movd
hlt
das
cmp
das
ret
repnz
adc
js
cmp
pop
pop
bound
ret
or
mov
jecxz
jg
cmc
or
pusha
gs
jle
pop
mov
adc
(bad)
cmp
aas
and
xor
add
daa
dec
dec
aas
mov
outs
dec
mov
bound
cdq
ss
iret
xor
sbb
aad
jmp
sbb
pop
mov
push
retf
adc
xor
or
jns
ins
inc
setns
dec
test
leave
mov
popw
or
mov
(bad)
outs
pop
sbb
daa
cmp
push
(bad)
xchg
push
push
dec
shr
jmp
sbb
and
cmp
mov
inc
out
mov
sbb
pusha
lock
(bad)
iret
je
xchg
mov
mov
xor
mov
mov
xor
imul
adc
mov
call
adc
es
stos
rol
imul
popa
(bad)
js
push
or
dec
lods
shl
out
js
scas
enter
mov
sbb
lock
add
or
ins
(bad)
mov
out
popf
lds
mov
out
cmp
push
test
or
and
es
mov
clc
push
xor
sub
stos
pop
dec
mov
call
rcl
adc
popf
aas
sbb
adc
inc
mov
test
or
(bad)
sbb
add
jmp
sbb
jg
fcos
and
xchg
and
add
dec
and
in
pusha
mov
out
jp
pop
jne
lods
repz
xor
adc
div
mov
xchg
aam
popf
mov
lock
dec
or
call
jmp
xlat
or
push
aaa
adc
or
mov
call
pop
cmp
dec
mov
hlt
cdq
dec
adc
sub
adc
push
jl
add
int
mov
and
es
out
push
xor
push
loop
jns
ret
mov
stos
aaa
cmp
mov
jbe
or
sar
or
fbstp
mov
arpl
fsubr
arpl
repnz
imul
rep
cld
cdq
or
(bad)
(bad)
adc
xchg
mov
jb
dec
inc
mov
xor
cmps
push
or
imul
mov
dec
sub
and
dec
fist
ret
dec
out
fld
or
push
cdq
jmp
sbb
scas
hlt
inc
sub
sar
jb
push
add
mov
inc
mov
push
repz
xchg
rcr
jnp
xchg
ret
push
mov
mov
movs
enter
imul
or
test
jbe
add
push
ficom
xchg
ds
fs
dec
mov
or
addr16
mov
dec
pusha
imul
fmul
adc
lock
retf
pop
ja
xor
clc
mov
sahf
imul
jo
mov
or
call
lods
and
ret
lea
jbe
mov
out
fsub
scas
xor
je
test
loop
or
popa
xchg
push
nop
add
gs
leave
call
xor
mov
xor
fist
outs
fcomi
lahf
test
push
mov
push
in
popf
gs
inc
leave
out
not
xchg
ror
int
ins
jne
sar
rcl
xor
or
xchg
jmp
mov
push
iret
jnp
adc
cwde
or
or
dec
ins
gs
enter
or
pop
and
cmp
xor
fsubr
ds
mov
stc
and
addr16
jg
push
push
mov
sbb
stos
pop
es
and
push
jecxz
cmp
cmp
sbb
test
cmp
sbb
mov
xchg
sar
mov
and
mov
clc
mov
(bad)
int3
addr16
cwde
call
jbe
cdq
pop
out
popa
cmp
xor
xchg
movs
push
into
xchg
dec
jge
bound
push
pop
push
sbb
les
adc
pop
aas
jle
sti
test
xlat
inc
scas
(bad)
sbb
mov
xor
dec
test
pop
push
arpl
bound
dec
mov
inc
test
and
push
ficomp
es
addr16
cs
pop
pop
mov
mov
cs
mov
mov
sahf
imul
in
xlat
(bad)
test
loope
push
cmp
push
movs
popf
(bad)
in
inc
test
pop
mov
outs
dec
add
outs
das
dec
dec
adc
jo
(bad)
xchg
loopne
mov
xor
cwde
pop
ins
jne
pusha
scas
sbb
cmp
and
push
pushf
sub
mov
push
std
out
adc
and
mov
mov
xchg
add
xchg
data16
add
or
inc
and
push
sub
push
retf
into
sahf
test
inc
cmp
push
aam
mov
mov
int3
and
xor
ds
xor
out
push
scas
in
mov
out
les
out
add
mov
mov
mov
add
cs
loopne
leave
div
retf
repnz
sbb
add
or
mov
adc
jp
enter
xor
and
jmp
mov
std
inc
nop
sub
outs
(bad)
lods
cwde
sbb
popa
leave
ins
mov
(bad)
stos
adc
push
movs
in
fyl2xp1
rcl
or
xor
mov
mov
mov
jmp
mov
push
add
sbb
push
mov
sbb
or
fs
push
je
mov
loope
and
pop
lds
mov
mov
cs
and
mov
rcl
inc
sub
daa
(bad)
inc
add
xor
mov
outs
jmp
aad
ins
sbb
add
shr
xchg
cmps
inc
out
das
in
lahf
pop
sbb
call
pushf
mov
scas
jb
cmp
fisub
adc
repnz
xchg
ds
and
loopne
add
popa
icebp
das
xchg
xor
dec
out
dec
and
push
jo
xchg
cmp
xchg
and
cdq
lock
test
pop
add
rol
push
mov
pop
dec
xor
jle
pop
outs
adc
test
jge
rsm
xchg
cmp
sahf
inc
xor
(bad)
fwait
jo
out
(bad)
pop
mov
outs
ret
xchg
jge
lock
lods
(bad)
mov
adc
jb
mov
dec
jne
les
pop
push
xor
ss
sub
std
and
clc
in
test
mov
dec
xchg
lds
sub
cdq
sti
jmp
cld
mov
sbb
gs
lock
(bad)
loope
lahf
fwait
inc
imul
arpl
inc
mov
test
je
mov
or
adc
xor
dec
jg
cmp
cld
jo
ficom
hlt
aam
mov
ins
fstp
or
dec
cmp
out
xor
cmp
movs
pop
mul
sub
jmp
mov
push
test
jne
es
hlt
jb
adc
bound
xor
xor
jp
mov
sub
mov
sti
mov
inc
jne
arpl
add
outs
fst
xlat
adc
sahf
push
xor
sbb
int
pop
out
mov
adc
jnp
or
aam
popa
in
icebp
xor
mov
jg
js
and
fldenv
repnz
mov
sbb
mov
mov
xor
sar
xor
sbb
dec
aam
pop
lock
push
imul
stos
mov
mov
test
xchg
sbb
push
pop
jo
retf
inc
xor
dec
in
cwde
inc
pop
sbb
js
(bad)
xor
push
adc
inc
ds
dec
xlat
sub
ss
retf
test
loopne
sbb
idiv
push
es
scas
loopne
outs
mov
sub
sbb
mov
mov
inc
sbb
add
xor
pop
sbb
sbb
rcl
mov
retf
xchg
xchg
push
push
popa
fmul
dec
(bad)
sar
or
jns
sub
sti
aas
push
mov
(bad)
ds
scas
mov
mov
int3
dec
scas
or
push
pop
sbb
cwde
data16
mov
jge
test
add
fsubrp
jecxz
ja
and
(bad)
icebp
stc
and
ret
push
in
mov
fwait
and
jecxz
cmp
arpl
mov
shr
sbb
jecxz
cmp
outs
adc
cmp
inc
mov
loopne
retf
mov
or
mov
jmp
fcomp
mov
and
movs
pop
add
aad
leave
mov
dec
jbe
jmp
dec
adc
mov
in
mov
mov
or
call
imul
aad
test
xor
jne
dec
cli
adc
jo
cmp
les
iret
jno
mov
cli
sahf
iret
sub
rcl
jb
mov
pop
or
shl
inc
xor
and
aad
aaa
and
shl
add
rep
inc
pop
cmp
xchg
jno
movs
mov
sub
sub
ja
imul
add
jmp
fisttp
fistp
mov
pop
mov
cld
(bad)
(bad)
jmp
jl
ret
xchg
in
adc
ret
and
xchg
cld
mov
int3
mov
loop
leave
loope
add
aaa
jg
enter
push
call
push
pop
loope
push
call
hlt
stc
inc
pop
sti
and
dec
retf
push
ror
cmp
sbb
add
or
and
push
jecxz
dec
sub
aaa
sbb
lock
(bad)
mov
and
cmp
xor
js
loop
pop
dec
rcl
aaa
fcomp
and
or
ret
inc
pop
test
stos
sbb
xor
sub
xchg
adc
nop
loope
xchg
and
(bad)
dec
hlt
fs
jnp
addr16
cwde
aad
loopne
not
mov
add
adc
hlt
lods
shl
in
xchg
xchg
int
fimul
or
in
sub
call
clc
mov
pop
jle
ror
test
mov
cmc
int3
mov
stc
cmp
mov
lds
sti
sbb
stos
push
mov
pusha
rcl
mov
ins
mov
adc
repz
sbb
jp
scas
mov
inc
push
sbb
add
dec
add
mov
push
les
in
sbb
cmps
je
pop
dec
out
sub
fimul
mov
lahf
mov
xor
dec
xlat
cmp
std
sbb
xor
mov
shr
clc
js
cmps
inc
popf
mov
call
mov
data16
mov
mov
fmul
sub
cmp
repz
loopne
clc
add
dec
das
loop
or
xlat
outs
fs
ja
pusha
cmp
xor
cld
test
push
in
mov
fnstsw
fisubr
jmp
imul
cs
jle
stc
ret
jns
stos
dec
repz
fwait
mov
jp
mov
ret
cdq
sub
es
xchg
push
or
sub
push
dec
repnz
xor
call
retf
ds
and
or
adc
xchg
nop
sbb
mov
cmp
iret
jb
test
cld
bnd
sub
test
mov
fdiv
dec
jge
jbe
pusha
cmp
fnsave
out
xor
sbb
(bad)
pop
jmp
pop
xchg
add
dec
dec
fs
mov
xchg
xchg
mov
inc
js
mov
js
cmc
das
movs
xchg
or
aam
mov
dec
(bad)
pop
idiv
cmp
xchg
mov
ret
outs
push
xor
mov
adc
mov
sti
mov
es
mov
mov
xor
mov
mov
pop
pop
je
adc
mov
pushf
jmp
adc
cwde
lods
fstp
push
js
mov
sub
lods
aaa
and
in
out
mov
adc
lods
pop
add
mov
mov
sbb
cmp
stc
xchg
in
mov
mov
jns
pop
cmp
ror
shr
pop
scas
pop
ror
jo
sub
ja
ret
push
sub
adc
xor
and
adc
lds
xlat
rcr
gs
dec
(bad)
mov
jnp
mov
outs
ror
test
loop
xor
dec
loop
retf
sbb
pop
mov
sahf
jge
outs
jecxz
shl
xor
mov
ins
enter
and
inc
pop
stos
or
sbb
adc
aas
movs
iret
aas
fsubr
clc
jns
jno
popa
sub
cwde
adc
mov
retf
adc
dec
retf
mov
pop
(bad)
into
cs
icebp
and
ror
and
xchg
xor
inc
adc
add
mov
bound
add
dec
jp
daa
mov
mov
jae
mov
mov
xor
mov
shl
inc
pop
mov
je
call
cdq
pusha
jp
xor
lock
lods
arpl
jno
(bad)
jmp
jno
pop
pop
mov
push
addr16
stc
dec
pop
xchg
hlt
adc
inc
dec
push
or
xchg
jns
rol
push
int3
pop
add
inc
push
add
adc
adc
push
inc
mov
test
ficomp
popf
pop
dec
bnd
ret
ret
pop
inc
arpl
jecxz
popa
push
or
inc
(bad)
cmp
cs
jnp
mov
xchg
xchg
jmp
ins
xchg
repz
scas
popf
inc
cmp
dec
neg
or
pop
cmps
mov
inc
prefetch
mov
fld
mov
std
push
push
jno
(bad)
ins
sahf
mov
lahf
aam
loopne
sub
rcl
dec
rcr
imul
repnz
movs
xchg
sar
push
shl
cmp
(bad)
gs
and
je
mov
adc
cmps
ret
xchg
enter
add
ja
jge
add
es
cmp
mov
stos
push
rcl
out
repnz
pushf
xlat
not
jle
js
dec
jle
mov
dec
neg
inc
fstp
dec
mov
and
rcl
stos
les
add
cmc
fdiv
or
aad
clc
jae
mov
xchg
jp
mov
fild
xor
bound
sub
call
fwait
iret
sub
not
add
outs
or
loopne
idiv
stc
fbld
hlt
sbb
sti
dec
gs
push
and
dec
jmp
cwde
imul
add
push
pop
out
xor
out
test
xchg
sbb
inc
dec
addr16
cmp
aas
fs
in
outs
xchg
daa
test
jo
dec
int
(bad)
test
sbb
loope
jmp
dec
mov
stos
push
pop
fldenv
enter
jmp
out
mov
test
popf
dec
out
jmp
adc
xor
mov
data16
repz
lods
pushf
jbe
xor
jmp
adc
inc
repz
jl
adc
daa
adc
xchg
jg
jl
adc
or
popf
mov
xchg
in
adc
neg
lods
aad
cli
jecxz
mov
push
adc
mov
outs
mov
push
xor
shl
pop
cmp
scas
cmps
mov
movs
div
jge
mov
and
test
inc
(bad)
mov
lea
jge
mov
jo
les
jae
mov
std
xchg
inc
jl
add
int3
adc
mov
jmp
xchg
add
dec
pop
adc
push
mov
(bad)
out
or
aad
ficom
out
mov
daa
pop
movs
je
lods
pop
data16
sub
sbb
or
sbb
inc
fidivr
movs
rcr
stos
adc
mov
push
mov
push
xor
lods
adc
pop
imul
push
xchg
xchg
jb
(bad)
dec
xor
mov
into
ss
mov
lods
lea
dec
mov
hlt
leave
ins
or
pushw
and
loopne
cdq
outs
cwde
aad
adc
dec
cmp
mov
push
lea
cdq
fwait
mov
mov
sbb
mov
sub
fs
xchg
cmp
xchg
mov
imul
cs
(bad)
sti
inc
les
jbe
mov
mov
push
inc
mov
fld
cld
sub
add
xor
stc
adc
mov
xor
xor
pop
dec
mov
js
(bad)
icebp
pop
cmp
leave
das
cmp
jnp
out
add
sbb
xor
mov
mov
enter
cld
pop
or
jecxz
pop
pop
lahf
xor
adc
push
scas
mov
sbb
adc
xlat
adc
call
jle
and
cwde
test
mov
das
xlat
std
mov
mov
dec
out
rcr
js
cmp
xor
jmp
or
jnp
cmp
ja
inc
pusha
call
push
out
sti
push
popa
movs
cdq
push
scas
push
aad
(bad)
fild
lods
xchg
pop
loop
cmp
mov
(bad)
loop
xchg
into
sahf
xlat
push
fwait
xchg
(bad)
fsub
adc
sbb
xchg
and
daa
mov
in
repnz
nop
push
and
add
xor
fild
mov
into
inc
(bad)
(bad)
mov
push
pop
std
xchg
call
ret
push
in
sbb
xchg
fcomp
sbb
cmp
std
je
in
push
lds
movs
jmp
xchg
cwde
fistp
leave
in
add
ins
mov
mov
mov
mov
xor
movs
sahf
lock
add
add
sahf
cli
outs
and
mov
neg
icebp
iret
sub
xchg
inc
or
(bad)
nop
lock
sbb
xchg
scas
adc
cs
in
mov
outs
pop
xor
mov
cld
imul
sub
lods
mov
icebp
(bad)
cmc
rcr
nop
in
mov
in
dec
adc
xor
leave
ret
(bad)
sbb
or
popa
xchg
clts
fdivr
push
adc
(bad)
aam
or
push
mov
je
mov
aam
out
out
icebp
pop
bound
(bad)
sbb
inc
fcomip
jbe
jns
lds
xchg
repz
in
mov
mov
pop
adc
repz
inc
and
test
data16
int
mov
in
jecxz
pop
pop
arpl
fld
fwait
adc
sbb
and
cmp
cmp
inc
xchg
test
imul
mov
(bad)
jg
cwde
outs
fldcw
cdq
popf
popa
cli
test
popf
cs
in
jns
cmp
out
das
xchg
and
stos
mov
ds
test
bound
(bad)
xchg
cmp
dec
xchg
inc
leave
test
sbb
adc
push
cwde
add
mov
xor
or
jp
jo
xchg
arpl
lock
je
or
add
scas
jecxz
sti
(bad)
fadd
jnp
push
push
adc
fmul
daa
cmp
pop
xlat
arpl
xor
push
mov
aam
adc
call
scas
cmp
(bad)
sub
xlat
xchg
cmp
jno
pop
cdq
sbb
stos
stos
inc
push
mov
mov
shl
dec
or
push
int3
and
icebp
fisub
ss
pushf
retf
dec
pop
adc
lea
push
stc
out
mov
imul
dec
ror
(bad)
les
xlat
push
test
scas
and
jle
jp
and
cmp
adc
jnp
icebp
(bad)
fimul
sbb
les
pcmpgtb
cmps
jmp
icebp
and
mov
dec
pop
(bad)
push
fdivr
mov
ret
fadd
fdivr
out
mov
fs
dec
hlt
mov
sub
push
adc
ficom
jmp
pop
inc
sti
mov
add
fimul
in
lods
pop
fwait
sub
pop
add
sbb
scas
movs
fstp
retf
push
sbb
stos
pushf
mov
fild
cmp
xchg
xor
fxch
neg
nop
fdiv
arpl
inc
mov
dec
add
jo
aaa
das
gs
out
and
sbb
imul
ret
jns
push
xor
inc
jl
push
add
xchg
cmp
xor
xor
inc
cmp
pop
pop
cmp
popa
mov
dec
(bad)
aam
hlt
mov
mov
(bad)
pop
popf
shl
call
xchg
push
xor
gs
mov
dec
and
mov
or
test
dec
and
(bad)
iret
inc
popa
inc
test
retf
mov
lahf
shl
add
or
push
pop
ds
out
imul
push
test
aas
hlt
adc
loope
iret
sar
inc
add
cwde
jge
pop
sbb
dec
fidiv
clc
dec
pop
ins
pop
jmp
mov
in
cmp
inc
pop
xor
clc
pop
shufps
repz
xchg
sti
push
es
sbb
push
imul
mov
adc
in
pop
push
bt
push
out
sti
inc
xor
or
idiv
add
cmp
inc
repz
aad
jmp
scas
mov
push
dec
scas
rcr
pop
jo
aad
add
loop
mov
imul
mov
jnp
dec
stc
cmps
repz
or
cmc
jns
jg
loopne
inc
retf
bound
cmp
jle
mov
scas
jae
sar
inc
ins
int
add
(bad)
push
dec
stos
stc
rol
retf
adc
(bad)
mov
pop
mov
fnstcw
je
call
mov
stos
xor
lahf
xchg
outs
mov
cmps
std
(bad)
lods
dec
arpl
xor
push
push
sub
std
cmp
rcl
dec
or
mov
and
mov
mov
or
xor
mov
mov
out
and
push
rep
es
inc
data16
pop
cmp
sub
leave
pusha
sbb
add
icebp
ss
push
hlt
xchg
xor
push
or
imul
aas
mov
adc
js
sar
or
sub
sub
sub
pop
popf
mov
mov
cmp
xchg
into
imul
xor
dec
popa
jb
shr
mul
mov
sub
inc
les
xchg
jae
scas
jecxz
or
(bad)
cwde
das
mov
scas
addr16
ds
and
cmc
mov
mov
pop
inc
xchg
xor
mov
les
cmp
into
daa
lds
movs
xchg
pusha
mov
and
mov
pushw
test
inc
pushw
jge
ja
inc
push
lds
mov
stos
lahf
nop
pop
es
push
test
jne
jp
or
add
fstp
nop
out
xor
mov
sub
mov
out
and
aad
mov
pop
pushf
fild
sub
fxch
mov
jmp
(bad)
sub
out
leave
mov
pop
push
and
adc
movs
or
or
in
dec
dec
repz
outs
sub
or
(bad)
aam
push
xor
push
fist
xor
xor
out
sub
pusha
cli
adc
sub
mov
mov
nop
imul
jmp
rol
dec
rol
cmps
add
dec
mov
jl
(bad)
cdq
dec
jno
xchg
inc
pop
imul
and
scas
sbb
daa
push
cmp
inc
ss
sahf
and
and
mov
scas
stc
add
stc
dec
mov
movs
call
mov
ss
(bad)
je
cld
test
xor
test
(bad)
(bad)
jae
xor
and
cli
icebp
or
adc
in
inc
jle
xchg
xor
dec
adc
clc
inc
cld
aam
xchg
dec
hlt
pushf
jp
xor
dec
jo
ds
push
mov
lods
dec
sub
int
out
pop
adc
sub
je
or
cmps
mov
cdq
aas
jmp
mov
call
test
add
xchg
lea
adc
mov
adc
add
or
shl
fadd
xchg
sub
stos
fild
int3
ds
sub
test
(bad)
es
mov
ret
in
jge
dec
jg
sbb
mov
leave
pop
xor
les
jbe
jnp
aas
pop
call
fidiv
movs
and
scas
push
xor
mov
stos
aas
inc
jmp
and
int3
add
xchg
cwde
dec
fstp
cmp
dec
nop
dec
push
mov
pop
jp
mov
jl
enter
mov
jl
shr
retf
inc
sbb
xchg
jmp
push
mov
clc
adc
movs
jge
pop
sbb
fadd
jb
xchg
test
add
ror
ins
enter
rcl
ja
pop
retf
mov
jmp
pop
mov
jg
adc
leave
enter
adc
out
xor
sub
jae
pop
pop
ret
int3
and
hlt
data16
cmps
retf
pop
stc
or
addr16
jno
and
mov
ins
fisttp
mov
mov
loop
(bad)
xlat
mov
pop
pop
add
outs
ins
lahf
jae
test
jmp
(bad)
add
mov
aaa
push
xor
pop
adc
pop
ins
pop
pop
fadd
mov
and
test
or
fdivrp
xor
shl
fmul
clc
ja
dec
jne
iret
or
xchg
call
adc
fwait
and
xchg
xor
xchg
stc
jmp
(bad)
push
call
xchg
cmp
xor
faddp
add
jge
adc
(bad)
int
adc
jne
out
mov
in
xchg
add
retf
cmp
iret
sub
xor
inc
xchg
cmps
and
pop
arpl
mov
cs
imul
push
es
push
inc
sbb
adc
push
mov
movs
scas
ins
mov
sti
cmp
test
sahf
hlt
into
push
dec
es
push
mov
mov
sbb
jae
mov
je
stos
inc
cs
push
adc
and
cmps
sub
jle
std
std
out
mov
xor
mov
jl
jno
dec
icebp
mov
test
or
retf
and
jmp
jae
cmps
xlat
shr
pusha
jb
xchg
mov
sub
dec
(bad)
in
mov
sbb
xlat
stc
inc
cmp
xchg
mov
out
add
nop
xchg
cdq
int
and
scas
les
dec
(bad)
mov
jle
fisttp
(bad)
in
jmp
jae
test
cs
sbb
std
outs
xchg
aam
xor
sbb
mov
cmp
sbb
mov
retf
mov
xchg
push
fdivr
aas
jmp
mov
pop
dec
and
xlat
ds
loopne
adc
mov
and
loop
cwde
idiv
or
mov
push
pop
js
xchg
inc
shl
inc
or
icebp
js
loope
adc
ds
cwde
push
add
aam
inc
out
pop
(bad)
adc
adc
and
add
sbb
mov
mov
cmc
push
or
sub
mov
push
loopne
mov
test
sub
pop
scas
inc
pop
sub
cs
inc
mov
scas
repnz
into
mov
(bad)
push
or
loope
into
test
imul
mov
push
mov
sti
retf
js
pushf
add
push
jecxz
jp
xor
test
shl
mov
mov
(bad)
fdiv
aam
rcr
pop
loop
cli
mov
es
sub
movs
push
adc
mov
pop
jl
aam
fdivr
xlat
pop
nop
rcl
xchg
aaa
movs
sbb
pop
sub
mov
rcl
mov
add
jge
mov
cmp
retf
cmp
dec
mov
jl
jmp
cmps
jo
jmp
add
cmp
inc
mov
int
push
push
cmc
inc
jne
xlat
inc
and
xor
pop
popa
loope
add
adc
adc
movs
inc
mov
sahf
inc
push
in
cmp
push
push
adc
mov
mov
or
and
pop
push
inc
repz
mov
jae
pop
cwde
or
scas
jae
movs
arpl
test
mov
mov
jmp
xor
and
push
jp
loop
cmovge
pop
lahf
adc
xchg
loop
sbb
push
sbb
push
xchg
outs
inc
pop
sub
addr16
into
xchg
jge
ror
cli
adc
arpl
jle
push
push
ds
cld
je
neg
pusha
ins
out
push
dec
and
lock
scas
inc
test
jnp
jbe
add
adc
add
ins
ds
icebp
or
jmp
ss
add
xchg
push
jb
jnp
cwde
mov
in
mov
loopne
pop
mov
adc
scas
jne
(bad)
xor
int3
adc
adc
scas
outs
mov
loop
mov
mov
outs
jmp
jne
dec
jae
mov
in
mov
idiv
ja
push
pop
es
movs
sahf
push
and
jmp
std
xchg
movs
cmc
push
push
xor
push
addr16
pop
fisttp
sbb
pop
jle
inc
jbe
out
in
pop
xchg
mov
sub
adc
add
pop
fwait
repz
cmp
out
sbb
add
jns
xchg
fiadd
sub
ficomp
dec
rol
inc
add
mov
add
test
ins
jl
imul
lods
mov
push
retf
adc
cmp
icebp
inc
xchg
sbb
lods
inc
addr16
imul
gs
inc
pushf
stos
jmp
fwait
into
ins
inc
mov
in
mov
sbb
dec
sub
jecxz
add
inc
repz
sbb
xor
adc
mov
rol
mov
and
mov
sub
rol
inc
cmp
mov
rcr
jb
adc
ret
pop
stos
test
and
sub
or
pop
dec
inc
ja
int3
enter
enter
leave
dec
(bad)
in
shl
(bad)
icebp
jge
push
cmp
xor
push
xlat
arpl
xchg
outs
ja
shr
jle
add
pop
dec
out
mov
push
out
mov
retf
outs
stos
xor
retf
loope
jg
daa
fnstcw
push
clc
jnp
sub
and
ins
hlt
lock
cmp
inc
mov
out
cmps
nop
jno
js
and
inc
test
or
stos
push
jo
add
and
loope
cmp
scas
fwait
push
adc
adc
mov
lea
pop
int3
aam
ss
mov
fmul
sbb
pop
data16
je
or
pop
push
mov
imul
mov
lea
and
xchg
jecxz
cmps
mov
pop
lds
std
imul
aam
pop
mov
pop
fs
sbb
mov
jbe
mov
jle
or
test
cmp
stos
push
add
inc
imul
mov
nop
jbe
daa
loope
jae
scas
lods
add
int
cmps
push
pop
and
mov
lods
sbb
mov
imul
stos
fsqrt
fisub
mov
lea
sahf
cmp
mov
sti
cmp
pop
scas
pop
ds
adc
mov
pop
call
movs
jno
mov
popf
(bad)
push
gs
xchg
mov
into
jae
(bad)
call
mov
add
jne
ins
(bad)
and
in
sahf
push
scas
add
and
fs
mov
inc
shl
aam
xchg
pop
dec
dec
aam
mov
sub
inc
bound
cmp
test
arpl
add
mov
adc
aad
je
test
sbb
add
cmp
pusha
retf
mov
or
retf
ja
lods
cmp
(bad)
sti
mov
(bad)
push
inc
sbb
int3
inc
cmp
popf
sub
pop
int3
and
push
xchg
aaa
sbb
retf
push
inc
scas
scas
jmp
pop
daa
fisttp
cmp
jmp
push
fild
xchg
mov
rcl
and
xchg
xchg
cwde
cli
(bad)
jb
jle
fs
in
jl
fcomp
bound
xchg
jae
mov
lea
pop
pop
mov
je
call
adc
fcomp
sbb
aam
lock
fiadd
js
jb
push
popf
push
and
or
cld
cmp
outs
popf
scas
adc
and
sar
cld
push
dec
test
dec
xchg
cmps
iret
or
not
shr
enter
hlt
mov
xchg
movs
push
inc
adc
leave
cmp
inc
sbb
mov
test
sub
pop
test
push
loop
add
xor
xchg
js
inc
mov
jg
mov
xor
ret
mov
das
mov
retf
sbb
clc
mov
lahf
cli
(bad)
ror
xor
sub
retf
push
xor
cmp
mov
jmp
mov
addr16
push
aas
enter
mov
mov
cli
call
add
pusha
dec
je
sahf
inc
pop
push
xor
pop
jnp
pop
into
sti
adc
aam
inc
jp
sub
sub
retf
out
(bad)
loop
movs
adc
cmp
mov
sahf
and
cmps
scas
imul
mov
jecxz
aas
push
sbb
ins
or
cmp
repz
cdq
loopne
inc
jl
add
popa
ja
sti
enter
stc
dec
or
fs
loop
outs
jb
popf
and
lods
xchg
and
mov
clc
add
push
les
cmp
call
loopne
jno
scas
pop
push
xchg
and
mov
or
das
std
fld
xchg
xchg
add
js
mov
inc
jl
xor
and
dec
or
fdiv
jg
mov
das
add
mov
and
sahf
cdq
nop
cmp
ret
repz
push
enter
or
jne
fs
inc
cmp
xchg
jmp
mov
addr16
sbb
add
test
stc
sub
or
cmp
shl
sti
or
stos
or
mov
pop
ins
iret
cmp
movs
sbb
pop
fs
inc
call
mov
mov
sub
out
dec
div
sub
and
dec
mov
pop
cwde
daa
sbb
jg
retf
push
je
dec
repz
pop
jo
push
outs
daa
outs
xchg
lea
inc
inc
xchg
idiv
rol
xlat
les
mov
fcomip
dec
inc
inc
enter
cmps
and
mov
popf
jns
rcr
add
xchg
cli
jmp
cmp
pop
dec
push
out
pop
sbb
xchg
shl
sub
pop
cmp
xor
int
dec
ss
out
jnp
test
movs
js
push
cli
jge
mov
jo
call
das
std
loop
hlt
push
shl
cmp
movs
xchg
inc
inc
pop
fsub
fldcw
in
xchg
pop
add
loop
dec
jb
adc
pop
call
aad
push
pusha
cs
out
or
cmc
mov
adc
xor
rol
cmp
jmp
out
xor
hlt
cld
jne
cmps
push
push
jmp
ins
dec
in
mov
(bad)
fdiv
add
sub
ror
cmp
cdq
mov
jmp
add
dec
sub
adc
and
jle
out
cmps
inc
mov
jne
adc
adc
mov
mov
aam
psubw
mov
xlat
out
into
sbb
push
js
inc
out
inc
shl
or
xchg
movs
cli
push
rcl
enter
aas
je
mov
stos
jp
int3
lods
lods
xor
add
sar
and
push
inc
dec
std
je
add
inc
paddsb
scas
das
(bad)
mul
aas
inc
gs
ds
ds
leave
stc
stos
adc
xchg
fist
out
pop
fnsave
mov
cmp
sbb
xor
js
jg
dec
push
mov
retf
inc
and
mov
xchg
movs
mov
out
mov
repnz
jmp
xchg
std
xchg
iret
fsubr
(bad)
and
cmp
cmps
adc
stc
pop
mov
xchg
popf
cmps
mov
cmc
mov
push
pop
pop
or
mov
in
mov
rcr
inc
sbb
fiadd
scas
mov
pop
adc
(bad)
ins
aam
push
ror
sbb
call
push
sub
clc
in
jnp
mov
mov
cmp
xor
cdq
lds
loopne
sbb
icebp
cmp
rol
mov
retf
push
sbb
pop
rol
sbb
adc
jl
movs
pushf
inc
rol
adc
or
lds
inc
inc
fiadd
lods
(bad)
nop
inc
gs
mov
pop
push
sar
push
imul
cmp
scas
pop
ins
pop
(bad)
add
mov
(bad)
xor
fisttp
dec
dec
test
(bad)
pop
ret
ror
or
or
adc
cs
sbb
imul
pushf
stos
dec
inc
mov
or
xor
outs
xchg
push
mov
inc
dec
sub
test
hlt
inc
lds
push
loopne
scas
out
test
xor
jmp
adc
ins
xor
js
dec
and
movs
adc
push
jecxz
sub
push
arpl
jae
call
in
rcr
scas
dec
imul
xor
pop
xchg
jbe
int3
add
ja
div
addr16
cmp
pushf
cmps
aam
pusha
je
repz
dec
popa
xor
and
jmp
in
adc
in
sbb
xchg
ss
push
fcom
repnz
dec
mov
mov
sbb
and
push
push
xchg
mov
retf
fiadd
sbb
dec
xchg
shl
jg
addr16
dec
adc
mov
lds
popa
and
lods
(bad)
jnp
and
out
(bad)
mov
cs
mov
mov
inc
call
loopne
cs
outs
cmp
clc
jle
int3
stos
das
fcmovb
ja
cmc
mov
fnstenv
leave
pop
aam
fdiv
loopne
test
sbb
cmp
jmp
inc
xchg
jecxz
pop
movs
lds
adc
in
cmp
xor
neg
inc
or
jae
sub
pop
stc
cwde
scas
cmp
cwde
pop
(bad)
test
cmp
ror
push
push
pusha
(bad)
sbb
(bad)
cld
push
in
aas
push
lahf
or
ret
push
pop
mov
dec
shl
xor
inc
jae
pop
pusha
xchg
and
std
cwde
add
or
shl
iret
retf
in
adc
test
test
in
loopne
retf
je
das
push
dec
rol
xchg
js
lea
dec
jo
aaa
xor
add
(bad)
rcl
rcr
stc
out
repnz
and
cmp
in
out
pop
cli
jmp
in
xchg
push
aam
and
push
cmp
adc
adc
inc
sbb
or
in
jmp
adc
ja
xchg
mov
cld
hlt
add
fstp
cmp
inc
mov
adc
call
jge
out
xor
sub
(bad)
ret
xor
jo
repnz
aad
mov
test
add
ret
mov
imul
ja
cmp
jmp
cmp
out
retf
and
aad
clc
movs
js
cmp
sbb
fild
and
stc
push
mov
(bad)
retf
xor
xchg
adc
add
repnz
sbb
jle
push
mov
add
jp
retf
mov
call
mov
mov
mov
sub
rcl
jno
pop
test
dec
out
mov
inc
stos
push
es
sar
loopne
jne
mul
mov
test
cdq
test
cs
popa
ror
or
inc
cli
cli
sub
loop
sti
ror
cmp
pop
aad
push
or
pop
pop
or
push
iret
(bad)
push
pushf
mov
test
rcl
movs
push
jl
sub
pop
in
movs
pop
or
jnp
lods
dec
clc
jle
test
ins
(bad)
push
sub
pop
mul
shl
mov
jmp
jae
aaa
in
push
mov
rcr
shl
mov
fadd
add
adc
dec
cmc
mov
jl
in
test
fnstsw
adc
jle
pop
cmp
sub
mov
pop
adc
addr16
test
cmp
jns
cmp
out
out
cwde
xchg
icebp
clc
mov
out
sub
dec
clc
inc
sti
mov
pop
add
push
shr
xor
sahf
or
sti
mov
imul
fld
not
or
arpl
test
sub
push
mov
sub
dec
mov
add
ret
xlat
adc
and
jp
int3
dec
jae
(bad)
jle
xor
pop
mov
fwait
dec
repz
dec
xchg
neg
fwait
sahf
push
loope
mov
in
cmc
call
dec
push
adc
retf
xor
add
jecxz
inc
xchg
add
das
(bad)
jp
lock
and
and
retf
cdq
mov
icebp
fistp
cmp
leave
jle
sti
es
shr
mov
pop
push
sbb
jmp
(bad)
gs
scas
cs
fcomp
jae
dec
sbb
gs
out
sbb
jnp
loope
push
aam
dec
jmp
sahf
loope
and
jmp
xchg
jne
in
mov
xchg
sahf
data16
sbb
daa
sbb
jns
push
or
inc
cs
mov
push
mov
jecxz
xchg
push
shl
cmp
mov
(bad)
xor
jnp
test
(bad)
(bad)
fild
dec
pop
and
fimul
pusha
mov
or
pop
add
xor
dec
push
adc
outs
jp
pop
mov
or
mov
fcmovbe
jnp
adc
jbe
or
dec
inc
sbb
pop
mov
cmp
adc
jp
push
mov
movs
xchg
in
cmp
fadd
push
retf
or
cli
jg
inc
ds
pop
lock
aas
push
into
jnp
jbe
scas
xor
pop
xchg
pop
dec
fwait
mov
lods
int
fidivr
push
inc
fnstsw
cwde
mov
fs
sti
dec
add
pop
xlat
lahf
adc
call
xor
iret
and
out
xlat
jns
xchg
(bad)
adc
sbb
out
xor
fistp
out
stos
fnstenv
or
cdq
pop
iret
popf
and
shl
out
inc
add
(bad)
cmc
lods
lods
cmp
sub
push
cli
ds
es
je
jge
sbb
dec
jno
stos
mov
test
add
jecxz
push
adc
mov
or
cmp
cmp
xchg
sahf
leave
(bad)
ins
cdq
popaw
add
pop
dec
adc
pop
push
cmps
dec
xchg
test
addr16
je
pop
repz
inc
dec
inc
repz
inc
or
push
lods
ja
imul
pop
addr16
neg
sbb
push
in
pop
call
jle
les
xor
lahf
in
(bad)
mov
pop
fxch
and
and
aam
xor
dec
push
sar
mov
cmp
fwait
ins
retf
pop
ins
add
cmp
retf
pusha
(bad)
jno
mov
push
mov
and
mov
mov
retf
sbb
call
sub
test
stos
jp
dec
lds
cld
lds
(bad)
mov
mov
ds
lods
or
jmp
loopne
into
outs
gs
daa
dec
addr16
cmp
cmps
sbb
in
jg
movs
fiadd
sub
shl
rol
adc
jge
fnsave
mov
les
out
call
clc
retf
add
in
pop
loope
in
inc
cmp
mov
clc
xor
or
mov
rcr
mov
gs
mov
jl
cs
push
movs
(bad)
xchg
jne
mov
ret
xchg
or
cli
dec
xor
sbb
not
push
jbe
in
sahf
rcl
repz
mov
shr
cmp
inc
hlt
or
call
adc
push
inc
mov
daa
and
xor
int
cmc
sbb
push
sbb
push
inc
test
js
adc
push
sub
push
lods
(bad)
mov
repz
std
imul
in
sbb
push
inc
das
cmps
fst
sbb
dec
mov
(bad)
in
mov
sbb
sar
outs
dec
fidiv
cs
or
inc
js
aas
shl
and
sbb
test
loope
mov
xlat
sbb
mov
sbb
es
test
mov
imul
push
xchg
jg
pop
cmc
int3
pop
xchg
rcr
cmp
push
and
jne
adc
nop
div
mov
movs
lods
cmp
sub
lahf
lds
test
loopne
pusha
mov
repz
aad
jle
mov
push
jmp
jmp
push
out
adc
data16
cmp
repz
data16
(bad)
loopne
es
fild
adc
out
aad
sub
adc
xchg
xor
cwde
push
mov
ins
ret
shl
xchg
cmp
adc
es
(bad)
cmp
rcr
aad
inc
mov
jo
stos
cmc
xor
rcr
mov
cmp
stc
dec
jle
jmp
lods
imul
mov
sbb
ret
sar
mov
sar
mov
fwait
jb
xchg
push
test
(bad)
ret
xchg
pusha
add
dec
jp
movs
jp
inc
mov
and
push
xlat
popa
in
lahf
push
dec
icebp
cmc
xchg
mov
pop
or
mov
cs
mov
out
lock
dec
xchg
mov
fld
mov
popa
mov
mov
xor
add
popa
jge
or
cli
es
mov
(bad)
cmps
jg
popfw
sbb
shr
pop
sub
mov
xchg
ret
mov
mov
pop
loope
cwde
mov
jne
cdq
hlt
out
popa
es
mov
pop
pop
and
outs
test
ror
aam
or
scas
fist
in
push
jl
cmp
dec
mov
(bad)
jecxz
jge
mov
sbb
sbb
mov
mov
test
mov
fwait
in
dec
mov
adc
and
inc
outs
push
lods
out
aam
and
popa
gs
inc
or
loope
sub
xchg
call
repnz
(bad)
int3
in
and
jnp
mov
adc
adc
js
mov
test
mov
ret
out
jb
shl
fdiv
call
add
push
adc
adc
mov
outs
inc
(bad)
mov
jbe
adc
ret
popf
std
and
cmp
fs
retf
fidiv
jbe
retf
aad
fild
adc
not
bound
call
arpl
cmp
jecxz
pop
stos
xchg
cmp
lahf
or
push
mov
jb
clc
jg
ret
aaa
(bad)
push
cmps
(bad)
cmc
in
jge
mov
inc
pop
xchg
xchg
jne
xchg
rcr
jne
nop
iret
fsub
in
test
ret
adc
dec
sub
inc
add
mov
add
(bad)
retf
daa
in
fbstp
aas
test
shl
push
in
mov
and
adc
in
and
pop
xchg
inc
ds
mov
out
mov
std
fwait
add
mov
sbb
cli
pop
test
imul
sub
add
inc
pop
push
cwde
adc
out
test
ins
and
cmps
mov
fwait
stc
data16
loop
add
das
xor
(bad)
jne
enter
fimul
stos
pushf
inc
dec
in
mov
in
mov
stos
add
pop
arpl
mov
enter
mov
(bad)
cwde
mov
sub
test
xor
int3
xchg
add
xchg
sbb
jns
popa
xchg
xchg
mov
fist
pop
(bad)
push
ja
pop
xor
cmp
mov
xchg
pushf
test
dec
jp
aam
(bad)
pusha
in
xor
xchg
cmp
sahf
jb
cmp
dec
sub
or
sub
lds
xchg
repnz
pop
pop
dec
jmp
jle
push
setbe
(bad)
in
mov
xor
repnz
sub
int
lods
mov
shr
lods
sub
mov
inc
rol
test
jg
call
mov
push
repz
jge
(bad)
scas
ret
ds
test
and
lods
daa
mov
inc
(bad)
out
jnp
dec
jp
sub
lahf
imul
jg
pop
jmp
jg
mov
(bad)
mov
pop
dec
call
sahf
pushf
leave
cmps
in
push
mov
push
(bad)
(bad)
mov
pusha
sti
xchg
(bad)
out
ret
in
adc
add
jno
neg
cdq
(bad)
mov
adc
xor
ds
gs
lea
xchg
daa
test
jg
stos
pavgw
mov
sbb
loopne
iret
mov
push
(bad)
sub
ret
out
mov
(bad)
movs
cmp
int
fisub
fisub
xchg
sbb
inc
iret
ins
ja
pusha
or
dec
and
psubsw
scas
dec
mov
inc
pop
xchg
mov
jge
scas
(bad)
retf
xlat
mov
inc
into
mov
sub
jmp
clc
push
mov
out
(bad)
mov
hlt
(bad)
in
push
rol
outs
call
test
add
xchg
data16
aaa
cs
mov
push
mov
ret
jb
xchg
rcr
arpl
repnz
inc
repz
(bad)
(bad)
push
call
popa
stos
movs
inc
xor
sub
jne
retf
jmp
test
ins
xchg
sub
mov
xchg
jne
push
aad
aad
push
outs
mov
inc
sbb
pop
pop
or
(bad)
stos
cmp
lahf
popf
sar
inc
push
jge
call
outs
out
pusha
mov
pop
mov
adc
xchg
mov
push
lods
sub
ins
pop
cwde
fucomi
jno
div
(bad)
push
cwde
push
mov
hlt
inc
cmp
in
mov
in
int
pop
cdq
adc
push
jp
sbb
imul
mov
sub
dec
push
and
cmp
aam
popa
cli
cli
out
sub
mov
lods
ffreep
popf
cmps
mov
cmps
push
daa
push
jne
les
push
adc
xchg
push
scas
ror
aad
xor
inc
inc
cdq
pop
repz
scas
hlt
jne
adc
mov
stos
sub
xchg
xchg
or
xor
cwde
xor
mov
call
xlat
call
dec
inc
and
aam
push
add
inc
in
addr16
cmps
adc
push
jmp
jl
stc
add
push
pop
push
jge
imul
repnz
inc
jmp
jne
jno
pop
push
scas
loopne
pop
and
sub
push
(bad)
cmp
mov
stos
neg
xor
cmp
lock
pop
mov
pop
scas
ins
dec
jmp
test
out
out
push
dec
or
(bad)
push
mov
rcl
jl
adc
xor
push
test
or
sahf
and
mov
dec
and
xchg
inc
mov
out
aaa
and
retf
jbe
ror
movs
arpl
cmp
lock
cdq
dec
fldcw
mov
mov
arpl
loop
ficom
add
inc
ja
cmp
or
sbb
or
cmp
push
jp
sub
mov
stos
and
shr
xor
int
sub
push
mov
xlat
sbb
mov
add
(bad)
ins
cs
mov
jae
fisttp
shl
sub
dec
push
pop
mov
scas
mov
int
push
mov
pop
add
pushf
jmp
push
mov
adc
xchg
jge
leave
pop
xchg
lahf
push
retf
imul
xchg
mov
adc
lahf
mov
imul
test
repz
jbe
mov
mov
ror
xor
add
sbb
pop
(bad)
inc
jns
(bad)
call
into
sahf
xor
into
or
or
mov
in
mov
ins
push
mov
inc
push
push
je
addr16
pop
jnp
arpl
pop
adc
scas
xor
adc
es
mov
push
pop
sbb
test
cdq
mov
test
das
jmp
rcl
mov
jecxz
fmul
(bad)
out
movs
mov
cmp
and
int
sbb
in
movs
dec
push
rep
int
test
and
pop
sub
test
movs
fdivr
xchg
jns
movs
call
movs
ret
iret
idiv
ror
shl
or
adc
cmp
test
jecxz
call
xor
mov
jl
and
xchg
jl
dec
lods
add
mov
pop
mov
jmp
cmp
mov
jecxz
xor
jb
pop
lock
call
fisub
and
xor
fld
push
