mov
add
add
add
dec
add
add
add
add
add
or
add
add
add
adc
add
push
and
add
add
add
ins
pop
test
add
ror
lea
je
je
sub
rcl
ret
movs
xchg
xor
pop
inc
jp
mov
cli
xchg
or
push
ror
cmp
mov
xchg
cmp
cmp
dec
cmp
aam
scas
pop
or
adc
pop
loope
pusha
cld
ins
(bad)
mov
into
dec
std
stos
sub
or
sbb
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
dec
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
fadd
add
xchg
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
xor
lods
add
add
add
ins
add
add
add
add
add
mov
mov
add
add
add
add
add
mov
add
add
add
add
add
add
jnp
xor
popa
xor
xor
sub
sub
popa
cmp
gs
add
gs
inc
xor
xor
xor
inc
xor
inc
inc
xor
xor
cmp
inc
inc
xor
xor
xor
inc
xor
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
movs
frstor
hlt
(bad)
dec
xchg
lock
push
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
add
push
push
lods
push
pop
stos
push
push
int
pop
pusha
popa
bound
gs
xchg
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
pop
cwde
cdq
call
test
sbb
push
std
ret
(bad)
(bad)
(bad)
rcl
xchg
aad
(bad)
xlat
aad
pushf
(bad)
lahf
mov
lods
jecxz
stos
out
xchg
stos
loope
(bad)
not
aad
xlat
fcomp
fimul
loope
loop
adc
mov
call
in
out
(bad)
repz
cmc
std
div
xchg
cli
sti
(bad)
std
(bad)
inc
add
in
cdq
add
or
or
push
movups
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
in
sub
xor
xor
ss
jns
cmp
inc
inc
inc
push
inc
inc
pop
dec
dec
dec
dec
dec
dec
pop
push
push
push
push
push
push
push
push
pop
pop
pop
ret
rcr
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
fdivr
jae
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
xchg
mov
mov
mov
rol
in
(bad)
(bad)
retf
int3
int
iret
rcl
sar
mov
(bad)
das
mov
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
not
clc
stc
call
add
(bad)
add
or
push
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
pusha
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
mov
pop
pop
pop
pusha
popa
bound
fs
jecxz
ins
outs
jg
jno
jb
jne
ja
jns
sub
inc
cld
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
test
lods
scas
pop
inc
mov
dec
mov
mov
mov
leave
iret
jno
leave
(bad)
(bad)
(bad)
cdq
fcmovnu
(bad)
leave
retf
leave
iret
leave
retf
leave
(bad)
stc
sti
stc
(bad)
stc
sti
stc
(bad)
leave
retf
leave
iret
leave
retf
leave
(bad)
(bad)
(bad)
(bad)
fld
dec
retf
leave
iret
(bad)
aam
leave
mov
add
daa
and
imul
cmp
jns
sub
sub
pop
or
pop
adc
addr16
and
and
push
push
jge
pop
inc
dec
dec
dec
dec
sbb
dec
inc
cmc
mov
mov
iret
leave
retf
leave
(bad)
cmp
(bad)
rcr
rol
leave
mov
iret
leave
leave
leave
(bad)
stc
sti
stc
jmp
ins
stc
(bad)
leave
jmp
iret
leave
retf
leave
(bad)
(bad)
cdq
(bad)
sti
fld
leave
leave
leave
iret
int
leave
(bad)
mov
mov
dec
dec
dec
mov
pop
pop
pop
pop
pop
pop
pop
inc
dec
dec
or
dec
dec
pop
inc
jns
jns
jns
imul
dec
dec
inc
dec
pop
pop
pop
pop
pop
pop
inc
dec
dec
dec
dec
cdq
fisttp
repnz
mov
iret
leave
retf
leave
(bad)
(bad)
(bad)
(bad)
fld
leave
retf
leave
iret
leave
imul
cmc
sti
stc
(bad)
stc
sti
stc
(bad)
leave
retf
leave
iret
leave
retf
leave
(bad)
(bad)
(bad)
(bad)
fld
leave
retf
leave
iret
leave
retf
leave
(bad)
mov
mov
dec
dec
dec
dec
dec
inc
pop
pop
pop
pop
pop
jnp
inc
inc
dec
dec
dec
dec
dec
dec
inc
jns
jns
jno
jns
add
dec
dec
dec
dec
inc
pop
pop
pop
pop
ja
cmp
cmp
cmp
inc
mov
ret
mov
iret
leave
retf
leave
(bad)
(bad)
(bad)
(bad)
fld
jmp
mov
stc
push
sti
stc
(bad)
leave
imul
leave
leave
leave
(bad)
fldenv
fld
leave
retf
leave
iret
leave
retf
leave
(bad)
stc
mov
mov
dec
dec
dec
dec
inc
pop
pop
pop
pop
pop
pop
pop
inc
dec
dec
dec
dec
dec
dec
dec
inc
jns
jns
jns
jns
dec
dec
dec
dec
dec
dec
dec
inc
pop
pop
pop
pop
pop
pop
pop
inc
dec
dec
dec
dec
dec
fmul
mov
mov
int3
iret
or
(bad)
leave
fcmovu
(bad)
fcmovnu
(bad)
leave
retf
leave
iret
cdq
jmp
(bad)
mov
stc
(bad)
leave
retf
leave
iret
leave
retf
leave
(bad)
(bad)
(bad)
(bad)
fld
leave
retf
leave
iret
leave
retf
leave
(bad)
mov
mov
dec
dec
cs
inc
push
push
lods
pop
dec
mov
pop
pop
push
push
push
pop
gs
lahf
pop
pop
jecxz
ins
outs
outs
push
jne
ja
imul
js
jb
jl
xchg
test
add
mov
lahf
sub
pop
mov
movs
jmp
(bad)
(bad)
mov
aad
faddp
(bad)
(bad)
lahf
retf
xchg
aad
out
(bad)
stos
test
enter
(bad)
xlat
ror
retf
fstp
xchg
(bad)
rol
loopne
fcmovu
in
out
psubsb
ret
call
test
jmp
icebp
repnz
push
pop
and
jnp
or
add
sub
push
pop
adc
or
adc
push
pop
sbb
adc
sbb
es
and
sbb
in
cs
sub
and
sub
ss
imul
xor
mov
pop
dec
inc
inc
inc
dec
push
push
push
push
dec
dec
stos
lds
adc
push
push
push
pop
gs
pop
pop
pop
fs
outs
outs
push
jne
ja
imul
js
jb
jl
xchg
test
add
mov
lahf
cwde
xchg
xchg
xchg
pushf
movs
cmps
cmps
mov
lods
scas
scas
test
mov
mov
mov
mov
mov
sar
cmp
int
iret
enter
mov
leave
retf
fstp
(bad)
rcl
shr
(bad)
fnsetpm(287
in
out
out
call
cmc
not
lock
xchg
nop
fwait
icebp
repnz
cld
add
jp
push
or
add
or
push
pop
adc
or
adc
push
pop
sbb
push
adc
sbb
and
cs
sub
and
sub
ss
xor
sub
xor
ds
cmp
xor
cmp
inc
inc
inc
mov
dec
dec
dec
inc
inc
inc
dec
push
push
push
push
dec
dec
pop
(bad)
pop
pop
pop
pop
push
push
sbb
gs
pop
pop
mov
ins
outs
jg
popa
bound
jne
ja
imul
or
jae
test
sti
test
add
mov
lahf
cwde
xchg
xchg
xchg
pushf
movs
cmps
cmps
mov
lods
scas
pusha
mov
(bad)
sub
icebp
addr16
jno
arpl
scas
lods
push
pop
cdq
and
daa
rcl
shr
popa
and
daa
xor
xor
and
and
xor
xor
and
and
rcl
rcr
loope
loope
rcl
shr
loope
loope
jno
icebp
(bad)
out
cld
pop
jmp
rcr
sbb
test
and
pop
inc
dec
add
pop
push
push
add
adc
inc
add
pop
adc
or
add
pop
gs
arpl
jno
jno
xor
popa
addr16
xchg
jns
push
push
push
pop
and
and
xor
ror
sub
sub
xor
aas
and
and
xor
xor
out
scas
and
shl
rcr
loope
loope
rcl
xchg
out
loope
loope
icebp
icebp
icebp
jmp
jecxz
out
repz
out
in
loope
rcl
rcr
and
and
push
push
push
das
and
and
xor
jno
and
xor
xor
xor
and
xor
push
inc
push
pop
popa
arpl
inc
push
push
outs
popa
arpl
jno
jno
loope
popa
cmp
outs
popa
arpl
push
push
push
pop
and
and
rcl
shr
and
and
xor
xor
and
xor
and
and
rcl
rcr
loope
loope
rcl
shr
loope
loope
icebp
repz
jmp
jecxz
out
repz
out
loope
loope
rcl
rcr
and
and
push
push
push
das
and
and
cmp
xor
and
and
xor
xor
sub
and
sbb
pop
popa
arpl
push
push
push
outs
dec
pop
add
add
punpcklwd
push
jno
popa
or
push
pop
and
and
rcl
shr
and
and
adc
xor
push
inc
dec
pop
push
xor
sub
jae
(bad)
loope
out
mov
loope
icebp
repz
jmp
jecxz
out
repz
lods
loope
loope
rcl
rcr
and
and
push
push
push
das
and
and
xor
xor
and
and
xor
xor
and
and
push
push
push
pop
popa
arpl
push
push
push
outs
popa
arpl
jno
jno
shr
popa
addr16
jno
sub
addr16
push
push
pop
push
test
daa
rcl
das
and
and
xor
xor
jno
and
adc
das
and
and
rcl
rcr
loope
loope
rcl
shr
loope
loope
icebp
repz
jmp
jecxz
out
repz
out
loope
loope
rcl
rcr
cmp
daa
test
(bad)
xchg
out
imul
ret
mov
mov
sub
lods
cwde
imul
das
imul
lods
movs
sub
sub
jo
movs
add
stos
(bad)
push
fmul
test
add
inc
cmp
arpl
js
enter
fidivr
int3
out
stos
sahf
clc
(bad)
push
sbb
mov
dec
rol
pop
push
addr16
pusha
mov
movs
fist
lods
inc
inc
inc
pop
ins
xchg
nop
pop
cwde
and
lods
xchg
cmp
xchg
outs
std
jmp
pop
mov
push
movs
int
pop
dec
sub
jno
adc
xor
or
inc
shl
jb
mov
fldcw
je
add
cmps
dec
mov
ds
xor
ss
repz
repnz
aam
xlat
cmp
or
popa
imul
or
mov
adc
xor
data16
jb
cwde
jnp
jns
and
mov
test
add
dec
xchg
and
mov
jae
jmp
cmc
enter
sub
test
xchg
scas
mov
ja
bound
cld
add
sub
mov
fs
xor
sub
sub
xchg
mov
inc
xor
or
mov
and
mov
(bad)
dec
nop
lahf
adc
xchg
ja
and
int
mov
mov
push
dec
daa
js
aas
fwait
ror
leave
repnz
xchg
inc
and
add
adc
cmp
jae
ja
sbb
repnz
jl
sbb
dec
scas
mov
ficom
into
sbb
dec
data16
and
xchg
rcl
cwde
iret
dec
ror
(bad)
movs
fist
inc
xor
jae
push
ins
sahf
icebp
mov
adc
out
cmp
sub
or
outs
inc
mov
push
dec
dec
iret
mov
xchg
out
add
mov
dec
jns
(bad)
stos
je
push
cmps
jno
mov
mov
mov
ds
ret
inc
add
les
push
push
and
push
mov
adc
and
xor
jle
int3
pop
fidivr
inc
push
inc
push
aaa
push
lods
pusha
sbb
mov
lods
jg
(bad)
cmp
(bad)
outs
xor
mov
fwait
test
cs
jle
fcomp
gs
mov
popa
push
pop
pop
in
or
or
repnz
xchg
cmps
fs
mov
cmp
inc
jmp
push
push
sub
ins
mov
jbe
and
sub
into
pop
add
mov
jmp
dec
retf
mov
pop
lods
push
cli
stos
shr
add
shl
jae
mov
stos
cmp
inc
mov
jl
pop
or
jne
pop
xchg
cmp
popf
out
pop
pop
hlt
xchg
xchg
pop
adc
icebp
cmp
and
into
out
out
aad
ret
fidiv
push
jecxz
repnz
ja
add
int3
(bad)
inc
shl
ficomp
das
push
das
mov
lea
push
arpl
jb
and
xchg
rcr
and
cmp
idiv
ja
test
repnz
rol
shr
jnp
lock
loopne
xor
xchg
jecxz
or
or
mov
sar
cmp
pop
jp
inc
stos
or
dec
imul
pop
adc
jno
jne
adc
sbb
into
lahf
mov
pop
pop
mov
mov
call
movs
push
aam
loopne
push
adc
push
jnp
fld
xchg
or
adc
add
aaa
or
xor
adc
(bad)
or
retf
jmp
inc
jp
and
xor
in
iret
cwde
dec
mov
xchg
test
cwde
fdivr
cmp
add
jae
inc
std
xor
fdivrp
pop
jl
(bad)
loop
pop
ins
or
add
stos
call
push
mov
mov
pop
inc
int3
sub
dec
imul
mov
or
test
pusha
dec
inc
aam
cmps
scas
mov
mov
sar
repz
into
jmp
in
ins
retf
sub
hlt
mov
add
ret
xchg
and
push
or
inc
push
test
push
and
sbb
sub
stos
jne
jbe
xor
lods
loop
push
push
mov
ret
sbb
fcompp
push
into
or
inc
jecxz
loop
push
adc
push
aas
clc
cvtps2pd
add
rcl
cmp
inc
bound
mov
add
ins
add
push
enter
popa
out
addr16
jo
ins
mov
enter
hlt
push
xchg
push
push
imul
fadd
scas
dec
out
out
int3
mov
ds
(bad)
(bad)
mov
ds
push
inc
outs
mov
push
and
adc
cmp
cld
pop
mov
retf
inc
cdq
push
push
push
and
xchg
test
mov
test
(bad)
adc
mov
stos
das
fisttp
rcr
test
sub
mov
dec
imul
rcr
cli
push
push
cmp
mov
jne
mov
pop
xchg
adc
inc
fnstcw
pusha
pushf
sub
push
je
mov
fisubr
xchg
test
stos
leave
cmps
sbb
jb
clc
pop
shl
push
mov
icebp
aad
push
leave
pusha
loopne
out
or
fidivr
imul
out
cmp
test
xor
aas
jmp
inc
mov
cmps
jmp
mov
mov
xchg
xchg
and
int
shl
(bad)
mov
jl
adc
or
and
cmc
repnz
add
and
sbb
mov
sbb
(bad)
xchg
jnp
mov
pop
xor
cmp
mov
mov
pop
stc
je
fimul
mov
or
in
dec
mov
xor
pop
pop
test
lock
aad
inc
in
add
(bad)
lods
ret
fidivr
in
add
sbb
imul
jmp
push
outs
inc
sub
dec
jge
pop
xor
xor
aam
pop
out
mov
adc
inc
and
sbb
(bad)
leave
retf
inc
lea
sub
jne
add
mov
(bad)
es
mov
popf
retf
add
jno
dec
or
je
push
xchg
imul
and
gs
cwde
imul
pop
inc
mov
call
iret
pop
imul
jae
aaa
fcomp
pop
ins
fisubr
cmp
out
and
cdq
add
cmp
outs
add
pushf
and
mov
cmp
inc
adc
mov
or
adc
adc
fmul
pop
cdq
outs
inc
mov
jo
pop
jl
ret
movs
retf
or
in
sub
mov
iret
call
clc
adc
aaa
xor
mov
aam
inc
addr16
dec
push
push
ins
sbb
je
mov
stc
cmp
xchg
mov
pop
xchg
mov
(bad)
lea
aas
cmp
cmp
lods
cld
mov
ja
bound
mov
sbb
call
xlat
pop
jae
and
in
dec
addr16
push
jbe
pushf
shl
pusha
sbb
aaa
imul
push
imul
add
xchg
sub
xchg
data16
out
aam
jmp
adc
inc
out
cs
in
jno
xchg
or
or
cmps
movs
out
ds
and
aad
jne
aas
mov
retf
jb
mov
arpl
pminsw
cdq
out
in
leave
int3
add
mov
cmp
mov
repz
push
and
adc
enter
jae
call
or
rol
push
outs
push
test
sub
leave
repnz
loopne
dec
cmp
dec
test
ror
push
pushf
mov
(bad)
ror
add
lahf
jb
xchg
shl
xor
outs
ss
(bad)
cli
xchg
inc
mov
movs
fidivr
jmp
jnp
add
fcomp
sbb
push
dec
xor
jmp
sbb
popa
mov
bound
jmp
jmp
in
loop
mov
scas
adc
xor
inc
fisttp
mov
stos
mov
movs
loop
icebp
ret
jge
inc
xor
mov
xchg
adc
fld
inc
loope
cmp
aas
gs
ss
push
mov
adc
inc
ret
pop
aad
or
(bad)
js
jae
xor
mov
repz
fsub
bnd
dec
repnz
loopne
cmps
loope
ins
lds
icebp
jl
mov
js
imul
out
int
mov
dec
and
jg
(bad)
dec
arpl
fadd
ds
in
pop
fidivr
ja
jns
mov
retf
(bad)
arpl
into
mov
xor
inc
lds
sahf
fistp
adc
push
xchg
xchg
aas
sbb
ds
sub
dec
pop
and
sbb
and
aaa
(bad)
test
jmp
mov
adc
and
bound
xchg
mov
cmp
das
cmp
mov
fisttp
idiv
cld
data16
ins
std
cmps
inc
or
add
or
popa
popf
and
aad
sti
mov
cdq
jmp
addr16
inc
jb
push
push
xchg
inc
(bad)
imul
mov
mov
inc
es
jl
pushf
jmp
lods
jo
add
inc
mov
out
ins
jmp
add
sbb
sub
mov
inc
xchg
cmp
mov
cdq
jge
ins
jb
shr
std
jns
jo
pusha
mov
aad
xor
lea
addr16
ret
jo
xchg
(bad)
stc
xor
outs
jmp
push
stos
or
and
ss
xchg
loopne
sbb
xor
jmp
add
clc
adc
cmc
xlat
push
pop
not
adc
jp
popa
std
xor
cdq
sbb
push
pushf
push
loop
adc
and
bnd
fld
ret
test
int3
dec
mov
inc
scas
das
stc
pop
clc
inc
clc
popa
(bad)
mov
scas
xor
sub
push
(bad)
aad
test
adc
sbb
push
out
xor
retf
out
push
mov
(bad)
sbb
comiss
ss
mov
pop
mov
mov
xor
loope
clc
pop
icebp
shl
push
lahf
push
fisttp
and
push
int
ret
test
dec
push
add
lods
inc
cmp
ins
vaddps
xlat
xor
mov
lahf
xchg
lods
lods
test
leave
pop
mov
cmps
loope
xlat
leave
pop
sub
fist
push
cs
sbb
lods
or
sbb
ins
and
leave
lds
aaa
sbb
adc
inc
mov
inc
or
jbe
fstp
push
jne
dec
jne
jno
jno
sub
lods
sbb
mov
call
outs
int3
sub
dec
popf
ror
dec
shr
cmp
inc
(bad)
(bad)
int3
repnz
adc
xor
loop
inc
mov
data16
adc
push
mov
pop
shl
xchg
xchg
loop
or
cmp
mov
mov
mov
mov
jnp
rcl
in
inc
loop
or
std
xor
nop
adc
popa
xchg
cdq
gs
mov
dec
push
dec
xchg
out
(bad)
pop
das
shl
jne
or
xchg
aas
arpl
jne
push
adc
mov
mov
ins
xchg
mov
shl
ror
imul
xor
cli
sbb
or
pop
sub
imul
sbb
mov
mov
push
addr16
packsswb
pusha
data16
icebp
jl
inc
mov
out
xchg
push
test
aaa
icebp
add
iret
jmp
ins
add
(bad)
int
jp
fmul
dec
adc
hlt
call
outs
push
test
adc
mov
mov
dec
adc
movs
add
ins
xchg
xchg
pop
sahf
fild
mov
mov
xchg
popf
and
push
mov
imul
(bad)
out
adc
dec
inc
cwde
sbb
shr
arpl
(bad)
add
mov
in
loop
push
and
push
push
frstor
cld
and
xchg
test
add
or
adc
mov
lahf
mov
lods
repnz
lea
mov
add
outs
stc
in
pop
nop
sbb
add
test
sahf
push
mov
xchg
clc
add
arpl
cmc
cmp
inc
push
jp
test
jl
pop
jb
dec
xor
inc
cmc
addr16
push
in
mov
call
(bad)
inc
xchg
fmul
fxch
stos
iret
popa
sub
pop
dec
cmp
inc
mov
(bad)
mov
jo
lds
adc
and
and
sbb
pusha
fcomp
ds
mov
es
mov
bnd
leave
out
int3
aad
retf
pop
mov
inc
mov
push
mov
icebp
xor
out
cli
aas
jmp
jmp
sub
sbb
mov
xchg
inc
adc
dec
sub
push
inc
fisttp
les
jp
dec
xor
lods
add
(bad)
cmp
jmp
xchg
mov
jns
pop
enter
pushf
inc
cmc
and
pop
or
pusha
dec
dec
add
adc
pop
jge
or
cmp
add
(bad)
push
scas
sub
cmp
arpl
popa
cmp
outs
(bad)
xor
push
cmp
and
rcr
xchg
adc
(bad)
xlat
mov
inc
(bad)
ss
arpl
std
sti
dec
adc
movs
cmp
xor
ret
sbb
and
aas
cmp
(bad)
fstp
ins
shr
call
sahf
mov
fild
pop
mov
sub
scas
leave
ins
inc
lock
repz
jne
bnd
jmp
hlt
ret
xor
into
shr
jmp
pushf
jge
lock
dec
add
pop
out
or
dec
jmp
xchg
jns
cmp
pop
bound
jge
inc
add
lahf
xor
lods
cmp
je
imul
push
enter
daa
sbb
pop
aaa
bnd
adc
loopne
sbb
mov
inc
cmp
cs
add
mov
adc
ja
dec
shr
inc
aad
mov
sub
in
out
push
mov
aas
jnp
daa
out
push
mov
lods
(bad)
or
lods
leave
sti
pcmpgtw
push
into
push
scas
cli
rcr
sub
jno
jecxz
mov
loope
push
cs
fwait
jge
and
das
xor
es
and
mov
dec
call
aad
inc
pushf
mov
gs
xor
push
lea
jmp
mov
in
sub
aaa
aam
inc
jne
(bad)
inc
push
xchg
in
jle
cmc
fsubrp
shl
popf
dec
cdq
push
fimul
push
inc
push
push
mov
dec
pop
inc
inc
jle
push
fwait
inc
dec
jp
dec
in
test
jge
retf
mov
mov
lahf
or
les
ins
lds
push
clc
jmp
pop
adc
jl
push
leave
inc
movq
enter
or
stos
mov
fdivr
icebp
adc
nop
popa
scas
fs
add
dec
js
pusha
mov
retf
pop
das
and
adc
loope
fiadd
push
mov
pop
inc
mov
(bad)
sahf
popa
test
sbb
dec
leave
js
test
aad
adc
sub
ss
sbb
jns
and
xchg
call
pushf
cmp
cwde
bound
fwait
out
mov
(bad)
jecxz
out
xchg
xchg
nop
shl
fisttp
push
rol
repnz
fstp
sbb
dec
iret
fwait
push
outs
into
out
outs
push
sbb
and
push
aad
inc
dec
sbb
add
dec
hlt
int3
lods
(bad)
sub
ja
test
mov
mov
or
mov
scas
arpl
inc
mov
xchg
add
push
mov
push
mov
sbb
or
xor
mov
js
dec
sti
jb
lock
out
cmp
call
push
push
adc
adc
fwait
shl
inc
(bad)
inc
sub
push
fimul
or
dec
add
int3
aaa
mov
sbb
add
retf
test
cmp
mov
jle
xor
cs
test
cmp
es
popa
ins
lods
cmp
fbstp
retf
xchg
mov
psraw
add
aam
and
or
ret
mov
cli
icebp
std
ja
jne
xor
mov
out
xor
loope
loopne
into
loop
(bad)
(bad)
fld
nop
movs
push
or
mov
je
sbb
dec
mov
mov
dec
and
mov
inc
mov
push
mov
lock
test
imul
ins
cmps
sbb
xor
pop
inc
fadd
arpl
ds
jmp
dec
repz
push
cmp
fucomp
mov
cld
add
sbb
dec
data16
xor
retf
fisubr
mov
outs
es
shl
cmp
movs
dec
sti
fdiv
xlat
fstp
mov
leave
ret
mov
(bad)
push
dec
mov
mov
scas
or
test
shl
jmp
jle
mov
jle
push
and
mov
xchg
popf
xchg
jecxz
mov
ds
movs
mov
or
mov
jecxz
clc
loopne
xor
cli
or
neg
in
mov
xchg
or
push
into
push
fs
fist
push
dec
mov
outs
and
pop
dec
js
mov
mov
xor
ret
xor
add
daa
pop
xor
add
enter
fcom
into
or
das
or
f2xm1
fmul
mov
or
cmc
inc
and
xchg
sahf
je
cmp
lock
mov
dec
jmp
mov
mov
jl
dec
push
and
jge
(bad)
fcom
inc
icebp
or
into
mov
adc
sar
xor
mov
arpl
cmp
sbb
movs
(bad)
fsub
mov
fcom
xchg
mov
inc
mov
(bad)
mov
push
lahf
pop
test
in
mov
ret
fwait
in
mov
mov
push
adc
out
sub
je
hlt
fwait
or
cmp
jo
dec
or
inc
inc
push
pop
xor
rcr
add
or
enter
cmp
cli
shr
out
add
out
in
dec
or
push
fs
sbb
fiadd
(bad)
pavgw
popf
or
adc
sbb
push
in
cmp
or
and
imul
xchg
in
xchg
cmp
sbb
fidiv
inc
xor
fdiv
rol
adc
stc
pop
test
lods
sub
xor
add
cmp
or
inc
mov
lods
lahf
call
mov
push
lahf
adc
popf
sbb
sbb
imul
add
add
add
shr
clc
xchg
jmp
addr16
pop
shr
push
cmp
clc
and
and
ja
popf
ins
push
or
xor
sbb
ds
or
gs
mov
jbe
mov
ret
(bad)
xchg
xrelease
mov
push
push
xchg
mov
mov
fisubr
ret
adc
popa
(bad)
sbb
div
ins
mov
jp
movlps
jl
pop
dec
pop
sub
cmp
xchg
in
jg
jl
adc
fsubr
jne
jnp
cmc
popa
cmp
mov
lods
inc
pop
and
pop
add
dec
pop
fcomp
xchg
int
shr
mov
in
push
cmp
mov
sub
not
ss
scas
sbb
fld
lahf
cld
inc
jmp
xchg
mov
jns
call
push
test
into
aaa
and
imul
mov
jno
ja
lock
mov
ret
push
hlt
xchg
loop
aas
scas
loopne
xor
or
mov
out
loopne
(bad)
jmp
je
jno
push
inc
out
dec
les
sbb
jb
lock
dec
ins
mov
pop
mov
iret
lock
mov
fidivr
mov
mov
pop
cmp
sbb
inc
add
pavgw
and
mov
je
dec
pop
cmp
(bad)
jge
in
ins
jo
and
cli
scas
ss
call
or
aad
call
cmps
out
jge
aad
push
jl
sti
rol
iret
or
ret
test
out
(bad)
adc
movs
mov
or
mov
outs
xor
xchg
dec
ds
cmps
ds
fcomp
sub
ret
mov
xlat
out
xchg
pop
ss
mov
fidivr
je
jle
enter
rcr
mov
gs
retf
scas
pop
shl
stos
call
in
das
in
sbb
retf
cmps
ficom
lahf
clc
jno
cmp
dec
mov
push
sbb
jg
mov
je
out
bound
mov
movs
aam
mov
jmp
pop
movs
push
cmp
adc
leave
push
add
jp
das
or
cmc
pop
lock
es
aad
fisub
mov
pop
dec
fs
push
sbb
push
and
lods
stos
sti
loope
mov
mov
inc
sbb
and
mov
int
pop
xor
int
push
xor
lods
(bad)
stc
jo
dec
shl
jg
(bad)
mov
xor
and
and
aas
xchg
cmp
pop
sub
pop
dec
stos
retf
mov
ja
jae
xchg
outs
dec
and
fstp
fisub
call
sbb
inc
add
das
fadd
loop
in
das
in
fidiv
inc
pop
adc
xchg
dec
mov
push
(bad)
mov
ds
in
xlat
fld
inc
cmp
mov
shl
adc
xor
mov
inc
mov
icebp
neg
in
add
jns
inc
loop
push
push
hlt
xchg
popa
mov
add
pop
pop
add
mov
mov
daa
cmp
nop
add
push
es
jb
cmp
ja
sub
dec
lods
jecxz
fs
(bad)
mov
rcr
dec
sbb
jae
add
pop
int3
sbb
rcr
xlat
jecxz
mov
sub
or
mov
and
mov
lea
mov
sub
clc
sub
mov
sub
mov
loope
mov
out
xchg
mov
xchg
pop
adc
push
leave
mov
mov
add
jnp
xor
out
cs
push
ins
sar
mov
shl
pop
stc
pusha
inc
out
dec
call
stc
clc
inc
lods
repz
pop
fnstcw
add
dec
movd
jae
sub
inc
out
inc
jns
mov
imul
xor
mov
dec
leave
test
fisubr
icebp
sub
mov
cmp
mov
call
icebp
add
inc
es
jl
jp
cmp
in
jl
mov
fs
imul
fld
int
movs
in
adc
cwde
push
in
mov
push
shl
jge
push
int
mov
nop
ret
mov
loopne
repnz
retf
cli
sbb
add
ds
cmp
and
test
push
adc
std
aas
sub
mov
dec
fdiv
js
(bad)
xchg
cdq
adc
xchg
fsub
jl
sbb
mov
xor
in
fstp
ret
push
stc
jmp
adc
push
popf
retf
lahf
xchg
in
int3
iret
xor
les
pop
inc
push
mov
aas
mov
adc
lahf
jb
js
in
add
sbb
mul
scas
xor
les
jbe
out
jb
pop
fcomp
add
js
cld
(bad)
sub
pop
mov
push
sub
imul
push
mov
jge
jg
jb
shl
ins
mov
in
popa
in
mov
in
mov
stc
popa
dec
add
sbb
xor
adc
sbb
(bad)
mov
dec
or
add
enter
and
mov
xchg
jmp
mov
leave
mov
xor
and
les
adc
cmp
sbb
xchg
and
mov
mov
pop
shl
or
nop
mov
call
frstor
outs
xor
mov
clc
mov
bound
clc
dec
pop
dec
push
inc
inc
push
inc
ins
adc
adc
jge
fidivr
mov
stos
or
pop
mov
test
call
xor
scas
cdq
and
cmp
xor
adc
jg
rcl
adc
push
outs
xchg
xor
stc
scas
dec
es
or
adc
xchg
sbb
hlt
pop
jb
jns
ins
sbb
sub
loop
(bad)
in
loopne
pop
push
iret
jp
clc
faddp
xlat
rol
inc
shl
(bad)
jmp
movnti
and
popa
inc
ins
cwde
xchg
push
cmp
jo
pop
sub
cmp
daa
loope
out
jge
pop
mov
mov
out
iret
jmp
mov
push
add
inc
(bad)
push
pop
xchg
fcmovb
jmp
popa
or
jae
xchg
rcl
or
mov
shr
(bad)
leave
xchg
nop
fadd
push
nop
aam
adc
out
and
leave
dec
out
jp
ss
dec
movs
inc
inc
xor
shl
jae
(bad)
mov
mov
out
ficomp
iret
es
in
fstp
fadd
sub
xor
inc
adc
jo
add
stos
cs
add
mov
cmp
mov
jne
push
popa
cwde
jne
(bad)
sub
out
(bad)
lods
xor
(bad)
(bad)
pop
cmp
js
or
scas
dec
rcr
xlat
jne
mov
xchg
push
loopne
into
icebp
ret
montmul
cmps
inc
pop
sub
ss
mov
mov
jae
xchg
inc
cmp
out
loope
paddusb
test
ss
or
(bad)
adc
aad
aam
mov
add
loop
call
out
push
(bad)
out
into
or
jnp
in
xlat
mov
sub
das
sbb
jl
repz
jb
pop
ficom
iret
pop
movs
pop
fmul
or
adc
loop
push
fadd
pop
mov
mov
jne
adc
lods
adc
bound
push
push
inc
cmp
aam
xor
mov
rol
jl
or
shl
jg
std
adc
mov
jle
adc
pop
(bad)
jmp
mov
das
fsubr
mov
cdq
xlat
daa
shl
pusha
sub
push
(bad)
dec
les
cmp
mov
popa
sbb
mov
adc
addr16
sub
mov
js
call
shl
xchg
mov
nop
ror
jl
ret
or
mov
out
xchg
inc
int3
adc
das
pop
movs
lods
clc
(bad)
jns
rcl
out
add
call
arpl
or
ja
sbb
push
inc
test
push
or
je
xchg
dec
dec
mov
or
inc
std
inc
popa
cmp
fst
xor
fidiv
push
pop
sub
push
xor
js
shl
loop
pop
pop
add
fst
adc
sti
jp
add
pop
daa
sbb
pop
adc
(bad)
std
jns
shl
in
xor
mov
outs
std
int
(bad)
ins
xor
mov
mov
aas
fist
cmp
pop
sar
lods
hlt
outs
fs
pop
jge
sahf
out
lds
sub
lds
aaa
mul
iret
(bad)
ss
inc
sbb
ret
xchg
push
adc
daa
shl
cdq
jecxz
fcom
test
mov
mov
retf
mov
rcr
fstp
pop
icebp
adc
imul
jmp
and
add
aam
add
pop
push
stos
push
dec
test
jae
adc
rcl
inc
inc
add
retf
mov
ins
(bad)
call
pop
mov
daa
into
mov
mul
and
or
and
xchg
cmp
idiv
push
adc
out
out
push
ret
and
shrd
addr16
jbe
sbb
je
movsx
mov
repz
mov
jmp
ins
or
or
xlat
fdivp
ror
and
(bad)
mov
or
push
mov
cdq
or
xor
stos
sbb
cmps
dec
movs
xchg
and
idiv
loop
xchg
sub
gs
xchg
sbb
dec
aas
mov
mov
cmp
xor
lock
sbb
mov
or
cmps
arpl
imul
mov
cmp
call
xchg
mov
ror
test
xor
fimul
pop
idiv
pushf
ds
push
mov
imul
xor
gs
and
data16
ja
adc
sbb
fs
or
or
xor
sub
pushf
jb
das
xchg
dec
add
cmp
int
and
not
jbe
cmp
xchg
jg
in
call
jmp
mov
pop
ret
xchg
sbb
into
push
rcl
mov
or
pop
retf
(bad)
(bad)
stos
or
push
push
mov
ins
jno
scas
dec
cmc
mov
dec
jns
xchg
mov
jmp
mov
or
scas
jnp
sbb
mov
imul
cmp
test
push
cmp
leave
fdivrp
cwde
adc
ja
dec
mov
fild
mov
push
loop
xor
add
sbb
push
sahf
shl
pop
xchg
stos
dec
mov
stos
ror
jmp
leave
push
pop
mov
mov
and
pop
dec
in
inc
xchg
das
dec
and
jmp
and
ror
cwde
movs
(bad)
pop
sub
adc
cs
aas
dec
mov
lods
push
lods
sbb
fsubr
mov
bound
mov
shl
jle
jnp
xchg
push
fidiv
jmp
std
cmc
dec
dec
sbb
(bad)
adc
mov
dec
mov
push
jmp
leave
jmp
int
push
add
dec
pop
cmp
add
cmp
xchg
test
jnp
adc
lahf
nop
dec
mov
popf
mov
mov
cmp
jno
shl
fst
ror
jl
cli
lea
xchg
and
test
not
mov
and
inc
jmp
bound
in
xchg
dec
dec
sti
push
leave
jne
ds
fdivrp
mov
iret
jns
inc
and
add
loopne
dec
and
cmc
shl
mov
mov
adc
sbb
cmp
lds
inc
adc
or
nop
sbb
aam
push
and
inc
iret
or
sahf
unpckhps
adc
xchg
jp
mov
shl
popa
mov
scas
lods
retf
loop
pusha
cmp
ffree
fwait
rcr
pop
int3
scas
lock
rcl
leave
pop
into
adc
call
mov
push
cmp
sub
push
add
xor
loop
es
push
mov
fnstsw
jge
push
out
mov
shr
mov
hlt
push
js
xchg
inc
pop
jg
jbe
xlat
loope
jne
hlt
es
cwde
out
push
lods
xchg
jecxz
fisub
imul
test
push
std
sub
push
push
jae
dec
add
jge
outs
inc
add
movs
inc
dec
sbb
ins
jnp
mov
xor
push
movs
ins
mov
jne
lock
daa
popa
xchg
and
add
into
add
sbb
adc
pop
es
inc
or
arpl
data16
daa
(bad)
xor
lahf
fstp
cmp
retf
movs
sbb
in
mov
shl
fidivr
fdivp
rcr
(bad)
shl
int
imul
test
shr
jle
jmp
mov
mov
push
sub
shr
out
mov
mov
fstp
xchg
cmp
repz
mov
cwde
inc
mov
sub
cmp
sti
inc
mov
out
xor
sub
cmp
jb
and
dec
repz
outs
adc
adc
adc
in
mov
dec
xor
imul
inc
pop
(bad)
mov
add
mov
ror
das
sub
aam
and
and
and
adc
adc
test
xor
push
jle
sbb
add
xchg
jg
std
cli
pop
adc
push
lock
in
jmp
out
in
into
gs
sbb
xchg
leave
jmp
fcomi
(bad)
sar
leave
xchg
(bad)
push
(bad)
fcom
sbb
cmp
adc
xor
xor
mov
inc
cmps
xchg
dec
out
jmp
dec
mov
mov
mov
sbb
call
xchg
pop
outs
test
sbb
xchg
or
sub
in
stc
xor
aam
xor
xor
(bad)
pop
lea
dec
imul
fs
es
xchg
jge
fs
pop
push
jae
mov
inc
and
dec
fimul
or
dec
jnp
fdiv
jle
or
int
enter
mov
into
sub
inc
aas
daa
loopne
push
xchg
sub
jmp
xchg
pop
fimul
pop
mov
pushf
or
fisttp
cmp
dec
dec
add
xor
retf
js
cli
hlt
(bad)
jb
and
and
movs
lock
jmp
adc
int
jg
inc
mov
enter
(bad)
and
retf
dec
push
retf
mov
xor
inc
arpl
xor
or
outs
stos
mov
daa
mov
pop
push
cmps
aam
adc
push
cmps
mov
and
scas
cmp
les
hlt
js
or
or
or
xor
mov
fisub
jns
cmp
jns
ret
sub
add
push
or
xor
test
pop
xlat
sub
mov
cmps
mov
mov
rol
add
and
les
cwde
lods
cmp
jecxz
adc
add
push
sub
jp
das
xchg
repnz
mov
sub
xor
adc
mov
fnsave
pop
or
xchg
gs
jmp
loopne
popa
jecxz
clc
dec
jns
mov
push
hlt
nop
adc
lods
in
pop
scas
lods
out
jbe
cs
aad
cs
cmp
cmps
jg
pop
pop
or
ret
or
dec
leave
(bad)
aam
dec
test
stos
jne
test
cmps
cmps
push
cmps
push
xchg
loopne
xchg
xchg
xchg
jns
pop
adc
mov
push
repnz
js
xchg
inc
jl
mov
(bad)
in
jno
mov
dec
rol
mov
pop
and
cmp
jg
mov
dec
pop
das
bnd
pop
jno
pop
push
aam
push
leave
inc
add
jae
cmp
cvtps2pd
or
cmc
mov
pop
xchg
iret
fidiv
dec
cmp
aad
cdq
and
pop
add
sub
cmp
adc
lods
or
jge
lds
sbb
in
pop
je
or
ret
stos
fisttp
adc
mov
mov
ins
nop
add
pop
jp
scas
pop
movs
and
push
shr
sbb
rol
or
retf
daa
dec
(bad)
aaa
(bad)
ja
sub
mov
lock
dec
out
dec
mov
test
lahf
mov
mov
push
xor
or
stos
dec
cmp
arpl
(bad)
imul
js
jp
dec
dec
or
loope
(bad)
bound
pushf
les
push
cmp
jl
fcom
adc
movs
or
push
adc
psrad
sbb
add
inc
mov
js
add
push
mov
xor
enter
test
fdivr
out
sub
pusha
mov
js
pop
bound
push
jno
adc
and
mov
sbb
pop
out
mov
or
adc
add
mov
ins
mov
mov
sub
movs
cli
repnz
add
test
lods
adc
out
and
cmp
out
(bad)
dec
push
rcl
(bad)
shr
retf
jmp
or
(bad)
lds
sbb
(bad)
mov
aaa
iret
add
xchg
and
xchg
daa
lds
fisttp
fst
test
cwde
clc
popf
xchg
add
movq
mov
popa
(bad)
js
push
and
lods
(bad)
mov
(bad)
jns
sub
mov
push
jmp
ins
sub
add
pop
pop
sub
dec
jle
loopne
pop
in
ja
idiv
jmp
dec
iret
sbb
pop
in
push
xor
js
cmp
scas
sub
push
arpl
ss
dec
jnp
push
mov
cwde
repz
dec
jg
sbb
mov
sbb
jbe
in
add
cmc
stc
sub
fadd
arpl
(bad)
call
push
xlat
out
or
jecxz
outs
sti
std
out
and
shr
pop
outs
push
dec
fidiv
jbe
fstp
js
test
add
adc
cmps
imul
fsubr
inc
les
pushf
rcr
pusha
pop
mov
add
dec
jp
aam
xchg
push
sar
xchg
jnp
fsubr
sbb
ficomp
add
add
xor
sub
dec
jae
rcr
jnp
ins
fs
xor
dec
or
frstor
cld
pop
or
inc
js
dec
mov
push
(bad)
pop
stc
fild
div
jp
cmp
sbb
movs
xor
push
jbe
fst
cmp
inc
cmps
or
outs
inc
push
stc
adc
xor
pop
jle
mov
push
mov
je
aad
shr
xchg
lea
adc
call
dec
out
sti
ret
ret
vcvtss2sd
mov
movs
mov
mov
mov
(bad)
mov
adc
into
xchg
int3
mov
in
mov
push
mov
lods
adc
popa
jmp
push
loope
cmp
out
and
cli
aam
jecxz
icebp
adc
cmp
add
icebp
in
andps
cwde
and
cli
pop
mov
sub
sti
pop
pop
push
mov
retf
mov
jnp
out
aam
ja
imul
imul
js
inc
cmp
arpl
jge
ins
or
jge
(bad)
adc
into
add
mov
xor
xor
mov
pop
jae
pop
push
dec
cdq
and
pop
dec
test
sbb
test
pop
push
or
pop
loope
cmp
inc
add
jmp
mov
lods
enter
adc
fild
jnp
inc
mov
jmp
imul
xor
out
push
lds
pop
call
sub
stos
mov
or
call
pop
loope
mov
hlt
stc
add
mov
scas
test
mov
adc
sub
lea
repz
fwait
outs
mov
icebp
out
mov
xor
or
pop
int3
push
mov
sub
push
push
gs
xchg
pop
ins
jp
lods
aaa
xchg
sub
popa
imul
pop
loope
xlat
cmp
(bad)
pop
jo
jnp
adc
mov
data16
adc
xchg
jle
xor
(bad)
and
xor
sbb
mov
push
iret
push
mov
ins
cmc
lahf
lods
test
adc
pop
bnd
out
pop
push
add
adc
mov
adc
add
ins
(bad)
(bad)
mov
movs
out
in
cmp
shl
dec
in
clc
sar
jp
sub
sbb
imul
(bad)
add
xchg
sub
rol
loopne
pop
push
pop
(bad)
aaa
sub
test
dec
sub
mul
outs
outs
mov
(bad)
shl
fdivr
pop
add
pinsrw
repz
test
adc
(bad)
call
imul
dec
ficomp
inc
cli
add
or
shl
test
inc
outs
sub
dec
ins
mov
popa
cwde
mov
(bad)
pop
shr
xor
aaa
cld
push
rcr
loop
add
jo
jae
je
lds
repz
jno
cmp
popa
aas
sub
mov
and
and
in
jl
xchg
sbb
cmp
fst
leave
mov
xchg
sbb
mov
mov
mov
addr16
pop
imul
out
cmc
loope
and
(bad)
loope
sbb
push
push
repnz
loopne
add
(bad)
(bad)
popa
push
sbb
lds
call
jb
jmp
cmp
dec
jne
cmp
lahf
mov
mov
fsubr
mov
mov
mov
retf
pushf
sahf
sbb
pop
popf
sbb
lea
mov
out
mov
lds
xchg
xor
jge
jne
jmp
test
cmps
and
mov
test
out
jle
push
arpl
dec
pushf
(bad)
push
ror
mov
adc
js
push
mov
clc
adc
xchg
(bad)
push
aaa
aas
dec
sub
jae
in
icebp
stos
and
pop
push
pushf
pop
pop
pop
dec
sub
or
or
(bad)
js
pop
adc
fbstp
xlat
or
pop
(bad)
daa
imul
ja
mov
jmp
inc
loop
test
mov
out
aas
popa
add
add
push
mov
push
cmp
iret
fcmove
sar
mov
scas
sti
fdivr
dec
cwde
xchg
mov
dec
mov
pusha
jl
in
mov
fdivr
call
xchg
das
inc
stos
jno
test
les
dec
test
popf
sub
pop
push
inc
iret
sbb
bound
dec
das
or
std
daa
imul
call
mov
loopne
fldcw
jle
jl
adc
and
jb
dec
lds
into
xchg
jno
ins
push
jle
test
cmp
mov
adc
and
aas
inc
mov
dec
pop
imul
mov
or
arpl
mov
fimul
inc
ret
mov
pop
add
xchg
cmp
inc
mov
mov
enter
shl
retf
jmp
dec
shl
ins
cmc
fsubrp
leave
fwait
or
inc
icebp
(bad)
sahf
test
adc
in
bound
add
(bad)
xchg
shr
ins
stos
push
adc
sub
jnp
(bad)
adc
movs
(bad)
mov
stos
jp
mov
(bad)
cmp
xlat
mov
mov
fst
test
xchg
test
mov
pop
cmp
cld
inc
and
push
pop
add
and
mov
shl
push
call
cmc
leave
test
add
or
inc
push
out
sbb
inc
push
lahf
repz
je
inc
into
dec
add
iret
jae
sub
mov
cmp
add
mov
frstor
jmp
cmp
and
ins
inc
or
push
fisub
pop
ror
xchg
xor
mov
inc
push
push
fbstp
arpl
leave
cmp
repnz
mov
push
adc
dec
fmul
aam
pop
enter
cmc
les
or
imul
mov
arpl
std
dec
out
mov
inc
mov
mov
lods
movs
adc
fidiv
in
inc
fild
add
(bad)
das
call
push
xchg
popf
int3
add
into
mov
mov
pop
mov
inc
or
xor
cdq
mov
jle
mov
jne
add
ins
dec
arpl
add
xchg
dec
adc
fsubrp
rcr
out
mov
push
jl
sahf
cmp
out
inc
push
xchg
sub
jg
add
test
fidivr
in
imul
arpl
sar
pusha
sub
sbb
jg
pop
leave
sar
dec
sbb
push
add
adc
out
popa
adc
addr16
sub
iret
mov
psraw
out
loopne
sahf
aad
jecxz
clc
aad
in
in
sbb
cdq
(bad)
add
push
clc
in
into
fdivr
sub
xchg
or
ftst
rol
sub
frstor
xor
arpl
mov
jns
stos
and
ds
scas
aas
and
lea
aad
out
(bad)
repnz
mov
push
lea
xchg
lea
cmp
stc
pop
(bad)
std
cmp
cmps
xor
ja
retf
push
fs
dec
in
pop
or
call
inc
dec
ins
mov
dec
push
addr16
inc
int3
inc
push
pop
cli
pop
sub
sub
jle
idiv
cmc
mov
pop
loop
out
xor
mov
jl
xor
mov
(bad)
dec
adc
push
adc
outs
sbb
je
push
int
add
jmp
cmp
out
(bad)
fs
icebp
scas
scas
dec
outs
cmp
out
sti
dec
addr16
jmp
inc
sbb
push
ds
mov
adc
and
push
jmp
adc
xor
dec
shr
retf
fild
repz
dec
mov
mov
stos
fwait
adc
mov
std
dec
fild
xlat
retf
jecxz
aad
das
mov
cwde
aam
call
movs
into
das
xchg
mov
mov
mov
jbe
aam
stos
imul
cmp
jnp
adc
ror
int
mov
adc
cmp
arpl
jns
xchg
js
dec
inc
sahf
mov
iret
xchg
sub
mov
and
popa
and
mov
adc
jle
pop
jno
pop
(bad)
push
cmp
or
rol
mov
pusha
add
out
fmul
push
sbb
add
xor
pop
shr
bswap
call
stc
loope
int
(bad)
mov
popa
(bad)
(bad)
or
call
mov
(bad)
push
inc
out
cli
(bad)
or
shr
les
sahf
xchg
sbb
out
pop
cmp
mov
stos
push
mov
mov
mov
lods
xchg
(bad)
pop
fcmovbe
ins
ss
fist
xchg
mov
or
pop
mov
push
js
lods
cmp
stc
cmp
psubw
cmps
shl
sbb
arpl
js
cmp
(bad)
xchg
push
and
inc
jecxz
push
or
pop
pop
bound
cmp
mov
mov
push
mov
mov
mov
xor
fs
out
pop
sub
xor
sub
sbb
in
mov
hlt
in
das
in
test
adc
in
std
add
dec
jecxz
pusha
xor
inc
mov
out
stc
in
int3
jmp
call
std
inc
loop
repnz
popa
movs
or
retf
push
(bad)
jle
retf
gs
int3
int
inc
pop
leave
mov
push
and
jo
jne
mov
cwde
ins
int
xor
sar
ja
rcl
mov
shr
jecxz
repnz
mov
rcr
dec
pop
mov
inc
mov
popa
arpl
add
sub
sub
(bad)
imul
fwait
xchg
xlat
xchg
inc
lahf
ja
pop
or
dec
xchg
leave
push
push
push
popa
int3
jmp
dec
in
push
scas
xor
(bad)
jbe
call
imul
sub
mov
(bad)
jmp
jge
and
cld
ficomp
pop
sub
cli
adc
xchg
jns
push
out
cmp
je
ds
adc
cmp
loop
push
mov
test
stos
loope
push
xlat
movs
ins
and
and
push
pushf
add
inc
inc
out
test
mov
lds
aad
int3
into
mov
jne
and
movs
pop
ret
push
out
mov
movs
sbb
movs
jne
mov
push
test
cdq
je
gs
jp
loope
jo
in
xlat
ja
push
sahf
mov
and
mov
jae
mov
cld
cmps
fst
lock
(bad)
test
ss
cmp
cmp
(bad)
cwde
jb
pop
icebp
xor
jge
jl
ins
jb
imul
lods
and
xchg
push
fwait
inc
rcr
fstp
ror
xchg
dec
popf
dec
es
outs
je
cli
inc
je
lds
dec
mov
call
cmp
fnstenv
adc
fwait
lahf
or
jo
or
jle
iret
loope
inc
data16
sbb
dec
in
dec
mov
and
sbb
push
jnp
(bad)
xchg
faddp
and
addr16
cwde
jb
adc
push
jl
js
mov
sub
lahf
mov
sub
movsx
hlt
mov
fst
xlat
out
rcl
adc
mov
das
cmps
or
cmps
mov
call
pop
mov
mov
mov
faddp
sbb
in
and
(bad)
cld
daa
sub
(bad)
in
mov
xchg
push
pushf
bswap
xchg
(bad)
mov
dec
int
jne
inc
pop
adc
or
ret
jb
js
xor
js
ins
sbb
xor
lods
and
test
enter
movs
push
lock
dec
xchg
push
pop
jl
(bad)
push
js
dec
(bad)
aam
call
add
icebp
out
pop
mov
xor
mov
xor
shl
into
and
fist
adc
push
mov
icebp
mov
mov
push
mov
leave
fidiv
stc
mov
jp
loope
addr16
cmp
jmp
sbb
nop
and
jle
cmp
sub
rol
lock
hlt
push
fmul
ror
inc
xlat
and
out
inc
mov
mov
test
mov
mov
std
test
mov
or
test
xor
out
lods
cwde
mov
fistp
lea
pop
sbb
mov
(bad)
(bad)
pop
retf
inc
or
and
inc
push
jle
jge
fucompp
push
pop
(bad)
jne
jmp
stos
retf
dec
cmp
adc
sbb
sbb
inc
dec
jne
inc
mov
xor
cmp
ret
push
or
fild
test
xor
cmp
and
sub
sbb
je
ins
sbb
dec
in
bound
dec
mov
dec
out
das
adc
loop
je
jmp
mov
inc
fs
shr
std
out
std
jbe
aam
xchg
push
fisubr
lods
sbb
and
sub
leave
sar
into
pushf
push
fisubr
(bad)
mov
call
ja
add
bound
cmps
add
rol
out
pop
push
in
shl
add
cmp
and
js
mov
mov
jg
mov
int
add
pusha
imul
mov
popa
pop
scas
cmc
sub
push
int3
adc
ret
dec
add
pop
mov
mov
jno
sbb
or
test
mov
mov
or
cmp
pusha
jns
ins
loop
or
in
rol
mov
pop
sub
jae
adc
pop
iret
das
cmp
out
(bad)
loope
loopne
out
mul
hlt
jmp
mov
ret
fistp
lods
hlt
sub
jecxz
and
ret
xchg
sub
ficomp
sti
or
mov
mov
ins
outs
mov
mov
mov
jl
mov
mov
mov
adc
adc
mov
sbb
mov
pushf
js
xchg
and
repz
data16
mov
dec
dec
or
repz
jg
ja
outs
jge
jg
jge
mov
fld
push
ret
push
hlt
retf
xchg
or
dec
gs
cmps
movs
test
dec
jmp
pop
mov
call
xor
push
dec
inc
and
xor
cmp
sub
push
push
dec
(bad)
loop
dec
push
push
out
movs
dec
add
sbb
sbb
add
mov
cld
mov
mov
cwde
add
rol
out
cld
pusha
cmp
jo
outs
jmp
xor
or
stos
pop
xor
pop
mov
jns
fbstp
test
xor
jmp
fnsave
cdq
aaa
fcomp
mov
mov
out
xchg
inc
sbb
lds
inc
jecxz
pop
imul
dec
jns
jg
mov
lea
mov
mov
outs
mov
push
fs
and
push
pop
xor
retf
pop
cmp
imul
sub
enter
dec
mov
mov
push
sbb
in
mov
out
pop
mov
aas
pop
pop
or
std
adc
adc
inc
inc
push
xchg
idiv
daa
outs
cdq
pop
jae
and
data16
cmp
or
push
addr16
lock
sahf
jno
add
jae
adc
push
adc
dec
dec
cmp
stos
std
cmc
iret
shr
ror
inc
fld
fsubr
data16
sti
lock
or
cli
ret
ret
mov
cmp
data16
add
xchg
sub
vmwrite
fsubr
push
out
cs
push
test
out
repnz
test
inc
inc
xchg
xchg
cwde
xchg
out
cmc
pusha
nop
xor
or
mov
repnz
in
test
mov
jae
jae
xchg
into
or
xchg
push
inc
add
cmp
daa
aas
outs
cmp
jle
enter
mov
adc
push
aaa
test
sti
dec
push
es
cmp
scas
mov
or
fidivr
aam
inc
push
inc
push
dec
sub
sub
or
xchg
sbb
xchg
xor
and
jae
int
stos
out
popa
mov
dec
push
or
dec
cwde
jno
int3
xchg
xor
rcr
addr16
std
fimul
and
bound
sbb
pop
(bad)
js
sbb
mov
hlt
push
icebp
xchg
mov
retf
mov
xor
jns
sub
adc
pandn
fisub
(bad)
sti
mov
xchg
sahf
push
jnp
(bad)
std
leave
cdq
mov
inc
movs
xor
sub
out
fsub
add
jl
sti
xchg
pop
stc
dec
aam
jnp
pop
mov
xchg
gs
js
dec
inc
jo
movd
inc
pop
mov
mov
mov
push
add
cld
aaa
js
dec
push
cmp
test
lea
sahf
cli
mov
push
adc
ret
daa
xor
addr16
cmp
dec
add
mov
pop
pushf
jge
mov
aaa
das
xor
fcmovbe
jno
mov
jb
outs
jne
or
sbb
cmps
dec
adc
adc
pop
pop
pop
xchg
rol
cwde
fcomp
lock
xchg
push
ret
movs
outs
xlat
cmp
xchg
or
int3
jbe
nop
sbb
in
add
cmp
mov
hlt
call
fsubr
aad
pop
jnp
lods
cmp
lods
or
ret
outs
cdq
into
hlt
xchg
aad
xchg
outs
movs
fadd
mov
mov
mov
lock
inc
in
ror
retf
cli
push
jmp
or
test
mov
cs
je
pop
push
or
imul
gs
dec
mov
cmp
xchg
(bad)
loop
mov
dec
jno
and
jne
adc
push
ins
cmp
sbb
add
clc
adc
add
xor
es
pusha
or
push
sub
fs
mov
xor
mov
and
push
and
sub
stc
std
fmul
push
pop
stos
les
mov
repz
(bad)
sub
fisttp
xor
(bad)
(bad)
cmp
fld
jl
mov
push
push
mov
adc
pop
imul
push
xlat
aad
jmp
mov
cmps
jmp
mov
add
jae
adc
jmp
test
and
pop
test
neg
push
fdivrp
outs
jmp
std
retf
loope
movs
xchg
xchg
in
aad
xchg
pop
pop
dec
inc
push
cmp
xor
push
jle
mov
add
mov
pop
fist
retw
jnp
xchg
mov
inc
mov
mov
mov
ins
mov
imul
push
out
cdq
and
pop
xchg
repz
push
in
out
dec
push
test
test
outs
das
dec
stos
jne
loope
mov
dec
mov
inc
loope
pop
inc
jmp
push
xchg
xor
pop
or
xchg
jecxz
imul
or
adc
dec
xor
js
xchg
mov
out
lahf
add
sbb
cdq
ins
repz
out
add
cdq
push
nop
ja
movs
jnp
ins
xor
ja
xchg
das
or
aas
(bad)
popa
xchg
cs
mov
and
add
cli
movs
sub
or
pop
add
fisubr
loope
inc
lahf
sbb
mov
das
data16
and
push
rol
or
xor
(bad)
fld
inc
imul
les
call
es
fidivr
pop
cmc
outs
repnz
shl
arpl
add
add
push
pop
and
mov
jmp
outs
out
push
rcl
xchg
adc
js
jmp
inc
push
xor
stc
aaa
and
push
(bad)
fimul
push
push
push
mov
mov
adc
(bad)
adc
in
inc
mov
xchg
dec
pushf
add
sub
mov
out
(bad)
outs
pop
xchg
sbb
xor
sahf
ins
neg
retf
xchg
(bad)
xor
call
push
loop
mov
cmp
retf
jmp
icebp
test
mov
outs
xlat
jg
not
xchg
add
mov
cmp
cmp
push
jns
xor
stos
(bad)
sbb
inc
out
pop
jl
scas
xor
movs
jg
lahf
inc
adc
adc
pop
mov
mov
jbe
add
outs
mov
sar
shl
mov
leave
jmp
out
adc
gs
rol
inc
movs
les
out
ins
inc
sti
mov
and
mov
mov
jnp
sbb
and
inc
push
dec
retf
jne
mov
pop
xchg
sub
xchg
and
mov
dec
js
mov
xchg
ror
mov
pop
fsubr
ja
scas
dec
add
add
dec
xchg
dec
cmp
xor
ror
js
into
cld
repnz
sbb
cdq
fild
push
fild
add
dec
in
fdivr
mov
lods
fidiv
mov
shl
ins
mov
les
je
fwait
dec
pop
rol
push
mov
cmp
fild
or
(bad)
fbld
popa
xor
leave
dec
adc
push
iret
jno
aas
inc
sbb
loope
jne
shl
rcl
push
mov
mov
cmp
not
push
pop
cdq
adc
push
xor
add
je
cmp
retf
mov
or
jno
test
data16
imul
pop
(bad)
adc
pop
test
jns
popw
pop
xchg
sub
jmp
mov
cmp
jecxz
pop
fwait
mov
(bad)
jnp
call
pusha
inc
dec
fimul
fadd
push
and
and
fs
sbb
scas
inc
xor
fstp
jnp
xchg
sub
je
xchg
test
adc
iret
and
aas
in
sahf
adc
out
(bad)
mov
and
imul
iret
adc
sbb
shl
(bad)
packuswb
sub
(bad)
rcl
fsub
fs
jns
or
jo
adc
mov
loop
and
stos
or
pop
cmp
inc
adc
jg
jmp
pop
je
arpl
pop
push
cli
ds
mov
outs
in
enter
pop
pop
daa
movs
call
adc
mov
pop
adc
fucomp
outs
mul
lahf
jmp
mov
mov
(bad)
out
adc
repz
jg
dec
sbb
imul
dec
popa
out
xchg
adc
push
test
sti
and
into
das
fsubr
cmp
nop
call
stc
jns
cs
adc
sub
mov
stos
inc
in
scas
push
cmp
cld
das
dec
cmps
imul
add
jnp
(bad)
mov
movs
retf
ins
xchg
jae
jg
sub
mov
add
icebp
inc
gs
jno
rcr
xchg
mov
loope
ret
(bad)
inc
js
ss
adc
sbb
jnp
jo
clc
jo
scas
inc
push
mov
jle
mov
lods
mov
and
lahf
push
test
fst
les
xor
adc
retf
popa
pusha
inc
mov
pop
movs
or
xchg
mov
cwde
lahf
mov
into
push
ins
icebp
adc
add
cmp
enter
push
inc
dec
ret
iret
das
push
mov
fild
mov
scas
and
xchg
xchg
out
(bad)
cli
sti
in
jb
dec
push
mov
shl
fwait
add
mov
jbe
xchg
in
aad
or
jmp
aas
vpmulhuw
push
mov
sbb
lods
mov
test
sub
sbb
lock
xchg
xchg
adc
cmps
sbb
loopne
and
test
sub
daa
outs
lods
pop
cmp
(bad)
pop
dec
cmp
add
mov
sbb
test
inc
stos
fst
add
and
rol
aad
cmp
mov
cmp
dec
cmp
popf
mov
sub
aaa
mov
idiv
retf
pop
leave
xchg
pop
push
jle
imul
cwde
pop
mov
adc
ins
xchg
into
sub
movs
jnp
lock
imul
enter
(bad)
jmp
stos
mov
xor
popa
lea
das
push
test
push
movs
ret
leave
retf
popa
xchg
dec
sub
adc
shl
aam
aas
cmps
imul
pop
and
adc
and
in
pop
ja
shr
mov
cmp
xchg
mov
push
sbb
cmp
repz
icebp
inc
inc
or
pop
mov
test
stc
rep
icebp
jae
mov
xlat
and
push
mov
lds
push
add
imul
das
and
xchg
movs
cmc
xchg
sub
inc
mov
mov
stos
das
mov
in
std
push
call
jle
enter
imul
sbb
repnz
fiadd
adc
nop
fcomp
rcr
fld
ins
cdq
and
mov
mov
aam
out
or
(bad)
sub
lock
sbb
xchg
jnp
mov
cli
ja
sbb
lods
jb
pop
sbb
add
sbb
sahf
je
fistp
lods
(bad)
fcom
data16
mov
cmp
jns
(bad)
into
gs
pusha
lods
lods
mov
inc
sub
sub
test
push
mov
into
jg
inc
or
stos
test
adc
sbb
xchg
xor
mov
imul
in
mov
sub
int3
jbe
repnz
xchg
pop
pop
cmp
cs
call
sbb
jmp
aad
and
stos
and
nop
fwait
and
dec
hlt
outs
xor
mov
jecxz
inc
dec
dec
jp
jmp
jg
xor
dec
jns
and
inc
daa
sub
pop
xchg
xchg
ins
dec
(bad)
aam
idiv
fidivr
push
jle
je
dec
sbb
jne
fld
push
leave
movs
pusha
cs
cmp
dec
fidivr
fist
pusha
fnstcw
scas
dec
adc
(bad)
jg
(bad)
pushf
popa
mov
sbb
add
adc
cwde
xor
cmp
fld
push
push
adc
mov
jge
fsubr
fdiv
jbe
cmps
push
jmp
sbb
mov
inc
jmp
xchg
(bad)
xchg
lahf
daa
lahf
mov
aaa
into
(bad)
or
test
imul
fld
xchg
inc
add
cmp
inc
pushf
rcr
push
pop
mov
iret
mov
enter
push
sbb
xchg
or
mov
add
or
dec
push
mov
(bad)
in
cs
arpl
mov
push
rol
inc
pop
xchg
daa
mov
cmc
adc
mov
xor
aaa
push
xchg
push
cli
and
sbb
arpl
cmp
cs
jmp
lods
lea
or
dec
mov
xor
ret
add
adc
retf
into
sbb
xchg
clc
in
dec
loope
xor
xchg
fst
push
add
mov
aad
sub
loope
mov
add
popa
adc
push
ins
mov
test
adc
stos
sub
lea
ja
push
std
mov
mov
xchg
sbb
cld
jns
add
aas
loop
jae
jo
test
rcl
imul
xor
icebp
stc
inc
dec
imul
sar
mov
or
or
dec
retf
mov
aam
jmp
test
sahf
icebp
inc
dec
(bad)
push
call
ret
popf
sbb
xchg
and
mov
mov
(bad)
(bad)
daa
imul
pop
in
sbb
call
nop
pop
xchg
retf
cmc
test
pop
retf
pop
sbb
mov
stos
in
aas
popa
cmps
inc
mov
add
and
add
push
sub
push
shr
or
jp
mov
cmps
push
inc
add
sub
mov
fmul
inc
(bad)
pusha
(bad)
jge
jbe
retf
or
cld
xor
shl
out
or
mov
mov
pop
fmul
ins
pop
lock
outs
push
outs
xor
sub
sbb
and
cdq
ds
jge
and
mov
jmp
or
push
add
jl
and
lahf
pusha
daa
mov
xor
cmp
fcom
leave
loop
sar
aad
iret
aad
add
or
inc
xchg
shl
ret
pop
lods
pop
pop
scas
cmp
retf
dec
jmp
scas
icebp
dec
scas
(bad)
and
sub
(bad)
inc
sub
mov
dec
movs
fs
and
arpl
pop
mov
mov
mov
push
cwde
xor
stos
repnz
mov
dec
inc
dec
in
sub
mov
stc
inc
and
out
sti
adc
mov
movs
mov
jmp
ins
pop
mov
icebp
ins
lahf
and
dec
popf
leave
xchg
or
mov
add
cli
pop
mov
nop
adc
lock
mov
xor
std
sbb
(bad)
adc
mov
cmps
mov
mov
pop
xor
nop
sub
fsub
ja
(bad)
lahf
sbb
inc
repnz
mov
sbb
adc
adc
test
xchg
es
jmp
xchg
sbb
test
cwde
xor
mov
xchg
cmp
or
jmp
loop
bound
sbb
jbe
aam
add
mov
jo
push
adc
mov
push
mov
jecxz
xchg
xchg
(bad)
and
push
mov
sbb
dec
fisttp
jmp
dec
pop
call
jno
sub
idiv
jae
ins
or
jmp
ds
jnp
mov
pop
stos
jae
jmp
fdiv
jmp
jg
pop
or
inc
xchg
sub
sub
or
push
test
xchg
iret
cs
imul
inc
inc
gs
xor
dec
xchg
jmp
jmp
pop
ret
repnz
mov
cld
xor
mov
mov
xor
loope
cmp
jne
gs
fimul
imul
cmp
mov
scas
ds
sub
xor
adc
mov
imul
je
mov
cmps
push
mov
sbb
ficomp
xchg
sti
inc
inc
out
arpl
cmp
mov
pop
xchg
cmp
inc
pop
cmc
add
push
mov
inc
in
imul
lds
aad
jl
jb
cmp
ss
mov
aad
xor
in
ret
aas
enter
es
(bad)
sbb
jb
leave
cwde
push
popf
sbb
mov
sbb
push
cli
dec
dec
in
nop
sub
cmp
sub
mov
and
dec
xlat
stos
mov
inc
ret
add
push
nop
mov
repnz
stos
imul
xchg
push
sar
xchg
fdivr
jmp
cmp
mov
repnz
popf
cmp
outs
(bad)
pushf
shr
shl
dec
les
bound
mov
sub
movs
jne
cmp
xchg
pop
lods
jmp
fiadd
call
pop
and
push
adc
and
jge
inc
mov
hlt
jp
gs
jae
mov
sbb
sbb
cmp
fimul
dec
dec
xor
sub
xlat
jns
bound
sti
dec
dec
pop
or
ins
inc
std
mov
xchg
inc
pop
scas
push
shl
neg
inc
rcr
in
push
popf
adc
movs
ss
dec
enter
rcl
jmp
sbb
test
push
loop
jno
imul
jge
jb
outs
inc
sbb
or
pop
push
mov
jnp
jge
int3
(bad)
idiv
repnz
sbb
cmps
dec
xchg
sbb
add
rol
inc
mov
ins
(bad)
or
mov
push
outs
or
enter
cmp
add
inc
popf
(bad)
xor
xor
pop
ret
jmp
jne
mov
pop
pushf
pusha
(bad)
push
sbb
cmps
or
dec
push
inc
(bad)
pop
cmp
call
mov
xchg
bound
jmp
cmp
xchg
xor
leave
das
arpl
aaa
push
mov
and
outs
pushfw
in
rcl
pop
setnp
mov
pop
mov
sub
pop
jmp
dec
stc
pushf
loope
jns
outs
test
cmps
pop
scas
push
pop
enter
jo
xchg
loope
xchg
xor
pop
push
cld
bound
adc
xchg
lods
sbb
js
(bad)
push
iret
mov
mov
pop
inc
or
retf
push
cmp
jl
outs
repnz
rol
dec
lock
adc
out
inc
adc
mov
pop
sahf
jnp
lds
call
add
xchg
cmp
imul
ficomp
jo
adc
fsub
xchg
call
pop
mov
and
enter
jl
cmps
nop
push
inc
mov
ror
lea
data16
xchg
(bad)
and
jecxz
mov
(bad)
and
push
cmp
js
mov
fisub
mov
push
inc
test
inc
div
dec
test
fwait
add
xor
sti
jbe
sbb
loope
xchg
lds
push
cmp
lods
sub
jno
xor
xor
ins
fmul
test
jmp
loopne
fs
mov
mov
mov
jnp
mov
std
inc
ror
inc
cmps
sti
scas
add
fisttp
mov
or
jns
jns
push
mov
stc
jne
and
bound
pop
adc
adc
mov
cmp
call
add
stos
shl
call
leave
adc
enter
shl
sahf
sub
loop
das
sbb
jmp
ret
cmps
addr16
cld
dec
xlat
dec
xor
mov
xchg
push
mov
cs
or
jp
in
cmp
dec
jg
pusha
out
mov
or
js
xchg
mov
and
xor
mov
(bad)
int3
adc
jns
add
rcl
pop
les
les
inc
int
(bad)
mov
dec
(bad)
sbb
add
lahf
inc
cmp
push
mov
sbb
sub
sbb
cwde
cld
cmp
jo
fsub
ins
ficomp
jg
out
xor
mov
cwde
aas
xor
ror
cdq
dec
(bad)
jle
jnp
fiadd
js
test
sub
sub
neg
out
mov
cmp
mov
pop
icebp
imul
aam
pop
adc
push
rcl
test
and
loope
pop
push
xchg
inc
enter
bound
aad
adc
call
dec
fld
cld
mov
test
and
xor
cmps
push
xchg
in
imul
in
aam
pop
sbb
rsm
mov
and
push
stc
ja
sar
or
jmp
or
call
fnstsw
jecxz
daa
call
ficom
dec
xlat
bound
adc
mov
mov
in
mul
dec
dec
jmp
sub
mov
fisttp
test
les
sbb
es
scas
mov
test
lea
fidivr
add
shl
cs
and
mov
sub
jae
jns
pushf
fisub
xchg
dec
jb
dec
cli
mov
xor
retf
sub
xlat
push
loop
jo
cli
jb
fisubr
arpl
lds
mov
push
fistp
mov
dec
fcomp
idiv
das
ins
shl
fstp
xchg
xchg
mov
or
push
cwde
cs
jl
xlat
dec
in
or
fisttp
lahf
loopne
cld
ss
stos
loop
(bad)
sbb
and
sub
test
mov
dec
stos
imul
neg
dec
shl
xchg
sbb
pop
lea
mov
sub
mov
inc
cwde
pop
pop
dec
xchg
rcl
outs
jno
jl
mov
add
adc
jnp
mov
xchg
dec
xchg
rol
fisubr
out
pop
pop
mov
nop
inc
cdq
add
adc
xor
fwait
mov
cmp
mov
out
xchg
xchg
aad
frstor
and
mov
clc
inc
push
inc
(bad)
and
push
lock
push
cmp
xlat
jnp
fimul
scas
pop
adc
dec
rcl
jmp
test
and
aaa
outs
in
test
test
imul
adc
jmp
and
adc
iret
push
cld
cs
xor
pop
out
js
inc
inc
mov
push
hlt
and
adc
push
addr16
cmps
ins
fcmovne
pop
sti
popf
cmc
and
icebp
mov
cmps
sub
das
in
loope
aam
push
(bad)
dec
rep
xchg
push
jnp
popf
iret
xor
ins
pop
ret
mov
or
mov
je
scas
add
dec
rcr
jo
dec
add
mov
mov
popf
mov
mov
push
iret
sbb
xor
(bad)
jb
in
and
(bad)
aas
fsub
(bad)
push
div
mov
mov
cmps
and
cmc
cmp
sbb
pop
loope
arpl
jbe
stos
stos
or
lahf
popa
and
inc
xor
call
push
cmc
xor
push
xchg
lock
stc
dec
cwde
clc
sahf
jg
or
imul
sub
rcr
mov
inc
test
addr16
sbb
lods
stc
jge
arpl
(bad)
and
cmp
pop
sbb
rcl
push
int
cld
inc
inc
fbstp
xlat
stos
inc
cmps
add
add
mov
inc
inc
sti
pusha
call
out
mov
ja
ret
int
cs
xor
scas
mov
mov
pop
test
push
pusha
loopne
add
mov
mov
mov
or
ss
rol
mov
add
mov
aas
inc
out
call
aad
mov
add
lods
sti
in
xor
and
sti
pop
loopne
jae
leave
das
(bad)
jg
jae
loope
sub
and
pop
push
movs
or
rol
cli
movs
cmp
inc
rcr
mov
xchg
cmc
daa
jae
ins
adc
or
popa
mov
(bad)
mov
jle
lods
mov
mov
mov
xor
mov
cmps
call
push
mul
mov
xor
mov
push
lods
(bad)
(bad)
in
test
adc
adc
movs
inc
fcmovbe
inc
xor
loopne
repz
pop
(bad)
or
mov
ds
and
inc
les
idiv
call
test
sbb
idiv
sub
pop
ret
cli
outs
sti
ja
(bad)
addr16
cmp
and
je
in
loop
int
xor
sub
jge
mov
inc
loop
or
pop
frstor
into
xchg
fild
inc
stos
mov
mov
sub
or
mov
(bad)
jb
ror
ins
sbb
mov
daa
push
xchg
xchg
adc
push
test
rcl
adc
ins
loope
call
add
jne
xchg
pop
adc
sbb
call
mov
push
mov
sbb
adc
call
or
inc
mov
xor
jp
(bad)
push
(bad)
and
div
xchg
cmp
shl
mov
sbb
jmp
push
push
push
ss
dec
fcomp
stos
pop
or
and
push
add
cs
sbb
imul
inc
(bad)
les
js
fadd
lahf
push
popf
add
test
dec
shl
repz
add
dec
aas
test
test
and
loop
pop
test
dec
leave
sahf
ins
lea
int
iret
and
mov
pop
xchg
pop
repnz
sbb
popa
sti
cli
ins
in
pop
adc
adc
inc
fisttp
cmps
and
and
ficom
clc
push
in
retf
ror
fst
mov
iret
mov
xchg
xchg
in
icebp
pop
movs
add
inc
cmc
das
outs
sub
sbb
or
call
sub
addr16
(bad)
and
dec
es
movs
jne
(bad)
push
retf
fwait
popf
enter
test
movs
sbb
movs
add
lods
outs
pop
mov
cmp
ss
sbb
dec
push
push
and
rcr
bound
jae
sahf
pop
adc
aas
stos
mov
xchg
push
popa
lods
loope
(bad)
xor
jecxz
jl
nop
hlt
or
dec
fwait
mov
or
dec
rcl
clc
sar
xor
mov
(bad)
outs
cdq
sti
stos
dec
fwait
adc
fild
mov
jle
xchg
fist
mov
es
sahf
retf
inc
add
adc
out
(bad)
ret
pushf
sbb
xchg
inc
jmp
lea
jmp
jb
mov
mov
xor
sbb
dec
mov
lods
das
mov
jae
mov
push
retf
adc
lds
mov
xor
pop
jmp
aaa
jmp
sub
loopne
add
xsha256
cmps
xchg
aaa
mov
xor
pop
inc
mov
jmp
dec
xlat
data16
hlt
and
pop
arpl
pop
shl
int3
movs
loopne
rcl
adc
sub
aaa
jecxz
lods
aaa
out
js
loope
cli
add
lds
fldenv
mov
add
or
cli
jbe
add
popa
mov
cs
dec
mov
shl
aas
jnp
sbb
jecxz
inc
ret
in
loope
cwde
push
pop
and
scas
push
mov
push
imul
or
add
repnz
cmp
xchg
or
pop
sub
out
sub
pop
xor
cdq
adc
in
sub
xchg
push
mov
pop
retf
sub
in
ds
rcl
loop
fimul
cmovnp
xor
sbb
mov
jns
or
sub
add
xor
shl
daa
mov
adc
ins
xor
sti
add
jb
je
aam
movs
shr
dec
fsubr
les
fdiv
xchg
xor
test
je
push
pop
not
call
adc
sahf
mov
(bad)
arpl
call
adc
xor
push
mov
xor
mov
sub
sbb
push
mov
test
mov
sbb
pop
mov
or
adc
cmp
mov
jg
imul
imul
add
ror
mov
fldcw
and
pop
leave
cmps
sub
mov
jmp
out
shr
mov
(bad)
ins
out
xor
sub
arpl
mov
xchg
add
inc
mov
fidiv
jo
push
mov
pop
adc
sub
mov
hlt
and
sar
fld
sbb
sub
dec
adc
xlat
jp
daa
imul
adc
rcr
inc
jae
fisubr
sbb
add
call
xor
sbb
fdiv
push
jmp
ins
rcr
sub
(bad)
shl
and
mov
ins
outs
imul
popa
dec
mov
push
mov
pop
sub
add
out
inc
je
dec
call
fst
jecxz
jl
pop
stos
fisttp
imul
xchg
jle
mov
movs
sar
jae
sahf
xor
mov
cmp
movs
inc
jmp
xor
xor
push
popf
and
xor
pop
cmps
test
xchg
data16
idiv
(bad)
(bad)
jmp
dec
stos
adc
sar
xor
clc
xor
jmp
xchg
hlt
push
and
les
test
xchg
outs
sbb
and
jg
fst
push
shr
out
or
das
and
cmp
(bad)
shr
jmp
in
pop
lahf
imul
jno
mov
jae
xor
dec
icebp
xlat
enter
fwait
or
sbb
mov
and
xchg
das
fld
adc
xor
lahf
outs
mov
xchg
mov
daa
cmp
cmp
repnz
mov
push
les
test
mov
mov
mov
xchg
(bad)
movs
ins
mov
ds
fs
push
mov
jl
add
popf
lock
add
mov
enter
add
sar
lds
gs
xchg
icebp
fistp
sahf
push
idiv
pop
mov
xchg
loop
cwde
das
stos
outs
sub
enter
outs
in
iret
cmp
pop
inc
inc
out
sbb
or
mov
pop
movs
pop
test
cmp
mov
out
jle
in
pop
mov
pop
inc
add
jae
jo
rcr
(bad)
sub
mov
ret
(bad)
mov
(bad)
xor
mov
out
or
jge
imul
lahf
loop
mov
daa
sbb
mov
cmp
pop
(bad)
hlt
inc
jle
jp
out
pop
jecxz
jl
das
in
out
inc
pusha
adc
shl
sub
and
lds
movs
jg
test
mov
xchg
add
cmc
inc
(bad)
iret
xor
xor
xchg
lods
inc
and
mov
arpl
adc
adc
sahf
les
test
adc
test
sbb
movs
cmp
dec
mov
stos
add
clc
jecxz
iret
adc
popf
jbe
retf
aam
jmp
and
and
ds
mov
sub
dec
mov
push
clc
and
in
retf
dec
jnp
into
jge
out
leave
dec
push
in
jns
pop
je
in
lods
push
cmp
or
std
aas
pop
retf
xchg
mov
retf
sub
fistp
(bad)
pop
mov
kaddb
dec
cs
sbb
mov
xor
or
adc
cwde
data16
pop
sahf
bound
clc
std
jl
sub
sbb
xchg
jns
(bad)
and
xor
cmc
push
outs
mov
xor
rol
pop
jg
xor
xchg
loop
fidiv
popa
loope
ror
les
out
outs
inc
retf
dec
lods
enter
push
mov
mov
pop
out
add
cli
jge
dec
dec
inc
jmp
or
test
sahf
ins
(bad)
cdq
movs
cmp
das
pop
out
cwde
or
pop
rcl
std
fistp
pop
add
xchg
sub
imul
pop
mov
mov
loop
sub
cmp
mov
ss
jmp
ins
xchg
outs
scas
in
inc
sbb
pop
call
adc
sub
cwde
mov
sahf
(bad)
hlt
sub
lea
xchg
and
fsubr
ins
loopne
scas
fcom
outs
dec
vunpcklps
and
sub
adc
out
popa
test
mov
jle
push
(bad)
(bad)
icebp
push
neg
(bad)
push
jmp
ror
ja
mov
aaa
xchg
arpl
lds
xchg
outs
je
mov
sub
shl
xor
imul
sbb
stos
jp
popaw
leave
jmp
int3
jae
loopne
push
push
stos
jmp
pop
sub
popf
addr16
xchg
fnstsw
stos
mov
pop
std
adc
inc
imul
shufps
repnz
(bad)
cmp
das
adc
int
mov
or
or
mov
jmp
loopne
retf
cmp
xchg
(bad)
shl
mov
mov
clc
adc
dec
adc
push
cmc
dec
cmc
sar
jno
and
repz
ss
jg
popf
inc
mov
sub
pop
sar
jo
inc
jb
adc
das
(bad)
jg
pop
xor
sbb
push
aad
dec
xchg
popa
ror
lods
ret
jg
les
rol
cmp
adc
adc
inc
xlat
mov
and
add
add
push
mov
into
jne
arpl
movs
inc
push
(bad)
fidiv
leave
jne
lds
in
push
adc
stc
lds
adc
xchg
clc
pop
retf
jg
cmp
pop
mov
cmc
pop
jp
pop
stc
jecxz
and
fisub
add
popf
jb
ret
ins
mov
cmp
pop
dec
mov
fwait
movaps
int3
cmp
pop
cmc
xchg
pop
stos
pop
push
loope
dec
cmp
mov
mov
or
test
mov
popa
(bad)
in
lea
push
cmp
out
es
call
(bad)
sub
adc
xor
test
push
icebp
and
ds
xor
imul
pop
jecxz
icebp
pop
imul
js
push
call
push
xchg
iret
mov
sar
mov
mov
lds
mov
pop
mov
cmp
rol
mov
dec
repnz
cmp
xchg
jecxz
jbe
loopne
enter
sbb
mov
cs
and
or
(bad)
leave
xchg
inc
push
call
adc
(bad)
sti
or
gs
les
ins
push
idiv
xchg
adc
outs
mov
dec
iret
dec
add
je
repz
test
les
ror
xchg
dec
add
inc
xchg
push
bts
mov
jno
shl
in
jb
icebp
movs
xor
xor
outs
sahf
test
and
jbe
dec
xchg
mov
aad
aam
and
pop
and
jmp
repz
adc
cli
add
(bad)
inc
mov
fiadd
stos
inc
aam
imul
sub
inc
adc
cmp
inc
xor
outs
pop
sahf
push
xchg
fisttp
jnp
retf
test
call
or
gs
push
stc
xchg
jmp
push
mov
dec
sbb
and
cmp
lods
outs
xor
sbb
ins
jl
jp
fsub
mov
popf
packssdw
inc
movs
je
icebp
inc
into
pop
cmp
movs
add
sub
fimul
arpl
dec
add
xchg
(bad)
das
movaps
push
in
mov
sub
cmp
sbb
push
sbb
sub
jnp
push
cmps
(bad)
cdq
cwde
push
ret
(bad)
outs
loop
retf
pop
stc
sub
fistp
jne
jecxz
cmp
cs
std
add
ja
fst
cld
sti
leave
gs
(bad)
mov
and
lods
inc
jnp
mov
pop
pop
mov
out
push
push
push
or
daa
ret
mov
and
jl
sbb
jp
out
jb
fdivr
mov
and
pop
pop
push
shr
pop
jg
sbb
in
sbb
pusha
cmp
adc
and
push
jbe
pop
sbb
xor
jp
cmp
jbe
mov
out
loop
ficom
out
aas
xchg
arpl
push
cdq
lahf
daa
sahf
push
add
or
push
sub
outs
mov
sub
adc
stos
xor
inc
shl
jbe
pop
sub
jp
and
inc
hlt
popa
push
shl
ret
mov
cdq
inc
adc
mov
inc
ja
pop
inc
lea
mov
pop
test
mov
or
mov
out
loope
aad
mov
pushf
ins
aam
stos
inc
mov
jns
inc
ins
nop
fmul
lods
std
cmp
mov
scas
icebp
push
add
js
aad
leave
mov
push
repnz
loopne
mov
jnp
add
pop
fsubr
mov
inc
lds
fstp
jmp
inc
sbb
loope
fdivrp
xor
or
loope
rol
cmc
dec
into
push
cmp
xchg
and
iret
add
pop
adc
ins
icebp
mov
or
daa
mov
sbb
arpl
push
xor
adc
pop
mov
fst
xchg
push
xchg
(bad)
sub
inc
or
outs
mov
ret
cmp
mov
sbb
vpabsq
or
push
inc
retf
inc
fsub
mov
adc
mov
test
imul
or
sti
jbe
fmul
rol
fdivr
cld
call
bound
mov
outs
xor
add
push
dec
stos
pop
push
mov
sbb
test
push
jne
cdq
dec
or
loope
mov
ins
mov
mov
adc
push
fild
movs
cmp
mov
jle
pop
fadd
jle
jb
fadd
push
mov
je
push
lods
aaa
ins
mov
push
in
xor
fbstp
jecxz
retf
repz
aas
xchg
pop
adc
ret
xor
das
jns
adc
outs
cmps
xor
adc
leave
pusha
mov
sub
xchg
pushf
mov
xor
inc
add
out
mov
lds
bound
into
add
jmp
(bad)
pop
les
cmc
mov
jle
dec
sar
mov
aad
mov
mov
mov
sbb
mov
cmp
cmps
mov
into
popf
rcr
mov
jl
js
(bad)
sahf
add
and
xor
lea
std
outs
(bad)
gs
into
dec
retf
xchg
mov
inc
mov
add
and
jmp
fsubr
dec
mov
test
dec
nop
fisttp
jne
popa
adc
pop
jg
pop
mov
into
mov
(bad)
stos
lock
sbb
pop
and
mov
rcl
aas
cwde
cwde
aaa
mov
mov
test
sahf
fs
mov
or
int
test
mov
xchg
pop
xchg
cmp
scas
push
adc
aam
jg
jecxz
lock
inc
adc
push
mov
sub
mov
sbb
scas
ret
push
(bad)
mov
fldcw
data16
jp
mov
cmp
enter
lods
sub
mov
push
clc
push
ja
pop
rcr
pusha
repz
mov
enter
arpl
jp
(bad)
sub
adc
stos
inc
loope
(bad)
xchg
push
push
cdq
mov
sub
mov
jg
inc
mov
mov
iret
fild
stc
add
retf
push
mov
mov
sub
leave
retf
popa
dec
(bad)
fwait
or
jno
in
push
retf
xchg
ins
sahf
(bad)
scas
(bad)
sub
mov
fcom
loopne
rcl
cdq
add
movs
and
out
imul
xor
(bad)
dec
cmp
xor
xlat
retf
ins
mov
mov
test
cmp
movs
and
pop
ret
fsubr
data16
push
mov
mov
xchg
lock
mov
or
jne
rol
bound
xchg
cmp
mov
ins
sti
inc
cmc
xchg
les
call
pop
xchg
mov
push
dec
(bad)
adc
xchg
leave
ss
inc
mov
xchg
mov
ficomp
test
jnp
ret
push
hlt
lods
fimul
xchg
mov
mov
fist
pop
dec
jmp
rcr
cmp
sub
push
mov
pop
cmp
aas
in
push
movs
jmp
and
inc
mov
mov
daa
or
sbb
mov
xlat
mov
or
sbb
clc
iret
jmp
jge
or
sbb
xchg
or
cs
xchg
cmp
pop
pop
cmp
(bad)
imul
sahf
and
mov
je
cmp
mov
loop
push
(bad)
cmps
jns
sub
sub
jecxz
loope
xchg
pop
fsubr
retf
retf
ja
pop
and
push
mov
retf
push
test
sahf
int
iret
mov
mov
mov
inc
or
neg
fmul
out
push
out
lods
xor
xchg
xchg
call
test
xchg
jg
data16
fcmovnb
add
cmp
inc
xchg
push
jl
iret
sti
push
enter
push
imul
cs
sub
test
jnp
popf
add
inc
cwde
dec
pushf
shl
pop
and
mov
cmps
mov
popf
xor
adc
pop
inc
jmp
pop
sbb
pushf
das
sub
ds
or
inc
xchg
push
outs
cmc
scas
and
sub
daa
add
adc
dec
outs
fist
cmc
sbb
test
retf
inc
pushf
aad
ffree
cmp
call
cli
call
js
xor
inc
cmp
pusha
cmp
or
adc
xlat
vmulpd
jmp
scas
or
clc
not
int
jecxz
cwde
js
(bad)
fnstsw
cmps
cmp
mov
fld
sbb
js
setne
ins
dec
and
shl
mov
stc
or
popf
mov
clc
xchg
mov
lahf
movs
jecxz
(bad)
sub
mov
inc
icebp
jg
into
sahf
sub
jle
or
add
test
fdiv
jmp
fbld
dec
push
sub
retf
jmp
adc
mov
test
rcr
or
in
daa
dec
pushf
stos
add
adc
dec
(bad)
cmps
sbb
jbe
sbb
enter
(bad)
arpl
dec
fadd
imul
mov
in
fnsave
or
push
adc
and
push
dec
clc
add
(bad)
das
dec
bound
clc
mov
mov
mov
mov
movs
inc
mov
stos
into
popa
lods
xlat
stos
icebp
lods
mov
xchg
mov
push
jb
enter
or
push
or
and
dec
cmps
add
jnp
data16
xor
imul
cmp
arpl
pusha
inc
out
popa
movs
(bad)
call
ins
and
fst
jle
ret
(bad)
xlat
push
push
retf
loop
xor
jb
fild
cmp
cmp
xor
aaa
xor
sub
sti
and
jl
push
sbb
pop
loopne
out
xchg
adc
mov
(bad)
outs
xchg
lods
xchg
mov
xchg
lea
xlat
(bad)
test
std
sti
ret
jmp
call
stos
dec
ror
mov
pop
movs
lds
cmp
sbb
sbb
push
adc
xor
test
arpl
scas
das
(bad)
loope
push
repnz
and
cmp
mov
push
scas
or
or
push
sti
mov
jnp
xor
mov
inc
pop
mov
add
push
lea
repnz
je
imul
inc
movs
jno
and
and
bound
dec
push
jo
int
nop
out
cli
sbb
in
int
xchg
int3
push
in
(bad)
jp
fdivr
jp
jo
and
push
arpl
adc
sub
ficom
in
arpl
cwde
in
xchg
or
xchg
in
pop
add
xchg
rol
aas
(bad)
(bad)
mov
loop
cmc
mov
fst
jbe
je
push
loope
out
sub
fcomp
data16
push
pop
and
xchg
push
lea
jb
inc
push
push
jb
arpl
inc
xlat
popa
dec
dec
cmp
mov
jmp
retf
cmp
xchg
test
mov
lods
jno
adc
cdq
push
or
xchg
imul
test
(bad)
sbb
or
mov
or
jp
push
js
lds
(bad)
pop
jns
les
outs
push
inc
jae
or
gs
in
sub
mov
gs
cmp
mov
cdq
out
push
push
push
fcmovnu
fucomi
iret
fucomp
jmp
enter
and
fs
cmp
daa
xor
push
mov
adc
sub
sbb
or
adc
add
mov
cwde
sub
add
jge
(bad)
cli
cmps
div
mov
stos
adc
push
(bad)
xchg
std
push
cmp
imul
loope
pop
js
out
xchg
ins
in
cmp
mov
fisttp
push
jne
fstp
dec
and
jbe
adc
loop
adc
inc
add
js
fiadd
jae
mov
mov
mov
jecxz
xchg
and
stos
pop
lods
rol
lods
fs
pop
inc
adc
or
test
out
xchg
add
das
lea
push
push
les
push
jb
(bad)
push
jl
cli
mov
hlt
push
push
popf
ins
pop
ficomp
pop
cmp
vshufps
push
(bad)
jmp
xchg
int3
mov
push
aaa
dec
mov
(bad)
mov
sbb
xor
cmp
mov
jmp
push
jmp
jno
inc
in
test
mov
pop
in
add
mov
das
sbb
mov
dec
add
daa
and
das
into
cld
add
div
nop
push
out
shr
loopne
adc
loop
pusha
icebp
mov
rcl
or
and
or
jae
sub
dec
jl
clc
dec
jge
add
inc
fcomp
test
jp
pop
sub
mov
test
mov
add
call
js
sbb
push
push
fstp
cmp
adc
cwde
out
push
mov
xchg
add
xchg
lods
pop
xchg
imul
test
mov
push
call
jecxz
push
push
pop
sub
adc
out
or
in
mov
mov
fsub
loop
mov
mov
dec
xor
sub
and
inc
xchg
push
add
mov
cmp
cwde
mov
push
rcl
jnp
add
out
cld
dec
adc
add
or
(bad)
fmul
and
repz
fucompp
or
loop
ins
ins
fs
pop
and
and
sub
sub
and
and
push
adc
adc
push
sbb
sub
daa
and
(bad)
fdivr
xchg
in
in
push
in
in
cld
cld
cld
fbstp
mov
in
(bad)
int3
and
and
imul
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
gs
ins
pop
ins
jb
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
fsub
(bad)
in
in
in
loop
in
in
in
cld
(bad)
cld
cld
in
in
in
in
in
in
adc
test
pop
inc
sub
scas
test
adc
jle
js
adc
adc
sbb
adc
bound
outs
pop
push
push
and
pop
pop
es
cmp
sub
or
add
pop
and
out
sti
pop
ins
outs
mov
cmc
movs
loop
sub
and
and
sub
sub
mov
and
cld
(bad)
fsub
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
jnp
in
in
in
in
fadd
dec
dec
popa
dec
inc
inc
and
push
inc
push
dec
pop
pop
or
dec
sub
sub
and
add
sbb
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
(bad)
(bad)
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
pop
pop
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
dec
(bad)
shl
and
sbb
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
pop
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
(bad)
(bad)
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
pop
pop
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
(bad)
(bad)
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
pop
pop
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
(bad)
(bad)
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
pop
pop
pop
pop
fs
ins
ins
ins
fs
jl
fs
ins
ins
ins
fs
pop
pop
pop
and
and
sub
sub
and
and
cmp
cmp
and
and
sub
sub
and
and
(bad)
(bad)
in
in
in
in
in
in
in
in
cld
cld
cld
cld
in
in
in
in
in
in
in
in
(bad)
and
add
add
add
inc
push
inc
dec
or
or
adc
adc
xor
sub
sub
and
and
daa
and
dec
sub
mov
xor
jb
cmp
sbb
dec
push
push
daa
xor
inc
inc
inc
inc
dec
dec
pop
dec
dec
dec
ins
or
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
pusha
arpl
addr16
ins
outs
xchg
jno
jb
je
ja
js
jnp
jl
jg
add
xchg
lea
xchg
scas
xchg
xchg
xchg
cwde
cdq
fwait
fwait
popf
popf
sahf
lahf
mov
movs
xchg
cmps
xchg
test
scas
scas
mov
mov
mov
mov
mov
cmps
lock
cmps
scas
scas
mov
stos
iret
xor
shr
loop
loope
jmp
loop
in
pushf
movs
shl
mov
test
fsubr
mov
iret
iret
rol
mov
fs
data16
aam
pop
dec
mov
xor
or
mov
sbb
sbb
cld
mov
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
out
mov
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
mov
sbb
jo
js
xchg
and
test
mov
add
sub
lods
out
xchg
jecxz
outs
sbb
push
sti
mov
sub
and
xchg
ret
sbb
jo
bnd
cmc
pusha
sub
(bad)
(bad)
cli
stc
lahf
repz
outs
call
daa
add
xchg
rcl
mov
xchg
iret
aas
in
push
inc
mov
push
push
fild
jmp
ror
outs
cs
(bad)
add
sbb
and
sub
jmp
sbb
sub
sbb
adc
in
in
out
adc
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
test
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
