clc
xor
add
add
add
add
add
add
add
add
add
add
adc
add
fcom
add
add
add
xor
add
add
add
add
add
add
jo
add
add
sub
add
jge
add
add
sub
push
add
or
add
add
jb
add
jo
add
add
jb
add
jo
add
adc
push
add
add
sub
add
or
add
sub
add
push
add
xchg
add
sub
add
or
add
sub
add
or
add
or
sub
add
adc
add
and
add
add
add
add
sub
add
or
push
and
or
add
add
sbb
add
add
or
add
sub
add
sub
add
add
add
add
pop
inc
sub
add
or
sub
xor
fld
add
add
add
add
push
lea
add
and
add
push
add
or
jae
add
or
jae
add
or
add
add
add
or
or
add
add
add
or
add
and
add
add
add
or
add
adc
outs
and
add
push
pop
outs
and
add
or
or
add
outs
daa
add
or
pop
outs
and
sub
add
add
pop
outs
sub
add
add
or
add
or
jae
add
or
add
push
add
add
add
add
or
add
or
adc
or
fmul
outs
das
add
or
add
or
sub
or
add
or
fadd
fimul
or
or
add
or
fadd
adc
sub
adc
sub
add
add
add
add
mov
sbb
add
add
and
call
add
add
add
add
add
xor
dec
add
add
add
adc
jae
add
or
jae
add
or
sub
add
jb
add
jo
jb
add
jo
xor
add
outs
xor
add
sub
add
outs
xor
add
add
inc
or
add
or
add
adc
add
dec
add
add
add
add
lea
add
add
add
add
and
add
and
add
add
and
add
and
add
or
add
add
add
sub
add
or
jae
add
or
sub
add
or
add
add
xor
add
add
adc
add
cmp
add
or
cmp
add
add
cmp
add
or
cmp
outs
add
or
add
pop
sub
add
push
or
xchg
add
jo
or
jnp
add
add
movs
add
jo
aas
add
or
add
jnp
add
add
add
aaa
add
or
add
add
or
push
adc
sub
add
add
or
add
or
inc
add
or
add
jb
add
jo
aaa
add
or
inc
add
or
sub
sbb
add
retf
add
add
add
adc
add
inc
lea
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
and
add
jo
or
sub
or
add
inc
add
or
or
or
or
add
adc
add
add
adc
add
pop
or
add
add
add
pop
pop
or
inc
push
adc
sub
sub
add
adc
call
add
adc
pop
pop
adc
adc
or
or
or
add
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
add
add
add
jnp
add
add
pop
jo
aas
add
or
add
add
add
jnp
add
add
mov
aas
add
or
push
sub
add
push
inc
adc
add
sub
add
add
pop
add
sub
add
adc
adc
sub
add
sub
add
add
add
add
jo
dec
add
or
add
or
add
jo
aas
add
or
dec
add
or
sub
add
or
add
sub
add
add
add
xor
add
add
add
add
adc
add
add
or
add
jb
add
jo
dec
add
or
add
or
sbb
sub
pop
outs
add
or
fadd
sub
push
outs
add
or
fsub
add
or
add
sub
sub
add
add
or
add
add
add
add
add
add
add
add
xor
push
adc
add
adc
add
outs
add
add
add
adc
add
or
add
add
pop
movaps
add
push
or
push
sub
add
push
add
sub
add
push
add
jnp
add
add
jnp
add
add
stc
add
jo
aas
add
or
sub
add
or
or
add
jnp
add
add
sub
add
push
add
push
sub
add
push
add
add
push
inc
adc
add
rcl
sub
add
add
add
xor
leave
add
add
add
adc
jb
add
jo
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
and
add
or
jnp
add
add
add
add
add
xor
add
or
add
add
add
add
adc
add
or
add
jnp
add
add
add
add
add
inc
add
add
or
add
add
add
add
add
pop
add
add
or
push
add
add
add
add
add
add
jno
add
dec
add
or
pop
add
add
add
add
add
add
test
add
or
or
jnp
add
add
add
add
add
xchg
add
add
or
or
jnp
add
add
add
add
add
cmps
add
add
or
or
jnp
add
add
add
add
add
rol
add
adc
add
add
add
add
add
add
xlat
add
add
or
or
jnp
add
add
add
add
add
jmp
add
dec
add
or
or
or
add
add
or
sub
add
push
add
or
sub
add
push
add
adc
sub
add
push
add
adc
add
add
adc
add
or
add
add
adc
add
or
add
add
adc
add
or
add
add
adc
add
or
add
add
adc
add
or
add
add
adc
add
or
add
add
adc
sub
add
push
add
adc
add
add
add
add
xor
cwde
add
add
add
adc
jb
add
jnp
add
add
xchg
add
jo
jnp
add
add
sub
add
or
jnp
add
add
pop
add
jnp
add
add
aas
add
or
or
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
or
jo
or
add
or
sub
add
adc
add
sub
add
push
sub
add
xor
add
add
add
add
add
jae
add
or
push
add
add
or
push
add
or
add
adc
add
add
fiadd
add
add
adc
add
add
add
and
add
adc
add
sub
add
or
add
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
add
or
add
add
push
add
or
sub
adc
push
add
add
add
add
adc
rol
add
add
push
add
or
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
pop
add
or
add
add
add
pop
add
or
add
pop
add
or
add
add
add
jb
or
jo
pop
add
or
add
outs
pop
add
or
add
add
add
outs
pop
add
or
add
add
add
push
jae
add
or
add
or
add
add
add
je
add
pop
add
or
add
add
add
mov
add
and
pusha
add
or
add
or
add
add
add
outs
bound
add
add
jnp
add
add
or
or
add
add
add
outs
add
or
add
add
add
outs
add
or
add
add
add
mov
add
add
rol
push
jae
add
or
add
or
add
add
add
rol
add
push
sub
add
outs
imul
jnp
add
add
outs
push
add
add
jnp
add
add
mov
or
add
or
add
or
add
add
add
cmps
or
jo
pop
add
or
add
add
add
sub
add
pop
and
or
add
or
add
add
add
push
outs
imul
or
add
add
add
mov
add
ins
add
or
add
add
add
outs
add
or
add
add
add
into
or
jo
add
fs
pop
sbb
jae
add
or
add
or
add
add
add
ins
add
or
add
or
add
add
add
outs
push
add
add
jnp
add
add
scas
add
add
inc
jae
add
or
add
or
add
add
add
out
add
pop
add
or
add
add
add
mov
sub
pusha
add
or
add
or
add
add
add
adc
add
or
add
add
add
hlt
or
jo
ins
add
or
add
add
add
jb
or
jo
pop
add
or
add
outs
pop
add
or
add
add
add
xchg
add
add
xchg
add
add
add
or
add
or
add
add
add
xchg
or
jo
pop
add
or
add
add
add
inc
add
add
test
add
jae
add
or
add
or
add
add
add
outs
bound
add
add
jnp
add
add
movq
add
add
jnp
add
add
outs
add
or
add
add
rol
add
jae
add
or
outs
add
or
add
sub
add
add
sub
add
outs
jb
add
add
and
add
and
add
jae
add
or
jae
add
add
sub
or
jnp
add
add
jne
add
add
sub
or
jnp
add
add
jne
add
add
sub
or
jnp
add
add
jne
add
add
sub
or
jnp
add
add
jne
add
add
push
jb
or
jo
pop
add
or
add
sub
add
add
jb
or
jo
pop
add
or
add
or
jo
ins
add
or
add
inc
add
add
jae
add
or
js
add
add
jnp
add
add
jns
add
add
jnp
add
add
jns
add
add
push
sub
add
add
sub
add
add
push
sub
or
push
sub
add
add
add
push
sub
add
add
add
jg
add
add
sub
adc
add
cmp
add
sldt
adc
jle
add
add
inc
or
sub
add
or
jo
add
add
sub
or
add
or
add
or
pop
or
add
jle
add
add
sub
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
or
add
adc
add
or
add
adc
add
add
add
add
sub
push
sub
add
add
or
sub
sbb
add
sub
add
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
or
add
jle
add
add
inc
or
je
imul
add
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
mov
add
ltr
or
add
add
add
pop
push
add
add
add
add
hlt
add
pop
push
add
add
in
push
add
or
add
add
in
push
add
sbb
or
dec
pop
out
or
add
or
or
or
add
add
add
or
pop
or
loop
out
or
add
push
lds
push
add
add
or
add
add
push
ror
add
add
sbb
push
add
or
pop
push
add
or
push
lds
push
add
or
add
pop
push
add
add
add
push
add
add
or
or
add
mov
add
add
push
push
add
add
or
pop
or
retf
or
add
sbb
push
add
or
or
pop
push
add
sbb
push
add
pop
ror
add
add
add
or
add
ror
add
add
or
add
sbb
push
add
sbb
push
add
lds
push
add
push
jo
push
add
ror
add
pop
ror
add
or
jae
lds
adc
adc
ja
push
add
add
add
add
lds
push
add
jo
or
test
out
or
add
add
add
pop
push
add
sbb
push
add
add
or
pop
push
or
ret
add
or
add
or
push
push
add
add
fadd
out
or
add
or
push
push
add
add
add
or
push
add
or
push
add
add
push
out
or
add
add
pop
add
push
add
pop
push
push
add
or
pop
push
add
or
pop
push
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
or
or
adc
add
adc
leave
or
or
or
adc
add
add
add
add
add
add
add
mov
add
add
add
or
push
xchg
add
add
cdq
add
add
popf
add
add
mov
add
add
pop
movs
add
add
add
add
add
add
or
and
add
add
add
add
add
add
add
add
or
or
add
add
and
add
add
add
add
add
add
xchg
ss
add
add
and
add
add
add
add
add
add
in
add
add
xchg
js
sbb
or
add
add
add
add
add
add
xchg
outs
or
add
add
daa
add
add
xchg
add
or
add
add
add
add
add
add
daa
add
add
xchg
clc
add
enter
add
xchg
inc
or
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
adc
sub
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
sbb
or
add
add
add
add
xchg
or
add
add
add
xchg
or
add
add
add
add
add
xchg
or
jecxz
push
add
add
add
add
add
add
add
xchg
push
or
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
add
pop
add
add
scas
or
add
add
add
scas
or
add
add
add
dec
add
add
add
add
add
mov
add
add
mov
add
add
test
add
add
mov
add
add
sahf
pop
add
add
mov
add
add
mov
add
add
js
add
add
in
add
add
js
add
add
dec
push
add
add
fs
add
adc
push
or
add
add
or
sub
push
or
add
add
adc
cmp
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
or
add
push
or
add
push
or
add
add
push
add
add
sbb
sbb
push
or
add
add
push
add
push
or
add
les
daa
add
mov
daa
add
add
add
add
add
add
add
add
sub
adc
or
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
lea
stc
add
push
add
add
add
add
push
add
add
push
add
add
add
mov
or
add
or
or
or
add
add
push
lds
mov
add
add
mov
jecxz
leave
add
jmp
push
out
add
add
add
add
add
add
add
and
fld
sub
and
loope
js
sub
jmp
add
add
std
add
add
or
add
add
push
add
add
add
add
add
add
add
or
retf
add
add
add
add
adc
icebp
add
sahf
add
add
add
mov
add
push
or
or
add
add
add
add
push
add
add
add
add
add
add
push
or
add
xchg
pop
fld
pop
add
add
rol
pop
add
retf
add
add
add
add
mov
adc
or
add
sub
add
add
add
sub
or
cdq
add
add
add
add
xchg
or
add
add
add
add
test
add
or
add
add
ror
sub
cdq
add
xor
add
test
add
add
add
add
adc
or
add
add
ins
add
add
or
or
sub
add
push
add
add
or
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
add
push
add
add
jb
add
pushf
add
add
test
add
xchg
add
add
add
add
add
add
add
add
repz
inc
add
add
inc
add
add
mov
cdq
add
add
jbe
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
push
add
add
add
add
add
add
add
test
repz
add
add
add
test
out
or
add
add
add
test
sbb
add
add
add
add
test
cld
add
add
add
add
lea
pop
push
add
add
ror
add
clc
fcom
add
add
add
or
add
add
add
push
popa
jns
popa
ins
and
outs
gs
push
outs
fs
push
xor
xor
dec
inc
outs
jne
gs
bound
xor
dec
popa
bound
xor
inc
outs
jb
xor
push
imul
outs
js
add
gs
xor
push
imul
outs
js
add
aaa
cmp
inc
inc
inc
xor
xor
xor
xor
inc
inc
xor
cmp
xor
inc
inc
xor
inc
xor
xor
je
push
push
inc
cmp
cmp
outs
fs
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
gs
add
addr16
push
dec
add
jae
gs
cs
dec
add
je
dec
push
add
je
popa
ins
ins
jo
jo
jb
jb
ins
push
bound
inc
jb
ins
inc
jb
bound
ins
jae
outs
jb
imul
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
jo
outs
push
gs
add
jb
xor
outs
popa
add
fs
dec
outs
popa
add
add
push
fs
gs
dec
popa
outs
popa
gs
je
jae
outs
inc
gs
outs
arpl
jo
gs
outs
arpl
outs
outs
imul
jo
outs
add
outs
fs
popa
jae
ja
jb
add
gs
je
push
popa
jae
ja
jb
add
jae
ja
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
jae
je
dec
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
dec
ins
gs
outs
fs
je
push
imul
add
arpl
gs
outs
js
imul
add
jns
je
push
je
gs
ins
dec
outs
fs
jo
gs
outs
fs
je
dec
ins
popa
add
jne
gs
bound
dec
inc
imul
ins
add
je
push
imul
push
jne
je
ins
gs
imul
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
ins
outs
popa
fs
imul
jns
je
imul
add
outs
je
je
ins
add
je
inc
js
je
ins
add
je
inc
js
je
ins
add
je
dec
popa
ins
add
je
dec
popa
arpl
outs
gs
popa
ins
add
je
push
jae
jb
popa
ins
add
gs
popa
ins
add
ins
jo
je
jb
popa
ins
add
je
push
jb
arpl
jae
popa
ins
add
add
jae
gs
cs
outs
jb
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
jo
imul
push
gs
imul
add
outs
jae
add
jo
jae
add
gs
je
add
imul
jae
bound
je
je
add
gs
add
imul
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
add
ins
jne
add
jbe
add
jns
popa
ins
and
outs
gs
push
outs
fs
push
xor
xor
gs
add
je
push
imul
pop
inc
ins
outs
arpl
imul
pop
inc
ins
outs
arpl
imul
pop
inc
jne
outs
push
imul
pop
inc
ins
imul
add
je
dec
gs
imul
pop
dec
gs
imul
jo
outs
jb
dec
outs
imul
add
arpl
jns
push
gs
imul
outs
imul
outs
imul
je
ins
cs
jne
je
ins
gs
gs
imul
inc
outs
ja
ins
outs
popa
fs
je
imul
je
imul
jo
jae
outs
add
jae
gs
cs
jb
ja
outs
add
ins
jo
je
dec
popa
jae
add
je
add
je
add
je
dec
outs
addr16
add
addr16
add
outs
dec
outs
imul
dec
popa
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
xor
fs
ins
add
outs
je
imul
je
outs
ins
add
arpl
jb
jne
fs
ins
popa
addr16
jb
add
ins
add
jns
je
push
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
popa
jb
ins
add
popa
jb
ins
add
outs
addr16
ins
add
jae
gs
add
ins
ins
gs
imul
imul
push
jb
je
ins
add
outs
outs
ins
add
jb
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
jne
arpl
popa
outs
add
imul
dec
arpl
add
je
js
outs
jae
outs
outs
add
jo
imul
add
je
dec
outs
arpl
imul
popa
je
outs
outs
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
popa
jb
inc
arpl
outs
add
je
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
arpl
outs
jb
outs
je
jb
gs
outs
outs
outs
arpl
outs
add
arpl
je
outs
outs
add
outs
add
jb
pop
push
push
inc
jne
je
jb
dec
outs
outs
add
jae
gs
push
popa
jb
ins
gs
jb
dec
outs
outs
add
arpl
jns
outs
outs
add
je
push
popa
bound
outs
jo
push
jns
je
ins
cs
imul
pop
push
push
push
popa
jae
bound
add
fs
pop
je
popa
jb
push
je
imul
fs
jae
outs
fs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
outs
je
imul
je
popa
ins
ins
jo
jo
jb
jne
gs
imul
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
ins
gs
popa
addr16
jb
popa
je
jb
arpl
add
arpl
outs
jb
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
push
jns
je
ins
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
fs
pop
je
popa
jb
inc
outs
jb
xor
jb
jae
jne
arpl
add
fs
pop
je
popa
jb
push
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
inc
gs
imul
imul
fs
pop
je
popa
jb
push
jb
jo
jb
imul
inc
imul
bound
imul
jns
gs
push
jb
je
inc
ins
ins
dec
imul
jae
ja
jb
inc
jns
gs
push
data16
cmp
cmp
imul
jae
push
gs
fs
ins
ins
inc
jns
gs
push
jb
je
inc
ins
ins
inc
jns
gs
inc
gs
jns
gs
push
gs
imul
outs
je
jb
jae
addr16
inc
outs
outs
je
outs
ins
jae
addr16
inc
jb
popa
je
push
popa
jb
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
outs
je
imul
pop
inc
jne
outs
push
arpl
gs
imul
outs
jae
addr16
inc
push
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
inc
outs
ins
outs
jb
add
je
jne
jb
outs
je
jb
arpl
jae
arpl
jo
outs
outs
je
add
imul
jbe
push
imul
outs
arpl
add
je
bound
arpl
jns
je
ins
cs
gs
addr16
inc
outs
outs
je
outs
ins
dec
imul
push
fs
outs
imul
dec
outs
imul
imul
add
imul
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
bound
imul
jbe
jb
outs
ins
outs
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
push
outs
imul
pop
inc
outs
outs
je
inc
inc
push
pop
inc
outs
arpl
jo
add
jae
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
js
add
jae
gs
cs
gs
add
je
push
gs
add
je
inc
arpl
gs
popa
jo
imul
add
je
push
popa
bound
fs
push
imul
outs
js
dec
outs
imul
inc
jb
popa
jns
push
outs
inc
jb
popa
jns
jae
je
dec
gs
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
addr16
inc
jae
gs
bound
inc
jb
popa
je
inc
imul
jns
inc
gs
jne
jb
outs
je
imul
jns
outs
arpl
jo
inc
imul
jns
jae
je
dec
jo
arpl
jns
add
add
add
add
cmp
das
add
add
jb
jne
add
popa
add
add
add
add
add
add
add
add
add
add
push
add
add
jo
add
outs
add
das
add
popa
add
jae
outs
add
ja
popa
add
add
add
jb
imul
add
push
add
outs
add
outs
add
add
add
ja
add
add
jae
cmp
das
add
add
jb
jne
add
popa
add
add
add
add
add
add
add
add
add
add
push
add
add
jo
add
outs
add
das
add
popa
add
jae
outs
add
ja
popa
add
add
add
popa
add
jae
outs
add
add
jo
add
or
add
add
add
imul
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
or
add
jae
pop
add
aaa
pop
add
add
imul
add
jo
pop
add
inc
add
inc
add
dec
add
add
add
add
add
imul
add
or
jb
popa
add
imul
or
add
add
or
add
popa
add
add
add
js
add
or
add
add
adc
add
outs
add
je
popa
add
je
add
add
add
add
outs
add
jae
add
add
add
add
add
add
js
add
add
ins
add
add
add
ins
add
js
add
add
jo
je
add
add
jo
je
js
add
add
add
or
add
jo
add
or
add
outs
add
add
add
jae
jbe
add
add
jns
add
add
jno
ins
add
or
add
add
add
add
ins
add
add
add
push
or
add
jae
jo
add
add
jae
jo
js
add
add
je
ins
add
or
add
je
ins
add
or
add
ins
add
or
add
jae
add
or
add
add
add
add
add
add
add
add
jae
add
add
jo
xor
add
add
jo
xor
add
add
imul
add
popa
add
add
add
outs
add
add
add
je
data16
or
add
ins
add
add
add
imul
add
or
add
jbe
imul
popa
add
imul
or
add
add
add
add
jae
outs
add
or
sub
add
add
add
arpl
add
or
add
jb
push
add
add
jp
xor
add
add
popa
add
add
add
jp
imul
add
add
add
add
add
add
add
jne
add
pop
add
jp
add
add
add
add
add
add
or
add
jo
add
add
add
jo
add
or
add
outs
add
add
ucomiss
arpl
jb
jo
jb
outs
add
add
add
add
add
add
arpl
outs
add
or
add
popa
add
add
add
add
adc
add
add
jb
add
je
add
pop
add
popa
add
add
add
add
add
and
popa
add
add
add
add
add
add
arpl
popa
add
add
js
add
add
sub
je
jo
jae
cmp
das
add
add
ja
ja
add
outs
add
add
add
add
outs
add
add
pop
add
popa
add
jae
outs
add
add
jo
add
adc
add
jae
imul
add
jo
add
imul
jae
add
pop
add
outs
add
je
popa
add
je
jae
add
outs
add
jne
ins
add
outs
add
add
adc
outs
add
outs
add
add
add
add
pop
add
imul
jne
jb
add
add
jne
jae
imul
pop
add
outs
add
inc
add
imul
add
pop
add
popa
add
add
add
popa
add
add
add
popa
add
outs
add
imul
jae
add
pop
add
add
jb
arpl
push
add
subps
push
add
add
outs
add
add
pop
add
add
imul
add
jo
pop
add
inc
add
dec
add
add
add
jnp
add
and
arpl
outs
add
jo
jne
je
popa
add
add
and
push
add
imul
and
push
add
add
add
and
jns
and
add
arpl
jb
imul
popa
add
add
add
jns
and
inc
add
dec
add
inc
add
inc
add
dec
add
add
add
add
add
add
cmp
add
dec
add
add
inc
add
push
add
inc
add
inc
add
and
push
add
push
add
add
push
add
dec
add
push
add
push
add
add
xor
add
add
ins
add
jp
popa
add
add
ins
add
add
popa
add
outs
add
add
add
add
add
add
add
push
add
add
popa
add
add
jae
je
popa
add
add
add
add
arpl
imul
and
bound
imul
outs
add
outs
add
add
add
add
add
jbe
push
add
jne
add
add
bound
dec
add
jae
push
add
push
add
dec
add
cmp
xor
imul
add
push
add
jae
xor
outs
add
cmp
add
add
add
outs
add
imul
jne
outs
add
and
arpl
popa
add
je
jne
jb
popa
add
add
add
add
popa
add
outs
add
add
and
outs
add
ins
add
jb
add
add
add
add
add
add
inc
add
add
popa
add
add
jae
je
add
add
outs
add
jb
add
cmp
and
popa
add
outs
add
arpl
jb
popa
add
imul
add
jb
outs
add
add
ins
add
imul
arpl
outs
add
add
add
add
outs
add
and
jbe
add
and
jbe
add
imul
arpl
popa
add
add
add
add
add
popa
add
outs
add
and
je
add
add
outs
add
imul
add
outs
add
and
ins
add
and
dec
add
pop
add
add
add
add
add
inc
add
inc
add
dec
add
push
add
inc
add
dec
add
add
add
add
add
add
data16
jne
je
popa
add
add
add
add
add
and
popa
add
arpl
push
add
jae
and
jo
add
jae
outs
add
popa
add
add
add
push
add
jae
and
popa
add
imul
jae
and
inc
add
dec
add
inc
add
inc
add
dec
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
inc
add
add
popa
add
add
jae
and
dec
add
or
bound
add
add
sbb
je
add
arpl
imul
and
and
and
and
add
inc
add
jne
jb
imul
and
dec
add
ja
add
bound
add
add
jge
add
add
jae
and
ins
add
jae
and
popa
add
arpl
push
add
jae
and
add
and
je
jne
and
arpl
outs
add
jo
jne
je
popa
add
add
popa
add
add
add
outs
add
add
imul
and
inc
add
inc
add
dec
add
push
add
inc
add
push
add
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
pop
push
add
add
and
je
add
jb
add
add
add
add
pop
add
add
jb
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
xor
(bad)
pop
jbe
lahf
mov
outs
mov
and
add
add
add
add
adc
add
push
add
add
add
push
push
and
add
sbb
and
push
add
add
or
pop
adc
and
adc
and
or
pop
pop
sbb
pop
adc
adc
add
adc
or
add
sbb
add
or
add
adc
adc
add
jge
or
adc
and
add
and
sbb
adc
jno
push
add
add
or
add
or
add
push
add
push
add
push
add
add
push
or
pop
sbb
add
add
push
add
loope
and
sbb
add
and
and
sbb
add
push
push
push
push
add
add
push
add
add
push
push
add
add
sbb
add
push
push
pop
or
push
or
add
or
add
push
add
add
push
or
adc
push
add
add
or
push
or
pop
push
push
push
push
push
add
push
add
adc
add
add
jns
jge
add
push
pop
pop
add
add
add
add
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
add
push
push
push
push
pop
pop
add
push
push
sbb
add
sbb
adc
and
add
or
add
or
or
and
add
or
add
sbb
adc
add
or
and
add
and
adc
add
sub
push
or
xor
push
and
add
sub
or
and
add
cmp
cmp
or
push
and
add
add
or
dec
push
and
add
sub
adc
sbb
and
add
adc
add
inc
or
add
adc
add
pop
pop
and
add
adc
adc
adc
add
adc
or
xor
mov
mov
pop
jg
aad
cmp
push
push
add
adc
push
adc
push
adc
push
adc
sbb
push
or
add
or
push
or
and
add
push
or
add
add
or
add
add
xchg
add
cdq
push
add
add
sbb
add
add
pop
add
xchg
add
cdq
add
add
adc
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
popa
jns
popa
ins
and
outs
gs
push
outs
fs
push
xor
xor
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
popa
bound
fs
sub
sub
sub
xor
ss
aaa
add
or
add
xor
xor
xor
xor
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
add
add
add
add
add
add
add
fcom
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
inc
push
call
adc
inc
add
add
add
add
add
add
add
add
jae
add
arpl
outs
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
pop
xchg
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
ins
add
add
out
sldt
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
pop
test
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
and
push
add
inc
inc
add
add
and
sub
add
cmp
add
add
add
or
add
jge
add
add
add
add
add
add
add
and
add
add
add
add
or
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
push
add
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
jge
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
sub
add
add
add
sub
jno
adc
sar
or
cmp
std
push
sbb
std
push
adc
std
push
push
(bad)
push
ret
std
push
push
ret
std
push
push
sar
push
mov
std
(bad)
bsf
or
mov
std
(bad)
movzx
(bad)
movzx
or
mov
add
push
mov
or
scas
std
push
push
scas
std
or
lods
std
pop
pop
stos
std
push
push
stos
std
push
push
stos
std
push
push
test
std
push
push
cmps
std
push
push
cmps
std
push
push
movs
std
push
push
mov
std
push
push
mov
std
(bad)
push
dec
xchg
inc
push
and
adc
add
add
or
inc
and
in
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
push
in
call
in
inc
add
inc
add
call
sbb
dec
repz
bnd
and
inc
add
dec
or
call
pop
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
pop
adc
or
test
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
out
inc
add
inc
add
push
lock
out
jmp
out
jmp
out
inc
jmp
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
push
adc
or
cmps
loop
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
jg
bnd
out
jmp
daa
out
add
fdivrp
js
icebp
jmp
out
inc
add
push
xor
jmp
out
push
aaa
jmp
push
xor
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
push
adc
or
test
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
jge
bnd
out
jmp
out
call
out
jmp
icebp
jmp
out
inc
add
jmp
and
jmp
out
(bad)
cmp
jmp
out
cld
jmp
out
call
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
es
add
add
adc
or
test
inc
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
out
call
lock
out
jmp
jmp
out
dec
lahf
idiv
out
cld
jmp
cs
out
cld
call
adc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
daa
jb
add
add
adc
or
cmps
in
add
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
cmp
in
jmp
out
jmp
out
call
pop
jmp
jmp
out
jmp
out
jmp
out
inc
add
call
push
call
jmp
out
jmp
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
daa
je
add
add
(bad)
ud2
inc
dec
mov
icebp
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
and
call
push
in
push
push
in
and
out
and
out
sbb
and
call
push
in
daa
daa
out
daa
daa
out
sbb
and
jmp
and
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
(bad)
cmp
jbe
add
add
or
or
out
(bad)
std
std
icebp
push
cmc
out
cmc
cmc
call
push
cmc
call
push
imul
push
imul
push
imul
push
cmc
jmp
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
push
cmc
call
(bad)
std
std
icebp
(bad)
jnp
js
add
add
or
or
in
push
repnz
jmp
jmp
jmp
push
repz
push
in
fdivrp
out
in
fdivrp
in
jmp
(bad)
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
push
repz
jns
jns
add
add
or
or
out
push
repnz
jmp
jmp
jmp
call
pop
call
jmp
(bad)
mov
int3
jmp
loopne
jmp
out
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
push
cmc
cmc
(bad)
jl
jl
add
add
or
or
out
push
cmc
cmc
(bad)
in
in
in
(bad)
in
in
in
push
repnz
dec
into
in
inc
clc
dec
sub
inc
and
dec
and
sar
(bad)
int3
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
jle
jle
add
add
or
or
out
push
cmc
cmc
(bad)
in
in
in
(bad)
in
in
in
push
icebp
in
call
(bad)
dec
sub
call
sub
(bad)
mov
retf
loopne
inc
pop
idiv
add
stc
(bad)
jnp
(bad)
(bad)
(bad)
int3
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
clc
clc
clc
inc
add
push
or
or
out
push
cmc
cmc
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
imul
call
push
idiv
xor
dec
leave
retf
push
lock
dec
repz
sbb
call
loopne
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
stc
stc
stc
inc
add
push
or
or
out
push
div
(bad)
out
out
out
push
lock
icebp
icebp
push
repnz
(bad)
(bad)
icebp
jmp
clc
dec
sub
call
loope
jmp
inc
icebp
call
retf
iret
(bad)
jmp
repz
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
sti
sti
sti
inc
add
push
or
or
call
idiv
repnz
repnz
repz
repnz
repnz
(bad)
(bad)
repnz
fsub
repnz
idiv
add
idiv
cmp
mov
inc
and
jmp
fdivrp
jecxz
sar
repnz
cmc
cmc
push
repnz
repnz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
cld
cld
cld
inc
add
push
or
or
call
idiv
repz
repz
repz
repz
repz
repz
sti
stc
repz
std
cld
repz
clc
dec
and
inc
cmc
push
icebp
(bad)
div
repnz
cmc
cmc
push
cmc
cmc
push
repz
repz
repz
repnz
lock
lock
lock
lock
lock
icebp
icebp
push
lock
lock
lock
lock
lock
lock
(bad)
(bad)
(bad)
inc
add
push
(bad)
(bad)
cmovo
jmp
clc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
(bad)
(bad)
(bad)
repz
repz
inc
idiv
add
clc
jmp
cmp
(bad)
jg
(bad)
retf
push
out
loopne
div
out
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
div
(bad)
(bad)
std
icebp
(bad)
(bad)
cld
in
push
imul
push
icebp
lock
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
(bad)
(bad)
(bad)
(bad)
dec
add
push
(bad)
(bad)
cmovo
jmp
clc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
(bad)
(bad)
(bad)
cmc
(bad)
stc
clc
cmc
(bad)
cmp
adc
inc
sbb
call
sub
call
loope
stos
mov
jmp
jecxz
(bad)
clc
imul
(bad)
stc
clc
repnz
div
push
div
(bad)
(bad)
(bad)
cmc
jmp
in
inc
outs
loop
xchg
mov
aad
in
in
in
push
repz
repnz
repnz
repnz
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
cmovo
jmp
(bad)
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
cmc
jmp
pop
clc
inc
out
pop
jo
call
sub
inc
sbb
in
jbe
fdivr
mov
call
jmp
call
cmp
inc
adc
inc
pop
sti
inc
pop
idiv
jo
(bad)
loopne
sar
icebp
icebp
lock
repnz
repnz
repnz
(bad)
(bad)
(bad)
dec
add
push
(bad)
(bad)
cmovo
jmp
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
cld
sti
idiv
jmp
xor
call
fst
jmp
loope
dec
dec
stc
inc
pop
icebp
push
dec
out
popa
jae
call
sub
inc
push
idiv
pop
cmp
dec
ds
dec
and
iret
(bad)
out
in
call
push
repz
repz
(bad)
(bad)
(bad)
dec
add
push
(bad)
(bad)
cmovo
jmp
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
(bad)
(bad)
idiv
pop
jae
inc
adc
dec
loope
(bad)
(bad)
clc
(bad)
sti
sti
idiv
into
shl
inc
cmp
idiv
add
idiv
add
idiv
or
xor
inc
sbb
inc
sbb
jmp
imul
push
cmc
cmc
push
repz
repz
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
in
in
(bad)
sti
sti
sti
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
clc
push
push
clc
inc
out
in
fdivr
div
idiv
sti
sti
clc
(bad)
(bad)
(bad)
clc
(bad)
in
lock
jmp
idiv
add
out
inc
ins
stc
inc
clc
inc
idiv
mov
repz
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
in
in
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
std
std
stc
push
repnz
call
clc
call
sub
inc
enter
repz
std
std
sti
(bad)
(bad)
(bad)
stc
dec
idiv
add
idiv
push
sub
(bad)
mov
(bad)
clc
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
stc
(bad)
sti
sti
sti
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
in
in
(bad)
cld
cld
cld
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
stc
call
inc
adc
dec
lock
(bad)
(bad)
cld
call
sbb
inc
sbb
inc
repz
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
stc
(bad)
sti
sti
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
div
push
div
(bad)
(bad)
(bad)
(bad)
call
add
(bad)
(bad)
cmovo
in
in
(bad)
std
std
std
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
jmp
adc
call
jecxz
repnz
(bad)
loope
sti
call
xor
inc
adc
inc
in
div
call
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
(bad)
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
in
in
(bad)
std
std
std
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
(bad)
fucom
stc
dec
clc
jmp
(bad)
jmp
repz
adc
call
sub
dec
retf
fdivrp
(bad)
(bad)
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
(bad)
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
out
out
(bad)
std
std
std
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
std
cld
sti
(bad)
(bad)
std
sti
push
repz
daa
repz
pop
clc
push
loopne
(bad)
(bad)
icebp
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
(bad)
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
jmp
clc
inc
sbb
call
xor
inc
sbb
jmp
jecxz
(bad)
(bad)
(bad)
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
repnz
(bad)
(bad)
(bad)
call
add
push
(bad)
(bad)
cmovo
lock
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
call
sbb
inc
sbb
inc
sbb
dec
(bad)
repz
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
clc
clc
clc
push
div
push
repz
repnz
icebp
icebp
push
lock
lock
in
in
in
push
div
call
add
push
(bad)
(bad)
cmovo
lock
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
dec
aad
dec
pop
clc
jmp
inc
jmp
jmp
in
(bad)
(bad)
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
add
push
(bad)
(bad)
cmovo
lock
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
call
fdivr
call
sub
inc
sbb
call
(bad)
repnz
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
repnz
out
out
out
(bad)
in
in
in
(bad)
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
(bad)
in
in
in
call
add
(bad)
(bad)
cmovo
icebp
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
push
stc
inc
push
idiv
push
sub
inc
(bad)
xlat
(bad)
clc
div
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
repnz
out
out
out
(bad)
jmp
jmp
call
in
jmp
loop
jmp
loopne
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
jmp
jmp
xchg
xchg
xchg
int3
add
add
(bad)
(bad)
cmovo
icebp
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
push
repz
jmp
cmp
inc
sbb
inc
and
jmp
cmc
in
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
push
div
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
jmp
jmp
out
out
loop
loop
(bad)
fdivrp
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivr
fcomp
fdivr
jle
jle
add
add
add
add
(bad)
cmovo
repnz
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
jmp
sbb
idiv
add
idiv
test
call
(bad)
sti
sti
sti
push
cmc
cmc
push
repz
out
inc
mov
(bad)
inc
mov
(bad)
inc
(bad)
mov
dec
leave
leave
dec
leave
leave
dec
leave
leave
(bad)
mov
inc
inc
pusha
(bad)
(bad)
cmovo
repnz
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
jmp
clc
inc
push
idiv
add
sbb
push
fdivrp
div
out
std
std
std
(bad)
clc
clc
clc
push
repz
repnz
ret
ret
(bad)
fcmovnu
(bad)
jmp
jmp
jmp
jmp
(bad)
in
in
in
(bad)
out
out
out
jmp
out
call
rcl
dec
retf
pop
pop
pop
outs
(bad)
(bad)
cmovo
repnz
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
(bad)
ds
idiv
add
idiv
push
xor
inc
sbb
call
out
repz
jecxz
cld
cld
cld
push
div
push
repnz
in
in
in
inc
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
div
jmp
loope
call
rcl
call
outs
(bad)
(bad)
cmovo
repz
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
push
dec
idiv
add
inc
out
inc
pop
idiv
pusha
jae
push
repz
cld
cld
sti
push
div
push
repnz
in
in
in
dec
retf
clc
clc
clc
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
std
std
std
push
cmc
cmc
(bad)
(bad)
fdivrp
rcl
sar
pop
pop
pop
ins
adc
adc
repz
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
jmp
clc
inc
push
cmc
dec
sub
inc
push
idiv
js
fdivr
cld
stc
in
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
in
in
in
dec
iret
iret
(bad)
clc
clc
clc
(bad)
std
std
std
(bad)
std
std
std
push
cmc
cmc
(bad)
fstp
(bad)
rcl
sar
pusha
pusha
pusha
outs
adc
adc
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
(bad)
fucom
sti
jmp
inc
idiv
add
cmc
(bad)
mov
(bad)
stc
(bad)
stc
stc
stc
push
cmc
cmc
push
repnz
in
in
in
call
rcl
(bad)
stc
stc
stc
(bad)
std
std
std
push
cmc
cmc
jmp
loopne
call
(bad)
(bad)
jmp
popa
outs
adc
adc
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
(bad)
out
icebp
cld
jmp
enter
(bad)
std
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
cmc
cmc
push
repnz
in
in
in
call
xlat
xlat
(bad)
stc
stc
stc
push
cmc
cmc
(bad)
(bad)
fdivrp
xlat
xlat
xlat
jmp
bound
add
add
adc
inc
div
idiv
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
repnz
out
out
out
(bad)
fstp
(bad)
repz
(bad)
fdivrp
xlat
xlat
xlat
jmp
outs
adc
adc
div
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
repz
lock
jecxz
jmp
jecxz
(bad)
fstp
(bad)
jne
jne
adc
adc
div
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
clc
clc
clc
push
cmc
cmc
push
repnz
call
out
(bad)
jnp
jnp
adc
adc
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
push
repnz
add
or
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
dec
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
sldt
lock
add
pop
add
lock
add
aas
add
lock
add
jg
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
lock
add
inc
add
add
add
add
add
add
add
and
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
in
sub
fisttp
or
jle
or
or
js
or
js
or
jne
push
push
je
push
push
jae
or
jb
or
jno
or
jno
pi2fd
or
ins
fisttp
or
push
push
push
imul
or
loopne
add
push
pop
jnp
retf
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
cmp
stc
inc
push
lock
lock
cld
call
cld
call
sbb
jmp
sub
call
lock
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
add
add
imul
add
fdivrp
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fdivrp
xchg
xchg
repz
cmp
jmp
dec
adc
(bad)
jg
repnz
icebp
call
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
add
add
imul
add
loop
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loop
xchg
cmc
push
icebp
(bad)
jns
repnz
add
inc
jg
jmp
repnz
push
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
call
add
add
imul
add
jecxz
add
in
add
in
add
in
add
in
add
in
add
jecxz
push
push
icebp
jmp
repz
cmp
in
jmp
repz
jmp
cs
(bad)
cmp
in
jmp
repnz
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
add
add
cwde
leave
addr16
jmp
out
popa
popa
out
popa
popa
out
arpl
jmp
call
jmp
out
pop
pop
out
pop
pop
out
pop
pop
out
pop
pop
out
bound
call
out
pop
pop
out
bound
jmp
out
popa
popa
out
popa
popa
out
popa
popa
out
popa
popa
out
popa
popa
out
popa
popa
call
jmp
cs
nop
call
(bad)
cld
cld
jmp
(bad)
(bad)
(bad)
call
(bad)
std
std
loope
(bad)
(bad)
out
std
std
jmp
sti
sti
jmp
(bad)
cld
cld
jmp
(bad)
sti
sti
jmp
(bad)
cld
cld
jmp
(bad)
cld
cld
jmp
(bad)
cld
cld
jmp
(bad)
cld
cld
jmp
(bad)
std
std
jmp
(bad)
(bad)
idiv
dec
dec
dec
nop
call
(bad)
jmp
jmp
repz
test
in
jmp
inc
out
lea
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
push
div
dec
nop
call
(bad)
in
in
in
(bad)
clc
imul
push
cmc
call
xor
inc
cmp
jmp
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
stc
stc
stc
dec
dec
nop
call
(bad)
in
in
in
push
cmc
out
inc
retf
icebp
jmp
inc
repnz
(bad)
enter
and
dec
icebp
in
lock
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
cld
cld
cld
dec
dec
nop
call
push
repnz
repnz
(bad)
std
repnz
fsub
repz
idiv
ss
call
jmp
cmp
call
rcl
(bad)
stc
clc
repnz
repz
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
(bad)
(bad)
(bad)
call
push
nop
call
push
repz
repz
repz
sti
stc
repz
std
cld
repz
dec
repz
sbb
call
loope
out
fdivr
(bad)
cld
in
(bad)
sti
sti
cmc
push
div
push
repz
icebp
repnz
icebp
lock
sti
stc
lock
(bad)
cld
lock
cmc
repnz
lock
push
lock
lock
(bad)
(bad)
(bad)
call
push
nop
popf
popf
popf
leave
(bad)
(bad)
(bad)
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
(bad)
(bad)
(bad)
cmc
(bad)
clc
clc
cmc
dec
sbb
jmp
cmp
jmp
loop
ret
(bad)
fdivrp
clc
imul
(bad)
(bad)
(bad)
repnz
std
std
idiv
cld
cld
cmc
push
xchg
in
(bad)
xlat
(bad)
repz
push
repnz
repnz
(bad)
(bad)
(bad)
call
push
nop
sahf
sahf
sahf
leave
(bad)
(bad)
(bad)
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
idiv
(bad)
std
idiv
daa
inc
idiv
inc
pop
out
pop
ins
in
jmp
cmp
(bad)
cmp
inc
shl
jmp
cmc
inc
and
call
xor
(bad)
cmp
(bad)
fcmovnu
fdivr
div
cmc
push
repz
(bad)
(bad)
(bad)
call
push
nop
sahf
sahf
sahf
leave
(bad)
(bad)
(bad)
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
(bad)
(bad)
idiv
jae
clc
jmp
cmp
push
icebp
fdivrp
jecxz
stc
dec
idiv
push
sub
inc
adc
dec
inc
in
inc
cmc
(bad)
mov
stc
repz
repz
(bad)
(bad)
(bad)
call
pop
nop
lahf
lahf
lahf
leave
(bad)
(bad)
(bad)
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
clc
dec
sar
dec
and
jmp
(bad)
cmc
(bad)
(bad)
(bad)
stc
dec
adc
jmp
in
call
cmp
sahf
stos
clc
push
cmc
idiv
div
cmc
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
call
pop
nop
lahf
lahf
lahf
leave
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
sti
sti
stc
(bad)
(bad)
(bad)
stc
jmp
inc
stc
call
loope
(bad)
(bad)
in
dec
sar
inc
jmp
cld
sti
icebp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
stc
(bad)
sti
sti
sti
push
div
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
call
pop
nop
lahf
lahf
lahf
leave
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
jmp
sti
jmp
icebp
loop
aaa
push
sti
dec
and
call
xlat
call
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
call
pop
nop
mov
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
push
das
repnz
loop
add
out
(bad)
(bad)
clc
(bad)
sti
sti
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
call
pop
nop
mov
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
jmp
call
idiv
add
idiv
daa
aas
jmp
repnz
in
(bad)
(bad)
(bad)
std
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
clc
clc
clc
push
div
push
div
push
repz
(bad)
(bad)
(bad)
call
pop
nop
mov
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
push
dec
clc
inc
adc
call
(bad)
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
cmc
cmc
push
lock
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
div
idiv
pop
pop
pop
nop
mov
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
jmp
dec
clc
jmp
cmp
push
lock
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
repnz
in
in
in
(bad)
call
out
jmp
jecxz
jmp
jecxz
push
repnz
pop
xchg
mov
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
(bad)
mov
sbb
jmp
dec
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
push
repz
in
in
in
jmp
out
jmp
loope
(bad)
(bad)
fdivr
fcmovu
(bad)
fcmovnu
(bad)
out
out
push
push
push
mov
add
add
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
jmp
clc
inc
adc
call
xor
(bad)
(bad)
jecxz
(bad)
(bad)
std
push
div
(bad)
in
in
in
dec
iret
iret
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
push
push
push
sub
movs
movs
movs
leave
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
jmp
dec
idiv
add
cmc
call
sub
jecxz
(bad)
(bad)
stc
push
cmc
cmc
(bad)
(bad)
fdivr
loope
loope
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
std
std
std
push
icebp
icebp
inc
rol
and
and
cmps
cmps
cmps
leave
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
std
cld
(bad)
(bad)
(bad)
cld
jmp
inc
idiv
or
bnd
sub
call
shl
(bad)
(bad)
(bad)
stc
push
cmc
cmc
(bad)
(bad)
fdivrp
out
out
(bad)
(bad)
(bad)
(bad)
std
std
std
push
icebp
icebp
inc
ret
es
cmps
cmps
cmps
leave
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
inc
sbb
jmp
inc
out
push
repz
cld
sti
stc
push
repz
loope
(bad)
jmp
jmp
(bad)
(bad)
(bad)
push
icebp
icebp
inc
(bad)
(bad)
jmp
cmps
cmps
cmps
leave
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
cld
cld
(bad)
(bad)
(bad)
cld
inc
iret
sti
(bad)
fneni(8087
sti
(bad)
(bad)
(bad)
std
(bad)
clc
clc
clc
push
repz
in
(bad)
in
in
in
push
repnz
enter
es
cmps
cmps
cmps
retf
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
std
std
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
cmc
cmc
(bad)
jmp
jmp
jmp
jmp
rcl
shr
sub
sub
lods
lods
lods
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
stc
stc
push
div
(bad)
(bad)
fsubr
xor
xor
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aaa
aaa
aaa
inc
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
jmp
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
pop
pop
sbb
test
add
xor
add
xor
add
add
add
xor
add
add
push
sub
add
add
add
add
pop
es
add
std
inc
add
inc
add
inc
add
push
xor
jmp
das
repnz
idiv
inc
inc
repz
add
inc
add
inc
add
inc
add
inc
pop
xor
add
add
add
add
pop
sub
adc
inc
add
inc
add
inc
add
jmp
repnz
icebp
(bad)
ds
call
repnz
or
inc
add
inc
add
inc
add
inc
pop
aaa
imul
add
add
sub
mov
jmp
xchg
out
movs
mov
jmp
jmp
mov
call
jmp
test
jmp
sub
imul
add
add
sub
push
(bad)
(bad)
clc
inc
leave
in
inc
dec
mul
(bad)
clc
clc
in
push
imul
push
imul
push
imul
(bad)
clc
clc
jmp
clc
clc
jmp
(bad)
(bad)
cmc
(bad)
cmp
cmp
add
add
add
add
sub
push
(bad)
(bad)
std
jmp
call
out
inc
out
xchg
out
push
cmc
icebp
(bad)
out
out
out
push
repz
push
div
(bad)
out
out
lock
stc
stc
stc
(bad)
cmp
cmp
sub
sub
(bad)
(bad)
(bad)
clc
clc
cmc
push
div
jmp
push
lock
(bad)
in
(bad)
std
cld
icebp
(bad)
fsub
repnz
retf
repnz
(bad)
std
std
std
(bad)
cmp
cmp
sub
sub
(bad)
(bad)
push
div
(bad)
clc
clc
idiv
(bad)
(bad)
idiv
cwde
movs
clc
inc
jmp
mov
in
call
cmp
jmp
cmp
call
fucompp
(bad)
(bad)
(bad)
(bad)
(bad)
aas
aas
aas
imul
add
add
sub
(bad)
(bad)
(bad)
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
cld
cld
stc
jmp
jmp
in
push
div
push
dec
idiv
pushf
test
sti
push
repnz
(bad)
(bad)
(bad)
inc
inc
imul
add
add
sub
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
cld
push
cmc
(bad)
aas
push
in
jmp
icebp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
inc
inc
imul
add
add
sub
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
sti
call
cmp
(bad)
clc
clc
cmc
(bad)
(bad)
(bad)
cld
push
div
push
repnz
cld
cld
cld
inc
inc
imul
add
add
sub
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
(bad)
jnp
sti
jmp
in
(bad)
(bad)
(bad)
cld
push
repz
in
(bad)
fstp
(bad)
lock
ds
add
add
add
sub
sub
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
jmp
inc
clc
call
jmp
(bad)
(bad)
clc
jmp
loope
jmp
out
push
repnz
add
sbb
add
add
add
add
sub
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
cld
(bad)
cmp
jmp
lock
(bad)
(bad)
cmc
jmp
out
(bad)
(bad)
(bad)
(bad)
jmp
add
adc
add
add
das
das
push
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
(bad)
(bad)
std
(bad)
in
out
std
(bad)
out
icebp
std
(bad)
stc
stc
clc
push
div
push
add
push
daa
daa
daa
inc
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
sub
add
inc
add
add
add
add
add
add
inc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
cs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
add
add
add
add
add
and
jbe
mov
cli
inc
fs
inc
dec
idiv
add
idiv
add
repnz
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
loop
sbb
jecxz
sbb
jecxz
adc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cdq
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
(bad)
jg
out
inc
add
inc
add
inc
add
(bad)
jg
out
push
hlt
std
push
enter
(bad)
(bad)
cmp
call
(bad)
jg
out
call
aad
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
fwait
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
(bad)
jg
out
inc
add
inc
add
inc
add
(bad)
jg
out
call
aad
inc
add
inc
add
push
out
(bad)
jmp
(bad)
jg
out
call
aad
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
fwait
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
jmp
dec
jmp
adc
in
add
loope
jg
out
call
aad
inc
add
inc
add
dec
loop
(bad)
(bad)
(bad)
inc
jmp
(bad)
push
xor
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
outs
fwait
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
(bad)
mov
movs
hlt
(bad)
jmp
(bad)
jg
out
call
aad
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
call
in
(bad)
jg
out
(bad)
out
out
std
call
xchg
repz
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
outs
fwait
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
(bad)
jg
icebp
inc
add
(bad)
(bad)
sti
push
lock
jg
icebp
call
aad
inc
add
inc
add
(bad)
cmp
jmp
(bad)
(bad)
(bad)
jmp
jg
call
aad
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
outs
fwait
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
call
aad
jmp
jae
(bad)
stc
stc
(bad)
call
out
(bad)
jg
icebp
jmp
in
call
in
jmp
out
jmp
loopne
jmp
add
(bad)
jg
icebp
jmp
in
call
in
call
in
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
jno
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
lock
jg
repnz
jg
repnz
out
inc
add
inc
jmp
jg
repnz
jg
repnz
jg
repnz
inc
add
inc
add
inc
jmp
jg
repnz
jg
repnz
jg
repnz
aas
aas
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
jae
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
fwait
add
add
add
add
cmc
cmc
cmc
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
push
fwait
add
add
add
add
div
idiv
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
push
jbe
add
add
add
add
div
idiv
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
out
jmp
loope
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
push
jbe
add
add
add
add
div
idiv
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
push
call
aad
jnp
aad
mov
into
into
(bad)
(bad)
fcos
call
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
fstp
(bad)
jns
jns
add
add
add
add
div
idiv
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
inc
and
inc
and
inc
and
inc
and
call
sub
jmp
aam
mov
dec
iret
iret
(bad)
call
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
fdivrp
jnp
jnp
add
add
add
add
div
idiv
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
dec
and
inc
and
call
sub
dec
sar
dec
pop
jmp
adc
cmc
inc
and
(bad)
cmp
ret
retf
dec
into
into
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
loopne
(bad)
jge
jge
add
add
add
add
div
idiv
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
and
(bad)
ds
loope
rcl
sar
(bad)
fcos
(bad)
int3
out
push
inc
cmc
inc
and
(bad)
cmp
inc
(bad)
int3
dec
iret
iret
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
loop
(bad)
jge
jge
add
add
add
add
div
idiv
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
dec
int
call
and
dec
loopne
(bad)
(bad)
rcl
sar
(bad)
out
aaa
dec
hlt
inc
and
call
loopne
int3
int
call
xlat
xlat
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
in
(bad)
jle
jle
add
add
add
add
div
idiv
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
dec
shl
jmp
cmc
inc
and
jmp
mov
call
rcl
dec
rcr
jmp
cmp
dec
and
dec
iret
iret
jmp
out
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
jmp
out
inc
add
or
add
and
div
idiv
out
out
out
push
lock
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
in
call
cmc
dec
and
dec
sub
jmp
(bad)
leave
retf
pushf
movs
(bad)
or
clc
call
xor
inc
(bad)
sar
rcl
sar
lock
repnz
repnz
repnz
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
add
and
div
idiv
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
ss
inc
and
jmp
cmp
inc
(bad)
clc
call
(bad)
rcl
sar
loop
loop
repnz
repnz
repnz
repnz
repnz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
fwait
add
add
add
add
clc
clc
clc
push
icebp
icebp
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
in
jmp
cmc
call
sub
inc
and
call
xor
inc
and
dec
and
sar
rcl
sar
lock
repz
repz
repz
repz
repz
repz
repz
repnz
icebp
icebp
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
in
in
in
inc
add
or
add
and
clc
clc
clc
push
icebp
icebp
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
aam
call
dec
and
idiv
push
and
(bad)
cmp
(bad)
mov
rcl
(bad)
(bad)
(bad)
out
out
out
push
repz
repz
repz
repz
repz
repz
repz
repnz
icebp
icebp
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
or
add
and
clc
clc
clc
push
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
call
aam
jmp
cmc
dec
and
inc
and
dec
and
inc
out
call
(bad)
(bad)
fdivrp
jmp
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
repnz
in
in
in
jmp
in
(bad)
jmp
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
dec
add
or
add
and
stc
stc
stc
push
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
inc
cmc
inc
and
inc
and
inc
and
inc
and
jmp
inc
lock
(bad)
mov
fcmovnu
jmp
loop
(bad)
out
out
out
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
jmp
out
inc
pop
loop
inc
pop
fdivr
mov
sar
(bad)
fcos
lock
repnz
repnz
repnz
repnz
repnz
repnz
repz
add
or
add
and
stc
stc
stc
push
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
jmp
idiv
or
push
dec
jecxz
or
inc
and
call
sub
inc
(bad)
xchg
mov
aam
loopne
loopne
in
in
out
out
out
push
cmc
cmc
(bad)
mov
cmp
idiv
push
and
inc
and
inc
and
call
loopne
iret
iret
iret
(bad)
(bad)
fdivr
repnz
repnz
repnz
repnz
repnz
repnz
hlt
hlt
dec
add
or
add
and
stc
stc
stc
push
hlt
hlt
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
icebp
idiv
sbb
inc
and
jmp
loop
(bad)
(bad)
ret
(bad)
loope
imul
inc
and
inc
and
call
xor
dec
call
enter
movs
(bad)
cvtpi2ps
inc
and
inc
and
call
sub
jmp
adc
and
call
rcl
(bad)
out
out
out
push
repz
repz
repz
repz
repz
div
dec
add
or
add
and
cli
cli
cli
push
hlt
hlt
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
jmp
idiv
push
and
call
xor
call
rcr
(bad)
(bad)
(bad)
div
idiv
jmp
scas
idiv
push
fs
push
sub
inc
and
inc
and
dec
sub
dec
and
idiv
push
and
call
xor
inc
mov
idiv
push
and
inc
out
iret
iret
iret
(bad)
in
in
in
push
repz
repz
repz
repz
repz
clc
clc
clc
dec
add
or
add
and
cli
cli
cli
push
hlt
hlt
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
mov
and
dec
and
call
(bad)
(bad)
push
hlt
hlt
push
div
push
div
push
div
(bad)
call
stos
idiv
inc
push
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
(bad)
aas
push
call
push
repnz
repz
repz
repz
repz
repz
cli
cli
cli
dec
add
or
add
and
cli
cli
cli
push
cmc
cmc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
idiv
jmp
cmp
inc
and
inc
fdivrp
fcmovnu
fdivr
jmp
jmp
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
jmp
out
jmp
ds
push
and
inc
and
jmp
inc
out
jmp
out
(bad)
cmp
jmp
idiv
and
idiv
inc
pop
idiv
into
shl
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
dec
add
or
add
and
cli
cli
cli
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
idiv
push
and
call
xor
dec
retf
(bad)
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
idiv
dec
idiv
push
and
inc
and
call
xor
dec
int
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
in
out
stc
(bad)
clc
clc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
call
add
or
add
and
cli
cli
cli
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
inc
retf
clc
inc
and
inc
and
call
xlat
xlat
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
call
and
inc
and
dec
and
xlat
push
repz
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
call
add
or
add
and
cli
cli
cli
push
div
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
push
hlt
cli
jmp
cmp
inc
and
call
(bad)
fcmovnu
(bad)
lock
cli
cli
cli
call
(bad)
call
and
inc
and
jmp
loope
jmp
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
call
add
or
add
and
sti
sti
sti
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
call
idiv
push
and
jmp
cmc
dec
iret
aam
out
out
clc
clc
sti
dec
idiv
push
and
inc
and
jmp
in
(bad)
(bad)
fdivrp
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
(bad)
sti
sti
sti
call
add
or
add
and
sti
sti
sti
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
idiv
or
cli
push
fstp
jmp
and
inc
and
dec
and
xlat
push
repz
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
div
push
div
(bad)
sti
sti
sti
call
add
or
add
and
sti
sti
sti
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
fsub
cli
dec
and
inc
and
(bad)
jle
loopne
rcl
fdivr
sub
inc
and
inc
and
jmp
jecxz
in
in
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
(bad)
sti
sti
sti
call
add
or
add
and
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
idiv
push
dec
idiv
push
and
call
jecxz
jg
jecxz
push
and
inc
and
call
xlat
push
div
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
(bad)
sti
sti
sti
call
add
or
add
and
cld
cld
cld
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
idiv
push
and
jmp
cmp
call
xor
inc
and
inc
and
inc
in
in
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
hlt
hlt
push
repnz
clc
clc
clc
call
add
or
add
and
cld
cld
cld
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
call
and
inc
and
inc
and
inc
and
jmp
ds
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
div
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repnz
repnz
repnz
icebp
icebp
(bad)
call
repz
add
add
add
cld
cld
cld
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
inc
into
stc
dec
and
inc
and
inc
and
inc
and
call
jmp
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
div
push
hlt
hlt
push
repnz
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
loop
(bad)
in
in
in
call
add
or
add
and
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
jmp
inc
and
inc
and
jmp
(bad)
(bad)
cli
cli
cli
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
repz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
loope
jmp
out
jmp
add
or
add
and
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
idiv
jmp
inc
idiv
push
and
inc
and
call
jmp
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
repnz
lock
in
in
in
(bad)
jmp
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
loop
jmp
loope
jmp
add
or
add
and
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
and
inc
and
call
xor
call
(bad)
fdivr
out
out
out
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
icebp
icebp
(bad)
out
out
out
(bad)
jmp
jmp
out
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
(bad)
(bad)
(bad)
mov
add
or
add
and
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
cld
dec
clc
inc
and
inc
and
dec
sub
(bad)
fcomp
fdivr
out
out
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
icebp
icebp
(bad)
out
out
out
(bad)
jmp
jmp
out
jmp
in
jmp
loop
jmp
loopne
(bad)
fstp
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcomp
fdivr
mov
add
or
add
and
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
fdivr
dec
and
inc
and
dec
and
(bad)
mov
loopne
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
hlt
hlt
push
repnz
out
out
out
(bad)
jmp
jmp
call
out
jmp
loop
jmp
loope
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
fcmovu
(bad)
xlat
xlat
xlat
push
xchg
xchg
xchg
add
add
add
and
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
dec
and
inc
and
inc
and
dec
and
jmp
fcmovnu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
icebp
icebp
(bad)
in
in
in
jmp
loope
(bad)
fcomp
fdivr
aam
aam
aam
aam
rcl
sar
rcl
sar
rcl
sar
rcl
sar
iret
iret
iret
dec
iret
iret
call
rcl
dec
int3
int3
push
stos
stos
hlt
jns
jns
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
cld
(bad)
cmp
idiv
push
and
inc
and
inc
and
inc
and
dec
fcmovu
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
cmc
cmc
push
repnz
out
out
out
dec
retf
retf
push
leave
leave
dec
retf
retf
dec
int
dec
iret
iret
call
rcl
call
rcl
call
aam
call
aad
call
rcl
inc
mov
mov
mov
hlt
xchg
xchg
xchg
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repz
dec
sub
inc
and
inc
and
inc
and
inc
and
(bad)
jge
(bad)
fcmovu
(bad)
clc
clc
clc
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
icebp
icebp
(bad)
in
in
in
push
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loopne
dec
int3
int3
push
xchg
xchg
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
fdivr
inc
and
inc
and
call
repnz
sub
inc
and
jmp
out
fcmovnu
(bad)
clc
clc
clc
(bad)
stc
stc
stc
push
div
push
repnz
lock
jmp
jmp
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loopne
dec
int3
int3
(bad)
mov
call
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
dec
sar
inc
and
inc
and
push
dec
in
dec
and
jmp
in
fstp
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
cmc
cmc
push
repnz
out
out
out
(bad)
jmp
jmp
mov
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loopne
dec
int3
int3
(bad)
mov
call
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
jmp
idiv
push
and
jmp
inc
in
inc
and
inc
and
inc
fdivr
cld
cld
cld
(bad)
clc
clc
clc
push
cmc
cmc
push
repnz
out
out
out
(bad)
jmp
jmp
mov
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loopne
dec
int3
int3
(bad)
mov
sahf
sahf
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
sti
cld
dec
idiv
push
and
dec
and
inc
and
inc
and
call
out
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
hlt
hlt
push
repnz
out
out
out
(bad)
jmp
jmp
rol
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loope
dec
int3
int3
inc
rol
mov
add
and
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
fcmovu
cld
push
dec
idiv
push
and
inc
and
jmp
cmp
(bad)
fnstsw
out
stc
stc
stc
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
hlt
hlt
push
repnz
out
out
out
(bad)
in
in
in
inc
mov
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loope
dec
iret
iret
inc
ret
ret
hlt
cmps
cmps
cmps
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cld
jmp
xchg
cli
(bad)
fsub
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
cmc
cmc
push
repnz
lock
in
in
in
dec
retf
retf
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
repnz
loope
dec
iret
iret
inc
vpmuludq
add
and
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
clc
clc
clc
push
div
push
repnz
lock
in
in
in
call
rcl
(bad)
sti
sti
sti
push
repnz
loope
dec
iret
iret
inc
mov
stos
stos
stos
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
push
div
push
hlt
hlt
push
icebp
icebp
(bad)
out
out
out
call
aam
push
div
jmp
loop
dec
iret
iret
dec
enter
stos
stos
inc
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
hlt
hlt
push
repnz
lock
fcmovu
(bad)
lock
iret
iret
dec
int3
int3
sti
mov
mov
add
add
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
div
push
hlt
hlt
push
repnz
(bad)
(bad)
loop
loop
int
int
mov
add
add
add
pop
hlt
hlt
hlt
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
clc
clc
clc
push
div
push
hlt
hlt
jmp
in
(bad)
fcomp
fdivr
mov
add
add
add
or
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
icebp
icebp
(bad)
(bad)
(bad)
mov
add
add
add
add
(bad)
ins
loop
loop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loopne
loopne
loopne
into
into
into
push
add
add
clc
add
add
add
push
add
add
add
push
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
lock
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
pop
(bad)
push
add
add
ud0
lock
add
pop
(bad)
push
add
add
aas
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
push
add
add
add
add
add
pop
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
popa
add
add
add
pop
add
add
add
xor
add
sbb
add
or
add
add
add
pop
add
add
add
add
add
add
add
jp
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
test
add
jbe
add
pop
add
add
add
adc
add
add
add
sub
add
push
add
add
push
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
push
push
out
cmp
rol
add
add
add
add
and
add
or
add
adc
add
xor
or
xor
mov
jae
inc
jg
inc
jg
inc
dec
idiv
add
inc
dec
idiv
add
inc
push
cmc
inc
push
cmc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
ins
add
add
add
add
add
add
add
add
popa
popa
popa
fcmovb
ret
ret
inc
mov
sti
inc
fwait
sti
inc
fwait
sti
inc
jg
inc
jg
inc
dec
idiv
add
inc
dec
idiv
add
cmc
inc
push
cmc
inc
push
cmc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
dec
mov
add
adc
add
adc
add
aaa
xchg
cld
inc
mov
cld
inc
jg
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
add
add
add
add
add
add
add
lahf
lahf
lahf
inc
mov
cld
inc
fwait
sti
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
jmp
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aaa
add
add
add
add
add
add
lahf
lahf
lahf
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
or
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
ret
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
jmp
out
jmp
out
jmp
out
inc
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
dec
or
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
retf
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
add
loopne
add
loopne
add
loopne
push
push
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
add
loopne
add
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
iret
inc
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
je
icebp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
sar
add
mov
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
xor
call
(bad)
(bad)
(bad)
(bad)
jmp
out
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
sar
add
sar
test
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
idiv
xchg
in
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
jmp
out
jmp
out
jmp
out
jmp
out
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
jecxz
add
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
call
in
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
out
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
add
loope
add
loope
add
loope
or
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
loope
add
loope
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sar
xor
call
push
xor
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
call
aad
(bad)
(bad)
(bad)
(bad)
call
aad
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
add
in
add
in
inc
inc
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
sar
add
(bad)
xchg
aaa
add
add
add
add
add
add
cmps
cmps
cmps
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
add
in
add
in
lods
lods
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
sar
add
(bad)
mov
aaa
add
add
add
add
add
add
cmps
cmps
cmps
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
and
(bad)
jmp
(bad)
(bad)
(bad)
jmp
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
or
out
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sar
add
in
add
in
add
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
(bad)
inc
add
dec
add
aaa
add
add
add
add
add
add
cmps
cmps
cmps
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
idiv
lods
lods
idiv
lods
lods
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
jmp
and
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
lods
idiv
lods
lods
idiv
lods
lods
idiv
lods
lods
idiv
lods
lods
idiv
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
(bad)
inc
add
dec
add
add
add
add
add
add
add
cmps
cmps
cmps
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sar
bound
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
icebp
dec
or
inc
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
add
add
add
add
add
cmps
cmps
cmps
inc
mov
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
add
add
add
add
add
test
test
add
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
add
add
add
add
add
test
test
add
cld
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
aaa
add
add
add
add
add
add
test
cld
cld
(bad)
cld
cld
cld
(bad)
out
out
out
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
(bad)
rcl
sar
(bad)
(bad)
(bad)
inc
add
aaa
add
add
add
add
add
add
test
cld
cld
(bad)
cld
cld
cld
(bad)
out
out
out
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
(bad)
rcl
sar
(bad)
(bad)
(bad)
inc
add
aaa
add
add
add
add
add
add
test
cld
cld
(bad)
cld
cld
cld
(bad)
out
out
out
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
call
fdivr
rcl
sar
nop
nop
nop
inc
add
aaa
add
add
add
add
add
add
test
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
fdivr
rcl
sar
nop
nop
nop
inc
add
aaa
add
add
add
add
add
add
stos
stos
stos
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
loope
rcl
sar
xchg
xchg
xchg
inc
add
aaa
add
add
add
add
add
add
stos
stos
stos
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
out
loope
loope
fcmovnu
(bad)
xlat
xlat
xlat
(bad)
fcmovu
(bad)
loop
loop
out
out
call
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
loope
call
aad
call
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
push
movs
scas
jmp
cmps
mov
scas
mov
inc
ret
iret
iret
iret
dec
retf
retf
dec
leave
leave
call
rcl
jmp
loop
(bad)
call
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
fcomp
fdivr
xchg
xchg
xchg
inc
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
call
in
jmp
lock
sti
dec
sub
inc
and
inc
and
dec
std
jmp
ds
call
fdivrp
mov
sar
rcl
dec
retf
mov
call
aad
jmp
jecxz
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
loop
(bad)
fcomp
fdivr
xchg
xchg
xchg
inc
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
lock
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
inc
es
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
push
xchg
call
rcl
inc
(bad)
(bad)
dec
retf
retf
jmp
loopne
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
loop
(bad)
fcmovu
(bad)
xchg
xchg
xchg
inc
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
call
sub
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
int3
push
rcl
dec
leave
leave
dec
leave
leave
(bad)
(bad)
fdivrp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
jecxz
(bad)
fcmovu
(bad)
xchg
xchg
xchg
inc
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
dec
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
cs
dec
sub
inc
pop
cmc
inc
and
inc
and
inc
and
inc
and
jmp
movs
ret
call
rcl
dec
enter
retf
(bad)
fdivrp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
jecxz
(bad)
fcmovnu
(bad)
cwde
cwde
cwde
inc
add
aaa
add
add
add
add
add
add
scas
scas
scas
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
call
sub
idiv
push
and
inc
and
inc
and
push
and
pushf
mov
repz
dec
repnz
and
inc
and
inc
and
inc
and
call
cmp
call
rcl
inc
mov
retf
(bad)
(bad)
fdivrp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
out
(bad)
(bad)
fdivr
cwde
cwde
cwde
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
cmp
inc
and
inc
and
inc
and
dec
and
jmp
(bad)
call
aad
jmp
loop
(bad)
in
in
in
dec
shr
(bad)
js
cmc
dec
and
inc
and
inc
and
jmp
cmp
jmp
rcl
dec
enter
leave
leave
jmp
loopne
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
out
(bad)
(bad)
fdivr
cdq
cdq
cdq
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
dec
idiv
push
and
inc
and
dec
and
(bad)
cmp
iret
inc
(bad)
retf
inc
mov
iret
rcl
(bad)
jmp
in
in
call
sub
idiv
push
and
inc
and
jmp
cmp
jmp
iret
iret
inc
mov
retf
retf
retf
jmp
jecxz
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
out
jmp
loope
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
out
jmp
icebp
inc
and
inc
and
inc
and
inc
and
(bad)
cmp
inc
(bad)
retf
retf
retf
dec
enter
int3
int3
(bad)
(bad)
fdivrp
in
in
in
inc
enter
cmp
inc
and
inc
and
inc
and
jmp
inc
in
mov
into
into
inc
mov
rcl
sar
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
call
loop
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
jne
dec
and
inc
and
inc
and
inc
and
jmp
inc
in
lods
mov
dec
iret
sar
int3
int3
int3
dec
retf
retf
call
xlat
xlat
(bad)
out
out
out
jmp
das
clc
inc
and
inc
and
inc
and
dec
iret
call
rcl
dec
int3
int3
dec
leave
leave
(bad)
(bad)
fdivr
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
call
loop
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
repz
idiv
push
and
inc
and
inc
and
call
nop
(bad)
dec
iret
sar
rcl
sar
retf
retf
retf
call
rcl
(bad)
in
in
in
call
sub
inc
and
inc
and
call
sub
(bad)
jge
mov
dec
retf
retf
dec
retf
retf
jmp
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
jecxz
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
repnz
repnz
repnz
repnz
repnz
repnz
xor
inc
and
inc
and
inc
and
inc
and
call
sar
mov
fcomp
call
rcl
dec
int3
int3
jmp
loope
jmp
loopne
push
and
inc
and
inc
and
jmp
mov
(bad)
fcomp
fdivr
int3
int3
int3
call
(bad)
(bad)
(bad)
out
out
out
push
repnz
repnz
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
jecxz
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
inc
cmc
inc
and
inc
and
inc
and
inc
and
jmp
inc
cld
inc
int3
sar
fcmovnu
(bad)
iret
iret
iret
dec
retf
sub
icebp
inc
and
inc
and
inc
and
dec
sar
rcl
aad
rcl
sar
retf
retf
retf
jmp
jecxz
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
out
call
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
push
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
fucom
bnd
dec
sub
inc
and
inc
and
inc
and
inc
and
dec
fdivrp
lahf
mov
fdivr
fstp
(bad)
mov
cs
inc
and
inc
and
call
sub
sar
(bad)
dec
into
into
call
rcl
(bad)
in
in
in
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
call
lahf
lahf
inc
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
out
out
out
push
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
inc
cmc
inc
and
inc
and
inc
and
inc
and
call
aaa
std
call
enter
mov
jmp
leave
inc
and
inc
and
inc
and
jmp
dec
repz
mov
xlat
xlat
dec
int3
int3
(bad)
fcmovnu
(bad)
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
call
mov
add
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repz
lock
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
shl
jmp
cmc
dec
and
inc
and
inc
and
inc
and
inc
and
call
cmp
jmp
mov
mov
inc
jmp
inc
and
inc
and
jmp
(bad)
rcl
call
rcl
call
rcl
(bad)
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
jmp
mov
add
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repz
lock
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
icebp
repz
push
cmc
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
inc
in
jmp
inc
jmp
inc
and
inc
and
call
xor
jmp
(bad)
(bad)
dec
into
into
(bad)
fcomp
fdivr
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
in
in
in
jmp
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repz
lock
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
fsub
repz
dec
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
fdivrp
enter
rcl
sar
rcl
sar
out
out
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
in
in
in
jmp
add
aaa
add
add
add
add
add
add
mov
mov
cld
cld
cld
(bad)
cld
cld
cld
push
repz
lock
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
fsub
repz
jge
cmc
call
xor
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
sub
jmp
aad
dec
iret
iret
call
rcl
(bad)
fcomp
fdivr
out
out
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
repz
lock
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
icebp
repz
fsubp
repz
cmc
call
xor
dec
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
call
dec
leave
retf
int3
into
call
rcl
call
rcl
call
aad
jmp
loope
(bad)
out
out
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
repz
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
jmp
out
push
cmc
jmp
cmp
dec
es
push
and
inc
and
inc
and
inc
and
inc
and
call
icebp
jmp
jmp
int3
call
rcl
call
(bad)
(bad)
call
rcl
(bad)
fstp
(bad)
jmp
jmp
repnz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
lock
lock
lock
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
lock
lock
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repnz
dec
das
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
inc
idiv
lea
(bad)
call
rcl
(bad)
fcmovu
(bad)
rcl
sar
fcomp
fdivr
in
in
lock
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
repnz
repnz
icebp
bnd
out
jmp
out
(bad)
(bad)
fdivr
fcomp
fdivr
fstp
(bad)
out
out
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
call
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
inc
std
push
int3
jmp
retf
(bad)
fdivrp
(bad)
(bad)
(bad)
call
rcl
(bad)
(bad)
fdivrp
jmp
icebp
icebp
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
jmp
repz
leave
icebp
call
xchg
push
(bad)
call
rcl
aad
rcl
sar
retf
retf
retf
(bad)
fcomp
fdivr
in
in
in
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repz
repz
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
jmp
cs
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
das
std
dec
jmp
(bad)
mov
loope
(bad)
(bad)
fdivr
rcl
sar
fcomp
fdivr
jecxz
jecxz
jmp
jmp
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
outs
idiv
push
xor
inc
and
inc
and
inc
and
inc
and
jmp
dec
cld
push
dec
retf
xlat
xlat
xlat
dec
int3
int3
call
rcl
(bad)
in
in
in
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repz
repz
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
jmp
push
idiv
push
and
inc
and
inc
and
dec
sub
call
loopne
xor
dec
and
(bad)
inc
and
inc
and
inc
and
inc
and
inc
and
push
dec
cmc
jmp
call
retf
sar
jmp
fcomp
call
rcl
(bad)
fstp
(bad)
out
out
in
in
in
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
jmp
out
push
cmc
call
sub
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
fdivr
(bad)
(bad)
aad
aad
retf
retf
retf
call
(bad)
(bad)
push
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repz
cmc
cmc
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repnz
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
jnp
cmc
dec
and
idiv
push
and
dec
es
jnp
sar
enter
add
call
cs
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
xor
(bad)
cmp
jmp
mov
mov
fcmovnu
jmp
in
(bad)
fcomp
fdivr
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
loop
loop
jmp
jmp
repnz
cmc
cmc
dec
shl
inc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
(bad)
retf
call
rcl
dec
int3
int3
jmp
loopne
push
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repz
cmc
cmc
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
fucom
idiv
sbb
and
inc
and
inc
and
jmp
ds
in
out
out
out
int3
into
sar
lods
mov
push
xlat
jmp
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
dec
(bad)
je
jmp
in
jmp
loope
(bad)
fcmovnu
(bad)
fcmovu
(bad)
jmp
mov
std
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
ds
dec
and
idiv
push
and
dec
and
call
rcl
dec
iret
iret
call
rcl
(bad)
out
out
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
cmc
cmc
push
div
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
inc
idiv
push
and
inc
and
inc
and
dec
sub
call
fstp
call
rcl
push
lock
div
call
fdivr
call
idiv
or
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
cld
jmp
sar
ins
(bad)
call
rcr
push
cmp
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
(bad)
cmp
jmp
retf
ds
cld
inc
and
inc
and
inc
and
jmp
inc
idiv
ret
call
rcl
call
rcl
jmp
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
(bad)
stc
stc
stc
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
dec
sub
inc
and
inc
and
dec
and
inc
mov
call
rcl
call
aad
push
icebp
repnz
div
push
div
(bad)
jmp
idiv
int3
shl
dec
inc
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
call
cs
call
in
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
repz
jge
sar
enter
jmp
fsub
dec
icebp
inc
and
inc
and
inc
and
inc
and
jmp
rcl
call
rcl
jmp
in
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
(bad)
stc
stc
stc
jmp
add
aaa
add
add
add
add
add
add
mov
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
icebp
idiv
sbb
idiv
push
and
inc
and
call
mov
(bad)
(bad)
fdivr
iret
iret
iret
jmp
out
push
div
push
div
push
div
push
div
push
div
jmp
out
inc
into
idiv
outs
xor
and
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
out
imul
jmp
(bad)
(bad)
cmp
dec
and
idiv
push
and
inc
and
inc
and
jmp
fdivr
int3
int3
into
call
rcl
jmp
in
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
div
(bad)
sti
sti
sti
jmp
add
aaa
add
add
add
add
add
add
rol
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
call
idiv
or
idiv
push
and
inc
and
dec
daa
(bad)
jmp
mov
call
rcl
(bad)
(bad)
fdivr
repz
div
push
div
push
div
push
div
push
div
push
div
push
cmc
idiv
lock
idiv
(bad)
retf
idiv
ins
xor
and
sub
dec
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
dec
and
dec
and
dec
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
loop
retf
retf
int3
call
rcl
(bad)
in
in
in
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
stc
stc
stc
(bad)
cld
cld
cld
jmp
add
aaa
add
add
add
add
add
add
rol
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
jmp
and
inc
and
inc
and
inc
and
push
aad
call
(bad)
(bad)
call
rcl
(bad)
in
in
in
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
dec
shl
call
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
call
fcomp
(bad)
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
stc
stc
stc
(bad)
cld
cld
cld
jmp
add
aaa
add
add
add
add
add
add
ret
ret
ret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
repz
pop
xor
inc
and
inc
and
inc
and
call
xor
call
loope
call
rcl
jmp
in
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
jl
idiv
or
idiv
push
and
inc
and
inc
and
inc
and
inc
and
call
sub
cmc
call
sub
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
idiv
popa
jne
jmp
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
stc
stc
stc
(bad)
cld
cld
cld
jmp
add
aaa
add
add
add
add
add
add
ret
ret
ret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
call
idiv
push
and
inc
and
inc
and
inc
and
jmp
mov
call
rcl
(bad)
fcmovnu
(bad)
div
idiv
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
idiv
push
and
inc
and
inc
and
inc
and
inc
and
call
sti
dec
(bad)
lahf
stos
out
(bad)
js
stc
call
inc
inc
idiv
sub
inc
idiv
xor
pop
idiv
pop
outs
idiv
test
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
stc
stc
stc
(bad)
cld
cld
cld
jmp
add
aaa
add
add
add
add
add
add
ret
ret
ret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
and
inc
and
inc
and
inc
and
(bad)
cmp
dec
rcr
(bad)
fcomp
fdivr
rcl
sar
repnz
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
dec
sar
call
ss
push
and
inc
and
inc
and
inc
and
inc
and
dec
test
jmp
out
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
in
jmp
in
push
cmc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repnz
call
xor
idiv
push
and
inc
and
call
(bad)
call
jecxz
call
rcl
jmp
out
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
out
lock
inc
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
(bad)
fcmovu
(bad)
in
in
in
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
idiv
jmp
inc
and
inc
and
inc
and
inc
and
jmp
mov
call
rcl
(bad)
fcmovnu
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
leave
sar
jmp
jmp
div
idiv
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
mov
and
inc
and
inc
and
inc
and
inc
out
dec
int3
(bad)
(bad)
fcomp
fdivr
rcl
sar
cmc
cmc
cmc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
mov
xor
inc
and
inc
and
inc
and
inc
and
inc
and
call
xor
jmp
jmp
push
repnz
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
mov
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
push
cmc
cmc
push
div
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
out
call
idiv
push
and
inc
and
inc
and
call
test
fdivrp
rcl
sar
in
in
in
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
in
inc
idiv
push
and
inc
and
inc
and
inc
and
inc
and
dec
es
(bad)
jns
aad
jecxz
in
jmp
jmp
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
mov
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
repz
call
clc
inc
and
inc
and
inc
and
dec
and
test
out
out
aad
aad
loope
loope
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
(bad)
aas
push
(bad)
xlat
fcomp
jmp
loop
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
enter
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
call
and
inc
and
inc
and
inc
and
call
loope
rcl
fdivr
fcomp
fdivr
xlat
xlat
xlat
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
mov
das
idiv
push
and
inc
and
inc
and
inc
and
inc
and
call
xor
inc
(bad)
fstp
(bad)
cmc
cmc
cmc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
enter
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
call
(bad)
stc
dec
idiv
push
and
inc
and
inc
and
jmp
inc
std
push
(bad)
call
aad
push
repnz
sti
sti
sti
(bad)
out
lock
call
clc
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
dec
fdivr
in
in
in
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
enter
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
out
(bad)
cmp
inc
and
inc
and
inc
and
dec
sub
jmp
loopne
call
aad
jmp
out
(bad)
sti
sti
sti
jmp
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
(bad)
rcl
sar
loopne
loopne
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
leave
leave
leave
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
clc
sti
(bad)
jl
clc
inc
and
inc
and
inc
and
inc
and
inc
fcmovnu
call
aad
jmp
jecxz
jmp
out
jmp
dec
idiv
push
and
inc
and
inc
and
inc
and
inc
and
call
ret
sar
fcmovnu
(bad)
cmc
cmc
cmc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
push
add
aaa
add
add
add
add
add
add
leave
leave
leave
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
and
inc
and
inc
and
inc
and
dec
icebp
dec
retf
sar
fcomp
fdivr
fcmovnu
fdivr
test
idiv
push
and
inc
and
inc
and
inc
and
inc
and
(bad)
jp
leave
call
(bad)
(bad)
(bad)
call
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
leave
leave
leave
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
dec
sar
call
xor
inc
and
inc
and
inc
and
jmp
ds
(bad)
mov
(bad)
push
xor
inc
and
inc
and
inc
and
inc
and
inc
and
(bad)
cmp
dec
iret
sar
loope
loope
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
retf
retf
retf
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
div
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
jmp
idiv
push
and
inc
and
inc
and
dec
and
ret
loopne
call
out
push
and
inc
and
inc
and
inc
and
inc
and
dec
sub
call
fstp
(bad)
out
out
out
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
retf
retf
retf
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
sti
(bad)
js
clc
inc
and
inc
and
inc
and
inc
and
dec
mov
repnz
and
inc
and
inc
and
inc
and
inc
and
call
sar
(bad)
(bad)
fdivr
loop
loop
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
int3
int3
int3
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
and
inc
and
inc
and
inc
and
call
in
dec
popa
in
inc
and
inc
and
inc
and
inc
and
inc
and
call
cmp
jmp
jecxz
push
icebp
icebp
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
repz
repz
repz
div
(bad)
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
int3
int3
int3
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
mov
xor
idiv
push
and
inc
and
call
and
idiv
push
and
inc
and
inc
and
inc
and
jmp
mov
loop
jecxz
jecxz
jecxz
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
lock
lock
lock
repz
cld
cld
cld
(bad)
mov
add
aaa
add
add
add
add
add
add
int3
int3
int3
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
in
(bad)
ds
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
inc
idiv
mov
into
jmp
loop
push
icebp
icebp
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repz
repz
repz
repz
repz
repz
lock
jmp
jmp
out
(bad)
sti
sti
sti
(bad)
mov
add
aaa
add
add
add
add
add
add
iret
iret
iret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
call
clc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
mov
call
in
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repz
repz
repnz
repnz
repnz
lock
lock
lock
lock
lock
lock
lock
out
jmp
out
(bad)
jmp
sti
sti
(bad)
mov
add
aaa
add
add
add
add
add
add
iret
iret
iret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
dec
out
int3
iret
(bad)
fstp
(bad)
repnz
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repnz
repnz
repnz
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
jmp
out
jmp
loope
jmp
jecxz
(bad)
stc
stc
stc
inc
rol
add
add
add
add
add
add
add
add
iret
iret
iret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
sub
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
daa
(bad)
(bad)
jns
(bad)
jmp
out
jmp
in
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
repz
repz
repnz
repnz
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
jmp
out
(bad)
fcmovnu
(bad)
loope
loope
div
idiv
rol
inc
add
aaa
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
dec
sar
jmp
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
inc
loop
aad
loopne
fstp
(bad)
cmc
cmc
cmc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
fcomp
(bad)
fcmovu
(bad)
div
idiv
ret
ret
ret
inc
add
aaa
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
jmp
idiv
push
and
inc
and
inc
and
inc
and
inc
and
dec
and
into
jmp
out
jmp
jecxz
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
call
call
call
(bad)
call
call
call
(bad)
call
fcmovnu
call
aad
push
cmc
cmc
inc
(bad)
(bad)
inc
add
aaa
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
clc
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
inc
loopne
xlat
fcomp
(bad)
fcmovu
(bad)
icebp
icebp
icebp
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
call
(bad)
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
(bad)
fdivr
rcl
sar
cmc
cmc
cmc
inc
(bad)
(bad)
inc
add
aaa
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
out
(bad)
cmp
idiv
push
and
inc
and
inc
and
inc
and
dec
and
jmp
(bad)
jecxz
jecxz
loopne
loopne
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
out
jmp
out
jmp
out
jmp
out
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
dec
int3
int3
push
repz
mov
add
add
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
and
idiv
push
and
inc
and
inc
and
call
xor
dec
int3
sar
aad
aad
loope
loope
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
out
jmp
out
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
dec
int3
int3
push
repnz
mov
add
add
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
jmp
cld
dec
clc
inc
and
inc
and
inc
and
inc
and
inc
and
push
dec
(bad)
loopne
loopne
aad
aad
(bad)
fdivrp
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
out
jmp
out
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loop
dec
iret
iret
push
repnz
enter
add
aaa
add
add
add
add
add
add
rcl
sar
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
daa
idiv
push
and
inc
and
inc
and
inc
and
inc
and
call
(bad)
call
aad
(bad)
fcmovnu
(bad)
cmc
cmc
cmc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
call
call
jmp
out
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loope
jmp
loope
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
rcl
sar
jecxz
jecxz
enter
add
add
add
adc
add
adc
add
aaa
aad
aad
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
idiv
jmp
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
sub
(bad)
fcmovu
(bad)
aad
aad
fcmovnu
(bad)
repnz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
out
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loope
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivr
iret
iret
iret
(bad)
(bad)
fdivr
mov
add
add
add
add
add
add
add
aad
aad
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
dec
(bad)
sti
jmp
cmp
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
stos
fdivr
fcmovu
(bad)
xlat
xlat
xlat
(bad)
in
in
in
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
out
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovnu
(bad)
rol
(bad)
mov
cmps
cmps
inc
add
and
add
or
add
adc
add
aaa
fcomp
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
cld
call
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
(bad)
(bad)
(bad)
fdivr
aad
aad
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loope
jmp
loope
(bad)
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
retf
retf
retf
push
test
call
add
adc
add
add
add
add
add
add
fcomp
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
in
lock
dec
clc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
jmp
aad
loopne
loopne
rcl
sar
out
out
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
push
div
push
div
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
call
jmp
jecxz
jmp
loop
jmp
loop
jmp
loope
jmp
loope
(bad)
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
enter
scas
scas
scas
jmp
stos
stos
dec
add
or
add
add
add
adc
add
aaa
fcomp
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
fdivr
call
idiv
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
call
sar
loop
loop
rcl
sar
jecxz
jecxz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
enter
enter
mov
mov
inc
mov
mov
inc
mov
mov
inc
(bad)
(bad)
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
enter
enter
enter
mov
(bad)
mov
test
jmp
scas
scas
jmp
cmp
add
add
add
add
add
fcmovu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
cld
call
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
(bad)
cmp
jmp
in
call
rcl
jmp
loope
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
call
rcl
(bad)
jnp
jnp
lea
xchg
call
cdq
cdq
call
sahf
sahf
call
mov
mov
jmp
test
jmp
stos
stos
jmp
scas
scas
push
mov
push
mov
push
mov
(bad)
mov
mov
mov
cmps
cmps
cmps
aam
cmp
add
add
add
add
add
fcmovu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
dec
clc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
jmp
cmp
jmp
out
call
rcl
jmp
loope
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
inc
mov
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
push
test
aam
cmp
add
add
add
add
add
fcmovu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
jmp
jmp
ds
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
call
xor
(bad)
jmp
jmp
aad
aad
fstp
(bad)
div
idiv
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
call
rcl
dec
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
push
test
cmp
add
add
adc
add
aaa
fcmovnu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
out
dec
and
inc
and
inc
and
inc
and
inc
and
dec
and
cmc
inc
and
inc
and
inc
and
call
xor
call
xlat
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
cmc
cmc
cmc
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
repnz
out
out
out
(bad)
out
out
out
(bad)
in
in
in
dec
retf
retf
call
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
push
lods
lods
aam
inc
inc
sbb
add
add
add
adc
add
aaa
fcmovnu
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
and
inc
and
inc
and
inc
and
inc
and
call
cmp
call
sub
inc
and
inc
and
inc
and
call
das
cmc
push
fcmovnu
(bad)
(bad)
fdivr
cmc
cmc
cmc
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
lock
lock
in
in
in
(bad)
jmp
retf
retf
call
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
scas
scas
aam
inc
inc
sbb
add
add
add
adc
add
aaa
(bad)
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
and
inc
and
inc
and
inc
and
inc
and
inc
call
inc
and
inc
and
inc
and
call
das
cmc
push
fcmovnu
(bad)
(bad)
fdivr
cmc
cmc
cmc
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
int3
int3
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
scas
scas
aam
inc
inc
sbb
add
add
add
adc
add
aaa
(bad)
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
idiv
push
and
inc
and
inc
and
call
sub
call
out
sbb
idiv
push
and
inc
and
call
das
idiv
mov
fdivr
fcmovnu
(bad)
fstp
(bad)
div
idiv
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
cmc
cmc
push
cmc
cmc
push
repnz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
int3
int3
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
mov
aam
inc
inc
sbb
add
add
add
adc
add
aaa
(bad)
fdivr
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
call
and
inc
and
inc
and
inc
and
jmp
inc
in
(bad)
cmp
in
dec
cmc
inc
and
inc
and
inc
and
call
xor
(bad)
mov
fcomp
jmp
loope
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
iret
iret
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
mov
aam
inc
inc
sbb
add
add
add
adc
add
aaa
loope
loope
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
mov
and
inc
and
inc
and
inc
and
inc
call
inc
and
inc
and
inc
and
inc
and
call
xor
(bad)
in
in
in
call
rcl
jmp
jecxz
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
rcl
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
mov
aam
inc
inc
sbb
add
add
add
adc
add
aaa
loope
loope
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
jmp
call
idiv
push
and
inc
and
inc
and
jmp
inc
in
call
xor
inc
and
inc
and
inc
and
inc
and
jmp
cmp
jmp
out
call
rcl
jmp
out
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
rcl
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
(bad)
mov
mov
aam
inc
inc
sbb
add
add
add
adc
add
aaa
loope
loope
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cld
call
clc
inc
and
inc
and
inc
and
dec
and
dec
and
inc
and
inc
and
inc
and
inc
and
dec
sar
loop
loop
xlat
xlat
xlat
(bad)
out
out
out
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
rcl
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
call
aad
dec
int3
int3
inc
(bad)
(bad)
inc
rol
mov
inc
inc
sbb
add
add
add
adc
add
aaa
loop
loop
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
mov
es
push
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
push
fdivr
(bad)
fdivr
fstp
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
rcl
push
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
int3
int3
int3
inc
(bad)
(bad)
inc
rol
mov
inc
inc
sbb
add
add
add
adc
add
aaa
loop
loop
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
clc
cld
(bad)
jge
stc
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
dec
and
aad
fstp
(bad)
repnz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
jmp
rcl
push
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
(bad)
(bad)
inc
ret
ret
(bad)
mov
inc
inc
sbb
add
add
add
adc
add
aaa
jecxz
jecxz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
idiv
call
aaa
idiv
push
and
inc
and
inc
and
inc
and
inc
and
jmp
jmp
icebp
icebp
icebp
push
div
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
call
aad
(bad)
mov
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
inc
inc
sbb
add
add
add
adc
add
aaa
jecxz
jecxz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
fcmovu
sti
dec
dec
idiv
and
idiv
xchg
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
fcomp
fdivr
mov
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
mov
(bad)
mov
inc
inc
sbb
add
add
add
adc
add
aaa
jecxz
jecxz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
cld
(bad)
jmp
cld
jmp
jmp
(bad)
jmp
stc
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
in
in
in
(bad)
fcomp
fdivr
mov
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
mov
inc
ret
inc
inc
inc
sbb
add
add
add
adc
add
aaa
out
out
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
in
in
in
(bad)
fcmovu
(bad)
ret
ret
ret
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
enter
ret
aam
inc
inc
sbb
add
add
add
adc
add
aaa
out
out
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
repz
repnz
repnz
lock
out
out
out
(bad)
in
in
in
(bad)
fcmovnu
(bad)
mov
(bad)
cld
cld
cld
(bad)
stc
stc
stc
push
repnz
jmp
loope
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
enter
(bad)
aam
inc
inc
sbb
add
add
add
adc
add
aaa
out
out
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
(bad)
(bad)
fdivr
leave
leave
leave
(bad)
cld
cld
cld
push
repz
jmp
loop
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
leave
leave
leave
inc
vpmullw
push
sbb
add
add
add
adc
add
aaa
call
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
lock
out
out
out
jmp
loope
dec
retf
retf
(bad)
cld
cld
cld
(bad)
out
out
out
jmp
loop
(bad)
fcomp
fdivr
iret
iret
iret
inc
mov
retf
retf
retf
inc
mov
sbb
add
add
add
adc
add
aaa
call
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
repz
repz
repnz
lock
lock
loop
dec
iret
iret
(bad)
cld
cld
cld
(bad)
call
fcomp
dec
iret
iret
inc
mov
retf
retf
retf
call
rcl
icebp
jo
jo
add
add
add
add
add
add
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
lock
lock
jecxz
call
rcl
(bad)
cld
cld
cld
jmp
loope
dec
iret
iret
inc
mov
int3
int3
int3
call
rcl
icebp
mov
add
add
add
add
add
add
add
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repnz
lock
out
call
aad
(bad)
cld
cld
cld
dec
iret
iret
inc
mov
int3
int3
int3
call
rcl
icebp
mov
add
add
add
add
add
add
add
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
jecxz
(bad)
(bad)
fdivr
cmc
cmc
cmc
inc
mov
iret
iret
iret
call
aam
icebp
mov
add
add
add
add
add
add
add
in
in
in
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
repnz
loope
(bad)
jmp
loope
call
rcl
call
xlat
xlat
icebp
mov
add
add
add
add
add
in
in
in
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repz
rcl
push
repz
rcl
(bad)
(bad)
fyl2x
mov
add
add
add
add
add
add
add
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
repnz
loop
jmp
jecxz
(bad)
(bad)
fyl2x
mov
add
add
add
add
add
add
add
fcmovu
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
stc
stc
stc
(bad)
(bad)
fdivr
(bad)
fdivr
fcmovnu
fcomi
mov
add
add
add
add
add
add
add
jmp
stc
stc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
div
jmp
loope
jmp
loop
jmp
loopne
icebp
pushf
pushf
pushf
cmp
add
add
add
add
add
add
add
add
int3
int3
push
(bad)
out
int3
int3
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
dec
enter
(bad)
(bad)
jmp
loop
(bad)
fcmovnu
fcmovnb
movs
movs
movs
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
jg
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
inc
add
jg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
(bad)
(bad)
inc
add
add
aas
(bad)
(bad)
(bad)
(bad)
dec
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
in
or
inc
cmp
popa
out
add
mov
add
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
push
push
push
xchg
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
or
add
call
fs
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
int3
in
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
dec
dec
inc
push
push
inc
inc
push
inc
xor
xor
add
add
and
add
add
sub
add
add
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
test
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
or
push
and
scas
sub
lock
sbb
cdq
test
or
retf
push
mov
retf
add
jp
dec
mov
lock
and
es
lods
sub
xchg
jb
test
call
mov
xor
pop
mov
adc
mov
push
dec
imul
cmps
mov
stos
inc
sti
lods
or
add
retf
add
fwait
mov
cli
mov
sbb
cmp
sub
cmp
jp
pop
lock
fwait
test
dec
add
xchg
(bad)
mov
mov
leave
jmp
add
jo
daa
lock
mov
(bad)
mov
mov
mov
sub
or
fwait
mov
jmp
mov
add
pop
mov
or
pop
add
mov
imul
mov
retf
mov
jp
sub
mov
inc
add
mov
pushf
retf
mov
and
retf
mov
add
mov
xor
mov
rol
mov
data16
call
nop
icebp
dec
lods
xchg
sbb
fstp
dec
mov
jnp
or
mov
sub
jmp
mov
fld
and
add
fwait
sar
pop
mov
aam
mov
ins
movs
add
mov
(bad)
jnp
adc
add
fadd
mov
mov
lods
xchg
lock
pop
ret
add
jmp
les
adc
mov
pop
add
and
adc
pop
les
xchg
add
inc
int3
les
ret
(bad)
pop
int3
lds
mov
cld
scas
sbb
(bad)
dec
(bad)
or
bound
jl
push
pop
add
int3
add
adc
or
(bad)
fs
out
mov
dec
pop
add
enter
jo
add
(bad)
fs
je
mov
pop
fwait
xchg
pushf
add
mov
out
js
and
add
leave
mov
retf
retf
add
push
add
nop
retf
retf
inc
dec
retf
add
jl
mov
xchg
fild
lods
xchg
retf
int3
pushf
retf
retf
retf
int
mov
retf
out
or
(bad)
or
fstp
imul
retf
retf
out
mov
pop
fdivr
dec
retf
retf
add
into
hlt
sbb
pop
mov
xor
add
icebp
jl
push
ror
icebp
mov
add
retf
iret
std
cld
iret
cmc
pushf
iret
adc
into
fnstcw
cmp
or
idiv
popf
retf
adc
mov
retf
neg
rol
in
mov
or
fidivr
and
pop
sub
push
lea
sbb
mov
lds
sbb
adc
pop
lods
ror
(bad)
shl
mov
inc
dec
into
adc
rcl
iret
fsubr
pop
shl
int3
rcl
ror
popf
rcl
or
pop
popf
aad
std
int
cmp
cli
pushf
aam
sub
push
and
jge
inc
dec
iret
add
aam
cmp
jb
dec
sub
popa
ins
aam
popf
aad
mov
jp
shl
(bad)
out
sbb
sbb
rcr
(bad)
rcl
popf
rol
rcl
fdiv
lods
add
pushf
fadd
xlat
or
add
pop
dec
iret
push
in
ror
sub
xchg
ins
aam
dec
aam
or
xchg
ins
(bad)
jp
mov
sar
rcr
rcr
fmul
fld
and
sbb
iret
push
shr
fimul
cmp
mov
add
lods
fmul
fdivp
sbb
mov
rol
lods
iret
lods
in
retf
int
aam
pop
fdiv
frstor
fist
fadd
fidivr
mov
loop
shl
aam
jle
sar
mov
push
std
iret
add
in
cmp
push
ins
aad
jle
mov
in
fldcw
fistp
loope
cmp
cdq
mov
push
pop
loop
sbb
sbb
daa
(bad)
aad
sbb
mov
fst
push
int
xlat
push
fcomip
fstp
sbb
fild
cs
push
pop
xor
cmp
in
aad
out
fist
ds
or
stos
or
sar
cs
sub
(bad)
scas
fcom
iret
and
retf
loope
push
out
mov
mov
out
mov
jns
loopne
mov
jmp
loop
sub
jg
aam
dec
sar
in
mov
(bad)
pop
fisubr
fmulp
stos
dec
iret
fisttp
push
dec
ficomp
aad
mov
xlat
lods
loop
ins
shr
loop
(bad)
out
mov
inc
push
fldenv
pop
loope
sub
mov
fstp
push
jle
xor
in
add
jmp
sahf
fadd
in
jge
cmps
fmulp
lods
cmp
jnp
loope
jge
push
fstp
jmp
out
cs
stc
dec
(bad)
sbb
mov
ficom
sahf
in
cdq
or
mov
fdiv
or
lods
in
into
ret
pop
aam
(bad)
jmp
push
iret
push
jmp
hlt
mov
jns
in
pusha
out
loop
ds
fstp
(bad)
in
loop
popf
fxch
push
jmp
pop
(bad)
lods
rcr
push
jle
out
jmp
leave
mov
xchg
jmp
cs
dec
add
adc
add
loopne
cmp
and
or
and
stos
pop
add
adc
ficomp
repz
sub
push
sub
sbb
lea
cmp
retf
cmc
cmp
push
mov
xchg
fimul
or
fidivr
call
fucom
pop
ds
pop
fimul
fmulp
mov
inc
mov
dec
aas
iret
inc
jg
lock
out
retf
dec
pop
loop
fdivp
sbb
scas
icebp
and
into
out
dec
shr
jl
sbb
fidivr
jecxz
(bad)
fsub
loopne
outs
add
call
nop
add
out
push
out
mul
cli
mov
add
repnz
cmc
cmp
in
mov
xor
stc
push
jg
lea
add
fiadd
fdivr
sti
mov
lods
aas
stos
mov
stc
mov
out
mov
loop
(bad)
clc
iret
das
out
push
out
retf
int3
(bad)
repz
std
pop
out
icebp
fistp
jl
out
lds
sbb
repz
outs
in
mov
mov
std
mov
hlt
outs
mov
sub
mov
out
jo
mov
push
mov
aad
cmc
xor
test
cmp
call
test
mov
arpl
jmp
push
repz
sbb
cmp
test
shl
sub
cdq
sub
fwait
call
pop
fcmovne
mov
mov
sbb
mov
lea
int
dec
sub
dec
in
ins
lods
sub
fisttp
lahf
retf
dec
mov
cs
jmp
aas
pop
cmp
xchg
call
push
jmp
xor
(bad)
inc
(bad)
push
mov
ret
sbb
and
shl
pop
stos
push
aaa
mov
inc
cmp
xchg
or
mov
ror
lea
cdq
xor
mov
sub
sub
cwde
pop
imul
cmps
fs
or
xchg
dec
sub
ret
nop
pop
sub
cmps
mov
cmp
mov
mov
sbb
mov
jb
ja
out
push
dec
mov
xor
xor
test
ins
test
xor
cld
push
xchg
sbb
or
out
std
pop
scas
pop
aas
imul
ins
fcmovnu
mov
inc
xchg
dec
xchg
cwde
jo
loop
and
lods
aas
jge
aaa
jnp
in
add
and
xchg
mov
pop
adc
xor
cmp
lods
loopne
and
lock
jg
cli
fimul
mul
es
ss
xchg
inc
jne
fdivr
lods
push
ret
inc
cmc
jmp
(bad)
test
js
fs
pop
inc
cmp
lea
or
xchg
adc
ret
je
push
ins
mov
xchg
imul
and
or
adc
adc
rcr
popa
gs
jg
jl
inc
push
lahf
mov
lods
mov
xchg
mov
aaa
pop
test
shl
popa
and
fcom
and
push
adc
push
push
ret
adc
mov
ss
or
push
imul
and
mov
lea
mov
mov
jae
adc
adc
dec
or
fstp
inc
sub
imul
stos
mov
xchg
xchg
or
test
dec
pushf
mov
shl
cdq
ins
mov
xor
dec
cmp
jmp
cmps
adc
jle
sbb
jl
pop
stos
lods
in
and
lods
fisttp
div
(bad)
call
mov
sub
test
mov
call
cs
mov
in
mov
xchg
fld
hlt
imul
sub
dec
adc
pusha
(bad)
inc
cwde
fst
push
fadd
ret
cs
jb
mov
sbb
cmp
fdivr
pop
fsubr
leave
aaa
out
push
adc
pop
inc
popa
add
call
aaa
inc
repz
fisubr
inc
pop
retf
pop
retf
push
hlt
mov
mov
sub
xchg
scas
aad
dec
sbb
mov
cld
shr
aaa
mov
mov
dec
in
xchg
sub
and
mov
dec
push
js
xchg
add
je
xchg
ret
pop
stos
fcom
xor
clc
mov
xchg
sub
pop
jb
mov
mov
sti
je
ds
in
mov
mov
mov
push
push
adc
inc
xchg
std
xor
ins
adc
mov
lea
outs
ror
loop
outs
or
sub
mov
mov
in
jl
vdivsd
cmc
cmps
jmp
dec
dec
sti
pop
out
int3
cmp
std
lods
js
cmp
dec
xor
and
adc
(bad)
je
mov
mov
into
(bad)
jmp
loopne
and
clc
out
xor
outs
jle
imul
mov
scas
jns
ret
popf
push
sti
inc
sub
inc
lock
pop
or
cmp
pop
test
pop
add
ss
iret
jns
or
pop
pop
mov
je
xchg
in
and
fadd
fwait
push
mov
ds
in
cmps
cmp
fstp
out
cmp
ret
push
jb
fs
adc
or
ja
push
or
sub
or
mov
das
shr
adc
push
(bad)
lock
(bad)
leave
add
mul
ret
cmps
test
imul
loopne
out
shl
and
ins
shr
mov
ret
lods
jne
mov
stc
mov
xor
and
or
aaa
(bad)
push
cmps
lea
and
dec
aaa
mov
outs
xchg
dec
gs
pop
dec
cmp
dec
sub
and
cmp
retf
add
fnstenv
movs
inc
jno
loop
sahf
cmc
mov
outs
jle
or
cmp
mov
mov
inc
dec
xor
mov
(bad)
imul
xor
ss
lods
shl
mov
iret
dec
and
jb
pop
arpl
and
retf
jo
adc
pop
mov
mov
mov
pop
clc
inc
repz
sub
(bad)
jb
fwait
in
and
sbb
mov
dec
xchg
sub
subps
push
movs
rcr
and
or
lea
and
inc
adc
jae
mov
or
push
mov
inc
or
jo
lock
pop
aad
xor
xchg
cwde
ss
add
sub
nop
pop
or
dec
push
(bad)
ficom
call
(bad)
popf
mov
and
mov
jo
shr
or
retf
mov
and
fcom
or
dec
dec
int
scas
cwde
jnp
imul
fdivr
jne
or
pop
aad
pop
xor
ins
sub
into
xchg
push
mov
dec
stos
pop
xor
xlat
mov
lock
mov
mov
(bad)
in
add
adc
out
push
(bad)
mov
sub
fild
inc
ja
popa
pop
outs
jne
cmp
(bad)
ss
test
repz
inc
and
add
popf
lods
xor
jmp
test
fstp
fidiv
jnp
cli
test
loopne
loope
stos
jg
cdq
pop
lods
xlat
mov
pop
cld
pop
in
and
(bad)
xchg
ins
popa
mov
mov
ret
dec
lock
scas
hlt
push
xor
jl
cld
ficom
sbb
loope
push
inc
or
out
mov
ffree
fidiv
aaa
push
mov
scas
fwait
push
or
xlat
mov
mov
add
xor
adc
and
push
jae
xchg
inc
mov
leave
push
inc
jle
jl
adc
sbb
in
scas
add
enter
xchg
movs
inc
gs
xchg
rep
push
sub
shr
das
cwde
ror
push
mov
fwait
push
pushf
pop
imul
rol
stc
in
sti
ja
pmaxsw
inc
addr16
les
std
addr16
ja
aam
mov
push
or
add
add
dec
mov
mov
add
dec
or
cwde
paddb
mov
jae
fldcw
push
sub
int
jecxz
sbb
sti
cmp
sbb
rcl
out
test
ins
frstor
ins
sbb
mov
jno
lods
jge
and
(bad)
(bad)
into
sar
fwait
int
ss
jo
push
mov
or
jmp
retf
cli
outs
add
int3
mov
ret
bswap
loope
aaa
jl
push
cs
rcl
jne
pushf
loope
pop
aaa
sub
outs
and
xor
test
cmp
dec
mov
out
jbe
leave
inc
jmp
out
cwde
mov
es
fsub
cmp
cli
addr16
hlt
es
aas
jg
ror
pushf
jmp
jge
jae
ror
rol
adc
popf
sub
pop
repnz
addr16
or
ss
adc
adc
jbe
(bad)
sbb
cs
sbb
pop
call
outs
out
cmp
push
jp
add
jo
pop
loopne
jno
daa
fld
push
add
in
pusha
out
lahf
int
into
fwait
pusha
js
stos
fwait
jmp
ror
jl
mov
add
aas
mov
repnz
mov
imul
std
loope
scas
out
lods
push
mov
adc
pop
rep
pop
pop
jmp
xchg
cmp
aad
jl
adc
xchg
mov
out
mov
mov
out
je
inc
ds
aas
pop
(bad)
aas
out
iret
add
out
add
pusha
(bad)
hlt
cmps
rol
lock
lahf
(bad)
div
js
pop
dec
add
push
aaa
jg
pop
push
bnd
or
add
js
pop
jp
(bad)
jp
(bad)
jbe
inc
js
mov
das
pop
jns
enter
jne
xlat
jl
adc
add
daa
js
xlat
jnp
xchg
ja
pop
jg
addr16
dec
mov
into
mov
push
fdivr
lock
pusha
add
mov
in
jge
xchg
out
jle
jp
aaa
and
cmp
add
mov
(bad)
cmp
add
test
or
add
mov
and
sub
add
add
sar
je
sbb
call
add
jp
jl
mov
xor
add
jl
xlat
add
loopne
or
mov
add
mov
test
xor
or
xchg
jb
mov
scas
pop
xchg
cmps
add
jl
jecxz
in
mov
lahf
out
pop
call
jle
xchg
xchg
mov
out
ss
pop
mov
mov
mov
retf
adc
xor
add
test
adc
test
inc
je
call
push
xchg
and
out
jle
pop
mov
dec
lea
(bad)
jge
dec
jb
rol
stc
mov
mov
add
cwde
add
and
add
or
in
clc
mov
xchg
mov
dec
xor
mov
add
inc
clc
jl
test
mov
mov
pop
adc
pop
adc
xor
add
aaa
xchg
pop
or
test
enter
mov
cdq
sbb
mov
or
sub
enter
add
jle
sub
test
fsubr
cmp
leave
add
clc
mov
push
dec
inc
mov
xchg
add
jmp
jb
xchg
or
inc
aad
jmp
ja
cmp
outs
jmp
iret
push
and
adc
xchg
ds
mov
or
or
dec
je
or
or
cs
xchg
cdq
adc
jne
fmul
mov
or
xchg
sub
xchg
jne
or
xchg
sub
or
test
mov
xchg
xchg
and
(bad)
pop
fwait
es
lahf
jmp
lea
xchg
jae
mov
aam
add
out
leave
pop
xchg
fld
cwde
inc
clc
push
push
or
mov
fnstcw
xchg
ret
addr16
dec
test
pop
mov
pop
fst
mov
lahf
xor
pop
xchg
test
mov
pop
pushf
mov
xchg
or
xchg
pop
aaa
mov
add
imul
nop
xchg
mov
add
test
mov
(bad)
pop
cdq
add
and
inc
push
movs
or
mov
sub
mov
ds
je
nop
jp
mov
add
pushf
mov
xchg
inc
retf
fldenv
and
xchg
pop
mov
dec
mov
hlt
pushf
sbb
cmps
retf
cmp
dec
call
mov
xchg
mov
xchg
adc
inc
sub
xchg
pop
sub
dec
fwait
movs
jns
inc
jmp
xor
add
addr16
call
xchg
push
dec
or
pop
fwait
test
pushf
aaa
retf
jns
and
xchg
xor
pushf
aaa
sub
pop
mov
sub
sbb
or
aam
dec
and
movs
jo
mov
fmul
pop
call
(bad)
fisubr
fimul
fldcw
cmp
cmps
mov
add
cdq
cmps
xor
test
sub
retf
jo
sbb
test
or
sub
stc
scas
mov
scas
stos
cli
popf
pop
push
add
lahf
mov
xchg
out
stc
mov
pushf
adc
push
sahf
call
mov
jns
sahf
cli
mov
jmp
xchg
sbb
adc
loop
lahf
or
push
mov
call
test
mov
stos
test
dec
scas
pop
mov
push
retf
cwde
pop
dec
xchg
inc
or
xor
or
pop
sub
enter
mov
add
imul
cmps
retf
jns
bound
xchg
cmp
je
cwde
mov
xchg
xchg
add
inc
xchg
arpl
pushf
mov
sbb
adc
jnp
xchg
sub
(bad)
jns
dec
mov
adc
xor
pop
movs
arpl
mov
pop
add
fwait
sub
xchg
jae
mov
leave
scas
xchg
dec
cdq
add
push
pop
mov
dec
mov
dec
mov
ret
mov
stc
cmps
mov
lods
jno
mov
mov
jmp
cmp
mov
sbb
or
or
or
lock
outs
fstp
mov
xor
lods
sbb
mov
sbb
jmp
mov
fwait
movs
das
mov
adc
inc
pop
nop
add
(bad)
xchg
shr
jp
add
loopne
pop
xor
sbb
mov
mov
imul
add
xor
jle
sbb
nop
mov
in
mov
mov
push
jns
xor
mov
dec
add
retf
movs
imul
or
xchg
xor
or
jl
aaa
sbb
xchg
mov
jmp
sbb
scas
hlt
or
cwde
mov
mov
jmp
cmp
mov
jo
sub
lods
mov
dec
cmps
push
mov
jno
popf
mov
ret
mov
adc
jmp
mov
(bad)
and
sbb
sti
mov
imul
and
or
xor
or
sbb
rol
mov
in
xchg
lahf
push
in
add
mov
lods
(bad)
jmp
jmp
aas
jmp
ins
fadd
lds
or
ret
jl
pushfw
cwde
xchg
mov
mov
ret
ds
scas
mov
and
retf
and
int
in
leave
fimul
mov
gs
scas
in
mov
sti
retf
stos
pushf
mov
pop
into
lods
mov
mov
imul
stos
mov
retf
or
mov
(bad)
scas
cld
retf
int
jo
fs
add
int3
leave
or
leave
movs
cld
mov
sbb
fdiv
mov
sar
in
rcr
mov
loopne
xchg
adc
or
inc
into
lods
cmp
xchg
int3
enter
sbb
rcr
sub
sbb
xor
dec
sbb
adc
int3
hlt
sti
mov
pop
mov
or
(bad)
dec
test
xor
rcr
in
ret
inc
std
mov
fst
pop
mov
std
pop
retf
xor
(bad)
jno
(bad)
(bad)
mov
push
stos
int
mov
sbb
or
pusha
(bad)
aad
mov
adc
dec
aam
dec
iret
pop
or
sbb
sbb
cmp
mov
popf
mov
pushf
rcl
pop
(bad)
xchg
sbb
sahf
call
ins
rcr
int
mov
sar
in
retf
retf
mov
xchg
hlt
push
push
or
xchg
dec
rcl
pop
add
and
pusha
loopne
jge
mov
in
shl
xlat
mov
xlat
mov
leave
mov
aad
sub
mov
les
jge
cmp
rcr
sub
xchg
aaa
sub
scas
sub
pop
in
fsubr
mov
fiadd
sbb
into
dec
jmp
pop
sub
sub
out
aam
dec
aam
cld
rcr
(bad)
fnstenv
fsubrp
popf
mov
push
int
fstp
lods
rcr
ror
mov
dec
lahf
pop
out
ret
sti
lods
aam
sbb
cmp
sahf
and
fcom
retf
add
std
fadd
scas
ficomp
pop
test
pushf
jecxz
or
mov
aad
dec
fst
(bad)
xlat
sar
and
loope
sbb
jnp
loopne
in
int3
fmul
mov
loopne
int
gs
loope
jnp
fimul
adc
(bad)
pop
loope
or
sub
xchg
ins
into
xlat
add
inc
mov
ja
aad
cmp
sar
add
in
sbb
shr
addr16
xchg
ins
fild
jae
call
lods
aam
fst
xchg
dec
jecxz
dec
out
(bad)
cmp
xchg
outs
into
cmp
rol
add
add
jecxz
sub
stos
fsubrp
movs
push
loopne
jle
inc
sbb
lods
(bad)
push
aad
jge
mov
in
add
fcmovnb
in
xlat
push
fsubp
(bad)
std
out
jge
leave
ins
aam
push
in
dec
jecxz
push
fidiv
aad
push
out
jge
dec
or
je
fistp
jle
rcr
retf
out
out
out
jecxz
into
fdiv
in
in
(bad)
out
push
loopne
fnsave
in
fucom
rcr
mov
jmp
cs
out
loopne
ins
(bad)
lods
out
mov
out
int3
sub
lock
aam
into
add
pusha
into
inc
or
mov
dec
fldl2e
sbb
(bad)
fst
mov
in
mov
out
icebp
leave
mov
movs
mov
lods
mov
loope
in
(bad)
sbb
mov
in
shr
out
fidivr
outs
sahf
inc
push
repnz
scas
in
mov
mov
add
in
in
jge
aam
in
cld
fdivp
arpl
xor
and
add
jle
or
hlt
mov
cmc
int
sar
xor
loopne
scas
out
iret
repnz
into
mov
jmp
dec
loop
nop
test
icebp
outs
in
nop
jle
ror
sahf
call
das
repnz
xchg
sub
xchg
inc
dec
out
inc
iret
cmc
adc
stc
cmp
scas
stc
and
pop
scas
aam
out
fisub
(bad)
jae
mov
cmp
cli
xor
mov
repz
jmp
out
shl
neg
push
dec
jmp
pop
lock
repnz
mov
(bad)
dec
sti
outs
mov
jae
repz
test
cmc
loop
cli
dec
out
xlat
dec
iret
jmp
inc
out
sti
push
fdivp
jl
dec
in
test
push
(bad)
sti
repz
sbb
pop
add
mov
sbb
xchg
test
call
pop
xchg
add
mov
call
mov
mov
cwde
lahf
sahf
(bad)
mov
mov
mov
xchg
mov
shr
ror
inc
aad
test
xlat
pop
rcl
shr
leave
ffreep
icebp
repnz
mov
xor
sub
(bad)
or
lock
inc
or
fcmovb
(bad)
out
mov
adc
test
retf
mov
leave
push
adc
xor
and
adc
jl
push
or
cmp
sub
fild
int
mov
sbb
add
push
push
mov
sbb
rol
pop
push
test
sub
dec
out
inc
fwait
or
jo
ja
add
adc
pop
add
push
mov
jnp
lea
popf
ret
inc
adc
xor
ins
adc
sub
in
and
in
mov
sub
cmps
pop
push
movs
dec
sbb
dec
sub
dec
test
inc
dec
aad
das
adc
cdq
enterw
adc
dec
dec
xlat
addr16
jb
fstp
repz
(bad)
xchg
bound
out
(bad)
(bad)
fdivr
loope
fldcw
jle
inc
ret
pop
mov
pop
repnz
lods
cmp
out
leave
sahf
shl
pop
mov
mov
idiv
inc
out
xor
fist
lods
inc
loopne
sub
call
sbb
std
ja
pop
inc
addr16
inc
xlat
pop
js
add
cwde
push
ror
add
int3
jp
rol
or
pop
shr
push
(bad)
or
shl
sbb
and
dec
sbb
inc
push
push
inc
mov
xchg
xchg
fld
call
fwait
xchg
gs
out
imul
loop
arpl
xchg
data16
test
cdq
xchg
pusha
sub
in
add
adc
cmp
lds
sbb
lock
movs
dec
in
ret
call
sub
inc
xor
inc
mov
mov
test
call
pop
mov
movs
jge
mov
jb
call
adc
test
scas
sahf
xor
sub
inc
xchg
scas
cmp
fs
and
daa
pop
mov
cdq
push
sti
sub
cs
in
add
xchg
cli
inc
add
cmps
test
cli
call
sub
mov
cmp
jmp
sub
add
aaa
je
mov
cwde
pop
lock
mov
ret
(bad)
(bad)
sbb
mov
ret
pusha
adc
xchg
loop
pop
inc
shr
add
xchg
and
jmp
mov
in
xor
cmp
mov
mov
xchg
or
or
into
inc
sti
pushf
add
inc
push
mov
iret
push
retf
int3
adc
fistp
sbb
pop
idiv
xchg
cdq
xor
ret
rol
add
pusha
mov
jb
(bad)
xor
inc
dec
xchg
jae
adc
mov
imul
movs
add
push
fistp
pusha
jo
sub
xor
cmps
jp
add
inc
cmp
fnsave
and
fisttp
mov
mov
mov
jmp
jmp
push
out
popa
out
and
jmp
ret
dec
sti
rcl
ret
sti
mov
pop
js
mov
mov
pop
sbb
aaa
xor
fstp
fistp
jmp
icebp
mov
add
xor
or
pop
(bad)
jg
ret
les
aam
cmp
mov
ret
add
cdq
popa
pop
dec
dec
add
or
xor
adc
pop
inc
stos
fisub
ja
mov
inc
or
sub
add
xor
jo
mov
mov
add
xor
add
test
push
and
xchg
or
adc
ret
add
pop
popa
pop
xor
sbb
and
loope
shl
inc
adc
lock
or
push
mov
or
mov
aam
push
sub
rol
mov
stos
xor
and
xchg
pop
and
pop
test
mov
arpl
and
ret
xor
mov
jne
mov
mov
loope
xchg
cmp
pushf
in
and
inc
xor
js
inc
jp
ja
jl
and
bound
mov
daa
dec
pop
mov
loopne
jl
inc
fbstp
in
outs
sub
bound
mov
mov
pop
enter
mov
lods
es
pop
inc
xor
loopne
cmps
cmp
(bad)
repz
call
stc
dec
pop
mov
popf
aad
out
xchg
mov
sahf
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
movs
call
mov
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
sbb
sbb
mov
lea
or
loopne
inc
mov
pop
movs
sub
sub
das
fwait
or
shl
or
xor
pop
fwait
xor
add
mov
inc
adc
jbe
xchg
popf
inc
gs
stos
pop
mov
gs
jae
fcomp
xchg
ss
mov
pop
out
(bad)
mov
imul
inc
push
in
outs
and
fsub
cmp
mov
(bad)
rcr
sbb
cmp
mov
or
ja
xor
stos
(bad)
push
xchg
mov
jg
fdivrp
sbb
mov
xor
pop
add
lods
jle
pop
fdiv
(bad)
aaa
shl
mov
(bad)
cld
ss
mov
pop
or
or
lock
jmp
(bad)
outs
mov
arpl
add
or
stos
lea
loopne
push
js
jmp
icebp
test
mov
ja
fistp
add
xor
in
(bad)
js
(bad)
sbb
jb
(bad)
cld
and
les
jno
mov
movs
(bad)
lahf
sub
pop
and
or
jo
cmp
inc
and
mov
test
xor
push
inc
or
pop
mov
jl
pushf
loopne
cli
sbb
ins
fs
(bad)
ja
cwde
movs
xor
inc
retf
add
push
mov
push
sub
and
popa
cmps
mov
dec
int
(bad)
cmp
inc
push
hlt
lea
inc
sar
in
hlt
and
popa
es
loopne
stos
int
or
pushf
gs
mov
int
xor
call
les
cmc
pushf
cmp
pop
leave
inc
dec
xor
and
(bad)
in
xchg
jne
cmp
clc
out
mov
addr16
(bad)
outs
mov
push
fcmovnb
sbb
jle
jge
ds
cli
xlat
inc
sbb
ins
or
sbb
call
popf
fs
mov
into
mov
(bad)
call
push
rol
jne
icebp
or
jns
sub
les
jecxz
dec
push
add
sub
mov
loopne
inc
jne
pop
outs
jecxz
ja
mov
add
bnd
mov
(bad)
fcomi
arpl
xor
add
inc
sbb
outs
test
out
mov
lahf
es
jno
jecxz
xor
ins
ds
outs
sbb
mov
sbb
outs
jnp
adc
xor
in
mov
scas
cmp
sahf
jne
(bad)
xchg
add
pop
cmp
out
loopne
pop
jno
inc
into
fldenv
gs
add
jle
call
sets
add
(bad)
mov
mov
jno
out
xlat
dec
push
sti
loope
cmp
lahf
ds
jle
adc
add
mov
jmp
loop
fistp
shl
xor
mov
jb
ja
bound
push
scas
sub
mov
jae
jbe
sub
fidivr
ins
test
psllq
xlat
cli
mov
lahf
add
jecxz
icebp
pop
xlat
xor
lahf
jle
pop
jbe
scas
fwait
cmp
(bad)
mov
cmp
retf
(bad)
data16
mov
jge
xchg
or
aad
pop
jns
jl
jbe
sbb
mov
jo
jnp
mov
enter
xchg
pusha
mov
pop
dec
mov
sbb
imul
add
sbb
ja
cmp
jno
push
pop
pop
cmps
jg
inc
add
fs
mov
push
xlat
add
mov
(bad)
out
shl
cmp
or
inc
xor
es
jmp
add
push
xor
push
xor
sub
dec
add
sub
lods
out
adc
jg
inc
add
pop
popa
ins
mov
jo
adc
jns
ins
mov
jp
mov
or
jle
xchg
clc
add
dec
addr16
pusha
dec
ins
xchg
es
(bad)
daa
ja
test
pop
jl
mov
sub
push
arpl
push
out
inc
movs
jae
push
inc
pop
ja
push
jae
push
mov
pop
push
and
push
out
mov
test
jp
fdiv
mov
pop
mov
jge
lds
jno
loopne
rol
sbb
inc
mov
ret
mov
shl
jb
push
add
dec
jle
mov
mov
adc
jge
or
not
fsubr
(bad)
jg
mov
test
test
fadd
idiv
mov
adc
ret
push
adc
test
jg
push
xor
int
cmp
mov
bound
imul
js
xchg
push
push
push
xchg
in
mov
pop
popa
push
push
jg
data16
xchg
aad
jo
jne
(bad)
pop
out
inc
jle
xchg
mov
push
inc
pusha
es
mov
arpl
nop
add
jae
jo
imul
dec
ins
fwait
inc
mov
jge
call
sub
fnsave
je
(bad)
mov
xchg
js
leave
ins
sub
in
xor
int
outs
hlt
xchg
fldcw
cmps
pop
mov
jnp
mov
fbstp
sbb
pop
call
test
push
push
mov
sub
sub
xchg
cmps
lea
outs
inc
ja
inc
outs
aad
js
js
imul
jne
pop
lods
or
sub
leave
add
xchg
test
xchg
lea
(bad)
cmc
clc
js
cmp
cmp
xchg
dec
mov
fcom
jle
(bad)
add
mov
jne
aad
enter
jmp
dec
jbe
or
js
mov
jns
push
mov
into
imul
add
fst
or
lahf
stc
inc
sbb
pop
cmps
xchg
cmp
xchg
sbb
xchg
add
test
or
in
in
add
popf
mov
xchg
aas
mov
sbb
arpl
add
jb
push
xchg
outs
leave
jae
xchg
pusha
mov
xchg
mov
xchg
xchg
sbb
aaa
mov
jg
(bad)
imul
ins
dec
je
daa
ins
add
pop
dec
pusha
pop
or
imul
fs
imul
gs
mov
xchg
mov
retf
mov
or
mov
pop
fisub
fidiv
push
dec
adc
imul
mov
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
or
add
and
add
add
sub
add
add
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
test
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
or
push
and
scas
sub
mov
stos
add
lods
lock
jmp
xchg
xor
or
js
mov
out
cmps
pop
rol
mov
mov
xor
(bad)
retf
jp
adc
mov
dec
xchg
xchg
pop
mov
retf
add
jo
sub
inc
jmp
inc
jnp
xor
mov
stos
fwait
cmp
iret
mov
xor
jnp
dec
sub
jnp
bound
in
sbb
retf
dec
push
pop
mov
fwait
test
pop
mov
push
pop
xor
stc
mov
call
mov
and
imul
push
scas
fucomip
mov
sar
jnp
popa
mov
outs
dec
mov
stos
mov
dec
mov
push
push
add
stos
sbb
sub
fild
scas
arpl
scas
dec
lods
mov
mov
or
mov
mov
add
add
mov
sbb
mov
mov
push
rol
fwait
add
scas
xchg
dec
add
mov
jo
loope
mov
push
push
mov
leave
mov
mov
mov
mov
test
mov
mov
mov
stos
mov
cmp
fdivr
stos
in
add
pusha
mov
imul
mov
add
dec
mov
sbb
(bad)
cmp
add
ror
sbb
mov
dec
mov
or
and
scas
push
add
dec
add
cld
ret
aas
sbb
xor
ret
inc
or
xor
add
dec
add
les
les
add
lock
ret
inc
pushf
les
mov
push
mov
xor
push
jl
out
retf
dec
les
(bad)
pop
mov
fs
add
fdivr
nop
ret
pop
pusha
add
int3
mov
cld
lds
mov
les
mov
mov
outs
pop
mov
mov
out
cwde
add
mov
out
js
and
add
sub
cwde
lods
mov
nop
add
retf
retf
fwait
or
dec
nop
retf
leave
pop
inc
lds
add
lods
xchg
retf
mov
int3
movs
jl
jno
retf
leave
ror
mov
dec
int
imul
sbb
push
inc
mov
pushf
leave
jb
int
dec
int3
mov
int3
adc
dec
stos
pshufw
in
into
call
add
add
pop
push
add
pusha
retf
in
mov
(bad)
in
into
mov
leave
pushf
pop
iret
neg
mov
repnz
ret
cld
rcl
std
shl
mov
or
icebp
cmp
cli
ins
retf
sti
lods
xchg
popf
retf
stc
cmp
inc
fcmovbe
out
mov
sub
rol
sub
add
mov
shr
dec
lds
mov
cmp
into
jecxz
into
pop
dec
rol
aam
or
and
sbb
dec
cmp
in
cld
sar
into
or
into
pop
sbb
das
(bad)
int
mov
adc
jl
push
and
jge
ds
into
(bad)
pop
rol
add
into
and
(bad)
ror
in
rcl
add
mov
fst
pop
cmp
in
sbb
test
mov
push
cmp
sar
inc
jge
aam
fcomp
fstp
inc
std
fmul
iret
lea
mov
fcom
(bad)
lods
aad
cmp
xchg
pop
shr
fsub
sbb
push
or
add
int3
dec
rcl
lods
fmul
popf
fcmove
fst
inc
pop
xlat
cmp
add
mov
in
fcmovnb
ins
aad
ins
aam
or
sar
sub
out
in
xlat
cmp
lods
(bad)
ficom
retf
and
shl
std
aad
mov
sub
fistp
fdivp
ins
add
pop
loopne
sahf
retf
loopne
ficomp
or
fild
dec
loope
mov
add
fbstp
mov
fldenv
fmul
fnstenv
jge
or
shl
int3
mov
rcr
scas
aad
sbb
jns
aad
in
loopne
fmul
dec
fistp
stos
fstp
cmp
and
and
in
fsubp
add
in
popf
fdivr
retf
int
std
fstp
add
sub
shl
in
int
push
pop
shl
mov
out
pop
xlat
sub
imul
out
aad
or
mov
rol
shr
out
(bad)
fld
xchg
in
fld
into
gs
push
sbb
jne
shr
leave
(bad)
sub
fs
fisttp
fsubr
loope
sahf
aam
inc
stos
(bad)
loopne
push
out
(bad)
in
ins
add
out
mov
(bad)
sub
mov
into
lods
sbb
dec
fs
call
sub
jo
in
mov
fiadd
fmul
out
push
out
cmp
and
sub
jmp
popf
retf
loopne
pop
jmp
sbb
jge
out
cmp
fcomp
aad
push
loop
in
fadd
int
call
outs
out
cmp
mov
rcl
ds
cli
add
ins
in
ds
inc
lods
in
fidivr
pop
add
jp
jecxz
int
jg
loopne
lods
add
aas
stos
pop
add
adc
call
(bad)
out
and
out
pop
int
jecxz
jmp
in
fcomp
into
frndint
sub
fucomp
into
adc
ss
ffreep
push
in
test
(bad)
fmul
cmp
in
retf
in
out
cmp
jmp
scas
add
jmp
push
xlat
push
(bad)
loopne
lods
in
daa
(bad)
aam
shr
call
mov
pop
std
cmc
sub
(bad)
out
out
call
(bad)
in
mov
lock
icebp
jbe
fisttp
jmp
das
jecxz
pop
test
jecxz
(bad)
aad
psadbw
or
xchg
clc
adc
add
scas
sbb
cdq
mov
and
repz
(bad)
fdiv
lahf
repz
push
repz
call
pop
out
not
jmp
jg
jnp
fcom
add
cli
arpl
rep
pop
in
das
repz
out
mov
clc
sar
cli
sbb
(bad)
(bad)
clc
mov
out
jns
shl
cld
fnstsw
sti
ds
clc
js
lock
cld
jmp
div
fnstcw
lahf
shl
cmc
retf
jmp
(bad)
fcomp
std
ds
out
pusha
mov
movs
mov
test
mov
sub
leave
cmc
test
fnstcw
push
bound
cli
cmp
arpl
jns
test
add
shl
cdq
test
jp
dec
ficomp
mov
sti
jp
dec
ins
sub
or
jmp
sbb
int
out
jl
dec
mov
jmp
mov
int
cs
into
mov
sub
xor
sbb
xor
shl
xchg
xchg
dec
push
inc
popa
hlt
sub
jecxz
rcl
and
aam
adc
ror
jnp
and
test
cmp
aaa
imul
movs
xor
adc
ins
add
fnstenv
sub
dec
aad
inc
cmc
mov
fcom
pop
lahf
sbb
and
das
jmp
inc
in
sub
loop
xchg
lea
ja
and
or
fld
mov
lds
fs
movs
push
gs
push
pop
(bad)
aad
fsubr
fisub
cmp
fwait
cmp
jmp
sub
pusha
bound
mov
out
test
(bad)
in
dec
mov
push
repnz
fdiv
in
adc
push
mov
stos
add
fpatan
push
push
fcom
(bad)
imul
outs
mov
sbb
adc
shl
mov
repnz
adc
mov
cmp
div
xchg
loope
pop
sbb
add
cmc
dec
adc
pop
dec
inc
sbb
test
popf
mov
arpl
mov
push
lahf
pop
test
jl
popa
dec
rcr
dec
add
xor
sbb
ret
ds
xor
mov
add
and
sahf
pop
int3
add
pop
cmp
mov
push
and
jb
movs
sub
jns
dec
xchg
add
or
xchg
add
dec
jle
adc
pop
rcr
push
(bad)
sbb
adc
sub
xchg
fcomp
add
sbb
sub
jecxz
adc
rol
pop
push
sbb
mov
xchg
fmul
xchg
test
sub
and
arpl
adc
xlat
push
out
imul
sub
es
js
ds
dec
leave
sbb
ret
lods
shr
scas
xchg
clc
add
mov
nop
pop
push
test
mov
add
retf
sbb
and
shl
pushf
fistp
mov
movs
mov
jl
mov
lea
rcl
fisttp
sub
mov
or
movs
mov
sub
inc
cmp
mov
mov
mov
test
stos
or
sbb
iret
xchg
inc
ret
je
jp
mov
retf
int3
mov
jno
mov
stos
cld
ins
out
fwait
mov
xchg
xor
push
ror
push
inc
movs
jb
lds
mov
test
xlat
cli
jge
scas
or
mov
mov
bound
mov
idiv
jmp
sub
fmul
inc
push
(bad)
retf
pop
pop
rcl
jbe
sub
sbb
cli
inc
pop
sti
std
test
xchg
lahf
cld
xor
jae
or
sub
add
cli
iret
pop
inc
pop
jnp
mov
lds
pop
out
repnz
lahf
lods
test
dec
mov
repz
cmc
leave
aas
mov
xlat
outs
jae
call
mov
test
scas
test
fwait
jg
outs
xchg
mov
lea
ret
cdq
push
mov
test
gs
inc
fsqrt
fiadd
dec
cmps
add
out
es
inc
loop
pop
les
or
inc
ja
les
or
mov
or
shl
xchg
pushf
jmp
or
pop
nop
out
cmps
mov
xchg
jb
and
dec
mov
jo
pop
pop
jmp
in
daa
and
sahf
retf
jle
cmp
cmp
pop
pop
cmp
jno
movs
mov
pop
inc
cs
push
or
xchg
sbb
xor
cmp
bound
dec
ins
test
pop
call
retf
std
lods
in
or
mov
(bad)
leave
mov
sahf
and
xchg
lods
mov
and
add
pop
sbb
mov
lods
fwait
int
js
push
jb
jge
or
sbb
cmp
xor
in
sti
sbb
(bad)
push
out
adc
loope
or
fmul
jo
iret
(bad)
and
div
mov
push
and
pop
push
test
js
test
add
sub
in
jno
mov
and
shr
cdq
js
lahf
cmp
mov
mov
jecxz
jmp
dec
xor
out
sti
and
cli
ins
fwait
mov
and
push
pop
xor
ror
adc
sbb
arpl
jns
enter
pushf
sbb
sub
xchg
jno
fwait
gs
cs
(bad)
cmp
aas
std
jmp
call
add
adc
mov
rcr
and
add
xchg
xor
inc
add
adc
adc
cli
mov
mov
lods
test
push
dec
dec
jno
cs
inc
vsqrtss
cmp
dec
sbb
push
je
shl
push
(bad)
pop
xor
mov
push
test
je
push
aad
push
mov
aad
hlt
stos
sub
mov
jo
mov
cmp
push
cdq
push
mov
sub
loop
ins
pop
fisttp
int
inc
push
xchg
lds
cmp
push
inc
stos
repnz
lea
pusha
adc
stos
mov
stos
retf
ret
and
out
call
cmp
xchg
fistp
xor
pop
in
adc
xor
icebp
or
mov
enter
int
mov
loopne
mov
test
sbb
test
scas
mov
pop
sbb
and
rcr
mov
mov
ins
int
aam
xor
jne
mov
out
or
in
in
ror
cs
lods
loopne
retf
dec
mov
sub
push
add
adc
sub
push
or
inc
or
xchg
xor
dec
aad
add
outs
pop
pop
stos
arpl
mov
mov
test
xor
adc
and
inc
sahf
inc
xchg
xor
leave
pop
clc
inc
js
jmp
add
shl
scas
mov
fadd
in
test
sub
retf
jno
sub
jmp
sub
nop
add
mov
xchg
cdq
fdiv
cmp
or
iret
sbb
push
aaa
mov
push
cdq
or
loop
mov
xor
shl
gs
or
add
add
dec
mov
stos
(bad)
add
(bad)
mov
outs
cmps
daa
sub
pop
xchg
cmp
loop
hlt
test
or
xlat
or
ins
imul
xchg
iret
jnp
out
mov
mov
add
pop
jmp
dec
loope
ror
scas
(bad)
jge
dec
aaa
cmp
lahf
push
cdq
cmp
sahf
mov
pop
cld
out
jmp
adc
adc
icebp
push
icebp
mov
cld
fcmovnbe
inc
test
mov
jecxz
les
(bad)
mov
push
jns
and
jl
test
jle
nop
xchg
add
jbe
cwde
jecxz
div
imul
xchg
sub
inc
jae
inc
test
pop
in
out
cmp
mov
inc
pop
not
lea
movs
dec
push
call
pop
mov
out
daa
clc
mov
pop
mov
aad
jo
sbb
clc
pushw
je
cmps
and
mov
mov
and
jnp
rcr
xor
dec
and
xchg
scas
dec
test
mov
mov
and
dec
loopne
push
stos
(bad)
hlt
mov
mov
fsubr
ds
xchg
cmp
fistp
std
jmp
out
jae
adc
dec
mov
push
hlt
fisttp
xor
js
push
dec
test
das
add
sbb
icebp
push
out
jp
mov
add
dec
mov
into
fwait
jle
shr
cli
retf
adc
outs
hlt
jmp
jmp
(bad)
pop
sti
jl
ret
int
hlt
pop
pop
cld
fcom
mov
pushf
or
or
cmp
push
aas
loopne
std
icebp
mov
sub
dec
add
push
js
std
daa
push
div
(bad)
add
ja
addr16
addr16
pop
ja
pop
jp
test
ja
ja
aad
add
jne
pop
ja
idiv
pop
cmp
add
and
jmp
add
add
mov
sbb
push
push
jle
daa
js
push
inc
(bad)
jp
cmc
add
cmp
js
or
sub
add
jae
call
inc
loopne
dec
mov
sub
push
and
jbe
inc
nop
add
xor
daa
test
xchg
jp
aaa
xchg
jle
js
dec
mov
enter
daa
je
clc
test
xor
add
clc
jbe
addr16
daa
ds
inc
or
mov
add
xlat
mov
ja
cmp
pushf
enter
xchg
jb
enter
add
dec
jns
cmps
add
je
pop
mov
fmul
test
scas
mov
mov
xchg
mov
jmp
or
lods
fmul
push
push
dec
add
cmp
clc
mov
add
adc
cmps
ja
iret
mov
mov
xchg
in
sub
add
nop
cmp
(bad)
jle
push
(bad)
jmp
mov
and
mov
xor
lea
add
push
xchg
and
retf
push
jns
push
mov
add
call
dec
mov
add
inc
js
push
test
add
xchg
mov
jp
add
cmp
add
push
xchg
sbb
mov
mov
jne
leave
xchg
mov
fld
test
xor
xchg
jmp
mov
jne
fst
pusha
jle
stc
(bad)
or
xchg
sub
cmp
mov
mov
fst
sbb
add
mov
inc
cmp
outs
mov
xchg
fisttp
sbb
xchg
mov
xchg
mov
cwde
or
adc
xchg
cmp
push
addr16
xchg
xchg
mov
stos
call
mov
adc
fs
xchg
popf
pop
xchg
and
and
xchg
push
test
jo
pop
jo
pop
jo
test
call
xchg
inc
mov
add
int
jne
cdq
pop
push
test
in
mov
mov
xchg
(bad)
test
mov
xchg
shr
add
test
pop
fs
dec
and
cdq
xchg
push
sub
mov
popf
inc
mov
push
xchg
inc
test
sbb
clc
xchg
pop
cdq
add
fwait
jmp
sahf
or
xchg
xchg
xchg
int3
call
test
xchg
mov
nop
and
jne
sub
or
fst
jns
inc
mov
mov
xchg
xchg
push
jl
xchg
push
(bad)
mov
inc
lahf
(bad)
cdq
dec
stos
xchg
or
mov
xchg
dec
mov
pop
xchg
inc
jns
add
mov
call
sbb
js
jns
xchg
push
dec
xchg
cs
nop
cmp
cdq
movs
loope
xchg
test
mov
push
(bad)
nop
in
mov
sbb
xchg
mov
movs
jnp
outs
inc
repnz
cmps
xchg
test
pop
sbb
dec
test
fwait
push
dec
xchg
jo
xchg
jnp
xchg
inc
pop
xchg
mov
mov
mov
pusha
jle
sub
mov
dec
xchg
mov
cmp
retf
sub
cli
xchg
mov
xchg
sub
test
dec
xchg
aas
leave
nop
mov
mov
or
sub
pop
lahf
mov
dec
xchg
mov
cmp
test
imul
call
jo
xchg
xchg
cmp
sbb
jp
mov
fwait
je
movs
xor
mov
fld
stos
call
mov
mov
sbb
pop
popf
cli
test
push
mov
jo
xchg
call
or
mov
stos
mov
dec
daa
push
cdq
xchg
in
sbb
mov
stos
stos
lea
sbb
mov
dec
xchg
fwait
retf
mov
cmp
mov
imul
out
lahf
pop
sbb
or
stos
xchg
ror
mov
adc
jnp
mov
xchg
mov
mov
dec
and
jns
mov
lahf
pop
sti
sahf
imul
sub
int
test
sub
cmp
call
mov
fwait
scas
pop
mov
mov
mov
jmp
xchg
gs
jne
test
sbb
mov
mov
clc
mov
lds
inc
jns
xchg
or
and
pop
mov
jmp
add
mov
cli
mov
cmp
adc
dec
mov
jp
xor
repz
mov
cli
xchg
stos
(bad)
lods
mov
jmp
dec
or
jmp
mov
dec
mov
fld
test
xor
mov
mov
dec
add
jmp
xchg
or
retf
or
mov
dec
mov
jmp
add
leave
stos
xchg
mov
cwde
adc
pop
nop
add
dec
mov
sub
xchg
and
sbb
add
sar
mov
cmp
jmp
es
cmp
xchg
sbb
out
rcl
mov
in
add
jl
adc
adc
inc
retf
shl
mov
dec
scas
(bad)
movs
mov
fmul
add
sub
mov
(bad)
in
sbb
sub
mov
retf
mov
retf
mov
jl
enter
cmp
cmp
mov
cld
ret
mov
test
int3
mov
dec
add
rcl
pop
or
out
lds
(bad)
mov
xchg
sub
mov
cmp
mov
rcr
loop
mov
js
xchg
call
jb
and
sbb
ret
hlt
imul
leave
push
cdq
leave
xchg
and
dec
mov
xchg
mov
popa
or
mov
pop
jecxz
add
mov
mov
cmp
mov
mov
js
leave
mov
(bad)
sbb
cwde
xchg
stos
mov
dec
int
jnp
aas
cld
stos
hlt
dec
stos
push
mov
xchg
lods
int
int3
mov
pushf
cwde
test
stos
mov
enter
sahf
cmp
lahf
or
scas
pushf
dec
mov
pop
mov
dec
into
cld
cld
mov
sbb
ss
scas
in
retf
int
dec
iret
dec
sbb
or
add
pushf
ror
mov
in
ror
pop
retf
ror
xchg
cmp
int3
push
cmp
lods
jl
xchg
lock
sub
add
shr
or
imul
out
dec
rcl
leave
push
sub
push
rol
iret
xchg
sbb
hlt
or
adc
popf
(bad)
aas
sub
and
(bad)
push
sub
outs
mov
repz
into
mov
aad
int3
ret
jnp
rcl
fcmovne
rcr
mov
lods
xchg
push
popf
cwde
adc
or
cli
or
add
fsubr
cli
xchg
fisubr
popf
aad
sub
pop
or
jl
iret
in
test
cmp
in
(bad)
mov
std
mov
pop
into
mov
(bad)
cmp
dec
fst
xor
in
int3
mov
add
add
nop
(bad)
or
ret
jnp
rcl
pop
add
rcl
rcr
leave
in
mov
stc
rcl
fsubr
xlat
lahf
or
leave
ins
fld
(bad)
cld
lahf
xor
aam
pop
aad
sub
imul
sub
sbb
into
xlat
dec
leave
mov
int
sbb
mov
int
or
push
popf
(bad)
out
into
bound
out
shl
xlat
inc
sbb
cmp
into
jb
rcl
fcom
stos
adc
int3
mov
mov
sub
mov
fld
fldcw
loope
sahf
(bad)
popf
scas
dec
add
fdiv
test
mov
xor
sbb
aam
lods
int
out
fdivr
inc
into
loopne
sub
dec
(bad)
faddp
in
int3
add
retf
or
add
mov
aad
(bad)
aam
cmp
inc
(bad)
ror
scas
in
ds
pop
fadd
loop
out
out
in
loopne
(bad)
ficomp
cmp
pop
mov
gs
jecxz
pop
loop
fcomp
loopne
push
call
fucom
ins
fsubp
adc
repnz
mov
aad
in
add
jmp
inc
lahf
add
out
jge
sbb
jmp
push
jmp
push
pop
mov
or
jmp
call
or
jns
loopne
dec
fisubr
fdiv
into
iret
mov
or
fsubrp
cmp
loope
fisttp
jmp
pop
in
cmp
ins
outs
xlat
enter
dec
call
jle
(bad)
ds
pop
out
cmp
(bad)
aam
scas
out
sub
push
ds
(bad)
into
jmp
or
mov
in
fcomp
pop
out
mov
ror
into
loop
lds
add
pusha
aad
add
dec
add
loope
jmp
neg
jecxz
pusha
icebp
sbb
in
jmp
mov
test
out
inc
fstp
call
mov
ds
in
repnz
inc
mov
aas
pop
out
cli
ds
push
add
lock
(bad)
out
(bad)
loop
or
cli
into
icebp
sub
repz
cmc
ret
out
aam
mov
jo
rcr
jmp
dec
loopne
jle
enter
jg
pop
dec
jmp
dec
call
into
repnz
leave
ins
aad
(bad)
inc
push
shl
or
div
ficom
icebp
leave
fdivp
dec
pop
in
int3
fdivp
in
icebp
sub
push
and
test
inc
jg
inc
outs
cmc
adc
pop
icebp
xchg
(bad)
pop
icebp
ins
iret
repnz
stc
push
call
cwde
aas
clc
mov
int3
inc
pop
clc
aaa
dec
into
mov
icebp
lods
(bad)
ja
icebp
cmps
mov
mov
icebp
sub
call
aas
cmc
adc
repz
pop
sti
xchg
scas
icebp
xchg
xor
sti
lahf
outs
cli
les
mov
vpaddd
imul
jb
repz
mul
cmc
lds
stc
sub
pop
jg
loope
fimul
cli
ja
loopne
iret
icebp
cmps
push
(bad)
mov
cwde
mov
stc
pxor
out
rol
outs
xlat
fmul
or
add
sub
sub
test
add
xchg
call
mov
push
xchg
(bad)
xchg
xchg
pop
xchg
dec
xchg
xchg
pop
mov
cmps
mov
xchg
cdq
mov
mov
mov
mov
sub
mov
mov
mov
mov
retf
scas
fcmovnu
enter
xchg
jmp
cdq
xchg
mov
stos
lods
cmc
popf
mov
inc
inc
mov
iret
pop
xor
mov
mov
lods
stos
inc
push
sahf
sub
arpl
push
loope
fild
leave
xchg
mov
in
int3
(bad)
cmp
or
inc
push
mov
ins
in
dec
pop
movs
jl
sub
xor
mov
push
adc
xor
mov
cmp
xchg
pop
(bad)
inc
stos
dec
cwde
dec
pop
loop
add
mov
out
popa
es
stc
call
xor
and
jae
cmp
inc
push
(bad)
call
and
jl
or
stc
in
mov
aaa
jecxz
psrlw
(bad)
pop
leave
and
mov
(bad)
sahf
pop
push
scas
es
(bad)
jl
push
dec
jae
mov
adc
aaa
scas
pop
pop
mov
add
dec
ja
daa
(bad)
jne
out
pushf
mov
pop
aam
lods
mov
test
push
mov
retf
pusha
mov
sbb
push
popf
out
jnp
call
or
xchg
adc
mov
clc
xchg
sbb
lods
js
pushf
pop
ins
sub
sbb
iret
jle
inc
hlt
enter
add
pop
dec
add
adc
scas
nop
sub
adc
pop
mov
loope
bound
jno
dec
mov
add
ss
nop
and
mov
out
mov
sub
or
add
(bad)
clc
fist
sub
imul
sbb
cwde
push
retf
and
call
out
sbb
pop
sub
lds
add
icebp
rcl
cmp
rol
sub
les
mov
call
inc
mov
sub
mov
movs
adc
push
sbb
sbb
inc
stos
sub
xor
pop
mov
cli
add
neg
cli
test
jg
int3
mov
adc
ret
adc
popf
and
jmp
inc
mov
push
sti
addr16
add
xchg
xchg
dec
sub
adc
shr
or
aaa
mov
add
push
(bad)
out
add
lahf
pop
repnz
cmps
jnp
out
ret
lods
mov
dec
adc
jmp
ret
movs
cli
mov
sub
mov
xor
outs
mov
outs
adc
or
inc
and
loopne
adc
sbb
retf
push
inc
leave
dec
xchg
fadd
xor
out
repnz
ss
jp
cmps
jp
neg
xor
xor
in
xchg
int
das
fnsave
or
sub
cmp
mov
inc
adc
clc
cld
jae
(bad)
adc
loope
stos
repnz
or
sub
mov
in
loope
in
pop
xor
neg
jbe
ins
add
xchg
and
(bad)
fistp
xlat
lods
push
mov
sub
nop
mov
jecxz
sahf
imul
or
mov
fadd
sub
out
jae
movs
imul
sub
arpl
mov
mov
or
jge
and
cwde
sahf
add
les
xor
jge
mov
aad
jmp
into
mov
and
sub
bts
arpl
jl
xlat
rcl
jp
mov
cmps
fwait
loope
adc
push
retf
cli
add
scas
pop
push
fist
shl
add
shl
call
push
and
scas
xchg
out
jnp
jae
xchg
pop
icebp
add
dec
push
jae
lock
clc
xchg
rcl
push
nop
jle
mov
pop
add
inc
icebp
ins
add
mov
sub
cmp
mov
adc
sub
add
jo
push
and
mov
pop
popa
mov
push
xchg
or
mov
sbb
sbb
or
inc
ins
push
push
cdq
cwde
mov
xor
xchg
popa
(bad)
inc
push
lods
push
gs
pushf
mov
cmp
arpl
lock
sbb
lock
xchg
dec
push
jl
jmp
sbb
test
push
cli
sub
cmp
inc
push
or
xor
sub
sub
xor
rcr
mov
icebp
xchg
jg
movs
sub
daa
mov
(bad)
outs
mov
clc
movs
sbb
jecxz
in
cwde
retf
mov
push
movs
xor
push
xchg
imul
push
xchg
cwde
ror
push
repz
dec
(bad)
out
xchg
(bad)
mov
sub
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
or
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
enter
push
add
aad
dec
jg
fmul
loopne
or
ret
call
jge
popa
jae
fcomp
hlt
push
cmps
test
add
jp
mov
xor
nop
pop
(bad)
dec
and
icebp
push
fmul
retf
adc
ins
addr16
cmp
int3
(bad)
(bad)
mov
pop
sub
imul
mov
cmp
pop
mov
or
pop
enter
jns
in
pop
idiv
test
inc
mov
xchg
mov
pop
and
mov
xor
mov
pop
cdq
outs
xchg
mov
mov
push
mov
xor
idiv
jmp
idiv
mov
outs
push
mov
cmp
or
cmc
outs
pop
sti
fwait
loope
pop
pop
shr
xor
loopne
sbb
xor
pop
cli
mov
daa
lods
jp
jmp
in
div
xor
loop
lods
mov
pusha
jae
adc
rol
mov
add
push
cmp
and
stos
pop
rcr
mov
arpl
(bad)
sbb
std
test
adc
or
inc
add
add
sub
enter
push
dec
(bad)
and
jns
cmp
stos
fidiv
aas
push
(bad)
push
xor
imul
fisubr
fs
pusha
test
shl
mov
pop
push
retf
xor
add
pop
sti
dec
rcr
(bad)
stc
mov
adc
pop
mov
and
push
out
push
add
aad
jns
mov
xchg
push
jae
cmc
jl
or
pop
cmps
cwde
ds
cmps
lds
fs
js
mov
or
mov
scas
mov
imul
add
pop
pop
aaa
sbb
jns
out
pushf
in
retf
dec
mov
mul
sahf
cli
fisub
cmp
sub
lods
inc
mov
mov
cmc
or
nop
je
adc
ret
cmp
(bad)
mov
inc
int3
jmp
xor
ss
xchg
pusha
imul
and
gs
pop
fcomi
jmp
xor
(bad)
loopne
mov
arpl
mov
ret
lock
(bad)
(bad)
xor
ins
mov
fstp
test
repz
cmc
test
add
retf
(bad)
out
mov
mov
cmps
mov
lea
cmps
aad
jo
jg
jbe
out
jmp
xchg
ds
lock
add
sbb
repz
cmp
sbb
rol
or
push
adc
mov
push
jb
stos
cmp
adc
pop
pop
inc
push
rcl
jl
adc
(bad)
dec
mov
pop
add
cmp
fimul
or
add
jge
mov
mov
ret
push
pop
xor
aad
(bad)
mov
leave
jg
ret
mov
stos
mov
out
cmp
fcmovnbe
jbe
(bad)
xor
pushf
(bad)
out
push
xchg
xor
mov
jp
sbb
adc
mov
sbb
shr
cmp
mov
fxch
popf
pop
xor
or
xchg
push
pushf
sbb
pop
xlat
pop
data16
loopne
iret
xor
sbb
inc
jmp
push
mov
ins
(bad)
jbe
clc
jbe
call
ja
fidiv
jmp
clc
mov
xchg
xchg
aad
call
push
add
jae
rol
cmc
cmps
jno
push
ins
xchg
aad
jmp
ja
inc
push
cmp
jnp
push
outs
cmp
jnp
idiv
xchg
add
jg
addr16
push
popa
add
push
shl
push
xchg
mov
ja
push
(bad)
jns
aaa
and
pop
add
jo
mov
cli
push
outs
add
je
cmps
add
xchg
mov
cmc
lds
out
jp
outs
iret
pop
(bad)
jbe
call
inc
and
test
push
or
xchg
ja
(bad)
imul
xor
fdivr
pop
xchg
gs
es
push
adc
jae
push
arpl
cmps
ins
xchg
dec
pusha
cmp
loopne
add
jbe
enter
clc
imul
xchg
xchg
pop
test
mov
daa
push
cmp
std
neg
pop
jp
push
and
adc
popa
mov
mov
mov
push
es
aaa
pop
xor
ja
cmps
xchg
add
addr16
jnp
push
mov
cli
inc
xchg
push
add
outs
or
mov
push
test
add
daa
jnp
es
cmp
loopne
xchg
inc
pop
mov
jnp
(bad)
mov
mov
adc
je
push
ins
jno
pusha
cmc
push
mov
add
stos
xchg
test
out
in
pop
in
test
push
push
push
es
es
arpl
pop
addr16
xchg
lds
jbe
ss
cmps
xchg
ret
cmps
js
push
int3
pop
or
add
jl
mov
fwait
call
retf
jbe
arpl
ret
aam
jle
clc
ja
xchg
jns
sbb
mov
cli
js
pop
jmp
test
pop
xchg
push
bound
mov
outs
or
cmp
leave
js
fisub
jae
inc
arpl
inc
ins
js
mov
push
xchg
lds
aaa
cwde
dec
shl
(bad)
enter
dec
mov
test
xlat
add
add
pop
gs
gs
pop
cmp
xchg
movs
not
jbe
pop
push
pushf
sbb
mov
(bad)
outs
mov
xchg
ja
mov
xor
retf
mov
pusha
lahf
mov
rcr
popf
cld
sub
sub
mov
mov
imul
loopne
arpl
or
fs
rcr
mov
jae
stc
add
test
xchg
call
outs
maskmovq
mul
jmp
clc
and
xor
mulps
mov
aad
loope
imul
lds
push
outs
fadd
add
xchg
outs
mov
jbe
imul
or
mov
mov
push
fs
aaa
aad
std
imul
push
push
xchg
movs
push
add
mov
ins
xlat
movs
dec
xchg
add
and
cmps
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
outs
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
pop
push
cmp
cmp
or
call
fs
adc
outs
ins
xor
sub
scas
lods
test
fs
pop
inc
ds
mov
int3
in
jmp
fdivr
cli
cld
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
pop
pop
pop
cmp
cmp
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
cs
scas
mov
jle
fs
fs
ds
mov
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
add
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
popa
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
sbb
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
fld
adc
imul
stos
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
or
push
and
scas
sub
lock
push
retf
mov
pop
dec
movs
adc
add
sbb
mov
out
cmps
pop
nop
add
mov
xor
mov
stos
mov
jp
adc
mov
dec
xchg
xchg
out
sub
add
push
mov
or
mov
pop
mov
mov
mov
sub
mov
adc
or
jmp
mov
or
sti
lods
lods
jp
shl
mov
mov
pop
mov
pop
mov
imul
xchg
call
mov
xor
jnp
or
(bad)
mov
mov
lea
or
retf
sub
xor
mov
mov
or
add
test
scas
mov
mov
fwait
mov
jo
mov
scas
pushf
jnp
xchg
sti
mov
sti
mov
fwait
mov
retf
mov
shl
mov
jmp
or
popa
mov
xlat
jmp
dec
rol
rol
or
fimul
scas
xchg
dec
add
push
adc
mov
leave
mov
jo
mov
mov
mov
push
xor
fstp
dec
mov
jnp
or
dec
stos
loopne
add
mov
sub
push
dec
sar
ror
fsubr
add
mov
mov
(bad)
cmp
push
in
mov
dec
mov
lock
push
add
push
add
mov
xor
xor
add
pop
add
les
ret
jp
add
mov
dec
lods
ret
inc
pop
les
jl
pop
sbb
push
dec
lds
sub
push
cmp
out
sbb
mov
pop
mov
xor
(bad)
pop
and
jmp
dec
pop
add
mov
les
lds
(bad)
out
or
inc
jl
jbe
enter
or
push
(bad)
mov
mov
push
mov
sbb
add
mov
es
add
pop
add
leave
mov
leave
imul
add
or
leave
nop
mov
inc
retf
jl
scas
or
xchg
lods
xchg
imul
xchg
leave
lods
sbb
add
retf
retf
int3
xchg
mov
out
dec
retf
(bad)
mov
add
mov
retf
out
clc
retf
xchg
sub
enter
int3
retf
pop
pusha
leave
cwde
dec
stos
mov
loopne
leave
scas
pushf
into
fistp
xor
add
add
adc
in
add
dec
retf
into
mov
into
jns
into
lock
in
into
cwde
ins
leave
add
iret
loope
into
jmp
int3
xor
retf
or
or
rol
lea
sbb
jmp
sub
into
cmp
pop
int
jp
int3
and
iret
add
in
retf
shl
lea
cmp
mov
shl
(bad)
repnz
push
(bad)
int
in
rol
iret
adc
dec
sbb
and
(bad)
ins
leave
in
shl
shl
cmp
cmp
xor
jp
int
and
jl
loopne
iret
or
in
shl
rol
popf
aad
int
sti
int3
add
(bad)
aam
sub
pop
inc
into
js
into
sbb
sub
cmp
int3
mov
int
lock
jge
aam
popf
iret
push
rol
fild
pop
xlat
inc
popf
sar
fcom
into
cmps
fst
xchg
int
mov
or
fdiv
xlat
mov
rol
fld
(bad)
xchg
jge
add
mov
pushf
fisttp
fidivr
into
addr16
xadd
(bad)
(bad)
sbb
fcomp
mov
retf
sub
add
fld
fdivr
fsubrp
(bad)
mov
sar
fcomi
int
ja
fdiv
fdivr
fimul
ins
add
sbb
add
jmp
fsub
xlat
(bad)
popf
aam
scas
fidivr
(bad)
int
lods
xlat
xchg
std
int
ins
add
iret
out
sub
(bad)
int
push
std
rol
(bad)
in
fadd
popf
fidiv
out
or
or
(bad)
or
popa
nop
mov
fstp
in
fadd
fimul
push
push
pop
xor
pop
fdivr
and
xor
(bad)
fstp
cli
fsub
cwde
mov
push
mov
movs
lods
in
(bad)
(bad)
rol
icebp
lods
loope
jl
or
pop
mov
icebp
(bad)
loopne
int
ins
mov
sub
xor
jb
out
in
out
mov
dec
in
in
sbb
cmp
out
shr
scas
out
in
in
or
pushw
loopne
mov
pop
into
in
out
loope
lods
call
push
loope
fldenv
movups
pusha
ds
fsubr
arpl
out
cs
cmp
jmp
add
sbb
loop
fsubrp
pop
mov
call
fist
(bad)
hlt
lods
loope
add
lods
fucomp
dec
loope
dec
fdiv
mov
(bad)
mov
sar
aam
ds
outs
out
ret
movs
cs
push
loopne
mov
les
sbb
fistp
fld
(bad)
fdivr
ds
xchg
into
jmp
cli
mov
inc
outs
loope
scas
fidivr
push
loop
mov
mov
add
push
fcomp
stos
pop
add
or
rcl
icebp
xchg
out
popf
icebp
mov
add
outs
in
popf
loopne
fsub
loopne
call
lods
aam
out
jmp
loop
iret
mov
fcom
pop
lock
loopne
mov
pop
scas
out
sar
fstp
int
jmp
mov
out
mov
hlt
pop
(bad)
out
cs
sub
hlt
push
das
test
out
pop
ror
iret
pop
scas
retf
sub
mov
jmp
cs
(bad)
in
or
shl
call
cs
test
int
addr16
clc
in
mov
mov
cmc
sub
add
xor
lahf
repnz
fsub
sahf
repnz
mov
rol
fcomp
add
repz
nop
jg
arpl
mov
jmp
fdivp
leave
sbb
mov
add
in
fild
jg
sub
dec
fild
cmc
int3
iret
stc
ja
retf
(bad)
bswap
push
pop
std
push
(bad)
sti
loopne
neg
sar
dec
clc
cmp
outs
(bad)
xlat
lahf
clc
ret
mov
mul
mov
mov
nop
fcomip
and
clc
push
push
repnz
cld
mov
in
xor
cld
out
sti
and
add
push
cwde
push
bound
sub
mov
and
cmc
jo
push
mov
mov
mov
loopne
jo
push
push
pop
mov
sub
clc
or
push
or
sbb
dec
mov
pop
mov
clc
cmp
stos
lods
mov
dec
dec
dec
jl
dec
cld
fistp
pop
call
retf
cmp
repz
jnp
lods
fistp
retf
pop
lods
add
lods
pushf
es
mov
lahf
mov
adc
pop
loop
sub
cmp
ja
pop
mov
mov
ror
or
push
and
push
dec
bound
(bad)
outs
push
cdq
sub
xchg
adc
cmp
call
dec
xor
xchg
std
sahf
std
loop
jmp
cmp
inc
out
out
pop
sbb
in
aaa
lods
idiv
daa
dec
mov
icebp
push
sar
scas
adc
jp
(bad)
out
rcr
mov
mov
ret
or
popa
push
je
mov
dec
jecxz
dec
pop
mov
mov
sbb
mov
(bad)
mov
xlat
xchg
in
(bad)
pop
pop
sub
aam
xor
inc
sub
cmps
cmp
das
repz
popf
scas
mov
mov
push
xchg
dec
pop
(bad)
push
push
push
ret
(bad)
icebp
in
push
es
mov
psllq
aad
xchg
fld
ins
das
pop
inc
xor
and
and
xchg
hlt
(bad)
xor
iret
or
xchg
xor
pop
pop
push
xlat
inc
in
inc
daa
xchg
movs
push
sub
sub
add
mov
or
ins
test
inc
xor
xchg
adc
mov
pop
ins
inc
add
or
cmc
and
push
daa
push
xchg
loope
dec
xlat
pop
sbb
daa
pushf
xor
pop
arpl
pop
push
cmp
mov
pop
dec
push
arpl
dec
dec
cmp
xchg
cmp
bound
mov
daa
bound
(bad)
mov
xchg
jnp
sbb
adc
(bad)
out
imul
and
jnp
ds
and
sbb
mov
dec
push
push
mov
ss
push
jb
and
mov
inc
jmp
in
dec
or
in
and
cmp
cmps
adc
mov
pop
test
mov
xchg
sahf
mov
stc
cmp
je
xor
mov
mov
mov
pop
lods
loop
scas
cwde
frstor
and
jle
jge
daa
mov
or
jp
js
and
push
xchg
ja
ret
mov
xlat
scas
cmps
and
in
ret
mov
sub
jp
mov
les
mov
xchg
dec
mov
mov
bnd
mov
jmp
mov
jnp
sub
add
xchg
mov
lods
jmp
rcr
xchg
mov
pop
mov
mov
fwait
mov
jae
mov
in
xor
mov
rol
out
rol
push
xor
leave
mov
outs
fisttp
mov
sahf
add
sbb
mov
pop
aas
in
inc
sub
or
mov
lods
mul
loope
aaa
pop
js
rcr
and
jge
push
jbe
mov
std
jb
ja
imul
in
mov
jle
fcom
push
jmp
int
and
dec
or
mov
jecxz
jnp
mov
cld
test
repz
pop
fcmovnbe
(bad)
jmp
mov
push
push
aad
int3
cmp
cmp
outs
ja
mov
mov
in
inc
scas
mov
das
iret
push
jle
loopne
(bad)
mov
sub
not
xor
pop
pop
ret
mov
nop
cmps
cmp
jno
mov
sub
push
(bad)
adc
aam
call
sbb
sti
fsub
ja
sbb
scas
or
and
xor
shl
ss
aad
xor
sbb
fnstcw
(bad)
icebp
push
ret
and
sbb
sahf
xor
jns
clc
add
inc
cmps
xor
pop
sbb
push
inc
xchg
push
mov
ins
pop
jl
adc
inc
inc
repz
and
mov
pop
pop
fild
test
adc
inc
inc
sub
adc
adc
stc
int3
pop
inc
cs
jg
aam
and
cwde
inc
mov
pop
jecxz
mov
adc
cmp
jle
xchg
fild
cmc
call
sub
and
push
mov
dec
mov
mov
pushf
mov
hlt
and
out
sbb
dec
scas
xor
test
(bad)
jmp
mov
cmp
mov
rol
fisubr
add
pop
ror
or
int3
dec
mov
add
stc
inc
push
adc
fnclex
push
int3
sbb
xchg
imul
or
rcr
(bad)
mov
hlt
arpl
in
data16
mov
lds
int
ret
and
imul
or
push
cli
repnz
iret
cmp
out
xchg
or
or
mov
pop
test
sub
out
xchg
in
data16
pop
dec
inc
mov
lahf
fldenv
dec
in
ror
xor
out
mov
ror
sub
adc
shr
mov
push
cwde
jmp
xchg
daa
pop
sub
sub
sbb
jb
popf
leave
pop
popa
inc
shr
cmp
sub
aam
inc
xor
ret
cmp
mov
xor
retf
cmp
or
inc
cmps
ror
mov
jge
adc
mov
mov
push
push
rep
pop
cld
fistp
fucompp
imul
stos
mov
cli
rol
xor
xchg
stc
fnstsw
add
cmp
stos
mov
mov
cmp
jno
pop
fmul
ret
inc
ins
sub
mov
mov
xchg
cmp
and
inc
add
cs
lods
fs
out
adc
pop
jno
push
(bad)
push
mov
add
add
retf
retf
ja
add
stc
jb
shl
push
loopne
xlat
mov
sub
icebp
mov
or
test
jp
pop
cmp
sti
pop
add
cwde
add
push
and
push
adc
mov
fnstsw
das
outs
lock
inc
fcomp
mov
add
(bad)
data16
xor
adc
movs
(bad)
sub
mov
in
or
enter
jne
sti
popa
sub
jns
cmp
push
test
mov
cmps
shl
imul
loopne
xchg
aaa
out
out
je
mov
add
cmp
xchg
xchg
sbb
add
rol
ss
mov
ficom
pop
sar
and
call
cmp
dec
sub
sahf
mov
rcl
outs
add
pusha
loopne
jbe
shl
jl
push
mov
mov
or
push
xchg
mov
add
pop
mov
lds
stos
sbb
pop
dec
jecxz
into
call
add
jbe
jns
pop
inc
out
xlat
mov
mov
data16
stc
xchg
sbb
mov
inc
mov
fcmovnu
jle
sahf
xchg
or
shl
dec
sbb
dec
nop
aaa
stos
xchg
jne
mov
cmps
in
ins
cmp
mul
inc
pop
loop
push
out
nop/reserved
xchg
sbb
sub
ja
and
mov
jb
pushf
fsubr
je
pshufw
pop
repnz
fdivr
in
cld
out
js
add
stos
mov
push
cmp
cmp
sub
test
shl
nop
scas
mov
clc
jns
mov
shl
cli
sti
mov
mov
dec
popa
in
xlat
jns
jno
jae
div
jmp
pop
jp
sub
ja
loopne
shl
hlt
dec
jecxz
fild
rcl
outs
outs
lods
push
cmp
retf
jbe
mov
test
dec
jle
xor
add
call
lahf
add
repz
out
cmp
fisttp
cli
aam
pop
repz
cmp
popf
loopne
inc
sbb
mov
sub
hlt
cmps
push
ds
test
fsubr
jle
cmp
pop
repnz
(bad)
psubd
push
pop
sti
nop
xlat
mov
out
sahf
std
mov
enter
inc
xor
lahf
push
push
add
test
jle
mov
std
xor
inc
loopne
jg
add
stc
cld
repnz
jg
fild
add
jle
rol
pop
adc
push
ja
ja
dec
pop
jbe
ja
xchg
pop
sbb
jbe
xchg
cmp
jnp
push
jl
mov
pusha
xchg
jl
daa
jb
mov
dec
mov
mov
jg
push
jle
add
add
idiv
rcl
jno
sbb
lahf
idiv
pusha
loopne
repnz
sbb
adc
fnstenv
bswap
jge
cmp
clc
cmp
clc
js
xchg
jae
rol
test
inc
push
jo
loopne
add
add
and
(bad)
jb
js
sbb
xchg
xchg
inc
outs
pop
pop
jae
js
push
cwde
jb
mov
aaa
js
inc
jo
(bad)
rol
adc
(bad)
xchg
rol
rol
cmp
ja
call
adc
pop
dec
push
pop
dec
xchg
mov
or
xor
or
mov
cmp
jns
mov
movs
xchg
add
test
add
enter
sbb
mov
mov
sub
add
pop
add
cwde
jns
or
adc
adc
mov
pop
test
mov
add
mov
mov
mov
clc
jp
div
sbb
pusha
mov
call
fnstenv
push
fdivr
push
mov
jo
sbb
and
js
pop
jo
mov
mov
test
mov
or
mov
outs
add
lock
test
sub
(bad)
pop
and
mov
or
aas
mov
adc
or
mov
cmps
test
jmp
je
jo
sub
mov
xchg
(bad)
add
xchg
adc
xchg
xchg
out
dec
daa
xchg
pop
stc
nop
xlat
(bad)
mov
ja
dec
test
int3
cwde
cmp
leave
add
add
js
xchg
push
lea
xchg
dec
mov
push
mov
arpl
xchg
cs
dec
or
test
int3
cwde
xchg
test
sub
cmps
mov
pop
jl
cmps
lea
xchg
imul
je
js
shl
sub
sub
lea
mov
outs
pop
cmp
jmp
fist
or
add
cmp
daa
cdq
mov
clc
xchg
and
add
test
xchg
ffree
add
mov
dec
xchg
mov
(bad)
xchg
mov
push
jl
and
dec
jns
or
mov
xchg
sbb
and
retf
enter
jge
cwde
pushf
retf
sbb
sbb
fwait
inc
stc
mov
jmp
or
push
jmp
jle
test
mov
stc
xchg
sbb
div
test
jns
(bad)
cmps
jb
or
fadd
sbb
(bad)
fnstenv
cwde
push
cmp
enter
mov
jns
sub
pop
pop
and
pop
(bad)
lods
dec
xchg
mov
xchg
clc
or
pop
mov
jl
stos
mov
add
xchg
jge
add
call
push
cmp
(bad)
(bad)
mov
sbb
(bad)
push
retf
adc
(bad)
fisttp
mov
mov
fwait
sub
xchg
cs
aaa
ret
addr16
mov
mov
leave
xchg
add
add
add
push
cmp
xchg
add
pop
mov
(bad)
pop
test
mov
xlat
out
sbb
mov
mov
sub
cmps
cmp
mov
fldenv
or
mov
inc
test
and
and
mov
jmp
popf
xor
mov
mov
adc
add
fwait
mov
test
pop
stos
imul
stc
cdq
sub
add
test
call
nop
enter
or
sub
mov
add
add
fwait
mov
lods
fwait
cli
scas
pop
add
jmp
xchg
dec
xchg
adc
stos
mov
popf
mov
nop
addr16
xchg
xchg
enter
fwait
pop
xor
add
sbb
mov
movs
mov
nop
repz
lods
jne
mov
stc
movs
or
mov
sbb
fdiv
retf
cmp
push
or
cmps
push
test
enter
xchg
retf
or
stos
test
stos
mov
or
mov
sbb
stos
sti
test
cs
scas
dec
jnp
ficomp
sbb
test
add
lods
fnstenv
cmp
xchg
xor
mov
push
push
jmp
mov
mov
jo
or
mov
sbb
sub
jg
mov
imul
fwait
or
jo
inc
adc
mov
imul
js
and
jmp
or
cmp
cmp
sbb
mov
mov
(bad)
retf
sti
nop
jp
mov
or
test
imul
add
(bad)
jmp
jbe
mov
call
nop
inc
pop
stos
dec
sbb
or
mov
cmp
xchg
adc
(bad)
dec
mov
imul
inc
inc
push
xor
push
pushf
mov
pushf
mov
sub
add
mov
jmp
dec
jnp
dec
imul
test
pop
mov
stos
mov
call
xchg
in
mov
jl
and
test
cld
mov
jnp
push
fsub
sbb
jbe
les
imul
nop
inc
fldenv
mov
add
xchg
and
mov
int3
mov
stos
mov
mov
or
sub
ins
ret
(bad)
shr
es
aas
sti
xchg
pop
daa
or
jo
sub
mov
imul
or
rol
cld
(bad)
sbb
mov
jp
add
jnp
inc
mov
dec
pushf
xchg
mov
xbegin
scas
ficomp
mov
sbb
ins
mov
pop
(bad)
push
mov
mov
dec
scas
mov
cmps
out
mov
retf
pop
int3
ja
mov
cmp
mov
test
fwait
retf
retf
int
int
cli
cdq
int
lods
pop
sub
mov
(bad)
aad
retf
fld
sub
(bad)
popa
add
inc
mov
retf
push
or
mov
(bad)
ja
int3
pop
cmp
ret
or
xor
dec
int3
retf
mov
imul
into
mov
add
add
lods
mov
xchg
jnp
shl
pushf
sub
sbb
aas
or
call
xchg
push
pop
lds
dec
shl
shr
or
sub
mov
int3
rcr
mov
in
shr
aam
fadd
mov
shl
enter
call
imul
mov
cmp
mov
aam
mov
and
int3
xchg
jnp
les
xchg
(bad)
cld
xchg
fstp
and
aam
jl
inc
sbb
cs
lds
mov
mov
or
ja
mov
mov
ins
jge
sbb
push
add
xor
popa
lock
shr
cld
xchg
lods
sti
shl
push
or
adc
aas
sti
shr
aad
sbb
out
fiadd
retf
adc
cli
pop
int
dec
fldcw
fsubr
in
aad
fst
mov
retf
sar
int3
cli
mov
cmp
rol
sbb
sar
imul
int3
xchg
jle
leave
inc
jge
test
xlat
jmp
ins
fnstcw
rcr
int3
popa
cmp
mov
fiadd
rol
test
sbb
iret
jl
mov
fist
add
push
fidiv
fistp
loop
or
mov
and
or
jecxz
or
lahf
sbb
push
or
ds
fnstsw
inc
or
ds
mov
loope
loopne
out
rol
(bad)
sub
xlat
ins
in
cmp
cmp
(bad)
in
fst
fbstp
mov
jo
loopne
jle
push
mov
lock
in
out
fistp
in
jle
aas
dec
fld
sahf
loope
and
add
ret
fisub
jge
push
scas
jecxz
into
fisttp
fdivr
mov
or
jo
addr16
out
fstp
pop
pop
(bad)
cmps
ins
shl
jmp
or
jge
(bad)
or
xchg
jle
ds
fcomp
fnsave
pop
retf
gs
gs
fild
in
jle
cs
fisubr
frstor
fsub
in
in
shr
shl
(bad)
pop
ds
into
ret
in
jnp
in
stos
sahf
loopne
dec
xchg
pop
aam
sbb
pop
mov
pop
push
out
ds
push
jmp
sub
jmp
xor
xlat
sbb
out
sbb
out
ds
das
into
add
loopne
inc
add
dec
loopne
cmps
push
lock
inc
xchg
add
(bad)
lock
mov
cmc
push
jmp
jnp
jmp
mov
fldln2
fist
xor
ficomp
sahf
fsubrp
sar
loop
(bad)
in
sbb
aaa
jg
sahf
pop
bnd
fidivr
call
sub
sbb
repnz
sub
cs
hlt
int3
cs
jge
mov
in
sbb
int3
pop
fdivp
add
aam
add
outs
out
adc
out
out
jmp
pop
fld
out
in
sub
outs
dec
fisttp
outs
out
ja
repz
lock
stos
jmp
pop
rep
mov
hlt
outs
cmc
sub
add
outs
fwait
push
div
dec
in
xor
divps
and
or
pslld
int
mov
cmc
sbb
lahf
repz
addr16
add
sar
call
outs
clc
push
lock
jg
sbb
mov
clc
inc
outs
cli
stos
iret
test
jae
jmp
cmps
out
jmp
pop
outs
aam
psubb
push
lock
(bad)
cli
sub
cld
xchg
fisubr
cmc
xchg
outs
std
mov
neg
into
imul
mov
dec
sub
dec
stc
jb
clc
popa
mov
mov
stc
mov
push
sbb
stc
in
cmp
inc
invd
sbb
sbb
pop
add
test
pop
test
xchg
test
sbb
adc
xchg
movs
sahf
pop
sbb
cmps
xchg
mov
add
sub
mov
cwde
xchg
adc
cdq
scas
sahf
mov
mov
xchg
rcl
mov
test
aam
cwde
shr
cdq
test
xchg
in
add
fiadd
in
lock
jmp
and
jo
fwait
mov
test
cmp
mov
mov
ins
and
xchg
es
out
sbb
imul
sub
imul
ror
or
xor
inc
cli
hlt
rcl
js
test
ror
sbb
or
mov
stos
xchg
push
ret
jl
repz
cli
in
fidivr
jo
jo
jp
repz
mov
xchg
cmp
aad
nop
inc
fisub
(bad)
in
push
cmp
pop
xor
jns
bound
jl
enter
cmp
xchg
cmp
mov
arpl
jb
jne
(bad)
push
cmp
jb
adc
lahf
(bad)
aam
xchg
aad
dec
push
jge
stc
cs
adc
fnstsw
jno
int
jnp
(bad)
fistp
dec
movs
mov
xchg
jns
scas
in
push
xor
xchg
xchg
dec
(bad)
jae
ret
jg
cdq
mov
mov
in
inc
outs
cmp
mov
xchg
xchg
loope
ficom
xchg
js
sar
je
jae
adc
cmp
sbb
push
fistp
xchg
fs
adc
and
add
push
xchg
inc
je
jp
loope
mov
and
add
mov
jecxz
xor
cmps
push
mov
and
sub
ja
cmp
and
sbb
hlt
enter
sub
dec
inc
aas
mov
dec
xchg
aaa
push
add
pop
sub
pop
and
and
bnd
mov
outs
adc
push
dec
js
add
cmp
add
add
jle
adc
jl
fldenv
lahf
add
imul
jp
mov
sahf
cs
push
sbb
jmp
cmp
retf
jl
inc
xor
inc
xchg
test
fisub
cmps
cs
lods
or
jnp
or
cmp
mov
push
mov
mov
xchg
retf
pop
fidivr
or
arpl
jmp
sub
scas
cmp
or
fist
lods
into
or
xor
cmps
(bad)
fisub
add
adc
mov
xchg
add
and
pushf
je
lds
fadd
add
or
inc
(bad)
push
data16
add
and
add
icebp
leave
ss
and
sbb
icebp
add
shr
int
test
mov
mov
es
out
icebp
int
cs
cmp
int3
xor
rol
dec
ja
add
cmc
repnz
idiv
shl
or
xor
xchg
sti
mov
mov
fld
pusha
jno
pop
mov
jb
sub
in
icebp
or
lods
clc
test
add
mov
adc
inc
dec
cs
xchg
lahf
cmp
pop
push
sar
mov
jmp
jae
jnp
sub
xor
mov
mov
popf
cmp
lods
ret
std
mov
and
aam
cmp
dec
in
jmp
and
out
lods
jmp
fld
out
dec
rol
mov
(bad)
cs
jae
cld
in
xor
mov
ret
popf
das
cld
and
push
test
mov
aas
(bad)
cli
jecxz
add
(bad)
mov
test
pop
movs
xor
inc
cmp
push
or
mov
xor
adc
xlat
mov
xadd
test
sbb
add
call
xor
jp
cmp
add
or
mov
xchg
adc
nop
imul
inc
lahf
aad
gs
inc
push
mov
dec
adc
and
aad
and
arpl
loop
mov
push
inc
bound
add
push
sbb
jo
outs
and
adc
call
mov
inc
pop
int
(bad)
sub
loop
mov
inc
pop
outs
jo
adc
popa
retf
add
shl
nop
ins
and
sbb
pop
inc
inc
jb
add
loop
cmp
inc
out
sbb
adc
inc
dec
xor
sbb
adc
dec
and
loopne
push
or
cmp
das
xchg
mov
movs
sub
loop
xchg
shl
jbe
push
mov
xchg
lds
xor
repz
mov
dec
int
repnz
xchg
int
loop
fmul
cmp
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
mov
movs
xor
rcr
int
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
push
and
loopne
cmp
push
cwde
fidiv
add
test
add
je
test
mov
sub
jmp
jne
pop
cdq
add
inc
pop
xor
pusha
push
sbb
adc
add
mov
test
mov
cmp
fnstenv
vminpd
fcmovne
jp
mov
mov
das
or
sahf
xchg
scas
js
sub
fld
rcl
or
int
adc
mov
daa
push
add
and
mov
fmulp
push
push
or
cmp
pop
and
xor
xchg
test
ret
mov
jmp
pop
idiv
outs
jle
sti
fdivr
xchg
ja
in
popf
add
push
lods
cli
mov
arpl
jl
repz
mov
imul
mov
or
pop
adc
idiv
dec
add
retf
clc
mov
sub
pop
cdq
out
scas
ss
jno
lahf
mov
sti
mov
add
lods
add
sub
(bad)
je
outs
push
bound
es
(bad)
(bad)
cs
das
jge
jo
std
ss
dec
add
adc
test
add
add
jb
adc
jecxz
aam
mov
push
stos
nop
jecxz
pop
sbb
cmp
jecxz
mov
mov
(bad)
dec
pop
inc
jecxz
mov
xor
and
and
rol
(bad)
cmp
cmp
mov
arpl
(bad)
pop
scas
cli
lea
inc
fist
add
jl
repnz
and
inc
xchg
imul
add
pop
jns
lock
sbb
pop
shl
mov
ins
cld
ror
ja
pop
popf
jno
inc
mov
pop
cmp
shr
outs
mov
dec
imul
ret
daa
mov
mov
jl
lock
mov
scas
ins
lods
adc
pop
into
repz
repz
mov
shl
dec
ins
push
sbb
xchg
mov
inc
fstp
jbe
in
test
cmp
les
jge
sbb
sti
ret
into
mov
fwait
and
dec
cwde
je
fistp
mov
xchg
lods
ja
lods
xlat
enter
dec
inc
sub
scas
sub
out
push
jl
sub
add
and
loopne
cmp
test
(bad)
in
jns
mov
js
call
mov
imul
stc
iret
das
stos
test
js
inc
mov
push
imul
cli
scas
in
int
nop
ret
je
inc
pop
imul
hlt
mov
pop
fsub
mov
or
and
ins
cmp
xor
in
jae
jns
iret
outs
fistp
and
ds
sbb
call
add
pop
arpl
(bad)
mul
sub
call
cmp
arpl
bound
(bad)
cld
mov
fdivr
mov
ja
mov
xlat
std
in
(bad)
cmc
jecxz
pop
loope
fwait
mov
popf
xchg
les
(bad)
mov
es
cmp
mov
or
ss
fadd
(bad)
mov
fs
cmp
(bad)
jle
push
inc
std
call
and
jl
sub
mov
out
jmp
fdiv
rol
ss
add
outs
xor
jns
daa
push
ja
mov
jg
push
pop
test
jns
push
pop
cmp
push
mul
mov
xor
jge
xchg
add
imul
push
pop
dec
addr16
push
add
imul
arpl
add
jo
mov
cmp
inc
lock
push
out
aad
jge
test
(bad)
adc
and
jl
js
adc
gs
jl
xlat
fs
cmps
jb
call
add
outs
loop
jg
push
bound
rol
and
imul
(bad)
jl
inc
xchg
inc
daa
xor
push
dec
or
jo
mov
adc
mov
jne
push
add
sbb
dec
jnp
pop
sbb
jno
pop
push
dec
mov
mov
jb
sub
(bad)
jne
(bad)
jno
push
mov
data16
xlat
pop
pop
and
inc
cmps
imul
xchg
cwde
je
test
jl
sbb
jae
cmc
outs
adc
popf
mov
and
test
jno
push
mov
jno
js
mov
jo
push
add
or
ja
ja
test
mov
adc
mov
cmc
push
cwde
push
xchg
jle
ja
jno
ins
xor
mov
xchg
jp
js
and
jb
pop
arpl
push
mov
add
cmc
jp
xlat
je
cmp
cmps
cmps
ins
sub
pusha
dec
ja
ret
or
pop
push
and
dec
stos
mov
jae
xchg
pop
fild
jge
(bad)
add
out
jle
pop
adc
ins
(bad)
xor
push
push
(bad)
in
inc
xchg
sub
outs
mov
ins
xchg
mov
jl
cmps
sbb
jp
dec
add
div
xchg
mov
push
fdiv
outs
adc
jnp
push
ins
loopne
xchg
lds
je
ja
xlat
mov
mov
cmc
jns
js
and
xchg
retf
test
push
into
(bad)
pop
xchg
(bad)
pop
and
and
mov
xchg
adc
cmps
xchg
xchg
ins
das
aaa
ja
imul
push
ja
cmp
mov
popa
adc
out
call
imul
jbe
loope
ja
clc
outs
or
js
push
nop
cmp
push
cmps
jb
push
arpl
cli
in
inc
mov
ja
jp
stc
jae
xchg
outs
mov
pusha
ret
adc
(bad)
stc
neg
dec
pop
adc
jns
js
adc
add
cdq
jne
add
cdq
(bad)
pop
mov
(bad)
jb
aad
in
add
jne
push
xchg
inc
pop
data16
push
add
pop
cmps
add
push
push
xchg
movs
test
jmp
cmp
xchg
inc
pusha
popa
ins
fsub
sbb
pop
mov
movs
pop
in
(bad)
jo
(bad)
xchg
pop
mov
push
pop
(bad)
push
lea
data16
enter
fs
push
add
pop
or
out
in
xchg
pop
cmp
pop
not
mov
arpl
cwde
push
inc
lahf
and
inc
and
cmp
dec
stos
lahf
xor
ss
outs
or
push
add
add
call
push
dec
adc
push
sub
jp
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
or
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
push
push
push
xchg
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
cmp
cmp
push
or
pop
pop
or
add
call
fs
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
int3
in
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
cmp
cmp
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
popa
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
sbb
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
or
push
and
scas
sub
mov
stos
add
lds
sahf
stos
lods
jg
mov
retf
aaa
mov
fild
jp
dec
lock
or
add
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
xor
mov
dec
mov
dec
mov
stos
mov
jmp
mov
stos
aas
sti
lods
or
add
fild
jnp
out
mov
jmp
push
fwait
mov
sbb
sub
cmp
or
pop
jnp
mov
movs
or
jp
dec
jmp
lods
mov
pop
shl
jo
pop
imul
push
scas
(bad)
mov
mov
lea
add
pusha
stos
mov
retf
mov
jmp
xchg
fwait
mov
sub
push
push
add
test
scas
mov
mov
fild
scas
bound
xchg
sti
mov
or
mov
add
mov
add
add
mov
cmp
fwait
mov
adc
cmp
mov
mov
xor
in
scas
loope
nop
in
dec
lods
xchg
sub
fwait
mov
or
stos
add
sub
jmp
cmc
sbb
fwait
mov
sbb
pop
sar
add
cld
mov
cmp
scas
sub
add
cmp
add
mov
inc
jnp
sbb
mov
push
or
mov
mov
add
push
add
cld
ret
aas
sbb
xor
ret
inc
or
add
sub
add
mov
mov
push
les
les
add
lock
ret
inc
pushf
les
mov
push
ins
add
jmp
add
retf
ret
push
mov
popa
pushf
(bad)
or
pop
and
or
bound
nop
ret
pop
jo
jb
add
push
int3
(bad)
push
in
mov
les
enter
ins
mov
add
(bad)
imul
jge
mov
jl
sub
enter
mov
add
add
push
xor
add
sub
mov
mov
mov
test
retf
mov
retf
pop
inc
retf
lds
add
lods
xchg
sbb
adc
lods
cld
leave
jb
retf
add
leave
sub
mov
int
int3
int
jmp
fcomp
pop
and
sbb
scas
or
sub
popf
jmp
int
dec
retf
test
stos
into
pushf
mov
dec
retf
add
iret
cld
cmp
jmp
add
add
loopne
stc
int3
add
sbb
or
movs
or
add
mov
iret
std
jl
mov
sar
cmp
fimul
retf
(bad)
and
sar
pushf
mov
std
iret
mov
retf
(bad)
sbb
push
in
retf
pop
lods
xchg
sbb
inc
mov
sbb
into
jp
into
cmp
or
into
retf
or
sub
sar
lea
jge
retf
lods
sar
rol
cmp
fstp
pop
ror
rol
cmp
pop
in
rcl
adc
iret
test
shl
into
or
inc
jp
xor
jge
mov
inc
push
iret
or
jge
iret
xor
push
popf
(bad)
paddw
bswap
add
dec
aad
popf
(bad)
adc
out
cwde
iret
and
(bad)
and
rcr
mov
cld
jl
(bad)
in
aad
mov
xchg
cmp
pop
lock
es
fnstenv
lods
fnstcw
cwde
jge
imul
lods
jge
scas
lea
mov
cmp
jbe
rcl
xlat
retf
in
(bad)
fcmovnbe
mov
adc
add
mov
sub
mov
int
or
mov
ficomp
add
ffree
in
sar
fstp
fld
aad
pop
(bad)
shr
(bad)
cmp
pop
cmp
cs
jecxz
loopne
int
xchg
sub
mov
pop
push
rcl
loope
jge
inc
or
mov
repnz
into
pushf
fst
idiv
and
pop
ins
fstp
cmp
add
mov
movs
cld
fld
loopne
mov
xchg
dec
ror
lods
(bad)
push
loope
push
push
retf
loop
loopne
in
loope
fcom
retf
push
pop
xor
int
mov
aad
jle
cmp
loop
or
sub
in
into
fistp
mov
mov
out
cmp
out
in
fst
mov
out
sahf
out
mov
push
cmp
mov
fbstp
fsubp
scas
mov
sti
sub
enter
or
aas
dec
ffreep
jl
(bad)
out
rcl
aam
(bad)
into
(bad)
jmp
fmulp
xchg
xchg
into
shl
into
xor
in
int
xor
push
scas
fnstenv
into
pop
add
fimul
inc
in
popf
jmp
mov
fstp
or
(bad)
mov
iret
mov
aam
push
loop
dec
out
(bad)
in
jle
mov
xlat
push
push
jecxz
push
(bad)
fnstcw
(bad)
lods
fst
jle
jns
call
std
out
(bad)
sar
aam
sbb
sbb
out
mov
jmp
(bad)
out
inc
(bad)
out
push
call
popf
jmp
mov
sub
push
jmp
pop
fiadd
int
outs
into
iret
mov
imul
retf
mov
add
mov
push
shr
ds
mov
shl
test
jecxz
aas
stos
pop
adc
and
rcl
(bad)
call
lock
scas
shl
rcl
lahf
in
scas
(bad)
mov
imul
mov
jns
rcl
aad
(bad)
push
pop
hlt
push
mov
out
out
repz
sar
mov
out
daa
fucomp
shr
out
mov
jecxz
mov
push
mov
test
repz
cmc
dec
mov
jecxz
xacquire
out
adc
retf
pop
outs
stc
sbb
repz
add
in
mov
in
outs
fst
loope
ds
push
icebp
in
fldenv
stos
sub
add
repnz
aas
sti
pop
pusha
repnz
pop
cmc
jnp
jecxz
psubq
shl
scas
out
outs
hlt
arpl
hlt
inc
mov
outs
outs
fst
lock
scas
sar
in
mov
call
test
adc
clc
popf
push
(bad)
imul
test
cwde
push
mov
repnz
scas
test
retf
pop
in
gs
loope
aas
call
cmc
xor
mov
enter
and
pop
mov
js
cwde
cwde
call
cmp
in
cmc
loopne
clc
or
enter
cmp
inc
sbb
je
cwde
enter
fdivr
or
imul
mov
sbb
mov
je
or
cmp
jns
stos
cmp
pop
out
enter
sbb
fmulp
mov
fild
lods
sub
out
push
mov
fsubp
dec
push
jne
aam
test
shr
test
retf
sbb
imul
mov
fs
adc
xor
imul
mul
pop
lds
fild
in
mov
dec
mov
pop
mov
or
adc
inc
std
or
jmp
inc
mov
sbb
sub
in
in
lock
jo
hlt
jns
xor
pushf
sub
inc
cmps
aad
mov
mov
shl
mov
add
iret
and
fwait
mov
push
(bad)
push
sbb
lds
cld
(bad)
inc
dec
(bad)
mov
mov
dec
lahf
sbb
mov
enter
xor
dec
retf
jle
dec
je
sbb
add
lods
pop
mov
loop
stos
outs
xchg
stos
cmps
(bad)
sub
cwde
clc
xchg
ret
gs
dec
and
cmp
xor
fdivr
retf
or
inc
adc
je
mov
jle
xrelease
jo
lods
mov
or
dec
xchg
dec
out
xor
fs
or
imul
dec
popa
adc
xchg
std
xor
movs
sbb
repnz
adc
out
jle
std
cmps
fldenv
xor
adc
mov
pop
pop
fcom
jmp
lahf
jbe
xor
sbb
rcl
repnz
retf
aas
std
jge
(bad)
jge
mov
fmul
sub
test
movs
inc
sbb
mov
stc
or
mov
jno
rcr
jns
test
nop
sub
js
(bad)
movs
mov
lahf
shr
dec
pusha
lahf
pop
aam
cdq
mov
push
ss
push
and
popa
inc
xor
stc
adc
fld
dec
(bad)
cmps
jp
jp
mov
push
pop
add
popa
sbb
test
popf
out
mov
dec
mov
and
shl
clc
test
scas
imul
js
dec
push
mov
sahf
jo
dec
mov
dec
pop
loope
aam
bound
call
and
fwait
out
xchg
lods
dec
jnp
jnp
push
sbb
sahf
add
xchg
pop
jno
cdq
push
adc
pop
(bad)
movs
mov
shr
outs
mov
and
xor
or
clc
jns
mov
add
jl
and
nop
loop
adc
cmp
(bad)
ins
cwde
enter
jmp
enter
xchg
dec
lods
push
div
mov
xchg
lods
mov
mov
jp
add
adc
dec
mov
jp
lods
adc
in
loope
enter
cmc
and
movs
lds
out
jo
or
sub
and
jne
fidivr
daa
jae
cmps
pop
loopne
(bad)
mov
loope
ins
mov
rcr
or
dec
shl
repnz
fisttp
jge
test
fmul
stc
jecxz
cmp
or
sbb
into
pop
loope
pop
(bad)
jecxz
push
jnp
mov
dec
inc
enter
pop
sub
or
pop
shl
stc
mov
xchg
sbb
mov
outs
fidiv
lods
jmp
xlat
dec
mov
dec
or
test
mov
mov
les
das
pop
xlat
jbe
fild
(bad)
ret
out
mov
mov
je
dec
pop
cmc
mul
(bad)
mov
pop
sbb
scas
inc
cmp
imul
les
outs
lock
out
or
aas
mov
pop
jmp
or
imul
mov
pop
sub
mov
in
pop
shr
mov
ret
stos
aam
and
and
scas
inc
sub
sub
sbb
and
adc
and
daa
pop
nop
inc
cld
popa
inc
das
push
mov
sti
loop
aaa
xchg
mov
adc
data16
sbb
sti
add
mov
stos
mov
repz
xchg
xor
sahf
mov
out
push
mov
movs
mov
cmp
xor
and
cmps
lea
jle
inc
cmp
mov
add
aad
push
push
or
inc
dec
lods
adc
clc
retf
adc
and
xchg
cdq
push
je
sub
lds
mov
popf
push
adc
mov
scas
fcomp
js
dec
jmp
iret
sub
inc
outs
jp
das
test
and
dec
pop
inc
leave
mov
cmps
loopne
pop
or
jmp
cdq
adc
and
ins
cld
mov
or
add
add
inc
iret
add
fs
pop
imul
aam
lahf
cmp
push
xchg
lahf
lahf
or
in
inc
aaa
inc
xchg
je
das
movs
pop
inc
dec
add
aam
hlt
nop
stc
imul
push
xchg
or
mov
mov
cmps
push
daa
xlat
int
jb
stos
aaa
xor
push
idiv
pusha
or
pop
mov
mov
inc
xor
(bad)
arpl
out
adc
sub
dec
stos
(bad)
push
xor
or
add
mov
pop
push
cmc
dec
scas
movs
mov
imul
rol
cmc
movs
push
xchg
mov
mov
aad
stc
fsubr
cmp
push
(bad)
jp
stos
cmp
cli
push
sbb
movs
lods
inc
(bad)
pop
rol
dec
xchg
inc
pusha
add
or
mov
and
imul
fidivr
jb
lahf
or
inc
retf
jmp
mov
xchg
jmp
xchg
call
cmp
adc
sub
lods
cs
jge
gs
push
and
loopne
loopne
inc
loop
mov
mov
add
cmc
mov
fldcw
fisubr
rcl
shl
push
les
outs
outs
(bad)
sti
fsubr
and
jne
mov
shl
add
inc
clc
rcr
ins
jle
mov
out
add
sahf
sub
lahf
pop
pusha
adc
jo
lds
loope
xchg
(bad)
ja
mov
mov
lahf
fwait
adc
cmp
loop
out
push
(bad)
adc
outs
ds
add
cmp
and
add
adc
adc
stc
mov
mov
loope
pop
fsub
das
mov
shl
pop
data16
dec
and
push
call
mov
inc
pushf
out
add
outs
outs
mov
sub
and
retf
xor
fdivr
lahf
sub
bound
xlat
pop
mov
retf
or
sti
bound
add
cs
jae
xor
(bad)
sbb
cld
(bad)
aaa
cmp
xlat
sub
cmc
lods
ret
(bad)
jmp
jae
xlat
les
jne
pop
push
ja
add
push
add
sub
mov
dec
mov
mov
jbe
add
scas
xor
add
sub
cmp
push
movs
ja
mov
aaa
mov
pop
loopne
jge
ss
in
outs
pop
pop
sbb
inc
out
xor
cmp
pop
loope
into
add
inc
sbb
mov
cmp
ficomp
add
mov
(bad)
scas
cmp
fisttp
daa
mul
(bad)
js
and
jae
dec
scas
ins
(bad)
xor
out
mov
punpcklwd
dec
js
or
sbb
and
mov
or
shl
aaa
jp
fdivp
dec
inc
std
add
pop
shl
std
jmp
test
aaa
jnp
fistp
nop
scas
cmp
xlat
cmps
push
test
or
mov
ror
mov
retf
jbe
and
in
jnp
ror
or
adc
cwde
inc
fist
mov
imul
adc
(bad)
dec
mov
sub
div
inc
pop
test
clc
sbb
fbld
jo
push
push
cmp
das
fcomip
mov
fdivp
outs
push
mov
lds
mul
cmps
cmp
imul
add
nop
scas
out
dec
cmovl
(bad)
out
jmp
jnp
loope
lahf
mov
and
pushf
jmp
imul
xor
adc
hlt
out
add
loope
mov
retf
hlt
addr16
test
jge
aaa
jp
out
push
daa
add
je
add
xor
sbb
sub
inc
add
adc
sbb
(bad)
add
jp
pop
jb
cmp
mov
std
aaa
jp
test
jns
push
add
mov
mov
clc
test
out
sbb
ds
sub
fadd
pop
add
nop
cmp
jnp
daa
jge
cmps
jl
push
jne
jl
add
pop
or
mov
je
jle
xchg
jp
mov
pop
mov
dec
mov
inc
imul
js
xchg
inc
nop
add
xor
jbe
clc
jnp
cmps
mov
fdiv
pop
mov
js
mov
jne
push
or
inc
pusha
add
rol
add
xchg
add
mov
mov
jl
push
mov
mov
ins
sub
je
mov
into
or
cmps
add
jns
out
inc
xchg
jne
enter
inc
iret
(bad)
add
mov
mov
push
addr16
cmps
mov
mov
or
mov
jmp
pop
dec
push
add
adc
inc
cwde
mov
xchg
and
call
xchg
mov
ds
out
push
mov
call
sub
xchg
or
sub
xlat
lea
and
mov
sbb
pop
inc
xchg
mov
dec
xchg
or
nop
dec
mov
or
sahf
and
cmp
jbe
sub
mov
or
or
ja
dec
add
cmps
add
adc
xchg
mov
fucomp
sub
mov
enter
xchg
cmp
mov
pop
xchg
inc
stc
inc
ror
xchg
sub
das
jmp
pop
test
pop
sbb
enter
xchg
sub
mov
cmp
jns
and
(bad)
sti
mov
dec
push
xchg
pop
mov
xchg
pop
cdq
inc
fst
cdq
jo
call
std
(bad)
fcom
inc
lea
jg
mov
pop
xchg
dec
jns
jmp
or
call
lahf
mov
punpckhwd
cmps
cdq
sar
je
cwde
push
cdq
js
sbb
xlat
jns
aad
call
cwde
sbb
add
xchg
(bad)
pop
xchg
pusha
sub
(bad)
enter
xchg
stos
enter
popf
inc
cmc
inc
cmp
leavew
nop
push
inc
jg
and
or
imul
mov
fdiv
loopne
idiv
add
mov
jge
add
(bad)
jmp
loope
mov
sbb
mov
cmp
jle
mov
cdq
jle
xchg
sbb
ja
sbb
retf
push
jne
jns
xor
xchg
fs
fucomi
jne
stc
xchg
inc
mov
xchg
fldenv
fcom
sub
cdq
call
scas
mov
lock
pop
movs
stos
mov
jle
lea
cdq
mov
cwde
sbb
pop
loopne
push
sbb
or
out
imul
mov
jns
mov
mov
sub
rcr
fldenv
mov
xchg
jmp
mov
add
test
gs
mov
fst
jp
fs
push
or
inc
cli
lahf
xchg
stc
xchg
sar
lahf
push
pushf
arpl
xor
lahf
repz
cmp
test
xor
push
leave
call
std
dec
stos
inc
cdq
lahf
test
mov
inc
dec
sahf
cmp
lods
pop
pop
xchg
in
xchg
sub
movs
inc
enter
movs
shr
inc
cmp
(bad)
loopne
inc
sbb
or
mov
cli
xchg
mov
xchg
test
enter
jns
add
movs
mov
lods
sar
sahf
xchg
pop
fwait
xchg
cld
sbb
jp
pop
mov
jp
sub
adc
pop
pop
push
aad
mov
fild
mov
add
add
pop
add
jp
pop
mov
mov
or
push
sub
lods
mov
mov
push
sub
mov
or
mov
retf
mov
adc
xor
xchg
gs
sbb
sub
test
stos
pushf
pop
cli
mov
test
pop
imul
(bad)
mov
dec
xchg
cmp
call
push
mov
imul
cmp
sub
mov
sub
cli
add
sub
xchg
(bad)
pop
scas
fs
xchg
jns
in
mov
xchg
pop
mov
imul
movs
cmp
pop
or
test
movs
bound
mov
xchg
xor
nop
mov
mov
jp
sub
ss
pusha
mov
jmp
xchg
mov
pop
add
(bad)
retf
mov
cmp
jnp
mov
movs
fld
or
xchg
sbb
mov
cmp
retf
mov
test
push
mov
fwait
cmps
imul
fidivr
jb
stos
stos
retf
mov
call
mov
leave
call
adc
dec
stos
push
mov
pusha
mov
cmp
jnp
mov
push
mov
add
rol
add
sub
mov
xchg
mov
cmps
add
pop
jnp
call
cld
mov
cli
add
add
add
sub
cdq
mov
cld
add
dec
cdq
(bad)
test
jnp
repz
push
mov
add
xor
jne
(bad)
push
lds
ret
(bad)
mov
test
test
pop
(bad)
sub
dec
les
or
adc
add
(bad)
jbe
(bad)
(bad)
les
push
jp
xor
lods
mov
or
or
cmp
adc
add
ret
pushf
xchg
leave
retf
jno
retf
sahf
xor
xchg
cld
enter
rcr
adc
(bad)
lods
mov
xor
or
push
xor
mov
jp
pop
mov
jno
mov
dec
int3
mov
mov
jnp
fdivr
mov
in
ret
and
fmul
cmp
mov
sti
mov
fsubr
int3
(bad)
fdiv
cdq
pop
jmp
in
mov
movs
push
pop
stos
icebp
sbb
sahf
sub
shr
jno
popf
dec
int
ins
shl
shl
cld
shl
add
lods
iret
ret
sti
mov
enter
inc
or
jl
push
dec
xchg
in
mov
imul
in
(bad)
or
cmp
add
inc
or
loopne
sub
mov
sub
(bad)
lods
ret
aad
push
aad
int
fimul
adc
pop
cmp
loop
rcl
enter
cli
cmp
or
aam
(bad)
aad
sbb
sti
dec
(bad)
sub
sar
mov
cdq
ret
addr16
jl
or
je
mov
dec
mov
jmp
mov
addr16
aad
cmp
xchg
popf
ret
(bad)
(bad)
pushf
retf
call
or
jp
shr
(bad)
jg
xchg
dec
popf
rcl
fisubr
fadd
enter
sub
dec
pop
rol
iret
lods
cdq
ret
loop
shr
lahf
lock
int
fwait
ret
jno
int
pop
(bad)
sbb
and
add
add
inc
fnsave
mov
test
(bad)
neg
jns
aad
or
and
mov
(bad)
ficomp
rcr
rcr
xor
rcr
fsubr
movs
std
mov
(bad)
aad
sbb
cmc
pop
fiadd
xlat
aam
fiadd
test
mov
xor
cmps
mov
loope
(bad)
aam
fucom
or
jnp
shr
fisttp
sti
or
in
fimul
fisubr
mov
cmc
in
loopne
(bad)
aaa
pop
int
dec
jecxz
in
add
or
aaa
or
stos
fst
cmp
loop
ins
xchg
pop
inc
or
jecxz
sbb
mov
in
or
repnz
loope
in
xlat
or
fld
loop
mov
jno
(bad)
fstp
fdiv
fdiv
pop
dec
fcom
push
(bad)
enter
push
call
cs
scas
call
push
fstp
call
sahf
fnstenv
(bad)
sub
mov
mov
nop
scas
loop
push
fidivr
mov
(bad)
in
mov
aas
pop
jmp
out
call
scas
fidiv
fcom
jmp
add
lahf
shl
mov
cmp
pop
dec
loopne
sahf
call
inc
or
call
aam
jecxz
or
aam
loopne
pop
loop
mov
or
aam
fpatan
jge
xchg
jle
call
iret
(bad)
lods
(bad)
jmp
(bad)
loopne
push
fadd
ds
into
out
xchg
jge
stos
fsubrp
outs
push
jmp
pop
jge
sub
inc
dec
out
cs
out
xlat
lahf
pop
out
repz
pop
(bad)
fucom
push
pmaxsw
icebp
sub
mov
outs
fild
repnz
out
adc
stos
pop
push
fdivr
or
scas
repnz
mov
sub
out
add
pop
push
pop
adc
or
rol
fcmovnbe
push
hlt
stos
push
out
int3
repz
pop
push
dec
push
hlt
inc
fcomip
or
fcomp
inc
in
scas
dec
in
mov
repz
lock
push
sar
out
out
scas
hlt
cmp
out
fidivr
jno
lock
out
imul
in
mov
jno
hlt
ficomp
xor
jecxz
out
repz
jmp
call
fcomp
pop
pop
loope
(bad)
outs
repnz
pop
cmc
sub
and
(bad)
iret
hlt
jmp
fsub
hlt
push
out
dec
(bad)
mov
mov
pop
(bad)
adc
cmc
aam
test
out
sahf
or
add
psadbw
mov
stc
nop
cld
div
cmc
ret
retf
lahf
sti
scas
pmaddwd
repnz
in
xchg
xchg
das
cld
fcomp
test
cld
loopne
clc
and
dec
xrelease
(bad)
(bad)
pop
cli
inc
aas
std
scas
jg
out
out
test
sub
pop
test
sub
pop
sbb
mov
mov
xchg
add
(bad)
(bad)
pop
xchg
pushf
sbb
xchg
dec
test
sahf
mov
scas
movs
sub
scas
stos
xchg
xchg
lahf
mov
scas
mov
mov
pushf
mov
cwde
and
adc
nop
mov
movs
mov
ret
add
xchg
fadd
lds
xchg
mov
iret
in
mov
fsubr
mov
lea
jae
into
popf
sub
leave
or
push
imul
inc
ins
xchg
pop
mov
das
xor
xchg
inc
pop
movs
jbe
sti
adc
and
hlt
sbb
mov
(bad)
(bad)
retf
add
mov
leave
nop
xor
in
mov
pop
xchg
in
cmp
imul
dec
loope
xchg
mov
jb
mov
pop
jp
pop
enter
push
fld
mov
mov
les
mov
ret
dec
cld
ror
lods
add
(bad)
into
jb
jmp
xchg
arpl
mov
mov
cmp
jns
cmp
je
add
jne
dec
xchg
push
out
in
es
mov
imul
aad
dec
lock
ds
icebp
mov
push
test
daa
and
(bad)
cmp
aad
and
dec
scas
(bad)
lods
jns
adc
pop
add
int3
in
rcr
and
xor
mov
sti
pop
rcr
or
fmul
fwait
jnp
jb
arpl
jecxz
outs
les
sbb
fadd
das
ss
popa
xor
int
cmp
ss
jns
test
sbb
jns
fldenv
mov
rcl
push
sbb
inc
loopne
pop
mov
loop
pop
sbb
push
mov
in
and
dec
movs
rcr
leave
xchg
push
pop
fst
push
inc
push
mov
adc
rcr
movs
and
mov
pop
and
gs
push
fldenvw
dec
cmp
push
jle
and
xor
(bad)
call
mov
push
jmp
fstp
or
jo
popa
mov
fisubr
ins
dec
into
xlat
fsubr
jnp
xchg
test
(bad)
ds
sbb
(bad)
mov
movs
and
push
add
adc
add
cmovo
mov
cmp
inc
scas
dec
xchg
xchg
scas
mov
mov
sbb
xor
cli
inc
scas
(bad)
sbb
lods
xor
(bad)
and
lods
(bad)
lds
add
pushf
add
mov
or
retf
shr
mov
sar
sub
les
mov
mov
mov
push
xchg
lods
jge
addr16
ror
das
mov
fidivr
or
lahf
fisub
sub
xchg
jns
das
(bad)
iret
bound
pop
test
pop
not
ret
out
in
mov
mov
add
test
repnz
mov
ret
stos
ret
bound
xor
and
lock
adc
sbb
bound
inc
aad
push
in
add
(bad)
pusha
adc
mov
pop
cmps
mov
pop
fisub
xchg
xchg
cwde
fnsave
or
leave
fisub
sub
int
xlat
sub
scas
mov
cwde
jle
xor
and
fstp
xor
loop
fwait
inc
test
fdivr
jge
adc
or
fidiv
rol
mov
nop
jno
jmp
mov
lahf
xor
cli
int3
mov
test
add
iret
inc
scas
test
loop
dec
cmp
jge
xchg
push
cmp
mov
cmp
outs
pop
mov
and
in
cmps
in
jle
pusha
mov
out
pop
jns
std
xchg
les
mov
dec
imul
mov
mov
pop
ret
mov
in
ror
sar
mov
div
cwde
adc
pop
out
jnp
sbb
fcomp
inc
mov
jnp
jo
adc
cmp
xor
in
dec
mov
add
push
cdq
mov
(bad)
push
xchg
popa
test
ss
movhps
push
js
adc
xor
push
mov
fstp
sub
cmps
sub
adc
mov
push
mov
cmp
sar
add
or
or
ins
push
and
push
add
test
mov
dec
mov
and
fld
sub
pushw
mov
inc
mov
xchg
xchg
fimul
push
xchg
mov
adc
(bad)
cmps
pop
and
cmp
or
push
mov
in
sbb
xchg
mov
sbb
sub
sub
and
push
out
imul
leave
dec
push
mov
xlat
ins
fidivr
cli
scas
fwait
add
aas
(bad)
cli
(bad)
sub
scas
or
jne
adc
ror
js
ror
test
lahf
in
xchg
daa
cmp
iret
sahf
std
dec
test
pop
push
xchg
hlt
mov
and
adc
hlt
in
cmp
dec
ror
or
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
or
stos
add
mov
jmp
fisttp
test
dec
pusha
gs
rol
add
mov
lds
loopne
shl
mov
rcl
ret
jne
adc
loope
ja
mov
adc
sub
mov
sub
dec
push
mov
ret
dec
fcomi
xor
mov
test
mov
mov
ja
ins
xchg
in
js
dec
pop
and
aaa
ror
cs
pop
or
inc
ret
cs
xor
mov
loope
scas
xchg
ret
cs
push
loope
pop
add
fwait
cmp
pop
mov
mov
(bad)
or
(bad)
or
jp
int3
(bad)
adc
cwde
ret
xor
xor
test
test
xchg
xchg
stos
gs
test
fwait
jnp
push
mov
retf
adc
rep
inc
mov
adc
mov
(bad)
cmp
xor
int3
es
popf
jne
out
addr16
inc
out
lss
and
lock
fmul
adc
mov
mov
ret
clc
or
lods
add
add
adc
mov
add
or
mov
xchg
sbb
icebp
call
gs
data16
js
shl
lea
mov
push
js
(bad)
adc
mov
fld
jp
iret
outs
inc
cmc
xchg
ins
imul
cli
inc
aad
test
retf
ror
push
adc
movs
aas
int3
bound
jp
cdq
jbe
cmps
lea
into
imul
aaa
pop
fmul
adc
jbe
mov
loopne
xchg
(bad)
lock
push
mov
dec
pop
jl
and
jo
mov
jmp
mov
enter
mov
loop
das
sti
fsubr
add
mov
outs
or
sbb
adc
not
push
sbb
ror
inc
scas
or
out
mov
rol
lds
and
fst
xor
cmps
int3
in
jmp
add
push
test
js
add
(bad)
push
(bad)
mov
scas
ret
add
xchg
jns
pop
into
jo
dec
pop
idiv
fadd
and
cmp
inc
pop
cmp
in
ins
sti
mov
pop
(bad)
data16
sar
xchg
inc
out
xchg
jle
fnstsw
jge
dec
pop
jbe
mov
clc
xlat
imul
and
pop
out
out
cmp
push
js
cbw
add
lahf
cmp
jmp
in
lahf
mov
nop
dec
fdiv
inc
add
fisubr
outs
aaa
adc
cmp
out
dec
sbb
pop
jmp
fdiv
cld
jmp
mov
jmp
add
push
cmp
jns
mov
pop
mov
aad
lahf
mov
cmc
out
enter
in
(bad)
mov
mov
ds
ret
cmp
(bad)
idiv
push
inc
shl
add
xchg
push
out
(bad)
pop
les
add
jo
inc
jnp
daa
dec
cmps
cmp
jns
mov
xchg
in
outs
retf
mov
push
loopne
retf
push
jl
js
popa
cmps
add
jo
repz
imul
fwait
xchg
xor
std
inc
bound
outs
inc
sbb
xor
cwde
ss
cmp
xchg
(bad)
jl
pop
pop
jbe
ins
inc
mov
sbb
rol
xor
ds
push
mov
(bad)
(bad)
pop
xchg
or
mov
outs
ins
adc
cs
push
aaa
xchg
addr16
je
ja
cmp
inc
mov
dec
cmps
pop
adc
adc
test
pop
pop
mov
push
imul
test
xchg
push
test
retf
inc
add
arpl
jnp
data16
in
bound
imul
cdq
pop
mov
sub
jb
push
mov
outs
scas
adc
dec
test
add
fdivr
or
fadd
sbb
jbe
sti
test
jbe
call
ins
xchg
xchg
xlat
mov
popa
pop
and
jg
ins
loopne
jo
out
fadd
dec
inc
jge
pop
js
mov
jle
pop
jecxz
jg
fdivr
inc
ja
mov
adc
call
outs
pop
cwde
mov
mov
call
jmp
pop
fbstp
sti
cmps
je
add
xor
adc
dec
mov
div
out
pop
outs
outs
push
add
add
(bad)
mov
pop
test
jle
cmp
xchg
mov
lock
xlat
cmp
mov
int
jle
xchg
js
cmp
jecxz
jno
xchg
xchg
outs
(bad)
cmps
jp
out
jg
pop
mov
pop
mov
jno
dec
jle
test
out
xchg
mov
ja
push
pop
pop
mov
bound
outs
retf
cmc
xchg
outs
data16
xchg
sub
mov
jg
daa
jae
jbe
arpl
outs
ret
(bad)
mov
cmp
test
xchg
dec
add
lea
pop
jnp
dec
jo
enter
jb
mov
sbb
mov
jnp
push
stos
push
xchg
xor
jge
cmp
mov
and
sub
mov
pop
pop
or
xchg
mov
test
js
ss
xchg
push
cmp
push
mov
nop
inc
jp
mov
std
push
jnp
clc
jl
jbe
popf
aad
aad
jo
test
movs
push
mov
nop
xchg
ss
sbb
jae
add
xchg
dec
and
pop
addr16
xor
inc
jo
mov
jge
mov
lock
fs
imul
sahf
test
bound
jns
mov
jmp
mov
add
pop
xchg
fwait
jne
sbb
and
add
jns
es
into
push
pop
mov
mov
call
pop
xor
xchg
cmps
aad
adc
mov
lahf
retf
ja
xchg
inc
and
cwde
addr16
fldenv
sbb
xchg
xchg
xchg
dec
jbe
adc
sti
enter
push
mov
mov
push
bound
stos
or
movs
adc
xchg
push
out
xchg
enter
outs
sub
dec
loopne
xor
ins
add
jp
push
addr16
pop
ins
(bad)
mov
imul
xchg
outs
in
mov
jb
push
enter
pop
add
add
pop
test
push
jp
pop
pop
dec
adc
xchg
jmp
stos
movs
pop
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
add
stc
add
add
add
add
out
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
or
cdq
test
or
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
inc
dec
mov
and
jmp
mov
mov
retf
cmp
test
or
cmp
scas
add
popf
pop
fld
pop
mov
mov
mov
imul
(bad)
xchg
jo
cmps
leave
jmp
add
pusha
add
shl
cli
popf
lea
mov
mov
xchg
sbb
stos
mov
sub
sti
mov
cmp
pop
add
add
mov
jnp
neg
mov
mov
dec
mov
sbb
pop
mov
or
mov
mov
(bad)
or
mov
cmp
add
jo
or
lock
mov
mov
arpl
add
sbb
dec
lods
xchg
sti
add
retf
mov
stos
mov
or
inc
mov
jmp
hlt
or
jnp
adc
mov
mov
sti
mov
jl
add
mov
sub
retf
ror
mov
(bad)
cli
mov
push
add
rcr
add
cli
add
ret
cmp
mov
sbb
stos
adc
mov
adc
add
cmp
ret
jp
add
int3
les
sub
inc
cld
rcl
or
add
cld
scas
sbb
pop
mov
dec
sub
add
add
js
pop
nop
les
les
mov
les
enter
push
jl
pop
sbb
pop
mov
or
pop
mov
sub
or
mov
add
lods
add
mov
out
js
and
add
pop
add
leave
mov
leave
imul
aaa
inc
add
adc
xchg
cld
retf
leave
inc
call
lds
add
lods
xchg
retf
int3
call
mov
cwde
cld
retf
mov
retf
out
mov
into
jl
(bad)
rcr
mov
rcr
mov
int3
mov
int
lods
leave
in
mov
ins
lds
leave
mov
add
into
repnz
retf
push
mov
pop
xor
push
retf
out
pushf
add
mov
add
pushf
pushf
iret
sti
fmul
repz
push
(bad)
rcr
sbb
or
int3
adc
push
sbb
or
shr
sar
in
mov
iret
sar
and
jp
into
sub
js
cmp
pop
ins
into
das
or
pop
int
push
std
rcl
sar
add
sbb
xor
and
xchg
out
cmp
lock
out
or
pop
int
adc
sub
xor
push
(bad)
aad
sti
iret
and
ins
add
and
cld
shl
sub
aaa
cmp
outs
(bad)
aad
sub
aam
pop
rcl
or
jnp
aam
std
aad
sub
inc
mov
sub
cmp
pop
int
test
sbb
or
call
dec
xlat
xchg
sub
jg
rcr
adc
adc
retf
mov
mov
std
fcom
inc
pop
retf
mov
pop
popf
shl
inc
fstp
je
fld
loopne
cld
in
fcmovnb
(bad)
aad
fstp
xchg
ins
(bad)
sub
push
push
ror
sbb
xchg
or
mov
int3
iret
dec
aam
(bad)
shl
(bad)
lods
fcmovbe
sbb
scas
pop
sar
fidiv
sub
scas
fst
jle
fcomp
ins
rol
iret
add
ficomp
xlat
jge
fadd
sbb
or
aad
cmp
adc
loope
mov
or
in
frstor
loope
(bad)
pop
loop
in
aam
mov
jb
(bad)
fisttp
jge
retf
pop
jo
mov
xlat
ficomp
lock
add
call
fmulp
jle
fdivr
jo
adc
(bad)
dec
fist
aam
xlat
push
ds
and
daa
or
loopne
rcl
sbb
cmp
and
(bad)
adc
out
outs
jecxz
out
retf
in
ins
(bad)
std
loopne
fst
sub
pop
dec
xlat
inc
out
aam
(bad)
fincstp
sbb
pop
outs
retf
test
iret
loopne
fisub
out
sbb
repz
loopne
pop
shl
ins
out
into
fisttp
cmc
std
loopne
outs
in
pop
rcl
iret
add
(bad)
js
rcr
pop
add
add
add
mov
into
jmp
loop
pop
ror
aad
jle
mov
mov
(bad)
mov
call
fsubp
mov
fadd
jle
push
pop
jmp
sahf
out
outs
in
pushf
jmp
sbb
inc
sbb
push
std
iret
cmps
(bad)
jmp
sahf
jmp
push
(bad)
in
dec
out
dec
loopne
mov
in
out
out
fbstp
(bad)
pop
call
ins
jmp
aam
jmp
dec
inc
iret
pop
outs
out
lahf
in
mov
in
shr
jno
fcom
add
mov
cmp
and
stos
pop
rol
mov
mov
out
out
iret
ss
rcl
mov
pop
jge
cmp
mov
iret
xchg
or
sbb
in
and
cmp
jmp
(bad)
inc
ds
cmp
call
pop
out
data16
add
ror
fild
call
jg
scas
(bad)
cmc
fisttp
test
shr
loopne
ds
div
repz
push
cmc
adc
iret
scas
xlat
ins
jmp
mov
clc
pop
out
iret
sub
xchg
cmc
adc
hlt
outs
fstp
clc
dec
sahf
jmp
mov
add
shl
psubd
clc
(bad)
cmp
clc
pop
(bad)
lods
ins
lock
add
sahf
jmp
or
rep
outs
fst
shl
in
int
outs
outs
cmc
fwait
pop
loopne
or
retf
jb
in
scas
mov
add
div
iret
adc
retf
iret
fcomip
ret
sbb
repz
hlt
mov
shl
into
cli
test
retf
jle
stc
ds
out
std
imul
in
std
in
out
cs
(bad)
cli
fdivr
icebp
jge
out
nop
and
test
jb
xchg
mov
test
cwde
cwde
clc
clc
cwde
xor
aad
push
mov
mov
push
jns
mov
pop
mov
mov
sbb
cli
sub
mov
dec
sbb
sub
pop
dec
pushf
cmp
jp
cmp
sti
push
fdivr
dec
(bad)
fdivrp
dec
sbb
jle
retf
or
pop
enter
or
mov
out
xchg
sbb
mov
lods
jb
jge
fs
push
adc
nop
es
push
cli
adc
adc
mov
and
jmp
sbb
add
add
and
in
ror
pop
lods
xor
int
hlt
sub
aaa
pop
cmp
mov
leave
ds
fimul
mov
and
dec
and
out
fmulp
dec
pop
aas
sub
aam
aam
pop
cdq
sbb
jo
sbb
sahf
push
xchg
cwde
cmp
adc
dec
lock
dec
inc
xchg
or
sub
aam
gs
int
cmp
cmp
loop
lods
push
xchg
stos
dec
mov
push
cmps
xor
(bad)
(bad)
ins
pop
dec
xor
mov
mov
int3
(bad)
pop
or
sub
push
aam
mov
hlt
mov
fucomi
jnp
movs
aam
test
into
out
sub
pusha
out
pop
cmp
stc
movs
jne
or
mov
adc
inc
pop
shl
movs
and
mov
dec
into
fdiv
add
sbb
fstp
jne
imul
ficomp
movs
and
dec
fst
mov
or
ficomp
cdq
inc
xor
adc
dec
and
fdivr
dec
mov
(bad)
or
sbb
sub
adc
cmp
sbb
movs
fld
imul
xchg
in
adc
or
cmp
inc
xchg
sub
mov
or
(bad)
jg
popf
ja
jg
cmc
or
pop
fstp
pop
push
dec
push
call
shr
and
cmp
fcom
and
jb
ins
stos
xchg
movs
test
imul
sbb
sub
scas
push
or
and
add
xchg
adc
test
mov
push
je
mov
mov
jle
pop
xchg
loopne
fldcw
enter
push
mov
aam
call
mov
add
outs
fwait
(bad)
call
add
fist
and
test
stos
mov
dec
js
bound
fwait
test
xchg
mov
js
cmp
push
mov
cmp
jp
adc
fadd
mov
mov
retf
cmp
fsubr
push
adc
sbb
lahf
jmp
mov
jae
rcr
ffree
adc
cmp
in
and
ror
push
mov
inc
cmp
sub
push
jmp
jne
lods
jmp
and
jmp
dec
sub
fsub
iret
pop
jbe
xor
jl
rcl
mov
jp
sub
inc
pop
addr16
jp
jp
es
mov
cmc
mov
jecxz
sub
jne
mov
std
mov
test
dec
fdivr
js
ja
and
pop
daa
(bad)
cmp
and
mov
push
jp
daa
jg
mov
(bad)
leave
das
out
jle
out
test
ds
mov
sub
ds
jge
fisttp
clc
in
(bad)
mov
adc
push
mov
or
mov
push
outs
ins
cmp
pop
rcl
addr16
jmp
cmps
stos
jmp
enter
pop
int
ja
fisttp
rol
pop
daa
sub
not
call
popa
jae
imul
push
mov
jmp
cdq
enter
add
sbb
fiadd
jl
jae
loopne
and
push
aam
aam
daa
sbb
dec
sub
test
pop
repz
mov
ja
cmp
aas
fcomp
xchg
ss
jmp
add
push
rol
ins
dec
add
adc
push
dec
jmp
mov
test
jl
xlat
hlt
mov
mov
mov
sbb
xchg
add
push
in
or
stos
in
adc
outs
xchg
or
jp
or
mov
dec
inc
(bad)
scas
ins
repz
clc
adc
xchg
cwde
and
loope
test
jecxz
inc
sub
(bad)
sub
dec
and
or
stos
addr16
movs
das
mov
and
and
add
adc
imul
or
inc
daa
ja
and
sub
leave
(bad)
sub
movs
cmp
fldcw
add
mov
cmp
(bad)
inc
fucompp
xor
int3
arpl
dec
mov
lahf
in
inc
jecxz
int
inc
inc
push
adc
xchg
daa
add
pop
xchg
in
and
sub
stos
(bad)
and
xchg
mov
dec
aaa
mov
push
jo
mov
and
cmps
inc
xor
test
test
mov
mov
cwde
enter
xchg
mov
pop
adc
cmp
aad
inc
js
add
movlps
dec
and
push
lods
sbb
cmp
sbb
dec
outs
mov
push
xchg
sub
test
dec
ins
fwait
add
inc
add
loopne
push
aam
push
aas
imul
lea
pop
ds
push
test
sub
(bad)
xchg
addr16
jmp
add
je
rcr
dec
mov
add
repz
mov
mov
fsub
ret
lods
shr
xor
xchg
mov
test
pusha
pop
push
mov
in
and
xchg
mov
js
mov
jne
movs
outs
mov
add
cmp
pop
(bad)
dec
xor
sti
aam
ret
retf
push
movs
sub
call
mov
jno
retf
cs
or
ds
(bad)
push
outs
mov
retf
in
jbe
mov
sub
push
nop
dec
adc
or
in
cmp
(bad)
out
mov
add
xchg
call
loopne
push
repz
and
ret
adc
or
mov
test
fst
arpl
imul
aaa
cmps
jmp
rcr
sub
or
inc
add
mov
test
inc
mov
adc
pop
les
out
jl
pop
int
test
push
xor
xor
push
mov
xchg
xchg
aaa
and
dec
pop
jo
in
mov
retf
pop
pushf
stc
mov
retf
jnp
jb
dec
dec
rcr
dec
fcomp
xlat
cmp
pusha
dec
loop
outs
mov
movs
aas
in
in
adc
add
rol
push
xchg
cmp
or
add
scas
call
(bad)
jmp
xor
in
inc
cmp
popf
ficomp
inc
inc
mov
sub
push
jnp
aam
xchg
and
push
xor
dec
sbb
fndisi(8087
ss
jns
imul
dec
mov
cdq
xor
mov
sbb
ficomp
lods
mov
add
and
dec
(bad)
mov
stc
mov
or
mov
mov
cmp
jne
jb
or
jl
add
ret
cmp
sbb
sbb
aaa
ret
ja
outs
sbb
std
ss
sub
imul
adc
js
pop
stos
sub
sbb
ret
push
out
movs
addr16
call
pop
xor
dec
out
pop
jmp
lea
test
pushf
loopne
pop
cmp
mov
test
loopne
or
xor
pop
add
ret
scas
add
cmp
leave
pop
cmp
out
fbld
mov
std
jmp
aad
pop
popa
push
add
test
nop
jge
add
in
nop
add
xchg
cmp
(bad)
out
(bad)
push
fistp
(bad)
pop
test
pusha
aad
das
std
aam
fild
cmp
add
mov
jmp
jecxz
cmc
and
pop
ja
mov
jmp
pop
push
mov
ret
(bad)
or
outs
cli
out
jbe
cld
out
ds
pop
and
shl
(bad)
stc
outs
scas
cli
aam
dec
clc
ret
jae
jmp
fcomp
add
jg
xor
or
nop
fprem
iret
(bad)
cmc
pop
xlat
mov
add
out
cmps
jg
(bad)
jg
xchg
jg
mov
loopne
sub
js
aaa
jae
push
jle
or
xchg
sub
jne
(bad)
jbe
ja
aaa
aaa
jge
mov
in
jnp
cmps
ja
xchg
cmp
add
mov
sbb
aaa
sub
sar
mov
inc
mov
loop
jge
aaa
pusha
into
out
jg
jle
mov
push
or
push
jp
sub
call
jne
inc
jo
fadd
test
mov
push
pop
jl
es
mov
push
pop
mov
xor
add
jo
jmp
jle
mov
je
sub
mov
jnp
jl
sub
mov
int3
rol
inc
sub
retf
inc
jle
pusha
add
add
pop
push
jp
ja
adc
adc
loopne
je
mov
adc
jne
mov
or
mov
mov
jae
enter
mov
xchg
jo
daa
jp
enter
xchg
jl
test
fwait
add
xchg
mov
sub
nop
mov
cwde
add
test
dec
ror
add
xchg
add
js
test
pusha
fsubrp
(bad)
xlat
mov
enter
(bad)
neg
adc
lea
dec
or
jle
sbb
mov
fstp
loopne
add
add
js
(bad)
js
or
dec
mov
sahf
enter
jo
and
sbb
test
ja
addr16
adc
xor
ficomp
add
add
jae
adc
pusha
xchg
sbb
mov
mov
xchg
mov
dec
mov
jne
pop
xchg
adc
lea
xchg
mov
xchg
push
jmp
sub
lea
xchg
adc
jnp
mov
(bad)
cwde
xchg
cwde
mov
push
inc
mov
xchg
test
push
mov
xor
xchg
or
add
hlt
xchg
stc
call
sbb
xchg
xor
dec
adc
sbb
xchg
js
vmwrite
mov
daa
cwde
sbb
xchg
xor
mov
xchg
pop
adc
cmp
cmps
mov
jl
stc
ja
dec
or
inc
call
or
cmp
jmp
adc
shl
sbb
or
mov
jmp
fisubr
sbb
or
mov
xchg
cdq
pushf
retf
xor
je
loopne
sbb
lea
xor
ja
aaa
out
fisttp
xchg
push
mov
test
lahf
sub
test
xchg
xchg
push
jns
lods
mov
sbb
xchg
sub
imul
jge
aaa
xchg
push
js
test
popf
mov
aas
push
sub
mov
cwde
repz
out
imul
cwde
inc
(bad)
sub
mov
jge
xchg
push
mov
mov
xchg
mov
xchg
sahf
cmp
cmp
or
xchg
fst
call
and
jl
mov
dec
jmp
sbb
xchg
inc
mov
rol
repz
fild
jne
cwde
mov
fwait
pop
inc
popf
sbb
dec
pop
lahf
jl
outs
cmp
xchg
mov
sbb
dec
xor
jns
inc
sbb
xchg
rcr
xchg
inc
cmp
jmp
fwait
xchg
fwait
or
jle
fisub
xchg
jnp
xchg
cmp
mov
dec
xor
sbb
cmp
fst
jns
or
mov
jmp
push
aaa
xchg
add
mov
mov
add
sub
retf
sub
imul
sbb
mov
lahf
inc
mov
sub
push
pop
mov
sbb
ror
loopne
mov
cdq
add
mov
dec
or
js
pop
jo
test
shr
inc
sub
pop
lahf
or
leave
stos
call
movs
sbb
xchg
sub
call
xchg
inc
or
cmp
test
clc
dec
mov
push
stos
adc
fs
stos
sbb
ss
mov
cmps
inc
sub
mov
mov
stos
dec
fwait
test
sub
imul
mov
fldenv
retf
push
dec
xchg
stos
jp
shr
pushf
mov
xchg
std
sub
test
cli
mov
sub
fwait
cmps
push
sub
or
jo
mov
(bad)
test
pop
mov
(bad)
cmp
dec
mov
leave
scas
adc
nop
sub
and
xchg
push
imul
mov
jnp
mov
mov
(bad)
mov
mov
iret
stos
cwde
int3
dec
mov
xor
mov
cmp
fld
or
jmp
cmps
mov
xor
adc
and
shr
mov
pop
jmp
mov
imul
mov
mov
sub
mov
retf
push
iret
imul
fs
mov
mov
rol
ins
push
add
rcl
mov
mov
fiadd
jo
add
lock
sbb
cmp
sub
imul
jp
pop
mov
and
mov
retf
sti
mov
mov
cmp
mov
inc
sbb
call
pop
lahf
cwde
sbb
push
fadd
xor
mov
mov
loope
cmps
xor
rcr
add
dec
add
ret
push
sbb
lods
cwde
ja
(bad)
push
jl
out
mov
ins
mov
mov
leave
(bad)
gs
cwde
sti
mov
in
(bad)
cmp
or
add
(bad)
mov
fidivr
dec
shl
sar
mov
retf
mov
jl
add
mov
dec
add
xchg
outs
sub
lock
add
pop
cld
mov
mov
mov
mov
sbb
adc
les
jl
cmps
cmp
mov
retf
in
push
sub
into
push
and
lods
mov
lods
cwde
pushf
in
retf
cmc
jns
iret
(bad)
cmp
sar
fidivr
(bad)
call
stos
(bad)
or
jle
into
push
sub
xor
(bad)
mov
int
pop
add
into
and
rol
retf
call
cmp
in
dec
mov
stos
int3
inc
cmp
jae
iret
and
mov
iret
ficomp
mov
or
ror
fmul
mov
retf
cmps
imul
ror
mov
sbb
or
dec
into
or
int3
mov
sub
inc
ins
shr
jl
mov
aad
int
sahf
retf
aad
sbb
adc
aad
ins
retf
aad
ins
scas
int
mov
ffree
mov
mov
in
leave
pop
jge
arpl
xchg
popa
std
mov
sub
mov
(bad)
pusha
sbb
mov
stos
adc
leave
and
stos
retf
and
cli
sub
ficomp
xchg
mov
add
sub
cs
inc
sbb
repnz
ins
dec
xlat
push
fld
aam
push
cmp
into
aas
cmp
inc
rol
popf
fcom
stos
mov
rol
fdivr
retf
fidivr
fmul
xchg
pop
sub
push
or
sahf
jl
mov
ret
or
pop
retf
cmps
popf
xlat
mov
fcomp
in
fcom
leave
jbe
shl
retf
or
retf
mov
leave
ret
lock
push
pop
retf
mov
cdq
fst
inc
sub
cmps
(bad)
jnp
fadd
sub
jmp
fisub
(bad)
shr
lods
movs
cmp
out
in
aad
or
sar
push
pop
fld
ins
fcmove
std
shr
dec
into
in
cmp
add
mov
fisub
push
or
adc
neg
push
ds
xchg
mov
cwde
or
ds
(bad)
and
shl
or
jmp
frstor
std
jecxz
mov
xor
mov
(bad)
fucom
ins
mov
pop
cs
fucom
ins
sub
mov
in
fucom
cmp
in
cmp
retf
std
ins
fisttp
(bad)
sub
loopne
sahf
in
dec
mov
push
loop
out
mov
ds
push
fdiv
popf
retf
xor
in
sahf
loopne
sub
(bad)
fsubp
adc
rcr
stos
sub
push
loop
cmp
arpl
ret
gs
ret
and
fldenv
jmp
push
cs
xchg
sub
int3
sub
pop
outs
fadd
out
cs
into
call
int
mov
test
jecxz
push
out
int
jle
loopne
pop
in
jp
loopne
dec
fcomi
in
in
pop
out
sub
out
std
(bad)
in
ds
aas
mov
jmp
sahf
xlat
fdivrp
in
jle
lahf
scas
fadd
jmp
scas
call
int
add
or
(bad)
dec
jmp
(bad)
int
adc
or
nop
add
cs
sahf
icebp
mov
fadd
jmp
shl
pop
lahf
out
repz
out
mov
sahf
sub
retf
repnz
out
pop
out
fstp
repnz
and
push
push
ret
call
jns
and
fcom
pop
repz
in
arpl
enter
mov
out
push
out
outs
cmc
imul
and
repz
sbb
jmp
in
pop
fucom
int3
mov
mov
out
fsubr
out
push
icebp
es
jle
retf
sub
lock
jl
out
push
retf
push
out
idiv
xchg
inc
pushf
rcl
push
fucomip
xor
sub
hlt
dec
jg
jnp
repnz
(bad)
shl
sbb
outs
stc
arpl
stc
xchg
(bad)
hlt
pusha
(bad)
repz
in
stc
jmp
imul
stc
dec
mov
dec
pop
cli
scas
dec
out
jg
mov
repnz
cmc
xchg
(bad)
in
psadbw
clc
xor
mov
cmp
idiv
repnz
repz
mov
lock
cld
stos
(bad)
cmc
(bad)
ds
loopne
out
enter
sahf
repz
cmc
fs
movs
jg
int
stc
in
stc
add
(bad)
xchg
into
repz
out
pop
jmp
mov
cmps
(bad)
mov
add
sub
pop
sbb
dec
or
add
mov
xchg
pop
add
sahf
mov
or
mov
mov
mov
mov
cdq
mov
shl
mov
test
rcr
scas
sub
ret
test
sub
xchg
add
add
xchg
call
div
mov
add
jmp
int
xchg
or
data16
sahf
cmp
fwait
cmp
xchg
adc
jmp
dec
and
dec
push
rcl
sbb
fnstenv
imul
sbb
jg
sub
xor
and
and
adc
jmp
cmp
add
jne
test
cmp
lods
lds
cmp
movs
pop
fs
repnz
mov
movs
dec
shr
jns
pop
adc
sub
and
addr16
and
aad
lods
ds
inc
pop
ds
stos
sub
sub
imul
pusha
gs
fsub
xor
mov
adc
fstp
xlat
pusha
loope
lods
sub
sub
test
sub
jmp
xchg
push
test
inc
push
mov
js
jecxz
add
jae
xchg
fwait
loope
push
inc
scas
push
cmc
xor
cmp
imul
xchg
jmp
jno
and
ins
xchg
ins
sar
cmc
(bad)
pop
jg
sub
mov
lds
push
lahf
jle
mov
loope
repz
sub
dec
xchg
and
int3
push
aam
add
adc
rol
sbb
clc
je
pusha
mov
xchg
mov
arpl
sub
adc
(bad)
push
js
mov
cs
in
inc
xchg
mov
jb
jge
and
xor
sub
inc
jle
and
push
test
fild
mov
mul
gs
retf
rcr
jo
ss
xchg
scas
or
ficom
and
pop
and
loope
adc
add
jge
ss
lea
push
call
sub
push
sub
sub
movs
mov
and
jecxz
shl
push
inc
stos
sub
jno
pop
lea
jmp
stos
ret
mov
ins
bound
lea
stos
push
jmp
mov
push
shl
mov
jmp
mov
ss
rcl
mov
cmp
dec
pop
adc
test
push
mov
sbb
cmp
sub
mov
mov
stos
lock
jb
mov
sbb
iret
mov
xchg
ret
mov
je
shl
pushf
add
or
add
enter
repnz
sub
retf
ins
repz
das
shl
call
fs
add
xor
out
and
in
repnz
repz
pop
jae
sub
jnp
movs
sar
out
jno
imul
ret
into
cmp
rol
inc
adc
(bad)
mov
popf
xor
inc
dec
add
jns
lea
(bad)
aam
das
ins
xor
and
loop
mov
add
mov
in
sub
jmp
call
dec
ss
push
(bad)
scas
mov
out
xchg
stc
mov
xor
jmp
dec
fidiv
cli
and
mov
mov
popf
xchg
cdq
xor
out
jo
sahf
jp
jge
or
jge
retf
sub
mov
(bad)
in
xchg
jecxz
and
mov
and
sbb
sub
sbb
sti
icebp
iret
dec
test
out
cld
icebp
push
push
sbb
(bad)
and
loopne
cs
inc
jns
mov
call
popa
scas
ds
push
cmp
push
pop
(bad)
call
jo
add
icebp
xchg
(bad)
sbb
test
sti
and
shl
push
and
inc
pusha
sub
call
ret
shl
dec
adc
sub
inc
jo
dec
popa
add
ror
icebp
mov
lds
sub
sbb
ret
mov
sub
sub
or
or
pmulhw
lds
loop
mov
pop
movs
cmp
jno
pop
les
pop
sbb
push
pop
mov
xor
ins
adc
add
ror
js
dec
pop
repnz
pop
push
cmp
mov
popf
fsub
xchg
push
(bad)
cwde
mov
pop
cmp
shl
add
dec
pop
loop
xchg
ror
test
bound
repz
std
inc
adc
rcl
fwait
dec
int
ret
fmul
cmps
ss
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
mov
inc
mov
add
push
sub
add
or
mov
push
or
into
call
std
stos
pop
outs
adc
mov
movs
je
add
jp
mov
inc
scas
and
nop
push
mov
cmp
dec
cmc
push
xlat
ror
imul
rol
xchg
mov
(bad)
data16
stos
fld
loop
mov
mov
pop
mov
push
mov
(bad)
in
mov
shr
movs
imul
test
add
adc
ja
js
sub
sub
movs
add
imul
xchg
mov
cwde
stos
pop
and
mov
adc
idiv
leave
retf
mov
in
jb
mov
cs
mov
mov
add
jne
push
fistp
mov
and
(bad)
adc
or
lods
xor
dec
pop
repnz
pop
mov
jg
fucom
mov
or
cs
mov
loope
ins
mov
pop
push
sub
or
ja
xor
add
clc
or
stos
pop
and
shl
repz
in
add
sbb
or
and
add
mov
pop
dec
aad
xchg
jns
sub
stos
fldcw
call
jp
mov
scas
jae
das
pusha
xchg
inc
test
xchg
mov
cmp
dec
add
pop
push
enter
mov
ret
mov
pop
fisttp
sbb
push
out
xchg
cmc
stos
add
pop
pop
mov
sbb
push
out
cmp
in
mov
(bad)
mov
test
jmp
lods
mov
push
js
xchg
(bad)
xor
or
not
mov
pushf
fs
sub
aam
ss
ror
imul
gs
jnp
movs
inc
clc
mul
pop
cli
fcom
cmp
and
mov
mov
mov
xchg
xchg
or
adc
lea
or
sub
and
call
and
ss
(bad)
pusha
push
dec
(bad)
mov
(bad)
stos
mov
xor
mov
ja
mov
pop
fcmovnb
push
add
sub
xchg
mov
fstp
out
ror
inc
cmc
movs
sub
jl
(bad)
outs
mov
cdq
sub
or
scas
loopne
ficomp
vmovdqu
pop
sub
out
pop
test
call
pop
jne
test
cmp
or
sar
stc
mov
push
jno
imul
jbe
pop
push
add
push
cwde
jnp
icebp
popf
out
pop
sbb
aas
aaa
jnp
in
outs
ret
and
into
cmp
mul
mov
js
jg
repnz
inc
adc
push
pop
js
aaa
sar
inc
mov
sar
sar
cmps
xchg
sahf
out
xor
fcmovbe
mov
mov
add
inc
push
xor
xchg
pop
jns
(bad)
adc
jge
retf
scas
cmp
mov
lods
je
mov
(bad)
(bad)
fbstp
add
pop
sar
(bad)
xor
clc
pop
aad
out
jbe
loopne
(bad)
repz
retf
das
push
xchg
out
pop
fisubr
stos
mov
(bad)
out
xchg
sub
in
jne
fs
addr16
call
ins
mov
jb
xchg
pop
jb
add
add
jb
mov
in
jo
push
imul
mov
sub
jp
push
outs
cmp
std
idiv
jbe
push
jo
movs
inc
add
push
pusha
jno
jl
xchg
xor
adc
sbb
inc
xchg
mov
ja
inc
(bad)
js
aaa
jg
daa
pop
add
outs
out
mov
jmp
cmps
add
test
pop
and
push
outs
mov
arpl
xchg
inc
jb
cwde
jb
cmc
xor
ds
(bad)
pusha
jbe
jbe
(bad)
push
rol
xchg
jge
xlat
jl
pop
xchg
mov
jnp
addr16
sbb
add
dec
push
bound
cmps
ins
test
sub
rol
add
lea
mov
push
xlat
test
pusha
sbb
movs
jns
test
add
neg
pop
jns
push
adc
mov
mov
daa
mov
imul
ret
xlat
jbe
cmps
xchg
sbb
mov
pop
and
pop
push
mov
jmp
push
ins
jae
mov
xchg
jbe
push
sbb
push
daa
jp
outs
mov
add
(bad)
mov
mov
add
jae
push
imul
in
arpl
lods
add
aad
sbb
fdiv
test
push
popa
mov
ins
ret
(bad)
mul
adc
push
jcxz
jo
es
push
pop
bound
pop
push
pop
xchg
mov
jne
ss
ja
push
mov
pop
lahf
ja
add
jnp
mov
mov
outs
push
adc
loop
xor
push
clc
jbe
xchg
push
js
sbb
mov
jmp
cwde
jae
cwde
sub
jg
push
push
popa
sub
or
mov
outs
clc
enter
pop
pop
mov
js
retf
inc
(bad)
test
cwde
mov
xchg
dec
shl
popa
mov
lea
xor
add
jp
test
sbb
sbb
fs
pop
cmp
add
test
xchg
test
fwait
or
bound
outs
mov
mov
xor
mov
call
jbe
rcr
pushf
in
sub
sub
mov
xchg
push
push
test
clc
pushf
rcl
jns
sahf
fcmovu
push
push
mov
mov
push
fld
or
test
xchg
(bad)
aam
xchg
fmul
pop
mov
psubsw
push
mov
jbe
call
inc
push
jae
mov
aad
shl
push
mov
in
test
(bad)
jnp
push
outs
int3
movs
add
xchg
outs
jl
imul
sub
cmp
ja
out
mov
push
xchg
mov
daa
aad
in
imul
push
pop
xchg
xor
cmp
gs
xlat
mov
and
pop
mov
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
pop
adc
add
add
add
add
out
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
or
cdq
test
or
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
inc
dec
mov
and
jmp
mov
mov
retf
cmp
test
or
cmp
scas
add
popf
pop
fld
pop
mov
mov
mov
imul
(bad)
xchg
jo
cmps
leave
jmp
add
pusha
add
shl
cli
popf
lea
mov
mov
xchg
sbb
stos
mov
sub
sti
mov
cmp
pop
add
add
mov
jnp
neg
mov
mov
dec
mov
sbb
pop
mov
or
mov
mov
(bad)
or
mov
cmp
add
jo
or
lock
mov
mov
arpl
add
sbb
dec
lods
xchg
sti
add
retf
mov
stos
mov
or
inc
mov
jmp
hlt
or
jnp
adc
mov
mov
sti
mov
jl
add
mov
sub
retf
ror
mov
(bad)
cli
mov
push
add
rcr
add
cli
add
ret
cmp
mov
sbb
stos
adc
mov
adc
add
cmp
ret
jp
add
int3
les
sub
inc
cld
rcl
or
add
cld
scas
sbb
pop
mov
dec
sub
add
add
js
pop
nop
les
les
mov
les
enter
push
jl
pop
sbb
pop
mov
or
pop
mov
sub
or
mov
add
lods
add
mov
out
js
and
add
pop
add
leave
mov
leave
imul
aaa
inc
add
adc
xchg
cld
retf
leave
inc
call
lds
add
lods
xchg
retf
int3
call
mov
cwde
cld
retf
mov
retf
out
mov
into
jl
(bad)
rcr
mov
rcr
mov
int3
mov
int
lods
leave
in
mov
ins
lds
leave
mov
add
into
repnz
retf
push
mov
pop
xor
push
retf
out
pushf
add
mov
add
pushf
pushf
iret
sti
fmul
repz
push
(bad)
rcr
sbb
or
int3
adc
push
sbb
or
shr
sar
in
mov
iret
sar
and
jp
into
sub
js
cmp
pop
ins
into
das
or
pop
int
push
std
rcl
sar
add
sbb
xor
and
xchg
out
cmp
lock
out
or
pop
int
adc
sub
xor
push
(bad)
aad
sti
iret
and
ins
add
and
cld
shl
sub
aaa
cmp
outs
(bad)
aad
sub
aam
pop
rcl
or
jnp
aam
std
aad
sub
inc
mov
sub
cmp
pop
int
test
sbb
or
call
dec
xlat
xchg
sub
jg
rcr
adc
adc
retf
mov
mov
std
fcom
inc
pop
retf
mov
pop
popf
shl
inc
fstp
je
fld
loopne
cld
in
fcmovnb
(bad)
aad
fstp
xchg
ins
(bad)
sub
push
push
ror
sbb
xchg
or
mov
int3
iret
dec
aam
(bad)
shl
(bad)
lods
fcmovbe
sbb
scas
pop
sar
fidiv
sub
scas
fst
jle
fcomp
ins
rol
iret
add
ficomp
xlat
jge
fadd
sbb
or
aad
cmp
adc
loope
mov
or
in
frstor
loope
(bad)
pop
loop
in
aam
mov
jb
(bad)
fisttp
jge
retf
pop
jo
mov
xlat
ficomp
lock
add
call
fmulp
jle
fdivr
jo
adc
(bad)
dec
fist
aam
xlat
push
ds
and
daa
or
loopne
rcl
sbb
cmp
and
(bad)
adc
out
outs
jecxz
out
retf
in
ins
(bad)
std
loopne
fst
sub
pop
dec
xlat
inc
out
aam
(bad)
fincstp
sbb
pop
outs
retf
test
iret
loopne
fisub
out
sbb
repz
loopne
pop
shl
ins
out
into
fisttp
cmc
std
loopne
outs
in
pop
rcl
iret
add
(bad)
js
rcr
pop
add
add
add
mov
into
jmp
loop
pop
ror
aad
jle
mov
mov
(bad)
mov
call
fsubp
mov
fadd
jle
push
pop
jmp
sahf
out
outs
in
pushf
jmp
sbb
inc
sbb
push
std
iret
cmps
(bad)
jmp
sahf
jmp
push
(bad)
in
dec
out
dec
loopne
mov
in
out
out
fbstp
(bad)
pop
call
ins
jmp
aam
jmp
dec
inc
iret
pop
outs
out
lahf
in
mov
in
shr
jno
fcom
add
mov
cmp
and
stos
pop
rol
mov
mov
out
out
iret
ss
rcl
mov
pop
jge
cmp
mov
iret
xchg
or
sbb
in
and
cmp
jmp
(bad)
inc
ds
cmp
call
pop
out
data16
add
ror
fild
call
jg
scas
(bad)
cmc
fisttp
test
shr
loopne
ds
div
repz
push
cmc
adc
iret
scas
xlat
ins
jmp
mov
clc
pop
out
iret
sub
xchg
cmc
adc
hlt
outs
fstp
clc
dec
sahf
jmp
mov
add
shl
psubd
clc
(bad)
cmp
clc
pop
(bad)
lods
ins
lock
add
sahf
jmp
or
rep
outs
fst
shl
in
int
outs
outs
cmc
fwait
pop
loopne
or
retf
jb
in
scas
mov
add
div
iret
adc
retf
iret
fcomip
ret
sbb
repz
hlt
mov
shl
into
cli
test
retf
jle
stc
ds
out
std
imul
in
std
in
out
cs
(bad)
cli
fdivr
icebp
jge
out
nop
and
test
jb
xchg
mov
test
cwde
cwde
clc
clc
cwde
xor
aad
push
mov
mov
push
jns
mov
pop
mov
mov
sbb
cli
sub
mov
dec
sbb
sub
pop
dec
pushf
cmp
jp
cmp
sti
push
fdivr
dec
(bad)
fdivrp
dec
sbb
jle
retf
or
pop
enter
or
mov
out
xchg
sbb
mov
lods
jb
jge
fs
push
adc
nop
es
push
cli
adc
adc
mov
and
jmp
sbb
add
add
and
in
ror
pop
lods
xor
int
hlt
sub
aaa
pop
cmp
mov
leave
ds
fimul
mov
and
dec
and
out
fmulp
dec
pop
aas
sub
aam
aam
pop
cdq
sbb
jo
sbb
sahf
push
xchg
cwde
cmp
adc
dec
lock
dec
inc
xchg
or
sub
aam
gs
int
cmp
cmp
loop
lods
push
xchg
stos
dec
mov
push
cmps
xor
(bad)
(bad)
ins
pop
dec
xor
mov
mov
int3
(bad)
pop
or
sub
push
aam
mov
hlt
mov
fucomi
jnp
movs
aam
test
into
out
sub
pusha
out
pop
cmp
stc
movs
jne
or
mov
adc
inc
pop
shl
movs
and
mov
dec
into
fdiv
add
sbb
fstp
jne
imul
ficomp
movs
and
dec
fst
mov
or
ficomp
cdq
inc
xor
adc
dec
and
fdivr
dec
mov
(bad)
or
sbb
sub
adc
cmp
sbb
movs
fld
imul
xchg
in
adc
or
cmp
inc
xchg
sub
mov
or
(bad)
jg
popf
ja
jg
cmc
or
pop
fstp
pop
push
dec
push
call
shr
and
cmp
fcom
and
jb
ins
stos
xchg
movs
test
imul
sbb
sub
scas
push
or
and
add
xchg
adc
test
mov
push
je
mov
mov
jle
pop
xchg
loopne
fldcw
enter
push
mov
aam
call
mov
add
outs
fwait
(bad)
call
add
fist
and
test
stos
mov
dec
js
bound
fwait
test
xchg
mov
js
cmp
push
mov
cmp
jp
adc
fadd
mov
mov
retf
cmp
fsubr
push
adc
sbb
lahf
jmp
mov
jae
rcr
ffree
adc
cmp
in
and
ror
push
mov
inc
cmp
sub
push
jmp
jne
lods
jmp
and
jmp
dec
sub
fsub
iret
pop
jbe
xor
jl
rcl
mov
jp
sub
inc
pop
addr16
jp
jp
es
mov
cmc
mov
jecxz
sub
jne
mov
std
mov
test
dec
fdivr
js
ja
and
pop
daa
(bad)
cmp
and
mov
push
jp
daa
jg
mov
(bad)
leave
das
out
jle
out
test
ds
mov
sub
ds
jge
fisttp
clc
in
(bad)
mov
adc
push
mov
or
mov
push
outs
ins
cmp
pop
rcl
addr16
jmp
cmps
stos
jmp
enter
pop
int
ja
fisttp
rol
pop
daa
sub
not
call
popa
jae
imul
push
mov
jmp
cdq
enter
add
sbb
fiadd
jl
jae
loopne
and
push
aam
aam
daa
sbb
dec
sub
test
pop
repz
mov
ja
cmp
aas
fcomp
xchg
ss
jmp
add
push
rol
ins
dec
add
adc
push
dec
jmp
mov
test
jl
xlat
hlt
mov
mov
mov
sbb
xchg
add
push
in
or
stos
in
adc
outs
xchg
or
jp
or
mov
dec
inc
(bad)
scas
ins
repz
clc
adc
xchg
cwde
and
loope
test
jecxz
inc
sub
(bad)
sub
dec
and
or
stos
addr16
movs
das
mov
and
and
add
adc
imul
or
inc
daa
ja
and
sub
leave
(bad)
sub
movs
cmp
fldcw
add
mov
cmp
(bad)
inc
fucompp
xor
int3
arpl
dec
mov
lahf
in
inc
jecxz
int
inc
inc
push
adc
xchg
daa
add
pop
xchg
in
and
sub
stos
(bad)
and
xchg
mov
dec
aaa
mov
push
jo
mov
and
cmps
inc
xor
test
test
mov
mov
cwde
enter
xchg
mov
pop
adc
cmp
aad
inc
js
add
movlps
dec
and
push
lods
sbb
cmp
sbb
dec
outs
mov
push
xchg
sub
test
dec
ins
fwait
add
inc
add
loopne
push
aam
push
aas
imul
lea
pop
ds
push
test
sub
(bad)
xchg
addr16
jmp
add
je
rcr
dec
mov
add
repz
mov
mov
fsub
ret
lods
shr
xor
xchg
mov
test
pusha
pop
push
mov
in
and
xchg
mov
js
mov
jne
movs
outs
mov
add
cmp
pop
(bad)
dec
xor
sti
aam
ret
retf
push
movs
sub
call
mov
jno
retf
cs
or
ds
(bad)
push
outs
mov
retf
in
jbe
mov
sub
push
nop
dec
adc
or
in
cmp
(bad)
out
mov
add
xchg
call
loopne
push
repz
and
ret
adc
or
mov
test
fst
arpl
imul
aaa
cmps
jmp
rcr
sub
or
inc
add
mov
test
inc
mov
adc
pop
les
out
jl
pop
int
test
push
xor
xor
push
mov
xchg
xchg
aaa
and
dec
pop
jo
in
mov
retf
pop
pushf
stc
mov
retf
jnp
jb
dec
dec
rcr
dec
fcomp
xlat
cmp
pusha
dec
loop
outs
mov
movs
aas
in
in
adc
add
rol
push
xchg
cmp
or
add
scas
call
(bad)
jmp
xor
in
inc
cmp
popf
ficomp
inc
inc
mov
sub
push
jnp
aam
xchg
and
push
xor
dec
sbb
fndisi(8087
ss
jns
imul
dec
mov
cdq
xor
mov
sbb
ficomp
lods
mov
add
and
dec
(bad)
mov
stc
mov
or
mov
mov
cmp
jne
jb
or
jl
add
ret
cmp
sbb
sbb
aaa
ret
ja
outs
sbb
std
ss
sub
imul
adc
js
pop
stos
sub
sbb
ret
push
out
movs
addr16
call
pop
xor
dec
out
pop
jmp
lea
test
pushf
loopne
pop
cmp
mov
test
loopne
or
xor
pop
add
ret
scas
add
cmp
leave
pop
cmp
out
fbld
mov
std
jmp
aad
pop
popa
push
add
test
nop
jge
add
in
nop
add
xchg
cmp
(bad)
out
(bad)
push
fistp
(bad)
pop
test
pusha
aad
das
std
aam
dec
add
mov
jnp
clc
sbb
jmp
mov
add
or
jmp
stc
xlat
(bad)
jmp
paddd
std
jle
loope
cmp
fwait
iret
jl
(bad)
pop
cli
inc
lock
push
mov
fucomip
push
lahf
mov
into
arpl
fstp
adc
adc
push
mov
xor
jg
xlat
lahf
(bad)
xor
jge
and
movs
out
stc
(bad)
jg
addr16
ja
pop
call
mov
xor
jne
pop
and
add
jb
ja
ins
(bad)
ja
ja
rol
add
jp
inc
jle
ja
jp
jg
enter
pop
dec
mov
mov
xor
add
xchg
add
addr16
adc
cmps
jns
(bad)
jl
div
xchg
pop
sub
or
jg
xlat
xor
or
jo
clc
jle
enter
jae
cmp
aaa
jne
idiv
es
mov
push
pop
mov
xor
add
jo
jmp
loopne
sbb
loop
je
sub
mov
jnp
jl
pop
jne
aaa
add
inc
xor
rol
xor
aaa
jle
pusha
add
add
pop
push
jp
ja
adc
add
fbld
dec
mov
bswap
jne
mov
or
mov
mov
jae
mov
sahf
pop
jle
les
daa
jp
enter
xchg
jl
test
fwait
add
xchg
mov
sub
nop
mov
cwde
add
adc
ror
add
mov
jg
js
test
pusha
fsubrp
(bad)
xlat
mov
enter
imul
lea
dec
or
jle
sbb
mov
fstp
fbstp
add
mov
xchg
xor
inc
pusha
xchg
or
retf
enter
mov
or
or
pusha
xchg
aas
cwde
jl
jns
outs
daa
xchg
add
xchg
inc
mov
jns
sub
lea
fs
pusha
add
mov
and
xchg
cmp
pop
jmp
mov
mov
mov
sbb
retf
dec
xchg
psubusw
xlat
mov
xchg
or
xchg
sbb
add
(bad)
xchg
pop
mov
push
stc
nop
xchg
xchg
dec
mov
retf
sbb
push
inc
mov
xchg
clc
xor
jo
xchg
xor
xchg
or
add
in
in
test
xchg
cmp
add
add
leave
aaa
and
retf
or
mov
ins
cmp
cmp
push
je
loopne
pop
paddd
xchg
pop
leave
xchg
and
stc
ja
cmp
jns
(bad)
xchg
or
dec
xchg
aas
sub
test
shl
sbb
or
leave
outs
inc
or
imul
add
sbb
cdq
pushf
retf
xor
pop
jo
dec
sar
cmp
sbb
sub
jns
push
or
xchg
mov
mov
mov
test
add
xchg
jnp
lahf
jnp
add
push
sahf
add
xchg
sbb
xchg
dec
mov
fcom
mov
or
jns
sbb
lea
jmp
push
mov
pop
fwait
or
xchg
dec
mov
rcr
mov
dec
xchg
clc
sub
fst
mov
mov
xrelease
fnstcw
add
sbb
xchg
mov
pop
mov
fld
repz
cmp
enter
nop
fdivr
push
cli
movs
cmp
xchg
in
mov
pop
sbb
js
movaps
xchg
mov
sbb
inc
enter
mov
dec
xchg
adc
mov
imul
add
addr16
js
push
call
xchg
xchg
push
cli
xchg
pop
stc
xchg
test
mov
cli
xchg
push
leave
xchg
sub
test
nop
mov
jle
jmp
mov
xchg
imul
repz
dec
shl
popf
mov
cmps
retf
mov
push
jp
mov
imul
test
mov
cli
cmps
shr
ror
mov
stos
jp
jae
sub
jo
jb
stos
lods
or
cmps
mov
add
fwait
add
dec
lods
sbb
xchg
mov
stos
mov
lods
push
add
stos
xchg
ficomp
dec
movs
sbb
or
cmp
mov
stos
xchg
scas
stos
cwde
fsubr
xchg
xor
sets
fst
test
dec
dec
cmps
adc
test
inc
cmp
call
test
jmp
xor
mov
fidivr
mov
nop
call
jp
mov
xchg
pop
cmps
dec
call
cwde
sti
stos
mov
sbb
mov
ss
test
or
popf
adc
stos
sbb
mov
mov
cmp
cmp
(bad)
fisttp
cmp
push
xor
lock
mov
imul
cmp
fcomp
adc
mov
pop
mov
mov
mov
mov
mov
retf
mov
or
sub
pop
xchg
xchg
jmp
mov
xchg
or
pop
mov
or
loopne
loopne
mov
jmp
scas
jae
cmps
icebp
imul
xchg
sbb
popf
dec
retf
mov
dec
xchg
mov
test
sbb
mov
or
nop
inc
push
jo
retf
retf
nop
adc
mov
or
rol
mov
or
dec
mov
push
add
shl
test
jmp
jb
ret
daa
or
or
cmp
(bad)
mov
mov
or
jl
cmp
retf
mov
sbb
ret
sbb
sub
stos
cwde
pop
mov
icebp
or
ins
mov
inc
add
dec
add
ret
mov
sbb
in
scas
xchg
mov
jmp
jo
pop
adc
fnstcw
cli
or
int3
mov
lods
xchg
fwait
imul
add
or
cmp
mov
or
push
mov
jo
sbb
mov
mov
out
retf
lock
in
add
(bad)
push
mov
stos
mov
mov
pop
ins
mov
cmp
(bad)
dec
stos
mov
mov
cld
int3
push
mov
adc
int3
(bad)
inc
cmp
push
fwait
ret
sbb
cmps
fwait
stos
lds
inc
pushf
stos
movs
pop
lods
addr16
int3
iret
dec
ror
push
sti
ret
mov
shr
retf
int3
inc
add
retf
mov
(bad)
xchg
pop
add
int3
into
inc
retf
iret
(bad)
cmp
(bad)
stos
fwait
loope
retf
lds
mov
push
lods
pop
mov
or
jg
lds
enter
enter
cmp
cwde
loopne
jmp
ror
sub
mov
retf
ret
add
std
ret
into
pushf
mov
jl
push
mov
imul
or
mov
jg
sub
ret
out
cld
ret
push
in
aam
mov
fwait
pop
aam
sbb
pusha
mov
xor
iret
dec
std
enter
sub
retf
aas
mov
sub
int
mov
mov
xchg
arpl
(bad)
(bad)
int3
ror
(bad)
ja
shr
jle
xlat
dec
or
mov
mov
sbb
add
sar
mov
jnp
mov
dec
leave
push
cld
lds
fadd
fcomp
aam
mov
add
retf
push
retf
mov
mov
mov
fsubr
mov
sub
pop
sbb
jl
dec
mov
or
arpl
int3
retf
mov
int3
aad
lods
into
test
ret
fisttp
xlat
lods
into
sub
in
sub
push
std
int3
mov
ret
sbb
mov
into
or
pop
or
mov
and
ficomp
lock
mov
(bad)
fstp
(bad)
mov
lods
jge
cmc
or
ja
fidivr
pop
fcmovb
cmp
cmps
cli
int3
(bad)
mov
gs
cwde
or
fwait
dec
ficom
mov
fcmovnu
fistp
fwait
mov
cwde
inc
add
cmp
push
fneni(8087
(bad)
xchg
cli
jecxz
or
lods
jge
dec
fsubp
idiv
test
popf
fidivr
(bad)
in
dec
fst
ins
ficomp
outs
in
into
jecxz
jle
sub
in
scas
mov
lods
jecxz
ds
imul
out
sbb
aam
in
(bad)
fst
loope
fsubp
out
fcomip
lods
aad
pop
fmul
jecxz
pop
in
push
(bad)
fisttp
(bad)
out
cs
ds
(bad)
fisub
mov
or
inc
ins
fistp
mov
and
push
out
(bad)
imul
bound
xor
xchg
add
jecxz
faddp
pop
cmps
pusha
adc
mov
xlat
or
in
mov
dec
dec
loope
dec
jmp
out
out
pop
jmp
das
cmp
adc
cmp
jecxz
scas
leave
dec
int
fistp
(bad)
movs
scas
jmp
fisttp
cwde
jle
jge
aam
sbb
(bad)
mov
xor
call
(bad)
in
fidivr
sar
loop
(bad)
cmp
in
xor
in
pop
jmp
ds
int
push
outs
in
dec
fidiv
jmp
outs
in
(bad)
jge
add
xlat
dec
add
dec
xor
dec
jmp
jg
scas
push
fisttp
add
pslld
jmp
mov
mov
dec
out
(bad)
dec
cmp
and
repnz
outs
lock
mov
pop
shl
and
(bad)
xor
out
mov
out
outs
out
or
jmp
pause
mov
adc
(bad)
sbb
out
dec
repz
pop
jmp
jg
in
push
icebp
dec
dec
repnz
inc
push
out
hlt
out
out
fimul
repz
in
push
hlt
(bad)
fsubp
ja
not
dec
bnd
xlat
adc
in
xchg
cs
pop
cmp
fsubr
sub
hlt
push
mov
aas
iret
push
sub
push
(bad)
pop
cmc
dec
fucomip
(bad)
pop
not
in
stc
scas
(bad)
fwait
outs
out
iret
stc
dec
dec
idiv
out
aam
out
clc
mov
fmul
fmul
cli
xor
out
jne
repz
in
dec
(bad)
cli
(bad)
sub
xor
hlt
pop
lahf
loopne
dec
cld
arpl
sti
push
lahf
test
cmp
into
ins
psrld
psubq
jg
ins
lahf
mov
(bad)
cmp
cld
dec
jo
ins
jg
dec
pop
sti
dec
(bad)
cld
popf
pop
jecxz
out
jmp
mov
push
out
xlat
addr16
fnstcw
hlt
dec
div
pop
add
sbb
xchg
sub
mov
cwde
xchg
add
xchg
mov
movs
pushf
add
stos
fwait
xchg
or
fwait
xchg
xchg
pop
add
mov
mov
mov
test
movs
add
mov
fdiv
call
retf
fld
mov
out
les
hlt
xchg
or
cmp
mov
pop
xchg
push
mov
adc
nop
cwde
mov
mov
mov
pop
adc
aam
push
std
and
and
mov
lock
mov
lods
mov
jno
mov
cmp
xor
push
test
xor
push
mov
popa
push
shl
das
add
add
push
cwde
mov
shl
push
test
mov
jae
shl
leave
stos
xchg
(bad)
xor
shl
pop
test
sbb
xor
dec
cmp
icebp
sbb
outs
sbb
adc
adc
hlt
ror
adc
lds
repz
pop
outs
es
mov
add
mov
test
je
test
jl
jno
dec
shl
jp
jmp
lahf
ret
cmp
mov
jo
outs
cmp
aaa
je
jbe
icebp
into
pop
imul
dec
sbb
popf
and
inc
aam
jl
inc
adc
dec
adc
popf
pop
sahf
ins
hlt
adc
dec
enter
add
inc
xor
xchg
frstor
cmps
xlat
xor
sub
inc
shl
mov
ret
xor
in
loope
adc
(bad)
pop
aam
arpl
push
out
mov
test
xchg
sbb
enter
ss
mov
test
xor
adc
sbb
cmps
cmp
mul
sub
push
and
xchg
xchg
xchg
inc
xor
cmps
in
outs
push
xchg
movs
adc
dec
bound
or
inc
push
and
and
pop
and
loope
adc
add
inc
(bad)
xchg
push
dec
test
call
inc
movs
push
dec
or
test
and
cmps
xchg
mov
stos
test
inc
call
scas
arpl
jb
lods
sub
icebp
sub
xchg
push
jmp
lods
retf
stos
mov
mov
dec
stos
adc
iret
inc
aam
stos
mov
cmp
out
test
push
shl
nop
push
jmp
mov
ss
rcl
xchg
push
cmp
outs
stos
mov
and
jns
sbb
loop
test
pop
lods
movs
lods
out
mov
lods
clc
ss
mov
adc
movs
stos
loop
and
mov
fisubr
mov
or
retf
pop
add
out
and
rcr
adc
lods
jl
retf
ins
mov
xor
repz
xor
dec
inc
inc
sub
push
mov
std
jae
repz
adc
repz
mov
es
mov
or
add
std
jb
inc
sbb
dec
mov
ins
add
test
jbe
stos
call
mov
push
rcl
jae
push
sbb
adc
std
adc
jnp
fdiv
cmp
imul
add
inc
fild
mov
and
adc
mov
jle
out
paddd
cmps
scas
fidiv
pop
push
cmp
mov
mov
sahf
cld
repnz
fdivrp
and
xchg
pop
jl
dec
push
fcmovnu
jnp
(bad)
retf
mov
mov
psllq
mov
out
mov
out
lea
out
je
dec
sub
sbb
sub
sbb
std
stc
fistp
push
mov
jns
imul
add
pop
add
dec
or
xchg
scas
jg
repz
clc
call
or
add
push
inc
jg
inc
loope
adc
stos
dec
inc
add
dec
xor
inc
dec
xor
ret
pop
mov
pop
mov
or
or
push
adc
stos
and
arpl
test
test
inc
mov
mov
cmp
push
icebp
mov
pop
inc
xor
mov
(bad)
and
call
test
mov
xor
jno
jecxz
pop
stc
xchg
xor
inc
inc
(bad)
push
or
adc
inc
mov
arpl
leave
rol
test
leave
rcr
adc
push
xchg
or
mov
xchg
test
gs
imul
adc
cs
dec
pop
xchg
jb
loope
in
xor
nop
xchg
enter
xchg
cmp
gs
cdq
shl
movs
cdq
retf
jb
rcl
and
fstp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
sub
jo
mov
mov
pop
pop
pop
xlat
xchg
mul
adc
sbb
test
test
enter
xor
fadd
fisub
cmp
imul
adc
inc
popa
popa
fiadd
mov
lea
pop
outs
jo
xchg
or
mov
pusha
and
push
int3
xchg
(bad)
movs
xchg
gs
in
push
rcr
mov
mov
pop
ret
mov
lds
and
pop
iret
adc
mov
lods
lods
dec
jmp
xor
sbb
push
and
mov
push
jmp
in
dec
ss
lea
jmp
aaa
mov
mov
ja
sub
push
pop
mov
inc
nop
in
js
lock
push
(bad)
mov
pop
dec
fsubrp
mov
scas
jb
retf
pop
jmp
je
div
fdivrp
stos
aaa
add
ss
jl
fwait
pop
mov
xchg
ret
jo
leave
sti
loopne
jb
shr
loop
out
mov
inc
sbb
repnz
mov
pop
or
rcl
xor
jp
mov
outs
scas
cmp
or
js
adc
add
retf
mov
dec
js
arpl
push
in
mov
mov
xchg
icebp
mov
pop
cmp
rol
or
leave
dec
push
add
jmp
jno
pop
sbb
mov
push
adc
ret
fld
ffreep
sub
nop
jnp
add
pop
xchg
or
mov
inc
sub
mov
fidiv
mov
sbb
mov
pusha
mov
minps
pop
pop
or
or
(bad)
cmp
xlat
lods
jb
loopne
in
mov
lock
and
gs
xlat
pop
(bad)
adc
fmul
mov
mov
cmp
mov
mov
retf
jo
mov
jns
scas
inc
xor
call
test
and
jmp
mov
inc
dec
add
iret
fcom
push
fidiv
adc
jns
mov
shr
(bad)
rcl
test
out
or
sar
add
mov
ror
ins
div
jle
mov
lods
xor
retf
ins
or
mov
scas
xor
sahf
jl
ret
or
mov
loopne
xor
pop
cs
push
inc
sbb
fnstsw
fimul
mov
adc
cli
in
scas
in
adc
std
loop
push
mov
dec
mov
mov
sar
out
shl
sbb
push
jg
out
xor
sub
cmps
(bad)
mov
xchg
rol
mov
cmp
fld
and
pop
ins
mov
push
pushf
into
aaa
adc
mov
sbb
xchg
lahf
cmp
sub
push
fdivrp
mov
js
and
out
jle
and
mov
xor
aaa
sbb
(bad)
xlat
jmp
popf
fidiv
stos
jecxz
out
adc
in
adc
mov
out
pop
sbb
loope
and
(bad)
push
pop
fsub
in
pusha
push
idiv
xchg
xor
pop
aaa
mov
mov
(bad)
clc
push
cmp
lods
scas
jl
icebp
push
and
call
or
cmp
arpl
jp
push
ins
add
outs
xor
jae
push
push
ins
mov
jg
xor
jecxz
pop
cmp
add
sbb
rol
cmc
mov
xor
cmp
jg
xlat
outs
shl
dec
inc
jle
aaa
add
imul
arpl
add
push
sub
aaa
inc
add
shr
(bad)
push
rol
jge
js
aam
and
jl
pop
adc
xor
adc
inc
jge
inc
add
cmps
pop
push
push
outs
loopne
jg
aaa
bound
mov
arpl
ins
cmps
add
imul
daa
xchg
xchg
(bad)
jg
pop
xor
dec
call
or
jns
jne
(bad)
add
clc
jp
sub
idiv
addr16
cmp
xchg
imul
mov
data16
cmps
jne
cmps
jno
test
pop
push
and
inc
xchg
cmp
sbb
push
mov
pop
movs
pop
jl
clc
jnp
gs
aad
push
cmp
ja
xchg
push
mov
or
arpl
push
mov
jo
add
jl
push
fs
test
nop
jl
test
retf
aad
mov
push
jbe
(bad)
push
pop
outs
cmp
je
out
scas
js
jae
xchg
jp
pop
push
mov
push
adc
mul
out
outs
inc
add
aad
scas
mov
mov
add
pusha
dec
push
push
(bad)
jbe
push
pop
push
jg
pop
fwait
push
pop
dec
or
push
jge
push
mov
jae
jbe
(bad)
jl
xchg
pushf
(bad)
push
pop
ins
lea
push
aaa
(bad)
jmp
xchg
or
outs
sahf
xchg
outs
and
xchg
jl
xchg
dec
add
xlat
jb
mov
ss
imul
adc
jnp
imul
xchg
jb
dec
ja
mov
mov
ins
jne
not
jns
pop
(bad)
and
xchg
leave
(bad)
add
cmps
pop
xchg
cmps
pop
and
imul
adc
movs
jne
add
inc
pop
ins
sub
ins
mov
jns
xchg
xchg
pop
cmc
pop
xchg
test
jle
add
test
mov
mov
cwde
ja
fsubr
and
aaa
nop
dec
inc
adc
ret
push
xchg
mov
inc
nop
mov
jp
fnstenv
jne
mov
pusha
ror
push
gs
call
pop
push
sbb
pop
pushf
push
jns
mov
cdq
jae
add
jns
pop
xchg
mov
test
jecxz
jg
mov
nop
es
fst
cmps
test
mov
and
repnz
mov
test
test
call
push
arpl
pop
dec
cmp
cmps
jo
cmps
xchg
pop
imul
mov
retw
cmp
jne
fmul
jge
jbe
mov
push
push
pop
push
call
jmp
pop
dec
add
jbe
ret
mov
arpl
push
and
add
ss
gs
dec
mov
push
xor
ins
call
add
add
movs
gs
dec
jp
inc
pusha
add
movs
bound
cmps
fs
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
loop
je
je
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sub
sub
stos
lods
sbb
sbb
repnz
jl
jl
cmp
push
or
pop
pop
or
add
call
int3
ins
data16
adc
fcmovu
je
ins
xor
sub
scas
lods
test
inc
ds
mov
in
mov
cld
fs
pop
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
cmp
xor
push
pop
pushf
xchg
pushf
(bad)
fsubr
sub
sub
scas
lods
and
and
jle
cmp
cmp
push
or
call
test
(bad)
mov
es
cmps
movs
in
in
jbe
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
into
int3
ins
data16
sbb
sbb
(bad)
je
je
cs
scas
mov
jle
inc
ds
mov
in
out
in
mov
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
movs
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
push
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
arpl
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
cmp
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
xor
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
xor
scas
pop
nop
add
scas
adc
test
or
retf
aaa
mov
sti
add
jp
dec
nop
mov
retf
xor
and
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
xor
lods
out
dec
mov
dec
mov
stos
mov
jmp
mov
mov
fiadd
sub
add
jnp
ds
xor
sahf
pop
mov
imul
shr
dec
dec
mov
jnp
push
mov
fwait
add
pop
add
(bad)
lods
and
mov
cmp
jo
pop
add
jnp
or
fucomip
mov
sar
sub
sbb
or
jmp
out
sub
add
stos
sbb
sub
or
sbb
mov
fwait
mov
dec
lods
mov
mov
imul
mov
push
add
mov
pop
sti
add
(bad)
jp
add
mov
mov
lock
rol
mov
imul
jecxz
nop
out
dec
lods
xchg
imul
mov
fwait
mov
dec
mov
retf
add
nop
add
pusha
mov
retf
mov
cmp
mov
fistp
mov
sub
iret
mov
mov
xchg
push
or
icebp
fwait
ja
(bad)
sbb
add
stos
out
sub
inc
mov
nop
add
add
ret
and
lock
push
add
push
nop
add
les
add
sbb
inc
dec
les
add
sub
add
mov
add
add
dec
dec
les
xchg
lds
les
les
cld
kunpckwd
pop
pushf
add
add
cld
scas
inc
push
ret
(bad)
data16
fdiv
mov
rol
pop
mov
jne
lds
lds
les
mov
enter
pop
cld
(bad)
arpl
retf
add
xor
push
and
ins
add
enter
mov
add
mov
out
push
xor
inc
jmp
retf
add
rol
nop
retf
retf
or
inc
jmp
lds
push
pop
dec
retf
xchg
retf
int3
add
retf
retf
int
mov
retf
out
or
(bad)
cmp
fstp
or
leave
fmul
mov
int3
stc
mov
xor
push
jo
mov
retf
add
iret
clc
sbb
pop
mov
xor
add
add
ror
cmc
in
add
or
or
ror
iret
add
adc
iret
fnstcw
or
leave
int3
rcr
lods
iret
test
iret
xor
ror
sbb
sar
rol
loopne
add
out
js
jp
into
xor
into
enter
lea
dec
shl
rol
stos
test
int3
in
cmp
or
rol
shr
(bad)
int
or
inc
int
sub
rcr
xchg
hlt
mov
dec
(bad)
int
ins
aad
sbb
sahf
mov
pop
lods
ror
int
dec
rol
rol
add
stos
add
daa
jge
add
inc
pop
add
iret
cs
mov
aam
jge
(bad)
in
add
sbb
push
cmp
ins
mov
push
popf
fincstp
cld
xlat
adc
mov
fst
retf
fcomp
mov
popf
rol
ins
shl
retf
aam
fstp
push
fst
mov
mov
popf
rol
lods
fnstcw
(bad)
pop
sbb
jmp
mov
xchg
sbb
ror
or
sbb
ror
popf
int3
mov
int
popf
(bad)
mov
aad
rcl
popf
int3
pop
int
push
std
fidivr
int3
(bad)
ins
fcmovne
mov
cld
cmp
stos
std
(bad)
sbb
push
cmp
sub
ja
loopne
int
imul
inc
jge
repz
adc
fcmovu
fidivr
loope
dec
ror
loop
lods
fisttp
loopne
(bad)
mov
(bad)
mov
push
(bad)
dec
lods
fimul
loope
lea
nop
add
(bad)
ins
int3
xor
shl
ror
add
loopne
push
ficom
cs
in
add
and
popf
fnstcw
loopne
mov
xlat
std
fimul
loop
lods
jecxz
cmp
pop
outs
shr
int
pushf
mov
sub
retf
loope
int
jbe
loopne
ds
fucom
sbb
pop
shl
aad
int3
(bad)
popf
fsub
in
mov
stc
fst
in
cmp
sbb
repz
out
jle
ja
fistp
in
(bad)
jp
add
sti
add
cs
sub
cmp
loop
(bad)
shl
jl
dec
inc
stos
jmp
dec
call
mov
mov
jmp
(bad)
clc
fucom
imul
iret
fsubrp
sub
rol
lods
cmp
lds
in
push
out
jo
cwde
or
retf
sahf
out
fst
ins
push
in
sub
addr16
aad
out
jl
shl
(bad)
pushf
jecxz
into
fld
in
jbe
lock
pop
call
jg
sub
jecxz
lods
(bad)
ins
out
popf
jecxz
cmp
(bad)
into
fnstenv
out
retf
inc
inc
stos
mov
lock
fsubrp
clc
inc
int
stc
int3
add
mov
mov
call
aas
stos
push
xor
mov
add
fsubrp
xchg
mov
mov
shl
or
add
mov
add
int
jmp
rol
loope
sidtd
jge
mov
fild
aad
cs
mov
out
cld
dec
in
ins
fist
icebp
xlat
in
repnz
ins
(bad)
loopne
mov
fs
out
pushf
fstp
bound
fisttp
sub
lea
in
aad
fcomip
scas
dec
in
scas
clc
or
aam
test
fisttp
dec
sub
mov
hlt
sub
jmp
mov
mov
add
nop
repnz
outs
div
hlt
mov
cli
inc
add
dec
ins
hlt
jo
hlt
dec
(bad)
mov
stc
cmp
ror
push
outs
icebp
or
fisub
leave
aas
cmc
call
das
stos
mov
hlt
lahf
aas
clc
push
lods
loop
aas
hlt
test
sti
or
call
dec
(bad)
out
retf
fimul
cld
loop
sti
in
aas
add
fsubp
daa
out
retf
push
(bad)
mul
inc
jb
shl
test
jecxz
inc
sub
sub
js
stc
cmp
imul
jns
sbb
fdivr
jp
add
cmp
mov
jmp
cli
xor
dec
imul
jp
fnstsw
dec
jmp
mov
jmp
sub
sub
(bad)
mov
pop
pop
dec
sar
dec
repnz
add
mov
(bad)
push
xchg
inc
pop
pop
cmc
or
xor
sbb
jle
(bad)
mov
and
test
out
xor
or
(bad)
aam
ja
sub
push
or
lds
je
test
push
jecxz
mov
rol
mov
(bad)
push
loope
or
stc
scas
sub
cmp
cs
push
cdq
pop
(bad)
(bad)
or
cmp
fldcw
out
push
ja
or
sbb
xchg
xchg
adc
iret
ja
cmp
add
sub
fnstenv
sub
into
ja
inc
lds
pop
(bad)
jae
outs
(bad)
or
adc
push
cmp
out
sbb
mov
ror
cwde
out
shl
xlat
mov
and
into
mov
mov
retf
push
call
addr16
sbb
adc
sub
mov
add
jnp
mov
jns
cdq
pusha
jmp
repnz
(bad)
dec
in
leave
adc
or
jo
imul
mov
(bad)
xor
pusha
sub
xchg
lahf
xchg
add
push
mov
leave
or
jle
adc
outs
mov
loop
(bad)
ror
xchg
(bad)
(bad)
and
add
add
(bad)
mov
or
bound
fwait
outs
xor
push
dec
add
jecxz
sbb
dec
mov
mov
mov
pop
bound
xchg
popa
fisubr
pop
in
and
push
dec
arpl
xchg
and
out
cmp
ss
mov
sahf
pop
in
cdq
xlat
mov
mov
mov
pop
(bad)
xchg
jae
mov
xchg
gs
lea
pop
add
jb
jecxz
adc
jmp
addr16
fs
test
or
add
arpl
jl
or
add
xor
int
inc
xor
pop
or
mov
mov
jl
fsub
cmp
mov
xor
sub
mov
gs
xor
jns
lods
jecxz
adc
sub
sbb
stc
in
dec
mov
jae
ins
sbb
les
push
lods
mov
aam
dec
cmps
add
pop
cmps
mov
mov
xor
add
push
cli
pop
add
(bad)
cmp
cld
scas
ret
(bad)
adc
fs
xor
push
loop
dec
(bad)
in
jae
out
pop
cwde
ds
pusha
(bad)
cmps
adc
jmp
lahf
mov
jns
mov
mov
mov
into
fldcw
fwait
mov
lock
jmp
xor
mov
add
push
iret
jg
jb
mov
lds
stos
cmp
push
mov
mov
cs
push
mov
sub
iret
inc
xchg
dec
and
stos
sub
retf
inc
mov
loop
inc
push
sbb
imul
jg
loop
jmp
sbb
cmp
out
pop
cmps
jp
jecxz
repnz
xor
cmp
fnsave
mov
dec
or
inc
popa
cmp
out
loop
mov
aas
mov
rcr
test
repnz
adc
pusha
(bad)
mov
adc
imul
and
faddp
mov
in
jb
repz
retf
(bad)
inc
lock
mov
cmp
call
adc
test
add
sbb
add
lods
or
and
push
(bad)
sar
ror
or
cld
xchg
in
sub
popf
sbb
add
sbb
and
dec
xlat
mov
clc
xchg
popa
xor
nop
jl
jmp
mov
push
adc
push
leave
xor
test
xor
fcom
jle
sbb
iret
mov
lea
and
rcl
lea
enter
es
lds
mov
push
xchg
ret
shl
mov
shl
fld
out
jae
int3
bound
out
popa
popf
shl
cmp
mov
lds
dec
(bad)
mov
ret
out
inc
or
add
mov
in
ins
pop
sub
loope
rol
or
mov
xchg
and
or
outs
jbe
(bad)
xor
mov
scas
(bad)
stc
and
enter
mov
and
mov
mov
cmp
iret
imul
xor
ret
cmc
add
sti
jo
mov
int3
adc
cld
sbb
popf
or
sub
jnp
mov
pop
adc
xor
in
int3
xchg
mov
iret
jns
mov
ror
dec
call
sbb
and
outs
pop
sub
(bad)
je
mov
pop
add
xor
add
lahf
popf
adc
pop
pop
iret
mov
je
sbb
repnz
call
dec
mov
xchg
fst
imul
sti
pusha
add
movs
xchg
bswap
and
xlat
fnstcw
xchg
sahf
cld
sbb
or
mov
mov
aaa
stc
adc
je
sbb
pop
ret
ss
jle
int3
jmp
imul
dec
inc
add
sbb
inc
cmp
stos
jbe
addr16
add
mov
xchg
jge
pop
in
push
dec
data16
mov
adc
pop
iret
xchg
hlt
movs
ror
gs
push
or
mov
aas
push
jmp
in
data16
add
push
cmp
push
mov
rol
icebp
sub
xchg
adc
push
(bad)
stos
aaa
lods
inc
gs
push
add
mov
cdq
dec
iret
clc
jle
add
adc
mov
mov
sbb
push
mov
xlat
jp
add
test
adc
add
inc
js
popa
lods
stos
daa
pop
jmp
add
xchg
(bad)
sub
fidiv
push
cmps
xor
push
mov
jbe
test
js
sub
outs
jno
fcmovnu
fcom
mov
xor
(bad)
mov
fisubr
(bad)
aad
(bad)
lock
mov
popf
addr16
mov
mov
lods
rcl
shl
mov
push
lds
jb
movs
adc
repnz
add
sbb
arpl
ror
sbb
sahf
neg
adc
mov
pop
call
scas
xor
cld
mov
mov
aas
cmp
shl
imul
mov
stc
dec
in
dec
mov
jge
mov
dec
lods
fiadd
fist
and
(bad)
out
call
cmp
pop
pop
jns
dec
cwde
inc
mov
xor
fxch
data16
shl
ss
fnop
neg
out
ins
aaa
imul
push
fidiv
cmp
(bad)
xlat
leave
outs
mov
adc
add
retf
or
std
std
ss
rol
mov
mov
loope
ins
outs
rcr
or
out
mov
das
jnp
mov
mov
jp
test
jnp
je
rcr
pop
ret
cmp
loope
pop
cmp
inc
mov
mov
enter
sbb
cmp
js
jnp
loopne
iret
call
into
ins
xchg
dec
jl
xor
mov
lahf
xchg
cmp
lock
std
mov
lds
cmp
je
fisttp
shl
(bad)
clc
push
lahf
pop
cmc
and
add
(bad)
(bad)
push
add
ins
ja
(bad)
push
test
hlt
jp
push
out
pop
cmps
cmps
cmp
retf
imul
loopne
push
mov
add
mov
add
mov
daa
cld
or
in
les
icebp
xor
ret
mov
jmp
je
cmp
mov
mov
dec
mov
das
clc
in
in
mov
jle
ret
addr16
in
inc
jl
xchg
rol
outs
pop
std
(bad)
and
ja
mov
hlt
js
js
jne
push
fsubr
repz
jne
mov
test
scas
mov
mov
mov
imul
pusha
adc
cmp
mov
div
imul
pop
call
nop
push
jp
fstp
in
(bad)
ja
pop
jp
mov
mov
jge
ja
xchg
xlat
jg
mov
scas
inc
jl
daa
add
aam
add
xor
add
sbb
add
inc
add
or
sbb
adc
add
jp
cmps
jp
pop
or
jl
out
sub
je
pop
test
mov
ja
test
fdiv
push
stos
inc
jns
out
xchg
pop
add
and
push
mov
lock
sbb
imul
sbb
xchg
sbb
sub
sbb
inc
test
and
dec
out
cmps
cmps
add
xchg
and
jg
push
xchg
mov
add
push
add
add
mov
adc
sub
push
xchg
cmp
mov
jmp
jbe
pop
xchg
dec
inc
pop
or
add
jns
pop
js
or
pop
inc
or
mov
add
pop
ja
cmp
cmp
mov
mov
jbe
enter
add
cmps
add
jne
pop
lea
xchg
ins
dec
lock
add
ja
enter
aam
scas
xlat
mov
sub
mov
ss
pop
mov
add
add
lock
js
sbb
mov
xor
(bad)
retf
fmul
add
imul
pop
mov
or
mov
or
nop
add
dec
es
js
popa
push
xchg
xchg
jns
cmp
cmp
rcr
add
nop
xchg
test
xchg
aaa
xchg
sub
xchg
and
xor
dec
add
pop
adc
pop
pop
push
inc
mov
in
test
sar
pop
aad
test
enter
add
xchg
test
mov
clc
xchg
lea
xchg
leave
xlat
mov
xchg
das
stc
xchg
inc
jns
pusha
jns
push
sub
or
pop
leave
add
sbb
nop
dec
xchg
jge
xchg
mov
xchg
cmp
popa
xor
mov
inc
and
jge
jno
clc
xchg
jae
jl
leave
xchg
aam
cwde
(bad)
dec
sub
jne
fcom
xchg
dec
call
pop
(bad)
pop
push
cmp
xchg
ins
fstp
mov
cmps
xchg
mov
leave
adc
test
add
add
xchg
mov
mov
xchg
and
jge
jmp
xchg
add
gs
cmp
xchg
gs
xchg
pop
addr16
and
jg
lea
pop
xchg
fmul
in
cwde
dec
xchg
test
push
pop
pusha
aaa
clc
test
aas
xchg
push
popf
lea
call
fdivr
dec
imul
jns
leave
mov
cmp
jns
jl
jb
push
pop
daa
xchg
lahf
clc
xchg
sbb
fcomp
cmp
xchg
adc
or
sbb
call
stc
xchg
retf
jns
xor
loopne
add
stos
cdq
cmp
dec
lea
cdq
cdq
pushf
stc
push
adc
jg
or
fisub
mov
imul
pushf
scas
ja
cmps
xlat
movs
cmp
jp
cmps
mov
jmp
pushf
aad
xchg
jno
xchg
jb
add
cmp
mov
sti
push
xor
pop
stos
cmps
push
mov
cdq
jl
stos
mov
fstp
adc
cmp
xchg
movs
jae
mov
cmp
sahf
pop
cmp
lahf
mov
test
jo
scas
mov
or
sbb
test
mov
dec
pushf
int3
cmp
stos
xchg
mov
xchg
jne
xchg
cmp
xchg
dec
xchg
push
jmp
rcr
movs
mov
cmps
pop
cmp
lea
and
xor
cwde
add
lahf
adc
or
stos
movs
cmp
fldenv
test
jmp
xchg
pop
popf
and
mov
pop
xchg
ins
sbb
or
xchg
retf
or
jns
in
dec
es
or
nop
lods
xchg
leave
add
push
sbb
push
cmp
push
inc
mov
pusha
add
dec
lods
(bad)
mov
jg
mov
sbb
adc
lods
std
push
pop
jnp
xchg
or
jp
mov
mov
stos
mov
push
nop
mov
xchg
leave
mov
inc
sub
test
scas
mov
pop
xchg
mov
sbb
jmp
xchg
jl
sahf
gs
daa
dec
pop
lods
scas
sub
fidiv
fisttp
sub
cli
stos
jg
cmps
sbb
aam
add
or
dec
mov
jmp
mov
cli
xchg
or
or
cdq
cmp
retf
add
jmp
xchg
adc
fs
mov
imul
mov
sub
xor
fld
cwde
ret
xor
jle
cmps
aad
mov
or
test
retf
mov
or
or
sbb
jnp
push
retf
mov
or
fnstcw
fwait
lods
mov
mov
fwait
mov
cli
mov
sti
xchg
cmp
or
mov
stos
mov
pusha
stos
aad
mov
cli
test
imul
lods
std
cmp
mov
pop
add
or
scas
stos
test
enter
mov
jne
adc
pop
rol
rol
clc
fwait
movs
mov
inc
ins
pop
xor
inc
mov
ds
ror
mov
and
jb
cmp
jo
(bad)
int3
mov
sub
mov
ins
shl
mov
cmp
jmp
lahf
fistp
stos
mov
fld
(bad)
ror
sub
stos
mov
push
add
(bad)
and
xchg
addr16
nop
pushf
shl
xchg
daa
mov
scas
stos
mov
pop
leave
push
pushf
add
lds
call
sub
adc
shl
mov
js
lock
fld
enter
push
retf
dec
retf
mov
stos
xchg
fild
mov
sbb
mov
mov
mov
(bad)
dec
or
jo
nop
sub
fwait
cmp
sar
push
out
pop
lea
outs
sbb
nop
add
into
push
mov
jns
jne
rcr
adc
retf
ss
xor
mov
pushf
movs
lods
mov
jl
sti
cmp
(bad)
dec
xchg
jo
cdq
scas
cld
int
fld
retf
add
retf
add
adc
stos
loope
iret
add
enter
dec
les
jl
adc
lods
cli
cmp
test
shl
mov
in
xchg
(bad)
sbb
ret
adc
mov
dec
pop
cmp
retf
int
popf
mov
pop
popf
(bad)
int
shl
shl
ins
or
add
int3
retf
shl
rcr
stos
int
jge
jb
mov
push
or
add
prefetch
jns
(bad)
enter
or
or
push
shl
mov
jl
ret
pop
popf
jns
mov
sub
idiv
addr16
rcr
mov
cmp
jge
adc
test
sbb
push
cmps
mov
add
lods
imul
retf
sbb
daa
cmp
jno
fsubr
mov
ds
pop
std
rcr
mov
fwait
stos
aam
lods
ror
pop
shl
int
sar
xchg
lods
call
aam
sub
fwait
mov
mov
fsubr
into
mov
iret
push
cmp
ss
adc
mov
sbb
rcr
ror
rol
xor
ds
push
inc
add
pusha
fsubp
(bad)
(bad)
mov
xchg
fsubr
rcr
sbb
sub
add
neg
test
fisubr
(bad)
sti
jl
shr
neg
add
sti
in
fidivr
aad
mov
xchg
jl
pop
lods
loopne
in
fcmovbe
dec
(bad)
fstp
pop
(bad)
fisttp
sub
xchg
fild
mov
sub
paddusw
mov
enter
ins
aad
jle
outs
mov
add
push
(bad)
fdiv
fmulp
and
sar
icebp
ins
(bad)
sub
ins
fcmovb
in
stos
adc
loop
(bad)
(bad)
push
mov
jo
ffreep
ror
aad
mov
add
fild
xlat
cwde
lods
fisub
frstor
loop
out
fdivr
or
scas
call
loop
mov
add
loope
jle
pop
dec
sar
mov
je
fiadd
fidivr
fsub
dec
xchg
call
or
aad
jmp
scas
rcr
jmp
int
test
pop
jge
dec
outs
fstp
outs
in
push
fist
call
mov
cmp
jecxz
push
jmp
sub
gs
ror
jmp
pusha
add
lock
fdivr
jmp
jg
retf
movs
nop
push
aad
add
mov
hlt
std
rcr
mov
lds
mov
retf
(bad)
jecxz
std
xchg
loope
fstp
loop
jge
and
call
outs
in
ror
push
loope
(bad)
out
push
push
ficomp
jmp
xor
mov
icebp
mov
out
dec
jmp
enter
mov
inc
sahf
fild
lahf
out
mov
loop
jle
mov
in
lods
out
repnz
ds
xchg
dec
in
and
inc
pusha
jmp
dec
retf
or
adc
add
or
jmp
mov
fcom
mov
call
pop
bswap
xchg
nop
(bad)
hlt
pop
jnp
dec
fcomp
call
iret
(bad)
stc
ins
loopne
iret
out
rcr
xor
jmp
bswap
out
add
clc
and
sub
test
bnd
out
jbe
mul
inc
(bad)
out
call
outs
jmp
mov
fimul
aas
repnz
mov
cmc
out
push
fadd
scas
cmc
jns
icebp
movs
out
xrelease
(bad)
test
idiv
test
js
cld
or
test
mov
cmc
jbe
in
cmp
dec
cmc
mov
push
pop
dec
std
fmul
idiv
ret
imul
fdivrp
ins
lahf
mov
aas
std
jmp
iret
in
(bad)
sbb
cmc
rcr
loopne
out
sar
add
sub
sbb
pop
mov
sub
mov
xchg
sbb
add
xchg
cmps
test
lods
lods
cmps
sahf
mov
mov
mov
nop
cwde
popf
xchg
mov
cwde
pushf
mov
test
rcl
fcomp
(bad)
adc
mov
call
mov
scas
test
fwait
jmp
mov
cmps
pop
mov
cmp
in
pop
sub
add
inc
rcl
jle
mov
aad
pop
jmp
inc
add
xor
mov
arpl
(bad)
sub
xor
scas
in
bound
mov
sbb
pop
dec
pop
leave
ficom
xchg
js
mov
ficom
sahf
mov
in
push
push
pop
mov
fwait
cs
test
dec
in
jecxz
push
ins
sbb
leave
push
pop
adc
in
cmps
xor
jge
mov
sub
or
sub
data16
pop
jp
sub
xchg
sbb
mov
mov
(bad)
sub
and
xor
test
sub
cli
enter
fimul
sub
xchg
inc
mov
and
xchg
outs
cmps
pop
in
(bad)
cwde
hlt
fs
xchg
cs
iret
mov
aam
js
(bad)
test
push
xor
xchg
mov
mov
xchg
les
imul
cmp
mov
cmp
or
mov
cmp
push
push
mov
cmc
jne
jb
add
inc
sbb
cmp
mov
add
mov
jne
shl
push
mov
or
dec
sub
sub
push
inc
and
mov
cmp
push
and
adc
xchg
and
in
pop
mov
xor
or
dec
leave
fadd
mov
and
pop
dec
retf
mov
push
mov
add
call
and
and
out
je
fsub
sbb
popa
inc
stc
mov
aam
mov
fldcw
pushf
jg
jo
push
adc
cmps
xchg
(bad)
(bad)
inc
call
test
pop
jne
addr16
aaa
test
pop
rol
pop
sub
jge
xor
lods
stos
call
gs
mov
aam
xchg
les
les
cmp
push
mov
inc
pop
adc
add
and
adc
xor
into
inc
add
mov
bound
mov
inc
jmp
mov
mov
mov
repnz
ins
mov
inc
inc
add
iret
dec
icebp
scas
shl
mov
sti
test
or
cmc
lods
mov
jae
mov
xchg
idiv
out
mul
lahf
movs
add
(bad)
fldlg2
ret
adc
out
adc
or
test
sub
jo
out
retf
inc
ret
cmp
les
jb
inc
xchg
retf
repz
shr
ja
sub
jmp
inc
xchg
popa
or
retf
fcomp
adc
(bad)
and
nop
lods
or
aaa
jl
xor
mov
mov
xchg
fnsave
push
cmp
mov
jno
dec
aaa
add
pusha
mov
(bad)
fdiv
push
xor
mov
pop
lods
test
adc
cmp
lods
aaa
adc
push
stc
fsub
sbb
push
mov
loop
mov
adc
jmp
addr16
gs
adc
jle
ficom
int
stos
enter
in
(bad)
and
out
add
mov
std
hlt
pop
je
jbe
mov
(bad)
jnp
cmp
stc
cli
cmp
cmp
mov
or
mov
or
pop
jb
out
fdivrp
pop
add
jne
jle
push
pop
adc
hlt
mov
lock
dec
xlat
ror
or
push
cmp
cld
sbb
add
push
cwde
xor
sbb
rol
or
pusha
iret
add
jp
or
iret
add
lahf
out
js
test
or
cmc
dec
xchg
xchg
mov
outs
test
pop
movs
jo
and
pop
cmps
and
ret
jo
pop
jo
jmp
jge
xor
out
push
mov
and
jmp
mov
dec
or
test
jno
add
mov
test
ins
pop
outs
add
push
repz
mov
or
jns
inc
cmp
fs
jecxz
push
dec
mov
jb
inc
xchg
push
fistp
and
repnz
leave
mov
stos
mov
test
pushf
pop
cmp
mov
jno
in
pop
cmp
lahf
ins
lahf
or
dec
nop
icebp
(bad)
mov
and
pop
(bad)
push
cwde
les
dec
sbb
or
ror
imul
int
arpl
jge
dec
cmp
(bad)
jb
loopne
loope
test
mov
cmp
fstp
jp
rcr
xchg
mov
lahf
jmp
aas
jecxz
dec
adc
rol
jl
inc
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
sub
sub
dec
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
adc
loopne
popa
mov
fisubr
clc
pop
adc
xchg
lods
movs
mov
push
push
stos
fcmovnu
out
pusha
mov
inc
ins
push
pop
mov
mov
shr
and
mov
popf
add
rol
or
mov
lock
in
xlat
stos
(bad)
in
jb
imul
call
and
pop
(bad)
(bad)
mov
or
out
loope
mov
pop
pop
aad
(bad)
or
(bad)
jo
sub
and
clc
ror
adc
aad
or
push
sahf
ror
cmp
jg
pop
and
ret
out
test
xlat
ret
or
loope
jg
ror
mov
cmp
pop
add
ret
jo
inc
sub
adc
js
ds
mov
pusha
enter
mov
cld
jecxz
xor
fimul
adc
sar
outs
jb
movs
sbb
or
aaa
ret
push
inc
scas
adc
js
adc
data16
xchg
mov
(bad)
fisttp
and
clc
xor
mov
mov
dec
clc
repnz
xor
xor
sbb
and
popf
push
mov
or
inc
adc
or
popa
iret
dec
push
add
stos
stc
mov
(bad)
mov
rcr
pusha
xor
in
cwde
mov
fnstenv
pop
ins
loop
and
cs
sub
test
or
(bad)
jecxz
aas
sar
sbb
stos
inc
loopne
test
bound
clc
or
mov
daa
ins
sbb
sbb
pop
call
lods
out
icebp
mov
xchg
pop
fadd
jae
xchg
int3
xrelease
pop
pop
js
push
sahf
mov
jmp
cdq
sar
cs
pop
mov
mov
push
dec
pop
popa
dec
xchg
sar
mov
add
xchg
mov
mov
(bad)
xchg
scas
jne
add
sub
sub
jl
xchg
jne
(bad)
lods
repnz
stc
fsubr
out
scas
xor
fdivr
in
clc
mov
ds
or
xor
and
mov
cs
pop
cmp
or
jge
repnz
fistp
in
adc
sbb
cmp
cmp
dec
pusha
mov
sub
adc
in
(bad)
mov
push
add
ret
icebp
in
es
mov
ss
out
ins
js
call
or
popf
(bad)
(bad)
jle
je
rol
out
cmp
mov
rol
fisubr
mov
pushf
aam
nop
neg
mov
in
pop
(bad)
cmp
cmp
hlt
xchg
call
clc
push
(bad)
hlt
repnz
iret
add
or
mov
cmp
stos
neg
fnstsw
dec
stc
imul
ja
inc
das
jmp
add
jmp
sbb
cli
iret
push
pop
mov
add
outs
shl
je
gs
gs
imul
mov
ins
mov
addr16
mov
inc
nop
addr16
push
nop
addr16
lea
test
xchg
in
not
outs
xor
jb
push
jl
pop
imul
loop
xor
adc
pop
push
push
nop
imul
add
add
xlat
jb
neg
inc
cmp
call
add
push
test
xchg
xchg
jno
rol
jno
(bad)
pop
add
adc
add
test
pop
dec
fdivr
pop
test
push
aaa
jg
mov
mov
cmps
bound
sub
or
(bad)
add
cdq
push
push
cmps
jg
daa
mov
mov
test
jp
outs
mov
addr16
push
mov
add
clc
jge
sub
clc
or
je
cmp
xchg
ins
in
xchg
or
js
cmps
je
test
add
ins
sar
outs
xchg
push
xchg
data16
addr16
js
cmp
pop
aad
jg
clc
jle
gs
(bad)
jb
add
ins
push
mov
cmp
jmp
pop
rcl
scas
jne
cmp
jg
push
movs
sbb
test
sti
aad
jmp
ins
pusha
jbe
not
lahf
cmp
and
(bad)
out
fistp
mov
jge
pop
ins
push
mov
adc
jne
mul
out
sahf
lds
aad
fbstp
aad
jo
mov
jns
ins
lock
jns
push
xchg
jno
pop
scas
test
push
pop
jnp
jno
push
fld
xchg
mov
or
mov
imul
adc
xor
sbb
mov
jg
inc
jb
xchg
jno
jmp
mov
mov
or
jge
dec
add
xlat
jne
data16
aaa
jp
imul
jno
fdivr
imul
or
dec
jp
mov
mov
pushf
jne
es
jl
pop
xchg
push
daa
xchg
stc
(bad)
test
je
pop
cld
cmps
pop
ret
cmps
pop
push
sub
mov
test
cwde
push
pop
jp
jne
xor
jb
jo
pop
jp
(bad)
jo
ss
sbb
call
outs
sbb
add
xchg
pop
jp
fdiv
and
aaa
xchg
dec
inc
test
data16
nop
lea
jbe
jne
loop
arpl
mov
push
sub
sub
sbb
lahf
ds
call
pushf
mov
fs
(bad)
or
mov
mov
shl
xchg
fst
cmps
mov
mov
push
dec
pop
and
cwde
cmc
mov
xchg
mov
imul
call
cmp
cmps
jae
cmps
xchg
mov
call
(bad)
in
call
repnz
mov
ins
xlat
mov
cmp
push
out
inc
push
bound
outs
sbb
dec
add
ja
repnz
jp
ss
imul
push
sub
stos
sub
es
js
mov
push
fs
imul
jne
cmps
xchg
jbe
js
push
dec
adc
or
xchg
cmp
jp
cwde
call
test
sbb
pop
stos
cmps
jp
test
stos
stos
mov
scas
stos
pop
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
or
cdq
test
or
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
inc
dec
mov
and
jmp
mov
mov
retf
cmp
test
or
cmp
scas
add
popf
pop
fld
pop
mov
mov
mov
imul
(bad)
xchg
jo
cmps
leave
jmp
add
pusha
add
shl
cli
popf
lea
mov
mov
xchg
sbb
stos
mov
sub
sti
mov
cmp
pop
add
add
mov
jnp
neg
mov
mov
dec
mov
sbb
pop
mov
or
mov
mov
(bad)
or
mov
cmp
add
jo
or
lock
mov
mov
arpl
add
sbb
dec
lods
xchg
sti
add
retf
mov
stos
mov
or
inc
mov
jmp
hlt
or
jnp
adc
mov
mov
sti
mov
jl
add
mov
sub
retf
ror
mov
(bad)
cli
mov
pop
mov
lock
(bad)
add
add
pushf
ret
cmp
jp
cmp
sub
add
add
add
lods
ret
cmp
xchg
les
ret
inc
cmp
xor
or
push
mov
add
cld
scas
sbb
pop
mov
jmp
push
mov
dec
ins
add
pushf
add
pusha
les
les
ret
dec
in
mov
les
mov
lds
lds
les
lds
test
or
push
xor
loopne
cmp
mov
inc
add
mov
xor
mov
jo
and
add
xchg
cmp
dec
xor
push
ror
dec
ins
leave
jp
mov
jo
xchg
cmp
jp
retf
mov
mov
lahf
pushf
add
cmp
mov
mov
int3
stc
or
retf
(bad)
mov
retf
mov
retf
add
in
leave
xchg
mov
cld
int
fmul
xchg
pop
leave
xchg
dec
stos
push
adc
mov
into
mov
add
rol
adc
push
push
add
retf
iret
jmp
dec
iret
test
lock
out
int3
out
cld
into
or
retf
retf
bsr
in
lods
mov
std
iret
mov
shl
or
clc
lods
xchg
ins
add
iret
int
movs
sbb
mov
shl
fcmove
adc
ficomp
out
jl
loope
shl
cli
les
jge
adc
retf
loop
sar
or
inc
cmp
and
out
in
iret
cmp
rcl
std
aam
jns
mov
into
daa
(bad)
into
or
add
sub
mov
sub
inc
jge
push
mov
push
dec
retf
cmp
aad
(bad)
aam
mov
mov
retf
into
(bad)
in
aad
sbb
add
in
xlat
and
push
or
in
rol
aam
sub
inc
in
rol
fdivr
int3
sub
xchg
fs
fadd
mov
sub
push
rcl
xlat
xor
shl
fadd
(bad)
popf
or
test
push
popf
aam
mov
push
inc
fadd
xlat
sub
cmp
les
loopne
cmc
cmp
or
call
or
mov
fisttp
sub
mov
iret
cmps
mov
pop
fst
mov
fldln2
sbb
jge
fucomi
sub
xor
sub
(bad)
int
mov
test
rcr
lods
xchg
outs
sar
xlat
mov
int
sbb
mov
(bad)
mov
test
pop
into
loopne
mov
loop
mov
jns
fsubr
pushf
retf
cli
cmp
inc
lods
into
push
jge
pop
jo
mov
(bad)
push
ins
fisttp
loopne
pushf
add
add
fdivr
inc
(bad)
popf
fmul
int
bswap
fbstp
lods
loope
mov
out
in
add
int
sub
or
cmp
dec
dec
jmp
in
mov
movs
fstp
jno
fucompp
mov
sub
add
ret
adc
shr
out
lods
loope
(bad)
sbb
in
push
in
mov
or
fldcw
in
or
sub
push
jle
int
retf
stos
fld
inc
jle
je
rcr
pop
add
jecxz
pushf
add
loope
dec
fsub
loope
push
fidiv
out
push
(bad)
fsub
pushf
or
ins
dec
fistp
push
jmp
mov
jmp
sub
add
out
or
mov
jmp
mov
and
fstp
jmp
mov
loope
outs
out
scas
xlat
jne
loopne
push
out
out
jmp
sbb
repnz
jmp
imul
nop
(bad)
pop
mov
in
into
adc
into
mov
call
fld
int
mov
stos
pop
rol
jne
sar
fstp
call
cld
icebp
mov
add
loopne
fisubr
enter
outs
repz
out
ss
scas
dec
fcomp
jmp
ds
fld
outs
jecxz
jge
fdivrp
repz
popf
sar
cmp
sahf
out
fucomp
ins
fisttp
ror
mov
fmul
jg
in
mov
in
mov
out
popf
hlt
sub
in
sub
sbb
iret
cmps
(bad)
iret
pop
sahf
retf
sbb
inc
lahf
(bad)
call
pop
cmc
or
ds
and
lock
in
xor
in
sahf
repz
xor
loope
out
cmc
sub
add
xor
das
repz
outs
shl
push
cli
push
scas
stc
pushf
mov
ss
imul
lahf
cmc
jo
lock
paddsw
or
sti
ds
sti
(bad)
inc
out
aam
(bad)
in
push
pop
in
add
iret
pusha
psllq
fistp
pop
(bad)
ja
cmc
ror
sbb
retf
int3
mov
xor
push
aad
push
sti
push
stc
jp
in
push
lock
std
out
cmc
xlat
aas
sti
stos
aas
cmc
mov
add
aas
fisub
in
push
mov
sbb
div
lock
and
cwde
xchg
cmc
cwde
aad
mov
mov
pusha
fsubr
inc
dec
pop
adc
fnstcw
mov
mov
(bad)
shr
cmp
test
test
mov
jl
stos
jmp
mov
sub
test
mov
jl
jmp
out
pop
call
ins
sub
stos
jmp
or
lea
ds
(bad)
jmp
or
mov
(bad)
pop
sbb
ins
pop
sub
in
xchg
movs
js
out
cmp
or
cs
in
in
push
nop
inc
push
jl
mov
xor
xor
in
mov
(bad)
adc
xor
cs
push
cmp
adc
jl
mov
and
fcomi
and
sbb
sbb
mov
in
xor
cmps
jne
shl
cmps
int3
add
sub
dec
and
mov
movs
cmp
mov
push
xchg
lods
sub
(bad)
out
fdivr
mov
jge
push
xchg
cmp
adc
(bad)
ins
or
xor
push
push
mov
sub
xchg
aam
inc
dec
inc
inc
jno
aam
rcr
jbe
test
scas
pop
rcl
retf
push
data16
add
movs
mov
div
jmp
pop
fsubr
add
pop
mov
lea
mov
mov
fdivr
xchg
fsub
push
dec
cmps
or
lea
repnz
jns
mov
pushf
mov
dec
and
jbe
push
xchg
push
xor
adc
inc
push
pop
outs
dec
test
les
xchg
repz
sbb
sahf
xor
push
pop
jge
lea
fcom
xchg
add
ret
out
and
jne
mov
mov
and
mov
adc
and
nop
push
inc
aaa
xchg
pusha
push
sbb
xchg
pop
jno
pop
jp
dec
addr16
xor
pop
add
xchg
xchg
cmp
loop
and
in
pop
sbb
push
mov
stc
adc
mov
cmc
xchg
dec
and
pushf
jb
mov
aad
xchg
pop
sbb
sbb
xchg
cwde
not
popa
repnz
pop
and
add
mov
ja
cwde
and
ret
scas
loop
sub
inc
xor
xchg
or
dec
ss
ds
pop
js
xchg
cwde
add
xchg
push
push
(bad)
movs
stc
mov
push
lods
sub
jb
ins
je
es
pop
pop
test
lahf
in
daa
fisubr
xchg
and
popf
cwde
in
(bad)
jmp
mov
daa
pop
and
loop
out
enter
popf
rol
pop
push
xor
imul
and
imul
xchg
outs
cmp
jp
adc
rol
sub
mov
cmp
xchg
retf
stos
inc
adc
sbb
cdq
jmp
cmp
cwde
jecxz
mov
into
cmc
or
jae
dec
pop
or
into
pop
jp
mov
in
test
sub
xor
adc
mov
mov
shl
jno
js
sub
retf
lods
push
fisub
sub
cmc
les
daa
mov
mov
inc
daa
xor
inc
sbb
(bad)
int3
mov
adc
imul
cmp
leave
test
aas
fnsave
cmc
leave
scas
add
dec
ja
mov
in
adc
das
xchg
add
add
stos
sahf
sub
mov
jb
das
mov
iret
and
dec
jl
daa
or
fisttp
(bad)
(bad)
leave
das
fstp
fld
mov
push
dec
xlat
cs
jmp
test
fwait
iret
jge
pop
xchg
or
mov
ror
jle
and
outs
test
(bad)
(bad)
(bad)
cmp
ror
(bad)
push
inc
cmp
mov
pop
aaa
ins
xchg
shr
ins
les
out
sbb
cmp
in
add
sahf
(bad)
fstp
pop
jecxz
ja
jmp
int3
repnz
aas
xchg
lods
dec
pop
mov
call
jo
scas
inc
sbb
cmp
pop
hlt
dec
xchg
adc
stos
rol
sub
frstor
cmps
mov
loope
je
shl
sti
mov
add
push
popa
out
cli
div
adc
dec
ds
dec
mov
sbb
outs
mov
ja
and
jbe
jbe
adc
(bad)
push
xchg
pop
push
popf
(bad)
out
ret
(bad)
xor
lahf
bndstx
pop
and
and
pop
push
jno
sub
and
rol
and
dec
fs
pop
sbb
mov
shl
lods
int3
cdq
adc
enter
test
rcl
pop
pop
retf
out
daa
outs
(bad)
jns
hlt
pop
sub
mov
push
xchg
out
jmp
and
push
cmp
bound
ja
inc
bound
div
(bad)
dec
mov
int
movs
sub
push
bnd
lods
lahf
xor
push
nop
or
cmp
mov
loope
(bad)
into
dec
cld
cmps
mov
fisttp
test
xchg
pop
clc
fstp
out
inc
push
fimul
scas
inc
data16
jle
lods
and
xlat
mov
popa
dec
jns
retf
push
mov
or
pop
(bad)
mov
cmp
std
push
fstp
mov
mov
call
add
ror
sub
add
in
es
jmp
or
dec
icebp
sub
cwde
and
push
mov
cmps
loope
push
pop
jmp
add
dec
lahf
pop
or
dec
jne
jo
add
sbb
inc
mov
stc
or
movs
cmps
jae
cmps
adc
dec
(bad)
ret
jne
dec
inc
out
cdq
retf
stc
mov
addr16
push
cli
adc
cdq
and
mov
es
test
and
mov
enter
xchg
leave
cmp
lds
sub
(bad)
cli
push
mov
xor
mov
push
xlat
lods
ss
pusha
sub
ja
lods
ins
jmp
loope
or
rcr
rcl
int3
add
adc
inc
ja
jmp
imul
or
mov
outs
mov
cmc
or
jmp
cmp
xchg
mov
push
xor
retf
push
repz
mov
lds
pop
mov
mov
dec
fwait
add
mov
mov
mov
adc
outs
mov
mov
mov
cmp
test
inc
movs
sbb
mov
push
nop
add
inc
dec
mov
and
enter
nop
inc
loopne
clc
retf
rcr
ficomp
sbb
les
es
test
dec
pop
repnz
lods
stos
loopne
into
push
int
cmp
in
fcmovne
int3
jno
repnz
mov
fmul
stos
mov
jecxz
ja
sub
repnz
pop
rcr
mov
in
aaa
jp
xor
or
or
push
sbb
add
div
cmps
lahf
(bad)
add
and
test
pop
add
cmp
mov
xor
and
outs
stos
dec
int
fsubr
jne
xor
dec
idiv
mov
mov
or
mov
sbb
ror
adc
lods
(bad)
std
fisttp
sbb
sar
ss
mov
shl
adc
adc
aaa
xchg
fstp
or
cmp
mov
jmp
push
sbb
in
jge
jl
fcmovnbe
repnz
mov
movs
int3
ins
(bad)
sbb
or
ins
jp
jne
push
stos
mov
ins
imul
stos
add
and
mov
fistp
imul
fdiv
(bad)
stc
adc
jb
mov
stc
adc
add
das
jp
xor
jp
jge
hlt
into
stc
int3
push
sahf
je
adc
pop
push
lock
mov
add
or
call
cmc
scas
fistp
sub
cmps
scas
scas
ret
pop
or
mov
sbb
pop
call
xchg
mov
fistp
sahf
(bad)
jae
sbb
aad
dec
dec
lods
pop
fld
inc
enter
sbb
and
dec
mov
mov
xchg
cmp
pop
scas
inc
or
(bad)
pushf
(bad)
ror
mov
xlat
movs
into
not
mov
call
xchg
mov
or
push
cmp
ins
(bad)
cmps
pop
idiv
lahf
add
pusha
dec
cmp
addr16
jb
and
ins
fild
sub
fisttp
sti
fidiv
je
pop
dec
push
add
pop
add
les
stc
aad
(bad)
sbb
or
jo
repnz
jg
retf
scas
jle
cwde
jle
pusha
add
loopne
sbb
shl
jge
xchg
jns
xchg
xlat
jge
xchg
jno
pop
add
jb
mov
daa
jbe
mov
xchg
pop
sub
jg
mov
sbb
out
daa
xor
add
xchg
add
ja
sbb
xor
jp
xor
fcom
lock
inc
and
jg
inc
dec
fidiv
sub
jg
out
jnp
xor
jg
js
(bad)
xor
mov
ja
mov
mov
pop
enter
add
add
add
add
push
je
sub
cwde
jge
push
xchg
jl
pop
jbe
pop
xchg
jae
dec
xor
add
mov
or
add
sbb
div
cmp
or
mov
test
jbe
clc
or
adc
push
xchg
movs
add
jb
sbb
jb
enter
inc
pusha
test
mov
test
outs
pop
mov
push
xchg
push
call
mov
xor
je
ins
or
clc
jnp
enter
mov
shr
xchg
mov
ficom
mov
pop
(bad)
enter
dec
mov
xor
and
mov
xor
dec
push
nop
and
movs
dec
or
cmp
cmp
mov
loopne
dec
and
enter
outs
(bad)
and
or
adc
adc
jg
cmp
sbb
add
jb
xor
test
dec
adc
push
pop
sub
sub
mov
cwde
je
stc
(bad)
xor
pop
stc
xchg
dec
adc
imul
jg
mov
inc
xchg
rol
add
pop
xchg
std
sub
adc
xchg
push
stc
xchg
das
jns
cmp
(bad)
xchg
cmps
nop
xchg
xchg
mov
(bad)
xchg
ja
mov
or
sub
lea
jae
adc
pop
xchg
dec
stc
xchg
ja
xchg
xchg
cmp
mov
(bad)
test
adc
sub
dec
loop
add
xchg
inc
sbb
mov
inc
rol
mov
fiadd
ret
or
mov
imul
mov
outs
mov
nop
and
fld
jo
dec
inc
jge
fmul
mov
test
jno
pushf
in
lea
xchg
xchg
xchg
setns
mov
xchg
pop
or
dec
xchg
sar
popf
jnp
xchg
jo
je
sbb
push
xchg
adc
pop
test
mov
mov
cwde
enter
cdq
call
inc
dec
xchg
mov
xchg
mov
xchg
dec
cmp
or
dec
xchg
test
and
inc
mov
js
out
mov
cli
mov
mov
sbb
cmp
mov
in
xchg
ret
inc
call
cdq
cmp
xchg
sbb
nop
cmp
xchg
call
ror
pop
cwde
pop
leave
xchg
inc
imul
add
pushf
adc
xchg
adc
call
cwde
ja
mov
call
add
jp
mov
mov
imul
lahf
dec
aad
adc
movs
mov
dec
loopne
add
mov
sbb
mov
adc
cmps
pop
fstp
mov
stc
xchg
pop
dec
and
mov
hlt
sbb
push
stc
cmp
fldenv
xor
cmp
shl
stos
push
push
pop
push
pop
cmp
movs
and
fwait
and
movs
jb
xchg
mov
nop
sbb
jb
(bad)
fwait
stc
xor
jo
pop
cdq
add
push
repnz
call
pop
jo
out
sub
test
cmps
mov
fmul
sub
ficom
dec
pushf
mov
lahf
pop
sub
sbb
mov
cli
jp
jl
pushf
lock
ja
push
enter
nop
imul
cmps
sub
cmps
push
fnstenv
jo
cmp
add
mov
or
mov
push
pusha
sub
and
leave
xchg
pop
sbb
push
or
xchg
rcr
jp
scas
mov
cld
sub
mov
xlat
stos
nop
add
mov
retf
pop
mov
mov
popf
rol
mov
rcr
test
pusha
pushf
jl
mov
mov
cmc
xchg
out
test
sub
jp
jecxz
xor
imul
pop
mov
mov
mov
mov
mov
sbb
mov
stos
mov
mov
mov
sbb
mov
push
mov
sbb
pop
xchg
ss
popa
pop
xchg
xlat
jns
push
jmp
out
cmp
loopne
xchg
cmp
(bad)
pushf
push
mov
sbb
cdq
cmps
jns
test
jns
jnp
mov
mov
retf
mov
mov
fs
fwait
mov
mov
mov
mov
push
jb
mov
jnp
lods
jnp
lods
retf
add
add
and
test
in
mov
cmp
cmp
ret
stos
rcl
pushf
sub
mov
cdq
movs
push
imul
or
cld
test
fcmovnb
shr
leave
ret
les
(bad)
mov
mov
jp
sub
ret
add
(bad)
sub
cmp
xchg
jmp
les
mov
ins
cmp
adc
add
fwait
ret
xchg
add
mov
in
test
cmp
or
add
cmp
pop
mov
sub
lock
xor
cmp
mov
jl
hlt
push
mov
dec
add
icebp
fld
retf
call
mov
mov
pop
mov
sar
sub
int3
pushf
int3
xlat
fadd
adc
popf
ins
mov
dec
leave
(bad)
lds
mov
or
mov
iret
jmp
mov
pushf
int3
cmp
mov
out
add
inc
(bad)
scas
fmul
mov
mov
fcmovne
push
pop
iret
aas
pop
ret
rcr
mov
fcmovne
lock
loopne
rcr
cmps
data16
(bad)
dec
into
aam
mov
xor
popf
loopne
loope
add
cmp
pop
cmp
push
cmp
mov
add
loopne
cmp
or
xchg
or
sbb
sar
stos
pop
pop
retf
leave
sbb
arpl
dec
leave
xchg
ins
mov
popf
aad
int
and
cmp
rol
xchg
pop
xchg
push
std
mov
or
mov
iret
xor
int
sbb
push
int
pop
pop
mov
or
jecxz
enter
in
fsub
pop
std
retf
xchg
pop
mov
es
into
pop
sbb
ins
popf
ret
repz
pop
fst
fdiv
pop
aam
pop
lds
xlat
push
(bad)
lods
dec
int
jnp
arpl
fst
xor
popa
mov
inc
rol
sub
push
popf
mov
cmp
pusha
test
pop
popf
into
movs
cmp
shr
popf
into
cmp
dec
into
xor
leave
jl
arpl
pop
shl
mov
ja
fnstsw
jge
mov
fndisi(8087
sub
repnz
xlat
xor
dec
sbb
gs
add
fiadd
int
lods
or
(bad)
fiadd
inc
sbb
sahf
jge
out
les
into
in
fdiv
aam
mov
push
pushf
rcr
sbb
xor
sar
(bad)
sar
fxch
fld
pop
add
loop
sbb
popf
inc
add
(bad)
rcl
xor
(bad)
pop
pop
rcr
into
jnp
(bad)
push
sahf
into
sub
loop
loopne
int
and
fsubr
pop
aad
cmp
sub
in
fwait
sar
ds
push
push
jecxz
mov
pop
push
(bad)
shr
loope
ins
in
mov
pop
fucom
sbb
xlat
inc
(bad)
loope
lods
in
outs
in
dec
in
cld
(bad)
pop
fucomip
std
out
into
out
(bad)
cmc
pop
ror
aad
fdivr
int
push
(bad)
dec
or
inc
sbb
hlt
int
add
arpl
pop
and
lock
out
outs
loop
popf
push
pusha
jo
stos
ds
add
push
sahf
(bad)
sbb
loope
lods
jmp
cs
jmp
mov
sub
sahf
jecxz
dec
fbstp
xlat
mov
addr16
mov
in
popf
fsub
in
fs
jmp
pop
in
popf
jmp
fwait
aad
sbb
pop
(bad)
in
pop
in
jb
out
mov
(bad)
in
call
in
sahf
in
jne
out
sahf
loope
cmp
ror
ficomp
aaa
int
push
lods
out
pop
sbb
mov
ror
mov
pushf
push
adc
or
nop
add
sahf
jecxz
pop
icebp
test
jecxz
jl
scas
jle
inc
nop
icebp
sbb
mov
lock
nop
stos
into
retf
call
dec
aam
out
in
aas
repnz
in
jmp
ds
inc
out
icebp
pop
lods
loopne
out
loopne
jge
xor
add
dec
mov
push
pavgb
call
(bad)
icebp
xor
in
mov
icebp
inc
jg
call
push
aam
outs
jmp
(bad)
out
fsubp
pop
(bad)
out
inc
das
loop
dec
fild
in
sahf
bnd
test
push
jg
jo
out
sahf
jle
das
(bad)
in
dec
mov
jge
fild
repnz
hlt
inc
lahf
push
es
xchg
pop
into
hlt
pop
mov
icebp
pop
shl
dec
hlt
pop
pop
xchg
jg
jge
hlt
cwde
(bad)
pop
pop
shl
stc
cdq
pop
mov
aas
fadd
stc
lods
scas
stc
dec
out
clc
nop
(bad)
cli
test
out
fs
data16
mov
bnd
hlt
inc
out
stc
cmp
dec
dec
div
in
pop
scas
repz
mov
js
out
fcomp
mov
into
mov
(bad)
cli
mov
mov
jmp
mov
icebp
test
cli
sub
xor
sub
pop
sbb
mov
sub
xchg
sub
sub
xchg
xchg
pop
adc
add
adc
scas
mov
dec
cwde
scas
sub
pop
setl
test
cdq
mov
mov
call
(bad)
mov
mov
rcr
(bad)
cmps
add
lods
scas
jmp
jmp
mov
cli
pop
retf
inc
jmp
call
adc
sbb
(bad)
pusha
leave
(bad)
sub
mov
int3
daa
test
scas
jge
(bad)
lds
push
xor
enter
xchg
iret
sub
sbb
mov
pop
jb
mov
cmp
xchg
cs
sub
scas
mov
nop
loope
xchg
adc
push
lea
xchg
mov
outs
cmp
stos
mov
(bad)
fwait
pop
test
jp
or
push
outs
bound
loop
inc
bound
pop
mov
sbb
mov
inc
cmp
ret
bound
popf
clc
aad
push
mov
sbb
xchg
shl
xor
xor
stos
(bad)
ins
inc
pause
(bad)
sbb
in
(bad)
jnp
xchg
jno
outs
pop
ins
es
push
repz
mov
(bad)
es
ins
xchg
sbb
sub
out
jmp
sbb
ja
jne
dec
push
mov
jmp
daa
popf
jl
rol
iret
and
shl
xlat
ja
lods
daa
and
push
and
sti
pop
daa
fbstp
adc
adc
add
ja
and
and
mov
mov
sbb
shl
arpl
xor
push
inc
int
inc
outs
pop
and
pop
movs
repz
xor
sub
jle
and
sbb
sbb
pop
pop
xchg
loop
push
push
cwde
gs
add
mov
xchg
shr
xchg
in
push
bound
dec
popf
xchg
leave
xor
xchg
outs
call
arpl
add
mov
loope
pop
push
jo
call
push
and
inc
xchg
inc
cmp
mov
movs
xchg
push
pop
sub
sbb
ficom
mov
mov
adc
mov
cmps
mov
cdq
sub
pop
sub
xchg
or
xchg
xchg
ins
pop
sti
daa
push
add
xchg
mov
xor
imul
or
xor
jmp
jg
cmp
xchg
in
imul
outs
adc
mov
test
add
stos
test
or
pushf
mov
inc
ret
push
and
inc
movs
sub
add
add
or
adc
call
loopne
call
cmc
or
int3
cmp
pushf
inc
mov
retf
aas
ret
xor
dec
stos
mov
mov
test
inc
ret
into
cmp
rol
inc
adc
sub
inc
dec
adc
fiadd
mov
xlat
shl
dec
aaa
rcl
sub
dec
mov
sub
sbb
int
(bad)
dec
inc
jbe
push
hlt
add
hlt
fistp
dec
jbe
call
lea
test
aas
fwait
outs
mov
fwait
pop
sahf
add
jnp
mov
jle
in
scas
out
jnp
stos
push
ds
and
fcomp
mov
push
mov
mov
(bad)
cli
cmc
or
lods
mov
jns
rol
sub
mov
stc
iret
adc
popa
sti
sbb
sub
or
sti
icebp
iret
dec
test
out
icebp
icebp
push
sub
cli
in
sbb
pop
add
xchg
push
or
scas
jle
fcmovnu
lock
mov
jge
add
js
add
add
cmp
lahf
mov
xchg
das
js
repz
or
pop
stc
(bad)
and
test
adc
push
sbb
add
ror
jae
add
push
cld
mov
stos
sbb
jecxz
xor
adc
adc
dec
xor
xchg
mov
je
mov
inc
hlt
loop
dec
push
les
cmp
dec
icebp
mov
xchg
inc
add
data16
outs
cmp
adc
cmps
(bad)
mov
cmp
sbb
xchg
jnp
or
mov
mov
add
adc
in
mov
ds
jno
imul
xchg
dec
and
push
mov
xchg
push
jl
adc
cmp
pop
sahf
mov
stos
pop
and
enter
(bad)
mov
xor
repz
enter
gs
cdq
iret
in
pop
xor
imul
cmps
ss
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
and
xchg
call
push
retf
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
rcl
fadd
movs
ss
dec
fldcw
push
enter
and
adc
scas
je
jge
imul
pop
outs
and
sar
loopne
dec
jnp
add
in
aad
adc
or
fnsave
mov
mov
fmul
xchg
je
mov
stos
fnstenv
xchg
sub
repz
lods
scas
movs
sub
and
jmp
mov
loope
ret
popa
ror
out
xchg
or
fld
les
mov
test
xchg
movs
int
scas
popa
adc
add
jb
or
push
(bad)
xchg
idiv
mov
pop
mov
xlat
mov
inc
fcmovnu
xchg
push
mov
mov
fcomip
inc
mov
jns
jnp
imul
cmp
or
cmp
ins
pop
clc
pop
xlat
mov
icebp
retf
xor
dec
int3
pop
out
push
add
cmp
adc
in
outs
lea
loope
sbb
add
ds
push
loop
jb
or
ss
js
jecxz
mov
icebp
jnp
(bad)
and
mov
ret
pusha
and
cwde
mov
ins
rcr
pop
cmc
(bad)
data16
out
mov
test
push
xor
not
cmp
imul
mov
wrmsr
push
addr16
adc
push
xor
jno
xor
(bad)
neg
scas
lahf
fstp
gs
sub
add
data16
jbe
loopne
sbb
mov
jns
mov
repnz
add
repnz
cmps
cli
shr
test
stos
mov
out
movs
jne
addr16
push
ret
fimul
scas
scas
dec
popa
push
das
sbb
or
scas
jne
in
push
xor
(bad)
mov
cdq
shl
sbb
mov
mov
adc
leave
push
es
ins
lock
aaa
jmp
mov
movs
add
or
leave
test
mov
int
or
jp
sbb
or
shl
and
in
div
imul
popa
xchg
or
mov
dec
mov
pop
(bad)
stos
cmp
ss
add
stos
outs
repnz
cmp
inc
mov
je
push
popf
imul
xor
fwait
pushf
out
cmp
pop
pushf
xor
mov
mov
(bad)
jmp
mov
popf
push
push
mov
dec
jge
sub
cmp
mov
sbb
jne
pop
(bad)
pop
pop
scas
test
xchg
xchg
aam
and
pop
jge
stc
push
cdq
push
jno
sar
push
jp
sbb
or
xor
(bad)
pusha
add
xchg
jno
das
sbb
push
ret
popa
xchg
cmp
(bad)
adc
(bad)
mov
into
jno
mov
xor
scas
jnp
mov
lods
popa
and
mov
cmps
pop
(bad)
js
(bad)
jnp
mov
pop
jg
cmp
or
jp
sbb
jecxz
in
push
adc
add
pcmpgtb
data16
jge
frstor
add
repnz
mov
cmps
ret
xlat
mov
aad
jmp
stos
cmp
push
gs
xchg
jnp
xchg
push
xchg
aad
test
mov
and
sar
jb
mov
out
jo
jbe
xchg
jae
inc
jo
shl
push
sub
jp
ja
cmp
call
jp
jbe
push
nop
jle
inc
add
ss
jae
jl
mov
aaa
mov
push
mov
xlat
sbb
dec
cmps
push
and
inc
out
pop
push
jg
inc
pop
add
outs
icebp
aad
in
jbe
repz
jae
cmps
add
test
pop
test
data16
(bad)
outs
shl
pop
or
xchg
addr16
mov
mov
push
cli
cmps
inc
inc
jbe
js
ja
out
cmp
xchg
jl
aaa
xchg
fs
inc
jnp
xchg
daa
add
push
data16
ja
adc
ins
xchg
sub
add
mov
imul
test
jge
jns
pop
mov
pop
hlt
add
pop
pop
imul
push
test
add
mov
push
mov
imul
(bad)
cmp
xchg
sbb
rol
push
jnp
jne
sahf
jbe
fsubp
jnp
xchg
ins
jne
mov
test
pop
or
ja
pushf
cmps
popa
sub
inc
jp
inc
outs
movs
pop
push
push
add
pop
movs
addr16
out
adc
jns
(bad)
jno
push
je
jbe
arpl
pop
out
arpl
push
scas
and
xlat
push
sbb
xlat
mov
pop
test
ja
mov
add
sbb
imul
sbb
pop
jbe
jmp
inc
jne
push
imul
ja
mov
cwde
jbe
aaa
jg
daa
pop
mov
jnp
xlat
imul
mov
pop
in
xor
sbb
cmps
mov
xchg
js
cmp
fcomp
xchg
test
cwde
jno
or
jae
mov
and
or
test
push
imul
call
pop
test
mov
jb
addr16
aam
imul
mov
fs
push
xchg
cwde
rol
push
xchg
dec
loopne
cmp
popa
mov
lea
xor
add
jp
test
sbb
pop
xchg
imul
fs
neg
adc
enter
nop
xor
pop
out
xchg
push
jne
addps
cmps
bound
outs
movs
sub
push
nop
mov
cmp
out
pop
xchg
test
adc
pushf
out
dec
push
ror
cmps
push
shr
push
imul
jne
mov
push
sbb
jo
jnp
sahf
fdivr
push
push
fcomp
sahf
mov
push
fld
or
xchg
mov
(bad)
inc
xchg
(bad)
pop
mov
adc
xchg
sbb
push
test
add
inc
ss
test
fdivp
pushf
rol
jle
pop
cli
fstp
pusha
out
test
outs
into
movs
add
mov
jle
imul
sub
cmp
lds
jmp
push
push
xchg
ficom
(bad)
gs
mov
movs
cmp
xchg
add
gs
mul
mov
pop
mov
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
popa
adc
add
add
add
add
out
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
or
cdq
test
or
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
inc
dec
mov
and
jmp
mov
mov
retf
cmp
test
or
cmp
scas
add
popf
pop
fld
pop
mov
mov
mov
imul
(bad)
xchg
jo
cmps
leave
jmp
add
pusha
add
shl
cli
popf
lea
mov
mov
xchg
sbb
stos
mov
sub
sti
mov
cmp
pop
add
add
mov
jnp
neg
mov
mov
dec
mov
sbb
pop
mov
or
mov
mov
(bad)
or
mov
cmp
add
jo
or
lock
mov
mov
arpl
add
sbb
dec
lods
xchg
sti
add
retf
mov
stos
mov
or
inc
mov
jmp
hlt
or
jnp
adc
mov
mov
sti
mov
jl
add
mov
sub
retf
ror
mov
(bad)
cli
mov
pop
mov
lock
(bad)
add
add
pushf
ret
cmp
jp
cmp
sub
add
add
add
lods
ret
cmp
xchg
les
ret
inc
cmp
xor
or
push
mov
add
cld
scas
sbb
pop
mov
jmp
push
mov
dec
ins
add
pushf
add
pusha
les
les
ret
dec
in
mov
les
mov
lds
lds
les
lds
test
or
push
xor
loopne
cmp
mov
inc
add
mov
xor
mov
jo
and
add
xchg
cmp
dec
xor
push
ror
dec
ins
leave
jp
mov
jo
xchg
cmp
jp
retf
mov
mov
lahf
pushf
add
cmp
mov
mov
int3
stc
or
retf
(bad)
mov
retf
mov
retf
add
in
leave
xchg
mov
cld
int
fmul
xchg
pop
leave
xchg
dec
stos
push
adc
mov
into
mov
add
rol
adc
push
push
add
retf
iret
jmp
dec
iret
test
lock
out
int3
out
cld
into
or
retf
retf
bsr
in
lods
mov
std
iret
mov
shl
or
clc
lods
xchg
ins
add
iret
int
movs
sbb
mov
shl
fcmove
adc
ficomp
out
jl
loope
shl
cli
les
jge
adc
retf
loop
sar
or
inc
cmp
and
out
in
iret
cmp
rcl
std
aam
jns
mov
into
daa
(bad)
into
or
add
sub
mov
sub
inc
jge
push
mov
push
dec
retf
cmp
aad
(bad)
aam
mov
mov
retf
into
(bad)
in
aad
sbb
add
in
xlat
and
push
or
in
rol
aam
sub
inc
in
rol
fdivr
int3
sub
xchg
fs
fadd
mov
sub
push
rcl
xlat
xor
shl
fadd
(bad)
popf
or
test
push
popf
aam
mov
push
inc
fadd
xlat
sub
cmp
les
loopne
cmc
cmp
or
call
or
mov
fisttp
sub
mov
iret
cmps
mov
pop
fst
mov
fldln2
sbb
jge
fucomi
sub
xor
sub
(bad)
int
mov
test
rcr
lods
xchg
outs
sar
xlat
mov
int
sbb
mov
(bad)
mov
test
pop
into
loopne
mov
loop
mov
jns
fsubr
pushf
retf
cli
cmp
inc
lods
into
push
jge
pop
jo
mov
(bad)
push
ins
fisttp
loopne
pushf
add
add
fdivr
inc
(bad)
popf
fmul
int
bswap
fbstp
lods
loope
mov
out
in
add
int
sub
or
cmp
dec
dec
jmp
in
mov
movs
fstp
jno
fucompp
mov
sub
add
ret
adc
shr
out
lods
loope
(bad)
sbb
in
push
in
mov
or
fldcw
in
or
sub
push
jle
int
retf
stos
fld
inc
jle
je
rcr
pop
add
jecxz
pushf
add
loope
dec
fsub
loope
push
fidiv
out
push
(bad)
fsub
pushf
or
ins
dec
fistp
push
jmp
mov
jmp
sub
add
out
or
mov
jmp
mov
and
fstp
jmp
mov
loope
outs
out
scas
xlat
jne
loopne
push
out
out
jmp
sbb
repnz
jmp
imul
nop
(bad)
pop
mov
in
into
adc
into
mov
call
fld
int
mov
stos
pop
rol
jne
sar
fstp
call
cld
icebp
mov
add
loopne
fisubr
enter
outs
repz
out
ss
scas
dec
fcomp
jmp
ds
fld
outs
jecxz
jge
fdivrp
repz
popf
sar
cmp
sahf
out
fucomp
ins
fisttp
ror
mov
fmul
jg
in
mov
in
mov
out
popf
hlt
sub
in
sub
sbb
iret
cmps
(bad)
iret
pop
sahf
retf
sbb
inc
lahf
(bad)
call
pop
cmc
or
ds
and
lock
in
xor
in
sahf
repz
xor
loope
out
cmc
sub
add
xor
das
repz
outs
shl
push
cli
push
scas
stc
pushf
mov
ss
imul
lahf
cmc
jo
lock
paddsw
or
sti
ds
sti
(bad)
inc
out
aam
(bad)
in
push
pop
in
add
iret
pusha
psllq
fistp
pop
(bad)
ja
cmc
ror
sbb
retf
int3
mov
xor
push
aad
push
sti
push
stc
jp
in
push
lock
std
out
cmc
xlat
aas
sti
stos
aas
cmc
mov
add
aas
fisub
in
push
mov
sbb
div
lock
and
cwde
xchg
cmc
cwde
aad
mov
mov
pusha
fsubr
inc
dec
pop
adc
fnstcw
mov
mov
(bad)
shr
cmp
test
test
mov
jl
stos
jmp
mov
sub
test
mov
jl
jmp
out
pop
call
ins
sub
stos
jmp
or
lea
ds
(bad)
jmp
or
mov
(bad)
pop
sbb
ins
pop
sub
in
xchg
movs
js
out
cmp
or
cs
in
in
push
nop
inc
push
jl
mov
xor
xor
in
mov
(bad)
adc
xor
cs
push
cmp
adc
jl
mov
and
fcomi
and
sbb
sbb
mov
in
xor
cmps
jne
shl
cmps
int3
add
sub
dec
and
mov
movs
cmp
mov
push
xchg
lods
sub
(bad)
out
fdivr
mov
jge
push
xchg
cmp
adc
(bad)
ins
or
xor
push
push
mov
sub
xchg
aam
inc
dec
inc
inc
jno
aam
rcr
jbe
test
scas
pop
rcl
retf
push
data16
add
movs
mov
div
jmp
pop
fsubr
add
pop
mov
lea
mov
mov
fdivr
xchg
fsub
push
dec
cmps
or
lea
repnz
jns
mov
pushf
mov
dec
and
jbe
push
xchg
push
xor
adc
inc
push
pop
outs
dec
test
les
xchg
repz
sbb
sahf
xor
push
pop
jge
lea
fcom
xchg
add
ret
out
and
jne
mov
mov
and
mov
adc
and
nop
push
inc
aaa
xchg
pusha
push
sbb
xchg
pop
jno
pop
jp
dec
addr16
xor
pop
add
xchg
xchg
cmp
loop
and
in
pop
sbb
push
mov
stc
adc
mov
cmc
xchg
dec
and
pushf
jb
mov
aad
xchg
pop
sbb
sbb
xchg
cwde
not
popa
repnz
pop
and
add
mov
ja
cwde
and
ret
scas
loop
sub
inc
xor
xchg
or
dec
ss
ds
pop
js
xchg
cwde
add
xchg
push
push
(bad)
movs
stc
mov
push
lods
sub
jb
ins
je
es
pop
pop
test
lahf
in
daa
fisubr
xchg
and
popf
cwde
in
(bad)
jmp
mov
daa
pop
and
loop
out
enter
popf
rol
pop
push
xor
imul
and
imul
xchg
outs
cmp
jp
adc
rol
sub
mov
cmp
xchg
retf
stos
inc
adc
sbb
cdq
jmp
cmp
cwde
jecxz
mov
into
cmc
or
jae
dec
pop
or
into
pop
jp
mov
in
test
sub
xor
adc
mov
mov
shl
jno
js
sub
retf
lods
push
fisub
sub
cmc
les
daa
mov
mov
inc
daa
xor
inc
sbb
(bad)
int3
mov
adc
imul
cmp
leave
test
aas
fnsave
cmc
leave
scas
add
dec
ja
mov
in
adc
das
xchg
add
add
stos
sahf
sub
mov
jb
das
mov
iret
and
dec
jl
daa
or
fisttp
(bad)
(bad)
leave
das
fstp
fld
mov
push
dec
xlat
cs
jmp
test
fwait
iret
jge
pop
xchg
or
mov
ror
jle
and
outs
test
(bad)
(bad)
(bad)
cmp
ror
(bad)
push
inc
cmp
mov
pop
aaa
ins
xchg
shr
ins
les
out
sbb
cmp
in
add
sahf
(bad)
fstp
pop
jecxz
ja
jmp
int3
repnz
aas
xchg
lods
dec
pop
mov
call
jo
scas
inc
sbb
cmp
pop
hlt
dec
xchg
adc
stos
rol
sub
frstor
cmps
mov
loope
je
shl
sti
mov
add
push
popa
out
cli
div
adc
dec
ds
dec
mov
sbb
outs
mov
ja
and
jbe
jbe
adc
(bad)
push
xchg
pop
push
popf
(bad)
out
ret
(bad)
xor
lahf
bndstx
pop
and
and
pop
push
jno
sub
and
rol
and
dec
fs
pop
sbb
mov
shl
lods
int3
cdq
adc
enter
test
rcl
pop
pop
retf
out
daa
outs
(bad)
jns
hlt
pop
sub
mov
push
xchg
out
jmp
and
push
cmp
bound
ja
inc
bound
div
(bad)
dec
mov
int
movs
sub
push
bnd
lods
lahf
xor
push
nop
or
cmp
mov
loope
(bad)
into
dec
cld
cmps
mov
fisttp
test
xchg
pop
clc
fstp
out
inc
push
fimul
scas
inc
data16
jle
lods
and
xlat
mov
popa
dec
jns
retf
push
mov
or
pop
(bad)
mov
cmp
std
push
fstp
mov
mov
call
add
ror
sub
add
in
es
jmp
or
dec
icebp
sub
cwde
and
push
mov
cmps
loope
push
pop
jmp
add
dec
lahf
pop
or
dec
jne
jo
add
sbb
inc
mov
stc
or
movs
cmps
jae
cmps
adc
dec
(bad)
ret
jne
dec
inc
out
cdq
retf
stc
mov
addr16
push
cli
adc
cdq
and
mov
es
test
and
mov
enter
xchg
leave
cmp
lds
sub
(bad)
cli
push
mov
xor
mov
push
xlat
lods
ss
pusha
sub
ja
lods
ins
jmp
loope
or
rcr
rcl
int3
add
adc
inc
ja
jmp
imul
or
mov
outs
mov
cmc
or
jmp
cmp
xchg
mov
push
xor
retf
push
repz
mov
lds
pop
mov
mov
dec
fwait
add
mov
mov
mov
adc
outs
mov
mov
mov
cmp
test
inc
movs
sbb
mov
push
nop
add
inc
dec
mov
and
enter
nop
inc
loopne
clc
retf
rcr
ficomp
sbb
les
es
test
dec
pop
repnz
lods
stos
loopne
into
push
int
cmp
in
fcmovne
int3
jno
repnz
mov
fmul
stos
mov
jecxz
ja
sub
repnz
pop
rcr
mov
in
aaa
jp
xor
or
or
push
sbb
add
div
cmps
lahf
(bad)
add
and
test
pop
add
cmp
mov
xor
and
outs
stos
dec
int
fsubr
jne
xor
dec
idiv
mov
mov
or
mov
sbb
ror
adc
lods
(bad)
std
fisttp
sbb
sar
ss
mov
shl
adc
adc
aaa
xchg
fstp
or
cmp
mov
jmp
push
sbb
in
jge
jl
fcmovnbe
repnz
mov
movs
int3
ins
(bad)
sbb
or
ins
jp
jne
push
stos
mov
ins
imul
stos
add
and
mov
fistp
imul
fdiv
(bad)
stc
adc
jb
mov
stc
adc
add
das
jp
xor
jp
jge
hlt
into
stc
int3
push
sahf
je
adc
pop
push
lock
mov
add
or
call
cmc
scas
fistp
sub
cmps
scas
scas
ret
pop
or
mov
sbb
pop
call
xchg
mov
fistp
sahf
(bad)
jae
sbb
aad
dec
dec
lods
pop
fld
inc
enter
sbb
and
dec
mov
mov
xchg
cmp
pop
scas
inc
or
(bad)
pushf
fistp
pop
jne
mov
inc
xlat
movs
into
not
mov
call
xchg
mov
or
push
cmp
ins
(bad)
cmps
pop
idiv
lahf
add
pusha
dec
cmp
addr16
jb
and
ins
fild
sub
fisttp
sti
fidiv
je
pop
dec
push
add
pop
add
les
stc
aad
(bad)
sbb
or
jo
repnz
jg
retf
scas
jle
cwde
jle
pusha
add
loopne
sbb
shl
jge
xchg
jns
xchg
xlat
jge
xchg
jno
pop
add
jb
mov
daa
jbe
mov
xchg
pop
sub
jg
mov
sbb
out
daa
xor
add
xchg
add
ja
sbb
xor
jp
xor
fcom
lock
inc
and
jg
inc
dec
fidiv
cld
cmps
jle
mov
and
jg
xlat
adc
cmp
ja
je
sub
add
mov
sub
imul
xor
add
jo
loopne
jge
test
jae
push
popa
aaa
jae
mov
daa
je
xchg
xor
rol
add
mov
add
dec
hlt
ja
pop
clc
pop
or
mov
mov
jge
mov
adc
or
mov
mov
jno
daa
sbb
ss
test
jnp
call
loop
test
jnp
call
jnp
mov
dec
mov
pop
ror
xor
push
mov
add
add
js
mov
jg
mov
ror
(bad)
leave
enter
jns
call
jmp
sub
in
aam
cmp
jg
sub
mov
add
cwde
add
add
dec
add
mov
nop
daa
enter
mov
and
(bad)
enter
outs
(bad)
and
or
adc
adc
jg
dec
nop
mov
jno
sbb
add
jb
xor
adc
add
push
(bad)
mov
lock
jbe
js
add
mov
cwde
test
jge
dec
xchg
dec
add
imul
jg
mov
inc
ja
xchg
clc
mov
mov
push
enter
add
pop
xchg
(bad)
sub
jne
jmp
daa
cwde
xchg
hlt
sub
jmp
sub
mov
jns
xchg
xchg
jae
clc
xchg
nop
rcl
enter
nop
sbb
push
pop
xchg
dec
or
jnp
cmp
mov
or
jne
cdq
inc
cmp
mov
add
mov
or
mov
rol
mov
fiadd
ror
push
add
jns
cmp
nop
sbb
fwait
mov
xchg
mov
nop
adc
enter
pushf
pop
jo
dec
inc
jge
dec
cwde
push
stc
mov
or
mov
xchg
push
and
lahf
mov
nop
pop
call
push
mov
jp
xchg
jo
je
fcomp
push
xchg
adc
cdq
sbb
mov
xchg
sti
enter
mov
xchg
in
xchg
pop
sbb
sbb
stc
mov
nop
test
add
popf
outs
fst
pop
xchg
mov
xchg
add
xchg
xchg
pop
xchg
jmp
add
imul
ja
or
cmp
push
dec
jns
sbb
dec
xchg
cwde
mov
ror
jo
sbb
jbe
sub
mov
add
mov
loop
pop
addr16
jmp
stos
xchg
xchg
or
mov
xchg
adc
xchg
dec
imul
mov
dec
pushf
mov
test
jp
in
clc
mov
dec
xchg
or
xchg
mov
nop
fwait
pop
xchg
push
pop
cmps
add
nop
jge
mov
stc
xchg
xor
call
push
cdq
mov
or
cdq
aas
cmp
xchg
ins
sbb
stos
mov
mov
imul
(bad)
outs
jns
leavew
mov
adc
sbb
imul
scas
cdq
aas
dec
call
xchg
sbb
test
cmc
sahf
sub
neg
bound
stos
out
cmp
mov
sub
mov
in
mov
add
dec
xchg
sub
mov
imul
xchg
jmp
fldcw
dec
mov
dec
stos
dec
mov
mov
stos
adc
jmp
fisubr
jmp
mov
test
push
mov
popf
imul
add
or
pop
mov
js
cmps
cwde
nop
dec
jns
dec
imul
add
xchg
xchg
test
and
pop
cmp
add
mov
cwde
push
mov
pushf
je
mov
imul
nop
push
sub
and
jecxz
adc
fwait
jno
xchg
dec
push
nop
fwait
mov
arpl
xor
mov
pop
mov
imul
mov
cli
mov
dec
scas
imul
jns
sbb
retf
test
cmp
imul
movs
test
mov
sbb
loopne
mov
movs
sub
lods
mov
addr16
mov
call
mov
dec
jg
call
mov
jo
mov
pushf
add
fwait
rcr
push
adc
mov
mov
or
mov
push
add
and
sub
jmp
inc
cdq
mov
mov
mov
lods
mov
mov
daa
mov
dec
nop
and
test
sub
(bad)
mov
shl
ret
xchg
mov
mov
retf
les
dec
nop
push
mov
inc
add
dec
add
mov
sbb
sub
adc
sbb
and
mov
jmp
push
mov
sub
jno
pushf
(bad)
cli
mov
add
pop
dec
(bad)
movs
stos
mov
mov
mov
xor
cli
fidivr
jl
aam
mov
pop
nop
push
jmp
add
mov
stos
sbb
test
and
mov
dec
mov
pop
(bad)
mov
add
mov
dec
mov
cmp
enter
retf
jl
adc
(bad)
retf
(bad)
sbb
nop
sub
add
mov
xchg
aaa
sti
enter
jle
nop
mov
xchg
shr
mov
int3
retf
add
retf
int
fadd
pusha
or
retf
ret
sub
cld
mov
pop
retf
mov
mov
sbb
or
out
mov
jl
movs
int3
add
ror
cs
int
or
mov
retf
(bad)
or
push
int3
add
xor
test
shl
or
push
jmp
retf
ret
int
loopne
fsubr
test
aam
mov
dec
pop
mov
mov
gs
aam
stos
retf
mov
mov
cld
leave
je
int3
call
enter
dec
in
xchg
cs
push
sub
cmp
aam
fwait
sar
lds
in
int
sub
mov
shr
xchg
cld
mov
push
adc
dec
retf
addr16
or
aad
or
cmp
retf
test
jmp
mov
cld
rcr
ins
add
(bad)
cld
leave
or
retf
xlat
push
ins
add
ficom
aam
in
mov
ins
xlat
sub
mov
sar
mov
cmps
in
(bad)
cmp
cs
into
push
pop
aad
lods
mov
lods
fist
fnsave
xlat
xchg
mov
jg
(bad)
retf
int3
mov
cmp
adc
mov
ins
ficomp
fisubr
rcr
int3
repz
mov
scas
fstp
inc
jge
sbb
test
fsub
fcom
aad
int
dec
mov
add
fcmovb
dec
(bad)
xlat
sbb
push
ror
push
jo
sub
ffree
or
lea
mov
add
dec
int3
fcomp
fbld
fdivp
or
fistp
dec
sub
mov
sar
movs
mov
xor
test
loopne
(bad)
in
(bad)
loope
(bad)
ficom
fmul
aam
(bad)
aam
into
aam
jge
pop
mov
inc
popf
int
ins
fimul
push
fistp
loopne
ins
enter
ds
jne
aam
mov
xchg
pusha
cmp
sar
lods
fbstp
out
ins
in
int
int3
in
(bad)
push
push
aad
mov
aam
add
add
loop
fsub
dec
add
dec
or
aaa
int3
loopne
sahf
rcr
(bad)
scas
in
outs
fbstp
fidivr
out
push
jmp
(bad)
out
lods
in
out
(bad)
mov
hlt
int
pop
sahf
out
fsubp
outs
loope
pop
jmp
mov
bswap
aam
sub
repz
test
in
(bad)
dec
fild
rcr
outs
faddp
popf
call
mov
cmps
dec
loope
sbb
jmp
cmp
dec
ins
fimul
shl
fsubr
in
jno
in
loopne
dec
add
dec
xor
lods
fsubp
out
loopne
mov
cli
push
xchg
lock
mov
into
cmps
mov
push
mov
fwait
sahf
loope
pop
(bad)
scas
push
fucomip
mov
sbb
jbe
in
sbb
add
ins
out
adc
enter
retf
pop
jmp
cmp
inc
dec
in
xor
lock
aam
pop
repz
cs
scas
jnp
sti
mov
inc
out
out
loopne
out
cs
dec
mov
cmps
ds
(bad)
repnz
in
sub
inc
aas
(bad)
out
jle
loopne
in
jg
hlt
cs
sub
icebp
je
ror
in
sbb
repnz
icebp
dec
and
and
repnz
(bad)
call
dec
popf
add
repz
clc
inc
iret
repz
hlt
je
fisub
pop
das
stc
sbb
outs
clc
sub
xchg
pop
cmc
nop
scas
jmp
push
cmc
add
lahf
out
cmc
jae
in
das
lock
psubd
(bad)
push
test
push
fucomip
call
stc
lods
psubsb
repz
mov
mov
in
xchg
mov
mov
repz
pop
cli
call
das
in
(bad)
fmul
aam
stc
cmp
aas
sti
es
xor
std
sbb
retf
fisub
stc
dec
stc
ror
xchg
outs
cli
or
pop
or
add
sub
pop
test
xchg
or
sub
pop
add
xchg
xchg
adc
mov
xchg
nop
fwait
add
test
xchg
cmps
mov
mov
cmps
mov
vpshab
nop
scas
test
mov
cwde
mov
rcl
mov
(bad)
mov
(bad)
fldcw
mov
xlat
mov
sti
mov
retf
aam
xchg
mov
loop
(bad)
retf
pop
inc
aad
push
fld
jne
push
sub
test
lods
aam
jge
aaa
cmp
adc
jno
or
test
cmps
in
pop
arpl
mov
sub
shl
fnsave
hlt
imul
adc
lock
inc
mov
cmp
enter
bound
sahf
xchg
in
push
test
push
inc
cmp
leave
jb
popa
push
movs
push
mov
cmp
mov
or
scas
mov
add
add
mov
into
pop
inc
xchg
jno
dec
dec
adc
or
mov
mov
add
pop
pop
(bad)
rcr
jge
push
movs
ins
jb
pop
cld
or
mov
mov
ficomp
fidivr
inc
xchg
ss
xor
xchg
adc
pop
jmp
xchg
mov
jne
jb
fs
daa
imul
stos
es
or
mov
xchg
xchg
jae
pushf
inc
sub
sar
mov
fist
push
mov
lods
or
rol
sbb
jmp
and
mov
mov
pop
leave
stc
inc
xchg
jo
push
rol
sbb
jl
fld
and
enter
pop
enterw
cmp
sub
loope
repnz
lahf
inc
sub
pop
loopne
dec
loope
sbb
sub
mov
(bad)
es
xchg
shl
adc
dec
out
and
dec
xchg
ins
ds
mov
(bad)
lea
loope
pop
mov
ins
xchg
fld
leave
enter
xchg
add
dec
cmp
add
push
jo
add
jp
loope
popf
jnp
mov
pop
js
add
test
sbb
out
pop
clc
sub
xor
(bad)
cmp
xchg
mov
or
jecxz
call
jmp
popf
xchg
ss
jnp
nop
mov
sub
popf
nop
cmp
jmp
or
add
xchg
daa
scas
push
in
jmp
or
mov
or
push
pop
jp
lods
cmp
and
push
mov
mov
ins
addr16
push
fnstcw
mov
and
shl
pushf
add
add
add
ret
jmp
shl
adc
arpl
lds
sbb
lock
or
lock
ret
adc
mov
mov
sub
div
ss
mov
sbb
xchg
enter
(bad)
add
daa
mov
adc
(bad)
or
jl
leave
push
add
add
repz
call
cld
sbb
into
inc
xchg
popf
mov
jbe
mov
fwait
lods
ja
dec
adc
and
hlt
add
xor
ins
and
jne
xchg
jle
add
ja
jp
jbe
sbb
js
mov
cmp
imul
mov
jno
popf
sub
xchg
add
sahf
cli
out
shl
ss
dec
sbb
xlat
test
mov
sahf
mov
in
cmc
push
icebp
in
mov
mov
pop
cmp
cld
movs
lahf
pop
mov
sub
add
neg
inc
jge
jecxz
imul
out
xor
ja
loop
dec
mov
mov
stc
test
mov
(bad)
cmp
cmp
out
jae
lock
std
retf
repz
sti
stos
xchg
mov
push
jle
cmp
test
nop
adc
mov
sub
test
arpl
js
inc
int
test
fwait
push
in
ficom
imul
add
push
sbb
sbb
loop
and
xor
xchg
mov
sub
mov
xlat
shl
imul
mov
inc
cs
loope
xor
xor
jno
inc
add
ja
sbb
push
jp
mov
(bad)
push
pop
cld
loope
dec
fadd
not
nop
imul
or
and
sbb
mov
xchg
nop
lea
sbb
ret
cmc
or
xchg
xchg
inc
add
pushf
jmp
pop
popa
out
push
mov
xchg
mov
and
retf
pop
(bad)
xchg
cmps
les
pop
retf
mov
fxch
(bad)
xchg
cwde
(bad)
dec
cmps
xor
repz
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
and
mov
mov
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
jge
adc
aad
fadd
mov
mov
xor
adc
outs
je
ins
movs
push
sbb
test
outs
pusha
shl
pusha
jmp
jnp
add
lods
aad
adc
jmp
jne
adc
imul
xlat
lds
scas
xchg
add
fsubr
push
sub
sar
stos
lahf
and
pop
and
scas
jl
call
scas
push
loope
mov
sub
dec
test
cli
xchg
or
sub
mov
mov
outs
test
xchg
mov
repz
fbstp
xchg
or
adc
push
mov
int
pop
xchg
mov
cli
(bad)
mov
daa
fcmovnu
mov
xlat
mov
xchg
or
call
aad
jne
jnp
out
out
aaa
scas
clc
gs
jb
sub
add
aaa
mov
or
(bad)
push
lock
mov
ror
(bad)
inc
mov
lahf
or
pop
out
cmp
or
cmp
or
ins
outs
mov
loopne
sbb
add
cmp
loope
xor
push
mov
push
pop
or
or
mov
in
fisub
hlt
mov
or
and
sbb
adc
cmc
(bad)
(bad)
push
out
in
xchg
test
aad
adc
mov
mov
mov
mov
wrmsr
push
data16
ror
xchg
jno
fild
and
mov
aad
pop
je
push
dec
scas
fwait
mov
rol
out
jb
loopne
adc
mov
jne
mov
jmp
popf
mov
data16
mov
push
or
bound
pop
out
in
mov
or
retf
stos
(bad)
dec
pusha
push
out
sbb
cld
gs
jno
in
push
sub
(bad)
cdq
pop
gs
cmp
adc
inc
mov
mov
gs
cmps
jae
ins
lock
pop
mov
movs
add
call
xlat
(bad)
je
scas
xchg
int
add
jns
sbb
add
shl
loopne
mov
jbe
adc
arpl
mov
addr16
or
mov
cmp
ds
cmc
or
aad
mov
add
stos
outs
jmp
lds
cmp
cmp
mov
xor
pop
or
out
xor
pop
pushf
in
cmp
pop
xchg
repz
push
mov
aam
mov
xchg
pop
push
mov
sub
and
push
xlat
fidiv
jg
adc
mov
mov
adc
loopne
lods
sbb
ror
movs
jnp
test
movs
xor
outs
stc
push
mov
jo
mov
push
jb
sbb
cli
sahf
xor
pusha
add
pop
jno
das
sbb
sbb
xlat
(bad)
adc
pop
hlt
mov
call
scas
push
test
xor
xchg
lods
pusha
and
add
ins
fcomp
ins
jnp
xchg
dec
push
ja
cmp
jmp
popa
jb
sbb
push
xchg
icebp
fistp
in
imul
cmps
mov
ins
packsswb
out
(bad)
pop
scas
fsub
sar
scas
daa
xor
mov
xlat
mov
push
push
pop
(bad)
jmp
cli
cdq
or
aam
cmp
loope
stos
jbe
pop
ja
jmp
jecxz
mov
xchg
jo
add
jno
mov
xlat
(bad)
outs
in
push
cmc
jb
inc
outs
and
jne
push
sbb
jns
ja
cmp
out
push
jns
jbe
push
nop
jge
inc
add
ss
arpl
aaa
mov
push
mov
xlat
or
cmp
stos
xchg
outs
xor
ja
push
jle
inc
push
add
outs
loope
jae
jbe
jecxz
jb
cmps
add
test
pop
jne
gs
(bad)
ins
mov
je
or
test
loopne
jno
mov
movs
xchg
cmps
add
jbe
push
imul
out
jnp
inc
inc
jp
xchg
daa
jg
cmps
imul
add
imul
sbb
add
stos
xchg
fs
sbb
xchg
test
test
mov
pop
in
add
pop
pop
pop
daa
js
jbe
inc
test
cmc
inc
pop
xchg
pop
mov
push
mov
inc
mov
mov
push
xor
div
mov
jg
sub
push
jp
jne
mov
into
out
fsub
stos
add
ja
gs
dec
or
ja
mov
or
push
inc
outs
xchg
pop
push
push
add
push
xchg
addr16
out
adc
js
(bad)
jo
add
push
out
xlat
mov
gs
lahf
and
mov
ret
pop
imul
test
ja
jle
ins
mov
sbb
push
jne
test
push
or
pcmpeqd
(bad)
sub
js
cmps
inc
je
push
push
(bad)
jbe
mov
cwde
jne
aaa
jle
daa
pop
xchg
xchg
jg
loopne
adc
push
or
aaa
xchg
lods
xchg
jg
aad
aam
jg
out
mov
jl
sbb
cmps
mov
test
ja
cmp
fcomp
xchg
sbb
jo
or
mov
pop
xor
jno
cmp
jb
(bad)
(bad)
cmps
xchg
ins
jmp
test
stos
cwde
xchg
mov
popa
les
pop
pop
mov
arpl
push
jbe
xchg
mov
(bad)
ret
push
xchg
dec
loopne
sub
pusha
stos
enter
mov
and
add
jns
test
or
seta
xchg
arpl
add
enter
(bad)
and
pop
ficom
call
out
cmps
popa
cmp
ins
xchg
sub
push
(bad)
js
sub
push
pop
sub
dec
push
mov
pushf
adc
pop
in
call
jns
xchg
adc
outs
inc
sbb
sub
int3
clc
push
inc
fcomp
pop
popf
mov
jb
fld
sti
adc
mov
call
icebp
push
add
xchg
or
addr16
mov
mov
js
xor
jb
test
into
cmc
fwait
ret
inc
outs
push
push
jmp
in
adc
ins
mov
ins
outs
xchg
push
xchg
imul
jbe
ja
(bad)
inc
xchg
ficom
(bad)
fs
mov
mov
inc
test
add
fs
mul
mov
dec
mov
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
push
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
retf
jmp
fdivr
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
dec
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
dec
dec
push
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
jp
mov
sub
cli
movs
adc
sbb
mov
mov
sub
jp
dec
lock
and
add
lods
and
xchg
jb
test
call
mov
rol
adc
and
mov
sub
or
mov
dec
mov
mov
sbb
sti
mov
pop
mov
sub
jmp
dec
dec
mov
stos
fwait
iret
sub
stos
mov
mov
stos
mov
or
sub
sub
sti
xchg
pop
nop
mov
xor
add
pop
add
push
scas
fisttp
cmp
xor
mov
retf
cmps
inc
stos
mov
jmp
call
pop
add
add
mov
mov
sbb
and
mov
sti
mov
jnp
movs
dec
lods
cmps
stos
mov
imul
mov
or
mov
mov
mov
cmp
add
add
retf
rol
sahf
mov
data16
(bad)
sbb
dec
lods
mov
add
retf
mov
sub
pop
mov
jmp
add
mov
sub
mov
cmp
jnp
jp
mov
sbb
sbb
or
scas
repnz
jo
adc
mov
push
adc
push
inc
sub
ret
ret
add
add
ret
cs
jp
add
rol
ds
ret
ret
and
les
add
retf
pop
ret
out
sbb
sub
dec
cld
les
les
scas
dec
fadd
xchg
or
xor
mov
cmp
add
out
or
xor
lds
mov
mov
retf
sub
loopne
add
mov
scas
or
(bad)
pop
xor
loopne
cmp
mov
inc
add
pop
push
add
enter
stos
fwait
enter
cmp
or
leave
xchg
cld
(bad)
mov
add
jl
mov
sub
pop
mov
mov
stos
mov
sbb
mov
leave
xchg
lds
jnp
retf
leave
mov
mov
fwait
retf
retf
mov
inc
pop
add
in
mov
nop
add
jl
mov
pusha
retf
into
ficomp
stos
mov
pop
pusha
add
push
retf
add
mov
icebp
or
mov
into
jmp
add
iret
in
retf
mov
sbb
fisttp
cli
dec
iret
cwde
pop
retf
shr
pop
retf
xchg
int3
inc
cli
shr
push
pop
sbb
and
or
shl
iret
add
or
shl
or
loope
rcl
cmp
add
sub
rol
int
cli
int
lods
iret
inc
fst
cmps
int3
rol
mov
daa
sub
or
js
int
pop
loopne
mov
add
or
pop
adc
loope
iret
pop
cmp
fidivr
jnp
push
jge
and
jmp
push
dec
loopne
(bad)
(bad)
fdivr
dec
dec
xlat
ja
rcl
pop
xlat
sbb
mov
js
mov
dec
into
mov
outs
mov
ds
retf
fcomp
mov
jno
aad
ins
fcom
fimul
jp
adc
fiadd
int
ins
fnstcw
rcl
sbb
or
sti
cmp
jno
shr
add
add
stos
into
push
std
iret
mov
xlat
imul
mov
fdiv
retf
inc
sub
movs
mov
out
fnstenv
fsubr
lods
xchg
jl
call
fisubr
push
fst
in
fld
int
jno
fild
fimul
ins
add
or
ret
out
aad
into
into
jo
(bad)
jl
inc
fst
test
xlat
in
fist
fcmovb
sbb
(bad)
jl
jle
fild
add
sahf
shl
in
fist
fild
aad
sub
cmp
add
add
fdivrp
std
fild
cs
int3
add
mov
jno
fsub
mov
and
loopne
mov
test
dec
popf
jecxz
lods
xlat
hlt
jge
aam
in
in
fist
loopne
pop
in
fsubp
push
push
out
sub
hlt
(bad)
(bad)
clc
int
mov
out
mov
xor
into
lock
in
mov
(bad)
xlat
das
in
aad
outs
retf
shl
or
pop
dec
xlat
fmul
cld
ficomp
fidivr
retf
loop
push
out
scas
fadd
ror
call
inc
stos
sar
fdivr
out
sbb
repnz
pushf
sbb
popa
scas
int
(bad)
loope
dec
aad
or
loope
iret
jo
jmp
add
lods
fsubp
test
jecxz
into
(bad)
call
fucomp
aad
rcl
jmp
sub
push
pop
loopne
mov
sahf
jle
mov
jmp
in
fild
fsubr
sub
push
push
out
in
fild
call
fmulp
sahf
mov
retf
int
cs
aam
out
iret
inc
jl
sub
sar
out
mov
add
cs
push
add
scas
fdivr
add
xlat
je
aam
mov
repnz
mov
add
jge
(bad)
(bad)
repz
iret
lahf
popf
out
cs
xor
jmp
jge
lock
add
dec
in
scas
jmp
das
loopne
inc
lock
fcom
sub
das
lods
in
adc
adc
jp
jmp
iret
jecxz
std
loope
(bad)
cld
out
in
mov
out
das
dec
fstp
into
cmp
in
mov
stc
ds
in
scas
cld
lock
iret
xchg
sub
cmp
clc
jb
jmp
(bad)
and
loop
(bad)
repnz
sahf
out
mov
mov
add
jo
ins
out
repnz
mov
ins
das
loop
xor
xchg
out
add
div
repnz
sub
repz
loopne
(bad)
fisttp
out
mov
in
aas
jmp
das
loopne
mov
ret
bnd
ret
iret
not
out
int
lds
movq
ret
lahf
clc
mov
stc
pop
pop
clc
ds
out
mov
jmp
std
fist
outs
repz
ds
dec
retf
hlt
push
scas
cld
iretw
test
xchg
cli
cmps
jle
mov
hlt
jp
fcom
jle
nop
scas
inc
je
mov
mov
mov
cmp
cmp
bound
mov
rol
imul
sub
imul
or
js
mov
cmp
sub
mov
fstp
fdivr
jmp
or
jns
pop
fldcw
ins
ins
cdq
cmp
dec
imul
(bad)
jp
dec
fimul
sbb
(bad)
sti
pop
pushf
out
cwde
mov
fdiv
sbb
ret
or
push
mov
in
mov
lods
sub
mov
dec
mov
cmp
jmp
repnz
cli
add
in
xchg
fld
and
retf
sbb
xchg
lods
mov
jl
cmp
(bad)
lock
mov
push
ds
xchg
(bad)
adc
not
sbb
xchg
and
pop
inc
pop
jl
adc
enter
xor
dec
scas
rcl
or
push
pop
les
lods
jmp
xchg
xchg
inc
dec
retf
int
popf
(bad)
mov
out
mov
xor
dec
sahf
pop
pop
les
mov
cmps
dec
mov
xor
adc
cli
mov
mov
ss
push
test
inc
sub
inc
in
(bad)
cmp
retf
pop
cmp
mov
sbb
outs
rcr
(bad)
out
outs
jmp
test
cmp
sbb
jns
push
and
push
(bad)
sbb
sub
shl
or
or
dec
jno
push
lods
jno
or
in
inc
sbb
out
ja
cmp
loopne
sbb
inc
inc
xchg
ja
and
les
mov
aaa
ins
adc
push
fwait
mov
jmp
in
call
js
fs
sbb
xchg
je
je
es
fcomp
mov
ficomp
popf
add
(bad)
or
cmp
dec
xchg
push
movs
cdq
arpl
jp
jl
popf
jne
push
jmp
jle
jp
movs
sub
pop
pop
jne
shr
xchg
and
test
push
cmp
sub
jle
lock
cmp
movs
or
fwait
pop
mov
aam
pop
mov
lods
fldl2e
or
popf
test
fwait
test
and
adc
mov
inc
outs
addr16
jne
out
pop
mov
xor
and
xchg
lods
and
je
mov
mov
(bad)
sub
scas
mov
jmp
xchg
and
out
call
xor
inc
xchg
inc
enter
mov
xor
imul
lods
leave
adc
jge
es
ins
inc
icebp
or
dec
cmp
imul
int3
retf
xor
ror
add
(bad)
xor
xchg
mov
cmps
stos
das
(bad)
bsf
or
sbb
call
mov
call
jmp
movs
lock
cmps
or
sub
je
pop
ja
mov
daa
pop
pop
cmps
add
lea
push
mov
push
leave
jb
pop
add
xor
repnz
fldenv
iret
dec
das
mov
icebp
test
mov
xchg
test
sbb
jg
call
ficom
pop
jecxz
out
rcl
addr16
(bad)
into
dec
and
mov
iret
cmp
or
repz
pushf
test
lock
sti
daa
fidivr
ret
sub
not
dec
das
loope
out
xchg
outs
xor
inc
cmp
sti
test
xor
push
mov
mov
dec
xor
jne
mov
jo
jecxz
bsf
or
cli
data16
ror
xor
mov
jmp
pop
in
push
jns
and
in
dec
ret
pop
sbb
out
test
mov
and
add
adc
cmc
mov
cmp
sub
in
popf
std
mov
cmp
inc
mov
enter
mov
inc
bndldx
jmp
push
mov
and
pop
loop
jg
mov
scas
enter
pusha
imul
aaa
rcr
jo
mov
(bad)
adc
(bad)
mov
jae
xor
(bad)
xchg
cmp
xor
cwde
rcr
jge
fwait
jecxz
mov
ror
pushf
and
dec
aas
pushf
xor
pushf
and
adc
in
mov
inc
sub
ins
xchg
dec
mov
es
mov
loopne
mov
ret
(bad)
(bad)
in
jp
sub
and
inc
xchg
das
movs
jo
mov
pop
fiadd
jo
push
gs
out
bound
fcomp
lock
sbb
out
push
jle
pushf
cld
sbb
je
jb
or
inc
push
mov
arpl
jmp
mov
ret
shr
pushf
sahf
and
clc
inc
mov
sub
cli
nop
pop
nop
bound
mov
dec
out
xor
mov
mov
call
mov
push
lahf
(bad)
cmps
inc
repz
int3
xchg
sbb
dec
inc
xor
mov
sub
lods
addr16
xchg
in
mov
rsm
loop
pop
adc
push
add
cmps
fwait
and
push
dec
leave
pop
pop
xor
inc
pop
xchg
dec
int3
mov
rcl
inc
shl
mov
xchg
sbb
retf
call
cmps
cmp
mov
fucomi
adc
pop
or
inc
pop
mov
lods
jo
sub
jmp
iret
nop
jmp
inc
add
retf
jae
jmp
fcomip
push
(bad)
xchg
popf
fucomp
cmc
jp
fdiv
movs
bound
mov
data16
pop
mov
push
sub
iret
jo
pop
push
jmp
xchg
dec
int
mov
xor
cmc
mov
std
sbb
push
mov
scas
dec
fdiv
vpshuflw
push
xor
add
ins
imul
das
add
pop
mov
mov
pop
inc
mov
ins
out
cli
(bad)
test
mov
sbb
js
jecxz
scas
jg
lods
pop
cmps
jle
ret
jo
push
retf
ins
rol
sub
movs
lock
loopne
popa
test
or
test
and
sub
add
sbb
ret
cmp
in
sub
or
int
add
pop
cmp
xlat
jne
arpl
mov
mov
xchg
add
cs
add
sbb
add
dec
mov
xchg
mov
iret
retf
push
nop
pop
shl
mov
call
or
daa
or
or
cs
sub
test
dec
loope
push
cld
in
sti
cdq
ret
(bad)
jge
sbb
retf
sub
data16
xor
shr
or
pusha
test
sub
ror
mov
call
lock
sbb
(bad)
fidivr
scas
jae
pop
and
sbb
xchg
jmp
mov
xor
add
cdq
sbb
enter
popf
addr16
pop
or
inc
mov
inc
add
ficomp
mov
pop
xlat
mov
mov
(bad)
mov
sbb
fdivp
xchg
mov
mov
ins
xor
or
mov
pop
retf
mov
sub
push
add
pop
sub
cmp
outs
jno
fmul
sbb
lock
loope
iret
cmc
and
int
das
jns
cmp
fsub
jmp
stc
xchg
imul
xchg
cmp
loope
pop
pop
ret
icebp
sbb
inc
xor
add
daa
mov
adc
pop
or
mov
clc
mov
xor
add
pop
rol
ds
cmps
pop
in
ins
scas
push
mov
mov
fmul
mov
fnstenv
add
ret
push
add
adc
adc
fadd
out
test
or
or
hlt
loope
mov
inc
or
or
jnp
mov
mov
cld
fdivp
outs
cmc
mov
or
mov
jbe
out
cmc
inc
mov
loope
iret
dec
lds
add
add
mov
mov
or
cmp
out
jp
jg
in
and
out
in
adc
cmp
xlat
(bad)
out
push
cmc
or
pop
cwde
sbb
jmp
test
xor
or
add
(bad)
loope
cld
mov
push
call
mov
cli
mov
lahf
std
jo
jg
arpl
jg
daa
jl
xlat
jns
shl
addr16
pop
jns
out
leave
xchg
pop
jbe
cmps
add
loopne
mov
bound
xchg
jne
cs
arpl
out
or
leave
daa
add
sbb
xor
add
sub
es
xor
arpl
jns
ja
gs
cmp
or
cmp
js
jbe
pop
jp
addr16
xlat
add
ja
mov
(bad)
daa
add
sbb
arpl
test
dec
loopne
(bad)
pop
clc
xor
adc
add
aaa
je
add
add
pop
js
pop
push
dec
pop
arpl
sbb
push
ja
mov
push
sub
ror
dec
mov
js
add
test
push
dec
test
ins
add
add
add
adc
dec
jge
inc
mov
jg
clc
mov
div
push
jbe
mov
mov
sub
inc
jo
iret
rol
adc
mov
sub
jnp
loopne
or
cmp
mov
push
mov
xchg
jl
xchg
jg
fmul
mov
mov
mov
add
rol
sub
stos
push
je
nop
mov
jne
sub
pop
jge
test
mov
daa
ds
clc
add
inc
test
dec
test
mov
pop
push
push
(bad)
cmp
mov
test
out
pop
add
dec
jp
xchg
mov
add
loopne
scas
cmp
sub
add
sub
mov
mov
cmp
jbe
sbb
cmps
mov
imul
lea
mov
sbb
and
xchg
xchg
dec
mov
xchg
xor
in
add
adc
or
lock
pop
push
xor
xchg
or
inc
out
inc
mov
pop
xlat
add
cmp
cmp
in
fcomp
cmp
xchg
mov
jne
nop
mov
sbb
xchg
sub
mov
xchg
enter
mov
cwde
test
cmp
pop
cdq
mov
enter
add
mov
jl
(bad)
push
mov
iret
mov
push
sub
jo
pop
dec
mov
xchg
inc
inc
dec
ja
jo
js
ins
cmp
xchg
dec
sbb
nop
icebp
(bad)
mov
in
xchg
es
push
push
cwde
jp
out
out
xchg
cdq
or
cwde
mov
xchg
mov
xchg
out
js
jo
add
and
pop
jns
cmps
or
out
mov
add
test
xchg
pop
add
mov
lea
push
test
jnp
cwde
push
mov
sub
xor
xchg
call
or
jo
test
adc
mov
xchg
pop
cdq
pop
sahf
leave
clc
mov
test
dec
mov
mov
xchg
lock
pop
mov
cdq
scas
jmp
mov
xchg
push
imul
cdq
lods
cmp
call
test
xchg
inc
or
jmp
jns
je
mov
dec
stc
and
stos
jmp
lods
fldenv
cmp
stos
xchg
mov
mov
cwde
pop
stc
add
leave
pushf
icebp
jmp
popf
push
mov
sbb
xchg
sub
test
jae
mov
cmp
sub
call
out
fcom
loopne
xor
jns
stos
(bad)
mov
push
sbb
add
and
scas
mov
sub
jo
repz
pop
cmp
push
enter
leave
cmps
and
cdq
sbb
dec
mov
dec
dec
mov
movs
xchg
and
xchg
push
pop
popf
xchg
leave
test
mov
ficomp
jns
jmp
mov
jmp
stos
dec
mov
xor
movs
jae
mov
mov
popf
outs
dec
xchg
xchg
sbb
dec
xchg
sub
xchg
dec
jmp
mov
xchg
inc
cmp
mov
mov
jp
xchg
in
sub
mov
mov
stos
mov
and
je
sub
retf
dec
movs
inc
fldenv
movs
cmp
lahf
push
add
mov
movs
stc
and
push
xor
or
nop
mov
leave
add
stos
lods
xchg
movs
mov
jmp
stos
xchg
xchg
jmp
mov
pop
scas
push
xchg
pushf
mov
sahf
out
dec
dec
sub
mov
test
(bad)
jp
in
mov
mov
lods
mov
xchg
pop
imul
fwait
cmp
push
mov
mov
imul
push
dec
xchg
mov
sahf
pop
cmp
jp
sub
cmps
retf
mov
cmp
mov
pop
sbb
imul
mov
or
inc
mov
sti
mov
jp
lods
cmp
mov
fdivrp
or
retf
fimul
add
or
mov
dec
mov
sbb
jp
popa
lock
js
sub
mov
mov
leave
add
mov
inc
lock
or
sti
scas
(bad)
mov
cli
mov
jmp
xchg
and
jo
stos
adc
mov
sbb
mov
mov
mov
or
mov
sub
fwait
mov
imul
dec
or
add
cwde
jnp
mov
adc
fwait
mov
mov
push
or
ins
xchg
nop
sbb
sar
sub
and
mov
jmp
xchg
mov
out
add
add
sbb
add
sbb
add
xchg
sbb
ins
mov
fistp
add
push
add
mov
mov
mov
mov
or
nop
mov
pop
xchg
cdq
jmp
ret
das
lods
xchg
(bad)
jp
mov
les
mov
aaa
pushf
xchg
dec
mov
push
fadd
cmp
mov
mov
dec
movs
fucomip
call
add
mov
xlat
rcr
mov
fwait
dec
add
add
mov
leave
mov
sbb
cld
imul
mov
pushf
(bad)
mov
enter
mov
mov
cld
add
lds
retf
lds
retf
mov
add
retf
sbb
lds
mov
pushf
lds
jns
inc
xor
add
sar
mov
or
sub
dec
fwait
xchg
or
int
leave
or
sbb
dec
cld
retf
mov
rcr
out
iret
mov
fsubr
cld
iret
cmc
fcmovne
push
cmp
mov
popf
das
(bad)
stos
sahf
out
retf
cmps
jnp
(bad)
leave
rcl
pop
rcr
mov
dec
vsubss
lods
ins
int
jno
xchg
cld
mov
mov
(bad)
retf
shr
icebp
dec
movs
cld
retf
int3
jmp
shr
jge
fsubrp
shl
imul
ins
mov
in
iret
inc
popf
mov
jge
add
fwait
add
dec
or
xor
ds
sub
in
mov
std
int
sub
adc
sbb
popa
in
movs
fld
push
(bad)
shl
sub
imul
hlt
sub
push
lea
in
aad
in
shl
aad
call
enter
pop
(bad)
xlat
lahf
imul
sbb
mov
lds
int3
sub
retf
retf
daa
(bad)
popf
shl
jl
pop
(bad)
xchg
mov
mov
iret
mov
mov
retf
ret
cmp
lds
test
fild
lods
(bad)
enter
ds
cld
scas
sub
cwde
jle
call
push
ins
add
add
nop
(bad)
jl
jne
into
ficomp
aad
ins
add
push
fnstsw
retf
fldcw
sar
sbb
mov
iret
ror
shl
xlat
mov
into
cmc
ins
shl
cld
ror
sbb
mov
fisttp
fbld
aad
popf
fucomi
stos
int3
jne
xlat
jp
(bad)
loop
shl
sbb
push
scas
fst
std
loopne
jge
or
fiadd
outs
fidiv
fldenv
mov
ins
fidiv
(bad)
dec
aam
jl
daa
(bad)
scas
or
ficomp
(bad)
jb
(bad)
mov
scas
cwde
cdq
popf
fucomi
mov
cwde
dec
(bad)
(bad)
fidivr
jns
fwait
rol
push
iret
int
stos
add
stos
dec
mov
and
outs
in
xlat
inc
jge
xchg
mov
fs
ja
in
lods
out
cmp
jle
aas
fild
jecxz
push
loopne
sahf
frstor
divps
jp
aam
cs
(bad)
in
push
fsub
ins
out
or
add
ficomp
sub
loope
cs
mov
push
push
loopne
sub
xor
cmp
repnz
jns
xlat
inc
mov
cmps
(bad)
shl
cmp
pusha
push
mov
fisttp
dec
iret
(bad)
cmp
sar
shr
push
jle
(bad)
in
mov
shl
loopne
sub
fstp
out
fucomp
and
xchg
out
jmp
or
ja
out
sahf
in
mov
loop
cs
out
fcmove
add
outs
out
jle
fisttp
loope
mov
inc
pop
fldenv
shl
fild
fisttp
out
iret
into
leave
loopne
loopne
std
loope
jg
mov
lock
pop
jmp
daa
int
add
fidivr
test
fcomip
popf
loopne
(bad)
ficomp
ja
pop
adc
or
rol
fcmovb
push
add
out
loop
dec
repnz
call
rcl
scas
loope
mov
ret
outs
jmp
xor
call
aad
lods
fdivrp
jle
int
loope
leave
in
scas
fadd
jg
leave
sbb
int
add
in
jae
loope
das
lock
push
xlat
xor
hlt
dec
lahf
lds
out
jo
out
into
jmp
mov
sub
mov
in
das
jecxz
cs
std
out
dec
out
jmp
dec
lahf
div
dec
(bad)
aas
jmp
aas
test
test
icebp
inc
pop
not
pop
cmp
xchg
cmc
push
div
push
cli
or
adc
xor
mov
lods
pop
sti
jo
(bad)
mov
jecxz
pop
cld
mov
shl
fistp
sti
ret
scas
repnz
pop
add
cli
mov
sti
retf
iret
retf
hlt
pop
out
neg
sahf
cmc
xlat
(bad)
stc
xor
add
(bad)
out
aam
xchg
dec
iret
not
cld
aam
fidiv
cld
push
iret
out
outs
out
fld
lea
(bad)
sub
xchg
add
test
sub
add
mov
xchg
mov
pop
xchg
mov
lea
(bad)
mov
pop
sbb
stos
call
test
cwde
mov
sub
xchg
mov
adc
mov
mov
rcr
xchg
mov
(bad)
mov
(bad)
mov
icebp
in
sub
clc
in
ret
loopne
cmps
mov
stos
pop
sub
push
jno
add
push
inc
push
push
aas
xor
not
rcl
dec
push
fwait
push
cs
ins
rol
mov
jne
daa
in
jecxz
xchg
mov
sahf
cmps
ins
(bad)
imul
adc
mov
xchg
sub
mov
adc
xor
sbb
mov
jmp
pop
dec
cmp
mov
sbb
add
mov
mov
dec
xchg
adc
retf
push
jmp
dec
repnz
stos
cmp
push
cmps
retf
fsubr
retf
inc
rcr
nop
xchg
pop
push
fs
jmp
fwait
add
retf
gs
int3
jb
retf
xchg
inc
add
push
test
pop
push
sahf
mov
lods
int
repz
jne
aad
xor
fs
test
jp
mov
mov
push
iret
push
adc
(bad)
shl
inc
sar
mov
ror
ja
xor
sub
(bad)
(bad)
shl
jbe
stc
idiv
sub
fadd
hlt
push
fidivr
jne
pop
cmp
push
mov
shl
xchg
mov
addr16
adc
sti
lods
je
scas
hlt
xchg
bound
(bad)
enter
xor
adc
add
in
add
dec
enter
mov
push
leave
or
pop
cmp
mov
pop
xchg
push
ds
xchg
dec
mov
in
pop
mov
arpl
mov
or
push
mov
ja
xchg
mov
sqrtps
push
inc
in
arpl
adc
add
dec
inc
icebp
lds
sbb
dec
je
jmp
sub
xchg
pop
imul
push
pushf
mov
jmp
test
pushf
mov
out
inc
lods
mov
adc
movups
adc
lods
sar
ss
sub
push
cmps
(bad)
fisubr
xor
cmp
mov
mov
push
nop
jmp
fidivr
adc
lods
push
inc
and
lods
cmp
add
stos
adc
out
rcr
ja
sbb
mov
iret
cmp
in
cmp
adc
cld
imul
xchg
and
add
rol
movs
aam
lds
(bad)
and
int
or
inc
int3
cs
in
add
cmp
xor
pop
jge
iret
aaa
push
sub
jmp
popf
je
or
stos
enter
in
mov
inc
adc
ins
mov
iret
out
(bad)
sbb
mov
mov
or
and
jns
retf
cmp
dec
xor
or
mov
adc
and
xor
mov
ds
cmp
cmp
xor
jl
xlat
mov
sub
movs
arpl
mov
pop
shr
pop
sti
xor
mov
cmp
jb
push
add
dec
push
loopne
mov
out
(bad)
repz
jnp
pop
jle
jne
mov
scas
arpl
jl
ss
mov
mov
popa
pop
mov
jle
dec
cmp
in
fdivr
in
pop
call
mov
ds
rcr
xor
xor
push
adc
not
mov
lods
cmp
int
adc
adc
or
push
imul
xchg
cmpxchg
cld
push
cmp
dec
or
pop
mov
(bad)
xchg
je
push
in
xchg
sbb
lea
jbe
inc
sbb
lods
test
sub
push
ret
mov
or
xchg
cmps
sub
mov
inc
mov
mov
mov
pop
mov
mov
call
out
inc
call
mov
inc
sahf
dec
rol
cwde
(bad)
cmp
sbb
or
jne
xchg
or
nop
sbb
das
push
jle
mov
aaa
inc
shr
popf
sbb
adc
mov
dec
xchg
adc
retf
xor
outs
imul
mov
movs
sbb
xor
les
xchg
stc
dec
data16
cdq
rol
gs
jae
mov
sbb
outs
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
in
add
retf
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
or
stos
add
mov
jmp
mov
call
push
cdq
retf
sub
sub
stos
add
shr
mov
rcl
xor
jl
add
push
jbe
add
adc
sub
jle
inc
pop
sub
push
mov
movs
sub
dec
xlat
shl
ss
std
sub
mov
mov
jge
cmp
(bad)
es
sub
jmp
icebp
dec
push
and
ss
lea
jmp
dec
mov
(bad)
jo
add
mov
(bad)
scas
xchg
mov
adc
loope
inc
dec
sbb
pop
neg
mov
lahf
fcmovnbe
jmp
push
retf
shl
(bad)
xchg
mov
out
mov
or
cwde
mov
jne
jne
push
or
test
push
outs
adc
popa
add
(bad)
or
xchg
jnp
out
mov
ret
rol
fdiv
push
xlat
mov
push
mov
inc
cmp
adc
(bad)
out
imul
out
rdmsr
or
and
lock
pop
or
icebp
mov
nop
outs
lods
(bad)
sti
ret
inc
outs
or
add
add
adc
mov
add
outs
or
mov
jbe
sbb
rcr
rol
ja
and
jge
fild
lock
ds
add
clc
cld
push
and
mov
out
sbb
cmp
cs
repz
push
xchg
cli
inc
int
sub
loopne
inc
loopne
xchg
or
fs
ja
adc
xchg
mov
jns
pop
jbe
xchg
or
pop
(bad)
sub
aad
pop
fcmovnb
aam
je
or
fsubr
xchg
mov
aaa
cmp
sub
jnp
jecxz
outs
mov
sbb
enter
sbb
fidiv
das
cli
aam
and
imul
aam
div
push
cmp
mov
or
out
lods
cmp
sbb
add
rcl
mov
mov
jmp
add
(bad)
push
test
ja
lds
outs
and
ins
xlat
push
into
jbe
lods
mov
mov
ret
retf
outs
(bad)
iret
pop
repnz
add
push
and
add
int
pop
cmp
in
push
xchg
lods
inc
std
loope
aaa
inc
out
jle
int
pushf
jmp
out
jl
dec
pop
je
aas
sti
repz
test
pop
fimul
cmp
push
je
xchg
add
cmp
jmp
fst
lahf
mov
adc
xchg
xchg
mov
add
(bad)
(bad)
mov
jp
repnz
xor
imul
add
int
jo
jmp
aam
inc
cli
fucomi
mov
loop
mov
add
push
cmp
cmp
loopne
jg
int
lahf
mov
aad
mov
fadd
pusha
pop
das
push
stos
adc
mov
inc
cmp
xlat
cmps
jle
cwde
inc
ins
test
dec
(bad)
repnz
ja
scas
test
jo
adc
push
mov
int
mov
test
pop
rcl
cs
(bad)
sbb
sbb
scas
jb
ret
dec
test
arpl
jl
xor
sti
not
(bad)
imul
sbb
xor
pop
ss
aaa
ins
mov
jg
adc
loope
pop
ss
imul
push
xchg
jge
xlat
add
loopne
adc
inc
daa
jle
mov
adc
out
out
adc
sub
rol
lock
inc
mov
or
and
pop
or
mov
adc
xor
adc
cld
cmps
jge
inc
add
xchg
aaa
outs
fisub
or
movs
in
in
js
ss
xchg
xchg
xchg
jg
out
xor
imul
or
push
test
add
fdivr
or
xlat
jg
inc
jno
sbb
jbe
mov
jb
call
sub
jno
(bad)
mov
and
cmp
imul
cmova
pop
je
mov
ds
pop
mov
jnp
inc
jae
mov
adc
test
ja
ja
push
cwde
test
jo
(bad)
mov
stos
cmp
jbe
mov
add
enter
fs
adc
jl
mov
push
scas
pop
push
push
jle
aaa
pop
ins
sbb
je
mov
xchg
jp
cmp
xchg
mov
lock
xlat
(bad)
sti
(bad)
mov
cmps
push
xchg
je
cmp
mov
pusha
inc
aaa
push
cmps
jbe
out
aas
(bad)
push
jge
pop
cdq
aaa
pop
dec
call
push
test
cmps
(bad)
out
jg
jle
test
push
push
pop
xlat
(bad)
jl
xchg
call
imul
cmc
xchg
bound
(bad)
cs
pushf
jbe
and
imul
jo
jl
addr16
jp
dec
add
mov
les
not
ja
dec
ins
adc
push
aam
outs
adc
fsub
test
jb
sub
push
push
mov
mov
push
cmp
mov
inc
out
inc
push
xchg
xchg
or
xchg
mov
push
adc
mov
mov
ins
sub
jbe
mov
mov
js
jbe
pop
aad
xchg
mov
jge
fld
mov
mov
js
inc
mov
mov
nop
dec
and
push
arpl
jge
in
inc
jo
jae
jns
mov
mov
pusha
mov
xor
fs
mov
imul
pop
or
js
cmp
pop
cld
test
xchg
popa
rcr
pop
jne
fisttp
loope
jg
cdq
jne
es
mov
pop
bound
fcomp
push
sub
cmp
gs
test
aaa
cmps
xchg
inc
and
cwde
arpl
fstp
sbb
xchg
xchg
adc
mov
data16
mov
adc
push
push
lds
enter
imul
pop
dec
loopne
repnz
push
push
arpl
pop
push
add
in
jns
movs
xor
gs
push
inc
push
das
in
dec
dec
movs
xor
dec
cmp
add
pop
movs
arpl
inc
pop
push
dec
adc
push
jmp
cmps
fs
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
push
push
push
xchg
xchg
xchg
ins
push
aam
aam
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
mov
int3
in
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
lods
scas
lods
and
and
jle
sub
sub
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
mov
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
jg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
std
test
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
or
scas
pop
loopne
or
add
and
lods
jg
mov
retf
aaa
mov
mov
push
mov
retf
adc
and
lods
sub
cmps
out
xchg
jb
test
call
mov
and
pop
xor
lods
out
dec
mov
dec
mov
stos
mov
jmp
mov
mov
retf
mov
push
jnp
ds
xor
sahf
pop
mov
imul
shr
dec
dec
mov
jnp
push
mov
cmp
pop
retf
mov
shl
outs
mov
pop
nop
add
jo
daa
shl
cli
popf
lea
mov
mov
or
sub
sti
mov
cmp
push
push
lock
mov
jnp
neg
mov
mov
dec
mov
sbb
jmp
mov
mov
pop
mov
pop
add
shl
nop
mov
mov
cmp
add
inc
mov
nop
mov
pop
mov
mov
and
out
scas
jecxz
nop
out
dec
lods
xchg
or
pop
mov
sub
pop
mov
jmp
add
shl
add
mov
sti
mov
mov
mov
jnp
jp
mov
sbb
shr
cvttps2pi
or
(bad)
jmp
or
mov
push
inc
mov
stos
xchg
lock
cmp
cmovl
out
jmp
ret
ds
ret
push
add
jl
sbb
stos
adc
mov
adc
cld
ret
inc
lods
xchg
add
les
ret
lds
push
or
push
ins
lds
scas
sbb
ret
(bad)
pusha
in
lds
xor
pop
loopne
pop
cld
(bad)
mov
add
les
add
push
add
pop
mov
in
lds
mov
les
nop
mov
in
mov
add
mov
xchg
ret
mov
mov
mov
out
js
and
add
leave
mov
leave
fmul
leave
add
or
retf
retf
or
leave
inc
stos
add
jl
mov
lds
add
lods
xchg
mov
int3
add
pop
or
lods
int3
call
test
(bad)
shr
sbb
add
mov
mov
int3
sti
sub
push
mov
mov
leave
pushf
in
leave
mov
add
into
lock
das
add
pop
inc
add
jo
in
lods
add
lods
retf
into
mov
iret
stc
mov
or
into
sar
hlt
cld
shl
rcl
sub
xor
mov
iret
adc
iret
jp
rol
mov
inc
jmp
into
or
ror
sub
and
xor
repz
rcr
sbb
rcr
(bad)
xor
into
xor
inc
mov
daa
sub
repz
xor
shl
dec
rcl
into
mov
into
cmp
rol
iret
inc
popf
aam
(bad)
aad
stos
aad
sbb
sbb
movs
std
sub
dec
int
pop
push
add
cld
rol
add
lock
cmp
in
ins
(bad)
shl
aad
jge
pop
ins
rcl
popf
add
xlat
test
push
ins
fdivr
into
push
(bad)
shl
dec
aad
jge
bound
mov
pop
pop
int
dec
fcomp
xlat
sahf
int
nop
or
lock
ror
ror
xchg
sbb
adc
and
fist
lods
xchg
mov
sbb
sbb
or
dec
(bad)
xlat
mov
add
adc
xchg
ins
shl
stos
aad
(bad)
ss
sub
fsubrp
cmp
xchg
dec
sar
int3
sar
sti
cmp
xchg
fstp
popf
ins
(bad)
popf
aad
cmp
outs
fstp
mov
fadd
fdivp
or
repz
xchg
shr
in
fmul
scas
fdivr
or
std
cmp
or
fdivrp
pop
fcom
mov
rcr
loope
sbb
inc
ins
fdivr
(bad)
pop
loopne
in
fmul
rol
daa
out
fcomp
fsub
sbb
sub
add
int
jne
fnsave
leave
dec
lock
cmp
ret
adc
fcom
mov
inc
jle
push
push
iret
and
aad
fst
stos
or
outs
ins
shl
in
loop
sub
pushf
sbb
sbb
ficomp
shr
in
ror
ins
rcl
fisub
int
jne
iret
test
fsubr
cmp
add
sub
xchg
in
shr
aad
mov
stos
cmp
add
out
(bad)
fld
out
shl
out
jge
mov
nop
in
out
outs
rol
stos
fisttp
daa
mov
js
rol
lods
add
loope
scas
in
sahf
into
in
or
jo
loop
dec
out
sahf
add
out
(bad)
out
js
aad
(bad)
in
jle
lods
lods
jmp
add
fcmovnbe
ds
outs
shl
std
in
shr
ret
(bad)
xor
in
jge
std
mov
push
dec
mov
lock
aam
ds
inc
into
in
sub
test
loop
ins
in
and
jmp
out
out
(bad)
frstor
ins
rcr
into
sbb
aad
out
lock
pop
jmp
outs
lock
in
jmp
fist
stos
pop
lock
aam
sub
lea
mov
add
into
in
lods
fsubr
add
cmp
add
retf
dec
stos
(bad)
(bad)
dec
out
sub
push
ins
icebp
add
fidivr
in
sub
push
cs
fcomp
fsubr
or
mov
icebp
dec
das
shl
(bad)
out
out
add
ds
les
pushf
cld
out
fdivp
retf
dec
in
jle
int
in
sbb
add
(bad)
icebp
sub
popa
pop
cmc
fistp
shr
ds
dec
xor
adc
bnd
into
add
jle
lock
jecxz
sahf
fcomp
fdivr
int3
in
cmps
pop
repz
ds
nop
add
icebp
pop
jo
mov
(bad)
fdivp
mov
in
cmp
stc
lahf
iret
add
sub
cmp
loop
into
repz
xor
call
out
out
pop
fiadd
aad
mov
pop
pop
fisttp
mov
mov
lock
lahf
out
push
(bad)
cld
mov
clc
sar
into
push
(bad)
retf
inc
lahf
repz
std
fimul
fisttp
ds
hlt
pop
lahf
test
in
lahf
cli
mov
cld
(bad)
call
pop
(bad)
(bad)
bnd
stc
inc
outs
clc
mov
mov
pusha
sub
cmc
xor
cwde
and
mov
mov
sub
arpl
jmp
pop
xchg
repz
sbb
cmp
test
shl
sub
call
pop
fcmovne
mov
mov
sbb
mov
lea
int
dec
sub
dec
in
ins
lods
sub
fisttp
lahf
retf
dec
mov
cs
jmp
aas
pop
cmp
xchg
call
push
jmp
cs
push
inc
mov
dec
xlat
ss
adc
xchg
aaa
test
lock
sub
dec
push
test
lahf
and
dec
add
enter
nop
dec
sbb
leave
adc
bound
adc
xor
movs
jle
xor
enterw
xor
mov
or
rcl
pop
xchg
sbb
jge
jb
(bad)
lods
sub
fiadd
xor
repnz
movs
fnsave
pop
mov
or
shr
push
mov
pop
js
test
into
cli
push
ins
and
ja
dec
pop
push
jl
in
sub
mov
inc
(bad)
push
mov
xchg
push
lahf
movs
call
out
fimul
fcomp
test
jecxz
pop
ja
push
imul
pop
and
lds
sub
sbb
sub
jnp
mov
or
or
pop
xor
mov
jl
dec
sub
popf
aaa
fstp
cmp
test
les
js
adc
int
pop
hlt
aaa
add
pushf
adc
adc
add
pop
push
loope
repz
sub
and
test
js
call
add
dec
or
stc
fcom
(bad)
inc
dec
dec
xchg
mov
mov
dec
sub
pop
and
or
cmp
scas
push
xchg
imul
cwde
bound
rol
adc
(bad)
xchg
sub
pop
pop
cmp
xchg
pop
pop
xchg
pop
jl
adc
call
cmps
sahf
dec
xchg
push
movs
pop
mov
(bad)
sahf
ja
sbb
ja
fiadd
xchg
push
or
nop
ins
xchg
cdq
movs
and
test
fs
cwde
cmps
test
dec
jle
inc
stos
fwait
jo
leave
adc
pusha
xor
push
mov
xchg
add
dec
stc
leave
pop
outs
ds
bound
imul
xlat
add
imul
mov
(bad)
call
xchg
dec
imul
scas
in
or
dec
add
stos
test
mov
daa
lea
stos
call
retf
or
loopne
daa
fcmovnb
xchg
xor
dec
test
xchg
call
scas
sub
cmp
mov
(bad)
push
test
shr
ss
mov
mov
retf
lods
pusha
or
out
add
mov
int3
inc
mov
aas
cmp
mov
dec
ret
cmp
jl
(bad)
cmp
push
cmp
lods
xor
ss
xor
inc
rcr
nop
mov
outs
add
shr
loop
fsub
fnstsw
int
mov
xor
xchg
ja
sub
popf
mov
pop
mov
loopne
pop
enter
repz
retf
movs
hlt
fidivr
xchg
repnz
sub
sbb
clc
jg
xchg
cmp
int
add
mov
push
in
jnp
dec
shr
jl
rol
push
sub
ds
enter
pop
daa
sar
dec
xor
cmp
out
xchg
mov
xchg
cmp
not
outs
xor
mov
sbb
jae
stos
fcmovnbe
add
(bad)
xor
(bad)
xchg
mov
jmp
lock
cli
rcr
or
sahf
and
cs
mov
cmp
sbb
jge
in
inc
dec
mov
div
and
xchg
push
ror
jne
jmp
icebp
jle
mov
jle
jg
mov
out
out
popf
iret
int
dec
(bad)
packssdw
mov
lock
sbb
add
sbb
add
pop
idiv
cmp
sbb
stos
dec
pop
inc
retf
mov
mov
inc
cld
dec
mov
dec
cmp
pushf
gs
ins
adc
xor
lock
push
enter
mov
loopne
push
push
or
mov
fisttp
mov
mov
iret
jns
push
call
dec
mov
in
or
inc
mov
xor
inc
stc
or
inc
push
jb
cmp
mov
mov
push
jl
fstp
xchg
dec
push
push
push
jg
mov
sbb
mov
dec
sub
movs
cdq
cmp
(bad)
call
fmul
mov
or
clc
out
test
je
cmp
or
mov
cmps
pushf
or
jp
out
in
dec
dec
ss
xchg
adc
and
push
xchg
test
add
adc
dec
sti
out
xchg
inc
mov
out
and
icebp
sub
imul
xchg
xor
mov
fld
push
mov
test
add
into
or
xchg
mov
adc
jmp
icebp
jo
cmp
dec
lea
rcl
add
cmp
mov
aaa
mov
enter
leave
jmp
lea
push
(bad)
push
and
daa
add
or
(bad)
cmp
xor
arpl
push
rcr
inc
push
(bad)
scas
jne
call
push
inc
xor
ficom
mov
xchg
enter
test
add
pop
shl
lds
ret
jge
in
pop
mov
adc
sub
sub
mov
es
pop
stos
pop
ja
ja
ret
sub
mov
mov
test
sub
int
jbe
(bad)
ret
pop
mov
fsubp
out
push
mov
scas
mov
pop
ins
xor
out
mov
cli
mov
jne
lahf
push
jmp
lods
xor
pop
icebp
into
mov
dec
push
fcomi
stos
xchg
or
fld
add
ss
icebp
jnp
jmp
mov
xchg
or
adc
shr
scas
jg
cmp
add
(bad)
cwde
or
add
push
add
inc
jle
in
jecxz
push
mov
add
(bad)
cmp
mov
mov
adc
push
xor
sbb
ror
pop
jae
xchg
out
in
aaa
ret
push
add
pop
mov
mov
pop
les
data16
jg
ins
popa
(bad)
xor
lods
in
xchg
sahf
mov
sbb
push
into
mov
inc
pushf
fbstp
fiadd
xor
gs
add
mov
cmp
push
mov
cmc
test
pop
add
push
jp
or
inc
add
push
mov
pop
lods
addr16
jmp
xor
xor
push
stos
sbb
xor
test
jl
inc
sub
adc
cmp
pusha
mov
pop
in
in
push
(bad)
jp
xlat
inc
mov
ins
ins
xor
sbb
fiadd
fucomp
xchg
pushf
inc
or
and
fisubr
lods
jecxz
imul
xchg
push
ret
add
sub
shl
rcl
jo
and
inc
mov
outs
push
add
aam
popf
idiv
inc
jl
mov
mov
jnp
das
in
push
cmp
sub
cmp
sti
into
inc
mov
push
call
adc
or
inc
(bad)
idiv
sbb
jae
add
add
(bad)
xchg
push
jae
inc
pop
jmp
hlt
add
dec
cli
aad
(bad)
lods
pop
fucom
inc
outs
js
sar
and
and
push
cwde
jne
(bad)
cdq
sbb
mov
mov
stos
hlt
(bad)
aaa
ja
add
jnp
(bad)
fdivp
jl
push
jmp
lahf
xor
(bad)
stos
iret
fsub
pop
addr16
adc
fs
jns
(bad)
ja
retf
fucomp
(bad)
push
sub
movs
stos
jne
xor
(bad)
sbb
js
daa
(bad)
jge
addr16
out
sbb
jnp
jae
sub
push
inc
nop
rcr
fcomip
in
(bad)
jns
jl
sbb
jp
sbb
fiadd
or
mov
aas
icebp
inc
aaa
cli
aad
pop
js
je
in
addr16
repz
cmc
out
mov
rol
pusha
push
cld
out
dec
xor
mov
add
jg
pusha
add
jnp
aaa
inc
add
cli
push
add
jg
cwde
dec
sti
pop
adc
jg
pusha
add
jp
xlat
jl
addr16
pop
jne
ja
scas
aaa
add
cmc
jbe
test
jge
cmps
jge
nop
dec
pop
pop
jns
ja
push
out
push
call
dec
mov
out
inc
sbb
adc
jg
push
add
mov
in
ja
pusha
ja
sub
cli
(bad)
js
ja
(bad)
stc
mov
or
jg
(bad)
jl
fdiv
aaa
jne
pop
jle
in
pop
pop
sbb
test
sar
sub
push
je
jae
push
add
add
add
aaa
jg
xchg
push
jle
jge
(bad)
jle
xor
xlat
je
mov
inc
sbb
ja
xlat
je
mov
loopne
or
mov
xchg
push
xchg
mov
mov
xchg
pop
jae
loopne
pusha
test
add
and
test
mov
outs
je
test
mov
mov
stos
mov
inc
mov
cwde
add
jae
fdivr
enter
add
inc
add
pusha
adc
jbe
pop
xchg
lock
mov
cmp
sub
pop
cmps
mov
js
dec
(bad)
fdivr
arpl
add
cmps
xchg
add
add
cwde
add
sub
add
mov
cmp
cmp
sub
fadd
sub
and
and
in
xchg
je
xchg
push
inc
lea
test
data16
jae
sub
xchg
nop
xchg
or
(bad)
sbb
jo
or
(bad)
jne
jle
xor
mov
cmp
xchg
stc
jp
fdivr
imul
xchg
jmp
cmp
leave
add
inc
stc
or
jne
cwde
mov
mov
sbb
xchg
pop
jo
dec
jmp
inc
loopne
addr16
outs
sbb
xchg
pop
dec
xchg
push
fnstcw
fmul
pop
jle
clc
jp
pop
xchg
inc
daa
lea
(bad)
and
cwde
sbb
mov
xchg
jne
xchg
in
push
and
adc
xchg
pop
jbe
not
pop
xchg
mov
call
imul
jp
xchg
or
xchg
xchg
jbe
xchg
dec
or
rol
adc
or
fstp
fst
mov
fwait
or
mov
pop
and
jge
cmp
jmp
jns
cdq
repz
xchg
test
lahf
nop
sbb
leave
inc
mov
xchg
xchg
cdq
xchg
and
xchg
and
jl
ja
bound
in
add
jbe
lahf
lahf
sar
xchg
sub
(bad)
sub
sub
test
mov
xchg
(bad)
cmp
fiadd
push
jns
mov
leave
add
xchg
inc
xor
pop
inc
add
sub
mov
sbb
pop
xchg
mov
jne
clc
mov
cmp
addr16
lea
mov
mov
add
xchg
and
gs
call
add
jl
mov
fld
jo
aam
cmps
inc
mov
and
call
mov
xchg
add
dec
xchg
sbb
xchg
and
xchg
dec
sub
leave
xchg
shr
stos
popf
jle
xchg
xlat
cdq
xchg
mov
stos
ds
cmp
xchg
jle
cmps
jno
pushf
imul
fldenv
jmp
pop
cli
call
cmp
and
dec
pop
movs
pop
or
imul
test
in
dec
mov
pop
or
lds
leave
mov
mov
pop
pop
(bad)
xchg
sar
scas
ds
gs
retf
(bad)
sbb
movs
cmp
(bad)
jmp
add
jp
(bad)
call
pop
mov
add
test
xlat
mov
mov
retf
mov
jmp
cmps
xlat
dec
mov
stos
sbb
pop
retf
sub
cwde
adc
mov
sub
fwait
mov
call
inc
dec
lods
std
mov
sub
cmp
stos
test
or
jnp
es
mov
fidiv
sti
mov
mov
and
add
cwde
jno
mov
fldcw
mov
cdq
test
or
mov
dec
mov
imul
mov
mov
lahf
rol
mov
jecxz
test
(bad)
cli
mov
or
mov
sbb
mov
xor
add
test
sub
sti
scas
or
xchg
jp
xchg
jns
add
cmps
lea
lahf
mov
and
mov
sti
stos
clc
retf
imul
or
cwde
lea
xchg
mov
mov
cmp
or
fnstcw
sub
leave
push
arpl
mov
leave
mov
sub
(bad)
dec
mov
sbb
fwait
mov
retf
mov
sub
pop
add
jmp
test
adc
clc
push
cmp
jmp
jbe
cmps
pop
add
sbb
add
mov
mov
mov
sahf
dec
loopne
jle
add
mov
mov
(bad)
adc
mov
in
ret
ret
leave
stos
jle
sbb
pop
fstp
sbb
sbb
lahf
xor
mov
lds
cld
les
jl
pop
lods
mov
jmp
push
sar
ret
xabort
mov
mov
lods
shr
mov
sub
test
or
mov
mov
pop
mov
dec
xchg
ins
imul
scas
mov
mov
cdq
mov
jnp
aaa
out
xor
mov
mov
cmp
sub
rol
cdq
cmp
sbb
and
stos
cmp
add
ror
sbb
dec
mov
mov
aaa
stos
mov
fwait
mov
ins
enter
jae
mov
retf
add
rcr
add
into
jbe
and
sbb
pop
cmp
in
int
cmp
mov
dec
xchg
pop
xchg
ins
sbb
jl
sub
lods
sbb
ins
or
pushf
into
sub
int3
les
fadd
test
stos
enter
sbb
mov
retf
mov
fwait
leave
mov
mov
mov
jp
(bad)
xor
add
int3
(bad)
jmp
add
enter
sub
int
sbb
add
enter
lea
cmp
cmp
add
lock
int
jmp
sar
int3
jmp
mov
mov
sbb
aaa
std
leave
movs
cmp
imul
jp
int
rcl
rol
rol
int
ins
(bad)
mov
sar
pop
mov
cmp
and
(bad)
xchg
mov
icebp
sub
iret
pushf
leave
xchg
sbb
dec
aam
lods
enter
hlt
cld
iret
sar
fwait
rcr
dec
int3
mov
retf
(bad)
jmp
dec
cld
int3
adc
das
pop
(bad)
(bad)
sub
retf
retf
iret
mov
sar
fiadd
iret
and
adc
pop
jo
add
mov
imul
(bad)
(bad)
pushf
fadd
ficom
(bad)
mov
push
mov
sub
push
popf
into
inc
std
leave
lds
mov
xor
(bad)
in
aam
cld
frstpm(287
dec
fld
(bad)
jecxz
(bad)
in
mov
dec
aam
pop
into
in
sar
sbb
sbb
imul
dec
lods
or
addr16
enter
int3
rol
fisubr
(bad)
lods
loope
mov
xchg
dec
(bad)
push
ins
rol
sbb
icebp
pop
(bad)
ins
loop
outs
shl
ds
jnp
(bad)
mov
loope
fst
loop
cmp
jle
(bad)
xor
(bad)
(bad)
ds
xor
xor
aaa
or
paddd
clc
or
mov
rol
mov
dec
(bad)
pop
pop
into
adc
leave
sub
in
into
mov
mov
dec
dec
in
pop
out
lods
(bad)
push
jge
hlt
sbb
pop
mov
gs
mov
fdivr
cmp
jl
jecxz
mov
fstp
hlt
jge
push
out
int
adc
js
jecxz
pusha
fistp
(bad)
dec
rol
(bad)
loopne
jle
mov
in
std
loopne
jl
mov
jmp
lock
cdq
add
call
(bad)
ror
bound
mov
loopne
cs
xor
xchg
mov
in
lods
in
push
call
push
in
push
dec
aam
cs
into
rol
retf
sar
cmp
jo
jmp
pop
out
xlat
stos
shr
(bad)
call
mov
xchg
sahf
call
cs
ret
push
in
idiv
sti
in
out
inc
std
fild
fstp
fldcw
call
into
call
pminsw
loope
into
out
xor
out
shl
add
dec
loopne
repnz
and
jmp
scas
out
jnp
and
repnz
jle
sub
mov
out
dec
mov
popf
repnz
mov
dec
lods
ret
scas
push
out
adc
dec
sahf
repnz
cmp
loope
loopne
push
add
push
jmp
sahf
loopne
aas
cmc
nop
ds
and
out
sub
pop
shl
bound
out
bound
push
(bad)
mov
in
adc
out
jne
jmp
gs
scas
imul
call
aas
out
mov
loopne
pop
test
ret
scas
rcr
mov
fsubr
out
push
pop
out
(bad)
scas
repnz
das
pop
xor
xchg
push
hlt
out
bnd
enter
shr
pop
and
cli
push
cli
and
push
lods
cli
fwait
das
stc
test
repz
pop
hlt
mov
cli
imul
mov
in
mov
sti
js
repz
cmc
mov
cmc
push
scas
test
pop
push
nop
pminub
shr
aas
aas
cli
xchg
(bad)
out
pop
call
outs
out
ror
std
mov
out
psubq
cli
push
cld
mov
mov
outs
jmp
aad
invd
sub
sbb
xchg
mov
pop
or
sbb
add
fwait
xchg
fwait
cwde
mov
(bad)
mov
mov
mov
xchg
adc
stos
add
xchg
movs
mov
enter
rcl
xchg
movs
call
cmps
movs
mov
mov
aam
lods
popf
mov
(bad)
clc
rcr
xor
shl
inc
cli
xor
jmp
dec
fnsave
and
push
stos
pop
iret
test
fadd
dec
lahf
ret
pop
hlt
sbb
arpl
and
sti
lds
adc
add
leave
xchg
cmps
repnz
inc
xchg
lods
push
jb
es
dec
ds
(bad)
aam
xchg
jge
clc
dec
loop
imul
sub
push
adc
dec
xchg
pushf
lds
mov
adc
inc
cmps
and
jnp
and
aam
movs
pop
xor
rol
ret
add
sub
je
mov
cmps
dec
add
pop
test
sub
sti
mov
dec
pop
inc
push
add
dec
rcl
ret
fwait
mov
jmp
inc
aad
hlt
hlt
into
push
pop
ins
fidiv
push
stos
xchg
dec
outs
push
retf
xor
jg
ins
cmp
xor
inc
mov
adc
pop
stos
loop
retf
cmp
sub
fistp
in
cmc
jmp
mov
jns
loop
xchg
sbb
movs
rcl
cmp
add
mov
push
imul
mov
pop
gs
fdiv
adc
shr
repz
gs
dec
xchg
adc
push
push
add
and
push
dec
dec
push
sbb
leave
xor
and
xchg
xor
xchg
xor
push
adc
les
push
js
loopne
mov
mov
xchg
fiadd
sbb
cmps
jecxz
mov
push
mov
test
and
test
pop
cmps
gs
orps
pusha
ins
pop
in
and
jns
xor
cmp
cmc
mov
movs
sbb
cmps
mov
lahf
xchg
xchg
dec
add
nop
les
cmp
mov
add
icebp
add
vmread
dec
push
movs
xchg
pop
dec
and
xor
add
xor
mov
icebp
cdq
cmp
mov
push
cmp
retf
mov
movups
shl
retf
dec
mov
cs
sub
inc
sahf
mov
jmp
sbb
retf
sbb
add
mov
pcmpgtb
stos
adc
cwde
dec
xchg
or
sbb
movs
xor
icebp
scas
dec
sub
aam
mov
enter
adc
push
(bad)
pop
cli
jmp
dec
push
addr16
lahf
inc
jl
add
push
inc
ror
imul
inc
pop
aas
loopne
repz
inc
aam
mov
xor
adc
or
retf
dec
les
repz
dec
ret
mov
scas
sbb
cld
hlt
iret
xor
jno
ror
aam
leave
aad
out
int3
mov
inc
or
cmp
push
cli
lahf
cdq
jp
or
je
cmp
xor
mov
into
pop
sbb
int3
aaa
aam
daa
pop
outs
pop
pop
cli
sbb
loopne
xchg
cmp
or
ret
xor
mov
mov
mov
pop
clc
add
mov
movs
lahf
mov
ds
add
ret
(bad)
idiv
mov
in
or
xor
retf
mov
mov
leave
or
aam
scas
dec
repz
push
repnz
mov
loopne
lods
jge
scas
jg
add
push
enter
add
xchg
jge
mov
mov
ret
xor
inc
gs
inc
add
pop
sar
popf
cmc
adc
jmp
push
rol
cmp
lock
nop
fld
stc
xchg
ss
jmp
push
and
dec
or
cmp
xchg
dec
jp
test
push
adc
xchg
aam
xchg
ret
popw
mov
and
sbb
xchg
and
push
xor
or
scas
mov
sub
shl
jne
adc
mov
jnp
syscall
and
sub
(bad)
mov
bound
pop
xchg
mov
fst
mov
mov
movaps
adc
(bad)
cmp
sub
mov
push
sbb
clc
(bad)
cmp
mov
push
sub
push
int
inc
jno
jb
ja
and
or
inc
xor
imul
mov
push
movs
stc
jo
(bad)
push
add
xchg
and
sar
ror
jae
inc
adc
sub
pop
pop
mov
xchg
popf
cld
in
imul
cdq
(bad)
pop
out
sti
sbb
push
push
push
cdq
mov
cmps
ss
int
jbe
fwait
loopne
cmps
cmp
into
daa
retf
pushf
mov
jns
je
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
add
retf
cli
hlt
cmps
inc
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
push
adc
sbb
hlt
push
test
jmp
les
pusha
inc
mov
adc
mov
inc
sub
pop
mov
mov
ins
sub
jp
pop
rcl
push
pop
xchg
cmc
test
leave
push
push
add
dec
xor
push
cmps
mov
pop
sahf
mov
cmps
and
fcomp
jb
mov
jge
fs
(bad)
mov
pop
pop
test
data16
cmp
in
ins
adc
and
aaa
mov
mov
repnz
inc
mov
ror
pop
or
scas
adc
out
xchg
mov
jge
fdivrp
push
add
cmp
call
mov
aaa
rcr
scas
outs
leave
retf
sar
push
cwde
mov
jl
mov
imul
jns
push
adc
ret
adc
bound
mov
inc
loopne
mov
jnp
div
ja
jecxz
icebp
arpl
mov
sti
xchg
xlat
mov
addr16
sbb
(bad)
div
imul
data16
push
in
add
mov
xor
js
fdivr
mov
xchg
(bad)
lods
arpl
add
xchg
mov
clc
add
test
inc
add
ret
mov
mov
mov
jp
sbb
(bad)
sbb
add
ja
nop
gs
xor
scas
dec
test
sbb
fsub
push
sbb
mov
leave
ds
repz
inc
iret
lock
hlt
adc
loope
pop
loopne
mov
sbb
mov
lock
cwde
(bad)
pop
or
jp
imul
push
cmp
(bad)
pop
inc
fcmovnb
in
jne
sub
(bad)
(bad)
cmp
push
cmp
xor
(bad)
rep
outs
mov
neg
ret
hlt
jl
cld
fistp
outs
cli
(bad)
cmp
ins
or
pop
(bad)
loopne
jne
lock
dec
xchg
cmp
fwait
(bad)
in
or
daa
xlat
scas
push
inc
shl
jns
and
xor
inc
int3
loop
sub
add
call
test
ja
aad
inc
jae
fld
stos
ja
xchg
lods
mov
mov
retf
int3
cs
outs
enter
pusha
inc
sti
push
aaa
and
and
iret
inc
fdivr
ins
jne
imul
out
mov
std
loop
das
inc
jmp
pop
pushf
in
sahf
das
jge
dec
fdiv
sti
hlt
adc
not
cmp
test
loopne
outs
cmp
push
jne
cmps
xchg
add
pop
cmp
jecxz
fbld
pop
xor
xor
pushf
sar
add
(bad)
xlat
xchg
pop
jnp
add
mov
xchg
rol
out
cmp
in
sbb
jecxz
(bad)
inc
(bad)
cli
fisttp
ds
ds
adc
add
xchg
cmp
dec
es
add
mov
cmp
test
jb
es
loopne
mov
lods
and
cmp
fnstenv
pop
test
iret
repnz
fisttp
xlat
mov
mov
xchg
add
xchg
lock
xchg
xor
jg
iret
push
ss
dec
pop
rcl
scas
jl
scas
sbb
sbb
loopne
ret
push
data16
pop
inc
jo
test
jge
xchg
add
int
pop
jno
jnp
imul
jo
xor
push
outs
rol
(bad)
jns
push
pop
inc
aaa
push
mov
sbb
aaa
rol
add
cmp
jg
mov
into
(bad)
pop
push
daa
jg
inc
add
fs
aaa
je
mov
aaa
cmp
pusha
add
mov
sbb
xor
das
or
mov
and
gs
test
xchg
movs
addr16
test
fwait
inc
add
xchg
aaa
jo
cmps
or
or
ins
mov
pop
cmc
lds
ss
pop
xchg
xchg
add
pop
enter
jno
jo
push
test
add
fdivr
or
and
jb
sbb
jbe
retf
cmp
add
jbe
xchg
(bad)
mov
pop
push
and
dec
addr16
sbb
out
test
je
inc
jp
pop
jne
mov
dec
dec
pop
mov
jl
fdivr
je
mov
push
pusha
cmp
cs
xchg
jno
(bad)
mov
mov
ins
retf
cmps
jno
jne
sbb
jge
aaa
gs
adc
pop
mov
ja
mov
jg
aaa
pusha
jge
ins
aaa
add
(bad)
mov
xchg
imul
mov
lock
xlat
arpl
(bad)
mov
ja
imul
mov
outs
xor
popa
push
aaa
imul
cmps
ja
out
dec
(bad)
push
lea
test
outs
aaa
dec
jnp
test
mov
mov
je
push
pop
out
jge
xchg
stos
cmps
imul
data16
nop
stc
add
imul
lods
jbe
xor
ins
xchg
(bad)
mov
jge
push
and
aad
jae
inc
mov
pop
js
dec
ins
and
push
in
outs
and
in
out
mov
sub
xchg
mov
pop
jp
cmp
mov
push
out
push
push
mov
push
xchg
mov
and
and
xchg
lea
outs
cmp
ja
mov
int
js
clc
jns
jbe
ins
aad
movs
mov
test
mov
sub
lea
(bad)
in
js
push
mov
les
xchg
dec
and
push
fs
data16
mov
jo
sub
(bad)
sbb
rol
into
imul
fwait
jns
js
or
stc
jns
cmp
jmp
and
pop
nop
imul
mov
xchg
sahf
icebp
lds
es
sahf
push
pop
jb
push
adc
inc
xchg
sub
cmp
gs
test
inc
cmps
xchg
and
cwde
fs
pop
pop
sbb
xchg
xchg
adc
retf
enter
ror
cdq
gs
mov
xchg
push
pop
out
jle
push
imul
gs
ins
stc
push
pop
dec
loopne
add
shl
ja
push
sbb
xchg
(bad)
jge
add
in
mov
movs
inc
aad
je
push
push
push
aas
in
pop
dec
movs
inc
xor
pop
cmp
loopne
push
pop
movs
jae
ja
pop
push
dec
pusha
add
movs
jo
cmps
jb
sub
jp
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
and
add
add
add
add
out
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
or
cdq
test
or
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
inc
dec
mov
and
jmp
mov
mov
retf
cmp
test
or
cmp
scas
add
popf
pop
fld
pop
mov
mov
mov
imul
(bad)
xchg
jo
cmps
leave
jmp
add
pusha
add
shl
cli
popf
lea
mov
mov
xchg
sbb
stos
mov
sub
sti
mov
cmp
pop
add
add
mov
jnp
neg
mov
mov
dec
mov
sbb
pop
mov
or
mov
mov
(bad)
or
mov
cmp
add
jo
or
lock
mov
mov
arpl
add
sbb
dec
lods
xchg
sti
add
retf
mov
stos
mov
or
inc
mov
jmp
hlt
or
jnp
adc
mov
mov
sti
mov
jl
add
mov
sub
retf
ror
mov
(bad)
cli
mov
push
add
rcr
add
cli
add
ret
cmp
mov
sbb
stos
adc
mov
adc
add
cmp
ret
jp
add
int3
les
sub
inc
cld
rcl
or
add
cld
scas
sbb
pop
mov
dec
sub
add
add
js
pop
nop
les
les
mov
les
enter
push
jl
pop
sbb
pop
mov
outs
pop
(bad)
jno
ret
push
enter
sbb
shr
mov
loopne
pop
inc
add
mov
xor
mov
jo
and
add
mov
cmp
dec
push
retf
retf
leave
jp
mov
rol
pop
retf
jp
retf
mov
fmul
ret
mov
mov
leave
mov
mov
int
sub
dec
sbb
mov
retf
mov
retf
out
cwde
add
ins
leave
jb
int
cld
retf
mov
int3
pop
cld
retf
leave
cdq
dec
stos
push
xor
mov
into
mov
add
rol
adc
push
push
add
retf
iret
in
ins
retf
cdq
pushf
leave
hlt
ins
iret
clc
in
into
repnz
shr
in
int3
lock
or
mov
cli
into
lock
inc
jp
xor
add
mov
into
push
lods
iret
out
or
stc
cld
int3
clc
cld
int3
inc
retf
lods
xchg
pushf
shr
(bad)
in
rcl
sbb
sub
sbb
in
mov
jp
add
fst
(bad)
rcl
pop
shr
mov
scas
or
adc
mov
into
aaa
mov
push
cmp
and
int
stos
rol
iret
add
ins
add
and
ins
add
(bad)
std
cmp
inc
mov
push
sub
add
aam
sub
inc
sbb
or
xlat
pop
mov
push
sub
pop
popf
aam
fst
inc
lea
ror
sbb
push
or
adc
xlat
push
ins
retf
inc
ins
fst
dec
mov
ds
mov
fidiv
std
xlat
mov
fild
rcr
fnstcw
fld
popf
add
or
call
(bad)
inc
ins
fcmove
jl
popf
in
into
shr
xor
fadd
aad
mov
repz
mov
fisubr
fucomip
dec
fcom
fst
sub
scas
in
fimul
or
add
movs
fstp
push
outs
loopne
loopne
sub
dec
loope
cld
fmul
retf
test
add
rol
pop
fimul
push
or
loope
mov
add
retf
jmp
loopne
in
fsubr
stos
js
fldenv
sbb
enter
jge
dec
rol
or
mov
loop
cmp
add
inc
mov
in
fsub
loope
in
sub
sub
in
ror
dec
fcomp
jle
dec
mov
inc
or
or
out
std
fbstp
loopne
ins
(bad)
in
loop
(bad)
shr
pusha
ficomp
shl
loopne
jge
sub
jne
fisttp
popf
shl
into
shr
mov
push
(bad)
out
mov
xor
and
sbb
push
in
lods
call
or
add
iret
inc
pop
add
cli
(bad)
std
fisubr
out
jle
cmp
std
in
loope
out
into
and
ret
cmc
or
inc
push
loop
pop
add
in
(bad)
pop
into
loop
jle
mov
jmp
add
call
pop
fnstenv
pop
retf
loop
int
out
in
or
mov
out
mov
jmp
push
ds
icebp
pop
out
out
ror
dec
out
leave
push
jmp
cdq
ds
lods
in
sub
in
jae
fld
outs
fidiv
sub
xchg
dec
lock
push
cs
jle
mov
adc
loope
dec
add
mov
loopne
fiadd
repnz
add
into
call
sbb
or
ror
out
in
std
into
jmp
xor
in
ins
icebp
retf
cmp
in
out
rol
fcmovne
in
add
mov
int3
in
fisub
aad
in
repz
mov
in
sub
xlat
stos
jge
mov
in
pop
(bad)
out
adc
jle
in
dec
lahf
test
movs
cs
int
sub
sub
(bad)
in
pmuludq
jmp
jl
aad
sbb
jmp
add
ds
mov
into
not
scas
fldenv
add
nop
add
icebp
xor
hlt
jo
loope
(bad)
stc
cmp
clc
mov
repz
push
fucomp
mov
mov
neg
pop
fscale
(bad)
out
sar
mov
repnz
(bad)
into
lods
push
loopne
cmp
xor
not
cmp
mov
cmc
(bad)
cmp
cmp
mov
icebp
cmp
repnz
mov
call
stc
cdq
scas
div
(bad)
cli
fdivp
fcomp
retf
mov
(bad)
imul
hlt
jg
sub
clc
sbb
cld
add
push
adc
cdq
in
dec
enter
push
cmp
test
cmp
cli
mov
mov
sbb
mov
cmp
mov
sub
mov
and
dec
test
fimul
stos
stos
mov
cld
mov
call
stos
call
jge
mov
pop
pop
into
int
cmp
jl
das
in
sub
sub
jb
loopne
stos
sahf
mov
repz
xlat
cmp
mov
fwait
enter
outs
or
add
sub
cmp
stos
push
xchg
movs
push
mov
dec
push
sub
and
mov
or
bound
push
xchg
int
mov
mov
and
jecxz
nop
mov
jmp
sbb
xchg
bound
push
sar
jmp
xor
add
es
xor
sbb
add
sbb
push
sbb
pop
retf
cmp
mov
into
xor
les
pushf
dec
cmps
and
or
test
jne
mov
aam
push
push
and
leave
fwait
xor
mov
cmp
adc
push
lds
arpl
push
jno
enter
outs
dec
test
jbe
jge
xor
pop
sub
mov
in
mov
push
imul
add
ror
pop
jg
push
xor
leave
dec
or
mov
idiv
pop
mov
pop
xchg
popw
or
jns
lea
test
jmp
xchg
xchg
mov
ret
pop
stc
dec
mov
addr16
pop
cld
xchg
pop
mov
pusha
sub
cdq
or
and
js
popf
ja
imul
inc
and
sbb
ins
and
jecxz
jnp
jns
dec
nop
xchg
or
or
outs
and
adc
jb
pop
shl
mov
or
sub
xchg
lds
loopne
scas
mov
inc
mov
adc
std
adc
and
or
imul
test
test
fstp
sbb
cmps
call
cmp
and
test
or
daa
ja
sub
xchg
pop
pop
mov
xchg
imul
loopne
dec
scas
pop
out
sub
adc
mov
sub
dec
mov
inc
test
cmps
mov
or
push
mov
stos
fs
pop
jnp
mov
mov
xor
pop
jge
mov
call
loopne
lods
push
cmp
in
leave
sub
mov
cmp
loop
mov
or
sbb
adc
adc
push
cmp
adc
push
pop
add
mov
into
jmp
rcl
mov
inc
dec
jecxz
mov
mov
fidiv
aaa
(bad)
xor
inc
sub
dec
and
jb
loop
les
cdq
and
add
jnp
jmp
retf
xor
repnz
pop
(bad)
mov
in
xor
inc
mov
push
fdivr
xor
dec
cmp
push
push
inc
dec
adc
and
or
jmp
sbb
xor
into
repz
cdq
xor
not
sub
int
mov
popf
cs
sti
dec
cs
fsub
fistp
retf
xor
mov
jle
cmp
in
mov
jg
mul
fcomp
inc
das
xchg
and
and
mov
loopne
shl
sahf
cmc
out
retf
jb
xchg
sbb
cmp
fcmovne
std
jecxz
ja
test
dec
enter
xor
jge
xchg
inc
(bad)
mov
mov
mov
out
outs
jnp
shl
mov
xor
pusha
pop
mov
cmps
(bad)
aaa
sbb
punpckldq
lahf
int3
mov
mov
ror
sub
push
cwde
mov
mov
jmp
in
ja
or
ja
mov
mov
ja
or
mov
mov
jecxz
lock
mov
xor
xchg
push
and
and
fiadd
xlat
aas
(bad)
push
or
movs
jb
fisttp
sar
and
outs
into
arpl
cmp
aas
(bad)
and
add
sbb
mov
movs
adc
shl
ins
push
aas
in
iret
mov
jmp
add
jno
xchg
xor
or
mov
or
mov
in
inc
out
(bad)
pusha
sub
and
mov
adc
test
mov
cmps
fwait
arpl
pop
xchg
add
inc
in
or
jmp
adc
or
xchg
sbb
pop
mov
inc
or
mov
cwde
(bad)
xor
mov
pop
ret
mov
sbb
adc
jl
push
pop
push
mov
xchg
pop
or
cmps
aaa
mul
mov
xchg
sub
push
adc
repnz
movs
lods
loop
push
xchg
clc
lds
std
mov
int
push
rol
adc
xchg
shr
inc
mov
loop
out
mov
push
mov
in
in
and
adc
mov
mov
inc
outs
sub
push
pop
mov
xchg
addr16
(bad)
(bad)
mov
(bad)
sub
ret
cmps
sub
xchg
mov
xchg
lahf
in
and
jb
mov
dec
out
mov
lds
xor
cmp
mov
and
dec
xchg
cs
ins
call
jmp
jae
sub
fld
adc
jno
lods
lahf
inc
lea
sbb
mov
inc
cmp
push
adc
inc
pop
ret
inc
xchg
adc
sub
lea
adc
dec
mov
not
cmps
pusha
aad
and
push
mov
push
lods
xor
pop
fdivr
test
xchg
es
movs
fcom
push
or
sub
test
ret
push
jno
push
cmc
pusha
dec
or
jne
fsubr
out
iret
push
sahf
cmp
addr16
push
push
xchg
push
adc
push
cmp
stos
xchg
push
call
rcl
into
push
pop
vcmpneq_oqpd
push
aad
neg
test
pop
call
hlt
test
scas
pop
dec
sar
mov
imul
inc
and
add
out
ja
fwait
retf
pushf
pop
push
push
cmp
add
movs
mov
outs
shr
in
and
and
scas
jg
pop
pop
loope
aaa
or
std
scas
aas
fistp
mov
retf
fwait
pusha
pushf
mov
pushf
push
pop
ret
or
repz
popf
dec
arpl
(bad)
or
clc
ret
add
shl
and
fsubr
(bad)
pop
jecxz
xchg
mov
lds
std
jns
cld
data16
orps
adc
xor
xchg
add
js
inc
xchg
call
cmp
dec
mov
repnz
xchg
cwde
scas
adc
add
sar
inc
into
lods
lock
sbb
pop
shl
pushf
jno
loop
push
cwde
lds
(bad)
outs
(bad)
in
gs
iret
into
add
into
dec
and
add
scas
aam
call
cs
cmp
mov
loop
rcl
xchg
fisttp
cli
mov
jae
add
ins
pop
adc
inc
add
sub
mov
or
sbb
add
(bad)
fistp
cmp
xor
push
add
sub
call
ins
push
das
add
mov
not
movs
sbb
fld
mov
(bad)
fdivr
movs
adc
bound
cmp
(bad)
lea
xchg
pop
pusha
jnp
mov
stos
add
and
popf
popa
jg
sbb
dec
adc
and
fldcw
jbe
std
retf
out
jne
fmul
or
js
or
jno
xchg
faddp
fstp
mov
out
fisttp
out
stos
(bad)
call
shr
ds
fistp
add
aaa
mov
mov
retf
add
test
repnz
(bad)
sar
jp
cmps
out
mov
mov
sbb
push
fistp
sahf
das
cmp
push
mov
xor
cmp
icebp
and
pop
jp
push
lock
stos
cmp
adc
out
ins
jns
lods
sahf
popa
mov
inc
jl
jno
je
add
cli
fmul
jo
or
rcr
jbe
adc
pop
inc
repnz
mov
jmp
jns
mov
enter
or
cmp
xchg
pop
sbb
icebp
xchg
push
jbe
ja
or
les
lods
sub
aaa
mov
cmc
(bad)
fdivrp
sub
popa
xchg
jae
mov
loope
lahf
cli
ss
jg
jmp
jle
cdq
(bad)
repnz
mov
icebp
out
aas
std
fadd
and
cld
out
jg
sbb
add
jg
clc
jg
pusha
add
loop
dec
add
pop
enter
push
sti
pop
adc
jg
pusha
add
jo
xchg
out
js
push
ja
mov
sub
and
jge
nop
jge
add
mov
jne
jge
xlat
jb
call
dec
mov
ret
sbb
push
cmp
add
enter
add
aaa
jle
xchg
pusha
out
jbe
out
cmp
push
or
push
xchg
jl
xchg
add
test
add
add
or
jle
xlat
jp
mov
imul
xchg
xlat
js
add
jo
not
or
jns
jns
xor
call
je
je
mov
out
test
add
rol
lock
pop
mov
arpl
xor
fcom
pop
pop
lods
(bad)
jp
cmp
mov
sbb
xchg
mov
dec
and
test
add
sub
jp
aaa
dec
ja
add
test
mov
outs
jae
lea
ja
aam
lea
mov
pop
push
mov
cwde
add
test
or
dec
inc
add
add
js
mov
mov
pusha
call
dec
cmps
cmp
cwde
pusha
fsubr
in
inc
jle
sub
ja
ss
mov
shl
mov
push
and
enter
test
test
jmp
and
(bad)
enter
mov
or
xchg
dec
dec
jge
cmp
jns
or
mov
stc
sub
push
pusha
add
add
fst
mov
leave
enter
xchg
mov
inc
lock
ja
enter
mov
lods
xchg
pop
xchg
sbb
add
aaa
xchg
fs
and
xchg
(bad)
push
xchg
sub
or
inc
mov
pop
cmps
mov
mov
sbb
xchg
pop
push
jne
jmp
inc
jo
data16
outs
sbb
xchg
pop
cmp
clc
mov
and
aas
enter
xchg
jb
xchg
pop
movs
nop
pop
mov
or
ror
and
push
inc
lds
push
mov
dec
mov
push
jns
sbb
sbb
mov
add
xchg
je
xchg
or
xchg
jno
mov
dec
enter
add
xchg
aad
outs
sbb
retf
repz
pop
leave
xchg
(bad)
or
xchg
sub
jns
xchg
and
mov
add
test
cmp
daa
cdq
je
lahf
stos
mov
mov
sub
sbb
test
hlt
xchg
pop
xchg
dec
js
push
xchg
or
fcomi
jae
or
jmp
xchg
sub
mov
sub
outs
mov
sub
mov
xchg
mov
popf
test
inc
mov
retf
xor
push
mov
imul
mov
push
test
sbb
xchg
adc
mov
mov
sub
leave
movs
daa
sbb
dec
xchg
scas
leave
xchg
cmp
add
jo
xchg
pop
sub
pop
popf
sbb
rcr
movs
inc
stos
xchg
mov
mov
cmp
mov
arpl
dec
jmp
sub
xchg
ja
xchg
jnp
xchg
ja
cwde
pop
dec
xchg
dec
sub
sub
sar
sahf
cmp
xchg
dec
or
sub
pop
xchg
dec
jp
inc
jns
lea
and
ja
mov
mov
and
dec
or
sub
pop
jne
dec
cmps
(bad)
fstp
mov
stc
adc
dec
adc
add
mov
sub
or
mov
dec
mov
push
ja
jno
xchg
or
cmps
push
cmp
jns
push
mov
(bad)
pop
and
leave
jle
sbb
pop
shl
push
jmp
inc
mov
jo
sbb
mov
cmp
dec
mov
sbb
dec
scas
jnp
fwait
mov
mov
cli
mov
call
lods
sar
pop
mov
imul
scas
sbb
mov
jmp
movs
rcr
lahf
mov
mov
mov
cmp
call
test
stos
mov
imul
mov
repnz
inc
cmp
mov
mov
xchg
push
jmp
dec
call
push
adc
lods
push
in
call
stos
outs
fidiv
stos
mov
mov
mov
mov
(bad)
jmp
xchg
pop
loopne
mov
xchg
push
xor
jp
mov
jecxz
das
fist
or
sbb
dec
xchg
mov
mov
push
add
jmp
and
mov
sub
jp
mov
mov
jmp
jp
mov
fist
mov
sub
mov
stos
xchg
out
mov
jnp
(bad)
fnstcw
fld
cmp
cmp
or
imul
sar
mov
scas
mov
push
test
jo
xlat
imul
push
loope
fwait
jmp
adc
xlat
fcmovnb
mov
mov
in
sahf
cmp
add
xchg
mov
add
mov
leave
cmps
aas
sub
sbb
inc
inc
lods
xchg
push
sti
les
mov
mov
mov
xlat
fwait
xchg
inc
sub
inc
mov
dec
sub
shr
mov
stc
ret
lods
sbb
cmp
mov
in
mov
fwait
mov
cld
mov
dec
add
add
rcl
mov
sbb
gs
into
sti
lds
leave
ret
jge
xchg
sub
mov
pop
leave
ficomp
push
int3
ret
les
mov
(bad)
add
mov
fstp
in
enter
(bad)
fwait
retf
add
pushf
(bad)
sub
mov
mov
mov
inc
stos
xchg
mov
out
dec
add
sbb
or
cli
mov
stos
mov
sub
jnp
(bad)
int3
stos
sub
pop
int3
mov
jl
inc
dec
into
fisttp
ret
int3
lds
(bad)
mov
int3
ret
mov
or
fwait
scas
and
mov
mov
leave
mov
lods
cld
mov
in
sar
stos
int3
(bad)
inc
add
retf
sub
int3
aas
cmp
repnz
or
mov
dec
int3
(bad)
fsubr
sub
loop
(bad)
std
jmp
into
and
pop
ins
int
retf
ret
dec
xor
mov
mov
dec
int
loopne
mov
add
int3
fisubr
in
iret
cmp
aam
sub
pusha
dec
int3
or
xchg
lahf
or
or
ja
aam
pushf
iret
stc
ins
mov
dec
(bad)
imul
and
xchg
pop
pop
iret
jge
retf
gs
imul
out
sub
in
retf
(bad)
jae
xlat
imul
mov
jge
aam
or
test
or
sbb
iret
dec
sub
lds
mov
sbb
fs
xor
(bad)
sub
mov
std
ficom
(bad)
xor
into
int
mov
sub
jecxz
fist
cmc
dec
ret
inc
inc
rol
pushf
(bad)
loop
mov
push
mov
test
leave
(bad)
lods
fnstsw
into
hlt
mov
mov
fistp
fucompp
sub
pop
mov
stos
ins
aam
ins
fdiv
ficom
fldcw
leave
cmp
retf
les
and
mov
jge
fs
mov
sub
std
lods
shl
sbb
fs
rcr
fist
(bad)
loop
stos
or
sahf
pop
fcomi
in
xlat
jnp
int3
inc
dec
xlat
lahf
sub
mov
sar
ror
fstp
push
add
cmp
lods
dec
loope
sub
(bad)
cmps
stos
mov
push
jecxz
jge
xor
xor
(bad)
or
push
(bad)
shl
ins
iret
test
(bad)
in
mov
lods
in
in
and
pop
ds
jge
retf
rcr
mov
push
out
into
jbe
out
int
pushw
int3
js
fadd
or
imul
xchg
ror
hlt
cmp
imul
xchg
pop
in
sbb
gs
xchg
std
aam
sbb
hlt
mov
push
sahf
loopne
int
popa
into
out
jle
js
jmp
and
(bad)
call
jle
pusha
push
jmp
jle
or
outs
loopne
(bad)
jmp
jle
ror
out
int
or
out
dec
fild
(bad)
ins
in
fsubp
test
fst
fild
cmps
cs
fsubp
loopne
in
cmp
jmp
xlat
sti
sar
or
loop
(bad)
in
aad
in
mov
in
pop
out
scas
jmp
loop
call
popf
in
ins
in
pop
call
pop
out
lahf
dec
in
ins
jmp
ja
in
mov
mov
fldcw
add
or
nop
add
sahf
fnstcw
in
jle
mov
repnz
out
sti
cmp
(bad)
into
jmp
lods
xchg
mov
loope
outs
mov
mov
sbb
repnz
aas
lahf
call
outs
fld
hlt
sahf
icebp
or
in
dec
dec
out
test
rcr
cmc
data16
out
idiv
repnz
repnz
hlt
loop
bnd
sar
ror
jl
jmp
outs
lock
(bad)
neg
scas
ds
fisttp
jmp
scas
repz
(bad)
fadd
out
(bad)
jmp
add
xlat
push
fbld
hlt
xchg
mov
out
ins
mov
add
repz
data16
repnz
xor
jl
fwait
outs
repnz
leave
retf
imul
mov
lods
jg
cmps
scas
hlt
sub
dec
pop
fst
xchg
jg
lods
popf
clc
adc
mov
mul
sti
jb
ret
lock
push
scas
cli
(bad)
jl
dec
das
clc
mov
scas
icebp
imul
mov
sti
(bad)
retf
shr
out
in
pop
outs
in
mov
test
cli
out
lahf
cld
mov
fs
cdq
mov
sub
pop
add
mov
xchg
pop
add
mov
adc
sub
stos
dec
mov
pop
lea
mov
mov
xchg
cdq
nop
xchg
add
mov
mov
mov
setle
mov
rcr
int3
(bad)
cdq
cwde
mov
fistp
ret
stos
int
ror
mov
shl
jmp
gs
inc
cmc
add
push
xor
test
(bad)
and
mov
popa
inc
test
jb
and
daa
adc
(bad)
inc
pusha
add
popf
inc
xchg
or
xchg
frstor
and
push
retf
sbb
pop
aaa
mov
cmp
adc
lock
sub
pushf
pop
xchg
stos
bound
mov
push
sbb
bound
call
or
ret
cmps
push
aad
jne
jae
ror
jp
cmps
mov
into
dec
and
ins
enter
xchg
jbe
les
jnp
aad
jbe
ja
cmc
mov
xor
xchg
and
push
imul
sub
sub
push
fs
fldcw
mov
scas
addr16
inc
or
lds
in
push
pop
retf
sar
pop
inc
adc
inc
rcr
jecxz
mov
jmp
adc
into
in
scas
or
dec
mov
cmps
adc
xchg
(bad)
sahf
xchg
and
xchg
push
popf
pop
dec
mov
movs
push
push
rcl
or
(bad)
cwde
pop
add
rol
out
and
mov
neg
inc
mov
rcl
test
pusha
inc
jmp
test
dec
xchg
xchg
xchg
sub
jbe
and
add
inc
inc
add
in
and
ss
mov
jbe
test
adc
pop
xchg
and
in
pop
ret
jno
into
mov
fsub
xchg
jno
fwait
es
cdq
jge
rcl
jb
xchg
cwde
cmps
mov
test
aad
xchg
xchg
dec
push
rcl
adc
add
rol
test
nop
enter
cmp
add
xor
cmps
stos
stos
pop
sub
pushf
mov
sub
stos
mov
test
adc
push
push
sub
adc
jb
jmp
pop
cmps
dec
lock
sub
dec
mov
sub
sub
inc
cmps
(bad)
fisubr
mov
lock
nop
jmp
fidivr
adc
lods
dec
pop
mov
jns
inc
jmp
cmps
lahf
into
rcl
scas
inc
jo
xor
sbb
mov
lods
or
or
lods
out
retf
jmp
dec
sbb
xor
mov
add
pushf
mov
sar
mov
push
ds
mov
sub
add
lahf
add
int
in
je
cmp
cmp
dec
inc
movs
(bad)
sub
mov
aas
mov
loop
rol
cmp
jg
repz
cmp
movs
jno
dec
xor
jo
mov
or
add
lods
jae
inc
mov
pop
or
and
sub
imul
push
mov
mov
clc
iret
mov
pusha
lods
mov
arpl
add
inc
bound
add
aas
(bad)
mov
cmp
push
push
adc
movs
(bad)
ret
sub
mov
fwait
ds
test
test
mov
inc
pop
aas
mov
cmp
data16
inc
icebp
iret
pop
pop
addr16
into
(bad)
pop
out
cld
out
mov
sub
outs
loope
cmp
jp
rol
jg
cld
jns
outs
mov
xchg
adc
sbb
xor
pop
add
add
cwde
mov
enter
fcmovnu
hlt
js
cmp
fwait
bound
aam
fdivr
xchg
rol
fcmovnbe
scas
std
sbb
cwde
inc
sbb
rcl
push
(bad)
jne
sbb
inc
cwde
inc
add
loopne
jae
ret
jo
or
fadd
out
pop
mov
cmps
adc
imul
lock
push
fcomp
sbb
inc
test
mov
scas
push
mov
mov
xchg
adc
fs
sbb
adc
mov
mov
inc
div
je
mov
cmp
sbb
cmp
loope
jo
adc
dec
and
dec
adc
(bad)
cmp
xor
fcomp
push
aas
mov
mov
dec
xor
(bad)
pop
movs
sub
mov
(bad)
mov
mov
leave
dec
dec
test
sub
dec
dec
pop
scas
rcl
xchg
cwde
lds
push
repz
dec
outs
jp
call
int
call
cmp
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
or
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
mov
add
aad
dec
jnp
fmul
xor
or
pmaxsw
cmps
jg
lods
popa
outs
sbb
hlt
push
cmps
test
fnstcw
xor
nop
pop
mov
aaa
cmp
dec
sbb
enter
adc
ins
addr16
cmp
int3
(bad)
(bad)
mov
pop
sub
imul
mov
cmp
pop
mov
or
pop
enter
jns
in
pop
neg
test
inc
mov
xchg
mov
pop
and
mov
xor
movs
add
imul
xchg
mov
mov
push
mov
xor
idiv
jmp
idiv
mov
outs
push
mov
cmp
or
cmc
outs
pop
sti
fwait
loope
pop
pop
shr
xor
loopne
adc
or
sub
pop
cli
mov
daa
lods
jp
jmp
in
div
or
scas
mov
aad
loop
lods
mov
pusha
jae
adc
rol
mov
add
push
clc
or
stos
pop
and
sbb
(bad)
arpl
(bad)
adc
std
test
or
or
call
gs
mov
push
dec
(bad)
and
jns
cmp
stos
fidiv
aas
push
(bad)
push
xor
imul
fisubr
fs
inc
test
shl
mov
pop
push
retf
xor
add
pop
sti
dec
rcr
(bad)
out
xchg
adc
pop
mov
sbb
push
out
push
add
aad
jns
mov
xchg
push
jae
cmc
jl
or
pop
cmps
cwde
ds
cmps
lds
fs
js
mov
or
mov
scas
mov
imul
add
pop
pop
aaa
sbb
jns
out
pushf
in
retf
dec
mov
mul
sahf
cli
fisub
cmp
sub
mov
mov
mov
xchg
or
nop
je
adc
ret
cmp
(bad)
mov
inc
int3
jmp
xor
ss
(bad)
pusha
imul
and
gs
pop
fcomi
jmp
xor
(bad)
loopne
mov
arpl
rol
pusha
sub
in
lock
(bad)
cdq
or
aas
ins
mov
fstp
out
rcl
(bad)
cmc
test
add
retf
(bad)
out
mov
mov
cmps
mov
lea
cmps
aad
jo
jg
jbe
out
jmp
xchg
ds
lock
jmp
leave
pushf
repz
cmp
sbb
rol
or
push
adc
mov
push
jb
stos
cmp
adc
pop
pop
inc
push
rcl
jnp
sahf
out
pushf
sbb
dec
mov
pop
add
cmp
fidivr
imul
mov
jns
mov
inc
adc
push
pop
xor
aad
(bad)
mov
leave
jg
ret
mov
stos
mov
out
cmp
fcmovnbe
jbe
(bad)
xor
pushf
(bad)
out
push
xchg
xor
mov
jp
sbb
adc
mov
sbb
shr
cmp
mov
fxch
popf
pop
xor
or
xchg
push
jl
sbb
data16
loopne
iret
xor
sbb
inc
jmp
push
mov
ins
(bad)
jbe
clc
jbe
call
ja
fidiv
jmp
clc
mov
xchg
xchg
aad
call
add
jae
mov
cmc
cmps
jno
push
ins
xchg
aad
jmp
ja
inc
push
cmp
jnp
push
outs
cmp
or
add
mov
add
push
popa
add
push
shl
push
xchg
mov
ja
push
(bad)
jns
aaa
and
pop
add
jo
mov
cli
push
outs
add
je
cmps
add
xchg
mov
cmc
lds
out
jp
outs
iret
pop
(bad)
jbe
call
inc
and
test
push
or
xchg
ja
(bad)
imul
mov
jle
fdivr
pop
xchg
gs
es
push
adc
jae
push
arpl
cmps
ins
xchg
dec
pusha
cmp
loopne
add
jbe
enter
clc
imul
xchg
xchg
pop
test
mov
daa
push
cmp
std
neg
pop
jp
push
and
adc
popa
mov
mov
mov
push
es
aaa
pop
adc
cmps
xchg
add
addr16
jnp
push
mov
cli
inc
xchg
add
outs
or
mov
push
test
add
daa
jnp
es
cmp
loopne
xchg
inc
pop
mov
jnp
(bad)
mov
mov
adc
je
push
ins
jno
pusha
cmc
push
mov
add
stos
xchg
test
out
in
pop
in
test
push
push
push
es
es
arpl
pop
addr16
xchg
lds
jbe
ss
cmps
xchg
ret
cmps
js
push
int3
pop
or
add
jl
mov
fwait
call
retf
jbe
arpl
ret
aam
jle
clc
ja
xchg
jns
sbb
mov
cli
js
pop
jmp
test
pop
xchg
push
bound
mov
outs
or
cmp
leave
js
fisub
jae
inc
arpl
inc
ins
js
mov
push
xchg
lds
aaa
cwde
dec
shl
(bad)
enter
dec
mov
test
xlat
add
add
pop
gs
gs
pop
cmp
add
test
movs
not
jbe
pop
push
pushf
sbb
mov
(bad)
outs
mov
xchg
ja
mov
xor
retf
mov
pusha
lahf
mov
rcr
popf
cld
sub
sub
mov
mov
imul
loopne
arpl
or
fs
rcr
mov
jae
fld
sbb
xchg
nop
in
xchg
call
outs
maskmovq
mul
jmp
clc
and
xor
mulps
mov
aad
loope
imul
lds
push
outs
fsub
mov
jbe
imul
or
mov
mov
push
fs
aaa
aad
std
imul
push
push
xchg
movs
push
add
data16
xlat
movs
dec
jne
push
and
cmps
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
outs
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
pop
push
sub
sub
cmp
or
call
fs
adc
outs
ins
mov
lods
test
fs
pop
xor
sub
ds
dec
dec
int3
retf
jmp
fdivr
cli
cld
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
pop
pop
sub
sub
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
fs
fs
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
add
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
out
or
sub
cli
movs
adc
loope
add
stos
inc
pusha
scas
push
scas
and
add
dec
lods
daa
or
mov
enter
pop
jns
pop
mov
rol
adc
mov
or
mov
cmp
xchg
ss
scas
mov
sbb
mov
imul
mov
imul
pop
mov
xor
mov
sti
lods
lods
jp
popa
sbb
cmp
shl
mov
mov
test
nop
add
pusha
add
mov
cmc
cli
popf
mov
mov
mov
xchg
(bad)
(bad)
pop
mov
cmp
stos
xchg
add
cli
mov
imul
add
test
mov
retf
cmp
stos
mov
or
dec
mov
fidivr
mov
or
mov
sbb
mov
fcomp
scas
fnstcw
nop
in
lods
xchg
or
sub
mov
mov
(bad)
dec
mov
stos
add
(bad)
sti
mov
call
mov
sti
mov
sbb
sub
dec
rol
mov
sbb
jnp
pop
or
and
lock
(bad)
add
add
sbb
xor
cli
ret
ret
aaa
mov
mov
add
sbb
punpcklbw
push
jo
xor
test
inc
sub
xor
fadd
inc
mov
or
xor
les
ret
out
cli
add
lds
lds
add
pushf
lds
aaa
mov
pop
mov
arpl
loopne
dec
mov
inc
in
mov
les
(bad)
jbe
mov
sub
pop
cmp
popa
int3
mov
mov
ins
pushf
(bad)
ja
les
stos
dec
jo
sub
mov
loopne
sbb
inc
mov
xchg
mov
mov
add
mov
mov
movs
dec
nop
leave
push
xor
inc
int3
enter
push
loopne
lea
stos
mov
sbb
mov
mov
mov
mov
mov
cld
retf
dec
dec
int3
icebp
imul
sbb
test
retf
add
lods
enter
(bad)
mov
retf
add
add
retf
int
fadd
adc
push
push
add
retf
into
(bad)
jl
mov
int
fmul
mov
sub
ret
mov
iret
inc
sbb
(bad)
cmp
add
into
call
lods
into
out
sub
jmp
int3
inc
jmp
rcr
or
out
mov
int3
sar
lods
ror
push
push
(bad)
sar
fmul
cld
lods
retf
int
popf
into
or
iret
into
lods
retf
shl
lods
shr
std
iret
adc
fidivr
dec
rol
pop
add
mov
sbb
enter
popf
aam
and
lods
xchg
add
retf
int
sub
add
aad
loopne
test
sar
or
es
stc
lods
add
sub
stc
jl
push
mov
push
sub
xlat
xor
iret
or
int
cmp
or
jb
fdiv
mov
mov
add
(bad)
cmp
dec
pop
fcom
std
(bad)
ss
sar
rol
adc
shr
fidivr
sar
aad
ins
xlat
int3
(bad)
pop
popf
xlat
rep
fldenv
add
fadd
and
sub
iret
mov
iret
mov
fld
(bad)
sbb
xor
mov
shl
int
or
push
mov
scas
dec
(bad)
jno
fcmovb
fstp
in
into
jne
xlat
cmps
in
mov
fdiv
lods
aam
std
ficomp
cmp
repnz
fucomi
mov
out
sub
cli
ins
fistp
(bad)
icebp
lods
rol
fdiv
stos
aam
pushf
ficomp
add
iret
ins
or
adc
sbb
mov
xchg
ins
loope
pushf
(bad)
or
sub
stos
push
fild
fmulp
adc
mov
mov
ins
fst
cmp
aad
fidiv
into
out
cmp
inc
ds
or
dec
dec
rcl
pop
loope
popf
fild
loopne
mov
fsubr
sahf
dec
rol
shl
lods
iret
xchg
int
add
sbb
fs
loop
ins
jecxz
dec
arpl
ss
out
mov
xlat
or
cwde
cmp
mov
int
outs
fistp
xlat
fstp
adc
jae
loopne
int3
xlat
lea
je
fcomp
fmul
inc
jecxz
jle
je
loope
(bad)
call
sahf
loope
in
loopne
dec
fmul
loope
ins
out
pop
loope
jle
adc
adc
out
int3
loope
in
loopne
(bad)
rcl
dec
out
sahf
add
out
ds
dec
fsub
std
in
scas
pop
rol
rcr
outs
aam
push
(bad)
out
jmp
cs
(bad)
or
call
std
jecxz
sahf
fidivr
outs
loope
std
in
out
jmp
fmulp
mov
fmulp
pop
jmp
cs
dec
loopne
js
iret
fistp
ds
in
lock
push
out
add
stos
dec
loopne
add
in
ins
add
adc
sub
aam
pop
out
push
out
aas
stos
pop
loopne
mov
add
fsubrp
mov
fcomp
rcr
or
fldcw
pop
jmp
nop
loop
scas
in
adc
repnz
in
push
ror
les
cld
jle
rcr
aaa
pop
ror
scas
into
scas
scas
add
fst
sar
fucomp
(bad)
fsubp
ret
sahf
int
das
out
dec
in
push
out
in
into
push
scas
add
dec
jno
neg
jmp
pop
iret
fistp
pmaxsw
div
icebp
imul
hlt
jmp
fst
into
jge
hlt
sub
jecxz
jle
adc
out
dec
scas
add
nop
add
in
and
out
nop
mov
aas
sahf
add
add
dec
rcr
aas
iret
aam
loope
outs
repnz
hlt
icebp
ins
cli
pusha
fcomip
lods
push
fist
aad
push
aam
into
cmc
cld
out
fucomi
int
pushf
scas
lock
iret
repnz
jmp
cmps
pushf
int
dec
repz
mov
stc
stc
out
add
lahf
loop
outs
clc
lds
clc
cld
pop
imul
int
out
cld
movs
pushf
cli
jge
shr
cld
or
in
fcomip
nop
popf
cld
scas
outs
cld
jae
std
jb
fstp
cld
sub
jo
mov
add
mov
arpl
push
push
push
inc
jns
clc
shl
cwde
xchg
and
dec
cdq
js
mov
test
(bad)
sbb
sub
fnstcw
jmp
or
sbb
mov
jmp
push
jnp
pop
pop
int3
sti
stos
lods
mov
jns
imul
sbb
sub
imul
pop
fcmovne
outs
sbb
jne
or
cmp
lea
jno
inc
dec
mov
std
dec
and
sbb
mov
loop
sub
mov
sub
leave
sub
sar
mov
adc
push
leave
call
xchg
fst
movs
add
cmp
push
inc
mov
and
xchg
mov
repz
stos
into
cdq
movs
jo
fcmovnu
or
mov
mov
pop
ret
cmp
sbb
xchg
mov
lods
sub
sub
(bad)
fisttp
xlat
pop
in
dec
jecxz
dec
mov
jb
test
les
mov
xor
pop
(bad)
fisttp
adc
outs
xor
push
xor
xor
shr
ss
sub
aaa
rcl
inc
add
loope
fwait
inc
push
fsubr
outs
fsubr
cdq
aam
fsub
jl
cmp
jmp
out
loopne
and
(bad)
jae
sahf
xchg
sbb
ins
lods
jns
jb
dec
pop
test
test
or
mov
popa
je
or
cmp
xlat
push
pop
mov
push
(bad)
outs
fwait
or
test
push
push
jle
inc
pop
fiadd
inc
push
dec
pop
jbe
xchg
shl
push
frstor
jg
lods
pop
dec
mov
cld
jno
xchg
xchg
loopne
sbb
cmp
add
enter
gs
mov
icebp
mov
aaa
jmp
icebp
push
xchg
sub
sbb
or
mov
or
(bad)
and
sti
add
(bad)
jle
(bad)
push
clc
call
jbe
in
jns
pop
inc
cmps
cdq
dec
into
mov
cwde
push
or
fdivrp
mov
adc
call
adc
imul
test
mov
inc
retf
mov
out
ins
add
sub
cmp
sar
cmps
movs
dec
xor
push
fild
jmp
clc
or
inc
pop
inc
neg
dec
(bad)
leave
sub
scas
test
xchg
cwde
jbe
sbb
dec
mov
fmul
mov
mov
mov
sub
and
stc
sub
call
sub
adc
add
ficomp
out
and
in
ss
sub
add
arpl
sub
ret
test
cmp
and
pop
iret
xchg
and
sub
mov
add
xchg
(bad)
pop
jmp
mov
mov
cld
int
inc
rol
hlt
mov
jns
cmp
sahf
pushf
pop
(bad)
jmp
dec
add
dec
adc
sub
mov
sub
and
inc
jnp
jb
sub
dec
lahf
ret
inc
xchg
push
xor
pop
cmp
cmp
pushf
mov
outs
out
lock
outs
sar
ins
retf
jle
sub
js
out
push
jp
adc
cmp
xor
pushf
sub
sub
xchg
inc
and
mov
mov
ss
scas
iret
lods
stc
jle
adc
and
call
mov
adc
sub
mov
pop
inc
cs
(bad)
and
push
clc
int
movs
call
mov
pop
int
jecxz
mov
icebp
out
stos
outs
lods
mov
ins
(bad)
sahf
add
stc
es
fcom
inc
mov
ficom
xlat
(bad)
mov
mov
push
and
arpl
sbb
mov
jo
ret
rcr
imul
pop
add
pop
cmp
sub
xchg
cmp
rcr
lds
inc
adc
(bad)
stc
into
and
xchg
(bad)
in
xchg
mov
cmc
pusha
add
jmp
js
dec
and
xchg
enter
iret
je
test
in
test
in
ins
add
daa
inc
mov
mov
pop
lods
fdivrp
jp
cmp
test
pop
jecxz
mov
in
dec
mov
lahf
sub
adc
aas
aaa
sub
stc
retf
push
cmp
add
popa
add
pop
mov
push
dec
sbb
adc
push
mov
imul
enter
in
ins
jae
inc
arpl
and
mov
fwait
xchg
xor
leave
ror
push
scas
mov
inc
(bad)
hlt
mov
test
sub
fistp
inc
fdivr
xchg
jbe
mov
les
push
jno
and
leave
dec
addr16
xchg
pop
jge
arpl
jo
(bad)
fsubr
loopne
pop
xor
es
cwde
retf
inc
cli
mov
out
and
sub
sbb
mov
leave
les
loopne
xchg
ss
inc
shl
outs
or
pop
sti
xchg
pop
inc
and
(bad)
sub
int
sbb
jne
sub
ficom
jns
ror
xchg
pop
rcl
pusha
loopne
sub
fistp
mov
jb
pop
fsub
pop
mov
and
dec
popa
cmps
push
movs
dec
jl
and
mov
push
inc
mov
iret
fisttp
icebp
jb
sbb
inc
pop
pop
aam
ds
test
pop
sbb
test
add
ror
aam
sbb
jg
push
cmps
xchg
hlt
cmps
call
ds
popf
mul
add
pusha
adc
ficom
and
pop
push
adc
xor
mov
scas
pop
cmc
stos
sbb
sub
adc
leave
xlat
bound
es
push
xchg
push
sub
mov
push
xor
add
mov
xchg
icebp
push
mov
sub
push
dec
mov
mov
imul
adc
and
and
inc
stos
hlt
mov
or
movs
mov
sbb
into
or
fsub
retf
pop
test
js
sbb
into
scas
cmc
mov
mov
fdiv
push
data16
dec
pop
sti
mov
sbb
dec
xchg
idiv
dec
cmp
or
or
jo
daa
fcom
les
inc
das
pop
jmp
aaa
mov
std
retf
loope
pop
inc
cmp
rcl
jecxz
sbb
xchg
jl
cmp
popf
adc
mov
or
mov
popf
int3
fiadd
mov
ret
mov
(bad)
push
or
xchg
mov
icebp
std
jno
repz
xor
mov
(bad)
fsub
sti
cmp
push
mov
or
vpcmpgtw
adc
jo
clc
cmp
call
add
jo
pop
pop
push
and
sub
xor
outs
mov
cdq
add
imul
icebp
into
cmp
jmp
lods
inc
scas
mov
xlat
cmp
or
sub
pop
aam
mov
push
aas
cli
mov
cdq
mov
dec
mov
xor
pand
inc
cwde
cmc
mov
popf
add
(bad)
div
fwait
xchg
rol
adc
adc
dec
fst
aaa
mov
mov
or
fdiv
lods
test
in
push
retf
idiv
(bad)
jge
js
pop
shr
mov
mov
mov
aaa
adc
(bad)
iret
pop
xlat
jbe
gs
ins
es
mov
sbb
mov
jno
inc
cld
loop
fidivr
mov
jns
pop
ds
xchg
sbb
add
inc
push
jae
inc
cld
loope
mov
enter
xchg
jnp
out
xor
mov
xor
cmp
(bad)
into
adc
jo
setge
push
das
cli
mov
imul
push
xor
cmps
sahf
fmul
xchg
cmps
out
repz
addr16
pop
(bad)
mov
movs
leave
pushf
out
data16
ret
sub
ja
iret
xchg
ror
adc
xlat
push
outs
repz
pop
in
das
cli
shl
jge
in
(bad)
stc
aam
out
jbe
ret
adc
jns
sub
jbe
mov
iret
mov
cdq
rol
adc
cwde
inc
out
clc
int3
cmp
push
in
fild
enter
scas
jle
mov
fcomip
ins
jmp
in
pop
add
xlat
push
jle
stos
call
imul
mov
add
adc
pop
add
(bad)
rol
lods
(bad)
cmc
mov
std
sbb
mov
imul
out
push
stos
scas
std
clc
fild
pop
pop
add
and
clc
mov
js
xlat
jns
push
ins
push
daa
jbe
pop
jnp
xlat
add
jae
idiv
inc
ja
add
pop
jle
lds
and
ja
shl
rcl
sar
js
add
(bad)
pop
jge
mov
jle
push
and
jge
xchg
jl
pop
jp
cmp
cmps
or
jb
cmp
jnp
xchg
ins
dec
mov
dec
rol
jno
mov
add
add
inc
nop
add
xor
(bad)
js
sub
xchg
js
int3
pop
xchg
mov
jb
xchg
push
add
rol
pop
add
sbb
or
cmp
inc
inc
jle
lds
jl
dec
or
cmp
pop
test
div
add
xchg
cmps
add
add
jae
addr16
ja
jae
js
cmp
add
jp
and
dec
mov
xchg
xchg
mov
add
rol
jp
cwde
add
inc
add
nop
js
sub
sub
xchg
aad
mov
xchg
jl
js
lea
cmps
call
scas
pop
jb
inc
and
fdecstp
mov
shl
ror
jl
inc
add
js
dec
cmp
mov
test
add
lods
sub
jo
(bad)
jno
mov
in
push
(bad)
in
mov
test
adc
mov
arpl
add
mov
mov
jle
cmp
jl
mov
dec
or
or
cdq
js
clc
jae
sbb
cdq
add
add
call
inc
mov
(bad)
pop
xchg
inc
jmp
mul
adc
add
sub
aam
aad
jg
dec
xchg
mov
(bad)
sbb
and
rol
or
mov
jl
(bad)
jae
sub
pop
or
sbb
enter
push
dec
gs
leave
jae
cwde
jbe
cmp
addr16
ss
mov
mov
adc
inc
(bad)
cwde
add
leave
cwde
pop
cmp
call
cmps
aaa
add
(bad)
push
or
pop
ins
and
call
test
cwde
call
jno
xchg
movs
mov
ins
fcom
mov
mov
mov
ins
icebp
or
gs
jmp
pusha
mov
and
xchg
and
(bad)
mov
xchg
(bad)
fwait
outs
push
dec
imul
test
cdq
das
mov
jb
fnstcw
cmp
dec
jne
cdq
jb
(bad)
dec
mov
cdq
out
mov
mov
fst
dec
xchg
and
mov
imul
cwde
inc
xor
(bad)
cdq
xchg
dec
imul
add
pushf
aas
leave
popf
push
cmp
or
xlat
cwde
add
xchg
out
jns
dec
cmp
cdq
add
pop
xchg
aas
cmp
jmp
jno
mov
daa
mov
out
or
or
pop
mov
dec
jne
mov
dec
mov
adc
xchg
xor
hlt
pop
xchg
and
pop
or
das
jns
xor
mov
dec
xchg
lods
sub
mov
push
jl
fiadd
fimul
fst
popf
adc
mov
jmp
cmp
leave
nop
and
mov
sbb
mov
leave
cdq
mov
push
jnp
stos
adc
sub
test
repnz
dec
or
xchg
mov
popf
bound
mov
test
int
stos
sub
mov
stos
repnz
sahf
mov
retf
jmp
lahf
test
(bad)
jmp
pop
(bad)
mov
sbb
lahf
mov
pop
je
mov
mov
mov
mov
cdq
and
call
xchg
mov
cdq
inc
jmp
ss
clc
js
fistp
adc
or
jns
lahf
jmp
adc
stos
(bad)
sbb
lock
jo
xchg
or
cdq
mov
mov
cli
mov
mov
fsubr
mov
fcom
test
mov
mov
(bad)
je
lods
idiv
shl
cmp
sub
fwait
fwait
pop
call
or
xchg
inc
retf
mov
loopne
or
call
push
fldenv
pop
mov
or
mov
mov
xchg
das
aas
adc
or
fwait
mov
dec
cmps
and
jle
sbb
sbb
mov
add
mov
jmp
mov
mov
pop
xchg
and
mov
mov
stos
mov
or
stos
movs
test
mov
mov
sub
mov
retf
mov
imul
mov
fwait
mov
dec
mov
pop
mov
test
jmp
or
pop
int3
jp
push
test
sti
mov
sub
sti
push
jo
add
add
cmp
cmp
fiadd
inc
es
cmp
mov
aaa
mov
retf
stos
mov
stos
mov
push
popf
jnp
in
stos
stos
xor
mov
mov
in
or
sub
cli
stos
mov
stos
ret
mov
push
mov
xchg
sbb
test
fwait
mov
mov
(bad)
sbb
rol
sbb
adc
lods
sar
aas
adc
mov
shr
mov
sub
dec
mov
mov
push
retf
scas
sbb
xor
or
mov
stos
mov
mov
jns
mov
pushf
add
cmp
aas
aad
adc
(bad)
in
lods
and
les
xchg
mov
mov
xchg
sbb
mov
stc
enter
add
mov
fcmovb
inc
cmp
xchg
mov
pop
sub
loopne
pop
or
cld
leave
jge
mov
mov
pop
sub
cli
scas
pusha
jnp
outs
fdivr
sbb
inc
stc
leave
inc
sbb
loopne
imul
leave
mov
xchg
inc
retf
enter
xor
mov
cld
leave
jle
mov
in
mov
mov
into
xchg
stos
int
retf
lods
sti
sbb
sbb
xor
xchg
sti
mov
lock
mov
add
add
stos
jb
lods
or
cmp
int
fild
loopne
(bad)
ins
retf
ror
in
enter
addr16
sub
lods
rol
iret
sbb
pop
ins
(bad)
pop
or
xor
adc
mov
mov
and
mov
scas
(bad)
pushf
retf
in
fcmovne
out
mov
xor
rcl
mov
icebp
sub
jb
int3
call
sub
sti
cmp
inc
sub
cmp
iret
ror
mov
cmp
das
fadd
lds
ins
(bad)
mov
(bad)
(bad)
jbe
(bad)
push
cmp
inc
sbb
mov
jge
cli
dec
leave
jnp
retf
lea
xchg
shl
mov
loopne
jle
int3
mov
jbe
pushf
mov
test
push
lods
into
push
cmp
xchg
adc
aad
sbb
sar
ret
pop
ins
shl
sar
shl
jge
or
std
aad
pop
fldenv
fcom
into
cmp
xlat
js
mov
pop
rol
vpunpckhdq
push
sbb
fcomp
fidiv
fnstenv
iret
xchg
in
xlat
mov
xlat
ret
(bad)
fs
into
mov
sti
mov
fistp
xchg
inc
jge
push
sbb
rcr
loopne
scas
cmp
xchg
in
iret
pushf
pop
aam
sub
push
loopne
push
rcr
mov
outs
retf
dec
loope
or
gs
ret
lods
aad
sbb
jl
fucomi
pop
aad
ds
ret
or
arpl
xchg
popf
ficomp
mov
sbb
mov
cmps
jge
scas
dec
in
xor
fnstsw
or
rcr
scas
loopne
fmulp
sar
dec
loopne
std
ficom
and
retf
into
push
cs
cmp
les
imul
mov
das
scas
rol
(bad)
loope
ins
fldcw
loopne
fucom
xchg
lods
out
out
out
push
add
add
(bad)
aam
int
ret
mov
mov
xchg
push
jecxz
int3
loope
into
(bad)
mov
xlat
test
xchg
(bad)
loop
mov
mov
(bad)
ficom
fld
mov
mov
lahf
cs
mov
inc
xlat
arpl
jmp
sub
cmp
xchg
mov
int3
pop
jmp
fsubp
cwde
scas
jmp
popf
into
call
in
mov
xchg
mov
test
xchg
mov
cmp
inc
mov
ins
mov
dec
scas
(bad)
loopne
in
jecxz
and
aas
add
dec
and
mov
sbb
inc
mov
(bad)
cmp
sar
jecxz
mov
mov
out
mov
(bad)
fsubp
lods
or
push
push
fucomi
pop
jmp
(bad)
out
cmp
mov
out
xchg
sahf
fdivp
out
repnz
in
xor
mov
lock
add
fdivp
push
mov
hlt
outs
jmp
sbb
mov
repz
icebp
out
scas
jecxz
sahf
lock
cmc
in
fcmovbe
push
lock
fcom
out
inc
(bad)
loopne
pop
lock
icebp
and
in
sub
out
jp
lock
test
not
out
xlat
(bad)
fdivp
push
sbb
adc
mov
test
push
div
bnd
xrelease
jnp
icebp
imul
or
out
mov
and
clc
sti
sbb
xchg
jg
aaa
jg
push
imul
push
loop
out
out
repnz
cmp
leave
(bad)
cli
popa
iret
cli
mov
clc
clc
jge
aad
repz
icebp
lods
fild
dec
out
aaa
dec
repnz
fcomip
lods
jg
xor
mov
loopne
pop
repnz
out
in
scas
call
fdivp
cvtps2pd
adc
int3
das
div
cld
lds
int
out
mul
lahf
fadd
div
fnstsw
jge
jmp
repz
jo
ret
in
iret
cld
(bad)
push
or
sub
pop
add
sub
pop
mov
xchg
xchg
add
sub
mov
cwde
add
and
mov
movs
mov
dec
pop
(bad)
(bad)
retf
mov
cmps
mov
mov
fstp
(bad)
popf
lahf
(bad)
(bad)
nop
xchg
sar
nop
icebp
add
test
call
arpl
or
outs
xchg
fisub
fwait
(bad)
ins
loope
addr16
push
sub
jmp
xor
push
les
or
xchg
cmp
repz
xchg
mov
pop
dec
stos
mov
retf
addr16
retf
inc
jno
xor
inc
pop
xor
mov
mov
push
sub
mov
sub
jmp
int
cmp
loopne
mov
xor
jmp
cmps
dec
jge
dec
fnstcw
push
jmp
shr
mov
jae
or
lods
sub
pushf
ret
ja
sub
pop
fisubr
mov
int
sub
xor
jmp
enter
adc
daa
mov
xchg
cmp
or
mov
mov
(bad)
retfw
xor
fidivr
popf
imul
(bad)
stos
cmp
fldcw
call
mov
ja
loope
mov
fnstsw
mov
jle
stos
fwait
in
in
push
aad
daa
push
jns
dec
xchg
add
adc
add
pop
mov
adc
out
push
pop
fsub
pop
jg
jle
popa
and
sub
mov
cmp
pushf
aaa
xchg
and
push
jns
popf
push
cwde
(bad)
outs
sub
cmc
bound
push
inc
mov
push
jge
cmps
arpl
mov
clc
and
stc
cmp
mov
(bad)
fst
push
dec
ins
mov
loopne
pop
push
jo
inc
pop
jb
inc
pop
fwait
jo
sbb
pushf
add
test
shl
popf
enter
fwait
sub
fldenv
imul
fwait
cdq
pop
ss
aam
add
add
or
ss
cmp
xor
test
and
lea
or
test
and
ja
xchg
push
dec
cdq
and
daa
push
mov
leave
loopne
scas
cmp
imul
and
mov
adc
sub
mov
nop
push
add
sbb
in
mov
mov
mov
and
dec
in
mov
mov
add
mov
pop
aas
pusha
mov
jmp
add
arpl
les
adc
inc
pop
dec
ret
lea
xor
adc
inc
fld
movs
xchg
jl
xchg
leave
enter
pushf
xor
and
jne
(bad)
cmp
and
mov
inc
xor
(bad)
and
rol
adc
ins
adc
ss
fdiv
rol
push
jno
daa
xlat
dec
xor
fimul
loop
pop
ret
mov
add
push
adc
lods
xor
dec
fwait
add
es
dec
sub
and
add
xor
js
push
mov
xchg
shl
call
dec
in
out
mov
mov
scas
xor
sahf
inc
mov
in
dec
out
js
js
outs
mov
mov
sub
mov
lahf
xor
in
pusha
inc
lods
jp
rcl
scas
lock
divps
and
adc
dec
js
cmp
xchg
xchg
popa
mov
cmps
ins
push
jg
test
jl
mov
dec
outs
mov
xor
pop
or
(bad)
sub
(bad)
out
aas
adc
jmp
add
stos
lahf
in
nop
aas
mov
rcr
out
push
idiv
push
retf
idiv
xor
pusha
add
iret
jl
sbb
xor
sub
mov
mov
adc
cs
push
les
loope
(bad)
aam
cld
cmp
jge
pop
fucomp
fs
inc
adc
adc
imul
dec
push
test
dec
and
pop
test
mov
inc
mov
or
and
cmps
sbb
adc
mov
and
dec
pop
add
rol
sahf
clc
ret
sbb
and
out
inc
xchg
jmp
pop
add
cwde
inc
cmp
xchg
mov
and
jb
inc
cmp
mov
mov
sbb
pop
and
add
ror
xchg
test
and
rol
inc
dec
retf
adc
push
leave
dec
cmp
sub
xor
jne
retf
pop
cli
repnz
ror
xchg
bound
repz
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
into
or
hlt
mov
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
inc
sub
cmp
or
and
pop
push
lea
mov
and
pusha
test
or
adc
push
or
je
imul
mov
ror
add
add
mov
pop
sub
add
imul
aam
repnz
test
jmp
aad
(bad)
jne
fs
xchg
dec
mov
push
mov
mov
shr
movs
adc
mov
and
aad
shl
adc
pop
sub
mov
jp
call
mov
add
jns
add
mov
sub
fisubr
sub
ret
mov
int
(bad)
dec
ja
adc
out
push
cdq
fwait
pop
(bad)
xor
in
sbb
pop
hlt
xchg
mov
jecxz
sub
test
cld
mov
scas
jge
mov
mov
jge
test
add
aad
cld
(bad)
sar
push
or
rcl
scas
imul
add
nop
pop
and
js
mov
mov
rcl
adc
pop
bnd
or
lock
mov
pop
pop
add
and
add
clc
jne
cmp
xor
ss
mov
sbb
ss
sar
movs
lods
xchg
aad
inc
mov
and
repz
dec
jl
lock
das
test
cmp
std
inc
xor
xchg
ja
out
fdivr
(bad)
pop
adc
lods
mov
nop
pop
pop
jmp
mov
imul
or
fldenv
pop
pop
addr16
sbb
in
outs
pop
fucomp
(bad)
xlat
mov
jge
pop
pop
adc
xchg
shl
pop
mov
or
cdq
ror
out
sahf
push
popf
and
cdq
shl
(bad)
int
(bad)
sbb
sbb
pushf
cmps
ins
push
lods
mov
xor
xchg
fcmovnu
test
imul
push
push
and
push
lods
mov
ins
add
scas
adc
xchg
mov
ja
pop
std
scas
mov
dec
pop
jbe
pop
loopne
fdivp
or
jb
mov
xchg
mov
mov
cmc
sub
inc
out
pop
mov
pop
lods
jmp
mov
add
push
jecxz
cmp
push
mov
shl
mov
mov
mov
sub
aaa
movs
sub
inc
addr16
or
in
pop
push
mov
stos
add
xor
add
clc
xchg
fadd
pop
int
test
mov
sbb
movs
inc
aad
rcl
mov
fadd
push
dec
jg
lds
cld
pop
or
xlat
mov
jmp
popa
fld
fsub
sti
fstp
sub
sahf
repz
int
mov
add
xchg
or
pop
rcr
dec
bound
jecxz
in
(bad)
mov
mov
adc
sar
(bad)
repz
fcomp
cs
mov
aas
inc
fcmove
data16
or
aam
cwde
mov
mov
push
or
sahf
cmp
ins
mov
in
(bad)
jns
clc
dec
imul
pop
test
cdq
sahf
in
sti
jge
scas
pop
hlt
hlt
mov
fdivr
lea
and
jo
in
adc
push
and
fst
xchg
imul
and
je
xchg
push
jns
xchg
ins
cmp
outs
(bad)
ja
loope
js
xchg
push
mov
mov
(bad)
push
pop
push
lds
xlat
jg
rcr
cmps
jg
test
test
je
mov
and
ja
ja
mov
push
add
ins
shl
jb
xchg
imul
jno
movs
add
sbb
addr16
fs
imul
jae
sub
enter
jo
xlat
jo
xor
fsub
pop
sub
pop
imul
xchg
jnp
push
test
loope
push
std
inc
jle
(bad)
push
xchg
(bad)
pusha
repz
push
jp
gs
mov
pushf
mov
or
addr16
cmps
outs
outs
pop
test
addr16
cbw
sbb
cwde
addr16
xrstors
jbe
shl
pop
dec
inc
ja
xchg
jg
enter
pop
xchg
or
mov
data16
movs
addr16
data16
jbe
aaa
push
jle
pop
jne
out
sbb
add
pop
data16
xchg
mov
jp
test
imul
lock
fs
cli
data16
ins
xchg
push
and
push
xchg
adc
ja
imul
and
inc
pop
pop
leave
test
cmp
jle
cmp
mov
push
aaa
adc
cmps
aaa
dec
push
addr16
gs
xchg
outs
call
xchg
jb
dec
pop
cmp
int
addr16
xchg
out
push
test
pop
(bad)
mov
loope
pop
xor
imul
sub
push
nop
lahf
mov
aaa
cmc
pop
(bad)
mov
xchg
pop
imul
dec
mov
push
xchg
jbe
pop
push
sar
jbe
or
outs
jmp
push
xlat
jno
fadd
lds
xchg
jg
xchg
pop
sub
mov
push
inc
enter
xchg
scas
data16
xchg
xchg
aaa
mov
bound
push
push
mov
fs
pop
pushf
call
push
mov
add
xchg
bound
mov
or
bound
add
call
push
pop
pop
shl
icebp
ja
loope
pusha
sub
ins
xchg
dec
daa
mov
sbb
jae
je
add
in
shr
mov
push
mov
pop
xlat
(bad)
cdq
xor
imul
push
lds
cmp
dec
nop
jg
mov
mov
pop
and
xchg
pop
data16
jno
jmp
adc
lea
pop
mov
arpl
sub
gs
mov
leave
addr16
mov
jecxz
xchg
and
jno
enter
fwait
mov
pushaw
ss
fdivr
pop
out
pop
leave
add
xchg
inc
ins
mov
add
imul
pusha
div
xchg
test
cmp
sbb
push
cmp
arpl
adc
cmp
pop
ficom
data16
jne
ds
add
loopne
and
arpl
mov
shl
mov
sbb
movs
inc
jp
dec
call
movs
dec
cli
movs
push
sbb
pop
movs
push
jp
inc
adc
add
add
sub
add
add
add
xchg
add
add
(bad)
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
cmp
cmp
push
or
sub
pop
pop
or
add
call
fs
adc
outs
ins
mov
lods
test
inc
ds
cs
dec
dec
int3
retf
jmp
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
ss
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
ds
cs
push
or
call
inc
and
and
mov
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
scas
mov
jle
inc
ds
xor
xor
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
cmp
inc
sub
xor
sahf
pushf
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
ror
scas
std
dec
movs
retf
stc
sub
pop
lods
or
xchg
cdq
jmp
add
sbb
or
mov
push
or
sbb
adc
jp
adc
mov
dec
xchg
xchg
(bad)
mov
stos
add
push
mov
mov
sbb
mov
jmp
outs
stos
fwait
aaa
sbb
or
imul
mov
or
or
mov
sbb
jp
dec
jmp
inc
sti
mov
imul
movs
jae
mov
addr16
push
dec
stc
(bad)
mov
call
mov
inc
add
pop
add
push
scas
(bad)
mov
mov
lea
add
pusha
sti
lods
pop
or
imul
mov
or
nop
mov
mov
push
imul
mov
js
xchg
sti
mov
(bad)
retf
mov
mov
cwde
sbb
fstp
mov
lock
pusha
mov
cmp
mov
mov
adc
loop
scas
fistp
nop
jmp
lods
xchg
or
jmp
cmc
sbb
sbb
cmp
leave
mov
sub
stos
mov
cli
mov
cmp
jp
mov
fdivr
pop
mov
fidivr
sbb
jnp
in
dec
mov
retf
add
retf
shr
add
cli
add
ret
cmp
mov
sbb
stos
adc
mov
adc
add
cmp
ret
jp
add
int3
les
sub
inc
sub
push
sub
dec
sub
or
push
sub
out
cli
add
lds
(bad)
pusha
lods
add
cmp
pop
int3
les
inc
ret
pop
mov
ins
ins
add
add
in
(bad)
out
test
inc
pop
mov
imul
(bad)
jp
enter
pop
push
les
stos
sbb
cmp
mov
mov
xor
mov
jo
and
add
mov
nop
retf
retf
push
int3
leave
jp
mov
jo
popf
pushf
retf
jp
retf
add
(bad)
or
movs
lods
add
pushf
leave
sar
in
mov
dec
int
imul
sbb
mov
retf
out
test
les
or
sub
popf
in
int
retf
cmp
lds
fmul
mov
add
into
imul
mov
push
pusha
add
retf
test
retf
popf
fmul
sub
stos
hlt
jl
sti
cmp
icebp
sub
stc
lods
iret
push
sub
sbb
clc
pushf
mov
popf
iret
test
rol
ins
retf
add
dec
add
sar
and
xchg
cmp
cmp
pop
lods
rcr
shl
or
inc
sbb
cmc
jl
adc
pop
in
rcl
sub
sub
xor
pop
fst
ins
add
pop
shl
cmp
sar
or
pop
sbb
inc
cmp
push
sbb
mov
add
retf
inc
ins
dec
add
xlat
pop
mov
mov
retf
xor
aad
mov
dec
pusha
fmul
(bad)
adc
ret
mov
lea
mov
dec
in
fcom
retf
aam
fst
leave
jnp
rcr
mov
(bad)
sar
rcl
fstp
fst
dec
pop
iret
mov
rol
in
fnstcw
(bad)
pusha
lods
iret
push
std
fidivr
fmul
sub
or
xchg
(bad)
(bad)
sbb
xor
add
shl
jge
adc
mov
fimul
rcl
fsubr
dec
sbb
sub
ror
mov
shr
fst
dec
sbb
push
loopne
pushf
fmul
mov
cli
mov
add
fmul
xchg
mov
add
icebp
jge
out
int
dec
ins
std
retf
mov
movs
or
das
into
loope
jge
pusha
pop
loopne
ins
fsub
out
(bad)
aam
ins
aad
int
das
popf
fmul
mov
mov
add
cs
ins
fucom
cmp
sar
loopne
add
add
loopne
int
push
push
loop
(bad)
loopne
cmp
mov
loopne
out
add
shr
ins
loopne
ins
add
add
(bad)
shr
out
std
loopne
(bad)
aam
cld
xlat
sub
(bad)
pop
fnsave
ror
aam
jle
jg
in
push
(bad)
cmp
mov
mov
fidiv
fnsave
aam
jle
mov
fnstsw
dec
mov
retf
sbb
add
or
fisubr
inc
stos
in
std
loopne
mov
mov
mov
add
push
fld
out
loop
mov
fiadd
in
mov
scas
outs
out
mov
sbb
cmp
out
mov
cmps
pop
(bad)
mov
cwde
sub
leave
(bad)
fidivr
sar
or
outs
jle
xchg
mov
jmp
or
inc
(bad)
out
inc
(bad)
out
imul
sbb
out
mov
out
jecxz
(bad)
fdivrp
lock
call
ds
push
scas
in
into
out
into
in
pop
ds
dec
or
mov
imul
jmp
dec
stos
dec
xor
hlt
in
out
pop
add
shl
ds
hlt
cmp
xor
stos
pop
loopne
sub
jmp
push
out
mov
pop
(bad)
out
dec
ins
icebp
push
push
shl
(bad)
es
in
pushf
shl
lock
aam
(bad)
out
daa
sbb
cmp
jmp
into
fist
aad
mov
mov
out
add
sub
mov
out
mov
aad
ficom
aas
icebp
gs
pushf
pop
fldenv
fild
ins
fild
or
mov
hlt
jbe
loop
sahf
call
mov
push
add
add
pop
fst
cmc
jb
frstor
stc
out
fldcw
add
nop
add
in
pop
test
ins
fdivrp
scas
iret
add
out
imul
(bad)
out
pop
mov
sbb
dec
stc
push
mov
cwde
(bad)
sbb
outs
pop
sti
jl
frstor
std
mov
rcl
hlt
lahf
dec
repnz
std
pop
jg
fsubr
fsubr
hlt
dec
push
neg
pop
aam
(bad)
(bad)
mul
neg
into
inc
inc
test
mov
push
and
imul
push
clc
test
dec
dec
mov
push
adc
jmp
test
or
jmp
jae
cli
nop
sub
pop
call
push
test
fs
stc
in
sub
sbb
std
lods
xchg
dec
fistp
in
pop
leave
mov
mov
jmp
sbb
outs
xchg
scas
pop
xchg
sbb
xor
and
not
loopne
push
fwait
cmp
rol
nop
push
mov
or
les
mov
mov
test
out
mov
cmps
pop
xchg
push
sbb
xchg
mov
push
adc
dec
inc
push
dec
scas
pop
sub
pop
retf
dec
pop
xor
outs
and
inc
xchg
test
mov
sub
sub
aam
xor
mov
xchg
push
into
pop
mov
in
mov
mov
mov
lds
mov
sahf
mov
sub
mov
bound
xchg
shr
aad
aam
out
test
imul
mov
imul
lods
mov
data16
(bad)
jl
sbb
retf
or
xor
ins
mov
pop
jbe
mov
repz
into
mov
fnstcw
add
add
add
(bad)
aam
ins
jmp
mov
je
inc
inc
pop
sbb
sbb
aam
fidivr
enter
in
addr16
xchg
jne
lds
into
inc
xchg
aad
mov
push
dec
icebp
jno
bound
pop
or
ret
jmp
inc
js
pop
in
pop
push
ss
ja
bound
iret
push
xchg
mov
push
push
outs
rol
pop
or
sub
test
push
out
or
and
sbb
xchg
pop
xor
jbe
pop
add
sbb
jno
in
jecxz
jp
mov
(bad)
dec
push
out
sbb
jl
adc
xchg
pop
cmp
pop
xchg
or
xchg
nop
and
push
mov
mov
mov
or
adc
mov
pop
add
daa
mov
test
jne
aad
out
push
es
sbb
les
cmp
scas
fisttp
test
test
push
test
dec
xchg
jl
mov
mov
dec
jnp
lahf
push
xchg
imul
push
mov
jl
mov
imul
inc
sub
scas
sbb
neg
movsx
mov
or
dec
mov
xchg
cmp
jmp
(bad)
stos
movs
sahf
leave
out
stos
add
xor
or
mov
sub
mov
mov
stos
vunpckhpd
jbe
mov
test
mov
(bad)
stc
cwde
mov
or
lds
mov
ss
mov
lods
mov
cmp
xor
xor
xchg
dec
add
xchg
mov
into
fwait
add
adc
int
sbb
push
fiadd
dec
ss
push
call
loopne
adc
jmp
in
xchg
jecxz
sub
fist
sub
jns
(bad)
sub
push
out
loopne
test
pop
inc
daa
sub
enter
fst
sbb
(bad)
jno
or
out
inc
pop
imul
repz
js
mov
mov
retf
inc
(bad)
dec
mov
leave
or
scas
in
jno
lods
cli
lock
neg
and
in
add
jne
xor
test
inc
shl
jbe
mov
test
fdivr
mov
(bad)
mov
stos
mov
gs
cmp
(bad)
in
pop
push
dec
loopne
mov
outs
sbb
retf
xor
pop
sti
inc
pop
adc
xor
enter
jecxz
shl
in
cmp
add
mov
cmc
jo
aas
push
gs
inc
cs
cli
ficom
push
and
sbb
add
or
adc
mov
xor
enter
lds
repnz
pushf
adc
int3
aad
adc
(bad)
retf
jle
or
fadd
out
add
rcr
add
mov
rcl
pop
mov
mov
pop
xor
fimul
rol
sub
adc
lock
ret
xchg
mov
test
fbstp
rol
ret
fsub
fild
inc
and
adc
jns
scas
jnp
test
dec
mov
movs
push
cmp
dec
cmp
sbb
inc
push
sub
fstp
inc
shl
in
cmp
and
icebp
push
enter
xchg
jg
or
cli
int
xchg
ss
jmp
mov
mov
xchg
or
adc
rol
add
xchg
jae
mov
jae
add
daa
outs
call
add
cmp
push
xchg
lahf
add
xor
cdq
dec
mov
or
or
(bad)
lock
in
add
cmp
pop
aaa
mov
es
in
leave
iret
adc
(bad)
cmp
popf
je
addr16
push
xchg
sahf
je
mov
sub
and
jmp
leave
dec
xchg
xchg
test
jl
cmp
xchg
popf
mov
call
int3
test
mov
mov
ror
adc
rcl
and
addr16
sahf
(bad)
adc
pop
stc
and
ror
lock
jns
call
nop
inc
cs
push
add
sub
movs
cmp
inc
adc
mov
jae
xor
daa
dec
lods
(bad)
adc
jne
sub
pop
fwait
push
adc
mov
xchg
ins
push
sbb
sub
mov
lock
jbe
js
lea
dec
fcmovne
stos
mov
jle
or
xor
(bad)
fcmove
dec
push
sahf
outs
aad
sub
pop
pop
sahf
push
mov
jg
pop
mov
mov
push
pushf
fcmovbe
add
sub
sbb
pop
in
add
or
dec
imul
mov
test
pop
mov
pushf
out
ds
stos
cld
inc
in
jp
imul
and
lea
mov
pop
lock
sub
add
xchg
scas
(bad)
popf
scas
jge
dec
into
cmp
and
scas
xchg
or
sub
or
xor
sbb
sti
out
(bad)
shl
mov
adc
mul
in
pop
pop
arpl
ret
cmp
jmp
inc
mov
lock
adc
sbb
leave
neg
sub
mov
mov
loop
addr16
add
test
in
add
sbb
add
out
call
int
fiadd
sub
or
js
scas
icebp
ja
in
sbb
loope
push
mov
mov
mov
lahf
sub
pusha
xlat
cdq
ret
mov
jae
mov
imul
mov
jmp
(bad)
mov
in
stos
jno
push
inc
out
cmps
addr16
push
cmp
in
or
rcr
add
cli
int3
or
mov
push
sbb
add
jbe
mov
(bad)
xor
or
xchg
jnp
out
sub
sbb
frstor
push
add
sub
ins
push
pushf
xlat
(bad)
add
idiv
and
fisttp
mov
mov
rcl
mov
rol
das
jb
mov
lock
loop
lods
xor
cdq
pusha
dec
fs
add
dec
add
cmp
int3
sbb
repz
cdq
shl
pop
add
adc
je
ret
cmp
push
cld
fcomp
idiv
leave
push
out
ins
nop
iret
cld
in
mov
out
fistp
or
(bad)
ds
push
into
add
mov
clc
ret
mov
std
int3
push
aaa
add
mov
sbb
fldenv
scas
jmp
cmp
(bad)
iret
mov
in
mov
cmc
stos
iret
mov
adc
popf
add
inc
pop
add
and
jl
sbb
inc
dec
js
pop
or
push
ins
jne
repz
addr16
mov
jmp
ja
fistp
ins
add
std
(bad)
mov
mov
shl
lock
nop
jns
pop
jle
inc
mov
xlat
fcmovne
stc
into
addr16
in
jl
sti
jecxz
sub
leave
xchg
jg
or
sbb
shl
(bad)
not
inc
cmp
enter
dec
adc
push
xlat
mov
stos
das
cmp
pop
and
out
into
(bad)
icebp
stos
std
std
out
mov
clc
xchg
sahf
or
mov
gs
movs
cmps
jbe
addr16
daa
add
push
or
call
xor
add
adc
add
xlat
cmp
mov
push
mov
lds
call
stos
ja
mov
jl
xchg
js
push
add
js
or
js
push
jle
(bad)
jle
and
pop
jp
pop
jbe
xlat
cmp
js
dec
mov
dec
fadd
nop
cmp
mov
arpl
int3
mov
xor
div
or
sbb
addr16
adc
jb
push
jo
jle
pop
sbb
ja
cwde
jns
daa
ja
pop
jge
rol
adc
mov
arpl
inc
add
mov
test
jge
pop
mov
div
mov
mov
jne
sbb
test
pop
lock
clc
mov
cmps
js
ror
sar
mov
adc
fdiv
mov
mov
push
sbb
or
xlat
add
cmps
ja
fadd
push
mov
mov
jne
clc
je
cmps
jp
xchg
inc
mov
jo
clc
jo
clc
jnp
sbb
dec
mov
mov
cwde
add
dec
fdivr
inc
mov
add
jbe
xchg
ja
sub
clc
mov
es
repnz
mov
call
cli
mov
dec
test
repnz
sbb
jne
mov
(bad)
push
aam
add
icebp
cwde
add
test
mov
add
sub
add
mov
loopne
jb
and
cmp
mov
sub
add
je
sub
jbe
pop
push
jne
mov
cmp
inc
leave
xchg
add
push
xchg
sbb
nop
or
sub
xchg
add
repnz
cmp
ja
mov
xor
fistp
pop
mov
push
cmp
sti
enter
mov
mov
sub
jbe
jmp
inc
push
ds
jo
test
outs
imul
sahf
imul
js
and
ja
jmp
test
or
xchg
pop
stc
mov
mov
ds
xchg
mov
sbb
sub
jo
cwde
add
daa
add
sbb
cmp
test
xchg
mov
sub
ficom
pushf
xor
ja
jmp
outs
jmp
in
cmps
add
sub
or
out
pop
fstp
jecxz
xchg
or
cdq
lahf
mov
call
not
mov
jns
jl
xchg
sbb
sub
pop
ja
push
cdq
push
ja
cmp
xlat
xchg
cmp
xor
mov
or
mov
cdq
mov
jns
mov
call
jns
movs
ss
cdq
ficom
pushf
jmp
inc
mov
ja
mov
pop
adc
inc
sbb
sub
pop
mov
xlat
add
enter
xchg
sti
cmp
cdq
add
sbb
test
lahf
test
movs
sub
add
push
test
fldenv
cmp
or
mov
xchg
sar
dec
mov
jp
leave
sbb
jmp
cwde
sub
xchg
out
nop
cmp
push
test
lahf
mov
cmps
cld
out
push
movs
cmp
ss
mov
fisub
fldenv
mov
call
xchg
xor
xchg
xchg
jmp
mov
jmp
xchg
pop
mov
nop
add
dec
stos
sub
(bad)
scas
mov
loopne
scas
(bad)
pop
lods
retf
call
sub
fstp
stc
fwait
mov
arpl
add
mov
out
test
mov
sbb
cdq
sub
mov
jns
stc
cli
test
mov
push
add
mov
sbb
and
sbb
call
(bad)
jns
and
movs
out
(bad)
mov
xchg
or
inc
or
dec
cdq
call
mov
jp
retf
jle
xchg
push
fwait
lods
inc
rol
call
mov
cli
mov
mov
xchg
fnstenv
js
push
dec
mov
mov
fist
stos
sahf
fs
es
xchg
mov
or
mov
pop
xchg
fldcw
stos
inc
lock
or
mov
or
pop
sbb
(bad)
cli
mov
test
sub
push
add
add
movs
cmp
mov
js
dec
sub
inc
mov
jmp
fld
cmp
add
lods
ins
mov
mov
sub
xor
mov
sub
dec
mov
mov
or
imul
mov
or
push
cvtdq2ps
jnp
jge
stos
dec
jnp
sbb
scas
pop
add
mov
mov
add
mov
or
cmp
xor
scas
cmps
dec
mov
fild
jmp
and
mov
mov
jno
mov
add
dec
jp
test
mov
in
sbb
pop
test
dec
mov
add
shl
ret
mov
retf
mov
fistp
mov
fucomip
les
mov
jns
mov
(bad)
pop
fdivr
mov
in
mov
sbb
out
mov
int3
add
sbb
cs
add
cmps
mov
stos
mov
cli
enter
retf
push
jge
add
mov
mov
lods
dec
sbb
mov
mov
jmp
mov
xchg
fnstcw
mov
jmp
daa
sbb
xor
xor
ret
add
mov
cmp
fidivr
or
pop
jo
gs
clc
pop
mov
dec
mov
inc
int
stos
(bad)
imul
fcomp
cwde
inc
or
(bad)
sbb
mov
rol
sbb
shr
cmp
int3
bound
(bad)
pop
iret
iret
jl
call
mov
call
loop
enter
pop
jge
ror
shl
dec
shr
or
loopne
enter
icebp
cwde
leave
cld
or
sub
cwde
pop
xchg
xlat
mov
es
xchg
in
mov
cmp
jmp
mov
cmp
ror
in
mov
in
mov
jl
out
or
clc
in
mov
cmp
dec
xor
mov
add
or
push
or
mov
cwde
inc
pusha
aad
cdq
rcl
bound
sbb
fwait
int
dec
retf
into
aaa
or
cmp
inc
in
mov
dec
aam
popf
aad
fst
inc
mov
xchg
test
enter
(bad)
ins
shl
int
dec
rcr
imul
or
bound
mov
jg
pop
fcomp
xchg
pusha
lods
fldenv
enter
fdivr
xlat
es
jecxz
iret
in
mov
stos
xchg
scas
or
(bad)
jmp
mov
into
repnz
es
inc
jl
sahf
dec
fcmovnu
or
sahf
mov
ins
dec
(bad)
pushf
loopne
nop
sub
jle
rcr
int
mov
scas
int
test
inc
loopne
retf
into
in
fisub
mov
lods
outs
in
fiadd
in
sub
sub
pop
std
fstp
mov
sbb
scas
ins
fidiv
retf
in
jl
xchg
int
sti
or
mov
int
jge
pop
(bad)
or
aam
sub
pop
lods
fcom
into
aad
pushf
aad
mov
xor
loope
sbb
pop
sub
(bad)
(bad)
(bad)
fidivr
fmul
or
es
fld
cs
lods
loope
lods
iret
push
jecxz
and
pop
ds
(bad)
das
or
push
in
ins
mov
(bad)
shr
mov
jecxz
fadd
fstp
gs
mov
sub
mov
dec
ins
fmul
jecxz
fst
add
out
std
(bad)
or
test
ror
js
fidivr
(bad)
sub
out
push
mov
(bad)
ror
call
(bad)
fnstsw
out
scas
fld
fdiv
fbld
(bad)
dec
retf
loope
push
fdivr
jmp
pushf
loop
(bad)
loope
into
jmp
or
scas
mov
cmp
das
ins
jmp
std
xlat
xchg
out
in
lods
mov
int
arpl
jmp
cs
jns
out
mov
mov
mov
and
popf
fmulp
ins
(bad)
jge
popa
jo
ficomp
sub
jl
leave
lods
dec
jmp
lods
in
dec
push
jmp
out
(bad)
jmp
mov
mov
out
pop
loope
pop
fild
fidiv
loope
(bad)
fnsave
fucomip
cs
sub
out
sub
mov
daa
cs
pop
dec
fsub
pop
in
(bad)
xchg
jecxz
mov
cli
in
jmp
or
bnd
push
out
(bad)
push
jmp
and
and
imul
into
add
jge
adc
or
mov
fidivr
mov
jmp
sub
pop
jge
inc
mov
dec
dec
call
scas
call
dec
fidivr
push
scas
jmp
mov
popa
(bad)
ret
and
repnz
jmp
cmc
imul
add
mov
fucom
cs
xchg
outs
out
add
jmp
jge
sub
neg
jnp
je
clc
test
mov
jmp
(bad)
xlat
push
jg
outs
dec
int3
adc
loope
in
in
jno
stc
mov
out
pop
jmp
das
jmp
mov
sub
scas
jmp
outs
hlt
arpl
iret
push
jmp
ins
(bad)
sti
push
dec
cld
mov
cmc
inc
das
fisub
div
(bad)
mov
(bad)
idiv
cld
lea
xlat
ror
fistp
into
int
imul
lock
cld
fistp
pop
mov
sahf
outs
stc
xchg
aas
into
iret
mov
out
test
cmps
fcomip
push
or
pop
sub
sub
mov
lea
sbb
xchg
add
mov
sub
dec
xchg
cmps
stos
scas
stos
sub
mov
mov
sub
fwait
pushf
cwde
xchg
(bad)
pop
mov
nop
(bad)
test
mov
stos
cwde
rcl
mov
(bad)
test
cwde
mov
mov
mov
mov
cdq
mov
stos
cmp
pminub
push
clc
test
inc
imul
adc
jmp
bound
aaa
xor
inc
std
dec
mov
les
pop
ds
add
(bad)
jb
pop
stc
retf
push
fidivr
stc
jnp
or
cmp
cmc
cmp
push
cwde
inc
adc
push
inc
jne
or
jp
sub
push
lds
inc
sar
dec
mov
cmps
inc
xchg
or
aam
retf
sub
push
mov
dec
xor
xchg
push
jecxz
sub
adc
daa
retf
(bad)
ja
xchg
jbe
ins
push
pop
pop
pop
adc
sbb
call
pop
dec
scas
dec
cmc
xor
test
loope
mov
jb
push
jmp
popf
rcr
fidiv
mov
mov
test
or
or
cmp
call
push
mov
outs
push
jmp
popf
sub
loopne
les
and
mov
jne
push
test
loopne
mov
mov
icebp
push
nop
pop
push
stc
adc
and
sbb
inc
popf
inc
mov
int3
lea
fld
xor
shl
loopne
sbb
pop
rol
adc
cmps
pop
ja
mov
and
mov
push
jns
mov
dec
dec
jecxz
sbb
adc
cmp
inc
inc
sub
retf
pop
or
pop
adc
imul
push
xlat
sbb
xor
xchg
(bad)
mov
add
cmp
and
test
in
push
daa
dec
push
fmul
dec
mov
adc
loop
push
dec
cmp
dec
jp
in
cmps
inc
ffree
jmp
lds
jo
test
cmp
push
out
add
push
cmp
mov
add
loope
pop
push
je
sub
repnz
sbb
sub
xor
jmp
mov
inc
retf
ins
cmp
or
dec
sti
imul
inc
scas
frstpm(287
or
mov
sbb
add
pop
xor
mov
mov
sbb
mov
mov
xchg
fwait
push
pushf
out
mov
cmp
imul
pop
push
pop
mov
or
les
mov
or
enter
(bad)
sar
cmp
stos
inc
xor
or
adc
in
in
add
mov
lods
mov
pushf
sub
sbb
inc
or
xlat
pop
add
xor
pop
sbb
(bad)
adc
ins
jge
add
loope
fldenv
jo
popf
jbe
repnz
stos
sbb
fmul
nop
or
loopne
mov
mov
and
fidivr
mov
fidiv
mov
cmp
xor
ret
cmp
in
fld
push
test
mov
push
cmp
mov
push
xchg
jnp
pop
aaa
mov
fsubr
mov
ins
stos
(bad)
pop
xor
add
std
adc
neg
jne
sar
sub
push
imul
not
imul
cld
aad
mov
cmp
bsr
mov
pop
test
cwde
and
mov
adc
aaa
pop
lock
repz
push
add
pop
mov
jns
jle
fcmovnbe
add
dec
sbb
inc
test
inc
cld
enter
(bad)
mov
fmul
pop
cmp
lahf
cmp
add
or
jge
add
je
inc
sbb
xor
aas
xor
inc
mov
mov
hlt
popa
out
out
pop
or
mov
mov
adc
inc
and
xor
das
js
xor
sbb
mov
xor
jmp
sub
nop
mov
fld
push
popa
(bad)
inc
xchg
sbb
add
sub
fld
nop
add
mov
cdq
xchg
dec
push
jb
mov
jns
and
icebp
imul
(bad)
xchg
push
shr
xchg
shl
idiv
xchg
xchg
arpl
(bad)
retf
rcl
add
retf
scas
and
pop
(bad)
sub
xchg
retf
pop
adc
push
hlt
mov
push
dec
repz
aam
add
int
cmp
bound
jns
dec
ins
push
(bad)
rcr
rol
outs
jbe
call
into
jne
adc
ret
sub
jne
repz
add
rol
and
inc
fisttp
mov
and
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
outs
rcr
loopne
lods
cmp
pop
pop
imul
enter
sub
test
adc
jne
mov
mov
sbb
xchg
pop
scas
and
(bad)
fsub
mov
aaa
loopne
pop
jnp
sub
(bad)
mov
pop
in
or
fnsave
fs
fsubr
xchg
jne
jecxz
outs
imul
(bad)
jb
mov
jae
pop
loop
xchg
mov
movs
das
jb
pop
frstor
cwde
push
mov
mov
loope
add
cs
pop
test
cmp
outs
retf
sub
in
mov
sub
lods
or
fild
pop
jae
or
aad
adc
push
out
clc
sar
mov
aaa
mov
cmp
ret
lock
fneni(8087
mov
fadd
or
or
adc
enter
mov
jl
pop
das
cmp
lea
sub
cmp
scas
ins
pop
sbb
les
xchg
jno
loope
cmp
iret
int3
pop
push
imul
pop
(bad)
lock
fnstsw
xor
out
jno
jns
in
and
inc
inc
ret
push
out
jb
or
cs
clc
or
xor
repz
mov
or
add
jp
or
fnstsw
pop
test
outs
lock
sub
rcl
mov
loop
not
jl
ins
lods
pop
sub
and
mov
imul
rcl
adc
in
and
ds
mov
ficom
fwait
xchg
pop
mov
sbb
push
das
loope
pop
data16
xchg
arpl
mov
mov
(bad)
loope
arpl
inc
xchg
hlt
mov
std
imul
enter
mov
or
mov
lock
in
imul
retf
sbb
mov
das
sbb
dec
(bad)
out
test
xlat
fdivr
mov
cmp
jnp
fsub
es
adc
ins
jne
inc
(bad)
(bad)
mov
adc
pop
mov
jo
lock
jmp
mov
mov
rol
data16
arpl
in
cmp
sbb
sbb
push
and
pop
shl
adc
fwait
pop
mov
lods
jno
jle
or
mov
mov
bound
rol
jl
jae
repz
mov
cmp
arpl
jbe
aad
ins
sub
jl
jae
xor
fisttp
out
int3
inc
add
xor
sar
js
sahf
fisubr
bsf
retf
mov
push
push
ret
cmp
retf
jge
dec
scas
std
push
daa
pop
cmp
mov
adc
loopne
aam
fstp
pushf
pop
mov
jnp
add
xchg
cwde
fadd
and
popa
popf
scas
cli
push
fst
jae
push
call
mov
test
mov
sub
bound
sub
retf
mov
and
fdivp
sahf
push
iret
jne
mov
xor
scas
jl
clc
push
aaa
jmp
add
pop
jnp
inc
ins
push
(bad)
js
ins
mov
imul
pop
lods
mov
pop
push
arpl
mov
iret
xlat
ins
out
inc
ins
les
xlat
inc
ins
mov
gs
rol
(bad)
outs
mov
jg
es
push
jge
inc
imul
js
pop
sbb
outs
clc
xchg
sub
push
int3
cmps
jp
push
imul
outs
xor
lds
int3
mov
mov
add
xchg
or
jbe
rol
enter
outs
(bad)
cmc
ja
dec
je
sar
push
push
jle
ja
cmp
je
pop
jle
pop
jle
ja
push
nop
and
inc
aaa
fs
adc
test
mov
push
mov
fadd
cmps
push
popa
test
cli
xchg
je
out
pop
push
adc
pop
add
sub
jno
dec
ja
cmps
add
pop
daa
out
lds
push
(bad)
jb
sub
or
test
xor
push
mov
cmc
xchg
cmps
add
jnp
out
cmp
mov
mov
ss
or
call
mov
daa
test
outs
cdq
data16
ja
push
(bad)
jo
push
adc
add
cli
xchg
imul
int
mov
les
mov
mov
inc
pop
ins
cmps
popa
xor
add
sbb
daa
jge
jbe
xchg
test
inc
inc
fs
lea
(bad)
dec
inc
mov
inc
push
pop
cmp
test
mov
add
mov
jg
jne
fidiv
push
(bad)
call
cli
xchg
jns
jno
push
popf
or
ja
fsub
pop
inc
jle
inc
jae
pop
pop
push
add
pop
in
jle
out
adc
jge
xlat
jne
push
js
jbe
mov
addr16
gs
out
and
pop
pop
xchg
mov
adc
outs
pop
mov
sbb
add
sbb
ins
ret
imul
pop
jns
pop
jbe
sub
bound
jns
push
ins
and
xchg
cmc
(bad)
jnp
mov
cwde
jp
aaa
cmp
popa
loope
test
loopne
xlat
outs
int
jae
aaa
xchg
std
xchg
test
test
out
push
push
adc
scas
ja
loop
pop
push
fldenv
xchg
mov
jne
or
mov
scas
xor
shl
jbe
ret
dec
test
nop
div
jmp
sahf
test
sti
cwde
xchg
or
jbe
addr16
outs
(bad)
stos
pop
(bad)
mov
pop
(bad)
in
add
adc
dec
loopne
jp
gs
enter
xchg
mov
xchg
add
add
js
pop
xchg
outs
push
push
and
enter
xchg
je
pop
cs
outs
cmp
dec
pop
je
test
mov
jb
sub
push
xchg
enter
pop
xchg
out
neg
test
push
(bad)
mov
dec
mov
stos
popa
xor
outs
stos
jne
leave
mov
movs
jae
sbb
jo
mov
pop
xchg
fsub
pop
mov
or
fld
dec
push
mov
xchg
push
inc
cwde
sbb
pusha
jmp
push
or
inc
ins
push
dec
(bad)
gs
inc
jns
xor
mov
pop
push
mul
push
pop
cmp
pusha
inc
fldenv
mov
jg
es
mov
pop
mov
mov
outs
push
test
mov
mov
mov
push
xchg
(bad)
imul
xchg
ss
mov
jne
test
xor
jle
imul
xchg
pushf
fisubr
sbb
pop
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
int
add
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
lods
lock
test
mov
adc
scas
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
fld
or
cmp
dec
mov
imul
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
stos
mov
sub
mov
cmp
add
xor
mov
rol
mov
bound
add
sbb
dec
lods
xchg
imul
mov
mov
jmp
loopne
add
sbb
stos
mov
stos
add
stos
mov
or
cli
mov
fwait
mov
pop
rol
mov
pushf
mov
sub
xchg
sbb
sbb
mov
inc
loope
mov
sub
out
cli
add
ret
cmp
pushf
ret
cmp
and
adc
loopne
cmp
lods
les
or
inc
pop
ret
ret
lds
pusha
add
jp
push
or
out
stos
mov
fcmovnb
pop
mov
dec
jmp
push
pushf
(bad)
fmul
lds
add
mov
push
les
les
dec
in
mov
ret
jb
(bad)
mov
add
jl
push
(bad)
jbe
(bad)
pop
mov
in
(bad)
out
pop
add
lods
add
mov
out
js
and
add
pop
add
leave
mov
leave
into
dec
leave
add
or
or
inc
call
les
add
lods
xchg
stos
cld
retf
add
leave
pop
add
push
sub
xchg
pushf
retf
mov
retf
retf
ret
mov
or
(bad)
push
int3
or
fmul
mov
leave
xchg
ins
leave
mov
add
int
cmp
push
mov
pop
and
lock
add
sub
neg
ins
leave
xchg
fmul
out
sbb
out
into
add
jmp
lods
rol
(bad)
into
ins
or
xor
sar
sub
scas
mov
or
jp
rol
nop
add
int3
int3
inc
dec
shr
pop
add
int
or
clc
jl
or
into
adc
dec
in
rcl
or
mov
int
lods
iret
sbb
retf
pop
popf
into
stc
sub
sbb
retf
aam
popf
rcl
ds
dec
(bad)
aam
sbb
inc
cmp
xor
repnz
add
and
pop
shl
ins
iret
sub
add
rcl
retf
retf
into
stc
mov
or
xlat
dec
mov
or
sub
aam
pop
into
push
rcl
aad
or
cmp
iret
data16
sar
rol
shl
xlat
add
xlat
inc
ins
fadd
in
fmul
sbb
pop
or
mov
(bad)
test
sbb
pop
aad
std
fstp
fld
mov
lock
fstp
add
leave
sub
ret
adc
mov
inc
mov
mov
fldl2e
sbb
sbb
int
mov
sar
fist
(bad)
pop
aad
in
rcl
add
fst
xlat
or
je
(bad)
mov
inc
std
xlat
jns
fidiv
loope
lods
shl
sub
iret
popf
into
sbb
fdiv
mov
xlat
pop
fcmovnbe
(bad)
jge
or
mov
rcr
lods
fmul
(bad)
loopne
fst
cmp
add
dec
fucomp
ins
add
fsubp
test
pop
jo
ss
iret
jne
fidivr
rcr
sub
sbb
jecxz
popf
loopne
pop
loope
push
fdiv
ror
loop
in
in
(bad)
fbstp
in
cs
mov
popa
pop
fisub
fcomip
dec
loopne
pop
into
push
add
out
in
out
out
fucom
mov
add
(bad)
cmp
aam
or
xor
lahf
jge
jbe
fnstcw
fdivp
or
jne
jecxz
outs
loop
inc
into
imul
inc
in
push
aam
sbb
sbb
push
push
add
cmp
xchg
fsubp
repnz
out
int3
loope
shl
in
iret
cmp
add
jmp
adc
fisttp
(bad)
in
ds
or
pop
push
call
in
fiadd
push
jmp
jle
loopne
fsubp
add
(bad)
mov
fld
cmp
pop
scas
add
into
mov
jmp
pop
into
aam
mov
cmp
sti
fucom
arpl
popf
pop
loope
lods
out
mov
dec
mov
les
ficomp
out
sbb
xor
lock
out
(bad)
stos
dec
and
fcmovne
in
cmp
sub
out
pop
lock
push
aas
stos
push
rol
loop
sub
xor
out
imul
neg
dec
call
cmp
mov
add
out
mov
jmp
popf
in
push
(bad)
imul
in
jecxz
cmp
inc
aas
iret
fstp
jp
hlt
mov
in
lahf
lock
in
in
in
int
mov
mov
out
mov
loope
in
cmp
(bad)
xlat
cmp
jmp
(bad)
in
pop
into
cmp
idiv
mov
xlat
pop
pop
fadd
in
cs
jg
cmp
or
stos
sub
add
stos
add
imul
pop
aad
pop
icebp
inc
pop
xchg
(bad)
stc
cmp
loop
pop
out
jge
cli
adc
jmp
sahf
repnz
out
iret
clc
sti
dec
in
imul
sahf
fdivr
jmp
cmp
jmp
mov
icebp
out
sub
in
lock
cld
add
stc
pop
rol
dec
shl
cld
xor
es
xlat
idiv
aaa
aas
out
nop
(bad)
jmp
adc
cld
test
std
mov
lock
into
cli
xlat
(bad)
out
sbb
aam
out
out
adc
arpl
pop
mov
aad
cmp
push
js
mov
mov
imul
sub
imul
stc
mov
add
cwde
js
fnstcw
retf
sbb
cld
stos
mov
call
(bad)
call
mov
sub
pop
fdivr
fldcw
retf
or
sahf
pushf
jnp
lods
lea
cmp
into
dec
mov
shr
push
retf
add
call
imul
mov
je
mov
sbb
mov
xlat
and
add
(bad)
mov
daa
adc
mov
movs
jo
fisubr
enter
inc
xchg
sbb
sub
jge
xor
fdiv
shl
jne
add
in
enter
or
push
adc
pushf
push
xchg
lds
and
and
lods
cmp
mov
dec
test
dec
adc
stc
adc
dec
mov
inc
inc
dec
mov
mov
rcr
mov
jo
and
and
sbb
test
rol
es
push
fnsave
jno
shr
call
and
lock
fwait
sbb
addr16
or
stos
sub
sbb
out
ja
push
int
mov
in
jl
ins
mov
jg
sub
mov
leave
dec
fistp
mov
inc
leave
jp
mov
fbstp
mov
aam
sti
add
aam
xchg
and
and
test
inc
rcr
jbe
sbb
int3
push
adc
or
push
test
xor
mov
push
mov
push
jge
push
xor
loope
add
add
or
add
xchg
xor
or
(bad)
and
inc
dec
pop
and
daa
dec
adc
xchg
jge
cdq
mov
test
call
dec
or
(bad)
pop
jg
mov
sbb
xchg
pop
push
(bad)
xlat
pop
gs
imul
jbe
cmp
jno
es
mov
call
add
mov
cwde
push
popa
mov
push
imul
adc
cdq
enter
mov
mov
adc
inc
leave
or
inc
retf
mov
cmp
add
movs
dec
cmp
inc
mov
test
xchg
ficom
stos
mov
mov
movs
and
call
rcl
jnp
fisubr
add
cmps
mov
aad
dec
jbe
ins
mov
or
push
mov
adc
adc
dec
adc
sub
push
fsub
xor
cld
pop
jo
lds
cdq
jo
mov
fnsave
ins
cdq
pop
cmp
push
mov
ret
or
(bad)
and
mov
ins
scas
dec
movs
mov
cmp
je
cmp
jno
ret
pop
call
retf
mov
aam
xor
(bad)
sub
sbb
test
sbb
ins
cdq
out
xlat
es
push
push
dec
adc
retf
(bad)
es
xchg
xchg
lods
sub
loop
xchg
fsubr
(bad)
sbb
ins
hlt
frstor
test
std
fld
jecxz
push
mov
xor
cmp
rol
pop
inc
iret
rcl
push
jae
cmp
add
in
adc
xchg
shl
arpl
mov
mov
ds
les
(bad)
dec
mov
jle
xchg
cmp
adc
push
jae
(bad)
xlat
pop
cmp
cld
clc
push
jmp
jnp
lock
(bad)
xlat
cld
mov
cmp
lods
scas
js
pop
xlat
xrelease
in
jnp
xor
mov
adc
call
out
je
xor
(bad)
xchg
clc
or
push
sub
and
aaa
or
cmps
jo
je
add
addr16
cmp
adc
adc
outs
cmp
and
or
test
dec
push
in
repnz
sti
mov
rcr
call
cmc
lock
test
js
inc
popa
xchg
lds
clc
push
inc
enter
push
or
add
ror
outs
push
dec
sub
les
jo
push
mov
xchg
adc
pop
es
pop
cmp
and
push
outs
mov
inc
mov
add
push
lea
inc
cmp
or
jmp
sbb
iret
js
in
push
out
xor
shl
and
sub
inc
mov
loopne
pop
cmp
sub
shl
dec
js
(bad)
icebp
int
nop
fsub
push
push
xor
fdiv
mov
std
ret
bound
mov
fisub
cdq
inc
dec
in
add
mov
lds
cmp
imul
add
iret
popa
add
fsub
aas
stc
mov
mov
retf
adc
ss
in
mov
xor
inc
jno
enter
cwde
or
repz
cmps
ss
inc
outs
mov
sbb
jbe
jno
shl
out
cmp
call
rcl
stos
mov
nop
sti
loopne
cmc
es
ss
xchg
jae
sub
inc
sub
ds
ins
mov
mov
test
jbe
mov
mov
mov
add
pusha
daa
inc
lahf
ja
push
dec
push
cdq
lods
aam
push
mov
add
pop
in
sbb
or
aaa
inc
xchg
(bad)
loop
popf
arpl
dec
sti
jmp
jae
pop
outs
cwde
or
mov
pop
jmp
pop
lock
fist
push
aad
bnd
lods
cmp
or
pop
xchg
mov
lods
cmps
dec
inc
imul
lds
mul
ins
pop
out
mov
addr16
adc
outs
sar
test
and
ds
or
mov
int
jno
xor
add
pop
iret
lea
mov
pop
fcmovnu
mov
shr
sub
mov
(bad)
cmc
sahf
mov
leave
(bad)
push
or
dec
add
je
fsubp
mov
inc
push
fimul
clc
adc
mov
cmp
mov
xchg
jnp
jg
jne
in
lds
add
in
outs
jp
sbb
lods
data16
mov
pusha
icebp
cbw
mov
aaa
mov
(bad)
out
xchg
mov
pop
or
or
and
adc
add
cmp
sar
jno
std
fisub
idiv
mov
(bad)
adc
fadd
cmps
sub
dec
nop
adc
ins
adc
pop
xchg
mov
or
pop
sbb
push
xor
outs
push
rcl
adc
daa
fnstcw
mov
test
sbb
sbb
and
mov
pop
pusha
out
jecxz
into
ja
jb
xchg
mov
inc
push
stc
retf
outs
mov
(bad)
or
sbb
arpl
call
mov
inc
int
sub
xchg
or
add
and
pusha
mov
mov
aad
pusha
inc
or
loope
mov
(bad)
mov
pop
add
int
push
mov
or
shr
inc
add
push
jmp
sar
xor
dec
pop
pop
fld
(bad)
push
fwait
sbb
rcl
add
rcr
fdivr
div
mov
inc
mov
lods
in
cmp
sti
(bad)
or
xlat
pop
and
xchg
pusha
outs
pop
call
int3
add
sar
sbb
pop
fdivp
sahf
cmp
sti
mov
ret
imul
retf
mov
in
in
test
jecxz
xchg
cmp
pop
pushf
jo
sbb
adc
ins
out
js
xor
xor
xor
or
repnz
sar
inc
leave
repz
clc
stc
add
jmp
hlt
stos
or
jmp
test
loopne
or
and
daa
shl
idiv
adc
push
jbe
xchg
std
loopne
addr16
fs
jbe
and
jl
aam
in
imul
mov
add
push
(bad)
jp
adc
in
push
mov
and
add
or
jnp
neg
cmc
scas
(bad)
sti
jmp
fistp
mov
aad
scas
cli
mov
cmps
out
and
jo
enter
addr16
sub
lods
das
add
fistp
mov
lock
ror
pop
sti
mov
scas
add
int3
jg
mul
push
jmp
sbb
jg
xor
or
xor
clc
iret
(bad)
cmc
pop
fdiv
dec
add
push
mov
std
daa
jg
aaa
dec
icebp
addr16
pop
jg
pusha
add
loopne
xor
js
xlat
jge
push
jp
inc
jp
push
jp
(bad)
jne
aaa
jp
mov
rol
add
dec
and
cmps
jle
mov
cmp
out
cld
addr16
xchg
daa
add
add
add
add
(bad)
jns
and
sbb
sub
mov
test
jp
pop
jp
mov
imul
mov
xor
add
jo
dec
xchg
jle
mov
ins
sbb
jo
in
je
sub
mov
jnp
jl
daa
je
inc
add
inc
xor
rol
inc
sbb
or
jle
push
add
mov
cmp
mov
out
mov
mov
fsubr
sbb
mov
adc
cmp
cmp
jmp
xor
test
test
je
mov
or
mov
test
inc
inc
and
dec
inc
add
add
cmp
push
mov
mov
xchg
sbb
test
test
clc
mov
dec
xor
ja
inc
mov
xor
jle
add
(bad)
std
pop
xchg
stc
mov
or
inc
loop
dec
nop
mov
daa
add
enter
xchg
enter
mov
or
push
dec
push
add
push
(bad)
sbb
jae
dec
xchg
push
nop
shl
mov
sbb
ror
mov
das
leave
add
dec
jp
js
pop
mov
loope
xchg
hlt
fcom
nop
push
mov
lock
cmp
js
hlt
cwde
jne
jns
adc
sub
xchg
xor
xchg
or
add
test
mov
aaa
leave
xchg
bound
mov
jp
mov
cbw
add
adc
mov
xchg
xchg
push
xchg
push
xchg
daa
xchg
ficomp
hlt
enter
and
inc
daa
js
dec
leave
mov
mov
mov
xchg
outs
neg
sub
fst
out
imul
ins
sub
add
test
jmp
xchg
rol
mov
ss
jge
and
scas
mov
leave
not
(bad)
jmp
add
sub
and
mov
call
jne
xchg
gs
out
pushf
hlt
clc
xchg
push
xchg
fistp
pop
sbb
xchg
imul
pushf
xchg
jne
cwde
sahf
aam
jge
mov
jmp
pushf
shr
stc
cmp
cdq
mov
nop
stos
mov
enter
mov
cmp
sub
sbb
pop
xchg
pop
stc
je
mov
mov
mov
fwait
lea
repz
xchg
fstp
fwait
(bad)
mov
nop
xchg
imul
xchg
cmp
xchg
dec
dec
(bad)
cmc
or
cmp
test
dec
jns
xor
pop
rcl
mov
mov
cli
jbe
mov
add
xchg
xchg
cmp
test
push
in
xchg
sbb
mov
leave
mov
cmp
test
pop
test
out
dec
loopne
lods
mov
stos
xchg
adc
test
add
push
sub
stos
inc
pop
mov
jns
inc
pop
mov
leave
lahf
xor
ss
and
xchg
pop
mov
cmc
sub
mov
pop
dec
test
imul
xchg
mov
jbe
dec
stos
pop
lock
popa
jp
mov
xchg
mov
xchg
xor
scas
mov
xchg
sti
test
sbb
ss
adc
or
mov
jae
add
sahf
xchg
pop
push
scas
mov
pop
lock
sbb
xchg
mov
xchg
mov
sub
lods
or
movs
aas
mov
std
cli
nop
or
mov
lahf
ins
push
cmp
mov
sub
cdq
sar
lock
cmp
pop
xchg
sub
mov
stos
pop
jns
adc
test
fidiv
cmp
dec
mov
inc
stos
dec
fwait
nop
or
call
std
mov
inc
leave
xchg
sbb
mov
cli
mov
mov
mov
adc
xchg
cmp
mov
or
add
xchg
mov
mov
fld
push
pop
loopne
nop
jmp
sub
mov
fnstenv
(bad)
sbb
add
and
mov
fistp
sub
cli
mov
sbb
mov
scas
jnp
or
mov
test
sub
sbb
sub
pop
mov
fwait
xchg
dec
dec
mov
fnstenv
sbb
jmp
add
cdq
arpl
mov
mov
aaa
stos
mov
cmp
sahf
dec
sbb
stos
mov
fwait
mov
sti
mov
imul
inc
mov
cld
mov
pop
mov
pop
add
sbb
dec
mov
leave
add
mov
lds
cmp
sub
sub
mov
stos
shl
sub
mov
sub
sti
mov
cmc
jnp
wbinvd
ret
mov
(bad)
imul
ret
outs
sub
mov
pop
ret
mov
jmp
psubsw
pop
stos
sub
add
ret
add
lds
pushf
mov
in
mov
rol
mov
test
call
shr
mov
mov
cmp
cmp
pop
mov
cmp
or
add
cli
cdq
scas
mov
mov
cmp
xor
stos
cmp
xchg
lods
cmp
fwait
or
xor
lods
add
cwde
cmp
add
icebp
mov
mov
mov
or
cmc
sbb
mov
sub
sub
in
mov
mov
sbb
int3
jp
int
dec
leave
xor
mov
call
mov
jl
jno
stos
pusha
cli
retf
or
xchg
das
stos
mov
pushf
(bad)
xchg
pop
(bad)
icebp
mov
rol
jb
retf
retf
(bad)
mov
lds
sub
(bad)
or
lods
adc
mov
ret
sahf
pushf
mov
sub
scas
fwait
iret
sbb
add
into
ja
mov
sub
es
add
retf
add
mov
jle
shr
cmp
lods
dec
enter
popa
mov
out
mov
pushf
ret
in
shl
or
call
rcl
aad
mov
push
pop
aam
sub
or
mov
shr
shl
shl
pop
aad
pop
xchg
cmp
int3
adc
cmp
jge
cwde
imul
sbb
addr16
icebp
sub
test
cld
cdq
mov
iret
add
dec
leave
das
pop
les
mov
fcmovnb
inc
int
pop
(bad)
(bad)
xchg
dec
(bad)
sti
sbb
rcr
movs
cmp
loopne
shl
inc
inc
rol
xlat
rcr
mov
push
ja
cwde
or
aam
dec
fiadd
fst
push
(bad)
xlat
jbe
cdq
movs
ins
iret
xor
xor
cdq
sub
lods
fnstsw
xlat
inc
(bad)
xlat
jp
fnstsw
fcom
fstp
fld
mov
int3
test
ficom
mov
dec
shr
mov
xor
(bad)
cmp
in
int
fstp
iret
cld
xlat
(bad)
pop
retf
push
sub
jno
xlat
jmp
(bad)
mov
out
cmp
sar
test
iret
or
cld
(bad)
fcom
fild
add
cmp
adc
cdq
(bad)
mov
into
mov
jbe
fcom
cmp
test
(bad)
jle
rol
sbb
cmp
(bad)
sbb
sub
jecxz
adc
dec
cs
or
stos
cmp
inc
std
into
sbb
in
lods
loop
pop
fild
shr
out
lods
aad
or
mov
out
cmp
ds
clc
int
out
dec
loopne
(bad)
imul
pop
dec
aad
ins
out
in
rol
call
dec
in
(bad)
out
jge
xor
fbld
in
mov
mov
add
(bad)
sub
movs
jle
cld
popf
fbstp
test
jp
test
loope
popf
out
int
jb
in
ins
xlat
cmp
pop
jmp
outs
loop
pop
in
dec
ficom
fild
out
(bad)
cmp
jmp
ds
popf
in
or
ficom
aas
sbb
adc
aam
sub
xor
jmp
pop
in
inc
out
dec
push
dec
in
fsubrp
outs
push
out
push
(bad)
or
out
sahf
call
scas
out
sahf
ficomp
in
jecxz
retf
(bad)
sub
pop
push
add
pop
push
adc
or
nop
add
ds
push
icebp
or
sub
or
xchg
icebp
pop
iret
call
push
repnz
cmps
fstp
in
mov
sbb
sbb
icebp
(bad)
push
retf
cmp
out
sub
jecxz
jg
add
in
aad
fidiv
call
fdivp
dec
pmaxsw
icebp
push
mov
mov
out
mov
aad
fadd
jmp
pop
out
mov
push
sahf
repnz
fdivp
pop
lahf
fistp
in
aas
lahf
out
jb
repnz
popf
repz
pop
rep
mov
cmp
nop
lods
(bad)
cs
icebp
xor
hlt
lods
push
retf
(bad)
mov
dec
iret
bnd
add
repnz
and
pop
push
clc
pop
outs
clc
or
jmp
(bad)
sbb
adc
stc
sbb
sbb
mov
stc
xchg
pop
mov
paddq
not
not
stc
clc
out
cmc
cmps
call
push
scas
cli
mov
cmc
ins
mov
jge
out
xor
cmc
cmp
daa
das
repz
idiv
mov
push
fld
neg
outs
repz
push
neg
xrelease
jecxz
hlt
outs
xlat
dec
outs
jmp
test
cld
mov
mov
aad
mov
xchg
iret
add
push
or
sbb
test
add
xchg
sub
test
nop
pop
lea
pop
pushf
pop
add
test
xchg
xchg
mov
dec
test
mov
mov
mov
cdq
test
xchg
rol
enter
mov
xchg
aam
int
aad
(bad)
(bad)
add
out
call
mov
repnz
sub
cmp
and
rol
in
cwde
or
test
xchg
mov
mov
adc
les
in
xor
sbb
sbb
or
cmp
sbb
int
and
mov
adc
aaa
dec
add
sub
mov
jmp
das
sub
dec
push
jae
or
inc
or
shl
arpl
push
data16
mov
pop
xor
dec
jns
cdq
inc
imul
popa
dec
mov
mov
je
adc
jns
xchg
into
mov
push
sbb
int
je
mov
shl
mov
xor
add
pop
aad
imul
add
test
enter
push
bnd
inc
fdivr
lahf
pop
pop
mul
in
cmp
mov
jbe
loopne
mov
xor
lea
cmps
out
jg
adc
dec
mov
pop
add
test
(bad)
out
ja
push
addr16
jo
sub
ins
push
and
or
icebp
xchg
pushf
inc
jmp
xchg
inc
mov
pop
xor
je
sbb
nop
pop
xchg
pop
mov
nop
and
push
and
and
sub
popa
ja
add
lds
cwde
iret
(bad)
orps
mov
mov
movs
pop
mov
cmp
jb
bound
xchg
push
and
xchg
loop
xchg
nop
xchg
(bad)
ins
call
js
mov
fld
(bad)
and
nop
outs
mov
sub
dec
fidivr
push
xchg
push
dec
pusha
xchg
add
dec
cmp
les
push
jo
rcl
push
rcr
nop
sbb
movs
inc
stos
test
sahf
retf
add
stos
xor
test
imul
fs
ret
jmp
dec
push
cmp
aas
lea
shr
pop
and
jle
add
lods
mov
lods
mov
pusha
push
stos
dec
sbb
movs
fwait
mov
push
and
mov
jmp
mov
ss
shl
mov
add
pop
sbb
cs
push
(bad)
ins
sti
in
add
dec
loop
jecxz
dec
outs
adc
sahf
stos
sub
mov
mov
mov
mov
xchg
cmp
ds
xor
inc
push
mov
add
leave
dec
movs
sbb
daa
sub
sub
dec
add
mov
adc
dec
cld
mov
loop
int3
xor
in
push
into
cmp
in
repnz
iret
mov
call
dec
add
lods
xor
inc
mov
or
or
iret
imul
jae
cmc
mov
sbb
mov
imul
or
cmp
out
outs
mov
aaa
and
xchg
push
fild
push
hlt
add
cmc
lods
mov
mov
dec
shr
sar
mov
shr
lahf
arpl
cmp
out
in
repz
ret
jnp
loope
jge
rcr
adc
cmp
into
or
icebp
sub
pop
mov
mov
out
std
pushf
arpl
ds
(bad)
dec
inc
fmul
aaa
cmp
clc
pop
mov
mov
mov
sub
xchg
aad
(bad)
cli
xchg
mov
mov
fcomip
(bad)
xlat
mov
add
add
lahf
std
fs
mov
push
mov
jns
xchg
xor
fidivr
lahf
add
pop
inc
icebp
dec
in
sbb
and
cmp
inc
or
mov
mov
nop
push
cmp
cdq
paddd
cmpps
ficomp
and
sub
xor
jl
adc
mov
in
nop
or
popf
inc
push
xchg
sub
xchg
cwde
inc
daa
scas
or
push
mov
add
and
push
es
inc
inc
mov
mov
inc
and
jecxz
xor
nop
lods
jo
sbb
mov
xchg
in
add
imul
and
push
imul
pop
enter
xchg
jne
in
or
inc
loopne
xor
adc
dec
into
dec
jb
pop
mov
push
adc
retf
cs
mov
sbb
ins
mov
test
ror
imul
xor
adc
mov
dec
jno
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
push
xor
faddp
push
cmp
xlat
fwait
mul
adc
pop
adc
xchg
cmps
jl
ins
dec
add
pusha
mov
add
jnp
fwait
or
mov
mov
sbb
add
jo
fwait
cli
or
and
shl
ins
push
cli
mov
xchg
pop
in
push
push
(bad)
mov
add
pop
rcl
loope
xchg
in
lods
dec
stc
ficomp
cli
xor
sub
mov
push
imul
push
add
lea
out
jb
mov
cmc
out
jns
stos
fstp
jl
mov
mov
retf
jbe
mov
pop
retf
fsubrp
fdivp
mov
jmp
je
push
outs
imul
add
jbe
jle
sbb
add
sbb
loope
xchg
pop
ret
inc
adc
retf
push
clc
mov
push
pushf
fdiv
dec
aaa
mov
push
ja
adc
jl
cli
arpl
repnz
or
or
mov
add
jmp
mov
gs
in
rcr
sar
inc
xchg
add
pop
pop
mov
adc
or
retf
add
or
lods
dec
mov
pop
push
out
mov
jo
in
mov
fdiv
or
or
jnp
add
xchg
or
or
mov
push
xor
add
cmps
cmp
pop
xor
pop
or
dec
jno
xlat
sub
fucomip
jb
lock
hlt
ficom
add
dec
neg
sbb
jno
aaa
lods
fcom
xor
ja
mov
mov
cdq
(bad)
ficom
mov
retf
shr
jo
iret
cmp
(bad)
out
jns
mov
xor
clc
fcomp
out
int
mov
and
push
out
sbb
repz
mov
push
dec
add
out
fcom
pop
push
jae
and
jns
ret
vunpcklps
push
imul
(bad)
scas
je
ja
lock
fwait
clc
rol
in
fwait
push
and
shr
pop
int
sbb
das
dec
ins
or
shl
mov
xlat
retf
or
xlat
mov
mov
xor
push
pop
sbb
mov
in
mov
fisttp
mov
adc
sti
out
out
in
adc
jge
aam
mov
dec
mov
pusha
scas
or
aam
outs
shl
rcl
outs
imul
aaa
shl
cmp
scas
ds
xchg
rol
mov
fld
and
sahf
ins
movs
cmps
pusha
js
cs
iret
aaa
push
cmc
mov
sbb
cdq
fistp
movs
ret
jnp
sbb
inc
out
pop
push
cli
nop
mov
js
sub
test
push
xor
push
sbb
xchg
pop
jmp
and
not
popf
fistp
jbe
repz
out
adc
out
push
mov
repz
cmc
cmps
dec
lods
jecxz
mov
fldcw
ins
popa
sbb
mov
xchg
inc
out
jmp
jne
pop
jg
sub
jb
mov
and
mov
add
test
pop
pop
pusha
(bad)
in
imul
xchg
ins
or
jnp
push
xlat
ins
mov
pop
scas
addr16
mov
inc
xlat
imul
rol
std
aaa
jle
aaa
add
push
jo
jbe
push
(bad)
jle
daa
add
ins
aaa
mov
rcl
clc
mov
sbb
xor
aaa
xor
push
outs
adc
pop
fild
sub
add
jne
sub
dec
fadd
and
sbb
gs
pop
jae
dec
jle
inc
add
daa
pusha
pop
xlat
outs
call
bound
xor
test
gs
(bad)
(bad)
addr16
es
cmps
xchg
xchg
xor
cmp
push
push
or
sbb
mov
jnp
test
in
ja
loopne
jno
mov
lds
cmp
cmp
fnsave
pop
(bad)
arpl
aaa
pop
push
and
dec
pop
push
mov
mov
jns
clc
je
push
mov
pop
lods
xchg
jl
js
jne
jae
push
jo
add
pop
imul
xchg
jno
mov
jno
fcom
push
ins
lds
xchg
adc
jge
xlat
fs
test
adc
sub
pop
push
mov
jle
xlat
pop
ja
ins
mov
mov
cmp
dec
fsubr
mov
nop
jb
ja
add
add
push
jnp
aaa
jne
sbb
lods
pop
outs
cs
popa
push
xlat
push
inc
ja
xchg
inc
push
mov
call
mov
mov
je
neg
data16
xchg
movs
inc
imul
push
arpl
(bad)
rep
xchg
mov
outs
cmps
push
outs
sub
mov
jl
or
dec
add
push
jae
out
add
sbb
ficom
sbb
mov
xchg
ja
or
aaa
mov
(bad)
push
jp
fmul
push
or
or
daa
pop
fwait
es
sub
inc
test
nop
pop
fdiv
cmc
xchg
(bad)
mov
ins
xor
outs
(bad)
mov
ret
pop
push
cwde
addr16
lahf
sub
dec
jle
test
and
out
js
pop
jo
mov
dec
rol
arpl
jle
mov
inc
adc
pop
je
cmc
outs
mov
or
xchg
call
jae
ja
test
push
cdq
jns
fcomp
pop
push
es
(bad)
(bad)
gs
mov
retf
cmp
(bad)
push
cwde
cmps
pop
ins
pop
push
or
xchg
cmp
jbe
sub
pop
cli
(bad)
add
xchg
ss
inc
inc
xchg
cmp
fs
pop
push
mov
repz
es
popa
jmp
xchg
jbe
lds
stos
es
mov
gs
push
mov
jle
imul
mov
fisub
push
xchg
push
repz
sbb
push
mov
adc
push
mov
dec
test
test
ds
outs
cmps
push
push
or
jmp
push
push
ficom
rol
dec
cli
movs
ins
div
cli
push
inc
pusha
add
movs
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
int
add
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
lods
lock
test
mov
adc
scas
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
fld
or
cmp
dec
mov
imul
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
stos
mov
sub
mov
cmp
add
xor
mov
rol
mov
bound
add
sbb
dec
lods
xchg
imul
mov
mov
jmp
loopne
add
sbb
stos
mov
stos
add
stos
mov
or
cli
mov
fwait
mov
pop
rol
mov
pushf
mov
sub
xchg
sbb
sbb
mov
inc
loope
mov
sub
out
cli
add
ret
cmp
pushf
ret
cmp
and
adc
loopne
cmp
lods
les
or
inc
pop
ret
ret
lds
pusha
add
jp
push
or
out
stos
mov
fcmovnb
pop
mov
dec
jmp
push
pushf
(bad)
fmul
lds
add
mov
push
les
les
dec
in
mov
ret
jb
(bad)
mov
add
jl
push
(bad)
jbe
(bad)
pop
mov
in
(bad)
out
pop
add
lods
add
mov
out
js
and
add
pop
add
leave
mov
leave
into
dec
leave
add
or
or
inc
call
les
add
lods
xchg
stos
cld
retf
add
leave
pop
add
push
sub
xchg
pushf
retf
mov
retf
retf
ret
mov
or
(bad)
push
int3
or
fmul
mov
leave
xchg
ins
leave
mov
add
int
cmp
push
mov
pop
and
lock
add
sub
neg
ins
leave
xchg
fmul
out
sbb
out
into
add
jmp
lods
rol
(bad)
into
ins
or
xor
sar
sub
scas
mov
or
jp
rol
nop
add
int3
int3
inc
dec
shr
pop
add
int
or
clc
jl
or
into
adc
dec
in
rcl
or
mov
int
lods
iret
sbb
retf
pop
popf
into
stc
sub
sbb
retf
aam
popf
rcl
ds
dec
(bad)
aam
sbb
inc
cmp
xor
repnz
add
and
pop
shl
ins
iret
sub
add
rcl
retf
retf
into
stc
mov
or
xlat
dec
mov
or
sub
aam
pop
into
push
rcl
aad
or
cmp
iret
data16
sar
rol
shl
xlat
add
xlat
inc
ins
fadd
in
fmul
sbb
pop
or
mov
(bad)
test
sbb
pop
aad
std
fstp
fld
mov
lock
fstp
add
leave
sub
ret
adc
mov
inc
mov
mov
fldl2e
sbb
sbb
int
mov
sar
fist
(bad)
pop
aad
in
rcl
add
fst
xlat
or
je
(bad)
mov
inc
std
xlat
jns
fidiv
loope
lods
shl
sub
iret
popf
into
sbb
fdiv
mov
xlat
pop
fcmovnbe
(bad)
jge
or
mov
rcr
lods
fmul
(bad)
loopne
fst
cmp
add
dec
fucomp
ins
add
fsubp
test
pop
jo
ss
iret
jne
fidivr
rcr
sub
sbb
jecxz
popf
loopne
pop
loope
push
fdiv
ror
loop
in
in
(bad)
fbstp
in
cs
mov
popa
pop
fisub
fcomip
dec
loopne
pop
into
push
add
out
in
out
out
fucom
mov
add
(bad)
cmp
aam
or
xor
lahf
jge
jbe
fnstcw
fdivp
or
jne
jecxz
outs
loop
inc
into
imul
inc
in
push
aam
sbb
sbb
push
push
add
cmp
xchg
fsubp
repnz
out
int3
loope
shl
in
iret
cmp
add
jmp
adc
fisttp
(bad)
in
ds
or
pop
push
call
in
fiadd
push
jmp
jle
loopne
fsubp
add
(bad)
mov
fld
cmp
pop
scas
add
into
mov
jmp
pop
into
aam
mov
cmp
sti
fucom
arpl
popf
pop
loope
lods
out
mov
dec
mov
les
ficomp
out
sbb
xor
lock
out
(bad)
stos
dec
and
fcmovne
in
cmp
sub
out
pop
lock
push
aas
stos
push
rol
loop
sub
xor
out
imul
neg
dec
call
cmp
mov
add
out
mov
jmp
popf
in
push
(bad)
imul
in
jecxz
cmp
inc
aas
iret
fstp
jp
hlt
mov
in
lahf
lock
in
in
in
int
mov
mov
out
mov
loope
in
cmp
(bad)
xlat
cmp
jmp
(bad)
in
pop
into
cmp
idiv
mov
xlat
pop
pop
fadd
in
cs
jg
cmp
or
stos
sub
add
stos
add
imul
pop
aad
pop
icebp
inc
pop
xchg
(bad)
stc
cmp
loop
pop
out
jge
cli
adc
jmp
sahf
repnz
out
iret
clc
sti
dec
in
imul
sahf
fdivr
jmp
cmp
jmp
mov
icebp
out
sub
in
lock
cld
add
stc
pop
rol
dec
shl
cld
xor
es
xlat
idiv
aaa
aas
out
nop
(bad)
jmp
adc
cld
test
std
mov
lock
into
cli
xlat
(bad)
out
sbb
aam
out
out
adc
arpl
pop
mov
aad
cmp
push
js
mov
mov
imul
sub
imul
stc
mov
add
cwde
js
fnstcw
retf
sbb
cld
stos
mov
call
(bad)
call
mov
sub
pop
fdivr
fldcw
retf
or
sahf
pushf
jnp
lods
lea
cmp
into
dec
mov
shr
push
retf
add
call
imul
mov
je
mov
sbb
mov
xlat
and
add
(bad)
mov
daa
adc
mov
movs
jo
fisubr
enter
inc
xchg
sbb
sub
jge
xor
fdiv
shl
jne
add
in
enter
or
push
adc
pushf
push
xchg
lds
and
and
lods
cmp
mov
dec
test
dec
adc
stc
adc
dec
mov
inc
inc
dec
mov
mov
rcr
mov
jo
and
and
sbb
test
rol
es
push
fnsave
jno
shr
call
and
lock
fwait
sbb
addr16
or
stos
sub
sbb
out
ja
push
int
mov
in
jl
ins
mov
jg
sub
mov
leave
dec
fistp
mov
inc
leave
jp
mov
fbstp
mov
aam
sti
add
aam
xchg
and
and
test
inc
rcr
jbe
sbb
int3
push
adc
or
push
test
xor
mov
push
mov
push
jge
push
xor
loope
add
add
or
add
xchg
xor
or
(bad)
and
inc
dec
pop
and
daa
dec
adc
xchg
jge
cdq
mov
test
call
dec
or
(bad)
pop
jg
mov
sbb
xchg
pop
push
(bad)
xlat
pop
gs
imul
jbe
cmp
jno
es
mov
call
add
mov
cwde
push
popa
mov
push
imul
adc
cdq
enter
mov
mov
adc
inc
leave
or
inc
retf
mov
cmp
add
movs
dec
cmp
inc
mov
test
xchg
ficom
stos
mov
mov
movs
and
call
rcl
jnp
fisubr
add
cmps
mov
aad
dec
jbe
ins
mov
or
push
mov
adc
adc
dec
adc
sub
push
fsub
xor
cld
pop
jo
lds
cdq
jo
mov
fnsave
ins
cdq
pop
cmp
push
mov
ret
or
(bad)
and
mov
ins
scas
dec
movs
mov
cmp
je
cmp
jno
ret
pop
call
retf
mov
aam
xor
(bad)
sub
sbb
test
sbb
ins
cdq
out
xlat
es
push
push
dec
adc
retf
(bad)
es
xchg
xchg
lods
sub
loop
xchg
fsubr
(bad)
sbb
ins
hlt
frstor
test
std
fld
jecxz
push
mov
xor
cmp
rol
pop
inc
iret
rcl
push
jae
cmp
add
in
adc
xchg
shl
arpl
mov
mov
ds
les
(bad)
dec
mov
jle
xchg
cmp
adc
push
jae
(bad)
xlat
pop
cmp
cld
clc
push
jmp
jnp
lock
(bad)
xlat
cld
mov
cmp
lods
scas
js
pop
xlat
xrelease
in
jnp
xor
mov
adc
call
out
je
xor
(bad)
xchg
clc
or
push
sub
and
aaa
or
cmps
jo
je
add
addr16
cmp
adc
adc
outs
cmp
and
or
test
dec
push
in
repnz
sti
mov
rcr
call
cmc
lock
test
js
inc
popa
xchg
lds
clc
push
inc
enter
push
or
add
ror
outs
push
dec
sub
les
jo
push
mov
xchg
adc
pop
es
pop
cmp
and
push
outs
mov
inc
mov
add
push
lea
inc
cmp
or
jmp
sbb
iret
js
in
push
out
xor
shl
and
sub
inc
mov
loopne
pop
cmp
sub
shl
dec
js
(bad)
icebp
int
nop
fsub
push
push
xor
fdiv
mov
std
ret
bound
mov
fisub
cdq
inc
dec
in
add
mov
lds
cmp
imul
add
iret
popa
add
fsub
aas
stc
mov
mov
retf
adc
ss
in
mov
xor
inc
jno
enter
cwde
or
repz
cmps
ss
inc
outs
mov
sbb
jbe
jno
shl
out
cmp
call
rcl
stos
mov
nop
sti
loopne
cmc
es
ss
xchg
jae
sub
inc
sub
ds
ins
mov
mov
test
jbe
mov
mov
mov
add
pusha
daa
inc
lahf
ja
push
dec
push
cdq
lods
aam
push
mov
add
pop
in
sbb
or
aaa
inc
xchg
(bad)
loop
popf
arpl
dec
sti
jmp
jae
pop
outs
cwde
or
mov
pop
jmp
pop
lock
fist
push
aad
bnd
lods
cmp
or
pop
xchg
mov
lods
cmps
dec
inc
imul
lds
mul
ins
pop
out
mov
addr16
adc
outs
sar
test
and
ds
or
mov
int
jno
xor
add
pop
iret
lea
mov
pop
fcmovnu
mov
shr
sub
mov
(bad)
cmc
sahf
mov
leave
(bad)
push
or
dec
add
je
fsubp
mov
inc
push
fimul
clc
adc
mov
cmp
mov
xchg
jnp
jg
jne
in
lds
add
in
outs
jp
sbb
lods
data16
mov
pusha
icebp
cbw
mov
aaa
mov
(bad)
out
xchg
mov
pop
or
or
and
adc
add
cmp
sar
jno
std
fisub
idiv
mov
(bad)
adc
fadd
cmps
sub
dec
nop
adc
ins
adc
pop
xchg
mov
or
pop
sbb
push
xor
outs
push
rcl
adc
daa
fnstcw
mov
test
sbb
sbb
and
mov
pop
pusha
out
jecxz
into
ja
jb
xchg
mov
inc
push
stc
retf
outs
mov
(bad)
or
sbb
arpl
call
mov
inc
int
sub
xchg
or
add
and
pusha
mov
mov
aad
pusha
inc
or
loope
mov
(bad)
mov
pop
add
int
push
mov
or
shr
inc
add
push
jmp
sar
xor
dec
pop
pop
fld
(bad)
push
fwait
sbb
rcl
add
rcr
fdivr
div
mov
inc
mov
lods
in
cmp
sti
(bad)
or
xlat
pop
and
xchg
pusha
outs
pop
call
int3
add
sar
sbb
pop
fdivp
sahf
cmp
sti
mov
ret
imul
retf
mov
in
in
test
jecxz
xchg
cmp
pop
pushf
jo
sbb
adc
ins
out
js
xor
xor
xor
or
repnz
sar
inc
leave
repz
clc
stc
add
jmp
hlt
stos
or
jmp
test
loopne
or
and
daa
shl
idiv
adc
push
jbe
xchg
std
loopne
addr16
fs
jbe
and
jl
aam
in
imul
mov
add
push
(bad)
jp
adc
in
push
mov
and
add
or
jnp
neg
cmc
scas
(bad)
sti
jmp
fistp
mov
aad
scas
cli
push
adc
cmp
fsubr
jns
mov
cmp
adc
je
addr16
sub
les
lock
push
mov
sub
mov
icebp
cdq
outs
mov
fisttp
mov
sub
outs
(bad)
fstp
jle
push
mov
mov
les
hlt
pop
mov
lahf
(bad)
div
add
xchg
jge
and
lods
push
jg
out
repz
jg
and
mul
xor
add
mov
mov
jae
pop
je
inc
jle
xlat
jnp
inc
js
out
pop
pop
jp
inc
cmp
or
jne
and
out
jnp
pop
jae
pop
jg
xchg
pop
dec
mov
(bad)
mov
psubusb
lock
mov
inc
mov
sbb
and
mov
je
mov
adc
and
inc
mov
js
(bad)
xlat
jg
mov
test
cmp
cmp
jp
pop
jp
mov
imul
mov
xor
add
jo
dec
cmps
jle
xlat
xchg
jns
nop
xchg
pop
je
dec
xchg
out
in
add
cmp
je
push
add
inc
xor
rol
push
sbb
or
jle
push
add
test
popf
cmp
cmp
mov
out
mov
mov
fsubr
sub
mov
adc
cmp
test
jns
inc
test
rol
cwde
test
test
je
test
mov
lea
add
test
inc
push
and
dec
inc
add
add
mov
mov
ja
sbb
xchg
sbb
test
lea
inc
movs
add
out
push
addr16
cwde
jge
mov
sbb
jle
push
and
add
adc
test
inc
test
or
sbb
mov
(bad)
add
jmp
retf
and
mov
xchg
(bad)
push
dec
push
add
jo
or
mov
mov
dec
push
push
or
aas
test
inc
sbb
dec
or
dec
and
aaa
xchg
push
jmp
sub
push
mov
sbb
mov
inc
js
lahf
jae
or
pop
aaa
xchg
imul
pop
lock
dec
xor
nop
inc
or
outs
adc
xchg
push
test
push
jns
mov
xchg
int3
push
and
cwde
add
adc
mov
xchg
xchg
nop
xchg
push
xchg
fnstsw
fdivr
test
addr16
xchg
sub
sub
inc
mov
(bad)
lea
and
scas
call
movs
leave
cdq
(bad)
xchg
adc
xchg
div
xor
xchg
xor
jne
mov
ret
daa
add
xor
daa
sbb
call
mov
push
sbb
xchg
inc
leave
xchg
ss
jge
and
mov
xchg
pushf
sub
lock
leave
xchg
(bad)
mov
rcl
xor
mov
nop
stc
popf
jbe
xchg
cmp
cmp
mov
test
jmp
cmps
jmp
out
jne
or
mov
imul
aam
jge
pop
pushf
jmp
mov
pushf
sbb
call
dec
mov
mov
nop
scas
(bad)
mov
mov
mov
sar
(bad)
cmp
in
test
sbb
xchg
mov
mov
pushf
xchg
test
jle
cmp
neg
lock
push
xchg
mov
xchg
sbb
xchg
sbb
neg
sub
cmp
mov
leave
fwait
loop
popf
push
or
mov
adc
movs
icebp
push
and
cli
jbe
test
push
jmp
add
leave
xchg
pop
cmp
pop
push
call
mov
jmp
into
stc
xchg
loope
or
test
out
dec
loopne
fisttp
sbb
xchg
cli
xchg
adc
test
add
mov
jl
stos
sbb
push
mov
js
test
jmp
out
test
stos
dec
test
mov
ja
stos
sub
pusha
dec
test
mov
mov
mov
jbe
dec
stos
pop
inc
xchg
popa
sub
mov
call
xchg
shr
xchg
std
test
add
stc
pushf
(bad)
mov
adc
or
jo
sbb
rcr
nop
dec
test
and
jp
mov
push
mov
movs
jns
mov
lods
jnp
xchg
shr
fisttp
adc
nop
jo
xchg
push
mov
stc
xchg
mov
fwait
xchg
test
mov
cmp
mov
sub
imul
mov
jmp
sbb
mov
imul
mov
sbb
cmp
nop
or
lea
test
fidiv
jmp
ins
sti
mov
sub
sub
cmp
jp
pop
jmp
or
or
xchg
pusha
jmp
dec
pop
mov
mov
fld
jp
xchg
sub
fwait
scas
pusha
dec
nop
sub
add
jecxz
pop
cmp
call
mov
dec
test
imul
cdq
add
mov
jmp
fwait
into
jns
aam
mov
cmp
mov
call
imul
mov
enter
mov
test
fistp
mov
jmp
mov
mov
ins
retf
nop
imul
enter
mov
pop
mov
jmp
inc
pop
mov
js
pop
pop
push
xchg
xor
push
mov
call
mov
pop
add
fdivr
jmp
nop
sti
shl
add
add
pusha
mov
test
pop
sbb
retf
pushf
mov
or
iret
mov
xor
je
sti
stos
arpl
lahf
fistp
stos
mov
sar
pop
mov
adc
mov
ret
mov
in
xchg
jmp
and
mov
sub
shr
cld
rcr
add
dec
add
(bad)
push
mov
imul
sub
mov
mov
sbb
nop
dec
lds
cmp
add
mov
mov
cmp
or
push
mov
jns
call
mov
or
lds
retf
shl
pop
lods
leave
add
cmp
add
retf
add
mov
lods
mov
cmp
pop
dec
(bad)
enter
arpl
retf
les
add
lds
sbb
retf
xchg
cmp
movs
pop
leave
mov
(bad)
test
jmp
mov
sub
retf
test
add
cmp
inc
mov
in
retf
mov
cmp
xor
(bad)
mov
retf
add
mov
in
enter
loop
rol
leave
scas
sbb
retf
retf
rcr
leave
ins
sbb
add
stos
ins
mov
jge
add
or
xor
fnstcw
ret
sbb
xchg
mov
retf
sahf
addr16
add
in
enter
inc
in
into
cmp
call
mov
in
enter
jns
mov
popf
ret
call
shl
sbb
dec
cwde
retf
(bad)
cmps
ins
mov
cmp
mov
retf
ret
mov
enter
pop
popf
aam
mov
pop
sbb
pop
cmp
xchg
test
mov
lds
shl
pop
mov
mov
mov
in
mov
lods
leave
push
mov
nop
(bad)
ins
xlat
sub
(bad)
daa
int
mov
fnstcw
fsubr
jmp
int
ins
mov
cmp
xor
rol
fcomp
shr
pusha
add
fistp
shr
mov
ins
aad
pop
leave
jbe
enter
in
int3
out
int
popf
aam
mov
sti
ins
int3
cmp
sub
xlat
es
fcompp
mov
in
fsub
fdiv
fdivr
ret
jae
rcr
int
imul
imul
mov
jmp
pop
ins
xchg
in
shr
fldlg2
(bad)
rcl
mov
int
mov
fist
fist
(bad)
lods
shr
lea
ins
leave
adc
(bad)
ror
rcl
xlat
ja
loopne
pop
xchg
push
add
push
push
sar
in
aad
int
and
lea
mov
dec
loop
jge
mov
fcomp
enter
or
aam
sub
push
out
aad
jge
ins
lods
shr
fidiv
out
push
loope
pop
jecxz
mov
dec
into
out
dec
aam
scas
fidivr
in
pop
mov
ins
out
(bad)
fistp
loope
mov
jp
out
outs
loope
outs
loope
lods
out
jge
fwait
(bad)
out
or
dec
scas
loopne
cs
sahf
loopne
out
aad
(bad)
shl
in
cmp
mov
add
xlat
xchg
pop
(bad)
(bad)
fnclex
stc
add
cmp
or
test
push
fldcw
fucomp
dec
loopne
scas
jmp
jle
jge
loopne
out
fmul
jmp
outs
in
mov
ret
outs
loopne
ins
xlat
fimul
jns
out
out
jmp
into
in
ds
xor
fstp
sahf
out
pop
(bad)
in
mov
pop
mov
cmc
cmp
mov
in
xchg
push
fbld
int
mov
icebp
push
out
into
fnsave
out
cmp
or
pop
pop
push
adc
or
nop
add
mov
scas
jle
in
ds
adc
call
fcomip
retf
push
mov
scas
outs
leave
scas
sahf
xlat
arpl
mov
mov
shr
pop
in
sahf
sahf
jmp
lea
int
fs
ret
fcmovnu
pushf
jmp
push
out
das
jmp
dec
cmc
push
aas
loopne
(bad)
in
das
pop
repz
(bad)
lock
neg
sbb
nop
scas
jmp
das
retf
cmc
(bad)
in
xor
aad
push
lock
(bad)
in
mul
neg
repnz
dec
repz
repz
icebp
stc
push
repz
mov
push
dec
out
push
repz
jg
add
retf
fprem
dec
(bad)
mov
out
loopne
out
cmc
neg
add
add
and
hlt
xchg
cli
jmp
in
stc
cdq
scas
cmc
rcr
iret
clc
arpl
imul
(bad)
neg
stc
call
dec
repnz
inc
outs
cld
call
aas
xchg
cmp
and
sar
fisttp
iret
sti
xchg
out
in
push
outs
in
ret
mov
dec
xor
data16
adc
inc
repz
hlt
pop
iret
sti
scas
sahf
aam
mov
mov
clc
imul
in
pop
invd
add
pop
sub
add
pop
mov
mov
xchg
or
cwde
xchg
mov
cwde
(bad)
nop
sub
add
lahf
add
mov
mov
xcrypt-cbc
cmps
xchg
or
(bad)
scas
xchg
cmp
test
iret
mov
mov
(bad)
ret
mov
mov
(bad)
xchg
loope
test
(bad)
stos
in
fcmovb
mov
dec
jmp
hlt
fadd
ret
imul
sbb
inc
test
aad
(bad)
dec
push
mov
mov
xchg
sahf
mov
stos
pop
lds
stos
test
outs
pop
xor
(bad)
sbb
mov
fs
xor
push
ret
ja
push
cmc
mov
mov
lods
mov
sub
mov
rol
mov
in
inc
or
daa
jne
fimul
mov
inc
or
adc
sbb
in
sbb
push
jb
dec
pop
push
pop
inc
push
popa
and
adc
dec
cmp
sub
call
cdq
out
idiv
cmp
movs
dec
xor
repnz
je
mov
pop
sahf
dec
in
sub
add
sub
mov
fs
mov
or
shr
out
sub
dec
cmps
in
adc
mov
neg
cmp
fmul
ins
aaa
sbb
in
xlat
shl
cmp
cmp
or
fs
mov
frstor
ret
sbb
push
xor
cmp
mov
popf
jbe
push
jne
inc
mov
loopne
int
pop
iret
dec
in
or
pusha
pop
cli
and
dec
or
(bad)
xor
(bad)
bswap
cld
add
call
pusha
and
cs
jb
cli
mov
add
sar
dec
adc
sbb
mov
rcl
mov
cmp
fisttp
inc
es
inc
mov
push
inc
lahf
xchg
cmp
cdq
pop
pop
adc
xchg
dec
pop
pop
call
mov
or
mov
pushf
call
and
rol
dec
cmp
les
push
jo
rcl
push
popa
movs
(bad)
xchg
dec
pop
sub
mov
add
sub
test
push
(bad)
(bad)
movs
push
push
cwde
and
inc
jmp
dec
js
add
aas
xchg
adc
loopne
mov
mov
dec
lods
mov
jo
stos
lods
mov
js
xchg
scas
mov
and
(bad)
dec
jmp
mov
ss
add
mov
push
cmp
pop
pop
sub
cs
mov
adc
pop
bnd
xchg
jae
jnp
and
mov
scas
jmp
mov
cli
cmp
mov
rol
pushf
push
(bad)
ficom
retf
ret
and
outs
ror
jl
xor
inc
pusha
mov
add
retf
dec
les
repz
dec
sbb
cli
sbb
sub
hlt
ror
int3
sub
aad
out
int3
hlt
inc
inc
or
mov
es
xor
or
add
sub
cld
cmc
or
pushf
mov
jno
adc
jp
div
xor
jbe
fild
fs
loopne
int3
ins
jne
and
pusha
pop
jg
add
daa
jg
mov
and
inc
mov
cmc
scas
adc
in
dec
adc
jmp
stos
mov
aaa
add
mov
xlat
mov
stos
repz
mov
jl
cmp
lahf
sub
ret
mov
sub
fisttp
add
in
jl
loope
lahf
mov
sti
or
ret
ds
stc
cmp
mov
mov
das
jae
bnd
jnp
xlat
cmp
sub
add
mov
inc
add
xor
enter
xchg
enter
and
inc
movs
ins
push
outs
mov
add
(bad)
mov
ss
cmp
and
fst
push
sbb
push
push
ins
add
pusha
sti
inc
cwde
cmp
ds
or
gs
pushf
xor
jp
adc
add
test
pop
or
mov
in
mov
push
add
int3
pop
lods
jp
mov
into
int3
push
fcmovb
and
push
in
adc
jnp
les
les
pop
dec
jno
inc
int3
ficomp
fisttp
nop
cmp
mov
arpl
repnz
adc
adc
cdq
pop
gs
mov
cmp
cmp
(bad)
jecxz
out
sub
ret
and
cs
cmp
lea
mov
pop
dec
xor
pop
cmp
cmp
xchg
xchg
jl
in
push
cmp
sahf
xor
sub
retf
dec
xchg
mov
movs
sub
test
mov
cdq
int3
popa
(bad)
mov
rol
test
cdq
fmul
cmps
ss
fxch
ins
jp
fwait
loopne
out
lds
ret
(bad)
mov
ret
xor
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
aas
and
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
cmp
sbb
add
or
rcr
sub
add
and
adc
rol
xchg
in
bound
or
sbb
inc
xchg
test
les
in
dec
jnp
sub
(bad)
mov
sbb
or
cmp
ins
add
jnp
fdecstp
je
mov
sub
ret
mov
push
sub
into
push
xchg
mov
gs
clc
push
mov
in
jmp
ret
mov
add
repnz
jnp
(bad)
inc
mov
jns
pusha
fdivp
ret
in
scas
addr16
fild
repz
adc
shl
idiv
or
call
ja
ficomp
in
and
loopne
inc
mov
jg
sti
(bad)
add
lock
lods
fst
or
pop
in
pop
add
xlat
mov
and
in
loop
mov
jg
pop
cli
retf
xor
mov
(bad)
jo
ja
loop
sbb
add
push
ds
shl
rcl
or
imul
test
in
pop
cmp
inc
mov
loope
hlt
mov
or
and
pop
mov
ins
inc
(bad)
cmc
leave
jle
out
xchg
fnstcw
fs
test
adc
loopne
push
push
mov
or
jle
jb
xor
push
mov
in
imul
jl
add
je
jnp
scas
movs
or
xor
lods
jl
pusha
popa
sub
aad
fs
jg
or
(bad)
bound
sbb
repz
fnstcw
pop
sti
ret
inc
out
test
mov
add
das
cs
stos
movs
ins
imul
or
bound
(bad)
sbb
and
scas
jnp
ins
pop
inc
mov
xlat
pop
mov
jmp
cdq
sar
popf
push
arpl
mov
imul
ja
int3
push
je
ins
jo
inc
dec
pop
mov
push
cmp
int3
pushf
es
adc
push
fwait
jp
sbb
or
shl
sbb
mov
adc
mov
mov
popa
or
mov
fs
jp
mov
or
fidiv
mov
add
jno
push
cmp
jnp
add
arpl
mov
test
or
xor
sti
pushf
jmp
jge
pop
test
mov
mov
cmp
fs
fld
iret
mov
test
nop
cmp
jnp
ins
aaa
paddw
call
cmp
jmp
sbb
sar
scas
jnp
test
in
adc
jg
mov
cli
push
mov
jb
add
xchg
sbb
and
xor
(bad)
pusha
add
push
jb
das
add
mov
(bad)
jns
cmp
nop
out
push
loope
sahf
cmc
xchg
add
fwait
repz
jl
rol
xor
and
pop
add
in
fidiv
lods
jl
loop
pop
mov
mov
lahf
cli
mov
mov
hlt
jl
bnd
jae
add
(bad)
gs
pusha
pop
pop
inc
ins
data16
adc
(bad)
(bad)
data16
sbb
or
pop
cmc
and
rcl
add
js
xchg
data16
jge
push
ins
or
pop
add
popf
daa
outs
mov
popa
mov
or
jae
mov
inc
or
ins
sahf
jne
repz
jno
inc
js
out
inc
jbe
inc
imul
and
fdivr
xchg
jnp
jbe
push
adc
mov
mov
aaa
xor
or
push
test
bound
push
cmp
js
pop
jb
data16
xlat
sub
pop
add
jno
push
jbe
imul
enter
add
inc
gs
popf
xchg
push
jo
cmps
jbe
mov
sub
cmp
test
push
pop
adc
nop
mov
ins
cmp
mov
aaa
jg
js
and
gs
jl
or
sbb
jae
mul
inc
outs
sahf
call
jmp
push
mov
push
addr16
cwde
push
pop
jb
ja
push
(bad)
popa
pushf
clc
test
mov
(bad)
push
inc
daa
pop
or
add
cwde
pop
and
(bad)
popa
mov
mov
imul
jl
xlat
pop
ss
fnsave
push
inc
mov
add
pop
sbb
pop
pushf
xchg
mov
jge
out
shl
push
imul
call
jne
js
test
ds
jo
fcom
and
pop
mov
mov
inc
jnp
push
jae
xchg
(bad)
imul
popa
dec
outs
in
(bad)
movs
jp
movs
test
xchg
xchg
or
xchg
xchg
bound
imul
push
(bad)
pop
xor
arpl
div
test
iret
(bad)
jbe
xlat
push
inc
xchg
int
jns
or
sbb
mov
pop
test
mov
jge
push
ins
movs
mov
mov
aad
sub
cld
push
or
ins
(bad)
jle
cwde
js
daa
lea
jns
mov
lods
pop
xchg
jae
mov
cmp
cmp
and
mov
fs
imul
xchg
in
jae
out
in
out
adc
jmp
fld
(bad)
jmp
cwde
dec
pusha
addr16
test
ror
aam
mov
add
add
clc
gs
pop
ins
inc
push
out
pusha
cmp
add
dec
cwde
(bad)
scas
xchg
xchg
dec
addr16
push
pop
ins
adc
pushf
daa
fdiv
sub
jo
test
icebp
aad
mov
xchg
(bad)
jbe
call
pusha
test
pop
sub
push
leave
push
fmul
sahf
cmp
pop
jmp
ja
xor
mov
jno
cwde
sahf
jmp
adc
outs
pop
pop
push
fcomp
mov
add
xchg
xchg
xchg
out
lds
movs
outs
sbb
xor
imul
imul
sbb
cwde
pop
mov
mov
pop
div
jmp
imul
jmp
cmp
outs
out
add
xor
adc
inc
mov
xchg
push
jns
ja
add
mov
cmps
mov
push
outs
push
addr16
jne
pop
or
movs
push
cmp
xchg
movs
je
add
addr16
movs
push
jne
push
and
cmp
cmps
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
loop
je
je
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sub
sub
stos
lods
sbb
sbb
repnz
jl
jl
cmp
push
or
pop
pop
or
add
call
int3
ins
data16
adc
fcmovu
xor
sub
scas
lods
test
inc
ds
mov
in
mov
je
cli
cld
fs
pop
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
cmp
xor
push
pop
pushf
xchg
pushf
(bad)
fsubr
sub
sub
scas
lods
and
and
jle
cmp
cmp
push
or
call
test
(bad)
mov
es
cmps
movs
in
in
jbe
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
into
int3
ins
data16
sbb
sbb
(bad)
xor
xor
scas
mov
jle
inc
ds
mov
in
out
in
mov
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
movs
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
push
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
(bad)
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
xor
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
push
fistp
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
or
add
sbb
mov
or
add
jmp
mov
pop
add
jmp
mov
mov
cld
or
pop
mov
add
cmps
pop
mov
mov
scas
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
nop
mov
retf
mov
cli
lods
out
sbb
stos
mov
mov
sbb
mov
inc
stos
fwait
pusha
dec
movs
xor
mov
jmp
push
fwait
mov
sbb
sub
cmp
jmp
movs
jns
add
pop
add
lods
and
test
retf
cdq
test
xchg
pop
shl
add
or
fucomip
mov
sar
sub
sbb
or
jmp
or
mov
add
stos
sbb
sub
or
sbb
mov
fwait
mov
dec
lods
mov
mov
or
sti
mov
fwait
add
mov
and
dec
shl
mov
inc
add
mov
lock
rol
mov
push
scas
loope
nop
in
dec
lods
xchg
mov
call
lods
test
loop
add
jo
fmulp
mov
stos
add
retf
mov
jnp
adc
mov
mov
inc
mov
fstp
mov
cld
mov
mov
push
add
mov
mov
(bad)
sub
push
mov
nop
add
add
sbb
pop
mov
add
push
nop
add
cld
ret
aas
sbb
xor
ret
inc
or
aaa
add
sub
add
mov
add
add
inc
or
inc
lods
xchg
les
ret
inc
pushf
les
mov
push
pushf
add
add
cld
scas
inc
xor
inc
dec
(bad)
(bad)
cld
lds
mov
retf
pop
test
nop
ret
pop
mov
pop
loopne
jae
les
mov
les
enter
pop
ins
(bad)
dec
cmp
dec
add
mov
jb
add
lds
nop
mov
in
mov
sbb
sub
mov
mov
rol
mov
xchg
sub
cdq
dec
mov
mov
sbb
add
leave
inc
jmp
lds
sub
leave
mov
mov
cmp
mov
int3
xor
pop
jo
sub
pop
retf
out
cwde
retf
sar
pop
mov
cmp
(bad)
or
xor
int
pop
add
(bad)
mov
leave
fmul
mov
add
into
jmp
lock
add
push
retf
out
add
pushf
retf
into
mov
iret
repz
iret
jmp
into
push
pop
into
rcr
into
out
pushf
ror
sbb
or
push
cmp
add
iret
test
shl
in
mov
iret
sar
sbb
sar
int
(bad)
shr
mov
jl
fwait
pushf
shr
pop
lds
jge
adc
rol
dec
sar
in
rcl
loopne
(bad)
jl
mov
ror
in
into
std
(bad)
ss
aam
sub
adc
jmp
in
int
int3
add
jo
push
int
daa
fst
inc
jge
pop
cmp
adc
mov
add
lods
rol
adc
lods
iret
adc
out
rol
aad
in
rol
std
dec
cmp
add
xlat
inc
in
ror
fst
jno
xchg
int3
xlat
xchg
ror
std
shl
fst
mov
into
pop
ins
fdivr
shr
or
mov
popfw
fadd
or
or
aas
popf
into
or
or
xlat
cmp
adc
lods
pop
ror
fadd
cmp
jge
fnstcw
aam
pop
shl
xlat
inc
or
add
or
mov
iret
sub
(bad)
sbb
fidivr
sbb
fcmovb
lods
fdivr
(bad)
sbb
cmp
pop
sbb
test
test
mov
fdiv
pop
iret
mov
fadd
pop
sar
xlat
std
(bad)
fisttp
(bad)
in
xlat
cli
popf
retf
movs
jge
xchg
lods
xlat
and
les
adc
(bad)
(bad)
jge
sbb
add
fisttp
retf
in
(bad)
push
pop
aam
ins
(bad)
mov
push
pop
xor
in
ficomp
into
sbb
sub
fwait
in
add
adc
in
fidivr
fbld
frstor
fcom
fsubp
sti
fst
sbb
fld
xlat
pop
out
jecxz
or
inc
std
rcl
jecxz
jge
cmc
lods
loope
fsub
adc
fcomp
popf
loop
mov
in
aam
out
retf
in
(bad)
int
cmp
sub
mov
in
lods
iret
jo
out
or
jmp
fadd
fidiv
shr
popf
iret
xchg
inc
cmp
sbb
aaa
add
jle
jp
fcom
and
sbb
sbb
js
rol
add
aad
fadd
mov
fdiv
dec
or
call
sar
jge
imul
sahf
out
mov
out
pop
fistp
in
mov
mov
je
call
push
int3
popa
mov
lds
mov
imul
fucomp
pushf
sahf
out
sub
imul
fstp
shl
fsubp
icebp
ds
fsubp
int3
mov
jmp
stos
push
lock
mov
retf
jle
cmp
pop
lahf
in
mov
inc
inc
stos
lods
pop
call
cs
sbb
pop
inc
stos
push
add
jne
aad
dec
repnz
call
pop
add
pop
out
ins
fsubr
dec
into
mov
icebp
call
call
mov
mov
ror
icebp
cmp
aad
into
in
(bad)
ds
inc
push
in
mov
jmp
ds
fsubr
xchg
push
out
push
ds
into
jmp
ficomp
or
jmp
adc
jbe
(bad)
hlt
xlat
out
out
inc
pop
into
popf
dec
cmc
inc
iret
neg
neg
into
push
(bad)
test
mov
add
sbb
push
pop
in
outs
out
jle
retf
nop
jg
adc
add
in
(bad)
mul
cli
dec
into
add
add
das
in
(bad)
call
repz
iret
in
aaa
psrld
call
ds
cli
in
fldenv
sti
pop
outs
jmp
mov
cli
mov
clc
mov
out
jmp
sti
cmc
ins
call
lahf
into
and
lds
mov
jmp
or
stc
cmp
jno
cld
jmp
dec
std
sub
scas
jmp
xor
call
js
fs
loop
push
js
pop
js
mov
mov
ret
in
cmp
dec
mov
inc
jmp
cmp
xor
pop
dec
cwde
(bad)
jmp
jae
fcmove
jns
leave
sar
mov
push
test
call
jl
cmp
sub
mov
retf
call
mov
dec
outs
adc
inc
jne
lahf
mov
jnp
sub
push
push
mov
jae
scas
arpl
ret
push
adc
dec
pusha
and
push
cdq
ret
or
cmp
sub
les
test
fwait
push
xchg
sar
aam
adc
and
stos
dec
arpl
add
sbb
mov
mov
push
push
sub
mov
lock
jmp
movs
rcr
xchg
scas
cmp
mov
stos
cmps
sbb
sbb
pop
mov
js
(bad)
scas
stos
dec
xor
retf
cdq
and
in
jecxz
add
ds
jb
ins
fld
loope
cmp
xchg
int
adc
movs
push
pop
test
imul
xor
sub
outs
inc
mov
ja
ret
jmp
inc
add
and
jnp
lds
jl
(bad)
cmps
addr16
jg
mov
push
sahf
call
sbb
xor
pop
(bad)
loopne
push
outs
enter
je
jns
push
jne
push
mov
push
push
jne
dec
js
sbb
hlt
addr16
ja
int
sbb
push
pop
loope
rcr
cmp
pop
ret
xchg
dec
addr16
and
push
jp
in
aad
cmp
popa
xor
pop
jmp
lock
add
mov
add
adc
sbb
sahf
ins
pop
scas
jne
add
pop
and
inc
clc
and
outs
xchg
popa
test
sbb
sahf
test
pop
xchg
popa
stos
loopne
daa
jle
fld
cmps
pop
bound
jle
and
jno
push
jb
xchg
or
cmps
out
add
add
adc
sub
movs
push
adc
in
sbb
js
data16
mov
sbb
mov
test
stos
xchg
(bad)
call
lock
pop
scas
dec
xor
fwait
ja
push
sbb
ret
push
lds
mov
xchg
sub
or
adc
pop
push
xchg
scas
test
les
mov
(bad)
jbe
in
popa
lods
scas
jmp
pop
loopne
jmp
dec
xchg
ja
pop
out
sub
ja
jle
cli
push
xchg
rol
stos
sub
test
(bad)
(bad)
addr16
mov
push
mov
lods
test
pop
and
add
xchg
out
adc
ins
cmps
retf
ret
mov
out
mov
scas
sub
add
push
cmps
sub
loope
xor
lea
fistp
add
rcr
cmp
xor
and
push
call
inc
sub
sub
mov
mov
out
sbb
jnp
lods
dec
aam
pop
cmp
push
push
lods
xor
jmp
fcomp
daa
mov
(bad)
adc
cmp
pushf
push
xor
hlt
dec
or
jae
or
lods
ja
xchg
daa
mov
jl
loop
lods
lea
push
pop
dec
pop
pop
xchg
cmp
jae
or
shr
dec
jg
jns
push
pop
push
xor
mov
mov
mov
or
loop
arpl
aad
cmp
adc
add
enter
loop
mov
dec
out
dec
sbb
shr
jle
pop
inc
es
jge
mov
pusha
aaa
popa
stc
rcl
pop
(bad)
cmp
inc
lods
je
imul
addr16
ss
mov
imul
in
push
aaa
aad
das
cmp
in
xchg
xchg
cmp
jp
jecxz
inc
aas
out
das
arpl
fwait
in
push
mov
push
lods
mov
pop
(bad)
enter
popf
int
(bad)
pusha
add
push
cmp
mov
callw
call
mov
jp
adc
clc
mov
mov
jnp
les
lods
lock
dec
mov
push
push
clc
aas
mov
lods
pop
(bad)
mov
mul
or
push
shl
das
jns
jmp
clc
pop
push
sbb
popa
nop
jle
mov
and
les
sbb
clc
rcl
loopne
fcmovu
inc
cmp
fild
cwde
or
pushf
popa
add
rcl
sbb
dec
(bad)
aad
jl
retf
movs
add
xor
push
push
in
mov
enter
jle
sbb
or
inc
inc
xor
outs
dec
cmp
xor
jmp
arpl
fild
sub
dec
cwde
push
sbb
sbb
push
cmp
jb
or
lods
mov
aaa
mov
mov
or
mov
fmul
test
jo
ds
add
and
add
cmp
push
and
out
mov
dec
and
xor
imul
xchg
add
cs
add
jns
aaa
mov
xchg
cs
mov
pop
inc
pushf
or
popa
push
xchg
sbb
movs
add
sbb
jne
test
rcr
f2xm1
adc
movs
sbb
scas
mov
sbb
sub
dec
dec
mov
pop
rcl
sub
rol
xor
sbb
sbb
scas
aam
call
out
aad
addps
and
out
xchg
cli
adc
(bad)
inc
add
ja
es
adc
sar
rcl
cld
sbb
jmp
adc
inc
adc
or
sub
imul
or
lods
jno
sub
stc
sbb
repz
mov
retf
lods
stos
add
shl
adc
(bad)
not
mov
xchg
mov
in
push
jecxz
aad
pusha
ss
fidivr
ins
sub
mov
jne
out
jns
(bad)
icebp
mov
mov
mov
xchg
xor
xor
jne
(bad)
cmp
test
or
arpl
push
mov
or
cmp
test
loopne
sub
(bad)
cmc
cmps
hlt
(bad)
sti
push
rol
lods
sbb
loopne
add
inc
sar
lods
jge
jmp
push
and
add
or
ficomp
arpl
cmps
loopne
push
xchg
ja
xchg
in
adc
in
add
sub
mov
sub
add
cmps
xor
cmp
jnp
les
pop
arpl
pop
ret
push
sti
loopne
push
loopne
adc
mov
iret
or
or
xchg
xor
rcl
retf
mov
imul
fmul
retf
adc
add
bound
xchg
sbb
mov
aam
addr16
mov
int
mov
jge
in
jecxz
(bad)
mov
adc
cdq
enter
adc
mov
iret
xchg
push
mov
add
(bad)
dec
xchg
adc
xor
jo
std
retf
(bad)
cli
(bad)
jl
out
mov
loop
mov
jb
pop
sub
leave
mov
mov
xchg
ror
stos
push
add
sub
aad
add
push
lods
sbb
mov
(bad)
pushf
jmp
jne
jge
pusha
add
mov
ins
das
xor
je
jnp
out
push
fwait
xor
inc
out
lock
or
add
fdivp
xchg
out
dec
int3
ins
xor
mov
ins
jo
fistp
loopne
adc
adc
mov
test
ror
cmp
sbb
adc
adc
lock
pop
mov
xchg
cld
arpl
out
clc
mov
cs
(bad)
jl
add
into
outs
pushf
sar
aaa
jecxz
mov
loopne
add
clc
iret
int
repz
(bad)
cmp
pop
sbb
cmc
jp
je
cld
fsubr
dec
scas
cmp
dec
jne
mov
add
stc
aad
out
jne
pop
pushf
jmp
out
cli
mov
and
dec
loopne
adc
data16
add
add
add
push
addr16
or
es
mov
and
sahf
pop
pop
xchg
cmp
mov
jmp
mov
pop
push
sti
lods
das
jle
and
inc
push
and
mov
jg
std
fistp
jecxz
sahf
mul
cmp
add
jle
xchg
out
in
iret
clc
mov
scas
cmp
xchg
or
jo
adc
pop
hlt
fsubr
sti
in
test
sbb
(bad)
scas
aaa
(bad)
out
jnp
in
in
adc
add
aas
popf
sti
jl
mov
movs
(bad)
add
rcr
or
add
xor
add
and
add
add
add
inc
add
or
cmps
or
pop
test
add
sbb
adc
add
jns
addr16
pop
jge
addr16
push
jnp
ja
mov
jnp
mov
aad
outs
mov
ja
inc
jns
cmps
add
add
enter
add
out
pop
mov
popf
daa
jne
pusha
or
fadd
imul
add
rol
out
xor
add
cwde
jle
xchg
test
out
rol
mov
add
push
cmps
jl
test
push
add
push
add
clc
outs
cmp
sub
push
cmps
xchg
cwde
add
xchg
ja
push
mov
(bad)
ja
out
inc
call
dec
nop
sbb
mov
hlt
pop
add
jo
jbe
mov
mov
jae
xchg
pop
mov
outs
pop
sub
push
mov
test
movs
mov
mov
ja
mov
test
ins
dec
nop
mov
jo
push
mov
xchg
xchg
enter
mov
add
js
inc
js
or
add
nop
xor
jge
xchg
clc
sub
inc
cwde
add
add
and
xor
pop
xchg
xchg
cmp
dec
(bad)
leave
clc
jae
sub
mov
jecxz
add
lock
push
dec
sbb
ror
pop
xchg
pop
xchg
shl
push
jo
sbb
or
add
pop
xchg
xchg
push
cmps
xchg
stos
fmul
pop
add
pop
adc
inc
pop
push
cld
mov
rcr
ja
jne
aad
adc
sub
xchg
cmp
mov
mov
pop
js
cmp
add
dec
je
imul
xchg
dec
imul
mov
or
(bad)
fs
jbe
xchg
push
rcl
add
dec
xchg
inc
lock
data16
outs
pop
js
jecxz
jge
dec
xchg
mov
cwde
adc
sbb
xchg
inc
xchg
bound
xor
jge
cmp
test
and
dec
dec
cld
sbb
stc
dec
inc
mov
daa
test
cmp
inc
sub
add
cmp
ror
sbb
(bad)
xchg
xchg
xchg
js
xchg
dec
or
stc
outs
dec
dec
popf
imul
or
je
call
mov
call
jnp
xchg
xor
fwait
push
add
jecxz
mov
(bad)
in
xchg
pop
or
cdq
cwde
inc
mov
add
es
jne
call
or
xchg
ins
imul
xchg
cdq
xor
addr16
jns
mov
xchg
add
dec
jns
pop
push
sub
jbe
sub
push
mov
or
test
add
jnp
jmp
repnz
sbb
jne
sub
pop
sbb
jmp
and
movs
pop
sub
mov
retf
pop
mov
xchg
jb
(bad)
pop
jmp
mov
mov
mov
fmul
jo
xchg
dec
jmp
and
pop
jnp
test
sbb
ins
dec
mov
mov
mov
cmc
fwait
mov
mov
cwde
sbb
leave
sub
xchg
add
out
pop
mov
add
cmp
mov
push
mov
dec
leave
stos
sub
popf
test
mov
call
xor
test
retf
pop
xchg
pop
cwde
pushf
cmp
or
xchg
and
sub
sub
xchg
mov
xchg
dec
or
in
dec
adc
leave
popf
cmp
call
stos
mov
xchg
test
sbb
scas
inc
mov
stos
stc
test
test
(bad)
jp
add
stos
pop
popf
push
jmp
mov
cdq
add
push
(bad)
sbb
clc
mov
pusha
add
mov
pop
sub
mov
fsubr
sub
stc
xchg
test
call
fisubr
imul
scas
pop
sbb
pop
test
call
xor
imul
retf
retf
mov
pop
test
pop
mov
jmp
cwde
mov
mov
pop
mov
jmp
ins
fld
cdq
stos
adc
pushf
inc
fistp
fistp
dec
xchg
mov
fs
xor
mov
jo
and
popf
dec
fistp
jnp
inc
fwait
stos
outs
pop
mov
cwde
add
scas
aam
mov
fimul
arpl
in
mov
jmp
sti
sub
add
add
fwait
xchg
mov
scas
mov
mov
stc
cwde
addr16
stos
sub
aad
mov
mov
mov
cli
mov
stos
xchg
mov
xor
fwait
mov
test
sbb
sub
retf
mov
cdq
xchg
(bad)
sub
stos
mov
or
(bad)
or
test
stos
mov
dec
mov
jnp
push
movs
mov
add
mov
jnp
adc
jecxz
mov
imul
inc
pop
rol
call
outs
in
in
mov
mov
mov
lods
popf
push
mov
in
sub
bound
cmp
mov
mov
and
or
dec
cmp
lods
mov
pop
cmps
ret
mov
fsubr
retf
add
stc
ret
scas
adc
cmps
or
xor
pop
cld
cwde
fidivr
arpl
mov
cmp
or
(bad)
stos
sbb
leave
les
rcl
jbe
mov
stos
mov
stos
mov
or
(bad)
stos
ret
mov
dec
je
cmp
cmp
(bad)
pop
mov
mov
sbb
xor
popa
stos
shr
mov
add
(bad)
jae
add
sahf
aad
les
(bad)
pop
mov
cld
ror
lds
enter
xor
int3
cmp
enter
scas
fadd
push
dec
mov
dec
les
stos
pusha
cld
cmps
pop
xchg
int3
out
cwde
xchg
cld
into
lock
cld
(bad)
cwde
stos
pop
lods
lods
retf
stos
sbb
scas
dec
popf
icebp
int3
stos
fstp
rcr
retf
mov
in
int3
cwde
dec
retf
scas
(bad)
pushf
sbb
stc
mov
mov
(bad)
pop
(bad)
pop
pushf
mov
stc
mov
jl
mov
mov
loopne
(bad)
mov
sbb
jle
lods
in
add
fcmovnbe
jecxz
mov
sbb
adc
into
(bad)
sbb
movs
cld
cwde
mov
mov
lods
shl
dec
or
loopne
jp
mov
cmp
and
adc
call
nop
cld
mov
sbb
pop
test
es
shl
sub
cs
shr
int
mov
lods
push
(bad)
lock
test
mov
sbb
sti
int
cmp
jbe
mov
cmp
and
or
aad
sti
(bad)
popa
jl
xchg
cmp
cmps
retf
cld
shl
jl
push
mov
retf
pusha
in
retf
(bad)
sbb
and
rcl
dec
mov
ins
sahf
inc
dec
(bad)
mov
imul
scas
and
xchg
jge
xor
sar
(bad)
lock
aam
pusha
aam
add
jge
int
jl
pusha
in
mov
jl
(bad)
out
test
xlat
lock
xchg
ins
rol
leave
in
rcl
xchg
test
fmul
int
(bad)
(bad)
in
rcl
std
int
stos
fsubr
aam
int
xor
(bad)
fstp
in
sub
test
mov
retf
leave
mov
fadd
mov
lods
or
xchg
popf
int
fstp
pushf
pop
(bad)
or
fidivr
iret
mov
stos
stc
std
int
cmp
push
mov
sbb
pop
sub
fidivr
xor
ficom
retf
inc
popf
sbb
pop
in
int3
js
fisubr
outs
ficomp
iret
dec
adc
adc
fstp
test
pusha
loop
ins
loop
cs
mov
and
(bad)
dec
outs
fld
ds
mov
leave
pop
add
int
out
in
fstp
scas
fisubr
mov
sbb
(bad)
int3
out
dec
shr
ins
fist
mov
jbe
out
cmp
fs
fisttp
fisttp
loope
push
out
(bad)
in
dec
adc
in
(bad)
call
push
loopne
sbb
jo
fsubp
std
fwait
(bad)
int3
fnstenv
in
pop
fcom
jo
pop
loopne
sbb
out
out
mov
test
movs
add
or
mov
xlat
aas
dec
mov
in
push
data16
in
fidivr
jns
in
int
rcr
push
push
out
push
jmp
outs
fisttp
in
mov
test
in
out
sub
cdq
or
call
(bad)
loope
out
in
and
mov
xchg
fsubrp
sub
scas
loopne
in
dec
in
mov
fild
in
jo
out
cs
mov
out
add
in
(bad)
mov
jmp
dec
out
mov
jmp
in
in
ret
jge
sub
popa
add
(bad)
jmp
lahf
fst
loop
push
aad
into
add
loopne
outs
xchg
fisttp
mov
test
call
adc
fisubr
xor
in
(bad)
dec
sbb
in
mov
bnd
lahf
pop
in
das
pop
out
iret
jmp
push
icebp
sbb
in
jecxz
push
pop
mov
jo
jecxz
dec
jmp
fidiv
div
sahf
out
pmaddwd
mov
in
repz
lahf
repz
out
hlt
aaa
fcomip
mov
fnsave
fisub
repz
fstp
xlat
jmp
hlt
add
inc
lahf
call
scas
jmp
jge
mov
mov
scas
lock
pop
in
dec
pushf
hlt
(bad)
mov
outs
icebp
std
pop
hlt
mov
add
pop
popf
das
outs
imul
scas
cmc
mov
cmc
jbe
ret
call
mov
cmp
sti
mov
hlt
push
popf
sti
lods
fucomip
lea
mov
cmc
jmp
hlt
mov
rol
outs
call
das
sti
pop
(bad)
xor
cld
mov
dec
mov
mov
std
cs
clc
and
cli
xchg
pmaddwd
(bad)
and
repz
scas
hlt
outs
scas
icebp
enter
std
hlt
mov
imul
fcomip
loop
or
sbb
sub
mov
lea
sub
xchg
push
mov
xchg
test
cwde
xchg
sahf
sahf
xchg
sub
cmps
test
mov
pusha
mov
mov
mov
ds
sub
xchg
rol
scas
stos
shr
sahf
into
pushf
(bad)
mov
jge
mov
xchg
enter
popf
aad
pop
dec
xchg
rcr
popf
fidiv
push
retf
jmp
test
les
ret
push
and
add
dec
pushf
xor
dec
dec
dec
test
aad
ins
dec
inc
mov
mov
or
arpl
rcl
lea
push
aad
push
in
(bad)
cmp
pop
daa
gs
ja
popf
(bad)
retw
(bad)
stc
dec
in
push
pushf
ds
jno
sbb
bound
and
mov
add
dec
or
sub
jo
cmp
or
sahf
in
call
in
dec
cmp
push
mov
stc
xor
aaa
popf
lea
nop
pop
ja
es
inc
out
(bad)
push
fld
xor
int
or
push
ret
add
call
xor
fisttp
repnz
rcl
push
fcomp
js
inc
pop
rcr
pop
(bad)
in
jp
pop
outs
repz
dec
xchg
xchg
xchg
and
std
cmps
in
jo
jl
outs
jne
test
xchg
fadd
jae
test
test
and
clc
xor
mov
cmp
mov
pop
push
xor
and
jae
cs
in
pop
shl
push
and
xor
fst
push
mov
fmul
ficomp
test
movs
cmp
loope
enter
ja
cmp
xchg
inc
arpl
bound
nop
push
or
mov
add
inc
fcom
add
inc
mov
loope
jbe
add
and
shl
xchg
cdq
sbb
test
sbb
dec
mov
adc
cdq
arpl
imul
sub
mov
sub
es
test
sbb
popa
inc
mov
movs
jbe
sub
cld
test
xchg
leave
fs
es
leave
(bad)
inc
mov
cmp
push
test
inc
pop
adc
cmp
mov
xchg
jp
or
stos
mov
mov
jmp
outs
ins
dec
pop
push
ror
mov
imul
stos
dec
mov
mov
and
idiv
test
sbb
push
mov
stos
in
cli
in
bound
nop
jp
cmps
push
add
mov
adc
dec
fsubr
jmp
and
outs
ret
retf
inc
mov
mov
jp
add
es
xor
lods
lods
ss
popf
jmp
addr16
or
cmp
jnp
inc
ret
test
adc
fadd
repz
cmp
icebp
repz
push
or
dec
fs
jns
repnz
cmp
xor
ret
inc
daa
popf
xor
mov
addr16
ins
mov
push
push
call
aaa
adc
enter
or
xor
push
mov
sti
ins
(bad)
jmp
mov
movs
cli
mov
jns
xchg
loope
add
mov
int
(bad)
adc
dec
cmp
inc
push
mov
ror
ja
pop
or
sub
jae
je
aad
(bad)
mov
shr
xor
cmp
xchg
dec
mov
popa
cmp
scas
push
rol
jns
cmc
push
cmc
repnz
mov
ds
jge
daa
and
(bad)
pop
ffree
jns
adc
sub
cmp
imul
or
xlat
fidiv
js
xchg
repnz
call
dec
je
js
repnz
or
iret
add
xchg
xlat
add
repnz
into
add
mov
pop
shld
dec
inc
adc
call
out
je
ret
pop
mov
es
push
mov
rcl
xchg
and
mov
inc
call
test
les
sub
sub
shr
popa
mov
xchg
adc
mov
xor
pop
stos
test
cmp
outs
in
sbb
ins
lea
mov
xor
bound
and
call
or
inc
and
js
or
and
inc
mov
mov
add
and
xor
cmp
or
xor
dec
inc
fisubr
lods
mov
es
rcl
mov
enter
xchg
xor
cmp
lock
mov
dec
fs
xchg
ror
and
iret
cwde
rcr
fs
mov
fwait
jno
cmps
cmp
dec
dec
jno
(bad)
jae
aad
out
mov
jae
jmp
cmps
cmp
sbb
into
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
popf
adc
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
stos
inc
fadd
mov
push
sub
test
(bad)
ins
sub
pop
xor
les
(bad)
test
std
lods
gs
pop
and
test
fld
push
pop
jnp
(bad)
mov
adc
pop
into
dec
and
aaa
push
fnop
or
imul
aam
xlat
mov
(bad)
pop
stos
fcmovnbe
bound
mov
mov
pop
lds
push
mov
xchg
inc
pop
shr
in
arpl
imul
ins
adc
retf
fisub
pop
or
cmp
jmp
add
imul
xchg
mov
fsubr
mov
push
cmp
div
mov
or
pop
cli
and
mov
xchg
mov
mov
adc
jbe
pop
sbb
stc
and
loope
ror
lods
xor
dec
pop
add
pop
mov
mov
xlat
or
mov
cmc
mov
or
mov
fs
sub
sbb
push
add
cwde
or
stos
fbld
adc
xchg
sbb
add
inc
retf
or
and
xchg
and
and
add
daa
sub
retf
sub
jp
dec
xchg
outs
xchg
adc
pop
mov
or
mov
pop
xor
nop
test
adc
movs
sub
push
int3
xchg
out
xor
inc
mov
arpl
dec
push
and
mov
xor
pop
mov
sub
pop
imul
mov
pop
mov
movs
xchg
jae
adc
pop
test
mov
fs
xlat
js
mov
cmps
int
pop
sbb
neg
fldcw
outs
stos
pop
mov
adc
add
int3
addr16
sti
pop
test
clc
imul
(bad)
fdiv
cmp
xor
(bad)
mov
ins
call
adc
xor
lds
mov
enter
inc
add
push
or
jmp
mov
mov
mov
sbb
inc
mov
imul
push
add
sub
add
cmp
inc
mov
pop
std
add
rol
inc
imul
inc
jge
out
mov
test
es
lods
scas
loop
pop
pop
test
(bad)
jo
lahf
sub
jmp
pop
stos
aad
ds
clc
xchg
add
sub
jbe
jmp
cmp
sub
ret
or
pop
push
cli
mov
push
jae
jmp
rol
ret
xor
adc
cwde
jl
xor
leave
pop
aaa
jl
and
cmp
out
gs
jo
xor
mov
add
test
pop
mov
xlat
pop
inc
(bad)
mov
sar
cmp
pop
fcmovnbe
xchg
je
fdivr
icebp
pusha
push
xor
pop
pop
jbe
adc
in
fld
ds
push
jno
and
fcmove
lods
fbstp
or
pop
aam
inc
jle
xchg
add
cmps
ins
ins
(bad)
jge
gs
idiv
daa
sbb
mov
sti
test
mov
(bad)
jbe
or
stos
xchg
mul
ja
jmp
mov
mov
je
xchg
popa
xchg
xchg
sahf
jbe
or
je
add
ins
movs
aad
stc
daa
jb
mov
dec
(bad)
jl
push
jo
xor
jl
idiv
mov
pop
jo
lds
xchg
test
xchg
cmp
pop
xor
xor
loop
test
js
data16
js
ja
pusha
(bad)
jp
aaa
xor
jno
mov
or
outs
adc
jne
cmps
add
xchg
mov
add
mov
pop
ja
call
push
dec
je
cwde
je
cmc
test
pop
sbb
xchg
call
inc
rol
xchg
jg
fdivr
pop
mov
data16
es
push
and
je
push
fs
cmps
outs
movs
dec
popa
dec
data16
mov
add
lods
jbe
fdiv
inc
clc
push
addr16
xlat
xchg
mov
jnp
test
add
jnp
push
xor
and
(bad)
cmp
daa
mov
imul
jge
aaa
pop
aaa
adc
cmps
mov
add
addr16
pop
mov
mov
or
fdiv
push
push
outs
xchg
dec
mov
mov
js
push
test
add
daa
jl
es
cmp
loopne
mov
jl
(bad)
mov
(bad)
mov
and
jne
push
ins
add
je
pop
int
jnp
add
mov
imul
pop
cld
test
imul
imul
pop
ss
fs
pusha
ja
xchg
aad
ja
aaa
imul
xchg
shl
xchg
js
fcom
sbb
inc
mov
stos
call
(bad)
jae
pop
add
rol
ins
in
jg
clc
js
xchg
push
jp
sbb
mov
or
daa
jmp
xchg
cwde
test
push
push
and
sub
mov
jo
leave
or
fnstcw
jmp
inc
ins
mov
mov
push
movs
lds
aaa
cdq
dec
shl
arpl
test
fimul
mov
xchg
mov
sbb
add
pop
cmp
dec
jbe
(bad)
in
xlat
pusha
inc
pusha
add
test
mov
xchg
push
(bad)
pop
or
ins
pop
push
popf
sub
fs
jo
or
xor
fidivr
xchg
int3
(bad)
pushf
add
js
rcr
or
push
fisubr
lahf
aas
xchg
mov
mov
push
push
xchg
xchg
inc
test
clc
sahf
lock
fs
push
sbb
je
pop
pop
cmp
jmp
sub
xchg
xchg
hlt
and
fld
das
jmp
or
push
sub
jbe
pop
pop
cdq
pusha
push
jne
mov
aad
icebp
daa
push
neg
mov
add
jge
push
jo
cmc
add
xchg
jo
jbe
xchg
dec
push
sbb
push
aaa
mov
push
mov
push
je
addr16
aad
or
cmps
pop
call
cmps
jp
add
movs
pop
stos
addr16
movs
pop
lds
adc
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
int
add
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
lods
lock
test
mov
adc
scas
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
fld
or
cmp
dec
mov
imul
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
stos
mov
sub
mov
cmp
add
xor
mov
rol
mov
bound
add
sbb
dec
lods
xchg
imul
mov
mov
jmp
loopne
add
sbb
stos
mov
stos
add
stos
mov
or
cli
mov
fwait
mov
pop
rol
mov
pushf
mov
sub
xchg
sbb
sbb
mov
inc
loope
mov
lock
(bad)
add
add
jl
aaa
ins
add
pop
ret
cmp
sub
add
add
add
xchg
les
ret
aas
sbb
das
cmp
or
add
cld
scas
sbb
cmp
lds
lds
mov
dec
lds
mov
adc
pop
mov
pop
pusha
les
ret
dec
in
mov
ret
imul
les
(bad)
je
(bad)
pop
mov
or
push
xor
loopne
cmp
mov
xor
inc
xor
sub
(bad)
in
mov
jo
and
cmps
mov
lock
push
nop
retf
leave
jp
mov
xor
xchg
cld
retf
retf
mov
jl
mov
(bad)
fwait
mov
retf
retf
leave
les
pop
mov
or
sar
(bad)
lods
retf
ins
int3
mov
add
add
mov
xchg
pushf
retf
retf
add
add
ror
pushf
add
cld
leave
icebp
cld
int
sbb
jns
into
jmp
fmul
fstp
push
mov
into
add
pop
(bad)
or
lods
cmp
or
into
out
dec
shr
mov
jmp
int3
inc
or
adc
shl
sub
and
add
push
in
iret
and
mov
shr
cmp
(bad)
or
add
add
or
stos
dec
into
push
int
repz
shr
ror
fst
mov
leave
fstp
cmc
mov
cmp
or
rol
ror
or
into
add
and
cld
rcr
or
es
pop
lods
iret
push
ins
mov
mov
dec
(bad)
push
dec
iret
ss
iret
dec
mov
add
hlt
fmul
jno
(bad)
shl
dec
shl
sub
dec
cmp
or
jg
ror
(bad)
ins
imul
int
add
mov
cmp
in
or
jge
shl
mov
mov
imul
cli
retf
mov
(bad)
xlat
shr
xchg
pop
(bad)
push
fst
fwait
sbb
mov
(bad)
pop
cmp
add
sti
mov
xchg
ins
int3
test
shl
fcomp
add
and
ficom
shr
retf
fs
shl
into
jae
fcompp
ins
xlat
sub
sbb
cmp
fsubr
sub
fcomp
int
cld
mov
push
or
jns
fild
aam
mov
ins
sub
fstp
or
mov
int
ins
xlat
call
in
mov
scas
mov
(bad)
(bad)
fstp
or
rcr
stos
imul
ins
fist
add
dec
(bad)
in
(bad)
int
cld
or
sbb
jecxz
dec
loopne
sub
xor
loope
std
leave
aas
fsubp
push
ins
in
pop
fnstsw
add
in
jle
popf
std
iret
push
dec
in
pushf
loopne
fbstp
dec
(bad)
std
loope
rcl
mov
aam
out
fst
std
iret
inc
mov
in
fcom
into
cli
dec
(bad)
dec
push
in
ins
sar
or
popf
fst
xor
inc
ins
jecxz
sub
push
dec
inc
inc
stos
int3
in
add
fist
call
mov
cld
sbb
loop
fld
fldenv
jne
fucom
jl
mov
(bad)
call
jmp
dec
pop
loope
pop
jmp
out
fcomip
(bad)
and
in
jle
(bad)
adc
xor
fcomp
xchg
ds
(bad)
lock
aam
pop
aam
(bad)
cmp
and
sub
push
fisttp
into
out
mov
dec
adc
ficomp
jmp
into
(bad)
out
cs
outs
rcl
std
ins
jmp
ror
inc
sahf
in
mov
add
scas
add
lock
out
or
pop
inc
out
xchg
jle
fsubr
mov
jmp
ds
jge
pop
into
shl
(bad)
dec
out
sub
mov
shr
(bad)
shr
mov
ret
(bad)
out
push
jmp
mov
in
fsubr
sub
out
jo
hlt
xchg
(bad)
inc
aas
out
mov
jmp
pop
hlt
popf
push
repz
cdq
mov
fistp
out
cs
fucomi
jmp
out
add
jmp
scas
cmc
push
iret
iret
inc
iret
(bad)
jmp
mov
out
pop
out
xchg
mov
mov
in
sub
mov
add
mov
cld
pushf
in
and
mov
clc
cmp
nop
dec
repnz
(bad)
in
daa
scas
in
sbb
into
sbb
neg
jmp
pusha
ins
jecxz
popf
jmp
jae
stc
mov
out
popf
lahf
sti
push
outs
cli
inc
pop
imul
cli
push
jle
repnz
repnz
pop
cld
xchg
scas
lock
sti
mov
iret
imul
sub
jmp
fstp
sub
stc
out
sti
aad
jmp
das
cld
nop
cs
jno
out
pop
cld
inc
into
xlat
inc
mov
lock
dec
std
std
jmp
cmc
repnz
into
fstp
cli
add
mov
adc
push
push
inc
jns
clc
mov
loopne
movs
mov
js
mov
test
(bad)
sbb
sub
fnstcw
jmp
or
sbb
mov
jmp
push
jnp
pop
pop
int3
sti
stos
lods
mov
jns
imul
sbb
sub
imul
popf
(bad)
retf
cs
cmp
dec
adc
pop
mov
stos
mov
out
push
sbb
lods
push
mov
cmp
inc
les
add
or
dec
push
rcr
ins
mov
push
sbb
cld
scas
xor
adc
leave
out
mov
sub
jns
add
ret
cmp
popf
dec
ins
repz
dec
movs
call
jl
mov
nop
sbb
ins
test
mov
call
je
gs
xchg
lea
sar
pop
sub
push
push
adc
rcl
pop
mov
mov
rcl
out
push
sub
dec
mov
nop
sub
sbb
stos
sub
adc
cmp
cmps
retf
and
adc
sub
or
cmps
(bad)
clc
div
popf
sub
retf
repnz
shr
cs
adc
aaa
sub
mov
xor
imul
ins
pop
dec
mov
popf
mul
repnz
push
imul
mov
mov
add
push
jp
rcl
or
rol
jb
popa
inc
enter
mov
jno
jno
fst
or
cmp
fs
mov
and
xor
or
xchg
popa
inc
enter
cmps
pop
and
push
mov
and
sar
loope
xor
push
push
pusha
inc
and
ja
(bad)
rcr
jbe
test
shl
pop
dec
or
adc
fist
jne
xchg
or
inc
stos
popf
push
les
pop
pop
mov
sbb
(bad)
mov
mov
fiadd
daa
pushf
add
jns
jne
popa
xchg
data16
adc
or
push
and
test
imul
rcl
test
fiadd
movs
mov
sahf
pop
dec
stos
ds
aad
lods
mov
js
fistp
jb
pushf
call
xchg
mov
test
(bad)
and
fwait
and
and
in
mov
aam
or
cmp
out
jle
cmp
loop
aam
and
dec
fisubr
pop
mov
repnz
add
adc
fnstcw
xchg
and
and
loopne
pop
aad
scas
test
and
fsubrp
mov
xchg
cmp
sub
push
mov
adc
jmp
xchg
sub
sub
cmps
(bad)
cmp
das
cdq
ret
ins
enter
or
mov
push
int3
mov
sbb
push
jae
push
jbe
ins
cmps
xor
jns
jne
out
or
sti
push
loopne
mov
(bad)
mov
mov
test
imul
es
mov
dec
fisttp
repz
(bad)
sbb
lahf
bound
mov
mov
int3
bound
push
add
aaa
jb
push
leave
jmp
sub
xor
std
jb
outs
xchg
(bad)
(bad)
movs
sahf
fdiv
jmp
mov
adc
dec
sar
test
int3
push
jae
jbe
scas
push
cmp
mov
cmps
retf
jl
retf
push
cmp
icebp
leave
mov
pop
cmp
xor
mov
sub
inc
jg
fiadd
outs
aas
cmp
daa
pop
scas
xor
fcmovnu
outs
div
fcomi
jg
mov
cmp
das
and
dec
jne
ret
int
pop
addr16
cmp
mov
sub
out
repnz
dec
mov
xchg
fdiv
sbb
(bad)
leave
or
outs
cmps
ds
add
xchg
dec
jecxz
clc
shl
jl
fwait
(bad)
add
out
loop
dec
jge
test
jmp
dec
push
pmuludq
ss
inc
pushf
adc
pop
mov
adc
mov
and
lock
mov
and
pop
or
outs
mov
pop
mov
inc
inc
dec
and
mov
dec
out
test
adc
jge
lea
je
sbb
retf
or
imul
stos
stos
sub
sbb
xchg
leave
xchg
ins
and
outs
push
and
and
inc
cmp
sub
adc
loop
cmps
xchg
ret
xchg
(bad)
mov
cdq
xor
inc
ds
xchg
xchg
int
inc
adc
xchg
inc
(bad)
cmc
test
pop
sbb
pop
retf
push
lea
xchg
adc
inc
sub
adc
sar
fsub
or
dec
in
and
xor
imul
dec
sub
popa
data16
int
add
jl
push
call
repz
fwait
pop
sbb
adc
shr
jmp
shl
inc
les
movs
popf
lods
push
rcr
sbb
inc
lea
and
iret
stc
mov
repnz
push
adc
call
test
or
inc
mov
aam
add
mov
cmp
js
cmps
in
test
and
adc
cmp
add
gs
fld
in
call
adc
fnstenv
push
ja
add
inc
inc
or
mov
mov
iret
sub
xchg
cmc
dec
lock
inc
js
ds
push
jae
cmp
cmc
lods
movs
xor
sub
push
mov
call
int
adc
inc
stc
inc
push
push
mov
xchg
xchg
sahf
pusha
int
(bad)
sub
jne
cli
xor
fs
xor
push
pop
pop
mov
pop
imul
mov
shr
frstor
add
mov
pop
retfw
xchg
lea
jb
imul
xor
or
dec
lds
add
inc
scas
int3
add
push
sbb
and
retf
rcr
dec
mov
mov
out
push
fwait
inc
mov
adc
mov
ror
mov
imul
shl
mov
sbb
sub
bound
fdiv
out
outs
add
jmp
jns
dec
fimul
inc
and
push
cs
pop
cmp
shr
icebp
jb
or
mov
clc
les
(bad)
in
arpl
ja
and
fiadd
jo
sbb
jmp
dec
nop
add
pop
lods
adc
inc
popa
nop
xchg
dec
or
sbb
add
fnsave
add
push
ret
aas
xor
mov
push
clc
fmulp
enter
xchg
fdiv
or
jb
retf
sub
add
aad
mov
inc
fbstp
ret
xchg
int3
pop
xor
sbb
lock
ins
mov
fldcw
mov
mov
mov
icebp
mov
adc
add
pusha
rol
dec
ja
or
add
(bad)
call
push
jmp
jne
and
xlat
jns
daa
adc
scas
daa
adc
aad
data16
cmp
arpl
cdq
imul
je
pop
jmp
stos
out
xlat
adc
mov
mov
shr
sbb
cmp
(bad)
xlat
mov
pusha
int
lods
sbb
and
out
retf
ja
sbb
dec
nop
imul
sub
movs
stc
jmp
jae
dec
fisttp
mov
inc
pop
out
jo
pop
fld
into
ins
xchg
int
repz
xchg
mov
cmp
and
test
jb
pushf
fsubr
je
or
cld
in
sbb
fld
cld
out
daa
out
add
stos
xchg
mov
mov
icebp
std
repz
inc
jns
xor
and
loopne
mov
add
add
ret
out
cmc
call
(bad)
inc
or
in
cmp
cmp
jg
je
cmp
inc
ds
fild
add
fcmovne
lahf
jle
jl
pop
or
mov
out
retf
jmp
jbe
mov
test
add
jns
cmp
test
test
mov
sub
mov
and
pop
div
outs
jp
xchg
mov
or
dec
mov
mov
pop
in
mov
jbe
pop
mov
frstor
aas
call
outs
sti
mov
pop
repz
(bad)
ror
(bad)
adc
pop
add
les
stc
aad
(bad)
sbb
or
shr
aas
(bad)
out
aas
cs
scas
jle
cwde
jle
pusha
add
add
inc
ja
inc
jp
addr16
addr16
test
je
ja
daa
daa
jge
lock
inc
ja
ja
xchg
pop
jb
mov
xlat
pop
dec
mov
mov
jle
or
and
mov
xor
jl
daa
ja
call
dec
jo
cmp
cmp
ja
fadd
mov
aaa
jle
mov
cld
cmps
jle
addr16
or
out
(bad)
(bad)
adc
mov
daa
mov
push
push
add
add
jo
fbstp
arpl
js
rol
mov
pop
jae
mov
pop
je
xchg
xor
mov
and
or
mov
add
dec
hlt
addr16
pop
cmp
pop
xor
mov
mov
mov
pop
jge
mov
sbb
or
mov
mov
xchg
aaa
jns
addr16
adc
pop
dec
movs
call
mov
mov
pop
mov
in
sbb
mov
add
inc
add
nop
mov
jge
dec
mov
xchg
mov
sbb
and
retf
clc
mov
clc
mov
xor
mov
mov
aaa
jb
cmps
and
test
jo
sbb
and
pop
jge
push
or
or
or
add
and
add
or
aas
pop
clc
(bad)
dec
movs
cmp
sbb
jb
push
mov
push
mov
call
aas
out
arpl
mov
xchg
pop
pop
jge
inc
xchg
and
add
(bad)
pop
cmp
inc
xchg
inc
pop
mov
xlat
nop
in
add
dec
mov
sub
loopne
or
mov
leave
cmp
mov
(bad)
mov
push
pop
xchg
pop
lock
mov
nop
dec
dec
or
or
fst
js
or
sub
ret
xchg
enter
xchg
stc
clc
je
pop
jge
xchg
mov
sub
test
lea
jae
mov
adc
cdq
pop
pop
cwde
mov
je
mov
test
xchg
mov
dec
in
add
xchg
js
xchg
dec
daa
nop
pop
mov
xor
xchg
loopne
cmp
or
mov
fwait
cmps
jns
xchg
pop
outs
mov
mov
lea
xchg
les
inc
and
cmp
imul
cwde
inc
sbb
stc
inc
mov
xchg
mov
(bad)
fstp
xchg
rcr
pop
stc
js
test
je
pop
xchg
pop
clc
fwait
icebp
pop
xchg
mov
test
cmps
cmp
or
lock
scas
cdq
nop
ja
fwait
and
xchg
push
pop
cmp
xchg
xchg
xchg
add
aas
mov
arpl
xchg
sar
sahf
or
sbb
pop
fwait
stc
call
jo
cmp
cdq
mov
imul
movs
out
mov
in
sahf
mov
add
mov
and
nop
call
pop
sahf
and
dec
jns
test
nop
dec
stos
(bad)
std
mov
and
xchg
inc
pop
xchg
push
cli
xchg
xor
mov
cmp
pop
xchg
mov
cmps
retf
sbb
sbb
xchg
mov
fstp
test
pop
mov
(bad)
or
sbb
imul
lahf
xor
popa
xchg
mov
test
imul
dec
nop
jmp
movs
sub
mov
cmps
xchg
push
push
sbb
jmp
xchg
ror
ins
mov
retf
mov
inc
pop
jge
dec
or
lock
push
add
cmp
ficomp
mov
pop
adc
or
mov
pop
mov
xor
or
jo
mov
fs
shr
add
fwait
dec
stos
fstp
call
scas
sbb
call
or
cwde
lds
xchg
aad
popf
ins
pop
stos
jmpw
stos
scas
hlt
daa
test
cli
stos
xor
or
pop
sub
fstp
cli
mov
mov
jmp
stc
fwait
mov
lods
out
fsubr
mov
add
dec
lods
jb
test
xor
mov
jo
call
(bad)
or
test
retf
cli
pop
cmps
and
add
stc
mov
jns
or
scas
mov
ds
gs
lahf
retf
leave
mov
dec
dec
sub
sub
mov
dec
mov
sub
mov
xor
call
or
mov
sti
xchg
cmp
bound
scas
sub
xchg
dec
imul
pop
pop
or
leave
mov
sub
imul
aad
mov
mov
mov
loopne
mov
sbb
jnp
mov
add
add
stc
mov
add
sbb
add
add
fidivr
mov
sbb
mov
inc
add
jo
or
add
sti
call
daa
dec
cmps
mul
shr
pop
pushf
xchg
out
sub
nop
and
or
cmp
xor
mov
ins
shl
daa
fcmovb
mov
mov
jmp
and
les
lea
sbb
fwait
les
ret
(bad)
cmps
push
mov
pop
sbb
pop
mov
sar
fcom
ficomp
pushf
test
stc
test
test
mov
add
nop
mov
mov
cmc
ret
pop
cld
fwait
enter
pop
dec
lds
xchg
popf
mov
jg
xchg
push
ins
lods
hlt
inc
mov
dec
add
pop
or
fmul
dec
fwait
mov
sub
retf
mov
pop
mov
pop
mov
sbb
mov
int3
pop
cmp
stos
ins
mov
int3
leave
(bad)
sub
test
fidivr
fwait
mov
imul
mov
mov
stos
fwait
mov
int3
leave
jmp
pusha
inc
sahf
in
leave
icebp
int3
mov
fadd
scas
lods
ret
xchg
mov
mov
mov
outs
sub
pop
fadd
in
iret
cmp
xchg
xor
mov
sti
(bad)
dec
xor
mov
add
mov
aam
rcr
add
add
rcl
mov
sub
scas
sbb
bnd
ja
iret
retf
pop
into
sbb
(bad)
es
int
imul
iret
inc
sbb
add
xchg
cld
dec
rcr
pop
mov
ins
retf
mov
stos
and
les
enter
rcr
xor
pop
sbb
test
(bad)
sub
aam
cmp
test
add
rcr
push
and
scas
ret
int3
(bad)
jbe
int3
aad
mov
imul
or
sbb
jge
mov
in
mov
or
dec
in
enter
inc
or
mov
cld
ret
(bad)
je
(bad)
mov
and
add
push
fdivr
mov
mov
add
fimul
fsubr
mov
or
sar
lods
(bad)
mov
int3
sar
ins
int
pop
retf
retf
arpl
sub
xlat
xor
jecxz
(bad)
(bad)
(bad)
(bad)
int3
shl
stos
sub
enter
outs
sub
sar
loopne
leave
jl
rcr
sub
fmul
test
or
dec
(bad)
sub
(bad)
cmp
pop
xlat
mov
leave
(bad)
cld
ret
aam
dec
enter
shr
rcr
ret
inc
ins
fiadd
sar
fwait
push
loopne
push
and
outs
std
fdivrp
ins
xlat
movsx
sub
jle
xor
aam
jge
ret
mov
les
mov
xchg
or
inc
stos
in
lods
fist
add
mov
in
cmp
or
fisub
(bad)
(bad)
jge
pop
mov
inc
(bad)
fmulp
or
scas
popf
(bad)
xor
sub
add
jbe
faddp
pop
fisub
out
lods
in
(bad)
fld
fst
scas
(bad)
(bad)
fistp
push
rcl
mov
sahf
in
pop
in
dec
mov
sahf
aam
jl
xor
pop
shl
jge
push
push
retf
in
lock
mov
sub
fstp
aam
cmp
push
mov
mov
jecxz
scas
fstp
sahf
dec
jmp
push
jmp
pop
scas
in
jle
mov
out
sahf
mov
dec
in
inc
jge
outs
(bad)
fdivrp
fucom
mov
fiadd
scas
fcmovne
loope
dec
out
lea
mov
ror
xlat
out
out
out
out
dec
jmp
into
loope
fucomp
inc
outs
sar
add
xchg
adc
or
dec
out
jecxz
push
rol
imul
int
outs
out
adc
sahf
dec
loopne
pop
mov
sldt
lock
sar
ret
icebp
popa
mov
mov
call
ins
jmp
sahf
repnz
cmp
repz
aas
out
fimul
pop
scas
repz
repnz
jmp
sbb
(bad)
lock
push
call
scas
iret
test
shl
in
and
fidiv
into
in
scas
jmp
cs
mov
idiv
and
icebp
cs
mul
mov
jae
icebp
mov
jecxz
pop
repnz
loope
mov
and
mov
in
pop
fdiv
shl
dec
movs
lock
add
clc
test
repnz
stc
sbb
lahf
clc
jecxz
clc
mov
icebp
pop
pop
repz
push
scas
shr
dec
lahf
clc
pop
mov
adc
sub
je
(bad)
xchg
pop
test
inc
dec
cmc
mov
repnz
cli
je
cld
cli
scas
in
std
ds
iret
cli
dec
add
add
repz
cli
fwait
pop
jmp
inc
(bad)
mov
sti
pop
(bad)
aam
fucomip
in
das
jmp
pop
repnz
cs
test
lods
fcomip
add
test
jle
or
sbb
test
pop
add
test
or
mov
jnp
mov
cdq
sub
lods
popf
pop
sete
mov
lods
scas
mov
stos
mov
cwde
mov
mov
int
ret
test
cwde
cdq
add
fmul
mov
shr
xchg
mov
xchg
xchg
xchg
movs
mov
mul
inc
int3
xchg
shl
dec
retf
push
sub
int3
inc
movs
call
nop
mov
scas
dec
std
pop
in
call
fisub
jbe
gs
loope
cmp
scas
pop
pop
dec
sub
sbb
jl
cli
xchg
sub
xor
push
xchg
ret
pop
test
stos
mov
jmp
mov
(bad)
jmp
test
lds
movs
mov
push
rcr
cmps
dec
mov
fwait
push
xor
call
dec
sub
les
or
test
mov
or
popf
in
adc
pushf
or
mov
cwde
bound
push
add
lods
pop
cdq
inc
aad
jb
push
sti
pop
mov
mov
push
stos
loop
mov
add
cmp
bound
sub
xlat
add
push
out
push
pop
pop
fnstcw
(bad)
and
sbb
out
iret
daa
(bad)
dec
dec
push
jb
int3
jns
push
jae
hlt
neg
mov
bound
ja
loopne
retf
jne
test
adc
or
cld
loopne
ins
sub
push
mov
pop
mov
sub
int
sub
push
lahf
jns
fstp
push
mov
arpl
aam
sbb
jno
adc
and
fimul
stc
sbb
push
aas
xchg
push
movs
cmp
inc
out
sbb
jnp
sar
xchg
fdivr
push
xchg
xchg
and
ficomp
push
cmp
mov
loope
pop
push
ins
sub
push
sbb
cmp
push
sbb
mov
movs
xchg
(bad)
sbb
data16
cmps
shr
mov
push
add
xor
mov
js
add
dec
sbb
jmp
pushf
xchg
fisubr
xchg
lahf
cmc
or
xchg
push
pop
add
adc
ss
add
lods
test
cmp
pop
hlt
cli
lods
cmps
mov
mov
inc
cmps
fstp
pop
xlat
push
outs
adc
outs
or
jmp
add
(bad)
outs
cmp
fisub
mov
shl
cwde
sub
setnp
jo
enter
inc
(bad)
pop
jbe
add
sub
inc
xor
daa
(bad)
cmp
retf
xlat
push
inc
sti
scas
jmp
adc
mov
out
int3
inc
xchg
lods
mov
sub
dec
movs
iret
dec
xchg
leave
lahf
aad
sub
or
out
rol
(bad)
adc
sub
dec
xor
inc
inc
shl
test
popa
cdq
jbe
sbb
mov
bound
or
popf
cmps
retf
outs
loop
and
or
sub
and
fadd
xchg
arpl
rcl
fwait
(bad)
outs
xor
mov
scas
dec
mov
dec
fwait
push
repz
arpl
and
retf
cs
jbe
fnsave
jmp
cmp
fcomp
mov
outs
sub
(bad)
imul
scas
nop
mov
xor
hlt
fwait
sub
mov
mov
dec
fsubr
(bad)
aaa
dec
mov
sub
std
test
popf
stc
xchg
jecxz
and
jecxz
add
out
sbb
mov
(bad)
mov
xor
stos
into
jl
fcmovnbe
aaa
sbb
inc
or
out
or
std
push
cmp
imul
imul
inc
dec
(bad)
jo
xor
shl
adc
dec
or
(bad)
adc
dec
test
fldcw
mov
test
add
in
test
pusha
fisub
mov
add
pop
mov
xchg
mov
arpl
ror
fs
add
sbb
add
push
mov
popf
or
sbb
test
jecxz
sub
mov
cdq
or
cmp
ror
cmp
scas
arpl
add
shl
nop
xchg
lods
and
pop
dec
cmp
push
xchg
test
in
mov
leave
neg
in
sub
inc
pop
xchg
repnz
cmps
mov
cs
dec
(bad)
rcl
mov
pusha
test
mov
mov
jmp
cdq
ror
pop
dec
rcr
fwait
jns
outs
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
sub
jo
mov
mov
pop
pop
pop
xlat
xchg
mul
adc
test
enter
xor
fadd
fisub
cmp
imul
adc
inc
popa
popa
fiadd
mov
lea
pop
outs
jo
xchg
retf
mov
pusha
and
push
int3
xchg
(bad)
movs
xchg
gs
in
push
rcr
mov
mov
pop
ret
mov
lds
and
pop
iret
adc
mov
lods
lods
dec
jmp
xor
sbb
push
and
mov
push
jmp
in
dec
ss
lea
jmp
aaa
mov
mov
ja
sub
push
pop
mov
inc
nop
in
js
lock
push
(bad)
mov
pop
dec
fsubrp
mov
scas
jb
retf
pop
jmp
je
div
fdivrp
stos
aaa
add
ss
jl
fwait
pop
mov
xchg
ret
jo
leave
sti
loopne
jb
shr
loop
out
mov
inc
sbb
repnz
mov
pop
or
rcl
xor
jp
mov
outs
scas
cmp
or
js
adc
add
retf
mov
dec
js
arpl
push
in
mov
mov
xchg
icebp
mov
pop
cmp
rol
or
leave
dec
push
add
jmp
jno
pop
sbb
mov
push
adc
ret
fld
ffreep
sub
nop
jnp
add
pop
xchg
or
mov
inc
sub
mov
fidiv
mov
sbb
mov
pusha
mov
minps
pop
pop
or
or
(bad)
sub
xlat
lods
jb
loopne
in
mov
lock
and
gs
xlat
pop
(bad)
adc
fmul
mov
mov
cmp
mov
mov
retf
jo
mov
jns
scas
inc
xor
call
test
and
jmp
mov
inc
dec
add
iret
fcom
push
fidiv
adc
jns
mov
shr
(bad)
rcl
test
out
or
sar
add
mov
ror
ins
div
jle
mov
lods
xor
retf
ins
or
mov
scas
xor
sahf
jl
ret
or
mov
loopne
xor
pop
cs
push
inc
sbb
fnstsw
fimul
mov
adc
cli
in
scas
in
adc
std
loop
push
mov
dec
mov
mov
sar
out
shl
adc
push
jg
out
xor
sub
cmps
(bad)
mov
xchg
rol
mov
cmp
fld
and
pop
ins
mov
push
pushf
into
aaa
adc
mov
sbb
xchg
lahf
cmp
sub
push
fdivrp
mov
js
and
out
jle
and
mov
xor
aaa
sbb
(bad)
xlat
jmp
popf
fidiv
stos
jecxz
out
adc
in
adc
mov
out
pop
sbb
loope
and
(bad)
push
pop
fsub
in
pusha
push
idiv
xchg
xor
pop
aaa
mov
mov
(bad)
clc
push
cmp
lods
scas
jl
icebp
push
and
call
or
cmp
arpl
jp
push
ins
add
outs
xor
jae
push
push
ins
mov
jg
xor
jecxz
pop
cmp
add
sbb
rol
cmc
mov
xor
add
xlat
outs
shl
dec
inc
jle
daa
add
imul
arpl
add
push
sub
aaa
xor
shr
(bad)
push
rol
jge
js
aam
and
jl
pop
adc
xor
adc
inc
jge
inc
add
cmps
pop
push
push
outs
loopne
jg
aaa
bound
mov
arpl
ins
cmps
add
imul
daa
xchg
xchg
(bad)
jg
pop
xor
dec
call
or
jns
jne
(bad)
add
clc
jp
sub
idiv
addr16
cmp
xchg
imul
mov
data16
cmps
jne
cmps
jno
test
pop
push
and
inc
xchg
cmp
sbb
push
mov
pop
movs
pop
jl
clc
jnp
gs
aad
push
cmp
ja
xchg
push
mov
or
arpl
push
mov
jo
add
jl
push
fs
test
nop
jl
test
retf
aad
mov
push
jbe
(bad)
push
pop
outs
cmp
je
out
scas
js
jae
xchg
jp
pop
push
mov
push
adc
mul
out
outs
xor
(bad)
aad
scas
mov
mov
add
pusha
dec
push
push
(bad)
jbe
push
pop
push
jg
pop
fwait
push
pop
dec
or
push
jge
push
mov
jae
jbe
(bad)
jl
xchg
pushf
(bad)
push
pop
ins
lea
push
aaa
(bad)
jmp
xchg
or
outs
sahf
xchg
outs
and
xchg
jl
xchg
dec
add
xlat
jb
mov
ss
imul
adc
jnp
imul
xchg
jb
dec
ja
mov
mov
ins
jne
not
jns
pop
(bad)
and
xchg
leave
(bad)
add
cmps
pop
xchg
cmps
pop
and
imul
adc
movs
jne
add
inc
pop
ins
sub
ins
mov
jns
xchg
xchg
pop
cmc
pop
xchg
test
jle
add
test
mov
mov
cwde
ja
fsubr
and
aaa
nop
dec
inc
adc
ret
push
xchg
mov
inc
nop
mov
jp
fnstenv
jne
mov
pusha
ror
push
gs
call
pop
push
sbb
pop
pushf
push
jns
mov
cdq
jae
add
jns
pop
xchg
mov
test
jecxz
jg
mov
nop
es
fst
cmps
test
mov
and
repnz
mov
test
test
call
push
arpl
pop
dec
cmp
cmps
jo
cmps
xchg
pop
imul
mov
retw
cmp
jne
fmul
jge
jbe
mov
push
push
pop
push
call
jmp
pop
dec
add
jbe
ret
mov
arpl
push
and
add
ss
gs
dec
mov
push
xor
ins
call
add
add
movs
gs
dec
jp
inc
pusha
add
movs
bound
cmps
fs
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
int
add
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
lods
lock
test
mov
adc
scas
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
fld
or
cmp
dec
mov
imul
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
stos
mov
sub
mov
cmp
add
xor
mov
rol
mov
bound
add
sbb
dec
lods
xchg
imul
mov
mov
jmp
loopne
add
sbb
stos
mov
stos
add
stos
mov
or
cli
mov
fwait
mov
pop
rol
mov
pushf
mov
sub
xchg
sbb
sbb
mov
inc
loope
mov
lock
(bad)
add
add
jl
aaa
ins
add
pop
ret
cmp
sub
add
add
add
xchg
les
ret
aas
sbb
das
cmp
or
add
cld
scas
sbb
cmp
lds
lds
mov
dec
lds
mov
adc
pop
mov
pop
pusha
les
ret
dec
in
mov
ret
imul
les
(bad)
je
(bad)
pop
mov
or
push
xor
loopne
cmp
mov
xor
inc
xor
sub
(bad)
in
mov
jo
and
cmps
mov
lock
push
nop
retf
leave
jp
mov
xor
xchg
cld
retf
retf
mov
jl
mov
(bad)
fwait
mov
retf
retf
leave
les
pop
mov
or
sar
(bad)
lods
retf
ins
int3
mov
add
add
mov
xchg
pushf
retf
retf
add
add
ror
pushf
add
cld
leave
icebp
cld
int
sbb
jns
into
jmp
fmul
fstp
push
mov
into
add
pop
(bad)
or
lods
cmp
or
into
out
dec
shr
mov
jmp
int3
inc
or
adc
shl
sub
and
add
push
in
iret
and
mov
shr
cmp
(bad)
or
add
add
or
stos
dec
into
push
int
repz
shr
ror
fst
mov
leave
fstp
cmc
mov
cmp
or
rol
ror
or
into
add
and
cld
rcr
or
es
pop
lods
iret
push
ins
mov
mov
dec
(bad)
push
dec
iret
ss
iret
dec
mov
add
hlt
fmul
jno
(bad)
shl
dec
shl
sub
dec
cmp
or
jg
ror
(bad)
ins
imul
int
add
mov
cmp
in
or
jge
shl
mov
mov
imul
cli
retf
mov
(bad)
xlat
shr
xchg
pop
(bad)
push
fst
fwait
sbb
mov
(bad)
pop
cmp
add
sti
mov
xchg
ins
int3
test
shl
fcomp
add
and
ficom
shr
retf
fs
shl
into
jae
fcompp
ins
xlat
sub
sbb
cmp
fsubr
sub
fcomp
int
cld
mov
push
or
jns
fild
aam
mov
ins
sub
fstp
or
mov
int
ins
xlat
call
in
mov
scas
mov
(bad)
(bad)
fstp
or
rcr
stos
imul
ins
fist
add
dec
(bad)
in
(bad)
int
cld
or
sbb
jecxz
dec
loopne
sub
xor
loope
std
leave
aas
fsubp
push
ins
in
pop
fnstsw
add
in
jle
popf
std
iret
push
dec
in
pushf
loopne
fbstp
dec
(bad)
std
loope
rcl
mov
aam
out
fst
std
iret
inc
mov
in
fcom
into
cli
dec
(bad)
dec
push
in
ins
sar
or
popf
fst
xor
inc
ins
jecxz
sub
push
dec
inc
inc
stos
int3
in
add
fist
call
mov
cld
sbb
loop
fld
fldenv
jne
fucom
jl
mov
(bad)
call
jmp
dec
pop
loope
pop
jmp
out
fcomip
(bad)
and
in
jle
(bad)
adc
xor
fcomp
xchg
ds
(bad)
lock
aam
pop
aam
(bad)
cmp
and
sub
push
fisttp
into
out
mov
dec
adc
ficomp
jmp
into
(bad)
out
cs
outs
rcl
std
ins
jmp
ror
inc
sahf
in
mov
add
scas
add
lock
out
or
pop
inc
out
xchg
jle
fsubr
mov
jmp
ds
jge
pop
into
shl
(bad)
dec
out
sub
mov
shr
(bad)
shr
mov
ret
(bad)
out
push
jmp
mov
in
fsubr
sub
out
jo
hlt
xchg
(bad)
inc
aas
out
mov
jmp
pop
hlt
popf
push
repz
cdq
mov
fistp
out
cs
fucomi
jmp
out
add
jmp
scas
cmc
push
iret
iret
inc
iret
(bad)
jmp
mov
out
pop
out
xchg
mov
mov
in
sub
mov
add
mov
cld
pushf
in
and
mov
clc
cmp
nop
dec
repnz
(bad)
in
daa
scas
in
sbb
into
sbb
neg
jmp
pusha
ins
jecxz
popf
jmp
jae
stc
mov
out
popf
lahf
sti
push
outs
cli
inc
pop
imul
cli
push
jle
repnz
repnz
pop
cld
xchg
scas
lock
sti
mov
iret
imul
sub
jmp
fstp
sub
stc
out
sti
aad
jmp
das
cld
nop
cs
jno
out
pop
cld
inc
into
xlat
inc
mov
lock
dec
std
std
jmp
cmc
repnz
into
fstp
cli
add
mov
adc
push
push
inc
jns
clc
mov
loopne
movs
mov
js
mov
test
(bad)
sbb
sub
fnstcw
jmp
or
sbb
mov
jmp
push
jnp
pop
pop
int3
sti
stos
lods
mov
jns
imul
sbb
sub
imul
popf
(bad)
retf
cs
cmp
dec
adc
pop
mov
stos
mov
out
push
sbb
lods
push
mov
cmp
inc
les
add
or
dec
push
rcr
ins
mov
push
sbb
cld
scas
xor
adc
leave
out
mov
sub
jns
add
ret
cmp
popf
dec
ins
repz
dec
movs
call
jl
mov
nop
sbb
ins
test
mov
call
je
gs
xchg
lea
sar
pop
sub
push
push
adc
rcl
pop
mov
mov
rcl
out
push
sub
dec
mov
nop
sub
sbb
stos
sub
adc
cmp
cmps
retf
and
adc
sub
or
cmps
(bad)
clc
div
popf
sub
retf
repnz
shr
cs
adc
aaa
sub
mov
xor
imul
ins
pop
dec
mov
popf
mul
repnz
push
imul
mov
mov
add
push
jp
rcl
or
rol
jb
popa
inc
enter
mov
jno
jno
fst
or
cmp
fs
mov
and
xor
or
xchg
popa
inc
enter
cmps
pop
and
push
mov
and
sar
loope
xor
push
push
pusha
inc
and
ja
(bad)
rcr
jbe
test
shl
pop
dec
or
adc
fist
jne
xchg
or
inc
stos
popf
push
les
pop
pop
mov
sbb
(bad)
mov
mov
fiadd
daa
pushf
add
jns
jne
popa
xchg
data16
adc
or
push
and
test
imul
rcl
test
fiadd
movs
mov
sahf
pop
dec
stos
ds
aad
lods
mov
js
fistp
jb
pushf
call
xchg
mov
test
(bad)
and
fwait
and
and
in
mov
aam
or
cmp
out
jle
cmp
loop
aam
and
dec
fisubr
pop
mov
repnz
add
adc
fnstcw
xchg
and
and
loopne
pop
aad
scas
test
and
fsubrp
mov
xchg
cmp
sub
push
mov
adc
jmp
xchg
sub
sub
cmps
(bad)
cmp
das
cdq
ret
ins
enter
or
mov
push
int3
mov
sbb
push
jae
push
jbe
ins
cmps
xor
jns
jne
out
or
sti
push
loopne
mov
(bad)
mov
mov
test
imul
es
mov
dec
fisttp
repz
(bad)
sbb
lahf
bound
mov
mov
int3
bound
push
add
aaa
jb
push
leave
jmp
sub
xor
std
jb
outs
xchg
(bad)
(bad)
movs
sahf
fdiv
jmp
mov
adc
dec
sar
test
int3
push
jae
jbe
scas
push
cmp
mov
cmps
retf
jl
retf
push
cmp
icebp
leave
mov
pop
cmp
xor
mov
sub
inc
jg
fiadd
outs
aas
cmp
daa
pop
scas
xor
fcmovnu
outs
div
fcomi
jg
mov
cmp
das
and
dec
jne
ret
int
pop
addr16
cmp
mov
sub
out
repnz
dec
mov
xchg
fdiv
sbb
(bad)
leave
or
outs
cmps
ds
add
xchg
dec
jecxz
clc
shl
jl
fwait
(bad)
add
out
loop
dec
jge
test
jmp
dec
push
pmuludq
ss
inc
pushf
adc
pop
mov
adc
mov
and
lock
mov
and
pop
or
outs
mov
pop
mov
inc
inc
dec
and
mov
dec
out
test
adc
jge
lea
je
sbb
retf
or
imul
stos
stos
sub
sbb
xchg
leave
xchg
ins
and
outs
push
and
and
inc
cmp
sub
adc
loop
cmps
xchg
ret
xchg
(bad)
mov
cdq
xor
inc
ds
xchg
xchg
int
inc
adc
xchg
inc
(bad)
cmc
test
pop
sbb
pop
retf
push
lea
xchg
adc
inc
sub
adc
sar
fsub
or
dec
in
and
xor
imul
dec
sub
popa
data16
int
add
jl
push
call
repz
fwait
pop
sbb
adc
shr
jmp
shl
inc
les
movs
popf
lods
push
rcr
sbb
inc
lea
and
iret
stc
mov
repnz
push
adc
call
test
or
inc
mov
aam
add
mov
cmp
js
cmps
in
test
and
adc
cmp
add
gs
fld
in
call
adc
fnstenv
push
ja
add
inc
inc
or
mov
mov
iret
sub
xchg
cmc
dec
lock
inc
js
ds
push
jae
cmp
cmc
lods
movs
xor
sub
push
mov
call
int
adc
inc
stc
inc
push
push
mov
xchg
xchg
sahf
pusha
int
(bad)
sub
jne
cli
xor
fs
xor
push
pop
pop
mov
pop
imul
mov
shr
frstor
add
mov
pop
retfw
xchg
lea
jb
imul
xor
or
dec
lds
add
inc
scas
int3
add
push
sbb
and
retf
rcr
dec
mov
mov
out
push
fwait
inc
mov
adc
mov
ror
mov
imul
shl
mov
sbb
sub
bound
fdiv
out
outs
add
jmp
jns
dec
fimul
inc
and
push
cs
pop
cmp
shr
icebp
jb
or
mov
clc
les
(bad)
in
arpl
ja
and
fiadd
jo
sbb
jmp
dec
nop
add
pop
lods
adc
inc
popa
nop
xchg
dec
or
sbb
add
fnsave
add
push
ret
aas
xor
mov
push
clc
fmulp
enter
xchg
fdiv
or
jb
retf
sub
add
aad
mov
inc
fbstp
ret
xchg
int3
pop
xor
sbb
lock
ins
mov
fldcw
mov
mov
mov
icebp
mov
adc
add
pusha
rol
dec
ja
or
add
(bad)
call
push
jmp
jne
and
xlat
jns
daa
adc
scas
daa
adc
aad
data16
cmp
arpl
cdq
imul
je
pop
jmp
stos
out
xlat
adc
mov
mov
shr
sbb
cmp
(bad)
xlat
mov
pusha
int
lods
sbb
and
out
retf
ja
sbb
dec
nop
imul
sub
movs
stc
jmp
jae
dec
fisttp
mov
inc
pop
out
jo
pop
fld
into
ins
xchg
int
repz
xchg
mov
cmp
and
test
jb
pushf
fsubr
je
or
cld
in
sbb
fld
cld
out
daa
out
add
stos
xchg
mov
mov
icebp
std
repz
inc
jns
xor
and
loopne
mov
add
add
ret
out
cmc
call
(bad)
inc
or
in
cmp
cmp
jg
je
cmp
inc
ds
fild
add
fcmovne
lahf
jle
jl
pop
or
mov
out
retf
jmp
jbe
mov
test
add
jns
cmp
test
test
mov
je
pcmpgtw
retf
dec
icebp
mov
jp
dec
vmwrite
fistp
adc
mov
jl
in
cmps
mov
(bad)
push
xchg
pop
pop
ds
je
repz
jp
jno
cld
mov
xchg
cmp
ret
sahf
jl
xlat
mov
push
add
cmp
in
jg
sbb
sbb
jne
in
(bad)
stc
arpl
es
pop
stc
mov
(bad)
not
aas
cli
(bad)
jg
push
pusha
add
add
inc
ja
inc
jp
addr16
addr16
xlat
and
js
out
or
je
ja
daa
pop
jge
lock
inc
ja
push
jl
pop
jb
addr16
xlat
pop
dec
mov
mov
jle
call
pop
mov
xor
jl
daa
ja
call
dec
jo
ss
cmp
ja
mov
ss
sub
jbe
sub
jle
push
inc
ja
ja
dec
mov
pop
cmp
xchg
aaa
add
add
sar
enter
xchg
jge
aaa
xchg
and
jbe
out
mov
jbe
pop
jae
cmp
rcr
pusha
add
or
cmps
add
or
mov
test
jg
dec
or
cwde
cmps
test
push
jae
shl
add
and
or
push
cmps
ja
pop
test
mov
jnp
and
cmp
mov
mov
dec
jp
cmp
mov
test
xor
jp
clc
xchg
add
add
mov
inc
xor
daa
cwde
add
mov
pop
jp
cmp
jo
mov
mov
mov
mov
aaa
jb
xchg
jo
sbb
daa
cmp
jge
xor
push
inc
inc
nop
or
loop
and
outs
add
xor
or
pop
mov
mov
je
sbb
jb
and
mov
mov
xchg
test
mov
xor
xchg
xor
(bad)
sti
mov
sbb
je
fst
sbb
test
(bad)
push
mov
xchg
mov
dec
pusha
mov
test
and
add
clc
xchg
stc
sub
xchg
xchg
loopne
sub
pop
imul
nop
dec
addr16
xchg
pop
jl
mov
mov
pop
jl
js
test
pop
or
nop
jbe
xchg
sbb
test
xor
jl
enter
mov
xchg
jne
cdq
dec
dec
sbb
nop
cmp
xchg
int
je
enter
xchg
fcom
sbb
or
outs
xor
fwait
dec
push
xchg
add
inc
pop
fwait
xchg
mov
(bad)
cwde
in
cwde
loope
fwait
sub
cwde
into
mov
pop
pusha
add
call
outs
cdq
cdq
add
cdq
add
xchg
sub
jle
xchg
jl
xchg
loope
xchg
pop
hlt
mov
jmp
(bad)
fld
sbb
stc
js
mov
je
mov
shr
jne
sub
fst
mov
sub
dec
mov
sbb
fstp
stc
xchg
add
cmp
xchg
test
xchg
add
sub
fwait
leavew
xchg
into
jns
cdq
mov
sbb
jae
sub
sbb
or
sub
mov
push
sbb
sbb
add
loop
cwde
push
or
(bad)
std
pop
cdq
sbb
mov
mov
xchg
xchg
xchg
push
mov
test
scas
xchg
test
add
lods
or
xchg
inc
pop
xchg
popa
or
cmps
(bad)
pop
xchg
sbb
dec
shl
xchg
adc
jne
mov
jp
das
sbb
sub
sub
mov
test
adc
sahf
popa
aaa
mov
(bad)
mov
sub
cdq
xchg
push
or
js
lahf
sbb
sahf
push
push
neg
mov
jmp
test
imul
adc
stos
into
mov
cmps
je
lods
add
xchg
mov
lods
sbb
lahf
test
pop
cmp
imul
inc
dec
xchg
stos
retf
sub
mov
cli
sahf
inc
mov
inc
bound
retf
cwde
dec
or
test
mov
mov
cmp
mov
cwde
dec
or
cwde
pop
fldenv
cmps
sub
movs
dec
mov
cmc
xchg
cmp
add
stos
mov
or
xor
test
sbb
fcom
retf
enter
mov
test
adc
popa
call
xchg
sub
mov
mov
scas
mov
mov
and
aad
or
or
xchg
add
test
mov
aam
mov
nop
mov
retf
cmps
push
mov
xchg
mov
mov
shr
leave
xchg
sub
or
(bad)
sub
retf
fnstcw
sub
mov
or
mov
out
xchg
sub
xchg
ficom
sbb
fwait
mov
fwait
mov
sub
leave
xchg
jne
push
push
fld
mov
jmp
dec
mov
mov
retf
mov
dec
scas
sahf
jp
retf
dec
arpl
scas
inc
fstp
movs
sar
and
mov
sub
push
add
stos
mov
leave
mov
rol
pop
pop
add
fidivr
pusha
mov
retf
mov
retf
call
xor
mov
leave
mov
retf
mov
retf
fadd
out
jmp
cmp
fcomp
pop
rol
jg
mov
clc
ror
fldpi
ret
mov
mov
mov
lods
test
jmp
arpl
(bad)
pusha
mov
cmc
stos
mov
pusha
mov
loopne
or
mov
stos
xchg
or
out
(bad)
xchg
call
mov
fwait
mov
movs
(bad)
icebp
jp
jns
lods
jl
(bad)
mov
add
or
lock
push
xchg
sbb
pushf
enter
mov
mov
test
mov
leave
jae
les
add
xor
mov
lods
jp
add
mov
or
fdivr
sub
cdq
mov
sub
mov
mov
or
int3
cwde
fadd
add
lods
fcmovne
aam
int3
jb
retf
mov
mov
pop
dec
(bad)
mov
mov
mov
int
fdivr
add
sbb
sbb
(bad)
fwait
mov
mov
mov
jp
pop
mov
test
cld
int
fsubr
in
enter
mov
mov
in
rcr
or
loopne
les
retf
in
mov
int
mov
rcr
add
mov
sub
xchg
cmp
sub
sbb
in
rol
(bad)
ds
out
cld
mov
call
retf
mov
mov
dec
les
mov
cli
mov
pop
std
mov
sub
xor
ins
ins
mov
cmp
bound
es
(bad)
adc
int
int
cmp
mov
int3
iret
fcmovne
pop
dec
rcr
enter
or
fdivr
lods
mov
int
jg
fdivr
retf
mov
sub
(bad)
jge
les
add
pop
xor
out
sbb
cwde
(bad)
xchg
mov
loopne
cmps
popf
aam
ins
(bad)
mov
scas
mov
retf
pop
cmp
sahf
int
rcr
gs
dec
sub
xor
shl
aam
mov
sahf
popf
aam
imul
or
dec
dec
rol
mov
in
into
into
int
imul
fisub
xlat
loop
rol
fidiv
aam
sbb
shr
add
les
fnstsw
mov
rol
push
aam
in
loopne
sub
mov
push
std
ficomp
(bad)
shl
dec
add
or
ror
or
loop
or
adc
aam
enter
loope
fcom
ins
loope
cmp
inc
cmp
ds
sar
xchg
mov
jecxz
inc
sbb
adc
aam
dec
in
out
fst
in
jge
hlt
fstp
sub
fnsave
mov
pushf
fiadd
inc
sub
or
enter
aas
push
aam
pop
out
(bad)
aam
sub
dec
outs
in
jge
aad
fistp
mov
mov
frstor
in
sub
retf
jns
call
push
add
add
sbb
cld
add
fstp
sub
or
jmp
(bad)
in
dec
in
lods
in
fmulp
gs
sahf
call
jge
jl
(bad)
jl
clc
(bad)
fdivr
loope
mov
cmp
shr
out
push
out
mov
gs
mov
shl
(bad)
sub
fmul
loope
fstp
out
dec
in
cmp
fbstp
out
into
in
outs
out
mov
fucomp
(bad)
in
in
fidivr
call
add
xor
add
jecxz
outs
enter
jbe
in
mov
or
xchg
popf
cs
rcr
in
or
xchg
out
jmp
sub
jl
sub
call
icebp
push
call
out
call
push
out
jbe
in
jne
aam
pandn
out
icebp
and
lock
out
mov
addr16
jecxz
pop
out
std
lock
loop
outs
out
xor
xchg
in
icebp
mov
out
out
out
das
out
inc
out
out
cmp
or
shr
jecxz
str
jle
fsubr
cmc
gs
icebp
xor
sar
sub
push
mov
xor
mov
repz
out
popf
jl
je
test
dec
or
mov
xchg
repnz
sar
jmp
cmp
aam
psadbw
clc
cmp
stc
mov
stc
dec
mov
popa
outs
div
in
pop
clc
push
repnz
(bad)
cmps
lahf
jmp
or
jmp
ins
hlt
sub
or
sbb
aas
jmp
das
ret
jl
lock
jmp
outs
loope
jmp
push
out
in
psubb
lock
ins
mul
iret
jmp
sbb
sar
lock
scas
(bad)
scas
cs
vcvtpd2dq
cmc
cmp
imul
std
fmul
cmp
icebp
push
or
add
pop
sub
dec
sbb
sbb
mov
add
mov
dec
mov
mov
(bad)
mov
nop
sub
(bad)
pushf
mov
pushf
sub
lods
mov
xchg
mov
movs
retf
xchg
xchg
add
aam
aad
mov
(bad)
shl
mov
mov
mov
mov
xchg
call
jecxz
lods
jmp
and
or
sbb
pushf
and
aaa
lods
mov
cmp
cmp
out
bound
fdivr
cmp
(bad)
or
mov
adc
mov
mov
mov
add
hlt
add
int3
imul
sbb
mov
inc
test
mov
cmp
int
inc
mov
jle
and
dec
(bad)
xchg
(bad)
and
cmps
adc
mov
sbb
xor
scas
int
out
jecxz
test
add
push
fs
ret
test
push
dec
lea
mov
imul
int
sbb
mov
sbb
pop
arpl
aad
adc
mov
jl
fwait
mov
jmp
cmp
dec
dec
(bad)
ds
pop
xor
lds
sub
test
mov
in
fxam
fcmovnb
test
mov
xor
in
ds
popf
call
repz
movs
adc
test
mov
(bad)
or
in
xlat
jge
in
gs
cmp
rol
outs
fmul
push
or
cmpxchg
outs
jecxz
pop
leave
adc
lods
and
push
sbb
loopne
ret
bound
and
mov
jg
add
dec
mov
into
mov
loopne
fild
mov
mov
ficom
ficom
xchg
pop
mov
mov
inc
push
mov
dec
test
inc
xor
cdq
int3
xchg
xchg
rcr
jns
repnz
(bad)
and
jbe
fsub
ss
and
loope
adc
rol
jns
test
lahf
jge
push
out
jb
sub
push
in
mov
mov
mov
mov
sbb
and
fidiv
cmps
sub
jno
pop
jge
jmp
fld
ins
stos
pushf
retf
jge
stos
imul
mov
loop
jl
mov
fisubr
stos
add
dec
ficom
(bad)
or
gs
sub
scas
cmp
stos
xchg
out
pop
dec
push
xchg
sub
imul
cs
fdivr
data16
cmps
fwait
sub
add
sbb
jmp
fisubr
add
lds
adc
or
pusha
jl
adc
dec
mov
les
in
jno
sbb
icebp
leave
sbb
jle
sub
out
retf
or
add
push
mov
mov
mov
pushf
es
lea
inc
add
sub
dec
pop
dec
inc
adc
rep
xor
inc
inc
and
xlat
push
imul
pusha
pop
sbb
mov
push
out
xor
mov
dec
(bad)
pop
fwait
dec
inc
mov
iret
sub
cmp
push
pop
dec
adc
loop
hlt
dec
(bad)
in
sub
dec
xor
daa
mov
stos
std
fimul
mov
cli
ss
cs
inc
or
stc
mov
jmp
adc
lds
mov
sbb
iret
dec
cmp
xchg
or
in
sub
push
cmp
xlat
mov
scas
repz
in
ret
pop
xchg
adc
sub
jle
call
pop
inc
jns
movs
outs
jnp
outs
dec
inc
mov
ds
mov
aaa
xor
cmc
jne
imul
out
add
mov
adc
dec
push
hlt
stc
iret
xor
(bad)
out
mov
idiv
call
aas
xchg
xor
jns
or
retf
in
cmps
adc
sahf
int3
pop
mov
and
arpl
add
popf
in
push
out
or
ins
xchg
jnp
cmp
cmp
lock
nop
sub
sub
adc
pop
lds
sahf
mov
push
cmp
or
mov
inc
mov
jg
jno
(bad)
jo
lea
mov
jae
pop
xchg
call
popa
and
loope
sbb
inc
lea
and
fistp
mov
fdiv
xchg
enter
mov
xchg
xchg
pop
leave
cmp
mov
sbb
xchg
cwde
cmp
sqrtps
cmp
shr
and
imul
popa
and
aas
sub
outs
jo
stos
movs
cs
retf
push
div
xchg
ror
jge
dec
inc
out
cwde
xor
push
jns
arpl
repz
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
ds
ror
or
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
mov
(bad)
sbb
add
jmp
and
adc
rol
jne
push
sbb
jne
addr16
pop
outs
loopne
mov
mov
aaa
mov
sub
aad
adc
jmp
mov
shl
jne
sbb
imul
fmul
jbe
(bad)
mov
inc
ins
pop
jmp
fnstenv
push
sub
jecxz
push
mov
gs
and
scas
test
call
mov
loope
mov
dec
test
sbb
pop
cmp
mov
cmps
pusha
fsub
inc
xchg
mov
add
add
push
xchg
or
jmp
or
pop
scas
sbb
mov
aaa
pop
fmul
in
js
mov
in
inc
mov
ja
sti
aam
push
cmp
std
stos
xlat
add
or
pop
in
push
hlt
cmp
mov
loope
fstp
bound
xchg
dec
pop
jmp
inc
dec
mov
sar
push
sbb
add
cmp
loope
push
push
or
imul
push
push
aaa
mov
cmc
pop
fbld
hlt
mov
or
and
or
adc
adc
cmc
lds
out
mov
test
adc
fimul
xlat
push
mov
retf
stos
push
and
jge
wrmsr
shl
adc
into
adc
addr16
(bad)
jo
and
jp
pop
pop
mov
cli
sub
add
lods
je
pusha
pop
sbb
mov
mov
cld
push
repnz
cdq
jl
xor
test
arpl
(bad)
ucomiss
mov
sub
ror
pusha
or
sbb
add
scas
jae
ins
push
xor
(bad)
shl
(bad)
test
cdq
iret
cwde
out
adc
inc
mov
mov
enter
pop
ins
jo
xor
pop
mov
popf
add
clc
cmp
jns
xlat
enter
mov
dec
loopne
sbb
sbb
add
shl
add
fdiv
pop
addr16
mov
pop
ja
pop
or
mov
inc
jle
jb
mov
mov
(bad)
ss
add
sub
sar
mov
es
and
mov
inc
sbb
or
das
xor
jnp
in
cmp
pop
cwde
adc
scas
jmp
popf
aad
into
mov
cdq
aaa
push
mov
cmp
push
(bad)
cld
push
fistp
cmp
push
shr
lods
adc
pusha
jne
cmp
aam
pop
scas
cmps
jnp
test
in
adc
jle
jns
stc
push
xchg
push
jno
sar
lahf
sbb
add
xor
pusha
add
push
jno
das
add
or
ret
cmp
(bad)
adc
popf
hlt
mov
dec
jno
sahf
call
imul
sub
and
add
in
fsub
lods
jnp
mov
cmp
test
mov
lock
(bad)
icebp
loope
ins
push
repz
add
(bad)
arpl
fbld
cmp
mov
ins
das
frstor
loopne
icebp
mov
xor
enter
mov
push
imul
test
sti
fwait
xchg
dec
stc
fcom
cmp
jmp
jns
daa
ins
xor
ss
ins
xchg
js
add
jno
mov
fild
in
imul
jne
rol
outs
and
test
push
and
and
ins
cmp
jo
fdivr
xchg
jns
jbe
push
adc
inc
add
mov
imul
xor
adc
adc
pusha
inc
es
sbb
jbe
pop
jo
data16
xlat
jle
(bad)
push
add
outs
jmp
ins
jmp
jb
cmps
add
test
pop
jge
gs
outs
mov
arpl
xchg
out
(bad)
pop
xchg
sub
cmp
pop
jo
jbe
addr16
jo
sbb
add
arpl
push
adc
push
out
dec
mul
inc
ins
jle
pop
and
jl
xor
xchg
mov
push
ja
ss
pop
jl
xor
mov
mov
pop
in
add
xchg
pop
popa
cmps
js
test
pop
popf
fmul
(bad)
mov
test
jp
(bad)
push
ss
mov
xchg
sbb
mov
pop
jl
jp
cmc
mov
jnp
in
mov
add
imul
mov
sub
test
jns
(bad)
outs
popf
fcom
and
push
pushf
out
cmp
adc
(bad)
push
jno
test
imul
addr16
fisttp
arpl
push
cmps
movs
js
movs
or
adc
(bad)
xchg
test
mul
test
sbb
mov
(bad)
cmc
outs
mov
push
adc
popa
pop
div
test
push
clc
xchg
scas
(bad)
je
(bad)
push
inc
ja
or
sbb
mov
mul
add
jnp
push
imul
mov
or
fcom
sub
cwde
jbe
daa
mov
xchg
ja
mov
mov
test
sbb
mov
cmp
cmp
and
xor
push
sub
push
push
sub
sbb
out
int3
out
bound
push
cwde
mov
xchg
dec
pusha
xor
mov
mov
sub
add
jp
test
adc
arpl
pop
imul
fs
ja
cmp
add
dec
xchg
(bad)
xchg
(bad)
sub
pop
out
push
cmc
call
inc
data16
pushf
test
rcl
pop
(bad)
cmps
jbe
(bad)
pop
mov
jbe
pusha
pop
stc
or
out
push
mov
push
retf
in
daa
fwait
dec
ja
arpl
xor
dec
cwde
pushf
retf
inc
lock
aam
push
dec
pop
pop
aaa
fcomp
mov
fld
add
into
lds
movs
ins
stc
xchg
or
loop
addr16
imul
cmp
(bad)
jne
retf
(bad)
addr16
push
repnz
pop
std
pop
pusha
fbld
sbb
ins
(bad)
movs
add
xor
pusha
pop
push
mov
jbe
ja
ja
loope
mov
cmps
xchg
pop
push
dec
push
and
out
push
dec
mov
xor
test
add
gs
ja
ss
push
and
movs
push
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
dec
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
dec
dec
push
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
std
test
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
add
sbb
mov
xchg
stos
lods
add
lahf
sar
pop
dec
movs
jp
add
shr
mov
sub
jp
or
pop
rol
mov
scas
daa
or
mov
enter
pop
jns
pop
mov
xor
push
sbb
cli
lods
out
retf
jnp
xor
mov
sti
mov
stos
fwait
ss
mov
call
mov
imul
mov
xlat
mov
jnp
inc
sub
jnp
iret
fisubr
sbb
cli
sahf
sbb
xchg
push
pop
mov
sti
cmps
jnp
mov
sti
xchg
pop
mov
add
dec
add
push
scas
fild
sub
add
push
mov
stos
mov
retf
cmps
inc
retf
mov
jnp
jp
mov
adc
mov
mov
stos
mov
sbb
and
mov
jnp
sbb
les
iret
cmp
mov
cmp
jmp
(bad)
retf
mov
rol
and
add
or
jo
sbb
adc
loope
mov
jmp
mov
sti
mov
push
mov
fild
stos
sbb
mov
stos
mov
cmp
mov
add
mov
imul
iret
imul
mov
jmp
push
sbb
imul
in
mov
loopne
cmps
jmp
sar
out
jmp
mov
sub
ret
mov
ins
add
and
adc
fadd
das
lods
xchg
cmp
ret
sub
dec
ret
mov
add
cld
scas
inc
loopne
xor
les
les
mov
call
les
ins
add
lods
add
lods
add
lock
out
or
xor
lds
mov
loopne
sub
(bad)
daa
int3
lds
add
push
jl
add
mov
out
js
and
jno
add
enter
(bad)
imul
mov
or
enter
jp
enter
xchg
jl
sahf
sbb
xchg
mov
movs
fmul
jge
mov
int3
leave
mov
mov
dec
ret
enter
mov
retf
adc
retf
int
int3
dec
cmp
xor
inc
rol
sub
mov
xchg
mov
int3
lods
pop
retf
add
add
pop
push
add
adc
ror
add
dec
leave
out
int
jl
jns
int
cmp
aam
int
mov
hlt
lods
into
fcmove
retf
xor
fnstcw
fcomp
in
mov
pushf
int
sbb
fcomp
jecxz
mov
sub
mov
sar
retf
adc
into
add
in
leave
add
mov
cmp
mov
iret
jp
add
(bad)
iret
mov
mov
cmp
and
add
or
xchg
jge
mov
sar
sar
rol
into
and
loop
add
stos
add
int
int
lock
int
sbb
add
rcr
sar
leave
xor
pop
int
in
mov
jmp
add
lods
aam
sbb
pop
sub
sti
cld
ror
(bad)
iret
js
dec
daa
cmp
ins
popf
xlat
cmp
retf
outs
lods
aam
lods
into
inc
or
add
sar
aad
pusha
into
cmp
push
aam
int
jae
shl
rol
retf
xchg
xlat
lods
shr
aad
int
ror
mov
fldenv
rcl
or
into
jbe
iret
xchg
cmp
cmp
or
pop
lock
jmp
fmul
int
(bad)
mov
shl
fcomp
(bad)
xor
fcomp
ror
int
std
fisubr
fcos
or
pop
pop
fcomip
cmp
rcr
loop
(bad)
out
popf
int
sbb
pop
dec
fistp
loopne
popf
fmul
popf
fnsave
fdivp
or
cmp
add
retf
loopne
mov
ds
retf
int
jg
aad
pop
iret
das
sub
mov
fdiv
ficomp
scas
loopne
int
lock
enter
pop
adc
loope
(bad)
jge
loope
sbb
cmc
cmp
aad
loopne
mov
sbb
shl
cmp
dec
sahf
loopne
sbb
inc
dec
loopne
dec
leave
adc
aad
or
cld
int
pop
mov
sbb
out
mov
push
fnstenv
rol
xlat
cmp
or
loopne
int
add
sub
fistp
adc
loope
int
ds
jecxz
ds
popf
rol
fst
pop
out
pop
loope
mov
stos
fmul
loop
out
jmp
(bad)
into
cmp
jmp
repnz
iret
pushf
fnstsw
into
loop
in
fsubrp
dec
jmp
push
jmp
cs
ins
ficomp
jmp
cmp
fist
xlat
(bad)
in
lods
jmp
mov
rcl
mov
lea
out
ds
fwait
out
loopne
mov
popa
scas
loopne
(bad)
fld
xlat
dec
into
out
or
movs
mov
cmp
mov
add
into
jmp
ds
xlat
jl
inc
cmp
sub
jbe
aad
fidiv
outs
out
pop
out
jl
hlt
cmp
and
cmp
add
jmp
add
add
mov
daa
jle
cli
push
int
dec
jmp
or
sar
test
pusha
loope
jle
das
aas
xlat
xor
fstp
(bad)
jle
xchg
mov
jbe
retf
xlat
test
loope
dec
loope
scas
in
inc
(bad)
sbb
into
pop
loopne
pop
rcl
aad
iret
retf
out
pop
in
sbb
repnz
dec
cmc
push
outs
into
pop
mov
cmp
fist
(bad)
outs
fild
cli
mov
dec
fsubrp
xchg
pop
out
mov
mov
add
lock
repnz
xor
idiv
clc
mov
add
xlat
jg
fcmovnu
(bad)
repnz
lock
xchg
iret
add
jmp
lahf
jecxz
mov
mov
in
add
stc
mov
neg
lahf
out
(bad)
hlt
call
int
iret
into
push
mov
mov
lock
stos
push
jo
stos
push
cmc
cmps
iret
fstp
das
in
sbb
xchg
jle
push
iret
in
psubsb
in
sahf
out
test
inc
mov
ret
mov
hlt
jmp
std
sub
iret
fsubrp
inc
outs
clc
out
mov
out
jmp
(bad)
out
mov
add
test
rol
jae
rcl
or
cwde
js
dec
imul
movs
enter
dec
cdq
js
mov
mov
adc
cdq
cmp
sbb
sub
fnstcw
jmp
or
sbb
mov
jmp
push
jnp
pop
pop
int3
sti
stos
lods
mov
jns
imul
sbb
sub
imul
popf
(bad)
retf
cs
cmp
dec
adc
sbb
or
imul
imul
push
call
cwde
sub
les
add
adc
sbb
lea
push
sub
xlat
cs
loop
or
xor
dec
or
leave
dec
xlat
push
fstp
mov
sub
in
movs
xor
test
adc
sti
stos
cs
sub
and
cmp
and
xchg
leave
inc
pop
cmp
sar
push
sub
push
ret
push
fiadd
xchg
fcom
mov
test
call
xchg
xor
push
or
dec
xchg
push
jne
or
push
push
clc
adc
fnsave
cmps
inc
test
or
push
pop
ja
mov
div
and
movs
mov
lods
(bad)
cld
arpl
mov
mov
ins
fcom
dec
pushf
push
movs
ret
fist
mov
inc
mov
adc
outs
and
cmc
pushf
outs
cld
add
lods
ja
or
add
pop
push
out
lea
push
test
repnz
dec
fst
mov
and
fnstenv
mov
retf
test
and
loopne
add
cmp
add
mov
xor
and
dec
loop
outs
inc
int3
inc
enter
xor
xchg
adc
jne
outs
push
pop
test
push
loopne
call
cmp
pop
pop
loopne
aad
pop
jb
sbb
imul
cmp
mov
daa
jnp
and
int
cwde
fidivr
cli
inc
and
inc
loopne
pushf
push
into
add
mov
or
mov
cli
push
arpl
mov
mov
aam
mov
xor
inc
imul
test
push
or
dec
outs
or
xchg
pop
lods
test
call
stos
loopne
jmp
mov
stos
jne
mov
stos
fild
push
pop
stos
xchg
cmps
lods
repz
cdq
and
push
and
push
mov
imul
jge
ficomp
pop
sub
push
ins
fs
lea
jns
cdq
mov
push
cmp
mov
dec
js
and
mov
sbb
popf
cmps
loop
xchg
mov
scas
int3
ret
and
daa
nop
mul
scas
mov
ret
mov
mov
sub
out
mov
icebp
outs
dec
das
(bad)
retf
inc
add
dec
in
jmp
lods
xor
mov
stc
add
enter
jmp
pop
int3
stos
add
or
inc
jne
dec
(bad)
and
repz
es
sbb
sub
or
fnstsw
out
or
(bad)
xlat
xor
mov
mov
xor
jae
push
or
pusha
xor
sahf
cmc
lods
push
push
sbb
call
dec
xor
pushf
mov
je
cmp
xor
mov
or
inc
loopne
jecxz
aaa
into
mov
mov
sar
dec
cmp
(bad)
ror
in
mov
movs
daa
dec
mov
mov
jp
jo
lea
scas
fdivp
loop
loop
fistp
sbb
nop
sub
mov
ds
dec
adc
xor
xor
xchg
push
jo
cmp
fldcw
out
push
loope
add
mov
push
push
jp
jae
sbb
imul
pusha
(bad)
pop
cmps
inc
rol
arpl
mov
(bad)
clc
add
jb
mov
sub
(bad)
loopne
js
mov
in
stc
fwait
sahf
leave
jo
mov
xor
sbb
retf
std
(bad)
jo
mov
and
mov
push
pop
or
push
je
aam
aad
cwde
mov
in
pushf
jmp
out
test
jl
adc
pop
mov
je
call
mov
pop
cwde
sahf
and
js
lods
ror
jnp
mov
ret
ins
push
mov
sub
pop
rcr
icebp
jle
je
sbb
mov
ins
arpl
cli
sub
dec
pop
bnd
nop
add
je
or
mov
inc
mov
out
in
mov
fs
ja
test
add
jmp
xchg
(bad)
jae
or
dec
xor
push
sbb
xor
call
cdq
dec
push
sub
pop
sub
sub
cmp
out
xor
test
sub
mov
cwde
(bad)
ins
sbb
sub
adc
rcl
jmp
pushf
pop
ins
out
fist
xor
and
push
into
cwde
movs
inc
fild
inc
cmp
inc
mov
jo
daa
cmp
(bad)
push
sahf
mov
push
rcl
mov
add
jmp
mov
mov
cmp
push
movs
mov
and
jmp
add
icebp
add
adc
xchg
sti
in
test
cdq
mov
cmps
adc
stos
sub
in
cmps
add
pusha
or
pop
enter
test
hlt
push
test
adc
aad
push
lods
(bad)
out
sahf
lock
fidivr
ret
cmp
mov
aad
test
sub
xchg
leave
dec
repz
and
mov
je
and
push
cmpxchg
dec
(bad)
aad
push
lods
mov
rcl
mov
daa
cwde
nop
mov
jne
repz
leave
pop
adc
pop
fst
pop
push
jmp
add
pop
pop
xor
lds
jb
fcmovnu
nop
inc
xchg
stos
int3
lds
jae
jmp
retf
mov
or
mov
stc
mov
mov
(bad)
jmp
jge
adc
xor
aam
ret
adc
push
mov
sbb
pop
arpl
mov
pop
pop
jne
sub
and
add
xor
lock
mov
inc
or
xchg
cmp
jo
pop
mov
sub
(bad)
mov
add
aaa
pop
(bad)
int
inc
adc
jns
jge
jo
test
or
push
shr
sub
push
dec
add
or
es
ror
fs
scas
dec
or
mov
repnz
aas
rcr
out
pop
rol
pop
and
(bad)
outs
es
lea
sbb
(bad)
neg
cdq
scas
sbb
cmp
mov
adc
mov
xchg
sub
or
add
xor
int3
add
sbb
test
add
pop
add
imul
xor
add
pop
(bad)
or
mov
test
cmp
cmps
push
jae
dec
dec
fbstp
xor
add
outs
inc
or
pop
push
fstp
pop
clc
mov
sbb
in
sti
sbb
sbb
mov
arpl
push
rcr
jne
lods
add
and
push
mov
fnstcw
sahf
mov
ja
fucomp
xor
repz
pop
cdq
retf
mov
mov
fwait
pop
test
lahf
sti
(bad)
rol
cmp
jl
(bad)
(bad)
mov
pop
dec
jmp
(bad)
(bad)
add
scas
jmp
loope
push
mov
and
pusha
loopne
ss
lods
in
jge
jmp
movs
clc
xchg
sub
pop
fistp
hlt
(bad)
ja
in
or
add
repz
loopne
inc
mov
leave
jl
and
(bad)
adc
in
outs
mov
out
xor
punpcklbw
jle
bnd
xchg
mov
inc
std
jmp
cmp
push
int
shl
fucomp
stc
ds
xor
pusha
or
xor
pop
ja
fild
mov
jbe
lahf
mov
add
in
xor
jp
cmp
out
imul
je
mov
or
rol
dec
pop
loop
inc
mov
fisttp
psllw
jl
cdq
scas
cmc
lds
cmp
in
out
jbe
imul
sub
out
cdq
jne
out
ds
dec
push
cwde
ja
dec
xor
fcom
gs
adc
fsub
loope
mov
adc
mov
loopne
jmp
jae
hlt
test
pop
or
fild
fnstsw
lahf
cmp
mov
mov
call
pop
pop
jmp
popa
push
nop
cmp
data16
jae
push
and
pop
out
jg
dec
mov
add
inc
add
popa
sub
or
sbb
sub
nop
pop
jno
ja
push
inc
jnp
ja
mov
add
and
sub
jbe
pop
jle
xor
sar
call
jle
add
js
sub
cmp
bound
and
out
movs
mov
clc
xlat
jle
xlat
pop
lock
(bad)
xchg
cmps
je
jo
scas
pop
and
js
in
ja
xchg
dec
jl
xchg
jbe
fsub
inc
or
add
sbb
cmp
(bad)
imul
inc
add
add
clc
add
and
jne
fadd
pop
jne
push
dec
adc
jo
ret
adc
xchg
jns
call
test
add
inc
xchg
xchg
mov
sub
add
dec
or
mov
pop
data16
test
and
xchg
pop
add
test
jg
inc
dec
mov
xchg
jge
js
mov
add
or
xchg
sub
push
aaa
adc
lods
enter
mov
pop
test
inc
jl
dec
push
jno
test
jg
or
mov
cwde
jne
enter
add
adc
js
push
out
pop
mov
sbb
cmp
xchg
mov
xchg
xchg
pop
add
fst
mov
lock
push
lea
daa
add
pop
jne
push
and
push
inc
or
dec
xchg
and
fisttp
push
jbe
adc
pop
xor
push
pop
push
push
or
sbb
adc
adc
and
jbe
cmp
cmp
call
cmp
inc
lea
jo
cmp
xchg
inc
cwde
jbe
cmp
add
js
push
pop
nop
cmps
and
inc
mov
sub
cwde
cwde
imul
cmp
cmps
nop
mov
jo
or
imul
jno
(bad)
cmp
leave
xchg
xchg
pop
xchg
ins
push
jns
enter
call
pop
pop
xchg
dec
mov
lock
call
adc
sbb
xchg
sti
xlat
add
test
jmp
das
mov
out
jnp
cmps
add
cmp
pop
or
pushf
push
xchg
xlat
leave
add
aaa
adc
xchg
xchg
mov
cmp
inc
fldcw
leave
sahf
adc
cwde
fwait
dec
xchg
and
call
add
ja
mov
fwait
sub
js
pop
jne
pop
xor
xchg
je
leave
jbe
cdq
xchg
inc
sbb
mov
xor
(bad)
(bad)
es
in
mov
(bad)
push
xchg
sbb
inc
or
mov
jg
fwait
sbb
mov
dec
pushf
addr16
lahf
inc
pop
mov
ja
dec
jns
scas
pop
mov
sub
stc
ja
sbb
or
mov
jl
test
mov
inc
and
fdivrp
xchg
addr16
cwde
pop
or
test
into
sbb
mov
mov
mov
xchg
sbb
inc
pop
xchg
cmp
mov
push
xchg
and
adc
xchg
adc
mov
enter
push
(bad)
stc
jne
adc
leave
mov
cmp
xchg
mov
inc
dec
xchg
push
mov
mov
pop
or
or
mov
fidivr
or
push
xchg
arpl
sar
out
add
inc
or
mov
test
ins
sub
dec
or
stos
jno
xchg
in
xchg
scas
push
ss
test
mov
leave
(bad)
xchg
hlt
pop
popf
xor
sahf
pop
add
push
es
sbb
pop
rcl
stos
rcr
or
test
pop
jo
adc
stos
mov
add
stos
sbb
mov
cmps
mov
xchg
mov
test
sbb
sub
retf
sub
test
dec
pop
xchg
mov
movs
inc
or
imul
int3
pop
mov
pop
sahf
pop
pop
test
sub
pop
fwait
repz
xchg
mov
mov
js
push
pusha
mov
stc
mov
fimul
sub
call
lods
or
jp
jns
mov
dec
lods
or
push
cmp
mov
mov
add
xchg
in
retf
dec
test
inc
xchg
dec
add
xchg
dec
mov
dec
inc
in
sti
jp
inc
pop
mov
jo
inc
jo
jge
xchg
push
leave
mov
cmp
cmp
jp
mov
mov
jnp
test
mov
leave
xchg
retf
sti
mov
sub
add
or
mov
retf
xchg
cdq
mov
mov
mov
sti
mov
pop
cmps
test
mov
mov
shr
or
mov
fwait
test
mov
mov
cmp
sti
mov
cdq
shr
ror
fisubr
fld
sbb
es
dec
mov
sub
xchg
sti
mov
push
push
aad
mov
shr
add
mov
or
jg
xchg
inc
loopne
and
add
xchg
or
arpl
xor
adc
xchg
js
ret
stos
dec
in
mov
sti
cli
mov
dec
xchg
ss
or
jl
adc
ror
shl
neg
lds
mov
dec
mov
pop
add
stos
mov
pop
mov
inc
add
dec
add
ret
xchg
cmp
or
mov
mov
movs
sti
mov
mov
mov
cmp
fwait
mov
fld
lock
les
mov
lods
mov
int3
leave
out
retf
add
test
jns
lods
in
mov
mov
out
mov
retf
xchg
adc
mov
cld
cmps
sub
retf
add
mov
mov
inc
lods
mov
pushf
lds
rol
or
or
retf
mov
retf
mov
sbb
mov
or
pop
in
mov
mov
lods
out
lods
int
sti
mov
or
jp
into
sti
or
mov
(bad)
scas
mov
popa
mov
xchg
into
popa
or
int3
mov
sbb
push
sti
lds
into
mov
(bad)
fisubr
cmp
add
mov
add
loope
iret
add
call
cld
add
rcl
mov
mov
add
pop
leave
scas
mov
and
mov
enter
cdq
ins
shl
lods
rcl
(bad)
call
sub
iret
jp
inc
pop
into
cmp
aam
stos
mov
jl
stos
sub
lahf
dec
(bad)
mov
mov
in
retf
mov
ins
aad
std
retf
aad
cld
leave
push
(bad)
(bad)
pop
popf
leave
adc
mov
pop
shl
retf
pop
jl
ficomp
adc
aad
ins
ror
ret
ds
into
ficomp
jbe
fst
xchg
mov
mov
add
xor
inc
lock
dec
aad
jl
add
shr
aad
pop
xlat
jae
mov
lods
(bad)
xor
loop
aad
mov
je
ficom
aam
(bad)
fld
fcomp
fstp
mov
mov
(bad)
call
aad
int3
retf
fld
(bad)
(bad)
mov
and
fisttp
(bad)
ins
fcomp
dec
aad
std
ror
ffreep
int3
fist
mov
cdq
sbb
and
aad
cli
(bad)
dec
test
std
fldcw
retf
xlat
scas
pop
fmul
push
mov
dec
loope
sub
int
shl
jmp
cmp
loopne
sub
sub
jecxz
or
pop
fst
xor
in
xlat
retf
sbb
(bad)
out
dec
loop
sbb
int
jecxz
outs
jecxz
out
fcom
jecxz
retf
ffreep
in
in
out
(bad)
cmp
adc
in
jle
pop
push
loope
outs
rcl
in
(bad)
in
cld
aam
ins
xlat
inc
sbb
test
lds
push
scas
in
mov
pop
out
xlat
xchg
ins
(bad)
fist
aad
ins
fsubr
ds
jge
mov
xor
into
lea
mov
lea
add
jecxz
push
arpl
jl
(bad)
(bad)
(bad)
fisttp
loope
sahf
leave
mov
fcom
out
outs
out
scas
loop
outs
loopne
dec
fadd
jle
scas
lods
(bad)
scas
fst
mov
scas
push
outs
jmp
(bad)
fist
out
dec
loope
cs
sahf
fld
jmp
into
loope
dec
in
outs
in
ins
shl
popa
(bad)
jmp
std
(bad)
out
pop
loop
sahf
jecxz
lods
rol
out
popf
mov
loopne
ds
xchg
scas
jmp
or
fmul
jmp
out
in
mov
in
mov
bound
call
or
aas
outs
in
push
pop
push
adc
or
add
push
out
mov
icebp
pop
pushf
out
pop
add
icebp
adc
outs
sub
sbb
jmp
call
jg
es
out
push
aam
mov
mov
fiadd
iret
icebp
cs
out
jecxz
jmp
scas
push
in
add
xor
icebp
(bad)
outs
out
jg
lods
out
out
std
repz
in
dec
mov
xor
rcl
jmp
das
hlt
dec
lahf
out
(bad)
in
iret
hlt
in
in
lahf
icebp
test
neg
push
cmc
pop
inc
hlt
push
outs
call
push
out
outs
repnz
jo
cwde
std
out
push
cmc
lods
lods
test
or
and
push
mov
js
loope
sbb
enter
(bad)
mov
dec
stc
daa
iret
repz
iret
repnz
ins
stc
sbb
cmc
movs
das
hlt
sar
das
repz
repz
(bad)
repz
repz
outs
aad
outs
in
mov
clc
jo
cli
sub
ds
clc
mov
xchg
lahf
test
ds
cmc
(bad)
pop
cli
xchg
jecxz
out
cld
add
dec
(bad)
jmp
in
in
outs
repnz
cs
sub
cld
or
sub
js
call
push
sti
(bad)
fdivp
retf
stos
(bad)
jns
repnz
iret
repnz
dec
cld
add
repnz
fdivrp
rcr
push
invd
dec
add
add
test
xchg
pop
add
test
sbb
xchg
push
xchg
or
sub
xchg
popf
cwde
mov
pop
push
call
mov
xchg
test
xchg
fwait
mov
sbb
add
mov
xchg
jmp
(bad)
retf
xchg
lods
int
fadd
out
mov
inc
pop
add
push
stos
jg
adc
lods
inc
cmp
outs
push
sub
or
mov
dec
aad
sbb
adc
xchg
stc
pusha
jno
js
xchg
mov
dec
mov
pushf
jo
xchg
and
or
mov
test
cmp
cmps
test
call
lods
mov
imul
xchg
(bad)
jno
inc
push
mov
outs
xlat
xlat
dec
sti
adc
xor
pop
sar
pop
shl
repnz
int3
outs
ret
fisttp
inc
dec
push
and
adc
xchg
pop
mov
cmp
push
cdq
out
out
mov
outs
mov
inc
les
dec
xchg
add
idiv
add
or
retf
adc
(bad)
aam
scas
in
loop
stc
cli
sbb
cmp
jb
test
rcr
imul
adc
push
xor
push
xchg
pop
jge
aaa
mov
jnp
pop
jmp
xchg
sub
cmp
iret
jl
adc
inc
jecxz
jne
sbb
pusha
ins
mov
jle
cmps
adc
in
xchg
les
leave
mov
es
inc
lock
mov
add
and
pusha
clc
mov
sahf
jo
test
and
(bad)
cmp
jbe
push
test
mov
aaa
cdq
mov
jne
xchg
adc
xchg
sti
xor
(bad)
dec
pop
popa
and
scas
ja
xchg
out
test
retf
xchg
jb
sbb
mov
add
mov
sub
sub
and
adc
cmp
jb
adc
add
cmovo
lds
sbb
dec
add
mov
fisub
add
cdq
shl
add
mov
das
pop
mov
mov
mov
or
shr
dec
push
fcmovb
mov
inc
mov
stos
mov
(bad)
jmp
mov
mov
dec
sub
sub
xchg
add
push
sub
mov
test
inc
mov
inc
sub
mov
mov
movs
out
call
mov
cdq
fcomp
inc
popa
scas
mov
mov
stos
stos
sub
sub
add
cmp
fadd
inc
adc
push
mov
or
or
inc
mov
mov
pushf
sub
enter
call
popf
nop
fdivr
or
retf
ss
pushf
cmp
cmp
clc
jb
inc
xchg
lods
mov
sub
out
mov
jno
int
sti
rol
push
xchg
adc
push
enter
pop
pop
xor
inc
dec
shl
stos
popf
ins
xchg
fbld
arpl
sbb
cmp
sub
rcr
daa
scas
jne
js
and
je
clc
mov
adc
pop
jle
ror
and
(bad)
jns
pushf
imul
fiadd
push
mov
mul
add
clc
test
in
xor
mov
retf
lea
js
sub
lock
adc
adc
and
into
jbe
movs
cmp
fwait
imul
scas
mov
add
mov
dec
rcl
ds
jmp
sbb
push
sbb
sti
icebp
iret
movzx
jmp
(bad)
or
test
test
sbb
cmp
add
add
cmp
push
mov
jmp
lahf
idiv
add
fwait
inc
cli
and
mov
sbb
or
bound
add
or
popf
rcr
or
add
int3
cmp
call
mov
dec
sub
mov
xor
dec
cmp
or
jg
and
mov
add
mov
lods
xor
adc
shr
xor
xor
pop
aam
retf
ret
icebp
mov
and
xor
mov
add
arpl
cmps
inc
push
(bad)
adc
jg
mov
ins
je
cmc
push
clc
ret
aam
repnz
shr
pop
xor
nop
pop
int3
popa
sbb
test
xchg
cdq
mov
push
mov
xchg
mov
movs
sub
cli
repnz
mov
dec
dec
pop
mov
out
(bad)
pop
retf
pop
mov
cdq
lds
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
dec
loopne
and
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
push
and
loopne
cmp
push
nop
sahf
xor
add
test
adc
or
pop
icebp
cli
push
mov
jne
cmp
sar
and
push
xchg
add
pop
cmp
pusha
push
sbb
xchg
stos
pop
aas
sub
or
push
(bad)
mov
add
pop
mov
mov
push
fcmovu
test
inc
in
pop
push
sti
fcmovb
cmp
mov
or
ud2
push
mov
xchg
lods
push
sub
mov
dec
scas
adc
mov
daa
pusha
add
mul
mov
xchg
sbb
rcl
or
mov
pop
and
jb
dec
fdivr
dec
outs
je
retf
pop
out
jp
mov
xchg
sti
xlat
repnz
ja
fcomp
pop
icebp
cs
stos
jmp
jmp
mov
lea
nop
dec
cmp
pop
jl
or
cmc
mov
push
dec
add
mov
mov
lods
lock
lods
pop
xchg
cmps
fsubr
jg
pop
sbb
mov
add
lods
add
sub
les
adc
pop
or
js
push
push
das
jns
jo
cmc
not
mov
cmp
push
add
add
dec
call
loop
fsub
mov
mov
adc
mov
loop
dec
fdivr
dec
push
cmp
add
arpl
pusha
add
jae
inc
sahf
or
arpl
jmp
ror
lods
test
bound
dec
pop
lods
jmp
cmp
xchg
leave
imul
add
jl
jmp
jb
cmp
icebp
push
jns
loopne
sbb
pop
iret
addr16
dec
cld
rol
jbe
dec
sbb
pop
inc
xlat
cmp
ret
ins
outs
test
test
(bad)
fucomp
cmp
cmc
mov
xor
int3
jecxz
repnz
aaa
std
push
and
shl
dec
ins
dec
sbb
xchg
fwait
cld
addr16
scas
jne
(bad)
or
fld
cmc
scas
outs
xchg
(bad)
jl
adc
mov
xor
adc
je
mov
xchg
mov
(bad)
push
lods
jae
lods
(bad)
sar
rcr
sub
push
jl
sbb
xor
add
mov
fistp
test
push
in
jne
mov
jo
call
mov
popa
stos
jl
lods
push
stc
retf
bts
aas
xor
cld
push
popa
(bad)
call
int
xrelease
push
cmp
add
push
les
add
sbb
in
cmp
xor
jmp
lea
scas
outs
ficom
mov
cmps
sti
cli
out
rcr
ss
sub
sahf
(bad)
pop
lods
out
push
mul
or
out
sub
push
dec
and
xchg
pop
fisub
pop
pusha
mov
mov
or
repz
std
loop
push
cmc
fistp
mov
cdq
addr16
ret
mov
push
(bad)
cmp
out
test
cmps
(bad)
xor
or
fadd
out
ds
loopne
mov
aad
(bad)
repz
pop
jg
adc
jl
and
mov
jecxz
jmp
pop
add
outs
ins
mov
push
shl
jp
hlt
das
aaa
dec
maxps
xor
repnz
ins
movs
(bad)
jle
push
pop
cwde
pop
js
push
pop
sub
div
data16
out
jl
xlat
add
and
imul
push
pop
cmp
inc
add
push
push
bound
add
outs
pushf
mov
cmp
add
daa
jp
lock
(bad)
in
vhaddps
test
(bad)
adc
adc
jnp
js
add
fs
jnp
xlat
arpl
jl
inc
add
(bad)
pop
dec
ja
shl
jle
push
popa
or
test
imul
pop
jbe
call
test
test
jle
daa
and
imul
or
imul
je
push
add
sbb
dec
jp
pop
jg
xchg
pop
push
aas
mov
scas
cmps
jg
gs
daa
and
and
jo
push
mov
gs
and
xor
push
or
cwde
jae
cmc
xchg
mov
aaa
jnp
sbb
test
cmc
outs
adc
lea
inc
pop
jo
add
lods
mov
js
xchg
mov
scas
out
jo
add
pop
jl
ja
cmp
jnp
enter
stos
mov
mov
jge
ja
popa
pop
imul
jae
push
xchg
test
jns
js
adc
jno
pop
(bad)
out
push
mov
add
addr16
test
ins
sbb
pop
cmp
mov
jne
and
jno
pop
lea
cmp
jns
call
jae
jge
call
retf
push
jl
xchg
mov
out
outs
push
pop
add
imul
and
fld
and
jnp
outs
nop
mov
pop
or
pop
xchg
xchg
out
cmps
jg
lds
dec
add
mov
push
jbe
mov
or
cmc
ins
add
jp
push
ins
shl
test
mov
jbe
test
adc
pop
xchg
(bad)
call
mov
nop
mov
xchg
test
mov
push
adc
adc
xchg
xchg
add
or
xchg
xchg
test
mov
ins
pop
aaa
jbe
imul
jbe
cmp
mov
push
adc
fucomip
jl
fld
push
or
sar
or
ja
push
(bad)
dec
pusha
add
inc
cmps
jl
in
inc
mov
sub
clc
jb
xchg
outs
movs
inc
pop
mov
add
jg
ss
jbe
dec
pop
add
js
js
add
lock
test
mov
mov
leave
jno
aad
aad
jg
fnstenv
push
add
stc
push
cmc
mov
adc
in
lea
test
movs
and
call
inc
pusha
pusha
pop
fsub
sbb
pop
(bad)
leave
movs
pop
ffree
outs
dec
(bad)
nop
dec
mov
push
pop
jg
mov
gs
(bad)
jb
arpl
test
addr16
lahf
enter
es
dec
or
out
fst
out
addr16
jbe
push
(bad)
(bad)
xchg
addr16
jl
inc
sahf
adc
xor
mov
inc
push
cmp
mov
or
jp
add
add
call
push
dec
adc
inc
sub
movs
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
retf
add
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
push
push
push
xchg
xchg
xchg
ins
push
aam
aam
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
mov
int3
in
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
lods
scas
lods
and
and
jle
sub
sub
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
mov
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
jg
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
in
test
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
push
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
push
inc
cmps
jg
lods
add
or
push
and
add
jmp
mov
mov
cld
or
pop
mov
inc
add
mov
retf
add
scas
sub
cmps
out
xchg
jb
test
call
mov
and
pop
nop
mov
retf
mov
cli
lods
out
sbb
stos
mov
mov
sbb
mov
inc
stos
fwait
pusha
dec
movs
xor
mov
jmp
push
fwait
mov
sbb
sub
cmp
jmp
movs
jns
add
pop
loopne
pop
imul
dec
jmp
mov
pop
shl
add
or
fucomip
mov
sar
sub
sbb
or
dec
mov
pop
add
add
mov
sub
stos
mov
nop
mov
fwait
mov
dec
lods
mov
mov
sti
mov
jmp
lahf
stos
xchg
mov
jnp
xor
add
jo
retf
cmp
jnp
sbb
adc
add
or
cmp
mov
jmp
daa
nop
mov
mov
cmp
retf
add
jmp
or
cmp
mov
sub
ror
mov
push
lods
xchg
dec
ror
rol
mov
pop
mov
push
adc
ret
add
push
mov
stos
xchg
loopne
loope
mov
cmp
out
jmp
ret
cmp
ret
push
add
jl
sbb
stos
adc
mov
adc
fadd
aas
lods
xchg
add
cmp
mov
pop
lods
mov
add
cld
scas
sbb
mov
in
lds
add
add
mov
aaa
pusha
ret
pop
inc
add
sub
imul
inc
cld
mov
cmp
(bad)
aaa
sbb
cs
imul
mov
sbb
push
xor
loopne
cmp
mov
inc
add
mov
xor
mov
add
mov
lods
mov
push
retf
retf
leave
jp
mov
add
pop
retf
jp
retf
mov
fmul
ret
mov
vsubpd
mov
mov
int
sub
(bad)
pop
pop
int3
xor
int3
pop
ror
push
mov
pushf
leave
xchg
pushf
leave
mov
add
int
ins
retf
frndint
add
mov
pop
push
add
retf
iret
in
retf
cdq
pushf
leave
in
in
into
lock
fstp
loope
int3
jmp
retf
retf
or
call
mov
sub
call
retf
repnz
xchg
jge
dec
add
iret
cmp
adc
mov
shl
lea
mov
or
and
adc
sar
rol
popf
iret
sbb
int
retf
push
popf
into
clc
ins
shl
(bad)
shr
in
rol
cmp
add
ds
iret
loop
stos
in
rol
std
shl
iret
xor
icebp
jl
push
and
jge
xor
shl
sub
fs
scas
cmp
out
iret
or
dec
adc
cmp
(bad)
rol
(bad)
xlat
dec
(bad)
(bad)
push
jge
sub
aam
pop
aad
dec
into
jns
fdiv
iret
ror
xlat
jge
fdivr
ins
(bad)
jb
fstp
cmp
test
adc
aam
popf
fdivr
jge
out
xlat
jno
sar
dec
xlat
xor
jg
mov
fst
push
mov
mov
shr
add
add
sti
into
push
pop
rcr
sti
pop
(bad)
mov
fmul
xlat
adc
xchg
cmps
popf
shl
fidivr
aad
popf
fcom
xlat
mov
sub
shl
fistp
retf
js
aad
fst
adc
fistp
fild
scas
shl
(bad)
pushf
fld
rol
fyl2xp1
(bad)
fimul
mov
test
fcomp
add
dec
fucomip
jl
add
xlat
ret
in
retf
std
loopne
(bad)
into
mov
(bad)
(bad)
mov
loop
ds
pop
and
fstp
sbb
add
leave
dec
loopne
pop
xor
std
fnstcw
mov
adc
ror
outs
loopne
jl
adc
inc
push
aad
push
xlat
movs
mov
and
push
push
iret
lock
jecxz
dec
xlat
cld
mov
popa
cmp
cmc
sbb
retf
or
dec
mov
movs
lods
loop
pop
fistp
jecxz
outs
sar
into
inc
or
adc
aam
loope
pushf
add
iret
push
mov
xor
dec
push
(bad)
sbb
pusha
push
jmp
push
fnstcw
fst
scas
out
mov
mov
fstp
pop
fcomip
std
out
cld
loop
loopne
xchg
sahf
add
jo
daa
out
fnstcw
jmp
or
cmp
aam
std
in
sub
mov
out
push
call
int
scas
(bad)
jmp
dec
call
mov
in
push
shl
in
jle
push
mov
jp
aam
mov
hlt
dec
jmp
cmp
jo
fisttp
jmp
mov
push
dec
stos
dec
sbb
mov
mov
in
lahf
jmp
out
out
jmp
into
cmc
jl
cmp
add
mov
push
inc
stos
pop
lock
loop
mov
jg
icebp
mov
add
(bad)
xlat
fmul
fneni(8087
push
into
or
sbb
das
dec
in
sbb
add
out
clc
scas
call
pop
lock
add
fsubr
pop
cs
push
into
and
fstp
(bad)
scas
out
lds
jmp
jne
in
(bad)
push
(bad)
out
(bad)
loope
mov
and
(bad)
jl
sahf
dec
repz
jp
repz
jle
xor
pusha
mov
jo
(bad)
fdiv
div
dec
jg
add
lods
push
test
xlat
add
add
xor
jg
xchg
(bad)
fwait
cs
push
into
clc
mov
add
loopne
lahf
int
shr
adc
imul
repnz
mov
jmp
mov
cmp
out
sahf
out
fsubrp
sub
les
test
mov
jmp
loope
repz
in
out
mov
sti
add
sti
mov
sar
jg
xor
sahf
out
stc
sti
jl
fstp
out
pop
retf
test
cli
(bad)
sub
lods
lahf
cld
fimul
ror
out
out
mov
out
cld
gs
(bad)
pop
(bad)
call
retf
and
test
mov
inc
test
nop
mov
xchg
mov
js
call
sub
shl
mov
jns
rcr
call
dec
cdq
jns
mov
sub
cdq
dec
sbb
sub
pop
dec
mov
or
mov
mov
in
jmp
ins
into
int
int
or
mov
outs
imul
popf
sub
ins
xchg
cmp
mov
jp
in
sbb
jp
cwde
int
sbb
cli
lds
jl
xchg
sbb
and
add
in
sub
mov
bound
and
lea
rol
mov
jne
test
sub
mov
lahf
pop
jg
mov
mov
paddusb
xlat
sahf
push
lods
xor
je
(bad)
(bad)
dec
mov
push
xchg
sub
jmp
jl
adc
mov
sub
push
imul
arpl
addr16
into
dec
in
scas
jmp
fisttp
xor
lea
sub
mov
and
cmps
push
and
retf
pushf
test
mov
test
aaa
stos
and
imul
retf
sub
dec
push
aaa
rcl
inc
inc
mov
or
pop
pop
ins
xchg
cli
xlat
int3
retf
leave
jae
pop
into
pushf
(bad)
mov
(bad)
push
dec
jmp
dec
push
aaa
outs
imul
mov
jecxz
mov
cwde
addr16
jg
test
cmp
xchg
outs
aad
aaa
js
sahf
adc
fst
hlt
pop
and
xor
push
stos
cld
ret
(bad)
push
inc
or
cld
sbb
adc
lds
inc
gs
or
and
icebp
push
out
jbe
test
or
jg
lods
push
sbb
xor
dec
push
addr16
and
mov
inc
cmc
push
mov
ror
pop
push
sbb
aaa
lea
push
xor
bound
sub
int
and
pop
(bad)
bound
dec
in
dec
push
pop
cmps
cwde
xor
push
test
xchg
out
rcr
dec
scas
jns
mov
mov
(bad)
push
mov
loop
outs
dec
xchg
pop
lea
dec
xor
int
mov
pop
xor
push
sbb
cmps
push
test
sub
clc
lods
and
pop
or
mov
retf
mov
mov
into
xor
jns
ds
sbb
push
push
cwde
icebp
or
fstp
mov
ss
ins
mov
mov
(bad)
sbb
cs
and
or
adc
dec
js
popa
jno
or
(bad)
out
sub
mov
xor
fwait
out
cmps
pop
push
or
les
jnp
jge
(bad)
mov
push
retf
outs
push
das
dec
sbb
add
out
(bad)
mov
sbb
int3
jae
das
iret
test
mov
sub
outs
mov
stc
loope
jae
push
push
jne
cmp
push
sbb
mov
stos
mov
(bad)
imul
dec
shr
ins
dec
aam
jmp
or
outs
push
faddp
das
sti
int3
out
adc
fcomp
pop
or
sbb
lea
aaa
ficom
jmp
pop
das
std
idiv
push
fistp
cmp
xor
fidiv
cli
in
mov
xor
mov
jb
fcom
push
and
cmps
das
out
xor
iret
dec
dec
cs
mov
jg
ins
mov
mov
mov
jge
imul
shl
mov
mov
scas
inc
iret
outs
adc
neg
sbb
dec
icebp
imul
out
(bad)
pop
sub
aad
xor
mov
cmp
dec
inc
adc
adc
pusha
std
dec
push
inc
int3
lds
and
sbb
add
sbb
dec
(bad)
ss
ins
mov
push
dec
xchg
inc
into
mov
ja
inc
pusha
std
xchg
out
xchg
or
sbb
jbe
ss
and
mov
cmp
adc
cmp
inc
addr16
repz
sub
cwde
loopne
add
seta
and
pop
(bad)
ret
iret
jne
lock
std
inc
sub
(bad)
retf
call
mov
sbb
mov
push
push
xchg
pop
cmc
or
mov
sti
xor
inc
xor
mov
ret
jecxz
pop
daa
mov
sbb
in
or
mov
cli
adc
xor
push
lds
inc
mov
je
sub
ds
nop
jae
pop
call
loop
nop
pushf
lods
jecxz
pusha
jns
faddp
adc
lods
sbb
inc
jmp
xchg
jmp
arpl
in
jecxz
adc
add
xor
push
jne
retf
inc
scas
outs
xor
push
ins
imul
dec
jmp
mov
bound
cmps
add
(bad)
adc
outs
rol
inc
js
fnstcw
mov
inc
mov
cmps
icebp
add
call
and
and
mov
data16
loope
leave
push
retf
seto
and
fld
bound
adc
jp
adc
cmps
cmp
add
push
jno
imul
stos
pop
enter
test
sub
ss
xchg
movs
or
add
ret
in
cmp
cs
out
(bad)
hlt
test
mov
xchg
movs
popf
mov
pop
lds
mov
pop
or
aad
jp
ja
xchg
sub
or
outs
jbe
movs
pop
push
inc
aam
jle
xchg
add
or
mov
lods
mov
jns
mov
std
daa
pop
cmp
(bad)
mov
mov
push
xor
or
sbb
js
fnstenv
inc
ins
mov
add
cmc
mov
xor
pop
fimul
mov
sub
adc
outs
xlat
call
and
pop
(bad)
pop
(bad)
sahf
push
lods
cmp
add
div
aad
enter
adc
lods
jnp
sti
aam
ins
push
or
jge
jne
sub
(bad)
div
xchg
fwait
pop
sbb
out
je
sub
ret
mov
scas
jmp
mov
add
push
jae
inc
js
jg
ins
(bad)
lock
scas
out
inc
jno
pop
pushf
faddp
(bad)
(bad)
xchg
ror
fs
cmp
add
out
add
xchg
aaa
(bad)
sbb
je
inc
push
sbb
aas
push
xor
sar
sbb
pop
retf
imul
mov
nop
movs
push
in
and
dec
push
repz
cmp
add
imul
into
jo
fcmovne
add
movs
pusha
leave
pop
push
fidivr
aas
push
mov
pop
mov
clc
es
lds
dec
addr16
ss
mov
inc
adc
int3
addr16
shl
lock
into
mov
jne
sbb
or
mov
or
call
cmps
jo
arpl
push
adc
dec
int
fcomp
cmp
or
imul
shl
push
jb
cmp
fs
cmp
scas
ficom
xchg
ins
inc
cmp
push
ds
in
in
add
shr
dec
add
imul
nop
retf
mov
frstor
pop
ins
push
sbb
xchg
jbe
call
fdivp
into
xor
(bad)
(bad)
out
jl
cli
retf
jbe
sub
add
mov
mov
addr16
pusha
or
out
mov
imul
fdivr
es
jecxz
or
dec
into
jb
nop
jl
daa
mov
aam
jnp
fnsave
jns
jne
ins
mov
inc
push
mov
xor
cmp
(bad)
iret
adc
rcr
push
jns
push
mov
sub
adc
or
mov
int
ds
neg
inc
mov
jmp
rcr
in
outs
ja
mov
ss
sahf
je
adc
pop
sbb
dec
div
inc
sti
push
jge
ja
fcmovnu
fidiv
loop
pop
sub
mov
mov
test
lock
pushf
mov
cmp
adc
fstp
inc
test
jge
sub
clc
jmp
or
jmp
retf
into
hlt
mov
mov
loopne
pushf
or
mov
mov
ja
rol
pusha
push
fsubr
dec
xor
pop
cmp
sti
fld
push
addr16
and
adc
sahf
mov
(bad)
repz
cld
(bad)
fdivr
clc
out
(bad)
std
pop
pop
add
(bad)
jl
ja
lea
mov
jbe
cmps
ja
xchg
js
fdivr
inc
jnp
mov
or
jns
mov
push
addr16
daa
jbe
out
out
pop
dec
mov
mov
jle
addr16
cmp
add
mov
into
inc
jl
pop
popa
add
je
pop
ja
shl
jg
ja
adc
adc
sub
xchg
mov
dec
mov
dec
and
push
and
push
cmps
jp
dec
test
pop
out
add
add
add
pusha
jge
out
push
mov
jmp
pop
fadd
ja
(bad)
fdivr
call
sub
inc
inc
add
rol
lock
jae
test
add
test
mov
dec
inc
xor
cmp
mov
xchg
inc
test
cmps
jb
and
test
xchg
xchg
cmp
cwde
test
xchg
test
mov
imul
xor
mov
mov
xchg
nop
test
or
xor
add
ja
jbe
add
inc
add
pusha
xor
pop
jge
clc
jl
xchg
add
add
mov
mov
sbb
sbb
dec
lds
clc
test
push
mov
mov
sbb
pop
enter
add
cld
call
pop
mov
fsubr
and
outs
add
(bad)
add
add
repz
call
sub
jbe
push
shl
lea
jno
call
dec
or
jl
xor
js
sub
xchg
lds
repz
adc
je
pop
xchg
fmul
jl
mov
fld
nop
imul
mov
add
fst
out
mov
(bad)
sbb
cld
(bad)
jg
leave
add
js
icebp
cmp
adc
xchg
nop
fld
cdq
xchg
mov
mov
jl
mov
out
test
inc
stc
sbb
dec
dec
or
imul
mov
mov
or
je
xlat
mov
aaa
xchg
fstp
loope
mov
xchg
inc
dec
test
stc
sbb
and
xchg
lds
je
pop
test
(bad)
cwde
xchg
rol
add
scas
stc
mov
pop
pop
mov
enter
mov
lea
lea
xchg
std
cmp
daa
lea
xchg
pop
inc
enter
xchg
lea
and
xchg
(bad)
jb
jmp
je
jne
leave
popf
fs
mov
add
pushf
cld
sar
ja
inc
push
xchg
xchg
dec
test
xchg
daa
neg
imul
add
add
add
fimul
add
pop
inc
cmp
leave
stc
xchg
pop
dec
jae
jns
and
jae
cmp
ins
pop
imul
sahf
mov
ficomp
lds
sbb
imul
cdq
xchg
xor
add
xor
loopne
fmul
nop
ins
mov
cmp
(bad)
mov
mov
call
push
jns
adc
jg
xchg
jo
and
cmp
sub
cmp
test
cmp
dec
cmps
pop
leave
cdq
xor
xchg
dec
add
fwait
je
add
sar
sbb
pop
sbb
xchg
sbb
ja
cdq
inc
test
mov
movs
pop
mov
and
xchg
adc
call
repnz
add
push
mov
jne
test
cdq
test
or
rol
inc
or
mov
leave
add
jmp
xchg
mov
test
cmp
mov
movs
call
xchg
fwait
cmp
sbb
call
xchg
sbb
sub
lods
rcr
popf
adc
stos
pop
or
jg
stos
add
retf
(bad)
lods
jle
pop
xor
popf
pop
stos
mov
xchg
pop
stos
lahf
xor
mov
cmps
int
lods
cwde
sub
mov
sbb
or
fsubr
stc
pop
cmps
sbb
pushf
pop
jp
nop
pop
lods
and
movs
xchg
das
sbb
jmp
sbb
xchg
mov
(bad)
test
dec
push
mov
cmp
mov
les
test
sti
test
test
fs
scas
xor
test
pop
xchg
std
test
mov
mov
push
xor
scas
adc
mov
mov
add
mov
or
push
cmps
pop
push
pop
and
pop
xchg
neg
scas
scas
sbb
sbb
repz
mov
mov
jmp
xchg
enter
or
or
sub
mov
jnp
jmp
mov
fstp
jmp
pop
cmp
sbb
mov
xchg
jns
sar
mov
jmp
call
cwde
mov
fwait
or
rcr
xchg
ja
stos
cmp
dec
mov
dec
test
sub
imul
jle
jns
mov
mov
sti
mov
lds
add
mov
pop
mov
pop
mov
pop
mov
loopne
sahf
jbe
adc
mov
push
(bad)
mov
or
push
add
ror
cmps
inc
or
dec
mov
pushf
movs
sbb
in
jne
jae
sub
mov
mov
ror
cmp
in
mov
ins
mov
or
add
mov
dec
(bad)
(bad)
pop
jns
pop
or
or
sbb
push
dec
add
mov
jmp
mov
cmps
test
stos
shr
sbb
sub
outs
lods
mov
mov
enter
sbb
adc
std
sub
imul
outs
jp
jne
xchg
jns
stos
jnp
or
inc
test
retf
lods
scas
ja
rcl
mov
stos
jle
jmp
jecxz
mov
leave
das
test
aaa
jmp
add
ror
cmp
mov
xchg
jne
ret
or
les
mov
imul
in
add
leave
cmps
sub
imul
lods
pop
(bad)
dec
stos
scas
(bad)
cmp
lods
fld
cmp
dec
int3
mov
retf
pop
jl
cmps
or
or
xchg
adc
mov
mov
fcmovne
jmp
cld
xchg
mov
imul
mov
sub
inc
jl
int3
or
cmps
mov
neg
sub
push
jmp
iret
in
lds
add
nop
or
adc
icebp
sub
sti
pop
mov
mov
dec
add
or
pop
int
sbb
(bad)
lods
scas
ins
cdq
retf
mov
or
sub
rol
cmp
(bad)
lods
mov
std
(bad)
pop
lods
mov
cmp
paddusb
sub
leave
iret
pop
xchg
in
lods
iret
add
or
lea
pushf
iret
leave
mov
ds
xchg
cmp
mov
mov
call
shl
or
mov
rol
sbb
cld
mov
enter
sbb
(bad)
cmp
retf
mov
rcr
mov
and
int
ja
mov
lods
int
jl
mov
shl
iret
mov
mov
lea
ins
mov
loopne
js
fadd
(bad)
mov
push
adc
fnstcw
sti
pushf
mov
mov
jne
xchg
cmp
fstp
rol
lods
int
std
rcl
pop
stos
aad
or
nop
cmp
cmp
(bad)
mov
mov
lods
xchg
sbb
stos
mov
mov
retf
cmp
(bad)
std
(bad)
mov
loopne
rol
fcomp
mov
ret
std
(bad)
icebp
dec
into
in
pop
rcl
rcr
les
or
(bad)
lods
mov
retf
pop
fcom
lods
(bad)
(bad)
jmp
hlt
sub
pop
in
mov
cmp
test
aam
dec
fld
imul
fprem
call
adc
iret
mov
pop
or
mov
fmulp
dec
loop
sub
mov
(bad)
jge
xchg
(bad)
xlat
out
cmp
and
sbb
mov
lea
mov
in
into
fcmovbe
fstp
fistp
add
loop
cmp
pushf
sub
inc
pop
fisubr
push
jecxz
in
(bad)
sahf
ficomp
outs
loop
int
les
aaa
popf
jecxz
scas
shl
iret
retf
fucom
sahf
in
loop
fsub
inc
jle
adc
jecxz
dec
fstp
fstp
rol
push
ins
or
add
aad
inc
jge
leave
ins
push
push
popa
sub
mov
xor
fiadd
call
dec
fisttp
loopne
pop
in
fcmovnbe
cmp
loop
std
in
ds
pop
(bad)
mov
call
push
call
sti
jmp
lods
loop
out
loopne
lods
aad
mov
cmps
mov
cmp
in
scas
scas
leave
mov
adc
mov
jmp
pop
jle
retf
mov
cmp
iret
sahf
loop
scas
jmp
scas
ds
add
or
or
mov
gs
jg
jecxz
jne
stc
mov
add
fnstsw
add
out
push
in
add
(bad)
(bad)
(bad)
jle
sbb
xchg
pop
fisttp
sub
dec
jecxz
ds
leave
(bad)
out
into
add
out
cmps
mov
xor
out
int3
sahf
repnz
in
mov
out
push
dec
out
push
jmp
push
in
(bad)
out
cwde
jle
inc
pop
fnsave
repz
loop
outs
loop
dec
loopne
jg
xor
call
dec
rcl
jg
sbb
out
dec
into
push
lahf
loope
fsubp
dec
pusha
jmp
(bad)
in
fdivp
cmp
call
jmp
repz
repnz
or
and
and
jnp
repz
test
cmc
dec
mov
arpl
js
repnz
ja
mov
pop
push
xchg
outs
mov
pop
repz
bnd
into
jg
idiv
in
cmc
ds
mov
loope
outs
div
call
mov
mov
clc
lods
mov
jno
div
repnz
leave
iret
rcr
jecxz
dec
std
jg
stc
popa
iret
sti
push
iret
rep
out
out
adc
clc
adc
in
aad
sti
test
stc
dec
(bad)
rol
out
mov
cld
xchg
iret
call
jg
and
push
pop
hlt
xchg
mov
mov
pop
sbb
or
add
add
sub
add
mov
pop
xchg
mov
sub
sub
mov
mov
fwait
stos
mov
xchg
mov
mov
cmps
les
scas
mov
(bad)
leave
stos
ret
cmps
mov
mov
mov
aad
sar
loop
ret
xchg
int3
xchg
nop
mov
mov
lods
in
xchg
call
mov
adc
dec
mov
xor
in
and
cs
les
sti
pop
lods
xchg
ss
jno
out
pusha
and
fnstenv
test
(bad)
sub
cmp
sub
bound
arpl
dec
and
add
cmc
pop
cmps
sub
fs
push
sbb
add
mov
mov
loop
sub
cmps
dec
sbb
sub
dec
repz
sbb
and
cmp
lea
dec
data16
int
mov
cmp
or
cwde
jo
xchg
adc
push
mov
jnp
push
pop
(bad)
leave
mov
sbb
sub
enter
cmps
jle
mov
ret
inc
mov
ja
fld
in
in
pusha
rcl
aaa
push
cmp
(bad)
int3
mov
mov
xor
dec
lock
retf
sub
bound
mov
pop
pop
daa
mov
pslld
lea
sbb
lods
fmul
dec
jnp
jne
dec
jecxz
ror
add
adc
sbb
mov
add
and
mov
mov
add
repz
pushf
add
add
cmp
xor
pop
adc
sbb
cmps
loop
enter
add
and
aaa
cmps
push
push
ja
pop
fst
in
dec
xchg
pop
movs
mov
arpl
and
pop
and
test
add
adc
cmp
rol
fmul
dec
cmps
popf
jne
shl
fwait
imul
inc
pushf
bswap
or
mov
sahf
jae
add
mov
sahf
cmp
movs
sub
icebp
daa
pop
jne
stc
add
aad
jmp
mov
jl
jl
call
imul
bound
out
sub
lahf
lods
(bad)
sub
test
cli
shr
loope
pusha
sub
xor
cli
ins
mov
push
stos
popa
mov
jo
(bad)
cmps
in
(bad)
mov
data16
jp
jmp
(bad)
fcmovb
xor
rol
mov
mov
jns
lea
pop
aas
pusha
and
add
arpl
les
ret
dec
inc
pushf
mov
adc
adc
dec
sbb
jmp
sti
xor
add
sub
(bad)
sbb
fild
adc
pop
call
xor
retf
rol
inc
dec
pop
adc
mov
inc
rcr
jecxz
xor
inc
dec
shl
push
cli
sbb
(bad)
call
sub
xor
mul
or
dec
or
cmc
adc
xor
stos
jmp
mov
push
clc
add
jae
cdq
xor
mov
xchg
mov
mov
popf
jmp
test
mov
ret
push
ds
stos
addr16
mov
xor
mov
mov
mov
cmp
stos
arpl
sti
icebp
sub
cmp
nop
mov
jnp
rcl
lahf
xor
push
and
push
test
cmp
cmc
jmp
(bad)
lods
jne
mov
sub
rcr
push
sbb
fstp
popf
cmp
mov
xor
mov
retf
inc
or
in
out
outs
mov
xchg
scas
das
adc
add
add
pop
test
jnp
cli
adc
mov
or
and
cwde
rcl
fs
pop
in
jbe
cmp
(bad)
sub
fldenv
rcr
ror
push
push
stos
add
pop
retf
mov
or
mov
pop
pop
add
adc
inc
int3
loope
test
mov
data16
mov
inc
inc
pop
add
mov
sbb
mov
in
xchg
call
ss
xor
dec
arpl
iret
call
xchg
fsubrp
xor
dec
mov
inc
xchg
fs
cmp
adc
pop
shl
into
addr16
fs
cmp
xchg
mov
or
lds
(bad)
xchg
or
test
cmp
rcl
cmp
adc
arpl
retf
adc
pop
cmp
pop
retf
ror
test
bound
repz
ret
inc
es
pop
dec
popa
cli
jb
mov
dec
int
pop
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
push
or
dec
sub
outs
push
rcr
lods
push
movs
imul
or
sbb
aam
jle
sub
out
retf
xchg
sbb
sbb
xchg
movs
ds
adc
mov
test
nop
rcl
add
sub
inc
mov
ss
lods
jp
lods
pop
xor
fdivr
lds
push
fwait
push
(bad)
(bad)
mov
nop
xchg
ins
adc
xlat
les
stos
pop
test
fcmovu
adc
mov
sub
add
repnz
and
popa
and
inc
mov
sub
push
in
ja
xchg
shl
add
pop
mov
and
(bad)
sbb
scas
fsubr
(bad)
cli
push
mov
scas
mov
mov
and
xchg
mov
adc
xlat
add
pop
mov
std
jmp
and
inc
movs
adc
ins
jnp
cmp
or
xlat
ret
scas
outs
mov
add
and
ins
jbe
sub
or
xchg
mov
loopne
jmp
nop
mov
ret
mov
mov
test
movhps
cmp
mov
imul
in
mov
jl
adc
popa
add
ds
adc
add
sar
enter
dec
jecxz
sub
jns
retf
gs
inc
das
mov
cli
fcomp
push
into
jmp
mov
fadd
sbb
addr16
(bad)
pop
into
cld
sbb
loope
xchg
fmul
adc
retf
pop
ja
jmp
pusha
or
fsubr
(bad)
leave
mov
mov
xor
out
aas
cdq
rcl
jae
dec
dec
pusha
adc
hlt
shl
jl
or
pop
shl
jnp
jmp
sbb
aam
jo
xchg
fsubr
add
ja
iret
fsubrp
cdq
(bad)
push
bound
int
adc
call
fidiv
test
sbb
mov
fisubr
outs
std
pop
mov
add
add
in
daa
clc
(bad)
out
dec
mov
pop
or
movs
mov
std
(bad)
jp
mov
xor
fnsave
jne
shl
push
hlt
stos
loope
push
clc
mov
dec
ins
jmp
fadd
js
in
pop
xor
and
xchg
add
pop
push
hlt
pop
fsub
mov
fsubr
lock
inc
push
repz
and
and
fidivr
xchg
mov
jl
and
fcom
fdivr
mov
mov
jb
cmp
cmp
mov
aas
scas
jmp
or
mov
aam
pop
add
les
jmp
out
mov
lahf
fsub
imul
add
mov
int3
scas
in
mov
outs
or
popa
das
aas
ds
dec
adc
std
bound
(bad)
addr16
js
pop
sbb
iret
pop
mov
out
ja
in
push
mov
add
mov
scas
shr
aas
jmp
push
push
(bad)
in
mov
jecxz
ret
add
jno
xchg
pop
clc
xor
cwde
icebp
call
dec
pop
jp
ret
out
icebp
test
sbb
jp
mov
in
clc
fld
add
lds
fstp
pop
in
pop
push
hlt
mov
ins
rol
lahf
popf
into
dec
xchg
jns
xchg
ins
cmps
out
jne
pop
call
xchg
push
shl
rol
jmp
add
pop
outs
mov
pop
cmp
jge
aaa
add
push
jne
lods
xchg
jb
mov
xchg
and
out
jp
adc
push
push
mov
enter
push
cmp
daa
in
addr16
push
mul
(bad)
jno
pop
jge
inc
add
out
dec
xchg
outs
aam
jg
ja
or
test
imul
pop
xchg
jmp
test
jle
inc
sub
imul
or
arpl
inc
out
sbb
jp
push
int3
cmps
jo
js
inc
(bad)
push
test
inc
and
and
jo
ss
test
neg
add
imul
mov
pop
mov
xor
push
cdq
push
jnp
cmp
movs
jb
adc
sahf
gs
xlat
imul
add
mov
jo
cwde
push
xchg
(bad)
push
pop
jo
jne
add
jl
xchg
arpl
adc
jnp
call
lods
xlat
push
movs
mov
mov
imul
jae
xchg
test
jns
cwde
imul
jno
aaa
(bad)
push
add
adc
stos
sub
cdq
(bad)
ins
sbb
pop
cmp
jbe
inc
mov
pop
(bad)
xchg
pop
aas
dec
ins
sbb
jge
inc
lea
jge
or
mov
int
jl
inc
jo
pop
add
imul
inc
ja
fbld
and
jnp
xchg
(bad)
ins
sbb
imul
jne
xchg
jnp
(bad)
jg
in
push
dec
add
mov
jbe
and
retf
push
sbb
ss
rol
outs
pop
jb
mov
enter
mov
(bad)
jmp
addr16
mov
xchg
enter
push
xchg
push
adc
push
mov
xchg
fs
jbe
or
test
push
ins
mov
jbe
pop
js
(bad)
xchg
push
xor
loope
jge
mov
pcmpeqd
fdiv
sbb
pusha
ja
ja
dec
add
bound
jl
lds
inc
ror
sbb
mov
cmps
pop
mov
add
jg
push
fs
call
add
das
cwde
fwait
add
(bad)
repnz
addr16
add
mov
shr
jno
cmc
pushf
xlat
and
lods
xchg
pop
pop
sbb
out
into
stc
pop
sub
out
lea
retf
loop
fwait
xor
sub
pusha
pop
clc
(bad)
clc
cmp
jns
retf
lds
out
dec
out
dec
test
xor
xchg
out
mov
(bad)
je
arpl
pop
xchg
pop
int3
or
mov
jle
lahf
retf
or
dec
sub
pop
imul
pop
dec
inc
pop
call
jbe
jbe
add
dec
pusha
sahf
adc
outs
push
pop
push
cmp
sahf
and
mov
sub
call
mov
mov
inc
dec
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
sub
cmp
pop
pop
or
add
call
fs
adc
scas
lods
test
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
cs
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
xor
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
int
add
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
loopne
push
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
lods
lock
test
mov
adc
scas
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
fld
or
cmp
dec
mov
imul
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
stos
mov
sub
mov
cmp
add
xor
mov
rol
mov
bound
add
sbb
dec
lods
xchg
imul
mov
mov
jmp
loopne
add
sbb
stos
mov
stos
add
stos
mov
or
cli
mov
fwait
mov
pop
rol
mov
pushf
mov
sub
xchg
sbb
sbb
mov
inc
loope
mov
sub
out
cli
add
ret
cmp
pushf
ret
cmp
and
adc
loopne
cmp
lods
les
or
inc
pop
ret
ret
lds
pusha
add
jp
push
or
out
stos
mov
fcmovnb
pop
mov
dec
jmp
push
pushf
(bad)
fmul
lds
add
mov
push
les
les
dec
in
mov
ret
jb
(bad)
mov
add
jl
jle
ja
fadd
cmp
(bad)
pop
mov
xor
loopne
cmp
mov
xor
inc
xor
sub
xchg
in
mov
jo
and
test
mov
adc
push
mov
dec
dec
leave
jp
mov
push
lds
retf
mov
pushf
retf
mov
mov
sbb
mov
mov
int3
cmc
jmp
imul
jp
add
retf
int3
mov
shr
mov
add
int
sub
(bad)
add
add
add
retf
iret
in
retf
xchg
pop
leave
in
in
into
lock
fstp
loope
int3
jmp
retf
retf
or
call
mov
in
retf
shl
in
retf
xchg
ins
add
iret
retf
cmp
adc
mov
shl
jp
xor
stos
int
mov
and
adc
sar
int
(bad)
sbb
push
ins
shr
mov
add
sar
pop
sar
in
rol
aam
pushf
int3
add
ss
iret
loop
stos
in
rol
std
shl
rol
iret
add
icebp
ins
add
and
ins
add
rol
(bad)
pop
push
(bad)
push
mov
and
sti
lods
iret
or
xlat
inc
sub
add
(bad)
push
sbb
push
sub
jns
ror
cld
fmul
int
xor
xlat
jg
fprem
ins
(bad)
jae
fcomp
dec
fadd
mov
and
xchg
pop
xlat
inc
pop
fadd
shl
sub
push
std
iret
test
mov
into
xchg
int
sub
(bad)
rcl
jns
fnstcw
fdiv
shr
fld
mov
out
int3
fild
fxch
cmp
test
retf
int
sub
test
fiadd
int
popf
retf
(bad)
pop
aam
fst
jp
iret
cwde
lods
fsub
fisttp
jbe
rol
into
mov
(bad)
mov
fstp
cs
add
shl
stc
mov
inc
sub
jnp
xlat
dec
jge
je
fst
jle
popa
sbb
neg
sbb
fdivr
fdivr
(bad)
ins
fadd
loope
int
or
loopne
or
mov
stos
jo
fcomp
mov
movs
sub
pop
jo
xor
iret
jne
fidivr
loopne
or
loope
sbb
mov
(bad)
scas
pushf
in
push
fsubr
xlat
mov
rcl
sub
mov
in
into
ficomp
popf
shl
ins
fisttp
shl
(bad)
fild
fsubr
(bad)
dec
in
sbb
and
in
dec
loope
or
setge
mov
fnstsw
fiadd
loope
cmp
cmp
frstor
out
mov
mov
stos
pop
iret
inc
push
out
cmp
repnz
fsub
out
pop
iret
inc
pop
add
pop
fnstsw
jle
cmps
or
adc
add
jo
es
iret
dec
fsubrp
ret
ins
out
cmp
push
outs
fcmovu
(bad)
out
cs
jle
jno
out
outs
jmp
sahf
retf
dec
(bad)
jmp
in
mov
test
jns
jmp
lods
rcl
jmp
std
loope
int3
jmp
popf
fidivr
mov
loope
push
out
popf
out
lods
pop
in
push
in
jle
jns
in
push
jmp
std
jle
mov
add
lods
add
jmp
in
out
jge
mov
out
add
sbb
jmp
add
sbb
stos
push
rol
jecxz
fmul
outs
fst
out
sbb
icebp
pop
lock
jmp
jle
add
loopne
fidiv
(bad)
in
mov
icebp
(bad)
(bad)
int
push
fsubr
sbb
add
add
mov
in
pop
iret
lods
dec
in
(bad)
out
sub
ror
push
in
inc
jg
fmul
push
push
jmp
jbe
jmp
pop
cmc
sahf
rcl
(bad)
loope
into
loopne
pop
int
sub
movs
push
icebp
fmul
jmp
(bad)
out
data16
in
ds
sahf
imul
jmp
std
repz
in
movs
push
clc
adc
add
hlt
pop
and
sub
repz
stc
xchg
mov
pop
outs
div
iret
not
out
int
ins
scas
jmp
jle
fldenv
out
repz
repz
test
cli
xchg
aas
clc
popf
(bad)
lods
mov
scas
dec
cmc
imul
out
sbb
add
retf
retf
std
sbb
xor
push
jle
mov
jmp
in
outs
cmc
cmp
push
psubq
mov
mov
retf
(bad)
sbb
jge
in
pop
in
repnz
clc
sub
inc
mov
test
clc
sbb
cmp
cmc
pusha
cwde
jmp
adc
or
js
or
mov
nop
jmp
mov
mov
jnp
js
test
pop
or
imul
retf
call
or
jge
or
shr
lods
mov
mov
ins
jge
jmp
(bad)
ds
subps
xor
add
lea
cmps
iret
xlat
xor
out
in
push
int3
and
push
out
pop
daa
inc
sahf
mov
and
test
inc
icebp
sti
(bad)
xchg
xchg
retf
dec
movs
cmps
adc
or
sub
xchg
sbb
rol
push
in
popa
div
std
aaa
lods
cwde
test
pop
fcmovne
in
das
sbb
fs
push
jb
dec
aad
pop
fcmovne
ins
int
adc
jge
sbb
mov
es
(bad)
std
sub
leave
add
jae
or
pop
jl
sub
sub
mov
dec
loope
mov
pop
xchg
mov
dec
mov
sub
xor
test
mov
adc
jbe
cmps
mov
rol
sub
or
cmps
mov
loop
cmp
ins
push
test
dec
xchg
push
fisub
pop
repz
jne
and
mov
fist
and
inc
imul
xchg
xor
push
mov
jne
stos
mov
aas
jge
adc
xlat
and
dec
test
test
sub
push
popf
mov
(bad)
jb
cs
push
jecxz
inc
rcl
ret
test
xchg
and
cmp
ret
enter
enter
xor
enter
xchg
xchg
and
stos
add
pushf
jp
xchg
mul
sbb
dec
outs
fistp
and
xchg
inc
dec
(bad)
mov
shr
ficom
inc
cdq
imul
je
or
push
imul
pop
add
cmps
imul
jno
(bad)
inc
dec
es
(bad)
int
jp
xchg
inc
es
pop
sbb
mov
jp
xchg
mov
jmp
lods
xchg
adc
jp
lahf
sahf
pop
add
push
arpl
out
outs
mov
data16
je
stc
call
popf
cmps
ficom
push
add
lods
mov
jg
and
jbe
mov
fst
cmp
xchg
mov
dec
loopne
out
lea
sub
adc
sbb
jns
das
xchg
xor
pop
jb
xchg
push
call
ret
(bad)
cld
rol
je
rcr
test
xor
push
popa
mov
scas
retf
scas
sub
cmp
cdq
pop
cmps
or
xor
cwde
ins
xchg
mov
push
jmp
out
cmps
data16
jae
sub
jns
lods
push
jecxz
je
adc
or
dec
popf
xchg
cmp
popf
mov
mov
jmp
mov
xchg
xor
push
mov
popa
idiv
dec
pusha
lahf
jnp
je
add
dec
dec
fld
das
outs
mov
(bad)
jmp
fistp
fist
sar
fisubr
pop
pop
push
hlt
adc
sar
inc
add
repz
aaa
sar
fcom
jg
fnsave
jnp
jbe
fidivr
and
xor
mov
fiadd
cmp
inc
test
mov
in
sub
pop
fcmovne
mov
cmp
sub
loope
outs
retf
add
xlat
(bad)
xor
in
cmps
or
std
ins
out
ficomp
in
sub
inc
fdiv
mov
mov
cmp
imul
shl
mov
int3
add
outs
mov
clc
fld
and
fxam
inc
dec
ror
mov
dec
xchg
sub
jmp
jae
mov
jb
ja
pop
or
sbb
mov
and
pop
sbb
out
ins
mov
ret
mov
or
lea
fwait
and
mov
and
sbb
jmp
dec
imul
loop
inc
enter
push
mov
mov
cmp
xchg
add
aaa
repnz
or
cwde
adc
fimul
pop
push
mov
(bad)
vmread
cmp
ret
add
push
jle
int3
les
inc
inc
mov
xchg
pop
lock
mov
dec
add
daa
leave
daa
dec
xor
dec
xchg
xchg
or
dec
mov
repz
cmp
jp
mov
inc
out
push
jle
(bad)
fistp
vmwrite
js
lea
and
loope
add
jmp
mov
gs
jns
push
inc
mov
sti
inc
out
push
(bad)
dec
movd
in
adc
cdq
mov
sub
pushf
jecxz
data16
leave
push
adc
pop
and
push
jb
xor
sub
ficomp
int3
sbb
lahf
push
pop
or
pop
pusha
jge
(bad)
fild
mov
scas
scas
or
test
movs
mov
pop
iret
nop
fsub
loope
aad
dec
inc
inc
mov
int3
int3
inc
add
es
push
retf
adc
sub
xor
add
push
(bad)
popa
adc
pop
icebp
test
or
pop
lds
fsub
push
cmp
test
outs
lods
imul
rol
fisttp
movs
in
pop
fdivr
(bad)
out
sbb
push
(bad)
call
call
mov
aad
mov
and
inc
repz
xchg
jle
add
mov
rcr
ins
dec
fistp
mov
add
rol
in
sub
add
sbb
sub
mov
mov
pop
mov
xchg
sub
aas
imul
inc
or
dec
add
cs
pop
jmp
jne
push
retf
call
test
jl
sbb
jb
cwde
dec
pop
les
test
cwde
in
cmp
(bad)
adc
(bad)
lods
outs
jno
cmp
push
sahf
mov
pop
mov
gs
aaa
cmp
add
out
in
add
add
add
mov
dec
ins
test
cmp
jb
mov
push
ins
stos
sub
or
inc
add
lock
jns
inc
mov
and
mov
repz
sub
push
xor
push
cmc
xor
or
repnz
das
push
gs
dec
sbb
add
cdq
mov
in
jmp
or
cmp
mov
scas
int
cs
mov
stos
retf
fistp
cmp
sbb
movs
jne
jmp
sub
retf
adc
add
adc
push
xchg
sbb
or
add
scas
call
(bad)
jmp
jo
inc
lea
jg
iret
pop
push
add
outs
fnsave
mov
xor
addr16
es
jne
jp
push
retf
jp
dec
lock
(bad)
rcl
adc
test
fstp
popa
data16
call
lea
addr16
aaa
xchg
imul
fwait
dec
pop
mov
jmp
add
mov
or
mov
mov
or
adc
test
lahf
ss
jl
fsub
cdq
div
stc
int3
mov
add
idiv
fwait
jl
sub
add
xchg
addr16
iret
mov
pop
mov
cmp
fild
mov
xchg
out
cmp
inc
sub
push
sahf
mov
add
xor
cmp
rcl
jo
and
fistp
push
shl
outs
sbb
mov
fsub
jmp
mov
sbb
leave
push
push
jae
add
cli
aam
in
outs
jg
mov
mov
adc
pop
je
stos
fsub
out
mov
(bad)
cmp
movs
push
jae
pop
jge
inc
cld
ins
cmp
popf
jl
rol
mov
cmp
jmp
or
les
retf
ror
fsubr
fidivr
or
out
jge
(bad)
out
test
repz
out
jg
sub
daa
mov
jmp
pushf
out
js
mov
add
pusha
std
in
pop
scas
stos
lahf
std
out
ja
or
rol
jne
jmp
jg
movs
jle
addr16
add
mov
xchg
jnp
jae
(bad)
jge
push
jnp
xlat
ja
inc
jbe
inc
jle
ss
pop
jl
xchg
jl
inc
jp
mov
gs
jnp
daa
ja
fdivr
pop
pop
dec
mov
retf
pop
pop
jg
jo
pop
mov
cmp
cdq
xchg
ja
sub
pop
jae
shl
mov
cdq
ja
pop
test
gs
jge
mov
jle
dec
ds
sub
test
pop
jl
daa
add
mov
pusha
mov
xchg
aaa
add
add
and
out
fs
jo
jge
xchg
xchg
jle
fdivr
inc
xchg
jae
cwde
and
add
rcr
add
jnp
cmps
cmp
ror
mov
ret
xchg
jg
add
jg
jbe
mov
cwde
sub
mov
dec
and
xlat
or
js
clc
push
xchg
mov
addr16
stos
cmps
cmp
test
std
test
mov
xlat
test
pop
mov
mov
add
test
cmp
test
push
inc
or
cmp
enter
add
mov
js
into
sub
pusha
mov
cmp
outs
inc
mov
add
cwde
add
sbb
add
or
test
nop
or
and
add
enter
add
dec
jo
mov
or
test
xchg
std
inc
nop
stc
xchg
aaa
lea
fs
pusha
add
xchg
sub
mov
add
pop
jbe
sbb
sbb
cmp
pop
xchg
pushf
pop
xchg
xchg
inc
test
jmp
mov
cmp
adc
cmp
js
std
jbe
repnz
or
pop
push
je
leave
and
inc
sar
outs
or
xchg
inc
fst
js
dec
ror
jns
daa
xchg
sub
test
or
fidiv
jge
enter
xchg
popa
pop
xchg
shr
xchg
xchg
xchg
shr
push
mov
cmp
jb
mov
jl
mov
sbb
xor
outs
das
mov
dec
xchg
stos
dec
jl
sub
daa
add
ror
imul
xchg
and
add
pop
xchg
ss
pop
and
cmps
enter
call
test
xchg
(bad)
test
retf
out
sbb
push
push
adc
popf
aaa
call
mov
movs
enter
xchg
or
sub
xlat
je
enter
jl
inc
xchg
sbb
nop
aas
cdq
lahf
ds
std
push
xchg
add
mov
cdq
in
cmp
mov
mov
sub
call
test
add
leave
xchg
pop
pop
je
mov
xchg
je
test
and
fwait
test
jmp
mov
xor
xchg
adc
lahf
(bad)
ja
dec
sbb
vmwrite
stc
mov
rcr
xchg
or
push
test
sbb
jmp
outs
cmp
xchg
pushf
mov
pop
js
movs
stc
xchg
sbb
dec
inc
xchg
das
sub
or
dec
cmp
push
nop
pop
test
cmp
popf
mov
jnp
pushf
mov
or
jge
retf
jmp
xchg
dec
test
jbe
xchg
ss
leave
dec
mov
call
cdq
inc
nop
mov
cmp
cmps
mov
aaa
sahf
xor
xchg
out
xchg
or
add
push
dec
mov
add
stos
call
test
stos
test
stos
add
mov
icebp
sbb
jns
leave
cmp
pop
mov
clc
movs
adc
pushf
cmp
push
inc
test
pop
loopne
movs
in
retf
jmp
dec
movs
xchg
pop
mov
mov
or
test
sub
sahf
sub
or
outs
retf
cmp
dec
nop
lock
push
inc
addr16
in
mov
pop
cmps
sub
xchg
daa
stos
test
imul
push
mov
sti
scas
stc
pop
test
cli
mov
mov
out
test
sub
sbb
fist
jo
push
jb
cmps
jmp
mov
cli
stos
lock
jmp
(bad)
fidiv
cmp
mov
jmp
xor
push
dec
nop
or
and
mov
sub
jmp
cmp
cwde
sub
fldcw
and
dec
jecxz
adc
scas
mov
(bad)
push
nop
mov
sbb
sbb
test
mov
ja
mov
jnp
xchg
sub
(bad)
popf
stos
mov
sub
sub
cmp
movs
jl
call
and
mov
dec
xchg
or
mov
or
add
add
mov
call
mov
sti
mov
mov
cwde
pop
nop
aaa
sub
cmp
jmp
cmps
imul
push
add
sti
mov
cmp
mov
pop
add
sub
fwait
mov
leave
add
and
and
add
mov
retf
mov
jmp
mov
push
and
mov
mov
ficomp
adc
mov
sub
dec
test
or
cmps
sub
pusha
sahf
mov
mov
or
mov
(bad)
nop
or
stos
rcr
add
shl
mov
mov
jmp
jp
mov
sbb
fisttp
ret
dec
sbb
outs
int3
mov
pop
mov
nop
or
rol
stos
xchg
mov
mov
jp
mov
or
xor
or
xchg
in
test
pop
xchg
inc
cmp
(bad)
call
lea
retf
ret
repnz
sti
mov
mov
movs
cmp
jl
xor
xor
movs
or
dec
mov
cmp
lods
pop
mov
cmp
cmp
(bad)
cmps
sub
or
pop
dec
mov
pop
int
sbb
pushf
retf
mov
stos
into
mov
add
xor
(bad)
mov
mov
fadd
aas
dec
mov
stc
mov
dec
nop
add
mov
mov
or
lds
sub
xor
cmps
push
mov
adc
cs
int
cmp
cmps
cmp
cmp
dec
lock
scas
or
int
jl
inc
jl
jp
mov
mov
out
mov
fwait
shl
jge
xor
lods
sub
int
dec
ror
cmp
aaa
dec
into
and
inc
pop
aam
int
mov
stos
daa
popf
les
leave
mov
mov
dec
sar
vsubpd
pop
jl
(bad)
dec
(bad)
xor
aad
sub
mov
into
enter
cmp
and
repnz
test
xchg
(bad)
jp
inc
(bad)
stos
fwait
add
mov
and
iret
pop
jge
jne
ror
lds
fst
mov
dec
pop
aad
(bad)
sub
inc
dec
aad
sub
xor
add
add
jo
aad
leave
ja
aam
cmp
mov
xchg
aam
jl
jmp
rcr
ret
sub
int
jp
and
mov
retf
mov
sar
mov
dec
fmul
(bad)
ror
fild
pop
ins
(bad)
jl
ror
ror
pop
mov
pushf
ret
fadd
jnp
pop
sub
inc
(bad)
fucom
int
fdivr
rol
test
cmp
jecxz
rcl
imul
jp
xor
pop
ror
or
pop
sub
(bad)
sbb
sub
xchg
push
nop
or
loopne
sbb
sbb
or
popf
loope
jge
mov
(bad)
les
add
inc
popf
(bad)
bnd
out
(bad)
outs
(bad)
mov
aam
push
jecxz
pop
xchg
sahf
fisttp
shl
sub
inc
sahf
in
jge
mov
fld
(bad)
fst
cmc
pop
fisttp
popf
fsubr
rcr
xlat
outs
(bad)
inc
sbb
cld
sub
dec
pop
in
push
out
outs
fcomp
fst
fnstsw
popf
aam
(bad)
or
icebp
fucom
dec
std
out
(bad)
ror
scas
xor
xchg
add
pusha
dec
in
or
pop
nop
jmp
out
call
rcr
jge
pushf
jle
(bad)
cmp
fdivrp
call
jle
imul
sub
xlat
and
loop
jle
das
shl
loope
push
fbstp
in
outs
fidiv
or
data16
shr
add
jmp
popf
in
test
out
lods
in
mov
out
in
movs
std
rcl
(bad)
pop
fcomp
movs
cmp
data16
sar
in
mov
jmp
scas
in
cld
(bad)
ror
add
out
test
ror
nop
add
scas
in
pushf
pop
lock
cs
(bad)
popf
jecxz
pop
add
lock
jecxz
rol
xchg
std
in
sbb
leave
scas
xlat
push
paddusb
lock
gs
iret
outs
jmp
inc
ins
out
outs
repnz
out
in
or
ror
in
out
call
pop
fbld
add
icebp
and
jmp
push
out
jg
pusha
(bad)
jmp
outs
fdivrp
jl
add
hlt
mov
mov
loopne
jle
scas
ds
sub
out
dec
ds
pop
hlt
pmaxub
(bad)
fsubr
jmp
pop
lock
dec
outs
fadd
sbb
dec
push
enter
push
mov
cmp
repnz
lock
lahf
out
lea
gs
mov
xor
outs
rol
jmp
mov
cmp
cli
and
popa
lahf
test
sub
test
fdiv
lahf
(bad)
mul
repz
mul
(bad)
hlt
sub
sbb
xchg
mov
mov
xlat
jl
out
(bad)
dec
hlt
mov
stos
iret
add
lock
jns
rep
iret
clc
out
stos
idiv
jmp
sbb
test
cmp
repnz
jg
inc
in
sti
stos
into
mul
not
out
stc
and
mov
or
sub
sbb
xchg
test
add
pop
xchg
pop
add
xchg
xchg
mov
xchg
sub
cwde
call
mov
lods
sahf
nop
mov
mov
mov
mov
mov
(bad)
mov
add
mov
(bad)
loope
mov
test
mov
(bad)
test
out
xchg
jmp
push
mov
mov
add
pop
cmp
sub
jge
cmp
pop
mov
or
push
and
push
push
ins
pusha
mov
stc
cmp
inc
inc
scas
adc
pop
jmp
fidiv
icebp
pop
in
fstp
xchg
ffreep
(bad)
rol
(bad)
mov
lods
xor
mov
(bad)
imul
retf
push
mov
mov
xor
mov
xchg
enter
call
cli
add
retf
push
xchg
sub
sbb
dec
pop
les
outs
gs
js
inc
push
jp
pop
inc
rcr
fwait
sbb
mov
fidiv
aam
je
les
(bad)
fnstenv
dec
mov
in
ret
pop
leave
ja
push
add
jmp
out
fcmovnbe
sbb
and
jno
idiv
pop
jno
mov
mov
iret
sahf
repz
jne
xchg
rcl
adc
pop
(bad)
das
(bad)
mov
mov
xchg
xor
xchg
mov
push
sbb
movs
fstp
xor
aas
sbb
jae
data16
pop
fidiv
inc
popa
sbb
pop
sbb
xchg
stc
lods
push
dec
arpl
cmp
outs
xchg
add
js
inc
add
and
push
and
pop
mul
sti
icebp
pushaw
adc
cmp
out
(bad)
into
jge
jecxz
inc
out
shl
test
nop
div
xchg
and
and
mov
movs
and
out
mov
mov
pop
and
retf
nop
imul
xchg
gs
pusha
inc
pop
and
loope
adc
rol
push
mov
lahf
sti
add
test
sub
mov
movs
xchg
cli
or
jmp
loopne
cmps
scas
mov
pop
test
add
and
mov
stc
leave
add
movs
dec
adc
jmp
pushf
xchg
stos
xchg
mov
xor
(bad)
cli
push
movs
and
pop
lods
add
outs
fiadd
lods
mov
pop
call
sub
mov
jo
push
xchg
dec
dec
outs
push
stos
imul
mov
movs
cmc
into
cli
out
mov
mov
xchg
jno
retf
xor
loope
sub
arpl
inc
ret
adc
mov
sbb
icebp
icebp
leave
xchg
mov
xor
pusha
jo
fwait
das
add
in
and
leave
sub
in
dec
retf
das
cmovge
shl
cmps
dec
out
shl
stos
mov
aad
mov
or
add
or
imul
dec
hlt
int3
pop
add
(bad)
push
lods
hlt
mov
or
call
das
and
push
add
mul
jg
xchg
hlt
mov
cmp
je
dec
adc
in
adc
stos
stos
xchg
ja
inc
in
xlat
dec
and
mov
jl
in
arpl
lods
aaa
mov
daa
mov
(bad)
ins
jbe
cmps
outs
mov
fidivr
adc
and
sub
mov
jl
ret
pop
dec
out
repz
push
push
lock
cwde
pop
add
sbb
sahf
xchg
adc
sub
add
pop
pop
mov
fsubr
(bad)
mov
aas
add
push
add
fbstp
xor
mov
pop
cmp
jmp
or
cmps
mov
clc
sbb
cmp
mov
jmp
add
mov
test
dec
pusha
int
pop
add
dec
into
pop
adc
or
push
xor
ror
cwde
or
jbe
sbb
ret
push
inc
test
inc
test
push
or
daa
inc
es
adc
mov
shr
inc
hlt
mov
and
arpl
mov
ret
icebp
mov
xchg
inc
jmp
xchg
popf
jmp
jmp
mov
inc
dec
mov
arpl
mov
inc
and
and
test
cmp
dec
jo
nop
mov
ret
das
in
xchg
movs
push
pop
fxch
add
sbb
xor
lods
in
cmps
enter
mov
mov
movs
push
dec
sub
sub
xchg
mov
dec
int3
bound
jae
(bad)
dec
cmps
xor
xor
pop
jns
pop
push
xor
scas
test
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
push
loope
jo
or
in
sbb
and
cmp
sbb
(bad)
mov
jl
sbb
cmc
push
sub
add
scas
mov
cmp
xor
jnp
scas
xchg
std
ins
dec
pop
jnp
retf
mov
lea
push
jb
scas
jg
ins
ins
loope
pop
fdiv
div
or
adc
adc
fadd
and
je
lock
ins
ins
add
sbb
sbb
sar
addr16
sbb
sub
js
rcr
adc
mov
fsub
cli
cmc
mov
mov
fsubp
sahf
div
sbb
mov
outs
add
sbb
imul
out
or
pusha
add
rol
test
movs
je
mov
popa
call
sub
(bad)
pushf
js
mov
adc
icebp
scas
push
(bad)
ja
xor
out
pop
push
out
rcl
mov
or
outs
sub
mov
enter
jl
dec
add
iret
xlat
sar
ds
(bad)
and
and
adc
rol
lods
mov
ja
out
into
sbb
(bad)
pop
pop
pop
dec
add
lods
or
mov
push
add
repnz
(bad)
sbb
out
adc
ror
jecxz
xchg
cdq
ret
jae
scas
dec
ja
out
or
mov
sub
popa
enter
add
icebp
pop
movs
or
or
push
out
mov
das
sbb
add
xchg
cmp
mov
loope
pop
fcmovbe
and
cmp
jp
sbb
icebp
xchg
mov
fiadd
cmp
mov
adc
xchg
push
mov
push
int3
fucomi
outs
call
ins
gs
pop
(bad)
push
rcl
(bad)
sub
rcr
div
or
mov
out
mov
add
cmp
outs
popa
sub
(bad)
aad
push
or
mov
mov
or
or
adc
add
adc
inc
ror
and
hlt
ins
sar
popf
out
mov
jo
sub
jnp
sbb
mov
jno
fldenv
and
pushf
in
test
retf
addr16
cs
dec
scas
xor
mov
idiv
lods
sub
lahf
inc
cmp
mov
mov
xchg
pop
add
lods
out
sub
(bad)
gs
pop
dec
fadd
push
ins
pop
inc
dec
and
jecxz
neg
pop
popf
in
jae
idiv
test
mov
test
cmp
ret
std
or
clc
imul
fsubr
and
lods
adc
pop
adc
jmp
xchg
mov
mov
retf
push
es
sar
mov
(bad)
(bad)
cli
out
int
rol
mov
neg
(bad)
aaa
aam
(bad)
data16
aam
inc
xor
das
mov
inc
or
inc
div
or
dec
pop
clc
fimul
jl
arpl
mov
jne
pop
scas
cmps
fdivr
nop
out
jnp
mov
push
(bad)
push
out
adc
mov
js
add
(bad)
mov
push
mov
jmp
jno
mov
mov
and
ja
cmps
push
cs
mov
cmp
jo
cwde
jp
push
jp
jbe
push
sar
inc
add
jbe
ja
jl
test
or
pusha
dec
out
and
jo
es
xchg
jg
xchg
loopne
cmc
adc
test
push
pop
jmp
pop
mov
jo
outs
lds
pop
dec
fs
call
sbb
jb
push
inc
add
jl
ja
daa
imul
lods
idiv
aaa
jge
ja
pop
test
jnp
enter
or
push
cmps
jb
mov
adc
pop
das
(bad)
jl
xor
xchg
(bad)
mov
imul
xchg
pusha
mov
mov
push
xor
pop
clc
add
push
pop
ins
addr16
mov
push
call
test
mov
xchg
xchg
xchg
push
ss
leave
aaa
ja
push
xchg
add
mov
mov
jl
movs
xchg
ins
jns
mov
call
movs
mov
mov
add
jp
xchg
cwde
push
push
inc
xchg
inc
daa
mov
add
push
jb
inc
je
mov
addr16
pusha
jmp
arpl
push
mov
jns
gs
inc
and
fcmovne
push
loop
push
test
mov
xchg
inc
ins
leave
push
push
jbe
jmp
pop
sbb
bound
mov
out
push
mov
imul
js
enter
jbe
ja
add
movs
xlat
add
sub
ins
xchg
dec
outs
outs
ja
rcl
pop
adc
mov
jge
pop
ja
out
outs
xlat
xchg
js
js
loop
pop
cwde
xlat
test
fdiv
dec
ins
sbb
jae
clc
xor
test
push
mov
xchg
adc
mov
(bad)
sub
call
rol
fsub
mov
gs
push
mov
xlat
xchg
xchg
dec
and
push
shr
(bad)
add
jnp
test
pop
mov
cs
shl
pop
cmp
add
or
daa
pop
repnz
push
mov
adc
dec
outs
test
xchg
ins
inc
mov
xchg
nop
dec
mov
fwait
jmp
pop
xchg
jmp
push
push
popf
repnz
mov
jmp
push
aaa
imul
(bad)
cmc
xchg
sub
outs
push
pop
popf
(bad)
cmc
bound
cmp
pop
sbb
cwde
sahf
mov
push
fld
orps
test
outs
add
xchg
and
pop
out
test
mov
(bad)
mov
jae
call
xlat
xchg
push
pop
(bad)
sbb
sbb
and
mov
outs
shl
adc
ins
xlat
push
jbe
adc
leave
ja
in
leave
mov
xchg
sub
repz
push
pop
jbe
inc
cli
push
pusha
xchg
inc
add
bound
movs
inc
jne
push
loopne
dec
fisub
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
gs
add
add
add
add
out
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
adc
or
pop
push
sub
sub
cmp
or
call
fs
adc
scas
lods
test
fs
pop
xor
sub
ds
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
or
adc
push
add
data16
adc
cmps
movs
jl
jl
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
pop
pop
sub
sub
ds
push
or
call
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
fs
fs
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
add
or
data16
adc
sbb
outs
je
scas
mov
jle
sub
xor
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
out
sbb
mov
or
scas
lock
push
retf
mov
pop
dec
movs
jp
add
scas
lock
mov
mov
sub
push
or
pop
rol
mov
scas
sub
cmps
out
xchg
jb
test
call
mov
adc
and
mov
call
mov
sub
jmp
mov
stos
cmp
add
sti
mov
call
mov
jmp
dec
jnp
inc
inc
mov
sti
mov
sbb
jp
dec
mov
arpl
mov
fwait
mov
jmp
xor
mov
sub
cmp
xchg
pop
mov
inc
xor
pop
add
push
scas
fisttp
or
mov
mov
sti
mov
retf
cmps
inc
jmp
mov
retf
mov
enter
add
add
cdq
retf
mov
fild
and
mov
cmp
dec
lods
stos
jmp
mov
mov
stos
mov
dec
mov
mov
xchg
jmp
dec
mov
daa
fwait
add
nop
sbb
or
push
adc
add
les
mov
mov
mov
mov
or
repz
retf
mov
or
mov
sub
inc
cmp
imul
mov
cmp
nop
fwait
rcl
xor
xor
ret
and
scas
(bad)
add
add
fadd
sub
ret
ret
add
sub
add
add
add
in
ret
xchg
ret
aas
fadd
xor
(bad)
lock
inc
mov
aaa
add
cld
scas
aas
adc
or
pop
cmp
pop
loopne
dec
cld
lds
add
lods
add
lods
add
sbb
out
enter
(bad)
jb
mov
pop
(bad)
cmp
(bad)
jns
(bad)
sub
(bad)
mov
(bad)
jp
rcl
dec
add
loopne
sbb
inc
and
sub
test
mov
add
mov
pushf
lods
xchg
leave
push
lock
inc
mov
jp
mov
nop
les
mov
sti
enter
xor
leave
pop
xor
dec
dec
retf
test
retf
retf
leave
mov
mov
or
mov
add
and
cmp
enter
jmp
cld
leave
(bad)
mov
mov
push
push
add
int
jl
lahf
fmul
aad
ja
fmul
mov
int
cld
int3
xchg
fmul
cmps
mov
cmp
xlat
fmul
out
mov
jl
ficomp
sub
xlat
fmul
fild
loopne
xchg
ins
add
int
cmp
xchg
mov
add
xchg
pushf
add
mov
or
inc
mov
clc
sbb
fdivr
int3
cli
cmp
std
pop
add
(bad)
iret
mov
shl
lods
shl
sub
cld
cmp
cmps
int3
retf
imul
mov
jge
ror
fmul
push
sbb
pop
cmp
sti
lods
rol
mov
mov
add
retf
retf
rol
dec
aad
pusha
aad
mov
cs
into
adc
cmps
pushf
add
(bad)
clc
or
repnz
(bad)
cmp
xor
mov
into
int3
retf
jb
shr
test
aam
or
cmps
in
sar
rol
int
cld
(bad)
jne
into
out
fadd
lea
pop
(bad)
or
push
or
dec
pop
iret
push
mov
cmps
mov
rcr
mov
or
into
mov
into
out
fdivr
mov
add
lods
shl
lods
shl
mov
xchg
cmp
movs
pushf
int3
xchg
in
leave
mov
shr
jge
fisubr
(bad)
retf
xlat
or
(bad)
into
sbb
std
fdiv
shl
into
mov
(bad)
pop
add
pop
fcmovne
sub
fs
xor
fsubr
fisubr
(bad)
out
(bad)
or
jmp
fucomip
in
fadd
jle
aad
fild
mov
movs
sub
pop
ins
fnstenv
ins
shl
pop
add
dec
(bad)
mov
fucomip
sbb
dec
rol
pop
(bad)
jne
add
lods
fsubr
jge
das
outs
fidivr
fxch
ins
loopne
std
jecxz
mov
cmp
ror
(bad)
fadd
fcmovu
pop
jecxz
inc
loope
ins
fldcw
ror
lods
in
ins
in
sbb
inc
dec
lea
jmp
add
fisubr
shr
fdiv
pop
(bad)
int
sub
outs
push
into
in
or
push
fucom
sub
pop
dec
loope
dec
iret
ins
push
in
dec
rcr
xlat
push
mov
inc
ins
add
pop
fmul
loopne
dec
fidivr
rcl
retf
jmp
in
call
pop
fld
pop
fnstenv
(bad)
sahf
call
dec
loope
dec
out
sbb
mov
(bad)
jge
je
(bad)
dec
loope
or
dec
mov
sub
jmp
fstp
xchg
sahf
loope
in
loopne
jl
cmp
push
in
sub
dec
scas
loopne
into
in
fcompp
mov
out
mov
xlat
iret
push
out
jle
into
lods
jmp
lods
scas
(bad)
cmc
(bad)
out
mov
rcl
scas
add
in
fistp
add
ds
outs
out
in
fisttp
aas
stos
pop
rol
mov
xor
test
pop
push
into
mov
icebp
jno
loop
pop
in
fld
out
(bad)
icebp
push
(bad)
xlat
setle
sti
ds
mov
sub
xlat
and
jmp
(bad)
repnz
in
and
adc
xlat
in
in
sub
jecxz
in
ins
into
dec
(bad)
repnz
fistp
rcl
in
out
ffree
pop
in
out
jmp
out
add
jl
jbe
jmp
lods
add
fmul
pop
out
(bad)
int
or
mov
jecxz
dec
imul
(bad)
(bad)
jecxz
mov
addr16
jmp
sbb
mov
add
adc
out
ds
dec
out
pop
int
fistp
cmp
shr
or
(bad)
into
icebp
pop
sahf
idiv
or
adc
ins
outs
cmc
push
dec
jmp
sbb
push
std
loop
jge
mov
jae
stc
mov
clc
outs
fstp
int
(bad)
cli
mov
stc
cmp
shl
int3
stc
sar
add
mov
test
or
es
test
test
sti
js
out
jmp
aas
scas
cli
ins
jge
mov
repz
sti
data16
hlt
jge
add
into
sar
sti
jbe
out
or
and
icebp
sub
retf
stos
(bad)
in
ret
out
loop
pop
div
nop
jae
push
test
shl
xchg
and
dec
cmp
adc
sbb
imul
jns
call
fdivr
call
dec
mov
push
add
mov
pushf
or
sbb
jmp
stc
sbb
fnstcw
dec
sub
mov
sub
mov
fstp
pop
cli
sti
mov
push
out
sbb
sbb
out
lea
ins
mov
leave
and
cmc
or
push
push
das
xchg
ss
cmp
loope
ja
push
sub
shl
inc
inc
(bad)
enter
das
inc
inc
inc
pop
mov
fisubr
stos
push
push
sub
inc
fldcw
scas
push
int
call
or
inc
sbb
sbb
ins
arpl
mov
das
lahf
out
repnz
jmp
inc
jnp
mov
xor
push
sbb
sbb
inc
sub
dec
pop
call
cmp
aam
xchg
sub
mov
fld
nop
push
jno
xchg
xor
fsubr
jl
fisub
fwait
inc
adc
mov
jns
ins
js
push
mov
sbb
adc
xchg
data16
jp
test
cmp
mov
shl
and
test
(bad)
xchg
sbb
outs
cs
sbb
jmp
mov
jge
imul
lock
lock
jle
push
cs
(bad)
sub
mov
mov
push
cdq
mov
pop
repnz
sub
fs
dec
fbstp
shl
retf
movs
pop
pop
jl
jmp
mov
adc
(bad)
mov
add
sub
jl
and
mov
add
inc
push
pop
icebp
pop
jo
stc
push
or
mov
out
jge
push
cmp
sub
inc
addr16
and
jp
or
lock
rcl
and
dec
mov
cwde
and
cmps
outs
(bad)
pop
sub
jne
xchg
ficom
jbe
xchg
pop
add
dec
inc
or
push
inc
add
push
mov
xor
or
add
adc
ins
and
cwde
fs
lea
mov
xchg
inc
cmps
xchg
jns
mov
inc
add
and
fsub
das
out
ins
sub
pop
jae
test
sub
mov
pop
jo
sub
and
add
jne
inc
pop
imul
pushf
mov
sbb
xlat
stos
jp
mov
shl
inc
loope
scas
or
movs
ins
mov
adc
xchg
test
inc
and
push
xchg
fisubr
test
pop
(bad)
movs
mov
cli
bound
cmps
xchg
stos
sub
xchg
pusha
lods
fidivr
xor
mov
mov
xchg
imul
repnz
fldenv
mov
stos
popa
mov
cli
sub
and
rol
in
adc
push
aaa
dec
mov
adc
lea
push
lahf
pop
jo
dec
inc
in
repz
outs
cmc
sub
push
fwait
sub
mov
lds
in
dec
shl
or
and
dec
pop
mov
adc
fiadd
pop
lock
bound
aaa
lds
int3
ss
iret
ja
imul
repnz
stos
js
mov
mov
and
xchg
and
clc
mov
sar
inc
jg
stc
ret
mov
scas
ja
icebp
xchg
dec
cmp
cdq
inc
sbb
and
jp
jns
into
das
mov
fidiv
mov
call
bound
and
dec
ds
lods
mov
jno
dec
pop
(bad)
mov
and
sub
popf
sub
jmp
push
mov
in
push
fninit
pop
out
aad
out
movs
push
jns
rcl
and
mov
and
das
jbe
push
fadd
mov
ds
in
outs
jmp
mov
dec
jae
and
stc
retf
inc
adc
jae
and
(bad)
jmp
push
fsub
inc
bound
loope
(bad)
pop
mov
push
xor
sbb
leave
in
inc
fmul
call
mov
fisubr
scas
xchg
sahf
adc
or
sbb
adc
in
test
sbb
cmp
rcr
jp
(bad)
inc
cmps
adc
sbb
nop
aad
addr16
adc
shl
ret
movs
sbb
sbb
ds
mov
xchg
push
popf
pop
pop
rol
imul
and
imul
iret
xchg
xchg
push
mov
dec
xchg
or
(bad)
enter
loope
jbe
xchg
sbb
pop
cmps
add
add
arpl
fcomp
cwde
enter
jg
retf
outs
call
add
outs
sub
sbb
sbb
jb
xchg
xchg
in
or
call
xchg
in
loop
popa
stc
ds
jmp
mov
fsubr
dec
mov
cmp
js
outs
imul
cmps
dec
xchg
test
pop
clc
cs
mov
jae
sbb
call
mov
push
lahf
adc
dec
stos
jl
mov
or
pop
cmp
jp
pop
ds
test
in
pop
push
add
jb
mov
bound
dec
jle
xor
out
cmp
mov
add
mov
jle
or
push
or
call
jb
aam
rcr
int
lds
in
cmp
sub
dec
push
cmc
stos
pop
test
icebp
nop
dec
sar
(bad)
pop
das
stos
stos
ret
sub
test
mov
loope
xor
(bad)
jb
cmp
push
arpl
cmps
xor
pop
aam
out
stos
mov
jmp
imul
and
push
pop
adc
pop
sub
fcomp
push
or
xor
dec
gs
mov
cmps
aad
mov
ins
leave
stos
pop
ret
xchg
xchg
mov
and
lods
sbb
(bad)
push
mov
inc
mov
xlat
retf
jmp
ins
jb
mov
cmp
test
mov
jno
pop
pop
sub
adc
pop
in
push
mov
xor
inc
(bad)
cmps
push
or
lea
repnz
cwde
mov
xor
fmul
mov
pop
aad
loopne
dec
mov
xchg
pop
pop
ror
cmps
cmp
add
imul
mov
loopne
repnz
idiv
iret
lds
aaa
jecxz
pop
ret
push
inc
xchg
stos
(bad)
lock
cmp
push
xor
sub
mov
cwde
pop
inc
(bad)
xor
stos
jecxz
not
sub
adc
mov
push
lods
sub
mov
xchg
in
fs
div
add
cmp
fidiv
mov
sub
shl
ins
mov
mov
push
sbb
add
mov
movs
stc
lds
sbb
or
call
xor
xor
adc
repnz
mov
les
test
out
pop
mov
test
xor
ret
int
loop
pusha
aad
push
jo
stos
dec
in
inc
fwait
or
pop
add
imul
(bad)
ins
and
dec
loope
je
outs
sub
pop
shr
std
push
mov
in
mov
mov
rcr
rcl
fmul
jae
adc
fisttp
popa
fcmovbe
jbe
repz
jo
inc
fadd
adc
ret
aaa
into
add
push
cld
loop
aaa
push
inc
(bad)
lock
shl
aaa
jns
pop
pop
icebp
jae
cmp
sub
jbe
daa
push
repnz
ror
add
in
pop
xor
mov
pushf
and
mov
adc
inc
cwde
inc
retf
xchg
into
pop
mov
xchg
loope
addr16
jnp
ds
xchg
jmp
ja
lds
add
jmp
cmp
hlt
mov
clc
sbb
in
cli
iret
das
inc
add
push
mov
xchg
ja
jmp
(bad)
mov
inc
push
and
xlat
jge
jmp
icebp
mov
cmc
ins
cs
ret
jge
xor
(bad)
repz
xor
add
icebp
xchg
dec
sbb
test
pop
jp
and
cmp
xlat
(bad)
cld
lock
jge
pop
mov
jecxz
pop
cli
in
pop
das
mul
arpl
icebp
sbb
xor
push
sbb
jg
xor
or
pusha
aam
dec
(bad)
aad
rol
dec
add
das
jge
pop
xor
(bad)
outs
jg
sbb
popf
jmp
jle
in
mov
lock
out
fidivr
div
aaa
add
xlat
add
mov
jbe
(bad)
jle
(bad)
jge
lds
mov
fdiv
into
cmps
add
cmp
xor
ja
gs
out
dec
rol
mov
repnz
addr16
je
daa
jb
addr16
enter
add
xor
loope
jp
daa
jbe
push
sub
jns
cmps
add
aaa
add
add
mov
test
call
clc
test
clc
jns
mov
or
and
add
rol
pop
inc
or
dec
jo
xchg
add
dec
loopne
push
inc
enter
jg
aaa
xchg
xchg
test
pop
jb
xor
xor
add
add
jne
mov
cmp
add
aaa
ins
add
cmp
mov
xchg
ret
xchg
xchg
mov
xchg
xchg
sbb
adc
js
call
adc
add
lock
js
mov
xlat
jne
(bad)
jl
push
sub
mov
je
daa
test
cmp
clc
add
mov
test
div
ins
sub
add
mov
sbb
jl
inc
add
inc
add
mov
sbb
pop
(bad)
or
sub
sub
add
cwde
mov
(bad)
dec
jne
in
push
cmc
addr16
sub
jbe
pop
xor
add
push
sub
dec
xchg
xchg
sub
jl
rcl
mov
enter
add
sub
cwde
jae
test
push
stc
mov
addr16
iret
fcom
mov
xchg
addr16
sub
xchg
pop
sbb
leave
xchg
xor
mov
jg
xlat
nop
pop
mov
dec
cmp
loopne
cmp
ins
xacquire
pop
xchg
sub
xchg
nop
cmp
idiv
daa
test
js
retf
mov
mov
or
(bad)
pop
(bad)
cmp
mov
clc
mov
xchg
fld
nop
imul
and
jbe
test
bound
scas
mov
repz
ja
inc
pop
xchg
sub
mov
nop
mov
xchg
or
jp
rol
adc
dec
cmc
mov
adc
jnp
and
mov
mov
cwde
lahf
mov
js
dec
xchg
fstp
push
add
enter
mov
cwde
mov
xchg
mov
xchg
dec
(bad)
mov
(bad)
iret
call
mov
popf
mov
ins
cmp
xchg
pushf
cmp
nop
mov
call
out
(bad)
in
lea
mov
xchg
mov
sub
mov
fld
dec
xchg
dec
mov
(bad)
js
ins
jns
mov
stc
jmp
ins
stc
xchg
mov
xchg
into
leave
xchg
inc
call
dec
cdq
sahf
sub
sbb
xchg
push
cdq
add
sbb
test
add
mov
test
or
cmp
sub
mov
xchg
loop
je
pop
(bad)
xacquire
mov
(bad)
push
out
mov
add
sahf
in
mov
dec
fst
jmp
mov
fiadd
mov
sub
call
dec
jo
imul
lahf
xchg
or
add
or
pop
mov
test
adc
xchg
xchg
mov
dec
mov
jo
test
clc
call
mov
popf
pop
fldcw
mov
jp
outs
ficomp
xchg
(bad)
or
push
popf
cmp
mov
scas
jns
adc
jl
pop
or
and
test
or
shr
lods
cdq
pop
lods
jbe
test
test
or
stos
pop
adc
cli
cmp
(bad)
pop
cdq
cmp
stos
mov
movs
sbb
scas
add
test
stos
mov
or
cmp
cdq
scas
lahf
jmp
scas
loopne
cmps
pop
or
mov
test
pop
jns
mov
test
test
jg
mov
test
push
sbb
or
push
sub
xchg
dec
sbb
lock
inc
jns
sub
fs
xchg
cmp
or
mov
mov
lods
dec
jns
jnp
add
push
cmp
movs
lahf
imul
add
and
xor
test
pop
mov
mov
xor
scas
add
mov
sti
cdq
ins
sub
jmp
jmp
mov
clc
jmp
mov
cdq
mov
or
or
or
sbb
push
mov
mov
sbb
mov
jle
mov
cmp
sub
enter
xchg
push
jmp
lea
mov
fwait
mov
sbb
or
fisubr
jns
sbb
xor
mov
or
js
adc
mov
push
add
call
and
xchg
xor
cdq
cmp
add
mov
mov
mov
mov
stos
test
jmp
pusha
sti
mov
enter
sar
imul
in
mov
cmc
mov
sbb
sti
ret
popa
test
in
fcom
mov
or
mov
sbb
mov
sbb
dec
pop
mov
int3
mov
mov
push
ins
mov
jl
and
mov
jo
dec
in
xchg
mov
jne
(bad)
dec
clc
sub
add
mov
(bad)
jge
rcr
loopne
xchg
ds
ror
pop
xchg
movs
mov
sbb
retf
mov
inc
mov
mov
or
xchg
sbb
pusha
mov
or
xchg
add
inc
leave
addr16
ret
add
mov
mov
push
inc
lods
mov
jl
scas
jmp
push
fcom
mov
fwait
leave
mov
scas
xchg
mov
xor
lds
mov
fmul
lods
ret
into
fwait
shl
mov
ins
leave
bound
(bad)
in
mov
popa
jmp
into
pop
enter
mov
int
sub
retf
xchg
stos
test
sti
cdq
jne
(bad)
cmp
out
retf
rol
(bad)
or
(bad)
jle
ret
mov
or
ins
pushf
iret
out
int3
or
sbb
into
xchg
cmp
sar
mov
or
test
cmp
mov
mov
out
enter
stos
ins
scas
inc
lods
mov
pop
xchg
stos
pop
aam
cmp
and
loopne
sar
int3
mov
aad
fisttp
in
aad
dec
mov
call
les
retf
enter
add
inc
ffree
aaa
cmp
loop
shl
mov
mov
shr
rcl
retf
or
mov
rol
pushf
fsub
mov
sub
dec
or
xor
retf
into
(bad)
jmp
retf
sub
out
retf
pop
lods
shl
(bad)
int
sub
inc
dec
fadd
mov
xchg
push
in
aad
pop
fistp
enter
mov
fild
shl
(bad)
out
retf
cmp
retf
lds
leave
retf
stos
call
(bad)
jb
shr
push
fdivr
call
or
sub
fisub
fld
cli
fisubr
ror
shl
fcmovne
cmp
dec
int
xchg
(bad)
pop
imul
ficomp
cdq
mov
loopne
or
test
int3
mov
aad
in
aad
pop
fcmovne
lods
aad
fucom
das
mov
aad
fsubp
int3
(bad)
dec
fst
cs
jnp
loop
scas
aam
cmp
cmp
loop
cmp
test
inc
fninit
fstp
cmp
sar
aad
dec
les
sub
stos
jl
fsubr
das
ins
loope
std
fnstcw
dec
fild
push
(bad)
std
loop
jge
popa
cmp
bound
cmps
in
jecxz
popf
in
sahf
fimul
rcr
push
jle
add
aam
dec
jecxz
or
cmp
jnp
fstp
popf
loop
fwait
test
out
mov
sub
pop
dec
loopne
mov
fisttp
cmp
jnp
aam
fidivr
popf
in
out
jmp
push
in
jle
arpl
sar
int3
fmul
in
jle
or
jecxz
(bad)
jmp
ins
loopne
in
call
outs
iret
leave
sahf
fimul
in
mov
(bad)
(bad)
loope
cmp
retf
ret
test
aam
sahf
(bad)
fsubp
mov
mov
fstp
jecxz
mov
cmp
add
in
ds
scas
jmp
inc
and
hlt
out
frstor
out
in
fisttp
into
fidiv
lods
mov
jecxz
(bad)
out
cmps
popf
out
shr
mov
mov
cmp
inc
dec
fidivr
fst
sub
repnz
(bad)
call
nop
out
or
lock
es
add
aad
(bad)
call
sahf
jecxz
fcmovbe
adc
fnstcw
add
out
mov
xor
shl
pop
sahf
jmp
into
stos
hlt
or
icebp
test
repnz
idiv
lock
add
lock
(bad)
out
dec
das
jmp
(bad)
cdq
icebp
dec
mul
lahf
rep
imul
pop
repz
sar
hlt
bound
into
mov
pop
std
icebp
dec
dec
repz
repnz
(bad)
repnz
outs
imul
aas
jecxz
sahf
repz
xchg
(bad)
call
(bad)
cli
js
test
adc
mov
out
loopne
cmc
cwde
mov
add
icebp
xchg
jg
ss
hlt
xor
bnd
add
in
cs
xchg
imul
jg
mov
rcr
jg
jnp
push
(bad)
iret
lock
mul
in
das
call
retf
outs
out
in
pop
rcr
push
(bad)
scas
neg
pop
clc
test
add
cld
(bad)
verw
aas
(bad)
cdq
(bad)
jge
or
pop
pop
movntps
sub
sub
xchg
add
mov
xchg
sub
sbb
pop
add
movs
mov
mov
fwait
add
mov
ret
fwait
lods
mov
mov
lds
xchg
xchg
mov
(bad)
inc
retf
xchg
lea
lock
out
(bad)
ret
call
mov
mov
dec
mov
mov
pop
push
pusha
mov
xchg
push
xchg
add
pusha
xchg
sub
std
push
out
shr
and
push
xchg
cmp
inc
or
push
mov
cmp
movs
cmp
movs
lock
nop
scas
pushf
xor
rcr
outs
shl
movs
xchg
mov
int3
pop
stos
cdq
test
dec
cmps
icebp
sub
adc
cmp
push
mov
stos
push
les
popf
dec
pop
sub
and
jne
loope
(bad)
xchg
test
inc
aad
sub
mov
outs
pop
dec
xor
cli
mov
mov
retf
adc
push
jb
sub
dec
pop
mov
xchg
movs
pop
jae
ja
cmp
idiv
sbb
jmp
mov
mov
jle
and
stc
adc
in
mov
addr16
outs
mov
aad
lods
pop
pop
(bad)
call
cdq
sahf
in
cmp
mov
lea
test
jne
mov
shl
push
adc
xor
dec
adc
adc
movs
fwait
bound
jg
daa
fwait
add
dec
mov
pop
out
push
loope
rcl
xor
push
jl
retf
mov
xchg
(bad)
jecxz
test
sub
xor
and
imul
mov
pop
outs
clc
mov
es
pusha
nop
test
cmp
pusha
add
jo
add
push
jo
daa
adc
mov
retf
call
cmp
addr16
jge
pop
int3
fwait
jne
leave
inc
lahf
jg
(bad)
test
sub
movs
xchg
xor
sbb
push
(bad)
xchg
scas
pusha
add
add
repz
adc
rcl
enter
mov
mov
imul
pop
add
jmp
or
sbb
les
test
ret
or
dec
xchg
sub
stos
cmp
fs
dec
adc
mov
xor
mov
ja
add
repnz
jmp
retf
lods
mov
cmps
sbb
add
ret
push
out
or
xor
dec
adc
sbb
xor
pop
xor
sub
les
pop
xor
mov
ret
mov
add
push
loop
les
dec
pop
(bad)
sbb
push
sbb
mov
movs
lds
inc
inc
enter
rcl
das
pop
adc
imul
cld
xor
inc
dec
popa
jno
xchg
fisubr
out
jne
push
pop
pusha
jge
(bad)
ror
dec
or
cmp
xor
lods
xor
dec
mov
mov
loopne
adc
cmp
shl
jecxz
cmp
inc
or
xchg
imul
dec
into
cmc
fidivr
push
jb
mov
or
into
xor
mov
xchg
mov
out
lods
mov
mov
jmp
jae
cmc
call
mov
xlat
sub
dec
cmp
scas
mul
mov
push
xor
cld
es
(bad)
xor
movs
loopne
add
fisub
jge
cmc
dec
jb
cmc
jmp
mov
stos
dec
btr
out
(bad)
jl
xchg
in
imul
loopne
clc
jmp
lahf
mov
iret
jge
mov
shl
mov
cld
cmp
add
retf
push
je
sar
or
sbb
(bad)
or
mov
(bad)
test
bound
enter
ret
test
imul
mov
loope
gs
sbb
sub
lods
jnp
adc
ret
xchg
arpl
xchg
mov
sub
mov
sbb
adc
push
sbb
pop
adc
inc
retf
or
jg
mov
sub
cwde
or
sub
sub
icebp
xchg
or
mov
outs
scas
cmp
sbb
and
jl
arpl
xchg
fistp
xchg
lea
jmp
pop
ret
and
stos
aaa
korw
xchg
add
sub
enter
xchg
and
rcl
inc
cmp
pop
(bad)
xchg
mov
mov
xchg
mov
dec
dec
bound
mov
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
mov
inc
rol
fiadd
inc
jge
(bad)
or
push
adc
lods
scas
push
mov
jno
push
push
je
mov
mov
inc
lods
adc
nop
push
mov
and
mov
mov
adc
imul
sar
sub
stos
fdivr
inc
cmp
pop
lods
jbe
mov
or
pop
mov
push
in
push
mov
test
ret
jb
sub
jbe
pop
and
xchg
pop
push
sbb
mov
imul
xchg
mov
js
pop
and
adc
pop
cmc
cmp
fidiv
scas
ins
test
div
daa
mov
push
scas
fdivr
cmp
cmc
ins
push
mov
push
mov
add
faddp
adc
adc
pop
jmp
jb
jmp
fnsave
or
scas
mov
xchg
mov
or
mov
xor
add
jbe
and
add
rcl
or
stos
pop
sbb
scas
dec
push
mov
and
fucomp
adc
fld
add
mov
add
sub
les
mov
aam
push
jns
(bad)
sbb
stos
fsub
mov
jo
sub
arpl
cs
ins
inc
test
push
mov
ds
ret
dec
add
fist
popf
ins
mov
add
jo
mov
stc
mov
aad
or
pop
scas
enter
push
pop
push
fsubrp
cmp
aad
mov
cmps
mov
enter
fwait
mov
jmp
js
lods
lahf
test
push
pop
js
add
add
not
test
pushf
arpl
push
mov
mov
push
dec
mov
or
out
xchg
lods
retf
cmp
pop
mov
xor
(bad)
test
ret
cmp
sbb
mov
push
push
mov
dec
nop
jae
ror
mov
pop
int3
out
cs
add
fmul
aad
and
pop
mov
loopne
mov
jge
mov
add
inc
mov
sbb
push
add
sub
inc
cdq
or
aas
ins
test
fcomp
repnz
(bad)
hlt
mov
test
out
mov
xchg
jmp
or
mov
dec
scas
fucomip
call
aas
sub
in
lahf
test
push
ds
loopne
add
cli
sahf
je
mov
cli
in
mov
xchg
stc
mov
pusha
add
lods
dec
jo
sub
or
ret
push
into
push
sbb
rcr
ret
das
mov
push
vpunpckhqdq
inc
ret
jo
sbb
lds
add
sbb
pop
inc
adc
sbb
shr
(bad)
mov
mov
dec
cmp
fcmovbe
push
aas
xor
sbb
jmp
xchg
xor
pop
js
fwait
jne
adc
mov
fnstcw
ret
outs
cmp
test
lods
jae
dec
fld
jge
(bad)
xor
in
addr16
pop
into
ins
cmps
mov
push
mov
cmp
mov
shr
adc
shr
pop
test
iret
(bad)
in
mov
sbb
loop
scas
jmp
jg
lods
fcomp
fcom
cmp
jbe
or
jge
push
jno
rol
cmps
outs
loop
push
aad
leave
daa
outs
and
sbb
jns
push
ins
cmp
outs
or
jns
idiv
xchg
push
jo
xchg
inc
add
push
pop
popa
test
xchg
cmp
pop
add
add
mov
or
pop
xchg
mov
ja
xor
ja
aaa
jle
daa
push
add
outs
fbstp
loope
jb
cmps
add
test
pop
jae
fs
mov
scas
pop
je
call
fiadd
add
and
cs
pop
callw
(bad)
imul
xchg
jnp
push
test
(bad)
arpl
jp
addr16
or
jg
xchg
inc
jno
push
popa
jmp
sbb
rcl
pusha
jb
jbe
test
fs
outs
jnp
test
pop
jb
sub
cmps
test
add
neg
pop
js
push
add
repz
xchg
cmp
mov
push
ss
aaa
adc
xlat
jne
cmps
test
sbb
scas
addr16
or
out
dec
push
mov
fiadd
test
add
push
ins
arpl
cld
xchg
push
or
push
daa
jns
outs
xchg
cmp
loopne
jno
push
xchg
inc
jns
(bad)
mov
mov
lock
mov
push
(bad)
pop
aad
bound
popf
add
(bad)
mov
lds
int3
test
dec
adc
push
rcl
cmps
es
push
pop
popa
or
pop
inc
(bad)
pop
xchg
movs
daa
je
ss
cmps
jbe
push
lods
pop
jle
pop
pop
(bad)
ja
add
jp
mov
jnp
ins
pop
pop
xchg
stos
jbe
inc
mov
shl
mov
jl
clc
jne
xchg
push
ja
sbb
mov
fidivr
imul
push
cwde
jb
cwde
sbb
outs
test
push
xor
jo
popa
cld
xchg
enter
pop
dec
mov
js
mov
popa
ret
pop
test
xchg
scas
es
shl
shl
test
arpl
and
add
jns
push
or
arpl
add
test
test
mov
(bad)
pop
fdiv
out
call
ss
ins
xchg
or
xor
stos
cmp
xor
push
rcr
fsubr
push
scas
sub
pop
jmp
pop
push
addr16
xchg
adc
rcl
jne
retf
inc
mov
mov
jno
jmp
and
enter
add
(bad)
call
fsub
adc
out
pop
xchg
xor
jb
mov
aad
shl
ins
not
mov
aad
adc
jp
push
ins
mov
ins
ins
jbe
push
ja
sbb
jg
mov
mov
add
imul
push
inc
mov
pop
aad
(bad)
inc
push
mov
test
xor
mov
dec
xlat
mov
and
movs
dec
mov
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
adc
add
add
add
add
out
add
xchg
add
add
(bad)
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
aam
aam
sbb
stos
lods
jl
jl
repnz
cmp
cmp
push
or
sub
pop
pop
or
add
call
fs
adc
scas
lods
test
inc
ds
cs
dec
dec
int3
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
jl
jl
ss
push
pop
ins
outs
ins
pushf
xchg
pushf
and
and
scas
lods
jl
jl
ds
cs
push
or
call
inc
and
and
mov
cmps
movs
je
je
out
xor
xor
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
scas
mov
jle
inc
ds
xor
xor
dec
dec
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
scas
mov
jle
cmp
inc
sub
xor
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
mov
and
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
sub
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
fld
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
fiadd
aad
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
or
pop
inc
cmps
jg
lods
add
ret
les
add
or
xchg
cdq
jmp
add
scas
or
js
or
mov
fwait
add
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
pusha
add
mov
jmp
mov
fwait
mov
jnp
cmps
jp
imul
sbb
mov
imul
mov
pop
mov
pop
mov
stc
lods
inc
sbb
retf
jmp
xor
mov
cmp
dec
mov
dec
mov
pop
add
(bad)
popf
add
cwde
ins
sti
xchg
push
shl
add
or
(bad)
mov
mov
lea
ins
or
retf
cmps
inc
sub
sti
mov
sub
dec
add
add
mov
or
fild
and
mov
mov
imul
cmp
cli
mov
imul
mov
sub
fwait
mov
jmp
into
stos
mov
stos
add
add
fwait
add
scas
xchg
sub
or
mov
adc
test
es
mov
dec
mov
sti
mov
adc
cmp
sub
push
mov
add
dec
stos
fidivr
lds
movs
sbb
xchg
sub
cld
jnp
or
retf
ror
mov
mov
jnp
add
in
(bad)
fwait
ja
pushf
stos
jecxz
add
add
cli
add
ret
cmp
mov
sbb
stos
adc
mov
adc
add
cmp
ret
jp
add
int3
les
sub
inc
sub
push
jl
dec
sub
or
push
sub
out
stos
mov
sti
ret
pop
fadd
pop
mov
push
mov
dec
mov
xor
add
pushf
add
in
(bad)
out
mov
inc
int3
(bad)
jle
mov
pushf
les
(bad)
dec
dec
(bad)
dec
lods
(bad)
jp
enter
pop
push
les
add
stos
sbb
sub
mov
loopne
adc
mov
xor
mov
jo
and
lods
lods
xchg
retf
retf
leave
jp
mov
and
cdq
pop
retf
scas
ins
mov
sti
leave
lods
sbb
xor
retf
retf
int3
xchg
int3
retf
mov
retf
out
pop
retf
ror
mov
les
push
mov
xor
int3
or
test
leave
mov
int3
idiv
retf
leave
cdq
dec
stos
push
xor
mov
retf
mov
add
or
pop
and
and
call
retf
into
mov
into
jns
iret
hlt
cmp
jmp
iret
or
retf
iret
out
fmul
xor
in
in
into
adc
cmc
in
into
movs
sub
in
pop
shl
in
mov
ins
iret
into
pop
iret
into
cmp
sbb
or
cld
mov
pushf
ror
jge
or
lds
dec
rol
lods
rcl
rcl
lods
xchg
pusha
ror
add
shl
(bad)
rol
aam
inc
rcl
call
rcl
add
or
dec
or
xor
movs
imul
inc
ins
iret
push
mov
mov
add
retf
cmp
retf
cli
cld
rol
stos
(bad)
pop
rcl
sbb
inc
mov
aad
int
jmp
ins
aad
in
aam
dec
rcl
popf
aad
sub
outs
dec
sar
ins
rcl
in
rol
jle
fdivr
(bad)
ins
jnp
push
(bad)
into
adc
xlat
inc
cmp
push
rol
int
cmps
int
js
rcr
mov
xor
(bad)
std
cmp
jae
stos
add
(bad)
pushf
fisubr
fdivr
xlat
inc
sbb
add
add
shr
fdivr
rcr
fimul
std
fnsave
retf
fidivr
int3
(bad)
fst
dec
ins
(bad)
dec
fld
(bad)
dec
fisttp
fcom
leave
jnp
fbstp
fsubrp
ins
add
cmp
add
jmp
lods
xlat
cli
pop
loopne
fmulp
retf
ins
aad
sbb
test
in
fsubr
jge
mov
(bad)
pop
scas
into
or
adc
popf
leave
ficomp
aad
loopne
(bad)
mov
fisubr
(bad)
and
pop
jo
mov
xlat
rcr
pop
fcom
xor
xchg
lods
add
add
fisubr
outs
fprem1
dec
loop
push
loope
scas
into
inc
scas
loopne
mov
add
(bad)
cmp
das
fst
push
fld
leave
dec
pop
loopne
std
in
mov
push
in
out
sbb
in
fucomp
in
loopne
or
rep
into
adc
sub
mov
fcomp
fmulp
arpl
clc
dec
shl
out
pop
retf
out
(bad)
or
fstp
add
(bad)
out
std
fimul
mov
call
inc
stos
shr
add
in
fistp
add
jmp
mov
inc
jle
push
lods
jmp
das
int
and
out
outs
jmp
pushf
out
into
aam
inc
int
ins
or
xchg
inc
pop
fsub
jmp
cwde
ds
and
sub
xor
loopne
scas
jmp
and
cmp
push
ds
(bad)
cwde
mov
pop
out
fmul
pop
lock
stos
dec
adc
jle
icebp
outs
jmp
dec
out
leave
sahf
jecxz
sahf
add
lock
lock
out
in
add
push
out
ins
rcl
pop
rol
(bad)
psubsb
fiadd
repnz
add
sub
cli
mov
call
in
cmps
dec
out
xor
in
pop
jge
scas
ins
aad
pop
in
push
call
push
hlt
xchg
cmp
xor
lock
(bad)
rcl
mov
cmp
in
iret
les
addr16
mov
repnz
jge
cmp
mov
cmc
add
loopne
push
jmp
xor
repnz
sbb
out
outs
into
aad
out
cli
mov
push
(bad)
in
cli
lods
out
(bad)
in
neg
scas
add
das
stos
daa
lock
outs
jmp
sub
(bad)
fmul
pop
add
xor
mov
and
sub
cmp
add
aas
out
(bad)
jmp
call
fcomip
mov
fdiv
cs
cli
pushf
clc
fistp
sub
jmp
jg
stos
iret
fcomp
jmp
pop
test
retf
out
sti
inc
sahf
add
mov
pop
iret
repz
or
sub
lods
test
retf
ret
mov
std
xchg
scas
icebp
sbb
in
cld
fucomi
fadd
nop
arpl
xchg
mov
fcomp
xchg
xor
enter
je
fstp
push
push
and
(bad)
mov
cdq
jae
imul
fnstcw
clc
cmp
jmp
mov
mov
pop
retf
ins
sbb
pop
dec
mov
retf
mov
stos
in
mov
or
in
sbb
jg
lods
cmp
push
and
jp
xor
mov
pop
sti
cmc
(bad)
sbb
ret
push
or
cs
(bad)
push
push
aad
sahf
mov
xchg
xor
adc
jecxz
jmp
add
or
pushf
bound
xor
ror
repz
loop
enter
jmp
xchg
fs
xchg
hlt
test
stos
mov
add
sbb
mov
inc
or
pop
adc
sub
jne
mov
aad
jbe
add
clc
int3
add
call
adc
jne
push
ret
pop
inc
lods
push
pop
xchg
fcomp
adc
dec
mov
(bad)
sahf
popf
fwait
push
inc
mov
push
mov
test
or
fsub
xchg
push
push
sub
pop
imul
mov
pop
loop
imul
addr16
pushf
clc
mov
mov
das
adc
adc
jb
daa
xchg
jbe
pop
mov
addr16
mov
mov
pop
(bad)
jle
mov
lds
ja
cmc
(bad)
fst
int
pushf
popa
or
retf
mov
sub
lea
dec
imul
push
pusha
ins
sub
loopne
adc
pop
cmp
push
jno
pushf
push
xchg
lds
pop
push
cli
cld
push
fdiv
adc
sahf
test
adc
sbb
or
pushf
pusha
push
pop
xor
cmp
mov
popa
enter
cmp
mov
call
cs
sahf
je
(bad)
ins
in
call
jno
sbb
inc
dec
daa
jle
nop
cdq
test
call
and
jb
xor
sub
push
fidiv
jnp
repnz
and
push
repnz
push
retf
nop
push
push
pop
nop
dec
xor
xor
pop
or
inc
test
jmp
popw
adc
int
test
scas
lds
mov
mov
cmp
sbb
lea
pop
jne
mov
mov
mov
lea
in
mov
shl
mov
push
stos
add
cmp
je
fucomi
jp
int
pushf
shl
les
mov
or
jmp
mov
sbb
xchg
or
add
lods
add
adc
jne
cmp
cmp
into
dec
fldenv
popa
lea
(bad)
fsubrp
or
movs
daa
add
cmps
adc
and
lahf
mov
xor
leave
rcl
popf
sbb
dec
ret
aam
xchg
inc
rol
fiadd
mov
mov
and
js
xlat
outs
pop
fwait
xor
push
imul
push
imul
ss
loop
cld
int3
push
ja
mov
clc
jo
xchg
idiv
cwde
lds
xor
dec
xchg
fs
push
bsr
dec
inc
jle
(bad)
mov
pop
shl
jb
xchg
into
aam
xchg
pop
jo
out
dec
xchg
mul
das
out
adc
jne
addr16
sub
sub
int
ffreep
adc
loop
xor
and
sub
(bad)
aam
(bad)
(bad)
jl
dec
rcr
jge
(bad)
push
aaa
jmp
int3
fbstp
bound
xor
cli
jne
adc
mov
(bad)
sub
pop
mov
je
push
jae
pop
fsub
(bad)
pop
cmp
sub
(bad)
jecxz
cmp
inc
das
pop
cli
sti
pop
adc
inc
mov
mov
or
xchg
sub
out
jle
sbb
or
adc
into
ins
fsub
mov
mov
push
push
sbb
aam
fdiv
(bad)
mov
jb
nop
and
push
cs
fadd
mov
and
imul
cmp
cmp
sbb
pop
loop
aaa
sbb
and
pop
idiv
pop
cmp
and
sub
or
(bad)
shl
and
dec
xor
jmp
inc
add
xchg
cmp
cmp
(bad)
scas
xchg
test
ror
loope
and
xchg
pushf
inc
in
xor
or
lods
movs
daa
lahf
push
lods
mov
xor
pop
inc
(bad)
adc
(bad)
adc
fwait
push
sub
adc
(bad)
es
xchg
mov
mov
loope
and
call
jo
cmp
cmc
ss
xchg
mov
clc
push
inc
bound
push
pushf
sub
pop
cmp
xchg
ss
add
mov
or
clc
leave
enter
fwait
aaa
cmp
or
inc
cmps
add
movs
daa
aaa
mov
retf
push
sub
sbb
imul
outs
push
cmps
add
sub
lea
mov
pop
inc
sub
repnz
leave
jae
bound
bound
sar
into
adc
add
xor
mov
ins
adc
push
inc
jmp
(bad)
jno
setle
std
sub
stc
lds
inc
fs
mov
push
xchg
cmps
xchg
sub
gs
xlat
add
dec
cmp
xchg
mov
mov
sub
adc
add
and
add
sub
xlat
or
mov
mov
(bad)
mov
sbb
push
mov
nop
xchg
mov
arpl
sub
rcl
(bad)
adc
adc
mov
mov
lea
ins
into
jbe
xchg
add
xor
mov
push
and
pop
rcr
in
pusha
mov
push
scas
je
push
jb
mov
ret
repz
and
xlat
ficom
mov
or
pusha
out
mov
jge
pop
dec
mov
mov
(bad)
pop
movs
inc
xor
data16
pop
mov
or
and
fld
xchg
mov
aam
add
push
mov
adc
mov
sbb
js
(bad)
mov
push
sub
add
sbb
and
pop
gs
cmp
push
imul
pop
mov
inc
and
fsub
inc
outs
add
mov
mov
fistp
loopne
dec
shl
fwait
cld
pop
aam
js
dec
push
lock
sbb
add
lds
movs
add
lds
mov
cmp
adc
aad
bound
inc
cwde
in
out
or
int3
push
mov
ret
icebp
mov
mov
pop
data16
mov
xor
sub
xchg
cmp
jo
push
loopne
rcl
mov
ins
jl
or
mov
jmp
js
aas
into
jo
dec
lods
out
xlat
hlt
aad
mov
outs
jge
test
add
pop
rol
pop
idiv
or
add
setnp
pop
imul
lds
arpl
enter
lea
popa
mov
ds
add
and
shr
cmps
sbb
fucomi
mov
fist
cmp
mov
pop
int
sbb
mov
data16
mov
mov
xlat
jnp
mov
mov
sub
mov
call
loop
push
add
adc
sbb
mov
dec
mov
test
or
loopne
fdivp
enter
sbb
mov
cdq
pusha
add
pushaw
or
pop
clc
iret
add
fld
inc
cmps
pop
iret
xchg
into
test
fild
cmps
push
je
cs
(bad)
imul
dec
aas
jg
fucom
pop
pop
cmp
vmovdqu
xor
mov
xor
cmp
fadd
adc
jno
ins
pop
in
jp
jp
push
loopne
pop
retf
pop
mov
inc
adc
mov
xlat
aad
div
out
stc
iret
(bad)
dec
mov
push
pop
cmp
pop
add
inc
jle
and
mov
fcomp
dec
jns
sti
jnp
mov
xlat
cmp
(bad)
test
push
pushf
dec
jg
lock
bswap
fiadd
cmp
xchg
cld
mov
mov
and
pop
cli
fcomp
mov
in
fdivrp
pop
sar
jmp
(bad)
sti
rcr
stc
mov
cmc
sub
xchg
jle
iret
pop
sti
cmc
push
(bad)
jmp
iret
add
test
inc
add
cmp
or
xor
add
jnp
pop
dec
add
imul
or
or
sbb
or
jns
daa
jns
xlat
jle
push
jnp
inc
jnp
xchg
jg
xlat
jns
cmp
inc
jle
sar
jns
xchg
jle
xlat
jae
mov
adc
add
inc
aas
or
add
pop
lock
mov
cmp
jns
mov
sub
xor
jbe
ja
dec
xor
mov
xor
mov
or
jle
mov
repz
adc
imul
inc
test
inc
rol
nop
xchg
daa
ins
pop
push
add
add
jo
cld
xlat
jle
xlat
xchg
jp
nop
mov
xlat
je
dec
mov
daa
jo
xlat
je
dec
jge
(bad)
jne
inc
test
dec
inc
inc
add
rol
inc
test
fadd
mov
or
mov
xor
cwde
fdiv
sub
stos
test
mov
sbb
xchg
pop
jne
mov
and
jl
cmps
add
push
es
push
sbb
dec
jge
add
ja
loopne
mov
mov
daa
and
fcomp
jne
sbb
cwde
add
mov
retf
out
dec
inc
add
lea
lea
jbe
push
adc
inc
inc
test
mov
ret
xlat
xchg
xchg
jg
xchg
add
inc
adc
xor
in
aaa
jo
mov
sbb
jg
inc
test
mov
push
sub
and
mov
add
mov
lea
add
test
add
pop
jno
sub
sub
sub
add
je
xor
sub
aad
jge
mov
sub
nop
xchg
push
leave
xchg
jp
xchg
push
cmp
xchg
mov
xchg
xchg
pop
leave
xchg
add
jg
sub
mov
dec
mov
inc
imul
clc
mov
mov
and
xchg
pop
rcl
leave
xchg
inc
add
jmp
pusha
test
popa
jns
jle
cdq
sbb
sbb
xchg
inc
cmps
test
mov
idiv
test
cmp
xchg
pop
cmp
sbb
fld
cdq
xchg
mov
xchg
jns
mov
sub
push
jbe
mov
xor
test
xchg
push
jbe
xchg
dec
sbb
dec
jns
mov
aaa
add
xor
aaa
jmp
push
cwde
inc
inc
sub
xchg
fcom
xor
popf
mov
lea
popa
pop
nop
(bad)
xchg
in
add
ja
js
jo
sbb
rcr
jns
call
cdq
cdq
sub
test
fwait
or
lahf
pushf
mov
ror
sar
xchg
stc
xor
addr16
mov
leave
xchg
adc
pop
cwde
add
stc
xchg
fisubr
mov
fwait
jmp
jbe
call
xor
xchg
add
mov
add
or
ror
test
(bad)
ficomp
mov
mov
sbb
dec
test
jmp
(bad)
mov
add
lahf
cwde
sub
rcl
pop
cmp
test
call
and
pop
fwait
sbb
push
sbb
xchg
mov
mov
jmp
add
mov
fiadd
or
sbb
leave
mov
sub
cmp
add
mov
ja
cwde
ins
sub
jns
sti
rol
mov
or
test
leave
fwait
es
xchg
cmp
inc
jo
arpl
popf
sbb
mov
dec
stos
push
sbb
mov
xchg
popf
sub
push
adc
stos
mov
pop
mov
retf
lods
jbe
test
stos
sbb
movs
mov
cmp
jns
inc
mov
cmp
xchg
xor
popf
pop
retf
sub
sub
adc
stos
mov
test
sbb
push
cmps
ficom
fst
sbb
fisubr
and
jmp
mov
push
aas
cdq
mov
or
pop
mov
cdq
xchg
mov
xchg
inc
sti
stos
xor
test
mov
lock
(bad)
fiadd
sub
sub
call
ins
test
test
sub
xchg
imul
mov
cmps
mov
lods
push
dec
stos
pop
sbb
retf
pop
mov
add
jmp
jne
mov
call
mov
jmp
push
mov
xchg
rol
cmp
fist
sbb
pusha
mov
imul
xchg
inc
fisubr
and
(bad)
add
dec
mov
push
and
mov
jns
push
or
mov
inc
mov
pop
mov
jmp
mov
fwait
loope
mov
mov
ret
stos
mov
jnp
push
jp
(bad)
or
sar
fist
scas
retf
mov
mov
retf
mov
mov
jnp
mov
mov
fnstenv
mov
and
add
mov
push
pop
stc
test
fist
jns
dec
fs
or
lds
rol
jge
add
jp
lds
mov
mov
rol
test
(bad)
xor
mov
dec
ret
jns
xchg
scas
mov
stos
mov
test
lods
ret
les
mov
adc
mov
stos
xchg
fisubr
mov
ins
or
stos
pop
sub
inc
mov
int
mov
dec
call
xchg
jns
ins
sub
mov
test
mov
pushf
add
rol
and
inc
mov
sub
call
scas
jmp
ret
fdivr
loopne
ds
mov
mov
or
push
in
mov
cmc
mov
mov
jg
fsubr
mov
mov
or
add
cld
mov
sub
jecxz
ret
(bad)
shr
adc
pop
sub
dec
shl
inc
call
mov
jl
pushf
or
sbb
mov
movs
ficomp
mov
sub
dec
cmp
mov
mov
in
in
mov
fwait
mov
sbb
out
into
push
pop
(bad)
push
mov
pop
iret
xor
mov
imul
daa
jl
add
xchg
pushf
int3
leave
mov
and
iret
xor
mov
cmp
fsubr
xor
push
retf
sbb
push
mov
retf
shl
jl
jae
rcr
mov
add
cmp
jl
inc
in
xchg
(bad)
ret
retf
fadd
adc
cmp
aam
ret
int3
dec
popf
int
sbb
cli
cli
into
rcr
pop
(bad)
shr
or
ds
sar
mov
shr
sti
mov
inc
mov
pusha
jge
mov
stos
jecxz
mov
pushf
cmps
es
mov
into
jg
xlat
dec
popf
xchg
cmp
into
sub
mov
sbb
cmp
stos
jae
int3
dec
jmp
lahf
sub
shr
aam
stc
iret
in
retf
ds
into
jmp
(bad)
cmc
mov
bound
test
fadd
lds
aad
cmp
cmp
or
std
fsubr
mov
dec
adc
pop
and
in
ins
int3
(bad)
mov
lahf
sub
jge
fisttp
fst
(bad)
fstp
jo
mov
fstp
pop
sub
popf
dec
(bad)
retf
xlat
xchg
inc
fst
data16
scas
inc
jge
jmp
mov
(bad)
loop
int
cmp
jmp
sub
sbb
test
xlat
ficomp
outs
std
sar
in
mov
mov
add
jmp
iret
xchg
std
(bad)
fstp
mov
(bad)
add
retf
add
ins
fnsave
sbb
leave
(bad)
sahf
sbb
std
mov
pusha
or
pop
scas
loope
in
sar
mov
lods
or
test
shl
xlat
fidivr
mov
fnop
std
in
dec
xlat
add
rcr
fbld
in
sbb
setle
daa
dec
out
(bad)
aam
sbb
ins
mov
test
into
sbb
out
pop
in
in
call
fcmovnu
lea
jb
fnstenv
loope
pop
jmp
out
fisubr
loop
(bad)
out
out
call
xlat
es
call
jmp
and
loop
sar
loopne
pop
aam
scas
fidiv
xchg
xchg
xor
mov
add
out
jle
ins
add
inc
scas
loope
out
iret
das
popf
jecxz
cs
into
(bad)
push
fist
dec
in
lods
ficom
and
(bad)
dec
in
lods
ror
iret
icebp
scas
(bad)
frstor
out
bnd
test
out
mov
sub
bswap
call
push
loopne
dec
out
sahf
jmp
pop
jecxz
jle
stos
into
fst
aad
(bad)
jne
icebp
cdq
jle
popa
outs
jmp
mov
cdq
mov
adc
add
ds
cs
(bad)
dec
jmp
jb
add
fst
xor
or
leave
jle
mov
jmp
fcomip
in
fdiv
outs
in
int
aad
cdq
in
lahf
fwait
in
nop
jge
std
push
jmp
inc
iret
icebp
mov
lock
icebp
cmp
in
outs
shl
out
hlt
inc
lods
jecxz
scas
loope
push
add
in
pop
scas
loope
dec
out
lahf
fidiv
pop
out
inc
pop
cmc
std
mov
jbe
fisubr
lods
pop
not
sbb
(bad)
into
icebp
and
pop
(bad)
neg
push
cmc
ins
push
popa
scas
hlt
mov
stc
mov
jmp
hlt
pop
pop
cmc
mov
cmc
outs
iret
cmc
jne
hlt
dec
(bad)
es
cmc
fld
cmc
pop
mov
mov
hlt
pop
jg
add
cmc
inc
mov
or
sub
out
xchg
aas
mov
push
clc
mov
test
mov
sti
fcmovnu
sti
leave
mov
mov
test
pop
lahf
cli
pop
call
(bad)
sti
retf
mov
(bad)
scas
not
pop
div
cli
je
repz
iret
(bad)
into
hlt
push
outs
cld
xchg
in
mov
sbb
repnz
push
or
sbb
sub
pop
add
dec
add
mov
xchg
dec
pop
lahf
pop
add
xchg
xchg
test
add
mov
xchg
mov
(bad)
cwde
cmp
into
lods
mov
ror
mov
call
pop
leave
retf
pop
jns
add
lods
fbld
shl
lods
fmul
fsubp
ret
xchg
ss
sbb
iret
sbb
push
test
shl
daa
push
sbb
and
xlat
es
mov
fwait
cld
sbb
inc
pop
xchg
jno
movs
pmaxub
xor
scas
rcr
mov
shl
mov
pushf
leave
push
push
shr
jno
adc
adc
(bad)
or
jae
and
sub
sub
or
scas
je
add
jne
mov
or
nop
ds
movs
imul
aaa
gs
out
push
inc
aam
xor
xchg
mov
outs
fcmovnb
mov
cdq
and
dec
push
bound
dec
into
mov
xchg
lea
mov
mov
push
gs
arpl
movs
push
adc
shl
in
or
ror
inc
jp
cli
jge
std
arpl
pop
xchg
mov
in
sbb
in
jo
test
or
test
imul
sahf
out
neg
outs
cmp
ds
cmc
gs
bound
adc
cmc
pop
ss
jne
call
inc
popa
movs
adc
popa
mov
inc
sbb
test
sbb
pop
lahf
push
add
fstp
push
movs
pop
pop
adc
jmp
adc
inc
(bad)
fistp
mov
lahf
jns
lea
xor
adc
cmc
mov
mov
gs
dec
xor
mov
add
mov
mov
in
bound
imul
rcl
out
clc
loop
popa
scas
test
or
cmps
dec
gs
mov
sbb
push
jns
and
sbb
jnp
add
or
or
xchg
inc
lds
pop
add
pop
lea
cdq
mov
ss
adc
add
adc
cmp
add
dec
mov
dec
stos
lods
mov
shr
stos
stos
push
cmp
push
int3
or
mov
mov
add
mov
lods
push
stos
push
or
or
scas
sbb
pop
stos
add
movs
and
adc
mov
ins
mov
mov
aam
lods
mov
ret
scas
retf
dec
retf
ins
call
es
mov
dec
ret
add
sub
les
mov
or
(bad)
leave
dec
mov
mov
xchg
push
in
sub
lods
xor
cmp
xor
scas
mov
in
(bad)
in
mov
mov
add
stos
jno
aam
jnp
pushf
sub
daa
inc
or
aam
add
repz
push
in
dec
adc
cmp
xor
dec
xor
mov
lahf
pop
dec
dec
(bad)
(bad)
fs
fnsave
and
(bad)
iret
mov
vpmadcswd
add
fs
inc
jno
js
int
(bad)
xchg
dec
xor
jo
fdiv
mov
nop
mov
cmp
xor
jecxz
scas
xor
jns
push
js
jns
cmp
xchg
rcl
pop
push
stc
fst
xchg
(bad)
ffree
out
xchg
out
push
xchg
(bad)
je
ins
(bad)
lods
in
popa
adc
adc
repnz
in
lods
jmp
int
aas
cmp
idiv
jg
hlt
fldcw
jbe
aad
iret
std
rol
dec
ss
out
imul
inc
hlt
addr16
outs
jge
repnz
xor
(bad)
push
jmp
jg
loopne
hlt
sub
test
cmp
in
xchg
mov
adc
jge
pusha
mov
sub
add
xor
dec
les
loop
xchg
cmc
sbb
sbb
or
push
mov
or
mov
and
dec
add
add
sub
cmc
mov
nop
mov
cmp
loop
and
cs
xchg
lea
fld
adc
dec
out
pop
pop
dec
arpl
ins
or
push
xchg
in
pop
xchg
lods
cmp
add
movs
fidiv
ror
dec
fs
outs
sbb
cld
add
and
xor
std
enter
lods
xchg
jle
sbb
(bad)
(bad)
cmp
sbb
xchg
push
xchg
arpl
xor
add
sbb
test
pop
movs
and
mov
enter
xor
cmp
jno
pushf
bound
xchg
pop
aas
adc
xchg
mov
cmp
popf
int
jle
mov
ss
int3
dec
pop
(bad)
adc
movs
mov
cdq
in
sub
xor
rol
test
sahf
dec
inc
pop
cmp
push
adc
add
addr16
or
xor
and
hlt
mov
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
push
xor
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fidivr
mov
add
xchg
imul
mov
push
inc
or
fwait
pop
mov
mov
mov
sub
test
ins
ins
jno
jnp
fmul
ret
sbb
popa
sbb
(bad)
fld
mov
mov
pop
out
ss
dec
sub
out
mov
mov
outs
jp
mov
mov
jge
fdiv
dec
lods
adc
jmp
loope
mov
inc
dec
mov
mov
push
fdiv
lods
push
outs
add
sbb
sbb
cwde
or
xor
call
push
xor
pop
inc
lods
ret
mov
lods
fild
fcomi
ret
lods
and
mov
push
pushf
pusha
loopne
mov
add
pushf
pop
adc
icebp
xchg
jnp
fs
pop
enter
(bad)
mov
jne
inc
gs
inc
or
add
cdq
mov
out
das
xchg
mov
int3
fadd
mov
and
int
cmp
loopne
(bad)
cdq
pop
dec
out
add
adc
fs
sbb
popa
cs
loope
add
ins
(bad)
repnz
add
scas
fadd
cmp
(bad)
and
pop
inc
sbb
add
fsubr
fs
jmp
xor
fstp
push
or
sbb
cmp
mov
sub
cmp
add
mov
ins
adc
aas
(bad)
jp
ret
jbe
in
out
ja
retf
mov
jns
jmp
(bad)
(bad)
icebp
adc
inc
gs
pop
add
mov
push
mov
rcl
xor
pop
or
sar
jl
mov
mov
cdq
in
cmp
fidivr
ins
loope
fistp
push
(bad)
repnz
dec
fsub
mov
lds
ret
mov
int
mov
mov
push
cmp
in
or
popf
ss
adc
push
or
mov
pusha
add
push
mov
lea
mov
mov
mov
add
add
das
inc
mov
pop
mov
aad
neg
inc
mov
mov
sub
fsubr
sbb
mov
sbb
inc
mov
pop
xor
mov
mov
jp
int3
add
(bad)
aad
xor
xchg
lock
push
jbe
fsub
mov
pop
int3
aam
cmp
push
sbb
xchg
in
jge
mov
mov
fs
cmp
fldcw
repnz
iret
lods
xlat
mov
jmp
mov
aam
(bad)
stc
adc
inc
mov
in
pop
pusha
push
and
sbb
ins
xor
popf
hlt
stos
test
stc
retf
hlt
pop
xor
or
pop
inc
jmp
daa
mov
icebp
test
push
or
cli
ja
scas
jecxz
(bad)
hlt
pop
pop
repnz
repz
repnz
inc
cld
leave
dec
dec
outs
outs
xchg
mov
fadd
sbb
adc
mov
jnp
push
imul
pop
test
fs
push
jae
inc
jl
(bad)
addr16
xchg
ins
jmp
push
ins
mov
gs
rol
xchg
cmps
jg
es
(bad)
jl
pop
imul
js
es
sbb
loope
outs
hlt
push
and
push
enter
(bad)
push
push
outs
sub
jge
addr16
mov
enter
xchg
mov
or
jbe
rol
mov
outs
ret
pop
or
jp
es
data16
push
je
sbb
xlat
jge
ja
push
push
and
add
mul
inc
jo
push
dec
test
xchg
test
pop
push
jle
jl
pop
or
pop
add
sub
jno
or
cmps
add
pop
and
test
jb
out
xchg
enter
mov
jbe
js
arpl
xchg
inc
pop
cmps
add
mov
jp
cmps
outs
cmp
mov
ja
xor
xchg
add
cmp
push
out
inc
push
lea
dec
xchg
sub
inc
or
add
push
(bad)
not
arpl
ins
imul
pop
sar
mov
(bad)
repnz
pop
imul
fcomp
out
fdiv
test
fs
lea
mov
mov
jg
pop
pop
cmp
add
jp
xchg
inc
test
call
pushf
xor
sbb
idiv
xchg
jne
jno
sub
enter
xchg
gs
push
pop
jle
push
jae
sbb
shr
pop
loopne
jle
cmps
mov
cmp
jne
(bad)
ja
outs
lahf
cmps
arpl
dec
addr16
and
fsub
xchg
mov
pop
sbb
mov
gs
add
imul
ins
mov
je
push
pop
push
cmp
ss
jmp
repz
jns
pop
ins
sbb
xchg
icebp
xchg
dec
jnp
pop
jp
test
jg
xchg
outs
leave
enter
xchg
stc
push
test
test
cmps
outs
add
adc
stos
aaa
jl
clc
pop
sbb
sub
inc
leave
outs
push
js
mov
xchg
ins
mov
gs
mov
test
pop
call
pop
jbe
daa
data16
outs
cmps
xlat
mov
xchg
lods
sub
movs
pushf
std
push
xchg
prefetcht2
call
clc
sub
xlat
add
add
cmp
push
outs
push
push
and
mov
cmps
pop
sub
xor
je
push
loopne
cdq
movs
(bad)
mov
xchg
sbb
arpl
imul
mov
or
push
xor
mov
lds
pusha
gs
fsub
xor
mov
jnp
mov
leave
jbe
fld
inc
(bad)
mov
xchg
adc
cwde
push
test
cmp
cwde
pop
mov
es
ins
add
(bad)
popa
imul
fwait
jle
jbe
push
invd
ins
mov
pusha
inc
cdq
and
out
out
or
mov
outs
data16
add
dec
popa
movs
push
push
jne
push
xchg
xchg
imul
xchg
mul
push
mov
test
xor
jp
imul
sbb
jp
cwde
call
test
sbb
pop
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
popf
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
sub
cmp
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
imul
jmp
xchg
xor
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
push
jo
sub
out
cmp
mov
or
stos
lods
scas
jmp
mov
imul
mov
or
fwait
stos
inc
pusha
mov
sub
mov
add
mov
sub
fwait
mov
inc
mov
imul
(bad)
scas
daa
mov
leave
jmp
add
pusha
add
loopne
mov
(bad)
cmp
mov
sub
sbb
fwait
mov
jmp
mov
add
pop
mov
or
inc
add
mov
or
fwait
mov
or
fidivr
cmp
retf
mov
imul
dec
rol
fwait
add
scas
xchg
cmp
or
mov
push
mov
jmp
dec
nop
mov
mov
cmp
retf
add
nop
jmp
or
popa
retf
mov
sub
(bad)
sub
jo
stc
sbb
jp
push
or
shr
mov
nop
fisttp
lock
(bad)
sbb
or
stos
sub
add
sbb
out
shl
ret
scas
(bad)
add
add
cld
ret
aas
ins
add
fcmovb
inc
or
aaa
add
cmp
add
add
add
les
xchg
les
ret
inc
pushf
les
mov
push
jl
or
xor
lds
(bad)
out
stos
mov
dec
les
(bad)
pusha
sbb
dec
or
dec
(bad)
push
jl
cmp
enter
les
push
in
mov
les
enter
jle
mov
dec
lods
add
ins
lds
(bad)
or
enter
pop
add
xchg
mov
and
add
test
out
js
and
add
pop
add
leave
mov
retf
retf
add
inc
add
nop
retf
retf
add
inc
call
lds
add
lods
xchg
retf
int3
mov
retf
retf
int
mov
retf
out
or
(bad)
int3
(bad)
mov
inc
int
cmp
cmp
xchg
fsubr
cmps
mov
mov
int3
or
or
lock
retf
int3
lds
retf
add
iret
(bad)
sbb
push
rol
adc
pop
xor
ror
sti
pushf
add
or
paddusw
ror
rol
popf
sar
cmp
sbb
add
ror
call
shl
cmp
sbb
add
or
mov
lods
rcr
pushf
rcr
cmp
sub
iret
cmp
adc
into
and
shr
sub
push
pop
shr
popf
ror
ins
aam
cmp
sbb
sub
shl
cld
shl
ins
rol
shr
mov
push
sbb
and
mov
iret
sbb
sti
int3
rcl
pop
aad
or
cmp
rol
rol
add
sbb
bound
pop
loopne
addr16
(bad)
sbb
and
ins
cmp
push
sub
push
mov
cwde
sbb
(bad)
in
aad
popf
aad
sbb
fisttp
or
jg
mov
mov
and
iret
push
dec
fimul
aad
or
and
push
pushf
aad
sub
xchg
lock
xlat
xor
shl
(bad)
push
sub
cli
jl
ret
mov
fiadd
and
das
imul
popf
(bad)
lods
sar
std
rcr
dec
fidiv
fdivr
(bad)
inc
pop
(bad)
in
fld
sar
ficom
fnstcw
shl
int
ds
ins
fadd
in
fst
fst
mov
int3
lods
sub
push
sahf
fistp
push
loopne
fucom
hlt
pop
add
push
(bad)
xchg
(bad)
loopne
pop
loop
(bad)
ror
(bad)
sbb
retf
out
jge
(bad)
popf
shl
hlt
pop
loopne
pop
jecxz
or
lds
std
int3
(bad)
mov
stos
int3
sbb
out
fst
cs
pushf
add
nop
add
or
and
shl
ds
out
iret
cmp
dec
in
push
retf
bound
cmp
in
and
pop
push
sar
cmp
adc
stc
sbb
clc
dec
(bad)
lods
fstp
shr
fmul
fidivr
shl
aam
sahf
aam
sahf
call
(bad)
or
call
add
sti
dec
loop
ins
fst
call
into
out
scas
fstp
shl
iret
push
jge
inc
inc
stos
lock
add
jmp
out
retf
cmp
(bad)
cmp
(bad)
in
jmp
cld
fild
loope
into
out
push
loopne
fucomp
retf
dec
jmp
std
xlat
or
loop
shr
push
jmp
sbb
sub
inc
sub
jg
rcr
sahf
(bad)
jo
iret
xchg
cmp
fdivrp
out
rcr
(bad)
jmp
out
retf
(bad)
(bad)
jmp
outs
int3
(bad)
ins
lock
mov
in
add
shl
in
clc
pushf
iret
mov
dec
add
scas
jle
lahf
push
jmp
adc
mov
add
sbb
xor
out
cmp
pop
mov
inc
fadd
iret
(bad)
std
hlt
cli
out
sar
in
xchg
int
or
add
fmulp
sub
jmp
fnstcw
sbb
sar
mov
fild
out
xor
mov
call
int
fucomp
push
repz
out
popf
fisubr
pop
idiv
inc
out
neg
ins
loop
std
sar
add
icebp
push
(bad)
dec
aas
hlt
loope
in
repnz
mov
mov
out
psllq
loope
ficom
shl
jmp
pop
fidiv
cli
or
sub
add
bnd
stc
outs
dec
ror
icebp
cmp
sti
mov
add
pop
fild
out
mov
shr
jg
outs
int
mov
mul
in
push
std
xlat
pop
out
fldenv
(bad)
loop
popf
cld
adc
shr
cld
mov
mul
pop
cli
rcr
loop
lock
aam
outs
jmp
psubusw
lahf
mul
aas
cld
fstp
sub
hlt
cmp
not
aas
cld
mov
mov
test
rcl
push
mov
push
test
dec
imul
cdq
cmp
xchg
shr
jmp
test
sti
retf
jb
movs
fcomp
cmp
push
(bad)
cmp
mov
sti
mov
fstp
test
or
sti
or
stc
mov
mov
sbb
cmp
dec
retf
test
aas
sub
jmp
ins
jnp
jle
sub
and
je
xchg
xchg
sub
clc
cmc
dec
mov
adc
mov
lahf
movs
outs
add
popf
inc
jns
sub
sub
scas
loopne
dec
sbb
cmps
mov
ins
stc
cs
xchg
xor
mov
add
mov
jne
push
outs
fisubr
xchg
inc
jg
dec
inc
add
add
pushf
int3
loope
and
mov
call
das
add
cmp
push
scas
xor
dec
and
je
das
shl
aam
enter
ins
mov
xchg
mov
lea
mov
inc
add
sub
shl
loop
pushf
lea
inc
loop
cwde
rcr
jbe
cwde
xor
test
xchg
adc
ja
pop
pop
pop
es
adc
pusha
movq
jge
xor
xchg
pop
dec
mov
repz
mov
mov
inc
jne
push
ss
and
push
jl
push
(bad)
jmp
push
fs
add
sbb
or
or
sar
fcmovnu
add
sbb
cmp
cmp
xor
retf
imul
sub
push
xchg
imul
ror
cmp
adc
and
adc
call
push
(bad)
outs
sti
dec
fcom
lahf
mov
add
and
fadd
add
es
imul
daa
mov
add
clc
inc
mov
sub
or
test
clc
in
mov
pop
dec
adc
dec
ins
xchg
stc
mov
inc
push
mov
lock
dec
mov
cmp
cmp
es
das
or
push
jns
pop
mov
xchg
sti
in
out
sub
sbb
imul
mov
cmp
ss
jae
ss
push
inc
imul
or
test
fwait
js
loop
and
or
popa
dec
fiadd
imul
stos
mov
xchg
repz
scas
or
test
mov
jns
add
jmp
pop
xor
mov
shl
mov
into
test
es
mov
push
movs
cli
call
es
push
enter
aaa
(bad)
sub
sub
adc
add
imul
movs
mov
push
pusha
popf
(bad)
add
sbb
stc
jb
(bad)
cmp
mov
scas
les
push
mov
int
not
push
cmp
enter
sahf
sbb
or
enter
add
inc
and
retf
mov
sbb
sub
sbb
mov
or
xor
neg
inc
mov
fstp
fcomp
ror
les
ins
jge
mov
xlat
in
push
retf
enter
dec
or
stos
lea
mov
iret
dec
sbb
pop
mov
dec
sti
cmp
pop
inc
(bad)
lock
ins
xor
xchg
push
call
outs
stos
mov
rcr
or
mov
inc
push
pop
or
dec
xchg
dec
jbe
jg
ficomp
jae
mov
in
cwde
es
and
mov
in
xor
outs
test
fild
sbb
mov
sub
arpl
mov
ret
clc
rcl
dec
pushf
mov
or
outs
fwait
mov
cmp
loope
mov
and
rol
stos
mov
add
(bad)
cmp
sub
ret
(bad)
mov
in
jae
ss
mov
mov
sar
lahf
add
push
bound
fild
test
bound
sar
mov
js
adc
xor
jno
xor
pushf
xchg
cli
imul
and
mov
pop
je
clc
cwde
pop
mov
xchg
xchg
fdivrp
mov
call
(bad)
js
lds
ins
shl
rcl
or
addr16
mov
scas
pop
dec
mov
mov
adc
call
jnp
mov
add
arpl
adc
mov
(bad)
cwde
mov
pop
fsub
add
jbe
loopne
sbb
(bad)
leave
sbb
and
jg
dec
(bad)
sbb
in
mov
adc
xor
sub
inc
mov
jae
and
sub
outs
call
inc
fcom
sbb
pop
xchg
or
dec
es
jg
call
cs
push
or
pusha
sbb
inc
dec
pop
nop
mov
test
adc
xchg
into
imul
sub
stc
les
rol
ins
fistp
test
xchg
je
push
push
cli
inc
jmp
mov
inc
cmp
cwde
xchg
dec
imul
pop
movs
test
mov
mov
sbb
ret
ins
cmps
ss
add
popa
sahf
push
push
xor
sbb
inc
cmp
xchg
rcl
sub
push
jge
sub
dec
retf
test
or
sub
push
or
jb
jle
push
xchg
aad
adc
inc
bound
mov
imul
xor
mov
add
push
sbb
xchg
nop
lahf
aam
pusha
or
dec
cld
mov
scas
and
fsubp
adc
add
and
add
mov
push
or
fwait
mov
pop
(bad)
xchg
mov
lahf
imul
rcl
sub
imul
adc
ins
sub
xchg
ds
dec
mov
pop
mov
xor
cmp
cld
ds
int3
not
jbe
popf
in
lods
pop
popf
sub
les
movs
imul
jno
or
sbb
add
ja
sub
add
mov
or
dec
or
push
xchg
fsubr
test
sbb
clc
aad
ds
or
in
mov
sti
adc
pusha
neg
fdiv
imul
xchg
popa
adc
and
add
bound
leave
int3
add
sbb
mov
sbb
mov
fwait
and
add
(bad)
outs
ret
xor
xchg
mov
test
cld
(bad)
and
and
push
jno
push
pushf
loope
sar
nop
dec
or
aaa
mov
and
daa
mov
jb
jns
xor
ret
xor
push
add
inc
inc
addr16
sbb
rcl
jno
into
adc
mov
xchg
push
div
xor
fdivp
mov
ret
fmul
adc
aaa
mov
cmovge
sbb
aam
div
lahf
and
daa
pop
int
into
hlt
cmp
rcr
xor
repz
addr16
lahf
pop
loopne
call
lea
bound
jp
ret
xchg
adc
xchg
add
cwde
rol
push
pop
or
add
outs
fisttp
(bad)
in
outs
xchg
ja
mov
sti
rcl
ins
mov
in
xlat
fsub
data16
adc
cmp
dec
js
mov
mov
add
ins
cmps
fwait
retf
adc
cmc
xor
inc
out
sbb
js
pop
in
icebp
sub
adc
cmp
pop
add
gs
repnz
lahf
jl
sub
aaa
adc
repnz
out
in
aas
icebp
xchg
ja
fcomp
fbstp
retf
xor
stos
push
(bad)
xor
adc
aaa
mov
lahf
pop
jle
not
inc
mov
cmp
jmp
fidivr
lods
fwait
jge
popa
pop
sti
xor
push
pusha
mov
jge
pop
inc
fidiv
push
jecxz
jg
(bad)
jle
mov
xlat
add
mov
add
add
cmp
bswap
sbb
mov
mov
in
mov
frstor
stc
mov
(bad)
jp
ret
ds
pop
shl
cmp
pop
(bad)
jb
push
inc
icebp
fwait
scas
loopne
hlt
(bad)
js
in
jmp
push
cmp
shl
bound
int
push
(bad)
stc
mov
out
inc
lahf
jl
fwait
cmp
loop
fcomip
or
fisub
daa
add
sub
in
retf
(bad)
pop
mov
and
xchg
lock
ja
xlat
xchg
dec
clc
sti
mov
ret
iret
jg
aaa
ja
(bad)
jp
cmps
jle
xchg
jge
pop
jg
mov
jp
cwde
add
add
inc
loop
add
loopne
pop
cmp
push
xor
ds
sbb
xor
add
xchg
xlat
add
sbb
sub
and
cmp
or
add
jp
enter
jno
xchg
push
test
xchg
jnp
mov
lods
inc
jns
div
(bad)
jg
pusha
jge
fsub
mov
or
mov
in
arpl
mov
pop
fadd
jle
ja
push
push
pop
pop
or
push
test
in
out
ja
jp
adc
call
ss
cmp
xchg
cmp
mov
pop
mov
ins
pop
push
add
xchg
mov
adc
mov
sub
bound
push
or
rcl
inc
xor
or
add
jns
mov
addr16
xor
mov
inc
sbb
xor
ins
xchg
fadd
(bad)
jno
call
or
lods
fdivr
ds
jl
push
jnp
addr16
test
add
aaa
mov
sbb
cwde
jne
test
(bad)
dec
dec
dec
(bad)
sbb
add
xchg
inc
add
pusha
add
daa
mov
test
clc
mov
dec
js
add
xchg
mov
xlat
fdivr
or
pusha
xchg
js
sar
dec
pop
inc
cmp
lock
sub
out
add
add
add
xchg
xchg
inc
or
mov
repz
mov
xor
or
adc
mov
inc
cmc
dec
xchg
sub
mov
test
inc
inc
addr16
pusha
add
add
not
xchg
aam
lea
xchg
clc
xchg
xchg
aaa
(bad)
pop
mov
dec
leave
jl
pop
js
mov
rol
push
nop
test
cmp
and
ins
sub
pop
cwde
jg
add
call
jbe
cdq
pusha
enter
add
(bad)
jne
sbb
sbb
xchg
push
pop
xchg
data16
jns
popa
enter
xchg
xchg
cwde
xchg
xchg
push
xchg
add
fstp
pushf
inc
xchg
xchg
clc
fwait
rcr
xchg
(bad)
xchg
mov
xchg
push
test
mov
xchg
jb
jbe
mov
pop
stc
mov
jno
dec
xchg
push
leave
add
cwde
xchg
xlat
cdq
loopne
add
leave
xchg
jne
xchg
xor
sub
and
leave
jno
imul
add
pop
popf
fsubrp
jb
stc
xchg
sar
test
sbb
dec
add
test
lahf
movs
pop
sahf
jbe
xchg
enter
cmp
cwde
cdq
int
nop
inc
sbb
stc
pushf
dec
test
cdq
jns
cwde
fldenv
div
push
pusha
mov
out
js
fidivr
popf
inc
cmp
sbb
cdq
sahf
and
cwde
(bad)
(bad)
xchg
jecxz
nop
test
xchg
addr16
test
adc
xchg
mov
xchg
add
xchg
mov
cmp
pop
pop
call
add
cdq
out
add
pop
mov
xchg
cwde
xor
jl
xchg
into
leave
xchg
imul
mov
loopne
xor
mov
adc
xchg
pop
fiadd
ds
cmp
push
xchg
dec
sub
sbb
cdq
lahf
sbb
addr16
xchg
pop
dec
cmps
sbb
xchg
jl
dec
xchg
ds
js
mov
pop
dec
cwde
and
cmps
imul
adc
xchg
dec
mov
test
xor
lea
mov
push
push
or
add
add
pop
nop
lahf
jns
xchg
stc
xchg
xchg
inc
sbb
pop
xchg
stos
jmp
cmps
jne
lods
jmp
xchg
push
pop
stos
inc
inc
cmps
pop
mov
push
stos
stos
xchg
push
(bad)
cmps
sub
nop
jbe
movs
jbe
xchg
xor
cwde
and
sub
add
mov
cli
cmp
pop
test
or
stc
xchg
jge
xchg
je
cdq
out
cmps
call
mov
xchg
out
call
pop
adc
test
or
add
lods
sub
mov
leave
cmps
or
scas
dec
jo
pop
jo
cmp
call
or
repnz
add
fld
inc
sub
retf
stc
push
cmp
mov
retf
call
mov
call
xchg
cmp
fucomi
mov
leave
xchg
push
mov
dec
pushf
push
fwait
xchg
or
scas
and
aas
mov
icebp
fiadd
js
cmp
ror
stos
sub
push
jo
xchg
mov
xchg
leave
mov
xlat
or
(bad)
sbb
mov
leave
xchg
xchg
cmp
xchg
sahf
leave
and
jnp
xchg
pop
fwait
mov
jp
cmp
xchg
push
jp
xchg
mov
or
call
add
lods
pop
xor
jo
leave
sub
mov
leave
mov
retf
mov
mov
mov
lods
mov
mov
sti
test
mov
pop
push
mov
mov
fstp
fstp
cmp
or
jmp
mov
stc
mov
jmp
ret
mov
cmp
jmp
sub
lock
sbb
or
mov
nop
jmp
movs
cmp
mov
mov
xchg
retf
and
repnz
popf
mov
mov
fs
in
movs
dec
lods
test
stos
rcl
mov
push
movs
mov
sbb
clc
dec
(bad)
adc
add
shr
push
add
mov
or
stos
(bad)
ins
dec
mov
inc
(bad)
pop
fadd
mov
mov
cld
cmp
dec
xchg
outs
or
jo
lods
sbb
out
mov
mov
jmp
fwait
sub
sti
leave
sbb
xchg
sahf
sbb
(bad)
sbb
outs
dec
add
retf
stos
push
int3
or
inc
lds
mov
retf
enter
xchg
in
add
cld
ret
(bad)
idiv
lods
clc
or
mov
fild
mov
add
arpl
(bad)
add
int3
or
inc
lods
retf
or
cmp
pushf
(bad)
int3
mov
leave
pop
retf
inc
rcl
mov
rcr
fwait
test
and
add
imul
iret
sahf
stc
int3
loopne
sar
shr
or
xchg
call
(bad)
and
lods
jp
mov
xchg
stos
stos
or
and
mov
or
push
int
mov
stos
and
iret
repz
add
into
adc
mov
mov
inc
or
mov
retf
mov
(bad)
enter
cld
jp
js
int3
jnp
aam
cmp
adc
or
adc
dec
in
into
sub
sub
inc
sub
repnz
add
lock
movs
mov
cmp
xlat
mov
(bad)
fadd
cmp
sahf
ins
jmp
xchg
jns
js
iret
ss
ins
(bad)
rol
or
cmp
aam
cmp
pop
jp
xor
test
sbb
shr
cmp
xchg
sub
out
shl
or
mov
leave
movs
or
js
shl
retf
shl
jmp
inc
cmp
sub
cdq
arpl
aas
pop
(bad)
shr
and
rcl
sbb
repnz
pop
push
add
aam
cmp
sahf
mov
call
popf
rol
fsubr
mov
inc
jge
ret
jbe
mov
add
jo
and
fiadd
mov
ins
int
jl
xchg
mov
mov
ror
mov
pop
fiadd
push
scas
(bad)
jge
dec
(bad)
ror
inc
pop
xlat
loope
(bad)
dec
sub
je
retf
fdivr
fldcw
mov
mov
fscale
or
cmp
xor
scas
retf
fldcw
push
call
gs
fscale
in
(bad)
lods
fstp
loop
pop
in
(bad)
loopne
jl
aam
ficomp
lods
add
add
fdivr
iret
cwde
dec
loope
(bad)
loop
imul
or
bound
cmps
pop
loope
dec
fisttp
shr
add
(bad)
loop
rcr
popf
fmul
in
sbb
rcl
sub
mov
aad
mov
ret
dec
scas
fldenv
sbb
ret
cmp
pop
fisttp
sub
lods
inc
fsubp
mov
fcom
outs
out
ds
cmp
or
loopne
jle
mov
out
ds
(bad)
call
sub
xor
mov
rol
fidiv
into
jmp
fucomp
pop
pop
xlat
es
sar
sub
and
or
in
adc
fistp
out
jge
lods
jle
addr16
add
sbb
(bad)
(bad)
add
in
ss
add
jge
push
neg
in
mov
in
scas
in
and
out
dec
xlat
fstp
fbld
in
dec
lock
in
xchg
mov
cmc
cmp
inc
out
lock
int
rcr
outs
push
jmp
cs
int
mov
jecxz
pop
jmp
outs
call
int
je
xlat
in
jmp
dec
icebp
(bad)
pop
lock
icebp
arpl
int
(bad)
out
dec
loope
dec
out
(bad)
lock
jmp
(bad)
out
fwait
int
add
fadd
in
or
jmp
scas
loope
out
in
xchg
pop
(bad)
cmps
push
add
or
nop
add
(bad)
out
pop
test
int3
addr16
loop
add
imul
icebp
sub
sbb
cmps
push
mov
in
mul
div
xlat
jecxz
in
aas
lock
mov
popf
repz
clc
push
(bad)
rol
verr
pop
lock
mov
inc
sahf
repz
fldenv
in
lahf
out
cmp
(bad)
clc
movs
dec
icebp
xchg
int
rcr
add
repz
pop
jmp
pushf
lods
call
fucomip
jg
in
std
into
mov
pminsw
stc
push
aas
repnz
fwait
cmps
pop
hlt
retf
dec
and
loopne
mul
(bad)
fldenv
idiv
push
jbe
xchg
cmps
sahf
stc
cmps
push
clc
aaa
out
neg
addr16
mov
popf
cdq
out
(bad)
call
cli
xchg
or
sub
pop
add
sub
sbb
mov
sbb
add
mov
mov
xchg
xchg
sbb
stos
movs
mov
movs
pop
mov
mov
test
mov
xchg
test
fwait
popf
cmps
xchg
lahf
shl
movs
test
xchg
(bad)
fimul
mov
jmp
(bad)
out
mov
dec
jmp
fwait
add
cdq
push
mov
mov
jmp
push
add
push
pop
ds
fs
xor
cmps
enter
xchg
push
leave
and
(bad)
movs
test
dec
retf
xor
(bad)
call
add
sbb
xchg
sub
mov
xor
lds
add
cmps
mov
push
stos
iret
dec
in
adc
push
cdq
push
outs
mov
jno
xchg
adc
xchg
mov
setns
xlat
jnp
cmp
push
xlat
pop
xor
call
shl
mov
xchg
lods
inc
movs
les
dec
mov
push
inc
xchg
adc
call
sub
push
push
mov
js
stos
int3
test
cmps
jge
(bad)
(bad)
imul
jmp
xchg
imul
jecxz
sbb
jmp
int3
pusha
pop
in
inc
or
outs
cdq
fwait
aad
cmps
imul
xchg
fwait
aad
jmp
jecxz
adc
xor
daa
pop
sbb
cwde
and
dec
sti
mov
or
call
inc
loopne
fmul
ds
push
adc
adc
xchg
rcl
mov
adc
movs
push
mov
inc
mov
pop
sbb
dec
movs
add
mov
jp
xchg
aaa
add
ror
xor
jne
pop
mov
inc
push
call
xchg
movs
inc
clc
imul
call
pop
loop
pusha
in
gs
pop
je
xchg
cwde
popa
mov
mov
push
jmp
fld
add
or
mul
pop
add
stos
or
mov
jae
cmp
add
lahf
(bad)
data16
pop
call
cmp
mov
stos
scas
jb
sub
mov
cmps
ror
jp
and
neg
jmp
mov
lds
xor
popf
pop
cmp
xchg
jo
cdq
jmp
sbb
js
adc
add
test
sbb
rol
inc
push
mov
xchg
xor
outs
mov
mov
mov
cdq
test
sub
out
jmp
add
fild
test
ins
scas
adc
push
pop
jo
and
scas
mov
mov
push
xchg
stos
int3
into
ss
pushf
xor
add
neg
test
(bad)
sbb
ins
add
sar
push
jl
leave
cmp
jno
or
xchg
and
add
mov
sub
inc
push
cmovl
sbb
mov
dec
add
mov
and
rol
mov
scas
add
and
add
loopne
push
mov
cmp
push
jle
jecxz
push
rcr
loop
pop
add
jns
xchg
daa
xor
sub
dec
jns
mov
sbb
in
fcmovnbe
loop
sub
dec
fsub
and
in
test
mov
cmp
stos
arpl
cmp
push
inc
into
mov
call
cmp
iret
jecxz
mov
xchg
out
imul
jns
call
adc
mov
std
push
lods
(bad)
lock
cli
mov
push
dec
nop
mov
(bad)
xor
repz
and
repnz
call
mov
sub
pusha
in
daa
shl
xor
adc
aas
xchg
add
in
push
sbb
jo
sub
pop
ret
(bad)
mov
mov
pusha
cld
loop
and
(bad)
or
push
dec
test
sbb
add
inc
ret
inc
and
adc
add
ins
pop
push
xchg
and
xchg
and
xchg
mov
push
push
mov
and
int
inc
test
hlt
fst
jns
inc
cmp
mov
(bad)
loop
add
cmp
arpl
jmp
test
mov
pop
jg
xor
jb
push
les
and
sbb
adc
or
test
xor
xor
mov
or
inc
dec
mov
xchg
cmovnp
dec
dec
ret
shl
xchg
mov
dec
leave
leave
bound
mov
(bad)
dec
and
or
push
call
pop
je
mov
sbb
sbb
inc
push
xchg
add
int
inc
test
and
addr16
mov
es
callw
dec
adc
jno
mov
cmps
cmp
or
inc
(bad)
adc
mov
xchg
xchg
xlat
repz
cmp
sub
adc
cli
cld
addr16
pop
hlt
nop
or
imul
pusha
inc
das
dec
rcl
dec
test
xchg
stos
adc
sub
test
pop
cmp
call
inc
jne
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
cmps
dec
loopne
mov
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
int
outs
ja
fcmovnu
cli
div
xchg
loop
idiv
xchg
sub
and
loopne
cmp
pop
les
aaa
mov
test
add
inc
add
add
pop
int3
jne
jae
jnp
jmp
shld
loop
mov
gs
je
lock
(bad)
pop
push
lock
js
loopne
sbb
add
bts
fs
mov
or
mov
sar
das
jp
pop
(bad)
jb
mov
and
pop
mov
fisttp
mov
dec
lods
fdivp
xor
adc
out
and
mov
and
cs
popa
popa
pushf
jecxz
mov
pop
xor
xor
fcomp
arpl
and
mov
inc
int3
loop
cli
js
dec
lea
fwait
dec
bound
sbb
(bad)
mov
jno
popa
jl
es
inc
xchg
add
iret
pop
mov
jbe
jns
cld
gs
cmps
mov
or
jno
out
cld
bound
outs
test
and
cli
mov
add
mov
dec
or
dec
repz
add
jl
cmp
std
mov
adc
rol
lock
lock
clc
rol
sub
and
into
lods
cmps
xchg
or
ror
scas
mov
fld
in
fxch
mov
outs
lea
int
ins
inc
mov
xchg
xchg
stos
imul
and
push
mov
fisttp
mov
sub
mov
mov
jecxz
aas
cdq
(bad)
pop
push
add
and
popf
push
outs
mov
add
inc
xor
pop
fmul
mov
jge
jbe
js
mov
je
cmc
or
jnp
cmp
sub
jo
jmp
into
jg
cmc
enter
sbb
cmp
int
outs
ret
add
sbb
dec
push
idiv
adc
xchg
stc
int
jge
sbb
imul
fiadd
shr
js
xchg
dec
add
pop
out
jb
iret
std
out
push
std
int
mov
les
ja
(bad)
push
jb
fs
mov
lahf
sub
int
add
mov
mov
enter
(bad)
outs
jo
add
or
lock
jns
outs
movs
aaa
pushf
fistp
mov
xchg
dec
jle
adc
jnp
jae
jp
fwait
jg
xchg
mov
pop
xchg
jg
cmc
adc
std
lds
jbe
popf
(bad)
ins
lea
stc
mov
pop
jecxz
jbe
cmp
xchg
out
div
repz
sub
pop
and
int
les
in
sti
inc
or
repnz
outs
sub
enter
push
clc
(bad)
das
pop
mov
fld
sbb
loope
dec
pusha
lods
sub
sbb
leave
addr16
jle
inc
ins
cmc
idiv
add
addr16
push
pop
data16
out
int
ja
es
inc
pop
ins
outs
mov
je
mov
add
inc
nop
js
sar
push
xchg
arpl
pop
loopne
add
cld
add
push
jp
ja
mov
jno
jbe
pop
mov
sub
push
xchg
cmp
push
pop
imul
arpl
push
pop
xor
scas
aaa
sbb
fs
jno
fdiv
jle
cmps
ins
mov
jg
clc
jb
inc
test
aad
add
xchg
imul
jbe
sbb
(bad)
outs
aaa
rol
dec
pop
or
outs
ja
sbb
addr16
add
aaa
jno
aad
adc
js
mov
sub
cmp
add
jo
data16
sub
add
xchg
xchg
pop
jns
and
lea
int
sub
push
pop
inc
gs
je
test
or
mov
fs
xchg
imul
xor
int
test
pop
movs
mov
aad
or
push
mov
shl
adc
add
cmp
test
or
fcomp
outs
pop
sub
test
or
jnp
inc
ja
xchg
mov
push
and
fwait
daa
outs
cld
fdiv
cmps
mov
push
jns
pop
jg
sbb
jbe
call
cdq
add
jne
and
aaa
jo
(bad)
pop
mov
nop
clc
test
adc
ja
stc
pop
sti
ss
push
data16
mov
imul
jbe
adc
pop
or
jo
push
test
clc
fs
fdiv
sar
lea
sbb
aaa
sbb
push
mov
pop
cwde
push
inc
add
jne
or
adc
add
daa
jae
push
mov
jl
cmps
xchg
fwait
xchg
pop
fldenv
movs
test
or
scas
push
fist
jp
pop
xor
mul
(bad)
xchg
jno
mov
mov
push
(bad)
mov
je
ss
mov
xchg
pop
adc
xor
add
js
and
(bad)
push
xlat
jl
or
mov
jbe
ins
js
adc
aam
js
jmp
jmp
jbe
lods
clc
xchg
(bad)
jl
xchg
and
sahf
cmps
lea
pop
in
inc
pop
jp
outs
jp
mov
imul
jno
jl
adc
pushf
stc
jb
mov
mov
sbb
jl
mov
mov
jb
imul
xchg
scas
not
js
or
xchg
dec
loopne
stos
es
xlat
push
mov
xor
jns
and
jne
(bad)
sbb
xchg
xchg
mov
leave
arpl
jle
clc
mov
stos
fs
inc
lahf
int
add
sbb
dec
js
push
mov
pop
jnp
out
jmp
inc
mov
arpl
pop
dec
cli
xchg
ret
xor
mov
mov
addr16
ds
les
pop
cdq
arpl
bound
jbe
inc
xchg
mov
js
(bad)
fs
xchg
pop
mov
sbb
xchg
ficomp
xchg
ja
fst
out
outs
in
movs
xor
mov
js
push
dec
mov
sbb
jl
xlat
push
xchg
retf
movs
imul
test
(bad)
pop
mov
imul
(bad)
mov
cli
pop
add
add
jl
sbb
pusha
add
stos
mov
lods
ret
les
(bad)
jp
enter
mov
into
cli
lods
rcr
lods
sar
lods
aam
lods
(bad)
jp
fmul
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
sub
cmp
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
imul
jmp
xchg
xor
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
push
jo
sub
out
cmp
mov
or
stos
lods
scas
jmp
mov
imul
mov
or
fwait
stos
inc
pusha
mov
sub
mov
add
mov
sub
fwait
mov
inc
mov
imul
(bad)
scas
daa
mov
leave
jmp
add
pusha
add
loopne
mov
(bad)
cmp
mov
sub
sbb
fwait
mov
jmp
mov
add
pop
mov
or
inc
add
mov
or
fwait
mov
or
fidivr
cmp
retf
mov
imul
dec
rol
fwait
add
scas
xchg
cmp
or
mov
push
mov
jmp
dec
nop
mov
mov
cmp
retf
add
nop
jmp
or
popa
retf
mov
sub
(bad)
sub
jo
stc
sbb
jp
push
or
shr
mov
nop
fisttp
lock
(bad)
sbb
or
stos
sub
add
sbb
out
shl
ret
scas
(bad)
add
add
cld
ret
aas
ins
add
fcmovb
inc
or
aaa
add
cmp
add
add
add
les
xchg
les
ret
inc
pushf
les
mov
push
jl
or
xor
lds
(bad)
out
stos
mov
dec
les
(bad)
pusha
sbb
dec
or
dec
(bad)
push
jl
cmp
enter
les
push
in
mov
les
enter
jle
mov
dec
lods
add
ins
lds
(bad)
or
enter
pop
add
xchg
mov
and
add
test
out
js
and
add
pop
add
leave
mov
retf
retf
add
inc
add
nop
retf
retf
add
inc
call
lds
add
lods
xchg
retf
int3
mov
retf
retf
int
mov
retf
out
or
(bad)
int3
(bad)
mov
inc
int
cmp
cmp
xchg
fsubr
cmps
mov
mov
int3
or
or
lock
retf
int3
lds
retf
add
iret
(bad)
sbb
push
rol
adc
pop
xor
ror
sti
pushf
add
or
paddusw
ror
rol
popf
sar
cmp
sbb
add
ror
call
shl
cmp
sbb
add
or
mov
lods
rcr
pushf
rcr
cmp
sub
iret
cmp
adc
into
and
shr
sub
push
pop
shr
popf
ror
ins
aam
cmp
sbb
sub
shl
cld
shl
ins
rol
shr
mov
push
sbb
and
mov
iret
sbb
sti
int3
rcl
pop
aad
or
cmp
rol
rol
add
sbb
bound
pop
loopne
addr16
(bad)
sbb
and
ins
cmp
push
sub
push
mov
cwde
sbb
(bad)
in
aad
popf
aad
sbb
fisttp
or
jg
mov
mov
and
iret
push
dec
fimul
aad
or
and
push
pushf
aad
sub
xchg
lock
xlat
xor
shl
(bad)
push
sub
cli
jl
ret
mov
fiadd
and
das
imul
popf
(bad)
lods
sar
std
rcr
dec
fidiv
fdivr
(bad)
inc
pop
(bad)
in
fld
sar
ficom
fnstcw
shl
int
ds
ins
fadd
in
fst
fst
mov
int3
lods
sub
push
sahf
fistp
push
loopne
fucom
hlt
pop
add
push
(bad)
xchg
(bad)
loopne
pop
loop
(bad)
ror
(bad)
sbb
retf
out
jge
(bad)
popf
shl
hlt
pop
loopne
pop
jecxz
or
lds
std
int3
(bad)
mov
stos
int3
sbb
out
fst
cs
pushf
add
nop
add
or
and
shl
ds
out
iret
cmp
dec
in
push
retf
bound
cmp
in
and
pop
push
sar
cmp
adc
stc
sbb
clc
dec
(bad)
lods
fstp
shr
fmul
fidivr
shl
aam
sahf
aam
sahf
call
(bad)
or
call
add
sti
dec
loop
ins
fst
call
into
out
scas
fstp
shl
iret
push
jge
inc
inc
stos
lock
add
jmp
out
retf
cmp
(bad)
cmp
(bad)
in
jmp
cld
fild
loope
into
out
push
loopne
fucomp
retf
dec
jmp
std
xlat
or
loop
shr
push
jmp
sbb
sub
inc
sub
jg
rcr
sahf
(bad)
jo
iret
xchg
cmp
fdivrp
out
rcr
(bad)
jmp
out
retf
(bad)
(bad)
jmp
outs
int3
(bad)
ins
lock
mov
in
add
shl
in
clc
pushf
iret
mov
dec
add
scas
jle
lahf
push
jmp
adc
mov
add
sbb
xor
out
cmp
pop
mov
inc
fadd
iret
(bad)
std
hlt
cli
out
sar
in
xchg
int
or
add
fmulp
sub
jmp
fnstcw
sbb
sar
mov
fild
out
xor
mov
call
int
fucomp
push
repz
out
popf
fisubr
pop
idiv
inc
out
neg
ins
loop
std
sar
add
icebp
push
(bad)
dec
aas
hlt
loope
in
repnz
mov
mov
out
psllq
loope
ficom
shl
jmp
pop
fidiv
cli
or
sub
add
bnd
stc
outs
dec
ror
icebp
cmp
sti
mov
add
pop
fild
out
mov
shr
jg
outs
int
mov
mul
in
push
std
xlat
pop
out
fldenv
(bad)
loop
popf
cld
adc
shr
cld
mov
mul
pop
cli
rcr
loop
lock
aam
outs
jmp
psubusw
lahf
mul
aas
cld
fstp
sub
hlt
cmp
not
aas
cld
mov
mov
test
rcl
push
mov
push
test
dec
imul
cdq
cmp
xchg
shr
jmp
test
sti
retf
jb
movs
fcomp
cmp
push
(bad)
cmp
mov
sti
mov
fstp
test
or
sti
or
stc
mov
mov
sbb
cmp
dec
retf
test
aas
sub
jmp
ins
jnp
jle
sub
and
je
xchg
xchg
sub
clc
cmc
dec
mov
adc
mov
lahf
movs
outs
add
popf
inc
jns
sub
sub
scas
loopne
dec
sbb
cmps
mov
ins
stc
cs
xchg
xor
mov
add
mov
jne
push
outs
fisubr
xchg
inc
jg
dec
inc
add
add
pushf
int3
loope
and
mov
call
das
add
cmp
push
scas
xor
dec
and
je
das
shl
aam
enter
ins
mov
xchg
mov
lea
mov
inc
add
sub
shl
loop
pushf
lea
inc
loop
cwde
rcr
jbe
cwde
xor
test
xchg
adc
ja
pop
pop
pop
es
adc
pusha
movq
jge
xor
xchg
pop
dec
mov
repz
mov
mov
inc
jne
push
ss
and
push
jl
push
(bad)
jmp
push
fs
add
sbb
or
or
sar
fcmovnu
add
sbb
cmp
cmp
xor
retf
imul
sub
push
xchg
imul
ror
cmp
adc
and
adc
call
push
(bad)
outs
sti
dec
fcom
lahf
mov
add
and
fadd
add
es
imul
daa
mov
add
clc
inc
mov
sub
or
test
clc
in
mov
pop
dec
adc
dec
ins
xchg
stc
mov
inc
push
mov
lock
dec
mov
cmp
cmp
es
das
or
push
jns
pop
mov
xchg
sti
in
out
sub
sbb
imul
mov
cmp
ss
jae
ss
push
inc
imul
or
test
fwait
js
loop
and
or
popa
dec
fiadd
imul
stos
mov
xchg
repz
scas
or
test
mov
jns
add
jmp
pop
xor
mov
shl
mov
into
test
es
mov
push
movs
cli
call
es
push
enter
aaa
(bad)
sub
sub
adc
add
imul
movs
mov
push
pusha
popf
(bad)
add
sbb
stc
jb
(bad)
cmp
mov
scas
les
push
mov
int
not
push
cmp
enter
sahf
sbb
or
enter
add
inc
and
retf
mov
sbb
sub
sbb
mov
or
xor
neg
inc
mov
fstp
fcomp
ror
les
ins
jge
mov
xlat
in
push
retf
enter
dec
or
stos
lea
mov
iret
dec
sbb
pop
mov
dec
sti
cmp
pop
inc
(bad)
lock
ins
xor
xchg
push
call
outs
stos
mov
rcr
or
mov
inc
push
pop
or
dec
xchg
dec
jbe
jg
ficomp
jae
mov
in
cwde
es
and
mov
in
xor
outs
test
fild
sbb
mov
sub
arpl
mov
ret
clc
rcl
dec
pushf
mov
or
outs
fwait
mov
cmp
loope
mov
and
rol
stos
mov
add
(bad)
cmp
sub
ret
(bad)
mov
in
jae
ss
mov
mov
sar
lahf
add
push
bound
fild
test
bound
sar
mov
js
adc
xor
jno
xor
pushf
xchg
cli
imul
and
mov
pop
je
clc
cwde
pop
mov
xchg
xchg
fdivrp
mov
call
(bad)
js
lds
ins
shl
rcl
or
addr16
mov
scas
pop
dec
mov
mov
adc
call
jnp
mov
add
arpl
adc
mov
(bad)
cwde
mov
pop
fsub
add
jbe
loopne
sbb
(bad)
leave
sbb
and
jg
dec
(bad)
sbb
in
mov
adc
xor
sub
inc
mov
jae
and
sub
outs
call
inc
fcom
sbb
pop
xchg
or
dec
es
jg
call
cs
push
or
pusha
sbb
inc
dec
pop
nop
mov
test
adc
xchg
into
imul
sub
stc
les
rol
ins
fistp
test
xchg
je
push
push
cli
inc
jmp
mov
inc
cmp
cwde
xchg
dec
imul
pop
movs
test
mov
mov
sbb
ret
ins
cmps
ss
add
popa
sahf
push
push
xor
sbb
inc
cmp
xchg
rcl
sub
push
jge
sub
dec
retf
test
or
sub
push
or
jb
jle
push
xchg
aad
adc
inc
bound
mov
imul
xor
mov
add
push
sbb
xchg
nop
lahf
aam
pusha
or
dec
cld
mov
scas
and
fsubp
adc
add
and
add
mov
push
or
fwait
mov
pop
(bad)
xchg
mov
lahf
imul
rcl
sub
imul
adc
ins
sub
xchg
ds
dec
mov
pop
mov
xor
cmp
cld
ds
int3
not
jbe
popf
in
lods
pop
popf
sub
les
movs
imul
jno
or
sbb
add
ja
sub
add
mov
or
dec
or
push
xchg
fsubr
test
sbb
clc
aad
ds
or
in
mov
sti
adc
pusha
neg
fdiv
imul
xchg
popa
adc
and
add
bound
leave
int3
add
sbb
mov
sbb
mov
fwait
and
add
(bad)
outs
ret
xor
xchg
mov
test
cld
(bad)
and
and
push
jno
push
pushf
loope
sar
nop
dec
or
aaa
mov
and
daa
mov
jb
jns
xor
ret
xor
push
add
inc
inc
addr16
sbb
rcl
jno
into
adc
mov
xchg
push
div
xor
fdivp
mov
ret
fmul
adc
aaa
mov
cmovge
sbb
aam
div
lahf
and
daa
pop
int
into
hlt
cmp
rcr
xor
repz
addr16
lahf
pop
loopne
call
lea
bound
jp
ret
xchg
adc
xchg
add
cwde
rol
push
pop
or
add
outs
fisttp
(bad)
in
outs
xchg
ja
mov
sti
rcl
ins
mov
in
xlat
fsub
data16
adc
cmp
dec
js
mov
mov
add
ins
cmps
fwait
retf
adc
cmc
xor
inc
out
sbb
js
pop
in
icebp
sub
adc
cmp
pop
add
gs
repnz
lahf
jl
sub
aaa
adc
repnz
out
in
aas
icebp
xchg
ja
fcomp
fbstp
retf
xor
stos
push
(bad)
xor
adc
aaa
mov
lahf
pop
jle
not
inc
mov
cmp
jmp
fidivr
lods
fwait
jge
popa
pop
sti
xor
push
pusha
mov
jge
pop
inc
fidiv
push
jecxz
jg
(bad)
jle
mov
xlat
add
mov
add
add
cmp
bswap
sbb
mov
mov
in
mov
frstor
stc
mov
(bad)
jp
ret
ds
pop
shl
cmp
pop
(bad)
jb
push
inc
icebp
fwait
scas
loopne
hlt
(bad)
js
in
jmp
push
cmp
shl
bound
int
push
(bad)
stc
mov
out
inc
lahf
jl
fwait
cmp
loope
rol
mov
leave
mov
hlt
xlat
jg
repnz
bound
stc
and
xlat
fucomp
jne
adc
jmp
mov
jmp
(bad)
jp
(bad)
jle
xchg
jge
aaa
jg
mov
jp
mov
enter
rol
add
add
xor
ds
pop
sbb
pusha
add
xchg
xlat
add
push
cwde
sub
and
dec
pop
dec
cmp
or
add
jp
enter
jno
cmps
jle
ja
pop
xchg
jnp
mov
lods
inc
jns
div
out
dec
jge
movs
jp
cmps
jle
mov
sub
mov
in
add
sbb
inc
mov
adc
or
cmps
pop
sbb
push
enter
jb
cmp
mov
or
xchg
and
lods
out
sub
sub
mov
jno
xlat
jne
mov
xchg
sbb
cmps
add
xchg
add
ja
ja
mov
adc
add
jbe
xchg
dec
xor
xchg
dec
inc
xor
rol
xor
push
jge
ror
sar
xchg
mov
mov
xchg
or
js
int3
mov
enter
jp
aaa
xchg
jge
cmps
add
mov
add
ja
cmp
test
dec
cmp
shl
(bad)
push
dec
mov
dec
(bad)
pop
xlat
dec
lea
mov
test
pop
shl
jl
mov
adc
add
inc
jge
call
mov
pop
adc
(bad)
bound
test
nop
aam
arpl
dec
pop
inc
cmp
adc
mov
jmp
add
test
bswap
add
and
sub
jns
or
dec
imul
jae
and
inc
cdq
nop
stc
xchg
(bad)
ds
dec
enter
add
add
jne
rcl
xchg
retf
fcom
jns
fdivr
psubusb
outs
js
and
neg
xchg
cmp
xchg
int3
xchg
test
js
or
adc
(bad)
or
xchg
cmp
sub
imul
call
add
movs
cwde
sbb
test
stc
xchg
pop
mov
or
enter
xchg
xchg
mov
xor
fwait
mov
cdq
pushf
jo
xchg
clc
xchg
or
dec
cmp
fstp
and
ja
ja
retf
daa
mov
xchg
pop
leave
add
enter
cdq
loopne
add
stc
xchg
js
xchg
adc
cwde
push
inc
rol
push
xchg
mov
xchg
leave
jno
mov
sbb
inc
popf
loopne
jb
leave
jno
jmp
ins
(bad)
xchg
add
add
sub
jmp
xchg
xor
jl
mov
xchg
popf
or
xchg
fst
sbb
mov
sub
mov
push
add
jbe
sub
jns
sbb
nop
jp
mov
mov
dec
js
mov
cwde
inc
dec
mov
dec
mov
jns
pop
or
mov
nop
mov
addr16
and
sbb
jge
xchg
cmp
add
pop
cmp
retf
xchg
mov
or
cwde
mov
adc
or
mov
fiadd
ds
cmp
lock
push
cli
cdq
in
test
cwde
pop
rcl
lahf
jae
xchg
and
xchg
imul
int3
test
outs
dec
lock
xchg
xchg
jg
movs
sub
mov
pop
cmps
mov
outs
enter
or
call
dec
push
lods
or
call
lea
and
cmps
mov
stos
push
leave
lahf
mov
popf
imul
stc
xchg
xchg
in
cdq
xchg
xor
dec
jge
jmp
xchg
xor
and
mov
mov
fwait
add
xchg
loop
movs
cld
cmp
cwde
test
pop
cmps
dec
fstp
test
ficom
jmp
ins
or
ficomp
lahf
add
movs
fwait
jo
xchg
test
jb
sbb
xchg
test
lods
in
add
stos
add
dec
scas
outs
fdiv
sub
sti
stos
push
sub
or
mov
mov
pushf
pop
cdq
pop
cdq
scas
jbe
test
jp
fcomp
aad
xchg
ficomp
data16
mov
or
test
pop
mov
cmp
add
mov
aas
sub
pop
lods
mov
xchg
mov
sti
xchg
daa
jnp
daa
(bad)
mov
cmp
cdq
xchg
(bad)
cmp
mov
pushf
push
or
dec
cdq
push
mov
jmp
pop
or
retf
mov
dec
cdq
js
xchg
or
or
lods
arpl
mov
jp
(bad)
retf
dec
mov
or
(bad)
fwait
mov
ficom
cmp
fild
adc
mov
mov
sti
xchg
mov
lea
xchg
mov
imul
mov
dec
mov
imul
sti
mov
cmp
sbb
sbb
mov
pop
pop
xchg
mov
xchg
sar
dec
fcmovnb
xchg
mov
add
mov
jmp
(bad)
idiv
sbb
or
ror
mov
jmp
out
jno
jmp
cld
pop
ret
dec
push
retf
jge
fwait
push
add
jo
push
lods
mov
fst
pushf
les
pop
lods
mov
push
mov
sbb
in
mov
loopne
pushf
bound
xor
lds
dec
mov
dec
mov
fdiv
fiadd
cmp
adc
adc
scas
xchg
ds
(bad)
mov
(bad)
xlat
cmp
pop
mov
call
push
cli
stos
gs
mov
dec
fwait
test
mov
push
jmp
mov
mov
arpl
cmps
pop
(bad)
les
cmc
cmp
mov
pop
sub
mov
call
xchg
lods
mov
xchg
fwait
mov
add
xor
(bad)
sahf
out
cmps
mov
mov
inc
int
and
xlat
mov
cmp
push
in
mov
jl
or
xor
lock
jbe
enter
ss
or
mov
mov
mov
pushf
int
dec
les
(bad)
fsubr
or
cmc
sub
push
mov
into
cld
into
(bad)
jl
mov
mov
sub
stc
dec
leave
repnz
pop
scas
cli
cmp
icebp
dec
(bad)
repz
leave
sar
pop
fxch
in
cld
mov
cmp
ss
cld
int3
(bad)
jl
iret
cmp
aas
mov
(bad)
sbb
inc
in
or
sub
int
dec
enter
jne
(bad)
sbb
enter
out
stos
mov
add
sbb
ror
mov
dec
fwait
lods
mov
lock
int
push
dec
shr
in
(bad)
jmp
iret
add
add
rcr
ror
cmp
imul
cld
mov
cld
mov
stos
les
into
iret
pop
cmps
(bad)
int
out
jl
push
mov
lods
iret
fstp
jmp
xchg
ins
xchg
xchg
dec
fwait
dec
cld
mov
std
mov
int
lahf
or
(bad)
jnp
jp
xlat
mov
shl
aad
mov
fnstcw
sub
neg
pop
push
add
sar
mov
std
xlat
cmc
mov
lods
les
retf
fnstsw
les
add
add
int
mov
mov
fist
fisttp
fcmovbe
cli
sub
lds
pop
mov
cmc
mov
cmp
icebp
int3
aam
cmp
jp
loope
jle
call
fnstcw
loope
in
fdiv
(bad)
(bad)
pop
fdivr
retf
dec
aam
(bad)
rcr
into
(bad)
call
sub
and
ror
int
ror
loop
ss
fimul
jg
fmul
cmp
mov
fild
pusha
loop
dec
loope
int
pop
lods
iret
mov
shl
loop
mov
push
ds
std
(bad)
sbb
push
inc
out
dec
in
jge
(bad)
jmp
mov
lock
(bad)
push
fsubp
dec
(bad)
cs
out
mov
mov
jbe
call
sbb
aas
into
jecxz
cs
sub
lods
jge
loopne
in
loope
(bad)
loope
(bad)
mov
fsincos
in
in
dec
loop
(bad)
jmp
mov
outs
sub
inc
push
fld
pop
fistp
call
std
jmp
scas
(bad)
add
add
hlt
(bad)
(bad)
popf
jmp
cmp
in
scas
jmp
in
in
push
jmp
xor
or
sahf
into
outs
call
mov
popa
push
out
into
ds
(bad)
sahf
jecxz
mov
mov
xchg
popf
loopne
scas
jecxz
ds
push
fucom
mov
in
das
mov
sub
mov
cmp
out
jmp
jmp
dec
jmp
cli
(bad)
jmp
hlt
mov
je
in
mov
ficomp
call
push
out
lahf
aad
jge
xor
pop
outs
jmp
jle
or
sbb
loope
cmp
add
jmp
mov
fmulp
out
popf
jmp
adc
dec
jo
stc
mov
das
out
jmp
pop
add
cmc
push
das
lock
int
hlt
out
cmc
mov
out
sbb
in
dec
sahf
jmp
(bad)
cmc
add
or
or
lods
repnz
jmp
jecxz
out
lock
out
jb
jecxz
lahf
jmp
stos
push
repnz
call
cmc
jl
in
inc
(bad)
jg
gs
out
out
hlt
(bad)
outs
jmp
mov
out
call
clc
ret
scas
sahf
test
rcl
not
cli
stos
dec
fcomi
jle
test
call
cmc
mov
in
lds
add
push
pusha
dec
xchg
cwde
into
rol
aas
sti
rcr
jg
call
lahf
cmc
cmp
(bad)
iret
add
mov
lods
dec
sub
jnp
icebp
sar
(bad)
jmp
repnz
clc
dec
das
std
xlat
push
repnz
(bad)
mov
or
add
mov
add
xchg
xchg
xchg
xchg
add
xchg
movs
lahf
cmps
adc
add
xchg
lods
mov
stos
pop
mov
mov
mov
xchg
nop
pop
sbb
mov
ror
add
ror
dec
mov
xchg
pushf
call
jmp
xchg
mov
iret
mov
lahf
stos
outs
mov
ja
sbb
sbb
vcvtps2pd
jle
mov
push
xor
in
inc
call
ficomp
xor
sub
mov
je
push
out
cdq
sbb
out
out
jb
je
xchg
test
dec
(bad)
loope
xor
mov
cmc
adc
mov
jmp
sahf
out
mov
push
add
adc
adc
frstor
xor
and
mov
test
cmp
movs
jnp
loope
movs
mov
pop
stos
loope
ja
cmps
sub
test
mov
jb
mov
push
mov
and
outs
test
es
fmul
(bad)
mov
ret
popf
daa
push
jmp
push
pop
popa
xchg
dec
in
(bad)
sbb
das
lods
mov
dec
mov
xor
pusha
mov
ss
pop
nop
out
dec
cld
mov
out
scas
cmp
xor
fwait
stos
stos
cmps
in
call
test
daa
push
call
or
or
out
mov
xor
push
sbb
rep
(bad)
cdq
sub
in
or
rcl
xchg
cmc
mov
dec
dec
push
ds
inc
cmp
push
add
fs
push
sbb
xor
ins
inc
or
sbb
hlt
mov
xchg
imul
out
aam
xchg
mov
add
xchg
neg
inc
sub
xchg
adc
dec
pop
jb
popa
mov
inc
lds
push
out
jb
push
pop
lahf
jns
mov
xchg
and
clc
fs
aaa
add
fiadd
stc
loop
cmp
out
test
mov
retf
add
cdq
loope
inc
pop
call
movs
or
or
imul
or
mov
jbe
inc
mov
mov
loope
adc
rol
mov
inc
or
in
mov
jle
inc
mov
cmp
sub
sub
iret
mov
xor
cmps
cmps
inc
sar
addr16
sub
rol
add
dec
cmp
test
jno
in
or
outs
ror
xchg
in
mov
cmps
mov
in
pop
shl
int3
inc
in
rol
ss
inc
call
inc
pop
inc
push
pop
and
jo
lds
jb
jecxz
sub
int3
xor
xor
push
xlat
xor
enter
mov
mov
iret
cld
jbe
hlt
mov
mov
(bad)
pop
aas
sub
sub
add
add
or
or
sub
repz
fisubr
inc
mov
mov
dec
cld
mov
loop
fdiv
out
sub
jp
out
jbe
xchg
scas
cmp
ins
sub
jbe
mov
into
add
inc
je
mov
inc
sbb
icebp
push
cdq
(bad)
or
and
mov
cmp
outs
mov
xor
out
jae
mov
mov
jbe
mov
inc
ficomp
and
mov
push
push
inc
mov
outs
inc
clc
jmp
pop
imul
movs
mov
in
add
clc
fidivr
fcmovnu
inc
sbb
cmc
mov
mov
mov
add
sbb
clc
nop
inc
mov
imul
icebp
or
aas
or
push
or
sbb
adc
cmp
mov
and
pop
push
aad
inc
out
(bad)
sbb
jnp
mov
xor
inc
or
lock
xor
ret
sbb
xor
test
lock
push
xlat
clc
test
sub
add
or
sub
and
enter
loop
mov
nop
mov
popa
add
shl
mov
cmc
or
sbb
xchg
icebp
mov
int3
rcl
clc
inc
xor
add
or
or
mov
aaa
inc
and
cwde
mov
fnstenv
mov
and
inc
inc
imul
nop
push
xchg
mov
xchg
test
repz
mov
movs
repz
mov
fs
popf
mov
pop
(bad)
rcl
mov
int3
pushf
in
xchg
lahf
movs
movs
xor
arpl
xor
mov
mov
jp
adc
xor
pop
inc
push
mov
mov
jecxz
mov
call
ret
cmp
jb
out
pop
es
dec
and
adc
stos
stc
into
dec
bound
stos
ins
cmps
pop
mov
mov
icebp
test
mov
out
push
cmp
hlt
fwait
or
ror
or
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
add
mov
mov
jmp
fucomi
sbb
shl
inc
adc
mov
lds
loopne
shl
mov
rcl
pop
ret
jne
vmread
loope
push
add
jmp
xchg
inc
outs
lods
sub
dec
push
mov
ret
dec
fcomi
xor
mov
test
mov
mov
ja
ins
xchg
in
js
dec
(bad)
fdiv
ror
cs
mov
or
inc
ret
cs
xor
aaa
mov
loope
scas
xchg
ret
cs
push
loope
adc
mov
fwait
cmp
pop
mov
mov
(bad)
or
(bad)
or
jp
int3
(bad)
adc
cwde
ret
xor
xor
test
test
xchg
xchg
stos
gs
xchg
or
stos
xchg
fwait
jnp
push
mov
retf
adc
rep
inc
mov
adc
mov
(bad)
cmp
xor
int3
es
popf
jne
out
addr16
inc
out
(bad)
in
and
mov
adc
or
adc
mov
mov
ret
cwde
or
jl
pop
clc
pusha
add
sbb
inc
sub
jp
ret
mov
into
cli
mov
xchg
sbb
icebp
call
gs
data16
js
shl
lea
mov
push
js
pop
and
mov
fwait
lods
add
jp
iret
outs
inc
cmc
xchg
ins
imul
repnz
aad
test
retf
ror
push
adc
movs
aas
int3
bound
jp
cdq
jbe
cmps
lea
into
imul
aaa
pop
fmul
adc
jbe
mov
loopne
xchg
(bad)
lock
push
mov
dec
pop
jl
and
jo
mov
jmp
mov
enter
mov
loop
das
sti
fsubr
add
mov
outs
or
sbb
adc
adc
addr16
cmp
retf
inc
out
or
out
mov
rol
lds
and
fst
xor
cmps
int3
in
jmp
add
push
test
js
add
(bad)
push
(bad)
mov
scas
ret
add
xchg
jns
pop
into
jo
dec
pop
idiv
cld
push
aaa
and
cmp
inc
pop
cmp
in
ins
sti
mov
mov
sub
xchg
jle
fnstsw
jge
inc
pop
jbe
mov
clc
xlat
imul
and
pop
out
out
cmp
push
js
data16
sbb
in
lahf
xor
nop
dec
fdiv
inc
add
fisubr
outs
mov
xchg
rol
scas
cmp
out
dec
sbb
pop
jecxz
fdiv
cld
jmp
mov
jmp
add
push
cmp
jns
lock
jg
aad
lahf
std
adc
mov
in
(bad)
mov
mov
ds
ret
cmp
(bad)
idiv
push
inc
shl
add
xchg
push
out
(bad)
pop
les
add
jo
inc
jnp
daa
dec
cmps
cmp
jns
mov
xchg
in
outs
retf
mov
pop
loopne
retf
push
jl
js
popa
xchg
cmp
push
sbb
jo
fcom
fwait
xchg
xor
std
inc
bound
outs
inc
sbb
xor
cwde
ss
cmp
xchg
(bad)
jl
pop
pop
jbe
ins
inc
mov
sbb
aaa
rol
xor
cmp
adc
(bad)
(bad)
pop
xchg
or
mov
outs
ins
adc
mov
addr16
je
ja
cmp
xor
jle
mov
dec
cmps
pop
adc
adc
test
pop
pop
mov
push
imul
test
xchg
push
test
retf
inc
add
arpl
jnp
data16
in
bound
imul
cdq
pop
mov
sub
jb
push
mov
outs
scas
adc
dec
test
add
jle
or
fadd
sbb
jbe
sti
test
jbe
call
ins
xchg
xchg
xlat
mov
popa
push
and
jg
ins
loopne
jo
out
fadd
dec
inc
jge
pop
js
mov
jle
pop
jecxz
jg
fdivr
inc
ja
mov
push
pusha
sub
jnp
ja
pop
cwde
mov
mov
call
jmp
pop
fbstp
sti
cmps
je
jne
dec
enter
push
jo
dec
mov
div
out
pop
outs
outs
push
add
aaa
add
(bad)
mov
pop
test
jle
cmp
xchg
mov
lock
xlat
cmp
mov
int
jle
xchg
js
sub
jecxz
jno
xchg
xchg
outs
(bad)
cmps
jp
out
jg
pop
mov
pop
mov
jno
dec
jle
test
out
xchg
mov
ja
push
pop
pop
mov
bound
outs
retf
cmc
xchg
outs
data16
xchg
sub
mov
jg
daa
jae
jbe
arpl
outs
ret
(bad)
mov
cmp
test
xchg
dec
add
lea
pop
jnp
dec
jo
enter
jb
mov
sbb
mov
jnp
push
stos
push
xchg
xor
jge
cmp
mov
and
sub
mov
pop
pop
or
xchg
mov
test
js
ss
xchg
push
cmp
push
mov
nop
inc
jp
mov
std
push
jnp
clc
jl
jbe
popf
aad
aad
jo
test
movs
push
mov
nop
xchg
ss
sbb
jae
add
xchg
dec
and
pop
addr16
xor
inc
jo
mov
jge
mov
lock
fs
imul
sahf
test
bound
jns
mov
jmp
mov
add
pop
xchg
fwait
jne
sbb
and
add
jns
es
into
push
pop
mov
mov
call
pop
xor
xchg
cmps
aad
adc
mov
lahf
retf
ja
xchg
and
cwde
addr16
fldenv
sbb
xchg
xchg
xchg
dec
jbe
adc
sti
enter
push
mov
mov
push
bound
stos
or
movs
adc
xchg
push
out
xchg
enter
outs
sub
dec
loopne
xor
ins
add
jp
push
addr16
pop
ins
(bad)
mov
imul
xchg
outs
in
mov
jb
push
enter
pop
add
add
jp
pop
pop
inc
pusha
add
stos
mov
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
add
stc
add
add
add
add
out
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
xchg
xchg
xchg
push
push
push
aam
aam
push
jl
jl
sub
stos
lods
sbb
sbb
repnz
cmp
cmp
push
or
call
add
push
add
retf
data16
adc
fcmovu
je
ins
test
xor
sub
scas
lods
inc
ds
mov
jl
jmp
xchg
cld
cli
cld
fs
pop
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
cmp
xor
push
pop
(bad)
fsubr
jl
jl
cs
scas
lods
and
and
ds
call
aam
xchg
les
and
cmps
movs
in
in
ss
or
mov
xchg
xchg
xchg
push
push
push
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
into
int3
ins
data16
sbb
sbb
(bad)
je
je
jle
xor
xor
scas
mov
ds
mov
in
out
in
mov
pushf
cld
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
sub
xor
scas
mov
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
add
ret
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
repnz
xor
xchg
(bad)
leave
adc
sub
movs
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
push
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
fs
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
leave
loopne
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
rcr
into
jbe
jae
in
push
mov
mov
in
shl
dec
xchg
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
out
dec
add
mov
stos
mov
add
stos
mov
stos
xor
mov
call
lods
pusha
inc
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sub
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
cdq
add
adc
imul
stos
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
ret
les
shr
sub
lock
or
and
scas
loope
add
jmp
xchg
xor
or
js
pop
mov
add
cmps
pop
lock
or
push
mov
retf
jp
adc
mov
dec
xchg
xchg
pop
mov
retf
add
add
pop
mov
sbb
jnp
xor
mov
stos
fwait
cmp
iret
mov
xor
jnp
dec
pop
mov
sbb
imul
cmps
sub
mov
sub
or
jp
pop
pop
add
add
sbb
scas
and
mov
cmp
add
add
push
scas
fucomip
mov
sar
sub
jnp
inc
dec
mov
stos
mov
jmp
out
sub
and
stos
sbb
sub
sub
sbb
mov
fwait
mov
dec
lods
mov
mov
imul
mov
push
add
mov
pop
sti
add
lds
push
rol
fwait
add
scas
xchg
jnp
or
mov
push
mov
jmp
push
nop
mov
mov
sbb
dec
mov
jmp
add
shl
add
retf
mov
pop
mov
sub
mov
lods
xchg
jnp
add
mov
sub
ins
sar
mov
jmp
add
mov
lock
sub
mov
add
fiadd
xor
add
sub
adc
mov
pushf
add
and
adc
add
pop
les
add
dec
lds
les
pop
mov
or
pop
lods
(bad)
out
dec
add
jl
addr16
(bad)
bound
dec
or
imul
pushf
add
push
pop
inc
(bad)
dec
or
push
ins
(bad)
dec
ins
(bad)
enter
xchg
les
lds
enter
ja
les
les
(bad)
push
and
jl
push
enter
mov
add
fild
out
call
sbb
add
pop
add
retf
retf
retf
add
add
mov
sahf
pushf
retf
or
inc
jmp
lds
push
pop
ins
retf
xchg
mov
retf
retf
(bad)
pop
sub
mov
retf
out
sub
fsubr
fnstsw
pusha
int
jl
rcl
lods
retf
int3
mov
mov
and
dec
retf
stos
adc
int3
retf
neg
iret
ret
jl
sub
push
pop
mov
mov
retf
mov
sar
cmp
cmps
ins
retf
ror
in
iret
add
add
xor
call
or
pop
sbb
jmp
or
retf
or
dec
adc
cmp
sub
mov
mov
lea
or
sub
cmp
sub
retf
mov
and
rcr
sbb
and
int3
cs
xor
aam
cmp
and
mov
iret
sbb
daa
cmp
adc
and
ror
into
or
xor
or
pop
and
jge
pusha
int
fs
(bad)
xor
sub
dec
xlat
cmp
aad
pop
fsin
in
add
dec
fnstenv
mov
xchg
cs
stc
pushf
(bad)
adc
std
pushf
aad
dec
xlat
fstp
std
fnstenv
fidivr
iret
pop
dec
shl
aad
popf
shl
(bad)
int3
mov
fmul
retf
xor
imul
ret
sbb
mov
(bad)
cmps
pop
fcmovnu
cmp
fs
add
add
mov
mov
ror
lods
int
fst
sbb
add
ins
rcl
fstp
xchg
dec
fcmovb
mov
mov
sar
rcl
sbb
or
iret
cdq
pop
fidiv
mov
fwait
pop
fldenv
rcr
ret
adc
sar
sbb
loopne
std
loope
popf
rcr
(bad)
fistp
rcr
fstp
dec
aad
popf
fcom
and
mov
push
push
aam
mov
jmp
loope
sbb
xor
int3
or
stos
xchg
popf
loop
std
iret
ret
xchg
sbb
lock
loopne
mov
aas
dec
shl
lea
ds
adc
fsubp
lods
loop
std
in
jge
je
in
(bad)
ror
shl
cmp
push
mov
xor
gs
in
outs
out
(bad)
xlat
sbb
mov
ror
sub
xchg
fld
paddd
jae
in
mov
ins
mov
jae
int3
mov
mov
fisubr
dec
add
out
pop
in
sbb
in
in
cwde
add
sub
sahf
ficom
(bad)
lds
jmp
out
retf
dec
inc
stos
jmp
(bad)
jmp
or
push
int3
cmp
int3
outs
fdivp
or
add
jmp
fmul
mov
fist
add
jg
loope
mov
popf
outs
loop
mov
mov
jmp
inc
ins
out
(bad)
rol
jle
fistp
loop
call
into
rol
into
in
test
scas
lock
into
in
cmp
fidiv
out
or
lea
stc
into
out
ds
retf
outs
fcomi
(bad)
fistp
out
sahf
icebp
inc
inc
stos
ds
loop
in
icebp
(bad)
scas
out
xor
fild
iret
pop
inc
stos
push
lock
(bad)
ffreep
outs
jecxz
jg
cdq
mov
mov
add
pusha
in
or
fistp
pop
in
iret
iret
or
lock
push
ror
or
fstp
in
hlt
in
out
push
pmulhuw
jmp
mov
std
ds
dec
fcmovb
push
out
repnz
test
out
or
(bad)
in
sub
fucomi
cs
and
int
clc
icebp
lods
loop
in
shr
fild
cmp
shr
fsubr
iret
pop
shr
stc
outs
add
pmuludq
jmp
jmp
inc
push
clc
dec
add
cmp
in
fst
loop
out
loope
sub
lock
cli
or
or
stos
sub
add
pmaddwd
cli
xor
xor
clc
pop
lahf
stc
xchg
outs
cmc
jns
neg
fimul
cdq
fsubrp
aas
push
test
xchg
jnp
cld
pop
mov
out
icebp
xchg
sub
ror
bswap
out
hlt
xor
push
jo
mov
in
je
rcl
rcl
push
or
sbb
clc
call
mov
test
dec
jmp
push
mov
mov
jmp
mov
inc
fnstcw
jmp
ret
sub
js
mov
call
fcom
pop
push
dec
sub
stc
lea
dec
fiadd
and
jns
mov
jle
jg
sahf
jns
lods
or
mov
fwait
data16
xor
or
jae
call
cmp
popa
cmps
addr16
dec
jne
sub
adc
inc
ret
and
sub
fdivr
push
aas
jl
xchg
jno
jbe
pusha
dec
jno
dec
fisub
or
xchg
fisttp
test
xchg
cmps
mov
inc
push
or
add
jle
scas
cmp
inc
dec
mov
mov
bound
jecxz
xchg
cld
les
inc
jge
sbb
jge
icebp
rcl
jb
sub
sbb
int3
xchg
mov
fnstenv
call
dec
dec
ret
call
lea
pusha
fldcw
stos
pushf
js
(bad)
test
loopne
adc
lds
retf
dec
imul
ins
jns
dec
(bad)
jmp
mov
loopne
cs
adc
add
js
jo
ret
and
or
mov
ret
sub
test
test
out
das
add
add
addr16
adc
cmp
inc
sbb
cmc
sub
aam
shr
inc
sbb
jnp
add
push
pushf
xor
into
xor
xor
push
cmp
mov
pop
mov
dec
mov
xchg
je
jbe
and
inc
inc
push
nop
(bad)
sub
in
add
xchg
xchg
sbb
cmps
arpl
jp
lea
push
sbb
cmp
xchg
add
push
loop
pop
pusha
(bad)
sbb
and
cmp
cmp
or
or
sahf
movs
in
sbb
sbb
loopne
xchg
mov
cmp
call
loope
fwait
imul
jne
jge
ficomp
jp
jae
mov
out
sub
xchg
ds
fldenv
cmps
jb
stc
shl
popf
sbb
shr
stos
stos
jge
or
and
les
sub
sub
sbb
retf
sub
je
cmp
arpl
cmp
scas
or
xor
xor
sub
inc
xor
inc
dec
mov
mov
mov
cmps
out
test
in
dec
fdivr
adc
mov
mov
pop
or
das
arpl
dec
lds
arpl
(bad)
out
ret
mov
daa
aaa
es
sub
xor
pop
idiv
(bad)
lods
scas
addr16
and
or
mov
jmp
sahf
jp
inc
xor
add
xchg
jnp
adc
lods
repnz
cmovg
xor
add
and
test
pop
add
gs
mov
sub
xchg
push
test
adc
std
cdq
in
das
test
outs
add
jno
pop
std
xor
in
test
adc
imul
repnz
imul
call
mov
or
dec
push
add
ds
out
cmp
ss
mov
scas
pushf
ret
shr
fisubr
or
into
cwde
push
jne
dec
cld
and
lock
fistp
dec
pop
or
dec
mov
scas
loope
lods
mov
and
xlat
cwde
das
in
sar
shl
bound
js
neg
mov
push
sbb
pop
xor
repnz
shr
sbb
and
push
or
dec
gs
sub
sti
mov
pop
adc
scas
ja
jae
loope
rol
in
mov
or
push
jnp
jae
adc
mov
mov
sar
in
mov
ds
inc
cli
loope
pop
or
out
in
or
mov
rcr
mov
cmps
mov
pop
and
rol
push
in
mov
scas
jns
xor
mov
mov
cld
mov
add
jge
cmp
aaa
pop
mov
shl
and
clc
clc
sbb
fcmovbe
test
sbb
loope
dec
sbb
ror
inc
and
movs
loop
enter
xchg
xchg
dec
shl
rol
mov
or
out
xchg
push
repnz
xchg
ret
and
ds
or
cmp
hlt
xchg
js
(bad)
cmps
jns
test
fs
dec
xchg
add
or
rcr
dec
in
xchg
or
xor
jo
retf
es
or
stos
lods
push
icebp
out
xchg
inc
add
pop
je
test
xlat
push
js
push
es
xchg
lahf
xor
push
das
mov
xchg
pusha
sub
repnz
ja
mov
int3
ins
adc
fsub
sbb
cmps
xor
ficom
mov
fsub
add
sub
dec
dec
push
add
push
mov
cdq
dec
and
test
xor
sub
test
or
rol
dec
int
int
scas
repnz
loope
push
jecxz
repnz
mov
jmp
jmp
int3
cli
(bad)
aaa
xor
pop
mov
call
xor
add
push
lahf
int
arpl
mov
mov
mov
mov
shl
in
xchg
lods
test
dec
imul
xor
cmps
leave
mov
pusha
stc
test
push
push
mov
sub
and
popa
pop
dec
pop
mov
pushf
ficomp
test
or
sar
jae
fcmovnu
push
xor
jmp
inc
mov
adc
mov
dec
cmps
addr16
sar
outs
jge
fistp
int
jl
or
into
hlt
and
inc
sub
push
add
aaa
mov
mov
daa
sbb
mov
mov
push
ret
add
adc
push
jg
cwde
mov
sub
mov
mov
xchg
mov
jbe
xchg
popf
das
pusha
int
xchg
add
mov
jb
stc
(bad)
lock
mov
loop
fcmovnu
lods
fdiv
xchg
pop
retf
aad
mov
jno
fadd
sbb
popa
(bad)
ds
xchg
dec
jl
pop
xchg
mov
(bad)
mov
rcl
mov
(bad)
das
mov
(bad)
outs
sahf
xor
jl
cmp
xor
push
inc
xchg
popf
pop
shl
inc
pusha
or
mov
push
aad
xchg
je
pop
cmp
xor
jecxz
or
pop
adc
imul
in
dec
push
jp
movs
shl
cli
shl
inc
repnz
pop
(bad)
in
xchg
int
std
xor
mov
aas
outs
sbb
xor
xor
push
fwait
jp
test
mov
ins
std
pusha
pop
rcl
leave
outs
mov
ja
push
mov
sbb
dec
mov
xor
addr16
pop
loop
jecxz
je
(bad)
jl
jb
sbb
fsub
outs
ja
or
adc
mov
outs
push
enter
fisub
out
out
fnstsw
pusha
rcl
sub
iret
loope
mov
mov
inc
or
pop
push
inc
cmp
add
mov
in
out
daa
out
dec
push
call
sbb
loope
pop
aaa
mov
jle
and
cmp
sub
repz
out
cmp
je
jns
add
adc
sbb
add
pop
push
push
add
shl
fsub
push
out
cmp
lods
pushf
jb
pop
jb
movs
outs
cli
rol
jle
cdq
push
std
leave
xor
daa
iret
ret
lods
bnd
cld
fidivr
ja
int
sub
loopne
ret
sbb
ret
push
test
sti
add
faddp
mov
(bad)
mov
rcr
out
pop
pop
inc
loopne
sahf
js
inc
push
out
outs
ja
in
das
jae
fistp
adc
and
movs
(bad)
sbb
xchg
call
outs
ds
test
jl
call
dec
sub
push
and
mov
ja
jecxz
mov
lock
fiadd
js
ja
out
mov
pop
and
mov
mov
push
in
push
mov
mov
cdq
cmp
neg
out
mul
dec
mov
or
jle
mov
xchg
sti
mov
ja
fwait
pop
retf
mov
out
outs
jns
add
mov
jns
addr16
(bad)
jns
pop
jle
aaa
and
xchg
movs
jp
dec
cmp
jg
pop
jg
cmps
sub
je
sbb
pop
jg
xchg
sub
cmps
add
rol
push
add
and
jo
inc
sbb
ss
xor
add
xlat
inc
in
add
add
mov
enter
add
and
into
xlat
jnp
mov
(bad)
cmc
aaa
and
sub
jge
enter
or
inc
lock
inc
call
mov
add
sbb
inc
cmp
test
add
or
pop
add
inc
js
jo
jnp
ja
pop
js
out
and
push
pop
bound
mov
add
add
mov
push
call
in
jns
enter
add
xchg
mov
xor
and
cmp
ja
nop
sbb
enter
mov
jp
pop
js
mov
dec
jo
or
add
jp
idiv
or
rol
sub
inc
mov
mov
(bad)
aam
pop
(bad)
sbb
sar
or
push
les
(bad)
sbb
out
jl
jle
js
clc
test
mov
mov
mov
or
clc
lea
lea
test
jb
jle
cmp
add
daa
xchg
xchg
mov
add
mov
sbb
cmps
xchg
ja
add
add
and
push
dec
js
enter
add
add
test
and
push
jle
dec
add
xchg
jle
xchg
jno
mov
sub
sbb
sbb
and
push
fld
imul
xchg
push
cwde
jns
push
adc
bound
pop
sbb
sbb
call
(bad)
sbb
cmp
leave
jns
imul
ss
mov
test
cmp
add
adc
(bad)
jmp
dec
cmp
jmp
sbb
xchg
push
sbb
sub
push
test
call
xchg
loope
xchg
cmps
cmp
mov
mov
call
push
pop
mov
jp
jmp
pusha
loopne
jle
pushf
jne
js
xchg
jns
pop
cdq
inc
pusha
cmp
cdq
and
xchg
xchg
jns
mov
cwde
(bad)
xchg
xchg
movs
sub
rol
movs
adc
jns
jle
pusha
push
or
dec
mov
jns
and
in
daa
xchg
push
pop
xor
pop
cmp
imul
mov
clc
(bad)
cmp
or
xchg
addr16
mov
sub
mov
cmp
neg
cmp
and
xor
mov
dec
mov
sub
js
push
xchg
pop
mov
aad
(bad)
push
cwde
pushf
sbb
test
jns
xchg
dec
cmps
push
stc
fwait
jge
nop
sub
mov
pop
cdq
inc
xor
and
xchg
jle
js
mov
add
and
adc
add
jmp
cmps
xor
cdq
pop
mov
jle
test
or
cwde
jge
cmps
jmp
pushf
jae
call
bound
loop
stos
pusha
sub
sbb
cmp
sub
dec
jo
mov
(bad)
mov
inc
cmps
mov
movs
test
xchg
jle
call
jecxz
lahf
adc
lods
jno
add
cwde
lods
push
and
cmp
jmp
push
cmp
ficomp
mov
jp
xor
cwde
cmc
jp
lahf
jae
cmps
jmp
aaa
lods
sub
mov
add
or
popf
iret
mov
test
cwde
scas
or
mov
ficom
cmp
rol
or
lahf
jbe
lods
pop
jmp
inc
adc
xlat
daa
cmp
or
push
and
call
xor
sahf
test
pusha
add
sub
cmp
jle
lods
xor
scas
sub
cmps
xor
mov
repnz
cdq
mov
sbb
test
loop
movs
jge
lods
das
or
fwait
leave
sbb
sbb
sub
test
popf
mov
cmp
mov
fldcw
(bad)
sub
fldcw
mov
scas
inc
jns
mov
mov
xlat
retf
imul
xchg
mov
add
xchg
rcr
mov
scas
pop
ja
pusha
scas
xchg
mov
call
or
call
enter
jns
ins
push
int
mov
cmp
jmp
add
mov
mov
push
add
(bad)
dec
mov
cmp
mov
mov
(bad)
sbb
mov
mov
sub
stos
mov
or
cs
mov
dec
test
fwait
mov
dec
mov
sbb
cmp
rcr
sahf
xor
into
(bad)
jmp
mov
shl
add
(bad)
mov
mov
xchg
dec
stos
xchg
movs
sub
sub
jns
add
sub
and
sbb
add
(bad)
add
mov
sahf
xor
push
add
add
mov
mov
lds
lods
xchg
fwait
cmps
popa
mov
lods
ret
mov
cli
mov
fs
mov
pop
(bad)
ret
push
adc
lds
(bad)
rcl
fld
enter
push
enter
sub
mov
mov
sub
cdq
cwde
enter
cld
rol
add
test
ret
dec
sbb
jg
lds
lds
in
xchg
dec
mov
mov
add
mov
pop
fadd
imul
mov
mov
mov
mov
mov
enter
fstp
add
movs
push
add
jmp
into
ins
sub
mov
mov
mov
pop
dec
add
sub
(bad)
cld
nop
les
es
outs
stos
(bad)
popa
pop
mov
dec
cmps
ret
dec
mov
cmps
sbb
adc
jge
mov
lea
in
add
push
cs
inc
shl
sub
aad
pushf
adc
stos
cld
rcr
mov
cmp
jl
mov
retf
int
(bad)
imul
mov
lea
cli
ror
sbb
cmp
hlt
dec
iret
xor
mov
fmul
mov
int3
loopne
mov
mov
shr
adc
xchg
in
mov
ins
xchg
and
rcr
in
aam
sbb
mov
add
dec
ror
pushf
jp
mov
sbb
gs
adc
rcl
jmp
int
jns
add
jge
iret
fs
jge
mov
sub
popf
fisub
lds
rcr
retf
fiadd
rcr
fsub
ffree
jmp
into
pop
sbb
lods
dec
fidiv
(bad)
cmp
lahf
in
shr
pop
lods
retf
fnsave
popf
retf
aam
pop
iret
mov
ror
sub
and
pop
pop
sar
bound
shl
add
int3
aam
fst
cmps
cmp
dec
std
add
and
test
cdq
popf
mov
(bad)
sar
add
inc
inc
inc
push
mov
sar
sbb
xchg
(bad)
movs
cmp
rcr
test
ror
sub
mov
sbb
cs
fsqrt
dec
sar
in
aam
mov
aad
jecxz
out
fsubr
shr
and
xlat
ds
test
fwait
into
or
mov
int
test
push
mov
lods
(bad)
jecxz
lea
(bad)
fimul
pop
xlat
in
fdiv
ins
rcr
pop
fcmovbe
pop
fdivr
mov
sbb
movs
push
add
adc
and
ficom
pop
loope
inc
fdivr
popf
ficom
sbb
in
aad
ins
fst
fsub
jge
adc
rol
ror
mov
or
gs
adc
(bad)
movs
(bad)
jecxz
or
add
rcr
aam
cs
dec
rcr
jmp
xchg
lods
jecxz
cs
push
fisttp
(bad)
cmc
pop
fsubr
fild
mov
in
cmp
imul
jle
ins
out
loopne
jle
(bad)
lods
in
pop
dec
ficomp
in
cmp
loopne
scas
in
sub
inc
pop
loop
push
in
test
fiadd
(bad)
aas
(bad)
cmp
lds
shr
aad
movs
lock
cs
out
mov
loope
sbb
into
pushf
out
ds
in
scas
jmp
xchg
into
shl
push
icebp
icebp
(bad)
icebp
mov
fsub
in
sbb
jnp
in
pop
loope
pop
loop
pop
out
adc
fstp
jg
pop
aas
out
xchg
das
dec
into
lahf
push
repnz
iret
in
xor
in
jge
out
ror
pop
scas
in
das
in
in
repnz
jmp
dec
in
xchg
ds
jg
ficomp
into
pop
fsub
out
jecxz
(bad)
repz
repnz
outs
add
hlt
test
out
arpl
in
xor
jmp
jne
cmp
add
pop
int
push
add
dec
jmp
jne
jbe
repz
or
jmp
mov
lods
not
mov
dec
jg
xor
repnz
sahf
jle
mov
lock
das
mov
push
fdivrp
cmps
int
cwde
mov
pop
lahf
fidiv
neg
pop
(bad)
jmp
pop
ret
hlt
stos
mov
fwait
dec
shr
mov
push
mov
cmp
repz
xchg
pop
jbe
xchg
push
jmp
out
jecxz
scas
cld
cmp
loopne
add
push
test
sti
dec
push
pushf
psadbw
in
in
mov
mov
clc
or
scas
imul
pop
jmp
(bad)
loopne
lahf
bnd
stc
or
add
add
add
xchg
and
sahf
sbb
mov
mov
mov
movs
test
xchg
movs
test
mov
cwde
add
scas
ret
mov
xchg
xchg
into
mov
shl
rcr
mov
retf
test
test
mov
ret
mov
lea
sahf
cmc
mov
dec
inc
inc
pop
test
popa
(bad)
out
pop
mov
sbb
std
shl
jmp
cmp
pop
pop
stos
mov
jne
clc
test
ret
or
cmp
and
xor
add
out
mov
rol
shr
dec
cs
sub
mov
inc
push
jae
mov
add
dec
push
xor
in
mov
inc
pop
test
sbb
movs
call
data16
dec
(bad)
inc
cs
and
in
mov
mov
jmp
pop
xchg
jecxz
mov
mov
mov
ret
push
xchg
popa
cwde
fdivr
jmp
out
stos
mov
add
sar
leave
test
movs
dec
aad
(bad)
cmp
pop
loopne
mov
lods
sti
adc
(bad)
xchg
add
(bad)
es
aad
out
xchg
xchg
ffree
fldpi
lods
xchg
jnp
push
sbb
adc
mov
in
pushf
cs
mov
popa
add
sbb
dec
imul
ja
dec
imul
out
add
shl
inc
mov
pop
and
add
jne
icebp
aam
ins
jmp
xor
inc
adc
inc
rcl
push
sub
and
mov
popa
movs
or
adc
stos
popf
in
test
or
push
push
mov
(bad)
cmp
push
mov
popf
xchg
pop
jno
and
fdiv
adc
mov
mov
test
sbb
dec
or
xlat
adc
adc
xor
cli
or
ja
or
mov
nop
(bad)
cs
jmp
mov
jne
inc
cli
in
add
jecxz
add
inc
sub
sbb
xchg
stos
mov
jmp
sub
push
pop
push
int3
inc
sbb
mov
inc
mov
stos
enter
lods
mov
push
xor
inc
(bad)
cmp
rcl
rol
add
jbe
les
in
adc
mov
mov
mov
mov
mov
mov
mov
(bad)
leave
ds
inc
ret
cs
das
ret
adc
mov
push
cmp
(bad)
shr
inc
leave
mov
jp
sbb
xor
dec
cli
jmp
cmp
retf
mov
lock
call
push
jl
mov
test
jb
add
int3
add
cmp
jbe
sub
push
sti
push
lea
mov
jno
mov
test
mov
fstp
mov
(bad)
dec
fwait
or
mov
add
adc
cs
in
ja
add
or
xor
mov
in
ret
cmp
cmp
in
adc
ret
daa
scas
cmp
inc
dec
jp
xchg
adc
imul
push
call
xor
in
and
in
loope
push
(bad)
jnp
pop
sub
cld
mov
and
repz
mov
retf
iret
push
cmp
les
mov
xor
aam
or
(bad)
shr
je
add
out
ret
fild
(bad)
out
sub
mov
fbld
movs
dec
jge
stos
(bad)
and
cli
ror
adc
mov
ret
xor
loopne
jg
mov
adc
dec
or
fadd
dec
xor
add
xor
jnp
adc
add
xchg
pusha
repz
sti
loope
xchg
sub
add
sub
js
sbb
xchg
add
push
bound
mov
clc
sbb
jg
and
aaa
clc
inc
adc
and
jg
(bad)
or
adc
push
jae
xor
out
mov
add
or
sbb
xchg
xor
imul
(bad)
jmp
cld
and
xchg
call
mov
test
inc
outs
sbb
mov
jo
xchg
xchg
and
mov
xor
push
sub
mov
inc
outs
xchg
xchg
or
sub
xor
mov
cwde
retf
popa
xchg
dec
or
jns
or
int3
or
das
sbb
dec
ror
push
retf
mov
push
and
fwait
out
xchg
sbb
mov
cwde
ins
pop
and
jae
mov
pushw
xchg
iret
je
rcr
popa
test
popf
(bad)
(bad)
addr16
arpl
movs
inc
pop
jp
test
repz
out
retf
hlt
mov
aaa
retf
push
aam
and
push
nop
push
xchg
mov
aaa
cmp
mov
jmp
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
int
outs
ja
fcmovnu
cli
div
xchg
mov
jae
pop
rcr
mov
push
add
sbb
les
push
out
ja
cmp
outs
adc
mov
and
pop
ror
or
jbe
pusha
pop
push
xor
mov
xchg
scas
ja
sub
inc
push
mov
std
mov
mov
stos
fcmovnu
fst
mov
adc
pop
mov
iret
or
ficom
cmp
fsubrp
adc
sub
adc
jmp
mov
nop
add
and
es
out
pop
push
sbb
lock
ja
sub
arpl
add
loop
fidivr
ror
mov
popa
pop
sti
pop
(bad)
lods
jno
push
cld
frstor
sar
cmp
add
scas
pop
mov
xor
jl
sbb
xor
pusha
add
retf
dec
mov
fistp
dec
test
adc
cli
mov
lock
arpl
fidivr
aas
mov
pop
mov
add
int3
add
xor
rol
mov
fimul
jp
jle
xor
ja
retf
dec
sbb
adc
adc
add
adc
call
mov
bound
fcom
inc
mov
push
add
mov
dec
pop
push
push
add
add
rcl
mov
fld
imul
dec
shr
iret
pop
mov
jl
jecxz
pop
cdq
aad
jle
add
jl
sbb
outs
mov
add
lahf
jp
inc
into
xor
pop
fcmovnb
(bad)
es
jb
js
scas
sbb
bound
cmp
and
popf
imul
clc
int
ss
(bad)
iret
jl
sbb
outs
shl
fadd
cmc
mov
std
push
and
pushf
fld
dec
jb
sub
stos
pop
std
ins
out
out
in
scas
js
test
test
fcmovne
push
scas
jb
mov
std
int3
jo
mov
xor
add
cmp
dec
sbb
jg
icebp
daa
inc
cwde
mov
(bad)
lods
fdiv
jp
int3
sbb
cs
dec
sub
(bad)
jns
cmp
jae
add
fs
aas
mov
test
push
lock
pushf
fidiv
stc
adc
jmp
cld
jecxz
retf
test
jp
xchg
aas
xor
pop
fxtract
or
std
ret
(bad)
into
stc
mov
xchg
dec
push
stc
mov
pop
loop
ss
test
xor
sub
mov
cmp
test
outs
in
psraw
inc
add
mov
inc
pop
(bad)
push
aaa
psubsb
into
maxps
retf
out
in
adc
and
stos
sbb
push
pop
call
ror
out
dec
xchg
mul
lds
pop
cmps
jo
(bad)
pop
gs
mov
outs
cmps
addr16
ss
ss
push
addr16
adc
inc
jg
xlat
imul
jg
ss
fadd
mov
pop
pop
inc
jno
test
addr16
out
dec
ja
jecxz
imul
fcomip
ins
push
and
xchg
jge
mov
inc
mov
pop
xchg
push
pop
arpl
imul
add
add
arpl
jno
pop
je
jne
lds
ins
lods
jbe
adc
jb
mov
mov
push
imul
ins
cmp
add
add
test
je
pop
pop
call
mov
adc
pop
add
ja
add
cmp
add
lock
out
and
add
push
xchg
pop
jno
sbb
lds
xlat
imul
sbb
add
fs
je
out
(bad)
push
addr16
mov
cmp
jle
jbe
dec
mov
test
pop
pushf
or
push
jne
mov
bound
(bad)
retf
out
or
add
sbb
sbb
pop
pop
lahf
mov
push
test
xchg
jp
(bad)
jbe
pop
mov
push
and
xchg
cmps
outs
hlt
pop
jno
es
xchg
xchg
cwde
jns
test
cmp
js
div
test
inc
jl
mov
jb
mov
nop
lock
dec
repz
psubsb
xchg
add
or
imul
and
or
adc
pop
jno
inc
jns
pop
lea
cdq
xchg
mov
js
jne
lea
xor
pop
push
lds
cmc
jg
fdivr
dec
add
cmps
jb
xlat
gs
ja
adc
jnp
es
xchg
push
pop
shl
popf
sub
mov
call
rcl
jb
pop
sub
sbb
add
out
into
push
bound
jno
xor
mov
mov
je
mov
ja
jno
pop
(bad)
rcl
(bad)
les
sub
add
clc
ja
xchg
mov
or
div
clc
or
jb
sub
imul
mov
jle
js
je
xchg
sbb
xchg
pop
(bad)
push
enter
pop
jb
outs
jb
lea
push
push
xchg
imul
xchg
xchg
jns
jg
jl
div
push
jl
cmp
mov
mov
pop
jmp
adc
add
push
mov
xchg
cmps
jbe
xor
push
inc
jge
pop
xchg
dec
pusha
xchg
push
push
add
mov
(bad)
sub
stc
js
xchg
je
inc
adc
test
push
neg
dec
arpl
jle
js
pusha
cdq
jo
sub
sahf
(bad)
or
data16
call
ja
aad
xor
jp
addr16
loop
pop
mov
push
push
(bad)
mov
bound
pop
inc
jp
mov
mov
mov
out
inc
pusha
mov
push
sbb
pop
xchg
sub
lods
(bad)
xchg
stos
mov
push
fist
xchg
wbinvd
cwde
cmc
(bad)
imul
rcr
imul
sbb
ins
fcom
sub
xchg
push
js
call
dec
and
xchg
ins
adc
jl
push
push
pop
or
dec
xchg
test
inc
pop
call
mov
or
jp
add
add
call
pop
dec
and
movs
sub
jp
mov
stos
mov
stos
rcr
ret
les
(bad)
jp
enter
mov
into
cli
lods
ror
pop
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
sub
cmp
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
imul
jmp
xchg
xor
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
push
jo
sub
out
cmp
mov
or
stos
lods
scas
jmp
mov
imul
mov
or
fwait
stos
inc
pusha
mov
sub
mov
add
mov
sub
fwait
mov
inc
mov
imul
(bad)
scas
daa
mov
leave
jmp
add
pusha
add
loopne
mov
(bad)
cmp
mov
sub
sbb
fwait
mov
jmp
mov
add
pop
mov
or
inc
add
mov
or
fwait
mov
or
fidivr
cmp
retf
mov
imul
dec
rol
fwait
add
scas
xchg
cmp
or
mov
push
mov
jmp
dec
nop
mov
mov
cmp
retf
add
nop
jmp
or
popa
retf
mov
sub
(bad)
sub
jo
stc
sbb
jp
push
or
shr
mov
nop
fisttp
lock
(bad)
sbb
or
stos
sub
add
sbb
sbb
ret
add
cli
add
rol
rol
ds
ret
push
add
jl
sbb
stos
adc
mov
adc
inc
les
sbb
jp
add
or
ds
les
ret
pop
mov
or
xor
les
(bad)
out
stos
mov
cmp
push
or
or
(bad)
imul
jo
mov
add
mov
jno
add
add
sub
out
call
test
or
jp
(bad)
je
les
les
(bad)
jge
lds
les
push
xor
loopne
cmp
mov
inc
add
mov
xor
mov
add
mov
mov
mov
ror
push
jo
push
or
jp
mov
rol
fmul
jp
retf
add
retf
test
vpaddusb
les
mov
int
mov
cli
stos
int
call
add
int
cmp
movs
cmp
leave
mov
cmp
lahf
fmul
retf
jl
mov
stos
push
mov
lds
ins
add
add
mov
push
push
add
retf
lods
lods
sar
in
retf
mov
rol
hlt
ins
int
fmul
sbb
xor
sbb
mov
fst
lods
lods
retf
sti
in
rol
xchg
rcl
cmp
daa
in
mov
shl
mov
in
cld
sar
pop
shr
mov
xor
and
and
inc
in
retf
lock
ror
shl
pop
int
lods
sar
int3
sar
cld
add
aad
in
mov
int
jns
rol
cmp
push
pusha
iret
pop
in
rcl
rcr
iret
loopne
shr
lods
rcr
mov
sub
push
mov
mov
inc
push
(bad)
sub
jnp
xlat
idiv
shl
or
stc
int3
shl
aam
mov
dec
ins
rcl
std
fcomp
ins
iret
lea
push
or
pop
ins
aad
lods
(bad)
imul
std
fmul
ss
fld
sti
aad
in
retf
aaa
sub
jp
aam
in
fldenv
shl
mov
rcr
xlat
fs
jne
rcr
ins
fld
in
fldcw
aad
fstp
mov
(bad)
aad
ins
add
lock
sub
mov
int
popf
rcl
fild
(bad)
dec
fldenv
popf
rcr
mov
int3
ficomp
add
(bad)
fstp
clc
sub
popf
std
shl
sbb
add
inc
fst
mov
fisub
pop
add
ds
push
shr
jge
fs
or
loopne
cmp
pop
ins
rcl
in
ficom
out
fcomp
adc
setge
adc
loope
pop
fstp
into
fcomp
fmul
jecxz
(bad)
neg
mov
add
or
loopne
shr
fucom
mov
add
scas
fld
shr
in
sar
loopne
int
out
dec
in
fst
xchg
retf
shr
std
in
into
rcl
fsubp
and
leave
pop
sahf
jecxz
std
shr
out
pop
in
sahf
out
into
add
shl
jecxz
cld
out
(bad)
aad
cs
cld
aad
cmp
inc
outs
fimul
ficom
(bad)
pop
scas
jecxz
and
pop
outs
fsub
lahf
fucom
sbb
sub
loopne
int
cmp
jecxz
mov
in
lods
add
call
push
add
mov
push
pop
call
inc
jmp
lock
sahf
shl
jle
(bad)
mov
fild
in
scas
jecxz
mov
xchg
into
out
(bad)
fimul
loop
ds
ds
sbb
int3
or
ds
sar
aam
(bad)
push
into
fiadd
out
pop
iret
fs
shr
out
popf
jmp
int
add
mov
jmp
sahf
fistp
lds
cmp
pop
in
jmp
or
add
shl
in
repz
iret
and
jns
into
push
mov
sbb
mov
fbstp
fbld
ficom
pop
mov
push
jmp
call
repnz
nop
fisttp
jmp
pop
in
xchg
ins
in
(bad)
out
push
sbb
adc
cmp
jmp
scas
xlat
pop
pop
in
push
mov
mov
out
arpl
push
dec
in
sub
jmp
ds
jmp
sbb
aam
cmc
jp
out
pop
(bad)
out
scas
lock
sub
or
push
or
mov
ret
sbb
fldcw
mul
xor
das
stos
dec
shr
mov
xchg
out
out
in
aam
lahf
rcl
in
lea
pop
aas
out
dec
in
(bad)
jmp
aas
mul
add
mov
inc
pop
clc
nop
dec
rol
(bad)
hlt
sub
add
add
or
push
cli
sub
cli
bound
out
in
xchg
sub
jg
icebp
pushf
dec
repnz
dec
iret
retf
or
mov
fst
rcr
scas
jmp
mov
mov
inc
jg
sti
ins
hlt
dec
outs
in
or
iret
iret
outs
fimul
mov
rcl
push
cwde
enter
and
xchg
test
dec
imul
test
loopne
test
stc
sub
mov
(bad)
fnstcw
dec
mov
push
cmp
jns
cld
call
imul
jnp
cli
nop
call
in
pop
test
jl
leave
lods
stc
mov
call
sbb
call
jnp
fld
sti
lods
push
cmp
pushf
in
dec
outs
int3
push
xor
push
cmp
leave
fistp
jb
sub
les
call
push
pop
mov
push
adc
cdq
jnp
mov
inc
xchg
in
(bad)
sbb
mov
jp
call
loope
sub
push
push
enter
stc
mov
dec
push
inc
imul
cmp
xor
sub
dec
ret
ror
retf
mov
add
nop
popf
lods
push
xchg
mov
in
pop
cmp
dec
add
and
push
in
rcl
pop
mov
jg
aaa
sbb
mov
mov
sbb
sub
cs
sub
push
xchg
out
dec
cmp
in
stos
sub
and
pop
cld
xchg
adc
shr
mov
cmc
fisub
int
out
pop
adc
jg
das
pop
push
sub
outs
xchg
and
dec
pop
lock
lea
in
dec
push
jg
not
es
sbb
mov
add
sub
pop
pop
jge
shr
xchg
mov
call
xor
add
or
add
dec
pop
frstor
jl
lea
(bad)
frstor
mov
pushf
cmp
adc
xlat
dec
rcr
fnstsw
div
not
push
xchg
and
or
dec
xchg
pop
pop
jo
out
or
call
add
(bad)
pop
in
cmp
or
aam
cld
leave
add
adc
mov
sbb
add
mov
cli
xchg
jge
sub
cmps
bound
movs
cmp
sbb
bound
daa
arpl
mul
imul
push
(bad)
(bad)
bound
jp
fcomp
xchg
xchg
retf
or
inc
mov
daa
cmps
inc
add
push
pop
adc
test
adc
loope
cmps
mov
stos
jmp
push
pop
call
addr16
cdq
mov
xchg
aad
pop
arpl
out
adc
pop
xchg
test
and
scas
dec
rcl
add
test
push
loopne
sub
cmps
out
(bad)
lods
fisttp
out
cmp
or
es
enter
jp
les
call
(bad)
dec
test
mov
mul
mov
jge
outs
fcomi
ret
call
cmps
(bad)
lds
cdq
push
cmps
xchg
loop
or
mov
xchg
dec
adc
mov
out
mov
mov
mov
push
and
mov
leave
add
push
stos
fild
les
or
out
jo
push
imul
push
pop
inc
jne
in
mov
xchg
xor
(bad)
mov
ror
(bad)
cmp
in
je
or
call
jb
or
neg
mov
sbb
scas
push
push
test
mov
dec
add
mov
mov
mov
push
movs
idiv
cmp
lahf
shr
cmp
int3
jmp
mov
inc
cmp
movs
idiv
neg
xor
mov
gs
xchg
jge
pop
in
popf
lods
test
pop
addr16
cs
(bad)
repz
mov
imul
push
jns
mov
dec
xchg
xchg
dec
or
sub
les
loope
and
mov
sti
ret
jecxz
fwait
ret
and
mov
inc
and
add
cmp
rep
fstp
lock
mov
push
jo
jecxz
loopne
push
xor
mov
pop
mov
mov
popa
add
adc
cmp
pop
and
sti
push
mov
xor
out
cmp
test
xor
clc
in
push
adc
fistp
push
xor
sub
or
add
jnp
loopne
mov
mov
sbb
mov
imul
sbb
add
jo
jp
pop
loope
rcl
lea
test
jmp
retw
sub
aad
xchg
mov
mov
call
or
ins
or
mov
xor
(bad)
in
sbb
(bad)
pop
dec
sub
repnz
push
and
xchg
outs
fwait
and
sub
mov
mov
sub
jo
stos
mov
dec
and
mov
inc
pop
push
ror
sbb
jmp
mov
dec
dec
and
in
sub
adc
movs
(bad)
and
dec
je
and
cwde
inc
das
add
xchg
mov
test
mov
xlat
pushf
mov
pop
inc
xchg
add
pop
es
enter
loopne
test
bound
sbb
(bad)
ss
jl
aam
xor
out
add
dec
retf
aas
jbe
jne
movs
sub
ins
into
lahf
pushf
stos
cmps
xlat
push
dec
lock
outs
cmps
xlat
and
pop
inc
sahf
das
push
xor
xchg
imul
sub
imul
fsub
dec
add
xor
cdq
repz
sti
test
icebp
lods
push
lea
fld
mov
aam
js
push
call
idiv
into
cmp
jne
add
or
inc
sub
push
shl
je
es
pop
pop
(bad)
outs
test
mov
add
push
add
daa
and
add
shl
lods
jp
mov
jbe
(bad)
jl
pop
add
mul
fcmovnu
mov
pop
inc
popa
jns
mov
adc
adc
stos
push
fdivr
inc
ret
jp
pop
ficom
outs
(bad)
stos
mov
jnp
sub
loope
test
imul
dec
icebp
leave
pop
in
jae
fdiv
leave
push
es
or
add
stos
test
sbb
mov
aad
sub
lods
mov
add
xchg
mov
mov
and
or
shr
fisub
mov
or
ret
jmp
mov
cdq
and
hlt
ret
ret
xor
mov
mov
outs
mov
xchg
adc
lods
stos
adc
sar
and
and
fadd
pop
jbe
jmp
and
and
cmp
test
jo
das
cmp
mov
ins
pop
push
mov
cmp
dec
test
shr
add
sbb
pushf
popa
jbe
and
and
push
fs
jmp
ror
or
sahf
neg
adc
cwde
shl
jae
jns
pusha
daa
das
and
inc
enter
in
data16
in
pop
or
mov
test
push
data16
imul
clc
rcr
adc
fisttp
sbb
lahf
pop
inc
test
int
inc
xchg
pop
sar
sub
mov
push
inc
rol
jae
inc
or
(bad)
jmp
fadd
outs
mov
xchg
inc
add
adc
adc
inc
add
add
mov
lods
add
(bad)
cmp
fstp
not
xchg
sbb
or
inc
mov
xchg
cmp
or
das
mov
lods
imul
add
jge
jmp
(bad)
adc
mov
cmp
call
sub
cmp
sbb
js
fist
jo
cmp
mov
rcl
and
adc
jle
xchg
dec
sbb
dec
push
jns
xor
into
mov
mov
push
out
cmps
mov
mov
pop
jmp
in
repz
dec
jp
sti
or
inc
pop
jl
xor
scas
push
test
jno
outs
sbb
lahf
mov
das
jmp
pop
ret
dec
idiv
out
jle
mov
lods
iret
pop
out
jp
cmp
icebp
out
idiv
mov
sbb
push
xor
sar
out
jbe
mov
cld
leave
movs
mov
in
(bad)
sti
int3
cmp
repz
retf
add
outs
inc
jge
mov
jbe
add
mov
cwde
or
jecxz
sbb
xor
or
and
xchg
xchg
js
cmp
clc
jne
imul
aas
cli
shl
jbe
xchg
rol
ret
xor
call
jmp
mov
loopne
loopne
dec
or
loop
das
jl
or
jne
cmp
icebp
xlat
ret
imul
ja
adc
mov
push
in
mov
test
xchg
and
or
or
sub
loopne
mov
and
add
rol
shl
sub
cmp
and
push
rol
mov
jp
cmps
sub
pop
push
jge
test
mov
test
add
std
mov
mov
cmp
sub
bound
add
xchg
cmp
pop
mov
lods
xchg
js
(bad)
daa
arpl
call
or
test
xchg
xchg
xchg
xchg
xchg
pop
cmp
jp
mov
or
pop
and
mov
add
and
add
mov
pushf
test
sbb
adc
pop
dec
mov
test
daa
xchg
jbe
xor
rol
xor
inc
or
lock
enter
pop
into
push
jge
sub
dec
xor
arpl
mov
test
mov
mov
pop
aas
inc
mov
ins
fdivr
movs
mov
test
jl
enter
mov
test
int3
inc
(bad)
sar
mov
js
ret
cwde
or
push
outs
aaa
xchg
pop
test
mov
add
pusha
add
pop
jg
aaa
test
pop
mov
enter
or
or
add
cwde
cwde
nop
sti
js
sub
sbb
add
mov
push
test
adc
add
adc
cmp
xchg
cmc
enter
mov
xor
xchg
or
dec
pop
dec
imul
xchg
and
add
dec
test
addr16
pusha
add
add
sbb
push
xchg
aad
mov
add
xchg
mov
or
call
xchg
xchg
cmp
mov
das
inc
(bad)
or
xchg
in
cwde
xchg
sub
xchg
scas
pusha
xchg
js
(bad)
retf
sbb
inc
sbb
xchg
sahf
mov
add
add
cmps
jns
push
mov
enter
fwait
sti
aaa
xchg
xchg
test
push
cmp
or
lea
mov
imul
xchg
int
mov
add
mov
ret
sbb
cdq
xchg
mov
pushf
pop
mov
clc
xchg
imul
fnstcw
mov
daa
add
mov
xlat
mov
andnps
stc
xchg
jo
lahf
push
js
loope
jb
sbb
dec
vpmacsswd
imul
je
adc
jmp
imul
and
retf
stc
pop
mov
xchg
xchg
sub
cwde
inc
dec
cdq
mov
xchg
cmp
or
stc
lea
jp
xchg
daa
jbe
sbb
imul
push
sub
jno
xchg
shr
fwait
inc
enter
jns
leave
xchg
adc
push
xchg
push
push
cmp
pushf
sub
mov
pusha
mov
cmp
call
sbb
jg
imul
xchg
mov
mov
sbb
dec
cdq
into
pop
test
cdq
mov
mov
loopne
and
xor
jg
test
xchg
push
leave
xchg
mov
dec
cmp
jns
bound
fsubr
xchg
jns
ds
xchg
inc
fiadd
outs
call
lahf
sbb
mov
js
xchg
jae
stos
push
ficomp
or
movs
xchg
mov
sahf
stos
push
jne
movs
imul
xchg
mov
jmp
movs
cli
mov
cmp
push
cmp
jns
nop
js
xchg
sub
test
cdq
popf
xchg
jns
movs
jns
cs
fcmovne
xchg
sti
pop
jns
dec
test
fstp
sub
adc
leave
cwde
cld
mov
adc
xchg
jmp
xchg
ret
jns
and
mov
or
sub
jo
popf
ficomp
jmp
lods
dec
xor
stos
cdq
inc
jns
imul
popf
sbb
test
(bad)
cmp
popf
pop
or
stos
lahf
shr
aaa
stos
mov
mov
mov
inc
jns
push
jns
xor
scas
sub
inc
push
dec
or
dec
sahf
test
mov
or
mov
jns
mov
icebp
jp
in
lods
pop
fwait
scas
nop
jnp
sar
cmp
mov
test
jge
mov
sbb
xchg
pusha
(bad)
mov
pushf
fwait
or
stos
movs
pop
mov
mov
out
sub
jnp
xchg
cdq
mov
add
rol
stc
xchg
fwait
fwait
mov
ficomp
loopne
ror
mov
mov
mov
sub
add
inc
aaa
aas
lock
mov
mov
test
mov
pop
fidiv
mov
cmp
jmp
fistp
xor
mov
lods
popf
jmp
mov
mov
pop
mov
test
push
jmp
(bad)
jmp
add
cmp
jno
mov
retf
scas
test
ins
mov
sub
lods
mov
sub
pushf
mov
mov
cmc
imul
fs
mov
fwait
mov
sbb
mov
inc
dec
stos
add
sbb
add
mov
jmp
sbb
mov
int3
add
sub
pop
(bad)
mov
pushf
mov
fisubr
mov
stc
lds
(bad)
(bad)
sti
(bad)
push
fwait
mov
jmp
lds
mov
or
sbb
xchg
mov
(bad)
and
mov
push
leave
pop
fadd
ins
in
push
push
sbb
call
pop
fwait
aad
mov
fadd
dec
fldcw
dec
sahf
pop
lods
(bad)
pop
ins
retf
adc
mov
cmp
les
fisubr
jl
call
fild
mov
int
stc
xchg
aas
sbb
jbe
enter
cmc
jmp
adc
into
jbe
sbb
shr
mov
cmp
cmp
movs
pushf
(bad)
cmc
imul
or
iret
or
inc
ins
test
sub
mov
int
fadd
hlt
cld
retf
mov
jmp
loop
iret
fmul
cmp
jmp
ror
mov
pop
retf
shr
sbb
jmp
retf
int3
push
mov
jns
cdq
ror
sub
nop
sub
int
mov
(bad)
mov
test
mov
mov
xchg
or
scas
add
adc
adc
ret
push
jns
loop
add
cmp
aaa
mov
dec
pop
int3
or
(bad)
out
ror
shr
into
adc
retf
(bad)
outs
lea
pop
mov
pop
xchg
and
ins
fcomp
pop
iret
jno
(bad)
sar
into
or
push
dec
popf
fmul
fnstcw
int3
int
fadd
mov
shl
sub
add
les
ror
aam
popf
retf
inc
cld
int3
pop
std
aam
mov
int3
add
shr
sbb
cmp
in
fidivr
dec
leave
xor
fsubr
mov
add
mov
loope
fsub
sub
aas
jl
call
pop
mov
cmp
jmp
aam
mov
inc
lods
aam
pop
int3
or
xor
test
fisttp
fmulp
cmps
std
int
cmp
xchg
fwait
sbb
int
(bad)
int
or
aaa
lods
fsubr
fstp
and
xlat
imul
popf
loope
sub
adc
fst
fidiv
leave
push
lods
or
mov
add
push
in
sbb
ror
mov
retf
in
enter
adc
fdiv
(bad)
jecxz
pop
les
fdivr
push
xchg
push
loopne
push
nop
in
fdivr
push
into
lds
jno
mov
or
arpl
push
jle
imul
lods
loope
or
aad
iret
dec
sahf
in
sub
push
fiadd
jne
out
sbb
idiv
sub
std
ffree
lods
call
popf
call
dec
(bad)
loope
dec
rol
xlat
xchg
fmul
sbb
jmp
mov
mov
fsubp
test
in
ds
cs
loopne
or
loopne
dec
ficom
(bad)
std
cld
jmp
addr16
mov
fucom
mov
fcomp
dec
add
in
jge
rcr
into
in
mov
push
loopne
in
fisubr
in
aaa
(bad)
(bad)
mov
jge
jmp
(bad)
fucom
sub
(bad)
lds
sahf
fcomp
push
iret
(bad)
fldcw
aad
scas
lock
jmp
or
out
pop
out
test
jmp
pop
in
pop
jg
call
lock
jmp
mov
and
in
int
sbb
call
scas
in
dec
pushf
mov
add
fcomp
shr
cmp
out
or
aad
push
sar
loop
push
add
jle
inc
hlt
hlt
(bad)
call
sub
int3
outs
add
fucomip
mov
(bad)
add
mul
jae
in
add
(bad)
jmp
arpl
out
add
add
push
mul
into
repz
int
into
test
loope
push
jmp
mov
hlt
(bad)
push
in
dec
jg
inc
push
neg
pop
fmul
aam
das
in
pop
(bad)
lahf
hlt
sar
fiadd
out
xchg
cmp
xchg
(bad)
jne
clc
mov
cmc
int
div
fmulp
dec
iret
cmc
adc
daa
(bad)
fcmovu
into
(bad)
retf
test
and
in
out
pop
not
stos
add
push
pop
aas
xchg
mov
clc
js
jmp
dec
cli
jno
fmulp
outs
jmp
add
leave
pop
cmc
jns
cld
xlat
outs
icebp
jbe
ret
fs
stc
lds
into
out
clc
outs
das
sar
cli
psubsw
jg
call
dec
jmp
pop
mov
(bad)
out
test
jmp
sub
mov
pop
sbb
xchg
xchg
mov
pop
add
nop
cwde
mov
mov
cmp
cmps
cmps
cdq
lods
xchg
mov
test
les
add
rcr
mov
mov
cmps
test
(bad)
xchg
mov
mov
mov
into
xchg
mov
aad
pop
paddusb
jecxz
dec
pushf
xor
idiv
movs
fistp
lds
outs
rcr
mov
bt
pop
repz
push
push
mov
(bad)
pop
add
xchg
movs
int
enter
(bad)
lods
mov
mov
or
rol
dec
je
xor
push
ja
pusha
pop
xchg
mov
xchg
and
push
retf
xchg
xor
sub
cmp
xor
adc
and
mov
sub
mov
inc
popf
mov
out
mov
arpl
or
mov
xlat
pusha
pop
cmp
push
int
shl
dec
enter
fwait
ins
cmps
arpl
fisttp
push
dec
mov
adc
mov
mov
es
push
stos
sub
(bad)
data16
outs
xor
je
ss
stos
adc
lea
loope
les
hlt
pop
cmp
sbb
jb
push
sub
in
add
cli
test
inc
pop
fild
pusha
popa
pop
xchg
xchg
sub
or
fisubr
jl
cmp
inc
cwde
pop
dec
add
push
in
xchg
popa
jb
adc
mov
xlat
jg
ds
push
push
adc
push
add
inc
pop
stos
push
inc
or
mov
push
cmp
je
lea
fs
xor
hlt
push
dec
add
pusha
xchg
sbb
addr16
dec
sub
push
push
xor
pusha
adc
rol
xor
xchg
sub
cmps
push
imul
jns
add
mov
out
add
or
jg
stos
and
call
push
jmp
mov
add
imul
jg
push
push
pushf
dec
(bad)
stos
mov
dec
lds
xor
enter
xchg
bound
pop
push
xchg
scas
shl
in
adc
xor
test
sbb
rol
inc
inc
leave
in
mov
inc
sti
sub
(bad)
es
and
frstor
lods
add
push
ins
mov
xor
ins
mov
push
ret
lahf
mov
dec
loope
outs
or
retf
shl
int3
shr
pop
das
cli
jp
les
ret
imul
test
nop
test
nop
sub
cmps
mov
cmp
jno
dec
pop
lock
sub
outs
mov
(bad)
nop
rcl
pop
stos
dec
outs
mov
cwde
lds
pop
fs
cmps
push
imul
jmp
repnz
rcl
mov
push
neg
cs
or
mov
fstp
repz
imul
rol
xadd
jb
fcmovb
add
fnstcw
jo
ret
outs
out
neg
ss
test
or
rol
fcomp
ja
or
retf
sub
int
fld
xor
jmp
popf
(bad)
fnstcw
dec
fsub
neg
cmp
and
mov
cmp
(bad)
repz
adc
or
(bad)
stos
mov
adc
mov
outs
push
ss
cmp
mov
jge
out
and
out
mov
movs
pop
loope
neg
imul
not
jl
cmp
cmp
mul
idiv
jg
sti
xchg
push
jnp
(bad)
sti
pop
fdivp
pop
mov
out
adc
jno
lock
rol
xor
inc
mov
je
add
idiv
fdiv
pop
and
sbb
repnz
and
or
ret
mov
pop
sbb
add
jo
add
dec
or
aaa
ret
gs
je
xor
loopne
ror
ins
jle
or
jge
inc
rep
xchg
or
xchg
clc
inc
inc
gs
push
pop
hlt
pop
scas
(bad)
add
sbb
add
adc
or
aaa
sbb
push
and
and
push
xor
nop
xchg
aaa
jno
test
test
inc
cli
dec
pop
sbb
fist
jbe
inc
and
and
enter
outs
mov
dec
or
inc
mov
xchg
push
and
push
cdq
(bad)
and
arpl
push
dec
dec
mov
loopne
inc
loop
sub
dec
adc
inc
add
push
ins
cmps
dec
pop
das
and
sub
push
jae
(bad)
in
sbb
xor
pop
stc
dec
push
cmp
pushf
mov
fs
pop
mov
ja
movs
cmp
dec
add
popf
push
fsub
imul
cmp
sbb
jp
in
cmps
inc
pop
retf
ss
mov
iret
or
jbe
hlt
lahf
or
push
lea
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
rcl
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
ins
adc
pop
sbb
add
imul
add
loopne
fmul
jne
lds
outs
xchg
or
xchg
pop
mov
stos
outs
jno
(bad)
fadd
mov
and
pop
jge
add
or
mov
mov
(bad)
sahf
std
jbe
ins
std
lods
add
jnp
icebp
mov
mov
mov
(bad)
xchg
mov
ret
push
(bad)
xchg
mov
in
je
fistp
mov
jmp
leave
fcmovnu
push
loope
or
jae
dec
test
pop
cwde
or
out
jo
stos
loope
dec
mov
test
xchg
lods
adc
jmp
or
xor
fsubr
pop
jmp
jo
or
xlat
pop
fadd
xor
mov
pop
loope
mov
(bad)
adc
mov
adc
mov
mov
cld
fstp
dec
cmp
mov
cmp
mov
fadd
pop
cmps
jo
or
test
add
icebp
pop
in
mov
retf
or
jb
jns
gs
sbb
add
ret
shl
fcom
cs
or
mov
xchg
pop
in
clc
rol
and
or
and
pop
or
fdiv
cmp
test
scas
lock
cmp
sbb
xor
pop
push
ret
test
outs
scas
imul
std
mov
xor
imul
rcr
push
je
(bad)
in
ins
and
jle
stos
sar
xchg
pop
stos
push
mov
imul
inc
pusha
fs
mov
ror
pusha
xlat
dec
(bad)
hlt
mov
jge
pop
(bad)
sti
leave
jae
stos
mov
mov
ret
pop
scas
lock
outs
ins
or
int3
and
mov
sar
xor
loope
es
xor
xlat
fld
shr
fld1
imul
sahf
ins
jns
inc
(bad)
clc
mov
nop
push
aaa
mov
jb
jo
pop
or
movs
add
cwde
cmp
ror
cmps
mov
jae
in
pop
jnp
sbb
sbb
(bad)
and
shr
adc
sbb
mov
lods
jae
(bad)
fs
mov
xchg
(bad)
mov
movs
mov
retf
cmp
aaa
mov
je
adc
fcmovnb
mov
les
jbe
in
outs
xor
or
xor
out
push
data16
popf
out
aam
add
push
mov
ret
mov
jl
sahf
fbstp
dec
mov
shl
and
cmp
(bad)
outs
dec
iret
sbb
xchg
jns
hlt
loop
mov
adc
pusha
jp
jp
fisub
add
mov
(bad)
gs
ss
iret
sbb
loope
jae
popa
jg
sahf
fistp
push
pop
xchg
mov
test
add
dec
pop
int3
test
adc
push
mul
fistp
mov
das
outs
retf
(bad)
add
bound
outs
daa
add
xchg
jnp
(bad)
ins
push
push
jns
out
rcl
adc
gs
pop
pop
mov
js
(bad)
fs
xchg
pop
jge
xchg
push
outs
test
int3
jbe
ffreep
ins
(bad)
out
mov
data16
add
and
add
xchg
jge
enter
arpl
inc
jns
out
and
jo
pop
test
pop
push
aam
jnp
xchg
imul
outs
cmp
pop
xor
int
jb
jne
aam
fs
add
jbe
rol
dec
jne
imul
jne
and
je
inc
jnp
out
jb
jg
div
and
fdivr
jle
xchg
jle
xchg
push
adc
mov
mov
xchg
xor
or
pop
mov
nop
es
imul
mov
xlat
sbb
pop
add
je
push
jns
div
enter
add
pop
das
data16
int
push
push
jae
test
mov
mov
call
outs
xchg
mov
push
pop
inc
cmps
add
jnp
outs
ds
out
addr16
aaa
cmp
adc
fadd
jg
or
cmps
test
outs
mov
pop
inc
jno
call
sbb
add
js
push
mov
pop
push
cwde
ins
jne
jne
ja
xchg
fs
clc
xchg
inc
jle
cwde
mov
(bad)
pop
jne
bound
add
cwde
pop
mov
jge
test
fs
fmul
(bad)
mov
dec
xlat
pop
aaa
mov
or
mov
test
(bad)
test
test
mov
mul
push
add
xor
push
sub
test
jle
(bad)
jae
fcomp
sub
pop
in
out
mov
adc
pop
push
jbe
xchg
imul
addr16
or
in
mul
pop
xchg
mov
or
mov
gs
test
cwde
ins
sbb
sub
pop
pusha
stc
data16
test
inc
jns
xlat
ins
sub
std
inc
jl
or
jnp
mov
jmp
sub
mov
mov
add
popa
sub
test
outs
push
xlat
sbb
mov
jl
mov
fcom
mov
jbe
mov
cmp
cmp
and
shl
gs
push
sub
imul
sbb
out
sbb
outs
mov
(bad)
rol
mov
popf
or
xchg
sbb
fwait
dec
pusha
push
test
add
add
xchg
mov
add
push
jg
test
addr16
jo
push
imul
add
dec
fist
ss
outs
inc
neg
sub
data16
test
and
xchg
shl
div
das
(bad)
arpl
sub
pusha
pop
pop
inc
mov
leave
mov
sub
sub
cmc
ins
shl
cdq
cwde
mov
lock
adc
sahf
pop
popa
xchg
mov
mov
jmp
jp
xchg
push
(bad)
cwde
and
pop
cmps
jb
xchg
imul
xor
ins
push
leave
(bad)
ins
sub
push
nop
dec
stc
fwait
mov
es
sbb
ins
(bad)
xchg
pop
inc
pop
popa
dec
pop
gs
mov
cmp
jb
cmps
add
ss
(bad)
push
jo
pop
outs
jb
test
push
jl
js
xor
cmps
popa
sub
cmps
mov
push
jne
aaa
or
mov
test
push
movs
(bad)
mov
test
inc
add
inc
test
dec
push
ja
xchg
push
and
cmp
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
sub
cmp
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
imul
jmp
xchg
xor
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
push
jo
sub
out
cmp
mov
or
stos
lods
scas
jmp
mov
imul
mov
or
fwait
stos
inc
pusha
mov
sub
mov
add
mov
sub
fwait
mov
inc
mov
imul
(bad)
scas
daa
mov
leave
jmp
add
pusha
add
loopne
mov
(bad)
cmp
mov
sub
sbb
fwait
mov
jmp
mov
add
pop
mov
or
inc
add
mov
or
fwait
mov
or
fidivr
cmp
retf
mov
imul
dec
rol
fwait
add
scas
xchg
cmp
or
mov
push
mov
jmp
dec
nop
mov
mov
cmp
retf
add
nop
jmp
or
popa
retf
mov
sub
(bad)
sub
jo
stc
sbb
jp
push
or
shr
mov
nop
fisttp
lock
(bad)
sbb
or
stos
sub
add
sbb
sbb
ret
add
cli
add
rol
rol
ds
ret
push
add
jl
sbb
stos
adc
mov
adc
inc
les
sbb
jp
add
or
ds
les
ret
pop
mov
or
xor
les
(bad)
out
stos
mov
cmp
push
or
or
(bad)
imul
jo
mov
add
mov
jno
add
add
sub
out
call
test
or
jp
(bad)
je
les
les
(bad)
jge
lds
les
push
xor
loopne
cmp
mov
inc
add
mov
xor
mov
add
mov
mov
mov
ror
push
jo
push
or
jp
mov
rol
fmul
jp
retf
add
retf
test
vpaddusb
les
mov
int
mov
cli
stos
int
call
add
int
cmp
movs
cmp
leave
mov
cmp
lahf
fmul
retf
jl
mov
stos
push
mov
lds
ins
add
add
mov
push
push
add
retf
lods
lods
sar
in
retf
mov
rol
hlt
ins
int
fmul
sbb
xor
sbb
mov
fst
lods
lods
retf
sti
in
rol
xchg
rcl
cmp
daa
in
mov
shl
mov
in
cld
sar
pop
shr
mov
xor
and
and
inc
in
retf
lock
ror
shl
pop
int
lods
sar
int3
sar
cld
add
aad
in
mov
int
jns
rol
cmp
push
pusha
iret
pop
in
rcl
rcr
iret
loopne
shr
lods
rcr
mov
sub
push
mov
mov
inc
push
(bad)
sub
jnp
xlat
idiv
shl
or
stc
int3
shl
aam
mov
dec
ins
rcl
std
fcomp
ins
iret
lea
push
or
pop
ins
aad
lods
(bad)
imul
std
fmul
ss
fld
sti
aad
in
retf
aaa
sub
jp
aam
in
fldenv
shl
mov
rcr
xlat
fs
jne
rcr
ins
fld
in
fldcw
aad
fstp
mov
(bad)
aad
ins
add
lock
sub
mov
int
popf
rcl
fild
(bad)
dec
fldenv
popf
rcr
mov
int3
ficomp
add
(bad)
fstp
clc
sub
popf
std
shl
sbb
add
inc
fst
mov
fisub
pop
add
ds
push
shr
jge
fs
or
loopne
cmp
pop
ins
rcl
in
ficom
out
fcomp
adc
setge
adc
loope
pop
fstp
into
fcomp
fmul
jecxz
(bad)
neg
mov
add
or
loopne
shr
fucom
mov
add
scas
fld
shr
in
sar
loopne
int
out
dec
in
fst
xchg
retf
shr
std
in
into
rcl
fsubp
and
leave
pop
sahf
jecxz
std
shr
out
pop
in
sahf
out
into
add
shl
jecxz
cld
out
(bad)
aad
cs
cld
aad
cmp
inc
outs
fimul
ficom
(bad)
pop
scas
jecxz
and
pop
outs
fsub
lahf
fucom
sbb
sub
loopne
int
cmp
jecxz
mov
in
lods
add
call
push
add
mov
push
pop
call
inc
jmp
lock
sahf
shl
jle
(bad)
mov
fild
in
scas
jecxz
mov
xchg
into
out
(bad)
fimul
loop
ds
ds
sbb
int3
or
ds
sar
aam
(bad)
push
into
fiadd
out
pop
iret
fs
shr
out
popf
jmp
int
add
mov
jmp
sahf
fistp
lds
cmp
pop
in
jmp
or
add
shl
in
repz
iret
and
jns
into
push
mov
sbb
mov
fbstp
fbld
ficom
pop
mov
push
jmp
call
repnz
nop
fisttp
jmp
pop
in
xchg
ins
in
(bad)
out
push
sbb
adc
cmp
jmp
scas
xlat
pop
pop
in
push
mov
mov
out
arpl
push
dec
in
sub
jmp
ds
jmp
sbb
aam
cmc
jp
out
pop
(bad)
out
scas
lock
sub
or
push
or
mov
ret
sbb
fldcw
mul
xor
das
stos
dec
shr
mov
xchg
out
out
in
aam
lahf
rcl
in
lea
pop
aas
out
dec
in
(bad)
jmp
aas
mul
add
mov
inc
pop
clc
nop
dec
rol
(bad)
hlt
sub
add
add
or
push
cli
sub
cli
bound
out
in
xchg
sub
jg
icebp
pushf
dec
repnz
dec
iret
retf
or
mov
fst
rcr
scas
jmp
mov
mov
inc
jg
sti
ins
hlt
dec
outs
in
or
iret
iret
outs
fimul
mov
rcl
push
cwde
enter
and
xchg
test
dec
imul
test
loopne
test
stc
sub
mov
(bad)
fnstcw
dec
mov
push
cmp
jns
cld
call
imul
jnp
cli
nop
call
in
pop
test
jl
leave
lods
stc
mov
call
sbb
call
jnp
fld
sti
lods
push
cmp
pushf
in
dec
outs
int3
push
xor
push
cmp
leave
fistp
jb
sub
les
call
push
pop
mov
push
adc
cdq
jnp
mov
inc
xchg
in
(bad)
sbb
mov
jp
call
loope
sub
push
push
enter
stc
mov
dec
push
inc
imul
cmp
xor
sub
dec
ret
ror
retf
mov
add
nop
popf
lods
push
xchg
mov
in
pop
cmp
dec
add
and
push
in
rcl
pop
mov
jg
aaa
sbb
mov
mov
sbb
sub
cs
sub
push
xchg
out
dec
cmp
in
stos
sub
and
pop
cld
xchg
adc
shr
mov
cmc
fisub
int
out
pop
adc
jg
das
pop
push
sub
outs
xchg
and
dec
pop
lock
lea
in
dec
push
jg
not
es
sbb
mov
add
sub
pop
pop
jge
shr
xchg
mov
call
xor
add
or
add
dec
pop
frstor
jl
lea
(bad)
frstor
mov
pushf
cmp
adc
xlat
dec
rcr
fnstsw
div
not
push
xchg
and
or
dec
xchg
pop
pop
jo
out
or
call
add
(bad)
pop
in
cmp
or
aam
cld
leave
add
adc
mov
sbb
add
mov
cli
xchg
jge
sub
cmps
bound
movs
cmp
sbb
bound
daa
arpl
mul
imul
push
(bad)
(bad)
bound
jp
fcomp
xchg
xchg
retf
or
inc
mov
daa
cmps
inc
add
push
pop
adc
test
adc
loope
cmps
mov
stos
jmp
push
pop
call
addr16
cdq
mov
xchg
aad
pop
arpl
out
adc
pop
xchg
test
and
scas
dec
rcl
add
test
push
loopne
sub
cmps
out
(bad)
lods
fisttp
out
cmp
or
es
enter
jp
les
call
(bad)
dec
test
mov
mul
mov
jge
outs
fcomi
ret
call
cmps
(bad)
lds
cdq
push
cmps
xchg
loop
or
mov
xchg
dec
adc
mov
out
mov
mov
mov
push
and
mov
leave
add
push
stos
fild
les
or
out
jo
push
imul
push
pop
inc
jne
in
mov
xchg
xor
(bad)
mov
ror
(bad)
cmp
in
je
or
call
jb
or
neg
mov
sbb
scas
push
push
test
mov
dec
add
mov
mov
mov
push
movs
idiv
cmp
lahf
shr
cmp
int3
jmp
mov
inc
cmp
movs
idiv
neg
xor
mov
gs
xchg
jge
pop
in
popf
lods
test
pop
addr16
cs
(bad)
repz
mov
imul
push
jns
mov
dec
xchg
xchg
dec
or
sub
les
loope
and
mov
sti
ret
jecxz
fwait
ret
and
mov
inc
and
add
cmp
rep
fstp
lock
mov
push
jo
jecxz
loopne
push
xor
mov
pop
mov
mov
popa
add
adc
cmp
pop
and
sti
push
mov
xor
out
cmp
test
xor
clc
in
push
adc
fistp
push
xor
sub
or
add
jnp
loopne
mov
mov
sbb
mov
imul
sbb
add
jo
jp
pop
loope
rcl
lea
test
jmp
retw
sub
aad
xchg
mov
mov
call
or
ins
or
mov
xor
(bad)
in
sbb
(bad)
pop
dec
sub
repnz
push
and
xchg
outs
fwait
and
sub
mov
mov
sub
jo
stos
mov
dec
and
mov
inc
pop
push
ror
sbb
jmp
mov
dec
dec
and
in
sub
adc
movs
(bad)
and
dec
je
and
cwde
inc
das
add
xchg
mov
test
mov
xlat
pushf
mov
pop
inc
xchg
add
pop
es
enter
loopne
test
bound
sbb
(bad)
ss
jl
aam
xor
out
add
dec
retf
aas
jbe
jne
movs
sub
ins
into
lahf
pushf
stos
cmps
xlat
push
dec
lock
outs
cmps
xlat
and
pop
inc
sahf
das
push
xor
xchg
imul
sub
imul
fsub
dec
add
xor
cdq
repz
sti
test
icebp
lods
push
lea
fld
mov
aam
js
push
call
idiv
into
cmp
jne
add
or
inc
sub
push
shl
je
es
pop
pop
(bad)
outs
test
mov
add
push
add
daa
and
add
shl
lods
jp
mov
jbe
(bad)
jl
pop
add
mul
fcmovnu
mov
pop
inc
popa
jns
mov
adc
adc
stos
push
fdivr
inc
ret
jp
pop
ficom
outs
(bad)
stos
mov
jnp
sub
loope
test
imul
dec
icebp
leave
pop
in
jae
fdiv
leave
push
es
or
add
stos
test
sbb
mov
aad
sub
lods
mov
add
xchg
mov
mov
and
or
shr
fisub
mov
or
ret
jmp
mov
cdq
and
hlt
ret
ret
xor
mov
mov
outs
mov
xchg
adc
lods
stos
adc
sar
and
and
fadd
pop
jbe
jmp
and
and
cmp
test
jo
das
cmp
mov
ins
pop
push
mov
cmp
dec
test
shr
add
sbb
pushf
popa
jbe
and
and
push
fs
jmp
ror
or
sahf
neg
adc
cwde
shl
jae
jns
pusha
daa
das
and
inc
enter
in
data16
in
pop
or
mov
test
push
data16
imul
clc
rcr
adc
fisttp
sbb
lahf
pop
inc
test
int
inc
xchg
pop
sar
sub
mov
push
inc
rol
jae
inc
or
(bad)
jmp
fadd
outs
mov
xchg
inc
add
adc
adc
inc
add
add
mov
lods
add
(bad)
cmp
fstp
not
xchg
sbb
or
inc
mov
xchg
cmp
or
das
mov
lods
imul
add
jge
jmp
(bad)
adc
mov
cmp
call
sub
cmp
sbb
js
fist
jo
cmp
mov
rcl
and
adc
jle
xchg
dec
sbb
dec
push
jns
xor
into
mov
mov
push
out
cmps
mov
mov
pop
jmp
in
repz
dec
jp
sti
or
inc
pop
jl
xor
scas
push
test
jno
outs
sbb
lahf
mov
das
jmp
pop
ret
dec
idiv
out
jle
mov
lods
iret
pop
out
jp
cmp
icebp
out
idiv
mov
sbb
push
xor
sar
out
jbe
mov
cld
leave
movs
mov
in
(bad)
sti
int3
cmp
repz
retf
add
outs
inc
jge
mov
jbe
add
mov
cwde
or
jecxz
sbb
xor
or
and
xchg
xchg
js
cmp
clc
jne
imul
aas
cli
shl
mov
loopne
(bad)
mov
(bad)
rcr
lock
xor
add
xchg
xlat
std
push
test
movs
in
movq
push
ja
repz
cmps
jl
cwde
jle
mov
std
xchg
jle
nop
jnp
mov
cmc
xchg
call
gs
and
or
or
or
loopne
mov
and
add
rol
rcl
sub
cmp
and
add
rol
mov
jp
xchg
mov
push
jge
test
mov
test
add
mov
dec
cwde
test
daa
jp
sbb
mov
lock
cmp
pop
mov
lods
cmp
pop
add
arpl
enter
js
cwde
pusha
or
test
addr16
addr16
mov
sub
sub
cbw
inc
imul
rol
mov
ins
pop
push
add
ja
inc
mov
or
ja
cwde
mov
sub
xchg
or
cmp
or
adc
or
add
jns
addr16
mov
or
mov
aam
mov
aad
cmp
sti
in
xor
mov
call
sbb
xchg
fmul
dec
add
sbb
mov
cmps
xchg
add
enter
xchg
xchg
clc
mov
(bad)
jl
or
push
mov
add
popa
clc
jl
mov
adc
add
ror
dec
loopne
repnz
js
add
mov
(bad)
lock
push
js
shr
add
mov
and
xchg
jbe
push
mov
lock
xor
cmp
lock
xchg
mov
xchg
xchg
mov
repnz
mov
xor
xchg
add
mov
dec
hlt
cmp
sub
addr16
pusha
add
add
fcom
xchg
ror
test
add
fadd
daa
dec
mov
jns
enter
nop
xchg
test
int
pop
xchg
sbb
xchg
test
pusha
push
lea
pop
(bad)
or
sub
xchg
scas
and
cmp
clc
sbb
fst
sub
in
jg
fcom
dec
xchg
sub
pop
xchg
cwde
mov
push
mov
test
and
jbe
cmp
fcomp
rol
pushf
mov
xchg
pop
loopne
ins
sbb
mov
fs
jmp
(bad)
cmp
mov
movs
lea
jbe
xchg
stos
pop
nop
enter
enter
add
mov
sar
sbb
cdq
andnps
mov
push
pop
lahf
fdivrp
jb
fst
mov
mov
pop
xchg
add
lahf
pop
jo
je
adc
add
sub
mov
xchg
ins
push
push
test
nop
mov
js
fstp
and
jp
push
mov
jbe
jmp
shr
xchg
jnp
xchg
in
xchg
push
jns
dec
stc
popf
xchg
sahf
add
js
mov
mov
xchg
add
xchg
aas
push
sub
add
push
test
jp
aaa
mov
jg
imul
pushf
jnp
fwait
cmp
sub
jmp
mov
cwde
loop
xchg
pop
fiadd
and
inc
xchg
dec
fldenv
clc
movs
push
retf
jns
sbb
cmc
imul
cmps
fnstcw
mov
dec
loopne
cmp
jge
mov
adc
aaa
mov
cmp
cmps
add
popf
push
mov
clc
stos
dec
lock
add
cdq
inc
or
or
lods
je
stos
dec
cdq
lahf
scas
ficomp
xchg
jge
xchg
mov
xchg
pop
imul
add
ja
mov
mov
push
or
pushf
mov
pop
jns
cmp
cdq
cdq
inc
stc
xor
jle
xchg
jae
call
stos
retf
cli
mov
stos
mov
jmp
mov
stos
pusha
call
pop
shr
movs
sub
or
lods
aas
or
imul
xchg
or
and
sub
cmps
daa
dec
nop
adc
sub
lods
and
mov
loope
ja
dec
mov
imul
lods
cs
test
jnp
fcmovu
scas
into
clc
cmp
mov
mov
fild
fld
sbb
cmp
cmp
dec
cdq
rcr
scas
xor
mov
sbb
movs
jle
movs
fidiv
(bad)
sub
cmp
(bad)
inc
test
retf
add
mov
call
mov
mov
pusha
jo
mov
mov
test
(bad)
sub
adc
sbb
sbb
mov
pop
retf
lods
fcmove
movs
and
mov
dec
mov
fidivr
or
inc
mov
fwait
stos
xchg
imul
add
cdq
fnstsw
mov
mov
aad
lods
int
mov
stos
rol
scas
lock
fcmovnb
pop
stos
test
sti
xchg
pushf
mov
ins
popa
imul
cmp
pop
shl
cmp
sbb
mov
push
jns
pop
in
push
mov
add
add
lods
mov
sbb
ds
push
and
out
cmp
stos
mov
cmp
adc
add
jo
es
add
stos
xchg
or
cmp
ret
pop
shr
movs
push
sub
sbb
loop
lds
stos
test
fidivr
lds
mov
mov
mov
sub
pop
cmp
mov
pushf
jmp
mov
lds
inc
add
add
leave
mov
les
mov
in
mov
jnp
aaa
sub
retf
mov
sub
xchg
pushf
mov
retf
mov
imul
add
ret
popa
jp
add
mov
mov
call
sub
sbb
jl
enter
mov
add
into
jb
and
leave
mov
mov
cmp
xchg
or
inc
stos
mov
or
ins
sbb
mov
sub
enter
out
pop
test
or
fimul
in
mov
leave
cwde
in
jmp
mov
pushf
stos
xor
xchg
call
iret
add
int3
imul
int
sbb
jmp
retf
into
xor
mov
fwait
int
ror
cmp
mov
fwait
les
mov
mov
jl
mov
popf
pushf
sub
es
shr
sbb
dec
add
scas
add
adc
mov
aad
fdivr
lock
dec
mov
popf
sar
jl
fistp
jnp
retf
push
jge
xchg
jl
sub
or
into
adc
(bad)
jno
mov
int
xchg
fcomp
xor
cdq
pushf
cdq
xchg
shl
cmps
sub
jns
lods
(bad)
pop
or
mov
mov
(bad)
(bad)
xor
xlat
mov
ficom
scas
mov
mov
(bad)
add
cdq
ror
pop
sub
or
int3
add
loopne
arpl
aam
lods
mov
lea
mov
push
(bad)
iret
into
imul
sub
adc
mov
popf
(bad)
add
inc
inc
loopne
add
fwait
push
(bad)
(bad)
out
mov
ins
int3
aas
jl
xchg
call
lods
or
pop
dec
rol
or
loopne
(bad)
sbb
clc
or
(bad)
jl
inc
(bad)
(bad)
mov
fsub
retf
push
or
out
fcomp
cdq
dec
fisttp
mov
mov
loop
int
and
add
rcr
cs
pop
loop
cld
mov
mov
(bad)
lods
loope
sbb
(bad)
lock
xlat
mov
idiv
fisttp
stos
stc
lods
or
add
fist
loopne
dec
fstp
jl
(bad)
int
jecxz
fldenv
outs
fisttp
xlat
out
shr
scas
inc
add
outs
shl
jmp
pop
out
stos
jno
mov
lock
mov
push
aad
jge
xchg
iret
mov
loopne
scas
fst
sbb
cmp
loopne
dec
out
dec
fiadd
loop
out
loopne
mov
inc
mov
sbb
sahf
(bad)
call
push
call
popf
jecxz
(bad)
inc
out
fimul
call
in
xlat
sbb
out
(bad)
mov
lea
icebp
sbb
adc
rol
add
lock
loopne
mov
mov
cdq
stos
sbb
test
fucomip
in
call
dec
add
in
(bad)
(bad)
hlt
std
out
sbb
nop
pop
inc
popa
sub
mov
ss
mov
rcr
out
lahf
(bad)
inc
jle
add
sar
sahf
in
(bad)
aad
sub
std
fucomp
loope
loop
dec
icebp
in
jecxz
out
out
mov
call
push
in
popf
fcom
cs
mov
jg
in
scas
ds
daa
pop
repnz
mov
test
(bad)
cs
in
mov
pop
out
jmp
add
cmp
ror
fcomp
(bad)
mov
ds
jmp
lods
jmp
adc
mov
cmc
sub
retf
outs
add
out
fcmovnbe
cs
dec
(bad)
out
ror
in
into
(bad)
sbb
cmc
add
mul
loopne
push
mov
cmc
sbb
jle
test
adc
lock
outs
jecxz
paddsb
cmc
jmp
test
scas
hlt
outs
in
cmps
fdivp
ror
pop
pop
repz
psubd
fiadd
loop
dec
in
sub
pop
lock
scas
mov
pminsw
call
dec
stc
xchg
mov
or
bound
jg
add
idiv
test
or
cmc
into
pandn
add
out
jmp
mov
shr
fistp
aad
std
xchg
lahf
xlat
fstp
scas
maskmovq
div
not
iret
pandn
jg
(bad)
(bad)
cld
jmp
pop
sub
add
dec
sbb
add
sub
sbb
dec
fwait
add
sbb
xchg
movs
movs
mov
cmps
stos
mov
movs
mov
xchg
mov
mov
xchg
mov
lea
movs
fwait
xchg
retf
(bad)
sar
add
rcr
mov
stos
sub
test
test
not
inc
or
cmps
or
inc
out
imul
mov
dec
ret
fcmove
stos
data16
mov
jmp
stos
loope
inc
mov
nop
sar
add
cs
ja
and
inc
and
in
sahf
aas
jae
mov
adc
dec
pop
cmp
loope
push
out
in
dec
rep
dec
cmp
sahf
div
mov
in
xchg
cmp
jnp
pop
retf
out
fstp
push
shl
cwde
or
lds
push
push
xchg
cmp
ret
nop
adc
leave
pop
cmp
add
sub
xchg
jl
movs
jge
dec
dec
mov
div
add
dec
gs
mov
sti
je
shl
(bad)
push
xchg
adc
mov
xchg
adc
dec
xor
ins
fsubr
inc
mov
(bad)
movs
jmp
loop
pushf
sbb
jbe
dec
(bad)
adc
adc
xlat
mov
movs
push
inc
pop
mov
stos
push
arpl
pop
cmps
mov
movs
popa
or
and
dec
int
aam
not
pop
arpl
shl
inc
pop
add
add
xchg
jnp
push
clc
pop
gs
sbb
test
jmp
pusha
pop
push
gs
push
ja
mov
xor
sub
mov
test
jbe
or
into
imul
mov
sahf
dec
jle
add
sub
in
in
test
ror
dec
leave
aam
push
inc
js
test
pop
mov
es
sub
push
dec
push
mov
dec
add
push
push
jns
push
imul
cmps
push
js
fldenv
push
jbe
push
and
shl
outs
jae
mov
cwde
(bad)
sub
call
xchg
movs
cdq
dec
xchg
mov
lds
add
jp
xor
(bad)
dec
push
ds
push
jno
or
sbb
test
mov
das
xchg
call
mov
loope
adc
rol
xchg
(bad)
mov
in
mov
sahf
mov
push
pop
dec
cs
mov
mov
push
retf
cmps
mov
add
outs
xchg
loop
outs
or
retf
inc
mov
cmp
push
(bad)
ss
scas
ret
out
cs
and
mov
fimul
sti
out
mov
mov
movs
add
out
dec
in
lds
push
cwde
jl
or
pop
jl
mov
sbb
(bad)
mov
out
adc
inc
fwait
or
retf
inc
retf
jl
or
aad
cmp
mov
aas
rcr
mov
into
out
push
dec
inc
(bad)
shl
in
dec
and
rol
rol
lods
add
sbb
add
(bad)
jo
std
or
mov
sub
loopne
lods
jge
cmp
cmc
mov
and
repz
std
sbb
nop
mov
not
jge
sbb
dec
fdiv
loop
xor
(bad)
call
jg
push
cmp
xchg
pop
(bad)
cmp
push
lock
sti
enter
aam
dec
repnz
adc
mov
sub
xchg
sahf
ja
dec
xchg
retf
cmp
cli
and
add
jns
in
lahf
aas
mov
(bad)
jmp
lods
pop
repnz
daa
lahf
jnp
in
pop
out
jle
xor
cmps
aas
lahf
or
jmp
loop
scas
xor
jno
mul
inc
xchg
pop
or
(bad)
sti
mov
pop
cmc
dec
adc
call
push
mov
jecxz
inc
or
scas
or
lock
sub
fild
cs
lods
push
(bad)
xor
std
test
(bad)
xchg
xlat
sti
xchg
pop
sub
ret
or
jne
xor
jo
mov
add
add
loop
mov
xchg
mov
and
dec
cmp
sbb
jecxz
retf
aaa
adc
repz
aad
inc
cld
adc
fwait
mov
mov
les
xchg
js
pop
push
cmp
dec
mov
cmp
mov
mov
daa
xor
and
mov
add
jae
ret
xor
pushf
and
dec
dec
cmp
adc
ins
add
or
inc
push
xchg
pusha
ins
and
dec
enter
adc
jns
lds
rcl
mov
cmp
rcl
std
cmps
int3
pop
es
xor
mov
pushf
in
jl
or
out
xchg
cmc
lods
out
fldl2t
dec
jae
xchg
jae
dec
cmps
inc
pop
call
sbb
xor
jmp
xchg
dec
mov
mov
xor
xor
inc
or
call
push
retf
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
imul
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
jge
adc
pop
sbb
add
jns
push
pop
or
inc
and
adc
out
jne
int
imul
pop
sbb
xchg
pop
mov
pusha
xlat
loopne
mov
cmp
pop
jge
add
sub
mov
mov
mov
cmp
(bad)
(bad)
jne
repz
(bad)
mov
mov
xchg
mov
mov
and
pop
and
push
mov
fstp
(bad)
push
loope
adc
test
jnp
or
out
jb
sub
in
dec
mov
xchg
xchg
scas
sbb
jmp
btr
adc
push
out
(bad)
clc
ret
push
into
mov
push
mov
jp
les
mov
mov
fndisi(8087
mov
cmps
scas
mov
in
dec
mov
icebp
lea
ficomp
outs
cmp
lods
sub
xor
mov
iret
ins
pop
and
jo
xchg
retf
loop
ret
mov
pushf
out
int3
pop
push
stos
pop
add
icebp
pop
std
cmp
cmp
outs
jb
jns
popw
sbb
add
ret
push
out
mov
or
cs
sbb
mov
and
rol
and
or
and
or
sbb
fwait
not
mov
lock
dec
mov
aad
aad
adc
aaa
push
les
pop
and
cmp
ins
in
rcr
xchg
je
lahf
ins
ins
and
mov
fistp
fist
mov
sbb
es
add
scas
mov
fs
(bad)
ret
pushf
xchg
ror
pusha
fcom
mov
std
ins
pop
out
retf
stos
mov
or
shl
pop
loope
(bad)
out
lock
mov
sub
test
outs
sbb
pop
data16
inc
out
pop
pop
imul
dec
mov
pop
pop
imul
(bad)
cmps
imul
push
outs
jge
inc
(bad)
jmp
adc
push
mov
je
lock
sub
movs
add
test
movs
sub
rcl
out
sahf
or
xor
mov
and
pop
ret
mov
xchg
fbstp
mov
jle
or
mov
pushf
ds
mov
arpl
mov
je
xor
fst
cmp
imul
lds
jbe
cmc
popf
outs
xor
pop
or
mov
fistp
mov
mov
jae
(bad)
enter
cdq
mov
loopne
(bad)
mov
lds
cmp
jmp
jo
out
sbb
xchg
jns
cmc
out
mov
adc
loopne
fcomp
(bad)
mov
jge
add
aam
(bad)
movs
ss
out
sbb
jmp
call
call
pop
lahf
mov
mov
xchg
and
pop
int
push
aas
out
(bad)
adc
pop
mul
call
shl
cmp
mov
add
daa
add
pop
jl
inc
ins
es
jns
outs
enter
nop
push
in
or
imul
inc
je
xchg
push
imul
ins
aam
add
inc
ins
into
adc
(bad)
outs
sahf
out
sub
add
push
jle
dec
push
shl
jns
pushaw
sub
jo
xchg
test
xchg
push
fsub
in
xchg
sbb
inc
mov
jle
cmps
jb
cmc
ja
mov
les
or
ja
rol
enter
jo
cmc
js
dec
jne
sar
(bad)
push
jp
jg
ja
cmp
jne
pop
jg
pop
jg
xchg
push
nop
xor
add
aaa
gs
movs
and
popa
data16
fmul
cmps
push
jno
jnp
cwde
jne
out
outs
push
test
dec
pop
add
je
(bad)
jns
ja
inc
dec
js
cmps
add
pop
aaa
out
aad
imul
or
test
inc
push
ja
mov
add
jl
out
ds
out
stc
mov
inc
clc
sbb
loopne
or
imul
push
test
test
addr16
(bad)
jno
push
and
add
or
jge
jne
test
jle
sbb
cmps
bound
aas
sbb
daa
jle
jbe
mov
gs
pop
mov
nop
pop
inc
(bad)
lods
test
inc
adc
aaa
xor
mov
mov
test
sub
push
xor
cs
or
mov
lds
pop
test
lods
or
mov
cmps
data16
push
je
pop
pop
push
add
pop
hlt
addr16
out
adc
jle
xlat
jbe
push
jns
jbe
mov
fs
mov
gs
jmp
daa
pop
xchg
mov
and
outs
daa
mov
mov
jb
sbb
xor
ss
xor
pop
push
jns
sub
js
pop
dec
jp
push
outs
xor
xchg
add
jl
cwde
jnp
cmp
test
xor
or
xchg
or
popa
xor
test
outs
push
push
and
mov
jge
cmp
fldenv
xchg
mov
jbe
or
mov
mov
ins
shl
fnstenv
ror
push
mov
test
or
mov
jo
pop
nop
fadd
imul
popf
adc
and
dec
loopne
mov
data16
imul
inc
xlat
add
xlat
jg
test
outs
xchg
jo
xchg
imul
add
enter
xchg
test
pusha
ds
outs
dec
jbe
pop
pop
jne
test
cwde
out
hlt
sub
push
xchg
fsub
mov
xchg
(bad)
neg
test
(bad)
(bad)
mov
dec
mov
stos
bound
mov
jne
fnstenv
mov
addr16
jo
retf
xchg
mov
fsub
pop
mov
or
jmp
xor
jmp
push
pop
push
or
inc
ins
push
dec
nop
jne
outs
mov
nop
push
jns
xchg
ss
test
mul
push
pop
dec
fisub
fldenv
out
mov
add
jae
cmps
add
mov
into
xchg
jo
xchg
outs
jp
test
(bad)
jl
js
cmp
cmps
mov
push
cmc
test
mov
ss
inc
mov
add
shr
test
jne
push
mov
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
rcr
ret
les
mov
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
jl
jl
rcl
sub
sub
stos
lods
sbb
sbb
repnz
adc
or
call
pop
or
add
push
add
dec
dec
ins
data16
adc
outs
ins
test
xor
sub
scas
lods
inc
ds
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
movs
sahf
movs
fs
pop
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
ins
outs
ins
jl
jl
cs
scas
lods
and
and
call
or
dec
dec
inc
inc
inc
(bad)
mov
es
cmps
movs
in
in
ss
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
xor
xor
scas
mov
ds
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
mov
sbb
jbe
ins
outs
je
jle
sub
xor
scas
mov
sahf
pushf
cmp
inc
dec
dec
push
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
add
ret
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
repnz
xor
xchg
(bad)
int
mov
and
jl
jno
mov
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
inc
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
popa
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
int
test
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
lahf
rcr
into
jbe
jae
in
push
mov
mov
in
shl
sbb
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cmp
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
cdq
add
adc
imul
stos
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
ret
les
shr
sub
add
lahf
adc
mov
cli
xchg
xor
or
scas
mov
add
mov
dec
mov
mov
xor
mov
jp
adc
mov
dec
xchg
xchg
cmps
mov
retf
add
xor
mov
inc
jnp
das
sti
mov
retf
mov
stos
fwait
xor
mov
mov
imul
mov
or
fwait
stos
inc
and
mov
mov
dec
retf
mov
xlat
mov
imul
mov
cli
mov
mov
add
mov
cdq
inc
jo
daa
mov
cmc
cli
popf
xchg
mov
mov
nop
mov
adc
jge
mov
sbb
stos
xchg
add
fidivr
sub
inc
add
mov
mov
sbb
(bad)
jmp
pushf
cmp
jmp
stos
mov
sbb
and
add
scas
(bad)
imul
shl
nop
mov
sub
sar
retf
mov
jnp
push
inc
mov
fild
stos
cmp
stos
mov
fstp
add
cmp
shl
mov
mov
mov
or
stos
cmc
fld
jo
add
mov
nop
add
mov
push
xor
push
add
sbb
xor
xor
ret
ret
cmp
add
add
ret
xor
enter
les
ret
cmp
mov
dec
mov
xor
lds
ret
out
sub
lds
les
mov
sbb
jle
add
cmp
bound
int3
add
inc
(bad)
out
pop
(bad)
cmp
jl
jo
(bad)
jp
lds
ret
pop
rol
sub
loopne
add
mov
scas
or
enter
sbb
shr
sbb
inc
adc
sub
(bad)
pushf
mov
rol
mov
cmps
mov
lock
pop
nop
retf
leave
jp
mov
loopne
xchg
cld
retf
retf
mov
jl
mov
add
cld
enter
lods
in
mov
int3
in
retf
int3
or
add
mov
(bad)
ins
jns
xchg
pop
leave
xchg
cmp
mov
stos
inc
pusha
retf
stos
sub
ret
leave
xchg
cmp
mov
add
into
in
or
pop
rol
xor
add
jmp
retf
add
cld
leave
std
mov
xchg
cmp
cmc
jl
in
sbb
or
enter
mov
mov
into
jnp
into
xor
add
leave
lods
in
into
adc
jp
rol
rol
int3
inc
stos
shr
push
sub
shl
jmp
sar
leave
sub
int3
add
mov
into
in
lods
shr
movs
add
sar
dec
aam
sub
out
cld
iret
icebp
cmp
sbb
inc
sbb
test
rol
add
popf
ror
or
sub
ror
mov
sub
adc
rol
lock
mov
dec
cmp
pop
lock
dec
and
jmp
jge
add
add
pop
fsubr
lods
rcl
jp
into
test
fcomp
fsubr
sbb
pop
int
inc
sub
retf
mov
fdivr
cmp
sub
retf
iret
xchg
or
pop
lods
shr
in
rcl
aad
dec
sar
rcl
in
mov
jb
shr
or
aam
pop
aam
pop
xlat
mov
add
dec
aad
lods
shr
add
fwait
aad
int
test
int3
mov
fsubr
sbb
add
fsub
or
jmp
fld
lods
(bad)
aad
fist
pop
fxch
int
jmp
pop
fldenv
(bad)
retf
test
ror
ror
scas
dec
aad
push
iret
push
jge
add
aad
sahf
fldenv
sub
xchg
popf
shl
dec
fld
rcr
lea
dec
add
add
ins
rol
loop
outs
fsub
or
iret
ins
fisub
ficomp
rcl
retf
add
fbld
outs
fmul
sbb
popa
mov
inc
jle
mov
fnstcw
fmul
sbb
xor
inc
jge
call
in
sub
inc
mov
xchg
cmp
sbb
addr16
dec
ds
fsubp
js
out
lods
fisubr
fiadd
push
aam
(bad)
xlat
inc
scas
jecxz
jge
mov
into
jle
into
sbb
jp
call
sahf
iret
or
inc
in
dec
out
sbb
inc
fstp
mov
retf
xlat
push
(bad)
out
popf
fst
(bad)
xchg
scas
aam
inc
stos
fimul
sub
outs
fsubrp
inc
fld
cmp
test
retf
pusha
mov
in
fidiv
into
out
cmp
mov
jmp
push
mov
jne
out
std
fbld
in
mov
loope
(bad)
nop
mov
or
int3
sub
push
sub
bound
stc
cld
jmp
je
xlat
hlt
scas
loop
mov
push
scas
in
in
(bad)
std
fiadd
xor
fisubr
out
jecxz
jecxz
xor
mov
jmp
lock
in
xlat
add
sub
jecxz
dec
stos
push
rcr
push
jmp
(bad)
rcr
into
lock
in
add
or
iret
dec
lock
jmp
pop
adc
push
out
(bad)
out
fmulp
dec
lock
fiadd
out
cld
cmp
cld
pop
fnstsw
fild
mov
out
fnstenv
out
fadd
bound
lods
outs
loop
in
fst
ds
sbb
push
(bad)
out
repz
in
dec
jmp
push
push
leave
test
lods
ds
(bad)
fnsave
aad
sub
jge
call
mov
(bad)
ds
sbb
repnz
icebp
cmps
dec
fiadd
test
xor
into
stc
pop
in
iret
repz
in
mov
mov
add
jo
pop
paddsw
stc
cmp
add
not
clc
ret
xor
repz
fsub
fnstenv
icebp
xchg
scas
in
dec
loop
dec
jmp
sbb
cli
dec
out
fnstcw
clc
pusha
pop
hlt
ret
push
out
iret
sbb
out
std
push
out
clc
lods
pushf
std
mov
cmc
xchg
pop
cmc
ror
cli
loopne
cld
xchg
popf
hlt
int3
dec
in
xchg
aas
hlt
(bad)
in
out
std
fwait
out
xlat
iret
outs
div
fld
test
jo
dec
clc
rol
aam
rol
jno
fnstenv
jecxz
repnz
call
aam
mov
retf
leave
inc
or
in
sbb
inc
jmp
int3
pop
ins
push
sbb
or
ret
fwait
call
fwait
jmp
jl
mov
push
ins
fcomi
stos
cmp
int
dec
imul
pushf
dec
(bad)
sub
mov
add
mov
mov
shr
xchg
outs
(bad)
idiv
mov
pusha
cmp
stc
and
inc
push
xchg
test
pop
lods
data16
xor
push
push
ret
imul
xor
xchg
pop
retf
and
inc
ror
test
mov
adc
es
xchg
bound
xchg
sub
push
ins
adc
push
pop
dec
pop
sub
xchg
push
movs
mov
loope
sub
imul
sub
jmp
imul
aaa
jp
sub
push
sbb
xchg
push
mov
pop
jmp
inc
(bad)
lods
mov
sub
add
pop
push
push
movs
aam
inc
(bad)
loop
adc
cmp
mov
add
xchg
cwde
dec
movs
add
(bad)
les
adc
xchg
lods
xor
loope
je
das
and
adc
loop
nop
shl
(bad)
or
mov
cmp
jg
aas
mov
push
(bad)
jl
call
xor
lea
inc
or
sbb
mov
pop
xor
aas
ret
push
xor
jo
mov
xor
push
aaa
and
inc
sahf
cmp
push
and
add
push
sub
mov
inc
inc
daa
popf
jno
bound
(bad)
(bad)
sub
cdq
push
fimul
jg
mov
sbb
and
add
inc
dec
or
mov
shl
xchg
mov
jg
mov
(bad)
jl
or
xor
frstpm(287
push
xchg
lahf
les
add
enter
icebp
stc
popa
imul
pop
fsubr
mov
pop
jge
js
jo
jge
sub
aas
add
push
cmps
pusha
outs
adc
daa
and
sub
stos
dec
enter
or
scas
lahf
push
jp
pop
sti
sub
push
add
mov
js
jne
test
adc
scas
dec
fs
mov
mov
inc
stc
xchg
lea
mov
mov
mov
loop
xchg
in
mov
cmp
jns
mov
fisub
loopne
daa
mov
and
xor
das
and
jne
mov
jge
push
int3
and
rol
push
out
lods
jl
and
sub
jp
or
mov
sub
lock
pop
mov
push
push
pop
mov
inc
mov
outs
mov
mov
lahf
fld
rcr
cmp
mov
add
outs
mov
sbb
jne
xor
pop
mov
imul
xchg
mov
fcmovnb
rcl
jmp
mov
or
xor
xlat
stos
mov
rcl
jp
jl
ret
sub
int
out
imul
jp
arpl
jae
mov
mov
mov
div
mov
or
test
int
(bad)
dec
outs
imul
mov
pop
lods
or
loope
pop
mov
mov
adc
mov
mov
addr16
xchg
xchg
pop
fisttp
outs
loope
mov
jg
pop
mul
xor
and
mov
(bad)
cld
mov
pop
jmp
mov
cmovo
out
addr16
pop
sbb
and
shl
sbb
pusha
fimul
cmp
pop
jmp
add
(bad)
stos
not
or
inc
ror
out
addr16
inc
cwde
div
mov
sbb
pushf
add
add
or
sbb
fucomi
(bad)
push
ret
in
add
or
fbld
rol
dec
ins
sbb
push
lahf
pop
xchg
bound
fcomp
mov
mov
loop
repnz
xchg
gs
aas
add
loopne
fcomi
inc
or
pcmpeqw
popa
cwde
mov
ret
and
mov
retf
pushf
cld
adc
adc
int3
pop
cli
add
mov
pop
inc
test
in
clc
adc
sub
dec
jae
mov
adc
mov
push
loope
pop
daa
mov
mov
and
mov
mov
xchg
nop
jnp
and
cmp
popa
fstp
shl
clc
lahf
das
in
cmp
inc
sbb
mov
mov
xor
add
jp
and
or
xchg
adc
cmp
shl
push
cmp
arpl
retf
cs
call
cmp
and
sbb
out
mov
cmps
lea
mov
pop
and
ret
jmp
jo
sbb
out
push
pop
add
mov
push
cmps
inc
push
mov
or
and
out
(bad)
fst
out
rcl
add
retf
adc
pop
fmul
ret
add
fild
std
pop
dec
daa
js
adc
add
push
test
xchg
dec
in
xchg
or
mov
addr16
or
xchg
dec
push
or
(bad)
clc
mov
and
shr
mov
ror
push
push
mov
iret
mov
mov
sub
mov
movs
jge
and
or
ror
push
xor
or
xchg
mov
sbb
movs
daa
jnp
xlat
mov
mov
push
add
cmp
push
sbb
push
pop
add
inc
ror
(bad)
pop
push
scas
and
(bad)
mov
popa
inc
and
push
or
fdivrp
stc
pop
xchg
mov
and
movs
mov
xchg
cmps
jno
sbb
shr
xchg
test
dec
push
movs
mov
push
inc
call
clc
push
mov
push
ins
push
cld
cs
cmp
aam
icebp
add
(bad)
mov
hlt
fiadd
cli
fcmovbe
mov
aad
jno
stos
(bad)
(bad)
xchg
xchg
sahf
jne
jl
jmp
xchg
outs
outs
iret
inc
mov
sub
cdq
fld
ret
mov
sbb
jno
jnp
jno
push
or
and
ins
jg
pop
popa
cs
(bad)
mov
xor
pop
or
imul
js
push
clc
mov
cmp
add
push
pusha
add
pusha
or
mov
or
pop
xor
cmp
pop
jle
or
pusha
inc
add
movs
ss
sub
inc
add
rcr
lds
test
mov
fld
fdivr
in
pop
in
data16
aaa
(bad)
and
popf
xor
ins
add
adc
es
ror
arpl
imul
nop
dec
hlt
mov
idiv
popf
aad
and
sar
sti
push
dec
test
pop
shr
mov
push
not
mov
sub
jecxz
into
sbb
rcr
sbb
test
add
sub
jae
or
add
imul
push
rcl
repz
pop
pushf
mov
inc
mov
mov
mov
adc
(bad)
inc
call
jo
push
out
fmul
out
mov
rol
pop
cli
(bad)
mov
call
fstp
idiv
sbb
jb
ret
pop
outs
popa
mov
(bad)
push
clc
nop
mov
jl
aam
jno
push
lea
jb
hlt
cwde
outs
ins
icebp
adc
loop
push
inc
xor
fwait
jge
xchg
jns
retf
dec
out
ins
adc
or
add
(bad)
cmp
jnp
cmp
repnz
mov
out
mov
pop
fld
mov
ins
fidivr
outs
pop
add
pop
jmp
xchg
cmc
(bad)
adc
sub
or
rcr
(bad)
fsub
fsubrp
mov
fwait
mov
mov
and
fild
addr16
stc
dec
je
arpl
sub
mov
and
mov
jbe
adc
sbb
push
stc
xlat
and
sub
scas
rcl
fwait
or
repnz
mov
loop
mov
add
mov
adc
cli
fisttp
pop
cmc
cmps
xchg
adc
mov
(bad)
cli
push
lock
cmc
mov
clc
xchg
das
aas
in
cmps
(bad)
jmp
aaa
aas
loop
pop
div
mov
les
cmp
addr16
inc
xor
inc
jg
ja
xor
test
sub
adc
sbb
xchg
jl
sbb
pop
jp
mov
test
push
dec
jns
push
jge
push
js
sub
test
rol
jg
jle
and
push
hlt
or
push
gs
gs
push
cmp
pop
push
xor
jnp
mov
add
push
mov
ss
jnp
fs
fsub
out
(bad)
shl
ja
inc
js
enter
xor
jle
addr16
xchg
jnp
aaa
cmp
inc
sub
out
push
enter
sbb
add
mov
xor
pop
lock
mov
pop
or
clc
jns
mov
jle
push
jge
or
jle
cmp
ja
lea
dec
nop
jl
aaa
add
xchg
xchg
outs
add
and
rol
push
in
ja
sub
rol
mov
mov
add
rol
adc
mov
jl
call
mov
add
or
mov
clc
bound
xchg
aaa
lea
fprem
jp
fsubr
mov
loopne
lahf
push
mov
jge
cmps
add
pop
add
clc
jb
push
test
jg
mov
add
push
xor
or
jl
mov
fstp
std
mov
loope
add
loopne
inc
push
mov
mov
mov
add
and
icebp
xchg
nop
adc
nop
xchg
or
add
mov
mov
mov
mov
mov
push
mov
jns
or
mov
push
test
sub
add
ror
xchg
sbb
xchg
sbb
push
mov
popa
bound
inc
or
add
pop
xchg
scas
(bad)
xchg
inc
cmps
xchg
xor
dec
sub
and
and
jp
add
not
in
stc
sbb
test
or
sbb
xchg
dec
imul
xchg
bound
test
push
imul
add
add
sub
inc
(bad)
pop
imul
add
sub
jne
sub
pop
fstp
out
out
clc
add
stc
fwait
push
leave
adc
add
js
stc
cdq
mov
call
push
cdq
mov
xchg
nop
je
sar
pop
mov
ja
loop
push
imul
mov
fwait
scas
imul
cwde
pop
sub
jns
test
mov
or
jb
imul
(bad)
pop
add
enter
mov
test
xor
pushf
jbe
xchg
jns
mov
mov
cwde
mov
mov
sbb
mov
pop
mov
(bad)
sahf
ret
dec
cwde
dec
jo
push
test
mov
cwde
out
clc
xchg
loope
mov
mov
jl
xchg
mov
mov
cmp
stc
xchg
hlt
mov
add
xchg
cmps
fcomp
test
push
fstp
pop
test
mov
pop
fwait
mov
jns
sub
push
add
popf
sbb
add
xchg
pop
xor
stc
clc
mov
mov
cwde
fcom
sbb
call
call
adc
movs
mov
mov
mov
mov
imul
mov
stos
inc
cmp
and
jns
xor
test
dec
test
cmp
iret
mov
xchg
xchg
jmp
cdq
jmp
cmps
retf
dec
movs
sub
dec
pusha
xchg
bound
jns
jns
cmps
mov
cwde
imul
inc
pop
cmps
mov
xchg
fidivr
test
cli
sahf
xor
test
xchg
or
cdq
fstp
xchg
stos
cli
fwait
mov
xchg
xor
movs
cmc
jp
mov
nop
sti
pop
lods
push
stc
add
mov
or
sub
sub
or
adc
mov
mov
pop
lock
xchg
sbb
pop
sbb
imul
mov
repnz
mov
lods
sub
sub
(bad)
sub
cli
test
sbb
mov
pop
scas
stc
sub
pop
mov
push
test
mov
dec
mov
mov
jmp
cmp
sbb
mov
inc
pop
mov
dec
mov
mov
jmp
push
mov
sub
cli
mov
jns
jg
mov
pop
lods
popf
call
mov
mov
sub
pop
imul
lods
dec
leave
mov
jmp
push
int
mov
jnp
test
mov
xor
jb
add
or
mov
ins
sub
mov
sbb
add
xchg
retf
lods
pusha
sbb
mov
mov
jmp
jmp
mov
mov
pop
sbb
jmp
fwait
ret
cmp
stc
test
test
popf
or
dec
or
mov
dec
mov
test
scas
leave
mov
sti
sahf
imul
fisub
pop
int3
mov
cdq
mov
cdq
sar
lods
(bad)
sub
in
xchg
(bad)
scas
sub
add
add
sub
in
push
mov
in
xchg
cli
mov
pop
test
ret
lock
pusha
sub
mov
pop
cld
rcr
aad
cmps
pop
ins
shl
mov
mov
mov
jmp
push
lods
xchg
jo
or
scas
inc
pop
les
mov
fwait
enter
jbe
mov
sbb
add
enter
popf
pushf
ja
pop
mov
cmp
(bad)
sbb
jno
add
(bad)
pop
cmp
push
pushf
or
pusha
lds
mov
pop
mov
lods
ja
dec
retf
imul
(bad)
jbe
cmps
(bad)
ficomp
cmp
sbb
mov
mov
add
dec
int
mov
sbb
mov
push
pop
shr
int
pop
int
mov
xchg
retf
leave
dec
mov
add
repnz
add
iret
aad
mov
rcr
call
dec
jns
jmp
pop
add
scas
and
jmp
cs
jne
(bad)
xchg
jl
sbb
sar
lahf
ret
cmp
adc
push
or
sub
sar
pop
sub
jge
xor
sahf
es
stos
adc
int
sub
idiv
stc
sti
mov
pop
int3
aam
rcr
mov
into
xchg
fwait
mov
sbb
retf
aaa
sbb
sar
les
xor
mov
sbb
fucomip
rol
sbb
movs
and
and
into
xchg
cmp
ins
mov
cld
add
loopne
jns
rol
xlat
das
sbb
ret
test
mov
iret
cmp
mov
lods
xlat
jno
retf
mov
mov
popf
fst
push
int3
ror
test
fld
mov
or
jne
retf
mov
pop
mov
in
int
or
daa
pop
fstp
xlat
inc
dec
aad
mov
(bad)
ficom
fnstcw
xchg
daa
(bad)
xlat
in
fwait
cmp
or
push
std
fsubr
add
inc
or
and
ins
frndint
mov
mov
mov
pop
xlat
sub
rcr
sbb
mov
pushf
pushf
dec
aam
ins
xlat
pop
push
add
add
xor
popa
push
mov
pop
mov
mov
in
(bad)
fistp
ret
cdq
mov
popf
shl
dec
aam
pop
fst
pop
fbstp
aad
mov
sbb
fadd
fsub
aam
(bad)
fisub
fcomp
fmul
fcomp
shr
iret
ficomp
pop
ins
mov
jge
in
jl
int3
fst
(bad)
cdq
cmp
xchg
pop
rcl
pushf
fstp
rcl
mov
aam
sbb
dec
dec
lods
pop
sahf
or
add
dec
loope
cs
sub
adc
fdiv
fild
fcmovne
dec
loopne
in
loop
int
sub
xchg
push
inc
or
xor
int3
fucom
jmp
cli
lds
lea
and
xchg
(bad)
loop
jge
mov
in
dec
xlat
push
pop
mov
cmp
xchg
or
dec
pop
sar
lods
fld
call
(bad)
jmp
mov
and
fst
in
mov
fild
push
ins
jmp
std
loop
mov
(bad)
(bad)
fisttp
call
dec
jmp
call
cwde
int
and
or
add
jecxz
mov
repnz
jmp
mov
loop
loope
mov
ja
add
cmp
pushf
fisttp
jmp
ins
loop
mov
fistp
mov
lock
fsubrp
fistp
ror
dec
jmp
jecxz
icebp
(bad)
fsubrp
test
lahf
fbld
(bad)
cs
push
in
dec
out
jmp
movs
cs
jle
adc
fist
icebp
push
(bad)
lock
jmp
pop
repz
dec
jecxz
jle
aam
in
mov
in
ds
sbb
cdq
(bad)
out
test
(bad)
in
cmc
push
lock
jge
adc
in
cs
fdivp
dec
mov
add
mov
push
adc
jp
xor
in
cmc
pop
out
out
pop
lds
push
dec
xor
aaa
paddsb
add
pop
div
repnz
outs
lock
scas
out
iret
call
jle
(bad)
jle
mov
dec
outs
jmp
iret
icebp
mov
out
add
repnz
jmp
xchg
(bad)
std
cmc
mov
mul
sti
cmc
xchg
mov
fadd
rcr
das
cmc
pop
push
out
sbb
or
call
in
cmp
in
jbe
in
clc
mov
fs
test
jmp
in
lahf
(bad)
fdivp
sub
dec
inc
out
(bad)
(bad)
out
pushf
not
sar
std
daa
or
addr16
mov
icebp
mov
add
scas
icebp
ret
in
cmp
loopne
clc
push
inc
cli
fimul
addr16
mul
std
(bad)
in
call
or
cs
test
mov
pop
add
add
or
(bad)
pop
add
xchg
movs
xchg
pushf
cmps
test
xchg
cdq
mov
test
cwde
mov
mov
mov
(bad)
(bad)
mov
(bad)
xchg
ret
mov
les
mov
xchg
fdivr
xchg
aam
call
nop
ficom
xchg
call
test
(bad)
cdq
ret
jno
xor
pop
shl
adc
shl
adc
out
cmp
xchg
int
aaa
push
mov
jb
shr
jns
out
fisub
push
(bad)
in
gs
pop
mov
cs
(bad)
fidiv
xchg
adc
(bad)
dec
xchg
add
leave
in
push
popf
out
and
and
inc
mov
call
mov
sub
add
jmp
fmul
cmps
pop
push
mov
daa
push
dec
into
add
aad
xchg
add
inc
outs
outs
pusha
or
movs
push
pop
xor
inc
(bad)
xchg
lea
daa
fwait
movs
ins
jnp
xchg
lods
xor
fnstcw
out
push
push
imul
xchg
div
arpl
(bad)
xchg
fcmovne
mov
jmp
gs
(bad)
ins
(bad)
stos
dec
repnz
sahf
outs
or
and
jmp
dec
test
inc
(bad)
xor
xchg
push
jno
mov
cli
mov
(bad)
fbld
pop
pop
mov
jg
jge
jmp
scas
xchg
xor
rcr
push
adc
mov
addr16
inc
(bad)
lds
xlat
push
dec
add
and
pop
lea
arpl
dec
mov
mov
pop
and
scas
add
fcomp
jne
and
bound
arpl
cdq
adc
cmps
shl
sub
mov
xchg
pop
cmp
xchg
mov
outs
jbe
pop
daa
call
or
test
mov
jbe
dec
(bad)
fwait
jno
stc
push
add
or
pushf
js
xchg
push
pop
xor
push
fisttp
pop
call
and
(bad)
pusha
jne
test
(bad)
shr
test
inc
enter
call
out
xchg
push
mov
arpl
lods
sub
retf
test
pusha
add
pop
ror
push
xchg
push
jb
dec
adc
jle
dec
and
sbb
lds
add
add
cmp
rol
mov
or
in
mov
mov
jl
cs
mov
mov
mov
dec
ins
sar
xor
outs
pop
loope
sti
add
pop
jns
test
mov
sub
outs
adc
cli
jmp
les
jg
out
mov
shl
call
inc
add
data16
mov
add
fisttp
test
retf
les
fild
retf
jae
(bad)
sub
icebp
push
adc
mov
cmp
fnsave
les
loopne
xor
pusha
jmp
jne
sub
mov
adc
sub
retf
add
adc
test
pop
inc
add
xor
jb
sub
dec
ficom
and
lods
scas
jg
int
test
loop
daa
add
jecxz
or
mov
xor
pop
mov
ret
loop
call
inc
adc
sub
imul
js
lods
sbb
xchg
fmul
(bad)
cli
out
adc
js
enter
xchg
das
imul
push
adc
push
in
mov
fwait
pop
out
and
ds
adc
leave
fistp
mov
lahf
std
(bad)
loop
add
dec
add
adc
sub
in
pop
add
js
add
(bad)
(bad)
xlat
ds
pushf
pusha
jle
xor
add
mov
push
icebp
iret
push
sbb
sti
jno
jns
inc
cwde
inc
inc
mov
(bad)
cdq
das
jle
les
sti
pop
fdivr
sbb
jecxz
push
or
imul
inc
sbb
in
or
shl
dec
jns
int3
popa
or
cmp
add
arpl
adc
inc
repz
adc
sbb
loop
cmp
mov
popf
int3
mov
inc
mov
stos
sub
pop
inc
fidivr
mov
lahf
or
icebp
adc
mov
jecxz
jns
enter
xchg
sbb
mov
mov
xchg
in
fwait
sar
xchg
dec
outs
pop
pop
shl
mov
xchg
or
mov
ja
movs
pop
cmps
loop
push
push
lods
xchg
call
pop
mov
or
fnstenv
les
dec
stos
jno
sub
and
cwde
dec
mov
or
sub
cmp
inc
jb
mov
stc
shr
(bad)
adc
lds
xchg
push
mov
call
dec
jge
rcr
iret
or
sbb
mov
ret
adc
popf
add
cmps
inc
daa
dec
ror
int
inc
aaa
cli
dec
mov
sub
inc
retf
cli
xchg
movs
sbb
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
push
sahf
push
loopne
js
stos
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
int
outs
ja
pop
and
loopne
cmp
rcr
pop
mov
sub
add
adc
or
push
loop
ja
cmp
out
je
and
jns
pop
mov
jo
je
loopne
push
sub
scas
dec
push
scas
jne
stos
pop
or
mov
in
cmp
inc
mov
sar
fwait
pop
(bad)
xor
mov
add
pop
mov
mov
xchg
mov
sub
and
mov
cmp
and
mov
fsub
add
sti
and
push
pop
out
pop
inc
pushf
loop
jb
or
jle
adc
xor
mov
int3
loope
mov
jno
jnp
popa
sbb
pop
les
jno
inc
jl
push
mov
enter
add
(bad)
pop
mov
div
jne
cld
fs
addr16
jge
inc
add
stos
cmp
iret
cld
popa
ss
test
add
stc
mov
loopne
arpl
ds
das
or
inc
jmp
add
add
mov
pushf
fisttp
jp
jbe
xor
push
sbb
dec
or
cmp
push
add
add
je
adc
call
test
mov
lahf
fmul
cmp
(bad)
lods
fld
jp
outs
mov
int
add
xchg
jae
call
retf
xor
imul
call
mov
ins
int
push
outs
add
fst
jae
retf
ins
mov
dec
add
into
xor
pop
fidivr
jl
outs
xor
cmps
(bad)
fnsave
aad
bound
cmp
sbb
jno
pop
int3
outs
xchg
hlt
les
cmp
mov
pushf
add
sbb
cmp
push
and
pushf
fdivr
into
inc
(bad)
fxch
jno
sbb
test
jge
jmp
xor
int
outs
jb
scas
std
in
adc
retf
push
and
dec
fdiv
outs
push
icebp
es
mov
jg
fsubr
pop
pop
retf
sbb
out
ja
(bad)
jno
aaa
ret
jno
add
inc
mov
aaa
jle
jge
ins
test
push
lock
ins
pushf
neg
adc
jmp
sti
loope
stos
test
jns
mov
xor
aas
fpatan
add
std
sar
mov
jne
lea
mov
sar
scas
jecxz
loope
idiv
pcmpeqb
cmc
das
inc
mov
xor
idiv
pop
out
jecxz
pop
mov
mov
and
dec
div
retf
mov
mov
add
dec
loopne
test
pop
push
push
out
(bad)
call
or
shl
(bad)
in
push
es
inc
pop
pop
ss
scas
xlat
outs
lahf
out
mov
jnp
(bad)
inc
nop
ja
sar
imul
jle
mov
rol
lods
jbe
push
(bad)
jo
add
pop
addr16
idiv
ja
xchg
es
push
jo
jbe
sbb
sbb
imul
call
push
fsub
xor
pop
and
or
arpl
jo
fdiv
cmc
jge
cmps
ins
movs
idiv
clc
jno
inc
test
aad
lock
xlat
pop
xor
dec
jbe
sbb
ins
cmp
add
pop
cmp
aas
mov
or
push
(bad)
inc
mov
addr16
ja
test
daa
jne
aaa
jae
loopne
cmp
jg
jo
push
pop
sbb
add
xchg
xchg
pop
imul
mov
jge
xchg
imul
adc
add
mov
test
mov
arpl
xchg
imul
inc
and
jns
xchg
push
xchg
mov
aad
or
imul
add
add
cwde
jg
enter
test
or
fcomp
outs
pop
sub
test
std
(bad)
push
inc
jp
inc
jbe
xchg
lea
sbb
and
mov
outs
in
fdiv
cmps
xchg
push
js
pop
jle
sbb
jbe
mov
pop
out
mov
hlt
cwde
xor
adc
test
lds
aaa
outs
push
mov
(bad)
add
jbe
clc
pop
jmp
jo
push
add
add
mov
sbb
add
pop
cli
sbb
push
adc
arpl
js
xchg
mov
aaa
jg
clc
outs
ins
push
lea
mov
not
mov
ins
fnstenv
stc
push
jns
dec
add
daa
jb
push
gs
imul
addr16
cmps
xchg
mov
in
pop
xchg
test
jae
jg
push
retf
adc
push
pop
and
out
ins
mov
mov
jp
addr16
test
call
jo
xchg
add
pop
dec
add
js
adc
mov
jnp
or
mov
jbe
pop
js
add
les
or
jl
push
(bad)
mov
xchg
inc
jbe
pushf
clc
xchg
ins
(bad)
xchg
adc
mov
push
dec
pop
fld
push
ins
push
(bad)
inc
push
xlat
xchg
popa
clc
jnp
adc
mov
jno
mov
jns
jb
xlat
jnp
mov
test
jno
imul
nop
lahf
not
js
or
jl
fcom
ja
xlat
addr16
add
inc
xor
jns
adc
je
(bad)
or
xchg
test
imul
add
bound
jge
clc
mov
stos
arpl
sahf
mov
popw
sbb
ja
push
mov
pop
jp
out
fcmovb
pop
scas
jns
dec
inc
mov
bound
add
call
mov
mov
mov
push
(bad)
push
lahf
and
loopne
mov
push
fst
inc
jne
inc
xchg
mov
arpl
xchg
xchg
pop
mov
dec
xchg
retf
xchg
int
arpl
push
xlat
push
ins
aam
movs
and
arpl
jo
pop
bound
popa
ds
ins
or
jnp
(bad)
addr16
sbb
xchg
retf
movs
push
enter
push
(bad)
push
xchg
sub
test
mov
cli
pop
add
add
sbb
sbb
and
popf
stos
test
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
rcr
ret
les
(bad)
jp
enter
add
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
mov
xchg
xchg
xchg
push
push
push
ins
push
jl
jl
rcl
lods
stos
lods
sbb
sbb
repnz
adc
or
sub
cmp
call
add
push
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
mov
int3
jl
jl
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
ins
outs
ins
jl
jl
scas
lods
and
and
cs
ds
call
test
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
xchg
xchg
xchg
push
push
push
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
mov
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
jl
push
aas
mov
pop
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
out
dec
rol
add
stos
mov
stos
xor
mov
call
lods
pop
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
sub
stos
xchg
sbb
lods
out
sub
cdq
add
adc
imul
stos
ficomp
stos
loope
scas
push
cmp
lods
sub
and
movs
ret
les
shr
sub
lock
and
add
jmp
xchg
xor
or
js
pop
mov
inc
add
mov
or
push
mov
retf
jp
adc
mov
dec
xchg
xchg
pop
mov
retf
add
jo
sub
sub
mov
jmp
inc
jnp
xor
mov
stos
fwait
cmp
iret
mov
xor
jnp
dec
pop
mov
sbb
imul
cmps
sub
mov
sub
or
or
pop
retf
mov
loopne
sub
cmps
leave
jmp
add
jo
sub
mov
mov
lea
mov
mov
sbb
sti
mov
pop
mov
jnp
sub
mov
or
nop
mov
mov
xchg
jmp
dec
pop
add
mov
dec
mov
or
stos
mov
or
mov
mov
aas
jo
mov
mov
mov
adc
add
or
jo
sbb
adc
loope
mov
pop
mov
mov
add
mov
push
mov
retf
add
nop
jmp
or
cmp
mov
cmp
retf
loop
add
nop
mov
dec
ror
rol
mov
sti
rcr
repnz
stos
add
fadd
jp
add
mov
stos
xchg
sar
sub
push
dec
add
fiadd
xor
add
lock
inc
or
push
add
mov
sbb
stos
adc
mov
adc
sbb
inc
lods
xchg
add
lds
mov
dec
or
pop
fadd
push
mov
pop
or
push
mov
dec
cld
scas
sbb
ret
(bad)
bound
or
pop
add
cmp
push
mov
cmp
add
rol
push
sti
lds
(bad)
mov
dec
in
les
lds
(bad)
dec
int3
add
add
sub
inc
in
mov
pop
enter
sbb
shr
pop
push
add
mov
xor
mov
nop
add
enter
mov
retf
retf
push
sub
jp
mov
loopne
mov
retf
add
int3
lods
mov
in
(bad)
leave
inc
cmp
mov
int
lods
int
retf
int
stos
add
mov
ins
jns
mov
stos
retf
in
retf
mov
cmp
mov
add
iret
clc
or
pop
rol
xor
add
cmc
jl
adc
add
cld
retf
iret
sar
cld
iret
add
adc
iret
fdivr
mov
sbb
sbb
retf
adc
mov
int3
retf
cli
sbb
add
rcr
cmp
fnstcw
daa
int
jp
int
jge
xor
or
enter
sbb
or
aam
push
clc
ins
shl
jge
repnz
push
fst
adc
add
pushf
shl
or
and
aam
int3
sar
aam
pop
(bad)
pop
(bad)
iret
dec
jge
pop
dec
iret
fs
sbb
inc
pop
rol
aad
and
jge
add
iret
or
rol
cmp
jp
iret
sub
shl
or
stc
lods
add
cmp
mov
sbb
shr
fstp
cdq
(bad)
iret
jg
aam
cmp
mov
fldenv
sar
push
dec
rcl
rol
(bad)
push
std
aam
sbb
sbb
dec
lock
rol
add
cmp
xor
pop
int
dec
std
fcmovbe
popf
fadd
add
dec
(bad)
int3
scas
jge
mov
fcom
(bad)
fsub
aam
mov
mov
mov
fidiv
xchg
popf
fistp
(bad)
iret
xchg
fstp
sub
sar
int3
std
fimul
(bad)
test
std
loopne
sbb
adc
int3
sbb
push
scas
aam
cmp
sbb
fst
(bad)
int3
sbb
add
popf
loop
pop
ffree
fmul
xchg
out
cmp
xchg
lods
jecxz
sub
jg
fucom
pushf
(bad)
mov
test
add
xlat
fs
rcl
jge
out
sbb
pop
xor
mov
cwde
mov
mov
loopne
in
in
int
sbb
(bad)
bound
sub
sar
add
adc
imul
(bad)
loopne
or
cli
ins
loope
pop
int3
repnz
(bad)
lods
loope
sub
or
dec
mov
(bad)
(bad)
jl
loopne
jle
dec
sbb
add
in
add
fadd
jmp
outs
jmp
into
aam
pop
lds
add
(bad)
or
inc
inc
stos
(bad)
out
sub
movs
pop
out
ins
ror
lods
add
loope
push
jecxz
push
iret
mov
loop
adc
jmp
ds
scas
in
dec
ror
fsubp
std
mov
adc
fnsave
out
in
jge
or
out
ror
sar
in
cs
fcomi
cld
in
adc
in
pop
shl
mov
iret
mov
aad
fsubp
pop
fsubrp
(bad)
dec
jecxz
into
fstp
fsincos
jle
mov
fcom
rcl
aam
ds
mov
in
aas
out
and
mov
add
(bad)
in
outs
(bad)
sahf
out
loopne
stc
jle
push
stos
pop
adc
xchg
jl
out
cs
aas
stos
pop
add
and
or
sub
in
mov
xchg
jle
inc
push
in
adc
add
add
lock
or
out
sahf
(bad)
sbb
sar
pop
outs
loopne
mov
cs
out
cli
into
out
dec
jecxz
push
jmp
mov
adc
iret
jae
(bad)
jmp
dec
fnstenv
shr
(bad)
fnsave
(bad)
pop
add
push
out
and
xor
stos
dec
jo
aaa
jle
js
lock
push
ficom
rcr
jmp
jg
dec
(bad)
add
stos
sub
add
dec
repnz
cli
sbb
in
cmp
fild
mov
hlt
push
scas
clc
cmp
out
call
push
repnz
fucomip
int
shr
repz
ins
test
mov
in
dec
aas
cld
and
xor
ror
retf
repz
not
or
shr
idiv
dec
dec
in
or
(bad)
push
lock
retf
into
sti
hlt
(bad)
cld
imul
cdq
pop
repz
xor
and
fsub
pop
xchg
mov
mov
stc
push
mov
mov
sub
leave
jne
mov
fsub
test
jmp
mov
rcl
stos
push
push
mov
sbb
inc
pop
mov
enter
pop
retf
fcmovnu
mov
mov
pop
stos
fwait
mov
lea
dec
push
scas
lods
in
mov
imul
inc
movs
cmp
add
jl
push
xor
pop
mov
cld
inc
in
js
dec
mov
cmc
jae
lock
jae
popa
arpl
and
push
dec
mov
push
loopne
pop
sbb
adc
add
test
xchg
cwde
sub
lods
pop
mov
ror
inc
scas
(bad)
daa
cmps
add
adc
inc
mov
dec
leave
shl
pop
mov
sub
or
and
and
out
leave
retf
sbb
call
cmp
sub
pop
push
lods
cmp
ret
mov
or
sub
adc
jmp
mov
imul
jbe
mov
stos
push
and
clc
ja
(bad)
loopne
(bad)
gs
adc
sub
icebp
aam
jle
mov
xchg
ror
xchg
sub
jnp
das
mov
xchg
add
pop
out
scas
push
outs
mov
pop
imul
aam
std
aad
(bad)
pop
dec
out
(bad)
test
pusha
cmp
ret
adc
xor
xor
repnz
hlt
push
gs
pop
pop
dec
ins
cdq
xchg
lahf
jnp
and
push
push
and
cmp
pop
sub
inc
lds
inc
cmp
popf
dec
dec
adc
cmp
ins
gs
pop
mov
cmp
sbb
in
js
or
sub
lods
or
sub
ret
cld
popa
daa
pop
(bad)
jg
rcr
pop
push
jne
push
fidivr
stc
mov
sahf
push
inc
xchg
arpl
and
retf
mov
jge
out
mov
adc
sub
movs
jl
mov
cmp
rcr
test
sbb
ss
and
or
ficomp
cmp
cmp
and
(bad)
mov
arpl
jge
call
sub
cdq
pushf
dec
push
stos
aas
dec
push
pop
jno
xor
sar
movs
test
sub
and
scas
xchg
adc
test
jmp
loope
test
pop
in
stos
cmc
add
pop
test
rcr
or
jb
sahf
test
mov
mov
daa
dec
pop
xor
inc
out
jmp
pop
push
xchg
jmp
imul
adc
call
jmp
ficomp
xchg
sub
mov
push
dec
hlt
rol
mov
and
(bad)
jne
or
push
sub
inc
cmps
adc
ret
push
lock
fidiv
aam
les
dec
hlt
xlat
lahf
adc
add
xchg
push
addr16
hlt
das
dec
scas
cmp
daa
pop
adc
push
sbb
iret
fwait
and
mov
dec
fwait
mov
rol
aam
retf
adc
or
lods
loop
and
je
dec
cmp
ror
ja
clc
mov
or
add
mov
seta
xlat
xchg
mov
push
cs
jle
or
sbb
jnp
out
cmps
scas
cmp
in
gs
repnz
xchg
mov
out
stos
pop
jnp
jle
(bad)
cmp
pop
xor
or
pusha
aas
in
xchg
pop
mov
mov
xchg
pop
leave
stc
xchg
lahf
retf
test
pop
iret
aas
cmc
xchg
daa
sahf
mov
mov
ja
mov
stos
pusha
push
fnstsw
mov
fadd
aad
add
cs
mov
cmp
adc
(bad)
cmc
cmp
mov
add
add
cmp
jb
mov
pop
jmp
scas
call
xlat
loop
inc
cmc
jge
sbb
xchg
pusha
test
sub
mov
mov
mov
mov
sbb
pop
xor
cwde
mov
out
and
cmps
rcr
scas
jb
les
adc
adc
(bad)
jp
jmp
adc
lds
retf
dec
out
pop
fcomp
sub
nop
jae
inc
xchg
fcmovbe
mov
test
mov
mov
ror
cwde
add
or
popa
or
cmps
(bad)
(bad)
jnp
lods
loop
mov
xor
sub
pop
jo
adc
shl
imul
mov
sbb
clc
shr
sbb
cs
outs
nop
jge
imul
mov
lods
out
jge
mov
xor
lods
and
jecxz
movs
mov
mov
and
mov
test
sbb
rcr
test
enter
data16
sbb
or
cmp
adc
rcr
xchg
pop
dec
call
pop
es
xchg
in
xor
pop
and
pusha
leave
(bad)
adc
xchg
xchg
dec
fsub
js
sub
daa
es
fwait
(bad)
pushf
movs
add
dec
ret
outs
cmps
ss
dec
push
icebp
pushf
push
dec
xchg
xchg
xor
gs
mov
xchg
cmps
test
xchg
addr16
cmps
cmovne
jle
add
mov
pop
sub
inc
adc
out
imul
push
ins
xchg
sub
sub
push
mov
push
pop
js
or
add
dec
jmp
xchg
cmp
in
pusha
in
fdiv
push
mov
sbb
and
pusha
movs
push
fs
mov
inc
cmp
push
sub
or
push
enter
jle
lods
sti
clc
imul
xchg
int
gs
aas
aad
xchg
outs
call
push
add
sahf
xor
push
popf
bound
mov
lods
push
mov
xchg
mov
movs
test
jnp
push
jb
adc
inc
fld
xor
sbb
or
(bad)
cli
jae
jle
ret
loope
add
push
xchg
iret
test
mov
retf
test
sbb
mov
aad
daa
mov
add
xlat
jb
(bad)
cmp
xchg
mov
inc
mov
or
dec
add
int3
mov
stos
mov
dec
add
lods
adc
xlat
add
xchg
xchg
dec
add
push
xchg
sub
mov
test
popa
sbb
xchg
mov
pop
jl
sbb
cmp
sar
add
aad
dec
xchg
xor
ins
popa
and
test
mov
(bad)
adc
ret
fsub
das
aaa
cmp
sbb
sahf
icebp
push
lods
and
sbb
cwde
and
xor
or
add
int3
jmp
fld
xor
add
shl
(bad)
fmul
mul
icebp
pop
adc
retf
and
mov
imul
mov
repnz
mov
iret
pushf
loope
xchg
adc
es
push
mov
add
idiv
call
push
mov
inc
test
fcom
xor
xor
call
mov
lods
sbb
add
mov
cmp
jno
movs
mov
xor
rol
in
xor
add
xchg
ret
in
ins
push
enter
push
idiv
cwde
sti
fist
std
xlat
add
shl
into
mov
(bad)
ffree
and
fucomip
mov
arpl
clc
test
pop
jmp
sub
or
out
or
jp
and
add
mov
sbb
maxps
xlat
ja
sub
jae
pop
push
in
xchg
dec
jl
int
js
cmp
out
fwait
minps
sub
cmp
cld
xor
icebp
mov
cwde
push
xchg
cmp
pop
mov
(bad)
mov
(bad)
scas
sub
push
xor
add
in
je
cmps
les
jge
ja
cmp
int
add
adc
pop
push
mov
push
stos
add
pop
out
cmp
sbb
shr
enter
(bad)
scas
popf
or
cmp
jecxz
jecxz
jmp
out
(bad)
data16
mov
add
and
xchg
arpl
loopne
popf
repnz
pop
add
enter
fimul
cmp
mov
into
addr16
in
jo
cmp
mov
lods
clc
scas
mov
fdiv
(bad)
cld
and
jge
cdq
sbb
in
rol
aam
std
out
jp
ret
inc
test
(bad)
mov
neg
(bad)
stc
mov
lock
repnz
sti
fmul
jg
xor
adc
addr16
pop
jns
addr16
sub
add
inc
rcl
xor
adc
adc
sbb
xor
add
jge
ja
add
adc
sbb
dec
adc
punpcklbw
cs
(bad)
jns
idiv
adc
adc
jnp
sub
js
xchg
jne
ja
or
jl
daa
test
sbb
out
push
call
(bad)
sbb
sbb
sbb
add
enter
jp
daa
ja
pusha
cmp
jnp
xchg
pop
or
inc
call
imul
(bad)
cmps
sub
cmp
add
test
add
enter
jnp
daa
jl
addr16
xlat
add
jo
pop
ins
add
and
nop
add
push
jae
add
mov
rol
in
add
push
cmp
inc
add
rol
pusha
test
or
loopne
pop
je
mov
dec
and
mov
sti
daa
mov
and
arpl
add
div
dec
adc
jne
nop
mov
mov
xor
ja
inc
jp
sub
cmp
xchg
cmp
mov
jp
enter
mov
mov
loopne
addr16
pop
test
inc
push
lock
jbe
mov
clc
ja
xchg
add
push
inc
and
idiv
cdq
jne
cmp
pop
pop
jo
push
rol
xchg
pusha
(bad)
sbb
and
and
sub
or
dec
mov
and
call
xor
xchg
sub
xchg
aaa
js
imul
add
xchg
mov
or
xor
mov
add
or
add
test
or
clc
xchg
sub
(bad)
lds
and
sub
ss
xchg
dec
jo
pop
jns
sub
jp
fld
xor
mov
add
xchg
pushf
cmps
mov
mov
xor
xchg
pop
add
pop
test
mov
sub
test
outs
imul
mov
pop
jl
xchg
dec
mov
xchg
jl
jle
leave
jns
pop
or
mov
(bad)
pop
jo
(bad)
xlat
xchg
jl
mov
add
jns
ins
mov
sub
pop
fnstcw
fstp
fld
or
dec
cwde
dec
jmp
sub
mov
add
push
or
jno
cdq
cdq
pop
addr16
fbstp
in
cmp
ja
leave
clc
mov
call
sbb
pop
loopne
add
idiv
cdq
cld
stc
pop
xchg
pop
pop
mov
inc
mov
enter
pop
enter
fstp
enter
cwde
neg
mov
mov
xlat
xchg
cdq
cwde
mov
pushf
xor
cwde
pushf
xlat
xchg
sub
popf
adc
xchg
pop
out
mov
call
jns
xchg
add
xchg
mov
xchg
(bad)
neg
xchg
xor
xchg
leave
xchg
sbb
push
mov
push
call
sub
imul
add
call
pushf
(bad)
cmps
push
dec
cwde
aaa
dec
mov
or
sub
mov
jbe
xchg
movs
mov
pop
dec
cmp
push
mov
rcr
xchg
mov
movs
jge
add
call
cdq
adc
and
or
mov
adc
sub
add
push
add
jbe
cwde
cs
push
or
cdq
push
mov
dec
cli
xchg
xchg
jns
jno
cdq
jnp
xchg
adc
push
mov
sbb
dec
movs
mov
xchg
inc
cdq
cdq
bound
dec
jmp
adc
jns
jp
dec
dec
movs
sbb
adc
cmps
mov
nop
nop
add
mov
stos
iret
retf
fnstcw
or
jmp
(bad)
test
dec
mov
test
push
retf
scas
pop
test
push
lods
imul
popf
sbb
lahf
mov
jo
test
sbb
mov
mov
push
mov
jo
sub
scas
push
stos
retf
mov
push
mov
xor
scas
mov
cmps
ret
or
mov
adc
xchg
xchg
lods
adc
cmp
mov
sbb
sbb
xchg
add
mov
sub
cmc
xchg
mov
fwait
cdq
ins
or
mov
sub
fwait
call
xlat
imul
mov
pop
mov
sbb
xchg
jns
xchg
mov
test
call
mov
dec
imul
cwde
sub
or
mov
push
push
mov
add
sub
mov
mov
or
cwde
adc
and
outs
add
jmp
retf
shr
stos
cmp
mov
stos
mov
test
dec
cmp
fstp
jnp
aam
mov
cdq
pushf
int
xor
fwait
mov
cmp
jmp
mov
cmp
dec
mov
cmp
mov
ins
stos
xchg
fist
nop
stos
or
fwait
mov
sub
sbb
leave
stc
mov
jl
mov
mov
sbb
jmp
test
add
and
add
xchg
imul
mov
mov
ins
pop
xor
in
sbb
nop
jmp
enter
or
pop
stc
add
mov
sbb
ret
sub
mov
fcmovnb
xchg
pop
lds
sti
mov
cli
mov
fstp
jns
test
vpminub
sub
ror
cmp
mov
sub
jbe
(bad)
addr16
aam
enter
or
xchg
xchg
sbb
jl
add
lds
ret
pop
sbb
push
cmp
sub
cmp
inc
add
or
sbb
mov
stos
mov
ret
mov
mov
pop
lods
jb
scas
dec
push
or
xor
mov
pop
mov
or
xor
sub
mov
pushf
int3
cs
retf
xchg
sbb
and
dec
add
ins
xchg
and
enter
jecxz
mov
retf
ror
mov
sar
mov
cmp
int3
mov
int3
out
jmp
pop
mov
icebp
in
into
cld
in
add
lock
cld
stos
mov
iret
scas
stos
int
dec
mov
sub
lods
mov
dec
int3
fs
call
or
lods
mov
in
int
popa
add
lds
pop
loopne
int3
pop
add
retf
sbb
or
les
mov
adc
and
retf
int3
imul
xchg
leave
mov
jl
mov
aam
dec
cwde
adc
std
jl
lods
cld
stos
cmp
mov
adc
push
ins
iret
sub
(bad)
adc
mov
into
out
pushf
movs
in
int
or
pusha
in
shl
sbb
pop
std
rol
rol
les
xchg
sbb
jge
scas
jmp
imul
sbb
clc
cmp
mov
enter
or
xchg
(bad)
jge
test
sbb
std
aam
cmp
lds
fsubr
mov
inc
int
movs
int
in
fwait
rcl
iret
aas
mov
inc
in
add
mov
fdivr
shr
xlat
pop
cmp
aas
pop
enter
sar
mov
lods
rcr
int
and
add
cmc
mov
cmc
stos
fsub
jge
cmp
loopne
fdivr
fidivr
sub
pop
ins
into
ins
lods
aad
ins
iret
cmc
(bad)
(bad)
sub
or
es
into
pop
jge
out
sbb
jl
lds
fldln2
fst
push
lods
(bad)
int3
aad
cld
fiadd
mov
xchg
std
mov
(bad)
sbb
push
cs
push
fcom
fmul
scas
loopne
or
and
(bad)
mov
pop
sub
inc
jge
loop
(bad)
sbb
xlat
cmp
pop
or
add
outs
(bad)
or
fisubr
loope
ins
fcmovnb
retf
aad
pop
fstp
pop
les
jge
mov
loop
or
push
or
fidivr
mov
pop
cmp
shr
out
or
lods
sbb
dec
sahf
loopne
sbb
mov
in
jge
ja
fmul
out
ins
iret
(bad)
dec
fisub
(bad)
cs
shl
jg
fdiv
into
in
sbb
mov
jecxz
pop
jecxz
cs
popf
(bad)
das
jle
sbb
add
jecxz
dec
call
std
sar
int3
and
sbb
jmp
das
ins
jmp
pop
add
call
popf
jmp
movd
jp
jmp
pop
jmp
push
in
jnp
add
in
sbb
or
jnp
push
(bad)
push
in
movs
dec
loop
push
jecxz
sbb
shr
xchg
in
fucom
mov
mov
or
jmp
(bad)
out
out
out
xchg
(bad)
out
lods
rol
mov
and
out
add
add
out
daa
cs
stos
loop
pop
out
push
fsub
loop
mov
xchg
(bad)
shl
out
ds
dec
lock
jle
test
loop
out
aam
mov
jnp
add
scas
jmp
lods
fmul
jmp
sub
jmp
or
rcl
nop
lock
in
inc
das
jmp
jl
mov
in
mov
hlt
hlt
out
xlat
enter
mov
popf
mov
adc
mov
mov
out
(bad)
(bad)
icebp
and
mov
pop
out
ins
icebp
or
loope
push
add
lock
or
scas
call
dec
div
push
jno
jmp
pop
cmc
(bad)
mov
out
sbb
in
cmc
ret
mov
jle
dec
xlat
js
(bad)
mov
out
fnstcw
hlt
jle
pusha
lahf
loop
jmp
lahf
lock
sti
(bad)
in
fdivp
sbb
jmp
scas
loope
fsubrp
data16
in
push
push
jnp
cmc
inc
mov
push
hlt
pop
mov
mov
iret
lea
fs
sar
fcom
retf
imul
aad
out
cld
(bad)
cmp
leave
das
fcom
outs
std
sbb
jg
mov
(bad)
jmp
out
invd
cs
sbb
add
xchg
dec
test
lea
xchg
xchg
movs
pop
add
or
dec
cdq
xchg
scas
xchg
mov
add
xchg
lods
retf
xchg
mov
mov
mov
xchg
fimul
popf
(bad)
fadd
out
fnsave
rcl
pop
or
xchg
nop
lock
dec
jbe
push
add
xor
dec
mov
inc
pushf
push
test
sbb
mov
cwde
mov
mov
sub
push
xor
pop
retf
lahf
popf
in
sbb
pop
retf
xchg
sub
les
xor
dec
push
sub
mov
mov
loopne
cli
sub
sub
stos
push
xchg
jecxz
popa
pop
dec
popf
inc
test
pop
cmp
inc
ret
cmp
mov
jo
into
and
or
call
cmp
(bad)
push
call
test
cmp
mov
mov
inc
jmp
pop
mov
ficomp
je
das
test
test
(bad)
into
(bad)
and
ret
xchg
out
push
xchg
xchg
sub
mov
int3
into
out
(bad)
xchg
pop
adc
movs
adc
inc
dec
dec
xchg
ins
push
aad
sub
popf
fidivr
push
xchg
or
and
pop
jecxz
(bad)
call
fdivr
pop
std
xlat
into
jge
pop
and
fcomp
mov
ja
arpl
fst
gs
movs
mov
ss
fsub
call
push
fnstenv
jge
xor
js
cwde
pusha
xor
mov
ds
xchg
push
adc
adc
xchg
push
shl
in
outs
sar
scas
je
push
and
add
xor
pop
xchg
in
ja
outs
bound
cs
fimul
dec
and
adc
xor
inc
inc
sub
pushf
and
fimul
xchg
(bad)
lds
jb
out
push
pop
pop
xchg
jno
and
pop
cwde
adc
add
stc
cdq
xchg
jmp
mov
imul
test
daa
xchg
(bad)
jg
mov
sub
gs
cmps
loop
addr16
push
sbb
add
sahf
popf
imul
sub
and
pop
and
test
add
adc
cmp
rol
sub
test
mov
adc
in
mov
add
lods
push
lds
jo
mov
sbb
add
movs
(bad)
jmp
push
jmp
fwait
in
add
lods
adc
add
ins
mov
mov
and
out
mov
mov
mov
adc
(bad)
mov
lods
mov
arpl
fwait
lock
jmp
add
mov
or
leave
ficomp
clc
push
xor
xchg
fisub
dec
jae
stc
fiadd
fidivr
mov
retf
or
int3
jbe
push
adc
add
int3
jae
sbb
inc
or
fstp
jb
push
mov
mov
fmul
sub
shl
(bad)
ins
or
cmp
or
jnp
popf
add
xchg
and
fadd
mov
ret
or
sbb
popf
sbb
test
add
jle
or
sbb
mov
test
scas
cmps
sbb
test
jnp
mov
mov
les
movs
pop
and
call
loope
push
bndstx
adc
scas
cmp
std
cmc
fldcw
inc
mul
xchg
dec
cmp
out
out
pop
out
ds
jmp
fisubr
fistp
jmp
pop
cld
fdivp
stos
jmp
imul
lock
std
jno
dec
add
sub
mov
rcl
cli
sbb
mov
and
add
push
(bad)
push
sbb
pop
sti
jl
test
popf
add
or
xor
cmp
push
push
jo
or
push
inc
and
ror
push
xchg
sub
in
loopne
mov
mov
push
movs
loop
movs
nop
stos
jmp
lock
and
mov
mov
outs
xor
sbb
jbe
cmp
xchg
outs
push
pop
arpl
lock
cmp
sbb
xchg
nop
inc
pop
ja
push
push
lods
or
lea
mov
lea
in
fdivr
add
cmp
jns
pop
xchg
dec
and
and
mov
mov
xchg
lea
or
xchg
nop
mov
adc
inc
and
adc
and
(bad)
leave
pop
test
ins
stos
add
cs
inc
mov
and
jg
dec
push
pop
repnz
cmp
mov
mov
arpl
imul
pop
sub
ss
dec
outs
adc
jo
loope
loop
aad
into
ins
sub
pushf
loop
movs
push
mov
dec
add
mov
dec
jbe
repz
add
in
cmp
aas
push
add
leave
hlt
movs
cmp
cmp
mov
daa
dec
ror
and
push
mov
adc
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
push
jne
jo
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnb
or
pop
mov
mov
ffree
adc
outs
daa
jo
and
or
test
pop
outs
fwait
pop
mov
int
jno
mov
mov
in
ins
jne
fwait
add
into
cmc
pop
cmp
cmp
jno
fnstenv
or
loope
inc
mov
scas
sti
pop
out
out
mov
mov
mov
mov
mov
popf
mov
mov
int
adc
jmp
jmp
enter
jo
push
sbb
scas
push
scas
out
add
cmp
sbb
fmul
sbb
popa
adc
mov
lea
adc
inc
scas
rol
outs
mov
lods
loopne
sbb
les
lods
xchg
jecxz
mov
stos
mov
popa
call
outs
icebp
add
pushf
pop
sbb
cwde
ret
(bad)
mov
dec
gs
pop
retf
jb
fld
and
jne
shl
mov
gs
or
cdq
mov
xor
call
nop
out
iret
push
iret
mov
or
and
mov
adc
gs
sbb
jno
sub
jmp
jle
mov
add
out
fmul
dec
inc
ret
inc
add
nop
loopne
push
inc
and
add
call
sub
les
xor
fstp
or
cmp
cmp
into
pop
adc
sub
inc
jmp
add
es
adc
leave
rcr
jp
in
out
mov
int3
mov
lock
repnz
data16
call
xor
sbb
and
jno
jle
gs
dec
sbb
retf
(bad)
jne
cmps
jl
mov
push
sub
or
fneni(8087
retf
mov
int
loop
pop
jl
pusha
inc
rep
sbb
jecxz
mov
jne
mov
lds
int
mov
mov
push
pop
pop
out
mov
jae
xor
imul
mov
std
cmp
fs
addr16
sub
mov
mov
fwait
add
enter
inc
add
das
inc
rcl
stc
jl
mov
fisttp
loope
into
inc
jb
mov
xor
jmp
add
inc
mov
(bad)
push
sar
push
fadd
data16
(bad)
in
xor
xchg
lock
fadd
(bad)
pop
and
pop
into
in
cmp
arpl
dec
sbb
xchg
out
aaa
call
mov
push
arpl
fnsave
rep
arpl
fcmovnbe
sub
add
(bad)
cli
sbb
sti
pop
dec
call
in
pop
push
ss
lods
jae
outs
cmp
sahf
idiv
outs
cmc
addr16
or
pop
inc
in
xor
ja
addr16
add
mov
leave
fsubr
jecxz
or
cli
jnp
scas
in
pop
(bad)
push
fistp
xor
hlt
out
jns
ja
add
outs
mov
push
data16
daa
add
xlat
jnp
push
ins
and
les
shl
mov
outs
push
je
inc
jge
(bad)
push
push
ins
shl
jecxz
ins
retf
mov
cmp
add
es
(bad)
jge
or
and
jns
es
sub
icebp
xchg
jo
push
test
push
push
fsub
ret
(bad)
imul
outs
cmp
jle
addr16
mov
fdiv
rcl
add
add
mov
aaa
jo
mov
daa
or
cmp
push
jbe
jg
aaa
(bad)
jae
pusha
jne
sbb
xlat
jle
xchg
add
xor
add
mul
sbb
popa
bound
movs
and
push
push
ins
push
mov
pop
or
pusha
je
xchg
jns
aaa
jb
or
cmps
add
pop
xor
mov
jns
enter
mov
ja
js
jae
mov
inc
pop
inc
cmps
add
lahf
cmps
outs
aas
mov
repnz
mov
ja
inc
mov
cmps
add
dec
dec
push
addr16
push
push
popf
aaa
addr16
xchg
sub
sbb
js
push
mov
push
push
fsubr
inc
jne
mov
mov
sar
mov
test
fmul
bound
add
fcomp
out
in
xchg
gs
sbb
pop
(bad)
cld
push
or
cmp
test
mov
test
cmp
or
test
jg
xor
sub
push
xchg
test
jb
sub
enter
mov
data16
push
jb
je
sbb
shr
pop
lock
jg
cmps
(bad)
adc
dec
(bad)
js
ss
cmps
xor
mov
jge
in
and
xchg
ja
pop
enter
pop
sub
mov
data16
jno
fsubr
ins
iret
imul
ss
pop
pop
cmp
ss
jmp
add
jp
pop
outs
sub
xchg
add
ret
or
or
in
push
test
xor
fxch
jae
not
xchg
popa
xor
add
mov
nop
mov
mov
pop
sub
cmp
push
leave
jo
js
ret
js
mov
ins
int
xchg
ss
enter
lea
(bad)
mov
fs
pop
cwde
sbb
ja
daa
and
jo
xlat
(bad)
aam
imul
sbb
gs
mov
sub
out
lds
cmp
push
jo
push
imul
add
mov
cmps
pusha
cmp
inc
mov
push
lock
and
xchg
sbb
push
(bad)
push
mov
cmp
pop
or
mov
push
inc
push
mov
ins
aad
call
push
jbe
dec
xor
mov
mov
mov
leave
ja
stc
add
mov
xchg
and
cdq
es
dec
xlat
imul
ss
ins
adc
nop
jno
outs
lods
push
nop
dec
cmp
pop
sub
retf
inc
call
mov
cmp
jns
sbb
retf
mov
outs
jbe
test
xchg
jl
mov
pop
mov
push
mov
test
dec
push
mov
push
test
mov
add
sub
test
test
pusha
test
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
rcr
lods
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
sub
cmp
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
cs
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
je
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
cmp
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
in
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
lock
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
imul
jmp
xchg
xor
or
js
or
mov
mov
xor
jp
adc
mov
dec
xchg
xchg
out
sub
push
jo
sub
out
cmp
mov
or
stos
lods
scas
jmp
mov
imul
mov
or
fwait
stos
inc
pusha
mov
sub
mov
add
mov
sub
fwait
mov
inc
mov
imul
(bad)
scas
daa
mov
leave
jmp
add
pusha
add
loopne
mov
(bad)
cmp
mov
sub
sbb
fwait
mov
jmp
mov
add
pop
mov
or
inc
add
mov
or
fwait
mov
or
fidivr
cmp
retf
mov
imul
dec
rol
fwait
add
scas
xchg
cmp
or
mov
push
mov
jmp
dec
nop
mov
mov
cmp
retf
add
nop
jmp
or
popa
retf
mov
sub
(bad)
sub
jo
stc
sbb
jp
push
or
shr
mov
nop
fisttp
lock
(bad)
sbb
or
stos
sub
add
sbb
out
shl
ret
scas
(bad)
add
add
cld
ret
aas
ins
add
fcmovb
inc
or
aaa
add
cmp
add
add
add
les
xchg
les
ret
inc
pushf
les
mov
push
jl
or
xor
lds
(bad)
out
stos
mov
dec
les
(bad)
pusha
sbb
dec
or
dec
(bad)
push
jl
cmp
enter
les
push
in
mov
les
enter
jle
mov
dec
lods
add
sub
or
enter
pop
add
xchg
mov
and
add
test
out
js
and
add
pop
add
leave
mov
leave
clc
or
add
add
inc
add
jo
xchg
sub
inc
call
lds
add
lods
xchg
retf
int3
mov
retf
retf
int3
sahf
pop
int3
(bad)
mov
retf
out
call
fldcw
and
mov
xchg
(bad)
or
movs
ins
retf
int3
cli
retf
add
into
(bad)
mov
jmp
retf
retf
add
cli
cld
retf
push
ror
mov
push
push
add
retf
scas
lods
sar
cld
retf
mov
rol
cmp
(bad)
jl
cmc
jl
std
in
iret
sbb
xor
iret
std
cld
rol
iret
xor
std
in
retf
iret
and
shr
call
add
int
stos
shr
lods
xchg
jl
cmp
or
shl
in
iret
sub
push
sub
inc
ins
rol
or
(bad)
ins
shl
add
rol
adc
sbb
shl
pop
aam
cld
add
xchg
shr
cwde
rcr
cmp
dec
or
sbb
xor
mov
aam
push
and
pop
ins
add
and
sub
pop
popf
iret
bound
pop
rcl
adc
shl
pushf
xlat
cli
int3
rcr
popf
(bad)
push
in
ror
fcom
push
(bad)
aad
jl
(bad)
sbb
push
mov
pusha
(bad)
fnstcw
sbb
(bad)
or
mov
add
fsub
lods
iret
pop
cmp
push
lods
aad
mov
mov
lds
into
pop
ins
fmul
fdiv
fdivr
xlat
and
mov
fisttp
push
and
das
cmp
retf
mov
int
cmp
mov
ficomp
fmul
std
fistp
(bad)
aas
std
fdivrp
pop
ficomp
into
mov
retf
fistp
arpl
mov
fnstenv
rcr
retf
cs
ins
cmp
mov
(bad)
pop
add
fist
fcom
mov
fldcw
std
into
fidivr
out
fsub
pop
fldcw
mov
mov
jecxz
std
loopne
(bad)
rcr
loopne
or
neg
imul
pop
nop
add
loopne
push
fisubr
mov
add
or
cmp
loop
sahf
jecxz
cmp
cmp
out
push
in
out
retf
rcr
fild
retf
loope
out
out
push
out
int
inc
push
out
std
loopne
cs
in
fimul
pop
aam
xor
mov
bound
dec
ins
in
or
fwait
popf
out
push
in
cs
scas
rcl
mov
das
pop
out
out
aad
outs
loop
pop
ficomp
loopne
jge
push
fsubrp
retf
mov
call
inc
stos
jmp
(bad)
shl
pop
add
add
loop
ds
cs
pop
scas
loope
push
jmp
fistp
push
in
loopne
ins
loopne
outs
in
xchg
pop
rol
push
loop
(bad)
fistp
loop
in
call
ds
(bad)
add
call
push
jmp
mov
test
into
mov
out
sub
lock
outs
out
fcos
sahf
in
or
out
add
or
mov
lock
lock
sar
in
shl
ins
jmp
cmp
sar
call
dec
loop
jle
push
inc
stos
pop
rcl
popf
shl
fist
xor
add
outs
fistp
in
outs
out
or
aad
dec
in
ins
dec
lock
push
out
stc
jl
fnstcw
dec
scas
jecxz
cs
cli
std
loopne
(bad)
sar
jo
aad
icebp
and
inc
dec
out
out
retf
mov
out
push
popf
out
sub
jmp
outs
(bad)
in
call
scas
loope
(bad)
fnsave
aas
out
push
bnd
shl
jle
sub
out
ds
lea
inc
call
adc
add
(bad)
repz
add
(bad)
in
xchg
mov
imul
mov
in
pmulhw
in
pop
in
jmp
add
imul
add
xor
(bad)
hlt
mov
div
(bad)
sti
pop
scas
add
fcom
clc
(bad)
loop
out
hlt
push
(bad)
jnp
sti
sti
sbb
aad
out
adc
lock
fidiv
loopne
fdivrp
or
jne
stc
aas
pop
(bad)
xchg
pop
cmc
xchg
das
inc
retf
call
cli
das
scas
(bad)
fld
pop
aas
stos
dec
shl
jg
iret
iret
fucomp
out
cld
test
clc
adc
inc
test
rcl
push
mov
push
test
dec
imul
cdq
cmp
xchg
shr
stos
call
(bad)
jns
pop
push
pop
jno
test
ret
fldl2t
retf
les
call
fidivr
loopne
mov
fld
sbb
std
sbb
stc
mov
mov
retf
cld
stos
xor
jp
retf
sub
into
mov
dec
cli
fisubr
je
add
add
or
movs
clc
push
mov
jb
sub
loope
pop
or
mov
mov
mov
stos
inc
lock
add
mov
dec
(bad)
sbb
lods
pop
iret
adc
xchg
push
or
rol
inc
dec
mov
shl
cmp
scas
sub
fs
rcl
scas
scas
mov
out
dec
lock
pop
jns
inc
into
ins
sub
mov
fsubp
dec
scas
sbb
mov
(bad)
rcr
mov
push
fsubr
fcmovne
addr16
(bad)
push
les
and
inc
fldenv
xchg
fist
jne
jl
mov
mov
enter
jae
out
xor
int3
xchg
cdq
push
xchg
mov
ss
and
pop
fdivr
push
(bad)
jmp
push
fs
in
hlt
imul
rol
jl
or
or
in
iret
call
push
repz
fstp
jnp
pusha
fwait
ds
fld
mov
fnsave
aad
cmp
lods
xchg
or
sub
push
jno
popf
dec
shr
xchg
cmc
aam
push
and
mov
xor
clc
loope
and
lds
adc
mov
sbb
cmp
ror
adc
mov
pop
add
fcom
arpl
fchs
dec
add
loop
xchg
inc
inc
add
daa
(bad)
mov
call
in
bound
sub
mov
jge
or
mov
aad
(bad)
cmp
and
call
pop
in
jmp
in
mov
loop
cmp
or
cwde
sbb
es
lahf
push
and
stos
lods
inc
mov
mov
cmps
out
shl
test
stc
pop
cdq
in
or
aad
pop
jae
sub
clc
push
lds
push
mov
jle
dec
mov
xor
test
or
mov
imul
fnstsw
out
lods
xlat
mov
pop
sbb
mov
adc
pushf
add
mov
mov
jae
jbe
addr16
lods
icebp
mov
or
and
and
xchg
int3
pop
cli
and
mov
es
arpl
das
(bad)
fwait
xor
sub
and
cmp
inc
hlt
movs
fistp
cmp
mov
mov
aaa
cmps
inc
or
dec
sbb
(bad)
(bad)
mul
js
pop
mov
sub
in
retf
in
xchg
mov
push
push
xor
cmps
stos
ss
(bad)
or
mov
add
push
xor
and
out
cmp
cmp
js
dec
and
shl
lahf
lahf
sub
cmps
fwait
sahf
out
mov
pop
test
push
dec
int
fisubr
mov
push
stc
lods
dec
cmps
mov
test
out
and
into
push
mov
fsubr
pop
outs
mov
retf
jecxz
aas
push
xor
nop
loope
and
push
daa
cs
not
cmps
ins
push
inc
clc
inc
xchg
pop
je
mov
mov
ret
jnp
lds
sahf
aam
nop
(bad)
aaa
and
mov
retf
fild
sbb
into
jno
sti
sbb
and
pusha
mov
jnp
xor
not
mov
mov
scas
hlt
movs
scas
add
cmp
and
in
adc
sub
imul
sbb
adc
sti
popf
jecxz
push
mov
sub
xchg
scas
inc
rcl
dec
cmp
push
scas
sub
inc
mov
mov
imul
or
mov
inc
sbb
xor
pop
or
aaa
inc
sti
jno
add
xchg
call
scas
pop
inc
movs
pop
add
cdq
or
mov
dec
sub
sbb
ret
add
sbb
adc
xor
lahf
ret
pop
stc
add
inc
jecxz
dec
or
test
ds
outs
jle
arpl
ss
fcmove
push
xchg
sub
addr16
inc
or
(bad)
aad
pop
jmp
dec
lods
ins
imul
(bad)
fldenv
mov
iret
xor
pop
add
rcl
and
leave
dec
je
jo
cmp
rol
aaa
dec
outs
cmps
push
or
adc
adc
leave
and
(bad)
aam
std
inc
js
adc
adc
mov
xor
mov
inc
hlt
pushf
and
push
sbb
pusha
inc
test
sub
pop
and
loop
xchg
add
vpmaxsw
stos
jmp
nop
add
dec
jge
sahf
test
mov
adc
movs
xor
sahf
lock
xchg
mov
(bad)
xor
shr
jbe
jmp
mov
imul
and
dec
(bad)
push
mov
shl
fld
fild
jecxz
pop
xchg
cmps
data16
add
inc
mov
ror
adc
add
out
fwait
jg
loopne
or
ss
push
or
mov
ss
cmp
out
push
push
adc
pusha
dec
or
push
jbe
cmp
loop
push
jp
mov
mov
adc
cmp
fst
cmp
inc
pop
adc
mov
in
push
sub
and
sbb
out
mov
std
ins
inc
dec
mov
xor
pushf
popa
or
pop
jl
xor
mov
push
mov
lea
add
xor
aaa
or
or
add
int
jle
sbb
sti
xor
jg
cmp
add
clc
mov
adc
push
loop
push
lods
call
inc
add
pop
ror
imul
or
add
jbe
dec
dec
lods
dec
push
and
es
xor
adc
(bad)
cwde
mov
mov
push
xor
stos
clc
mov
xor
fadd
int
xor
jg
add
lock
rol
jbe
mov
inc
or
cmp
icebp
mov
and
popa
push
repz
rcl
ins
call
or
fild
mov
in
add
inc
sahf
xchg
cld
dec
cmp
lea
ja
pusha
sahf
pop
mov
add
es
push
in
adc
mov
mov
fxch
push
adc
or
mov
pop
push
repnz
in
pop
daa
scas
pop
ror
inc
repz
dec
and
pop
jno
sub
push
or
sub
jg
in
adc
jecxz
mov
enter
and
jge
ss
fcmovnbe
in
dec
movs
jae
in
dec
fwait
lahf
inc
test
lods
mov
add
rcr
data16
adc
push
sti
fcmovu
jbe
add
pushf
aaa
outs
sbb
rcl
mov
mov
sti
ror
dec
mov
mov
mov
out
data16
pop
fiadd
dec
jo
or
rcl
out
mov
pop
pop
frstor
sub
aam
xchg
aaa
pop
ins
stc
rcr
in
push
js
ret
imul
(bad)
or
mov
in
push
stc
adc
outs
and
and
mov
ret
jo
xchg
jecxz
mov
repz
leave
cmp
repz
iret
sbb
pop
scas
repz
pop
out
addr16
or
js
jecxz
out
cmp
mov
and
in
jecxz
ficom
jge
mov
fcom
mov
aaa
xor
cdq
jmp
lock
jl
lds
ja
adc
mov
loopne
or
pop
sbb
outs
jns
das
sahf
add
aaa
push
or
pop
(bad)
cmp
(bad)
fdivp
int3
sti
pop
leave
cwde
pop
cmp
loope
ja
xchg
mov
adc
dec
pop
out
pop
inc
add
dec
ds
inc
enter
imul
mov
fsubrp
pop
not
jg
jbe
xlat
std
(bad)
inc
jnp
pop
pop
in
gs
sti
push
pop
add
cmp
clc
mov
dec
jnp
ret
jle
ins
aas
mov
pop
ins
bound
inc
inc
jl
in
jbe
and
jmp
push
xchg
inc
xchg
pop
jg
cmps
add
add
fdiv
or
add
cmps
jnp
inc
jnp
idiv
enter
add
add
add
and
xor
rcr
and
xor
add
pop
enter
imul
sub
and
cmp
add
jp
mov
test
xlat
jnp
idiv
ja
test
jbe
stc
out
or
jge
or
addr16
dec
sub
dec
mov
in
mov
push
loopne
pop
mov
pop
cwde
jnp
mov
adc
inc
mov
aaa
and
push
enter
jbe
mov
fadd
enter
cmp
and
scas
idiv
daa
add
mov
xchg
pop
jbe
push
add
xchg
jno
mov
pop
pop
mov
mov
jbe
mov
pop
dec
mov
mov
stos
mov
ins
push
xchg
inc
inc
xor
rol
push
xchg
jge
ror
sar
push
mov
xor
test
or
js
retf
xor
push
mov
test
(bad)
jne
nop
mov
mov
jge
test
mov
jno
cmp
enter
jnp
enter
js
shr
sbb
add
mov
adc
add
push
jge
mov
xchg
or
add
xchg
mov
cmps
daa
nop
sar
in
or
sbb
jg
pop
ja
or
nop
sbb
sbb
and
fistp
xchg
xchg
add
and
leave
enter
jae
and
inc
or
push
cmp
sbb
xchg
push
or
sbb
jbe
inc
(bad)
pop
sub
sub
lea
sub
pop
test
dec
jmp
dec
jns
push
xchg
dec
mov
dec
test
sub
xchg
arpl
cmp
or
imul
cdq
fcom
inc
dec
jns
push
jns
addr16
xchg
xchg
stc
lea
jg
call
popa
inc
(bad)
xor
push
xchg
call
jb
add
test
lock
jno
fwait
imul
cwde
fstp
xchg
or
sub
(bad)
mov
xchg
jge
call
outs
imul
xchg
mov
call
outs
cdq
lahf
popa
out
rcr
push
pop
pushf
dec
jmp
or
push
add
push
mov
push
lods
imul
mov
mov
test
xchg
sub
push
call
fld
test
js
cmp
cmps
xchg
test
lea
xchg
mov
mov
jmp
xor
in
nop
dec
add
sbb
sbb
xchg
inc
fcomp
sub
inc
mov
inc
popf
pop
imul
mov
leave
mov
jecxz
gs
or
js
xchg
or
lahf
sbb
pop
xchg
mov
dec
cmp
loopne
shl
sub
movs
popf
dec
sahf
inc
fsub
pop
xchg
xchg
pop
lahf
imul
call
lea
stos
jnp
mov
pop
imul
push
push
jmp
cmps
arpl
call
jo
stos
add
add
enter
stos
pop
stc
cdq
imul
jo
cwde
mov
xchg
dec
add
push
dec
sbb
mov
cmps
jmp
mov
fs
xchg
jmp
sahf
(bad)
jmp
xor
(bad)
sub
test
inc
fld
and
arpl
xchg
and
mov
jp
mov
xchg
std
call
lea
add
mov
pop
movs
pop
leave
call
inc
jmp
and
out
stos
add
mov
sbb
lods
sar
movs
inc
jmp
jle
scas
inc
or
sub
mov
(bad)
scas
inc
sub
mov
xor
and
xchg
pop
dec
aas
ret
mov
call
mov
shr
retf
call
lods
ins
mov
cmp
mov
fisubr
sub
xchg
in
mov
jns
leave
sbb
dec
scas
pop
sbb
jmp
mov
add
sub
sbb
mov
dec
dec
rep
lods
out
mov
or
pop
mov
sti
lods
xchg
mov
add
mov
cmp
mov
mov
mov
jnp
xor
jns
add
mov
pop
movs
sbb
mov
sub
pop
mov
mov
mov
stos
inc
imul
mov
mov
aad
mov
sbb
(bad)
adc
mov
jmp
sbb
mov
mov
fwait
lods
or
mov
cld
mov
mov
mov
repnz
mov
mov
add
jp
lock
and
mov
sub
add
add
lods
movs
mov
xchg
ret
push
pop
sar
loopne
fsub
adc
mov
int3
test
stos
mov
mov
fs
cmp
ret
mov
sub
(bad)
dec
or
inc
pushf
mov
fcmovnb
dec
fwait
mov
or
jmp
int
(bad)
mov
mov
fld
retf
xchg
mov
add
sub
jnp
sbb
push
ret
gs
lds
inc
add
add
leave
mov
add
or
inc
les
sbb
sub
xchg
in
jnp
cmp
push
cld
enter
pop
mov
aam
mov
fnstenv
and
sub
jns
loop
mov
cmp
sbb
sub
add
dec
mov
fwait
stos
jne
int
mov
ja
int3
into
sub
xor
fwait
ds
push
dec
add
pop
xchg
idiv
adc
lods
lods
mov
mov
mov
cmp
daa
sub
repz
(bad)
in
mov
lock
jns
mov
jp
call
enter
loop
sahf
inc
sub
out
sti
retf
ret
in
or
push
cmp
sti
retf
leave
in
(bad)
pop
retf
sub
int3
xchg
into
ins
into
repz
add
int
jl
icebp
mov
leave
or
das
dec
mov
sub
iret
mov
xchg
cld
into
push
mov
std
rol
ror
sub
adc
or
jo
fisubr
xchg
int3
mov
ret
mov
mov
push
aam
(bad)
lds
int
int
dec
sub
sub
jmp
ins
shr
in
retf
(bad)
sbb
test
xlat
push
sub
xor
sar
int3
ins
jmp
retf
xchg
fimul
cmp
mov
sbb
adc
aad
sub
add
ret
nop
in
rol
sbb
pop
dec
aad
or
std
cmp
int
fmul
push
push
call
mov
pushf
fist
iret
xchg
jl
aaa
std
test
loopne
adc
scas
fnstsw
jge
bound
mov
mov
int
add
dec
cmp
aaa
xor
loopne
and
rcr
dec
aad
int
mov
int
jge
fsub
xchg
mov
fsub
mov
cmp
adc
sar
fincstp
sub
jb
xlat
sahf
dec
frstor
std
in
loopne
sbb
adc
fiadd
xchg
jl
rcr
std
mov
in
fild
fadd
dec
sbb
lds
scas
fsubr
xlat
std
mov
(bad)
sub
(bad)
mov
fcomp
or
add
fist
in
outs
ficom
int3
xlat
xlat
pop
(bad)
pop
cs
push
shl
jecxz
mov
push
loopne
push
adc
bound
dec
ins
fild
jecxz
mov
add
fild
stos
cmps
pop
in
cs
jle
mov
fbld
xlat
cld
mov
dec
int
cmp
loop
dec
out
outs
jecxz
fsubrp
ins
dec
jecxz
cs
(bad)
out
outs
fsub
out
outs
fsubr
jecxz
dec
jecxz
out
xlat
add
popa
lods
in
push
call
int
int3
cmp
add
call
cs
mov
fistp
shl
or
fisub
sbb
mov
in
icebp
mov
adc
shr
mov
out
fucomp
mov
push
xor
or
lods
(bad)
outs
loop
pop
fmul
sahf
jmp
rcr
jecxz
pop
fcmovnb
(bad)
loope
fiadd
(bad)
into
ficom
sbb
jmp
aam
cmp
mov
in
push
ficomp
call
(bad)
movs
jle
dec
or
sti
std
(bad)
sahf
jmp
cmp
fiadd
mov
out
or
loop
(bad)
out
adc
fsub
call
pop
jmp
loope
jmp
retf
popf
jle
and
out
cmp
das
das
jmp
adc
dec
xor
hlt
jle
dec
lahf
jmp
dec
(bad)
sub
gs
pmaddwd
outs
sar
xchg
in
add
ficom
fsub
cmc
dec
pop
outs
(bad)
outs
(bad)
daa
fucomip
hlt
pop
movs
js
cmc
test
jecxz
pop
sahf
scas
out
in
push
add
aas
out
fsubr
div
mov
repz
hlt
adc
in
mul
stos
hlt
jne
clc
ror
pop
aam
lahf
repnz
outs
stc
es
fnstsw
and
out
in
fdivr
out
jl
cmc
test
in
dec
jg
push
iret
repnz
sar
int
fsub
jns
icebp
mov
hlt
xchg
sti
dec
or
cmc
outs
rcl
imul
ds
pop
loopne
aas
mov
jge
hlt
leave
pop
out
shr
(bad)
out
aad
dec
jecxz
paddb
cld
gs
icebp
retf
loope
jmp
aas
out
nop
lahf
std
mov
retf
aas
pushf
(bad)
jnp
std
jnp
sti
mov
int
clc
cmps
invd
sub
sub
mov
mov
sbb
lea
pop
add
mov
mov
pop
scas
mov
mov
cmps
xchg
lods
xchg
mov
ret
pushf
mov
enter
mov
movs
add
mov
(bad)
(bad)
mov
test
mov
(bad)
fadd
(bad)
out
in
mov
(bad)
pop
(bad)
(bad)
test
add
push
mov
add
cmp
push
retf
jl
add
stos
les
(bad)
inc
mov
lock
adc
and
jns
add
pusha
loop
sbb
add
dec
dec
cld
call
inc
cld
and
cmp
sbb
movs
inc
add
jp
mov
xor
xchg
dec
pop
inc
jno
mov
pushf
inc
adc
push
pop
adc
sbb
mov
and
int
test
push
aaa
repnz
jb
clc
pop
jmp
push
pusha
fidivr
bound
lahf
outs
inc
cmp
int
sub
add
div
dec
test
lds
inc
jbe
scas
loope
or
(bad)
jns
fisubr
pop
and
ret
pop
addr16
pop
jno
fwait
adc
ss
addr16
add
sub
sbb
and
dec
ret
cmp
out
pop
dec
dec
retf
jge
stos
hlt
test
popa
out
fdiv
dec
jecxz
test
fmul
(bad)
aaa
sub
mov
pop
dec
jp
add
pop
ja
fst
pop
add
cwde
adc
xchg
and
and
es
inc
ffree
xlat
pop
test
aam
fnstsw
movs
jbe
sub
jns
popa
sub
push
js
pop
clc
sub
xchg
test
sbb
xor
pop
add
push
js
jo
inc
pop
jecxz
mov
cmp
daa
pop
inc
sub
push
jecxz
mov
xchg
and
cmp
lds
in
adc
rol
xor
mov
pop
sub
ret
pushf
cdq
xor
data16
xchg
jne
cli
or
xchg
cld
rcr
add
sub
xchg
aas
jle
call
loopne
(bad)
pop
pop
shl
mov
xor
movs
xor
jmp
xchg
fiadd
adc
test
into
sub
mov
pop
fbstp
push
or
add
add
rol
jo
inc
pop
rcr
rcl
mov
cmp
sub
lods
mov
jle
add
ins
pop
(bad)
ret
mov
mov
cs
loopne
lds
retf
cmps
sahf
mov
test
sub
fnstcw
inc
inc
dec
int
jmp
mov
and
mov
mov
push
aam
mov
movs
xlat
mov
fidivr
add
sbb
mov
cs
mov
adc
sbb
pop
ret
dec
pop
and
jb
out
push
shl
fwait
rcr
sub
mov
bound
jno
(bad)
xor
or
ret
mov
mov
sbb
(bad)
mov
retf
(bad)
sub
movsx
jb
fstp
xchg
cmps
mov
add
ds
std
neg
ss
mov
pop
mov
inc
jmp
js
or
in
retf
fld
push
repz
out
mov
and
stos
mov
mov
clc
loopne
xor
test
ins
fwait
adc
xchg
mov
cmp
xchg
add
dec
jnp
inc
ret
loope
dec
ficom
dec
fdivr
mov
mov
jp
jb
push
mul
iret
add
xchg
bound
mov
mov
ds
adc
jmp
in
rcr
pop
jle
pop
mov
mov
ss
leave
das
jle
mov
(bad)
in
inc
aas
push
pushf
cmp
pop
adc
xor
adc
add
addr16
or
pop
loop
xlat
cmp
in
loopne
and
mov
(bad)
cli
cmp
cld
dec
xor
xchg
sbb
push
push
sub
loope
push
pusha
ds
test
cld
adc
aad
aas
and
dec
mov
fadd
mov
or
or
push
test
add
dec
js
fsub
ja
inc
loope
mov
pop
sub
add
(bad)
aad
add
jne
and
sub
inc
xor
cwde
arpl
xchg
clc
(bad)
adc
outs
jecxz
or
leave
adc
je
mov
sub
loopne
(bad)
sub
adc
xor
retf
sub
fistp
enter
jg
ins
and
push
stos
xchg
outs
adc
nop
ds
aaa
push
inc
iret
xchg
mov
jne
aaa
jb
jnp
push
and
dec
loope
pop
(bad)
bnd
in
and
cmp
outs
push
nop
mov
fist
mov
xor
xor
dec
pushf
jecxz
addr16
(bad)
(bad)
xchg
jb
xchg
mov
(bad)
in
fs
leave
dec
jge
repz
stc
and
aas
adc
ror
std
dec
test
pop
call
lea
outs
dec
aam
adc
out
in
dec
ror
test
xchg
call
push
retf
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
sub
jo
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
sub
(bad)
loopne
jno
shr
(bad)
lock
test
add
enter
xor
fsub
loop
mov
jg
xor
inc
jno
jmp
xchg
add
jo
mov
or
int3
ins
sub
lock
in
xchg
xlat
lods
aam
outs
jbe
imul
fidiv
jbe
sub
xlat
mov
mov
loope
retf
lods
scas
pop
imul
clc
pop
xor
pop
and
ret
xor
xchg
(bad)
or
xchg
ror
cmp
sub
pop
mov
mov
xlat
lds
ds
xchg
or
mov
pop
int3
pop
or
jo
addr16
sbb
pop
add
out
mov
popa
shl
cwde
retf
lea
dec
cld
in
jb
leave
jmp
out
clc
ret
das
out
jb
lds
adc
cmp
push
(bad)
outs
adc
or
repnz
js
adc
xor
sar
xchg
std
int3
sub
repnz
jl
aaa
retf
mov
dec
js
jae
push
call
xor
inc
mov
pop
rol
sbb
adc
add
sbb
ror
add
jmp
icebp
fsub
iret
mov
pushf
test
fnstcw
jge
jecxz
sub
mov
pop
xchg
or
xchg
out
mov
sub
mov
push
sbb
lods
cmp
mov
(bad)
pop
arpl
pop
or
or
inc
cmp
and
sbb
pusha
pop
jmp
mov
(bad)
xlat
pop
ficom
jae
cmps
sub
into
add
mov
mov
js
arpl
push
mov
or
loop
xchg
cdq
ror
scas
jb
aas
mov
mov
push
clc
aam
dec
ja
and
sub
mov
ror
iret
(bad)
xchg
fidiv
jnp
mov
jp
sti
test
xor
jge
xchg
outs
jbe
out
repz
fidivr
lock
and
or
rcl
mov
lahf
retf
jo
arpl
mov
aaa
cmp
adc
jge
add
fsub
gs
ss
sbb
pop
outs
jno
cmp
dec
loopne
movs
and
in
jge
out
adc
mov
pop
and
retf
repz
cmps
mov
ror
mov
push
shl
out
outs
cmp
cmp
add
(bad)
mov
xchg
rol
imul
cmp
and
pop
(bad)
outs
mov
loopne
adc
popf
(bad)
cmp
neg
sbb
rcr
test
sub
xchg
fdivrp
sahf
sub
jns
popa
push
cmc
imul
test
dec
popf
mov
or
(bad)
xlat
in
xchg
xchg
dec
cli
jno
sahf
out
push
jo
push
jnp
ss
lock
and
mov
int
popa
xchg
pop
jle
push
pop
(bad)
daa
add
jo
gs
inc
dec
(bad)
cmp
rcl
push
xchg
jbe
int
ins
pop
add
jbe
sets
xchg
cmp
push
cmp
nop
push
xchg
xor
arpl
bound
jo
cmp
push
jge
pop
ins
call
cmps
add
arpl
out
and
pop
js
ins
inc
(bad)
imul
ins
aaa
rol
xor
add
xlat
jae
neg
or
mov
outs
outs
xor
xor
add
inc
xchg
jb
inc
add
shl
(bad)
pop
adc
and
sub
fadd
push
imul
push
mov
xlat
xchg
enter
add
arpl
cmp
or
out
arpl
out
test
sbb
mov
sub
je
push
mov
outs
mov
je
nop
push
(bad)
jns
out
push
jg
clc
sbb
jne
cmp
xchg
ins
std
xchg
test
es
cmps
jns
cmps
jne
test
add
data16
addr16
js
dec
(bad)
mov
sub
jg
gs
(bad)
jae
add
outs
pusha
mov
dec
out
fimul
addr16
push
loope
outs
std
(bad)
je
jne
dec
call
mov
mov
nop
adc
nop
or
ins
stc
xchg
pop
lock
jo
add
arpl
js
out
out
js
mov
mov
outs
arpl
in
mul
out
scas
inc
add
aad
out
mov
imul
add
xchg
mov
mov
add
jp
push
xchg
xor
fist
mov
jb
push
jmp
sbb
sbb
or
add
(bad)
ins
mov
jo
adc
nop
aaa
xchg
sub
mov
sbb
gs
shl
mov
cmp
sbb
pop
fdiv
lea
aaa
jnp
imul
jb
fdivr
div
or
dec
jnp
mov
mov
lods
jne
ss
jge
pop
xchg
bound
xchg
or
test
or
pop
shl
pusha
mov
jns
test
cwde
imul
jnp
jne
inc
nop
sbb
pop
jnp
(bad)
jno
ss
sbb
xchg
fwait
lahf
cmc
pop
xlat
test
mov
mov
nop
xchg
push
nop
pop
cdq
jnp
fdiv
and
xchg
dec
inc
xchg
addr16
xchg
nop
mov
ja
jbe
repnz
jae
imul
jnp
sub
sbb
pop
mov
or
cmps
popf
mov
add
jp
popf
xchg
nop
sbb
mov
mov
shl
pop
movs
fst
cmps
mov
mov
pusha
dec
pop
xor
test
mov
xchg
mov
jns
xchg
ds
gs
mov
lea
xchg
pop
xchg
cmps
je
cmps
xchg
cdq
imul
nop
std
call
add
jl
mov
jne
sbb
or
movs
push
out
push
push
arpl
outs
sub
dec
add
xor
ins
add
jnp
ss
js
(bad)
out
inc
and
add
jbe
imul
mov
je
push
call
add
add
jp
jp
inc
pusha
add
stos
movs
pop
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
pop
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
adc
or
pop
push
sub
sub
cmp
call
add
data16
adc
outs
ins
test
mov
lods
fs
pop
xor
sub
ds
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
or
adc
push
add
data16
adc
cmps
movs
je
je
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
pop
pop
pop
sub
sub
ds
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
pop
fs
xor
ds
dec
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
add
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
cs
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
std
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
lock
push
retf
mov
pop
dec
movs
adc
or
scas
mov
add
mov
push
or
mov
mov
sub
mov
mov
retf
add
sub
(bad)
sbb
jns
jnp
mov
(bad)
retf
sub
test
cli
mov
loopne
es
add
stos
fwait
iret
sub
stos
mov
mov
fiadd
and
dec
mov
jnp
dec
shl
sub
leave
jmp
add
pusha
add
mov
daa
mov
mov
mov
mov
xchg
(bad)
pop
mov
cmp
mov
jmp
lahf
or
jo
loope
mov
stos
mov
jmp
das
push
add
mov
sub
jmp
mov
sti
mov
retf
mov
or
mov
cli
mov
mov
or
mov
cmp
mov
ficomp
scas
fstp
nop
out
lods
xchg
or
dec
mov
stos
mov
fstp
imul
add
fwait
mov
sbb
mov
ret
or
sbb
call
pop
mov
mov
jns
sar
or
mov
mov
lock
(bad)
add
add
ret
xor
ret
ss
ret
cmp
add
mov
add
loopne
cmp
lods
xchg
les
ret
cmp
lds
les
add
add
cld
scas
inc
and
mov
or
cmp
inc
mov
das
int3
add
and
pop
inc
les
ret
dec
in
mov
ret
jo
mov
ja
xchg
(bad)
ds
add
ins
lds
(bad)
jl
lds
stos
dec
nop
shr
cmp
mov
push
add
mov
xor
mov
nop
add
enter
xchg
cmp
dec
adc
push
mov
dec
dec
leave
jp
mov
xor
xchg
sbb
jp
retf
mov
pushf
retf
mov
int3
add
sbb
mov
mov
int3
repz
or
(bad)
jg
add
int3
xchg
jl
cdq
cmp
mov
xchg
(bad)
stos
pushf
retf
push
xor
xchg
dec
stos
push
lock
leave
stos
fmul
jecxz
into
das
adc
pop
push
add
loopne
call
retf
into
mov
into
jns
iret
hlt
cmp
jmp
leave
or
iret
in
into
out
lods
int3
xor
out
int3
rcl
sub
cmc
int3
shl
shl
in
mov
ins
iret
retf
pop
iret
retf
cmp
sbb
sub
add
or
sbb
dec
sub
leave
jl
add
ror
ins
iret
push
lods
rcl
sub
adc
into
std
or
xor
shr
test
out
sbb
repz
ror
in
rol
sti
aam
mov
push
or
adc
sar
sbb
adc
mov
add
dec
dec
into
push
fst
or
(bad)
pop
loopne
add
rcl
lods
(bad)
(bad)
mov
rol
into
dec
mov
cmp
add
cld
xlat
dec
or
or
aad
dec
into
aas
pop
fadd
into
nop
mov
xchg
lods
(bad)
mov
in
aam
popf
shr
(bad)
dec
int
mov
fwait
lods
add
lods
les
xlat
js
stos
push
sbb
in
iret
clc
cmp
(bad)
fst
cmp
(bad)
aad
dec
aam
mov
sub
shl
aam
sub
pop
rcr
mov
fcom
std
fmul
cmp
mov
int
popf
retf
iret
jge
push
fstp
cmc
sbb
hlt
jge
xchg
ins
(bad)
lods
fsubr
xlat
pop
(bad)
fsubr
aam
popf
fst
pop
add
lods
into
adc
fiadd
loopne
mov
and
fsubr
std
aam
pop
rol
fsub
cmp
adc
rcr
sub
in
int3
fst
pop
(bad)
add
leave
in
or
imul
aam
dec
ror
fnstenv
sahf
loope
sub
sub
stos
mov
(bad)
jge
add
add
(bad)
mov
xor
aam
ins
ficom
xor
loope
(bad)
loope
push
aad
sbb
push
dec
aam
cmp
jmp
loop
dec
aam
or
jmp
fimul
aad
xor
in
(bad)
fadd
jns
fbld
fisub
out
cmp
js
fbstp
into
movs
sub
jp
fsub
sub
add
(bad)
pop
jle
ins
into
fisubr
arpl
jmp
(bad)
out
or
push
lods
iret
inc
ins
add
jmp
fistp
dec
int
nop
call
adc
mov
jmp
in
sub
jo
ficom
ds
mov
(bad)
jmp
in
sahf
jmp
dec
jmp
push
loopne
mov
mov
ja
out
or
dec
jge
in
jge
(bad)
outs
sar
rcl
fucomip
mov
shr
pop
in
in
ins
call
mov
jmp
in
jmp
push
out
jae
jmp
sub
sub
in
les
xor
pop
out
jmp
scas
in
jmp
jmp
out
out
ins
add
jo
stos
int
and
ffree
cs
scas
ins
repnz
add
lods
jmp
lods
fmulp
pop
lock
mov
cli
mov
scas
jle
xchg
neg
cmp
out
fstp
(bad)
jmp
aaa
pop
jmp
fcomp
dec
jg
out
out
pop
pop
call
mov
cmp
(bad)
out
hlt
cs
or
jae
iret
test
mul
outs
shl
pop
out
sahf
out
dec
dec
add
lahf
repnz
add
fst
push
lahf
repz
clc
cmp
cli
in
clc
add
in
pop
into
push
sahf
hlt
or
xchg
paddusw
add
xor
sub
inc
into
add
mov
cmp
cmp
clc
xchg
in
loopne
das
loope
iret
out
inc
pop
out
push
out
scas
in
mov
stc
stos
push
clc
cli
cld
(bad)
sub
fmul
pop
call
scas
loopne
dec
sti
stos
out
cli
pushf
aas
fadd
into
retf
(bad)
cli
ror
cld
in
repnz
xlat
scas
into
and
retf
clc
(bad)
cmp
clc
(bad)
(bad)
cli
fild
ret
lock
std
adc
mov
mov
retf
xchg
rol
pusha
inc
dec
call
shl
push
mov
ror
pop
pop
pop
xchg
enter
leave
push
sbb
test
pop
jns
sbb
(bad)
jmp
dec
mov
add
mov
mov
in
call
pop
jmp
jns
dec
cli
cmp
lods
dec
or
cmp
mov
sahf
imul
std
dec
sbb
cmp
push
mov
sbb
rcl
scas
popf
cmp
out
mov
and
loope
mov
sub
add
jp
call
stos
popf
(bad)
mov
mov
xor
sub
mov
loop
dec
leave
dec
inc
inc
cmp
add
sti
in
lods
pop
xor
push
xchg
out
sbb
mov
or
adc
scas
sbb
ins
sub
in
xchg
cmps
fs
push
adc
sub
sbb
(bad)
fisubr
mov
fwait
(bad)
in
imul
dec
dec
jp
sub
stc
push
imul
jge
test
loope
fbld
inc
push
retf
es
outs
repnz
add
cmp
lea
lods
cmp
scas
push
mov
jecxz
nop
jne
dec
lods
jns
loop
out
loopne
push
fcmovnbe
sub
and
or
add
dec
cmp
mov
das
les
jns
mov
(bad)
sbb
adc
sub
retf
ds
call
scas
jl
mov
inc
sbb
fiadd
sub
ja
fld
test
pop
cmp
push
fistp
cmp
sahf
xor
push
sbb
add
add
cmc
add
adc
popa
stc
cdq
sbb
adc
xchg
push
mov
inc
ja
jl
popa
mov
inc
sbb
cs
push
push
call
fimul
push
es
and
loop
jmp
inc
(bad)
jne
pusha
shl
mov
sbb
neg
mov
sbb
(bad)
jge
and
jle
addr16
leave
and
cmp
push
cmp
stc
mul
xchg
loopne
out
push
add
push
cmps
pop
(bad)
out
les
clc
fild
outs
push
(bad)
aam
ss
jle
or
cmp
shl
jmp
xchg
cmp
hlt
xor
dec
push
jo
add
stos
adc
retf
test
adc
adc
fdiv
fwait
sbb
scas
pop
cmp
sub
(bad)
inc
stos
and
pop
mov
rol
test
pop
mov
xchg
pushf
xor
and
gs
(bad)
int
sub
jg
push
cdq
jo
dec
pop
jmp
jl
retf
mov
or
adc
scas
pop
test
and
lock
ret
push
dec
or
out
jp
clc
sbb
int3
inc
int
stos
mov
inc
out
sub
xlat
out
sub
and
inc
inc
push
mov
dec
mov
and
mov
arpl
jb
mov
mov
jmp
je
mov
jnp
jp
(bad)
or
jmp
sub
add
je
inc
push
retf
stos
sahf
lahf
jmp
cmp
sbb
jecxz
aam
jmp
mov
sahf
sbb
imul
out
pop
xor
fiadd
js
std
idiv
sbb
push
and
or
ins
or
out
aad
out
ja
inc
(bad)
(bad)
pop
lods
shl
int
mov
mov
mov
cmp
popa
mov
dec
adc
xor
and
test
sub
loope
pop
aaa
jmp
jae
jge
fist
sbb
mov
xchg
push
sahf
inc
(bad)
outs
lods
neg
pop
dec
jp
xchg
fwait
imul
dec
outs
jp
rcr
lock
mov
dec
(bad)
mov
add
xlat
adc
cld
lea
test
xor
leave
in
jle
cmp
lods
test
(bad)
cmp
cmc
xor
jp
xor
add
ret
(bad)
mov
jne
push
or
xchg
add
pop
ins
jp
pop
fdivr
mov
scas
add
cli
shl
xor
add
ins
cwde
or
fwait
push
(bad)
scas
jno
or
add
lods
jnp
pop
mov
dec
jno
pop
mov
loopne
mov
mov
mov
loopne
sbb
mov
sub
fild
sbb
ret
lds
pushf
psrlw
inc
lock
or
mov
add
in
arpl
leave
cmp
inc
and
add
add
mov
ret
fwait
dec
ins
mov
sub
int
loope
(bad)
arpl
xchg
jbe
movs
or
push
sub
push
clc
dec
dec
cmp
je
fsub
jmp
sub
cwde
jb
fldcw
rcl
cmp
jp
dec
in
data16
pop
mov
jl
cld
gs
cld
daa
mov
sahf
jno
adc
rcl
push
fwait
call
jmp
or
popa
pop
push
pop
inc
pop
sub
jbe
ret
xor
jns
fidiv
movs
xor
mov
add
or
jns
or
gs
jb
cmp
movs
and
xchg
call
je
xchg
jecxz
xchg
test
pop
loop
mov
inc
pop
ror
repz
rcl
(bad)
lea
mov
sbb
shl
and
movs
push
cld
inc
xchg
rcl
xchg
stos
in
add
or
inc
cmp
inc
adc
mov
push
mov
and
cwde
add
inc
add
xchg
xchg
cmps
pop
scas
retf
jbe
scas
push
mov
xor
add
xchg
cmp
imul
jne
outs
push
and
cmp
dec
mov
jl
lods
pop
fwait
test
mov
dec
sub
mov
jno
adc
pop
mov
mov
pop
popf
add
jecxz
les
(bad)
jmp
pop
cmp
nop
std
imul
inc
sbb
mov
jbe
fistp
inc
xchg
mov
fstp
mov
in
sub
and
mov
or
scas
pushf
in
bound
jmp
sbb
add
pusha
out
cmps
aaa
mov
cmp
mov
xchg
aaa
mov
push
int3
test
fdiv
add
(bad)
js
or
loop
mov
sbb
pop
int3
popa
adc
das
pop
fsub
rcr
or
adc
pop
pushf
inc
loopne
dec
pop
icebp
xchg
stos
cld
jecxz
push
jbe
push
into
push
and
cmp
push
mov
adc
jbe
mov
cmp
sbb
dec
inc
call
int
push
add
mov
jg
pop
and
jns
pusha
push
xor
loopne
add
ss
rep
imul
push
adc
xchg
cmp
imul
push
out
mov
test
leave
inc
(bad)
hlt
xchg
add
addr16
xchg
mov
cmp
(bad)
mov
movs
scas
das
pushf
in
repz
push
and
mov
push
ss
sbb
add
jbe
mov
mov
xchg
or
test
nop
mov
lods
add
push
jo
mov
fld
rcr
xchg
or
shl
fsubr
pop
sbb
neg
lock
pop
jo
jecxz
add
mov
retf
pop
fcomp
mov
mov
loopne
and
or
dec
sub
ja
jno
arpl
jo
icebp
or
fdivr
push
mov
fdivp
mov
in
ja
(bad)
adc
ror
jbe
jno
jmp
pop
cld
rcr
(bad)
in
cdq
inc
xor
pusha
or
clc
rcl
push
jne
daa
fld
dec
xlat
pop
shl
cmp
ret
jne
mov
add
jp
mov
cmc
lods
ja
jmp
daa
mov
stos
xor
push
movs
loopne
add
push
add
cmp
cdq
inc
idiv
addr16
push
ins
fs
mov
loope
repz
fs
sti
mov
jge
pushf
(bad)
shl
lods
jmp
aaa
test
loopne
icebp
or
cmp
mov
repnz
jo
push
fdivp
addr16
rol
push
cmc
xchg
jg
aam
mov
repnz
push
jg
hlt
inc
lahf
(bad)
in
sbb
jbe
mov
out
xchg
mov
out
mov
push
add
push
pop
sti
(bad)
inc
fdiv
std
jmp
mov
add
xlat
pop
cld
sti
ja
jns
xchg
cmps
add
nop
aas
leave
push
add
mov
push
xor
aas
nop
pop
or
xor
dec
nop
jl
cmps
cmp
cmp
enter
and
sub
jne
inc
jl
cmps
add
pushf
aaa
sbb
jbe
aaa
add
xlat
add
cdq
aaa
js
cmps
jbe
inc
or
adc
add
mov
adc
add
enter
test
movs
xchg
mov
icebp
daa
jnp
out
jae
jns
(bad)
je
(bad)
pop
sub
sub
daa
xchg
test
mov
xor
retf
dec
push
jne
xlat
add
mov
add
and
nop
add
clc
adc
sbb
sbb
sbb
fmul
ja
dec
mov
inc
push
or
sbb
mov
add
mov
stos
enter
pop
jnp
popa
mov
add
dec
or
push
sbb
jnp
jg
xlat
add
aaa
ja
test
cmps
push
je
loopne
adc
mov
or
xchg
mov
mov
sbb
dec
ror
cwde
xor
ja
mov
or
xchg
jne
enter
add
cwde
add
pusha
add
xor
mov
jae
(bad)
sbb
cwde
mov
mov
mov
je
fmul
pop
test
and
mov
sbb
stc
xlat
add
adc
xchg
inc
add
xchg
and
daa
add
stc
nop
dec
xchg
xchg
jnp
add
fnstenv
pop
nop
inc
add
sub
xchg
lock
cs
je
js
scas
call
ja
ja
nop
jg
xor
pop
nop
xor
adc
xchg
jno
add
leave
xchg
sbb
xchg
stc
xchg
xchg
or
xchg
pop
mov
fidivr
mov
(bad)
push
jns
outs
pop
xchg
jnp
sub
xchg
pop
inc
jbe
mov
inc
adc
jns
sub
xchg
pop
mov
cdq
xchg
pop
pop
xchg
lds
cdq
sbb
test
xlat
xchg
cmp
outs
(bad)
mov
daa
jle
cwde
xchg
mov
ja
call
in
xchg
sub
mov
test
imul
lea
xchg
cmp
sub
fwait
stos
cwde
xchg
stc
xlat
xchg
ja
xchg
pop
or
xchg
rol
push
xchg
cdq
cwde
xchg
fxch
jo
cmp
gs
pop
sbb
stc
mov
test
or
call
aaa
mov
pop
nop
add
mov
mov
js
mov
mov
xchg
addr16
xchg
ins
mov
arpl
xchg
es
xchg
dec
test
xor
out
cdq
pop
sub
mov
repz
jmp
lea
xchg
pop
pop
xchg
into
fcomp
mov
mov
in
mov
jns
out
imul
test
add
inc
lahf
mov
xchg
fs
mov
mov
outs
xchg
xchg
(bad)
pusha
test
add
outs
jmp
add
xchg
dec
jmp
xchg
cwde
sbb
inc
mov
pop
cwde
addr16
lahf
push
imul
mov
fsub
pop
fwait
jne
popf
and
mov
fcomp
inc
mov
test
sbb
dec
jns
pop
or
push
add
imul
cwde
sbb
pop
sbb
sahf
sar
dec
fwait
inc
sub
leave
xchg
pusha
imul
mov
mov
pop
dec
mov
sbb
fwait
inc
add
mov
ficom
or
leave
stos
scas
js
sbb
add
inc
sbb
or
leave
test
dec
or
shl
(bad)
lods
bound
add
stos
ror
pop
test
sbb
dec
stos
pop
imul
sbb
mov
test
xchg
inc
jmp
add
cdq
xchg
mov
xchg
push
sub
push
shr
push
xchg
push
fist
pop
pop
movs
sub
fst
dec
jbe
sbb
stos
punpckhwd
imul
clc
call
stos
test
mov
or
call
test
push
fldenv
test
sub
pop
mov
add
sbb
pop
add
add
mov
mov
add
lahf
and
mov
mov
dec
scas
pop
sub
mov
sbb
add
mov
imul
cwde
adc
xchg
popa
and
(bad)
xchg
aas
mov
xor
add
sbb
jmp
pushf
call
mov
adc
sbb
leave
mov
(bad)
sub
repz
sub
sub
(bad)
fnstenv
sbb
or
mov
(bad)
or
mov
jnp
mov
mov
sbb
jnp
(bad)
test
mov
cmp
cwde
out
mov
jnp
test
out
jmp
inc
test
sti
shl
xchg
outs
xor
sahf
cli
add
add
dec
mov
dec
mov
fld
shr
push
add
jnp
lods
mov
mov
mov
mov
dec
mov
lods
rcr
mov
or
or
cs
mov
fcmovnb
xchg
sub
jnp
fimul
je
lahf
(bad)
sbb
test
xchg
sbb
inc
add
add
rcr
daa
pushf
or
mov
xchg
leave
mov
dec
mov
jmp
dec
xchg
fidivr
popf
lods
shr
and
xchg
cld
cmp
jmp
into
jmp
pushf
and
sub
leave
(bad)
jns
jo
test
fcmove
in
retf
add
retf
retf
ret
xchg
mov
mov
inc
pop
retf
push
jmp
pop
lods
mov
jmp
clc
or
fucomp
lds
jl
ja
les
mov
fadd
rol
jmp
int3
call
in
into
fsubr
aas
jp
xchg
cdq
xchg
lahf
or
and
lods
jge
ret
fwait
clc
sub
ret
cmp
sbb
out
cld
(bad)
ror
stos
loope
int
test
int
push
ss
lds
jl
sbb
mov
adc
into
mov
or
in
mov
int3
iret
pop
pushf
mov
fadd
push
jmp
lahf
jl
or
lods
shl
or
adc
or
push
iret
iret
or
pop
add
retf
push
inc
cmp
in
mov
mov
stos
in
lahf
in
lods
shl
into
jbe
mov
ins
(bad)
cld
fadd
(bad)
jl
jns
aad
cmp
int3
jmp
push
(bad)
neg
jmp
jmp
movs
xchg
pop
int
fadd
(bad)
popf
aam
mov
sbb
pushf
(bad)
dec
jge
jbe
fadd
leave
test
mov
sbb
xlat
push
ror
stos
imul
pushf
(bad)
jmp
shl
stos
test
pop
mov
jnp
xor
add
nop
fimul
fcom
mov
mov
and
fiadd
into
(bad)
imul
pop
ret
inc
inc
lock
mov
arpl
jle
(bad)
rcl
retf
(bad)
int3
ins
iret
or
xchg
or
(bad)
std
(bad)
stc
in
into
icebp
int
(bad)
lods
iret
je
into
sub
fdiv
dec
sar
xchg
dec
aad
popf
aad
sbb
idiv
dec
fdiv
fistp
(bad)
jge
in
loopne
pushf
mov
sub
call
fisubr
fisub
leave
aam
loopne
std
into
test
push
xlat
test
add
loopne
dec
loopne
retf
popf
aad
jmp
and
fstp
(bad)
call
loop
jle
neg
push
into
and
loop
std
fnstcw
in
or
sub
iret
pusha
jle
mov
(bad)
cld
or
in
fst
loopne
(bad)
sar
(bad)
mov
loope
dec
(bad)
add
fdivr
iret
and
aas
(bad)
push
push
loopne
push
out
pop
into
xor
jmp
call
(bad)
aam
jle
add
in
pop
out
jle
test
fnstenv
fisttp
call
pop
add
addr16
jmp
aad
out
scas
aam
cmp
sbb
xchg
std
call
ror
loopne
mov
out
mov
sub
push
bound
pop
pop
jmp
mov
in
push
loopne
(bad)
(bad)
lock
jmp
dec
scas
(bad)
data16
jmp
mov
jmp
dec
out
int
call
scas
mov
push
fiadd
call
sahf
out
into
jmp
ins
dec
out
push
lahf
jecxz
faddp
nop
push
out
out
push
add
repnz
into
cli
dec
out
sbb
jmp
dec
fnstsw
add
sahf
out
adc
add
fldcw
add
jmp
push
pop
push
aam
out
push
inc
xor
outs
out
call
in
dec
sbb
mov
loopne
mov
cmp
out
out
repz
ret
std
jp
ja
iret
(bad)
mov
cmp
hlt
push
das
bnd
mov
out
repnz
iret
jmp
fdivp
hlt
outs
test
in
aas
cmc
nop
repz
jecxz
jg
fs
out
ds
dec
jmp
mov
in
mov
in
outs
std
in
dec
out
dec
jmp
jg
or
icebp
arpl
loop
clc
xchg
out
imul
stc
(bad)
cld
fmul
iret
sahf
dec
leave
ins
mov
call
aas
hlt
(bad)
test
xchg
mov
jl
mov
fild
iret
div
cli
mov
cld
nop
mov
js
iret
fs
sti
test
out
(bad)
in
xchg
(bad)
retf
dec
scas
outs
repnz
repz
(bad)
(bad)
pop
std
fmul
or
stc
out
cli
fistp
stc
mov
(bad)
out
jns
std
jb
(bad)
in
cli
pop
iret
cld
inc
cs
int
dec
sub
dec
add
lea
mov
dec
pop
cdq
pop
add
nop
test
popf
sub
cmps
cmps
mov
mov
add
test
mov
mov
xchg
int
mov
ret
pop
retf
jbe
aad
retf
xchg
fistp
into
xchg
mov
(bad)
ffreep
xchg
sti
sub
cdq
adc
cdq
cmp
adc
mov
ds
out
add
rcl
mov
or
das
pop
lds
outs
pop
movs
push
or
push
jl
mov
arpl
pop
fstp
das
xor
(bad)
in
jl
mov
pop
aaa
ja
in
aad
clc
iret
pop
xchg
push
push
add
sahf
dec
dec
lock
jp
jbe
jecxz
mov
shr
cmp
or
pop
push
std
adc
mov
xor
jecxz
pushf
(bad)
call
lock
aam
pop
mov
sbb
jnp
mov
retf
xchg
fbstp
inc
cwde
out
nop
mov
(bad)
loop
or
fsubr
lods
fwait
rcr
fistp
jb
stos
dec
(bad)
dec
popf
cmc
cli
fldcw
lods
xchg
imul
cmps
xor
inc
scas
into
xor
push
dec
fprem1
scas
iret
cmps
fwait
ror
mov
mov
sbb
pop
dec
xchg
mov
leave
pop
jmp
pushf
jle
add
loop
loope
xchg
cmp
aam
push
lahf
push
mov
fwait
cmp
in
adc
cmp
pop
inc
mov
not
stc
icebp
addr16
jl
xor
mov
pop
pop
lock
adc
cmp
es
rcr
or
cmp
adc
inc
pop
jp
hlt
xor
fadd
add
or
sbb
and
xor
or
add
enter
xchg
loop
pop
ret
xchg
inc
xchg
fcom
xchg
and
test
pusha
cwde
xchg
add
xchg
inc
xchg
clc
cdq
inc
mov
pusha
xchg
inc
add
adc
jns
pop
imul
cmps
jl
rcr
fwait
(bad)
stc
cld
cdq
or
mov
push
dec
jo
add
aaa
cmp
test
push
jo
adc
and
gs
mov
sbb
lods
add
stos
jmp
scas
out
mov
cmp
imul
shl
xchg
nop
imul
mov
jmp
mov
push
dec
outs
jle
ins
sti
jmp
mov
fld
out
stos
mov
bound
out
xlat
push
mov
push
xchg
pop
sub
stos
ret
mov
sahf
test
cs
dec
push
mov
and
scas
push
nop
xor
mov
or
xor
mov
mov
push
and
int3
int3
ds
out
mov
adc
xchg
fwait
pop
sbb
add
inc
adc
adc
rol
add
inc
rcr
push
int
rcl
ret
dec
addr16
mov
pop
mov
test
pop
fnsave
or
enter
sub
int
shr
(bad)
out
jb
call
js
jne
or
daa
or
fsubr
pop
sbb
add
push
aas
push
and
mov
add
adc
xchg
or
ds
adc
cmp
sbb
mov
call
add
addr16
add
fidivr
push
outs
jmp
mov
cmp
pop
push
push
cmp
(bad)
fwait
in
out
mov
pop
adc
cmp
into
dec
dec
adc
pop
imul
aam
push
das
std
fdiv
dec
cmp
mov
push
out
xchg
mov
(bad)
cmp
aad
test
hlt
or
jp
mov
jmp
cmp
push
jno
jecxz
(bad)
(bad)
push
cs
cdq
popa
and
pop
inc
out
push
shr
pop
adc
and
and
das
jge
mov
inc
push
inc
sahf
pop
aaa
cmp
add
call
sub
add
add
and
movs
adc
and
xchg
fsub
push
sub
inc
jecxz
mov
cmp
mov
sub
adc
add
add
adc
jge
sbb
push
lods
xor
mov
ds
mov
test
mov
inc
shl
mov
arpl
fisubr
imul
mov
jo
test
adc
nop
dec
fwait
add
sub
inc
test
repnz
jne
popa
add
inc
xor
mov
add
and
or
push
lods
hlt
and
add
push
mov
push
or
inc
into
adc
arpl
mov
sar
or
sbb
fld
rcr
xchg
lds
xor
or
ror
xchg
int
div
das
sbb
(bad)
xor
xlat
leave
into
ins
mov
popf
lock
cmp
cmp
retf
fisub
jge
repz
jmp
daa
inc
pop
dec
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
dec
loopne
push
lea
stos
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
in
mov
rol
jno
pop
test
ss
stos
aas
call
add
or
pop
xchg
mov
gs
sti
push
into
mov
mov
sub
xor
aam
out
stos
pushf
movs
sub
test
xor
and
add
lahf
sub
test
mov
int3
mov
cs
dec
fcmovnu
rcl
gs
fstp
cli
push
mov
outs
or
push
xchg
mov
adc
fcmovnbe
push
xchg
or
int
adc
fild
mov
add
pop
and
icebp
sbb
fcom
test
cmp
pusha
and
mov
mov
ror
rcr
js
xchg
int
sub
pop
pop
cmp
mov
icebp
sti
fimul
adc
or
add
push
mov
mov
imul
add
mov
jae
and
or
mov
push
jo
jg
pop
and
xor
sub
dec
stc
mov
add
lods
pusha
test
(bad)
jb
fisttp
(bad)
aas
inc
add
mov
and
retf
lock
pushf
jns
dec
(bad)
xor
mov
lds
ror
inc
add
cld
loopne
dec
push
in
loopne
mov
and
retf
scas
mov
or
ret
ins
jg
dec
pop
push
arpl
mov
sub
pop
sub
aam
and
push
stos
cmp
aaa
inc
scas
nop
mov
pop
mov
mov
sbb
loopne
pop
cwde
iret
daa
mov
fild
xchg
and
gs
ins
jle
sub
or
jns
adc
cmps
pop
fsub
call
xchg
cmps
mov
lods
cld
aam
xchg
ja
jg
jb
test
repz
outs
xchg
or
or
mov
loopne
idiv
mov
scas
ins
mov
mov
rcl
dec
hlt
stos
xchg
std
push
and
pushf
xlat
aad
pop
inc
or
rcl
xor
(bad)
loop
fistp
imul
das
jno
pop
jge
sub
mov
addr16
and
dec
cwde
jne
pop
sahf
out
sbb
jg
lods
(bad)
mov
sub
(bad)
(bad)
jl
dec
scas
ss
movs
mov
(bad)
cmp
dec
test
(bad)
out
cmp
fadd
test
mov
xlat
outs
mov
mov
push
jns
fsubr
fdivr
sti
mov
into
mul
pop
ins
jg
push
neg
mov
push
and
repz
and
ins
cmp
xor
icebp
xchg
or
loope
jmp
push
cmp
sti
push
sbb
mov
push
mov
mov
pop
mov
xlat
clc
in
imul
std
and
pop
aaa
mov
gs
bound
das
scas
(bad)
std
nop
sbb
sti
retf
and
xor
outs
(bad)
push
ins
ins
xor
call
stc
pop
jecxz
sbb
movs
(bad)
mov
enter
add
cmp
js
jle
inc
mov
adc
mov
daa
aaa
jno
outs
jbe
ret
fmul
pop
ja
mov
push
xchg
ins
scas
imul
and
jp
mov
inc
xchg
add
addr16
mov
jg
add
mov
ja
popa
loope
pusha
test
and
jno
jne
xchg
daa
push
jbe
in
outs
aam
and
pop
ja
imul
mov
cmp
add
fdivr
addr16
div
push
pop
push
sub
add
fidiv
adc
add
jb
mov
cmp
adc
jge
lock
out
cmc
out
inc
cwde
add
adc
inc
clc
jle
js
xor
addr16
lds
xlat
mov
and
jg
inc
add
jno
out
pop
push
fs
xchg
popa
or
jnp
jbe
sbb
jle
inc
mov
mov
test
push
ins
or
push
jb
mov
xor
mov
add
jge
dec
jge
sbb
pop
pop
outs
mov
fbld
sub
push
(bad)
jae
push
mov
data16
pop
push
and
arpl
test
test
mov
bound
int3
sbb
test
div
mov
mov
xchg
jae
push
(bad)
shr
fmul
ret
mov
(bad)
jb
test
or
ja
xchg
cmp
enter
push
mov
rcr
jmp
outs
cmp
add
mov
cwde
adc
bound
inc
(bad)
mov
xor
pop
gs
pop
lea
push
cmc
jl
xlat
jbe
sub
(bad)
cmps
outs
dec
xlat
bound
ins
loop
js
es
arpl
pop
mov
pop
ins
sub
mov
jg
es
mov
jne
xchg
pop
sti
push
jg
mov
mov
popa
xor
outs
scas
xor
jb
xchg
or
jle
addr16
mov
inc
or
pop
mov
jle
test
std
lds
add
div
mov
push
jns
mov
or
cmc
jo
clc
jge
push
outs
add
mov
xchg
test
mov
mov
jnp
js
inc
inc
xchg
jmp
and
data16
out
(bad)
pop
mov
pop
inc
dec
imul
pop
xchg
xor
cmp
(bad)
xchg
mov
outs
dec
aaa
jns
imul
push
jns
cmp
mov
adc
jns
mov
cmp
mov
mov
jno
inc
jp
push
xchg
aaa
pusha
test
je
push
gs
jg
(bad)
add
mov
jne
xchg
jno
inc
(bad)
test
push
ss
pushf
lea
fisttp
xor
jnp
js
xor
and
fwait
xchg
addr16
cdq
xchg
jg
mov
leave
je
aad
add
ja
pop
mov
pop
xchg
push
and
pop
push
xchg
push
mov
adc
popf
scas
(bad)
pushf
pop
out
aas
pusha
arpl
outs
pop
nop
stc
movs
pop
or
xchg
jnp
je
push
popa
scas
push
(bad)
fisttp
xchg
(bad)
in
xchg
mov
mov
jg
xchg
push
push
mov
es
jns
jne
out
or
pop
push
xchg
push
ss
push
gs
push
pop
jg
inc
mov
and
pop
adc
push
mov
mov
(bad)
jp
add
add
cmps
xchg
dec
jo
jne
cmps
test
xchg
mov
mov
test
cli
test
sbb
pop
test
call
test
retf
add
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
mov
push
push
push
ins
push
xchg
xchg
xchg
jl
jl
rcl
sbb
sbb
stos
lods
hlt
repnz
cmp
cmp
push
or
sub
pop
pop
xchg
call
add
data16
adc
outs
ins
test
mov
lods
inc
ds
cs
dec
dec
int3
retf
jbe
in
jmp
xchg
(bad)
fdivr
cli
cld
fs
pop
or
adc
push
add
data16
adc
cmps
movs
je
je
ss
push
pop
ins
outs
ins
jl
jl
push
and
scas
lods
cmp
cmp
cs
call
mov
(bad)
mov
es
cmps
movs
in
in
ss
or
mov
push
push
push
xchg
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
jle
mov
mov
ds
xor
xor
dec
dec
int3
into
int3
in
out
in
mov
pushf
(bad)
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
jbe
ins
outs
je
jle
lods
scas
mov
ds
sub
xor
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
dec
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
popa
xchg
nop
xlat
inc
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
mov
int3
jl
jno
jl
jb
ss
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
pop
pop
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
das
test
xchg
pop
mov
jbe
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
sbb
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
mov
(bad)
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcl
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
test
pop
in
push
jl
push
aas
mov
pop
in
shl
std
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
data16
add
add
jp
outs
or
xor
call
lods
pop
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
cli
add
dec
stos
pop
rcl
sub
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
add
sbb
cmp
lods
sub
and
movs
ret
les
shr
sub
mov
mov
inc
mov
mov
stos
lods
jg
mov
retf
pop
mov
sub
push
dec
lock
daa
retf
add
lods
sub
cmps
out
xchg
jb
test
call
mov
rol
pusha
add
jnp
sub
mov
jmp
inc
dec
mov
and
jmp
mov
stos
cmp
add
mov
call
mov
or
dec
add
pop
mov
retf
scas
add
popf
jnp
mov
sti
mov
pop
mov
imul
mov
pop
mov
xchg
dec
or
push
pop
shl
jo
pop
imul
push
scas
fucomip
mov
sar
jnp
popa
stos
mov
jmp
jo
mov
sub
mov
lock
mov
jnp
in
ja
nop
mov
fwait
mov
dec
lods
mov
mov
sbb
mov
pop
mov
jmp
daa
mov
xchg
imul
dec
rol
fwait
add
scas
xchg
dec
add
mov
xor
leave
mov
jo
popf
fwait
mov
imul
sti
mov
stos
add
dec
mov
jmp
hlt
cmp
sbb
or
jnp
add
add
shl
mov
or
stos
repnz
rcl
mov
jnp
mov
mov
mov
lock
add
ret
cmp
ret
ds
ret
cmp
add
add
add
ret
inc
lods
xchg
les
ret
inc
jl
xor
les
add
add
cld
scas
inc
inc
mov
or
push
mov
cld
(bad)
mov
add
les
jo
pop
rol
ins
add
add
sbb
out
call
test
or
jp
les
les
les
(bad)
dec
int3
enter
push
inc
leave
inc
jl
(bad)
pop
enter
mov
add
add
pop
add
add
pop
add
leave
mov
retf
retf
add
inc
add
nop
retf
retf
or
inc
stos
add
ins
add
xchg
retf
add
lods
xchg
retf
int3
add
retf
retf
int
mov
retf
out
or
(bad)
pop
ret
fld
mov
sub
cmp
xchg
fsubr
cmps
mov
mov
int3
or
xor
add
or
fmul
mov
into
mov
into
stc
stos
retf
movs
sub
movs
dec
stos
push
loopne
enter
sbb
shr
add
add
ror
(bad)
lods
add
or
adc
movs
cld
add
lods
shl
rcr
int
(bad)
sbb
leave
ins
shl
cmp
xor
mov
sar
rol
mov
inc
or
out
push
push
cmp
and
inc
(bad)
rol
xor
lds
int
sub
int3
mov
movs
push
sub
and
add
rol
std
add
rcr
retf
sbb
push
loopne
and
shl
int3
and
sbb
cmp
dec
cmp
js
ins
(bad)
cmp
stos
add
xlat
rcr
ror
mov
mov
sbb
popf
(bad)
adc
(bad)
xchg
lods
add
jge
jb
shl
int3
(bad)
ins
fldenv
fldenv
aad
dec
aam
pop
sar
mov
fwait
int
pop
std
shr
rol
fiadd
imul
or
ror
fst
and
mov
int3
cmp
dec
jge
push
rcr
(bad)
sub
jge
(bad)
xchg
sbb
aam
aad
sub
stos
dec
rol
or
push
and
cs
fstp
shl
fcomp
(bad)
sub
fnstcw
dec
mov
xchg
ins
rol
or
ror
mov
mov
shl
std
pop
fcmovnbe
cmp
adc
loopne
popf
aad
cmp
pop
or
or
loop
(bad)
sahf
shl
lods
retf
or
ss
cs
or
jae
fisttp
sar
loope
sub
push
pop
fild
sbb
fldcw
push
rol
fucomp
lods
fistp
out
loopne
pop
fcmove
fstp
and
sar
sub
stos
dec
out
add
(bad)
and
loop
lods
add
mov
les
(bad)
jge
cmp
ror
loop
push
sar
mov
ins
sahf
aad
into
jecxz
push
retf
outs
push
aam
(bad)
out
dec
fimul
scas
out
and
imul
(bad)
shl
or
dec
sbb
mov
loope
int
mov
jecxz
cld
ficom
aad
outs
int3
(bad)
std
jmp
ror
jecxz
add
fdivr
sbb
test
fbstp
fcom
call
outs
fild
call
sub
lea
jmp
(bad)
mov
fisttp
pop
call
ins
add
shr
fisubr
scas
jecxz
scas
fimul
jmp
push
rol
in
ds
mov
(bad)
out
call
mov
cmp
(bad)
mov
cmp
fisub
out
push
ds
(bad)
aam
dec
out
xor
loopne
pop
out
dec
int
(bad)
sahf
jmp
into
into
iret
lea
(bad)
movs
std
in
cs
sbb
out
fidivr
icebp
adc
loope
mov
add
pop
or
jmp
in
lods
icebp
jmp
sahf
out
jmp
repz
fisubr
sahf
repz
popf
in
out
fst
stos
pop
inc
(bad)
nop
jge
jo
hlt
in
scas
fdiv
hlt
mov
add
push
pandn
gs
bnd
add
out
mov
xlat
jecxz
out
outs
icebp
sub
fisub
ins
cmc
mov
loope
mov
(bad)
mov
inc
jge
sti
sahf
(bad)
loop
scas
icebp
das
push
aad
ds
jo
rol
(bad)
in
add
out
mov
mul
iret
out
ds
jl
jne
in
sub
adc
mov
cmc
and
out
sub
add
hlt
mov
add
(bad)
call
das
loope
outs
rcl
stos
sub
add
scas
ficomp
shr
clc
(bad)
dec
idiv
sahf
sti
or
stos
sub
add
cmc
in
push
cli
ret
mov
cld
(bad)
fild
xor
sbb
cli
popf
lahf
std
pop
pmaddwd
neg
psubb
jmp
(bad)
add
loop
jle
jge
hlt
dec
fs
mov
(bad)
aas
jg
inc
jmp
scas
out
retf
cld
sbb
xor
fs
mov
loope
enter
pop
call
mov
test
mov
pop
mov
mov
retf
and
jmp
pop
dec
call
retf
xchg
push
test
jo
in
dec
pop
push
dec
or
lods
fsub
call
retf
stos
in
adc
leave
in
mov
js
or
out
int3
mov
clc
rcl
aas
sbb
push
lods
push
xchg
pop
xor
and
cmp
std
xor
loope
jno
sbb
mov
pop
js
sbb
mov
je
xor
int3
xchg
retf
sub
ja
xchg
and
xchg
push
xor
ins
clc
icebp
movs
dec
cwde
mov
out
mov
adc
mov
inc
movs
mov
je
sbb
scas
xchg
test
mov
mov
mov
int
enter
test
mov
jmp
movs
inc
add
xor
sub
in
push
mov
gs
dec
push
lods
rcr
dec
bound
push
std
xor
scas
push
lods
pop
xlat
test
xor
mov
loopne
nop
sub
xchg
xchg
in
xor
pop
aas
pop
cmp
retf
scas
inc
shl
out
sub
fisub
out
adc
sub
fwait
and
aas
cmp
pusha
jge
jbe
mov
jo
inc
fmul
les
ret
mov
enter
jge
in
push
pusha
repz
mov
gs
in
push
add
fs
test
imul
pusha
inc
retf
xchg
pop
cmps
test
pop
sub
out
or
or
ret
or
dec
xor
es
xchg
test
mov
adc
add
mov
dec
push
and
dec
test
or
push
jb
sub
inc
int3
ja
jp
jl
shl
mov
pop
cdq
add
loope
das
inc
fcom
nop
mov
jo
xor
mov
int3
bound
mov
push
xlat
and
test
mov
push
inc
pop
sbb
adc
xchg
xchg
jb
jns
and
xlat
ficomp
test
ins
push
test
adc
cwde
pusha
push
xchg
outs
push
jmp
movs
stos
adc
jbe
popa
and
xor
daa
and
mov
mov
ss
jge
out
jns
lods
mov
mov
mov
adc
add
and
aam
daa
lods
jb
mov
inc
add
mov
mov
pop
and
das
sahf
mov
inc
bound
mov
push
stc
push
mov
test
mov
fsubr
sbb
inc
(bad)
fidivr
scas
add
jp
scas
dec
sbb
fwait
outs
iret
data16
call
sub
inc
and
push
arpl
lods
xchg
add
sbb
mov
test
in
pushf
movs
xchg
test
test
inc
mov
or
nop
test
jnp
stos
push
xor
movs
mov
mov
jbe
add
fldcw
movs
mov
movs
and
daa
dec
ins
inc
adc
xchg
or
mov
or
shr
in
push
cmp
(bad)
push
add
mov
jnp
int
fstp
test
out
out
xchg
test
and
shr
cmc
jae
sbb
cmp
adc
mov
in
mov
sti
(bad)
jne
or
pusha
jg
jae
mov
or
mov
fdivp
fistp
mov
js
retf
mov
mov
adc
mov
xchg
mov
mov
pop
in
cmp
movq
aad
xchg
ret
mov
daa
mov
mov
stc
int
test
xor
push
add
fimul
push
dec
cmps
mov
push
sub
add
(bad)
mov
mov
sahf
inc
fdiv
mov
push
cs
jnp
adc
lods
jo
sbb
pop
ror
lods
xchg
int3
or
adc
mov
mov
jp
ret
into
lds
lock
aaa
ret
adc
mov
sbb
ror
pop
nop
cmp
mov
and
mov
jo
push
adc
add
push
jnp
cdq
mov
xor
xchg
jns
mov
fistp
add
add
test
loopne
shl
mov
sbb
mov
sbb
mov
adc
(bad)
cmp
in
xor
sbb
mov
ror
push
(bad)
or
push
not
(bad)
hlt
pop
dec
mov
sbb
inc
into
(bad)
or
iret
je
enter
cwde
int3
and
dec
xchg
loop
pushf
mov
xchg
pop
das
mov
push
cdq
push
cmp
jmp
call
push
ins
adc
pop
enter
xchg
xchg
test
data16
call
shl
fwait
sub
mov
add
jg
repz
and
fadd
retf
popf
sbb
cmc
mov
adc
aas
mov
add
data16
cmp
dec
jae
ss
dec
test
in
movs
add
lds
push
iret
cmps
int3
addr16
mov
pop
dec
inc
cmp
push
das
movs
dec
dec
sub
icebp
pop
dec
adc
adc
adc
(bad)
div
fnsave
cdq
in
bound
jmp
ds
push
jno
cli
cld
sub
(bad)
out
je
pop
popf
iret
adc
push
fimul
xchg
gs
push
xchg
mov
pusha
dec
and
out
popa
mov
inc
aad
xchg
movs
movs
cld
mov
cmp
mov
leave
inc
push
nop
pushf
das
std
imul
and
push
ficom
push
add
inc
adc
push
fmul
gs
in
retf
xchg
push
xchg
sar
loope
cdq
call
dec
cs
or
cmp
cli
push
mov
mov
bound
scas
push
and
jno
scas
sub
(bad)
sahf
cmp
mov
cmp
into
add
pusha
gs
push
in
xchg
pop
jl
dec
retf
mov
mov
inc
cs
out
fdiv
jo
dec
movs
cmp
fisubr
pop
sbb
push
jnp
shr
loop
lahf
clc
mov
sub
loop
pop
(bad)
cmc
mov
retf
push
inc
and
add
int
xchg
mov
pop
cmp
or
cdq
lds
jmp
ret
mov
cdq
nop
jecxz
in
mov
and
(bad)
neg
mov
cdq
nop
(bad)
in
mov
push
into
ins
call
retf
cmc
in
movups
in
scas
cmp
mov
adc
xchg
or
cmp
clc
mov
iret
pop
push
xor
push
enter
adc
cld
je
cwde
xchg
add
test
cmp
adc
ins
out
mov
jb
adc
loope
jae
jno
(bad)
sbb
xchg
jp
test
pushf
stos
mov
fs
inc
cs
sbb
cli
cmps
and
cmp
sahf
fdiv
(bad)
jmp
sbb
cs
mov
int
fcom
clc
(bad)
scas
call
or
or
pop
jne
sbb
push
aam
ficomp
ror
add
rcr
add
pop
cmp
cld
enter
mov
xchg
cmp
adc
hlt
adc
add
inc
dec
or
ds
sbb
ja
pop
in
dec
xor
pop
shl
daa
pop
pop
mov
jns
xchg
in
ins
xchg
inc
sbb
lock
and
jb
imul
cmp
repz
mov
add
inc
lock
fdivr
xchg
mov
jmp
sbb
lods
inc
mov
iret
pop
or
dec
popf
jmp
bnd
mov
adc
retf
repz
jmp
mov
addr16
or
in
jl
jne
cmps
rcr
and
das
cld
mov
mov
and
loope
adc
sahf
jge
mov
mov
ja
loop
scas
jns
pop
ror
cmp
push
or
addr16
out
jp
(bad)
fisubr
addr16
jmp
les
jmp
adc
sahf
repz
jg
out
(bad)
js
push
add
nop
jae
loop
jle
jecxz
fiadd
cmps
mov
jmp
or
call
jge
mov
mov
(bad)
sbb
popf
cmp
repz
pop
lock
call
add
in
cmp
popf
jle
hlt
out
xchg
push
ja
pop
jp
(bad)
jns
loopne
test
ss
mov
ja
push
jle
enter
jp
mov
fwait
xchg
jl
dec
sbb
sahf
inc
jle
daa
xor
jecxz
add
mov
xor
cmp
add
inc
add
loopne
aaa
cwde
cmp
xor
add
jle
clc
inc
add
sbb
push
aaa
enter
cmp
jo
sub
je
sbb
pop
jnp
push
xor
test
pop
jg
xlat
jnp
cwde
ja
enter
push
les
jnp
clc
cmp
inc
mov
inc
inc
dec
test
add
add
mov
nop
sbb
jns
xlat
jg
idiv
xchg
cmp
or
xchg
ja
test
mov
mov
adc
mov
xchg
ja
test
push
add
mov
leave
mov
jle
daa
sub
mov
mov
sub
mov
add
call
rcr
cmps
xchg
add
ret
mov
adc
mov
or
mov
test
jle
out
fmul
fdivrp
mov
clc
xchg
out
daa
mov
clc
ja
cmps
xchg
jl
cmps
add
dec
add
js
mov
test
call
mov
add
enter
add
out
or
mov
dec
in
mov
push
mov
xchg
fwait
test
pop
loopne
push
test
mov
aaa
daa
lea
add
jo
call
mov
jns
xchg
add
push
inc
fadd
sub
nop
xchg
add
add
mov
adc
add
pop
test
daa
fadd
adc
xchg
adc
dec
adc
jecxz
add
cmp
and
bound
in
xchg
scas
mov
pop
mov
pop
jl
sub
jbe
pop
mov
test
mov
nop
push
dec
(bad)
fwait
js
sub
xchg
fwait
dec
xchg
and
pop
mov
psubw
cdq
addr16
pop
test
or
mov
test
add
ds
xchg
cmps
leave
jns
jmp
jnp
add
mov
xor
test
cmp
fld
cwde
cwde
in
mov
ja
sub
cmp
cwde
xchg
or
fadd
mov
imul
js
dec
xchg
cmp
(bad)
sbb
or
fwait
add
imul
or
stc
xchg
or
add
sahf
pop
test
and
mov
clc
sub
pop
or
into
dec
cwde
pop
fiadd
and
nop
(bad)
inc
lods
gs
pop
clc
fwait
test
mov
or
pop
call
lods
jns
pop
jmp
dec
xor
jns
dec
jnp
aaa
sahf
sub
xor
sbb
or
pop
js
dec
xchg
ins
or
or
pop
popf
sbb
xchg
cmp
test
cmp
dec
jp
aas
cmp
sub
jns
mov
scas
clc
pop
push
leave
movs
sbb
pop
and
mov
xchg
cwde
pop
mov
sub
cmp
daa
jns
test
xchg
jmp
mov
pusha
jo
xchg
aas
and
add
pusha
cli
lahf
and
ja
xchg
adc
xchg
aaa
pop
sub
jp
fmul
mov
cmp
xchg
test
xchg
pop
jo
cdq
cli
fstp
fstp
dec
(bad)
and
add
scas
mov
add
or
sub
fcomp
jo
add
movs
mov
mov
sbb
cdq
xchg
push
sub
sub
sbb
mov
cli
xchg
sub
add
jmp
jp
clc
stos
xchg
or
scas
cli
imul
call
xor
mov
dec
cdq
push
test
adc
cmps
(bad)
call
add
add
pop
mov
cmp
mov
adc
xchg
xor
mov
sbb
clc
mov
adc
in
or
mov
mov
enter
mov
or
fnstenv
mov
cs
(bad)
cmp
mov
pop
xchg
fcmovu
fwait
inc
stos
mov
push
mov
mov
cmp
or
sar
sub
sub
add
jmp
mov
stos
mov
inc
test
imul
xchg
int
mov
ficomp
mov
rcr
sti
xchg
(bad)
add
sbb
fcmovnu
mov
mov
mov
fld
adc
inc
nop
mov
sub
xor
out
or
pop
cmps
int3
fwait
mov
pop
movs
fisttp
lock
cld
sar
movs
test
clc
cmp
retf
pushf
test
sub
adc
jp
in
sti
mov
mov
jnp
cmps
jnp
sbb
(bad)
jnp
loop
mov
jmp
pushf
fmul
mov
sbb
retf
mov
push
mov
jl
jbe
add
and
pop
sbb
cmps
loop
add
and
in
stos
cld
jnp
pop
cld
ret
pop
jmp
jae
cmps
dec
lock
mov
cmp
pop
test
mov
pop
lods
pop
jbe
shl
push
dec
(bad)
adc
mov
or
fld
retf
adc
enter
std
pop
test
pushf
mov
stos
leave
jb
enter
int
mov
mov
sub
jae
add
mov
mov
lds
rol
movs
ins
movs
push
sub
ret
cmp
mov
mov
call
push
lods
enter
xor
retf
fs
int
cmps
(bad)
jnp
loop
into
push
into
test
inc
cdq
dec
shr
pop
fld
bswap
mov
cmp
aas
and
daa
dec
add
sbb
int
(bad)
out
xchg
(bad)
sub
jne
xchg
or
shr
xor
mov
cmp
mov
test
lds
into
and
(bad)
sub
rcl
jmp
mov
std
enter
mov
mov
pushf
call
cmp
ror
shr
cmp
pop
pop
rcl
dec
retf
push
in
and
and
std
sub
in
(bad)
push
mov
test
and
mov
cld
into
and
cmps
inc
inc
add
pushf
sar
popf
xchg
iret
(bad)
in
int3
mov
ror
iret
adc
cli
or
into
sbb
adc
shl
mov
cmp
xchg
fst
pop
jl
std
fcomp
scas
or
sub
add
shl
fst
xlat
xor
jbe
ror
iret
cmps
mov
cmp
rcr
ror
jl
cmps
lods
enter
xchg
jns
rcr
stc
sbb
xor
xchg
xchg
std
mov
lods
fcmove
dec
xlat
stc
fcomp
scas
jb
lods
mov
xor
rcr
rcr
(bad)
pop
push
add
xor
(bad)
cmps
in
mov
add
cdq
cmp
aaa
lods
aad
ins
fld
loopne
fld
inc
lock
cmp
jae
(bad)
jl
mov
loopne
popf
shl
cmp
(bad)
pop
fld
iret
vpsraw
(bad)
popf
fabs
ins
shr
aad
sub
push
shr
(bad)
cld
pop
loopne
dec
retf
stos
ins
jecxz
jge
sbb
iret
dec
sbb
and
mov
imul
push
stos
iret
cli
cmp
loopne
in
int
stos
dec
fidivr
fisttp
ror
scas
xor
fdiv
sti
ins
fidivr
out
mov
lods
(bad)
popf
lods
cmp
das
mov
stos
cmp
fdivr
fidivr
or
outs
ficom
loop
pop
fbstp
ins
(bad)
iret
or
add
into
loope
pushf
lods
cmps
in
shr
fisttp
add
out
mov
nop
fsubp
(bad)
xor
(bad)
dec
outs
loopne
dec
jecxz
std
jmp
fsubp
aas
pop
jmp
ins
loope
ds
dec
loop
fucomp
sbb
lods
lods
rcr
fisttp
fisubr
loope
ins
(bad)
mov
jmp
sbb
out
add
enter
in
jmp
mov
(bad)
xchg
push
loop
fsubrp
xor
loop
pop
out
test
jecxz
dec
out
out
lds
jmp
retf
int
add
out
loopne
int
xor
out
push
add
lock
fucom
cmovg
push
sti
call
iret
loopne
mov
jp
call
cs
lods
in
mov
in
mov
dec
out
sbb
jno
in
ds
pop
dec
loop
mov
mov
mov
sbb
popa
dec
in
mov
(bad)
outs
out
popf
fmul
jmp
aas
psubsw
jmp
daa
dec
in
(bad)
cld
pop
add
lock
sahf
jmp
outs
cmc
and
push
(bad)
in
mov
in
inc
lahf
icebp
inc
push
jmp
xor
lahf
adc
dec
xor
lock
pminsw
out
(bad)
(bad)
pop
inc
and
je
icebp
outs
into
jmp
das
jmp
popf
xchg
add
add
jecxz
repz
outs
imul
add
in
pop
jg
sbb
xlat
movs
(bad)
pop
stc
cdq
cs
test
nop
iret
cmc
cli
fdiv
xchg
push
(bad)
mov
stos
psubq
idiv
clc
mov
outs
fcomip
cmp
hlt
movs
call
mov
rcr
mov
fidivr
clc
dec
pop
jmp
pop
icebp
scas
dec
jecxz
mov
scas
in
psubd
dec
fdivp
jg
stc
(bad)
sahf
icebp
ins
lahf
clc
daa
jge
lods
pop
std
stos
(bad)
clc
js
stc
jecxz
xchg
xchg
(bad)
cli
in
clc
or
test
invd
pop
add
test
dec
test
pop
add
test
xchg
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
rcl
pushf
cdq
test
mov
ret
aam
(bad)
xlat
mov
mov
mov
in
mov
in
xchg
test
mov
in
pop
test
neg
xor
xchg
and
bound
or
imul
jl
(bad)
and
sub
cmp
push
outs
jns
sub
mov
ret
movs
movs
pop
xchg
inc
jne
es
cmp
xchg
and
cmps
test
ins
mov
mov
sub
mov
popf
add
inc
addr16
int3
push
xor
jne
push
adc
dec
mov
rcl
dec
adc
mov
and
ret
test
xlat
push
pop
jo
or
pop
leave
xchg
in
and
push
je
and
retf
sub
cmp
add
mov
xlat
mov
xchg
ss
xor
bound
test
movs
jp
stos
(bad)
in
(bad)
mov
or
cli
push
outs
pop
lods
jg
out
into
retf
ds
dec
aad
pop
int
xchg
pop
repnz
dec
jmp
mov
inc
and
test
lds
push
bound
and
jmp
mov
sbb
frstor
fwait
dec
mov
push
repnz
push
push
cdq
add
xchg
xchg
and
xlat
pop
dec
sub
rcr
and
fdivr
xor
jns
xchg
mov
jne
shl
pop
aaa
xor
packsswb
ret
inc
hlt
cld
clc
fsub
ins
mov
(bad)
cmc
shl
mov
xchg
test
aad
pushf
dec
mov
xchg
aam
mov
mov
mov
aad
cdq
std
xchg
inc
fist
xor
pop
pop
lods
or
sbb
test
xchg
popf
aam
call
adc
rol
push
test
push
xor
push
dec
gs
mov
add
stos
movs
push
sub
fnstcw
jmp
addr16
arpl
stos
mov
imul
push
mov
and
mov
or
mov
mov
mov
ins
pop
lds
xor
dec
imul
lods
inc
push
pop
cmps
ror
(bad)
pop
push
nop
les
cmp
mov
add
loope
pop
push
js
das
adc
imul
fimul
mov
rcr
add
sub
out
scas
or
paddb
xchg
sbb
sub
adc
jae
scas
mov
mov
ret
sub
das
popa
das
lds
sbb
push
(bad)
ss
mov
lods
xor
mov
push
int
aaa
sbb
mov
pop
test
fimul
sub
test
test
push
das
dec
xor
xor
loopne
(bad)
mov
lods
(bad)
sbb
dec
ins
mov
jge
in
repnz
adc
jp
int3
jo
arpl
outs
sub
ins
mov
test
and
push
inc
push
dec
enter
adc
sub
cmp
xchg
addr16
in
pusha
cs
pushf
ffreep
mov
je
scas
xchg
cli
mov
xor
stc
jmp
mov
sti
in
inc
fwait
imul
jmp
mov
jno
jmp
adc
dec
outs
adc
repz
out
cdq
fistp
hlt
inc
push
sar
retf
repnz
or
in
ret
cmp
in
adc
out
stos
into
mov
push
pop
pop
add
add
pusha
add
xor
adc
cmp
pop
push
sub
aad
js
or
inc
and
sbb
adc
das
xor
push
add
mov
sub
xchg
xor
mov
inc
xchg
out
sbb
jno
bswap
loopne
fdecstp
mov
cmps
sub
or
mov
and
or
mov
or
inc
add
shr
jp
mov
fiadd
push
push
add
or
lds
mov
pusha
sbb
inc
nop
mov
and
xor
enter
add
arpl
adc
repz
mov
out
inc
and
addr16
cmp
jecxz
sub
mov
cwde
leave
sbb
pusha
add
adc
retf
pop
pushw
arpl
xchg
xor
fisub
sub
cwde
add
movs
sub
mov
shl
repnz
imul
dec
push
xchg
mov
test
xchg
xchg
ret
cmps
xor
or
dec
cdq
shl
scas
leave
dec
add
rcr
sar
cmp
jb
loope
pop
push
jmp
test
xor
iret
ins
(bad)
dec
lahf
xchg
xor
or
mov
fwait
outs
sbb
and
xchg
mov
loope
rcl
lea
ins
addr16
mov
rcl
xor
mov
aas
sub
xchg
(bad)
cmps
cmp
imul
mov
cmp
rcr
jmp
mov
lea
stos
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
ss
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
int
outs
ja
fcmovnu
cli
div
xchg
loop
idiv
xchg
retf
fsub
cmp
mov
cmps
dec
fucomp
pop
idiv
mov
fucomp
jp
mov
(bad)
mov
in
in
js
sti
xor
sub
adc
pop
ror
das
jle
mov
fwait
ins
das
push
cmp
pop
repz
in
(bad)
push
add
loop
add
cmp
imul
ja
out
xchg
inc
jnp
sub
into
or
pop
es
jge
dec
fimul
repz
mov
in
pop
adc
scas
sbb
test
out
rcr
and
das
js
inc
in
pop
inc
enter
addr16
or
or
pop
add
and
mov
pop
outs
xchg
enter
das
cmp
sub
add
push
cs
addr16
cmp
sbb
xchg
jg
frstor
aaa
cmp
cmp
mov
mov
fldcw
xchg
cdq
enter
xchg
iret
mov
lock
mov
popf
imul
test
rep
push
inc
loopne
mov
ja
rol
hlt
jnp
mov
sub
fld
inc
shl
dec
adc
imul
sub
push
daa
jp
je
jne
adc
add
mov
adc
or
sar
(bad)
dec
lods
imul
ss
jmp
pusha
add
sbb
ucomiss
add
mov
out
mov
xchg
inc
sbb
mov
(bad)
cli
es
lock
cdq
repz
mov
fdivr
fisub
aam
sar
add
cmp
aad
(bad)
mul
test
(bad)
scas
neg
pop
loopne
add
imul
jns
adc
repnz
int3
gs
jnp
leave
div
mov
cmp
aam
or
fmul
(bad)
inc
push
js
jmp
jecxz
inc
cmp
and
imul
jb
jmp
out
add
into
sbb
not
sti
loop
adc
jb
fs
inc
ja
adc
cmp
sti
(bad)
outs
push
mov
cwde
cmps
fdivr
and
jnp
or
fiadd
int
sub
into
cmp
jmp
pop
inc
mov
fdiv
jns
out
scas
into
std
mov
cli
push
jp
mov
loopne
pop
stc
nop
ret
cmp
cmp
inc
jge
mov
fild
cmp
xor
mov
enter
lahf
das
inc
cmc
(bad)
(bad)
mov
into
scas
jle
dec
fdiv
pop
cld
cli
inc
jae
fstp
test
in
mov
pop
jnp
es
mov
cmp
pop
fisubr
shr
pop
je
lock
(bad)
push
mov
add
jl
(bad)
out
clc
setbe
add
outs
cmp
sti
scas
add
lods
sbb
jno
add
mov
pop
imul
pop
js
jbe
dec
nop
add
jle
xchg
jp
inc
fs
or
dec
and
cmps
popa
imul
aaa
jns
data16
xchg
outs
rcl
jno
daa
jbe
div
idiv
push
imul
call
fs
out
or
add
mov
jne
jae
inc
jle
daa
imul
mov
mov
adc
sti
mov
adc
jg
js
xchg
xchg
cmp
ins
xor
imul
or
add
add
ja
sub
xor
mov
out
enter
cmp
xchg
adc
push
pop
pusha
cmps
aaa
jo
mov
sbb
cmp
add
test
test
pop
mov
test
add
ja
popf
adc
pop
xlat
add
ja
js
cmp
pusha
call
jp
pop
inc
test
xchg
mov
inc
(bad)
mov
xor
test
xchg
imul
sti
inc
add
les
jbe
cmps
xchg
mov
call
push
(bad)
jg
outs
xchg
es
loope
xchg
pop
mov
ja
jo
jle
mov
cmps
jl
test
or
dec
js
sbb
jbe
sub
lahf
and
and
ins
popf
xchg
js
xlat
(bad)
ins
es
cwde
fs
and
scas
addr16
sbb
out
or
jg
adc
pop
jnp
mov
scas
dec
pop
adc
sbb
sbb
jp
mov
pop
pusha
xchg
push
jle
js
mov
jnp
xchg
or
imul
pop
emms
jb
test
in
xchg
add
and
imul
mov
jo
jg
xchg
cmp
push
pop
jno
push
test
jae
add
(bad)
mov
(bad)
out
sub
sbb
imul
xlat
cmps
outs
std
mov
sbb
add
push
mov
jno
cmps
jge
out
scas
(bad)
pop
in
bound
cmp
call
ret
pop
out
out
push
test
test
mov
inc
mov
gs
jb
cmc
cwde
sahf
imul
jmp
or
jne
leave
jb
(bad)
mov
xlat
mov
push
sub
dec
xchg
mov
addr16
jle
dec
jae
enter
jne
cmp
call
xor
jle
push
ficom
fs
sar
nop
pop
cwde
aaa
mov
mov
mov
pop
add
mov
add
popw
xchg
test
jle
push
lea
xchg
mov
je
idiv
mov
sub
jg
jbe
int
pop
add
test
mov
mov
xchg
ret
ss
dec
jns
mov
jbe
add
sbb
data16
pop
push
data16
add
xchg
jecxz
cmp
xor
addr16
jl
xchg
mov
or
stc
jg
cmp
jmp
add
pop
xchg
retf
jne
dec
mov
xchg
movs
push
mov
pop
inc
pusha
sar
dec
call
pop
pusha
cmp
mov
cli
xchg
mov
and
cwde
mov
mov
arpl
ja
xchg
push
data16
(bad)
xchg
sub
cdq
adc
out
cdq
imul
inc
stos
test
push
outs
clc
adc
test
gs
xor
fs
loopne
bound
xor
jge
pop
push
pop
outs
hlt
mov
ins
jmp
ins
aam
pop
mov
cmps
lahf
in
mov
ins
fcmovne
pop
mov
add
jge
pop
pop
dec
jo
shr
rcr
lods
sar
lods
aam
lods
(bad)
jp
fcomp
(bad)
lods
fdivrp
lods
loopne
scas
loop
scas
in
scas
out
scas
call
scas
in
mov
add
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
add
popf
cli
sub
mov
add
dec
add
push
scas
fild
inc
cmp
push
mov
stos
mov
sub
mov
retf
mov
stos
mov
sub
cmp
jmp
cmp
xchg
mov
iret
or
mov
lods
mov
fstp
sbb
retf
mov
fwait
mov
and
and
jmp
add
add
sbb
dec
lods
mov
ficomp
jmp
mov
pop
mov
jmp
add
mov
(bad)
sub
cmp
fstp
nop
mov
dec
scas
pop
lock
cmp
mov
cmp
xchg
mov
lock
shl
shl
add
retf
rcl
jl
sbb
scas
push
adc
push
add
cmp
xor
xor
ret
xor
ret
add
sub
cli
retf
mov
xor
ret
jp
add
dec
les
mov
dec
mov
or
xor
lds
ret
out
jp
int3
mov
push
pop
lds
lds
mov
cmp
mov
add
mov
add
add
inc
lock
or
(bad)
jno
les
les
lds
push
cmp
(bad)
jg
mov
jle
ret
popa
ins
(bad)
out
mov
mov
out
js
and
sub
add
sub
mov
mov
xchg
pushf
leave
mov
lods
scas
dec
lock
pop
and
pop
add
jl
or
add
lods
xchg
retf
retf
call
pusha
add
int3
add
sub
cld
mov
and
sbb
int3
or
retf
(bad)
mov
mov
or
ror
adc
fucomp
int3
mov
stos
mov
leave
nop
sub
mov
add
into
out
sbb
fisttp
pop
pusha
add
ror
int3
add
cld
leave
std
fmul
test
add
ins
iret
mov
into
out
jl
nop
mov
icebp
sbb
out
sbb
mov
iret
icebp
cmp
inc
mov
xor
icebp
cld
leave
lods
or
sbb
clc
cld
leave
dec
jo
es
jp
into
push
std
rcr
mov
and
xor
sbb
shr
cmp
pop
in
int
fst
adc
jp
rcr
ins
shr
rcr
ror
fst
cmp
xchg
adc
retf
into
jmp
into
pop
or
das
popf
shr
iret
and
and
pushf
shl
int3
iret
adc
(bad)
jmp
shr
(bad)
rol
rol
in
xlat
add
add
sub
xchg
shr
or
jne
fsub
jge
dec
in
into
jb
rcr
aad
(bad)
out
fmul
test
jo
mov
or
mov
add
or
inc
lods
into
aas
int
adc
rcl
aad
fsub
ficom
mov
scas
mov
rcl
jl
aam
sub
dec
sub
sub
shl
rcl
shr
stos
int3
mov
sbb
ins
(bad)
add
into
je
fstp
movs
fst
mov
fldenv
lods
(bad)
nop
sub
cli
std
xlat
in
dec
int
fstp
pop
jge
in
lods
fild
shr
mov
push
in
into
push
lock
std
retf
rol
(bad)
les
aam
int
ret
sub
fnstsw
mov
ffree
(bad)
fstp
jge
fdivr
sub
lea
xchg
or
cmp
push
daa
xor
jge
in
dec
fdivr
jl
nop
int3
add
mov
loope
fsubr
loop
cmp
out
dec
xlat
jecxz
into
pop
scas
rcl
xlat
lahf
in
in
mov
cli
lods
in
add
dec
push
iret
and
xlat
pop
outs
out
mov
in
mov
pop
(bad)
fucomip
fsub
cs
fdivr
cmp
outs
mov
addr16
in
int
lods
jl
cli
in
iret
sti
in
loopne
(bad)
fimul
call
lods
lods
fucomp
lods
xchg
std
in
int
pop
mov
stc
lods
in
into
aam
ins
loope
fucomp
shr
loope
(bad)
fsub
stos
xlat
std
add
mov
sbb
xlat
ss
cmp
jmp
fucomi
loope
cmp
cdq
pop
jmp
dec
loope
(bad)
loope
popf
fisub
out
rcl
and
sub
dec
mov
cmps
sbb
ror
je
in
fisttp
pop
(bad)
jmp
scas
loopne
scas
rcl
sub
inc
push
call
shl
test
fistp
out
outs
in
fnstsw
int
out
cmp
out
mov
in
add
out
lods
(bad)
into
iret
jmp
add
mov
mov
add
into
add
stos
pop
adc
pop
out
aad
or
or
retf
stos
pop
add
adc
or
pop
pop
lock
cld
pushf
fiadd
jmp
fdiv
out
int
fistp
sti
int3
add
dec
fmul
(bad)
jecxz
ins
loope
fsubrp
dec
lahf
iret
loopne
iret
sar
pop
jmp
sbb
jmp
push
mov
adc
in
push
out
icebp
mov
not
(bad)
repz
iret
adc
in
fsubrp
push
out
out
scas
shl
pop
repnz
clc
aad
fldenv
fist
ja
lock
mul
repz
mov
mov
add
mov
stos
sub
lahf
cs
into
add
lock
jecxz
lahf
repz
fdivp
cmp
mov
idiv
ins
jmp
(bad)
mov
mov
out
psubq
scas
cli
ds
sti
or
pop
out
iret
sub
adc
push
out
repz
outs
cld
movs
outs
hlt
cmps
aas
hlt
xchg
dec
fsubr
mov
out
in
inc
scas
hlt
or
(bad)
jbe
jmp
jg
cli
pop
rol
out
(bad)
sub
pop
fdivp
xor
bound
enter
ret
je
add
dec
mov
xchg
cmp
mov
sub
enter
dec
cmp
push
pop
ficomp
enter
jo
cmp
imul
dec
pop
cli
sbb
jp
jmp
sbb
cmp
retf
enter
jmp
stos
or
fld
or
mov
cmp
dec
pop
sbb
or
mov
or
lahf
xor
out
lods
xchg
inc
scas
push
xor
lods
inc
mov
mov
shl
xchg
je
js
sub
loopne
pop
loop
repnz
sub
dec
div
ret
iret
xchg
inc
push
jmp
in
mov
dec
fs
push
mov
xor
inc
lds
iret
dec
inc
adc
fsubr
adc
rcr
pop
and
jmp
and
jp
push
fidiv
and
arpl
sub
sahf
mov
dec
xchg
sar
adc
pusha
test
in
push
inc
or
in
cmp
aaa
int3
pop
ss
imul
fcmove
mov
call
sub
xchg
iret
call
cmp
and
mov
mov
jae
dec
adc
pop
jp
fscale
mov
loope
mov
sahf
xor
(bad)
ins
mov
jecxz
fwait
mov
mov
movs
sbb
dec
aaa
mov
js
cmp
and
jle
inc
fadd
sahf
js
mov
push
jle
aad
sbb
and
lds
push
popa
ja
dec
dec
sbb
pop
pop
mov
pop
in
xchg
xor
pusha
and
cmps
inc
cmp
jge
mov
jno
sbb
test
fistp
push
sbb
loopne
pop
loope
fnstsw
xchg
adc
arpl
ds
sub
mov
add
mov
xchg
xchg
cmp
or
shl
push
and
add
fmul
fdivr
and
out
inc
adc
dec
call
xchg
adc
(bad)
xchg
or
cmp
test
mov
jae
dec
imul
pusha
movs
enter
push
mov
jo
mov
and
or
push
lea
jno
mov
test
xchg
dec
imul
cmps
scas
nop
xor
pushf
cmp
pop
mov
or
xchg
xor
bound
sub
mov
imul
push
jns
jb
inc
add
sbb
ins
mov
xlat
(bad)
jbe
push
js
mov
and
in
jmp
jp
mov
mov
jle
mov
(bad)
aam
xor
dec
lahf
xor
sahf
or
or
sub
shl
test
lods
mov
jns
push
sbb
lahf
xchg
dec
lds
fist
and
adc
mov
cmovnp
jo
ss
gs
sbb
xchg
iret
(bad)
dec
jnp
enter
pop
call
xor
xor
adc
jp
dec
outs
mov
out
out
(bad)
xlat
hlt
ret
xchg
or
call
hlt
fldenv
cdq
test
pop
dec
pop
imul
(bad)
jge
mov
fistp
mov
outs
jnp
mul
jmp
ins
mov
cwde
iret
cli
loope
daa
mov
jecxz
out
jge
ror
sbb
dec
ja
sub
loopne
jae
(bad)
xor
jle
xlat
inc
and
js
mov
imul
sti
cld
mov
jl
shl
adc
inc
and
int3
jle
nop
das
push
fbstp
xchg
in
repz
mov
mov
jg
outs
repz
js
into
cmp
cmp
dec
psrlq
cli
and
jg
repz
arpl
test
jns
jg
cmp
xor
int
jns
mov
cmp
cmp
jl
jae
(bad)
xchg
nop
inc
(bad)
(bad)
loop
sti
adc
push
imul
sbb
pop
sahf
clc
xchg
aas
in
into
jns
xor
call
mov
add
(bad)
test
dec
mov
sar
mov
mov
retf
or
push
mov
(bad)
xor
mov
in
dec
ins
jmp
xlat
gs
mov
fs
or
nop
dec
pop
leave
and
push
jecxz
mov
jno
int
xchg
adc
mov
cwde
mov
or
(bad)
jl
(bad)
cld
and
in
outs
mov
mov
push
sbb
fadd
sub
out
in
jmp
mov
leave
jo
repz
pop
sar
ja
sub
inc
fnstenv
comiss
inc
and
inc
(bad)
sbb
dec
xchg
mov
push
cmp
loope
ins
push
sub
stc
adc
xchg
test
and
mov
les
int3
inc
fisubr
sti
retf
in
mov
dec
loop
adc
test
add
sbb
data16
inc
cld
sub
mov
pushf
bound
test
cmp
xor
loopne
cmp
dec
lock
dec
outs
push
mov
or
inc
cdq
inc
xchg
push
loop
scas
pushf
jno
es
or
mov
push
repnz
scas
mov
repz
stos
jl
dec
pop
fcmovbe
and
push
xchg
adc
push
adc
fisubr
jb
or
out
dec
jmp
inc
pushw
push
imul
sub
adc
mov
enter
data16
mov
jns
pop
and
add
push
and
mov
repz
and
push
js
xor
jecxz
push
mov
mov
fstp
fcomp
pop
sbb
push
gs
sti
and
jne
movs
jecxz
push
jmp
mov
popf
add
retf
xchg
push
jge
fadd
cmc
mov
mul
pop
fst
sub
or
pop
push
sbb
add
aas
nop
lahf
cmp
sbb
rcr
add
shl
ret
sti
fnsave
jge
push
imul
mov
imul
xor
scas
jbe
fcmovnbe
in
je
cli
and
fiadd
sti
ja
call
jns
sbb
xor
in
pop
popf
mov
cmp
inc
or
xchg
or
jo
pop
or
bound
xlat
and
xor
pop
test
into
(bad)
ja
and
fdivrp
adc
sti
jne
cmc
or
pop
and
cmp
retf
sub
out
(bad)
cld
mov
cmp
inc
pusha
add
test
adc
add
and
or
sahf
xchg
mov
(bad)
mov
cmps
jmp
stos
cmp
pop
imul
pop
out
adc
enter
repz
add
pop
xchg
xor
ins
inc
cmp
stc
into
jns
add
and
mov
dec
jo
test
mov
sbb
sbb
sbb
inc
push
or
mov
or
ins
fbstp
stos
fnstcw
sahf
inc
lahf
std
lods
adc
into
push
fdiv
cmp
mov
add
jmp
out
nop
ret
ins
jmp
push
ret
ss
mov
mov
iret
scas
neg
outs
jp
or
mov
rol
jbe
mov
int
nop
xor
dec
jne
aaa
mov
stos
pop
(bad)
out
mov
adc
iret
pop
clc
adc
sub
rcl
sahf
je
divps
sbb
adc
lea
dec
pop
loope
xlat
pop
mov
pop
icebp
push
mov
jbe
mov
in
adc
ret
jb
or
xchg
push
cmp
and
xor
into
and
add
je
leave
popf
cld
jb
mov
add
or
jl
(bad)
scas
xor
fstp
add
ret
dec
sub
mov
add
inc
scas
ja
pop
fidiv
mov
jns
ja
add
outs
pop
or
mov
int
or
in
mov
dec
sahf
jbe
sahf
std
in
jnp
sti
add
out
mov
imul
in
ficomp
(bad)
push
js
and
out
aaa
aaa
cmp
pswapd
popf
out
sbb
add
js
test
loopne
sbb
xchg
out
out
add
dec
ds
(bad)
jl
cld
or
mov
int
jo
sbb
ret
pop
repnz
mov
sar
ds
std
(bad)
push
ja
add
cmp
xchg
lea
fistp
jle
add
jnp
icebp
sub
xor
outs
dec
ja
retf
push
hlt
js
mov
fsubr
(bad)
sub
out
out
stc
push
mov
or
(bad)
out
dec
cwde
stc
aam
fadd
lods
pextrw
(bad)
std
fimul
mov
nop
jo
pop
div
pop
jnp
sub
add
mov
js
repz
(bad)
jnp
mov
mov
add
ja
movs
aaa
xor
add
ds
shl
sub
bound
popa
das
enter
bound
xor
xor
daa
push
test
add
rol
addr16
cwde
jl
sub
clc
jge
xlat
jnp
cmp
xchg
ja
and
jge
push
sub
movs
xchg
fdivr
xlat
ja
pop
ins
inc
mov
aad
add
jo
push
push
sub
jnp
daa
ja
js
pop
push
aaa
sbb
xchg
out
sub
inc
sub
cmp
inc
sub
js
add
add
cwde
jbe
push
add
jb
xor
mov
xchg
mov
inc
jns
enter
mov
lock
dec
jo
xchg
xchg
js
sbb
ja
jo
loopne
add
jo
fs
pop
adc
or
cmp
mov
mov
push
test
(bad)
fmul
mov
(bad)
cmp
cwde
test
mov
jbe
or
addr16
xlat
jnp
pop
outs
dec
rol
cwde
push
jmp
mov
dec
int
xchg
jns
cmps
mov
jno
adc
test
or
popa
inc
mov
leave
call
(bad)
js
pop
mov
(bad)
imul
lock
sbb
fadd
mov
mov
add
imul
add
mov
cdq
pop
xchg
bound
add
jbe
imul
lea
or
inc
add
xchg
pusha
xchg
fsubr
jbe
jmp
popf
enter
(bad)
imul
jbe
mov
pop
jns
sbb
cdq
mov
xchg
and
inc
fld
rcl
pusha
xchg
mov
add
cmp
(bad)
ss
xchg
xor
dec
test
pop
pusha
js
stc
xchg
pop
sbb
or
dec
cmp
jns
mov
call
jle
xchg
mov
add
add
dec
pushf
push
cmp
jo
arpl
mov
mov
js
ror
(bad)
and
das
test
les
pushf
mov
sub
mov
sbb
jns
mov
add
adc
dec
or
push
dec
in
cmp
xchg
pop
cmp
pop
xchg
sbb
popf
dec
or
fld
mov
test
or
adc
cdq
mov
dec
xchg
fcomp
push
cdq
xchg
xor
pushf
mov
sahf
(bad)
fst
fst
pop
cdq
jns
mov
xchg
jecxz
jo
xchg
push
dec
mov
stc
xchg
and
xchg
fcomp
xchg
pushf
xor
fwait
(bad)
pop
or
call
cmp
push
dec
retf
push
(bad)
jmp
aad
jp
stc
lahf
mov
cmps
movs
neg
call
lea
xchg
fld
mov
cmp
arpl
dec
movs
mov
(bad)
mov
sahf
sub
add
and
push
push
jle
(bad)
mov
lahf
popf
cmp
mov
inc
dec
xchg
add
jb
xor
cdq
test
pop
cdq
sbb
jo
adc
mov
gs
jns
movs
xor
or
leave
movs
into
mov
mov
xchg
cmp
dec
movs
outs
pop
lods
cwde
mov
sub
or
push
call
mov
cli
call
mov
stos
xchg
pop
popf
inc
cli
xchg
sbb
nop
push
inc
xchg
jmp
xchg
sub
stos
fxch
add
jmp
sti
fsubr
cli
cwde
or
daa
ficomp
pop
movs
call
xchg
jmp
cmps
ja
sahf
jns
lods
inc
mov
(bad)
cli
lahf
stos
retf
mov
nop
jo
(bad)
stos
test
push
addr16
das
mov
lahf
mov
rcr
ficomp
inc
and
ret
mov
pop
(bad)
mov
jmp
inc
sbb
fwait
mov
mov
jp
adc
movs
(bad)
fidiv
mov
add
mov
pop
stos
and
imul
mov
cmps
daa
pop
mov
sub
stos
cwde
inc
fst
xchg
cdq
jbe
mov
call
add
sbb
mov
xchg
jns
int3
jmp
jmp
loopne
xchg
ret
lahf
sub
dec
fwait
inc
imul
mov
pop
call
imul
mov
mov
mov
and
mov
xchg
sub
jo
adc
fwait
lods
js
xchg
jbe
mov
retf
mov
sti
mov
jns
dec
sub
mov
stos
mov
jmp
jb
mov
mov
or
or
mov
stos
mov
xor
imul
mov
sti
mov
stos
cwde
or
neg
or
mov
fnstsw
js
mov
pushf
lods
cbw
scas
mov
add
sub
sbb
fidivr
cmp
sbb
cmp
dec
mov
mov
(bad)
sbb
add
xchg
stos
mov
sti
shl
scas
or
cmp
mov
test
inc
dec
mov
fwait
test
fdivr
int3
mov
fadd
sub
mov
ret
cwde
aaa
fld
mov
(bad)
leave
cmp
push
mov
repnz
mov
imul
lods
leave
mov
sub
lods
jmp
mov
test
sbb
and
add
or
cmp
sub
jl
sbb
and
mov
in
mov
mov
jmp
les
lods
retf
mov
cld
add
xchg
repnz
mov
sbb
int3
xchg
xor
jns
leave
ret
ret
pushf
les
add
mov
or
push
add
inc
add
lods
retf
xchg
scas
fdiv
sti
mov
ins
mov
mov
rol
sub
jl
sub
iret
outs
cld
mov
jnp
add
nop
movs
cld
into
ret
int3
pop
(bad)
in
leave
adc
(bad)
repnz
add
(bad)
mov
iret
adc
pop
sbb
pop
mov
sub
stc
pop
sar
mov
xchg
cmp
jecxz
leave
xchg
mov
mov
rol
push
adc
ffree
cmp
jno
rcr
sub
in
sbb
xor
dec
mov
inc
add
sar
mov
fld
aas
sub
pop
lea
sti
aam
pop
mov
(bad)
fdivr
pop
xlat
fnstcw
add
rcl
sub
out
mov
cmp
sub
rcr
sbb
in
mov
pop
or
(bad)
in
lods
fstp
call
in
shr
lods
retf
mov
in
ror
jl
sar
popf
(bad)
scas
lods
retf
test
mov
in
fdiv
sbb
xchg
sbb
mov
lahf
pop
dec
aam
lods
mov
mov
stos
lods
ret
int
sbb
adc
shr
rcr
mov
adc
adc
add
xor
pusha
adc
adc
fmul
rcr
cld
int
add
mov
aaa
in
cwde
jl
fld
shr
sar
fisubr
or
(bad)
jl
add
retf
cmps
fst
xchg
mov
rcl
push
fisttp
loopne
sbb
pop
dec
fmul
mov
pop
(bad)
mov
sbb
fsubr
sbb
xchg
jecxz
rcr
rol
fbld
xlat
neg
(bad)
sbb
jecxz
sbb
(bad)
pop
sub
mov
cs
in
cmp
mov
add
sbb
pop
ds
or
pop
push
or
loope
shl
in
jle
retf
std
fist
fsub
enter
out
sar
jecxz
into
add
mov
sbb
loopne
cs
or
dec
scas
fnstenv
fsubr
fiadd
mov
loopne
pop
out
(bad)
loop
outs
jecxz
scas
jecxz
or
test
pusha
sahf
jmp
jle
out
fdiv
jmp
popf
loop
lods
out
cmp
jnp
out
mov
jnp
jmp
data16
add
call
sbb
shr
pop
out
in
adc
aam
outs
out
cs
out
sar
fsubrp
js
in
xchg
(bad)
push
out
mov
jmp
int
ficomp
mov
in
dec
jmp
push
jmp
pop
out
xchg
aaa
(bad)
fiadd
mov
scas
loope
scas
jecxz
pop
icebp
in
push
out
pushf
scas
fucom
push
jmp
jge
sub
lods
sahf
jmp
scas
loope
std
out
imul
scas
in
out
aad
pop
fimul
out
jmp
adc
ds
or
add
jle
rcr
repz
out
dec
xacquire
pop
dec
adc
inc
fucomip
pop
sub
arpl
shr
fidivr
aas
fadd
add
add
sbb
dec
pop
(bad)
outs
cmp
cwde
mov
inc
pop
in
(bad)
out
ds
fsubr
not
jg
retf
dec
dec
call
(bad)
ds
pop
pop
(bad)
pop
fcomip
fmul
jecxz
mov
call
icebp
test
rcr
push
(bad)
mov
not
out
in
scas
fucom
nop
dec
fisttp
(bad)
icebp
push
cmc
in
mov
inc
jle
xchg
pop
stc
std
or
sahf
mov
mov
int3
sub
mul
imul
hlt
jmp
out
jnp
sti
inc
dec
imul
hlt
nop
and
popa
pop
rol
sti
out
hlt
outs
(bad)
adc
neg
cld
ret
(bad)
cld
pop
maskmovq
test
fcomp
scas
jl
ret
add
cld
enter
pop
shr
in
cmp
cld
call
fsub
pop
fcomip
popa
push
outs
out
(bad)
cmp
mul
repz
pop
loop
pop
div
invd
dec
sub
sub
pop
sub
test
xchg
mov
sbb
add
xchg
xchg
test
lea
mov
mov
pop
test
scas
mov
(bad)
(bad)
nop
cwde
mov
mov
mov
scas
stos
mov
lds
int
mov
aad
fwait
push
stos
cdq
xchg
stos
mov
loop
pop
jmp
mov
call
push
cmps
adc
rcl
fdivr
pop
les
cmps
ins
mov
shl
inc
adc
and
adc
and
enter
(bad)
pushf
and
add
jno
test
pop
mov
enter
sub
(bad)
sub
loopne
or
es
and
inc
add
scas
stos
les
and
sbb
dec
xlat
mov
shr
adc
cmps
ins
fisttp
daa
shr
inc
mov
in
loop
aad
adc
ins
inc
pop
cmc
jl
sub
loop
xchg
es
arpl
mov
push
push
mov
push
mov
cmp
pop
xchg
xchg
jmp
test
pop
jno
xor
imul
sahf
sbb
xchg
adc
xor
sub
push
xor
fcmovnb
xchg
ja
cld
(bad)
js
je
mov
pop
xchg
push
imul
pop
xchg
push
add
in
sbb
adc
repnz
pop
lahf
js
mov
popf
sbb
xor
ins
xor
push
and
jl
leave
les
retf
sub
fsubr
fadd
icebp
aaa
push
mov
adc
mov
sbb
mov
(bad)
fwait
dec
push
add
xor
test
jle
shl
xchg
(bad)
adc
jnp
inc
mov
mov
clc
loop
xchg
jns
ret
imul
push
call
add
cmps
mov
mov
mov
mov
jne
popf
jp
mov
ror
fs
test
push
mov
pop
add
bound
pop
(bad)
nop
jp
jmp
retf
xchg
retf
movs
retf
cmps
add
jo
adc
add
cmove
lds
sbb
dec
js
jmp
mov
jp
add
mov
pop
stos
mov
imul
mov
mov
retf
mov
jmp
inc
mov
xor
ins
pop
mov
cli
add
xor
sbb
out
imul
sub
out
or
sub
mov
sub
push
add
mov
das
mov
es
scas
scas
retf
inc
adc
add
mov
dec
fs
jmp
mov
sub
add
(bad)
cli
outs
dec
sub
repnz
sbb
jb
push
outs
lods
mov
dec
inc
bound
fmul
sub
aaa
adc
les
les
inc
fadd
in
(bad)
rcl
repnz
sub
in
mov
aaa
cmp
(bad)
xchg
pushf
sahf
push
cmps
inc
fnstsw
inc
fcomp
xor
jo
pop
mov
pushf
push
jne
push
mov
ja
push
outs
mov
push
xchg
cmp
ror
arpl
rol
jg
dec
add
(bad)
cmps
popf
ss
xchg
mov
sub
ds
mov
sahf
std
leave
sub
(bad)
adc
aaa
jecxz
mov
add
inc
dec
jno
mov
ret
fist
lods
sub
adc
dec
test
(bad)
jnp
cmp
and
out
sti
push
adc
add
pop
das
div
add
jne
cs
sbb
jle
fdivr
scas
sub
jnp
sub
mov
push
fisttp
in
jp
dec
push
mov
out
push
mov
cld
outs
and
add
inc
add
in
jle
push
repnz
and
push
xor
lods
es
ror
into
add
sahf
mov
inc
inc
hlt
fldcw
mov
mov
adc
dec
iret
jae
dec
loope
cmp
outs
push
sahf
ret
shl
xacquire
mov
xchg
(bad)
mov
fwait
hlt
jb
les
mov
jecxz
cmp
sbb
or
add
and
jo
das
xor
(bad)
pusha
aad
sbb
or
mov
sub
movs
mov
data16
sbb
sub
push
or
push
push
xor
scas
lods
jno
je
pop
fcmovu
sbb
adc
(bad)
dec
dec
movs
push
repz
enter
mov
pop
cmps
add
nop
fs
fsub
out
xchg
jmp
pushf
fs
js
xor
mov
dec
cmp
cmp
lea
lds
dec
and
mov
std
cmc
mov
sahf
fsub
cmp
mov
jmp
xchg
iret
int3
in
cdq
cmp
popa
and
xchg
test
xor
(bad)
dec
pop
push
rcr
(bad)
sbb
push
xchg
(bad)
repz
call
cdq
into
adc
movs
cmp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
add
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
and
add
sbb
push
lea
test
dec
inc
or
xor
adc
add
sub
mov
sbb
fxch
inc
rol
sbb
push
enter
cmp
lods
push
and
mov
push
lods
push
xchg
inc
push
int3
pop
jbe
inc
mov
add
sti
fcmovu
adc
ret
test
(bad)
repnz
call
shl
ja
iret
movs
out
imul
mov
adc
xchg
or
sbb
pop
les
loope
lock
pop
mov
popf
or
pop
mov
jge
ja
fwait
pop
and
mov
inc
dec
in
jle
push
aam
mov
shl
scas
jp
retf
fcomip
push
push
mov
or
not
jne
movd
imul
js
es
in
adc
pop
mov
dec
jno
stc
jnp
rcl
pop
(bad)
adc
cwde
mov
jne
fsin
mov
shr
adc
ja
adc
xor
xor
scas
xchg
inc
or
cmp
and
mov
dec
cmp
xor
in
adc
ret
inc
xchg
and
movntps
or
adc
add
push
add
dec
mov
jnp
ins
pop
es
cwde
mov
push
in
xchg
mov
mov
jne
in
pusha
shl
ror
cs
add
cwde
sub
mov
xchg
add
mov
jle
frstor
ja
or
enter
retf
or
ins
repz
fsub
cld
sbb
add
addr16
aaa
pop
fldcw
repnz
push
popf
fstp
xor
jnp
mov
mov
mov
clc
rcl
jae
pop
fcomp
(bad)
(bad)
inc
mov
inc
not
ror
(bad)
jae
cmp
retf
mov
jne
outs
pop
sbb
dec
(bad)
ss
out
jmp
mov
or
call
fucom
and
jle
xor
and
cmc
js
(bad)
in
es
aaa
mov
outs
jge
in
fmul
xchg
sbb
sbb
lods
(bad)
fisttp
inc
pop
mov
ins
pusha
add
js
jecxz
(bad)
js
or
mov
jle
jg
adc
das
pop
xlat
cmp
adc
(bad)
ror
aad
stos
test
sbb
xor
in
sar
neg
sub
shl
xchg
sbb
(bad)
mov
push
sti
and
sub
test
xor
lock
stc
mov
into
loopne
add
xchg
add
mov
sub
push
jge
dec
sub
or
fimul
mov
mov
imul
in
lods
(bad)
clc
xchg
in
(bad)
mov
pop
push
sbb
mov
addr16
cmp
dec
pop
shr
cmp
out
mov
aas
add
into
sub
adc
stc
loop
push
jge
ret
sbb
pop
aas
mov
mov
jle
mov
cmp
add
ins
outs
push
jle
pop
data16
jle
xchg
or
popa
(bad)
in
jns
jl
xchg
ins
sbb
jo
in
lea
fcmovnbe
outs
xchg
pop
je
gs
ss
pop
push
xlat
push
push
imul
add
dec
jg
ja
or
jb
xchg
and
sbb
js
push
push
dec
push
jge
cmps
jo
shl
adc
sub
add
mov
push
js
and
pop
in
push
jg
fcomp
cwde
cmp
out
test
bound
push
inc
fdivr
(bad)
jb
push
jnp
pop
test
ss
add
jno
push
(bad)
ja
cmps
outs
adc
jne
cmps
add
ja
(bad)
pop
or
pop
cmps
pop
push
push
ja
sbb
test
adc
inc
adc
sbb
bound
ins
inc
lock
mov
xlat
jg
sbb
aaa
mov
data16
jge
js
ds
sub
gs
mov
dec
inc
jae
push
jmp
pop
imul
mov
jne
idiv
pop
jbe
inc
mov
pop
mov
jge
add
adc
add
ins
cmp
test
jb
data16
jae
mov
(bad)
addr16
add
jle
xlat
mov
adc
jle
(bad)
add
dec
push
and
pusha
xchg
cli
push
mov
fsubr
(bad)
xchg
call
int3
sub
ja
pop
mov
add
(bad)
aaa
xchg
retf
repnz
or
jp
imul
push
xchg
cmc
pop
mov
pop
bound
imul
xchg
push
repz
mov
push
pushaw
sub
dec
push
fs
nop
add
ja
jo
ss
imul
mov
hlt
xor
add
jle
out
lods
cmp
daa
xchg
ficom
je
pop
pop
push
xchg
(bad)
imul
jg
or
mov
mov
ret
sub
call
mov
push
push
sbb
pop
call
stos
push
pop
cmp
icebp
mov
stos
sbb
mov
or
js
in
sbb
lea
add
inc
jbe
xlat
(bad)
js
test
ins
push
cdq
jne
pop
scas
sub
pop
jg
fld
mov
xor
idiv
jns
js
or
jns
mov
dec
jo
push
mov
push
jg
out
inc
adc
jne
adc
fmul
sub
or
adc
or
shr
adc
popf
and
pusha
push
es
lea
add
stc
nop
jb
mov
dec
je
xor
fistp
shl
jnp
push
sbb
outs
push
cmps
add
mov
jle
xchg
movs
add
pushf
push
daa
xchg
inc
shl
and
in
adc
xor
xchg
inc
neg
push
pop
lea
and
data16
test
inc
lahf
push
pop
sbb
pop
and
xchg
jle
push
jo
aad
call
ins
mov
lahf
push
jp
cmps
add
xchg
mov
push
ja
addr16
cmc
movs
adc
js
cmps
pop
stos
push
jge
mov
jnp
add
movs
pop
fisub
div
movs
pop
movs
add
mov
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
pop
test
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
add
popf
cli
sub
mov
add
dec
add
push
scas
fild
inc
cmp
push
mov
stos
mov
sub
mov
retf
mov
stos
mov
sub
cmp
jmp
cmp
xchg
mov
iret
or
mov
lods
mov
fstp
sbb
retf
mov
fwait
mov
and
and
jmp
add
add
sbb
dec
lods
mov
ficomp
jmp
mov
pop
mov
jmp
add
mov
(bad)
sub
cmp
fstp
nop
mov
dec
scas
pop
lock
cmp
mov
cmp
xchg
mov
lock
shl
shl
add
retf
rcl
jl
sbb
scas
push
adc
push
add
cmp
xor
xor
ret
xor
ret
add
sub
cli
retf
mov
xor
ret
jp
add
dec
les
mov
dec
mov
or
xor
lds
ret
out
jp
int3
mov
push
pop
lds
lds
mov
cmp
mov
add
mov
add
add
inc
lock
or
(bad)
jno
les
les
lds
push
cmp
(bad)
jg
mov
jle
ret
popa
ins
(bad)
out
mov
mov
out
js
and
sub
add
sub
mov
mov
xchg
pushf
leave
mov
lods
scas
dec
lock
pop
and
pop
add
jl
or
add
lods
xchg
retf
retf
call
pusha
add
int3
add
sub
cld
mov
and
sbb
int3
or
retf
(bad)
mov
mov
or
ror
adc
fucomp
int3
mov
stos
mov
leave
nop
sub
mov
add
into
out
sbb
fisttp
pop
pusha
add
ror
int3
add
cld
leave
std
fmul
test
add
ins
iret
mov
into
out
jl
nop
mov
icebp
sbb
out
sbb
mov
iret
icebp
cmp
inc
mov
xor
icebp
cld
leave
lods
or
sbb
clc
cld
leave
dec
jo
es
jp
into
push
std
rcr
mov
and
xor
sbb
shr
cmp
pop
in
int
fst
adc
jp
rcr
ins
shr
rcr
ror
fst
cmp
xchg
adc
retf
into
jmp
into
pop
or
das
popf
shr
iret
and
and
pushf
shl
int3
iret
adc
(bad)
jmp
shr
(bad)
rol
rol
in
xlat
add
add
sub
xchg
shr
or
jne
fsub
jge
dec
in
into
jb
rcr
aad
(bad)
out
fmul
test
jo
mov
or
mov
add
or
inc
lods
into
aas
int
adc
rcl
aad
fsub
ficom
mov
scas
mov
rcl
jl
aam
sub
dec
sub
sub
shl
rcl
shr
stos
int3
mov
sbb
ins
(bad)
add
into
je
fstp
movs
fst
mov
fldenv
lods
(bad)
nop
sub
cli
std
xlat
in
dec
int
fstp
pop
jge
in
lods
fild
shr
mov
push
in
into
push
lock
std
retf
rol
(bad)
les
aam
int
ret
sub
fnstsw
mov
ffree
(bad)
fstp
jge
fdivr
sub
lea
xchg
or
cmp
push
daa
xor
jge
in
dec
fdivr
jl
nop
int3
add
mov
loope
fsubr
loop
cmp
out
dec
xlat
jecxz
into
pop
scas
rcl
xlat
lahf
in
in
mov
cli
lods
in
add
dec
push
iret
and
xlat
pop
outs
out
mov
in
mov
pop
(bad)
fucomip
fsub
cs
fdivr
cmp
outs
mov
addr16
in
int
lods
jl
cli
in
iret
sti
in
loopne
(bad)
fimul
call
lods
lods
fucomp
lods
xchg
std
in
int
pop
mov
stc
lods
in
into
aam
ins
loope
fucomp
shr
loope
(bad)
fsub
stos
xlat
std
add
mov
sbb
xlat
ss
cmp
jmp
fucomi
loope
cmp
cdq
pop
jmp
dec
loope
(bad)
loope
popf
fisub
out
rcl
and
sub
dec
mov
cmps
sbb
ror
je
in
fisttp
pop
(bad)
jmp
scas
loopne
scas
rcl
sub
inc
push
call
shl
test
fistp
out
outs
in
fnstsw
int
out
cmp
out
mov
in
add
out
lods
(bad)
into
iret
jmp
add
mov
mov
add
into
add
stos
pop
adc
pop
out
aad
or
or
retf
stos
pop
add
adc
or
pop
pop
lock
cld
pushf
fiadd
jmp
fdiv
out
int
fistp
sti
int3
add
dec
fmul
(bad)
jecxz
ins
loope
fsubrp
dec
lahf
iret
loopne
iret
sar
pop
jmp
sbb
jmp
push
mov
adc
in
push
out
icebp
mov
not
(bad)
repz
iret
adc
in
fsubrp
push
out
out
scas
shl
pop
repnz
clc
aad
fldenv
fist
ja
lock
mul
repz
mov
mov
add
mov
stos
sub
lahf
cs
into
add
lock
jecxz
lahf
repz
fdivp
cmp
mov
idiv
ins
jmp
(bad)
mov
mov
out
psubq
scas
cli
ds
sti
or
pop
out
iret
sub
adc
push
out
repz
outs
cld
movs
outs
hlt
cmps
aas
hlt
xchg
dec
fsubr
mov
out
in
inc
scas
hlt
or
(bad)
jbe
jmp
jg
cli
pop
rol
out
(bad)
sub
pop
fdivp
xor
bound
enter
ret
je
add
dec
mov
xchg
cmp
mov
sub
enter
dec
cmp
push
pop
ficomp
enter
jo
cmp
imul
dec
pop
cli
sbb
jp
jmp
sbb
cmp
retf
enter
jmp
stos
or
fld
or
mov
cmp
dec
pop
sbb
or
mov
or
lahf
xor
out
lods
xchg
inc
scas
push
xor
lods
inc
mov
mov
shl
xchg
je
js
sub
loopne
pop
loop
repnz
sub
dec
div
ret
iret
xchg
inc
push
jmp
in
mov
dec
fs
push
mov
xor
inc
lds
iret
dec
inc
adc
fsubr
adc
rcr
pop
and
jmp
and
jp
push
fidiv
and
arpl
sub
sahf
mov
dec
xchg
sar
adc
pusha
test
in
push
inc
or
in
cmp
aaa
int3
pop
ss
imul
fcmove
mov
call
sub
xchg
iret
call
cmp
and
mov
mov
jae
dec
adc
pop
jp
fscale
mov
loope
mov
sahf
xor
(bad)
ins
mov
jecxz
fwait
mov
mov
movs
sbb
dec
aaa
mov
js
cmp
and
jle
inc
fadd
sahf
js
mov
push
jle
aad
sbb
and
lds
push
popa
ja
dec
dec
sbb
pop
pop
mov
pop
in
xchg
xor
pusha
and
cmps
inc
cmp
jge
mov
jno
sbb
test
fistp
push
sbb
loopne
pop
loope
fnstsw
xchg
adc
arpl
ds
sub
mov
add
mov
xchg
xchg
cmp
or
shl
push
and
add
fmul
fdivr
and
out
inc
adc
dec
call
xchg
adc
(bad)
xchg
or
cmp
test
mov
jae
dec
imul
pusha
movs
enter
push
mov
jo
mov
and
or
push
lea
jno
mov
test
xchg
dec
imul
cmps
scas
nop
xor
pushf
cmp
pop
mov
or
xchg
xor
bound
sub
mov
imul
push
jns
jb
inc
add
sbb
ins
mov
xlat
(bad)
jbe
push
js
mov
and
in
jmp
jp
mov
mov
jle
mov
(bad)
aam
xor
dec
lahf
xor
sahf
or
or
sub
shl
test
lods
mov
jns
push
sbb
lahf
xchg
dec
lds
fist
and
adc
mov
cmovnp
jo
ss
gs
sbb
xchg
iret
(bad)
dec
jnp
enter
pop
call
xor
xor
adc
jp
dec
outs
mov
out
out
(bad)
xlat
hlt
ret
xchg
or
call
hlt
fldenv
cdq
test
pop
dec
pop
imul
(bad)
jge
mov
fistp
mov
outs
jnp
mul
jmp
ins
mov
cwde
iret
cli
loope
daa
mov
jecxz
out
jge
ror
sbb
dec
ja
sub
loopne
jae
(bad)
xor
jle
xlat
inc
and
js
mov
imul
sti
cld
mov
jl
shl
adc
inc
and
int3
jle
nop
das
push
fbstp
xchg
in
repz
mov
mov
jg
outs
repz
js
into
cmp
cmp
dec
psrlq
cli
and
jg
repz
arpl
test
jns
jg
cmp
xor
int
jns
mov
cmp
cmp
jl
jae
(bad)
xchg
nop
inc
(bad)
(bad)
loop
sti
adc
push
imul
sbb
pop
sahf
clc
xchg
aas
in
into
jns
xor
call
mov
add
(bad)
test
dec
mov
sar
mov
mov
retf
or
push
mov
(bad)
xor
mov
in
dec
ins
jmp
xlat
gs
mov
fs
or
nop
dec
pop
leave
and
push
jecxz
mov
jno
int
xchg
adc
mov
cwde
mov
or
(bad)
jl
(bad)
cld
and
in
outs
mov
mov
push
sbb
fadd
sub
out
in
jmp
mov
leave
jo
repz
pop
sar
ja
sub
inc
fnstenv
comiss
inc
and
inc
(bad)
sbb
dec
xchg
mov
push
cmp
loope
ins
push
sub
stc
adc
xchg
test
and
mov
les
int3
inc
fisubr
sti
retf
in
mov
dec
loop
adc
test
add
sbb
data16
inc
cld
sub
mov
pushf
bound
test
cmp
xor
loopne
cmp
dec
lock
dec
outs
push
mov
or
inc
cdq
inc
xchg
push
loop
scas
pushf
jno
es
or
mov
push
repnz
scas
mov
repz
stos
jl
dec
pop
fcmovbe
and
push
xchg
adc
push
adc
fisubr
jb
or
out
dec
jmp
inc
pushw
push
imul
sub
adc
mov
enter
data16
mov
jns
pop
and
add
push
and
mov
repz
and
push
js
xor
jecxz
push
mov
mov
fstp
fcomp
pop
sbb
push
gs
sti
and
jne
movs
jecxz
push
jmp
mov
popf
add
retf
xchg
push
jge
fadd
cmc
mov
mul
pop
fst
sub
or
pop
push
sbb
add
aas
nop
lahf
cmp
sbb
rcr
add
shl
ret
sti
fnsave
jge
push
imul
mov
imul
xor
scas
jbe
fcmovnbe
in
je
cli
and
fiadd
sti
ja
call
jns
sbb
xor
in
pop
popf
mov
cmp
inc
or
xchg
or
jo
pop
or
bound
xlat
and
xor
pop
test
into
(bad)
ja
and
fdivrp
adc
sti
jne
cmc
or
pop
and
cmp
retf
sub
out
(bad)
cld
mov
cmp
inc
pusha
add
test
adc
add
and
or
sahf
xchg
mov
(bad)
mov
cmps
jmp
stos
cmp
pop
imul
pop
out
adc
enter
repz
add
pop
xchg
xor
ins
inc
cmp
stc
into
jns
add
and
mov
dec
jo
test
mov
sbb
sbb
sbb
inc
push
or
mov
or
ins
fbstp
stos
fnstcw
sahf
inc
lahf
std
lods
adc
into
push
fdiv
cmp
mov
add
jmp
out
nop
ret
ins
jmp
push
ret
ss
mov
mov
iret
scas
neg
outs
jp
or
mov
rol
jbe
mov
int
nop
xor
dec
jne
aaa
mov
stos
pop
(bad)
out
mov
adc
iret
pop
clc
adc
sub
rcl
sahf
je
divps
sbb
adc
lea
dec
pop
loope
xlat
pop
mov
pop
icebp
push
mov
jbe
mov
in
adc
ret
jb
or
xchg
push
cmp
and
xor
into
and
add
je
leave
popf
cld
jb
mov
add
or
jl
(bad)
scas
xor
fstp
add
ret
dec
sub
mov
add
inc
scas
ja
pop
fidiv
mov
jns
ja
add
outs
pop
or
mov
int
or
in
mov
dec
sahf
jbe
sahf
std
in
jnp
sti
add
out
mov
imul
in
ficomp
(bad)
push
js
and
out
aaa
aaa
cmp
pswapd
popf
out
sbb
add
js
test
loopne
sbb
xchg
out
out
add
dec
ds
(bad)
jl
cld
or
mov
int
jo
sbb
ret
pop
repnz
mov
sar
ds
std
(bad)
push
ja
add
cmp
xchg
lea
fistp
jle
add
jnp
icebp
sub
xor
outs
dec
ja
retf
push
hlt
js
mov
fsubr
(bad)
sub
out
out
stc
push
mov
or
(bad)
out
fxch
add
cmps
mov
sub
(bad)
out
xlat
jle
rcl
das
add
inc
lock
aaa
jns
out
pop
fdiv
daa
sbb
fcmovnbe
jnp
dec
add
mov
add
js
cmp
jae
dec
jp
js
mov
jnp
daa
add
jecxz
dec
push
add
or
mov
push
push
sub
es
adc
sub
bound
js
inc
sub
jl
pop
or
and
sbb
jge
push
cmp
pop
jns
or
cmps
jge
fdiv
pop
push
pop
sbb
test
push
add
push
ins
dec
add
daa
inc
gs
clc
jnp
js
mov
jge
pop
test
mov
pop
test
push
xchg
daa
cmp
cs
pop
loopne
retf
or
das
sbb
dec
cmp
dec
mov
js
je
add
nop
mov
outs
add
add
add
xor
js
popf
test
xchg
xchg
test
adc
pop
call
xchg
js
push
add
add
or
xchg
dec
jns
call
or
cmp
test
stos
hlt
add
test
pop
push
test
or
clc
mov
mov
iret
out
jl
add
aaa
jns
test
xchg
js
or
mov
jbe
or
addr16
xlat
jnp
pop
outs
dec
rol
jb
sub
dec
mov
int
xchg
jns
mov
loopne
add
xor
cwde
or
popa
inc
mov
xor
cwde
mov
inc
lea
mov
mov
and
cmp
and
or
jbe
mov
push
mov
mov
jmp
sbb
clc
clc
add
ror
add
leave
ja
fdiv
mov
xchg
xchg
int
lea
sbb
inc
add
xchg
adc
dec
sbb
sahf
call
stc
call
pop
pop
mov
rcl
xchg
fisub
and
jno
lea
xchg
sbb
or
dec
rol
jns
popa
pop
cmp
(bad)
mov
dec
enter
js
sbb
dec
test
or
test
jnp
add
movs
jns
mov
call
jle
xchg
mov
add
and
imul
gs
movs
jmp
jle
js
ror
mov
jnp
pop
jb
mov
(bad)
pop
pushf
mov
cdq
push
leave
cdq
(bad)
sbb
cwde
fwait
add
sbb
jb
mov
in
aas
mov
pop
pop
lahf
fnstsw
mov
xchg
push
cwde
xchg
icebp
jns
mov
xchg
cwde
(bad)
fld
enter
xchg
stos
mov
adc
test
pop
jmp
fimul
xchg
imul
sbb
mov
sbb
dec
jnp
leave
ja
stos
xor
or
jns
fdivrp
mov
dec
mov
imul
or
xchg
push
sbb
cdq
mov
cdq
movs
pop
stc
xchg
push
movs
sub
pop
push
pop
ja
pop
jns
movs
out
add
cdq
arpl
xchg
or
pop
xchg
inc
push
cwde
dec
clc
lea
sahf
test
cmp
or
mov
cmp
(bad)
mov
add
and
or
movs
pushf
mov
pop
mov
cmp
jns
push
mov
test
jge
mov
mov
pop
imul
pop
js
xchg
pop
jp
mov
xchg
xor
call
mov
movs
mov
xchg
test
jo
cdq
lds
dec
sbb
sbb
push
call
test
fcomp
fwait
inc
test
nop
cdq
test
jp
inc
sbb
add
enter
xchg
sub
stos
or
add
or
test
loop
xchg
mov
fwait
mov
add
sub
fldenv
mov
std
mov
sub
enter
add
add
scas
inc
mov
shl
mov
es
cmps
clc
or
cdq
fcmovu
mov
sbb
mov
mov
mov
jnp
mov
scas
jb
cmps
mov
xchg
push
mov
xchg
xchg
add
add
or
pop
stos
movs
dec
mov
inc
xchg
mov
mov
sub
cmp
cmp
imul
mov
sbb
mov
fldenv
mov
scas
jl
pop
dec
sti
add
mov
sbb
mov
or
scas
jle
mov
imul
xchg
clc
jmp
js
call
mov
cdq
cmp
ret
fidivr
xor
mov
cdq
mov
pop
add
leave
xchg
xchg
fldenv
mov
xor
sub
mov
(bad)
imul
mov
fwait
mov
mov
sub
stos
mov
jnp
fcmove
pushf
sbb
sahf
mov
pop
add
sbb
xor
cdq
loopne
shr
fwait
loop
mov
jl
pop
in
mov
dec
mov
jae
ficomp
stos
jns
repnz
sahf
jns
jbe
sti
mov
pop
mov
pop
rcl
dec
xor
pop
les
mov
add
loopne
add
fidivr
retf
mov
jo
and
add
cdq
inc
int3
stos
and
mov
add
cdq
mov
jmp
mov
cwde
cmp
enter
mov
cmp
or
cmp
int3
retf
fdivr
ret
cdq
in
mov
int3
lods
int3
cmp
loop
mov
sbb
sbb
fwait
leave
add
dec
mov
rol
xchg
inc
add
ret
ret
cld
jp
neg
lea
leave
jbe
leave
inc
fld
test
xchg
push
enter
leave
aad
mov
cwde
xchg
xchg
in
retf
mov
retf
lods
ins
jns
sub
add
ret
(bad)
dec
pop
lods
add
mov
jl
xchg
xor
je
retf
retf
imul
xor
mov
sub
int
mov
jo
add
into
fstp
mov
mov
sub
shl
(bad)
or
dec
or
fcomp
pop
lds
cld
int3
add
mov
movs
sub
mov
ror
jl
add
in
iret
add
mov
imul
mov
pushf
or
call
ins
(bad)
call
popf
shl
jnp
adc
add
mov
out
int3
xchg
sub
add
(bad)
je
rcr
iret
aas
sub
clc
dec
shr
int3
lods
dec
cmp
fidivr
jne
ds
retf
cmp
cwde
sbb
mov
cdq
out
scas
shr
mov
dec
aad
jp
push
in
shl
xchg
adc
cdq
mov
shl
int3
mov
int
mov
rcr
jl
push
jge
fs
adc
int
lods
ret
rcl
or
jnp
mov
sti
ret
xlat
fimul
dec
fidivr
fmul
mov
rcr
int3
pop
sub
cmp
xor
mov
pop
int3
mov
fcomi
mov
adc
lods
xchg
mov
movs
int
nop
jge
inc
ins
(bad)
cmp
sbb
push
pop
rcl
retf
sbb
adc
inc
inc
add
mov
rol
retf
adc
int
rol
add
lods
fdiv
popf
fdiv
or
les
int3
ficom
in
popf
fsubr
jp
adc
fisub
int3
cli
lods
int
ins
into
pop
int
xchg
popf
loopne
int
lods
popf
shl
popf
enter
push
cs
sbb
adc
call
pop
(bad)
test
enter
lods
loope
sub
jo
shl
pop
rcl
fld
or
(bad)
jmp
setl
or
loope
mov
(bad)
jg
into
mov
fiadd
aad
(bad)
lods
mov
mov
cmp
jecxz
jns
mov
jecxz
jle
fidivr
test
xchg
rol
leave
ins
fist
jle
pop
lods
(bad)
int
xor
loope
fcom
jle
pop
pop
(bad)
mov
sbb
dec
jle
fs
shr
mov
xchg
ret
xor
mov
call
fsubrp
pop
dec
out
out
jmp
ins
loope
push
in
lods
fild
in
outs
fadd
cmp
mov
loope
fild
shr
fmul
fbstp
fadd
in
test
push
loop
or
rcr
inc
(bad)
loop
push
jmp
adc
data16
popf
fimul
lods
(bad)
fst
mov
sub
loop
std
jmp
fucomp
aaa
dec
in
mov
in
std
fld
jecxz
pop
call
sti
(bad)
jmp
sbb
xchg
dec
shl
(bad)
out
fild
shl
in
addr16
sahf
push
jmp
sahf
jmp
pop
out
out
push
loop
fdivp
out
scas
call
outs
(bad)
retf
into
loop
pop
fidivr
jmp
jge
movs
(bad)
out
or
jne
in
repnz
out
ds
pop
aas
lock
in
xchg
mov
add
rol
fsubr
add
jmp
data16
adc
icebp
add
hlt
idiv
ficom
int
mov
cmp
or
out
add
mov
dec
(bad)
(bad)
push
scas
in
ret
out
in
hlt
mov
out
jmp
fimul
neg
fucomip
and
inc
push
outs
(bad)
out
mov
repz
outs
hlt
push
(bad)
lock
add
push
retf
scas
lock
cmp
jmp
mov
idiv
out
int3
dec
cli
into
loop
out
clc
in
div
fdivp
sar
hlt
mov
push
das
test
adc
inc
das
imul
hlt
nop
and
pop
lahf
rol
neg
mov
int3
mul
sti
mov
sti
cmp
clc
popa
ins
cld
mov
stc
push
out
sti
mov
mov
test
cld
pop
dec
cmc
loopne
fadd
in
cmp
sti
sub
fcmovnbe
psubq
out
jg
cli
scas
ud0
psadbw
dec
call
push
add
or
cld
out
push
or
sbb
test
sbb
xchg
xchg
pop
add
mov
mov
xchg
movs
add
xchg
stos
(bad)
mov
stos
xchg
mov
add
movs
mov
xchg
leave
sbb
sub
mov
lods
xchg
test
xchg
mov
inc
rcl
xchg
push
mov
movs
dec
mov
aam
test
jmp
shl
cmp
int3
xchg
xor
and
adc
pop
fbld
push
sbb
mov
cmp
psrad
jb
retf
pop
(bad)
push
leave
pop
lock
fcmovu
sub
xor
popa
push
xchg
cmp
loope
jg
and
jmp
cmp
mov
pop
mov
das
and
cmp
int
xchg
popf
adc
sub
pop
ss
repz
mov
les
jae
retf
ja
leave
xor
ins
add
mov
aad
mov
(bad)
aas
and
icebp
(bad)
retf
push
sub
and
jecxz
mov
popf
popf
mov
das
dec
mov
out
adc
adc
mov
movs
xor
retf
mov
cs
bound
addr16
inc
xchg
outs
xchg
dec
xor
dec
adc
jne
push
scas
adc
sub
push
cmp
sahf
out
push
cdq
push
add
retf
sbb
adc
xchg
sbb
fdivr
mov
add
adc
dec
mov
push
sbb
jo
jne
sbb
mov
pop
add
lods
and
jbe
or
mov
pop
cmp
mov
rol
push
fucompp
je
pop
sub
and
loopne
div
sbb
mov
pushf
cmp
push
shl
xor
dec
dec
add
in
cs
push
pop
test
loopne
dec
add
jbe
mov
jne
add
sub
popa
icebp
mov
mov
pop
mov
cwde
bound
lahf
add
or
pop
pushw
cmp
test
mov
inc
or
test
arpl
lock
out
out
popf
push
(bad)
test
jmp
pop
sub
lds
add
inc
adc
cmp
rol
in
stos
les
scas
mov
scas
push
dec
stos
lods
mov
dec
in
scas
and
sub
or
sbb
sub
xchg
xlat
mov
les
add
imul
fld
test
cs
in
sub
push
mov
push
jmp
xchg
fisubr
sbb
or
(bad)
ds
sbb
js
jns
lahf
jle
loopne
push
sub
mov
mov
jp
out
add
mov
scas
xchg
inc
mov
push
fild
out
mov
mov
ret
scas
in
sti
xor
mov
inc
adc
loop
push
inc
push
jl
add
xor
or
and
sti
inc
cmc
xlat
push
arpl
(bad)
xchg
cmps
push
sbb
fwait
push
arpl
popf
add
movs
les
aad
push
test
xlat
outs
xor
stos
pop
pop
jle
enter
inc
loopne
clc
rol
jbe
dec
add
jmp
outs
pop
xor
cmp
loopne
rcl
and
adc
sar
mov
pop
xor
jnp
push
retf
fisttp
pop
mov
(bad)
jmp
lock
out
adc
aaa
or
pop
mov
sahf
mov
ins
fmulp
xchg
ins
cmp
fnstcw
or
aad
(bad)
push
not
push
outs
cmp
cmp
imul
out
hlt
adc
cmc
jle
loope
scas
(bad)
mov
rcr
rol
int
(bad)
test
add
mov
add
call
add
and
aad
sbb
pusha
fisttp
inc
jmp
repz
mov
sub
add
and
loopne
adc
sbb
and
cmp
shl
inc
sbb
inc
add
add
aaa
ret
pop
div
outs
out
jae
jmp
mov
jge
and
sti
push
add
(bad)
add
mov
scas
mov
in
lods
mov
popa
lea
push
adc
mov
and
sbb
sahf
xor
repnz
xor
dec
(bad)
adc
mov
mov
dec
and
or
call
sar
mov
add
inc
sub
lock
mov
dec
xor
and
xchg
mov
inc
leave
pop
adc
aad
dec
inc
push
repnz
jae
pop
sub
or
add
cdq
int3
popa
inc
push
cwde
jl
es
shl
lods
data16
(bad)
xchg
fwait
call
mov
jbe
repz
(bad)
cld
cmps
cmp
mov
dec
push
call
iret
jle
repz
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
pop
jae
dec
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fdiv
aad
or
es
gs
mov
dec
inc
add
lahf
cli
pop
shl
mov
cmps
in
addr16
leave
and
cmp
gs
sbb
test
inc
lock
cmp
or
pop
dec
dec
push
aaa
mov
outs
jbe
call
in
ss
std
ins
sub
popf
mov
push
or
xchg
mov
gs
outs
lea
test
and
jmp
arpl
inc
mov
repz
dec
rol
test
in
pop
movs
shl
mov
jmp
inc
push
stos
arpl
xchg
idiv
adc
clc
mov
xchg
or
shl
mov
(bad)
scas
test
cmp
adc
mov
arpl
mov
icebp
imul
or
mov
sub
js
aas
out
or
pusha
cli
push
xchg
or
jb
add
mov
repnz
ja
pop
test
and
xchg
sbb
loopne
xor
mov
adc
pop
sbb
adc
add
jo
or
inc
add
and
sub
retf
dec
mov
jo
lods
xlat
xor
xchg
and
inc
fwait
push
retf
jno
fwait
sub
cld
mov
mov
fwait
pusha
test
rol
cmp
push
mov
xor
arpl
sub
movs
xchg
lock
inc
fadd
out
mov
mov
add
mov
lods
(bad)
jae
and
sbb
icebp
jmp
push
aaa
test
add
fabs
sahf
inc
jle
int3
imul
push
jo
cmc
cmp
fldenv
mov
aad
inc
sub
adc
push
(bad)
jle
scas
lea
sub
mov
ins
jo
dec
cmp
mov
fs
sbb
xor
jecxz
sar
mov
adc
and
daa
ja
mov
pop
jg
push
mov
rcr
bound
jbe
jb
jno
outs
pusha
mov
mov
add
jb
xchg
fdivr
jge
in
push
push
sar
jne
mov
mov
mov
cmp
stos
cdq
fcomp
retf
js
sahf
inc
push
inc
cmp
imul
fist
dec
mov
mov
xor
int
(bad)
dec
pop
pop
setg
shr
jge
cmc
es
adc
pusha
js
cli
pushf
fiadd
test
add
out
sub
dec
jmp
xlat
push
dec
cmp
daa
retf
icebp
mov
scas
adc
enter
pop
cmps
out
add
sti
clc
sar
mov
jae
push
(bad)
in
scas
loop
scas
mov
loopne
dec
test
ins
add
or
clc
cmc
inc
mov
ret
pop
ja
repz
imul
sti
mov
arpl
repnz
pop
shl
jnp
inc
ins
stos
cmps
push
shr
push
pop
in
addr16
cmps
add
pusha
data16
in
jl
xchg
cmps
sbb
popa
sbb
push
mov
add
push
int3
aaa
outs
fdivp
adc
jns
jbe
ret
pop
jle
xchg
daa
pop
mov
jp
jne
mov
bound
add
cmp
xor
fucom
pop
addr16
sub
xchg
ins
dec
add
movntq
xor
add
jl
adc
cmp
add
xchg
bound
test
lds
mov
das
out
dec
test
data16
je
pop
(bad)
outs
dec
inc
add
ja
jne
jno
xchg
sbb
xlat
ins
ret
add
jp
imul
(bad)
xlat
adc
mov
and
sub
ja
push
add
fdivr
jge
enter
jae
call
fist
dec
xor
bound
add
xlat
fs
sub
stc
add
mov
mov
mul
js
push
pop
jae
inc
mov
bound
jl
ja
fld
sbb
add
jnp
(bad)
adc
sub
mov
lea
imul
jge
xchg
pop
ss
sub
jns
push
mov
add
imul
jo
jbe
test
mov
(bad)
fs
mov
(bad)
cmp
push
popa
add
sub
jae
jl
pop
lea
jl
(bad)
jno
or
sahf
mov
int
xchg
iret
aaa
jl
test
js
push
jbe
cmps
mov
pop
or
jle
daa
ins
inc
addr16
gs
std
enter
xchg
arpl
push
nop
imul
ficom
inc
div
call
jmp
cmp
movs
cmps
mov
jle
pop
cmp
jl
cmp
add
jle
aaa
outs
mov
jno
ja
jecxz
xchg
jns
xchg
inc
out
fild
in
(bad)
jg
pop
outs
dec
pop
mov
jp
js
add
popa
mov
je
es
cmp
addr16
mov
pop
cmp
mov
push
fs
push
add
outs
sbb
ja
and
mov
enter
ins
xchg
ja
scas
pop
cdq
jbe
push
sahf
inc
fwait
xor
push
cmps
arpl
arpl
sub
stc
xchg
sar
sbb
add
leave
pop
ins
jbe
fild
outs
data16
out
inc
pusha
mov
nop
ror
jne
gs
mul
pop
sub
push
cmps
pushf
mov
jns
clc
pop
sub
jp
sbb
fldenv
jbe
xchg
pop
add
dec
xchg
ja
mov
cdq
je
jne
add
aad
pop
lods
out
or
cmps
add
or
es
xor
xchg
arpl
sub
adc
popa
es
or
pop
adc
xchg
jnp
test
jne
clc
pop
add
lahf
cli
cmps
push
pop
pop
dec
pop
sub
arpl
jle
cmps
jo
aad
in
xor
nop
imul
and
(bad)
mov
jbe
pop
sbb
ss
call
push
jbe
jno
add
cmp
xchg
cmps
bound
push
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
pop
test
call
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
loop
xor
xor
jb
add
add
push
push
xchg
xchg
xchg
mov
mov
rcl
sub
sub
push
sbb
sbb
repnz
cmp
cmp
jp
adc
or
stos
lods
pop
pop
pop
xchg
call
add
dec
dec
int3
retf
data16
adc
fcmovu
xor
sub
ds
jle
mov
in
jmp
je
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
ss
jbe
pop
push
pop
pushf
xchg
pushf
(bad)
fsubr
sub
outs
ins
and
and
ds
jle
lods
scas
lods
pushf
call
push
aam
aam
xchg
les
and
cmps
movs
in
in
ss
jbe
add
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
int3
into
int3
ins
data16
sbb
sbb
(bad)
xor
xor
ds
test
mov
in
out
in
mov
cld
fs
fs
or
data16
adc
sbb
cs
outs
je
ds
jl
test
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
loope
test
or
mov
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
aas
add
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
pop
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
fiadd
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
pop
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
fs
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
cld
pop
push
aas
mov
pop
in
shl
dec
xchg
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
push
mov
stos
mov
add
stos
mov
stos
xor
mov
call
lods
pusha
push
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
or
xor
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
sar
add
cmp
xor
lock
or
sub
scas
loope
add
jmp
xchg
xor
push
mov
and
mov
rol
cmps
pop
adc
mov
xor
mov
stos
mov
jp
adc
mov
dec
xchg
xchg
out
sub
add
jo
daa
cmp
jmp
scas
dec
or
stos
scas
leave
dec
scas
xor
add
or
xor
mov
or
sub
imul
cmps
sub
mov
dec
mov
xor
fwait
mov
mov
and
xchg
add
mov
sub
imul
add
mov
es
add
cli
popf
mov
mov
mov
mov
push
retf
mov
pop
mov
mov
nop
mov
dec
mov
stos
scas
cmp
mov
mov
or
mov
dec
lods
test
mov
mov
sbb
mov
rcl
retf
mov
jo
push
xor
nop
mov
loopne
mov
add
sbb
dec
lods
xchg
mov
loop
mov
sti
mov
stos
mov
fstp
imul
add
mov
sub
mov
shr
or
mov
add
ins
mov
fwait
ja
sbb
xchg
stos
lods
jb
add
xor
jp
add
ret
mov
adc
push
mov
cmp
xor
aaa
add
jp
cli
retf
cmp
adc
les
ret
jp
add
lods
ret
inc
pop
les
jl
repz
push
jl
xor
out
pop
add
or
pop
fadd
push
dec
lds
pop
mov
inc
jl
xor
mov
mov
retf
(bad)
or
js
(bad)
dec
sub
push
jl
or
lds
jmp
add
add
add
(bad)
cmp
jge
movs
pop
xor
loopne
ds
adc
add
mov
inc
leave
xchg
dec
mov
mov
mov
mov
push
retf
retf
leave
jp
mov
jo
fwait
pop
retf
jp
retf
mov
fmul
ret
xchg
sub
xchg
mov
lds
dec
xor
push
shl
retf
repz
(bad)
mov
int3
sbb
or
mov
mov
dec
retf
retf
inc
pop
add
(bad)
scas
mov
mov
add
into
out
ins
retf
pop
rol
xor
add
add
and
jmp
add
fmul
mov
leave
fwait
pop
iret
neg
popf
into
out
or
xor
retf
jp
into
add
icebp
or
adc
rol
pop
retf
iret
sbb
cli
pop
retf
iret
es
adc
add
cvtps2pi
sbb
leave
sub
sbb
int
std
rcr
(bad)
mov
sar
shl
ins
rol
loopne
icebp
cmp
scas
sbb
sub
call
aad
or
mov
ror
retf
mov
adc
push
fst
pop
std
rcr
mov
push
iret
add
and
jge
sbb
iret
(bad)
pop
rol
add
into
and
(bad)
mov
fst
push
cmp
add
int
test
sub
dec
fmul
ror
rcl
int
int
fwait
sbb
mov
stc
cmp
xchg
or
xchg
lods
fnstenv
xchg
sub
sahf
(bad)
(bad)
fiadd
shl
or
mov
into
test
ja
fiadd
xor
fadd
(bad)
adc
fnstenv
stos
ror
mov
shl
ins
fnstsw
iret
cmp
pop
fld
ficom
retf
fwait
dec
sar
fadd
popf
rol
fadd
(bad)
cld
pop
fsubr
fadd
add
mov
xchg
jge
nop
or
fwait
dec
fdiv
ins
retf
ja
iret
fwait
ins
add
sub
jecxz
fsubr
pop
aam
(bad)
cmp
jecxz
fsubr
fstp
retf
or
stos
add
shl
loop
sub
cwde
sub
xor
retf
add
mov
fstp
push
in
ins
fmul
mov
aaa
dec
push
retf
mov
mov
fbld
fsubr
pop
aam
pop
jecxz
fstp
and
into
(bad)
lods
into
addr16
rcl
fadd
(bad)
ins
retf
push
(bad)
in
nop
leave
push
outs
shl
dec
in
(bad)
or
out
std
fbstp
fbstp
loope
dec
loop
pop
retf
lds
ds
fucom
jp
aam
fmulp
cmc
or
and
xchg
test
(bad)
push
dec
(bad)
out
out
cs
inc
in
js
into
sub
inc
fidiv
fcom
into
fisttp
fldenv
pop
out
in
iret
ds
inc
pop
fcomip
std
loope
into
out
mov
mov
fnstsw
frstor
jle
and
jmp
fucom
neg
fsub
jo
fs
movs
ins
fbld
push
in
enter
into
fistp
mov
repnz
js
aad
in
shl
shr
add
into
aad
into
into
or
in
cs
sub
call
sahf
call
ds
and
out
loope
in
inc
jge
addr16
out
cmp
int
push
lock
lock
lock
outs
fdiv
call
inc
stos
sbb
fcomp
loopne
out
jmp
add
fnsave
add
sub
dec
int
add
repnz
add
scas
in
neg
repz
out
call
out
(bad)
pushf
fisubr
call
pushf
fmul
pop
(bad)
in
mov
mov
hlt
leave
outs
out
lods
dec
(bad)
iret
out
and
in
mov
(bad)
adc
in
push
scas
fcomp
rcl
int
out
or
loope
loopne
aas
stos
and
sbb
(bad)
xor
inc
(bad)
sti
sub
cli
in
iret
jmp
in
jge
stos
ds
dec
pmaxub
jge
push
mov
mov
add
(bad)
fsubr
fadd
push
fiadd
popf
sahf
not
out
in
scas
dec
imul
stos
sub
add
add
pop
sar
paddsb
jecxz
push
lock
ds
pop
iret
fcom
not
iret
fsubr
fimul
clc
ret
pop
clc
jmp
clc
mov
cli
imul
paddb
mov
shr
outs
loope
mov
in
sub
fnstsw
mov
repnz
jg
push
aas
out
cmps
into
(bad)
test
cld
and
in
sahf
mov
xchg
(bad)
dec
stos
push
add
and
loopne
rcl
xor
and
mov
push
pop
mov
and
enter
cwde
imul
push
mov
imul
or
dec
dec
push
mov
xchg
mov
inc
stc
sbb
imul
fdivr
test
and
jnp
mov
mov
sbb
mov
fisttp
pop
into
int3
pop
dec
pop
jnp
fistp
mov
push
bound
sbb
call
aad
mov
and
and
setg
(bad)
movhps
push
leave
sahf
mov
sub
je
dec
pop
mov
test
mov
movs
cdq
xor
into
dec
jne
pop
sub
and
leave
scas
pop
mov
mov
in
push
and
lds
out
jp
fdivr
ins
mov
sub
sub
dec
scas
dec
xchg
icebp
in
inc
xchg
out
sbb
xlat
adc
lds
(bad)
adc
(bad)
jle
sbb
pop
cmp
xor
mov
fdiv
mov
push
or
sub
icebp
movs
sahf
arpl
sub
mov
mov
xor
shl
add
pusha
dec
mov
push
xor
nop
fdivr
xlat
xchg
les
adc
outs
or
int3
mov
pushf
adc
out
sub
push
mov
fld
lds
ror
and
cmc
cmc
rol
push
outs
aaa
mov
lock
xchg
in
imul
mov
jg
or
inc
or
popa
stc
hlt
fnstsw
jns
lds
test
fs
rcr
pop
pop
pop
adc
mov
xchg
test
sub
inc
loope
mov
bound
lds
fcom
aaa
push
jg
cli
mov
arpl
push
xchg
not
in
jo
cld
adc
push
xor
push
(bad)
arpl
xchg
in
push
cs
jbe
js
lds
dec
sbb
xchg
(bad)
jecxz
ret
xor
sbb
lea
repnz
cmp
ja
(bad)
cdq
loopne
ds
sbb
inc
sub
jle
loope
loope
jb
mov
ins
lea
sub
push
sub
add
dec
pop
sbb
lea
ss
clc
test
(bad)
and
ret
lahf
push
sub
mov
mov
cwde
adc
push
adc
das
push
test
cmps
test
loop
xchg
ins
sub
or
bound
arpl
mov
or
test
xchg
push
ss
jg
adc
push
daa
and
jmp
test
jmp
mov
movs
mov
inc
cmps
pop
imul
sub
ficomp
cmps
leave
and
dec
ret
test
pop
sbb
js
repz
mov
std
pop
rol
das
dec
shr
xor
test
call
sub
ret
mov
and
lock
jl
inc
push
scas
pop
scas
mov
push
lods
pop
pushf
retf
dec
icebp
outs
leave
aaa
outs
and
jecxz
nop
mov
call
retf
dec
aam
(bad)
in
mov
les
cmps
and
or
push
rcr
fsubr
dec
loopne
mov
cmps
jecxz
out
inc
mov
xchg
mov
fcomp
ins
test
sti
cmp
cmp
pop
mov
pop
fdivr
hlt
loopne
and
ror
jae
inc
jmp
loopne
pusha
add
jmp
mov
mov
xchg
into
cmp
ds
cmp
xor
sub
push
and
or
xchg
pop
cmp
das
pop
or
(bad)
aad
cmp
lods
cmp
jl
cli
pop
out
mov
ficomp
adc
idiv
test
xchg
(bad)
je
or
std
cmp
cmp
jmp
fnsetpm(287
xlat
popf
into
popa
scas
jl
add
loop
test
or
jl
jae
sub
push
outs
jno
(bad)
fadd
push
test
lahf
repz
mov
ret
and
sar
das
jle
xchg
loope
mov
sub
pop
idiv
call
or
pop
adc
xchg
push
ret
sti
pop
adc
xlat
cmp
pop
shl
aam
sbb
xchg
add
ret
clc
mov
sub
fdivrp
(bad)
and
dec
xchg
cld
and
les
jae
rcr
sbb
call
in
jmp
js
and
inc
and
add
sbb
push
jl
test
dec
cdq
inc
mov
jmp
and
enter
das
xchg
adc
adc
pop
jb
push
shl
add
(bad)
pusha
(bad)
outs
xchg
pop
loope
mov
mov
pop
xchg
imul
cwde
and
mov
or
cdq
das
jg
leave
iret
pop
mov
fist
(bad)
loopne
loopne
cmps
fnstcw
(bad)
sub
adc
adc
mov
js
outs
push
dec
jp
shl
cmp
dec
add
out
sub
xchg
inc
sbb
xor
scas
cmp
sbb
retf
push
mov
xor
cmp
push
jns
push
rcl
and
cmp
mov
xchg
and
xchg
mov
jg
popf
test
mov
adc
gs
repz
inc
mov
addr16
pop
clc
push
xor
sub
cli
dec
mov
cld
jmp
jne
hlt
cmps
pop
aam
sub
push
imul
jle
or
push
ret
mov
adc
push
inc
mov
xchg
add
leave
dec
xor
xor
ds
cwde
and
or
fs
xchg
xchg
arpl
shr
test
pusha
add
add
dec
aam
into
mov
adc
ins
inc
mov
fsub
mov
and
xor
push
std
loope
xor
xchg
stos
sbb
sub
cmp
repz
loopne
push
lea
mov
mov
int
cmp
pop
adc
lahf
pop
idiv
shr
loop
mov
rcr
enter
ins
scas
add
retf
adc
lds
fisubr
aam
lods
xchg
mov
push
jo
sar
shr
mov
lea
push
add
xor
or
add
test
imul
push
loope
stos
pop
sbb
add
fwait
pop
test
stos
and
inc
mov
ret
sub
push
push
adc
sub
add
add
and
cmp
add
push
pop
test
sbb
mov
pushf
dec
adc
mov
pop
cmp
test
jle
js
stos
dec
mul
rol
and
jnp
mov
push
out
sbb
sahf
sub
in
scas
pop
ret
xor
sub
leave
jno
test
mov
clc
cwde
xchg
sub
rcl
sub
dec
pop
cmp
movs
add
xor
sbb
add
pop
call
cmp
or
and
inc
sub
mov
into
inc
movs
sub
mov
pushf
add
cmp
lahf
ds
pop
ins
gs
pusha
lock
mov
fcmovnu
(bad)
mov
ret
mov
(bad)
adc
push
add
mov
iret
fiadd
xor
out
jbe
mov
mov
sbb
rcl
in
add
movs
das
mov
loope
data16
iret
popf
loop
sub
fbstp
mov
cli
lods
outs
pop
sbb
loop
mov
stos
jge
jo
xor
mov
test
aam
lahf
jns
push
push
out
outs
out
mov
sbb
test
ss
and
sbb
mov
rcr
mov
pop
call
movs
push
add
sbb
pop
and
xchg
mov
call
jp
out
movs
sbb
cmps
cmp
mov
pop
add
inc
adc
jae
das
adc
jo
fisttp
pusha
div
sar
push
nop
jnp
test
add
div
pop
cli
(bad)
ja
mov
mov
add
mov
pusha
test
jl
lock
and
push
js
out
psubd
mov
shl
popa
test
xchg
enter
pushf
xlat
mov
in
xor
pop
call
out
shr
add
mov
psrad
add
mov
jl
neg
out
scas
bsf
aaa
(bad)
enter
sub
outs
lods
fcmovnbe
ret
push
inc
or
(bad)
jle
jge
inc
inc
jns
pop
jae
pop
jae
inc
or
js
jns
inc
sbb
pusha
rol
jle
test
mov
out
ja
out
xchg
daa
add
and
daa
js
fdivr
xor
ja
add
and
xchg
xor
jne
inc
xor
sub
(bad)
daa
add
add
cmp
dec
mov
pop
loopne
mov
fadd
ja
(bad)
mov
sub
jge
cwde
test
pushf
addr16
fsubr
mov
out
add
or
add
inc
or
add
or
pop
jle
mov
js
ja
mov
test
push
sbb
xlat
and
jle
mov
or
xor
sub
or
xor
daa
outs
add
add
add
shl
jns
clc
jnp
daa
mov
lods
test
sub
mov
sbb
js
mov
push
mov
jp
add
jo
push
add
ret
call
push
cwde
jns
push
or
mov
add
cmps
test
adc
or
dec
mov
loope
mov
mov
jg
xchg
add
cmp
retf
in
test
dec
sub
sub
push
and
js
inc
ja
mov
sti
test
mov
jo
mov
push
cmp
add
jnp
push
nop
or
xchg
mov
nop
movs
sbb
or
aam
xchg
and
nop
xlat
mov
nop
push
mov
ja
mov
ret
dec
and
mov
mov
mov
mov
mov
and
js
movs
and
dec
pop
js
push
lods
push
xchg
inc
push
xchg
fldcw
nop
inc
leave
jns
daa
push
push
jo
mov
add
adc
imul
xchg
or
mov
test
adc
xchg
sbb
mov
sub
or
sub
xor
mov
ins
cdq
cmp
cdq
xchg
inc
addr16
inc
mov
push
dec
mov
cdq
dec
lock
(bad)
sbb
fld
pop
mov
xchg
cdq
(bad)
fwait
dec
jns
mov
test
cwde
(bad)
loopne
cmps
pop
xchg
imul
leave
xchg
xchg
sbb
xor
jb
sbb
dec
mov
in
jae
nop
ja
cdq
bound
xchg
push
js
sbb
pop
cwde
mov
xchg
jle
dec
xchg
lds
push
push
or
jb
dec
mov
mov
test
add
lahf
fs
popf
aam
ja
rcr
pop
jl
cdq
mov
push
adc
jb
pop
jo
test
mov
cmp
leave
xchg
push
jns
mov
mov
retf
jns
test
ror
out
mov
arpl
movs
fsub
or
pop
lahf
add
xchg
(bad)
ss
lahf
cmp
and
aas
dec
popf
jmpw
xchg
xchg
aad
mov
cdq
aaa
push
cmc
jns
cmps
mov
dec
jbe
pusha
xchg
add
or
mov
mov
clc
cwde
sub
fwait
pop
jne
(bad)
push
adc
ror
mov
imul
mov
jmp
shr
jns
mov
sbb
test
push
push
pop
call
in
sub
mov
dec
mov
call
mov
sub
pop
fwait
xor
dec
test
lahf
mov
call
add
xchg
in
cmp
jmp
fmulp
mov
xchg
mov
cmps
scas
mov
mov
dec
loopne
mov
stos
inc
cdq
cdq
cmps
pop
(bad)
mov
sub
sub
add
pop
scas
mov
jae
sbb
push
mov
xchg
and
movs
idiv
mov
stos
cmc
dec
mov
call
mov
cdq
jo
mov
stos
add
or
xchg
sbb
pushf
mov
das
cmp
mov
inc
add
retf
xchg
enter
dec
or
scas
sbb
and
es
xchg
pcmpeqw
cmp
stc
mov
test
fisttp
or
out
push
mov
sub
pop
test
mov
mov
mov
xchg
pop
cmps
add
call
jae
mov
dec
fwait
adc
lods
mov
cwde
xor
lahf
jle
xchg
jo
fsubr
and
shl
cli
fwait
or
mov
fidivr
cmp
test
retf
dec
cmps
inc
mov
sar
sar
xchg
ds
call
add
push
add
call
push
inc
mov
fwait
xchg
add
xchg
push
fstp
jp
add
cdq
sub
dec
mov
jnp
pop
mov
fimul
dec
dec
mov
add
cmp
xor
rol
sub
mov
mov
gs
mov
sbb
sti
sti
mov
mov
and
or
lock
pop
xchg
(bad)
mov
jns
xor
add
mov
sub
mov
inc
pop
loopne
bnd
and
mov
jle
mov
pop
rcr
add
out
adc
out
dec
rcl
ret
dec
fadd
cwde
dec
add
bound
cmp
or
ret
fisubr
pop
sbb
sahf
jmp
lods
jp
jmp
sbb
dec
sub
pop
cmp
bnd
add
inc
cmp
mov
(bad)
or
rcl
ret
cdq
mov
int3
mov
pop
leave
int3
or
or
add
mov
mov
mov
jg
mov
jnp
cwde
lods
les
lods
leave
scas
dec
les
sbb
mov
mov
sbb
cmp
int3
inc
lock
(bad)
mov
int3
(bad)
in
lods
add
add
pop
or
xchg
scas
or
leave
ins
mov
mov
or
xor
cmp
add
pop
ret
int
jmp
add
pushf
mov
pop
mov
cdq
mov
lods
call
in
pop
mov
leave
or
sub
test
int3
push
dec
mov
popf
int3
enter
pop
sar
sub
or
pushf
test
adc
cmps
xchg
sbb
ins
dec
pop
loopne
mov
in
add
mov
(bad)
xchg
cmp
movs
cmp
push
pop
shl
lea
ins
xchg
les
aam
int
or
outs
or
mov
leave
loop
ret
mov
sub
adc
shr
dec
les
aad
or
inc
ins
(bad)
mov
les
into
sti
jl
jae
shl
popf
(bad)
cmp
retf
popf
inc
sbb
dec
mov
or
inc
std
mov
(bad)
dec
or
or
sbb
adc
leave
pop
(bad)
pop
leave
sub
ret
int3
inc
std
int
(bad)
loopne
mov
jge
aas
in
add
or
call
aam
popf
fadd
pop
mov
jge
adc
les
into
sub
mov
shl
into
cmps
jns
mov
nop
cmp
mov
mov
les
or
rol
aam
cmp
inc
inc
push
ret
mov
lahf
fstp
ret
fdivr
sub
jecxz
fsub
(bad)
shl
(bad)
popf
(bad)
les
pushf
int3
fsubr
int
imul
call
iret
mov
aad
int
dec
popf
fmul
ins
mov
int
dec
ins
mov
cmp
ss
xchg
or
push
dec
pop
jl
aam
cmp
cmp
loopne
fcmovb
pop
ficomp
int
jo
sar
jl
fstp
mov
shl
ins
in
(bad)
fdivp
int3
jecxz
sub
pop
mov
and
or
call
ret
sub
out
jge
push
out
in
popf
mov
sbb
inc
add
std
faddp
or
mov
push
aas
add
dec
cld
(bad)
xor
add
aam
(bad)
aam
std
fcom
fsubr
sub
cmps
pop
iret
jbe
fisub
ds
push
out
dec
fneni(8087
pop
out
mov
xor
push
call
push
jmp
pusha
jle
mov
cdq
mov
hlt
std
out
sub
outs
loopne
sbb
out
fstp
dec
sahf
fbld
(bad)
xchg
jmp
(bad)
jmp
pop
jmp
outs
fidiv
pop
dec
fimul
loope
sahf
fistp
fcomp
(bad)
jle
retf
fist
pusha
dec
in
mov
push
out
fld
out
mov
lods
out
loope
and
data16
jmp
(bad)
out
retf
stos
fucom
jno
loop
mov
pusha
mov
mov
jecxz
pop
jmp
pop
std
jmp
enter
(bad)
lock
loopne
popf
jmp
add
out
setg
cld
sahf
shl
out
sub
mov
repnz
push
fidivr
mov
inc
jns
fidiv
xchg
dec
in
mov
cmps
popf
bnd
jecxz
xor
add
fdivr
add
jmp
cs
push
(bad)
je
sar
out
cmp
pop
xchg
xchg
pop
jmp
(bad)
out
popa
pop
add
sub
or
out
inc
push
cmc
inc
popf
icebp
inc
(bad)
into
pop
fcomip
ins
psadbw
xlat
mov
outs
aas
call
mov
dec
or
pop
pop
mul
sahf
fucomip
ds
pop
clc
fisubr
cmc
adc
push
fucomip
fsin
mov
repnz
lock
add
sbb
out
sbb
out
pop
clc
daa
les
hlt
mov
stc
sub
jmp
dec
repnz
out
out
movs
ds
fcomi
inc
push
not
clc
dec
outs
clc
lahf
out
out
cmp
or
cli
mov
shl
(bad)
or
xchg
pop
scas
hlt
arpl
out
sbb
test
add
test
out
sbb
rcr
stc
pop
pop
clc
xor
mov
push
cmc
pop
mov
fstp
std
xlat
scas
stc
les
add
test
cmc
out
jg
outs
(bad)
sti
mov
int
pop
clc
movs
lahf
std
mov
std
jmp
or
add
add
and
cs
mov
pusha
add
xchg
mov
mov
mov
mov
test
xchg
xchg
fwait
lods
call
mov
ret
add
mov
mov
mov
cwde
(bad)
fdivr
movs
mov
in
scas
(bad)
(bad)
lods
test
int
les
mov
iret
ficomp
inc
mov
sub
mov
push
out
push
rol
cmc
sahf
sub
aas
pop
add
jne
inc
int
rol
sub
mov
enter
lds
inc
imul
xchg
inc
add
imul
push
sbb
dec
rcr
mov
lds
fcmovnbe
xchg
loope
stos
add
sbb
dec
(bad)
stos
test
test
xchg
pop
and
add
dec
jg
mov
in
imul
inc
test
loop
add
and
div
push
stos
aam
inc
mov
mov
loop
sub
leave
fwait
pop
sbb
jl
fnstsw
push
movs
in
fstp
dec
das
pop
cmps
fld
sahf
sub
ds
dec
mov
jno
lds
inc
inc
add
cs
popf
dec
in
cmc
mov
push
popf
retf
retf
icebp
jb
add
mov
jns
das
jp
push
dec
adc
repnz
in
jl
pop
xchg
or
ins
jmp
ja
data16
mov
ja
pop
movs
xchg
jg
xor
pop
dec
ror
loopne
shl
pop
loop
enter
ins
sbb
xchg
ins
fcomp
das
adc
xor
sbb
jb
xor
cdq
cmp
sub
xchg
push
icebp
int
ficomp
gs
fstp
mul
fcomp
bound
inc
mov
lds
lahf
cmp
int3
push
in
hlt
test
shl
xor
je
pop
leave
or
adc
sub
ret
cld
mov
fstp
add
inc
push
jae
jns
ja
adc
xor
je
ds
sahf
test
xchg
sub
shl
dec
or
(bad)
nop
ret
xor
inc
ja
mov
call
leave
ret
mov
test
add
lahf
enterw
mov
jecxz
mov
jmp
add
pusha
jmp
xchg
mov
adc
add
adc
add
push
inc
popa
lds
add
push
jnp
add
pop
mov
push
cwde
imul
in
mov
mov
neg
lods
cmps
push
lods
sub
cmp
jmp
mov
mov
adc
or
xor
jmp
in
mov
fcom
ret
push
sub
std
push
push
inc
mov
popf
out
jbe
ins
mov
rcl
sub
scas
imul
scas
pop
xchg
addr16
xor
(bad)
in
inc
mov
scas
sub
addr16
movs
movs
outs
int
cmovns
int3
(bad)
fldenv
mov
or
or
in
mul
mov
(bad)
int
inc
test
scas
push
inc
mov
jge
add
mov
cli
and
jbe
scas
repz
mov
xor
adc
fnsave
stc
fldenv
sbb
xchg
mov
cmps
mov
test
fisubr
push
stos
add
js
sub
outs
inc
push
jb
cs
cld
in
adc
pop
pusha
jp
mov
jg
pop
imul
mov
std
cmc
pusha
dec
sar
cmp
mov
jl
pop
cmp
in
push
lock
out
mov
rcl
inc
cmp
pop
mov
call
test
popf
cli
and
xor
adc
sub
fcomip
push
js
std
and
jl
jp
push
ja
mov
pop
mov
stc
aam
or
nop
iret
add
loope
pop
js
adc
iret
add
rcr
add
push
xchg
js
out
sub
and
xor
rol
mov
daa
test
xchg
mov
mov
and
adc
enter
movs
mov
mov
xor
jecxz
enter
pop
scas
or
or
xor
jecxz
mov
push
adc
popa
(bad)
outs
jecxz
sbb
mov
sub
in
mov
pop
ret
jo
imul
dec
add
xchg
jnp
(bad)
and
mov
in
shr
dec
cmps
sub
and
jbe
adc
and
(bad)
or
idiv
and
cmp
ss
cmps
mov
andps
inc
mov
ja
or
and
mov
sar
xor
jb
mov
and
test
xor
out
cmp
xchg
(bad)
ror
arpl
popf
loopne
daa
cmp
dec
iret
jp
xor
idiv
jle
rcr
jmp
mov
adc
rol
lea
mov
mov
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
xchg
sub
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
(bad)
mov
inc
pop
mov
fldcw
jo
push
xchg
inc
test
adc
pop
in
imul
mov
adc
push
pop
push
mov
cmc
lods
push
pop
mov
or
add
stos
add
pop
push
mov
lods
ins
push
push
sub
push
in
ins
jne
jmp
xlat
xor
mov
mov
pop
aad
xlat
mov
in
ins
js
fcmovnu
idiv
jge
push
into
cmp
sahf
cmp
pop
and
push
mov
or
and
outs
and
sar
outs
push
add
(bad)
out
xchg
or
jle
adc
pusha
and
(bad)
jecxz
pop
(bad)
cmp
xchg
adc
pop
or
rcl
mov
ins
fisttp
xor
adc
add
adc
mov
div
ins
ja
bound
out
mov
cmps
icebp
je
jo
stos
sub
and
xchg
test
hlt
popf
jo
ret
jnp
sub
mov
mov
cdq
mov
ds
out
or
or
add
add
cmp
retf
call
or
jns
push
push
xor
xlat
sbb
dec
and
adc
mov
add
jae
adc
sub
sar
sbb
retf
sbb
(bad)
sub
ret
pop
jle
sbb
cwde
mov
push
add
pusha
add
test
pop
addr16
retf
cmp
push
js
xchg
retf
lods
gs
das
sbb
int
pop
jg
shr
mov
add
in
fild
jae
(bad)
ins
(bad)
lods
cmp
add
mov
pop
pop
(bad)
lahf
out
mov
ja
test
jb
xchg
sbb
arpl
jo
sbb
ins
ja
rol
dec
cmc
cwde
std
cmp
pop
aas
fdivr
jns
ins
sbb
ror
inc
hlt
xchg
jge
imul
mov
push
popa
repz
(bad)
je
jno
call
aaa
and
fisttp
int3
push
add
mov
repnz
pop
sbb
pop
(bad)
mov
xchg
or
or
stos
cmc
mov
fisttp
in
ret
loopne
xor
(bad)
xor
pop
or
aas
sub
sar
lock
int
sbb
add
jge
test
pop
dec
sub
jmp
mov
scas
ret
sti
pusha
and
pop
jecxz
data16
add
fs
jb
mov
jbe
cmp
(bad)
pop
push
outs
fstp
loope
push
push
fild
push
cmp
adc
nop
fstp
push
ins
sti
fisttp
cmp
mov
add
mov
ins
sbb
jl
xchg
push
out
enter
inc
mov
pop
push
inc
cmc
adc
cmps
jne
in
fstp
leave
jns
jae
adc
or
mov
and
jge
xor
cwde
add
outs
mov
xchg
dec
imul
lock
dec
push
arpl
stc
repz
mov
fcomp
iret
sbb
int
cmp
cmp
sahf
ror
ret
sar
stc
(bad)
out
adc
pop
(bad)
shl
pop
mov
arpl
jb
(bad)
jnp
ss
pop
ins
loope
imul
(bad)
movs
jg
(bad)
cmp
add
imul
es
aaa
lds
jg
xchg
pop
xchg
xor
mov
sub
jno
add
test
jge
imul
daa
jne
test
mov
imul
jbe
sbb
imul
add
push
sbb
je
cmps
outs
stos
inc
ja
cwde
jae
adc
jbe
pop
ss
(bad)
jno
lock
xor
jge
cmps
add
mov
gs
jno
inc
pop
(bad)
ja
dec
clc
pop
dec
mov
clc
pop
inc
mov
push
clc
jns
out
jne
jl
aaa
xchg
push
push
add
jb
es
(bad)
jo
cwde
jbe
xchg
add
sbb
popa
mov
jb
ja
mov
addr16
enter
jne
or
xor
das
xchg
add
arpl
outs
inc
adc
test
addr16
xchg
cwde
push
push
push
cmp
push
shr
js
data16
mov
addr16
push
and
ins
daa
ins
int3
fsubr
xchg
test
es
pop
jl
js
aaa
mov
pop
rol
jle
test
xchg
and
adc
adc
jns
aaa
ins
dec
cmp
xchg
sub
pop
retf
outs
call
add
cwde
jg
mul
push
fdiv
adc
imul
pop
ficomp
ins
pop
es
outs
aaa
loopne
or
mov
clc
jo
test
xchg
ja
dec
mov
shl
sub
xchg
imul
fadd
jge
mov
xchg
imul
adc
je
jo
sbb
js
shl
or
xchg
jg
xchg
(bad)
imul
mov
xchg
pop
es
xchg
adc
jle
pop
jb
push
jno
mov
ja
lods
xchg
sub
sub
add
jg
pop
outs
mov
xchg
lock
xchg
call
or
mov
jnp
dec
pop
adc
(bad)
enter
call
mov
mov
pop
div
pop
mov
imul
add
fs
xchg
push
sbb
add
push
sbb
pop
xchg
jo
idiv
enter
call
pop
jns
test
add
inc
(bad)
mov
mov
pop
jp
cwde
jb
loopne
loope
xchg
push
nop
pop
jp
jne
(bad)
gs
and
add
xor
cwde
jbe
xor
jmp
mov
and
xchg
jmp
aaa
leave
jnp
stc
sahf
aaa
sbb
test
lahf
inc
add
sbb
push
lods
push
mov
jns
loop
pop
mov
push
das
aaa
mov
jo
out
dec
fcomp
not
cmps
add
popf
gs
xchg
inc
loopne
xchg
or
and
inc
sub
jbe
stc
js
push
fldcw
mov
jbe
enter
mov
ss
sub
sbb
mov
jg
jbe
add
add
(bad)
outs
popf
(bad)
ins
pop
xor
add
mov
imul
mov
imul
push
mov
outs
retf
mov
cmps
lea
inc
loopne
jo
push
in
adc
cmps
jns
test
fisubr
sbb
pop
test
call
test
sbb
pop
stos
cmps
jp
xchg
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
add
popf
cli
sub
mov
add
dec
add
push
scas
fild
inc
cmp
push
mov
stos
mov
sub
mov
retf
mov
stos
mov
sub
cmp
jmp
cmp
xchg
mov
iret
or
mov
lods
mov
fstp
sbb
retf
mov
fwait
mov
and
and
jmp
add
add
sbb
dec
lods
mov
ficomp
jmp
mov
pop
mov
jmp
add
mov
(bad)
sub
cmp
fstp
nop
mov
dec
scas
pop
lock
cmp
mov
cmp
xchg
mov
lock
shl
shl
mov
(bad)
lock
push
adc
push
add
sbb
xor
xor
ret
ret
add
sub
cli
retf
mov
xor
enter
les
pushf
ret
cmp
mov
or
xor
les
ret
out
jp
int3
imul
cmp
push
sbb
dec
jmp
dec
sbb
mov
add
mov
pop
and
or
add
mov
sti
(bad)
outs
in
ret
push
lds
dec
(bad)
aaa
lods
(bad)
jg
mov
jl
ret
je
scas
pop
xor
loopne
cmp
mov
xor
inc
shl
enter
mov
add
xor
or
xchg
jl
movs
in
enter
pushf
jl
(bad)
jl
inc
ins
retf
mov
rol
(bad)
fmul
jp
retf
mov
pop
retf
leave
mov
cwde
mov
dec
shl
retf
dec
mov
mov
mov
(bad)
out
clc
int3
xor
int3
or
xor
stos
cld
enter
mov
add
into
call
add
add
nop
retf
add
int3
leave
idiv
cld
enter
out
or
mov
into
jmp
sar
dec
shr
in
retf
int
pushf
shl
stos
into
jmp
rol
into
xor
iret
jmp
leave
test
iret
out
enter
leave
dec
adc
and
jp
int
popf
rcr
pop
retf
add
mov
and
rol
mov
or
lods
sub
jp
rcr
or
lods
cmp
or
inc
dec
rol
jge
cmp
xchg
or
into
jecxz
aam
jge
push
or
sub
inc
cmp
add
jl
pop
and
cmp
jmp
adc
in
shr
iret
cmp
sar
mov
sti
int3
inc
jge
sbb
shl
lods
xlat
outs
cmp
dec
(bad)
into
ins
cmp
call
int3
jg
fdivr
aam
std
mov
or
xchg
add
lods
fadd
into
cmp
push
in
ror
xlat
sar
popf
fimul
mov
scas
xchg
jge
pop
sbb
pop
push
fdivr
cld
ins
les
shl
retf
mov
(bad)
pushf
(bad)
mov
fcomp
add
mov
cmp
rcr
fstp
cmps
int
lods
int3
int
sbb
outs
sub
fwait
lods
into
jg
fcomp
lods
fadd
sub
mov
enter
hlt
popf
xlat
out
int
jge
fmul
jnp
add
fdivr
call
fild
inc
mov
dec
in
(bad)
bnd
mov
fstp
fabs
sbb
mov
mov
adc
(bad)
mov
lea
movs
lods
iret
ja
int
or
daa
xor
fstp
add
das
push
push
pop
mov
sub
fisubr
mov
daa
fsubp
hlt
in
rcl
fsubp
cmp
loopne
shl
leave
dec
jle
inc
mov
dec
dec
cs
in
rcr
pop
(bad)
push
(bad)
out
jge
outs
sub
sub
xor
(bad)
fsub
aam
dec
jecxz
scas
retf
loopne
sub
test
fdivrp
pop
(bad)
ins
retf
fidivr
into
in
pop
retf
sbb
in
sbb
xchg
int
repz
fcomp
fsubp
stos
ins
iret
aam
add
stos
sar
add
dec
fistp
fsub
pop
pop
retf
cmp
and
fadd
push
loope
lods
loope
cld
loope
pop
aad
sbb
push
pop
retf
jecxz
loope
ins
add
fs
add
dec
jge
lahf
scas
jmp
test
lods
mov
pop
jle
pop
std
loope
mov
xor
xchg
ffreep
mov
cmc
pop
in
push
fmul
(bad)
loopne
push
jmp
lods
in
sahf
in
sti
(bad)
out
popf
out
(bad)
loope
out
jecxz
mov
stc
ds
repnz
(bad)
repnz
in
mov
jmp
mov
push
ds
jecxz
in
fsub
add
lods
retf
stos
pop
adc
pop
mov
push
mov
mov
stos
pop
add
pop
dec
icebp
out
scas
out
add
xlat
out
in
pop
sbb
mov
fdivr
fst
icebp
stc
sahf
in
pop
ins
(bad)
scas
sar
fucomip
fdivr
repnz
in
push
sahf
in
fidivr
iret
mov
call
jg
xor
out
ror
fisubr
neg
cmc
pop
aas
stos
sbb
xchg
jge
xchg
lods
out
js
jmp
add
push
dec
test
(bad)
hlt
daa
jle
out
retf
repnz
icebp
imul
and
jmp
lahf
aad
pop
out
outs
lock
mov
add
xor
pop
add
popf
in
cs
icebp
xchg
(bad)
stc
ds
shr
out
test
repnz
lock
leave
outs
jmp
lods
(bad)
inc
sahf
fdiv
jmp
lahf
push
cli
jle
sti
cld
fdivr
lds
sti
sbb
jno
retf
mul
dec
not
fisubr
hlt
pop
out
repz
fidivr
stc
add
cld
jmp
fcomip
or
std
mov
add
call
push
jmp
shr
repz
das
(bad)
cmp
test
sub
push
mov
stc
enter
mov
cmp
jmp
in
dec
cli
sar
mov
(bad)
enter
and
dec
jmp
add
cli
cmp
pop
cmp
sub
jmp
dec
or
retf
sbb
dec
mov
sub
cmp
fdivr
ret
cmp
cmp
ficomp
aas
dec
into
arpl
pop
sub
fucomp
mov
mov
bound
mov
mov
in
std
inc
lds
mov
pop
es
retf
xor
mov
sub
leave
sbb
retf
or
or
fnsave
mov
jne
cdq
shr
adc
test
test
and
lds
lds
mov
xchg
mov
fndisi(8087
fdiv
cmp
mov
arpl
pop
and
inc
mov
and
inc
pop
xor
and
movs
mov
fcmovbe
pop
sti
shl
dec
je
xor
add
shl
or
mov
sub
stos
push
cld
or
inc
inc
mov
nop
adc
cdq
push
pop
call
das
mov
mov
ins
dec
mov
or
jecxz
popa
loope
ficomp
push
mov
stos
add
xchg
aad
push
sub
jno
das
test
push
cmc
div
xor
dec
(bad)
imul
mov
xchg
fmul
cdq
ins
and
inc
jge
adc
loope
sbb
ror
popf
and
pop
push
inc
xchg
sub
daa
xchg
push
pop
and
inc
or
push
sub
pop
aad
cmc
dec
mov
add
mov
jp
xchg
xchg
fisttp
sub
jo
ficom
test
cmp
cwde
or
mov
cmp
sbb
popa
add
aad
mov
fs
sahf
pop
loop
fist
neg
cdq
int
in
test
adc
inc
fdiv
push
pop
xchg
clc
fstp
cli
stc
dec
cwde
push
xchg
dec
cmps
fwait
sti
test
outs
jmp
add
nop
out
add
push
mov
pop
mov
pusha
xor
cmp
adc
pop
aaa
jmp
pop
nop
jb
fs
adc
xchg
sub
mov
xchg
movs
add
pop
jmp
cmp
daa
jo
sbb
stos
fist
out
addr16
in
push
mov
mov
dec
fwait
scas
ja
lds
sbb
mov
dec
push
xchg
in
jmp
cwde
and
test
jle
add
(bad)
cs
(bad)
in
push
jmp
cmp
push
cmps
pop
mov
ds
mov
and
sub
(bad)
xor
jmp
and
push
fwait
xchg
xchg
shr
shl
mov
(bad)
xor
cmps
in
mov
cmp
stos
push
add
fwait
rcr
cmp
psubusb
shl
imul
mov
int
jbe
or
sub
test
mov
lea
cmovp
pop
add
popa
repz
retf
ja
fsub
fucomp
inc
hlt
out
or
cmp
jbe
cmp
jmp
mov
dec
or
mov
mov
fcom
jmp
fist
push
mov
cwde
jl
loop
adc
jns
cmp
cwde
iret
scas
not
inc
dec
jle
xlat
jns
mov
nop
mov
sub
call
les
les
cld
out
in
mov
cmc
fldenv
mov
adc
into
(bad)
jle
iret
scas
xor
xor
mov
test
int3
dec
(bad)
in
push
jge
stc
jl
fistp
jns
popf
jecxz
pop
(bad)
cmp
sub
jae
inc
cmps
xchg
clc
mov
jae
dec
mov
pop
push
xor
jae
xor
dec
into
jns
sub
cld
jl
mov
in
push
and
xchg
sar
mov
arpl
not
ret
ds
pop
imul
or
ins
or
in
into
test
std
xchg
call
jp
cmp
and
stc
or
fisttp
jbe
and
mov
push
imul
adc
in
sbb
xlat
inc
xor
mov
adc
add
out
movs
enter
mov
and
sbb
fild
pop
jno
inc
movs
mov
dec
or
adc
call
mov
fcmovnu
lods
or
enter
nop
mov
sbb
fcom
mov
sti
and
sub
or
out
in
jae
fwait
pop
jecxz
mov
(bad)
push
pop
stc
inc
aad
loope
fisubr
pop
out
leave
pop
sbb
xchg
sti
in
jno
inc
inc
fimul
call
and
jae
ins
push
js
mov
mov
add
popa
xor
mov
fwait
cmp
jg
movs
mov
jmp
dec
lea
mov
add
jo
xor
test
and
daa
sub
repnz
or
and
popa
into
sub
jge
sub
mov
sub
xchg
popa
dec
pop
aas
and
shl
push
push
sub
or
and
dec
dec
xchg
jle
add
lds
fwait
xor
adc
push
adc
xchg
movs
in
lods
xchg
push
sbb
(bad)
call
adc
cmps
push
add
pusha
push
xor
sbb
mov
mov
lods
and
xchg
fidiv
popa
retf
pop
fdiv
es
jg
lds
xor
or
iret
lods
(bad)
xchg
jg
les
ins
push
mov
repnz
pop
(bad)
cmp
in
ret
imul
xor
push
call
push
mov
add
pop
leave
pop
aad
jle
add
pop
sub
push
xchg
jle
pop
(bad)
ffree
add
push
aad
ds
lahf
push
cmp
pop
call
lods
out
pusha
adc
push
mov
je
das
or
push
dec
and
add
sbb
rol
jno
jmp
(bad)
ja
(bad)
int
xor
sbb
and
mov
cmp
inc
or
inc
cmp
jo
dec
or
popa
or
and
xor
pop
test
data16
cmp
jmp
adc
mov
pop
ja
(bad)
ss
outs
mov
sti
jmp
inc
cmp
xchg
sbb
jbe
dec
add
dec
and
cmp
in
pop
sub
leave
dec
scas
out
addr16
(bad)
mov
sub
push
inc
rol
mov
or
enter
mov
retf
push
add
call
mov
cmp
(bad)
loop
or
ret
pop
in
loop
add
mov
xchg
adc
xlat
mov
inc
cld
ret
xor
int
push
sub
clc
add
cmp
neg
pop
in
into
fmul
mov
pushf
mov
(bad)
into
stc
mov
jmp
lahf
sbb
mov
add
outs
inc
or
cmp
fmul
xchg
sbb
mov
sti
mov
mov
push
(bad)
loope
mov
frstor
inc
aam
rcl
or
xlat
adc
mov
mov
cmp
fcmovbe
(bad)
aaa
popf
in
lea
and
test
xchg
scas
or
cs
shr
sbb
mov
rcl
jecxz
inc
mov
inc
cld
rcr
repz
fsubrp
and
shl
xbegin
add
sbb
and
inc
mov
stos
sbb
pop
add
xchg
pop
into
bnd
cmp
daa
ja
(bad)
test
jge
inc
aas
cli
mov
push
out
pop
(bad)
cld
xchg
inc
push
sahf
stos
and
jmp
aam
jle
stos
pop
and
in
mov
scas
jnp
in
sub
mov
add
addr16
mov
jge
or
mov
and
add
(bad)
test
in
nop
sti
fistp
(bad)
jbe
scas
and
ds
adc
mov
lock
ins
cmp
iret
std
sar
xlat
jnp
sar
cli
test
or
movs
out
into
(bad)
call
mov
loopne
xor
mov
(bad)
sbb
and
mov
(bad)
(bad)
sahf
movs
or
jge
push
rol
ret
xchg
push
adc
inc
jnp
pop
lahf
pop
shr
jns
and
push
and
jmp
loop
ja
or
jno
outs
(bad)
cmp
cli
jmp
mov
jg
inc
xor
jmp
retf
lds
mov
jle
inc
ja
xor
jle
xlat
jle
daa
jp
push
jg
aaa
jp
daa
add
or
push
add
jae
les
popaw
adc
cmp
add
mov
pop
mov
aas
in
adc
sbb
add
rol
pop
jp
ja
adc
adc
jl
xchg
clc
js
ja
inc
test
lds
inc
mov
xchg
inc
ja
xchg
jbe
cwde
jo
inc
mov
or
inc
inc
sub
sahf
test
sub
add
pop
jae
call
sbb
jp
xchg
or
sbb
xor
je
jl
idiv
cwde
jne
loopne
mov
int3
push
add
add
mov
jae
mov
test
xchg
enter
mov
js
ja
in
pop
jns
inc
jbe
mov
inc
adc
dec
test
js
push
ds
nop
or
mov
sub
movs
or
mov
mov
dec
or
push
jns
cwde
add
or
scas
or
xchg
or
jbe
(bad)
jl
(bad)
jp
(bad)
add
sub
mov
(bad)
loope
and
dec
jo
mov
or
add
and
cmp
jle
dec
jp
clc
inc
retf
mov
pop
or
mov
or
cwde
mov
mov
mov
mov
ror
mov
push
enter
mov
mov
imul
xchg
jmp
mov
add
mov
js
push
dec
xchg
(bad)
(bad)
xchg
and
sub
cmp
dec
inc
add
xchg
mov
sbb
xchg
cmp
mov
add
ror
xchg
sub
mov
xchg
leave
mov
adc
cmp
xchg
cmp
and
adc
mov
sub
xchg
push
cmp
leave
xchg
jp
xchg
mov
pop
and
imul
jo
test
ins
imul
jno
pop
cdq
and
cdq
xchg
sbb
pop
cdq
cmp
jp
cdq
mov
xchg
and
xchg
jp
fwait
div
mov
mov
xchg
push
fcomp
cdq
mov
ja
nop
cmp
xlat
mov
jp
sbb
test
mov
fwait
push
clc
push
jl
xchg
xor
fwait
mov
test
test
adc
add
mov
stc
ja
imul
xchg
pop
imul
push
cdq
xchg
or
xchg
loope
mov
ja
cmps
mov
mov
std
pop
xchg
stc
jns
fwait
test
mov
js
nop
and
fidivr
mov
cmp
sub
jp
rcr
cwde
test
jb
dec
mov
(bad)
xchg
inc
call
xor
fwait
jmp
lea
rcl
fwait
and
xchg
jge
xchg
mov
mov
movs
mov
icebp
imul
call
xchg
test
cmovp
pop
add
sbb
jmp
cwde
sub
sub
xchg
xor
mov
cli
xchg
ror
add
cmp
jns
mov
xchg
pop
fst
mov
out
xchg
push
or
jb
leave
daa
lea
call
dec
rcl
out
or
fst
test
cli
mov
cmp
imul
xchg
ja
xchg
xor
je
stos
ins
sub
jmp
mov
pop
xchg
scas
pop
add
sub
adc
pushf
push
push
sbb
outs
sub
enter
xchg
sub
xchg
add
cdq
retf
or
pushf
sbb
lahf
call
mov
call
movs
inc
pop
lods
add
pop
or
xchg
mov
pop
and
adc
push
jne
stos
(bad)
jmp
stos
pop
pop
mov
mov
iret
dec
cmps
push
test
cld
mov
adc
lods
mov
test
sbb
stos
xor
lods
cmp
cdq
stos
stc
mov
jmp
add
mov
push
lds
pop
pusha
mov
call
mov
sub
leave
stos
xchg
leave
scas
sti
jmp
xchg
cmc
retf
jmp
pop
(bad)
out
aaa
or
or
or
fwait
or
fstp
daa
mov
sub
test
ins
mov
jne
mov
fisubr
sub
(bad)
int3
sub
pusha
jo
stos
xchg
out
mov
mov
xchg
stos
mov
retf
or
mov
mov
or
add
jnp
arpl
stos
retf
sub
retf
fidivr
sti
mov
fwait
mov
sbb
jp
lds
(bad)
mov
jnp
inc
leave
xchg
cdq
fstp
stos
mov
imul
popf
shr
test
push
in
cmps
cmp
push
add
fwait
or
(bad)
cwde
iret
sbb
mov
fidiv
sahf
mov
mov
test
rcr
dec
test
or
inc
pop
mov
mov
push
inc
cli
mov
shr
loop
scas
int3
pop
test
mov
inc
daa
and
add
fistp
sub
lods
cmp
lds
lods
retf
mov
mov
or
pop
stos
clc
mov
daa
jmp
mov
lds
les
mov
imul
sub
pop
sbb
mov
mov
mov
adc
jecxz
mov
pushf
or
add
(bad)
out
dec
mov
sti
(bad)
dec
pushf
stos
xchg
add
or
(bad)
push
mov
out
mov
loop
mov
sbb
mov
sti
add
mov
cmp
mov
int3
add
(bad)
jecxz
add
int3
mov
mov
sbb
jo
add
int3
pushf
lods
mov
pop
lds
lds
mov
mov
xchg
cwde
mov
rcr
mov
and
(bad)
jmp
into
stc
or
and
(bad)
xchg
pushf
mov
sub
add
mov
or
xor
sar
int3
adc
cdq
(bad)
or
ror
fnsave
int3
and
mov
pushf
ror
mov
fcmovnu
int
or
hlt
sbb
jle
iret
adc
ins
fmul
or
stos
sbb
sub
std
jnp
mov
mov
pushf
pop
shr
jge
inc
pop
add
add
or
cmp
push
ins
retf
retf
add
sbb
pop
fst
xchg
imul
sbb
mov
aad
mov
sar
cld
int3
xor
and
jp
xlat
iret
jl
(bad)
mov
xlat
loope
xlat
bound
mov
mov
sti
rcl
jnp
lahf
int3
ret
retf
xlat
nop
in
scas
pop
dec
enter
push
pop
sar
(bad)
mov
dec
std
int3
mov
(bad)
movs
ins
scas
inc
or
add
scas
or
cmp
(bad)
sbb
fnstenv
mov
mov
popf
fstp
test
mov
xchg
std
ficom
fisub
add
loopne
inc
add
ret
imul
ins
fidiv
mov
ins
add
xchg
jge
rol
mov
ins
xlat
gs
xlat
out
std
int3
js
faddp
sub
jge
fldcw
fst
aad
or
pop
lods
(bad)
inc
(bad)
aad
or
test
(bad)
sub
add
fnstsw
fisttp
cwde
push
std
ficomp
mov
or
rcr
jge
loope
or
ror
ins
mov
cmp
hlt
std
ficom
pop
aam
std
fcomi
sbb
or
adc
sbb
add
les
(bad)
loopne
(bad)
out
sbb
cmp
loop
outs
rcl
(bad)
sub
push
push
int3
cmp
dec
dec
int3
adc
cmp
cdq
rol
and
mov
fldenv
jecxz
dec
loop
stos
loopne
int
call
fisubr
xlat
and
shr
and
ret
cmp
fisub
pop
fist
call
(bad)
fidivr
fdiv
ficom
call
or
mov
xchg
push
out
sub
call
into
loope
(bad)
jecxz
pop
shr
out
jmp
cs
xchg
movs
(bad)
std
loop
out
call
cs
fidivr
pusha
push
adc
add
int3
add
xlat
push
inc
push
enter
push
loop
dec
out
mov
scas
loop
dec
rcl
cmp
jb
out
imul
scas
out
das
ds
mov
shl
rcr
call
dec
fistp
in
xchg
mov
jmp
out
fwait
into
fldl2e
sahf
out
das
sahf
jmp
push
loop
(bad)
jmp
and
lock
xlat
stos
sub
imul
into
out
(bad)
in
sub
std
(bad)
adc
loopne
(bad)
fsub
jecxz
xor
add
jmp
xchg
dec
in
sub
cmp
out
int
xlat
(bad)
in
xchg
retf
xchg
retf
mov
xor
xlat
(bad)
fsubrp
xor
fiadd
jmp
sahf
hlt
mov
in
adc
repz
out
popa
mov
iret
pop
in
pop
mov
jge
icebp
jne
jmp
push
das
mov
das
loope
scas
test
loop
call
mov
jge
in
adc
hlt
in
shl
out
fsubrp
mov
icebp
cmp
ds
outs
aad
inc
lahf
out
inc
psrld
jge
cmps
int
xchg
push
cmc
sbb
div
hlt
popf
push
cmc
outs
das
test
pop
out
neg
cli
jmp
test
cmp
mov
not
cld
icebp
or
test
sti
mov
sti
mov
clc
mov
sti
jo
idiv
cld
push
mov
xlat
outs
repz
outs
idiv
cmc
xor
icebp
(bad)
hlt
pusha
jg
test
jmp
push
call
pop
repz
movs
or
add
pop
xchg
add
add
xchg
xchg
xchg
xchg
xchg
xchg
add
test
movs
mov
cdq
xchg
mov
mov
cwde
cwde
fwait
sub
mov
test
xchg
mov
xchg
mov
(bad)
leave
(bad)
adc
mov
test
loopne
mov
test
scas
sahf
lods
mov
xchg
mov
pop
mov
push
test
fmul
cmp
shr
mov
retf
aam
and
pop
adc
les
sub
cdq
dec
push
mov
pop
cmp
xor
push
and
push
dec
adc
or
cmp
pop
add
cmp
or
stos
fs
dec
pop
out
mov
ds
xor
cmp
aad
fimul
daa
into
cmp
daa
jl
sar
and
cmp
push
call
xor
and
xor
ja
cmc
lea
lds
dec
or
(bad)
mov
sahf
dec
pop
jle
test
mov
jmp
scas
push
gs
mov
adc
movs
mov
xlat
cmps
inc
mov
sbb
jl
sbb
jb
mov
xchg
fst
mul
xor
mov
jns
dec
mov
aaa
dec
xchg
sahf
adc
and
pop
jmp
or
maxps
rcl
into
(bad)
cmp
aad
iret
pushf
movs
pop
xor
inc
add
add
jbe
stc
(bad)
push
outs
jne
xchg
(bad)
jg
neg
or
inc
push
shr
xor
and
call
popa
xchg
mov
xchg
je
inc
xor
call
cmps
pop
cmp
jns
call
test
cli
push
shl
cwde
and
or
or
lds
xchg
cld
icebp
pop
mov
movs
inc
or
test
out
sub
or
(bad)
and
shl
fwait
push
jge
add
pop
dec
or
mov
ss
sub
and
push
inc
movs
enter
add
jp
xchg
fstp
out
lahf
call
bound
rol
add
adc
pop
pcmpeqb
rcl
sub
lods
mov
pop
sub
movs
ret
stos
lods
mov
(bad)
idiv
ret
mov
push
clc
mov
(bad)
mov
rol
add
adc
adc
mov
pop
ret
dec
sar
in
mov
mov
adc
fwait
aad
fsubr
pushf
imul
sub
dec
sbb
out
lods
enter
je
dec
sbb
ret
stos
stos
pop
mov
xchg
stc
cdq
(bad)
cdq
jp
shl
pop
movs
sub
mov
sti
in
add
push
jno
imul
mov
sub
sbb
push
inc
adc
bndstx
shl
ficom
in
add
push
or
je
dec
addr16
sbb
test
(bad)
fldenv
fnsave
or
leave
ficom
lods
test
jbe
sub
lods
mov
xchg
cs
popf
and
imul
cmc
xlat
ds
test
dec
xchg
inc
add
jae
lods
shl
mov
push
jns
mov
pop
test
push
or
dec
cmp
mov
stos
pop
push
test
and
loope
inc
mov
cmp
dec
sub
outs
push
xor
cdq
mov
lds
mov
add
cmc
pop
pop
aas
cmp
scas
hlt
shl
inc
repnz
ins
(bad)
aam
mov
dec
mov
hlt
xlat
inc
cld
stc
cld
jmp
xlat
jnp
rol
aaa
and
xor
fs
(bad)
mov
call
dec
sahf
sbb
rol
lock
add
mov
out
or
or
into
add
arpl
in
push
mov
sbb
or
add
xlat
push
or
or
shr
add
fisttp
rcr
push
pop
call
js
lods
push
popa
and
dec
fsub
dec
push
loop
and
sbb
xchg
enter
or
push
lahf
push
add
add
pop
data16
sbb
shr
and
icebp
cdq
das
mov
sbb
out
movs
in
xchg
movs
enter
xchg
dec
les
and
push
nop
add
jmp
sub
cdq
xor
and
cdq
mov
xchg
sbb
icebp
or
dec
(bad)
jno
push
cmp
mov
cmp
lea
sub
test
jl
lods
xor
int3
push
push
ror
lods
pop
dec
pusha
adc
jns
int3
out
(bad)
repz
call
test
popf
mov
test
jns
rcl
repz
iret
jle
repz
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
cmps
adc
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
xchg
xchg
or
mov
dec
push
test
cmp
and
push
and
adc
push
enter
xchg
cmp
add
fwait
aad
push
sub
inc
mov
add
pop
ror
mov
push
adc
(bad)
es
mov
fsubr
stos
aam
xlat
mov
sbb
(bad)
adc
jge
in
jne
cmp
enter
lods
jge
jae
imul
push
mov
test
push
aaa
mov
sbb
xlat
or
cmc
add
stos
pop
icebp
div
ss
adc
cmp
es
loop
in
imul
mov
ss
sub
fbstp
sbb
pop
sti
mov
ret
jo
jmp
aam
push
mov
sub
loopne
mov
mov
jbe
jle
push
sbb
jo
push
stos
arpl
xlat
or
(bad)
aas
jnp
icebp
ss
hlt
add
fiadd
xlat
mov
inc
push
mov
test
loopne
dec
or
push
pushw
xor
in
out
mov
jb
add
sub
adc
mov
cwde
scas
lods
or
or
jo
dec
lods
add
add
adc
mov
add
or
mov
jg
sbb
loope
cli
mov
xchg
(bad)
and
ja
(bad)
xor
push
fild
jo
mov
push
add
cmp
pop
and
mov
test
cli
cmp
dec
inc
hlt
vphsubbw
cs
test
cmp
es
loopne
mov
xor
dec
sbb
(bad)
fidiv
adc
pushf
dec
pusha
or
jp
jns
cmc
sahf
dec
cmp
retf
cmc
ja
popf
xlat
daa
xchg
(bad)
cmc
aad
mov
push
cmp
rcl
test
pop
into
out
icebp
add
outs
rol
mov
xor
and
pusha
inc
aas
mov
push
mov
add
inc
ss
inc
cdq
aad
into
rep
dec
imul
push
cmp
fsub
adc
mov
and
cmc
mov
mov
add
loope
jmp
rcr
(bad)
mov
gs
stos
outs
pop
arpl
inc
sahf
mov
cmc
cmp
add
cmp
or
das
mov
adc
mov
test
(bad)
clc
fisttp
cmp
addr16
jmp
push
frstor
jge
or
je
fnstsw
out
(bad)
aam
(bad)
pop
scas
cli
in
fsubr
ins
outs
neg
int
in
add
mov
adc
mul
aad
mov
es
pop
xor
xchg
dec
pop
pop
ror
mov
div
push
xor
es
sahf
into
pop
iret
jb
das
push
out
add
inc
mov
(bad)
jge
xchg
inc
add
daa
ja
and
pop
hlt
adc
(bad)
icebp
test
push
pop
rcr
ds
add
add
mov
call
xlat
popf
xor
ficom
daa
mov
mov
sbb
mov
ins
aad
push
jbe
mov
jle
push
fs
add
ins
jne
jle
ja
mov
add
xchg
jne
popa
fadd
jg
jl
imul
cmp
inc
jnp
out
js
jl
aaa
outs
cdq
addr16
lds
xchg
gs
pop
pop
pop
aaa
imul
imul
add
jg
xlat
pop
addps
out
lahf
test
fdiv
push
jns
mov
push
jbe
push
pop
jno
xor
jo
sbb
jl
addr16
mov
pop
fdiv
xchg
mov
inc
cmp
clc
cmp
in
inc
xchg
arpl
push
inc
cmp
daa
jae
data16
ja
test
xchg
push
add
jb
data16
pop
jo
fdiv
cmps
add
ja
ss
push
push
pusha
lods
ja
xchg
data16
mov
jg
or
clc
je
dec
jne
jne
(bad)
pop
and
sahf
cwde
jns
push
ins
inc
push
test
inc
mov
aaa
sbb
jg
data16
jge
fcom
sub
push
add
cmps
ja
cmps
jae
enter
lock
pop
push
and
popa
addr16
outs
adc
mov
jnp
mov
pop
cmp
pop
jle
call
add
jno
pusha
add
ins
ds
jae
jb
(bad)
mov
retf
sbb
jbe
fadd
jb
add
fdivr
aaa
xchg
test
adc
or
into
pop
ins
dec
data16
popa
mov
outs
and
mov
int
jo
mov
dec
addr16
xlat
jbe
mov
xlat
fs
add
lahf
lds
xchg
rol
clc
push
adc
jnp
leave
js
out
pop
mov
fwait
push
pop
mov
jo
pop
outs
jno
jg
out
popf
xor
ds
pop
stc
(bad)
jle
xchg
mov
pusha
xor
ins
stos
aad
dec
data16
xchg
or
xchg
jge
jno
xchg
jo
leave
ins
movs
mov
mov
jle
push
sbb
add
jle
inc
outs
mov
jno
xchg
pop
or
ins
in
(bad)
jg
push
xchg
test
popa
mov
imul
and
dec
pop
jmp
pop
mov
pop
or
xchg
js
sbb
xchg
adc
rol
mov
or
dec
(bad)
outs
fnsave
jns
or
jbe
jnp
pop
mov
outs
or
test
xchg
push
mov
mov
cwde
jns
fdiv
and
aad
xchg
dec
rcr
xchg
gs
jg
out
inc
jo
xchg
stc
jnp
fdiv
jne
rol
(bad)
fisubr
adc
pop
mov
mov
jns
or
or
cmp
jmp
xchg
pop
add
pop
xchg
js
mov
test
add
and
pop
scas
neg
cdq
push
and
clc
dec
outs
push
cmps
add
sbb
ss
test
xchg
movs
add
pushf
pop
xchg
and
jmp
mov
imul
lea
ins
mov
mov
imul
lahf
sti
mov
movs
jbe
and
sub
push
inc
xchg
jle
mov
not
add
inc
jno
push
outs
xchg
pop
ins
push
cmps
and
hlt
out
inc
clc
push
jle
mov
push
jge
push
ficom
cmps
arpl
push
and
inc
inc
add
cmps
cmp
push
cmps
arpl
ins
cli
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
pop
test
call
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
add
popf
cli
sub
mov
add
dec
add
push
scas
fild
inc
cmp
push
mov
stos
mov
sub
mov
retf
mov
stos
mov
sub
cmp
jmp
cmp
xchg
mov
iret
or
mov
lods
mov
fstp
sbb
retf
mov
fwait
mov
and
and
jmp
add
add
sbb
dec
lods
mov
ficomp
jmp
mov
pop
mov
jmp
add
mov
(bad)
sub
cmp
fstp
nop
mov
dec
scas
pop
lock
cmp
mov
cmp
xchg
mov
lock
shl
shl
mov
(bad)
lock
push
adc
push
add
sbb
xor
xor
ret
ret
add
sub
cli
retf
mov
xor
enter
les
pushf
ret
cmp
mov
or
xor
les
ret
out
jp
int3
imul
cmp
push
sbb
dec
jmp
dec
sbb
mov
add
mov
pop
and
or
add
mov
sti
(bad)
outs
in
ret
push
lds
dec
(bad)
aaa
lods
(bad)
jg
mov
jl
ret
je
scas
pop
xor
loopne
cmp
mov
xor
inc
shl
enter
mov
add
xor
or
xchg
jl
movs
in
enter
pushf
jl
(bad)
jl
inc
ins
retf
mov
rol
(bad)
fmul
jp
retf
mov
pop
retf
leave
mov
cwde
mov
dec
shl
retf
dec
mov
mov
mov
(bad)
out
clc
int3
xor
int3
or
xor
stos
cld
enter
mov
add
into
call
add
add
nop
retf
add
int3
leave
idiv
cld
enter
out
or
mov
into
jmp
sar
dec
shr
in
retf
int
pushf
shl
stos
into
jmp
rol
into
xor
iret
jmp
leave
test
iret
out
enter
leave
dec
adc
and
jp
int
popf
rcr
pop
retf
add
mov
and
rol
mov
or
lods
sub
jp
rcr
or
lods
cmp
or
inc
dec
rol
jge
cmp
xchg
or
into
jecxz
aam
jge
push
or
sub
inc
cmp
add
jl
pop
and
cmp
jmp
adc
in
shr
iret
cmp
sar
mov
sti
int3
inc
jge
sbb
shl
lods
xlat
outs
cmp
dec
(bad)
into
ins
cmp
call
int3
jg
fdivr
aam
std
mov
or
xchg
add
lods
fadd
into
cmp
push
in
ror
xlat
sar
popf
fimul
mov
scas
xchg
jge
pop
sbb
pop
push
fdivr
cld
ins
les
shl
retf
mov
(bad)
pushf
(bad)
mov
fcomp
add
mov
cmp
rcr
fstp
cmps
int
lods
int3
int
sbb
outs
sub
fwait
lods
into
jg
fcomp
lods
fadd
sub
mov
enter
hlt
popf
xlat
out
int
jge
fmul
jnp
add
fdivr
call
fild
inc
mov
dec
in
(bad)
bnd
mov
fstp
fabs
sbb
mov
mov
adc
(bad)
mov
lea
movs
lods
iret
ja
int
or
daa
xor
fstp
add
das
push
push
pop
mov
sub
fisubr
mov
daa
fsubp
hlt
in
rcl
fsubp
cmp
loopne
shl
leave
dec
jle
inc
mov
dec
dec
cs
in
rcr
pop
(bad)
push
(bad)
out
jge
outs
sub
sub
xor
(bad)
fsub
aam
dec
jecxz
scas
retf
loopne
sub
test
fdivrp
pop
(bad)
ins
retf
fidivr
into
in
pop
retf
sbb
in
sbb
xchg
int
repz
fcomp
fsubp
stos
ins
iret
aam
add
stos
sar
add
dec
fistp
fsub
pop
pop
retf
cmp
and
fadd
push
loope
lods
loope
cld
loope
pop
aad
sbb
push
pop
retf
jecxz
loope
ins
add
fs
add
dec
jge
lahf
scas
jmp
test
lods
mov
pop
jle
pop
std
loope
mov
xor
xchg
ffreep
mov
cmc
pop
in
push
fmul
(bad)
loopne
push
jmp
lods
in
sahf
in
sti
(bad)
out
popf
out
(bad)
loope
out
jecxz
mov
stc
ds
repnz
(bad)
repnz
in
mov
jmp
mov
push
ds
jecxz
in
fsub
add
lods
retf
stos
pop
adc
pop
mov
push
mov
mov
stos
pop
add
pop
dec
icebp
out
scas
out
add
xlat
out
in
pop
sbb
mov
fdivr
fst
icebp
stc
sahf
in
pop
ins
(bad)
scas
sar
fucomip
fdivr
repnz
in
push
sahf
in
fidivr
iret
mov
call
jg
xor
out
ror
fisubr
neg
cmc
pop
aas
stos
sbb
xchg
jge
xchg
lods
out
js
jmp
add
push
dec
test
(bad)
hlt
daa
jle
out
retf
repnz
icebp
imul
and
jmp
lahf
aad
pop
out
outs
lock
mov
add
xor
pop
add
popf
in
cs
icebp
xchg
(bad)
stc
ds
shr
out
test
repnz
lock
leave
outs
jmp
lods
(bad)
inc
sahf
fdiv
jmp
lahf
push
cli
jle
sti
cld
fdivr
lds
sti
sbb
jno
retf
mul
dec
not
fisubr
hlt
pop
out
repz
fidivr
stc
add
cld
jmp
fcomip
or
std
mov
add
call
push
jmp
shr
repz
das
(bad)
cmp
test
sub
push
mov
stc
enter
mov
cmp
jmp
in
dec
cli
sar
mov
(bad)
enter
and
dec
jmp
add
cli
cmp
pop
cmp
sub
jmp
dec
or
retf
sbb
dec
mov
sub
cmp
fdivr
ret
cmp
cmp
ficomp
aas
dec
into
arpl
pop
sub
fucomp
mov
mov
bound
mov
mov
in
std
inc
lds
mov
pop
es
retf
xor
mov
sub
leave
sbb
retf
or
or
fnsave
mov
jne
cdq
shr
adc
test
test
and
lds
lds
mov
xchg
mov
fndisi(8087
fdiv
cmp
mov
arpl
pop
and
inc
mov
and
inc
pop
xor
and
movs
mov
fcmovbe
pop
sti
shl
dec
je
xor
add
shl
or
mov
sub
stos
push
cld
or
inc
inc
mov
nop
adc
cdq
push
pop
call
das
mov
mov
ins
dec
mov
or
jecxz
popa
loope
ficomp
push
mov
stos
add
xchg
aad
push
sub
jno
das
test
push
cmc
div
xor
dec
(bad)
imul
mov
xchg
fmul
cdq
ins
and
inc
jge
adc
loope
sbb
ror
popf
and
pop
push
inc
xchg
sub
daa
xchg
push
pop
and
inc
or
push
sub
pop
aad
cmc
dec
mov
add
mov
jp
xchg
xchg
fisttp
sub
jo
ficom
test
cmp
cwde
or
mov
cmp
sbb
popa
add
aad
mov
fs
sahf
pop
loop
fist
neg
cdq
int
in
test
adc
inc
fdiv
push
pop
xchg
clc
fstp
cli
stc
dec
cwde
push
xchg
dec
cmps
fwait
sti
test
outs
jmp
add
nop
out
add
push
mov
pop
mov
pusha
xor
cmp
adc
pop
aaa
jmp
pop
nop
jb
fs
adc
xchg
sub
mov
xchg
movs
add
pop
jmp
cmp
daa
jo
sbb
stos
fist
out
addr16
in
push
mov
mov
dec
fwait
scas
ja
lds
sbb
mov
dec
push
xchg
in
jmp
cwde
and
test
jle
add
(bad)
cs
(bad)
in
push
jmp
cmp
push
cmps
pop
mov
ds
mov
and
sub
(bad)
xor
jmp
and
push
fwait
xchg
xchg
shr
shl
mov
(bad)
xor
cmps
in
mov
cmp
stos
push
add
fwait
rcr
cmp
psubusb
shl
imul
mov
int
jbe
or
sub
test
mov
lea
cmovp
pop
add
popa
repz
retf
ja
fsub
fucomp
inc
hlt
out
or
cmp
jbe
cmp
jmp
mov
dec
or
mov
mov
fcom
jmp
fist
push
mov
cwde
jl
loop
adc
jns
cmp
cwde
iret
scas
not
inc
dec
jle
xlat
jns
mov
nop
mov
sub
call
les
les
cld
out
in
mov
cmc
fldenv
mov
adc
into
(bad)
jle
iret
scas
xor
xor
mov
test
int3
dec
(bad)
in
push
jge
stc
jl
fistp
jns
popf
jecxz
pop
(bad)
cmp
sub
jae
inc
cmps
xchg
clc
mov
jae
dec
mov
pop
push
xor
jae
xor
dec
into
jns
sub
cld
jl
mov
in
push
and
xchg
sar
mov
arpl
not
ret
ds
pop
imul
or
ins
or
in
into
test
std
xchg
call
jp
cmp
and
stc
or
fisttp
jbe
and
mov
push
imul
adc
in
sbb
xlat
inc
xor
mov
adc
add
out
movs
enter
mov
and
sbb
fild
pop
jno
inc
movs
mov
dec
or
adc
call
mov
fcmovnu
lods
or
enter
nop
mov
sbb
fcom
mov
sti
and
sub
or
out
in
jae
fwait
pop
jecxz
mov
(bad)
push
pop
stc
inc
aad
loope
fisubr
pop
out
leave
pop
sbb
xchg
sti
in
jno
inc
inc
fimul
call
and
jae
ins
push
js
mov
mov
add
popa
xor
mov
fwait
cmp
jg
movs
mov
jmp
dec
lea
mov
add
jo
xor
test
and
daa
sub
repnz
or
and
popa
into
sub
jge
sub
mov
sub
xchg
popa
dec
pop
aas
and
shl
push
push
sub
or
and
dec
dec
xchg
jle
add
lds
fwait
xor
adc
push
adc
xchg
movs
in
lods
xchg
push
sbb
(bad)
call
adc
cmps
push
add
pusha
push
xor
sbb
mov
mov
lods
and
xchg
fidiv
popa
retf
pop
fdiv
es
jg
lds
xor
or
iret
lods
(bad)
xchg
jg
les
ins
push
mov
repnz
pop
(bad)
cmp
in
ret
imul
xor
push
call
push
mov
add
pop
leave
pop
aad
jle
add
pop
sub
push
xchg
jle
pop
(bad)
ffree
add
push
aad
ds
lahf
push
cmp
pop
call
lods
out
pusha
adc
push
mov
je
das
or
push
dec
and
add
sbb
rol
jno
jmp
(bad)
ja
(bad)
int
xor
sbb
and
mov
cmp
inc
or
inc
cmp
jo
dec
or
popa
or
and
xor
pop
test
data16
cmp
jmp
adc
mov
pop
ja
(bad)
ss
outs
mov
sti
jmp
inc
cmp
xchg
sbb
jbe
dec
add
dec
and
cmp
in
pop
sub
leave
dec
scas
out
addr16
(bad)
mov
sub
push
inc
rol
mov
or
enter
mov
retf
push
add
call
mov
cmp
(bad)
loop
or
ret
pop
in
loop
add
mov
xchg
adc
xlat
mov
inc
cld
ret
xor
int
push
sub
clc
add
cmp
neg
pop
in
into
fmul
mov
pushf
mov
(bad)
into
stc
mov
jmp
lahf
sbb
mov
add
outs
inc
or
cmp
fmul
xchg
sbb
mov
sti
mov
mov
push
(bad)
loope
mov
frstor
inc
aam
rcl
or
xlat
adc
mov
mov
cmp
fcmovbe
(bad)
aaa
popf
in
lea
and
test
xchg
scas
or
cs
shr
sbb
mov
rcl
jecxz
inc
mov
inc
cld
rcr
repz
fsubrp
and
shl
xbegin
add
sbb
and
inc
mov
stos
sbb
pop
add
xchg
pop
into
bnd
cmp
daa
ja
(bad)
test
jge
inc
aas
cli
mov
push
out
pop
(bad)
cld
xchg
inc
push
sahf
stos
and
jmp
aam
jle
stos
pop
and
in
mov
scas
jnp
in
sub
mov
add
addr16
mov
jge
or
mov
and
add
(bad)
test
in
nop
sti
fistp
(bad)
jbe
scas
and
ds
adc
mov
lock
ins
cmp
iret
std
sar
xlat
jnp
sar
cli
test
or
movs
out
into
(bad)
call
mov
loopne
xor
mov
(bad)
sbb
and
mov
(bad)
(bad)
sahf
movs
or
jge
push
rol
ret
xchg
push
adc
inc
jnp
pop
mov
xchg
ud1
fadd
pushf
dec
cmp
out
pop
out
dec
js
es
int
addr16
in
pop
push
(bad)
fucomip
dec
jbe
outs
loope
mov
loope
jbe
mov
add
jnp
idiv
xlat
add
xlat
jns
xlat
jne
xchg
push
jl
cmps
jne
add
mov
sbb
sbb
popa
push
add
pusha
sbb
sbb
inc
push
push
popa
xor
sub
jns
daa
jb
cmp
xchg
jl
daa
or
repz
add
daa
imul
inc
test
push
add
sbb
daa
xor
jge
ja
mov
adc
jne
push
jl
cmp
pop
jae
call
sbb
in
pop
jns
mov
xor
xor
jo
enter
xchg
inc
xchg
ja
lahf
daa
sbb
push
(bad)
ins
add
add
add
lock
mov
lea
pop
xchg
cmp
inc
jbe
push
dec
pusha
test
shl
jo
rcl
add
pusha
test
xchg
add
xchg
mov
or
nop
ja
cwde
nop
mov
fmul
sub
jbe
lock
test
cmp
add
jp
xchg
(bad)
jl
(bad)
jp
(bad)
add
cmp
mov
(bad)
loope
and
test
mov
push
lods
sbb
inc
sub
(bad)
mov
cwde
mov
cwde
mov
inc
int3
enter
mov
mov
out
mov
nop
jmp
mov
inc
cmp
mov
ror
mov
push
mov
xchg
and
shr
or
or
jmp
mov
add
mov
mov
sub
jmp
cmp
ja
loopne
inc
shl
add
add
xchg
in
retf
jg
lea
mov
into
mov
dec
test
cmp
jl
or
mov
or
xchg
into
call
call
jle
leave
add
push
pop
cmp
clc
xchg
jnp
ja
cdq
mov
mov
(bad)
cwde
test
xchg
and
xchg
or
or
xchg
cmc
daa
xchg
push
jmp
and
cdq
xchg
or
dec
xor
jns
xchg
sbb
push
sbb
cdq
xchg
mov
jg
cwde
mov
enter
mov
xchg
push
mov
inc
test
sbb
nop
inc
fwait
aam
mov
mov
jp
popf
pop
mov
sub
nop
int
fwait
mov
pop
or
leave
jo
push
xchg
mov
das
adc
cdq
jne
mov
add
pushf
dec
pop
pushf
scas
test
inc
jns
je
sahf
pop
nop
add
mov
imul
add
dec
call
adc
xchg
pop
jns
ins
xchg
fwait
xor
mov
or
jmp
shr
mov
mov
mov
inc
js
jmp
or
rcl
fwait
and
xchg
jge
xchg
mov
mov
mov
lds
lahf
(bad)
mov
je
mov
(bad)
or
cmp
cwde
jno
pushf
ds
push
pop
cdq
rol
mov
mov
push
xor
mov
fisub
sub
inc
lahf
mov
fwait
mov
pop
jmp
sub
sbb
test
imul
movs
jbe
jl
cwde
nop
test
add
mov
dec
jns
xor
xchg
das
jmp
xchg
cmp
daa
test
mov
cmps
jge
stos
xor
xchg
cdq
mov
jns
das
sbb
mov
or
push
mov
cmps
shr
jmp
cmps
mov
cwde
push
fldenv
cdq
popf
and
stos
movs
sub
mov
dec
retf
stc
lahf
out
test
or
cli
lods
mov
xchg
inc
leave
add
pop
test
cmps
xchg
mov
gs
clc
cmp
mov
mov
pop
mov
cmps
mov
xor
(bad)
jmp
xchg
sbb
cdq
xlat
sub
pop
add
stos
mov
call
xchg
nop
sbb
xchg
leave
arpl
cmp
sbb
fldenv
test
int3
dec
mov
mov
inc
mov
mov
lea
test
jmp
stos
jmp
xchg
fdivr
lods
hlt
retf
jns
xor
cmps
lea
or
cmps
xlat
pop
stos
setns
pop
rcr
mov
cmp
cdq
xchg
shr
push
cmp
call
mov
sbb
sbb
(bad)
pusha
jo
call
scas
dec
retf
inc
dec
sbb
movs
stos
mov
mov
nop
dec
mov
stos
fwait
sbb
add
cmps
xor
mov
mov
push
sub
retf
xchg
sbb
push
mov
retf
mov
retf
mov
stos
mov
mov
fcmovu
mov
add
mov
mov
sub
fwait
mov
dec
mov
imul
mov
mov
(bad)
fwait
xchg
fs
mov
fist
fwait
or
(bad)
cwde
enter
or
sbb
retf
stos
mov
mov
jmp
mov
jmp
add
test
jnp
sbb
pushf
jge
mov
or
xchg
mov
mov
scas
je
add
inc
add
sar
lods
stos
call
mov
(bad)
add
lods
mov
imul
les
mov
mov
dec
int3
stos
xor
mov
fdivr
pop
mov
or
adc
add
sti
les
xchg
push
fwait
nop
and
test
mov
cdq
inc
add
mov
jmp
in
stos
lds
cli
(bad)
loope
mov
dec
mov
pushf
mov
mov
fisub
dec
mov
sub
mov
add
retf
pop
mov
or
mov
add
scas
fisttp
retf
in
retf
sar
scas
or
xchg
nop
stos
mov
jo
add
int
jnp
daa
fxch
fdivr
xchg
fwait
mov
imul
leave
(bad)
sti
mov
pop
mov
push
mov
loopne
les
iret
enter
ror
ins
iret
or
enter
retf
fcomp
fnstsw
leave
(bad)
ror
mov
mov
fisubr
jl
les
retf
mov
int
jl
aam
rol
mov
mov
in
mov
dec
shl
dec
ret
cmp
pop
lods
into
int3
pop
add
clc
int
sti
shr
or
sbb
xor
mov
or
sbb
mov
sar
int3
mov
sbb
sub
inc
pop
mov
add
fistp
lods
aad
mov
or
retf
inc
mov
jg
lds
aad
sub
xor
mov
rol
jns
shl
aad
fcmovbe
retf
sbb
mov
fcom
int
sub
cmp
push
cmc
(bad)
mov
mov
cmp
mov
retf
ffree
ds
push
sub
mov
ret
mov
(bad)
ins
ror
int
(bad)
mov
aad
(bad)
xchg
ins
iret
push
in
shl
loopne
inc
add
lahf
pop
rol
mov
pusha
add
frstorw
ror
(bad)
lods
int
add
fld
sar
cli
sub
lods
iret
jecxz
aad
std
lods
xchg
fst
in
mov
rcr
int
fistp
std
(bad)
lahf
int
mov
rol
mov
test
fstp
(bad)
imul
in
xlat
in
jge
cmp
fmul
into
(bad)
(bad)
leave
sbb
pop
dec
fimul
iret
fistp
add
dec
scas
fstp
das
ds
lock
push
outs
iret
pop
jns
movs
add
sahf
fld
std
mov
cli
in
rol
fnstsw
cmp
and
loopne
out
(bad)
or
int
fsub
dec
mov
cs
int3
fidivr
sar
ficomp
out
mov
popa
cs
pop
out
out
fdivr
loopne
ds
std
in
sbb
mov
out
sub
jae
call
std
sar
out
popf
in
push
out
(bad)
sub
mov
mov
ror
movs
pusha
push
or
fdivr
rcl
push
mov
loope
xlat
push
scas
fstp
sbb
pop
push
(bad)
cmp
add
loop
fstp
je
fidiv
ss
js
in
inc
sahf
in
call
shl
cmp
in
cs
push
out
sub
fnstsw
in
into
loopne
(bad)
fcomp
out
pushf
sub
mov
loop
mov
test
xchg
out
jae
call
into
jmp
icebp
dec
loopne
mov
or
pop
add
mov
push
adc
and
repnz
jmp
lock
sbb
in
pop
sbb
dec
(bad)
repnz
out
sub
or
repz
jge
jo
repnz
pop
icebp
mov
repnz
jecxz
fsubrp
out
outs
iret
retf
(bad)
hlt
add
adc
sub
jg
repnz
(bad)
repnz
ds
mov
out
jb
repz
pop
repnz
out
pop
scas
lock
cmp
retf
into
hlt
fxch
lock
neg
pop
jmp
pop
shl
add
out
call
(bad)
hlt
adc
iret
jmp
jge
clc
jne
loope
(bad)
cmc
jb
hlt
push
(bad)
and
dec
pop
test
adc
jae
enter
pop
fdiv
jecxz
div
cli
scas
mov
mov
jecxz
aas
cld
xchg
(bad)
mov
cli
push
das
out
scas
dec
sti
jle
idiv
scas
fmul
shl
in
sub
cli
xchg
fnstcw
hlt
inc
dec
cli
ins
(bad)
pop
(bad)
repnz
(bad)
in
cs
not
dec
cld
sar
jmp
aas
out
scas
neg
ror
scas
(bad)
xchg
outs
(bad)
cld
mov
or
sbb
pop
add
dec
pop
mov
add
or
test
cdq
add
nop
test
cwde
mov
cmps
pop
mov
mov
fwait
test
mov
cmps
fwait
stos
test
lods
ret
adc
mov
xchg
xchg
ret
mov
pop
push
xchg
mov
lahf
dec
mov
xchg
nop
xchg
mov
xchg
jmp
fcom
and
cmps
jns
mov
popa
ss
mov
inc
xchg
in
xchg
cmps
mov
sahf
cmp
aad
popf
scas
arpl
fisub
outs
ss
sbb
sub
dec
fidivr
loop
outs
and
scas
and
sub
scas
aam
mov
jmp
fs
arpl
out
in
cmps
test
call
pushf
xor
leave
cs
stos
push
mov
xchg
sub
or
repnz
retf
or
shl
mov
sub
jb
dec
mov
pop
lahf
scas
mov
dec
cmc
sbb
mov
cmp
lds
jle
xchg
push
ret
dec
jmp
ret
hlt
mov
dec
mov
inc
sub
js
or
xchg
or
fdiv
or
das
mov
jbe
pop
sbb
call
pop
in
sub
je
jne
xor
dec
cmp
push
cmp
add
jnp
sub
adc
and
test
xchg
cmp
xchg
neg
or
push
xchg
dec
ret
cmc
mov
push
jnp
adc
push
add
pop
pop
xor
cmp
int
clc
loope
inc
cs
xchg
push
in
and
neg
mov
pop
inc
push
xor
popf
mov
data16
repnz
pop
pushf
cdq
inc
stc
pop
es
call
xor
rcl
icebp
push
sub
add
daa
jge
(bad)
xlat
sahf
mov
mov
mov
dec
dec
in
pop
or
cmp
rol
add
icebp
inc
pop
(bad)
shr
stos
stos
stos
dec
sub
cmps
mov
mov
aam
jmp
movs
cs
sub
mov
jmp
sub
lods
mov
outs
sti
in
shl
fiadd
mov
mov
(bad)
(bad)
int
mov
push
add
nop
mov
push
inc
xor
popf
mov
fst
inc
xchg
rol
cmp
adc
fldlg2
test
stos
loop
xchg
sub
mov
fsub
cmp
lds
push
in
and
lahf
retf
ror
pop
or
mov
push
add
adc
in
lods
and
cmp
loope
ror
push
pop
popf
hlt
or
mov
mov
push
or
and
push
ror
cmp
lea
jae
fisttp
ins
mov
or
and
adc
clc
xchg
pop
repz
mov
fld
fidivr
sub
loopne
nop
int
or
xor
sbb
adc
stc
aad
jecxz
mov
mov
mov
inc
push
mov
sti
jmp
push
push
mov
test
cmp
push
rcr
cmp
adc
enter
hlt
inc
sub
mov
test
add
pop
cmp
ror
daa
stc
ror
psubw
xchg
(bad)
fistp
mov
cmp
push
(bad)
push
jg
rcl
aas
out
cli
lock
pop
es
sub
add
inc
rcl
rcl
fwait
add
sub
jne
jp
jecxz
add
add
ja
int3
push
in
call
add
lods
fiadd
cmova
add
outs
out
add
adc
push
add
and
jne
sub
pop
daa
inc
mov
dec
add
popa
in
cwde
aas
pop
call
xor
fnsave
lock
ret
or
ins
push
push
mov
inc
mov
loope
pop
and
xlat
ins
idiv
push
dec
push
jb
test
pop
scas
mov
out
dec
mov
or
in
les
or
jb
adc
adc
push
mov
enter
sub
mov
mov
add
inc
sub
addr16
rcl
xorps
inc
jnp
arpl
push
das
mov
push
pop
pop
dec
retf
rol
lods
and
and
xchg
mov
fxch
pop
mov
cwde
stos
cld
jecxz
fstp
(bad)
out
leave
scas
xchg
into
cld
pop
xor
rcl
mov
int
pop
mov
fisttp
aaa
scas
(bad)
dec
pop
xchg
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
push
mov
push
cmp
xlat
fwait
add
adc
push
mov
add
cmp
jmp
imul
leave
es
push
lock
jp
sbb
fwait
cmc
stos
push
sbb
push
and
add
lea
add
lods
ins
dec
adc
add
in
ins
ins
inc
jmp
(bad)
mov
scas
scas
mov
push
lds
xlat
mov
in
imul
fxch
out
mov
shr
mov
inc
jo
retf
pop
pop
pop
push
scas
inc
or
pop
xor
cmps
out
outs
jp
pusha
xor
inc
mov
ret
jmp
lds
or
jge
adc
fistp
fdiv
(bad)
mov
ja
ja
scas
jae
dec
pop
sti
(bad)
ss
ret
imul
mov
shl
add
xchg
pop
lods
add
lock
cld
pusha
mul
mov
cmps
lock
lea
fwait
stos
js
add
jle
or
push
daa
idiv
or
jmp
mov
ins
icebp
add
sub
pushf
push
cdq
mov
ds
scas
or
sti
mov
add
lods
add
sub
(bad)
(bad)
jp
outs
adc
pop
or
jns
ss
xor
lock
ret
add
cmp
push
add
add
jb
adc
in
fadd
mov
ds
xchg
repz
and
lods
pushf
daa
(bad)
lods
fdivr
lahf
ins
pop
inc
add
sub
and
ror
pop
gs
dec
cmp
dec
js
mov
sbb
in
int3
fimul
xchg
int3
movd
push
in
fdecstp
jb
ret
stos
js
cmp
std
jle
mov
das
pop
dec
lahf
pop
sar
mov
jge
ror
ja
fnsave
push
sbb
push
aaa
cmp
(bad)
imul
mov
mov
xlat
mov
cmp
iret
out
(bad)
jecxz
jmp
mul
jne
xor
push
jae
aad
mov
out
pop
jp
and
fwait
dec
pop
mov
(bad)
jbe
ret
sbb
dec
jg
mov
dec
pop
or
loopne
aad
test
jl
mov
mov
add
(bad)
(bad)
xor
push
or
das
stos
fdivr
int
sbb
add
jge
jge
ds
cmp
and
stos
mov
cmps
cmp
pop
dec
pop
fistp
fld
cmp
pop
jno
ja
je
sub
sar
push
ins
sar
mov
inc
xlat
push
fisttp
push
cmp
pop
jge
ss
cli
ror
push
push
cmp
in
push
jbe
sub
arpl
imul
or
jnp
push
push
in
mov
push
loope
inc
inc
icebp
bnd
lahf
jne
jmp
cmp
cmp
jno
xchg
push
or
push
hlt
and
scas
out
dec
rol
pop
or
ins
nop
cmp
out
xor
(bad)
push
dec
sbb
lods
push
(bad)
cmp
std
mov
int
ss
sar
push
stc
ror
adc
pop
leave
dec
or
popf
cmp
mov
js
cmp
sub
hlt
movs
das
mov
sti
push
outs
mov
jl
in
xchg
mov
movs
daa
jge
xchg
inc
enter
xchg
jnp
mov
or
outs
cmp
fs
jnp
imul
daa
jae
test
push
fs
jbe
sbb
imul
jle
xchg
pop
sti
pop
jb
cmps
ins
mov
out
xchg
jno
adc
jbe
cmp
outs
ds
xor
dec
jnp
addr16
mov
inc
cwde
outs
push
inc
pop
fidiv
cs
pop
sub
fadd
test
popa
pop
mov
xor
ja
out
push
es
aaa
test
push
push
add
jo
es
(bad)
outs
push
cwde
je
cmps
add
retf
cli
adc
addr16
jo
ja
imul
ins
enter
jae
or
test
xchg
push
xstore-rng
cmps
add
popa
mov
push
cmp
or
jle
push
xchg
mov
push
xor
sbb
fs
shl
jbe
data16
mov
addr16
push
and
dec
daa
push
fsubr
and
js
pop
mov
pop
mov
jl
test
jne
je
xchg
jo
and
aaa
imul
test
jno
xchg
sub
fcom
ss
enter
add
cwde
jge
mul
test
inc
jge
test
push
mov
jg
neg
fsubr
je
jbe
mov
xchg
or
xchg
jne
dec
mov
shl
xchg
arpl
xchg
imul
pop
jnp
mov
ja
cmps
(bad)
dec
jbe
xchg
adc
push
enter
outs
pop
js
mov
mov
je
push
pop
in
jge
xchg
cmps
imul
xchg
xchg
cmp
arpl
cmc
mov
cmp
test
outs
sub
mov
jge
sub
cmp
add
jge
pop
ins
lahf
pop
jo
inc
xchg
shl
adc
jbe
enter
xchg
jle
sub
xlat
mov
jns
dec
push
icebp
or
mov
jl
addr16
jnp
jbe
push
xchg
mov
pop
xlat
aaa
pop
popf
ss
sub
imul
bound
(bad)
sbb
add
dec
test
cmp
(bad)
enter
cwde
addr16
mov
jle
fld
(bad)
test
mov
pop
js
cwde
jo
loopne
rcl
dec
nop
pop
pop
inc
jae
(bad)
arpl
add
add
jg
jp
cwde
je
xor
pusha
retf
sbb
cmp
ret
enter
jns
stc
pushf
pop
sbb
pop
or
jg
add
sbb
imul
or
jbe
(bad)
push
call
aaa
xchg
or
cmps
add
fcomp
test
add
fwait
inc
inc
xchg
inc
loopne
jae
adc
(bad)
out
add
data16
xchg
xor
pop
std
jne
fnstcw
fldcw
(bad)
mov
je
enter
sahf
out
imul
cli
add
(bad)
jbe
loop
add
add
jge
imul
fldenv
sub
push
push
mov
push
imul
add
dec
retf
xchg
movs
ins
inc
add
movs
push
cli
data16
movs
dec
movs
add
shl
cmps
outs
cli
cmps
jo
cmps
jb
and
jp
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
jb
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
push
add
data16
adc
cs
jle
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
push
dec
push
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
or
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
cs
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
dec
dec
push
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
std
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
pop
rcl
stos
add
stos
xchg
sbb
lods
out
sub
mov
daa
adc
imul
movs
mov
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
ror
lock
or
mov
pop
call
scas
or
scas
mov
add
mov
sub
shl
jp
adc
mov
dec
xchg
xchg
xchg
and
push
adc
fwait
mov
fidiv
or
cmps
push
sub
fiadd
cmp
mov
sub
pop
mov
jmp
pop
retf
scas
cli
sub
js
sub
mov
(bad)
sub
sub
cmp
xor
cmp
add
push
scas
fisttp
mov
lock
fwait
mov
cli
mov
push
and
mov
pop
mov
sbb
push
jns
mov
jnp
cli
stos
mov
and
mov
mov
stos
mov
pop
mov
cmp
mov
fwait
mov
cmp
rol
rol
and
(bad)
or
sar
mov
dec
mov
lock
jmp
out
cmp
and
pop
mov
retf
mov
jmp
iret
or
fwait
stos
enter
add
loopne
mov
add
mov
gs
mov
or
sbb
jns
add
cmps
bnd
add
add
jmp
ret
ret
mov
(bad)
jl
sbb
stos
push
mov
add
add
pop
ret
xchg
shl
sbb
ret
mov
add
add
cld
scas
inc
loopne
sub
jl
push
or
push
pop
test
loopne
pop
rol
jmp
push
in
mov
scas
or
(bad)
aas
sbb
pop
lods
ret
inc
pop
les
jp
sub
(bad)
je
lds
(bad)
data16
pop
push
(bad)
push
jl
mov
add
retf
add
call
and
sub
jp
stos
jl
mov
mov
and
pop
leave
push
add
inc
fiadd
mov
add
pushf
ret
jg
mov
dec
leave
xchg
pushf
retf
enter
or
retf
(bad)
dec
shl
retf
mov
ror
or
lods
xchg
leave
out
call
mov
retf
popa
dec
retf
pop
nop
add
mov
sub
or
ror
or
ror
sahf
lods
xchg
add
mov
push
push
add
leave
lea
pushf
ja
sbb
mov
int
sub
hlt
sub
out
cwde
into
xor
int3
fcomp
lods
int
in
iret
hlt
mov
mov
jecxz
leave
in
xchg
into
lea
int
sti
or
pop
cmp
clc
jl
std
ins
int
pop
iret
pop
pop
int3
(bad)
mov
and
sbb
jp
ror
popf
shl
rol
sbb
cs
jg
xchg
cli
mov
add
leave
xor
add
and
(bad)
in
rol
rol
mov
out
ror
jmp
mov
pop
add
into
cmp
dec
xor
xor
shr
dec
int
(bad)
or
rol
pop
xlat
fidivr
cmp
add
add
in
(bad)
add
icebp
mov
adc
fdivr
rcl
cmp
and
fnstcw
iret
and
xor
rcr
fld
mov
push
lock
fnstenv
fist
xchg
jge
cmp
sub
iret
mov
shl
mov
(bad)
mov
mov
fistp
add
dec
fcmovnb
mov
pop
mov
lods
fst
movs
fmul
or
std
xlat
xchg
(bad)
fimul
int
mov
mov
fcomp
iret
in
lods
(bad)
int
pushf
mov
fisttp
repz
add
int3
(bad)
pop
add
mov
imul
ins
fsubr
int
fcmovnu
aad
ins
fmul
(bad)
cld
dec
ror
int
aad
shl
paddd
mov
fimul
loopne
int
das
or
idiv
sbb
aad
add
sbb
mov
loope
fld
nop
add
lods
xlat
sbb
xor
loopne
mov
das
mov
in
(bad)
mov
fmul
std
fnsave
xlat
mov
add
out
fidiv
in
int
pop
pop
loopne
fst
in
sub
jge
(bad)
std
fstp
int3
fsubr
cmp
rcl
fsubr
fsub
pop
mov
(bad)
pop
xlat
leave
lods
leave
fstp
cmp
(bad)
loope
cmp
data16
fidivr
out
loopne
push
xlat
add
jecxz
int
or
into
sub
mov
loopne
(bad)
loope
dec
int3
adc
int3
cmp
jmp
(bad)
call
cmp
cmovle
jg
fidiv
(bad)
ins
out
(bad)
call
sbb
mov
jmp
dec
(bad)
inc
push
xlat
in
sub
retf
(bad)
cld
jmp
int3
scas
shl
jle
mov
jmp
ds
jo
ins
pop
fdivrp
fsub
inc
jle
jae
rcr
jle
dec
jle
ja
jmp
mov
xlat
mov
in
pop
shl
aad
std
jmp
mov
clc
mov
mov
add
mov
xchg
push
shl
out
retf
cmp
add
loop
int
xchg
out
icebp
mov
add
scas
ror
int
into
add
mov
test
mov
faddp
pushf
in
sub
idiv
mov
in
scas
in
push
in
out
(bad)
in
add
(bad)
(bad)
std
loop
cmp
mov
in
in
jmp
mov
loope
dec
fisttp
rcr
jle
mov
dec
scas
fcom
add
sub
sub
mov
jecxz
aas
into
out
repz
loopne
out
out
dec
in
xchg
pop
fisub
iret
(bad)
(bad)
fdivp
push
outs
iret
adc
loope
fst
dec
scas
fidiv
jmp
dec
into
adc
add
add
mul
jg
or
(bad)
(bad)
clc
aas
lock
repnz
test
out
xor
test
out
fcmovnu
in
out
imul
dec
repz
call
neg
int
out
sti
cmp
fisubr
leave
sar
jg
call
dec
repz
fadd
mul
std
inc
or
mov
std
sub
repnz
stos
sbb
int
outs
jmp
pop
out
cmp
jmp
dec
div
in
cmp
test
loopne
movs
gs
and
rol
ret
xor
test
rcl
mov
push
loope
mov
cmp
sub
inc
jns
lock
cdq
cmp
retf
sub
call
leave
stc
sub
or
mov
jmp
int3
or
retf
mov
dec
or
pop
cmp
call
mov
sahf
sbb
sub
push
into
or
movsx
das
jge
pop
sub
xor
arpl
push
and
clc
aam
jae
imul
mov
mov
and
and
lods
inc
dec
or
test
or
arpl
push
sub
test
mov
ror
dec
push
mov
pop
aaa
(bad)
jp
leave
call
xor
test
mov
call
xchg
xchg
adc
ins
out
cwde
or
or
scas
movs
pop
jae
xor
push
in
inc
sbb
jbe
sub
in
jbe
inc
ss
scas
cwde
loop
cs
lods
push
pop
mov
enter
push
pop
enter
or
mov
addr16
xor
jmp
and
push
lods
leave
xchg
adc
dec
je
das
fcom
es
add
imul
rol
jne
dec
shr
mov
fmul
mov
mov
out
and
ret
and
int3
ins
adc
dec
not
aaa
je
push
ds
cmp
mov
test
mov
xlat
or
fldenv
adc
pusha
xchg
leave
and
ds
push
push
cs
jnp
icebp
mov
pop
aad
xlat
popa
push
pop
push
sub
add
xchg
push
mov
movs
shr
add
inc
mul
sahf
mov
adc
push
adc
je
rcl
lea
mov
js
(bad)
movs
int3
es
cdq
in
xor
mov
push
fdivp
loopne
pop
pop
inc
(bad)
adc
adc
popa
jne
mov
call
(bad)
mov
dec
xchg
shr
mov
mov
sbb
jbe
leave
aad
jae
inc
repnz
fimul
jmp
and
call
adc
bound
jns
jp
nop
pop
or
fcomp
pop
fidivr
pop
dec
pop
push
(bad)
lds
adc
push
xchg
sub
push
enter
and
or
mov
stc
les
pusha
test
sbb
je
mov
retf
xchg
mov
push
xor
call
in
mov
mov
mov
mov
(bad)
xchg
cmps
and
push
bound
lods
daa
dec
and
push
sar
dec
push
mov
outs
jge
pop
sbb
(bad)
dec
push
sbb
scas
les
dec
cmp
or
cmp
jecxz
sub
outs
(bad)
push
xchg
repnz
lods
sbb
jmp
inc
add
jne
sbb
data16
or
ja
data16
push
dec
jb
and
pop
jno
std
mov
lock
cmp
xor
jae
xor
xor
add
mov
fidiv
mov
mov
js
add
out
rcr
(bad)
push
lods
(bad)
ds
xor
ins
push
jb
fnstsw
xchg
xor
pop
mov
aaa
fiadd
sbb
push
xor
ja
fnsave
cmp
stos
repz
pop
jge
jecxz
xchg
popf
repz
sbb
inc
call
lock
mov
sub
in
stos
aam
sbb
cmp
sbb
cmc
in
(bad)
jnp
mov
add
mov
mov
mov
lods
mov
push
jnp
mov
xor
mov
jmp
(bad)
cld
sbb
cmp
or
in
(bad)
(bad)
pushf
scas
sub
cmp
aas
in
dec
in
data16
pop
lea
bound
pop
ffreep
mov
cdq
in
jo
sub
mov
enter
in
adc
rcr
add
mov
pop
mov
stos
cmc
aad
xor
xlat
ror
inc
retf
(bad)
push
(bad)
mov
shr
je
fisttp
cmp
popf
int
mov
inc
sub
(bad)
jmp
xchg
xor
adc
mov
cmp
jmp
fld
inc
cld
mov
popa
fsubr
push
ret
inc
jl
jl
mov
repz
cld
movs
dec
jo
pop
and
lods
or
sbb
stos
pop
dec
inc
and
js
popa
pop
adc
lea
push
and
aaa
sub
xchg
fstp
out
sbb
out
iret
mov
fs
mov
jp
xchg
fimul
cs
jnp
dec
pop
add
fndisi(8087
dec
jne
inc
and
pop
and
and
gs
inc
dec
xor
mov
cwde
and
sti
and
movs
mov
xlat
inc
push
stos
xchg
xor
shl
pushf
push
pop
mov
cmps
das
jbe
add
pop
sub
ds
push
jne
mov
push
mov
mov
jge
xor
imul
add
jb
cdq
ja
leavew
fisubr
mov
rep
call
jns
jae
xchg
(bad)
fnstcw
push
ins
int
out
mov
out
data16
xor
adc
cmps
dec
ret
daa
dec
sbb
sahf
ret
add
push
jge
rcl
add
dec
sub
pushf
fsubr
or
push
popf
stos
lods
retf
jmp
cdq
add
inc
add
nop
loopne
bound
sbb
inc
jae
push
popf
pop
pop
xchg
sub
pushf
(bad)
div
jle
or
pop
(bad)
repnz
imul
mov
test
or
push
aam
push
cmp
retf
inc
xchg
mov
mov
push
push
sbb
sbb
push
ficomp
pop
push
jne
je
imul
push
stos
fxch
int
jae
popf
lea
daa
cmp
adc
fidiv
scas
xlat
shl
cli
pusha
mov
sahf
retf
(bad)
adc
or
mov
aam
stos
pusha
jmp
ss
or
add
lock
mov
cmp
mov
stos
jbe
sub
loopne
push
scas
rol
adc
ja
loop
sub
xor
add
mov
or
loopne
or
push
push
sbb
sbb
push
das
rol
test
cmp
pop
sub
int
sub
pop
shr
xchg
lock
fadd
sbb
or
and
jnp
adc
outs
mov
add
adc
out
mov
inc
or
xchg
xor
inc
aad
or
nop
ds
push
cmp
lock
sbb
int
pop
push
pusha
lods
xchg
jns
xchg
adc
mov
add
in
outs
mov
cld
out
(bad)
push
int3
dec
jle
adc
int3
dec
pusha
inc
add
add
sbb
movs
and
mov
mov
xchg
int
cwde
xor
sub
cmps
(bad)
sub
mov
aaa
lods
push
iret
adc
imul
lds
je
pop
icebp
loop
mov
fmul
jle
adc
sbb
push
dec
lea
rcl
jmp
mov
inc
add
mov
scas
stc
fcmovu
imul
mov
(bad)
fcom
sbb
or
js
add
xor
ffree
data16
mov
mov
(bad)
outs
hlt
rcl
jo
aas
inc
fisubr
inc
sbb
mov
sbb
int
mov
pop
mov
add
scas
cmp
daa
cmp
sbb
cmps
mov
add
pop
leave
jmp
fwait
or
adc
(bad)
cmp
icebp
add
mov
or
add
cmps
mov
or
add
fstp
aas
jecxz
fisubr
push
pushf
call
mov
loop
ins
cmp
das
inc
loopne
mov
sbb
fld
out
mov
add
addr16
mov
mov
cmp
icebp
jle
mov
pop
pop
loope
push
div
dec
or
es
ds
js
adc
daa
hlt
std
lock
outs
cmp
and
leave
cmp
repnz
aas
div
pop
popa
(bad)
fisubr
and
loop
outs
mov
lock
jnp
fwait
std
jbe
outs
and
xchg
out
xlat
push
jo
inc
xchg
rcr
mov
js
ins
(bad)
in
fwait
lahf
cmp
arpl
in
outs
add
inc
cli
dec
xchg
or
dec
jl
sbb
test
jp
xchg
das
test
mov
jno
sbb
or
sub
fldpi
pop
jbe
idiv
pop
or
pop
add
jge
enter
jge
push
add
sti
div
pusha
jnp
pop
ja
test
xlat
xchg
idiv
js
mov
jbe
mov
lods
shl
cmps
sbb
add
inc
sub
sbb
add
out
sbb
add
or
or
add
rol
mov
add
and
test
js
aaa
adc
jge
xlat
addr16
js
pushf
div
dec
jge
dec
ja
xchg
jnp
mov
pusha
add
jge
pop
sbb
jne
jge
mov
mov
je
enter
jne
xchg
cmps
popa
das
pusha
sbb
test
jg
pop
xchg
ins
gs
dec
mov
(bad)
aaa
cmp
mov
add
add
cmp
xchg
cmp
div
fmul
clc
add
cmp
aaa
xchg
jbe
add
add
adc
js
push
jo
or
ds
clc
add
or
add
or
and
jge
enter
ja
mov
inc
or
cmps
add
jg
push
test
push
sbb
cmps
or
xchg
sbb
pop
sub
addr16
cmc
inc
mov
call
enter
nop
xchg
sar
jp
lea
xchg
js
retf
iret
test
ret
dec
test
and
inc
jo
shl
push
stc
add
mov
sbb
sbb
add
mov
call
inc
adc
nop
sbb
add
xor
and
cmp
ja
cmp
inc
xchg
mov
xchg
enter
cmp
mov
jno
xor
cdq
xchg
add
cwde
js
push
(bad)
hlt
pop
jbe
or
xchg
xor
xchg
lds
add
xchg
dec
mov
dec
xchg
arpl
dec
mov
inc
or
add
fst
fst
pop
test
xchg
pop
shl
stc
(bad)
push
leave
xchg
and
dec
sbb
pop
sbb
test
jno
stc
cdq
sub
xchg
pushf
pop
test
cdq
add
fst
loopne
xchg
test
jno
xor
pop
pushf
inc
pop
jbe
pop
mov
(bad)
mov
mov
test
push
sub
sub
cmp
leave
xchg
stos
imul
mov
add
xchg
into
leave
cdq
fiadd
cmp
mov
xchg
fs
dec
mov
mov
push
jg
lahf
pop
add
mov
jmp
fwait
jb
xchg
or
ja
xchg
xchg
test
nop
mov
(bad)
ja
jge
or
cwde
xchg
lods
ja
jae
mov
dec
sahf
cmps
sbb
pop
mov
stc
mov
test
xlat
fst
dec
popf
(bad)
pop
fst
mov
stc
jb
push
xlat
cmp
sbb
xlat
xchg
inc
adc
xor
test
mov
sub
dec
fwait
inc
js
jl
xchg
sbb
(bad)
cmp
xchg
xchg
inc
xor
add
mov
cmp
or
stc
mov
ficomp
jmp
jl
jno
leave
add
mov
xchg
pop
call
mov
sbb
pop
movs
in
fwait
lods
stc
lahf
xchg
fnstenv
cmp
mov
dec
cwde
cmp
movs
inc
js
fadd
add
dec
xchg
inc
fidiv
pop
popf
mov
xchg
in
xchg
repz
cmps
cmp
fldenv
retf
mov
fisubr
mov
call
in
sahf
fstp
sbb
ja
lods
shr
mov
imul
enter
ficom
test
jo
(bad)
fldcw
call
lods
dec
lock
jo
mov
cdq
mov
xchg
pop
pop
cdq
loope
popf
daa
push
mov
dec
push
bound
pop
popf
pop
jns
mov
scas
mov
lods
push
retf
test
retf
scas
jmp
mov
clc
mov
mov
aas
pop
mov
pop
test
jns
push
push
popf
(bad)
mov
mov
jp
enter
or
daa
stos
popa
mov
ins
or
mov
xor
pop
jmp
aas
pop
test
mov
retf
mov
or
retf
mov
sbb
leave
xchg
fwait
sbb
or
(bad)
sbb
sub
nop
stos
bound
mov
jmp
imul
or
stos
fstp
stos
mov
sub
fild
test
fldcw
xchg
(bad)
leave
cwde
sub
retf
imul
mov
sub
mov
mov
stos
mov
jnp
shr
xchg
xor
mov
mov
fwait
mov
fild
cwde
cmp
imul
cwde
mov
ins
mov
xchg
bound
mov
stos
mov
leave
test
rcl
nop
in
or
pop
mov
(bad)
jo
mov
add
mov
in
mov
imul
mov
pop
add
(bad)
sbb
xor
cmp
sbb
ror
bound
and
movs
jmp
cmp
test
scas
out
ret
lods
ss
mov
stc
les
lds
sbb
inc
mov
push
ret
mov
jnp
lds
xchg
sbb
lods
adc
lds
(bad)
mov
mov
inc
add
sub
dec
(bad)
mov
jl
push
sbb
aad
call
mov
mov
stc
(bad)
cdq
cld
lds
mov
or
xchg
inc
add
enter
jle
stos
out
or
push
ins
test
pushf
retf
xchg
jo
scas
jecxz
mov
int3
push
in
int3
in
jp
xor
sahf
rcr
add
inc
add
inc
add
pop
(bad)
retf
ret
mov
sub
sbb
in
shl
retf
movs
mov
sub
fld
je
cdq
test
inc
add
jns
mov
mov
pop
into
sub
lds
enter
xchg
mov
cmp
add
rcr
lds
ror
fcmovne
add
add
int3
int
mov
pop
mov
lock
or
rcr
sub
sub
int
mov
sub
(bad)
mov
imul
ins
mov
push
or
inc
ret
mov
fdivr
pop
enter
push
xor
ins
int
dec
mov
int3
mov
dec
retf
sub
xlat
ins
pushf
jg
mov
mov
inc
(bad)
shl
lds
int
sbb
sub
add
or
cmp
or
jnp
enter
jg
xlat
xor
push
pushf
xlat
sar
or
(bad)
pushf
cmp
aad
dec
iret
sbb
rcr
shl
xor
ret
and
xor
mov
int
pop
cmp
lods
ins
aad
or
nop
ins
aad
or
xchg
dec
fcmovu
sbb
or
sub
pop
fdiv
fwait
mov
stos
lds
(bad)
(bad)
cld
mov
mov
int
push
pop
inc
lock
cmp
enter
push
ins
fdivr
cwde
pop
int3
push
or
and
push
in
fcmovnb
sub
cdq
sbb
idiv
jne
fmul
rol
fsubr
(bad)
lds
mov
ffree
lods
fild
fidivr
pop
ror
jmp
rol
fimul
mov
xlat
and
inc
std
fisub
(bad)
int
or
(bad)
cmp
and
fcmovnu
retf
icebp
popf
rcl
push
loopne
sub
cmp
and
aam
mov
sbb
pop
(bad)
sar
pop
ins
loopne
dec
fwait
push
push
or
jecxz
cmp
inc
sbb
sub
jecxz
loop
outs
rcr
fadd
sbb
in
ins
fcom
shr
add
out
sbb
sub
loop
pop
fisubr
loopne
sbb
jp
loop
cs
cs
dec
call
fnsave
call
pop
(bad)
icebp
jge
ja
mov
sahf
loope
dec
shr
fucom
jge
cmp
sbb
loop
out
out
(bad)
cmps
cs
mov
add
shl
xlat
sub
imul
sub
stos
sahf
xchg
(bad)
lock
fsubrp
ror
jnp
out
dec
in
movs
ins
jmp
push
in
pushf
mov
leave
dec
call
jle
rcr
adc
pop
cmp
dec
out
mov
(bad)
loopne
sahf
jmp
push
aam
sahf
out
push
out
fstp
sahf
aam
push
int
dec
in
cs
int
jmp
out
mov
aad
mov
in
fld
in
cs
loope
ds
scas
fstp
out
in
fucomp
mov
(bad)
scas
lock
imul
dec
loopne
adc
add
jne
jecxz
popf
xchg
dec
and
xor
in
push
outs
(bad)
fnstsw
into
add
fidivr
das
sar
mov
(bad)
jl
or
sbb
aad
ins
xlat
fisubr
into
cs
je
repnz
das
loop
into
shl
das
out
ror
loop
jmp
or
out
cmp
gs
hlt
mov
cmc
out
popf
out
lods
out
imul
aas
fldenv
mov
out
mov
pop
dec
in
outs
jmp
iret
in
(bad)
mov
hlt
push
loopne
(bad)
jnp
jg
pop
xor
out
idiv
test
sbb
fist
neg
repz
psubq
cmc
std
or
scas
dec
sti
scas
(bad)
cli
aaa
out
stc
je
aam
pop
loopne
aas
cld
fs
sar
out
scas
(bad)
sti
dec
outs
mul
repz
outs
in
mov
sti
dec
aas
in
xchg
jmp
mov
cwde
lahf
cld
iret
aas
std
sub
xchg
gs
neg
cld
push
ins
inc
outs
in
fcomp
xor
out
jle
movs
(bad)
inc
jle
les
or
sub
sbb
pop
add
pop
mov
test
test
xchg
test
sbb
xchg
cmps
xchg
xchg
mov
mov
xchg
mov
mov
add
test
mov
adc
mov
xchg
enter
rcl
mov
cmps
fmulp
loop
ficomp
out
faddp
loope
loopne
mov
sbb
inc
test
pop
sub
mov
or
nop
loope
pop
or
shl
pop
inc
pop
or
mov
cwde
or
mov
loop
mov
sub
out
adc
mov
loop
call
and
call
xor
and
inc
lods
cmp
jle
ror
out
fisub
mov
dec
cmp
xor
pop
dec
mov
mov
fs
dec
lods
mov
ror
iret
aam
test
adc
dec
mov
retf
jbe
dec
sub
les
stos
nop
sbb
push
in
pusha
stos
outs
and
adc
retf
lods
cmp
jmp
push
dec
iret
sbb
adc
hlt
mov
pop
mov
pop
jbe
xchg
dec
jmp
int3
(bad)
mov
xchg
call
imul
xor
sub
popa
jne
adc
daa
jmp
sbb
sbb
sbb
inc
pop
fst
push
ret
bound
xchg
inc
test
imul
es
xor
inc
ja
jns
stc
cmps
pop
inc
vpshaq
pop
or
inc
fnsave
test
dec
clc
retf
inc
movs
jns
or
dec
add
(bad)
push
fstp
cmp
out
dec
adc
mov
sbb
(bad)
fist
and
mov
or
xchg
and
sbb
pop
mov
cmps
rcl
xchg
sbb
in
or
mov
js
test
mov
loopne
mov
adc
arpl
mov
or
and
jmp
scas
jmp
push
or
cmp
inc
cmp
lds
pop
xchg
(bad)
mov
lock
lds
sbb
dec
lods
mov
stos
stos
mov
sub
mov
cmps
mov
(bad)
sbb
sub
mov
lods
xchg
arpl
or
fcmovb
stos
stos
ds
rol
popa
lods
mov
outs
dec
lahf
and
jmp
scas
mov
mov
outs
stos
mov
sub
cmc
mov
or
stos
mov
add
xchg
mov
lds
pop
xor
call
dec
pop
adc
jmp
sub
pop
lock
lock
fwait
sub
mov
add
push
jb
ins
mov
cmp
and
sub
ret
nop
repz
popf
xor
jno
iret
mov
sbb
iret
dec
jmp
mov
aas
stc
cwde
sbb
inc
xor
mov
mov
inc
outs
int
dec
pop
out
xor
xor
jae
or
test
dec
cmp
inc
add
(bad)
repz
int3
pusha
mov
jp
cld
adc
push
aaa
sbb
xchg
fidiv
jne
xor
rcl
pop
scas
cmp
or
mov
jmp
test
jp
jmp
xlat
cmp
inc
sub
(bad)
movs
daa
sahf
jnp
dec
mov
add
dec
push
lock
lock
jl
cdq
imul
mov
jg
fild
or
cmp
icebp
pop
test
jae
out
loope
jnp
mov
mov
jl
mov
xor
jp
aam
out
in
gs
jecxz
or
xchg
jne
sar
sar
imul
pusha
mov
loopne
fdiv
ins
call
out
jne
sbb
push
add
xchg
imul
call
ja
and
push
xor
adc
cld
pop
jmp
outs
mov
daa
cmp
dec
stos
or
sub
mov
jns
shl
push
dec
je
or
pop
les
stos
cwde
xor
out
sub
mov
and
mov
clc
mov
inc
pushf
test
rcr
cmp
div
and
cmp
jno
ins
hlt
mov
or
lock
xchg
es
das
ja
shl
repz
sub
rol
xchg
or
arpl
pop
test
xchg
movs
sub
cs
mov
xchg
dec
sbb
dec
retf
jmp
dec
cmps
xor
mov
cdq
leave
cmp
xor
dec
imul
ss
int
jbe
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
adc
push
outs
rcl
sbb
push
movs
jno
imul
in
loopne
cmp
or
push
movs
jbe
ins
pop
(bad)
fiadd
jnp
ror
pop
mov
or
pop
ret
(bad)
scas
cmp
dec
std
retf
cmps
xchg
scas
adc
imul
ror
cmps
(bad)
mov
sbb
fcmovb
add
mov
cmc
jmp
adc
push
mov
jge
imul
add
and
sub
xlat
and
ss
fnstsw
jmp
pusha
push
stos
pop
loope
push
add
test
shrd
iret
cmps
mov
ret
arpl
loope
loope
ret
sub
pop
mov
rol
push
jmp
aaa
mov
stos
stos
shl
(bad)
mov
mov
pop
or
js
icebp
jne
jbe
push
or
test
push
outs
adc
popa
add
test
push
test
loope
ja
aam
jno
(bad)
mov
repz
mov
inc
push
mov
inc
cmp
adc
(bad)
out
imul
out
rdmsr
sbb
and
lock
(bad)
icebp
cmp
nop
outs
lods
(bad)
sti
ret
inc
outs
or
test
add
add
inc
adc
mov
and
inc
add
jbe
or
cli
mov
ja
sbb
rcr
rol
ja
mov
jmp
and
ja
ds
add
clc
(bad)
and
mov
out
sbb
cmp
cs
repz
push
xchg
inc
loopne
hlt
jl
cmp
daa
inc
loopne
xchg
or
fs
ja
adc
xchg
mov
jns
pop
jbe
xchg
or
pop
(bad)
sub
aad
pop
fcmovnb
aad
je
or
pop
in
xchg
mov
mov
fidivr
fistp
(bad)
sahf
lock
mov
mov
xor
in
pop
ss
jne
mov
add
add
add
(bad)
cwde
rcl
mov
xlat
cmp
mov
mov
adc
cmp
push
pop
hlt
test
out
or
sar
lds
xchg
cs
leave
ins
ja
popf
rcr
jle
mov
popf
xor
stos
ins
pop
arpl
and
mov
mov
icebp
repz
cmp
sar
sub
pop
adc
std
shl
clc
(bad)
cmp
out
in
xchg
in
adc
frstor
push
jge
in
std
jae
popf
cmp
jmp
cmps
mov
aas
scas
shl
aad
shr
into
push
ja
out
xor
daa
cld
add
mov
adc
jecxz
cs
daa
dec
aaa
int3
add
outs
fiadd
mov
jle
sbb
adc
jbe
jo
daa
enter
iret
jno
das
push
in
lock
inc
push
push
add
cmps
jbe
add
pop
repnz
(bad)
lock
rcr
mov
sbb
and
jbe
pop
sub
sar
mov
add
mov
daa
mov
jle
sbb
in
pop
jmp
das
cli
add
jg
adc
loopne
inc
sahf
jne
lea
and
clc
pop
mov
xor
sti
repnz
mov
imul
cmp
inc
jns
out
pop
inc
jp
aaa
ins
jns
jb
lds
xchg
arpl
imul
push
cmps
jge
xlat
pop
out
push
jno
out
jg
je
xlat
jo
push
ja
mov
xor
xor
jno
jo
cld
xchg
ja
adc
cmp
outs
or
and
pop
sbb
or
popa
dec
not
cmp
daa
jno
data16
ja
(bad)
xchg
push
add
jo
gs
push
outs
cli
xlat
jae
cmps
add
jne
ss
out
push
pop
lea
jae
outs
leave
mov
pop
js
popa
or
dec
(bad)
jae
jne
mov
add
pusha
jle
ja
push
imul
scas
inc
mov
jge
xchg
xchg
fs
(bad)
jnp
fcom
xchg
or
fs
jne
cmps
jno
enter
arpl
cmps
pop
cmp
imul
adc
gs
cmp
pop
movs
pop
jl
call
loope
outs
adc
cmps
and
push
js
push
out
or
mov
stos
sbb
jbe
mov
add
fdivr
fs
adc
jl
ss
push
pop
push
data16
aaa
pop
ins
sbb
je
mov
lods
cmp
xchg
dec
gs
mov
adc
xlat
(bad)
std
(bad)
mov
add
push
xchg
(bad)
mov
jp
push
xor
aas
mov
jnp
pop
call
pop
ins
push
mov
jge
gs
enter
pop
(bad)
jl
xchg
call
imul
aad
bound
(bad)
sub
jnp
inc
outs
pushf
xchg
outs
and
imul
jb
jl
addr16
jp
daa
add
jl
inc
ins
xchg
cwde
outs
jae
xchg
les
in
mov
mov
jge
push
je
xchg
js
mov
dec
pop
pushf
test
inc
xlat
xchg
push
retf
ja
xchg
jbe
push
or
xchg
js
clc
push
nop
repnz
ja
inc
xchg
mov
jmp
sub
ja
or
jbe
pop
cmc
push
xchg
mov
jge
jmp
sbb
mov
mov
cwde
ja
fsubr
and
pop
nop
dec
rcr
xchg
push
arpl
jge
cmc
add
mov
jns
fdiv
jne
mov
pusha
mov
xor
div
(bad)
mov
pop
or
jns
cmp
pop
cld
test
xchg
popa
rcr
pop
jne
fld
loope
jg
mov
mov
pop
popa
cdq
push
add
fmul
ss
push
sbb
mov
aad
add
call
addr16
add
stc
leave
pop
or
es
pop
icebp
mov
int
mov
sbb
push
mov
push
jp
pop
in
popf
(bad)
add
or
out
inc
test
addr16
mov
(bad)
in
into
inc
outs
test
ins
jno
imul
add
aam
mov
xchg
inc
cs
movs
neg
push
pop
xchg
movs
inc
or
cmps
xchg
mov
popa
inc
add
movs
inc
cmp
push
movs
inc
mov
adc
movs
dec
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
adc
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
xchg
xchg
xchg
mov
mov
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
jle
inc
ds
mov
in
mov
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
inc
ds
mov
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
retf
jo
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
ror
lock
add
retf
and
add
jmp
xchg
xor
push
mov
and
mov
nop
add
mov
or
xor
jp
adc
mov
dec
xchg
xchg
out
sub
add
jo
daa
cmp
jmp
scas
dec
or
stos
scas
leave
dec
scas
xor
add
retf
add
or
sub
imul
cmps
sub
mov
dec
mov
xor
fwait
mov
mov
sub
and
(bad)
scas
sub
dec
add
jo
and
add
cli
popf
mov
mov
mov
mov
cmps
cmp
mov
jmp
lahf
or
sbb
jmp
sub
pusha
mov
cmp
pop
mov
pop
mov
sub
jnp
daa
mov
pop
inc
add
push
mov
retf
mov
xor
jo
xor
xor
add
add
sbb
dec
lods
xchg
imul
pop
mov
cmp
add
fstp
imul
add
stos
mov
fld
xor
add
sti
sar
adc
mov
jnp
mov
rcr
xlat
mov
jns
shl
mov
add
mov
add
mov
add
fiadd
xor
add
int3
ret
adc
mov
ins
add
and
adc
fadd
aas
lods
xchg
add
cmp
dec
ret
pop
cmp
push
dec
lds
add
cld
scas
sbb
mov
dec
lds
mov
fwait
lds
pop
sub
ss
ret
pop
jo
ins
sub
or
add
mov
fwait
(bad)
jns
les
lds
add
mov
sub
es
sub
ret
popa
sub
jle
mov
stos
sbb
mov
loopne
pop
xor
inc
lock
xor
mov
mov
mov
mov
jo
pop
adc
push
lods
leave
jp
mov
add
jl
jp
retf
push
mov
cld
retf
scas
mov
vhaddps
fadd
sub
cmp
(bad)
shr
(bad)
mov
aad
mov
cmp
out
cwde
int
dec
retf
cli
or
or
int3
sbb
fwait
pushf
leave
fwait
dec
stos
movmskps
mov
into
mov
add
rol
add
cmps
or
out
mov
fwait
mov
cli
or
hlt
mov
add
loop
shl
cmp
icebp
sub
adc
or
cmps
dec
retf
icebp
pushf
sar
in
mov
mov
cli
jl
inc
cli
shl
xor
rol
shl
(bad)
cdq
int3
rcr
cmp
mov
rcr
sbb
xor
sub
pop
jge
aas
sub
repnz
rol
into
out
sbb
push
fst
in
ror
shl
sbb
cmp
out
fcom
inc
retf
xchg
aam
jl
push
and
jge
sbb
rol
add
into
and
inc
add
rcr
add
add
fst
inc
mov
in
int3
aad
(bad)
fsub
sub
jae
rcr
fst
test
xchg
aam
std
aam
cmp
pop
lods
scas
adc
int
or
dec
int
or
scas
sub
repnz
(bad)
adc
aam
int
test
ror
jmp
xlat
sbb
pop
lock
fdiv
fadd
and
sbb
mov
fcmovne
std
(bad)
mov
ffree
std
ror
or
in
rol
in
fldenv
lods
aam
sbb
shr
cdq
jge
scas
pop
fcomi
std
into
xchg
lea
or
xlat
mov
fisttp
add
iret
jge
(bad)
pop
add
fsubr
iret
add
loopne
mov
sbb
fst
into
jne
iret
mov
fcmovu
mov
aam
or
mov
fsubp
lods
rcl
add
popf
fiadd
scas
(bad)
in
loope
or
xlat
cmp
pop
std
fisub
mov
lods
fsubr
sbb
add
loopne
fadd
mov
mov
ffree
mov
stc
std
fild
out
fsubr
outs
aam
push
loop
sub
into
lods
xlat
cmps
jl
jle
aam
jge
dec
dec
loop
out
loopne
sub
pop
mov
addr16
or
aam
(bad)
sub
std
sbb
mov
jo
int
push
rol
mov
pop
or
mov
loopne
(bad)
fsubr
(bad)
or
call
cmp
dec
ins
fnstenv
push
loopne
sahf
frstor
cmps
mov
or
retf
dec
loopne
out
out
std
out
or
mov
jecxz
out
loopne
(bad)
xor
sbb
ror
(bad)
std
out
sahf
out
add
xlat
jmp
in
sahf
jmp
mov
arpl
push
mov
gs
in
es
or
call
int
stos
jle
(bad)
sub
call
in
jmp
jmp
sahf
fsubr
loopne
mov
mov
int
into
add
pop
xlat
cs
out
ins
in
jnp
lock
cs
push
shr
sahf
loopne
jle
retf
in
dec
lock
into
add
stos
pop
adc
fs
jo
call
push
iret
and
stos
pop
add
mov
icebp
mov
in
add
out
jmp
call
std
iret
ror
call
scas
into
cld
sbb
xchg
cmp
cmp
in
fdivp
push
pop
hlt
add
jecxz
fcomip
scas
into
xor
repz
retf
outs
into
add
out
out
(bad)
cs
xor
fdivr
pop
repz
cmp
outs
push
iret
or
call
mov
cmps
cs
out
xchg
repnz
cld
iret
dec
iret
lock
in
shr
cmc
dec
mov
aas
iret
cmc
or
repz
arpl
mov
out
jg
inc
out
out
sub
add
xor
fucomip
cmps
scas
shl
cli
xor
add
icebp
retf
sbb
or
cmps
push
stc
pop
outs
test
popa
aas
in
jmp
fdivp
repnz
test
clc
dec
das
sti
xor
clc
shr
mov
cld
sbb
add
mul
std
lods
fcomip
mov
std
cmp
sbb
mov
icebp
dec
maskmovq
scas
std
lods
mov
int
clc
dec
das
stos
sbb
test
shl
fdiv
rcl
call
dec
cmp
pop
enter
jns
push
enter
xor
rcr
fdivr
cwde
fldenv
and
retf
sub
fneni(8087
sbb
call
clc
sbb
retf
sti
je
cmp
push
imul
js
popf
pop
lods
cmp
lea
fistp
mov
mov
ins
sbb
dec
ins
mov
jl
mov
movs
xor
lods
adc
stos
lds
sub
sbb
daa
mov
fsub
add
mov
stos
pop
aaa
movs
dec
inc
repnz
ror
repnz
dec
cmp
cmp
or
and
push
inc
inc
or
mov
outs
icebp
push
sub
nop
loop
fnsave
retf
lahf
repnz
and
fwait
mov
fnstsw
ins
imul
push
xchg
mov
mov
sub
mov
cmps
lea
std
sbb
pop
sbb
cmp
sub
out
push
jbe
sub
cmps
(bad)
in
push
jns
gs
push
sub
push
mov
mov
(bad)
test
mov
(bad)
mov
adc
aam
adc
ins
ja
das
out
out
dec
call
xchg
mov
scas
in
in
mov
repnz
xchg
test
mov
xchg
not
outs
push
imul
push
pop
mov
xchg
or
cmps
jns
call
dec
frstor
push
loop
daa
dec
dec
pop
in
out
addr16
(bad)
cdq
inc
jae
xlat
fldenv
inc
mov
(bad)
mov
call
pop
xchg
aaa
mov
jns
or
push
sub
movs
sahf
sub
adc
cmps
adc
push
sbb
cmps
fidivr
mov
pop
fldl2t
xchg
inc
sub
test
retf
or
mov
mov
in
cdq
out
push
js
xor
pop
push
add
xchg
xor
stc
sub
(bad)
sub
mov
cmc
cmp
xchg
test
loop
inc
cdq
pop
pushf
pop
outs
or
xor
jns
fld
aaa
and
cs
(bad)
lea
cmp
xchg
(bad)
test
adc
out
or
cld
lds
test
xor
cmp
test
pop
les
cli
loope
adc
xchg
mov
mov
add
mov
mov
push
call
gs
in
pop
pop
xor
fsubr
adc
fbld
mov
nop
mov
mov
jnp
mov
repnz
xor
mov
sub
retf
test
jge
inc
mov
nop
adc
mov
stos
pusha
retf
jnp
(bad)
fstp
sub
sub
mov
sub
nop
dec
cmp
push
sbb
iret
fidivr
add
jns
adc
repnz
cmc
inc
mov
jbe
push
aam
je
inc
mov
sbb
mov
mov
es
std
loop
pop
inc
xchg
and
repnz
inc
retf
fsubp
repnz
adc
dec
aaa
aam
in
or
pushf
adc
(bad)
sbb
das
push
ins
fwait
and
sbb
mov
repz
pop
lods
in
idiv
mov
push
pop
push
dec
push
mov
cs
cmp
leave
pop
loope
in
mov
cmps
outs
loope
outs
xor
mov
mov
mov
mov
ins
cli
loop
loope
fcomip
mov
std
inc
add
push
mov
sub
ins
jge
fsub
out
jbe
dec
test
(bad)
loop
js
add
out
push
icebp
ret
inc
ins
or
cmp
ds
packuswb
mov
cli
pop
idiv
mov
cmp
push
(bad)
cld
pop
mov
mov
add
push
call
arpl
iret
pop
inc
mov
in
sbb
mov
rcr
iret
ins
dec
or
add
lock
sub
cli
inc
dec
lods
out
outs
test
movs
pushf
out
sbb
es
pcmpgtb
mov
add
out
jne
pop
sbb
repnz
icebp
lock
xlat
ds
xchg
in
js
xchg
xchg
mul
addr16
adc
fidiv
cmp
in
add
jno
and
jae
or
ror
inc
pop
inc
call
lock
scas
mov
xor
aas
(bad)
jns
mov
les
add
in
jo
push
sub
sub
(bad)
mov
(bad)
push
(bad)
xor
or
jns
ins
daa
xor
daa
test
xchg
cli
or
pop
int3
cmp
(bad)
fxch
push
xchg
push
push
mov
pusha
sub
iret
fs
and
inc
test
mov
sub
test
mov
cmp
jno
push
add
inc
jmp
and
mov
int3
movs
and
dec
dec
push
push
push
add
mov
cmp
adc
lods
lea
mov
movs
cli
or
test
mov
lea
mov
scas
or
xchg
pushf
cmp
cmp
test
sahf
or
add
dec
dec
cmp
ficomp
outs
dec
shl
pop
and
aas
dec
cmp
repnz
jmp
and
sbb
cwde
call
cs
inc
jmp
push
inc
push
add
pop
icebp
cmps
pop
push
add
cmp
repz
dec
mov
xor
neg
mov
xor
loop
add
mov
push
cmps
mov
sub
jp
xchg
push
xor
xchg
(bad)
mov
jae
sub
enter
adc
sbb
xor
ins
sub
in
adc
popf
push
sub
ins
jmp
sbb
pop
jmp
cmc
scas
add
cmps
sbb
ins
sub
ror
cmp
xchg
push
lea
push
xchg
lods
sub
push
out
daa
dec
in
xchg
popf
pop
mov
pop
push
jo
mov
sar
jmp
les
cmp
jne
add
ja
imul
ss
movs
data16
or
stc
mov
in
add
pop
add
js
out
mov
fcomip
inc
aaa
mov
inc
sbb
pop
push
mov
or
add
rol
jno
ret
pusha
add
movs
mov
and
jno
dec
pop
add
jo
pusha
jle
inc
out
imul
xor
(bad)
fdivr
fcomp
sub
repz
ror
mov
in
fldenv
dec
add
adc
mov
fxch
loopne
dec
inc
or
lock
mov
cmc
mov
jle
jp
jl
sbb
leave
les
add
xor
sub
sub
inc
pushf
(bad)
fistp
iret
pop
enter
or
sbb
jbe
adc
test
push
add
or
pusha
cmps
xor
rol
xchg
je
sbb
push
loopne
lahf
push
loopne
inc
rcr
add
rep
pop
mov
ud2
cli
into
jns
in
test
sub
test
jp
scas
and
or
pop
sbb
aaa
cmp
in
push
shl
push
pop
mov
cmps
xchg
adc
xor
add
dec
out
jg
(bad)
mov
icebp
fucomi
push
(bad)
mov
cli
pushf
test
cmp
add
adc
mov
retf
call
dec
aas
loope
std
push
mov
ins
cmps
fcmovnu
add
test
mov
shl
jo
sbb
mov
(bad)
dec
add
mov
cmp
loopne
cmp
cmp
ins
xor
push
pop
cld
loope
xchg
ss
mov
add
icebp
adc
and
shl
inc
push
jae
inc
pop
icebp
cmc
int
iret
sub
retf
repz
jmp
lods
inc
mov
into
sbb
jge
add
(bad)
fsubr
jnp
retf
jle
mov
dec
in
jo
ret
cs
mov
jg
fcom
mov
out
xor
(bad)
aad
jae
or
out
xchg
mov
and
add
dec
add
sub
pop
pop
mov
enter
(bad)
jge
cld
add
pop
lock
cmp
or
rol
retf
cmp
in
push
js
scas
jge
jmp
adc
pop
pop
out
lods
xlat
add
sti
mov
loope
xor
mov
jg
cmc
(bad)
idiv
(bad)
jge
jae
add
mov
ret
adc
jl
and
cmc
ja
imul
mov
lahf
pop
sti
mov
sahf
jno
(bad)
or
or
push
stos
js
xchg
xchg
jg
fdivr
enter
inc
fcom
jg
lock
mov
fadd
xchg
pop
sar
jg
pop
jp
aaa
js
out
pop
or
xchg
xor
or
sub
outs
and
and
xor
add
xor
mov
pavgb
sub
jae
pop
jl
sub
mov
mov
(bad)
es
add
add
dec
push
mov
push
sbb
mov
inc
mov
ja
push
cmp
js
jge
mov
lea
xor
jae
cmps
xchg
test
enter
jp
ja
hlt
aaa
cmp
push
bound
sub
lds
and
push
lock
mov
and
sub
movs
enter
add
mov
lock
mov
xchg
xor
nop
add
loope
adc
and
jl
pop
sub
add
or
sbb
cmp
mov
mov
add
ja
adc
js
test
mov
jbe
xchg
jp
js
(bad)
out
ja
lea
jno
cwde
jbe
idiv
push
(bad)
ret
ins
cmc
add
mov
mov
mov
add
jnp
mov
pop
cmp
js
fisubr
pop
jo
push
sbb
nop
test
push
or
hlt
dec
cmp
sbb
addr16
pop
or
mov
nop
imul
idiv
clc
or
mov
adc
xchg
pop
leave
xchg
xor
cmp
inc
lock
adc
sbb
add
xchg
adc
adc
loopne
pop
call
or
lea
sbb
xchg
cmp
cdq
enter
xchg
mov
test
dec
pusha
xchg
adc
cmp
pop
add
sub
or
jns
sbb
pop
jmp
add
add
(bad)
je
or
cwde
xchg
push
stc
mov
xor
call
outs
mov
xchg
mov
xchg
push
nop
mov
add
xchg
rcr
xchg
call
push
cdq
mov
repz
jns
mov
add
or
or
xchg
mov
add
and
push
cdq
jno
mov
adc
das
adc
test
leave
(bad)
loop
xchg
out
or
stos
jns
xor
push
cwde
(bad)
jmp
dec
add
sub
xchg
lea
fwait
js
mov
stc
pushf
lods
(bad)
mov
pop
sub
fcom
mov
sub
call
js
cdq
(bad)
inc
leave
call
xchg
jno
mov
fstp
xchg
xchg
enter
cmp
ficomp
cwde
xchg
(bad)
or
add
xchg
jp
call
stos
sub
imul
dec
cmp
popf
ja
xchg
xor
xchg
adc
or
or
xchg
loopne
nop
jmp
xchg
or
test
add
xchg
pop
ficom
jns
cmp
sbb
test
mov
pop
and
js
fisttp
or
add
or
fiadd
lock
imul
fwait
retf
outs
retf
inc
test
fisub
xchg
xchg
mov
cwde
inc
leave
test
or
enter
fwait
dec
jns
inc
jns
cwde
or
test
dec
lods
jmp
stos
aaa
sbb
jp
mov
call
scas
jl
add
retf
jo
adc
movs
push
mov
(bad)
sbb
or
sub
mov
cld
pop
scas
out
lods
and
xchg
sbb
movs
jmp
mov
jo
addr16
and
pusha
push
mov
cli
add
retf
add
jmp
movs
in
movs
jmp
add
gs
sub
stc
test
test
cmp
call
or
sti
jp
mov
scas
push
jmp
dec
test
mov
cdq
dec
sub
test
lods
call
xchg
jge
mov
imul
scas
sub
xchg
mov
mov
jns
std
dec
mov
cmp
cdq
lea
xchg
add
stos
mov
mov
aad
cdq
iret
mov
jae
test
jmp
call
mov
inc
pop
sbb
mov
mov
mov
pushf
imul
outs
sbb
add
stos
stos
ror
sti
pop
pop
xchg
imul
scas
pushf
stos
cmps
pop
retf
mov
sub
stc
mov
jnp
jmp
mov
sar
movs
push
jmp
(bad)
mov
mov
mov
dec
mov
sbb
retf
mov
jp
sbb
movs
cmc
cdq
mov
mov
lock
jmp
nop
mov
std
jmp
pop
dec
mov
test
int3
test
jmp
movs
add
popf
sti
dec
mov
dec
rcl
fucomi
add
add
add
retf
shl
mov
xor
sbb
add
xchg
add
repnz
rol
nop
sbb
inc
add
adc
sub
ret
(bad)
stos
mov
sbb
stc
ret
shr
adc
fild
cmp
or
inc
mov
pop
int3
lods
cmp
mov
jmp
pop
sbb
dec
ret
ret
enter
jbe
mov
pop
add
cmp
data16
push
pop
lods
pop
rol
inc
add
ret
mov
in
leave
inc
jl
xchg
test
inc
mov
pop
retf
(bad)
and
mov
jns
ja
lods
movs
vminpd
or
rol
addr16
adc
sub
or
xor
jbe
(bad)
int3
sub
mov
mov
xchg
sbb
inc
add
inc
add
mov
jmp
mov
sbb
sbb
mov
sub
sahf
sub
add
fisttp
in
cdq
ror
jp
iret
push
sbb
movs
mov
mov
repz
jmp
mov
fxch
mov
stos
retf
leave
(bad)
fmul
das
mov
leave
retf
int
or
lods
sbb
pusha
into
call
(bad)
ins
dec
(bad)
in
sbb
or
enter
sub
int
or
cmp
or
imul
cmp
mov
shl
stos
ret
adc
or
mov
jmp
mov
push
xor
mov
cld
into
push
cmp
aaa
cmp
pushf
fwait
shl
ror
cmp
jmp
retf
out
or
rcr
inc
dec
(bad)
mov
into
or
rol
jl
sbb
shl
mov
sbb
addr16
xchg
mov
aad
(bad)
int
jnp
push
cmp
mov
cmp
xor
ins
mov
jae
les
lods
scas
xchg
leave
in
sbb
sar
mov
int3
leave
pushf
mov
or
test
mov
mov
jo
int
popf
int
pop
lods
add
int3
sbb
popf
fmul
ins
add
add
xor
fsubr
aam
or
inc
int
ss
ins
out
(bad)
int
add
dec
fnstenv
fild
shl
shl
in
ror
rol
sar
jge
pop
jge
imul
jle
mov
aam
mov
sub
xchg
scas
fnsave
int
xchg
pop
mov
sub
mov
loop
dec
(bad)
loop
shr
(bad)
(bad)
(bad)
std
(bad)
ror
mov
sbb
inc
int3
sub
fsubr
fist
loopne
pushf
loop
or
cmc
popf
ret
out
in
jecxz
or
sub
or
loop
out
loop
cmp
bound
cmp
loope
outs
aad
jp
mov
fst
fadd
into
fiadd
jecxz
fsubp
cmp
jecxz
push
in
sub
cmc
popf
jecxz
cs
dec
(bad)
sub
mov
loope
push
(bad)
fiadd
push
jmp
pop
loopne
sub
push
xlat
int
in
ins
loopne
int
movs
lods
loop
pushf
jmp
popf
ficomp
in
cs
in
out
sub
mov
jmp
fsubp
lock
fist
call
pusha
push
xchg
or
pushf
scas
int3
(bad)
push
fild
sahf
fisub
in
mov
jo
call
push
jmp
out
jecxz
push
in
out
jge
loopne
sahf
jmp
lahf
into
xchg
sub
push
in
pop
fisttp
(bad)
fadd
jmp
ds
cmp
(bad)
cmp
cmp
out
sbb
call
outs
jecxz
into
fdiv
jmp
adc
pop
mov
cmps
mov
rcr
fmul
jmp
or
movs
add
dec
sub
jle
add
out
lds
in
(bad)
stos
add
dec
hlt
or
out
sar
mov
in
push
fdivp
inc
lods
lock
sbb
fwait
sti
fistp
push
out
and
sbb
dec
iret
fld
hlt
bound
mov
jge
out
inc
cs
das
in
pop
idiv
hlt
imul
mov
not
in
out
add
out
mov
ficomp
(bad)
out
mov
out
inc
jle
add
in
imul
not
test
xchg
pop
(bad)
pop
syscall
outs
(bad)
in
mov
not
push
sti
adc
clc
push
lahf
stc
jmp
jmp
verr
lock
neg
fild
add
pop
jmp
(bad)
pop
cld
shr
scas
ror
pavgb
std
cs
iret
das
stc
fdivr
test
sti
js
clc
lock
mov
clc
shr
fcmovb
das
(bad)
fstp
jne
std
mov
out
xchg
pop
dec
test
pop
sub
or
test
add
xchg
xchg
add
mov
add
cdq
scas
movs
cmps
lahf
sub
mov
mov
xchg
xchg
xchg
mov
mov
rol
cmps
push
ror
sahf
mov
xchg
movs
mov
aam
xchg
or
add
movs
cmps
jecxz
xchg
cwde
add
rol
jp
ins
adc
(bad)
add
add
sahf
stos
sub
das
fs
(bad)
cmp
pop
sbb
push
xchg
xchg
mov
leave
mov
sbb
dec
dec
nop
pushf
and
mov
ins
pop
(bad)
int3
and
xchg
fcom
scas
jne
not
sbb
push
ret
ins
inc
fs
sub
leave
pop
add
xor
sbb
scas
pop
mov
fwait
pop
loop
or
cmp
xor
nop
shl
jbe
dec
cmp
push
xchg
retf
push
jb
xchg
mov
movs
dec
dec
fbld
pop
sub
and
lea
xchg
pop
pop
pop
jmp
xchg
scas
lds
sub
adc
mov
outs
inc
pop
call
adc
inc
xor
loopne
mov
push
not
(bad)
jbe
xor
mov
pop
xchg
mov
jb
lahf
lods
sbb
pop
cmp
add
ret
sbb
sub
cmp
jne
mov
bound
mov
xor
movs
idiv
int
loope
iret
outs
jle
in
add
or
(bad)
pop
inc
push
(bad)
ror
push
dec
adc
movs
and
cmp
dec
mov
mov
mov
mov
and
jb
popa
enter
int3
adc
or
push
ja
adc
dec
jno
data16
sub
shl
jmp
pop
sub
cwde
hlt
pusha
(bad)
adc
pop
xlat
xchg
(bad)
dec
adc
mov
test
pop
sub
and
mov
nop
cdq
or
inc
cmps
xchg
jne
inc
setle
adc
sbb
call
adc
or
fisub
stc
loop
das
cmps
jo
push
inc
cmp
arpl
sahf
dec
add
jp
pop
pusha
jge
shr
push
add
adc
dec
icebp
lds
sbb
dec
or
jmp
mov
mov
or
mov
retf
xchg
mov
mov
jmp
sahf
mov
mov
cmp
cli
add
cmp
repz
or
lods
adc
push
imul
out
mov
scas
addr16
mov
movs
cs
leave
mov
ins
mov
mov
or
lods
adc
and
call
test
sub
mov
ret
call
mov
(bad)
hlt
add
int3
push
lock
mov
sbb
sub
enter
or
cmp
and
mov
pushf
dec
out
(bad)
aam
pop
jb
(bad)
xor
ins
mov
cmp
mov
pop
fsub
inc
std
inc
fisub
shl
mov
add
pop
mov
ja
pop
mov
mov
or
dec
in
neg
aas
cmp
loope
xchg
push
inc
xchg
or
fidiv
add
aas
xor
ins
out
sar
out
sahf
or
cmp
xor
adc
pop
ret
sub
xor
or
ds
in
ins
shr
jmp
jbe
cmp
pop
in
ins
mov
xor
jae
xor
retf
iret
or
hlt
push
(bad)
clc
gs
loopne
jecxz
xchg
mov
sub
(bad)
jns
loop
outs
dec
or
addr16
sti
push
xor
lock
and
ret
dec
inc
mov
mov
pop
jmp
les
pop
mov
jg
mov
mov
dec
and
cmps
xor
rol
or
xor
cmp
sbb
fs
cmp
add
sub
jae
jl
cld
dec
test
imul
add
cmc
pop
fdivr
cmp
push
pop
test
adc
jno
movs
pop
loopne
enter
pusha
xchg
jo
out
cmc
push
xchg
popa
ret
data16
sub
mov
or
or
arpl
inc
cmc
inc
xor
repz
pavgw
add
loopne
ins
xor
push
adc
mov
and
pop
push
sbb
mov
mov
xchg
adc
ins
jle
and
stos
jbe
and
ins
adc
sti
clc
lds
xchg
mov
dec
mov
ds
push
mov
cld
xchg
dec
mov
and
push
push
push
xchg
xchg
sub
daa
out
inc
mov
mov
sub
sbb
push
outs
nop
mov
call
cdq
mov
fadd
push
adc
stos
stc
dec
addr16
rcr
ret
stc
dec
jo
(bad)
xchg
pushf
mov
stos
test
call
into
jp
repz
in
es
popf
(bad)
movs
out
aad
dec
jae
shl
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
cmp
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fnstcw
mov
push
shl
mov
or
add
sbb
or
inc
addr16
mov
mov
lods
imul
mov
shr
jge
pop
sbb
clc
inc
adc
cmp
jl
pop
dec
enter
mov
scas
push
add
or
aaa
mov
jge
push
push
xchg
mov
xor
pop
repnz
xchg
mov
in
jb
mov
fild
aaa
stos
lahf
lea
inc
pop
add
loop
mov
enter
inc
loopne
pop
inc
sar
ins
push
adc
push
dec
rol
mov
add
cmp
or
and
push
ret
stos
imul
mov
xor
clc
mov
mov
popa
adc
cmp
das
sub
sbb
lock
fs
pop
(bad)
adc
icebp
ins
xchg
jl
jmp
mov
imul
push
sub
dec
lods
test
imul
mov
pop
out
jb
and
mov
imul
ja
imul
xchg
xor
dec
pop
ret
sub
jo
mov
nop
mov
mov
loop
pop
inc
into
and
adc
or
xchg
and
and
dec
mov
je
lods
fdiv
jae
shl
cwde
inc
sbb
dec
fist
int3
push
jo
mov
cmp
popf
jo
adc
rol
pop
jnp
pop
sti
push
iret
stos
scas
xor
mov
repnz
fs
shl
or
cmp
loope
fld
or
sbb
mov
mov
std
in
push
xchg
stos
shl
adc
gs
cdq
ror
aaa
lods
std
fwait
pusha
sub
fcomi
xchg
inc
cmp
fiadd
jo
adc
xchg
(bad)
and
pop
xlat
(bad)
(bad)
push
xor
jo
add
iret
(bad)
ja
(bad)
jo
xor
jp
mov
mov
ins
jo
push
ret
sti
mov
je
gs
ret
cwde
sar
cs
adc
mov
adc
and
cmps
mov
(bad)
jmp
xchg
shl
arpl
jbe
sub
test
stos
cmp
ss
add
jae
rcr
mov
popf
fwait
in
xchg
push
ret
jne
sar
daa
sti
fisttp
imul
mov
jnp
in
rcr
mov
jns
scas
(bad)
push
gs
jae
pop
frstor
iret
mov
mov
nop
cmp
mov
outs
inc
(bad)
pop
pop
pop
pop
mov
fldcw
fiadd
pusha
jns
cmp
mov
loopne
add
(bad)
mov
sub
push
jmp
fldenv
cmp
inc
retf
repnz
call
mov
ins
loopne
ror
pop
in
push
push
loope
cmp
ror
daa
std
adc
pushf
(bad)
ror
jecxz
out
mov
in
dec
clc
xchg
xchg
fst
push
std
mov
or
cli
add
pop
js
xor
(bad)
xchg
pop
imul
push
jp
pop
cmp
mov
jl
inc
outs
mov
ins
mov
addr16
cmps
add
pusha
addr16
push
xchg
push
inc
js
mov
adc
pop
fdiv
outs
out
test
jp
jbe
rol
jg
xchg
daa
pop
retf
xlat
bound
jnp
jne
ret
stos
xchg
mov
add
or
jne
in
inc
(bad)
jb
out
ja
cmp
pop
add
pop
test
mov
xlat
out
inc
adc
cmp
add
xchg
arpl
test
mov
jg
dec
xchg
out
pop
test
lds
pop
jo
inc
add
ja
test
seta
jo
mov
outs
rcl
popa
adc
jnp
es
xchg
out
jbe
mov
test
push
jbe
outs
pushf
and
cmp
js
push
add
fdivr
or
enter
je
call
jmp
sbb
fadd
out
mov
gs
xlat
cmp
or
add
test
gs
je
inc
mov
arpl
jge
ja
in
xchg
pop
popa
sub
add
jl
(bad)
test
js
cmps
arpl
mov
inc
cmps
lea
jle
xchg
pop
ss
cmp
jp
push
mov
add
imul
test
mov
(bad)
aam
gs
mov
add
jo
enter
daa
push
call
jl
mov
jge
(bad)
jb
cwde
pop
push
pusha
imul
shl
aas
or
inc
xchg
fwait
inc
arpl
pop
in
jl
jne
xorps
push
adc
fs
test
ja
sbb
sbb
jae
xchg
pop
dec
fldenv
div
mov
mov
and
jmp
jnp
or
sbb
xchg
xor
adc
cmc
(bad)
jne
mov
daa
jp
cmp
cdq
pop
add
jno
mov
or
mov
jp
js
mov
xchg
and
mov
imul
lods
sbb
add
mov
jo
test
xchg
movs
pop
pop
xchg
or
fcom
(bad)
gs
outs
mov
push
inc
pushf
mul
call
lock
enter
xchg
add
add
aad
push
imul
mul
pop
bound
push
add
sub
inc
pop
imul
(bad)
sahf
inc
fdiv
or
data16
jns
mov
xchg
mov
xchg
in
sahf
sbb
jp
xor
mov
test
pop
neg
or
or
aad
mov
jae
js
add
dec
rol
pop
mov
cmp
adc
jge
mov
sbb
mov
ja
cwde
outs
xor
xchg
test
in
bound
xchg
shl
out
mov
xchg
mov
cmp
add
xchg
inc
(bad)
popa
sbb
cmc
xchg
outs
sbb
dec
rcr
inc
imul
jp
push
cmp
mov
jg
xor
cli
test
push
lds
xchg
(bad)
push
je
mov
sub
cwde
push
jp
pop
add
add
cmp
sub
adc
jg
cmps
mov
test
sbb
pop
test
call
test
sbb
pop
stos
cmps
jp
test
stos
stos
pop
pop
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
add
popf
cli
sub
mov
add
dec
add
push
scas
fild
inc
cmp
push
mov
stos
mov
sub
mov
retf
mov
stos
mov
sub
cmp
jmp
cmp
xchg
mov
iret
or
mov
lods
mov
fstp
sbb
retf
mov
fwait
mov
and
and
jmp
add
add
sbb
dec
lods
mov
ficomp
jmp
mov
pop
mov
jmp
add
mov
(bad)
sub
cmp
fstp
nop
mov
dec
scas
pop
lock
cmp
mov
cmp
xchg
sub
sbb
sbb
mov
cmp
pop
inc
add
jmp
ret
xor
adc
mov
ins
add
and
adc
cmp
xor
rol
cmp
ret
sub
les
sub
dec
mov
add
cld
scas
pop
retf
mov
sbb
push
lods
mov
jmp
bound
rol
loopne
arpl
shl
add
stos
mov
or
aas
pushf
(bad)
dec
sbb
push
mov
mov
lods
xchg
ret
pusha
pop
(bad)
out
mov
mov
out
js
and
sub
add
sub
mov
mov
xchg
jl
mov
lods
scas
dec
ror
pop
add
pop
jo
cmps
jl
or
add
lods
xchg
cmps
mov
arpl
int3
add
sub
cld
mov
add
sbb
mov
retf
in
mov
mov
test
retf
stos
mov
leave
mov
mov
add
into
jmp
pusha
add
mov
lods
fmul
stc
pushf
into
cmps
or
nop
sbb
lock
mov
into
jmp
add
shr
cld
retf
int
mov
in
jl
cli
dec
into
xor
iret
in
fmul
stos
int3
into
adc
iret
stos
pop
iret
jp
shr
int
in
mov
mov
sub
mov
in
rcl
std
retf
shl
sbb
xor
shr
shl
in
sar
ins
int
jl
sbb
aam
ins
rol
xchg
adc
retf
ror
aam
popf
into
in
aam
std
shl
jge
or
inc
pop
iret
and
and
pop
and
jge
xor
rol
add
into
and
jmp
std
mov
popf
aad
pop
ror
retf
out
xlat
jb
shl
(bad)
aam
jge
outs
ins
fadd
aam
pop
shr
sar
shr
shr
std
fmul
iret
rep
fdivr
int
ins
(bad)
out
rcl
ins
(bad)
sub
fmul
bound
or
push
fld
fidiv
aam
in
xlat
mov
lods
sbb
ins
int3
mov
sub
add
(bad)
dec
fucomi
mov
pop
lock
or
dec
mov
call
cmp
mov
fst
into
sub
and
fmul
fst
pop
mov
sub
jmp
int
(bad)
fild
fistp
shl
pop
shr
jo
push
dec
loopne
int
inc
cmp
or
fwait
int
mov
push
xor
and
data16
dec
pop
fisub
in
retf
fstp
sub
adc
aad
adc
(bad)
pop
int
sub
daa
xor
ds
in
loope
in
enter
pop
mov
scas
int
out
(bad)
aad
scas
frstor
push
rol
loop
out
xlat
cli
popf
fidivr
leave
dec
sahf
shl
popf
fld
ficomp
out
enter
and
(bad)
std
(bad)
aam
push
xlat
std
dec
into
sbb
(bad)
pushf
(bad)
cmp
ins
pop
shl
fxch
lods
ror
jecxz
scas
in
pop
fcomp
(bad)
jecxz
lods
fucom
in
in
(bad)
shr
sub
inc
into
in
sbb
inc
dec
out
ins
fadd
in
(bad)
fcomp
iret
cmp
add
push
jo
or
mov
(bad)
in
loope
outs
fcomp
in
pop
call
ds
sahf
jmp
outs
shr
push
outs
add
sub
mov
(bad)
int
add
add
lods
in
sahf
jmp
fstp
jg
fbstp
iret
mov
in
into
in
mov
imul
sahf
into
sbb
out
fucomp
out
out
fsubp
jno
loop
push
fcom
ins
in
mov
fsubr
out
in
in
outs
lock
call
or
mov
add
sbb
and
in
jmp
icebp
mov
add
(bad)
jmp
jle
loope
into
and
repnz
scas
pop
jmp
mov
aad
pop
jmp
outs
repnz
out
jo
pop
mov
(bad)
std
jmp
int3
jmp
ds
mov
pop
pop
jecxz
scas
hlt
push
jge
inc
push
in
mov
sbb
mov
repz
adc
mov
icebp
push
pop
into
push
push
(bad)
test
hlt
out
in
sub
call
scas
jmp
pop
in
jne
out
movs
mov
outs
mov
repz
div
in
mov
sub
add
xor
fcomip
sub
idiv
vpcomq
(bad)
stc
ds
sahf
dec
in
outs
in
pop
repnz
mul
cmc
mov
lock
mov
push
fdivp
and
not
in
add
stc
mov
ffreep
outs
cld
das
das
icebp
pop
scas
iret
and
jmp
pop
imul
cld
jmp
add
neg
jg
sub
fild
call
(bad)
cmc
ret
mov
add
cld
test
cmps
into
out
outs
loop
(bad)
push
dec
stc
mov
inc
mov
arpl
jae
enter
sbb
leave
push
mov
dec
sub
mov
imul
xor
jmp
jp
je
leave
sbb
cmp
dec
fidivr
fcomp
retf
or
push
jmp
pop
imul
test
pop
mov
jmp
std
cli
cs
dec
fistp
sbb
push
mov
out
push
inc
repz
das
lahf
ss
sbb
mov
pop
mov
bound
sahf
mov
xor
sub
dec
not
or
and
int
xchg
jnp
enter
cwde
dec
cmps
loop
test
and
repz
ins
out
and
dec
and
lds
pop
int
ret
mov
mov
lock
lea
adc
pop
nop
cmp
lods
repz
jo
aad
in
cs
add
je
and
les
or
cmp
mov
mov
mov
and
loop
or
or
scas
sbb
lds
mov
xor
xor
hlt
aaa
rol
xchg
test
dec
sub
dec
xor
and
loopne
sbb
mov
mov
je
sbb
or
into
cmp
rol
test
or
pop
pop
popf
into
shl
mov
cmp
addr16
or
push
cmp
ins
fcom
test
push
ss
jl
mov
mov
loop
push
pop
arpl
test
cmp
aaa
lea
jno
mov
jo
mov
mov
add
sbb
jno
loope
push
or
lods
or
sbb
add
imul
mov
mov
icebp
pop
mov
pop
fisub
adc
or
push
pop
out
test
ss
sbb
or
aaa
retf
mov
mov
mov
cmps
xor
aad
or
or
jbe
cmps
arpl
lea
sbb
inc
bound
dec
pop
mov
xchg
sahf
jg
or
rcr
add
sbb
pop
mov
xchg
repz
adc
aaa
fistp
jbe
cmp
jb
or
dec
sub
mov
mov
xor
push
movs
and
daa
mov
out
and
dec
lock
and
pop
pop
mov
mov
addr16
popf
xor
sub
inc
pop
enter
cmps
and
mov
and
movs
aaa
or
rcr
mov
cdq
test
and
cmps
mov
test
jmp
outs
loopne
test
mov
or
lods
mov
lods
ins
sahf
pusha
fist
adc
adc
dec
xor
xor
ja
mov
and
out
sub
loop
add
mov
(bad)
jp
retf
lods
stos
mov
repnz
xchg
mov
sub
int
mov
imul
les
dec
aaa
pop
add
add
fwait
jae
cmp
out
retf
xor
inc
sbb
je
cs
retf
push
mov
addr16
mov
pop
iret
lods
or
(bad)
std
retf
iret
sub
sbb
fmul
mov
cmp
fild
jno
jbe
dec
out
sar
xlat
into
fs
jmp
iret
dec
and
mov
jecxz
jecxz
enter
into
pop
idiv
dec
mov
mov
cmp
pop
mov
(bad)
ror
scas
ins
lock
jge
mov
push
cmps
sub
lock
cmp
cli
mov
jnp
stc
out
shl
fdiv
mov
jge
pop
loope
push
(bad)
cmp
test
in
out
loopne
push
js
add
xor
popa
in
push
jae
lock
mov
in
adc
mov
std
xor
sub
jnp
ret
sbb
push
imul
fistp
cld
push
mov
xchg
sti
pop
push
mov
vmwrite
cmp
nop
sub
inc
adc
out
xchg
and
and
pop
mov
cmp
cmp
das
sahf
outs
jle
jp
fxch
js
fild
fiadd
in
inc
mov
stos
and
out
inc
sub
pop
and
cmp
addr16
sbb
(bad)
cmp
jo
pop
ins
(bad)
cwde
push
mov
test
sub
mov
xor
cdq
das
xchg
inc
cmp
and
xlat
aaa
aad
dec
jo
adc
add
cwde
mov
push
mov
mov
mov
jns
cmp
push
iret
pop
ds
cmp
cmp
and
or
sub
test
adc
(bad)
gs
outs
inc
sub
fadd
js
test
add
sbb
mov
lahf
and
jb
(bad)
lods
mov
pop
sub
jae
mov
inc
je
xor
out
inc
pop
std
repz
dec
in
and
pop
cdq
dec
scas
mov
mov
imul
popf
std
imul
mov
mov
sbb
inc
out
xchg
dec
xchg
sahf
xchg
fstp
xor
(bad)
fdiv
inc
ins
jae
neg
pusha
cmp
mov
and
addr16
adc
inc
jmp
(bad)
add
or
dec
rol
push
stos
(bad)
jmp
ud1
push
xor
std
daa
push
(bad)
or
mov
adc
das
xchg
sub
cli
mov
push
adc
push
mov
retf
pushf
mov
addr16
out
xlat
ja
dec
mov
fcom
xlat
ds
adc
cmps
mov
add
outs
repz
ins
mov
mov
and
push
nop
sub
cli
aas
mov
xor
setnp
jp
popf
mov
jmp
lods
push
inc
test
pop
adc
pop
in
es
inc
mov
mov
jmp
adc
popf
nop
fucomp
add
pushf
and
push
pop
fistp
scas
push
stos
mov
pusha
push
inc
and
add
xor
mov
cmp
loop
xor
jp
cwde
enter
add
sub
add
rol
sub
dec
lock
cmp
jo
pop
or
ret
xor
pop
test
jb
test
cmp
(bad)
outs
(bad)
popa
mov
mov
div
jecxz
arpl
loop
scas
xor
add
push
adc
mov
movs
cld
fsubrp
and
das
scas
xor
ds
add
or
es
ror
bound
retf
iret
int3
jo
repz
enter
ins
add
(bad)
xor
rol
les
adc
aas
inc
aaa
jp
inc
xor
into
pop
call
jecxz
imul
cmp
aaa
ret
pop
add
or
cli
int3
movs
push
call
push
iret
pushf
jge
js
dec
in
imul
jne
imul
mov
imul
rcr
rcl
mov
inc
aaa
and
nop
(bad)
jne
xchg
int
data16
add
repz
or
shl
imul
(bad)
mov
ds
or
push
shl
and
xor
lahf
cmps
push
add
ss
fld
(bad)
mov
in
sub
fdivr
stos
push
xchg
dec
jno
mov
jecxz
daa
repnz
sub
cmp
sbb
inc
sbb
mov
jg
loope
cs
pop
fisub
or
in
cwde
aaa
test
sbb
pop
add
sahf
gs
jae
scas
cld
int3
sub
or
(bad)
cli
movs
arpl
loop
retf
xor
pop
loop
(bad)
(bad)
fucomi
cmc
add
mov
popf
retf
fucom
adc
add
out
fcom
idiv
psubq
xor
or
dec
sar
mov
(bad)
arpl
in
mov
repnz
scas
ja
or
mov
jns
sti
nop
sub
clc
mov
daa
cmp
test
sub
in
adc
fidivr
(bad)
jb
aaa
jp
adc
rol
pusha
xchg
sar
jg
mov
popf
repnz
daa
imul
(bad)
repnz
imul
and
and
loopne
lods
aaa
ret
shl
aas
cmp
pop
mov
hlt
xchg
inc
mov
and
pusha
(bad)
jnp
inc
outs
clc
sti
scas
sbb
adc
ja
ret
jl
out
push
mov
pop
sbb
idiv
jle
cmps
jle
mov
mul
jle
pop
jbe
adc
push
add
sbb
je
gs
pop
dec
bound
out
adc
add
adc
and
xor
add
rol
ja
in
push
jg
inc
js
inc
or
jno
test
jg
mov
sub
xchg
idiv
mov
ins
dec
inc
or
nop
fs
jg
aaa
imul
out
push
jbe
xor
cmp
outs
cmp
mov
mov
xchg
add
jo
add
push
out
inc
and
fs
ins
add
add
add
and
js
popa
xchg
cmp
mov
cwde
sub
xchg
jo
rcl
add
add
xchg
or
cmp
test
pop
cmc
add
test
cmp
test
or
push
or
outs
test
or
mov
cmp
clc
jns
cmps
jp
mov
push
sbb
ror
jno
sub
cwde
jb
or
test
les
movs
cmp
(bad)
mov
jno
adc
inc
mov
js
mov
inc
retf
mov
pop
or
imul
mov
pop
test
clc
jl
ja
fsub
add
mov
sbb
add
or
dec
add
mov
xchg
push
pop
add
or
test
inc
ror
inc
or
rcl
xchg
test
clc
mov
or
inc
add
xchg
or
xchg
cmp
mov
iret
test
or
mov
mov
mov
mov
xchg
push
fld
rcl
jle
leave
add
mov
cdq
jecxz
pop
imul
xchg
pop
nop
ja
jmp
inc
mov
cmp
dec
jns
sub
jno
sbb
fst
cmp
mov
sub
xchg
pushf
mov
addr16
jbe
fwait
not
pushf
sub
nop
mov
xchg
mov
mov
mov
ja
mov
xchg
pop
jg
call
cmp
mov
jno
imul
mov
add
adc
mov
dec
mov
xchg
imul
mov
mov
xchg
fidivr
lahf
xchg
fld
(bad)
mov
fstp
aaa
push
retf
xchg
dec
xchg
inc
mov
sbb
leave
xchg
jge
xchg
push
fst
cwde
mov
xchg
add
js
or
addr16
pushf
cmp
clc
mov
mov
sub
pop
xchg
mov
call
mov
mov
mov
sub
cmp
jns
jge
test
pushf
imul
inc
xor
jne
push
imul
xchg
cmps
mov
mov
ja
mov
fstp
imul
xchg
dec
call
xchg
and
xchg
sbb
cmps
loop
sahf
fstp
int
cwde
adc
and
mov
ins
retf
mov
dec
dec
xchg
aaa
stos
xchg
sub
add
imul
cwde
mov
cwde
or
pop
mov
movs
bound
xchg
jae
sahf
xlat
or
imul
cmps
pop
clc
test
jns
cmp
mov
mov
inc
mov
sar
mov
stos
cmp
lahf
cs
add
cwde
mov
sub
xor
xchg
xor
lahf
out
mov
sbb
imul
jmp
mov
mov
sbb
mov
sub
xchg
push
call
xchg
mov
jo
push
dec
call
pop
test
shr
pop
mov
lea
lods
sbb
iret
sbb
mov
fstp
fcom
stos
es
push
test
cmps
cdq
test
or
cmp
lods
adc
xor
mov
stc
pushf
inc
retf
add
test
dec
mov
fisttp
mov
cmp
push
cmp
fst
lods
add
mov
call
add
sti
movs
pop
dec
xchg
xor
mov
jnp
daa
dec
stos
retf
aaa
imul
push
xrelease
cmp
or
or
mov
or
xlat
stos
xchg
or
or
sbb
movs
fld
sbb
imul
xor
mov
or
stos
pop
ret
xor
out
mov
jnp
test
jnp
fs
stos
mov
call
mov
or
xchg
push
sub
imul
mov
cmp
sub
stos
pop
mov
mov
sti
xchg
loopne
or
xchg
cwde
(bad)
pop
lods
mov
mov
stos
mov
or
pop
pop
pop
dec
mov
sbb
mov
cmps
imul
mov
mov
xor
mov
and
in
ret
or
add
dec
mov
mov
ret
ret
inc
jo
and
add
fwait
cwde
xor
sar
imul
mov
call
mov
cmp
dec
mov
in
mov
or
imul
cli
lds
mov
sub
or
sub
js
mov
sub
xor
fcmovnb
mov
or
add
pop
scas
test
(bad)
stc
lods
pop
cmp
fld
xor
mov
xchg
repz
mov
fwait
leave
lea
fs
lds
fs
lods
push
stos
mov
mov
jnp
enter
movs
sbb
adc
xor
js
stos
jmp
mov
in
mov
push
add
inc
add
xchg
fstp
cmps
mov
mov
mov
sbb
daa
or
cmp
retf
mov
ficomp
add
into
sub
add
inc
cld
clc
enter
push
mov
sub
mov
stos
mov
sbb
neg
sub
ror
mov
lods
iret
inc
dec
shl
jl
hlt
mov
fstp
iret
adc
cs
ror
xchg
mov
into
sub
ret
push
or
sbb
test
fsqrt
ret
std
or
jns
int
lods
mov
cld
mov
dec
mov
sub
adc
or
add
xor
rol
cmp
fld
into
sub
ret
jl
inc
nop
aam
ins
mov
mov
add
into
aam
leave
icebp
mov
pop
mov
dec
into
popf
ins
int
dec
lds
sbb
xor
or
dec
pop
int
in
sar
int3
int
stos
iret
jnp
mov
fadd
xor
jne
rcr
xlat
pop
in
xlat
fstp
sub
lds
or
xlat
jg
iret
jmp
sub
jae
sar
add
cdq
jge
fnstcw
cmp
aam
or
call
sub
(bad)
cld
fst
xlat
shr
imul
pop
fxtract
lods
fld
add
xor
pusha
rcr
sub
xchg
lods
mov
jmp
(bad)
pushf
shl
adc
std
fcom
imul
fstp
fisttp
shl
mov
(bad)
shr
fldln2
mov
xchg
fistp
cmps
sbb
mov
ror
int
push
lods
leave
push
(bad)
leave
push
(bad)
inc
lods
ror
dec
fisttp
mov
std
mov
std
(bad)
pop
adc
cmp
je
aam
dec
rcr
loope
in
mov
dec
xlat
or
add
add
mov
dec
fild
sahf
fisttp
sub
cmp
pop
or
in
cld
lods
or
retf
int
das
ins
sar
cwde
in
fxch
int
pop
jns
call
dec
fisttp
mov
sti
in
rol
dec
ffree
ss
(bad)
cld
jecxz
in
fcomp
xlat
stos
int
mov
fdiv
aam
mov
xor
rcr
loopne
cmp
lods
int
jg
loopne
(bad)
or
fsub
sbb
and
repnz
out
fcmove
out
mov
imul
test
loop
cmp
adc
into
pop
scas
fisub
fisubr
loop
sahf
shl
fsubr
xlat
sub
fdiv
call
mov
add
push
ds
lods
pop
fs
les
jmp
ds
jle
imul
sub
out
pop
jmp
mov
in
sbb
aad
scas
out
ja
out
push
call
outs
(bad)
sar
(bad)
sub
in
js
jmp
mov
out
sub
mov
fdiv
out
mov
rcr
in
sahf
pop
in
in
jmp
into
in
dec
jmp
into
jmp
out
out
out
loop
pop
jmp
mov
repnz
or
add
rcr
add
push
dec
in
sub
out
push
fidivr
pushf
add
das
repz
in
aas
loopne
mov
les
imul
lock
out
hlt
adc
loop
outs
bnd
in
loope
xchg
sub
push
ins
lock
icebp
into
iret
hlt
in
in
add
jmp
push
scas
neg
fdivp
ret
outs
out
push
outs
out
mov
cmc
jmp
outs
out
push
in
(bad)
std
jmp
fucom
out
push
ficom
test
mov
out
add
test
xlat
popf
int3
(bad)
in
fwait
(bad)
jle
(bad)
fild
(bad)
clc
rcr
loope
outs
repz
scas
pop
cmp
neg
call
mov
add
out
mov
cli
lods
(bad)
stc
add
hlt
cmp
movs
(bad)
stc
(bad)
or
jno
not
mov
stc
dec
out
cmc
movs
(bad)
xor
hlt
jne
fnstenv
call
outs
lock
(bad)
sub
fs
repnz
lock
jbe
clc
mov
out
xchg
mov
into
out
imul
out
add
into
maskmovq
not
std
mov
add
sub
dec
pop
mov
sub
test
xchg
sbb
mov
mov
nop
add
xchg
mov
cmps
pop
mov
call
mov
call
lods
mov
xchg
mov
rcl
xchg
(bad)
loop
cmps
sar
rcl
xchg
aam
(bad)
sub
xchg
retf
mov
test
icebp
fwait
jmp
sub
mov
fsub
fld
mov
and
mov
jp
int
ss
call
cmps
imul
push
add
sub
mov
stos
push
ins
cld
inc
push
push
and
(bad)
aas
mov
cmps
enter
xchg
(bad)
or
cmp
lods
dec
and
xchg
pop
(bad)
xchg
nop
and
cmp
out
test
cwde
inc
inc
dec
jb
xchg
rol
push
pop
xchg
jae
aam
movs
jb
repz
adc
adc
mov
sub
add
(bad)
mov
lods
cs
ins
pop
icebp
cs
scas
push
test
sub
das
stos
mov
arpl
dec
sbb
and
dec
aam
rol
cmp
lods
call
and
and
cmps
cs
ficomp
adc
or
push
adc
xchg
mov
jle
mov
adc
sar
popf
mov
push
mov
mul
(bad)
jle
add
or
jecxz
imul
jno
frstor
mov
jle
pop
es
jns
xchg
cmp
arpl
shl
sub
push
stos
in
(bad)
int3
js
push
adc
sub
mov
pcmpgtd
jno
imul
(bad)
sbb
jb
ins
or
mov
cwde
cdq
dec
dec
xor
mov
sbb
xchg
mov
shl
loope
data16
leave
push
test
jns
push
test
fldenvw
or
add
mov
sahf
lahf
mov
xchg
in
xchg
(bad)
imul
adc
add
sub
lds
add
inc
adc
cmp
rol
lods
stos
inc
bound
test
lahf
fimul
test
stos
mov
sub
or
es
js
xor
out
cmp
inc
adc
movups
xchg
test
scas
fidiv
ss
sub
dec
mov
pop
lods
inc
sbb
cmp
push
jmp
out
jmp
adc
jo
cmps
jbe
sbb
inc
push
sub
cmps
iret
jge
out
jp
imul
xchg
inc
scas
sbb
out
sub
imul
sbb
fiadd
pushf
mov
or
into
pop
or
mov
push
lock
retf
adc
fdivr
daa
add
cmp
sbb
ror
hlt
or
aad
mov
cmps
les
loopne
aam
daa
push
mov
pusha
or
(bad)
mov
fdivr
mov
ss
inc
pop
stc
data16
xor
sti
xor
xchg
cmp
aam
sti
rol
outs
out
dec
add
jbe
enter
cs
(bad)
ror
das
cwde
repz
int
fmul
test
sbb
xlat
pop
pop
fidiv
inc
fist
in
xlat
sub
add
or
jmp
arpl
mov
mov
into
aaa
or
mov
jle
loop
jnp
outs
loope
ficomp
mov
add
iret
je
mov
and
cmp
cmp
mov
cmp
sub
mov
mov
jp
mov
jecxz
retf
imul
fimul
neg
jg
leave
xlat
(bad)
jle
ret
pop
adc
add
or
add
enter
dec
jne
mov
mov
sub
add
je
inc
in
cmp
cmp
xor
shr
pop
(bad)
mov
popa
jecxz
sbb
add
pop
inc
test
add
loope
jg
mov
xchg
add
inc
cmp
add
and
inc
mov
jp
pushf
loopne
mov
add
lea
lock
stos
movs
mov
mov
push
dec
adc
add
push
mov
adc
xor
iret
int3
dec
inc
inc
xor
pop
jg
inc
xrstor
or
cwde
inc
cmp
dec
add
mov
(bad)
mov
pop
nop
(bad)
cmp
dec
and
sub
push
jo
fstp
adc
dec
mov
jb
movs
inc
fmul
enter
cmp
and
pop
dec
adc
push
test
xchg
mov
cmp
pop
push
mov
pop
in
sbb
xlat
dec
or
jb
fld
xor
push
cdq
(bad)
int3
cmps
ss
dec
pusha
outs
repz
(bad)
es
enter
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
imul
hlt
cmps
cmp
test
sahf
cli
hlt
cmps
inc
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
jge
adc
sbb
lock
push
and
jbe
dec
rol
and
jne
jnp
sub
add
pop
les
push
or
clc
sub
stos
add
jge
inc
arpl
add
inc
xor
div
daa
pusha
pop
shl
ins
push
div
push
push
(bad)
mov
add
pop
fcomp
ins
imul
mov
inc
add
jne
jmp
retf
or
or
add
mov
int
out
add
add
test
mov
fwait
stos
pop
int
and
imul
mov
not
fdiv
push
scas
loope
cs
pop
pop
fiadd
xor
retf
fcomip
or
adc
fcomip
sahf
xor
xchg
mov
adc
rcl
push
ror
scas
mov
ja
repnz
jecxz
mov
mov
jecxz
push
and
mov
inc
es
pop
jl
pop
nop
sbb
dec
push
add
fdivr
scas
(bad)
out
ins
add
or
adc
or
add
mov
add
inc
inc
or
add
jbe
dec
xor
neg
fs
add
mov
call
inc
cmp
or
sbb
test
mov
xchg
jae
addr16
cmc
inc
popf
xlat
or
mov
ror
mov
retf
pop
push
inc
cwde
leave
ja
scas
xchg
daa
nop
pop
das
stos
idiv
leave
pushf
imul
into
jo
imul
lods
cmp
mov
pop
push
inc
pop
mov
ja
in
or
xchg
movs
in
popa
div
xlat
fmul
sbb
mov
sub
mov
push
call
fimul
jae
icebp
movs
mov
(bad)
push
jecxz
xor
xchg
sub
shr
shr
mov
test
mov
add
xchg
fidiv
push
and
loope
call
mov
mov
xchg
xlat
jecxz
xchg
cmp
adc
mov
mov
les
addr16
pop
mov
into
xor
fucomp
add
fwait
xlat
stos
push
mov
fwait
jo
das
imul
es
xchg
ficomp
pop
sbb
test
stos
push
pop
pop
fimul
mov
pop
retf
retf
add
inc
repz
jne
out
(bad)
jnp
pop
adc
sbb
add
stos
retf
idiv
loop
or
cs
and
and
mov
push
int
stos
repz
scas
or
clc
out
pop
jmp
dec
call
fs
add
in
in
mov
shr
or
fsubr
es
sbb
in
retf
mov
(bad)
ja
xchg
sub
lds
mov
sub
mov
adc
stc
or
push
push
push
pop
mov
out
sub
sar
hlt
add
pop
retf
or
inc
aas
not
jp
addr16
pop
sbb
jbe
jbe
out
movs
push
mov
cmp
push
lahf
out
mov
scas
(bad)
jl
inc
js
out
cmps
xchg
pusha
inc
xchg
jns
xor
xchg
or
jg
mov
cwde
movs
jg
xchg
cmps
pop
push
out
sbb
add
arpl
pop
je
out
push
out
mov
jnp
adc
cmp
add
push
popa
adc
out
sbb
sub
push
sub
dec
or
cmp
sbb
jae
sbb
inc
add
aaa
pusha
popa
pop
jo
push
or
or
xchg
ins
scas
xchg
pop
lock
out
add
cmps
xchg
xchg
cmp
cmp
push
push
js
js
jo
and
xchg
mov
xor
out
xchg
test
push
es
pop
cmp
or
gs
arpl
pusha
cmp
add
mov
int3
mov
cmp
push
(bad)
jno
pop
xchg
popa
xchg
dec
test
mov
inc
push
inc
(bad)
pop
or
add
sub
push
jp
xchg
add
sbb
mov
mov
mov
mov
push
jbe
pop
push
pop
ss
sbb
xchg
add
mov
push
push
jo
mov
jge
jne
int3
add
outs
xchg
outs
test
pop
inc
jnp
xlat
mov
jnp
xchg
pop
push
push
and
cmps
pop
mov
jnp
mov
sbb
jnp
pop
nop
ja
popa
stc
test
gs
sar
jp
xor
loopne
test
daa
imul
pop
icebp
daa
xchg
bound
imul
push
push
pop
sub
cld
dec
pop
push
xchg
retf
push
hlt
(bad)
xchg
mov
xchg
ja
push
adc
pop
mov
adc
add
xchg
out
add
ja
stc
ins
push
pop
push
loopne
outs
push
jns
rol
jbe
int3
clc
ja
cmp
inc
mov
(bad)
push
pop
mov
mov
je
fadd
imul
sub
mov
jo
(bad)
enter
xchg
sbb
call
mov
push
mov
out
cwde
dec
add
dec
(bad)
int3
call
test
test
mov
fld
xchg
xor
loop
pusha
ds
add
call
dec
pop
pop
add
pushf
and
pop
es
cmp
gs
fwait
daa
nop
into
imul
ja
lock
and
popf
add
push
shr
xor
pop
pop
enter
ins
jnp
imul
fist
fs
nop
or
or
and
test
mov
je
or
jne
pop
ins
or
mov
sbb
lds
xchg
ss
dec
nop
popa
dec
gs
push
mov
jle
push
imul
pop
cwde
jae
push
ins
not
pop
dec
nop
pop
inc
imul
arpl
jge
lock
sub
sub
xchg
push
push
sbb
jmp
push
push
retf
add
ja
jmp
movs
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
pop
push
lods
stos
lods
cmp
cmp
call
add
dec
dec
ins
data16
adc
cs
jle
fs
pop
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
sahf
movs
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
pop
pop
pop
lods
scas
lods
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
fs
fs
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
add
or
mov
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
pop
rcl
retf
jo
mov
lods
out
sub
jmp
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
ror
lock
loopne
lock
push
retf
mov
pop
call
scas
or
scas
mov
add
mov
dec
mov
mov
xor
mov
push
jo
scas
adc
mov
dec
xchg
xchg
cmps
mov
retf
add
or
cli
lods
adc
mov
cmp
pop
mov
push
adc
mov
fiadd
aas
or
test
jp
pop
jmp
pop
retf
scas
cli
cmp
cwde
mov
sbb
mov
imul
jp
sub
pop
mov
nop
mov
inc
inc
dec
add
push
scas
fisttp
aas
dec
add
xor
mov
sub
imul
mov
mov
or
mov
xchg
imul
mov
(bad)
jmp
sti
mov
sub
jnp
scas
mov
xor
mov
dec
mov
rol
and
add
scas
mov
or
push
adc
mov
leave
mov
jo
mov
mov
mov
sub
loop
add
nop
in
dec
mov
fwait
mov
sub
mov
add
mov
loopne
mov
shl
add
mov
cli
sbb
adc
mov
fwait
ja
sbb
jmp
add
sub
lock
push
add
push
inc
sub
ret
ret
add
jp
cli
retf
mov
wrmsr
ret
cs
jp
add
in
ret
sub
ret
mov
pusha
add
mov
out
sub
sub
push
cld
les
adc
mov
fadd
xchg
or
ds
add
int3
add
shl
add
stos
mov
lods
(bad)
cmp
int3
les
mov
jl
ja
ret
jno
(bad)
outs
or
pop
xor
loopne
cmp
add
mov
xor
mov
mov
and
call
xor
push
ror
inc
ins
enter
push
add
cmp
jp
leave
mov
leave
mov
scas
(bad)
int3
add
jl
jg
add
sub
mov
in
add
mov
cld
leave
out
pop
int3
out
add
int3
mov
leave
stos
ins
add
test
cli
add
leave
fsubr
rol
add
leave
xchg
lods
into
(bad)
pushf
ja
cmp
mov
int
jl
test
dec
int
in
int
or
sti
dec
retf
int
int3
retf
iret
or
sti
cmp
mov
into
mov
rol
rol
cmp
lds
call
xor
or
shr
sbb
in
ins
shl
mov
mov
xchg
shr
int
or
add
iret
mov
rol
in
rol
rol
into
retf
add
shr
int
pop
fst
addr16
daa
rcl
ins
add
stos
add
aam
jl
fstp
rol
pop
jge
adc
popf
lods
rol
aad
pop
sar
pop
iret
dec
mov
jae
shl
jl
stc
jl
push
pop
(bad)
(bad)
dec
sub
jns
rol
into
add
xlat
jae
into
or
shl
cld
shl
scas
adc
fadd
fcom
ins
int
fst
jae
rol
int3
jle
fnstenv
xlat
lea
dec
jge
(bad)
shl
jl
fisubr
aad
(bad)
fld
mov
bnd
(bad)
jl
(bad)
in
(bad)
jg
ficomp
stos
mov
shl
into
into
pop
int
sbb
xchg
mov
int
jge
jle
fcom
int
sub
mov
rcr
sub
jo
into
outs
lods
fidiv
popf
xlat
jns
fadd
pop
fldcw
fldcw
(bad)
pop
add
shl
cmp
add
fild
(bad)
fs
into
add
cmps
pop
fld
fsubr
fst
cmp
sbb
mov
or
fld
and
push
daa
xor
ins
fcmove
ins
loop
dec
loope
shl
add
dec
fninit
(bad)
xlat
repnz
jecxz
or
rcr
loopne
fiadd
inc
push
fistp
sbb
stos
pop
fnstsw
fiadd
adc
rcr
(bad)
push
mov
push
push
loop
into
loop
dec
(bad)
cld
cmp
mov
les
fst
into
fsubrp
pop
sar
mov
popa
mov
add
lahf
cld
fld
push
aam
popf
int
cs
std
into
adc
aam
scas
fdiv
adc
or
fild
loope
cmp
dec
popf
add
call
out
scas
fcom
mov
xchg
mov
retf
fxch
int
mov
jo
shl
in
pop
fidivr
jmp
pop
fiadd
pop
add
jmp
jge
dec
scas
jmp
and
sub
in
pop
jmp
dec
shr
into
cdq
ds
sub
bound
dec
dec
jmp
adc
call
loopne
mov
mov
out
cmps
sahf
jecxz
sub
je
fiadd
scas
(bad)
call
lock
jmp
loopne
add
jmp
sbb
mov
add
into
aam
out
out
cmp
pop
add
mov
add
mov
xlat
outs
call
pushf
fstp
mov
fcmovbe
sbb
xchg
in
outs
jmp
lahf
(bad)
sahf
in
xchg
out
fidiv
lahf
lock
(bad)
cmp
jmp
mov
jp
xlat
(bad)
sahf
lock
in
sub
or
jmp
arpl
lock
dec
xlat
mov
out
out
out
cs
pop
into
jmp
loope
lods
jmp
mov
aad
jmp
dec
repz
ds
fmulp
ja
iret
xor
jecxz
jg
mov
mov
add
inc
jecxz
das
cmc
mov
cmc
push
cmp
mov
xchg
mov
adc
in
sub
cmc
sbb
sub
push
(bad)
inc
(bad)
fadd
idiv
mul
stc
mov
clc
sbb
mov
repnz
fs
retf
sti
out
jl
cmp
sti
xchg
jmp
pop
and
aas
div
ficomp
cmp
out
into
aas
sti
and
out
fsubr
cld
jecxz
repz
add
aas
sti
mov
aad
push
out
(bad)
aas
out
cmp
retf
(bad)
jg
dec
(bad)
repnz
ret
push
leave
push
repnz
rcl
and
pop
mov
cmp
enter
add
cmc
inc
sub
push
jns
pop
test
cmp
fiadd
fs
sub
mov
sub
fsin
ret
dec
or
or
cwde
cmp
cmp
cmp
mov
pop
dec
ins
call
std
sub
in
call
mov
dec
push
cwde
jl
push
sub
cmp
out
sub
lea
pop
mov
cs
sub
imul
sbb
ja
jg
jae
or
and
mov
xchg
aam
dec
adc
push
mov
clc
cdq
jmp
adc
jbe
add
loopne
dec
in
xor
mov
enter
pop
cmp
push
pop
das
mov
stos
dec
dec
and
(bad)
jns
xchg
mov
mov
mov
xor
ja
jecxz
dec
adc
sbb
adc
test
push
adc
psrad
jge
push
sub
and
jge
mov
fbstp
fiadd
pop
lods
and
push
adc
xor
cmp
shl
fldenv
cmc
and
scas
jmp
xchg
lock
ins
nop
mov
mov
dec
sbb
out
inc
fcmovnbe
jb
(bad)
jp
jmp
xchg
mov
ss
pop
jb
scas
movs
pop
add
lahf
mov
jge
jl
(bad)
jle
cmp
sbb
int3
add
sub
sbb
push
into
and
popa
pop
mov
icebp
mov
jne
mov
xlat
xor
leave
ss
pusha
mov
inc
and
or
and
call
xor
xchg
cmp
call
sbb
push
sbb
dec
cwde
or
push
mul
pop
push
cmps
add
xchg
out
movs
gs
jo
fadd
es
mov
mov
(bad)
push
push
jl
aad
pop
pop
pop
or
pop
and
adc
mov
cdq
dec
add
scas
stc
sbb
and
loop
jp
mov
cdq
test
test
in
fs
pop
jb
leave
pop
xor
faddp
jmp
push
mov
and
push
add
adc
inc
adc
test
movs
add
fisub
sub
dec
fcom
and
jns
mov
push
adc
addr16
popf
(bad)
push
cmp
imul
and
inc
push
bound
pop
aad
dec
pushf
stos
es
jp
xchg
rcr
mov
ins
mov
and
mov
push
les
ret
mov
(bad)
inc
add
mov
cmp
mov
stos
mov
xchg
into
fcmovb
dec
add
leave
int3
(bad)
push
cmp
mov
(bad)
adc
push
rep
sub
mov
sub
dec
dec
leave
cld
outs
mov
sbb
push
iret
xor
cli
jo
out
mov
imul
sar
xor
and
pop
movs
retf
pop
mov
mov
mov
popa
xchg
sbb
fst
xchg
gs
pop
inc
movs
mov
outs
stc
jb
push
pop
dec
mov
jbe
fidiv
xor
fild
dec
jge
retf
push
pop
ins
mov
and
je
cs
sub
cld
inc
add
xor
das
dec
sub
lods
sti
and
scas
push
std
and
scas
out
xor
inc
xor
mov
cmp
movs
ret
push
jnp
xor
mov
iret
xor
btc
ds
jb
das
mov
mov
std
repz
das
xor
or
popa
(bad)
ins
inc
(bad)
cmp
cmp
pop
call
cdq
xchg
outs
pop
iret
mov
xchg
and
mov
pusha
and
mov
jle
push
cwde
repz
inc
sar
(bad)
imul
mov
loop
hlt
hlt
test
ret
and
mov
push
push
(bad)
in
sahf
xlat
aas
test
aam
int3
mov
sub
push
test
loop
test
ret
fld
add
jne
cmp
xchg
mov
fucom
xchg
aaa
xor
shl
mov
lea
adc
mov
or
and
jecxz
fwait
sbb
or
mov
imul
sahf
pop
leave
cmp
outs
xchg
loope
call
int
fbld
mov
or
enter
add
adc
lods
inc
sbb
xchg
out
cmp
pop
jnp
les
push
xchg
mov
xchg
jns
pop
pop
(bad)
mov
pop
dec
jb
adc
fs
xor
mov
rcr
das
jge
and
sbb
dec
dec
imul
nop
stos
cmp
cli
mov
loopne
pop
pusha
lea
(bad)
cmp
sbb
push
nop
jecxz
sbb
cld
enter
xchg
nop
mov
sbb
inc
cdq
(bad)
sub
jno
test
addr16
pop
mov
push
xor
test
lea
cs
adc
ficomp
fucomip
adc
cmps
sar
xchg
jb
mov
cmp
movs
xor
sub
cmp
adc
das
enter
mov
fisub
pop
cmp
mov
adc
daa
dec
and
sbb
and
iret
fistp
lahf
mov
dec
cmps
jb
stos
popa
(bad)
call
push
push
or
dec
imul
push
sahf
pop
xchg
cmps
xor
cli
sar
jmp
js
sahf
iret
and
pop
push
mov
push
gs
inc
mov
sahf
sahf
(bad)
(bad)
adc
cmp
push
mov
xor
inc
push
ds
mov
cmps
ja
mov
lock
push
in
hlt
dec
jnp
fwait
scas
adc
aaa
jl
pop
mov
int
std
je
ret
pop
push
pusha
and
daa
pop
xor
push
aaa
adc
mov
(bad)
mov
xchg
mov
in
pop
cmps
or
in
cdq
loope
or
rol
fucomi
(bad)
fimul
or
aaa
mov
xchg
sbb
cli
push
or
retf
ficom
add
sbb
loopne
add
jo
dec
loopne
test
scas
add
pop
dec
or
pop
sub
xchg
cmp
or
mov
out
inc
ja
fcmove
shr
mov
imul
push
mov
lahf
xor
or
and
daa
mov
(bad)
cmp
icebp
imul
sub
std
cmp
or
sub
or
add
adc
stc
adc
bound
pusha
mov
int
bound
push
ret
push
div
mov
xchg
pop
inc
add
cmp
into
ja
inc
adc
jns
loopne
out
xchg
lods
dec
add
xchg
cld
mov
jo
test
cmp
mov
cdq
int3
(bad)
outs
pop
sbb
test
(bad)
je
dec
cmp
(bad)
cmps
outs
cmc
movs
imul
ficomp
add
push
rol
ficomp
addr16
imul
xor
dec
sbb
scas
push
je
pushf
lea
mov
pop
sahf
jo
pusha
stos
mov
mov
sbb
or
sbb
lahf
cmp
mov
mov
sti
aam
xor
mov
rcl
loope
ss
pop
mov
jge
adc
fistp
clc
xchg
mov
ins
adc
push
(bad)
jle
rcr
push
jnp
fdivr
data16
mov
fbld
adc
xlat
pop
mov
mov
aad
xchg
xor
lahf
jo
pusha
dec
pop
in
gs
sbb
sti
or
add
jge
cld
xchg
iret
jns
jnp
sbb
ret
dec
hlt
test
push
jmp
pop
mov
popf
dec
pop
jmp
cmp
or
test
and
dec
shl
sub
adc
add
lds
mov
ins
(bad)
outs
ja
fsubr
inc
add
xchg
jmp
or
sbb
fcomp
inc
test
clc
push
sub
sbb
xchg
jns
jae
xchg
sbb
(bad)
data16
ror
js
pop
ds
push
cli
(bad)
pop
js
out
cld
jmp
adc
inc
or
mov
cld
test
pop
lahf
mov
and
icebp
and
fprem1
lea
mov
ja
iret
dec
clc
out
std
out
lahf
ds
nop
nop
js
jnp
cli
push
(bad)
jmp
jle
in
ja
or
xlat
jp
push
outs
mul
aaa
mov
lds
pop
add
inc
inc
sub
add
sub
inc
or
pusha
or
add
pop
push
mov
orps
add
inc
add
or
add
jns
push
jbe
pop
jnp
mov
scas
xchg
js
pushf
xchg
jg
(bad)
jp
ja
aas
out
and
aaa
jl
data16
loopne
dec
lock
js
cwde
jns
aaa
jbe
pop
jne
pop
jns
or
cmps
sbb
jno
dec
cmp
loopne
inc
or
(bad)
jns
addr16
js
pop
inc
test
jg
or
lock
mov
inc
push
sub
pop
out
inc
or
xor
cmp
xor
jg
nop
xchg
addr16
cmps
je
mov
dec
sbb
inc
test
inc
cwde
add
mov
push
mov
call
ja
(bad)
nop
mov
push
push
js
js
pop
push
cli
mov
add
js
out
popa
pop
jl
addr16
icebp
aaa
jl
xchg
add
mov
xchg
cmp
js
inc
push
cmp
xchg
loopne
popa
pop
jg
ror
jo
xchg
test
js
(bad)
mov
mov
add
ja
leave
js
sbb
dec
mov
mov
dec
mov
repz
jnp
ror
mov
cmp
jle
mov
lea
mov
(bad)
cmp
scas
mov
xor
and
or
ror
stc
mov
xchg
or
nop
sahf
or
xlat
add
xchg
add
push
(bad)
sbb
imul
test
call
pop
call
xor
nop
or
cmp
jg
sub
pop
(bad)
out
addr16
pop
clc
add
mov
xlat
add
mov
loopne
xchg
clc
sbb
test
xor
add
call
mov
ja
cmp
fcom
leave
jo
jns
xor
push
sub
xchg
push
test
ss
jbe
fcom
cmp
or
sbb
imul
test
clc
cmp
xchg
xor
jge
mov
test
cwde
ins
or
nop
jmp
mov
mov
add
mov
or
leave
dec
pop
aad
push
sub
add
cmp
pop
add
mov
xor
out
push
mov
fstp
fs
fwait
or
scas
or
mov
mov
xchg
mov
xchg
(bad)
mov
sub
js
mov
jl
jmp
mov
mov
jbe
lods
imul
mov
push
scas
fst
cli
xchg
inc
imul
jne
call
xchg
test
out
test
pop
jmp
mov
xchg
std
sub
or
push
pop
mov
mov
je
pop
xchg
dec
imul
xchg
std
leave
cwde
nop
lock
fld
add
jmp
push
push
xor
mov
xchg
sbb
dec
inc
xchg
arpl
xchg
xor
sub
fwait
push
xchg
pop
mov
jne
popf
push
cli
xchg
inc
pop
cwde
aad
xchg
inc
cdq
xchg
or
jno
xchg
inc
test
lock
cmps
or
mov
jns
cwde
pop
movs
fcomp
adc
cwde
aas
stos
mov
cmp
test
add
xchg
lahf
fldenv
push
sub
mov
sub
push
mov
xchg
mov
jmp
xchg
fdivr
fcomp
xlat
jns
mov
cwde
sbb
mov
or
pop
or
stos
mov
push
ret
retf
gs
dec
mov
pop
add
dec
scas
push
sbb
and
adc
cs
xchg
in
xchg
and
call
xchg
mov
test
mov
mov
xchg
jne
mov
sub
jnp
pop
jmp
stos
mov
xor
mov
stc
jle
mov
imul
jle
fisubr
lods
ret
cmp
xchg
or
cmps
jp
mov
sbb
or
sub
stos
cwde
push
cmp
mov
or
mov
fisttp
mov
and
mov
stos
xchg
sub
or
mov
mov
sub
inc
sub
mov
imul
mov
retf
add
xor
xor
jmp
xchg
adc
dec
sub
stos
mov
jp
mov
mov
stos
xchg
mov
mov
pop
or
sbb
xchg
stos
cli
test
jnp
je
mov
fstp
or
stos
xchg
sbb
mov
dec
push
jno
mov
mov
nop
inc
popa
jno
mov
sub
cmp
fwait
mov
adc
adc
push
jmp
sub
cwde
jg
xchg
jmp
mov
mov
sbb
es
add
fwait
nop
in
or
fist
imul
adc
jecxz
lahf
(bad)
mov
mov
jo
adc
(bad)
sbb
cmp
inc
mov
mov
and
xchg
cmp
mov
(bad)
sub
test
cld
mov
jmp
jmp
shl
mov
add
add
pushf
xchg
movs
cli
mov
jnp
fs
mov
les
mov
pop
(bad)
lds
adc
mov
cmp
nop
sti
mov
jnp
hlt
sbb
mov
test
sbb
push
or
and
jns
enter
iret
pop
mov
enter
or
nop
xchg
jbe
mov
int3
leave
(bad)
call
xchg
jb
mov
mov
das
in
mov
fnstcw
or
imul
mov
cli
retf
les
xchg
mov
mov
cld
mov
adc
movs
sbb
sub
lea
mov
int3
add
cld
lds
mov
imul
mov
out
leave
fs
(bad)
int3
lods
mov
cli
stos
adc
mov
xlat
pushf
mov
in
add
int3
dec
ins
mov
ins
mov
sbb
mov
nop
adc
cli
mov
into
int3
retf
fs
or
sbb
dec
(bad)
loop
int3
dec
stos
xchg
adc
xor
scas
sbb
jl
add
mov
add
mov
cld
mov
lods
into
mov
cdq
adc
into
mov
(bad)
fucomip
iret
jecxz
lds
sub
fistp
in
mov
or
jmp
into
dec
or
mov
pop
(bad)
aam
sub
out
or
xchg
sub
movs
fdiv
(bad)
rcl
pop
les
int
lods
sar
les
rcl
fsubr
popf
(bad)
mov
int3
fild
jl
sub
leave
sahf
pop
retf
(bad)
nop
std
xlat
retf
jmp
in
into
call
ins
int3
(bad)
(bad)
pop
pop
iret
mov
xlat
push
cmp
es
add
add
fisubr
fcmovne
mov
mov
popf
(bad)
mov
add
outs
lods
(bad)
sbb
call
dec
xlat
cs
iret
ror
add
(bad)
cmp
int3
sub
pop
sub
push
cmp
ins
std
(bad)
ror
retf
into
cmp
push
jns
sbb
jge
xor
mov
fistp
into
mov
mov
pop
(bad)
fstp
int
int
pop
fadd
popf
(bad)
or
fucomp
cld
aam
pop
fst
shl
enter
cmp
fisttp
scas
mov
or
rol
add
pop
loopne
or
test
ds
loop
fstp
cli
sbb
push
pop
fcom
pop
loop
mov
(bad)
pop
pop
mov
fidiv
ins
(bad)
sub
cmp
lods
loope
jle
daa
push
fcom
fidiv
ficom
loop
popf
in
int
sti
in
int
in
fidivr
in
outs
fbld
in
xlat
dec
sahf
fbld
push
aam
(bad)
out
lods
fbstp
in
sahf
fild
mov
mov
push
fst
dec
out
in
mov
leave
in
shl
add
add
ins
leave
add
je
fild
pushf
(bad)
jmp
cs
add
fidiv
in
in
scas
loop
mov
mov
aad
pop
loopne
dec
jecxz
jle
ss
ror
mov
out
fsubrp
movs
sub
ficomp
test
in
push
dec
xlat
cli
lods
out
jle
aad
out
ds
push
(bad)
rol
jmp
fucomp
push
out
fst
inc
(bad)
(bad)
in
ins
call
scas
in
sbb
push
or
loope
loop
or
push
add
loop
std
jmp
(bad)
mov
movs
add
iret
lock
cs
mov
adc
jmp
pop
lock
sbb
maxps
sbb
repnz
shl
fmul
sahf
jmp
out
lock
icebp
sub
bnd
out
into
out
jg
or
loope
inc
sub
repz
std
out
cmp
adc
hlt
loope
jmp
(bad)
cmp
xor
mov
jmp
lahf
jmp
out
(bad)
jge
repnz
pop
repnz
jo
fdivr
push
das
lock
in
repz
pop
fdivr
out
repz
ret
pop
sahf
idiv
scas
cmc
push
dec
pushf
inc
out
repz
pop
repnz
pop
shl
fild
ins
jle
or
or
inc
clc
jae
repz
repz
dec
cmc
sub
mov
and
fdiv
out
clc
pop
push
push
scas
retf
clc
jle
bnd
loop
lahf
cli
and
jmp
add
out
lea
jmp
pmuludq
cmc
push
pslld
out
test
jmp
pop
out
mov
shr
inc
iret
hlt
mov
mov
scas
sub
ins
test
add
(bad)
rcr
clc
repz
(bad)
popf
dec
shl
repnz
paddb
sub
pop
sub
mov
xchg
add
cdq
push
xchg
push
xchg
xchg
sub
fwait
mov
test
xchg
mov
xchg
ret
mov
test
xchg
sub
mov
add
mov
scas
les
cmps
ret
(bad)
xchg
test
out
xchg
aad
loop
mov
lds
int3
sti
loopne
add
cmps
out
push
xchg
imul
sbb
xchg
lds
and
push
mov
ins
pop
ss
sub
adc
nop
pop
cmp
hlt
cmp
sub
cdq
inc
stos
je
gs
and
mov
cmps
adc
fiadd
movs
sar
add
adc
add
retf
xchg
imul
push
nop
sub
in
inc
or
mov
cmp
jp
lods
test
stos
std
xor
loop
push
cmp
sub
jecxz
push
lock
les
dec
push
jecxz
pop
shl
nop
sub
test
and
push
daa
dec
fisubr
xchg
loop
push
jl
in
push
lds
repnz
fucom
fisttp
fwait
mov
shl
pop
or
mov
in
aas
fdivp
jp
rcl
dec
mov
(bad)
jge
mov
push
je
mov
cmp
sbb
mov
push
repz
dec
out
int
iret
cmp
repz
lahf
add
inc
push
inc
fst
push
ficom
sbb
inc
in
mov
jge
sbb
pop
xor
mov
and
and
add
data16
and
fldenv
sbb
sub
pusha
fistp
cli
ss
loopne
enter
gs
ret
(bad)
cmp
pop
xchg
imul
and
mov
lds
aaa
and
sub
adc
sub
and
pop
pop
sub
and
inc
data16
and
jp
add
pop
lock
cmovs
lds
sbb
dec
test
call
sub
jnp
mov
jle
sbb
mov
sub
jne
pop
fs
or
xor
shl
or
lods
xchg
into
mov
or
sahf
push
or
lods
scas
into
retf
ins
shl
cmp
or
(bad)
loop
sub
sbb
lods
mov
jns
push
enter
push
lea
jmp
(bad)
in
add
adc
retf
dec
push
jmp
cmps
leave
bound
cli
inc
mov
call
test
xor
inc
jl
enter
inc
test
les
fdiv
sbb
ret
sbb
adc
test
lahf
pushf
shl
push
dec
mov
cmp
or
jg
loope
dec
adc
test
sub
cld
inc
add
ins
xor
inc
inc
cmp
cmps
ss
daa
lea
test
aas
ss
arpl
in
ins
mov
push
adc
enter
jne
adc
aad
pusha
pusha
loope
movs
cmps
or
or
loop
addr16
xor
mov
shl
jp
cmp
fcom
mov
imul
(bad)
mov
cdq
mov
fidivr
add
inc
jno
mov
xor
enter
cmp
xchg
(bad)
ins
out
stos
ror
mov
adc
or
mov
xchg
add
mov
adc
lahf
loopne
dec
jle
pop
aam
cmp
mov
aas
std
and
and
fdivrp
mul
lahf
clc
std
add
cli
pop
ds
jno
and
repz
push
movs
pop
call
pop
or
adc
add
dec
push
in
test
or
iret
cmp
sbb
and
and
lahf
cli
adc
xor
pop
nop
xor
xor
inc
sub
xor
cwde
test
call
xchg
shl
cld
(bad)
out
pop
lock
in
or
les
je
jmp
mov
jnp
pop
mov
mov
inc
sbb
outs
cwde
ret
mov
cmp
inc
arpl
(bad)
sbb
mov
ficom
fwait
push
bound
and
ret
outs
shl
bound
and
addr16
icebp
sbb
or
enter
mov
aam
fstp
lock
sar
leave
sbb
nop
jo
and
inc
cmp
outs
rcl
mov
push
jbe
mov
dec
retf
pop
mov
movs
cs
retf
dec
(bad)
adc
pop
leave
retf
pop
push
repz
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
repz
sbb
test
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
dec
mov
push
sbb
aad
push
popa
lods
adc
push
mov
test
add
stos
sbb
jmp
jne
push
clc
add
jp
sbb
cmc
jmp
and
ins
test
and
lods
imul
xor
jmp
mov
(bad)
(bad)
stos
mov
push
mov
(bad)
scas
lahf
in
push
dec
fwait
xlat
mov
shr
push
lods
pop
sub
(bad)
pop
fcom
inc
or
pop
mov
mov
and
inc
mov
sub
mov
xor
adc
fcmovu
and
jle
out
jo
retf
pop
mov
ja
push
adc
pop
jmp
ss
sub
xor
aam
add
ficomp
adc
test
idiv
pop
out
xchg
scas
push
cmps
out
fs
push
add
sub
jecxz
ins
jbe
or
push
cmps
cmc
mov
inc
pop
add
imul
iret
ins
mov
and
push
ds
outs
or
jmp
add
mov
ret
pop
jge
push
xor
push
push
das
ja
lock
dec
or
cmp
push
add
add
jno
adc
loop
fadd
mov
and
stos
mov
xlat
ret
fnsave
xchg
out
loope
sub
mov
pop
ins
pop
xor
xchg
scas
cmp
add
stos
loop
cmp
int
cmp
arpl
aaa
iret
cmp
or
sub
sbb
int3
fdivr
jg
enter
add
in
xlat
out
and
jg
add
(bad)
js
fdiv
cdq
out
pop
fs
out
jle
pop
sar
scas
jbe
inc
fnsave
adc
cmp
mov
retf
imul
xrelease
jmp
xlat
mov
xchg
stc
call
(bad)
mov
mov
(bad)
es
popf
push
pop
inc
repz
rol
jb
icebp
or
and
jns
and
pop
dec
pop
lods
inc
ror
jbe
mov
push
add
push
daa
or
mov
neg
(bad)
cmp
test
jmp
xor
das
xor
(bad)
(bad)
scas
adc
or
pop
sub
mov
cmp
push
fadd
jne
cmp
jecxz
mov
sahf
inc
sti
fcomp
int3
pop
fistp
popf
add
jo
aaa
sahf
jb
cs
sbb
retf
dec
xlat
out
add
push
fstp
ins
stc
retf
lea
push
mov
jne
inc
mov
mov
das
push
imul
jp
pop
push
jmp
sub
inc
in
sar
xchg
ja
call
pusha
dec
aaa
mov
adc
ss
jl
adc
pop
add
outs
scas
fist
dec
gs
xchg
inc
lock
iret
sbb
jmp
mov
aam
into
sbb
lea
cmp
ja
leave
or
sar
xlat
clc
into
scas
adc
push
mov
popf
aaa
stos
pop
sub
cmp
mov
sar
jle
sbb
push
shl
mov
div
outs
lock
jle
jecxz
pop
pop
not
jg
daa
jl
or
das
push
mov
aad
push
xor
push
and
mov
jp
push
and
addr16
jne
dec
xor
rol
addr16
xchg
push
fist
jo
cmps
push
inc
jae
xchg
outs
sbb
jbe
jbe
sbb
ins
aas
lock
aas
xor
inc
jns
ja
adc
and
push
mov
pop
or
mov
pop
cmp
scas
out
xor
add
push
add
outs
in
je
(bad)
ins
out
jb
cmps
add
stos
neg
adc
pop
outs
mov
je
cmp
enter
jno
or
xor
out
cmps
add
cmps
pop
push
jbe
pop
push
adc
idiv
(bad)
jl
push
test
arpl
push
adc
cli
mul
shl
sbb
cli
xchg
addr16
push
and
sub
push
xchg
add
xchg
jp
test
push
and
adc
jle
in
xchg
imul
outs
test
fcom
push
xchg
gs
xchg
jnp
mul
push
pushf
idiv
jbe
movs
pop
push
call
neg
fsubr
loopne
int3
jbe
cdq
clc
ins
pop
test
sahf
dec
xchg
shl
xchg
popa
jmp
add
test
push
mov
popf
div
mov
movs
lea
jbe
addr16
xor
ins
adc
ins
cmp
mov
jge
mov
push
pop
lds
xchg
data16
mov
jbe
nop
sbb
popa
cmp
xlat
(bad)
aad
test
mov
mov
or
xchg
xchg
jnp
daa
jg
push
jns
daa
add
jnp
pop
imul
pop
inc
xchg
mov
xchg
inc
adc
test
push
xchg
jl
sub
mov
test
xchg
dec
push
ror
pop
mov
retf
cmc
jns
jbe
xor
mov
push
jge
push
or
or
ret
(bad)
pusha
jl
fs
mov
sbb
add
sub
sbb
movs
enter
xchg
inc
mov
or
cdq
add
add
leave
pop
jbe
cwde
outs
or
jbe
xlat
mov
nop
push
cmp
lods
(bad)
popa
cmp
jl
cmc
add
mov
js
cwde
jb
xor
stos
sub
mov
jecxz
cdq
push
jmp
test
neg
push
test
pop
pop
add
sbb
(bad)
imul
jle
jns
mov
push
dec
pop
push
out
ss
or
add
fcom
test
jae
lea
xchg
inc
loopne
push
or
out
in
pop
hlt
dec
add
xchg
adc
pop
fnsave
mov
push
sub
push
shl
jno
push
in
sbb
pusha
fiadd
cmps
jbe
ret
mov
push
(bad)
imul
shl
inc
xchg
jmp
mov
push
mov
test
jne
dec
inc
add
mov
pop
mov
shl
movs
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
adc
add
add
sub
add
add
add
xchg
add
add
(bad)
bound
adc
mov
xor
xor
loop
add
add
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
sbb
sbb
jp
cmp
cmp
repnz
adc
or
stos
lods
pop
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
jle
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
ss
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
cmp
cmp
scas
lods
pushf
call
push
inc
inc
inc
and
and
mov
cmps
movs
je
je
ss
out
add
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
jle
cmp
inc
lods
scas
mov
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
pop
rcl
mov
mov
lods
out
sub
mov
daa
adc
imul
movs
mov
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
ret
les
rcr
lock
mov
sar
adc
stos
inc
and
lods
jg
mov
fiadd
mov
mov
sub
push
dec
lock
and
add
dec
lods
daa
or
mov
mov
sub
pop
rol
adc
and
mov
stos
mov
sub
mov
jmp
sti
call
mov
imul
cmps
adc
cmps
jnp
mov
mov
popa
retf
mov
jp
dec
(bad)
cmp
or
pop
mov
mov
or
pop
pop
add
pusha
add
mov
nop
add
cli
popf
xchg
mov
nop
add
mov
fwait
mov
or
sbb
mov
push
mov
or
pop
mov
and
sti
lods
mov
mov
fnstcw
pop
mov
stos
mov
sub
fist
rol
and
add
or
cmp
mov
or
mov
mov
mov
pop
mov
fild
lods
sbb
mov
cmp
sub
ror
jmp
dec
mov
mov
add
mov
mov
jmp
rol
or
scas
(bad)
stos
lods
or
mov
ins
mov
fcmovnb
adc
ins
add
scas
push
add
push
add
cmp
xor
xor
ret
xor
ret
aaa
add
jp
cli
retf
retf
nop
ret
xor
ret
jp
add
dec
les
mov
dec
mov
or
xor
lds
ret
out
jp
int
ret
push
pop
lds
lds
mov
cmp
mov
add
mov
add
add
inc
lock
or
(bad)
jno
les
les
lds
push
cmp
mov
out
dec
enter
pop
loopne
jbe
xchg
stos
sbb
shr
mov
add
pop
push
add
enter
mov
add
and
or
stos
dec
leave
cli
fiadd
ins
add
retf
mov
lock
retf
push
retf
leave
nop
dec
(bad)
sahf
mov
dec
shl
retf
add
int3
inc
fiadd
mov
in
retf
int
cmp
xor
scas
cmp
movs
pushf
leave
mov
retf
in
sbb
xchg
cmp
xchg
dec
stos
str
mov
iret
mov
into
adc
push
pusha
add
retf
mov
retf
leave
xor
stc
cmp
out
sub
push
xor
push
cmp
mov
mov
or
adc
mov
mov
cld
retf
sar
cld
retf
xchg
sub
aad
shr
push
adc
adc
xor
rcl
in
rcl
cmp
mov
rcr
cld
int
dec
shr
lods
rcr
cmp
mov
rcl
rcl
or
scas
cld
shr
int3
into
or
and
rol
aam
in
rcr
mov
sub
sbb
mov
add
retf
iret
jmp
in
dec
sub
icebp
sub
sbb
add
mov
ins
ror
rcl
retf
out
pop
fdivr
shl
aad
ins
add
fadd
aad
int
mov
int
ins
rol
shl
(bad)
fmul
cmp
(bad)
in
lods
rcl
std
(bad)
xor
fsubr
cmp
mov
shl
gs
popf
(bad)
fcmovnb
mov
mov
xlat
lods
ffree
sub
rol
sub
sti
mov
xchg
add
fsubr
fdivr
or
mov
fdivp
sub
mov
shl
add
jmp
mov
retf
xchg
popf
rcl
rcr
fst
fiadd
fcom
lods
fadd
fild
fisubr
loopne
push
sbb
test
fistp
cli
ins
aad
mov
jns
iret
cli
(bad)
ins
add
jge
sbb
rcl
shl
sar
leave
add
mov
sbb
dec
sbb
cdq
fstp
fisubr
jo
add
add
(bad)
std
into
and
shr
pop
loopne
push
push
pop
mov
cli
sub
mov
jecxz
fstp
cs
fdiv
mov
adc
xor
fcmovnb
popf
sar
fstp
sub
out
int
add
leave
pop
dec
iret
das
push
fsub
aad
jle
or
sub
loopne
ins
loopne
std
in
in
ficom
pop
jle
dec
push
rcr
in
pop
jecxz
jge
call
fisubr
fldln2
or
es
aad
out
cmp
pop
outs
out
mov
dec
or
adc
call
pushf
add
cmp
iret
pop
jmp
push
and
lock
cmp
jmp
popf
retf
addr16
jmp
lods
loop
cld
loop
sub
loope
cs
out
mov
das
cs
pop
xlat
(bad)
popf
loope
pop
aad
(bad)
fstp
(bad)
fsubrp
popa
dec
in
ror
and
in
cmp
loopne
pop
jmp
out
iret
pop
out
call
sahf
in
lahf
mov
repz
out
dec
in
push
iret
and
rol
out
jmp
outs
out
jge
shr
out
jle
jbe
retf
loopne
add
mov
mov
add
jle
int3
(bad)
push
and
imul
add
add
(bad)
xchg
popf
loope
pop
icebp
add
repnz
add
(bad)
fld
out
hlt
mov
lds
add
iret
aam
jmp
or
pop
in
repz
pop
out
sahf
out
ror
(bad)
sahf
fsubr
fisttp
(bad)
mov
out
movs
mov
cld
in
out
cld
or
sub
sbb
fld
push
hlt
push
scas
fst
jmp
call
iret
call
into
in
out
aad
int3
hlt
iret
ds
call
imul
test
jne
jmp
pop
clc
or
add
lock
in
das
iret
push
(bad)
jmp
push
in
call
and
or
stos
daa
and
sub
mov
not
mul
cli
mov
add
fisub
sti
inc
(bad)
clc
aad
hlt
dec
psubb
cli
repnz
icebp
shr
stc
mov
call
cs
test
cld
jmp
iret
ins
out
repz
cli
lods
jge
fmul
std
dec
aas
loopne
iret
icebp
add
mov
into
loop
fdivr
bswap
loopne
icebp
ss
sub
std
test
icebp
sub
jg
call
fdiv
push
pop
sub
mov
mov
test
arpl
mov
mov
mov
(bad)
imul
(bad)
shl
push
sub
test
push
mov
pusha
jmp
mov
ins
cmp
push
sub
dec
cld
cdq
lods
cmp
out
imul
ds
cmp
dec
(bad)
pop
or
dec
popf
mov
jo
hlt
icebp
pop
shr
loopne
push
or
jnp
push
popf
test
pop
les
fsub
push
mov
xchg
xchg
sar
and
test
loopne
jl
ins
icebp
sub
mov
cs
jno
inc
xchg
mov
in
rol
cmp
xchg
xchg
test
add
add
inc
mov
mov
add
test
mov
and
ja
pop
and
int
ins
mov
gs
outs
aad
dec
aad
(bad)
xchg
leave
push
xchg
ret
jns
loopne
jo
adc
shl
fs
xchg
or
(bad)
xor
aam
(bad)
jne
xchg
aaa
pop
jecxz
mov
cmp
xchg
fisttp
leave
sbb
xchg
push
(bad)
jb
cdq
xor
push
dec
ja
adc
mov
sar
dec
out
dec
inc
inc
cmp
in
mov
aam
cmps
stos
dec
cmp
out
ret
cmp
inc
cdq
or
ds
test
imul
adc
mov
sbb
push
pop
xchg
or
inc
lahf
jge
or
js
and
pop
shr
lea
js
mov
push
cmp
xor
loope
into
jle
cmp
les
pop
in
dec
push
bound
mov
es
xchg
mov
dec
adc
pop
inc
lea
adc
mov
aad
cmps
add
lahf
sub
in
leavew
xor
aad
arpl
dec
dec
(bad)
pop
mov
cmp
(bad)
pusha
inc
add
fnstsw
mov
and
and
push
add
sbb
cmp
stc
xlat
ret
or
jle
sub
test
sti
adc
jbe
movs
pusha
out
in
pop
jp
in
movs
bound
and
test
cmps
popf
sahf
fsub
popf
(bad)
int
in
scas
and
(bad)
call
rcr
push
sbb
mov
push
mov
cmp
stos
sub
inc
fwait
mov
in
and
mov
inc
adc
xchg
push
cli
cmp
stos
in
and
nop
cmp
mov
cmp
push
mov
xor
data16
jl
mov
adc
ss
mov
ror
fadd
add
retf
ins
pop
retf
sbb
pop
sbb
jmp
mov
retf
adc
cmps
enter
in
sub
arpl
out
out
(bad)
or
add
inc
stos
sbb
cs
pand
add
(bad)
pop
xlat
cmps
mov
imul
fnstsw
xlat
loopne
sub
xor
mov
mov
mov
cli
cmc
pop
jbe
sti
mov
addr16
jmp
into
push
mov
rcr
fidiv
out
cmps
dec
and
outs
jne
pop
push
push
cmc
mov
lods
enter
aam
ss
mov
scas
mov
ja
lea
loope
loopne
fwait
add
in
xchg
mov
clc
push
leave
aaa
or
loope
js
push
mov
jnp
(bad)
out
ins
mov
stc
lock
(bad)
int
not
(bad)
fsubp
mov
sub
enter
pop
jg
cmc
mov
(bad)
imul
(bad)
push
lock
pop
mov
fist
sar
aam
or
xchg
mov
jmp
push
inc
mov
xchg
loopne
call
jb
jnp
cli
adc
xor
sbb
add
ret
popf
jo
mov
fisubr
cwde
or
sar
pop
out
mov
mov
sub
ds
adc
add
or
sbb
ins
sub
adc
mov
mov
fidivr
jno
sub
out
mov
or
loope
pop
shl
mov
ins
mov
inc
pop
or
jge
sbb
jmp
jns
sub
clc
or
mov
cmp
and
loopne
jbe
pushf
or
sbb
add
test
jns
and
sub
enter
adc
movs
sub
and
jg
inc
(bad)
sbb
outs
jno
inc
loop
dec
test
adc
into
movs
loopne
sti
icebp
adc
mov
mov
xchg
jecxz
sub
sub
mov
in
jecxz
pop
lock
clc
jge
mov
cmp
xor
dec
mov
les
sar
loopne
cmps
leave
cmp
cmp
pop
sti
mov
add
pop
push
mov
jae
ja
or
retf
jg
loopne
or
dec
ds
xchg
pop
or
fst
mov
dec
sub
in
mov
js
cmps
lahf
daa
adc
retf
repnz
mov
call
pop
push
cmp
push
int
cmp
shl
pushf
pop
inc
cmps
push
pop
stc
dec
and
xor
jb
add
out
push
dec
push
push
jmp
lock
or
push
aas
adc
cmp
inc
lahf
cmp
push
shl
dec
push
add
(bad)
pop
jne
fcom
add
int
cwde
repz
and
jmp
mov
mov
sub
cmp
mov
or
nop
sar
jbe
adc
xlat
daa
jb
mov
mov
push
rcl
push
mov
daa
pop
fxch
mov
pushf
data16
push
xor
mov
xor
fiadd
cld
lods
xor
cmp
jb
or
pop
push
push
xchg
mov
and
push
arpl
fnstsw
mov
ja
nop
fcom
cwde
stos
push
test
repz
add
aaa
inc
cwde
es
mov
or
rcl
not
clc
in
cmps
addr16
pop
dec
fidiv
push
rcl
sbb
outs
jp
pop
push
xor
add
and
into
cmps
mov
cmp
lock
sbb
aam
and
jo
or
loope
and
push
sbb
add
cmp
or
adc
(bad)
cmp
inc
or
add
cwde
(bad)
fdiv
add
test
and
aad
(bad)
neg
movs
cmp
(bad)
mov
ror
cmp
add
xchg
loop
sbb
add
cmp
sbb
je
dec
cwde
inc
mov
ins
out
imul
and
pop
mov
jmp
add
inc
adc
shl
jle
mov
cmp
rcr
sub
add
out
out
xor
adc
ret
add
push
jmp
jg
jne
mov
and
aam
mov
call
xchg
scas
mov
cmps
call
hlt
jae
jg
loopne
cmp
mov
rep
fbstp
mov
mov
(bad)
je
popa
int3
in
add
icebp
(bad)
pop
loopne
sbb
fiadd
cli
mov
(bad)
mov
test
mov
jo
cmp
jmp
sbb
pop
xchg
mov
into
push
ins
ret
sbb
xchg
add
fwait
push
push
pusha
rcl
ins
mov
add
ja
pop
std
test
sbb
lahf
pop
pop
cwde
rcr
aad
iret
js
lea
jecxz
xor
call
icebp
fwait
pop
mov
lods
adc
inc
mov
jge
jmp
inc
mov
repz
sbb
das
jbe
pushf
lea
mov
clc
or
pusha
add
xor
jmp
sbb
fisttp
jp
mov
fsubr
das
pop
pop
push
lock
add
aam
out
cmps
jns
jmp
and
jmp
mov
mov
and
clc
add
lahf
cld
push
popa
into
ja
jmp
jge
das
cmp
mov
repz
std
or
dec
call
add
aaa
test
pushf
inc
ja
mul
cli
aas
mov
adc
cmp
adc
js
add
mov
jp
daa
fdivrp
jge
jnp
add
clc
loope
cld
out
xor
loopne
lock
and
cmp
popf
(bad)
icebp
or
clc
jne
jle
push
rol
mov
push
add
rcr
or
jmp
js
addr16
and
push
jae
lock
push
fwait
xchg
ja
cmps
ja
sub
or
mov
jmp
mov
(bad)
mov
dec
lock
test
sbb
jge
cmps
ja
mov
rol
push
cmp
add
inc
and
inc
add
push
mov
inc
add
inc
cmp
test
inc
push
pavgb
sub
jge
xchg
daa
and
add
jns
xchg
daa
jnp
out
sbb
dec
dec
js
cmps
jle
cmps
jns
data16
sub
or
lock
aam
jl
cmps
js
mov
push
cmp
jne
or
mov
inc
test
and
mov
jl
mov
lock
fdiv
push
pop
gs
add
push
add
mov
mov
add
cmp
clc
mov
ja
pop
jae
enter
mov
xchg
add
add
push
mov
fdivr
push
or
ds
lea
add
xor
(bad)
clc
or
clc
(bad)
fdivr
push
or
mov
add
test
pop
cmp
pop
add
dec
jae
cmps
test
sbb
mov
sub
add
call
add
lds
(bad)
push
aad
js
mov
pop
mov
pop
cmp
add
sbb
nop
fwait
js
mov
jg
js
fnstcw
in
add
mov
sbb
js
cmps
clc
mov
and
mov
jns
add
mov
data16
dec
add
xchg
inc
rcl
(bad)
sub
cwde
nop
push
or
push
xchg
mov
push
sbb
pop
je
(bad)
xchg
lock
jo
pop
add
xor
add
sbb
cwde
mov
nop
xor
mov
add
ror
stc
xchg
dec
mov
xchg
mov
mov
sub
in
clc
add
sub
xlat
cdq
push
nop
xchg
pop
jns
je
or
sub
mov
pop
clc
xchg
pop
and
dec
xchg
ins
imul
jb
adc
dec
cdq
fwait
push
mov
mov
test
js
pop
cdq
call
inc
xchg
popf
test
les
jae
nop
mov
fwait
js
popf
pop
test
test
repz
adc
or
cdq
imul
jmp
(bad)
test
outs
sbb
test
lds
sbb
mov
sahf
mov
push
das
push
xchg
(bad)
sbb
mov
repz
pop
add
cdq
jl
or
push
aaa
sbb
jns
mov
test
mov
sahf
cmp
hlt
fwait
jg
call
jb
xchg
mov
sub
xchg
out
test
data16
cdq
mov
(bad)
xchg
sub
xchg
xchg
dec
pushf
ins
pop
xchg
cwde
push
cwde
fldcw
cmps
hlt
sub
sub
dec
mov
loopne
cld
cdq
movs
cmps
sub
sbb
leave
movs
mov
add
dec
mov
stc
popf
pop
(bad)
ficom
daa
jns
stc
mov
neg
cmps
dec
dec
movs
cdq
cli
or
jne
or
mov
cdq
jb
cwde
cli
pop
stos
imul
call
movs
scas
or
mov
push
stc
pushf
xor
jno
rcl
cdq
cmps
sub
mov
dec
lahf
mov
mov
push
sbb
push
in
pushf
sbb
inc
test
rcr
stos
test
inc
stos
test
mov
movs
fcom
stc
scas
pop
call
pop
xchg
or
add
push
dec
retf
mov
cmps
fisub
push
add
scas
mov
lods
dec
sub
jmp
push
jmp
stos
sbb
stc
stos
fnstsw
popa
sbb
cmp
or
mov
cwde
sbb
movs
pop
jns
mov
mov
or
xchg
scas
dec
xor
test
dec
stos
adc
mov
mov
push
push
mov
ins
pop
mov
stos
movs
ja
xchg
repz
pushf
adc
xchg
outs
jmp
lods
scas
leave
mov
cmp
sbb
sub
stos
test
or
pop
nop
movs
outs
sub
sbb
retf
mov
pop
lods
push
mov
mov
imul
add
pop
call
push
stos
test
lods
push
sub
dec
mov
pop
add
mov
adc
imul
scas
ins
stc
cmps
sub
mov
sti
mov
imul
ja
stos
retf
js
cdq
jae
pop
ins
sbb
ror
sbb
mov
stc
mov
cli
mov
leave
add
push
aaa
inc
nop
lods
jecxz
mov
jmp
outs
cdq
xchg
movs
mov
and
cmps
jp
mov
push
inc
retf
sbb
jmp
mov
fdiv
retf
or
mov
xor
mov
pop
lahf
into
mov
jmp
fdivr
xlat
fist
pusha
add
ins
or
fwait
neg
inc
jmp
mov
cmp
fcomp
push
lea
add
cmp
js
mov
inc
mov
sbb
daa
imul
mov
push
inc
pop
mov
add
mov
jp
sub
jl
sbb
and
add
mov
cld
mov
jmp
sbb
or
inc
mov
and
repz
lock
add
jmp
imul
dec
mov
dec
stos
test
mov
jo
outs
fmul
dec
ror
add
sbb
and
test
ret
rcr
mov
jmp
repz
enter
push
jmp
mov
mov
xor
test
and
mov
ror
sbb
out
lds
push
sub
imul
ret
stos
out
retf
mov
nop
mov
pusha
or
mov
call
sub
into
nop
inc
add
lods
xchg
imul
bound
sub
fmul
push
add
xor
xor
imul
mov
cmp
jo
or
add
mov
stc
enter
ret
(bad)
mov
add
leave
adc
sbb
mov
in
mov
jmp
(bad)
retf
shl
rcl
dec
stc
shr
dec
dec
call
inc
dec
rol
shr
mov
sbb
rcl
int3
clc
or
sbb
ins
add
xor
cmc
pushf
ret
shr
fsubrp
rcl
mov
mov
pusha
or
adc
retf
int
mov
xchg
xchg
inc
nop
xlat
inc
sbb
aaa
dec
fdivr
iret
jl
iret
and
xchg
push
cmp
lods
cmp
ins
dec
fdivr
fisubr
dec
aad
ins
int3
pop
jge
push
in
call
or
push
jnp
sub
(bad)
retf
dec
fisubr
(bad)
or
hlt
dec
mov
int3
retf
fisub
sub
fistp
pop
fst
jae
ret
retf
fsubr
aam
sbb
ds
and
aad
dec
iret
push
aam
mov
ds
shl
dec
enter
mov
movs
leave
ret
fcom
fistp
iret
mov
aam
sbb
les
pop
jge
stc
jl
push
push
add
nop
ret
fcmovne
int
int
fbld
mov
jle
push
ror
fistp
loopne
dec
ror
in
shr
ins
int3
adc
fld
fadd
int
dec
loop
sub
cmp
jle
cmp
int
or
fnstcw
push
jmp
mov
ret
mov
mov
(bad)
inc
fdiv
(bad)
xchg
mov
cs
stc
pop
loopne
or
int
(bad)
mov
in
mov
pop
jle
push
ins
loopne
jge
imul
fild
ficomp
int3
or
pop
out
rol
add
(bad)
fisubr
sbb
nop
loopne
xchg
dec
loope
mov
sbb
aad
jge
dec
jle
int
out
int3
aad
into
ror
aam
sub
ins
out
fcom
loope
out
in
out
jecxz
(bad)
jecxz
ds
mov
mov
jmp
popf
(bad)
jl
or
fldcw
in
push
out
sub
sar
or
adc
out
push
in
hlt
(bad)
lods
popf
in
dec
pop
sbb
nop
xor
mov
into
sub
out
pushf
in
les
in
jne
in
dec
mov
pusha
dec
inc
call
mov
arpl
out
neg
(bad)
sub
stos
into
jmp
cs
(bad)
lock
mov
leave
jle
pop
out
out
mov
mov
call
out
in
ds
pusha
out
shl
lock
sahf
icebp
xchg
scas
out
adc
lock
in
outs
fnstcw
lock
cmp
fldenv
test
mov
in
add
jmp
js
out
fbstp
cmp
push
(bad)
stos
cs
icebp
pop
add
or
fidivr
add
jecxz
outs
out
add
(bad)
mov
inc
mul
hlt
lods
ins
repnz
imul
lods
neg
sub
out
popf
neg
fdivr
int3
fild
add
jecxz
stc
cmc
imul
iret
add
stc
scas
scas
hlt
stc
(bad)
cmp
lahf
jg
or
stc
test
xchg
cs
inc
mov
jmp
int3
cwde
lahf
neg
fimul
cli
jmp
iret
hlt
push
into
out
psllw
idiv
push
add
neg
neg
mul
test
jmp
mov
std
xor
add
lock
clc
into
sub
or
std
retf
psubw
cli
inc
int
jecxz
stc
fldcw
in
cli
mov
iret
nop
out
cmc
mov
or
sbb
pop
xchg
test
adc
nop
nop
test
add
lea
call
lods
cmps
test
lea
mov
xchg
mov
mov
mov
lds
mov
cmps
(bad)
mov
retf
rcl
cdq
test
mov
(bad)
int
test
rcr
xchg
aad
sbb
adc
test
ret
adc
dec
cmp
test
shl
dec
call
test
les
js
popa
xor
fdivr
inc
dec
shl
push
lock
mov
imul
and
outs
mov
test
add
jns
xchg
int
inc
fwait
ds
je
push
cwde
mov
push
cwde
aad
ficom
pop
sbb
cmps
(bad)
cmp
push
mov
sti
sub
sahf
push
addr16
dec
pop
iret
inc
push
cld
(bad)
mov
icebp
fcmovb
mov
mov
adc
rcr
lea
adc
dec
push
popa
xor
xchg
sbb
fidivr
scas
dec
iret
jbe
imul
sar
xchg
xchg
cmps
(bad)
leave
pop
ja
in
out
mov
pop
jne
adc
push
cmp
sub
push
cmp
nop
push
fcmovnb
xchg
clc
dec
not
mov
in
sub
iret
mov
fist
push
out
or
lock
pop
pop
push
mov
fidiv
pop
mov
gs
outs
scas
loope
mov
xor
cmp
mov
pop
and
and
push
jg
jne
dec
add
es
jo
sbb
ja
jp
sub
mov
fnstsw
xchg
call
xchg
shl
pop
hlt
cmp
pop
ret
jnp
push
bound
mov
mov
daa
xchg
and
shl
push
mov
xchg
pop
push
leave
push
sub
jno
mov
adc
adc
fist
shr
pop
bound
adc
add
jns
adc
cli
mov
test
jmp
mov
add
jmp
or
dec
or
jle
sbb
xchg
popf
jb
pop
fwait
mov
in
xchg
jmp
or
inc
sub
test
loop
push
add
push
xor
jns
(bad)
jns
sahf
rcl
and
test
add
add
and
pop
pcmpeqb
rcl
adc
loopne
sbb
mov
mov
outs
fld
cs
repz
sti
ret
(bad)
sub
in
jg
push
cmps
inc
mov
pop
loopne
sti
rol
jne
lds
(bad)
aad
cld
scas
adc
out
or
pop
mov
xor
jo
dec
pop
mov
xor
sub
pop
mov
cmps
mov
adc
movs
jl
xchg
movs
(bad)
sti
inc
push
daa
push
sub
mov
xchg
repnz
xchg
push
sub
stos
xor
dec
mov
daa
ins
xor
test
(bad)
aam
push
imul
retf
adc
jae
pop
shr
ins
sub
outs
aas
and
dec
fiadd
int
sbb
xor
retf
and
inc
bound
push
loopne
pop
jle
or
sub
push
ins
jnp
aad
cmp
clc
prefetch
push
cli
fsub
adc
jp
scas
adc
sti
scas
xchg
hlt
lock
xor
or
push
mov
cmp
enter
jle
sub
fist
scas
div
test
cmp
cmp
jbe
in
mov
jp
cli
pop
fs
xor
jmp
ds
outs
push
cmp
lock
or
add
dec
mov
inc
and
mov
mov
(bad)
pop
inc
mov
cmc
ret
ret
cmp
es
jl
cmp
repnz
pop
xor
xchg
adc
xchg
rcr
pop
loope
(bad)
(bad)
ds
mov
jg
retf
mov
cli
cdq
loope
dec
cmp
cli
push
lock
cli
adc
sub
adc
sub
mov
pusha
mov
sti
jp
mov
dec
dec
sbb
mov
mov
in
add
syscall
pop
pop
pop
adc
cwde
aas
ds
icebp
jge
mov
inc
outs
push
mov
popa
and
adc
das
aaa
retf
fmul
movs
fiadd
cmp
sbb
cs
sbb
push
loope
lock
sub
outs
fcmovnu
jecxz
and
xchg
mov
sbb
cmc
iret
add
add
or
xchg
or
xor
lahf
pop
shr
add
sbb
in
cmc
jbe
inc
xchg
repnz
mov
cmp
sub
ret
mov
dec
addr16
call
dec
imul
neg
xchg
pushf
leave
dec
cmps
push
jnp
dec
ds
lock
dec
aam
cmp
call
(bad)
(bad)
and
jecxz
iret
jo
adc
fnstsw
push
jl
shl
sti
mov
data16
adc
ror
dec
daa
inc
das
push
mov
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
add
dec
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
retf
fcmovbe
mov
lods
ins
addr16
fcmovnu
(bad)
mov
and
sbb
cmc
push
mov
or
cmp
mov
add
jmp
mov
loope
mov
push
push
loopne
xchg
mov
pusha
scas
pop
xor
mov
xchg
inc
push
in
ja
jae
scas
add
sti
(bad)
shl
repz
pop
fidiv
out
imul
lock
jnp
repnz
sar
retf
pop
loopne
xchg
or
popf
mov
jg
pop
fcomp
loope
and
inc
xchg
pop
mov
xchg
ror
sbb
xchg
fwait
pop
and
out
mov
xlat
(bad)
and
xchg
push
les
mov
imul
aas
(bad)
xor
lods
loop
retf
pop
add
push
outs
out
mov
(bad)
add
xchg
pop
jl
jmp
cmp
out
push
cdq
shl
mov
aad
fcom
dec
cmp
pop
(bad)
das
adc
mov
mov
int
jo
mov
cli
addr16
mov
xchg
or
popa
or
mov
add
jecxz
lds
jae
xor
call
cmp
inc
mov
das
add
inc
loopne
adc
add
sub
ror
add
or
xchg
ins
bound
out
cwde
mov
mov
mov
or
sub
arpl
test
lea
mov
gs
data16
mov
mov
(bad)
adc
ja
int3
and
out
mov
jo
jmp
les
push
neg
pop
out
pop
mov
loopne
(bad)
ss
or
inc
repz
mov
les
mov
sbb
add
out
fadd
fsub
xchg
fdivr
mov
fcom
cmp
mov
cmp
fdivr
mov
aad
jno
pop
inc
(bad)
jnp
mov
inc
pop
in
call
pop
mov
or
fwait
int
pop
repnz
stos
fucom
cmp
(bad)
mov
xor
cmp
test
mov
jnp
fnsetpm(287
push
sbb
sbb
fwait
cmp
(bad)
jno
mov
outs
jo
add
mov
xor
jge
mov
(bad)
outs
mov
ins
pushf
out
pop
(bad)
mov
mov
ds
iret
sti
loope
mov
mov
xchg
cmp
repz
jge
jge
stc
mov
jne
lea
sub
scas
fistp
loope
idiv
inc
mov
xor
div
pop
iret
jecxz
add
or
cmc
xchg
stos
sbb
jmp
test
xlat
jle
test
ror
div
std
popa
or
fmul
lods
leave
(bad)
sti
and
sub
call
add
mov
jp
idiv
(bad)
imul
outs
mov
add
daa
add
pop
jb
push
ins
or
jp
ja
mov
xchg
pop
shl
ins
data16
je
cmps
jge
push
imul
ins
aad
add
push
ins
sbb
adc
lahf
push
xor
and
push
out
test
jo
fdiv
in
mov
jle
fdiv
pop
ja
gs
ss
xlat
ins
dec
push
ins
sbb
ins
aaa
rol
dec
cmp
cmp
jne
xchg
and
sbb
jnp
push
(bad)
push
jnp
cmp
aas
shl
adc
sub
ja
adc
cmp
es
sbb
sub
cwde
xchg
mov
gs
xchg
push
jno
jnp
enter
jle
pop
mov
aaa
push
add
je
push
jp
cmps
jb
js
imul
xlat
pop
cmp
(bad)
xlat
pop
imul
test
mov
ja
call
push
ja
dec
xchg
add
jl
imul
lock
out
sti
xlat
add
pusha
aaa
mov
adc
outs
aaa
test
push
inc
jp
inc
jbe
push
sbb
push
and
mov
outs
jmp
push
js
idiv
pop
jns
inc
lea
xor
xor
adc
test
lds
pop
outs
push
jne
data16
out
add
jbe
mov
push
push
push
(bad)
js
ret
mov
cmp
ins
add
pop
clc
clc
outs
js
adc
arpl
js
push
mov
fdiv
(bad)
mov
imul
lea
mov
div
inc
addr16
mov
add
gs
aaa
xchg
cli
out
and
aas
imul
pop
vmaxpd
(bad)
pop
xchg
test
jo
jno
pop
xor
xchg
mov
ja
rol
les
pop
xchg
jo
jne
js
addr16
cdq
and
imul
push
mov
mov
inc
or
sub
add
xor
mov
cdq
movs
cmc
popa
aaa
push
cdq
push
clc
outs
pop
ja
cmps
or
mov
mov
jge
sub
jmp
mov
jg
push
xchg
pop
adc
pop
push
lea
mov
(bad)
ficomp
push
mov
cmp
jnp
in
dec
(bad)
nop
mov
ja
jb
xlat
jnp
test
movs
xchg
pop
fild
jno
pop
add
add
mov
arpl
daa
cmp
je
sar
dec
jo
cwde
es
mov
call
adc
js
movhps
or
xchg
test
imul
add
inc
fldenv
mov
es
mov
sbb
mov
ja
xor
or
add
stos
cmp
pop
mov
jmp
pop
push
xlat
xchg
scas
mov
cmps
add
cmc
xchg
stc
aaa
lahf
and
inc
shl
test
test
fs
sub
or
push
ins
pop
pop
nop
je
outs
mov
nop
inc
or
test
das
push
mov
push
pop
dec
cli
popa
push
jmp
mov
add
sbb
jae
cmps
jo
cmps
outs
jnp
test
push
jge
mov
push
pop
test
mov
push
cmc
test
jp
test
test
inc
mov
inc
shr
test
mov
adc
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
rcr
ret
les
mov
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
sbb
xchg
shr
jae
add
jo
add
add
cli
popf
sub
inc
mov
mov
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
mov
push
rol
and
int3
or
inc
mov
adc
test
es
mov
dec
mov
sti
mov
fild
test
mov
sub
sti
mov
cmp
mov
add
adc
loopne
mov
shr
cli
jnp
push
ins
add
mov
pushf
mov
fwait
ja
sbb
stos
mov
adc
push
add
jl
daa
sbb
xor
pop
ret
ret
add
add
ret
ret
add
jo
cmp
sbb
or
ret
aas
ins
add
push
cmp
ret
mov
retf
ret
les
or
dec
cmp
stos
les
add
and
adc
(bad)
xor
out
push
mov
dec
(bad)
imul
push
ret
xor
add
mov
cld
(bad)
jp
add
mov
out
js
and
sub
sub
pop
mov
mov
mov
enter
pop
pusha
enter
xchg
fmul
cmp
inc
les
mov
cld
retf
enter
inc
sub
inc
lock
dec
xor
mov
add
stos
retf
mov
cld
(bad)
mov
enter
mov
add
cld
leave
pop
ror
or
dec
enter
mov
mov
xchg
add
add
pop
pusha
add
adc
fmul
add
cmp
in
lods
int
int3
int
inc
into
out
stos
fnstcw
or
out
or
fistp
(bad)
sbb
cli
fcmove
loopne
iret
add
add
int
mov
mov
rol
rol
leave
mov
mov
add
xor
adc
sbb
or
sahf
mov
mov
rcl
shr
int
int3
mov
add
into
push
mov
add
add
int
ins
shl
lods
aam
jl
dec
sbb
jmp
rol
loopne
mov
add
sub
sub
int
ins
ror
fiadd
pop
(bad)
int
ins
mov
or
jmp
ins
mov
imul
cmp
int
cld
(bad)
add
(bad)
rcl
mov
popa
(bad)
xlat
inc
pop
int
int
fstp
lods
int
cld
aad
ins
xlat
call
xlat
test
neg
lods
int3
pushf
int
jb
iret
add
sbb
int3
xor
pop
push
aad
in
(bad)
xchg
or
cmp
test
xchg
sub
mov
iret
jp
iret
xchg
rol
aad
jmp
fcomi
cld
xlat
push
std
int
int
mov
into
sbb
rol
or
lea
or
std
fisttp
sbb
sbb
(bad)
jmp
retf
iret
aam
rcl
inc
(bad)
dec
fistp
aam
sub
or
leave
push
sub
inc
or
mov
fdiv
mov
(bad)
aad
dec
rol
jle
retf
in
fmul
pop
xlat
sar
fbstp
(bad)
ss
shr
ins
fdivr
add
(bad)
std
(bad)
loopne
int3
add
mov
ins
int
popf
dec
fisub
fucomip
pop
loope
(bad)
push
cs
push
in
mov
push
rcl
out
in
jecxz
inc
enter
fldcw
push
(bad)
in
jle
out
mov
mov
in
(bad)
loopne
ins
fstp
fisttp
loope
jle
fwait
int
ficomp
mov
int
retf
out
fmulp
dec
pop
out
cmp
inc
or
fidivr
pop
fimul
sar
ret
into
cmp
adc
int
cld
rol
add
fmul
nop
fist
rcl
xor
dec
in
into
cmp
jmp
js
out
cld
in
fsubrp
jecxz
in
jge
out
fld
mov
out
popf
aam
fsubp
lods
ficomp
fadd
cs
leave
out
fcomp
aam
jge
adc
in
mov
sub
jl
into
pushf
jle
jmp
in
scas
fidivr
loope
sub
jge
aad
mov
mov
add
iret
lock
in
ds
jnp
jmp
mov
(bad)
mov
aad
lock
sub
dec
outs
jmp
or
push
inc
stos
pop
adc
push
cs
(bad)
push
loopne
mov
mov
add
(bad)
rcr
in
out
fsubr
mov
out
into
into
fscale
jmp
ds
outs
out
mov
aam
out
jmp
mov
nop
jle
ss
retf
dec
in
fld
stos
outs
jmp
cmp
(bad)
fstp
fld
push
mov
(bad)
lock
cmc
inc
mov
ja
in
icebp
dec
(bad)
icebp
cmp
loopne
(bad)
call
scas
hlt
inc
push
repnz
dec
sub
(bad)
sbb
je
repz
or
in
iret
out
dec
pop
call
(bad)
out
sahf
push
repnz
mov
mov
add
mov
jne
(bad)
sub
repnz
clc
ja
stc
xchg
out
add
fmul
outs
add
push
icebp
fstp
rep
pop
repnz
lahf
fcom
lock
pop
jmp
ins
in
cmp
xchg
dec
fistp
neg
repz
stc
ins
das
sti
push
out
into
push
(bad)
cld
mov
(bad)
(bad)
clc
je
idiv
into
test
iret
popf
pop
sti
mov
out
les
test
xor
loopne
iret
int
(bad)
rol
sti
out
scas
repnz
xlat
neg
ret
fs
jae
push
enter
mov
adc
push
push
bound
cli
jo
pusha
rcl
cwde
sub
imul
jmp
mov
retf
sbb
cld
stos
leave
ret
call
(bad)
call
mov
sub
pop
fdivr
fldcw
retf
or
sahf
pushf
jnp
lods
lea
mov
mov
mov
ins
push
dec
sbb
pop
pop
xchg
mov
cmp
cs
fs
inc
call
jmp
mov
imul
add
and
pop
enter
mov
xchg
bound
cdq
outs
xchg
sub
test
(bad)
dec
adc
fisttp
xor
pop
arpl
mov
mov
sbb
retf
push
or
mov
pop
cmps
push
ror
sbb
lock
fimul
jbe
call
inc
aam
scas
scas
(bad)
cs
sbb
xchg
movs
lods
push
mov
sub
dec
in
dec
fidivr
xchg
popf
xor
sbb
jp
shr
retf
inc
or
pop
test
push
mov
movs
fidiv
adc
ins
mov
aam
push
stc
jbe
push
sub
jae
ins
cli
mov
js
in
out
xor
xor
test
aaa
sbb
mov
aas
retf
repnz
inc
(bad)
sbb
sbb
neg
aam
inc
retf
xor
fbstp
pushf
aad
pop
xchg
data16
arpl
mov
xchg
xor
test
je
loope
iret
mov
and
jecxz
pop
and
adc
arpl
in
pop
sbb
and
rol
cmp
sbb
adc
sar
jne
jne
pop
popa
fisubr
inc
inc
and
push
enter
sub
mov
data16
(bad)
fnstenv
in
push
jp
push
push
pop
jp
fcom
ja
stos
cmps
daa
dec
aaa
inc
(bad)
and
loop
loop
in
or
inc
push
out
push
sbb
outs
xchg
mov
dec
popf
lea
test
sbb
in
mov
movs
sbb
cwde
cmp
cmp
pop
mov
imul
cli
dec
lahf
stos
jmp
mov
fcomp
shr
stc
cmc
leave
daa
adc
sub
inc
cmps
mov
jne
js
pop
cmp
jp
xchg
imul
dec
push
and
and
adc
outs
mov
loope
enter
sub
aad
add
xchg
mov
sub
push
sub
in
push
inc
pusha
outs
clc
xchg
sbb
xlat
or
outs
dec
loopne
sbb
pop
mov
daa
les
scas
inc
mov
cmp
inc
fwait
xchg
ret
mov
add
jne
(bad)
fimul
int3
xor
call
enter
popf
jmp
mov
xchg
jno
inc
(bad)
mov
fwait
jb
inc
addr16
sub
mov
inc
mov
fst
retf
adc
popa
scas
sub
cdq
sub
cmp
fidiv
sub
mov
pushf
pushf
retf
mov
mov
dec
(bad)
lods
lods
fnsave
add
into
and
cli
add
xor
cmps
(bad)
int3
push
ins
mov
cmp
or
push
repz
fwait
daa
pushf
mov
adc
in
cmc
ficom
jmp
iret
dec
and
mov
add
fisub
fcomp
(bad)
aas
push
dec
mov
fwait
gs
out
into
jge
mov
mov
lods
ins
lock
into
cmp
hlt
out
push
out
or
mov
cmc
sbb
mov
fnsave
jnp
pop
fbstp
xor
pop
inc
push
push
mov
(bad)
outs
push
call
jg
push
pop
and
cmps
cmp
or
sub
inc
(bad)
in
jbe
loop
add
test
sbb
vmwrite
xchg
repz
not
mov
stos
pop
repz
push
sar
fiadd
in
push
mov
cmp
pop
mov
mov
test
jge
mov
mov
outs
popa
lods
fucomip
shl
adc
(bad)
sbb
(bad)
fidiv
mov
scas
or
add
pop
mov
inc
mov
mov
push
pop
aad
out
inc
pop
push
mov
dec
inc
inc
outs
pop
arpl
loop
fcomi
aaa
stc
in
scas
sub
aaa
dec
inc
mov
loop
mov
adc
add
sbb
add
adc
lock
xor
sbb
jo
(bad)
pop
lods
das
movs
dec
cwde
jg
in
std
xchg
mov
and
js
xor
and
cmp
shr
sub
add
out
inc
arpl
pop
gs
inc
mov
adc
xor
(bad)
fcom
push
inc
jne
push
mov
pop
enter
mov
pop
rdpmc
stc
retf
mov
sar
and
aad
adc
test
int
xchg
icebp
xchg
ins
add
repnz
enter
pushf
retf
ds
nop
pushf
ds
lahf
and
ret
out
and
xor
xchg
rol
jns
ds
mov
hlt
pushf
dec
sub
dec
pop
mov
test
movs
into
dec
inc
add
mov
lahf
in
movs
jmp
mov
stos
(bad)
cmc
jle
fsubr
sbb
sub
sub
or
(bad)
mov
adc
jmp
and
fsub
inc
(bad)
xlat
inc
fwait
push
stos
xchg
fsub
xor
mov
lods
xchg
shl
scas
jge
sub
stos
cmp
test
cmp
stc
test
div
sahf
sub
add
push
aam
daa
in
fidivr
push
scas
stc
lods
(bad)
cmp
mov
mov
aad
wrmsr
arpl
movs
fnstcw
vcmpgtpd
add
out
mov
sbb
aaa
jmp
jne
jne
sub
in
xchg
mov
or
push
dec
and
add
imul
jmp
jmp
adc
pop
jne
js
pop
enter
add
dec
sub
jmp
push
mov
inc
add
add
pop
ret
or
dec
mov
or
adc
cwde
and
loop
sub
mov
in
bound
pop
(bad)
fadd
push
mov
(bad)
loopne
out
push
(bad)
stos
xlat
cld
and
cmps
ror
(bad)
xchg
rol
loop
repnz
or
adc
in
jg
mov
imul
idiv
xchg
pop
jbe
in
test
repnz
sbb
rol
sub
es
mov
and
stc
into
jo
repz
cmps
jl
sub
lods
jg
daa
test
mov
sti
sbb
add
loopne
xchg
sbb
dec
jno
js
sub
mov
add
cli
push
mov
repz
and
cli
leave
jns
jbe
mov
in
addr16
sbb
add
or
in
sahf
cmp
je
sub
inc
jge
xor
cmp
ror
mov
in
push
pop
jo
sbb
push
pop
fwait
ror
pop
mov
or
in
out
scas
pop
(bad)
scas
rol
test
jge
cmp
fcomp
dec
jb
popf
adc
dec
nop
sar
mov
nop
in
xchg
outs
aaa
arpl
clc
(bad)
aaa
push
(bad)
jge
add
ret
mov
into
cmp
loopne
aaa
popa
adc
sub
add
jns
sbb
and
aam
lods
movs
cmps
ret
jns
jg
and
out
push
(bad)
jnp
ss
mov
js
fcmovnb
repnz
or
out
push
cmp
or
add
aaa
and
(bad)
ins
and
jge
dec
(bad)
jp
jno
out
call
js
mov
pop
das
pop
iret
aad
adc
repnz
(bad)
fadd
loopne
loopne
std
out
dec
nop
jnp
jmp
std
out
dec
mov
idiv
(bad)
mov
les
(bad)
jecxz
out
mov
push
push
and
or
cmps
push
mov
stc
sahf
cmp
lock
xchg
pop
jge
xor
hlt
call
mov
pop
cmp
dec
psubw
idiv
imul
lock
pop
jbe
pop
pop
jae
fistp
push
out
add
daa
popa
xchg
sar
outs
stc
(bad)
pop
sahf
hlt
mov
cld
out
mov
cdq
stc
xor
fidiv
(bad)
mov
or
adc
aaa
add
(bad)
sbb
cmps
daa
stc
or
add
push
jns
div
pop
jnp
cmp
pop
jo
les
sbb
addr16
or
jbe
pusha
jae
out
cld
pop
jns
push
jnp
push
and
js
daa
add
arpl
psadbw
es
pop
addr16
fsub
data16
xor
add
sbb
bound
test
cmp
popa
inc
clc
add
rol
xchg
clc
jnp
mov
and
jge
mov
push
addr16
sbb
in
test
call
xor
ja
idiv
push
add
and
and
daa
lock
jnp
mov
inc
jns
fadd
test
dec
sbb
add
sbb
cwde
and
mov
jb
ins
add
add
add
loopne
push
mov
mov
xchg
cwde
mov
mov
sahf
sbb
inc
xchg
lock
jo
rcl
add
inc
xchg
mov
push
mov
or
cmp
call
dec
xor
enter
or
mov
clc
mov
mov
jl
pop
test
jbe
xor
pop
cmp
clc
jp
cmps
jnp
adc
dec
and
inc
jb
or
push
lods
pop
adc
dec
rol
mov
adc
aaa
adc
dec
pop
test
cmp
pop
mov
test
addr16
ja
test
(bad)
pop
ins
cld
call
inc
jo
or
xchg
mov
loopne
sbb
fs
mov
mov
jmp
inc
inc
mov
bound
loop
dec
nop
xchg
xor
jge
mov
xchg
cmp
pop
jae
dec
mov
mov
pop
loopne
inc
nop
pop
adc
outs
xlat
add
xchg
xchg
xor
(bad)
xchg
in
hlt
push
outs
mov
rcr
xchg
xor
xchg
daa
sbb
jns
pop
xchg
pop
pop
xchg
sbb
xchg
shr
add
pop
xchg
cmp
sub
mov
xor
sbb
mov
inc
clc
xchg
pop
jo
(bad)
cmp
inc
dec
js
jno
test
push
imul
cdq
repz
cwde
xchg
(bad)
sub
pop
test
mov
js
add
push
xchg
xor
xchg
jnp
fwait
push
mov
pop
jns
dec
mov
daa
mov
pushf
pushf
mov
fst
aaa
lea
sbb
jns
stos
test
inc
jmp
jnp
mov
mov
pop
add
xor
inc
jmp
mov
mov
imul
xchg
sar
add
add
(bad)
mov
rcr
pop
nop
add
sbb
enter
push
std
pop
test
sahf
push
mov
adc
xchg
xor
cwde
pop
cdq
xchg
push
cdq
lahf
movs
cmps
mov
clc
mov
pop
mov
fidiv
or
mov
(bad)
loop
mov
jae
sub
xchg
fst
mov
jns
pop
call
(bad)
(bad)
popa
or
or
rcl
jns
stc
add
jmp
daa
mov
cwde
cwde
loop
mov
sub
cmp
cmp
leave
sahf
mov
xor
cdq
adc
popf
sub
add
and
rsm
xchg
dec
or
call
mov
add
sahf
std
sub
push
cmps
mov
call
dec
rcl
mov
adc
xchg
sub
pushf
add
stos
ret
cmps
mov
imul
sbb
stc
movs
mov
loop
add
cmp
test
sbb
sahf
retf
cmp
mov
pop
retf
retf
push
fsubr
or
movs
ret
push
sbb
add
xchg
xor
(bad)
cwde
push
cmp
sbb
fstp
fisub
xchg
std
sub
lea
retf
ficom
sub
stos
add
sub
pop
add
fisub
pop
pop
retf
pop
test
mov
mov
stos
std
dec
sahf
mov
scas
loop
xchg
ficom
mov
retf
or
sub
mov
lea
fcomp
vphaddubd
retf
cmp
movs
sbb
cdq
cmp
test
dec
mov
cmp
dec
jp
jmp
fnstcw
sub
sahf
dec
mov
or
cmp
pop
add
lods
daa
fstp
dec
mov
or
cmp
test
popa
mov
sbb
(bad)
sub
jnp
or
or
mov
or
leave
test
mov
lods
sti
mov
pop
xchg
sbb
enter
xor
mov
mov
pop
pop
pop
int3
fwait
mov
mov
mov
mov
push
sbb
mov
mov
enter
fisub
retf
mov
mov
mov
sub
mov
sbb
add
sbb
mov
or
neg
sub
or
lods
xchg
sbb
cdq
test
sbb
pop
mov
jl
pop
sbb
das
test
retf
mov
movs
mov
jnp
sbb
add
xchg
sbb
mov
or
jne
add
sar
stos
mov
retf
mov
lds
mov
xchg
mov
retf
mov
jnp
int
mov
pushf
mov
or
dec
or
adc
ret
mov
dec
mov
jp
adc
mov
sbb
jecxz
ror
fld
call
or
add
jnp
push
les
stos
hlt
cli
movs
jge
ret
movs
mov
sbb
pop
mov
mov
and
pop
dec
sar
or
push
shr
mov
jp
mov
retf
mov
xchg
sbb
(bad)
dec
scas
sub
ret
scas
jl
rol
mov
jo
add
int
pop
int3
sub
mov
mov
retf
mov
push
mov
mov
pop
fmul
push
add
sub
cmp
out
iret
inc
add
add
fdivrp
into
enter
fcmovne
adc
test
add
dec
mov
sti
leave
pop
dec
mov
or
push
mov
mov
jp
leave
mov
lds
push
int
in
mov
ret
int3
ror
int3
dec
mov
pop
iret
mov
mov
rcr
rcr
fmul
retf
stc
movs
cmp
sbb
and
retf
cmps
cld
int
sub
rcl
in
rcr
aam
push
add
add
(bad)
(bad)
mov
(bad)
rol
retf
and
(bad)
pop
or
scas
rcr
pop
(bad)
rol
pop
cmp
ss
xlat
add
pop
int3
mov
pushf
(bad)
jb
pushf
jecxz
mov
lods
mov
fnstsw
retf
lods
shl
sub
hlt
sbb
xor
(bad)
in
ror
fdivr
int3
(bad)
add
pop
xlat
or
in
int
dec
mov
(bad)
lds
shl
(bad)
dec
mov
ins
xlat
push
fstp
push
pop
add
cdq
mov
(bad)
loope
lds
repnz
mov
rol
ins
add
xor
pusha
add
call
inc
std
(bad)
loopne
(bad)
mov
scas
(bad)
xlat
lea
cmp
fdivr
fiadd
sub
xchg
fstp
add
mov
into
cmc
in
into
out
into
mov
(bad)
inc
dec
fistp
fcmovne
in
enter
enter
ins
xlat
fsubr
(bad)
ror
rcl
sbb
push
fstp
fstp
add
cmp
add
(bad)
int
or
ficomp
fisubr
mov
push
fisub
fisubr
shl
mov
in
leave
add
into
jle
loop
jge
push
ins
mov
mov
push
fucom
add
loope
(bad)
loopne
popa
sbb
cmp
add
in
loope
or
inc
out
stos
push
or
loop
ds
dec
fbld
pop
xlat
sub
dec
(bad)
loope
sub
mov
pop
loopne
fldcw
fist
retf
outs
dec
out
sub
and
fsubp
sub
xchg
int
sbb
addr16
out
out
fsubp
add
loopne
sub
jae
xlat
nop
pop
loop
outs
in
pop
out
pop
(bad)
jmp
ins
loopne
push
fsubrp
sub
movs
in
stos
sbb
rcl
in
into
ret
mov
jmp
pop
fisubr
lock
add
jmp
(bad)
(bad)
dec
sahf
fs
les
fstp
push
in
aaa
out
(bad)
scas
jle
push
dec
in
mov
in
mov
fst
loope
std
in
xor
int3
dec
sub
js
jmp
sub
call
push
jmp
outs
out
js
fidiv
ffreep
jle
lds
cld
out
out
lods
(bad)
in
lods
push
jmp
int
mov
jmp
into
call
push
jmp
fucomp
push
(bad)
ror
frstor
pop
xlat
xor
jmp
push
cs
push
aam
inc
rol
fst
add
adc
xor
out
fnstsw
pop
pop
dec
inc
repz
icebp
loop
call
int
(bad)
into
stos
(bad)
into
loopne
pop
xlat
clc
pop
repnz
into
add
and
sbb
pop
cmp
inc
dec
aam
ds
pop
loopne
cmp
out
jle
push
std
lock
cmc
outs
dec
cmc
sbb
fdivr
repnz
icebp
js
repz
dec
psllq
test
loope
neg
shr
fisub
(bad)
in
mov
repz
pop
jg
adc
cmc
inc
dec
test
cmp
repz
(bad)
fmulp
add
out
dec
out
mov
div
clc
fmul
icebp
ja
cmc
enter
push
jmp
div
shl
xchg
and
lods
psadbw
mul
add
dec
scas
not
test
dec
aas
cmc
mov
cli
push
aas
in
das
pop
sti
stos
out
sti
jnp
xlat
cmp
neg
pop
cli
jecxz
sti
push
out
repnz
fs
hlt
int
cld
add
fsubr
cmps
pmaxsw
mov
into
das
sti
or
add
add
sub
xchg
dec
pop
xchg
pop
add
mov
xchg
xchg
sbb
cwde
lea
pop
stos
sahf
cmps
xchg
mov
popf
mov
stos
mov
mov
mov
fwait
mov
xchg
push
lds
mov
or
mov
dec
test
mov
out
popf
mov
mov
jmp
xchg
shl
mov
mov
xchg
mov
xchg
and
xor
(bad)
mov
movs
push
inc
in
in
push
mov
inc
in
xchg
mov
sti
mov
sbb
mov
sub
mov
es
xchg
jmp
xchg
ret
or
dec
ja
sahf
lds
mov
sbb
inc
dec
dec
sub
pusha
stos
inc
movs
push
test
test
push
and
popa
jne
mov
inc
mov
jbe
cmp
jecxz
xchg
and
mov
test
push
push
faddp
mov
lods
push
repz
mov
out
ds
js
loopne
adc
jg
pop
or
es
xchg
xchg
into
(bad)
in
mov
ds
dec
test
sbb
push
(bad)
cmp
ret
imul
(bad)
jmp
and
or
js
gs
mov
jb
gs
into
mov
out
lock
call
cld
cld
jns
push
int
lock
xlat
mov
dec
add
sbb
or
jge
fsub
adc
adc
mov
ss
mov
es
daa
fist
jge
push
ja
mov
jns
rsqrtps
lods
and
sub
add
movs
and
fs
add
adc
add
sbb
adc
cmp
or
push
cdq
dec
fld
xchg
sub
or
and
add
es
and
xchg
cdq
pusha
test
test
mov
fldenv
xchg
jbe
pop
add
imul
arpl
dec
loope
jns
inc
inc
and
add
jmp
ja
cmp
pusha
inc
add
sub
mov
or
add
add
adc
pop
pcmpeqb
rcl
sub
sbb
lods
add
stos
stos
test
stos
mov
ret
out
ret
cmps
mov
aam
jae
jle
fwait
push
into
mov
test
add
aam
adc
xchg
dec
ins
mov
scas
dec
sar
adc
nop
aad
jp
inc
pusha
inc
pop
imul
lods
mov
add
aad
cmps
ret
sar
xchg
add
sub
mov
mov
cmp
mov
lods
lods
sub
pop
push
fst
sti
add
jmp
shl
outs
(bad)
add
retf
into
pop
or
lock
lock
retf
adc
fsubr
aaa
cmp
pop
dec
ror
hlt
or
(bad)
sub
lds
int
add
loop
rol
ins
(bad)
ror
std
xor
arpl
dec
xor
push
lods
cmps
fdiv
loop
or
add
mov
imul
cmp
fwait
out
cmp
push
js
rol
push
pop
mov
ss
ret
das
or
in
not
jns
icebp
adc
jmp
mov
push
popa
pop
into
mov
cli
jmp
adc
stos
fldenv
push
ret
push
add
dec
push
loopne
fmul
and
mov
into
rep
cmp
mov
ret
dec
or
cmp
inc
fsubp
xchg
sub
sbb
sahf
mov
cmp
jmp
cmp
cmp
pop
adc
add
or
add
cwde
aaa
add
das
js
mov
cmp
jo
sub
push
jo
inc
fst
and
xor
shr
mov
mov
mov
loopne
test
xchg
idiv
test
pop
pop
idiv
cmp
pop
scas
cmp
popa
std
jo
mov
sbb
ret
push
dec
mov
inc
mov
jns
aam
call
push
adc
adc
ror
mov
(bad)
mov
in
sbb
cmps
inc
and
xchg
jge
mov
inc
cmp
mov
shl
or
cld
pop
sbb
dec
inc
sbb
and
adc
add
ss
adc
test
mov
popa
or
adc
cmp
and
jns
push
push
xor
inc
(bad)
(bad)
push
pop
imul
cld
in
pop
stc
leave
test
int3
dec
ss
ror
arpl
xchg
call
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
cmp
rcl
lea
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
or
stos
add
mov
jmp
mov
xor
adc
add
retf
test
pop
adc
xlat
rol
jbe
imul
xchg
scas
cmp
lods
dec
and
(bad)
mov
nop
stos
push
xchg
rcl
jne
sub
jmp
cli
jp
shl
sub
or
pop
mov
aad
push
add
scas
mov
in
arpl
sti
fcmove
sbb
mov
movs
sub
in
pop
mov
pop
scas
pusha
jge
pop
mov
xor
pop
xchg
jb
mov
scas
or
sub
pop
and
mov
(bad)
rcl
rcl
fnstcw
fsubrp
mov
mov
fnstcw
mov
out
fdivrp
stos
ja
push
cs
jl
stos
pop
scas
loop
ret
jo
leave
sti
pusha
lds
shr
loop
out
mov
inc
cld
xlat
repnz
mov
pop
or
rcl
xor
jp
mov
outs
scas
cmp
or
js
adc
add
ret
mov
dec
js
pusha
xor
sbb
sbb
xchg
icebp
mov
or
adc
add
push
add
jmp
jno
pop
sbb
xchg
mov
dec
in
mov
mov
outs
std
ins
pop
lds
ror
ins
sub
call
or
mov
inc
aaa
mov
mov
sbb
mov
pusha
mov
minps
pop
mov
gs
retf
add
lods
repnz
pop
in
mov
lock
and
gs
xlat
pop
(bad)
adc
fmul
mov
icebp
jne
cmp
mov
mov
iret
cmp
pop
loop
(bad)
adc
icebp
cmp
push
and
sar
ins
push
sbb
xor
xchg
mov
call
ja
mov
fisttp
add
add
pop
loope
repz
mov
xor
adc
hlt
jb
jge
es
ss
jle
ja
ins
xlat
shl
ret
lods
mov
cmp
sub
add
sbb
push
ins
test
mov
push
and
in
jmp
les
stos
test
sbb
mov
jmp
hlt
nop
mov
call
cmp
mov
mov
or
and
ins
mov
xor
in
outs
or
fist
mov
sbb
mov
je
sub
xchg
jl
sbb
or
iret
ja
fisttp
pop
jnp
xchg
cmpxchg
adc
or
sar
push
mul
ja
(bad)
fmul
xor
inc
call
adc
jmp
push
pop
adc
add
xor
loope
push
sub
pop
mov
fist
jl
xchg
pushf
jns
fistp
test
dec
pop
call
lock
xchg
imul
mov
jle
xor
or
cmp
popa
cmc
jp
push
ins
add
xor
jne
push
push
ins
jnp
jb
in
add
cmp
add
sbb
rol
(bad)
jge
neg
ja
inc
ins
and
(bad)
push
xor
ds
jno
nop
pop
(bad)
cmps
jp
addr16
mov
cmp
outs
or
push
aam
jge
pop
pop
pop
sbb
test
sub
push
push
sub
les
dec
xchg
xchg
sbb
push
add
jo
test
outs
cld
div
cmps
add
jne
push
pop
lock
(bad)
xchg
data16
outs
retf
xlat
jne
cwde
arpl
xchg
pop
(bad)
jae
push
mov
add
popa
cmp
jo
mov
mov
jge
mov
popa
aad
cdq
out
or
push
es
adc
push
and
(bad)
jne
(bad)
jno
call
rol
pop
push
and
inc
xchg
cmp
sbb
fdiv
(bad)
mov
pop
pop
cmps
daa
jl
or
jae
cmc
outs
adc
pushf
xchg
push
cwde
adc
or
arpl
push
mov
jo
add
jl
push
fs
adc
jl
push
sub
push
js
xor
outs
cmp
je
(bad)
xchg
xchg
push
mov
mov
xor
mul
out
ins
add
and
mov
jp
xor
inc
(bad)
push
jge
pop
pushf
inc
pop
dec
sub
js
push
fdivr
inc
mov
jle
call
fcomi
jl
xchg
pushf
(bad)
push
pop
ins
mov
xchg
xor
jmp
xchg
sbb
outs
sahf
mov
and
imul
je
jl
xchg
aaa
add
jl
ins
xchg
mov
(bad)
(bad)
xchg
pop
jne
out
(bad)
xchg
mov
jge
mov
aaa
mov
xchg
jns
test
out
pop
sahf
pop
test
addr16
jnp
(bad)
add
int
pop
xchg
xchg
pop
and
imul
bound
nop
hlt
js
mov
mov
sub
ins
mov
jns
xchg
xchg
pop
adc
in
fdivr
fld
test
mov
mov
mov
or
js
aaa
nop
dec
lock
push
cmps
jb
arpl
jge
in
inc
nop
mov
jp
clc
jae
xchg
outs
mov
pusha
ror
push
gs
(bad)
call
pop
or
pushf
or
pop
(bad)
movs
cdq
jne
add
jns
pop
xchg
mov
leave
jb
mov
jecxz
jg
fnstenv
es
nop
push
pop
arpl
fisubr
cmp
(bad)
push
mov
test
movs
add
call
imul
inc
cmp
pop
or
sub
repz
iret
fmul
es
mov
sub
test
xchg
pop
add
or
test
xchg
outs
fcom
add
outs
xchg
ins
jae
imul
add
(bad)
push
mov
cmps
xchg
push
pop
data16
clc
stc
push
pusha
mov
inc
sub
mov
add
movs
inc
pop
imul
add
and
cmp
jp
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
push
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
sbb
xchg
shr
jae
add
jo
add
add
cli
popf
sub
inc
mov
mov
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
mov
push
rol
and
int3
or
inc
mov
adc
test
es
mov
dec
mov
sti
mov
fild
test
mov
sub
sti
mov
cmp
mov
add
adc
loopne
mov
shr
cli
jnp
push
ins
add
mov
pushf
mov
fwait
ja
sbb
stos
mov
adc
push
add
jl
daa
sbb
xor
pop
ret
ret
add
add
ret
ret
add
jo
cmp
sbb
or
ret
aas
ins
add
push
cmp
ret
mov
retf
ret
les
or
dec
cmp
stos
les
add
and
adc
(bad)
xor
out
push
mov
dec
(bad)
imul
push
ret
xor
add
mov
cld
(bad)
jp
add
mov
out
js
and
sub
sub
pop
mov
mov
mov
enter
pop
pusha
enter
xchg
fmul
cmp
inc
les
mov
cld
retf
enter
inc
sub
inc
lock
dec
xor
mov
add
stos
retf
mov
cld
(bad)
mov
enter
mov
add
cld
leave
pop
ror
or
dec
enter
mov
mov
xchg
add
add
pop
pusha
add
adc
fmul
add
cmp
in
lods
int
int3
int
inc
into
out
stos
fnstcw
or
out
or
fistp
(bad)
sbb
cli
fcmove
loopne
iret
add
add
int
mov
mov
rol
rol
leave
mov
mov
add
xor
adc
sbb
or
sahf
mov
mov
rcl
shr
int
int3
mov
add
into
push
mov
add
add
int
ins
shl
lods
aam
jl
dec
sbb
jmp
rol
loopne
mov
add
sub
sub
int
ins
ror
fiadd
pop
(bad)
int
ins
mov
or
jmp
ins
mov
imul
cmp
int
cld
(bad)
add
(bad)
rcl
mov
popa
(bad)
xlat
inc
pop
int
int
fstp
lods
int
cld
aad
ins
xlat
call
xlat
test
neg
lods
int3
pushf
int
jb
iret
add
sbb
int3
xor
pop
push
aad
in
(bad)
xchg
or
cmp
test
xchg
sub
mov
iret
jp
iret
xchg
rol
aad
jmp
fcomi
cld
xlat
push
std
int
int
mov
into
sbb
rol
or
lea
or
std
fisttp
sbb
sbb
(bad)
jmp
retf
iret
aam
rcl
inc
(bad)
dec
fistp
aam
sub
or
leave
push
sub
inc
or
mov
fdiv
mov
(bad)
aad
dec
rol
jle
retf
in
fmul
pop
xlat
sar
fbstp
(bad)
ss
shr
ins
fdivr
add
(bad)
std
(bad)
loopne
int3
add
mov
ins
int
popf
dec
fisub
fucomip
pop
loope
(bad)
push
cs
push
in
mov
push
rcl
out
in
jecxz
inc
enter
fldcw
push
(bad)
in
jle
out
mov
mov
in
(bad)
loopne
ins
fstp
fisttp
loope
jle
fwait
int
ficomp
mov
int
retf
out
fmulp
dec
pop
out
cmp
inc
or
fidivr
pop
fimul
sar
ret
into
cmp
adc
int
cld
rol
add
fmul
nop
fist
rcl
xor
dec
in
into
cmp
jmp
js
out
cld
in
fsubrp
jecxz
in
jge
out
fld
mov
out
popf
aam
fsubp
lods
ficomp
fadd
cs
leave
out
fcomp
aam
jge
adc
in
mov
sub
jl
into
pushf
jle
jmp
in
scas
fidivr
loope
sub
jge
aad
mov
mov
add
iret
lock
in
ds
jnp
jmp
mov
(bad)
mov
aad
lock
sub
dec
outs
jmp
or
push
inc
stos
pop
adc
push
cs
(bad)
push
loopne
mov
mov
add
(bad)
rcr
in
out
fsubr
mov
out
into
into
fscale
jmp
ds
outs
out
mov
aam
out
jmp
mov
nop
jle
ss
retf
dec
in
fld
stos
outs
jmp
cmp
(bad)
fstp
fld
push
mov
(bad)
lock
cmc
inc
mov
ja
in
icebp
dec
(bad)
icebp
cmp
loopne
(bad)
call
scas
hlt
inc
push
repnz
dec
sub
(bad)
sbb
je
repz
or
in
iret
out
dec
pop
call
(bad)
out
sahf
push
repnz
mov
mov
add
mov
jne
(bad)
sub
repnz
clc
ja
stc
xchg
out
add
fmul
outs
add
push
icebp
fstp
rep
pop
repnz
lahf
fcom
lock
pop
jmp
ins
in
cmp
xchg
dec
fistp
neg
repz
stc
ins
das
sti
push
out
into
push
(bad)
cld
mov
(bad)
(bad)
clc
je
idiv
into
test
iret
popf
pop
sti
mov
out
les
test
xor
loopne
iret
int
(bad)
rol
sti
out
scas
repnz
xlat
neg
ret
fs
jae
push
enter
mov
adc
push
push
bound
cli
jo
pusha
rcl
cwde
sub
imul
jmp
mov
retf
sbb
cld
stos
leave
ret
call
(bad)
call
mov
sub
pop
fdivr
fldcw
retf
or
sahf
pushf
jnp
lods
lea
mov
mov
mov
ins
push
dec
sbb
pop
pop
xchg
mov
cmp
cs
fs
inc
call
jmp
mov
imul
add
and
pop
enter
mov
xchg
bound
cdq
outs
xchg
sub
test
(bad)
dec
adc
fisttp
xor
pop
arpl
mov
mov
sbb
retf
push
or
mov
pop
cmps
push
ror
sbb
lock
fimul
jbe
call
inc
aam
scas
scas
(bad)
cs
sbb
xchg
movs
lods
push
mov
sub
dec
in
dec
fidivr
xchg
popf
xor
sbb
jp
shr
retf
inc
or
pop
test
push
mov
movs
fidiv
adc
ins
mov
aam
push
stc
jbe
push
sub
jae
ins
cli
mov
js
in
out
xor
xor
test
aaa
sbb
mov
aas
retf
repnz
inc
(bad)
sbb
sbb
neg
aam
inc
retf
xor
fbstp
pushf
aad
pop
xchg
data16
arpl
mov
xchg
xor
test
je
loope
iret
mov
and
jecxz
pop
and
adc
arpl
in
pop
sbb
and
rol
cmp
sbb
adc
sar
jne
jne
pop
popa
fisubr
inc
inc
and
push
enter
sub
mov
data16
(bad)
fnstenv
in
push
jp
push
push
pop
jp
fcom
ja
stos
cmps
daa
dec
aaa
inc
(bad)
and
loop
loop
in
or
inc
push
out
push
sbb
outs
xchg
mov
dec
popf
lea
test
sbb
in
mov
movs
sbb
cwde
cmp
cmp
pop
mov
imul
cli
dec
lahf
stos
jmp
mov
fcomp
shr
stc
cmc
leave
daa
adc
sub
inc
cmps
mov
jne
js
pop
cmp
jp
xchg
imul
dec
push
and
and
adc
outs
mov
loope
enter
sub
aad
add
xchg
mov
sub
push
sub
in
push
inc
pusha
outs
clc
xchg
sbb
xlat
or
outs
dec
loopne
sbb
pop
mov
daa
les
scas
inc
mov
cmp
inc
fwait
xchg
ret
mov
add
jne
(bad)
fimul
int3
xor
call
enter
popf
jmp
mov
xchg
jno
inc
(bad)
mov
fwait
jb
inc
addr16
sub
mov
inc
mov
fst
retf
adc
popa
scas
sub
cdq
sub
cmp
fidiv
sub
mov
pushf
pushf
retf
mov
mov
dec
(bad)
lods
lods
fnsave
add
into
and
cli
add
xor
cmps
(bad)
int3
push
ins
mov
cmp
or
push
repz
fwait
daa
pushf
mov
adc
in
cmc
ficom
jmp
iret
dec
and
mov
add
fisub
fcomp
(bad)
aas
push
dec
mov
fwait
gs
out
into
jge
mov
mov
lods
ins
lock
into
cmp
hlt
out
push
out
or
mov
cmc
sbb
mov
fnsave
jnp
pop
fbstp
xor
pop
inc
push
push
mov
(bad)
outs
push
call
jg
push
pop
and
cmps
cmp
or
sub
inc
(bad)
in
jbe
loop
add
test
sbb
vmwrite
xchg
repz
not
mov
stos
pop
repz
push
sar
fiadd
in
push
mov
cmp
pop
mov
mov
test
jge
mov
mov
outs
popa
lods
fucomip
shl
adc
(bad)
sbb
(bad)
fidiv
mov
scas
or
add
pop
mov
inc
mov
mov
push
pop
aad
out
inc
pop
push
mov
dec
inc
inc
outs
pop
arpl
loop
fcomi
aaa
stc
in
scas
sub
aaa
dec
inc
mov
loop
mov
adc
add
sbb
add
adc
lock
xor
sbb
jo
(bad)
pop
lods
das
movs
dec
cwde
jg
in
std
xchg
mov
and
js
xor
and
cmp
shr
sub
add
out
inc
arpl
pop
gs
inc
mov
adc
xor
(bad)
fcom
push
inc
jne
push
mov
pop
enter
mov
pop
rdpmc
stc
retf
mov
sar
and
aad
adc
test
int
xchg
icebp
xchg
ins
add
repnz
enter
pushf
retf
ds
nop
pushf
ds
lahf
and
ret
out
and
xor
xchg
rol
jns
ds
mov
hlt
pushf
dec
sub
dec
pop
mov
test
movs
into
dec
inc
add
mov
lahf
in
movs
jmp
mov
stos
(bad)
cmc
jle
fsubr
sbb
sub
sub
or
(bad)
mov
adc
jmp
and
fsub
inc
(bad)
xlat
inc
fwait
push
stos
xchg
fsub
xor
mov
lods
xchg
shl
scas
jge
sub
stos
cmp
test
cmp
stc
test
div
sahf
sub
add
push
aam
daa
in
fidivr
push
scas
stc
lods
(bad)
cmp
mov
mov
aad
wrmsr
arpl
movs
fnstcw
vcmpgtpd
add
out
mov
sbb
aaa
jmp
jne
jne
sub
in
xchg
mov
or
push
dec
and
add
imul
jmp
jmp
adc
pop
jne
js
pop
enter
add
dec
sub
jmp
push
mov
inc
add
add
pop
ret
or
dec
mov
or
adc
cwde
and
loop
sub
mov
in
bound
pop
(bad)
fadd
push
mov
(bad)
loopne
out
push
(bad)
stos
xlat
cld
and
cmps
ror
(bad)
xchg
rol
loop
repnz
or
adc
in
jg
mov
imul
idiv
xchg
pop
jbe
in
test
repnz
sbb
rol
sub
es
mov
and
stc
into
jo
repz
cmps
jl
sub
lods
jg
daa
test
mov
sti
sbb
add
loopne
xchg
sbb
dec
jno
js
sub
mov
add
cli
push
mov
repz
and
cli
leave
jns
jbe
mov
in
addr16
sbb
add
or
in
sahf
cmp
je
sub
inc
jge
xor
cmp
ror
mov
in
push
pop
jo
sbb
push
pop
fwait
ror
pop
mov
or
in
out
scas
pop
(bad)
scas
rol
test
jge
cmp
fcomp
dec
jb
popf
adc
dec
nop
sar
mov
nop
in
xchg
outs
aaa
arpl
clc
(bad)
aaa
push
(bad)
jge
add
ret
mov
into
cmp
loopne
aaa
popa
adc
sub
add
jns
sbb
and
aam
lods
movs
cmps
ret
jns
jg
and
out
push
(bad)
jnp
ss
mov
js
fcmovnb
repnz
or
out
push
cmp
or
add
aaa
and
(bad)
ins
and
jge
dec
(bad)
jp
jno
out
call
js
mov
pop
das
pop
iret
aad
adc
repnz
(bad)
fadd
loopne
loopne
std
out
dec
nop
jnp
jmp
std
out
dec
mov
idiv
(bad)
mov
les
(bad)
jecxz
out
mov
push
push
and
or
cmps
push
mov
stc
sahf
cmp
lock
xchg
pop
jge
xor
hlt
call
mov
pop
cmp
dec
psubw
idiv
imul
lock
pop
jbe
pop
pop
jae
fistp
push
out
add
daa
popa
xchg
sar
outs
stc
(bad)
pop
sahf
hlt
mov
cld
out
mov
cdq
stc
xor
fidiv
ffree
cmp
sbb
loope
adc
(bad)
in
aaa
cmp
inc
ror
jbe
div
push
jns
cwde
ja
mov
fadd
add
js
ret
jge
pop
jle
mov
sub
ss
ja
xlat
jg
pop
jle
mov
push
pop
jle
div
adc
mov
pusha
das
mul
out
push
out
sbb
dec
and
add
mov
sbb
adc
test
loopne
sub
jl
push
cmp
fdiv
ss
push
push
jle
enter
js
pop
jae
push
test
jp
push
ins
inc
mov
rol
dec
push
cmp
xchg
push
test
enter
jae
push
ins
addr16
mov
pusha
pop
mov
xor
cmp
test
popa
inc
test
mov
js
xlat
test
xchg
ins
add
add
add
lock
mov
mov
ja
fmul
clc
jno
sub
push
xchg
lock
jo
rcl
add
push
xchg
mov
xchg
mov
or
cmp
call
dec
inc
add
pusha
nop
or
pop
mov
mov
(bad)
(bad)
jge
add
push
jl
push
or
adc
cmp
clc
jp
cmps
jnp
and
dec
pusha
mov
jb
or
push
mov
sbb
dec
rcl
js
add
js
xchg
idiv
or
push
jb
(bad)
sti
inc
mov
test
addr16
ja
ja
rcr
xlat
push
lea
xchg
jb
mov
js
out
add
add
rol
fadd
nop
lea
fs
add
clc
and
sbb
and
mov
add
jge
mov
xchg
cmp
jp
pop
jae
mov
js
loopne
inc
nop
pop
adc
outs
xlat
add
xlat
xchg
xor
add
push
outs
mov
xlat
sbb
fst
mov
add
test
xchg
sbb
add
jmp
(bad)
xchg
sub
(bad)
or
pop
mov
or
xor
add
test
xchg
pop
jo
xchg
imul
jno
fcom
pop
jnp
ja
cs
mov
call
imul
pop
nop
xchg
xor
xchg
jg
fwait
pop
clc
(bad)
lea
mov
js
lock
sub
jg
pushf
mov
add
test
xlat
push
ss
fwait
mov
(bad)
nop
mov
dec
stc
xchg
xchg
push
cwde
sub
pusha
xchg
mov
xchg
dec
fstp
sub
mov
and
loop
ja
dec
xchg
sub
cmps
dec
lahf
retf
repnz
lahf
and
push
mov
call
dec
sbb
loopne
push
dec
xchg
xchg
xchg
pop
imul
lea
sbb
cwde
mov
not
pop
sahf
mov
lahf
push
test
fsubr
sbb
xchg
retf
dec
fnstcw
cmp
xchg
(bad)
icebp
push
gs
call
inc
adc
dec
jns
pop
mov
test
xchg
cmp
imul
mov
pop
popf
sub
out
add
pusha
stc
sahf
mov
xchg
xor
cdq
imul
add
jmp
sub
movs
cwde
sub
mov
xchg
cmp
sbb
cmp
cwde
xchg
mov
cmps
lea
push
fst
retf
pop
pop
(bad)
loopne
mov
sbb
pop
pop
lods
push
mov
xchg
jl
test
fstp
pop
mov
lock
fs
mov
jp
lods
mov
add
popf
cmp
iret
imul
mov
mov
xchg
push
add
lods
cwde
fiadd
call
imul
add
mov
imul
lods
fwait
push
and
xchg
outs
or
mov
repz
jbe
sbb
jo
(bad)
jmp
mov
push
and
sbb
movs
out
dec
xchg
fldcw
jp
arpl
push
xor
dec
test
cmp
jp
fild
mov
mov
lods
pop
mov
fsub
or
push
into
mov
cmp
movs
sbb
cdq
sbb
mov
push
mov
or
pop
lods
push
mov
push
stos
bound
or
pushf
mov
cwde
sbb
dec
mov
mov
jns
sahf
sti
imul
xchg
out
stos
test
cli
lods
inc
imul
xchg
or
or
test
stc
xchg
cwde
stc
test
sar
jmp
xchg
mov
sub
adc
jmp
int
xchg
bswap
mov
aad
sub
cmps
pop
imul
stos
ror
mov
fwait
stos
ret
adc
cmps
loop
mov
or
leave
pop
mov
sti
mov
stc
xchg
pushf
fwait
mov
adc
sub
cdq
sar
sbb
mov
pop
pop
xchg
mov
mov
ss
sar
nop
cmp
pop
xchg
mov
test
retf
jmp
ds
pop
(bad)
mov
pop
pop
mov
mov
fucomp
ret
mov
add
xchg
sbb
in
mov
mov
(bad)
jne
add
push
mov
or
jmp
ret
test
ins
mov
sti
stos
adc
jbe
mov
jmp
in
xchg
lods
fcmovb
loop
mov
lock
(bad)
jmp
inc
retf
mov
in
scas
fwait
stos
les
xchg
jnp
add
imul
in
mov
mov
enter
dec
xchg
mov
fiadd
inc
add
lahf
ins
stos
mov
pop
scas
outs
mov
mov
stc
stos
aas
sbb
test
call
retf
mov
aas
add
xor
enter
outs
mov
mov
cmp
xor
sbb
add
cli
xchg
xor
mov
add
inc
add
sbb
imul
mov
mov
mov
sub
ins
mov
fwait
mov
lods
(bad)
mov
(bad)
xchg
sub
retf
int
lods
into
stc
or
and
cdq
dec
mov
int3
lds
addr16
sbb
rcl
enter
adc
rcr
enter
xor
sbb
add
add
lods
int
int3
int3
ds
sbb
ror
sbb
cli
jl
jp
stos
sub
mov
lods
les
enter
(bad)
mov
jmp
pop
cmp
xchg
cdq
mov
add
xor
into
cmp
enter
lock
into
out
retf
jl
dec
and
std
xchg
sub
leave
icebp
stc
aad
jnp
push
(bad)
ror
pop
mov
cld
(bad)
aam
into
mov
shl
mov
xor
mov
shl
xlat
ret
(bad)
stos
(bad)
push
iret
jl
(bad)
add
loop
rol
mov
cmp
loopne
leave
js
mov
push
ss
inc
popf
aam
cmp
mov
mov
cmc
stos
(bad)
arpl
jnp
leave
mov
fidiv
(bad)
stos
(bad)
xchg
mov
xchg
cld
fidivr
(bad)
dec
cmp
loope
retf
xlat
add
mov
or
gs
push
fstp
push
jge
ss
inc
add
mov
(bad)
mov
mov
addr16
call
cmp
retf
in
pop
ror
imul
pop
aad
mov
pop
pop
int
or
jbe
scas
neg
push
jge
scas
int
lods
pop
sar
(bad)
jae
fnstenv
fstp
ds
ret
int3
pop
xchg
cli
cld
(bad)
imul
fidivr
popf
fidivr
int3
or
cmp
jp
xlat
divps
and
jmp
mov
and
xor
cmp
mov
data16
cmps
cmp
mov
in
outs
shl
sbb
out
mov
cmp
loop
push
ffreep
cmp
cmps
dec
loop
std
shl
sub
jbe
fnstcw
into
add
out
fstp
add
fcomp
mov
ins
fdiv
(bad)
lods
int3
imul
cs
dec
in
fsubp
pop
fsubp
jnp
fdivr
fidiv
(bad)
mov
jg
loop
sahf
jecxz
cmp
lea
fmul
jecxz
int
dec
jle
mov
loop
sahf
in
int
outs
in
lods
out
push
ffreep
sub
out
popf
ficomp
outs
call
add
push
mov
std
loope
cs
jge
fs
in
enter
outs
in
fmulp
pop
outs
xlat
adc
es
ds
out
mov
xchg
scas
jmp
scas
xlat
or
retf
jmp
pop
add
out
pop
jmp
xchg
mov
jge
call
mov
idiv
xchg
push
jmp
ds
mov
scas
jmp
stos
(bad)
in
mov
push
xlat
cmps
std
fstp
jge
test
fidivr
jmp
or
add
add
or
rol
in
sub
rep
mov
inc
sbb
jle
add
repz
repnz
repz
push
in
sub
mov
mov
out
mov
cmp
aad
in
loop
sahf
jmp
mov
push
(bad)
repnz
cs
push
outs
in
push
jmp
aas
out
adc
xor
out
cmp
cmc
xor
cmc
jb
repnz
cmp
push
aas
retf
shr
xchg
cmp
mov
(bad)
pop
jg
fsubr
inc
dec
in
push
xlat
test
jmp
(bad)
(bad)
mov
repz
out
dec
(bad)
idiv
jmp
dec
(bad)
sar
hlt
xchg
and
cmp
cli
cmps
fcomip
call
sbb
in
mov
das
sti
lods
scas
sti
mov
sti
fwait
outs
imul
sti
retf
retf
test
cli
loopne
mul
stc
fwait
jge
mov
idiv
cld
stos
das
cld
jp
fiadd
sti
aam
not
idiv
cmc
xor
out
(bad)
xchg
pop
aas
out
sub
loope
mov
loope
repz
std
xlat
mov
xor
(bad)
or
sub
add
add
xchg
mov
dec
pop
cdq
pop
add
mov
test
mov
(bad)
pop
xchg
xchg
mov
stos
mov
movs
and
xchg
mov
xchg
mov
stos
mov
adc
xchg
sahf
mov
cmps
rcr
fisttp
(bad)
lock
call
xchg
shl
stos
les
pop
xor
clc
dec
push
cmp
into
aad
add
mov
rcl
stos
mov
or
sub
mov
ror
loop
imul
mov
mov
retf
and
push
hlt
sbb
xor
sbb
lahf
and
loop
popa
ins
push
retf
nop
inc
sub
lahf
mov
popf
jo
jmp
ror
pop
mov
inc
xchg
add
xchg
push
in
into
xchg
movs
scas
xchg
and
(bad)
pop
aad
xlat
jne
(bad)
cwde
(bad)
loope
daa
fsubr
ret
in
pop
pop
cdq
push
push
jmp
mov
mov
stos
push
fidivr
ret
mov
mov
dec
das
cmp
mov
push
xchg
cmc
dec
cmp
fcomp
xor
(bad)
leave
shl
xchg
mov
lds
pop
into
lods
pop
add
mov
(bad)
js
jns
mov
addr16
fisub
in
out
mov
sub
adc
scas
xor
dec
leave
inc
or
test
dec
inc
into
mov
gs
dec
cmc
or
pop
fs
xor
pop
fild
lea
push
push
jg
enter
cld
xor
mov
mov
fild
mov
cdq
test
popf
pop
(bad)
(bad)
xchg
jno
repnz
and
push
or
data16
in
sub
pop
mov
mov
mov
shr
stc
gs
push
push
inc
pop
dec
cmps
out
mov
add
cmps
call
popa
loope
ins
loop
or
pushf
pop
jge
daa
adc
test
or
dec
ror
icebp
pop
sub
outs
add
out
imul
dec
ins
mov
add
adc
pop
pcmpeqb
rcl
sub
stos
mov
sbb
lods
add
stos
stos
mov
stos
mov
ret
out
ret
cmps
mov
cmp
push
adc
mov
test
add
aam
adc
xchg
dec
ins
mov
scas
dec
sar
pop
scas
lds
cmp
jb
push
mov
les
scas
mov
mov
add
loop
daa
(bad)
inc
push
sub
lahf
xchg
data16
mov
(bad)
cli
or
fsubr
push
mov
call
outs
stos
retf
jbe
lock
mov
push
pop
aaa
adc
test
inc
outs
xor
test
adc
ret
mov
in
(bad)
iret
inc
xor
inc
inc
sub
mov
stos
movs
mov
jne
or
lods
enter
daa
or
dec
shr
sbb
jmp
sub
mov
or
and
popa
repnz
xchg
dec
call
mov
jp
xor
fimul
mov
hlt
(bad)
fdivr
dec
mov
inc
dec
mov
mov
dec
cs
adc
popf
call
test
nop
inc
push
mov
cli
push
adc
cdq
xor
in
add
pop
jne
cs
leave
cli
out
enter
repnz
inc
jg
or
aaa
das
jge
dec
pushf
mov
pushf
jns
or
enter
lods
cli
call
lods
std
cld
fild
sbb
dec
mov
mov
or
cmp
jmp
shr
loop
out
jl
jecxz
jmp
adc
fcomp
or
in
add
add
push
rol
iret
test
ss
pop
(bad)
push
sbb
adc
jae
add
js
sbb
loope
je
inc
inc
js
push
int3
and
pop
cmp
nop
add
add
pop
inc
hlt
or
shr
mov
xlat
mov
inc
pop
(bad)
out
jb
mov
push
add
push
ins
mov
mov
push
icebp
mov
test
(bad)
xchg
mov
call
nop
mov
mov
stc
add
imul
out
xchg
inc
cmp
xchg
jg
enter
(bad)
data16
and
stc
ret
cmp
arpl
dec
pop
mov
cld
bound
push
leave
retf
mov
scas
(bad)
js
pop
out
xor
imul
adc
xor
mov
ror
data16
mov
xor
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
sub
mov
push
xor
xlat
xchg
add
adc
add
enter
xor
fadd
jmp
jmp
mov
aad
popa
popa
or
inc
cmp
pop
jne
add
(bad)
or
mov
pusha
daa
lock
int3
xchg
(bad)
movs
xchg
gs
in
push
rcr
mov
mov
pop
ret
mov
lds
and
pop
iret
sbb
mov
lods
lods
dec
jmp
xchg
or
sub
pop
idiv
push
jmp
in
dec
jbe
ficomp
test
push
aaa
mov
mov
ja
sub
pop
mov
inc
nop
in
js
lock
push
(bad)
mov
pop
dec
fsubrp
mov
scas
jb
retf
pop
jmp
je
div
fdivrp
stos
ja
push
ss
jl
fwait
pop
mov
xchg
ret
jo
leave
sti
loopne
jb
shr
loop
out
mov
inc
sbb
repnz
mov
pop
or
rcl
xor
jp
mov
outs
scas
cmp
or
js
adc
add
retf
mov
dec
js
arpl
push
in
mov
mov
xchg
icebp
mov
or
adc
add
push
add
jmp
jno
pop
sbb
mov
push
adc
ret
fld
ffreep
ror
jge
nop
add
xchg
std
mov
inc
aaa
shl
bound
mov
minps
pop
mov
gs
retf
add
lods
repnz
pop
in
mov
lock
and
gs
xlat
pop
(bad)
adc
fmul
mov
mov
cmp
mov
mov
retf
jo
mov
jns
scas
inc
xor
call
test
mov
add
adc
add
iret
fcom
push
fidiv
adc
jns
mov
shr
(bad)
rcl
test
out
or
sar
add
mov
ror
ins
div
jle
mov
lods
xor
retf
ins
or
mov
scas
xor
sahf
jl
ret
or
mov
loopne
gs
pop
cs
push
inc
sbb
fnstsw
fimul
mov
adc
cli
in
scas
lods
adc
std
loop
push
mov
dec
mov
mov
sar
out
shl
in
shr
out
push
jg
out
xor
sub
add
(bad)
mov
fwait
rol
cmp
or
mov
mov
pushf
into
cmp
cmc
mov
sbb
xchg
lahf
cmp
xor
out
push
fdivrp
mov
js
and
out
scas
add
dec
pushf
mov
xor
aaa
sbb
(bad)
xlat
jmp
popf
fidiv
stos
jecxz
out
sbb
in
adc
mov
out
pop
sbb
loope
and
(bad)
push
pop
fsub
in
pusha
push
idiv
xchg
xor
pop
aaa
mov
mov
(bad)
pop
pop
ds
jb
scas
jl
icebp
adc
leave
call
or
cmp
arpl
jp
push
ins
add
outs
xor
jae
push
push
ins
mov
jg
xor
jecxz
pop
cmp
add
sbb
rol
mov
xor
add
xlat
outs
shl
dec
inc
jle
mov
xor
lock
adc
scas
xchg
xchg
outs
cmp
add
shr
(bad)
push
rol
jge
test
aam
and
jl
pop
adc
xor
adc
inc
jge
inc
add
cmps
pop
push
push
outs
loopne
jg
aaa
bound
mov
arpl
ins
cmps
add
imul
daa
xchg
xchg
(bad)
jg
pop
xor
dec
call
or
jns
jne
push
add
clc
jp
sub
idiv
addr16
cmp
xchg
imul
mov
data16
cmps
jne
cmps
jno
test
pop
push
and
inc
xchg
cmp
sbb
push
mov
pop
movs
pop
jl
clc
jnp
gs
aad
adc
fwait
xchg
push
mov
or
arpl
push
mov
jo
add
jl
push
fs
test
nop
jl
test
retf
aad
mov
push
jbe
(bad)
push
pop
outs
cmp
je
out
scas
js
jae
xchg
jp
pop
push
mov
adc
jb
mul
out
outs
add
(bad)
aad
scas
mov
mov
add
pusha
dec
push
push
(bad)
jbe
push
pop
push
jg
pop
fwait
push
pop
dec
or
push
jge
push
mov
jae
jbe
(bad)
jl
xchg
pushf
(bad)
push
pop
ins
lea
push
aaa
(bad)
jmp
xchg
or
outs
sahf
xchg
outs
and
xchg
jl
xchg
dec
add
xlat
jb
mov
ss
imul
adc
jnp
imul
xchg
jb
dec
ja
mov
mov
ins
jne
not
jns
pop
(bad)
and
xchg
leave
(bad)
add
cmps
pop
xchg
cmps
pop
and
imul
adc
movs
jne
add
inc
pop
ins
sub
ins
mov
jns
xchg
xchg
pop
cmc
pop
xchg
test
jle
add
test
mov
mov
cwde
ja
fsubr
and
aaa
nop
dec
inc
adc
ret
push
xchg
in
inc
nop
mov
jp
fnstenv
jne
mov
pusha
ror
push
gs
call
pop
push
sbb
pop
pushf
push
jns
mov
cdq
jae
add
jns
pop
xchg
mov
test
jecxz
jg
mov
nop
es
fst
cmps
test
mov
and
repnz
mov
test
test
call
push
arpl
pop
dec
cmp
cmps
jo
cmps
xchg
pop
imul
mov
retw
cmp
jne
fmul
jge
jbe
mov
push
push
pop
push
call
jmp
pop
dec
add
jbe
ret
mov
arpl
push
and
add
ss
gs
dec
mov
push
xor
ins
call
add
add
jp
gs
dec
jp
dec
adc
push
or
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
loop
xor
xor
jb
add
add
push
push
xchg
xchg
xchg
mov
mov
rcl
sub
sub
push
sbb
sbb
repnz
cmp
cmp
jp
adc
or
stos
lods
pop
pop
pop
xchg
call
add
dec
dec
int3
retf
data16
adc
fcmovu
xor
sub
ds
jle
mov
in
jmp
je
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
ss
jbe
pop
push
pop
pushf
xchg
pushf
(bad)
fsubr
sub
outs
ins
and
and
ds
jle
lods
scas
lods
pushf
call
push
aam
aam
xchg
les
and
cmps
movs
in
in
ss
jbe
add
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
int3
into
int3
ins
data16
sbb
sbb
(bad)
xor
xor
ds
test
mov
in
out
in
mov
cld
fs
fs
or
data16
adc
sbb
cs
outs
je
ds
jl
test
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
loope
test
or
mov
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
aas
add
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
pop
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
fiadd
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
pop
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
fs
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
cld
pop
push
aas
mov
pop
in
shl
dec
xchg
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
push
mov
stos
mov
add
stos
mov
stos
xor
mov
call
lods
pusha
push
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
or
xor
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
xor
lock
or
sub
scas
loope
add
jmp
xchg
xor
push
mov
and
mov
rol
scas
pop
adc
inc
add
sbb
pop
xchg
jb
test
call
mov
and
pop
push
mov
mov
or
mov
jmp
sti
call
mov
loopne
out
mov
sub
mov
sti
retf
or
fidiv
cmp
xor
mov
dec
add
mov
stc
add
pop
jo
daa
xor
popf
test
inc
nop
add
mov
jnp
mov
sti
mov
or
xor
jmp
xchg
mov
sbb
sbb
mov
fstp
sti
lods
mov
mov
jmp
popa
stos
mov
fwait
add
mov
and
dec
xor
mov
jo
push
adc
adc
loopne
mov
add
sbb
dec
lods
lea
int3
mov
fisubr
mov
pop
mov
jmp
add
mov
sub
mov
cmp
retf
mov
xor
adc
cmp
mov
jl
dec
mov
mov
rol
cmp
mov
lock
and
stos
retf
add
(bad)
fiadd
xor
or
ret
ret
adc
mov
jl
sbb
stos
pop
mov
or
ss
xor
or
cmp
or
inc
lods
add
add
cld
scas
inc
sar
cld
les
mov
retf
in
mov
mov
popa
sub
adc
push
jne
(bad)
or
outs
cmp
push
(bad)
jae
mov
push
sub
mov
mov
jb
add
les
and
stos
sbb
ds
adc
add
mov
xor
mov
mov
xchg
jl
mov
movs
push
mov
pop
push
retf
enter
popa
mov
(bad)
mov
and
mov
enter
pusha
mov
imul
lock
lods
scas
xor
or
sub
ror
inc
retf
enter
adc
fdivr
lods
jl
sub
push
pop
ror
pusha
add
retf
iret
fmulp
retf
ja
pushf
into
mov
int
pushf
int
fmul
movs
fmul
repz
out
cmp
jmp
inc
sbb
loop
rol
or
loop
leave
test
into
or
into
out
dec
shr
mov
sbb
push
rcl
sbb
rol
dec
retf
iret
or
jecxz
sar
or
xor
or
test
rol
mov
sbb
or
cmp
sub
into
and
shl
in
mov
popf
shl
sub
cld
cmp
hlt
or
mov
int
jge
inc
jge
inc
stos
rol
into
xor
and
lods
shl
cld
into
xor
pusha
int
push
in
mov
cld
rcl
iret
inc
std
iret
cmc
dec
iret
push
rcl
add
dec
pop
xlat
push
jge
add
pop
ror
int
pop
sbb
fs
cmp
int3
js
xlat
jl
iret
(bad)
in
(bad)
mov
ds
aad
ins
aam
pushf
iret
push
cmp
ds
jle
fcos
mov
xor
fadd
fcomp
enter
pusha
mov
jno
rcl
iret
popf
sub
mov
aad
ins
(bad)
cdq
jge
add
clc
int3
fild
std
xlat
and
popa
sub
adc
mov
rcl
in
int
pop
fcom
fsubr
and
test
fcmovu
shl
fcom
jnp
iret
pop
sbb
cmc
mov
fld
fisubr
in
aam
std
fucomip
jge
sbb
xor
fld
jmp
xlat
std
in
fld
loopne
lods
xchg
(bad)
rol
mov
sbb
mov
int
add
fmul
mov
cld
int
fidivr
dec
push
and
stos
iret
int
in
jge
enter
cmp
push
inc
push
ret
mov
test
aam
sar
jecxz
push
retf
dec
dec
push
mov
dec
(bad)
cmp
adc
enter
dec
mov
bound
fucomip
or
sbb
scas
fsub
popf
fstp
or
inc
in
in
std
jecxz
cs
aaa
ins
in
lods
out
mov
cmp
pop
fcom
jge
jg
out
cs
pop
fcomip
cld
shl
in
rcr
fsubp
pop
jo
int
call
(bad)
fdivr
(bad)
xlat
and
fisttp
add
sbb
mov
out
sbb
push
shl
xor
cmp
loopne
jle
mov
out
xlat
es
shl
cs
pop
call
scas
(bad)
cmp
mov
loopne
fucom
(bad)
ds
mov
in
out
out
pop
frstor
(bad)
in
jle
jno
int
mov
icebp
or
stos
out
into
ds
popf
jecxz
scas
out
dec
jmp
mov
loop
cs
fst
into
out
out
(bad)
pop
out
mov
aas
mov
imul
inc
inc
stos
or
cmp
into
inc
mov
jmp
mov
cs
jmp
aas
stos
pop
inc
push
mov
add
push
in
fld
and
repz
xchg
dec
in
lock
icebp
std
jmp
int3
into
mov
lock
fld
hlt
lods
out
scas
repz
out
lods
out
jmp
pop
icebp
dec
ds
in
fnstcw
jmp
jmp
lea
(bad)
jecxz
lahf
cmc
mov
icebp
push
mov
imul
inc
fcomip
adc
loopne
test
fucomip
fdivr
add
int
push
push
push
mov
jg
jmp
mov
ret
sbb
notrack
rcr
adc
not
add
call
stc
mov
popf
das
stc
xchg
lahf
stc
inc
shl
rcr
and
icebp
xor
jp
stc
ins
aas
jmp
mov
hlt
dec
jle
scas
out
in
scas
fistp
imul
fcomip
les
mov
in
in
pop
call
sub
cmp
neg
cmc
pushf
repnz
div
iret
std
mov
idiv
push
sti
leave
das
imul
das
out
mov
hlt
inc
lahf
iret
fstp
cmc
xchg
aas
fmul
out
jecxz
fidivr
outs
(bad)
in
fcomip
and
leave
mov
add
pop
call
push
rol
cmc
fadd
imul
inc
test
cmp
jmp
or
inc
pop
sbb
jns
loope
fidivr
cmp
and
mov
mov
or
call
sub
sbb
sub
pop
cld
ins
push
cwde
js
sub
cli
jmp
or
or
test
das
cmp
test
push
fcmovu
jl
test
mov
xor
rcl
or
enter
or
les
inc
arpl
or
ins
xchg
mov
fwait
mov
add
movs
push
fs
(bad)
mov
dec
mov
mov
fwait
mov
imul
pop
cmp
cmp
mov
sub
pop
or
shr
aad
loop
jbe
cmp
lea
arpl
jle
push
lea
mov
ins
aad
in
mov
mov
gs
inc
dec
xchg
inc
pop
sub
and
movs
jae
xchg
sbb
in
fadd
retf
mov
mov
lods
push
test
jno
stos
xchg
mov
cmps
jmp
retf
jno
and
or
imul
daa
retf
shr
fiadd
sub
fstp
imul
cmc
jae
pop
arpl
je
je
pop
(bad)
fidiv
ja
adc
dec
sbb
mov
pop
es
mov
in
popa
jge
(bad)
sbb
je
xchg
dec
addr16
call
jne
pushf
add
test
inc
sbb
jecxz
sbb
popw
adc
cmp
lods
sbb
xchg
add
in
(bad)
sahf
jg
mov
loope
pop
add
repnz
mov
fmul
nop
cdq
or
(bad)
pop
gs
mov
pop
push
loope
sbb
mov
and
pop
and
daa
pop
pop
or
enter
(bad)
xchg
and
xchg
getsec
pusha
or
mov
repnz
mov
jnp
ret
call
cli
pop
pop
movs
ja
mov
movups
jmp
test
sahf
jp
xchg
mov
or
mov
adc
ss
sbb
push
fs
sbb
jno
mov
push
or
lods
(bad)
cld
ficom
cmp
add
cwde
retf
push
sub
js
sbb
sub
push
mov
jnp
(bad)
fstp
mov
mov
sbb
test
fwait
rcl
push
vphadduwd
mov
push
call
jnp
icebp
fsub
std
stos
push
or
fcom
mov
add
out
scas
adc
cdq
test
test
mov
inc
sub
or
and
inc
fcomp
sub
aam
bnd
inc
pop
or
ds
xor
lods
fcom
je
cmp
fsub
outs
fdivrp
lods
ror
fcomp
adc
jecxz
mov
push
pop
cdq
adc
sti
daa
mov
jbe
mov
mov
cli
xor
inc
fisubr
jge
mov
outs
sub
shl
mov
outs
sub
loope
jp
pop
iret
jns
in
pop
into
lea
call
cmovs
std
ja
pop
fsubr
jbe
dec
pop
xchg
cmp
fsub
jbe
cmp
sbb
sbb
sbb
xor
call
cli
shr
push
xor
add
fdiv
xchg
(bad)
ret
dec
icebp
cmp
mov
or
cmc
adc
jecxz
enter
fisubr
lods
mov
cmp
lahf
scas
das
cli
and
mov
cmp
xor
push
pop
jmp
out
jl
sbb
mov
ret
addr16
daa
fmul
repz
cmp
sub
pop
popa
sub
sbb
cmp
fcomip
mov
inc
cdq
ror
iret
sti
loopne
xchg
cmp
jle
jnp
ret
sahf
jo
mov
push
popf
inc
daa
mov
fcmovnu
fld
iret
cmp
xor
mov
sbb
fadd
in
scas
jp
sbb
mov
mov
in
add
pop
cmps
mov
sbb
mov
aaa
xchg
jns
pushf
cdq
pop
xchg
clc
dec
loope
pop
sbb
(bad)
lea
xchg
dec
fs
sbb
ja
call
mov
cmp
repz
xor
mov
mov
test
xchg
xchg
cld
fdiv
xchg
push
imul
mov
xor
and
pop
and
cmps
push
jmp
lea
sub
xchg
push
sbb
(bad)
fisub
inc
or
nop
out
cmp
pop
ret
scas
jle
hlt
mov
adc
and
push
lds
test
aas
mov
(bad)
adc
movs
push
inc
jae
dec
es
dec
xor
dec
pop
repnz
lahf
aas
push
stc
stos
add
push
or
pop
cmps
das
xlat
jmp
cdq
(bad)
(bad)
in
mov
sbb
xchg
xchg
cmps
and
inc
retf
mov
mov
pop
mov
hlt
int3
pushf
or
inc
out
mov
xchg
iret
add
xor
jb
push
mov
jge
inc
test
popf
ficom
or
shl
add
je
aas
sbb
lock
mov
dec
pop
fidiv
arpl
stos
es
add
cdq
adc
ds
cdq
dec
mov
pop
test
adc
lock
and
cs
shl
je
aaa
dec
jmp
lods
cs
ss
push
cmc
and
sub
movs
fcmove
ja
hlt
jg
ret
pop
sub
jp
ja
les
jecxz
ret
mov
push
in
and
push
mov
hlt
jmp
test
ss
sub
int
xchg
mov
mov
xchg
pop
lds
cmp
outs
movs
lahf
hlt
call
in
and
push
scas
js
imul
jle
cmps
xchg
jns
push
arpl
outs
and
mov
adc
popf
sub
data16
pop
add
and
mov
inc
pop
mov
push
test
dec
add
or
add
add
int
adc
mov
and
xor
dec
mov
jle
add
arpl
idiv
jno
in
add
mov
pusha
xchg
mov
les
cmps
icebp
mov
xchg
mov
popf
scas
xchg
mov
add
and
and
or
cwde
aad
fisubr
mov
icebp
jge
mov
ret
and
push
push
ret
sbb
adc
add
mov
loope
(bad)
jns
cwde
shl
hlt
dec
call
or
jo
movs
sti
push
dec
jle
adc
xlat
rcl
add
add
inc
arpl
or
mov
test
ins
test
sub
add
cmc
mov
pop
cmp
cmp
rcl
pop
sub
push
dec
cmps
daa
sbb
retf
scas
mov
xchg
cdq
fsubr
les
cli
rcl
xor
jmp
or
mov
sub
add
shl
pop
add
add
dec
outs
pop
rcl
mov
(bad)
in
not
sbb
sbb
pop
mov
imul
or
mov
mov
lods
in
dec
sti
jnp
pop
sub
das
enter
fidiv
jae
lea
xor
or
js
xor
pop
shl
pop
jbe
mov
dec
push
fist
cmp
cmps
pushf
rol
mov
xchg
repz
and
scas
(bad)
xor
add
mov
or
outs
inc
ret
loopne
inc
mov
into
jnp
outs
mov
inc
mov
cmps
vmread
dec
scas
je
imul
sub
cmp
neg
jle
jmp
push
sti
add
(bad)
mov
popa
inc
mov
mov
pop
inc
fadd
sahf
ja
add
in
xor
sti
repz
jae
ret
pushf
jecxz
aaa
mov
mov
or
sahf
or
pop
or
jl
pop
fild
leave
adc
cld
test
jle
mov
addr16
std
(bad)
test
(bad)
sti
sbb
loope
mov
or
frstor
lock
push
test
or
rol
jg
repz
mov
mov
cmp
icebp
adc
movs
push
ins
stc
inc
add
mov
ds
jno
cmp
fnstcw
xlat
rcr
lods
sbb
mov
pop
pusha
or
xor
fldln2
outs
jbe
idiv
pop
cmp
jg
cmps
js
pop
push
cld
mov
iret
arpl
dec
js
xchg
js
enter
push
rol
js
idiv
out
pusha
push
js
pop
jnp
daa
add
jae
and
fs
push
bound
inc
cmp
fs
out
xor
add
rol
adc
cmp
add
mov
shl
clc
jle
out
dec
call
test
jbe
test
(bad)
lods
push
js
pop
jge
xchg
cwde
jnp
mov
push
cmp
add
add
pop
test
js
div
inc
jge
aaa
jg
push
jb
xor
or
dec
loopne
mov
jg
or
xchg
add
(bad)
jno
test
add
sub
dec
inc
xchg
loop
add
add
mov
ja
mov
addr16
pop
test
mov
js
mov
jb
jle
sub
ja
dec
pusha
sbb
clc
jle
sub
nop
or
cmp
sub
add
test
xor
les
dec
shr
into
cmp
dec
ja
pusha
mov
(bad)
mov
add
jp
daa
test
dec
sbb
push
push
test
clc
mov
jmp
add
test
sbb
push
stos
dec
mov
xchg
(bad)
jge
push
addr16
pop
jno
mov
ret
mov
movs
mov
daa
mov
call
cwde
adc
adc
push
mov
test
pop
dec
and
js
bound
test
add
pop
mov
mov
mov
inc
and
or
clc
mov
add
push
xchg
je
xchg
mov
jns
(bad)
das
pop
xchg
dec
lock
mov
bound
add
add
sbb
add
xchg
or
xchg
xchg
sbb
mov
add
xchg
sub
mov
sbb
mov
pop
cwde
xchg
shr
add
jmp
push
rcl
imul
cdq
jle
dec
xchg
test
push
mov
sbb
sub
pop
leave
jns
push
jge
xchg
and
xchg
call
xchg
pop
xchg
inc
dec
xchg
inc
sbb
leave
xchg
sbb
pop
pop
jns
push
cmp
xchg
pop
stc
xchg
sub
inc
stc
test
jae
inc
mov
dec
and
test
xchg
push
pusha
xchg
push
jns
mov
call
jno
lea
mov
push
nop
or
nop
pop
cmp
sub
cmps
add
mov
inc
stc
popf
int3
cdq
or
sahf
mov
xchg
repnz
pop
shl
pushf
xchg
or
clc
pushf
pop
mov
jo
mov
stc
xchg
jb
xchg
xchg
push
dec
jge
jmp
lods
fnstcw
out
or
or
lea
pop
test
test
mov
jp
pop
fldenv
sbb
cdq
xchg
sbb
js
mov
cld
fcom
stc
mov
xchg
mov
fcomp
cwde
add
cmp
or
fstp
mov
mov
nop
or
test
cs
push
rcl
ficomp
test
push
stc
pushf
fs
xchg
repz
add
and
fucomip
xchg
dec
sub
mov
cmp
sub
ret
js
mov
fwait
and
call
test
xchg
push
dec
movs
jo
cdq
(bad)
cmp
xchg
cs
(bad)
les
fs
stc
pop
xchg
pop
mov
ss
cmp
pop
xchg
inc
sub
test
jmp
stos
push
stc
xchg
add
out
jmp
jne
lods
nop
imul
xchg
jae
movs
sub
stos
shr
xchg
jp
adc
sbb
call
(bad)
call
add
scas
cli
imul
xchg
xchg
movs
call
test
push
cwde
stos
lods
mov
adc
xchg
sbb
call
cwde
add
lods
push
mov
das
mov
adc
xchg
(bad)
fldenv
fwait
mov
dec
lea
xchg
and
fimul
mov
mov
push
leave
cmps
sub
or
mov
call
sar
xchg
mov
cwde
mov
cmp
mov
test
and
cwde
in
jp
fcomp
stos
rcl
stos
scas
sub
mov
sbb
loopne
pop
retf
stc
test
stc
mov
fwait
scas
push
sbb
jnp
or
cld
or
loop
add
lods
shr
xor
mov
(bad)
mov
ror
das
test
sti
retf
sub
fwait
push
push
imul
jmp
xchg
xchg
cmp
push
xor
stos
stos
stos
mov
dec
mov
fwait
test
sti
lods
movs
jmp
rcr
test
stc
mov
cmp
sbb
push
movs
cmp
pop
or
jmp
cs
push
pop
ficomp
imul
xchg
fidivr
push
xchg
mov
mov
cdq
push
arpl
mov
or
mov
fstp
inc
add
dec
pushf
pop
sbb
stos
dec
mov
cdq
add
mov
xchg
add
in
dec
xor
mov
outs
jns
pop
dec
add
out
adc
mov
or
add
mov
inc
shl
nop
add
mov
fwait
movs
inc
sbb
lods
xchg
ret
mov
cmp
stos
mov
sti
mov
dec
mov
sub
movs
inc
lds
mov
stos
mov
retf
mov
pop
mov
pop
enter
or
les
ret
bound
cdq
pusha
add
mov
or
sub
(bad)
mov
sbb
sbb
mov
sub
dec
or
ret
leave
(bad)
dec
dec
push
dec
jmp
xor
lds
enter
scas
call
pushf
test
in
jmp
(bad)
mov
mov
dec
add
xor
cmp
add
cmp
outs
or
mov
mov
cld
stos
sub
mov
cld
mov
sbb
scas
jl
hlt
int3
inc
imul
cld
(bad)
outs
leave
enter
sub
nop
cwde
mov
ficomp
aad
mov
in
pushf
xchg
or
bound
sub
out
int3
pop
or
in
int3
movs
dec
mov
mov
pop
pop
add
int3
int
imul
mov
lock
(bad)
int3
pop
rcl
lea
stc
ror
sar
xor
pop
pusha
mov
mov
das
sub
cld
jl
or
ret
adc
pushf
xchg
into
pop
retf
inc
in
mov
cmp
push
fwait
or
pusha
int
leave
enter
pop
jnp
push
in
int3
push
or
sub
jecxz
mov
cmp
and
int3
enter
pop
rcr
ins
int3
sar
clc
sub
pop
lods
rol
ins
aad
std
mov
imul
cmp
jle
mov
int3
(bad)
jp
aam
mov
test
(bad)
in
mov
ins
aam
mov
dec
in
ret
and
pushf
cmps
lods
retf
mov
pop
jl
adc
ficom
xchg
jo
aam
fstp
lahf
mov
xlat
or
or
sahf
jp
mov
(bad)
(bad)
retf
(bad)
cld
fidivr
ror
loopne
inc
inc
push
enter
popf
fnstcw
mov
call
xlat
int3
ins
rcr
(bad)
jl
pusha
int3
leave
(bad)
pop
(bad)
(bad)
fimul
push
jge
jmp
sub
add
mov
sbb
loop
aad
in
mov
ins
fiadd
iret
nop
pop
rcl
sbb
ret
sub
dec
add
fnsave
fdivp
ins
retf
adc
pop
sbb
sub
loop
push
(bad)
dec
rcl
in
(bad)
pop
or
hlt
pop
ficom
mov
cmc
(bad)
fidiv
sbb
cdq
rol
jo
loop
in
mov
scas
loopne
cmp
(bad)
jge
xlat
dec
xchg
enter
mov
sti
int
imul
pusha
lock
xlat
dec
fstp
test
std
in
dec
frstor
fadd
(bad)
aam
jle
repnz
loop
faddp
or
fisub
jecxz
int
jb
fld
(bad)
jge
xchg
xlat
xor
ficom
fsubp
clc
cmp
sar
shl
imul
popf
jmp
dec
jecxz
mov
popa
fucom
fimul
sbb
outs
outs
jmp
cmp
aas
cs
int
stos
push
ror
loop
add
sbb
mov
fist
xchg
jge
aam
dec
push
stos
pushf
or
cwde
add
call
fcompp
daa
dec
push
push
in
pop
out
in
imul
cs
mov
call
(bad)
jmp
dec
out
in
pop
(bad)
jmp
jle
retf
sar
cmp
fidiv
leave
jge
fld
cmp
pushf
pop
in
jne
in
push
shr
out
in
outs
out
aas
(bad)
lock
mov
in
cmp
jecxz
jmp
jmp
sbb
pop
push
sub
jno
sub
push
(bad)
pop
push
jmp
or
jge
push
seto
adc
jo
in
cmp
shl
imul
xchg
ficomp
sbb
in
jo
in
adc
cmp
(bad)
push
(bad)
xchg
push
loop
das
in
or
in
pop
(bad)
xchg
cmp
loop
out
sub
ins
hlt
pop
push
mov
icebp
xchg
ds
jmp
xor
jae
in
fcomip
addr16
repz
pop
xlat
test
out
mov
or
mov
in
scas
shl
in
in
jmp
clc
jnp
out
aas
loop
mov
cmps
out
in
movs
lahf
or
icebp
sub
xchg
push
pop
out
je
cmc
xchg
out
stc
fistp
jmp
lahf
fsubr
cli
mov
neg
sti
call
and
mov
cld
or
add
pop
pop
cmc
push
scas
in
pusha
iret
cld
sbb
cld
fsubr
pusha
dec
test
in
cmp
cld
xchg
out
(bad)
jg
sub
mov
std
cmp
(bad)
push
mov
js
loope
outs
hlt
xor
pop
invd
add
bound
test
sbb
add
pusha
xchg
pusha
add
mov
mov
xchg
adc
movs
test
cs
mov
xchg
test
mov
retf
xchg
xchg
xchg
inc
xchg
mov
mov
mov
mov
or
movs
int
movs
rcl
fidivr
inc
sbb
dec
sbb
ja
pushf
aad
pop
dec
adc
popa
cs
lea
out
mov
ror
lock
cmp
out
ret
and
pop
clc
inc
xchg
sub
mov
mov
adc
push
sub
mov
xchg
mov
pop
mov
fidivr
in
adc
je
inc
mov
cmp
lds
imul
and
aad
enter
push
adc
jge
movs
sbb
pop
sub
xor
test
pop
push
sbb
xor
pushf
(bad)
sbb
pop
mov
out
daa
mov
sub
out
and
lds
inc
jge
rcl
xchg
imul
sbb
jmp
ins
sub
stc
call
pop
(bad)
cmps
sub
jo
mov
aad
mov
outs
(bad)
cmp
sub
pop
je
pop
add
and
dec
retf
imul
aad
hlt
jle
outs
xchg
(bad)
ja
stc
dec
icebp
or
adc
test
gs
out
aad
push
jns
mov
(bad)
mov
call
icebp
aad
test
stos
mov
fld
cmc
xor
mov
daa
sbb
cmp
mov
mov
mov
fsub
mov
(bad)
adc
pop
dec
lods
jne
(bad)
mov
push
ja
xchg
rol
pusha
movs
and
fdiv
and
and
push
jns
xchg
xchg
inc
dec
call
outs
push
enter
jns
or
jno
aam
xchg
pop
sub
push
aad
cmp
rcr
rcl
mov
dec
loop
adc
aaa
pusha
mov
test
shl
push
fwait
stos
push
or
dec
add
fdivr
jecxz
mov
jmp
sbb
adc
jmp
mov
cli
dec
sub
mov
leave
push
retf
dec
mov
mov
into
jmp
lods
movs
jmp
cli
jmp
dec
mov
sar
sbb
out
mov
mov
popf
or
or
fs
sub
add
retf
pop
or
add
test
pop
dec
icebp
inc
or
push
inc
or
test
fwait
mov
and
ss
icebp
ret
ja
sbb
inc
adc
and
inc
jo
mov
inc
mov
(bad)
jmp
shr
dec
repz
mov
sub
mov
push
and
dec
fs
mov
sbb
xchg
not
dec
mov
sub
xchg
cs
movs
push
lock
(bad)
inc
cmp
jo
int
ja
sub
loopne
lods
mov
inc
sub
lock
sahf
inc
jns
loop
jne
js
loope
(bad)
js
clc
mov
js
out
dec
(bad)
lods
retf
outs
jp
pop
cld
ins
sub
shl
es
sbb
rcr
stc
out
imul
jecxz
movq
aad
add
aam
je
movs
dec
retf
daa
popf
jl
inc
daa
(bad)
jnp
ret
pop
lahf
cmp
mov
jo
out
pop
cmp
ror
pop
jmp
xchg
stos
jl
sti
rol
mov
xor
jmp
das
imul
mov
add
mov
add
outs
jne
sbb
mov
cmp
sub
add
sbb
lds
push
add
push
sbb
aaa
add
das
jle
sub
(bad)
movs
or
adc
and
or
cmp
fisttp
fisttp
add
test
push
add
ds
mov
and
dec
jb
movs
mov
push
fmul
xor
cwde
mov
add
pop
adc
xor
stos
in
mov
inc
and
js
inc
jo
push
push
or
push
rcr
movs
jo
mov
mov
jecxz
shr
cmp
int
mov
inc
or
sub
push
in
add
jecxz
add
jmp
and
cwde
mov
and
mov
inc
inc
adc
mov
add
or
(bad)
mov
mov
movs
test
add
imul
and
adc
or
push
(bad)
rcl
dec
or
jmp
xchg
push
adc
xor
mov
mov
jl
cs
pop
inc
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
mov
inc
rol
xchg
fiadd
dec
mov
push
or
inc
pop
dec
mov
(bad)
xchg
cmps
xchg
scas
and
pusha
in
mov
or
push
dec
cli
push
les
sub
test
mov
aad
adc
xlat
mov
jne
add
stos
fst
pop
sub
mov
scas
xchg
mov
pop
popa
cmp
stos
aad
mov
sub
dec
dec
pop
and
sbb
(bad)
mov
shl
jnp
and
pusha
scas
adc
cmp
jmp
mov
pop
out
push
movs
into
(bad)
out
push
or
mov
lds
outs
pop
mov
pop
mov
ja
jmp
xchg
push
mov
mov
fcomip
dec
mov
jns
pop
aad
sbb
or
sbb
mov
out
(bad)
mov
in
retf
adc
scas
cmp
pop
out
push
add
sbb
adc
in
outs
lea
and
push
jbe
test
aaa
or
(bad)
sub
js
jecxz
mov
icebp
jnp
fcomp
adc
add
mov
add
or
or
cwde
jno
outs
mov
sbb
(bad)
data16
mov
test
push
xor
repz
cmp
ins
popf
fistp
fsubr
sub
adc
push
addr16
adc
call
xor
jno
xor
(bad)
not
scas
lahf
fstp
inc
add
pop
lods
jbe
loopne
sbb
xchg
sar
(bad)
bound
add
repnz
cmps
cli
shr
test
test
jbe
movs
jne
addr16
push
ret
fimul
scas
and
sbb
dec
push
cmp
int
xor
data16
xchg
sbb
inc
jp
jno
pop
aad
adc
xchg
jge
and
outs
mov
or
int
mov
test
cwde
(bad)
jne
mov
xor
push
add
push
popa
xchg
aam
mov
push
scas
mov
and
(bad)
mov
popa
pop
sbb
jl
xor
adc
stos
into
cmc
or
repnz
mov
xchg
pusha
jb
mov
shr
jge
push
addr16
enter
fwait
mov
cwde
arpl
sub
push
or
das
sahf
inc
jp
(bad)
ss
mov
jmp
js
lock
(bad)
retf
inc
mov
or
scas
and
hlt
mov
adc
sbb
xlat
xlat
imul
popa
mov
test
jnp
cmp
mov
xchg
fimul
jmp
sbb
dec
cmps
mov
imul
push
repz
out
test
sub
mov
imul
cmps
ja
jbe
adc
aad
jg
add
jne
cmp
test
sahf
gs
sar
mov
dec
call
xchg
mov
jmp
and
cmp
cwde
jge
iret
aaa
pop
loopne
fcmovnu
jmp
and
imul
xor
xchg
jnp
and
pop
inc
add
stos
popf
cld
sti
iret
add
mov
mov
cmps
ret
mov
ffree
stos
jmp
mov
movs
(bad)
(bad)
jbe
push
gs
cmps
jnp
es
(bad)
push
xchg
ja
xor
mov
je
add
jle
xchg
jb
test
outs
mov
push
inc
(bad)
jge
mov
movs
bound
add
daa
add
push
jg
xchg
add
cmp
jmp
mov
aam
or
push
push
pop
jl
call
sub
or
fs
pop
jb
clc
ins
and
cld
push
pop
dec
out
fnstenv
jg
cmps
popa
or
test
imul
(bad)
out
es
xchg
or
ja
sub
imul
or
(bad)
fs
jbe
jb
jne
inc
add
js
jge
jp
addr16
div
mov
push
imul
cmp
add
ja
adc
test
sub
add
mov
imul
test
sub
jl
jns
pop
mov
pop
test
out
pop
pop
imul
mov
je
inc
pusha
movs
pop
mov
push
mov
inc
mov
imul
(bad)
pop
ja
mov
xor
add
xchg
push
inc
outs
test
jnp
jne
sahf
jbe
fcomip
jnp
push
xchg
ins
je
mov
(bad)
pop
mov
mov
or
outs
movs
cmp
add
xchg
ja
repnz
jp
pop
ins
or
gs
out
arpl
scas
xor
fdecstp
or
push
push
xor
ins
(bad)
(bad)
pop
push
ss
jo
ss
push
jns
pop
xchg
je
sub
pop
xchg
mov
imul
ja
test
jne
jbe
aaa
jg
aaa
pop
mov
add
mov
(bad)
jbe
fldcw
cmp
outs
inc
pop
jnp
data16
(bad)
addr16
push
jb
fdiv
sbb
daa
mov
(bad)
in
push
jns
cwde
xchg
pop
lods
addr16
mov
and
jbe
or
push
push
outs
cli
mov
pop
test
mov
jb
addr16
(bad)
imul
(bad)
fs
push
js
cwde
rol
push
xchg
push
loopne
cmp
popa
mov
lea
xor
add
jp
sbb
xchg
imul
fs
pop
inc
jo
mov
mov
out
lock
push
jne
vmread
cmps
bound
outs
movs
sbb
inc
nop
mov
(bad)
mov
neg
leave
jbe
rcr
(bad)
pushf
out
sbb
dec
popf
and
cmc
cmps
fwait
push
imul
jne
mov
push
sbb
jo
jp
ins
(bad)
push
push
call
fimul
and
or
xchg
ins
sti
daa
lahf
cmc
adc
dec
stc
jno
movs
pop
test
mov
xchg
call
sub
xchg
pop
iret
dec
jge
out
and
jbe
dec
js
mov
pop
push
jo
in
out
mov
bound
call
dec
shr
cmp
mov
jbe
ds
sahf
es
inc
retf
lds
cmp
stos
push
add
add
fisub
retf
add
dec
push
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
sbb
xchg
shr
jae
add
jo
add
add
cli
popf
sub
inc
mov
mov
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
mov
push
rol
and
int3
or
inc
mov
adc
test
es
mov
dec
mov
sti
mov
fild
test
mov
sub
sti
mov
cmp
mov
add
adc
loopne
mov
shr
cli
jnp
push
ins
add
mov
pushf
mov
fwait
ja
sbb
retf
add
jmp
ret
ret
mov
daa
ins
add
and
adc
jl
sub
jl
and
rol
ds
ret
xor
ret
ds
ret
mov
mov
inc
mov
dec
sub
inc
pop
lds
add
mov
add
pop
rol
push
or
inc
lock
mov
(bad)
push
(bad)
out
pop
(bad)
pop
mov
cmp
lds
add
inc
pop
(bad)
ins
or
pop
xor
loopne
cmp
mov
xor
inc
mov
inc
mov
mov
(bad)
cli
mov
or
mov
cmp
dec
loopne
cwde
lods
ret
or
inc
sbb
cmp
cmps
jmp
xchg
jl
stos
mov
sub
lods
ins
add
int3
add
sub
dec
mov
test
add
retf
pop
nop
add
leave
out
mov
call
sbb
mov
add
fmul
jp
leave
xlat
lods
xchg
adc
adc
pop
pusha
add
mov
pushf
int
pushf
ja
cld
int
sub
aam
add
iret
jmp
int
jl
cli
lods
scas
(bad)
pushf
int
int3
iret
repnz
loopne
iret
mov
leave
(bad)
mov
loope
leave
loop
xchg
jge
dec
add
mov
push
adc
rcl
sub
idiv
sti
cmp
add
rcr
cmp
push
in
sar
ror
(bad)
mov
or
iret
call
shl
iret
cmp
sar
std
into
iret
cld
leave
call
mov
sub
mov
sub
std
int3
rol
loopne
mov
add
mov
in
ror
fiadd
push
sbb
cdq
ins
shr
pushf
iret
clc
mov
cmp
add
pop
aam
sbb
rcr
dec
rol
pop
sub
int3
inc
pop
rcl
sub
jno
xlat
imul
or
jbe
(bad)
jg
aam
cmp
sbb
into
fsubr
cld
(bad)
sub
pop
lock
sbb
add
jle
xlat
jle
(bad)
push
fst
nop
sub
mov
iret
je
into
sbb
sub
mov
iret
call
sbb
or
fld
dec
fisttp
jp
ficomp
int
lods
xlat
or
ror
jge
ins
int
in
enter
movs
lods
(bad)
jmp
(bad)
xor
fcomp
in
fsubr
in
rol
in
int3
cmp
call
fld
in
lods
fild
loope
ficom
xor
arpl
out
sar
or
int3
std
(bad)
retf
cmp
adc
ror
fsub
mov
add
add
std
fstp
popf
(bad)
jge
or
add
mov
sbb
fcmovu
std
shr
loop
dec
fiadd
push
jecxz
ins
loopne
into
add
(bad)
sub
mov
pop
fmul
(bad)
fidiv
into
add
jecxz
sub
push
sahf
in
outs
fiadd
xlat
add
loop
fmulp
pop
mov
jle
in
or
push
ficom
sbb
loop
outs
shl
mov
jbe
fcomp
loop
pushf
aam
sub
icebp
mov
das
pop
loope
cmp
aad
loopne
or
mov
into
in
rol
add
fmul
sbb
out
fistp
rcl
adc
popf
jl
cmp
inc
push
fprem1
sub
xchg
aam
outs
in
std
loop
dec
(bad)
mov
(bad)
loopne
(bad)
pushf
mov
mov
fidivr
fdivr
(bad)
xchg
scas
ficomp
fnstcw
shr
out
int3
scas
rcl
into
loop
push
shl
pushf
in
aas
dec
into
inc
ds
lods
loop
push
in
cs
pop
scas
in
(bad)
(bad)
scas
out
in
sub
pusha
cs
and
jae
in
ds
loope
aam
sbb
jbe
int3
jmp
out
fadd
add
push
fistp
add
sahf
aad
outs
out
int
or
stos
push
shr
retf
(bad)
fadd
mov
call
fst
out
into
in
int3
in
popf
int3
icebp
mov
in
jle
and
in
(bad)
call
dec
add
jmp
dec
repz
out
push
jecxz
sub
add
retf
ds
inc
pop
repnz
(bad)
stos
or
jmp
mov
sub
bound
stos
sbb
loopne
into
jmp
push
hlt
sbb
repnz
push
aas
in
xlat
in
(bad)
push
paddd
or
in
jle
das
lahf
cmc
adc
jmp
or
mov
add
adc
outs
icebp
sbb
repnz
icebp
pop
iret
add
out
les
hlt
(bad)
loop
dec
out
es
xchg
lahf
in
sub
in
call
lods
fdivr
cli
jns
cli
in
(bad)
call
outs
jmp
push
add
out
out
out
add
idiv
in
jmp
icebp
iret
cld
xacquire
das
(bad)
sti
je
stc
cmp
pop
cld
ret
ins
outs
cld
sub
jecxz
lock
(bad)
cli
cmps
mov
jp
into
retf
jmp
in
push
das
in
push
ds
sub
aad
stc
fnstsw
push
mov
push
inc
stos
and
bound
ret
les
shl
sbb
test
adc
mov
imul
sbb
pop
test
mov
cmp
and
test
pop
cmp
jmp
sbb
mov
jmp
mov
jmp
int3
mov
imul
mov
pop
or
cdq
or
jl
retf
test
dec
push
pop
mov
iret
push
pop
cmp
stos
adc
push
ret
mov
jmp
xor
scas
adc
retf
aad
adc
xchg
jo
inc
inc
adc
test
cmp
bound
mov
and
ret
push
sub
inc
inc
jnp
arpl
push
sbb
jmp
stos
inc
push
mov
fcmovnb
add
pop
popa
lea
xlat
nop
scas
xor
inc
hlt
sub
ficom
ret
stos
test
ins
lds
mov
icebp
pop
mov
push
jge
in
sbb
mov
pop
jae
xchg
popa
stos
ror
fbld
hlt
(bad)
(bad)
mov
adc
adc
xor
mov
out
data16
or
pop
push
mov
lds
or
imul
pop
int
pop
addr16
dec
cdq
mov
movs
mov
mov
fdivr
mov
push
push
loop
(bad)
pop
popa
ja
(bad)
mov
popa
sbb
popf
pop
sbb
xchg
add
mov
push
ins
leave
cmp
jmp
add
push
mov
xchg
push
movs
rcl
out
test
dec
aaa
retf
add
shl
das
je
mov
and
fwait
mov
push
movs
mov
and
shl
sbb
fwait
je
mul
ins
jmp
add
pop
pop
xchg
mov
inc
ficom
mov
aad
data16
inc
xchg
jl
sbb
push
jb
mov
aam
sahf
retf
addr16
and
test
mov
sub
xchg
lds
inc
stc
mov
adc
call
mov
jo
ret
push
dec
dec
shr
les
retf
xchg
inc
loope
cmps
xchg
in
and
xor
sub
mov
mov
and
fbstp
adc
sbb
jne
mov
sbb
lods
and
js
sbb
or
sbb
dec
icebp
cli
pop
imul
pop
lahf
js
loop
or
mov
fist
mov
retf
dec
push
scas
xchg
(bad)
mov
scas
and
(bad)
addr16
test
imul
xor
enter
push
cmp
ins
sbb
(bad)
xor
dec
add
pop
mov
mov
mov
jae
mov
inc
aaa
adc
xchg
mov
jo
add
jae
dec
mov
(bad)
push
shl
jb
pop
push
xor
jb
sub
idiv
ja
iret
push
ins
ror
dec
adc
add
adc
xor
pop
jmp
stc
loop
adc
xor
dec
mov
jbe
jae
scas
repnz
test
std
jmp
or
les
not
das
cwde
cli
mov
push
scas
jl
call
in
test
outs
jbe
xchg
jp
movs
stos
into
not
aas
das
xor
mov
sub
add
out
stos
pop
mov
fsubr
in
jnp
fist
ins
hlt
jmp
dec
std
mov
mov
fdivrp
fmul
xchg
cs
dec
(bad)
mov
sub
icebp
iret
push
in
(bad)
cmp
(bad)
pop
call
stos
jecxz
in
or
jge
or
or
test
jle
pop
or
pop
fldcw
xchg
in
dec
pop
mov
int
cdq
ss
push
sub
pop
xchg
jmp
sub
in
ja
jecxz
add
aam
stc
cwde
or
and
loop
ror
adc
daa
mov
add
sbb
das
xor
or
dec
adc
loope
push
push
xchg
push
jge
arpl
sbb
xchg
add
imul
ret
out
sub
aas
jp
mov
push
call
and
movs
retf
mov
mov
and
movs
cbw
pop
sahf
scas
pop
data16
dec
xchg
ret
call
push
das
js
(bad)
sub
jae
pushf
and
test
out
ja
adc
xor
and
retf
out
lock
push
xchg
out
and
repz
jo
pop
jb
ins
push
aam
aaa
xrelease
fs
cmp
jbe
nop
mov
mov
daa
cwde
repz
cdq
int3
stos
add
push
cmp
jno
xor
cmp
aaa
xchg
imul
cld
cmps
jmp
call
dec
daa
sub
xor
fisttp
xor
aaa
or
cmp
retf
jnp
push
add
adc
push
add
mov
mov
stc
(bad)
xor
jmp
sub
div
or
add
mov
call
mov
out
dec
out
mov
xor
sbb
(bad)
jle
lods
ja
out
adc
mov
inc
jge
inc
cmps
call
scas
leave
pop
sbb
or
lods
outs
in
adc
or
sbb
mov
mov
mov
call
adc
dec
call
mov
push
(bad)
loop
mov
sbb
add
mov
push
sub
fild
mov
sub
pop
lods
jp
out
push
mov
or
add
mov
je
sub
rcr
arpl
mov
jne
jno
pop
test
mov
imul
add
rol
sub
dec
lock
cmp
jo
push
or
pusha
add
and
xor
pop
test
sbb
scas
mov
lods
pop
mov
mov
xor
sbb
add
ret
add
or
pop
inc
cwde
mov
ffree
jbe
call
jae
loopne
arpl
xor
mov
(bad)
and
mov
jno
imul
jns
ins
xor
(bad)
mov
or
cld
cdq
or
ret
nop
rcl
mov
xchg
(bad)
int3
gs
jg
mov
xor
ffree
cli
clc
add
(bad)
xlat
dec
pop
mov
cmp
or
pop
mov
sub
ja
push
hlt
adc
cmp
lods
(bad)
xchg
jl
ds
and
xor
dec
mov
inc
adc
xchg
cmps
and
xor
xor
jge
repz
jbe
mov
cmps
ror
xor
dec
xchg
ss
(bad)
mov
mov
arpl
mov
ret
ss
scas
hlt
push
sbb
push
push
pop
retf
enter
fucomp
fsubr
(bad)
sti
push
xchg
pop
clc
and
pop
(bad)
fstp
mov
xor
inc
or
mov
iret
mov
in
repz
or
(bad)
fnstenv
idiv
mov
mov
jmp
xchg
sbb
mov
xchg
sbb
and
inc
ret
sar
and
call
sahf
jo
dec
fmul
or
icebp
add
neg
dec
sbb
cmp
js
fs
ins
add
fsub
pop
(bad)
mov
sub
ja
(bad)
xlat
int
(bad)
pop
adc
dec
enter
push
test
out
cmp
(bad)
dec
jmp
jne
mov
in
push
xor
test
(bad)
sbb
mov
inc
js
int
add
and
add
fist
or
mov
(bad)
fwait
pop
lock
xor
pop
jmp
add
(bad)
and
jne
(bad)
sbb
sti
(bad)
ds
push
popf
jmp
or
into
(bad)
test
pop
in
pushf
xlat
inc
rol
sub
and
mov
in
push
ja
(bad)
push
stos
jle
mov
fsubr
test
xor
in
inc
lock
push
js
fiadd
into
das
jle
pop
das
idiv
sub
adc
scas
cmc
mov
(bad)
jnp
adc
(bad)
sub
iret
(bad)
sti
fld
test
jg
aaa
xor
pop
xor
jno
daa
jns
sub
xchg
aaa
jp
daa
add
ror
(bad)
in
push
push
pusha
inc
ja
sbb
bound
push
mov
add
xchg
sbb
aas
mov
add
or
add
jns
xlat
xor
xchg
jl
pop
adc
icebp
xchg
cmps
push
sub
ja
in
imul
or
add
jl
daa
adc
cmp
jnp
pop
add
imul
push
mov
pop
test
mov
sbb
and
or
adc
add
cmps
jbe
mov
push
add
add
add
loopne
push
sbb
sub
mov
jo
daa
jbe
mov
bound
test
shl
add
rol
adc
test
test
out
dec
add
mov
xchg
hlt
add
dec
mov
mov
sahf
sub
pop
or
mov
aaa
mov
add
clc
ja
dec
add
jl
push
mov
jne
push
int3
mov
pop
fs
dec
lock
cwde
mov
jo
sbb
pop
jns
test
and
jp
or
in
push
push
iret
dec
xor
les
adc
cmp
mov
inc
enter
cmp
inc
jo
ror
icebp
sub
mov
add
pop
mov
sbb
or
add
nop
mov
xchg
inc
jo
mov
dec
pusha
and
clc
add
fnstenv
xchg
data16
mov
js
jmp
leave
or
loopne
inc
push
gs
adc
pop
xlat
add
not
in
call
mov
add
sbb
xchg
sbb
mov
cdq
jl
or
fadd
mov
stc
xchg
sub
xchg
dec
rol
mov
mov
repz
xchg
add
jo
cwde
out
sbb
xchg
or
imul
mov
jno
mov
xor
xchg
xor
jg
xchg
xchg
mov
js
dec
fnstenv
stc
xchg
lods
jns
lock
das
or
lock
sbb
jg
aaa
xchg
repnz
cdq
sbb
push
cwde
sbb
repz
sbb
mov
mov
push
das
sbb
leave
test
cmp
push
add
pusha
or
sub
imul
test
jns
aas
dec
mov
or
xchg
dec
test
es
xchg
pop
lock
inc
mov
or
and
pop
stc
xchg
mov
xchg
push
mov
es
push
fst
xchg
int
cdq
in
leave
mov
jns
aaa
mov
jmp
dec
jns
pop
leave
fwait
mov
fwait
(bad)
dec
pushf
pop
and
ins
fnstenv
sbb
cwde
xchg
ja
xchg
mov
pushf
mov
mov
movs
cmp
pop
xchg
xchg
fstp
ja
inc
or
mov
jbe
nop
(bad)
xchg
imul
cwde
mov
mov
stc
jno
call
add
pushf
adc
movs
icebp
cmp
fwait
mov
xchg
sbb
xchg
arpl
inc
jo
add
ja
xchg
mov
xchg
in
mov
pop
xchg
repnz
ret
(bad)
mov
sub
mov
inc
fst
add
lahf
mov
xchg
sub
xchg
cwde
cli
xchg
sbb
push
or
sahf
xchg
mov
pop
mov
or
stc
xchg
sbb
adc
fldenv
mov
cmp
ret
cdq
jns
int
cwde
dec
imul
add
or
movs
mov
test
enter
cmps
sub
add
test
js
push
pop
stos
loop
cdq
mov
xchg
lea
mov
sbb
scas
(bad)
scas
out
xchg
repz
xchg
or
stos
add
pop
or
shl
mov
mov
adc
scas
cmp
lods
mov
test
cli
scas
leave
js
dec
xchg
mov
dec
fwait
(bad)
sub
mov
add
xchg
dec
mov
loop
cdq
and
mov
cdq
into
or
push
mov
cmp
stc
mov
sub
leave
mov
stos
lods
pop
push
add
scas
jle
scas
out
dec
cwde
or
cmp
jp
mov
xchg
sbb
cwde
mov
push
imul
pusha
fwait
add
ins
jp
and
call
popa
dec
popf
cli
sub
adc
xchg
sub
mov
sbb
and
sub
mov
fwait
cmps
sub
add
mov
sbb
mov
xchg
dec
adc
mov
test
fnstcw
retf
add
lock
mov
pop
cwde
pop
cdq
test
mov
adc
stos
push
dec
mov
imul
xchg
mov
test
cmp
sbb
das
mov
mov
sbb
gs
retf
mov
mov
jmp
cwde
inc
push
cwde
pop
fwait
mov
or
adc
stc
mov
sti
mov
cmp
or
mov
dec
rol
mov
shl
int3
pop
mov
sti
stos
pop
cmp
add
lods
xchg
iret
sti
mov
cli
mov
pusha
ins
pop
xor
sub
mov
mov
xchg
inc
and
add
dec
cwde
mov
rcl
mov
mov
pop
add
sub
lods
dec
lods
mov
fwait
cdq
dec
lods
mov
sub
pop
mov
ret
ret
out
stos
mov
fwait
ret
mov
fwait
ret
mov
ins
mov
mov
mov
cwde
cmp
in
sti
mov
inc
add
sub
ret
dec
sub
jbe
(bad)
dec
mov
mov
lock
ja
shl
enter
mov
vpsubd
lock
mov
jno
test
in
ret
scas
stos
ins
or
mov
fstp
cli
pop
retf
pop
mov
push
sub
or
push
add
inc
add
(bad)
shr
mov
sbb
add
pop
mov
mov
xor
mov
and
inc
or
iret
stos
int
or
and
jbe
retf
(bad)
cmp
retf
and
mov
mov
sub
cdq
cmp
sub
add
and
or
mov
mov
retf
mov
mov
cmp
xchg
sub
in
mov
dec
mov
mov
pop
mov
in
int
mov
jl
out
iret
es
dec
inc
add
shr
pushf
imul
int
sbb
lds
sub
inc
or
das
in
iret
icebp
cmp
fwait
cli
retf
dec
mov
add
retf
fcmovu
shl
cmp
pop
(bad)
into
xor
mov
mov
cld
shr
jge
add
sub
test
les
mov
ins
int
test
mov
mov
mov
imul
jp
es
aad
jge
test
mov
lods
shr
ins
xlat
js
(bad)
jp
push
mov
imul
mov
leave
(bad)
loopne
fnstcw
int
or
jge
cmc
dec
xlat
or
add
(bad)
pop
(bad)
ror
mov
pop
xchg
pop
mov
ins
sbb
pop
lea
add
mov
rcr
or
push
sbb
(bad)
out
mov
iret
mov
push
sub
push
mov
(bad)
or
mov
mov
or
jg
int
cmp
out
sub
push
std
fsubr
(bad)
les
aad
ins
mov
pushf
lods
push
test
icebp
fnop
xchg
dec
into
inc
jge
les
xchg
sub
xor
in
loope
ins
fsub
jge
xor
fiadd
iret
sti
(bad)
push
int
clc
mov
ins
(bad)
sti
or
pop
mov
or
into
inc
lods
(bad)
cmc
dec
xchg
push
lock
push
xor
sub
fstp
loope
cs
dec
outs
or
loopne
popf
(bad)
fwait
cli
fsubrp
fst
push
in
(bad)
(bad)
dec
mov
xlat
enter
ins
ficomp
out
(bad)
pop
outs
aad
pushf
loopne
into
out
popf
fsubr
jecxz
into
fnstsw
out
cmp
xchg
mov
fmulp
lods
loopne
lods
out
dec
jecxz
scas
fild
mov
mov
pop
mov
sbb
jle
ficom
fsubrp
sbb
ret
stos
in
sahf
(bad)
iret
adc
retf
(bad)
(bad)
ror
inc
xchg
add
addr16
add
cmp
sbb
mov
loopne
into
fstp
dec
into
add
(bad)
cmc
ins
loope
outs
loope
dec
ficomp
bound
outs
cmp
xlat
mov
push
out
out
mov
popa
sahf
out
pop
in
in
fucomp
jnp
jmp
into
(bad)
jmp
shr
jmp
out
jmp
dec
out
mov
in
mov
loop
ds
ins
mov
and
in
dec
sahf
in
mov
jecxz
int
cmps
dec
out
enter
outs
(bad)
push
out
das
or
nop
sbb
dec
push
loop
lods
jmp
das
out
ins
jecxz
sbb
push
dec
ficom
jecxz
mov
mov
repnz
add
sub
sub
in
dec
aad
iret
jmp
sub
aaa
das
in
lods
out
sar
out
pop
add
adc
hlt
mov
in
lahf
jmp
scas
repz
repz
repnz
mov
push
iret
ret
fild
clc
outs
loope
scas
repz
(bad)
jmp
mov
das
outs
in
sti
int3
hlt
push
outs
loope
mov
or
call
iret
xchg
mov
clc
sti
in
cmp
hlt
outs
into
repnz
in
pop
clc
or
add
repz
out
out
(bad)
hlt
mov
in
push
scas
clc
cmp
xlat
ins
repnz
add
and
or
repnz
(bad)
cmp
out
gs
aad
outs
cli
jne
rep
outs
in
xchg
in
mov
fdiv
leave
ss
aaa
push
pop
bswap
mov
cmc
dec
aas
std
inc
das
neg
push
cli
mov
aad
(bad)
fsub
lahf
clc
mov
jecxz
jle
ret
out
sti
push
(bad)
sti
cmp
fnstcw
sti
scas
outs
icebp
gs
stc
mov
sti
out
outs
in
addr16
sub
pop
sbb
add
add
mov
adc
test
add
mov
lea
nop
or
mov
stos
xchg
test
xor
xchg
mov
mov
ret
test
scas
xchg
pushf
mov
mov
pushf
(bad)
(bad)
fld
xchg
xchg
call
lds
cmc
cmp
mov
ja
aam
jp
rcl
cmp
adc
add
test
call
test
jo
cmp
dec
xchg
mov
or
pusha
les
cmps
mov
movs
pop
or
mov
outs
rcl
jne
mov
(bad)
inc
push
xchg
frstor
jecxz
je
pop
inc
cmp
test
fcom
fbld
fild
jge
xor
loop
xor
jbe
movs
dec
fisttp
cs
in
jp
sub
sbb
fisttp
fisttp
mov
mov
popf
xor
mov
lahf
icebp
sub
idiv
xchg
mov
or
xor
and
shr
cs
dec
stos
mov
rcr
sbb
or
inc
mov
jmp
(bad)
jle
or
in
call
mov
push
dec
or
push
push
adc
pop
adc
adc
int3
jmp
popa
bound
xor
cmps
fidivr
leave
xchg
adc
call
daa
inc
mul
adc
(bad)
push
ins
xchg
sbb
test
outs
xchg
sub
dec
add
adc
movs
push
ins
add
fnstcw
cmps
push
jnp
call
add
loope
inc
mov
jecxz
or
mov
push
push
(bad)
mov
out
outs
pop
lea
mov
pop
add
pop
fwait
mov
mov
mov
jbe
adc
push
pop
jbe
nop
xchg
imul
fcomp
aas
xchg
sar
add
outs
mov
sahf
sahf
or
rol
dec
cmp
lds
dec
je
rcl
sub
cmps
pushf
outs
fisubr
cmps
add
push
movs
stos
pop
call
inc
scas
xchg
cli
ret
push
jp
movs
mov
nop
es
popa
push
pushf
jb
add
sbb
lds
jb
or
push
pushf
fidivr
mov
test
mov
dec
jb
fst
test
mov
push
inc
mov
xchg
jne
mov
add
out
jle
mov
mov
mov
mov
mov
ins
mov
push
imul
repz
pop
mov
mov
inc
xchg
mov
fwait
mov
sub
aas
imul
lods
xor
xor
and
cmp
sbb
pushf
cmp
jl
jne
into
dec
mov
iret
mov
mov
mov
dec
inc
sti
rol
pop
stos
dec
add
adc
movs
add
rcr
fst
aaa
jle
mov
or
call
dec
test
pop
pop
(bad)
cmp
out
arpl
mov
xchg
jb
or
lahf
jmp
ja
(bad)
je
(bad)
mov
add
scas
jae
mov
nop
in
xor
into
sti
retf
out
mov
jp
cld
xchg
pusha
cmp
mov
(bad)
push
fidivr
mov
and
loopne
jmp
mov
cmp
les
pop
cmp
outs
inc
cmp
add
jmp
cld
repnz
jb
jl
scas
imul
cwde
outs
jg
mov
inc
add
jg
mov
rcl
dec
jp
jnp
add
inc
dec
inc
inc
pop
add
inc
in
or
add
jmp
out
js
pushf
les
rcl
inc
add
pop
cmp
popf
shl
push
push
call
ret
lock
in
inc
adc
test
sbb
loope
scas
mov
popf
adc
inc
pop
pop
adc
xchg
and
push
pop
sbb
or
sub
pop
xchg
push
jo
and
dec
or
enter
push
jl
je
jmp
and
and
mov
nop
push
and
cli
mov
inc
test
jecxz
(bad)
addr16
jmp
mov
and
sub
xchg
test
sbb
xchg
repnz
cmps
cld
pop
sub
or
and
jecxz
xchg
retfw
repnz
mov
and
ja
retf
pop
scas
rcl
pop
pop
retf
pusha
add
xor
repz
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
jp
or
mov
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
arpl
sbb
shr
scas
bound
fs
rol
add
sbb
cmp
mov
cmc
inc
pop
sub
je
jnp
stos
push
fcomp
or
jmp
mov
hlt
arpl
stos
inc
sar
add
imul
aad
xor
(bad)
stos
mov
aam
mov
scas
lahf
cmc
push
dec
stos
xlat
ret
or
ficom
mov
stos
inc
or
lods
sbb
mov
xor
(bad)
mov
ja
adc
out
add
lock
sub
mov
mov
xlat
mov
xor
add
loop
scas
xlat
or
(bad)
out
push
stos
rol
addr16
(bad)
(bad)
mul
in
retf
mov
adc
pop
loope
xor
jle
fistp
mov
repz
lods
adc
push
mov
jge
pusha
mov
ja
sar
ins
push
cmp
mov
mov
mov
es
fistp
pop
adc
or
add
nop
pusha
and
ins
add
mov
adc
cli
mov
add
mov
add
inc
inc
or
add
fadd
cmp
dec
xor
jbe
mov
cmp
outs
and
out
shl
push
push
or
or
pop
lods
inc
xor
imul
dec
xor
xchg
xchg
xchg
or
push
fnstcw
std
retf
rcl
daa
nop
pop
pop
sub
mov
mov
fwait
into
outs
xchg
fisubr
jg
push
les
jae
fucomp
in
fadd
cmp
mov
xchg
retf
jl
je
xor
gs
pop
mov
sub
call
popf
push
ja
xor
add
int3
lods
es
push
mov
cwde
fucomp
add
loope
sti
test
add
push
pop
arpl
cmps
lods
mov
fld
out
adc
xchg
ret
mov
pop
out
add
jge
(bad)
adc
dec
pop
loop
pop
mov
ins
inc
add
sahf
ins
xchg
lea
lds
iret
mov
jl
dec
das
pop
sar
jmp
sub
pop
xchg
pusha
addr16
push
in
mov
imul
jl
inc
aaa
jne
addr16
mov
cs
pop
out
out
dec
cmps
sbb
sbb
in
pop
pop
int3
sti
lods
adc
xor
pop
fild
inc
pop
stos
or
mov
mov
rol
mov
pop
in
or
mov
xchg
fstp
shl
aad
loope
cmp
fsub
leave
dec
cld
fisttp
push
lock
or
jne
adc
xchg
and
bound
mov
push
stc
sub
cmps
xor
out
out
mov
and
fmul
sbb
shl
dec
arpl
and
out
inc
mov
fistp
and
fsubp
sti
push
fcomp
xlat
(bad)
mov
inc
sbb
jbe
inc
mov
retf
cwde
sar
or
cmp
lea
loop
in
jae
jp
push
stos
jp
(bad)
test
mov
jle
mov
retf
fistp
jle
pop
data16
jb
add
jge
xchg
jno
loopne
(bad)
outs
out
push
adc
sbb
jne
xchg
push
jp
xchg
ins
shr
jns
ss
cmps
add
jge
addr16
push
pop
lds
xlat
cmp
pop
or
mov
or
pop
cmp
push
adc
jne
mov
xor
js
ja
lds
add
outs
jecxz
jae
xchg
ins
in
jb
cmps
add
test
pop
ja
gs
imul
inc
je
sub
enter
jno
fdiv
xor
in
cmps
add
xchg
pop
push
jbe
pop
push
adc
xlat
jl
pop
(bad)
jl
push
test
and
cmps
push
or
imul
add
imul
sbb
add
mov
lods
mov
sbb
push
pop
test
addr16
jbe
sub
stos
aaa
mov
pop
out
add
aaa
pop
pop
inc
js
xchg
add
pop
xchg
js
sbb
mov
mov
push
jbe
ss
jg
pop
jbe
out
sub
add
pop
jbe
jp
xchg
mov
jnp
test
xchg
ins
mov
test
jbe
xchg
or
or
sbb
xchg
js
push
and
xchg
xchg
pop
mov
loopne
shl
hlt
and
push
pop
pop
fldcw
mov
or
or
shl
test
ins
mov
sbb
jne
data16
xchg
outs
stos
push
or
jae
dec
pop
dec
cwde
xchg
test
push
out
addr16
push
jle
inc
pop
xchg
mov
add
jnp
imul
sub
push
xchg
scas
mov
inc
cmc
pop
(bad)
mov
cmps
pop
push
jbe
dec
cmp
(bad)
mov
test
ja
pop
push
sar
pop
xchg
sti
sub
fdiv
fadd
lds
xchg
cmp
je
bound
enter
outs
in
or
enter
xchg
mov
popa
mov
out
bound
mov
(bad)
lds
dec
add
dec
pusha
lods
call
(bad)
mov
add
cwde
arpl
mov
sbb
arpl
pop
pop
ds
add
call
es
pop
loopne
imul
outs
icebp
(bad)
popa
cmp
outs
xchg
dec
xchg
pop
daa
mov
jne
jp
sub
fnstenv
or
push
add
out
loopne
push
mov
pushf
lock
push
(bad)
leave
pop
out
call
jnp
xchg
push
lds
cmp
sub
into
sbb
clc
pop
xor
movs
pop
addr16
sub
or
mov
gs
int3
or
ins
repz
xchg
movhps
gs
push
cwde
xchg
xor
jb
enter
pushf
lds
jo
push
in
stc
pop
idiv
pop
fld
movs
inc
ins
rcl
mov
push
mov
sbb
jg
div
cmps
add
test
dec
inc
xchg
cli
push
dec
mul
mov
push
mov
test
jne
dec
inc
add
mov
pop
mov
shl
movs
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
sbb
xchg
shr
jae
add
jo
add
add
cli
popf
sub
inc
mov
mov
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
mov
push
rol
and
int3
or
inc
mov
adc
test
es
mov
dec
mov
sti
mov
fild
test
mov
sub
sti
mov
cmp
mov
add
adc
loopne
mov
shr
cli
jnp
push
ins
add
mov
pushf
mov
fwait
ja
sbb
retf
add
jmp
ret
ret
mov
daa
ins
add
and
adc
jl
sub
jl
and
rol
ds
ret
xor
ret
ds
ret
mov
mov
inc
mov
dec
sub
inc
pop
lds
add
mov
add
pop
rol
push
or
inc
lock
mov
(bad)
push
(bad)
out
pop
(bad)
pop
mov
cmp
lds
add
inc
pop
(bad)
ins
or
pop
xor
loopne
cmp
mov
xor
inc
mov
inc
mov
mov
(bad)
cli
mov
or
mov
cmp
dec
loopne
cwde
lods
ret
or
inc
sbb
cmp
cmps
jmp
xchg
jl
stos
mov
sub
lods
ins
add
int3
add
sub
dec
mov
test
add
retf
pop
nop
add
leave
out
mov
call
sbb
mov
add
fmul
jp
leave
xlat
lods
xchg
adc
adc
pop
pusha
add
mov
pushf
int
pushf
ja
cld
int
sub
aam
add
iret
jmp
int
jl
cli
lods
scas
(bad)
pushf
int
int3
iret
repnz
loopne
iret
mov
leave
(bad)
mov
loope
leave
loop
xchg
jge
dec
add
mov
push
adc
rcl
sub
idiv
sti
cmp
add
rcr
cmp
push
in
sar
ror
(bad)
mov
or
iret
call
shl
iret
cmp
sar
std
into
iret
cld
leave
call
mov
sub
mov
sub
std
int3
rol
loopne
mov
add
mov
in
ror
fiadd
push
sbb
cdq
ins
shr
pushf
iret
clc
mov
cmp
add
pop
aam
sbb
rcr
dec
rol
pop
sub
int3
inc
pop
rcl
sub
jno
xlat
imul
or
jbe
(bad)
jg
aam
cmp
sbb
into
fsubr
cld
(bad)
sub
pop
lock
sbb
add
jle
xlat
jle
(bad)
push
fst
nop
sub
mov
iret
je
into
sbb
sub
mov
iret
call
sbb
or
fld
dec
fisttp
jp
ficomp
int
lods
xlat
or
ror
jge
ins
int
in
enter
movs
lods
(bad)
jmp
(bad)
xor
fcomp
in
fsubr
in
rol
in
int3
cmp
call
fld
in
lods
fild
loope
ficom
xor
arpl
out
sar
or
int3
std
(bad)
retf
cmp
adc
ror
fsub
mov
add
add
std
fstp
popf
(bad)
jge
or
add
mov
sbb
fcmovu
std
shr
loop
dec
fiadd
push
jecxz
ins
loopne
into
add
(bad)
sub
mov
pop
fmul
(bad)
fidiv
into
add
jecxz
sub
push
sahf
in
outs
fiadd
xlat
add
loop
fmulp
pop
mov
jle
in
or
push
ficom
sbb
loop
outs
shl
mov
jbe
fcomp
loop
pushf
aam
sub
icebp
mov
das
pop
loope
cmp
aad
loopne
or
mov
into
in
rol
add
fmul
sbb
out
fistp
rcl
adc
popf
jl
cmp
inc
push
fprem1
sub
xchg
aam
outs
in
std
loop
dec
(bad)
mov
(bad)
loopne
(bad)
pushf
mov
mov
fidivr
fdivr
(bad)
xchg
scas
ficomp
fnstcw
shr
out
int3
scas
rcl
into
loop
push
shl
pushf
in
aas
dec
into
inc
ds
lods
loop
push
in
cs
pop
scas
in
(bad)
(bad)
scas
out
in
sub
pusha
cs
and
jae
in
ds
loope
aam
sbb
jbe
int3
jmp
out
fadd
add
push
fistp
add
sahf
aad
outs
out
int
or
stos
push
shr
retf
(bad)
fadd
mov
call
fst
out
into
in
int3
in
popf
int3
icebp
mov
in
jle
and
in
(bad)
call
dec
add
jmp
dec
repz
out
push
jecxz
sub
add
retf
ds
inc
pop
repnz
(bad)
stos
or
jmp
mov
sub
bound
stos
sbb
loopne
into
jmp
push
hlt
sbb
repnz
push
aas
in
xlat
in
(bad)
push
paddd
or
in
jle
das
lahf
cmc
adc
jmp
or
mov
add
adc
outs
icebp
sbb
repnz
icebp
pop
iret
add
out
les
hlt
(bad)
loop
dec
out
es
xchg
lahf
in
sub
in
call
lods
fdivr
cli
jns
cli
in
(bad)
call
outs
jmp
push
add
out
out
out
add
idiv
in
jmp
icebp
iret
cld
xacquire
das
(bad)
sti
je
stc
cmp
pop
cld
ret
ins
outs
cld
sub
jecxz
lock
(bad)
cli
cmps
mov
jp
into
retf
jmp
in
push
das
in
push
ds
sub
aad
stc
fnstsw
push
mov
push
inc
stos
and
bound
ret
les
shl
sbb
test
adc
mov
imul
sbb
pop
test
mov
cmp
and
test
pop
cmp
jmp
sbb
mov
jmp
mov
jmp
int3
mov
imul
mov
pop
or
cdq
or
jl
retf
test
dec
push
pop
mov
iret
push
pop
cmp
stos
adc
push
ret
mov
jmp
xor
scas
adc
retf
aad
adc
xchg
jo
inc
inc
adc
test
cmp
bound
mov
and
ret
push
sub
inc
inc
jnp
arpl
push
sbb
jmp
stos
inc
push
mov
fcmovnb
add
pop
popa
lea
xlat
nop
scas
xor
inc
hlt
sub
ficom
ret
stos
test
ins
lds
mov
icebp
pop
mov
push
jge
in
sbb
mov
pop
jae
xchg
popa
stos
ror
fbld
hlt
(bad)
(bad)
mov
adc
adc
xor
mov
out
data16
or
pop
push
mov
lds
or
imul
pop
int
pop
addr16
dec
cdq
mov
movs
mov
mov
fdivr
mov
push
push
loop
(bad)
pop
popa
ja
(bad)
mov
popa
sbb
popf
pop
sbb
xchg
add
mov
push
ins
leave
cmp
jmp
add
push
mov
xchg
push
movs
rcl
out
test
dec
aaa
retf
add
shl
das
je
mov
and
fwait
mov
push
movs
mov
and
shl
sbb
fwait
je
mul
ins
jmp
add
pop
pop
xchg
mov
inc
ficom
mov
aad
data16
inc
xchg
jl
sbb
push
jb
mov
aam
sahf
retf
addr16
and
test
mov
sub
xchg
lds
inc
stc
mov
adc
call
mov
jo
ret
push
dec
dec
shr
les
retf
xchg
inc
loope
cmps
xchg
in
and
xor
sub
mov
mov
and
fbstp
adc
sbb
jne
mov
sbb
lods
and
js
sbb
or
sbb
dec
icebp
cli
pop
imul
pop
lahf
js
loop
or
mov
fist
mov
retf
dec
push
scas
xchg
(bad)
mov
scas
and
(bad)
addr16
test
imul
xor
enter
push
cmp
ins
sbb
(bad)
xor
dec
add
pop
mov
mov
mov
jae
mov
inc
aaa
adc
xchg
mov
jo
add
jae
dec
mov
(bad)
push
shl
jb
pop
push
xor
jb
sub
idiv
ja
iret
push
ins
ror
dec
adc
add
adc
xor
pop
jmp
stc
loop
adc
xor
dec
mov
jbe
jae
scas
repnz
test
std
jmp
or
les
not
das
cwde
cli
mov
push
scas
jl
call
in
test
outs
jbe
xchg
jp
movs
stos
into
not
aas
das
xor
mov
sub
add
out
stos
pop
mov
fsubr
in
jnp
fist
ins
hlt
jmp
dec
std
mov
mov
fdivrp
fmul
xchg
cs
dec
(bad)
mov
sub
icebp
iret
push
in
(bad)
cmp
(bad)
pop
call
stos
jecxz
in
or
jge
or
or
test
jle
pop
or
pop
fldcw
xchg
in
dec
pop
mov
int
cdq
ss
push
sub
pop
xchg
jmp
sub
in
ja
jecxz
add
aam
stc
cwde
or
and
loop
ror
adc
daa
mov
add
sbb
das
xor
or
dec
adc
loope
push
push
xchg
push
jge
arpl
sbb
xchg
add
imul
ret
out
sub
aas
jp
mov
push
call
and
movs
retf
mov
mov
and
movs
cbw
pop
sahf
scas
pop
data16
dec
xchg
ret
call
push
das
js
(bad)
sub
jae
pushf
and
test
out
ja
adc
xor
and
retf
out
lock
push
xchg
out
and
repz
jo
pop
jb
ins
push
aam
aaa
xrelease
fs
cmp
jbe
nop
mov
mov
daa
cwde
repz
cdq
int3
stos
add
push
cmp
jno
xor
cmp
aaa
xchg
imul
cld
cmps
jmp
call
dec
daa
sub
xor
fisttp
xor
aaa
or
cmp
retf
jnp
push
add
adc
push
add
mov
mov
stc
(bad)
xor
jmp
sub
div
or
add
mov
call
mov
out
dec
out
mov
xor
sbb
(bad)
jle
lods
ja
out
adc
mov
inc
jge
inc
cmps
call
scas
leave
pop
sbb
or
lods
outs
in
adc
or
sbb
mov
mov
mov
call
adc
dec
call
mov
push
(bad)
loop
mov
sbb
add
mov
push
sub
fild
mov
sub
pop
lods
jp
out
push
mov
or
add
mov
je
sub
rcr
arpl
mov
jne
jno
pop
test
mov
imul
add
rol
sub
dec
lock
cmp
jo
push
or
pusha
add
and
xor
pop
test
sbb
scas
mov
lods
pop
mov
mov
xor
sbb
add
ret
add
or
pop
inc
cwde
mov
ffree
jbe
call
jae
loopne
arpl
xor
mov
(bad)
and
mov
jno
imul
jns
ins
xor
(bad)
mov
or
cld
cdq
or
ret
nop
rcl
mov
xchg
(bad)
int3
gs
jg
mov
xor
ffree
cli
clc
add
(bad)
xlat
dec
pop
mov
cmp
or
pop
mov
sub
ja
push
hlt
adc
cmp
lods
(bad)
xchg
jl
ds
and
xor
dec
mov
inc
adc
xchg
cmps
and
xor
xor
jge
repz
jbe
mov
cmps
ror
xor
dec
xchg
ss
(bad)
mov
mov
arpl
mov
ret
ss
scas
hlt
push
sbb
push
push
pop
retf
enter
fucomp
fsubr
(bad)
sti
push
xchg
pop
clc
and
pop
(bad)
fstp
mov
xor
inc
or
mov
iret
mov
in
repz
or
(bad)
fnstenv
idiv
mov
mov
jmp
xchg
sbb
mov
xchg
sbb
and
inc
ret
sar
and
call
sahf
jo
dec
fmul
or
icebp
add
neg
dec
sbb
cmp
js
fs
ins
add
fsub
pop
(bad)
mov
sub
ja
(bad)
xlat
int
(bad)
pop
adc
dec
enter
push
test
out
cmp
(bad)
dec
jmp
jne
mov
in
push
xor
test
(bad)
sbb
mov
inc
js
int
add
and
add
fist
or
mov
(bad)
fwait
pop
lock
xor
pop
jmp
add
(bad)
and
jne
(bad)
sbb
sti
(bad)
ds
push
popf
jmp
or
into
(bad)
test
pop
in
pushf
xlat
inc
rol
sub
and
mov
in
push
ja
(bad)
push
stos
jle
mov
fsubr
test
xor
in
sahf
lock
mov
add
cmp
fdivr
scas
ja
mov
mov
repz
cli
mov
test
sub
(bad)
in
outs
mov
push
xor
pop
xor
jno
daa
jns
daa
jp
xchg
aaa
jp
daa
add
ror
(bad)
in
push
push
pusha
inc
ja
sbb
bound
push
mov
add
jne
sbb
aas
xchg
add
or
add
jns
mov
mov
or
jl
test
jbe
xchg
cmps
push
sub
push
and
imul
or
(bad)
cmp
jl
pop
adc
cmp
jnp
idiv
xlat
imul
push
mov
pop
push
cs
sbb
and
pop
loopne
imul
dec
xchg
add
add
add
rol
test
ror
add
jo
daa
jbe
cwde
jle
cmp
jne
jo
(bad)
rol
adc
test
mov
dec
add
xchg
xchg
hlt
add
or
or
pop
or
mov
test
ja
sub
adc
mov
ja
pop
jnp
xchg
test
fs
dec
rol
jo
clc
jle
clc
jno
push
pop
or
in
push
dec
xchg
xor
pop
mov
jno
adc
mov
sbb
jp
enter
mov
cmp
imul
jns
test
out
push
lods
cmc
mov
adc
or
or
push
mov
and
(bad)
and
(bad)
and
xchg
pusha
and
jmp
out
clc
add
fnstenv
xchg
out
pop
addr16
in
fcom
pop
mov
add
xchg
mov
out
cwde
jne
dec
xchg
out
sbb
nop
mov
ja
test
or
mov
xchg
loopne
sbb
xchg
mov
xchg
leave
pop
mov
xchg
pop
mov
adc
xchg
add
mov
mov
push
jns
jp
xchg
sub
add
mov
inc
pusha
dec
mov
call
and
mov
jo
pop
cwde
jecxz
xchg
test
xchg
sub
dec
sub
jmp
pop
inc
xchg
sbb
call
mov
mov
xchg
xrelease
jmp
mov
(bad)
push
add
leave
xchg
or
mov
mov
push
cmp
enter
(bad)
dec
cdq
jle
rol
xchg
xchg
pushf
or
mov
xchg
pushf
inc
stc
xchg
fcomp
div
cmp
mov
or
test
xchg
dec
rcr
pop
mov
fst
in
xor
pop
test
imul
sbb
xchg
inc
imul
mov
jns
test
ja
or
cmp
xlat
xchg
scas
mov
push
or
inc
xchg
scas
or
xchg
mov
mov
fsubr
dec
ja
cmp
ja
pop
movs
jle
xchg
dec
adc
leave
xchg
pop
mov
daa
cli
pushf
pop
mov
ret
jns
mov
lea
jmp
xor
test
fwait
sub
push
stos
movs
pop
mov
inc
jo
in
xchg
ins
leave
xchg
fidivr
mov
mov
jo
popf
and
sbb
cmp
leave
xchg
xchg
sbb
outs
dec
rcl
mov
in
inc
cmp
jmp
movs
fistp
popf
or
mov
or
test
(bad)
cli
test
loopne
cs
ja
or
jns
jl
fwait
outs
stos
mov
jns
dec
retf
js
and
cdq
jmp
pushf
rcr
xchg
repnz
fstp
stos
mov
lahf
xchg
dec
movs
xor
stos
sbb
cwde
fstp
stos
xchg
push
fst
jp
and
lods
and
cwde
ins
or
or
pusha
and
mov
mov
cwde
cmp
cmp
jmp
xchg
sbb
cwde
sahf
sbb
call
xchg
std
pop
mov
movs
and
sub
call
xchg
cli
lods
popf
stos
lahf
push
jmp
scas
xchg
fldenv
jp
fnstcw
cmp
test
mov
(bad)
cmp
jge
mov
pop
mov
pop
lods
pop
fist
cli
stos
adc
xchg
nop
out
out
dec
scas
in
mov
sbb
cmps
or
std
sub
mov
imul
and
sbb
stos
fwait
mov
mov
leave
add
mov
push
stos
push
(bad)
xchg
and
cmps
retf
sbb
stos
sbb
(bad)
add
rol
jmp
xchg
and
jp
push
pop
and
adc
sahf
or
dec
mov
sti
mov
lock
mov
mov
mov
xchg
jno
mov
pop
mov
mov
mov
call
aad
mov
mov
cdq
mov
pop
xchg
push
imul
lods
mov
mov
retf
retf
mov
mov
jmp
mov
pop
add
sti
or
(bad)
xchg
ret
scas
jnp
imul
xchg
fldcw
movs
and
test
retf
popf
jne
mov
mov
aad
mov
dec
mov
mov
les
add
test
jmp
inc
add
sbb
add
xchg
stos
mov
dec
stos
or
cld
lods
icebp
or
inc
add
loopne
repz
ror
mov
mov
mov
scas
(bad)
sub
retf
cdq
ret
into
dec
mov
cld
stos
clc
stos
xchg
leave
sti
mov
retf
ins
mov
xor
stos
pop
shl
lds
fstp
lods
movs
adc
jmp
xor
(bad)
(bad)
sti
mov
fiadd
or
fiadd
inc
add
int3
ret
ins
sbb
repz
in
mov
jmp
pop
fcmovnb
retf
dec
cld
mov
mov
add
retf
mov
stos
scas
aas
lock
pusha
(bad)
js
movs
pop
dec
mov
mov
mov
jne
retf
mov
cmp
pop
fistp
or
push
add
inc
add
cmp
pop
pushf
mov
dec
fwait
test
or
or
pop
stos
sub
int3
mov
ror
pop
mov
cmp
inc
(bad)
mov
mov
ins
mov
into
fcomp
cmp
sbb
mov
jmp
ins
(bad)
mov
mov
loopne
retf
mov
(bad)
mov
xchg
cli
fmul
ret
pop
jnp
mov
mov
pop
leave
inc
xor
sbb
es
sbb
ret
hlt
ins
into
ss
pop
add
mov
pop
lods
scas
dec
mov
cmps
sub
inc
loopne
(bad)
lods
int
jmp
shl
into
mov
leave
(bad)
sub
pop
popf
iret
(bad)
in
shl
aam
jnp
jmp
jge
and
mov
sbb
das
jge
xlat
cmp
repz
aam
or
push
shl
ror
or
and
xlat
cmps
mov
pop
pop
int3
cmp
jae
int3
sbb
adc
js
iret
ins
int3
mov
ins
mov
test
sbb
fcom
rcr
stos
add
push
lods
mov
pop
add
xchg
gs
inc
cmp
inc
add
jmp
sbb
add
pusha
ins
(bad)
cmp
mov
mov
in
fadd
ins
retf
lds
retf
loop
fadd
aam
stos
(bad)
adc
rcl
lods
(bad)
lods
mov
jo
fisubr
(bad)
out
lods
fldcw
fcom
fst
retf
(bad)
ins
dec
mov
or
xor
or
or
stos
fcmove
sbb
call
shr
ins
retf
loopne
sbb
jnp
(bad)
cmp
fisttp
add
add
ins
int3
add
(bad)
pop
(bad)
sbb
cmps
fcmovnu
mov
mov
xchg
push
lock
int
in
loopne
sbb
(bad)
cwde
mov
xchg
add
mov
(bad)
fsub
cmp
adc
in
in
cmp
loop
fdivp
cld
fld
(bad)
fdiv
fild
pop
mov
(bad)
fistp
mov
ror
out
loopne
dec
(bad)
push
fnstenv
call
shl
in
fdivr
fsub
lods
in
std
out
jle
rcr
outs
fcomp
pop
fnsave
call
cmp
xchg
pop
iret
add
loope
lods
in
cmp
ss
fild
(bad)
fiadd
mov
dec
or
imul
dec
push
(bad)
push
jmp
jge
push
pop
fisubr
in
dec
loopne
mov
outs
push
loop
push
call
(bad)
fsubr
outs
in
ds
mov
and
jecxz
mov
inc
mov
fstp
jecxz
sbb
enter
push
in
fsubp
fdivr
in
(bad)
mov
cs
in
xchg
cmp
jns
in
ds
mov
in
outs
out
pop
out
out
int3
(bad)
out
ins
outs
in
(bad)
out
lods
call
fsubrp
cmc
push
out
dec
out
out
out
sbb
mov
add
inc
add
mov
sub
icebp
rcr
lock
mov
mov
ror
mov
mov
outs
(bad)
call
repnz
pop
test
mov
jmp
fiadd
pop
out
push
in
loop
loopne
push
add
in
mov
out
pop
jmp
inc
dec
jmp
ds
cmps
mov
fs
dec
jg
loopne
loopne
jge
and
loope
jge
inc
call
pop
into
hlt
mov
in
enter
scas
iret
dec
(bad)
leave
outs
in
sbb
in
jnp
iret
mov
hlt
outs
aas
into
push
out
in
fsubp
and
in
dec
aas
in
out
clc
repnz
in
cmp
test
pop
or
pusha
repnz
hlt
jb
clc
es
test
add
cli
push
icebp
daa
jg
or
jns
repz
cli
mov
mov
jg
repnz
mov
hlt
mov
div
jecxz
pop
in
push
out
clc
dec
fcomip
(bad)
dec
stc
push
iret
icebp
pop
pop
loope
dec
hlt
xchg
aas
repz
cli
clc
mov
leave
sahf
sti
test
out
jecxz
cmc
and
(bad)
mov
idiv
cmp
into
das
sti
cmp
es
sbb
add
add
sbb
xchg
mov
cwde
pop
mov
mov
mov
test
xchg
movs
movs
test
test
mov
adc
ret
popf
mov
mov
rol
pop
push
rol
ficom
mov
xchg
call
xchg
mov
(bad)
xchg
int
xchg
test
cmp
xchg
in
sahf
mov
or
loope
jle
sbb
sub
jmp
mov
test
mov
xchg
seta
imul
sub
mov
rol
(bad)
call
sbb
outs
sbb
lock
js
daa
adc
jbe
leave
mov
in
imul
push
icebp
push
xor
test
sbb
fwait
sbb
mov
xor
sub
stos
adc
dec
(bad)
lods
pop
mov
jge
mov
test
and
xchg
xchg
xchg
cdq
outs
fs
or
ss
mov
repnz
add
jo
(bad)
cdq
inc
imul
pop
sti
mov
int
sbb
cld
call
mov
push
jecxz
inc
mov
adc
movs
fdivrp
(bad)
js
jmp
adc
lods
mov
pop
test
add
jb
outs
(bad)
sti
ss
iret
cmps
jo
cmp
mov
ins
jbe
dec
lods
xchg
cmps
pop
outs
add
push
clc
sahf
inc
add
test
adc
and
adc
lock
loope
int3
enter
aad
call
repz
mov
movs
hlt
pusha
xchg
fcomp
pop
adc
mov
in
cmp
mov
jno
and
(bad)
add
jbe
add
rcl
test
pop
adc
popa
popa
add
rcr
xchg
add
pop
xchg
add
jp
loop
add
sbb
add
or
bound
add
mov
xchg
sbb
mov
les
cmp
rol
add
icebp
inc
pop
(bad)
sub
dec
and
mov
lods
and
jmp
mov
sbb
ins
call
jbe
stos
test
test
add
lods
scas
(bad)
mov
dec
mov
ss
push
ror
inc
scas
out
sub
sbb
pop
test
add
mov
mov
mov
add
cmps
mov
cmp
add
imul
mov
sub
mov
sbb
sub
test
dec
sti
rol
adc
out
push
push
into
stos
jo
sbb
push
inc
adc
add
bound
inc
retf
jp
shl
or
mov
cmp
lock
call
adc
or
lea
jae
push
xlat
int3
adc
jmp
jno
sahf
mov
cli
mov
imul
and
inc
add
sbb
cmp
shr
es
es
shl
mov
fidivr
mov
addr16
int
or
pop
pop
je
inc
jl
repz
mov
fucom
lahf
mov
jge
pop
jp
and
cs
push
adc
jne
mov
or
jmp
mov
sti
into
mov
cmp
retf
jns
sub
push
mov
inc
js
cmp
mul
neg
scas
mov
mov
jne
loope
mov
scas
fwait
ror
mov
call
xor
sbb
ja
retf
add
inc
cmps
add
jne
dec
pop
jmp
add
cmp
(bad)
hlt
push
ds
out
and
push
xor
add
inc
loopne
je
ror
and
leave
out
jns
imul
pop
sub
sub
and
dec
pop
inc
pop
xchg
jo
fsub
or
adc
push
lods
sbb
mov
and
mov
or
mov
sub
lods
mov
pop
mov
mov
mov
cmp
adc
(bad)
sbb
scas
lea
inc
push
(bad)
cwde
inc
xor
dec
add
mov
icebp
add
loope
int3
pop
movs
inc
repnz
lock
int
inc
pop
adc
adc
mov
ins
mov
mov
jg
movs
adc
cmp
adc
es
cmp
aaa
mov
xchg
scas
fsub
into
xchg
xchg
fwait
test
sub
push
nop
mov
cmps
xor
repz
enter
jne
int3
add
xchg
cdq
int3
mov
xor
int
pop
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
ds
add
pushf
aam
ins
and
test
xor
adc
add
stos
push
lods
jge
sub
xlat
mov
sbb
push
mov
loopne
dec
and
scas
adc
push
xchg
inc
push
mov
and
fmul
xchg
je
mov
stos
pop
mov
mov
jp
in
push
icebp
sbb
mov
lods
scas
movs
in
popa
adc
retf
mov
gs
aad
pop
mov
sbb
pop
mov
loope
shl
push
xchg
push
xchg
mov
popf
or
pop
mov
jge
outs
repz
dec
in
jbe
push
sar
lods
jb
retf
xchg
adc
jo
cmp
out
je
out
jge
popa
xlat
stos
(bad)
mov
push
out
jmp
shr
pop
stos
ret
or
rcl
mov
mov
mov
lods
mov
xor
aaa
mov
dec
mov
jbe
ret
adc
xor
cli
bound
cs
jg
in
or
inc
or
cmp
adc
jno
xor
jecxz
xchg
sbb
loope
pusha
jmp
add
inc
adc
add
push
add
retf
cmp
repz
ins
pop
push
scas
xchg
mov
push
in
mov
mov
ins
in
in
pop
shl
or
sub
add
(bad)
or
in
nop
in
or
inc
aaa
mov
mov
pushf
popa
mov
mov
and
sub
mov
adc
xor
retf
cmp
ins
repnz
fnsetpm(287
in
call
adc
inc
mov
aad
data16
dec
pop
popf
fisttp
xor
jae
mov
mov
jns
add
cmps
test
sbb
pop
ficom
scas
imul
add
jmp
cmp
shr
lods
ins
dec
sbb
sub
mov
cmps
pop
call
outs
fidiv
or
call
fucom
adc
jle
pop
xor
adc
dec
hlt
jo
std
jmp
fdiv
mov
ds
jne
in
(bad)
mov
call
popa
jmp
scas
ins
pusha
add
clc
mov
in
ja
leave
ins
test
jle
ja
adc
scas
pop
rcr
dec
jbe
ins
out
in
retf
cmp
mov
stc
int
stos
test
sbb
repz
fs
jmp
fisttp
mov
sub
shl
xchg
mov
push
sti
and
sub
test
xor
in
addr16
stos
mov
mov
jg
or
fild
cmps
push
dec
hlt
mov
cmc
fdivp
push
jl
or
or
int
cld
fmul
cmp
mov
sub
jbe
adc
jg
int
mov
mov
push
pop
sbb
scas
outs
cli
jmp
inc
mov
or
pop
shl
cmp
jmp
aas
add
into
sub
jge
popa
add
jl
sbb
mov
add
pop
jns
cmp
inc
nop
pop
std
fs
ds
xchg
xor
pop
or
cmp
push
dec
out
jmp
jmp
(bad)
in
ins
xchg
out
mov
jb
gs
xor
xor
push
adc
rol
inc
jge
ja
jmp
imul
fnsave
sbb
jbe
push
push
sub
jnp
cmps
outs
shl
adc
daa
jp
addr16
mov
xor
add
push
int3
push
jge
fcomp
sbb
das
test
dec
xchg
push
and
jbe
(bad)
jo
push
jns
pop
adc
push
add
outs
repnz
hlt
ja
sbb
mov
pop
xchg
ins
push
outs
ret
push
jne
sbb
xchg
xchg
jb
call
mov
push
std
cmps
inc
inc
xchg
cmp
imul
lock
adc
xchg
fs
data16
js
push
aaa
or
arpl
sub
sub
or
test
push
and
cmp
imul
or
js
pop
je
inc
mov
fcom
cmps
jnp
mov
add
adc
jg
lds
pop
push
sbb
data16
jno
mov
mov
jo
add
jl
xlat
arpl
adc
jl
(bad)
jg
push
push
clc
imul
pop
mov
shl
xchg
test
call
lods
sub
ja
mul
fs
jns
jp
aaa
(bad)
shl
out
push
cmp
jne
pop
xchg
(bad)
pop
inc
test
and
ins
dec
pop
jge
xchg
push
sar
jbe
add
pop
or
sub
bound
mov
xchg
test
cdq
jnp
out
xchg
outs
sbb
jg
xchg
xchg
hlt
pop
adc
jp
aaa
add
jl
out
lea
outs
ins
daa
xchg
mov
pop
out
xchg
mov
push
jbe
push
or
mov
outs
xchg
xchg
js
sub
call
push
data16
jp
push
cmp
push
lds
pop
mov
pop
sbb
shl
repnz
in
clc
jbe
in
sti
lds
mov
daa
jbe
mov
jbe
test
dec
push
xchg
push
xchg
push
(bad)
pop
jge
fld
mov
adc
xlat
cmp
js
or
ja
mov
dec
jo
dec
es
mov
dec
push
jge
in
inc
adc
js
mov
pop
mov
sub
fs
push
call
add
fwait
inc
pop
mul
scas
xor
push
adc
jp
popf
(bad)
mov
push
mov
std
push
test
jmp
sbb
pop
gs
movs
add
call
popa
call
(bad)
(bad)
jg
imul
xchg
and
pop
jmp
push
mov
repz
test
fild
jg
pop
sti
stc
pop
add
test
pop
jl
push
outs
rcl
add
in
jg
imul
sub
jg
js
cmps
add
xchg
xchg
retf
out
sub
mov
movs
cmp
xchg
inc
shl
mov
mov
pop
mov
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
pusha
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
push
add
data16
adc
cs
jle
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
push
dec
push
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
or
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
cs
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
dec
dec
push
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pop
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
mov
xchg
sbb
xchg
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
std
add
xor
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
pop
rcl
stos
add
stos
xchg
sbb
lods
out
sub
mov
daa
adc
imul
movs
mov
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
sub
mov
mov
repz
mov
loopne
scas
or
scas
mov
add
mov
or
mov
loope
mov
jp
adc
mov
dec
xchg
xchg
addr16
stos
add
lock
sub
mov
sub
lods
inc
sti
xchg
xor
leave
dec
scas
xor
add
retf
mov
sub
or
jmp
pop
retf
scas
cli
or
call
xchg
pop
fist
cmps
jno
mov
sti
xchg
pop
push
mov
xor
cmp
or
(bad)
(bad)
mov
dec
add
mov
jge
mov
mov
xor
mov
mov
or
mov
mov
retf
mov
imul
mov
imul
mov
or
fldenv
imul
mov
rol
rol
and
ret
test
or
push
adc
loope
mov
dec
mov
fstp
cli
mov
add
sbb
mov
sti
mov
sub
pushf
fwait
stos
(bad)
jmp
dec
add
loopne
mov
add
nop
mov
mov
mov
mov
sti
mov
stos
add
jmp
rcr
rcl
mov
jl
sbb
stos
push
mov
cld
sti
add
(bad)
mov
dec
pusha
add
mov
and
shl
mov
add
cld
scas
inc
loopne
pop
lods
ret
cmp
ret
xor
jp
dec
lods
mov
or
aaa
inc
rcr
dec
sub
adc
add
jp
out
push
pop
mov
pop
lods
xchg
add
jl
popa
cmp
pop
fadd
push
xor
loopne
ds
pop
and
inc
jo
pop
push
add
(bad)
mov
(bad)
scas
sbb
cli
retf
and
or
mov
cmp
dec
add
mov
ret
enter
adc
das
sub
jae
mov
pushf
enter
jl
add
jl
pop
fadd
mov
cmp
mov
retf
retf
add
retf
retf
pop
sub
mov
mov
cmp
mov
add
retf
jp
enter
sub
add
mov
push
push
add
mov
sub
int3
lds
sub
les
cmp
fnstcw
mov
retf
jmp
int3
into
loop
mov
in
enter
shr
enter
sti
ins
add
int
mov
out
pop
add
or
add
rol
sub
out
shr
cmp
repz
or
mov
fmul
adc
enter
imul
iret
jp
sar
cmp
ret
mov
sbb
fcomp
aam
shl
(bad)
in
shr
std
int
in
enter
adc
or
inc
sub
adc
cld
ins
add
stos
add
int3
sbb
jge
rcr
jae
enter
jmp
aad
in
add
aad
cld
shl
mov
fstp
pop
ins
shl
mov
leave
lods
aam
cmp
pop
lods
int
in
aad
pushf
aad
sbb
dec
cmp
rcr
pop
in
(bad)
sub
aam
lods
(bad)
cmp
jne
aad
mov
mov
shl
int3
enter
xchg
std
int
pop
rol
iret
push
in
rol
fst
fstp
aad
int
jg
add
jmp
mov
fcom
or
mov
add
stos
stos
lods
add
int
ja
shr
ficomp
into
xor
mov
xlat
imul
int3
popf
int3
pop
popf
fdivr
mov
lods
lea
mov
fdivr
(bad)
jl
pop
mov
mov
(bad)
mov
jbe
enter
fsubr
iret
shr
scas
pop
rol
fst
adc
ficom
sahf
std
fnstenv
fsubrp
mov
retf
add
sti
cld
iret
xor
into
movs
ins
(bad)
dec
fcomp
add
fld
cs
test
lock
rcr
std
fsub
fadd
into
fimul
push
int
sahf
int3
dec
or
or
int3
(bad)
iret
sub
sar
mov
ss
in
loop
adc
sub
cs
enter
add
mov
(bad)
fcmovne
aam
std
int
in
shl
fisubr
(bad)
pop
scas
loopne
(bad)
loope
lods
loop
dec
(bad)
pushf
(bad)
dec
into
lds
mov
out
into
rcl
aam
int3
(bad)
ds
scas
dec
fmul
sar
mov
mov
(bad)
cmp
and
mov
in
into
aad
dec
in
jl
cmp
call
push
fiadd
jp
fimul
into
push
fnstsw
adc
in
ins
in
fsubrp
xchg
into
fimul
fldcw
aad
ds
fcompp
out
in
sahf
iret
jp
retf
mov
out
into
add
jmp
push
jle
sar
cs
int
xor
jecxz
lods
out
(bad)
loope
ds
fidivr
(bad)
mov
adc
loope
dec
into
pop
outs
loope
int
in
pop
int
sbb
dec
int3
mov
shl
in
mov
stos
pop
adc
push
ins
loope
in
in
int
rcr
aas
stos
pop
lock
push
loope
int
(bad)
jle
(bad)
in
aad
fmul
out
or
(bad)
pop
out
fistp
xchg
sahf
jecxz
push
jmp
jle
cmp
add
lods
dec
fsubrp
sahf
iret
shr
mov
enter
icebp
jle
ins
(bad)
xlat
xchg
outs
in
mov
ds
fiadd
stos
(bad)
(bad)
in
fdivp
cli
push
in
pop
jle
jnp
lock
sub
adc
neg
outs
cmc
pop
pop
out
and
cmps
jle
inc
outs
fucomp
ds
int
push
sahf
in
mov
icebp
jl
call
adc
add
loopne
scas
neg
fdivrp
dec
icebp
inc
out
add
idiv
shl
mov
loope
(bad)
ficom
out
aaa
das
cmc
pop
lahf
not
jmp
out
cmc
out
in
mov
(bad)
sti
mov
pusha
fcomip
or
paddsw
repz
mov
lods
jg
std
into
cmc
cmps
(bad)
cmp
cli
mov
add
retf
mov
iret
mov
add
scas
cli
and
stc
mov
fldenv
sti
mov
icebp
dec
out
add
loopne
mov
xchg
in
(bad)
(bad)
fcomip
sub
mul
das
int
jmp
test
clc
imul
jo
mov
add
mov
xor
mov
push
inc
pusha
mov
arpl
jecxz
loope
je
fcomp
mov
or
mov
enter
test
cmp
sbb
pop
jp
pop
test
or
and
call
sbb
jmp
test
xchg
jp
sub
cmp
fldcw
sbb
sti
mov
push
cmp
jge
mov
mov
jl
test
jmp
sbb
dec
sub
leave
fisub
int3
fwait
cmp
push
inc
xchg
scas
popf
movs
ins
mov
call
ficom
movs
inc
(bad)
sahf
xor
mov
mov
sub
cmps
dec
clc
sbb
add
xlat
ds
cmps
jo
jae
loop
or
movs
inc
inc
fwait
popa
je
int3
cmps
cmp
test
lods
gs
lods
mov
rcl
movs
xchg
ins
cmp
pop
pop
ss
popa
jge
jmp
je
cmc
cmps
fsub
ins
dec
xchg
aad
dec
mov
les
xchg
sub
mov
popf
sub
or
jecxz
adc
imul
popf
mov
mov
fmul
inc
out
lahf
inc
mov
test
adc
fstp
add
dec
adc
movs
ins
mov
adc
jp
(bad)
sahf
or
(bad)
imul
sbb
je
push
add
xchg
push
fucomp
mov
mov
jns
mov
sub
outs
cmp
cdq
mov
cs
fld
inc
(bad)
jae
cmps
fs
es
or
sub
mov
mov
dec
mov
pop
mov
mov
dec
or
cmp
xchg
mov
and
adc
rcl
push
pop
xor
mov
loop
cwde
popa
(bad)
dec
ss
inc
fist
xchg
mov
stc
sbb
aaa
clc
test
nop
or
fimul
pop
xchg
cdq
mov
call
dec
pop
sbb
sub
leave
sahf
sbb
add
xchg
mov
xchg
and
aam
push
jbe
pop
push
dec
mov
loope
loopne
gs
lds
add
ins
ror
mov
test
stc
inc
sub
cmps
mov
sub
mov
inc
and
sub
movs
stos
mov
xchg
sar
mov
(bad)
jns
pushw
call
mov
and
test
sub
scas
xlat
sub
shl
pop
call
xchg
mov
cs
fs
mov
enter
fs
xor
pop
sub
and
cwde
out
test
pop
rcl
mov
stos
xchg
pushf
pusha
sub
cli
push
imul
hlt
mov
jb
sbb
mov
nop
mov
sub
xchg
jmp
(bad)
mov
mov
ins
jns
and
iret
mov
mov
cmp
cmps
cmp
pusha
jae
adc
popf
mov
dec
push
in
fist
lds
data16
fst
addr16
in
push
pushf
mov
sub
mov
(bad)
lods
pop
adc
(bad)
sub
inc
aas
call
(bad)
mov
inc
outs
enter
adc
scas
mov
int3
jl
jl
fdiv
dec
and
enter
jle
push
xor
in
cmc
fdivr
(bad)
jp
imul
in
cdq
xor
adc
mov
out
xor
jb
cmp
stos
mov
mov
lahf
outs
lahf
mov
leave
xchg
sahf
hlt
lds
scas
cmp
fcom
inc
in
sti
icebp
adc
adc
jl
jge
loope
xchg
or
imul
cmps
push
inc
scas
or
push
(bad)
mov
pop
push
pop
iret
int3
pop
mov
and
xor
push
mov
test
std
xor
in
jne
imul
aam
cpuid
pop
stos
mov
sub
sbb
push
pop
cmp
retf
pop
retf
add
and
xor
mov
mov
lahf
xchg
int
movs
stos
rcl
dec
jo
add
fist
mov
xchg
mov
inc
cwde
jecxz
sub
loope
test
inc
test
mov
or
mov
pop
lock
pop
int
mov
or
fstp
push
adc
inc
cmp
dec
sbb
es
je
ins
test
adc
retf
xor
push
out
mov
inc
inc
xor
mov
ins
jne
xor
sbb
sbb
lea
mov
mov
sbb
shl
iret
jnp
test
arpl
adc
popa
and
shr
dec
sub
dec
xor
jns
in
pop
in
mov
and
cmp
jno
mov
fist
mov
push
mov
jae
push
and
dec
enter
xchg
push
scas
pop
mov
mov
ins
les
mov
mov
adc
gs
jmp
mov
cmp
ror
jge
jl
cmp
fcom
inc
xchg
cwde
loop
sub
inc
mov
xchg
mov
mov
or
and
fdivrp
mov
push
lahf
loop
xchg
sub
cmp
mov
push
push
or
shr
jg
dec
cmps
loopne
out
imul
ret
sbb
inc
dec
aam
jl
pushf
std
jmp
add
nop
jns
test
push
(bad)
mov
mov
sub
jo
push
and
leave
push
mov
jne
jo
jmp
in
mov
lea
rcl
imul
retf
xchg
add
mov
pusha
adc
mov
shl
add
dec
pop
(bad)
lods
outs
jae
(bad)
mov
(bad)
mov
jbe
test
xor
mov
enter
xchg
add
call
sub
or
mov
push
xor
rol
mov
or
pusha
pop
cld
and
out
fwait
pop
sbb
xlat
push
das
rol
icebp
test
xchg
ins
jne
or
rcl
push
adc
das
test
fcmovnu
(bad)
test
out
pop
loopne
sub
ret
inc
jge
cld
add
push
clc
add
das
sub
add
push
scas
jnp
cmp
or
stos
or
lods
ja
xor
and
push
xor
sub
push
fld
into
cmc
xor
dec
pop
push
mov
pop
adc
cdq
or
pop
in
sbb
xchg
jnp
dec
in
adc
retf
mov
pop
mov
cs
(bad)
fucomp
icebp
ja
sti
aad
mov
ret
in
in
xor
cdq
pop
inc
add
mov
iret
jg
inc
adc
stc
retf
mov
jo
pop
mov
jg
inc
add
sar
jno
sbb
in
arpl
mov
sbb
xchg
mov
mov
lods
jnp
int3
pop
jg
mov
jmp
and
mov
or
std
out
les
ror
lods
add
pop
mov
fcomp
ja
push
out
xor
outs
iret
fidivr
ds
inc
cmp
dec
push
lock
pop
jecxz
fsub
inc
sbb
add
aad
ja
in
(bad)
out
jne
mov
mov
(bad)
jnp
sbb
scas
ret
out
xchg
pop
fcom
fs
or
add
ins
cmp
jl
inc
mov
jno
pop
pop
loope
xchg
aaa
jns
pop
xor
or
pusha
and
stc
in
dec
jns
mov
sbb
cmp
mov
mov
pop
jae
adc
adc
dec
enter
pusha
test
xchg
mov
add
je
psubq
test
cmc
scas
stos
mov
aad
mov
in
imul
shl
std
or
jnp
mov
test
sbb
add
aaa
loopne
jg
xlat
in
mov
ficomp
dec
xchg
loop
inc
test
std
in
pop
addr16
cmp
sbb
cmp
fucomp
jno
push
popf
jmp
or
push
mov
jp
fild
mov
int3
sub
inc
mov
cmps
sahf
out
mov
jg
iret
jg
loope
lahf
cli
in
iret
pushf
sti
iret
mul
adc
stc
bound
std
fidivr
loope
shl
out
into
cld
xchg
mov
adc
pop
sti
(bad)
mov
add
clc
jg
fisttp
jl
test
jmp
jne
daa
jnp
call
add
push
inc
jae
cmps
cmp
pop
adc
sbb
push
mov
pop
sbb
add
or
add
jle
push
jnp
or
cmp
addr16
ja
xor
add
xchg
push
fadd
push
or
add
xchg
jl
clc
ja
call
mov
add
jns
pop
add
mov
pop
inc
jnp
mov
addr16
imul
or
dec
jne
push
add
mov
inc
add
mov
pop
push
inc
mov
sbb
mov
call
jle
daa
ja
aaa
test
jne
add
add
mov
hlt
mov
push
inc
or
cmp
add
mov
pop
mov
and
sub
inc
in
lea
addr16
add
dec
add
jne
lock
mov
jne
dec
or
sub
sbb
jne
mov
into
pop
push
inc
cmp
cmc
add
js
or
add
out
mov
test
jbe
sub
or
fadd
mov
mov
mov
clc
(bad)
int
and
into
mov
sbb
or
add
adc
add
stc
xchg
or
push
nop
aas
jmp
mov
clc
add
cmps
add
(bad)
mov
pop
fnstcw
leave
ja
sbb
ja
pop
lock
push
gs
adc
or
add
lea
mov
push
or
ja
mov
add
sbb
adc
xchg
fidiv
test
cmps
(bad)
cmps
xchg
stc
mov
xchg
add
xchg
adc
add
or
nop
jmp
xchg
addr16
xor
pop
adc
jns
add
xchg
inc
mov
gs
xchg
mov
xchg
mov
xchg
sub
sub
or
test
imul
sbb
inc
jns
out
xchg
mov
xchg
call
pop
sub
pop
cmp
nop
retf
fs
sub
jmp
pop
jmp
addr16
jmp
jmp
xchg
push
mov
push
or
dec
jns
inc
cmp
test
es
or
xchg
call
jo
cli
addr16
fcomp
test
mov
fwait
aaa
test
lods
fst
xchg
lahf
dec
stc
xchg
sar
jmp
sbb
xchg
(bad)
fcom
daa
lahf
cmc
inc
lahf
ror
imul
mov
or
jns
push
mov
pop
dec
xchg
xor
push
sub
mov
xchg
mov
fwait
pop
jns
cmp
pushf
ja
jl
dec
xchg
dec
enter
xchg
clc
pop
xchg
sbb
xchg
cmp
fld
xchg
mov
rcl
sahf
pminub
pusha
sahf
inc
test
ins
pop
mov
leave
add
popf
and
mov
movs
or
(bad)
clc
xchg
cwde
leave
mov
mov
xchg
pop
mov
push
call
mov
jmp
dec
fst
call
cmp
pop
retf
jns
pop
stc
xchg
mov
test
sbb
inc
cdq
push
mov
daa
mov
mov
pop
test
fld
jl
cmps
inc
mov
adc
jmp
xlat
test
dec
stc
lods
dec
call
stos
mov
cmp
dec
cmp
cdq
pop
mov
ja
ret
jmp
popf
and
inc
fstp
enter
test
fisub
pop
cdq
mov
mov
dec
or
add
ficom
push
test
mov
cmp
adc
or
lods
cmps
jmp
xchg
cmp
cmps
or
jnp
(bad)
sub
dec
xor
or
scas
add
pushf
out
mov
pop
lods
pop
adc
pop
mov
sbb
stos
mov
retf
jo
cmp
fild
mov
stos
adc
mov
jns
or
cmp
retf
dec
test
jns
push
call
out
scas
sub
lods
arpl
lods
(bad)
mov
dec
mov
cdq
mov
mov
lods
rol
in
fidivr
imul
xchg
pusha
inc
sbb
adc
xchg
(bad)
sub
mov
xchg
stos
test
push
pop
mov
and
nop
(bad)
retf
leave
lods
pop
sbb
cmp
cmp
mov
sbb
sbb
sbb
sti
xchg
lahf
mov
mov
cmp
pop
mov
push
jl
mov
fnstcw
mov
test
mov
cmps
sbb
fcmove
mov
fwait
stos
cmp
sub
jnp
mov
mov
sbb
adc
add
retf
lods
or
mov
dec
mov
sub
jbe
adc
mov
sbb
or
xor
cmp
add
mov
pop
mov
or
rcr
imul
stc
test
sahf
fwait
and
xor
mov
mov
das
jl
cmps
push
and
mov
nop
ret
stos
sub
test
les
sbb
iret
or
and
xchg
(bad)
jnp
push
or
fwait
lds
rcl
cmp
pop
mov
dec
or
inc
add
iret
retf
fcmovnb
push
sbb
inc
cld
cwde
mov
mov
fnstcw
mov
jnp
mov
add
inc
add
mov
stos
loop
(bad)
and
cli
leave
test
mov
(bad)
xchg
mov
push
jmp
mov
add
pushf
mov
add
inc
add
add
imul
dec
sti
xchg
test
jmp
(bad)
leave
ret
(bad)
sbb
jnp
les
add
add
add
jl
in
jl
mov
(bad)
iret
pop
scas
jmp
inc
jmp
xchg
imul
shr
hlt
cld
enter
ins
mov
add
add
ret
sahf
pop
lds
call
push
(bad)
lods
cmps
jmp
mov
fwait
rol
xchg
adc
addr16
mov
mov
or
adc
or
jo
sub
shl
int
push
pop
cdq
rol
mov
aam
pushf
sahf
inc
sbb
mov
shr
aam
cld
xchg
or
(bad)
cli
aam
(bad)
enter
push
sub
fs
shr
dec
int3
lock
aam
stc
int
cmp
mov
mov
lods
stos
mov
mov
fidivr
mov
sub
aad
mov
jns
iret
mov
rol
cmp
rcr
jp
aam
in
cmp
ja
iret
jmp
iret
xlat
pop
ror
jp
inc
int
pop
lods
leave
fs
or
scas
pop
leave
enter
fs
shl
addr16
icebp
fcmovnbe
pop
or
in
cmp
mov
add
add
adc
inc
pop
into
stos
sbb
icebp
jnp
enter
fstp
jp
ret
mov
(bad)
cmps
popf
fcmovu
pop
shl
into
out
or
icebp
sub
call
in
mov
dec
fsubrp
sub
outs
std
xlat
mov
(bad)
retf
call
mov
pop
shl
or
js
fcomp
or
xchg
sbb
or
fnstsw
xchg
fst
nop
sub
jmp
fnsave
fst
shr
lods
fimul
jge
sub
rcl
sbb
dec
popf
retf
mov
sub
loop
sbb
arpl
fisttp
add
ins
loope
ins
fld
std
mov
inc
loop
sub
fs
mov
sar
fucom
sbb
in
or
mov
out
fnstsw
pop
ins
out
dec
(bad)
dec
loope
mov
(bad)
xlat
xchg
cmp
pop
cs
push
in
fst
inc
out
out
(bad)
ror
cld
fild
push
aam
int
inc
pop
loope
(bad)
out
fldenv
loop
jle
cmps
fucom
or
jle
arpl
xchg
fnstsw
mov
mov
jecxz
dec
rcr
fidivr
pop
xchg
sar
push
jge
or
dec
fadd
retf
or
push
aad
jmp
sub
lods
inc
outs
loope
fsubp
test
fisttp
sahf
loope
dec
out
std
aam
sahf
fldcw
loop
cs
(bad)
dec
fmul
aam
push
loop
ins
in
jle
xchg
jle
pop
out
fld
rol
outs
out
(bad)
mov
dec
out
jp
fmulp
jle
mov
(bad)
(bad)
fsubrp
leave
push
fmul
push
(bad)
lods
fld
out
outs
(bad)
push
dec
out
pop
fstp
in
sar
or
fcomp
lock
(bad)
fsubr
(bad)
fcomp
mov
add
dec
mov
add
jmp
jp
jmp
mov
ror
xlat
aad
jmp
popf
repnz
jmp
fs
out
icebp
into
retf
and
(bad)
scas
fild
loopne
test
lea
int
loope
outs
repnz
jns
jmp
pop
out
pop
(bad)
in
add
hlt
daa
(bad)
repz
jl
pusha
mov
in
push
icebp
sub
out
sbb
in
push
not
loope
out
out
mov
out
jo
hlt
jb
loopne
aas
jmp
(bad)
lea
fsubr
dec
test
in
dec
pop
in
int3
call
int
jo
repz
pop
xchg
es
jecxz
outs
(bad)
je
out
das
stc
add
sub
rol
cwde
(bad)
stc
inc
fnstsw
and
aam
jg
push
aas
popf
in
clc
mov
shl
jnp
ss
aaa
(bad)
stc
enter
jg
aaa
mov
outs
pop
cli
dec
outs
fadd
out
lahf
out
jmp
mov
aam
jg
mov
add
dec
std
sbb
out
and
sti
inc
scas
clc
dec
lahf
cld
outs
out
(bad)
out
xlat
(bad)
in
loop
in
enter
pop
std
je
stc
mov
neg
cld
jmp
icebp
and
push
aas
sti
addr16
test
add
add
mov
mov
adc
add
pop
popf
cwde
xchg
and
movs
pop
mov
mov
mov
add
cdq
mov
mov
cwde
xchg
ret
mov
iret
cmp
mov
pushf
xlat
(bad)
mov
(bad)
int
cmps
mov
loop
(bad)
movs
out
mov
xchg
in
jbe
pop
xchg
mov
cmp
les
push
cs
mov
repnz
sbb
add
(bad)
cs
jo
sbb
mov
jecxz
mov
retf
push
and
and
das
pop
sbb
xor
fucom
sub
int3
mov
push
add
inc
or
adc
xor
es
adc
xchg
fcomp
call
loop
imul
xchg
sub
mov
and
mov
or
repz
mov
mov
xlat
mov
mov
stos
xchg
leave
pop
or
adc
lods
push
out
and
xchg
lds
pusha
mov
(bad)
adc
mov
add
xchg
dec
retf
fwait
addr16
pop
cmps
test
mov
mov
cwde
sub
ret
mov
es
mov
mov
dec
lock
cwde
shl
es
cmp
adc
mov
shr
popf
sti
dec
fidivr
sbb
push
and
pop
popa
fmul
in
pop
nop
jns
icebp
mov
pop
cmp
into
push
mov
adc
data16
xor
jno
cdq
js
cmp
rol
mov
sub
aaa
sbb
xor
xchg
push
jecxz
repnz
push
fisubr
inc
scas
xor
push
push
mov
leave
add
inc
cmp
ret
sbb
ins
test
xchg
pop
jmp
in
adc
aad
cwde
add
cmp
and
jl
inc
adc
push
test
jbe
xchg
addr16
aas
xchg
aam
lds
pop
mov
enter
fmul
arpl
ds
xor
cmp
inc
adc
cmp
rol
mov
or
jmp
test
jmp
lods
mov
push
jnp
lahf
movhps
xchg
cmp
fiadd
push
movups
pop
ins
lods
shr
mov
shr
mov
test
sar
mov
lahf
dec
mov
mov
pop
sbb
cs
mov
ds
pusha
jno
add
lahf
jp
lods
cs
xor
inc
add
xchg
xchg
imul
cdq
mov
sbb
pusha
test
mov
lods
add
or
adc
leave
push
push
push
repnz
ret
cld
or
movs
mov
jmp
or
push
mov
cmp
lock
and
mov
sbb
jae
sub
xor
in
icebp
jp
cmps
mov
dec
inc
call
adc
cmps
cmp
adc
push
or
imul
test
mov
fdivr
or
jmp
pop
nop
lar
retf
clc
loop
add
ficom
dec
ror
in
pop
sar
loop
push
fidiv
cli
iret
push
cld
sti
mov
loope
mov
sbb
out
out
mov
fadd
jno
dec
ret
fcomp
pop
test
or
or
mov
dec
in
fs
mov
xor
lds
ins
pop
inc
xor
cmp
and
mov
jnp
jns
fmul
lahf
jmp
sub
add
ss
out
shr
add
push
mov
aam
pop
(bad)
clc
cmps
cmp
add
inc
sti
xor
sbb
push
xchg
sub
inc
add
je
dec
enter
std
out
test
jae
mul
inc
add
push
cmp
inc
cwde
add
test
mov
adc
dec
cmc
xlat
ret
ror
test
(bad)
mov
push
lds
cld
bound
mov
inc
cs
mov
sub
mov
xchg
xchg
pop
or
pop
mov
xor
cld
test
into
xchg
test
arpl
dec
sbb
and
nop
mov
movs
and
cwde
mov
jg
mov
pusha
mov
xchg
test
fs
call
lea
in
add
dec
aaa
mov
sub
cmp
cmps
repnz
mov
in
arpl
pop
fcmovbe
xchg
stos
xchg
and
pop
shl
xchg
mov
dec
int3
bound
repz
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
xchg
push
add
lea
mov
mov
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
push
popa
pop
pop
ffree
or
inc
adc
adc
test
or
das
jp
mov
mov
outs
and
sub
push
sbb
clc
inc
(bad)
mov
pop
dec
mov
(bad)
or
mov
(bad)
in
bound
mov
div
push
adc
xlat
mov
xchg
(bad)
test
cmc
ins
pop
xor
xchg
scas
jbe
lods
pusha
(bad)
xor
mov
xor
push
mov
add
ret
aas
mov
pop
fcmovnu
push
inc
mov
cmp
sbb
mov
pop
pop
mov
ss
mov
adc
fsub
fcom
pop
repz
mov
mov
dec
scas
ins
movs
fcmovu
aam
div
and
scas
fdivr
cmp
std
in
push
mov
push
mov
add
pop
(bad)
push
mov
pop
mov
js
pop
es
jb
jmp
fidiv
or
scas
jo
xchg
mov
sub
mov
xor
add
jbe
and
add
shl
add
stos
pop
daa
push
fsubr
(bad)
jmp
inc
(bad)
out
jp
adc
or
xchg
add
sub
les
inc
bound
sub
adc
mov
sbb
fsub
mov
jo
sub
arpl
out
pop
popf
jo
icebp
dec
mov
inc
rol
leave
jp
fist
popf
popf
mov
ret
lock
mov
stc
mov
aad
test
sbb
scas
enter
push
cmp
fsubrp
pop
add
aad
jno
mov
jne
jb
mov
jmp
js
lods
lahf
sub
add
add
not
test
dec
(bad)
fcom
cli
push
outs
push
mov
shr
lds
xchg
cmp
xor
mov
addr16
arpl
mov
(bad)
lock
jns
inc
xchg
mov
outs
lock
cli
mov
in
add
in
pusha
jne
xchg
(bad)
jb
das
xchg
lods
fild
repz
stos
sbb
add
and
data16
inc
imul
push
mov
arpl
or
jne
cmp
cs
cmc
in
pop
xchg
aam
mov
outs
jmp
ds
or
push
mov
xor
add
fimul
and
mov
aas
outs
pusha
push
pop
pushf
in
pop
sbb
mov
aad
repz
adc
fisttp
jb
pop
xor
mov
outs
jl
xlat
fidiv
mov
jl
mov
loopne
stos
sbb
and
fsub
cdq
mov
fwait
stos
out
sub
loopne
sbb
out
outs
fistp
jno
in
adc
test
in
add
sbb
leave
and
outs
enter
mov
(bad)
sbb
fisttp
mov
rcl
int
ins
addr16
mov
cli
xchg
adc
or
icebp
mov
(bad)
adc
xchg
jecxz
out
push
sbb
jl
dec
outs
sahf
fistp
cs
sti
mov
pop
mov
in
pop
mov
sbb
out
jmp
out
(bad)
shl
push
js
fst
xlat
test
pop
mov
iret
scas
in
mov
pop
jmp
(bad)
icebp
loop
scas
imul
das
mov
jle
(bad)
jmp
mov
jbe
or
jge
ja
je
jge
inc
outs
movs
push
das
cmps
jl
cmps
add
adc
xlat
test
test
xor
inc
adc
cmp
add
pop
adc
pop
pop
xchg
jnp
xchg
cmp
add
jnp
enter
arpl
in
pop
xchg
jp
push
arpl
jo
fsubr
inc
add
neg
(bad)
ins
(bad)
push
jle
xchg
lock
push
pop
int3
inc
ja
cmps
fld
jnp
test
push
call
sbb
push
cmp
movs
outs
or
(bad)
cmc
push
xchg
je
push
add
pop
jns
mov
inc
jle
xlat
outs
push
push
addr16
adc
jo
push
jg
(bad)
add
jno
push
popa
add
jae
pop
sbb
rcl
add
test
fs
addr16
test
daa
pop
jno
sub
cmps
test
add
out
pop
pop
js
push
sbb
jae
es
xchg
cmp
mov
push
push
push
aaa
adc
div
xchg
test
sub
scas
ja
jmp
push
mov
fidiv
sub
bound
retf
dec
push
xor
mov
add
aaa
jns
inc
outs
xchg
sbb
loopne
jno
push
xchg
push
jns
js
mov
imul
jns
(bad)
lea
pop
aad
bound
push
pushf
adc
(bad)
(bad)
cmp
dec
push
int
and
pusha
jnp
ins
mov
data16
push
jne
cmps
push
push
add
popa
or
pop
inc
cmp
(bad)
push
(bad)
jbe
mov
cwde
jne
pop
jle
pop
pop
nop
idiv
inc
add
xchg
cmps
jne
mov
mov
jp
inc
imul
test
jne
clc
jne
pop
mov
mov
xor
pop
pop
call
cwde
sbb
outs
test
push
xor
outs
call
imul
cwde
lea
dec
mov
pop
xchg
cmc
inc
jno
inc
popa
les
pop
test
xchg
scas
es
ret
dec
shl
test
arpl
and
add
jns
call
emms
push
jbe
mov
add
test
xchg
fidiv
out
call
ss
xchg
stc
xchg
pop
out
(bad)
and
stos
sub
xor
cmp
fdivr
push
scas
sub
pop
jmp
xlat
imul
adc
mov
sub
retf
inc
enter
push
int3
push
nop
in
sti
xlat
jb
pop
imul
sahf
jecxz
sahf
aas
(bad)
(bad)
cmp
pop
jb
mov
cmps
or
pop
xchg
pop
mov
data16
test
push
pop
cmp
lods
pop
push
(bad)
pop
dec
push
pop
fcmovnb
cmps
xchg
xchg
(bad)
ins
inc
jnp
mov
add
fs
push
dec
push
push
sub
popf
adc
xor
push
sbb
mov
add
mov
sub
push
dec
adc
aaa
dec
mov
call
movs
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
add
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
xchg
xchg
xchg
mov
mov
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
jle
inc
ds
mov
in
mov
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
es
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
inc
ds
mov
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
retf
jo
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
add
retf
and
add
jmp
xchg
xor
push
mov
and
mov
nop
add
mov
sub
sbb
pop
xchg
jb
test
call
mov
and
pop
push
mov
mov
or
mov
jmp
sti
call
mov
loopne
out
mov
sub
mov
sti
retf
or
fidiv
cmp
xor
mov
mov
cmp
test
add
jo
and
add
cli
popf
test
inc
mov
mov
mov
stos
lods
xchg
mov
sbb
mov
cdq
or
sbb
mov
call
mov
sti
mov
imul
mov
jnp
daa
xor
mov
jnp
iret
stos
xchg
mov
push
loopne
adc
ror
scas
lea
push
pusha
mov
jo
loope
mov
fidivr
retf
mov
cli
mov
adc
sbb
mov
sbb
sub
movs
fwait
stos
aam
add
mov
mov
mov
sub
nop
add
or
mov
add
jmp
in
sbb
or
add
xchg
add
dec
rcr
scas
or
add
sbb
xor
xor
ret
ret
add
push
cli
retf
cmp
dec
ret
jp
add
sub
xor
dec
rol
or
xor
les
ret
out
mov
cmp
push
sbb
dec
cmp
dec
lds
add
int3
add
and
adc
add
jp
out
push
jo
(bad)
ins
in
(bad)
jne
mov
add
pusha
add
ret
(bad)
aaa
ins
(bad)
(bad)
jp
add
retf
add
enter
add
push
add
pop
add
enter
mov
enter
cmp
add
push
leave
mov
jp
leave
inc
fiadd
jl
cmps
ins
les
add
pop
retf
mov
dec
retf
mov
fadd
mov
add
sub
dec
add
mov
mov
xor
int3
add
lods
scas
dec
cmp
mov
shl
mov
add
int
fmul
pop
rol
add
pop
pusha
add
nop
retf
add
int3
leave
icebp
cld
int
sbb
jns
into
jmp
pop
into
(bad)
ins
retf
iret
in
mov
sub
jecxz
movs
loop
into
add
jmp
into
pushf
pushf
retf
shr
pushf
retf
xchg
jge
dec
mov
pushf
pop
int
in
mov
shl
sub
or
add
paddsw
pop
lea
(bad)
retf
rol
std
int
int3
rcr
ins
shl
or
xor
rcl
out
cmp
or
rcl
sbb
or
push
ins
iret
fisttp
mov
xor
rol
into
adc
and
dec
aad
dec
into
mov
rol
add
and
fstp
or
test
add
ins
sar
int
iret
jl
rcr
ins
xlat
xor
aad
mov
sub
fcom
mov
leave
mov
repz
(bad)
jno
xlat
in
mov
push
jge
lock
(bad)
mov
iret
sub
cmp
inc
dec
into
call
ins
les
aad
cmp
push
in
xlat
mov
mov
rcr
mov
sbb
pop
sbb
xchg
stos
cmp
mov
fdivr
(bad)
pop
ficom
fst
int
out
rcr
cmp
retf
std
fsubr
fidiv
add
call
fcmovnu
pop
xlat
cmp
or
stos
sub
aad
add
fdivr
jge
dec
lods
shr
sbb
fwait
(bad)
xlat
xchg
std
fldlg2
mov
(bad)
dec
jge
retf
mov
(bad)
int
push
lods
xchg
ds
dec
lods
(bad)
mov
loopne
lods
loopne
or
cli
int3
fidivr
stc
in
enter
pop
xor
cmp
jge
ficom
out
xlat
pop
or
jb
fld
iret
mov
in
popf
rcl
pop
loope
ds
into
add
ficomp
ds
into
fcom
ror
aad
or
retf
sbb
fadd
out
dec
fistp
jecxz
sbb
xor
fcomip
cmp
jmp
fld
fdivr
in
lods
out
pop
shr
mov
xor
fnstsw
rol
or
fld
scas
iret
inc
fsubp
hlt
int
lock
ror
stos
shr
fist
sahf
fstp
lahf
fucom
movs
mov
lock
cdq
push
into
xchg
sahf
int
jle
dec
(bad)
sar
in
into
faddp
in
out
pop
fcomip
ins
fldlg2
jge
adc
into
mov
loope
into
jmp
fldcw
retf
sub
pusha
scas
int
out
shl
(bad)
jbe
out
pusha
jmp
cmp
outs
sar
stos
mov
push
cs
jl
in
push
loope
push
loope
push
out
repnz
int
into
leave
sub
mov
add
out
cs
mov
add
mov
or
loope
adc
and
dec
je
call
mov
int3
scas
out
sahf
lock
jge
jecxz
out
idiv
out
mov
jmp
dec
fistp
push
(bad)
add
loop
int
or
stc
cs
nop
mov
loop
out
fistp
leave
pop
loopne
(bad)
xlat
fmulp
mov
lock
shl
lods
repnz
pop
jecxz
mov
pop
(bad)
cmc
mov
add
(bad)
out
das
call
scas
retf
repnz
sbb
test
dec
aas
lock
in
out
mov
iret
cmp
xor
in
mov
add
xor
in
lock
stc
mov
lock
stc
xchg
inc
jns
fimul
out
inc
ds
fsubr
repz
dec
out
mov
iret
xchg
popf
jecxz
dec
jmp
lahf
in
scas
(bad)
ins
cmc
jno
repz
lods
xlat
mov
in
les
repnz
idiv
cld
lahf
outs
out
mov
test
dec
sti
fwait
das
std
pop
and
in
sti
jmp
sub
fcomp
jmp
(bad)
clc
push
repz
mov
cmc
sbb
iret
imul
jne
sti
mov
in
xchg
jmp
jo
push
rcl
dec
dec
sub
fadd
aad
and
dec
cmp
enter
enter
mov
rcl
pop
rol
mov
sub
leave
mov
(bad)
mov
sub
mov
jmp
cmp
cdq
fistp
cmp
pop
or
mov
pushf
jge
cdq
in
cmp
jle
lods
mov
sub
outs
cmp
or
cdq
jge
pop
aas
clc
lea
inc
pop
xor
mov
adc
lea
push
jecxz
dec
push
mov
xchg
dec
sub
fdivr
imul
loope
or
ss
pop
(bad)
rcl
lds
inc
dec
add
mov
dec
push
mov
push
and
sub
ins
xchg
sub
dec
pop
mov
mov
cs
test
bound
fwait
or
popf
ss
dec
and
mov
in
pusha
mov
jg
sbb
fst
mov
mov
adc
adc
shl
adc
xchg
aas
pop
ja
lahf
ret
imul
aam
mov
dec
pop
fwait
es
fwait
sub
loope
lds
xchg
in
xor
push
aaa
pusha
aaa
xchg
dec
fist
icebp
cmp
adc
and
mov
imul
lds
cmp
mov
sbb
pop
jno
inc
ja
pop
(bad)
mov
xchg
and
out
jbe
addr16
sahf
jecxz
pop
cmps
sbb
sub
cwde
jns
popf
jb
pop
jl
call
push
xchg
imul
jnp
mov
dec
ins
mov
pop
cmp
inc
pop
pop
jnp
xchg
pop
js
ins
cmc
mov
retf
arpl
popa
in
push
fnsetpm(287
mov
add
bnd
aam
pop
je
loope
mov
push
enter
sbb
inc
push
dec
sbb
fisttp
gs
xchg
xor
jns
fiadd
js
mov
cmp
inc
xchg
push
(bad)
pop
(bad)
xchg
jne
gs
ficomp
fidivr
shl
jmp
test
xchg
adc
sub
movd
dec
pop
bound
push
xlat
mov
movs
pop
mov
sbb
arpl
jge
or
jmp
icebp
and
pop
mov
pop
fldl2e
or
xchg
xor
inc
outs
xchg
ret
dec
retf
sub
lea
xchg
call
out
test
push
and
pop
call
xchg
aad
push
sub
outs
jb
push
push
stos
das
fwait
in
loop
je
fisttp
or
and
into
aad
mov
add
lods
repnz
mov
dec
dec
imul
push
nop
ins
das
rcr
aad
sahf
int3
mov
es
enter
ss
mov
dec
int3
ret
int3
mov
cmc
in
sbb
mov
dec
rol
or
xor
iret
mov
mov
mov
push
int
retf
cmp
and
retf
xor
push
mov
sub
dec
add
fst
enter
mov
mov
repnz
hlt
mov
stos
pop
xor
xlat
out
lods
fdecstp
popf
adc
arpl
mov
pop
clc
xor
test
mov
jne
push
cmps
cld
ja
lahf
fisttp
sbb
mov
cmp
ds
xchg
and
ins
repz
pop
out
xor
and
icebp
lea
ja
popf
push
sahf
mov
cmp
inc
(bad)
es
in
ret
jl
aas
inc
outs
mov
lds
sub
sub
pop
neg
xor
jns
lea
xlat
fisttp
scas
cli
push
inc
xchg
(bad)
jne
sbb
ret
mov
movs
sub
jmp
pop
mov
mov
sbb
loopne
cmp
sbb
jecxz
and
pop
cmp
mov
call
adc
les
sub
sub
mov
jmp
clc
cld
jbe
sbb
call
add
outs
adc
pushf
repz
loope
push
or
mov
mov
or
loop
loop
ds
(bad)
xor
dec
jbe
jns
or
sbb
pop
test
das
sub
movs
adc
iret
outs
dec
or
sbb
xchg
mov
push
in
add
fadd
in
movs
adc
imul
mul
add
sub
and
repz
leave
dec
in
jnp
or
and
push
mov
(bad)
or
in
mov
sub
mov
push
pop
and
mov
in
jns
sti
pop
ss
loopne
push
in
or
push
fwait
loope
cmps
add
and
outs
popf
pushf
xchg
add
add
hlt
cld
in
inc
clc
mov
cmp
pop
add
xor
pop
jmp
sahf
fwait
add
stc
mov
ins
retf
sub
sbb
into
jno
call
cmp
mov
enter
xchg
mov
nop
pop
dec
in
pop
movs
js
std
icebp
jmp
cmp
shl
lock
test
test
add
stc
dec
jae
xchg
nop
iret
in
push
mov
jo
sti
mov
xor
inc
sub
hlt
xchg
das
in
dec
xchg
xor
cmps
cmp
gs
cmc
cmp
mov
test
fiadd
icebp
cdq
cs
neg
mov
test
dec
into
adc
or
inc
and
pop
xor
je
push
mov
pop
jmp
sar
(bad)
cmps
lods
cmps
inc
test
cmps
xchg
jmp
dec
cmc
cwde
push
push
dec
call
pop
lods
icebp
jl
test
jb
add
shr
dec
repz
jl
outs
jne
call
dec
stos
pusha
mov
hlt
mov
sbb
mov
pop
cmp
sbb
inc
scas
pop
jns
pop
push
add
mov
xor
hlt
and
add
xor
jl
xor
add
rol
mov
mov
add
loope
xlat
(bad)
pusha
(bad)
adc
cmp
or
and
clc
mov
dec
ins
loop
jb
sar
test
adc
mov
and
add
pushf
adc
shl
arpl
mov
dec
and
jmp
jns
test
cmp
fldcw
rcr
and
and
sbb
or
ror
int
mov
pushf
aas
xor
mov
into
inc
cs
mov
cmp
in
inc
or
out
nop
add
xor
jae
mov
rol
adc
loop
or
movs
daa
sub
shl
sub
rcr
lds
test
sub
cmp
adc
ja
int3
in
xlat
pop
adc
dec
push
mov
sub
add
fadd
popf
in
xchg
push
loope
xchg
jbe
fcomp
inc
ins
cmp
and
lods
ds
cmps
lods
push
cmp
or
repz
mov
push
dec
mov
aaa
mov
cmp
fsubr
ret
ds
test
dec
push
js
xor
or
jle
push
les
jge
and
mov
jae
mov
outs
outs
pop
jl
ror
cmps
adc
add
jg
mov
pop
mov
cmps
(bad)
cdq
test
rcr
(bad)
bnd
rol
xlat
js
cmp
xlat
out
outs
jns
imul
loop
add
adc
sub
leave
sti
jns
or
int3
call
jmp
pop
jecxz
outs
cmp
das
inc
push
push
add
cmp
ror
scas
jnp
fldenv
add
xchg
out
mov
add
addr16
mov
mov
cmp
icebp
jle
mov
dec
pop
loope
push
div
inc
add
adc
jmp
cmp
clc
adc
repz
in
sub
cli
pop
ficom
inc
loope
mov
cmc
inc
in
mov
les
out
sub
sahf
cmp
push
cmp
or
clc
jp
int3
mov
or
test
add
repz
cmp
stos
(bad)
std
mov
mov
adc
fimul
in
and
test
sub
cmp
or
jecxz
icebp
sbb
cmp
pop
ror
mov
(bad)
js
div
mov
ja
push
jge
push
dec
nop
cmp
mov
jg
idiv
test
jbe
xor
mov
popa
xor
arpl
push
jne
push
xor
sbb
sbb
add
add
mov
and
sub
je
mov
add
adc
adc
ja
clc
jne
daa
jnp
push
jge
addr16
inc
jbe
add
push
ja
rol
cmps
imul
mov
push
xchg
jge
xlat
sbb
in
test
jg
pop
jbe
mov
push
lock
arpl
add
test
pop
mov
dec
and
sub
aaa
jnp
test
add
add
mov
jbe
mov
jbe
sub
inc
mov
or
jle
jbe
mov
dec
rcr
adc
popa
clc
sub
sbb
or
cmp
clc
add
or
cmp
pop
test
(bad)
ror
jge
clc
ins
adc
mov
xchg
jl
cmps
add
jp
pop
test
push
pop
mov
out
movs
clc
adc
add
xchg
jne
ret
call
(bad)
cmc
add
dec
xchg
and
mov
mov
int
add
jo
stos
xchg
pop
(bad)
mov
mov
mov
pop
cmp
ja
dec
lea
mov
enter
cmp
sbb
or
sbb
popa
pop
sbb
aam
mov
pop
xchg
cmp
in
or
ror
and
xor
xchg
pusha
mov
not
sub
out
dec
push
add
xchg
add
loopne
dec
test
call
pop
dec
(bad)
out
pop
jbe
and
inc
xchg
cs
add
xchg
nop
mov
xchg
ds
sub
popa
test
pop
add
cwde
xchg
fwait
arpl
pop
xchg
je
test
xchg
pop
shl
mov
inc
pusha
dec
jge
xchg
dec
fmul
jns
or
das
(bad)
mov
call
sbb
nop
jge
add
mov
or
mov
nop
fnstenv
add
daa
xchg
(bad)
cwde
cmp
sbb
add
jns
push
mov
sbb
jae
fwait
scas
mov
inc
jmp
cmps
sub
js
sub
jo
push
leave
xchg
sbb
xchg
cmp
xchg
or
sub
pop
and
dec
imul
xor
pop
xchg
popa
push
shl
(bad)
sbb
mov
sbb
mov
push
mov
cmp
jmp
mov
out
or
or
cmp
xlat
xchg
retf
lods
enter
cwde
mov
xchg
(bad)
or
imul
mov
jns
(bad)
xor
mov
or
sub
stc
(bad)
jo
mov
addr16
jge
jp
sub
cdq
cmp
cmp
pushf
iret
clc
mov
sbb
sahf
ja
mov
mov
adc
mov
pop
imul
lahf
cmp
mov
call
test
mov
mov
xor
cwde
jae
xchg
pop
fiadd
outs
pop
push
lds
retf
adc
xchg
das
mov
pop
xchg
test
lahf
mov
pushf
ins
test
cmp
cmps
jge
cwde
xor
stos
in
add
sub
xchg
lods
mov
cmp
icebp
sbb
sub
mov
sub
test
push
add
cmps
ret
sub
mov
jp
call
jecxz
mov
call
cdq
adc
(bad)
leave
lods
dec
mov
add
sub
jp
sub
repnz
jbe
or
loopne
sbb
call
popa
cwde
pop
retf
cli
add
jnp
das
leave
mov
jmp
stos
aam
lods
pusha
push
clc
add
aam
lahf
xlat
cmp
in
repnz
jmp
les
movs
cs
pop
adc
jecxz
xchg
cdq
dec
sahf
inc
or
(bad)
sbb
xchg
adc
test
jmp
or
cwde
jmp
call
cwde
test
dec
mov
dec
fwait
stos
sub
jmp
popf
push
fistp
retf
jnp
sub
mov
imul
stos
xchg
inc
stos
push
cmp
lods
fnstenv
mov
fwait
loopne
mov
cmps
cmp
mov
mov
sar
xchg
sub
mov
fwait
xchg
sub
add
or
call
xchg
push
imul
mov
pop
push
call
cmp
fstp
mov
(bad)
sbb
sti
lods
sbb
lods
xchg
cmp
imul
pusha
sub
dec
pushf
add
mov
inc
cdq
sti
dec
xchg
call
jmp
daa
inc
cdq
clc
or
mov
retf
pop
push
das
pusha
mov
pop
mov
pop
mov
or
sub
xchg
out
mov
jl
adc
inc
pop
mov
loop
pushf
(bad)
sti
mov
or
inc
ins
pop
and
loop
scas
or
movs
push
ins
lods
or
inc
add
and
add
cwde
pop
pop
pushf
test
ret
pop
push
ret
scas
retf
call
mov
imul
rcr
fwait
and
sar
cmp
daa
in
mov
pop
push
add
xchg
test
mov
cmp
adc
ins
cdq
lods
cmp
sbb
sub
xchg
jae
or
add
dec
stos
xor
lods
adc
mov
or
sbb
or
xchg
imul
mov
mov
mov
xor
push
lods
mov
or
pop
push
sub
add
cdq
enter
ror
ins
mov
sub
ret
inc
and
adc
add
mov
lods
(bad)
sar
add
mov
xor
in
mov
cmp
imul
ret
pop
pushf
(bad)
xchg
dec
mov
fmul
inc
nop
add
leave
lods
fdivr
ins
mov
ins
mov
mov
xchg
cmp
sub
xchg
jl
or
xchg
fadd
ror
add
retf
int
jmp
(bad)
int
dec
retf
add
push
jmp
hlt
lods
mov
int3
mov
cmp
sbb
mov
mov
sti
iret
mov
shl
fdivr
imul
into
and
(bad)
iret
aam
sar
pop
push
pop
cmp
mov
or
cmp
xchg
(bad)
stc
in
into
les
pusha
sub
dec
retf
and
mov
cmp
pop
sbb
popa
ins
xchg
std
lods
int
(bad)
rol
mov
jmp
into
sar
aad
cli
int3
stc
sub
xchg
int3
mov
sub
(bad)
mov
mov
pop
int3
mov
pop
mov
(bad)
fisub
mov
sub
inc
sbb
aas
lods
fisub
fdiv
(bad)
dec
popf
fidiv
xchg
mov
mov
std
mov
lods
(bad)
lods
int
call
mov
aad
stos
aad
sbb
pop
(bad)
aad
ins
add
inc
add
sbb
cld
int3
ret
fld
int
fstp
dec
ins
fnstsw
sahf
popf
int3
pop
int
aad
aad
dec
retf
fmul
xlat
jg
into
or
mov
shr
pushf
into
pop
in
(bad)
inc
lods
fbld
dec
iret
lods
sbb
mov
xlat
(bad)
jge
scas
ins
mov
jmp
(bad)
mov
cmp
mov
cmp
cmp
mov
sbb
pop
int
or
int
or
mov
mov
fsubr
push
out
retf
iret
pop
jl
pop
or
push
sub
cmp
(bad)
sar
data16
pusha
dec
test
push
fadd
ffreep
cmp
fwait
adc
push
fisubr
mov
mov
cmp
lds
xlat
or
fpatan
in
xlat
inc
push
fild
fstp
fsub
mov
and
daa
push
loop
ins
loopne
into
scas
fistp
jg
fidivr
fld
mov
or
jns
call
in
jecxz
(bad)
in
mov
int
call
push
fmul
loop
(bad)
mov
out
into
fadd
mov
inc
sub
cmc
or
jg
loop
(bad)
fsubr
stos
dec
scas
loop
sub
sbb
jmp
fsubp
lds
cmp
ret
pop
jecxz
or
out
push
leave
mov
or
loop
into
rcl
frstpm(287
jo
aad
mov
and
fmul
cmp
loop
pop
call
or
mov
(bad)
fiadd
jmp
dec
call
jle
nop
fdivrp
out
outs
out
scas
jmp
out
in
mov
jmp
das
lock
lock
call
(bad)
fisubr
in
ds
jmp
sub
in
loope
dec
jmp
push
in
mov
xchg
jle
adc
add
or
mov
or
rol
into
loop
ds
jmp
lahf
repz
ror
shl
in
lods
mov
jg
out
jge
fdivr
out
dec
pop
hlt
dec
fnstsw
lock
out
pop
adc
cmp
fcom
call
pop
cmc
or
xlat
dec
mul
jp
idiv
scas
test
xor
cmc
jae
lock
lock
mov
imul
and
fisttp
cmc
adc
cmc
addr16
in
out
out
iret
jecxz
dec
stc
mov
call
(bad)
pop
jmp
fs
int3
repz
hlt
and
jmp
fcomip
sbb
add
add
out
imul
pop
outs
shl
push
gs
out
xchg
iret
cli
mov
neg
add
sti
push
fdivp
retf
dec
psllq
aad
pop
test
in
sti
(bad)
jg
call
ds
(bad)
div
dec
test
cli
xor
call
(bad)
cmp
cld
ror
pop
hlt
(bad)
in
scas
outs
stc
call
aad
invd
sbb
pop
sub
sbb
mov
xchg
pop
add
xchg
mov
sbb
sub
lahf
mov
mov
mov
xchg
xchg
test
test
cmps
mov
cdq
mov
mov
lods
mov
cmps
xchg
pop
mov
sahf
pushf
lods
fld
xchg
test
or
xlat
sahf
mov
stc
mov
mov
popa
dec
xor
add
jmp
and
xchg
popa
fwait
inc
scas
test
stos
mov
sbb
xchg
mov
dec
sbb
push
cmp
lods
movs
inc
add
dec
xchg
sbb
lods
pop
ds
int3
sub
inc
call
pop
loop
or
pop
ss
adc
mov
pop
imul
gs
scas
icebp
sbb
mov
dec
ins
lds
xor
dec
cmp
cmc
scas
pop
push
fwait
imul
sub
(bad)
jmp
sub
into
mov
and
jmp
test
mov
mov
and
pop
add
push
les
cmp
test
jl
push
sub
dec
in
push
sub
fdiv
movs
pop
sahf
in
std
(bad)
shl
clc
xchg
fidivr
sub
inc
dec
sub
push
mov
dec
pop
jmp
xlat
mov
mov
call
sub
mov
popa
cmp
dec
sbb
and
and
mov
mov
dec
adc
not
inc
loopne
mov
or
push
sbb
shl
xchg
inc
fmul
cmp
mov
in
pusha
xchg
loope
pop
dec
nop
leave
mov
(bad)
call
xchg
mov
loop
fsubr
test
fwait
inc
cli
inc
jae
xchg
and
fdiv
xchg
in
nop
movs
and
pop
dec
ss
jns
adc
mov
arpl
call
bound
and
push
sbb
pop
daa
test
out
pop
pop
push
jo
sbb
pop
cdq
jle
pusha
dec
push
inc
mov
pop
neg
dec
fs
sub
mov
inc
lahf
ja
mov
xlat
lahf
movs
nop
pop
rol
add
les
push
jl
inc
pop
(bad)
inc
jmp
pop
mov
retf
stos
lods
repnz
mov
mov
loop
mov
scas
stos
mov
in
mov
dec
dec
pop
cmps
ins
add
shr
retf
add
out
dec
scas
mov
into
cmp
imul
or
push
dec
and
popf
mov
call
mov
add
sbb
adc
mov
pop
jmp
imul
mov
push
add
call
fdivr
mov
adc
cmp
das
mov
inc
retf
stos
les
dec
pop
or
cmp
and
les
inc
fadd
hlt
popf
aas
out
(bad)
ror
jb
daa
dec
push
ins
mov
cmp
arpl
std
inc
(bad)
(bad)
push
daa
add
mov
xchg
call
jbe
dec
mov
iret
push
scas
cmp
fbld
out
cmc
(bad)
aas
cmp
fld
test
jo
retf
js
adc
rol
es
in
outs
adc
add
fstp
movs
xchg
xor
add
xor
loopne
sub
add
sbb
sbb
jle
push
imul
nop
sti
in
pop
push
sar
in
jp
popa
repnz
cmp
pop
repz
add
push
push
loopne
gs
mov
sub
push
mov
dec
or
addr16
test
dec
ds
pop
push
cmp
add
cs
pop
push
fisub
fcomp
add
add
jge
pop
sbb
push
ss
data16
add
xor
mov
or
dec
pusha
jo
sub
add
mov
inc
(bad)
push
out
test
and
xor
inc
lods
pop
nop
jae
add
jecxz
mov
test
adc
cdq
iret
test
imul
rcl
cli
outs
mov
loop
jbe
mov
and
les
outs
daa
add
xor
mov
in
stos
stos
inc
add
xchg
xchg
adc
and
xchg
mov
addr16
stos
mov
aas
adc
ror
stos
cmps
inc
add
pop
shr
inc
push
lods
(bad)
push
dec
fs
mov
sbb
pop
(bad)
enter
mov
inc
aam
stos
pop
inc
sti
aam
jo
add
or
jp
xchg
imul
leave
ret
dec
push
xchg
mov
daa
dec
pop
outs
adc
cmp
or
ja
ins
fs
enter
xchg
mov
or
out
xor
int
jp
fwait
mov
es
dec
into
jb
(bad)
push
call
dec
jne
repz
mov
jns
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
mov
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
or
dec
lods
push
ins
push
push
sbb
test
sbb
and
mov
ss
test
std
ins
gs
sbb
xchg
aad
push
sbb
inc
mov
or
pop
into
dec
add
sub
xchg
mov
cwde
ins
imul
aam
xlat
mov
(bad)
adc
push
mov
mov
jae
mov
mov
addr16
loop
push
mov
inc
lods
outs
sbb
aaa
mov
or
test
test
pop
in
(bad)
push
add
push
pop
fild
mov
fidivr
fdivrp
push
loope
stc
cmp
pop
add
lods
jle
cmp
push
shl
jo
fld
aam
ss
jle
or
or
xor
pusha
adc
(bad)
outs
mov
arpl
push
or
stos
lea
sti
pusha
in
push
js
in
lds
test
mov
jne
fistp
add
and
in
(bad)
js
(bad)
sbb
(bad)
sbb
and
mov
adc
mov
xchg
lahf
sub
pop
and
or
jo
cmp
inc
loopne
adc
mov
xor
inc
add
or
mov
jge
pushf
pusha
(bad)
stc
mov
mov
lea
ja
shl
test
push
js
push
push
add
sub
and
popa
cmps
mov
dec
in
test
fidivr
retf
hlt
lea
jmp
mov
in
hlt
and
popa
daa
inc
loopne
stos
int
pop
cmp
adc
lock
les
cmc
pushf
cmp
pop
leave
inc
dec
cmc
jne
sbb
(bad)
in
xchg
jne
cmp
stc
out
mov
in
loopne
aas
pop
int
pop
icebp
jle
cmp
sbb
adc
pop
inc
pop
mov
push
mov
jo
daa
sbb
add
xor
inc
daa
cdq
aam
dec
add
cmp
shl
push
outs
cmp
ins
push
cmc
mov
mov
add
loope
loope
js
popf
inc
fst
fidivr
arpl
sub
arpl
cmp
mov
in
repnz
(bad)
cmp
fdiv
(bad)
adc
pop
and
shl
clc
fmul
cmp
inc
sti
call
inc
pop
(bad)
lds
je
int
popa
mov
mov
fsubr
aam
outs
pop
scas
repnz
(bad)
pop
dec
ins
imul
jmp
push
cld
add
jbe
adc
out
out
mov
daa
test
iret
sbb
out
fisttp
dec
mov
adc
fmul
pop
xor
daa
sub
jnp
shr
cld
stos
inc
adc
xchg
pop
ja
sbb
pop
fcomip
adc
fwait
hlt
outs
dec
icebp
cmps
stc
sahf
jmp
xor
(bad)
jne
icebp
pushf
jecxz
sbb
add
lods
pop
mov
mov
add
sub
(bad)
arpl
mov
out
mov
in
mov
cmc
cmp
jmp
fucomp
push
(bad)
cli
add
jle
xchg
arpl
lock
ins
ins
out
mov
jge
xchg
or
aam
pop
ja
jl
jbe
sbb
mov
jo
jnp
mov
xchg
out
fwait
inc
jnp
push
cmps
xchg
mov
sbb
imul
add
jg
push
pop
pop
fdiv
ins
xchg
add
sbb
js
ss
dec
idiv
jo
mov
aas
lock
adc
jl
ja
adc
push
pop
jo
push
pop
jmp
js
jbe
and
test
bound
push
aas
mov
popa
out
inc
test
or
pop
jne
cmps
add
ja
mov
push
(bad)
pop
movs
mul
out
loope
ja
clc
gs
mov
js
ss
test
push
pop
sbb
xchg
sbb
xlat
ins
inc
rol
mov
adc
mov
scas
inc
jge
pop
push
cmp
and
gs
and
ja
es
dec
mov
pop
push
and
pop
out
mov
test
jp
cmp
mov
pop
mov
jge
in
stc
push
jno
loopne
mov
imul
test
jb
inc
mov
ret
cwde
push
mov
ins
aam
jb
add
pop
jle
mov
mov
test
add
mov
add
push
xlat
push
(bad)
fsubr
out
fidiv
mov
lds
daa
enter
jbe
or
push
fs
add
inc
jl
pop
xchg
enter
lock
dec
js
xchg
push
ss
xchg
aad
mov
pop
pusha
mov
fsubr
cmp
data16
xchg
in
outs
dec
jne
(bad)
pop
icebp
push
jle
xchg
mov
push
inc
pusha
sub
mov
arpl
nop
add
inc
jns
jne
jo
push
jo
dec
ins
popf
aaa
mov
jge
call
adc
add
jge
(bad)
ins
stos
sbb
pop
xchg
fdiv
xchg
jb
pop
add
ins
in
jg
call
mov
nop
ja
ror
std
enter
xchg
jl
sbb
enter
pop
test
push
push
mov
xchg
arpl
xchg
or
js
lds
imul
js
mov
neg
or
cmp
jmp
xor
cmc
sbb
pop
jno
mov
dec
push
pop
pushw
je
xchg
fs
push
add
mov
jne
cmc
jo
xchg
jmp
dec
jbe
getsec
pushf
sub
mov
mov
into
imul
add
fst
sub
lahf
stc
inc
sbb
pop
cmps
jbe
jns
push
sbb
xchg
leave
outs
dec
mov
ss
pop
in
mov
jl
xchg
movs
add
pushf
push
pop
xchg
inc
mov
pop
addr16
adc
addr16
or
push
cmp
xchg
inc
jne
mov
in
repz
push
neg
ficomp
leave
bound
mov
jo
in
out
jo
xchg
xchg
sbb
in
mov
push
mov
push
jne
addr16
aad
push
pop
push
jbe
cmps
pop
mov
mov
cmps
jns
add
movs
pop
mov
pop
mov
add
and
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
scas
lods
test
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
mov
lods
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
scas
mov
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
xchg
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
adc
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
mov
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sub
jp
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
sbb
xchg
shr
jae
add
jo
add
add
cli
popf
sub
inc
mov
mov
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
mov
push
rol
and
int3
or
inc
mov
adc
test
es
mov
dec
mov
sti
mov
fild
test
mov
sub
sti
mov
cmp
mov
add
adc
loopne
mov
shr
cli
jnp
push
ins
add
mov
jl
fimul
lods
fcomp
shr
mov
lock
push
adc
push
add
jl
daa
sbb
xor
pop
ret
ret
add
add
ret
ret
add
jo
cmp
sbb
or
ret
aas
ins
add
push
cmp
ret
mov
retf
ret
les
or
dec
cmp
stos
les
add
and
adc
(bad)
xor
out
push
mov
dec
(bad)
imul
push
mov
cmp
dec
sub
outs
lods
xchg
stos
sbb
sub
mov
mov
xor
inc
mov
inc
fcmovb
mov
(bad)
mov
enter
cmp
add
or
mov
cmp
add
call
retf
add
sub
cmps
jmp
xchg
pushf
leave
lods
mov
dec
les
add
sub
dec
mov
test
add
retf
pop
nop
add
add
retf
leave
sbb
dec
stos
(bad)
leave
(bad)
lahf
cmp
into
lods
xchg
add
add
pop
pusha
add
loopne
ror
add
or
out
int
ins
int
out
loopne
stos
rcr
adc
hlt
lods
into
call
int
mov
fisubr
sbb
dec
sahf
jl
stc
sub
sahf
cmp
jp
rol
rol
leave
mov
mov
mov
sbb
adc
iret
aam
rol
lods
shr
enter
rcr
ror
lods
xchg
fst
and
int
pushf
shr
into
add
sbb
add
xor
cli
int3
into
push
or
xlat
sbb
stc
lods
rcl
lods
scas
and
(bad)
(bad)
pop
loopne
mov
add
int3
shl
jge
out
ror
fiadd
push
sub
fwait
jl
jmp
aam
lods
into
inc
mov
add
jmp
or
test
aad
cmp
(bad)
jb
int
in
(bad)
add
fs
(bad)
or
add
(bad)
and
sar
std
rol
int
sbb
xchg
popf
int
int
or
xor
ror
fsin
int3
into
lods
jge
je
xlat
gs
aad
in
fsub
mov
sub
icebp
pushf
int
popf
int3
lods
fcmovbe
mov
mov
fistp
add
(bad)
sahf
ins
aam
jge
lahf
(bad)
jp
shl
int3
mov
aam
pushf
xlat
cs
nop
ins
(bad)
ins
fisubr
iret
or
cmp
fisubr
retf
iret
int3
std
iret
push
rcr
int
pop
cmp
cmp
in
fsubr
shr
rcl
leave
pop
sub
xchg
lods
shl
fst
mov
(bad)
(bad)
fild
fisubr
lods
in
mov
aad
or
rep
aam
sbb
mov
or
mov
fnsave
shl
add
lods
xlat
adc
fisttp
cs
cs
mov
gs
fcom
push
fistp
(bad)
nop
in
(bad)
call
jecxz
mov
mov
jecxz
lods
jecxz
int
pop
ins
fisubr
scas
loopne
fistp
into
pop
ins
fnstsw
sub
pop
(bad)
scas
int
push
scas
in
mov
pushf
std
in
mov
sub
call
fbstp
xlat
(bad)
je
out
jle
and
shl
loop
cmp
xor
fmul
fiadd
into
jecxz
ins
in
outs
int
dec
ror
stos
ret
stc
sub
mov
call
loope
int
inc
(bad)
call
sbb
outs
out
mov
inc
out
loop
cmp
push
add
push
ds
mov
fld
jmp
sbb
stc
fstp
jnp
(bad)
xchg
cs
mov
loopne
jl
(bad)
sub
jmp
das
sub
mov
loop
mov
inc
pop
loope
outs
out
ins
jmp
push
(bad)
loop
outs
call
mov
add
(bad)
outs
in
loopne
out
jmp
in
cmc
lods
fldenv
fisub
(bad)
out
pop
adc
fdiv
fldcw
mov
add
sahf
aad
sahf
jmp
pop
add
or
pop
jle
cmps
cs
sar
in
mov
into
rcr
xchg
mov
jl
in
jne
in
(bad)
dec
or
jne
call
fucomp
xchg
push
fcmovnbe
sub
sar
dec
in
sub
adc
jmp
dec
in
fucomp
adc
lock
outs
fmul
lock
scas
out
mov
jmp
(bad)
ins
icebp
fisubr
push
mov
jno
hlt
call
(bad)
repnz
dec
(bad)
out
sub
sub
out
icebp
mov
jmp
xor
pop
mul
clc
lods
int
push
aas
cmc
xchg
mov
hlt
shr
xchg
pop
repnz
mov
push
out
jecxz
(bad)
aam
into
jmp
push
lock
ins
into
dec
fcomip
pusha
pop
sti
mov
mov
lock
mov
lock
sti
fimul
sar
mov
hlt
(bad)
call
iret
add
div
ds
shr
inc
sub
outs
loopne
outs
int
(bad)
repz
mov
jmp
mov
jecxz
fcomip
xchg
dec
sti
retf
psllq
or
push
inc
stos
push
adc
xor
les
shl
push
loopne
imul
test
ret
add
sub
test
mov
jmp
fstp
sbb
jmp
cwde
fstp
sbb
fcmove
pop
dec
stos
retf
cli
sub
mov
jmp
mov
sbb
mov
sub
jno
pop
jns
(bad)
(bad)
dec
pop
int
sub
push
sbb
or
sbb
pusha
cli
mov
xlat
mov
sbb
mov
xchg
push
cmps
das
xchg
adc
push
push
repnz
cmp
mov
push
inc
inc
out
add
mov
mov
adc
fwait
leave
add
dec
fs
and
lds
dec
and
dec
and
jbe
je
mov
inc
push
test
stos
fldcw
xlat
adc
inc
sbb
sub
dec
fidivr
pop
addr16
(bad)
call
xchg
bound
test
mov
dec
call
cmp
call
push
inc
adc
adc
je
fcomp
pop
pushf
(bad)
jmp
stos
mov
sti
fstp
push
mov
mov
jp
xlat
jo
in
ins
mov
jecxz
into
xchg
(bad)
mov
call
pop
cmc
movs
lea
rol
jmp
test
xchg
push
pop
hlt
std
leave
and
enter
jnp
mov
lds
adc
cmc
dec
push
int
xchg
and
add
dec
jnp
jae
outs
add
sbb
add
push
popf
aas
es
sbb
movs
mov
adc
das
in
sbb
cdq
aam
mov
into
int
push
outs
jae
inc
fwait
and
xor
push
cs
into
in
xchg
mov
lds
stc
or
mov
xchg
movs
loopne
xchg
xchg
hlt
xor
lds
lea
fsub
or
jbe
(bad)
in
mov
cli
xor
mov
test
out
push
or
and
bound
or
out
mov
imul
pop
xor
call
call
dec
stos
mov
nop
nop
or
in
mov
scas
mov
and
dec
pop
(bad)
sub
ds
and
sahf
dec
daa
loopne
(bad)
movs
mov
lods
jbe
test
ja
push
int
adc
cmp
out
pop
or
mov
add
pop
(bad)
cmps
mov
call
sbb
push
mov
push
out
cwde
mov
(bad)
dec
ins
imul
xlat
xchg
or
or
sahf
pop
loopne
test
pop
fsubr
enter
lock
push
int3
add
adc
in
pop
mov
xchg
jl
sub
out
mov
mov
jl
les
sar
pop
sub
sbb
mov
mov
repz
jae
das
out
ret
gs
xchg
sub
ins
int
lds
or
xchg
add
xchg
(bad)
ficomp
cmp
push
stos
fadd
pop
gs
dec
mov
sbb
imul
cs
fs
in
inc
outs
jge
sahf
out
xchg
data16
jge
outs
pop
fistp
not
mov
je
dec
jae
pop
iret
jns
retf
dec
and
mov
cmp
cmps
mov
cmp
shr
mov
push
and
aam
das
pop
imul
lods
mov
les
out
jno
mov
(bad)
xor
inc
addr16
or
mov
mov
sub
cmc
fcmovbe
(bad)
pop
jbe
cmp
cld
jmp
out
mov
fdivr
repz
je
adc
out
dec
jl
jae
in
push
mov
test
sbb
jo
cmp
jmp
test
and
mov
fnstcw
test
lea
fcmovne
xchg
in
in
jl
jnp
jmp
xchg
adc
ret
pop
jae
out
pop
inc
mov
mov
(bad)
jecxz
pop
les
inc
in
das
addr16
sti
rcl
push
or
icebp
test
sti
cmp
cmp
shl
shr
enter
popf
scas
pop
dec
sub
fdivr
xor
je
add
mov
jb
fsub
test
inc
rcr
fmul
test
(bad)
movs
mov
jb
fisttp
gs
jns
jl
sbb
sar
in
pop
jmp
(bad)
or
mov
sahf
js
sbb
js
lods
and
pusha
(bad)
xchg
mov
sub
fcomip
clc
mov
loop
test
fucomip
fadd
push
sub
push
repz
cmp
popf
cmc
cwde
xchg
retf
scas
add
call
cmp
push
fs
stos
or
arpl
xor
adc
mov
jp
sahf
jmp
or
js
pop
mov
aas
mov
xchg
pop
jl
sbb
rcl
xchg
test
retf
ror
or
pusha
rol
sbb
test
xor
inc
addr16
add
jae
test
out
je
into
jp
icebp
xchg
pop
inc
push
mov
jo
ja
add
and
pop
ficom
fistp
repz
cmps
shl
adc
dec
push
jl
sub
push
mov
into
mov
dec
ins
call
fwait
stos
push
mov
xchg
popf
mov
push
and
dec
into
movs
jb
movs
push
xchg
xor
adc
jmp
dec
in
cmp
stos
popa
sbb
push
ja
iret
jl
aad
and
lock
lea
xor
les
xchg
leave
mov
test
sub
jmp
lods
out
xchg
div
retf
popf
fisttp
lods
cmp
or
sub
cs
mov
mov
ret
dec
lahf
ins
mov
test
sbb
mov
adc
pop
pop
mov
cmp
xor
pop
jmp
rcr
or
dec
add
lods
fmul
dec
shl
mov
xlat
mov
cmps
fcmovnbe
neg
les
pop
fcom
mov
inc
rcl
rol
sbb
ret
pusha
add
dec
mov
add
jo
or
jo
jp
push
push
fcmovb
aad
push
out
out
jg
pop
adc
cmp
add
cld
xor
mov
test
sti
shr
(bad)
(bad)
xchg
mov
mov
pop
mov
data16
sbb
nop
inc
jl
ins
fs
aaa
mov
inc
xor
sub
or
leave
cmp
and
xor
adc
movs
std
dec
aad
pop
push
inc
xchg
lds
int3
pop
pop
scas
jl
sub
or
in
cmp
pop
mov
sbb
sbb
clc
add
call
or
int
call
ds
adc
jge
inc
xchg
or
mov
ret
jmp
xor
xor
dec
loope
outs
mov
push
fwait
stos
loope
mov
xchg
pusha
das
out
push
in
(bad)
mov
jle
xchg
jne
ins
pusha
pop
aam
inc
je
retf
bound
mov
dec
int
ins
dec
outs
mov
xchg
mov
aaa
(bad)
jno
mov
cmp
mov
mov
retf
(bad)
inc
shr
shr
iret
call
and
daa
fcomp
addr16
shl
push
(bad)
es
nop
cmp
in
stos
push
pusha
int3
jo
retf
cmp
mov
cdq
call
and
out
addr16
icebp
xor
inc
jecxz
push
or
pop
(bad)
or
das
mov
mov
ror
mov
or
add
popa
retf
mov
imul
jb
ja
in
lea
in
push
cmp
add
jecxz
push
mov
or
mov
add
arpl
add
sbb
stos
ja
jmp
ja
ret
jne
cs
ja
fucomi
fdivp
(bad)
iret
cmp
ret
jbe
sbb
or
add
movs
call
fadd
out
clc
mov
jle
cli
sbb
lds
(bad)
cld
lods
mov
popf
out
(bad)
mov
cld
(bad)
fidivr
jl
jmp
test
cli
fld
mov
sbb
lods
test
xchg
jle
jbe
fucom
retf
ds
(bad)
popf
in
jno
data16
cmp
jle
add
fidivr
adc
jo
jo
shl
das
mov
sar
std
loope
ja
or
test
jg
mov
lock
or
push
mov
(bad)
xlat
jns
aaa
jge
call
jne
add
mov
xchg
pop
and
movs
mov
add
cmp
bound
and
add
sbb
or
je
pop
pusha
xor
add
rol
daa
jp
pop
jbe
push
or
nop
out
rol
test
cmp
cmps
jne
xlat
push
sbb
xchg
mov
dec
add
jo
aas
cmps
jl
aaa
adc
int
jl
aaa
jp
xchg
add
add
clc
jo
mov
and
popa
push
mov
xor
jp
push
push
mov
push
add
add
mov
ins
inc
mov
(bad)
xchg
pop
jns
test
add
add
adc
test
jg
mov
adc
hlt
add
sub
sub
js
out
mov
pop
mov
mov
imul
push
pop
add
jne
inc
mov
cmp
jnp
aad
scas
cmps
ins
dec
adc
lock
call
aam
jl
enter
dec
mov
test
add
jl
sbb
adc
aas
or
aaa
mov
or
mov
cmp
mov
imul
push
dec
cmp
test
inc
ja
mov
sbb
or
add
jo
mov
add
pop
xchg
or
and
or
clc
add
fdiv
add
cdq
jbe
test
es
sbb
mov
enter
jbe
loopne
inc
jo
pop
adc
pop
xlat
add
pop
xchg
and
pop
mov
xor
(bad)
sbb
fcom
mov
sub
js
call
or
(bad)
inc
test
sbb
outs
dec
test
inc
cmp
or
pop
xor
push
fst
or
jo
push
and
jp
push
mov
cwde
pop
not
jns
push
pop
cmp
jbe
stc
(bad)
pop
push
xchg
push
xchg
push
jns
popf
stc
mov
mov
xchg
dec
test
das
stc
mov
xchg
fcom
js
pusha
or
clc
add
jmp
mov
xchg
xchg
stc
xchg
sub
sbb
mov
xchg
in
push
add
xor
xor
xor
and
push
cdq
test
or
or
call
data16
popf
pop
nop
add
or
sub
enter
xchg
cmp
sahf
and
mov
xchg
repz
and
pushf
push
stc
add
sub
mov
mov
mov
cmp
sti
ret
xlat
xchg
jle
fwait
cwde
mov
pop
fwait
aam
add
pushf
ins
mov
fst
or
sub
jmp
loop
xchg
gs
lahf
cmp
movs
iret
leave
xchg
jae
jne
stc
(bad)
or
aaa
jns
mov
push
bound
mov
xchg
add
movs
pop
fcomp
pop
mov
pop
mov
fwait
push
mov
jmp
xchg
and
mov
stos
xchg
push
mov
and
xchg
out
enter
jo
adc
cdq
emms
cdq
sbb
jo
rcl
stc
mov
add
push
retf
test
add
jbe
test
jp
pop
mov
cmp
sub
fisub
imul
mov
mov
adc
jge
xchg
ret
test
pop
jns
xor
movs
jae
popf
jle
add
stos
jb
add
test
pop
lods
sub
mov
lea
inc
test
retf
sbb
cmp
leave
stos
push
fdivr
pushf
pop
push
xchg
push
clc
mov
mov
sbb
dec
jp
sub
cmps
std
test
inc
and
pop
jo
fwait
call
push
xchg
mov
lahf
(bad)
cwde
dec
add
fisubr
xchg
mov
dec
cdq
or
jmp
pop
sahf
cmp
call
mov
dec
movs
mov
lods
push
dec
mov
cdq
mov
mov
push
adc
or
pop
mov
stc
js
or
cli
xchg
push
mov
fst
sub
lock
test
sbb
cdq
popf
or
mov
out
mov
mov
mov
cli
xchg
(bad)
cwde
jle
pushf
mov
outs
stc
xchg
adc
mov
mov
mov
add
mov
sbb
lods
pop
mov
repz
xchg
popa
inc
fwait
retf
jmp
test
stos
repz
sub
outs
sti
adc
or
xchg
cmp
mov
aad
mov
sub
imul
jae
mov
stos
popf
mov
or
mov
pop
stos
dec
stc
mov
cmp
mov
mov
dec
lods
in
xchg
inc
add
inc
or
push
popa
jg
mov
jmp
aas
mov
jp
xchg
jmp
sub
fcomp
sbb
sub
fdiv
jmp
ret
sbb
and
add
pop
push
jmp
lahf
stos
add
ins
pop
xor
pop
mov
out
cmp
imul
add
sti
xchg
fwait
sbb
(bad)
pop
ret
sub
mov
arpl
(bad)
sbb
mov
jnp
xchg
jmp
ret
mov
out
les
mov
jmp
jbe
lahf
xor
ror
test
jmp
mov
leave
add
stc
mov
mov
add
push
(bad)
dec
into
sub
cmp
mov
stos
les
enter
mov
mov
pop
les
ret
scas
aas
ror
add
je
mov
sub
inc
shl
pushf
(bad)
jnp
retf
jg
pop
adc
pop
scas
mov
mov
jo
add
retf
mov
lods
mov
dec
mov
pushf
enter
ror
sub
int3
nop
cmp
inc
in
mov
fcmovnb
xchg
fadd
cwde
in
(bad)
into
inc
add
cmc
sub
int3
pushf
retf
int
fstp
lods
lods
sbb
int3
sbb
test
mov
in
int3
int3
call
jns
and
mov
cs
vshufps
outs
or
outs
sbb
repz
retf
jl
loope
xchg
in
cmp
sbb
into
jae
ret
jnp
ret
mov
ret
ror
stos
mov
lods
mov
in
int
fwait
rcl
xor
mov
(bad)
pop
push
add
add
ins
scas
clc
cdq
mov
pop
iret
mov
shl
(bad)
ror
push
(bad)
shl
int3
add
ins
enter
inc
std
rol
mov
jns
mov
ror
pop
lods
aad
or
cdq
mov
idiv
shr
(bad)
(bad)
cmp
push
sar
aad
jmp
jne
shr
(bad)
(bad)
inc
jl
fmulp
into
or
(bad)
xchg
pop
lods
mov
sbb
int3
(bad)
adc
(bad)
mov
fdiv
iret
or
xchg
lods
aad
(bad)
ins
shl
int
pop
push
push
mov
mov
shl
sbb
enter
fadd
shr
imul
xor
pusha
push
scas
in
ins
retf
mov
or
pusha
add
mov
stos
sbb
mov
shr
aad
pop
les
into
inc
cld
xlat
add
leave
shr
cmp
outs
mov
(bad)
shr
lods
(bad)
mov
fcmovnb
lods
int3
mov
(bad)
out
into
in
mov
xlat
sub
xchg
sbb
stos
fadd
lods
iret
test
mov
lods
repz
dec
jge
ja
mov
fstp
fdivr
push
cmp
mov
adc
mov
pop
(bad)
(bad)
std
xlat
push
into
and
out
in
fist
push
fisttp
add
(bad)
add
or
ds
cmp
aad
out
or
aam
rcl
lods
fiadd
into
fdiv
xlat
cmp
fcom
loope
ins
fstp
mov
outs
scas
or
sbb
fbld
rol
fucomp
lods
fiadd
popf
fld
(bad)
js
loopne
in
out
sbb
pop
lods
jecxz
outs
(bad)
call
dec
call
popf
loope
sub
sbb
pop
push
out
int
dec
fsubp
nop
(bad)
call
jge
sahf
dec
shl
pop
push
cmp
ret
or
js
int3
outs
sahf
loope
pop
loope
inc
push
xlat
imul
sahf
ds
out
aad
(bad)
out
std
jmp
pop
pop
jmp
cmp
inc
dec
out
in
mov
lods
in
ds
pop
in
and
sub
sbb
js
jmp
jb
in
int3
pop
loop
jge
xchg
sahf
in
cmp
jmp
xlat
pop
fsub
xlat
push
push
out
mov
in
call
cmp
mov
fimul
iret
std
sahf
jmp
add
add
aad
add
dec
pusha
out
into
add
mov
std
mov
sbb
lock
repnz
mov
cld
jmp
xchg
icebp
add
fstp
add
and
aam
mov
mov
icebp
scas
push
in
xchg
mov
add
xchg
mov
push
(bad)
lahf
outs
icebp
pop
push
repnz
pmaxsw
out
in
rcr
out
inc
(bad)
ficomp
jmp
fdivp
mov
in
dec
repnz
dec
cs
outs
jmp
jns
loop
cmp
sbb
hlt
psllq
(bad)
aad
popf
out
cmp
es
xchg
jp
not
cmc
(bad)
(bad)
mov
xchg
pop
push
mov
pop
dec
shr
sti
repnz
out
test
repz
sub
xor
inc
out
jmp
cmps
fcomip
mov
repnz
mov
lods
(bad)
cld
sahf
(bad)
repz
div
jge
cmp
adc
movs
pop
out
pop
out
out
mov
inc
(bad)
retf
js
in
aas
sti
mov
mov
mov
mul
inc
aas
sti
fmul
(bad)
out
lods
cmc
mov
stc
add
mov
std
gs
fstp
sub
test
sub
mov
mov
sub
popf
sbb
xchg
xchg
mov
lea
mov
dec
and
scas
mov
push
mov
fwait
nop
xchg
xchg
scas
sbb
mov
cmps
xchg
mov
rol
fidivr
mov
lds
lds
out
repnz
cmc
(bad)
mov
sbb
pop
mov
outs
loope
test
dec
fisub
cmp
retf
pop
mov
sub
or
xor
mov
mov
pop
rcr
icebp
mov
pushf
mov
or
lods
adc
or
lahf
sub
jo
or
in
xor
imul
or
jb
mov
xchg
push
jne
mov
mov
mov
sub
scas
pop
dec
and
mov
stos
(bad)
or
sub
into
push
or
push
xor
sbb
movs
push
sbb
movs
cmp
int
retf
pop
dec
into
nop
add
mov
out
xlat
out
xchg
add
mov
jecxz
in
(bad)
arpl
fs
pop
into
test
sbb
jecxz
cmp
inc
push
rol
cmp
xchg
jne
dec
mov
pop
out
scas
cmp
ret
pop
adc
xor
in
mov
mov
mov
in
lea
pop
push
xchg
jno
movs
xor
xor
mov
inc
push
mov
xchg
bound
sub
dec
cmps
push
add
adc
inc
pop
mov
mov
(bad)
mov
push
mov
fadd
mov
nop
aaa
sbb
add
add
mov
sbb
add
jg
popa
popa
or
fdivr
mov
sub
xchg
cmp
or
inc
fs
push
iret
in
out
aas
out
adc
(bad)
mov
inc
shl
out
add
es
jo
push
sbb
lds
add
inc
adc
cmp
rol
dec
stos
les
mov
test
nop
call
test
(bad)
jb
jmp
jmp
sub
fwait
ins
cmp
jbe
imul
test
scas
mov
lods
(bad)
call
lods
outs
into
mov
ficomp
mov
jp
loop
iret
push
pop
push
adc
jp
call
pop
inc
out
test
fisub
pushf
aaa
jp
loopne
xchg
mov
jmp
jnp
retf
cmovo
inc
mov
dec
out
(bad)
jo
adc
loop
push
inc
mov
mov
pop
aaa
xor
adc
xchg
nop
in
xor
sub
adc
jb
(bad)
mov
push
mov
int3
cs
shr
mov
dec
lods
fdiv
and
pop
imul
mov
push
dec
fdiv
xor
ds
(bad)
rcr
xchg
inc
inc
ror
ss
popf
out
repnz
lods
mov
cmp
mov
dec
xchg
pop
aaa
fisttp
aas
outs
sub
std
sub
mov
lahf
cdq
es
arpl
xor
ins
xor
mov
dec
jmp
push
and
out
cmp
xchg
iret
pop
or
retf
mov
call
ds
mov
pushf
pushf
push
pop
popf
out
in
ret
outs
cs
aam
jle
ja
int3
mov
inc
iret
mov
inc
bnd
ins
ja
xchg
fwait
jno
adc
and
add
clc
pop
sbb
lods
into
imul
mov
mov
jg
hlt
add
pop
test
cmp
mov
sar
add
mov
pop
(bad)
mov
mov
jns
jbe
xor
add
popf
in
adc
(bad)
cli
addr16
je
sbb
cmp
rcl
popa
leave
pusha
vpunpckhdq
inc
or
(bad)
sub
out
or
add
and
or
add
xor
xchg
jmp
pop
cmp
pop
cmps
mov
push
adc
pusha
adc
sub
(bad)
pop
hlt
mov
add
jbe
pushf
mov
loopne
out
jbe
je
cwde
mov
mov
push
les
int
das
pop
jecxz
(bad)
cmps
shl
scas
xchg
xchg
or
dec
mov
jecxz
adc
enter
xchg
xchg
in
pusha
es
xchg
xchg
push
mov
dec
call
push
leave
retf
repnz
lods
and
sub
sub
(bad)
rcl
ja
retf
pop
cli
repnz
ror
xchg
bound
repz
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
into
or
hlt
mov
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
inc
dec
add
cmp
ss
test
mov
adc
push
popf
adc
pusha
add
adc
or
push
test
test
lods
jmp
jne
aad
add
pop
push
lock
daa
rcl
loope
pop
int
pop
or
push
scas
jle
test
or
mov
dec
std
sub
pop
push
popf
outs
xchg
mov
test
mov
(bad)
mov
xor
(bad)
xor
scas
push
jge
adc
fisubr
xor
add
cli
mov
addr16
add
enter
test
pop
or
xchg
lods
inc
cwde
sub
fistp
add
imul
mov
inc
jmp
xlat
mov
cmp
(bad)
sub
push
out
mov
cmp
pop
lock
push
mov
or
and
mov
xchg
mov
fdiv
push
stos
shr
and
sar
jg
adc
loope
push
ret
xor
data16
test
and
pop
sub
mov
les
lock
imul
xlat
mov
add
and
or
push
or
rol
lods
xor
lods
(bad)
mov
jbe
pop
xchg
inc
cmp
retf
cmp
mov
aam
add
add
stos
adc
int3
push
adc
mov
imul
add
popf
cs
jge
in
mov
mov
and
fbstp
cmc
jo
addr16
or
(bad)
mov
mov
scas
sbb
arpl
pusha
cmp
cmp
shl
in
ins
std
jmp
inc
jg
add
cld
bound
pop
mov
popf
fcom
(bad)
pop
add
outs
xchg
cdq
sub
fisub
sbb
mov
xchg
sbb
sbb
fs
lods
movs
in
jmp
sbb
jg
in
pop
sbb
ss
sub
stos
bound
or
shr
pop
aam
enter
lods
pop
fadd
stos
pop
cmp
(bad)
add
js
mov
aaa
jno
out
call
add
or
mov
push
(bad)
or
jmp
xlat
sub
loopne
or
jbe
lahf
stc
retf
jmp
cmp
int
lea
lock
cmp
fldenv
sub
in
ds
inc
jle
(bad)
in
dec
hlt
cmps
jne
jno
xor
fdivp
cmc
sar
call
retf
or
mov
pop
jmp
icebp
mov
cs
cmp
in
(bad)
fnsave
lahf
mov
adc
pop
mov
nop
mov
(bad)
fbld
fistp
dec
and
mov
(bad)
stc
ret
push
pop
cmp
popf
neg
div
dec
adc
jmp
sbb
add
(bad)
in
int3
stc
scas
lods
mov
cmp
int
test
cmp
jbe
xchg
cwde
out
adc
mov
daa
(bad)
mov
jne
add
inc
pop
(bad)
mov
ds
arpl
mov
xor
pop
sahf
sub
aam
out
ds
sbb
outs
mov
lods
lods
ds
out
mov
sub
out
bound
add
add
xchg
stc
repnz
ins
fwait
(bad)
push
and
add
imul
jno
out
lock
je
jge
(bad)
js
adc
cmp
add
jbe
push
cmc
jp
idiv
movs
jg
mov
cli
xchg
jp
sub
inc
adc
out
bound
jo
cmp
inc
add
push
pop
xor
ins
mov
pop
or
cmp
ret
inc
push
shl
cmp
and
dec
dec
jge
mov
adc
dec
add
jmp
test
jae
push
add
mov
shl
enter
addr16
aaa
jle
adc
and
add
aaa
mov
div
(bad)
jp
add
jae
xchg
addr16
outs
jb
test
xchg
push
popf
push
mov
pop
ficom
add
inc
pop
dec
ja
test
jmp
pop
mov
xrelease
xchg
jns
jbe
ss
stos
push
jne
test
loopne
ins
push
mov
jp
xchg
test
imul
rol
inc
enter
js
test
ins
mov
push
inc
fs
push
mov
adc
daa
lea
pop
retf
enter
push
xchg
jne
jg
cmp
mov
push
ret
inc
sbb
pop
jno
imul
addr16
leave
aad
pushf
jbe
cli
mov
into
push
pushf
cmps
jae
xchg
addr16
out
cdq
es
call
je
ja
jecxz
pop
xchg
adc
mov
xchg
push
jne
sbb
jns
mov
ins
sub
mov
jo
sbb
pop
jne
mov
mov
xchg
ja
fadd
data16
pop
jb
clc
adc
fs
ins
mov
gs
imul
xchg
ins
fdivrp
mov
push
inc
call
jmp
jo
cmps
pusha
mov
mov
arpl
pop
and
mov
fs
push
mov
sbb
jns
fadd
mov
add
bound
test
xchg
jl
mov
daa
pop
aam
push
mov
jecxz
pusha
sub
ins
mov
dec
inc
mov
lea
cdq
retf
xchg
pop
jne
jne
adc
add
movs
mov
jmp
cmp
imul
push
add
fwait
mov
popa
dec
mov
pop
adc
cmp
pop
cmp
ret
xchg
add
test
aaa
jb
ja
fbld
fst
xor
jo
in
push
nop
jle
fs
push
sbb
pop
and
push
popf
mov
mov
mov
xor
enter
mov
shl
popfw
out
(bad)
out
out
data16
sti
fnstcw
mov
push
enter
arpl
push
and
popf
or
or
push
sub
push
add
add
sbb
or
adc
sub
mov
sbb
movs
inc
jp
dec
call
movs
dec
cli
movs
push
sbb
pop
movs
push
jp
pop
cmp
add
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
adc
mov
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
aam
aam
sub
sbb
jp
hlt
repnz
adc
or
pop
push
lods
stos
lods
cmp
cmp
call
add
dec
dec
ins
data16
adc
cs
jle
fs
pop
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
sahf
movs
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
pop
pop
pop
lods
scas
lods
cmp
cmp
call
push
inc
inc
inc
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
fs
fs
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
add
or
mov
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
pop
rcl
retf
jo
mov
lods
out
sub
jmp
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
push
loopne
lock
push
retf
mov
pop
stos
mov
jmp
js
or
mov
sub
shl
jp
adc
mov
dec
xchg
xchg
xchg
and
por
cli
lods
adc
and
jg
mov
push
push
fwait
mov
sti
lods
or
add
mov
sub
pop
mov
jmp
pop
retf
scas
cli
sbb
mov
stos
cmp
nop
mov
imul
mov
fwait
lods
call
pop
jo
inc
inc
add
dec
inc
or
fisttp
mov
lock
fwait
mov
cli
mov
push
and
mov
pop
mov
dec
mov
retf
mov
mov
nop
imul
mov
stos
mov
retf
mov
jmp
mov
mov
cmp
retf
mov
stos
mov
rol
and
(bad)
or
mov
adc
add
les
mov
mov
jnp
leave
fwait
add
stos
mov
sub
stos
add
sbb
cmp
mov
mov
loopne
mov
mov
mov
mov
mov
or
fwait
ja
pop
mov
xor
enter
add
add
cld
rcr
add
sub
loopne
mov
add
dec
add
ret
ret
add
lock
shl
ret
ret
mov
ret
aaa
ins
add
jmp
add
dec
ret
add
mov
cmp
fcmovnb
and
int3
add
inc
add
push
mov
cli
lds
lds
(bad)
jp
(bad)
pop
mov
pop
ins
lds
mov
and
mov
xor
inc
and
sub
ja
mov
mov
and
mov
ins
add
xchg
(bad)
xchg
lods
xchg
enter
xor
enter
sbb
inc
(bad)
dec
rol
call
retf
cli
dec
add
retf
add
xchg
cmps
mov
movs
or
jnp
(bad)
jnp
stos
cmovo
sahf
mov
ret
xchg
ins
add
add
adc
add
push
push
add
leave
xchg
mov
aam
int3
into
pop
into
(bad)
in
mov
or
lahf
lods
xchg
movs
retf
int3
int3
jmp
iret
in
mov
cmp
retf
cmp
(bad)
in
mov
pop
int
fadd
sbb
inc
call
shl
mov
call
iret
jns
ror
dec
ret
icebp
jl
xchg
pushf
shl
mov
add
icebp
ins
add
std
into
repz
or
out
fmul
push
sub
xor
(bad)
cmp
int3
pop
shl
cld
into
sub
inc
push
xor
aad
add
stos
add
xchg
jl
retf
pushf
int
cmp
(bad)
cld
iret
mov
int3
fdivr
cli
int
inc
aad
dec
shl
mov
(bad)
lods
aad
int
cmp
mov
int3
pop
dec
into
adc
mov
(bad)
ins
dec
(bad)
clc
ins
(bad)
outs
(bad)
into
hlt
jl
aad
int
fld
mov
(bad)
out
call
ins
in
shr
ins
fdivr
xlat
nop
sub
(bad)
fmul
cli
pop
xlat
ds
es
cli
dec
aam
mov
in
(bad)
mov
add
fisub
popf
fimul
fadd
and
sub
int
sbb
push
fstp
cmps
popf
aam
or
movs
popf
into
test
leave
std
int3
int
std
fild
fild
dec
shr
or
xor
rcr
xchg
std
leave
jp
int3
pusha
or
outs
cmp
aam
(bad)
xor
aad
ins
leave
fs
adc
fisub
jp
fst
(bad)
rcl
aad
std
fsubp
ins
fcom
fsub
dec
aad
pop
add
in
fst
rcr
pop
aam
int
(bad)
mov
mov
pop
outs
leave
std
sub
mov
int
popf
rol
mov
xchg
or
daa
xor
mov
in
dec
fidivr
add
mov
and
push
lods
fdivr
fist
dec
into
ficomp
fcomp
xchg
sub
enter
sub
xor
jecxz
sbb
jns
loop
pushf
fcomp
ds
pop
aam
cld
iret
aaa
(bad)
fucomp
pop
(bad)
in
aam
xor
push
fisubr
ret
ret
fsubrp
in
into
loopne
cld
loop
pop
fnsave
pop
iret
cmp
leave
int3
fist
jecxz
mov
cwde
fucom
pusha
push
out
in
in
sbb
inc
mov
pusha
out
out
(bad)
push
out
aad
jge
dec
inc
stos
mov
fstp
aad
into
in
out
leave
cmp
jmp
into
fidivr
in
scas
in
pushf
loopne
fucom
jno
out
cld
in
mov
(bad)
adc
call
(bad)
out
fsubp
loope
loope
mov
(bad)
or
ret
mov
out
rcr
add
add
ins
out
popf
int3
lods
pop
fsub
in
pop
outs
in
pop
in
into
fstp
leave
fcomp
jmp
xchg
out
jecxz
mov
push
dec
out
jb
jmp
push
jmp
adc
jecxz
call
mov
aas
jle
gs
fsub
lock
add
scas
in
sahf
loop
pop
out
into
or
sbb
in
xlat
push
jmp
fucom
xchg
dec
into
stos
dec
int3
(bad)
jl
out
lock
fiadd
out
add
call
popf
out
pop
sbb
mov
out
cs
jnp
in
jecxz
aam
jge
lea
retf
dec
in
es
in
sbb
dec
(bad)
add
icebp
pusha
lock
jge
ror
cld
popf
icebp
push
dec
leave
mov
lock
lock
rol
ins
loope
sub
out
lock
fild
or
cmc
enter
iret
fidiv
fdivp
sbb
outs
hlt
movs
cmp
pop
lahf
in
sub
add
xor
cs
sub
test
aas
xor
mul
jecxz
jmp
and
out
das
clc
retf
movs
scas
test
xlat
ss
test
mul
mov
jmp
dec
fcomp
mov
mov
jmp
arpl
bound
jmp
aas
stos
push
sar
mov
neg
cmc
int
fmulp
push
mov
sti
cmp
out
sar
mul
loope
dec
cld
icebp
out
jmp
sbb
std
pop
mov
mov
lock
in
cli
cmp
div
clc
dec
lahf
repnz
pop
inc
stos
push
and
add
enter
aam
push
shl
dec
push
loopne
pop
mov
jns
call
test
rol
stc
sub
test
mov
jmp
fstp
sbb
jmp
cwde
fstp
sbb
fcmove
pop
dec
stos
retf
cli
sub
mov
jmp
mov
sbb
mov
sub
jno
pop
jns
(bad)
(bad)
dec
pop
frstor
or
sbb
or
sbb
pusha
ret
inc
out
push
pop
push
and
lods
into
int
movs
dec
pop
test
mov
or
in
push
add
mov
mov
and
cmp
mov
retf
fsub
push
push
call
gs
mov
call
loopne
jp
or
inc
test
loop
fldcw
xchg
add
cmp
loop
inc
or
out
js
add
add
or
sub
ins
cmp
mov
(bad)
hlt
in
cs
test
push
fcom
sub
(bad)
cmp
mov
adc
adc
je
fcomp
xchg
imul
or
data16
fldcw
mov
xchg
add
ja
xor
ss
mov
or
lea
jp
mov
cmps
daa
scas
jns
cmp
dec
ins
call
jbe
mov
retf
rcr
fcmovb
das
push
jbe
cli
fdiv
ficom
dec
retf
fidivr
adc
cmc
xor
mov
xchg
mov
stos
in
and
inc
push
sub
int
ja
data16
and
sbb
lahf
jp
xor
add
mov
sbb
loope
mov
ja
dec
cmp
ss
sbb
lea
pop
mov
xlat
mov
dec
cwde
cdq
push
push
adc
push
pop
or
sahf
and
adc
pop
xchg
in
sar
call
pop
test
jecxz
je
ret
leave
test
push
add
mov
inc
mov
mov
cwde
jnp
sub
mov
xchg
xchg
in
stc
mov
movs
mov
or
push
pushf
scas
cmp
xchg
sub
mov
adc
push
xchg
stos
push
adc
nop
nop
jp
mov
xchg
mov
sub
mov
retf
mov
mov
in
es
clc
cmp
sbb
cmp
ja
mov
sub
mov
and
push
push
pop
mov
mov
mov
push
dec
movs
and
fcmove
pop
bound
push
and
jmp
ja
ret
fsubr
scas
jae
mov
fld
mov
imul
pushf
add
mov
and
cli
inc
in
jne
iret
add
add
xchg
(bad)
adc
fdiv
sbb
sub
mov
jnp
cs
mov
test
das
xor
cmp
inc
xor
inc
shl
(bad)
or
inc
fwait
mov
adc
mov
fwait
or
outs
add
aam
ja
pop
pop
mov
int3
loop
not
pop
pop
jns
retf
pop
xor
dec
repnz
sub
dec
rep
pop
pop
jle
sub
sub
sbb
or
out
fcomp
leave
dec
(bad)
jge
scas
dec
mov
inc
add
jmp
repnz
sub
fsub
in
push
scas
or
cmp
repnz
hlt
out
pop
ds
loope
xor
mov
pop
imul
data16
sbb
out
stos
ds
xchg
retf
shl
shr
sbb
neg
jge
outs
jbe
int3
jecxz
test
xchg
aas
ret
scas
xchg
loop
mov
sub
cmc
dec
xchg
(bad)
mov
mov
fsubr
hlt
inc
stos
rcl
lea
popf
lods
out
or
mov
pop
mov
movs
nop
push
repnz
je
mov
and
xchg
fsub
dec
xchg
sub
mov
xor
xchg
xor
in
ja
loopne
fist
cmp
jne
pop
pusha
xor
pop
daa
mov
mov
je
js
out
push
sbb
dec
sub
into
push
and
mov
(bad)
arpl
jecxz
push
xchg
cmp
dec
pusha
sbb
cmp
mov
mov
and
into
xlat
add
loop
or
sub
lods
mov
xor
pop
fwait
pop
push
mov
sti
push
scas
xchg
add
mov
push
and
pop
mov
sub
add
xor
xor
or
std
sub
adc
and
gs
mov
in
add
push
jnp
cmp
out
(bad)
clc
inc
pop
mov
and
pop
in
push
mov
cwde
and
shl
mov
sub
shl
jb
mov
push
xor
mov
dec
push
pop
fcom
cmps
dec
pop
(bad)
xor
test
cmp
in
lahf
sbb
mov
xor
bound
leave
cmp
outs
mov
pop
xor
(bad)
push
scas
scas
lahf
movs
rol
pop
sub
and
and
rol
mov
repnz
push
xor
in
pushf
sar
call
xchg
sub
cmps
add
aam
xchg
div
mov
(bad)
push
inc
sbb
add
mov
mov
es
shl
retf
xchg
lock
imul
ficom
dec
lods
mov
dec
xchg
xchg
pushf
lds
jecxz
mov
push
mov
mov
gs
test
(bad)
popf
mov
movs
sub
inc
push
bound
pushf
add
ror
aad
push
shl
dec
jecxz
int3
mov
jl
pop
xor
test
and
xlat
nop
dec
push
int
je
push
cmc
test
sub
cdq
push
stos
dec
dec
adc
add
int
outs
gs
mov
jnp
loopne
cmc
test
(bad)
jp
out
test
ficom
scas
pop
cmps
pop
jns
pop
add
xlat
mov
push
stos
pop
loope
xchg
push
push
adc
or
pop
scas
es
sbb
add
push
rol
psubusb
ret
pusha
add
and
add
cmc
outs
or
jo
jns
sbb
jae
ficom
dec
idiv
repz
or
ret
std
adc
xor
mov
adc
(bad)
stc
scas
scas
mov
daa
dec
(bad)
(bad)
xchg
ret
add
and
push
cwde
mov
cmps
nop
arpl
add
mov
test
pop
sar
ja
cmp
mov
add
les
push
jno
es
mov
xchg
scas
sub
sub
into
retf
repnz
aas
shl
cmp
adc
mov
pop
repnz
push
mov
adc
cmp
neg
add
out
and
mov
mov
test
addr16
shl
out
cmps
push
mov
inc
ror
mov
int
xor
in
dec
add
and
fwait
push
lods
out
imul
cmp
mov
fdiv
ror
fucom
push
rol
and
test
test
mov
mov
mov
dec
pop
imul
pop
pusha
into
ret
jo
fs
mov
ficom
stos
aaa
sub
(bad)
fist
sbb
shr
gs
adc
mov
ins
ss
(bad)
mov
popf
adc
int
pop
aas
push
add
push
mov
sbb
adc
adc
loopne
add
jb
pop
or
loope
cmp
cmps
pop
mov
les
fsub
add
daa
pushf
loope
inc
stc
jmp
out
dec
mov
lahf
pop
icebp
pop
(bad)
sti
or
fsubr
or
loopne
mov
ror
lock
fwait
inc
daa
cli
outs
pop
and
daa
xor
(bad)
stos
pop
jno
sti
mov
ficom
loopne
jge
inc
xor
and
sbb
fcom
out
imul
pop
mov
cmps
ja
xchg
pop
in
sbb
mov
pop
lds
into
jbe
mov
add
inc
fsubr
(bad)
jbe
inc
pop
in
(bad)
sbb
lahf
jns
je
xor
adc
not
(bad)
(bad)
xchg
cmp
(bad)
pop
jbe
(bad)
jmp
push
jg
sub
ret
jle
leave
cmps
cmp
xlat
mov
cmp
fisttp
outs
stc
daa
mov
cmps
fimul
pop
cld
dec
pop
(bad)
mov
cmp
imul
out
jle
push
ja
icebp
lahf
pop
(bad)
movs
xlat
div
mov
cld
xlat
das
je
pop
jp
xchg
cmp
mov
std
mov
sete
es
mov
push
mov
or
or
sbb
add
rol
inc
jnp
cmps
jns
pop
js
addr16
ja
adc
jge
pop
jge
push
call
adc
data16
or
imul
cld
xchg
add
lock
ss
xor
jg
cwde
jnp
push
add
pop
mov
outs
push
jnp
sbb
xchg
mov
fincstp
jle
pop
add
pop
test
ins
add
add
cmp
sub
je
sbb
mov
je
add
jg
test
fnstenv
inc
mov
dec
and
add
dec
clc
add
xor
or
cmp
push
clc
inc
push
xor
fadd
mov
sahf
or
or
push
jne
sar
aaa
test
add
jns
push
sub
bound
cmp
add
dec
addr16
test
push
dec
xor
mov
xlat
mov
mov
(bad)
xchg
jne
enter
jp
cmp
sbb
fsub
hlt
js
sub
push
mov
mov
cwde
xchg
mov
(bad)
clc
jge
js
jbe
mov
sbb
stc
xlat
add
and
fcom
and
lock
or
and
push
imul
nop
mov
sbb
push
add
xchg
add
nop
xchg
jns
add
nop
fidivr
and
or
mov
mov
pop
dec
nop
popf
cwde
xchg
loop
test
(bad)
xor
xor
mov
xchg
pop
pop
xchg
pop
jmp
xor
xchg
inc
clc
xchg
test
mov
mov
and
imul
add
cmp
sub
push
mov
sbb
fst
pop
and
jbe
jns
push
test
ja
lea
cdq
and
push
sbb
push
xchg
pusha
pop
add
mov
jle
add
shl
(bad)
(bad)
dec
xchg
cld
fcom
jecxz
aaa
cdq
jg
(bad)
test
sub
jle
fld
addr16
xor
pop
mov
out
scas
sbb
cdq
xchg
cmp
test
xchg
or
cmp
test
sahf
test
xchg
leave
xchg
into
fld
push
jle
mov
adc
or
jns
adc
dec
aaa
xchg
push
je
test
lea
dec
stc
ja
pop
mov
dec
xchg
dec
pop
mov
xlat
xchg
mov
out
mov
call
and
pushf
lods
mov
cdq
pushf
pop
not
fst
pop
cmp
xchg
pop
cdq
jg
cdq
pop
(bad)
jge
cdq
mov
xchg
inc
push
and
fwait
mov
fwait
mov
cmp
mov
leave
mov
dec
mov
test
outs
test
pop
stc
sahf
cmp
cmp
add
and
mov
xchg
inc
mov
push
dec
nop
push
sbb
imul
and
xor
je
jp
rcl
imul
call
fs
cmps
imul
aad
xchg
mov
pushf
adc
test
fst
or
imul
mov
fldenv
pop
mov
fldenv
imul
mov
mov
pusha
stos
jp
add
sub
cmp
sub
call
dec
jmp
cli
fst
jp
mov
nop
or
mov
test
test
dec
ja
mov
mov
sub
lods
fs
add
lods
hlt
jmp
and
add
mov
icebp
mov
call
out
sub
jns
adc
stos
inc
fcom
pop
test
cmp
gs
add
sahf
sub
lods
sbb
jle
mov
mov
mov
mov
sbb
pop
mov
pop
add
jg
cmp
(bad)
cdq
cmp
popf
sub
lahf
or
imul
call
add
sti
lahf
mov
call
inc
mov
stos
sahf
enter
fstp
mov
sbb
test
fisubr
dec
lods
mov
add
push
jmp
imul
je
popa
pusha
mov
call
sahf
lahf
call
das
inc
adc
ins
cmp
dec
xchg
pop
fldcw
or
push
popf
retf
cdq
push
mov
mov
mov
or
sub
sbb
retf
add
mov
mov
mov
mov
mov
mov
mov
add
cmp
or
mov
dec
cwde
or
fisubr
ret
ficomp
mov
fwait
xchg
leave
mov
jmp
add
add
add
cmp
mov
popf
or
xchg
add
mov
sbb
jl
push
sbb
inc
add
adc
jmp
mov
adc
mov
sbb
jmp
retf
mov
pop
mov
dec
mov
cdq
ret
ret
cdq
ret
or
or
inc
jmp
mov
mov
sub
fwait
ret
cmp
mov
leave
add
mov
inc
add
mov
sti
lods
mov
lds
in
xchg
test
scas
dec
imul
imul
mov
(bad)
dec
mov
ror
adc
aaa
jl
jae
stos
sbb
lds
or
inc
call
adc
test
jnp
mov
add
add
sahf
cs
call
jae
mov
or
popf
or
pushf
test
sar
aaa
in
les
(bad)
sbb
sub
lea
mov
mov
lods
scas
stos
sbb
mov
mov
pop
dec
int
sbb
iret
mov
data16
or
jbe
retf
cmp
add
mov
mov
jnp
mov
mov
mov
enter
retf
xchg
(bad)
lods
mov
or
sub
(bad)
int3
xchg
mov
(bad)
mov
mov
fwait
xchg
stos
fwait
mov
or
inc
cmp
(bad)
sub
pop
push
add
add
mov
call
jmp
xchg
or
and
cld
or
fcomp
sub
ret
jnp
shl
pop
in
sahf
repnz
push
mov
std
jp
inc
(bad)
shr
(bad)
ficomp
retf
int3
sti
in
(bad)
into
rcr
sbb
push
in
les
mov
mov
popf
ror
iret
nop
cld
mov
fstp
mov
xor
aam
push
jb
int
sub
jnp
rcl
(bad)
out
jns
sub
xchg
xlat
jl
xlat
or
jnp
mov
sbb
mov
int3
gs
int
fst
dec
fst
pop
ins
add
inc
add
mov
aam
leave
(bad)
std
mov
mov
test
(bad)
sbb
push
sbb
stos
cmp
pusha
cmp
icebp
jl
sub
push
or
or
iret
inc
in
mov
pop
(bad)
outs
popf
shl
mov
cli
dec
xlat
fldcw
daa
in
xlat
or
add
rcr
test
aad
(bad)
mov
leave
addr16
mov
shl
jb
fbld
shr
(bad)
repnz
mov
out
mov
sti
sub
xor
(bad)
stos
pop
ficomp
fisubr
retf
push
sahf
fld
aam
mov
push
mov
fdivr
mov
rol
retf
ror
and
inc
popf
sar
lods
aam
mov
jb
fld
fild
fild
fild
in
sar
fstp
aam
loop
inc
cmp
aam
fcmovb
jmp
loop
int
dec
outs
fcomp
(bad)
cmp
lea
(bad)
aam
ins
xlat
mov
(bad)
(bad)
das
fsub
mov
jecxz
sbb
pop
sahf
jecxz
push
loop
pushf
shl
in
out
(bad)
out
dec
fistp
aaa
scas
in
std
fdivr
mov
out
fisttp
fmul
aad
rcl
out
(bad)
shl
mov
xlat
xchg
add
in
in
out
mov
arpl
jp
scas
frstor
out
jle
ror
in
jmp
(bad)
and
sbb
jecxz
fistp
mov
sub
rcl
(bad)
fst
stc
mov
sar
ret
add
fist
fbld
loopne
out
shl
out
into
aam
outs
in
pop
(bad)
fucomp
rcr
mov
pop
into
aam
pop
out
pop
jmp
dec
scas
out
(bad)
(bad)
out
lea
push
jmp
fwait
jecxz
pop
out
or
popa
ds
or
jnp
add
push
adc
repnz
jmp
sbb
mov
mov
out
outs
aad
pop
out
mov
call
out
in
mov
icebp
lock
add
movs
pop
fiadd
lock
sub
popa
push
icebp
and
pop
cs
out
in
inc
aas
out
sbb
dec
mov
pop
psllq
out
out
in
pushf
loop
jle
mov
icebp
sbb
call
cmp
xor
sub
rcr
icebp
or
jmp
iret
loope
(bad)
ficom
repz
ret
lock
dec
xchg
xor
sub
icebp
xor
retf
(bad)
out
out
scas
cs
pop
in
jne
repnz
out
int
cmc
ds
lock
loopne
mov
or
or
loopne
mov
clc
cmp
scas
rcr
jmp
sbb
das
clc
loope
clc
int
nop
push
cmc
daa
jg
mov
jmp
mov
loope
loope
pop
jmp
push
dec
cmc
call
inc
out
lock
fisttp
neg
fdivrp
in
sti
lock
stc
hlt
mov
jo
hlt
mov
idiv
clc
movs
scas
stc
(bad)
out
pop
(bad)
clc
push
aas
stc
push
jle
(bad)
iret
repz
mov
test
cmc
mov
repz
dec
(bad)
cmps
mov
fnstsw
stc
imul
aas
clc
imul
add
add
test
adc
xchg
pop
xchg
add
push
xchg
sbb
xchg
xchg
sub
add
xchg
xchg
push
scas
cwde
xchg
mov
fwait
xchg
xchg
mov
rol
call
mov
cwde
xchg
loopne
into
(bad)
popf
call
ror
lods
xchg
mov
rol
call
loopne
pop
in
mov
imul
or
xchg
inc
dec
push
xor
and
(bad)
dec
push
ret
imul
or
xor
push
inc
ja
out
xor
xchg
adc
mov
test
rcl
push
daa
push
mov
adc
dec
aad
pushf
mov
add
stos
xchg
iret
cmps
dec
jae
hlt
push
or
xchg
mov
fwait
mov
pop
inc
mov
les
mov
stos
inc
xor
push
add
aad
pop
ja
pop
imul
int
pop
cs
fst
cmp
loop
xchg
call
mov
and
dec
adc
lds
test
in
ins
jbe
int3
xchg
jno
and
sbb
xor
(bad)
cmps
repnz
das
rcr
or
dec
mov
ins
data16
gs
stos
stc
cdq
cmc
jge
aaa
pop
xor
mov
push
xlat
sub
mov
push
xor
imul
(bad)
fnstcw
xor
push
outs
lahf
xchg
or
retf
push
inc
mov
shl
cwde
xor
add
sub
test
jb
loope
aam
xchg
pop
daa
and
leave
adc
cmp
dec
pop
and
xor
arpl
jg
int3
dec
mov
iret
mov
cwde
lds
cmp
push
xchg
fs
sub
xchg
inc
adc
push
enter
mov
xchg
nop
arpl
fs
inc
push
add
sub
or
movs
pop
mov
jecxz
cmp
add
pop
lock
cmovs
lds
sbb
dec
cmp
call
sub
jnp
stc
movs
jle
sbb
mov
sub
data16
test
test
in
push
add
call
mov
dec
sub
push
sahf
jp
push
push
stos
js
mov
push
jp
add
add
jmp
nop
pop
pop
jmp
inc
add
es
mov
clc
data16
jmp
mov
inc
mov
cwde
mov
push
adc
pop
rol
bound
fldcw
sub
sbb
pusha
test
lahf
inc
int3
add
add
adc
ret
xor
cld
add
sbb
inc
mov
pop
xchg
(bad)
cmp
jl
inc
stos
outs
retf
test
jb
or
imul
test
lds
sub
(bad)
icebp
shr
xchg
fs
call
xor
test
adc
xchg
mov
fcmovnb
movlps
mov
stos
fs
popa
fwait
mov
(bad)
int3
add
mov
cmp
std
xor
push
dec
std
xor
sbb
and
imul
leave
and
jae
adc
jle
loopne
jae
shl
scas
int
mov
jecxz
cmp
mov
push
loopne
xchg
fs
repnz
arpl
xor
mov
(bad)
dec
int3
test
lahf
pop
mov
cmp
jp
loope
outs
je
mov
mov
dec
rcl
ja
sti
jnp
xor
push
cmp
(bad)
imul
popf
imul
fs
outs
dec
cmc
sub
in
aas
in
add
outs
xor
pop
pop
fnstsw
out
xchg
and
xchg
adc
inc
fs
jo
push
mov
call
test
leave
push
lock
int3
fucomp
xor
clc
sub
hlt
sub
fs
push
adc
mov
push
(bad)
xchg
adc
es
or
mov
xchg
stc
sub
out
inc
xor
xor
inc
or
clc
mov
adc
mov
es
or
adc
mov
adc
add
add
xchg
hlt
(bad)
jmp
mov
xchg
jecxz
es
lds
les
mov
jno
(bad)
jmp
push
xor
push
fdivp
(bad)
jns
pushf
add
inc
aas
ss
jne
fsub
xor
mov
xchg
mov
mov
and
jb
adc
retf
mov
test
movs
sub
sub
push
dec
iret
xchg
xchg
fs
pop
cmp
pop
fidiv
cs
retf
pop
cli
repnz
ror
xchg
bound
repz
enter
xchg
leave
int3
data16
cdq
ror
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
add
dec
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
sub
add
sbb
push
dec
and
test
cmp
mov
add
sub
sbb
aad
inc
loope
dec
sbb
push
test
xchg
test
xor
sub
adc
push
xchg
inc
push
lods
pop
jne
add
(bad)
mov
test
push
mov
mov
pop
xchg
jmp
mov
pop
mov
jbe
(bad)
movs
in
pop
sar
mov
bound
inc
xchg
retf
xor
push
jg
push
movs
push
loope
mov
inc
imul
adc
mov
xchg
or
push
scas
add
addr16
(bad)
and
mov
inc
dec
jmp
(bad)
push
shr
lods
push
retf
push
adc
push
adc
jge
pop
xchg
stos
fucomi
or
out
jmp
xchg
mov
jns
pop
mov
push
mov
or
mov
lods
scas
imul
aad
mov
mov
or
adc
das
jo
cli
pusha
test
sub
cmp
popa
or
cmp
adc
mov
mov
cmp
popf
shl
or
sbb
mov
and
inc
loopne
adc
adc
push
add
dec
mov
imul
pop
push
das
xchg
scas
inc
push
jmp
mov
mov
xor
in
pop
mov
loopne
(bad)
sub
add
pop
cmc
or
jmp
lods
or
xor
mov
add
mov
mov
aaa
pop
adc
das
pop
ja
sub
ins
mov
nop
fnclex
fcomp
xlat
or
mov
pop
arpl
aaa
pop
shr
gs
xlat
pushf
fnstcw
iret
xor
fwait
(bad)
out
imul
jmp
sti
(bad)
fisub
test
fcmovnu
pop
into
(bad)
fisubr
shr
es
enter
cdq
add
into
mov
jo
lods
push
pop
inc
enter
mov
out
fiadd
dec
fidiv
xchg
cdq
mov
retf
(bad)
add
jge
push
popf
and
dec
dec
repz
pop
lods
mov
in
aam
xchg
sbb
pop
mov
mov
mov
ins
pusha
add
js
fcmovnb
(bad)
std
jbe
mov
out
shr
outs
jg
data16
pop
iret
stc
dec
jne
sub
loop
dec
cmp
xchg
dec
clc
(bad)
test
pop
sbb
mov
push
push
ja
in
mov
bnd
je
sbb
shl
ja
sbb
aaa
jbe
push
xchg
in
out
idiv
sbb
sub
test
and
inc
int
mov
pop
and
lods
(bad)
ja
sbb
lods
add
sahf
pop
dec
repnz
cmp
fcmovbe
push
jnp
leave
sub
and
ja
lds
cld
pop
or
jp
ins
iret
scas
nop
jmp
sbb
stc
int3
loope
(bad)
mov
dec
xlat
sbb
out
stc
in
data16
add
or
pop
rcr
cmp
out
mov
add
into
sub
cmp
clc
fisubr
push
jnp
inc
sbb
aas
aas
mov
sahf
retf
int3
pop
aam
js
cmp
inc
sbb
(bad)
rol
les
jge
popf
rcr
cmp
xchg
cmc
ins
dec
pxor
dec
imul
mov
arpl
pop
js
in
mov
or
xor
in
test
fild
ret
cld
ja
sbb
pop
and
sbb
je
push
push
or
jns
cmps
ins
aas
shr
adc
daa
js
ja
adc
adc
in
push
lods
push
jnp
xlat
pop
not
cmps
out
push
pop
sub
pushf
(bad)
outs
and
ja
pop
xor
iret
cmps
imul
jno
movs
add
js
cwde
(bad)
push
enter
pop
fs
push
ins
mov
bound
test
rcl
push
adc
frstor
pop
cmp
imul
lock
out
mov
jnp
pop
jnp
test
push
bound
jns
ja
(bad)
ss
xlat
popa
push
mov
or
outs
call
pusha
stos
inc
pop
push
and
sbb
addr16
imul
jno
div
pop
jb
inc
xchg
fcom
cmps
jns
mov
add
adc
jge
lds
push
xchg
mov
pusha
xchg
or
mov
xchg
outs
push
gs
ja
push
xlat
popa
dec
dec
adc
jge
push
xchg
not
clc
or
xlat
pop
inc
mov
mov
imul
jmp
jb
sub
ja
xlat
data16
inc
inc
pop
gs
aaa
lea
jle
xlat
jbe
push
sbb
push
cmc
pop
je
push
and
sub
add
in
mov
jp
out
je
push
pop
jmp
push
pusha
sub
push
cdq
jns
out
jbe
ins
sti
push
pop
test
jp
inc
jle
xor
add
jp
out
ins
cmp
daa
nop
sahf
push
xchg
xor
pop
(bad)
push
xchg
xchg
imul
jbe
aaa
or
mov
dec
xchg
test
jbe
sub
pop
jbe
or
mov
jg
ja
sbb
push
movs
pop
push
imul
clc
cmps
data16
and
push
arpl
mov
int3
clc
je
in
fcmovnb
mov
mov
mov
pop
jbe
xchg
(bad)
je
test
sub
push
outs
sub
pop
jnp
cdq
add
mov
repz
sub
jne
js
or
jne
mov
cmp
sub
jo
mov
sub
jnp
cmc
add
mov
ja
js
lahf
adc
cwde
or
push
jle
xchg
(bad)
leave
je
test
in
jbe
fcomp
mov
xchg
dec
pop
add
stc
mov
adc
pop
xor
fwait
pop
jae
cmps
push
push
push
fst
xor
add
mov
scas
(bad)
mov
sub
mov
cwde
adc
nop
inc
rcr
jle
xchg
(bad)
jge
imul
xchg
add
pop
retf
push
cmps
pop
mov
addr16
cmps
mov
or
test
mov
pop
push
push
(bad)
pop
in
pop
enter
pop
jp
push
ins
mov
add
imul
pop
push
jbe
mov
scas
xchg
test
retf
out
or
mov
mov
inc
test
inc
shl
mov
mov
cmp
ds
mov
cmp
movs
dec
call
movs
dec
cli
movs
push
sbb
pop
movs
inc
adc
add
add
sub
add
add
add
xchg
add
add
(bad)
bound
adc
mov
xor
xor
loop
add
add
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
sbb
sbb
jp
cmp
cmp
repnz
adc
or
stos
lods
pop
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
cs
jle
inc
ds
retf
jmp
je
fcmovu
cld
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
mov
fs
adc
cmps
movs
jl
jl
ss
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
cmp
cmp
scas
lods
pushf
call
push
inc
inc
inc
and
and
mov
cmps
movs
je
je
ss
out
add
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
cs
jle
inc
ds
int3
into
int3
in
out
in
mov
fdivr
(bad)
cld
fs
fs
or
mov
sbb
outs
je
cs
jle
cmp
inc
lods
scas
mov
sahf
pushf
add
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
pusha
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
shl
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
add
pop
mov
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
inc
out
imul
in
push
mov
mov
in
shl
or
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
jp
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
or
aad
stos
pop
rcl
mov
mov
lods
out
sub
mov
daa
adc
imul
movs
mov
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
fldcw
sub
mov
stos
cmps
push
mov
sar
adc
stos
inc
and
lods
jg
mov
fiadd
mov
mov
sub
push
dec
lock
and
add
scas
and
xchg
jb
test
call
mov
rol
adc
and
mov
stos
mov
or
mov
jmp
sti
call
mov
imul
cmps
push
sti
cmps
jnp
mov
mov
pop
stos
mov
cmp
stos
stos
and
movs
jns
mov
jmp
cs
and
xchg
shr
jae
add
pusha
inc
and
mov
nop
add
cli
popf
sub
inc
nop
add
mov
stos
lods
xchg
jnp
or
mov
mov
fstp
mov
adc
retf
mov
imul
ja
loopne
test
mov
fstp
dec
mov
imul
add
mov
mov
rol
rol
and
int3
or
inc
mov
adc
test
and
mov
fwait
mov
xor
mov
jmp
mov
sti
mov
sub
mov
add
adc
loopne
mov
shr
cli
jnp
push
jl
push
mov
jl
lock
or
mov
add
push
add
jl
daa
or
xor
pop
ret
ret
add
add
ret
ret
add
jo
cmp
sbb
or
ret
aas
jl
xor
cmp
ret
mov
retf
ret
les
or
dec
cmp
stos
les
add
and
adc
(bad)
xor
out
push
mov
dec
(bad)
imul
push
ret
xor
ret
cmp
mov
lds
mov
push
add
add
fadd
out
dec
add
inc
add
mov
sub
pop
mov
mov
(bad)
cld
enter
push
or
fiadd
mov
inc
les
mov
sbb
or
leave
pop
xor
inc
dec
retf
inc
lock
dec
xor
mov
add
retf
retf
mov
cld
(bad)
mov
leave
or
and
mov
mov
(bad)
mov
mov
mov
mov
add
jp
retf
xchg
sbb
pop
pusha
add
xor
fcmovnu
add
pop
leave
out
fmul
jecxz
int
addr16
call
int
pusha
enter
lock
loop
into
add
jecxz
iret
add
into
pop
pop
leave
mov
into
mov
rol
rol
pop
leave
shr
push
in
mov
and
int3
or
or
iret
xor
sbb
rcr
int3
ror
fst
or
ret
push
lods
shl
shl
int3
retf
shl
(bad)
loop
shr
iret
or
into
and
rcl
in
rol
fld
aaa
sbb
or
adc
neg
lods
scas
sub
push
pop
rol
loopne
mov
add
cld
rol
mov
sub
fld
or
pop
cmp
hlt
sub
lods
fadd
dec
loopne
or
shl
mov
xor
aam
in
rcr
mov
ja
iret
add
js
fcom
mov
lea
jnp
shr
sbb
(bad)
(bad)
sar
jge
mov
iret
or
sbb
mov
int
in
xlat
pop
pop
(bad)
mov
pop
or
pusha
jge
pop
dec
fiadd
ins
(bad)
or
jge
int
std
shr
fadd
mov
ds
fcmovnbe
sbb
mov
stos
(bad)
mov
mov
rcl
int
int3
sbb
int
rcl
cmp
xor
movs
xchg
lods
xchg
retf
ficom
popf
fdivr
sbb
adc
aam
(bad)
enter
jmp
dec
iret
fstp
push
jo
jmp
sub
lea
pop
in
fisttp
or
sti
pop
fisub
fdivr
sbb
push
loopne
neg
mov
fsubp
in
(bad)
test
(bad)
pop
push
loope
pop
sar
mov
fcom
int
or
fisub
add
rcr
fistp
scas
fiadd
add
sbb
jl
fdivr
into
fcomip
sbb
jo
fisttp
loopne
(bad)
iret
push
lods
in
ins
rcl
fstp
jnp
fild
add
in
dec
rcr
in
(bad)
in
dec
loope
(bad)
(bad)
sub
fneni(8087
sub
mov
out
dec
out
(bad)
fsub
into
xor
lock
(bad)
dec
ror
mov
or
out
in
dec
retf
shl
leave
jb
out
cmp
ss
fld
out
fst
inc
in
in
(bad)
out
dec
out
int3
ror
stos
sar
add
or
xor
jo
jmp
out
fld
(bad)
int
(bad)
jecxz
dec
test
in
scas
jecxz
cmp
neg
xchg
lods
jecxz
cs
(bad)
fsubrp
cmps
out
jecxz
rcr
xlat
movs
scas
iret
mov
(bad)
jl
mov
int
mov
jnp
in
sub
dec
scas
(bad)
pop
call
outs
jmp
pop
push
in
(bad)
jecxz
mov
in
fsin
scas
jecxz
popf
out
outs
shl
jecxz
push
fdivr
jmp
outs
jmp
ds
push
add
push
cs
loope
jmp
mov
stos
pop
add
ins
sub
mov
and
add
outs
jmp
jmp
out
out
or
cmps
dec
lea
fnstcw
iret
out
bound
jmp
out
int
scas
into
jge
fucomp
int3
repz
aam
or
jmp
in
jmp
jmp
adc
jge
lahf
popf
in
sub
repnz
loope
dec
adc
imul
(bad)
add
icebp
cmp
out
jp
jmp
out
(bad)
out
in
out
repnz
daa
(bad)
loopne
cld
cmc
js
lock
and
jg
sbb
das
stos
xor
int
repnz
mov
jmp
mov
add
lock
das
jg
jl
not
pop
imul
mov
clc
shr
jmp
out
jmp
sti
and
stc
sahf
fsubrp
out
mov
inc
out
aam
into
sti
ins
iret
clc
mov
clc
cmps
aas
(bad)
(bad)
sti
jle
std
in
into
hlt
mov
leave
(bad)
sti
hlt
sbb
aad
std
neg
inc
mov
test
iret
iret
jl
stc
in
cld
jne
in
in
iret
stc
in
dec
hlt
pop
push
in
pop
in
cld
mov
ror
mov
clc
shl
shl
xchg
pop
js
clc
push
mov
movs
dec
fcom
mov
jmp
push
or
repz
jmp
dec
(bad)
cmp
call
mov
or
or
sbb
pop
or
sbb
or
or
sti
mov
int3
sub
stos
sbb
sbb
jl
jmp
fisttp
pop
imul
cmp
stc
das
aam
add
scas
push
ret
jp
mov
imul
inc
mul
mov
rcr
popa
cmp
stc
out
adc
sbb
sub
hlt
or
inc
push
sbb
les
mov
(bad)
pop
ror
cmp
ret
adc
push
retf
ret
cmps
jp
mov
mov
pop
out
cmps
push
sbb
xchg
cld
pop
ins
sbb
xchg
mov
jecxz
push
adc
dec
pop
and
cmp
push
push
ja
gs
fisubr
push
pop
rcl
(bad)
popa
pushf
inc
bound
repnz
mov
out
aad
or
(bad)
ins
jbe
ss
push
popa
sbb
add
inc
mov
repnz
push
dec
popa
fist
aad
xor
xchg
test
out
mov
frstor
inc
daa
sub
cld
hlt
mov
shl
and
sub
test
and
jne
aam
adc
pop
test
push
retf
hlt
mov
jge
jge
retf
ja
inc
jne
push
out
aaa
mov
xchg
mov
aas
pop
ins
repz
pop
neg
subps
inc
enter
or
pop
push
jp
push
adc
pop
xchg
in
mul
loopne
stc
mov
sub
pushf
jae
loopne
pop
xchg
jae
in
sub
add
imul
cmps
fistp
inc
mov
jns
jnp
int
mov
(bad)
add
(bad)
mov
xlat
pop
jl
(bad)
mov
mov
cmp
xchg
pop
(bad)
aad
enter
test
ret
cdq
pop
movs
jmp
stc
test
loope
add
sbb
test
push
cwde
cwde
xchg
leave
jecxz
adc
retf
mov
jecxz
in
xchg
or
in
pop
jb
dec
add
loopne
test
push
xchg
iret
adc
push
sar
scas
and
rol
and
sahf
and
mov
leave
mov
adc
cmps
mov
jle
imul
imul
leave
fneni(8087
mov
xchg
cld
mov
or
xchg
clc
jmp
sub
sub
arpl
mov
mov
shr
mov
(bad)
jo
xor
call
sbb
je
jno
add
inc
out
mov
rcr
addr16
mov
xlat
sub
jb
dec
imul
ins
addps
das
mov
inc
cld
scas
fadd
es
icebp
js
popa
ins
jmp
scas
shr
mov
and
push
retf
inc
rcr
and
pop
icebp
imul
fild
fcomi
push
pop
and
push
aaa
mov
retf
adc
xor
inc
repz
das
mov
fadd
mov
inc
rcr
jle
(bad)
mul
imul
bound
jae
in
(bad)
pop
pushf
loopne
jmp
fnsave
inc
jecxz
mov
cmc
adc
fadd
arpl
ds
mov
test
sub
(bad)
test
aas
mov
out
not
sbb
sahf
jbe
mov
push
movs
popf
shl
jg
retf
sbb
dec
adc
mov
xor
enter
adc
fldenv
pushf
fstp
mov
cmp
std
sub
mov
ja
pop
or
sbb
pop
cdq
std
sub
xor
mov
loop
ins
(bad)
mov
hlt
retf
push
mov
daa
sar
mov
pop
pop
inc
test
outs
jae
js
adc
ss
mov
sbb
pop
test
xchg
push
mov
lahf
sbb
sbb
adc
and
xor
sub
or
inc
sub
xchg
outs
and
sbb
sar
mov
xor
popa
ret
xchg
xchg
rep
in
cmp
xchg
push
sbb
mul
cwde
mov
sbb
fs
call
inc
mov
inc
and
push
add
leave
sub
add
jno
and
ror
nop
mov
sub
add
repz
cmps
dec
pop
push
repnz
inc
aas
jb
jno
outs
in
fnclex
ja
out
push
mov
or
dec
inc
add
push
sub
gs
into
cmp
cld
and
sbb
cmp
add
loope
xchg
retf
in
or
scas
xchg
popf
jns
fisttp
sub
leave
mov
(bad)
loope
cmps
xlat
stc
inc
mov
push
adc
imul
and
retf
push
xchg
sti
ins
pusha
inc
arpl
inc
test
mov
cmp
ret
xchg
push
dec
cmps
ds
lock
cmp
ret
aaa
and
xor
test
dec
pop
repz
mov
mov
cmps
or
adc
pusha
xor
adc
and
fcmovnu
inc
sbb
mov
jmp
les
(bad)
add
push
cmps
jns
sub
sbb
cwde
inc
imul
int
add
xor
scas
push
adc
sub
mov
in
call
out
add
sbb
sbb
jno
outs
adc
sub
and
pop
push
xor
xchg
pop
push
sub
push
push
shl
dec
dec
mov
mov
inc
int
inc
jmp
jbe
ja
stos
jne
mov
dec
mov
add
jmp
push
addr16
lea
add
rcr
fdivp
adc
loop
fidiv
or
pop
rol
xchg
sbb
or
jne
sub
and
add
or
pop
ja
mov
or
and
js
add
dec
mov
add
mov
add
loop
xchg
inc
add
popa
ins
adc
rol
sti
ficomp
(bad)
imul
adc
pop
repnz
inc
push
aas
and
mov
arpl
loop
les
ss
xlat
sbb
jo
enter
add
and
cs
pop
mov
cmps
shl
cdq
mov
in
pusha
ja
mov
imul
sub
imul
repnz
pop
and
push
test
iret
mov
inc
jg
(bad)
nop
push
inc
mov
(bad)
lahf
cmc
sbb
xor
dec
repz
mov
movs
add
iret
aad
add
mov
and
sbb
pop
div
jge
push
or
aad
push
sub
aad
(bad)
xor
in
ds
(bad)
mov
ja
pop
add
jae
mov
cmp
lds
dec
sub
jbe
sub
xor
add
cmp
or
mov
mov
sti
push
int
out
das
cdq
aaa
popf
outs
cli
data16
ret
out
call
(bad)
loope
cli
pop
adc
les
adc
pushf
loopne
jg
ret
iret
xchg
pop
adc
fnstsw
ins
or
jne
cmp
in
(bad)
stos
push
inc
std
jb
lahf
cmp
xor
retf
in
and
adc
adc
jo
inc
add
adc
repz
jecxz
out
dec
ja
push
mov
loop
jle
add
pop
jmp
inc
mov
jge
add
xlat
mov
leave
mov
pop
dec
cmp
shl
mov
inc
mov
sar
aaa
add
mov
test
fbld
(bad)
aas
mov
fiadd
out
clc
mov
jle
dec
out
cmp
cmp
hlt
lds
pop
out
sahf
out
sti
adc
pop
add
aam
(bad)
mov
or
mov
cmc
fild
jns
aaa
(bad)
cwde
(bad)
pop
in
fild
(bad)
ds
mov
call
fs
ins
xchg
sti
loopne
jl
loopne
rcr
out
int3
jge
out
inc
cwde
popa
loop
mov
std
mov
pop
std
cmc
icebp
push
js
das
sahf
sti
xchg
idiv
mov
pop
or
into
cld
out
nop
add
cmps
jns
je
mov
sub
jl
dec
jp
push
jns
test
in
jl
js
test
add
sub
pop
adc
out
test
jle
xchg
dec
jnp
daa
sbb
jge
add
mov
dec
mul
mov
inc
call
pop
js
fsub
add
out
sbb
das
cmps
arpl
inc
test
ins
xchg
arpl
test
loopne
sub
jl
aaa
jp
sbb
js
in
push
jns
sbb
mov
push
ja
clc
cmp
mov
add
lock
and
es
in
pop
jp
dec
xchg
out
cdq
xlat
js
xlat
jl
push
sub
outs
push
and
mov
sub
adc
sub
xchg
mov
les
jg
cmps
xchg
enter
mov
xchg
add
add
lock
xchg
jns
mov
enter
add
cmp
sbb
cmps
xchg
and
add
add
xor
pop
jp
mov
or
cmp
mov
xlat
pop
bound
and
lea
push
fsubr
out
outs
xor
sahf
cmps
xchg
ja
add
pop
add
sbb
mov
inc
clc
(bad)
xlat
push
mov
stc
pop
or
sub
enter
js
js
cmp
add
nop
xor
push
sbb
pusha
mov
lea
dec
popf
pop
add
jmp
retf
push
jo
fwait
inc
mov
mov
sbb
or
ja
mov
jp
sbb
stos
and
cmp
nop
jns
xchg
push
test
adc
and
stc
add
mov
add
cmps
push
add
je
test
mov
add
xchg
pusha
nop
push
cdq
xchg
pop
sub
test
jl
add
mov
sbb
xchg
dec
jns
xlat
mov
daa
js
mov
add
pop
jns
dec
stc
jl
add
cmp
(bad)
cdq
xchg
adc
xchg
mov
test
pop
push
jns
imul
xchg
mov
nop
xor
cmp
dec
pop
fwait
dec
daa
fwait
mov
xchg
mov
test
test
fdivr
jns
xchg
test
lods
addr16
call
jns
sbb
inc
fld
or
mov
(bad)
push
sbb
xchg
add
or
xchg
push
dec
mov
xchg
outs
dec
jp
jns
xor
xchg
shr
mov
bound
addr16
xchg
sbb
stc
xchg
addr16
ja
sbb
jmp
pop
cdq
push
mov
xchg
or
jo
and
push
or
ja
adc
sahf
loopne
mov
test
pop
fstp
or
out
pop
mov
dec
jl
js
es
xor
mov
test
mov
dec
xchg
repz
fwait
pushf
pop
xchg
fcmovu
xchg
sbb
pop
lea
cwde
dec
jp
in
call
mov
popf
dec
inc
sub
push
test
push
jo
cmp
cmps
(bad)
pop
fwait
mov
sahf
loope
xchg
sbb
pop
jo
push
mov
cmp
sbb
sbb
test
scas
and
sbb
leave
fldenv
push
mov
cdq
ins
or
jb
gs
mov
fwait
sbb
outs
dec
rcl
cmps
or
fdiv
popf
pop
pop
test
jp
dec
cdq
movs
mov
stos
loopne
fwait
jg
pushf
push
or
jns
push
mov
cmp
cmp
stos
aas
push
rcl
mov
xchg
dec
push
pop
leave
lahf
arpl
movs
aam
xchg
jmp
call
xchg
inc
mov
stos
lods
(bad)
jns
hlt
jmp
rcr
pop
mov
jmp
xchg
std
pop
xchg
shr
pop
leave
mov
stos
add
lods
mov
or
rcr
pop
test
test
inc
rcr
ja
mov
adc
xchg
pop
retf
mov
call
scas
pop
test
pop
inc
add
mov
cdq
scas
xor
mov
test
ds
test
mov
mov
dec
xchg
sti
test
call
lods
mov
iret
mov
jnp
sahf
jmp
mov
mov
mov
or
jp
ja
scas
out
pop
popf
pop
sahf
out
mov
mov
jp
mov
loopne
xor
xchg
sbb
fwait
into
imul
(bad)
(bad)
mov
outs
leave
add
call
jmp
mov
add
jmp
mov
mov
pop
sbb
fnstcw
rol
sar
lods
call
xchg
popa
mov
retf
mov
les
in
popf
jns
add
xor
lods
fcmove
mov
call
call
les
in
mov
enter
mov
mov
jmp
in
or
sti
mov
mov
mov
jnp
mov
dec
lahf
ficomp
pop
or
jo
lahf
in
call
add
ficomp
pop
mov
dec
mov
pusha
ror
add
ins
xchg
add
sbb
outs
imul
retf
stc
or
fwait
xchg
stc
mov
fild
mov
pop
mov
add
or
lods
cwde
adc
inc
and
and
add
sub
jl
in
dec
mov
or
xor
cmp
ret
mov
mov
inc
in
(bad)
arpl
int
cdq
mov
outs
in
ror
mov
fidivr
cmp
mov
or
lods
push
pushf
mov
push
mov
or
shr
dec
sbb
add
pop
nop
inc
fwait
mov
cmp
mov
add
rol
sub
pop
jl
mov
mov
or
cdq
pop
cmp
imul
or
(bad)
add
cmp
and
call
pop
mov
int3
lds
jmp
loopne
sahf
popf
int3
add
mov
leave
xchg
push
dec
enter
retf
lea
or
or
cmp
add
sbb
mov
jmp
ret
fsub
arpl
sti
mov
dec
sbb
sti
mov
mov
int
lods
mov
enter
sbb
mov
into
es
stc
sbb
into
fwait
mov
sub
rcr
mov
fdivr
popf
out
sbb
jnp
pop
add
fdivr
ror
mov
(bad)
sub
stc
in
cmps
add
mov
dec
mov
fistp
jnp
imul
into
inc
mov
jmp
(bad)
iret
xchg
dec
into
cmc
sti
mov
adc
jmp
sbb
adc
imul
dec
fsubr
or
bnd
add
and
aam
sub
ss
sub
lds
fadd
dec
fcomp
dec
(bad)
sar
aad
add
and
fmul
mov
inc
sub
or
out
cld
rcr
ret
sub
fnstcw
sahf
xchg
sub
out
lods
fsub
mov
in
fnstcw
mov
leave
sub
out
lods
lds
(bad)
sub
jnp
ficom
fld
int
jge
jmp
ret
fmul
ficomp
iret
jns
leave
imul
fimul
into
jl
add
mov
inc
add
test
imul
es
int
rcr
sbb
enter
fstp
or
sar
pop
ret
fcomp
jle
xchg
popf
iret
pop
mov
and
sub
(bad)
shr
sbb
fild
outs
ficomp
aad
jnp
push
ror
sar
pop
ja
into
(bad)
in
fsubr
loope
jge
dec
mov
sub
mov
ja
fdiv
mov
into
pop
aam
or
fs
xor
fistp
(bad)
pop
cmp
mov
loopne
scas
fisttp
loop
int3
mov
fcompp
sbb
xchg
push
mov
jp
jecxz
lods
rcl
in
out
or
mov
add
loope
sahf
in
sbb
stos
in
in
(bad)
xchg
mov
fisubr
out
shl
in
jge
(bad)
in
fcmovne
stos
fst
push
jmp
push
jmp
mov
dec
mov
std
in
fstp
fsub
mov
test
fild
push
out
out
into
fist
loope
sub
sub
pop
scas
xlat
aam
faddp
push
mov
mov
mov
ret
loopne
push
fcmovbe
mov
call
test
fstp
fild
out
in
into
jmp
pop
ror
std
in
stos
cs
in
push
out
fucom
add
jmp
cmp
lock
jmp
(bad)
adc
in
push
fisub
sar
ins
out
or
addr16
enter
sbb
out
repnz
out
repnz
outs
fild
icebp
sub
repz
in
mov
jmp
imul
add
mov
xor
fisubr
add
scas
xlat
cmc
push
add
lahf
icebp
inc
cmp
dec
and
dec
dec
jmp
sbb
test
cmc
sahf
(bad)
repnz
scas
frstor
div
test
sbb
js
jmp
outs
mul
idiv
add
stc
or
shr
push
mov
shr
aas
stc
mov
jae
repnz
std
jmp
scas
out
mov
jmp
jle
jmp
out
cdq
scas
repz
jmp
and
dec
push
in
lea
in
js
jmp
lahf
pusha
arpl
jnp
lock
iret
repz
aas
cmc
ss
clc
movs
(bad)
test
into
cmp
ins
mul
clc
fmulp
pop
popa
jg
fild
ja
clc
addr16
stc
add
and
fnsave
std
xchg
cmp
movs
outs
mul
or
add
sbb
pop
mov
mov
add
xchg
pop
add
mov
xchg
add
xchg
scas
sahf
nop
stos
mov
scas
pop
test
mov
(bad)
mov
stos
adc
nop
iret
sahf
xchg
push
retf
mov
mov
dec
xchg
mov
xor
rcl
sti
mov
cmc
enter
test
std
add
push
lods
pop
rcl
pop
push
jo
add
ds
test
mov
mov
push
rol
inc
test
mov
mov
ret
mov
sahf
xor
xchg
or
xchg
inc
jp
adc
xor
sbb
cld
or
shl
mov
mov
dec
int
xor
shl
pop
adc
call
sub
dec
into
loopne
aad
ss
jl
push
(bad)
sub
aad
xor
dec
jmp
pop
mov
mov
stos
stc
outs
push
fst
shl
pop
mov
xchg
shl
dec
data16
in
or
stc
das
stos
sub
and
jbe
movs
jne
push
adc
jmp
test
fs
sub
mov
xchg
cmp
(bad)
cmp
xor
cmp
xor
fiadd
push
das
rcr
in
lods
in
inc
(bad)
sub
hlt
loope
jmp
(bad)
pop
repnz
in
mov
cmc
mov
mov
jbe
pop
loop
je
jns
adc
jge
mov
icebp
mov
pop
loop
test
and
pushf
inc
inc
jb
add
pop
jae
sub
push
xchg
ds
mov
sbb
out
add
aaa
enter
cmp
in
xchg
sub
pop
jb
(bad)
out
or
sub
jmp
loope
in
mov
enter
mov
mov
and
pop
and
pop
sbb
xchg
xchg
push
xchg
daa
push
push
pop
enter
jb
push
out
and
cli
push
mov
pcmpgtd
mov
or
sbb
addr16
cmp
sbb
test
call
clc
aad
mov
pusha
test
adc
pop
push
fisubr
sub
cmp
pop
pop
test
cdq
test
scas
xchg
stos
(bad)
mov
inc
xchg
cmps
scas
push
cmp
mov
mov
outs
add
lds
jle
jp
mov
les
mov
dec
push
rol
cmp
loopne
add
icebp
inc
pop
(bad)
shr
inc
sahf
stos
outs
mov
mov
mov
mov
mov
mov
mov
push
and
int3
adc
jbe
scas
mov
mov
mov
(bad)
stc
cmp
shr
sbb
push
repnz
ret
mov
mov
movs
or
add
sahf
cld
cmps
fsubr
in
ror
jno
add
mov
fiadd
push
push
lea
xor
cmp
test
ret
sub
sbb
out
movs
imul
sbb
les
js
push
test
mov
imul
inc
fadd
stos
je
jno
fisttp
mov
sub
mov
jo
test
mov
stc
fild
xchg
aaa
or
(bad)
push
pop
test
les
lea
inc
inc
movs
mov
or
je
mov
add
lock
cmp
fucomi
ret
in
jnp
les
(bad)
xchg
(bad)
out
test
fst
(bad)
aaa
out
push
cmps
sub
out
or
jne
in
mov
pop
je
cmp
jmp
ds
outs
push
cmp
adc
pop
jl
lea
add
mov
dec
and
fild
sar
hlt
clc
cmps
cmp
ror
sbb
jl
imul
push
mov
xchg
nop
test
lods
and
jno
movs
out
int
jge
movs
sbb
cld
add
pop
std
int3
rcl
add
inc
call
out
add
repz
mov
rcl
dec
pusha
cmc
push
inc
and
push
aas
and
adc
mov
adc
fdivr
pop
mov
adc
sub
lock
push
lock
bound
call
enter
sub
jge
xor
pop
adc
add
ficom
sub
mov
inc
popa
xchg
jg
fcomp
xor
pop
mov
adc
xor
xchg
movs
jl
mov
sbb
mov
outs
cmps
pushf
movs
sub
test
pop
add
or
stc
mov
enter
mov
sbb
sbb
jo
pop
cmps
mov
retf
test
mov
xor
retf
std
sbb
out
xchg
sbb
outs
xchg
jo
mov
out
cdq
or
mov
data16
sub
jmp
add
cmp
data16
fadd
lods
fxch
sbb
mov
pop
retf
push
adc
or
inc
icebp
or
cmp
pushf
pop
int
inc
pop
mov
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
cmps
dec
loopne
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
jp
(bad)
mov
or
fcmovbe
call
push
sub
call
rcr
pop
mov
lods
inc
test
add
mov
or
lods
pop
pop
sbb
mov
mov
mov
and
mov
push
pop
imul
or
mov
outs
test
add
jmp
(bad)
jnp
fisttp
mov
std
cs
lahf
jnp
jmp
js
jmp
jmp
xchg
mov
inc
outs
jl
cmp
cs
jmp
out
adc
imul
mov
movs
sub
add
test
gs
adc
dec
loope
inc
clc
pop
mov
mov
ret
jo
mov
mov
test
test
jle
or
sub
add
fdiv
sub
pop
sbb
(bad)
xor
cmp
or
test
and
cwde
lds
(bad)
sub
mov
sbb
dec
cs
lea
adc
lods
pop
out
ins
lea
mov
retf
mov
cmp
stc
adc
int
push
outs
mov
pop
lods
jae
sub
add
pop
iret
aas
mov
and
xor
in
test
scas
xor
add
mov
adc
add
push
in
test
(bad)
aaa
add
push
dec
cwde
into
sbb
jmp
xor
jecxz
xlat
xor
scas
adc
sbb
sbb
cmc
outs
(bad)
xor
out
pop
xlat
inc
pop
mov
ret
cmp
sub
push
jnp
fdiv
mov
nop
popf
add
sbb
repnz
push
dec
loope
dec
add
out
mov
xor
fstp
int
cmp
mul
cld
outs
cs
sbb
call
jbe
xor
in
mov
shl
pop
addr16
pop
cmp
and
jo
test
push
scas
fwait
enter
mov
loop
daa
mov
retf
outs
or
fcomp
push
out
adc
gs
cli
ror
cs
or
fist
push
rol
sbb
pop
dec
cmp
push
jle
into
mov
push
add
dec
jmp
sar
in
ja
jle
fcomi
cmc
data16
mov
sub
loopne
cmp
pop
(bad)
jo
dec
pop
div
sti
push
aaa
sbb
mov
pop
jnp
ror
in
stc
xchg
pop
lds
mov
cmp
xchg
outs
mov
mov
sbb
call
xlat
addr16
and
pop
out
out
cmp
push
js
bound
mov
jmp
in
(bad)
repnz
fdiv
add
dec
mov
hlt
xor
adc
fst
(bad)
cmp
sbb
jg
ins
ja
jae
inc
sbb
or
out
into
adc
std
cs
sbb
mov
add
mov
sbb
or
in
test
push
std
mov
das
jae
idiv
pop
jbe
ins
daa
add
inc
jno
xchg
ins
add
fnsave
adc
imul
pop
mov
js
cmps
fs
jl
push
push
xchg
ins
leave
inc
add
xchg
ins
adc
add
test
outs
xchg
inc
and
push
xchg
xor
cli
and
add
outs
sbb
and
xchg
es
pop
jno
inc
jbe
movs
jge
jbe
int3
out
jbe
ins
inc
xchg
imul
ins
aaa
rol
mov
cmp
(bad)
outs
mov
je
xor
xchg
push
outs
push
jg
out
aas
adc
push
pop
cmp
in
ja
add
mov
ja
jb
pop
adc
pop
fadd
sub
(bad)
push
sbb
or
inc
jge
push
xchg
push
add
je
inc
jns
out
cmp
xchg
mov
sub
(bad)
retf
push
push
inc
jae
cwde
jns
pop
push
fdiv
sub
push
mov
mov
inc
xchg
add
jnp
aaa
outs
inc
xor
pop
cmp
adc
cmps
jg
mov
dec
sbb
loopne
ins
xchg
xchg
test
cmp
addr16
mov
and
jg
ins
fdivrp
outs
sahf
mov
(bad)
inc
ja
aaa
jge
cwde
js
xchg
jg
enter
ja
mov
adc
in
jnp
push
outs
pop
pop
xchg
mov
enter
jne
clc
pop
fst
cli
cmps
je
jne
dec
mov
mov
xchg
pusha
sub
test
xchg
ins
idiv
aaa
pop
in
cmp
inc
add
stos
clc
outs
aaa
add
xchg
mov
sbb
push
mov
imul
mov
lock
mov
cmp
movs
xchg
jle
ja
out
daa
jle
out
out
pop
jge
test
jge
pop
mov
pop
xchg
jno
cmp
cwde
and
adc
pop
mov
mov
cmps
bound
outs
enter
inc
mov
xchg
daa
(bad)
mov
jg
daa
jae
jbe
pop
test
mov
cmp
test
jbe
sub
add
imul
sar
mov
xchg
add
sub
or
push
(bad)
mov
mov
pop
and
arpl
xlat
mov
jg
xchg
test
pop
or
iret
push
pop
pop
call
adc
imul
jnp
and
jl
test
imul
imul
call
cdq
aad
shr
sub
mov
(bad)
xchg
push
nop
sbb
jg
jae
add
xchg
dec
mov
mov
(bad)
mul
push
xor
mov
jge
mov
out
out
cld
dec
test
outs
(bad)
push
or
call
xor
outs
hlt
leave
bound
popfw
mov
add
cmp
mov
jne
pop
cmps
cmp
jns
out
int3
(bad)
pop
lahf
jns
inc
push
mov
sub
mov
pop
clc
pop
adc
xchg
mov
add
xor
ja
xchg
inc
add
sub
pop
test
stos
arpl
imul
xchg
ins
or
cmps
out
aaa
dec
cdq
xchg
and
sbb
aas
cmp
sub
mov
clc
xchg
jb
out
or
jae
out
scas
out
outs
outs
xchg
add
(bad)
movs
pop
fcom
mov
push
fwait
es
xor
pushf
jbe
sub
js
test
xor
sbb
movs
aaa
test
mov
adc
test
fisubr
sbb
pop
stos
cmps
jp
test
stos
stos
mov
scas
cli
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
or
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
lods
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
and
jmp
fdivr
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
arpl
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
cmp
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
cli
add
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
push
and
scas
into
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sti
add
jp
dec
lock
or
add
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
pusha
mov
fwait
mov
cli
lods
out
sub
mov
jmp
sti
call
mov
add
jnp
psubd
mov
or
fisub
mov
bound
cmp
xor
sub
sbb
pop
dec
add
jo
sub
cmc
cli
popf
mov
inc
mov
xchg
sub
sti
mov
cmp
mov
jmp
popf
or
sbb
retf
mov
call
mov
pop
mov
imul
add
add
sbb
sbb
retf
mov
mov
push
rol
or
(bad)
or
xor
mov
loope
mov
sbb
stos
mov
cmp
nop
mov
fild
scas
pop
mov
retf
mov
stos
mov
cmp
test
add
sar
mov
lock
mov
sar
sub
call
add
sti
mov
stos
mov
(bad)
xlat
mov
sbb
add
add
jmp
ret
cmp
pushf
ret
cmp
and
adc
pushf
ret
cmp
pushf
les
or
inc
jl
push
pop
lds
cli
les
add
mov
dec
or
out
call
lds
lds
mov
pushf
mov
lds
ins
add
cld
add
sub
adc
mov
js
mov
cmp
addr16
les
les
enter
jp
add
fadd
out
enter
add
add
sub
xchg
lods
mov
mov
popf
cld
leave
nop
fmul
xchg
lods
scas
dec
push
retf
leave
pop
rol
scas
jl
push
or
imul
retf
int3
mov
retf
add
fadd
lds
retf
sbb
out
sbb
lds
or
retf
out
sbb
xor
int
fcmovb
fmul
mov
xchg
mov
mov
add
into
in
jl
sub
add
pusha
add
retf
movs
int3
iret
jmp
retf
leave
repnz
iret
neg
into
pop
pusha
leave
or
iret
pop
std
into
mov
mov
cld
retf
or
mov
cmp
add
retf
out
pop
sar
in
mov
jge
movs
fadd
cmp
inc
mov
loopne
shr
std
in
ror
cli
retf
mov
ror
fst
dec
cld
iret
xor
les
(bad)
shr
std
retf
sar
rcr
cmp
mov
aam
cmp
pop
jge
push
pusha
ror
mov
sub
leave
jmp
shr
lods
aad
dec
aam
or
sbb
dec
jge
pop
nop
add
std
retf
into
sti
sub
cli
dec
add
into
and
mov
in
dec
adc
dec
nop
xlat
push
pop
aam
pop
fmul
popf
into
jg
xlat
test
shl
push
int
dec
fst
cli
sbb
ror
or
outs
sub
push
pusha
iret
mov
add
fmul
mov
ror
ficom
xlat
or
aad
lea
lea
in
mov
ficom
ltr
retf
int3
cmp
add
mov
(bad)
mov
fistp
stos
sar
mov
ficomp
fisttp
iret
push
pop
into
into
(bad)
rcr
retf
movs
lods
shl
fsub
pop
fnstsw
(bad)
(bad)
leave
push
jge
(bad)
sbb
pushf
or
mov
loopne
or
pop
lods
iret
push
int
push
xor
add
(bad)
(bad)
mov
adc
aad
cs
sbb
sbb
mov
test
fist
fld
fdiv
int
popf
loope
xor
ret
cmp
fistp
and
fist
add
into
xlat
lods
int
cmc
dec
jecxz
pop
in
in
loop
ins
loopne
cmp
push
push
loopne
mov
and
push
push
ror
dec
into
add
in
cld
shr
loope
mov
cmp
(bad)
pop
loop
lods
(bad)
inc
ins
fisttp
fiadd
in
mov
jae
in
ins
in
ds
pop
into
into
(bad)
les
pop
lods
aam
ins
iret
and
out
or
clc
mov
pushf
mov
xchg
outs
shl
fcomp
add
fcmovu
enter
mov
jns
jmp
push
jecxz
ds
scas
fdiv
into
and
sar
std
iret
(bad)
mov
out
pop
in
(bad)
(bad)
idiv
push
mov
mov
loope
lods
fadd
out
mov
ja
fdiv
std
out
rcr
shl
jmp
cmp
cs
sub
repz
fild
out
inc
cs
(bad)
lods
mov
ror
mov
ror
outs
fisubr
retf
cdq
(bad)
in
inc
fild
mov
jmp
cmp
add
adc
sahf
aad
dec
icebp
or
repnz
sbb
jmp
fld
and
cmp
xor
fmul
in
out
iret
out
jmp
pop
icebp
out
loopne
scas
in
mov
add
push
fsubrp
or
(bad)
out
jmp
mov
in
xor
rcr
aad
mov
adc
sub
repz
loope
dec
icebp
movs
pop
ficom
dec
(bad)
icebp
or
pop
outs
in
sub
cmc
pop
mov
cmp
repz
pushf
out
dec
repz
(bad)
fadd
out
in
cmp
pop
out
aad
dec
test
in
das
icebp
test
adc
add
push
jmp
cmp
repz
inc
outs
add
pop
clc
cmp
repz
cli
ja
clc
pop
outs
in
xchg
das
out
imul
(bad)
in
dec
in
mov
cmc
mov
sti
cld
div
pop
cli
inc
iret
fisttp
pmuludq
aad
(bad)
cld
mov
std
sub
das
cld
scas
(bad)
icebp
inc
fild
cmps
popf
cmc
lods
scas
jmp
fdivr
cld
mov
out
mov
in
out
jmp
(bad)
clc
fistp
(bad)
cld
scas
cli
stos
int
out
sti
iret
mov
shl
pusha
popa
clc
movs
clc
cmc
rcl
cmp
test
fldenv
push
mov
and
pop
cmp
arpl
jmp
sub
jecxz
dec
sub
test
stos
cli
je
or
or
jp
retf
mov
push
dec
sub
ins
pop
leave
jp
popf
cmp
mov
pop
dec
stos
jl
pushf
leave
jl
retf
cmp
lods
sbb
outs
cdq
pop
dec
out
sub
int
ds
cmp
std
sub
mov
inc
xor
mov
js
lods
(bad)
sub
xlat
dec
fild
(bad)
jne
adc
jecxz
outs
mov
inc
arpl
fsubp
sbb
dec
arpl
ja
inc
imul
jmp
sub
in
sbb
dec
pop
cmp
call
stos
xor
sub
cmp
ficomp
in
(bad)
nop
mov
ret
cmps
adc
retf
lahf
(bad)
or
xchg
cmps
in
imul
ds
sbb
pop
mov
xor
dec
or
cmp
(bad)
stos
xchg
pop
mov
push
jl
cli
jb
jo
ret
sbb
pop
mov
xchg
xchg
pushf
pop
movs
loop
lods
pop
scas
cmp
cmc
fs
cmp
retf
push
popa
push
sbb
addr16
int3
xchg
sbb
in
pop
fxch
or
ficomp
les
rcl
xchg
mov
xchg
xchg
pop
pop
push
and
jecxz
jne
ret
mov
pop
inc
pop
add
mov
or
jns
push
ss
jp
sbb
fild
jae
in
fbstp
imul
and
mov
adc
clc
push
lea
div
rcr
fiadd
call
lods
fucom
dec
add
jns
ret
push
call
inc
in
inc
(bad)
mov
push
sbb
sub
inc
adc
jo
mov
and
push
pop
add
in
cwde
daa
(bad)
imul
mov
ret
xchg
pop
je
popf
pushf
push
jge
and
iret
sub
mov
ins
push
call
addr16
mov
or
loop
outs
xchg
es
bound
or
data16
sahf
test
adc
mov
mov
leave
adc
icebp
add
daa
pop
nop
fsub
mov
scas
sbb
and
mov
(bad)
sub
jp
inc
stos
push
dec
cmp
sub
scas
mov
std
pop
retf
xor
cs
sbb
and
mov
out
xchg
mov
xchg
bound
outs
scas
ret
mov
or
gs
xchg
fcomp
push
sub
in
fstp
aad
mov
loopne
xchg
in
mov
loop
mov
outs
pop
and
and
dec
xor
xchg
int3
inc
and
aam
pushf
xchg
aam
call
je
inc
cld
cmps
jnp
push
or
repz
retf
sbb
sbb
aad
mov
fbld
les
dec
inc
pop
inc
rcr
jge
and
sbb
popf
retf
mov
movs
mov
sub
fwait
sub
pushf
adc
aaa
cdq
loop
push
lods
out
into
inc
iret
in
or
fild
cs
jp
push
mov
jne
jp
pop
sub
push
scas
mov
xchg
add
xchg
outs
mov
push
mov
add
inc
add
xchg
mov
out
int3
mov
mov
loop
(bad)
(bad)
jge
int3
fsubr
adc
mov
(bad)
dec
cmp
pop
arpl
neg
outs
mov
in
xor
les
out
cli
mov
mov
xor
add
xchg
pop
int3
mov
(bad)
cmp
inc
mov
imul
ror
(bad)
jae
jb
mov
call
je
rcr
jmp
adc
ret
(bad)
sub
mov
xchg
or
in
ins
fisttp
popf
cmp
mov
(bad)
jle
retf
fwait
cmp
xchg
sbb
(bad)
mov
cdq
mov
push
stos
push
sahf
loope
xchg
or
push
into
std
(bad)
mov
add
jp
call
mov
std
add
and
outs
jns
mov
test
loopne
dec
mov
in
fadd
jp
xchg
int3
lahf
push
or
mov
lods
dec
outs
jbe
in
leave
enter
icebp
pop
je
loope
test
lods
xor
ret
dec
(bad)
or
stc
jp
inc
fidiv
fwait
adc
push
mov
jmp
or
les
daa
mov
jp
xchg
popf
int3
movs
push
inc
dec
(bad)
test
mov
arpl
mov
xchg
mov
sbb
retf
ror
xor
out
ins
push
js
add
xchg
cmp
jmp
das
mov
stos
cwde
mov
xor
test
aaa
aad
jecxz
test
dec
cli
mov
cdq
test
fs
or
dec
jle
push
and
fnstenv
xor
add
arpl
loop
or
xor
ja
in
and
mov
cmp
addr16
das
sbb
(bad)
repnz
mov
test
mov
(bad)
inc
cwde
cmp
call
aas
daa
retf
aas
cs
xchg
dec
mov
inc
fnsave
shl
dec
jo
or
sar
dec
dec
ret
add
cmp
push
mov
dec
xor
into
pop
data16
push
movs
push
lods
sub
push
mov
jl
inc
add
rol
xchg
(bad)
std
and
sbb
ficom
jge
push
mov
and
in
icebp
imul
addr16
mov
(bad)
mov
xor
jns
inc
xlat
rcl
xchg
mov
and
out
jns
test
lods
imul
xchg
pop
stc
call
scas
mov
loop
jmp
push
fwait
(bad)
add
int3
xchg
(bad)
push
adc
mov
idiv
jmp
push
mov
lahf
mov
mov
lods
cmps
outs
mov
and
add
sub
mov
out
sahf
cmp
das
add
mov
rcr
inc
xchg
adc
mov
daa
jo
add
or
sub
ror
ret
pop
mov
retf
add
push
cmps
lock
push
mov
loopne
jmp
xchg
test
test
inc
lods
push
dec
mov
or
mov
pop
call
loop
jno
add
sbb
lea
adc
xlat
clc
push
pop
dec
cwde
ret
ins
in
(bad)
aad
popf
inc
repnz
mov
ffreep
push
mov
dec
jno
pusha
or
push
pop
test
call
push
out
mov
mov
aas
cs
stc
retf
popa
push
adc
in
push
xchg
retf
push
add
jo
sbb
sar
cmp
or
dec
fistp
ja
lds
(bad)
sub
or
jbe
jae
int
add
stos
mov
cmps
mov
xchg
mov
cmp
or
(bad)
cli
leave
scas
xchg
or
out
(bad)
mov
adc
cmp
add
ss
bound
push
pxor
adc
mov
stc
fmul
outs
mov
sub
int3
stos
(bad)
mov
push
dec
das
xor
adc
mov
out
xor
push
in
imul
rcl
or
(bad)
cmps
div
sbb
or
fcmovb
or
lods
mov
ficomp
dec
nop
dec
test
pop
loop
es
sub
pushf
loopne
push
mov
je
pop
jecxz
mov
sbb
test
mov
clc
lock
scas
icebp
pop
jb
retf
push
jg
(bad)
test
add
aad
(bad)
stc
lock
pop
or
pop
js
sbb
add
add
pop
shl
std
loopne
out
xlat
(bad)
inc
aaa
jnp
fistp
lea
cli
shl
or
inc
mov
loopne
or
dec
or
mov
mov
outs
rol
or
adc
fdiv
push
pusha
stos
pop
std
test
jnp
adc
dec
(bad)
sbb
mov
pop
je
imul
rcl
je
fwait
jns
add
add
dec
ror
std
jl
fnstsw
mov
mov
mov
mov
mov
daa
or
ja
(bad)
fsubrp
mov
imul
aaa
aas
cli
in
sbb
or
add
loop
jmp
ja
fwait
pop
std
pushf
mov
jle
pop
push
repnz
cmp
movs
jg
dec
shl
push
jp
out
out
mov
cli
xlat
jns
xlat
jle
out
push
daa
add
jecxz
xor
adc
pusha
xor
adc
cmp
cmp
inc
pusha
adc
sbb
and
sbb
add
add
jne
aaa
jle
mov
add
xchg
mov
mov
push
enter
jge
addr16
xlat
push
mov
bound
test
jne
xchg
add
mov
mov
jg
dec
ja
addr16
sub
test
cmp
enter
aas
(bad)
lock
sbb
test
jle
enter
sub
jo
cwde
xor
xchg
clc
jnp
fdivr
xchg
pop
add
pop
ins
add
add
cmp
mov
test
inc
mov
cmc
ja
mov
jne
cmp
mov
movs
mov
add
add
push
mov
mov
cmps
js
mov
or
cmp
push
and
test
mov
mov
mov
mov
jo
sbb
mov
xor
jnp
cmps
add
jne
aaa
cmp
je
xlat
dec
fmul
out
cwde
mov
test
pop
mov
(bad)
fucomi
mov
push
movs
mov
jne
jae
dec
sbb
mov
pop
cmp
cmp
js
sbb
or
mov
and
push
js
std
cmp
clc
add
and
mov
fmul
sbb
ret
add
call
xlat
mov
sbb
dec
push
mov
push
add
add
cmps
fcom
and
and
mov
je
adc
or
dec
jp
cdq
mov
mov
lock
and
add
push
push
cwde
xchg
push
inc
mov
test
jmp
jo
mov
cmp
and
mov
dec
jl
cwde
ja
mov
or
jns
xor
xchg
xor
cdq
cmp
fcom
mov
xor
mov
dec
sub
cmp
push
sub
mov
cmp
or
(bad)
call
pop
dec
xchg
sbb
push
cdq
jno
call
mov
jle
mov
mov
xchg
bnd
mov
xchg
dec
xchg
sbb
dec
cdq
sbb
or
mov
sbb
xchg
ja
mov
add
mov
cmp
sub
mov
adc
push
ja
pop
and
retf
dec
sbb
jecxz
jae
fdiv
mov
and
dec
xchg
cdq
jns
pop
adc
push
imul
aaa
mov
adc
xchg
pop
pop
xchg
dec
stc
fwait
ret
enter
fcom
fcomp
ja
loopne
xchg
(bad)
sub
js
les
test
jns
xchg
add
pusha
pop
mov
sub
sub
leave
cdq
imul
jmp
xchg
dec
xor
movs
(bad)
lock
ja
xchg
push
nop
xchg
add
add
leave
movs
rsm
add
mov
js
push
movs
adc
mov
cwde
dec
xchg
js
xchg
inc
mov
jns
or
xchg
int
add
cmp
dec
mov
movs
push
sbb
imul
xchg
xor
je
jl
sub
mov
dec
pop
xchg
ret
mov
add
push
addr16
mov
jns
and
cdq
repz
mov
in
ret
pop
cwde
cwde
dec
mov
xchg
je
sahf
push
fldenv
cdq
stos
xor
add
fisub
test
das
or
sub
stc
xchg
sar
test
sbb
mov
stos
lods
call
sahf
mov
inc
jmp
mov
xchg
popf
mov
jns
lods
cli
stos
sbb
(bad)
push
adc
mov
call
into
cmp
fcom
pop
scas
push
pop
test
stos
or
loopne
out
stos
loope
mov
loopne
scas
fidiv
sti
add
mov
mov
scas
retf
or
mov
les
fisub
push
call
push
test
sbb
mov
scas
(bad)
jns
int
movs
aas
jnp
jecxz
xchg
inc
sub
cli
add
mov
jne
movs
pop
dec
mov
retf
test
jp
out
or
fwait
mov
inc
fwait
js
stos
xchg
jecxz
stos
inc
cmp
nop
cwde
mov
xor
scas
sahf
sub
pop
cwde
push
sub
or
sti
mov
sbb
sbb
test
dec
sub
(bad)
loopne
or
sahf
inc
jmp
mov
test
lods
repz
pop
mov
call
xor
mov
sub
leave
push
mov
xchg
test
scas
in
mov
sti
add
jmp
mov
jnp
ret
mov
ret
cmp
mov
dec
lods
push
or
stos
stos
jecxz
mov
stos
mov
pop
lods
inc
cmp
leave
push
mov
imul
sbb
cwde
retf
mov
mov
jnp
mov
mov
cmp
imul
mov
cli
mov
les
pop
mov
in
mov
add
mov
mov
jnp
xlat
stos
lods
jb
add
jb
cmp
mov
ret
std
dec
stos
(bad)
sub
mov
dec
mov
lods
rol
mov
mov
retf
mov
in
or
stos
or
lods
mov
sub
jo
xlat
pop
mov
sub
push
in
mov
mov
inc
mov
sub
sbb
mov
inc
add
cmp
cld
sar
mov
sub
nop
jnp
pop
dec
leave
mov
mov
fidiv
cmp
mov
mov
shl
add
dec
xchg
neg
fwait
in
mov
in
or
add
ja
retf
retf
mov
fist
pushf
mov
sbb
push
add
inc
add
mov
jnp
mov
test
sub
(bad)
xor
iret
sub
leave
retf
int3
mov
mov
mov
xor
push
dec
mov
sbb
and
(bad)
lea
sbb
retf
jl
pop
in
mov
sub
mov
imul
sbb
mov
retf
mov
cld
rcr
es
sar
xchg
fmul
test
(bad)
pop
call
or
retf
shr
int
pop
mov
pushf
rol
sub
loopne
xor
lods
xor
mov
jp
mov
int3
mov
xchg
daa
cmp
inc
popf
xchg
adc
cwde
movs
cmp
cmp
mov
ins
aam
cmp
pushf
cmp
int
shl
ret
retf
lods
pushf
aam
fst
ins
(bad)
(bad)
sti
jl
js
mov
in
aam
lods
ror
mov
sub
jp
enter
push
lds
shr
mov
cmp
int3
into
scas
(bad)
jns
ror
fsubr
and
sbb
rcl
mov
out
sbb
out
fadd
push
mov
addr16
xchg
mov
(bad)
sbb
std
int3
int
pushf
int3
push
cmp
dec
pop
cwde
pop
cmp
inc
sti
fdivr
mov
jmp
xor
pusha
fldenv
movs
lods
iret
cli
jp
add
(bad)
stos
sbb
test
iret
imul
or
dec
fstp
xor
aad
sub
popa
std
(bad)
(bad)
ret
ret
lea
test
mov
sub
fidiv
mov
sub
js
into
sbb
xor
mov
fst
in
lods
aam
pushf
fist
fsubr
fdivr
ins
fdivp
mov
dec
mov
ins
cmp
pop
scas
(bad)
push
loop
pop
fidiv
xchg
retf
loop
mov
or
mov
mov
(bad)
int
pop
loopne
push
nop
jecxz
pop
(bad)
into
lods
(bad)
mov
in
rol
dec
popf
fiadd
mov
cmp
outs
cmp
sbb
ror
jns
fucomp
sbb
nop
ins
(bad)
fstp
scas
cmp
bound
loopne
into
loop
cmp
adc
fcomp
std
fld
loopne
push
fld
fucom
popf
fbld
fisub
in
popf
loop
pop
jecxz
scas
in
popf
in
mov
(bad)
lods
in
dec
jmp
int
stc
int
in
loopne
sbb
addr16
xchg
outs
loopne
pop
out
out
out
pop
mov
dec
(bad)
dec
(bad)
out
jl
cmp
or
lods
add
jmp
(bad)
pop
loope
pop
add
jmp
push
fst
scas
in
popa
into
retf
in
int
xchg
int
scas
retf
vhsubpd
adc
fisttp
jmp
ds
outs
in
fcomp
outs
in
fld
sub
adc
in
mov
loop
push
call
cmp
test
out
lahf
jle
outs
out
in
out
dec
out
mov
(bad)
lods
jmp
or
stc
scas
out
fsubrp
cli
sahf
in
sub
out
outs
fbstp
or
sbb
out
lahf
pop
out
push
push
add
retf
(bad)
mov
sub
out
dec
sahf
out
stos
out
and
dec
loopne
xor
retf
sbb
jmp
retf
(bad)
repnz
repnz
fisubr
jg
stos
pop
out
mov
in
addr16
mov
hlt
ret
or
ins
fsubp
jmp
out
outs
imul
mov
dec
aas
hlt
scas
jnp
sub
sbb
jmp
cmp
xor
sub
loop
into
out
retf
ss
lock
mov
in
inc
out
out
cli
faddp
jl
hlt
fisubr
or
ret
or
sub
hlt
pop
(bad)
ffreep
sub
fdivrp
hlt
inc
mov
dec
movs
repz
add
ds
repnz
adc
in
jnp
pop
jg
sub
sti
fwait
scas
cli
jo
div
rcr
inc
iret
retf
cli
inc
jg
pop
pop
cld
ret
cmp
icebp
nop
int
lods
mov
daa
psubq
inc
(bad)
mov
std
sub
cli
pusha
(bad)
repnz
in
sub
jecxz
stc
fxch
cli
aaa
paddsw
cmc
aad
jmp
retf
rcr
cld
inc
mov
add
pop
test
cs
popa
mov
add
mov
popa
cs
mov
mov
movs
cwde
mov
xchg
movs
nop
cmps
stos
movs
mov
mov
mov
movs
mov
add
lea
pop
retf
rcr
nop
cwde
popf
xchg
(bad)
pushf
mov
sahf
xchg
lods
mov
scas
out
fisttp
fidiv
sub
sahf
and
cs
hlt
adc
sub
popa
stos
cmps
retf
pop
rol
leave
inc
clc
imul
pop
jp
push
pop
inc
arpl
add
dec
pop
in
jbe
gs
cmp
je
stos
mov
stos
mov
lock
out
xchg
jmp
xchg
(bad)
mov
push
loopne
mov
dec
mov
xor
xor
shl
mov
inc
cmp
inc
dec
aas
xor
and
sub
xchg
dec
or
push
outs
fnsave
push
xor
push
push
mov
in
and
push
inc
mov
cmc
das
aam
fs
jb
mov
mov
mov
(bad)
mov
lods
movs
xchg
add
aad
retf
je
(bad)
adc
retf
lea
mov
xchg
push
mov
(bad)
jmp
ror
fld
add
ror
xchg
(bad)
rol
ds
sahf
mov
xor
test
adc
mov
ja
and
shl
std
inc
out
inc
pop
mov
in
ror
and
sahf
dec
mov
mov
pop
mov
not
lahf
ds
and
mul
loope
dec
dec
pop
loop
cs
adc
inc
sbb
daa
fcom
adc
sbb
lds
outs
cmp
mov
inc
and
push
jp
push
xor
adc
movs
jnp
pop
fxam
mov
add
rol
and
pop
inc
test
out
or
dec
sub
inc
mov
push
or
xchg
daa
cmc
out
jnp
retf
fwait
or
dec
add
dec
cmp
test
pcmpeqb
sbb
cs
pusha
test
mov
test
cmps
mov
sbb
stos
cs
cli
ret
jbe
test
sbb
push
ret
test
add
adc
adc
bound
ret
dec
nop
cli
jmp
shl
bts
mov
mov
or
mov
push
sub
out
call
test
mov
mov
adc
xchg
sbb
add
pop
hlt
inc
add
mov
outs
mov
jp
out
sub
or
ror
or
cdq
(bad)
jno
adc
enter
inc
add
test
int
in
xor
cmp
cmp
jge
jo
in
lock
ror
popf
add
(bad)
je
hlt
ror
push
mov
sbb
cmovge
out
mov
aam
call
adc
jmp
inc
adc
xchg
in
jo
or
or
aas
adc
mov
rcr
ret
add
mov
dec
add
inc
and
std
jne
jge
sub
fisubr
adc
std
addr16
into
add
cmp
daa
shr
pop
adc
stos
repz
loop
or
aam
add
rcl
retf
pop
popf
jl
cmp
pop
cld
loopne
push
jmp
icebp
fisub
ret
cmp
into
dec
pushf
xchg
mov
mov
mov
adc
and
and
mov
dec
clc
retf
jmp
ja
rol
or
or
icebp
data16
cs
mov
stos
fnsave
pop
add
mov
rol
sar
and
sti
mov
bound
and
or
(bad)
dec
mov
aaa
inc
pop
not
and
fcomp
fisttp
and
pop
loope
push
sbb
push
(bad)
scas
jnp
adc
ss
test
push
call
lds
xchg
inc
sbb
dec
mov
and
push
mov
movs
xchg
adc
pop
arpl
stos
(bad)
arpl
and
rol
or
fstp
test
mov
arpl
faddp
inc
cmc
sbb
shl
mov
push
(bad)
gs
and
lods
mov
movs
movs
sbb
cmp
push
adc
xchg
outs
xor
std
xor
mov
popa
repnz
pop
lahf
or
retf
push
into
adc
xchg
leave
int3
arpl
jae
rcr
repnz
xor
out
mov
int
dec
adc
(bad)
sub
xchg
(bad)
adc
dec
dec
jbe
repz
lock
data16
dec
iret
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
shl
loopne
inc
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
and
loopne
cmp
pop
mov
push
and
mov
push
or
mov
mov
lods
ins
adc
mov
pop
inc
gs
imul
xor
gs
pusha
or
lods
fs
sti
push
leave
dec
and
dec
sti
pop
(bad)
and
mov
inc
sub
inc
imul
xchg
mov
add
pop
call
(bad)
in
adc
mov
gs
mov
pop
mov
retf
fisub
movs
test
mov
fisttp
fsub
push
pusha
outs
jp
sti
shl
bound
jnp
jnp
rcr
test
add
xlat
mov
sub
fld
jnp
sar
loopne
xor
imul
jg
and
int3
push
cwde
shr
sub
sbb
sub
cmp
add
mov
loopne
stos
xlat
(bad)
xchg
int
ja
mov
enter
jle
cmp
sbb
jbe
xchg
mov
pop
retf
js
adc
add
repz
and
add
xor
fs
rcr
lock
add
mov
(bad)
shr
scas
xchg
leave
repnz
repnz
or
or
sub
push
ror
imul
push
cmp
sbb
jmp
sbb
mov
jb
jecxz
adc
iret
xor
cli
add
ja
or
xchg
idiv
add
add
scas
scas
xor
jmp
jno
je
lea
and
hlt
aam
ins
cmc
pop
mov
scas
pop
(bad)
xlat
fidiv
jnp
sti
sbb
fist
sub
frstor
cmp
stc
lds
xor
fwait
ret
sbb
jle
pop
loopne
xchg
rcr
or
xlat
(bad)
out
cmc
adc
jl
push
stos
stc
int
(bad)
out
lods
or
cmp
push
rol
pushf
icebp
or
xor
push
sub
push
cmp
add
or
mov
mov
loopne
jbe
je
pop
out
loope
aaa
ror
mov
xor
outs
retf
repz
push
and
(bad)
not
rol
jp
or
es
mov
pop
jecxz
cmp
push
mov
imul
mov
or
nop
imul
aas
and
in
mov
scas
cmp
sahf
jne
ret
pop
pop
mov
movs
jmp
loopne
dec
icebp
cmovo
fld
add
cli
fcomp
push
jbe
pushf
sbb
outs
cmp
push
mov
push
pusha
aas
mov
shl
or
std
leave
jmp
sar
sbb
mov
adc
fisttp
dec
(bad)
cld
into
inc
int3
ins
shl
sti
lods
xlat
scas
jo
push
mov
lea
sahf
fstp
xor
pop
dec
xchg
repz
in
fidiv
pop
jmp
push
xor
pop
mov
mov
sbb
aam
inc
jle
jbe
cmp
add
ins
imul
mov
jge
xchg
or
shl
ficom
push
cwde
jo
movs
jp
inc
imul
pop
jae
and
movs
addr16
dec
xchg
push
push
imul
add
or
aaa
pop
add
ins
xchg
in
stc
aaa
jb
mov
int
push
inc
(bad)
jl
addr16
nop
jb
rcr
call
adc
dec
cmp
out
call
pop
xor
je
and
test
bound
push
cmp
jb
(bad)
jp
xlat
test
not
nop
jno
(bad)
jbe
outs
adc
(bad)
jne
cmps
add
ja
xchg
pop
add
pop
mov
jo
pop
ja
fsub
push
xor
je
aad
shl
pop
sbb
xchg
clc
js
mov
inc
mov
les
adc
jle
test
push
cmp
and
inc
pop
ja
push
jae
sub
pop
pop
push
and
push
(bad)
push
js
jbe
test
jp
sbb
push
mov
pop
mov
jge
lds
jno
rol
imul
imul
dec
fs
enter
push
mov
ins
shl
jb
add
cmp
xchg
mov
test
loopne
(bad)
xchg
add
push
les
fcom
xor
mov
cwde
outs
mov
mov
mov
jo
ret
adc
mov
push
and
(bad)
cmps
jnp
(bad)
data16
jp
sub
inc
nop
push
push
push
xchg
mov
mov
pop
pop
push
sbb
inc
(bad)
xchg
lds
sub
cmps
pop
out
ss
xchg
mov
push
es
es
ins
mov
arpl
nop
call
inc
pop
jge
cmps
jo
imul
sub
pop
mov
jge
enter
jnp
cmp
add
jge
cmps
ins
test
xchg
ficom
xchg
jo
pop
add
xchg
shl
jae
outs
inc
ja
mov
mov
mov
pusha
mov
xchg
jl
push
sbb
pop
test
loope
pop
cmps
(bad)
pop
xor
push
out
in
jbe
cmps
fsub
ja
or
pop
xchg
ja
inc
outs
rcl
imul
stos
jmp
xchg
jmp
das
jbe
imul
cmp
xchg
dec
xor
out
(bad)
jbe
data16
jle
or
add
mov
jne
aad
(bad)
popaw
aam
and
inc
push
or
jle
js
push
or
ins
int3
dec
pusha
adc
call
jmp
(bad)
icebp
or
sahf
mul
int3
pop
movs
push
pop
ja
push
sbb
xchg
test
xor
pop
jmp
movs
add
fwait
dec
out
inc
and
sbb
xchg
jmp
pop
pop
push
push
sbb
lea
leave
xchg
pop
es
push
icebp
pop
push
(bad)
pop
pop
mov
add
xchg
rcl
jo
in
in
jo
ins
xchg
inc
push
sbb
jmp
out
push
mov
addr16
mov
or
push
je
movs
pop
push
jns
mov
cmps
ja
add
movs
pop
call
add
pusha
xor
jp
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
cli
test
sbb
and
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
lods
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
and
jmp
fdivr
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
arpl
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
cmp
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
cli
add
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
push
and
scas
into
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sti
add
jp
dec
lock
or
add
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
pusha
mov
fwait
mov
cli
lods
out
sub
mov
jmp
sti
call
mov
add
jnp
psubd
mov
or
fisub
mov
bound
cmp
xor
sub
sbb
pop
dec
add
jo
sub
cmc
cli
popf
mov
inc
mov
xchg
sub
sti
mov
cmp
mov
jmp
popf
or
sbb
retf
mov
call
mov
pop
mov
imul
add
add
sbb
sbb
retf
mov
mov
push
rol
or
(bad)
or
xor
mov
loope
mov
sbb
stos
mov
cmp
nop
mov
fild
scas
pop
mov
retf
mov
stos
mov
cmp
test
add
sar
mov
lock
mov
sar
sub
call
add
sti
mov
stos
mov
(bad)
xlat
mov
sbb
add
add
jmp
ret
cmp
pushf
ret
cmp
and
adc
pushf
ret
cmp
pushf
les
or
inc
jl
push
pop
lds
cli
les
add
mov
dec
or
out
call
lds
lds
mov
pushf
mov
lds
ins
add
cld
add
sub
adc
mov
js
mov
cmp
addr16
les
les
enter
jp
add
fadd
out
enter
add
add
sub
xchg
lods
mov
mov
popf
cld
leave
nop
fmul
xchg
lods
scas
dec
push
retf
leave
pop
rol
scas
jl
push
or
imul
retf
int3
mov
retf
add
fadd
lds
retf
sbb
out
sbb
lds
or
retf
out
sbb
xor
int
fcmovb
fmul
mov
xchg
mov
mov
add
into
in
jl
sub
add
pusha
add
retf
movs
int3
iret
jmp
retf
leave
repnz
iret
neg
into
pop
pusha
leave
or
iret
pop
std
into
mov
mov
cld
retf
or
mov
cmp
add
retf
out
pop
sar
in
mov
jge
movs
fadd
cmp
inc
mov
loopne
shr
std
in
ror
cli
retf
mov
ror
fst
dec
cld
iret
xor
les
(bad)
shr
std
retf
sar
rcr
cmp
mov
aam
cmp
pop
jge
push
pusha
ror
mov
sub
leave
jmp
shr
lods
aad
dec
aam
or
sbb
dec
jge
pop
nop
add
std
retf
into
sti
sub
cli
dec
add
into
and
mov
in
dec
adc
dec
nop
xlat
push
pop
aam
pop
fmul
popf
into
jg
xlat
test
shl
push
int
dec
fst
cli
sbb
ror
or
outs
sub
push
pusha
iret
mov
add
fmul
mov
ror
ficom
xlat
or
aad
lea
lea
in
mov
ficom
ltr
retf
int3
cmp
add
mov
(bad)
mov
fistp
stos
sar
mov
ficomp
fisttp
iret
push
pop
into
into
(bad)
rcr
retf
movs
lods
shl
fsub
pop
fnstsw
(bad)
(bad)
leave
push
jge
(bad)
sbb
pushf
or
mov
loopne
or
pop
lods
iret
push
int
push
xor
add
(bad)
(bad)
mov
adc
aad
cs
sbb
sbb
mov
test
fist
fld
fdiv
int
popf
loope
xor
ret
cmp
fistp
and
fist
add
into
xlat
lods
int
cmc
dec
jecxz
pop
in
in
loop
ins
loopne
cmp
push
push
loopne
mov
and
push
push
ror
dec
into
add
in
cld
shr
loope
mov
cmp
(bad)
pop
loop
lods
(bad)
inc
ins
fisttp
fiadd
in
mov
jae
in
ins
in
ds
pop
into
into
(bad)
les
pop
lods
aam
ins
iret
and
out
or
clc
mov
pushf
mov
xchg
outs
shl
fcomp
add
fcmovu
enter
mov
jns
jmp
push
jecxz
ds
scas
fdiv
into
and
sar
std
iret
(bad)
mov
out
pop
in
(bad)
(bad)
idiv
push
mov
mov
loope
lods
fadd
out
mov
ja
fdiv
std
out
rcr
shl
jmp
cmp
cs
sub
repz
fild
out
inc
cs
(bad)
lods
mov
ror
mov
ror
outs
fisubr
retf
cdq
(bad)
in
inc
fild
mov
jmp
cmp
add
adc
sahf
aad
dec
icebp
or
repnz
sbb
jmp
fld
and
cmp
xor
fmul
in
out
iret
out
jmp
pop
icebp
out
loopne
scas
in
mov
add
push
fsubrp
or
(bad)
out
jmp
mov
in
xor
rcr
aad
mov
adc
sub
repz
loope
dec
icebp
movs
pop
ficom
dec
(bad)
icebp
or
pop
outs
in
sub
cmc
pop
mov
cmp
repz
pushf
out
dec
repz
(bad)
fadd
out
in
cmp
pop
out
aad
dec
test
in
das
icebp
test
adc
add
push
jmp
cmp
repz
inc
outs
add
pop
clc
cmp
repz
cli
ja
clc
pop
outs
in
xchg
das
out
imul
(bad)
in
dec
in
mov
cmc
mov
sti
cld
div
pop
cli
inc
iret
fisttp
pmuludq
aad
(bad)
cld
mov
std
sub
das
cld
scas
(bad)
icebp
inc
fild
cmps
popf
cmc
lods
scas
jmp
fdivr
cld
mov
out
mov
in
out
jmp
(bad)
clc
fistp
(bad)
cld
scas
cli
stos
int
out
sti
iret
mov
shl
pusha
popa
clc
movs
clc
cmc
rcl
cmp
test
fldenv
push
mov
and
pop
cmp
arpl
jmp
sub
jecxz
dec
sub
test
stos
cli
je
or
or
jp
retf
mov
push
dec
sub
ins
pop
leave
jp
popf
cmp
mov
pop
dec
stos
jl
pushf
leave
jl
retf
cmp
lods
sbb
outs
cdq
pop
dec
out
sub
int
ds
cmp
std
sub
mov
inc
xor
mov
js
lods
(bad)
sub
xlat
dec
fild
(bad)
jne
adc
jecxz
outs
mov
inc
arpl
fsubp
sbb
dec
arpl
ja
inc
imul
jmp
sub
in
sbb
dec
pop
cmp
call
stos
xor
sub
cmp
ficomp
in
(bad)
nop
mov
ret
cmps
adc
retf
lahf
(bad)
or
xchg
cmps
in
imul
ds
sbb
pop
mov
xor
dec
or
cmp
(bad)
stos
xchg
pop
mov
push
jl
cli
jb
jo
ret
sbb
pop
mov
xchg
xchg
pushf
pop
movs
loop
lods
pop
scas
cmp
cmc
fs
cmp
retf
push
popa
push
sbb
addr16
int3
xchg
sbb
in
pop
fxch
or
ficomp
les
rcl
xchg
mov
xchg
xchg
pop
pop
push
and
jecxz
jne
ret
mov
pop
inc
pop
add
mov
or
jns
push
ss
jp
sbb
fild
jae
in
fbstp
imul
and
mov
adc
clc
push
lea
div
rcr
fiadd
call
lods
fucom
dec
add
jns
ret
push
call
inc
in
inc
(bad)
mov
push
sbb
sub
inc
adc
jo
mov
and
push
pop
add
in
cwde
daa
(bad)
imul
mov
ret
xchg
pop
je
popf
pushf
push
jge
and
iret
sub
mov
ins
push
call
addr16
mov
or
loop
outs
xchg
es
bound
or
data16
sahf
test
adc
mov
mov
leave
adc
icebp
add
daa
pop
nop
fsub
mov
scas
sbb
and
mov
(bad)
sub
jp
inc
stos
push
dec
cmp
sub
scas
mov
std
pop
retf
xor
cs
sbb
and
mov
out
xchg
mov
xchg
bound
outs
scas
ret
mov
or
gs
xchg
fcomp
push
sub
in
fstp
aad
mov
loopne
xchg
in
mov
loop
mov
outs
pop
and
and
dec
xor
xchg
int3
inc
and
aam
pushf
xchg
aam
call
je
inc
cld
cmps
jnp
push
or
repz
retf
sbb
sbb
aad
mov
fbld
les
dec
inc
pop
inc
rcr
jge
and
sbb
popf
retf
mov
movs
mov
sub
fwait
sub
pushf
adc
aaa
cdq
loop
push
lods
out
into
inc
iret
in
or
fild
cs
jp
push
mov
jne
jp
pop
sub
push
scas
mov
xchg
add
xchg
outs
mov
push
mov
add
inc
add
xchg
mov
out
int3
mov
mov
loop
(bad)
(bad)
jge
int3
fsubr
adc
mov
(bad)
dec
cmp
pop
arpl
neg
outs
mov
in
xor
les
out
cli
mov
mov
xor
add
xchg
pop
int3
mov
(bad)
cmp
inc
mov
imul
ror
(bad)
jae
jb
mov
call
je
rcr
jmp
adc
ret
(bad)
sub
mov
xchg
or
in
ins
fisttp
popf
cmp
mov
(bad)
jle
retf
fwait
cmp
xchg
sbb
(bad)
mov
cdq
mov
push
stos
push
sahf
loope
xchg
or
push
into
std
(bad)
mov
add
jp
call
mov
std
add
and
outs
jns
mov
test
loopne
dec
mov
in
fadd
jp
xchg
int3
lahf
push
or
mov
lods
dec
outs
jbe
in
leave
enter
icebp
pop
je
loope
test
lods
xor
ret
dec
(bad)
or
stc
jp
inc
fidiv
fwait
adc
push
mov
jmp
or
les
daa
mov
jp
xchg
popf
int3
movs
push
inc
dec
(bad)
test
mov
arpl
mov
xchg
mov
sbb
retf
ror
xor
out
ins
push
js
add
xchg
cmp
jmp
das
mov
stos
cwde
mov
xor
test
aaa
aad
jecxz
test
dec
cli
mov
cdq
test
fs
or
dec
jle
push
and
fnstenv
xor
add
arpl
loop
or
xor
ja
in
and
mov
cmp
addr16
das
sbb
(bad)
repnz
mov
test
mov
(bad)
inc
cwde
cmp
call
aas
daa
retf
aas
cs
xchg
dec
mov
inc
fnsave
shl
dec
jo
or
sar
dec
dec
ret
add
cmp
push
mov
dec
xor
into
pop
data16
push
movs
push
lods
sub
push
mov
jl
inc
add
rol
xchg
(bad)
std
and
sbb
ficom
jge
push
mov
and
in
icebp
imul
addr16
mov
(bad)
mov
xor
jns
inc
xlat
rcl
xchg
mov
and
out
jns
test
lods
imul
xchg
pop
stc
call
scas
mov
loop
jmp
push
fwait
(bad)
add
int3
xchg
(bad)
push
adc
mov
idiv
jmp
push
mov
lahf
mov
mov
lods
cmps
outs
mov
and
add
sub
mov
out
sahf
cmp
das
add
mov
rcr
inc
xchg
adc
mov
daa
jo
add
or
sub
ror
ret
pop
mov
retf
add
push
cmps
lock
push
mov
loopne
jmp
xchg
test
test
inc
lods
push
dec
mov
or
mov
pop
call
loop
jno
add
sbb
lea
adc
xlat
clc
push
pop
dec
cwde
ret
ins
in
(bad)
aad
popf
inc
repnz
mov
ffreep
push
mov
dec
jno
pusha
or
push
pop
test
call
push
out
mov
mov
aas
cs
stc
retf
popa
push
adc
in
push
xchg
retf
push
add
jo
sbb
sar
cmp
or
dec
fistp
ja
lds
(bad)
sub
or
jbe
jae
int
add
stos
mov
cmps
mov
xchg
mov
cmp
or
(bad)
cli
leave
scas
xchg
or
out
(bad)
mov
adc
cmp
add
ss
bound
push
pxor
adc
mov
stc
fmul
outs
mov
sub
int3
stos
(bad)
mov
push
dec
das
xor
adc
mov
out
xor
push
in
imul
rcl
or
(bad)
cmps
div
sbb
or
fcmovb
or
lods
mov
ficomp
dec
nop
dec
test
pop
loop
es
sub
pushf
loopne
push
mov
je
pop
jecxz
mov
sbb
test
mov
clc
lock
scas
icebp
pop
jb
retf
push
jg
(bad)
test
add
aad
(bad)
stc
lock
pop
or
pop
js
sbb
add
add
pop
shl
std
loopne
out
xlat
(bad)
inc
aaa
jnp
fistp
lea
cli
shl
or
inc
mov
loopne
or
dec
or
mov
mov
outs
rol
or
adc
fdiv
push
pusha
stos
pop
std
test
jnp
adc
dec
(bad)
sbb
mov
pop
je
imul
rcl
je
fwait
jns
add
add
dec
ror
std
jl
fnstsw
mov
mov
mov
mov
mov
daa
or
ja
(bad)
(bad)
out
mov
dec
or
push
scas
jle
aaa
aas
cli
in
sbb
or
add
loop
jmp
ja
fwait
pop
std
pushf
mov
jle
pop
push
repnz
cmp
movs
jg
dec
shl
push
jp
out
out
mov
cli
xlat
jns
xlat
jle
out
push
daa
add
jecxz
xor
adc
pusha
xor
adc
cmp
cmp
inc
pusha
adc
sbb
and
sbb
add
add
jne
aaa
jle
mov
add
xchg
mov
mov
push
enter
jge
addr16
xlat
push
mov
bound
test
jne
xchg
add
mov
mov
jg
dec
ja
addr16
sub
test
cmp
enter
aas
(bad)
lock
sbb
test
ja
push
sub
sub
sub
mov
jne
daa
jne
lock
push
scas
aaa
jo
inc
add
mov
cmps
mov
add
mov
js
push
mov
cmps
add
sbb
add
cmp
add
rol
adc
dec
cmp
mov
or
cmp
mov
js
test
mov
or
dec
push
pop
jo
sbb
mov
xor
jnp
cmps
add
jne
aaa
cmp
je
xlat
dec
fmul
out
cdq
mov
enter
mov
(bad)
fnstsw
mov
push
cmps
fmul
div
dec
sbb
mov
mov
cmp
cwde
mov
mov
inc
nop
pop
test
add
inc
mov
data16
test
sbb
imul
jne
mov
cmps
dec
and
xchg
and
int3
mov
rcl
xchg
push
or
push
sub
mov
xchg
xor
mov
mov
push
dec
push
add
mov
xchg
push
cmp
sub
add
mov
pusha
mov
cmp
and
cmp
out
ja
cdq
mov
xchg
add
xchg
retf
dec
test
cmp
jmp
dec
cdq
cmp
fcom
mov
xor
mov
dec
sbb
cmp
push
fnstcw
cmps
mov
cmp
or
(bad)
call
add
xchg
sbb
push
cdq
jno
fcom
jns
test
add
xchg
cmp
push
dec
xchg
daa
xchg
cdq
sbb
retf
mov
repnz
sbb
xchg
ja
mov
leave
xchg
in
add
mov
cmp
sahf
or
cdq
cmc
mov
sub
sahf
inc
clc
popf
retf
xchg
fistp
aas
mov
xchg
call
xor
sbb
xchg
push
push
cmp
call
js
cdq
scas
cwde
xchg
inc
sub
stc
xchg
push
lock
push
dec
xchg
mov
call
pop
test
cld
or
add
pushf
push
sub
push
test
rcr
call
je
test
je
jns
ror
xchg
cmp
add
lahf
jecxz
xchg
dec
xor
movs
repnz
sahf
push
adc
xchg
pop
mov
or
imul
stc
xchg
out
mov
mov
fnstcw
push
sub
stc
cwde
jns
mov
adc
and
repnz
xchg
and
jno
cmps
fucomip
mov
sbb
mov
or
mov
dec
dec
xchg
and
test
mov
push
pop
mov
jmp
dec
cmc
test
jns
arpl
xchg
je
mov
pop
cwde
je
stos
xor
test
test
lea
xchg
scas
mov
and
stos
ins
dec
popf
jno
add
cmp
cmp
or
stos
dec
cdq
lea
test
call
add
cmp
sbb
or
and
pushf
mov
adc
movs
dec
sub
test
xchg
sbb
pushf
sbb
mov
jg
add
mov
sub
add
sti
add
mov
mov
scas
int3
mov
add
mov
les
sbb
sbb
dec
scas
mov
mov
cmp
mov
or
movs
dec
mov
rol
cdq
add
mov
imul
in
stos
pop
cli
xchg
xchg
call
call
fldcw
xor
scas
lahf
sub
fldcw
ficom
stos
mov
rcl
jg
test
mov
jmp
loopne
mov
sbb
cmp
shr
imul
inc
inc
dec
push
mov
scas
daa
sbb
sbb
push
xor
mov
stos
stos
inc
sub
jnp
jle
xchg
sar
mov
add
or
sub
sti
xchg
(bad)
mov
mov
mov
sbb
mov
retf
mov
pop
mov
sbb
mov
fdivr
lds
mov
mov
popa
mov
mov
mov
add
stos
dec
jmp
cli
sbb
or
mov
jmp
dec
mov
dec
shl
push
or
xor
add
dec
mov
and
sbb
add
mov
ror
movs
fwait
lods
jb
add
jb
cmp
ret
pop
stos
sub
mov
addr16
mov
aas
mov
retf
in
retf
scas
lahf
fcmovb
(bad)
imul
les
mov
pushf
mov
call
ret
mov
ins
add
and
cwde
cwde
shr
push
ins
mov
jo
add
(bad)
jge
mov
cmp
repnz
(bad)
push
pushf
mov
sub
jmp
repnz
sub
sub
mov
sbb
cli
call
leave
mov
(bad)
mov
cmps
dec
imul
lods
or
xor
imul
mov
pushf
mov
mov
add
int3
out
lds
add
mov
mov
ds
jl
mov
in
enter
cmps
sbb
dec
pushf
mov
jmp
loop
les
(bad)
jl
into
inc
adc
stc
test
enter
cs
into
test
retf
dec
mov
dec
(bad)
mov
mov
mov
sti
pop
mov
sbb
dec
jl
xlat
pushf
mov
jmp
int
ins
retf
int3
shr
pop
or
nop
retf
rol
mov
mov
mov
dec
mov
sbb
pop
ror
jnp
cs
scas
ss
iret
gs
shr
mov
adc
or
adc
cli
or
rcr
adc
int3
push
xor
ins
retf
mov
sbb
ret
ins
mov
pushf
leave
out
(bad)
ds
rol
mov
sbb
cmp
add
mov
cmp
pop
int
lods
rcr
(bad)
aam
push
push
fcmovnbe
mov
rol
mov
mov
(bad)
mov
int3
mov
int3
into
cli
int3
iret
push
ins
shl
add
lods
fst
rol
(bad)
cmp
push
pop
leave
ret
rcr
popf
into
rcr
xchg
jae
iret
ret
mov
les
aam
(bad)
int3
mov
add
outs
ins
retf
(bad)
pushf
mov
dec
fidiv
add
add
xor
leave
fcmovnu
rcr
mov
add
(bad)
pop
int3
fcomp
stos
scas
movs
pop
retf
lds
call
stos
scas
addr16
mov
mov
(bad)
sbb
into
pop
jge
mov
repnz
iret
cs
rcr
(bad)
jbe
shr
ins
into
xchg
mov
cmp
retf
gs
addr16
xchg
sub
fucomip
fbld
lea
sbb
loopne
(bad)
fild
mov
sub
in
aad
popf
retf
loop
cmp
or
fild
cmp
push
iret
pop
test
ret
fucom
call
lods
mov
mov
fdivr
cld
mov
call
or
popa
pop
mov
mov
neg
fistp
ja
loope
mov
neg
jne
loope
push
loope
cs
lods
out
imul
(bad)
cmp
fldcw
push
loop
ds
out
fdivr
ins
out
ins
jecxz
jge
cmps
sbb
mov
fistp
fisubr
jmp
ins
(bad)
addr16
fsubp
jl
shr
in
pop
loope
scas
aam
int
cmp
or
mov
jge
hlt
ins
aam
jne
mov
jmp
sbb
movs
out
mov
sub
ins
fisubr
in
imul
xor
sub
sahf
in
mov
jg
mov
push
out
pop
cs
cs
sub
jmp
scas
out
cs
push
call
fwait
pop
in
adc
xchg
sbb
ds
out
pop
in
loopne
push
fist
lock
cs
lods
dec
in
pop
pop
in
outs
int
into
lock
fsubp
aad
jmp
or
int3
outs
jmp
or
out
push
adc
mov
sar
sar
cmp
hlt
out
scas
dec
push
repnz
outs
lock
into
bnd
out
repnz
xchg
icebp
sub
out
stos
scas
in
retf
cmp
out
loopne
aad
ins
lock
sbb
fcomp
push
pop
scas
repnz
mov
sbb
inc
push
push
into
lock
add
lock
jmp
push
jg
sbb
inc
pmuludq
push
push
mov
popa
lahf
out
sahf
mov
dec
loop
mov
(bad)
mov
sti
in
in
push
jmp
jle
rcr
repz
inc
std
repz
jg
adc
out
jle
sar
cli
push
idiv
outs
hlt
rcr
jge
xlat
(bad)
(bad)
bnd
in
dec
iret
push
xor
sub
stc
into
lods
repnz
mov
repnz
aas
hlt
test
aad
jg
sub
xlat
pushf
cli
inc
pop
idiv
in
xchg
outs
cli
inc
pop
out
fcomp
mov
repnz
out
push
imul
les
stc
ret
push
cmc
ror
bnd
sti
pop
fucomip
idiv
stc
gs
(bad)
into
lock
sti
jl
in
mov
dec
push
stc
sbb
mov
mov
idiv
test
hlt
push
push
hlt
cmp
jg
or
popa
add
add
xchg
or
xchg
test
xchg
push
xchg
pop
add
test
mov
xchg
add
mov
popa
mov
mov
xchg
add
sahf
(bad)
(bad)
leave
call
add
mov
(bad)
lahf
shl
in
mov
lahf
mov
mov
shl
scas
xor
pop
inc
mov
mov
stos
(bad)
outs
and
xor
adc
push
or
shl
shl
pop
pop
mov
jecxz
jmp
mov
pop
xor
aam
xchg
and
daa
rol
push
jl
ins
loope
mov
out
nop
das
inc
xlat
push
cmp
dec
mov
inc
nop
sbb
cdq
(bad)
dec
jmp
dec
push
mov
mov
lds
xchg
push
dec
cli
sub
push
mov
xchg
sub
scas
scas
inc
jp
pop
mov
mov
and
test
je
call
xor
mov
fisubr
test
pop
add
mov
pop
sbb
inc
inc
daa
cdq
stos
dec
jp
jne
in
fistp
test
or
pop
ss
dec
leave
(bad)
and
sbb
ds
movs
inc
pop
push
push
push
add
(bad)
ins
mov
inc
std
pushf
sbb
jmp
cmp
dec
or
stos
inc
dec
inc
xor
add
fidivr
push
vmulpd
loope
push
fs
or
xor
inc
xchg
mov
shl
sar
jo
xchg
pop
jp
pop
daa
lahf
pop
int
cmc
popa
ins
jecxz
ret
scas
push
fidivr
fnstenv
iret
sub
aam
mov
inc
push
add
sub
mul
pop
aaa
out
popf
imul
cmp
xchg
pop
mov
inc
(bad)
lahf
dec
jmp
ret
sbb
fcom
daa
movs
xchg
loop
pop
xchg
call
jbe
adc
jp
cdq
movs
es
cwde
ret
push
fidivr
dec
xchg
gs
cdq
and
gs
div
popf
add
popf
pop
rol
dec
and
sbb
cs
cmps
mov
add
stos
test
test
stos
inc
mov
cli
ret
mov
sar
sub
stos
test
mov
cli
add
pcmpeqw
lds
test
mov
xlat
sahf
sub
es
fwait
mov
into
pop
jmp
dec
add
xor
mov
add
pop
dec
test
mov
mov
popa
lock
in
add
cld
repz
add
js
das
mov
push
test
mov
or
sub
adc
jmp
(bad)
cmp
sti
xor
adc
(bad)
jnp
add
mov
test
or
sub
xlat
ret
cmp
jge
outs
jmp
or
or
sub
adc
popf
sar
dec
or
rcr
in
cmp
aaa
dec
lock
out
mov
jg
les
add
ins
repz
mov
or
lock
mov
mov
cli
sbb
sub
and
(bad)
(bad)
dec
pop
sahf
stc
shr
scas
sti
ja
iret
dec
push
mov
jl
mov
mov
cli
jmp
mov
cli
popf
sub
dec
ret
push
add
inc
push
mov
cwde
out
fbstp
cmp
mov
mov
mov
xor
loop
pop
fsubr
loop
push
pop
in
loopne
call
jnp
adc
pop
jle
(bad)
sti
mov
push
cli
mov
ret
or
pop
popf
add
lds
jne
inc
add
mov
cmps
jnp
adc
add
ja
xchg
popf
in
ss
add
fiadd
std
mov
or
push
push
and
rol
inc
test
adc
int
adc
sahf
test
lds
and
jnp
cmp
js
or
mov
loope
push
xlat
les
in
cmps
mov
inc
inc
popa
mov
mov
sbb
fisub
(bad)
adc
(bad)
es
add
sbb
fisubr
mov
dec
adc
rol
add
ret
push
mov
lock
mov
pop
and
add
push
adc
mov
iret
pop
in
sti
or
push
(bad)
icebp
lea
js
ss
mov
and
dec
sahf
push
add
dec
rcr
add
sub
jmp
arpl
xchg
cmp
inc
dec
adc
ss
dec
and
fwait
loopne
out
(bad)
outs
(bad)
push
xchg
in
sahf
cmp
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
add
retf
cli
hlt
cmps
inc
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
push
sub
add
cld
aam
test
jmp
les
or
cmp
mov
add
or
xchg
(bad)
bound
sti
fmul
inc
loope
pop
xchg
imul
xchg
mov
mov
sub
(bad)
mov
adc
cmp
cmp
add
jnp
fptan
je
mov
sub
shl
pop
and
mov
gs
addr16
sti
fcmovnbe
push
shl
dec
pop
les
mov
(bad)
(bad)
rcr
mov
jg
pop
sahf
mov
mov
into
sbb
cmp
fisub
mov
in
jl
rcl
enter
jmp
dec
fcomip
not
jbe
mov
mov
pop
sub
add
ja
push
scas
in
add
pop
mov
cwde
les
sti
popa
int
pop
ret
mov
or
enter
jmp
jns
cld
fdivr
push
mov
js
fs
ja
adc
lds
mov
test
popa
or
or
lock
add
add
xor
and
sbb
add
inc
xchg
adc
inc
loopne
adc
adc
sub
retf
dec
push
add
sub
jns
in
pop
and
cwde
mov
into
in
nop
mov
mov
jae
ins
pusha
int
loope
push
out
sub
test
push
in
xchg
sbb
mov
nop
cmc
sbb
ret
and
jl
pop
pusha
xor
mov
imul
fldcw
add
cli
pop
add
dec
pop
pop
fsub
es
inc
sbb
enter
jns
cmp
mov
test
clc
ror
jae
dec
pop
pop
jmp
scas
xor
add
shl
lock
aad
mov
gs
iret
inc
div
fiadd
xchg
sahf
mov
std
sbb
adc
pop
loop
xor
xor
sbb
cmc
jbe
jge
daa
cmp
mov
(bad)
ins
jnp
ins
fmul
jb
les
test
(bad)
retf
or
not
mov
ins
pusha
add
pop
mov
std
mov
test
outs
jge
nop
imul
outs
out
sub
ror
test
sbb
and
in
retf
mov
into
cmc
cwde
repz
push
sub
push
cmc
xchg
sti
sbb
outs
ss
adc
and
in
mov
daa
xor
out
jg
stc
mov
dec
loopne
pop
ror
popf
repz
sbb
loop
(bad)
sub
jge
cmp
or
fimul
pushf
jnp
movs
(bad)
mov
pop
jg
and
ins
clc
test
in
fistp
pop
inc
pushf
imul
cmp
or
shr
mov
in
mov
cmc
arpl
aas
add
jae
jecxz
mov
psllq
loope
pop
jge
mov
jp
pop
mov
lods
cmp
lock
cmp
add
ins
xchg
xchg
gs
xchg
xchg
add
pusha
into
gs
jno
jnp
push
ins
adc
inc
gs
pop
imul
mov
adc
dec
push
push
(bad)
push
rol
enter
pop
add
sysret
ins
xchg
movs
jne
div
jo
leave
(bad)
push
inc
xchg
jl
daa
jo
push
jb
nop
pop
push
test
shl
mov
dec
clc
outs
sbb
pop
in
jle
pop
pop
das
sbb
test
bound
push
cmp
aam
jb
xchg
xchg
test
mov
add
jno
xchg
daa
outs
or
je
cmps
add
(bad)
jbe
push
pop
add
lahf
xchg
test
xlat
jbe
cwde
gs
mov
sbb
je
xchg
test
not
cmps
add
bound
ins
inc
jo
shl
push
jg
cwde
jle
mov
jno
gs
push
ss
and
push
and
(bad)
jbe
(bad)
jb
call
loop
pop
push
and
push
xchg
cmp
test
jp
fdiv
(bad)
mov
pop
mov
jge
or
test
jo
add
imul
test
jb
out
scas
or
jb
cmp
xchg
ins
into
out
mov
sbb
jge
push
gs
test
mov
std
(bad)
imul
imul
fcom
jle
ins
ss
jne
(bad)
mov
xchg
push
les
mov
mov
jns
imul
jmp
(bad)
jmp
push
(bad)
push
lea
lods
inc
pop
pop
sub
js
arpl
jle
push
(bad)
pop
xor
jmp
jge
xchg
lods
(bad)
imul
xchg
aaa
nop
sti
adc
outs
addr16
mov
xor
ins
xchg
xlat
mov
jge
mov
cmp
add
jge
ins
movs
mov
(bad)
(bad)
xchg
ins
jne
call
xchg
into
ja
fcomip
jle
mov
aaa
lea
jp
test
imul
scas
pop
xchg
jl
(bad)
adc
push
push
mov
push
cmps
mov
arpl
xchg
add
js
xchg
inc
lea
cmp
js
imul
push
js
sub
xchg
cwde
ins
adc
std
fdivr
jmp
sub
lea
(bad)
out
mov
or
jns
aaa
xchg
dec
lock
pusha
cmps
jae
ss
inc
nop
mov
test
jnp
clc
je
xchg
jo
es
ror
inc
push
or
fwait
jp
js
sub
sub
pop
popf
sbb
pusha
push
cmps
call
in
nop
push
(bad)
in
leave
jae
mov
repz
rcr
jbe
es
mov
push
adc
outs
dec
mov
xor
pop
out
(bad)
jbe
xchg
movs
add
fwait
dec
cmps
xchg
inc
inc
bound
sbb
fadd
or
pusha
sbb
cmp
add
imul
imul
or
mov
pop
test
jp
sbb
xchg
jge
(bad)
outs
call
jo
es
and
inc
mov
add
push
mov
cmps
mov
push
outs
addr16
jne
or
push
jo
movs
push
sub
xchg
jae
add
movs
push
pop
addr16
movs
push
mov
adc
cmps
pop
sbb
je
cmps
jbe
cmps
js
cmps
jp
cmps
jl
cmps
jle
cmps
sbb
cmp
test
xchg
mov
mov
test
adc
add
add
add
add
out
add
xchg
add
add
and
and
bound
movs
adc
adc
loop
je
je
xor
or
push
push
xchg
xchg
xchg
mov
mov
rcl
ins
push
sub
sub
sbb
repnz
jl
jl
cmp
push
or
stos
lods
pop
pop
pop
xchg
call
add
dec
dec
int3
retf
data16
adc
fcmovu
je
ins
xor
sub
jle
inc
ds
mov
in
mov
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
cmp
xor
push
pop
pushf
xchg
pushf
(bad)
fsubr
sub
sub
push
and
jle
cmp
cmp
scas
lods
pushf
call
push
aam
aam
xchg
les
and
cmps
movs
in
in
jbe
xor
xor
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
int3
into
int3
ins
data16
sbb
sbb
(bad)
je
je
cs
jle
inc
ds
mov
in
out
in
mov
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
jle
cmp
inc
lods
scas
mov
sahf
pushf
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
loope
test
or
mov
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
mov
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
aas
add
cmp
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
pop
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
fiadd
pop
ds
and
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
pop
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
gs
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
cld
pop
push
aas
mov
pop
in
shl
pop
xchg
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
push
mov
stos
mov
add
stos
mov
stos
xor
mov
call
lods
popa
push
add
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
sbb
xor
mov
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
or
scas
les
scas
into
stos
cmps
pop
and
or
out
sbb
cdq
test
or
jmp
push
dec
pusha
scas
push
mov
jmp
lods
sub
cmps
out
xchg
jb
test
call
mov
and
pop
xor
lods
out
dec
mov
mov
cmps
sti
call
mov
and
fwait
mov
cli
lods
cmp
sti
mov
stos
lods
jnp
mov
shl
mov
sti
mov
mov
jp
add
sbb
imul
sbb
shl
add
or
(bad)
mov
mov
lea
or
ins
sbb
sub
fwait
mov
fstp
jp
mov
test
cli
mov
xchg
sbb
cmp
retf
mov
fwait
add
shl
mov
fwait
add
mov
and
dec
shl
mov
jo
push
nop
mov
cmp
mov
mov
imul
loop
scas
fistp
nop
jmp
lods
xchg
fwait
add
or
mov
sbb
stos
mov
stos
add
fwait
mov
cmp
cli
mov
mov
or
mov
pop
add
mov
in
mov
add
jnp
adc
add
(bad)
imul
jmp
inc
add
cmp
mov
loope
add
cld
shl
xor
or
les
les
add
mov
sbb
stos
pop
mov
or
add
les
xchg
add
lds
les
pop
jl
pop
lods
lds
add
cld
scas
inc
loopne
inc
sub
lods
lds
mov
sti
lds
mov
rol
rol
adc
jl
(bad)
or
sbb
add
(bad)
or
fstp
dec
or
scas
jmp
mov
pusha
push
outs
jl
inc
imul
cli
add
fild
out
call
sbb
add
leave
mov
retf
retf
add
rol
or
jp
retf
add
jl
mov
push
pop
dec
retf
retf
test
mov
mov
int3
fmul
lahf
sub
lods
sbb
dec
pusha
enter
(bad)
mov
add
stos
int
in
lds
mov
mov
lods
retf
movs
sub
movs
dec
stos
adc
retf
enter
mov
sar
add
adc
pop
loopne
pop
pusha
add
retf
mov
shl
sbb
repnz
ja
mov
lock
mov
iret
out
pop
into
adc
inc
cmp
hlt
jl
sbb
hlt
or
mov
iret
out
push
push
ror
dec
into
jp
retf
push
lock
in
rcl
ror
push
cmc
or
cvtps2pi
xor
sbb
rcr
or
ds
sub
xchg
cmp
inc
(bad)
rcr
dec
lea
or
in
dec
ror
pop
into
push
sbb
push
dec
aam
int
inc
retf
jmp
add
stos
add
into
and
cmp
iret
add
and
mov
test
adc
adc
icebp
or
or
dec
shr
jl
sbb
(bad)
sub
ja
ror
repnz
int
(bad)
aad
dec
shl
(bad)
cld
jl
ds
in
mov
rcl
aad
(bad)
fdivr
cmp
es
sbb
rol
mov
pop
iret
and
fldln2
mov
dec
std
fdivr
fiadd
and
sbb
adc
mov
stos
(bad)
sbb
into
sbb
out
aad
jge
es
jmp
pushf
ficom
fsubr
fsub
fadd
lods
fnstenv
in
fdivr
sub
push
jge
jmp
iret
push
pusha
fbld
in
iret
add
push
outs
vminss
outs
or
mov
fild
(bad)
loopne
(bad)
in
retf
(bad)
jl
adc
lods
lea
mov
or
add
xor
int
sub
and
stos
fistp
cld
ins
xlat
cmp
loopne
or
gs
sbb
add
xor
in
into
in
pushf
xlat
ret
pop
pop
fadd
std
xlat
mov
in
mov
gs
push
out
add
in
push
out
lods
fidiv
fsub
sahf
xlat
add
out
(bad)
jecxz
jle
inc
lods
fst
fiadd
in
std
rcl
in
ds
ins
rcr
loop
dec
ficomp
out
loope
pop
aam
(bad)
pop
dec
in
ins
loop
(bad)
(bad)
sar
push
fild
add
pop
fmul
fidiv
fcomp
fnstenv
dec
loopne
sbb
mov
ficom
lock
(bad)
out
sbb
mov
loop
push
loope
out
retf
xor
test
fdiv
jmp
sbb
or
add
fist
outs
add
jle
sub
adc
fcom
out
push
in
dec
aad
int
sub
cmp
loope
ds
mov
xchg
rcr
es
in
stos
pop
out
ds
sub
in
js
jecxz
fild
out
aam
sahf
out
xchg
pop
(bad)
(bad)
std
lock
jl
pop
dec
in
xchg
cs
inc
inc
stos
adc
lock
jmp
dec
stos
push
shr
jle
repnz
add
pusha
out
dec
xlat
xchg
mov
add
lods
out
movs
cs
fld
xor
hlt
pushf
lods
lock
iret
out
xchg
push
fisttp
jmp
fst
es
lock
fld
add
out
in
mov
cmc
loope
fdivp
mov
fmulp
jmp
mov
push
jge
out
xlat
lock
out
jge
inc
sub
adc
fdivr
sub
test
fsub
scas
fdivr
cs
sub
in
push
fucomip
mov
xchg
sub
es
clc
ss
jmp
pop
cmc
add
add
mov
in
(bad)
push
out
mul
dec
jmp
sub
stos
sub
add
rep
(bad)
cli
dec
pmaddwd
dec
jmp
xlat
(bad)
sub
inc
das
jecxz
pop
out
inc
dec
in
mov
cli
nop
psllw
(bad)
clc
idiv
in
add
dec
mov
mov
shr
sti
xor
loop
outs
in
fisttp
fnstsw
jmp
ficomp
sti
mov
icebp
jmp
fild
stos
cmp
repz
retf
(bad)
push
das
out
scas
in
repnz
jmp
and
arpl
jne
mov
imul
add
xor
push
sbb
mov
js
jns
stos
sub
sbb
test
clc
push
fcomp
add
sbb
mov
imul
mov
stc
or
sbb
mov
and
imul
stos
sbb
mov
int
imul
pop
in
mov
mov
mov
test
loop
dec
sar
pop
xchg
xor
les
sub
mov
out
push
test
cmps
cmp
rol
lock
aad
mov
and
cmps
scas
popa
dec
jnp
outs
cmc
mov
dec
xlat
and
arpl
sub
shl
xchg
popf
sub
mul
pop
test
leave
ins
push
fsub
dec
inc
inc
gs
pop
mov
mov
jne
out
shr
push
cld
sub
es
outs
lds
mov
dec
mov
test
sub
pop
sbb
or
push
and
out
add
jno
fs
jge
or
or
mov
or
gs
pop
stc
push
loope
nop
and
or
adc
in
push
xchg
call
cmp
retf
retf
xchg
gs
call
add
push
inc
xchg
jmp
pop
movs
popf
jnp
rcl
pushf
sbb
xor
loopne
mov
add
(bad)
lahf
jnp
leave
adc
add
xor
test
push
adc
cmp
ja
cmp
and
mov
lods
clc
and
fisubr
icebp
xchg
push
fs
cmps
pop
and
bound
lds
(bad)
cs
(bad)
push
pop
mov
and
cwde
pop
pop
mov
mov
add
sub
rcr
pop
push
inc
xchg
gs
sub
ret
nop
xor
sub
dec
ja
es
lea
xor
pop
stc
sbb
jno
sub
shl
ret
xchg
pop
or
sbb
test
test
pop
jnp
or
popf
sub
cmps
cmp
push
jns
mov
inc
inc
or
pop
stc
mov
jne
jp
addr16
in
pop
adc
mov
cmps
and
xor
cli
pop
push
sub
xchg
popa
adc
jo
ins
mov
push
mov
cmps
retf
sbb
mov
dec
adc
mov
ins
mov
mov
mov
retf
pop
outs
or
mov
daa
inc
lods
fcom
or
xchg
and
mov
jmp
test
inc
adc
sar
dec
push
daa
or
and
cmp
ret
mov
mov
cwde
jp
loop
test
push
xchg
pop
sub
cmp
xchg
(bad)
mov
test
mov
mov
inc
or
jl
sti
jae
push
test
ins
rcr
(bad)
daa
mov
es
leave
fadd
jae
ins
jo
daa
retf
leave
pop
cmp
cmp
fadd
mov
xchg
stc
dec
mov
push
sub
mov
mov
loopne
xchg
sub
cli
cmp
call
cld
clc
call
aad
push
scas
scas
loop
cmp
cli
call
adc
pop
cs
pop
(bad)
cmps
push
push
fstp
xchg
clc
jecxz
xor
inc
push
sbb
cmps
dec
xchg
je
add
push
xor
xchg
pop
mov
js
popf
jnp
mov
or
stc
ret
paddd
outs
loope
adc
hlt
cmps
outs
cs
loop
fcom
out
inc
jmp
pop
add
cmp
xchg
dec
jl
push
and
in
daa
add
jp
lahf
repnz
mov
xchg
out
jno
sbb
lea
add
mov
fld
sbb
in
test
dec
push
and
les
jp
lods
jl
stos
popa
add
mov
aam
ror
repnz
ds
into
test
js
pop
fld
loop
test
sti
and
imul
xor
addr16
fabs
add
dec
pop
mov
and
pushf
call
jge
xor
or
mov
and
mov
popa
mov
xchg
cmp
das
rol
test
outs
dec
mov
pop
jl
add
mov
ins
lock
mov
loope
daa
cmp
adc
add
movs
and
outs
xchg
nop
adc
or
adc
fisub
ins
push
or
or
(bad)
and
mov
pop
repnz
imul
mov
mov
push
or
sbb
push
js
adc
das
test
js
aam
cs
or
mov
adc
inc
leave
dec
je
adc
outs
test
pop
push
push
fwait
fs
popf
out
cdq
cmp
cmc
xchg
xchg
mov
in
and
rcr
imul
or
push
loope
xor
or
outs
sub
inc
dec
xchg
mov
dec
cmp
mov
lea
pop
sub
lds
jbe
fs
pop
adc
xchg
imul
pop
push
pop
ficom
call
mov
icebp
shl
call
test
(bad)
leave
rcr
adc
repnz
adc
xchg
js
mov
push
iret
or
das
test
dec
mov
add
fld
movs
stos
xor
fcmove
xchg
xchg
mov
sbb
test
es
jo
mov
mov
xlat
(bad)
(bad)
cmc
cmps
fst
call
sbb
mov
sub
iret
pop
scas
shl
mov
pop
xlat
shl
adc
sub
retf
push
adc
js
cmps
add
sub
loope
adc
mov
fxch
outs
jbe
daa
jne
bound
adc
out
aam
or
mov
jne
mov
repz
shr
pop
dec
push
add
mov
push
jo
mov
gs
ror
mov
xchg
mov
mov
ins
in
fs
xlat
push
inc
js
imul
add
loopne
scas
sbb
jo
in
pop
aaa
fadd
or
add
push
push
xor
sti
push
add
sbb
or
stos
adc
stos
(bad)
cmp
loopne
add
and
adc
jno
int
add
and
add
add
(bad)
fsub
sbb
add
sub
jge
sti
push
cmps
inc
js
hlt
inc
addr16
mov
aaa
xchg
mov
jno
cs
arpl
lds
shl
or
add
loop
call
cwde
jmp
aaa
int
lds
sub
jns
sub
add
sub
leave
jae
test
mov
jns
xchg
sub
rcl
sub
xrelease
sbb
imul
int
mov
add
rcl
xor
pop
sbb
or
add
mov
mov
mov
stos
or
dec
jp
lahf
pop
lock
pushf
pop
cmp
adc
aaa
add
fcmovnu
push
jae
iret
or
(bad)
fnstenv
outs
dec
cmp
push
mov
ss
dec
imul
jno
inc
je
out
outs
imul
fcmove
es
sbb
mov
das
nop
outs
cmp
(bad)
in
test
(bad)
sbb
mov
mov
mov
ja
inc
mov
loopne
xchg
add
into
jb
mov
out
cmps
clc
mov
test
loop
cmp
pushf
pop
fimul
cmp
mov
popa
sub
ins
push
addr16
out
xchg
inc
(bad)
and
add
popa
ror
not
or
and
fsub
or
cmp
mov
std
mov
jne
pop
or
push
jns
iret
fidiv
ret
std
add
loopne
imul
add
js
mov
cld
cs
dec
ins
loope
jns
mov
ja
loop
cs
mov
mov
lods
adc
loope
xor
shl
jle
sub
mov
or
inc
jl
fldcw
ret
icebp
mov
jmp
out
jbe
bound
rol
xchg
push
cli
dec
jmp
movs
cld
pop
(bad)
push
(bad)
sbb
test
not
pop
jle
xchg
mov
ret
call
iret
(bad)
clc
ror
test
mov
retf
js
test
and
jb
js
idiv
sub
sub
mov
mov
add
lds
adc
jge
out
or
sub
retf
jae
add
mov
cmp
xor
cmp
xor
clc
ja
or
add
cmp
dec
movs
arpl
inc
or
pop
loopne
repnz
jg
call
(bad)
and
js
xchg
out
mov
ja
daa
ja
call
loope
add
push
sar
fdiv
sbb
jl
pop
jle
fdivr
aaa
js
inc
xor
mov
xchg
push
dec
pop
test
and
lds
xchg
jg
cmps
add
add
add
dec
mov
xor
(bad)
outs
add
add
add
lock
(bad)
js
call
bound
test
add
add
push
push
jo
dec
test
push
pop
push
adc
mov
adc
or
mov
fmul
rol
mov
fmul
(bad)
fst
xchg
push
add
mov
jbe
inc
mov
pusha
mov
ja
cmp
test
jg
jl
sbb
push
and
clc
(bad)
jb
dec
ja
or
jg
or
add
mov
mov
rol
inc
xchg
xchg
jns
pop
pop
mov
fnstenv
js
lahf
mov
iret
pop
test
ja
js
mov
lea
sub
test
sub
test
mov
sbb
and
and
push
xchg
fmul
nop
xchg
sahf
cwde
add
js
inc
dec
lea
mov
xchg
data16
pop
push
add
dec
mov
jmp
dec
and
add
adc
sub
add
xchg
xor
xchg
mov
add
(bad)
sbb
sbb
cmp
jg
xchg
and
xchg
jecxz
add
sbb
xchg
dec
cdq
xchg
push
xchg
cs
xchg
ds
dec
cmp
dec
mov
leave
xchg
dec
mov
mov
xchg
test
xchg
xchg
dec
imul
fwait
jno
call
sbb
pop
add
jp
imul
xchg
jb
nop
outs
stc
jg
js
das
(bad)
mov
mov
add
add
push
cdq
xchg
es
in
xchg
xchg
mov
rcr
pushf
or
pop
mov
xchg
mov
mov
add
popf
ret
mov
lock
cwde
je
mov
cmp
neg
fadd
test
push
cmp
pusha
xor
adc
push
stc
sahf
or
pop
ins
clc
test
xchg
mov
xchg
jae
xchg
(bad)
adc
test
repnz
fwait
pop
fstp
sbb
sub
push
dec
mov
mov
imul
dec
xchg
cmp
cmp
pushf
xor
xchg
cmp
pop
mov
out
add
cwde
push
sar
xchg
or
mov
outs
jmp
add
xchg
add
add
cwde
iret
pop
mov
adc
outs
mov
leave
jnp
mov
mov
rcr
sbb
daa
dec
xchg
jg
xchg
inc
sar
lock
aam
cmps
cmp
je
cwde
or
lahf
dec
call
jb
ret
mov
cli
stos
aad
add
pop
cdq
cmp
ins
jmp
cwde
dec
fisub
mov
dec
xchg
mov
xchg
inc
fldcw
xchg
popf
leave
cwde
(bad)
mov
or
cli
xchg
mov
cmps
scas
dec
fwait
aas
sbb
mov
dec
fwait
icebp
or
cli
sahf
xlat
fsin
xchg
daa
sub
cmp
jmp
sahf
test
push
jmp
cdq
repz
add
sahf
(bad)
dec
call
push
ficom
or
mov
nop
xchg
ins
clc
lahf
xlat
sub
or
adc
scas
popf
sbb
stc
mov
lods
push
and
jp
inc
imul
scas
sbb
scas
pop
mov
ss
movs
(bad)
imul
xchg
adc
fwait
adc
mov
pop
xchg
dec
sbb
sub
pusha
mov
or
mov
imul
add
les
cmps
add
popf
pusha
cli
lahf
arpl
sbb
cmp
pop
mov
dec
mov
retf
(bad)
jo
dec
mov
sbb
shr
xchg
xlat
stc
scas
(bad)
cli
scas
xor
retf
dec
pop
mov
sub
lods
mov
mov
push
test
mov
pop
mov
jmp
aas
cmp
daa
xor
stos
mov
mov
mov
inc
cmp
pop
stos
sub
nop
push
pop
mov
fistp
mov
mov
loopne
pushf
retf
mov
sti
mov
stc
mov
jmp
(bad)
stos
mov
sbb
(bad)
or
fwait
xchg
sti
sub
loopne
movs
jmp
ins
fwait
mov
mov
retf
shl
data16
ret
fwait
imul
test
pop
xchg
sub
mov
stos
rcl
dec
push
mov
or
mov
cld
xchg
(bad)
stos
add
pop
and
dec
mov
sbb
pop
cdq
inc
mov
daa
nop
add
and
popf
fs
pop
jmp
retf
sbb
sub
sub
dec
mov
pop
sbb
inc
jns
or
(bad)
ds
mov
(bad)
jnp
(bad)
pop
or
mov
dec
cmp
add
ror
cdq
leave
sar
les
add
mov
imul
add
stos
mov
mov
xchg
in
add
xchg
std
mov
mov
rcl
scas
retf
lods
mov
dec
mov
mov
mov
leave
cmps
dec
rcl
int3
in
int3
ret
and
loope
mov
jl
sbb
mov
rol
pusha
mov
sub
jmp
mov
retf
pop
mov
dec
mov
sub
imul
lods
enter
or
sub
xchg
lods
jl
call
ror
pop
leave
sub
in
mov
sub
dec
ins
int
popf
xchg
scas
pushf
retf
aam
shl
pop
mov
fadd
cmp
out
into
int
add
fmul
mov
call
sub
popa
pushf
shl
int3
cld
(bad)
hlt
cmp
add
cmp
sbb
retf
pop
xchg
loop
aad
int
hlt
or
push
inc
add
add
mov
scas
adc
aad
push
add
into
inc
int3
mov
add
mov
xlat
push
in
lds
shl
(bad)
aam
xchg
repnz
addr16
mov
pop
les
retf
int
shl
ds
push
call
pushf
mov
clc
dec
int3
lock
stos
(bad)
fsub
retf
mov
call
mov
sbb
adc
rcl
fmul
push
dec
rcl
std
fsub
shr
and
into
dec
sub
sbb
fst
lds
lods
(bad)
inc
cli
test
rcr
shl
int
frstor
aad
pop
(bad)
sbb
pusha
(bad)
cld
int
mov
jecxz
sar
shr
fstp
sbb
call
aad
ins
(bad)
jge
inc
sbb
mov
(bad)
push
shl
xlat
sbb
loopne
popf
(bad)
loopne
mov
lods
ficom
rcr
lods
loope
popf
fistp
dec
mov
dec
mov
pop
xchg
or
ds
or
sbb
loop
push
fld
cmps
mov
(bad)
(bad)
mov
fcmovnbe
mov
push
ds
dec
rcl
into
push
loop
mov
retf
adc
mov
fstp
scas
fidiv
mov
fdiv
into
loopne
cmp
imul
aas
mov
dec
mov
aaa
mov
dec
into
(bad)
or
mov
in
push
in
(bad)
jecxz
out
rcr
pop
fistp
sbb
mov
outs
mov
lods
lods
fisub
fiadd
(bad)
cmp
jl
in
pop
fstp
fucomi
pop
shr
pop
loopne
push
in
dec
jmp
and
call
outs
jmp
lods
jmp
xchg
outs
loop
fmul
add
or
nop
aad
fucom
out
jmp
fsubp
call
pop
sar
retf
mov
add
fbld
pop
jmp
into
(bad)
push
loop
push
out
jge
retf
jae
fidivr
ds
fstp
aam
out
push
out
mov
fild
fisubr
in
ds
retf
scas
fisubr
lock
jmp
sub
cs
xchg
scas
(bad)
dec
out
stos
pop
jmp
dec
dec
jmp
push
(bad)
jmp
push
out
int
mov
out
mov
in
call
jle
mov
jmp
push
loop
loopne
call
repnz
xor
movs
ds
ror
add
fnstcw
add
jmp
pop
jl
cmp
hlt
pop
xchg
xor
sbb
jecxz
lods
jecxz
in
dec
aam
pop
repnz
hlt
push
cmc
(bad)
or
imul
xor
and
cs
out
push
outs
icebp
fnstcw
cs
hlt
and
mov
outs
test
repz
repz
mov
mov
clc
stos
int
outs
dec
in
sub
pop
repnz
and
cmp
mov
neg
push
sti
or
pop
cs
jo
sub
xchg
push
out
outs
jg
mov
out
lock
aas
dec
cld
leave
or
jnp
test
icebp
push
cmp
jae
hlt
mov
out
push
(bad)
cdq
aas
std
ror
fld
aaa
into
div
std
push
clc
dec
out
cld
cwde
(bad)
cmp
(bad)
loop
cmc
loope
jmp
pop
invd
add
sbb
add
sbb
mov
test
mov
mov
lea
fwait
sahf
call
stos
stos
call
xchg
lahf
mov
arpl
int3
xchg
xchg
rcr
mov
fmul
leave
add
mov
fisttp
push
into
sbb
cdq
mov
push
les
in
adc
adc
test
add
imul
fidivr
retf
push
jo
scas
cmp
adc
(bad)
or
enter
or
adc
push
adc
or
cmp
pop
xchg
fiadd
aaa
jno
pop
fmul
out
push
in
loope
xchg
mov
in
push
repz
dec
pop
rcr
xor
arpl
lods
jb
scas
mov
mov
sub
adc
xchg
xchg
add
ss
push
mov
push
mov
test
adc
and
xchg
mov
pushf
mov
fisttp
popa
and
push
sub
cmps
pop
cmps
cmp
cs
enter
mov
mov
push
sahf
mov
dec
ins
xchg
jmp
dec
test
jmp
jnp
or
jbe
push
repnz
(bad)
jns
xor
mov
cmp
and
dec
jbe
cmc
push
mov
jno
cmps
dec
cmp
js
fimul
jge
call
mov
dec
mov
pop
push
push
xor
and
adc
pusha
outs
clc
push
sbb
lea
pop
inc
out
(bad)
fnstsw
pop
cmp
and
add
test
cmp
and
(bad)
xchg
fild
lds
cmc
xchg
cmp
cmp
dec
mov
mov
popf
jno
test
outs
xor
sbb
push
pop
pop
fiadd
ret
and
into
adc
inc
stos
pop
loopne
nop
adc
rol
cld
mov
jge
cli
mov
dec
push
jno
mov
aad
cdq
imul
jo
ret
fs
stos
test
test
ret
pop
sub
mov
cmp
inc
cmp
popa
call
cmps
pop
mov
mov
repnz
loope
add
jp
mov
mov
pop
popf
pop
dec
mov
jae
ds
popa
mov
loop
rcl
hlt
add
adc
push
add
dec
dec
lods
adc
fist
sub
ins
mov
adc
ds
sti
xor
les
or
ror
mov
dec
cmp
lods
adc
ror
ret
scas
mov
mov
pop
fcomp
mov
push
sbb
sar
imul
xor
loopne
pop
cs
imul
jmp
sub
adc
(bad)
cwde
imul
push
fwait
lock
add
dec
jl
sbb
sbb
xor
or
fmul
pop
cmp
push
inc
xor
popa
add
sbb
jbe
xor
shl
fnstenv
jo
lods
ss
cli
(bad)
ffree
test
xchg
sub
ins
ror
and
fldcw
outs
fld
push
repz
cwde
dec
in
stos
pusha
dec
ret
adc
aam
mov
push
and
cmp
daa
and
je
scas
sub
loopne
adc
lods
js
enter
xor
or
mov
mov
ss
cwde
fistp
out
ja
cmps
pop
(bad)
rol
hlt
sar
jbe
mov
out
stc
or
inc
pop
mov
jg
jmp
stos
(bad)
mov
iret
jnp
cmp
adc
fsubr
iret
jg
cli
loop
(bad)
mov
mov
cld
in
pop
mov
or
jbe
or
div
retf
push
or
inc
or
iret
or
jo
adc
pop
mov
(bad)
mov
inc
pop
inc
and
ficomp
and
loopne
add
call
dec
adc
adc
and
sbb
inc
mov
add
imul
inc
add
push
push
xor
retf
pushf
inc
mov
fst
sub
xor
clc
lds
jle
mov
inc
adc
jnp
push
inc
aad
xchg
xchg
inc
arpl
cmp
sub
aad
push
out
(bad)
mov
sub
and
out
adc
mov
mov
dec
mov
mov
cld
push
xchg
leave
inc
add
sbb
inc
cmp
adc
shl
add
enter
fs
mov
xor
mov
add
mov
mov
lds
data16
xor
mov
inc
repnz
mov
cmp
outs
repz
dec
push
(bad)
xchg
pushf
movs
inc
out
fwait
mov
popf
std
ret
out
fistp
sahf
clc
je
cmp
leave
iret
jle
jae
call
es
mov
out
xor
pop
dec
retf
push
sbb
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
xor
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
lea
pop
div
aaa
retf
fxch
rcl
in
push
jo
push
sbb
push
stos
mov
sub
daa
in
inc
or
adc
push
ror
ss
cmps
mov
add
stos
ffree
push
dec
sti
pop
shr
inc
mov
and
pop
fimul
mov
jo
push
pop
retf
fcmovu
xchg
mov
pop
ins
jno
stos
aad
data16
mov
inc
sub
ffree
push
mov
jne
(bad)
xchg
push
mov
xchg
stos
add
loop
mov
dec
sub
xchg
aaa
mov
cmp
pop
or
push
add
pusha
stc
ss
add
sub
adc
data16
bnd
outs
mov
or
loope
adc
push
pop
sub
mov
test
mov
(bad)
clc
aad
jbe
lods
aad
xchg
mov
test
popa
or
js
and
xor
fcomip
(bad)
xor
fs
push
or
stos
xchg
pop
jnp
stc
jbe
leave
inc
jb
daa
mov
or
mov
xchg
movs
cmp
sub
retf
push
push
sub
xor
data16
xchg
dec
add
sub
adc
mov
pushf
iret
lods
adc
jno
imul
add
add
and
test
inc
add
add
movs
mov
lds
xor
pop
cli
mov
cmps
ret
in
in
sub
jmp
and
add
pop
fstp
aam
mov
data16
jnp
test
cmp
int
(bad)
hlt
xchg
dec
imul
or
adc
jecxz
inc
loopne
ret
pop
push
addr16
sbb
adc
lock
test
(bad)
mov
cmc
mov
sti
pop
int3
pop
or
fsubr
(bad)
fcmovne
add
std
pop
add
xchg
mov
adc
loope
lahf
pop
shl
push
repnz
mov
mov
push
inc
cmp
sar
mov
add
xchg
rcr
xlat
test
scas
outs
mov
test
sub
xor
mov
repnz
mov
add
loope
stc
in
js
mov
mov
imul
mov
push
mov
adc
cmp
push
or
cdq
outs
mov
adc
mov
lods
cmp
stc
fist
cmp
cmps
sti
jmp
pop
scas
adc
gs
jge
sbb
jne
std
cmp
icebp
jmp
mov
mov
out
fmul
call
sub
popf
iret
jbe
aam
cmp
mov
imul
in
mov
sub
cmp
xor
outs
loope
mov
ror
mov
inc
dec
ficom
xlat
(bad)
xor
sub
jae
sub
or
dec
cwde
push
jle
popf
add
ja
xor
pop
cmc
sbb
or
in
ret
aam
mov
gs
aaa
js
ja
pop
ret
aas
mov
adc
imul
push
(bad)
arpl
jb
pop
jl
jbe
mov
push
add
mov
add
jg
push
cmp
add
outs
test
(bad)
ja
leave
addr16
xchg
and
in
inc
popa
(bad)
aad
hlt
imul
cmp
inc
jl
out
mov
icebp
aaa
jo
addr16
lds
mov
push
push
jo
cmp
add
and
pop
pop
je
out
scas
test
fdiv
push
jp
mov
popa
jbe
gs
jb
xor
pop
sub
jge
cmps
add
mov
push
adc
xchg
mov
dec
clc
inc
xchg
fs
push
push
cmp
daa
je
data16
ja
push
xchg
push
add
jae
data16
pop
jno
fdiv
cmps
add
pop
push
push
popa
mov
jb
mov
(bad)
js
xchg
or
dec
jbe
jne
in
(bad)
pop
xor
scas
cwde
jp
push
outs
inc
push
test
inc
mov
aaa
sub
mov
push
xchg
cmp
addr16
add
cmps
js
cmps
je
enter
data16
jno
ins
rcr
outs
nop
(bad)
test
data16
push
jl
mov
imul
fsubr
jle
gs
(bad)
jb
pusha
adc
jp
ja
dec
js
and
cmp
(bad)
int3
call
fistp
pop
iret
jbe
in
(bad)
jae
test
cmp
jg
aaa
addr16
adc
sbb
ficomp
pop
xor
pushf
sbb
and
mov
(bad)
cmp
mov
dec
push
mov
xlat
gs
add
lds
xchg
xchg
loopne
jge
pop
test
aaa
jl
leave
jns
out
outs
mov
stos
push
pop
retf
js
jno
pop
jo
mov
lods
add
mov
imul
mov
adc
sbb
mov
lea
int3
xchg
jno
leave
outs
mov
mov
jg
push
sub
add
jg
inc
outs
ret
cwde
jb
xchg
push
pusha
sbb
outs
std
(bad)
or
movs
test
(bad)
int3
test
test
jb
pop
sti
ja
shl
or
mov
pop
sar
pop
xchg
and
rol
xor
(bad)
outs
jmp
pop
(bad)
jo
ss
or
call
(bad)
sbb
xchg
push
xchg
pop
jp
fdiv
and
pop
xchg
push
rcr
xchg
push
data16
es
jo
mov
jbe
jne
loopne
arpl
imul
cwde
sub
or
or
lahf
cmp
out
popa
sub
pushf
mov
add
mov
or
adc
xor
js
push
pop
mov
push
xor
or
data16
dec
sbb
aaa
xchg
xchg
lds
push
xchg
fist
inc
and
test
cmp
sub
bound
mov
imul
mov
ins
cwde
push
vpshab
jbe
or
data16
jbe
xor
cmp
push
inc
mov
jg
mov
push
push
add
push
outs
mov
xor
add
movs
push
clc
push
mov
push
lea
pop
push
cmps
ficom
xchg
cmps
jae
push
xchg
cmps
mov
cmps
xchg
inc
add
je
imul
jge
test
sbb
pop
test
call
test
sbb
pop
stos
cmps
jp
test
stos
stos
mov
add
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
lods
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
and
jmp
fdivr
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
arpl
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
cmp
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
cli
add
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
push
and
scas
into
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sti
add
jp
dec
lock
or
add
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
pusha
mov
fwait
mov
cli
lods
out
sub
mov
jmp
sti
call
mov
add
jnp
psubd
mov
or
fisub
mov
bound
cmp
xor
sub
sbb
pop
dec
add
jo
sub
cmc
cli
popf
mov
inc
mov
xchg
sub
sti
mov
cmp
mov
jmp
popf
or
sbb
retf
mov
call
mov
pop
mov
imul
add
add
sbb
sbb
retf
mov
mov
push
rol
or
(bad)
or
xor
mov
loope
mov
sbb
stos
mov
cmp
nop
mov
fild
scas
pop
mov
retf
mov
stos
mov
cmp
test
add
sar
mov
lock
mov
sar
sub
call
add
sti
mov
stos
mov
(bad)
xlat
mov
dec
rcr
push
adc
push
add
jl
aaa
or
xor
cmp
sub
cli
retf
mov
cmp
jo
dec
ins
ret
aas
sbb
das
cmp
push
fadd
dec
or
xor
les
ret
out
call
lds
add
push
jl
add
cld
add
and
adc
(bad)
xor
out
push
jbe
(bad)
or
add
add
nop
lods
push
ret
gs
xor
or
push
ins
add
enter
pop
xor
loopne
cmp
mov
push
add
mov
push
add
leave
cli
fiadd
cmp
or
leave
sahf
cld
enter
xchg
cmp
dec
and
lods
mov
push
or
push
jl
dec
ins
leave
lods
jmp
test
mov
jl
sar
inc
rol
xor
mov
add
pushf
retf
int
ret
int3
mov
retf
(bad)
lahf
sub
or
int
fadd
xor
addr16
xchg
pop
leave
xchg
dec
stos
movups
mov
leave
loopne
xchg
int
lock
pusha
add
retf
iret
out
into
call
iret
mov
into
out
add
iret
xor
or
scas
jmp
rol
mov
shl
or
hlt
lods
xchg
iret
mov
rcr
pop
rcl
mov
out
cwde
iret
add
pop
rcl
jge
(bad)
sub
scas
cmp
xor
sar
sar
or
mov
iret
es
std
sbb
inc
sbb
in
into
dec
lods
shl
aad
std
shl
dec
rol
rol
iret
xor
daa
popf
add
lods
retf
xor
or
addr16
into
pop
int
lods
ins
add
aam
jge
dec
xor
xlat
dec
mov
jmp
into
jns
aam
fcmovbe
jmp
fsubr
mov
dec
jge
adc
add
cli
pushf
(bad)
sub
pop
fcom
(bad)
adc
ror
fdivr
sar
aam
mov
pop
in
mov
or
mov
ficomp
fstp
test
fdiv
shr
fld
loopne
add
add
fsub
mov
mov
fcomp
add
(bad)
jp
fisttp
mov
fdivr
into
ret
lods
fimul
test
xlat
test
ror
(bad)
fcomp
int
pop
or
xchg
int3
(bad)
popf
retf
dec
(bad)
fdivr
rcr
and
push
ins
iret
test
ficom
(bad)
and
and
sti
mov
rep
xlat
repz
nop
jge
jnp
(bad)
lods
xlat
mov
xlat
mov
loope
dec
fiadd
aam
in
fnsave
aam
int
arpl
mov
jge
enter
popf
loopne
pop
leave
dec
xor
pop
xor
into
fucomi
in
fidivr
jecxz
popf
loope
outs
fstp
in
(bad)
jecxz
std
rol
loop
mov
repnz
loopne
pop
in
sbb
popa
cs
loop
outs
(bad)
out
dec
sar
loope
std
fisttp
push
popf
out
(bad)
shr
(bad)
loop
pop
fucomip
ins
shl
pop
fcom
int
cmp
fist
fist
(bad)
into
add
sar
jmp
outs
aad
dec
call
pop
out
mov
test
add
jge
outs
push
jmp
cmp
and
loopne
scas
jmp
sub
xchg
fsubrp
push
aad
out
in
or
jb
(bad)
out
popf
loopne
shr
or
add
fdivr
fucom
inc
loopne
adc
jle
sbb
call
in
shr
cmp
sahf
scas
loope
int3
add
fisttp
in
out
pop
leave
mov
fldenv
jecxz
into
push
push
in
jmp
jecxz
ficomp
out
jle
loope
fld
into
jmp
cs
cmp
std
cs
mov
stos
push
xor
out
in
lods
sbb
mov
add
ds
sub
sbb
stos
pop
xor
mov
add
cmp
lock
test
neg
mov
out
mov
(bad)
dec
aad
outs
out
aad
aad
lods
repz
outs
repz
retf
jecxz
jecxz
dec
call
cld
in
pusha
in
loop
jecxz
sbb
(bad)
into
retf
out
push
lock
pop
outs
out
daa
pop
in
jno
repz
cmp
mov
repnz
push
icebp
out
fbstp
call
daa
pop
rep
outs
jecxz
fcomip
dec
outs
sar
repnz
in
sahf
shl
test
mov
into
mul
push
jmp
mov
add
inc
in
iret
cmc
jecxz
icebp
add
cmc
sub
out
xchg
jg
aas
shl
enter
(bad)
stc
push
shl
push
repz
pop
jge
aam
loop
outs
jmp
pushf
(bad)
dec
mov
jne
in
dec
das
div
in
cmps
inc
(bad)
mov
test
out
leave
out
hlt
stc
or
push
pop
std
mov
cld
ins
(bad)
(bad)
scas
stc
loop
repz
mov
daa
pop
hlt
bound
icebp
jle
bswap
repnz
fcomip
pushf
(bad)
in
xchg
push
xchg
fcomip
in
ds
cmps
ds
mov
lods
out
in
dec
repz
jb
inc
fsub
enter
dec
fdiv
add
rol
js
dec
push
call
shl
push
push
dec
leave
enter
lock
je
cmp
dec
fimul
mov
fild
pop
mov
call
mov
mov
pop
lea
fsub
in
pop
jge
push
sahf
fcomp
jle
lods
leave
jl
mov
dec
dec
out
or
lea
sbb
adc
sbb
push
enter
pop
(bad)
xchg
lods
bound
sub
das
sub
inc
inc
xchg
inc
ins
jecxz
lods
or
jo
rcl
jne
push
or
retf
dec
das
sub
sbb
pop
outs
in
xchg
ss
mov
mov
sub
xchg
sub
xchg
aad
dec
dec
not
aad
sub
sub
inc
arpl
jl
sub
lods
xor
or
inc
dec
sub
movs
(bad)
jp
int3
push
loopne
popa
fldenv
inc
imul
dec
cmp
xchg
add
push
xor
mov
mov
dec
bound
push
imul
mov
scas
mov
popa
ret
dec
test
dec
adc
out
lock
lods
pop
movs
xor
mov
loopne
bound
sti
call
adc
dec
cmp
push
outs
sub
sahf
or
xchg
faddp
mov
cwde
cmp
sar
jg
push
pop
call
mov
out
cmp
xchg
pop
ret
or
lea
inc
push
dec
mov
add
push
mov
sbb
bound
adc
push
sahf
mov
mov
lahf
adc
xor
xor
and
cmps
sbb
sbb
push
icebp
pop
push
or
daa
or
imul
jo
push
arpl
dec
jnp
sub
in
dec
dec
xor
cmp
mov
cmc
push
and
push
pop
aas
neg
cmp
inc
shl
fwait
mov
adc
outs
(bad)
mov
enter
or
movs
add
out
jno
jno
sub
cdq
mov
leave
and
push
aas
jbe
int3
pop
xchg
mov
push
push
ret
lods
pop
dec
movs
pop
xchg
retf
mov
push
nop
sahf
test
test
adc
cmp
pop
cmp
out
popa
jl
cs
xchg
dec
sbb
mov
daa
mul
and
stos
jge
fwait
cmps
jbe
leave
xchg
and
shr
outs
or
js
dec
or
dec
push
push
sbb
adc
in
sbb
mov
popa
not
sub
sbb
addr16
mov
stos
mov
retf
stos
pop
repnz
sub
cli
mov
dec
jo
xchg
enter
jmp
stos
cmp
es
es
push
add
mov
sub
sub
in
xor
sti
sub
cmp
and
inc
cmps
add
cwde
fist
sbb
add
xor
push
aas
aad
popf
(bad)
jns
mov
sub
icebp
sub
sub
mov
cs
loop
mov
popa
scas
sbb
fstp
mov
mov
scas
lods
mov
sub
repz
dec
and
mov
xchg
adc
xor
aad
fnsave
jecxz
rcl
jmp
ret
cld
inc
add
aaa
rcr
cs
into
into
lods
cmp
stos
int
ja
retf
cld
add
lods
adc
xor
mov
aaa
icebp
xor
inc
jg
retf
outs
imul
and
mov
or
or
iret
push
outs
cmp
mov
inc
popf
in
push
(bad)
popf
sbb
sbb
ret
inc
les
mov
adc
and
mov
aas
dec
xor
hlt
or
cmp
mov
mov
mov
pop
hlt
xor
mov
test
and
ins
iret
jb
mov
mov
leave
add
int
test
stc
push
fild
inc
xchg
cmp
shl
push
mov
and
out
push
or
add
inc
aaa
clc
add
and
mov
iret
mov
adc
mov
cmp
jb
jg
in
sbb
fdiv
dec
mov
popa
cld
call
mov
repnz
jno
stos
(bad)
(bad)
xlat
cmp
js
test
xchg
and
add
repz
inc
or
sub
sahf
cmp
add
test
movs
adc
outs
jbe
dec
fistp
and
mov
popa
jmp
xchg
jp
cdq
lock
add
cwde
pusha
add
aas
pushf
jno
jl
ins
cmps
out
test
int3
mov
arpl
loopne
das
mov
movs
xor
xor
(bad)
retf
in
pop
fdivr
(bad)
or
ror
mov
xor
inc
cmps
daa
jl
inc
xor
push
pop
ror
sbb
pop
add
xchg
adc
and
jg
into
jbe
push
cdq
cmp
sub
cmp
jne
add
or
popa
inc
loope
retf
xchg
push
cmp
xor
cmps
iret
ins
ds
mov
call
xor
retf
mov
ds
xor
and
jmp
push
sub
pop
retf
lea
adc
or
add
xchg
mov
xchg
inc
cmp
(bad)
scas
jb
lods
adc
ret
(bad)
(bad)
aad
pusha
adc
rcr
mov
in
daa
push
inc
retf
mov
test
add
and
push
xchg
or
and
pop
test
retf
imul
dec
nop
cmps
adc
sbb
es
rol
push
push
xor
inc
fcmovb
mov
shl
push
mov
ret
jo
fdivrp
xchg
popf
imul
push
sub
jbe
mov
jmp
mov
lea
jne
cwde
push
dec
and
add
sub
stos
outs
pop
fisub
fsub
cmc
scas
push
cdq
inc
sub
add
ins
das
bound
add
sub
test
cmp
cwde
or
fadd
pop
adc
add
cmp
movs
mov
dec
mov
shr
inc
imul
jle
mov
popf
fwait
loope
outs
cmp
mov
inc
mov
sub
(bad)
cmp
scas
arpl
lods
dec
push
mov
mov
jmp
fcmovbe
inc
and
sbb
dec
sbb
imul
in
inc
ret
xor
mov
in
test
stos
xlat
out
je
dec
cwde
icebp
pop
mov
pop
add
test
into
ja
inc
adc
cdq
int3
jmp
dec
bound
pop
outs
inc
xchg
stos
inc
out
addr16
retf
sub
mov
mov
stc
int3
arpl
jecxz
sub
je
pushf
push
fiadd
test
in
into
and
cli
into
or
lods
in
les
mov
or
push
pop
lea
dec
mov
adc
ja
xor
imul
adc
in
mov
and
cli
retf
xor
sbb
(bad)
fidiv
and
(bad)
push
mov
addr16
retf
sti
aad
xor
imul
ds
sti
ins
imul
scas
adc
repz
jbe
shl
or
add
mov
cmp
ret
or
fadd
rol
xor
pop
cmp
push
ja
adc
scas
lock
jl
xchg
and
test
pop
xor
sbb
push
add
idiv
(bad)
fdiv
mov
add
inc
(bad)
mov
stos
aas
mov
push
xchg
outs
cmc
mov
jb
push
outs
js
(bad)
fdivp
stos
aas
mov
adc
add
sbb
inc
mov
xchg
or
sti
aam
out
das
mov
es
pop
jbe
sbb
xlat
pop
fcomi
mov
popf
jmp
sub
sub
fsub
outs
sub
cmp
lock
js
mov
imul
out
xchg
push
es
scas
jne
sub
push
test
popf
push
jo
cld
or
add
repnz
inc
mov
mov
loope
nop
inc
inc
mov
pop
pop
sti
inc
inc
sti
mul
sahf
cli
pop
mov
(bad)
mov
(bad)
jmp
daa
aas
adc
pop
xchg
sti
stc
sbb
ds
gs
xor
loope
xor
pusha
sub
dec
add
or
call
pop
add
xor
sbb
pop
add
pop
loopne
mov
jnp
idiv
mov
jle
xor
jnp
xchg
aaa
jae
xchg
addr16
pop
push
out
push
mov
add
nop
add
xchg
jle
aaa
jg
xlat
jns
xchg
pop
jbe
xchg
or
mov
je
cmp
push
sbb
sbb
jbe
mov
adc
popa
sbb
sub
cwde
add
push
dec
adc
sar
xchg
inc
mov
and
jbe
enter
mov
clc
je
mov
jge
je
sub
mov
mov
nop
or
add
add
adc
xlat
ja
adc
or
cmp
add
or
jg
call
mov
dec
cmp
jne
shl
pop
mov
call
xchg
pop
add
xor
jnp
cmp
out
test
xchg
mov
clc
add
js
or
push
nop
js
cmp
jl
mov
sub
jbe
pop
xchg
pop
cmp
add
mov
mov
mov
jne
jecxz
scas
adc
and
xchg
mov
rol
inc
mov
sbb
jg
adc
cwde
dec
add
in
pop
xchg
xchg
pop
xchg
inc
push
mov
mov
aaa
push
mov
test
daa
add
cmp
dec
je
(bad)
pop
mov
jae
lock
shl
inc
pop
push
ds
xchg
inc
test
jb
jbe
test
or
das
imul
xchg
mov
lea
xchg
and
xchg
cmp
jg
dec
mov
xchg
sbb
mov
lock
xchg
mov
adc
xor
pop
xchg
jno
sbb
jne
or
lock
outs
pop
call
pop
jmp
adc
pop
imul
xchg
icebp
mov
aaa
mov
cdq
mov
shr
mov
xchg
ins
mov
mov
leave
nop
sbb
cmp
call
or
xchg
lea
fwait
push
add
jo
cdq
jl
nop
jae
mov
jge
rol
xchg
push
xchg
test
leave
leave
jbe
imul
xchg
inc
or
add
outs
icebp
out
ret
xor
mov
xchg
rcr
push
pop
adc
inc
mov
call
js
xchg
mov
xchg
loop
call
sub
xchg
push
imul
cwde
fldcw
cs
addr16
xchg
or
out
ja
cmp
mov
mov
fcomp
dec
xchg
mov
sahf
das
mov
test
sbb
xchg
cdq
dec
call
fidivr
popf
(bad)
add
xchg
test
sub
add
adc
dec
fst
fnstenv
cli
push
daa
sub
add
ja
fstp
xchg
mov
call
icebp
cmp
cmp
cdq
xchg
and
mov
sbb
mov
push
cmp
js
pop
cmp
test
mov
jmp
add
mov
adc
add
dec
push
dec
mov
stc
nop
mov
lahf
and
mov
test
xchg
or
push
push
inc
mov
push
add
retf
cmp
mov
push
test
scas
cdq
cwde
sub
test
cmps
fmul
mov
sbb
add
xchg
pop
mov
stos
xchg
shr
inc
(bad)
nop
inc
pop
test
sub
fsub
add
nop
pusha
xchg
jbe
cdq
jmp
jp
lods
xchg
dec
sahf
inc
fld
test
sub
jg
or
pop
pusha
xchg
sbb
sbb
idiv
(bad)
mov
jo
ficomp
xchg
or
mov
cmps
mov
dec
dec
push
xchg
jne
mov
ficomp
cwde
je
lods
cmp
cwde
icebp
mov
mov
movs
xor
cmps
call
add
not
pop
cmps
lods
or
or
jmp
nop
movs
test
das
imul
mov
sbb
fwait
mov
mov
pop
je
dec
stos
pop
pop
mov
jmp
mov
stos
popa
inc
push
inc
pop
cmps
push
mov
pop
mov
jmp
mov
mov
sahf
rol
jbe
xchg
mov
cmps
(bad)
jmp
push
mov
mov
sbb
retf
mov
inc
sbb
dec
imul
mov
imul
test
fisub
sti
mov
or
jmp
cmps
sbb
imul
mov
mov
test
stos
leave
test
fmul
movs
fimul
jb
stos
out
retf
mov
xchg
and
stc
mov
sub
sbb
stc
push
adc
xchg
adc
mov
pop
movs
jnp
mov
imul
inc
pop
mov
ret
mov
push
int3
jmp
aad
add
imul
sbb
cdq
lods
fstp
shl
daa
add
cmp
pop
mov
jnp
fdivr
mov
leave
mov
mov
adc
jne
jl
bound
xchg
add
sub
test
mov
pop
movs
lock
ret
ret
mov
loopne
dec
sub
cmp
mov
adc
mov
mov
lods
imul
add
mov
sti
mov
pop
les
lds
scas
out
shl
pusha
jl
ror
xchg
pushf
cmp
fstp
sbb
pop
mov
xchg
xor
or
mov
stos
fwait
aad
leave
push
mov
call
dec
leave
add
adc
enter
pop
pushf
leave
movs
cmp
add
retf
xchg
dec
scas
or
mov
or
jbe
(bad)
cdq
pushf
mov
mov
pop
push
add
jns
jp
retf
xchg
jl
inc
fadd
cs
jno
les
add
adc
cmp
imul
mov
in
push
movs
stc
leave
arpl
cmp
mov
mov
mov
ret
outs
dec
(bad)
fs
enter
in
cmp
xor
add
mov
pushf
test
ins
retf
mov
int
sub
test
scas
(bad)
pushf
stos
daa
pushf
iret
rcr
pop
add
sub
jmp
sti
enter
xor
mov
rcr
add
or
cdq
sub
jecxz
sar
pop
xchg
push
jmp
retf
stos
dec
rol
leave
cdq
sbb
shr
xchg
or
dec
(bad)
push
in
add
retf
aam
cmp
ror
mov
aad
lods
lods
mov
scas
dec
(bad)
aad
cmp
pop
ins
leave
push
or
bound
jge
in
dec
aam
stos
(bad)
aad
sbb
xchg
sub
pop
pop
sar
mov
int3
aam
or
ins
dec
mov
jl
pusha
sub
or
retf
ins
scas
pop
sub
jno
mov
mov
mov
ror
into
xor
add
nop
leave
call
add
fsub
imul
imul
fstp
mov
mov
fst
shr
(bad)
shr
or
ret
or
fucomp
fidivr
in
retf
fld
sbb
les
rcr
shr
jl
add
inc
sub
ror
int
or
xor
xlat
(bad)
sbb
push
int
mov
into
dec
sbb
lods
ins
fsubp
lods
mov
sub
xor
test
fstp
bound
pushf
fdivr
fcom
(bad)
fsubrp
sbb
outs
cmp
inc
test
aaa
sbb
push
(bad)
fist
test
push
or
ficom
jbe
fsubr
(bad)
ret
sub
push
mov
push
(bad)
xlat
dec
(bad)
xlat
cdq
ins
in
jge
push
dec
fsub
into
loopne
sahf
fst
(bad)
and
into
fcmovne
fdivrp
(bad)
loope
popf
fdivr
lods
fild
(bad)
outs
fstp
test
cmp
push
lods
in
jl
outs
push
(bad)
fild
fdivr
dec
out
pop
in
(bad)
fimul
fild
(bad)
add
fbld
out
scas
fist
jecxz
std
out
out
loop
jle
test
fcmovnbe
pushf
add
add
loope
dec
ret
pop
push
int
push
in
jl
movs
jle
out
jmp
pushf
jecxz
(bad)
cmps
mov
ss
mov
push
(bad)
loope
popf
call
push
out
(bad)
fbld
ficomp
in
(bad)
sub
pushf
mov
sub
mov
ficom
push
fmul
cs
push
call
fsubrp
loopne
jmp
into
out
inc
into
shl
in
mov
jecxz
out
mov
pop
into
loope
sahf
out
cmc
jle
inc
(bad)
aad
out
pop
in
pop
mov
push
add
push
adc
or
rol
mov
push
ds
jo
sbb
in
ins
out
ds
xchg
cmps
sahf
test
push
xlat
adc
fsubr
inc
jge
add
jecxz
shl
into
loope
sahf
into
mov
loop
sbb
xor
out
xor
ss
rcr
hlt
xor
adc
cmp
repnz
adc
hlt
push
(bad)
dec
int
daa
iret
in
sbb
loop
dec
in
popa
outs
out
ds
icebp
push
(bad)
inc
(bad)
lock
in
out
repz
out
ret
xor
bound
call
jmp
push
pop
jecxz
dec
fcomp
ins
outs
hlt
out
in
sub
repz
and
or
mov
push
pop
repz
out
pop
push
pop
(bad)
aas
mov
push
xchg
outs
stc
fwait
pop
stc
xchg
scas
stc
pop
psrlq
jecxz
iret
les
xlat
inc
dec
cli
sub
clc
out
cli
cmps
cs
movs
outs
aad
int
movs
das
retf
repnz
dec
clc
lods
das
sti
test
stc
ss
icebp
add
fist
repz
outs
into
out
clc
jae
cld
imul
icebp
mov
clc
mov
neg
dec
hlt
mov
jmp
out
sti
cmp
faddp
outs
cli
scas
into
cmc
cwde
outs
stc
nop
outs
aad
iret
icebp
sbb
hlt
lock
sti
pop
push
mov
(bad)
or
pop
add
mov
mov
mov
mov
xchg
add
mov
mov
push
mov
mov
cmps
xchg
add
push
mov
xchg
movs
ret
mov
xchg
mov
xchg
rcr
test
movs
rcl
mov
ror
(bad)
mov
xchg
mov
fcomp
in
icebp
out
shl
mov
mov
lds
dec
in
je
fild
adc
adc
pop
cli
push
xor
xor
xchg
mov
aaa
data16
sub
leave
jmp
pop
(bad)
in
(bad)
fidiv
shl
push
jmp
mov
jg
or
pop
inc
mov
ficom
mov
mov
sub
xchg
adc
dec
inc
fisub
pop
ret
jp
inc
fst
push
sub
cmp
xor
scas
dec
cmc
rcl
xchg
mov
out
in
(bad)
adc
call
cmp
int
adc
test
mov
mov
sbb
sbb
scas
add
jae
pop
mov
(bad)
imul
aas
pop
sub
scas
in
push
rol
mov
xchg
jns
je
and
cmc
and
dec
and
pop
xchg
mov
int
sti
or
cmp
clc
int3
in
mov
loope
retf
sti
xor
sbb
push
in
fisttp
mov
mov
cmc
out
jp
aad
sbb
sbb
mov
mov
cmp
jge
cmp
pop
or
inc
jbe
jle
loop
rcr
xor
ja
mov
inc
xchg
jl
sbb
add
push
enter
clc
cmp
add
and
imul
lods
xchg
arpl
pop
inc
enter
cmp
cmp
jne
popf
mov
sbb
(bad)
mov
mov
daa
pop
ins
mov
cmps
cmp
xor
lds
add
icebp
adc
rol
add
mov
mov
call
sub
sub
movs
das
push
push
mov
lahf
in
jns
sub
adc
movups
(bad)
mov
cmps
mov
cwde
cmp
sbb
push
push
sub
xchg
add
xchg
jle
jmp
add
sbb
pop
stos
repz
pop
sub
stos
pop
dec
mov
leave
sbb
js
test
pinsrw
ins
mov
dec
mov
mov
cmp
scas
enter
xchg
imul
and
and
add
mov
adc
es
fadd
mov
add
(bad)
(bad)
daa
or
jb
es
sub
retf
and
pop
sbb
ret
adc
mov
out
int3
inc
xchg
in
adc
cmps
cmp
xchg
ds
or
mov
or
add
or
push
mov
dec
scas
lea
mov
stos
cli
jns
shl
fidiv
or
inc
xor
ss
ror
cmp
sbb
cwde
gs
jle
pop
dec
rcr
in
pushf
nop
cmp
adc
ins
pop
enter
mov
jns
pushf
add
mov
fdivr
mov
sbb
out
daa
(bad)
jle
fstp
lods
mov
add
pop
fmul
jnp
dec
sub
dec
aaa
fwait
repz
jmp
push
out
sub
and
and
ds
mov
ins
ret
in
call
or
lock
dec
jg
push
push
mov
fdivp
mov
neg
add
cli
out
iret
sbb
ins
or
push
mul
sti
test
pop
add
les
pop
cmp
and
lock
ja
in
(bad)
mov
jne
xor
cmovo
pop
aam
je
mov
mov
sub
jb
sub
hlt
pop
sub
xchg
or
data16
push
adc
js
push
adc
sbb
(bad)
enter
and
int3
pop
or
mov
sub
jae
adc
xchg
mov
arpl
pop
enter
stos
lea
cmp
add
sahf
dec
add
pop
push
cmc
mov
test
pusha
jmp
push
adc
in
dec
inc
push
in
and
sub
push
repnz
(bad)
sbb
sub
daa
inc
fld
or
sub
rol
xchg
stos
in
fs
dec
rcl
repz
sub
lods
in
jno
int3
bound
rol
xchg
dec
int3
push
cs
leave
je
xor
dec
dec
push
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
daa
inc
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
rcl
add
fldcw
and
jne
dec
rol
adc
jne
imul
dec
jecxz
pop
mov
js
dec
in
stos
add
aad
pop
dec
sbb
popf
rcr
test
test
push
enter
mov
xlat
int
mov
xchg
jmp
mov
push
fst
(bad)
mov
test
adc
or
mov
lods
inc
sub
cmps
cmc
or
(bad)
out
adc
mov
ins
add
sub
cdq
and
push
lds
and
mov
mov
out
cs
mov
lods
shr
sub
rol
movs
fadd
fsubrp
retf
adc
mov
fstp
mov
std
fistp
movzx
add
in
adc
push
mov
lahf
mov
mov
mov
adc
(bad)
mov
ret
jnp
sbb
mov
cmps
mov
(bad)
jnp
pop
push
cmp
dec
push
add
pushf
cmp
cmc
mov
pop
retf
mov
adc
add
ja
inc
add
mov
and
jbe
add
add
je
(bad)
push
int
call
mov
pop
sbb
or
lods
scas
(bad)
imul
push
(bad)
or
scas
pop
jae
add
fcomp
scas
inc
add
and
or
cmp
or
std
inc
cdq
mov
push
dec
add
add
xchg
daa
nop
pop
daa
imul
sbb
push
stos
dec
jo
dec
retf
dec
call
pop
imul
xor
fucomp
or
js
jno
test
pusha
out
not
fidivr
repz
pusha
or
fnstcw
or
mov
push
enter
addr16
or
icebp
mov
or
push
rol
(bad)
sub
rcr
ins
push
push
mov
add
cwde
xchg
fsub
(bad)
pop
and
loope
mov
ss
jmp
mov
mov
or
sbb
in
push
xlat
loope
adc
add
adc
scas
(bad)
ss
rol
and
xor
mov
fwait
aad
(bad)
mov
popf
jo
daa
sub
sbb
fsub
in
or
addr16
fstp
ins
std
out
mov
idiv
stos
retf
add
(bad)
repnz
jne
out
xchg
clc
pop
add
sbb
add
stos
(bad)
popa
or
or
cs
add
in
mov
ss
mov
sahf
mul
sbb
rol
push
arpl
pop
add
fsubr
xchg
pop
jns
das
mov
mov
mov
cmc
loope
retf
jg
rcl
ja
jne
push
outs
cdq
ret
inc
push
mov
and
mov
cmp
icebp
sbb
or
add
mov
jecxz
repz
pop
mov
loop
sub
leave
jg
(bad)
xchg
hlt
add
es
enter
je
aas
hlt
inc
cmps
jl
lods
mov
mul
jmp
cli
pop
jmp
(bad)
out
xchg
push
(bad)
out
jns
gs
(bad)
jnp
inc
ja
out
xchg
xchg
pop
xor
js
xor
jbe
add
jle
mov
mov
mov
jge
mov
lds
pop
jae
test
test
cmps
jp
add
cmp
add
push
pusha
jae
jl
xlat
or
push
sbb
aas
or
and
or
jb
sbb
inc
add
ss
push
pop
outs
fist
cmp
popa
or
test
imul
(bad)
out
icebp
inc
jl
cmps
test
test
jg
xchg
sub
imul
outs
or
or
mov
add
cwde
jp
enter
jg
pop
jno
test
inc
imul
ds
add
xchg
bound
pop
sub
add
mov
mov
imul
xchg
pusha
test
jle
jns
aaa
mov
pop
clc
push
add
daa
pop
ins
push
jns
xchg
xor
pusha
cmps
js
sub
mov
mov
imul
enter
(bad)
xchg
push
outs
xchg
jnp
xchg
mov
jl
jne
mov
ins
jbe
mov
out
pop
test
dec
inc
jp
xlat
mov
jp
xchg
pop
push
push
and
cmps
push
cmps
xchg
jp
mov
or
jp
pop
(bad)
addr16
pusha
jmp
push
mov
jns
xor
rol
test
daa
push
mov
daa
test
xchg
popa
(bad)
inc
enter
push
imul
sbb
in
dec
pop
pop
js
mov
imul
js
enter
jbe
push
jg
pop
pop
movs
aaa
jg
inc
add
xchg
out
hlt
out
and
imul
rol
mov
ins
fadd
mov
ja
inc
mov
mov
jne
dec
mov
scas
xchg
clc
jae
fadd
lds
xchg
or
push
outs
cld
fmul
enter
xchg
or
fadd
mov
fs
push
jp
cdq
ret
mov
ja
dec
add
dec
popa
mov
lea
clc
mov
pop
jnp
call
and
rcl
pop
aas
push
add
call
cmp
pop
repnz
sti
xchg
fwait
adc
dec
outs
cmps
cmp
gs
mov
(bad)
(bad)
mov
fwait
jmp
jbe
lock
adc
pushf
lock
push
aam
pop
test
imul
in
push
cmp
nop
cmp
or
and
test
movs
dec
jae
sbb
je
pop
ins
std
inc
lahf
div
push
sbb
lds
xchg
mov
push
dec
fs
push
xchg
pop
shr
xchg
push
gs
setbe
cwde
jb
push
imul
pop
dec
nop
pop
out
push
push
(bad)
bound
jl
lock
sbb
jae
mov
xchg
push
inc
sbb
jmp
push
inc
retf
adc
jbe
jmp
movs
pop
mov
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
jbe
push
add
or
add
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
mov
mov
xchg
xchg
ins
push
sub
sub
rcl
lods
stos
lods
sbb
sbb
jp
hlt
repnz
adc
or
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
scas
lods
test
inc
ds
mov
and
jmp
fdivr
cli
cld
fs
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
scas
lods
and
and
jle
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
mov
mov
xchg
xchg
aam
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
outs
je
cs
scas
mov
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
scas
mov
jle
cmp
inc
pushf
sahf
pushf
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
arpl
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
cmp
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
cli
add
stos
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
push
and
scas
into
stos
cmps
pop
mov
sar
fisttp
scas
inc
and
lods
jg
mov
fiadd
mov
mov
sti
add
jp
dec
lock
or
add
lods
sub
cmps
out
xchg
jb
test
call
mov
xor
pop
pusha
mov
fwait
mov
cli
lods
out
sub
mov
jmp
sti
call
mov
add
jnp
psubd
mov
or
fisub
mov
bound
cmp
xor
sub
sbb
pop
dec
add
jo
sub
cmc
cli
popf
mov
inc
mov
xchg
sub
sti
mov
cmp
mov
jmp
popf
or
sbb
retf
mov
call
mov
pop
mov
imul
add
add
sbb
sbb
retf
mov
mov
push
rol
or
(bad)
or
xor
mov
loope
mov
sbb
stos
mov
cmp
nop
mov
fild
scas
pop
mov
retf
mov
stos
mov
cmp
test
add
sar
mov
lock
mov
sar
sub
call
add
sti
mov
stos
mov
(bad)
xlat
mov
dec
rcr
push
adc
push
add
jl
aaa
or
xor
cmp
sub
cli
retf
mov
cmp
jo
dec
ins
ret
aas
sbb
das
cmp
push
fadd
dec
or
xor
les
ret
out
call
lds
add
push
jl
add
cld
add
and
adc
(bad)
xor
out
push
jbe
(bad)
or
add
add
nop
lods
push
ret
gs
xor
or
push
ins
add
enter
pop
xor
loopne
cmp
mov
push
add
mov
push
add
leave
cli
fiadd
cmp
or
leave
sahf
cld
enter
xchg
cmp
dec
and
lods
mov
push
or
push
jl
dec
ins
leave
lods
jmp
test
mov
jl
sar
inc
rol
xor
mov
add
pushf
retf
int
ret
int3
mov
retf
(bad)
lahf
sub
or
int
fadd
xor
addr16
xchg
pop
leave
xchg
dec
stos
movups
mov
leave
loopne
xchg
int
lock
pusha
add
retf
iret
out
into
call
iret
mov
into
out
add
iret
xor
or
scas
jmp
rol
mov
shl
or
hlt
lods
xchg
iret
mov
rcr
pop
rcl
mov
out
cwde
iret
add
pop
rcl
jge
(bad)
sub
scas
cmp
xor
sar
sar
or
mov
iret
es
std
sbb
inc
sbb
in
into
dec
lods
shl
aad
std
shl
dec
rol
rol
iret
xor
daa
popf
add
lods
retf
xor
or
addr16
into
pop
int
lods
ins
add
aam
jge
dec
xor
xlat
dec
mov
jmp
into
jns
aam
fcmovbe
jmp
fsubr
mov
dec
jge
adc
add
cli
pushf
(bad)
sub
pop
fcom
(bad)
adc
ror
fdivr
sar
aam
mov
pop
in
mov
or
mov
ficomp
fstp
test
fdiv
shr
fld
loopne
add
add
fsub
mov
mov
fcomp
add
(bad)
jp
fisttp
mov
fdivr
into
ret
lods
fimul
test
xlat
test
ror
(bad)
fcomp
int
pop
or
xchg
int3
(bad)
popf
retf
dec
(bad)
fdivr
rcr
and
push
ins
iret
test
ficom
(bad)
and
and
sti
mov
rep
xlat
repz
nop
jge
jnp
(bad)
lods
xlat
mov
xlat
mov
loope
dec
fiadd
aam
in
fnsave
aam
int
arpl
mov
jge
enter
popf
loopne
pop
leave
dec
xor
pop
xor
into
fucomi
in
fidivr
jecxz
popf
loope
outs
fstp
in
(bad)
jecxz
std
rol
loop
mov
repnz
loopne
pop
in
sbb
popa
cs
loop
outs
(bad)
out
dec
sar
loope
std
fisttp
push
popf
out
(bad)
shr
(bad)
loop
pop
fucomip
ins
shl
pop
fcom
int
cmp
fist
fist
(bad)
into
add
sar
jmp
outs
aad
dec
call
pop
out
mov
test
add
jge
outs
push
jmp
cmp
and
loopne
scas
jmp
sub
xchg
fsubrp
push
aad
out
in
or
jb
(bad)
out
popf
loopne
shr
or
add
fdivr
fucom
inc
loopne
adc
jle
sbb
call
in
shr
cmp
sahf
scas
loope
int3
add
fisttp
in
out
pop
leave
mov
fldenv
jecxz
into
push
push
in
jmp
jecxz
ficomp
out
jle
loope
fld
into
jmp
cs
cmp
std
cs
mov
stos
push
xor
out
in
lods
sbb
mov
add
ds
sub
sbb
stos
pop
xor
mov
add
cmp
lock
test
neg
mov
out
mov
(bad)
dec
aad
outs
out
aad
aad
lods
repz
outs
repz
retf
jecxz
jecxz
dec
call
cld
in
pusha
in
loop
jecxz
sbb
(bad)
into
retf
out
push
lock
pop
outs
out
daa
pop
in
jno
repz
cmp
mov
repnz
push
icebp
out
fbstp
call
daa
pop
rep
outs
jecxz
fcomip
dec
outs
sar
repnz
in
sahf
shl
test
mov
into
mul
push
jmp
mov
add
inc
in
iret
cmc
jecxz
icebp
add
cmc
sub
out
xchg
jg
aas
shl
enter
(bad)
stc
push
shl
push
repz
pop
jge
aam
loop
outs
jmp
pushf
(bad)
dec
mov
jne
in
dec
das
div
in
cmps
inc
(bad)
mov
test
out
leave
out
hlt
stc
or
push
pop
std
mov
cld
ins
(bad)
(bad)
scas
stc
loop
repz
mov
daa
pop
hlt
bound
icebp
jle
bswap
repnz
fcomip
pushf
(bad)
in
xchg
push
xchg
fcomip
in
ds
cmps
ds
mov
lods
out
in
dec
repz
jb
inc
fsub
enter
dec
fdiv
add
rol
js
dec
push
call
shl
push
push
dec
leave
enter
lock
je
cmp
dec
fimul
mov
fild
pop
mov
call
mov
mov
pop
lea
fsub
in
pop
jge
push
sahf
fcomp
jle
lods
leave
jl
mov
dec
dec
out
or
lea
sbb
adc
sbb
push
enter
pop
(bad)
xchg
lods
bound
sub
das
sub
inc
inc
xchg
inc
ins
jecxz
lods
or
jo
rcl
jne
push
or
retf
dec
das
sub
sbb
pop
outs
in
xchg
ss
mov
mov
sub
xchg
sub
xchg
aad
dec
dec
not
aad
sub
sub
inc
arpl
jl
sub
lods
xor
or
inc
dec
sub
movs
(bad)
jp
int3
push
loopne
popa
fldenv
inc
imul
dec
cmp
xchg
add
push
xor
mov
mov
dec
bound
push
imul
mov
scas
mov
popa
ret
dec
test
dec
adc
out
lock
lods
pop
movs
xor
mov
loopne
bound
sti
call
adc
dec
cmp
push
outs
sub
sahf
or
xchg
faddp
mov
cwde
cmp
sar
jg
push
pop
call
mov
out
cmp
xchg
pop
ret
or
lea
inc
push
dec
mov
add
push
mov
sbb
bound
adc
push
sahf
mov
mov
lahf
adc
xor
xor
and
cmps
sbb
sbb
push
icebp
pop
push
or
daa
or
imul
jo
push
arpl
dec
jnp
sub
in
dec
dec
xor
cmp
mov
cmc
push
and
push
pop
aas
neg
cmp
inc
shl
fwait
mov
adc
outs
(bad)
mov
enter
or
movs
add
out
jno
jno
sub
cdq
mov
leave
and
push
aas
jbe
int3
pop
xchg
mov
push
push
ret
lods
pop
dec
movs
pop
xchg
retf
mov
push
nop
sahf
test
test
adc
cmp
pop
cmp
out
popa
jl
cs
xchg
dec
sbb
mov
daa
mul
and
stos
jge
fwait
cmps
jbe
leave
xchg
and
shr
outs
or
js
dec
or
dec
push
push
sbb
adc
in
sbb
mov
popa
not
sub
sbb
addr16
mov
stos
mov
retf
stos
pop
repnz
sub
cli
mov
dec
jo
xchg
enter
jmp
stos
cmp
es
es
push
add
mov
sub
sub
in
xor
sti
sub
cmp
and
inc
cmps
add
cwde
fist
sbb
add
xor
push
aas
aad
popf
(bad)
jns
mov
sub
icebp
sub
sub
mov
cs
loop
mov
popa
scas
sbb
fstp
mov
mov
scas
lods
mov
sub
repz
dec
and
mov
xchg
adc
xor
aad
fnsave
jecxz
rcl
jmp
ret
cld
inc
add
aaa
rcr
cs
into
into
lods
cmp
stos
int
ja
retf
cld
add
lods
adc
xor
mov
aaa
icebp
xor
inc
jg
retf
outs
imul
and
mov
or
or
iret
push
outs
cmp
mov
inc
popf
in
push
(bad)
popf
sbb
sbb
ret
inc
les
mov
adc
and
mov
aas
dec
xor
hlt
or
cmp
mov
mov
mov
pop
hlt
xor
mov
test
and
ins
iret
jb
mov
mov
leave
add
int
test
stc
push
fild
inc
xchg
cmp
shl
push
mov
and
out
push
or
add
inc
aaa
clc
add
and
mov
iret
mov
adc
mov
cmp
jb
jg
in
sbb
fdiv
dec
mov
popa
cld
call
mov
repnz
jno
stos
(bad)
(bad)
xlat
cmp
js
test
xchg
and
add
repz
inc
or
sub
sahf
cmp
add
test
movs
adc
outs
jbe
dec
fistp
and
mov
popa
jmp
xchg
jp
cdq
lock
add
cwde
pusha
add
aas
pushf
jno
jl
ins
cmps
out
test
int3
mov
arpl
loopne
das
mov
movs
xor
xor
(bad)
retf
in
pop
fdivr
(bad)
or
ror
mov
xor
inc
cmps
daa
jl
inc
xor
push
pop
ror
sbb
pop
add
xchg
adc
and
jg
into
jbe
push
cdq
cmp
sub
cmp
jne
add
or
popa
inc
loope
retf
xchg
push
cmp
xor
cmps
iret
ins
ds
mov
call
xor
retf
mov
ds
xor
and
jmp
push
sub
pop
retf
lea
adc
or
add
xchg
mov
xchg
inc
cmp
(bad)
scas
jb
lods
adc
ret
(bad)
(bad)
aad
pusha
adc
rcr
mov
in
daa
push
inc
retf
mov
test
add
and
push
xchg
or
and
pop
test
retf
imul
dec
nop
cmps
adc
sbb
es
rol
push
push
xor
inc
fcmovb
mov
shl
push
mov
ret
jo
fdivrp
xchg
popf
imul
push
sub
jbe
mov
jmp
mov
lea
jne
cwde
push
dec
and
add
sub
stos
outs
pop
fisub
fsub
cmc
scas
push
cdq
inc
sub
add
ins
das
bound
add
sub
test
cmp
cwde
or
fadd
pop
adc
add
cmp
movs
mov
dec
mov
shr
inc
imul
jle
mov
popf
fwait
loope
outs
cmp
mov
inc
mov
sub
(bad)
cmp
scas
arpl
lods
dec
push
mov
mov
jmp
fcmovbe
inc
and
sbb
dec
sbb
imul
in
inc
ret
xor
mov
in
test
stos
xlat
out
je
dec
cwde
icebp
pop
mov
pop
add
test
into
ja
inc
adc
cdq
int3
jmp
dec
bound
pop
outs
inc
xchg
stos
inc
out
addr16
retf
sub
mov
mov
stc
int3
arpl
jecxz
sub
je
pushf
push
fiadd
test
in
into
and
cli
into
or
lods
in
les
mov
or
push
pop
lea
dec
mov
adc
ja
xor
imul
adc
in
mov
and
cli
retf
xor
sbb
(bad)
fidiv
and
(bad)
push
mov
addr16
retf
sti
aad
xor
imul
ds
sti
ins
imul
scas
adc
repz
jbe
shl
or
add
mov
cmp
ret
or
fadd
rol
xor
pop
cmp
push
ja
adc
scas
lock
jl
xchg
and
test
pop
xor
sbb
push
add
idiv
(bad)
fdiv
mov
add
inc
(bad)
mov
stos
aas
mov
push
xchg
outs
cmc
mov
jb
push
outs
js
(bad)
fdivp
stos
aas
mov
adc
add
sbb
inc
mov
xchg
or
sti
aam
out
das
mov
es
pop
jbe
sbb
xlat
pop
fcomi
mov
popf
jmp
sub
sub
fsub
outs
sub
cmp
lock
js
mov
imul
out
xchg
push
es
scas
jne
sub
push
test
push
out
cmp
loopne
fdivp
dec
xlat
std
(bad)
jge
daa
mov
mov
fldcw
mov
xlat
mov
les
or
xlat
jp
push
cmp
cli
ret
nop
imul
inc
jge
jle
mov
fild
mov
sub
pop
add
sub
add
add
pusha
add
div
sbb
cli
cmc
jg
pop
add
inc
(bad)
adc
cmpxchg
(bad)
jo
pop
je
out
or
js
xlat
ja
ja
daa
clc
add
jle
mov
loope
jnp
inc
jne
mov
add
add
sub
arpl
inc
jae
pop
jnp
mov
pop
test
jns
mov
(bad)
sbb
dec
mov
adc
cmp
jge
pop
sbb
adc
pop
cwde
add
pop
and
add
aaa
imul
inc
mov
and
jbe
mov
and
je
cwde
xchg
addr16
div
test
ja
dec
mov
mov
jbe
add
add
lock
fmul
adc
or
cmp
add
or
xchg
sbb
cmp
mov
aaa
jne
shl
test
add
xor
jnp
cmp
out
sbb
mov
test
mov
clc
add
pop
mov
jge
and
cmp
test
jl
mov
sub
jbe
test
xor
clc
mov
mov
jne
enter
inc
outs
enter
dec
jecxz
mov
jns
xchg
mov
sbb
jg
repnz
pop
push
jmp
push
clc
mov
mov
and
jae
or
xchg
jnp
xchg
or
xchg
push
imul
push
dec
push
add
mov
xchg
cmp
je
js
add
pop
inc
xchg
call
dec
mov
and
nop
or
xchg
cmp
pop
jbe
sbb
xchg
add
mov
cmp
add
xchg
aaa
stc
cmp
sbb
mov
push
sub
jmp
inc
lock
push
fmul
jmp
adc
adc
add
stc
mov
pop
adc
cdq
fidiv
push
clc
xchg
mov
xchg
jnp
xchg
addr16
push
xchg
and
cmp
call
or
outs
or
xchg
lea
fwait
push
adc
fwait
dec
xchg
cmp
nop
jno
mov
add
mov
leave
jbe
cmp
cdq
pop
test
add
mov
jg
imul
popa
rol
clc
fwait
pop
leave
nop
sub
test
cmp
mov
pop
sahf
mov
mov
xchg
dec
cmc
xchg
xchg
cmp
call
mov
mov
pop
xchg
or
out
mov
sub
or
leave
jo
dec
fwait
push
push
out
jmp
dec
stc
mov
popf
fcmovu
xchg
repnz
push
xchg
mov
or
adc
mov
add
xchg
outs
fcom
sub
ficomp
mov
cmps
xchg
into
enter
lea
lahf
nop
mov
mov
sub
push
stc
cwde
xchg
inc
xchg
nop
push
imul
xchg
push
sbb
cmp
fcom
mov
push
leave
xchg
mov
xchg
xor
(bad)
jmp
leave
mov
fcomp
cli
mov
mov
test
stc
movs
(bad)
or
leave
xchg
xchg
ficom
jp
inc
stos
mov
fidiv
leave
cmps
inc
mov
dec
cdq
inc
shl
cmps
or
stos
jne
popf
inc
or
mov
loopne
jns
add
sub
sahf
movs
pop
je
jns
mov
xchg
cwde
mov
jo
stos
mov
xchg
int3
clc
test
leave
xchg
movs
cli
xchg
jge
xchg
nop
cdq
lods
cli
fst
cmp
lods
inc
mul
or
pop
shl
stc
lahf
nop
push
add
fldcw
sub
jp
mov
test
jp
scas
mov
dec
mov
stos
jmp
cmp
xchg
lods
jmp
repz
sbb
sub
jmp
or
pop
or
mov
jp
mov
stos
scas
mov
cmps
ret
sbb
sub
jmp
jno
mov
mov
mov
stc
lods
mov
mov
push
cmp
sti
mov
stos
mov
fisubr
or
mov
aaa
or
mov
sahf
rol
js
xchg
call
cmps
dec
jmp
sar
mov
mov
popf
(bad)
jnp
sub
add
sbb
mov
jmp
lods
pop
cmp
cmc
mov
fwait
test
dec
mov
pop
mov
jmp
test
mov
jnp
mov
call
stos
jnp
mov
mov
cmp
test
jns
sti
jp
push
mov
adc
xchg
mov
mov
fwait
mov
fidivr
mov
imul
mov
fsubr
stos
sbb
mov
sti
xchg
out
stos
adc
inc
pop
mov
push
jmp
push
scas
jo
scas
(bad)
jmp
sbb
add
mov
mov
jmp
add
jb
cmp
mov
ficomp
test
lods
cmp
dec
jmp
(bad)
jmp
pop
and
mov
popa
cmp
test
or
scas
or
cmp
(bad)
sti
mov
pop
mov
xor
mov
pop
dec
ret
or
add
add
jmp
movs
imul
daa
inc
add
xchg
aaa
dec
mov
mov
mov
addr16
xchg
jo
lds
ret
lock
call
add
pop
or
push
rcl
mov
jmp
or
cwde
or
xor
les
leave
aad
leave
out
enter
pop
ins
leave
mov
push
adc
retf
xchg
cmp
pushf
or
jmp
pop
mov
stos
(bad)
pop
sti
(bad)
fistp
int3
inc
mov
ja
ret
popf
lods
les
(bad)
xor
jo
inc
adc
fistp
rcr
retf
repz
test
ins
fmul
or
lds
mov
or
int3
xor
xchg
xchg
int3
retf
rcr
sar
mov
jo
mov
int3
aas
sbb
or
mov
lods
lea
neg
enter
les
or
icebp
sub
arpl
ins
jl
push
inc
add
stos
mov
iret
int
add
add
(bad)
ret
adc
mov
leave
or
retf
into
pop
jp
cmp
or
add
aam
(bad)
aam
int
dec
(bad)
adc
shl
in
shl
sub
out
mov
std
into
dec
mov
lds
ror
sti
int3
push
mov
sar
dec
into
xor
out
lds
add
lds
ins
leave
pop
fst
inc
(bad)
shl
les
aas
or
pop
pop
mov
ins
leave
xchg
jnp
(bad)
push
jg
iret
cs
mov
(bad)
sbb
gs
pushf
ffree
mov
(bad)
ins
int
adc
mov
dec
aam
dec
xlat
mov
pushf
xchg
sahf
jge
adc
xor
test
fst
fcom
retf
add
fiadd
fst
jnp
cmps
xor
inc
cmp
les
(bad)
std
fst
push
rcr
fcomp
enter
xor
retf
fxam
or
ins
jge
test
inc
int
adc
mov
dec
shl
fsubr
popf
fistp
mov
in
fimul
in
mov
stos
xlat
loop
(bad)
pop
aad
(bad)
fadd
cmp
adc
xlat
sbb
mov
loope
scas
loopne
push
lea
shl
fmul
outs
(bad)
in
jecxz
dec
into
nop
test
cmp
sbb
cmp
or
loope
adc
fisttp
loope
sub
jp
shl
jge
push
push
in
pop
ftst
pop
fcom
ficom
frstor
fmul
pop
aad
fmulp
push
out
pop
aam
popf
loop
dec
into
pop
fimul
dec
(bad)
mov
xchg
cmp
jne
fsub
in
push
aam
(bad)
in
push
loopne
pop
out
outs
out
dec
out
int3
jecxz
cmp
push
std
iret
or
in
push
loop
pop
fadd
out
std
fimul
add
add
xlat
jo
rcl
out
jge
test
jmp
inc
cs
mov
int3
lods
in
scas
in
fsubp
aas
int3
xlat
stc
fucom
cmp
loop
dec
out
jecxz
outs
jecxz
fsubrp
mov
int3
std
jecxz
ins
fstp
in
cmp
mov
out
scas
call
dec
fist
fisttp
mov
fist
out
jge
xchg
mov
jnp
jmp
mov
hlt
push
loopne
(bad)
in
lods
jmp
outs
fnsave
aad
into
enter
fmul
rol
add
cmps
adc
or
rol
fsubp
stos
pop
icebp
enter
jge
inc
movs
add
mov
adc
out
out
xchg
stos
inc
stos
mov
adc
rcr
(bad)
(bad)
in
icebp
or
cmp
fs
jmp
push
push
adc
icebp
push
dec
in
out
fisttp
into
fnstenv
in
into
out
pop
into
out
push
das
out
scas
jmp
xor
inc
lahf
lock
jmp
iret
fcom
repz
push
sbb
not
loopne
into
lock
int3
aad
dec
mov
std
imul
cs
out
adc
xlat
xor
fs
hlt
mov
pusha
mov
push
(bad)
cmp
pmuludq
pushf
cs
xchg
lahf
repz
icebp
inc
pop
loope
dec
hlt
(bad)
(bad)
jle
xchg
das
stc
cwde
aas
stc
xchg
lahf
cmc
xor
cmps
(bad)
fidiv
aas
leave
xchg
das
stc
das
dec
in
(bad)
stc
das
dec
stc
pushf
jge
out
cli
dec
aas
sti
inc
aas
in
test
cmc
cwde
pextrw
sub
repnz
pop
icebp
aam
hlt
inc
pop
fcomip
adc
cmc
cmp
cmc
(bad)
fdivrp
lahf
pop
repz
mov
cmp
out
push
in
xlat
out
fnstenv
std
mov
out
jle
cs
xchg
(bad)
clc
add
sti
loopne
loopne
pop
stc
dec
das
jmp
iret
(bad)
fwait
(bad)
cli
pop
das
clc
mov
add
into
mul
inc
or
sub
add
sbb
add
popa
xchg
xchg
add
adc
mov
mov
add
pushf
xchg
mov
xchg
adc
scas
retf
scas
mov
popf
mov
mov
mov
into
xchg
ror
lods
mov
xchg
ror
mov
lods
stos
call
out
test
lock
mov
push
(bad)
cmps
push
shr
ja
sbb
sbb
jmp
and
and
inc
jl
(bad)
push
mov
fild
mov
std
jmp
ins
add
mov
cdq
push
sub
lods
fwait
inc
jl
adc
pop
lock
jge
ins
xchg
dec
icebp
test
mov
xor
inc
mov
sbb
movs
pushf
pop
mov
je
(bad)
jns
add
scas
enter
adc
retf
jp
fdiv
adc
stc
jnp
push
xchg
inc
ja
fdiv
sbb
out
push
push
jne
sbb
xchg
lock
sub
retf
imul
pop
add
push
out
je
loope
fwait
jnp
mov
mov
movs
xchg
fstp
daa
icebp
jns
aaa
push
pop
loop
sub
mov
adc
push
(bad)
mov
mul
push
(bad)
pop
call
push
lods
push
adc
nop
test
dec
cwde
dec
cmps
dec
fwait
les
jo
call
jns
push
inc
jmp
or
loope
movs
lods
xchg
(bad)
jg
icebp
push
mov
popa
jb
sbb
jns
sbb
pop
push
add
cmc
sbb
loope
push
push
cli
cmp
or
push
add
imul
add
push
sbb
pop
push
sub
adc
int3
popa
call
mov
or
sub
aaa
and
pop
pop
xchg
dec
sbb
outs
dec
leave
add
sbb
xchg
leave
neg
lds
pop
add
push
xchg
sub
add
call
outs
cmps
out
call
pop
movs
pop
and
lds
add
icebp
adc
rol
add
mov
mov
call
test
inc
jmp
sub
mov
mov
into
ret
in
cmp
nop
push
(bad)
mov
cmps
mov
cwde
cmp
sbb
stos
test
test
stos
push
add
xchg
mov
sub
and
jns
rol
push
lock
imul
imul
call
adc
mov
cmp
mov
mov
jmp
push
add
out
and
ror
pop
adc
and
cmp
ss
dec
and
aas
loope
leave
(bad)
leave
xor
jns
push
into
xlat
sahf
mov
xor
or
mov
mov
and
mov
retf
pop
mov
dec
fcom
int
xor
test
pop
lahf
push
add
mov
lods
mov
(bad)
(bad)
mov
or
mov
cmps
lock
pop
jg
add
sub
add
dec
or
daa
fistp
iret
je
cmp
imul
mov
jb
(bad)
cmc
or
fwait
dec
scas
ss
in
lods
sub
pop
mov
lods
mov
push
cmp
mov
outs
xor
cmps
mov
dec
(bad)
cmp
sub
or
jb
lahf
stos
mov
push
shr
lock
sub
dec
loopne
adc
xchg
into
fs
pop
pop
jnp
inc
stos
pop
cmp
jp
lods
cmp
pop
call
mov
aam
(bad)
cmp
ret
mov
jmp
rol
mov
out
retf
add
rcr
jmp
mov
icebp
add
jle
mov
xchg
lods
aaa
mov
xchg
mov
ret
mov
add
push
cmp
push
iret
push
and
fiadd
adc
mov
mov
shl
add
xor
mov
sbb
(bad)
int3
mov
inc
(bad)
int
push
inc
mov
jo
dec
mov
mov
push
mov
mov
les
mov
mov
xor
or
adc
clc
xor
mov
ins
lods
mov
cmp
add
or
inc
jo
inc
test
pop
ror
xor
mov
mov
sahf
sbb
cmps
push
jmp
mov
inc
pop
xchg
xchg
inc
int3
fwait
daa
aaa
or
test
and
cmp
inc
aaa
mov
jne
in
movs
sub
dec
pop
retf
es
popa
sbb
dec
inc
imul
jno
mov
xor
repz
enter
pop
pop
dec
pop
push
repz
int3
or
xor
int
pop
xor
mov
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
ds
add
pushf
aam
ins
and
test
cmp
mov
add
stos
push
lods
jge
sub
xlat
mov
sbb
push
mov
loopne
dec
xor
sub
aad
adc
push
xchg
inc
push
mov
and
fmul
xchg
je
mov
stos
pop
mov
mov
jp
in
push
icebp
sbb
mov
lods
scas
movs
in
popa
adc
retf
mov
gs
aad
pop
mov
sbb
pop
mov
loope
sar
push
xchg
push
xchg
mov
popf
or
pop
mov
jge
outs
repz
dec
in
jbe
push
sar
lods
jb
retf
xchg
adc
jo
cmp
out
je
out
jge
popa
xlat
stos
(bad)
mov
push
out
jmp
shr
pop
stos
ret
or
rcl
mov
mov
mov
lods
mov
xor
aaa
mov
dec
mov
jbe
ret
adc
xor
cli
bound
cs
jg
cld
or
popa
or
cmp
adc
mov
mov
xor
jecxz
xchg
sbb
loope
pusha
jmp
and
inc
rcl
adc
sub
enter
lea
mov
jae
ins
pop
push
scas
xchg
mov
push
in
mov
mov
ins
in
in
pop
sar
or
sub
add
fcomip
or
in
nop
in
or
inc
cmp
mov
pushf
popa
mov
mov
aas
and
sub
xlat
or
enter
retf
cmp
ins
repnz
fnsetpm(287
in
call
adc
inc
mov
aad
data16
dec
pop
popf
fisttp
xor
jae
mov
mov
jns
add
cmps
test
sbb
pop
ficom
scas
imul
add
jmp
cmp
shr
lods
ins
dec
pop
inc
int3
sub
mov
cmps
pop
call
outs
fidiv
or
call
fucom
adc
jle
pop
xor
adc
dec
hlt
jo
std
imul
ss
ds
jne
in
(bad)
mov
call
popa
jmp
scas
ins
pusha
add
clc
mov
in
ja
leave
jl
xchg
addr16
les
adc
scas
pop
rcr
dec
mov
ins
out
in
retf
cmp
mov
stc
int
mov
mov
outs
mov
repz
fs
jmp
fisttp
mov
sub
shl
xchg
mov
push
inc
cmps
mov
and
addr16
stos
mov
ror
(bad)
jg
sbb
fild
cmps
push
dec
hlt
mov
cmc
fdivp
push
jl
or
or
int
cld
fmul
cmp
mov
sub
mul
lods
idiv
int
mov
mov
push
pop
sbb
scas
outs
cli
jmp
inc
mov
or
pop
shl
cmp
jmp
aas
add
into
sub
jge
popa
add
jl
sbb
mov
add
pop
jns
cmp
inc
nop
pop
std
fs
ds
xchg
xor
pop
or
cmp
push
dec
out
jmp
jmp
(bad)
in
ins
xchg
out
mov
jb
gs
xor
xor
push
adc
rol
inc
jge
ja
jmp
imul
fnsave
sbb
jbe
push
push
sub
jnp
cmps
outs
aas
shl
adc
daa
jp
ja
adc
xor
add
push
int3
push
jge
fcomp
sbb
das
test
dec
xchg
push
and
jbe
(bad)
jo
push
jns
pop
adc
push
add
outs
repnz
hlt
ja
sbb
mov
pop
xchg
ins
push
outs
ret
push
jne
sbb
xchg
xchg
jb
call
mov
push
std
cmps
inc
inc
xchg
cmp
imul
lock
adc
xchg
fs
data16
js
push
aaa
or
arpl
sub
sub
or
test
push
and
cmp
imul
or
js
pop
je
inc
mov
fcom
cmps
jnp
mov
add
adc
jg
lds
pop
push
sbb
data16
jno
mov
mov
jo
add
jl
xlat
arpl
adc
jl
(bad)
jg
push
push
clc
imul
pop
mov
shl
xchg
test
call
lods
sub
ja
mul
fs
jns
jp
aaa
(bad)
shl
out
push
cmp
jne
pop
xchg
(bad)
pop
inc
test
and
ins
dec
pop
jge
xchg
push
sar
jbe
add
pop
or
sub
bound
mov
xchg
test
cdq
jnp
out
xchg
outs
sbb
jg
xchg
xchg
hlt
pop
adc
jp
aaa
add
jl
out
lea
outs
ins
daa
xchg
mov
pop
out
xchg
mov
push
jbe
push
or
mov
outs
xchg
xchg
js
sub
call
push
data16
jp
push
cmp
push
lds
pop
mov
pop
sbb
shl
repnz
in
clc
jbe
in
sti
lds
mov
daa
jbe
mov
jbe
test
dec
push
xchg
push
xchg
push
(bad)
pop
jge
jmp
adc
xlat
cmp
js
or
ja
mov
dec
jo
dec
es
mov
dec
push
jge
cmc
add
mov
jns
js
mov
pop
mov
sub
fs
push
call
add
fwait
inc
pop
mul
scas
xor
push
adc
jp
popf
(bad)
mov
push
mov
std
push
test
jmp
sbb
pop
gs
movs
add
call
popa
call
(bad)
(bad)
jg
imul
xchg
and
pop
jmp
push
mov
repz
test
fild
jg
pop
sti
stc
pop
add
test
pop
jl
push
outs
shl
add
in
jg
imul
sub
jg
js
mov
into
xchg
xchg
retf
out
sub
mov
movs
cmp
xchg
inc
shl
mov
mov
pop
mov
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
je
cmps
pusha
adc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
xchg
xchg
xchg
mov
mov
push
sub
sub
rcl
sbb
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
push
add
data16
adc
outs
ins
xor
sub
jle
inc
ds
mov
and
jmp
fdivr
cli
cld
mov
mov
pop
pop
movs
sahf
movs
push
dec
push
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
or
xchg
les
and
cmps
movs
je
je
out
xor
xor
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
data16
sbb
sbb
outs
je
cs
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
dec
dec
push
add
pop
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
(bad)
leave
adc
sub
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
(bad)
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
leave
loopne
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
inc
sbb
mov
adc
pop
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
xchg
rcr
into
jbe
jae
in
push
mov
mov
in
shl
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
xor
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sub
aad
stos
push
rcl
jmp
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
or
scas
les
scas
into
stos
cmps
sub
mov
mov
repz
mov
push
sbb
fwait
mov
mov
pop
lock
call
mov
push
jo
scas
adc
mov
dec
xchg
xchg
cmps
mov
jmp
adc
and
cmp
scas
aas
sbb
xchg
xor
mov
dec
scas
xor
add
add
stos
lods
sub
push
sub
sub
sti
lods
lods
jp
gs
sub
xchg
mov
stos
mov
sub
or
pop
mov
jo
inc
push
add
push
imul
push
scas
fild
mov
adc
imul
cmps
inc
mov
dec
mov
cmp
push
sub
loope
mov
imul
add
mov
sub
sbb
mov
sub
pop
and
sar
mov
cmp
add
loopne
xor
mov
loopne
xchg
mov
push
scas
iret
cmp
dec
add
imul
mov
sbb
stos
mov
stos
add
imul
mov
cli
mov
jnp
inc
dec
add
pop
mov
mov
movs
mov
jb
add
sbb
and
add
mov
mov
dec
mov
in
shl
xor
add
sub
ret
mov
jl
sbb
stos
push
mov
or
add
fadd
das
lods
xchg
add
ret
sub
dec
ret
mov
add
cld
scas
inc
inc
mov
dec
les
mov
fwait
les
dec
sub
aaa
pusha
ret
add
loopne
and
lds
mov
push
push
(bad)
jp
add
ret
lods
pop
cmp
pop
lods
scas
mov
jo
add
outs
cld
(bad)
pop
xor
loopne
ds
pop
inc
add
mov
push
add
enter
mov
enter
cmp
or
enter
jge
enter
xchg
jl
mov
xchg
sti
add
lods
xchg
leave
sahf
cmp
or
leave
pop
inc
leave
and
retf
dec
lock
dec
jo
mov
add
fcmovne
in
int3
xchg
dec
ret
mov
stos
mov
add
pushf
enter
enter
movs
in
retf
int
jl
pop
loopne
xor
add
add
xor
xlat
in
add
ins
leave
jmp
int
pushf
enter
jecxz
into
(bad)
int
pop
int
enter
retf
retf
int
retf
int3
iret
add
or
out
ins
leave
mov
into
out
call
dec
push
into
adc
std
ins
rcr
or
cli
pushf
iret
sti
in
int
jge
pop
lea
jge
sbb
rol
popf
int
dec
sar
sar
sub
pop
mov
add
xor
out
mov
mov
pop
dec
iret
and
retf
shl
std
rol
pop
shl
into
add
jl
pop
and
jge
or
int
sbb
inc
cmp
pop
jge
adc
mov
rol
shl
or
movs
in
add
in
aam
(bad)
iret
outs
sub
ins
or
shr
aad
mov
aam
xlat
cmp
dec
jge
or
(bad)
pop
rol
(bad)
ds
int3
outs
in
mov
iret
jnp
iret
pop
std
iret
cdq
int
xchg
popf
enter
adc
jle
rol
cmp
xchg
popf
fnstenv
add
int3
rol
(bad)
mov
(bad)
xchg
jge
add
aas
jge
test
pop
sub
cli
(bad)
scas
pushf
fimul
sar
pop
fimul
into
push
int
fst
and
xlat
jp
fldenv
rcr
or
scas
mov
sub
ds
iret
push
xlat
fstp
ins
retf
(bad)
fsubr
clc
(bad)
fbstp
into
out
cmp
movs
int3
fdivp
pushf
(bad)
xor
fld
popf
(bad)
mov
fidivr
fidivr
fadd
in
add
jle
inc
in
int
or
add
(bad)
out
(bad)
cmp
push
int3
test
mov
fidivr
loope
pop
shl
add
jge
(bad)
jae
(bad)
rcr
out
(bad)
sbb
cmps
mov
cmc
ins
(bad)
xchg
cmp
push
sub
je
(bad)
cmp
xchg
sub
push
jge
popa
out
shl
aam
(bad)
jge
sub
aam
(bad)
fsubr
repz
xor
in
fsubp
sbb
fisttp
(bad)
iret
jno
(bad)
sar
or
loop
in
fmulp
popf
rcr
int
pop
in
or
xor
fild
dec
push
iret
jmp
dec
(bad)
(bad)
pop
add
iret
in
int3
add
loope
out
in
ds
fsubp
push
scas
iret
icebp
lods
loop
into
out
sbb
push
fistp
adc
jno
fist
(bad)
enter
fucom
(bad)
cmc
ins
call
out
retf
add
int
jle
jno
fld
out
lods
jmp
pushf
fisub
jecxz
sahf
jecxz
jle
popa
cs
fmul
mov
out
fsubp
fisttp
push
in
(bad)
in
std
jmp
or
test
(bad)
sbb
add
into
jmp
sub
int
cmp
add
int
rcl
jle
stc
push
loop
aas
stos
pop
and
or
lock
fcmove
icebp
repz
in
call
pop
iret
mov
in
sbb
outs
jmp
fild
into
ds
or
aad
rol
ds
ds
sar
jge
icebp
outs
lock
sahf
jmp
outs
iret
std
jle
nop
jle
sub
adc
mov
loope
dec
out
das
repz
movs
ins
lock
mov
popf
mov
jmp
sahf
fiadd
loop
sahf
hlt
jb
cmc
jbe
repz
sub
sbb
jmp
nop
add
fisttp
fcomip
daa
outs
repz
(bad)
pop
stc
inc
add
mov
imul
clc
cs
ud0
push
das
test
call
out
xlat
jo
out
fucomp
lock
into
add
stc
mov
repz
jmp
(bad)
test
daa
pop
int
call
or
mov
cli
or
mov
clc
add
icebp
push
psubsw
lahf
repz
(bad)
jmp
(bad)
std
loope
std
dec
mov
push
lahf
out
paddd
ror
mov
mov
jle
cld
shr
sub
xor
and
jne
aad
push
sub
jae
loope
clc
sbb
dec
sbb
mov
arpl
sub
retf
cmp
or
(bad)
clc
test
mov
dec
retf
cmp
sub
fcmovnu
or
cli
pop
cmp
retf
int3
call
mov
call
ins
dec
stc
std
mov
mov
mov
sub
in
in
mov
ficomp
pop
retf
cld
int3
or
retf
and
jno
jbe
inc
push
sub
pop
and
lods
xchg
mov
xor
or
inc
loopne
icebp
xlat
ret
inc
jmp
(bad)
push
dec
inc
daa
and
rcl
rcr
popa
shl
mov
mov
mov
pop
stos
cmps
cmp
jbe
ret
loope
das
test
icebp
hlt
sbb
push
jge
outs
loope
jmp
pop
mov
sbb
lea
shl
sub
mov
add
outs
dec
shr
jmp
pop
jae
scas
xchg
or
and
push
retf
(bad)
mov
xor
ret
mov
push
adc
mov
inc
cmc
and
scas
psubusw
cmc
xchg
jo
leave
jl
xor
adc
mov
push
stos
fnstsw
aad
cmp
test
sub
mov
cmps
fld
cld
movs
sub
aaa
je
pop
mov
and
sbb
fcmove
ret
adc
push
imul
push
je
jne
enter
push
cwde
jae
mov
push
jae
aam
pusha
jge
xor
add
dec
xchg
in
and
gs
popa
jge
push
sub
in
sub
sbb
and
push
lea
dec
and
and
or
lea
ret
pop
xor
nop
mov
popa
and
scas
vpshufd
pop
imul
test
push
leave
push
mov
aam
xlat
movs
pop
dec
inc
arpl
xchg
dec
(bad)
sbb
mov
pop
imul
into
jmp
(bad)
sahf
mov
sbb
js
imul
or
cmp
es
jb
mov
mov
leave
mov
repz
xlat
pop
cmp
int
pop
xor
inc
sbb
and
mov
and
xchg
pop
push
or
and
call
repnz
push
cmp
(bad)
push
cmps
or
jl
movs
jmp
jo
cmp
je
mov
add
sahf
arpl
mov
fldenv
xchg
es
jg
mov
sub
and
sbb
mov
pop
pop
ret
lds
ficom
mov
ror
jmp
sub
imul
jge
mov
xchg
mov
das
and
or
movs
mov
lods
xchg
dec
sbb
cmp
or
cwde
inc
jae
mov
movs
or
cwde
and
cld
test
lods
enter
sub
cdq
sbb
pushf
mov
sub
inc
jne
ds
test
ss
repnz
rol
jae
push
retf
lods
addr16
popa
mov
sub
fld
enter
std
test
xlat
jge
sahf
pusha
dec
sti
test
(bad)
or
jl
sbb
inc
cmc
mov
sbb
int
mov
cmp
mov
xor
jns
adc
inc
xchg
add
xor
xchg
sahf
repnz
ds
and
pop
out
jnp
jnp
dec
jge
dec
sbb
inc
int3
shr
mov
jmp
mov
loopne
jge
faddp
cmp
scas
shr
mov
retf
pcmpeqw
loopne
sahf
xor
aaa
fst
dec
jg
in
sbb
push
out
mov
push
mov
mov
xor
(bad)
rol
dec
cmp
out
ja
into
fldcw
adc
call
shl
sbb
test
ss
sbb
mul
(bad)
jbe
pushf
fdiv
hlt
(bad)
mov
in
sub
fcmovu
inc
xchg
out
rcr
hlt
push
xchg
jnp
pop
out
in
loopne
sar
jecxz
and
xor
shl
(bad)
sub
adc
push
je
or
std
mov
(bad)
sub
adc
arpl
or
out
push
mov
cmp
xor
iret
or
sbb
cmps
pop
dec
and
je
add
inc
xor
pop
scas
and
jecxz
or
xchg
jecxz
in
jbe
imul
test
xor
and
sub
cmps
mov
fs
push
dec
cmp
fs
(bad)
push
imul
or
mov
movs
int3
mov
bound
ror
and
and
inc
inc
ss
(bad)
mov
mov
sbb
pop
cmps
xor
cmps
retf
sub
pop
sbb
jmp
xor
iret
ja
ins
mov
mov
add
push
mov
cmps
mov
in
sbb
sub
or
addr16
inc
and
addr16
xor
enter
xchg
xchg
sti
jecxz
jne
rcl
pop
add
sti
push
jae
xchg
outs
stos
cld
imul
scas
push
cmp
jae
in
cmps
pusha
push
mov
mov
bound
push
add
mov
add
fst
mov
push
stos
sbb
sbb
add
cmp
dec
in
clc
shr
lods
gs
or
push
add
push
scas
(bad)
cli
adc
lds
mov
adc
cli
into
pop
push
frstor
xchg
movs
cmp
sub
add
in
fs
push
or
imul
aas
ja
(bad)
stos
xchg
and
pop
dec
fistp
out
xchg
xchg
sub
mov
movs
pop
pop
jmp
icebp
jnp
lods
fdivrp
outs
mov
call
sub
fsub
adc
jb
fcmovnbe
jle
jne
jns
out
fwait
or
nop
call
push
xchg
add
loopne
mov
das
retf
adc
iret
or
int3
bound
adc
inc
add
adc
pusha
add
adc
push
push
js
or
rol
cld
pusha
add
inc
or
fcomp
adc
pop
(bad)
jbe
mov
outs
lock
mov
scas
test
test
adc
cli
pop
shr
jo
ins
lock
(bad)
pusha
ret
rcr
ins
loopne
push
js
push
enter
in
into
or
dec
popf
outs
jae
stos
mov
inc
xchg
leave
data16
stc
jmp
mov
jbe
hlt
in
or
push
clc
push
sub
and
cmp
retf
fs
cwde
xor
ss
sbb
and
xchg
push
ret
push
jbe
adc
ja
add
adc
or
pop
mov
and
add
xor
pop
(bad)
pop
xchg
mov
in
add
popa
mov
mov
loope
xchg
sahf
mov
mov
dec
xchg
(bad)
retf
jge
mov
add
xlat
(bad)
fwait
sahf
das
scas
jae
fs
stos
jns
js
ret
in
and
or
push
hlt
sbb
aam
jo
fistp
lock
sbb
aad
je
repz
in
popa
add
shr
nop
dec
fwait
scas
cmps
fsin
add
jbe
test
cld
in
push
ret
fdivr
(bad)
mov
or
ins
ins
aas
pop
fsubr
es
enter
pop
sub
mov
pop
pop
(bad)
push
fadd
pop
cs
xchg
ficomp
loop
mov
imul
frstor
mov
ret
aad
icebp
ss
inc
jecxz
cs
jle
popa
pop
pop
rol
pop
jmp
sub
fld
xchg
jns
(bad)
push
add
loope
sub
mov
and
jecxz
(bad)
mov
push
sbb
sub
repz
xchg
(bad)
call
jb
fmul
mov
adc
std
add
popf
rol
push
add
ins
mov
(bad)
jle
loop
shr
ja
fucomi
fdivp
cwde
outs
mov
fincstp
mov
pop
add
mov
adc
cmp
adc
mov
lock
cmc
loope
mov
inc
mov
cmp
test
sbb
sti
fstp
push
aam
fsubrp
mov
jbe
enter
push
outs
cmp
mov
fisttp
rol
jbe
sbb
into
jnp
out
xchg
and
aad
outs
dec
sbb
(bad)
adc
cmc
cwde
fistp
sbb
lds
jle
mov
jo
inc
add
xchg
inc
imul
std
or
and
ja
fmul
jge
cmps
jl
xlat
jle
pop
push
jge
jge
xchg
idiv
xlat
jns
push
je
mov
add
xor
push
out
sbb
arpl
ss
xchg
addr16
adc
add
aad
sbb
cmp
sbb
cmp
add
add
sbb
daa
xor
or
ja
pop
adc
pop
aaa
jg
inc
imul
leave
xchg
adc
dec
jo
sub
leave
daa
jnp
push
pop
push
test
or
test
push
out
popa
adc
cwde
or
out
cmp
outs
cmps
pop
add
mov
dec
mov
sbb
sbb
jns
jne
push
add
enter
add
mov
pusha
(bad)
jl
xchg
sbb
fadd
mov
aaa
mov
mov
jne
mov
adc
mov
je
cmps
mov
or
cmp
inc
push
add
clc
or
xchg
mov
jl
cmp
jbe
rol
dec
jl
cmps
add
jle
push
cmp
ja
xchg
je
dec
adc
cwde
xchg
xor
lea
js
push
push
push
and
dec
ja
addr16
mov
(bad)
fdiv
or
jnp
mov
dec
add
jbe
clc
mov
mov
mov
xor
inc
nop
dec
mov
jbe
dec
ja
mov
sbb
or
push
movs
fmul
mov
out
js
daa
mov
sub
and
jno
and
sub
inc
mov
jecxz
xchg
mov
add
push
pusha
add
mov
adc
ds
mov
ja
add
retf
pop
mov
and
add
xchg
push
pop
mov
cmp
or
sbb
or
sbb
add
sbb
clc
cwde
xchg
sti
push
xor
push
jae
cwde
out
dec
xchg
sbb
xchg
ret
add
cmp
sub
xchg
cdq
sub
xor
xchg
add
xchg
sbb
jo
dec
mov
cmp
fcomp
leave
call
mov
xchg
jmp
push
call
push
jmp
jae
xchg
sub
mov
gs
xchg
fcom
xchg
xchg
inc
rol
mov
fistp
adc
xchg
les
clc
xchg
cdq
xchg
cmp
daa
mov
xchg
in
push
pop
jo
cli
xchg
ja
fstp
test
xor
fwait
or
mov
or
xchg
add
xchg
xlat
push
or
cwde
data16
jbe
imul
sbb
test
sbb
xchg
mov
xchg
sbb
xchg
rcr
cmp
je
cmp
jmp
push
cmc
mov
fstp
jmp
xor
xchg
(bad)
std
sbb
dec
xchg
je
or
xchg
jae
pushf
inc
sub
or
or
inc
xchg
das
adc
leave
add
xchg
mov
pop
mov
add
add
lahf
push
pop
cwde
adc
pop
jns
pusha
add
retf
mov
call
mov
sub
sar
xchg
jns
xchg
inc
leave
movs
pop
dec
mov
xchg
sbb
sbb
mov
pop
xchg
pop
test
pop
cli
xchg
sbb
movs
sub
xchg
or
jp
cwde
xchg
retf
xor
sub
stc
mov
stc
mov
pop
xchg
iret
retf
stc
add
push
ficomp
push
inc
mov
sahf
mov
push
jmp
scas
cmp
jmp
xchg
mov
pushf
sub
stos
xchg
int3
dec
lods
pop
cmp
sub
inc
test
leave
xchg
mov
mov
dec
mov
cmp
mov
mov
or
add
pop
call
mov
push
mov
mov
xchg
leave
cdq
dec
lahf
test
(bad)
sbb
imul
stos
jae
xchg
add
movs
dec
stos
stos
inc
push
or
or
mov
cdq
movs
add
mov
pusha
mov
call
stos
xchg
sbb
stc
test
sub
call
and
sbb
pop
mov
stos
cwde
and
stos
mov
mov
mov
add
cmps
inc
sub
mov
stos
mov
dec
scas
push
or
fwait
adc
add
xchg
fild
movs
push
sub
imul
pushf
jmp
xlat
pop
stos
and
aaa
cmp
data16
test
or
fld
stc
mov
stc
mov
push
add
xchg
lahf
imul
mov
retf
imul
mov
sbb
cwde
fdivr
inc
sti
lods
(bad)
sbb
sbb
stos
mov
sbb
stos
movs
fisttp
iret
mov
sub
fnstenv
jmp
or
fwait
mov
sti
lods
mov
stos
les
mov
lock
cmp
pusha
inc
pop
rol
sub
mov
pop
and
aad
lods
sti
stos
mov
jnp
sbb
mov
shl
add
cmp
retf
mov
retf
sar
stc
mov
pop
mov
jmp
movs
jb
sub
or
cmp
stos
lds
or
lea
les
ret
out
fstp
lods
xchg
int3
retf
mov
sti
mov
rol
mov
cmp
dec
mov
mov
es
add
jnp
pop
pop
mov
jnp
mov
lds
mov
jnp
push
imul
enter
pop
dec
scas
test
inc
xchg
xor
les
xchg
loopne
test
retf
ins
retf
retf
add
(bad)
iret
sti
enter
das
xor
fnstenv
stc
mov
mov
xchg
mov
or
pop
mov
sub
ss
aam
leave
mov
retf
rcr
mov
ret
mov
sub
sub
xchg
mov
cld
add
cmp
les
(bad)
or
aad
mov
lods
leave
adc
retf
addr16
sar
int3
loope
mov
stos
iret
sub
int3
retf
dec
sub
out
mov
cld
add
rol
int3
push
or
sbb
enter
cmps
sub
dec
sub
jns
mov
shr
mov
sbb
icebp
lods
int
cld
enter
xor
lea
add
ins
mov
lods
shl
stos
leave
arpl
int3
push
inc
add
pop
int3
frndint
cdq
dec
fnsave
pushf
xchg
repz
iret
sbb
(bad)
cli
int3
(bad)
sub
mov
in
retf
movs
fcmovnbe
ss
aad
ins
aad
fmul
inc
or
pop
jns
mov
retf
aam
sbb
jge
aam
retf
fwait
(bad)
lods
int3
mov
cmp
adc
mov
mov
pop
mov
dec
int3
cmp
ss
or
int3
rcl
mov
(bad)
lods
retf
sub
adc
aad
sbb
mov
retf
dec
lods
ret
sub
fxch
sub
pop
mov
push
pop
int3
pop
dec
aam
cmp
cmp
push
add
rol
cmp
jp
(bad)
(bad)
(bad)
jl
sar
fsubr
xlat
jge
aad
imul
(bad)
mov
jnp
fmul
(bad)
fmul
pop
iret
aam
aad
cmp
sub
sbb
popf
fstp
repz
adc
xlat
adc
fdiv
mov
mov
jecxz
leave
in
enter
scas
cmp
loopne
aam
dec
ror
mov
mov
leave
xchg
int
mov
(bad)
stos
iret
cdq
ins
fbstp
sar
fistp
mov
std
xchg
add
(bad)
sbb
mov
fmul
mov
retf
cmp
(bad)
rol
stc
sub
clc
sub
(bad)
xchg
or
sub
loope
lods
fmul
shr
pop
in
sub
ss
mov
in
int
adc
adc
lods
fucom
loopne
jecxz
scas
retf
adc
sub
jecxz
sub
jno
in
sub
cmp
push
outs
(bad)
loopne
loop
in
ffreep
mov
push
jle
xchg
(bad)
fucom
add
call
cmp
dec
in
out
(bad)
jmp
outs
jecxz
sbb
lods
cmp
jno
shr
add
jmp
sub
mov
jmp
push
jecxz
sub
mov
lods
(bad)
fbld
out
into
fst
fidivr
call
mov
sahf
jle
fisubr
ja
jmp
jb
jecxz
pop
in
outs
into
loopne
pop
out
pop
in
std
(bad)
ss
fsubr
out
out
(bad)
out
out
jmp
mov
push
scas
in
sub
pop
out
push
out
ds
cs
or
push
sbb
cld
jle
and
fstp
mov
fsubrp
mov
(bad)
dec
adc
xchg
cs
push
add
in
pop
call
mov
retf
out
jmp
cmp
mov
les
shl
outs
lock
repz
adc
push
sbb
adc
repz
(bad)
in
mov
repz
mov
cmc
or
jmp
pop
repnz
hlt
aas
pmaddwd
hlt
jmp
repnz
iret
or
shr
dec
iret
add
mov
repz
(bad)
pop
ds
mov
aad
imul
in
jg
mov
int
pop
lods
div
or
push
inc
repz
sbb
dec
repz
add
xacquire
add
iret
clc
pop
dec
repz
dec
repnz
pop
fld
mov
test
mov
cli
xchg
iret
stc
and
cli
jp
in
xor
stc
outs
sbb
push
aas
repz
hlt
inc
scas
fdivr
cmc
popf
(bad)
pop
(bad)
jge
cli
mov
repnz
out
hlt
(bad)
(bad)
mov
cmc
mov
cmp
fdivrp
mov
not
fnstsw
dec
scas
cld
rcr
pop
out
mov
into
pop
in
loop
sti
and
std
cmp
(bad)
lahf
outs
aad
das
std
mov
jmp
(bad)
cld
imul
sbb
das
test
das
mov
mov
pop
cwde
pop
add
mov
mov
call
cmps
xchg
adc
pusha
mov
sbb
scas
lods
mov
lea
xchg
scas
int3
scas
mov
movs
xchg
retf
cwde
inc
mov
movs
mov
sahf
(bad)
nop
(bad)
mov
cmps
jl
retf
xchg
xchg
cmp
dec
cmp
cmp
fist
xchg
push
pop
sub
test
sub
adc
pop
mov
and
and
repnz
xor
cmp
or
mov
outs
cld
pop
and
stc
rcr
rcl
js
jl
jmp
adc
retf
mov
xor
inc
add
clc
lea
(bad)
fdiv
push
stos
push
movs
repz
sbb
aam
(bad)
cmp
jns
push
mov
sar
popf
pop
jle
out
stos
popf
sbb
pop
xor
inc
lahf
xchg
sbb
frstor
mov
pop
mov
inc
leave
outs
pusha
mov
sti
xchg
push
cmp
mov
push
jb
ins
mov
and
jge
ss
fwait
rol
retf
mov
fwait
ret
mov
fdivr
shr
scas
cmp
fcom
mov
sub
adc
mov
and
stc
xchg
xlat
scas
das
pop
lahf
mov
(bad)
lahf
cmp
hlt
push
inc
movs
shl
jb
gs
jo
pop
inc
xchg
sbb
cmc
lods
mov
fs
arpl
adc
xchg
and
test
or
rol
sbb
xchg
push
lods
or
int3
js
pop
das
(bad)
sbb
cmp
cdq
mov
or
add
pop
lea
xchg
iret
mov
push
and
cmp
xchg
push
sbb
movs
inc
mov
cmps
loope
push
inc
cwde
and
ds
es
(bad)
fimul
rol
or
inc
push
les
cmps
cmp
pop
lea
ds
movs
bound
adc
pushf
in
and
fcomp
(bad)
cmp
adc
rol
add
retf
(bad)
xchg
push
dec
test
call
test
jmp
mov
push
cs
(bad)
push
cmps
mov
push
pop
jmp
test
push
dec
push
ret
dec
ror
movs
shl
fwait
dec
cmps
xchg
push
sbb
pop
je
mov
xchg
pop
push
lock
loop
aam
call
xchg
repz
and
mov
and
test
inc
stos
xchg
push
sti
or
loopne
mov
retf
rcr
xchg
shl
les
stc
into
sbb
je
imul
les
add
mov
les
enter
xor
sub
ret
sub
lods
ret
rcr
fimul
add
cmp
pushf
inc
mov
retf
mov
inc
mov
dec
stos
cld
adc
mov
jmp
add
cmp
adc
ins
adc
fisttp
jo
mov
stc
mov
inc
ror
mov
jmp
add
sub
bound
scas
jns
fistp
xchg
retf
aaa
add
or
repnz
add
out
outs
shl
jae
mov
fwait
addr16
add
mov
pusha
inc
ins
cmp
fwait
out
cmp
mov
jl
push
sti
int
out
fdivp
in
stos
mov
cld
lock
enter
daa
aaa
popa
sbb
das
call
mov
(bad)
jns
inc
sub
dec
lock
cmps
push
jp
xchg
push
scas
(bad)
cli
jp
fucom
adc
sub
mov
movs
cmc
xchg
ins
inc
sti
jmp
js
jecxz
and
arpl
and
pusha
mov
or
cdq
add
add
mov
mov
cmp
std
xor
adc
push
jne
jle
mov
cmps
sbb
cwde
pusha
fadd
pop
in
jno
in
add
lods
push
mov
push
sub
adc
daa
inc
bound
xchg
enter
mov
add
or
inc
sub
lods
mov
and
out
mov
mov
xor
cmp
sbb
loopne
xchg
pop
mov
adc
mov
(bad)
in
mov
mov
adc
sbb
xor
je
in
leave
enter
xchg
fadd
sbb
xchg
mov
mov
je
sub
dec
dec
cmps
rcl
cmp
ret
push
push
dec
xchg
cwde
sbb
sub
stc
cmp
xchg
rol
or
sbb
cwde
sahf
inc
out
jl
retf
push
stos
push
cdq
int
cmps
xor
dec
int
pop
repz
int
jp
fwait
loopne
cmps
cmp
dec
into
jb
(bad)
repz
call
leave
into
jbe
repz
lock
jp
repz
clc
int3
cmps
ds
lahf
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
dec
loopne
and
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
dec
stos
push
xchg
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
push
and
loopne
cmp
push
nop
sahf
xor
add
mov
and
ror
and
(bad)
mov
scas
jae
imul
mov
pop
and
popa
sar
or
rcr
add
movs
stos
pop
(bad)
cli
push
mov
mov
pop
(bad)
mov
sub
imul
xchg
scas
lods
add
pop
fmul
mov
mov
jmp
les
sub
mov
(bad)
adc
adc
pop
or
sub
pop
or
pusha
mov
sub
shl
loop
scas
test
test
pop
pop
or
lods
sub
fcmovnu
fstp
xlat
scas
fsubr
fcomi
cli
push
mov
scas
mov
mov
and
xchg
mov
adc
xlat
add
pop
mov
std
fistp
sbb
movs
adc
imul
fimul
sub
ret
scas
outs
mov
add
and
ins
jbe
sub
or
jbe
mov
loopne
jmp
cwde
mov
ret
xor
sti
test
xlat
adc
mov
imul
cwde
mov
test
add
and
inc
add
jle
add
sar
aaa
shr
xchg
(bad)
icebp
jns
retf
in
sahf
mov
mov
or
sbb
push
into
jmp
mov
pop
or
nop
repz
xchg
mov
ret
into
cld
sbb
loope
xchg
fmul
adc
or
pop
ja
jmp
add
sbb
out
(bad)
(bad)
and
cmp
out
aas
cdq
rcl
jae
dec
dec
pusha
adc
hlt
shl
jl
or
pop
shl
jnp
jmp
sbb
adc
bound
cmp
fld
ins
mov
jp
ret
mov
jbe
pop
fisubr
xor
push
jl
rol
cmps
xor
mov
stc
leave
sub
out
mov
inc
mov
cs
or
xor
adc
scas
inc
retf
push
mov
or
rol
int
lods
sub
push
leave
adc
outs
ret
icebp
push
(bad)
push
aaa
and
jge
push
int3
dec
sbb
inc
dec
call
jge
imul
aas
inc
out
cs
sub
jmp
hlt
mov
jnp
add
mov
pop
and
jmp
cmp
sahf
jae
inc
push
add
pop
mov
xchg
out
rcr
dec
xor
add
fld
add
mov
jp
call
sbb
out
aaa
sar
(bad)
out
pop
cli
les
mov
ret
daa
sbb
into
gs
xor
cld
(bad)
shl
sbb
imul
adc
fnstcw
pop
sar
dec
sti
mov
push
xor
sar
movs
xchg
scas
outs
xor
mov
test
sahf
fnstcw
push
xor
cdq
pop
stc
dec
iret
xchg
out
adc
ins
jmp
mov
out
push
xor
xchg
stos
add
ror
and
add
hlt
cmp
dec
out
out
cld
js
inc
sbb
jmp
sub
push
jne
mov
dec
push
lds
jns
xchg
ins
outs
(bad)
jno
and
test
cs
push
shl
rol
pop
jge
aaa
pop
in
jo
inc
imul
fnstenv
jo
mov
lods
push
push
daa
(bad)
jp
outs
inc
nop
jo
rcr
out
movs
xchg
mov
cmp
outs
add
push
enter
cwde
pop
adc
push
xor
sub
inc
push
push
sbb
jo
(bad)
js
xlat
or
push
add
outs
out
lds
ins
lock
jae
cmps
add
jne
xchg
pop
in
pop
adc
imul
push
fsub
push
adc
jb
aad
mov
push
stc
cmps
add
(bad)
jbe
mov
inc
mov
movs
cmps
xchg
jl
test
push
sbb
jg
cwde
arpl
jne
push
jno
sub
pop
pop
cmp
push
or
pop
sbb
mov
cwde
push
call
lds
xor
popf
test
xlat
imul
add
mov
jo
js
xchg
(bad)
push
daa
jo
jne
add
jl
xchg
arpl
adc
jnp
xchg
jg
push
push
mov
mov
imul
jae
push
xchg
test
je
call
mov
mov
add
push
test
js
sub
inc
mov
pop
nop
xchg
push
inc
sbb
inc
lea
jge
sub
cmps
pop
iret
ss
xchg
nop
inc
push
push
imul
inc
ja
fist
and
push
cmps
outs
xchg
imul
sub
pop
xchg
xchg
jnp
(bad)
jg
cmc
jns
daa
add
jnp
cmps
imul
mov
pop
jecxz
xchg
mov
push
ss
enter
mov
xchg
js
call
xchg
push
test
data16
jp
push
cmp
push
rcl
xchg
push
adc
push
jbe
xchg
fs
jbe
call
test
test
ja
and
ins
mov
jbe
push
push
push
push
mov
imul
jge
stc
add
jbe
pcmpeqd
clc
jbe
cmp
xor
(bad)
dec
xor
out
mov
bound
jl
add
imul
aad
cmps
pop
mov
add
daa
push
fs
push
call
add
in
cwde
fwait
add
(bad)
repnz
imul
leave
mov
ror
jb
cmc
pushf
xlat
and
lods
push
test
push
stc
push
stc
(bad)
test
test
adc
push
retf
pop
and
jge
lea
xchg
inc
and
cmp
rol
jmp
sbb
pop
out
push
jns
pop
mov
enter
jae
push
rcl
push
mov
in
test
jnp
push
outs
int3
cmc
add
movs
outs
jnp
imul
daa
push
cmp
ret
mov
push
push
out
xor
gs
mov
mul
push
xchg
adc
inc
and
mov
pusha
movs
inc
pop
movs
push
jp
pop
call
movs
pop
cli
movs
pusha
sbb
pop
cmps
data16
push
cmps
ins
fisub
sbb
add
stc
add
add
sub
add
add
add
xchg
add
add
and
and
bound
movs
adc
adc
jb
in
in
xor
or
push
push
xchg
xchg
xchg
mov
mov
push
sub
sub
rcl
sbb
sbb
jp
hlt
repnz
adc
or
stos
lods
cmp
cmp
pop
pop
xchg
call
add
dec
dec
ins
data16
adc
outs
ins
xor
sub
jle
inc
ds
mov
and
jmp
fdivr
cli
cld
mov
mov
pop
pop
movs
sahf
movs
or
adc
push
add
data16
cmps
movs
adc
adc
jbe
pop
push
pop
pushf
xchg
pushf
ins
outs
ins
sub
sub
push
and
jle
lods
scas
lods
cmp
cmp
call
push
test
(bad)
mov
es
cmps
movs
je
je
out
xor
xor
or
push
push
xchg
xchg
xchg
mov
mov
(bad)
aam
push
sbb
div
adc
adc
pop
pop
or
or
push
or
dec
dec
ins
data16
sbb
sbb
outs
je
cs
jle
inc
ds
mov
sub
sub
out
in
mov
fdivr
(bad)
cld
fs
fs
or
data16
adc
sbb
outs
je
cs
jle
lods
scas
mov
ds
pushf
sahf
pushf
add
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
push
adc
mov
mov
mov
(bad)
mov
leave
mov
cmps
into
retf
mov
(bad)
ror
mov
(bad)
test
fcmovb
mov
jecxz
fsub
fild
(bad)
mov
sar
clc
test
inc
push
pop
sub
jmp
inc
add
mov
and
ja
jmp
jbe
or
xchg
adc
adc
xor
xchg
mov
int3
jl
jno
pushf
xor
xchg
in
dec
mov
adc
and
imul
mov
movs
jb
and
clc
xor
lea
lods
inc
test
shr
in
addr16
inc
(bad)
ins
loope
cmc
sub
loop
mov
adc
cmp
outs
pop
ror
in
imul
mov
dec
mov
pop
fst
xchg
mov
leave
mov
clc
mov
ror
cmc
test
xlat
lahf
pop
cmovle
jp
dec
mov
fist
pop
out
dec
lahf
movs
dec
jmp
jae
sbb
std
push
jp
fstp
sbb
mov
mov
mov
xchg
(bad)
enter
retf
test
popa
sub
out
icebp
or
call
inc
cs
leave
ja
push
cmp
add
sbb
add
jbe
jp
lods
xchg
data16
dec
lahf
and
adc
or
es
xor
test
sbb
mov
sbb
adc
push
dec
pusha
adc
xlat
jno
dec
test
jle
rcl
fwait
jg
mov
enter
sub
push
dec
jo
cdq
ror
pop
fsubr
in
fcom
push
call
das
repnz
and
cmps
and
mov
pop
xchg
xlat
fmul
imul
inc
add
es
imul
add
movs
push
or
popa
push
cmp
daa
adc
mov
jb
push
arpl
fldcw
push
xchg
mov
fsub
jp
sbb
or
mov
cli
mov
popa
cmp
jmp
cmp
gs
push
call
sbb
mov
test
in
mov
jmp
xchg
pop
pop
and
fwait
push
sbb
bound
cwde
movs
lahf
fs
xchg
cmp
push
cmps
test
mov
and
pop
out
jle
or
sub
jbe
(bad)
(bad)
jmp
jno
dec
sbb
lods
fcom
ja
pop
push
(bad)
xor
pop
fs
jle
imul
xor
jns
lock
mov
rcr
ret
jo
mov
jmp
stos
jo
adc
sbb
xor
push
pop
jg
and
jle
sub
inc
sbb
div
fmul
pop
jmp
loop
xor
pusha
mov
repnz
hlt
js
ins
mov
fnstsw
xor
(bad)
cwde
xchg
dec
fld
in
pop
outs
mov
int3
icebp
retf
push
test
out
jg
daa
push
sbb
push
stos
jecxz
xchg
or
test
iret
frstor
mov
mov
xor
jl
jmpw
mov
jmp
jecxz
int3
cmps
retf
cli
lods
sar
or
(bad)
mov
mov
pop
dec
scas
daa
jbe
pop
fcmovnu
xchg
fnstcw
sahf
and
cmp
fdiv
test
pop
cdq
lods
push
mov
cmps
cmps
dec
fisttp
stos
xlat
mov
(bad)
clc
pop
sti
pushf
push
shr
jmp
loop
mov
fs
dec
xlat
mov
stos
xor
dec
pusha
shr
pop
iret
or
add
sbb
inc
lahf
xor
clc
add
call
and
or
mov
add
jne
sub
xchg
mov
repnz
stos
data16
mov
cmp
pop
or
test
inc
(bad)
inc
push
bound
inc
adc
jae
add
add
rcr
test
dec
aam
gs
daa
mov
and
sub
add
cmp
or
adc
or
popa
mov
sbb
sahf
sub
add
sahf
mov
xor
sbb
imul
dec
sub
and
lea
shl
dec
cli
inc
test
sbb
mov
push
and
sub
and
test
xchg
jnp
add
jns
sbb
cld
sbb
pop
jmp
jns
jb
pop
xor
leave
jno
xchg
xchg
gs
and
mov
mov
in
imul
into
inc
shr
push
call
mov
sub
mov
loope
popa
add
loope
dec
jmp
jns
push
mov
add
xrelease
imul
pop
addr16
icebp
sub
or
cmp
mov
adc
add
outs
jl
inc
pop
xor
xchg
mov
in
fdivr
fs
dec
sahf
pop
std
sbb
(bad)
lds
and
cld
cmp
sbb
inc
test
adc
lods
fiadd
jp
pop
or
lea
xchg
push
movs
push
retf
jmp
adc
movs
jbe
xchg
dec
std
imul
rol
push
addr16
jge
int
push
pop
nop
out
inc
je
and
jmp
mov
int3
imul
nop
mov
mov
shr
mov
lahf
popf
es
mov
mov
std
cmp
outs
push
xchg
mov
or
push
mov
pop
xchg
adc
stos
sub
sbb
jmp
mov
rcr
xor
fnstsw
jne
cmc
addr16
xor
mov
sub
jbe
sub
dec
pop
fdivr
dec
mov
in
test
retf
or
shl
dec
aaa
xchg
push
xchg
fisub
repnz
pop
inc
(bad)
sti
jmp
pop
sub
or
outs
add
xor
push
dec
ja
imul
pop
cmp
(bad)
push
adc
mov
mov
mov
mov
repz
dec
dec
pop
push
retf
clc
mov
mov
push
mov
loopne
(bad)
aam
adc
mov
fwait
popa
faddp
push
mov
(bad)
lock
or
(bad)
adc
sbb
outs
sbb
dec
ins
fdiv
adc
addr16
adc
xor
fdivrp
loop
into
jno
repz
sbb
(bad)
add
cwde
mov
(bad)
repz
mov
retf
lods
lods
jb
adc
fstp
mov
fwait
cmp
(bad)
pusha
mov
(bad)
xor
pop
mov
in
fsub
mov
push
jb
adc
hlt
ss
xchg
mov
cld
jmp
arpl
xor
(bad)
mov
mov
pop
int
popa
pop
fcmovnu
movs
mov
in
inc
sti
sbb
std
mov
ds
sbb
sub
pause
add
lahf
aam
ss
cmp
shl
push
sub
dec
cli
mov
jbe
das
std
ins
dec
sti
mov
test
imul
fist
mov
fdivr
sub
or
mov
fsubr
xchg
fidivr
out
icebp
xchg
(bad)
mov
cmc
ins
jno
add
in
push
xor
cmp
mov
jns
cmp
dec
push
mov
outs
dec
out
(bad)
ret
mov
enter
movs
neg
int3
imul
inc
cmp
mov
dec
std
rcr
stc
mov
mov
inc
(bad)
jns
or
lahf
dec
jl
adc
outs
lahf
mov
js
lea
in
or
pop
(bad)
into
jbe
jae
in
push
mov
mov
in
shl
sub
mov
push
jnp
inc
mov
call
fwait
jmp
fstp
jbe
fucomi
repnz
(bad)
cmc
push
cmp
test
scas
fstp
jge
lahf
idiv
ret
and
clc
ret
ja
in
gs
cmp
imul
jecxz
in
mov
(bad)
into
jno
inc
cmp
rcr
dec
icebp
ins
stc
mov
(bad)
cld
or
mov
mov
lock
hlt
sti
cmp
sahf
mov
sbb
fnstcw
out
js
js
out
in
jb
pop
jno
aaa
ja
mov
repz
ja
(bad)
jle
(bad)
jne
pop
js
pop
add
adc
jnp
inc
sbb
js
adc
pop
out
mov
sub
jl
fs
in
adc
or
sub
enter
cmp
and
jg
inc
and
jle
sub
pop
jns
pop
add
adc
add
pushf
pop
xor
aas
out
jg
idiv
inc
push
dec
enter
pop
dec
sub
sbb
or
pop
jns
mov
or
gs
call
gs
and
jns
mov
mov
in
(bad)
js
call
ins
call
jp
popa
pop
call
jp
or
cmc
mov
cmps
xchg
call
sub
xchg
test
jl
daa
mov
mov
lea
js
xchg
jg
js
push
enter
cmp
mov
cmps
mov
popf
push
jg
enter
jo
cmp
dec
js
daa
jle
out
call
xchg
dec
jp
js
cmp
cmp
dec
fdivr
sub
xchg
test
add
jns
mov
cwde
push
push
push
in
call
and
loopne
mov
lea
js
pop
sub
jg
xchg
out
out
xlat
test
dec
adc
sub
jg
clc
pop
lea
jmp
outs
sub
js
pop
push
jge
xchg
jns
cdq
xchg
clc
mov
adc
enter
jle
pop
mov
xchg
(bad)
xchg
ja
daa
xchg
or
nop
ds
sub
lea
mov
push
push
cwde
(bad)
jbe
xchg
push
stc
add
test
mov
push
or
neg
xchg
push
pop
xchg
cwde
pop
xchg
cmp
das
fld
xchg
jbe
mov
mov
(bad)
xchg
and
loop
(bad)
std
mov
or
add
cwde
or
test
add
push
cmp
jns
ja
nop
test
dec
dec
xchg
cmp
mov
mov
call
out
call
stos
pop
fwait
addr16
xchg
mov
test
cwde
xchg
or
lea
cdq
test
mov
push
ss
mov
outs
sub
cmp
fmul
or
or
cmp
cmp
sbb
mov
fcomp
push
test
stc
sub
cdq
mov
xchg
aam
xchg
pop
test
ins
call
dec
pop
lahf
cmp
popf
sub
mov
xchg
bound
xchg
dec
call
pop
mov
in
xchg
and
mov
call
(bad)
in
mov
jle
xchg
stc
mov
jmp
xchg
cwd
mov
test
xor
xchg
xchg
mov
mov
or
jmp
cmp
aaa
or
leave
mov
sbb
ficom
mov
mov
fsub
pop
lahf
lods
sub
mov
push
inc
push
adc
xchg
or
cmp
push
icebp
jmp
out
cwde
lea
movs
out
cmp
pop
cmps
mov
mov
cmp
cmps
xlat
stc
lahf
fistp
out
fwait
xchg
stos
mov
add
push
outs
or
xor
call
lods
pop
and
or
js
fnstsw
xchg
jmp
sahf
shr
dec
sbb
aad
stos
push
rcl
jmp
xchg
sbb
lods
out
sub
mov
sub
scas
lds
inc
push
jae
sahf
push
cmp
cmps
leave
jp
ins
dec
cmps
adc
lahf
and
movs
or
or
scas
les
scas
into
stos
cmps
pop
xor
add
and
lods
jg
mov
jmp
add
jp
dec
nop
mov
jmp
lods
sub
cmps
out
xchg
jb
test
call
mov
and
pop
xor
lods
out
dec
mov
mov
cmps
sti
call
mov
and
fwait
mov
cli
lods
cmp
sti
mov
stos
lods
jnp
mov
shl
mov
sti
mov
cmp
jb
xchg
mov
mov
scas
cmp
dec
add
jo
daa
shl
popf
mov
mov
mov
retf
mov
sbb
fwait
mov
pop
mov
jmp
lahf
or
sbb
jmp
sub
pusha
mov
dec
mov
jnp
scas
pop
mov
retf
mov
fild
cmp
pop
mov
or
sti
mov
mov
or
fimul
scas
xchg
pop
add
push
mov
lock
mov
xor
sub
fstp
jmp
mov
mov
or
retf
mov
sub
stos
fwait
stos
fsubr
add
xor
mov
mov
add
adc
ins
movs
add
mov
jnp
adc
add
cmp
lock
or
adc
add
mov
add
fiadd
xor
add
in
ret
adc
mov
ins
add
and
adc
cld
ret
inc
lods
xchg
add
les
ret
pop
dec
mov
add
cld
scas
sbb
mov
ins
lds
mov
mov
popa
dec
les
add
add
add
jp
out
push
jl
enter
push
ret
aaa
nop
lods
jno
les
push
push
enter
mov
ret
arpl
sub
mov
loopne
pop
inc
add
mov
xor
mov
mov
mov
xchg
retf
retf
push
int3
leave
jp
mov
mov
mov
mov
pop
int3
xor
pop
jo
pop
mov
inc
and
dec
nop
(bad)
mov
add
or
(bad)
hlt
dec
int
lods
lds
mov
cmp
fisttp
fmul
mov
add
into
shr
add
add
pusha
retf
out
add
pushf
retf
into
mov
iret
hlt
cmp
call
into
or
out
in
mov
int3
shr
cmp
in
fmul
or
cmc
fmul
test
shl
ins
retf
imul
push
iret
test
mov
shr
iret
or
ror
cmp
sub
aaa
popf
int
call
shl
or
ds
sub
aam
fmul
mov
rol
or
inc
in
ror
or
adc
pop
jo
adc
mov
sub
adc
mov
add
int3
rcr
shr
cld
retf
push
mov
ins
jge
and
mov
dec
pop
rcl
ror
mov
push
std
rol
into
or
fstp
sar
fdivr
rcl
ins
fcomp
(bad)
(bad)
jl
fst
add
pop
shr
test
jno
stos
add
aad
popf
fmul
in
fdiv
dec
fist
ror
dec
fnstcw
sub
sbb
pop
fst
ror
cmp
stos
ins
fiadd
and
sbb
shr
mov
ror
ffree
sub
pop
mov
(bad)
fldenv
popf
retf
lock
mov
(bad)
pop
fsubr
fdiv
sbb
and
loop
fsubr
pop
fstp
loopne
cmp
add
movs
sub
loope
add
in
fcomip
pop
fistp
rcl
pop
loope
sub
shr
loope
sbb
xlat
(bad)
fst
mov
xlat
cmps
(bad)
or
dec
lods
xchg
jle
mov
retf
nop
pop
shl
into
into
int
jecxz
aad
inc
mov
sub
pop
mov
pop
xor
in
(bad)
jge
int3
(bad)
fsub
sbb
push
or
mov
xlat
test
shl
(bad)
fcom
cmc
pushf
in
fsub
cmp
fbld
sbb
imul
sub
loopne
dec
xlat
out
jl
in
sub
xlat
cmp
add
in
int
stc
mov
jecxz
loop
or
das
ds
lods
jecxz
ins
into
jb
out
out
iret
push
popf
int
(bad)
fadd
pop
out
mov
xchg
fucomp
inc
into
fsubr
mov
iret
lea
jmp
fistp
jmp
cmp
pop
cs
mov
aad
mov
addr16
loop
cld
fdiv
jmp
push
loopne
pop
call
mov
loope
fistp
fmul
add
pop
(bad)
jmp
pop
loop
or
cmp
or
movs
cs
cld
in
test
jmp
sbb
cmps
fucom
sub
out
(bad)
out
mov
fsubrp
sub
sub
iret
out
jmp
mov
in
push
mov
stos
ins
call
cs
push
nop
out
push
push
out
or
push
nop
out
out
sahf
loop
sbb
mov
add
std
(bad)
jge
call
aas
stos
pop
and
mov
icebp
cmps
jle
or
lock
int3
fidivr
pop
out
mov
int
sbb
neg
sbb
cmp
loopne
nop
in
rcr
add
(bad)
dec
fsubr
out
fiadd
fstp
or
lahf
out
in
jmp
mov
aaa
das
fild
pop
loop
psadbw
cmp
js
in
mov
call
scas
(bad)
hlt
mov
adc
add
pop
into
in
iret
pop
dec
jmp
lods
jmp
dec
out
call
out
imul
test
out
sub
stos
sub
add
test
adc
add
fistp
adc
out
imul
mul
cmc
xchg
cmp
cli
or
inc
sahf
fstp
pop
aas
sti
jge
hlt
lods
das
repz
enter
sahf
sti
pop
iret
iret
sub
leave
dec
icebp
mov
cld
xchg
aas
cld
retf
pop
clc
inc
fild
cmps
(bad)
cmc
xchg
aas
test
test
loop
mov
aad
(bad)
xor
icebp
in
iret
clc
mov
inc
cld
xor
jo
push
js
xor
mov
cmc
rcl
xchg
or
xchg
push
cwde
cwde
js
enter
or
pop
fnstcw
enter
rcl
jmp
cli
dec
cmp
jns
retf
je
sbb
mov
jp
jnp
call
dec
mov
cmp
or
(bad)
leave
dec
or
dec
cmp
or
ins
mov
pop
pop
lahf
mov
or
leave
call
lock
xlat
int
xor
push
lock
es
(bad)
sub
rcl
(bad)
adc
push
cmps
mov
mov
and
out
sbb
push
mov
pop
jp
dec
ficom
fs
movs
and
or
test
mov
dec
pop
mov
movs
popa
movs
test
imul
(bad)
test
push
mov
cmp
and
(bad)
or
lea
dec
mov
pop
ss
jp
ins
movs
aad
inc
mov
fisub
je
stos
push
push
fsub
or
xchg
js
lods
jno
mov
push
push
jl
inc
dec
fldcw
js
sub
in
pop
ror
pop
pop
mov
sbb
xchg
popf
add
les
adc
repnz
mov
sub
retf
repnz
fisttp
aaa
jp
arpl
cwde
mov
jecxz
js
popf
or
hlt
mov
ffree
mov
cwde
gs
mov
mov
jmp
pushf
cmps
dec
sbb
mov
pop
xchg
sbb
inc
mov
xor
pop
das
xchg
ja
push
lea
push
xchg
pop
sub
fnsave
(bad)
push
ja
push
xchg
fbld
cmps
and
pop
(bad)
popf
sub
jns
enter
xor
out
dec
ror
lock
add
mov
repnz
mov
inc
(bad)
arpl
push
dec
add
push
push
jo
mov
pop
test
rcl
mov
data16
shl
aad
(bad)
fdivrp
aad
xchg
pop
into
mov
bound
fld
movs
pop
pop
out
clc
call
cmc
jns
pop
(bad)
out
aaa
daa
xchg
jmp
jp
mov
and
pushf
adc
dec
lahf
mov
pop
inc
jecxz
dec
push
and
adc
adc
test
push
popf
dec
sahf
or
ins
or
leave
pusha
test
cmc
les
icebp
dec
push
adc
jmp
shr
retf
sub
ret
dec
mov
push
jle
add
mov
cwde
movs
cmp
or
pop
xor
dec
mov
ins
adc
jno
and
data16
mov
in
xchg
outs
mov
push
jmp
pop
mov
imul
ret
fs
cmps
xchg
retf
fnsave
shl
fs
or
ret
adc
cwde
clc
inc
sahf
and
popf
cld
add
leave
cmps
pop
pop
mov
hlt
push
popa
cmp
mov
xchg
enter
sub
adc
xor
xchg
ins
scas
and
dec
call
sbb
je
dec
in
stos
jo
cli
adc
lods
scas
push
outs
push
bound
stos
xlat
push
retf
sub
das
test
ffree
xchg
xchg
sbb
call
dec
dec
inc
fsub
pop
aad
test
xor
aas
mov
jmp
mov
aas
out
pop
xchg
mov
adc
or
push
mov
in
lods
jne
ja
mov
iret
and
mov
sub
fimul
pop
repnz
adc
pop
mov
adc
dec
popa
(bad)
outs
cs
(bad)
push
(bad)
pop
push
sti
inc
ror
ror
loope
pop
pcmpeqb
sub
cmp
sahf
cld
iret
mov
fimul
xor
adc
popf
cld
int3
cmps
(bad)
iret
mov
jnp
enter
enter
jb
std
xchg
scas
mov
pop
dec
je
sbb
mov
(bad)
int3
xchg
mov
(bad)
push
mov
(bad)
ins
mov
mov
cdq
xchg
(bad)
jo
jmp
repnz
cli
add
pop
clc
xchg
aaa
cmp
test
js
ret
fucom
mov
ror
ins
inc
jecxz
stc
push
daa
inc
add
or
test
out
pop
or
out
cmps
mov
and
pop
adc
dec
xor
arpl
daa
or
xor
inc
enter
sahf
popf
xchg
test
repz
xor
scas
mov
pop
(bad)
fdivr
sbb
inc
dec
xchg
mov
cmp
sbb
or
fmul
scas
js
enter
jbe
mov
jae
adc
dec
ret
mov
and
mov
push
jb
and
sbb
ds
iret
je
mov
sub
les
xchg
xchg
mov
mov
outs
repz
cld
or
inc
sub
ja
test
daa
arpl
inc
dec
bnd
fistp
dec
xchg
pop
scas
mov
test
(bad)
dec
mov
iret
retf
sbb
add
das
jp
or
out
add
jae
adc
add
adc
dec
add
cmp
lods
push
xchg
outs
add
out
test
add
adc
les
and
xlat
enter
daa
mov
xchg
mov
stc
sbb
add
aam
das
(bad)
inc
push
test
ja
add
mov
push
jecxz
mov
jl
sahf
xor
or
movs
push
xchg
test
or
sub
xchg
xlat
hlt
pop
add
push
arpl
inc
or
add
sbb
push
inc
iret
cwde
pushf
(bad)
fcomp
mov
push
movs
xchg
daa
ja
xor
cmp
(bad)
ror
adc
(bad)
je
dec
mov
aas
jmp
pop
push
stos
aad
add
lds
mov
hlt
test
sahf
xchg
shl
mov
xor
xchg
inc
or
neg
inc
pop
leave
xchg
add
pop
out
dec
dec
mov
xchg
fistp
scas
adc
mov
(bad)
les
ret
add
adc
(bad)
jmp
add
stos
rcl
push
fidivr
fs
outs
retf
retf
scas
push
mov
std
pop
aad
inc
repz
inc
add
add
fistp
xchg
cmp
ins
scas
jbe
pop
add
pop
push
retf
fucomip
sbb
mov
add
xchg
jmp
repz
or
adc
aam
or
cwde
jo
(bad)
lock
js
xchg
add
cmp
rcl
mov
dec
ret
push
ficomp
cmp
xchg
xchg
adc
cmp
add
mov
outs
or
add
popf
inc
add
nop
jecxz
lahf
neg
data16
daa
mov
jmp
outs
xchg
sbb
pop
push
mov
xor
mov
loopne
and
sbb
or
add
js
enter
cdq
pop
xor
cld
xchg
stc
int
push
xor
jbe
fadd
jp
mov
in
mov
fcomp
mov
sti
mov
outs
pop
add
adc
aas
inc
aaa
call
pushf
out
neg
inc
es
add
sar
ja
sbb
shl
mov
jnp
arpl
xor
and
arpl
(bad)
sti
cmc
lds
jp
inc
adc
sbb
sti
int
mov
movs
imul
adc
or
add
ins
out
aas
pop
retf
jnp
jne
cmp
imul
div
xor
pop
xor
jb
pop
iret
sub
jb
xchg
popf
ins
add
leave
fdivr
ins
jns
cmp
call
add
jl
test
cmp
cmp
dec
xor
test
pop
loop
es
sub
mov
add
jecxz
mov
test
loopne
inc
loopne
enter
add
sbb
push
(bad)
cmp
lahf
mov
out
push
mov
lahf
aas
add
rcl
adc
sahf
lock
call
pavgb
in
std
jmp
jne
data16
jmp
xchg
out
add
in
(bad)
sub
aam
(bad)
je
imul
pop
(bad)
sti
ror
lods
ror
dec
cmps
push
js
outs
mov
jnp
or
jne
mov
out
outs
out
jnp
add
or
mov
cli
ficom
pop
enter
fsubr
pmuludq
sbb
leave
repz
inc
idiv
ret
mov
jmp
xlat
shl
add
lahf
inc
ret
adc
add
fs
in
outs
js
pop
ds
mov
outs
int3
sbb
lock
scas
cli
loop
cli
add
(bad)
pop
loopne
(bad)
clc
push
das
js
cmp
and
fisttp
out
lahf
push
pop
pop
mov
loopne
lahf
cld
fs
pop
lock
jl
or
cld
jecxz
ds
out
jge
cmps
jle
push
jg
push
jns
out
ins
div
ds
adc
dec
invd
and
xor
inc
add
pusha
or
popa
and
adc
inc
adc
xor
cs
mov
jbe
push
ss
jbe
pop
je
dec
jns
pop
jne
pop
sub
imul
js
mov
mov
add
mov
sub
(bad)
xor
sub
mov
jns
fadd
add
and
or
add
mov
xor
imul
or
push
lock
sub
push
add
jo
inc
add
mov
imul
div
sbb
mov
pusha
ja
pop
test
add
add
sbb
sub
pop
ror
nop
cmp
sub
sbb
mov
dec
dec
js
call
jne
mov
cs
add
leave
jecxz
jb
lea
ins
dec
xor
adc
ja
ror
pop
cwde
or
arpl
outs
mov
addr16
mov
pop
jl
add
pop
mov
dec
inc
mov
dec
mov
jp
sbb
or
pop
jg
fnstenv
ret
add
mov
dec
xor
mov
lahf
clc
jg
adc
sbb
jmp
sub
and
sbb
and
sub
jne
jmp
or
cmp
mov
dec
push
add
mov
adc
adc
call
lahf
push
mov
mov
cwde
jo
mov
mov
xchg
pop
sbb
enter
and
inc
xchg
(bad)
clc
add
mov
pop
push
push
add
or
cmc
test
inc
inc
xchg
pop
mov
cs
xchg
mov
inc
adc
xlat
test
jle
test
and
cwde
sbb
cdq
sub
cwde
mov
pop
(bad)
xchg
add
or
jmp
xchg
stc
xchg
cwde
xchg
addr16
xchg
push
mov
inc
jmp
push
push
cdq
sbb
cmp
imul
clc
push
xor
push
imul
inc
rol
mov
loope
ja
test
cmp
xchg
sbb
imul
aad
xor
xchg
stc
fwait
push
aaa
push
dec
call
ret
repnz
lahf
cmp
imul
and
leave
test
aas
call
lahf
loopne
(bad)
xor
pushf
adc
lahf
xchg
sbb
sbb
mov
jns
jp
sub
lahf
in
sbb
sbb
mov
dec
xor
dec
xchg
(bad)
outs
mov
imul
jbe
cmp
imul
mov
mov
jmp
add
mov
mov
add
and
repnz
mov
and
xchg
sbb
jae
fwait
ds
cwde
add
or
lea
cmp
mov
xchg
dec
jmp
mov
cmp
cmp
sahf
sbb
jo
sahf
rcr
jo
stos
fsubrp
mov
add
retf
mov
cmp
pop
test
loopne
lahf
pop
xchg
rcr
test
jmp
xchg
pop
cmp
cwde
push
and
sub
xchg
sbb
xchg
ds
ret
iret
jp
fwait
sbb
stos
(bad)
xchg
cmp
sti
cli
movs
jmp
xchg
xor
cdq
inc
sbb
rcl
or
mov
test
pop
sub
push
dec
xor
jns
ds
test
mov
imul
and
fwait
lods
out
pop
sahf
xor
stos
ret
cmc
fldcw
mov
cmp
mov
inc
dec
fwait
mov
or
mov
dec
xchg
xchg
mov
cli
mov
mov
cmp
mov
cmps
stos
fwait
loop
mov
push
mov
push
cwde
push
mov
sbb
jnp
xchg
sbb
jmp
mov
pop
mov
retf
mov
or
cmp
mov
inc
cdq
mov
mov
pop
mov
lahf
loopne
test
sub
mov
lock
push
mov
mov
fnstcw
jmp
inc
mov
xchg
dec
mov
mov
jle
mov
cmp
test
pop
sbb
call
fsincos
mov
mov
mov
mov
sub
dec
cwde
xor
mov
jmp
loope
mov
imul
rcr
test
stos
mov
pusha
bound
mov
sbb
mov
(bad)
jnp
icebp
stos
xchg
vphaddwd
lods
mov
mov
stos
mov
jmp
pop
cdq
mov
mov
aam
pushf
movs
fcmovnb
and
xchg
in
xchg
fisubr
pop
and
aam
lods
add
jo
scas
ret
sbb
shl
es
test
mov
sti
test
ud2
mov
mov
arpl
mov
or
mov
inc
cmp
ret
mov
call
jp
xchg
inc
cld
or
stos
xor
stos
mov
mov
jae
mov
or
or
les
pop
mov
test
push
or
inc
add
mov
pop
jl
hlt
cmp
xchg
fsubr
xlat
mov
pushf
mov
jmp
lahf
stos
pop
add
scas
loope
lds
sar
lds
xor
in
(bad)
pop
pop
add
cwde
scas
in
add
xchg
dec
pushf
mov
mov
les
dec
xchg
lea
adc
add
mov
cdq
mov
dec
xchg
cmps
stos
mov
ins
shl
mov
cwde
arpl
mov
in
add
pop
leave
lea
mov
mov
enter
cs
retf
lahf
retf
dec
int3
push
lods
xchg
sub
mov
fisttp
sub
and
push
xchg
pop
or
sbb
rcr
cs
add
cmp
add
jmp
jmp
sub
ret
sbb
pop
ror
fmul
mov
mov
mov
lods
int
sub
les
or
add
in
rcr
ins
aam
pop
ret
sbb
loope
mov
pop
sar
mov
dec
jge
daa
cmp
xchg
mov
(bad)
and
rcl
aad
ins
shl
mov
iret
mov
mov
or
push
sub
mov
(bad)
lock
lahf
or
xchg
mov
ins
sbb
jno
mov
sub
out
dec
shl
mov
xlat
ds
retf
xor
rcl
xlat
mov
leave
dec
popf
retf
mov
mov
test
(bad)
jb
aam
or
pop
imul
ins
(bad)
mov
aam
stos
les
cmp
shr
(bad)
int
leave
int
push
pop
add
pusha
add
inc
add
xor
std
dec
mov
jmp
sub
push
fld
fstp
scas
sti
cld
fistp
(bad)
out
iret
push
int3
fsubr
enter
xchg
jge
pushf
fstp
icebp
mov
loopne
lods
lock
fidivr
fldpi
mov
sahf
dec
fisttp
lods
gs
fisttp
(bad)
fwait
jnp
sbb
iret
add
(bad)
mov
shr
sti
lods
int3
push
outs
fucom
in
iret
inc
popf
retf
outs
ins
ror
cld
ins
loop
ds
sub
fidiv
loopne
ins
loop
pop
int
or
jae
fsubr
fisttp
aad
pop
int
cmp
(bad)
jge
pop
std
loope
xor
push
and
jo
loope
mov
mov
add
or
loop
dec
retf
pushf
sub
sbb
fistp
sahf
loope
ds
fstp
and
mov
jb
fstp
in
cmp
(bad)
mov
sbb
sahf
fucom
inc
fst
pop
push
in
(bad)
out
std
test
lods
out
pop
in
sahf
out
out
aam
mov
sbb
loope
mov
add
fist
fadd
fdiv
mov
sub
sahf
in
jmp
push
jnp
or
sti
fst
xor
pop
pop
push
mov
jmp
pop
loope
mov
and
ja
lds
loop
dec
call
fsubrp
cld
retf
call
push
loopne
(bad)
xor
out
in
test
jb
sar
cld
leave
inc
int
rcr
(bad)
jmp
dec
fcmovnbe
mov
xchg
mov
lock
dec
into
out
xchg
lock
les
jmp
mov
cwde
push
lock
in
dec
in
jmp
xchg
mov
out
out
out
xchg
ret
fistp
and
pop
sbb
mov
iret
out
add
mov
push
mov
xchg
pop
in
stos
add
out
repnz
cmps
sahf
in
aaa
outs
aam
fldpi
lahf
(bad)
es
inc
sub
daa
(bad)
sbb
hlt
ss
in
pop
repnz
jge
fisttp
push
daa
fucomip
rcr
adc
lock
repz
jmp
addr16
in
adc
out
pusha
push
popa
pop
repz
iret
jmp
sub
paddusb
(bad)
loope
mov
add
push
out
jmp
(bad)
gs
dec
mov
dec
pop
out
je
not
call
push
lock
out
hlt
popf
mov
xchg
inc
(bad)
xchg
cmp
cld
pushf
cmc
movs
aas
fstp
test
lock
repnz
hlt
pop
pop
imul
jmp
lahf
fisub
cld
retf
pop
hlt
es
cli
ins
aas
hlt
icebp
mov
jo
hlt
xchg
scas
imul
xchg
(bad)
cli
int3
pop
cld
cdq
push
hlt
inc
pop
icebp
pushf
pop
loope
add
paddd
pop
ds
mov
sti
int
jmp
out
cli
fsubrp
mov
inc
dec
hlt
jp
(bad)
push
or
ret
add
and
sbb
pop
add
test
add
test
cdq
mov
test
sbb
cs
popf
mov
movs
mov
lea
mov
mov
adc
cmp
pusha
aam
pop
dec
xchg
int
aam
fldenv
fwait
mov
loop
cs
sbb
cmps
pop
rol
fild
cs
xor
nop
jmp
inc
jne
or
push
and
and
inc
inc
movs
nop
xchg
mov
jp
adc
mov
stos
or
inc
scas
in
push
cmp
data16
retf
pop
int
into
jnp
rcr
cs
xor
adc
push
pop
sub
xor
and
sbb
adc
mov
aaa
adc
add
adc
cmp
test
xor
imul
js
enter
(bad)
popa
mov
add
mov
repnz
xchg
pop
movs
pushf
lods
inc
mov
lds
sub
mov
dec
push
(bad)
sbb
shl
shl
dec
push
mov
test
xchg
cmps
xchg
jne
push
push
mov
mov
pusha
push
sbb
jmp
in
dec
iret
nop
sahf
in
and
movs
sub
aad
out
xchg
sbb
js
mov
sahf
clc
in
stc
ins
fdivr
adc
inc
test
xor
cmp
pop
or
cwde
jg
imul
or
jne
loope
sub
pop
push
mov
and
mov
(bad)
jge
jns
adc
js
fwait
jl
xchg
ret
sbb
ret
mov
sahf
jns
gs
fdiv
push
ror
push
(bad)
mov
inc
icebp
pop
xchg
pop
and
xchg
inc
adc
sbb
cmp
mov
enter
xor
loope
inc
loop
xchg
jg
mov
dec
call
or
ja
jge
xchg
sbb
mov
mov
mul
call
push
cdq
pop
out
dec
push
(bad)
cmp
out
add
add
and
pcmpeqb
inc
sbb
lods
scas
fisubr
stos
add
push
test
sahf
call
inc
mov
mov
mov
jbe
movs
inc
scas
cmp
pop
lods
mov
add
and
add
in
cwde
or
(bad)
push
retf
push
jecxz
inc
stos
stos
fisub
ins
jl
inc
stos
lahf
movs
imul
sbb
mov
mov
add
push
cdq
ret
rol
xchg
pop
test
xchg
mov
ret
punpcklwd
sub
fdivr
adc
add
leave
call
stos
(bad)
and
es
pop
sbb
out
xchg
ret
inc
or
rcr
xor
or
ss
sub
daa
aas
aas
and
rcl
je
pushf
(bad)
clc
push
xlat
not
arpl
inc
or
bound
push
aam
lahf
jge
or
int
(bad)
ja
pop
sub
push
pop
imul
add
cmp
sub
mov
scas
ins
mov
cmp
add
mov
imul
jecxz
ret
add
jg
dec
add
dec
ja
push
adc
sub
sub
push
sub
in
sub
mov
jp
out
pop
movs
or
outs
sub
jnp
sub
xchg
outs
cmp
push
add
push
push
mov
scas
mov
ficom
sub
movs
cld
ret
psrlw
lds
jge
inc
xor
fild
jmp
(bad)
repnz
das
ds
inc
cmp
push
jl
adc
adc
xchg
cmc
scas
js
nop
add
rol
mov
int
mov
mov
add
push
inc
inc
or
jo
rcl
shr
pop
ror
or
adc
test
mov
shl
adc
out
test
int3
add
mov
loop
add
bound
jle
jl
adc
inc
cmp
js
push
dec
or
xor
mov
mov
xor
sbb
test
data16
test
adc
jbe
test
cmp
les
adc
(bad)
xor
movs
mov
dec
(bad)
out
or
test
sbb
dec
xor
xor
xchg
test
or
jle
shl
add
xchg
sbb
push
xchg
dec
and
aad
leave
sbb
repnz
push
dec
movs
and
div
mov
cdq
inc
mov
cwde
(bad)
sub
dec
repnz
cmovne
dec
dec
adc
mov
dec
outs
push
xchg
jb
cld
fs
(bad)
(bad)
adc
xlat
leave
dec
in
mov
lock
ins
cmps
xchg
fwait
out
mov
dec
jle
repz
add
rol
dec
test
pop
retf
cmp
mov
daa
dec
ror
int
inc
aaa
retf
jp
mov
inc
dec
rcl
dec
test
xchg
mov
test
call
dec
ja
rcr
or
aam
sbb
test
cmps
add
retf
cmp
test
cmps
dec
aad
pop
cmc
stos
pop
int
push
mov
aad
jp
stos
pusha
or
(bad)
mov
cmc
lods
push
retf
mov
stos
pop
out
xlat
mov
int
pop
test
scas
or
ret
mov
dec
lods
bound
retf
fadd
cmp
mov
sub
add
cmp
push
xchg
gs
pusha
dec
cmp
inc
adc
adc
dec
push
mov
pop
sub
sti
fnop
inc
loope
xchg
pop
push
jne
push
int3
(bad)
xchg
mov
and
sub
push
xchg
rcl
mov
cmc
lods
add
jnp
loope
jne
retf
lds
retf
mov
aad
pop
inc
fwait
pop
(bad)
push
ja
xlat
in
imul
ficomp
sar
dec
pop
int3
push
mov
xlat
pop
scas
push
push
loope
clc
cmp
pop
cmps
repnz
mov
out
sbb
dec
mov
(bad)
loopne
rol
or
sar
scas
jl
dec
loopne
ss
mov
sbb
pop
mov
loopne
sub
cs
test
lods
pop
mov
lea
or
(bad)
aad
pop
(bad)
inc
adc
cwde
mov
test
fld
stos
aaa
shl
outs
adc
js
(bad)
adc
xor
push
mov
mov
popa
or
js
adc
mov
dec
js
push
xor
ret
adc
inc
cdq
xor
inc
loopne
adc
adc
sub
int
push
add
push
scas
pusha
jle
jge
in
pop
sub
mov
mov
mov
ja
ins
popa
aad
loope
push
outs
sub
add
cmps
mov
call
mov
adc
mov
or
cmp
or
ins
pop
int3
adc
lods
mov
and
cmp
add
addr16
push
pop
fidiv
cmps
repnz
addr16
retf
bnd
cmp
mov
leave
sub
rcr
jae
imul
(bad)
mov
dec
pop
fcom
adc
je
xchg
mov
xlat
sar
mov
test
rcl
mov
neg
jmp
mov
sbb
call
pop
jecxz
jae
(bad)
ds
and
cmc
jp
jle
daa
js
mov
jg
jg
ins
fnop
mov
(bad)
sbb
lods
xchg
jmp
fs
(bad)
cmp
dec
lahf
mov
ins
pusha
add
cwde
mov
or
jge
cmps
pop
xchg
leave
mov
outs
cmp
fadd
mov
mov
cmp
xlat
imul
add
js
fsubr
(bad)
jnp
sub
jne
gs
jg
push
neg
mov
push
and
repz
and
ins
mov
daa
xor
icebp
(bad)
or
loope
pop
ror
sbb
add
xchg
(bad)
xor
xchg
jge
pop
lods
fbld
mov
xlat
mov
fisttp
fdivr
mov
(bad)
mov
jns
stc
and
in
clc
mov
mov
pop
addr16
push
psubq
push
cmps
je
xchg
cmp
or
shl
mov
out
sar
addr16
das
add
ss
push
cs
dec
fs
xor
jecxz
daa
jnp
xchg
mov
xlat
(bad)
push
jbe
rcl
hlt
add
cmp
add
ins
ja
jle
xchg
mov
jge
add
popa
fisub
xor
and
push
gs
pop
push
data16
push
outs
fwait
xchg
jnp
mov
mov
pop
pop
push
imul
sbb
push
enter
pop
adc
pop
pop
outs
mov
jb
jo
(bad)
push
push
xchg
jge
daa
jno
push
jae
nop
pop
push
test
shl
adc
pop
clc
jo
cmps
pop
hlt
xlat
jg
pop
pop
aas
sbb
xchg
arpl
push
dec
pop
jns
inc
jae
xchg
jnp
xchg
test
mov
add
jb
xchg
daa
jo
clc
jne
cmps
add
ja
push
pop
adc
scas
xchg
push
xlat
ja
cwde
sub
sbb
jne
push
fdivp
pop
and
arpl
ins
inc
jo
shl
rcl
pop
cwde
jg
mov
adc
sub
push
inc
mov
xor
push
and
(bad)
ja
(bad)
jae
call
repnz
pop
push
and
arpl
xor
mov
jnp
fdiv
(bad)
mov
pop
(bad)
daa
jle
or
test
div
add
ins
inc
cwde
test
jae
out
mov
jae
cmp
xchg
ins
fsubp
jb
add
jle
push
xchg
enter
jle
push
or
sar
push
xchg
cmp
inc
jbe
xlat
mov
pop
jo
push
mov
push
aam
mov
xor
fs
(bad)
out
mov
mov
xchg
shl
cli
es
jnp
jmp
popa
(bad)
push
popf
jne
mov
jo
js
jae
jg
push
nop
lahf
test
pop
sti
idiv
xchg
mov
pusha
xor
outs
lods
cmc
xchg
push
xchg
xchg
or
mov
jle
addr16
mov
inc
jmp
mov
jle
mov
sub
add
jle
outs
mov
jno
cmps
xchg
out
xchg
jl
pop
(bad)
xchg
fidiv
out
idiv
mov
aaa
mov
jnp
test
pop
imul
imul
and
fs
mov
pop
inc
sub
cmps
mov
ss
sbb
xchg
adc
jns
mov
inc
mov
or
dec
imul
push
jns
sub
xchg
cdq
jge
pop
mov
outs
or
add
xchg
mov
mov
mov
dec
jp
aaa
xchg
dec
lock
jo
je
ss
jg
test
nop
mov
jne
xchg
jno
es
loopne
xor
adc
sbb
pushf
mov
fldcw
pusha
sub
sahf
sub
popa
push
cmps
fwait
xchg
pop
add
jns
jp
mov
leave
je
mov
add
and
pop
mov
pop
cmp
imul
pop
not
xchg
xchg
movs
add
pushf
pop
cmps
xchg
inc
inc
arpl
sub
sbb
popa
sub
dec
ja
adc
push
fmul
mov
mov
sub
xchg
xchg
pop
and
sub
xchg
jle
(bad)
jo
in
lock
outs
xchg
daa
ins
push
mov
add
push
movs
inc
sbb
cmps
mov
push
jg
push
cli
push
xor
(bad)
mov
cmps
add
inc
cmps
pop
push
mov
adc
cmps
outs
sbb
pop
test
jp
mov
mov
test
cli
test
sbb
pop
test
call
test
cmp
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
arpl
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
push
js
in
popf
or
iret
push
push
div
jnp
jne
leave
int3
add
inc
adc
add
ret
loop
retf
sbb
enter
mov
sbb
pop
add
inc
adc
(bad)
inc
adc
and
int3
repnz
fdivp
call
dec
enter
xchg
pop
mov
imul
fcomi
push
popf
cli
aad
push
cmps
stos
fs
imul
mov
jmp
retf
mov
inc
add
(bad)
in
cld
out
(bad)
ins
pop
shl
psubb
adc
or
call
lods
neg
(bad)
mov
push
cmp
push
aas
in
fnstsw
ins
(bad)
jne
ins
fbld
fcomi
js
mov
(bad)
pop
mov
jo
mov
dec
outs
mov
push
dec
cmp
jmp
daa
outs
fistp
test
fistp
fisttp
jp
xchg
adc
outs
ds
xchg
int
dec
fidiv
(bad)
pop
fdiv
lods
outs
mov
cmps
outs
call
push
mov
mov
fcomi
ins
(bad)
(bad)
dec
mov
sub
add
sbb
ins
fidiv
adc
jg
add
mov
fsubr
mov
std
pop
jl
jmp
inc
nop
iret
push
cmp
inc
sti
sub
push
pop
dec
daa
fisub
mov
fwait
dec
mov
dec
mov
mov
movs
out
cmp
popf
mov
mov
mov
ss
movs
sub
imul
mov
cmp
(bad)
test
(bad)
fnsave
outs
(bad)
mov
jo
icebp
(bad)
pop
ja
mov
pop
ja
or
sti
xchg
shl
xchg
ror
mov
retf
out
fwait
imul
fisttp
mov
(bad)
retf
aam
sub
mov
rcl
ja
ss
pop
(bad)
hlt
add
mov
inc
push
clc
xchg
jno
pop
and
xchg
push
cmc
sub
jae
nop
fistp
fidivr
loopne
out
inc
jle
shl
jns
movs
int3
dec
into
out
push
jae
cld
dec
repz
jbe
test
iret
pop
shl
stc
xchg
out
popf
mov
xor
cwde
out
dec
fwait
mov
icebp
repz
int
sbb
jbe
(bad)
clc
mov
stc
jecxz
fdiv
fnsave
stc
dec
repz
dec
xchg
dec
mov
sti
lds
and
and
sbb
test
jne
sti
and
cdq
mov
inc
add
std
ret
(bad)
test
sub
rol
xchg
dec
rcr
pop
das
and
neg
das
(bad)
nop
(bad)
mov
sub
push
mov
stos
ficomp
test
jmp
repz
mov
ss
out
shr
push
data16
jmp
repnz
out
xor
dec
lds
pop
and
adc
dec
mov
inc
lods
adc
std
(bad)
sub
shl
xor
sbb
test
dec
in
and
adc
call
mov
cmp
popa
mov
pop
cmp
mov
std
xchg
test
pop
jmp
cdq
mov
movs
test
stos
and
ret
inc
jmp
adc
enter
sub
add
xor
sbb
push
ret
sti
cmp
xchg
cmp
or
jge
jmpw
add
cdq
pop
pop
jb
or
pop
test
push
dec
cmp
and
push
sti
stos
sub
adc
and
mov
pop
sar
inc
jns
call
sbb
imul
test
ds
mov
dec
movs
xchg
into
fs
mov
jo
cmp
and
imul
inc
dec
scas
xchg
cld
inc
sub
ds
push
xchg
lods
xchg
add
cmps
pop
and
mov
lahf
sbb
mov
test
mov
lahf
inc
add
test
jo
jns
push
aam
int
sub
retf
scas
aam
add
out
or
mov
ds
sbb
mov
push
cli
mov
mov
dec
movs
dec
dec
cwde
leave
dec
push
inc
pop
push
adc
sbb
and
cmp
jne
sbb
icebp
out
mov
xchg
movs
aad
push
push
mov
repnz
aas
popa
test
pop
push
cmp
sbb
pextrw
push
and
xchg
inc
cmp
clc
mov
sbb
xor
sub
daa
push
orps
inc
idiv
sbb
aad
push
push
fwait
jbe
movs
aad
xlat
es
test
retf
push
jle
cmc
push
push
stos
aaa
or
and
adc
icebp
or
addr16
movs
inc
daa
dec
xchg
(bad)
dec
aam
ss
xlat
mov
sbb
and
fldcw
cdq
mov
div
sti
and
add
mov
jecxz
cmc
mov
push
(bad)
aas
push
adc
aaa
mov
sub
push
mov
xchg
in
es
repnz
cmps
addr16
lahf
out
lea
mov
mov
fwait
sub
push
mov
shl
xchg
(bad)
in
jle
gs
mov
inc
cmps
cs
cdq
mov
ret
pop
es
(bad)
jle
push
mov
lahf
xor
fwait
inc
cmps
out
loope
pop
xchg
adc
push
push
cmp
dec
lea
int
sub
xor
repz
push
sbb
fadd
jno
xor
aad
pop
aaa
jns
jmp
sahf
into
dec
in
sub
aad
aas
scas
loope
setb
addr16
jmpw
jnp
in
enter
jmp
sbb
lods
scas
ret
sti
sub
(bad)
jle
push
mov
lahf
xor
fwait
inc
cmps
out
loope
pop
jb
ret
and
(bad)
jno
movs
dec
jmp
inc
sub
jne
jne
jne
cmc
mov
in
cmps
scas
repz
neg
in
mov
mov
cmp
sbb
addr16
std
xchg
jno
cmc
inc
fs
(bad)
mov
pop
nop
sar
xchg
xor
pop
jmp
cdq
retf
xchg
test
inc
and
cmp
mov
pop
adc
pop
std
xchg
sub
outs
mov
mov
sbb
call
push
mov
ja
cmc
out
outs
int
out
sbb
mov
cli
push
push
fnstenv
pop
push
xor
std
xchg
sbb
aaa
sub
mov
xor
xchg
fidivr
pop
xchg
pop
cmps
inc
jns
jl
sbb
sub
sbb
or
cli
push
ins
sub
xchg
xor
add
dec
pop
adc
lods
shl
fst
pop
sahf
cmps
jmp
out
mov
mov
mov
call
jmp
jne
and
fidivr
movs
fwait
loopne
std
adc
pusha
xchg
adc
jge
sbb
cdq
out
cmp
into
cdq
mov
pop
aas
add
test
loopne
inc
out
xor
pop
je
je
and
into
xchg
ret
loop
cmp
cmp
mov
push
xor
les
cwde
and
push
jg
call
cmp
cmp
adc
jb
mov
xor
pop
dec
cmps
icebp
fnstenv
add
popa
sub
dec
xlat
(bad)
std
xchg
test
scas
mov
xor
sbb
mov
or
dec
fnsave
jne
sti
and
xor
std
adc
aam
mov
mov
xor
ret
and
jmp
jmp
push
popa
mov
pop
xor
jno
pop
hlt
pop
aad
push
pop
test
mov
imul
leave
mov
and
in
dec
hlt
retf
test
shr
cmp
add
mov
jmp
mov
ret
or
add
and
bound
fidivr
cmp
gs
pop
mov
inc
repz
or
jmp
leave
push
aaa
xor
mov
lods
inc
sbb
jbe
inc
and
add
js
icebp
jo
icebp
mov
xchg
xchg
xchg
mov
imul
int3
lds
(bad)
and
ret
xchg
daa
sub
and
and
cli
pop
(bad)
leave
sbb
rcr
sbb
cmp
pop
jb
adc
lods
cdq
cmp
je
cmps
add
cmp
push
sbb
and
test
cmp
xchg
mov
call
adc
rol
sbb
mov
jmp
jmp
jo
jp
xlat
jnp
clc
call
mov
sub
push
into
fnstcw
and
xchg
dec
mov
cld
cmps
xchg
dec
inc
mov
xchg
test
jae
mov
inc
mov
pop
not
jmp
ret
mov
fsubr
mov
ret
shl
xchg
pop
fwait
fwait
dec
jl
dec
fidivr
xor
push
retf
aam
or
jno
or
cmp
mov
into
nop
and
dec
imul
jnp
pop
imul
xor
add
(bad)
in
pop
out
shr
push
ja
jne
dec
mov
xor
movs
dec
dec
push
pop
xchg
mov
pusha
add
popa
mov
push
push
mov
lods
sahf
mov
(bad)
popa
out
xchg
xchg
movs
adc
and
and
xor
aas
xchg
push
jbe
in
inc
jmp
push
push
adc
sub
repnz
pop
sar
addr16
dec
sar
pop
cld
inc
stos
addr16
mov
mov
ret
fcomp
sahf
lock
xchg
add
mov
pop
xchg
out
iret
mov
icebp
pop
mov
pop
dec
xor
jno
adc
jle
jmp
aam
xchg
call
cmp
out
ror
dec
pop
or
push
dec
scas
xor
test
and
jg
push
gs
aas
xchg
or
pop
ret
popf
push
jge
ds
mov
push
sub
ins
inc
jge
cdq
sbb
pop
jg
and
add
push
cli
fimul
movs
sbb
push
into
scas
sbb
jmp
inc
mov
xchg
test
leave
jmp
cmp
dec
cmps
pop
test
sub
jnp
adc
call
movs
pop
mov
pop
jns
jmp
dec
sbb
or
test
xlat
leave
cli
into
push
pop
pop
push
adc
lods
mov
out
cmp
call
mov
push
mov
jmp
dec
loop
inc
stos
dec
ds
inc
adc
and
ds
mov
and
sub
push
sahf
mov
jae
in
test
cmp
pop
scas
sbb
loope
daa
retf
mov
icebp
(bad)
push
arpl
add
xchg
std
mov
dec
aaa
push
shr
and
ins
or
les
test
leave
icebp
sub
cmp
mov
push
inc
inc
call
inc
adc
out
sbb
repnz
mov
push
data16
mov
clc
mov
pop
pop
mov
ins
int
call
push
aas
xchg
push
mov
mov
pop
mov
pop
cs
jg
jmp
lahf
push
push
ja
cmp
inc
dec
cwde
in
inc
out
aam
das
mov
pushf
data16
xchg
outs
cld
mov
jb
jns
inc
jbe
sub
icebp
push
push
test
cli
push
rcr
stos
xor
scas
ins
cmc
mov
push
icebp
aad
ja
sub
jb
jge
outs
pop
jae
dec
cmp
fucomip
inc
data16
or
lfs
fimul
out
xchg
arpl
mov
adc
outs
in
enter
xchg
scas
ss
cmp
repz
out
arpl
and
cmp
jle
ja
jns
adc
icebp
(bad)
cmp
(bad)
dec
jnp
not
fdivr
mov
jmp
cmp
and
pop
movs
int3
lea
cmp
je
stc
sbb
xor
cld
inc
stc
stos
xchg
push
imul
xlat
ret
icebp
cmc
out
sti
arpl
cmp
mov
dec
xor
sbb
je
fidivr
out
push
inc
sub
inc
gs
retf
jb
jle
push
mov
or
jge
fadd
stos
scas
push
jge
(bad)
xchg
dec
mov
rol
xor
mov
mov
(bad)
mov
ret
iret
sbb
addr16
sti
or
dec
(bad)
and
fiadd
fstp
cli
out
inc
inc
lock
xor
fmul
mul
sbb
and
xchg
out
or
sbb
call
sbb
cmps
xchg
push
or
stos
repnz
add
jns
retf
mov
jmp
inc
xchg
gs
in
jns
add
mov
xor
into
repnz
int
jb
out
ror
push
into
adc
pop
pusha
cwde
xlat
xor
pop
cmp
imul
push
xor
loop
and
jb
mov
inc
sbb
fmul
std
mov
xchg
adc
test
pop
mov
push
mov
or
add
test
(bad)
scas
push
sti
pushf
cmp
in
mov
push
dec
or
push
retf
jns
mov
shl
mov
lods
daa
test
sahf
xchg
fsub
rcl
push
out
imul
movs
inc
mov
test
mov
imul
xlat
sbb
out
shr
jmp
adc
mov
test
ss
lds
or
mov
sbb
mov
cmp
adc
xor
dec
int
add
adc
xor
imul
push
popf
mov
mov
and
lahf
dec
cmp
stos
fisubr
repz
dec
imul
fidiv
leave
aam
daa
mov
mov
jne
xchg
jmpw
push
retf
retf
jp
aam
sbb
pusha
ja
push
rol
adc
cmp
push
cmp
js
sbb
mov
xchg
xchg
sub
mov
and
rep
(bad)
push
jmp
in
xlat
aaa
adc
mov
hlt
mov
cmp
out
scas
dec
pop
jmp
(bad)
icebp
fidivr
or
(bad)
sub
nop
retf
mov
and
or
rol
pop
mov
cmp
xor
daa
mov
inc
in
test
into
add
dec
inc
lea
cmps
jp
out
int
push
addr16
jge
retf
adc
test
jmp
(bad)
push
cmp
icebp
jmp
mov
je
dec
push
ror
fiadd
xor
and
ret
cmc
adc
gs
ins
xchg
sbb
fadd
mov
mov
or
jmp
and
pop
xor
mov
cmp
lds
or
fsub
sub
aad
push
fld
int3
sbb
movs
or
lahf
movs
sbb
lods
xlat
in
and
mov
test
(bad)
sub
jecxz
cmp
cmp
pop
xlat
mov
mov
lds
inc
and
ins
xor
ins
mov
inc
in
jno
jns
test
sub
cmps
sub
icebp
cmp
ss
ja
mov
inc
lock
cld
in
icebp
ret
dec
push
jg
mov
adc
xor
cmp
dec
js
push
or
mov
pop
jno
or
seta
mov
pop
pop
stc
sbb
mov
xchg
sub
adc
pop
ret
sub
lea
ror
and
add
fbstp
push
cmp
call
fisubr
retf
cli
jge
sti
mov
mov
dec
pusha
jmp
popa
or
jl
stc
jmp
push
aas
in
sub
xor
jge
shl
and
div
(bad)
(bad)
xor
sahf
bound
aaa
mov
mov
jmp
cwde
(bad)
and
ficomp
mov
jecxz
shr
repz
jl
in
inc
lahf
test
mov
in
xchg
fwait
mov
cmp
data16
movs
adc
test
adc
mov
arpl
jecxz
xchg
cmps
cmp
mov
and
sub
sub
lods
or
adc
scas
xchg
ds
mov
in
jne
add
mov
mov
push
sbb
jne
call
enter
lods
pusha
push
in
in
aaa
imul
ret
loopne
add
mov
rcr
mov
ds
mov
pop
test
cmps
in
sub
aaa
and
loop
in
je
cmps
cmc
call
push
dec
add
pop
push
mov
js
(bad)
and
jno
cmp
popa
(bad)
jno
mov
mov
push
bound
mov
mov
pop
test
lahf
lods
es
cmp
mov
mov
pop
sbb
shl
sti
mov
mov
adc
and
pop
sahf
jle
add
or
add
jp
enter
mov
daa
fisttp
(bad)
mov
shr
jno
and
mov
retf
in
das
div
pop
push
arpl
and
ss
mov
cmc
retf
(bad)
movs
jg
in
adc
(bad)
icebp
pop
mov
ds
mov
add
cmp
jns
test
sub
dec
mov
pop
push
and
movs
lahf
jne
mov
je
fld
imul
hlt
and
out
mov
das
mov
push
xchg
scas
stos
pop
movs
jp
jmp
int
jno
push
imul
pop
mov
push
into
and
jecxz
inc
adc
and
(bad)
ror
into
push
aaa
aas
add
ds
dec
test
mov
js
cmp
and
call
stc
and
fstp
pop
push
or
dec
jb
lods
dec
arpl
loope
int
lea
xchg
or
test
mov
or
xor
arpl
cmp
or
pop
enter
xor
jmp
mov
lds
xor
mov
inc
in
sub
mov
outs
push
stc
daa
xchg
jg
jns
retf
ds
repnz
cli
shr
sbb
push
bound
push
adc
sbb
clc
inc
xchg
xor
popa
gs
(bad)
jae
retf
mov
enter
xchg
cmp
mov
bnd
sti
imul
stos
mov
xchg
lds
inc
cmc
cmps
inc
mov
(bad)
imul
inc
in
and
jno
push
or
fnstsw
gs
(bad)
ja
(bad)
add
xor
sbb
call
je
mov
and
mov
mov
fnstsw
dec
mov
xchg
and
loop
and
add
xchg
mov
les
jle
in
es
das
je
pop
xchg
aaa
mov
es
aaa
stc
mov
movs
sub
push
jge
sar
dec
mov
lea
add
popf
xchg
pop
or
scas
cmp
add
jnp
ror
sbb
mov
sub
xor
dec
jns
jl
mov
mov
repnz
cs
pop
(bad)
cmps
out
loopne
mov
rcr
or
xchg
mov
stos
imul
inc
hlt
sbb
(bad)
stos
mov
shr
out
sbb
jnp
mov
sti
cmp
iret
xchg
data16
cwde
pop
cli
imul
test
dec
mov
push
mov
test
push
icebp
lock
stos
int3
pop
je
(bad)
or
mov
push
int
mov
test
iret
pop
(bad)
cwde
movs
neg
dec
jmp
outs
mov
loop
adc
pop
stc
adc
in
and
adc
push
in
jl
out
adc
rsqrtps
fimul
test
ret
cmps
(bad)
xor
iret
in
es
push
jns
retf
mov
fild
mov
hlt
sbb
ret
dec
cmp
pop
loopne
(bad)
bswap
(bad)
mov
movs
and
and
stos
cmp
stc
ss
outs
es
test
sub
jbe
loope
mov
rcr
mov
fcmovb
xchg
push
xchg
lods
add
or
gs
push
out
mov
loopne
gs
stos
inc
lahf
sub
repz
push
inc
bound
ja
shr
dec
or
movs
leave
push
mov
push
inc
icebp
retf
push
sub
jno
les
imul
add
mov
mov
push
xchg
popf
cs
cli
xchg
mov
pushf
ja
nop
fmulp
cmp
mov
fist
lea
xor
sbb
mov
mov
loop
jge
mov
bnd
dec
push
sti
sub
xchg
rcr
mov
call
cmp
adc
sub
scas
jp
adc
mov
ss
shl
outs
push
mov
push
sub
dec
xchg
(bad)
stos
ds
cmc
not
pop
lods
inc
mov
xchg
imul
xchg
dec
xchg
jecxz
ret
jecxz
fmul
add
bound
cwde
mov
add
jecxz
push
movs
out
fs
and
push
cs
or
lahf
xchg
xchg
repz
xor
ins
pop
jge
sti
mov
int3
popa
xor
push
and
mov
das
adc
movs
cmps
fwait
lahf
xchg
std
aam
cmp
outs
sbb
add
scas
adc
sub
cmp
mov
dec
fsubp
(bad)
scas
fmulp
shr
xchg
test
inc
mov
scas
dec
cmp
out
push
adc
and
mov
sbb
scas
aaa
retf
jns
xor
adc
pop
in
cmps
jg
cli
ja
jg
jmp
repnz
aas
and
sub
cmp
sbb
and
dec
popf
in
mov
cmp
push
inc
or
or
xchg
mov
stos
loopne
mov
stc
cs
aad
pop
std
daa
aam
scas
imul
jg
(bad)
sbb
shl
pop
add
xchg
ja
je
and
push
into
dec
sbb
test
pushf
sbb
pop
movs
test
sub
(bad)
push
in
test
popf
in
jb
psubsw
das
or
test
stos
dec
inc
dec
mov
rcl
in
test
pop
push
div
(bad)
loope
mov
ja
mov
jmp
imul
push
ret
push
es
sbb
enter
icebp
push
imul
and
or
iret
stos
aaa
stos
test
mov
push
in
xchg
test
mov
iret
call
adc
mov
and
retf
mov
sahf
enter
inc
mov
in
pop
vmovss
popf
dec
out
jmp
xor
(bad)
inc
add
jecxz
and
pop
gs
push
pop
mov
int
out
mov
and
sbb
popf
sti
dec
icebp
adc
cmp
data16
mov
lods
fwait
jo
pop
mov
(bad)
icebp
ss
popf
addr16
cmc
dec
fcom
in
mov
sti
xchg
hlt
pop
pop
pop
rcl
fisttp
sub
pusha
jl
out
sub
dec
(bad)
in
jo
fstp
or
mov
int3
mov
rcr
imul
arpl
mov
sub
push
or
imul
pop
inc
popf
sbb
int3
jns
movs
mov
call
enter
lods
bnd
dec
push
jp
push
sbb
push
shr
daa
mov
call
pushf
dec
xchg
(bad)
push
dec
jae
(bad)
dec
push
xchg
test
adc
mov
push
push
xchg
xor
addr16
scas
sub
jno
sbb
fcomp
mov
mov
inc
stos
pop
add
cmps
sbb
outs
leave
pop
mov
aad
sub
addps
mov
jae
gs
clc
rcl
arpl
mov
mov
push
jmp
shl
(bad)
push
xchg
mov
mov
fiadd
lahf
xchg
test
aaa
mov
pop
ins
jecxz
jne
mov
and
fs
xchg
out
jnp
fistp
std
int3
add
jle
imul
mov
lods
jecxz
popf
iret
les
xchg
adc
loope
mov
outs
std
adc
mov
cmps
cmp
fwait
cmps
mov
mov
jecxz
jg
in
es
fisttp
mov
mov
add
and
jmp
(bad)
imul
popf
jno
and
lahf
adc
mul
shr
jl
jp
int3
aad
mov
fdiv
mov
or
mov
stos
jmp
xlat
stos
cmp
push
mov
mov
xchg
push
stos
pushf
mov
xor
jae
add
jecxz
rcl
sbb
enter
cli
cmp
shr
in
sbb
test
in
pushf
jns
pop
shr
in
adc
outs
mov
xchg
push
sbb
dec
into
xor
xchg
sbb
je
leave
dec
pop
dec
mov
mov
jmp
push
mov
in
mov
cmp
xchg
test
hlt
nop
xchg
push
cmc
jmp
movs
dec
or
loopne
test
sub
fsub
fbld
xchg
hlt
js
(bad)
mov
inc
idiv
adc
push
xor
dec
mov
xor
sbb
lods
inc
popf
cmp
mov
push
test
or
add
lods
sub
sti
test
and
and
jg
jge
cmp
nop
or
lds
pop
dec
test
xor
sbb
xor
mov
cld
loopne
cli
jl
jmp
jg
cs
xor
ss
mov
in
cdq
sub
add
xor
lock
test
push
mov
out
(bad)
in
into
or
push
mov
jns
adc
test
aaa
dec
mov
pop
imul
dec
pop
popf
sbb
add
sub
mov
ret
and
xor
push
cld
jns
fadd
pop
daa
repnz
and
sub
mov
lods
mov
rcl
or
push
push
ins
push
mov
jae
pop
enter
xchg
adc
fist
pop
xchg
mov
inc
(bad)
imul
cmp
inc
cld
inc
mov
jle
inc
shl
cmps
mov
jns
xchg
(bad)
es
adc
jg
sti
lods
stc
cs
mov
push
mov
jecxz
leave
xchg
mov
std
adc
stos
sar
clc
rcl
or
das
in
call
cmp
add
addr16
sub
jp
in
mov
inc
mov
pushf
xchg
xchg
and
test
addr16
in
(bad)
push
test
test
sub
shl
aam
std
xchg
sub
or
in
stos
bound
xchg
sub
lds
xor
stos
call
adc
enter
pop
mov
fwait
pop
out
cmp
push
sub
xchg
dec
pop
adc
outs
and
mov
jp
adc
pop
scas
mov
mov
push
ret
push
js
sbb
rcl
dec
dec
jg
in
mov
jb
and
out
mov
xor
add
pop
push
icebp
xchg
dec
xor
outs
scas
xor
pusha
cdq
mov
and
lea
jp
aam
cmp
not
jne
mov
push
clc
out
adc
inc
repz
and
xchg
push
mov
add
xor
ret
mov
xchg
sbb
adc
sbb
dec
mov
push
call
mov
in
icebp
fadd
push
aam
mov
sbb
imul
int
aam
addr16
in
sbb
mov
jl
sahf
imul
cmp
addr16
call
adc
aam
test
cmp
jmp
push
lods
lods
sahf
dec
sub
or
jmp
xor
and
(bad)
jo
mov
xchg
lock
xchg
xor
jae
pop
cs
mov
pop
or
pop
sbb
xor
out
ror
fistp
cmc
cmp
cdq
mov
sbb
bound
xor
scas
dec
jnp
push
or
dec
and
cdq
mov
xchg
out
dec
out
sahf
into
xor
ficom
call
in
shufps
jmp
fild
xchg
dec
fild
pop
movs
jg
mov
mov
mov
dec
adc
int
fmul
mov
cmp
std
mov
lds
stos
lahf
push
dec
xchg
ror
push
pop
add
in
imul
shl
out
je
cwde
ss
jmp
hlt
(bad)
test
dec
sar
add
aam
fimul
repz
nop
cmp
mov
out
scas
mov
dec
int3
sbb
leave
pop
adc
in
sub
leave
cmp
jne
test
adc
pop
and
cmp
sti
jo
xor
into
test
fsub
fwait
lods
fimul
and
mov
mov
out
push
push
jnp
imul
cmp
sbb
in
push
dec
sub
je
and
mov
mov
outs
xchg
jmpw
cli
jmp
dec
lock
push
adc
mov
jo
pop
xchg
dec
cdq
mov
cmovns
mov
jmp
mov
fadd
mov
hlt
inc
lods
or
pop
dec
xchg
xor
ins
dec
popa
push
fnstcw
and
push
mov
jl
popf
mov
lahf
(bad)
fnsave
jle
scas
js
shr
call
lock
push
loope
jp
enter
test
in
sub
ss
shr
loop
inc
je
addr16
sub
jecxz
popa
in
add
sbb
push
and
test
jns
xor
pop
push
mov
inc
xor
jbe
push
jl
in
mov
jnp
fnstcw
in
ss
lods
retf
lods
sahf
jnp
ins
cmps
mov
cs
push
xor
imul
dec
mov
sbb
inc
cmps
xchg
sti
cmps
xchg
cwde
test
dec
in
sub
inc
test
mov
mov
sub
fidivr
pop
leave
imul
test
jmp
(bad)
in
cmp
dec
adc
outs
dec
xor
cmp
(bad)
jne
pop
cmp
int
ret
push
inc
std
ins
ror
int3
fwait
ins
adc
xor
(bad)
arpl
into
mov
(bad)
loop
or
xor
hlt
shl
pop
mov
in
cmps
aas
out
repnz
call
adc
push
lahf
jno
mov
outs
jg
and
popf
mov
outs
push
test
sbb
cmc
add
(bad)
or
das
mov
push
div
mov
jecxz
out
leave
jne
adc
aam
xor
mov
cmps
sub
push
inc
arpl
jmp
call
lahf
push
retf
stc
push
retf
pop
call
fist
imul
jmp
les
or
push
dec
mov
dec
and
pop
out
mov
test
(bad)
mov
(bad)
sub
ret
push
or
sub
sbb
inc
or
sahf
inc
xor
(bad)
cmp
pop
out
clc
pushf
in
sub
leave
push
shl
test
enter
mov
or
xor
lahf
in
int
icebp
mov
mov
add
or
push
shl
retf
lea
mov
adc
or
fst
lea
mov
xchg
fdiv
fs
clc
pop
cmc
jp
jmpw
xchg
mov
call
mov
hlt
repz
(bad)
jmp
ja
call
cdq
test
or
cmp
imul
shl
dec
sysexit
jmp
mov
pushf
adc
shl
ja
inc
cmp
pop
mov
scas
sahf
xor
cmp
stos
dec
add
ret
add
dec
adc
dec
cdq
rcl
movs
xchg
mov
(bad)
add
sub
shl
mov
out
push
sbb
mov
data16
enter
mov
movs
pop
imul
jno
mov
cli
(bad)
neg
pop
and
pop
jp
inc
lock
cmp
jp
ret
mov
popa
xor
mov
stc
shl
cmps
push
int
sub
ficom
sqrtps
sub
fisubr
sahf
ins
idiv
outs
push
push
pop
add
enter
sahf
xchg
out
sbb
inc
fwait
dec
test
sbb
(bad)
shl
dec
dec
popf
or
in
loope
dec
fistp
repz
xlat
adc
fcom
lahf
sbb
inc
sbb
jbe
ret
cmp
pop
nop
aad
scas
mov
(bad)
daa
loopne
sbb
inc
mov
mov
sub
outs
push
mov
jb
sbb
hlt
retf
into
in
xchg
or
xlat
mov
sbb
sbb
sti
pop
pop
inc
xchg
xor
mov
lods
stos
pop
es
inc
pop
xchg
xchg
retf
dec
inc
pop
das
test
adc
mov
inc
xchg
add
xchg
out
push
int3
shr
inc
dec
stos
inc
xchg
sbb
out
jnp
mov
dec
aas
daa
jle
jmp
das
add
movs
or
ror
cdq
cmc
aam
xor
jno
adc
cwde
xor
fsub
mov
test
xor
clc
movs
jle
xchg
or
push
cmp
dec
rep
sbb
or
push
adc
ds
(bad)
dec
scas
sbb
add
cmp
shl
repz
jp
out
mov
ds
leave
ja
jns
or
int3
cdq
sbb
or
push
inc
mov
jne
(bad)
icebp
add
pop
inc
mov
jle
mov
sub
into
call
push
out
ficom
inc
sub
data16
repz
outs
pop
push
add
icebp
dec
iret
jo
imul
mov
inc
rol
cmp
dec
fstp
hlt
out
jp
jbe
stc
into
and
enter
or
(bad)
popa
rol
dec
sub
les
add
cmp
xor
push
dec
jb
fsubrp
ret
imul
dec
push
mov
xor
mov
in
fnsave
ja
gs
pusha
(bad)
xchg
push
hlt
xchg
dec
jmp
pop
push
cdq
mov
sub
icebp
sub
jp
retf
mov
pop
mov
adc
mov
stos
mov
cmp
out
mov
jo
gs
mov
cmp
out
pushf
int3
push
iret
call
movs
fnstsw
popf
retf
loop
mov
not
cmp
bound
lods
jmp
movs
pop
call
mov
inc
pusha
mov
mov
(bad)
aam
dec
into
ja
jle
add
jbe
push
repz
nop
jecxz
or
stos
ja
pop
ret
mov
stos
cmp
enter
not
push
ja
and
fsub
adc
int3
loopne
jmp
js
cmp
ret
stos
inc
add
or
add
ins
into
xor
test
fnstsw
mov
shl
cmp
dec
mov
fwait
cmp
outs
dec
jbe
jae
fidivr
jp
sub
xor
jo
jae
adc
sbb
and
pop
repnz
outs
push
and
hlt
loope
movs
xchg
lea
shl
xor
(bad)
jo
mov
and
adc
jns
call
imul
je
ret
iret
shr
dec
and
(bad)
xlat
pop
test
pop
mov
xchg
jb
mov
hlt
out
lds
xor
push
jo
fwait
dec
data16
js
add
or
sbb
mov
out
cmp
cwde
ins
pop
addr16
adc
adc
jmp
sbb
pop
push
cmp
ins
and
rol
dec
addr16
bound
jp
inc
mov
sti
sar
fldenv
jb
mov
mov
cmp
in
mov
cli
scas
cs
cdq
in
push
ret
inc
push
and
jp
icebp
cmp
push
ffreep
lods
push
push
(bad)
movs
cmp
dec
dec
push
xchg
cmp
pextrw
(bad)
xor
es
rcl
jp
cld
jp
iret
adc
cmp
mov
dec
stc
mov
clc
sub
cmp
pop
jne
mov
jno
jg
scas
repz
psllq
cmps
repz
bound
cmps
outs
test
push
in
push
sahf
in
jbe
rcl
and
dec
dec
and
fld
gs
cmps
cmp
jnp
cmp
pop
call
(bad)
mov
xor
mov
loop
push
add
sbb
xchg
jno
jp
cmps
in
and
lea
pop
cmp
dec
(bad)
fild
xchg
add
out
rol
jmp
pushf
fucomip
mov
clc
inc
fdiv
icebp
mov
add
mov
lods
mov
popf
add
push
aas
xlat
push
jnp
(bad)
mov
push
cmp
xchg
pop
sbb
sbb
es
out
jno
sub
dec
xchg
dec
arpl
sbb
mov
xchg
ss
mov
(bad)
fs
test
push
call
stos
xchg
or
cmp
in
call
pop
(bad)
movs
dec
and
lock
rcl
dec
xchg
out
imul
mov
dec
adc
push
xchg
stos
out
rcl
mov
fnstsw
sbb
lea
mov
ja
stc
mov
jb
es
test
(bad)
in
cld
mov
jns
jnp
jno
mov
ret
mov
sub
cmps
xlat
stos
aaa
fucomp
fisubr
cmp
je
data16
dec
push
pop
loop
mov
mov
cmc
stos
pop
ds
jp
fnstcw
out
aas
xchg
add
mov
jmp
dec
neg
pop
xchg
mov
dec
mov
pop
cmps
pusha
mov
les
adc
scas
sub
cmps
aad
daa
mov
aaa
mov
jae
mov
xchg
mov
out
lahf
int3
fnstenv
adc
sahf
sbb
das
cmc
rcl
xor
imul
jecxz
dec
xlat
jge
cli
adc
cld
push
xchg
test
mov
jp
mov
pop
test
and
dec
inc
adc
cwde
arpl
and
retf
mov
enter
lock
cmc
imul
push
jecxz
push
pop
aaa
adc
xchg
(bad)
dec
or
push
dec
repz
pop
or
out
repnz
sbb
add
sahf
xchg
xor
push
sti
fadd
inc
stos
or
xchg
mov
jbe
rcr
fwait
inc
mov
sub
in
mov
fmul
repz
fdiv
mov
sbb
mov
mov
cmp
pop
scas
pop
lock
(bad)
in
jmp
ror
mov
mov
cdq
xor
xor
jmp
mov
mov
cs
cmc
scas
cmp
push
loopne
ja
and
fucomi
call
out
rcr
and
sub
test
cmp
xchg
dec
stos
adc
jb
jmp
fmul
jne
push
test
sbb
jo
push
enter
sub
jge
daa
jp
aad
cdq
mov
pop
stos
imul
xor
fiadd
and
sbb
pushf
arpl
cmps
sbb
fwait
inc
idiv
jg
ss
ret
das
push
lods
jb
sbb
cld
test
cmps
test
dec
retf
jl
sub
push
xchg
std
cmp
xor
repz
inc
mov
aaa
scas
jl
jbe
cmp
pop
and
mov
mov
pop
cmp
popf
cmp
adc
push
adc
jo
mov
jecxz
scas
pop
jmp
adc
mov
sub
(bad)
add
or
pop
inc
sub
mov
into
dec
mov
xor
stos
cmp
jo
les
sbb
popa
jne
out
sbb
(bad)
mov
push
xchg
jae
lock
inc
jb
scas
push
dec
mov
ficom
ret
push
loop
jle
pushf
add
sub
cmps
test
test
jl
retf
pop
sub
or
rcr
inc
pop
jmp
xchg
mov
add
xor
pop
and
xchg
jl
in
inc
cmp
into
and
mov
add
pop
dec
add
mov
stos
(bad)
leave
shl
push
test
inc
cmp
inc
lock
cmp
cld
pop
loope
add
xchg
xchg
dec
pusha
adc
cs
lock
rol
aam
mov
add
adc
adc
mov
adc
jecxz
inc
sahf
leave
cdq
cmp
jae
jmp
lods
dec
cmp
jno
push
or
and
jb
dec
loopne
in
icebp
loopne
out
add
retf
cwde
inc
pop
sub
mov
out
jmp
daa
retf
dec
fsub
(bad)
jmp
pusha
je
cmc
int3
pop
aad
or
(bad)
aad
jb
(bad)
lahf
mov
and
jecxz
mov
xchg
jecxz
jl
push
loope
sbb
mov
and
push
fadd
inc
out
xchg
je
mov
cmp
push
(bad)
out
fs
lock
xor
xor
xlat
pop
and
daa
retf
xchg
xchg
mov
inc
mov
data16
add
push
xchg
mov
push
outs
inc
leave
xchg
pop
ja
out
in
out
add
ret
jmp
mov
fadd
add
pop
daa
mov
out
push
sahf
jp
push
jne
mov
mov
sar
or
out
shl
cmp
enter
sbb
ss
dec
or
mov
jae
loope
inc
in
aaa
inc
outs
cli
pop
push
sub
stos
xor
sub
inc
bts
push
(bad)
adc
push
or
jbe
vfmaddsub132pd
jae
daa
ja
ret
xchg
jae
iret
mov
ror
ins
ds
outs
push
lahf
push
fs
dec
jne
inc
or
pop
xor
add
les
int
pushf
leave
(bad)
mov
jno
enter
jbe
test
scas
and
les
mov
pop
xor
aad
ja
je
fld
ins
nop
jl
call
loopne
jns
xor
jns
mov
mov
imul
jnp
lods
jbe
imul
jmp
cmps
lds
and
cmp
inc
jg
test
outs
mov
(bad)
jge
pop
pop
(bad)
mov
pop
push
(bad)
jge
(bad)
xor
jo
test
lss
fwait
pop
mov
xchg
dec
out
movs
add
fwait
sub
add
dec
aas
mov
aam
out
shl
pop
jno
rcr
popa
sub
scas
sub
pop
clc
je
ror
mov
sub
sbb
add
jae
cmps
cmp
inc
push
bound
push
xor
sbb
mov
jo
clc
(bad)
and
pop
push
out
stos
ret
pop
fld
pusha
jg
xor
cmp
dec
retf
mov
pushf
or
gs
mov
pop
push
mov
push
mov
sub
stos
ret
push
ficomp
movs
cmp
out
ins
push
dec
jnp
adc
addr16
adc
(bad)
mov
test
cs
call
push
add
retf
ret
add
lods
out
test
iret
or
repz
fwait
jl
sub
push
jl
pusha
mul
xlat
fst
scas
(bad)
xor
hlt
test
test
xchg
je
lea
or
or
inc
hlt
das
jae
gs
xor
xchg
aas
sar
pop
mov
mov
dec
out
lea
pop
call
sbb
pop
(bad)
mov
(bad)
mov
ret
inc
js
mov
gs
std
and
adc
adc
shl
arpl
retf
mov
and
add
mov
cmp
fist
int
inc
in
adc
xor
call
retf
ret
movs
mov
movs
xor
add
aaa
mov
cmps
mov
stos
imul
add
dec
pop
sub
mov
hlt
cdq
xchg
(bad)
jmp
out
cmp
adc
outs
pop
in
fs
push
xor
(bad)
lods
out
int
dec
repz
jge
fadd
ins
and
fwait
cmp
std
dec
daa
(bad)
mov
sub
scas
int
lods
sbb
and
cmp
mov
je
xchg
test
jne
jmp
jb
repnz
jmp
sub
and
adc
lods
hlt
lods
sbb
neg
mov
shl
movs
jbe
cmp
pushf
dec
iret
and
sbb
pop
and
mov
add
cmp
cmp
into
popa
aad
ret
push
push
sbb
ins
scas
popa
cmp
and
scas
push
mov
jp
push
sub
jecxz
shl
mov
or
int
cwde
addr16
fisttp
int
jle
cmps
jne
int3
inc
gs
aad
cwde
jo
mov
outs
xor
xchg
ja
loop
lahf
xor
fnstenv
mov
cmp
cmp
cmp
inc
jp
(bad)
mov
mov
je
add
cmp
and
cli
out
sub
(bad)
pop
dec
or
(bad)
xor
mov
imul
inc
cmps
xchg
fs
sbb
in
in
ins
xchg
xchg
(bad)
pop
xor
cmp
push
cmps
test
or
sub
inc
rcr
lods
mov
call
cmp
pop
jge
jg
std
cmc
and
mov
pop
jb
stc
push
inc
jo
xor
in
adc
adc
shl
mov
fsub
mov
push
(bad)
sbb
fwait
sahf
and
ins
int3
mov
popf
xlat
xchg
imul
fstp
les
sub
dec
sar
sub
sbb
loope
pusha
stos
sub
jmp
jmp
imul
cmp
push
(bad)
sbb
adc
mov
mov
inc
shl
xchg
adc
sbb
int
repnz
adc
out
cmp
dec
push
fsubr
ficomp
les
rcr
sub
popf
mov
sub
(bad)
sar
jno
sbb
scas
shl
test
rol
test
jp
sub
mov
sub
imul
ja
mov
or
call
popa
xchg
(bad)
shr
aad
or
arpl
mov
xchg
fldcw
(bad)
and
movs
sbb
xor
inc
repz
xchg
jmp
int3
js
sbb
jns
retf
in
fild
outs
aad
lods
mov
lds
or
inc
sbb
ds
xchg
pushf
es
jecxz
movs
xchg
sbb
mov
push
jge
das
xrelease
and
dec
sbb
out
popf
xchg
push
adc
repnz
jg
dec
and
mov
dec
daa
imul
bound
jne
bnd
xchg
out
aad
imul
mov
lea
(bad)
pusha
sub
jnp
js
push
ror
dec
shr
cdq
(bad)
es
(bad)
or
jae
add
into
pop
mov
sbb
je
les
cmp
jnp
out
add
inc
pop
mov
arpl
xlat
inc
cs
sbb
stos
jl
jmp
mov
stos
push
jns
jae
ja
sbb
add
or
push
xor
fnsave
mov
inc
fiadd
js
cmp
int3
add
jge
cld
jne
dec
adc
hlt
popf
mov
nop
imul
push
(bad)
cli
inc
xor
sub
mov
leave
xchg
pop
outs
pop
pusha
jge
push
sub
sub
idiv
int
stc
pop
pop
pop
hlt
or
repnz
pop
dec
and
jae
cmp
jecxz
dec
int3
gs
xchg
ficom
imul
and
pop
adc
enter
(bad)
in
bound
in
mov
jmp
retf
cmp
call
sub
mov
or
ffree
cli
add
shl
xor
repz
fild
jecxz
or
enter
pop
cmp
sub
push
fs
mov
xor
and
scas
loop
xchg
fild
loope
out
and
lds
ins
pop
and
movs
jae
lds
es
adc
jnp
ins
in
push
pop
sbb
mov
cmc
js
div
inc
xor
or
pop
ficomp
cdq
ror
(bad)
retf
inc
das
push
jmp
sub
add
lods
mov
sbb
sub
sub
test
stos
in
jecxz
mov
jb
in
jno
pop
sbb
inc
jmp
sbb
mov
das
jb
retf
cs
rcl
jmp
cdq
cmp
or
movs
ret
mov
call
and
push
push
xchg
xchg
sbb
loope
jp
add
sbb
jne
pop
lds
ins
sar
mov
aad
pusha
daa
je
add
add
lgs
imul
lods
sbb
xor
xchg
sti
xor
cmps
jae
xor
fsubrp
arpl
in
clc
fcomp
into
pushf
mov
jo
shl
shr
sahf
mov
mov
outs
lahf
push
and
lods
mov
std
xlat
into
push
sbb
int
sbb
push
sahf
inc
imul
jmp
rcl
pop
mov
shl
adc
jge
jae
mov
jo
stc
xor
call
jno
jbe
ror
pop
out
push
jl
leave
add
imul
cmc
jecxz
mov
mov
pop
retf
mov
in
xchg
addr16
in
loopne
mov
push
pop
cmc
xchg
xor
and
pop
das
mov
cmp
imul
bound
scas
test
jecxz
cwde
loope
dec
cwde
push
and
dec
fisubr
movs
mov
cmp
scas
push
aad
push
lods
pop
pop
push
jb
jbe
(bad)
(bad)
mov
sub
xor
add
test
dec
cmps
push
into
out
push
fiadd
mov
and
push
dec
fstp
(bad)
sbb
fidiv
sub
std
mov
fwait
inc
sahf
and
add
cmps
mov
out
outs
stos
fsubrp
mov
movs
sub
push
sub
aad
fild
ja
test
adc
loop
ret
rcr
jae
lods
(bad)
mov
mov
in
call
les
ja
or
pop
cli
adc
repz
cmps
or
and
hlt
xchg
test
xor
test
loope
es
lea
ja
aam
(bad)
sbb
lods
aam
pop
xchg
mov
mov
and
add
mov
pop
repnz
fs
sub
hlt
jne
sti
stos
xor
jbe
mov
push
push
js
mov
aas
pusha
xor
test
sub
dec
repnz
jmp
rcr
pusha
or
mov
retf
dec
int3
sbb
cdq
inc
xlat
loope
xchg
xchg
je
ja
outs
pop
(bad)
hlt
stos
inc
mov
sub
inc
arpl
enter
xlat
rcl
popa
cmc
sub
mov
jecxz
pop
(bad)
daa
inc
pushf
sub
jmp
push
xchg
cmp
jne
add
mov
shl
sbb
mul
sbb
push
hlt
pop
sti
add
pop
xchg
push
scas
int
lods
cld
mov
jmp
cmps
push
dec
adc
sub
adc
ins
inc
out
inc
or
ss
push
test
xor
aad
mov
push
sub
or
(bad)
mov
mov
or
icebp
mov
xchg
fnstcw
push
repz
xchg
neg
sar
inc
imul
(bad)
mov
pop
mov
in
repnz
mov
jae
sub
jns
retf
fimul
jo
xchg
sbb
aam
adc
or
popf
call
pop
cmp
leave
inc
bnd
lea
cld
je
dec
fild
jecxz
std
stc
cdq
ficomp
stos
mov
mov
shr
cmp
mov
pop
jg
cli
sbb
out
jle
mov
lds
mov
lea
sbb
sbb
dec
aad
mov
out
fs
and
mov
loopne
mov
dec
xchg
not
(bad)
in
xor
mov
sub
mov
pop
fadd
cli
sub
sbb
scas
add
rcl
retf
shl
cmpps
inc
aas
clc
inc
or
mov
pop
pop
xchg
sub
jmp
jmp
pop
add
adc
fisub
push
stc
arpl
and
pop
cld
jl
addr16
cmc
and
in
xchg
div
ja
cmp
icebp
sub
pop
aad
(bad)
and
adc
scas
jnp
lea
or
inc
imul
fimul
add
jae
fist
dec
aas
int
jae
mov
leave
iret
pop
(bad)
mov
aam
sbb
mov
out
jl
iret
div
pushf
sbb
pop
shr
sti
sub
daa
(bad)
scas
jecxz
mov
xchg
fnstsw
iret
push
mov
sbb
sub
dec
mov
shl
add
or
adc
aas
(bad)
jmp
cli
cmp
(bad)
movs
lock
ja
mov
ss
repnz
push
test
popa
out
mov
mov
pop
cmps
aas
cmp
sbb
adc
lods
jp
loop
mov
mov
xchg
repnz
jns
inc
fild
xlat
jg
cli
shl
shl
jb
js
mov
ds
fwait
cmp
in
xchg
lahf
push
jns
jmp
cmps
stos
fadd
loop
sub
inc
in
mov
retf
lds
pop
push
outs
data16
add
pop
test
ins
pop
ret
sub
mov
sub
sbb
lds
and
hlt
sub
dec
xchg
arpl
mov
loopne
ror
fcmovu
test
in
cmp
jle
jnp
hlt
repnz
mov
lds
sub
inc
sbb
hlt
push
movs
fs
dec
test
adc
cli
aad
out
cld
jae
push
adc
sub
sub
mov
imul
movs
xchg
mov
cmc
enter
jmp
jl
jecxz
xchg
jecxz
aaa
loope
jo
fstp
sbb
shr
and
xchg
pop
jecxz
rcr
inc
sub
lahf
shr
daa
sti
iret
xor
adc
test
sahf
adc
or
call
add
lods
in
(bad)
lods
mov
std
dec
or
mov
xchg
inc
mov
mov
jecxz
daa
sahf
pop
xchg
repnz
mov
jae
retf
dec
adc
lahf
xor
retf
into
aaa
jns
xchg
mov
jl
shr
cmp
push
pop
enter
mov
outs
imul
pop
es
(bad)
pop
int
xor
imul
stc
jecxz
(bad)
cmp
arpl
xor
cdq
fidiv
ret
shl
mov
enter
daa
xchg
(bad)
call
int
nop
jge
pop
dec
into
pusha
xchg
psrlq
jb
xchg
mov
sbb
pop
test
dec
lahf
cmps
jb
push
out
call
or
movs
xor
rcl
call
test
add
add
not
fucom
sar
mov
sti
daa
xchg
jle
in
sub
test
cld
push
rcl
pop
(bad)
ins
xchg
cmp
stc
iret
popa
(bad)
icebp
js
jmp
mov
mov
fsubr
fistp
sbb
mov
(bad)
test
push
mov
ret
std
cmc
push
mov
sbb
lea
outs
xor
out
jp
aas
pushf
ror
jne
xor
add
in
sub
sbb
loop
je
xor
call
and
xchg
movs
idiv
sar
mov
lods
in
sub
fs
gs
fadd
pop
inc
outs
and
xchg
out
push
mov
out
push
repz
cs
mov
jnp
movs
out
out
scas
ss
jne
lahf
push
mov
out
ins
mov
sbb
mov
enter
ins
jp
mov
addr16
cmp
mov
lea
ror
push
mov
icebp
push
and
mov
pop
cmps
jne
into
or
jae
pop
int
sub
loopne
mov
inc
mov
js
out
pop
or
dec
pop
movs
jb
cwde
(bad)
sbb
mov
in
scas
cmp
sub
stc
outs
mov
dec
pop
cmps
cli
xor
jae
frstor
mov
ds
xchg
shl
sub
pop
movs
jmp
imul
lea
je
ds
ret
jecxz
sub
jmp
not
stos
ror
int3
hlt
loope
adc
je
arpl
jp
mov
pop
sub
pushf
add
dec
cs
jno
lahf
stos
lock
in
adc
add
adc
pop
jbe
mov
loope
mov
mov
cmp
cmc
or
das
pop
and
ret
dec
xlat
stos
jae
jne
dec
pop
sbb
xchg
into
inc
ins
pop
cmc
les
and
retf
adc
cwde
mov
xchg
test
data16
cmp
mov
adc
mov
jmp
aaa
mov
adc
sbb
mov
call
sbb
test
cld
mov
jbe
outs
dec
jle
jmp
loope
mov
call
mov
mov
int3
stc
cmp
mov
mov
fdivrp
test
fsubr
xor
mov
(bad)
(bad)
sbb
jbe
mov
adc
mov
inc
jmp
add
jb
retf
movhps
mov
and
cmp
sbb
xor
stos
and
inc
sub
inc
mov
stos
add
aam
gs
xchg
jae
jae
add
cmp
pop
sti
jp
std
js
and
fwait
xchg
aam
shr
(bad)
pop
mov
leave
or
aad
ds
or
dec
mov
aaa
cwde
lahf
out
stc
inc
pop
outs
loope
lods
repnz
lock
ret
jmp
leave
(bad)
mov
mov
or
inc
mov
scas
jmp
mov
cmp
mov
mov
add
pop
popf
bnd
sti
xchg
cmp
shl
cmp
sub
pop
sbb
sbb
jecxz
cmp
leave
push
pushf
cmc
stos
jbe
movs
loopne
mov
jp
jmp
clc
cmp
loope
push
xor
jo
rcr
loopne
add
xor
repz
lods
sub
mov
test
gs
push
call
retf
int3
sbb
out
mov
push
mov
addr16
inc
enter
jl
or
cmp
xchg
and
test
scas
mov
push
call
sbb
leave
inc
movs
jb
lods
ret
mov
add
retf
(bad)
jge
aas
sub
jbe
mov
dec
leave
test
cmp
fdivr
rep
xor
in
mov
push
nop
in
push
mov
aam
outs
pop
repz
add
or
cwde
mov
in
push
pushf
int
xor
aam
sub
add
fwait
mov
mov
in
inc
call
xor
cmp
outs
dec
xor
ins
or
mov
jl
rol
xor
and
dec
mov
rcr
les
fwait
out
je
es
mov
pop
adc
jmp
inc
dec
frstpm(287
jmp
repnz
pshufw
jns
repz
pushf
jne
movs
mov
dec
retf
push
outs
cmp
fidiv
test
mov
dec
adc
mov
add
shl
call
repz
clc
jb
dec
xchg
mov
jmp
stc
lea
cmps
retf
xchg
imul
sbb
cmc
push
stos
adc
cmp
jns
call
add
mov
and
(bad)
icebp
dec
push
lods
in
call
scas
and
dec
mov
in
cmc
or
mov
xchg
fs
aas
sub
movs
adc
pushf
adc
xchg
mov
and
xor
push
mov
push
(bad)
pushf
out
mov
jb
popf
xchg
adc
pop
loope
aaa
push
jmp
retf
add
int
pause
push
xchg
imul
add
idiv
mov
push
icebp
xchg
popf
pop
adc
mov
lods
sbb
and
pop
mov
loop
and
ret
hlt
je
pop
mov
pop
jns
in
jo
imul
dec
jecxz
popa
ins
seto
or
sbb
inc
sbb
mov
mov
xchg
mov
xlat
popa
out
pop
fs
idiv
jne
les
lods
jo
mov
in
and
jo
mov
jge
in
mov
(bad)
lahf
enter
lods
aas
into
stos
pop
sti
leave
fs
dec
mul
pop
lea
dec
popf
inc
adc
mov
pop
dec
repz
xor
js
push
je
and
pop
mov
sbb
movs
addr16
jb
in
int3
push
aas
aam
inc
pop
sub
rcl
pop
or
cs
xchg
rcr
jno
pushf
push
daa
ins
xchg
mov
ds
or
mov
add
add
push
fwait
jb
jl
es
adc
xor
fstp
or
aaa
push
dec
xchg
sbb
data16
xor
xchg
sbb
pusha
shl
add
mov
dec
mov
imul
fadd
int3
mov
ins
sbb
sbb
loopne
clc
jb
stc
mov
xor
push
mov
inc
pop
sub
sub
cmc
fwait
jmp
xchg
push
ret
inc
out
es
(bad)
clc
mov
inc
cmp
shl
std
aas
xchg
jmp
setg
fcomi
adc
cdq
(bad)
out
jns
daa
test
or
mov
out
or
pusha
sub
scas
mov
push
cmp
ins
push
iret
push
mov
add
cdq
adc
jb
adc
mov
retf
push
mov
jmp
repz
pop
or
retf
mov
cmp
jmp
cmc
push
dec
mov
xchg
jnp
in
cwde
call
jno
jns
clc
sub
mov
mov
jo
xor
je
sbb
xor
push
ficom
test
jns
and
aaa
sub
test
and
add
mov
dec
test
and
xchg
push
mov
push
cmc
jp
jae
cmp
jns
mov
fisubr
push
imul
push
stc
ret
fisttp
sbb
lods
dec
inc
jmp
aaa
fild
out
ret
or
test
sub
inc
std
test
push
mov
iret
pop
in
jecxz
mov
pop
movs
test
xchg
push
xor
pop
adc
xor
sbb
or
(bad)
pop
add
fdiv
or
leave
fxch
sub
outs
dec
mov
push
repz
call
out
mov
pop
xrelease
sbb
leave
sbb
sar
rol
or
lock
loope
fldcw
aas
xchg
cmps
mov
(bad)
jno
mov
dec
and
sbb
sbb
jae
nop
shl
jb
sbb
add
in
scas
aas
fcmovne
in
out
pop
and
jne
xor
int
cmp
jl
repnz
mov
and
popa
cdq
call
in
das
mov
xchg
push
(bad)
push
mov
sub
jmp
sar
and
mov
aaa
leave
stc
outs
push
stc
and
jecxz
xchg
loope
or
(bad)
sbb
xor
pushf
push
xor
icebp
lds
leave
sets
int3
fs
cdq
and
and
pop
shr
cmp
xchg
mov
cmp
shl
sbb
jno
pop
test
fcomp
(bad)
pop
lea
std
call
repz
in
jno
sahf
mov
cdq
movs
inc
cmp
retf
jecxz
mov
mov
inc
cmp
push
mov
add
mov
adc
push
xchg
cmp
cdq
stos
xor
push
xchg
outs
(bad)
pop
ret
iret
cs
fiadd
jo
dec
push
sub
(bad)
fld
repnz
or
push
daa
mov
test
loop
test
in
and
in
jmp
rcr
mov
stos
fsubr
inc
dec
adc
adc
movs
xor
jno
jmp
xchg
cli
and
push
xchg
xchg
dec
adc
adc
ficom
dec
jnp
mov
push
mov
sbb
hlt
sbb
add
mov
leave
push
movs
loop
add
pop
and
idiv
pop
mov
enter
pop
arpl
xor
repz
sar
btc
inc
cmp
pop
addr16
fwait
xor
mov
jl
dec
(bad)
int
in
das
(bad)
das
mov
nop
adc
mov
(bad)
(bad)
adc
stos
sub
push
aas
aad
shr
gs
mov
jmp
dec
retf
std
cmp
jg
jbe
ret
fsubr
push
pusha
(bad)
cmps
in
out
repnz
mov
fs
inc
push
shl
xchg
hlt
xchg
mov
pop
test
inc
fst
mov
mov
fbld
mov
inc
cmc
aam
cld
dec
(bad)
push
dec
jb
js
stos
cmp
xchg
push
jmp
adc
cmp
fadd
jmp
push
(bad)
fmul
test
(bad)
push
aam
pop
jg
fs
push
in
repnz
push
les
scas
cli
add
(bad)
es
xor
sub
adc
xor
test
pop
dec
push
push
mov
add
adc
(bad)
cwde
outs
jae
sub
mov
push
jle
hlt
mov
retf
push
daa
repnz
fild
jb
enter
sub
cmp
xchg
cmc
shl
mov
mov
(bad)
mov
popa
inc
adc
dec
push
in
jecxz
outs
and
movs
imul
sahf
scas
out
dec
mov
loopne
push
mov
sar
sbb
mov
stos
inc
push
sub
enter
lahf
add
jp
xchg
cmp
jle
addr16
add
rcl
cs
xor
imul
mov
xchg
outs
stos
pop
jecxz
fs
push
sub
fcmovb
adc
xor
iret
shl
pop
push
adc
fistp
out
pop
pop
rol
xchg
ret
fwait
inc
push
je
mov
in
and
std
pushf
cli
sahf
pop
mov
fst
pop
mov
ror
mov
in
inc
mov
add
test
fisttp
stc
sar
popf
and
lods
adc
or
popa
inc
sub
adc
popa
cmp
pandn
ja
movs
sub
cmps
mov
sbb
xchg
gs
sbb
fnstsw
or
mov
stc
stos
cmps
mov
cmp
and
xchg
add
mov
ins
push
aaa
lea
sar
fsub
aaa
(bad)
cmp
jbe
imul
push
dec
(bad)
adc
dec
loopne
inc
dec
cmc
and
pop
and
dec
jle
in
sub
repnz
js
or
dec
inc
in
xor
mov
mov
aaa
sti
idiv
out
dec
inc
in
add
sbb
lods
mov
clc
les
fisttp
ss
(bad)
retf
pushf
in
adc
icebp
xor
jne
mov
jo
mov
out
cmp
aaa
jbe
in
test
jno
mov
pop
inc
and
add
xor
or
(bad)
jg
sbb
mov
dec
or
sbb
out
sub
adc
(bad)
int3
cmp
push
clc
cmp
out
gs
ja
xchg
rcr
addr16
xchg
sbb
pusha
xchg
mov
repnz
jb
cli
ja
cmp
std
pop
mov
sbb
outs
icebp
loopne
cmp
jnp
adc
add
jbe
mov
inc
xchg
push
ret
sub
ret
sub
mov
mov
lods
scas
std
mov
mov
scas
div
sahf
movs
stc
shr
push
sbb
jge
in
(bad)
dec
inc
jle
sar
xchg
xor
inc
fst
xchg
fwait
push
jmp
in
sbb
idiv
ins
mov
mov
lds
and
test
test
mov
popa
pushf
sbb
dec
sub
pop
push
popa
mov
xchg
mov
aad
jbe
movs
push
loop
jecxz
repnz
imul
loop
inc
mov
fmul
cmp
push
es
leave
in
mov
ja
mov
stc
pop
xchg
scas
mov
pop
outs
jb
fisub
(bad)
(bad)
push
std
fucomp
scas
cmc
hlt
mov
test
push
imul
movs
dec
mov
lods
in
and
aam
xor
ret
neg
pop
add
fbld
int
cmp
ficom
les
jbe
push
(bad)
lods
std
mov
retf
data16
cmp
or
test
dec
mov
mov
inc
fdivr
fcmove
pop
fcmovne
jae
hlt
sub
je
adc
cmp
popa
xchg
push
sub
(bad)
xchg
inc
div
adc
inc
retf
xchg
cmp
or
cli
mov
jg
out
cmp
lea
(bad)
push
inc
mov
cdq
cdq
mov
inc
call
adc
je
aam
dec
inc
clc
fild
into
in
lods
jo
cs
lea
movs
pop
cmp
sub
push
mov
mov
mov
fwait
or
fld
xor
adc
xor
bound
ret
mov
sbb
imul
adc
imul
int
and
(bad)
mov
push
and
and
cld
jmp
not
cmp
jne
imul
sbb
adc
adc
or
xor
repz
sub
push
ss
hlt
add
ins
movs
add
in
pop
sahf
jne
addr16
jmp
pop
(bad)
cmp
add
xor
js
lock
xor
fst
mov
pop
out
stc
cmp
cmp
fistp
sbb
sahf
ds
rol
test
rcl
or
jae
(bad)
lock
rcr
and
les
sbb
add
jo
add
sub
sbb
or
dec
shl
int
cmps
fmulp
push
stc
push
mov
xor
xchg
sbb
add
jg
fisttp
dec
xor
cmp
jp
sar
dec
fwait
jnp
loopne
fstp
cmp
adc
ja
or
or
bound
mov
and
repz
pop
and
cmp
aas
retf
cld
imul
mov
fisub
inc
mov
cli
fbstp
push
in
jmp
pop
push
ins
popa
sbb
xchg
mov
lea
mov
rcl
js
add
inc
push
cmp
cmps
imul
mov
stos
mov
xor
mov
xor
or
pop
xor
cmp
dec
sub
ds
cmp
jb
mov
das
pop
call
mov
clc
mov
scas
push
cmp
inc
lahf
mov
lahf
aaa
cmps
inc
retf
or
xor
mov
cmp
jmp
ret
xor
stos
mov
xor
push
neg
arpl
push
mov
dec
inc
repnz
pop
cli
xchg
in
movs
sub
lods
xor
sub
fdiv
ret
inc
xchg
sub
and
das
repnz
aam
push
fist
jns
(bad)
and
daa
(bad)
jno
xor
fucomp
std
adc
cmp
popf
cmps
arpl
adc
xchg
enter
repnz
inc
imul
inc
dec
add
mov
popa
push
inc
mov
mov
aad
out
mov
mov
and
imul
cdq
push
inc
cmps
push
(bad)
ror
cdq
clc
push
cwde
fdiv
add
shl
adc
inc
(bad)
jmp
or
aam
and
dec
xor
push
adc
adc
add
sbb
jg
in
fbstp
retf
mov
shr
in
fild
sub
sub
mov
js
cmp
push
repnz
mov
shl
pop
mov
xor
ins
jno
pop
or
stos
lods
cmps
push
mov
retf
cmps
sub
mov
aad
pusha
sub
jg
sbb
data16
cmp
retf
inc
pop
cmps
repz
xor
pushf
push
add
loop
or
mov
mov
pop
ror
stos
std
test
push
and
adc
mov
fs
xor
mov
mov
shr
clc
and
call
pop
aad
inc
loopne
adc
popa
pop
ja
inc
or
jb
call
in
(bad)
je
and
jmp
nop
stos
adc
sbb
lock
add
xor
xor
shl
jb
mov
mov
iret
xor
daa
popf
out
in
lods
push
jno
aad
repnz
call
cmp
mov
jge
dec
jb
rsm
pop
test
push
fadd
mov
xor
xor
nop
jecxz
out
jae
jg
jp
xchg
arpl
jae
add
rcl
lahf
std
mov
fsub
imul
sbb
(bad)
movs
loop
cmp
push
cld
ret
inc
push
je
dec
int3
(bad)
fbstp
and
es
movs
shl
aas
shr
cmp
jmp
bound
adc
gs
adc
js
xchg
adc
inc
sub
mov
or
jecxz
push
arpl
cwde
pushf
adc
dec
pop
mov
hlt
movs
mov
sbb
pop
rcr
mov
inc
test
int
inc
pop
inc
push
inc
clc
lock
or
adc
pop
add
xchg
cmp
mov
je
int
outs
test
test
(bad)
mov
sbb
ficom
sub
movs
mov
pop
inc
popf
and
sbb
adc
jae
mov
xchg
cwde
xor
cmp
cmp
push
in
sbb
aam
and
ret
imul
shl
mov
xchg
xchg
sti
movups
out
fidivr
(bad)
cmp
aam
mov
cmp
test
ficom
cmps
cwde
fist
lahf
daa
arpl
jb
jge
outs
aad
in
dec
ins
pop
add
mov
retf
add
jb
push
psrad
sbb
(bad)
sbb
(bad)
jmp
les
dec
and
sbb
xchg
inc
mov
sbb
xchg
ss
sbb
(bad)
mov
xchg
xchg
jp
jp
aaa
repz
xor
repnz
fnstenv
cmp
or
aad
iret
std
aam
movs
sbb
sub
inc
sub
and
xchg
and
mov
sbb
mov
xor
inc
clts
sahf
pop
test
pusha
xchg
loopne
xchg
(bad)
sbb
je
mov
in
and
xor
ret
pop
popa
cmps
push
dec
push
out
push
ds
rol
movs
inc
jbe
sub
ja
jmp
mov
sub
xor
add
pop
xor
ins
fdiv
dec
jae
(bad)
mov
inc
rcl
push
mov
call
lea
cli
inc
cdq
push
lea
mov
ret
mov
popa
fisub
mov
xor
(bad)
dec
repnz
repz
dec
ret
xchg
mov
push
sub
loope
mov
inc
inc
add
adc
dec
mov
or
sub
fs
imul
mov
mov
push
add
or
mov
xor
mov
mov
pop
frstor
cdq
(bad)
lods
leave
retf
push
cs
push
aad
cmps
sub
xchg
fsub
jmp
cmp
xor
and
cmp
clc
loop
(bad)
outs
and
mov
xor
ss
mov
mov
call
jns
xor
int3
add
cmp
int
xchg
stos
shl
xchg
add
pop
adc
and
jle
mov
call
adc
fwait
dec
in
ins
sub
mov
addr16
dec
ror
test
mov
in
sub
cmp
adc
fcom
adc
ficom
mov
scas
imul
cs
or
push
push
cmp
mov
bound
scas
adc
jmp
sub
xchg
enter
(bad)
rep
shl
mov
inc
bound
jb
sbb
jmp
adc
lahf
push
je
mov
inc
in
ret
sub
cmps
repz
test
push
clc
cmp
push
jecxz
xchg
jno
and
push
sbb
jmp
push
or
sub
mov
and
dec
jp
fldcw
sbb
icebp
int3
shl
imul
sahf
xor
retf
cmc
or
inc
shl
fsub
ss
sti
fadd
mov
test
in
sub
les
inc
pop
dec
push
sbb
push
push
test
pop
int3
mov
xchg
in
xchg
cmc
fistp
fcmove
jnp
add
fsubr
jbe
hlt
xchg
les
bnd
push
retf
mov
movs
or
and
je
mov
jns
and
mov
dec
lea
push
test
mov
ins
into
lock
push
psllw
cld
bound
fadd
mov
ja
push
push
jae
cmps
out
push
stc
adc
inc
jno
mov
fstp
xor
inc
inc
ret
addr16
inc
mov
call
pop
dec
cmps
push
hlt
mov
and
clc
jb
adc
cmp
dec
mov
mov
outs
add
cwde
loope
dec
sub
lods
enter
push
cmp
std
mov
ret
sbb
fnstenv
retf
xchg
sbb
pmaddwd
sbb
out
pop
cmp
cmp
sub
ins
push
cmp
das
xor
ret
or
xor
pop
mov
add
lea
movs
gs
jmp
add
test
fistp
pushf
adc
loopne
or
cmp
pop
xchg
in
test
xchg
daa
mov
pop
mov
or
sar
imul
ret
inc
inc
pop
push
xchg
jecxz
ret
xor
fnstcw
out
test
test
ins
jp
mov
scas
test
in
rcl
arpl
inc
mov
mov
cmp
pop
dec
fsub
ss
aas
cmp
mov
inc
jae
xchg
add
loopne
popa
dec
xor
xor
loop
push
xchg
jge
test
int3
cld
das
fwait
mov
stos
mov
cmp
int3
stos
xor
xchg
loop
push
sub
xor
mov
jle
std
pop
iret
push
sub
jmp
loope
jle
lock
retf
adc
push
or
das
sub
call
push
in
fist
xor
test
xchg
scas
adc
push
cmp
dec
cmp
mov
adc
sbb
ds
lds
mov
push
in
retf
mov
cmp
xor
jmp
pop
test
shl
mov
arpl
adc
cld
mov
outs
shl
pop
fidivr
cmc
dec
repz
pop
(bad)
push
jne
in
sbb
ins
inc
mov
jne
jge
sti
movs
lods
xchg
mov
sbb
or
cmp
push
inc
test
and
push
or
sub
xor
xchg
cwde
sbb
sbb
stos
test
call
jp
lock
or
mov
lahf
mov
add
xor
ret
xchg
ret
repz
in
imul
cmps
inc
push
push
mov
xchg
jb
movs
das
mov
(bad)
pop
sar
pop
movs
jbe
iret
jge
fwait
or
pop
sub
aad
sub
repnz
dec
in
loopne
les
xor
dec
retf
and
jl
mov
outs
movs
mov
repz
gs
mov
pop
je
inc
push
dec
cmp
sbb
xor
shl
and
pop
fidivr
jo
lods
cmps
push
xchg
loope
dec
xor
retf
out
(bad)
leave
fisttp
cmp
in
test
inc
sub
or
inc
adc
ror
ficomp
xor
mov
out
pop
xchg
aas
adc
sub
dec
lahf
loop
not
movs
pop
lods
push
scas
or
inc
fwait
retf
adc
mov
xchg
popa
mov
popa
and
sbb
retf
pop
push
sbb
sti
dec
sbb
cmp
push
pusha
mov
xchg
push
cmp
cmps
mov
mov
mov
repnz
scas
mov
pop
jne
cdq
ficomp
sbb
adc
out
pop
mov
shl
lahf
adc
test
sbb
lods
pop
or
xchg
sbb
or
in
mov
adc
mov
ret
in
dec
sub
xchg
fidivr
popa
mov
outs
call
sahf
iret
push
xchg
enter
out
sahf
fidiv
jnp
aas
dec
cld
gs
jmp
sub
(bad)
inc
sbb
jmp
pop
lock
outs
lock
mov
sbb
enter
and
into
jno
cs
inc
mov
(bad)
repnz
call
xor
dec
loopne
and
arpl
pop
or
pop
dec
ss
sbb
and
sti
push
mov
push
sti
ins
mov
adc
mov
mov
mov
fnstcw
pop
lock
movs
push
test
mov
ins
es
enter
xor
lock
aam
ficomp
inc
pop
jl
ret
mov
xor
mov
loop
call
ss
fimul
(bad)
loope
sbb
mov
add
xlat
dec
sub
push
ret
mov
aad
and
fsubrp
add
sub
hlt
push
fcomp
stos
and
adc
mov
pop
add
scas
pop
push
or
cmp
in
hlt
sub
outs
mov
arpl
icebp
call
in
push
push
jb
int3
in
stos
inc
mov
and
imul
outs
mov
sahf
cli
fxch
or
call
cmp
scas
in
push
mov
sub
(bad)
sbb
call
xchg
xlat
mov
mov
pop
push
or
call
lods
and
out
jp
adc
(bad)
mov
ja
xchg
xchg
add
mov
mov
xchg
fmul
dec
cli
dec
dec
jmp
and
jmp
lahf
outs
(bad)
adc
rol
jbe
sbb
add
sbb
and
mov
and
imul
movs
out
in
adc
(bad)
jno
jge
retf
sbb
sahf
mov
dec
mov
jl
(bad)
repz
fsubr
mov
pop
daa
jmp
(bad)
in
adc
fldcw
or
ficomp
in
push
(bad)
in
mov
and
push
jmp
or
xlat
cwde
ja
add
xchg
add
fcomi
adc
or
and
cmp
cmp
psrad
jnp
sbb
push
call
fimul
push
push
cmps
nop
cmps
lods
sahf
out
in
stc
mov
scas
adc
neg
mov
push
xchg
pop
pop
pop
mov
jecxz
push
sbb
stc
jle
sub
xchg
shl
push
test
add
inc
mov
cmps
aad
jecxz
sub
xchg
mov
cmp
cwde
mov
cmp
lods
mov
pop
mov
or
push
mov
add
mov
push
mov
xor
popa
cli
pop
mov
cwde
push
call
cmp
push
add
test
aam
xor
repz
pusha
and
call
(bad)
jae
sbb
cs
not
fist
mov
retf
cmp
test
sub
inc
pushf
pop
sub
jecxz
icebp
lods
or
data16
loop
mov
jmp
pop
mov
mov
pop
sti
out
push
sahf
imul
dec
and
mov
pop
push
xor
mov
movs
dec
(bad)
dec
mov
(bad)
out
mov
das
xchg
hlt
jmp
push
hlt
mov
psubq
mov
mov
pop
push
push
das
jb
cld
outs
gs
cdq
popa
push
jae
getsec
(bad)
loop
mov
out
pushf
shl
push
mov
mov
das
clc
lahf
mov
imul
lods
inc
es
push
cs
outs
in
repz
in
icebp
push
dec
add
ins
test
and
imul
sbb
out
mov
sbb
push
mov
push
scas
or
and
retf
xchg
imul
push
out
out
mov
shl
les
pop
(bad)
out
xchg
stc
xchg
shr
cmps
loope
or
pop
cwde
pop
push
dec
jg
cli
stc
bound
nop
je
mov
ja
inc
lea
jge
sub
jo
in
rcl
(bad)
mov
in
push
jl
xor
sub
adc
or
(bad)
popa
pop
ror
dec
pop
dec
sbb
mov
not
lea
xchg
adc
int
add
cmc
scas
pop
gs
sub
jne
mov
jo
ins
lods
mov
xchg
push
aaa
cmc
dec
popf
inc
and
pop
in
pop
pop
outs
cli
add
inc
inc
(bad)
les
mov
arpl
mov
sbb
sub
adc
inc
cmp
lahf
or
jge
inc
in
stc
and
mov
lods
jmp
and
push
out
xor
or
add
push
jb
inc
or
mov
sub
lds
mov
nop
lea
mov
and
iret
hlt
std
ins
dec
mov
xchg
push
int3
mov
aam
shl
fs
push
pushf
cmp
inc
dec
mov
ret
or
call
xor
icebp
outs
cmp
mov
hlt
lea
or
lea
into
imul
xor
xchg
aaa
loope
xchg
sub
popa
lock
mov
mov
stos
fdivr
lds
pop
and
int
xchg
inc
dec
xor
js
xchg
aaa
mov
fcomip
or
mov
mov
ins
sbb
int3
adc
ror
mov
adc
retf
rol
test
mov
(bad)
jo
into
xchg
aas
ins
in
pop
sahf
movs
in
push
into
inc
outs
add
retf
xchg
pop
imul
and
inc
das
xor
lea
mov
dec
adc
add
inc
inc
fstp
inc
bnd
pop
mov
push
repz
sub
retf
or
pop
in
int
les
outs
ins
sub
push
hlt
aas
or
sbb
movs
jns
dec
jno
push
jecxz
aad
sub
aaa
and
dec
cmp
cmp
pop
and
in
adc
shl
cld
mov
sub
out
sbb
mov
mov
pop
adc
adc
nop
lods
aas
inc
jmp
lea
leave
mov
sbb
mov
popf
xor
cld
push
test
iret
add
lds
test
fwait
mov
lahf
icebp
xchg
popf
or
jbe
sar
dec
sub
and
add
sbb
adc
ds
sub
gs
pop
mov
inc
aas
sub
xchg
and
loopne
fisub
xor
cmps
in
cmps
int3
leave
cmp
clc
sbb
add
sub
mov
test
(bad)
xlat
mov
repnz
into
adc
add
mov
jo
jmp
aam
int3
jp
(bad)
neg
pop
loopne
sbb
lea
push
add
lea
jno
sub
in
mov
add
jmp
jl
xor
clc
mov
cmp
xchg
adc
rcl
mov
mov
retf
and
in
dec
test
cmp
div
loope
xor
into
in
popf
shr
xchg
pop
add
xor
rol
sbb
(bad)
xlat
xchg
xor
jp
lock
test
inc
in
stos
ja
cmp
xor
arpl
sbb
test
fild
xchg
lods
lods
adc
dec
jg
xor
jmp
rcr
sti
daa
sar
pusha
mov
mov
stos
enter
retf
mov
xor
xchg
ja
cld
pusha
and
fsub
loope
stc
call
lock
sbb
movs
call
inc
sahf
fld
out
mov
or
dec
leave
jb
xchg
xchg
test
xchg
jo
loope
fdiv
fsubr
xor
sub
xlat
and
int3
inc
adc
mov
div
fsubr
call
ds
fs
lods
push
je
jp
ss
int3
mov
into
dec
jb
int3
fisub
mov
push
mov
xor
pop
push
cmp
fsub
scas
into
fsub
mov
add
jge
outs
push
sub
jo
jecxz
or
sbb
retf
lea
pop
adc
dec
mov
adc
or
ja
push
adc
pushf
scas
cli
pusha
dec
mov
stos
hlt
dec
adc
xchg
adc
xchg
leave
push
fnstcw
push
fild
mov
es
in
rcr
sbb
mov
mov
sub
arpl
pop
dec
jle
push
inc
pop
(bad)
push
add
mov
lods
addr16
xor
lods
test
xchg
and
xchg
ja
mov
std
pusha
outs
out
push
retf
dec
les
jp
cdq
out
hlt
rcl
cmp
mov
inc
aas
and
test
ja
or
sbb
shl
cmp
lock
aas
pop
mov
test
into
hlt
imul
scas
sub
test
retf
sahf
xchg
inc
jb
push
xchg
loop
adc
jmp
jmp
retf
xchg
or
popf
inc
popa
lock
int
out
xchg
stc
dec
dec
sti
pop
int
jne
daa
jmp
cdq
jecxz
aam
in
mov
mov
push
ds
mov
mov
xor
cwde
cmps
retf
push
dec
sub
sub
adc
sbb
jo
retf
lahf
das
cli
add
retf
mov
sbb
add
jb
sti
push
lahf
xchg
hlt
push
sub
pushf
and
(bad)
push
mov
outs
inc
fsubp
adc
jecxz
mov
in
(bad)
mov
retf
loopne
retf
cmps
out
daa
je
enter
inc
xor
push
sbb
mov
addr16
enter
mov
scas
jae
lods
imul
cmp
(bad)
sbb
and
nop
sbb
jno
adc
out
sahf
repz
jmp
xchg
jle
cmps
(bad)
fwait
and
mov
add
daa
jo
ins
inc
call
mov
push
aaa
std
add
xor
int3
dec
adc
test
and
fistp
in
and
retf
add
cmp
cs
pop
daa
jbe
cmps
adc
aaa
mov
add
add
out
repz
js
xchg
shl
test
retf
test
mov
sar
xor
mov
aam
out
cmp
sbb
and
cmp
xor
aam
cs
and
jge
popa
inc
scas
inc
sbb
aas
mov
sub
jge
sub
cmp
test
cmp
icebp
call
mov
pop
hlt
aam
cmps
jbe
icebp
sbb
jo
jo
jle
xor
adc
mov
scas
push
dec
pushf
scas
(bad)
mov
icebp
pop
gs
aaa
sub
fist
mov
mov
or
sub
rcl
frstor
in
dec
push
dec
inc
or
leave
jno
mov
fnsave
aaa
pop
ds
(bad)
cmp
shr
outs
adc
inc
ret
loopne
aas
jmp
sub
xor
sahf
ins
jmp
mov
ret
push
mov
mov
scas
cmp
out
dec
lea
ins
inc
and
push
jecxz
dec
pusha
enter
hlt
pop
repnz
xchg
into
push
sti
or
mov
mov
fimul
or
jae
imul
sahf
and
sub
(bad)
int3
inc
and
push
icebp
stos
sub
(bad)
movs
sbb
jbe
mov
retf
add
cmp
ja
dec
xchg
fcmovnu
xchg
add
and
aad
push
sbb
leave
or
sub
outs
xor
xchg
push
daa
adc
(bad)
pop
add
daa
inc
push
or
out
(bad)
xchg
jb
gs
int
cmp
cmp
clc
jge
call
mov
lds
clc
sbb
xchg
fwait
pop
push
xor
stos
push
mov
and
pop
push
pop
mov
adc
addr16
dec
sbb
(bad)
and
add
cmp
mov
ror
cwde
in
test
test
jmp
mov
add
popa
adc
ret
lahf
scas
push
sti
test
aas
xchg
cld
add
daa
jecxz
add
(bad)
jo
mov
repz
mov
xor
push
scas
jno
cld
iret
and
sbb
add
jmp
outs
xor
(bad)
or
cdq
imul
xchg
jg
std
inc
je
xor
jae
fld
jns
xchg
inc
stc
push
cdq
cmp
dec
daa
or
inc
sbb
cdq
cmp
ret
loopne
and
into
dec
retf
xor
push
mov
push
repz
xor
jmp
(bad)
pop
mov
mov
cmp
pop
cmp
push
outs
leave
push
mov
dec
aad
fstp
jmp
push
jg
or
xlat
jb
xchg
dec
dec
mov
adc
js
sbb
jb
inc
mov
push
outs
adc
add
xor
into
jno
loop
push
mov
mov
sub
inc
leave
bound
aam
xor
call
scas
jl
adc
fnstsw
pop
ret
jo
xor
shl
call
test
adc
cmc
jecxz
daa
jecxz
in
fwait
out
jne
sti
adc
jae
mov
pop
not
xor
sbb
xchg
out
popa
call
xor
add
xor
mov
sbb
xor
mov
call
pop
repz
out
js
dec
je
repnz
loop
push
mov
push
gs
push
push
das
or
adc
enter
mov
xchg
jecxz
fistp
mov
leave
add
inc
cmp
cmp
dec
and
cmps
or
jecxz
add
jge
fwait
mov
mov
scas
(bad)
je
xchg
jae
cmp
and
imul
or
adc
ror
or
xchg
mov
cmp
arpl
rcr
fistp
lods
sbb
pop
mov
out
gs
push
fsubr
dec
adc
cld
(bad)
cs
dec
mov
in
arpl
cmp
sub
(bad)
(bad)
jb
into
jmp
inc
dec
sbb
mov
xchg
xchg
mov
cmp
aad
mov
xor
sbb
stos
daa
mov
pop
stc
(bad)
mov
(bad)
and
ret
mov
mov
fimul
(bad)
and
add
add
shl
test
xlat
xadd
(bad)
jg
repz
fidivr
mov
jo
cmp
add
rcr
lods
mov
add
sub
imul
pop
jmp
scas
adc
cwde
jg
imul
jg
fdivr
pop
adc
inc
sahf
xlat
mov
inc
and
lds
xchg
jmp
ret
ret
sub
iret
pop
sbb
cwde
sbb
xor
mov
pop
out
push
cmp
mov
xchg
jp
pop
lods
int
mov
mov
sbb
sti
cmp
jbe
stos
inc
cmps
mov
mov
in
xchg
aad
je
rcl
add
pop
es
(bad)
mov
dec
in
sub
test
push
fadd
mov
imul
jge
retf
stc
fs
push
mov
fisub
dec
stos
mov
pop
les
pop
std
mov
call
cs
ret
cmp
push
and
add
inc
mov
les
loop
cs
movs
pop
and
jns
sti
sbb
fsubr
push
push
jg
dec
pop
enter
cs
xchg
push
jmp
push
shl
fwait
mov
lock
(bad)
mov
pop
out
jg
or
mov
pop
arpl
inc
aas
inc
inc
xlat
fidiv
call
jmp
sar
jae
cmp
cmp
(bad)
data16
test
xchg
retf
stos
mov
mov
or
adc
in
imul
fdiv
scas
mov
adc
inc
cdq
push
test
push
xchg
push
(bad)
retf
xor
pushf
daa
stc
mov
mov
sbb
int
lds
push
push
shr
ds
xchg
sbb
mov
retf
lods
fdivr
pop
in
dec
out
cmps
mov
or
nop
jecxz
data16
sub
(bad)
les
xchg
fidiv
mov
sbb
or
fs
mov
or
inc
cmp
in
sub
sub
jl
repz
jb
lods
outs
lods
and
xor
dec
ins
ror
js
jo
fs
int3
xchg
mov
(bad)
mov
dec
retf
jns
aaa
out
mov
pop
int3
icebp
pop
mov
sbb
mov
cmp
push
dec
xlat
push
das
sub
push
out
jbe
xlat
jo
daa
daa
fist
push
in
and
add
xor
sbb
adc
aas
inc
loop
(bad)
repz
push
jns
out
xor
cmp
cmp
aad
ins
cmps
pushf
pusha
add
es
sub
and
add
sub
adc
aaa
add
mov
jo
or
pop
xor
stos
inc
sub
sub
mov
mov
dec
lahf
xor
not
cmp
sbb
call
mov
adc
sub
ins
shl
into
rol
push
mov
xchg
xchg
daa
(bad)
mov
addr16
fmul
test
daa
mov
pop
outs
lock
and
adc
mov
or
popa
inc
sbb
leave
icebp
aam
out
push
into
xor
dec
xlat
dec
mov
test
pop
adc
js
pop
mov
xchg
jno
aaa
mov
inc
(bad)
push
dec
leave
aas
daa
stc
push
loop
in
jmp
cmp
jmp
sahf
xor
mov
lahf
xchg
retf
jne
pushf
jmp
jo
push
pop
(bad)
sbb
sbb
and
mov
inc
repz
bound
int3
shr
jg
repnz
xchg
jg
ja
mov
js
hlt
push
add
stc
push
jecxz
pushf
loope
loop
pop
mov
fsub
add
call
adc
mov
add
xchg
and
into
and
(bad)
in
adc
(bad)
bound
leave
test
pop
test
hlt
sahf
bound
or
scas
xor
in
inc
sub
add
jmp
fs
dec
cmp
mov
in
dec
xor
popa
dec
shl
xchg
or
mov
lahf
loope
fcmovne
pop
data16
adc
retf
xchg
pop
popa
je
sbb
cli
(bad)
popa
add
pop
dec
push
cmp
fstp
dec
(bad)
out
pop
jle
std
hlt
fadd
push
or
retf
push
add
jo
bound
push
add
cmp
movs
jbe
icebp
lahf
adc
fadd
dec
sbb
push
lods
xchg
retf
jp
xor
add
adc
sub
es
jne
je
pop
paddq
lahf
xor
push
cmp
test
shl
rcr
jle
cld
fidivr
retf
sbb
mov
cmp
mov
(bad)
aas
mov
mov
push
outs
stc
out
fidivr
test
dec
ins
je
mov
and
int3
lods
jmp
imul
aaa
fsub
xchg
xor
fadd
cmp
outs
cmp
mov
arpl
mov
xor
inc
fst
jno
scas
dec
leave
push
adc
inc
out
imul
into
je
stos
jno
cmp
mov
lahf
push
daa
or
pop
mov
jns
pushf
fidivr
(bad)
inc
call
lahf
adc
cmp
sbb
inc
mov
cmp
jg
not
mov
inc
popf
or
jmp
jno
aaa
popf
test
outs
mov
out
aas
pusha
jmp
sbb
rol
adc
mov
shr
push
retf
rcl
mov
cmp
xchg
repz
jns
ins
jle
out
mov
mov
jnp
movs
sbb
inc
add
sub
push
bound
into
jmp
repnz
fisttp
push
aas
outs
mov
fisttp
or
(bad)
mov
xchg
sub
shld
int3
adc
cmp
arpl
(bad)
xchg
call
and
add
sub
pop
stos
push
push
enter
fld
in
in
xchg
call
inc
mov
or
inc
ss
ss
sti
bound
xchg
repz
aam
movs
outs
and
rcr
or
in
mov
adc
mov
fsub
test
push
es
mov
or
push
out
hlt
mov
pop
xchg
jae
xchg
cmp
cmp
cwde
pop
push
hlt
je
pusha
pop
push
hlt
mov
iret
mov
mov
test
les
jp
mov
mov
test
int
je
xlat
jno
fisubr
repz
xchg
dec
repz
jecxz
cdq
or
cmp
in
adc
cmps
jmp
outs
mov
ss
push
dec
inc
(bad)
int
add
ja
cmc
ins
push
cmc
jb
aaa
test
into
cdq
sbb
add
pop
push
sub
shl
outs
bound
add
je
inc
jp
imul
cli
pop
es
jbe
into
xor
jo
mov
mov
shl
mov
inc
add
mov
call
xchg
das
jb
in
mov
pusha
or
sbb
mov
pop
fs
rol
adc
jae
fistp
jns
inc
mov
outs
pop
movs
mov
inc
retf
daa
mov
imul
jne
pop
jge
stos
mov
and
add
lods
push
les
dec
mov
or
mov
paddw
je
out
xchg
or
push
(bad)
jno
xchg
xchg
xchg
jecxz
cs
loopne
xchg
cli
ins
push
xchg
xor
xchg
xor
mov
xchg
lock
sbb
jns
enter
push
jg
out
mov
into
xchg
retf
(bad)
sbb
add
movs
fwait
and
sbb
out
mov
and
add
shr
aaa
jnp
cmps
daa
pop
mov
jle
inc
sbb
xchg
sahf
or
add
pop
aad
cmc
inc
shl
jg
rol
and
or
scas
les
outs
xor
or
es
rcl
jl
push
sbb
sub
pop
in
mov
popf
inc
aas
jo
fild
outs
fcomp
imul
mul
jecxz
pusha
lods
jecxz
inc
mov
retf
fisttp
es
test
cmp
jge
cmp
shr
arpl
mov
in
push
into
pop
stc
scas
shl
mov
and
loop
add
ss
or
ss
sar
es
or
aad
loopne
stos
retf
push
mov
std
jp
push
ins
shl
mov
sar
sbb
movs
leave
xor
and
add
sbb
call
int
mov
push
and
push
mov
imul
movs
icebp
xchg
ss
fnstenv
fs
sub
shl
adc
inc
sbb
mov
cmp
retf
pop
daa
in
ficomp
mov
lock
sahf
cmp
cmps
test
pop
mov
fwait
cmp
fptan
fst
(bad)
mov
sar
and
stos
inc
je
xchg
xchg
vmovaps
jb
xchg
mov
jno
adc
dec
dec
fldcw
jl
in
sub
and
mov
jmp
pop
int3
mov
mov
mov
(bad)
(bad)
push
cs
push
shl
int3
jno
cmp
jecxz
jns
(bad)
loopne
cmp
xchg
xchg
sub
inc
mov
pushf
jbe
mov
iret
or
in
outs
push
lea
scas
add
es
mov
stos
cdq
mov
mov
es
xor
inc
pop
mov
mov
push
dec
pusha
test
push
sahf
fs
int
mov
jge
es
push
dec
shl
dec
in
scas
push
mov
mov
cmp
shl
leave
sbb
popf
ret
lods
xor
cs
jle
xchg
loop
fst
inc
in
push
push
outs
jns
pop
cmp
inc
stos
jge
hlt
inc
jbe
mov
cmp
cld
cmps
fstp
fs
(bad)
addr16
fisub
or
pop
sahf
loop
dec
cmc
arpl
sbb
adc
dec
fimul
bound
neg
xor
loop
jb
leave
leave
icebp
or
push
or
inc
mov
sahf
imul
sub
cmp
push
add
ficom
mov
mov
jno
push
jg
push
dec
jecxz
cmp
in
jb
fnstenv
jmp
sbb
or
gs
mov
adc
loope
fistp
mov
mov
outs
fs
mov
jle
in
sub
add
inc
dec
ret
(bad)
inc
mov
xchg
mov
(bad)
addps
inc
mov
js
in
sbb
dec
in
push
cmc
cmp
pushf
aas
test
lea
sub
sbb
and
add
xchg
jo
jle
js
xor
xchg
sbb
movs
cmp
xor
movs
jecxz
fist
cmp
loop
mov
xor
and
sub
pop
outs
in
mov
inc
fdiv
or
or
xor
movs
jmp
mov
xor
std
lock
xchg
push
pop
call
xchg
jno
cwde
stos
test
xchg
repz
sub
sbb
fbld
push
jbe
jno
dec
dec
fdivr
lahf
mov
jecxz
adc
outs
adc
int
lods
or
jp
sub
or
pop
cdq
in
inc
(bad)
mov
call
add
ins
cmp
jns
push
pop
add
mov
mov
int
pop
fs
pop
pop
mov
mov
and
ins
loopne
pop
out
mov
(bad)
cs
jp
daa
mov
out
adc
adc
mov
into
mov
sbb
ja
xchg
jns
or
push
imul
popf
jmp
mov
(bad)
jp
pop
fsubr
sub
ror
cmp
xchg
sbb
repz
adc
test
cmp
pop
xor
xchg
jecxz
into
push
push
add
mov
fs
and
lds
out
jno
mov
mov
sub
add
outs
adc
(bad)
pop
js
inc
scas
xlat
call
jb
call
movs
xchg
xor
pop
inc
mov
fild
mov
cwde
inc
pop
jne
or
icebp
push
jg
xchg
cmps
pop
jae
sub
jo
int
(bad)
lock
cmps
retf
mov
push
lock
test
movs
mov
jmp
push
loope
jmp
or
mov
fsub
cld
sahf
enter
pop
leave
or
push
jmp
mov
add
and
pop
jg
in
jno
in
lods
inc
mov
mov
sub
fsubp
not
ds
mov
dec
aaa
inc
xor
mov
inc
popf
mov
repz
loope
scas
push
aaa
jle
hlt
sub
stc
xchg
inc
retf
clc
or
addr16
in
aaa
dec
jb
xchg
cmp
xchg
je
mov
inc
xchg
xlat
inc
xchg
aas
div
imul
mov
jp
(bad)
jmp
dec
mov
test
js
mov
cmp
test
lds
adc
into
stos
outs
xor
call
enter
retf
hlt
(bad)
bound
and
or
iret
shl
inc
xchg
das
mov
outs
dec
pop
dec
cli
push
(bad)
xor
out
pop
xchg
adc
movs
inc
pop
pusha
cmp
js
inc
ret
retf
cmps
test
mov
jo
aas
or
repz
sbb
push
aam
cmps
mov
data16
stos
rcr
(bad)
push
aaa
pop
arpl
cmps
mov
rol
inc
mov
mov
retf
pop
and
xor
pop
test
and
push
jecxz
arpl
mov
sbb
adc
sbb
clc
pop
not
ret
lods
rol
shl
aam
ss
inc
icebp
(bad)
es
aam
shr
repz
aad
xor
out
mov
ret
loopne
test
inc
in
mov
pop
sbb
add
(bad)
out
stos
sahf
inc
mov
mov
and
aad
and
movs
repz
out
xchg
cwde
push
sbb
mov
fnstsw
and
lods
fwait
outs
xor
outs
xchg
(bad)
test
inc
in
and
shl
cs
dec
add
and
dec
test
enter
call
lock
dec
pop
inc
movs
int3
cs
mov
std
dec
mov
sbb
lods
gs
les
inc
mov
mov
push
daa
pop
popa
cdq
jecxz
icebp
nop
icebp
shl
enter
aad
push
jnp
fidivr
inc
call
sbb
lods
push
std
lock
or
push
sbb
pop
mov
daa
das
cmps
es
xchg
hlt
outs
push
jno
imul
(bad)
pop
repnz
(bad)
mov
leave
popa
ja
jnp
mov
mov
sar
xchg
aam
cmp
retf
mov
inc
mov
inc
cmp
push
pop
adc
adc
movs
jmp
data16
arpl
pusha
xor
push
popa
dec
pop
je
mov
retf
test
sbb
inc
movs
jg
jg
fs
sbb
leave
test
xor
add
push
cmp
mov
jns
fsub
dec
fdivr
dec
push
push
pop
pop
mov
retf
jl
addr16
lea
push
js
xlat
mov
pusha
xchg
pop
mov
mov
nop
in
fist
out
pop
repnz
lds
dec
adc
mov
xor
jbe
in
pcmpgtd
imul
test
mov
jb
jb
std
imul
clc
jmp
movs
ja
into
ins
mov
push
inc
cmp
in
or
or
and
out
sub
jbe
cmp
sbb
sar
mov
xchg
sahf
xchg
xor
into
or
or
sbb
mov
lods
mov
sbb
fldl2t
add
mov
pop
inc
xchg
sub
shl
xchg
mov
xor
stos
rcl
mov
in
xchg
loope
adc
push
jmp
pop
xchg
mov
in
imul
jg
movs
addr16
inc
fist
mov
cwde
xor
sbb
xchg
mov
into
ret
jl
es
test
sbb
repnz
pushf
es
add
pop
push
jns
enter
rcr
aam
push
xchg
shl
push
xor
jno
outs
or
jae
dec
lea
stos
repnz
cmc
lahf
cmp
ret
fsub
sbb
mov
arpl
cli
lods
call
push
mov
pop
ds
cmp
mov
jg
fldcw
pop
pop
ins
neg
mov
mov
fild
mul
mov
mov
push
and
mov
(bad)
xlat
push
mov
mov
movs
mov
and
xchg
ins
repz
add
sub
jecxz
add
sbb
cmc
and
(bad)
fsubr
push
into
mov
jp
loope
mov
ins
and
retf
loopne
ficom
push
push
or
shl
push
xor
jge
ins
inc
fcom
adc
out
or
shr
push
jg
xchg
cmps
push
cmps
div
imul
pop
loop
jmp
mov
shr
js
push
jmp
xor
add
pushf
jno
cld
or
mov
(bad)
xlat
jno
and
xchg
ss
push
mov
xchg
inc
and
sti
ficomp
jmp
aaa
cs
dec
xchg
dec
daa
inc
push
(bad)
inc
sbb
jo
sbb
adc
mov
retf
mov
adc
fs
mov
xchg
jg
sti
in
fmul
(bad)
add
cmp
test
ror
mov
repz
data16
sub
jno
mov
push
hlt
push
jecxz
shl
ins
dec
bound
arpl
and
movs
adc
push
mov
jns
leave
and
mov
(bad)
xor
mov
retf
daa
repnz
into
jae
lds
cmp
sbb
adc
adc
loope
xchg
sub
cmps
sti
test
jae
mov
pop
push
xor
mov
das
push
imul
call
fmul
add
inc
arpl
ret
jb
push
or
loopne
xlat
jns
cmc
pusha
jge
xchg
pop
(bad)
jmp
int
int3
push
mov
sbb
out
div
mov
sub
push
jnp
mov
mov
outs
mov
push
push
cwde
sub
xchg
mov
call
les
leave
mov
int
push
shl
test
jo
inc
lock
pop
mov
cmp
push
sahf
popa
int
mov
or
jno
push
test
pop
in
imul
or
test
jge
mov
test
pop
add
xor
mov
fwait
mov
dec
inc
mov
adc
hlt
rol
fimul
mov
(bad)
dec
sbb
push
jp
sub
jle
sbb
mov
shl
xchg
fdivr
leave
inc
pop
sahf
and
push
vprotd
loop
lea
xor
inc
cmp
sbb
sbb
mov
fist
xchg
dec
and
xchg
cmc
cmps
mov
pop
or
sub
sar
in
adc
imul
imul
push
bound
sbb
movs
mov
movhlps
jne
jg
stc
push
lods
mov
into
mov
retf
ds
sub
cmps
mov
lods
mov
push
sub
int
ss
push
sub
cmp
pop
or
int
mov
pop
cmp
test
xchg
push
fisubr
or
cmps
dec
addr16
jb
clc
xchg
adc
pop
push
mov
cli
mov
cmp
cmp
mov
outs
inc
in
adc
dec
jb
in
fdiv
scas
jecxz
int
cs
out
cmp
push
inc
add
add
or
pop
fwait
mov
into
push
rcl
imul
imul
lahf
push
inc
sbb
or
sub
out
sar
stos
pop
out
scas
cdq
retf
pop
inc
push
sub
pushf
mov
out
popa
inc
in
push
sbb
mov
mov
and
fisttp
mov
and
movs
loop
jbe
cli
sbb
cli
(bad)
and
popa
lods
jecxz
add
aas
rcr
jl
out
push
push
stos
and
ins
lds
fldcw
icebp
sub
inc
dec
outs
dec
(bad)
pop
inc
das
sub
test
cld
or
xor
mov
mov
ds
shl
jmp
int
dec
jp
call
sar
fstp
cli
and
icebp
cmp
pop
pop
xor
es
mov
iret
iret
(bad)
lea
(bad)
mov
dec
mov
in
sub
sbb
xchg
mov
das
aaa
jge
rcr
jb
shr
push
xor
mov
inc
sub
inc
fwait
(bad)
adc
jp
sbb
jno
arpl
pop
hlt
leave
inc
xlat
fist
out
mov
cwde
inc
dec
or
dec
jge
push
icebp
call
mov
adc
into
jno
mov
mov
popa
call
jecxz
cdq
or
or
pop
sub
dec
repz
aaa
cmp
push
dec
mov
lea
test
inc
cmps
aaa
aaa
ror
es
dec
jmp
xchg
fisubr
sti
nop
cmp
mov
mov
out
(bad)
hlt
cmp
cs
mov
cmp
or
out
cmp
shl
mov
dec
push
rol
cld
loop
inc
sub
mov
or
xor
(bad)
(bad)
xor
repnz
stc
sub
ret
ja
mov
(bad)
movs
mov
jno
mov
imul
loop
sahf
mov
(bad)
xchg
ss
mov
out
aad
and
pop
mov
out
leave
(bad)
mov
xchg
jae
xchg
jmp
push
inc
std
or
aas
sub
into
push
rcl
mov
cmp
push
add
pop
mov
repz
xlat
in
cmp
mov
pop
mov
jmp
enter
cdq
jle
shr
dec
and
aaa
and
shl
shl
dec
mov
xchg
(bad)
mov
push
inc
xchg
pop
popa
mov
das
cmp
sar
push
dec
inc
mov
stos
ret
mov
in
enter
lods
inc
mov
iret
push
jns
fiadd
mov
je
dec
sbb
cmps
repz
jmp
mov
fwait
or
(bad)
sub
idiv
or
dec
or
ror
ins
loope
outs
cwde
out
imul
push
mov
ret
jne
cmps
pop
mov
(bad)
int
xchg
pop
cmps
cli
push
xchg
sti
stos
pushf
adc
dec
pop
aad
addr16
test
add
cmps
or
and
clc
pop
push
scas
xor
xchg
loop
fwait
sbb
test
push
inc
jo
or
dec
(bad)
adc
(bad)
into
cmp
data16
neg
cmp
fstp
fs
jno
lahf
push
or
mov
or
loop
fsubr
popa
pop
mov
repz
dec
pop
cmp
in
out
xchg
in
cmp
dec
cld
push
test
dec
movs
sub
loop
add
xchg
aam
(bad)
mov
sub
pop
loop
push
mov
pop
push
nop
cld
setp
xchg
jecxz
jg
idiv
lds
inc
push
movs
add
jge
cmps
leave
xor
clc
add
add
xor
icebp
jae
ins
jne
(bad)
popa
sbb
sub
dec
inc
mov
les
clc
aaa
push
(bad)
icebp
out
adc
sub
stc
xchg
jno
push
dec
mov
jno
cli
rol
pop
xor
aad
imul
or
fs
xchg
int
imul
adc
push
adc
loope
imul
(bad)
jnp
loope
fisubr
es
je
cmp
push
push
jle
fisubr
dec
ds
das
cmp
int
sbb
sbb
pop
cmp
mov
sub
mov
inc
mov
jb
(bad)
outs
cmc
dec
push
pop
mov
xor
cmp
test
sbb
bound
retf
xchg
xor
ss
call
sar
movs
mov
lods
test
pop
mov
ret
jecxz
sub
dec
in
ret
xchg
pop
push
pop
pop
mov
test
fwait
xor
mov
add
mov
mov
mov
inc
sbb
leave
arpl
cmp
ss
cld
mov
adc
add
outs
xor
ds
movsx
pop
inc
sub
lock
es
jl
dec
cmps
fwait
jg
fdivr
mov
call
xchg
std
mov
mov
test
es
mov
fwait
sti
xor
dec
jecxz
(bad)
adc
scas
(bad)
mov
adc
xchg
out
pop
jns
enter
pop
cmp
lds
cmp
imul
sub
mov
mov
es
call
outs
inc
push
test
inc
call
sub
jecxz
cdq
xlat
cdq
lahf
call
cmc
lds
xchg
je
in
mov
dec
daa
pop
loope
ss
loopne
sub
shl
sbb
or
test
js
xor
fild
cli
and
jle
outs
bound
rcl
cs
jle
dec
aad
aad
scas
cdq
imul
push
inc
out
cwde
es
js
jg
out
ins
adc
out
stos
mov
data16
and
loopne
fadd
(bad)
cmp
shr
clc
inc
jne
stc
inc
push
inc
retf
fild
arpl
dec
add
sub
xor
test
test
and
mov
mov
pop
enter
push
fbstp
sbb
adc
leave
shr
cmp
mov
adc
in
loop
lods
inc
push
test
sbb
ror
or
dec
dec
and
clc
data16
xchg
sub
jbe
retf
in
xchg
sub
aaa
outs
repz
inc
ja
sbb
add
push
aaa
pop
arpl
iret
stos
aas
sbb
lahf
movs
jle
cs
dec
cmp
lock
aad
outs
stos
pop
pop
out
add
stos
xchg
jno
in
inc
adc
dec
jno
addr16
mov
loopne
jno
test
cmp
jecxz
ins
movs
fsubr
sar
cmp
out
mov
pushf
xor
xchg
jl
sub
cmps
cld
imul
repnz
xor
sbb
movs
scas
mov
jecxz
push
inc
aas
sub
push
idiv
and
mov
push
leave
out
int3
ret
pushf
cli
lds
rcl
pop
sbb
pop
in
mov
and
fwait
movs
jge
adc
in
xor
lods
push
test
push
cmp
das
in
mov
imul
sub
fild
int3
scas
inc
mov
xchg
push
fisttp
cmp
lds
das
pop
repz
into
hlt
(bad)
adc
pop
jno
ins
add
xor
and
push
cmc
xchg
lods
dec
jl
mov
adc
aaa
jns
out
inc
test
inc
clc
or
dec
cmp
js
jbe
fild
sbb
pop
addr16
mov
jmp
outs
jecxz
scas
adc
jl
vpaddb
or
popf
adc
push
push
or
lds
add
(bad)
xchg
mov
inc
and
jne
std
push
or
jmp
fnstsw
ret
inc
(bad)
push
in
rcr
call
loope
pop
call
ds
repnz
sbb
jge
mov
jno
fild
lds
mov
add
fucomip
add
inc
dec
retf
stc
push
sahf
dec
in
arpl
fisttp
hlt
adc
gs
mov
mov
movs
loop
and
(bad)
sbb
xchg
mov
dec
and
jb
mov
push
push
into
or
xchg
leave
into
ins
loope
lods
stc
lods
xchg
xlat
dec
cmp
ds
mov
fiadd
movs
sbb
xlat
xor
dec
push
gs
mov
jle
jecxz
mov
and
das
cmp
dec
popa
lods
movs
imul
das
rcl
mov
outs
mov
outs
mov
sbb
sub
adc
lock
pop
imul
test
aas
or
jne
push
scas
sbb
add
fwait
shr
pushf
test
out
and
test
rcr
sbb
out
outs
sub
out
jle
dec
cmc
aaa
push
adc
sbb
adc
iret
add
stos
xchg
xchg
call
(bad)
(bad)
loop
icebp
in
(bad)
mov
js
call
mov
and
call
pop
adc
arpl
call
jp
sbb
test
dec
add
jmp
fs
ret
and
and
mov
aad
fs
inc
push
inc
jmp
mov
(bad)
jecxz
clc
push
dec
push
aas
lods
sbb
outs
mov
popw
mov
(bad)
pop
mov
jp
(bad)
xchg
xor
fldpi
iret
hlt
adc
dec
inc
sub
sub
(bad)
xchg
dec
leave
push
(bad)
icebp
test
imul
rcr
jecxz
shl
and
into
or
sbb
and
cli
xor
repnz
and
pop
daa
cli
and
jnp
sahf
shr
and
push
movs
rol
rcr
push
std
pop
mov
in
inc
push
retf
pop
mov
adc
adc
fbstp
mov
jmp
push
sub
(bad)
stc
sti
xchg
call
xor
into
mov
jae
int3
dec
loope
sbb
loop
add
add
sbb
add
aam
jns
sbb
xor
dec
mov
pop
xchg
retf
fimul
js
mov
cmps
(bad)
into
sbb
jbe
hlt
pop
loop
xor
add
stc
es
mov
jo
popa
test
cmp
in
pop
push
mov
push
and
sbb
(bad)
iret
ss
aaa
faddp
loope
push
loope
outs
sub
adc
das
mov
(bad)
jno
movs
pop
push
push
mov
adc
mov
dec
adc
dec
int3
pop
sbb
arpl
xor
fstp
loope
shl
scas
add
dec
sub
jne
jno
jmp
fstp
dec
in
sbb
fist
mov
mov
les
mov
clc
xchg
adc
jae
jp
rol
dec
enter
dec
(bad)
and
jb
ins
popa
pop
inc
aaa
push
pop
out
sub
mov
outs
sar
test
jg
repnz
xchg
mov
adc
bswap
pop
lods
xchg
test
nop
dec
out
daa
jp
dec
sti
dec
push
inc
mov
test
mov
inc
leave
icebp
and
push
push
or
into
daa
mov
scas
call
xor
push
cmp
push
mov
test
add
mov
fcomp
push
mov
mov
stc
lods
xor
sbb
loop
or
ins
or
sbb
inc
or
dec
out
test
call
mov
mov
adc
mov
in
jle
adc
or
call
inc
and
adc
add
xor
fnstenv
or
lods
add
mov
mov
rol
pop
mov
or
push
outs
mov
mov
in
fisubr
loop
push
xor
ror
popa
xchg
jae
fmul
fld
stc
mov
bts
inc
push
jno
int3
iret
scas
les
ficomp
rol
jmp
push
fisub
inc
ret
and
(bad)
lock
adc
imul
arpl
fstp
mov
neg
stos
ret
cmp
ret
pop
outs
push
out
dec
sbb
mov
mov
test
mov
call
sbb
dec
int
loopne
stos
loope
mov
xchg
leave
pop
mov
test
fimul
(bad)
mov
(bad)
retf
mov
sbb
retf
je
cmp
dec
push
gs
popa
pop
sub
pop
push
(bad)
cmp
adc
cmps
out
and
sbb
sbb
jne
sbb
movs
push
add
inc
jmp
cmps
(bad)
push
push
pusha
xor
mov
imul
ins
xor
sub
dec
mov
pop
stos
pop
sbb
mov
in
inc
pop
ds
add
pop
retf
jae
jmp
pop
mov
mul
rol
lods
inc
aad
mov
loope
addr16
mov
enter
ret
movs
adc
dec
inc
pop
xor
jbe
les
adc
std
adc
imul
push
push
push
clc
retf
jle
stos
inc
fld
jbe
jecxz
mov
frstor
fild
sbb
call
cmp
(bad)
or
push
fwait
push
inc
adc
ins
enter
daa
in
loop
stc
cmp
daa
repnz
das
jb
pop
or
mov
loopne
loope
or
jne
jbe
xor
xchg
loope
xor
retf
xchg
sub
je
(bad)
sbb
and
cdq
xor
mov
mov
pop
mov
ret
nop
(bad)
mov
fwait
outs
add
sub
jge
mov
cs
push
xchg
xlat
inc
jp
push
iret
sar
pop
push
int3
mov
test
push
sbb
icebp
mov
sbb
ficom
ins
ins
jae
clc
popa
pop
stos
push
(bad)
outs
(bad)
aam
retf
mov
loopne
adc
push
sbb
mov
daa
call
mov
jle
pop
xor
add
in
in
xlat
xchg
outs
pop
repnz
adc
shr
scas
push
out
jge
pop
in
stc
enter
pop
sbb
pop
inc
sbb
out
mov
mov
test
push
in
push
and
fild
hlt
mov
xchg
push
mov
xor
mov
iret
add
ds
mov
mov
xchg
stos
xchg
xchg
or
or
or
jo
xchg
pop
pop
std
imul
jno
jecxz
ret
mov
cmp
inc
call
add
call
mov
sbb
xchg
jecxz
push
scas
add
mov
jg
outs
xor
fisub
mov
addr16
mov
js
xchg
movs
sub
xchg
xchg
add
mov
pop
jb
loop
pop
(bad)
into
mov
adc
xor
push
int
in
das
rsqrtps
push
jbe
lods
loop
xlat
stos
jl
in
jmp
outs
imul
rol
cli
add
mov
out
jo
retf
push
mov
ins
mov
aad
dec
dec
out
jae
ds
stc
pop
adc
arpl
lahf
and
aam
sbb
add
or
test
adc
sub
pop
in
int3
inc
inc
pop
and
push
sti
jge
das
mov
xlat
xchg
pop
movs
stc
dec
xor
scas
xchg
pop
mov
inc
retf
aas
outs
jmp
jmp
cdq
stos
cmp
adc
or
pop
and
jae
enter
cmc
jnp
shl
in
or
inc
xor
and
and
fild
in
call
mov
(bad)
repz
jae
jno
mov
jge
mov
adc
(bad)
push
inc
cld
and
push
or
rol
outs
das
cli
xchg
bound
push
mov
mov
xor
(bad)
cmp
sub
pop
in
push
call
test
in
loop
jmp
icebp
das
call
adc
(bad)
adc
fucomp
cmp
sbb
lods
stos
(bad)
adc
enter
mov
repnz
mov
adc
inc
adc
pop
ja
cmp
cmc
or
out
iret
idiv
and
mov
jo
xor
xlat
pop
scas
sub
mov
out
xchg
jae
dec
out
or
ret
push
xchg
dec
push
cmp
xor
lods
mov
mov
ins
sub
(bad)
sub
test
aam
pop
ficom
mov
imul
dec
cwde
xor
in
and
sub
outs
movs
cmp
fidivr
jmp
outs
jbe
sub
(bad)
add
and
inc
hlt
add
ja
push
std
jle
hlt
sbb
mov
or
mul
retf
lahf
mov
bound
test
push
push
repnz
jg
in
xor
(bad)
in
push
(bad)
ja
retf
ret
cmps
ins
dec
test
sar
hlt
dec
rol
xor
add
push
addr16
push
jb
fisub
mov
push
icebp
and
cmps
pusha
stc
xlat
push
add
or
sub
iret
ds
lods
sub
imul
js
mov
iret
es
enter
adc
mov
aam
mov
inc
hlt
cmps
(bad)
std
and
lds
xchg
mov
cmp
jno
iret
sub
jae
xor
jns
jge
fwait
push
fidiv
push
cmps
and
jo
pop
and
jno
cs
add
push
mov
lods
xor
ins
std
jl
retf
fnsave
jg
ins
sbb
fnstenv
inc
into
and
lahf
inc
or
and
lds
mov
ja
cdq
dec
ins
inc
mov
mul
clc
pop
mov
xchg
enter
test
fistp
sbb
les
cli
outs
retf
sahf
xchg
push
pop
dec
int
sub
sub
mov
repnz
jp
out
pop
mov
jns
movs
mov
mov
mov
push
pop
icebp
jb
shl
jo
push
gs
push
cmc
push
call
in
and
or
lods
sbb
ja
mov
or
je
sbb
pop
out
cmps
pop
mov
cli
add
rol
dec
sub
cwde
call
xchg
jae
push
mov
(bad)
dec
imul
inc
sub
das
inc
fbld
ss
ficom
xchg
stos
jge
hlt
cmp
cs
std
into
lods
daa
aaa
sbb
dec
popa
jbe
enter
call
xchg
inc
xor
pop
repz
shl
mov
mov
mov
push
outs
ja
icebp
add
cld
dec
call
jae
fld
rcr
cld
arpl
push
mov
movs
(bad)
pusha
or
daa
rol
push
movs
push
mov
and
clc
iret
mov
dec
arpl
add
loop
sbb
stos
jb
mov
mov
mov
clc
fdivr
sbb
adc
dec
pop
push
in
push
lock
scas
out
jnp
xor
daa
inc
test
imul
and
mov
fdiv
jmp
or
or
and
mov
cs
movs
inc
xchg
pop
and
mov
in
scas
push
out
call
ror
adc
pop
cmps
lods
xchg
test
idiv
sub
cwde
and
icebp
xchg
arpl
cmp
inc
xchg
sar
dec
xchg
mov
add
cld
push
mov
sti
out
push
sti
mov
adc
push
jnp
jo
(bad)
fist
mov
push
and
mul
(bad)
loope
cmps
retf
movs
push
hlt
sbb
push
outs
nop
fcmovnu
mov
mov
xor
xchg
dec
setbe
in
jl
push
add
jmp
add
fidiv
(bad)
xor
(bad)
jge
fist
fbstp
stos
push
xchg
mov
pop
jmp
or
mov
sbb
cmc
stc
sub
in
scas
(bad)
cs
(bad)
mov
mov
cmp
cdq
or
nop
xchg
scas
and
pop
adc
pop
ret
sbb
outs
add
cli
mov
add
adc
dec
adc
retf
dec
sar
adc
ror
jae
mov
hlt
addr16
popf
fild
mov
pop
sbb
shl
lea
aaa
lds
mov
mov
dec
xor
inc
add
jmp
imul
repz
fs
jge
(bad)
cdq
imul
scas
mul
mov
sbb
(bad)
loopne
icebp
add
loop
ficomp
sbb
push
lock
jno
mov
js
loopne
add
shl
xchg
pop
frndint
dec
jmp
mov
inc
mov
pop
inc
xchg
mov
mov
js
dec
and
sub
inc
lock
icebp
outs
ins
jmp
loope
repz
jmp
bound
pop
mov
(bad)
idiv
retf
in
mov
add
cdq
and
inc
sub
jb
xchg
add
add
mov
inc
les
mov
ret
je
sub
movs
xchg
(bad)
push
push
cs
mov
push
fcomi
dec
fdivr
rcr
push
test
push
mov
mov
push
loope
push
cdq
jo
cmp
int
mov
dec
or
push
jmp
test
pop
cs
imul
scas
mov
pop
jnp
ja
or
into
mov
xor
jns
or
pop
lock
mov
(bad)
jae
mov
loop
jl
ftst
dec
es
jns
jmp
fdivr
loope
dec
pop
scas
cmp
push
cmp
mov
mov
loopne
add
pop
push
and
push
dec
cmc
scas
mov
pop
mov
(bad)
ret
jle
and
clc
mov
call
pushf
push
cmp
dec
inc
(bad)
stc
sbb
out
shl
icebp
jno
cmp
cmp
mov
lea
fdivp
(bad)
in
ret
arpl
movs
outs
add
jecxz
push
dec
mov
cmp
addr16
imul
xor
add
std
adc
adc
test
(bad)
pop
not
(bad)
push
retf
xor
xchg
ffree
jno
fs
mov
(bad)
mov
mov
js
jb
scas
sub
into
pop
jle
fistp
nop
pop
pop
mov
lahf
into
push
(bad)
adc
outs
(bad)
inc
test
jo
cld
add
xchg
mov
(bad)
div
lahf
mov
adc
inc
jnp
in
loopne
nop
cmp
sbb
push
xlat
imul
xor
sub
mov
add
div
sub
enter
dec
add
clc
sub
sub
cmp
mov
mov
pusha
std
cmp
dec
fsub
xchg
add
mov
push
and
jle
call
jno
call
outs
and
int3
mov
mov
cmps
adc
inc
mov
loop
(bad)
(bad)
xchg
add
push
mov
pop
ds
retf
or
dec
push
inc
scas
das
pop
pop
rcr
dec
cld
adc
sbb
or
mov
shl
add
loop
push
mov
test
pop
or
int
xchg
cli
arpl
mov
mov
pusha
cmp
leave
sbb
or
sbb
test
dec
adc
idiv
test
push
dec
push
fdiv
loopne
xchg
push
into
or
inc
cwde
aam
data16
push
jg
clc
lock
xlat
outs
sub
adc
xchg
mov
add
stos
jb
xchg
inc
mov
jne
mov
push
mov
mov
mov
lock
pusha
mov
loop
cmps
push
ja
repnz
sub
xor
shr
ins
jne
cmp
jnp
aaa
fadd
sar
scas
xchg
loop
mov
adc
retf
mov
loop
mov
ins
xchg
jbe
mov
retf
push
cld
data16
push
ss
xchg
in
add
addr16
inc
mov
arpl
xor
mov
pop
std
ja
iret
jo
sbb
cs
sub
test
in
add
shl
ss
add
into
mov
ins
sbb
mov
sahf
push
mov
and
pushf
sbb
les
rol
bound
adc
xchg
repnz
push
mov
shr
add
inc
test
sbb
push
and
adc
xchg
jne
mov
and
dec
dec
pop
push
into
xor
mov
jne
daa
mov
mov
adc
pop
das
adc
mov
lea
imul
ins
or
test
push
xor
dec
push
mov
repnz
imul
bound
cmp
cmp
xor
pusha
jae
sub
bound
pop
jmp
daa
retf
or
out
sub
fsubr
cli
sub
push
js
call
call
xchg
je
jne
inc
outs
shl
or
jmp
shl
xlat
push
push
packsswb
xor
add
js
and
in
cmp
(bad)
cld
xor
or
push
retf
call
in
leave
jge
jge
mov
into
repnz
xchg
out
pushf
sub
js
imul
mov
pop
cmp
mov
xchg
jecxz
mov
push
add
shr
cmp
cmp
repnz
mov
out
scas
dec
mov
push
addr16
fcmovu
mov
shl
mov
inc
ss
not
jl
loop
sbb
xor
xchg
xchg
push
sub
stc
enter
inc
add
es
leave
jb
inc
mov
icebp
aas
sbb
addr16
fldenv
stos
sbb
xchg
pop
xchg
enter
cmp
in
xor
push
fmulp
lds
jno
fmul
xor
std
aas
out
call
sbb
xchg
enter
pop
inc
ret
div
and
sub
sub
(bad)
out
sar
aad
call
mov
sbb
add
out
xor
and
(bad)
in
inc
sub
sub
xchg
outs
add
(bad)
inc
xchg
cmp
shr
cmp
inc
or
aad
inc
ret
inc
jg
out
mov
mov
cmp
jmp
push
jb
pop
addr16
xchg
pop
sbb
add
js
es
jge
retf
adc
ja
mov
ins
aaa
int3
popa
shl
and
imul
pop
out
inc
and
or
movs
in
call
dec
push
push
into
adc
mov
(bad)
jno
mov
push
dec
xchg
gs
pop
fisub
(bad)
xlat
mov
retf
fnstenv
inc
shr
in
xchg
jl
xchg
push
pop
ds
sti
(bad)
inc
cmp
clc
test
movs
jnp
stos
inc
and
push
jl
in
ds
dec
xchg
jp
mov
dec
push
and
inc
mov
call
sbb
push
ins
cmp
dec
in
mov
cmps
fst
mov
add
or
inc
cmps
add
out
sbb
inc
retf
mov
jo
pushf
mov
mov
or
xchg
loope
sbb
add
es
in
mov
aaa
mov
or
in
lods
xchg
xor
cmp
test
(bad)
jmp
mov
jno
hlt
inc
and
add
in
xchg
sbb
or
adc
and
dec
dec
(bad)
aaa
push
xor
adc
adc
into
fstp
mov
dec
add
test
adc
fadd
jnp
jp
xor
dec
rcr
adc
test
aas
inc
test
sbb
pop
lds
cmps
aam
and
dec
push
aas
(bad)
push
test
pushf
stos
into
inc
(bad)
repz
xchg
jne
sub
or
lock
mov
adc
call
inc
mov
xor
pop
pusha
mov
(bad)
or
arpl
inc
dec
lock
pop
sbb
in
or
fisub
(bad)
in
pop
or
fisttp
mov
dec
mov
jns
(bad)
out
pop
push
mov
mov
push
and
out
mov
stos
ds
jae
push
mov
jb
das
test
add
cmp
dec
popa
xchg
xor
fwait
cmp
mov
jns
fwait
test
(bad)
(bad)
or
jmp
repz
sahf
push
push
sbb
mov
std
mov
movs
mov
pop
xlat
out
dec
out
mov
into
mov
inc
adc
bound
inc
adc
and
test
sub
test
call
xchg
push
push
ret
sub
inc
mov
push
aad
mov
inc
in
adc
rol
daa
xchg
sbb
mov
dec
test
pop
shl
push
sbb
inc
(bad)
lds
push
aaa
xor
dec
lods
mov
ds
xor
adc
mov
out
daa
test
xchg
repnz
ds
jb
sbb
inc
sub
aam
or
inc
adc
icebp
clc
xor
outs
ds
sub
aad
fwait
sahf
dec
xor
mov
cmp
xor
dec
popf
jbe
popf
mov
shl
adc
aam
jmp
mov
and
int
cmp
and
call
mov
cmps
adc
ins
mov
(bad)
pop
fstp
cli
or
jp
and
cmp
dec
mov
ja
scas
aad
xchg
mov
push
(bad)
(bad)
lods
xor
dec
push
mov
pop
jmp
in
xor
enter
call
inc
xor
lahf
push
mov
xor
pop
ja
aam
je
mov
cmps
lds
fiadd
fistp
out
adc
in
jmp
jl
or
cmp
xchg
popf
pusha
jb
leave
jae
(bad)
aad
imul
retf
xchg
jno
in
repnz
mov
xchg
dec
mov
(bad)
test
and
push
and
inc
push
and
adc
es
jbe
adc
call
mov
inc
adc
aaa
(bad)
aaa
cs
push
pusha
jmp
cmp
call
loop
call
sub
sub
cli
rcl
cdq
sbb
je
mov
jg
sbb
movs
push
ficom
dec
inc
int
add
cmps
out
push
cmp
xchg
cdq
(bad)
pop
cmp
xchg
mov
cld
inc
scas
leave
jbe
cli
retf
les
sub
jbe
rol
jp
lods
mov
mov
mov
gs
aaa
test
aam
stos
and
sbb
push
xor
adc
stos
jae
adc
add
push
das
imul
lahf
(bad)
mov
dec
cmp
fxch
pop
inc
push
push
or
in
leave
mov
ins
test
enter
add
mov
xchg
hlt
cmp
cmp
xchg
xor
xor
cmp
sbb
mov
cmp
jl
mov
cmp
mov
sti
mov
lods
lds
dec
cmp
inc
cmp
cmc
xchg
fld
mov
mov
clc
lds
dec
rcr
out
jmp
aam
push
or
push
xchg
call
mov
out
jne
in
jbe
jle
rcr
jge
imul
jp
adc
adc
pop
xchg
add
push
(bad)
jns
ret
xor
cwde
hlt
xor
call
sub
mov
(bad)
in
loopne
push
into
cmp
shl
sub
test
mov
loop
jmp
jmp
test
mov
xchg
lock
inc
push
f2xm1
mov
lods
push
in
ret
inc
push
(bad)
call
adc
fst
mov
aaa
test
jecxz
mov
out
xor
adc
or
mov
xlat
lods
ins
push
or
sbb
out
sub
cmp
sbb
mov
mov
add
inc
rcl
pusha
mov
(bad)
xor
adc
jmp
jb
je
inc
sbb
stos
sub
cmp
into
mov
or
xchg
test
jge
addr16
sub
int3
pop
in
sbb
iret
sub
sub
fld
out
fcmove
jmp
jmp
push
(bad)
or
sar
loope
test
sub
xor
outs
mov
pop
cld
call
cwde
mov
imul
in
(bad)
sbb
call
fs
xchg
sub
cmp
pop
mov
xchg
adc
add
jl
cli
mov
cli
mov
and
push
call
add
pop
mov
ins
mov
iret
mov
es
repz
lods
push
xor
js
fimul
sub
sbb
push
xor
arpl
aas
jmp
lgs
idiv
inc
fwait
jg
jg
retf
mov
mov
inc
hlt
mov
lea
xor
jmp
out
push
sbb
or
push
jnp
enter
out
jp
das
je
sbb
out
loop
mov
add
mov
shl
pop
(bad)
and
add
adc
mov
(bad)
push
push
jnp
and
pop
add
push
call
dec
dec
lahf
ja
pop
aad
mov
push
jg
fcomp
aad
dec
jo
cmc
push
stos
add
and
icebp
add
xchg
push
hlt
mov
sub
mov
mov
and
ret
sub
dec
imul
fist
stos
jbe
mov
mov
fwait
sbb
push
mov
sub
mov
mov
pop
cmp
pop
outs
arpl
fsubr
or
mov
test
daa
push
movups
stc
cmps
or
pop
mov
mov
fld
push
into
aaa
mov
sub
aam
fisubr
add
mov
push
sbb
push
xor
fidivr
mov
mov
inc
es
dec
mov
cmp
jno
xor
mov
xchg
inc
les
pause
adc
cmp
xchg
cmp
add
rcl
pop
jge
rcr
sahf
leave
jno
adc
adc
stc
test
hlt
or
or
or
push
movs
aaa
dec
mov
int
and
dec
repz
sbb
test
shl
stos
dec
mov
jo
sub
out
inc
fwait
sbb
lds
jecxz
pop
mov
sahf
jo
data16
mov
out
(bad)
cs
inc
push
fidiv
xor
js
imul
test
fcmovnu
mov
dec
pop
mov
pop
xor
sub
mov
enter
pop
mov
ds
in
into
(bad)
fistp
push
sbb
jb
loope
push
outs
icebp
dec
lahf
and
and
int
icebp
mov
sub
je
(bad)
push
pop
mov
je
int
inc
stos
jmp
je
or
shl
and
shr
cmp
cmp
mov
call
daa
mov
sti
cdq
fcom
loop
fisttp
jle
sahf
jecxz
out
pop
(bad)
icebp
xchg
or
pop
int
pop
sahf
enter
mov
(bad)
fwait
jae
call
mov
cmp
mov
or
pop
fwait
stos
dec
in
adc
ja
sbb
add
mov
mov
mov
iret
dec
(bad)
cmp
bound
scas
cmp
mov
mov
mov
shl
jmp
test
inc
mov
sbb
push
rcr
and
idiv
scas
and
fmul
inc
mov
jne
xchg
xchg
out
sub
cli
push
mov
cdq
lahf
lods
mov
jae
inc
pop
and
mov
daa
idiv
fwait
jmp
mov
lahf
mov
ins
or
sbb
lods
rcl
leave
shl
and
mov
test
mov
sub
push
inc
(bad)
lahf
mov
or
leave
or
push
arpl
sahf
cmp
adc
cmp
addr16
sbb
call
icebp
repz
sub
adc
test
jg
retf
stc
mov
sbb
adc
pusha
adc
cmp
sar
sbb
sti
and
sbb
into
add
icebp
mov
out
retf
lock
lds
add
inc
mov
aaa
nop
mov
sbb
dec
jb
xchg
inc
stos
mov
cld
dec
(bad)
dec
repz
sub
jae
or
cmp
adc
lods
enter
mov
dec
mov
mov
dec
pop
ins
out
in
jmp
xchg
aas
sbb
in
pop
jmp
jbe
outs
xlat
mov
out
push
mov
jp
mov
inc
jnp
mov
rcl
pop
xchg
popa
add
jae
hlt
xchg
cmp
xchg
shr
adc
in
jb
scas
fcos
adc
cmps
jle
sbb
outs
test
mov
mov
mov
fs
out
nop
lods
and
into
inc
loopne
shl
lds
lahf
add
mov
xor
ret
xchg
jecxz
and
mov
push
and
(bad)
fisub
jnp
dec
int
xchg
aas
shl
imul
sub
out
and
imul
pushf
push
push
xchg
mov
aaa
push
mov
inc
enter
js
mov
jg
repz
outs
push
jb
adc
sbb
sub
sub
jg
xlat
cmp
cmps
aaa
push
xchg
aad
cli
adc
and
dec
cmps
sub
sub
push
pop
lahf
jmp
pop
sti
fnstcw
les
jae
mov
imul
out
mov
nop
hlt
or
xchg
pop
xor
cs
xchg
ret
push
dec
outs
push
inc
cmp
cld
leave
sub
(bad)
push
(bad)
loope
daa
int
mov
or
pop
dec
test
add
sub
or
push
mov
mov
scas
xor
xchg
jge
mov
push
pop
push
int
lods
or
aaa
lock
sbb
popa
out
(bad)
xor
jecxz
jecxz
inc
cmp
mov
mov
(bad)
sar
dec
sti
ud1
in
push
mov
jle
or
mov
dec
das
leave
popf
xchg
cld
pushf
jmp
sahf
pop
ins
jp
add
ret
add
int
test
aaa
xor
and
leave
jmp
jmp
into
mov
scas
fstp
loop
inc
out
call
jmp
data16
sbb
(bad)
sti
jne
loope
inc
pop
clc
shl
ret
xor
dec
addps
push
or
fs
cmp
mov
lock
(bad)
inc
mov
jle
fsubrp
mov
lock
test
ins
imul
mov
push
push
fisubr
inc
fisttp
or
cmp
cdq
dec
mov
and
sbb
daa
mov
out
xchg
hlt
dec
pop
mov
out
stos
jp
sar
mov
push
cmc
test
popf
loop
mov
inc
aaa
sbb
outs
jno
iret
(bad)
xor
sbb
and
dec
pop
ss
fldcw
pop
ins
add
mov
cld
ror
or
(bad)
cmp
push
or
sti
inc
sub
sahf
and
jle
xor
mov
push
add
inc
jne
push
push
mov
mov
cli
cdq
shl
cmp
and
dec
jnp
or
ret
push
push
call
xlat
push
fbld
repnz
addr16
xchg
shr
jnp
jp
cmp
xchg
mov
test
mov
pmaxub
sbb
xchg
add
and
push
mov
adc
loope
sar
pop
mov
sub
push
out
ss
push
fsub
pushf
ins
cmp
inc
cmp
lds
jne
les
jl
mov
pop
into
push
(bad)
stc
jge
and
int
call
stos
leave
call
inc
dec
nop
xor
jae
xor
or
lahf
jg
ss
repnz
sub
xor
lods
inc
mov
mov
adc
scas
shl
jg
(bad)
pop
leave
sahf
xchg
in
inc
xlat
les
jle
aas
push
pop
mov
mov
div
xchg
js
cmps
push
mov
mov
jl
pop
out
fild
pop
hlt
cmc
and
xchg
jecxz
add
inc
rdmsr
mov
mov
das
sbb
jb
xor
div
outs
mov
and
pop
push
jg
(bad)
jg
mov
cmp
jbe
cmp
add
ret
and
rol
lea
sbb
jb
dec
xor
adc
xor
xchg
dec
mov
pusha
xchg
dec
push
(bad)
test
and
jb
pop
js
std
fcomip
cmc
in
mov
out
movs
xchg
dec
inc
mov
xor
scas
scas
mov
cmp
and
fcmovu
pop
mov
in
push
(bad)
int
(bad)
pop
inc
ret
int3
hlt
lods
rcl
fcom
adc
mov
add
and
inc
inc
cmp
xchg
ret
mov
imul
push
xor
fucom
imul
jge
stc
add
jnp
lea
or
and
rol
push
xlat
ja
retf
push
dec
mov
lods
sti
daa
fmul
fist
sub
ret
dec
data16
loopne
das
inc
and
push
repz
add
int
pushf
inc
or
jp
stc
xchg
adc
jb
jnp
sub
out
cmp
adc
iret
mov
mov
adc
pop
xor
cmps
ja
push
movs
xor
pop
(bad)
cmp
hlt
in
repnz
jmp
pop
je
in
xor
xor
jecxz
pushf
adc
aas
test
outs
in
scas
int3
outs
jmp
push
xchg
scas
dec
push
lods
cmp
stos
std
jno
jns
xchg
xor
xor
lods
loopne
in
ja
(bad)
adc
loopne
adc
movs
shl
cmp
inc
mov
dec
test
mov
into
cmp
jecxz
and
pop
push
dec
pop
xchg
or
call
xor
or
ret
push
(bad)
push
dec
mov
jo
mov
mov
dec
lea
dec
inc
pop
icebp
jae
jl
stc
or
mov
je
xchg
mov
sar
scas
push
inc
movs
or
stc
xchg
(bad)
in
into
out
sub
fs
(bad)
jle
sub
jl
int3
jne
sbb
test
jmp
xor
push
in
sbb
cmc
mov
and
pop
in
dec
adc
xchg
adc
(bad)
inc
(bad)
call
pop
mov
shl
inc
mov
dec
arpl
pop
ja
push
xchg
xor
les
das
ja
jae
pop
sub
test
call
mov
imul
push
outs
pop
mov
pop
mov
sbb
scas
pushf
neg
pushf
fimul
inc
pusha
sbb
jb
push
in
jge
mov
enter
(bad)
cld
(bad)
xchg
push
pop
cmp
cld
sub
ror
rcl
pop
outs
mov
popa
inc
xor
leave
outs
out
jle
mov
xchg
lea
movs
fdiv
push
mov
xchg
popa
xchg
ret
push
pop
stos
push
push
xor
stos
data16
sbb
adc
loopne
dec
rcl
test
cdq
loope
lahf
popa
push
or
in
pushf
jp
imul
mov
jg
add
(bad)
fistp
neg
arpl
les
cmp
stos
cli
std
push
or
or
or
mov
sub
or
cmp
add
xor
mov
neg
mov
mov
je
nop
pop
mov
jle
mov
outs
add
jae
mov
or
sbb
data16
je
cmp
popa
(bad)
addr16
arpl
dec
sub
popa
mov
xor
push
mov
pop
cmps
mov
sbb
xor
fadd
enter
sbb
pop
ret
test
imul
fucomp
in
jmp
cdq
and
xchg
inc
inc
sbb
adc
add
and
sbb
iretw
or
push
sub
and
jae
ror
mov
or
repz
mov
mov
jg
loop
sub
jmp
cmp
add
aad
lods
loop
cli
add
pop
cmc
push
push
pop
adc
cmp
mov
xor
lds
lahf
jne
xchg
add
sbb
and
mov
and
mov
movs
jae
mov
int
xchg
mov
dec
pop
xor
sti
int
pushf
aad
shl
adc
mov
int
xor
push
fnstenv
iret
sub
mov
rcl
fsub
movs
loop
mov
xchg
cmc
jg
ret
jno
sbb
mov
test
lock
pusha
mov
cdq
in
add
shl
rcr
pusha
lods
movs
shl
sub
hlt
sahf
pop
scas
into
bound
(bad)
fild
popa
aas
test
leave
push
sbb
shl
pushf
cmp
cmc
inc
inc
ror
inc
fidivr
loopne
cmp
sub
cmp
shl
jg
pop
lock
fmul
cld
leave
das
int
not
popw
pop
sbb
xor
sub
or
std
pop
jmp
rol
cmp
test
rcr
test
mov
sub
xor
mov
jmp
push
add
fwait
dec
mov
mov
push
int
pop
mov
xchg
retf
icebp
push
movs
cdq
push
cmp
mov
push
xchg
cwde
sahf
push
shl
ss
jbe
push
and
mov
retf
or
mov
or
inc
push
inc
xor
in
scas
test
push
push
cmp
inc
cdq
repnz
hlt
stos
es
leave
dec
int3
out
in
adc
cmps
adc
add
mov
pusha
sub
pop
in
test
shl
cli
retf
mov
div
lahf
or
sbb
fxch
imul
mul
ins
add
mov
jmp
add
or
inc
aaa
stos
mov
jno
cmp
push
in
neg
mov
lods
mov
sbb
jns
adc
in
loope
push
cli
push
push
xor
fsubr
sub
ja
repz
mov
cdq
les
ret
aad
(bad)
dec
mov
jae
div
mov
jg
jecxz
mov
mov
fadd
mov
or
xchg
pop
es
sub
jno
jge
stos
jecxz
int
xchg
sar
xor
outs
imul
pusha
or
scas
sti
gs
sub
sbb
push
pop
push
mov
scas
push
ja
xor
xlat
rep
ret
pop
pop
jle
les
pop
push
scas
pop
outs
xchg
in
nop
adc
cwde
push
stc
sbb
push
in
mov
push
sub
stos
je
xor
inc
cmps
mov
add
sbb
pushf
test
jae
mov
inc
jmp
cdq
mov
ja
mov
jecxz
test
js
push
in
cmp
pop
in
jmp
mov
(bad)
xchg
les
ror
mov
pop
cmp
gs
rol
add
fistp
js
adc
out
add
adc
or
mov
or
ret
into
sub
into
cli
push
pushf
es
jbe
xor
xchg
in
ja
jnp
fst
add
mov
test
mov
pop
mov
add
imul
adc
add
jecxz
pushf
icebp
rcl
in
and
adc
int
outs
test
(bad)
mov
repz
sub
lock
xchg
test
mov
data16
mov
mov
(bad)
pop
arpl
dec
mov
dec
daa
sbb
push
jl
sbb
ds
int
push
(bad)
jecxz
xchg
jo
cs
pop
mov
sbb
shr
cmp
mov
or
iret
(bad)
sar
std
mov
cmp
and
retf
(bad)
int
jno
in
sbb
push
inc
je
dec
neg
pop
push
xchg
jae
jl
loop
jo
ret
mov
jns
jno
sub
mov
jl
pop
cmp
sub
and
jae
and
ret
mov
loope
sahf
sub
mov
mov
inc
cmp
outs
daa
sbb
sub
fsubrp
leave
cmps
sub
(bad)
loope
fwait
out
fnstcw
retf
jno
arpl
mov
ins
dec
inc
jns
mov
loopne
ja
int3
xchg
ins
cld
fidivr
inc
jl
fwait
or
push
pop
xor
xchg
adc
scas
seto
aaa
outs
int3
adc
iret
fs
lods
(bad)
jno
or
cmc
movs
push
adc
aad
jb
shl
stc
data16
pop
sbb
jmp
popf
(bad)
pusha
xchg
aas
fnclex
outs
xchg
scas
gs
bound
inc
jae
leave
out
aam
inc
xlat
pop
or
push
(bad)
sbb
loop
xor
cmp
or
sti
cmp
sub
mov
pop
or
sti
fdivr
out
xchg
in
shl
sbb
adc
outs
rol
cmc
sahf
mov
xor
adc
pop
xor
xor
add
lea
in
test
sbb
out
inc
add
add
mov
xchg
jl
xchg
setne
mov
and
repnz
addr16
out
les
pop
(bad)
pop
push
sbb
rcl
cmp
xchg
add
dec
sub
not
mov
aam
loopne
call
scas
add
mov
sub
sub
push
sub
pop
enter
or
xor
lods
fwait
xchg
sbb
lock
out
mov
cmp
mov
jmp
mov
adc
xor
xchg
xchg
daa
dec
lahf
loopne
mov
cmp
clc
aas
add
clc
cmp
adc
bound
je
sbb
mov
push
imul
sbb
out
jnp
stos
ins
adc
ss
xor
and
daa
les
imul
jl
stc
and
push
fistp
scas
mov
mov
fwait
retf
push
daa
xchg
adc
adc
leave
lock
jnp
test
or
js
pop
js
xchg
call
icebp
int
sti
sub
push
je
das
pop
pop
dec
ret
adc
lock
pop
xchg
out
ror
sbb
int
jae
loopne
sub
mov
push
inc
shl
xor
mov
mul
pop
in
cmps
push
out
mov
dec
imul
push
jl
xor
mov
xor
mov
ja
mov
xor
inc
ret
or
fadd
test
fsubr
mov
fdiv
je
fistp
or
fild
adc
frndint
mov
jnp
jae
push
sbb
stos
dec
add
mov
mov
xor
cmp
out
dec
pop
add
cmps
lods
pop
or
and
push
or
(bad)
in
cmp
(bad)
shl
fisttp
mov
sub
loope
dec
pop
scas
sbb
adc
out
addr16
xchg
pop
mov
or
add
or
test
pop
mov
es
fcomp
sbb
sbb
movs
pop
ret
xchg
push
sbb
aad
sbb
push
(bad)
loopne
cmp
xor
enter
sub
lahf
mov
xor
cmps
fld
int
cmps
int
not
inc
aad
add
xchg
sbb
push
adc
jecxz
ds
stos
in
or
out
data16
dec
adc
addr16
ins
call
pushf
xlat
cs
call
(bad)
out
fmul
xor
sbb
mul
jnp
call
mov
inc
inc
mov
jae
dec
ds
lea
shl
div
xchg
movs
push
jo
lods
cmp
add
out
mov
push
nop
mov
cmps
sub
ror
push
stos
loope
add
dec
xchg
xor
ret
fidivr
add
or
mov
pop
outs
rol
inc
fdivr
xor
pop
xchg
jg
rol
unpcklps
shr
sub
jnp
adc
lahf
sbb
xor
ins
(bad)
(bad)
lock
js
sub
and
cmps
jae
mov
aaa
jle
stc
jae
inc
adc
xchg
and
xor
lea
out
gs
push
stc
mov
aaa
xor
xor
jae
(bad)
sti
mov
and
ja
mov
nop
inc
gs
jae
push
cmp
jo
out
xor
out
lods
es
rcl
xor
adc
pop
fidivr
iret
mov
out
xchg
push
push
mov
jns
loop
pop
and
ja
sub
test
movs
mov
dec
arpl
ret
int3
mov
add
push
sbb
adc
movs
pop
sub
sub
jle
inc
ret
dec
stc
pop
xchg
(bad)
xor
push
mov
mov
sub
mov
daa
cmp
jbe
ret
and
js
ja
(bad)
push
(bad)
test
aam
or
xor
sub
int
aas
and
add
xor
stos
push
mov
sahf
aad
pop
inc
repz
in
dec
push
into
push
or
cmp
out
xor
jmp
es
daa
hlt
mov
add
adc
xor
int3
mov
test
mul
daa
and
mov
test
jge
push
aas
mov
out
fcmovnbe
xor
lahf
shl
fwait
popf
jne
iret
inc
outs
adc
arpl
ffreep
adc
push
sahf
adc
cmps
int3
mov
lds
xor
lds
call
lds
sbb
jns
xor
xchg
retf
jp
mov
dec
mov
ds
mov
mov
sub
or
shl
sbb
xor
in
in
push
lods
push
pop
cmps
ss
cwde
arpl
movs
daa
mov
sbb
add
(bad)
pop
lods
std
cmps
xor
(bad)
mov
adc
cmp
(bad)
loope
cli
or
icebp
add
arpl
jl
xor
sub
icebp
push
fldpi
mov
das
repnz
popa
xor
ret
and
cwde
push
cmp
jbe
push
pop
in
cmp
mov
inc
sbb
mov
push
xchg
ja
xchg
mov
shr
xchg
repz
jne
xchg
jb
mov
xchg
test
dec
cs
mov
in
ret
cld
clc
xchg
jle
or
lds
or
movs
rcl
arpl
mov
stc
push
sbb
pushf
add
add
push
ror
add
jb
xor
mov
out
mov
pop
in
mov
arpl
jle
or
outs
js
push
loop
daa
mov
dec
fild
jmp
in
jecxz
xor
js
fmul
mov
xor
push
in
out
cmp
pushf
mov
jae
test
jg
std
lods
fstp
xchg
in
cmp
jne
sti
test
adc
xor
mov
lds
sbb
dec
dec
mov
xor
js
adc
jae
jnp
mov
stos
(bad)
imul
ins
mov
sub
jmp
jnp
retf
cmc
dec
pop
adc
add
cmp
jno
bound
pop
and
imul
jp
imul
sbb
inc
outs
jnp
dec
inc
cwde
test
mov
or
xor
lahf
mov
adc
or
std
inc
mov
cmp
loope
in
(bad)
jo
ds
daa
sbb
loopne
push
pop
dec
cmp
addr16
outs
icebp
hlt
cmps
push
scas
out
ins
dec
sub
jecxz
xchg
push
cmps
mov
jnp
xor
dec
imul
mov
pop
sahf
leave
cmp
jmp
mov
out
cmc
int
int3
sub
mov
sbb
cmc
data16
std
shl
jmp
(bad)
jle
call
repnz
aaa
add
test
retf
fst
mov
repz
pop
add
xor
sbb
enter
icebp
adc
mov
adc
cmp
loop
mov
ja
retf
ins
adc
pop
mov
imul
ret
adc
lock
cmp
fucompp
aam
mov
pusha
add
push
cmp
imul
pop
dec
xchg
cdq
sub
push
sub
shl
outs
and
push
pop
push
jbe
ss
mov
icebp
jmp
ins
mov
xchg
jmp
mov
mov
mov
or
cmp
jo
out
xor
xchg
xchg
inc
jb
ss
xor
ja
adc
out
loopne
and
push
cmps
xchg
push
sub
std
dec
sbb
std
mov
cmp
lods
and
and
or
mov
add
iret
adc
add
cwde
push
cs
adc
icebp
scas
es
sti
mov
dec
add
fisttp
xor
retf
mov
lock
inc
mov
push
jb
xchg
xor
jg
pop
push
stos
add
aad
in
aam
xchg
repnz
inc
cmp
std
jae
jle
jge
mov
dec
cmp
mov
shr
and
xor
push
retf
and
(bad)
cmp
sbb
outs
jne
xchg
xchg
adc
mov
mov
sbb
sti
jnp
retf
rcr
mov
mov
shl
daa
(bad)
dec
ss
pop
adc
call
leave
push
cdq
in
lods
popa
fbld
cmp
mov
jne
pop
out
loope
mov
sub
mov
aas
mov
or
jnp
xor
outs
mov
retf
enter
and
enter
and
push
lods
or
cmp
jno
add
add
inc
cld
push
repnz
mov
jmp
xchg
mov
mov
push
xchg
xor
(bad)
mov
out
push
push
outs
jmp
push
(bad)
fistp
jecxz
pop
loope
add
jbe
jno
jo
pop
mov
add
dec
lds
jbe
icebp
add
(bad)
dec
pushf
xchg
pop
fadd
xor
js
stos
push
inc
pop
push
sbb
dec
mov
scas
sbb
fiadd
rcr
jp
daa
jns
mov
inc
jecxz
mov
shl
mov
fbld
xor
lock
sbb
add
add
jnp
jle
into
push
sbb
sbb
mov
push
in
stos
lods
mov
mov
fmulp
push
adc
xchg
or
cmp
add
out
icebp
mov
inc
loop
call
and
mov
mov
xchg
xor
mov
xor
call
dec
mov
dec
sub
fisttp
jne
icebp
pusha
ins
daa
xor
or
inc
cmp
stos
lea
or
cwde
xor
mov
push
loop
daa
dec
push
mov
sub
cmps
es
dec
movs
jne
imul
and
cdq
sub
sbb
add
mov
in
enter
stc
push
and
inc
push
mov
jnp
les
retf
cmp
or
pop
out
dec
mov
repz
add
inc
dec
jmp
mul
dec
jb
jecxz
icebp
pop
mov
mov
lods
test
packuswb
sub
push
mov
leave
bound
cmp
sbb
rcr
addr16
push
nop
ror
loop
xchg
add
in
cmp
addr16
mov
pop
(bad)
aam
ret
lods
(bad)
repz
in
leave
fdiv
retf
pusha
jb
cs
popa
cmp
shl
or
add
outs
lods
cmps
vpsubb
mov
push
adc
(bad)
nop
lock
daa
add
add
cmp
sbb
shl
das
inc
mov
xchg
lahf
jecxz
jne
das
mov
aaa
repz
mov
and
ins
jecxz
ds
(bad)
pop
or
shl
movs
pop
(bad)
aam
sbb
or
sbb
ins
jle
lock
es
sub
mov
mov
pop
xchg
push
scas
xchg
imul
or
mov
jns
(bad)
sbb
fisub
push
push
xchg
and
dec
mov
pushf
and
mov
lea
jbe
push
icebp
es
das
inc
adc
xor
cmps
hlt
lds
leave
jle
in
jo
sbb
sbb
inc
mov
outs
mov
scas
(bad)
ret
outs
cmp
xlat
xor
inc
daa
jecxz
mov
fwait
je
es
mov
xor
mov
int
jns
pop
mov
dec
dec
outs
add
lock
loope
test
or
or
xor
into
leave
mov
cmp
push
pop
stos
popa
pop
mov
adc
dec
adc
sbb
mov
mov
sbb
push
mov
(bad)
xlat
mov
leave
dec
lock
lds
mov
cmp
frstor
daa
es
pop
push
and
xchg
mov
mov
add
ja
push
frstor
stos
(bad)
ror
js
cmc
or
cdq
retf
ret
loopne
push
mov
dec
mov
test
inc
je
enter
jmp
fcmovnu
out
xchg
push
xchg
add
ins
pop
dec
cmp
ja
xor
call
push
add
hlt
out
jp
test
ins
fadd
cs
push
arpl
rcl
mov
push
lahf
pop
fs
nop
pop
inc
xchg
mov
push
stos
repz
sahf
pop
out
ins
ins
push
inc
add
mov
std
fwait
xchg
or
cli
add
ret
mov
mov
fwait
std
fsubr
and
jo
fnstenv
pop
ja
hlt
loopne
and
into
mov
add
pop
jle
xor
(bad)
lods
mov
or
or
sar
mov
and
xchg
retf
adc
cmp
sbb
jl
test
pop
xchg
(bad)
jnp
mov
push
and
and
xor
mov
xor
dec
test
inc
push
jne
test
push
dec
mov
call
mov
inc
push
(bad)
push
fild
pop
stos
ret
xor
cmp
jle
add
div
jnp
fild
pop
cs
pop
push
and
or
pop
add
add
fwait
dec
lock
push
jge
sub
clc
add
or
and
movs
aas
jae
add
cs
rcl
and
int3
pop
mov
(bad)
adc
jnp
and
out
mov
push
adc
notrack
xlat
ficomp
pop
inc
push
mov
call
or
fsub
cli
cmp
xor
(bad)
out
clc
push
jo
cli
cmp
lds
and
jmp
mov
push
js
dec
cmps
push
add
inc
imul
iret
xor
sub
sbb
aaa
sbb
cmp
sbb
stc
adc
test
and
jno
pop
outs
inc
mov
mov
ins
lods
or
sub
shr
adc
push
and
xchg
mov
cld
xchg
xchg
out
fadd
inc
or
pop
pop
cmps
popf
fadd
push
sub
sti
rcr
adc
sub
pusha
outs
xor
mov
out
mov
add
mov
idiv
pop
xchg
repnz
out
jnp
pop
arpl
outs
xchg
ins
das
stos
dec
and
xor
add
xchg
dec
mov
aad
push
(bad)
das
dec
xor
hlt
jo
xor
inc
dec
add
push
out
out
in
fidivr
call
enter
mov
shl
dec
sbb
lods
iret
mov
add
pop
(bad)
mov
test
mov
cmc
push
clc
ins
push
cdq
dec
xor
sub
push
mov
rcr
pop
inc
es
jmp
or
jbe
js
fwait
xchg
cmp
inc
xchg
call
and
sbb
mov
cmp
retf
jge
jne
mov
inc
sub
xchg
xchg
and
ins
pop
loope
dec
jb
loope
ja
mov
pop
mov
cmc
adc
jmp
jmp
adc
xor
dec
xchg
cmps
mov
gs
jmp
mov
sub
call
adc
jo
cld
push
adc
push
mov
sub
or
inc
xchg
or
xor
ret
les
arpl
iret
aaa
xor
jno
sub
cmps
adc
pop
or
push
jge
mov
push
in
loopne
mov
and
ret
sbb
into
add
mov
imul
stc
xor
mov
pop
enter
in
ret
mov
iret
xor
sub
mov
push
mov
jp
(bad)
es
test
aad
aam
mov
push
or
aam
pushf
mov
mov
lahf
mov
jb
movs
lock
jbe
inc
mov
pusha
stc
and
jecxz
and
push
retf
sub
ret
and
jbe
lea
jbe
dec
push
ja
and
push
popf
push
in
adc
dec
xor
sub
lea
ror
mov
jge
ficomp
mov
and
push
andnps
cld
das
cmp
fadd
push
adc
xchg
test
les
jecxz
lds
push
push
jg
ss
sub
cmp
xor
cdq
stos
pop
into
mov
sahf
sti
pop
ret
push
popf
in
data16
push
push
imul
mov
rol
sbb
jo
arpl
adc
jge
mov
pop
jp
cmps
dec
jnp
(bad)
icebp
adc
xchg
and
shl
xor
sar
in
call
pop
adc
sub
lods
cdq
xchg
dec
mov
fisubr
ror
daa
imul
push
sbb
ss
ffreep
cmps
xor
shl
adc
sbb
mov
outs
cmp
or
popa
jb
cmp
mov
sbb
fcmovu
jge
jmp
push
sbb
sub
jae
inc
dec
cmp
or
idiv
jecxz
cli
cdq
bound
add
xor
add
fsubr
loop
out
pop
jb
cs
cwde
fidiv
push
pop
test
adc
mov
popf
or
in
jno
or
push
fwait
cmp
mov
xchg
push
jmp
mov
sbb
mov
fldenv
fldcw
pop
test
mov
mov
shl
jp
jb
test
xor
pop
xchg
inc
mov
hlt
pop
adc
add
mov
mov
stos
aas
sub
xor
fwait
cmp
pushf
jns
sub
or
and
mov
and
push
push
push
frstor
sub
or
mov
or
mov
mov
inc
rcl
adc
jae
icebp
sbb
stos
push
sub
sar
xlat
sub
cwde
sub
jg
(bad)
(bad)
fwait
idiv
shl
icebp
mov
leave
not
dec
jbe
or
push
pushf
ret
enter
fadd
out
bound
lods
push
add
push
adc
push
push
mov
adc
rcl
addr16
dec
and
mov
scas
jne
js
scas
push
sahf
xchg
rcr
mov
bound
not
outs
jbe
jne
fsubr
clc
inc
icebp
loope
pop
iret
sub
pop
ja
cmp
rol
dec
fwait
outs
xor
inc
mov
ins
mov
or
sub
sbb
js
jmp
mov
scas
cmps
std
cmp
std
fs
pop
add
mov
xchg
cmp
fild
(bad)
clc
mov
std
cmps
rep
mov
or
call
clc
cmp
push
dec
movs
rcr
inc
add
mov
gs
add
jecxz
inc
mov
int
pop
sub
in
jnp
in
cmp
push
sbb
pop
jne
adc
repnz
dec
int3
xchg
out
call
(bad)
movs
cmc
cmps
adc
div
jno
mov
and
in
shr
add
pusha
(bad)
mov
fwait
ret
push
mov
pop
adc
xchg
cmp
cmp
dec
mov
outs
div
and
call
or
mov
in
push
xchg
cmp
rol
cmps
lds
cmp
sbb
mov
mov
push
add
adc
sysenter
or
adc
or
jmp
pop
add
adc
gs
jb
aaa
arpl
in
movs
jmp
push
push
jge
mov
push
mov
stos
rep
outs
xchg
mov
dec
mov
jmp
in
mov
cmp
stc
shl
pop
jmp
fsub
sbb
pop
loope
mov
lea
retf
jb
xchg
cmp
or
adc
test
xor
cmp
adc
or
sti
cdq
inc
or
cmp
mov
jb
(bad)
out
popa
xor
shl
sub
or
bound
mov
nop
cmps
mov
les
mov
(bad)
mov
(bad)
daa
mov
xor
pop
sub
movs
pop
add
push
test
(bad)
in
lods
bswap
icebp
loope
lods
jnp
xchg
daa
jns
cmp
pushf
cli
mov
jge
cmp
imul
cli
adc
xchg
or
fstp
and
nop
lock
sbb
mov
fdivr
pop
test
add
or
nop
fcmovbe
pop
lds
sbb
lds
xor
pushf
cmc
push
or
xchg
mov
sbb
outs
xor
sub
pop
xor
sub
jge
mov
sub
lock
add
push
adc
int
mov
jbe
or
cmp
mov
aam
inc
repz
sahf
add
fimul
loop
(bad)
adc
push
mov
outs
shl
xchg
clc
aaa
mov
cwde
lahf
lds
mov
out
cmp
mov
xor
or
xor
imul
add
sub
add
cmp
retf
sbb
out
dec
rol
call
adc
xor
jle
xor
inc
mov
pusha
and
mov
dec
rol
sahf
ret
std
das
ret
mov
xchg
out
rcr
mov
and
lods
sub
leave
movs
loopne
rol
mov
or
mov
push
jb
imul
pop
jl
jecxz
sbb
rcr
push
rol
dec
aaa
add
pop
xlat
adc
aam
cmps
loop
mov
(bad)
fisttp
dec
jmp
cmp
dec
pop
and
cmps
and
ss
mov
in
aaa
pop
in
mov
daa
cmp
mov
add
mov
mov
inc
and
retf
sahf
push
adc
loope
aad
mov
push
dec
xchg
out
mov
adc
jnp
addr16
mov
push
shl
stos
add
movs
mov
mov
lock
push
loopne
add
push
loopne
cmc
xor
lods
mov
push
cmps
cwde
les
mov
mov
sbb
inc
dec
popf
outs
ret
adc
ret
cmp
push
pop
or
push
ret
sbb
cs
shr
in
or
or
aad
push
mov
cmp
or
mov
gs
(bad)
(bad)
neg
iret
mov
loope
inc
sbb
out
push
jno
or
inc
or
loope
movs
mov
rcr
pop
sbb
and
add
mov
test
inc
pushf
rcl
pushf
pusha
mov
retf
pusha
push
mov
ss
cmp
adc
cmp
mov
adc
push
in
retf
inc
cmps
lods
xchg
iret
mov
or
(bad)
dec
in
sub
mov
pop
xchg
push
fisub
out
movs
clc
dec
call
outs
fiadd
fsub
adc
iret
(bad)
jb
cmps
neg
jbe
enter
pop
(bad)
ror
push
jno
aam
and
push
cmp
in
aam
add
mov
ror
shl
rcr
xor
inc
dec
(bad)
into
mov
call
sahf
and
push
and
jmp
mov
sti
inc
mov
mov
inc
(bad)
loopne
pushf
pop
mov
adc
inc
fist
in
mov
push
mov
xchg
pop
xchg
mov
test
adc
ins
rcl
cmps
xor
jno
jl
bound
pop
fadd
mov
bound
or
dec
pop
or
mov
js
fs
sub
fldenv
mov
xor
lods
outs
cmp
dec
pop
test
cmp
sub
push
scas
mov
mov
add
jnp
out
jmp
call
mov
push
mov
dec
sbb
movs
(bad)
fwait
mov
inc
or
leave
or
(bad)
sbb
xchg
cmp
stos
or
and
jecxz
out
mov
xchg
cld
mov
pushf
jp
push
sar
int3
and
icebp
inc
cmp
jmp
xchg
sub
into
mov
mov
std
lock
outs
xchg
cmp
out
popa
sbb
(bad)
adc
jne
leave
ficom
scas
add
jge
mov
addr16
add
sbb
sub
mov
push
jg
(bad)
std
cmp
call
fcomp
push
enter
mov
add
or
mov
out
mov
loope
ud2
jnp
mov
xchg
rcr
popa
adc
sub
jnp
pop
add
or
adc
xchg
dec
cld
cmp
mov
jns
sub
or
pop
jl
shr
std
sbb
(bad)
add
or
movs
in
jmp
(bad)
sahf
inc
retf
sti
add
xor
in
xchg
test
mov
xchg
jg
lds
cmp
out
shr
adc
pushf
(bad)
or
div
jnp
cmp
imul
add
fstp
xor
push
mov
fisub
cmps
in
(bad)
pop
cmp
xor
stc
addr16
call
cld
sub
fst
aaa
(bad)
jno
adc
inc
push
jno
pop
mov
test
dec
mov
mov
in
mov
pushf
loope
lods
jo
inc
mov
mov
fisttp
inc
pop
mov
sub
inc
shl
outs
pop
or
out
mov
pushf
xchg
add
inc
dec
jmp
adc
cmp
jb
scas
rcr
cmp
mov
hlt
jl
sub
int
jb
jae
inc
lahf
(bad)
cld
outs
push
inc
test
and
push
jo
scas
mov
in
sbb
adc
scas
sub
mov
xor
jb
mov
pushf
out
fwait
lahf
in
jmp
sub
lock
hlt
push
and
lahf
xchg
mov
lds
or
inc
daa
aam
fisub
sbb
hlt
xchg
jmp
jb
pop
adc
xor
xor
inc
pop
aaa
jo
in
add
jecxz
push
xlat
push
fcom
cwde
fwait
leave
push
and
or
shl
je
adc
xchg
mov
out
ins
es
pusha
push
adc
push
xlat
mov
gs
lahf
mov
or
loopne
jo
xchg
jl
aam
ss
sub
ror
xchg
mov
jbe
or
mov
outs
xchg
fcom
cs
(bad)
ds
in
aam
ins
rcr
xor
and
mov
jmp
addr16
sbb
xlat
sbb
cs
add
pop
mov
dec
push
inc
sbb
cli
adc
cdq
jmp
adc
pusha
adc
dec
add
in
sub
das
sti
inc
jae
outs
push
mov
imul
stc
jg
pop
xchg
ds
fistp
(bad)
cmp
lods
cli
inc
mov
mov
or
aas
adc
mov
imul
push
rol
out
add
push
xchg
fs
push
outs
jmp
loope
inc
pop
xor
ins
push
test
mov
sub
cli
cs
mov
adc
mov
test
and
es
pop
lock
add
mov
pop
movs
repnz
call
cmp
das
mov
dec
adc
inc
stos
sbb
or
ror
dec
cmps
xchg
mov
fidiv
mov
fcom
inc
in
or
jnp
fs
out
sub
mov
or
lahf
cwde
jg
cld
aas
sub
jae
bound
in
jbe
add
not
sbb
shr
xor
mov
mov
sbb
pop
movs
mov
sbb
adc
movs
hlt
mov
jg
repz
cmp
pop
xchg
or
ffreep
fsub
cwde
test
in
fcomp
iret
and
dec
es
jl
or
mov
int3
movs
sbb
les
inc
push
jbe
in
xor
movs
sub
jne
les
jae
pop
and
and
push
and
sbb
and
xchg
pop
sar
mov
dec
pop
hlt
clc
mov
fmul
cli
sbb
sahf
push
xchg
iret
dec
in
push
mov
push
mov
dec
pushf
and
adc
mov
sahf
movs
loopne
int
push
mov
mov
ins
inc
cld
add
dec
xchg
mov
jg
clc
pop
cmp
imul
push
cwde
mov
add
movs
xor
adc
popf
(bad)
mov
add
mov
das
sbb
mov
mov
call
mov
sub
sub
loope
or
sub
mov
cmp
aaa
jmp
mov
cdq
cmp
mov
mov
mov
frstor
pop
adc
daa
push
cdq
out
mov
pushf
call
cmc
add
mov
sub
je
rcr
mov
outs
bnd
ins
pop
cmc
xchg
sbb
and
mov
adc
xchg
ss
arpl
fld
or
test
cmp
push
sti
mov
mul
push
movs
js
sub
adc
xor
mov
sar
fmul
mov
lods
lods
shl
outs
pop
push
mov
inc
pop
ja
push
mov
lock
mov
stc
add
mov
or
test
dec
adc
out
jnp
jne
not
aas
jae
(bad)
cli
jbe
iret
js
xchg
imul
fcom
sar
movs
out
clc
bound
sbb
pop
fdivr
aad
arpl
xor
scas
dec
add
xor
scas
in
mov
je
aas
or
(bad)
jle
xchg
sbb
xor
mov
push
sbb
pop
inc
or
inc
icebp
jge
pop
shl
mov
test
adc
xchg
test
jno
cmp
call
sub
push
lahf
xchg
push
mov
repnz
mov
lds
(bad)
push
xor
pop
sbb
(bad)
mov
movs
push
mov
dec
pop
hlt
clc
mov
add
dec
addr16
xchg
mov
sub
cdq
gs
mov
(bad)
sbb
push
jno
loope
push
xchg
sub
or
inc
mov
hlt
(bad)
xor
loopne
pop
and
pop
das
movs
pop
cmps
js
xchg
adc
sbb
xchg
loope
inc
(bad)
sub
push
push
jb
inc
jle
call
and
push
ficomp
sti
fs
adc
mov
scas
ins
xchg
cmp
idiv
lahf
inc
jle
xchg
and
push
mov
outs
mov
fwait
mov
xchg
mov
push
adc
add
xchg
ficomp
lock
daa
sub
int3
ins
bound
adc
inc
pop
jecxz
shl
xor
mov
pop
bound
shr
iret
push
leave
dec
outs
mov
les
or
jne
iret
xor
std
push
lods
adc
dec
ins
fmul
outs
xor
sbb
test
adc
mov
data16
sbb
sti
ret
add
enter
pop
ret
mov
lock
mov
test
in
daa
cdq
mov
pop
mov
xchg
imul
jge
jmp
test
jb
cmp
test
dec
outs
pop
dec
mul
in
dec
icebp
jb
sub
mov
mov
in
push
popw
xchg
ror
cwde
pop
retf
bound
sub
mov
push
pop
sbb
das
push
xchg
lds
pushf
test
and
sar
js
inc
jge
mov
cld
movs
out
jp
cdq
push
xchg
cmp
inc
inc
inc
std
push
imul
cmps
jl
and
cli
push
sub
addr16
fdivr
inc
daa
push
movs
out
or
cld
xor
lea
lods
sbb
mov
inc
jae
popa
sahf
ss
cmp
jecxz
out
dec
jne
dec
in
daa
mov
mov
lock
stc
pop
fld
sahf
mov
push
pop
lock
mov
inc
push
jo
sub
enter
es
pop
push
out
jecxz
jecxz
popf
outs
mov
sub
gs
ds
push
aas
into
push
aam
mov
inc
mov
pushf
cmp
lock
dec
test
fidivr
clc
push
jl
inc
add
out
ins
in
stos
data16
xor
rol
push
sbb
sbb
(bad)
xchg
pop
cs
pop
int3
push
aas
imul
fistp
push
aaa
xor
xor
and
cmp
jp
repnz
sahf
sbb
aaa
lods
popf
xchg
div
fcmovnu
cmp
add
fisubr
iret
lea
xlat
repz
jmp
adc
daa
icebp
out
cmc
aaa
mov
add
sbb
ja
jnp
sti
cmps
push
cmp
sbb
push
jae
aad
in
addr16
shl
cmc
(bad)
int3
fild
out
lock
xor
jno
test
cmc
std
cwde
inc
(bad)
popw
loopne
pushf
xchg
sti
or
lahf
aad
jno
inc
ficomp
xchg
pushf
aas
cli
push
aam
lods
push
pusha
dec
sub
mov
fld
add
lods
adc
or
movs
dec
(bad)
call
out
(bad)
rcl
fcomp
dec
jbe
mov
cld
inc
int
(bad)
test
lock
(bad)
cld
(bad)
loop
mov
adc
xchg
jecxz
xchg
sbb
ins
inc
js
dec
lea
(bad)
dec
pop
mov
cmc
sbb
adc
sub
ret
lock
bound
dec
in
and
shr
shl
xchg
pop
in
mov
out
jp
stc
scas
or
xor
lea
shl
mov
xor
inc
sbb
pusha
int
xlat
pop
lods
dec
in
dec
out
addr16
cld
ja
push
(bad)
aad
or
jae
pop
cmp
hlt
dec
sysexit
xor
cld
inc
outs
out
jno
into
in
mov
sti
mov
xcrypt-ctr
cmps
pop
lock
xchg
cli
ficom
adc
ja
cmp
mov
mov
(bad)
(bad)
dec
or
adc
sub
or
dec
iret
ret
int
push
stos
inc
ja
mov
mov
cmp
sbb
cmp
retf
inc
mov
data16
mov
or
add
or
cmp
mov
arpl
stos
aam
movs
sbb
retf
mov
push
xchg
pushf
add
mov
and
in
cwde
fcmovnb
xor
pop
loopne
fimul
xchg
jge
cld
push
push
jg
jmp
and
js
add
mov
stos
and
add
(bad)
sbb
inc
sahf
(bad)
ss
call
mov
outs
sub
mov
pop
inc
stc
fdiv
sbb
dec
dec
call
in
push
cs
inc
jae
stos
cmp
mov
sbb
xlat
sub
data16
repz
add
in
sti
push
cmc
ins
test
aam
jmp
mov
inc
and
adc
cli
pop
fstp
sbb
pop
cmp
mov
into
add
mov
add
mov
push
cmp
lock
cmp
xor
cmp
xor
and
and
push
in
adc
retf
sbb
or
rcr
mov
test
jnp
fnstcw
jge
pop
shl
inc
out
sub
pop
or
mov
aam
clc
add
adc
clc
pop
int
pop
pop
sbb
and
mov
and
adc
or
std
mov
cmp
das
jp
ins
push
int3
xor
dec
int
scas
xchg
dec
int3
xchg
addr16
mov
cmp
dec
mov
jae
iret
in
int
pusha
sti
or
add
inc
jns
mov
pushf
loope
or
xchg
cs
xor
inc
dec
mov
cmp
les
and
jno
pop
add
rcr
xchg
mov
mov
mov
jp
sub
loopne
sahf
dec
shl
push
and
pushf
jnp
push
(bad)
loopne
adc
pop
ret
mov
xchg
push
sbb
sub
scas
int3
sub
rcl
pop
lahf
add
mov
cmp
cmc
mov
repnz
call
mov
xchg
dec
in
push
in
cmps
and
or
lods
loop
sub
repnz
(bad)
fs
dec
jbe
adc
cmps
mov
outs
push
fadd
fcom
xchg
(bad)
ja
push
sbb
sub
into
ds
faddp
pop
cmp
jl
fadd
sub
cmp
adc
mov
add
xchg
or
aad
and
add
push
mov
mov
jmp
cld
call
in
xor
pop
loopne
or
cmp
(bad)
jecxz
sahf
data16
mov
fnstcw
dec
clc
retf
cmps
push
sbb
sbb
jg
inc
jecxz
sbb
test
fsub
jno
aas
fs
out
cmp
call
pusha
jno
sar
jecxz
ins
or
jmp
int
hlt
mov
push
dec
push
sub
iret
add
push
es
sbb
test
mov
(bad)
jae
jmp
imul
fs
leave
not
xchg
(bad)
in
or
imul
into
sub
mov
imul
aas
mov
cli
push
dec
shl
push
sbb
ds
sub
push
push
ins
push
cli
mov
shr
add
cmp
fld
pop
jmp
stos
jns
data16
inc
or
out
push
mov
jbe
pop
test
or
ret
push
icebp
fld
out
movs
push
inc
cmp
inc
or
fmul
shl
adc
mov
cdq
sbb
out
std
mov
pop
mov
test
push
ucomiss
adc
cwde
in
mov
inc
cs
scas
jmp
and
add
push
xor
sar
jg
or
or
sar
in
inc
pop
fs
mov
es
sbb
inc
jno
and
add
(bad)
aaa
loop
inc
rcl
mov
neg
jge
call
mov
popf
inc
test
push
dec
sbb
(bad)
pop
jp
xlat
fwait
xor
(bad)
xchg
fnsave
push
imul
test
jecxz
push
test
inc
jne
dec
stc
and
fwait
xchg
pop
out
and
ins
xor
dec
bound
adc
jo
out
cmc
call
inc
stos
pop
fucomip
xchg
std
call
iret
movs
loope
xor
ficomp
push
hlt
sbb
xor
and
mov
cmp
push
pop
dec
xchg
inc
push
push
cmp
or
jns
and
jp
jl
ss
popf
push
mov
popf
test
mov
mov
cmps
xchg
mov
std
or
adc
xor
push
and
(bad)
xchg
fdivr
(bad)
std
xchg
out
out
or
fcomp
out
jo
cld
call
xor
jmp
es
jge
fsubr
leave
xchg
mov
jmp
jo
cmp
inc
lea
cs
(bad)
scas
cmp
in
jmp
stos
test
nop
sbb
sbb
adc
xchg
mov
or
fiadd
ret
in
cmps
data16
jmp
data16
int
in
in
daa
lea
cmps
sub
leave
test
test
call
mov
push
xchg
xor
or
ret
sbb
push
mov
movs
(bad)
xchg
mov
ret
jl
mov
leave
(bad)
lea
out
jle
sbb
sbb
cmp
pop
aad
cmp
rcl
bound
sar
fsub
mul
in
jae
lds
pushf
stc
in
push
cmp
mov
mov
test
ins
lds
mov
xchg
mov
leave
icebp
rcl
div
or
jg
jmp
inc
into
jg
jle
fldcw
mov
outs
dec
call
adc
mov
push
adc
fs
or
pop
xchg
(bad)
add
mov
mov
jo
mov
dec
xor
stos
lock
add
or
add
jl
scas
aas
adc
cmp
call
jecxz
cdq
xchg
jns
outs
daa
jl
leave
inc
sub
lds
mov
ret
fild
loope
std
xor
mov
mov
add
sub
jecxz
pop
jl
ror
mov
fisttp
xor
dec
mov
inc
scas
add
inc
mov
xchg
add
mov
ret
mov
ret
aad
fs
and
xchg
jle
mov
mov
mov
js
int3
and
cmps
sbb
addr16
sbb
sub
fst
xor
out
xchg
mov
mov
shr
cmps
rdpmc
in
enter
mov
cmp
imul
cmp
jecxz
push
(bad)
jb
loopne
lea
repnz
push
std
dec
stos
pop
add
cmp
inc
push
cmp
cs
sub
push
jno
xchg
xor
pop
xchg
and
adc
xor
or
jmp
inc
test
xchg
fwait
test
loope
cmc
retf
xor
retf
jne
mov
std
aas
jmp
pop
loope
mov
mov
in
or
js
cmp
sbb
xchg
xchg
sbb
cmp
sub
adc
sub
mov
push
push
mov
cmp
ja
je
mov
in
lea
jbe
xor
push
jno
adc
sub
push
jmp
pop
(bad)
mov
outs
das
xor
sahf
stc
cmp
nop
rcl
dec
cmp
fsub
mov
or
sub
mov
aaa
data16
imul
mov
fistp
mov
cdq
mov
dec
mov
test
jg
ds
(bad)
jle
mov
jns
jne
mov
loope
(bad)
xor
enter
outs
fs
jmp
jb
add
inc
pop
inc
adc
sbb
inc
or
and
xor
xchg
mov
push
or
shl
adc
cwde
bound
hlt
test
push
add
(bad)
sbb
pop
adc
or
or
std
inc
sar
mov
sbb
lods
cwde
dec
adc
sub
sbb
pop
mov
loope
push
jge
fiadd
lea
retf
jmp
jl
cmp
out
cmps
dec
or
adc
jl
je
push
dec
pop
addr16
add
jnp
cmp
retf
jle
add
adc
and
adc
add
push
push
adc
(bad)
loop
inc
dec
inc
sbb
data16
mov
ss
and
daa
aaa
das
imul
out
cwde
rcl
pusha
dec
pop
pop
faddp
repnz
cmp
mov
mov
jno
jecxz
je
pop
adc
loopne
mov
cli
rcr
add
(bad)
in
pop
mov
jno
sbb
les
pop
daa
and
dec
push
push
or
jmp
dec
dec
pop
(bad)
xor
and
cld
loop
jge
or
lahf
adc
xor
push
jo
in
mov
push
adc
dec
ret
pop
jne
scas
sbb
cmp
xor
movs
lds
jns
aad
or
adc
mov
cmps
pop
sti
push
pop
cmp
jne
dec
in
outs
repnz
pop
add
cmps
mov
mov
js
ins
mov
xlat
push
jns
jae
push
cwde
dec
dec
call
ror
mov
or
popa
xor
stos
inc
mov
hlt
test
fnsave
jl
call
sub
unpckhps
xor
add
adc
je
dec
div
push
dec
xor
mov
in
daa
mov
lahf
loop
js
(bad)
mov
jg
mov
ror
xchg
xlat
test
push
cmovo
jno
ss
and
push
sbb
inc
scas
add
aas
int
push
xchg
imul
jb
mov
xor
jl
loope
push
push
xor
or
test
sub
loop
(bad)
ret
repnz
fiadd
or
lahf
jb
mov
jb
sub
pop
xchg
inc
add
push
push
jbe
inc
mov
addr16
adc
fisubr
cmp
sbb
gs
ins
mov
into
int
sar
test
retf
pop
loop
stc
or
ret
fwait
cs
shl
cmp
add
adc
pop
or
and
cdq
adc
mov
dec
mov
not
aaa
mov
shr
jle
icebp
jne
jmp
out
pop
das
iret
cmc
repnz
mov
push
call
add
stos
pop
push
xchg
xchg
xor
retf
cwde
push
mov
popf
push
sbb
movs
bnd
ins
mov
push
rcr
mov
sbb
dec
not
xor
nop
enter
adc
int3
inc
movs
mov
ds
xor
dec
pop
test
test
movs
sub
scas
sbb
rcl
fnsave
cli
and
sub
test
outs
cmp
out
xchg
xchg
add
outs
xchg
xor
xor
pop
inc
jns
lods
xor
fld
pushf
xchg
cwde
out
add
sub
add
int
out
lock
xlat
add
hlt
xor
sub
fistp
out
sub
xchg
(bad)
cmc
and
jmp
xchg
sti
jns
retf
inc
jns
cmps
cmp
mov
sbb
mov
lea
cmp
nop
jecxz
cmp
gs
mov
mov
inc
cmp
test
and
or
je
inc
fwait
adc
adc
pop
add
loopne
or
comisd
int3
repz
xor
retf
pop
retf
mov
push
xor
dec
das
aaa
mov
sbb
outs
imul
xchg
sbb
pushf
es
add
cld
adc
push
aaa
mov
xchg
push
repnz
aam
loopne
xor
pop
pop
and
mov
loopne
stc
pop
mov
pop
enter
hlt
mov
dec
aas
lods
mov
inc
jb
clc
ins
and
sub
dec
jnp
loopne
mov
out
mov
rcr
shl
push
xor
xchg
inc
cmc
idiv
push
cmp
dec
fdivr
imul
push
mov
adc
pop
add
mov
ror
hlt
jbe
cmp
sbb
rol
pusha
ror
pushw
jmp
or
cs
out
or
cmc
xor
xchg
sbb
lock
movs
sbb
mov
mov
sub
xchg
retf
mov
neg
jmp
cld
sub
ins
les
and
in
stc
imul
shr
adc
add
lds
add
ret
dec
mov
cli
scas
xor
sbb
jne
call
sub
sbb
inc
sbb
mov
lds
jmp
sbb
popa
mov
(bad)
aaa
les
popf
or
lods
mov
push
mov
or
es
(bad)
retf
cmp
cli
lock
ss
or
fadd
mov
sub
xchg
or
rcr
imul
xchg
cmps
push
dec
pop
add
jecxz
jle
push
inc
stc
xchg
adc
loopne
cmp
mov
in
mov
jbe
sub
jmp
and
push
or
push
loope
or
hlt
adc
xchg
pop
lds
aad
leave
mov
or
mov
fwait
cmp
pusha
addr16
cmp
(bad)
les
jo
cmp
movs
lods
mov
repz
cmp
or
adc
xor
sbb
pop
sbb
jo
sub
mov
ror
ret
(bad)
pop
loopne
sub
pop
xor
dec
xor
mov
xor
shr
cmps
ret
shr
mov
iret
dec
sub
pop
and
loope
cs
sbb
mov
outs
inc
adc
push
lahf
jmp
(bad)
push
ret
sbb
mov
cmp
dec
adc
mov
xchg
xor
out
shr
loope
shl
or
mov
sbb
add
pop
ror
int3
mov
sub
repz
bound
inc
pop
or
scas
lods
jmp
xlat
mov
mov
pusha
mov
pop
pop
fild
mov
into
xor
loopne
shl
jno
retf
into
dec
pop
enter
jno
pop
or
into
les
repnz
xor
imul
frstor
mov
icebp
loope
lods
sti
imul
pop
inc
cmp
int
adc
and
mov
xor
gs
call
enter
movs
cmp
add
lods
cmc
out
(bad)
in
(bad)
mov
fsubrp
cmp
adc
(bad)
lock
(bad)
in
popf
movs
fimul
call
mov
sti
mov
call
add
rcl
jo
ficom
mov
ret
xchg
out
cdq
lock
cmp
pop
ffreep
mov
mov
ret
dec
sbb
push
loope
mov
xchg
push
mov
xchg
mul
xor
loopne
out
enter
je
hlt
cmp
sbb
adc
lock
add
sub
movs
push
push
scas
mov
lods
cmp
pop
aad
cmps
test
aam
pop
in
cmps
pop
call
adc
or
shl
mov
cmps
xchg
push
dec
push
jne
icebp
jno
inc
in
int
inc
leave
fsub
inc
mov
push
jg
lds
test
xchg
inc
mov
xchg
scas
(bad)
jae
rol
outs
shl
dec
retf
sub
test
aas
daa
cld
jmp
scas
aaa
jg
stc
(bad)
fst
xor
add
in
xor
in
dec
lds
xchg
xchg
popa
lahf
add
xlat
dec
je
gs
mov
sbb
sbb
push
sub
adc
jecxz
aas
js
mov
mov
stos
pop
pop
pop
pop
test
xchg
iret
clc
adc
inc
lods
retf
push
data16
jae
int
or
push
jb
shl
mov
ret
pop
cmps
(bad)
and
jb
mov
mov
jecxz
shl
data16
cmp
mov
dec
and
adc
data16
push
outs
cwde
rcr
outs
out
mov
xchg
pop
out
nop
rcl
mov
(bad)
mov
push
(bad)
pop
sbb
fcom
pop
ss
pop
wrmsr
dec
sbb
push
mov
jbe
call
or
ins
push
or
lea
jnp
pop
movs
repnz
out
sbb
push
xor
add
xor
mov
imul
jne
or
cwde
mov
mov
pop
mov
and
and
addr16
or
jecxz
shl
mov
mov
mov
cmp
push
out
cmp
scas
arpl
cwde
ret
mov
push
mov
daa
(bad)
popa
cwde
jmp
daa
inc
pushf
mov
imul
dec
jg
sahf
cmp
mov
xchg
into
shr
popf
repnz
pop
ret
push
and
push
adc
(bad)
pop
sub
gs
and
mov
js
in
out
mov
jne
mov
in
mov
sar
ins
add
mov
sbb
mov
je
push
dec
push
pop
sar
inc
jae
pop
push
xor
mov
mov
jae
xchg
mov
scas
lods
ud0
sti
cmp
push
jae
outs
or
add
adc
aaa
xor
push
cmps
ja
sti
sahf
shl
xor
enter
imul
pop
mov
imul
xchg
aad
call
popa
pop
gs
sub
ret
inc
loop
outs
mov
call
push
in
mov
mov
cld
pop
int
add
inc
pop
inc
jno
pop
inc
mov
mov
inc
cmp
mov
and
mov
sub
and
add
push
inc
mov
push
out
and
adc
dec
adc
test
repnz
out
add
ja
inc
inc
mov
lock
xchg
xor
into
lea
add
shl
iret
push
sbb
popf
add
adc
shl
dec
cmp
jns
fisttp
jbe
bound
test
jmp
ja
pop
jne
xchg
aad
xor
adc
leave
jbe
mov
add
repz
fidiv
push
jo
mov
ja
pusha
add
test
add
gs
test
push
inc
sbb
push
into
add
sbb
iret
in
inc
cli
cmp
jmp
hlt
sbb
add
adc
and
loopne
or
sub
pop
mov
push
dec
sub
sahf
(bad)
cmp
xlat
scas
add
hlt
(bad)
push
cld
daa
lods
repz
imul
pop
jl
jns
not
mov
cdq
in
fcom
je
mov
ret
lea
mov
xlat
mov
icebp
pop
sbb
adc
add
push
pop
lods
jg
cmp
inc
pop
cmp
lock
push
jnp
jle
and
xchg
mov
retf
stos
cmp
shl
add
lods
fnclex
mov
idiv
jcxz
int
inc
dec
(bad)
jnp
int3
mov
inc
cli
imul
retf
inc
test
into
in
sbb
add
loopne
add
add
data16
and
cli
test
pop
popa
jno
retf
mov
stc
or
cmp
inc
fistp
and
lahf
jns
adc
sbb
cs
sbb
push
xlat
adc
test
test
cmp
mov
xor
pop
in
ficomp
scas
dec
loopne
je
push
mov
das
mov
call
imul
push
dec
cmp
enter
push
test
pop
mov
jecxz
add
push
fcom
les
and
cmp
sysexit
cmp
sub
jmp
sbb
mov
add
mov
mov
adc
adc
add
and
mov
lods
jb
cmp
outs
icebp
xor
ins
push
jg
out
sub
in
(bad)
sbb
pop
cmp
adc
mov
jg
int
test
xor
or
mov
mov
cmp
mov
sbb
imul
lds
push
push
pusha
retf
ficom
or
popa
mov
sub
pop
mov
cmp
cmp
adc
and
in
loopne
mov
add
mov
cmp
xor
aas
test
repnz
ret
out
jecxz
sub
out
jb
pop
dec
pusha
(bad)
cmc
pop
cmp
sbb
(bad)
mov
add
pop
adc
rol
lock
xchg
out
js
mov
cmps
out
jp
movs
aas
dec
jmp
add
scas
scas
shl
aam
daa
push
mov
mov
scas
test
cmp
sbb
mov
mov
mov
cdq
rol
xor
and
mov
fisub
cli
adc
mov
aas
mov
and
aas
and
sbb
push
xor
ret
jne
cli
xchg
cmp
jl
mov
dec
stos
into
scas
add
pop
sbb
cmp
data16
lds
dec
movs
xor
fisttp
std
adc
inc
jns
fsubr
imul
pop
loop
pop
pop
dec
push
lods
dec
enter
cmp
or
push
cmp
xchg
or
imul
mov
mov
push
outs
cmps
dec
dec
icebp
scas
xor
psrad
pop
sbb
push
inc
jecxz
add
sbb
scas
movs
lahf
imul
enter
ss
mov
or
nop
and
cmc
aaa
cli
sbb
sub
sbb
mov
sbb
test
inc
dec
loope
jns
fimul
neg
xchg
sahf
pop
fild
sbb
xchg
or
iret
cdq
mov
mov
or
mov
pushf
int
jne
cmp
mov
inc
rcl
sub
xor
mov
adc
xchg
mov
mov
mov
out
pop
mov
mov
mov
addr16
mov
fistp
and
in
inc
daa
lock
dec
in
jo
clc
call
sbb
in
push
pop
mov
loop
adc
call
cli
ja
aas
mov
out
cld
lods
mov
mov
or
dec
lock
mov
std
(bad)
outs
js
aam
push
push
jo
fs
cs
fisttp
sti
inc
fdiv
out
jmp
push
push
mov
jl
xlat
sub
ds
jp
xchg
lock
xchg
cmp
ss
loop
mov
mov
in
mov
inc
push
and
xchg
lahf
movs
sbb
cmp
dec
jo
cmp
sub
(bad)
js
retf
lds
lds
fimul
pop
mov
inc
addr16
mov
cmp
stos
rol
das
xor
cmp
jnp
jp
stos
fs
test
popf
dec
mov
cmp
arpl
sbb
(bad)
aam
xchg
jns
ja
cs
push
(bad)
add
dec
mov
push
(bad)
cmps
add
or
xchg
cli
loopne
inc
adc
addr16
jo
add
and
arpl
repz
mov
out
and
neg
test
push
out
psadbw
xchg
xor
mov
enter
js
ret
les
xor
jo
or
add
jg
inc
adc
adc
stos
mov
push
xchg
cmp
adc
jmp
sub
adc
push
push
ror
xchg
fsubr
test
aaa
fxch
ins
lods
push
(bad)
cmps
addr16
fisubr
pop
or
mov
aaa
mov
test
xchg
ja
mov
into
and
retf
cmp
ror
out
ja
lea
xchg
sub
aad
call
int
inc
ret
pushf
leave
mov
jns
arpl
cli
mov
cmp
and
jbe
loop
repnz
fstp
adc
mov
ror
ins
data16
inc
cmp
push
jno
hlt
imul
repnz
sub
fcmovne
cmps
lods
cld
repnz
rcr
lods
leave
lds
fmul
pushf
pop
adc
les
(bad)
arpl
(bad)
pop
cdq
popf
adc
ins
lahf
int
cmp
loope
idiv
sbb
cmc
je
dec
xlat
mov
cmp
push
jmp
sub
cmpps
div
xchg
movs
arpl
and
fld
mov
jmp
push
out
xor
sbb
jae
push
dec
add
cli
arpl
aas
jmp
cwde
inc
movs
lods
xchg
sbb
(bad)
push
sar
inc
popf
push
jg
jo
dec
or
pop
xchg
outs
call
mov
dec
adc
test
xchg
aam
es
adc
or
fwait
or
not
and
pop
sub
lods
mov
mov
pop
mov
push
xchg
fcomi
aad
cmp
xchg
xor
imul
in
xchg
fs
cmp
or
inc
cmps
xor
in
xor
cmp
push
inc
adc
jl
mov
(bad)
cmp
retf
aas
cld
scas
dec
and
jle
shl
(bad)
hlt
int3
loop
out
jg
jecxz
adc
pushf
add
or
xor
xchg
or
lock
out
xor
fld
add
imul
push
push
cmp
add
pmulhuw
out
out
jbe
jno
push
adc
mov
clc
mov
pop
scas
cmp
in
cmps
mov
outs
jno
inc
pop
mov
sub
fst
cld
stos
xor
cmp
out
jp
lods
shl
stos
xchg
sbb
add
shr
ror
mov
loop
in
xor
and
cmp
(bad)
stc
jo
jg
(bad)
push
repz
pop
cmp
jb
es
adc
adc
lea
sbb
add
hlt
dec
inc
inc
push
sbb
lock
int3
aaa
or
loop
fistp
ret
in
pusha
xor
adc
retf
adc
out
push
jo
test
sbb
xor
retf
imul
mov
mov
inc
(bad)
lods
out
jnp
mov
rcl
mov
stos
dec
cmps
mul
repz
into
ret
jbe
jo
out
xchg
mov
mov
dec
push
in
push
sahf
(bad)
bnd
push
pop
dec
sub
daa
(bad)
fwait
and
adc
jne
(bad)
push
jmp
loopne
into
ret
xor
dec
retf
rcr
retf
pop
test
call
mov
dec
pusha
mov
pop
das
out
dec
in
xor
retf
adc
mov
add
mov
loopne
cld
test
sbb
cmp
cmps
mov
outs
(bad)
lock
mov
fild
mov
ins
sub
stos
inc
xchg
(bad)
mov
sbb
call
scas
loope
adc
setbe
pushf
stc
cmps
pushf
inc
add
aam
jp
rcl
dec
out
jbe
cs
test
std
shl
mov
push
stos
stos
repnz
nop
sub
add
xchg
repnz
jmp
jl
pop
xchg
sub
jno
inc
pop
add
cwde
push
adc
sahf
adc
and
mov
not
enter
sbb
xor
int3
or
addr16
cwde
and
xchg
(bad)
pushf
push
dec
adc
or
test
sub
fcom
mov
iret
sbb
add
les
push
jno
fnstenv
sti
or
je
jl
out
or
jno
inc
sub
mov
push
in
clc
jmp
ret
pop
pushf
adc
xor
mov
loopne
mov
ss
jmp
mov
cdq
popf
and
test
out
cmp
mov
jmp
repz
mov
pop
adc
adc
jo
arpl
out
xor
loop
xor
mul
mov
mov
call
cmp
push
jne
fistp
mov
popf
dec
sbb
inc
dec
jge
xor
inc
stos
xchg
cmp
(bad)
pop
sti
adc
(bad)
ficomp
in
sbb
pusha
push
xor
cwde
stos
aaa
imul
jp
jmp
sbb
fbld
imul
jmp
loop
fwait
int
push
lock
cmp
or
imul
dec
adc
int
bound
jo
jle
lahf
mov
sar
and
dec
iret
lahf
out
arpl
xor
mov
mov
adc
(bad)
dec
and
push
xchg
ins
movs
jle
or
jae
mov
sub
rcr
aaa
ja
loope
jnp
retf
mov
mov
xor
cmp
sbb
inc
repz
retf
fisub
pop
cld
shl
add
out
aad
das
pop
cli
stos
cdq
fcom
mov
xchg
shl
dec
xor
imul
cmp
xor
xchg
xchg
cmp
inc
lea
pop
xchg
int3
sbb
mov
in
sbb
stc
cs
cmp
cmp
retf
in
lods
and
jb
mov
pop
cwde
in
pop
popa
xchg
jbe
or
pop
shr
stos
or
cs
(bad)
xor
push
call
rol
call
cmp
adc
add
jmp
jo
outs
das
sbb
pop
movs
mov
pop
fstp
jecxz
xlat
popa
mov
test
imul
sub
retf
jbe
shl
ds
shl
xor
xor
jecxz
jl
mov
mov
push
or
sbb
pop
xchg
std
or
jle
js
cmp
push
cwde
scas
int3
aad
inc
mov
sbb
jp
or
cdq
xor
les
push
sahf
push
(bad)
jl
dec
jb
(bad)
call
dec
jae
in
cmp
sbb
fs
or
out
push
sti
mov
cmp
sar
xchg
(bad)
push
ds
jns
xchg
push
jb
mov
and
retf
sbb
pop
fadd
mov
mov
(bad)
pushf
push
jnp
lahf
(bad)
js
div
push
jg
mul
js
mov
add
or
add
push
es
lods
call
jp
adc
cmc
xchg
mov
sub
ss
les
mov
mov
loope
popa
cmps
push
js
in
push
push
test
out
retf
dec
fwait
push
add
jle
lods
jg
ret
sahf
lds
(bad)
icebp
aam
or
test
dec
out
push
cmc
out
push
(bad)
mov
inc
cmp
adc
mov
retf
idiv
in
(bad)
pop
fiadd
jmp
or
add
adc
adc
loop
test
ret
jbe
lds
sub
addr16
sub
mov
mov
lods
aam
or
cmp
mov
das
les
jl
sbb
test
pusha
or
push
add
sub
popf
cmps
sub
out
sub
jl
dec
sbb
mov
jo
in
or
and
mov
cwde
pop
test
sub
sub
out
mov
popa
xchg
lea
mov
pop
dec
sub
pop
dec
test
jmp
test
pop
into
icebp
push
mov
cs
arpl
mov
jnp
jl
xchg
(bad)
xchg
sahf
bound
jecxz
mov
ins
mov
(bad)
lock
push
pop
clc
mov
xor
sbb
dec
jbe
ins
das
ins
in
repz
cmp
mov
ret
cwde
pop
stc
dec
int3
es
int
jae
jmp
cli
and
cmp
in
jg
pop
push
pop
repz
repnz
mov
rcl
push
icebp
cmp
push
cmp
xchg
clc
(bad)
adc
jno
add
out
retf
xchg
push
xor
jnp
int3
push
sbb
sbb
lds
pop
test
leave
out
xchg
std
jbe
outs
sbb
jo
xchg
enter
dec
sbb
popa
jbe
out
cmp
inc
xor
leave
(bad)
pop
sbb
cld
lods
ds
xchg
xor
(bad)
rol
and
pop
or
pusha
adc
jno
jle
(bad)
pop
ss
sub
fadd
and
scas
cmp
scas
in
cmp
mov
in
int
or
stc
adc
fsubrp
mov
loope
inc
lds
mov
aas
cdq
cdq
stos
or
daa
adc
or
sbb
xor
(bad)
loopne
mov
sub
mov
call
pop
sub
cmp
jl
inc
cmp
out
iret
pushf
div
fiadd
pop
fild
ret
ret
aaa
jecxz
popf
dec
(bad)
sbb
mov
fsub
inc
aam
jo
cmp
bound
push
sbb
cld
adc
hlt
fdivrp
mov
push
aad
ret
pop
retf
push
push
imul
arpl
or
cmp
adc
addr16
jbe
inc
sbb
jno
mov
jecxz
adc
retf
loopne
push
adc
dec
push
add
sbb
loope
fsubrp
ja
push
pop
or
add
jmp
or
cmp
test
cmp
xchg
lods
and
shl
fsub
pop
pop
xchg
in
mov
jg
out
mov
addr16
jecxz
int
xor
out
cmps
dec
es
sbb
mov
(bad)
aam
jb
cmp
pushf
ficom
arpl
vpsubsw
mov
mov
daa
daa
shl
add
outs
rol
add
div
mov
cs
arpl
or
and
fmul
outs
push
adc
(bad)
ins
xchg
aaa
mov
cld
sbb
cmp
outs
cli
aam
sti
hlt
jg
hlt
stos
ins
jmp
cmp
mov
clc
(bad)
mov
cmp
and
add
clc
sub
shr
mov
mov
xor
imul
push
outs
cmp
pop
push
xchg
add
aas
outs
push
or
test
ret
xchg
xor
sub
fcmovnb
add
(bad)
inc
addr16
aas
fiadd
daa
stc
or
shr
iret
or
mov
das
xor
mov
jne
cmp
test
inc
ret
lahf
pop
rcr
scas
test
test
stos
xchg
loope
sbb
popa
push
lds
std
xor
mov
lods
js
xor
icebp
movs
inc
sub
pop
mov
and
mov
(bad)
pushf
xchg
fld1
out
cmp
xchg
cmp
shr
fnstsw
data16
aas
dec
jbe
out
sti
inc
jo
jl
xchg
rcl
ret
mov
je
inc
xchg
push
adc
mov
stos
adc
pop
shr
mov
and
call
push
jns
aad
stos
pop
out
jp
inc
sub
dec
ret
push
std
dec
gs
xchg
arpl
jp
pop
loope
int
shl
movs
xchg
js
adc
inc
jmp
retf
enter
aam
hlt
mov
mov
jl
stc
es
pop
inc
inc
xchg
aaa
je
and
and
add
outs
cdq
popf
cmp
and
mov
cmp
pop
jmp
mov
mov
ins
add
das
cld
inc
cmp
adc
push
add
rcr
lea
fnsave
jg
dec
lahf
ins
shr
mov
(bad)
and
inc
or
jle
cmps
outs
fbstp
sti
mov
aas
sub
push
mov
ss
scas
outs
mov
test
xchg
pushf
and
mov
movs
xchg
loop
cmp
cmp
(bad)
jae
retf
and
pushf
(bad)
pusha
jg
retf
sbb
push
test
sbb
xor
xor
pop
and
aas
push
jbe
daa
xor
aad
adc
sub
pop
xchg
inc
sub
and
and
adc
adc
push
popf
dec
aas
dec
popa
iret
and
loop
mov
jns
cdq
ret
stos
lds
xor
ret
mov
mov
ins
and
adc
mov
jb
not
pop
imul
std
xchg
(bad)
jmp
sbb
and
cmp
and
popf
mov
jl
jmp
push
retf
in
cmp
jns
pop
int
aam
jno
push
lods
enter
mov
cmps
xchg
mov
fistp
lds
adc
clc
nop
pop
sbb
mov
test
lds
sbb
push
xor
ret
fwait
lahf
loope
icebp
jmp
aas
cli
cmc
dec
es
int
icebp
leave
xchg
es
mov
dec
mov
sbb
call
xlat
xchg
adc
or
fild
out
or
dec
sbb
rcr
jne
scas
jmp
ins
repnz
fs
bound
and
es
mov
push
xor
push
adc
inc
and
in
jge
ret
inc
repz
loop
push
push
bound
cmp
mov
or
ds
adc
add
mov
retf
push
lds
loopne
cmp
mov
or
adc
outs
imul
js
cmp
fucomi
xchg
mov
daa
sti
je
stos
popf
jg
jnp
stos
aad
mov
popf
int
(bad)
mov
add
jno
cmc
cmp
dec
shl
cmp
add
fisttp
xlat
test
jmp
lods
and
pop
popf
xchg
mov
aas
movq
je
or
or
outs
dec
sbb
ror
push
jbe
jle
scas
xchg
mov
mov
fnstenv
or
pop
mov
adc
mov
mov
mov
jno
enter
imul
les
adc
inc
stc
sub
mov
mov
sub
sar
(bad)
int
ss
sbb
or
scas
cdq
push
retf
movs
pop
retf
imul
xchg
mov
mov
ret
sub
add
jecxz
(bad)
adc
add
out
call
mov
popa
std
jno
push
mov
xchg
cs
add
icebp
add
add
outs
dec
icebp
push
das
jg
int
jnp
mov
sbb
and
cmp
xchg
int3
pop
jns
cmp
push
fnstcw
cld
xchg
ror
mov
std
test
aam
hlt
xor
addr16
arpl
aad
daa
loopne
mov
imul
or
repnz
dec
and
inc
adc
add
jge
test
inc
jp
inc
xor
cmps
lods
cmp
loop
outs
das
iret
test
ret
push
cdq
popf
pop
xor
int3
loop
xor
cmps
repnz
sub
mov
es
test
mov
adc
out
(bad)
retf
aad
fnstenv
cmp
mov
mov
test
xchg
mov
repz
mov
mov
mov
jg
mov
movs
idiv
popf
push
xchg
push
out
or
xlat
fs
neg
aad
test
js
aad
ds
fbld
dec
sbb
push
inc
outs
add
mov
jp
jmp
jnp
xchg
test
icebp
imul
push
jl
jnp
mov
les
test
loopne
inc
dec
into
mov
fadd
add
out
dec
add
mov
jmp
(bad)
lods
aad
lock
mov
ds
adc
and
gs
xchg
call
xor
fwait
mov
cwde
sub
cmp
cmp
fmul
imul
loopne
arpl
(bad)
xor
mov
cmp
mov
in
enter
jbe
fcomp
fstp
jmp
pop
dec
sti
jae
sbb
or
jmp
bound
mov
fdivr
div
cs
jle
les
(bad)
adc
jmp
pop
repz
cld
mov
out
jmp
cmp
push
add
pop
scas
lods
fidivr
gs
cmp
adc
add
jns
loope
add
xlat
push
and
aas
jmp
loop
fcom
fsubr
and
outs
jl
sar
mov
add
mov
ins
pop
dec
lock
in
sbb
mov
(bad)
cld
aad
pop
retf
(bad)
out
test
cmp
xchg
pop
jb
inc
shl
sub
aas
retf
jno
xchg
and
jmp
and
sub
outs
nop
push
cmp
jle
data16
sbb
enter
add
mov
loopne
loop
cs
ds
rsqrtps
pop
sub
add
pop
xor
sub
and
xchg
cld
into
popa
mov
push
jne
xchg
sbb
mov
es
jge
jnp
outs
dec
sbb
add
or
push
arpl
das
shl
aam
rcr
loopne
les
xor
sub
lahf
lock
add
mov
adc
sbb
dec
rcr
mov
stc
adc
scas
iret
rcr
inc
xchg
popa
push
jns
sbb
or
cmps
fsubr
stc
pop
test
lea
push
cmp
rep
cmp
mov
retf
and
and
ja
adc
call
lahf
outs
ins
mov
cwde
mov
shr
add
data16
mov
mov
xchg
gs
sar
add
out
jns
adc
data16
pop
push
call
repz
pop
ja
add
ror
aam
imul
outs
xchg
add
add
or
jp
gs
mov
cmps
pop
xchg
xchg
dec
int
cmp
inc
or
jne
push
push
sahf
xor
mov
test
arpl
sbb
or
cmp
aam
xor
cmp
mov
or
push
mov
das
popa
fcomp
mov
push
or
push
mov
and
push
clc
pop
dec
clc
add
(bad)
mov
popa
inc
int
add
cmp
and
in
jne
pop
test
add
push
out
mov
rcr
xchg
mov
xor
jge
mov
clc
fwait
loope
gs
adc
scas
lds
cmp
imul
jnp
and
cmps
xlat
inc
stos
jg
cmp
ja
clc
out
xor
test
sti
stc
push
nop
and
pop
jno
repz
repnz
lods
jl
retf
scas
xor
rol
outs
adc
in
test
enter
es
cmp
push
push
mov
rol
je
popf
xor
hlt
popf
fstp
mov
les
loope
jb
cdq
sub
inc
in
push
jae
jnp
mov
loope
fimul
stos
(bad)
loop
inc
xchg
loope
hlt
cmp
pop
jl
sub
fidiv
jl
sbb
fld
loope
adc
loopne
cmc
dec
stc
ret
icebp
rep
inc
xchg
adc
jno
jge
out
sbb
xchg
test
call
cmp
leave
leave
and
sub
arpl
push
sbb
inc
fistp
or
stc
pusha
std
pop
fsubr
or
fcom
cmp
jmp
fucompp
jb
mov
bswap
inc
std
test
out
fld
ret
pop
mov
mov
das
repz
addr16
cmp
push
add
movs
(bad)
sbb
into
push
fnstsw
xchg
mov
lods
or
js
and
cmp
out
movs
out
imul
(bad)
add
outs
pop
jbe
mov
ret
xlat
rcl
xchg
sub
aam
push
stc
and
mov
test
and
adc
stos
pop
cmp
mov
fdiv
or
cmp
ret
test
loop
xchg
mov
sbb
xchg
call
data16
int3
inc
mov
mov
sub
pop
daa
loope
ja
inc
(bad)
in
ficomp
test
jle
dec
loope
aas
js
in
push
int
cmp
(bad)
aas
cdq
and
clc
and
jecxz
xor
fstp
push
icebp
out
pop
div
fiadd
cmp
inc
outs
mov
pop
adc
hlt
jmp
xchg
fstp
pop
xor
mov
fistp
dec
jle
pop
pop
es
sub
stos
inc
and
cli
(bad)
(bad)
jle
mov
mov
push
inc
inc
pop
outs
(bad)
ins
out
and
mov
cmps
imul
rcr
mov
sub
push
mov
sbb
xchg
inc
out
push
cdq
out
sbb
retf
ror
loop
cmp
popf
dec
pop
cmp
xor
imul
mov
dec
fmul
mov
sahf
and
pusha
jbe
in
lods
in
mov
push
sub
popa
es
adc
or
outs
(bad)
xchg
ins
aas
lock
push
pop
loopne
sub
call
mov
aaa
dec
lea
jae
fadd
or
add
pop
and
and
jo
add
les
sub
repnz
pop
mov
cwde
mov
sbb
ror
mov
mov
aas
loopne
mov
mov
fwait
lds
call
repz
xor
mov
pop
or
js
mov
jno
xor
push
int
push
push
mov
scas
push
ficom
in
push
out
ja
addr16
xchg
cmp
adc
popa
retf
jno
in
mov
pop
in
iret
movs
pop
mov
xadd
fs
fistp
jg
popa
pop
mov
data16
push
xor
shr
data16
xor
outs
arpl
lock
mov
mov
call
xor
fstp
ds
jbe
clc
int
pop
aas
(bad)
xor
imul
repnz
mov
ds
popa
std
lods
mov
or
push
mov
adc
dec
loopne
cdq
sub
outs
iret
push
inc
mov
into
test
test
in
stos
mov
adc
jbe
sub
shr
cdq
icebp
mov
mov
int
pushf
pop
(bad)
scas
xor
dec
inc
inc
mov
in
pop
add
out
jge
pop
cmp
add
jl
mov
mov
push
les
xchg
jb
test
out
cmp
ja
mov
scas
lds
add
add
push
iret
daa
push
shr
dec
(bad)
lea
mov
mov
repz
dec
aam
sub
ja
call
cmp
fidiv
or
loope
pop
cmp
push
addr16
shr
ror
add
jno
mov
jge
(bad)
scas
pop
shr
mul
push
mov
pop
xchg
mov
(bad)
jno
pop
jo
cmps
ins
sti
sbb
aas
shl
aas
and
sub
shr
scas
adc
cli
mov
jl
into
pop
add
pop
daa
cmp
add
push
sub
mov
repz
ds
sbb
shl
pop
xchg
shl
inc
scas
jnp
mov
mov
dec
test
mov
pusha
jmp
push
jne
scas
dec
cmp
int
shr
or
loope
mov
or
jb
pop
inc
mov
push
cdq
(bad)
fsubr
retf
outs
out
psubq
xchg
ins
jg
mov
popa
test
int3
loop
sub
ins
inc
arpl
(bad)
cmps
leave
sub
or
or
cld
add
push
movs
stos
outs
andnps
mov
repnz
in
test
cdq
cmp
sahf
fwait
repnz
jle
(bad)
retf
cmp
in
imul
sbb
pop
imul
mov
mov
fsub
push
jp
dec
imul
stc
scas
dec
mov
xor
xchg
call
lods
mov
mov
and
adc
rol
stos
pop
adc
pop
loopne
dec
fcomp
cmc
fstp
stos
int
mov
xchg
mov
adc
les
xchg
pop
jae
cmc
retf
add
sub
leave
or
push
es
mov
fsubr
loop
xchg
cld
jo
push
fbstp
and
lds
frstor
xor
in
push
out
xor
push
aas
(bad)
mov
mov
or
mul
pop
stos
std
adc
xchg
repz
push
inc
adc
mov
mov
and
push
out
leave
jmp
mov
dec
adc
push
sub
(bad)
cmp
daa
inc
inc
sub
mov
dec
jecxz
xchg
in
ror
call
das
jl
icebp
ret
dec
jno
shl
pop
mov
dec
xlat
mov
mov
leave
int
dec
jle
dec
dec
dec
in
fidivr
(bad)
retf
test
hlt
adc
push
push
pop
(bad)
xchg
add
shl
shr
jle
imul
sub
(bad)
mov
ror
int3
les
pusha
mov
cwde
mov
or
xchg
lock
adc
int
and
(bad)
pop
in
es
les
cwde
ins
out
mov
pushf
adc
jp
push
mov
rcl
int
mov
pop
xchg
fld
movs
arpl
cmp
out
cs
aam
mov
xchg
cmp
imul
pushf
mov
adc
sub
push
arpl
loop
xchg
or
data16
and
js
cmps
mov
out
adc
lock
mov
leave
pushf
push
inc
outs
xor
repz
mov
push
add
int3
ds
neg
mov
jp
mov
pop
dec
fcomip
clc
scas
sti
dec
out
aas
or
popf
adc
sbb
xchg
stc
cwde
fcomi
push
outs
cmc
hlt
outs
xchg
pop
sbb
adc
inc
mov
adc
out
jnp
mov
and
cmc
pop
push
imul
sub
and
jg
add
push
jae
scas
fstp
outs
sbb
dec
and
cmp
mov
xor
pop
push
lods
hlt
add
mov
call
jnp
loopne
sbb
or
fdivr
push
adc
sbb
icebp
xor
add
aaa
adc
inc
pop
sbb
jb
adc
fidiv
xor
test
mov
add
push
pop
xor
inc
shl
(bad)
inc
lds
sub
push
rcr
or
or
inc
jp
mov
and
pop
jbe
or
jno
pop
imul
xor
mov
jbe
xor
adc
ja
jp
jno
push
sti
aam
arpl
xchg
test
sbb
ins
lock
call
sbb
cmps
and
rol
(bad)
sbb
inc
shl
hlt
lock
loope
mov
(bad)
xor
inc
inc
xchg
es
xchg
aam
mov
aad
or
icebp
dec
pusha
mov
add
iret
mov
cmp
push
mov
mov
push
cmp
call
xlat
daa
push
dec
ds
imul
mov
frstor
rcl
push
(bad)
mov
mov
add
xor
sub
adc
push
sbb
sti
arpl
jl
scas
xor
(bad)
mov
fxch
cmp
jb
fld
data16
push
mov
ror
mov
out
cmps
cwde
jecxz
jp
leave
mov
xchg
lahf
fwait
std
push
cmp
sbb
ret
xchg
popf
ins
jbe
lds
and
pop
pop
scas
pop
cmp
add
add
stos
dec
jl
loop
push
pop
mov
inc
imul
or
or
push
out
ret
cmp
data16
xor
add
dec
(bad)
xchg
clc
add
fsubr
out
xor
fldcw
popf
retf
in
xor
mov
lahf
add
lods
xor
jne
and
aaa
pop
outs
pop
ret
sub
scas
arpl
mov
push
add
imul
loop
fidiv
push
mov
pop
jl
dec
jg
mov
add
jnp
cmps
fild
xor
stc
or
xchg
sbb
adc
adc
cmp
or
les
pop
mov
cmp
jg
ss
push
int3
jl
xchg
call
in
ds
lods
scas
adc
test
test
or
sub
sub
and
push
(bad)
stos
or
xor
add
fadd
data16
out
sub
enter
aaa
leave
jno
pushf
push
call
fisub
pop
repz
mov
stc
loopne
fwait
inc
jg
stc
cmp
sub
add
mov
inc
int
push
mov
repz
loop
push
push
vpshaq
jg
xor
out
stc
icebp
nop
pop
icebp
inc
xor
in
aaa
jo
cmp
pop
or
jnp
xor
call
test
movs
push
lds
mov
inc
mov
jns
mov
test
adc
stc
inc
leave
jg
(bad)
jle
addr16
pop
push
popf
cmps
(bad)
adc
xchg
fst
mul
xchg
cdq
inc
inc
cmps
fldenv
push
fsubr
fucomi
cmp
adc
(bad)
shl
scas
push
or
add
sbb
ss
mov
scas
xor
inc
fcom
mov
fisttp
xchg
adc
jp
cmp
cmc
adc
mov
fwait
movs
pop
push
(bad)
cld
adc
inc
sub
(bad)
outs
jno
mov
xlat
cdq
pop
and
push
dec
pop
mov
sbb
(bad)
jmp
adc
lods
(bad)
out
pusha
jbe
aad
fcomp
dec
js
mov
sub
fcmovnbe
arpl
sbb
cs
movs
or
push
ret
mov
xchg
movs
cmps
loope
pop
outs
mov
cmp
inc
aas
cmp
jb
cdq
dec
xor
mov
loop
pop
pop
or
retf
rol
sbb
inc
js
pop
inc
sbb
sbb
pushf
xor
dec
pusha
add
cmp
and
dec
in
in
cli
lock
es
adc
pop
dec
inc
cmp
adc
sub
xor
mov
jmp
lods
pop
or
adc
mov
pop
imul
std
jae
div
adc
or
mov
adc
cwde
stos
pop
jp
mov
add
jne
ds
std
pop
loope
mov
(bad)
test
aas
cdq
fisubr
dec
cmc
jb
out
pushf
mov
out
jo
dec
jg
cmps
lahf
loope
cmp
mov
cmp
dec
inc
xlat
xchg
inc
mov
dec
movs
mov
mov
stc
xchg
xlat
call
js
fdivr
mov
lds
add
movs
mov
push
into
int
jmp
in
mov
retf
mov
stos
pushf
mov
xchg
and
adc
lods
ret
cmc
sub
mov
mul
adc
fidivr
out
pop
movs
imul
cmp
push
icebp
pushf
rcl
mov
inc
je
push
ret
retf
lea
jg
and
cwde
fist
pop
xor
fwait
pop
data16
push
xor
fisttp
jle
not
pushf
call
dec
iret
mov
arpl
fbld
xchg
fidivr
dec
pop
mov
or
dec
cmp
popa
ja
dec
xchg
cdq
jg
std
add
mov
adc
popa
shl
into
jle
fiadd
pop
inc
mov
sahf
mov
push
retf
sbb
inc
scas
not
push
mov
test
cmps
jns
inc
aas
int
mov
frstor
add
pusha
add
lahf
rol
retf
fadd
mov
dec
jle
jae
sub
push
sub
ret
sub
test
fiadd
add
std
jecxz
jl
ins
jmp
dec
cmps
or
ud2
adc
sbb
add
movs
push
stos
loop
inc
pushf
pop
call
(bad)
push
jmp
push
pushf
jo
lea
jbe
pshufw
sar
pop
(bad)
ja
ds
aaa
mov
mov
inc
push
dec
mov
and
sti
pop
imul
(bad)
(bad)
mov
mov
stos
mov
adc
leave
movs
dec
cdq
jnp
hlt
sbb
scas
push
loopne
push
cmps
xchg
jmp
pop
in
mov
pop
jle
lock
mov
enter
push
xchg
push
mov
retf
je
popf
jns
test
sbb
xchg
loope
aam
mov
stos
lods
mov
call
icebp
loope
rcr
sbb
add
xchg
into
std
add
mov
jl
mov
inc
sbb
mov
push
repz
jl
mov
sbb
adc
in
(bad)
stc
pop
or
dec
cmps
jne
and
lods
cdq
add
lahf
retf
leave
xchg
sbb
cld
pusha
inc
(bad)
push
(bad)
icebp
mov
xlat
and
adc
dec
mov
dec
xor
mov
shr
out
cdq
fstp
std
adc
mov
pusha
cmp
pop
inc
jns
clc
xchg
fcomp
xchg
or
gs
jb
xchg
mov
rcl
dec
mov
call
fmul
sub
cmp
popa
dec
fst
fwait
push
retf
jnp
test
lahf
inc
mov
jnp
push
mov
mov
and
out
inc
cmps
sub
call
xor
(bad)
je
add
les
adc
movs
cdq
(bad)
faddp
push
xchg
cmc
pop
fcmovne
lahf
icebp
inc
test
cmp
pop
in
jnp
mov
icebp
add
(bad)
push
add
xchg
inc
and
test
in
out
push
pop
jnp
(bad)
lds
mov
(bad)
aas
cwde
mov
pop
mov
add
mov
mov
nop
aad
pop
dec
inc
rcr
in
dec
int3
jnp
cmps
or
pop
repz
aaa
jae
mov
nop
jae
fcmovnbe
movs
lock
or
stc
hlt
mov
icebp
pop
jp
dec
mov
dec
mov
jecxz
jg
sar
(bad)
fmul
push
cs
pop
jo
movs
leave
adc
push
dec
pmullw
ins
retf
sub
sub
cmp
lahf
clc
push
stc
mov
and
loopne
mov
test
mov
test
push
repz
jnp
shl
arpl
xor
ds
mov
and
call
shl
fdiv
stos
sbb
mov
add
aad
loope
sbb
ror
push
ror
rcl
xlat
int
jmp
shl
dec
xor
lods
mov
mov
sbb
mov
std
outs
and
fsubrp
icebp
adc
dec
ss
retf
shl
mov
aaa
push
push
sbb
lock
adc
mov
cs
(bad)
cmp
xor
add
sub
or
dec
cwde
daa
fnstcw
fnstsw
mov
inc
xor
mov
fsubr
adc
pop
or
add
sbb
xchg
push
lea
ds
push
retf
xchg
mov
cmp
ficomp
pop
jg
stos
add
mov
inc
inc
(bad)
mov
lahf
mov
aam
mov
retf
inc
inc
xchg
mov
inc
sub
and
pop
jmp
addr16
adc
cmp
xor
mov
jecxz
lahf
rcl
jno
stc
sbb
cmp
cld
popa
into
sbb
mov
sbb
xchg
fcmovnb
movs
mov
idiv
js
cmp
push
mov
mov
push
out
push
or
fdivr
out
out
add
jns
fmul
mov
push
dec
inc
jno
or
add
xchg
aaa
xor
pop
ins
add
je
push
fild
enter
ins
push
out
je
or
retf
ss
out
sahf
jge
pop
or
sub
mov
jns
les
idiv
sahf
lahf
xchg
loop
lds
mov
cmps
jmp
fst
fwait
push
mov
xchg
pop
jae
cdq
clc
adc
cwde
jl
stos
imul
popf
xchg
push
ret
xchg
push
data16
pop
cmps
inc
jae
js
mov
js
mov
addr16
sar
mov
call
mov
ret
add
and
xchg
iret
inc
xor
add
aam
sub
add
lock
inc
push
mov
mov
xchg
cmps
cdq
and
(bad)
fadd
and
push
add
sub
cld
je
cmp
aas
ret
jne
mov
scas
dec
or
sbb
xor
xchg
mov
add
daa
lea
in
aad
test
or
or
dec
test
(bad)
test
adc
daa
ret
mov
scas
sbb
cmc
hlt
inc
push
(bad)
xor
sub
xchg
dec
in
js
pusha
cmc
adc
mov
call
cmp
in
push
(bad)
mov
call
cld
xor
jns
jge
je
jmp
dec
add
dec
pop
loop
mov
mov
adc
cmp
lock
push
pushf
and
gs
xor
xchg
idiv
imul
push
out
sahf
addr16
xor
es
push
outs
xchg
sbb
out
pop
shl
(bad)
xchg
(bad)
cwde
clc
inc
add
mov
cmc
cmp
adc
xor
mov
cmp
mov
mov
inc
sbb
xor
in
test
dec
retf
jnp
jp
idiv
cmp
jno
mov
mov
jo
cmp
cmp
xchg
aam
sub
lods
pusha
dec
iret
ins
loop
sbb
aad
or
pop
scas
ret
stc
or
or
mov
sahf
pop
in
movs
pop
out
and
out
mov
pushf
test
out
inc
sub
mov
xor
shl
test
loop
dec
push
adc
xchg
or
xor
adc
and
xlat
cmps
fs
xor
mov
jg
fdivr
jnp
ror
add
inc
sbb
rol
dec
or
inc
mov
jecxz
loope
test
pop
call
xor
cmps
jle
sub
mov
jmp
sub
xor
arpl
adc
xor
or
iret
(bad)
data16
xor
(bad)
mov
jmp
jmp
icebp
mov
xchg
sbb
fisub
dec
cdq
add
dec
sub
fbld
mov
aam
xchg
std
mov
push
loopne
movs
cld
fcomp
cmps
call
ret
test
xor
adc
dec
popf
or
or
add
inc
jae
arpl
sbb
das
repz
in
dec
mov
ins
push
lea
mov
jae
push
dec
mov
ret
or
cmp
push
mov
mov
sbb
(bad)
pushf
in
movs
pop
cli
test
test
or
ds
xor
mov
mov
add
jmp
je
jo
out
xchg
leave
outs
xchg
sbb
mov
ret
pop
retf
nop
nop
fprem
jmp
cli
(bad)
pop
dec
mov
addr16
jge
mov
daa
or
dec
(bad)
loopne
sub
mov
and
and
dec
(bad)
in
sbb
inc
pop
aaa
mov
sbb
sub
out
sbb
pop
icebp
test
jo
inc
outs
fucom
pop
movs
mov
repz
push
into
mov
dec
(bad)
sahf
xlat
fstp
adc
ja
fistp
push
sbb
mov
jno
out
jbe
mov
das
or
add
sub
pop
iret
les
pop
inc
shl
inc
in
arpl
sub
in
dec
mov
mov
call
call
aas
push
rcl
div
jg
stc
dec
int3
fbld
fist
fbstp
mov
add
std
clc
push
ins
pop
imul
movs
lods
fdiv
(bad)
(bad)
pushf
nop
(bad)
pop
fwait
imul
push
xlat
mov
and
mov
lods
pushf
fistp
fist
mov
js
jns
nop
scas
sub
adc
pop
jno
data16
cmp
repz
outs
loop
mov
jbe
(bad)
stos
scas
std
lea
and
xor
je
adc
xchg
xor
push
arpl
xor
(bad)
xor
or
xchg
xchg
pop
ins
or
cmp
lds
inc
jmp
inc
hlt
call
xchg
arpl
jmp
lods
shl
jge
std
cmp
cmp
inc
pop
fdiv
pop
or
add
pop
mov
retf
loop
mov
mov
bound
xor
inc
outs
mov
lock
lds
mov
imul
and
aas
sub
xor
mov
jl
shl
pop
add
or
cmp
add
test
pop
xor
stc
xlat
sub
fmul
xlat
sub
int3
pusha
pop
(bad)
retf
and
pmullw
inc
lock
call
loop
xor
sub
add
mov
imul
test
hlt
or
jno
dec
lea
sbb
add
lea
in
xchg
ins
pop
cmps
cmp
test
(bad)
inc
fcmovb
repnz
pop
outs
out
in
pop
push
adc
icebp
push
pop
adc
or
sub
aas
xor
fnstsw
sbb
lock
adc
inc
iret
or
aad
xlat
or
sti
adc
data16
iret
bound
sub
jp
gs
leave
jmp
sti
imul
fst
sub
inc
adc
mov
sub
jns
loop
neg
dec
push
scas
mov
movs
xchg
pop
fsub
sbb
cs
nop
xchg
js
xor
ret
fisttp
sbb
inc
jmp
xor
inc
jnp
or
mov
mov
mov
cmps
movs
and
jle
(bad)
cs
and
mov
mov
mov
mov
sbb
popa
clc
idiv
mov
pop
call
sbb
loopne
fadd
mov
xor
xchg
pop
mov
out
adc
jp
fild
loopne
jbe
stos
dec
ins
cmp
loop
retf
jae
xchg
icebp
pop
scas
loope
add
out
jmp
or
das
jmp
loopne
add
lods
and
pop
shl
jle
aaa
mov
push
and
call
push
push
outs
mov
pop
data16
or
jecxz
sub
lahf
arpl
sbb
sbb
xlat
stos
daa
dec
lods
push
sbb
in
mov
add
movs
add
out
push
ins
lods
push
cwde
pop
test
clc
scas
aam
shl
push
mov
enter
pop
pop
sub
dec
loope
ret
arpl
dec
icebp
clc
cmc
int3
outs
outs
jno
out
jns
stos
aam
lahf
fisubr
movs
out
sti
test
movs
jb
ror
das
adc
adc
sub
add
jp
jae
js
call
xchg
jmp
jbe
ret
ss
ficom
lds
xor
es
fld
jb
mov
rcr
xor
test
fild
data16
sbb
js
rcl
sub
cld
mov
scas
mov
sub
aas
mov
cmps
movs
or
pushf
shr
jl
stc
push
aaa
cli
jg
pop
cli
retf
test
mov
sub
inc
hlt
ret
mov
add
imul
inc
push
add
inc
test
push
xchg
xchg
out
add
call
xchg
push
xor
adc
ds
shr
mov
jae
sub
cmp
imul
clc
stos
jg
sbb
in
mov
je
mov
push
imul
ins
scas
cmp
mov
add
out
mov
lods
pop
add
adc
ja
jecxz
cmp
inc
push
(bad)
jge
mov
int3
adc
jecxz
or
push
xlat
push
movs
jl
repz
dec
jne
jle
jmp
ds
jg
in
push
(bad)
fidivr
pop
imul
add
sub
dec
and
aaa
mov
stos
std
sub
inc
sbb
and
retf
add
dec
dec
fisub
mov
or
movs
sub
pop
daa
cwde
test
pushf
inc
test
cmps
pop
loope
into
or
mov
dec
out
ficomp
loop
test
cmps
fldenv
push
push
out
dec
push
retf
in
mov
push
push
inc
push
jbe
cmp
repz
and
int3
jae
mov
dec
fisubr
loope
push
cwde
dec
xrelease
mov
pushf
mov
xchg
pop
out
ins
mov
in
imul
xchg
(bad)
pop
pop
and
cmp
out
adc
push
push
mov
int
mov
mov
mov
mov
popf
inc
and
lds
je
add
iret
xor
sub
cli
add
xor
jl
scas
sti
xchg
pop
jge
jg
xor
or
mov
push
push
dec
or
inc
or
movs
mov
mov
xor
add
arpl
xchg
mov
mov
daa
retf
pop
imul
int
data16
rcl
movs
stos
dec
jbe
mov
mov
sbb
jbe
jne
(bad)
fist
sahf
test
test
xchg
pop
lea
data16
dec
outs
cs
sbb
cmp
int3
out
xor
cmp
add
enter
cmp
in
ins
jns
retf
pop
sub
or
repnz
addr16
je
adc
cld
idiv
js
mov
inc
cmp
cdq
jno
and
mov
pushf
ret
or
xor
sbb
hlt
or
dec
dec
ficom
fnstenv
neg
sub
popf
arpl
ret
sbb
sbb
scas
sti
loopne
ret
out
dec
inc
push
scas
test
test
cmp
movs
push
pop
hlt
inc
pushf
aas
lock
jecxz
xchg
cmps
imul
out
mov
push
not
scas
ss
sub
xor
repz
mov
pusha
int
sub
fsubr
push
cli
push
push
add
push
fwait
das
fsubr
adc
loope
idiv
mov
jl
sbb
cmps
and
outs
xchg
xchg
jge
xchg
jmp
cmp
push
repz
cmps
pop
cli
mov
outs
jno
pop
jp
(bad)
pop
int
int
cmc
sahf
inc
repz
xchg
pop
outs
(bad)
push
xor
repz
pop
xchg
jge
inc
cmp
jo
jle
add
scas
(bad)
pop
mov
(bad)
popf
or
and
lds
out
xor
in
jmp
mov
aas
iret
push
lahf
dec
sub
pop
mov
dec
jne
push
rcr
call
pushf
gs
outs
outs
imul
push
shr
nop
int
jns
mov
adc
jo
add
scas
repz
lock
jmp
mov
jmp
test
rcr
popf
cmp
retf
mov
xor
iret
test
jne
or
movs
inc
loop
pop
push
std
rcl
jl
mov
fcom
into
aad
dec
cmps
mov
jb
call
in
pop
stos
xchg
js
mov
cdq
sbb
arpl
mov
sbb
add
scas
add
es
fcom
xchg
into
add
(bad)
xchg
cmp
dec
je
jno
push
lea
fild
mov
jp
retf
xlat
cmps
mov
retf
and
push
push
(bad)
mov
push
sub
xor
out
mov
and
or
xor
psubq
mov
das
pop
cli
sahf
stc
imul
shr
in
or
sbb
ins
push
sbb
out
das
jmp
sbb
cdq
test
adc
xchg
add
shl
add
sub
daa
add
ret
sbb
out
sub
into
hlt
sbb
sbb
aas
push
and
ror
lea
aad
pop
mov
(bad)
or
call
es
js
dec
sub
dec
hlt
and
rcl
pop
inc
sbb
test
fdivr
cmp
es
ja
sub
call
adc
shl
or
cmp
loopne
jne
std
fwait
rcr
inc
rol
add
movs
inc
(bad)
sbb
mov
adc
imul
pop
out
xor
lods
and
mov
clc
sbb
and
cmps
and
fmul
cwde
icebp
adc
xchg
mov
ret
push
movs
mov
pop
gs
push
mov
ds
lea
fsubr
(bad)
std
mov
pop
mov
daa
dec
(bad)
xlat
inc
cmp
stc
pop
fs
mov
xor
test
inc
adc
add
sbb
or
(bad)
mov
fcmovb
fild
add
and
dec
push
jg
sbb
cmps
loope
js
jecxz
mov
call
cmps
push
cmp
ret
inc
add
ins
stos
adc
bsf
sub
mov
mov
xlat
or
ret
not
pop
sbb
xor
adc
mov
ss
adc
and
pop
jo
pop
gs
and
les
dec
jmp
sbb
bound
mov
push
push
push
jmp
mov
push
int
xor
add
mov
xor
jg
mov
xor
or
mov
jle
cmp
pushf
jmp
fdiv
cdq
es
ror
les
mov
push
pushf
jge
(bad)
shl
adc
mov
test
jecxz
cli
adc
int3
retf
dec
push
hlt
rcr
int3
mov
adc
adc
inc
sbb
jno
cmp
dec
or
jl
dec
dec
sbb
mov
(bad)
pop
jp
fcomi
push
sbb
jno
cmp
sub
pop
lahf
retf
and
fwait
and
aad
sub
jmp
jnp
xchg
out
ins
inc
out
shl
sub
push
int3
jae
je
out
push
xor
sub
das
scas
cmp
pop
inc
sar
rol
jle
in
dec
(bad)
mov
je
fcmovbe
(bad)
lds
mov
mov
mov
arpl
dec
mov
and
push
in
pop
adc
mov
das
add
mov
(bad)
in
jecxz
sbb
mov
clc
adc
sub
adc
jne
imul
mov
or
lds
dec
bound
stos
or
xor
sbb
pop
sbb
test
mov
adc
cwde
pop
sar
cmp
jne
fst
std
dec
lods
jns
fdiv
mov
fisubr
(bad)
cmp
jae
aaa
enter
and
pop
jb
in
cmp
xor
xor
in
jnp
gs
inc
retf
mov
sbb
jno
scas
cmp
dec
or
sahf
sub
movs
clc
xor
jl
xchg
jne
push
gs
cmps
cmps
cld
(bad)
push
xor
jmp
dec
popa
sub
sub
sub
inc
imul
push
je
aas
hlt
stos
(bad)
sbb
test
call
fld
out
pop
push
sti
dec
mov
push
adc
sbb
shr
imul
repz
dec
adc
cmp
xor
or
pop
or
push
sub
stos
cmp
cwde
gs
sti
xor
repnz
sub
dec
les
ja
pop
jl
jnp
gs
pushf
movs
or
int3
cs
iret
pop
mov
outs
lahf
jo
pop
fdivr
and
ins
std
or
sbb
xor
jo
and
mov
mov
data16
adc
or
and
or
sbb
inc
pushf
in
sub
pop
jbe
daa
add
call
push
add
mov
into
aad
pop
loop
sub
mov
imul
out
idiv
ds
rcl
int3
(bad)
fsubrp
jne
das
(bad)
cmp
retf
cs
mov
jecxz
popf
mov
adc
loope
lods
cmp
fwait
imul
mov
mov
dec
loopne
mov
mov
cmp
in
aam
mov
rcr
test
outs
push
sbb
pop
jo
ds
sub
sub
xchg
mov
shr
outs
fwait
mov
arpl
sub
cmp
or
cmp
fist
and
imul
dec
pop
or
sti
aad
xor
jle
jno
sub
pop
pop
sbb
lds
mov
repnz
imul
and
cmp
or
mov
sub
add
cld
shr
pop
mov
int3
inc
loopne
(bad)
scas
repnz
dec
jle
repnz
pushf
aaa
xchg
data16
mov
mov
outs
xor
sub
adc
mov
call
fsub
addr16
cmp
mov
xchg
mov
push
adc
loopne
je
dec
jno
inc
add
retf
mov
lods
inc
scas
jecxz
push
repnz
addr16
push
scas
dec
push
aad
inc
jp
movs
push
loope
js
dec
or
imul
scas
pop
pop
ror
push
sub
loope
mov
mov
inc
out
push
cmp
xor
(bad)
loop
jae
push
out
sbb
cmc
neg
mov
ret
aas
icebp
shl
jnp
xor
(bad)
repnz
addps
pop
xchg
xor
xor
cmp
pop
(bad)
rol
pop
mov
sub
sub
xor
cdq
ins
mov
retf
in
in
add
sub
test
add
clc
out
and
mov
mov
xor
sub
pop
push
lds
(bad)
lea
test
ds
sbb
pop
jbe
mov
or
xor
out
nop
pop
adc
call
jmp
cmp
and
gs
dec
or
xor
shl
sub
pop
inc
dec
lock
push
(bad)
retf
push
sub
jecxz
js
ss
cld
and
push
mov
adc
jnp
push
out
pop
inc
jbe
pop
pop
cmps
neg
mov
popa
fadd
add
test
(bad)
aad
mov
test
dec
cmp
inc
(bad)
aad
(bad)
sub
inc
sbb
mov
popf
sbb
in
xchg
sub
or
push
mov
dec
mov
leave
iret
je
test
or
pop
mov
nop
lds
mov
(bad)
ins
mov
jge
jnp
sub
into
dec
xor
scas
adc
(bad)
in
fs
scas
inc
xchg
icebp
inc
push
adc
and
sub
sub
dec
push
lds
adc
sub
pop
popa
or
push
imul
retf
mov
xchg
add
mov
push
cs
and
in
imul
pop
fcmovnbe
in
call
ja
rcr
lock
ins
jmp
dec
fucom
push
repz
xchg
jg
jno
les
adc
jb
xchg
sbb
and
fcomp
inc
dec
pusha
lahf
mov
loopne
xor
push
sbb
test
cmp
js
iret
xor
cwde
loopne
mov
lods
cmp
cmp
aam
pop
xor
mov
mov
ins
mov
add
pop
cmp
mov
fwait
push
into
cwde
add
imul
addr16
mov
add
sbb
push
rol
mov
push
lock
out
les
shr
movs
jno
dec
addr16
mov
retf
pop
sub
enter
pop
push
es
stos
sar
push
in
gs
popf
mov
cld
lods
cwde
addr16
outs
sahf
sbb
push
adc
les
sbb
add
arpl
mov
aad
fisttp
cli
fstp
test
mov
mov
out
shl
in
jno
fidivr
cmp
fistp
xchg
mov
ins
inc
dec
arpl
rcr
out
jle
repnz
daa
aas
and
pop
cmp
enter
repz
outs
mov
out
mov
inc
xor
push
push
lods
or
inc
inc
call
cmp
je
sub
pop
(bad)
cmp
fild
iret
adc
mov
mov
imul
pop
loope
push
sbb
jl
loope
mov
dec
xchg
add
aad
cmc
push
shl
ds
scas
adc
out
sbb
ss
lds
sub
pop
sti
dec
out
ds
imul
pop
movs
push
arpl
or
xchg
in
pop
push
dec
pop
stos
push
mov
loopne
test
retf
mov
xor
lods
sbb
lock
sub
or
add
or
cmp
sub
test
retf
mov
shl
dec
test
pop
jae
mov
jecxz
mov
int3
add
pop
out
ror
nop
jl
mov
dec
pop
add
cmp
mov
adc
fnstcw
es
sahf
cmc
data16
sub
pop
(bad)
mov
mov
rol
fst
test
stc
inc
icebp
mov
sbb
pushf
add
sbb
(bad)
and
sbb
xchg
ss
mov
pushf
sti
push
outs
pop
inc
inc
and
cmps
inc
loope
enter
pop
or
je
xchg
in
xor
dec
or
out
cdq
dec
dec
xchg
popa
inc
add
ins
ror
ror
(bad)
out
(bad)
in
add
iret
mov
sahf
pop
ins
int
jge
nop
sbb
inc
or
push
add
mov
mov
mov
adc
cmps
and
rcl
cmps
push
mov
sub
fnstsw
xchg
mov
repz
jmp
ds
dec
sub
mov
call
pop
mov
rol
mov
adc
or
test
add
cmps
idiv
dec
mov
mov
ret
dec
jbe
in
adc
je
pop
fwait
(bad)
aas
repz
jecxz
push
aas
icebp
hlt
pop
iret
pop
inc
xor
adc
test
int3
mov
pop
inc
stos
sbb
sar
arpl
sub
outs
mov
call
popa
sbb
lods
xchg
dec
frstor
iret
in
ins
imul
mov
ss
add
movs
sbb
adc
popa
repz
rcl
outs
sub
jge
(bad)
inc
adc
mov
push
push
inc
xor
fsubr
js
jns
inc
int
jecxz
popa
xchg
les
(bad)
inc
movs
std
and
int3
pop
sahf
push
xor
dec
cmp
mov
jg
jno
dec
cli
(bad)
das
test
(bad)
ror
out
das
xlat
mov
cmp
add
hlt
mov
mov
xchg
pop
es
lock
(bad)
leave
imul
pusha
jne
sub
call
pop
jmp
sahf
lods
and
pop
mov
xchg
mov
adc
inc
cmc
add
stc
loope
and
sbb
call
(bad)
and
inc
nop
jmp
cmc
pop
bound
jno
jl
icebp
gs
into
in
mov
pop
lea
inc
lock
(bad)
or
ror
cdq
jo
mov
clc
loopne
aaa
push
cld
aaa
dec
add
outs
mov
loope
jne
mov
arpl
xchg
fstp
inc
je
inc
aaa
adc
adc
cmp
mov
jnp
scas
daa
adc
dec
mov
out
hlt
sub
dec
sti
mov
inc
cmp
jbe
test
pop
in
mov
jns
pop
call
lock
push
scas
ret
iret
dec
mov
jge
xor
cmp
adc
or
cmp
mov
hlt
and
push
shl
das
(bad)
jno
mov
fdiv
jnp
pop
out
fmul
rcl
push
add
mov
or
mov
mov
(bad)
cmps
mov
retf
sbb
mov
fiadd
out
cdq
sub
fwait
shl
pop
add
sbb
push
dec
sbb
and
adc
add
mov
adc
mov
cmp
jno
sub
mov
lock
sub
jl
adc
add
pushf
in
sub
inc
inc
lock
call
enter
popa
cdq
iret
mov
(bad)
mov
cmp
sar
xchg
mov
adc
sbb
ss
int3
push
or
gs
call
adc
jbe
test
xchg
cmps
retf
jnp
stc
push
sub
loop
nop
fmul
stos
(bad)
sbb
pusha
je
js
out
int
cld
add
movs
cdq
sub
jae
cmp
sbb
das
mov
imul
test
mov
jmp
mov
jns
mov
push
sahf
scas
fsubr
or
pusha
xchg
fisub
fmul
es
cmps
cmps
xchg
imul
pop
pop
rol
out
cs
mov
pushf
(bad)
in
push
das
adc
rcl
movs
or
bound
pop
imul
and
in
iret
retf
sbb
dec
jle
mov
cwde
pop
data16
or
in
in
imul
popf
push
jae
sub
sub
aas
pop
jae
pushf
mov
ja
xor
pop
mov
push
loope
xor
movs
bound
cmp
adc
push
pusha
cmps
xor
ja
lods
xchg
jmp
iret
add
push
sti
inc
pop
aaa
loop
push
ja
jg
(bad)
sahf
fwait
in
adc
ret
and
movs
repnz
cdq
xchg
xor
aad
lahf
cmp
push
es
test
leave
sbb
dec
add
jmp
push
mov
repz
fs
jns
jecxz
aam
in
daa
shl
test
jmp
sub
fist
push
push
fimul
daa
jge
jmp
dec
jne
(bad)
scas
lahf
sbb
or
jbe
jl
sub
cmp
gs
jmp
das
retf
add
(bad)
push
ins
lahf
ins
ret
ss
sbb
lahf
inc
ret
int
cdq
mov
xor
mov
sub
jl
push
sbb
bnd
or
mov
push
out
sahf
repz
outs
mov
adc
cmp
fstp
xchg
pop
mov
out
add
cmp
(bad)
or
in
cli
push
in
loop
(bad)
shr
loop
(bad)
mov
mov
inc
fs
jecxz
xchg
xchg
es
jle
push
call
ds
outs
adc
and
sbb
jmp
push
pop
cwde
ins
sbb
xchg
push
in
push
jae
jnp
jo
sbb
loopne
test
and
jb
fs
inc
cmp
scas
xor
mov
push
or
push
ror
scas
xor
adc
push
fsub
lods
xchg
adc
fwait
cmp
test
cmps
mov
jge
mov
cmp
fisttp
xor
das
or
push
mov
lock
pushf
outs
push
mov
mov
jno
rcl
dec
es
or
jmp
jno
and
sub
fdivr
in
sbb
or
lahf
loopne
pmaxsw
jg
clc
addr16
jg
(bad)
cmovnp
gs
addr16
popa
and
je
lods
loop
fild
mov
sbb
xor
jg
les
ja
(bad)
jnp
mov
jmp
xor
jbe
cmp
or
sub
pusha
adc
mov
leave
(bad)
jge
(bad)
cmps
jl
sbb
retf
outs
mov
inc
add
mov
int
and
jb
dec
fwait
mov
push
ret
xor
add
dec
fwait
and
dec
inc
ss
push
sbb
test
cmps
pop
in
push
adc
inc
add
push
sub
and
mov
bound
xor
xor
stc
sbb
cmp
sahf
mov
jns
xor
outs
out
sar
test
pop
add
fwait
mov
pop
mov
icebp
xchg
mov
arpl
lods
and
xchg
stos
cmp
stos
lahf
xchg
dec
neg
inc
ja
pop
cwde
in
inc
xor
add
std
call
or
addr16
mov
mov
pop
imul
push
cmp
jg
inc
jo
out
retf
sbb
cmp
sbb
out
cli
jmp
xchg
adc
popa
xchg
in
in
ficomp
inc
cmp
in
out
fiadd
iret
fstp
jecxz
ds
and
add
adc
mov
leave
leave
sbb
add
push
jae
aad
jmp
(bad)
movs
push
jg
mov
sub
pop
imul
sysexit
mov
pop
add
cmp
mov
pusha
imul
mov
mov
dec
ss
mov
mov
pushf
adc
and
cs
frstor
data16
pusha
sbb
ja
aad
xor
hlt
inc
and
retf
dec
push
cmp
movs
cmps
push
lods
xor
push
cmp
gs
push
lea
sbb
add
rol
xor
jns
xor
lds
iret
push
mov
cmp
test
(bad)
jl
pop
call
gs
(bad)
lock
mov
in
mov
pop
xchg
mov
xor
pop
or
scas
and
mov
dec
mov
in
xchg
mov
dec
mov
loopne
mov
leave
ficom
xchg
in
mov
fwait
mov
mov
mov
or
cmps
es
inc
loop
aas
test
ret
pop
cmp
cmp
cdq
add
sub
iret
sbb
lds
or
add
mov
mov
and
cmp
pop
retf
jnp
fdivr
add
in
movs
jmp
push
repz
pop
jl
ror
xchg
into
xor
ja
lds
cmps
dec
stos
sub
xchg
xchg
add
(bad)
fiadd
scas
cmps
push
push
mov
aad
mov
stos
pop
mov
icebp
dec
xchg
sbb
int3
cdq
imul
(bad)
mov
dec
sbb
in
jno
lods
push
cs
bsr
mov
outs
mov
daa
pop
retf
aad
inc
out
or
pop
pop
xlat
(bad)
inc
push
cmp
and
dec
leave
pop
(bad)
jg
xor
xchg
sub
or
fwait
test
fwait
cmp
sub
pop
and
loop
xchg
xor
bound
mov
pop
pusha
jbe
popa
pop
cld
xor
cmps
addr16
mov
push
je
aaa
xlat
rol
fmulp
pop
mov
push
in
adc
jl
shl
dec
and
mov
stos
mov
sbb
popa
mov
sub
shl
xlat
adc
movs
mov
pop
fst
jno
inc
jo
adc
sub
mov
ds
(bad)
mov
dec
neg
ins
mov
jbe
repnz
ret
xlat
push
icebp
or
push
pop
(bad)
jmp
add
pop
xchg
push
xor
mov
xlat
mov
jecxz
(bad)
inc
sbb
sub
sar
jns
retf
int3
mov
stos
mov
xchg
ins
lods
cmp
pop
icebp
outs
les
loopne
or
push
movs
icebp
push
movs
inc
dec
loope
aas
sti
mov
push
jle
test
jg
cmp
bound
lds
adc
sub
xor
dec
sub
vpcmpestri
mov
cmp
pop
int3
jmp
xchg
mov
mov
shr
inc
in
stos
add
and
jae
push
out
push
sbb
outs
repz
adc
xchg
jecxz
aad
sbb
and
iret
jp
fs
cmc
mov
sub
int3
jne
int
mov
repz
add
sub
fwait
jl
jmp
lods
pop
adc
push
outs
add
addr16
mov
mov
jp
xor
dec
or
mov
aam
cmp
stos
retf
data16
cmp
lahf
xchg
sti
xchg
fcomp
jg
in
dec
lds
jnp
sbb
lods
sub
test
and
adc
ss
(bad)
pop
outs
mul
jmp
or
aaa
pop
inc
scas
cmps
sub
inc
mov
mov
mul
push
sahf
call
(bad)
mul
pop
mov
mov
retf
hlt
sahf
mov
ss
or
adc
je
inc
push
call
xor
sbb
lods
loopne
mov
mov
sbb
cli
mov
inc
jns
push
jg
add
(bad)
arpl
popf
push
sbb
push
mov
xor
mov
dec
das
(bad)
call
mov
cmp
and
mov
pop
fs
daa
push
pop
jno
outs
rcl
outs
mov
push
push
xchg
jle
repz
outs
push
and
repz
jbe
adc
stc
lods
adc
xor
xchg
cmp
pop
inc
push
pop
aas
dec
mov
dec
mov
popa
cmp
popf
out
shl
or
pop
les
cmp
pushf
iret
cdq
rcr
inc
sbb
(bad)
or
mov
cmps
mov
test
pushf
mov
push
dec
pop
jns
(bad)
call
sub
outs
scas
dec
(bad)
in
aas
jne
fldln2
fsubr
cld
mov
sti
adc
push
mov
call
ja
ss
(bad)
xor
jo
(bad)
dec
fwait
pop
jecxz
aaa
sti
jb
lahf
loop
sbb
icebp
push
sysenter
mov
(bad)
fidivr
sti
push
je
ror
ret
dec
jae
mov
cmp
xchg
jmp
cli
stos
push
mov
pusha
push
rcl
imul
lods
add
xor
aad
push
outs
popf
clc
or
add
ds
pop
mov
js
jbe
out
pushf
and
sub
out
sahf
pop
rcl
imul
test
push
ins
jp
push
lods
mov
mov
pop
ret
in
cwde
(bad)
xlat
sub
fld
sbb
stos
dec
mov
shl
clc
cwde
lds
jnp
aad
mov
and
lock
pop
(bad)
cdq
stc
jl
mov
push
jl
cdq
cmc
jbe
cmp
add
push
ror
dec
pop
cmps
add
(bad)
fsubr
add
add
jp
mov
fsubrp
and
aas
test
cs
push
mov
pop
sbb
cmps
mov
ss
or
push
mov
retf
dec
add
push
cwde
cmp
pop
test
jmp
sub
jge
bnd
sahf
sub
mov
mov
pop
in
jle
neg
sbb
sbb
lea
inc
sub
jmp
mov
jne
dec
(bad)
jo
icebp
inc
ins
shr
(bad)
repz
(bad)
sar
xor
aaa
shr
jecxz
(bad)
in
sahf
pop
sbb
jmp
jge
xchg
push
hlt
cmp
shl
push
adc
retf
or
out
adc
push
and
xor
add
cwde
sbb
fnstenv
test
popf
push
pop
fadd
inc
fistp
add
xacquire
jmp
addr16
call
adc
ins
add
inc
sub
lods
mov
je
adc
fadd
inc
push
aas
bnd
repnz
gs
aaa
ins
outs
and
add
jns
and
aaa
cld
push
daa
loope
test
sub
aad
outs
pop
lods
mov
bound
fs
inc
retf
cmp
pop
aaa
out
and
je
scas
mov
add
push
or
sti
test
mov
ret
shr
or
xor
inc
ror
cmps
pop
mov
mov
lods
mov
pop
pusha
pusha
stos
mov
cld
mov
sbb
xor
stos
sbb
push
(bad)
int3
lock
fst
jge
dec
pop
ins
loop
sub
arpl
outs
imul
mov
or
or
xchg
in
adc
pop
(bad)
dec
add
cmp
jbe
lahf
bnd
in
sahf
sahf
scas
pop
stc
ss
out
in
icebp
aaa
data16
xor
or
or
sbb
iret
cmp
out
ss
adc
jo
lods
scas
cld
dec
dec
dec
je
cmp
aad
(bad)
jmp
add
mov
adc
int3
push
call
sbb
cs
fidiv
cmp
push
sub
cmp
retf
dec
jg
mov
cs
mov
mov
push
xchg
ds
inc
out
sub
movs
push
out
cmp
push
ret
rol
into
pusha
push
movs
jne
jle
icebp
into
mov
and
push
aaa
retf
das
sub
enter
fs
cmp
test
cmc
fidivr
inc
stos
(bad)
jnp
push
sub
clc
mov
xor
lods
movhps
les
dec
jae
into
(bad)
je
dec
aas
dec
icebp
popf
lock
mov
push
pop
shl
lahf
push
push
enter
lahf
sub
cmp
push
fimul
adc
rcl
rcr
jns
and
mov
ins
aam
popf
push
fmul
call
movntq
out
cmps
xchg
pop
fadd
arpl
aas
stc
push
out
mov
mul
xor
fwait
mov
inc
sbb
cmp
les
sub
call
fsubr
xchg
mov
pop
mov
jns
je
out
cld
call
bnd
outs
retf
mov
push
(bad)
int3
not
add
les
(bad)
lods
test
or
cmp
cdq
jo
dec
or
pop
outs
add
rcl
jle
xor
(bad)
xchg
into
mov
sbb
sbb
push
jle
push
popf
push
test
imul
loopne
sahf
and
cmps
add
jnp
mov
dec
jl
push
and
adc
fnstsw
fnstenv
push
loop
popa
ins
sub
push
lds
sbb
aad
outs
pop
lods
mov
pop
sbb
mov
jle
push
sbb
push
adc
mov
icebp
adc
add
pop
jno
xchg
sti
dec
cdq
jo
dec
mov
mov
lahf
fwait
push
cmps
fsub
mov
enter
rol
shl
mov
dec
dec
rcr
xor
jmp
sbb
div
(bad)
dec
(bad)
ja
gs
pusha
jge
outs
repnz
daa
mov
sti
js
loope
jns
ss
pop
aam
mov
mov
inc
movs
loopne
or
adc
scas
out
dec
inc
(bad)
dec
cmps
jmp
outs
push
pushf
xchg
mul
inc
dec
mov
or
inc
dec
outs
xlat
xor
xchg
sar
pop
hlt
sbb
shl
or
xor
ror
sti
push
rcl
push
or
jnp
aad
jbe
lea
jmp
mov
mov
cdq
sub
mov
stc
dec
or
retf
xor
scas
fs
cdq
pushf
sub
ror
(bad)
stos
push
(bad)
sub
int3
sub
out
pop
jbe
dec
add
ret
shl
sub
and
add
mov
jns
je
(bad)
and
and
xchg
pop
leave
dec
int3
not
ins
scas
dec
not
jbe
mov
mov
cmp
inc
mov
jno
arpl
cs
leave
(bad)
xlat
mov
mov
aad
sbb
enter
jl
cwde
leave
subps
jg
out
mov
xchg
out
mov
rcr
jg
repnz
inc
mov
jno
(bad)
and
ja
int
repz
xchg
push
mov
jbe
imul
outs
pusha
push
mov
mov
icebp
pushf
sbb
dec
lods
xor
jmp
mov
pop
and
mov
dec
das
lock
fsubr
in
outs
sar
and
push
xchg
sub
ret
or
or
imul
into
outs
test
sbb
rol
mov
mov
jecxz
inc
stos
push
jmp
xchg
cld
mov
jp
dec
sub
mov
jbe
sub
js
mov
pop
dec
int3
adc
push
push
mov
jo
jmp
mov
mov
test
sub
jmp
vphaddubq
add
sub
jb
jbe
inc
mov
mov
sbb
cld
nop
popa
pop
mov
or
addr16
rcl
or
scas
into
outs
push
in
lock
int
xor
mov
mov
mov
xchg
mov
rcr
not
leave
xor
cmp
aad
jo
mov
out
mov
(bad)
addr16
test
dec
cmp
dec
mov
inc
les
jne
das
or
mov
ss
(bad)
outs
push
mov
enter
and
pop
out
pop
test
out
adc
fmul
push
fsubr
pushf
sub
xor
sbb
in
dec
jg
sub
cwde
js
lods
pop
mov
sar
fbstp
jbe
sti
adc
mov
jo
jmp
xlat
(bad)
icebp
les
add
jne
xchg
add
jno
rol
mov
mov
adc
and
mov
pushf
lods
out
and
stos
jns
push
add
retf
xchg
pop
aad
rcl
sbb
inc
push
retf
xchg
outs
cdq
lds
adc
mov
cmp
in
mov
test
mov
dec
imul
dec
fiadd
lahf
mov
lods
in
or
popf
and
or
push
jmp
mov
or
fimul
pop
inc
jae
adc
call
jl
(bad)
dec
xchg
fidivr
fisub
pop
inc
hlt
sub
push
ret
sbb
mov
(bad)
xor
cwde
jg
rcr
test
jo
inc
sub
dec
out
sbb
mov
xor
mov
jecxz
adc
in
fisttp
fnstsw
loop
mov
cmps
mov
arpl
xor
adc
inc
das
sub
arpl
xchg
shl
adc
inc
xlat
loopne
or
out
pmulhw
cmp
add
fcmovb
out
les
jecxz
xor
inc
adc
sbb
jns
sub
jae
jg
cmps
mov
adc
icebp
pop
xchg
inc
test
sahf
adc
mov
xchg
mov
imul
aad
and
das
movs
xor
retf
inc
outs
xchg
mov
xor
pop
xchg
push
and
in
aas
mov
fisubr
and
inc
outs
or
stos
jmp
cli
icebp
fsubr
xchg
cld
or
jno
sar
knotw
cmp
inc
lds
mov
jnp
cmp
imul
adc
int3
fdiv
popa
gs
mov
add
jns
movs
cmp
outs
xor
fsubr
aas
lahf
cld
movs
lea
cmp
jmp
icebp
jbe
jae
sbb
or
test
out
ins
sbb
xor
xchg
outs
sbb
enter
jmp
sub
shl
ret
in
ins
xor
fucomp
in
out
xchg
fld
fisub
jb
cmps
sar
jnp
fistp
loop
pusha
in
cmp
and
dec
adc
out
sub
mov
cmp
and
out
xor
dec
dec
mov
es
jecxz
add
(bad)
adc
je
sbb
icebp
data16
add
lock
repnz
cmp
stc
jp
push
push
sbb
mov
call
pop
in
ins
push
xchg
addr16
or
mov
add
jmp
ret
in
pusha
mov
ss
popf
movs
dec
push
mov
ss
fist
out
pop
jmp
cvtps2pd
iret
sbb
jno
or
sti
add
or
iret
test
sbb
lahf
aaa
in
std
dec
dec
cld
popa
out
mov
je
or
shr
xchg
pop
scas
mov
cmp
xchg
stos
fsin
mov
xchg
fiadd
xor
mov
dec
add
xchg
or
xor
jns
(bad)
sbb
les
(bad)
jg
dec
mov
pushf
leave
mov
fld
mov
in
push
(bad)
pop
mov
ret
out
out
mov
int
push
ja
inc
movs
mov
dec
inc
cs
mov
jne
sbb
push
hlt
movs
pop
xchg
jp
fadd
bound
call
adc
clc
es
idiv
dec
cmp
push
mov
sbb
outs
pop
push
out
loopne
out
adc
lock
cmp
in
xor
add
jp
dec
iret
or
pop
jbe
mov
outs
dec
dec
movs
push
push
loope
cmp
stc
and
shr
mov
in
push
adc
and
inc
stos
aad
xchg
jns
in
push
jecxz
mov
mov
aam
fdiv
shl
push
or
in
test
add
adc
pop
mov
out
fwait
call
jmp
sar
fst
fdivr
loop
sub
gs
add
mov
sahf
and
lods
sbb
pop
xchg
stos
int
mov
mov
out
mov
jg
div
and
mov
add
rol
loope
cmp
pop
dec
xor
pop
xchg
fsub
mov
mov
jmp
out
pop
retf
cmps
jnp
and
jnp
lahf
or
test
fcomi
jmp
out
jmp
ins
test
ret
push
or
lods
movs
xor
test
push
and
nop
mov
and
mov
xchg
leave
into
lds
div
jns
pushf
rol
sar
mov
xor
inc
inc
pop
icebp
pop
sbb
inc
mov
js
outs
xlat
cmp
jno
sti
popf
sub
dec
out
outs
mov
xchg
mov
stos
ss
push
dec
xor
adc
loopne
or
pop
in
pop
(bad)
int
(bad)
xchg
cwde
movs
fidivr
gs
cmp
loopne
sub
ja
(bad)
sub
mov
mov
cli
in
inc
stc
push
test
popf
dec
xor
mov
dec
xor
dec
sub
mov
imul
mov
lods
mov
cmc
sub
dec
ins
scas
sti
and
pop
mov
rcl
repz
lds
push
or
inc
add
dec
pop
xor
pop
icebp
and
imul
jnp
mov
ss
popf
jbe
or
mov
push
inc
arpl
xor
pop
mov
dec
sti
mov
imul
icebp
xchg
inc
mov
xchg
jl
aaa
daa
jnp
dec
outs
aas
xchg
repnz
lahf
fdivr
inc
mov
popa
neg
(bad)
or
mov
scas
pop
leave
or
aam
or
add
inc
cmp
aam
xchg
stos
xor
stos
(bad)
cmp
lods
mov
adc
pop
ret
dec
mov
cwde
imul
out
cmp
xchg
in
ret
cwde
add
sahf
mov
mov
sbb
jo
mov
aaa
dec
outs
mov
add
add
fild
dec
popf
push
call
sar
xor
dec
pop
test
adc
iret
mov
push
cmp
iret
jns
push
xor
stos
clc
in
push
aad
popf
jl
leave
dec
cs
stc
jl
(bad)
gs
sub
jno
and
or
inc
xchg
xchg
jns
mov
inc
sar
jb
xor
scas
ret
jge
ror
(bad)
mov
jmp
adc
mov
cmp
xchg
adc
inc
jae
fisttp
sub
(bad)
jno
pop
movs
jg
sub
and
xchg
retf
std
stos
sti
add
scas
dec
xchg
pop
cmp
mov
int
pusha
pop
dec
test
xor
sahf
or
rcpps
mov
stc
mov
out
repz
jnp
cs
out
psrad
pop
push
mov
xchg
call
cmp
xchg
inc
leave
sbb
repz
dec
mov
repnz
in
clc
xchg
sbb
movs
inc
movaps
push
int
add
cwde
dec
push
cmp
dec
mov
lds
sbb
aas
les
out
sbb
setle
lock
rol
sub
push
inc
xchg
cmps
xchg
retf
adc
pop
jae
dec
cmp
add
imul
pop
pusha
push
call
jecxz
jmp
cwde
loope
add
fs
int3
dec
enter
inc
test
aad
arpl
(bad)
xchg
pop
mov
push
outs
das
ins
jne
mov
cs
xor
add
xchg
int
sub
xor
adc
jb
popa
cbw
and
xor
imul
sti
int
out
jnp
or
dec
retf
rcr
out
xor
test
dec
push
or
add
test
mov
mov
dec
jl
inc
adc
xchg
add
and
xchg
mov
aam
ja
push
out
stc
sub
pop
and
push
xor
xor
pop
arpl
call
mov
lock
jle
cmps
shl
inc
mov
dec
(bad)
cmp
out
fwait
mov
dec
ret
cwde
xchg
mov
push
adc
jecxz
mov
push
ficomp
xchg
fs
(bad)
mov
jg
cmp
sub
push
cmp
(bad)
push
enter
push
ror
jmp
adc
fist
mov
es
ins
hlt
inc
dec
cmp
ja
jge
ja
mov
and
sub
sbb
test
(bad)
loop
jl
cli
pusha
std
xor
sub
inc
sti
rcl
jp
push
lea
je
vcvtsd2si
ret
xor
fdiv
pop
sub
clc
sbb
aad
fwait
push
sbb
push
mov
adc
jnp
sbb
inc
fadd
xor
push
leave
jmp
cs
movs
imul
sub
xchg
lahf
mov
cmps
rol
add
cdq
xchg
dec
fwait
mov
loope
sub
retf
test
fcos
add
js
dec
xchg
es
jne
rcl
cmp
in
imul
cmp
ins
pop
dec
or
lods
cmc
mov
js
cdq
xlat
and
adc
(bad)
push
dec
aad
loop
cwde
inc
out
in
lahf
jmp
les
es
in
rol
cli
mov
outs
stc
dec
sub
dec
add
xor
(bad)
or
loopne
add
cmp
push
(bad)
pop
jp
imul
fsubr
jle
str
loope
scas
loope
out
mov
lods
in
xchg
vpandn
dec
lock
cli
stc
sbb
mov
mov
dec
push
sbb
jmp
mov
aaa
xor
cmp
scas
lahf
and
mov
mov
rcl
xor
jmp
sbb
jno
jp
cdq
mov
sahf
mov
aas
sub
jnp
pop
cmp
mov
arpl
dec
sets
cmp
cdq
shr
loopne
xor
sbb
inc
cmp
cmp
mov
sub
jmpw
scas
xor
dec
jno
add
add
(bad)
mov
repz
dec
cmp
and
jl
inc
std
cmp
inc
(bad)
pop
jl
leave
arpl
mov
iret
mov
(bad)
jl
push
jbe
popf
fisttp
rcr
sub
gs
and
pop
cmc
js
out
out
loop
inc
movs
repnz
or
shl
push
adc
ss
adc
and
push
movs
(bad)
fdivr
push
stos
shl
pop
mov
icebp
cwde
jbe
bound
push
add
sahf
push
mov
dec
gs
cmps
das
movs
call
mov
std
push
fs
push
es
mov
xchg
sub
jg
leave
pop
pop
pop
dec
mov
cmp
(bad)
js
push
inc
or
add
add
(bad)
cmp
not
dec
cmp
jo
push
in
imul
sub
cmp
xor
mov
(bad)
aas
push
mov
es
xor
dec
or
stos
mov
repz
ret
jecxz
push
add
fcomp
test
(bad)
sti
xor
cmps
lock
and
cmp
lock
(bad)
and
adc
dec
mov
pushaw
push
inc
sub
push
jo
mov
shl
in
xor
dec
aad
vmread
jle
out
sti
pop
cmc
xor
fmul
xor
jle
pop
out
add
sbb
jge
mov
mov
xchg
arpl
ja
addr16
cmc
inc
sar
(bad)
stos
push
mov
(bad)
or
ftst
and
mov
and
sbb
cli
sbb
imul
ds
xchg
fwait
setae
in
or
mov
xor
int
adc
push
fwait
mov
xchg
shl
push
mov
mov
mov
lea
shl
sub
xor
fdiv
stos
mov
xor
or
jge
pushf
or
jnp
sbb
push
pop
clc
jmp
arpl
push
xor
sbb
das
and
push
ret
cdq
xor
inc
loop
xchg
pusha
fsub
or
push
out
popf
xchg
jae
and
repz
cmc
rcr
mov
ret
in
xor
jmp
daa
outs
(bad)
mov
push
test
repnz
loop
jno
cli
jge
mov
add
adc
movs
mov
mov
xor
pop
(bad)
clc
js
in
sbb
lods
icebp
test
jnp
cmp
or
(bad)
cs
(bad)
fsubp
in
and
push
xor
and
mov
mov
push
jno
and
inc
pop
mov
push
adc
std
mov
add
jns
xor
mov
dec
add
bound
(bad)
jecxz
jmp
jg
mov
in
movs
jb
push
mul
xor
pop
mov
fisttp
(bad)
add
ja
mov
test
jmp
inc
pop
test
lahf
xlat
scas
fs
repz
mov
inc
(bad)
jne
adc
pushf
retf
fcomp
mov
sar
xchg
push
pop
shr
(bad)
data16
sub
stc
arpl
ret
movs
popf
jecxz
sahf
adc
in
sti
jae
push
push
les
imul
pop
add
cmp
lods
add
push
inc
jno
mov
dec
not
pop
sbb
xor
pop
xor
out
sub
(bad)
cmp
loop
push
sbb
jnp
paddsw
mov
inc
pushf
jmp
xchg
(bad)
inc
push
jmp
adc
xchg
int
outs
jno
movs
ret
cmp
sub
enter
clc
push
push
sub
sub
movs
movs
push
in
jno
ret
mov
sub
and
mov
jmp
xor
jno
dec
pop
push
retf
bswap
sub
mov
add
js
xchg
lods
in
dec
fild
mov
cld
xchg
stos
inc
aam
xor
xchg
jge
pusha
and
inc
dec
xchg
or
not
call
jg
pop
movs
sub
std
das
adc
or
(bad)
arpl
push
lea
fwait
dec
mov
fdiv
outs
imul
int
inc
push
scas
mov
out
ficomp
nop
loop
lock
mov
popa
inc
daa
fisttp
loope
popa
xchg
out
stc
jmp
jb
hlt
das
adc
inc
jecxz
dec
inc
arpl
adc
ins
mov
sti
add
mov
outs
xor
mov
push
add
repz
daa
pop
xor
mov
add
scas
cmp
hlt
cli
(bad)
hlt
int
inc
scas
retf
sub
xchg
mov
xor
jns
sar
and
fisttp
rol
and
leave
shr
cmps
nop
add
xor
in
int3
mov
out
and
imul
loop
jns
and
push
jne
iret
imul
das
loop
dec
mov
ins
ficomp
dec
jbe
add
add
in
cmp
mov
call
cmp
test
popa
cwde
iret
or
jnp
sahf
xchg
jae
pop
(bad)
jne
dec
(bad)
std
cli
(bad)
mov
test
dec
aaa
dec
pop
add
mov
inc
sub
pop
sbb
(bad)
std
cmc
(bad)
je
sbb
data16
xor
inc
push
xchg
stc
dec
(bad)
scas
js
and
in
push
pop
lahf
rol
push
mov
jb
sub
pop
pop
lods
aaa
test
sub
sbb
xor
jecxz
loope
pop
xchg
pop
iret
div
cmp
rol
xor
(bad)
xchg
fist
inc
lock
test
dec
lock
aad
mov
imul
popa
mov
adc
in
loopne
sbb
stos
jle
mov
popa
leave
iret
push
and
jo
imul
mov
jmp
jo
iret
sbb
in
sbb
sbb
jmp
test
(bad)
je
pop
push
and
push
rcl
sub
mov
pop
cwde
dec
ret
icebp
icebp
and
out
adc
shl
pop
dec
cmp
pop
jns
rol
les
xchg
fild
hlt
out
mov
and
xchg
jnp
clc
mov
add
in
iret
imul
and
or
mul
or
ds
loope
adc
xor
fmul
call
ror
test
outs
loope
push
and
fnstenv
data16
xor
sar
mov
and
mov
out
dec
or
cmc
sub
jg
jle
mov
leave
dec
mov
in
mov
outs
or
jne
adc
aas
add
dec
arpl
or
xor
hlt
and
ret
cmps
jp
aas
mov
xor
cmps
popf
inc
mov
scas
js
in
and
push
leave
xchg
push
aas
sbb
jnp
push
les
and
js
add
pop
aam
sahf
ret
in
cld
inc
stc
push
sub
push
dec
int
cmp
cwde
(bad)
cmc
cmp
cld
mov
and
xchg
pop
das
adc
push
test
fild
(bad)
adc
rcl
fisttp
out
sub
pop
mov
cmp
pop
(bad)
addr16
mov
hlt
js
retf
fwait
std
push
rcr
fld
or
pop
push
cmp
loope
aaa
(bad)
xor
and
mov
cwde
enter
call
xor
sbb
xchg
aaa
stos
inc
cbw
mov
and
cld
and
fimul
int3
je
in
and
jbe
test
leave
in
jge
jmp
jne
fwait
std
retf
outs
ja
sub
(bad)
jge
xchg
retfw
jmp
jge
repz
aam
mov
xor
addr16
inc
scas
mov
mov
jnp
pop
or
mov
jp
das
cmp
(bad)
cmps
test
lock
and
call
xor
lds
std
out
pop
pop
cmp
add
fcomip
fdivr
push
mov
jbe
(bad)
push
arpl
(bad)
fnsave
fcomp
mov
mov
aaa
or
scas
adc
shrd
pop
sub
mov
shl
mov
mov
shl
jae
sub
das
stos
neg
mov
sbb
sub
mov
add
ds
add
cwde
cmps
or
push
adc
ins
mov
movs
push
dec
xor
xchg
rcl
fcmovb
je
mov
or
and
scas
mov
pusha
in
sti
mov
fwait
sti
inc
mov
ror
int3
fbld
sub
dec
jle
fwait
push
stos
cli
cmps
push
mov
js
pop
(bad)
pop
pop
cli
nop
aaa
dec
mov
out
out
into
mov
scas
pop
xor
fistp
jge
(bad)
xor
add
inc
adc
mov
(bad)
dec
fidivr
dec
jbe
addr16
daa
fdivr
pop
push
test
xchg
pushf
mov
dec
ins
or
xor
fstp
js
and
cmc
loop
dec
ss
lods
and
and
adc
mov
and
adc
imul
xor
xor
rcl
cmp
jmp
ja
out
sahf
jnp
or
sar
in
stos
jp
retf
xor
je
mov
retf
loopne
push
adc
jo
int3
push
or
cli
nop
mov
pop
arpl
mov
(bad)
fdiv
addr16
dec
stos
push
das
test
sub
sub
mov
into
cmc
fisttp
cli
inc
dec
daa
dec
imul
mov
fwait
jp
and
std
sbb
rol
pop
pop
movs
aad
mov
inc
inc
data16
push
pop
push
mov
jns
jmp
imul
xor
sbb
xchg
hlt
outs
dec
dec
daa
aam
add
in
cvtpi2ps
sub
cmp
sub
enter
shl
xor
mov
out
imul
sbb
cmps
sbb
(bad)
in
cmp
jp
and
push
mov
stos
aam
outs
and
sbb
or
stos
cmp
in
sub
dec
cmc
and
cmp
jg
std
pushf
call
cmp
sbb
mov
hlt
pop
jae
cmp
out
adc
sub
movs
jae
call
shl
and
jne
std
mov
retf
pushf
sbb
adc
repnz
out
jns
pop
popf
and
mov
jg
repnz
imul
push
inc
bound
in
jp
ds
add
ja
adc
jle
xor
imul
imul
mov
adc
lds
pop
dec
sahf
sub
push
sbb
ja
sbb
shl
inc
mov
(bad)
imul
das
xor
jo
dec
lods
rcl
cdq
jmp
repz
dec
in
xor
es
retf
ds
sub
inc
mov
pop
sbb
sub
nop
pop
push
test
sbb
fxch
and
rcl
mov
movs
cdq
lahf
add
add
aaa
sbb
data16
cmps
repnz
xchg
cmps
mov
in
xchg
mov
jge
pop
adc
fs
pushf
jle
in
inc
ficomp
add
sbb
jns
fidiv
cli
sub
ins
jno
adc
xchg
sti
mov
popf
stos
mov
jno
mov
pop
pop
mov
retf
je
jno
lock
mov
call
lock
ret
xchg
popa
cmp
sbb
jle
inc
repz
fdiv
push
adc
movs
jb
mov
jmp
dec
cli
jno
sbb
mov
xchg
cwde
bound
into
xor
outs
push
cli
sbb
cli
and
mov
les
pop
clc
rcr
cmp
loopne
add
fs
aad
xor
push
cmc
add
icebp
sub
add
adc
ins
arpl
sub
sub
aad
pop
pop
push
rol
sbb
out
and
cmp
ins
cmps
jbe
cli
int
outs
stos
jle
repz
std
mov
mov
adc
clc
cmps
lds
imul
into
(bad)
loop
jl
daa
into
enter
push
and
or
add
(bad)
mov
and
js
into
(bad)
adc
xor
xor
mov
adc
inc
cmp
sub
cli
(bad)
pop
loope
lock
call
mov
xor
test
xchg
fcmovnu
test
dec
imul
or
in
and
push
cld
push
dec
jmp
mov
leave
not
push
test
lods
jmp
adc
sbb
inc
aam
ror
dec
jmp
mov
fistp
jg
sub
sub
stos
inc
pop
call
bnd
mov
mov
push
or
daa
jmp
inc
push
jno
fist
adc
data16
pop
mov
arpl
jo
cmp
loope
pop
push
out
shr
jmp
test
inc
lahf
movs
cli
mov
sar
pop
cmps
das
dec
std
or
fistp
call
loopne
xor
xor
jno
icebp
xchg
test
ret
mov
jp
retf
inc
push
dec
popa
out
or
ret
dec
and
jns
or
lock
sub
call
jge
pushf
jae
or
aaa
jle
mov
(bad)
aas
pop
in
stos
scas
xor
bound
inc
loope
jae
neg
push
cmp
mov
sahf
jl
jno
cmps
(bad)
xor
jge
shr
or
mov
dec
addr16
jge
les
sub
aad
pop
sub
cmps
inc
push
mov
inc
cmps
inc
jmp
aad
add
bound
out
adc
pushf
in
push
shl
dec
push
call
dec
outs
repnz
dec
into
into
jb
popf
sub
or
sahf
jecxz
mov
xchg
lds
push
dec
leave
jno
or
or
mov
adc
je
mov
addr16
retf
mov
cld
mov
or
xor
jmp
mov
jmp
push
fisubr
xor
repz
lock
leave
daa
lds
mov
pop
imul
pusha
(bad)
outs
and
push
out
movs
jp
jb
add
lods
xor
pop
fadd
sbb
(bad)
jmp
sbb
jmp
retf
inc
rcl
pushf
stc
mov
lds
pop
cmp
mov
mov
jo
ss
and
outs
sbb
test
pop
or
out
sub
ficomp
ret
pop
xchg
jmp
(bad)
mov
xor
mov
jae
mov
mov
addr16
aas
sbb
call
retf
dec
inc
cmps
jge
add
jo
dec
pop
cmp
in
div
xor
xchg
or
pop
mov
adc
xor
inc
paddd
outs
add
in
xor
mov
mov
std
lods
cli
scas
dec
cmp
in
jg
hlt
fsub
mov
push
call
add
in
xor
scas
int
xor
sub
test
adc
leave
mov
jge
and
test
jge
in
pop
aad
push
std
xchg
out
pop
sub
int3
lds
add
pop
xchg
hlt
sub
cmp
pop
ret
jno
jmp
or
jp
fnstcw
pop
leave
xor
pop
push
mov
call
aaa
xchg
mov
out
xor
dec
pop
test
push
push
out
scas
xchg
jmp
jo
nop
jae
out
push
mov
xchg
test
push
outs
pop
push
pop
div
and
and
bound
fstp
jae
inc
mov
mov
test
shl
popa
jge
sub
pop
aas
lahf
in
iret
int
stos
jle
pop
stos
and
jno
mov
pop
sbb
mov
jno
nop
sbb
lahf
and
or
jno
jmp
and
call
jns
retf
pop
das
jp
fadd
mov
retf
xchg
pop
pop
fnstenv
xchg
or
data16
enter
mov
adc
mov
dec
pop
mov
aam
scas
aam
div
repnz
add
cwde
stos
arpl
mov
xlat
jmp
pop
sbb
mov
repz
das
stc
shl
xor
gs
add
adc
out
gs
jae
sbb
fldenv
cmp
push
aaa
jbe
inc
fs
cmp
jecxz
ds
es
div
loopne
pushf
sbb
and
ds
fld
inc
add
hlt
scas
call
jl
(bad)
out
jmp
rol
ret
push
xor
push
call
leave
sbb
popa
dec
mov
inc
pop
xchg
cmp
dec
ret
cdq
test
and
std
outs
das
xor
clc
leave
popa
nop
push
pop
icebp
and
nop
jecxz
xchg
loope
pop
and
inc
mov
in
xchg
pop
adc
in
leave
push
sub
jg
call
push
push
sti
sub
jmp
push
cwde
push
jmp
lea
xor
stos
sahf
jp
push
jb
lock
gs
jbe
jl
icebp
stos
or
fwait
sbb
(bad)
mov
push
mov
repnz
adc
dec
xor
les
xchg
pop
dec
and
add
dec
sbb
shl
retf
adc
icebp
scas
out
push
idiv
in
xor
adc
mov
lods
jl
push
inc
xchg
into
retf
pop
mov
ret
xlat
jo
inc
sub
xchg
loopne
mov
inc
xor
stos
lods
or
call
xor
pop
mov
adc
sbb
mov
push
push
xlat
mov
lock
sbb
imul
xchg
repnz
inc
sahf
cmp
or
cmps
jnp
gs
push
ss
lahf
xor
jmp
cmp
adc
(bad)
mul
cmp
push
adc
in
(bad)
xlat
mov
sub
in
mov
div
aad
mov
stos
stc
sub
push
jmp
and
sub
xor
jo
pop
mov
dec
aaa
pop
cli
mov
gs
test
fisubr
ss
mov
(bad)
popf
lds
push
xor
arpl
dec
jle
mov
sub
arpl
pusha
mov
xchg
jecxz
push
(bad)
pop
push
hlt
pop
loope
movs
movs
test
shl
int
push
jnp
stc
pop
stos
scas
push
std
xchg
jmp
mov
mov
fs
jno
(bad)
xlat
xor
push
and
push
rol
ds
scas
out
retf
jno
pop
sub
mov
dec
aaa
mov
push
test
retf
andps
xchg
push
mov
add
loopne
cmp
sbb
xlat
and
dec
push
fs
cmc
lods
aad
mov
test
dec
pop
mov
xor
cmps
enter
xor
test
or
jbe
xlat
mov
loope
ins
jmp
daa
test
or
xchg
pop
jmp
and
and
cwde
mov
inc
aad
stos
fmulp
hlt
sub
mov
pop
cli
mov
lahf
push
mov
loope
sub
mov
dec
add
mov
and
adc
xchg
js
sbb
jle
pop
dec
div
outs
dec
jmp
xor
out
jbe
xor
and
nop
mov
pop
jmp
adc
test
das
and
into
inc
int
jge
xchg
enter
and
movs
sbb
stc
add
aas
outs
mul
(bad)
sub
add
adc
mov
xchg
pop
push
out
fiadd
inc
sti
into
retf
fcomp
cmp
and
push
xchg
jg
scas
mov
dec
dec
je
mov
mov
adc
popa
mov
inc
push
push
push
inc
adc
cwde
adc
xlat
inc
je
sbb
das
ror
xor
test
pop
inc
(bad)
mov
push
ins
sysexit
dec
inc
scas
xchg
mov
stc
pextrw
push
and
push
jnp
iret
pop
push
addr16
mov
pop
shr
mov
sub
xor
inc
mov
(bad)
mov
mov
cdq
add
icebp
sbb
in
push
scas
or
stc
inc
repnz
mov
(bad)
mov
ds
retf
sbb
and
int
iret
dec
mov
add
loope
cs
xchg
ja
jbe
jecxz
inc
dec
dec
stos
ficomp
mov
mov
add
sbb
test
fwait
ret
arpl
pop
test
and
mov
push
lea
sbb
stos
push
cmp
pop
push
and
jmp
jae
pop
add
xor
cmp
dec
pusha
out
mul
cmps
repz
aad
or
add
fistp
(bad)
cmp
lea
mov
mov
mov
xor
cmp
jg
push
push
call
clc
scas
enter
push
hlt
mov
jmp
jnp
cmps
repz
mov
inc
scas
shl
sbb
dec
mov
xchg
jmp
mov
(bad)
ds
call
cdq
repnz
arpl
mov
xor
xchg
popf
cmps
cli
clc
inc
movs
or
les
adc
ds
into
sar
jmp
sub
mov
sub
jbe
ins
mov
les
mov
aas
xor
test
outs
imul
sub
mov
ror
nop
outs
les
fcomp
scas
sub
push
jns
retf
jmp
xlat
je
push
fisttp
test
movs
xchg
pop
mov
add
fwait
nop
gs
pop
xchg
and
(bad)
test
cmp
aam
mov
mov
mov
popa
mov
xchg
sub
lock
mov
pop
inc
call
and
jno
jne
cld
cdq
dec
ss
lods
mov
xchg
shr
jo
pop
scas
mov
cwde
xor
and
cmp
cmps
loope
cld
pop
daa
mov
jmp
mov
mul
jb
mov
out
cmc
scas
lods
xchg
xor
ror
repnz
push
dec
xor
ja
and
ss
mov
sti
ds
popa
jg
xchg
bound
dec
mov
sub
push
sbb
and
and
pop
stos
scas
pop
inc
mov
pop
sbb
lods
sbb
or
or
aaa
mov
mov
out
js
inc
(bad)
pop
jb
inc
cs
outs
lahf
jecxz
jno
cwde
or
loop
(bad)
cmp
bound
sahf
push
addr16
push
gs
cmps
mov
push
loope
mov
and
into
or
retf
sub
pop
jmp
mov
ficomp
dec
mov
mov
jno
mov
mov
call
cld
add
sub
pop
sbb
adc
hlt
leave
movs
shl
jo
es
pop
test
fidivr
sbb
jp
push
or
sub
push
out
out
fnsave
sub
das
jb
out
pop
xor
js
ins
outs
repnz
adc
ror
xchg
add
xor
mov
test
pop
repz
int3
daa
mov
lods
xlat
pop
cmc
jno
stos
push
jo
sub
xor
jbe
cmp
jmp
popa
add
or
add
xchg
js
repnz
cmp
jns
rcr
test
xlat
mov
in
dec
loop
dec
jo
push
push
imul
ret
test
cli
xchg
in
xchg
cmps
std
mov
and
mov
cld
fs
les
stos
xchg
pop
sbb
iret
movs
pop
mov
movs
pop
sub
sub
mov
adc
add
aam
adc
out
les
aad
aaa
movs
outs
push
cs
jno
ja
sub
add
div
cmp
cmps
mov
add
mov
adc
jae
inc
adc
aaa
mov
popa
sub
inc
cs
cmp
xchg
fsubr
retf
iret
mov
push
call
pop
dec
cmc
pop
test
pop
jge
sar
adc
imul
xchg
jno
pop
(bad)
cmp
test
dec
xchg
push
add
jb
int3
xchg
arpl
add
cmp
or
jg
in
es
ss
jmp
bound
(bad)
jne
fistp
push
adc
mov
movs
add
or
jb
pusha
in
adc
push
scas
jle
pop
jg
aad
cwde
pop
cdq
fbstp
in
sub
ds
push
pop
stos
aad
and
shl
lods
imul
mov
dec
aaa
(bad)
xor
shr
(bad)
fstp
stos
aas
call
push
jne
cmp
mov
jg
stos
outs
inc
dec
add
mov
call
mov
push
xor
jno
imul
shr
lahf
in
ja
xor
movs
stos
lods
pop
fimul
and
movs
out
pop
add
stos
jge
cld
mov
frstor
add
inc
push
pop
mov
in
cmps
sub
sub
iret
push
dec
add
test
pop
shl
mov
mov
jle
(bad)
mov
aaa
jmp
hlt
cmp
jmp
in
mov
jecxz
js
sub
ret
push
and
or
sub
shr
jns
loopne
or
adc
and
(bad)
je
pusha
or
cld
mov
scas
mov
mov
ret
in
call
iret
jmp
sub
in
call
mov
cmp
mov
jp
aam
xchg
cld
or
shl
bound
fs
test
and
sbb
rcl
scas
inc
adc
ss
ins
pop
jge
ret
scas
movs
gs
mov
cmc
xchg
xchg
loop
addr16
jno
jge
mov
fld
mov
out
jle
jmp
aaa
pop
outs
leave
icebp
push
in
lods
mov
cwde
shl
or
mov
dec
lods
sbb
push
cmp
int3
cmp
xchg
mov
not
xchg
shr
sti
adc
mov
(bad)
stc
sbb
push
pop
scas
pushf
scas
jne
xor
xchg
jmp
out
es
mov
scas
imul
out
mov
mov
push
scas
add
xchg
and
add
jns
icebp
push
mov
add
aad
jmp
bt
das
jnp
push
pop
dec
jl
xchg
std
pop
xchg
pop
xlat
test
or
pop
gs
xchg
aas
dec
bnd
outs
fwait
movs
int
ret
gs
xchg
adc
cmp
setns
mov
sub
jno
jo
outs
stos
stc
xor
push
stos
dec
dec
mov
pop
jg
xlat
test
icebp
pop
mov
mov
lods
and
cmp
test
sub
jae
pop
in
stos
mov
outs
scas
inc
sub
push
xor
jae
xor
cli
xor
push
mov
pop
add
loope
mov
mov
add
sub
mov
lock
in
nop
xor
cmps
stos
dec
jnp
lods
push
sbb
pop
addr16
jbe
jp
or
mov
mov
out
fs
mov
mov
jo
xor
arpl
dec
call
pop
cmp
out
sbb
ret
pop
jb
xchg
(bad)
mov
mov
fisttp
inc
jmp
je
jb
jnp
mov
rol
or
into
retf
push
xchg
sub
mov
call
push
(bad)
mov
cmp
mov
(bad)
sbb
xor
mov
rol
xor
pop
mov
idiv
sub
rcl
sbb
mov
and
mov
shl
adc
call
test
cmp
jge
sub
mov
mov
xchg
sub
cmp
push
pop
cmp
pop
cld
add
hlt
cld
add
or
mov
adc
aaa
call
loop
inc
mov
jmp
fldenv
enter
(bad)
and
pop
push
outs
in
xor
iret
ss
dec
mov
inc
pop
add
pop
aad
pop
push
and
add
test
and
call
je
or
jp
and
mov
lds
jo
or
outs
push
jns
enter
mov
das
xchg
and
xchg
fs
fld
fst
test
mov
cli
lahf
jp
sar
popf
and
movs
mov
(bad)
je
cld
add
enter
xchg
retf
jle
test
rcl
add
or
js
and
sti
leave
dec
cmp
xlat
fcomp
mov
out
fnstsw
xor
cmp
mov
jmp
in
xchg
fsubr
mov
or
cmp
test
shl
or
mov
adc
sbb
xchg
in
dec
jle
cmps
outs
lds
scas
iret
jno
add
mov
icebp
leave
test
enter
ins
pop
sbb
mov
lahf
and
rcl
je
pusha
inc
mov
pusha
xchg
sti
and
rep
inc
lods
or
xor
xlat
test
dec
pop
in
jb
in
or
or
pop
loop
ret
adc
icebp
shl
add
mov
pushf
sbb
xchg
and
arpl
xor
scas
push
jns
retf
das
out
shl
sub
mov
jo
dec
push
movs
neg
jecxz
rcl
xchg
(bad)
xor
mov
pop
and
and
and
cmps
outs
dec
mov
push
and
sub
inc
pop
iret
mov
shr
push
cmp
push
and
push
outs
das
push
fucomi
push
pop
cs
push
jno
adc
push
pusha
or
and
daa
es
je
sbb
adc
mov
addr16
movs
pop
je
or
xchg
xor
mov
push
dec
jp
movs
xchg
stos
jg
in
sbb
cmp
inc
cmp
ins
mov
push
imul
and
pop
xor
push
out
leave
sbb
retf
into
jae
or
out
inc
jl
ret
mov
sbb
add
push
sbb
xchg
fcomp
sbb
xchg
fistp
sti
adc
jg
sar
push
sub
push
lds
jmp
les
sahf
push
jne
sbb
popf
neg
loop
rol
xchg
loop
dec
daa
xchg
icebp
dec
fwait
mov
cmps
stos
sbb
fiadd
addr16
and
daa
(bad)
jecxz
inc
loop
mov
or
mov
test
xchg
hlt
add
xor
adc
stc
xchg
fidivr
dec
int3
loopne
in
loopne
jb
add
ss
xchg
test
ins
in
push
pusha
adc
cwde
jecxz
jbe
dec
inc
iret
mov
mov
cmp
jns
push
(bad)
mov
mov
sub
cmp
mov
ins
shl
bound
(bad)
imul
(bad)
inc
fistp
jne
cdq
xchg
mov
dec
or
cmp
stc
test
add
sbb
iret
xor
imul
jnp
mov
aad
fstp
push
xor
cmp
xchg
(bad)
mov
adc
sub
jae
dec
imul
popf
jmp
aad
cs
mov
test
das
push
adc
arpl
adc
and
cmp
mov
aam
fcmovnb
adc
icebp
cmps
aas
add
jbe
repz
cli
pop
pop
nop
jecxz
loopne
stos
adc
push
bound
leave
jno
mov
das
hlt
sbb
add
jecxz
(bad)
pop
test
movs
push
ins
xchg
es
jmp
mov
mov
sbb
lahf
and
xchg
fld
push
jo
sub
push
cmp
sbb
cwde
jge
(bad)
icebp
inc
mov
addr16
adc
adc
sbb
arpl
mov
jo
push
push
add
mov
loopne
je
loopne
push
inc
cmps
fdivr
push
mov
adc
test
(bad)
dec
shl
pusha
out
push
gs
hlt
addr16
loope
fs
mov
mov
pop
push
test
xlat
adc
mov
sbb
and
push
dec
mov
push
std
iret
lds
mov
pop
mov
inc
mov
movs
scas
inc
jne
(bad)
xchg
sub
fs
cmp
jmp
mov
stos
outs
push
in
mov
push
loopne
pop
push
pop
or
xchg
sub
push
and
sbb
out
loopne
add
push
imul
jns
push
daa
xor
cmp
cmp
mov
sbb
push
xor
inc
test
jg
jle
fadd
imul
out
(bad)
out
cmps
pop
or
or
ror
xchg
iret
in
cmp
inc
(bad)
stc
add
cmp
jb
and
jmp
(bad)
jnp
push
sub
lock
loope
xchg
fcom
imul
into
xchg
add
movs
or
jns
repz
xor
jecxz
xchg
in
dec
push
mov
mov
pusha
das
imul
pop
push
or
out
nop
movs
mov
sbb
push
loopne
rol
jl
add
mov
fiadd
lock
jp
iret
mov
xchg
ins
sar
aad
push
cld
jno
icebp
mov
(bad)
in
pop
and
je
pushf
adc
mov
sbb
jno
push
mov
mov
in
or
test
in
in
mov
xor
jecxz
dec
lds
sub
sti
sub
ja
ins
pop
dec
popf
push
call
sar
jg
enter
mov
jne
mov
pushf
out
cmp
dec
mov
mov
push
jecxz
jae
test
(bad)
fdivr
ret
push
mov
les
mov
ja
fwait
jnp
(bad)
leave
jp
sahf
ss
inc
sbb
adc
xchg
mov
in
dec
sub
aad
movs
push
shl
jecxz
mov
in
gs
pop
call
ins
fistp
(bad)
retf
icebp
xor
adc
cmp
xor
test
loopne
push
adc
xlat
xchg
pushf
xchg
in
cmps
scas
push
std
test
jnp
cld
add
push
push
jnp
fdiv
fs
fsub
and
loope
fs
(bad)
or
push
sbb
inc
push
ss
xor
fdivr
pop
ror
cdq
nop
lock
imul
push
pusha
cmp
add
adc
inc
mov
mov
(bad)
add
fcom
in
inc
dec
and
call
pusha
push
add
or
aad
push
daa
retf
adc
add
pop
push
cmp
sub
add
inc
test
dec
mov
lods
mov
sub
xchg
rcr
leave
mov
rcl
add
push
out
(bad)
dec
jmp
in
push
int3
fs
pop
mov
push
sub
push
add
movs
call
shl
loop
push
pusha
adc
mov
mov
das
xor
jo
inc
push
xor
mov
stos
jle
in
popf
leave
jle
(bad)
mov
mov
test
jecxz
xor
jno
sti
mov
repz
je
retf
movs
jnp
mov
jns
retf
xchg
aaa
sub
mov
les
ja
inc
mov
xchg
retf
inc
jno
ins
inc
sahf
shl
mul
not
in
or
add
test
into
ds
lahf
push
jmp
inc
(bad)
lock
sbb
xor
or
pop
mov
add
mov
es
mov
in
(bad)
leave
or
les
mov
adc
fldcw
imul
cmp
fbstp
add
and
lods
retf
sbb
nop
and
mov
sbb
neg
cs
mov
mov
cmps
xor
xchg
in
cmp
into
add
jnp
retf
repz
adc
pop
arpl
ret
cli
aam
xchg
xchg
int
(bad)
and
or
ins
push
dec
or
cmp
mov
pop
jno
sub
sbb
pop
cmp
pop
emms
xchg
add
js
cmp
adc
xchg
std
and
and
mov
cmp
enter
push
aad
mov
cmp
stos
cmp
adc
xchg
xlat
leave
jno
leave
nop
and
mov
mov
out
sbb
sub
mov
cmp
inc
(bad)
jmp
scas
sbb
fld
loopne
xchg
popa
retf
jmp
mov
(bad)
in
mov
or
jp
imul
push
inc
inc
enter
stos
mov
movs
jge
push
cmp
mov
retf
add
por
adc
jecxz
push
or
(bad)
sub
es
mov
es
sbb
fcmovnbe
loop
inc
or
shr
add
sub
mov
cdq
push
into
xor
xor
jb
mul
sub
call
outs
scas
dec
mov
inc
sub
xor
pop
les
je
and
lock
fcomp
pop
sbb
jno
sbb
lods
xchg
mov
call
out
inc
dec
push
clc
adc
xchg
and
cmp
div
dec
lock
inc
push
loope
inc
cdq
fimul
imul
repz
cmp
retf
stos
mov
cmp
pop
adc
and
ror
dec
pop
test
or
in
adc
repz
and
fsubr
outs
pop
dec
inc
sbb
or
xchg
xchg
jno
or
push
jnp
call
jo
and
mov
call
gs
push
test
popa
jl
repnz
int3
jge
out
sbb
rol
out
dec
inc
leave
fcmove
repnz
retf
test
aam
jne
in
fwait
or
inc
push
out
adc
(bad)
push
in
stos
bnd
jle
sar
and
jmp
lds
xor
sbb
ds
iret
mov
iret
pop
jge
mov
ret
sbb
inc
adc
out
xchg
xor
inc
pop
adc
inc
loope
mov
push
pop
lods
push
das
ret
inc
add
movs
movs
xor
xchg
add
popf
pop
pop
imul
adc
mov
mov
jecxz
sub
rcl
cmps
lahf
pop
(bad)
jo
or
dec
loope
adc
int3
pop
jne
mov
shl
dec
arpl
aas
js
cmp
pop
in
inc
pop
jle
leave
pop
mov
call
pop
jns
repnz
js
call
xor
lock
movs
jnp
mov
adc
int3
sub
adc
push
push
inc
fcom
mov
dec
cwde
sub
mov
mov
mov
dec
mov
mov
rcl
xor
and
scas
and
retf
dec
(bad)
cld
bound
rcr
rcr
mov
out
out
inc
or
in
jmp
fild
sbb
lock
mov
vcvtpd2ps
js
fs
pop
pop
mov
xchg
repnz
outs
push
sbb
outs
xchg
jecxz
or
stos
push
cwde
inc
test
adc
mov
cmp
jg
fisttp
ss
lods
lock
dec
mov
mov
out
ror
sbb
movs
scas
push
nop
ret
in
call
inc
mov
imul
mov
outs
dec
jle
in
cmp
dec
pop
(bad)
(bad)
sbb
dec
and
jmp
sbb
inc
pushf
cmp
in
loop
mov
or
xor
scas
pushf
mov
mov
pop
and
push
das
dec
mov
pop
xadd
int
bound
and
cmps
push
inc
les
loop
add
and
jge
jbe
mov
add
add
dec
test
jg
cmc
das
pop
sahf
out
addr16
scas
mov
pop
int3
cmp
in
sub
inc
cmp
(bad)
push
push
jp
cmps
jae
pop
sub
mov
pop
jge
cmp
aam
out
cmp
xchg
mov
in
ja
fsubr
test
add
dec
test
dec
iret
clc
shl
jns
fild
das
inc
gs
rcr
adc
repz
push
cld
mov
ja
out
jmp
scas
xchg
sub
arpl
sbb
rcr
mov
pop
or
jge
pop
cmp
sub
out
inc
mov
fstp
aas
and
inc
mov
inc
and
lahf
pop
scas
leave
and
mov
ss
mov
scas
int
fsub
in
xlat
jno
clc
shl
mov
dec
mov
pop
movs
int
sub
(bad)
sub
mov
scas
mov
lahf
movs
dec
xchg
xlat
mov
jbe
out
ins
inc
xchg
movs
xchg
mov
es
inc
dec
in
push
inc
(bad)
repz
leave
mov
pop
pop
shl
push
push
add
(bad)
loopne
call
xchg
mov
push
out
cmc
hlt
adc
lock
xchg
(bad)
loope
push
push
imul
ja
test
xchg
es
jmp
and
bound
push
in
pop
xchg
ja
ds
in
push
out
pop
stos
jne
or
sbb
lods
mov
icebp
xor
mov
fsub
and
xchg
adc
push
test
std
pop
(bad)
cmp
sbb
push
push
ror
xchg
adc
sbb
jmp
mov
cld
sub
push
into
adc
cmp
sub
sub
mov
(bad)
aaa
fwait
sti
pop
fcmovbe
retf
jnp
push
jnp
retf
jl
lods
push
jo
adc
push
push
movs
or
int3
lds
scas
in
push
arpl
jmp
cli
cmp
push
inc
je
movnti
pop
lods
push
loope
stos
xchg
cdq
pushf
xchg
in
pop
jle
fldcw
sysret
aam
and
cld
sti
sbb
fdiv
retf
or
lock
sbb
xlat
test
pop
daa
sub
fst
cld
xchg
push
(bad)
shl
pop
mov
mov
push
loopne
push
movs
inc
sar
adc
es
pop
out
jb
pop
jge
cmp
xchg
ins
das
add
pop
add
int
jmp
pusha
add
jae
jge
mov
xchg
ret
js
fstp
test
scas
js
inc
or
pop
mov
sub
sbb
and
push
add
popf
mov
xor
sbb
repnz
(bad)
jl
ja
leave
hlt
sub
out
mov
inc
dec
imul
and
xchg
mov
sbb
push
add
mov
das
cmc
or
cmps
dec
enter
mov
push
cmps
es
inc
int
int3
out
xchg
cld
aaa
xchg
sahf
mov
or
dec
ins
scas
jmp
leave
neg
int
xor
pushf
adc
fcmovbe
jns
pop
add
retf
jae
jmp
sbb
mov
and
xor
jge
call
lods
mov
div
ror
sub
mov
out
int3
test
jo
dec
xor
dec
mov
cs
xchg
aas
and
(bad)
stc
movs
adc
cmps
xchg
add
inc
sbb
mov
xor
into
imul
daa
sti
jl
aaa
es
stc
and
jae
inc
xor
jg
fimul
loopne
loope
loopne
mov
inc
add
cmp
mov
cmp
scas
dec
mov
jle
pop
movs
cli
scas
sub
push
jecxz
xchg
sbb
lods
and
mov
push
sub
lods
movs
hlt
div
ja
inc
mov
xor
xor
xor
add
bound
mov
ins
mov
xor
sbb
inc
xchg
xchg
push
jmp
and
mov
nop
sub
sbb
imul
dec
sbb
sub
in
stos
out
shl
dec
push
outs
lahf
test
repnz
inc
pop
nop
adc
jo
arpl
adc
mov
movs
sub
push
xchg
mov
or
pushf
loope
gs
in
fistp
cld
xchg
jne
aad
movs
jecxz
outs
push
jmp
imul
ror
mov
sub
inc
add
mov
dec
cmp
pusha
cmp
jmp
retf
cmp
mov
div
sub
loopne
ja
arpl
ror
(bad)
pop
sub
add
(bad)
aad
xchg
adc
mov
retf
stos
pop
stos
repz
leave
repnz
mov
or
bound
mov
icebp
ins
jns
stc
jno
retf
mov
dec
nop
hlt
daa
push
adc
stos
xchg
(bad)
xchg
sbb
mov
inc
jae
push
mov
fucom
int3
cmp
push
repnz
jge
inc
js
cli
imul
jne
out
mov
rcl
arpl
xor
(bad)
sbb
xchg
push
sbb
push
mov
call
adc
icebp
lahf
push
jg
push
cmovs
fcmove
push
cvtpi2ps
ins
push
out
scas
cli
cmp
ja
cmc
push
stos
mov
sub
xor
pop
or
into
lds
or
push
inc
jbe
sahf
fadd
push
xchg
rol
lock
cld
les
jb
push
xchg
or
jmp
in
mov
dec
out
movs
fisubr
int
mov
es
popf
cs
ss
cmp
push
rcr
push
rcl
mov
mov
adc
outs
in
xor
pushf
test
repz
addr16
and
jmp
js
pandn
or
cli
push
add
out
dec
fst
or
dec
xlat
aam
mov
adc
out
arpl
adc
dec
(bad)
sbb
les
mov
jp
cli
push
mov
jecxz
sbb
shr
push
xor
jno
mov
xchg
inc
pop
bound
mov
dec
fwait
daa
inc
fistp
and
push
xor
jbe
(bad)
lea
xchg
cmp
jae
or
daa
loop
mov
aam
sub
mov
xor
cmp
mov
dec
stos
jg
mov
(bad)
aaa
push
mov
test
adc
ds
hlt
and
fwait
pop
popa
jmp
fld
in
ror
add
inc
test
inc
push
cli
outs
shr
(bad)
ret
ds
sub
xor
scas
pop
pop
push
sub
cld
nop
mov
or
pop
inc
sbb
sar
iret
pop
push
pop
xchg
out
mov
add
loop
imul
ret
mov
mov
sub
bswap
adc
out
add
mov
add
test
jge
sub
or
dec
sahf
arpl
fsqrt
or
mov
inc
xor
call
fmul
repz
add
retf
dec
test
pop
pop
xor
cld
in
and
ins
(bad)
test
pop
out
push
into
leave
in
or
push
sbb
cmp
lahf
and
cmps
and
(bad)
repz
fisub
mov
dec
jmp
push
lods
push
mov
lock
xchg
add
add
xor
xor
ins
(bad)
mov
(bad)
pop
mov
outs
jo
aas
fwait
out
adc
xor
xchg
jb
rcl
inc
xchg
mov
adc
xchg
ja
(bad)
mov
imul
sbb
push
or
mov
mov
imul
stos
stc
push
cld
leave
sahf
shl
fs
ins
popa
push
push
out
adc
je
loopne
push
jae
shl
sub
in
pop
loopne
xchg
jmp
xchg
push
scas
popf
xlat
fiadd
xchg
lahf
ss
xchg
arpl
xchg
clc
mov
inc
outs
(bad)
pop
daa
cmp
cmc
in
sub
sbb
add
out
lds
sahf
push
pop
adc
jmp
scas
call
imul
or
lock
or
jns
pop
mov
inc
inc
dec
pop
loope
pop
xor
lea
cmps
pop
or
pop
neg
fldpi
xchg
ds
in
lods
cmp
sbb
xchg
jno
pop
outs
scas
mul
dec
jg
stc
arpl
sub
ret
sbb
ja
dec
push
pop
mov
(bad)
stc
out
aaa
mov
ins
lods
lods
adc
cmps
add
dec
or
pop
pop
out
push
mov
loopne
cld
push
pop
mov
xchg
cli
jp
jno
sbb
xchg
mov
or
inc
mov
jbe
mov
in
daa
psubq
dec
mov
in
jecxz
pop
mov
fidivr
sbb
mov
mov
daa
lds
mov
mov
dec
jle
stos
adc
mov
push
test
xor
dec
(bad)
aas
mov
(bad)
mov
cmp
mov
retf
mov
mov
(bad)
xlat
jb
sub
cmps
leave
(bad)
bound
sub
ror
sbb
mov
xchg
loop
ret
mov
aam
test
rcl
stos
xchg
clc
mov
(bad)
cdq
cld
test
xchg
pop
(bad)
lods
inc
popf
mov
xor
pop
jne
cmp
adc
pop
into
xor
mov
popf
xchg
outs
fwait
cld
xchg
jmp
xchg
(bad)
movs
retf
cmp
sbb
fs
dec
jge
xchg
int
into
in
cmps
dec
sbb
push
add
mov
mov
push
xchg
mov
popa
repnz
jl
loope
jge
or
lods
aad
ss
fiadd
add
adc
enter
les
adc
pop
mov
pop
cmp
sbb
test
adc
ins
js
jno
bound
mov
jle
inc
mov
adc
scas
adc
cmps
mov
adc
or
cmps
fbld
mov
mov
dec
inc
xchg
mov
rcr
pushf
ret
jl
pop
dec
ret
(bad)
mov
add
push
shl
mov
lods
sbb
movs
mov
mov
cmc
jl
fldcw
ret
cs
inc
sub
out
or
mov
fwait
jle
je
mov
aam
and
movs
dec
add
jecxz
xor
js
dec
stc
dec
es
adc
cld
or
xchg
and
push
push
cmp
ret
xor
or
pusha
adc
mov
lahf
loop
xchg
dec
js
xchg
lock
adc
jno
cmpxchg
es
std
xchg
(bad)
xchg
mov
fld
add
fdivr
mov
js
sub
std
not
(bad)
mov
sbb
mov
idiv
mov
xchg
lahf
mov
lea
mov
and
pop
mov
mov
push
adc
into
in
inc
mov
mov
mov
neg
push
sub
inc
fcom
jae
mov
or
add
psrad
stos
cmp
in
mov
out
adc
rol
sbb
pop
cld
call
mov
popf
cmp
xchg
sub
ja
sbb
xor
inc
mov
sub
in
xor
xor
out
stos
pop
push
jge
(bad)
int
popa
jp
lea
mov
sub
and
sub
pop
xchg
inc
repz
inc
push
cmp
sbb
(bad)
fsubr
jecxz
and
loopne
xchg
adc
dec
pop
out
adc
ret
jp
scas
gs
mov
or
mov
xchg
xchg
jmp
(bad)
cmc
ds
mov
sbb
jecxz
in
dec
jb
fnsetpm(287
div
daa
and
push
sub
mov
jno
sub
loopne
mov
mov
sub
(bad)
mov
jl
sbb
dec
movzx
xchg
or
jp
(bad)
cmp
fxch
stos
retf
cmp
fidiv
ss
pop
push
push
test
or
push
jnp
xchg
jae
cmp
neg
sub
cmp
int3
mov
sbb
cmps
out
pop
dec
in
(bad)
sub
aaa
jns
stc
jnp
cli
xchg
mov
int
cmp
cdq
xchg
loop
into
aam
(bad)
lods
ins
cmp
lahf
or
aaa
in
inc
xor
shl
adc
inc
pop
xor
cmp
mov
sub
cmc
fisttp
into
cli
lahf
imul
push
push
div
mov
and
inc
adc
mov
or
or
mov
shl
jb
imul
repz
shl
adc
cwde
mov
cmp
inc
or
repnz
pop
mov
outs
pop
test
shl
mov
push
mov
jnp
jle
hlt
push
sub
xchg
cdq
xor
mov
rcr
stc
popf
pop
lahf
cmps
cli
push
add
xchg
jno
mov
bound
les
leave
push
mov
inc
stos
mov
popf
xchg
dec
lods
adc
mov
ror
popf
sbb
in
ja
mov
and
lock
ss
dec
pop
(bad)
in
jecxz
mov
inc
sub
mov
in
shl
add
push
dec
pop
in
mov
enter
mov
lahf
test
pusha
fwait
ret
xchg
outs
push
xor
xor
inc
add
xor
mov
push
cdq
(bad)
in
inc
out
sar
ds
test
add
in
dec
aad
fisub
aad
aas
xor
ds
int3
push
mov
popf
push
jge
fisubr
dec
push
xor
ret
push
push
cmp
add
ja
mov
mov
inc
sbb
inc
mov
mov
jp
clc
fcomp
cmp
pop
add
retf
push
and
out
aam
xor
cld
pop
scas
inc
jmp
lods
mov
inc
push
mov
dec
cmp
cmp
daa
out
push
or
or
inc
jmp
fdiv
push
test
call
mov
aas
icebp
xchg
retf
ds
cmp
jbe
push
mov
(bad)
jmp
mov
stos
mov
adc
in
mov
out
ret
ret
pop
push
jne
mov
cmc
xor
cwde
cmps
and
pop
es
aaa
ins
inc
sbb
mov
cmc
jg
inc
daa
enter
out
and
shl
sar
ds
jmp
ins
sub
rcl
hlt
js
push
jmp
nop
sbb
(bad)
xchg
fdiv
mov
adc
mov
imul
rcr
jmp
xchg
pop
cmp
xor
sbb
scas
sub
imul
loope
lahf
or
xchg
div
adc
cli
pop
mov
pushf
jns
das
push
aam
mov
aad
aad
dec
cmp
sub
mov
push
pop
popf
cdq
repz
xchg
inc
repz
add
push
(bad)
sub
push
jbe
ins
ja
dec
cmc
sti
mov
jg
aad
lods
std
sbb
loope
and
mov
fld
push
sub
inc
sahf
dec
adc
jecxz
popf
fild
adc
cmp
into
xor
das
imul
xor
js
jecxz
jns
imul
lds
inc
mov
and
inc
not
call
push
fdivr
pushf
cwde
ret
out
mov
lea
fs
dec
push
es
cmp
sbb
cmps
imul
lock
jo
pop
add
(bad)
push
(bad)
cmps
pusha
les
(bad)
pop
scas
movs
push
mov
pop
mov
pop
dec
retf
ficomp
test
gs
out
stos
jp
mov
test
stos
enter
(bad)
cmp
mov
retf
dec
add
int
cmp
shr
mov
or
and
sbb
mov
scas
and
or
sub
pop
mov
pop
fmul
call
push
dec
js
push
gs
ret
inc
loope
stos
and
push
movs
dec
mov
xchg
fidivr
leave
sub
mov
mov
cs
xchg
xchg
mov
pop
leave
cmp
daa
mov
imul
cmp
jge
fisubr
cmp
lock
push
fisubr
xor
dec
pop
popa
ficom
dec
pop
or
sbb
int
mov
jmp
out
add
gs
stos
fsubr
sub
mov
rol
jp
(bad)
cmps
and
pop
cld
imul
jge
push
lods
cdq
and
loope
xchg
and
shl
jno
clc
(bad)
inc
ret
dec
xor
fild
aad
pop
fist
test
mov
ins
sbb
test
jle
iret
sbb
adc
test
adc
push
cmp
lods
aad
fs
cli
push
iret
call
movntps
sbb
xchg
in
test
loope
mov
and
jmp
xchg
pop
imul
retf
movhps
clc
jns
das
sar
iret
jl
cmp
jno
sbb
jmp
jecxz
pushf
dec
pop
push
add
mov
pop
mov
inc
call
ret
push
cwde
mov
or
popa
mov
stos
scas
cmc
(bad)
and
sahf
leave
pop
stos
mov
test
push
(bad)
std
sbb
pop
int
dec
push
jecxz
dec
dec
sahf
xchg
in
xchg
cld
cdq
retf
fistp
in
sub
mov
mov
add
ja
jmp
bound
jmp
mov
addr16
sbb
sub
push
aaa
or
xchg
test
test
gs
aaa
mov
adc
js
aaa
mov
jno
out
xchg
(bad)
pop
(bad)
addr16
std
pop
xchg
imul
idiv
mov
xchg
mov
push
loop
out
or
xchg
aaa
not
movs
leave
push
mov
or
mov
add
or
xchg
mov
jmp
jg
cmp
mov
int
sbb
sub
push
pop
adc
mov
jecxz
push
adc
mov
(bad)
mov
popf
cmp
out
adc
je
mov
lods
cld
and
adc
xchg
clc
movs
mov
inc
inc
cmp
xchg
repnz
and
shl
sbb
popa
xchg
sub
retf
sub
rol
movhps
ficom
dec
cmps
lds
jp
mov
test
mov
je
pop
fdivr
mov
pop
(bad)
retf
pop
cs
int3
pop
push
stc
jnp
xlat
fwait
cld
sahf
leave
mov
stc
inc
xchg
aas
push
jns
leave
pop
dec
ds
repnz
xor
add
std
xchg
adc
clc
stos
sub
ficomp
imul
fwait
mov
adc
stos
aad
lods
pop
push
xchg
lock
call
push
pop
mov
hlt
and
push
cmc
pop
dec
pop
push
add
fcomp
pusha
cld
push
xchg
xchg
push
pop
mov
pop
ds
dec
xor
mov
ja
rcr
aad
jge
in
dec
jns
nop
inc
push
fwait
test
in
adc
neg
int
outs
(bad)
add
clc
test
mov
cmps
stc
xchg
and
fnstenv
xchg
sbb
cli
inc
(bad)
push
or
pop
push
cmc
inc
pop
jle
push
not
and
xchg
xchg
(bad)
push
std
movs
push
adc
lahf
das
bound
fcomi
pop
imul
xchg
mov
adc
movs
(bad)
cmc
cli
pushf
fisubr
dec
cmc
pop
call
xchg
out
jle
jmp
outs
jb
int
aaa
(bad)
cli
retf
mov
xor
sbb
xchg
gs
jo
mov
mov
je
nop
jp
bnd
fsub
rcr
(bad)
pop
clc
jmp
icebp
mov
retf
fisubr
pop
and
aas
sub
jns
scas
mov
es
ror
and
mov
rcl
mov
stos
xchg
jge
sti
xor
ss
imul
inc
mov
xchg
clc
xchg
ja
std
mov
iret
(bad)
in
cmp
cld
mov
and
clc
jae
sbb
stos
dec
dec
push
into
sbb
mov
addr16
adc
vpsrld
retf
icebp
(bad)
xchg
fbld
adc
out
mov
clc
test
out
ficom
add
popa
ret
xchg
sbb
xor
xchg
jle
mov
xor
push
test
sub
cmp
ja
pop
out
push
dec
imul
cmps
not
adc
add
sbb
xor
pushf
loope
xor
movs
mov
inc
cmp
in
js
sub
dec
jo
xor
mov
std
jbe
pop
(bad)
mov
push
mov
pushf
push
test
xor
sub
aaa
add
pushf
fidiv
mov
test
stos
in
aas
adc
imul
add
repz
test
and
aaa
das
ror
cmp
fist
call
pop
adc
mov
je
clc
sub
mov
inc
cmp
sbb
jge
xlat
popa
lods
cmp
imul
test
popa
js
xchg
jecxz
(bad)
xor
or
dec
in
(bad)
dec
out
out
jb
(bad)
mov
call
sbb
fimul
out
lods
bnd
movaps
jge
cmp
enter
or
pop
and
pushf
or
loope
in
push
not
loop
mov
xchg
xchg
aaa
push
rcr
in
mov
xchg
dec
mov
clc
cdq
xchg
jg
stc
dec
dec
inc
jp
data16
jbe
or
dec
loope
add
mov
movs
not
je
loopne
fwait
loop
xchg
enter
or
pushf
or
retf
movs
lods
xchg
mov
bound
jb
jg
ss
fild
pop
xlat
lahf
xor
xchg
stc
mov
add
fld
sbb
ud2
pop
arpl
adc
cmc
dec
scas
push
jb
xchg
les
daa
dec
mov
inc
jns
in
retf
push
sub
hlt
pop
fs
xchg
or
stc
adc
dec
add
push
add
scas
mov
out
and
jge
cmc
add
movs
dec
pop
push
mov
out
or
add
out
cmps
repnz
add
imul
cmp
and
mov
data16
test
pop
(bad)
jmp
icebp
dec
test
xlat
in
outs
dec
out
push
cmp
test
pop
popa
xor
pop
inc
push
sub
cmp
shufps
inc
cmp
mov
popf
adc
aaa
outs
adc
push
mov
cmp
cmp
call
mov
(bad)
xor
mov
sar
or
es
stc
dec
arpl
in
cwde
mov
movs
arpl
stos
adc
loop
dec
adc
jmp
jp
daa
mov
push
adc
jmp
mov
sbb
xchg
mov
aad
out
repnz
push
fwait
and
test
push
jns
or
ss
outs
jle
in
dec
std
push
imul
pusha
popa
js
das
and
add
push
test
out
push
js
repz
leave
bound
fadd
and
inc
jae
fisub
sub
add
out
inc
mov
jp
imul
jge
sbb
cmps
dec
repz
dec
push
cmp
mov
(bad)
push
retf
sbb
push
and
xchg
mov
add
mov
aaa
pop
push
mov
xchg
in
das
and
fisub
into
outs
dec
cld
pop
aad
push
cmc
in
jb
js
and
add
bt
sub
loop
pop
daa
int3
icebp
mov
mov
out
add
mov
shl
cmp
arpl
and
cli
das
arpl
jmp
dec
out
outs
xor
test
test
ins
mov
sahf
pushf
xchg
out
les
js
cmps
mov
test
loopne
inc
xor
test
inc
fidivr
and
push
mov
cld
dec
sbb
rol
jae
mov
aaa
sbb
jo
push
pop
push
sub
stos
in
cmc
pushf
push
sub
js
or
shl
stos
(bad)
adc
jae
fbld
jle
movs
add
cdq
cwde
lds
lea
fld
sub
inc
cmp
jmp
pop
and
cmp
in
repnz
test
scas
retf
xchg
push
ficomp
dec
icebp
ffreep
xor
add
dec
stc
xor
inc
jns
sub
add
pop
repnz
lahf
mov
push
adc
cmps
or
int
mov
jle
dec
jo
mov
js
add
pusha
push
sti
scas
fcmovu
inc
lahf
and
jae
stos
mov
rcr
jnp
in
outs
scas
popa
and
dec
xchg
jg
cmps
shl
pop
sub
xchg
dec
out
les
push
jno
and
rcr
dec
pop
test
dec
sbb
adc
sbb
ja
add
mov
in
(bad)
or
in
mov
sbb
and
xor
jmp
or
adc
sbb
stos
jle
in
push
sahf
push
mov
pop
inc
mov
or
inc
ins
xor
push
sar
push
mov
jmp
aad
pop
xor
adc
pop
push
xchg
repz
xor
clc
leave
sub
push
jns
loop
fcom
adc
pushf
dec
call
push
iret
sbb
xchg
in
shr
adc
icebp
shl
add
sbb
jno
xchg
test
inc
cld
(bad)
iret
stos
push
push
(bad)
mov
test
popa
std
pop
cmp
jle
fmul
mov
(bad)
lahf
ret
and
sbb
push
inc
cld
add
sbb
pop
int
rcl
add
jae
or
mov
scas
push
jnp
ret
cmp
mov
movs
ds
xor
pushf
fstp
xor
je
loopne
neg
neg
loopne
pop
vfrczss
mov
jp
cs
(bad)
xchg
xchg
icebp
sub
or
push
xchg
pop
sbb
nop
sbb
(bad)
fxch
sbb
jmp
pop
adc
das
shl
aaa
imul
ins
mov
jno
fsub
fs
push
and
pushw
sbb
xchg
or
dec
arpl
dec
xor
and
jae
ror
std
jg
add
and
popf
pop
inc
enter
jmp
jge
fdivr
outs
leave
cli
ss
test
ficom
out
and
or
data16
and
sub
mov
inc
cwde
push
cli
(bad)
loopne
jmp
xchg
sti
call
dec
mov
dec
mov
popa
add
adc
cmp
cmp
stos
rcl
sbb
push
pop
mov
add
jb
mov
mov
xacquire
sub
pop
add
mov
(bad)
movs
bound
int
mov
mov
call
ret
out
pop
js
leave
jmp
cld
cmps
movs
pop
xchg
jl
dec
call
cmps
cmp
cmp
popa
cli
loop
dec
mov
dec
iret
sub
mov
sahf
mov
std
cmps
mov
mov
js
mov
dec
fisubr
fsubr
out
or
fild
ret
int3
test
movs
pop
stos
jb
cmc
pop
call
or
jae
mov
mov
xor
bound
repnz
xchg
(bad)
mov
lods
xlat
mov
fsub
adc
jno
pop
pop
(bad)
jb
leave
sbb
shl
je
fwait
addr16
add
sahf
inc
rcl
aam
lods
shl
ret
mov
out
arpl
pop
data16
cmp
sub
test
pop
hlt
or
jnp
out
push
pop
cwde
xchg
into
cwde
sahf
adc
mov
aam
xor
xchg
pop
sar
mov
retf
push
ret
das
test
mov
fbld
cli
gs
add
or
mov
outs
pop
mov
jo
loop
sti
test
cmps
repnz
add
or
xchg
pop
rcr
ins
cs
push
sbb
clc
ds
in
xor
popa
cmp
movs
psraw
xchg
cmp
(bad)
jno
hlt
push
bound
jmp
cli
sbb
xchg
bound
sub
and
sbb
pop
cmp
popa
pop
in
loopne
push
inc
xor
xchg
in
inc
sub
xchg
push
fild
retf
mov
imul
push
ds
sub
mov
inc
imul
dec
push
sbb
or
mov
dec
push
cmp
fwait
std
cmc
int
mov
call
mov
push
push
or
popa
dec
cdq
dec
bound
cld
fdivr
repz
sub
imul
sbb
add
push
pop
sub
mov
jbe
fist
(bad)
aaa
sar
sar
xchg
mov
mov
int3
push
dec
mov
jle
pop
and
icebp
ja
or
mov
xor
dec
icebp
dec
and
xchg
xchg
inc
popa
sbb
mov
jmp
pop
clc
leave
int
xor
jb
jl
and
shr
push
lea
xchg
outs
test
sbb
jp
sbb
mov
jmp
pop
xlat
hlt
add
lods
in
sub
push
or
sbb
shl
inc
pop
addr16
loope
mov
loop
int3
loop
or
daa
test
lahf
aam
sbb
jg
int3
ret
cmp
inc
cmp
cli
and
stos
and
outs
rcr
push
rol
and
aaa
imul
and
popa
retf
fs
loop
mov
xchg
xchg
ss
mov
sahf
pushf
xchg
cmp
call
cmp
mov
lahf
mov
mov
mov
out
sbb
xlat
xchg
imul
cmp
mov
push
push
inc
mov
leave
outs
popf
jmp
push
test
or
push
mov
sbb
imul
pop
xchg
rcr
push
pop
and
popf
push
pop
mov
mov
scas
retf
xor
in
jae
rol
jge
add
mov
arpl
int
aam
jns
mov
and
mov
dec
sbb
sub
cli
push
push
xchg
pop
(bad)
push
out
inc
data16
or
es
or
syscall
sahf
mov
push
add
cmc
js
xchg
sub
stos
pop
mov
xchg
pop
retf
hlt
enter
test
ss
leave
test
gs
popa
fwait
mov
fimul
inc
(bad)
xchg
and
xor
mov
cmp
pop
jl
jae
push
aad
pop
in
adc
test
mov
push
out
gs
dec
test
and
mov
jp
mov
(bad)
mov
fdivr
xchg
cld
jmp
push
push
inc
mov
rcr
aas
cmps
gs
xor
out
mov
mov
aam
mov
cmps
mov
push
shl
and
inc
repz
xchg
scas
ret
jmp
ds
sub
xor
jbe
sbb
(bad)
add
movs
mov
jae
sub
adc
icebp
ss
push
int3
stos
mov
fneni(8087
out
(bad)
or
mov
dec
jno
pop
dec
xchg
into
movs
popa
cmp
rcl
into
add
mov
add
(bad)
dec
aad
pop
jmp
mov
cs
jno
inc
cmps
mov
cmps
cmp
fxch
inc
jp
and
and
loopne
fsubp
ds
lods
lea
retf
pop
sub
aam
mov
fimul
bound
(bad)
js
sahf
(bad)
div
push
test
sub
mov
sub
cmp
dec
xchg
lahf
push
out
jmp
push
cmp
jns
pop
inc
lock
sbb
aas
adc
addr16
mov
mov
inc
test
rol
daa
aad
xchg
pop
sub
fldenv
mov
mov
mov
ins
in
mov
mov
call
cmp
xor
xchg
mov
leave
lahf
jmp
loope
sub
test
jbe
sub
fisubr
(bad)
sub
mov
mov
mov
add
xor
shl
stc
push
(bad)
pop
scas
shl
jg
jge
dec
jno
out
xchg
scas
je
or
leave
push
sbb
mov
fild
mov
jo
sysret
sti
xchg
xchg
mov
lea
jmp
retf
pop
mov
stos
call
push
movs
ret
dec
push
mov
pop
sub
popa
test
sub
out
stos
xchg
or
adc
jge
dec
pop
or
mov
aas
fisubr
push
mov
jnp
cmps
lods
lods
xchg
and
rcr
clc
dec
mov
int3
pop
jo
adc
fadd
loop
push
popf
movs
cmp
aas
adc
add
xor
dec
ret
aas
popf
inc
and
in
mov
aaa
push
je
pop
cmps
cmp
adc
lar
add
stos
into
mov
btr
(bad)
xchg
adc
mov
enter
sub
adc
outs
xchg
dec
hlt
push
and
sub
cmp
arpl
add
or
jle
mov
mov
dec
jno
fbstp
xor
jns
xor
fnsave
(bad)
shl
div
aaa
outs
imul
xor
adc
or
(bad)
sub
jbe
aad
pop
mov
xchg
fstp
test
pusha
int
jno
and
or
mov
scas
js
or
cmps
out
mov
aam
jp
inc
in
scas
iret
scas
cld
cmps
jmp
test
pop
mov
inc
or
push
push
inc
out
or
lods
sbb
cmp
xchg
sub
sbb
sbb
pop
clc
scas
pusha
adc
or
iret
lahf
push
stc
pop
call
xchg
lds
push
push
and
mov
xor
lds
adc
in
cmps
xor
pop
push
aam
add
shr
cmp
xchg
das
fwait
std
popf
cmps
pop
shl
xchg
ror
sub
pop
mov
adc
ds
icebp
add
add
shr
jge
into
fiadd
jb
popf
stc
xor
imul
jne
pop
lock
mov
clc
ds
dec
xchg
xchg
(bad)
mov
jg
femms
jle
cmps
fs
pop
jne
dec
sbb
add
fcmovnu
jmp
xor
test
ss
sahf
mov
push
loop
push
and
loopne
jne
movs
call
les
aaa
xchg
sbb
scas
push
sti
mov
retf
int3
push
pushf
in
(bad)
cmp
mov
test
loopne
ret
push
dec
sub
jecxz
cdq
and
add
add
in
popa
into
loope
sbb
iret
mov
inc
cld
cmp
mov
adc
cmp
into
sbb
jnp
pop
dec
pop
pop
test
jbe
enter
cmp
adc
pushf
pop
push
jl
ins
and
icebp
xchg
xlat
test
inc
cmc
push
bound
cdq
jecxz
(bad)
fidiv
sub
bound
cmp
dec
arpl
gs
and
and
jle
xchg
lahf
push
jnp
movs
dec
jnp
push
xor
push
(bad)
pop
or
push
xor
or
in
xor
test
cld
lods
das
inc
cmp
add
or
xchg
inc
pop
pop
das
outs
outs
push
fdivr
sbb
mov
int
dec
mul
and
jmp
and
inc
sub
cmp
fucom
(bad)
pop
sbb
leave
stos
(bad)
aas
sbb
inc
cmc
mov
pop
cmc
rcl
ds
xor
imul
fs
xor
mov
jb
idiv
add
jmp
hlt
inc
outs
mov
dec
das
xchg
cld
cs
adc
sti
pop
je
push
lock
cmp
mov
scas
into
dec
in
fisub
pop
sub
cmp
les
jo
sbb
into
and
enter
xchg
(bad)
ins
sub
push
sahf
sub
(bad)
std
imul
pop
pop
fadd
jge
inc
(bad)
adc
icebp
add
sub
mov
enter
pusha
jbe
mov
adc
rol
sbb
sbb
fadd
sbb
int3
xor
pop
inc
sub
outs
jmp
jmp
int3
and
int
(bad)
in
mov
jno
int3
movs
daa
xor
add
xor
mov
rcl
cli
jb
adc
in
ror
test
icebp
xor
test
lods
cli
jno
xlat
mov
pop
rcr
movs
test
xor
push
push
ror
add
jo
aad
mov
xor
fs
dec
xor
dec
jle
clc
mov
fbld
neg
push
jmp
jno
sbb
cmps
or
xor
(bad)
retf
push
push
add
adc
sbb
xor
call
mov
push
push
sar
sbb
jnp
stc
mov
stos
mov
jb
int
mov
cdq
dec
aas
adc
call
jno
xor
movs
jmp
pop
hlt
jg
mov
lods
inc
pushf
call
into
loop
sub
pop
int
(bad)
jo
cli
cmc
mov
inc
push
dec
popf
aas
push
cmp
jecxz
cmc
ins
retf
sbb
cmc
push
cmps
xchg
call
mov
mov
cmp
mov
cmp
es
and
add
mov
inc
and
sbb
push
ds
xor
lods
cli
pushf
ficomp
xchg
(bad)
mov
lea
cdq
sub
sub
mov
retf
icebp
cmp
xchg
xchg
push
mov
sahf
in
fs
jmp
sub
push
repz
pushf
mov
jg
bnd
mov
pop
ret
or
in
mov
rcr
xor
jb
jge
pop
adc
call
adc
out
gs
data16
sbb
jb
inc
cmc
dec
fwait
call
push
shl
imul
shl
pop
cwde
cmp
jmp
bound
and
imul
inc
daa
int3
retf
pop
in
jo
fiadd
call
add
dec
or
xchg
sub
mov
push
cli
xchg
ja
in
xor
loop
enter
sub
mov
cdq
jmp
loop
mov
mov
fcmovnbe
fidiv
cmp
lods
jmp
sub
stos
call
cmp
scas
inc
sbb
ins
ret
out
pop
dec
dec
cmp
outs
xor
sahf
add
je
mov
sti
pop
scas
mov
mov
push
mov
fistp
jle
in
inc
mov
gs
add
sbb
sbb
call
add
mov
push
jnp
cwde
popa
xchg
push
jo
in
or
loop
arpl
jle
xchg
addr16
call
xchg
cmps
mov
je
xchg
fadd
in
jo
hlt
xchg
xchg
dec
mov
jl
sub
dec
mov
xchg
(bad)
cmp
daa
xchg
popa
fcomp
mov
fs
mov
mov
jle
es
jae
cli
and
jle
xchg
sbb
pop
jae
cdq
push
sahf
test
neg
aaa
movs
icebp
imul
adc
add
outs
arpl
fs
push
stc
mov
mov
jl
push
pusha
inc
sbb
mov
cmps
or
in
into
retf
mov
and
rol
out
dec
mov
mov
arpl
mov
int3
push
inc
ins
fist
push
cmc
cdq
inc
mov
xor
adc
mov
xor
and
fs
sbb
imul
popa
dec
add
stc
or
mov
scas
stc
mov
punpcklbw
jae
inc
and
scas
mov
mov
div
clc
mov
adc
cmp
add
repnz
add
aas
dec
hlt
pop
cmc
dec
movs
pop
mov
xor
mov
pop
movs
les
and
jo
adc
repnz
pop
in
or
sbb
cmp
mov
std
sub
jb
sti
adc
sbb
retf
mov
lock
jp
bound
mov
push
ret
pop
or
hlt
mov
jbe
mul
mov
jnp
lock
cmp
xchg
add
dec
pop
out
push
iret
fcom
call
jmp
push
data16
inc
cmp
int3
xchg
stc
movs
fwait
das
gs
add
mov
adc
dec
aaa
int3
es
stos
test
dec
jge
and
enter
push
jo
xchg
pop
sbb
push
int
lds
into
arpl
pop
loop
push
push
push
jp
jecxz
cwde
sub
pop
mov
cmp
jns
ss
ror
stos
adc
add
imul
cmp
pop
or
adc
daa
fwait
cmp
in
stos
out
jne
in
pop
icebp
arpl
stos
mov
jnp
adc
xlat
(bad)
loop
sub
mov
jae
mov
ja
mov
mov
cli
ss
and
int
xchg
pop
mov
mov
jge
add
jecxz
and
mov
jae
jg
jmp
fnstsw
(bad)
xor
or
loopne
or
fnsave
les
pmulhw
loop
xchg
jmp
nop
aaa
pop
sub
sar
jmp
mov
dec
addr16
xchg
mov
pop
(bad)
je
bound
(bad)
sbb
or
ficom
ins
xor
xor
dec
pop
icebp
fdiv
adc
or
cdq
loopne
jmp
ret
jl
jl
shl
pop
aad
xor
push
adc
push
sub
pushf
xchg
cmp
ja
test
mov
lea
xor
inc
nop
xchg
aad
or
out
mov
mov
test
push
in
ins
dec
push
push
push
int
sar
jmp
int
pop
dec
dec
jno
retf
sbb
das
stos
mov
xchg
add
sbb
xchg
inc
mov
sti
pushf
jl
sar
movs
cmc
add
push
jmp
bound
(bad)
pop
adc
and
jnp
rcr
push
sbb
sar
xchg
leave
lods
mov
xor
lahf
sbb
pop
loopne
xchg
jb
ja
test
and
xchg
jl
ss
sbb
repnz
jp
leave
mov
(bad)
mov
mov
jne
std
sub
aaa
stos
dec
xchg
outs
dec
retf
lods
(bad)
push
imul
jmp
mov
adc
mov
dec
je
sbb
cli
jecxz
mov
jb
xchg
sbb
jle
shl
(bad)
out
mov
jns
repz
push
ins
add
mov
repz
jo
dec
xchg
cmp
add
lds
mov
aas
mov
jae
int
out
call
sti
mov
jbe
imul
jge
test
bound
xor
sbb
pushf
inc
stos
xchg
outs
xlat
push
mov
cmc
dec
sar
adc
mov
pop
adc
inc
and
ret
div
mov
push
call
and
shl
mov
std
inc
mov
dec
mov
les
cmc
fdiv
add
rol
jecxz
push
leave
daa
ins
xor
xlat
inc
jl
cmp
mov
pop
dec
mov
pusha
and
shl
popa
icebp
cdq
fmul
cmp
sub
mov
fcomp
jno
sbb
inc
push
dec
push
sbb
jmp
mov
scas
mov
lods
aaa
dec
cmc
or
jb
popa
in
mov
movs
sub
pushf
sbb
pop
cmp
loop
mov
out
mov
and
xor
xlat
retf
cdq
jbe
lea
dec
sahf
add
push
into
sub
cli
sar
or
mov
fistp
pop
lods
jg
fucomi
aad
scas
push
push
xchg
push
aam
mov
cmp
mov
sbb
(bad)
data16
clc
stc
jmp
mov
jp
pop
or
sahf
(bad)
rcr
mov
sub
loope
aaa
repz
jge
pop
daa
test
adc
and
xor
shl
not
jge
cmovno
xchg
aam
data16
xor
or
scas
mov
push
out
xchg
xor
shl
sbb
push
div
fwait
inc
in
xchg
ret
ss
push
inc
(bad)
(bad)
ins
push
xchg
add
jb
push
sbb
push
xchg
retf
(bad)
xchg
das
xlat
cmc
push
cmp
push
mov
je
add
pop
(bad)
dec
dec
push
xchg
sub
dec
leave
call
jg
stos
xlat
push
cmps
je
push
dec
aad
xor
push
daa
scas
sub
push
or
cdq
mov
xor
push
push
or
sub
push
add
push
int
lods
adc
jmp
mov
adc
test
clc
xchg
cld
mov
pop
gs
aad
cmp
push
jg
cli
mov
stc
retf
xor
adc
lea
lods
mov
stos
test
adc
xor
jg
stos
jg
pop
aaa
aad
adc
fldcw
cmps
loope
pop
mov
pop
js
push
sub
cmp
push
mov
(bad)
fdiv
fild
push
das
test
jnp
iret
loopne
xchg
fwait
in
push
cmp
sbb
jl
jbe
enter
test
ins
dec
adc
neg
mov
fsub
mov
daa
outs
fmul
push
dec
movs
js
gs
and
ffreep
icebp
dec
jmp
pusha
scas
das
mov
adc
inc
nop
cmp
mov
mov
jne
push
lahf
mov
cmp
jne
dec
push
test
in
mov
out
mov
int3
in
int
xor
mov
mov
(bad)
jae
out
or
cmp
xchg
out
outs
jnp
bound
cmp
nop
mov
popa
icebp
dec
jp
xor
inc
into
pushf
fldcw
es
pop
mov
pushf
sbb
lock
lds
and
sbb
inc
repz
dec
cmp
xor
mov
sub
sub
fld
sub
hlt
jmp
sbb
pop
icebp
cmps
movs
pop
push
sahf
xor
xor
inc
pop
sbb
jl
jb
cmp
fsin
data16
mov
in
mov
(bad)
retf
push
data16
call
push
pop
inc
mov
ret
xchg
data16
ficomp
xor
addr16
out
aas
shl
cmp
out
xchg
mov
dec
cmps
dec
xor
mov
cmc
push
cmp
xchg
sahf
add
(bad)
jecxz
repz
sbb
push
xchg
sub
(bad)
inc
ins
fadd
les
std
or
mov
adc
and
gs
rcl
es
cs
or
je
gs
jge
xchg
loop
push
mov
not
add
mov
lahf
mov
jp
jmp
inc
mov
pop
mov
mov
jae
(bad)
hlt
xor
mov
sbb
mov
mov
mov
in
dec
rcr
test
ss
ror
adc
mov
loopne
bnd
imul
ins
aad
mov
adc
jae
repz
retf
inc
call
add
arpl
ror
or
shl
adc
xor
scas
test
sub
stos
push
jp
mov
push
inc
cwde
jle
adc
test
jp
scas
jp
or
xchg
loopne
les
pop
imul
mov
scas
in
sbb
pop
(bad)
stc
inc
sar
std
dec
cdq
mov
or
jno
das
mov
jns
jb
mov
fdivr
cmps
jns
ror
xchg
mov
xlat
xor
sbb
stc
popf
jnp
aaa
and
pop
mov
loop
xor
inc
stc
mov
pop
cdq
mov
mov
xchg
popa
jge
xor
imul
cmp
jp
jmp
neg
pop
jo
into
fiadd
sbb
fwait
xchg
and
int
ror
cmps
adc
xchg
dec
xchg
push
mov
aad
(bad)
in
lods
dec
cmc
xlat
stos
cmp
(bad)
pusha
rol
mov
mov
sub
inc
or
cmp
and
enter
lock
push
cdq
jns
out
lahf
ins
dec
test
jle
push
dec
push
(bad)
idiv
ins
xchg
jg
sti
dec
repz
cmps
pusha
(bad)
dec
in
js
dec
xor
cs
les
push
call
pop
inc
pop
cs
call
sub
shl
nop
rcl
je
std
xlat
sub
xchg
push
pop
lods
pop
mov
pushf
sar
pop
sub
sub
lds
retf
push
iret
lea
fdivr
mov
adc
xor
sbb
dec
mov
pop
popf
push
or
ret
pause
or
pop
jo
sub
sbb
clc
or
sbb
mov
fs
(bad)
sbb
push
int3
and
cmp
cli
add
(bad)
adc
xlat
retf
data16
xchg
add
or
scas
cmovns
mov
mov
mov
pop
out
(bad)
sbb
jp
pop
ret
test
pop
cwde
mov
cmps
jb
xor
ins
sub
mov
outs
out
mov
retf
imul
jmp
test
icebp
test
push
push
xchg
mov
(bad)
push
mov
ret
and
les
and
mov
push
fcomp
ret
push
sub
dec
into
xor
ret
dec
push
into
hlt
arpl
mov
jl
sub
jnp
fbld
push
gs
or
dec
pusha
out
add
xchg
lods
data16
mov
xor
(bad)
cmps
daa
movs
sbb
mov
lock
stos
stos
push
push
sub
das
and
cmps
jmp
xor
sbb
nop
fwait
sub
cmp
inc
mov
(bad)
stos
add
retf
mov
add
inc
jmp
jnp
pop
sub
fstp
sbb
out
aam
inc
xor
pop
cmc
stc
movs
ja
cli
imul
scas
jle
mov
(bad)
into
mov
sar
jae
aam
cmp
cmps
mov
repz
pop
das
clts
repz
retf
lock
cmc
cmp
ficomp
lahf
cmp
jmp
push
inc
call
jo
pop
scas
pop
adc
sub
into
in
popf
test
mov
(bad)
retf
loop
push
hlt
mov
mov
cmps
cs
add
pop
lea
and
scas
xor
test
imul
inc
(bad)
cmp
sub
push
test
add
push
cmc
call
inc
or
xor
cmp
fldenv
test
mov
stos
pop
adc
mov
mov
fisttp
gs
add
cdq
(bad)
sub
mov
push
xor
or
mov
xchg
xor
pop
xchg
adc
mov
mov
push
mov
icebp
push
pop
sub
jmp
bnd
cli
cwde
sti
retf
dec
pop
movs
pop
push
mov
cdq
call
retf
inc
bound
push
push
(bad)
dec
mov
jecxz
in
lds
test
mov
mov
shl
sub
xchg
cdq
pop
sub
aad
inc
loope
(bad)
dec
and
fst
jp
scas
icebp
std
inc
(bad)
repz
mov
clc
mov
adc
nop
cli
int
in
cmp
or
push
sbb
dec
inc
xchg
sbb
test
push
cmp
jo
xsaves
add
and
pop
xchg
jno
push
sbb
and
mov
pop
ret
dec
stc
imul
aas
ins
dec
aad
call
and
and
into
bound
or
inc
jns
mov
loope
pop
mov
scas
mov
out
cdq
in
popf
stos
jmp
pop
fsubr
mov
out
imul
outs
sbb
mov
sub
adc
mov
mov
stc
sbb
jl
pop
bound
cmp
or
pop
cwde
jnp
sbb
sbb
add
sub
mov
xchg
aas
daa
jmp
pop
outs
rol
hlt
adc
cld
sub
jae
push
aaa
sbb
lds
xor
mov
dec
pop
dec
mov
pushf
nop
xor
jbe
aad
sub
loope
rcr
jae
dec
fstp
icebp
pusha
loop
pop
pop
jmp
xor
xor
xor
mov
js
inc
sub
(bad)
adc
pop
inc
mov
inc
fwait
sub
in
movzx
add
ficomp
mov
es
sbb
and
or
dec
mov
push
aam
and
mov
mov
fwait
retf
sbb
mov
pop
mov
jl
mov
xchg
adc
jle
cmp
xchg
or
lahf
retf
test
push
cmps
dec
jle
clc
jae
fisub
call
mov
int3
imul
cmp
sub
mov
sub
push
pushf
pop
in
or
and
pop
imul
out
sub
mov
imul
pop
cmps
out
jns
fnsetpm(287
dec
scas
hlt
scas
pop
mov
xchg
add
adc
pushf
sbb
imul
arpl
(bad)
sbb
dec
jbe
dec
mov
in
sbb
das
mov
mov
mov
mov
adc
cdq
pop
ja
xlat
jg
and
es
cmps
or
inc
call
and
pop
sub
push
xchg
inc
add
mov
jne
pushf
and
rcr
pusha
add
add
stc
test
test
xchg
loop
sbb
cmps
outs
pop
cmps
gs
enter
retf
pop
(bad)
jbe
in
retf
mov
out
cmps
out
ror
mov
sahf
pop
xchg
push
mov
sub
jecxz
mov
and
and
jo
movs
adc
jl
call
in
push
mov
jge
(bad)
icebp
fsub
lock
sub
lock
mov
iret
jnp
jnp
les
sub
xor
inc
jle
hlt
pcmpeqb
call
jno
push
sub
cld
mov
scas
dec
test
stos
(bad)
out
cmps
push
les
sub
ds
mov
jb
popf
pop
jmp
retf
aam
pop
mov
imul
fsubr
jecxz
sbb
or
add
ds
or
mov
mov
adc
ins
add
shl
and
jne
cmp
dec
call
ds
dec
ret
and
push
movs
pop
loope
push
repnz
mov
add
ret
jle
xor
fmul
and
arpl
mov
jg
repnz
sti
inc
outs
sub
pop
into
xchg
xor
jns
imul
and
push
inc
jnp
jge
push
in
jge
sub
dec
movs
ss
xchg
pop
push
mov
sub
out
mov
rol
gs
push
rcr
(bad)
pushf
mov
mov
xchg
sbb
inc
test
repnz
xor
inc
push
mov
sbb
xlat
cmp
aad
or
fwait
adc
lock
mov
das
jb
push
movs
aaa
mov
loope
inc
sti
mov
outs
mov
jns
retf
jb
and
adc
js
hlt
add
pop
mov
mov
imul
pop
int3
movs
cdq
push
jmp
mov
adc
movs
ret
mul
int3
inc
jo
mov
dec
retf
xchg
push
test
push
push
in
dec
adc
aas
xor
fxch
int3
cmp
pop
fwait
sbb
fisttp
dec
test
in
lods
stos
push
jmp
test
pop
inc
jns
call
in
inc
cmc
inc
outs
iret
push
jmp
dec
lods
enter
sub
ja
ds
div
les
popa
inc
xor
xchg
mov
data16
loopne
cmp
xor
pop
out
pop
mov
xor
sahf
mov
cmp
hlt
fstp
pop
das
xor
mov
outs
int3
mov
sub
mov
test
int3
mov
jbe
pop
sub
mov
and
mov
jno
push
push
mov
adc
stos
in
arpl
mov
or
pop
repz
or
jmp
in
stos
mov
dec
sbb
sbb
pop
sub
inc
add
sbb
mov
aad
stos
shr
mov
pusha
dec
mov
adc
push
xor
(bad)
(bad)
cwde
out
jns
stos
dec
cmc
cmp
jmp
jno
push
pop
push
pop
fs
sbb
pop
loope
jae
and
mov
mov
push
outs
addr16
mov
js
xor
push
xor
mov
fwait
and
cwde
aam
lods
and
cs
fwait
adc
loope
xor
movs
repnz
cmps
into
push
dec
les
aas
push
(bad)
push
jmp
or
pop
repnz
mov
xchg
cmp
loop
push
loopne
arpl
aas
xor
fwait
pusha
mov
test
repnz
aaa
mov
sub
xchg
mov
cmps
out
jle
out
xor
xchg
sbb
popa
sub
cmps
and
ficom
sub
test
mov
fcomp
sbb
movs
push
jl
outs
push
push
(bad)
mov
or
ja
pop
push
fld
mov
icebp
pop
rcr
cdq
fldenv
push
cmc
mov
shl
iret
dec
lahf
ins
jb
and
or
sar
mov
(bad)
or
add
xor
imul
xchg
sbb
loope
clc
mov
in
jns
int
fsubr
pop
mov
cmp
retf
test
js
jmp
popa
push
xor
(bad)
cmp
fild
or
dec
leave
clc
inc
and
push
cmp
ret
jbe
mov
stos
xor
xchg
out
movs
fst
mov
ins
push
cli
or
mov
and
and
shr
pop
outs
jns
add
daa
int3
in
fwait
popa
adc
mov
push
popf
jecxz
add
inc
or
jne
push
loop
xor
aad
or
test
sub
push
xor
sbb
sub
cmp
add
iret
push
jnp
ficom
in
dec
scas
lods
test
mov
add
mov
pop
leave
fisub
test
and
pusha
inc
retf
xlat
pop
fist
clc
jmp
lds
dec
jl
outs
imul
pop
(bad)
test
out
cli
jnp
jg
cmp
(bad)
cmp
aas
and
mov
inc
pop
outs
adc
fadd
pop
and
int
dec
stc
std
push
aam
sbb
mov
mov
iret
inc
or
xchg
jns
ret
cmp
inc
mov
jmp
sbb
iret
dec
pop
inc
mov
sbb
xchg
ret
xchg
mov
sub
aaa
je
mov
or
sub
mov
and
xor
jno
ror
push
rol
sar
pop
ficomp
mov
push
mov
mov
pop
(bad)
jmp
(bad)
clc
dec
repz
test
es
hlt
retf
mov
js
mov
mov
xor
or
xchg
fcom
pop
pop
push
test
mov
(bad)
cmps
push
push
pop
movs
repnz
mov
jg
repz
into
cwde
ret
push
sbb
test
inc
shl
mov
ja
cdq
jns
adc
mov
sbb
mov
arpl
sahf
popa
cmp
sbb
cdq
jmp
sbb
xlat
mov
jmp
pop
test
aam
fucomp
fldz
das
dec
(bad)
mov
or
aam
sbb
jp
push
mov
and
mov
pop
(bad)
cmc
sbb
xchg
in
not
push
lahf
push
fwait
dec
fisub
mov
mov
stos
aas
push
std
test
mov
test
xchg
ror
push
pusha
inc
pop
ja
cmps
sub
cmp
pop
and
jns
adc
mov
jp
aaa
adc
int
cwde
ins
in
pop
out
lahf
xor
mov
xchg
lock
and
cs
mov
push
out
adc
adc
jbe
nop
mov
and
add
mov
in
pop
(bad)
aaa
jl
call
or
sub
inc
pop
pop
or
xor
mov
lock
xchg
mov
pop
ds
push
inc
and
pop
sbb
dec
add
pop
movs
pusha
mov
bound
xchg
xchg
pop
rcr
lea
cmp
inc
ins
dec
sub
jo
into
scas
test
pop
inc
mov
push
or
aad
sub
in
xchg
jo
sar
out
test
mov
inc
ret
pop
sar
fld
out
dec
jmp
call
and
scas
dec
std
jae
jg
ror
stos
std
mov
jmp
aas
mov
mov
cmp
mov
cmp
cmps
pop
pop
lea
cmp
bound
cwde
ret
test
int3
repnz
sub
jno
ret
and
nop
retf
dec
jg
hlt
jmp
mov
inc
out
xchg
push
in
or
adc
and
add
xchg
xchg
sar
mov
mov
pop
jne
mov
cmp
or
pop
imul
mov
dec
adc
sbb
call
push
addr16
hlt
aas
out
or
mov
or
sub
inc
pop
add
pop
jmp
cld
inc
repz
stos
ficom
ja
jbe
xchg
iret
lahf
and
add
jno
sub
inc
rcr
and
mov
mov
cmps
icebp
popw
dec
add
shl
pop
jo
out
outs
adc
pop
sahf
stos
cli
push
icebp
dec
movs
pop
xchg
neg
dec
pusha
aaa
arpl
adc
and
or
xchg
pop
xor
inc
mov
add
out
inc
mov
push
mov
jns
out
fs
movs
mov
iret
cld
jmp
xchg
sahf
cmp
pusha
scas
mov
push
stos
faddp
hlt
data16
aaa
jbe
adc
adc
test
mov
add
cld
sbb
mul
adc
push
mov
lods
(bad)
lods
pop
clc
fs
fist
cmp
repz
inc
bound
(bad)
lods
in
jmp
push
leave
rcl
push
imul
call
inc
jns
inc
add
int3
pushf
jo
mov
jne
push
leave
pop
cmp
inc
push
jp
add
icebp
adc
pop
push
pop
div
iret
mov
jp
popa
sbb
dec
cmc
adc
push
jnp
jmp
xchg
rcr
int3
or
sbb
sbb
inc
sbb
dec
int
mov
mov
pop
mov
sub
mov
adc
retf
and
mov
push
push
mov
mov
das
fnstenv
imul
outs
popa
push
out
pop
push
fist
ja
loopne
inc
sahf
mov
into
mov
(bad)
(bad)
push
cmp
(bad)
lods
out
std
pop
fcomi
sub
push
push
daa
and
mov
movs
retf
xor
push
das
shl
xchg
sub
lock
cmp
dec
mov
(bad)
psllw
inc
pop
pop
je
je
cmp
es
push
pop
mov
cmp
cld
gs
dec
mov
jb
in
int
shl
stos
dec
xor
addr16
movzx
cmps
add
adc
xchg
xor
sub
sub
or
fwait
cdq
es
stos
inc
sbb
xor
das
pop
fisubr
leave
sbb
ds
mov
xchg
push
xor
ds
or
arpl
std
popa
test
in
es
lods
bound
cmp
push
mov
sub
adc
mov
or
lea
(bad)
les
int3
pop
pop
jmp
nop
jecxz
sbb
pushf
jmp
pop
mov
ins
pop
push
(bad)
cli
and
out
cld
gs
retf
xor
stc
xor
fbld
dec
dec
loopne
jmp
dec
aam
xchg
jno
ss
inc
push
std
cmp
int
div
add
jecxz
imul
mov
ds
sbb
cld
xor
in
icebp
or
jmp
mov
frstor
movs
lahf
lods
cmc
jmp
(bad)
mov
cmp
jns
mov
mov
xchg
mov
js
outs
das
jmp
hlt
and
pop
adc
outs
(bad)
les
push
sbb
lahf
push
xchg
aad
xchg
push
outs
adc
fstp
in
fwait
cwde
call
(bad)
sub
jns
mov
mov
cmc
(bad)
push
cmp
arpl
pushf
fadd
jecxz
and
popf
shl
test
stos
inc
xchg
shr
rol
add
sbb
test
sub
sbb
push
adc
movs
int3
imul
mov
inc
or
mov
xor
jp
fcmovnu
xchg
pop
lods
in
repz
push
ins
out
mov
dec
push
add
push
pop
mov
or
(bad)
shr
out
add
and
and
ds
in
(bad)
leave
lahf
loopne
or
(bad)
mov
rol
xor
dec
pop
or
(bad)
mov
js
jmp
ds
rol
mov
les
pop
ins
xchg
and
xor
call
sahf
push
leave
jmp
mov
xor
int
into
in
and
iret
push
es
or
test
xchg
xor
test
aas
cwde
cmp
dec
es
dec
mov
add
inc
cld
shl
out
xor
jbe
mov
mov
jmp
push
scas
cmp
call
arpl
sub
sbb
mov
push
icebp
adc
movs
dec
push
shl
fnsave
shl
pop
push
pusha
adc
xor
cmp
rcr
sub
jno
push
cmc
lea
sub
imul
jne
sahf
mov
add
lods
shr
or
push
inc
call
shr
lods
ds
pop
xchg
dec
mov
jb
arpl
xor
fidiv
jg
cmp
jae
loopne
pop
gs
pusha
cmp
push
xchg
repz
cli
imul
ins
sahf
mov
bound
in
retf
loopne
das
jg
bound
add
inc
lahf
fmul
pusha
jb
mov
adc
out
in
jno
pop
mov
repz
dec
daa
jge
jl
shl
pop
mov
aad
dec
es
sub
sahf
pop
pop
xchg
imul
pop
jle
cld
jmp
in
xchg
jmp
xchg
dec
dec
cmp
clc
sbb
shl
cs
sub
mov
xlat
sub
dec
sub
in
pop
call
xchg
adc
in
lock
mov
cmp
dec
cli
xchg
clc
fwait
int3
lahf
sahf
ror
in
cmp
xor
gs
xor
sub
xor
mov
sbb
push
sar
sub
js
jmp
stos
stc
sub
cmp
mov
push
stos
adc
mov
test
push
pop
mov
mov
mov
mov
movs
jbe
fadd
sti
xor
or
pop
xchg
bound
add
in
inc
jo
or
fwait
jns
cli
xor
jae
int
dec
in
sub
xor
ins
inc
inc
pop
xchg
ss
fs
js
mov
inc
addr16
fimul
push
jb
lock
sbb
and
sub
(bad)
push
sbb
or
pop
and
icebp
xchg
mov
or
scas
lock
jae
jnp
das
inc
pop
mov
sub
idiv
and
fadd
sbb
(bad)
mov
imul
es
mov
js
sar
xor
push
(bad)
mov
out
xchg
sub
movs
cmp
dec
xchg
xchg
arpl
xchg
cli
dec
outs
pop
dec
dec
pop
lahf
out
cli
inc
xchg
out
cmp
xchg
mov
and
and
jo
pop
and
arpl
shl
jmp
imul
lock
sub
movd
push
xor
add
outs
ficomp
test
inc
in
jbe
stos
mov
gs
push
cmp
push
xchg
dec
push
sar
jno
cmp
in
and
cld
adc
fwait
cmp
test
pusha
adc
out
test
inc
push
sbb
push
pop
lods
repnz
push
sub
add
mov
stc
mov
jno
inc
out
push
pop
cmps
icebp
sbb
dec
or
arpl
popf
sbb
pop
pop
outs
inc
mov
mov
jge
shl
push
in
or
mov
stos
sbb
dec
cmp
jmp
test
fmulp
lahf
dec
scas
xor
adc
or
mov
(bad)
stos
xlat
ins
scas
or
xor
cli
dec
and
ficom
mov
repz
gs
or
xchg
js
pop
push
retf
and
inc
xchg
fistp
imul
push
icebp
push
jmp
mov
mov
movs
sbb
setp
test
ja
xchg
mov
jno
dec
push
xlat
in
cmps
and
aaa
push
sti
jl
push
pop
mov
or
and
xchg
sbb
fiadd
imul
sub
enter
jecxz
and
adc
(bad)
out
xchg
add
cs
jns
pop
pop
adc
sub
mov
out
scas
clc
jmp
adc
scas
pop
call
mov
inc
cli
xor
pop
mov
pop
mov
nop
js
mov
add
loop
pop
fnsave
and
cmp
je
inc
pop
test
bound
jmp
jp
movs
(bad)
arpl
sahf
dec
pop
xchg
adc
mov
test
push
pushf
mov
jno
push
popf
jecxz
(bad)
lahf
popa
imul
ja
add
adc
mov
sbb
mov
and
mov
pop
pushf
retf
test
data16
movs
outs
loop
xchg
mov
ds
cdq
sbb
xchg
and
jnp
mov
or
pusha
xor
stos
add
fadd
in
lds
xchg
ret
mov
int3
push
loop
or
jne
pop
int
loopne
enter
or
mov
out
rol
dec
xchg
ror
mov
ins
cli
jne
ds
cdq
es
ret
ficomp
sbb
test
push
aad
xchg
nop
xor
pop
wrmsr
stos
mov
ins
fxch
jns
push
jle
push
das
dec
aad
push
pop
ins
imul
cdq
mov
(bad)
cmp
leave
sub
cmp
xor
xor
pop
into
fstp
(bad)
repnz
js
js
push
arpl
in
ret
mov
mov
daa
(bad)
pop
mov
dec
xor
out
ins
sbb
call
xchg
cwde
fdiv
nop
adc
sti
sbb
dec
aaa
in
icebp
xchg
fcom
mov
and
sub
mov
and
call
xchg
inc
loopne
and
fimul
int3
adc
cli
sub
fild
or
jbe
std
xor
(bad)
pop
and
mov
or
in
pop
xor
hlt
test
stos
sbb
sub
jge
clc
or
and
inc
xchg
lahf
adc
movs
hlt
sbb
cmp
pop
test
cmp
xchg
push
mov
push
movs
fcmovbe
xchg
cmp
test
pop
(bad)
jnp
ins
pop
dec
dec
or
mov
outs
push
jns
retf
add
cmps
imul
in
arpl
dec
stos
adc
ins
cmp
xor
cmps
cdq
aas
aam
inc
call
sub
das
adc
push
setnp
dec
lock
inc
cmovs
mov
sti
adc
adc
mov
mov
pop
and
mov
push
outs
push
and
les
repz
ret
call
cmp
push
sbb
inc
movs
jp
xchg
jnp
icebp
shl
arpl
mov
cmp
pop
repz
push
xchg
mov
mov
cmc
or
dec
or
aam
in
sub
pop
scas
xlat
mov
or
xchg
pop
in
jb
sbb
xor
sahf
inc
retf
(bad)
test
mov
mov
in
xchg
xlat
dec
pusha
daa
inc
add
inc
pop
dec
mov
jecxz
push
mov
ins
mov
(bad)
or
cmp
(bad)
stc
mov
xor
pop
pop
outs
cdq
stos
inc
mov
pop
mov
push
mov
mov
daa
mov
push
fimul
popa
and
mov
into
hlt
dec
leave
loopne
mov
fmulp
fdivr
pop
mov
or
dec
es
cmp
movs
adc
ss
xchg
sbb
outs
or
call
push
jge
clc
dec
and
jnp
cwde
add
pop
push
loope
ror
push
push
lea
call
cmc
add
and
movs
sub
inc
or
mov
jge
std
sub
jbe
inc
cmp
xor
mov
dec
and
inc
mov
lods
dec
mov
inc
jmp
sbb
data16
scas
call
call
dec
in
cmp
adc
sbb
loopne
in
jl
xchg
retf
mov
cmps
fwait
imul
mov
popa
push
out
xor
sahf
add
jno
sbb
sbb
push
movzx
adc
xor
mov
call
mov
or
xor
jl
sbb
shr
aaa
jg
push
into
push
jmp
cmp
adc
sub
stos
adc
sbb
dec
lock
fld
shl
test
jecxz
retf
pop
cmps
adc
pop
cmp
push
mov
pusha
icebp
lea
fnsave
pusha
lods
xchg
cwde
jle
mov
test
pop
in
add
cmp
ins
sub
sbb
mov
pop
fcmovnu
jl
inc
and
inc
jle
loopne
imul
fistp
inc
mov
lods
icebp
inc
fs
mov
das
jns
and
mov
mov
nop
jecxz
pop
cmps
jge
rcr
mov
sbb
xchg
jmp
(bad)
push
push
test
or
in
mov
mov
je
sbb
ss
dec
inc
push
jno
cmps
cmp
ror
aas
dec
cmp
je
jbe
(bad)
aam
stos
pushf
jle
daa
jb
and
mov
push
mov
sahf
scas
xor
and
fadd
cmp
(bad)
mov
jns
cmp
xchg
add
aad
int
xor
jge
clc
add
hlt
mov
(bad)
fistp
cmc
or
in
cmp
push
loopne
and
lock
or
push
and
lods
loope
cdq
mov
xor
and
imul
retf
hlt
push
sub
cmp
test
mov
mov
and
retf
icebp
imul
inc
popa
sub
jmp
test
jg
fisttp
xchg
popf
out
adc
jp
aaa
pop
dec
mov
stos
push
sbb
inc
pop
mov
sub
aas
ficom
retf
sub
dec
arpl
imul
dec
mov
imul
addr16
and
call
stc
mov
test
pop
pop
or
in
rol
in
int
clc
and
mov
inc
(bad)
and
(bad)
add
jmp
push
push
and
mov
mov
icebp
lock
mov
sbb
xchg
inc
lock
loope
adc
loope
icebp
ins
stos
sub
push
xlat
fwait
cmc
shl
xor
mov
sbb
add
mov
cmp
mov
stos
aam
jns
push
xor
xlat
xchg
dec
cld
mov
call
nop
pop
sub
mov
in
stos
fidivr
xchg
in
xchg
dec
push
stos
jb
xchg
cmp
push
fwait
xchg
push
call
mov
inc
inc
ret
es
cmps
add
int
rep
ins
jle
jmp
pop
sahf
scas
jb
call
popf
mov
movs
shl
adc
ret
int
lock
and
jle
dec
push
or
sbb
cmp
jecxz
dec
jle
mov
mov
call
in
cwde
jge
test
adc
jmp
fist
(bad)
mov
jecxz
jecxz
pop
mov
(bad)
mov
push
ss
mov
int3
dec
stos
sbb
les
mov
ja
push
add
mov
jns
fs
push
xchg
inc
cld
add
lea
outs
(bad)
lock
mov
adc
jmp
mov
idiv
cmp
sahf
shl
mov
sbb
hlt
push
mov
pushf
aam
dec
out
in
mov
fstp
cli
cmp
jb
outs
ins
mov
dec
lods
enter
jecxz
or
mov
lea
retf
sub
pop
jmp
jmp
hlt
and
sti
sub
fdivr
and
sub
out
push
push
xlat
adc
aam
sub
repnz
cmp
mov
mov
jnp
jne
jg
mov
dec
mov
mov
fistp
xchg
sub
bnd
popf
call
jo
mov
jecxz
popf
add
inc
das
jbe
js
mov
retf
cld
inc
clc
pop
push
sbb
pushf
push
ret
das
rcr
movs
clc
xchg
(bad)
push
aas
call
xor
lods
pusha
and
dec
jge
out
xor
sbb
aaa
fld
jecxz
frstor
sahf
pop
loop
dec
or
adc
push
mov
inc
in
push
loop
fwait
push
outs
shl
call
xor
xbegin
jbe
pop
das
call
les
xchg
jle
loope
push
arpl
cmp
sahf
pop
or
rcl
popf
or
stos
add
push
cmps
ds
test
fwait
pushf
mov
imul
loope
loopne
dec
ror
in
mov
(bad)
pop
xor
inc
mov
mov
sub
xor
cmps
addr16
icebp
retf
and
shl
mov
(bad)
sti
popf
je
shl
mov
imul
sub
leave
sbb
and
sub
xchg
retf
sahf
dec
ret
movs
bound
mov
or
sti
adc
cmp
(bad)
test
adc
shl
cld
push
iret
xchg
xlat
sbb
dec
mov
lock
arpl
jle
ror
jg
inc
or
push
xor
sbb
pop
mov
jo
fist
sbb
xchg
in
jae
fs
xchg
inc
jnp
movsx
(bad)
pop
idiv
fwait
test
dec
add
jecxz
fmul
enter
shl
call
fxch
jb
adc
call
jge
mov
xchg
mov
inc
sub
xchg
cdq
xchg
push
popa
xor
dec
mov
(bad)
shl
xor
(bad)
sbb
mov
(bad)
std
or
int3
push
sub
fnsave
movs
(bad)
aaa
in
jo
imul
ror
xchg
push
jp
adc
mov
mov
sar
pop
jmp
rcr
sbb
jbe
fisubr
add
inc
xchg
mov
jne
pop
jbe
push
or
adc
in
jg
clc
jne
pop
push
jns
enter
test
cwde
loopne
shl
jp
xor
adc
out
xor
push
rol
dec
dec
mov
dec
sub
pop
js
ret
ds
stc
sub
cs
aam
mov
mov
jno
mov
pop
mov
in
sub
bound
test
jns
sbb
int3
cmp
in
lock
mov
inc
inc
sbb
xchg
ins
or
cmps
pop
jl
mov
(bad)
rcr
xchg
xchg
inc
es
cmp
sub
call
dec
mov
push
imul
xor
xor
adc
or
out
dec
pop
dec
aaa
jmp
mov
out
or
retf
lods
cwde
sbb
stc
sahf
retf
pop
popa
repnz
ss
mov
adc
call
add
mov
cmp
stc
and
nop
fsubr
push
cmps
add
add
push
js
popa
mov
lods
cmp
mov
cdq
mov
lods
mov
retf
sbb
or
xchg
aas
and
mov
shl
stos
dec
dec
dec
or
loop
lds
fadd
sub
push
scas
pop
outs
lods
pushf
adc
(bad)
iret
push
out
iret
cmps
mov
cmps
repnz
fwait
push
mov
dec
sbb
shl
jmp
or
pop
xchg
shl
mov
add
xor
inc
jns
movs
pop
xchg
hlt
iret
mov
inc
test
sub
test
pop
cmp
cs
xor
adc
and
retf
cwde
pushf
pop
xchg
repz
retf
add
loopne
icebp
xchg
ds
inc
and
mov
or
fst
retf
test
jo
cmps
popa
(bad)
dec
ror
leave
push
inc
push
daa
scas
mov
or
jb
in
loope
fadd
add
dec
scas
xchg
pop
data16
std
scas
xlat
call
mov
xor
mov
mov
(bad)
adc
pop
gs
sub
fcomp
sbb
(bad)
mov
les
mov
maskmovq
idiv
sub
test
adc
xchg
popf
add
fucomi
cmc
push
dec
cmps
mov
stos
(bad)
mov
cdq
xchg
out
fst
les
mov
pop
adc
and
inc
mov
mov
loop
add
sbb
cmp
jl
aaa
inc
ds
cmp
jnp
int3
xchg
xchg
pushf
ins
push
jae
jmp
xor
pop
sub
arpl
pop
pop
cmp
or
dec
push
push
iret
mov
mov
mov
xchg
(bad)
mov
call
mov
jno
ret
setnp
sbb
mov
lock
vmovdqa64
sahf
xchg
add
ret
push
in
sub
mov
loopne
in
push
adc
mul
cmp
stos
mov
test
cmp
jecxz
push
mov
mov
popf
mov
test
sbb
ds
push
mov
into
dec
cmp
lods
push
sbb
loop
xchg
int3
push
push
sub
test
sbb
adc
push
or
mov
jb
mov
test
mov
lods
leave
dec
sub
loope
pop
fild
jbe
movs
and
sub
sahf
xor
mov
pushf
and
cmc
icebp
push
dec
dec
xor
xor
test
repz
scas
in
std
mov
ds
in
add
push
retf
xor
mov
sbb
sub
cmp
jmp
xchg
mov
ss
rcl
jo
bound
nop
out
cmps
and
fisubr
mov
and
xor
mov
jno
adc
xchg
jecxz
sbb
or
jb
outs
or
dec
fcmovnbe
or
ja
mov
jbe
shl
loope
pop
retf
adc
ds
mov
popf
mov
out
bound
pop
shl
mov
jno
push
test
pop
jne
repz
loop
test
mov
ins
pusha
and
push
outs
scas
jb
js
xchg
outs
stos
and
ins
mov
js
add
cmp
add
(bad)
fmul
daa
ror
jo
mov
into
nop
les
dec
lock
jnp
xor
pushf
pop
icebp
setbe
ins
xchg
pop
mov
mov
mov
into
adc
cmp
outs
mov
retf
or
div
jnp
repz
mov
pop
rcl
rol
cmp
push
aas
mov
mov
sbb
mov
mov
push
in
lods
out
test
sbb
mov
jmp
jno
call
mov
cmp
inc
jo
outs
arpl
jo
xor
jmp
mov
sbb
data16
(bad)
ins
(bad)
into
jns
out
ret
icebp
sub
inc
call
jae
add
jmp
iret
repz
mov
sub
je
pop
lea
and
inc
iret
add
adc
mov
scas
adc
and
inc
push
pop
push
pushf
mov
push
sbb
ror
sub
xchg
sub
or
push
mov
pop
xchg
cmp
gs
cmp
(bad)
in
hlt
icebp
fcom
in
cmps
out
cmc
adc
imul
pop
ud1
add
jecxz
adc
call
ret
push
daa
xchg
mov
lea
out
call
into
mov
inc
pop
ret
dec
call
call
push
retf
loop
addr16
jne
std
sbb
ins
mov
mov
mov
jg
mov
xor
add
or
lahf
lahf
lea
cmp
lahf
xchg
xor
or
sub
and
movs
dec
mov
jno
push
sub
clc
jbe
or
jno
push
push
test
ret
cmp
dec
popf
jp
je
jge
movs
gs
cmp
mov
(bad)
loopne
imul
dec
daa
push
hlt
dec
call
jnp
pop
adc
fdivr
fld
xchg
cli
jle
dec
or
push
or
or
sbb
cmp
ins
jecxz
jns
xchg
mov
int3
pop
mov
dec
test
out
push
mov
cmp
in
scas
or
xlat
cmp
fist
mov
movs
imul
sar
cli
xchg
cmp
into
cli
cmp
push
popf
jnp
push
pop
sti
cmp
outs
movs
sub
pop
stos
mov
cmp
mov
mov
sbb
jno
repz
out
loop
mov
dec
mov
call
inc
hlt
daa
inc
lahf
scas
(bad)
popa
retf
dec
mov
cwde
and
hlt
jmp
inc
add
jne
pop
das
int
sahf
cmps
ins
data16
cmp
icebp
cmp
mov
(bad)
cmp
xchg
jle
sbb
inc
cwde
sub
fldcw
ror
icebp
pop
(bad)
test
je
mov
mov
dec
push
shl
je
jo
jecxz
pop
pop
or
mov
outs
adc
call
fcomp
sub
and
mov
push
or
popa
in
sbb
mov
(bad)
adc
loope
mov
and
dec
mov
icebp
mov
dec
fisubr
jmp
test
pop
push
scas
mov
sub
jge
xor
jb
sbb
xchg
pop
mov
or
cld
(bad)
dec
cmp
inc
sub
ds
pop
dec
outs
stc
dec
mov
jbe
outs
mov
pop
mov
repnz
sub
jo
repz
cmp
mov
out
dec
or
and
mov
xor
and
in
and
inc
pushf
pop
or
cmp
lahf
adc
sbb
jb
cmp
dec
xchg
xchg
pop
sub
cmp
jno
test
cmp
lods
nop
and
pop
das
pop
xchg
aam
and
mov
mov
mov
int3
push
pop
fistp
retf
jns
or
lods
icebp
cmp
cmp
stos
es
js
mov
jbe
add
sub
lea
les
hlt
xchg
xchg
add
bound
push
jge
ficom
cmps
cmc
adc
push
stos
dec
in
add
push
inc
mov
mov
scas
sub
retf
(bad)
fidiv
lods
ret
xor
mov
outs
push
das
and
fcomp
fiadd
sbb
sbb
fild
mov
dec
arpl
fwait
aas
push
shl
mov
sub
pop
gs
es
scas
sub
(bad)
in
cmps
mov
ds
and
jge
stos
sub
jae
jp
gs
cmp
sub
sar
inc
stos
outs
movs
stc
pop
mov
mov
inc
in
aad
call
ds
xor
and
adc
push
adc
and
mov
(bad)
push
xchg
outs
lods
jp
rcr
pop
sti
sbb
jnp
mov
inc
adc
xor
lahf
mov
add
cmp
mov
inc
push
or
imul
and
enter
fisubr
int
fiadd
out
sbb
cmp
cmps
adc
cwde
stos
jnp
pop
movs
jnp
inc
push
dec
mov
scas
dec
mov
sbb
mov
xor
retf
and
or
mov
mov
shl
fisttp
jae
sub
call
cmp
push
inc
adc
mov
add
leave
xor
sbb
mov
cs
cmps
aad
pop
outs
je
in
cwde
push
or
retf
push
into
mov
test
adc
fadd
xor
idiv
push
(bad)
ficomp
iret
push
jge
fadd
fcom
das
rcr
inc
sub
inc
aaa
or
imul
cwde
test
retf
pop
das
xor
stos
retf
lahf
gs
push
not
xchg
jnp
cmp
in
sub
arpl
pop
int
jne
add
dec
inc
jecxz
(bad)
cmps
mov
and
enter
push
push
std
xchg
sbb
lds
test
ds
(bad)
call
popa
rcr
dec
test
rol
pop
rol
dec
pushf
sbb
stos
arpl
fistp
mov
cmp
dec
(bad)
in
push
dec
mov
adc
cmp
stos
ds
test
imul
dec
pop
aad
stos
lods
push
imul
xchg
ror
and
lods
mov
cdq
pop
xchg
mov
xor
pop
push
sub
cmp
movs
push
jo
xlat
mov
xchg
out
div
jmp
sahf
mov
ffree
push
jae
fist
dec
push
shl
and
inc
jo
sbb
aaa
lods
ret
fist
cmp
mov
das
xor
jge
jno
and
add
jge
mov
xor
xor
lock
xchg
and
adc
push
sub
jns
test
es
or
shl
hlt
and
pop
mov
or
pop
dec
xor
cmp
popa
(bad)
pop
pop
gs
inc
pop
push
stc
mov
push
repz
std
scas
fimul
ret
push
mov
mov
jno
gs
xchg
sbb
mov
push
push
cmp
cmp
inc
dec
popa
mov
loope
add
inc
mov
(bad)
(bad)
push
out
cwde
or
pop
dec
ret
mov
dec
and
dec
das
mov
mov
xor
daa
into
jmp
cmp
jne
push
jno
mov
xor
test
iret
mov
arpl
pop
dec
outs
adc
in
ss
xor
stos
xor
sub
and
(bad)
aas
sar
jmp
cwde
lea
popf
pop
lods
push
xchg
jb
data16
push
xchg
jne
jmp
mov
cmp
mov
inc
dec
out
or
cmps
inc
jns
xor
add
mov
lahf
xor
arpl
xor
scas
fadd
pop
adc
mov
xchg
rcl
inc
adc
retf
jge
lods
pop
call
ins
shr
int3
ret
ret
sbb
xchg
popf
jmp
jmp
icebp
inc
jae
(bad)
call
outs
arpl
add
out
mov
test
xor
mov
xchg
xchg
daa
push
or
pop
or
push
lea
xor
or
and
xchg
les
adc
sub
cmc
in
adc
mov
mov
(bad)
jns
iret
test
pop
sub
aaa
addr16
xchg
and
(bad)
into
arpl
ins
push
nop
dec
sub
(bad)
sti
add
jno
shl
ficom
mov
and
and
xor
nop
daa
out
out
pushf
call
sub
iret
cdq
int
add
dec
int
push
xchg
jl
leave
mov
not
int3
add
arpl
cmp
ds
mov
je
les
mov
or
cld
xchg
jne
sub
mov
xor
outs
sub
cmp
sbb
icebp
leave
addr16
cmc
cmp
popa
push
adc
jo
inc
ror
pushf
ins
xor
adc
cdq
aad
push
push
jnp
push
mov
mov
in
movs
pop
shl
push
pop
sbb
addr16
sub
inc
xchg
or
pop
pop
jmp
scas
in
sbb
add
pop
cmp
jp
cmps
jg
stc
gs
call
outs
adc
pop
jo
inc
scas
dec
dec
push
jge
push
outs
jbe
cmps
dec
and
aaa
adc
stos
xchg
xor
call
jno
mov
shl
test
rol
mov
not
xchg
pop
xchg
test
out
js
jmp
call
sub
retf
pop
data16
mov
sub
adc
sbb
pop
pop
xchg
mov
mov
sbb
dec
inc
jae
cmp
loop
ins
rcl
pop
cmp
sub
mov
jne
sbb
sub
loopne
jnp
repnz
dec
out
in
shr
stos
in
and
xor
push
xchg
clc
mov
push
mov
imul
sbb
sti
adc
inc
jecxz
icebp
mov
icebp
mov
add
jecxz
dec
repnz
int
in
cwde
out
es
push
jbe
mov
pop
fidiv
aas
ror
mov
add
jge
jg
aad
mov
xchg
adc
mov
loop
test
mov
loope
shr
adc
jecxz
scas
push
std
xchg
jmp
push
out
mov
daa
pop
push
adc
jnp
mov
adc
into
mov
pushf
outs
mov
and
repnz
mov
loope
sbb
cli
rcl
call
pop
test
xor
or
(bad)
in
push
aad
cmp
and
ret
sbb
(bad)
hlt
jno
test
inc
sbb
ret
cs
das
dec
cli
daa
xchg
pop
movs
lods
adc
retf
lods
push
int
loop
adc
ins
and
mov
in
or
mov
fcomp
adc
push
pop
dec
xor
aas
cmp
and
pop
fiadd
add
je
int3
jne
xchg
mov
ss
mov
in
mov
xlat
push
(bad)
xor
jno
mov
jno
and
mov
cmp
into
mov
pop
and
adc
sbb
movs
xor
dec
lea
arpl
dec
imul
int3
xchg
push
jae
int3
ins
loop
xor
dec
mov
mov
mov
int3
icebp
adc
xor
sub
add
jo
xor
jmp
push
aam
bound
jne
adc
in
ficomp
sub
lods
mov
inc
vxorps
icebp
mov
outs
pop
stos
pop
sbb
pop
dec
icebp
push
mov
sahf
out
xlat
jmp
out
add
and
inc
out
outs
jbe
sub
mov
xor
out
(bad)
push
xchg
pop
push
outs
int3
jno
sbb
psadbw
(bad)
pop
jmp
fst
pop
dec
sbb
mov
int3
in
dec
sub
add
fcmovb
xchg
inc
clc
inc
test
iret
push
pavgw
outs
not
xchg
mov
inc
das
scas
movs
dec
fidiv
xchg
aas
cmp
mov
xchg
mov
dec
add
mov
fnstcw
mov
dec
mov
mov
loope
pop
fcmovbe
ror
pop
sbb
fs
push
push
ror
xlat
dec
add
int3
push
jmp
fiadd
xor
or
js
cwde
inc
mov
out
jbe
inc
jp
jg
out
cs
mov
or
push
jae
add
rol
xchg
sar
and
out
pop
adc
jle
ins
stc
inc
adc
cld
mov
cmps
dec
sahf
xchg
cwde
cmp
pop
imul
jb
xor
xchg
out
mov
stos
loope
ss
jmp
fs
push
cmp
inc
sub
sahf
cs
outs
xor
nop
fcmovu
push
test
push
push
pop
ja
adc
pop
xchg
or
dec
xchg
iret
add
cmps
aad
daa
and
mov
imul
cmp
xchg
stos
cmp
outs
push
xchg
repnz
mov
dec
std
sbb
repz
mov
(bad)
xchg
scas
or
retf
call
inc
cmp
mov
xlat
int3
jo
sub
cmp
or
aam
pop
lods
repnz
jns
mov
aad
gs
ins
xchg
jmp
shr
mov
jb
dec
retfw
fs
stos
or
sti
mov
adc
add
js
out
mov
mul
imul
stc
or
xlat
sbb
(bad)
xchg
sub
(bad)
sbb
enter
xor
loop
imul
push
bound
retf
mov
and
(bad)
int3
and
outs
(bad)
sub
sub
sbb
aam
mov
and
dec
jb
movs
jnp
xchg
dec
xor
xchg
jb
outs
ds
loope
mov
jbe
xor
xor
scas
push
push
pushf
neg
aaa
call
je
jmp
pop
fild
dec
sti
xor
les
(bad)
call
push
scas
push
sub
aad
mov
pop
or
mov
imul
cmps
test
clc
mov
mov
cmp
push
pop
mov
pop
repnz
pop
and
mov
std
or
mov
stos
cmp
sub
popf
adc
inc
fdiv
repnz
enter
jmp
push
push
add
pop
cli
fcomp
pop
loope
xchg
add
xor
push
movs
in
xor
cmp
adc
(bad)
cmp
sar
pushf
ins
mov
cmp
shl
scas
in
dec
fwait
mov
dec
sub
or
push
push
outs
push
lods
mov
and
clc
mov
xchg
mov
stos
add
jmp
ror
adc
inc
cmp
cmp
in
cmps
es
xor
imul
ret
clc
mov
jne
ss
(bad)
jae
inc
sub
fld
outs
adc
lock
fcmovb
fisub
push
push
cmp
in
mov
inc
fcom
push
push
popa
pop
xlat
or
xor
jle
mov
xor
mov
cdq
fcmovne
icebp
jo
and
jno
jno
add
and
imul
sbb
shl
push
sbb
push
xchg
loop
mov
loope
test
sahf
sub
push
repnz
in
lahf
xor
popf
cs
fidiv
(bad)
jecxz
cli
jb
movs
cmp
into
xchg
ret
adc
js
lea
daa
lds
lock
fiadd
or
movs
lea
or
js
push
push
pop
push
push
int3
sbb
sbb
not
loop
shl
push
and
xchg
push
cmp
cwde
sub
clc
rcr
mov
fwait
pop
in
or
aaa
call
or
inc
xchg
aas
pusha
dec
ror
push
fstp
jmp
out
xor
mov
pop
fwait
sahf
adc
test
add
ins
repnz
repz
(bad)
xor
cli
or
pop
mov
dec
in
shl
pusha
jno
mov
and
push
dec
xchg
cwde
lahf
test
xchg
ret
sbb
popf
out
and
xor
jns
xor
adc
cmp
push
inc
jecxz
pop
xchg
out
xor
dec
aam
imul
loopne
inc
pushf
cmps
fisubr
imul
xchg
mov
mov
xchg
das
push
mov
pop
mov
inc
lods
sub
xor
mov
inc
sbb
pusha
cmp
ds
sub
mov
inc
cmps
stos
mov
retf
data16
fst
out
shl
loop
pop
in
ins
mov
(bad)
stos
(bad)
jmp
xlat
pusha
movs
inc
jmp
cli
xor
hlt
jb
push
dec
lock
jp
or
std
je
scas
xor
jbe
mov
cdq
mov
jmp
test
push
jb
cmp
jae
pop
jge
hlt
mov
jbe
xor
xchg
push
jecxz
xor
dec
mov
adc
fucomip
lds
pop
sub
jp
into
popf
ins
(bad)
mov
mov
shl
jno
pop
mov
fld
std
mov
loop
out
sti
cmc
mov
adc
ret
add
pop
(bad)
push
pop
retf
lds
out
test
jnp
jecxz
repnz
mov
loop
or
xchg
mov
pop
daa
arpl
outs
(bad)
mov
xchg
push
and
mov
xlat
sbb
inc
fstp
into
jle
xor
add
mov
mov
or
or
addr16
mov
pop
sbb
ret
xchg
loop
mov
xor
sahf
sbb
icebp
cmp
repnz
test
call
rcr
push
fld
mov
xchg
sti
mov
and
(bad)
mov
iret
sar
add
sub
mov
shr
in
mov
lock
inc
cli
lock
sbb
stc
das
and
adc
mov
mov
dec
or
popa
push
sahf
add
and
outs
cmp
call
mov
ret
and
in
(bad)
jg
movs
xchg
mov
mov
stos
mov
mov
dec
aam
mov
add
dec
inc
inc
push
adc
add
mov
out
and
jo
jno
adc
cmp
or
leave
shl
gs
repz
push
(bad)
sbb
pop
push
dec
das
push
jnp
stc
or
push
mov
add
ja
cmps
ja
nop
jo
mov
sbb
icebp
dec
and
mov
das
jbe
fnstcw
jg
retf
rcl
and
inc
jle
jno
xlat
(bad)
test
cmp
inc
pop
adc
cmp
cmps
and
mov
jo
jae
fdiv
lock
mov
mov
out
dec
ds
sub
or
dec
xchg
cmp
sar
les
push
dec
fdiv
or
mov
pop
ret
xor
sbb
xor
fwait
mov
frstor
cmp
push
cmp
push
inc
dec
rcl
pop
push
mov
cmp
jmp
dec
aad
dec
sub
dec
in
aad
mov
push
jge
sbb
imul
push
int3
shl
xchg
pop
popa
test
and
scas
mov
ret
in
inc
cmp
cmp
retf
lea
movs
and
pop
push
test
(bad)
ficom
sub
(bad)
out
jns
xor
adc
mov
fsubr
movs
aad
enter
and
enter
or
push
pop
push
jg
cmps
out
cmc
xchg
push
pop
nop
jmp
sbb
mov
in
pushf
bound
fst
jnp
(bad)
inc
(bad)
repz
fs
xchg
sbb
mov
pop
sub
daa
mov
ja
mov
fmul
fwait
jnp
adc
(bad)
cwde
xchg
lahf
xchg
stos
cmp
(bad)
aam
sbb
dec
fcmovu
mov
aad
or
push
in
retf
cmp
test
(bad)
xchg
xor
mov
bnd
push
lahf
aam
inc
mov
cwde
fsubr
pop
dec
stos
sub
mov
push
pop
(bad)
jne
push
mov
sub
adc
inc
dec
imul
test
ss
jno
sbb
fs
adc
mov
loop
(bad)
xor
int
and
sbb
mov
pop
in
mov
jbe
push
inc
jecxz
shl
cmp
jmp
mov
mov
loopne
shr
mov
lea
daa
fcomp
cmps
(bad)
pusha
dec
jmp
mov
(bad)
push
pop
mov
repz
data16
pop
jmp
lods
cmp
push
cmc
cmp
adc
out
iret
mov
and
cmc
pop
imul
mov
xchg
dec
cmc
push
test
mov
dec
and
sub
int
inc
jae
or
movs
jl
jmp
jae
or
je
fbld
nop
add
je
add
mov
iret
enter
cmp
xor
popf
inc
cmps
xchg
or
inc
icebp
das
mov
fsubr
test
sub
push
jnp
mov
retf
fistp
xchg
or
inc
out
mov
xchg
xchg
aas
push
fld
xchg
arpl
push
lods
and
sub
xchg
arpl
in
inc
fwait
data16
stos
mov
mov
push
imul
aam
aas
test
cmp
pop
sub
inc
mov
shl
cmp
in
and
pop
mov
test
push
gs
fst
hlt
or
mov
pusha
call
ret
push
pop
sahf
fldenv
or
pop
inc
mov
cmp
mov
cmp
retf
inc
mov
in
lods
cmc
push
fwait
sti
inc
fwait
(bad)
jge
(bad)
out
(bad)
jp
push
call
adc
pushf
call
cmps
jle
dec
aas
outs
jmp
std
lods
clc
das
stos
mov
jg
stos
outs
push
sub
test
cmp
ins
and
rcl
sub
lahf
xchg
std
cmp
popf
or
imul
push
add
jnp
sub
push
mov
stc
xor
cmp
mov
test
iret
ins
mov
jne
sbb
push
pop
mov
es
dec
cmc
stos
mov
mov
loope
sar
pop
add
mov
mov
call
into
mov
cmp
xchg
cmp
cdq
retf
sbb
mov
sbb
mov
sbb
sub
stos
sbb
lea
int
pop
and
cmp
inc
fnstsw
cmp
add
pop
xor
xor
lods
arpl
or
push
jecxz
(bad)
ror
in
cmp
icebp
inc
stc
sub
xchg
pop
jl
in
push
adc
add
jecxz
xor
dec
aam
cli
fsub
cli
sub
das
push
add
jno
and
(bad)
cdq
cmp
leave
iret
mov
xchg
retf
(bad)
mov
int3
jp
not
mov
mov
shl
push
push
push
cmps
mov
ins
(bad)
or
xor
and
(bad)
sti
adc
push
int3
push
push
loop
mov
xchg
jbe
lea
fisubr
cmc
sbb
xchg
add
fst
bswap
cmc
(bad)
out
mov
mov
push
stos
aad
imul
aas
add
push
adc
push
mov
inc
(bad)
cmp
sub
sub
sub
call
push
mov
push
in
xchg
mov
cmp
test
ins
pushf
and
loope
dec
dec
imul
fcom
clc
inc
cmp
xchg
cdq
imul
jnp
aam
mov
xor
cdq
cmp
hlt
popf
call
stos
sub
inc
mov
les
mov
sbb
jp
jnp
scas
data16
inc
adc
repnz
xchg
je
push
loope
adc
sub
stos
mov
sub
jg
push
scas
inc
stos
xlat
hlt
pop
stos
jmp
jb
enter
cdq
enter
arpl
inc
out
push
jge
retf
movs
retf
into
pop
stc
addr16
(bad)
mov
hlt
jmp
xlat
test
or
push
or
add
sub
adc
mov
xlat
jno
mov
push
mov
loop
rol
ss
scas
shr
ins
xor
fcom
and
dec
nop
sbb
add
out
lods
dec
sub
loopne
jne
sti
fcom
sbb
pop
cmp
or
ror
or
mov
pop
mov
or
(bad)
mov
inc
fs
sbb
inc
sub
and
sahf
add
(bad)
xor
mov
out
push
adc
ret
mov
mov
or
mov
mov
aaa
outs
cmp
inc
cmp
fld
xlat
out
mov
mov
mov
push
push
adc
mov
bound
rep
lods
add
mov
addr16
movs
xchg
mov
in
and
jne
add
jle
clc
scas
xor
or
ins
sub
jp
mov
(bad)
shr
test
mov
mov
or
movs
and
stc
lods
fsub
xor
stos
jg
hlt
jecxz
jmp
push
jo
xor
imul
mov
mov
loopne
pop
or
jno
add
aam
lock
xor
stos
cs
retf
(bad)
mov
inc
cli
repnz
fst
jge
adc
push
repz
je
cli
mov
or
stos
sti
mov
fs
jecxz
and
add
or
sub
mov
jg
jmp
jmp
sbb
xchg
push
shl
xchg
sub
push
mov
in
fstp
aam
adc
loope
jae
xchg
int
scas
inc
cmp
xor
and
rcr
jo
cwde
dec
jbe
sti
or
cmps
jmp
cmc
add
cmp
xor
cs
fisttp
push
or
dec
inc
jne
jno
lods
cmp
dec
xor
xor
pop
mov
add
mov
or
arpl
dec
xor
imul
(bad)
lock
xchg
std
hlt
ins
dec
push
pop
jne
aad
mov
mov
enter
pop
loopne
and
pop
cmp
movs
mov
lods
loop
and
dec
sbb
sbb
add
les
and
xchg
xchg
lahf
push
push
out
cmc
dec
loopne
jl
mov
iret
inc
xor
and
or
and
pushf
mov
pop
inc
add
out
(bad)
sbb
call
call
add
es
inc
sub
push
ret
arpl
or
cmp
and
dec
jp
cmps
mov
gs
jle
push
ret
cmp
cmp
sbb
aam
adc
jg
in
into
fdiv
sub
(bad)
int
fld
inc
inc
push
jo
pop
outs
xor
cmps
jno
call
inc
cmp
and
pop
shr
cmp
repnz
pop
cmc
mov
clc
inc
pop
add
lods
bound
mov
ss
ds
adc
and
fisttp
mov
pushf
jecxz
test
inc
movs
dec
leave
add
stos
jmp
adc
ror
or
sbb
push
dec
cdq
jmp
cmp
pop
cwde
xor
push
mov
out
int3
pop
lock
dec
xchg
cli
pop
push
cmp
xlat
inc
and
lods
lahf
pop
lods
add
push
mov
cmp
xchg
ins
push
icebp
xchg
push
mov
cdq
pop
out
loopne
call
mov
pop
mov
push
fadd
aaa
pushf
out
mov
push
shl
sbb
mov
(bad)
leave
xor
inc
bound
arpl
xor
std
fistp
and
cli
test
sub
push
das
jbe
fidiv
mov
jmp
bound
das
dec
in
retf
pop
cli
daa
sub
imul
mov
inc
clc
outs
cmp
xchg
sti
sbb
nop
or
mov
out
das
cdq
aad
sbb
sbb
and
out
mov
das
pop
xchg
sub
mov
cmp
mov
xor
not
pop
aad
imul
sub
mov
stos
cmp
dec
or
(bad)
sub
jno
sbb
pop
xchg
jl
jns
and
and
stos
mov
dec
or
jno
aad
std
and
imul
push
arpl
iret
lods
movs
mov
push
dec
clc
rol
adc
imul
call
push
in
ret
retf
aas
lods
stc
pop
outs
jnp
and
cmps
add
jmp
or
xchg
jecxz
xchg
aas
cmp
mov
add
ret
adc
jge
add
add
push
xchg
mov
dec
jg
jae
mov
or
mov
sbb
add
pushf
sbb
jb
aaa
nop
scas
mov
or
push
inc
pop
out
and
pop
mov
and
icebp
stos
mov
(bad)
js
popa
je
push
jmp
mov
push
popa
mov
jecxz
fcmovnbe
aam
fs
xor
mov
mov
nop
fdiv
dec
push
into
and
leave
jo
pinsrw
into
ret
scas
rcl
(bad)
jmp
push
mov
push
jb
lods
data16
xchg
bound
cmp
mov
addr16
push
sbb
dec
retf
cmp
jmp
inc
cwde
shl
cmp
and
xor
das
int3
mov
fwait
arpl
pop
pop
not
cmp
inc
sub
sbb
inc
cs
mov
lock
arpl
lahf
mov
out
add
sub
in
push
pop
popa
mov
es
ret
(bad)
ins
sbb
mov
pop
inc
xchg
sbb
xlat
xchg
sbb
(bad)
aaa
sub
push
shl
fnsave
outs
pop
push
out
repnz
dec
jmp
cs
mov
jno
inc
in
imul
outs
push
inc
or
or
push
and
sahf
fldenv
mov
push
jae
dec
inc
fistp
jbe
cmp
add
xchg
retf
inc
cwde
add
mov
fcomp
jmp
outs
mov
sbb
fs
jle
in
push
lahf
lods
div
lods
idiv
dec
jno
push
lods
rcr
in
and
dec
enter
arpl
enter
inc
pushf
push
adc
aam
mov
mov
out
adc
push
mov
push
or
adc
out
jle
xchg
in
xlat
je
or
out
mov
lds
das
inc
rol
js
(bad)
icebp
cmc
and
stos
daa
lods
xor
rsm
std
enter
cmp
fisub
fidiv
inc
stc
retfw
jae
enter
movs
iret
in
or
ret
clc
das
call
pop
sbb
adc
loop
add
and
dec
mov
fs
pop
movs
repnz
aaa
stos
ds
hlt
dec
and
mov
pop
les
jb
inc
sub
xchg
daa
lock
scas
out
out
out
fnsave
add
(bad)
(bad)
mov
(bad)
sub
push
jge
cli
mov
lds
xchg
inc
or
fcomp
sbb
inc
js
data16
enter
or
(bad)
push
fstp
dec
jnp
(bad)
pusha
or
int
and
xor
xlat
aas
mov
pop
les
sti
mov
jmp
mov
mov
and
jns
ss
mov
mov
sbb
mov
int
mov
dec
or
jb
and
int3
pop
xor
out
mov
jae
cmps
adc
icebp
data16
cmp
(bad)
mov
loop
jp
daa
call
cmc
jmp
adc
inc
and
mov
jbe
xchg
jecxz
mov
jo
pcmpgtd
das
push
mov
adc
jl
adc
pop
int3
adc
push
push
push
jmp
xor
push
imul
dec
jecxz
adc
xchg
loope
repnz
dec
stc
nop
lea
pop
pop
jns
and
loope
cwde
nop
xchg
xor
mov
jb
mov
(bad)
ret
cmps
leave
add
mov
(bad)
in
(bad)
mov
jecxz
or
mov
aas
stos
das
sar
mov
pop
out
jp
mov
cwde
(bad)
mov
leave
daa
pop
fucomip
repnz
ja
jb
in
es
xor
xor
ins
xchg
inc
lock
jnp
inc
fild
fwait
pop
cmp
pop
dec
jp
cmps
scas
xor
pushf
and
cmp
test
mov
add
dec
sbb
inc
pop
inc
sar
adc
out
adc
jp
stc
imul
ds
rol
xchg
lods
arpl
rcr
das
xchg
shl
mov
in
mov
inc
sbb
mov
sbb
jb
pusha
cdq
mov
fwait
pop
dec
mov
inc
fistp
inc
sbb
mov
dec
mov
and
inc
sub
mov
call
mov
loop
push
and
push
xlat
daa
daa
mov
inc
mov
int
or
lock
in
js
in
mov
push
(bad)
imul
(bad)
icebp
cmp
fisttp
(bad)
out
jge
inc
ins
(bad)
pop
xor
push
retf
push
leave
mov
dec
push
sar
std
inc
dec
pop
and
arpl
inc
adc
inc
inc
push
out
and
dec
fsub
dec
pop
sar
test
jb
sbb
lods
(bad)
aam
cwde
mov
mov
jb
and
jmp
inc
jne
mov
cmp
icebp
mov
jne
xor
and
dec
push
cmp
aam
dec
cli
or
int3
fs
push
pop
jmp
sahf
push
or
mov
pop
mov
mov
imul
push
xchg
mov
jg
leave
sub
(bad)
fisub
push
arpl
and
dec
pop
inc
mov
(bad)
mov
mov
ds
mov
xchg
jle
adc
and
pusha
mov
mov
fs
cmp
cmps
sub
adc
call
int3
jne
ja
xor
jb
push
xchg
xor
clc
ins
adc
(bad)
and
push
into
out
retf
test
inc
xchg
jo
and
int
shl
cmp
inc
sbb
mov
mov
push
retf
pop
mov
fisub
lods
jns
inc
icebp
or
mov
outs
mov
ja
outs
cmp
(bad)
jo
inc
sub
stos
das
mov
add
pop
stos
fild
jle
out
pushf
out
pop
into
retf
(bad)
sti
dec
mov
push
sahf
xchg
dec
pop
push
push
mov
and
stos
aaa
test
inc
jecxz
xor
cmp
es
stc
inc
fwait
push
rcr
mov
cli
int3
int3
retf
stos
dec
outs
adc
inc
repz
xchg
enter
je
add
mov
popa
bound
fs
push
xor
icebp
cs
adc
(bad)
int
outs
imul
or
ja
shr
pop
pop
fstp
xchg
ds
mov
into
pop
(bad)
cmps
cmp
js
mov
outs
inc
jae
ins
mov
jo
mov
jmp
jo
cs
push
call
pushf
gs
ja
(bad)
cmp
stos
es
push
test
inc
mov
int3
pop
les
hlt
cmps
and
out
push
aam
sbb
in
ins
add
push
aas
mov
repnz
mov
fist
jmp
addr16
rcr
addr16
jecxz
jge
ret
imul
pushw
ret
dec
sbb
pop
or
adc
test
xchg
mov
out
xchg
loop
out
mov
fdivr
cmp
adc
fnstcw
inc
push
mov
and
sbb
repz
pushf
arpl
ins
mov
sub
mov
mov
sub
add
add
jb
gs
lock
int
pusha
inc
out
xchg
jl
in
int
mov
mov
stos
dec
and
(bad)
cmps
sub
push
jle
inc
rcl
xor
sbb
enter
outs
icebp
adc
clc
adc
cmps
xor
retf
gs
cmp
das
xor
xchg
cmc
test
iret
outs
fdiv
fld
pop
das
cmp
lahf
push
jbe
jp
xchg
mov
sbb
cmp
mov
imul
call
mov
outs
bound
xchg
enter
addr16
xchg
fnstsw
mul
movs
addr16
mov
es
mov
fadd
push
ret
dec
bound
cdq
les
loopne
mov
mov
outs
gs
pop
mov
aam
push
aam
mov
gs
add
rol
mov
jge
repnz
ins
inc
gs
cmovnp
out
cwde
sub
sub
call
sub
cdq
cmp
cmp
jmp
or
and
pop
xchg
mov
mov
inc
in
clc
ss
jne
xchg
cdq
cdq
jns
mov
inc
nop
cmp
push
hlt
pop
les
dec
push
jmp
test
jge
push
xchg
rol
rol
inc
jl
stc
jne
lahf
ss
iret
mov
inc
add
mov
xor
icebp
push
jne
or
jne
sbb
pusha
cmp
in
mov
lods
std
pop
mov
or
sub
mov
and
hlt
retf
jp
repnz
aad
mov
and
into
sub
outs
push
or
mov
and
vfnmadd213pd
hlt
in
push
clc
sub
jns
push
mov
loope
jl
gs
test
ret
push
sbb
xchg
ja
mov
daa
and
aad
xor
adc
or
mov
mov
daa
pop
scas
inc
xor
adc
(bad)
es
mov
jb
sub
inc
cmp
and
inc
push
mov
scas
int
ficomp
sub
jbe
add
dec
ins
or
int
lock
xor
dec
xchg
(bad)
dec
pop
or
sbb
or
sub
push
push
sahf
pop
movs
mov
jns
outs
sbb
call
mov
ins
dec
cmp
push
test
loope
jl
add
sbb
sub
js
or
add
sar
dec
shr
cmp
sub
dec
mov
cmc
inc
iret
loopne
mov
mov
bound
and
bound
ret
icebp
cmp
bound
mov
sub
lock
call
inc
xor
int3
xor
mov
push
add
inc
push
cmp
pushf
add
or
xor
in
and
std
push
leave
dec
add
fnstcw
mov
mov
cwde
imul
lahf
pop
cli
(bad)
jg
fwait
je
mov
add
xchg
mov
pop
push
sbb
rol
call
adc
cdq
add
pushf
add
xchg
xchg
push
sub
xor
dec
sub
mov
dec
hlt
and
scas
pop
sti
scas
bound
push
sbb
mov
retf
aaa
or
les
add
in
mov
jbe
lea
pop
cli
sbb
xchg
cmp
leave
ins
push
or
or
fincstp
fisubr
cmc
stc
stos
out
mov
mov
rcr
sub
cdq
push
jb
inc
cwde
pop
or
arpl
inc
ret
xor
dec
clc
(bad)
in
jp
add
sbb
clc
or
arpl
out
ret
cmps
and
push
push
movs
jnp
sbb
(bad)
mov
mov
call
(bad)
pop
leave
js
sbb
mov
les
cdq
fidiv
fld
loop
mov
ja
cmp
jne
jnp
mov
popf
cmp
out
xor
inc
aad
retf
ins
mov
mov
or
sbb
sbb
call
int
lahf
(bad)
mul
and
dec
jle
mov
push
xchg
jge
pop
push
add
jmp
xchg
sbb
fadd
movs
pop
ret
movs
pop
int3
bound
jo
and
jecxz
pop
movs
inc
jl
into
push
xor
enter
xor
(bad)
hlt
out
push
push
mov
outs
pop
test
pop
sub
xchg
stos
mov
or
jmp
aaa
jp
add
je
mov
out
test
push
push
cmp
push
ret
push
sahf
xor
out
dec
lea
dec
xor
jnp
cld
das
jns
(bad)
pop
adc
stos
adc
imul
cmp
jo
mov
imul
jecxz
xchg
loop
sti
pushf
sti
sub
into
not
scas
fild
inc
ins
scas
sub
retf
lea
loope
xchg
mov
dec
and
jmp
or
sbb
fcmovu
paddusw
mov
inc
stc
loop
inc
and
fisub
cmp
adc
sbb
jmp
test
out
sub
push
cs
lahf
sbb
test
(bad)
aam
scas
inc
pushf
into
loope
cmp
ficomp
inc
or
mov
inc
mov
repz
sbb
in
xor
adc
pop
dec
fwait
pop
fld
jge
dec
in
leave
mov
sub
sub
cmp
mov
leave
dec
dec
(bad)
xor
das
shr
cmp
jge
jmp
push
mov
pop
xchg
push
xor
aas
jecxz
xor
cmp
xchg
mov
jg
into
retf
imul
cmp
sbb
(bad)
and
cmp
lock
aaa
sbb
pushf
into
int3
stos
pop
xor
lods
xchg
fcomp
paddsb
mov
iret
adc
js
push
sbb
sbb
cli
scas
enter
mov
jnp
xchg
cmp
and
ins
ins
mov
adc
cwde
push
mov
test
pusha
cmp
push
adc
sub
pop
mov
out
cmp
cmp
jbe
outs
cmp
push
fistp
lds
xchg
add
fucomi
mov
daa
cli
and
inc
repz
outs
cmps
(bad)
push
mov
mov
js
xor
push
xchg
iret
lea
jl
out
out
loope
mov
and
sbb
or
icebp
mov
in
loope
inc
ins
lahf
jo
je
add
repnz
mov
dec
fldcw
sbb
adc
sub
lods
sti
pushf
sub
mov
dec
repnz
xor
sub
mov
test
fdiv
out
mov
adc
push
pop
jns
pop
aad
jp
out
push
jne
cmp
not
jle
in
inc
pop
cmps
jp
mov
jae
cld
inc
ins
mov
gs
push
or
xchg
outs
dec
jnp
int
dec
sub
je
arpl
jg
add
loope
loopne
ins
mov
jb
aaa
inc
and
call
sub
pop
pop
cli
out
dec
adc
call
jbe
movs
add
jecxz
cmp
cdq
xor
mov
push
mov
push
fisttp
sbb
add
push
jp
adc
sbb
cmp
fcmovnu
fild
sbb
cmc
mov
mov
xchg
and
lock
dec
gs
retf
mov
out
ror
call
xor
or
retf
aam
cmp
inc
sbb
shl
push
push
mov
shl
and
pop
inc
and
xor
jns
or
fisttp
ja
add
sub
(bad)
mov
nop
pusha
ins
sbb
shl
call
pop
aaa
std
aaa
in
mov
jbe
lea
and
getsec
je
inc
inc
repnz
loope
les
sub
dec
adc
sub
das
imul
mov
mov
pop
lds
push
out
aaa
das
loopne
pop
pop
clc
repz
push
add
retf
xor
lahf
stc
outs
cdq
popa
cs
push
mov
mov
sbb
add
mov
jae
cmpxchg
and
cli
popa
es
pop
mov
repz
sbb
add
jmp
gs
inc
jns
rol
ret
push
enter
xchg
adc
loop
jb
leave
mov
call
jmp
mov
and
mov
in
sbb
or
mov
or
dec
fsubr
(bad)
je
jb
mov
scas
cmp
xor
push
retf
es
cmps
add
sub
mov
data16
cmps
push
add
mov
mov
dec
imul
(bad)
nop
sbb
adc
mov
dec
mov
sbb
cmp
pop
cmp
into
icebp
cld
mov
bound
adc
ins
inc
(bad)
push
mov
and
or
jecxz
xchg
std
cdq
jmp
xchg
movs
xchg
gs
jbe
and
lds
mov
add
shl
push
mov
jns
retf
pop
test
xor
cmp
sbb
sahf
sub
push
pop
icebp
sub
dec
call
pop
aas
pop
jmp
jg
sbb
and
pop
jo
sub
call
mov
dec
into
sbb
add
mov
mov
pop
test
shl
jno
push
call
or
popf
xchg
icebp
stc
mov
popf
jecxz
add
pop
inc
mov
push
out
xor
add
and
das
and
shl
xchg
ins
in
sbb
push
lds
mov
fxch
and
xor
mov
in
(bad)
jno
mov
xor
adc
mov
ret
outs
and
movs
les
test
outs
push
fist
jns
out
shl
outs
jnp
mov
fs
aam
int3
xchg
pop
mov
cmp
mov
or
or
mov
sub
and
mov
mul
xor
ss
cmp
push
fwait
cdq
into
icebp
int3
pop
pushw
icebp
shl
fwait
lods
adc
mov
sbb
mov
jbe
ins
mov
fcom
test
out
jns
xor
sbb
sub
in
or
iret
pop
mov
in
dec
div
and
push
mov
cs
ja
or
cs
lock
loop
inc
jecxz
cmp
(bad)
sbb
mov
mov
jp
cmp
xchg
jno
(bad)
les
call
lods
dec
std
and
xchg
fadd
and
lahf
les
mov
jmp
xor
pop
xchg
mov
cmovl
bound
lock
shl
gs
adc
adc
sbb
or
invd
cli
or
push
ret
inc
add
fmul
stos
add
pop
stos
lods
lods
fnsave
outs
jg
cli
dec
xchg
push
pop
jae
mov
push
je
movs
cmp
syscall
xchg
jecxz
in
xchg
sar
popf
or
cmp
dec
and
sahf
jns
rep
xor
push
test
inc
aad
sub
(bad)
push
push
xor
test
push
out
into
dec
mov
pushf
mov
fsub
or
add
ret
push
mov
pusha
and
shl
or
in
xor
adc
push
push
dec
jae
xchg
jecxz
inc
call
aad
adc
or
pop
fnstcw
xchg
mov
push
scas
mov
sub
fst
push
mov
push
fcmovnu
out
jmp
and
and
cmp
dec
mov
popf
aaa
jp
push
pop
into
or
mov
jge
jmp
int
jne
fdivr
jle
in
push
mov
imul
(bad)
shl
dec
sub
iret
cmps
cmps
ds
cmp
fsubr
sub
out
dec
test
out
adc
addr16
int
daa
out
sbb
dec
cmp
sub
jno
sbb
xchg
loope
cmp
hlt
rcl
stos
dec
push
adc
cmp
cs
imul
xor
cmp
push
pop
or
mov
retf
adc
(bad)
and
mov
and
mov
in
stos
in
pop
and
in
sub
shl
xchg
cmp
fistp
ret
mov
cmp
jl
fld
cmc
jno
mov
xor
fld
popa
add
fmul
and
out
and
push
or
jb
sub
(bad)
mov
(bad)
push
scas
sub
or
push
mov
push
aam
add
xchg
xlat
inc
aad
nop
jecxz
xchg
cmp
scas
out
das
xor
retf
fdivr
call
cmp
call
xchg
lahf
jecxz
dec
xor
loope
sbb
mov
repz
mov
jne
sti
inc
int3
pop
popa
cli
sbb
les
dec
fist
adc
add
mov
in
push
fcomp
sub
xchg
push
cmp
and
push
cmp
fstp
jnp
into
test
test
outs
sar
push
add
cmp
and
mov
(bad)
popa
gs
push
adc
ret
jnp
jb
jae
sbb
clc
push
add
and
mov
and
(bad)
pusha
fst
inc
pop
jo
mov
cmp
outs
in
test
xor
dec
das
adc
mov
cmp
pop
cli
cwde
stc
stos
push
pop
mov
js
inc
mov
pop
mov
xchg
popf
sar
frstpm(287
clc
outs
mov
inc
in
inc
call
push
dec
imul
cli
lods
aad
lods
(bad)
adc
xchg
je
in
call
mov
ss
sub
pop
mov
ds
inc
jb
ret
je
push
data16
ret
xor
loopne
sbb
loope
nop
int
push
sahf
xor
loop
retf
jb
data16
xchg
push
loop
mov
dec
fwait
jmp
lods
sub
mov
mov
mov
jb
movs
pop
xchg
ret
aad
pop
movs
mov
scas
ds
jmp
mov
sub
(bad)
jmp
loop
loope
ret
loopne
mov
mov
(bad)
outs
fld
fadd
nop
inc
add
rcr
dec
xchg
pop
or
push
inc
es
mov
stos
lods
aad
call
aad
fs
cmp
dec
mov
xlat
mul
aam
les
or
add
(bad)
loop
popa
cmp
icebp
and
lock
call
sub
ins
or
aas
push
jmp
dec
mov
popa
jge
and
or
jmp
das
and
into
test
scas
and
lods
ins
pop
movs
sti
xor
aad
in
mov
fild
jno
ret
stos
mov
mov
xchg
int3
xor
sub
push
shl
sbb
(bad)
mov
sbb
pop
mov
mov
jo
out
add
xchg
mov
fst
xchg
push
call
mov
repz
cdq
inc
lahf
sbb
xlat
sbb
adc
xchg
mov
sbb
sbb
data16
js
and
adc
(bad)
loope
movs
sbb
rcl
mov
inc
adc
into
mov
fs
xor
ret
pop
adc
int3
and
fsubr
ds
mov
bnd
fdiv
popf
mov
dec
imul
(bad)
jo
dec
jae
iret
pop
xlat
jp
inc
stos
fild
fs
mov
scas
(bad)
fisub
jae
pop
leave
sbb
call
(bad)
das
clc
mov
hlt
imul
fnsave
outs
test
push
leave
imul
popa
cs
and
sbb
movs
mov
retf
mov
sub
outs
push
int3
pop
xor
lods
gs
retf
test
sub
jle
imul
(bad)
out
adc
or
imul
fcmovne
mov
jle
test
cld
call
inc
stc
cmc
add
imul
fisub
jge
dec
aaa
cli
xor
imul
sub
aam
imul
xchg
adc
sbb
mov
push
inc
int
xor
mov
mov
cmp
(bad)
mov
sub
(bad)
fdivr
mov
cmp
mov
sub
mov
inc
inc
inc
push
mov
mov
movs
icebp
cmp
mov
sahf
mov
cmp
mov
sub
mov
dec
jne
repnz
data16
lods
xor
mov
inc
jge
sbb
adc
fidiv
cmps
sbb
enter
rcr
xchg
mov
xchg
mov
icebp
je
xor
jl
mov
fld
fcmovnu
in
add
or
push
aam
dec
inc
dec
xchg
mov
pop
xchg
lods
mul
adc
sti
cmps
clc
inc
xor
inc
std
leave
push
xor
retf
sbb
test
dec
aas
icebp
fidivr
in
push
or
mov
mov
stos
mov
fnsave
outs
mov
or
xor
adc
xchg
fimul
sbb
dec
in
stos
out
mov
outs
aam
lods
xlat
xor
out
arpl
inc
mov
sbb
mov
js
js
add
dec
in
or
inc
es
mov
and
fsubp
mov
cmp
aad
jnp
xor
and
daa
xchg
outs
test
rol
imul
cmps
dec
pushf
sahf
sub
jb
jmp
(bad)
sbb
daa
stos
(bad)
and
push
nop
fdiv
sbb
or
outs
lea
adc
arpl
(bad)
pop
leave
mov
adc
mov
call
das
adc
sbb
mov
inc
mov
dec
lods
jae
dec
jae
sub
push
mov
das
icebp
hlt
push
pop
gs
cs
fucomip
mov
leave
and
inc
or
push
sub
mov
shl
xchg
push
lods
adc
jne
imul
jmp
inc
add
pop
movs
and
and
add
repz
lods
fucomip
mov
out
aaa
xor
sbb
dec
test
leave
mov
ja
in
addr16
sti
mov
pop
dec
popf
fisubr
jae
popf
jnp
call
add
mov
dec
hlt
push
inc
mov
xchg
lds
leave
out
cmp
add
push
dec
pop
es
and
add
into
mov
pop
das
cmp
add
clc
adc
inc
xor
sbb
mov
jae
mov
pop
sahf
dec
mov
repnz
das
xor
ss
push
jno
repnz
xchg
xor
test
aad
cmp
scas
loope
add
mov
fadd
inc
xchg
es
jecxz
cwde
dec
sbb
adc
push
imul
cmps
jge
jmp
jns
adc
std
lods
pushf
mov
jnp
fcmovbe
push
scas
mov
sbb
pop
inc
push
cs
sub
inc
out
dec
jmp
std
mov
sub
out
push
jge
icebp
out
daa
or
push
pop
push
pop
out
mov
iret
jno
cmps
das
cs
imul
aam
fwait
adc
dec
sar
cli
jmp
leave
inc
mov
add
mov
and
adc
push
mov
(bad)
push
cmps
aaa
mov
fxam
or
cmps
int3
scas
popf
pushf
add
dec
xchg
and
daa
sub
mov
push
cmp
pushf
adc
cmp
cvtdq2ps
gs
dec
mov
movs
sub
and
(bad)
jl
out
movs
scas
out
sbb
data16
shl
aad
sbb
daa
adc
pop
outs
mov
mov
hlt
mov
xchg
pop
mov
popa
xchg
iret
pusha
add
shl
lods
in
clc
push
lock
out
mov
stc
xor
jmp
mov
jmp
cmp
sub
sbb
sub
dec
xor
and
inc
xor
mov
xchg
es
jae
jae
cmp
jp
sbb
jmp
xchg
arpl
in
ret
adc
mov
cmp
jns
cmps
xor
test
ss
shl
cmp
sbb
xchg
mov
push
aas
push
dec
call
into
sbb
sahf
ss
mov
in
mov
push
in
mov
(bad)
fstp
sbb
dec
push
imul
call
pop
sbb
push
mov
leave
jnp
push
call
call
call
pop
(bad)
scas
out
loope
adc
cmp
int
fisub
cmp
jle
(bad)
sub
call
test
ror
fiadd
lods
xchg
cmp
mov
and
sahf
aaa
pop
(bad)
std
sub
inc
in
inc
gs
mov
push
cmc
push
mov
add
push
pop
jle
mov
fisttp
js
jp
cmps
xchg
ffreep
mov
inc
xor
sbb
inc
adc
fs
scas
xor
sahf
dec
adc
movs
push
aam
add
mov
imul
and
or
xor
mov
dec
jne
ror
cwde
and
ins
(bad)
popa
rol
pusha
jl
and
xchg
sub
(bad)
mov
sbb
aam
icebp
es
addr16
sub
mov
dec
push
hlt
mov
xchg
aas
mov
sar
mov
push
push
mov
mov
popa
sbb
pusha
int
add
fwait
mov
clc
push
mov
fwait
mov
fdiv
cdq
movs
xor
pusha
call
lods
sti
repnz
add
sahf
sbb
jge
hlt
or
imul
pushf
pop
cmps
repnz
lods
sub
repnz
add
inc
or
inc
xor
popa
in
dec
arpl
clc
les
shl
fwait
jmp
push
mov
cmp
sbb
shr
fsubp
mov
jecxz
fisttp
lods
jecxz
loop
scas
fild
fs
or
in
fist
test
inc
outs
iret
inc
jnp
pop
int
imul
adc
cmp
inc
mov
mov
daa
ins
mov
ss
ficomp
jmp
add
stos
fcomp
push
mov
xor
mov
mov
pop
jne
cmc
add
in
ds
adc
jno
cmp
sub
jno
sbb
and
cmp
(bad)
jecxz
mov
xchg
and
out
xor
test
xchg
or
mov
sbb
and
call
movs
leave
inc
sub
imul
add
leave
rcr
repz
mov
ficomp
into
scas
inc
adc
ins
call
jae
jae
dec
xor
xchg
mov
xor
fcomp
add
xlat
(bad)
adc
ins
lods
aas
jl
inc
push
cmp
out
sub
add
les
fs
scas
xchg
sbb
pop
cmc
das
daa
fld
or
popf
ror
out
int
test
push
(bad)
pop
push
xor
or
enter
ror
pop
es
mov
jnp
xor
outs
ret
(bad)
in
ret
stos
sbb
xchg
cmp
pop
cmps
xchg
mov
mov
pop
xchg
mov
aas
and
push
add
mov
jb
aad
add
jle
inc
jp
or
call
mov
mov
xchg
iret
mov
(bad)
mov
ret
into
dec
add
sbb
xor
rol
retf
mov
popa
js
adc
mov
or
mov
ins
push
adc
mov
imul
pop
dec
cmp
xor
retf
iret
rol
popa
stos
mov
mov
arpl
jg
cld
jp
pop
jbe
mov
div
pushf
add
es
std
jge
call
mov
call
push
push
dec
push
sti
push
icebp
pop
xchg
les
push
dec
aaa
fist
jle
lock
cli
retf
push
aad
sbb
mov
out
mov
cmp
sbb
cmc
push
out
push
mov
pop
xchg
add
mov
sti
in
mov
lea
or
mov
arpl
pushf
inc
(bad)
fsub
popf
fimul
es
scas
fwait
dec
(bad)
fld
ja
sahf
leave
test
mov
sbb
loope
pop
xchg
cld
js
les
sar
push
push
xchg
adc
mov
imul
pop
inc
cmp
inc
retf
ins
shl
int
test
mov
iret
mov
test
shl
sbb
or
pop
daa
loopne
or
push
jae
rcl
sbb
cmp
icebp
jecxz
repnz
sar
ja
ror
scas
je
lds
and
stos
cmp
daa
fild
sbb
mov
dec
out
out
jno
mov
loope
neg
movs
ret
sub
jmp
ds
into
pop
xchg
es
mov
jmp
repnz
(bad)
(bad)
sbb
nop
test
mov
mov
xlat
mov
test
lahf
inc
sar
mov
movs
aas
push
xbegin
test
push
(bad)
adc
aad
jno
out
loope
cmp
into
popa
xchg
out
daa
mov
movs
cmp
mov
rol
xor
pop
imul
mov
push
adc
jge
aas
loope
xchg
jmp
jb
shr
inc
jecxz
cmp
jno
mov
retf
jno
dec
xchg
arpl
cli
and
jmp
and
(bad)
and
sahf
and
mov
push
ins
pop
imul
xchg
or
jns
fld
sar
or
popa
test
repnz
inc
inc
lods
dec
fs
cli
and
ret
sub
fld
and
sbb
inc
fld
xchg
(bad)
retf
push
loop
arpl
outs
sub
stc
mov
cmp
mov
nop
ret
jp
mov
inc
in
xor
xchg
arpl
(bad)
xor
push
popf
jo
loope
out
mov
inc
hlt
outs
mov
call
jmp
sbb
fisttp
std
sbb
adc
or
jb
out
ins
(bad)
mov
pop
stos
ja
aaa
mov
xor
mov
or
pusha
pushf
mov
sbb
add
popa
add
xchg
(bad)
and
mov
mov
inc
xchg
dec
repz
sub
fdivr
pusha
pop
jecxz
jno
icebp
stos
mov
and
mov
call
mov
pause
rcr
pop
shl
sub
xlat
dec
cmp
mov
dec
mov
cmp
cs
pop
addr16
shl
push
nop
sub
inc
shl
(bad)
mov
(bad)
outs
jns
ds
outs
inc
lods
pushf
mov
cmc
inc
cwde
dec
mov
xor
mov
adc
adc
fwait
mov
ror
repz
sbb
push
out
in
xlat
cld
sub
add
xchg
jg
repnz
adc
out
sbb
mov
add
fwait
sub
dec
call
shl
inc
sub
stos
push
inc
int
jl
jecxz
xchg
xchg
repnz
iret
pop
jnp
fdiv
mov
inc
cmp
push
and
fsub
retf
push
adc
mov
add
xchg
leave
mov
pushf
shr
cwde
dec
mov
out
jne
test
sti
data16
cdq
call
push
cwde
xor
js
aad
jle
aas
pusha
fisttp
fsubr
sbb
push
xchg
xchg
jecxz
mov
es
mov
(bad)
jno
inc
cmps
sub
or
fwait
xor
push
pop
jo
sub
popf
les
iret
and
cmp
or
rcr
das
gs
int
mov
lahf
mov
cmp
jnp
cmp
imul
or
mov
cli
rcl
imul
xor
dec
xchg
pop
pusha
xlat
sahf
or
and
addr16
int3
stos
push
add
(bad)
adc
sub
stos
ficom
push
dec
dec
xchg
mov
mov
xor
loop
cs
and
pusha
test
js
es
es
inc
mov
add
mov
arpl
js
retf
jecxz
hlt
push
inc
into
adc
push
shl
lds
xchg
ror
push
addr16
aas
inc
(bad)
push
ds
sub
adc
or
cmp
loope
retf
mov
adc
jecxz
pop
leave
mov
stc
mov
adc
lods
(bad)
retf
jecxz
adc
ret
or
mov
pop
lods
(bad)
adc
imul
scas
dec
pop
xchg
mov
fidiv
xchg
imul
dec
push
or
mov
jecxz
xchg
es
sub
(bad)
jmp
fmul
and
and
cmps
dec
or
sub
cmp
hlt
xchg
stos
xlat
mov
std
enter
sbb
mov
or
mov
je
in
xor
mov
stc
push
test
adc
outs
call
retf
sbb
cmps
jmp
aaa
jb
outs
movs
jo
test
add
add
jne
ja
dec
and
add
fidivr
cli
sbb
sub
inc
dec
ret
inc
inc
jg
dec
add
inc
xchg
jnp
(bad)
cmp
popf
in
ja
jecxz
addr16
bnd
icebp
inc
cmp
cmovne
inc
popa
cwde
(bad)
sub
jge
loope
loope
mov
fidivr
jp
jmp
repnz
cs
jmp
xor
jo
sti
add
pop
fsubr
inc
push
mov
scas
lods
(bad)
jmp
test
test
jecxz
xor
jmp
jmp
mov
xor
dec
xor
mov
(bad)
(bad)
icebp
sbb
lock
aaa
imul
dec
sbb
(bad)
fs
mov
push
push
pop
cmp
jp
in
xchg
jecxz
mov
cdq
outs
repnz
cmp
xchg
or
sub
mov
cs
mov
ins
cwde
mul
dec
xor
fsub
jne
out
xchg
dec
fnsave
and
mov
inc
fsubr
mov
cmp
je
jl
retf
mov
xor
dec
mov
cmps
jmp
inc
mov
ins
mov
sbb
xchg
gs
dec
sahf
ret
sbb
fs
mov
xchg
and
jl
xchg
cmps
fcmovu
and
xchg
rcl
(bad)
retf
in
dec
jb
mov
(bad)
and
out
push
(bad)
je
in
xor
dec
call
call
mov
add
mov
mov
jbe
mov
fldcw
retf
pop
jne
push
pop
pop
xchg
xchg
cdq
je
loope
mov
ror
jl
sub
mov
or
cmovnp
test
ret
aam
adc
(bad)
sbb
daa
jnp
mov
and
xor
cmp
mov
or
fsub
out
xchg
ror
jns
jbe
jp
sub
lea
es
pusha
jbe
cmp
inc
popa
pushf
dec
loop
adc
out
mov
jmp
mov
xchg
mov
xchg
es
daa
mov
xchg
pushf
jae
xchg
mov
js
mov
pusha
mov
mov
iret
mov
add
mov
dec
retf
loopne
jmp
shl
sub
loope
mov
popf
sub
jne
xchg
push
jae
xchg
inc
mov
pop
jb
shl
mov
mov
iret
dec
retf
aam
pop
dec
jns
xchg
icebp
xor
ss
xchg
mul
cmp
jo
(bad)
ja
ret
xchg
mov
test
sar
retf
pop
retf
push
outs
shl
fadd
fist
sahf
adc
loope
sar
js
add
fstp
jmp
fbstp
fst
push
jl
shr
or
inc
mov
cwde
in
icebp
ins
pop
inc
push
shl
pushf
xchg
ror
or
inc
arpl
ror
scas
sub
add
xlat
dec
jns
loop
dec
sahf
rol
push
push
int
retf
fsubr
pop
cmc
push
test
(bad)
fstp
sbb
sbb
sbb
cwde
mov
add
or
and
repz
xlat
imul
xchg
mov
xor
jb
inc
mov
test
cmp
lea
out
jae
lock
and
mov
mov
out
mov
sub
fdivr
in
xor
cmps
scas
push
jnp
adc
retf
cmp
in
xor
xchg
in
cdq
iret
dec
popf
xlat
mov
jb
cdq
push
imul
int
rcr
bswap
repnz
push
mov
(bad)
pop
xchg
int
xor
xchg
imul
mov
cmp
xchg
and
mov
mov
out
cmp
aas
mov
imul
dec
das
push
mov
mov
xchg
push
repz
mov
int3
add
lahf
sbb
xor
push
dec
dec
daa
pop
iret
in
(bad)
icebp
es
mov
jae
push
aaa
jno
add
mov
retf
fdivr
out
lods
pop
add
mov
aas
test
pusha
icebp
out
jbe
(bad)
mov
cmps
pop
fist
mov
sub
dec
and
xacquire
jecxz
dec
repz
aaa
aad
hlt
xchg
dec
pop
push
push
arpl
jg
push
out
jl
loop
xchg
(bad)
jnp
lds
jnp
scas
dec
(bad)
mov
shl
push
push
daa
test
es
xchg
loope
jbe
jmp
fsubr
inc
jmp
(bad)
jl
fiadd
adc
nop
cmp
push
cmp
xchg
sar
scas
adc
jne
shl
lods
pusha
xchg
out
shl
sub
das
cmps
out
std
pop
outs
mov
or
cmp
xchg
push
sti
sub
mov
dec
ins
and
out
mov
xchg
scas
push
sahf
pop
push
jnp
mov
sbb
movs
jl
arpl
iret
add
jmp
movs
jecxz
or
ret
xor
cli
test
push
lods
sbb
xchg
xchg
enter
std
jle
outs
aam
call
stc
cmps
aad
mov
dec
sub
dec
jbe
shl
inc
mov
out
div
clc
repz
imul
xor
mov
ror
(bad)
push
mov
push
jne
adc
mov
int
aaa
ss
addr16
cdq
pushf
sbb
adc
popf
icebp
pop
inc
jl
(bad)
dec
sub
stos
jmp
shl
xchg
adc
popa
and
test
mov
bound
cmp
push
(bad)
repnz
mov
popa
mov
stc
cmps
int
xor
ins
xor
das
ret
dec
frstor
mov
lds
mov
pop
push
cmp
outs
xchg
hlt
popa
int
mov
inc
push
and
jns
mov
push
lea
mov
xor
mov
addr16
aas
mov
xchg
inc
adc
(bad)
push
gs
fadd
icebp
shr
xor
lock
sbb
test
imul
xor
bound
cmp
fldcw
cdq
sbb
out
stc
das
mov
jb
xor
mov
adc
add
pop
dec
xchg
es
dec
jle
or
int3
add
cmp
push
cmp
repz
nop
out
jae
dec
push
mov
and
stos
ins
inc
inc
sbb
rcl
arpl
or
(bad)
sbb
mov
addr16
sub
stos
dec
mov
cmp
fcomp
mov
dec
sbb
into
js
bound
inc
mov
adc
xchg
mov
push
sub
shl
jbe
fimul
xchg
pushf
sub
dec
pop
repz
cs
loopne
imul
fisub
call
test
jecxz
jp
xchg
in
sar
movs
out
push
mov
test
add
dec
fldcw
sbb
inc
fmul
adc
fld
mov
adc
pop
sub
jmp
sbb
(bad)
mov
addr16
into
xor
bnd
jo
sub
jg
mov
aas
dec
sub
pop
pushf
ss
imul
adc
aaa
stos
pop
outs
test
dec
mov
mov
mov
retf
xchg
daa
mov
jecxz
sbb
mov
cmp
sub
adc
in
sub
inc
ror
inc
or
xchg
in
cwde
aam
xchg
xchg
call
inc
sbb
mov
jl
inc
mov
inc
pop
push
push
add
sub
adc
in
and
sbb
cmps
cmp
in
mov
aad
or
jae
xor
jg
ror
cdq
enter
xor
mov
sub
jae
je
cmp
aas
inc
jb
enter
dec
xchg
es
mov
pop
jne
arpl
pop
cmp
dec
mov
mov
fwait
mov
(bad)
es
stos
mov
xchg
push
out
enter
dec
sahf
ins
scas
ins
adc
rcl
cmps
jns
jns
(bad)
adc
pushf
je
pusha
call
pop
xchg
inc
imul
ss
shl
cmps
inc
daa
cmp
and
jne
pushf
rcr
inc
pop
cmps
leave
cmps
inc
cmp
mov
mov
outs
stos
jae
frstor
and
cmp
pop
jge
test
push
add
xchg
xor
aaa
imul
(bad)
push
add
jp
mov
sub
daa
mov
mov
loop
dec
(bad)
jo
in
or
and
jnp
sub
je
jns
pop
(bad)
test
mul
pop
call
pop
ret
push
sbb
or
pushf
data16
inc
jl
xchg
adc
inc
xor
cmp
mov
ret
lds
loop
hlt
stos
repz
out
jnp
sar
jp
outs
push
mov
sub
lds
sbb
inc
lods
cli
lds
sbb
xchg
or
dec
xchg
es
dec
jb
int
adc
(bad)
repnz
stos
mov
sub
pop
(bad)
inc
repz
out
pop
cli
cmp
(bad)
push
and
jo
les
addr16
adc
cmovnp
je
lea
mov
sub
add
(bad)
ds
mov
xchg
(bad)
push
pusha
ja
pop
mov
in
sbb
push
xchg
pop
retf
test
mov
popf
out
neg
retf
cld
mov
sbb
xor
jnp
in
cmp
cmp
in
arpl
xor
sbb
fwait
xor
sbb
in
cmps
or
sbb
xor
xchg
daa
jnp
sahf
fucomi
int3
scas
push
mov
les
ins
xchg
movs
mov
cdq
adc
jae
out
push
sub
repnz
mov
add
xchg
xlat
cmp
mov
inc
fwait
push
ins
(bad)
data16
jne
enter
xor
(bad)
test
xchg
dec
xchg
sbb
aas
hlt
sahf
jecxz
mov
scas
lods
pop
scas
cmp
iret
xor
sub
inc
rcl
sbb
arpl
or
jmp
jo
pusha
sbb
xchg
es
call
mov
inc
mov
mov
mov
jl
fisubr
adc
jle
xchg
call
sub
aaa
xor
jae
pushf
out
repnz
mov
adc
xchg
hlt
jle
jnp
sub
into
push
cmp
in
daa
adc
and
std
shr
dec
ja
outs
inc
mov
mov
xchg
cmp
mov
cld
and
cli
imul
ret
gs
lods
jp
dec
mov
and
(bad)
cmp
mov
popa
jecxz
xchg
es
retf
mov
jecxz
xchg
adc
sbb
pop
cmp
in
inc
adc
push
sar
lahf
push
mov
ins
xchg
push
add
movs
push
cmp
fcomp
xor
fs
out
inc
cmc
jle
jnp
sub
sbb
xchg
jmp
cmp
mov
cmp
cmp
add
movs
int3
arpl
pop
and
shr
mov
cli
or
mov
cmc
call
add
fstp
sahf
cmp
fwait
xor
mov
and
outs
mov
add
inc
pop
sub
mov
inc
cs
cmp
jmp
and
jp
mov
dec
jnp
lods
(bad)
fiadd
daa
or
jbe
sbb
(bad)
stos
daa
aaa
enter
push
cmp
test
cmp
dec
int
in
cmp
mov
or
jbe
ror
bound
mov
mov
cmp
mov
fadd
pop
mov
sbb
sbb
(bad)
dec
ss
mov
jecxz
dec
into
lock
cmp
es
call
leave
icebp
sbb
and
scas
jnp
xor
loopne
fwait
mov
jecxz
jo
lahf
sub
cmovge
repnz
xchg
adc
jp
enter
jnp
cmp
sub
sub
add
gs
dec
fs
dec
out
iret
mov
fmul
pop
or
pushf
xchg
push
xor
push
(bad)
xchg
sbb
inc
lock
mov
mov
dec
sar
sti
stos
sub
out
mov
or
ret
mov
mov
leave
mov
arpl
pushf
fcomp
ins
pop
cmp
int3
icebp
es
jbe
lock
cmps
jae
lock
jae
cmp
mov
inc
mov
imul
daa
jns
out
imul
push
cmc
xchg
add
add
lods
mov
pop
jge
mov
les
dec
push
cmps
push
add
loopne
xchg
fadd
sar
out
add
arpl
stos
(bad)
adc
cmp
lods
xor
pop
out
stc
push
je
cld
mov
pop
mov
movs
or
clc
sbb
jbe
mov
shr
popf
push
adc
loop
cli
rcr
mov
arpl
push
(bad)
movs
dec
xchg
pop
and
ins
shr
loop
lods
xor
test
sub
mov
ds
jo
or
fstp
scas
shl
pop
jmp
jge
imul
bound
fs
push
scas
outs
pop
popf
cmp
inc
xadd
and
xchg
add
fwait
cmp
jno
std
retf
mov
xor
or
shl
cmp
mov
or
inc
cld
and
movs
or
mov
sub
into
xor
xor
lea
pusha
xchg
shl
out
mov
nop
adc
scas
(bad)
dec
cmps
shrd
and
inc
int
in
mov
pop
ret
pop
pop
xchg
cmps
pop
(bad)
push
sahf
ret
int3
daa
retf
shl
dec
dec
jbe
(bad)
cld
xor
push
cs
cmp
fdiv
imul
mov
push
sub
mov
out
inc
gs
sar
(bad)
test
sub
ret
xchg
adc
xlat
inc
aaa
pop
call
les
add
jecxz
inc
das
retf
retf
ds
es
int3
cs
xchg
jb
popf
add
lock
mov
icebp
les
pop
push
scas
imul
ret
pusha
sub
xor
fwait
xor
jb
or
cmps
jno
in
mov
sub
daa
push
jae
lods
xor
cmp
xchg
and
fs
push
jg
fnstenv
pop
movs
cli
cs
xor
sbb
lods
or
ins
imul
je
or
inc
aad
mov
jle
jmp
loope
push
in
retf
xor
or
push
aaa
adc
xchg
dec
sar
sbb
and
sahf
mov
cmp
and
retf
jge
retf
fwait
lds
cli
pop
scas
addr16
adc
inc
push
cmp
cli
push
push
sbb
mov
sbb
inc
xchg
and
adc
mov
push
pop
adc
xor
add
jno
push
in
jno
pop
mov
pop
sbb
mov
aam
les
jp
mov
pop
cs
xor
enter
(bad)
ins
dec
es
xchg
dec
mov
fstp
sub
and
jmp
lds
retf
sbb
je
add
mov
jnp
xor
ret
fisubr
sbb
ins
es
xor
daa
push
sub
sub
cdq
jae
popa
aas
xor
jmp
jle
mov
scas
xchg
cld
push
ror
push
push
pop
out
stc
mov
mov
fcom
pop
mov
and
enter
xor
stc
mov
fisub
jno
mov
push
cmc
(bad)
fstp
ins
cmp
das
jmp
xlat
into
cmc
ins
xchg
out
mov
test
push
imul
cmps
pop
pusha
bound
sbb
pusha
mov
in
test
sbb
cdq
push
cmps
es
inc
xchg
loop
fisttp
cmc
sub
sub
retf
sbb
ror
jecxz
cmps
inc
or
push
cmp
sub
iret
es
inc
(bad)
dec
jmp
lods
ret
ret
(bad)
movs
arpl
in
adc
ret
lock
repz
inc
pushf
mov
jl
popa
jno
stos
lock
bound
add
dec
call
jb
ror
pop
or
stos
fsubr
mov
xchg
pop
cwde
nop
adc
pop
or
and
add
jne
push
ja
test
sub
in
cmp
jbe
mov
mov
je
xchg
std
xor
xlat
or
ss
arpl
jle
(bad)
scas
lds
mov
dec
test
cmovs
in
les
mov
pop
pop
jg
dec
popf
sti
mov
sub
dec
call
sbb
mov
ret
xor
into
push
jns
retf
pop
shl
jns
push
cwde
loope
stos
and
cmp
sub
mov
cmps
jno
int3
push
and
dec
cmp
mov
sbb
fisttp
clc
adc
and
iret
mov
or
scas
lds
adc
cmps
jb
adc
cmp
pop
arpl
pop
mov
mov
jge
inc
imul
and
outs
shl
pushf
popf
shl
jl
cmp
push
cmp
in
push
lods
stc
div
and
call
call
pop
loopne
or
lods
cmp
ret
ror
inc
jg
jl
push
fimul
out
ins
pop
jmp
jno
mov
test
jo
push
add
xlat
add
adc
int3
sbb
jle
retf
jle
cmps
push
test
mov
cmp
mov
repnz
nop
jae
cmp
xor
jb
mov
xor
retf
test
ss
pop
push
aas
dec
shl
xor
test
cdq
shl
xor
xor
movs
jbe
daa
mov
xchg
mov
test
(bad)
or
(bad)
ds
fmul
outs
inc
cmp
pop
xchg
icebp
xchg
cwde
ins
xor
gs
mov
cmp
or
cwde
popf
ror
sbb
fild
xor
pop
(bad)
cmp
aaa
pop
mov
xor
jb
shr
(bad)
fist
xchg
dec
daa
dec
jb
jnp
cmp
shl
outs
aad
adc
fsub
mov
daa
(bad)
mov
pop
les
bound
icebp
int3
jns
popa
xor
sbb
aam
pop
or
test
jbe
jecxz
cmps
mov
sub
mov
sbb
mov
stos
mov
cmps
xor
ss
cwde
movs
dec
jb
pushf
bound
lods
call
fisub
cmp
jecxz
pop
jae
pop
mov
mov
pop
(bad)
xor
enter
mov
jo
aam
dec
dec
xor
mov
clc
ds
or
ins
lods
xchg
jecxz
in
add
bswap
jno
xor
dec
lds
je
fnop
icebp
push
repz
inc
jmp
xchg
and
cmp
icebp
cmp
push
test
rcl
mov
xlat
out
mov
dec
mov
ror
jp
test
add
sbb
fistp
fisub
rcl
int3
mul
inc
sbb
cmps
lds
aam
push
add
popa
xchg
mov
gs
jo
inc
daa
xchg
aaa
mov
push
shl
jmp
dec
and
jl
jecxz
in
(bad)
and
pop
cmp
retf
ss
jo
mov
sbb
jmp
aaa
popa
adc
sti
and
aaa
jnp
fcmovbe
dec
dec
iret
pop
fnstenv
adc
add
adc
imul
dec
add
and
xor
and
xchg
jbe
and
adc
sar
shl
cmp
sar
pop
push
cmps
add
cmc
dec
mov
jne
sbb
mov
inc
xor
pop
movs
(bad)
pop
mov
and
rcl
cmp
pop
(bad)
call
lock
ss
ss
dec
mov
sub
in
fs
aad
sub
(bad)
xor
iret
sti
std
rcr
sub
popf
call
cmp
lock
sub
es
cdq
fadd
mov
adc
xor
jb
or
int3
popf
xchg
outs
push
mov
sbb
das
(bad)
sar
repz
and
cmps
jmp
call
sbb
push
retf
adc
jmp
mov
jo
xchg
pushf
sub
mov
(bad)
mov
(bad)
lods
mov
loopne
cmp
loopne
mov
pop
mov
push
cdq
mov
jmp
push
in
aas
and
push
cld
and
add
push
data16
dec
scas
pop
fs
loopne
or
pushf
adc
cmp
movs
dec
xchg
ret
retf
mov
lods
or
adc
and
rcl
rcr
sahf
scas
idiv
ja
(bad)
int
pop
fist
xor
and
cs
mov
mov
popf
jecxz
inc
push
cs
icebp
or
in
add
mov
mov
sbb
fcmovb
cli
push
call
mov
ins
add
mov
(bad)
out
mov
sbb
aaa
inc
mov
inc
stos
(bad)
arpl
add
cmp
sub
push
mov
std
loope
ror
cmp
dec
push
inc
add
sbb
popa
sub
xchg
add
mov
cli
mov
cmp
sti
xchg
dec
repnz
adc
stc
adc
fwait
lods
mov
sub
add
sub
xchg
push
cmc
add
into
pop
sbb
jnp
cmp
jmp
sbb
sub
pusha
fadd
stos
cdq
pop
in
mov
outs
hlt
fdivr
retf
test
fwait
addr16
or
cmps
in
retf
sbb
addr16
sub
jo
rcl
movs
dec
xchg
es
xchg
mov
addr16
in
leave
xchg
ror
mov
xchg
pushf
inc
mov
data16
(bad)
call
mov
pop
sub
inc
arpl
mov
xor
mov
xchg
mov
arpl
adc
mov
inc
xlat
dec
push
cs
or
ss
ret
sbb
or
jbe
fistp
mov
jb
in
mov
iret
adc
popf
in
pop
xor
fidiv
bound
icebp
sub
imul
shl
inc
movs
jns
push
add
pop
fs
mov
jo
jb
sub
repnz
enter
test
dec
cmc
std
jmp
out
arpl
and
inc
test
pop
cmp
xor
inc
inc
shr
cmp
daa
popa
dec
sub
cmc
popf
sbb
mov
stos
clc
inc
push
fistp
jmp
inc
stc
adc
xor
aaa
mov
das
retf
jmp
add
dec
ret
adc
push
xchg
add
les
gs
arpl
mov
sar
inc
sub
jae
adc
pop
mov
sub
push
mov
jmp
pop
jmp
enter
into
ror
(bad)
jmp
ins
int3
adc
mov
pop
sbb
mov
jb
jmp
dec
jg
pop
stc
sub
sub
mov
mov
ja
fiadd
test
loop
pop
mov
cmps
jnp
movs
fucom
retf
inc
pushf
cmp
pop
and
inc
mul
adc
(bad)
push
adc
addr16
mov
push
xor
dec
xchg
pop
xchg
xor
aam
cmps
cmp
mov
xchg
jae
xchg
je
fisubr
inc
sub
or
xchg
out
std
inc
das
pop
aam
cmp
cmps
scas
into
ins
adc
das
inc
and
sbb
push
sbb
sbb
(bad)
icebp
and
xchg
cs
lds
mov
and
sar
sbb
(bad)
xor
icebp
cmps
mov
rcl
fs
mov
mov
enter
sbb
(bad)
xchg
mov
mov
xor
cmp
cmp
push
lods
xor
imul
(bad)
mov
mov
mov
or
retf
sbb
cmp
sti
js
scas
shl
addr16
mov
call
ds
mov
pop
sti
jo
mov
xchg
cmp
sub
jl
jmp
xor
ret
sub
sahf
jns
sbb
outs
xchg
pop
aad
dec
and
retf
jmp
gs
pop
pusha
fist
or
dec
(bad)
lock
in
xchg
xchg
push
push
cwde
jmp
push
jl
mov
(bad)
out
loop
aaa
imul
mov
in
loop
aaa
cwde
mov
inc
rcr
aaa
adc
cmp
pushf
sbb
or
mov
add
in
and
aad
sahf
sahf
inc
mov
inc
pushf
pop
fwait
cdq
pop
adc
sub
or
mov
pop
in
xor
inc
adc
inc
cmps
in
sahf
mov
pop
dec
fisubr
dec
stc
cwde
xchg
stos
and
cmps
stc
add
lods
mov
sbb
aad
push
pushf
in
mov
int3
xchg
sub
sbb
jmp
imul
push
movs
dec
xchg
ret
or
stos
or
(bad)
adc
dec
loope
cmp
aam
add
call
repz
lahf
sub
cs
bound
imul
mov
cmp
ss
sbb
cmc
nop
dec
jb
adc
mov
das
sbb
adc
jbe
loopne
mov
mov
mov
outs
(bad)
ss
xchg
cld
es
adc
sbb
(bad)
ficom
mov
inc
fwait
out
icebp
add
mov
(bad)
dec
jecxz
xchg
es
mov
cdq
js
test
in
shl
aad
or
iret
cs
push
jnp
mov
dec
sub
pusha
inc
jns
cli
dec
call
and
call
(bad)
jmp
loopne
fwait
cwde
add
xchg
push
cs
dec
pusha
or
cmps
xchg
add
xor
(bad)
outs
fwait
or
jmp
mov
mov
cmp
mov
xor
xlat
and
lods
mov
fild
(bad)
push
xchg
or
test
test
sub
mov
or
pusha
cmp
(bad)
cmova
outs
ins
inc
jl
pusha
cmp
inc
cmp
dec
call
jmp
push
loopne
or
push
jmp
sub
std
js
add
movs
mov
in
pop
icebp
dec
test
sub
pop
(bad)
mov
ins
push
rol
pop
(bad)
or
cmp
adc
mov
ds
mov
lods
sub
hlt
or
inc
cmp
inc
repz
fmul
test
push
and
loop
mov
mov
test
retf
stos
push
popa
mov
cmp
cmc
inc
outs
imul
jle
fistp
imul
push
push
ret
lock
aam
adc
jg
hlt
push
loop
or
cmps
inc
(bad)
retf
repnz
push
sahf
aaa
(bad)
sub
add
push
(bad)
push
(bad)
pop
rcl
add
push
imul
hlt
inc
rcr
cdq
pop
das
xor
push
int3
sbb
outs
push
and
loope
repnz
lds
(bad)
xor
jns
jg
(bad)
fwait
mov
xchg
mov
add
dec
test
push
data16
sbb
dec
call
jmp
sub
bound
shl
mov
scas
mov
push
sbb
adc
xlat
mov
xchg
sbb
int3
aaa
inc
xlat
pop
gs
data16
aaa
ss
pop
pusha
pop
mov
loop
js
sahf
das
jl
(bad)
lods
clc
cmps
(bad)
xchg
(bad)
sub
or
mov
mov
fcomi
xchg
mov
cmp
fistp
add
retf
mov
dec
data16
aad
push
call
mov
mov
sub
sahf
xchg
je
mov
icebp
ret
(bad)
icebp
es
call
dec
leave
jno
rol
sub
stos
cld
sti
lds
retf
pop
scas
in
retf
pop
inc
dec
xor
jo
cmp
das
xor
sbb
xor
jl
pop
int
jl
pop
test
or
jp
cli
adc
push
rcr
mov
xor
mov
imul
popa
mov
mov
xlat
mov
push
rcr
jnp
outs
push
jge
jmp
(bad)
add
int3
push
jo
xor
sbb
and
call
jo
shl
dec
cmps
outs
pusha
js
pop
jne
fbld
dec
jp
in
fs
(bad)
cmp
leave
xor
dec
das
jns
sbb
pop
sub
into
cli
pop
ins
xor
sbb
dec
add
hlt
add
mov
xchg
inc
mov
fst
mov
adc
sbb
jmp
imul
aaa
cs
(bad)
sahf
loopne
or
jecxz
test
fld
push
mov
call
add
dec
test
es
out
or
movs
dec
xchg
es
xchg
adc
push
dec
imul
sbb
imul
cli
xchg
scas
dec
jmp
mov
daa
dec
and
and
dec
mov
push
retf
lds
push
add
lods
xor
adc
inc
xor
pop
(bad)
jne
je
ja
cli
or
xor
loope
inc
add
xchg
stc
push
inc
inc
mov
sbb
ret
in
xor
ror
sar
ja
jp
fnstenv
ficomp
stos
rcr
les
mov
ret
xor
les
outs
shl
or
add
cmp
sbb
cmc
sub
out
jae
test
pop
aam
sub
jns
add
push
popa
movs
jns
dec
std
fdivr
mul
pop
or
mov
mov
out
ins
mov
into
rol
ret
inc
mul
fwait
mov
xchg
call
sbb
sahf
movs
int3
cli
jle
mov
pop
pop
cdq
scas
hlt
les
loopne
and
jo
xchg
enter
es
stc
and
das
in
movs
push
xchg
adc
mov
pop
les
and
cmps
mov
test
mov
leave
mov
sub
popa
add
cmps
fidivr
pop
std
push
ror
mov
sub
lahf
adc
mov
test
cli
push
sub
fadd
sahf
jne
jmp
inc
addr16
ror
cmp
fstp
ja
aas
push
cmps
xor
lea
pushf
add
sbb
retf
push
dec
cmps
imul
cwde
add
cmp
mov
inc
rcr
aad
inc
les
fsub
test
ja
push
sbb
cmp
es
call
mov
sbb
xchg
sub
dec
jg
hlt
add
mov
(bad)
adc
aad
pop
arpl
cwde
dec
inc
mov
dec
cwde
leave
xor
and
sub
xchg
dec
push
je
jno
jno
les
jb
xchg
jecxz
call
lahf
xchg
jle
sti
pop
jmp
inc
mov
xchg
mov
pushf
sub
and
jo
fnsetpm(287
xchg
bts
cmp
pop
mov
test
pop
lods
pop
stos
xchg
and
(bad)
add
adc
out
lods
movs
ror
dec
call
jae
ror
scas
or
jbe
cli
jns
mov
std
inc
mov
addr16
add
xchg
sbb
mov
pop
push
call
sbb
outs
sbb
push
ja
loopne
je
daa
shl
mov
mov
jecxz
retf
cwde
xor
out
mov
(bad)
addr16
stos
mov
ins
mul
jns
call
or
jae
rcr
gs
cmps
xor
xchg
cmps
clc
jo
call
adc
jbe
les
inc
mov
push
mov
jmp
or
mov
(bad)
mov
mov
or
cmovae
ret
adc
jo
pop
xchg
cmp
inc
add
pop
sbb
and
dec
mul
jne
addr16
dec
xor
cld
mov
or
xchg
mov
ja
test
das
aas
sar
sar
mov
lods
lods
fcmove
mov
into
inc
shl
push
cli
push
lock
fisttp
mov
stos
sbb
es
mov
rcl
into
xchg
cmp
cmp
xlat
in
sar
sub
xlat
jne
sahf
cwde
repnz
stc
inc
mov
fwait
mov
outs
push
std
jb
pop
sar
or
xchg
jb
xchg
mov
lods
mov
add
sbb
gs
mov
jg
inc
pop
xchg
(bad)
xlat
and
into
into
in
jae
lods
dec
cmp
pop
pop
mov
xor
adc
add
pop
mov
aaa
imul
shl
lahf
movd
xchg
in
icebp
aas
pop
in
add
fadd
pushf
jno
push
movs
jmp
je
sbb
jmp
xchg
hlt
arpl
pop
lahf
in
ja
inc
xchg
scas
inc
scas
retf
dec
test
aam
imul
mul
mov
cmps
pusha
aaa
sub
pop
sbb
addr16
(bad)
js
or
pop
mov
lahf
lock
aas
lods
jnp
idiv
pop
inc
aas
and
cmovnp
push
dec
dec
lock
and
push
mov
inc
mul
test
jecxz
cmc
ins
test
sahf
adc
das
mov
and
imul
dec
ret
cmp
cli
lock
shl
mov
adc
call
imul
out
aam
lahf
pop
cld
mov
xlat
outs
push
std
inc
xchg
dec
mov
mov
mov
retf
(bad)
je
pop
pop
fist
lds
call
not
icebp
or
or
shl
(bad)
pop
adc
mov
mov
test
xchg
xchg
pop
xchg
repnz
movs
cmp
mov
out
ins
std
sub
sub
add
jno
xor
(bad)
mov
mov
(bad)
xor
cmp
xchg
jo
push
xchg
int3
or
es
call
mov
retf
mov
fs
mov
add
outs
jno
retf
dec
sbb
outs
dec
jne
mov
(bad)
mov
test
pop
cld
mov
out
lahf
xor
push
in
xchg
fist
cmps
cli
and
push
call
xor
mov
cmc
sti
xchg
pop
(bad)
cmps
test
pop
call
sub
stc
pop
and
repnz
shr
jg
in
fisttp
xchg
jl
in
imul
rcr
inc
jne
xchg
jae
xchg
imul
aas
js
test
(bad)
xor
add
jnp
sbb
retf
cmp
fbld
test
inc
aad
nop
fisttp
mov
xlat
std
pusha
sahf
add
mov
jbe
add
and
pop
iret
(bad)
jmp
push
sub
xchg
mov
dec
das
xchg
cld
inc
dec
mov
jmp
(bad)
mov
pop
xchg
dec
or
inc
dec
or
fcmovbe
aam
adc
dec
in
xchg
iret
test
sub
mov
dec
xchg
jmp
mov
inc
call
dec
shl
inc
jo
or
popa
pop
ror
(bad)
inc
cmps
pcmpgtb
mov
and
retf
je
mov
push
xchg
mov
xchg
es
call
push
mov
pusha
lahf
dec
cmp
ror
aad
sub
addr16
jne
clc
xor
repnz
adc
in
mov
cmp
cmps
xchg
lahf
in
jmp
dec
(bad)
push
mov
xor
leave
mov
hlt
pop
mov
retf
outs
adc
pop
push
stc
mov
pop
push
adc
icebp
out
sub
xchg
sub
mov
or
mov
mov
push
stc
cmps
sub
push
stc
outs
shr
jge
fcomp
push
bnd
cmp
scas
aaa
pop
xor
mov
adc
lock
mov
dec
call
aaa
dec
sbb
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
sbb
add
test
adc
test
adc
push
push
inc
push
add
add
inc
cmp
gs
pop
dec
inc
dec
push
pop
pop
inc
gs
je
jo
push
outs
sub
sub
gs
push
outs
sub
pop
push
outs
sub
pop
outs
bound
inc
bound
pop
push
popa
jns
popa
ins
and
outs
gs
push
outs
fs
push
xor
xor
jo
bound
add
add
xor
add
xor
add
and
add
xor
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
add
.byte
add
push
pop
.byte
