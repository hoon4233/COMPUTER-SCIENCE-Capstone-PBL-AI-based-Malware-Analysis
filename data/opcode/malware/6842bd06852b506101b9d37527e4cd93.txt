add
add
add
add
inc
add
dec
inc
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
dec
add
add
add
add
add
add
add
push
inc
add
pusha
xchg
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
je
add
pusha
add
add
jle
add
add
add
add
add
push
je
imul
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
jns
add
add
gs
xor
xor
xor
xor
sub
sub
sub
xor
xor
xor
xor
jge
add
outs
outs
data16
gs
js
jae
jb
outs
addr16
add
add
mov
loop
mov
mov
(bad)
jecxz
mov
out
popf
sub
and
mov
scas
mov
lea
out
test
lea
mov
in
movs
in
mov
or
mov
cmp
outs
fs
gs
add
aad
dec
adc
add
jbe
xchg
mov
or
retf
out
inc
sbb
mov
popa
cmps
retf
loope
jno
add
pop
xchg
add
xchg
add
cmp
retf
and
and
dec
loop
mov
shl
xor
repz
fs
jae
xlat
xchg
and
dec
aas
inc
mov
dec
fdivr
in
daa
push
(bad)
ins
pop
and
inc
push
data16
inc
jmp
adc
mov
(bad)
sar
sub
mov
adc
fldcw
fmul
iret
and
mov
aaa
cs
mov
test
lahf
mov
xor
and
mov
pop
int3
cmps
fild
outs
pop
push
aam
xor
push
loop
and
imul
push
mov
rcr
or
mov
mov
mov
in
das
inc
inc
lods
cld
into
daa
arpl
jmp
sub
shr
and
sar
js
jg
les
(bad)
das
pushf
jp
loop
push
cs
imul
call
xor
sbb
pop
xchg
fild
mov
jecxz
xchg
repnz
pop
cmps
pop
movs
xchg
mov
std
test
add
mov
push
scas
inc
or
shl
into
in
mov
cmc
ret
xchg
mov
ds
xchg
jge
inc
je
mov
cmp
mov
jbe
pop
aaa
popa
sbb
mov
pop
arpl
xlat
jmp
xchg
push
lock
push
xor
fld
jns
pop
dec
add
lock
in
and
adc
mov
adc
or
bound
dec
xchg
cmp
cmp
vpaddq
ss
pop
(bad)
dec
fsub
push
mov
ret
sub
pop
push
mov
das
pop
mov
adc
xor
pop
push
jmp
ss
movs
js
jno
fsubr
das
inc
retf
or
data16
movs
adc
iret
add
imul
imul
pop
sbb
dec
pop
mov
mov
cld
fnstsw
mov
xchg
xchg
and
jns
mov
repnz
in
call
sar
in
leave
cs
sti
or
aaa
cmps
sub
inc
outs
sahf
les
xchg
xchg
retf
ret
vmwrite
movs
ja
test
or
mov
loopne
adc
ss
push
aam
pop
fwait
mov
sti
(bad)
mov
or
cmps
dec
or
mov
adc
retf
in
shl
sub
lods
out
dec
cdq
daa
dec
je
imul
jecxz
xor
into
inc
dec
fdivr
lock
add
int
hlt
and
inc
xchg
mov
xchg
jb
sbb
lea
adc
(bad)
mov
addr16
movs
add
addr16
adc
push
stos
mov
shl
pop
adc
cld
mov
clc
cmp
cmp
jne
repz
in
jp
fs
cmps
jecxz
add
xor
mov
repnz
shl
xlat
or
retf
aas
sti
xchg
mov
mov
mov
ins
ror
adc
out
push
or
aad
xor
fs
mov
shr
jp
test
fcomi
loop
lds
loopne
push
or
call
xor
mov
jmp
(bad)
jns
scas
retf
cmp
test
and
jg
mov
or
jo
scas
(bad)
fsubr
inc
test
xlat
add
pop
js
or
mov
push
pushf
test
jecxz
loop
stos
dec
pop
stc
inc
call
(bad)
pop
scas
sahf
jns
popf
retf
xchg
data16
clc
scas
cdq
or
inc
and
aas
ds
cmp
xor
outs
rcl
mov
cmp
cs
(bad)
stc
ins
push
sbb
call
push
push
pop
jo
xor
jl
fwait
jp
aas
in
add
jle
sub
xor
adc
hlt
popf
fst
test
dec
push
retf
ficom
test
push
xor
shl
xor
mov
mov
mov
sbb
jmp
jmp
outs
mov
nop
mov
mov
aad
outs
lahf
aaa
push
stos
rcl
xchg
cmp
jg
dec
dec
popa
outs
jl
inc
stos
shr
enter
test
repz
xlat
inc
fadd
push
xor
dec
imul
pop
in
add
lahf
ja
jp
mov
inc
jp
popf
mov
adc
mov
and
(bad)
push
test
stos
xchg
mov
arpl
stos
jmp
int
fucomp
jo
xchg
lahf
adc
cs
jo
daa
arpl
push
neg
mov
inc
sbb
mov
lahf
dec
inc
(bad)
push
xor
mov
dec
jo
push
cmp
adc
xchg
sub
pop
or
ins
sbb
or
xor
dec
dec
js
inc
xor
mov
popf
ins
arpl
aam
jo
xchg
jge
neg
rcl
icebp
inc
jmp
xchg
inc
test
adc
cmp
(bad)
xchg
iret
adc
lock
neg
cmp
add
sub
jmp
mov
out
xor
mov
cmp
pop
in
add
in
test
add
cmp
fmul
in
add
or
bound
cmp
aam
cmps
test
mov
ret
cli
idiv
and
and
ror
out
xchg
imul
jae
das
pop
sub
mov
test
lea
mov
leave
sbb
xor
ins
in
pushf
jmp
aad
pusha
mov
add
in
mov
outs
stos
inc
popf
out
and
mov
jge
sub
cli
add
loopne
cmp
or
aam
or
xchg
in
pop
mov
fwait
mul
cmps
add
(bad)
inc
ins
std
ss
xchg
imul
cmc
push
cmp
psrlw
inc
(bad)
je
push
mov
adc
jge
retf
xchg
push
int3
jnp
pop
aam
test
xor
xchg
ja
inc
xor
or
xchg
pop
mov
adc
add
(bad)
lods
ss
enter
pop
enter
js
pop
adc
fimul
mov
loopne
fmul
pushf
fisub
dec
cli
jge
xor
mov
or
ja
(bad)
mov
cmc
mov
in
push
jmp
pop
and
dec
movs
mov
rcl
repnz
jmp
inc
out
std
mov
sbb
push
mov
jp
mov
jecxz
hlt
add
add
mov
or
adc
addr16
cmps
dec
cmp
add
fild
test
int
or
je
loope
cmp
cdq
loopne
push
jge
stos
dec
pop
icebp
neg
mov
pusha
fsubr
and
cmp
dec
retf
pop
push
cmp
ins
cmp
or
in
movs
adc
ins
dec
sbb
gs
mov
push
mov
jo
aaa
sub
adc
mov
ds
xchg
sub
mov
mov
adc
mov
mov
(bad)
mov
adc
push
sti
jne
push
jg
rcr
adc
pop
cmp
nop
mov
leave
mov
fist
test
and
add
cmps
aaa
xchg
dec
xchg
dec
push
and
sbb
sbb
cmp
jo
adc
sub
push
mov
jle
xor
ror
cmp
fldenv
imul
es
mov
dec
movs
movs
js
add
sbb
fcomp
jns
nop
out
pop
push
jo
fisttp
mul
fcomp
xchg
push
sub
retf
xlat
xor
lods
dec
mov
arpl
(bad)
iret
add
das
push
fld
jns
call
sbb
mov
retf
enter
or
ret
int
or
adc
add
jmp
or
pop
sub
sbb
pop
dec
xor
sub
sub
mov
pop
pop
add
fistp
cmp
dec
sbb
ins
mov
aad
sbb
sar
loopne
jno
out
out
push
pop
ficomp
cwde
cmp
xor
jecxz
lods
sub
add
fdivr
or
pop
xor
or
rcr
ret
push
inc
add
test
xchg
dec
test
adc
and
xor
cld
dec
cli
xlat
jmp
sub
push
or
je
leave
xchg
inc
mov
mov
into
mov
add
jbe
arpl
xchg
mov
in
inc
cmp
js
int3
sub
sub
sti
addr16
retf
sub
sbb
repz
int3
jb
inc
push
ins
jecxz
cmps
mov
cmp
mov
hlt
lock
jne
mov
sar
cwde
test
mov
mov
dec
sbb
sbb
cmp
rcr
jg
pushf
jp
push
mov
(bad)
lods
stc
sbb
xchg
xchg
push
jge
sti
push
push
inc
pop
ins
mov
mov
sub
faddp
test
mov
jno
cvtps2pi
mov
ja
dec
movs
icebp
arpl
mov
cdq
fs
push
and
movs
mov
cmp
outs
push
xchg
inc
ret
push
pusha
cld
jae
and
cmp
and
jno
jmp
push
enter
sub
xor
and
dec
mov
pop
mov
dec
rcl
xlat
hlt
cmp
pop
aaa
sub
push
popf
adc
js
call
sub
rcl
lods
bnd
xor
mov
rcr
je
jb
out
addr16
mov
pop
sysexit
movs
fsubr
sub
jle
jmp
xchg
push
xchg
rcr
mov
(bad)
mov
xchg
adc
add
push
jnp
adc
int3
pop
out
fwait
aaa
jge
hlt
ret
ss
in
daa
jns
(bad)
mov
bound
ins
add
call
and
xchg
ins
rcpps
and
cmp
lods
outs
mov
addr16
dec
push
fild
xor
jmp
sub
dec
call
pop
sub
jl
dec
retf
cmp
stos
push
xor
pop
sbb
adc
es
pop
pusha
push
cmp
int
(bad)
jo
stos
outs
bound
xor
mov
aas
jg
adc
adc
mov
scas
mov
movs
into
or
jne
jmp
xchg
cmp
xchg
jge
sub
inc
int
test
or
push
dec
test
lahf
push
ja
pushf
sbb
out
cmp
pop
inc
ins
adc
mov
or
or
dec
push
xor
(bad)
pandn
xchg
mov
push
arpl
cmp
jg
test
test
or
test
pop
dec
adc
sub
in
xor
ins
inc
imul
xchg
push
test
lea
inc
aas
clc
aaa
pusha
cmc
jg
pusha
out
push
outs
cmp
mov
popa
push
dec
hlt
leave
sub
dec
pop
add
cmp
pop
dec
or
mov
out
fst
sub
mov
test
mov
call
push
mov
sub
ror
adc
adc
adc
mov
push
dec
jecxz
dec
pop
pop
(bad)
and
std
mov
retf
jmp
jne
(bad)
fsub
push
xchg
and
outs
push
aaa
call
ins
(bad)
test
sti
retf
xor
xor
cdq
popf
jmp
pushf
mov
ret
xor
cmc
fs
sub
nop
sbb
jecxz
cmp
push
add
mov
repnz
test
jmp
jae
and
add
dec
das
pop
mov
mov
push
mov
dec
clc
pop
pop
xchg
sub
outs
outs
jmp
mov
pop
cmp
mov
cmp
stos
fnsave
pop
scas
xor
int
xchg
and
(bad)
ret
addr16
mov
shl
inc
les
mov
push
test
pop
cli
xor
cmp
mov
cmp
jbe
sub
and
push
mov
cld
fist
push
cmp
scas
fstp
adc
cmc
push
jb
sub
jmp
mov
mov
movs
movs
cdq
pop
adc
cdq
enter
xlat
cmp
dec
(bad)
mov
int3
test
and
ins
push
and
outs
mov
jns
in
mov
daa
adc
pop
mov
add
arpl
in
pop
or
(bad)
xchg
xchg
xlat
inc
loopne
cmp
hlt
xor
test
cmp
repnz
popf
shr
fwait
adc
ja
or
stos
repnz
and
test
fwait
push
push
pop
out
sahf
fbstp
addr16
jne
xor
push
hlt
(bad)
sar
sub
xor
jb
pop
mov
sbb
jno
leave
gs
and
test
cmp
mov
sti
jmp
mov
xlat
lds
outs
add
fdiv
out
ret
mov
data16
push
out
push
fst
push
mov
sub
dec
adc
ins
loope
push
ins
leave
rcr
cmc
xchg
cmp
imul
fidiv
xchg
(bad)
in
jecxz
inc
add
xrelease
dec
push
cmp
jmp
lock
inc
repz
cli
mov
add
aad
jo
mov
cmp
jne
hlt
adc
lods
xchg
jb
cmp
(bad)
pop
mov
xor
mov
jne
inc
mov
jo
pop
dec
and
mov
(bad)
and
aam
(bad)
mov
mov
mov
push
call
pusha
(bad)
(bad)
loopne
sub
add
sub
mov
jg
mov
and
sti
mov
sub
(bad)
js
mov
and
and
cmp
mov
pop
adc
or
sub
mov
inc
dec
in
push
jbe
push
adc
dec
pop
inc
fimul
push
cmps
ror
pushf
dec
ret
dec
fisttp
outs
aas
aaa
xor
fiadd
repnz
mov
ins
icebp
mov
rol
dec
cmp
dec
sbb
cdq
jge
fbld
js
rol
data16
movs
mov
push
lock
cld
sar
xlat
mov
retf
add
imul
push
jbe
sub
mov
imul
inc
fistp
movs
ss
dec
push
or
pop
adc
inc
mov
mov
(bad)
sub
jno
pop
or
adc
sqrtps
pusha
sub
cmc
fcomi
inc
cmp
scas
add
cmp
jnp
sub
ins
or
pop
ss
adc
sub
std
cmps
fwait
push
fs
dec
fs
mov
retf
repnz
mov
xor
adc
jae
sbb
push
in
ds
aaa
call
mov
add
shr
mov
ds
mov
dec
cmp
std
or
mov
stos
das
and
sub
xlat
inc
jae
movs
ds
jmp
retf
mov
sub
pop
and
arpl
jae
sete
dec
add
imul
scas
cs
xchg
outs
loop
add
mov
jns
mov
loopne
jb
cmp
or
ins
mov
xchg
sub
mov
fisttp
cld
jl
cwde
cdq
adc
mov
repz
sub
aaa
dec
and
outs
sub
cld
cs
xlat
aad
frstor
out
or
cwde
inc
xchg
or
sub
(bad)
cmp
jb
loopne
add
cs
push
inc
fs
push
adc
mov
fcomp
ins
adc
adc
sub
fs
mov
pop
stos
jnp
int3
fstp
lods
clc
add
test
jmp
adc
(bad)
scas
or
fwait
dec
push
jno
cmc
mov
pop
lock
push
pop
mov
in
(bad)
cmc
std
push
cmp
ins
daa
ins
mov
and
mov
push
(bad)
lock
push
xchg
sbb
mov
xchg
jo
jl
or
icebp
push
push
ror
and
and
loope
in
in
les
(bad)
and
pusha
imul
push
push
push
or
shl
lea
mov
jg
or
mov
test
sahf
(bad)
xor
lea
jae
ja
mov
dec
test
inc
lahf
movs
rcr
jbe
popf
mov
outs
mov
push
popf
dec
retf
(bad)
in
inc
(bad)
jp
fidiv
call
add
psrad
mov
div
movs
sbb
mov
jno
js
mov
out
ins
lahf
xor
cmp
rol
and
rcl
xor
xor
or
sbb
out
cmp
retf
inc
fcom
inc
sbb
push
movs
xchg
push
les
aaa
sub
mov
ss
fisub
and
pop
jmp
out
dec
inc
stos
push
stos
rcr
sbb
jg
mov
out
push
arpl
(bad)
fld
mov
mov
and
int3
clc
xchg
rcl
shl
cmp
fcomi
(bad)
or
pfcmpgt
loop
enter
mov
adc
add
pusha
xchg
xlat
test
stos
push
xor
lods
dec
dec
shl
add
add
mov
lods
xor
mov
pop
data16
repz
jmp
loop
lahf
sbb
or
push
mov
xchg
std
sub
mov
and
sti
mov
out
cmp
push
push
jbe
mov
loope
int3
xchg
cmc
imul
sbb
cmp
dec
loope
dec
mov
movs
pop
mov
cwde
call
cmps
in
push
cmp
push
sti
inc
inc
repz
clc
xor
jnp
mov
cmps
scas
enter
(bad)
fisttp
ret
test
adc
rol
jbe
sub
add
mov
dec
enter
imul
inc
cmp
pop
xchg
cmp
das
jge
mov
(bad)
fld
call
pushf
xchg
aam
data16
jne
add
or
push
enter
pop
add
or
push
inc
ror
aas
mov
cmp
adc
fadd
or
sahf
and
sbb
pop
cmp
fist
jg
iret
xlat
mov
dec
xor
jo
mov
push
inc
cmp
sub
push
add
clc
ror
and
mov
mov
and
xchg
sub
retf
ret
or
scas
inc
ss
jle
pop
aad
sbb
mov
aaa
nop
adc
xchg
add
mov
mov
test
(bad)
mov
jne
xchg
mov
call
stc
mov
dec
push
mov
dec
adc
(bad)
dec
mov
mov
cmp
int
push
dec
arpl
int3
daa
int
(bad)
add
or
imul
adc
sbb
jo
arpl
inc
xchg
adc
(bad)
stc
mov
dec
inc
inc
inc
xor
add
pop
push
shl
adc
sti
jo
dec
ss
shl
lds
pushw
and
cli
cmp
fsub
imul
fld
mov
mov
xor
stos
mov
xor
cld
out
js
(bad)
pop
fdiv
lods
cdq
test
cmps
mov
jns
mov
pop
mov
sti
pop
jmp
push
cwde
mov
leave
mov
push
mov
push
sbb
mov
in
adc
lock
mov
jg
fnstsw
push
cmp
xchg
int
jo
xor
adc
xor
test
ret
xadd
cmps
jbe
jb
xchg
xor
lea
mov
jg
cdq
in
mov
(bad)
fimul
mov
sub
xchg
or
mov
stos
add
pop
jns
xchg
add
mov
aaa
aad
scas
leave
loopne
mov
pop
stos
movs
mov
inc
mov
add
outs
pop
jno
nop
xchg
cmp
pop
pop
mov
inc
repz
test
pop
shl
sbb
adc
fbld
mov
repnz
pusha
push
add
add
xor
dec
mov
inc
push
jb
and
addr16
aad
cmp
es
jp
push
jns
pop
fistp
gs
pop
mov
ins
pop
enter
sbb
add
mov
ins
cmps
pop
add
pop
sub
push
pop
xchg
xchg
ins
sti
mov
dec
shr
pop
mov
mov
scas
test
and
int
inc
pop
jmp
mov
sbb
dec
es
sbb
add
push
sti
daa
cld
(bad)
(bad)
neg
js
add
imul
cdq
push
xchg
lock
mov
cmovs
push
adc
sahf
popa
mov
jno
hlt
and
out
mov
and
vpunpckhbw
push
add
imul
mov
jns
out
sub
jno
jmp
mov
fneni(8087
cmp
jmp
ja
aam
arpl
jp
mov
ficomp
xor
pushf
mov
cmp
xchg
jno
and
sti
sahf
mov
fbstp
repz
cmp
(bad)
cmp
cmps
loope
sub
jmp
mov
or
xor
mov
mov
push
rcl
or
test
(bad)
jmp
cmp
mov
add
jp
push
addr16
adc
out
sbb
ins
pop
and
or
adc
pop
fistp
xchg
inc
mov
sbb
cmps
sub
or
jp
repz
push
aaa
add
sti
inc
mov
push
hlt
cmps
sub
lea
orps
mov
pop
mov
pop
xchg
xor
mov
out
test
push
jg
mov
xchg
enter
test
clc
mov
push
mov
push
inc
test
mov
ret
into
test
out
fisttp
mov
jb
mov
push
sbb
dec
and
cmc
push
mul
in
repz
pushf
inc
mov
jp
mov
add
aad
xor
push
cmp
dec
inc
inc
out
push
cmp
fs
push
and
lock
clc
imul
hlt
sub
adc
pop
adc
in
loope
xchg
sub
iret
xchg
call
pop
movs
mov
mov
lock
arpl
pusha
cmps
fisttp
test
jecxz
leave
fwait
add
and
(bad)
ds
aad
mov
ins
mov
ja
psubd
sahf
xchg
int
pop
add
xlat
jnp
daa
rol
neg
lock
in
cmc
in
fst
(bad)
out
fs
bt
(bad)
push
ss
popa
mov
mov
pop
call
cld
ja
call
test
sbb
mov
dec
bound
dec
jo
pop
push
(bad)
(bad)
in
sub
and
xor
scas
fisttp
xor
and
or
push
xchg
jnp
ins
fs
retf
ret
dec
and
xchg
stos
out
inc
and
cmps
ja
dec
iret
jne
daa
aaa
jb
shl
pop
lahf
cmps
xor
cmp
out
pop
jmp
adc
xchg
inc
shr
adc
jle
xor
idiv
pop
and
cmc
add
ror
lahf
add
loop
es
push
fwait
(bad)
xor
xor
push
imul
adc
pop
adc
sti
mov
and
repz
sub
mov
jb
sbb
mov
pop
and
or
loope
(bad)
daa
xchg
movs
sub
in
xor
ss
sti
and
xor
or
mov
inc
xlat
push
xchg
mov
jl
push
push
pop
out
sub
cmc
mov
inc
push
iret
(bad)
lock
outs
(bad)
jmp
lds
dec
jbe
mov
mov
push
sub
mov
nop
call
test
dec
in
sbb
cmp
test
xor
lock
call
push
sub
(bad)
cmp
not
pop
ins
scas
addr16
xor
aad
jns
aas
ret
int
dec
(bad)
or
xor
imul
dec
jo
jno
pop
ja
(bad)
out
sub
std
cmp
into
cmps
out
leave
std
sar
mov
in
test
mov
jnp
nop
jp
inc
test
repz
xor
xchg
imul
int
mov
push
mov
dec
cmc
test
ss
fwait
cmps
aad
shl
and
les
mov
mov
and
xor
xchg
dec
cmp
dec
push
popf
loop
and
jmp
mov
mov
pop
out
pop
lock
test
in
add
xchg
sub
out
xor
mov
pop
out
sbb
scas
sbb
or
leave
cmp
xchg
jne
dec
jmp
fcom
pop
shr
and
mov
adc
pop
mov
xchg
js
push
or
mov
gs
mov
mov
jp
cmp
sub
sbb
in
cmp
mov
clc
in
or
imul
sbb
ja
xlat
pop
int3
mov
xor
pop
int3
je
xlat
in
or
xor
div
cmp
push
jbe
jmp
or
mov
pop
cli
dec
lahf
xchg
jge
mov
fisttp
in
cli
outs
aas
xor
cld
jbe
xor
pop
xchg
sub
jg
imul
sbb
jb
lahf
test
pop
mov
gs
jns
jb
cwde
iret
fwait
or
lods
xlat
dec
jno
aaa
ret
cdq
mov
cmp
sbb
cmp
in
sbb
mov
inc
stos
push
and
(bad)
out
jno
lods
and
retf
mov
ins
xchg
xor
lock
push
mov
sub
popf
fwait
or
mov
xor
mov
dec
mov
arpl
loopne
loopne
jg
xchg
test
loopne
cmps
mov
sbb
push
stos
popa
mov
stos
or
out
scas
enter
push
iret
push
add
int3
lods
aaa
push
mov
inc
or
les
sahf
aaa
ins
push
fld
mov
loop
outs
je
xchg
mov
jns
sar
je
or
inc
loope
mov
pop
outs
in
push
dec
mov
pusha
mov
ins
enter
aam
sub
and
mov
cmc
lds
or
xlat
outs
xchg
sbb
(bad)
icebp
cmp
inc
add
mov
pop
sbb
hlt
pop
mov
cmc
pop
stos
fsubr
pop
or
out
xchg
cdq
fist
and
push
and
fxch
xor
bnd
xor
inc
mov
into
and
mov
icebp
(bad)
scas
out
push
fidivr
imul
dec
(bad)
fsub
hlt
arpl
pop
mov
push
add
adc
push
cmp
xchg
(bad)
pop
dec
dec
xor
loope
dec
jl
cmc
push
sub
sar
movs
retf
jp
or
test
iret
mov
sub
add
test
jns
sub
xchg
pop
pop
push
test
pop
xchg
pop
bnd
(bad)
xchg
inc
cmp
js
mov
aas
push
sahf
inc
nop
pop
mov
retf
and
cdq
xchg
xor
xchg
pop
push
pop
ror
stc
fild
push
xor
daa
sub
arpl
add
cmp
add
adc
xor
in
sbb
inc
fs
out
cwde
sub
js
sbb
leave
xchg
shl
xchg
mov
icebp
ficomp
jbe
jnp
into
adc
jl
lock
xchg
(bad)
neg
dec
(bad)
push
push
mov
adc
and
neg
je
adc
sub
pop
into
dec
addr16
dec
ret
or
lea
out
pop
cmp
stos
shl
aaa
popf
out
(bad)
lock
lock
bnd
push
sbb
push
xchg
popa
mov
ret
xor
pop
push
mov
clc
jl
inc
int3
movs
jle
xchg
inc
(bad)
jmp
mov
clc
mov
cmp
mov
add
pop
push
ret
cmovno
fmul
lods
lea
cmps
mov
test
movs
mov
popf
neg
out
inc
xor
sahf
xchg
xchg
add
inc
test
enter
mov
mov
fs
xor
sub
sbb
jmp
pop
mov
xor
lock
in
ficomp
test
imul
into
dec
call
aaa
or
mov
lods
or
jmp
data16
repnz
and
arpl
cmp
int3
pop
shl
out
rcr
rcl
sbb
lock
sar
add
std
inc
mov
int
cmps
or
aam
dec
lods
bound
ds
mov
ds
jp
and
and
imul
mov
scas
push
leave
nop
call
out
jmp
not
cmp
xor
imul
enter
mov
push
add
pushw
rcl
push
mov
pop
pop
and
test
std
push
rol
fsubr
push
sub
sbb
inc
data16
inc
xchg
inc
push
ror
mov
dec
push
pop
push
xchg
mov
sub
adc
xor
jle
pop
fadd
movs
ret
movs
push
pop
sub
mov
retf
and
rcl
push
add
pop
pusha
test
ret
sahf
ret
fwait
popf
xor
mov
xchg
dec
sbb
inc
out
pop
cdq
mov
aaa
call
fnsave
xor
stos
cmp
sbb
sti
ja
loopne
xor
(bad)
lods
push
jl
cmp
data16
test
jge
adc
mov
out
pop
ss
(bad)
mov
and
std
xor
ja
scas
or
dec
jnp
into
jbe
dec
xchg
imul
fld
jmp
xchg
test
popf
aam
and
scas
add
add
xor
or
jae
bound
jl
movs
in
fs
mov
dec
(bad)
fdiv
imul
sti
ins
adc
repnz
fidivr
xlat
sub
xor
pop
sub
jne
out
rol
push
add
jmp
shl
cmp
jecxz
inc
xchg
mov
nop
pop
pusha
xor
cmp
mov
cs
(bad)
jnp
ja
mov
fldenv
shl
call
push
dec
inc
enter
ror
gs
mov
scas
inc
dec
sub
pop
xchg
cld
sbb
mov
push
fadd
cwde
mov
(bad)
rcr
scas
or
aad
sbb
add
sti
test
int
addr16
jae
adc
push
xchg
adc
loop
jmp
es
xchg
rcr
js
xchg
cmp
push
cmps
cmp
sti
jmp
push
xchg
repnz
jns
mov
call
or
pop
movs
in
fcom
jl
std
loope
inc
push
inc
das
cld
jno
pop
mov
nop
test
lock
ss
add
jae
jmp
mov
push
xchg
int
sub
movs
sbb
pop
cmp
mov
rol
fmul
mov
out
jge
in
enter
and
sbb
rcr
inc
pusha
aad
test
cmp
out
jmp
mov
std
fsubrp
mov
xchg
mov
mov
idiv
scas
in
mov
push
push
sbb
aas
lahf
cdq
cld
mov
mov
maxps
arpl
jp
jo
rcl
rol
jmp
mov
cld
dec
les
ret
hlt
inc
and
adc
repnz
stc
pop
ror
push
out
stc
scas
mov
mov
je
cmps
jmp
bound
pushfw
mov
out
inc
mov
inc
dec
cmp
pop
leave
pop
movs
jo
mov
jecxz
aad
retf
push
cld
jmp
inc
rol
lods
cdq
outs
sub
enter
stc
cmp
fs
mov
mov
stos
pop
add
push
les
bound
inc
jne
or
ds
jmp
xchg
mov
mov
mov
iret
sub
jecxz
out
jmp
dec
rol
inc
inc
sub
jmp
into
popf
stos
pop
add
ins
mov
int
dec
ficomp
dec
mov
movs
fdivr
leave
sbb
jae
test
(bad)
retf
add
dec
cmp
outs
cmp
stos
(bad)
jbe
jbe
popa
into
div
or
sbb
fiadd
stc
adc
push
xchg
int3
rol
sbb
dec
and
mov
sub
jnp
inc
out
dec
sub
ds
xor
or
dec
loope
in
test
cmc
cli
mov
cmp
sub
push
das
movs
outs
push
out
fist
ja
xchg
xchg
fld
test
fucomip
pushf
push
jle
int3
and
sbb
shl
in
(bad)
int3
cli
and
mov
mov
scas
xor
jg
ja
cmp
xchg
test
repnz
dec
xchg
jmp
xor
jecxz
or
xchg
arpl
push
imul
add
test
inc
jb
(bad)
mov
in
push
pop
sbb
xor
dec
repnz
repnz
enter
test
sahf
jle
add
(bad)
sbb
aam
inc
mov
push
add
jmp
sub
jae
cmp
mov
sub
stos
test
(bad)
push
imul
test
and
(bad)
jbe
out
sub
mov
push
mov
leave
jb
or
cmp
dec
mov
jmp
mov
xchg
movs
iret
std
adc
outs
lods
out
or
in
mov
jo
dec
jmp
inc
dec
and
xlat
call
loope
and
cmp
push
pop
sahf
sub
bound
outs
push
mov
fimul
ins
call
or
and
xor
call
pop
nop
pop
mov
stc
and
outs
shr
xchg
push
inc
loop
test
or
cmp
loope
cmps
sbb
pop
jno
aas
xor
xchg
xor
mov
out
ss
int3
inc
cli
lods
sub
loopne
lods
in
leave
pop
sbb
cmps
ret
push
test
jmp
push
in
mov
stos
mov
sbb
mov
mov
push
xlat
mov
mov
imul
mov
cld
and
and
out
and
adc
add
push
data16
dec
push
adc
sbb
mov
fld
jmp
add
inc
in
(bad)
cmp
jp
inc
xchg
pop
xor
(bad)
or
data16
nop
xor
add
sub
sbb
repz
dec
imul
jmp
and
or
cmp
pop
fisub
cdq
adc
scas
jae
sti
cli
in
popa
xor
aam
pop
(bad)
inc
out
push
retf
mov
sub
mov
popf
icebp
dec
outs
mov
(bad)
jo
push
adc
jg
test
pop
js
lods
jp
pusha
js
fisubr
push
jp
jg
jle
enter
jcxz
dec
cmps
imul
aad
daa
ss
js
mov
push
or
stc
sahf
ins
dec
mov
add
mov
dec
inc
push
sub
cdq
push
adc
mov
sti
loopne
cmp
fistp
hlt
cmc
jae
sbb
cld
imul
pop
scas
pop
cdq
dec
pop
loopne
dec
pop
enter
xchg
and
in
in
ret
call
and
mov
inc
outs
or
in
mov
dec
leave
cmp
loope
out
sahf
sbb
mov
stos
outs
lods
dec
cld
jbe
lock
jg
pop
iret
popa
push
or
icebp
add
adc
cli
jns
sub
dec
mov
dec
inc
dec
jl
hlt
std
mov
pusha
pushf
imul
jp
mov
mov
mov
sahf
mov
cdq
mov
stc
data16
push
and
outs
sti
leave
mov
mov
and
jns
call
pushf
jecxz
cmps
inc
ja
outs
pop
or
or
pushf
sbb
xchg
and
ja
jmp
adc
rol
sbb
push
mov
sahf
xor
fild
jae
add
repnz
sub
jb
mov
test
add
sub
cli
mov
sbb
cdq
pop
xor
mov
retf
repnz
cmc
dec
sbb
cmps
test
add
imul
add
movs
outs
loopne
mov
cmp
lahf
adc
dec
out
and
fcom
adc
cwde
clc
imul
jne
loope
push
jbe
add
(bad)
(bad)
dec
mov
(bad)
je
jp
shl
dec
jp
mov
inc
out
adc
in
stos
daa
xor
int3
xchg
xor
cwde
fisub
pop
sti
js
dec
ins
rol
stos
xchg
ss
mov
imul
add
jb
outs
adc
aas
jp
test
pop
push
cmp
push
fucomp
mov
fild
(bad)
test
and
push
aam
and
and
inc
sub
mov
dec
in
icebp
in
jge
popa
jnp
je
inc
cmps
js
xchg
call
mov
mov
cmp
push
cs
out
out
lds
or
shl
and
jp
add
ss
adc
sar
leave
jle
jmp
and
push
push
aas
add
fcom
dec
fcom
fst
int
cmp
mov
and
(bad)
rcl
jo
test
mul
xor
je
xchg
fld
loop
mov
aam
push
hlt
fwait
call
push
arpl
sbb
inc
stos
cmp
jle
dec
jge
mov
neg
enter
fiadd
das
les
adc
xor
test
xchg
std
dec
rol
sbb
paddd
push
test
inc
push
jbe
jne
dec
ss
or
cmps
sahf
cli
inc
(bad)
adc
mov
test
dec
ins
and
inc
outs
and
mov
sbb
repnz
jb
fucomi
aaa
das
not
pop
ins
xor
sysexit
test
outs
push
shr
pop
es
pop
mov
and
jmp
lds
(bad)
pop
mov
clc
les
enter
imul
loop
jae
ins
fiadd
inc
mov
cmp
cmp
ret
mov
push
fdivr
mov
inc
test
add
test
fwait
in
pop
mov
cs
cmp
lock
das
shr
arpl
(bad)
icebp
pop
ins
(bad)
mov
loopne
ins
cmp
mov
enter
into
hlt
xchg
js
mov
sahf
push
adc
jmp
lods
aam
retf
fimul
movs
mov
fiadd
in
test
fmul
jmp
jmp
cwde
cmp
jle
std
ffreep
shr
rcl
pop
lock
push
cmps
fstp
or
pop
js
adc
adc
xchg
imul
and
mov
jmp
cli
mov
(bad)
in
(bad)
sbb
xchg
jb
or
inc
mov
fs
sbb
mov
cmp
and
out
leave
shl
add
sub
das
jne
xchg
mov
fs
lds
out
push
mov
sbb
mov
popa
(bad)
shr
xchg
xor
fimul
aam
je
orps
jo
mov
and
popa
out
shl
jl
jl
aam
mov
int
rol
mov
adc
movs
fwait
clc
jnp
repnz
xor
ins
push
push
fadd
stos
xor
cmp
lods
rcr
adc
inc
jg
sub
push
bound
mov
pop
xchg
ror
pop
pop
mul
not
push
pushf
jp
or
rol
inc
push
and
xor
pop
imul
std
add
or
push
aas
loopne
add
jmp
and
fs
pop
(bad)
std
mov
cmp
popa
mov
adc
sub
adc
test
idiv
int
and
sbb
mov
sbb
test
(bad)
jae
pop
outs
adc
add
xchg
dec
daa
xor
imul
jo
(bad)
push
(bad)
cwde
pop
mov
int3
push
aam
fild
push
pop
int
inc
test
sub
(bad)
into
and
fadd
jbe
cmp
and
xor
repnz
jae
aam
lahf
out
jnp
add
les
sub
push
pop
(bad)
aaa
mov
(bad)
into
or
iret
shl
scas
mov
jne
pop
imul
sbb
adc
sbb
aad
adc
pop
add
mov
push
outs
bound
std
jns
cmps
pop
cmp
cmp
inc
add
idiv
fcmovnbe
test
push
out
mov
imul
mov
inc
mov
add
lahf
jmp
pop
sar
mov
pop
repz
xor
cld
pop
lods
mov
adc
push
pop
popf
xor
gs
cmp
cli
or
clc
jns
lods
movs
retf
mov
enter
fs
fmul
inc
xchg
sti
loopne
jp
icebp
xor
sar
sbb
sbb
pusha
sub
mov
mov
push
push
sub
repnz
adc
jmp
clc
into
sbb
mov
lea
cmps
mov
push
mov
movs
call
(bad)
sbb
dec
scas
cmp
xchg
dec
int
adc
je
dec
minps
repnz
fadd
cmc
mov
push
cmp
jae
pop
xchg
xor
pop
iret
fs
jne
and
(bad)
sub
sbb
ret
retf
or
jecxz
cmp
or
inc
cld
cs
fucomip
push
(bad)
shr
dec
outs
and
out
(bad)
ja
and
xor
daa
pop
imul
xchg
mov
fs
nop
cmp
cmps
test
lods
retf
in
scas
mov
sar
test
inc
mov
or
xor
dec
adc
pop
push
scas
fcom
imul
push
mov
or
xchg
inc
icebp
and
xor
xchg
push
or
sbb
lds
add
iret
inc
mov
popf
add
lock
and
dec
pop
jmp
pushf
pop
movs
sub
cmp
push
js
mov
push
cwde
aam
push
push
into
mov
add
cmps
xchg
mov
cmp
popa
out
inc
pushf
add
mov
mov
(bad)
call
es
jecxz
cs
jae
call
ret
mov
push
jbe
push
push
xor
aad
mov
ret
adc
and
mov
push
out
push
cdq
jne
pusha
cmp
sub
jle
loope
fisttp
cmp
enter
in
js
mov
mov
leave
ficom
inc
jmp
in
inc
out
scas
mov
adc
cmp
fdiv
mov
lds
popf
test
dec
push
mov
das
and
imul
jecxz
xchg
add
ds
call
inc
(bad)
retf
nop
adc
cwde
sahf
loop
retf
push
add
xor
inc
popf
sub
cli
movs
cmps
aaa
cwde
div
in
outs
in
pop
pop
imul
add
xlat
mov
(bad)
popa
push
repnz
sub
movs
cmps
cli
add
cmps
or
(bad)
shl
push
into
jg
cmps
cmp
data16
bound
inc
rcr
aad
adc
add
ins
stos
je
sub
out
out
sub
jb
fiadd
lahf
scas
call
outs
imul
(bad)
scas
out
(bad)
test
xor
icebp
xlat
fnstenv
and
clc
scas
mov
sbb
retf
ins
ds
mov
das
push
or
fwait
xchg
xor
xor
sbb
js
int3
mov
lds
mov
xchg
les
cmps
push
pop
ret
mov
int
sti
sti
out
mov
in
repnz
out
sub
inc
mov
xchg
push
pop
pop
shl
jae
fadd
jmp
stc
and
rcl
int3
int3
daa
mov
dec
pushf
fdiv
pusha
xor
adc
arpl
jp
add
(bad)
sbb
test
mov
out
enter
xlat
jl
sub
or
mov
movs
lock
lahf
or
sti
jo
movs
(bad)
data16
stos
jge
mov
xchg
out
pop
stos
push
movs
add
and
push
push
hlt
mov
xor
and
adc
xchg
movs
fs
pop
xor
ja
test
call
inc
shr
popf
sahf
sar
in
jecxz
cs
push
(bad)
mov
jle
xchg
jmp
xor
call
test
cld
or
lock
repz
mov
(bad)
jb
ret
stos
pop
ds
cmps
fwait
or
rol
mov
jo
aam
cmps
or
cmp
(bad)
mov
jle
xchg
popf
jle
les
imul
push
add
sar
shl
popf
das
gs
mov
mov
mov
cmp
mov
dec
enter
dec
jmp
push
adc
aas
stos
in
aas
mov
xchg
cli
sub
cmps
test
out
and
jge
outs
out
mov
push
mov
scas
mov
sahf
ins
call
imul
push
cld
mov
jae
or
cmc
xor
or
sub
cli
push
mov
lods
ja
lea
(bad)
xchg
adc
enter
leave
push
(bad)
ins
adc
or
out
mov
mov
jmp
arpl
sbb
out
inc
sbb
mov
xchg
in
dec
sub
lock
mov
ds
cmp
(bad)
pop
add
sti
cmp
adc
mov
xor
add
int
mov
inc
sti
das
push
xchg
adc
or
and
sub
mov
or
outs
push
or
push
retf
sub
sar
mov
push
cmp
jo
xchg
pop
arpl
jmp
dec
gs
jnp
cmove
repnz
call
xchg
mov
cmps
data16
inc
push
std
pop
jno
mov
ins
test
mov
out
add
shr
retf
xchg
push
or
imul
popa
(bad)
jle
loop
imul
cmp
fs
(bad)
pushf
sbb
jecxz
repz
xchg
scas
repnz
test
or
and
sbb
xor
imul
xor
jo
movs
pop
iret
jmp
push
inc
xor
xchg
cmp
and
ins
repnz
gs
data16
jge
xchg
jae
and
ja
dec
aas
xor
daa
aad
jle
mov
and
(bad)
lea
mov
xor
pop
aaa
push
push
movs
cs
sbb
fsubr
fcomp
and
je
jecxz
out
cmp
in
jp
jnp
mov
adc
fs
ss
jmp
xor
icebp
dec
or
pop
push
mov
clc
bound
ja
mov
test
loop
cmova
mov
out
aas
cwde
pop
mov
inc
sbb
test
push
scas
push
push
and
push
push
(bad)
fimul
xchg
xchg
retf
and
jl
repz
inc
mov
pop
or
inc
fistp
imul
pop
inc
retf
in
out
sub
(bad)
xchg
repnz
fwait
push
scas
fldcw
(bad)
cld
pop
into
mov
xchg
pusha
out
sub
add
sbb
mov
dec
cli
mov
iret
int3
mov
mov
or
mov
lock
jne
push
add
inc
lahf
inc
sbb
sub
xchg
dec
loopne
jae
imul
inc
in
jae
fnsave
add
dec
and
out
add
je
xor
cmps
mov
dec
sbb
dec
test
sub
lea
mov
add
retf
cmp
cmp
imul
sbb
xor
jo
cmp
outs
pushf
stos
(bad)
(bad)
fwait
push
push
outs
outs
mov
ja
ja
iret
xor
or
pop
rol
fistp
jmp
imul
add
mov
xor
dec
or
sbb
or
sub
les
mov
and
fnstenv
stos
leave
sbb
in
jnp
fcomp
rcl
lahf
lea
stos
adc
add
clc
inc
jle
jns
dec
mov
aam
test
or
popf
push
std
loopne
and
cs
shl
pop
leave
add
xor
jp
push
mov
or
cld
fist
stos
lock
xor
retf
jg
popf
(bad)
aad
(bad)
into
pop
pushf
aam
inc
xlat
cmp
inc
in
add
call
cmp
fcmovb
cmc
sub
push
popf
(bad)
imul
and
psllw
adc
or
or
pop
mov
sbb
retf
jl
inc
dec
xchg
dec
pop
scas
loope
dec
sub
(bad)
mov
sub
inc
inc
or
dec
jp
adc
pusha
dec
icebp
inc
sub
jp
jmp
ret
movs
aas
mov
push
xchg
mov
out
push
shl
push
aad
ins
mov
xor
jl
cmp
shl
sbb
mov
fild
sbb
rcr
rcl
popa
pop
in
test
xchg
cmp
push
jnp
lods
(bad)
xor
popa
ret
leave
push
das
inc
test
xor
lds
enter
cmp
movs
pusha
push
ss
popa
cli
sahf
jne
dec
mov
mov
loope
or
inc
push
es
or
push
ret
xor
mov
addr16
jb
outs
pop
pusha
(bad)
scas
push
mov
mov
sub
xchg
push
adc
lahf
bound
leave
into
mov
sub
add
mov
sbb
mov
daa
push
or
mov
push
sbb
and
int3
aam
inc
pop
(bad)
mov
fisubr
push
mov
lea
leave
xor
sub
sbb
(bad)
fdivr
mov
test
jecxz
icebp
lahf
sbb
sbb
mov
push
pop
fistp
fisub
adc
cld
test
cmc
in
fisttp
push
mov
add
in
scas
xchg
dec
xchg
xor
xor
fsubr
mov
dec
out
es
fsubr
mov
mov
sbb
add
push
mov
shr
and
sbb
xor
cdq
mov
hlt
out
pop
mov
ret
adc
jg
int
idiv
jmp
dec
retf
and
sub
fwait
stos
imul
daa
test
retf
jge
pop
jle
dec
retf
out
mov
xchg
jl
mov
sbb
inc
sbb
dec
mov
and
pop
jns
mov
scas
js
xchg
into
fcomp
into
xor
pusha
stos
scas
test
adc
mov
jne
into
mov
cmp
stos
stc
and
loope
sar
fsub
jns
aaa
push
ins
lods
xor
scas
inc
sub
shl
mov
lds
and
test
inc
out
sbb
bswap
push
sbb
adc
or
jne
sbb
xor
sub
out
or
test
std
adc
jg
ret
into
pop
ror
addr16
mov
pop
(bad)
xchg
push
jecxz
loopne
es
movs
mov
fwait
nop
mov
pop
mov
pop
imul
sub
mov
in
cmp
and
xchg
xor
(bad)
mov
repz
fistp
and
clc
mov
std
popa
add
push
rcl
mov
lds
out
cmp
dec
(bad)
hlt
mov
rol
fdiv
out
sbb
wrmsr
and
pop
pop
inc
sbb
mov
and
lahf
or
mov
sbb
call
inc
cmovp
xor
lahf
pop
inc
cmp
cld
mov
xchg
test
adc
sbb
test
mov
call
mov
in
fild
mov
(bad)
stc
mov
dec
sbb
addr16
mov
sbb
jp
in
sbb
es
(bad)
fcom
xchg
test
pop
inc
bound
std
ss
repz
dec
pop
mov
jno
pop
imul
dec
jmp
lods
push
mov
das
imul
mov
or
test
or
into
test
cmp
add
mov
jge
or
xchg
jb
xchg
dec
dec
ror
cmc
imul
mov
into
adc
aaa
push
cmps
cmp
sub
push
xchg
xor
std
cmps
mov
dec
fisubr
push
add
push
xchg
mov
and
mov
jp
push
mov
cmps
push
mov
or
out
xchg
inc
jmp
mov
gs
mov
mov
mov
stos
and
in
outs
(bad)
and
pop
and
fstp
in
enter
fwait
pop
cmp
jge
adc
sahf
push
inc
dec
(bad)
jb
out
jbe
add
add
nop
pop
cmps
xchg
xor
or
and
and
dec
xor
cwde
scas
jne
in
push
shl
fldenv
rcl
jg
stc
shl
out
nop
sbb
mov
leave
imul
repz
add
push
popf
xor
jbe
rol
pop
adc
mov
or
scas
inc
add
shr
mov
(bad)
cmps
stc
bound
pop
nop
mov
scas
pop
scas
nop
cmps
add
jb
das
xor
xor
imul
inc
sub
dec
push
aaa
push
popf
dec
sub
push
clc
push
in
sbb
in
into
gs
mov
push
adc
inc
bound
mov
sbb
sbb
xchg
add
adc
les
sub
mov
in
add
cli
sub
mov
inc
ss
loopne
enter
popa
in
(bad)
dec
xchg
adc
jmp
xor
aas
xchg
test
movs
mov
loopne
sbb
mov
sub
scas
aam
fisub
add
mov
sbb
lods
movs
jge
in
sar
and
cmp
adc
in
mov
fs
xchg
lock
or
leave
out
and
loop
test
jl
cli
add
mov
imul
xor
ds
ja
mov
enter
sti
pusha
in
xchg
aam
dec
pop
(bad)
fdivr
mov
push
leave
xchg
and
jl
sar
sbb
push
mov
jl
cmc
mov
push
add
xor
jmp
mov
call
jnp
retf
add
xor
cs
add
jmp
mov
xchg
ds
sub
xor
adc
leave
dec
dec
push
arpl
test
fist
pop
inc
shl
mov
out
sbb
xchg
mov
or
fidiv
hlt
fidivr
add
in
in
xor
cmp
aas
sbb
dec
jne
fild
pop
jno
fstp
lods
int
(bad)
cmc
push
or
leave
mov
out
fs
add
cmp
cmp
cmp
outs
jns
repz
movsx
pop
ds
and
mov
in
xchg
pop
daa
xchg
sbb
pop
jne
(bad)
dec
pushf
leave
mov
sbb
dec
pop
dec
push
loop
dec
jbe
fistp
ins
loop
std
scas
or
inc
fmul
xchg
pushf
jl
push
xor
sub
popf
cmp
push
xchg
jns
mov
cmp
inc
mov
adc
bound
or
xchg
mov
mov
pop
or
hlt
pushf
int3
retf
out
ss
adc
sub
les
pushf
sub
dec
sub
jmp
pop
fst
sbb
jb
je
fidiv
dec
push
loope
outs
cmc
xchg
pop
jge
dec
push
cmc
dec
pop
or
mov
(bad)
cmp
fwait
push
(bad)
mov
inc
add
lock
paddsw
or
rcl
pop
sbb
cmp
jle
aaa
jg
sar
pop
dec
xor
ds
xchg
movs
dec
xchg
add
sub
adc
popf
pop
push
imul
mov
and
pop
inc
mov
mov
adc
mov
and
dec
push
push
mov
or
cmp
aam
push
shr
sub
add
mov
cmc
dec
dec
fstp
movs
(bad)
stos
xor
std
pop
(bad)
(bad)
and
mov
std
inc
pop
ret
xlat
sub
lds
adc
mov
and
dec
mov
sbb
stos
test
mov
push
sti
adc
push
sbb
(bad)
pop
sbb
and
dec
jb
mov
mov
pop
jns
mov
dec
lahf
jmp
fdiv
js
pushw
jae
cmc
jmp
adc
mov
sbb
mov
out
mov
jecxz
xchg
pop
mov
ud2
cmp
sbb
call
clc
out
int3
stos
mov
sar
repnz
jno
jl
(bad)
mov
rcr
lds
les
arpl
jbe
mov
xchg
sbb
pop
movaps
pop
cs
mov
fwait
cwde
push
adc
xor
je
cli
(bad)
mov
jp
adc
fidiv
ins
add
cmps
lock
mov
mov
outs
inc
and
sub
mov
and
jb
jb
or
movs
and
mov
enter
add
inc
pushw
adc
xor
add
pop
add
mov
add
mov
rcl
lods
cmps
sub
or
ds
cwde
or
jne
hlt
cmps
mov
jno
adc
lods
out
add
xchg
ficom
out
cmps
(bad)
ficomp
adc
iret
add
mov
xchg
xor
fnstcw
jbe
jnp
pop
xchg
stc
cld
shl
fnsave
test
dec
outs
mov
rcr
xlat
test
aas
scas
shl
scas
cmp
dec
test
xchg
cli
push
mov
imul
retf
push
pop
sti
(bad)
sbb
sub
sub
leave
(bad)
fmul
push
pushf
fmul
push
adc
ins
mov
or
icebp
mov
pop
sbb
cmp
es
hlt
sbb
enter
call
enter
pop
test
push
ins
std
and
pop
popa
xchg
inc
ficomp
call
push
adc
jne
adc
shl
into
ret
sbb
out
mov
mov
jbe
test
lods
inc
xor
ins
fwait
out
stos
cmp
cmp
lock
cwde
fld
inc
js
sub
mov
mov
jno
cmp
(bad)
in
enter
dec
lods
rol
jns
push
pop
rol
dec
xchg
int3
jle
fidiv
leave
ret
loop
movs
pop
cld
xor
jl
cld
mov
sub
out
push
rcr
mov
push
cmp
shr
pop
jbe
mov
and
adc
pop
fidiv
adc
int3
stos
sar
and
(bad)
cmp
sub
repnz
push
cmp
out
and
push
bndldx
push
adc
lds
sub
mov
and
shr
or
es
sbb
jae
cmp
xchg
add
adc
adc
mov
push
inc
push
addr16
jno
pusha
out
sbb
out
pop
test
(bad)
mov
ds
sub
push
stc
pop
push
in
pop
adc
inc
mov
add
pushf
adc
mov
fistp
lods
arpl
shl
add
enter
in
ret
mov
or
in
push
in
addr16
and
outs
lahf
aam
mov
inc
and
in
sti
popa
int
stos
sbb
jmp
cs
xor
fcom
pop
ds
pop
dec
push
call
sti
lods
imul
mov
pusha
loop
sub
jg
and
jge
mov
sub
out
sub
into
pop
xchg
push
sbb
inc
add
loopne
mov
xchg
sbb
pop
fmul
icebp
call
xor
shl
jmp
sbb
push
rcl
(bad)
xlat
mov
arpl
cli
popa
test
das
push
mov
push
adc
stos
lods
mov
rcl
push
shr
ficomp
cmp
or
mov
out
out
push
sub
leave
pop
out
or
icebp
mov
int
stc
or
out
jnp
retf
(bad)
out
jns
xchg
sub
int3
dec
lea
idiv
fcompp
in
iret
sbb
jmp
lods
pushf
stos
adc
push
stos
add
stos
xchg
mov
out
in
movs
mov
sbb
retf
fdivr
movs
retf
cmps
lahf
mov
mov
div
aas
mov
leave
fadd
call
lds
stos
mov
push
outs
cmp
mov
ficom
or
sub
dec
dec
cmp
xor
dec
pop
cmc
jns
pop
jp
or
in
xor
cmp
fwait
jae
jne
adc
test
loope
push
scas
or
dec
pop
or
enter
xchg
shl
gs
pop
repnz
mov
cmp
push
sbb
lea
gs
sbb
in
xor
mov
mov
add
add
xchg
xchg
add
push
pop
enter
jecxz
or
arpl
pop
mov
cdq
in
cmc
inc
sbb
sub
retf
mov
je
mov
dec
int
shl
sbb
inc
ja
dec
mov
and
inc
sti
or
sbb
sub
add
(bad)
mov
adc
fiadd
jns
add
add
int3
push
xchg
aaa
mov
neg
cmp
push
hlt
imul
sub
ja
shl
add
das
cli
inc
fistp
jno
(bad)
mov
fmul
push
dec
loop
or
loopne
aas
mov
push
jmp
scas
xlat
int3
aaa
sub
(bad)
fwait
cs
stos
(bad)
jg
pop
sbb
in
sub
jne
or
lods
xor
push
repnz
mov
push
add
les
(bad)
shl
cwde
ss
pop
imul
xchg
ja
adc
cmp
pop
pushf
adc
(bad)
adc
retf
imul
ret
cmc
gs
mov
out
inc
scas
retf
sti
es
pop
dec
cmp
cmps
gs
mov
shl
push
cmps
ja
mov
mov
fiadd
fucomip
jp
loop
pop
adc
pop
xchg
mov
imul
and
jns
and
adc
mov
add
sbb
or
sub
movs
mov
inc
cmp
and
xchg
adc
xchg
sahf
scas
ret
std
push
dec
adc
sahf
push
push
pop
push
test
js
adc
loop
call
repz
sub
push
dec
xor
cmp
je
mov
retf
cdq
fistp
sub
dec
retf
adc
cmp
mov
stos
in
mov
ins
test
ret
push
in
push
aas
dec
pop
sbb
outs
dec
retf
fisub
pusha
in
cmc
fcom
mov
(bad)
jb
push
sbb
pop
inc
arpl
into
repz
test
rcr
ror
lock
cs
mov
add
sub
pop
or
pushf
gs
out
push
push
mov
inc
dec
test
and
adc
and
inc
aaa
adc
ins
or
mov
jne
sub
sub
sar
fs
push
or
loope
xor
mov
into
add
out
test
jns
aas
dec
or
sbb
cmp
sti
adc
pushf
fstp
xor
jno
mov
sub
sub
aad
fbld
mov
jns
xchg
cmp
cmc
ror
mov
adc
mov
add
push
not
outs
call
sbb
lahf
aaa
cmps
push
sbb
lahf
inc
and
cmp
loopne
popf
icebp
sbb
jp
jo
mov
jb
les
jnp
push
sbb
xchg
leave
aaa
lea
ja
xchg
sbb
push
xor
add
cmp
lods
mov
pop
jno
push
pop
or
xchg
mov
sub
adc
out
ret
and
sub
jmp
jb
sbb
(bad)
ret
call
add
cdq
push
xchg
repz
rcl
mov
mov
push
int
and
cmps
push
mov
xchg
retf
and
mov
fcomp
ss
sahf
pop
dec
pop
test
jge
cmp
out
jle
bound
sub
cmp
sub
jl
loopne
ret
icebp
add
push
push
call
sbb
cmps
push
jge
rcr
test
ds
dec
movs
jl
dec
dec
mov
in
cmp
sahf
(bad)
call
test
xchg
cld
or
adc
jo
retf
in
sub
or
add
and
push
scas
pop
or
mov
xchg
lock
dec
fld
scas
xor
sub
clc
fs
mov
push
inc
sbb
rcr
shl
jae
(bad)
cmps
and
repnz
movs
(bad)
aad
xchg
mov
mov
pop
imul
inc
test
jbe
in
fistp
or
dec
jg
adc
mov
popf
jo
mov
adc
xor
or
popa
sub
mov
pop
(bad)
sbb
add
and
push
jg
xchg
es
cmps
mov
mov
ret
call
movs
popa
pop
aaa
mov
lock
cmps
jmp
lea
add
cdq
or
in
jp
jp
mov
push
dec
mov
icebp
sub
dec
jecxz
mov
adc
bound
rcr
and
test
mov
jg
xor
nop
xor
inc
jbe
or
sub
pop
inc
jmp
add
sub
pop
ins
xchg
into
xchg
test
outs
adc
pop
mov
js
push
and
dec
(bad)
outs
es
cdq
sub
rcr
mov
fxch
int
xor
test
(bad)
xor
ins
neg
test
fdivr
jbe
int
into
sub
jp
add
push
add
and
arpl
mov
dec
stc
or
jmp
movs
rcr
pushw
cmps
stos
cmp
xlat
loop
in
imul
cmps
cmp
mov
movs
scas
mov
push
xor
pop
outs
and
das
mov
or
adc
cmps
jno
add
or
call
fucom
push
ffreep
cmp
ficomp
test
and
xchg
mov
and
mov
adc
push
dec
sub
movs
ret
stos
cmp
add
mov
(bad)
ror
and
fistp
jb
mov
(bad)
pop
(bad)
mov
cli
popa
int3
retf
scas
cmp
pop
cmc
mov
sub
pop
sbb
cwde
adc
pop
call
or
test
das
push
dec
push
jmp
mov
dec
push
xchg
int
iret
dec
pushf
pop
add
gs
jae
adc
jb
(bad)
fldenv
pop
fidiv
add
xchg
cmps
stos
mov
cmps
lods
test
into
neg
je
test
sub
push
cld
clc
sub
push
ror
sbb
ds
mov
fwait
mov
repnz
sti
(bad)
jl
fiadd
sub
call
adc
call
(bad)
pop
and
xor
jge
in
mov
test
xchg
pop
inc
ins
popa
sbb
cld
cmp
dec
cmps
lods
lea
pop
lock
loopne
in
fwait
(bad)
sti
scas
dec
out
push
lea
in
mov
cmc
int
pop
push
out
sub
push
shl
pop
sbb
stc
rcl
std
mov
in
fsub
or
sti
arpl
inc
xor
sub
jmp
repz
fsubr
iret
clc
or
addr16
jl
push
mov
dec
outs
add
rcl
push
pop
cmps
fcom
push
cmp
and
add
ins
outs
daa
mov
or
sub
xor
and
or
adc
sahf
fst
stos
inc
in
or
jne
ror
rcr
not
fs
cmps
ins
add
ins
imul
leave
xlat
adc
lock
push
loope
mov
cdq
mov
test
iret
dec
jns
add
scas
cdq
jnp
jge
jae
je
jg
in
iret
xor
lahf
jle
sar
push
inc
fidivr
push
dec
add
mov
inc
mov
outs
test
cmp
sahf
(bad)
jg
sar
out
je
add
hlt
je
and
inc
lds
jmp
test
or
mov
mov
jb
inc
mov
pop
push
cmps
mov
arpl
inc
dec
push
dec
sub
sub
iret
pop
mov
pop
call
aas
xor
mov
mov
jge
sti
jle
mov
stos
lods
sbb
sbb
cli
mov
xor
idiv
ds
inc
push
daa
and
mov
movs
nop
jmp
xlat
sbb
enter
clc
lods
mov
imul
cmp
xor
in
mov
scas
push
push
loope
sub
repnz
scas
stos
mov
call
push
sbb
icebp
and
(bad)
mov
push
xlat
daa
loopne
adc
shr
and
xchg
jp
xor
dec
cmp
dec
(bad)
jo
mov
ret
test
test
aad
jmp
add
outs
ss
in
push
mov
ins
adc
out
popa
xchg
push
lods
call
inc
and
xor
add
xor
data16
adc
sub
fistp
rcl
dec
adc
cld
cli
repz
aaa
cmp
mov
pop
dec
mov
dec
bnd
jmp
es
inc
inc
push
ds
mov
lods
xor
data16
fdivr
scas
popa
add
inc
xor
cli
es
stos
dec
popa
loop
mov
pop
sub
fmul
mov
(bad)
add
(bad)
xchg
dec
clc
sar
mov
sbb
ret
dec
push
leave
xor
popf
arpl
mov
movs
cdq
jbe
jl
xchg
sub
cmp
push
mov
xchg
pusha
test
sub
and
ret
popa
scas
xchg
ror
scas
stos
pusha
pop
add
rcpps
adc
add
imul
popa
mov
ins
inc
imul
ror
retf
cmp
push
clc
cmp
test
mov
sub
(bad)
push
aam
int
shl
inc
ins
sub
scas
fucom
lea
add
dec
(bad)
sub
(bad)
mov
pushf
stc
sbb
push
into
add
push
shl
hlt
cmp
ds
fsub
inc
icebp
les
mov
cmc
or
sub
std
aaa
sub
xchg
dec
cmp
(bad)
jne
mov
push
in
out
js
pop
sbb
test
sub
lock
sbb
mov
push
adc
or
loopne
mov
pop
cmp
adc
push
mov
xor
jns
fisubr
inc
xchg
fwait
adc
sti
sbb
lahf
sahf
or
push
sub
jnp
inc
out
mov
loopne
cmp
push
std
leave
out
out
adc
inc
nop
pop
xor
je
pop
xchg
mov
push
ficomp
das
sbb
sub
add
jmp
pusha
mov
pavgw
test
ret
sub
and
mov
hlt
popa
mov
js
or
mov
pop
add
jl
test
pusha
retf
cmp
push
mov
movs
jle
icebp
lock
dec
in
inc
or
retf
dec
imul
bound
mov
xlat
scas
sti
sahf
inc
rol
mov
dec
pushf
cmp
dec
or
sbb
and
shl
xchg
push
pop
add
stos
in
inc
xchg
push
dec
push
call
scas
mul
hlt
lea
rcr
daa
sbb
xlat
lahf
push
jns
imul
jl
scas
loopne
inc
je
movs
adc
cmp
push
gs
int
push
sbb
nop
nop
sbb
xor
push
jo
xchg
loope
pop
jno
xchg
inc
rcl
or
and
stos
retf
test
pop
cmp
repz
iret
cmps
sub
and
rcl
or
mov
push
cdq
sub
push
dec
push
add
mov
pop
cld
(bad)
jae
inc
mov
cmp
aas
mov
dec
ficom
or
mov
rcl
ror
pop
test
fist
sub
jo
pop
add
cmp
jl
jp
out
lods
mov
pop
jae
imul
sbb
pop
(bad)
dec
cmps
ds
cmps
pushf
inc
mov
ins
fnsave
jns
mov
jmp
cmp
dec
mov
inc
xor
dec
lods
sbb
mov
out
xchg
jp
mov
dec
adc
and
loop
pop
jl
fst
mov
cmp
adc
cmp
int
outs
ins
push
sub
imul
mov
enter
xchg
push
pushf
gs
mov
scas
repz
mov
mov
cmps
and
jo
(bad)
sbb
adc
jo
adc
ins
pop
test
imul
in
mov
push
push
mov
mov
mov
shl
stos
xchg
xchg
fwait
mov
(bad)
ins
inc
jbe
aas
aaa
mov
(bad)
mov
mov
pop
pop
sub
mov
test
mov
jmp
mov
adc
enter
jno
aad
mov
stos
cwde
jmp
xchg
push
js
(bad)
loopne
and
lds
xor
dec
and
(bad)
or
movs
lds
sub
adc
add
fs
push
dec
das
inc
mov
mov
lahf
sub
lea
retf
add
add
sub
dec
push
(bad)
int
lods
mov
xchg
pusha
leave
xor
lds
lahf
xor
jmp
fstp
(bad)
pop
popf
mov
out
ins
dec
fcmovne
jecxz
ss
retf
std
push
mov
int3
lods
pushf
dec
pop
xchg
ja
push
jle
add
in
mov
into
sti
sub
push
and
xor
call
(bad)
es
mov
imul
push
sub
pop
mov
cmp
cmp
shl
pushw
ficomp
loope
nop
retf
sub
push
or
dec
in
rol
and
push
cmp
jg
imul
fiadd
gs
mov
js
in
xchg
fst
arpl
test
inc
sub
out
lods
jbe
jb
scas
mov
push
push
or
test
fcmovnb
jge
and
jns
lods
xchg
push
shl
mov
add
push
mov
xor
retf
mov
cmpxchg
dec
push
adc
mov
and
xchg
loop
pushf
cmc
inc
and
sub
pop
pop
mov
pop
fld
shr
rol
iret
adc
xor
loop
xchg
pop
stos
cmp
mov
(bad)
adc
jo
push
fs
stc
jne
sub
cmp
inc
and
lds
adc
mov
pop
dec
cmps
and
ror
inc
cmp
inc
es
xor
fmul
jno
jb
leave
mov
jae
jo
mov
shl
mov
sub
and
jb
or
stc
ja
mov
es
mov
inc
(bad)
push
pop
push
cmp
sbb
push
xor
xor
inc
inc
jl
xor
add
repnz
inc
fst
aas
imul
rcl
test
push
sub
gs
retf
inc
dec
pusha
xor
mov
push
adc
in
jmp
dec
aaa
(bad)
shr
out
adc
loopne
repnz
pop
and
xchg
pop
rol
pop
call
bnd
dec
push
ins
xor
push
and
fisttp
xlat
add
dec
rol
pusha
sbb
leave
sahf
xor
arpl
mov
pop
xor
push
cmp
mov
pop
add
sahf
cmp
push
mov
(bad)
jb
in
or
cmp
jbe
fld
(bad)
mov
int
mov
cmps
or
(bad)
xchg
jle
push
mov
inc
or
test
cli
call
or
repnz
mov
jmp
jmp
or
push
or
dec
cmc
test
add
int3
push
popf
aad
and
jg
inc
test
or
or
addr16
mov
sub
imul
int3
mov
adc
or
inc
or
dec
not
sub
jle
cdq
out
or
scas
add
pop
xchg
push
pop
rol
jle
scas
bound
js
retf
fsub
mov
mov
fcom
das
ret
rcr
push
mov
and
imul
mov
pop
pop
mov
(bad)
sbb
pop
dec
ss
idiv
push
mov
jmp
int3
fmul
xor
and
js
test
jge
pushf
mov
sub
in
xor
mov
nop
sbb
adc
loop
sbb
push
cdq
xchg
repnz
dec
addr16
pop
mov
out
cmp
repz
out
cmps
ret
sti
aaa
sub
cmps
xchg
and
pop
pop
aas
and
dec
jp
add
fcomp
xor
movs
xchg
jne
sbb
jmp
pavgb
mov
mov
call
xor
les
cwde
or
sti
wbinvd
pop
xchg
xor
lahf
push
and
imul
sbb
xchg
fs
mul
ds
xor
mov
test
add
push
or
sub
movs
sub
dec
jl
loopne
pop
sbb
xchg
popa
mov
jecxz
xor
fnstenv
inc
jl
mov
sti
out
and
pop
pop
and
add
stos
push
sub
and
gs
aaa
inc
mov
mov
movs
shl
add
sbb
xlat
add
add
fs
cmp
push
pop
dec
inc
bound
test
pop
dec
and
push
and
test
pop
cmps
cmp
les
inc
not
sbb
aaa
sahf
push
lods
mov
js
daa
shl
inc
(bad)
mov
pusha
test
xlat
test
fcomp
shl
aas
imul
leave
mov
mov
jecxz
not
or
mov
cmp
pop
fisub
xchg
inc
aam
stos
cmp
sbb
mov
mov
mov
mov
sub
cmp
aad
mov
adc
jmp
and
lods
pop
jp
out
push
popa
jno
inc
ret
movs
daa
fmul
imul
or
dec
jg
pop
pop
xor
daa
shl
loopne
out
imul
sbb
sti
loopne
out
push
jns
xor
ins
out
xchg
pusha
jbe
sub
mov
pop
imul
sub
jbe
jmp
jmp
mov
jle
jle
jo
pop
gs
mov
sub
or
or
hlt
rcl
cld
mov
movs
stc
dec
or
ror
clc
sub
adc
test
data16
and
aam
sub
js
and
movs
repz
lods
adc
test
fstp
sub
js
movs
jns
sbb
mov
mov
idiv
arpl
fld
add
cmc
mov
stos
icebp
jle
xor
mov
fisubr
stos
and
addr16
mov
int3
mov
out
add
pop
lods
mov
ins
aad
add
mov
retf
mov
std
test
jmp
arpl
cmp
and
ret
mov
inc
sbb
dec
cld
push
adc
jae
add
jl
sub
mov
jbe
push
xchg
mov
imul
jae
add
movs
inc
test
mov
xor
mov
in
mov
cmp
add
dec
out
xor
sbb
int
loopne
fiadd
push
dec
mov
adc
lea
iret
adc
inc
call
ret
push
aad
xor
jl
clc
mov
mov
ret
ret
fidivr
inc
push
sub
call
sbb
push
cmp
ins
pop
xchg
jb
cs
mov
dec
cmp
jmp
ds
cmp
push
shr
inc
xchg
xor
mov
retf
pop
and
les
mov
sub
jnp
aam
sub
imul
sbb
das
adc
adc
adc
jp
popf
push
test
shl
and
popf
cmps
lods
sbb
sub
in
inc
push
cmps
push
push
out
out
jns
inc
jg
scas
inc
(bad)
stos
int
sbb
xor
aas
push
repz
inc
mov
fs
addr16
mov
mov
cld
sbb
mov
lock
aad
ror
outs
jmp
mov
mov
jg
hlt
xchg
jle
and
lods
test
mov
push
jbe
or
sub
xchg
adc
mov
rol
sbb
xor
mov
lahf
cmps
std
sbb
add
ins
xchg
icebp
dec
mov
int3
adc
cmps
xchg
int
dec
mov
(bad)
in
movs
popf
in
inc
icebp
jnp
ret
mov
ds
mov
fstp
int
mov
call
lods
imul
outs
aas
cmps
into
imul
and
pop
add
leave
(bad)
outs
mov
xchg
xor
xor
cmp
jbe
inc
shl
jbe
shl
xchg
gs
inc
xrelease
mov
mov
test
jae
test
cwde
cmp
cmp
(bad)
jp
hlt
pop
sbb
or
push
mov
mov
pusha
lds
adc
(bad)
mov
cdq
mov
pop
arpl
xor
(bad)
test
aas
sbb
(bad)
jbe
sub
call
nop
pop
cwde
xor
fwait
jo
retf
adc
jbe
jmp
fild
cs
xchg
fimul
add
xchg
retf
lea
jmp
fisttp
mov
(bad)
or
mov
out
loop
loopne
dec
xor
fwait
cwde
cmp
inc
xchg
xchg
lea
jno
mov
iret
in
jp
xchg
(bad)
in
ret
jbe
ds
pop
out
fbstp
inc
inc
push
ins
pop
test
mov
loop
fnstcw
jmp
ret
lods
dec
sahf
dec
cmps
fs
ins
movs
dec
dec
ins
pusha
jg
jbe
push
or
mov
pushf
es
and
cwde
mov
inc
dec
mov
sub
inc
jne
fbstp
adc
jge
cdq
bound
test
mov
push
in
js
imul
leave
add
mov
adc
mov
adc
int
dec
cmc
fnsave
xor
sbb
jne
sbb
jmp
push
shr
sbb
rcr
jne
retf
das
sub
jl
sbb
cmc
fild
push
dec
jnp
pop
jne
jnp
retf
sahf
(bad)
jle
ds
jmp
adc
push
jnp
xor
movs
push
cmc
ds
push
mov
dec
jg
mov
mov
lods
test
fild
ins
cmps
mov
xor
fdivr
mov
(bad)
xchg
stc
sub
and
(bad)
push
lahf
adc
retf
popa
inc
inc
push
aas
addr16
pushf
cli
sub
ret
imul
popf
std
fwait
(bad)
adc
retf
mov
jne
int3
call
or
jp
ficom
cdq
aas
loopne
pcmpeqb
repnz
retf
ror
mov
and
pop
in
in
adc
jae
cs
repnz
ja
xor
repnz
(bad)
or
addr16
push
cli
arpl
or
mov
out
rcl
pop
cmp
dec
sub
cli
dec
pop
sti
imul
loop
repnz
mov
inc
mov
lahf
fadd
jnp
jp
mov
or
outs
pop
daa
jnp
xlat
sbb
mov
ins
mov
sbb
stc
dec
fs
inc
addr16
in
push
test
adc
aad
aam
xchg
dec
dec
xor
scas
cmp
cmps
icebp
jp
clc
(bad)
(bad)
mov
xchg
hlt
sti
gs
push
js
das
sub
mov
xchg
xchg
and
popa
imul
adc
add
call
(bad)
retf
and
push
inc
mov
icebp
sti
mov
add
jg
in
dec
scas
jb
nop
or
add
xor
xchg
addr16
mov
pop
ror
pop
aaa
mov
fistp
in
shl
inc
dec
repnz
jp
jge
fidiv
jne
enter
pusha
sar
jmp
mov
arpl
mov
pop
push
call
push
jno
retf
jns
mov
aam
dec
retf
(bad)
xchg
(bad)
adc
daa
neg
add
push
lea
sti
jb
jle
jb
inc
and
ret
ror
data16
cmp
icebp
cmps
push
jg
iret
mov
or
shl
xor
popa
mov
lods
adc
sub
push
hlt
sar
push
mov
sbb
mov
mov
pop
pop
jae
popa
loope
pop
xor
jecxz
cli
and
mov
mov
(bad)
pop
push
inc
mov
pcmpeqd
sub
popf
jmp
jle
dec
mov
add
or
aaa
in
push
sbb
adc
test
mov
xor
(bad)
fadd
xlat
imul
lods
add
add
sbb
adc
pop
std
nop
dec
pop
mov
pop
xor
sub
inc
scas
sbb
in
mov
or
adc
mov
or
add
fcom
add
jecxz
daa
es
xchg
cmp
or
add
jae
subps
movs
sub
mov
xchg
(bad)
xor
cmp
bound
xlat
mov
gs
mov
xchg
into
fidivr
addr16
retf
push
mov
mov
(bad)
sar
test
clc
push
sub
push
sub
mov
jg
ret
in
mov
inc
cmp
(bad)
loope
xor
dec
movs
cli
adc
adc
push
jp
jae
adc
xchg
repnz
and
imul
dec
lods
icebp
clc
inc
sub
aaa
pop
cli
mov
xor
or
push
adc
clc
arpl
es
or
push
jmp
in
jne
add
hlt
pusha
mov
sbb
call
push
ins
ja
jg
ror
and
scas
mov
pop
add
loope
dec
(bad)
mov
push
adc
into
test
bound
stos
sar
jno
aas
je
pop
mov
push
and
mov
mov
out
mov
fnstsw
(bad)
lods
or
pop
cdq
sub
ret
cmps
pop
(bad)
(bad)
inc
pop
mov
repz
iret
daa
(bad)
stos
fild
or
and
ds
cmps
aas
dec
clc
and
inc
dec
mov
inc
or
(bad)
jbe
pop
lea
mov
sar
dec
sub
cmc
cmp
inc
sbb
cmp
int3
les
and
pop
imul
out
inc
adc
aam
movs
mov
(bad)
fcomp
scas
and
push
jmp
adc
push
pop
cmp
outs
popf
jae
icebp
lods
repz
mov
mov
mov
sub
sbb
lds
bound
xlat
dec
mov
inc
jmp
jae
inc
in
pop
push
xchg
outs
inc
jo
inc
mov
mov
ror
inc
mov
lds
loope
(bad)
mov
std
dec
pop
sub
sub
aaa
and
add
xchg
es
pop
retf
movs
xchg
add
inc
dec
cld
repz
push
loopne
or
inc
adc
mov
push
dec
daa
popf
inc
pushf
mul
jnp
shr
rcr
sbb
or
and
add
fwait
push
fdiv
outs
cmp
inc
sbb
es
mov
mov
clc
mov
mov
and
pushw
fxch
mov
and
cmps
xchg
inc
jmp
repnz
ja
xlat
retf
inc
aas
cld
pop
mov
sub
sbb
neg
test
and
aad
jle
xor
push
inc
and
pop
shl
stc
mov
ret
mov
mov
or
stos
push
pop
xor
inc
push
or
mov
push
sub
enter
pop
iret
(bad)
leave
cli
sbb
push
test
dec
push
lods
dec
dec
fwait
xchg
dec
jnp
jle
inc
jnp
sub
fwait
cmp
push
mov
mov
aas
dec
call
sbb
xchg
mov
loopne
fidivr
dec
mov
enter
pushf
cmp
push
jnp
sbb
mov
fsubr
and
inc
inc
rol
out
outs
sbb
inc
outs
in
sbb
sub
mov
bound
stc
or
push
daa
inc
in
outs
les
mov
jge
mov
inc
stc
ret
je
les
stos
pop
out
imul
and
and
cwde
push
test
mov
cli
pop
(bad)
dec
nop
xchg
call
xchg
xchg
ds
mov
loopne
cs
loopne
lods
repz
push
inc
in
fdivr
pop
add
jnp
mov
dec
shl
ja
dec
rcr
sahf
or
sar
scas
jb
stc
xchg
push
test
inc
xchg
shl
dec
and
stos
push
mov
pop
cli
clc
cmp
rcl
xchg
inc
js
and
ret
arpl
inc
in
inc
dec
in
jge
xchg
cmp
and
push
cwde
repnz
ror
stc
enter
test
test
xchg
and
cmps
pop
cmp
into
mov
inc
and
add
out
ins
pusha
int3
inc
in
mov
mov
xchg
lds
in
inc
jb
xchg
adc
out
inc
shl
adc
or
aam
xor
out
cli
cwde
fbstp
dec
mov
jmp
jge
mov
lods
loope
push
and
test
outs
pushf
and
sbb
call
pop
lahf
inc
sbb
xor
or
xor
cmp
loop
mov
stc
jge
(bad)
jl
push
ins
add
cmp
xchg
call
idiv
pop
pop
stos
sbb
ins
dec
adc
add
dec
ins
sahf
pop
mov
jae
dec
push
inc
scas
lds
ror
pop
jp
sub
jge
(bad)
fist
xor
add
push
xchg
test
dec
dec
aam
push
test
(bad)
sub
inc
xchg
fidivr
sbb
data16
jmp
adc
and
inc
mov
jmp
mov
add
jmp
and
mov
arpl
mov
mov
addr16
bound
pop
(bad)
jnp
out
out
clc
sar
mov
pop
push
aad
call
and
loope
dec
fst
push
dec
mov
or
popa
in
add
adc
mov
repz
mov
into
add
not
fwait
jo
jl
popa
lock
dec
arpl
jg
int
jmp
mov
inc
xor
and
sub
sub
jo
or
pop
retf
add
scas
xchg
adc
and
imul
jecxz
outs
sbb
es
cmp
mov
inc
stos
inc
mov
and
jnp
jmp
popa
fwait
mov
out
in
xor
retf
xchg
dec
mov
xchg
in
xor
int3
push
pop
cmps
scas
popf
dec
jge
cmp
cmp
(bad)
or
cld
mov
repz
sub
not
inc
or
call
mov
jo
ins
push
jg
dec
loop
stos
mov
jbe
shl
loop
repnz
ins
and
mov
adc
mov
ss
cwde
mov
cwde
cmp
pop
leave
jl
test
fild
ret
cmc
fstp
sub
nop
(bad)
mov
jg
mov
retf
xchg
pop
or
lahf
push
lea
movs
inc
jno
xlat
dec
cs
in
add
push
cld
jl
movs
cwde
loope
mov
pop
aam
mov
jmp
inc
es
push
call
xchg
push
and
aas
or
loop
inc
movs
ret
or
clc
xchg
mov
std
lahf
(bad)
ficom
jp
xchg
hlt
rcl
mov
mov
adc
test
xor
aad
pusha
out
xchg
jecxz
and
xor
cmc
dec
sub
xchg
pop
pop
and
jnp
pushf
xor
test
pop
jne
xchg
ss
in
out
mov
stc
scas
pop
jbe
jo
inc
push
mov
imul
mov
jne
adc
fcomp
rcl
mov
mov
aad
add
cmps
fimul
cs
xchg
cwde
jmp
pop
adc
imul
loopne
mov
mov
and
jbe
xchg
xlat
bound
xlat
inc
cmps
clc
cmps
mov
push
mov
or
repnz
push
jb
(bad)
iret
cs
mov
or
fdivr
push
mov
sbb
sbb
fstp
jbe
mov
adc
push
and
dec
mov
pop
sbb
and
mov
sahf
fld
jbe
(bad)
or
adc
pop
ffree
inc
les
mov
xchg
mov
adc
(bad)
xor
loopne
(bad)
add
pop
xchg
js
ret
loope
iret
sub
cmp
pop
sar
cmp
in
or
add
mov
sar
dec
pop
add
out
lods
mov
jo
popf
call
adc
test
add
mov
push
pop
add
mov
mov
inc
call
fucom
int
mov
lods
lahf
xchg
lds
cmc
dec
mov
pop
ror
and
xor
jp
xor
push
xchg
jno
lahf
shr
adc
or
xchg
xchg
push
pop
jge
cmp
lahf
lods
push
sub
repnz
xor
neg
(bad)
pusha
xchg
retf
push
mov
es
dec
ins
cs
test
aas
pop
scas
out
int3
lds
and
fwait
dec
jnp
lods
adc
push
jecxz
dec
aad
rcr
mov
and
mov
pop
test
fs
jbe
mov
bound
fsub
repnz
inc
inc
mov
data16
not
xor
sbb
and
aad
dec
addr16
dec
(bad)
mov
stos
outs
inc
or
ret
mov
out
sub
add
sub
push
sub
cmp
sub
pusha
fdiv
mov
mov
mov
xor
popa
jmp
imul
out
aaa
test
mov
nop
leave
cld
scas
(bad)
fdiv
or
sub
mov
jl
adc
and
push
and
add
cdq
xor
dec
and
int3
mov
imul
out
ins
je
jmp
out
or
sub
jne
mov
jo
xchg
or
mov
sbb
ret
and
or
in
sub
imul
or
inc
movs
mov
inc
pushf
dec
jmp
and
push
loopne
pop
repz
pop
xor
ja
mov
pop
xchg
inc
dec
rol
iret
movs
jno
mov
(bad)
cs
retf
jge
sbb
ror
addr16
arpl
inc
mov
mov
aad
cmp
jl
movs
mov
out
(bad)
shl
jbe
push
jne
loope
mov
push
xchg
ds
and
sbb
inc
(bad)
bound
inc
inc
pop
(bad)
je
jmp
stc
cwde
xchg
test
or
retf
test
sbb
je
push
xchg
test
mov
add
popf
call
xor
inc
add
pop
or
dec
pusha
adc
push
xchg
sbb
fs
in
mov
sbb
dec
push
xchg
and
sbb
add
or
mov
iret
daa
scas
fist
frstor
add
or
outs
mov
lea
fstp
mov
lods
push
retf
sub
mov
adc
aam
mov
xchg
loope
stos
out
or
mov
mov
clc
pushf
add
mov
push
lods
mov
and
in
in
adc
xchg
aas
sbb
loop
(bad)
rcr
cli
sub
dec
jns
aam
bnd
dec
leave
pop
inc
ss
(bad)
mov
bound
jmp
sub
sbb
fstp
sbb
stos
mov
push
je
or
stos
stos
push
jmp
sbb
shl
pop
out
mov
mov
in
jle
pop
dec
std
mov
int3
jg
mov
aas
cmps
dec
sub
push
inc
dec
and
xchg
and
rcr
into
aas
shr
xor
sbb
dec
dec
jl
call
pop
mov
fild
fcom
add
cli
aad
lock
fldl2t
cmp
mov
adc
pop
adc
cli
aam
dec
int
pop
pavgb
ins
sar
stos
dec
xor
(bad)
hlt
nop
or
or
or
xchg
lahf
or
scas
jmp
rol
stos
xchg
mov
cmc
fs
sub
call
cmp
push
loopne
pop
ret
cmp
sub
mov
dec
mov
hlt
add
pusha
add
adc
pop
sbb
mov
cs
pop
es
cli
sub
or
push
inc
or
mov
stos
imul
scas
or
sbb
aaa
jae
mov
das
jmp
mov
je
jae
popa
pop
sbb
mov
pop
xor
jge
std
jnp
dec
dec
sub
test
or
or
test
mov
jle
ror
mov
pop
xor
add
sbb
cmp
inc
xchg
jle
repz
mov
push
xchg
xchg
mov
or
cmc
out
inc
mov
push
inc
ret
sbb
rcr
aas
retf
imul
(bad)
xor
xchg
std
retf
push
rol
push
and
and
xchg
sbb
mov
jge
cdq
add
iret
xor
mov
lahf
sub
inc
pop
jmp
sbb
imul
call
push
in
jmp
lods
daa
outs
cmp
sbb
cmps
mov
nop
shl
mul
ss
scas
push
sar
mov
cmc
pop
mov
cmp
or
icebp
fdivr
jle
out
scas
das
push
daa
mov
mov
dec
cmc
mov
mov
adc
(bad)
ret
pop
call
in
iret
jns
bound
outs
and
lods
cmp
and
sub
adc
in
fisub
lahf
or
icebp
xchg
(bad)
movs
xor
ror
sub
jno
mov
cmc
aas
cli
lahf
in
inc
inc
xor
push
lea
sbb
mov
jae
push
enter
test
mov
addr16
ror
mov
and
lods
popa
sbb
cmps
mov
popa
sub
jmp
jmp
pop
jmp
push
push
fs
scas
rol
icebp
add
dec
mov
inc
mov
test
arpl
xchg
int
pop
std
je
retf
test
shl
stos
inc
mov
cmps
ret
inc
adc
pop
test
cmp
sbb
add
dec
mov
es
test
ror
idiv
test
pop
and
mov
xor
and
in
ret
movs
std
xchg
pop
jge
dec
or
je
fadd
out
jl
shr
xor
pop
ss
xor
jmp
cmp
mov
hlt
dec
sahf
mov
out
mov
scas
out
adc
and
push
jbe
push
pop
dec
sub
mov
ret
and
clc
mov
mov
rol
mov
mov
int3
add
xchg
les
mov
mov
sub
cmc
sbb
mov
ds
mov
fimul
out
sbb
and
sti
xchg
loope
push
xlat
rcl
jae
das
adc
fld
js
ret
iret
pushf
mov
fdivr
mov
enter
push
sub
pop
(bad)
rol
inc
and
jb
xor
sbb
push
or
dec
and
pop
inc
das
gs
or
test
mov
push
xor
mov
sub
int3
cmp
rdtsc
add
push
and
or
push
ins
mov
cmp
test
jmp
add
jnp
xchg
ja
inc
sub
pop
sar
xchg
pop
iret
rcl
js
(bad)
mov
cwde
popa
xchg
sbb
fimul
push
pop
mov
ja
cdq
xor
nop
push
or
daa
outs
xchg
out
mov
icebp
push
inc
ja
push
lods
aas
mov
ficom
dec
cmp
sub
cmps
push
cmp
imul
mov
jle
pop
stos
mov
xchg
test
cmc
add
jb
xchg
inc
retf
mov
sbb
iret
sbb
and
mov
cdq
call
(bad)
imul
jp
arpl
cld
jle
push
push
add
dec
daa
repnz
out
cs
stos
call
(bad)
in
mov
jmp
pop
push
cwde
int3
enter
imul
or
repz
mov
inc
mov
imul
dec
stos
and
leave
and
test
xor
hlt
cdq
xchg
xchg
cs
in
fild
mov
xchg
pop
jg
mov
repz
xor
rcl
cmp
hlt
adc
or
xchg
sahf
test
or
xor
inc
or
sbb
sub
mov
shl
inc
mov
mov
data16
add
pop
or
mov
mov
inc
loopne
mov
or
ffreep
add
clc
mov
adc
jg
xor
sub
js
out
call
int3
pop
wrmsr
pop
push
mov
call
and
xchg
mov
rol
popa
adc
popf
fsubr
out
(bad)
pop
fcomp
and
pop
cmp
cs
sub
sub
xchg
cld
or
cdq
repz
int3
(bad)
into
xchg
inc
mov
sub
xchg
and
jae
pop
mov
jp
aam
(bad)
in
sbb
jne
(bad)
mov
inc
cmp
push
pusha
dec
adc
or
leave
cmp
cmp
push
mov
xor
push
scas
sub
(bad)
xchg
sub
mov
jo
add
shr
adc
leave
cs
mov
jo
pop
shr
popf
daa
shr
and
jp
call
push
cmp
jmp
xchg
and
loop
jmp
jle
arpl
push
xchg
dec
inc
mov
xchg
push
sub
mov
or
push
cmp
sub
sbb
mov
push
imul
cs
mov
push
xchg
test
jo
jno
icebp
sub
xchg
retf
or
xor
add
cmc
call
ins
lahf
(bad)
loopne
xor
xor
pop
sub
ss
nop
mov
push
push
(bad)
aaa
xchg
test
pop
(bad)
data16
int3
xchg
or
nop
or
cdq
(bad)
push
push
ret
inc
jmp
test
dec
mov
add
mov
push
(bad)
push
sub
jae
inc
inc
push
inc
xor
imul
inc
mov
lahf
add
mov
fwait
mov
adc
loope
loopne
icebp
stos
and
xchg
mov
int
xchg
push
jns
push
dec
mov
ror
mov
fwait
add
stos
jb
ss
xor
jl
mov
out
nop
aad
push
and
adc
dec
push
sub
ss
jno
xor
aam
int3
loop
jg
sub
inc
popa
push
(bad)
jb
(bad)
jno
cwde
jnp
mov
jecxz
dec
add
add
add
mov
and
jbe
cmps
(bad)
jne
sbb
jbe
in
pop
shl
fsub
dec
dec
lea
cmpps
out
xor
sti
mov
jns
popf
ins
out
mov
les
and
xor
ror
jg
sbb
outs
sbb
cs
sti
repnz
das
aas
in
sbb
cmc
jmp
pusha
sub
cmc
imul
hlt
push
add
and
and
sub
jmp
cmp
adc
adc
xchg
xchg
imul
cli
movs
fnstcw
lahf
jb
mov
or
adc
mov
mov
or
push
in
or
std
ret
lahf
movs
ja
push
dec
or
fisubr
leave
lea
pop
add
xor
jno
xor
mov
aam
sbb
leave
add
sub
into
rcl
je
mov
push
cmp
(bad)
in
stos
and
inc
rol
jne
xor
xchg
in
pop
cmp
jle
or
pop
xor
rcl
mov
imul
or
scas
leave
xchg
adc
cli
inc
xor
stos
sar
(bad)
and
jbe
imul
ss
mov
xchg
ds
fisubr
fwait
repnz
jecxz
xchg
mov
jns
stos
xor
call
imul
dec
dec
es
mov
jl
adc
test
mov
dec
cmp
rcr
dec
in
enter
and
inc
mov
mov
imul
cmp
xchg
mov
leave
mov
fdiv
mov
repz
outs
xor
mov
cmps
mov
(bad)
sub
sti
outs
in
ss
jb
cdq
in
retf
push
push
dec
mov
les
out
outs
daa
mov
cmps
mov
imul
push
ficomp
inc
push
fs
mov
stos
pop
xor
or
ret
push
xor
cld
scas
dec
sbb
ret
push
mov
jp
or
mov
je
jnp
jp
mov
cmps
fs
adc
and
or
daa
pop
mov
jns
leave
dec
inc
enter
or
movs
xchg
lock
inc
lds
push
test
cmp
sar
scas
mov
inc
cs
and
bound
adc
das
inc
sti
fidivr
pop
add
fdiv
mov
add
push
ins
jbe
xchg
nop
aad
push
jne
mov
scas
test
mov
jl
mov
or
enter
les
test
je
mov
xchg
ss
gs
hlt
fadd
jo
js
in
shr
dec
neg
push
push
push
cmp
scas
addr16
mov
pop
sbb
rcl
ret
xchg
xchg
mov
pop
movs
sub
add
pop
data16
push
pusha
lods
mov
mov
bound
mov
mov
dec
pushf
xor
jmp
xchg
jecxz
push
mov
xor
aam
dec
fistp
xor
mov
pop
jo
add
mov
push
in
pop
arpl
cmp
loope
icebp
out
push
les
lds
jno
inc
stos
and
mov
or
test
inc
mov
iret
mov
shl
jmp
icebp
iret
mov
adc
out
dec
call
les
push
test
ja
sub
sub
mov
mov
lods
adc
inc
mov
and
mov
jg
mov
jns
mov
popa
lods
mov
mov
nop
lds
outs
push
cmp
arpl
mov
xchg
inc
mov
outs
loope
cmp
ss
cmc
ret
xchg
push
in
shr
xchg
hlt
cwde
add
mov
test
xor
aam
cs
mov
pop
dec
xor
or
(bad)
push
daa
pop
add
mov
or
adc
jo
in
mov
loop
adc
or
sbb
mov
outs
test
cmp
xlat
add
fmul
out
(bad)
std
jl
mov
push
mov
jbe
loopne
inc
push
popf
iret
push
sub
adc
lds
inc
xlat
stos
leave
mov
xlat
test
dec
adc
cwde
mov
inc
xchg
out
push
mov
xchg
cmp
push
sub
mov
lahf
xchg
push
cmp
imul
sub
push
iret
int
xchg
ins
out
imul
out
xor
dec
pop
les
or
and
sub
pop
push
mov
xor
es
jg
jmp
es
pop
jnp
in
pusha
mov
loopne
sbb
sti
mov
xor
aad
fsub
mov
jge
nop
call
cmp
movs
jle
retf
or
jg
xchg
stos
addr16
imul
(bad)
inc
(bad)
push
sub
les
inc
or
mov
and
cmp
adc
mul
mov
mov
cmp
inc
(bad)
shl
into
add
push
xor
js
(bad)
imul
(bad)
push
imul
dec
dec
gs
call
fwait
jmp
and
(bad)
dec
scas
mov
push
xor
loop
push
push
xchg
mov
sbb
sbb
ret
int3
push
sbb
or
popa
scas
push
xchg
push
fdivr
mov
cmps
repnz
push
jg
dec
inc
mov
xor
or
sub
mov
mov
cmps
outs
aam
push
dec
jle
push
mov
pop
jp
add
jns
and
ror
push
outs
mov
or
(bad)
push
mov
add
aad
pop
out
cmc
lock
stos
xor
add
cmps
jne
stos
lods
ficomp
or
bnd
mov
and
sub
jmp
add
retf
add
pushf
popf
inc
xor
test
pcmpeqd
inc
pop
mov
ret
cmp
mov
dec
push
push
or
imul
pop
cmc
xlat
push
mov
xlat
xchg
loopne
xor
dec
in
jmp
aad
add
aaa
mov
sahf
sub
imul
sbb
add
es
and
mov
ja
cmps
inc
dec
daa
cmp
cwde
sub
jae
pop
cdq
fprem
sbb
lods
(bad)
pop
pusha
inc
jne
sbb
ret
mov
loope
adc
sbb
pop
xchg
dec
inc
fsubrp
(bad)
mov
dec
std
mov
mov
lea
out
retf
hlt
cmp
sub
pop
push
inc
xchg
mov
fiadd
je
pop
cmc
ja
sbb
out
push
dec
and
es
adc
(bad)
jnp
test
add
lods
(bad)
mov
add
pop
les
mov
test
call
mov
adc
fcmovnb
in
sub
push
adc
and
jmp
jns
mov
xchg
jne
xor
outs
push
leave
dec
repnz
pop
cmp
sahf
into
cdq
aaa
jl
pop
push
and
out
scas
cmp
fisubr
fs
inc
sbb
cmp
sbb
in
add
(bad)
ret
cld
stos
cmp
jns
data16
dec
push
test
hlt
(bad)
call
adc
push
or
push
in
xchg
mov
xor
jg
in
out
mov
dec
mov
adc
and
inc
sub
cli
shl
push
sar
shl
repnz
xor
sub
retf
ret
mov
jecxz
push
ja
aas
std
gs
jne
sbb
xor
or
ret
retf
push
xor
mov
sbb
ret
retf
xchg
mov
and
call
inc
stc
dec
jl
aaa
movs
std
jb
shl
inc
push
shr
int
sub
js
sbb
(bad)
fmul
and
xor
inc
stc
loopne
xlat
test
call
adc
movs
leave
retf
outs
div
jle
push
inc
xor
sbb
sbb
pop
fisttp
cmp
out
add
imul
call
jecxz
mov
aaa
push
out
mov
cmp
repnz
xlat
xchg
jmp
cmps
cs
shl
(bad)
repnz
aam
mov
fmulp
out
ds
in
xchg
js
imul
mov
(bad)
(bad)
mov
popa
mov
lods
mov
test
mov
loopne
lds
iret
daa
ins
movs
outs
out
hlt
fadd
retf
retf
xor
inc
iret
(bad)
retf
or
lods
lea
cs
out
add
pop
push
and
adc
jae
jl
xchg
inc
or
cmp
cmps
cli
mov
pop
sub
pushf
imul
xor
jg
nop
in
not
leave
pop
stc
xchg
cmp
inc
call
or
test
data16
fbstp
or
frstor
cmp
jmp
or
push
inc
out
and
gs
jg
jo
movs
mov
add
mov
test
sti
cmp
call
lahf
aam
je
mov
shr
inc
lds
mov
xchg
mov
rcr
shl
mov
inc
(bad)
scas
push
or
push
mov
jns
rcr
out
jle
lea
jae
data16
das
lds
test
add
stos
mov
shl
mov
and
xchg
sub
das
pushf
sti
mov
imul
add
rol
shr
lea
test
(bad)
adc
adc
fnstcw
adc
rcr
push
lea
push
or
ins
sti
jle
jnp
adc
lock
jbe
rcr
arpl
push
and
add
jb
fidiv
xor
cli
adc
pop
loope
jg
pop
push
mov
in
out
ins
in
pop
mov
out
push
xchg
jo
dec
push
mov
mov
jecxz
lock
shr
loop
das
pusha
icebp
push
add
push
jns
fcmove
add
sbb
jmp
xchg
sar
pop
scas
call
dec
or
inc
dec
push
jne
aaa
(bad)
in
pop
or
outs
shr
jnp
jecxz
enter
dec
and
xlat
lahf
and
jmp
retf
inc
xor
xor
pop
inc
jno
test
jae
dec
sbb
arpl
add
mov
push
dec
(bad)
mov
cmps
xchg
es
mov
xchg
cdq
cmp
xchg
push
xor
push
sbb
pop
and
imul
std
outs
mov
push
es
pop
fdivr
xchg
xchg
sbb
sub
jg
jno
hlt
in
pusha
or
push
dec
xor
ret
push
cmps
ds
mov
test
cmp
fs
xchg
dec
test
sub
adc
lds
xor
clc
xchg
xor
adc
ss
mov
cmp
pop
ffreep
adc
nop
mov
inc
push
cmp
mov
pop
xchg
(bad)
sub
je
xchg
push
mov
mov
aaa
xor
gs
and
test
fcomp
adc
mov
push
add
sub
pushf
pop
(bad)
or
mov
jmp
mov
jmp
fucomi
or
push
adc
in
std
pop
scas
shl
and
stos
pop
pushf
ret
mov
and
in
cmp
and
popa
mov
pusha
test
fisttp
push
xor
mov
jg
fcomi
repnz
adc
xchg
ret
movs
cmp
cmp
jg
xchg
out
mov
fldenv
sub
cmp
push
cs
and
les
ss
popa
inc
shld
cmps
mov
clc
into
test
cmp
loop
sti
sahf
scas
pop
cmc
push
repz
ins
xor
loop
retf
and
call
in
aam
cmp
push
shl
cmp
fistp
xchg
adc
cmp
sbb
test
jmp
mov
mov
call
xchg
fimul
jl
pop
mov
mov
int
mov
ja
pop
xchg
push
(bad)
sbb
aad
fcomp
popa
pop
enter
push
out
dec
adc
gs
pop
into
dec
xchg
inc
jmp
or
stos
imul
stc
mov
lods
div
jns
push
xchg
shr
mov
dec
fs
popf
xchg
fsub
push
repz
fwait
lods
rcl
popf
cmps
add
inc
push
fsub
sub
jb
jmp
sbb
or
mov
mov
out
(bad)
js
iret
xor
mov
call
xor
jno
sub
or
adc
jno
push
mov
push
cmps
inc
xchg
or
cwde
outs
sub
call
(bad)
into
jae
sub
cmp
je
sub
xor
into
pop
add
mov
mov
(bad)
jae
dec
out
rol
mov
jl
arpl
inc
into
cwde
in
clc
imul
test
jb
ds
das
xlat
xchg
bound
out
and
or
call
mov
test
mov
mov
mov
jmp
mov
test
inc
(bad)
ja
out
mov
jl
outs
in
sahf
ss
inc
mov
xor
stos
rcl
push
icebp
cmp
aas
test
outs
inc
xor
lahf
xlat
bound
xchg
inc
stc
mov
gs
cmp
push
imul
mov
push
ja
mov
and
cmp
repnz
jbe
js
xchg
mov
in
sbb
adc
and
mov
fisubr
mov
inc
ss
dec
push
jmp
into
into
mov
cmps
cmp
cwde
cld
dec
jmp
lock
push
mov
mov
cdq
pushf
arpl
mov
pop
rcl
cdq
push
xchg
sar
sbb
mov
pop
xor
(bad)
cmp
xchg
in
mov
dec
or
pop
mov
mov
and
daa
sbb
loop
test
mov
sbb
inc
test
push
cmp
retf
bsf
cli
pop
add
(bad)
ins
inc
push
cmp
inc
sbb
fwait
mov
test
ins
ud1
loopne
xchg
xacquire
loopne
adc
xchg
pop
mul
and
pop
ret
mov
jno
mov
fcmovne
jp
cmp
stos
fwait
and
(bad)
aam
cmc
xchg
imul
add
les
inc
inc
push
add
dec
ret
add
cs
popf
daa
jmp
sbb
repnz
ss
cld
ins
mov
adc
imul
