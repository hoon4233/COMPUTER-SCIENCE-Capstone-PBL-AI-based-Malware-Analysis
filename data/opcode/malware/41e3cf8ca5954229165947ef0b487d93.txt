shr
jmp
(bad)
sbb
add
inc
add
add
xchg
sbb
add
std
and
aaa
stos
das
xchg
test
retf
aaa
arpl
jae
cmps
leave
dec
and
fisubr
push
fmul
mov
cmp
ja
mov
data16
push
bound
aas
sub
retf
movs
mov
jns
fld
push
mov
leave
push
mov
adc
or
aad
mov
pop
(bad)
(bad)
test
adc
aam
stc
sub
test
invd
adc
push
cmp
data16
jb
sub
cmc
mov
enter
fs
loop
retf
or
daa
cmp
inc
xor
cmp
rcl
mov
sub
pusha
pop
cmps
arpl
push
(bad)
cmp
call
scas
addr16
push
or
cs
cmp
cli
and
stc
mov
inc
cmp
mov
jae
push
sbb
inc
in
dec
and
dec
xchg
pop
inc
push
sahf
iret
sub
(bad)
mov
push
out
dec
aas
loop
push
jmp
(bad)
mov
mov
jnp
mov
ror
(bad)
fsubr
(bad)
sub
mov
pop
clc
rol
adc
fidiv
push
push
mov
(bad)
ror
push
popf
xchg
push
clc
ss
ret
sub
jge
stc
lock
(bad)
mov
dec
mov
xchg
adc
rcl
mov
sbb
push
cld
inc
cld
push
mov
jmp
in
(bad)
out
retf
dec
cld
jecxz
cli
fwait
repz
jmp
aad
jns
pusha
(bad)
ins
repz
lds
in
daa
(bad)
ins
or
jno
mov
sbb
inc
call
icebp
cld
and
mov
dec
mov
ror
inc
jne
aam
daa
jmp
add
pop
pop
ror
call
rol
mov
imul
jne
push
(bad)
xchg
fmulp
dec
mov
mov
in
mul
push
mov
xor
jne
int
pop
mov
pop
or
jo
or
jmp
fsubr
push
sbb
rcr
pop
push
push
sub
jbe
fwait
mov
sub
ret
jl
iret
movs
repz
pop
push
sbb
ins
and
push
jns
cld
dec
adc
fistp
mov
popf
jge
mov
mov
lods
xchg
push
repnz
call
rcr
fs
push
aaa
inc
add
popa
loopne
iret
test
call
ror
jg
fmul
sbb
and
rcr
push
cmp
lea
mov
pop
je
out
and
sub
cdq
addr16
sub
jmp
jnp
loopne
sub
js
in
inc
int3
into
jge
inc
adc
and
adc
cmp
inc
mov
xor
(bad)
push
mov
mov
icebp
sub
es
push
pop
inc
fs
jle
rol
mov
inc
sub
enter
mov
mov
jp
xor
out
call
add
push
pop
imul
jmp
lods
test
lods
lock
jge
jno
cmp
inc
cmp
fst
mov
cmc
inc
push
pop
xor
cmp
scas
and
lds
(bad)
sti
fcomp
push
pop
rcr
sub
int3
jns
(bad)
rol
lea
cmp
mov
ins
pop
(bad)
dec
fsubr
ins
lods
add
push
shl
xchg
es
mov
out
fucomip
xchg
sub
imul
mov
retf
les
dec
stos
(bad)
sub
in
cdq
das
adc
int3
fsin
ss
pop
(bad)
(bad)
sar
lea
jbe
cmc
and
sbb
enter
jbe
jne
or
dec
push
mov
into
jnp
push
push
fwait
xchg
dec
push
adc
and
in
cmp
test
lahf
dec
push
pop
inc
add
jmp
sub
outs
jl
cmp
das
pop
rcr
mov
and
std
mov
out
xor
inc
inc
add
xor
sahf
(bad)
mov
push
adc
xchg
repnz
into
shr
(bad)
jecxz
cmp
adc
inc
add
cmp
loope
call
clc
add
enter
(bad)
sub
hlt
imul
mov
xor
pop
sbb
aaa
lds
push
adc
imul
shl
mov
idiv
clc
dec
movs
(bad)
pop
adc
xor
hlt
cmp
cmc
jbe
mov
gs
in
mov
xchg
and
jbe
lea
in
aaa
dec
jae
xor
cmp
sub
xor
xor
scas
sub
jl
ror
aas
js
(bad)
(bad)
scas
push
adc
retf
leave
cmp
sbb
in
xor
ins
test
mov
jb
xchg
fild
test
cmc
mov
sti
dec
pop
jp
ins
and
or
js
dec
xchg
xchg
inc
imul
pop
out
icebp
jp
retf
sub
xor
pushf
inc
in
mov
cmp
mov
std
inc
jo
xchg
test
sahf
cmps
pop
not
add
cmp
add
cs
pop
sub
pop
iret
sub
addr16
cmps
jg
push
jne
add
cmp
into
es
inc
xor
add
rol
mov
sub
jmp
lea
call
mov
jne
fist
push
mov
pusha
mov
and
rol
pushf
sbb
xor
cdq
mov
ror
xchg
push
popa
test
in
sbb
mov
jae
rcr
daa
stc
loop
push
or
xor
call
fdivr
jmp
std
retf
sbb
sub
sti
and
jge
mov
cmp
cmps
sub
out
or
imul
and
jo
icebp
lods
and
dec
adc
stos
call
push
fistp
mov
in
adc
sub
jno
fwait
cmp
jo
ret
out
jae
outs
stc
push
loope
mov
mov
push
dec
test
and
cwde
inc
js
jo
call
test
sub
sbb
mov
lods
xchg
xchg
push
adc
call
inc
xor
xlat
out
iret
jo
add
jnp
test
mov
push
mov
cmp
cmc
xor
out
das
loop
dec
outs
push
xchg
mov
nop
hlt
pop
movs
cmp
dec
les
cs
dec
aam
out
int3
push
fidivr
scas
inc
pop
mov
sbb
and
sub
in
mov
mov
adc
retf
or
or
daa
mov
out
xchg
push
cli
loope
sbb
xor
fld
into
sub
fistp
dec
(bad)
jb
push
in
and
addr16
icebp
cmps
daa
or
sahf
dec
inc
sub
cwde
dec
dec
jb
mov
js
push
adc
mov
daa
xor
(bad)
mov
movs
or
adc
inc
jbe
daa
(bad)
sbb
out
es
xchg
leave
lahf
test
ss
fbld
shl
(bad)
imul
push
pop
add
mov
idiv
push
xor
xor
jbe
dec
movs
jle
jp
adc
pop
sti
mov
mov
xchg
cmp
stos
mov
stos
jmp
dec
pop
(bad)
iret
leave
jae
fsubr
mov
fist
pop
push
repnz
cmp
dec
sbb
mov
(bad)
mov
data16
out
dec
stos
hlt
(bad)
sti
daa
cmc
inc
iret
xor
daa
pop
push
retf
or
icebp
push
mov
mov
adc
inc
loope
jecxz
imul
xor
adc
jae
mov
dec
ret
sub
mov
xor
aas
mov
jnp
ss
inc
sbb
xchg
dec
ret
scas
lock
sub
repz
(bad)
mov
sub
gs
sub
cs
xor
sub
jg
lahf
outs
mov
xchg
push
ja
pop
mov
test
shl
and
xchg
xor
mov
outs
xor
xor
stos
cwde
into
inc
pcmpeqd
es
gs
cwde
call
test
cwde
mov
pop
sub
cmp
jns
or
xlat
in
idiv
and
sbb
sub
push
ret
scas
js
mov
xchg
ret
pushf
out
ret
xlat
call
dec
mov
in
cmp
jo
and
leave
jmp
mov
sub
aam
and
push
xor
addr16
fwait
mov
into
(bad)
out
bound
xlat
inc
pop
pop
dec
jmp
pop
cld
in
mov
jae
mov
lods
fnstcw
test
xchg
push
cmc
scas
xor
xchg
ror
add
mov
into
add
daa
es
mov
adc
mov
jge
das
push
sbb
sbb
fdivr
mov
push
sbb
jle
xchg
and
std
mov
cmps
data16
pop
enter
stos
and
stos
popf
adc
add
jb
mov
and
sti
jns
adc
cmc
stos
aam
sub
mov
dec
mov
popa
mov
mov
mov
bound
and
loopne
test
ret
push
loope
mov
mov
ja
cmp
mov
sub
(bad)
scas
out
mov
xor
cmps
or
aas
(bad)
mov
cmp
je
add
or
cmovle
mov
inc
xor
call
mov
in
ds
mov
repnz
cld
push
push
mov
dec
pop
sub
(bad)
sub
aam
dec
pop
and
in
add
fistp
add
and
jp
ja
mov
pop
ror
push
pop
mov
retf
mov
dec
push
push
fisttp
dec
jmp
in
sub
cmp
or
sub
mov
shl
call
sub
ins
cmps
pop
cwde
ret
loop
and
ret
int3
shl
mov
inc
aam
lea
cs
push
mov
or
xchg
jg
retf
add
fistp
addr16
inc
add
or
out
sbb
iret
and
mov
mov
xlat
dec
fucomip
xchg
rol
mov
xchg
ins
add
scas
fisttp
adc
add
daa
inc
loope
sub
and
jg
std
daa
adc
(bad)
cmp
mov
jmp
mov
xchg
xchg
packsswb
int
xchg
and
(bad)
imul
cmp
push
xor
jle
push
jp
pop
(bad)
std
or
jb
adc
mov
les
mov
add
sub
fstp
pushf
xchg
or
imul
cmps
sbb
out
add
aas
scas
dec
aad
call
es
mov
mov
out
les
scas
inc
sahf
xchg
sbb
cmps
ficomp
mov
push
clc
addr16
xlat
dec
(bad)
std
jns
lods
int
push
sub
imul
jnp
inc
xor
(bad)
sti
xchg
retf
aad
adc
mov
lds
mov
loopne
jmp
aas
push
test
aas
retf
stos
xchg
mov
sub
mov
pop
adc
mov
(bad)
mov
push
je
retf
dec
cmps
les
pop
add
inc
mov
or
outs
stos
jno
xchg
outs
xchg
(bad)
dec
xchg
adc
call
adc
mov
aam
jnp
int3
addr16
scas
cmps
rcl
inc
imul
popf
(bad)
repnz
jno
and
jo
sbb
fiadd
sbb
aad
push
int
arpl
fs
loop
dec
sub
sub
push
pop
or
mov
test
test
xor
or
mov
push
pop
mov
std
sahf
fcom
repnz
aad
xchg
add
iret
imul
stc
push
mov
imul
add
js
outs
xor
dec
jg
dec
rcr
jnp
(bad)
jb
ds
cmps
clc
aad
lahf
rol
cmps
inc
or
xchg
cld
scas
loop
lds
fdiv
and
jg
add
(bad)
jp
add
(bad)
push
cli
stos
mov
sti
lds
les
aaa
dec
xchg
cmc
pushf
in
mov
lods
mov
clc
inc
push
dec
mov
jle
mov
sbb
inc
xchg
outs
jle
in
inc
stos
sti
cmp
xchg
sar
mov
lea
cmps
aam
loopne
repz
rol
push
das
(bad)
into
ins
movs
push
rcl
mov
fidivr
bound
xchg
sub
pop
test
jbe
xor
pop
frstor
data16
jns
cmps
jne
imul
inc
add
pop
pop
xlat
dec
scas
bound
test
movs
call
nop
mov
leave
mov
inc
pop
xchg
mov
jae
leave
push
sti
movs
lods
inc
ret
pop
ret
arpl
sub
test
icebp
std
adc
retf
sub
sbb
das
mov
and
add
movs
mov
xchg
pushf
retf
mov
sub
push
clc
cs
retf
push
or
xchg
cmps
lods
and
cmps
jecxz
sub
pusha
scas
ds
add
cmp
aas
pop
(bad)
mov
jmp
cmp
mov
fsubr
and
nop
ds
add
outs
int
sbb
pop
cmp
(bad)
enter
out
jo
add
sbb
jecxz
shr
popa
mov
outs
test
addr16
jns
mul
test
retf
retf
jl
fcomp
(bad)
scas
hlt
mov
mov
sub
pop
pop
jp
sbb
pop
push
mov
mov
xchg
call
std
sub
test
pop
xchg
xlat
fdiv
movs
aas
push
ss
xlat
mov
adc
mov
push
pop
sbb
faddp
ror
mov
popa
inc
mov
ja
inc
mov
lds
sub
out
(bad)
sti
cmp
mov
sub
jmp
inc
in
loope
mov
and
enter
(bad)
popa
fwait
mov
cmps
xchg
ja
inc
cmps
inc
cmp
scas
inc
jg
mov
xor
cwde
clc
scas
not
or
cdq
(bad)
push
pushf
loop
ins
retw
fisttp
jecxz
xchg
push
xchg
imul
addr16
mov
mov
sbb
cmp
pop
xchg
jne
jp
scas
sbb
ins
cs
out
ja
stos
xchg
jle
dec
icebp
dec
inc
test
rcl
fidivr
out
(bad)
int3
dec
daa
movs
das
fisub
xchg
mov
ror
outs
and
dec
in
int
xchg
mov
cmps
popa
mov
sbb
sbb
and
in
jnp
rol
imul
inc
dec
cmps
in
xchg
test
cmp
push
mov
int3
(bad)
std
rcl
sbb
cld
xchg
stc
push
je
jp
xchg
aaa
or
mov
mov
sub
fs
(bad)
xchg
push
add
mov
cli
xchg
sti
add
adc
sub
icebp
xchg
adc
sub
fcom
xlat
inc
inc
xor
div
js
aaa
add
push
lods
push
push
add
popa
loope
call
rol
test
cmps
adc
lds
outs
cmp
xchg
add
or
mov
popf
dec
ror
xor
fwait
mov
aad
sbb
stos
and
pop
leave
mov
dec
mov
repz
mov
mov
xchg
sar
jns
call
adc
(bad)
shl
(bad)
push
nop
xchg
pmullw
adc
push
out
sbb
add
scas
js
xor
mov
mov
cs
(bad)
fnstcw
pop
stos
in
hlt
inc
popf
pop
jns
sub
dec
mov
sbb
push
cmp
xchg
pop
hlt
mov
cmp
xor
mov
pop
inc
mov
push
cmp
or
loope
popf
ds
adc
mov
lea
cmp
lods
repnz
imul
shr
mov
inc
jns
cdq
or
xchg
sub
xchg
icebp
mov
push
adc
jge
pop
cmps
jmp
jmp
(bad)
mov
jle
mov
stos
pop
mov
retf
add
sub
in
aam
shl
dec
cmp
neg
imul
push
cmp
ss
cmp
stc
jne
push
push
sbb
push
out
cwde
sbb
push
pop
cli
cs
xchg
and
(bad)
cdq
aas
cmps
inc
into
inc
sbb
push
xchg
outs
pushf
lock
xor
xchg
sub
mov
lods
cmp
scas
push
inc
cli
stc
add
push
xchg
test
or
test
test
sub
cwde
(bad)
out
mov
push
(bad)
jecxz
and
and
push
out
lock
cwde
neg
lea
mov
mov
jb
nop
xor
ins
(bad)
xchg
push
imul
test
inc
cmp
jno
dec
adc
test
pop
jmp
jmp
out
jecxz
lds
or
clc
icebp
adc
(bad)
inc
push
mov
mov
mov
add
aam
fsub
sub
stc
cdq
(bad)
sbb
(bad)
pop
inc
mov
leave
jnp
jg
clc
aad
jge
daa
mov
cmp
pop
xor
cmp
leave
or
sbb
inc
cmps
xor
add
jne
inc
inc
imul
adc
jge
push
shl
jmp
das
sbb
fld
mov
xor
cmc
ins
push
mov
xor
lods
sbb
push
pop
cli
clc
dec
mov
inc
xacquire
je
mov
inc
das
js
xchg
sbb
lea
fild
jbe
push
jbe
lea
push
out
out
bound
xor
fnstenv
je
pop
pop
lahf
add
adc
cmp
mov
je
mov
stos
pop
sar
push
xor
jle
push
mov
and
ds
jecxz
push
xchg
push
inc
cld
imul
xor
xor
call
sbb
jns
cmc
fwait
rol
int3
in
inc
mov
leave
iret
add
xor
cmp
sti
jle
test
dec
sub
fstp
and
pop
loope
(bad)
sbb
int3
xor
sahf
adc
cmp
aas
jmp
sub
pop
mov
fstp
movs
mov
data16
jmp
push
sub
shl
inc
ins
inc
mov
les
and
hlt
inc
xchg
adc
xor
xchg
and
in
jbe
int
jns
pushf
icebp
cli
cmp
jmp
std
mov
popa
add
mov
or
repz
adc
sbb
loope
adc
pop
mov
pop
cmp
mov
fst
pop
inc
mov
retf
int
mov
rcl
adc
stos
push
pusha
jle
jp
lds
mov
leave
(bad)
push
xchg
test
cmp
cmp
test
ret
(bad)
add
xlat
fs
ins
arpl
cli
mov
in
sahf
pop
adc
push
and
mov
or
mov
push
push
and
ja
jno
xchg
xor
pop
loopne
pusha
and
pop
add
inc
fcom
push
idiv
clc
mov
cmps
mov
pop
(bad)
sbb
(bad)
or
icebp
mov
das
mov
mov
pop
loopne
jbe
cmp
or
aaa
(bad)
out
sbb
aam
dec
inc
xchg
add
push
scas
ja
dec
sub
xlat
call
pop
jl
add
in
add
sub
mul
test
sub
add
scas
push
xchg
out
int
bndstx
sub
in
fnsave
rcl
(bad)
mov
pop
sbb
je
js
push
add
sub
mov
int3
pop
and
icebp
pop
sub
out
test
hlt
xchg
popf
inc
push
mov
pop
in
inc
aad
test
rcl
mov
push
or
fstp
sbb
push
bound
data16
add
(bad)
sbb
push
sbb
popa
push
(bad)
xor
cmp
(bad)
jle
fsub
cmp
inc
daa
loopne
xchg
pop
mov
jecxz
mov
mov
stos
mov
dec
outs
(bad)
fnstenv
push
push
ret
add
pop
(bad)
mov
jbe
sar
shl
loop
mov
mov
mov
div
test
hlt
add
jo
dec
imul
sbb
adc
xchg
xchg
mov
dec
sub
xor
dec
out
adc
inc
aad
daa
dec
jb
in
dec
and
push
mov
outs
mov
outs
jbe
or
sbb
pushf
inc
test
(bad)
push
push
push
shl
movs
sub
pop
sub
or
xlat
(bad)
jns
or
shl
bound
add
rcr
sub
jno
shl
std
mov
pop
mov
xor
into
mov
ins
retf
push
adc
dec
enter
cmp
xlat
ins
fist
(bad)
fnstenv
call
jmp
hlt
push
jecxz
shl
in
push
or
movs
xchg
dec
loop
int
push
js
pushf
and
jp
cli
xchg
imul
dec
cmps
ins
push
mov
lock
jp
pop
iret
inc
sbb
adc
loop
ret
dec
push
scas
std
push
(bad)
adc
fcom
push
cmp
and
lock
clc
dec
adc
(bad)
in
sub
pavgb
(bad)
xor
sbb
xor
pop
cmps
or
(bad)
lahf
jp
(bad)
jle
popa
sub
aad
dec
cs
leave
idiv
mov
dec
arpl
jecxz
push
jl
push
sahf
cmp
cmp
les
leave
adc
int
call
adc
mov
or
in
push
test
ror
xchg
aaa
jns
mov
jmp
arpl
add
add
add
adc
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
