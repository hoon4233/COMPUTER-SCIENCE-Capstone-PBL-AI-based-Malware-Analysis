and
or
add
add
dec
add
add
add
add
int
add
add
add
pop
add
sar
add
add
add
sub
add
push
sub
add
push
sub
add
pop
add
or
adc
add
mov
add
adc
add
add
cmp
add
cmp
or
add
pop
sub
js
add
outs
or
add
cmp
push
add
add
and
outs
or
add
pop
adc
sub
add
push
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
or
add
push
add
cmp
or
add
or
add
add
pop
cmp
cmp
inc
sub
add
jae
add
or
add
or
sub
or
sub
push
add
or
sbb
add
jle
add
add
add
jae
add
or
jae
add
or
and
add
add
push
add
cmp
add
add
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
iret
(bad)
(bad)
call
add
and
add
add
or
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
push
add
or
fld
add
add
fild
add
(bad)
sbb
add
add
add
add
add
jbe
add
sbb
add
sbb
add
and
add
add
add
jle
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
add
add
jle
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
add
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
push
add
adc
add
add
adc
cmp
add
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
cmp
add
add
or
sldt
add
mov
add
add
add
cmp
add
(bad)
sbb
sub
add
adc
add
add
add
sbb
nop
add
sbb
add
and
add
or
add
add
sbb
add
or
add
add
push
or
push
add
add
mov
sub
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
and
add
or
add
rol
add
add
sbb
add
or
add
add
push
or
or
add
push
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
pop
add
sbb
add
sbb
add
push
add
add
add
adc
sub
add
or
cmp
add
add
or
or
add
push
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
add
add
add
adc
mov
adc
add
sub
add
sub
cmp
add
cmp
add
add
or
add
add
push
or
adc
add
push
mov
mov
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
sub
adc
add
sbb
add
add
add
add
add
adc
push
add
push
mov
add
add
sbb
cmp
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
add
cmp
add
or
sbb
pop
add
sbb
or
add
sub
add
sub
jle
add
or
cmp
add
add
or
push
add
add
mov
add
sbb
sub
sbb
sub
add
add
add
add
sub
add
sbb
add
push
add
sbb
add
sub
xor
rol
add
add
add
and
add
add
sbb
add
cmp
add
cmp
add
or
add
or
outs
or
add
pop
adc
sub
xchg
add
add
add
push
add
cmp
add
add
outs
or
add
pop
sub
js
add
outs
or
add
cmp
add
and
add
add
push
add
cmp
add
pop
cmp
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
inc
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
call
or
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
or
inc
sub
add
jae
add
or
or
sub
or
sub
push
add
sbb
add
sub
xor
add
add
adc
pushf
add
push
cmp
daa
add
add
add
push
or
sub
add
push
fst
add
add
lea
add
or
push
push
mov
add
fld
add
add
add
adc
add
add
add
and
push
sbb
add
or
sub
or
sub
push
add
and
add
sub
add
sbb
add
sub
xor
rol
add
add
adc
add
add
dec
add
cmp
add
push
outs
or
add
pop
sub
js
add
outs
or
add
cmp
push
add
add
push
add
cmp
add
sub
add
or
and
cmp
add
add
push
or
add
add
sub
add
cmp
add
es
outs
or
add
pop
adc
sub
add
push
cmp
add
pop
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
push
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
inc
sub
add
jae
add
or
or
sub
or
sub
push
add
pop
add
or
push
add
or
sbb
add
js
add
add
add
jae
add
or
jae
add
or
and
add
add
push
add
cmp
add
add
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
fld
add
add
fild
add
(bad)
sbb
add
add
add
add
jo
add
sbb
add
sbb
add
sbb
add
sldt
adc
add
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
or
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
fisttp
add
add
mov
add
add
add
cmp
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
or
add
add
sbb
add
or
push
add
add
mov
sub
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
or
add
ror
add
add
sbb
add
or
or
add
push
add
lods
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
adc
sub
add
or
fisttp
add
add
add
lods
add
push
(bad)
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
or
add
add
or
add
sub
add
sub
fstp
add
add
or
adc
add
push
mov
mov
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
mov
add
add
sbb
cmp
add
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
xor
ret
add
add
adc
add
add
sub
add
push
cmp
add
es
cmp
outs
or
add
pop
sub
js
add
outs
or
add
cmp
push
add
add
push
add
cmp
or
add
and
outs
or
add
pop
adc
sub
pop
add
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
or
add
or
add
add
dec
add
cmp
or
inc
sub
add
jae
add
or
add
or
sub
or
sub
sbb
push
add
add
add
adc
jnp
add
or
add
or
pop
mov
add
sbb
adc
add
sub
add
sub
add
add
or
outs
sub
add
pop
or
add
mov
add
sbb
mov
add
sbb
mov
add
sbb
sub
sbb
sub
adc
add
add
add
xor
sbb
add
or
add
pop
add
add
add
add
sub
add
add
add
or
add
or
or
add
add
dec
add
push
(bad)
sbb
add
adc
add
add
add
push
add
sbb
add
or
sub
or
sub
or
add
sbb
add
add
add
add
sub
add
add
add
push
fisttp
add
add
sub
add
(bad)
sbb
add
add
add
add
push
add
adc
or
add
or
add
cmp
add
add
cmp
add
add
jnp
add
add
or
add
add
add
add
sub
add
fisttp
add
add
add
sub
add
(bad)
push
add
add
add
lods
add
push
(bad)
sbb
add
add
sbb
add
add
add
and
or
add
add
add
add
add
sbb
add
sbb
pop
add
add
add
add
adc
outs
sub
adc
and
add
inc
and
add
sub
add
or
outs
das
add
or
add
add
dec
add
cmp
add
add
adc
and
add
and
xor
add
or
add
or
pop
push
js
add
outs
xor
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
lods
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
push
js
add
outs
xor
add
and
push
add
cmp
pop
outs
xor
add
and
add
add
push
add
cmp
push
outs
xor
and
add
push
mov
add
pop
mov
add
or
mov
sub
add
push
(bad)
sbb
add
adc
add
add
add
retf
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
add
mov
iret
add
push
rol
sbb
add
sub
add
or
or
sldt
add
mov
add
cmp
add
(bad)
sbb
sub
adc
add
add
add
daa
add
sbb
add
sbb
pop
add
add
adc
add
add
fadd
add
add
iret
add
push
or
rol
sbb
add
sub
add
or
pop
movs
add
fst
add
add
mov
add
add
or
add
sti
add
push
(bad)
sbb
sub
add
adc
add
add
add
sub
push
sbb
add
push
add
sbb
add
sub
add
sbb
add
sub
xor
mov
add
adc
aaa
add
or
outs
cmp
add
and
add
add
push
add
cmp
add
add
mov
add
add
cmp
add
es
mov
add
add
cmp
add
and
add
add
cmp
add
add
add
add
add
or
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
or
jnp
add
add
and
push
add
cmp
or
sub
or
add
add
dec
add
push
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
push
fisttp
add
add
sub
add
(bad)
sbb
add
add
add
add
sbb
add
sbb
add
or
sub
or
sub
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
or
sbb
add
push
mov
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
fstp
add
add
mov
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
or
add
or
sbb
add
push
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
pop
add
adc
add
sbb
add
sub
add
or
add
or
jnp
add
add
pop
or
cmp
add
pop
rol
sbb
add
sub
pop
add
or
sub
add
or
movs
add
add
and
mov
mov
add
add
or
jno
add
add
sti
add
push
(bad)
sbb
add
add
add
add
add
add
dec
dec
add
or
sub
or
sub
sbb
or
adc
add
and
add
adc
and
push
push
add
sgdtd
add
mov
add
or
or
stos
add
add
sbb
or
add
add
jnp
add
add
add
add
add
pop
push
add
or
pop
add
add
push
add
push
cmp
add
add
cmp
add
pop
or
jnp
add
add
add
adc
(bad)
(bad)
jmp
add
add
dec
push
add
mov
jnp
add
add
adc
and
add
pop
push
add
xor
add
add
add
add
adc
and
add
pop
push
add
or
add
sub
add
cmp
add
adc
pop
adc
pop
add
add
add
pop
adc
push
add
add
push
push
add
xor
pop
pop
and
add
add
add
jnp
add
add
xchg
add
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
push
push
add
or
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
jge
add
and
add
add
push
push
add
sar
inc
jnp
add
add
adc
and
add
pop
push
add
dec
add
add
pop
or
and
add
add
push
add
push
cmp
or
cmp
add
add
jnp
add
add
(bad)
xor
add
and
add
push
add
add
adc
add
or
mov
add
add
cmp
(bad)
call
add
jnp
add
add
cmp
add
add
mov
mov
mov
mov
add
add
add
add
add
inc
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
or
add
sbb
add
add
and
add
or
jge
add
add
or
add
add
dec
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
or
add
sbb
add
add
add
add
jnp
add
add
sbb
add
fisttp
add
add
add
lods
add
push
(bad)
sbb
add
adc
add
add
add
adc
or
add
sbb
pop
add
add
add
add
adc
jae
js
add
sub
xchg
add
add
js
add
sub
or
add
adc
pop
jae
js
add
sub
rol
add
sub
add
sub
or
or
jae
js
add
sub
push
add
add
js
add
sub
push
add
sub
pop
pop
jae
js
add
sub
dec
add
add
js
add
sub
sldt
sub
add
add
js
add
adc
popf
add
add
js
add
or
jae
js
add
sub
scas
add
add
js
add
sub
adc
add
adc
and
add
add
js
add
or
add
js
add
or
adc
add
sub
add
or
and
add
sub
add
sub
inc
add
add
js
add
sub
adc
add
adc
adc
lar
add
add
outs
test
add
cmp
add
add
add
or
pop
push
outs
mov
add
es
inc
adc
pop
adc
cmp
add
add
or
add
adc
or
add
cmp
add
add
add
or
or
add
pop
inc
add
add
add
add
add
add
add
mov
or
add
add
add
or
add
add
add
nop
add
push
cmp
or
push
adc
adc
jl
add
add
cmp
add
add
add
add
add
add
or
add
add
add
outs
nop
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
and
inc
add
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
add
add
push
adc
cmp
add
add
nop
add
add
inc
add
or
add
add
add
add
dec
adc
dec
add
add
add
(bad)
(bad)
dec
add
iret
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
adc
lar
add
add
add
inc
add
add
or
add
push
fisttp
add
or
mov
add
add
inc
add
or
or
add
add
add
add
inc
add
add
or
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
sub
add
fld
add
add
adc
and
inc
add
or
or
add
add
add
push
outs
add
push
adc
add
add
add
js
add
jae
add
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
add
add
add
or
add
add
add
outs
nop
add
push
sub
or
or
into
std
(bad)
call
mov
add
add
cmp
add
and
add
add
push
adc
add
lar
add
add
sub
add
outs
inc
add
or
mov
add
add
cmp
add
cmp
add
add
add
add
dec
adc
add
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
jmp
inc
add
or
add
or
add
add
dec
adc
(bad)
call
mov
add
add
cmp
add
fst
add
add
or
adc
inc
add
or
add
add
(bad)
add
add
push
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
add
add
sbb
add
mov
add
adc
pop
adc
add
mov
add
push
(bad)
sbb
add
add
add
add
and
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
or
sbb
add
add
adc
jnp
add
add
add
add
add
dec
or
cmp
add
cmp
mov
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
and
add
add
push
add
push
cmp
add
add
or
add
add
jnp
add
add
pop
or
add
push
add
add
cmps
add
add
and
add
add
add
pop
jge
add
add
sbb
fld
add
add
jge
add
add
or
add
dec
or
cmp
add
add
jnp
add
add
jnp
add
add
or
add
pop
adc
frstor
add
add
add
add
sub
add
push
and
cmp
(bad)
jmp
or
cmp
add
sbb
sbb
add
jge
add
add
or
add
dec
or
cmp
sbb
add
add
add
sub
add
push
jge
add
add
jnp
add
add
cmp
add
add
adc
(bad)
add
add
and
add
pop
jge
add
add
sbb
fld
add
add
adc
jge
add
add
push
jge
add
add
add
add
dec
or
cmp
add
add
sbb
add
add
test
sbb
sbb
add
or
arpl
add
and
add
dec
or
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
or
add
add
add
add
push
add
add
cmp
sbb
fld
add
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
xor
add
jge
add
add
or
add
dec
or
cmp
(bad)
inc
push
cmp
add
add
adc
fld
add
add
pop
adc
pop
add
add
push
jge
add
add
pop
pop
adc
nop
add
add
sbb
add
add
xchg
add
jnp
add
add
or
or
sbb
add
or
add
add
adc
and
add
add
cmp
(bad)
(bad)
jmp
fnsave
or
fld
add
and
add
add
push
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
push
add
add
(bad)
(bad)
call
(bad)
jmp
add
pop
(bad)
(bad)
call
pop
std
(bad)
inc
add
sub
add
push
jge
add
add
jnp
add
add
cmp
std
(bad)
call
adc
and
add
add
push
or
cmp
push
cmp
add
add
adc
fnstsw
add
add
sbb
fld
add
add
add
add
xchg
add
add
jnp
add
add
push
rcr
add
pop
jge
add
add
jnp
add
add
jnp
add
add
inc
(bad)
(bad)
inc
add
add
add
mov
add
jge
add
add
adc
mov
add
push
jge
add
add
sbb
add
add
pop
add
add
push
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
or
cmp
add
add
add
jnp
add
add
inc
add
add
adc
and
add
add
fdivrp
(bad)
inc
jnp
add
add
cmp
add
add
adc
(bad)
add
add
add
pop
jge
add
add
add
cmp
fisttp
add
add
jge
add
add
es
(bad)
inc
mov
mov
mov
mov
add
add
add
add
push
mov
add
add
pop
mov
add
mov
sbb
or
add
inc
sbb
add
add
add
add
add
add
add
add
imul
add
push
outs
dec
add
or
and
add
add
jle
add
sub
add
outs
or
add
cmp
add
add
xchg
add
add
js
add
sub
sub
xor
add
add
add
add
adc
fadd
add
sub
add
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
adc
add
jge
add
add
add
and
add
add
push
add
cmp
push
jge
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
dec
add
or
add
add
dec
add
cmp
outs
dec
add
or
add
stos
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
add
add
add
add
sub
add
add
add
push
sub
add
adc
and
add
sub
add
cmp
push
add
jnp
add
add
add
pop
sub
or
adc
add
add
jnp
add
add
jnp
add
add
sub
add
jnp
add
add
pop
and
jg
add
add
jnp
add
add
pop
jge
add
add
push
add
add
cmp
add
es
pop
inc
retf
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
and
add
add
add
add
or
add
add
sub
add
cmp
add
add
add
ds
(bad)
inc
add
add
add
jnp
add
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
inc
or
sbb
add
push
mov
mov
add
add
sti
add
push
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
add
sbb
add
sub
add
xlat
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
outs
dec
add
or
add
push
add
cmp
sub
add
cmp
add
add
dec
add
cmp
add
add
xor
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
add
push
sub
xor
add
add
adc
sbb
or
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
add
sub
add
xor
add
add
add
add
adc
adc
or
or
add
dec
adc
cmp
add
adc
adc
xchg
pop
adc
or
pop
pop
bound
add
or
push
adc
cmp
pop
pop
or
push
add
add
sub
add
or
mov
add
add
adc
add
add
adc
out
add
pop
adc
adc
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
push
pop
or
mov
pop
add
add
push
adc
cmp
add
add
adc
adc
pop
pop
pop
bound
adc
adc
adc
jb
add
pop
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
and
add
add
cmp
adc
pop
adc
pop
pop
pop
bound
adc
adc
add
add
aas
sbb
add
and
add
add
push
adc
cmp
add
cmp
jnp
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
and
add
cmp
add
add
adc
add
add
add
add
add
adc
pop
movlps
cmp
add
cmp
add
or
mov
(bad)
jmp
or
add
dec
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
add
push
add
add
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
add
and
push
adc
cmp
adc
or
or
ja
(bad)
inc
or
add
dec
adc
cmp
sete
add
add
cld
add
push
adc
adc
pop
or
add
add
add
adc
push
sbb
punpcklbw
and
add
add
push
adc
cmp
(bad)
inc
adc
xchg
and
adc
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
adc
adc
pop
(bad)
adc
(bad)
jmp
add
add
cmp
(bad)
(bad)
dec
push
xlat
std
(bad)
inc
or
and
add
pop
add
dec
adc
cmp
(bad)
(bad)
call
add
cmp
add
or
or
or
add
jnp
add
add
or
push
adc
sbb
or
popf
adc
pop
adc
pop
or
pop
pop
bound
or
or
add
or
aas
(bad)
(bad)
(bad)
call
or
pop
adc
adc
pop
or
(bad)
(bad)
call
adc
cmp
add
add
adc
xchg
adc
adc
cmp
std
(bad)
jmp
or
add
dec
adc
cmp
call
push
add
(bad)
(bad)
fucomp
add
add
adc
add
adc
adc
push
mov
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
mov
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
adc
add
into
add
add
add
adc
add
add
cmp
add
(bad)
jnp
add
add
repnz
add
dec
add
or
and
add
dec
add
cmp
add
add
jnp
add
add
outs
dec
add
or
add
add
add
push
add
or
add
add
add
add
add
add
push
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
pop
outs
push
add
or
push
add
add
push
add
cmp
jnp
add
add
outs
push
add
or
jne
(bad)
jmp
add
fwait
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
adc
outs
push
add
or
add
or
and
add
add
push
add
cmp
mov
add
pop
pop
or
add
add
dec
add
cmp
add
or
mov
inc
add
add
push
add
add
pop
add
add
outs
push
add
or
add
or
and
add
dec
add
cmp
add
pop
adc
add
adc
add
pop
add
add
or
add
cmp
add
push
or
mov
(bad)
inc
or
xchg
(bad)
(bad)
call
or
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
push
(bad)
call
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
call
or
add
pop
or
add
sti
add
push
(bad)
sbb
sub
add
add
add
add
aam
add
sbb
add
adc
add
add
add
adc
sbb
or
push
add
push
sub
add
push
sub
sbb
or
popa
add
add
add
adc
jnp
add
add
jnp
add
add
push
add
cmp
add
add
and
add
add
repz
add
and
call
int
add
and
add
dec
add
dec
add
add
add
add
mov
(bad)
call
add
add
add
add
add
add
add
aad
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
out
add
push
or
jnp
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
sbb
dec
add
add
and
add
sbb
pop
pop
jge
add
add
push
add
add
inc
(bad)
(bad)
inc
and
add
and
sbb
jge
add
add
add
pop
sub
add
push
or
add
add
pop
cmp
add
adc
add
or
add
mov
mov
mov
add
add
mov
test
sbb
sub
add
inc
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
jnp
add
add
call
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
add
fisttp
add
add
add
lods
add
push
(bad)
sbb
add
add
add
add
add
sub
add
sbb
add
sbb
pop
add
add
adc
sub
add
push
add
and
add
and
add
add
push
add
cmp
add
add
add
add
jnp
add
add
add
add
add
push
or
add
sub
add
add
add
cmps
add
push
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
or
and
add
push
mov
add
add
mov
add
add
add
add
add
add
sti
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
or
push
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
add
add
dec
add
push
(bad)
sbb
add
adc
add
add
add
sub
or
add
sbb
push
add
add
adc
jnp
add
add
xor
add
or
add
add
sub
add
cmp
add
add
sub
add
add
add
add
jnp
add
add
push
add
add
add
push
add
or
sub
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
lods
add
push
(bad)
sbb
sub
add
add
add
add
add
jbe
add
sbb
add
sbb
add
add
jnp
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
and
add
add
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
scas
add
add
add
add
add
popf
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
and
inc
add
fst
add
push
mov
add
add
mov
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
add
add
push
add
or
cmc
add
push
sub
sbb
add
and
add
add
add
add
retf
add
push
add
retf
add
push
pop
adc
or
or
add
add
dec
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
add
icebp
add
add
add
adc
jnp
add
add
fld
add
sub
add
jae
add
push
adc
outs
pop
add
or
add
sub
add
push
and
add
add
js
add
or
outs
pop
add
or
fld
add
add
fld
add
add
jnp
add
add
out
add
add
js
add
pop
outs
pop
add
or
outs
pop
add
or
add
or
jnp
add
add
cld
add
add
js
add
or
add
or
pop
and
add
or
outs
pop
add
or
and
add
add
js
add
outs
pop
add
or
add
add
push
or
add
or
jnp
add
add
push
add
add
js
add
or
add
or
add
jae
add
push
sub
add
push
fld
add
add
fld
add
add
sldt
add
add
pop
add
add
add
sub
add
fsubr
add
add
sub
add
add
add
add
or
add
add
pop
add
add
add
add
add
loope
sldt
add
sbb
or
add
add
adc
and
add
add
push
add
push
cmp
add
cmp
or
add
add
push
cmp
add
add
adc
scas
add
push
and
add
add
cmp
add
add
cmp
add
add
or
scas
add
push
or
cmp
cmp
add
or
and
add
add
adc
scas
add
push
add
add
add
call
sbb
inc
add
push
cmp
add
pop
or
and
add
add
push
push
add
fiadd
add
add
add
add
add
adc
(bad)
(bad)
jmp
mov
add
or
or
pop
add
add
mov
jnp
add
add
call
pop
sbb
push
and
add
add
push
push
add
xchg
add
add
jnp
add
add
call
sbb
inc
add
push
cmp
add
add
pop
adc
scas
add
push
and
add
add
push
push
add
add
add
or
adc
add
adc
push
push
or
add
pop
adc
adc
add
adc
pop
adc
pop
pop
and
add
add
add
jnp
add
add
sldt
add
add
add
add
add
cmp
(bad)
(bad)
dec
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
or
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
push
(bad)
inc
(bad)
call
add
add
add
push
push
add
mov
or
add
pop
or
push
add
add
mov
(bad)
call
add
jnp
add
add
out
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
inc
add
push
(bad)
sbb
add
add
add
aad
add
aad
add
das
add
add
add
sbb
add
add
add
adc
daa
add
add
js
add
adc
and
add
add
push
add
push
cmp
add
cmp
add
add
adc
push
adc
or
add
push
adc
add
and
add
sub
add
adc
and
add
sub
add
adc
adc
add
call
outs
bound
add
sub
add
adc
push
or
add
or
push
and
add
add
enter
and
add
sub
add
adc
and
add
add
pop
sub
add
adc
outs
data16
or
add
or
or
add
or
adc
sub
add
or
or
adc
or
or
or
or
pop
push
pop
outs
imul
jae
add
or
adc
add
add
dec
adc
add
push
jae
add
or
or
or
push
jae
add
or
push
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
add
add
sub
add
cmp
add
add
sbb
add
adc
pop
outs
outs
add
or
out
(bad)
jmp
add
add
dec
adc
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
(bad)
(bad)
(bad)
out
(bad)
(bad)
dec
(bad)
(bad)
push
dec
add
add
add
add
dec
adc
(bad)
call
push
adc
pop
adc
or
add
adc
adc
push
push
mov
mov
mov
adc
sbb
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
xchg
add
xchg
add
lahf
add
add
add
sbb
or
add
add
xor
add
add
add
add
inc
add
or
add
push
push
add
jns
add
fucom
add
add
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
or
add
dec
push
add
dec
add
add
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
xor
add
push
add
add
add
or
sbb
add
and
add
add
add
add
or
add
dec
push
add
inc
add
add
add
add
jnp
add
add
sbb
add
or
add
add
adc
add
jnp
add
add
jnp
add
add
fld
add
and
add
add
mov
add
jnp
add
add
jnp
add
add
sbb
add
or
push
cmp
add
add
adc
add
push
push
add
cwde
add
add
add
add
add
add
add
jnp
add
add
fld
add
add
add
pop
jge
add
add
add
add
dec
push
add
data16
add
jnp
add
add
ds
(bad)
inc
pop
or
add
add
add
add
sub
add
cmp
add
cmp
add
push
adc
add
cmp
add
add
or
add
add
jnp
add
add
jnp
add
add
aaa
add
push
or
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
push
push
add
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
add
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
inc
add
add
or
add
dec
push
add
mov
(bad)
(bad)
fstp
add
add
jnp
add
add
jnp
add
add
aaa
add
push
and
(bad)
call
movs
add
add
and
add
add
add
add
push
cmp
add
add
adc
add
adc
jp
add
adc
jns
add
sbb
add
add
adc
add
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
jnp
add
add
ds
(bad)
(bad)
inc
push
jge
add
add
pop
add
add
sbb
(bad)
(bad)
cmp
std
(bad)
inc
jnp
add
add
add
add
pop
inc
add
add
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
std
(bad)
inc
jnp
add
add
sub
add
push
push
pop
pop
and
add
cmp
(bad)
(bad)
call
adc
add
push
push
add
sar
call
adc
add
mov
mov
mov
mov
add
add
sub
sbb
add
add
add
add
add
add
add
add
add
adc
add
xchg
add
add
add
adc
add
add
cmp
add
outs
dec
add
or
add
push
add
cmp
add
jnp
add
add
outs
dec
add
or
add
add
dec
add
cmp
add
add
and
add
sub
add
sub
add
jge
add
add
pop
jge
add
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
adc
add
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
or
add
sub
xor
add
add
add
add
adc
fadd
add
sub
add
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
sbb
add
add
add
adc
outs
add
or
add
sub
add
push
sub
add
or
and
add
sub
add
sub
add
and
js
add
push
and
js
add
sub
add
sub
add
add
add
add
adc
add
add
add
add
jle
add
or
add
or
sbb
add
fst
add
add
or
add
push
sub
add
push
fld
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
add
sbb
or
lea
add
xor
add
push
or
std
add
add
add
pop
pop
adc
add
add
add
pushf
and
add
add
push
add
push
cmp
add
add
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fst
jnp
add
add
jnp
add
add
or
add
pop
adc
add
add
add
jnp
add
add
add
sub
add
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jle
add
push
jge
add
add
pop
add
add
cmp
jmp
add
push
pop
pop
or
jnp
add
add
ds
(bad)
(bad)
inc
(bad)
jmp
add
add
dec
add
cmp
and
add
fs
add
add
and
add
pop
jge
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
or
add
jecxz
(bad)
inc
add
add
add
mov
mov
mov
add
add
mov
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
add
add
add
add
or
add
xor
add
add
add
add
and
add
add
outs
jne
add
add
push
arpl
inc
add
pop
shr
add
or
push
add
add
add
lods
add
push
(bad)
sbb
add
add
add
add
add
and
add
sbb
add
sbb
pop
add
add
add
add
adc
add
jnp
add
add
add
add
add
push
add
cmp
add
add
cmp
push
add
add
cmp
add
and
push
add
dec
add
add
add
add
mov
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
add
push
add
sub
add
and
add
add
push
add
cmp
add
add
add
add
jl
add
push
add
add
push
add
cmp
ja
add
jp
pop
pop
cmp
(bad)
(bad)
inc
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
jle
add
add
pop
jge
add
add
add
add
dec
add
cmp
(bad)
inc
add
push
mov
add
add
mov
sti
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
push
add
add
sub
add
add
add
add
xor
add
or
add
add
sub
add
cmp
add
add
add
add
add
push
push
add
add
add
push
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
push
jae
add
push
or
or
add
push
add
lods
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
push
add
add
add
add
adc
jnp
add
add
imul
add
cmp
add
add
adc
aas
mov
add
push
add
push
cmp
pop
cmp
and
add
add
push
add
push
cmp
adc
or
mov
add
and
add
add
push
pop
add
jp
add
adc
sbb
adc
pop
adc
adc
adc
xchg
and
add
add
or
adc
and
add
add
dec
add
or
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
push
adc
and
push
pop
add
sub
add
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
cmp
add
and
add
add
push
pop
add
or
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
cdq
add
add
add
add
(bad)
(bad)
dec
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
and
add
add
push
pop
add
cdq
(bad)
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
and
add
add
js
(bad)
call
adc
aas
inc
add
add
or
adc
add
pop
adc
pop
adc
xchg
sahf
adc
and
cmp
(bad)
jmp
or
add
dec
pop
add
aas
(bad)
(bad)
inc
or
pop
add
add
add
js
add
jge
add
add
adc
sbb
pop
sbb
add
or
adc
add
dec
pop
add
push
(bad)
(bad)
inc
lea
push
or
or
cmp
(bad)
inc
jnp
add
add
add
adc
add
add
and
push
cmp
add
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
push
sbb
add
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
inc
adc
adc
and
add
add
push
pop
add
pushf
(bad)
(bad)
call
add
adc
pop
adc
add
add
cmp
or
or
adc
add
adc
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
pop
adc
ret
(bad)
(bad)
inc
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
cmp
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
and
add
add
push
pop
add
loopne
(bad)
call
adc
cmp
(bad)
call
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
and
add
add
movs
std
(bad)
inc
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
and
add
add
test
(bad)
(bad)
cmp
add
add
adc
pop
adc
xchg
sahf
adc
and
in
(bad)
jmp
add
add
cmp
(bad)
call
adc
adc
adc
pop
pop
pop
adc
and
add
add
push
pop
add
inc
std
(bad)
call
or
pop
lea
or
push
add
add
push
pop
add
sub
(bad)
(bad)
cmp
sbb
push
add
add
cmp
pop
pop
and
or
or
(bad)
(bad)
jmp
add
add
dec
pop
add
repz
(bad)
call
or
sub
push
fld
add
pop
pop
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
add
adc
pop
adc
add
add
add
add
push
(bad)
sbb
add
add
out
add
add
add
add
add
sbb
add
or
add
add
add
add
add
jns
add
adc
push
push
add
push
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
fild
add
(bad)
sbb
add
add
add
add
add
sbb
push
or
add
add
add
es
sbb
add
sbb
add
add
add
sub
add
pop
adc
sbb
or
mov
add
sub
add
or
adc
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
or
adc
pop
and
add
add
js
add
sub
add
push
push
sub
add
push
inc
sub
add
sbb
or
fadd
add
sub
add
and
add
add
js
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
and
add
add
js
add
sub
add
adc
sbb
or
add
or
add
add
js
add
or
fadd
add
sub
add
and
js
add
sub
add
push
sub
or
mov
add
sub
add
sub
add
adc
pop
or
or
mov
js
add
sub
add
push
adc
and
js
add
sub
add
push
sub
or
add
or
or
dec
or
add
or
pop
or
or
add
push
cmp
add
pop
or
or
add
or
pop
push
adc
adc
loopne
add
sub
add
adc
add
js
add
sub
add
sub
pop
movlps
and
add
sub
pop
adc
or
dec
or
add
or
fnsave
or
add
add
adc
pop
pop
push
adc
inc
adc
add
add
add
or
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
inc
call
(bad)
(bad)
jp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
fnstsw
or
or
or
add
add
add
add
add
add
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
or
add
inc
add
or
popa
add
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
adc
add
sub
add
sldt
add
add
add
add
push
add
add
add
sbb
add
and
add
add
add
add
add
xor
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
or
add
add
dec
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
or
add
add
add
add
add
stos
add
add
add
add
add
or
add
add
sub
add
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
xor
jnp
add
add
dec
add
push
sub
add
sbb
add
pop
add
add
add
adc
outs
test
add
add
add
or
bound
fisttp
add
add
sub
add
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
add
cmp
add
add
cmp
add
add
sbb
inc
add
push
and
add
add
push
add
cmp
add
add
add
add
xor
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
sub
add
push
add
cmp
call
add
add
jnp
add
add
xor
add
and
add
add
cmp
add
push
fstp
add
add
add
mov
mov
add
add
sti
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
add
or
add
and
add
add
js
add
add
sub
add
push
sub
add
outs
test
add
or
add
add
pop
cmp
add
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
sbb
add
add
add
adc
or
sub
add
push
cmp
add
add
add
dec
add
cmp
add
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
or
add
sar
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
fnsave
add
add
pop
(bad)
or
sbb
sahf
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
call
or
adc
add
push
mov
add
add
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
jne
add
add
add
xor
add
add
adc
sub
add
push
or
sub
add
push
or
or
add
es
fld
add
add
and
add
push
sub
add
push
or
sub
sub
add
and
add
sub
add
outs
data16
or
add
adc
adc
imul
or
or
add
or
add
or
adc
add
push
adc
add
push
adc
add
add
add
add
add
add
or
add
add
add
outs
outs
add
dec
add
add
add
add
add
sbb
add
sbb
add
add
add
adc
inc
add
or
adc
add
or
sbb
pop
and
js
add
adc
sbb
pop
and
js
add
adc
sbb
pop
adc
adc
push
sub
add
push
cmp
mov
add
push
adc
and
add
add
js
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
sub
add
adc
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
adc
or
pop
push
adc
pop
or
pop
push
mov
add
add
cmp
add
es
or
pop
push
mov
add
add
cmp
add
es
or
pop
add
add
adc
adc
adc
and
push
add
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
fadd
add
sub
add
mov
add
or
and
add
add
js
add
sub
fadd
add
sub
add
sub
sub
add
add
push
adc
pop
adc
pop
movlps
push
mov
add
add
cmp
add
es
adc
pop
push
mov
add
add
cmp
add
es
adc
pop
and
pop
add
sub
add
sub
add
push
sub
add
push
cmp
add
add
adc
pop
and
inc
add
or
adc
pop
add
sub
add
sub
add
or
add
or
adc
push
adc
push
mov
add
add
cmp
add
es
pop
adc
and
add
js
add
sub
add
push
and
add
add
js
add
sub
add
adc
or
and
add
sub
add
or
fild
add
adc
pop
sbb
pop
push
mov
add
add
cmp
add
es
sbb
pop
adc
cmp
add
add
sbb
adc
push
mov
add
add
cmp
add
es
pop
adc
push
adc
add
js
add
sub
add
push
sub
add
add
add
add
pop
and
pop
pop
and
pop
and
add
add
js
add
adc
pop
and
add
add
js
add
sub
add
push
sub
or
xchg
pop
add
sub
add
sub
add
push
and
pop
add
sub
add
sub
add
push
sub
add
adc
pop
adc
and
pop
add
sub
add
sub
or
or
daa
adc
pop
pop
sub
pop
sub
pop
push
or
sub
pop
jle
add
or
pop
sub
pop
push
mov
add
add
cmp
add
es
sub
pop
adc
and
add
add
js
add
adc
or
or
sub
pop
adc
and
pop
add
sub
add
outs
mov
add
je
add
sbb
adc
sub
or
add
js
add
sub
add
push
adc
sub
add
push
adc
pop
adc
adc
cmp
add
add
xor
pop
pop
mov
add
add
cmp
add
es
xor
pop
sub
add
push
pop
xor
pop
adc
add
or
pop
add
pop
xor
pop
adc
adc
pop
sub
xor
pop
sbb
adc
adc
jle
add
or
adc
mov
add
add
mov
add
add
or
add
push
es
xor
add
add
sub
add
or
pop
adc
and
daa
add
sub
add
pop
aaa
adc
push
mov
add
add
cmp
add
sub
inc
add
add
push
cmp
add
adc
pop
pop
push
adc
inc
cmp
add
add
add
or
(bad)
call
sti
(bad)
call
sti
(bad)
jmp
sti
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
jge
(bad)
jmp
sti
(bad)
inc
sti
(bad)
call
sti
(bad)
call
(bad)
call
(bad)
jmp
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
call
cld
(bad)
jmp
cld
(bad)
call
cld
(bad)
push
cld
(bad)
(bad)
std
cld
(bad)
call
std
(bad)
jmp
std
(bad)
jmp
std
(bad)
push
std
(bad)
push
std
(bad)
inc
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
push
(bad)
inc
std
(bad)
call
std
(bad)
(bad)
(bad)
(bad)
jmp
std
(bad)
(bad)
out
std
(bad)
(bad)
(bad)
std
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
push
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
inc
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
push
cmp
inc
add
or
int3
add
add
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
pop
sbb
mov
add
push
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
sldt
add
add
add
add
push
add
add
int3
add
add
add
sbb
or
repz
add
add
adc
inc
add
or
adc
adc
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
or
adc
and
add
add
js
add
and
add
add
js
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
and
add
add
js
add
sub
add
or
adc
sub
sbb
push
push
or
or
enter
sub
add
sub
add
push
and
add
add
js
add
and
push
add
sub
add
sub
add
push
sub
add
push
sub
add
add
pop
or
push
or
or
add
fucomp
add
add
cmp
add
pop
or
push
pop
or
jo
add
sub
add
sub
add
sub
push
adc
sub
and
add
sub
add
sub
add
sub
movs
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
jmp
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
add
add
push
adc
add
add
add
add
and
sbb
add
adc
add
add
inc
pop
adc
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
add
add
inc
add
or
and
pop
or
mov
add
add
add
add
add
add
push
mov
add
push
(bad)
sbb
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
int
add
int
add
and
add
add
xor
add
add
add
add
adc
add
or
outs
xchg
add
or
add
add
sub
add
cmp
add
or
add
or
jge
add
sub
add
or
push
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
outs
xchg
add
or
lods
(bad)
(bad)
jmp
add
add
sub
add
cmp
and
js
add
and
add
add
js
add
sub
pop
add
or
add
js
add
and
add
add
js
add
sub
pop
add
or
add
push
add
cmp
(bad)
jmp
jge
add
sub
add
or
or
add
push
pop
or
sub
sbb
add
add
adc
add
add
add
loope
or
add
sbb
add
add
add
adc
jnp
add
add
cmps
add
add
add
add
dec
add
cmp
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
dec
add
cmp
add
add
jnp
add
add
ds
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
inc
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
add
add
cmp
add
jge
add
add
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
add
adc
add
add
add
rol
adc
add
add
xor
add
add
adc
jnp
add
add
xchg
pop
inc
or
pop
add
add
push
pop
add
mov
add
push
cmp
add
add
add
or
cmp
push
cmp
add
add
push
outs
xchg
add
or
and
or
add
adc
add
add
or
outs
xchg
add
or
pop
or
add
add
push
cmp
add
cmp
pop
pop
adc
loope
add
imul
and
add
add
and
add
or
in
add
add
or
add
or
add
add
pop
add
add
push
pop
add
or
add
add
add
add
mov
(bad)
inc
(bad)
jmp
add
add
add
jge
add
dec
add
add
or
add
push
cmp
(bad)
(bad)
jmp
cmp
add
add
cmp
add
add
dec
pop
add
stos
(bad)
(bad)
call
add
or
add
adc
add
add
pop
pop
or
push
cmp
(bad)
(bad)
jmp
or
add
cmp
adc
inc
jnp
add
add
add
(bad)
(bad)
inc
add
add
add
imul
adc
add
cmp
(bad)
jmp
add
jmp
add
or
(bad)
(bad)
jmp
add
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
adc
fisttp
add
add
adc
add
add
push
sub
add
inc
sbb
add
add
jge
add
or
add
or
add
sbb
add
inc
add
add
jnp
add
add
add
add
jae
add
push
or
jnp
add
add
inc
add
add
add
add
dec
add
cmp
add
and
or
add
js
add
jae
add
or
jnp
add
add
add
add
sub
add
sub
xchg
add
add
add
push
add
cmp
add
add
push
add
add
add
data16
push
jge
add
add
jnp
add
add
xchg
add
or
mov
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
call
add
dec
add
cmp
jle
add
add
cmp
add
or
and
or
add
js
add
pop
outs
pop
add
or
jge
add
outs
sbb
xor
add
add
add
sbb
add
sub
add
outs
dec
add
or
sldt
add
and
add
sub
add
cmp
add
add
jnp
add
add
sbb
add
add
add
add
or
loopne
add
sbb
add
sbb
push
add
add
adc
inc
add
or
add
or
add
or
add
add
outs
popf
add
or
add
or
outs
sahf
add
or
add
or
outs
dec
add
or
or
add
pop
outs
mov
fnsave
add
add
outs
mov
(bad)
(bad)
(bad)
(bad)
fst
add
add
jne
add
add
or
add
or
add
add
add
or
jle
add
or
add
or
add
mov
add
add
or
sub
sbb
sub
add
sbb
add
add
add
add
jl
add
sbb
add
adc
push
add
add
adc
add
add
dec
add
cmp
add
push
or
add
or
pop
sub
add
push
or
add
add
dec
add
cmp
add
add
push
add
add
add
or
adc
adc
pop
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
or
add
mov
(bad)
call
add
mov
(bad)
call
add
and
add
add
cmp
(bad)
(bad)
jmp
push
or
add
push
add
cmp
cmp
add
add
push
add
add
push
add
cmp
jae
add
or
movs
add
or
adc
sbb
or
add
add
add
adc
jnp
add
add
and
add
add
push
add
cmp
add
add
add
or
jnp
add
add
add
push
add
add
jnp
add
add
jnp
add
add
add
add
pop
or
or
push
adc
add
and
push
add
push
cmp
add
add
add
add
add
sub
add
add
add
pop
jge
add
add
jnp
add
add
cmp
add
add
push
add
add
push
add
push
cmp
add
add
cmp
add
add
pop
adc
push
adc
and
add
cmp
add
add
jnp
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
or
add
mov
mov
mov
add
add
mov
add
push
(bad)
sbb
sub
add
add
adc
add
add
add
add
add
add
lea
add
sub
add
push
sub
add
xor
add
add
adc
outs
pop
add
or
sbb
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
outs
pop
add
or
and
js
add
sub
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
or
add
adc
add
cmp
add
and
add
dec
add
cmp
pop
add
push
add
push
outs
pop
add
push
fld
add
add
fld
add
add
outs
pop
add
or
add
or
add
or
add
adc
add
add
add
add
or
add
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
push
add
add
add
lods
add
push
(bad)
sbb
add
adc
add
add
add
add
sbb
add
sbb
add
cmps
add
add
add
adc
cmp
add
add
add
or
and
add
add
and
add
adc
and
or
add
js
add
sub
cmp
add
and
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
pop
add
add
push
or
(bad)
call
add
xor
add
sub
add
sub
and
add
add
push
or
(bad)
(bad)
fld
add
add
jne
add
add
fld
add
add
or
add
push
add
push
cmp
(bad)
jmp
fstp
add
add
jne
add
add
sub
movs
bound
add
adc
and
add
add
push
or
(bad)
call
or
xor
add
sub
add
sub
frstor
jne
add
add
sub
add
add
adc
adc
sub
or
or
xor
add
sub
add
sub
fnsave
add
add
add
add
push
add
add
movs
arpl
add
adc
adc
sub
adc
xor
add
sub
add
sub
and
add
add
push
or
(bad)
inc
movs
pusha
add
add
add
add
dec
or
(bad)
(bad)
fstp
add
add
jne
add
add
pop
add
add
movs
add
add
add
add
xor
add
sub
add
sub
(bad)
add
add
jne
add
add
pop
add
add
movs
popa
add
add
add
or
add
js
add
sub
ffree
add
add
jne
add
add
je
add
and
add
add
push
or
(bad)
(bad)
(bad)
jne
add
add
push
add
add
movs
add
adc
and
or
add
js
add
sub
fnstsw
add
add
add
add
jb
(bad)
jmp
add
add
dec
or
(bad)
inc
movs
xor
add
adc
adc
and
or
add
js
add
sub
fld
add
add
add
add
popa
(bad)
(bad)
inc
movs
xor
add
adc
adc
and
or
add
js
add
sub
and
add
add
cmp
fst
add
add
push
add
add
fld
add
add
add
or
push
sub
add
add
cwde
add
add
add
add
add
sbb
or
xor
add
adc
mov
add
add
add
add
pop
cmp
add
mov
jo
or
add
add
dec
or
cmp
add
add
or
fiadd
add
add
or
add
pop
(bad)
or
adc
ds
add
add
je
add
add
mov
lea
add
add
mov
add
je
add
sbb
add
add
dec
or
cmp
add
or
add
push
add
add
cmp
sub
outs
data16
or
push
add
push
adc
dec
adc
push
popa
pop
or
outs
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
inc
(bad)
call
(bad)
inc
(bad)
dec
add
add
add
push
or
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
pop
frstor
add
add
mov
or
mov
add
add
add
push
mov
add
repnz
push
(bad)
sbb
pop
sub
add
inc
sbb
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
and
add
add
push
add
cmp
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
add
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
and
js
and
add
or
jnp
add
add
outs
xor
add
add
add
add
or
or
jnp
add
add
adc
dec
jae
add
or
add
or
jnp
add
add
jle
add
pop
or
or
add
or
sbb
or
or
add
or
and
loopne
add
jae
add
or
xor
add
add
sub
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
mov
pop
sub
add
or
push
sub
add
or
push
sub
add
or
push
add
add
push
add
push
cmp
add
add
add
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
fs
sbb
add
or
add
or
jnp
add
add
jnp
add
add
ret
add
or
jnp
add
add
les
add
pop
sbb
and
add
or
add
or
out
add
add
or
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
add
push
add
add
(bad)
dec
add
add
add
add
dec
add
cmp
sub
or
add
dec
add
cmp
jnp
add
add
aaa
or
add
js
add
outs
lds
add
add
add
add
inc
xchg
add
push
jae
add
or
add
or
add
add
pop
cmp
(bad)
jmp
add
add
add
fs
sbb
add
or
add
or
jnp
add
add
cwde
add
add
jnp
add
add
les
add
pop
and
add
or
add
or
jnp
add
add
outs
mov
or
add
add
push
cmp
(bad)
(bad)
jmp
add
add
add
outs
mov
or
add
push
add
cmp
(bad)
(bad)
inc
push
sub
add
or
pop
sub
add
or
push
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
inc
or
add
js
add
outs
lds
add
and
add
add
ret
(bad)
(bad)
jmp
add
xor
add
add
add
add
and
add
dec
add
add
or
sub
add
add
adc
pop
sub
or
add
add
add
add
and
add
add
push
add
push
cmp
add
cmp
add
adc
push
push
add
adc
add
jae
add
or
add
push
add
dec
add
add
and
or
add
and
add
add
push
add
add
add
or
outs
int3
add
or
jmp
add
add
dec
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
add
add
add
add
add
add
sub
add
cmp
add
cli
add
add
sub
add
add
add
or
add
add
jnp
add
add
into
add
or
add
add
xor
add
add
xor
add
add
add
add
add
mov
add
and
add
sub
add
and
add
dec
add
cmp
and
add
add
mov
add
and
add
add
mov
add
and
add
add
mov
add
or
inc
add
add
jnp
add
add
xchg
and
inc
add
add
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
add
dec
add
cmp
add
add
pop
pop
or
and
add
aas
mov
(bad)
call
or
outs
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
mov
add
add
add
add
(bad)
inc
add
popa
add
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
or
add
add
add
cmp
add
add
and
add
pop
push
or
push
add
add
push
add
cmp
sbb
add
add
add
add
xchg
and
inc
add
and
add
add
cmp
(bad)
jmp
or
add
(bad)
(bad)
(bad)
frstor
add
add
mov
mov
mov
mov
sub
add
push
(bad)
sbb
add
add
pop
add
add
add
and
add
sbb
add
sbb
or
push
add
add
add
add
add
add
add
and
add
add
js
add
push
or
add
jnp
add
add
xchg
adc
add
ds
add
add
jnp
add
add
push
adc
pop
xchg
sub
add
push
popf
push
adc
pop
pop
jno
add
add
pop
adc
add
pop
pop
pop
bound
add
add
add
dec
add
add
or
jnp
add
add
jae
add
cmp
add
add
dec
add
add
add
add
add
and
add
mov
add
add
add
mov
(bad)
(bad)
jmp
add
and
add
add
cmp
(bad)
(bad)
jmp
or
pop
or
add
push
add
push
cmp
or
add
add
add
imul
add
or
cmp
pop
sahf
and
add
add
push
add
(bad)
inc
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
or
pop
or
add
ins
(bad)
(bad)
dec
add
add
add
out
(bad)
(bad)
(bad)
frstor
add
add
pop
mov
mov
mov
add
add
sub
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
push
add
add
adc
add
cmps
add
add
add
add
(bad)
xor
add
and
add
pop
push
add
or
add
dec
or
cmp
add
add
add
or
add
or
or
or
popf
add
push
add
add
ret
add
push
and
push
or
cmp
add
add
add
or
or
or
popf
add
push
and
add
add
scas
add
add
add
add
or
or
pop
adc
sub
add
push
add
push
and
add
add
cmp
push
add
push
add
push
and
add
add
push
or
cmp
add
add
push
fst
add
add
add
push
add
push
add
add
cmp
add
add
pop
sbb
inc
add
push
and
add
add
push
or
cmp
add
add
or
adc
cmp
add
add
add
cmps
add
add
cwde
add
add
xchg
xchg
push
lods
add
add
add
add
dec
or
cmp
jnp
add
add
ret
add
push
add
add
ret
add
push
add
add
or
add
add
sub
add
cmp
add
add
adc
adc
adc
sub
add
push
add
add
pop
jle
add
add
or
add
add
cmp
add
adc
add
add
or
add
add
or
push
aas
sbb
add
add
pop
or
arpl
add
add
push
add
add
add
fucomp
add
add
or
(bad)
(bad)
jmp
or
add
dec
or
cmp
add
adc
and
add
or
add
cmps
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
aam
(bad)
call
adc
dec
add
add
cmps
add
add
add
add
add
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
(bad)
push
std
(bad)
jmp
(bad)
(bad)
call
add
adc
(bad)
call
(bad)
call
(bad)
dec
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
dec
add
add
add
add
pop
add
add
push
or
cmp
jnp
add
add
push
add
push
add
add
cmp
add
add
pop
sbb
inc
add
push
add
add
pop
jle
add
add
or
add
add
or
add
add
sub
add
cmp
(bad)
jmp
pop
pop
pop
or
pop
pop
or
push
cmp
pop
push
push
sbb
add
add
and
add
pop
add
add
and
add
pop
add
add
and
add
pop
add
add
or
jnp
add
add
and
add
add
push
or
cmp
sub
add
push
fnstsw
add
pop
or
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
mov
mov
mov
adc
pop
or
add
adc
pop
or
add
add
add
mov
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
sbb
add
sbb
or
dec
add
add
add
add
add
add
and
add
add
push
add
push
cmp
add
add
add
jge
add
add
outs
add
add
jle
add
add
jns
add
jle
add
add
jp
add
sbb
add
dec
add
add
jae
add
push
jge
add
add
sbb
jo
add
or
add
sub
add
cmp
add
add
add
pusha
add
add
add
add
dec
pop
add
jns
add
add
add
or
add
cmp
add
adc
fnsave
add
add
add
adc
sbb
add
and
add
add
add
add
push
adc
fisttp
jnp
add
add
adc
fld
add
add
jge
add
add
jnp
add
add
adc
sbb
add
or
push
cmp
add
add
adc
cmp
add
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
push
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
pop
add
add
push
pop
add
mov
(bad)
call
adc
(bad)
add
add
jnp
add
add
sub
add
push
or
push
cmp
add
add
adc
and
push
add
push
cmp
add
mov
push
ffree
add
add
adc
and
push
pop
add
fs
(bad)
(bad)
(bad)
jnp
add
add
sub
add
push
push
pop
pop
cmp
pop
jge
add
add
add
add
dec
pop
add
ss
(bad)
inc
sbb
add
add
adc
fnsave
add
add
add
add
xchg
add
push
inc
adc
frstor
add
add
add
add
jnp
add
add
mov
or
add
push
adc
fld
add
add
add
add
ret
push
jge
add
add
add
add
add
mov
add
jge
add
add
or
add
push
cmp
(bad)
(bad)
jmp
push
pop
arpl
add
add
add
add
add
std
(bad)
(bad)
cli
std
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
enter
and
add
add
push
add
push
cmp
or
pop
inc
or
add
add
std
(bad)
push
(bad)
(bad)
cmp
add
dec
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
push
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
mov
pop
or
jo
add
push
add
add
cmp
(bad)
(bad)
fld
jnp
add
add
adc
fld
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
cmps
add
push
or
and
add
pop
jge
add
add
or
add
dec
pop
add
jmp
(bad)
(bad)
fnsave
add
add
adc
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
add
push
(bad)
sbb
push
sub
add
sbb
add
sbb
add
add
add
add
sbb
add
add
add
and
add
add
cmp
add
add
and
add
sub
add
jae
add
push
or
jnp
add
add
cwde
add
add
xchg
add
and
add
add
push
add
add
add
add
add
add
add
jne
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
(bad)
dec
or
push
mov
sbb
add
sub
add
push
and
add
add
push
add
(bad)
inc
cmp
add
add
jle
add
add
mov
add
push
sub
sub
add
push
and
add
add
cmp
or
rol
add
add
or
jae
add
push
or
add
data16
(bad)
inc
sub
add
push
or
adc
add
jle
add
add
mov
add
push
adc
push
and
add
push
sub
add
push
or
add
add
cmp
(bad)
(bad)
dec
jnp
add
add
adc
add
add
adc
add
add
add
add
sbb
add
add
add
and
add
sub
add
or
pop
add
add
cmp
add
add
sub
add
or
add
or
push
add
add
or
invd
adc
adc
jae
add
or
add
add
or
pop
outs
imul
jae
add
or
or
add
add
cmp
adc
add
or
adc
add
or
arpl
add
adc
push
adc
outs
add
or
add
and
add
add
cmp
and
add
sub
add
or
add
js
add
adc
sbb
or
push
add
add
js
add
or
add
add
adc
sub
add
pop
outs
data16
or
or
add
cmp
add
adc
jae
add
or
adc
adc
push
jae
add
or
adc
push
add
add
add
add
or
outs
outs
add
or
or
adc
or
or
cmp
(bad)
(bad)
jmp
pop
add
add
push
adc
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
(bad)
(bad)
cmp
add
and
push
add
push
cmp
(bad)
(bad)
jmp
adc
mov
lea
add
add
pop
adc
adc
push
adc
mov
or
push
and
add
add
sahf
(bad)
(bad)
(bad)
cmp
add
add
or
adc
lahf
add
add
adc
or
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
pop
or
adc
push
adc
mov
adc
pop
movups
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
inc
sbb
add
add
jle
add
lahf
add
add
add
sbb
or
xchg
add
add
add
adc
or
pusha
add
add
jnp
add
add
xchg
and
add
add
and
cmp
or
add
sbb
add
add
ds
add
add
add
cmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
inc
add
push
and
add
add
push
push
add
dec
add
add
pop
pop
or
add
add
add
xchg
(bad)
(bad)
jmp
pop
add
add
push
push
add
sub
add
add
sub
add
push
adc
add
add
push
adc
adc
outs
add
add
add
push
push
add
or
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
xchg
or
and
inc
add
add
pop
sub
add
push
or
add
sub
add
add
push
cmp
adc
ds
(bad)
(bad)
inc
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
inc
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
add
dec
push
add
pop
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
add
mov
mov
mov
mov
add
add
add
add
sub
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
or
add
sbb
add
add
les
add
fld
add
add
fld
add
add
pop
add
add
fild
add
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
iret
add
or
add
add
or
add
add
dec
add
add
pop
push
ds
add
and
push
add
add
add
les
add
adc
adc
or
adc
add
or
sar
(bad)
jmp
add
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
dec
add
(bad)
inc
outs
rol
add
or
add
(bad)
(bad)
(bad)
inc
pop
sub
add
or
or
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
jg
add
dec
add
adc
add
add
dec
add
cmp
add
add
add
outs
in
add
push
and
push
add
cmp
add
push
cmp
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
add
and
add
add
push
add
cmp
add
xor
add
add
adc
and
add
add
add
add
add
add
dec
add
cmp
add
and
and
add
add
cmp
add
cmp
add
add
sbb
add
arpl
add
push
cmp
(bad)
(bad)
jmp
add
push
add
cmp
add
add
pop
add
add
add
add
or
int
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
add
and
add
pop
cmp
(bad)
(bad)
jmp
push
add
fst
add
push
mov
add
cmp
add
(bad)
sbb
sub
add
add
add
add
popf
popf
add
add
add
xor
add
add
add
add
sub
add
push
or
or
add
add
add
cmp
add
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
or
add
sbb
add
add
add
add
jge
add
add
push
jge
add
add
or
add
add
dec
add
push
(bad)
sbb
add
add
add
add
adc
add
sbb
add
adc
add
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
add
sub
add
xor
add
add
dec
add
adc
inc
add
or
adc
sbb
or
enter
sub
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
sub
add
or
adc
and
js
add
sub
add
push
sub
or
mov
add
sub
add
sub
add
or
adc
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
or
adc
pop
and
push
add
sub
add
sub
add
push
and
js
add
sub
add
sub
adc
and
or
add
js
add
sub
add
push
cmp
adc
sbb
adc
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
int
add
sub
add
mov
add
or
add
or
add
adc
adc
outs
aam
add
pop
or
or
add
(bad)
or
add
js
add
sub
add
push
outs
aad
add
pop
or
or
add
(bad)
add
or
add
or
or
or
add
test
add
push
outs
aad
add
pop
or
or
add
(bad)
add
or
add
or
or
and
add
sub
add
sub
add
push
outs
aad
add
pop
push
adc
adc
(bad)
add
or
add
or
movlps
adc
sahf
or
add
js
add
sub
add
push
outs
aad
add
pop
adc
or
add
(bad)
add
or
add
or
adc
or
add
mov
js
add
outs
aad
add
pop
adc
or
add
(bad)
add
or
add
or
adc
or
enter
sub
add
and
or
add
js
add
sub
add
push
and
push
add
sub
add
sub
add
push
sub
add
or
adc
lea
add
add
add
xor
add
sub
add
mov
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
scas
add
add
js
add
mov
add
or
add
or
adc
sub
add
or
add
or
push
adc
adc
sahf
or
add
js
add
sub
add
push
outs
aad
add
pop
pop
adc
adc
(bad)
add
or
add
or
sbb
or
add
inc
or
add
js
add
outs
aad
add
pop
sbb
or
add
xlat
add
or
sbb
or
lea
add
add
add
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
int
add
sub
add
mov
add
or
push
adc
or
fst
add
add
pop
cmp
add
adc
pop
pop
push
adc
inc
sbb
add
add
cld
(bad)
jmp
cld
(bad)
call
(bad)
(bad)
jns
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
inc
(bad)
dec
(bad)
jmp
(bad)
(bad)
js
(bad)
dec
std
(bad)
push
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
push
(bad)
fnstsw
or
pop
adc
inc
add
add
add
add
push
and
sbb
add
adc
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
pop
cmp
inc
add
or
and
add
push
pop
or
adc
add
add
add
pop
mov
or
repnz
push
(bad)
sbb
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
inc
add
add
add
sbb
add
sbb
add
aam
add
add
add
push
mov
add
add
cmp
add
es
mov
add
add
cmp
add
add
inc
add
or
and
add
add
push
add
cmp
add
add
mov
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
push
mov
add
add
cmp
add
fnsave
add
add
inc
add
or
inc
add
or
add
or
mov
add
add
cmp
add
es
mov
add
add
cmp
add
sub
add
fld
add
add
rol
add
sub
add
sub
or
cmp
(bad)
inc
mov
dec
add
push
(bad)
sbb
add
add
add
add
add
sbb
add
add
add
mov
or
adc
push
add
add
adc
add
add
dec
add
cmp
add
push
add
add
jae
add
push
outs
or
add
and
cmp
add
add
add
add
and
add
add
cmp
add
add
push
cmp
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
add
xor
add
add
add
add
and
add
add
push
push
add
xor
add
and
add
sub
add
adc
add
sub
adc
and
push
push
add
adc
add
adc
cmp
add
and
add
add
push
push
add
or
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
cmp
add
add
dec
push
add
int
(bad)
call
add
push
push
add
mov
and
add
js
add
outs
dec
add
or
xchg
(bad)
jmp
add
add
cmp
push
add
or
add
or
pop
add
add
or
outs
fild
add
push
outs
fadd
add
pop
xor
adc
outs
fld
add
push
adc
pop
and
fiadd
add
push
outs
fild
add
push
adc
and
adc
fiadd
add
jae
add
or
adc
outs
loope
add
adc
add
or
adc
sub
add
or
add
or
adc
imul
daa
add
add
pop
adc
adc
and
add
add
cmp
or
or
loop
add
outs
jne
add
or
or
adc
mov
mov
add
or
or
adc
mov
mov
add
and
add
add
push
add
add
adc
adc
and
add
add
inc
add
add
outs
fld
add
push
adc
push
pop
adc
fiadd
add
push
outs
fld
add
pop
adc
pop
push
pop
adc
fiadd
add
pop
adc
push
outs
loope
add
adc
cmp
add
add
add
add
dec
or
add
add
add
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
aad
(bad)
inc
adc
push
outs
loope
add
adc
pop
push
outs
fild
add
push
outs
loope
add
adc
or
outs
jne
add
and
add
dec
or
(bad)
dec
adc
push
adc
mov
mov
add
fstp
add
add
and
js
add
adc
add
adc
fld
add
add
push
outs
jecxz
add
pop
jae
add
or
mov
mov
add
or
add
or
outs
in
add
adc
adc
and
add
js
add
adc
outs
pop
add
or
jge
add
adc
add
adc
push
cmp
add
add
outs
out
add
pop
cmp
add
add
outs
out
add
or
push
add
add
outs
bound
add
or
push
add
add
outs
bound
add
fcom
or
add
add
add
add
add
sub
add
or
add
xor
add
sbb
add
ja
add
add
add
hlt
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
dec
add
adc
add
or
add
or
add
outs
call
or
add
push
add
outs
jmp
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
sti
add
push
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
sbb
(bad)
sti
or
add
add
sub
add
pop
adc
fadd
add
sub
add
and
add
add
js
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
and
add
add
js
add
sub
add
adc
sbb
pop
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
adc
sbb
pop
jae
add
or
or
adc
and
add
add
js
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
and
or
add
js
add
sub
add
push
and
push
add
sub
add
sub
add
push
sub
add
or
adc
adc
and
push
add
sub
add
sub
add
push
sub
add
sub
add
or
sbb
add
or
push
adc
push
mov
add
add
cmp
add
es
or
pop
push
mov
add
add
cmp
add
es
or
pop
sbb
pop
add
add
adc
adc
and
add
add
js
add
mov
enter
sub
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
add
or
or
or
pop
adc
outs
jmp
add
and
js
add
outs
in
add
or
or
pop
adc
outs
jmp
add
pop
outs
in
add
or
or
outs
jmp
add
pop
outs
out
add
or
push
adc
adc
outs
jmp
add
push
outs
out
add
or
movlps
adc
outs
jmp
add
pop
outs
lock
or
adc
pop
adc
outs
jmp
add
pop
outs
icebp
add
or
adc
pop
adc
outs
repnz
or
pop
adc
pop
adc
outs
repz
or
and
js
add
or
adc
pop
and
js
add
adc
push
mov
add
add
cmp
add
es
push
adc
and
add
push
adc
pop
pop
adc
and
js
add
adc
sbb
pop
or
or
adc
adc
push
pop
mov
add
and
js
add
mov
add
or
mov
js
add
mov
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
and
js
add
mov
sub
add
or
add
or
add
or
sbb
pop
and
or
add
js
add
sub
add
push
cmp
sbb
pop
or
add
adc
adc
and
or
add
js
add
sub
add
push
mov
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
or
add
mov
(bad)
add
or
add
or
add
or
sbb
pop
and
add
sub
add
cmp
add
pop
sbb
adc
or
lea
add
add
adc
adc
and
or
add
js
add
sub
add
push
mov
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
add
adc
sbb
or
add
mov
(bad)
add
or
add
or
add
or
pop
adc
and
or
add
js
add
adc
and
pop
adc
fadd
add
sub
add
sub
pop
add
or
adc
and
pop
adc
fadd
add
sub
add
sub
pop
add
or
adc
and
pop
and
pop
add
sub
add
adc
pop
and
pop
adc
adc
mov
add
push
pop
lea
add
adc
adc
push
sbb
pop
add
add
adc
adc
and
pop
add
sub
add
sub
or
loopne
add
sub
add
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
add
adc
sub
adc
adc
adc
hlt
add
or
pop
add
or
or
adc
add
sub
add
pop
lea
add
adc
adc
push
adc
adc
mov
add
sub
add
pop
lea
add
adc
adc
push
sbb
adc
adc
push
adc
sub
or
loopne
add
sub
add
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
add
or
adc
hlt
add
or
pop
add
or
sub
add
or
and
adc
mov
js
add
pop
lea
add
adc
adc
push
adc
adc
mov
add
sub
add
pop
lea
add
adc
adc
push
adc
and
push
add
sub
add
sub
add
push
and
add
add
js
add
and
push
add
sub
add
sub
add
push
sub
add
mov
adc
hlt
add
or
pop
add
or
sub
add
or
adc
adc
add
sub
add
pop
lea
add
adc
adc
push
sbb
adc
adc
sub
add
or
daa
adc
adc
add
sub
add
push
lea
add
adc
adc
sub
add
or
pop
sub
pop
adc
adc
in
add
sub
add
push
lea
add
adc
adc
sub
add
or
pop
sub
pop
sbb
adc
adc
push
and
pop
add
sub
add
sub
or
loopne
add
sub
add
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
add
or
dec
add
or
or
add
pop
sub
pop
push
sub
add
or
adc
adc
and
pop
add
sub
add
sub
or
loopne
add
sub
add
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
in
or
add
push
mov
add
or
clc
add
or
sub
pop
or
lea
add
add
adc
adc
and
or
add
push
mov
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
dec
add
push
mov
jmp
js
add
sub
add
push
mov
(bad)
add
or
add
or
add
or
adc
or
add
adc
adc
and
push
add
sub
add
sub
add
push
mov
push
mov
enter
sub
add
sub
add
push
mov
loopne
add
sub
add
mov
jmp
js
add
sub
add
push
mov
popa
push
add
sub
add
sub
add
push
mov
(bad)
add
or
add
or
add
or
das
adc
or
sahf
push
add
sub
add
sub
add
or
jge
add
outs
aad
add
pop
xor
pop
adc
outs
xchg
add
or
xor
pop
adc
outs
inc
add
or
xor
pop
or
add
or
xor
add
adc
cmp
add
adc
pop
pop
push
adc
inc
xor
add
add
add
and
(bad)
jmp
idiv
jmp
(bad)
call
idiv
(bad)
jmp
call
idiv
jmp
idiv
push
idiv
push
idiv
(bad)
fdivp
(bad)
(bad)
out
idiv
inc
clc
(bad)
call
clc
(bad)
jmp
clc
(bad)
jmp
clc
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jns
(bad)
dec
stc
(bad)
(bad)
ds
(bad)
(bad)
mov
stc
(bad)
dec
stc
(bad)
call
stc
(bad)
call
(bad)
jmp
(bad)
inc
cli
(bad)
jmp
sti
(bad)
(bad)
out
sti
(bad)
jmp
call
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
dec
std
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
push
cmp
inc
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
std
or
add
or
add
add
add
or
add
or
add
or
add
add
add
jle
add
or
mov
add
sub
add
xor
add
add
adc
sbb
or
push
add
push
sbb
add
push
sbb
add
add
push
sub
add
sbb
add
add
add
jle
add
add
pop
maxps
cdq
add
add
sbb
maxps
cdq
add
add
push
arpl
maxps
cdq
add
add
pop
or
xchg
pusha
push
add
add
dec
add
push
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
adc
add
sbb
jle
add
or
add
add
ins
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
add
add
add
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
dec
add
or
add
add
push
cmp
add
add
jge
add
add
add
add
dec
add
cmp
outs
dec
add
or
pop
adc
rol
add
and
add
add
cmp
sub
add
sbb
add
sbb
add
add
add
and
add
add
add
add
or
or
add
add
dec
add
push
(bad)
sbb
sub
adc
add
add
add
adc
or
add
sbb
pop
add
or
add
add
and
add
add
push
add
push
cmp
pop
add
add
add
add
cmp
add
sub
add
outs
lds
add
add
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
jnp
add
add
outs
mov
add
add
add
add
dec
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
les
add
pop
and
add
add
add
or
add
or
jnp
add
add
outs
mov
or
add
add
dec
add
cmp
add
add
add
add
add
add
sub
add
and
sldt
sub
add
sub
add
or
add
or
jnp
add
add
or
add
or
sbb
add
dec
add
cmp
add
add
add
add
sub
sub
jnp
add
add
outs
xor
add
add
add
add
outs
xor
add
add
add
add
outs
mov
add
and
add
add
push
add
cmp
add
pop
add
add
cmps
push
add
sub
add
outs
lds
add
add
add
add
inc
xchg
add
jae
add
or
add
or
or
add
dec
add
cmp
push
sub
add
or
sbb
cmp
add
add
add
push
outs
mov
add
and
add
add
push
add
push
cmp
add
add
add
add
sbb
dec
and
add
pop
adc
add
or
jnp
add
add
sbb
pusha
and
add
pop
adc
add
or
jnp
add
add
sbb
js
jo
add
pop
adc
add
or
adc
add
push
cmp
add
pop
sub
add
or
push
sub
add
or
push
sub
add
or
or
push
add
cmp
add
add
jnp
add
add
outs
cld
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
sbb
nop
add
add
jo
add
pop
adc
add
or
jnp
add
add
outs
mov
add
add
add
add
adc
mov
js
and
add
or
jnp
add
add
mov
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
add
push
outs
mov
jnp
add
add
popf
add
add
lock
add
add
or
add
or
sbb
add
dec
add
cmp
add
add
and
call
xor
add
sub
add
or
push
sub
sub
lea
add
add
push
add
add
add
or
add
add
add
or
add
add
add
or
add
or
adc
push
add
cmp
jnp
add
add
outs
mov
or
jnp
add
add
pop
adc
add
js
add
outs
lds
add
add
add
add
outs
std
add
or
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
push
and
mov
mov
jnp
add
add
outs
std
add
or
or
add
dec
add
cmp
add
jnp
add
add
jge
add
pop
aaa
jae
add
or
add
or
jnp
add
add
outs
sldt
sub
add
and
sldt
sub
add
sub
add
or
add
or
jnp
add
add
or
or
jnp
add
add
adc
inc
jae
add
or
add
or
jnp
add
add
jge
add
pop
or
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
push
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
les
add
pop
and
add
add
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
inc
adc
add
js
add
outs
lds
add
add
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
inc
add
add
add
add
outs
mov
add
and
add
add
push
add
cmp
add
add
jnp
add
add
imul
add
outs
mov
jnp
add
add
jnp
add
add
ret
add
or
jnp
add
add
les
add
pop
sbb
and
add
add
add
or
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
outs
mov
or
jnp
add
add
mov
or
or
push
add
add
add
pop
pop
add
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
add
pop
push
add
add
add
pop
pop
or
jnp
add
add
pop
outs
mov
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
outs
std
add
or
sbb
or
or
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
sub
adc
add
dec
add
cmp
add
add
jnp
add
add
outs
inc
add
add
add
add
in
add
sub
add
and
add
pop
sbb
jae
add
or
add
or
jnp
add
add
adc
jl
mov
mov
jnp
add
add
jge
add
pop
adc
add
or
add
or
add
add
dec
add
cmp
add
add
add
add
outs
mov
or
jnp
add
add
dec
adc
add
js
add
outs
lds
add
add
add
add
inc
xchg
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
jnp
add
add
add
add
outs
mov
dec
add
add
add
add
dec
add
dec
add
add
add
clc
(bad)
jmp
(bad)
push
stc
(bad)
push
cld
(bad)
call
add
add
(bad)
(bad)
dec
add
add
add
sti
(bad)
(bad)
(bad)
stc
(bad)
call
(bad)
(bad)
in
stc
(bad)
push
add
push
cli
(bad)
call
add
add
(bad)
call
(bad)
jmp
cli
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
add
add
add
add
clc
(bad)
push
add
add
add
push
add
add
jne
(bad)
inc
jnp
add
add
jnp
add
add
ret
add
or
jnp
add
add
les
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
mov
or
jnp
add
add
dec
sldt
sub
add
outs
lds
add
add
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
inc
pop
sbb
add
or
add
or
jnp
add
add
jnp
add
add
ret
add
or
jnp
add
add
les
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
push
outs
mov
or
jnp
add
add
sldt
sub
add
outs
lds
add
add
add
add
outs
std
add
or
jnp
add
add
inc
pop
add
jae
add
or
add
or
jnp
add
add
push
outs
mov
add
add
add
add
outs
inc
add
add
add
add
adc
mov
add
jae
add
or
add
or
add
add
dec
add
cmp
jnp
add
add
imul
add
outs
mov
sbb
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
mov
add
add
add
add
push
pop
bound
add
or
add
or
sbb
add
dec
add
cmp
std
(bad)
inc
jnp
add
add
loop
add
pop
adc
add
or
add
or
jnp
add
add
or
or
sbb
add
dec
add
cmp
jnp
add
add
push
adc
add
js
add
outs
lds
add
add
add
add
outs
std
add
or
jnp
add
add
inc
lea
add
jae
add
or
add
or
or
add
dec
add
cmp
(bad)
inc
push
sub
jnp
add
add
add
add
add
add
add
add
add
add
mov
or
add
jae
add
or
add
add
add
add
add
outs
cld
add
or
or
add
sub
add
cmp
jnp
add
add
or
add
or
jnp
add
add
outs
mov
add
add
add
add
jnp
add
add
add
add
outs
mov
jnp
add
add
jnp
add
add
add
mov
or
add
sub
add
cmp
cld
(bad)
(bad)
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
add
mov
jnp
add
add
outs
mov
or
adc
add
dec
add
cmp
pop
sub
add
or
and
add
js
add
outs
lds
add
add
add
or
add
or
adc
add
add
jno
add
sub
add
outs
lds
add
add
sub
add
or
push
add
add
fld
add
add
jnp
add
add
outs
xor
jnp
add
add
outs
xor
add
push
add
cmp
cld
(bad)
jmp
add
add
add
mov
or
or
or
add
adc
add
jge
add
push
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
add
cmp
add
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
add
or
add
cmp
sub
add
sbb
push
add
add
add
add
adc
and
add
or
pop
jge
add
add
add
add
sub
add
cmp
add
add
push
and
add
inc
aas
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
push
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
dec
add
cmp
and
add
(bad)
jg
add
add
add
add
mov
mov
add
test
add
(bad)
sbb
add
add
add
add
test
add
add
xor
rol
add
push
add
adc
add
push
or
jae
js
add
sub
xchg
add
sub
add
sub
adc
add
adc
jae
js
add
sub
cmps
adc
add
js
add
sub
adc
add
adc
pop
jae
js
add
sub
in
add
sub
add
sub
adc
add
adc
pop
jae
js
add
sub
and
add
sub
add
sub
adc
push
and
add
add
js
add
sub
pop
adc
add
js
add
sub
push
add
sub
push
and
add
add
js
add
sub
fwait
adc
add
js
add
sub
pop
add
sub
or
jae
js
add
sub
fcom
add
sub
add
sub
sbb
add
adc
and
add
add
js
add
sub
inc
add
add
js
add
sub
adc
add
adc
pop
add
add
pop
call
add
add
add
jno
add
add
add
add
jno
add
add
add
call
or
adc
stc
adc
add
js
add
adc
sub
add
or
or
paddd
push
jl
add
add
adc
adc
rcr
add
add
sbb
add
sub
add
or
pop
add
or
add
add
dec
add
push
adc
adc
push
jge
add
add
add
add
push
cmp
push
adc
cmp
add
adc
(bad)
sub
add
or
and
or
mov
add
push
mov
add
add
cmp
add
fstp
add
push
adc
adc
add
sbb
add
and
add
push
adc
add
add
cmp
add
es
add
or
adc
add
jae
add
or
add
or
and
and
outs
cmp
add
and
add
add
push
daa
add
sbb
adc
adc
adc
jl
add
add
sbb
add
sbb
push
and
xor
add
inc
outs
jl
add
jge
add
add
cmp
add
add
adc
add
add
inc
add
add
adc
adc
adc
jl
add
add
sbb
add
adc
and
xor
add
inc
outs
jl
add
jge
add
add
adc
add
add
inc
push
add
add
add
or
adc
jl
add
add
sbb
add
adc
add
add
add
add
add
or
ins
add
push
cmp
add
add
add
or
sbb
clc
add
add
adc
sbb
sub
add
or
sbb
push
add
add
push
daa
add
push
add
add
adc
jl
add
add
sbb
add
pop
push
(bad)
adc
adc
ins
add
push
cmp
add
add
add
or
add
(bad)
sub
add
or
adc
add
add
dec
daa
add
adc
add
adc
adc
jge
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
sbb
add
push
outs
je
add
outs
push
push
pop
add
add
add
add
sub
add
cmp
add
add
rol
add
adc
adc
(bad)
sub
add
or
add
add
push
add
add
cmp
adc
fwait
(bad)
(bad)
jmp
or
add
sub
add
cmp
adc
(bad)
sub
add
or
pop
adc
push
cmp
add
and
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
adc
jl
add
add
sbb
add
adc
add
add
and
adc
adc
mov
add
push
cmp
add
add
add
or
sbb
sbb
adc
adc
adc
pop
fidivr
jl
(bad)
call
adc
add
add
or
add
adc
mov
(bad)
jmp
add
add
dec
daa
add
or
add
add
add
(bad)
(bad)
jmp
add
add
add
(bad)
(bad)
dec
std
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
std
(bad)
jmp
(bad)
dec
add
add
std
(bad)
inc
pop
add
add
push
daa
add
test
add
(bad)
sub
add
or
and
or
add
dec
daa
add
(bad)
(bad)
(bad)
push
add
or
cmp
std
(bad)
call
adc
add
jae
add
or
add
or
add
or
mov
add
add
cmp
add
and
add
add
push
(bad)
(bad)
dec
sub
add
cmp
add
add
or
add
add
sub
add
or
jno
add
adc
and
add
pop
cmp
adc
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
add
push
cmp
add
add
add
or
add
add
or
sbb
add
(bad)
sub
add
or
sbb
mov
add
lea
push
adc
push
and
add
add
or
add
sbb
add
push
outs
jo
add
cmp
add
add
add
or
push
pop
sub
adc
push
jl
add
add
sbb
add
pop
push
(bad)
adc
push
push
add
add
add
or
sbb
adc
add
or
jl
add
add
sbb
add
adc
push
push
cmp
add
add
add
or
add
(bad)
sub
add
or
push
and
add
add
push
daa
add
ss
(bad)
call
and
into
add
or
adc
add
sub
add
push
adc
sub
add
fisttp
add
add
sub
add
pop
adc
fnsave
add
adc
adc
(bad)
add
pop
lea
add
adc
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
mov
or
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
adc
push
(bad)
sbb
sub
add
add
add
popf
add
add
push
add
adc
add
sbb
add
pusha
push
add
pusha
push
add
ins
add
add
add
and
push
jge
add
add
add
add
xor
add
adc
add
outs
or
pusha
add
push
adc
push
sub
add
or
arpl
add
pop
outs
data16
or
push
add
or
add
add
lea
add
add
adc
adc
pop
sub
adc
outs
sgdtd
or
or
add
adc
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
pop
sbb
pop
adc
or
sar
(bad)
call
add
xchg
add
or
pop
add
add
add
add
add
xchg
add
or
dec
add
add
arpl
add
adc
jnp
add
add
data16
or
push
add
or
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
or
pop
adc
adc
or
sar
(bad)
call
add
xchg
add
or
ds
add
outs
xchg
add
or
pop
inc
dec
add
add
add
pop
outs
pop
add
or
or
add
adc
pop
pop
outs
pusha
add
or
or
or
jp
pop
add
or
inc
inc
adc
outs
pop
add
or
inc
inc
adc
adc
or
pop
outs
pop
add
or
add
pop
add
add
adc
adc
add
jle
add
add
add
adc
add
cmp
add
add
add
add
add
adc
add
adc
fstp
or
add
adc
test
add
adc
adc
cmp
add
adc
outs
adc
add
imul
xor
add
adc
push
adc
adc
add
adc
add
or
push
adc
push
cmp
add
add
or
or
push
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
add
add
jo
push
add
or
add
pop
add
or
mov
add
add
push
pop
add
and
adc
xchg
add
adc
adc
adc
imul
jne
add
and
add
add
push
pop
add
or
add
add
add
add
add
add
add
add
add
add
jl
add
and
push
pop
add
int
(bad)
call
movaps
add
or
adc
adc
jnp
add
add
push
add
jo
jno
add
adc
adc
sub
add
cmp
add
and
add
add
push
add
push
cmp
adc
outs
bound
add
and
add
sub
add
cmp
adc
adc
sub
add
push
adc
adc
sub
add
push
and
add
add
arpl
(bad)
call
adc
sbb
add
adc
fld
add
add
fld
add
add
add
add
add
push
outs
sbb
add
adc
adc
fst
or
add
adc
sbb
add
fcom
push
fst
add
add
adc
push
ffree
add
add
pop
lea
add
adc
mov
adc
adc
adc
adc
adc
add
add
mov
push
mov
add
add
pop
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
adc
adc
push
(bad)
sbb
push
sub
add
add
add
rol
add
push
add
add
add
add
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
adc
sub
add
push
or
or
add
add
dec
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
sbb
or
add
add
and
add
push
or
add
or
add
add
add
add
dec
add
cmp
pop
pop
adc
add
adc
add
add
dec
add
cmp
add
push
or
les
add
add
push
cmp
jnp
add
add
xor
add
push
add
add
add
or
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
add
add
add
fiadd
add
or
pop
adc
and
add
dec
add
cmp
add
add
pop
pop
or
jle
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
and
cmp
(bad)
(bad)
jmp
push
or
and
add
push
mov
mov
add
add
mov
test
sbb
sub
add
add
add
add
loopne
add
sbb
add
sbb
push
add
add
add
add
sub
add
or
sub
add
or
push
pop
cmp
add
push
pop
sub
add
add
pop
frstor
jae
add
push
or
lea
add
add
add
adc
add
push
dec
add
clc
add
add
sub
add
push
push
retf
add
push
adc
or
retf
add
push
adc
adc
push
dec
add
sbb
add
adc
add
add
push
cmp
add
add
pop
push
cmp
add
add
add
jo
sbb
add
jp
sub
or
mov
add
or
mov
add
or
mov
add
adc
or
retf
add
push
adc
or
retf
add
push
adc
adc
push
ds
or
adc
or
or
adc
outs
adc
add
adc
push
ds
or
adc
adc
adc
outs
adc
add
or
add
or
outs
sbb
aam
xor
add
adc
adc
add
or
adc
push
adc
adc
lea
add
add
push
adc
sub
add
push
es
or
add
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
cmp
add
adc
pop
inc
add
add
sub
adc
adc
or
inc
add
add
sub
adc
sub
adc
adc
adc
adc
add
or
adc
push
adc
adc
adc
adc
or
add
adc
adc
pop
adc
adc
adc
aas
mov
(bad)
call
prefetchnta
add
add
lea
add
add
add
push
add
or
push
push
lea
add
add
add
push
add
or
pop
pop
adc
adc
sub
add
push
adc
adc
add
add
pop
add
or
sbb
sbb
or
add
or
add
sbb
pop
add
add
sbb
add
or
adc
sbb
add
add
adc
and
add
push
add
or
sbb
adc
and
add
push
add
or
sbb
adc
adc
sub
add
push
adc
sbb
sbb
mov
pop
outs
pop
add
or
sbb
add
push
or
add
sbb
pop
add
add
sbb
sub
add
fdiv
add
jo
sbb
add
jp
outs
bound
add
adc
or
pop
fstp
add
add
pop
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
adc
pop
or
push
pop
push
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
push
pop
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
push
pop
push
add
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
adc
jnp
add
add
in
add
and
add
add
push
add
cmp
or
xor
add
add
add
add
jnp
add
add
cmps
add
add
cwde
add
add
xchg
xchg
sbb
inc
add
push
push
pop
pop
or
add
add
dec
add
cmp
add
push
add
enter
add
add
add
jnp
add
add
mov
add
and
add
add
push
add
push
cmp
add
add
and
add
add
add
add
sbb
sub
add
cmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
jmp
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
in
add
add
add
add
in
add
add
add
add
jnp
add
add
test
add
add
pop
sbb
inc
add
push
add
add
add
jnp
add
add
test
pop
sbb
inc
add
push
and
add
dec
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
mov
add
fst
add
push
mov
add
cmp
add
(bad)
sbb
add
inc
sbb
add
add
add
add
sbb
add
sbb
add
adc
add
adc
or
add
or
or
add
es
fld
add
add
sub
add
add
add
add
add
or
add
or
add
and
pop
jge
add
add
add
add
xor
add
add
sub
add
pop
adc
sbb
or
enter
sub
add
sub
add
push
sub
or
jmp
js
add
sub
add
push
sub
add
or
adc
and
add
add
js
add
sub
add
push
sub
or
inc
add
add
js
add
sub
add
push
sub
add
or
and
adc
add
js
add
sub
add
pop
sub
add
or
adc
and
add
sub
add
or
or
and
add
add
js
add
sub
add
push
push
sub
add
push
inc
je
add
sbb
adc
add
js
add
adc
push
adc
and
or
add
js
add
sub
add
push
cmp
add
pop
or
or
and
push
add
sub
add
sub
add
push
and
js
add
sub
add
jae
add
or
pop
pop
or
or
pop
pop
outs
and
add
pop
or
or
pop
pop
outs
lock
or
or
or
pop
sub
add
or
pop
movlps
sbb
add
and
add
sub
add
or
adc
or
push
and
add
sub
add
sub
add
adc
adc
or
add
add
or
adc
or
and
push
add
sub
add
sub
add
push
sub
add
adc
or
mov
add
adc
cmp
add
adc
pop
pop
push
adc
inc
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
in
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
push
call
add
add
or
or
or
add
add
add
add
and
sbb
add
adc
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
ffree
(bad)
(bad)
jmp
xor
or
or
or
add
inc
add
or
data16
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
pop
add
adc
add
or
add
or
add
outs
call
or
add
push
add
outs
jmp
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
sti
add
push
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
and
add
add
add
add
add
xor
add
add
adc
loope
add
or
sub
add
add
push
ins
and
cdq
icebp
aas
pop
sub
add
or
fisttp
fld
add
add
add
add
push
sub
sub
add
sbb
add
add
add
das
add
sbb
add
add
add
(bad)
verw
sbb
add
sbb
push
add
add
add
add
adc
add
adc
add
and
add
add
cmp
add
add
jae
add
or
and
add
ds
add
add
add
add
pop
cmp
add
add
add
and
add
pop
pop
adc
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
add
push
add
or
add
push
add
cmp
add
(bad)
jg
add
add
add
add
add
add
mov
test
add
(bad)
sbb
add
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
inc
or
or
add
add
dec
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
push
add
add
and
add
js
add
sub
add
or
push
mov
add
push
push
mov
cmp
add
pop
call
dec
add
add
pop
call
and
add
add
add
add
add
inc
pusha
inc
inc
sub
add
push
pop
call
sbb
sub
add
or
outs
pop
add
or
sub
add
sub
add
fld
add
add
pop
(bad)
or
or
popf
(bad)
(bad)
(bad)
fst
pop
mov
or
test
add
(bad)
sbb
add
add
add
popa
add
add
add
mov
add
sbb
or
ret
add
add
push
add
add
push
add
or
add
add
sub
add
cmp
add
add
push
add
add
pop
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
add
add
call
add
sub
add
cmp
mov
push
push
add
add
add
add
add
outs
sbb
and
add
or
jns
add
sub
add
pop
outs
pop
add
or
jge
add
outs
sbb
add
add
sub
add
adc
add
add
add
add
add
xor
imul
add
add
jge
add
add
add
add
dec
add
cmp
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
sub
sbb
add
add
adc
add
add
add
add
sbb
add
adc
add
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
add
add
dec
add
cmp
add
sub
add
add
push
pop
add
push
jae
add
or
add
or
inc
pop
add
push
jae
add
or
sub
add
cmp
add
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
add
add
add
cmp
add
add
add
add
pop
cmp
add
add
add
add
add
jnp
add
add
dec
add
add
add
add
cmp
add
adc
add
and
add
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
frstor
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
jle
add
and
add
adc
jg
add
add
popa
(bad)
(bad)
inc
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
add
pop
mov
add
test
add
(bad)
sbb
sub
add
adc
add
add
add
inc
sbb
add
xor
jle
add
or
and
add
sub
add
or
add
and
add
add
add
rol
push
add
pop
adc
rol
push
fisttp
add
add
add
lods
add
push
(bad)
sbb
add
add
adc
add
add
add
push
add
sbb
add
cmp
loop
add
add
add
or
add
xor
add
add
add
add
push
fld
add
add
fld
add
add
pop
add
add
fild
add
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
push
or
or
add
add
sub
add
cmp
add
cmp
add
push
add
add
add
xchg
add
add
add
xchg
pop
pop
or
xor
add
and
add
add
push
add
dec
add
add
add
add
push
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
add
add
imul
and
add
dec
add
cmp
or
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
lea
add
adc
add
add
add
adc
add
add
sub
add
cmp
add
add
and
add
and
pop
add
add
pop
add
push
add
add
outs
pop
add
push
cmp
add
add
sub
add
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
add
add
mov
add
sub
add
sub
int3
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
inc
(bad)
(bad)
dec
add
and
add
add
push
cmp
(bad)
(bad)
jmp
add
add
add
cmp
jmp
add
add
dec
add
cmp
add
add
add
add
add
push
add
push
sub
adc
add
fild
add
add
add
and
add
dec
add
cmp
outs
dec
add
or
push
add
add
pop
add
add
add
add
outs
dec
add
or
add
add
or
cmp
and
js
add
cmp
add
add
xchg
adc
add
js
add
sub
add
jge
add
add
add
add
cmp
add
add
jge
add
add
add
push
add
cmp
add
add
pop
jge
add
add
pop
jge
add
add
outs
xchg
add
or
ds
(bad)
inc
pop
fs
add
or
outs
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
sbb
add
add
add
adc
outs
pop
add
or
sbb
add
sub
add
or
add
add
add
add
cmp
add
add
add
or
and
js
add
sub
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
or
add
adc
add
cmp
add
and
add
dec
add
cmp
pop
add
push
add
pop
outs
pop
add
push
fld
add
add
fld
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
adc
add
mov
mov
test
add
(bad)
sbb
add
add
adc
add
add
add
daa
add
sbb
add
add
add
adc
or
adc
add
push
sbb
and
add
add
push
add
cmp
add
add
sbb
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
pop
arpl
add
loope
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
fst
add
push
mov
add
cmp
add
(bad)
sbb
sub
add
add
add
add
jne
add
add
add
sub
add
cmp
add
add
sub
jnp
add
add
sub
add
push
sub
sbb
add
add
add
add
add
sub
add
push
or
or
add
add
add
cmp
add
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
sbb
add
sub
add
pop
add
adc
jns
add
outs
das
add
or
fst
add
add
pop
lea
add
add
pop
push
sub
add
push
mov
add
add
sub
add
add
add
add
add
adc
add
or
add
sbb
add
mov
add
add
jle
add
or
jae
add
outs
xor
add
or
add
add
dec
add
cmp
add
push
cmp
add
add
fstp
and
js
add
adc
xor
add
je
add
add
push
outs
xor
add
and
push
add
cmp
add
add
add
or
je
add
outs
xor
add
or
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
(bad)
jmp
add
add
push
cmp
(bad)
(bad)
jmp
pop
or
or
add
es
fld
add
add
sub
add
adc
add
add
add
add
sbb
push
add
add
or
add
add
add
add
cli
inc
add
sbb
add
and
add
dec
add
cmp
jnp
add
add
pop
jge
add
add
jnp
add
add
push
add
add
add
add
jnp
add
add
jnp
add
add
lds
add
add
add
add
aas
hlt
add
add
push
add
add
push
add
cmp
add
add
add
pop
jge
add
add
and
add
pop
jge
add
add
add
push
add
cmp
add
add
add
add
jnp
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
add
in
add
cmp
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
or
add
add
add
jnp
add
add
ds
(bad)
jmp
add
add
dec
add
cmp
sub
push
add
add
mov
sub
sbb
add
add
add
push
add
add
add
push
add
add
add
sbb
or
jecxz
add
pop
add
adc
or
mov
and
add
add
push
add
push
cmp
add
es
add
add
jnp
add
add
pop
or
inc
add
push
and
add
add
cmp
add
add
add
add
add
adc
add
add
pop
pop
adc
add
cmp
add
add
cmp
add
add
jnp
add
add
sbb
and
add
add
add
add
aam
add
add
push
jge
add
add
or
add
dec
or
cmp
add
add
or
jnp
add
add
push
pop
sub
add
or
and
add
add
cmp
add
add
add
add
push
jge
add
add
or
pop
cmp
add
add
jnp
add
add
push
cmp
add
add
jnp
add
add
push
add
add
add
pop
push
inc
push
inc
adc
add
add
add
pop
push
inc
push
inc
adc
adc
adc
adc
sub
cmp
jmp
add
pop
add
add
add
or
add
add
cmp
add
adc
add
add
add
add
sub
add
cmp
add
add
frstor
jnp
add
add
adc
adc
(bad)
call
add
add
add
movs
add
push
gs
cmp
push
add
add
push
or
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jge
(bad)
dec
(bad)
(bad)
call
add
add
pop
add
add
push
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
dec
pop
pop
adc
add
mov
mov
mov
mov
add
add
add
add
push
(bad)
sbb
add
add
mov
add
add
add
add
add
sbb
pop
add
push
add
pop
add
adc
add
push
or
add
add
push
or
xor
add
or
add
xor
mov
pop
jg
pop
sbb
add
add
or
adc
sub
add
or
adc
adc
sub
add
or
or
adc
sub
add
or
bound
add
cmp
add
pop
fs
outs
or
add
and
add
push
add
or
add
adc
push
adc
add
sbb
add
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
(bad)
(bad)
(bad)
call
push
adc
and
add
sbb
add
push
pop
adc
rol
push
push
push
sub
add
push
push
push
sub
add
push
push
or
sbb
add
push
adc
sub
add
push
outs
sbb
or
push
sub
add
push
add
add
sub
add
jb
add
jo
data16
or
or
adc
mov
rol
push
push
push
sub
add
push
push
adc
push
adc
mov
mov
add
pop
add
lahf
add
push
cmp
add
add
add
add
lea
add
add
or
adc
sub
add
push
adc
or
ds
add
add
adc
push
adc
mov
add
pop
outs
cwde
add
push
cmp
(bad)
(bad)
inc
sub
sub
add
and
add
add
adc
das
add
push
adc
adc
push
ds
add
add
adc
mov
add
pop
outs
xchg
add
push
cmp
(bad)
(bad)
inc
outs
xchg
add
push
adc
push
and
add
sub
add
push
pop
adc
rol
push
push
pop
adc
rol
push
push
push
sub
add
push
push
push
sub
add
push
push
or
sbb
add
push
adc
sub
add
push
adc
imul
push
add
add
push
adc
mov
rol
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
push
sub
add
push
push
sub
add
push
adc
push
adc
mov
mov
add
push
and
add
add
push
push
sub
add
push
push
push
sub
add
push
push
pop
sub
add
push
push
pop
sub
add
push
push
pop
adc
mov
sub
add
push
pop
push
adc
mov
push
addps
sbb
add
push
push
sub
add
push
push
adc
push
outs
cmp
add
es
adc
imul
cmp
add
add
add
push
and
jge
sub
add
push
add
add
push
adc
cmp
add
add
(bad)
call
add
mov
adc
dec
add
or
adc
add
adc
adc
adc
mov
fiadd
add
push
outs
sbb
adc
push
sub
add
push
adc
mov
sbb
add
jae
add
push
adc
adc
adc
sub
sub
add
and
add
add
adc
adc
adc
das
add
push
adc
pop
add
add
adc
adc
or
adc
add
push
cmp
(bad)
(bad)
call
adc
sahf
add
push
cmp
add
add
add
add
lea
add
add
push
adc
adc
sub
add
push
adc
adc
push
ds
add
add
adc
push
adc
outs
mov
add
adc
outs
xchg
add
push
cmp
(bad)
(bad)
inc
outs
sbb
sbb
adc
outs
cmp
add
push
adc
outs
xchg
add
push
imul
push
adc
outs
cmp
add
adc
adc
mov
adc
adc
add
(bad)
(bad)
cmp
sbb
add
add
and
jge
sub
add
adc
adc
sub
add
push
adc
push
add
sub
add
push
adc
adc
adc
push
adc
mov
pop
add
or
sbb
adc
push
adc
mov
mov
add
frstor
add
adc
cmp
add
add
sbb
add
or
add
add
push
and
jge
sub
add
adc
adc
sub
add
push
adc
add
sub
add
push
adc
push
adc
imul
push
push
adc
push
adc
mov
mov
add
fisttp
add
add
sbb
add
sbb
or
push
outs
cmp
outs
bound
add
push
outs
in
add
adc
fstp
add
add
pop
jb
add
jo
pop
outs
pop
add
or
jge
add
sub
add
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
adc
sbb
mov
add
mov
add
adc
sbb
add
add
push
mov
add
add
pop
mov
adc
push
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
and
push
adc
mov
adc
pop
movups
mov
add
mov
adc
mov
adc
pop
adc
adc
adc
mov
add
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
adc
pop
sbb
sbb
adc
pop
sbb
sbb
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
add
add
add
add
adc
sub
add
push
(bad)
sbb
and
add
inc
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
jl
add
sldt
add
add
sbb
add
sbb
add
mov
add
add
add
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
or
popa
add
add
add
adc
and
add
pop
and
add
add
add
dec
add
cmp
add
add
add
or
jnp
add
add
pop
and
jg
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
or
add
(bad)
(bad)
jmp
add
push
add
cmp
add
or
pop
cmp
add
add
add
cmp
add
add
add
pop
add
add
jnp
add
add
add
add
add
jnp
add
add
sub
add
and
add
pop
cmp
jmp
add
add
pop
jge
add
add
jnp
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
add
push
cmp
and
add
add
cmp
fnstsw
add
add
push
add
dec
add
push
(bad)
add
push
mov
mov
mov
mov
add
mov
add
push
(bad)
sbb
add
add
add
xor
add
xor
add
sub
add
sbb
add
sbb
push
add
add
or
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
fstp
add
add
mov
mov
add
test
add
(bad)
sbb
add
add
add
add
add
cmp
add
sbb
add
data16
add
add
add
add
push
sub
jnp
add
add
rol
add
sub
add
xor
cmp
add
pusha
add
adc
add
or
jae
add
outs
xor
add
or
cmp
add
add
or
sbb
add
outs
xor
add
or
or
cmp
add
add
outs
sub
add
fadd
sub
sub
adc
add
add
add
sub
or
adc
add
add
add
adc
sbb
add
push
push
add
push
sbb
add
push
sbb
add
push
mov
mov
add
sub
sbb
or
fadd
add
popa
add
adc
pop
or
sbb
add
and
add
add
add
add
dec
pop
add
pop
add
pop
sbb
push
and
add
add
push
pop
add
jl
add
add
add
add
xchg
and
add
add
pop
pop
maxps
fld
add
and
add
add
push
pop
add
push
add
add
adc
sbb
add
or
jnp
add
add
push
pop
or
xchg
or
pop
maxps
add
adc
add
add
pop
maxps
fld
add
pop
sbb
push
fld
add
adc
add
add
outs
test
add
adc
add
add
add
dec
pop
add
or
add
add
add
(bad)
inc
(bad)
call
add
add
(bad)
(bad)
jnp
(bad)
dec
add
add
add
add
pop
add
add
push
pop
add
sar
inc
sbb
push
fstp
add
add
sbb
or
pop
maxps
add
push
and
add
add
jnp
add
add
push
pop
or
xchg
or
pop
pop
maxps
fld
add
pop
sbb
push
and
add
add
push
pop
add
jae
(bad)
(bad)
fst
outs
test
add
adc
add
push
pop
add
pop
(bad)
(bad)
inc
pop
pop
maxps
fld
add
and
add
add
dec
(bad)
(bad)
inc
adc
push
or
jnp
add
add
xchg
or
push
aas
sbb
add
pop
pop
maxps
add
add
or
add
pop
cmp
(bad)
(bad)
jmp
fnsave
add
add
add
add
mov
mov
mov
mov
add
add
add
add
add
inc
add
push
(bad)
sbb
push
sub
add
cmps
add
add
add
add
add
sbb
add
add
add
and
add
add
push
(bad)
cmp
add
add
or
jae
add
or
add
push
(bad)
cmp
add
add
(bad)
jmp
add
add
dec
(bad)
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
dec
(bad)
cmp
(bad)
(bad)
call
add
dec
(bad)
cmp
(bad)
(bad)
inc
outs
pop
add
or
mov
add
add
dec
or
cmp
add
add
add
or
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
and
add
add
push
or
cmp
(bad)
(bad)
inc
outs
pop
add
or
lea
add
add
or
or
pop
or
pop
or
add
or
add
add
add
cmp
adc
cmp
add
add
or
or
outs
xchg
add
or
ds
add
or
pop
or
or
pop
adc
and
cmp
(bad)
jmp
adc
adc
mov
retf
(bad)
(bad)
(bad)
fisttp
add
add
adc
add
or
add
or
add
add
add
add
pop
cmp
add
add
or
outs
aas
add
or
pop
outs
inc
add
or
push
cmp
add
and
add
add
push
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
or
(bad)
call
push
outs
inc
add
or
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
add
dec
or
(bad)
call
push
outs
inc
add
or
fld
add
add
fld
add
add
add
or
add
push
adc
and
add
add
push
push
add
jg
add
add
add
or
cmps
adc
add
js
add
outs
inc
add
or
push
add
add
add
or
or
add
add
cmp
add
cmp
add
add
add
or
cmps
adc
add
js
add
outs
inc
add
or
add
adc
and
push
push
add
and
outs
inc
add
or
cmps
adc
add
js
add
adc
outs
dec
add
or
mov
(bad)
jmp
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
push
add
sar
(bad)
call
or
pop
outs
dec
add
or
fld
add
add
fld
add
add
add
add
sub
add
add
cmp
add
add
inc
add
add
add
add
add
mov
push
or
add
adc
add
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
sbb
add
add
add
add
daa
add
or
and
add
add
push
add
cmp
add
add
or
pop
add
add
push
add
add
or
add
add
dec
add
cmp
add
add
mov
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
cmp
add
add
or
sldt
add
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
adc
add
add
add
adc
add
push
add
cmp
add
add
aas
add
add
add
add
dec
add
cmp
add
sub
add
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
pop
add
push
add
add
outs
pop
add
push
cmp
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jne
add
add
lods
(bad)
(bad)
(bad)
jle
add
add
mov
add
sub
add
sub
xchg
(bad)
(bad)
jmp
add
add
sub
add
cmp
sub
xor
add
adc
or
add
and
add
add
js
add
add
mov
js
add
sub
add
outs
test
add
or
add
add
dec
add
cmp
add
push
cmp
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
sar
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
sbb
or
dec
add
add
add
add
add
add
push
add
add
add
add
or
add
sub
add
cmp
or
pop
or
add
and
add
dec
or
cmp
jnp
add
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
repnz
add
jnp
add
add
and
add
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
add
push
add
jge
add
add
add
add
sub
add
cmp
add
add
add
fild
add
push
adc
add
jnp
add
add
mov
jnp
add
add
and
add
add
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
add
push
add
jge
add
add
jnp
add
add
push
add
add
add
pop
and
add
add
push
or
cmp
add
add
jnp
add
add
aas
cdq
add
add
sub
or
mov
add
add
add
add
pop
and
jle
add
and
add
add
push
or
cmp
jnp
add
add
add
add
add
and
push
or
cmp
add
add
add
add
or
jnp
add
add
pop
push
pop
adc
pop
adc
adc
sub
pop
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
aas
pop
add
add
sub
pop
pop
pop
and
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
inc
jmp
add
sti
std
(bad)
dec
add
add
add
add
(bad)
(bad)
call
add
rol
add
jmp
add
and
add
add
push
or
cmp
jnp
add
add
jnp
add
add
adc
adc
adc
adc
adc
add
out
add
add
jnp
add
add
mov
add
adc
add
jnp
add
add
cli
inc
add
fsin
(bad)
inc
sub
add
push
and
add
add
push
add
push
cmp
(bad)
jmp
fnstsw
mov
add
push
add
add
(bad)
(bad)
inc
adc
(bad)
jmp
adc
add
sub
add
cmp
(bad)
jmp
add
add
add
jnp
add
add
or
add
push
std
(bad)
jmp
or
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
add
add
add
or
or
add
push
cmp
(bad)
(bad)
jmp
adc
adc
or
push
adc
out
add
add
add
pop
jge
add
add
add
inc
adc
add
push
or
cmp
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
adc
add
cmp
(bad)
(bad)
jmp
add
add
dec
or
cmp
(bad)
dec
add
dec
add
push
cmp
add
add
jnp
add
add
cmp
add
add
add
inc
push
add
add
jnp
add
add
jnp
add
add
and
adc
add
pop
add
add
sbb
add
add
sbb
cmps
cld
(bad)
jmp
add
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
add
jnp
add
add
inc
cmp
add
add
adc
jnp
add
add
push
add
add
add
pop
add
add
add
or
push
add
add
push
or
cmp
std
(bad)
call
adc
add
mov
mov
mov
mov
add
add
add
add
add
add
add
inc
add
push
(bad)
sbb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
jnp
add
add
popf
and
add
add
push
add
push
cmp
add
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
add
add
dec
add
cmp
sub
add
or
adc
add
push
mov
add
cmp
add
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
add
add
outs
dec
add
or
dec
add
or
adc
sub
add
sub
adc
add
add
add
adc
push
lea
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
add
sub
xor
add
add
cmp
add
add
add
add
add
add
pop
pop
bound
rol
add
add
add
pop
cmp
add
add
adc
add
add
add
push
add
cmp
add
add
add
pop
jge
add
add
jnp
add
add
adc
call
add
dec
add
cmp
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
adc
ret
add
and
add
push
mov
mov
add
mov
sti
add
push
(bad)
sbb
add
add
add
add
sti
sti
add
sbb
add
sbb
add
push
add
add
add
add
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
cmp
add
add
add
push
and
add
and
add
and
add
jge
add
add
sbb
add
push
mov
mov
mov
sub
sbb
add
add
add
add
add
daa
daa
add
sbb
add
sbb
add
and
add
push
fld
add
or
push
add
add
and
adc
add
js
add
sub
add
push
or
add
add
push
sub
add
add
add
add
or
add
sbb
add
sbb
add
push
add
add
add
adc
add
or
fst
add
add
and
add
add
js
add
or
add
add
push
sub
add
adc
add
add
add
or
adc
add
sbb
pop
add
add
add
add
adc
xchg
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
and
add
add
push
add
cmp
and
jg
add
add
add
add
push
cmp
add
add
(bad)
jg
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
cmp
frstor
add
add
mov
add
mov
mov
sti
add
push
(bad)
sbb
add
add
add
add
add
test
add
add
xor
add
add
adc
add
and
add
jge
add
add
push
add
add
mov
sub
sbb
add
add
add
add
adc
add
add
add
int
add
sub
xor
add
add
cmp
add
add
add
add
aas
add
add
add
add
sub
add
cmp
add
add
add
add
pop
jge
add
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
jnp
add
add
ds
add
add
add
add
jnp
add
add
adc
add
add
add
jnp
add
add
add
sub
add
add
jge
add
add
add
add
dec
add
cmp
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
add
add
dec
add
cmp
(bad)
inc
push
jge
add
add
xor
add
add
add
add
jnp
add
add
add
sub
add
add
add
pop
jge
add
add
push
add
add
push
add
cmp
or
sbb
add
push
mov
add
add
mov
sti
add
push
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
jnp
add
add
imul
add
pop
add
add
push
(bad)
cmp
add
add
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
add
dec
(bad)
cmp
add
add
pop
add
adc
add
push
add
add
pop
add
add
push
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
call
add
push
add
add
add
mov
jnp
add
add
pop
pop
pop
pop
jno
add
add
pop
add
add
sbb
add
adc
add
adc
add
or
add
les
add
add
add
add
pop
adc
and
add
add
cmp
jmp
push
pop
pop
sbb
and
add
add
push
(bad)
cmp
(bad)
dec
add
add
add
push
add
add
lea
add
add
pop
pop
push
sahf
push
pop
pop
adc
inc
sbb
add
adc
call
add
add
push
adc
add
add
add
mov
(bad)
jmp
or
add
dec
(bad)
cmp
(bad)
(bad)
call
or
or
inc
jnp
add
add
push
sahf
or
pop
or
add
cmp
(bad)
(bad)
jmp
add
and
add
dec
(bad)
cmp
jnp
add
add
or
pop
and
add
add
add
pop
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
test
add
adc
add
add
add
pop
aas
and
add
and
add
dec
(bad)
cmp
(bad)
inc
jnp
add
add
or
pop
and
in
(bad)
(bad)
inc
jnp
add
add
or
and
add
pop
add
cmp
jnp
add
add
adc
adc
rcr
or
or
cmp
adc
pop
pop
adc
and
push
(bad)
cmp
std
(bad)
dec
push
cmp
add
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
add
add
add
or
aaa
add
add
jnp
add
add
or
pop
xchg
adc
cmp
(bad)
call
add
or
xchg
pop
adc
adc
pop
xchg
adc
jmp
add
add
pop
cmp
(bad)
jmp
adc
cmp
(bad)
(bad)
(bad)
fnsave
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
add
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sbb
add
add
add
and
and
and
add
add
push
or
add
pop
add
add
add
pop
add
add
jnp
add
add
add
add
add
adc
pop
xchg
adc
inc
lea
add
add
add
add
adc
pop
pop
pop
xchg
adc
inc
jns
add
add
add
add
xchg
add
add
add
xchg
inc
add
add
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
dec
add
add
sbb
add
sbb
add
add
add
pop
pop
and
mov
add
add
pop
and
mov
add
and
add
add
push
or
add
add
add
add
and
add
add
push
or
add
or
and
jg
add
and
inc
add
adc
adc
ds
add
add
pop
pop
and
(bad)
jmp
or
add
pop
cmp
add
add
add
add
cli
jle
add
sub
add
adc
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
jnp
add
add
add
push
push
aas
(bad)
(bad)
inc
sbb
and
add
add
push
or
add
add
add
add
pop
pop
and
mov
add
add
pop
and
ret
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
mov
jnp
add
add
pop
pop
and
mov
add
add
pop
and
test
add
add
add
add
pop
pop
and
mov
add
add
pop
and
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
inc
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
daa
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
or
add
or
or
pop
(bad)
(bad)
dec
adc
inc
add
add
add
adc
add
add
adc
cmp
add
add
dec
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
fwait
add
add
(bad)
(bad)
inc
add
add
add
add
dec
or
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
adc
add
sub
add
adc
and
add
add
push
or
(bad)
inc
adc
add
add
add
dec
add
or
add
add
or
add
cmp
(bad)
call
push
pop
cmp
(bad)
(bad)
inc
jnp
add
add
add
or
or
add
sub
add
cmp
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
and
add
add
push
or
(bad)
inc
jnp
add
add
add
pop
add
add
push
or
(bad)
inc
jnp
add
add
inc
inc
adc
pop
or
add
or
or
push
mov
adc
pop
pop
mov
adc
sbb
mov
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
push
(bad)
sbb
or
inc
sbb
add
add
pusha
add
add
add
add
add
add
add
adc
add
add
add
adc
pop
lea
add
or
push
add
add
sub
or
sub
or
sub
adc
add
mov
add
adc
add
add
sub
add
cmp
add
sub
add
or
push
outs
or
add
pop
adc
sub
add
cmp
add
add
dec
add
cmp
add
add
or
add
add
cmp
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
das
add
add
add
aad
(bad)
inc
outs
or
add
pop
sub
js
add
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
add
add
inc
sub
add
jae
add
or
add
or
sub
or
sub
push
add
sbb
add
sub
xor
ins
add
add
add
sub
add
outs
dec
add
or
add
or
add
or
push
jb
add
jo
cdq
add
or
pop
add
add
or
sub
add
push
jb
add
jo
cdq
add
or
pop
add
add
or
adc
add
fld
add
add
fld
add
add
or
adc
or
push
add
add
pop
mov
add
add
lods
add
push
(bad)
sbb
sub
sbb
add
add
add
add
or
add
add
add
pop
pop
add
sbb
add
push
add
sbb
add
sub
xor
add
add
add
add
add
add
or
fld
add
add
fild
add
(bad)
sbb
add
adc
add
add
add
sldt
sbb
add
or
sub
or
sub
sbb
add
add
adc
add
or
push
add
add
add
push
add
or
and
push
add
cmp
add
add
sub
add
add
add
add
sub
add
cmp
add
add
jb
add
jo
push
add
or
push
add
add
add
push
add
or
push
jb
add
jo
push
add
or
and
add
add
push
add
cmp
add
add
add
xchg
add
or
or
add
add
add
add
add
jmp
add
cmp
add
and
push
add
dec
add
add
add
jmp
(bad)
(bad)
inc
add
push
add
add
call
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
xchg
add
or
or
add
add
add
add
add
cli
add
jo
push
add
or
and
add
add
cmp
push
jb
add
jo
push
add
or
and
add
dec
add
cmp
outs
sbb
add
or
sbb
add
push
add
add
add
mov
add
add
cmp
add
(bad)
sbb
sub
inc
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
or
rol
add
ins
add
adc
adc
pop
add
add
push
add
add
popa
add
push
cmp
add
add
pop
jb
add
jo
dec
add
or
icebp
add
add
add
add
dec
add
add
push
outs
pop
add
or
cmp
(bad)
(bad)
jmp
push
add
add
push
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
and
add
push
add
add
add
add
dec
add
(bad)
(bad)
cmp
add
add
adc
or
add
add
push
cmp
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
pop
lea
add
add
push
pop
sub
or
add
or
add
add
push
cmp
(bad)
jmp
cmp
add
add
pop
jge
add
add
add
pop
adc
or
add
sub
add
cmp
(bad)
jmp
add
push
outs
pop
add
or
add
or
add
add
sar
(bad)
inc
jb
add
jo
dec
add
or
xor
add
add
push
outs
pop
add
or
add
add
jnp
add
add
jmp
add
cmp
jle
add
or
add
add
xchg
(bad)
(bad)
inc
jb
add
jo
dec
add
or
jp
(bad)
inc
pop
pop
movq
add
jge
add
add
jnp
add
add
cli
add
jo
cdq
add
or
pop
(bad)
(bad)
inc
jle
add
or
add
add
pop
add
add
cmp
adc
mov
fdivr
(bad)
(bad)
fstp
add
add
pop
or
adc
add
jno
add
add
sub
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
or
sub
or
sub
push
add
push
add
or
push
add
sbb
add
sub
xor
add
add
add
add
jns
add
adc
push
add
push
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
fild
add
(bad)
sbb
add
add
add
add
add
sbb
push
sbb
add
add
add
es
sbb
add
sbb
pop
add
add
add
add
jle
add
add
add
add
add
add
or
adc
add
jb
add
jo
push
add
or
and
add
add
push
add
cmp
add
add
add
add
inc
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
add
or
fld
add
add
sub
add
or
add
add
or
push
or
xor
add
jle
add
add
call
cmp
add
sub
add
cmp
add
add
add
add
add
(bad)
add
add
pop
pop
or
jle
add
add
imul
adc
fst
add
add
pop
mov
add
sub
add
push
(bad)
sbb
sub
sbb
add
add
add
add
loope
add
sbb
add
sbb
push
add
add
outs
add
adc
add
or
add
or
sbb
cmp
add
add
pop
call
or
add
or
add
or
or
add
inc
pop
add
add
or
add
pop
pop
or
push
mov
into
(bad)
(bad)
call
or
add
pop
or
add
adc
push
pop
mov
or
test
add
(bad)
sbb
add
add
sbb
add
add
add
add
or
add
add
add
pop
pop
add
push
add
sbb
add
sub
xor
add
add
add
add
add
pusha
add
add
lea
add
add
fld
add
add
fild
add
(bad)
sbb
add
add
add
add
add
push
push
add
sbb
add
or
sub
or
sub
xchg
and
adc
add
js
add
and
adc
add
js
add
sub
add
mov
pop
add
or
add
add
xor
add
add
add
add
and
adc
add
js
add
jae
add
or
push
outs
pop
add
or
add
and
adc
add
js
add
sub
add
sbb
add
sub
pop
sub
or
sub
push
add
sbb
add
sub
not
add
sub
add
sub
push
sub
add
sub
add
adc
add
sub
add
sub
push
sub
add
sub
add
add
sbb
add
sub
pop
sub
or
sub
sbb
or
inc
add
add
add
add
add
add
adc
jle
add
add
sbb
add
jle
add
add
adc
outs
pop
add
or
push
cmp
add
add
adc
fst
or
or
add
add
and
or
add
pop
cmp
add
or
pop
cmp
add
jle
add
or
pop
fucom
add
add
pop
inc
pop
cmp
add
add
pop
aas
pop
push
bound
add
add
and
pop
or
xor
add
or
pop
pop
pop
sbb
add
add
and
pop
adc
jle
add
add
and
push
bound
add
add
and
pop
or
arpl
add
jle
add
add
pop
outs
add
or
add
or
add
arpl
add
adc
adc
imul
pusha
add
or
add
add
sbb
add
jle
add
add
adc
or
push
add
add
fld
add
add
add
add
add
adc
push
fld
add
add
push
adc
frstor
add
add
pop
mov
mov
mov
add
add
add
inc
add
push
(bad)
sbb
pop
sub
inc
dec
add
add
add
jmp
add
adc
add
std
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
sbb
push
add
add
add
add
jb
add
jo
add
add
add
jo
data16
add
and
add
sub
add
sub
add
add
add
std
add
jo
cdq
add
or
adc
add
pop
sub
add
bound
add
sub
add
data16
add
arpl
add
sub
add
or
add
or
jb
add
jo
test
add
or
outs
adc
add
sub
or
add
add
dec
add
cmp
add
or
or
outs
adc
add
and
add
add
push
add
cmp
add
add
add
push
add
cmp
add
add
sub
add
push
and
add
loopne
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
bound
add
fisttp
cmp
add
add
outs
sub
add
(bad)
adc
add
push
pop
or
sub
sbb
add
inc
xor
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
sub
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
sbb
add
add
add
adc
sub
add
add
add
push
jge
add
add
add
add
dec
add
cmp
add
add
sbb
add
add
add
add
dec
add
cmp
add
add
jae
add
push
jge
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
add
and
add
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
jbe
add
rol
push
fisttp
add
add
add
lods
add
push
(bad)
sbb
add
add
adc
add
add
add
add
add
xor
ret
add
add
adc
sbb
add
add
push
add
or
and
add
add
cmp
add
es
push
lea
ror
add
add
push
add
or
and
add
dec
add
cmp
sbb
add
add
push
add
or
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
and
add
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
push
lea
ror
add
add
push
add
or
fld
add
add
fild
add
(bad)
sbb
add
add
add
add
add
mov
add
add
pop
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
add
add
arpl
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
push
add
add
add
add
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
pop
add
add
add
add
add
add
sub
add
sub
pop
sub
or
sub
sbb
add
add
add
and
add
add
or
push
add
add
cmps
add
add
and
add
add
in
add
add
or
add
push
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
pop
and
add
add
push
add
add
jae
add
push
add
xor
add
or
or
add
push
add
cmp
add
or
add
push
pop
and
pushf
pop
pop
and
lock
(bad)
jmp
pop
add
add
nop
add
push
cmp
add
cmp
add
add
movs
(bad)
(bad)
inc
pop
and
pushf
cmp
push
add
add
push
add
dec
add
add
add
add
xor
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
dec
add
inc
add
add
add
add
push
cmp
(bad)
(bad)
jmp
push
or
or
add
push
pop
and
pushf
pop
and
in
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
and
or
sub
cwde
(bad)
(bad)
jmp
push
jae
add
push
add
add
add
pop
mov
lods
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
or
add
sbb
add
add
add
add
sbb
add
add
sub
or
add
add
sub
sbb
add
add
add
push
add
add
sbb
add
or
sub
or
sub
push
add
sbb
add
sub
xor
xchg
add
add
add
adc
lea
ror
add
add
push
add
or
and
add
add
xchg
add
push
cmp
add
add
sbb
and
add
push
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
adc
and
add
push
add
or
fld
add
add
fild
add
(bad)
sbb
add
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
xchg
add
add
add
and
add
add
cmp
add
add
add
adc
add
add
add
add
dec
add
cmp
add
add
sbb
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
add
add
mov
xchg
add
add
or
add
add
dec
add
push
(bad)
sbb
add
adc
add
add
and
or
add
sbb
add
push
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
outs
add
add
add
add
add
add
push
inc
push
add
add
add
add
cmp
add
add
jnp
add
add
cmps
add
push
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fisttp
add
add
or
or
add
add
dec
add
push
(bad)
sbb
sub
add
adc
add
add
add
or
add
sbb
add
sbb
add
pop
add
adc
jnp
add
add
inc
add
push
or
or
add
add
dec
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
adc
and
add
push
add
or
and
add
add
popf
add
push
cmp
add
add
and
add
add
and
add
add
push
add
cmp
add
add
add
add
and
pushf
push
and
add
add
mov
push
add
add
add
add
pop
test
pop
push
bound
cld
add
push
popf
jle
add
add
and
pushf
push
and
add
add
xlat
(bad)
(bad)
call
push
lea
add
add
pop
push
lea
add
add
and
add
add
push
add
cmp
or
push
add
add
add
add
pop
xor
pop
push
bound
cld
add
push
popf
jle
add
add
and
pushf
push
and
xlat
(bad)
(bad)
(bad)
cmp
add
add
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
or
add
sar
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
cld
add
push
popf
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
inc
jmp
add
mov
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
adc
and
add
push
add
or
and
push
add
cmp
add
add
add
add
push
pop
or
cld
add
push
popf
jle
add
add
sbb
or
add
dec
add
cmp
(bad)
jmp
push
add
add
and
add
add
push
add
cmp
(bad)
call
or
add
add
sub
inc
(bad)
(bad)
jmp
push
pop
push
aas
lahf
(bad)
(bad)
(bad)
fisttp
mov
dec
add
push
(bad)
sbb
add
add
or
add
or
add
or
add
add
xor
add
add
add
add
adc
sub
add
add
jge
add
add
add
add
sub
pop
add
add
add
and
add
add
add
add
pop
(bad)
lahf
add
push
jge
add
add
add
push
pop
pop
(bad)
lahf
add
push
jge
add
add
add
add
pop
cmp
add
add
add
pop
adc
sbb
push
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
inc
add
lea
add
add
add
add
add
sahf
add
push
cmp
mov
(bad)
inc
and
inc
add
lea
add
add
add
add
or
add
add
sub
sbb
add
add
add
add
push
add
fadd
or
add
or
sub
or
sub
sbb
pop
add
add
adc
sub
add
add
jge
add
add
add
add
pop
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
push
add
lods
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
add
add
stos
add
add
sbb
add
add
add
add
mov
add
add
sti
add
push
(bad)
sbb
add
add
add
add
push
add
add
add
pop
sub
or
sub
sbb
add
add
add
adc
sub
add
add
jge
add
add
add
add
sub
add
add
add
add
add
lea
add
add
add
add
and
add
lea
add
add
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
and
add
lea
add
add
add
add
add
push
add
cmp
add
add
push
jge
add
add
add
add
sub
(bad)
(bad)
jmp
add
pop
and
add
jge
add
add
sldt
add
mov
add
cmp
add
(bad)
sbb
add
add
adc
add
add
add
leave
add
sbb
add
or
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
pop
add
adc
jnp
add
add
inc
or
or
add
add
dec
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
pop
add
add
add
lea
add
add
add
add
sub
add
sub
pop
sub
or
sub
push
add
loopne
add
sub
add
push
sub
add
sub
add
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
xor
lahf
add
add
add
and
add
add
inc
add
add
jnp
add
add
and
add
add
das
add
add
or
add
push
add
cmp
add
add
add
add
or
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jl
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
(bad)
jmp
push
add
add
mov
add
cmp
sub
adc
add
mov
add
adc
add
add
pop
cmp
add
add
add
add
and
push
add
add
pop
inc
push
add
add
push
add
add
push
add
cmp
add
add
or
add
push
jo
add
or
add
add
dec
add
cmp
add
add
add
pop
sub
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
sub
sar
(bad)
jmp
sub
add
push
add
sbb
add
sub
pop
sub
or
sub
adc
add
cmps
add
add
add
adc
add
add
dec
add
cmp
add
add
je
add
and
add
add
push
add
dec
add
add
add
add
and
add
push
add
add
add
and
add
(bad)
(bad)
(bad)
call
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
sub
add
add
jge
add
add
push
add
xlat
add
add
add
push
add
cmp
add
aad
add
push
add
add
mov
cmp
jmp
sub
add
xor
add
add
add
add
and
add
add
mov
rol
add
add
add
add
fld
add
push
add
add
add
fiadd
add
pop
or
push
mov
sbb
add
adc
and
add
add
push
or
cmp
pop
adc
pop
adc
push
add
push
add
jnp
add
add
fadd
add
add
add
rol
add
sbb
add
add
add
add
rol
add
sbb
jae
add
push
outs
or
add
add
jge
add
add
or
add
dec
or
cmp
add
push
pop
push
mov
imul
aad
add
pop
push
mov
jnp
add
add
imul
add
add
add
mov
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
push
pop
add
add
mov
(bad)
(bad)
(bad)
jmp
add
and
add
sub
add
sub
das
(bad)
(bad)
jmp
add
add
sub
lahf
(bad)
(bad)
jmp
add
add
add
add
jnp
add
add
fadd
add
add
add
mov
jp
(bad)
jmp
sub
add
and
add
sub
add
outs
data16
or
push
mov
jnp
add
add
imul
or
or
add
sub
inc
(bad)
(bad)
jmp
add
add
add
sub
add
push
and
mov
daa
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
xor
add
add
adc
add
add
cmp
add
sub
jnp
add
add
jle
add
or
sub
add
push
add
jge
add
add
push
add
add
push
add
cmp
push
jge
add
add
int3
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
mov
add
and
add
push
cmp
add
sbb
add
sub
add
outs
dec
add
or
arpl
(bad)
jmp
add
add
sub
xchg
(bad)
(bad)
jmp
sub
add
or
sub
or
sub
adc
add
jge
add
add
add
and
add
add
cmp
add
add
add
jge
add
add
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
inc
add
fld
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
and
add
dec
add
cmp
add
push
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
rol
push
sbb
add
add
pop
sub
or
sub
adc
add
add
add
and
add
dec
add
cmp
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
and
add
sub
add
sub
sbb
add
sub
pop
lea
add
add
add
push
add
or
add
add
add
cmp
and
add
push
add
or
add
add
or
add
pop
cmp
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
add
add
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
xchg
(bad)
(bad)
jmp
add
add
add
add
jmp
add
and
(bad)
call
add
add
dec
add
cmp
(bad)
(bad)
inc
push
lea
add
add
add
add
push
add
add
push
add
cmp
add
fild
add
add
add
cmp
add
sub
add
outs
dec
add
or
add
push
and
adc
add
js
add
sub
stc
(bad)
(bad)
jmp
add
push
add
cmp
inc
jae
add
or
add
add
jae
add
or
add
add
pop
add
add
push
add
cmp
(bad)
jmp
add
sbb
add
cmp
add
jns
add
and
add
add
push
adc
cmp
add
add
jo
add
cmp
add
add
add
sldt
add
dec
adc
add
js
add
cmp
add
add
pop
adc
add
js
add
or
jnp
add
add
or
mov
jnp
add
add
jae
add
push
adc
add
mov
outs
jno
add
cmp
push
add
add
push
push
add
and
add
add
add
add
popa
adc
add
js
add
and
js
add
outs
pop
add
or
jb
add
or
add
or
add
or
sub
add
add
outs
je
add
sub
add
push
or
add
or
ins
add
add
add
push
push
add
lds
add
cmp
add
add
or
int3
add
push
and
add
add
mov
add
add
add
add
push
add
sub
add
and
js
add
outs
pop
add
or
add
add
dec
push
add
add
add
cmp
push
sub
add
push
and
add
add
push
push
add
add
add
outs
jbe
add
cmp
add
add
jnp
add
add
jae
add
sub
add
and
js
add
outs
pop
add
or
outs
ja
add
cmp
jnp
add
add
adc
add
js
add
or
add
or
or
or
jns
add
outs
pop
add
or
inc
(bad)
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
(bad)
(bad)
call
(bad)
push
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
dec
push
add
leave
(bad)
(bad)
inc
jnp
add
add
mov
add
sub
add
and
js
add
outs
pop
add
or
sldt
add
or
pop
add
add
or
add
or
sub
jnp
add
add
jp
add
adc
adc
add
push
adc
cmp
add
jae
add
or
or
pop
pop
and
sub
add
adc
pop
daa
outs
jnp
add
adc
or
outs
jnp
add
adc
and
js
add
outs
push
add
or
adc
and
add
push
outs
push
add
or
cmp
add
and
add
add
push
adc
dec
add
add
add
add
add
(bad)
call
add
adc
add
mov
add
aaa
add
add
add
adc
add
jg
add
sub
add
popa
(bad)
(bad)
(bad)
fiadd
add
lds
add
fiadd
add
out
add
add
add
add
sub
add
push
cmp
adc
adc
and
or
add
js
add
sub
push
add
or
and
push
adc
cmp
pop
sub
add
or
adc
outs
sbb
add
adc
or
add
add
or
outs
sbb
add
outs
lahf
add
or
push
adc
cmp
sub
add
push
adc
and
add
add
push
adc
cmp
(bad)
call
or
mov
add
sub
add
outs
push
add
or
adc
adc
outs
push
add
or
adc
pop
sub
add
or
adc
outs
sbb
add
adc
cmp
add
outs
sbb
add
adc
and
cli
(bad)
(bad)
dec
jne
add
add
adc
add
and
add
dec
adc
cmp
(bad)
(bad)
(bad)
cmp
add
adc
jl
add
cmp
add
add
add
jge
add
add
jp
add
outs
jge
add
cmp
add
add
add
jle
add
adc
add
jae
add
push
adc
add
push
adc
cmp
or
add
or
ds
(bad)
push
add
or
or
or
outs
sbb
add
outs
push
add
or
and
add
add
aad
add
cmp
(bad)
jmp
adc
push
or
add
add
and
add
and
add
add
(bad)
add
push
cmp
(bad)
(bad)
cmp
(bad)
jmp
xchg
adc
add
js
add
adc
(bad)
(bad)
call
add
jg
add
cmp
add
add
jne
add
add
or
add
and
add
pop
cmp
(bad)
(bad)
jmp
adc
jle
add
adc
add
cmp
movs
aas
add
add
pop
and
add
add
in
(bad)
inc
jp
(bad)
jmp
add
add
dec
adc
cmp
std
(bad)
inc
cmp
add
add
jno
add
cmp
add
add
dec
(bad)
cmp
add
add
add
add
popa
adc
add
js
add
and
js
add
outs
pop
add
or
add
add
adc
int3
add
push
and
add
dec
(bad)
cmp
add
add
push
sub
add
push
adc
add
or
mov
add
or
add
or
push
cmp
add
and
add
add
push
(bad)
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
dec
add
add
add
add
push
add
add
(bad)
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
jb
add
sub
add
push
add
sub
add
push
push
cmp
pop
add
add
movs
(bad)
(bad)
inc
cmp
(bad)
jmp
add
add
push
cmp
or
add
add
sbb
add
and
add
js
add
or
mov
js
add
sub
add
adc
adc
cmp
add
and
js
add
or
scas
add
add
js
add
sub
add
adc
add
add
add
mov
js
add
adc
sub
pop
add
or
sbb
add
add
data16
(bad)
jmp
add
cmp
(bad)
(bad)
jmp
add
sub
add
push
fisttp
add
add
or
add
or
or
sub
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
xor
or
add
jp
add
and
cmp
adc
add
dec
add
cmp
jnp
add
add
and
add
add
cmp
add
es
adc
add
jnp
add
add
add
jnp
add
add
outs
add
or
jnp
add
add
enter
sub
add
adc
sub
add
outs
pop
add
or
pop
add
add
cmp
add
add
push
or
ins
add
add
jnp
add
add
outs
add
or
add
add
sub
add
add
inc
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
call
(bad)
dec
dec
add
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
dec
or
dec
(bad)
(bad)
dec
pop
pop
or
add
add
add
add
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
sub
adc
add
mov
add
adc
add
add
cmp
add
add
adc
add
dec
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
add
add
add
and
add
cmp
(bad)
(bad)
inc
add
aad
add
or
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
int
add
sub
add
adc
sub
add
outs
pop
add
or
add
add
add
(bad)
adc
add
js
add
add
add
or
add
(bad)
add
push
cmp
sub
add
xor
lock
add
add
and
add
add
push
add
cmp
add
cmp
add
add
outs
test
add
and
adc
add
js
add
outs
xchg
add
cmp
add
add
add
add
dec
add
cmp
add
sub
add
push
or
add
add
dec
add
cmp
add
add
add
outs
inc
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
jns
add
jge
add
add
outs
test
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
push
add
cmp
(bad)
(bad)
call
add
outs
xchg
add
outs
mov
add
or
adc
add
js
add
sub
outs
or
add
jae
add
push
jge
add
add
push
add
add
cwde
(bad)
(bad)
inc
sub
xor
add
adc
cmp
add
add
add
retf
add
push
or
add
push
or
cmp
add
add
push
ds
add
add
jnp
add
add
cs
add
js
add
adc
sub
add
outs
pop
add
or
dec
add
add
outs
jle
add
or
add
loope
add
adc
sub
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
js
add
adc
jnp
add
add
pop
add
or
add
stos
add
push
or
or
add
sub
add
push
cmp
popf
add
add
jnp
add
add
outs
dec
add
or
leave
add
add
add
or
add
outs
test
add
outs
push
add
or
add
or
add
add
or
ds
add
adc
add
js
add
sub
push
add
add
add
pop
outs
jnp
add
adc
add
or
adc
pop
outs
jnp
add
add
add
or
push
adc
outs
xchg
add
or
ds
add
add
add
push
outs
push
add
or
cmp
add
add
add
push
or
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
or
add
dec
or
cmp
jnp
add
add
lea
add
or
jnp
add
add
add
sbb
add
outs
mov
add
add
add
add
or
add
or
or
add
cmp
jae
add
cmp
add
add
outs
je
add
adc
or
dec
adc
add
js
add
outs
pop
add
adc
adc
push
add
push
outs
xchg
add
or
pop
adc
adc
outs
xchg
add
or
pusha
add
or
dec
adc
add
js
add
and
add
sub
add
outs
nop
add
or
or
add
or
add
or
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
outs
push
add
or
jns
(bad)
jmp
add
add
dec
or
cmp
(bad)
(bad)
call
add
outs
jnp
add
and
add
dec
or
cmp
(bad)
(bad)
call
add
outs
jo
add
outs
push
add
or
and
add
add
push
or
cmp
jnp
add
add
push
adc
add
js
add
adc
sub
add
outs
pop
add
or
push
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
jge
add
and
add
add
push
cmp
cmp
jnp
add
add
cmp
add
add
add
in
add
jge
add
add
pop
add
add
push
cmp
cmp
or
add
jnp
add
add
xchg
add
or
jnp
add
add
pop
adc
add
js
add
jae
add
push
adc
add
add
add
adc
sub
add
and
add
sub
add
outs
dec
add
or
add
or
jnp
add
add
xchg
adc
add
js
add
sub
add
adc
adc
and
js
add
sub
pop
add
or
jnp
add
add
popf
adc
add
js
add
sub
add
outs
pop
add
or
jnp
add
add
xchg
add
or
xchg
add
or
add
add
jnp
add
add
mov
js
add
add
add
add
sbb
sbb
sbb
add
sub
add
sub
pop
add
or
jnp
add
add
lods
adc
add
js
add
sub
sbb
adc
add
js
add
sub
pop
add
or
jnp
add
add
push
add
or
or
add
add
add
add
xchg
add
or
jnp
add
add
jp
add
sub
add
jle
add
or
add
push
outs
push
add
or
jnp
add
add
xchg
add
or
or
add
add
add
add
cwde
add
or
jnp
add
add
jp
add
sub
add
push
outs
push
add
or
jnp
add
add
mov
js
add
jae
add
push
adc
sub
add
push
or
sub
add
push
adc
push
adc
cmp
adc
call
add
jnp
add
add
cs
add
js
add
jae
add
push
adc
add
add
add
(bad)
adc
add
js
add
pop
outs
or
add
outs
pop
add
or
jnp
add
add
retf
add
js
add
pop
outs
cdq
add
or
add
or
push
inc
pop
add
add
jnp
add
add
xlat
adc
add
js
add
and
js
add
outs
pop
add
or
push
add
add
fld
add
add
sldt
add
and
pop
add
add
and
add
or
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
(bad)
fisttp
add
add
push
cmp
add
add
push
outs
sub
add
fadd
jnp
add
add
loopne
add
sub
add
jae
add
push
adc
add
add
add
push
add
add
jnp
add
add
call
add
add
jnp
add
add
fwait
add
or
add
or
and
or
add
adc
sub
add
add
add
stc
adc
add
js
add
jae
add
push
adc
jnp
add
add
(bad)
adc
add
js
add
or
add
or
add
add
dec
aaa
add
add
add
jnp
add
add
outs
sahf
add
or
add
or
add
cmp
add
add
add
add
dec
aaa
add
or
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
add
sub
add
and
js
add
outs
pop
add
or
add
add
sub
add
push
cmp
stos
(bad)
(bad)
(bad)
cmp
add
add
jnp
add
add
mov
js
add
and
js
add
or
scas
add
add
js
add
sub
add
outs
pop
add
or
sldt
add
and
pop
add
add
and
sub
add
fcom
and
lahf
add
or
jmp
push
add
add
and
push
sbb
add
outs
sub
add
(bad)
sldt
add
and
pop
add
add
and
add
or
add
add
add
mov
jnp
add
add
mov
ds
add
add
jnp
add
add
push
adc
add
push
jae
add
push
adc
add
mov
mov
cmp
add
adc
sub
add
jnp
add
add
and
add
push
jae
add
push
adc
add
add
add
xor
add
sub
add
adc
pop
add
or
add
add
pop
cmp
add
add
add
add
add
movs
add
or
add
add
cmp
add
push
adc
add
pop
add
or
add
add
cmp
add
add
jnp
add
add
inc
adc
add
push
adc
add
sub
sub
jns
add
outs
pop
add
or
xor
add
and
add
dec
cmp
dec
add
add
add
(bad)
dec
add
add
add
add
(bad)
dec
add
and
add
add
fcos
(bad)
call
add
add
xchg
add
or
xor
add
add
add
add
dec
adc
add
push
adc
add
pop
add
or
add
aad
add
cmp
sbb
add
add
add
add
pop
adc
add
push
adc
add
pop
add
or
sldt
add
daa
cmp
add
add
daa
outs
sub
add
fcom
sub
stos
(bad)
(bad)
(bad)
fisttp
add
add
es
push
sbb
add
outs
sub
add
(bad)
sldt
add
and
add
and
or
add
add
add
popa
adc
add
push
jae
add
push
adc
add
add
add
jp
add
sub
add
sub
sbb
add
outs
cmps
add
or
jnp
add
add
mov
add
push
sub
test
sbb
add
outs
cmps
add
or
jnp
add
add
cwde
adc
add
push
sub
stos
add
or
sbb
add
outs
cmps
add
or
jnp
add
add
test
js
add
sub
add
outs
cmps
add
or
jnp
add
add
mov
js
add
sub
add
cmp
add
add
(bad)
adc
add
push
cmp
add
add
mov
add
sub
add
outs
cmps
add
or
jnp
add
add
int3
adc
add
push
sub
push
cmp
add
add
(bad)
adc
add
push
cmp
add
add
mov
add
sub
add
outs
cmps
add
or
jnp
add
add
rcl
add
push
sub
add
cmp
add
add
(bad)
adc
add
push
cmp
add
add
mov
add
sub
add
outs
cmps
add
or
push
add
add
fld
add
add
sldt
add
sub
pop
add
add
sub
add
or
jae
add
or
push
add
add
add
pop
cmp
add
add
push
adc
outs
lods
add
or
pop
outs
movs
add
or
pop
adc
cmp
(bad)
(bad)
call
push
outs
lods
add
or
jnp
add
add
loop
add
sub
add
jae
add
push
adc
adc
outs
scas
add
or
sub
mov
sub
scas
add
or
or
or
sub
or
add
or
cmps
adc
add
js
add
outs
inc
add
or
add
add
or
add
or
cmps
adc
add
js
add
outs
inc
add
or
add
adc
adc
outs
mov
add
adc
push
adc
adc
outs
mov
add
adc
and
add
adc
popf
add
or
or
or
jp
add
adc
adc
adc
pop
fs
add
add
or
or
fs
inc
dec
add
add
jnp
add
add
repz
add
push
jae
add
push
adc
add
or
add
sub
add
adc
sub
add
outs
pop
add
or
sldt
add
sub
add
sub
or
(bad)
or
fs
add
adc
adc
pop
fs
cmp
fisttp
or
add
js
add
outs
mov
add
adc
mov
add
movs
add
push
adc
add
js
add
outs
mov
add
adc
mov
add
movs
add
movups
add
js
add
outs
mov
add
adc
mov
add
movs
add
adc
or
add
js
add
outs
mov
add
adc
mov
add
je
add
sbb
adc
or
push
adc
adc
sub
add
push
cmp
add
add
jnp
add
add
gs
add
sub
add
jae
add
push
adc
add
add
add
and
add
sub
add
adc
sub
add
outs
pop
add
or
jnp
add
add
cmp
add
sub
add
adc
sub
add
outs
pop
add
or
adc
sub
adc
adc
ds
add
add
add
add
cs
add
js
add
adc
sub
add
outs
pop
add
or
unpckhps
sbb
add
add
add
add
cs
add
sub
add
adc
sub
add
outs
pop
add
or
adc
das
push
adc
cmp
add
add
das
adc
call
jae
add
push
adc
enter
fld
add
add
fld
add
add
xor
pop
adc
adc
adc
mov
into
(bad)
(bad)
(bad)
fisttp
add
add
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
sub
mov
sar
(bad)
(bad)
fstp
add
add
sub
and
add
adc
adc
cmp
add
add
xor
add
or
fld
add
add
fld
add
add
sub
mov
add
cmp
std
(bad)
(bad)
fisttp
add
add
sub
push
sbb
sub
add
(bad)
sldt
add
sub
pop
add
add
sub
add
or
add
into
add
push
add
add
add
jbe
add
sub
add
jae
add
push
adc
add
add
add
adc
add
js
add
add
add
add
lea
add
adc
adc
sub
add
outs
pop
add
or
adc
add
jnp
add
add
adc
or
add
or
push
frstor
add
add
pop
pop
and
pop
outs
pop
add
or
and
pop
add
or
push
fld
add
add
jnp
add
add
push
adc
add
js
add
adc
outs
cmps
add
or
adc
adc
add
lea
add
aas
xchg
(bad)
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
add
or
add
add
add
mov
add
sub
add
jae
add
push
adc
jnp
add
add
adc
add
js
add
add
add
add
push
add
or
xor
add
or
add
or
adc
cmp
add
add
jnp
add
add
adc
sub
add
jae
add
push
adc
add
add
add
sbb
add
or
sbb
add
add
dec
cmp
cmp
add
adc
jnp
add
add
xchg
add
or
ds
add
and
add
dec
cmp
cmp
add
add
jnp
add
add
enter
sub
add
adc
jnp
add
add
pop
add
or
mov
add
add
dec
cmp
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
popf
push
add
sub
add
adc
jnp
add
add
pop
add
or
sldt
add
cmp
add
add
outs
sub
add
fcom
sbb
pop
adc
adc
add
add
add
push
add
or
ud0
(bad)
fisttp
add
add
xor
pop
add
add
xor
sub
add
(bad)
sldt
add
sbb
pop
add
add
sbb
add
or
add
add
add
mov
add
add
add
add
mov
add
add
cmp
add
add
add
add
jno
add
and
add
add
cmp
add
add
add
jnp
add
add
jae
add
or
add
or
add
add
cs
jmp
add
add
dec
cmp
dec
add
add
add
add
add
repnz
call
repnz
(bad)
cld
repnz
push
add
add
add
(bad)
add
push
cmp
(bad)
(bad)
jmp
add
add
add
add
add
or
add
add
push
add
add
cmp
add
add
add
add
add
add
add
add
repnz
add
add
push
add
add
add
add
add
add
add
repnz
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
test
add
rol
add
test
add
push
add
add
add
add
add
test
add
sldt
add
add
add
add
add
add
add
add
add
sldt
add
or
add
add
in
or
add
add
add
add
add
add
cmp
add
int
add
or
add
sldt
add
or
add
add
add
add
push
add
add
add
add
add
sti
pop
add
cmp
add
xor
add
sbb
add
cmps
pop
add
stos
add
add
add
push
add
add
add
add
add
cwde
pop
add
iret
add
add
add
push
add
add
add
add
add
add
add
add
add
sldt
add
or
add
add
add
or
add
add
add
add
add
add
cmps
or
add
or
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
pop
add
add
add
test
add
sldt
add
add
add
xor
add
add
add
add
add
pop
push
add
sub
add
jae
add
push
adc
push
or
cmp
in
add
outs
add
or
pop
jnp
add
add
pop
jnp
add
add
add
add
add
stos
push
add
sub
add
jae
add
push
adc
add
add
add
enter
sub
add
adc
sub
add
outs
pop
add
or
add
adc
add
js
add
pop
lea
add
add
adc
adc
pop
sub
adc
outs
sgdtd
or
adc
adc
cmp
adc
adc
adc
adc
and
add
add
js
add
sub
sbb
add
or
add
or
push
outs
dec
add
or
or
add
push
adc
add
adc
pop
adc
adc
adc
(bad)
dec
pop
outs
mov
adc
push
add
add
adc
adc
add
adc
adc
outs
jp
add
outs
jo
add
adc
adc
and
js
add
sub
push
add
add
or
fcom
add
sub
add
sub
or
add
push
adc
add
push
pop
pop
adc
adc
adc
(bad)
(bad)
call
add
add
outs
sbb
add
adc
add
add
dec
sbb
cmp
add
add
outs
jle
add
sub
push
add
add
add
add
add
dec
sbb
cmp
add
cmp
outs
add
or
sbb
add
or
and
push
add
sub
add
sub
cmp
jne
add
add
jae
add
cmp
add
add
add
add
dec
sbb
dec
add
add
add
add
sahf
(bad)
(bad)
call
add
sahf
(bad)
(bad)
(bad)
jnp
(bad)
(bad)
aas
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
dec
or
add
js
add
adc
mov
js
add
sub
add
adc
add
push
sbb
cmp
sbb
scas
add
add
js
add
adc
scas
add
add
js
add
sub
add
adc
fld
add
add
add
sbb
add
add
add
add
mov
js
add
adc
mov
pop
add
or
outs
jae
add
cmp
add
add
outs
je
add
sub
add
push
or
add
or
pop
add
add
jnp
add
add
push
add
sub
add
and
js
add
outs
pop
add
or
outs
jbe
add
cmp
add
add
jnp
add
add
jae
add
sub
add
and
js
add
outs
pop
add
or
outs
ja
add
cmp
add
je
add
add
or
jnp
add
add
adc
add
js
add
adc
outs
mov
pop
adc
sub
add
outs
pop
add
or
add
or
or
adc
cmp
add
add
or
or
add
adc
pop
sub
jnp
add
adc
adc
adc
outs
mov
mov
adc
pop
pop
adc
adc
adc
outs
mov
leave
(bad)
(bad)
inc
jnp
add
add
inc
adc
add
push
adc
outs
sbb
add
outs
pop
add
or
or
add
or
inc
test
add
adc
outs
rol
or
or
adc
add
or
add
add
or
adc
push
add
add
or
pop
adc
or
or
jae
add
push
adc
enter
fld
add
add
fld
add
add
or
adc
(bad)
(bad)
(bad)
cmp
add
add
sub
add
push
pop
jnp
add
add
cmp
add
adc
add
jne
add
add
adc
add
add
add
add
(bad)
push
add
sub
add
jae
add
push
adc
push
adc
or
add
outs
mov
add
adc
cmp
sbb
add
or
mov
add
add
push
sbb
cmp
add
adc
pop
pop
adc
and
push
sbb
cmp
add
adc
pop
adc
sub
add
add
add
add
movhps
add
js
add
jle
add
or
add
or
add
add
pop
cmp
add
add
cmp
add
add
movhps
add
push
adc
enter
cmp
add
add
push
sbb
dec
add
add
add
(bad)
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
mov
add
add
add
add
dec
sbb
cmp
(bad)
(bad)
call
sbb
add
or
dec
(bad)
(bad)
(bad)
fstp
add
add
sbb
add
add
sbb
sbb
pop
add
add
sbb
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
fld
add
add
fld
add
add
pop
sub
add
push
fisttp
add
add
adc
pop
add
add
adc
add
or
push
pop
pop
or
add
add
add
add
cli
(bad)
(bad)
fisttp
add
add
adc
pop
add
add
adc
add
or
sub
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
ins
add
add
add
add
sbb
add
js
add
jg
add
and
add
add
push
or
cmp
add
add
add
aas
out
add
add
add
add
jnp
add
add
ret
or
jnp
add
add
jecxz
add
adc
add
add
add
daa
add
add
add
push
or
cmp
add
add
jnp
add
add
outs
ret
add
or
and
add
add
loopne
add
sub
jnp
add
add
dec
adc
add
js
add
jae
add
push
adc
add
sbb
add
sub
add
sub
add
push
add
add
add
enter
sub
add
add
add
add
add
adc
sub
add
outs
pop
add
or
sldt
add
or
pop
add
add
or
add
or
add
add
add
outs
add
or
pop
add
add
push
or
cmp
add
push
adc
adc
add
push
or
cmp
add
cmp
(bad)
(bad)
call
add
add
les
add
cmp
add
add
sub
add
push
cmp
add
cmp
add
cmp
add
add
push
adc
call
or
add
or
add
or
fcom
add
sub
add
sub
pop
add
add
or
cwde
add
add
pop
pop
pop
adc
adc
adc
mov
mov
add
add
dec
or
cmp
add
add
pop
outs
mov
push
push
adc
cmp
add
add
dec
or
dec
add
add
add
add
add
(bad)
(bad)
jmp
jmp
(bad)
cmp
add
sar
dec
add
and
add
add
aad
(bad)
(bad)
(bad)
add
pop
outs
jno
add
cmp
add
add
outs
lds
add
cmp
dec
add
add
or
add
push
or
cmp
cmp
add
add
push
add
add
push
or
cmp
and
add
add
add
add
add
mov
add
push
jae
add
push
pop
sub
add
push
fld
add
add
fld
add
add
add
cmp
std
(bad)
jmp
add
add
dec
or
dec
add
add
add
std
(bad)
dec
(bad)
(bad)
(bad)
sti
std
(bad)
(bad)
sti
std
(bad)
(bad)
jp
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
inc
xor
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
sub
add
push
add
int
add
or
mov
add
or
add
or
add
push
add
add
outs
aas
add
or
ds
add
add
xor
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
push
or
cmp
(bad)
(bad)
dec
or
add
or
pop
outs
inc
add
or
add
add
add
dec
or
cmp
add
inc
add
or
fld
add
add
pop
and
pop
add
sub
add
pop
outs
pop
add
or
mov
pop
add
or
mov
add
push
adc
fst
add
and
add
add
js
add
and
add
sub
add
and
add
sub
add
jae
add
push
adc
sub
add
push
adc
frstor
add
add
push
adc
fst
add
add
push
add
push
jae
add
push
sub
add
push
push
adc
fld
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
cld
add
dec
add
add
add
add
add
add
adc
add
mov
add
adc
add
add
dec
add
cmp
add
add
add
add
and
push
add
cmp
add
or
add
add
or
add
or
add
add
push
cmp
add
add
push
pop
inc
fdivrp
(bad)
jmp
push
add
add
push
add
cmp
add
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
test
add
adc
add
add
sub
add
push
cmp
add
cmp
add
add
add
push
imul
add
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
add
add
cmp
(bad)
(bad)
inc
or
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
sub
add
push
cmp
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
add
xor
lods
add
add
add
push
add
cmp
add
add
add
add
or
add
or
jl
add
add
pop
sub
add
sub
cmp
add
and
push
add
dec
add
add
add
add
add
add
add
add
add
add
mov
(bad)
jmp
add
add
add
and
add
add
(bad)
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
inc
and
add
and
add
add
push
add
cmp
jnp
add
add
and
add
add
push
add
cmp
or
add
add
sub
add
push
cmp
sub
add
adc
add
fwait
add
add
add
add
cmp
add
add
add
add
and
add
add
cmp
add
es
or
add
push
add
cmp
add
add
jl
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
jmp
push
add
add
pop
add
add
add
push
dec
add
add
iret
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
pop
sub
or
sub
sbb
add
add
add
add
dec
add
add
add
add
or
add
add
add
add
dec
add
add
add
add
or
add
add
cmp
add
and
add
add
push
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
(bad)
inc
jle
add
or
add
add
push
jge
add
add
add
push
add
(bad)
inc
jae
add
or
add
sub
add
or
add
add
push
outs
enter
imul
jnp
add
add
xor
add
or
sbb
sbb
leave
add
or
pop
push
add
add
add
adc
add
or
add
or
or
cmp
add
add
outs
sub
add
fadd
sub
add
push
or
add
adc
fld
add
add
or
push
add
or
add
add
adc
add
adc
adc
pop
add
or
add
add
add
add
sub
add
sub
add
add
add
fild
or
add
in
add
add
or
add
add
pop
adc
adc
add
add
pop
sub
or
sub
add
jge
add
add
add
repz
add
or
sub
or
sub
add
add
add
xchg
add
or
inc
sub
push
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
or
sub
or
sub
outs
add
add
push
add
add
push
add
add
outs
jp
add
add
jecxz
add
sub
xor
add
add
adc
add
add
dec
add
cmp
add
add
add
add
push
add
cmp
add
add
sub
add
and
add
dec
add
cmp
add
add
jge
add
add
add
test
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
add
and
add
add
out
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
add
add
add
or
sub
or
sub
push
add
add
add
cmp
sub
add
or
add
add
add
add
pop
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
jnp
add
add
or
add
add
add
add
mov
adc
add
cwde
add
add
add
adc
add
add
dec
add
cmp
add
add
retf
or
data16
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
and
clc
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
add
pop
cmp
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
sti
add
add
push
add
add
(bad)
(bad)
(bad)
jmp
or
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
adc
add
add
sub
add
push
cmp
add
add
add
add
or
add
add
add
add
dec
add
cmp
pop
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
retf
or
add
add
add
add
cmp
sub
add
add
sub
add
add
sub
add
add
or
add
add
add
add
add
or
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
jle
add
or
adc
add
sub
add
add
add
push
add
or
adc
add
sub
adc
add
les
add
add
add
and
push
add
cmp
add
add
add
push
add
add
adc
add
cmp
add
add
add
or
add
add
add
add
push
cmp
add
add
retf
or
add
add
add
add
push
add
add
xchg
add
or
inc
cmp
add
add
jge
add
add
add
pop
add
add
sahf
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
dec
add
and
add
add
push
cmp
(bad)
(bad)
jmp
add
add
or
add
add
add
add
dec
add
cmp
or
sub
or
sub
sbb
pop
add
add
add
add
add
push
add
cmp
add
add
push
aas
inc
add
add
pop
add
add
cmp
add
add
add
je
add
sub
add
add
add
add
add
add
sbb
add
outs
retf
add
or
add
cmp
add
add
cmp
and
add
sub
add
pop
mov
cli
add
or
jnp
add
add
call
add
add
dec
add
cmp
add
add
or
or
add
sub
add
or
add
or
sub
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
or
jnp
add
add
call
dec
sbb
add
js
add
add
add
add
call
pop
add
add
sbb
add
outs
retf
add
or
push
add
add
fld
add
add
pop
pop
or
add
add
sub
add
push
cmp
push
or
daa
(bad)
(bad)
jmp
push
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
sar
(bad)
inc
and
js
add
add
add
add
add
add
sbb
add
outs
retf
add
or
and
js
add
add
add
add
add
add
sbb
add
outs
retf
add
or
jnp
add
add
or
jnp
add
add
imul
push
or
and
pop
add
sub
add
push
mov
add
sbb
add
outs
retf
add
or
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
add
ins
add
add
add
xor
add
add
cmp
add
and
add
add
push
add
cmp
add
add
and
js
add
outs
int3
add
or
add
add
add
mov
js
add
outs
int3
add
or
add
add
and
pop
add
sub
add
outs
int3
add
or
add
lea
add
jge
add
add
test
add
and
add
add
push
add
dec
add
add
add
add
xor
add
or
add
push
add
add
add
xor
add
cmp
push
add
add
cmp
(bad)
(bad)
jmp
add
sbb
add
and
mov
push
aas
aaa
add
add
pop
add
add
push
add
cmp
add
je
add
sub
add
outs
int3
add
or
add
add
push
add
add
cmp
push
or
ret
inc
jnp
add
add
add
and
add
sub
add
pop
mov
cli
add
or
pop
add
add
sbb
add
outs
int
add
mov
add
add
add
add
and
add
sub
add
mov
add
pop
pop
or
add
add
pop
cmp
(bad)
(bad)
jmp
sub
add
add
add
call
sbb
add
adc
add
fwait
add
add
add
adc
add
add
dec
add
cmp
add
add
jge
add
add
add
cmp
add
add
sbb
add
and
add
dec
add
cmp
add
add
add
sgdtd
add
push
add
add
push
add
cmp
push
add
adc
add
add
add
xlat
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
pop
sub
or
sub
push
add
sbb
add
sub
add
sbb
add
sub
add
sub
add
or
sub
add
push
sub
cmp
add
iret
add
or
sub
add
push
sub
cmp
add
rol
add
add
in
add
push
sub
adc
add
js
add
add
add
and
add
add
push
add
cmp
add
add
sub
add
or
add
add
cmp
add
add
push
sub
add
or
add
push
add
cmp
sbb
inc
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
or
sub
or
sub
push
add
rol
add
sub
add
sub
add
or
outs
dec
add
or
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
or
jnp
add
add
rol
add
add
les
add
and
add
add
add
sub
add
or
sub
add
or
jnp
add
add
rol
add
pop
outs
mov
add
iret
add
or
add
add
xor
mov
add
add
add
and
add
add
push
add
cmp
add
add
jge
add
add
add
add
sub
add
push
cmp
add
add
add
add
or
add
or
add
push
add
cmp
add
sbb
add
add
aad
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
and
add
add
cmp
add
add
add
xlat
add
or
sbb
add
add
imul
add
js
add
sub
add
jge
add
add
pop
jge
add
add
jnp
add
add
pop
add
add
add
add
cmp
add
add
add
(bad)
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
pop
add
add
add
xor
add
cmp
add
add
add
add
add
jnp
add
add
xchg
add
or
cmp
add
rol
add
cmp
sub
add
or
jg
add
sub
add
add
add
add
inc
or
add
js
add
sub
add
outs
lds
add
sub
jnp
add
add
push
add
or
add
or
pop
add
add
push
add
cmp
add
add
add
add
outs
(bad)
(bad)
inc
outs
fadd
add
add
add
add
push
and
add
add
add
sub
add
or
add
add
sbb
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fld
add
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
push
add
add
push
add
cmp
(bad)
(bad)
jmp
add
adc
add
xor
add
add
add
and
add
add
cmp
add
add
add
mov
jnp
add
add
fiadd
add
add
adc
add
pop
sub
add
or
add
add
dec
add
cmp
jae
add
or
add
add
add
push
add
cmp
jae
add
or
add
add
push
add
add
xor
add
cmp
add
cmp
add
add
jge
add
add
jle
add
or
add
add
and
add
add
and
add
add
sub
add
or
jnp
add
add
cli
add
add
add
or
jnp
add
add
inc
das
add
push
jae
add
or
add
or
jnp
add
add
outs
inc
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
(bad)
jmp
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
add
or
pop
add
add
xor
add
cmp
mov
(bad)
jmp
add
add
sub
add
add
add
add
sub
add
add
jge
add
sub
add
or
add
adc
add
mov
add
adc
add
add
dec
add
cmp
add
add
add
add
add
add
add
add
dec
add
cmp
add
add
push
add
add
add
push
add
cmp
add
loope
add
and
add
add
sub
add
add
add
add
loop
add
add
add
add
jecxz
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
add
inc
jge
add
add
outs
dec
add
or
add
pop
sub
or
sub
push
add
add
add
adc
add
fadd
add
test
add
and
add
add
cmp
add
jge
add
add
add
add
cmp
xor
add
add
test
add
sub
add
sub
add
jge
add
add
and
add
add
xchg
sbb
add
js
add
sub
add
jge
add
add
pop
add
add
adc
sbb
outs
dec
add
or
push
add
add
aas
add
add
jnp
add
add
cmp
add
and
add
add
sub
add
add
add
add
push
pop
pop
inc
add
add
mov
(bad)
jmp
jle
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
jmp
xor
jnp
add
add
rol
add
sub
add
add
add
add
outs
lds
add
sub
add
add
add
add
cmp
add
add
add
outs
dec
add
or
add
xor
add
add
add
add
adc
push
add
add
inc
add
push
cmp
add
add
add
in
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
imul
add
and
push
add
cmp
(bad)
(bad)
inc
adc
sbb
add
jnp
add
add
adc
add
add
add
add
loop
add
add
add
sub
add
or
pop
add
add
push
add
cmp
jnp
add
add
ret
(bad)
(bad)
inc
jnp
add
add
loop
add
and
add
add
cmp
(bad)
jmp
add
ret
(bad)
(bad)
jmp
add
add
pop
cmp
(bad)
jmp
add
add
add
sar
jmp
add
add
dec
add
cmp
(bad)
jmp
add
add
or
add
add
add
add
jnp
add
add
add
push
inc
add
add
add
sub
add
or
add
jo
add
add
add
sub
add
or
sub
add
or
add
mov
jnp
add
add
sub
add
or
sub
add
or
add
nop
inc
add
add
add
sub
add
or
mov
add
iret
add
or
add
add
xor
test
add
add
add
and
add
dec
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
and
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
add
xor
add
add
add
add
add
sub
add
push
cmp
add
add
add
add
or
in
add
push
add
out
add
or
add
dec
add
or
pop
add
out
add
or
add
out
add
add
out
add
or
add
or
pop
outs
call
outs
fadd
add
sub
add
or
add
out
add
adc
add
dec
add
or
pop
add
out
add
adc
add
or
sub
add
or
push
adc
sub
add
pop
pop
outs
call
add
add
cmp
add
add
add
mov
add
and
add
add
cmp
adc
add
out
add
adc
adc
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
xor
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
retf
or
jnp
add
add
cmp
inc
outs
fadd
add
add
add
add
push
push
pop
and
and
add
or
outs
fld
add
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
add
push
or
cmp
(bad)
(bad)
inc
outs
fadd
add
add
add
add
outs
jmp
add
add
cdq
add
add
outs
fadd
add
add
add
add
add
jmp
add
and
add
add
add
add
sub
add
or
add
in
add
or
add
inc
inc
add
add
add
sub
add
or
add
add
pop
add
add
sub
add
or
add
add
and
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fld
add
and
add
add
push
or
cmp
(bad)
(bad)
inc
add
(bad)
add
or
add
add
dec
or
cmp
(bad)
(bad)
jmp
add
xor
sub
add
add
add
add
add
add
outs
rol
add
pop
jae
add
or
add
or
add
in
add
or
push
add
add
fld
add
add
add
add
add
add
add
and
add
or
add
sbb
add
sub
add
add
add
and
add
add
push
add
cmp
add
add
add
add
outs
inc
add
add
add
add
outs
rol
add
pop
jae
add
or
add
or
push
add
add
fld
add
add
sub
jnp
add
add
fiadd
add
add
out
add
or
add
or
push
sub
add
or
jg
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
dec
add
data16
add
add
cmp
add
xchg
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
add
and
add
add
sub
add
or
add
add
dec
add
cmp
jae
add
or
add
add
add
add
cmp
pop
outs
cld
add
or
pop
cmp
rol
add
and
jne
(bad)
inc
and
sub
add
sub
add
or
sub
add
jge
add
add
jle
add
or
add
or
pop
add
add
cmp
(bad)
jmp
sub
add
add
add
push
add
add
or
add
dec
add
cmp
jnp
add
add
outs
lds
add
sub
pop
sub
or
sub
(bad)
add
add
loopne
add
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
or
mov
add
iret
add
or
add
adc
add
mov
add
add
add
and
add
add
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
or
add
or
add
cmp
add
add
add
add
add
aad
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
add
add
pop
cmp
add
add
jo
add
and
add
add
push
add
cmp
add
add
jnp
add
add
jecxz
add
add
add
add
dec
add
add
jnp
add
add
jecxz
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
add
loope
add
and
add
add
push
add
cmp
jnp
add
add
mov
(bad)
jmp
add
add
dec
add
cmp
add
add
xor
add
add
add
add
and
js
add
sub
fld
add
add
fld
add
add
add
add
add
add
adc
add
add
xor
add
add
and
add
add
push
add
cmp
add
add
sub
or
add
dec
add
cmp
add
add
add
push
inc
add
push
jae
add
or
mov
add
add
icebp
add
or
add
or
add
add
or
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
jnp
add
add
jnp
add
add
call
add
outs
repz
or
push
add
add
inc
add
push
cmp
xchg
(bad)
(bad)
inc
jae
add
or
add
add
pop
add
add
push
add
cmp
(bad)
inc
jnp
add
add
sbb
add
js
add
outs
lds
add
add
add
add
xchg
sbb
add
js
add
sub
add
outs
cmc
add
or
jnp
add
add
dec
push
jae
add
or
add
or
jnp
add
add
and
and
add
or
add
or
jnp
add
add
outs
test
or
jnp
add
add
inc
inc
add
push
jae
add
or
add
or
jnp
add
add
inc
inc
add
push
jae
add
or
add
or
add
add
cmp
(bad)
(bad)
inc
push
sub
add
or
pop
jo
and
add
or
mov
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
outs
mov
jnp
add
add
and
js
add
outs
repz
or
jnp
add
add
jnp
add
add
call
add
outs
repz
or
or
add
dec
add
cmp
(bad)
inc
jae
add
or
add
add
and
add
add
and
add
add
sub
add
or
sub
jnp
add
add
outs
inc
add
add
add
add
pop
or
add
or
add
or
jnp
add
add
ds
sbb
add
or
add
or
add
push
add
cmp
std
(bad)
inc
jae
add
or
add
add
add
add
dec
add
cmp
std
(bad)
jmp
add
add
pop
sub
or
sub
adc
add
xchg
add
add
add
and
add
dec
add
cmp
add
add
sub
add
or
ins
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
clc
add
or
add
add
dec
add
cmp
sub
add
or
movs
add
push
and
push
add
cmp
add
(bad)
add
add
jp
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
mov
add
iret
add
or
add
adc
add
mov
add
add
add
and
add
dec
add
cmp
add
das
add
add
add
aad
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
jle
add
or
add
or
add
push
add
push
cmp
add
jge
add
add
add
add
sub
add
cmp
sub
add
adc
add
cmps
add
add
add
adc
add
add
push
cmp
add
add
add
add
add
loop
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
and
add
add
dec
add
push
cmp
(bad)
(bad)
jmp
add
add
add
and
add
and
add
dec
add
cmp
cmp
add
add
add
push
add
cmp
jnp
add
add
jecxz
add
add
sub
add
or
push
add
add
cmp
sub
add
xor
add
add
adc
add
add
cmp
add
add
add
add
dec
add
add
outs
fadd
add
add
add
add
push
and
add
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
push
and
add
add
sub
add
or
outs
fld
add
add
add
add
pop
add
add
add
add
dec
add
cmp
add
add
add
(bad)
add
or
add
aad
add
add
add
or
jnp
add
add
jnp
add
add
pop
imul
add
add
sub
add
or
add
add
das
add
add
sub
add
or
add
and
jnp
add
add
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
or
push
pop
sub
or
outs
cli
add
or
push
add
add
push
add
cmp
add
add
add
add
add
fadd
add
and
add
inc
add
add
add
sub
add
or
and
add
add
add
sub
add
or
add
or
jnp
add
add
sub
add
or
add
or
add
or
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
stc
(bad)
(bad)
(bad)
jge
(bad)
dec
add
and
add
add
aad
(bad)
jmp
add
add
xor
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
mov
add
inc
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
jge
add
add
outs
dec
add
or
add
cmp
add
add
or
sub
add
add
add
dec
add
cmp
add
adc
add
add
add
add
adc
add
add
dec
add
cmp
add
add
push
sub
add
or
and
sub
add
sub
add
or
pop
add
add
push
add
cmp
add
add
pop
arpl
add
add
add
add
dec
add
cmp
and
js
add
sub
add
jge
add
add
and
sbb
add
js
add
sub
add
jge
add
add
add
push
add
cmp
add
add
cli
add
add
sub
add
or
mov
add
add
dec
add
cmp
add
add
add
or
add
add
and
add
add
and
add
add
sub
add
or
jnp
add
add
push
outs
fiadd
add
add
add
add
inc
dec
add
push
jae
add
or
add
or
nop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jle
(bad)
call
(bad)
dec
add
add
push
add
add
push
add
cmp
(bad)
(bad)
jmp
add
or
sub
or
sub
adc
add
stos
add
add
add
push
add
cmp
add
add
jl
add
add
pop
sub
add
sub
push
pop
inc
pop
add
add
push
add
add
push
add
cmp
add
add
add
add
or
add
or
retf
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
or
add
add
sub
push
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
and
add
add
push
add
cmp
add
xor
mov
add
adc
add
add
dec
add
cmp
add
add
add
push
dec
add
add
arpl
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
dec
add
cmp
or
add
add
push
cmp
add
add
pop
sub
add
sub
push
pop
inc
fcos
(bad)
jmp
push
add
add
mov
(bad)
jmp
add
xor
mov
add
adc
add
add
dec
add
cmp
add
add
add
pop
sub
add
sub
push
pop
inc
push
add
add
push
add
add
push
add
cmp
add
add
or
add
add
dec
add
cmp
add
add
add
add
or
add
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
add
aad
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
add
adc
add
popf
add
add
add
and
add
add
push
add
cmp
add
add
add
pop
sub
add
sub
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
sar
inc
pop
inc
push
add
add
push
add
add
push
add
cmp
or
add
push
jo
add
or
add
add
cmp
add
add
xor
add
add
xchg
add
and
add
dec
add
cmp
add
push
outs
ret
or
jge
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
std
add
add
or
add
add
outs
ret
or
in
add
cmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
dec
add
add
add
sar
(bad)
(bad)
jle
add
add
mov
add
and
add
add
mov
or
add
outs
cld
add
or
push
or
push
add
add
push
add
cmp
pop
sub
add
or
add
xor
add
add
add
sub
push
cmp
add
add
sbb
add
jle
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
frstor
add
add
push
add
add
fld
add
add
pop
pop
or
pop
mov
cli
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
add
add
add
mov
push
or
add
sbb
add
add
outs
inc
add
or
add
add
cmp
outs
jo
add
and
sbb
add
js
add
sub
add
add
outs
mov
add
and
sbb
add
js
add
sub
sbb
add
pop
and
sbb
add
js
add
outs
mov
add
push
outs
mov
add
je
add
add
push
jne
add
add
lea
add
jle
add
add
mov
add
sub
add
sub
je
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
sub
push
cmp
(bad)
(bad)
jmp
push
outs
pop
add
or
and
add
add
push
add
cmp
push
jne
add
add
pop
add
push
cmp
add
add
add
mov
adc
add
add
pop
push
sub
add
fld
add
add
fld
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
inc
add
jne
add
add
adc
add
and
add
add
push
add
cmp
add
(bad)
outs
inc
add
jne
add
add
pop
add
and
add
pop
cmp
add
es
add
add
mov
add
sub
add
sub
retf
(bad)
(bad)
inc
add
inc
add
jne
add
add
pop
add
push
cmp
stos
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
inc
add
je
add
add
add
add
push
inc
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
mov
add
sbb
add
or
add
xor
add
add
adc
add
add
sub
add
cmp
add
sub
add
or
push
add
add
cmp
add
add
push
jnp
add
add
add
add
push
sub
jnp
add
add
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
xor
add
and
add
cmp
(bad)
(bad)
inc
push
outs
push
add
push
and
add
add
cmp
(bad)
(bad)
jmp
add
add
push
or
add
push
add
cmp
sub
xor
add
add
mov
add
and
add
dec
or
cmp
outs
jo
add
and
sbb
add
js
add
sub
pop
add
add
outs
mov
add
and
sbb
add
js
add
sub
aas
add
add
and
sbb
add
js
add
outs
mov
add
add
add
or
add
adc
and
push
or
cmp
add
add
add
or
push
and
add
add
sub
add
adc
and
sbb
add
js
add
outs
or
add
cmp
xor
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
and
add
add
(bad)
(bad)
call
push
and
add
sub
add
outs
dec
add
or
pop
add
add
add
add
js
add
outs
xchg
add
and
js
add
outs
add
add
outs
add
add
adc
outs
add
add
adc
and
add
cmp
pop
outs
jp
add
and
add
push
push
lea
add
add
add
or
pop
adc
add
add
fld
add
add
fld
add
add
or
pop
adc
adc
adc
mov
std
add
add
pop
add
add
push
or
cmp
add
add
jne
add
add
add
add
sub
outs
pop
add
push
add
jnp
add
add
mov
add
push
pusha
add
push
jae
add
push
outs
mov
add
or
inc
pop
add
push
jae
add
or
add
push
or
inc
pop
add
push
jae
add
push
outs
rol
add
or
jae
add
push
or
push
cmp
add
add
pop
jge
add
add
cmp
add
add
push
jge
add
add
push
jge
add
add
push
add
add
add
add
add
push
add
add
push
jge
add
add
pop
jge
add
add
or
add
push
or
add
add
inc
or
sbb
add
fst
add
adc
adc
call
push
add
push
fld
add
add
cmp
add
or
add
or
or
adc
cmp
(bad)
(bad)
call
or
or
add
add
push
or
cmp
add
add
outs
pop
add
or
and
add
add
push
or
cmp
add
add
or
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
jmp
std
(bad)
jmp
(bad)
jmp
add
add
push
add
add
arpl
add
cmp
(bad)
(bad)
jmp
and
inc
loopne
push
add
or
add
add
fstp
add
add
and
inc
loopne
pop
add
or
push
add
add
fld
add
add
add
add
sub
inc
add
add
je
scas
and
push
dec
add
add
add
sub
adc
add
add
add
(bad)
inc
add
or
add
add
in
pmuludq
push
or
add
add
rol
adc
add
or
add
and
add
push
add
push
sub
add
adc
add
ja
add
push
add
adc
add
add
cmp
add
add
add
add
and
add
sub
add
cmp
add
add
push
add
je
add
and
sbb
add
push
cmp
jecxz
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
jge
add
dec
add
adc
add
add
dec
add
cmp
add
add
add
or
add
and
push
add
cmp
add
add
jnp
add
add
and
add
dec
add
cmp
add
push
cmp
retf
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
sbb
add
sub
add
js
add
sub
add
or
and
js
add
xor
add
add
add
pop
sub
or
sub
adc
add
cdq
add
add
add
adc
add
add
dec
add
cmp
add
jle
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
retf
(bad)
(bad)
dec
add
add
add
and
add
add
fcos
(bad)
inc
sub
add
or
add
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
jle
add
add
mov
add
sub
add
sub
add
sub
add
or
and
jne
add
or
add
and
cmp
sub
add
adc
push
add
add
add
adc
and
sbb
add
js
add
pop
lea
add
or
push
add
add
push
call
adc
add
mov
add
mov
add
and
add
add
push
add
cmp
add
add
jne
add
add
pop
cmp
add
cmp
add
add
add
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
dec
add
and
add
cmp
add
and
add
pop
cmp
(bad)
(bad)
jmp
add
sub
and
add
add
push
add
cmp
outs
push
add
or
outs
lar
or
add
push
add
cmp
sub
pop
sub
or
sub
adc
add
lea
add
add
add
and
add
dec
add
cmp
add
add
and
sbb
add
js
add
sub
add
sub
add
or
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
mov
add
or
add
cmp
add
or
add
and
add
add
push
add
cmp
add
add
xor
add
add
add
add
adc
and
sbb
add
js
add
sbb
or
push
add
push
sbb
add
push
sbb
add
add
or
call
add
adc
add
nop
add
add
add
add
sub
add
cmp
add
add
sbb
add
push
jne
add
add
cmp
add
add
add
dec
add
dec
add
add
add
add
retf
dec
add
and
add
retf
inc
add
add
add
push
cmp
(bad)
(bad)
jmp
add
sub
and
add
dec
add
cmp
cmp
add
pop
outs
push
add
or
outs
lar
or
add
outs
add
push
cmp
push
sub
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
push
sbb
add
js
add
xor
add
add
add
pop
sub
or
sub
sbb
add
out
add
or
add
and
add
add
cmp
add
add
jle
add
add
retf
add
add
add
sub
add
cmp
add
add
jg
add
add
adc
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
(bad)
jg
add
add
add
add
sbb
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
add
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
pop
cmp
add
fld
add
add
add
add
add
add
add
add
data16
push
or
add
sbb
add
sub
add
mov
add
adc
(bad)
adc
adc
sub
add
adc
jnp
add
add
or
add
fisttp
add
add
push
or
add
add
pop
sub
add
adc
add
add
add
and
or
add
sbb
add
sbb
add
adc
pop
sub
add
push
push
inc
push
inc
or
or
add
es
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
cmp
jae
add
jnp
add
add
inc
sub
sub
add
jnp
add
add
push
add
sbb
add
sub
pop
sub
or
sub
adc
add
sahf
add
add
add
adc
add
add
dec
add
cmp
add
add
(bad)
sub
add
or
add
add
(bad)
sub
add
or
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
jl
add
cmp
(bad)
(bad)
jmp
add
add
adc
add
jge
add
add
add
add
sub
add
cmp
add
add
jmp
add
jge
add
add
add
cmp
sub
add
pop
sub
or
sub
adc
add
add
add
and
add
add
cmp
add
add
add
sbb
add
and
add
add
push
add
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
add
add
sub
aam
(bad)
jmp
add
add
add
outs
adc
add
and
push
add
cmp
add
add
add
add
add
adc
add
sub
add
or
sub
or
sub
adc
add
in
add
lea
add
and
add
add
push
add
cmp
add
push
outs
adc
add
pop
inc
leave
add
add
jnp
add
add
and
push
add
cmp
add
add
or
and
add
cmp
add
push
and
add
sub
add
outs
push
add
or
and
sbb
add
js
add
outs
pop
add
or
add
add
dec
add
cmp
add
add
and
add
js
add
outs
sbb
add
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
jnp
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
push
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
push
outs
sbb
add
or
pop
sub
add
push
add
sbb
add
and
add
add
lods
(bad)
(bad)
jmp
sbb
add
movs
add
add
add
adc
jnp
add
add
outs
std
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
outs
std
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
std
add
or
jnp
add
add
and
add
and
add
sub
mov
(bad)
jmp
add
push
mov
add
jae
add
or
sub
add
push
fld
add
add
fld
add
add
add
add
add
add
popf
popf
add
or
add
push
add
sbb
add
sub
xor
add
add
add
add
add
jnp
add
add
or
add
add
add
add
sbb
add
fld
add
add
fld
add
add
sub
add
or
add
add
add
add
sbb
add
or
add
push
add
sbb
add
sub
jnp
add
add
jnp
add
add
sbb
add
jge
add
add
sbb
push
add
add
add
add
adc
add
push
mov
add
jae
add
push
sbb
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
dec
add
add
xor
add
add
add
add
adc
add
push
mov
add
jae
add
or
lea
add
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
dec
add
add
xor
add
add
adc
add
add
pop
cmp
add
add
add
add
push
add
add
add
add
dec
add
cmp
add
add
sub
add
or
add
cmp
add
add
add
add
add
pop
add
or
(bad)
(bad)
inc
jnp
add
add
sbb
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
push
cmp
(bad)
(bad)
jmp
sub
adc
add
xor
add
adc
pop
add
add
push
add
cmp
add
add
add
push
add
add
xchg
add
add
add
add
jnp
add
add
and
add
push
pop
outs
std
add
or
outs
and
add
and
add
add
push
add
cmp
aaa
add
or
add
or
or
add
add
add
add
push
add
add
jnp
add
add
add
add
pop
pop
pop
inc
add
add
mov
(bad)
jmp
add
add
add
add
add
add
pop
cmp
add
sub
jnp
add
add
sbb
add
and
xchg
add
push
cmp
add
es
pop
outs
std
add
or
outs
and
add
sub
jnp
add
add
sbb
add
add
add
add
mov
add
add
dec
add
cmp
outs
and
add
cmp
pop
add
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
add
test
add
add
(bad)
call
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
jnp
add
add
outs
std
add
or
add
add
add
outs
std
add
or
jnp
add
add
sbb
add
add
add
add
sbb
add
add
add
add
outs
inc
add
add
add
add
and
add
add
add
add
outs
inc
add
and
add
add
push
add
cmp
(bad)
jmp
add
add
add
mov
add
push
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
and
add
push
pop
outs
std
add
or
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
jb
(bad)
jmp
or
add
dec
add
cmp
jnp
add
add
mov
add
push
add
add
mov
(bad)
inc
jnp
add
add
outs
std
add
or
jnp
add
add
jnp
add
add
and
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
add
add
add
sbb
add
sub
xor
add
add
add
add
adc
add
push
add
cmp
add
add
add
add
std
add
push
add
add
add
cmps
add
add
ins
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
std
add
or
jnp
add
add
std
add
push
add
add
add
std
add
push
and
add
dec
add
cmp
inc
mov
add
jae
add
or
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
(bad)
jmp
add
add
add
add
xor
add
sub
add
add
pop
add
add
jnp
add
add
push
test
push
jae
add
or
sub
add
push
sub
xor
add
add
adc
or
cmp
add
add
add
sub
add
or
cld
add
add
inc
add
add
add
push
mov
add
jae
add
or
add
push
add
add
add
outs
std
add
or
jnp
add
add
ret
add
or
jnp
add
add
and
add
cmp
add
add
jnp
add
add
outs
std
add
or
std
add
add
sub
add
add
add
add
outs
inc
add
add
add
add
and
add
cmp
add
add
add
add
and
add
add
inc
mov
add
jae
add
push
outs
push
add
push
and
add
add
push
add
add
and
sbb
add
js
add
jae
add
push
jge
add
add
and
sbb
add
js
add
jae
add
push
jge
add
add
and
add
sub
add
jae
add
push
jge
add
add
jae
add
or
add
add
add
add
sub
test
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
and
js
add
jae
add
push
jge
add
add
add
push
add
cmp
jae
add
or
add
add
add
add
push
cmp
add
add
or
add
add
and
sbb
add
js
add
and
add
js
add
sub
add
or
add
push
jge
add
add
and
js
add
and
add
js
add
and
sldt
sub
add
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
mov
add
and
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
outs
(bad)
(bad)
dec
std
(bad)
jmp
add
inc
add
add
add
test
add
and
add
add
add
add
add
add
or
add
dec
add
cmp
jae
add
or
add
add
or
add
push
cmp
add
add
or
add
add
jae
add
or
add
add
or
add
cmp
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
sub
add
or
sub
add
push
and
add
sub
cmp
(bad)
jmp
push
add
add
add
aam
add
pop
or
add
aam
add
ds
(bad)
jmp
push
add
add
push
(bad)
(bad)
inc
add
pop
add
add
jnp
add
add
jnp
add
add
pop
add
or
add
or
add
add
add
aam
add
add
daa
add
or
or
inc
add
lods
(bad)
(bad)
inc
jnp
add
add
outs
std
add
or
or
add
push
cmp
(bad)
(bad)
jmp
add
aam
add
or
add
add
dec
add
cmp
add
pop
sub
or
sub
push
add
sbb
add
sub
jnp
add
add
jge
add
add
sub
add
or
dec
add
add
add
jge
add
add
sub
add
or
adc
add
inc
add
add
add
add
cmp
add
add
inc
add
push
sub
add
or
and
add
js
add
outs
lds
add
and
add
add
push
add
cmp
add
push
and
js
add
outs
push
add
or
push
add
add
add
pop
add
or
add
or
add
add
add
outs
sbb
add
outs
lds
add
add
add
add
sub
add
pop
cmp
or
add
sub
add
or
add
dec
add
or
mov
add
add
sub
add
or
add
or
jae
add
or
xor
add
and
add
add
push
add
cmp
add
add
jae
add
push
jge
add
add
add
add
dec
add
cmp
jnp
add
add
or
add
add
add
add
outs
std
add
or
jnp
add
add
xchg
add
or
ds
add
add
jnp
add
add
jnp
add
add
lds
add
cmp
(bad)
push
add
or
push
and
add
sub
add
and
add
js
add
sub
add
or
add
or
add
add
add
or
(bad)
jmp
or
add
sub
xor
add
add
add
or
add
or
ja
add
add
pop
sbb
add
push
outs
lds
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
add
add
add
add
add
add
dec
add
cmp
sub
add
push
and
add
add
cwde
add
push
cmp
add
add
add
add
push
add
cmp
jae
add
or
add
add
jae
add
or
add
add
and
sbb
add
js
add
and
add
js
add
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
or
or
add
dec
add
cmp
(bad)
(bad)
jmp
or
sub
or
sub
sbb
add
and
add
nop
add
adc
jae
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
adc
add
add
add
add
sbb
add
and
add
xchg
add
adc
add
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
add
add
or
or
add
mov
add
sbb
add
and
add
sub
add
and
add
js
add
sub
add
or
pop
adc
sub
add
sub
sbb
pop
add
add
adc
add
push
sub
add
push
pop
or
add
rcl
add
sub
add
or
jbe
add
sub
add
and
add
add
adc
sub
fld
add
add
fld
add
add
(bad)
pop
add
sub
add
and
add
js
add
sub
add
or
push
push
jae
add
push
jae
add
push
or
pop
outs
mov
sub
add
(bad)
add
add
outs
sbb
add
and
add
sub
add
and
add
js
add
sub
add
or
pop
adc
sub
add
fld
add
add
or
add
sub
sub
add
add
add
cmp
push
rol
add
add
adc
addr16
cs
add
add
add
adc
add
push
add
popa
add
push
sub
pop
sub
or
sub
push
add
push
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
pushf
aas
add
and
jb
outs
addr16
add
add
cmps
add
pop
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
and
add
inc
ins
outs
bound
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
dec
add
add
add
add
add
or
push
add
cmp
push
add
or
push
add
cmp
push
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
int3
add
add
add
sbb
push
add
or
push
add
or
push
add
or
push
add
add
push
add
test
push
add
add
push
add
sbb
push
add
add
add
add
stos
add
add
add
add
call
add
add
add
add
add
add
add
pop
fild
push
add
dec
or
add
or
sbb
or
or
add
add
add
add
or
add
add
pop
or
add
add
add
or
push
add
or
push
add
add
add
push
or
sahf
or
or
push
add
mov
or
or
fisttp
out
push
add
(bad)
add
add
(bad)
add
add
nop
push
add
(bad)
add
add
lsl
push
add
adc
add
push
add
add
adc
push
add
adc
adc
add
add
add
mov
push
add
add
add
adc
adc
add
push
add
or
push
add
mov
push
add
mov
push
add
mov
push
add
adc
or
push
add
add
add
add
or
push
add
add
add
adc
adc
push
push
add
push
sbb
push
add
adc
adc
add
add
adc
add
add
adc
retf
adc
in
adc
adc
daa
add
add
push
sub
push
daa
add
add
push
push
add
push
sub
adc
or
add
pop
or
push
add
add
add
add
or
or
ins
pop
out
push
add
add
add
add
pop
xchg
pop
add
sbb
add
add
sbb
push
add
sbb
add
add
sbb
sbb
sbb
sbb
push
add
add
sbb
push
add
sbb
mov
push
add
sbb
sbb
sbb
push
add
sbb
sbb
test
push
add
sbb
add
add
add
sbb
push
push
add
sbb
add
add
sbb
sbb
jbe
xchg
sbb
sbb
push
add
sbb
add
add
or
push
add
or
add
add
repz
and
or
push
add
test
push
add
daa
add
add
add
push
or
push
add
pop
sbb
push
add
pop
sbb
push
add
or
push
add
dec
and
push
add
pop
and
add
add
and
daa
add
add
daa
add
add
add
push
add
stos
add
add
add
fldenv
add
sbb
mul
xchg
push
add
or
push
add
adc
add
and
sub
push
add
sub
push
add
sub
sub
push
xchg
add
add
out
push
sub
add
add
add
push
add
add
sub
add
add
sub
push
push
add
sub
and
js
stos
add
add
test
push
add
add
test
push
add
test
push
add
fdiv
mov
push
add
mov
sbb
shl
xchg
push
add
xor
add
add
xor
push
add
sbb
sbb
call
add
xor
or
add
xchg
sbb
imul
push
add
add
xor
add
add
xor
add
add
xor
add
add
add
xor
or
or
push
add
stos
add
add
stos
add
add
ss
push
add
aaa
cmp
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
cmp
cmp
add
cmp
sbb
xor
dec
cmp
jge
mov
push
add
add
(bad)
cmp
fnstsw
lock
or
daa
add
add
ds
add
add
or
push
add
add
add
or
push
add
add
add
add
ds
or
add
ds
or
add
ds
or
add
aas
dec
or
add
aas
mov
push
aas
test
push
add
cmp
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jae
jbe
xor
add
add
add
add
cmp
add
push
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
or
inc
add
add
add
add
inc
add
add
add
add
add
add
adc
xor
adc
dec
add
add
add
add
inc
add
add
or
add
pop
add
add
sbb
dec
add
add
add
add
dec
add
add
or
add
ins
add
add
daa
add
add
add
jo
add
inc
add
add
add
add
je
add
inc
add
add
add
add
dec
add
add
or
add
jl
add
dec
add
add
or
add
add
add
cmp
add
add
inc
add
or
add
mov
add
dec
add
add
add
add
inc
add
or
add
nop
add
add
inc
add
or
add
xchg
add
add
dec
add
or
add
cwde
add
add
dec
add
or
add
pushf
add
add
pop
add
add
add
mov
add
pop
add
add
add
pop
add
add
add
test
add
inc
add
popa
add
add
add
pop
add
add
add
mov
add
inc
add
imul
mov
add
inc
add
ins
add
add
add
add
jno
add
add
mov
add
jne
add
add
rol
add
pop
add
add
add
les
add
inc
add
jge
add
add
enter
inc
add
add
int3
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
add
popf
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
adc
out
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
pop
add
add
adc
inc
add
dec
add
arpl
add
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
jb
add
adc
daa
add
add
add
jae
add
add
sub
pop
add
bound
js
add
add
das
add
add
add
js
add
adc
aaa
add
add
imul
add
add
add
add
add
imul
add
add
add
add
dec
add
jg
add
add
inc
add
add
add
add
add
add
xor
ins
add
add
add
xor
jnp
test
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
xchg
add
add
add
xor
cwde
add
add
add
xor
cmps
add
add
add
xor
scas
add
add
add
xor
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
repnz
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
stos
add
add
add
add
add
add
add
add
add
stos
add
or
push
add
and
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
stos
add
adc
sbb
add
adc
das
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
adc
ins
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
adc
js
and
add
add
add
adc
fiadd
add
add
add
add
adc
jmp
stos
add
add
add
add
adc
dec
add
add
or
add
add
cmp
jnp
or
add
add
inc
add
or
adc
test
add
add
adc
sti
add
add
add
jle
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
jno
xchg
add
add
add
add
jno
xchg
add
add
add
add
ja
cdq
add
add
add
add
ja
mov
add
fiadd
fld
in
jne
adc
cld
push
inc
add
add
add
fiadd
fld
in
jle
and
leave
pop
aad
add
aas
or
add
add
jo
push
add
add
add
je
push
add
add
push
xlat
or
sbb
mov
push
and
mov
push
and
mov
push
sub
mov
push
sub
mov
push
xor
mov
push
xor
mov
push
cmp
mov
push
cmp
mov
push
add
or
or
or
or
or
or
add
add
or
add
add
adc
or
add
add
or
or
or
or
or
add
add
or
add
je
push
adc
ret
add
push
xlat
or
sub
retf
sub
add
xor
add
xor
retf
cmp
retf
cmp
add
inc
or
add
inc
or
add
dec
or
add
push
xlat
or
or
add
or
mov
or
add
add
add
adc
mov
or
add
add
add
add
mov
or
add
add
add
adc
push
add
mov
or
add
add
adc
mov
add
and
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
mov
or
add
mov
or
add
add
and
adc
add
add
add
rol
add
rol
add
add
adc
sub
or
and
js
push
sub
js
xor
in
and
add
add
and
add
add
and
add
add
and
and
adc
je
push
add
and
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
arpl
addr16
ins
bswap
adc
iret
adc
aam
add
outs
and
jae
fst
ret
add
add
add
add
push
mov
and
movs
and
adc
add
es
add
addr16
adc
fst
fst
(bad)
adc
(bad)
adc
ret
add
add
add
add
je
add
xchg
es
add
xchg
es
add
cdq
es
add
popf
es
add
mov
add
add
add
add
es
add
frstor
hlt
adc
not
cld
adc
(bad)
adc
ret
add
add
not
push
push
add
jae
push
push
add
mov
push
push
add
xor
add
daa
ret
add
add
add
je
xor
inc
daa
out
xor
dec
daa
ret
add
add
out
xor
push
daa
ret
add
add
add
adc
add
add
add
add
add
add
add
add
daa
je
add
jmp
add
daa
out
add
icebp
daa
je
add
cmc
daa
je
add
stc
daa
mov
je
add
add
je
add
add
add
add
sub
add
add
add
sub
add
add
not
sbb
add
add
add
add
je
add
dec
sub
sub
add
shr
adc
xor
adc
enter
adc
int3
sub
sub
push
adc
aam
cmp
adc
fsubr
aas
push
adc
fsubr
aas
push
adc
loopne
inc
push
adc
in
inc
push
adc
call
add
sub
adc
lock
push
push
add
and
hlt
sub
add
clc
sub
and
sub
sub
add
add
nop
push
and
jno
xchg
push
push
add
mov
mov
push
add
mov
xchg
push
and
sbb
rol
add
sub
add
add
sub
add
add
add
sub
push
and
retf
push
and
into
sub
push
and
shr
icebp
push
add
(bad)
sub
push
and
fisubr
add
and
fisubr
or
and
loop
adc
and
out
sbb
and
jmp
sub
pop
add
repnz
add
add
sub
pop
add
cli
sub
pop
es
xadd
add
sbb
add
add
sub
adc
add
rol
add
rol
add
add
add
sbb
add
cs
and
jmp
add
mov
fist
add
sub
sbb
add
adc
push
add
cdq
das
mov
mov
mov
mov
sub
add
dec
xor
add
add
add
mov
mov
pusha
sbb
add
xor
adc
add
add
sbb
add
push
xlat
or
sbb
sbb
pop
xor
push
and
sbb
xor
add
je
add
mov
add
je
add
add
xor
sbb
add
xor
sbb
add
xor
xor
sbb
add
xor
xor
add
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
or
xor
sbb
add
xor
sbb
push
xlat
or
xor
(bad)
sub
mov
or
xor
sbb
add
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
je
and
pop
xor
pusha
xor
fdiv
rcr
add
call
add
xor
sbb
add
add
add
add
sub
add
cli
sub
pop
add
clc
sub
xor
repz
rol
add
aaa
rol
add
aaa
rol
add
dec
push
adc
daa
cmp
cmp
cmp
add
add
add
add
cmp
add
cmp
cmp
cmp
cmp
cmp
add
add
and
and
and
icebp
adc
icebp
adc
and
and
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
and
cld
push
adc
cdq
cmp
cmp
add
sbb
add
add
add
add
add
add
add
adc
sbb
add
(bad)
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
add
sbb
icebp
sbb
add
sbb
add
rcr
add
sbb
add
adc
sbb
and
add
add
sbb
inc
add
add
add
add
sbb
retf
add
add
add
add
sbb
inc
add
add
add
add
xchg
add
add
and
add
add
add
add
add
or
push
sbb
retf
add
add
add
or
adc
inc
add
fsub
add
or
adc
repnz
sbb
add
or
adc
clc
add
pop
and
add
add
or
add
cwde
and
add
add
or
add
fsub
add
add
xchg
add
push
pop
add
add
and
add
add
add
add
and
add
add
aas
push
out
add
sub
add
or
inc
add
cmc
add
add
add
or
add
push
inc
add
test
add
or
inc
add
add
and
add
add
add
add
add
or
add
rol
xor
add
mov
add
add
sbb
retf
add
xchg
and
add
add
add
cwde
and
add
add
add
pushf
and
add
add
or
add
hlt
and
add
add
sbb
retf
add
cld
and
add
add
sbb
inc
add
fsub
xchg
add
pop
pop
add
fsub
xchg
add
pop
pop
add
loopne
add
or
push
sbb
retf
add
call
add
add
add
add
cmp
add
add
xchg
add
pop
pop
add
inc
add
add
xchg
add
add
inc
add
or
push
sbb
retf
add
dec
add
or
push
sbb
retf
add
push
add
or
adc
inc
add
and
add
add
xchg
add
pop
add
and
add
add
xchg
add
pop
add
sub
add
or
push
sbb
retf
add
xor
add
or
push
sbb
retf
add
cmp
add
or
adc
inc
add
int3
daa
add
or
adc
repnz
add
add
or
adc
clc
add
cmp
add
or
adc
sti
add
je
add
or
adc
inc
lods
sub
add
add
add
mov
add
add
xchg
add
add
inc
add
push
out
add
hlt
sub
add
add
push
cmc
add
add
add
add
add
add
movs
push
dec
add
add
add
add
add
sub
add
add
add
push
xor
push
add
add
or
push
sbb
retf
add
add
add
or
adc
inc
add
or
add
add
xchg
add
add
sub
add
add
add
add
add
or
add
cmc
add
jl
add
or
push
sbb
retf
add
add
add
add
add
xchg
add
pop
add
add
sub
add
add
sbb
retf
add
add
sub
add
add
or
add
add
add
or
add
jge
retf
add
add
add
add
xchg
add
or
or
ins
sub
xchg
add
or
or
jo
add
or
adc
dec
or
add
add
sub
adc
stos
or
add
add
add
add
add
sbb
push
add
add
add
add
inc
add
or
push
add
add
add
add
and
add
add
add
add
add
inc
or
adc
and
add
or
push
sbb
retf
add
add
add
or
push
sbb
retf
add
add
add
or
push
or
retf
add
add
das
add
or
push
or
add
add
add
xchg
add
add
add
add
add
add
add
or
push
or
rol
adc
xchg
das
add
or
push
or
jecxz
adc
fsubr
add
or
push
or
hlt
add
add
add
or
push
or
or
add
add
or
push
or
push
add
add
push
or
xor
add
xor
add
add
or
dec
add
add
add
or
push
or
pop
add
add
add
or
push
or
jb
adc
mov
add
or
add
outs
or
xor
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
int
and
add
add
inc
add
or
add
add
add
inc
add
cmp
add
add
push
sbb
push
add
add
add
add
add
int
inc
add
add
add
inc
add
or
add
add
add
inc
add
push
add
add
add
push
sbb
push
add
add
add
add
add
int
pop
add
add
add
inc
add
or
aas
add
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
int
xchg
add
add
add
inc
add
or
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
inc
add
or
add
add
inc
add
or
add
add
add
inc
add
(bad)
add
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
add
inc
or
add
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
cld
add
add
add
push
sbb
push
add
add
add
add
inc
add
or
push
add
add
inc
add
or
push
test
add
add
add
inc
add
push
push
xchg
add
add
add
push
sbb
push
add
add
add
int
sbb
mov
add
add
add
inc
add
or
push
xchg
add
add
add
add
inc
or
push
xchg
add
add
add
add
sbb
push
add
add
add
int
xor
cdq
add
add
add
add
and
inc
push
popf
add
add
add
add
inc
or
lahf
add
add
add
add
sbb
push
add
add
add
int
push
push
mov
add
add
and
add
add
add
inc
or
add
add
add
add
sbb
push
add
add
add
int
popa
push
stos
add
add
add
add
and
outs
push
scas
add
add
add
add
inc
or
mov
add
add
add
push
sbb
push
add
add
add
int
pop
add
add
inc
add
or
add
add
add
add
inc
or
mov
add
add
sbb
push
add
add
add
int
add
add
add
inc
add
or
add
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
int
xchg
push
mov
add
add
add
and
fs
add
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
int
stos
push
rol
add
add
add
inc
add
or
add
add
add
inc
add
mov
add
add
add
sbb
push
add
add
add
add
add
int
mov
add
add
inc
add
or
add
add
add
inc
add
rol
in
push
xor
add
add
push
out
mov
add
add
push
out
enter
or
nop
add
push
repnz
out
add
adc
enter
call
add
add
pop
jmp
jl
add
or
nop
add
add
add
add
and
mov
add
or
adc
mov
inc
add
add
add
or
nop
add
add
add
or
nop
add
setle
repnz
inc
add
or
nop
add
movzx
hlt
add
add
add
pop
test
inc
add
or
nop
add
in
pop
sti
add
inc
add
or
nop
add
clc
pop
add
hlt
inc
add
or
nop
add
sbb
add
rol
add
add
or
aam
add
or
nop
add
add
inc
add
or
nop
add
add
nop
add
adc
dec
add
or
nop
add
adc
dec
add
or
nop
add
adc
dec
add
or
nop
add
adc
dec
add
or
nop
add
adc
dec
add
or
nop
add
adc
or
add
nop
add
adc
or
add
dec
add
or
nop
add
adc
or
add
dec
add
or
nop
add
xlat
push
adc
xor
add
add
add
add
add
or
nop
add
add
add
or
add
add
add
adc
push
add
or
nop
add
add
adc
into
adc
and
aam
add
or
nop
add
adc
push
add
or
nop
add
adc
or
add
add
or
nop
add
adc
or
add
nop
add
(bad)
daa
add
pop
add
or
nop
add
add
add
add
or
add
add
add
add
pusha
add
or
adc
(bad)
adc
sub
fsub
add
add
or
add
add
add
adc
or
add
arpl
add
add
or
cmp
or
nop
add
xchg
or
je
add
or
nop
add
mov
add
or
nop
add
xlat
or
add
add
or
nop
add
add
add
or
add
add
add
add
adc
or
add
add
add
adc
or
add
add
or
nop
add
adc
or
add
adc
push
adc
and
add
add
add
inc
add
add
add
add
add
inc
add
add
add
or
nop
add
add
add
add
or
add
add
add
adc
sbb
or
nop
add
adc
js
add
or
adc
or
ror
cmp
add
add
or
add
jbe
add
add
or
add
add
add
pop
inc
add
add
add
or
add
add
add
or
add
nop
add
pop
das
or
add
add
add
add
push
or
add
jge
add
add
or
add
add
or
nop
add
sbb
or
add
add
or
add
add
add
add
add
add
sbb
add
or
nop
add
add
test
add
add
or
add
or
nop
add
mov
push
add
mov
add
add
or
add
or
adc
push
sbb
pop
add
add
or
add
or
nop
add
inc
add
rcl
add
jge
push
add
xchg
add
or
nop
add
test
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
add
or
add
or
adc
lods
sbb
add
add
add
add
sbb
add
add
or
nop
add
adc
or
add
or
nop
add
or
imul
or
nop
add
sbb
imul
sahf
add
or
adc
arpl
inc
add
add
add
add
and
sbb
add
test
nop
add
adc
push
outs
add
test
nop
add
ror
jo
xor
nop
add
sbb
push
jbe
cwde
stos
add
or
nop
add
sbb
or
dec
stos
add
or
nop
add
in
ja
sub
add
sbb
push
ja
mov
nop
add
add
mov
add
add
emms
add
mov
add
add
add
sbb
or
or
add
or
nop
add
sbb
vmwrite
add
add
add
and
sbb
add
add
add
and
sbb
adc
add
or
nop
add
add
add
adc
enter
or
nop
add
sbb
call
add
adc
add
add
adc
add
add
add
or
nop
add
ret
je
add
add
add
inc
add
or
nop
add
add
into
add
or
nop
add
add
into
add
or
nop
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
push
inc
add
add
add
adc
add
pop
pusha
adc
add
add
adc
add
add
adc
or
nop
add
pop
adc
add
add
or
add
add
or
add
pop
fadd
lahf
add
add
or
nop
add
pop
adc
add
add
add
add
add
adc
add
add
pop
mov
add
add
adc
or
nop
add
pop
dec
adc
add
add
adc
add
add
adc
add
add
or
add
or
nop
add
and
lods
add
add
or
nop
add
and
add
add
and
add
add
and
mov
dec
fiadd
add
add
adc
add
add
or
add
and
fild
add
add
or
or
nop
add
add
fild
add
add
adc
add
add
push
rol
in
add
add
adc
add
add
or
nop
add
and
out
add
add
adc
add
out
add
add
adc
add
add
or
nop
add
and
mov
call
nop
add
and
into
add
nop
add
and
iret
add
add
add
adc
add
adc
out
and
pop
aad
dec
out
add
or
nop
add
pop
push
adc
add
add
or
nop
add
and
adc
add
out
add
or
nop
add
and
hlt
add
or
nop
add
and
adc
add
nop
add
and
adc
add
add
add
and
cmc
add
or
nop
add
and
adc
add
add
adc
add
add
add
and
out
add
add
adc
add
test
or
nop
add
or
add
add
add
or
add
nop
add
or
add
test
add
pop
adc
add
add
adc
add
clc
add
or
nop
add
adc
add
stc
add
or
nop
add
jbe
repz
add
adc
add
add
or
nop
add
nop
add
add
add
adc
add
add
adc
add
add
add
add
xchg
add
add
add
add
add
sbb
inc
add
add
xchg
add
nop
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
int
leave
adc
add
add
add
add
and
rcl
add
add
add
add
inc
or
add
add
xchg
pop
add
add
add
xchg
or
and
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
and
inc
je
add
or
xchg
inc
and
adc
add
add
xchg
pop
add
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
call
add
add
add
pop
add
or
xchg
pop
add
add
add
pop
add
or
xchg
add
add
add
push
or
add
add
sgdtd
ins
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
xchg
add
and
add
add
add
add
or
add
add
add
adc
add
or
xchg
or
and
or
add
sbb
add
mov
add
add
xchg
add
pop
add
add
add
add
add
xchg
pop
add
add
add
or
add
add
or
add
or
add
add
or
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
xchg
add
and
adc
add
or
xchg
sbb
inc
add
add
push
add
or
xchg
pop
add
add
add
push
add
add
xchg
add
and
sbb
add
add
xchg
add
and
and
add
or
xchg
pop
add
add
add
push
add
or
xchg
pop
add
add
add
push
add
or
xchg
pop
add
add
add
push
add
or
xchg
pop
add
add
hlt
push
add
or
xchg
sbb
inc
add
add
sgdtd
add
xchg
add
pop
add
add
sgdtd
add
xchg
add
add
sgdtd
or
xchg
mov
cmc
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
xchg
add
and
mov
add
add
add
add
add
add
xchg
add
es
add
add
adc
add
add
add
add
add
or
xchg
pop
add
add
adc
add
add
add
push
add
add
ins
adc
add
add
add
je
add
or
xchg
sbb
inc
add
sub
add
add
xchg
add
add
add
add
xchg
add
es
add
xor
add
or
xchg
pop
add
add
aam
add
or
xchg
jmp
add
adc
add
add
or
xchg
adc
add
add
or
int3
adc
add
add
add
rcl
add
add
add
aam
add
or
xchg
sbb
inc
add
adc
add
or
xchg
pop
add
push
add
adc
add
add
xchg
add
pop
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
add
add
add
sbb
add
add
push
or
in
add
add
xchg
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
or
add
add
or
xchg
pop
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
add
xchg
add
nop
sbb
add
add
add
add
xchg
pop
add
add
add
xchg
pop
add
add
add
xchg
pop
add
add
add
xchg
pop
add
add
add
xchg
pop
add
add
add
xchg
cld
sub
or
push
add
push
or
sbb
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
xchg
add
add
add
add
add
xchg
pop
add
push
adc
les
add
or
xchg
out
jecxz
adc
mov
add
add
xchg
add
sub
adc
nop
pop
add
add
xchg
add
sub
adc
xchg
pop
add
or
xchg
pop
add
push
adc
and
add
or
xchg
pop
sub
pop
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
xchg
pop
add
pop
add
and
add
add
pop
sbb
pop
sub
add
add
pop
sbb
je
add
or
add
sbb
add
add
pop
push
add
sub
add
add
pop
pop
add
sub
add
sub
or
add
add
add
add
inc
add
or
add
and
xchg
inc
add
or
add
sub
hlt
inc
add
or
xchg
cmps
sub
movs
dec
add
or
xchg
stos
sub
pop
dec
add
or
xchg
scas
sub
sbb
add
add
or
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
sub
enter
or
xchg
pop
add
add
add
add
add
add
dec
add
add
xchg
add
pop
add
add
add
or
xchg
pop
add
or
add
add
add
xchg
add
pop
add
add
add
add
xchg
add
add
add
add
or
add
add
add
sbb
add
add
add
push
sub
test
add
xchg
add
add
add
add
add
xchg
pop
add
sbb
add
add
sbb
add
add
or
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
or
xchg
aaa
das
adc
dec
add
or
sbb
add
dec
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
adc
add
add
or
xchg
dec
or
dec
add
or
xchg
test
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
xchg
shr
add
add
dec
add
or
sbb
add
sbb
add
add
add
xchg
add
das
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
or
add
add
or
add
add
add
add
xchg
popa
xor
dec
add
or
xchg
xor
add
add
dec
add
or
xchg
pop
add
sbb
pusha
dec
add
or
xchg
pop
add
sbb
jo
add
or
xchg
pop
add
sbb
mov
add
add
add
mov
add
add
add
add
add
add
xchg
pop
add
inc
add
add
add
add
add
dec
sbb
add
add
add
mov
or
dec
add
add
add
add
add
or
adc
add
add
sbb
cwde
dec
add
or
xchg
out
or
add
or
xchg
jmp
dec
add
test
add
or
xchg
out
xor
dec
add
add
sbb
ror
or
sbb
add
dec
add
dec
add
or
sbb
add
push
add
add
add
push
add
add
xchg
add
xor
push
add
add
add
add
push
add
or
sbb
add
push
add
or
sbb
add
push
add
add
xchg
add
xor
pop
add
push
add
add
xchg
add
add
push
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
jecxz
pop
add
add
add
add
add
or
add
add
add
add
or
adc
add
push
add
or
xchg
pop
add
add
loopne
add
or
les
popa
xor
sbb
lock
add
or
les
jae
ret
add
push
add
or
les
xor
sbb
adc
add
add
add
xchg
push
add
add
xchg
add
add
add
add
pushf
push
add
or
(bad)
or
xor
data16
(bad)
or
xor
add
mov
add
or
les
jae
ret
add
add
or
les
clc
xor
add
mov
add
or
les
push
xor
sbb
cmp
add
or
xchg
pop
add
add
jl
add
or
xchg
pop
add
add
pushf
pop
add
or
les
arpl
add
ins
add
add
add
or
fs
add
add
xchg
add
add
add
add
xchg
add
add
add
add
sbb
je
add
or
xchg
fdiv
sbb
outs
add
add
add
or
xor
jo
ins
pop
add
or
(bad)
or
xor
add
jl
add
or
xchg
loopne
sbb
test
add
add
sbb
xchg
pop
add
or
les
arpl
add
jb
nop
pop
add
or
les
jae
ret
add
les
clc
xor
add
pop
add
or
les
push
xor
sbb
fcomp
add
add
add
ret
add
pusha
add
or
xchg
pop
add
add
push
add
add
jl
add
add
xchg
add
pop
add
and
add
xchg
add
add
les
jae
ret
add
les
clc
xor
add
push
bound
add
add
add
add
jl
adc
add
or
add
jge
dec
arpl
add
add
add
shl
add
add
add
aam
add
add
xchg
add
add
fsub
add
add
add
sbb
ins
add
or
les
jae
ret
add
les
clc
xor
add
add
add
add
add
add
add
or
les
push
xor
sbb
or
add
test
sub
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
xchg
mov
xchg
or
add
ins
add
or
xchg
cld
sub
mov
test
add
add
push
mov
add
add
add
les
mov
add
add
add
les
mov
add
add
add
les
lea
xor
add
add
sbb
add
add
sbb
add
jo
add
add
sbb
add
jno
add
add
add
mov
jno
add
add
sbb
add
add
add
sbb
add
jne
add
add
sbb
add
add
or
add
add
sbb
add
add
pushf
add
jbe
add
add
add
add
xchg
add
add
ja
add
add
add
or
xchg
pop
add
add
or
xchg
add
add
ja
add
add
add
jae
popf
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
les
sbb
jae
movs
add
add
add
xchg
add
aaa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
xchg
or
cmp
cmps
add
xchg
or
cmp
cmps
add
jnp
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
jge
add
add
add
retf
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
add
add
or
add
add
add
add
add
sbb
add
add
or
or
add
cmp
or
add
add
add
add
add
or
add
cmp
or
add
add
or
xchg
pop
add
sbb
add
add
xchg
add
add
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
or
add
add
or
add
cmp
or
add
xchg
pop
add
sbb
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
xor
and
les
shl
mov
add
add
add
xor
nop
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
jecxz
int3
add
add
add
add
add
mov
add
add
mov
add
add
inc
push
add
add
mov
add
add
mov
add
add
data16
add
add
add
add
push
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
aad
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
aad
add
add
mov
add
add
ror
add
add
or
add
add
or
add
add
or
add
enter
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
enter
add
add
add
add
or
add
add
or
add
add
add
or
sub
cmp
add
push
add
add
pop
add
add
or
gs
jbe
add
or
or
or
add
adc
add
add
jbe
add
add
or
or
add
add
or
add
add
add
or
sub
cmp
add
push
add
add
pop
add
add
or
gs
jbe
add
or
or
or
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
dec
add
pop
add
or
add
add
or
sub
add
add
add
add
add
or
mov
add
add
ror
add
add
or
(bad)
dec
add
add
adc
add
add
sub
add
or
(bad)
mov
add
add
ror
add
add
or
(bad)
dec
add
add
adc
add
add
sub
add
or
(bad)
mov
add
add
ror
add
add
add
add
or
add
adc
add
add
sub
add
add
add
add
or
add
add
or
call
add
or
test
push
add
or
add
add
or
add
add
add
or
call
add
or
test
add
mov
add
add
ror
add
add
or
add
add
add
dec
add
add
adc
add
add
add
add
add
sub
add
or
add
add
add
mov
add
add
ror
add
add
push
add
add
dec
add
add
adc
add
add
sub
add
push
add
add
mov
add
add
ror
add
add
add
push
add
add
dec
add
add
adc
add
add
sbb
add
add
add
push
add
add
mov
add
add
ror
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
push
add
add
cmp
add
add
inc
push
add
add
dec
add
add
add
add
add
push
add
add
cmp
add
add
inc
push
add
add
mov
add
add
ror
add
add
add
add
pop
push
add
add
jo
add
add
dec
add
add
add
add
add
add
add
pop
push
add
add
jo
add
add
mov
add
add
ror
add
add
add
add
pop
push
add
add
jo
add
add
test
add
add
add
add
or
add
add
or
add
add
sub
add
add
add
pop
push
add
add
jo
add
add
test
add
add
add
add
add
or
add
add
dec
add
add
adc
add
add
sub
add
mov
add
add
les
add
add
int3
push
add
add
iret
push
add
add
ror
add
add
ins
sldt
add
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
loope
add
add
lods
or
add
add
sldt
add
xor
add
add
adc
add
add
adc
add
adc
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
pop
add
add
add
push
adc
add
add
add
add
add
add
xor
add
add
adc
add
add
adc
add
add
adc
add
add
sldt
add
retf
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
xchg
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
pop
add
add
or
mov
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
inc
adc
add
add
add
add
loope
add
add
inc
adc
and
add
add
add
outs
adc
add
add
add
add
mov
add
add
add
add
add
(bad)
adc
add
add
adc
add
add
adc
add
add
sldt
add
cmps
adc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
adc
adc
add
add
adc
add
add
adc
add
add
sldt
add
xor
add
add
xor
add
add
in
add
add
das
pop
add
add
inc
push
add
add
addr16
add
add
push
add
add
call
add
add
sbb
add
stc
sbb
add
add
add
sldt
add
xor
add
add
add
add
add
add
add
retf
add
add
add
add
xchg
sbb
add
add
sldt
add
les
add
add
movs
adc
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
pop
add
add
or
mov
add
adc
add
add
adc
add
add
add
adc
add
add
adc
add
add
sbb
add
add
sbb
add
add
add
add
movs
adc
add
add
add
add
add
add
sbb
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
add
and
add
add
rcr
add
(bad)
adc
add
add
add
add
xchg
adc
add
add
sbb
inc
sbb
xchg
sbb
add
add
push
add
add
inc
adc
add
add
adc
add
add
sldt
add
les
add
add
dec
push
add
add
jne
add
add
inc
adc
add
add
mov
add
add
add
add
add
add
call
add
add
sbb
add
stc
sbb
add
add
push
add
add
sub
add
add
loope
add
add
adc
add
add
and
add
add
sub
add
add
sub
add
add
add
add
add
add
cmp
add
add
cmp
add
add
inc
pop
add
add
add
add
push
add
add
je
add
add
das
pop
add
add
jne
add
add
inc
add
add
lods
or
add
add
add
add
add
xor
add
add
lods
or
add
add
add
add
hlt
adc
add
add
adc
add
add
push
add
add
add
add
add
sub
add
add
loope
add
add
or
add
add
repnz
add
les
add
add
movs
adc
add
add
add
add
and
add
add
and
add
add
and
add
add
add
add
and
add
add
and
add
add
and
and
add
add
and
add
add
and
add
add
and
add
add
add
add
adc
add
add
push
add
add
sahf
and
add
add
mov
add
sldt
add
ret
add
add
and
add
add
and
add
add
and
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
pop
add
add
or
mov
add
add
add
and
add
add
push
add
add
xor
add
add
adc
add
add
adc
add
adc
add
add
add
adc
add
add
push
add
add
movs
adc
add
add
adc
add
add
adc
add
add
add
sbb
add
add
add
sbb
add
stc
sbb
and
add
add
and
add
add
and
add
add
and
add
add
add
add
adc
add
add
adc
add
add
adc
add
adc
add
add
add
add
pop
add
add
or
mov
add
adc
add
add
and
add
add
and
add
add
add
add
ins
and
add
add
sldt
add
ret
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
outs
and
add
add
and
ja
add
add
dec
add
add
push
daa
add
add
mov
add
stos
daa
add
add
mov
add
add
push
daa
add
add
test
add
add
add
jne
add
add
jns
add
add
xchg
add
add
xchg
sub
add
popf
sub
add
add
add
add
add
jmp
add
add
daa
sub
add
add
add
add
inc
sub
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
add
add
add
jae
add
add
outs
and
add
add
add
add
add
outs
and
add
add
add
add
repz
add
icebp
add
add
(bad)
add
add
repz
add
cmp
add
add
jb
add
add
jns
add
add
sub
add
add
add
add
add
add
add
add
xchg
das
add
add
jne
add
add
jns
add
add
lds
add
add
cmp
add
add
add
jne
add
add
imul
imul
jnp
add
add
xchg
add
add
jnp
add
add
jb
add
add
jns
add
add
sub
add
add
add
add
add
add
add
add
xchg
das
add
add
repz
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
add
xor
add
add
or
shl
add
add
(bad)
sti
xor
add
add
add
add
or
add
add
adc
add
add
add
jns
add
add
pop
xor
add
add
add
add
mov
add
add
jb
add
add
xchg
das
add
add
xchg
sbb
add
add
add
add
add
add
xchg
sbb
add
add
xor
add
add
xor
add
add
add
add
add
add
inc
sbb
xchg
sbb
add
add
add
add
jne
add
add
jne
add
add
data16
add
add
add
xor
add
add
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
add
add
inc
sbb
xchg
sbb
add
add
add
add
xor
add
add
xor
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
jne
add
add
jne
add
add
jne
add
add
xchg
sbb
add
add
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
adc
add
add
adc
add
add
add
add
push
add
add
inc
sbb
loop
add
add
inc
sbb
popf
add
add
inc
sbb
or
add
add
aaa
add
add
cmp
add
add
test
add
add
adc
add
add
shl
add
add
aaa
add
add
xor
add
add
add
add
aaa
add
add
adc
add
add
mov
add
add
inc
cmp
add
add
add
add
push
cmp
add
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
cmp
add
add
cmp
add
add
add
add
xchg
sbb
add
add
add
add
xchg
sbb
add
add
xchg
sbb
add
add
add
add
add
retf
add
add
fadd
xor
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
dec
add
add
add
add
dec
add
add
push
add
add
jecxz
jno
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
cmc
add
cmc
add
cmc
add
cmc
add
inc
push
out
jmp
add
ins
push
cmc
add
add
add
add
push
sub
popa
add
retf
add
cld
push
inc
add
add
add
add
add
add
add
add
add
add
cmc
add
cmc
add
cmc
add
leave
pop
aad
ins
add
add
or
add
add
add
pop
add
add
imul
imul
call
add
add
add
or
add
add
and
or
add
add
lock
add
add
or
add
add
jl
inc
add
jnp
add
add
add
add
xchg
add
add
popf
add
add
add
add
add
retf
add
aad
push
pop
mov
pop
mov
add
add
jecxz
test
add
pop
mov
push
bswap
add
pop
cmp
jns
dec
add
add
add
add
cmpxchg
je
push
adc
pop
rol
daa
adc
pop
cmp
pop
adc
jl
data16
test
jbe
cmc
add
jl
push
adc
pop
jl
adc
or
add
add
add
add
adc
add
add
adc
add
add
adc
icebp
add
adc
or
add
dec
add
add
dec
add
add
or
add
std
or
add
or
add
pop
or
add
adc
adc
add
add
adc
or
add
adc
sub
and
aas
or
add
adc
xor
cmp
push
or
add
pop
or
add
adc
sbb
pop
add
add
or
add
ins
or
add
jp
inc
add
or
add
adc
or
jmp
iret
or
add
adc
or
or
or
inc
or
or
add
adc
or
pop
add
add
pop
add
add
add
add
pop
add
jns
ret
or
pop
cmp
repz
or
or
add
adc
add
adc
or
or
or
or
add
cmc
add
add
add
into
or
add
adc
or
add
adc
and
repz
or
or
or
or
or
add
pop
or
add
add
jno
mov
pop
add
add
add
or
or
add
add
add
jecxz
cmp
loopne
ret
or
add
push
leave
or
or
add
out
fld
mov
in
or
add
add
lods
push
lock
add
lds
mov
add
add
or
add
push
adc
pop
sbb
add
pop
or
add
add
add
add
dec
or
add
dec
or
add
add
add
add
add
add
push
sub
jge
aas
or
or
add
add
push
add
or
add
pop
cdq
or
add
and
pop
mov
pop
sub
jns
clc
pop
sub
jns
push
sbb
add
or
add
scas
or
add
mov
jns
imul
jns
add
mov
add
add
add
add
test
add
add
sbb
or
add
cdq
or
add
sbb
or
sbb
lock
pop
add
or
add
adc
add
or
dec
add
or
fadd
add
add
add
mov
fcomp
retf
or
add
or
retf
add
add
push
sbb
add
pop
sbb
add
push
bound
mov
jns
mov
inc
add
add
retf
add
push
xor
xchg
sbb
push
inc
add
add
add
add
sbb
add
add
cdq
sbb
adc
sbb
sbb
sbb
add
add
sbb
add
add
add
rol
imul
add
add
add
rol
xchg
sbb
add
or
push
fld
int
xchg
push
fld
aad
movs
push
fld
fstp
mov
loope
test
das
or
add
add
sbb
add
add
dec
jmp
or
add
add
sbb
add
add
or
add
or
mov
ud1
ins
add
xchg
sbb
add
out
pop
sub
mov
vmwrite
lods
sbb
add
add
sbb
wbinvd
add
sbb
vmwrite
pop
add
or
sbb
wbinvd
add
adc
sbb
pop
adc
sbb
pop
sbb
outs
sbb
jl
sbb
adc
add
xor
and
stos
adc
pop
adc
leave
add
add
add
xor
leave
add
add
movs
sbb
loopne
push
add
add
add
add
add
push
dec
or
add
push
lea
or
xor
xchg
adc
add
rcl
add
jecxz
rol
push
(bad)
adc
adc
add
add
add
add
add
sbb
adc
adc
or
add
pop
inc
adc
pop
add
jns
test
sbb
jns
pop
add
cdq
add
add
adc
pop
jns
cmp
mov
mov
and
and
and
adc
add
adc
add
add
add
add
add
add
add
and
adc
add
and
adc
add
sbb
add
adc
add
adc
adc
add
and
add
add
add
add
and
add
leave
add
adc
sbb
shl
mov
add
or
or
add
and
adc
add
and
add
adc
add
retf
add
add
add
add
add
and
adc
or
and
adc
jecxz
cdq
add
retf
add
test
inc
or
add
add
pop
add
add
adc
push
adc
pop
adc
pop
adc
cmc
add
cmp
adc
push
adc
pop
lods
add
retf
add
add
sbb
adc
rcl
push
push
add
adc
add
sub
push
add
sub
add
add
retf
add
jl
pop
add
add
pushf
add
retf
add
add
add
add
sbb
sub
sub
add
add
or
inc
icebp
add
or
or
or
cmc
add
add
add
adc
add
add
and
icebp
add
add
and
add
dec
add
add
add
add
cmc
add
mov
data16
sub
and
leave
add
adc
sub
add
sub
push
inc
or
add
dec
add
add
ret
or
add
dec
add
mov
add
add
sub
or
add
sub
pop
icebp
add
retf
add
or
add
add
add
test
rcr
add
adc
add
sbb
add
add
dec
add
pushf
add
add
xchg
sbb
add
add
xor
int3
add
jbe
cmc
add
sub
sbb
add
xchg
sbb
add
add
xor
fadd
mov
add
add
scas
sub
sbb
add
xor
in
pop
add
add
add
adc
add
add
sub
add
add
fstp
in
add
add
inc
add
icebp
add
sub
sbb
add
in
add
data16
adc
sub
repnz
add
pop
add
add
pop
add
sbb
add
sub
xor
cmp
jmp
add
add
inc
sbb
add
and
jmp
add
add
add
inc
icebp
add
outs
sbb
add
or
popa
add
push
add
add
dec
or
add
cs
add
retf
add
sbb
or
sbb
sbb
sbb
sbb
add
add
add
sbb
sbb
add
add
sbb
or
or
in
dec
add
adc
sbb
sbb
add
add
add
or
add
add
add
cdq
add
test
add
add
sbb
movaps
xchg
sbb
add
push
xor
sbb
sbb
xor
add
xor
add
dec
xor
add
sbb
pop
add
leave
add
mov
sbb
add
mov
sbb
add
fld
fld
fld
loope
pop
add
add
sbb
or
dec
xor
xor
shl
les
sti
sbb
push
div
and
push
cmp
or
inc
add
add
inc
sbb
push
jo
dec
sbb
add
or
add
pop
sbb
add
add
add
add
retf
add
push
icebp
ss
and
stc
fadd
rol
or
rol
aaa
jae
cmp
dec
aaa
xchg
push
push
add
jno
mov
add
add
jecxz
icebp
add
retf
add
cmp
sbb
retf
add
cmp
jecxz
imul
imul
imul
jns
repz
add
jns
retf
add
add
add
pop
sbb
adc
or
or
and
cmc
add
or
pop
add
add
pop
add
add
add
retf
add
add
lahf
cmp
add
cmc
add
pop
xor
vmwrite
cmp
sbb
push
sbb
outs
sbb
xchg
repnz
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
loope
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
pop
pop
add
add
pop
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
pushf
add
add
add
add
cmps
add
add
add
add
mov
or
add
add
add
add
mov
add
rol
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
or
nop
add
add
add
add
xchg
add
add
add
add
add
cmc
add
add
add
nop
add
add
add
add
adc
xor
sub
add
add
repz
add
add
add
add
add
add
add
add
add
fwait
adc
adc
adc
imul
add
adc
adc
mov
fwait
adc
sbb
lea
mov
add
add
sbb
lea
rol
adc
rol
adc
adc
ret
add
add
add
jge
jecxz
stos
adc
add
add
add
add
add
add
add
add
add
add
jge
add
adc
adc
mov
sbb
jge
rol
adc
adc
adc
adc
adc
adc
jecxz
jae
jge
jecxz
mov
add
add
jge
add
jae
jge
add
stos
adc
add
add
jge
and
adc
add
add
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
add
adc
add
add
add
add
adc
adc
add
and
inc
add
pusha
add
test
push
rol
add
loopne
jae
jge
loopne
adc
add
push
adc
add
push
jae
jge
and
adc
add
push
jae
jge
inc
push
adc
add
adc
add
add
sbb
lea
or
sbb
jge
or
adc
dec
pop
and
adc
add
pop
jae
jge
and
mov
lea
inc
pop
jmp
push
push
inc
pop
mov
lea
dec
pop
adc
dec
pop
dec
pop
sbb
jge
mov
add
pop
fist
lea
ret
pop
repz
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
jecxz
or
inc
pop
add
or
inc
pop
and
or
inc
pop
arpl
or
inc
pop
or
adc
mov
pop
pop
jecxz
and
or
adc
adc
adc
adc
inc
add
lea
ror
pop
pusha
dec
sub
outs
and
xor
mov
inc
add
add
add
push
add
fld
mov
fild
xchg
loope
xchg
push
add
pop
jae
mov
jne
xchg
ja
xchg
mov
scas
sbb
add
pop
add
pop
imul
xchg
jae
mov
jne
xchg
ja
xchg
rol
pop
ret
add
pop
mov
gs
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
jl
add
xchg
add
je
add
mov
inc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xlat
add
add
add
add
add
add
add
add
add
add
push
add
je
xchg
pop
test
pop
add
or
js
xchg
or
or
or
or
or
mov
or
or
xchg
or
or
pop
or
or
or
or
or
dec
or
enter
add
adc
push
push
pop
push
loopne
repnz
sub
cmp
loope
push
adc
adc
adc
adc
adc
adc
adc
ins
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
xchg
adc
add
add
push
inc
pop
pop
pop
mov
cmps
pop
lds
fcom
call
push
sbb
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
add
add
add
add
add
dec
sub
add
add
sub
in
sub
in
sub
dec
sub
add
add
add
add
add
add
add
adc
inc
add
add
sbb
dec
add
add
add
and
add
sub
ins
add
add
das
add
xor
js
cmp
jns
cmp
jge
cmp
add
int3
add
add
add
push
xlat
add
add
add
xor
loope
add
inc
pop
add
add
add
add
add
push
retf
add
add
add
xor
rol
add
inc
pop
add
add
add
int3
or
rol
jmp
mov
add
add
or
add
add
or
add
add
fild
add
or
add
add
and
adc
add
adc
je
add
jns
jo
add
mov
add
and
adc
ficom
ficom
loop
add
sbb
or
add
and
loop
add
push
es
add
sub
mov
loop
add
mov
xlat
push
add
mov
add
add
cs
add
clc
adc
sbb
add
loop
add
fisubr
call
add
das
loop
add
add
loop
add
push
xor
adc
loop
add
das
xor
adc
inc
sbb
add
add
xor
adc
loop
add
iret
xor
adc
sbb
add
xor
adc
xlat
push
add
dec
xor
push
add
ret
xor
push
add
cmps
xor
sbb
add
xor
push
add
shl
xchg
add
xlat
ss
add
test
add
ja
lock
add
lock
add
add
add
mov
add
add
or
add
adc
rol
add
or
rol
add
add
or
add
add
add
add
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
sbb
add
add
add
and
add
push
add
add
add
add
add
daa
add
add
sub
add
ins
add
add
add
sub
add
add
add
xor
add
je
xor
add
test
xor
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
fld
dec
add
add
add
add
in
dec
add
add
add
add
out
add
add
lock
add
icebp
add
add
repnz
add
repz
add
cmc
add
add
hlt
add
add
std
add
add
inc
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lar
add
adc
outs
add
add
add
add
sub
jno
add
xor
jae
add
xor
jae
add
xor
jne
add
xor
add
add
add
aaa
add
add
pop
add
add
jae
jnp
add
je
jge
add
jne
jg
add
jbe
add
add
add
sub
add
add
add
add
add
add
add
add
xor
add
ja
inc
add
add
inc
add
add
inc
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
mov
jns
jo
ret
add
jb
lahf
add
je
stos
add
jbe
lods
add
js
fild
jnp
add
jnp
test
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
btr
pop
adc
adc
sbb
sbb
mov
pop
xchg
add
add
add
add
pop
sub
cmp
pop
or
adc
adc
pop
dec
pop
mov
popf
sbb
sbb
sbb
sbb
inc
add
add
stos
adc
add
pop
push
adc
add
lahf
add
adc
add
lods
add
add
add
sbb
add
add
add
or
es
das
add
pop
add
add
pop
add
add
push
add
add
sub
add
add
pop
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
sbb
nop
and
or
or
int3
add
or
int
and
or
into
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
js
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
bound
popa
add
popa
add
add
add
add
add
add
add
add
add
add
and
mov
add
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
lods
add
add
pop
test
xor
test
cmp
test
inc
pop
test
inc
pop
test
dec
pop
test
or
add
je
add
je
add
sbb
add
xor
inc
outs
outs
ins
gs
outs
add
jae
gs
add
arpl
ins
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
push
outs
imul
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
data16
gs
add
gs
xor
dec
imul
jns
ins
add
push
arpl
bound
and
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
and
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
add
ja
and
and
and
and
and
and
and
and
and
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
and
and
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
and
add
add
push
jne
add
ins
bound
push
popa
ins
jne
push
jns
add
ja
add
dec
bound
and
add
pop
bound
and
bound
and
arpl
and
and
add
arpl
and
add
jo
add
jae
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
arpl
and
add
inc
arpl
and
and
add
inc
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
and
and
add
dec
arpl
and
add
pop
arpl
and
arpl
and
add
data16
add
je
imul
push
add
add
ins
add
outs
add
outs
add
je
add
ja
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
ins
add
js
add
data16
dec
add
xor
and
add
inc
data16
dec
add
imul
and
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
bound
and
add
ins
push
add
popa
imul
and
add
push
push
add
outs
imul
je
jb
jae
and
add
inc
imul
and
and
add
dec
imul
and
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
bound
and
add
push
add
imul
popa
bound
add
inc
push
inc
outs
outs
je
outs
ins
add
dec
push
and
add
push
push
and
add
aaa
push
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
outs
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
jns
je
ins
cs
bound
push
gs
imul
jo
jb
imul
imul
add
push
imul
aaa
imul
imul
ins
ins
add
outs
ins
add
pop
ins
add
pop
ins
add
je
add
ja
add
jns
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
arpl
outs
jb
inc
jae
gs
bound
addr16
inc
jne
ins
dec
popa
ins
add
fs
imul
dec
outs
arpl
imul
inc
js
arpl
imul
ins
bound
push
arpl
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
push
inc
push
dec
pop
outs
imul
dec
outs
push
add
pop
dec
dec
push
js
jb
ins
je
ja
push
ins
add
add
data16
add
gs
and
inc
js
gs
imul
and
and
and
and
push
push
je
push
push
xor
push
jno
dec
imul
je
cmp
ins
inc
dec
je
jo
jb
inc
jo
ins
imul
add
bound
jb
imul
add
outs
add
jne
ins
jae
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
jo
inc
gs
popa
jae
inc
outs
fs
jno
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
outs
push
je
imul
and
and
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
and
dec
dec
jno
aaa
push
xor
gs
dec
bound
add
inc
dec
ss
inc
pop
push
outs
dec
xor
inc
dec
add
js
inc
gs
outs
jae
popa
outs
arpl
pushw
gs
push
cmp
dec
xor
push
jb
cmp
dec
xor
imul
add
ins
dec
outs
inc
ins
jb
ja
ja
pop
xor
inc
bound
data16
cmp
dec
jae
inc
gs
inc
inc
jns
push
imul
xor
xor
pop
push
xor
dec
outs
dec
dec
xor
cmp
jbe
jbe
cmp
jb
inc
imul
pop
xor
push
dec
ja
push
je
add
js
inc
xor
imul
dec
dec
push
push
gs
dec
cmp
push
js
inc
ins
push
pop
push
aaa
add
pop
ins
jb
imul
bound
push
add
dec
add
outs
je
js
push
popa
ins
jne
pusha
xor
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
je
jb
popa
ins
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
dec
jb
push
pop
arpl
bound
jae
xor
cmp
push
inc
jno
jb
dec
push
outs
jbe
xor
jb
pop
push
add
dec
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
dec
add
dec
add
jo
jae
add
imul
ins
add
push
add
jp
inc
add
jae
gs
cs
jb
ja
outs
add
jp
add
jae
outs
fs
popa
jns
jne
add
outs
ins
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
ins
imul
add
je
dec
popa
ins
add
je
push
gs
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
jae
ins
gs
popa
jns
jne
add
inc
xor
push
inc
je
gs
cmp
ja
dec
add
ss
xor
inc
pop
inc
addr16
push
xor
outs
jno
add
push
add
push
add
push
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
je
je
add
push
add
inc
add
pop
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
imul
add
jae
outs
arpl
jae
ins
je
dec
imul
je
inc
jae
outs
arpl
ins
ins
bound
imul
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
push
arpl
and
add
push
arpl
and
and
add
outs
je
xor
push
push
add
jae
gs
cs
push
imul
pop
inc
jne
jb
outs
je
push
add
je
dec
jae
popa
arpl
jb
jne
add
outs
jbe
jb
imul
add
push
arpl
imul
dec
jae
arpl
push
inc
push
jb
add
cmp
inc
jo
aaa
ins
push
inc
dec
jns
imul
gs
pop
add
cmp
and
add
popa
bound
and
add
arpl
and
and
add
bound
and
add
imul
and
add
ins
bound
and
add
outs
bound
and
add
jno
add
jb
add
je
add
jae
add
je
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
bound
and
add
inc
bound
and
and
add
inc
bound
and
add
dec
bound
and
add
dec
bound
and
add
jp
dec
data16
ins
outs
arpl
ins
outs
bound
add
jo
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
inc
push
dec
inc
dec
xor
dec
arpl
pop
xor
jno
dec
jbe
inc
gs
popa
xor
inc
fs
add
gs
je
push
push
add
gs
je
push
jb
arpl
jae
outs
outs
add
imul
add
imul
jae
dec
outs
popa
fs
ins
ins
add
ins
outs
popa
fs
ins
ins
add
jne
push
je
imul
dec
outs
outs
add
dec
bound
and
add
dec
bound
and
add
push
bound
and
add
push
bound
and
and
add
push
bound
and
add
pop
bound
and
bound
and
bound
and
bound
and
add
bound
and
bound
and
bound
and
bound
and
add
arpl
and
add
push
arpl
push
dec
outs
je
add
push
add
ins
arpl
and
add
outs
arpl
and
add
jno
add
jb
add
je
add
jne
add
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
push
jb
arpl
jae
fs
fs
jae
add
imul
ins
imul
dec
popa
ins
add
ins
ins
popa
outs
fs
imul
arpl
jae
je
jb
bound
gs
je
jb
popa
fs
je
jb
bound
gs
imul
dec
popa
outs
fs
gs
arpl
popa
je
outs
outs
inc
ins
popa
addr16
outs
jbe
jb
outs
ins
outs
je
arpl
jb
outs
je
imul
jns
jae
popa
jb
jne
dec
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
bound
gs
fs
jae
add
data16
bound
data16
imul
gs
gs
add
je
jae
jb
je
outs
add
gs
add
outs
je
js
add
outs
fs
add
fs
jae
add
addr16
add
add
outs
je
arpl
jne
jo
outs
fs
outs
jne
je
fs
jb
arpl
jae
add
bound
inc
jbe
outs
je
fs
imul
outs
fs
fs
push
dec
add
outs
outs
je
outs
jne
push
je
je
jae
dec
popa
outs
fs
add
arpl
imul
ins
popa
je
outs
outs
add
arpl
imul
imul
dec
outs
addr16
add
dec
outs
addr16
dec
gs
push
push
popa
jb
ins
gs
jb
and
add
push
add
je
add
inc
ins
add
inc
ins
add
push
add
inc
ins
add
pop
add
pop
add
xor
push
ins
gs
push
jb
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
inc
inc
add
ins
ins
arpl
jb
arpl
jae
inc
gs
jb
arpl
jae
jns
add
ins
ins
add
je
jne
jb
outs
je
jb
arpl
jae
and
and
add
inc
ins
add
jne
add
popa
jb
jae
imul
push
je
outs
outs
addr16
popa
ins
gs
imul
gs
gs
imul
outs
outs
inc
js
ins
jae
outs
jb
imul
ins
ins
add
inc
ins
add
dec
ins
add
pop
push
push
imul
je
inc
outs
popa
bound
add
data16
jae
add
dec
ins
add
imul
popa
je
add
outs
add
dec
ins
add
xor
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
fs
ins
add
imul
ins
add
jo
add
pop
imul
and
imul
and
and
imul
and
add
dec
add
dec
ins
add
jo
gs
addr16
dec
je
ins
add
je
xor
addr16
inc
outs
jne
je
inc
outs
outs
je
imul
and
add
dec
add
dec
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
push
ins
add
push
ins
add
inc
add
push
ins
add
dec
data16
push
ins
add
addr16
push
ins
add
push
ins
add
jb
jns
and
add
push
ins
add
cmp
and
add
jo
jns
and
add
pop
ins
add
xor
inc
gs
jns
add
je
dec
gs
popa
add
ins
push
jb
je
jb
push
jns
je
ins
cs
ins
ins
add
imul
bound
gs
je
imul
pop
push
je
arpl
jb
arpl
push
jb
ins
add
fs
data16
popa
jb
push
jne
jae
jb
outs
add
pop
ins
add
xor
and
inc
jb
jo
outs
push
je
gs
ins
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
arpl
cmp
cmp
imul
jae
push
imul
dec
popa
outs
popa
gs
gs
je
inc
arpl
jo
outs
jb
push
je
gs
ins
add
outs
jae
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
pop
inc
push
inc
dec
dec
add
je
jns
gs
inc
outs
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
jo
outs
push
je
gs
ins
dec
outs
fs
popa
add
ins
ins
gs
imul
imul
pop
dec
outs
fs
jo
gs
outs
fs
xor
and
ins
add
xor
and
add
inc
imul
inc
imul
inc
imul
inc
imul
jb
ja
gs
add
gs
xor
and
add
imul
and
imul
and
ins
add
je
add
je
gs
jo
imul
inc
outs
ins
bound
add
outs
arpl
add
popa
jb
add
outs
je
popa
outs
fs
gs
push
push
inc
bound
je
js
gs
imul
add
jne
add
inc
add
jbe
add
cmp
push
jb
je
inc
jns
add
cmp
and
add
ja
add
jbe
ins
imul
imul
jo
imul
jne
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
add
bound
dec
popa
js
and
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
outs
add
je
jb
arpl
outs
add
jbe
jb
outs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
pop
inc
js
arpl
popa
bound
popa
je
add
gs
je
push
jb
push
arpl
jb
jb
and
add
bound
outs
js
add
jae
gs
cs
gs
and
add
data16
add
push
add
fs
imul
add
jb
gs
xor
add
outs
add
push
data16
push
data16
imul
push
gs
fs
jns
add
imul
inc
data16
inc
data16
inc
data16
inc
data16
ins
outs
add
outs
outs
add
dec
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
ins
outs
add
xor
and
add
xor
and
push
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
outs
outs
add
ins
gs
je
gs
ins
add
outs
push
jb
je
add
imul
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
fs
jo
add
outs
arpl
outs
popa
je
dec
bound
arpl
outs
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
bound
arpl
gs
gs
add
jno
add
jbe
add
jb
add
imul
je
addr16
dec
popa
jae
js
je
add
gs
je
dec
bound
arpl
jae
add
je
add
pop
push
pop
dec
outs
addr16
add
je
inc
push
and
add
jbe
add
imul
jo
ins
imul
inc
js
gs
imul
inc
jno
popa
ins
imul
push
bound
imul
je
arpl
add
je
push
jb
js
add
ja
add
xor
push
jb
arpl
jae
outs
fs
add
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
addr16
inc
popa
jae
inc
fs
jae
add
jbe
dec
gs
add
jb
add
js
add
outs
ins
dec
popa
outs
fs
add
jns
add
jp
add
inc
outs
add
popa
push
addr16
dec
outs
outs
gs
js
gs
imul
push
jne
ins
imul
ins
add
popa
jo
js
gs
imul
jbe
jb
popa
jne
je
outs
fs
inc
outs
add
jno
add
inc
outs
add
je
xor
push
dec
outs
je
xor
push
inc
jns
add
outs
je
je
add
outs
je
xor
push
outs
push
dec
outs
je
xor
and
and
and
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
addr16
inc
gs
jne
je
and
add
je
inc
outs
arpl
jb
inc
outs
arpl
jb
je
ins
gs
inc
jne
je
outs
inc
popa
jae
add
je
inc
ins
popa
je
je
ins
add
popa
je
je
ins
add
fs
inc
ins
imul
inc
outs
jne
fs
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
imul
pop
inc
jne
outs
push
arpl
gs
popa
jae
push
imul
pop
inc
outs
outs
je
outs
ins
inc
outs
js
addr16
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
addr16
dec
gs
addr16
push
imul
pop
push
popa
bound
fs
jae
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
inc
outs
add
outs
je
and
add
push
imul
jb
jo
imul
add
ins
gs
jae
dec
arpl
push
arpl
ins
add
je
arpl
push
outs
dec
outs
outs
je
and
add
dec
outs
add
gs
fs
je
jb
add
push
add
dec
outs
add
dec
outs
add
dec
outs
add
dec
outs
add
dec
outs
add
xor
add
dec
outs
add
dec
outs
add
push
outs
add
push
outs
add
push
outs
add
gs
je
inc
jb
jo
imul
pop
push
gs
add
je
inc
outs
outs
je
jae
je
dec
imul
outs
add
aaa
arpl
and
and
add
dec
add
push
outs
add
push
outs
add
pop
outs
add
jb
popa
ins
push
jb
je
jb
jae
je
inc
jne
outs
inc
ins
jne
push
imul
je
addr16
dec
gs
imul
je
jb
je
jb
push
push
inc
jo
push
imul
add
pop
outs
add
xor
and
add
pop
outs
add
push
add
push
add
inc
inc
jb
jo
outs
push
gs
imul
imul
ins
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
je
dec
push
add
arpl
jo
add
jns
add
gs
je
inc
outs
arpl
jo
outs
jb
inc
ins
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
inc
ins
gs
jb
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
xor
inc
imul
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
je
push
je
jb
dec
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
dec
gs
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
outs
jbe
jb
imul
jne
push
add
dec
imul
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
xor
and
outs
add
js
add
xor
add
xor
outs
add
jb
popa
je
inc
push
outs
js
popa
fs
inc
push
fs
push
add
je
inc
outs
arpl
inc
outs
arpl
je
ins
add
je
push
imul
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
inc
jb
outs
addr16
outs
inc
jb
outs
je
addr16
push
imul
pop
push
outs
jo
outs
jae
add
aaa
outs
add
cmp
and
add
cmp
push
outs
push
dec
outs
je
xor
inc
imul
je
jb
push
outs
dec
outs
je
xor
push
outs
dec
outs
je
add
dec
jne
ins
dec
jb
ins
jo
jns
and
add
bound
inc
gs
gs
imul
gs
gs
xor
cs
ins
ins
add
arpl
and
add
ins
arpl
push
arpl
imul
ins
add
outs
add
arpl
push
gs
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
ins
add
popa
jae
ss
je
imul
imul
outs
jb
inc
outs
je
jb
dec
outs
popa
add
je
gs
jo
popa
je
add
fs
imul
dec
je
ins
add
imul
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
add
outs
add
outs
add
je
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
pop
push
outs
jae
je
outs
outs
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
outs
jae
outs
jb
inc
imul
arpl
and
add
jp
add
imul
and
add
ins
gs
je
jb
bound
gs
jae
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
je
jb
bound
gs
and
and
add
outs
outs
add
inc
jb
jo
outs
push
gs
imul
imul
add
jo
add
bound
and
add
inc
add
jb
add
jae
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
push
outs
jb
imul
xor
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
and
and
and
add
jns
add
jne
add
ja
add
js
add
jns
add
jp
add
inc
imul
js
jb
arpl
outs
outs
inc
js
jae
gs
ins
xor
add
jbe
add
ja
add
push
gs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
gs
fs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
push
inc
js
gs
imul
add
jns
add
jp
add
inc
outs
add
gs
inc
imul
and
add
inc
outs
add
inc
outs
add
inc
outs
add
inc
outs
add
dec
outs
add
outs
add
dec
outs
add
jns
add
dec
outs
add
dec
outs
add
dec
outs
add
dec
outs
add
xor
and
arpl
and
add
jbe
inc
imul
outs
add
je
jae
gs
bound
jae
and
add
imul
jns
dec
imul
je
push
imul
imul
outs
arpl
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
push
outs
add
push
outs
add
push
outs
add
cmp
inc
popa
je
push
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
push
outs
add
push
outs
add
push
outs
add
outs
add
push
outs
add
push
outs
add
jb
add
jae
add
pop
outs
add
pop
outs
add
pop
outs
add
cmp
push
je
arpl
jb
arpl
push
je
arpl
jb
ins
add
imul
imul
gs
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
je
gs
outs
add
je
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
inc
gs
dec
dec
data16
je
addr16
inc
popa
je
add
imul
jb
add
outs
je
imul
dec
popa
jae
add
imul
imul
pusha
xor
and
outs
add
xor
and
outs
add
je
popa
jo
and
outs
add
xor
add
inc
data16
xor
popa
jae
jb
push
je
imul
ins
imul
pop
dec
imul
outs
add
aaa
outs
add
cmp
and
add
jb
add
cmp
and
add
je
jns
je
ins
dec
outs
outs
add
popa
jo
and
add
arpl
and
and
add
inc
add
data16
and
add
push
jo
and
add
push
add
data16
imul
ins
jo
outs
popa
inc
popa
inc
inc
je
xor
jae
jns
dec
ja
add
ss
arpl
je
ja
inc
jae
outs
pop
jae
push
data16
je
addr16
inc
push
outs
dec
pop
ja
push
push
inc
inc
jo
dec
je
dec
dec
cmp
jne
push
imul
and
je
dec
popa
imul
add
inc
bound
je
push
ins
dec
push
ja
xor
bound
ja
inc
popa
push
xor
addr16
imul
dec
inc
pop
add
push
bound
jo
imul
add
jb
imul
add
bound
arpl
fs
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
pop
dec
outs
gs
popa
ins
imul
ins
bound
jne
ins
dec
popa
ins
add
cmp
push
je
jo
jo
jne
push
inc
inc
jb
add
inc
xor
gs
arpl
inc
xor
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
jb
ins
gs
addr16
dec
outs
fs
add
fs
add
je
inc
jae
gs
bound
fs
imul
dec
xor
inc
inc
cmp
jns
push
inc
ins
xor
data16
inc
dec
jne
outs
add
push
add
imul
je
dec
popa
push
jb
and
addr16
outs
outs
dec
je
push
xor
xor
push
push
add
inc
cmp
je
dec
push
inc
ins
inc
push
xor
push
pop
add
jo
popa
ins
add
push
jb
gs
imul
dec
popa
ins
gs
imul
jae
outs
outs
add
jo
add
jno
add
dec
dec
pop
push
je
push
bound
inc
push
imul
dec
cmp
xor
xor
popa
push
add
bound
jns
jo
ins
imul
add
ja
jne
imul
jo
ins
imul
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
gs
popa
ins
jne
add
je
jb
add
popa
aaa
jo
je
push
popa
push
imul
dec
dec
xor
pop
cmp
cmp
push
push
pop
dec
add
dec
add
xor
add
xor
add
aaa
add
cmp
cmp
popa
add
bound
and
add
fs
add
push
add
je
jae
push
push
popa
outs
push
addr16
ins
cmp
jb
inc
jo
dec
ins
xor
xor
push
dec
imul
add
ins
add
outs
add
outs
add
jo
add
jb
add
jae
add
je
add
arpl
gs
inc
js
cmp
cmp
jno
add
push
cmp
jbe
imul
xor
dec
gs
add
popa
imul
je
add
popa
imul
je
jae
dec
jae
gs
je
and
add
inc
add
push
imul
jbe
push
fs
add
jno
ins
push
je
ins
push
push
cmp
inc
push
xor
add
dec
add
fs
outs
addr16
jae
jbe
jbe
push
ins
je
outs
cmp
ja
gs
data16
pushw
push
je
jns
xor
xor
push
ja
pop
ins
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
push
add
pop
add
pop
add
pop
add
xor
jb
push
inc
xor
push
ss
pop
addr16
ins
inc
jns
cmp
outs
dec
dec
jne
jb
bound
push
imul
add
cmp
and
add
bound
and
add
data16
jae
dec
pop
je
pop
jb
inc
gs
push
push
pop
dec
add
xor
aaa
jbe
popa
ss
popa
jne
imul
push
outs
je
ins
dec
jne
add
inc
imul
add
outs
data16
outs
data16
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
outs
imul
push
inc
je
dec
data16
jns
jno
cmp
add
bound
je
pop
push
jb
xor
ja
and
add
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
gs
gs
jae
ins
imul
add
js
outs
addr16
add
xor
arpl
dec
ins
inc
inc
dec
xor
outs
push
popa
inc
push
addr16
push
push
ins
fs
cmp
js
and
data16
xor
and
data16
xor
add
xor
data16
aaa
data16
cmp
and
data16
popa
add
bound
and
add
add
add
xor
js
je
dec
ja
inc
dec
push
dec
addr16
ins
add
push
push
addr16
inc
bound
push
js
dec
xor
and
add
ins
add
ins
add
jo
add
jae
add
imul
addr16
outs
inc
popa
dec
dec
dec
ins
cmp
xor
dec
xor
inc
cmp
dec
bound
pop
outs
xor
dec
pop
add
je
outs
jne
je
dec
jae
ins
jne
push
ins
pop
outs
dec
jns
push
jo
push
inc
push
arpl
push
jbe
imul
inc
push
addr16
dec
dec
push
dec
jae
push
bound
add
ja
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
xor
and
add
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
aaa
add
ins
outs
jbe
add
push
pop
dec
dec
push
inc
dec
dec
ss
ja
add
xor
outs
addr16
jo
dec
dec
push
push
inc
xor
push
inc
add
outs
imul
jb
inc
gs
imul
arpl
and
and
add
pushw
addr16
outs
jb
push
outs
fs
outs
arpl
jo
gs
popa
je
add
jb
imul
je
imul
outs
outs
inc
ins
popa
imul
addr16
and
add
imul
push
dec
addr16
popa
gs
popa
addr16
inc
gs
pop
outs
add
push
push
push
cmp
jne
jns
gs
dec
add
imul
ins
push
inc
dec
ja
dec
inc
addr16
push
dec
push
push
inc
outs
imul
imul
jne
xor
ja
push
popa
inc
add
outs
push
add
jo
add
jno
add
popa
imul
jae
popa
jo
inc
jb
outs
fs
jns
popa
ins
add
imul
fs
jns
jne
bound
add
jb
add
jae
add
je
add
fs
inc
cmp
push
dec
dec
inc
push
add
cmp
pop
addr16
jo
push
outs
jb
js
push
aaa
push
add
imul
fs
jns
jne
bound
add
jo
jb
outs
fs
jns
popa
ins
add
popa
imul
jae
and
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
jb
add
jb
outs
je
js
gs
imul
js
add
push
push
ins
fs
outs
outs
add
push
push
pop
dec
jae
je
je
arpl
addr16
inc
imul
add
je
dec
popa
jae
ins
gs
outs
je
jns
add
je
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
je
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
inc
gs
jb
popa
jns
popa
outs
imul
gs
dec
jae
popa
ins
jne
push
jns
add
je
dec
jae
jb
ins
imul
je
dec
jae
outs
jne
add
push
push
gs
outs
arpl
jno
popa
ins
jae
and
and
add
push
push
pop
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
pop
push
pop
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
jo
popa
arpl
and
add
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
dec
gs
outs
ins
ins
arpl
outs
add
imul
inc
outs
arpl
outs
je
dec
gs
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
je
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
jbe
jb
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
push
push
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
and
push
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
xor
and
push
pop
inc
popa
jae
push
jns
add
je
imul
imul
ins
popa
addr16
addr16
dec
jae
imul
gs
dec
jae
outs
imul
xor
push
add
cmp
and
push
push
push
cmp
xor
dec
push
push
jb
xor
inc
pop
jne
inc
inc
imul
push
popa
ins
inc
js
gs
imul
jne
addr16
popa
jne
arpl
add
bound
imul
add
ins
gs
outs
outs
add
je
imul
dec
jo
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
dec
ss
inc
xor
jno
dec
jo
ss
pop
dec
dec
add
push
push
popa
ins
addr16
imul
jb
push
add
pop
add
imul
ins
bound
inc
add
pop
jo
addr16
pop
inc
aaa
cmp
dec
xor
outs
inc
inc
push
dec
jb
aaa
addr16
push
xor
jae
and
add
imul
imul
dec
addr16
push
push
addr16
push
inc
inc
push
ins
push
dec
add
push
jo
imul
jno
xor
inc
dec
push
dec
jae
ins
jo
jns
and
add
push
add
imul
add
jb
je
gs
ins
add
ins
imul
dec
imul
push
jne
dec
dec
push
add
push
bound
push
ja
cmp
gs
gs
cmp
inc
imul
gs
add
ins
imul
ins
inc
js
gs
imul
dec
jbe
addr16
aaa
bound
xor
dec
xor
push
addr16
push
push
push
ss
dec
dec
jne
add
push
arpl
gs
outs
add
outs
fs
add
ins
ins
bound
imul
gs
ins
je
and
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
imul
jo
imul
addr16
push
addr16
inc
xor
imul
push
jno
je
jb
pop
xor
inc
push
inc
bound
add
outs
push
outs
fs
gs
jb
add
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
inc
popa
outs
inc
outs
outs
je
outs
jne
add
push
outs
inc
outs
outs
je
outs
jne
add
popa
je
jb
dec
popa
ins
add
inc
imul
and
add
dec
imul
and
add
dec
imul
jae
arpl
imul
je
outs
outs
add
outs
inc
outs
outs
je
outs
jne
add
arpl
imul
add
inc
jns
inc
addr16
gs
jne
xor
inc
bound
inc
popa
dec
push
push
inc
addr16
jne
inc
addr16
cmp
xor
push
arpl
imul
add
jo
jb
inc
js
gs
imul
add
push
imul
and
add
push
imul
add
jb
jb
gs
popa
add
jo
jb
dec
add
push
push
bound
js
dec
jbe
jne
push
bound
inc
inc
ins
cmp
jae
push
jno
outs
outs
outs
pop
xor
je
jo
inc
popa
imul
outs
jb
gs
popa
add
jo
jb
dec
inc
add
push
imul
and
add
xor
gs
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
dec
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
outs
add
jb
popa
ins
imul
gs
add
fs
popa
ins
jne
add
je
outs
je
xor
ins
gs
outs
fs
inc
add
push
arpl
imul
add
arpl
je
outs
outs
push
je
arpl
gs
push
jne
ja
je
jae
jne
ss
jae
xor
pop
imul
push
dec
dec
xor
dec
inc
pop
add
gs
popa
ins
imul
jae
and
add
inc
outs
outs
je
push
add
push
push
gs
jp
add
imul
js
inc
push
add
je
push
jae
dec
outs
gs
outs
outs
imul
push
xor
cmp
inc
dec
dec
imul
dec
pop
gs
pop
dec
push
jno
outs
inc
push
ins
xor
push
ins
push
and
add
popa
add
outs
push
and
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
popa
ins
gs
outs
jb
add
jns
add
imul
je
jb
jae
dec
outs
push
popa
imul
jo
outs
outs
je
addr16
inc
gs
outs
dec
outs
fs
je
inc
jb
jo
imul
ja
ins
popa
add
je
je
ins
add
outs
je
outs
ins
push
je
ins
gs
jae
je
dec
outs
je
jb
popa
ins
add
fs
push
imul
pop
push
popa
bound
outs
jo
je
js
add
jp
add
inc
ja
js
outs
jno
arpl
gs
push
push
pop
add
xor
je
dec
jb
je
xor
push
inc
inc
add
je
and
add
inc
push
and
and
add
inc
push
and
add
dec
push
and
add
jae
gs
push
outs
jae
addr16
inc
outs
outs
je
outs
ins
inc
popa
jb
add
outs
add
je
inc
ins
imul
add
ja
imul
pop
inc
outs
outs
je
outs
ins
dec
imul
push
popa
ja
arpl
add
je
push
imul
je
inc
outs
je
outs
ins
add
jae
gs
inc
outs
ins
outs
jb
add
je
push
imul
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
dec
ins
ja
gs
dec
inc
bound
dec
ins
xor
pop
inc
imul
inc
push
xor
dec
inc
imul
data16
push
jne
dec
arpl
push
je
je
add
dec
push
and
add
push
push
push
imul
outs
js
and
add
ins
push
imul
inc
jne
jae
jb
add
je
dec
popa
outs
add
jb
outs
jb
jae
je
inc
jne
jae
jb
push
gs
outs
outs
ins
push
imul
dec
ins
popa
add
je
push
imul
add
arpl
gs
outs
js
imul
add
dec
jo
aaa
dec
xor
je
xor
js
add
inc
pop
imul
pop
data16
fs
push
js
and
and
add
push
push
and
add
push
imul
push
add
je
push
imul
push
gs
ins
imul
pop
pop
dec
ins
jb
jns
xor
imul
inc
dec
inc
pop
dec
push
dec
dec
jb
jo
arpl
bound
and
push
and
push
and
push
and
add
xor
push
and
push
inc
gs
jns
gs
and
push
push
push
inc
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
add
push
gs
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
bound
and
add
imul
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
imul
imul
imul
push
inc
outs
outs
ins
gs
outs
add
inc
push
inc
inc
dec
push
xor
bound
inc
dec
push
inc
add
inc
xor
arpl
js
xor
jno
push
dec
add
outs
fs
gs
push
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
inc
gs
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
push
pop
inc
dec
ins
dec
push
ins
push
push
dec
push
aaa
push
add
jbe
xor
bound
jns
push
inc
pop
jns
add
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
push
dec
aaa
jne
push
imul
imul
inc
xor
push
gs
je
dec
cmp
push
add
imul
and
add
pushw
dec
outs
push
jbe
imul
inc
xor
add
je
push
arpl
outs
ja
push
push
aaa
bound
ins
add
jne
add
jbe
add
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
xor
xor
dec
push
jne
jno
je
pop
ins
jno
dec
add
dec
jno
dec
xor
jne
xor
fs
dec
jne
push
gs
imul
add
pop
ss
dec
jae
gs
gs
xor
dec
jae
outs
jb
jae
popa
je
outs
outs
add
jb
imul
add
push
imul
push
imul
push
imul
push
imul
arpl
ins
add
je
push
outs
jo
inc
imul
push
imul
push
cmp
push
add
push
gs
dec
imul
jno
cmp
add
push
imul
pop
imul
pop
imul
pop
imul
xor
and
imul
xor
and
imul
xor
add
xor
imul
cmp
and
imul
popa
ins
add
bound
arpl
fs
add
gs
add
data16
add
ins
add
push
ins
push
jb
je
jb
outs
popa
ins
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
jae
push
addr16
gs
dec
jns
xor
ins
jns
push
push
jbe
add
xor
ins
dec
xor
imul
pop
add
imul
ins
add
outs
ins
add
jo
add
jno
add
jb
add
je
outs
outs
add
jae
add
je
add
outs
gs
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
jbe
inc
imul
add
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
ins
gs
imul
gs
push
imul
pop
inc
gs
jne
je
js
add
je
inc
imul
je
inc
imul
and
and
add
dec
ins
add
outs
jb
add
dec
ins
add
push
ins
add
je
inc
push
add
push
ins
add
push
ins
add
push
ins
add
outs
arpl
inc
jbe
outs
je
jb
jae
dec
outs
inc
ins
outs
jae
outs
add
je
dec
jae
ins
imul
add
arpl
add
je
inc
jo
jb
ins
outs
je
je
je
add
popa
jb
ins
outs
je
je
je
add
push
ins
add
push
ins
add
push
ins
add
push
gs
js
gs
imul
ins
gs
jb
jo
jb
inc
js
gs
imul
je
jb
jae
addr16
inc
popa
outs
inc
outs
arpl
add
je
inc
outs
outs
je
imul
cmp
xor
jbe
imul
dec
bound
add
jae
pop
xor
push
ja
dec
outs
push
push
pop
inc
add
outs
ins
add
outs
ins
add
jne
add
jbe
add
arpl
imul
je
outs
outs
inc
jbe
outs
je
jb
jae
jae
je
dec
arpl
add
dec
cmp
dec
data16
xor
push
arpl
gs
add
outs
xor
dec
push
xor
addr16
push
push
ins
inc
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
js
add
jbe
imul
ins
bound
add
outs
fs
dec
imul
gs
outs
fs
js
gs
imul
push
ins
push
dec
jne
push
push
fs
add
push
push
dec
jae
jbe
push
dec
ja
jno
xor
and
and
jb
jae
jne
arpl
add
xor
xor
xor
sub
sub
sub
sub
xor
arpl
arpl
ss
jnp
xor
xor
popa
sub
sub
sub
sub
xor
xor
xor
jge
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
ins
popa
addr16
je
jb
bound
add
jne
addr16
imul
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jae
ins
gs
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
imul
je
outs
jb
inc
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
inc
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
add
bound
jb
imul
imul
imul
outs
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
add
add
push
add
pop
add
push
add
dec
add
add
add
add
ins
add
inc
add
je
dec
add
add
add
add
dec
add
push
add
add
add
js
dec
add
add
dec
add
push
add
add
inc
add
dec
add
xor
jae
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
aaa
add
add
add
add
add
cmp
sub
add
add
sub
add
add
sub
add
add
add
add
add
xor
bound
arpl
arpl
add
xor
add
sub
add
push
add
pop
add
push
add
dec
add
add
add
add
ins
add
inc
add
je
dec
add
add
add
add
dec
add
push
add
add
add
js
dec
add
add
dec
add
push
add
add
inc
add
dec
add
xor
cmp
add
pop
add
aaa
add
add
add
add
add
cmp
sub
add
add
sub
add
add
sub
add
add
add
add
add
xor
bound
arpl
arpl
add
xor
add
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
sub
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
adc
push
add
jb
jae
imul
cmp
add
add
jne
ins
add
add
add
add
jne
je
jb
popa
add
or
jne
ins
add
and
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
jb
jae
imul
cmp
add
ins
add
add
add
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
jnp
xor
add
add
add
add
add
add
add
add
cmp
cmp
popa
add
add
aaa
add
add
add
add
add
popa
add
xor
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
xor
xor
arpl
aaa
add
sub
add
add
sub
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
arpl
jge
add
add
pop
jno
sbb
xchg
in
cmp
add
sub
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
inc
shld
cmps
pop
mov
xor
jns
repnz
fstp
loop
sub
jmp
xchg
cs
add
sbb
xor
and
and
inc
popf
adc
ror
xchg
retf
enter
or
in
aad
test
rcr
mov
sbb
mov
out
jb
outs
int
mov
jge
and
jp
push
sbb
mov
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
or
add
add
add
add
or
add
add
push
or
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
add
add
add
add
sub
jg
aad
cmp
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
pop
push
adc
adc
push
adc
or
push
adc
ins
pop
push
adc
sbb
pop
add
push
adc
adc
adc
or
adc
ins
push
adc
sbb
add
adc
pop
add
adc
adc
add
add
add
or
pop
add
or
or
add
adc
pop
add
ins
adc
add
adc
push
pop
add
sbb
sbb
add
adc
add
or
or
adc
or
adc
add
add
sbb
pop
add
add
add
add
add
add
add
or
add
jns
pop
add
jns
jns
add
adc
jge
pop
add
push
pop
adc
add
add
add
pop
add
add
add
push
add
add
add
add
xor
add
adc
add
add
add
push
adc
push
pop
add
add
add
adc
add
adc
add
add
add
add
add
pop
add
sub
adc
adc
push
adc
xor
push
adc
ins
pop
push
adc
cmp
adc
xor
adc
xor
adc
ins
push
adc
cmp
add
adc
pop
add
xor
xor
add
adc
push
pop
add
xor
xor
add
cmp
pop
add
cmp
cmp
or
adc
or
adc
add
add
cmp
push
adc
adc
or
add
add
add
add
add
adc
add
adc
adc
add
add
adc
add
sysret
add
adc
xchg
or
or
and
add
adc
or
and
add
adc
and
add
push
or
add
sub
add
sbb
add
add
sbb
and
adc
mov
push
and
add
xor
add
adc
push
or
push
adc
pop
add
pusha
or
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
push
or
push
push
add
sbb
add
adc
push
add
and
adc
pop
add
js
js
or
adc
and
adc
add
je
je
or
adc
add
adc
adc
adc
adc
adc
add
add
or
add
add
adc
adc
adc
add
nop
add
mov
pop
add
or
add
or
mov
pop
add
or
adc
adc
adc
add
cwde
add
add
pop
add
or
add
jns
add
sbb
or
add
sbb
push
add
sbb
adc
add
add
add
add
js
sub
adc
add
adc
add
test
nop
add
mov
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
jl
push
sbb
or
adc
push
pop
push
and
adc
adc
adc
add
adc
adc
add
or
adc
mov
adc
or
or
xor
sbb
or
adc
pop
and
xor
or
push
adc
adc
pusha
adc
add
adc
adc
pusha
adc
add
push
sbb
add
sbb
adc
adc
pusha
adc
pop
adc
or
adc
adc
add
adc
adc
adc
add
or
or
adc
adc
pop
adc
add
xor
adc
adc
add
or
or
add
xor
mov
push
and
add
sbb
or
xor
sbb
adc
xor
adc
or
or
and
adc
or
adc
add
or
or
add
xor
mov
or
add
adc
adc
or
adc
or
add
xor
add
add
or
mov
adc
adc
add
adc
push
and
add
adc
or
add
or
adc
add
or
or
mov
or
sbb
and
add
or
adc
add
xor
sbb
sbb
or
add
xor
add
add
sbb
add
add
add
or
or
or
or
add
add
cmp
cmp
pusha
sub
push
push
push
push
push
push
adc
adc
rol
and
or
jno
jno
ins
adc
sbb
or
les
enter
adc
adc
adc
adc
add
add
jno
add
adc
add
sbb
add
add
cmp
pop
or
or
or
or
add
push
push
add
add
push
add
add
pop
add
pop
add
add
xor
or
xor
push
pop
add
or
or
or
add
add
adc
add
sbb
adc
add
add
add
add
push
or
add
sbb
sbb
pop
add
add
jno
sbb
sbb
sbb
add
add
sbb
adc
or
or
or
or
or
or
or
or
or
add
adc
add
or
adc
push
or
and
adc
adc
or
adc
add
add
add
add
adc
pop
add
or
or
icebp
add
add
add
jno
sbb
add
add
adc
add
or
add
add
add
adc
add
add
or
add
add
or
xor
cmp
add
or
add
or
xor
or
add
or
or
or
or
add
adc
push
push
add
or
adc
jno
adc
adc
add
add
add
add
or
add
push
add
or
pop
push
sbb
or
add
push
push
push
adc
add
or
add
adc
add
push
add
push
pop
and
add
sbb
add
add
sbb
add
adc
sbb
push
and
add
and
pop
pop
or
or
or
or
add
add
and
sbb
or
adc
or
adc
sbb
sbb
sbb
sbb
sbb
add
add
adc
add
add
push
push
add
push
push
push
push
pop
add
adc
push
adc
and
add
push
or
add
adc
or
pop
add
or
add
add
adc
add
sbb
sub
add
or
or
or
or
sbb
or
or
or
or
or
add
cmp
pop
or
push
sbb
push
push
push
push
or
or
or
push
add
add
push
push
push
push
add
add
or
add
adc
add
jno
or
add
adc
add
add
push
push
add
add
sub
add
push
pop
add
sbb
or
add
adc
add
adc
add
adc
push
and
adc
add
adc
add
add
add
add
push
pop
add
add
adc
add
add
adc
add
sbb
add
add
sub
pop
sbb
add
sbb
push
push
push
add
sbb
sbb
or
sbb
push
sbb
sbb
sbb
add
add
add
and
add
adc
and
sbb
add
add
push
add
add
push
add
pop
pop
sbb
push
add
or
add
push
or
add
fstp
add
add
add
push
push
add
add
or
pop
add
or
adc
or
or
add
or
add
add
add
adc
cmp
add
add
push
push
and
add
adc
or
add
adc
sbb
jno
and
adc
sbb
and
sbb
push
push
add
adc
add
sbb
or
or
add
jno
jno
sbb
and
adc
push
adc
add
adc
add
sub
sbb
pop
push
push
or
push
or
pop
add
or
add
add
push
add
add
add
add
pop
add
sbb
sysret
or
sbb
sbb
add
adc
adc
add
sub
add
and
add
adc
and
add
sub
push
and
add
and
add
sbb
add
adc
add
sub
push
adc
adc
sbb
add
add
sbb
add
add
push
adc
add
cmp
cmp
or
or
add
or
add
or
or
or
sbb
add
or
or
or
or
or
add
add
adc
sbb
add
or
push
push
push
adc
sbb
push
or
push
sbb
adc
push
sbb
add
add
add
and
push
adc
xor
add
mov
add
add
adc
or
add
or
add
add
sbb
sbb
add
jno
sbb
sbb
sbb
sbb
push
pop
or
push
push
push
adc
or
or
add
push
adc
add
adc
push
push
push
pop
add
add
sbb
and
movlps
adc
add
sbb
add
adc
add
add
add
add
adc
adc
sbb
adc
adc
sbb
push
adc
push
push
adc
sbb
push
sbb
push
sbb
push
or
or
adc
add
sub
add
sbb
jns
sbb
adc
add
add
add
jns
sbb
adc
add
sbb
adc
sbb
adc
add
or
add
adc
or
push
add
jno
sbb
sbb
add
add
or
pop
add
push
add
or
xor
adc
sbb
pop
sbb
add
push
push
sbb
and
add
cmp
push
or
cmp
push
and
add
xor
add
adc
sub
add
xor
adc
push
add
and
adc
sub
xor
sub
or
or
or
sbb
or
sbb
mov
add
movs
add
test
or
adc
adc
adc
adc
adc
or
push
add
or
add
sbb
add
add
adc
push
adc
or
or
add
gs
or
pop
sbb
xor
push
sbb
or
or
adc
adc
push
adc
add
push
adc
sbb
or
add
push
sbb
add
adc
push
adc
add
adc
add
push
sbb
add
push
push
add
sbb
add
or
sub
pop
and
adc
adc
or
or
sbb
add
or
or
adc
add
add
sbb
sbb
add
adc
or
add
or
add
add
adc
adc
pop
or
push
push
push
push
adc
jmp
sbb
add
add
add
and
add
and
fst
sub
push
adc
add
xor
adc
adc
adc
add
xor
add
push
or
xor
or
add
or
xor
add
add
add
pop
add
adc
or
add
sbb
push
add
adc
push
add
push
adc
adc
adc
or
add
or
or
or
add
sbb
push
add
add
xor
add
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
and
add
cmp
add
add
cmp
sub
push
sbb
adc
add
or
add
xor
push
pop
add
add
jno
sbb
add
or
or
add
adc
add
push
or
add
sbb
xchg
or
add
gs
or
add
add
or
adc
adc
add
sbb
add
or
cmp
or
adc
or
add
add
sbb
and
adc
dec
or
or
sbb
sbb
sbb
cmp
add
or
sbb
add
sbb
adc
or
adc
add
or
add
adc
add
add
adc
add
xor
add
add
add
add
jno
sbb
sbb
sbb
or
add
adc
or
or
or
or
or
or
pop
adc
or
adc
adc
adc
sbb
add
or
add
jno
and
adc
add
sbb
add
and
adc
and
sbb
add
sbb
and
adc
adc
adc
or
add
adc
sbb
or
add
adc
push
add
adc
add
adc
adc
or
add
adc
adc
pop
add
add
add
add
or
add
or
xor
adc
xchg
push
adc
add
adc
or
adc
sbb
sbb
sbb
sbb
add
add
or
adc
adc
add
add
or
push
or
add
adc
push
add
add
xor
add
add
adc
or
add
add
adc
adc
or
or
or
or
or
sbb
add
or
or
sbb
or
or
or
add
adc
and
add
xor
and
add
xor
in
push
adc
pop
add
add
add
imul
push
adc
push
add
pop
add
xor
push
and
adc
add
adc
push
and
adc
push
push
push
sbb
or
push
adc
push
sbb
push
or
add
add
sbb
adc
and
sbb
and
adc
adc
add
push
sbb
sbb
add
or
jno
or
push
add
add
add
adc
add
or
adc
or
add
add
add
or
pop
or
or
or
pop
adc
or
or
add
adc
adc
add
pop
add
adc
sbb
add
push
add
add
or
push
sbb
sub
add
adc
xor
sub
add
push
sbb
sbb
push
add
push
adc
or
pop
add
or
sub
or
adc
add
or
and
adc
push
and
add
adc
sbb
push
adc
sub
add
adc
add
adc
adc
adc
add
sub
test
push
add
push
add
add
add
rol
add
nop
push
and
adc
add
adc
or
aam
or
add
adc
or
and
add
add
add
add
adc
push
adc
add
push
adc
push
sbb
push
adc
push
adc
cmp
push
adc
adc
adc
push
adc
push
or
push
adc
adc
push
add
adc
sub
jno
adc
or
adc
sub
push
or
add
adc
sbb
sbb
jns
jns
push
or
xor
xor
adc
adc
push
and
adc
add
adc
sbb
or
add
or
sbb
add
adc
pop
add
or
add
jns
add
add
adc
adc
push
or
push
or
gs
push
push
adc
in
add
jno
jno
jno
or
or
or
or
push
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
push
adc
or
adc
adc
adc
adc
adc
adc
or
adc
adc
or
or
add
adc
add
or
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
or
add
jno
add
adc
adc
adc
sub
adc
and
adc
adc
pop
adc
adc
and
adc
sbb
and
add
adc
pop
sbb
sbb
jns
add
adc
adc
or
or
sbb
adc
adc
add
or
adc
adc
and
sbb
add
adc
push
add
add
or
and
adc
add
sbb
or
adc
add
dec
sbb
sbb
adc
or
or
add
sub
adc
adc
adc
or
and
add
sub
adc
add
sub
adc
add
sub
adc
jno
sldt
sbb
cmp
adc
adc
adc
jns
push
sbb
and
add
pop
and
add
jns
add
add
jno
and
add
sub
sub
xchg
or
add
adc
push
adc
and
adc
and
add
imul
imul
push
add
add
imul
adc
adc
les
xor
enter
adc
add
or
adc
add
adc
sub
adc
sbb
and
add
add
add
pop
add
or
and
add
sbb
jns
and
sbb
adc
and
or
and
adc
mov
add
push
add
adc
push
adc
sbb
push
or
add
or
and
add
adc
and
adc
adc
add
pop
pop
and
add
sbb
add
adc
sub
adc
adc
add
sub
sub
adc
add
or
pop
or
cmp
xchg
adc
adc
or
loope
and
or
or
or
add
adc
or
add
adc
add
jmp
adc
adc
adc
sub
push
adc
adc
add
cmp
and
add
pop
push
push
and
add
cmp
and
add
or
cmp
and
add
cmp
add
xor
and
add
cmp
adc
adc
or
add
jns
add
sbb
jns
pop
and
add
add
pop
add
jno
jns
pop
and
add
add
imul
mov
add
jno
add
pop
or
jns
adc
adc
gs
sbb
adc
or
push
and
adc
add
or
sbb
adc
jns
or
adc
sbb
or
add
adc
add
adc
and
adc
push
push
sbb
add
adc
adc
adc
add
or
add
cmp
add
adc
and
push
adc
cmp
add
adc
sbb
sub
adc
and
in
push
adc
adc
push
or
xor
adc
and
add
cmp
pop
add
and
and
adc
add
xor
push
adc
adc
xchg
adc
add
adc
adc
adc
adc
add
inc
or
add
adc
or
adc
sbb
sbb
add
add
add
add
push
and
add
adc
add
dec
jns
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
xor
add
cmp
outs
gs
je
and
je
outs
fs
push
push
add
jns
adc
outs
gs
je
and
je
outs
fs
add
add
add
and
add
sbb
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
jbe
add
jae
and
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
imul
sub
popa
jae
je
imul
outs
ja
popa
ins
jae
and
ins
jae
and
outs
and
and
imul
jae
arpl
jae
outs
and
je
je
and
outs
ja
je
and
arpl
outs
js
add
or
add
add
add
or
add
outs
fs
add
add
and
add
xor
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
pusha
add
add
push
push
add
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
mov
jp
add
bound
stc
jmp
dec
sbb
or
lahf
(bad)
mov
and
(bad)
mov
loop
add
xor
inc
leave
push
iret
out
xchg
fisttp
movs
cld
call
add
mov
dec
pop
or
cmps
and
into
(bad)
fiadd
pop
jg
dec
popa
ffree
fisttp
mov
and
shl
lahf
aam
jmp
mov
mov
inc
in
or
movs
jbe
sti
fmul
shl
fsub
or
(bad)
mov
popf
fist
test
leave
test
out
or
arpl
fbld
rcl
or
mov
mov
adc
sbb
or
sbb
sti
into
mov
xor
push
push
jmp
or
in
das
stos
adc
imul
and
dec
and
and
outs
sub
dec
pop
in
outs
fsubr
xlat
jl
mov
test
inc
inc
rol
aaa
xchg
repz
add
mov
xor
fiadd
pop
pop
pop
jb
mov
or
cmp
jl
fxch
xchg
dec
out
out
out
dec
cld
and
push
adc
jmp
dec
iret
fldcw
aam
jae
pop
jmp
dec
clc
dec
cwde
mov
mov
call
jle
xor
shl
mov
xor
je
adc
push
ins
scas
pop
or
add
dec
push
cmp
popf
xor
(bad)
jle
dec
loop
jecxz
mov
adc
push
sbb
sti
shr
shl
(bad)
cli
mov
or
movs
out
cmps
fmul
into
es
fcmovnu
jae
je
loope
jg
in
aad
(bad)
mov
push
push
mov
or
outs
jbe
in
hlt
repnz
inc
int3
hlt
lods
cmp
outs
data16
int3
lds
pop
call
data16
call
cmp
cmps
pop
ds
mov
pop
push
jg
sahf
int3
pop
jmp
pop
jns
xor
rcr
movs
mov
loopne
xchg
jmp
sbb
shl
mov
add
fptan
outs
mov
pop
inc
lahf
imul
arpl
movs
mov
xchg
fwait
out
cmp
add
loop
lods
inc
mov
mov
or
inc
xor
sub
aaa
adc
push
cmps
dec
test
and
cmc
mov
jns
test
bound
pop
int
inc
and
mov
dec
push
test
xchg
sub
mov
cmps
push
cmc
retf
xor
jo
push
je
sbb
and
dec
sbb
lock
cdq
add
xlat
push
push
or
cmps
test
mov
mov
or
mov
ret
cmp
cli
rcl
cmps
das
push
sar
pop
setle
test
into
addr16
and
hlt
repnz
addr16
dec
(bad)
fadd
scas
scas
mov
in
mov
jmp
jg
push
adc
dec
icebp
in
lods
je
pusha
add
mov
mov
lock
push
int3
in
jl
fnstsw
(bad)
imul
inc
enter
ins
loop
fsubr
daa
fbstp
mov
cs
add
cwde
sbb
push
stos
pop
mov
jmp
clc
pop
ficom
mov
fwait
xor
push
jns
mov
(bad)
scas
and
push
mov
pop
fcomp
int
dec
cmps
adc
movs
jo
ret
stos
mov
jbe
jmp
test
fstp
fcomp
mov
in
lea
adc
inc
dec
mov
loope
(bad)
repnz
push
jbe
cmp
mov
fs
inc
push
jb
test
push
jmp
pop
inc
dec
cmp
loope
jno
mov
add
jmp
stc
out
data16
xchg
loopne
sbb
outs
imul
xor
mul
push
int3
pushf
mov
popa
call
jne
shr
sbb
in
xor
call
pop
js
cmp
and
je
stos
das
pop
jns
adc
or
sbb
and
dec
inc
nop
add
xor
inc
or
adc
(bad)
inc
int3
jnp
sti
outs
clc
call
sub
pop
cmp
fdivp
outs
xor
imul
mov
idiv
mov
and
cli
pushf
push
push
loopne
fucomp
sbb
mov
gs
dec
sti
xchg
jle
or
hlt
xor
test
and
pop
out
adc
mov
ret
mov
cmp
mov
pminub
xor
call
icebp
mov
dec
dec
std
test
mov
xor
inc
inc
fdiv
cdq
cmp
xor
adc
jmp
pushf
pop
push
fbld
push
mov
mov
cmps
pusha
loop
out
cdq
in
cmps
fmul
pop
jg
push
sub
repnz
pop
jmp
test
mov
imul
adc
mov
inc
rol
xchg
out
cmp
mov
in
lea
mov
movs
xchg
mov
pop
adc
cmp
int3
xor
pushf
push
jnp
dec
pop
into
xlat
pop
dec
fcom
int3
in
call
les
sbb
add
and
jo
jmp
mov
jb
popf
sbb
inc
push
pop
mov
dec
inc
push
frstor
push
mov
jge
call
test
xlat
dec
fnstsw
test
aas
pop
call
(bad)
push
gs
dec
sub
repnz
cmp
pop
sbb
jp
pop
in
in
daa
add
sub
add
fmul
call
movs
shl
inc
push
jp
push
xor
xor
popf
mov
pusha
jae
(bad)
xchg
sti
inc
add
inc
and
test
mov
xchg
scas
pop
pop
cmp
fldenv
js
jae
pop
iret
jg
inc
lock
jg
xlat
nop
das
dec
pop
movs
aad
adc
dec
(bad)
fmul
pop
sub
aad
sar
stos
mov
push
jne
sbb
leave
push
push
int
iret
popa
or
and
sahf
push
or
mov
aas
test
mov
cmp
adc
daa
pop
movs
xor
jno
scas
lock
div
xor
test
mov
push
xor
popf
xor
or
sub
mov
iret
dec
mov
es
or
fwait
adc
jle
stos
mov
repnz
mov
xlat
or
icebp
in
ret
pop
dec
(bad)
into
call
or
bndldx
inc
fstp
add
rol
fdiv
call
popa
cmp
out
add
(bad)
repnz
sar
arpl
fsub
xchg
dec
xchg
cld
shr
dec
push
in
dec
(bad)
push
xchg
int3
scas
dec
and
or
stc
gs
xchg
(bad)
xlat
pop
lods
es
jl
add
je
popa
and
ret
mov
ins
shl
xchg
(bad)
outs
inc
push
out
ret
mov
adc
inc
or
retf
call
into
and
enter
enter
stos
xor
scas
mov
sbb
arpl
loopne
loopne
push
cmc
add
cwde
adc
inc
sbb
sbb
mov
pushf
test
pop
neg
ret
es
mov
mov
ins
or
pop
fdiv
pop
sub
retf
movs
or
mov
push
adc
sahf
xlat
dec
mov
fistp
pop
movs
xor
les
xchg
lahf
sub
pushf
out
jb
test
lods
adc
push
mov
aam
fst
cmc
ds
push
mov
rol
cwde
or
inc
mov
jb
es
jbe
out
ja
or
add
cmp
sub
std
push
mov
jmp
or
inc
fldenv
push
mov
add
int
dec
stos
cmp
push
push
inc
xor
xor
jp
sar
sbb
cmp
xchg
(bad)
mov
retf
sub
ja
sti
imul
push
pop
imul
(bad)
and
cmp
pop
outs
les
out
pop
cwde
cdq
xchg
jg
dec
aad
(bad)
test
push
cwde
retf
std
nop
das
xchg
fisttp
retf
pop
sub
not
repz
nop
loop
inc
js
out
div
mov
neg
sbb
punpckhwd
cmp
lock
shl
jae
iret
adc
ins
inc
lock
add
sbb
add
fstp
ds
ds
cmp
fwait
lock
pop
out
test
or
cmp
ja
or
(bad)
pop
jmp
mov
ror
inc
dec
fsub
call
xor
sub
test
iret
movs
push
ffreep
loope
cmp
ins
add
sbb
pop
inc
movs
mov
adc
std
daa
aad
jmp
aaa
hlt
xchg
movs
das
dec
push
repnz
retf
call
mov
dec
ss
mov
in
fcomp
(bad)
adc
pushf
cmp
cmp
sub
push
nop
aas
and
inc
jmp
outs
cld
shl
mov
mov
lahf
ja
adc
jmp
mov
sbb
push
ins
and
jno
xor
xor
adc
sti
rcr
pop
adc
out
cld
rcl
fsub
push
mov
sbb
arpl
in
push
rcl
xchg
sahf
mov
push
xor
sahf
fstp
jns
in
jno
mov
fdiv
lahf
add
cmp
loopne
pusha
or
ror
popa
cmps
int3
jnp
aaa
mov
add
je
add
rol
shl
pop
into
adc
inc
pop
movs
aad
dec
push
std
push
or
int3
cmps
mov
(bad)
ds
outs
dec
xchg
and
and
clc
hlt
sahf
in
inc
sahf
dec
jns
or
aad
mov
outs
jae
sahf
(bad)
pop
push
cmps
sub
mov
sbb
jns
mov
das
or
into
loopne
loopne
inc
aas
jb
pop
in
jg
repnz
neg
pop
into
push
push
inc
jb
push
movs
pop
lock
sub
stos
pop
inc
fistp
aas
loop
sbb
xlat
div
out
push
push
icebp
adc
xlat
jecxz
inc
loope
inc
sahf
call
aaa
push
stos
or
shl
mov
mov
lds
jae
retf
jnp
into
jle
cmp
fnsave
and
test
ror
push
cmp
inc
xor
xor
dec
ja
push
in
mov
adc
test
stos
fisub
xor
in
mov
dec
mov
adc
lods
fimul
jecxz
dec
push
dec
jae
and
pop
sbb
mov
mov
das
gs
or
pop
stos
fld
jbe
inc
cmps
pop
and
jb
dec
sub
jns
sbb
lahf
adc
inc
cmp
add
adc
call
pop
into
shr
adc
fs
cmp
add
out
cli
aaa
fcom
cmp
loope
xchg
push
idiv
xchg
into
enter
dec
in
xchg
out
add
push
fdivr
or
xor
mov
aas
cmps
aam
xlat
movs
sbb
icebp
jg
aam
mov
test
inc
loop
sub
pushf
nop
pop
sub
xchg
jbe
push
pop
addr16
mov
cmps
xor
fstp
mov
aam
mov
cmp
cmp
rcl
aad
adc
nop
push
sbb
xchg
aad
outs
fisubr
mov
jae
int3
in
lea
aad
enter
add
mov
addr16
lahf
ja
fdiv
jae
fst
lahf
test
mov
inc
pop
xor
or
cmp
xlat
cmc
pop
rcr
stc
mov
int
mov
(bad)
sar
jae
cwde
push
pop
mov
(bad)
in
enter
ret
movs
xor
add
fst
pushf
mov
xchg
fadd
sub
add
mov
shl
outs
xor
inc
scas
enter
(bad)
adc
push
inc
ror
mov
cmp
fistp
fs
aam
push
sbb
mov
or
jl
call
xor
add
add
inc
dec
sbb
add
jp
push
mov
adc
addr16
cmp
sti
xchg
jl
dec
xor
out
jp
fcom
cs
ins
push
sbb
adc
sub
loopne
into
popf
leave
jmp
sbb
inc
and
xor
and
mov
push
sbb
movs
loope
inc
aam
push
cmp
test
sub
xchg
or
sub
sbb
fimul
stos
in
push
out
push
data16
stos
push
out
mov
aam
mov
mov
xor
pop
jmp
(bad)
cmp
add
dec
mov
cmps
cdq
add
push
mov
inc
sbb
jb
dec
xchg
retf
mov
xor
lods
pmaxsw
int3
in
xlat
stos
scas
push
cmp
and
dec
int
out
pushf
fiadd
sub
daa
dec
push
test
in
in
dec
mov
out
add
call
stos
(bad)
in
jo
mov
mov
mov
outs
adc
mov
push
jp
xchg
xchg
jmp
sbb
ss
xchg
dec
stos
mov
inc
leave
int
data16
mov
ja
(bad)
push
shl
add
push
in
adc
out
push
xchg
test
mov
shl
or
idiv
push
mov
push
jge
xchg
sbb
inc
sahf
sahf
sub
movs
xor
jae
dec
and
pop
popa
popf
xchg
out
fmul
sbb
out
mov
(bad)
aaa
jmp
mov
ret
mov
lods
push
loope
out
sahf
retf
xchg
test
sub
test
or
pop
shl
sbb
and
mov
test
loopne
pop
or
lahf
adc
pop
test
xor
push
mov
jbe
popa
sub
imul
mov
sub
jb
pusha
shl
imul
dec
add
inc
ja
lds
int
mov
in
call
stos
cli
(bad)
xor
add
mov
aas
bound
fcomp
clc
scas
fwait
(bad)
adc
or
jmp
xlat
jnp
pop
sbb
std
out
iret
pop
aas
fidiv
pushf
out
push
pop
mov
ja
pop
test
mov
(bad)
in
fs
pop
lods
jbe
mov
fs
xor
or
pushf
(bad)
pushf
and
sub
movs
mov
mov
outs
mov
pop
or
dec
(bad)
or
iret
adc
inc
mov
pop
push
retf
aad
imul
jle
xchg
into
jmp
aas
js
adc
xor
in
mov
or
fnstenv
xor
or
cwde
fiadd
sbb
pop
xor
(bad)
mov
jge
hlt
fadd
stc
std
into
sar
pop
mov
bound
or
fld
loop
cwde
js
repz
jp
(bad)
jl
daa
sbb
jb
dec
pop
mov
adc
pop
xchg
mov
repnz
lea
in
rcr
std
fs
and
call
add
test
jne
mov
int
push
test
add
jnp
inc
movs
mov
mov
mov
mov
sub
push
in
movs
or
ret
inc
fmul
into
(bad)
(bad)
stc
or
scas
outs
sbb
mov
inc
loop
in
add
mov
jle
sbb
sub
or
cli
clc
ret
enter
xchg
jg
not
sbb
push
popf
jns
lds
ret
mov
mov
push
mov
inc
rcr
ins
loope
cmp
sub
jmp
pushf
or
push
push
mov
ret
data16
cmc
les
jb
mov
jge
jo
pop
arpl
or
jmp
out
xchg
fld
outs
pushf
mov
mov
jnp
or
jmp
in
iret
mov
ror
rol
mov
leave
jmp
in
mov
jo
jbe
pop
or
cli
dec
dec
sar
enter
mov
adc
(bad)
xor
sti
hlt
enter
out
push
or
scas
push
test
mov
cwde
inc
in
cmc
adc
cmps
sub
test
cmp
inc
loope
push
mov
xor
sub
xchg
stc
xchg
inc
out
daa
inc
outs
cmp
imul
jg
dec
ins
xor
xchg
xchg
mov
sbb
mov
aam
cld
inc
xchg
shr
mov
push
xchg
mov
ins
pop
pushf
inc
xchg
jge
mov
push
sub
(bad)
pop
mov
xchg
jl
xor
jmp
mov
mov
fucom
cmp
ret
aad
test
cmc
mov
out
test
fnstsw
jnp
xlat
(bad)
in
repz
idiv
sub
test
out
lfs
xchg
xchg
pop
seta
inc
nop
aaa
add
lahf
add
pop
push
retf
jp
mov
and
sbb
loop
pop
(bad)
xchg
xchg
test
aam
jbe
int3
and
(bad)
or
movs
aam
mov
and
pop
and
adc
sub
sbb
ins
lods
mov
retf
mov
push
xchg
push
mov
daa
xor
jne
sbb
adc
popf
inc
mov
sub
mov
push
mov
adc
mov
stc
mov
sub
xor
dec
out
pop
jmp
out
das
and
jge
sub
jg
jmp
sub
adc
lods
dec
fmul
lea
mov
stos
jmp
loop
loope
xchg
sub
je
scas
in
shl
in
nop
mov
loope
call
xor
dec
adc
jge
push
ror
jns
and
dec
rcr
mov
pusha
add
jbe
sar
loop
(bad)
xchg
or
aad
add
jmp
mov
in
pop
jae
adc
fst
(bad)
cwde
fnstcw
test
jo
loopne
mov
neg
hlt
(bad)
sbb
stc
jmp
and
js
mov
fstp
jne
mov
mov
inc
shr
fidivr
movs
inc
cmp
pushf
dec
push
cs
in
jo
mov
mov
mov
and
jmp
lods
je
sub
cmp
ror
cmp
outs
scas
into
ret
sbb
movs
cwde
jmp
dec
icebp
cmc
jmp
push
push
mov
ja
mov
int3
mov
in
fidiv
jbe
fdiv
sub
mov
imul
xchg
xor
in
repnz
cwde
push
in
dec
push
jle
scas
cli
loope
jmp
jae
ins
jge
fisttp
fiadd
mov
fiadd
and
and
adc
jmp
jmp
ja
adc
or
push
inc
add
lea
shr
pop
inc
dec
bound
cmp
mov
lds
mov
test
imul
dec
and
add
push
mov
adc
out
mov
mov
int
aad
mov
test
cli
stos
fisttp
mov
jo
clc
xor
fwait
enter
mov
sahf
inc
mov
sti
iret
lods
push
add
sbb
loope
push
sahf
mov
sub
mov
repz
fs
pop
clc
int3
bound
push
cli
pusha
mov
push
aaa
push
dec
adc
mov
xchg
jb
xchg
bound
mov
cdq
pop
cmp
lea
ss
test
add
pop
rcl
and
rcl
(bad)
popf
int3
out
dec
jmp
dec
int
and
sub
jg
(bad)
mov
fbld
mov
xor
xchg
mov
sbb
dec
sub
add
cmp
push
add
mov
jb
pop
pop
add
repz
fdivr
popf
loop
cmps
sbb
adc
mov
inc
imul
dec
(bad)
aam
lea
daa
push
test
lahf
pop
or
xchg
cmc
repnz
div
adc
xchg
out
pop
mov
xchg
pop
cmp
repz
jnp
faddp
mov
mov
or
js
jmp
inc
or
pushf
xor
and
loope
dec
mov
jne
ret
jmp
js
and
js
stos
mov
xchg
and
dec
inc
fs
pop
pop
push
fdivr
arpl
lods
add
(bad)
mov
aaa
sahf
mov
(bad)
jl
fbstp
lods
sar
sub
inc
ins
cmp
pop
popa
push
jne
cmc
in
dec
test
xchg
inc
ins
sub
ret
jnp
or
test
popa
inc
jns
sub
and
stos
stc
adc
or
xor
push
cmp
or
in
gs
and
call
(bad)
adc
push
loopne
xchg
aaa
(bad)
out
movs
movs
test
cmps
xchg
or
mov
push
(bad)
dec
inc
fisubr
or
mov
push
or
les
cmps
cli
mov
jecxz
push
pusha
push
iret
add
push
retf
cmps
inc
mov
cmc
daa
aad
xchg
ins
inc
fild
jmp
lods
(bad)
ins
mov
or
or
mov
inc
dec
pop
push
or
hlt
das
mov
(bad)
cmps
test
and
cmp
dec
pop
mov
or
cwde
cld
sbb
add
dec
jmp
int
repnz
dec
jae
js
in
pop
retf
mov
ss
dec
fwait
icebp
mov
(bad)
leave
aaa
mov
loop
inc
loop
test
retf
aad
div
add
mov
sbb
stc
dec
popf
repz
mov
fisubr
jg
dec
or
push
sub
adc
out
inc
mov
test
dec
in
or
pop
mov
jno
ret
cmp
out
fldenv
push
lods
dec
jp
pop
mov
stos
add
pop
xchg
out
call
jo
jmp
sbb
fwait
aas
lahf
icebp
and
add
icebp
dec
mov
xlat
test
ret
mov
xor
mov
fadd
jns
jbe
mov
lods
lds
jg
push
mov
and
sbb
sub
pop
jns
rol
add
je
ins
les
lahf
mov
call
movs
inc
shl
(bad)
je
mov
push
(bad)
mov
jne
cwde
or
in
jmp
sahf
or
jmp
adc
xchg
pop
gs
cli
mov
pop
std
mov
sub
jp
mov
enter
or
adc
call
push
xor
dec
pop
cmp
cdq
add
pop
mov
mov
dec
sbb
fmul
jecxz
lea
pop
jns
sar
push
arpl
jg
sti
cli
icebp
outs
call
in
pop
sti
retf
mov
cli
sbb
mov
or
je
mov
push
stos
scas
mov
push
pop
fnstsw
jo
in
je
ins
dec
out
out
jo
je
test
sub
ins
rcl
mov
push
rcr
idiv
in
jecxz
mov
lods
and
mov
gs
hlt
out
inc
retf
ins
sub
je
cmp
mov
xor
repz
rcl
out
fidiv
call
(bad)
out
sti
sbb
test
cmp
sub
scas
jnp
jecxz
sub
ins
sahf
mov
jb
jmp
push
mov
cwde
popf
into
ins
ret
sbb
pop
imul
xchg
test
and
(bad)
fiadd
sar
fistp
push
xchg
mov
pop
mov
xchg
fidiv
xchg
inc
xchg
jmp
dec
pusha
ja
push
out
or
cmp
jecxz
leave
movs
push
jge
mov
fdiv
rol
fsubr
cmps
xchg
xor
jecxz
(bad)
sub
lods
push
cld
call
or
daa
lods
xchg
(bad)
adc
dec
es
out
jno
loope
jae
fdiv
jle
push
arpl
inc
mov
cmp
shufps
test
mov
retf
mov
ret
push
sar
leave
loop
adc
pop
test
jns
and
(bad)
lea
push
push
repnz
repz
add
pop
xor
lahf
lock
mov
daa
sbb
mov
test
and
movs
retf
in
in
into
pop
fld
lahf
jle
xchg
dec
add
mov
sti
aas
(bad)
push
push
in
jns
jo
(bad)
and
loopne
jmp
xor
(bad)
xchg
sbb
jmp
sbb
dec
int
shl
test
dec
(bad)
ins
in
mov
xchg
add
(bad)
sar
or
(bad)
cld
mov
mov
push
sub
push
or
add
add
fdivr
cmp
mov
jmp
jbe
aas
push
cmc
mov
add
imul
lods
cmps
or
and
adc
sbb
(bad)
or
dec
adc
not
push
retf
movs
cmp
rcl
mov
cli
dec
and
mov
push
dec
(bad)
or
in
shr
out
adc
dec
pushf
iret
cli
push
cmps
fistp
cmps
es
xor
dec
and
jnp
mov
loope
cs
loopne
loop
xchg
mov
cwde
scas
cmp
xchg
jae
rcl
cmps
mov
frstor
xchg
jns
js
pushf
and
mov
xor
cmp
ds
mov
push
xchg
mov
jo
out
inc
or
or
jge
xor
retf
fwait
in
call
cmc
push
ins
cmp
dec
adc
mov
scas
xor
dec
and
pushf
pop
or
add
dec
gs
mov
xchg
xchg
aam
cs
adc
or
pop
jp
(bad)
or
fnstenv
jae
shl
jecxz
mov
mov
aam
(bad)
jmp
adc
enter
inc
xchg
hlt
add
mov
fiadd
int
sahf
cmc
xor
jle
div
fucomi
cli
and
aam
xlat
adc
sbb
dec
iret
mov
dec
inc
xchg
pop
in
mov
movs
mov
fistp
ret
mov
mov
dec
or
ror
push
(bad)
mov
mov
mov
push
push
mov
das
add
dec
add
(bad)
mov
xchg
das
push
imul
(bad)
outs
loop
push
pop
inc
aaa
pop
pop
sub
mov
out
retf
cmp
sbb
int3
fst
jno
mov
jo
jmp
cmp
ja
or
adc
pushf
nop
sub
sti
cmps
cmp
or
(bad)
nop
xchg
cmp
push
pop
fisttp
sbb
pop
inc
adc
mov
lds
out
mov
ret
call
push
mov
enter
mov
lahf
gs
sahf
mov
cmp
adc
mov
icebp
pop
jecxz
pusha
test
xlat
scas
jp
stc
inc
sahf
dec
cmc
out
push
popa
(bad)
and
inc
fdivp
shr
mov
xchg
scas
add
arpl
fcmovbe
(bad)
les
mov
enter
cmp
data16
call
dec
fisubr
rcr
in
fxch
push
jae
mov
sub
dec
fmul
mov
sahf
stc
mov
jbe
(bad)
xlat
mov
or
js
pop
test
ss
xchg
adc
jbe
mov
mov
jno
cmp
dec
pop
jg
test
retf
aad
aaa
js
xor
loop
mov
cli
lock
lods
mov
test
lahf
cmps
into
daa
adc
lds
inc
sbb
(bad)
mov
aas
out
mov
cmps
(bad)
loope
and
mov
imul
xor
sbb
dec
cmp
retf
push
ror
test
cmp
mov
and
jns
adc
push
shl
xchg
jl
adc
out
or
xlat
mov
add
jo
pop
and
jae
fdivr
adc
push
imul
jne
mov
pop
mov
jg
push
lods
mov
ja
fisttp
cmp
or
(bad)
data16
xchg
ret
mov
or
lds
inc
shl
js
dec
mov
lahf
lahf
gs
loop
pop
add
sbb
shl
je
inc
cmc
jmp
jg
and
imul
ret
and
imul
call
movs
clc
and
shr
clc
push
push
scas
(bad)
and
fsub
inc
imul
pop
and
ja
dec
xor
(bad)
jb
inc
daa
enter
mov
int3
add
sbb
mov
inc
pusha
lahf
sti
add
lods
cmp
loope
ins
cmp
call
adc
sahf
inc
fbld
in
imul
jno
lds
cmp
xor
push
adc
btc
fnstenv
cmc
(bad)
dec
push
jle
stos
rol
mov
imul
hlt
imul
add
pusha
adc
(bad)
adc
in
gs
cmp
fsubr
sbb
inc
enter
add
cmp
fiadd
in
xchg
cmp
push
stc
push
add
sar
pop
ret
adc
std
xchg
sub
bnd
out
out
pop
sbb
mov
cdq
sub
(bad)
ins
inc
int3
pusha
sub
cli
push
mov
and
je
xor
(bad)
push
cmps
sub
sbb
fbstp
call
in
push
or
pop
mov
push
adc
add
and
xor
rcl
rcr
sti
stos
dec
lds
xchg
sbb
sub
shl
push
rcr
fnstsw
xchg
push
hlt
out
in
int3
getsec
jl
xor
push
daa
pop
ds
jge
nop
fdiv
and
imul
pop
jp
stos
sti
and
jmp
imul
adc
out
ret
inc
retf
in
or
scas
jae
sbb
xchg
pop
rol
in
int3
lahf
xchg
sti
push
cmp
lds
jle
mov
cld
popa
jmp
cmps
mov
ins
mov
ja
fdiv
retf
pop
(bad)
(bad)
xor
ret
sbb
sub
shr
push
sbb
xchg
fbld
sahf
aaa
lods
call
imul
jmp
dec
scas
fiadd
cwde
retf
clc
cdq
out
scas
mov
addr16
call
cmp
cmps
inc
sub
test
out
test
out
and
int3
push
adc
test
push
or
mov
cmp
mov
jbe
popf
bound
add
inc
xor
cld
sub
xchg
sbb
pop
int3
sbb
push
xchg
sub
xchg
scas
fwait
jmp
adc
mov
jg
push
ficomp
xchg
aas
out
cmp
loopne
cmc
out
cli
lods
das
mov
daa
jmp
fidivr
push
and
stos
mov
inc
outs
jb
jb
call
and
shl
in
cmps
xchg
fstp
mov
or
and
sub
ins
and
test
rol
dec
inc
mov
(bad)
clc
push
and
and
jns
lahf
and
cli
lods
rol
outs
fstp
mov
or
movs
xor
sbb
ins
push
pop
mov
enter
ss
jnp
cs
pop
pop
push
pop
retf
lock
loop
aam
ror
dec
loope
js
xchg
cld
retf
adc
mov
mov
jns
jne
in
aaa
jg
push
in
pop
fsub
int
xchg
js
scas
xchg
mov
jno
pop
mov
dec
push
add
rcr
pusha
mov
adc
inc
jp
or
add
outs
(bad)
loopne
xor
iret
jg
outs
mov
in
jae
(bad)
ret
cmc
jp
pusha
pop
stos
cmp
(bad)
pop
mov
imul
cli
retf
loop
push
xor
add
jo
jmp
mov
adc
fistp
movs
pushf
fadd
pop
add
lahf
sbb
xor
mov
xor
sub
mov
pushf
inc
xchg
fistp
sar
adc
sbb
imul
(bad)
(bad)
ins
lods
mov
push
mov
add
dec
sub
jmp
pushf
pop
(bad)
stos
mov
out
stos
ja
loope
mov
pop
mov
dec
or
or
pop
adc
xchg
stc
out
sbb
push
fadd
adc
mov
out
aam
xchg
fiadd
dec
mov
dec
cld
xor
clc
lods
fisub
out
cmps
add
mov
and
nop
mov
loop
cmp
je
popf
push
pop
xor
mov
push
push
jle
mov
je
rol
das
mov
push
push
not
jle
lea
mov
push
and
(bad)
mov
and
jmp
add
mov
add
pop
or
stos
cmp
test
stos
(bad)
push
jb
loopne
xlat
pop
pushf
xchg
das
xchg
cdq
fwait
dec
dec
retf
pop
retf
mov
dec
sahf
and
mov
xor
shr
cmp
sub
scas
inc
out
xlat
les
stc
shr
jne
jno
stos
mov
cld
jnp
test
ins
and
mov
jge
add
fnsave
sbb
movs
mul
call
add
(bad)
imul
sbb
leave
pop
push
test
loope
test
inc
xchg
call
or
add
ret
pop
out
add
push
int
mov
mov
cdq
mov
xchg
movs
movs
mov
stos
cmp
sub
ins
arpl
and
mov
sub
mov
jl
sti
and
adc
dec
adc
pop
sub
dec
xchg
fcmove
inc
cwde
ror
cmp
xchg
sahf
leave
lock
pop
sbb
inc
out
mov
mov
shl
adc
and
inc
sti
dec
ret
lods
mov
stos
mov
sbb
push
sub
jmp
retf
mov
into
sub
sbb
push
dec
(bad)
mov
xchg
add
pop
push
das
addr16
or
pop
sub
shl
addr16
daa
sbb
lods
mov
sbb
ja
clc
mov
push
fsubr
scas
jnp
jbe
retf
inc
sbb
into
out
cmp
sbb
cmovb
cmps
gs
cmc
call
add
or
ins
mov
push
sbb
xor
inc
dec
(bad)
inc
lds
imul
inc
or
rol
dec
imul
sub
jp
push
mov
repz
mov
out
ss
shr
pusha
aad
adc
xchg
movs
mov
cli
call
stos
and
or
outs
outs
mov
retf
fs
shl
sub
add
movs
loopne
mov
jecxz
xor
xchg
dec
sub
test
mov
lea
(bad)
or
jg
cmp
test
jmp
(bad)
jge
mov
jecxz
push
and
out
popf
mov
jbe
mov
add
xchg
mov
clc
gs
or
mov
ss
add
xlat
sbb
mov
movs
pop
push
lods
adc
std
into
push
int3
mov
jmp
(bad)
jmp
inc
ja
adc
add
cmp
add
hlt
aam
pop
mov
mov
dec
loop
and
cwde
mov
add
cwde
cmp
sbb
leave
push
add
cdq
mov
or
bound
adc
ja
jmp
or
imul
and
dec
jb
test
in
sbb
adc
inc
pop
inc
xor
test
pop
sub
cmp
leave
retf
test
shr
aad
xlat
pop
cmc
retf
pop
fwait
mov
arpl
aad
pop
xchg
jmp
pop
aad
mul
mov
nop
mov
jo
mov
cmp
out
push
pop
or
push
and
cmp
push
nop
scas
ins
rcl
js
xor
dec
test
(bad)
fstp
jle
int
(bad)
jecxz
cwde
cmps
loop
inc
dec
into
mov
stos
cli
pop
adc
dec
mov
int3
xchg
call
shr
dec
inc
aam
test
and
xor
push
cmp
sar
push
fcmovnu
lods
scas
jecxz
pop
fwait
cmp
xor
std
cmp
mov
fs
mov
stos
loope
push
add
push
enter
jmp
std
js
fstp
loope
adc
in
inc
jb
ins
xchg
jb
xchg
addr16
pop
js
test
cmp
cmp
cmp
outs
jno
(bad)
xlat
dec
mov
in
stos
aam
mov
xor
iret
jmp
stos
or
cli
dec
mov
popaw
leave
or
fadd
in
mov
idiv
dec
inc
xor
das
es
or
fiadd
pusha
ror
push
cmp
xchg
pushf
add
call
test
gs
cli
arpl
int3
retf
scas
lahf
loop
jne
outs
shl
mov
bound
ds
loop
xchg
rol
mov
push
jae
jo
in
jnp
adc
(bad)
jb
sub
jecxz
add
ins
or
xchg
pop
push
stos
mov
cli
and
repnz
jl
lods
sbb
pop
call
imul
pusha
mov
out
cld
cmps
push
jmp
adc
jno
sbb
jbe
stc
(bad)
push
dec
adc
repnz
pop
(bad)
ins
imul
add
sbb
imul
cmp
es
jo
arpl
loope
shl
sbb
jl
sbb
adc
inc
push
mov
sbb
shl
and
dec
jae
lock
mov
and
out
add
jg
movs
sbb
out
repz
mov
movs
mov
in
movs
test
sub
dec
mov
gs
sar
pushf
hlt
bound
xchg
adc
mov
xor
xchg
cli
or
jl
add
mov
rcr
js
sti
stos
aad
retf
fst
stc
sbb
clc
sbb
ja
pop
jno
mov
mov
repz
test
out
inc
push
push
adc
sahf
imul
shr
cmps
sub
push
and
mov
mov
sub
ins
pop
cmc
addr16
mov
xchg
call
lock
jo
and
pushf
lods
jb
push
into
and
mov
cmp
dec
iret
jnp
loope
iret
jns
add
sub
icebp
mov
lods
dec
sbb
push
or
or
and
dec
je
rcr
fcom
push
(bad)
jmp
inc
dec
sahf
xor
pop
push
ins
mov
mov
add
out
out
stos
inc
daa
rol
std
push
cmp
jmp
jp
pop
test
aad
cmps
mov
pop
xor
or
push
stos
add
shl
call
outs
mov
mov
out
xor
sti
loop
mov
in
adc
lds
lods
je
in
fnstcw
pop
dec
dec
jge
mov
cmp
mov
in
aaa
xor
xlat
pop
fidiv
pop
call
xor
jge
adc
xor
retf
mov
div
in
xrelease
mov
mov
das
call
rcl
xor
push
inc
xchg
jne
push
out
and
pop
aas
ret
cli
or
hlt
xor
dec
ror
frstor
push
test
out
aaa
leave
fisub
daa
movs
fisub
cmp
idiv
xchg
sbb
add
out
mov
pop
push
inc
or
rcl
ja
xor
pop
mov
stc
xor
mov
sbb
je
test
daa
sbb
out
mov
repz
jl
jmp
fistp
shl
adc
test
cmp
and
mov
and
repz
loop
jecxz
jne
pop
mov
jle
jnp
out
xlat
dec
inc
call
ins
jb
ds
ds
test
dec
adc
jno
push
repnz
dec
ins
and
mov
mov
dec
sub
fidiv
xor
stos
or
mov
inc
sub
sub
movs
dec
addr16
sbb
or
or
push
jae
test
outs
sub
mov
xchg
pop
repz
xor
outs
adc
or
aad
push
fnstcw
cs
cdq
mov
scas
cmp
shl
test
inc
and
imul
adc
pop
mov
push
outs
mov
push
inc
mov
int
jg
inc
cwde
test
loope
pop
std
xchg
call
lds
inc
push
ret
sbb
mov
jbe
push
pop
mov
jns
mov
not
ret
mov
mov
sub
cmps
idiv
jae
sbb
sbb
mov
ret
mov
scas
hlt
iret
push
loopne
sub
adc
add
test
jo
jge
jp
mov
adc
bound
and
and
ja
aaa
sbb
ret
rol
(bad)
adc
jnp
fnstcw
adc
fdiv
or
in
push
scas
jb
jb
cld
inc
adc
ss
mov
inc
xor
dec
push
(bad)
and
xchg
outs
add
sahf
mov
mov
fwait
add
call
jb
sub
clc
or
out
xchg
shr
add
dec
jno
jp
xchg
in
data16
jmp
push
xor
cs
out
jae
xor
jp
push
mov
sbb
bnd
mov
jge
rol
dec
in
mov
pcmpeqb
and
or
push
inc
pop
dec
push
(bad)
sbb
mov
mov
fwait
sbb
leave
ss
(bad)
sub
hlt
pop
call
pusha
mov
jns
aad
(bad)
clc
xchg
and
xor
popf
stc
lahf
xchg
stc
sub
push
jne
inc
adc
pop
hlt
cld
scas
xor
mov
sti
frstor
or
add
in
enter
ret
es
inc
(bad)
push
mov
stos
push
cld
mov
pop
mov
retf
sbb
in
fnsave
jb
aad
jmp
cmps
cmp
rcr
add
popf
sub
mov
add
inc
retf
fnstenv
daa
push
hlt
mov
scas
or
sbb
cmp
in
cmp
mov
xor
push
pop
inc
jbe
push
das
daa
(bad)
mov
push
cdq
jmp
mov
mov
mov
(bad)
loop
in
ror
mov
test
fsubr
xor
cmp
xchg
stos
pop
adc
inc
dec
xor
adc
mov
adc
stc
mov
test
cmps
imul
adc
cmp
xor
movs
jnp
cmc
sbb
sub
cmp
push
ja
dec
int3
cmp
mov
jne
push
mov
ret
mov
popa
mov
ror
mov
xchg
not
jo
(bad)
fcomp
test
pop
mov
lods
and
xlat
aad
cli
jecxz
push
shr
in
fist
sub
fcom
and
and
dec
sbb
icebp
xor
mov
ret
pop
mov
(bad)
push
sub
adc
into
pusha
push
fxch
sub
xchg
test
inc
sbb
sub
cmps
ficomp
pop
pop
lds
inc
popf
loop
das
int
(bad)
test
xlat
int
out
cmp
xchg
xchg
adc
clc
mov
mov
inc
and
stos
jae
ds
pop
cmps
adc
cmp
fwait
jmp
leave
hlt
sahf
loope
mov
int3
dec
mov
cmps
into
mov
fimul
mov
inc
sbb
pop
cli
add
inc
xchg
dec
dec
mov
outs
jl
shr
(bad)
call
adc
push
pop
rol
ret
mov
fs
ins
test
popf
adc
mov
or
ds
daa
addr16
jmp
lds
pop
sar
jb
and
out
rcl
jns
xor
mov
call
mov
into
dec
aaa
jmp
shr
fidivr
js
push
fdiv
je
stos
xor
in
xor
cmp
mov
jne
(bad)
sbb
fidivr
mov
cld
xchg
sbb
jg
mov
dec
les
dec
out
rol
jno
jne
ret
outs
add
test
out
je
sbb
cmp
pusha
mov
lahf
enter
xchg
sahf
ss
(bad)
imul
pop
out
pop
popa
rcr
popa
push
test
(bad)
aas
aam
out
sub
ja
inc
aaa
push
xchg
mov
bound
and
mov
into
daa
pusha
xchg
js
jno
inc
in
(bad)
shl
ss
scas
mov
call
(bad)
fmul
sub
(bad)
lods
shl
or
add
and
clc
je
xor
popf
in
shl
dec
xor
jl
push
stos
jne
in
pop
lahf
sbb
mov
dec
xchg
xlat
jo
adc
or
mov
fadd
ret
in
mov
push
push
and
fldenv
cmp
sti
mov
in
out
add
dec
pop
xor
cmps
(bad)
mov
(bad)
out
fimul
mov
out
push
test
adc
jmp
loope
jnp
cli
jne
rcr
or
inc
push
std
sbb
fbld
add
push
popa
in
mov
sbb
retf
popa
cmp
fwait
es
adc
sub
dec
mov
mov
sub
imul
mov
xchg
cld
xchg
fstp
cmp
pop
(bad)
(bad)
scas
sub
jne
inc
push
mov
jo
push
add
push
adc
test
sub
sub
int
int
test
pop
cmc
xor
das
sub
into
adc
int
pop
cld
dec
sbb
lods
ja
(bad)
fbld
cmp
aaa
jp
and
mov
sbb
cmp
leave
stos
push
sub
loope
ror
into
bound
pushf
add
out
push
repz
sahf
outs
lods
movs
xor
jo
dec
cli
outs
stc
and
xchg
shl
xor
sub
int
in
lock
xor
popf
pop
stos
(bad)
cmp
fmul
cmps
jae
not
inc
mov
mov
sub
das
pop
jp
std
aam
adc
mov
jnp
mov
test
loop
xchg
and
mul
mov
xor
mov
dec
xlat
adc
mov
xchg
adc
add
xlat
dec
push
leave
clc
in
retf
mov
mov
jmp
sub
idiv
mov
hlt
push
jo
or
jnp
jecxz
mov
inc
inc
or
add
or
sbb
aad
cdq
push
daa
sbb
mov
pop
movs
stos
xor
xor
popa
push
sub
fwait
sar
mov
cmp
mov
xchg
pop
stc
cmp
xlat
rol
or
mov
inc
test
jmp
rcr
test
push
in
inc
dec
cmp
cdq
mov
leave
jbe
inc
pusha
pusha
inc
ror
aad
fdivr
mov
inc
out
fmul
scas
xchg
mov
retf
xchg
cmp
int3
xchg
neg
xchg
leave
scas
repz
mov
fcmovu
inc
xor
cmp
xchg
or
xchg
test
lds
loope
sbb
sub
pop
aad
fucom
das
sub
mov
jmp
inc
mov
retf
mov
out
es
sbb
shl
push
inc
repz
and
addr16
sub
sar
xor
mov
push
xchg
and
xor
inc
fisub
adc
mov
call
outs
out
out
xor
inc
in
xlat
and
and
jle
and
aad
lds
push
xor
out
jns
jo
std
icebp
push
cdq
add
out
mov
loop
mov
and
push
or
shr
iret
cmp
pop
pop
clc
sti
cmp
xor
loopne
fldcw
and
adc
pop
pop
mov
dec
fstp
mov
sub
out
xchg
mov
jmp
sbb
adc
push
in
jmp
push
sub
das
push
lods
xor
push
shr
cmps
or
xor
mov
cmp
push
and
cmp
addr16
mov
fistp
pop
in
std
push
in
cmc
call
mov
or
sbb
popa
mov
or
adc
dec
(bad)
sub
adc
ss
mov
mov
cmp
out
push
xchg
test
mov
sbb
int
pop
mov
outs
mov
in
inc
sub
jmp
push
sbb
sub
mov
mov
int3
inc
xlat
cmc
push
inc
loope
push
mov
ins
inc
mov
bound
push
or
jno
mov
int
int3
nop
jecxz
mov
scas
jns
mov
add
jae
test
adc
lahf
push
jp
adc
in
mov
int
loop
add
xchg
ss
add
sbb
je
lahf
xchg
mov
inc
fdiv
(bad)
mov
jle
es
pusha
pop
add
mov
gs
pop
pop
push
adc
jb
(bad)
retf
xor
cmps
push
nop
or
out
lea
push
adc
mov
or
mov
loop
pop
inc
movs
mov
ret
mov
pop
xor
sbb
dec
cs
cmp
lods
pushf
mov
cmp
stos
aas
mov
push
pop
mov
in
mov
call
pop
out
mov
mov
fsub
iret
cld
jge
add
dec
call
jge
dec
add
fild
mov
pushf
stc
(bad)
mov
cdq
jnp
data16
icebp
das
cmp
in
pop
rcr
adc
lea
fiadd
xchg
jb
bound
mov
and
gs
in
cs
cld
stos
jl
test
inc
mul
ror
stos
push
retf
xchg
jne
jl
jb
pop
fdivr
in
mov
push
pop
pop
dec
movs
xchg
(bad)
js
mov
pop
es
das
leave
and
or
arpl
pop
push
pop
mov
sbb
inc
pop
mov
mov
cmp
add
sti
shl
pop
ror
jb
xchg
mov
dec
pop
and
mov
call
fwait
push
adc
push
pop
aaa
bound
push
xlat
sub
xchg
ret
inc
js
mov
push
and
retf
dec
xchg
aaa
out
sub
and
enter
xchg
mov
jg
xor
(bad)
bound
je
mov
stc
jae
sti
es
aas
and
call
mov
rcr
fnstcw
push
pop
add
das
mov
and
xchg
fisubr
push
push
push
pop
aad
mov
test
neg
in
add
ins
fidiv
cmp
imul
xor
mov
mov
jae
xor
std
or
test
mov
and
and
mov
mov
push
fidiv
(bad)
stos
jno
add
inc
mov
mul
aaa
aad
add
xchg
pop
push
aad
xlat
mov
test
add
shr
adc
jne
and
cmp
mov
push
mov
loopne
sti
jo
xchg
pop
add
sub
js
cmps
imul
add
cmp
inc
iret
in
pop
lock
addr16
dec
leave
cmps
or
sub
xchg
cmp
inc
jle
ss
loopne
rol
add
ds
push
pandn
or
test
test
imul
mov
pandn
repz
cld
test
scas
daa
imul
add
pause
pop
and
pop
hlt
js
int3
xor
add
test
add
test
adc
sbb
sub
test
(bad)
xchg
fwait
cmp
jae
popf
cmp
stos
pop
sbb
push
adc
mov
jmp
rol
stos
mov
loop
dec
xchg
cmp
mov
test
or
push
loop
jge
jmp
jp
cmp
dec
add
xchg
mov
pop
xor
shl
add
mov
push
call
sub
pop
cmp
adc
xchg
fidiv
fsub
in
push
cmp
gs
mov
sbb
fadd
call
xchg
cmp
je
inc
add
mov
jl
aam
cld
hlt
cmp
and
arpl
mov
(bad)
iret
mov
adc
(bad)
fdivp
xchg
or
inc
xchg
iret
xchg
pushf
dec
shl
cs
and
loope
fwait
in
mov
test
xor
je
mov
mov
jl
inc
jmp
mov
pop
mov
mov
jns
ret
jo
aad
pop
jmp
mov
cmc
mov
lea
lahf
loop
pop
ds
inc
inc
lea
(bad)
in
mov
mov
repz
mov
add
hlt
mov
out
mov
ret
outs
xor
hlt
mov
adc
das
xor
mov
fst
rcl
xchg
dec
ja
push
shl
lock
sti
cdq
dec
bound
sbb
fidiv
repnz
sub
inc
sahf
retf
cmc
in
outs
xlat
or
push
(bad)
push
mov
rcl
jl
inc
(bad)
loop
xchg
xor
ss
cs
clc
pop
sbb
stos
xor
dec
shl
ficomp
sar
mov
mov
lods
dec
aam
out
or
xchg
xchg
jp
ins
(bad)
xchg
push
xchg
jg
stc
adc
mov
data16
jno
xchg
into
mov
mov
pusha
in
xchg
pop
fs
xor
adc
nop
sbb
adc
xchg
repz
add
mov
push
ins
icebp
jle
cmc
dec
out
popf
adc
movs
cmc
popa
lock
or
or
arpl
nop
sbb
int
test
jmp
sub
das
test
push
add
dec
popf
pop
ds
retf
aaa
xor
cmp
dec
mov
mov
int
inc
addr16
push
inc
fwait
sti
mov
xchg
(bad)
fdiv
loope
and
arpl
addr16
jmp
mov
mov
push
or
lds
mov
dec
mov
repz
pop
sbb
out
adc
cmp
mov
xchg
aad
dec
sahf
aam
mov
sbb
fwait
sar
jle
pop
pop
ins
rol
retw
mov
push
sub
jns
adc
(bad)
in
pop
aas
push
mov
mov
jmp
cmp
jle
sub
call
cmp
sub
loope
jo
pushf
push
jo
mov
cwde
popa
push
mov
mov
add
inc
and
std
mov
cmps
int
push
push
sbb
xchg
in
adc
stos
loope
je
mov
mov
scas
or
sbb
cmps
mov
not
add
and
lfs
call
retf
jmp
and
pop
test
ins
inc
sar
jne
jb
xchg
add
mov
test
jmp
mov
push
xor
aam
xlat
repz
mov
gs
cwde
cwde
push
lods
jecxz
add
add
out
sti
into
jb
cmps
ss
push
inc
test
jns
into
push
jbe
mov
loopne
retf
retf
rcl
div
push
scas
inc
loope
xchg
and
push
arpl
inc
out
push
popf
call
sbb
sbb
cmp
int3
lahf
das
cmps
mov
add
mov
mov
or
jb
fld
sti
jge
pop
sub
dec
js
mul
rol
scas
pop
mov
adc
add
bound
inc
cmp
cmp
fsubr
daa
push
jmp
retf
xchg
stos
int
movs
push
int
xor
nop
jge
lds
daa
mov
retf
(bad)
cmp
xor
jb
pop
inc
and
pop
add
or
inc
in
pop
sub
jg
and
imul
xchg
mov
and
jge
lock
or
mov
sub
fst
xor
fdivr
sti
xchg
cmp
ja
cmps
test
in
xor
mov
jo
sub
cmc
push
mov
mov
pushf
adc
jmp
adc
xor
sbb
stos
sti
test
pushf
or
mov
mov
call
adc
adc
sbb
dec
jno
(bad)
aaa
jmp
nop
jns
repz
aad
jae
adc
sub
lea
les
(bad)
add
pusha
xchg
jecxz
add
xor
xor
mov
xlat
or
push
mov
fnstcw
stos
xor
jmp
in
dec
mov
cmc
sbb
adc
das
inc
in
ins
mov
ins
cmps
out
inc
pop
inc
pusha
test
pop
(bad)
stos
ds
rol
in
mov
mov
inc
add
mov
mov
and
iret
xchg
stos
fwait
adc
or
jne
gs
cwde
inc
(bad)
in
mov
and
test
cwde
int3
cmp
data16
xacquire
iret
xchg
test
inc
jae
fwait
push
addr16
jecxz
cs
jne
mov
dec
mov
arpl
or
jecxz
xor
cld
xchg
sbb
or
sbb
add
mov
push
adc
int3
inc
sahf
call
call
mov
cmp
inc
pop
and
jbe
mov
pusha
pop
mov
sbb
sub
jmp
mov
pop
xor
jle
mov
neg
cmp
out
mov
rol
dec
xchg
ror
imul
jecxz
pop
gs
daa
iret
inc
fist
fdivr
adc
mov
cwde
aaa
or
pop
jecxz
shl
pushf
add
jmp
or
xchg
push
in
js
push
dec
je
stc
inc
lock
arpl
or
inc
sub
mov
and
repnz
mov
lds
std
daa
push
sbb
jns
int
loope
test
mov
mov
out
icebp
sub
arpl
fwait
add
imul
mov
sub
pop
test
sub
cld
std
idiv
arpl
mov
leave
jg
pop
sub
pop
xor
xchg
sbb
xchg
pop
int3
test
ds
push
push
push
dec
pop
retf
jbe
xor
fistp
imul
es
rcl
mov
push
dec
push
sub
sub
sub
xchg
inc
ds
scas
(bad)
mov
add
mov
push
cs
or
rol
mov
cmp
inc
dec
fs
fidivr
cmp
dec
lods
fs
(bad)
mov
test
loop
aas
push
aam
sbb
pop
sub
mov
adc
in
xchg
jnp
dec
stos
jg
inc
xor
mov
push
shl
jne
test
fldenv
sahf
(bad)
scas
in
or
lock
jnp
cmp
dec
rol
lock
call
xchg
cmp
push
sub
jmp
leave
jns
or
push
push
dec
js
aaa
in
mov
xchg
jno
add
cwde
cmp
xchg
adc
add
sbb
xor
xchg
jecxz
push
push
mov
push
pop
mov
cmp
add
jnp
lahf
clc
rcr
rol
stos
aaa
pop
call
mov
pop
outs
stos
sbb
xchg
mov
jmp
xor
das
xlat
leave
lock
push
jle
popa
mov
fild
test
fild
loope
cmp
push
(bad)
stc
xchg
lods
fisub
adc
push
jecxz
sub
push
xchg
adc
inc
cmp
mov
cmp
lods
pop
inc
push
jnp
jno
inc
int3
fmul
add
inc
rcr
fistp
cmp
jae
xor
popf
(bad)
jp
inc
adc
cdq
fidivr
lea
test
pop
dec
pop
test
loopne
lahf
add
into
bnd
(bad)
aam
test
aad
lahf
mov
int3
into
into
inc
or
cmp
sbb
add
jmp
push
and
inc
xchg
xchg
cmp
jne
bnd
pop
imul
add
retf
mov
rcr
mov
xor
sbb
(bad)
cmp
push
push
adc
fidiv
(bad)
jno
enter
cmp
mov
test
push
adc
loope
fnsave
jmp
loope
(bad)
in
push
xor
imul
movs
ins
jl
stc
sbb
movs
push
add
sti
jbe
jns
adc
test
pop
ss
or
out
fisttp
dec
mov
push
jg
mov
and
mov
xor
inc
sub
push
mov
dec
cdq
xor
fimul
bound
sub
js
shl
jae
out
mov
dec
mov
shl
popa
ror
stos
mov
or
(bad)
lods
add
mov
leave
xchg
cmp
mov
inc
cdq
shr
cmp
inc
in
test
fwait
push
jno
icebp
or
or
sub
and
sub
cdq
jbe
imul
shr
mov
bound
jmp
cmps
pusha
out
add
jo
jle
jp
pop
push
pop
dec
ss
cmp
stc
sbb
push
popa
int
inc
in
push
int
sub
mov
push
dec
inc
xchg
out
daa
xchg
aad
pop
or
in
movs
inc
xchg
je
ins
stos
(bad)
retf
(bad)
loopne
pop
(bad)
or
lea
movs
test
js
xor
mov
outs
pop
out
jno
sbb
dec
sbb
popf
dec
test
dec
pop
fiadd
(bad)
adc
ficom
pop
xchg
xor
xchg
jp
mov
cdq
adc
cmps
js
mov
fwait
ins
jnp
jo
outs
mov
and
in
jmp
sub
mov
jo
loop
int3
and
cmc
addr16
mov
imul
jl
fsubr
jmp
iret
into
mov
jge
mov
push
sub
sar
add
mov
push
mov
adc
sbb
mov
int
daa
test
bound
lods
out
sub
call
jne
and
mov
cmp
push
xchg
add
or
retf
cmp
push
add
gs
mov
icebp
fmul
popf
push
add
mov
ret
mov
fidiv
mov
inc
test
jo
xor
sar
xchg
inc
pop
aad
mov
test
ss
ss
in
dec
mov
imul
dec
imul
jo
inc
and
push
(bad)
loopne
movs
mov
sub
xchg
dec
fisubr
nop
jnp
xor
gs
int3
shl
mov
and
mov
xchg
xor
int3
mov
jae
jg
add
mov
fyl2xp1
mov
out
jne
idiv
or
add
lahf
push
sub
out
dec
mov
xlat
jb
mov
fisub
rcl
jmp
aas
mov
or
lds
sbb
ins
and
rcl
xor
xchg
mov
addr16
shl
push
push
or
push
out
mov
(bad)
and
jns
push
aam
or
lods
cmps
fwait
icebp
mov
xor
pop
es
cwde
dec
jmp
int
out
leave
rcr
repnz
mov
in
addr16
daa
sub
lods
dec
stos
outs
int
cld
pop
or
jno
push
inc
or
cmp
fwait
into
mov
pop
jo
xor
push
dec
cli
fdiv
or
scas
pusha
das
adc
fchs
fadd
cwde
xor
dec
xor
imul
inc
int3
and
ins
sbb
sub
lods
popa
int
cld
add
inc
pop
retf
test
lods
inc
mov
lds
icebp
cmc
pop
out
fwait
imul
xor
ror
cmp
mov
cmps
jbe
add
fstp
scas
pop
popa
mov
jb
gs
inc
daa
cmps
jbe
mov
pop
test
mov
cmp
stc
adc
pop
xor
sub
stos
lds
cmp
dec
stos
inc
stos
inc
jb
fbstp
dec
std
jbe
dec
jecxz
bound
das
xor
pop
pop
stc
loopne
inc
(bad)
xor
adc
add
xchg
gs
gs
jl
js
test
and
push
sub
test
popf
cli
xchg
call
lea
mov
out
outs
pop
mov
cld
push
jbe
add
enter
pop
or
(bad)
bound
add
dec
enter
in
push
lods
iret
inc
xor
mov
aad
out
fld
rcr
pusha
mov
(bad)
ins
dec
arpl
adc
mov
imul
cmp
inc
jb
and
xor
test
bound
sbb
scas
add
mov
shr
pop
mov
loop
add
jmp
or
and
or
sti
imul
movs
loopne
idiv
xchg
fld
imul
and
out
or
ins
aam
adc
inc
mov
push
lods
mov
rcr
mov
pop
jge
mov
(bad)
jge
shr
jnp
mov
aas
fsub
jp
fild
cmp
(bad)
fstp
mov
sub
push
push
inc
scas
jmp
adc
mov
mov
fwait
test
pop
push
mov
gs
pop
add
mov
retf
mov
pushf
sti
xchg
or
daa
jae
cli
cmps
or
mov
and
lahf
mov
dec
rcl
adc
cs
loop
arpl
pop
xor
mov
push
rcl
cmp
add
ds
inc
jl
and
mov
mov
mov
imul
jns
loop
popf
imul
out
fcom
mov
movs
mov
push
js
xor
and
xchg
mov
ins
sbb
cmc
cli
xor
leave
jo
push
add
mov
scas
mov
and
stos
push
adc
xor
test
cld
test
inc
rcl
sbb
enter
and
jecxz
push
cs
inc
xchg
pushf
and
daa
fidivr
adc
aaa
or
mov
sahf
pop
pop
fild
jle
or
jnp
ret
or
scas
dec
lea
retf
mov
mov
out
in
out
inc
call
jmp
xor
jg
xchg
xchg
std
(bad)
pushf
fucomip
adc
cs
jl
mov
lds
sbb
jmp
in
imul
imul
or
or
and
hlt
xor
sar
mov
sub
outs
pop
adc
push
movs
mov
jl
mov
adc
cmps
lea
xor
or
xchg
mov
add
lea
or
mov
xor
jmp
pop
loope
jb
movs
xor
jno
inc
mov
or
inc
retf
sub
neg
pop
mov
cdq
pop
fs
lods
add
jb
mov
cdq
mov
ss
adc
stc
sub
jmp
sbb
sub
mov
sti
push
jle
das
movs
js
ins
cmp
pop
in
dec
jl
mov
sbb
lea
mov
das
loope
jo
popa
xor
cmp
loope
daa
lahf
push
sub
loopne
adc
push
test
shl
ret
out
push
inc
cmps
cwde
push
addr16
aam
(bad)
out
lock
outs
push
mov
dec
inc
push
fsubr
mov
cmp
rcr
push
sbb
xchg
or
test
inc
repz
test
xchg
movs
jmp
mov
mov
dec
fdivr
cmp
shl
and
push
mov
or
pop
add
test
arpl
out
aam
out
or
lods
out
cmp
mov
push
rcr
mov
gs
aaa
sbb
inc
loope
and
shl
into
and
xchg
sbb
arpl
pop
stos
ret
(bad)
repz
jg
out
sbb
mov
jle
xlat
pop
jecxz
ror
cdq
add
pop
into
fistp
in
outs
loopne
or
fld
lahf
xor
je
cmp
(bad)
mov
push
test
(bad)
lods
mov
mov
idiv
xor
aad
test
and
es
push
ds
mov
push
test
lods
lods
push
mov
and
mov
cmovs
gs
gs
stos
rcl
or
enter
inc
xchg
lahf
out
jae
dec
inc
data16
sub
js
dec
mov
dec
and
and
cmp
hlt
mov
sub
in
lahf
mov
or
ds
dec
cmp
jg
lods
repnz
cwde
push
retf
mov
or
retf
pop
stos
es
clc
push
out
pushf
sbb
mov
jmp
dec
cmp
pop
std
jne
mov
sub
addr16
cmc
jmp
ficom
or
retf
inc
adc
mov
add
or
shl
xchg
jp
fdivr
mov
int3
and
pop
cli
cwde
dec
cmp
add
xlat
rcr
push
dec
adc
iret
xchg
or
int
and
xlat
xlat
repz
cmps
pop
jl
inc
(bad)
add
ret
loope
in
iret
jecxz
stos
pusha
(bad)
fidiv
dec
mov
and
repz
mov
stos
mov
jge
mov
push
aas
arpl
repz
jg
and
push
cmps
int
xchg
mov
pop
jle
aam
dec
push
clc
add
mov
mov
jmp
pop
call
pop
jge
or
outs
jb
mov
repz
cmc
call
cmp
xchg
jge
jo
lods
cmps
fnsave
pop
adc
(bad)
push
test
iret
es
mov
fwait
mov
xor
pop
xor
loope
mov
xor
mov
add
cmovl
scas
push
jmp
sbb
dec
outs
xor
cmps
push
cmp
in
lods
sti
mov
mov
or
push
or
mov
scas
adc
(bad)
shr
call
int
add
test
dec
ds
xor
out
jl
in
xchg
mov
mov
jbe
jb
xlat
fisub
add
mov
das
das
cmc
dec
movs
jne
jle
aaa
sahf
add
pop
push
jecxz
aaa
mov
pop
out
fistp
mov
daa
mov
mov
push
mov
and
add
mov
shl
addr16
jmp
jmp
mov
mov
sub
mov
ret
or
mov
mov
and
test
mov
not
inc
xor
jno
xchg
push
inc
mov
nop
dec
dec
sbb
or
pop
push
xor
dec
enter
outs
fs
fist
sub
mov
jmp
les
inc
jmp
call
fdivr
ja
pop
lahf
stc
shl
add
adc
std
stc
cmps
pop
mov
jmp
mov
pop
adc
fnstsw
add
and
or
movs
push
sub
dec
fidivr
inc
fld
mov
mov
int
dec
mov
retf
sti
and
in
out
in
das
lods
retf
push
data16
jge
(bad)
shl
cmc
or
pusha
ret
ret
jge
and
out
add
jmp
add
das
shr
add
dec
add
dec
jmp
push
mov
adc
or
xor
call
in
xor
sbb
call
imul
fdiv
sti
mov
mov
jge
mov
in
pop
push
cmps
dec
pcmpgtb
push
cmc
ja
inc
pop
lds
add
mov
test
jmp
push
mov
stos
dec
mov
or
fs
push
dec
div
add
push
into
adc
clc
rol
aam
leave
adc
mov
fwait
leave
cmp
push
dec
leave
hlt
aam
ja
popf
mov
lahf
inc
push
bound
xchg
xor
xchg
sar
imul
add
fs
xchg
dec
loop
add
inc
fiadd
and
mov
jae
inc
arpl
enter
xchg
outs
jmp
int
push
(bad)
leave
stc
mov
sub
int
fistp
add
push
daa
mov
xchg
in
add
repnz
xor
xchg
(bad)
js
mov
pop
sbb
xor
lahf
repz
dec
dec
out
pop
shl
pop
mov
fwait
and
add
xor
jmp
pop
adc
jl
int
xchg
out
outs
gs
xor
add
adc
div
push
fldenv
pop
mov
inc
imul
adc
jmp
mov
or
ins
fwait
ins
call
cdq
mov
pop
shl
leave
scas
test
test
shl
or
in
mov
ds
push
xor
push
push
mov
cmc
daa
sbb
ror
cli
nop
mov
sbb
mov
and
inc
jecxz
jge
mov
and
add
xchg
jmp
test
fnsave
outs
push
xor
es
push
mov
fld
cwde
movs
pop
jae
cmc
aad
hlt
fwait
xor
mov
ret
call
pop
fst
sbb
and
in
movs
outs
add
xor
push
ins
test
mov
(bad)
pop
xor
xchg
xlat
xchg
push
sar
lds
movs
cmp
add
pop
xlat
call
push
jl
out
jge
or
sub
jg
mov
movs
lea
sbb
test
or
and
mov
pushf
xlat
setns
(bad)
xchg
movs
leave
or
push
out
ret
mov
test
fdivp
dec
imul
into
dec
idiv
or
cmps
jecxz
adc
out
rol
mov
push
lahf
in
jb
sub
adc
in
popa
mov
mov
loopne
lods
iret
dec
mov
add
out
mov
inc
ret
loopne
push
(bad)
fadd
jb
or
mov
int
movs
outs
ss
mov
push
jnp
ret
xchg
xor
xchg
aad
rcr
sbb
adc
dec
sbb
pop
jne
dec
inc
adc
neg
shr
loope
jge
inc
repnz
pop
push
ret
mov
aas
jle
out
mov
jno
push
jb
pop
stos
stos
lahf
loope
and
fsubr
scas
mov
cmps
in
cwde
push
pop
dec
cmps
daa
add
mov
add
in
pop
movs
mov
lock
retf
adc
xor
(bad)
hlt
test
cmps
mov
not
sbb
mov
adc
inc
rcl
test
outs
mov
test
jmp
in
xchg
dec
stc
add
outs
jge
mov
pop
and
push
pop
fsub
lock
out
movs
pop
xchg
sbb
je
fld
add
lock
push
in
aaa
inc
push
sub
adc
cmp
adc
sahf
test
mov
push
inc
fstp
jae
or
mov
test
sub
sahf
and
xchg
cmp
mov
add
add
(bad)
pop
jae
xchg
xchg
mov
inc
inc
mov
aas
add
scas
shl
pop
std
call
mov
hlt
mov
push
xchg
les
mov
dec
cmp
sub
addr16
adc
stos
loop
int
shl
(bad)
push
in
test
aaa
aas
leave
and
xchg
das
test
adc
test
call
stc
(bad)
push
(bad)
shl
or
(bad)
das
mov
pop
inc
loop
sbb
repnz
xor
adc
xor
jl
mov
out
iret
inc
aad
ins
movs
addr16
ja
enter
or
ins
shr
inc
sub
dec
and
lds
mov
push
lock
bound
jo
or
mov
in
fstp
inc
jae
push
mov
mov
shl
shl
pop
adc
cmp
push
nop
xlat
add
push
stos
mov
pusha
shr
loop
shr
dec
and
neg
mov
(bad)
jns
sub
push
mov
push
cmp
in
add
fwait
mov
sub
imul
sbb
je
cmp
mov
or
mov
js
push
loopne
stos
adc
jbe
sub
cmps
jle
aad
inc
in
ret
stos
fxch
popf
out
outs
inc
xor
test
xchg
or
xchg
or
dec
sti
sub
xchg
iret
xchg
cdq
mov
mov
sub
jae
cmp
jnp
and
sub
out
(bad)
and
mov
xchg
mov
mov
add
push
push
icebp
adc
jecxz
mov
das
push
jae
push
cld
jmp
pop
adc
mov
repnz
fsub
xchg
dec
mov
(bad)
nop
aam
adc
lahf
jmp
or
mov
sahf
jnp
pop
popf
cmp
push
jg
mov
test
cmp
fsubr
scas
into
ja
mov
sub
hlt
add
retf
sub
(bad)
dec
inc
xchg
ins
outs
test
pop
and
test
(bad)
dec
jl
dec
lods
rol
xor
enter
sbb
ja
outs
adc
into
retf
pop
lahf
lods
retf
loopne
stos
cmc
outs
inc
pop
push
xor
mov
jne
mov
adc
inc
lea
xlat
mov
and
pop
bound
mov
pop
retf
sbb
arpl
test
out
scas
aaa
adc
(bad)
movs
xor
push
fist
getsec
mov
mov
xchg
push
repnz
pop
jns
sbb
sub
in
mov
outs
pop
outs
lock
xor
xor
mov
push
or
int3
arpl
jmp
or
leave
mov
in
or
jmp
ss
mov
rcr
mov
push
add
jmp
sbb
xchg
add
xchg
and
jle
sar
jno
mov
jnp
pop
loop
(bad)
in
aam
cdq
jmp
mov
inc
inc
mov
sbb
retf
cmp
sub
pop
call
xchg
and
int
and
test
retf
mov
sub
mov
(bad)
adc
repnz
call
push
jmp
(bad)
adc
ds
call
(bad)
ficomp
jae
loop
add
repnz
popf
jmp
pop
jmp
das
xor
(bad)
retf
(bad)
enter
ret
(bad)
rol
movs
jmp
fs
xor
scas
fst
mov
inc
jae
jns
imul
mov
dec
fmul
test
stos
lea
adc
cmp
daa
cmp
mov
sti
jb
pop
outs
stos
nop
jae
call
push
(bad)
into
cmp
xor
mov
push
jp
loopne
pop
and
xchg
pop
ror
xor
imul
out
mov
or
mov
xor
pop
push
pop
test
div
jbe
les
pop
lods
jae
add
outs
fs
aad
repz
(bad)
mov
les
push
jno
pop
pop
movs
jecxz
imul
mul
push
and
les
ficomp
dec
nop
pop
mov
mov
push
scas
mov
add
test
dec
stc
mov
xchg
jns
jmp
(bad)
neg
in
cmps
int
(bad)
pop
aam
pop
ret
(bad)
jmp
out
sar
test
mov
mov
std
(bad)
push
ja
loop
(bad)
xchg
in
lods
int
mov
sar
fdivr
cmp
mov
enter
int3
popa
stc
retf
fistp
inc
(bad)
lods
inc
push
xchg
add
push
fwait
shr
inc
retf
fwait
in
adc
fiadd
mov
cdq
and
lods
fsub
aaa
mov
jns
or
je
cli
sbb
mov
jecxz
adc
push
cli
daa
mov
jb
xor
in
add
sbb
jg
cmp
pop
hlt
mov
or
push
xor
mov
sub
ins
aas
ins
cmps
push
fadd
sbb
sbb
push
adc
jecxz
pop
lods
and
mov
out
inc
mov
or
jo
or
inc
cmovge
sub
retf
xchg
(bad)
sub
repz
xchg
mov
mov
cs
inc
dec
lds
dec
pop
xor
jbe
call
sahf
dec
jmp
sub
pushf
jns
inc
inc
fwait
(bad)
dec
ins
dec
mov
pop
inc
rcr
xchg
adc
popa
dec
mov
jae
loopne
adc
jecxz
lock
add
ds
sar
inc
pop
into
fucomip
inc
dec
inc
push
xchg
add
call
aam
cmp
(bad)
jno
in
ins
cmp
mov
retf
pop
aad
(bad)
cmp
shl
scas
inc
xchg
inc
icebp
retf
adc
mov
sub
pop
push
outs
cdq
xor
mov
cmp
cld
xchg
jle
push
clc
cmp
imul
ja
out
cwde
ds
cwde
paddusw
or
jmp
in
daa
jp
retf
push
retf
add
xchg
jo
outs
adc
jnp
daa
out
cmp
jle
(bad)
xor
xchg
test
pop
pop
sbb
sbb
mov
push
xor
jge
sbb
inc
adc
(bad)
test
inc
xor
pop
shl
or
adc
mov
mov
push
in
or
mov
leave
cmp
push
(bad)
sbb
push
int3
cwde
stc
call
sub
jl
sub
out
je
fs
add
xchg
popa
pop
mov
leave
mov
fld
push
stos
sbb
jle
push
ja
das
lods
fcomp
or
push
repnz
gs
or
cmp
mov
ss
movs
daa
sahf
cmps
rol
clc
cmp
cmp
jecxz
mov
jg
mov
xor
ins
mov
mov
mov
mov
loopne
inc
jmp
test
xchg
cmp
mov
neg
dec
imul
repnz
(bad)
push
inc
mov
cmp
mov
inc
int3
rol
mov
loop
jbe
pop
sub
int3
jge
scas
das
loop
fidiv
pop
jp
inc
ror
fcom
jle
add
jmp
int3
jmp
inc
push
push
sbb
xchg
add
fwait
dec
fidiv
ja
jg
aas
jmp
in
jb
mov
pop
jmp
loope
push
(bad)
fisubr
(bad)
push
retf
hlt
push
mov
sahf
fwait
test
pop
jbe
jmp
xchg
cmp
(bad)
(bad)
(bad)
push
loope
daa
mov
and
fistp
xor
sbb
int
sub
push
iret
outs
dec
inc
ret
sbb
imul
sbb
sbb
or
mov
cmc
dec
jo
test
cmp
jmp
movs
shl
add
hlt
mul
std
adc
fdivr
jecxz
add
(bad)
enter
pop
imul
sbb
cwde
jecxz
sbb
loope
ins
rcr
mov
lahf
jnp
push
cdq
push
in
push
repz
add
test
jmp
enter
add
lock
pusha
pop
stc
imul
imul
sub
stos
or
jbe
xchg
stc
fstp
pop
int
jae
add
jns
mov
add
push
test
rol
mov
mov
mov
sar
and
and
sub
jb
jno
(bad)
fist
xor
push
and
out
retf
add
dec
xor
test
ds
cli
xor
xchg
loop
and
xor
inc
jnp
inc
shl
addr16
adc
and
aas
lock
sbb
inc
and
aam
cmp
push
cwde
aaa
cvtdq2ps
scas
popf
jle
xchg
fmul
jb
in
mov
ins
pop
pop
sbb
(bad)
cmps
iret
mov
pop
hlt
and
sbb
scas
scas
je
ficom
or
outs
xchg
in
imul
sub
xor
out
stos
or
in
jge
mov
jnp
mov
fwait
repnz
les
call
dec
inc
mov
iret
shr
(bad)
int3
bound
hlt
and
mov
sub
ret
cmps
push
fist
jge
mov
pop
in
mov
fwait
not
je
ins
imul
adc
xchg
lds
mov
shl
dec
cmps
mov
xor
imul
dec
in
enter
lock
js
into
jnp
cmp
and
xchg
push
mov
cmps
mul
mov
clc
push
push
mov
sub
cmc
leave
push
push
in
(bad)
dec
cmp
dec
jbe
std
out
lods
addr16
push
inc
aas
push
fwait
in
aad
sub
dec
stos
sar
cmp
inc
mov
adc
ins
sub
fdivr
inc
mov
fnsavew
add
mov
xor
repnz
in
add
dec
bound
jmp
lea
imul
inc
dec
fwait
ds
xchg
push
out
xchg
iret
cdq
cmp
xchg
and
in
inc
dec
mov
cmp
and
sbb
in
xor
(bad)
cmp
cmp
mov
sbb
into
inc
cmp
cli
out
sub
into
cdq
xchg
add
bound
mov
call
fsubr
movs
inc
cmc
push
jnp
pop
in
lea
sub
(bad)
(bad)
mov
enter
loop
out
xchg
push
mov
(bad)
mov
pop
movs
fldenv
aaa
ret
dec
fsubr
xchg
xlat
dec
sti
neg
push
je
(bad)
pop
pop
jle
shr
mov
or
inc
je
rcr
scas
lods
jne
push
xchg
js
sbb
iret
push
cmp
or
out
js
mov
imul
jb
sar
add
sti
xchg
add
mov
push
jp
dec
inc
test
mov
fisubr
les
shr
call
sbb
and
xchg
std
xchg
imul
mov
or
sub
clc
iret
imul
ror
xchg
movs
ficomp
xlat
jmp
aad
lods
lods
adc
cmp
jg
enter
jmp
adc
repnz
mov
dec
cmps
push
pusha
retf
test
mov
ins
cmc
lods
pop
pop
dec
xor
cdq
push
mov
and
dec
push
rol
sti
push
adc
fdiv
repnz
(bad)
dec
cmp
outs
mov
push
and
add
mov
sbb
dec
pushf
dec
(bad)
sbb
push
pop
xor
and
mov
pop
dec
das
push
sbb
mov
(bad)
lds
and
xor
cmps
cli
mul
push
retf
pop
add
xchg
sahf
call
int3
loope
adc
movs
sub
mov
cli
jmp
jle
cdq
mov
adc
dec
shr
mov
jl
mov
add
mov
sbb
or
imul
sbb
jbe
jo
adc
jmp
out
test
sub
int
jmp
cmp
shl
pop
rcl
aaa
daa
mov
ins
push
pop
fcomp
ins
inc
add
popf
popa
out
xchg
movs
mov
mov
popf
fdivr
popf
add
pop
sbb
inc
fsubr
aad
cmps
mov
and
int3
cdq
dec
mov
test
out
fmul
aad
pop
add
pop
sbb
dec
into
push
xor
outs
lods
jmp
dec
or
ror
mov
int3
and
push
sahf
xlat
inc
adc
outs
xchg
xor
lahf
fcmove
out
cwde
dec
push
add
pusha
(bad)
adc
test
leave
imul
aas
mov
mov
push
icebp
push
(bad)
xchg
int
lea
fistp
arpl
sub
xchg
test
jb
jg
daa
xchg
outs
cld
mov
inc
or
xor
add
dec
in
cwde
gs
idiv
test
daa
je
adc
(bad)
ss
out
or
fmul
push
mov
loope
pusha
mov
mov
add
sbb
repnz
stc
push
mov
mov
shl
xor
das
stos
mov
cmp
adc
pop
leave
dec
and
sbb
cwde
xor
out
jle
nop
and
fwait
xor
repz
int3
xchg
dec
test
jo
lock
xor
mov
push
push
loope
arpl
pop
cwde
ss
and
xchg
out
push
push
ret
aam
mov
call
not
fisttp
and
push
inc
sub
rol
and
outs
add
(bad)
pop
in
arpl
pop
add
cmp
lahf
adc
add
(bad)
dec
sbb
lahf
ret
jnp
pusha
loopne
sub
dec
sbb
cmp
ret
inc
out
hlt
inc
and
call
arpl
(bad)
movs
dec
jecxz
mov
mov
pop
mov
mov
or
test
push
add
and
inc
ficomp
xchg
ret
outs
pop
(bad)
inc
scas
jmp
ins
cmp
fs
lock
pop
cmp
idiv
aaa
adc
scas
xchg
fstp
popf
not
lods
cdq
out
fiadd
push
add
jge
cmp
aas
(bad)
bound
jmp
xchg
cmp
icebp
lahf
cmp
enter
xor
ins
fiadd
adc
retf
iret
add
mov
or
outs
cmp
mov
inc
rol
mov
sahf
jecxz
(bad)
out
jmp
popf
clc
xchg
(bad)
and
push
jge
loop
jo
in
cmp
jnp
imul
jno
(bad)
std
lock
inc
(bad)
adc
push
push
inc
mov
mov
in
push
push
out
lods
mov
js
dec
fist
stos
(bad)
fldenv
mov
mov
mov
pop
(bad)
ss
les
clc
and
mov
push
retf
arpl
icebp
leave
xchg
mov
arpl
(bad)
ins
xchg
test
fstp
rol
test
int3
es
daa
add
inc
xor
jb
mov
xchg
repz
aad
xor
xchg
sub
inc
in
adc
fidivr
add
stos
pop
add
cs
addr16
add
mov
popf
les
aaa
push
inc
leave
pop
into
adc
fs
into
mov
mov
loop
dec
fs
scas
aam
mov
test
mov
ds
mov
scas
test
pushw
mov
add
jge
rcr
adc
mov
(bad)
int3
push
sub
popa
sbb
xchg
push
loopne
push
pop
jbe
jo
xlat
rol
movs
mov
rcr
cmp
dec
data16
jg
and
mov
int
add
sahf
mov
lods
jns
icebp
popa
outs
xor
movs
mov
cmp
ins
cmp
cmps
or
jmp
jno
jae
jp
xor
cdq
jmp
and
jmp
pop
and
or
and
adc
push
mov
das
inc
cmp
mov
push
jne
pop
pusha
xchg
mov
inc
or
mov
add
jnp
pop
xchg
xor
jmp
mov
xchg
sbb
jbe
in
scas
adc
sbb
out
cld
adc
lods
dec
or
push
cmp
inc
neg
sub
pop
push
mov
cld
sub
cmps
cmp
dec
out
pusha
rcr
xchg
cmc
rcr
inc
and
fisub
jns
ss
or
add
mov
inc
jbe
scas
ins
hlt
mov
push
or
mov
or
and
inc
and
mov
push
xchg
sahf
cdq
xchg
mov
fidivr
shl
sub
leave
mov
push
push
add
adc
jo
test
pop
cmps
xor
push
mov
add
xchg
sbb
xchg
adc
mov
push
int3
retf
cmp
dec
imul
test
cmc
nop
leave
mov
ins
mov
(bad)
mov
or
popf
out
or
push
adc
arpl
inc
inc
gs
mov
push
imul
sar
jo
or
shl
dec
leave
mov
movs
int
fs
jp
mov
movs
shl
inc
cmps
ins
popf
cmp
fimul
clc
mul
scas
das
cli
fbstp
call
jge
(bad)
and
jae
xchg
mov
repnz
inc
inc
mov
inc
mov
and
bound
faddp
pop
aas
inc
jbe
jbe
cdq
add
mov
pop
sub
push
sub
pop
sbb
cwde
inc
adc
sub
mov
popf
jp
sub
nop
enter
aad
cmp
mov
loop
in
and
pushf
outs
icebp
ja
clc
or
cld
in
jo
out
call
inc
mov
lds
sbb
push
and
xor
(bad)
xlat
cmp
data16
and
cmps
jo
xchg
les
adc
xchg
cwde
push
rcr
test
stos
adc
std
xchg
jle
idiv
imul
pop
push
shr
xchg
(bad)
(bad)
and
dec
xchg
in
call
adc
or
fiadd
lahf
pop
push
dec
mov
cwde
adc
xchg
dec
sub
jbe
(bad)
jnp
dec
mov
loopne
out
iret
mov
(bad)
nop
in
xor
das
cmp
loope
mov
mov
mov
cdq
es
(bad)
cwde
movs
scas
jns
mov
xor
inc
repz
jo
jp
mov
inc
(bad)
imul
pop
add
xchg
xor
pop
push
mov
or
shr
push
lods
mov
nop
adc
ret
xor
in
ror
mov
inc
repz
adc
adc
adc
out
lock
sub
mov
scas
retf
jbe
pop
test
fs
in
add
add
ss
addr16
push
push
ret
push
in
xor
dec
and
mov
pop
cmp
fstp
push
mov
not
xor
hlt
shl
inc
and
xor
repz
dec
inc
das
jp
mov
or
dec
jbe
mul
push
enter
and
enter
jns
(bad)
sahf
inc
test
xlat
pop
pushf
ror
dec
jmp
mov
mov
xor
mov
xor
adc
test
fisub
std
jmp
dec
sub
xchg
or
popa
jge
jp
dec
sar
mov
and
xchg
out
sbb
fwait
xor
lds
push
sub
jp
leave
out
pop
lods
jmp
int3
mov
sub
(bad)
bound
xchg
mov
es
push
jno
adc
or
mov
shr
mov
or
cmp
xchg
in
add
mov
pop
mov
mov
neg
loope
xchg
add
inc
dec
adc
inc
add
push
test
mov
xor
jae
push
jo
stos
addr16
test
inc
addr16
out
cdq
adc
cmp
cmp
mov
jnp
rcl
xchg
imul
push
shl
jbe
or
call
call
(bad)
jns
mov
(bad)
retf
sbb
mov
pop
xchg
mov
xchg
jecxz
pop
movs
aam
mov
clc
fist
push
aaa
lock
rcl
aas
jle
pop
out
push
repnz
sbb
adc
out
movs
add
jo
aas
sbb
adc
sbb
mov
and
and
push
mov
test
jae
out
jnp
dec
imul
add
and
popf
or
sti
out
(bad)
inc
sub
jp
pusha
cmp
cli
rol
adc
add
aam
cmc
push
outs
loop
adc
cmps
(bad)
nop
cmp
jmp
nop
inc
fistp
xor
xor
pop
sbb
xchg
(bad)
adc
jae
sub
mov
dec
cli
lea
es
shl
jno
lods
cmp
inc
cdq
xchg
mov
aaa
add
(bad)
push
div
cmc
int3
add
popa
outs
add
sub
mov
ror
push
sar
push
sbb
loopne
cwde
adc
in
dec
jp
or
in
jmp
pop
or
lea
mov
mov
outs
in
pop
add
in
shl
sar
rcl
pop
push
stos
xchg
sbb
and
sbb
in
cmps
jmp
pushf
fst
mov
(bad)
xchg
pushf
jbe
adc
cld
xchg
push
aad
repnz
scas
ret
arpl
sti
mov
jns
add
cmp
and
je
stc
cmovo
jmp
xor
inc
jbe
sbb
pop
push
sub
and
data16
pusha
jmp
js
ret
sub
outs
xchg
outs
fsub
xchg
push
sbb
adc
int3
test
jmp
ret
pop
sbb
pop
mov
adc
and
sahf
in
cmp
cmp
(bad)
inc
loopne
or
jmp
and
mov
push
ja
in
jae
dec
xchg
push
push
xlat
ds
or
daa
fiadd
cmp
adc
test
repnz
in
ss
imul
mov
mov
imul
push
jnp
and
mov
fs
adc
loop
fldcw
sub
sub
(bad)
inc
ins
je
daa
into
retf
int3
xor
into
sbb
addr16
(bad)
mov
mov
fild
test
fld
mov
clc
mov
cdq
xchg
push
xor
xor
mov
sub
add
into
(bad)
lods
push
jl
lds
out
mov
(bad)
(bad)
jne
add
and
push
ss
push
(bad)
sub
xchg
out
push
pop
push
cmp
test
test
push
rol
xchg
stc
data16
das
lods
repnz
rcr
xchg
cmps
cmp
mov
ins
mov
xor
dec
(bad)
and
sbb
mov
fimul
xchg
push
stos
fcomp
mov
lahf
arpl
mov
call
cmp
ins
or
sbb
test
add
push
imul
call
shl
movs
test
pop
pop
sbb
cs
mov
aam
cmp
mov
jb
dec
shrd
or
push
je
sbb
fnstcw
mov
sbb
aas
clc
jmp
ins
into
mov
sahf
jp
pop
inc
adc
mov
popf
pop
or
ds
clc
xor
outs
test
pop
xlat
inc
test
lds
or
sub
and
add
cmp
dec
jno
push
jbe
pop
imul
jo
jmp
mov
imul
mov
stos
sbb
jns
adc
xchg
dec
repnz
dec
mov
add
or
push
cmps
ja
xor
fst
lock
jnp
jle
cmps
lock
dec
(bad)
sbb
lahf
cdq
xchg
lahf
aaa
(bad)
cmp
in
push
lahf
add
cs
bound
in
pop
sbb
xor
inc
daa
ins
mov
mov
or
scas
add
fisttp
not
ins
repz
(bad)
add
mov
(bad)
jae
retf
dec
lods
(bad)
shl
or
mov
scas
rcr
(bad)
push
inc
loopne
enter
cmp
pushw
xor
adc
mov
nop
push
jns
add
mov
mov
dec
push
mov
ret
jl
mov
int
pop
inc
cmps
popa
test
lea
mov
dec
je
cli
pop
stc
or
movs
sub
movs
inc
daa
(bad)
imul
xor
and
dec
into
add
dec
sbb
jmp
adc
jne
daa
jb
sub
inc
xchg
xchg
push
sahf
and
loopne
jae
jmp
lds
xchg
push
mov
xor
out
fimul
stc
mov
jecxz
(bad)
lods
ds
add
fisttp
mov
hlt
in
stos
push
cdq
or
scas
in
push
fisttp
outs
popa
fstp
pop
adc
loop
pushf
push
popf
cmp
adc
data16
in
mov
dec
test
mov
or
cld
jmp
hlt
inc
push
movs
or
inc
outs
add
pop
or
mov
mov
gs
xchg
jg
test
or
inc
mov
push
xchg
push
mov
pop
leave
adc
mov
(bad)
call
xlat
jecxz
cld
dec
popf
outs
xor
test
(bad)
xlat
cmps
fbstp
and
hlt
push
dec
pop
pop
ss
xor
inc
(bad)
repnz
dec
(bad)
xchg
idiv
jns
je
repz
mov
xchg
mov
ds
aaa
iret
mov
push
pop
cmc
mov
in
scas
in
leave
push
ss
inc
sbb
xchg
mov
mov
outs
retf
xchg
xor
outs
data16
mov
in
or
xchg
ins
pop
xlat
sbb
adc
mov
ret
push
inc
std
pop
xor
(bad)
aam
sub
push
(bad)
bound
jne
sti
retf
aaa
sbb
xor
(bad)
pop
test
pop
sbb
sar
outs
in
mov
push
inc
push
xchg
jl
cmp
lods
sub
leave
scas
xchg
dec
pop
test
cmp
sub
shl
adc
mov
fdivr
cmp
mov
cld
adc
repnz
test
pop
mov
loopne
dec
jecxz
icebp
xor
shl
sbb
sbb
ret
std
hlt
fmul
repnz
adc
sub
xchg
repnz
sahf
cmp
js
dec
fisttp
jo
sbb
mov
test
push
dec
arpl
mov
adc
add
inc
lahf
xchg
in
fsub
jnp
or
jmp
les
push
mov
loopne
sub
xor
enter
inc
test
lock
cmp
mov
cmp
xchg
cli
sti
ret
mov
push
daa
and
outs
jmp
rol
fs
pop
pop
mov
jne
aad
imul
inc
and
jo
jmp
pop
rcr
lahf
ret
pop
or
pop
leave
je
rcl
sbb
sub
adc
leave
fbstp
sbb
mov
cmp
ins
sbb
cmps
not
shl
sbb
mov
stc
jb
popf
sub
inc
(bad)
xchg
outs
cwde
aam
jecxz
pop
adc
xchg
or
mov
cmp
cmp
jno
dec
push
and
mov
inc
xor
cmp
call
loopne
jbe
and
xchg
sti
inc
xchg
ret
pop
je
daa
jb
pop
mov
pushf
pop
mov
and
cmps
imul
cli
push
xchg
cmp
and
sbb
push
pop
movs
push
in
(bad)
aad
and
mov
stc
(bad)
pop
cmps
add
sbb
aam
push
lods
fisttp
aam
dec
mov
jmp
mov
xlat
cmp
push
push
sbb
mov
xor
cmp
jae
call
(bad)
repnz
add
cmp
test
movs
pop
shr
(bad)
aas
sti
dec
into
mov
inc
lods
adc
mov
xchg
or
sub
daa
mov
dec
inc
push
add
sbb
or
je
mov
or
(bad)
retf
fwait
or
inc
neg
das
test
pop
pop
shl
out
lea
popa
dec
push
popa
bsr
scas
pop
mov
icebp
add
adc
sahf
outs
sbb
jnp
mov
cld
fdivr
enter
movs
pop
mov
jle
int
and
int
lahf
ret
cmp
jp
not
mov
shl
cmp
push
push
scas
jmp
in
sbb
sbb
sub
add
jnp
or
cdq
inc
add
sbb
pop
pop
nop
jns
push
jle
sub
add
loop
mov
adc
and
scas
cmps
cmp
mov
xchg
pop
push
iret
xor
xchg
loopne
cli
xchg
cld
sbb
mov
lahf
outs
jle
mov
into
sbb
inc
xor
adc
add
xchg
cwde
or
add
mov
inc
stos
sub
push
mov
dec
stc
addr16
inc
xlat
cmp
pop
addr16
xchg
jecxz
push
xor
push
jns
inc
gs
dec
(bad)
jmp
leave
jmp
jle
jne
mov
inc
inc
lahf
or
cs
dec
dec
adc
scas
xchg
je
(bad)
addr16
or
jp
dec
xchg
dec
in
rcr
inc
stos
addr16
push
dec
xor
mov
loop
aad
add
fsub
mov
push
cmp
mov
jge
push
xor
fisubr
pop
mov
lods
sbb
in
fiadd
scas
out
clc
fidivr
and
and
in
sbb
jge
retf
aas
and
or
test
adc
pop
inc
xor
and
retf
cli
leave
sub
jg
cwde
mov
jnp
test
cs
imul
cmc
dec
ret
cwde
dec
int
ds
mov
jl
out
xor
(bad)
cmps
pop
jb
pop
pop
loop
push
cmps
or
cmp
add
xchg
fisub
add
adc
jmp
mov
ja
(bad)
outs
popf
lods
inc
jecxz
and
jae
int3
pusha
gs
fwait
lods
pop
xor
std
stos
mov
pop
xchg
leave
jae
test
jecxz
adc
mov
jmp
push
sbb
adc
lods
je
test
cmp
movs
cld
clc
sbb
in
fs
pop
scas
sbb
lock
mov
or
(bad)
ficom
cmps
jae
push
mov
rcl
bound
push
fs
popf
pop
mov
cmp
dec
mov
mov
push
pop
sbb
mov
clc
sub
add
sahf
mov
or
jge
fisubr
les
jne
int3
movs
push
xor
jmp
add
out
inc
adc
jmp
call
and
loope
inc
int
sbb
and
stos
cmp
jns
push
add
jg
loop
imul
inc
int
mov
sti
or
in
ficomp
and
pop
(bad)
push
push
call
dec
jb
cmp
sub
mov
push
test
pop
fistp
mov
jmp
icebp
pcmpeqd
ja
add
mov
and
lds
mov
sub
jmp
out
lahf
fs
mov
cmp
(bad)
add
call
mov
adc
cs
in
mov
cmc
mov
out
stc
mov
push
sbb
xor
add
sub
fs
cmc
jno
push
add
(bad)
or
mov
xor
in
inc
and
popa
jmp
add
not
pop
lock
popf
sub
loope
dec
test
test
daa
fucomip
push
ret
mov
clc
iret
sub
stos
mov
xchg
cmps
je
and
mov
punpckldq
call
jne
cmp
iret
xchg
add
or
fucomip
fsubrp
lea
bound
addr16
int3
mov
(bad)
mov
pop
sbb
xor
std
pop
lods
popa
pmaxub
push
inc
out
cmp
and
aam
adc
or
(bad)
pop
popf
and
sub
cmp
bound
lods
push
ds
push
inc
out
jmp
push
add
cld
cmp
cmps
cmps
mov
jae
bound
xchg
sub
mov
fwait
xor
stos
(bad)
mov
sahf
out
cmp
inc
das
shl
cdq
jle
push
pop
std
popa
mov
push
jnp
(bad)
mov
ret
cdq
mov
aas
add
push
push
jecxz
fmul
pop
sub
mov
sub
lock
add
mov
cmp
dec
and
mov
js
push
adc
jp
fild
ret
sub
ins
jmp
js
movs
and
test
mov
mov
in
jb
imul
fistp
shl
loop
js
ret
stc
mov
daa
fisttp
jno
call
mov
test
in
xchg
sti
cmp
add
call
mov
xchg
iret
jbe
xlat
std
pop
lea
out
cmc
sub
adc
stc
mov
out
push
sti
mov
bound
into
ins
dec
idiv
ds
sub
cmp
je
ret
sar
std
mov
sbb
jle
jmp
adc
loop
sbb
clc
pop
jmp
push
push
mov
sbb
out
pop
cld
adc
(bad)
test
xchg
jle
and
jecxz
rcr
push
cdq
(bad)
jo
retf
iret
pop
cmc
retf
sbb
xchg
add
mov
mov
or
movs
add
hlt
popf
pusha
mov
push
xchg
imul
fnstenv
add
sub
xchg
push
mov
sub
pushf
ds
adc
ins
cmps
popa
in
dec
xlat
pop
cmps
jl
outs
(bad)
add
push
dec
addr16
mov
dec
pop
push
cmp
outs
xchg
xchg
inc
bound
sub
adc
push
and
(bad)
out
or
cmp
sub
std
inc
cmp
or
add
imul
pop
jns
xor
outs
push
pop
dec
push
repz
push
lahf
aas
mov
iret
adc
push
je
or
imul
fldenv
cmp
fcom
pushf
outs
xlat
fidivr
jns
mov
mov
and
bound
mov
ror
dec
enter
xor
outs
addr16
cmps
jl
mov
mov
cs
mov
or
pop
push
jmp
adc
dec
rol
lahf
fwait
hlt
aam
inc
ficomp
lea
xor
mov
mov
cld
pop
add
pop
push
adc
xor
shr
mov
inc
xor
ds
fld
xchg
and
and
mov
sub
pop
sbb
mov
jp
test
mov
jmp
loopne
in
inc
mov
push
xchg
push
sahf
xor
das
xor
aad
hlt
lods
xor
sbb
adc
cmp
gs
call
mov
movs
xchg
ficom
add
or
cmc
pop
daa
mov
and
stos
repnz
jge
pop
repnz
adc
cmp
inc
imul
sbb
add
add
mov
aam
push
mov
mov
cmp
adc
mov
sub
xor
test
(bad)
jg
adc
rol
(bad)
repnz
and
in
pusha
cmp
out
push
add
ficomp
cmp
aam
and
int3
mov
or
mov
or
push
pop
fst
sbb
cli
bound
mov
mov
mov
dec
(bad)
dec
(bad)
mov
test
(bad)
stos
js
lds
mov
mov
mov
mov
ror
and
mov
push
ror
or
(bad)
lods
bound
std
outs
adc
stos
test
pop
cmp
adc
rol
push
call
and
adc
fwait
dec
loopne
cmp
mov
ss
imul
or
adc
movs
xchg
xchg
or
bound
cmp
and
dec
pop
mov
xchg
adc
lods
and
outs
std
icebp
retf
push
pop
popf
jno
and
push
call
jbe
fwait
push
fbstp
cmps
push
xchg
enter
lods
push
cmp
push
sub
lahf
mov
clc
ja
call
out
xor
mov
out
mov
pop
cld
jg
pusha
stos
mov
inc
jnp
movs
lock
jne
sub
mov
repnz
xchg
cmp
push
out
frstor
jl
xchg
clts
data16
mov
retf
and
pop
adc
sbb
div
dec
movs
push
inc
pop
xchg
jl
in
jb
mov
push
pop
jl
fadd
mov
mov
dec
rcr
push
sub
cwde
jbe
jle
xor
js
daa
daa
adc
(bad)
fisubr
les
cmp
adc
jno
xor
rol
mov
lods
xchg
ds
pop
loopne
xor
aam
pop
pop
scas
cmps
mov
and
test
jno
out
dec
aas
jae
xchg
je
nop
xor
sub
jo
or
jns
int3
dec
xor
adc
mov
int
jl
fld
sti
sbb
nop
jmp
xor
or
push
xchg
dec
adc
and
stos
sti
jne
or
repz
push
daa
test
dec
int3
pop
and
push
push
lahf
sbb
mov
mov
xor
test
add
popf
dec
retf
cmp
push
fistp
mov
gs
popa
push
call
ror
mov
sahf
loopne
pop
sbb
fstp
call
and
sahf
push
aad
jo
xchg
js
test
xor
aas
in
jl
shr
sbb
add
enter
mov
mov
pop
sti
and
push
int3
inc
pop
mov
push
sbb
add
fwait
bnd
(bad)
cmp
popa
mov
mov
push
mov
aas
dec
or
mov
pop
out
mov
add
pop
push
cmp
lahf
adc
and
pop
stc
dec
dec
rcr
ins
pop
push
dec
shl
xchg
mov
outs
push
pop
loop
jle
aad
or
arpl
and
adc
cmps
push
rcl
(bad)
fisttp
xchg
xchg
dec
adc
outs
retf
push
inc
shl
sbb
push
fbld
call
retf
push
xchg
push
loopne
fnstcw
xchg
jecxz
mov
add
lods
retf
mov
inc
stos
sub
loop
mov
fsubr
in
xor
sbb
mov
stos
mov
jp
xor
mov
stos
jmp
repnz
(bad)
div
mov
into
pushf
stc
jmp
adc
mov
loopne
iret
sahf
sub
test
xchg
jl
xchg
into
imul
ror
xor
pop
ins
and
retf
xor
add
mov
(bad)
leave
xchg
(bad)
xchg
js
sahf
sbb
xchg
pop
or
mov
out
daa
mov
and
adc
xlat
int
cmp
lds
je
fcmovnb
dec
mov
movs
and
add
mov
pop
jae
cmp
push
mov
mov
rol
jmp
(bad)
std
adc
mov
rol
inc
xor
push
cdq
icebp
or
shr
stos
mov
clc
adc
lahf
shl
inc
sti
aas
mov
lahf
mov
pop
pop
pop
or
ror
enter
jmp
sub
scas
(bad)
aam
int
scas
nop
ins
adc
cmp
je
repz
mov
xchg
mov
jl
sub
in
sbb
repnz
outs
dec
in
jle
push
and
fisub
mov
outs
mov
loope
cmps
xor
cmps
jl
xor
daa
inc
bswap
call
lock
sbb
into
out
sub
xchg
dec
add
adc
aas
sbb
ret
xor
out
or
rol
lahf
ret
daa
shl
inc
ror
jnp
out
clc
dec
sub
mov
in
dec
mov
pop
cmp
in
repnz
in
pop
xor
mov
sbb
addr16
mov
(bad)
bound
jecxz
mov
jae
sub
scas
fdiv
adc
stos
retf
add
xchg
pop
cmp
das
jp
iret
sbb
sahf
loop
xchg
jnp
mov
mov
push
daa
xchg
rcl
cmp
nop
and
ret
sub
aad
pusha
out
and
sbb
sub
addr16
or
(bad)
pop
(bad)
shr
or
fsubr
nop
push
pop
adc
imul
sub
arpl
jg
xor
pop
pop
jbe
fild
sbb
pop
call
outs
pop
cdq
loop
xlat
aas
push
fcomp
or
icebp
es
adc
jl
jl
imul
les
and
push
sub
xchg
or
mov
cmp
inc
and
outs
cmp
pop
in
jnp
mov
sub
and
repz
mov
call
inc
mov
(bad)
popf
dec
in
push
jge
cmp
pop
mov
out
frstor
pop
lahf
fwait
jno
cs
xchg
jg
test
mov
imul
push
scas
mov
nop
lock
ins
movs
scas
ja
pop
cdq
inc
aaa
lock
loopne
dec
xor
aad
dec
or
(bad)
cld
push
leave
pop
push
ror
dec
jns
jnp
xor
ret
jne
xlat
cmp
aad
rcr
pop
dec
push
stos
mov
cmp
cmps
sub
(bad)
loope
dec
or
fadd
xlat
outs
mov
sbb
jl
jecxz
jmp
pop
mov
mov
enter
imul
xcrypt-cbc
cmps
xchg
clc
sbb
sahf
xor
and
mov
fmul
test
lahf
aaa
xchg
into
pushf
adc
cli
or
cmp
sti
ret
addr16
aaa
fwait
xor
fisttp
dec
add
inc
dec
cli
and
pop
pop
jne
mov
push
cmp
mov
hlt
vmread
mov
sub
xor
test
popf
bound
xor
icebp
sahf
adc
xchg
bound
repnz
leave
jl
fimul
dec
(bad)
mov
out
dec
inc
add
xchg
aad
inc
aas
sbb
outs
mov
fsubr
jl
retf
mov
retf
test
les
gs
mov
movs
fdivr
push
shr
retf
rol
xor
mov
add
push
xchg
loope
push
inc
mov
xchg
in
popa
ds
fisub
or
sahf
jp
cmc
mov
xor
int
sub
ret
inc
and
xchg
xor
adc
fwait
into
icebp
or
mov
out
mov
test
dec
mov
xchg
dec
push
inc
(bad)
shl
lea
pop
scas
jae
or
cmp
repz
iret
mov
cmps
dec
icebp
shr
movs
add
push
rcl
push
ds
sar
sar
inc
movs
ins
jg
xor
fistp
sub
movs
push
push
push
or
sbb
cmps
mov
stos
icebp
aad
aam
inc
push
(bad)
jl
test
cmc
scas
retf
jae
mov
xchg
enter
jmp
or
ja
mov
cmp
ins
out
add
daa
pop
rcr
cmp
or
jmp
adc
jg
scas
fs
sub
jne
cli
retf
push
adc
sub
sahf
adc
adc
scas
pusha
cmp
cs
stos
ror
xchg
push
push
push
pop
loopne
xlat
mov
(bad)
loopne
xlat
(bad)
fcmovnu
pusha
add
inc
and
cmc
fs
ja
add
adc
loop
xor
mov
adc
jmp
cwde
int
and
add
inc
cmp
jns
mov
scas
hlt
scas
stos
in
mov
mov
xor
push
pop
arpl
arpl
inc
(bad)
mov
jns
mov
enterw
mov
inc
or
mov
sar
bound
sub
add
jmp
mov
fsubrp
pop
push
jns
inc
les
push
in
test
adc
or
mov
inc
call
retf
xchg
test
cmc
iret
mov
push
and
fwait
dec
sti
add
and
dec
xor
jno
call
sub
sub
outs
(bad)
imul
loope
jno
(bad)
mov
or
dec
div
(bad)
sub
mov
out
dec
or
push
dec
out
imul
mov
fistp
scas
xor
push
xchg
mov
mov
vcvttss2si
loope
fldcw
mov
sub
movs
daa
pinsrw
mov
cmp
out
(bad)
sub
pop
sub
retf
into
mov
(bad)
sbb
adc
sub
mov
in
jle
and
adc
sub
mov
xchg
loopne
(bad)
sar
pop
pop
cli
inc
in
ficom
jecxz
aad
(bad)
cmp
imul
mov
jae
aaa
in
in
imul
dec
dec
rcl
cmp
dec
sahf
xor
xchg
out
cmp
test
and
imul
cmc
retf
loop
add
inc
test
mov
xchg
mov
dec
cmps
les
push
cmps
sahf
jno
repz
pushf
addr16
push
sbb
mov
jmp
adc
ss
sti
dec
jnp
mov
neg
cmp
push
ins
js
add
scas
sahf
xchg
lds
adc
aam
mov
add
cmps
mov
repnz
retf
fst
cmp
rcr
idiv
add
cmp
rcr
add
mov
movs
mov
inc
xchg
pop
cdq
sahf
icebp
mov
pop
sub
xchg
hlt
out
dec
nop
test
cmp
(bad)
jnp
mov
inc
movs
out
inc
cmp
rcr
inc
and
add
fdivr
movs
sbb
loope
call
lods
int
xchg
xchg
xchg
mov
ins
(bad)
daa
scas
cli
mov
fidiv
ret
in
(bad)
lahf
dec
push
inc
sbb
imul
in
lahf
call
xor
xor
jg
sbb
add
fld
lock
bound
lahf
inc
dec
repnz
ss
stc
imul
fidiv
mov
and
fild
test
jecxz
daa
dec
dec
mov
cmps
ror
fnsave
mov
inc
stos
inc
fs
stos
fstp
jg
mov
in
dec
xchg
xchg
mov
mov
(bad)
sbb
rol
test
jmp
je
jp
mov
inc
sub
mov
inc
xchg
loop
fwait
jmp
ss
cmp
adc
cmp
fisttp
jb
test
bound
int
jnp
add
ins
dec
mov
xor
or
push
mov
sub
sbb
ror
add
sub
xor
and
mov
js
mov
mov
push
rcr
sti
cmp
lds
xchg
pop
mov
pop
inc
sbb
dec
push
pop
cli
mov
enter
test
out
cmp
push
cmp
xchg
(bad)
mov
mov
icebp
jne
fdivr
jmp
data16
xor
or
cmc
add
call
stc
inc
xchg
imul
mov
dec
jg
aaa
scas
ins
xchg
rcr
shl
xchg
loopne
imul
push
(bad)
and
imul
call
pop
lods
test
cmp
outs
scas
cmc
scas
cmp
cmp
push
or
cmp
jl
stc
sbb
dec
add
loope
test
dec
xchg
shr
dec
hlt
dec
popf
int3
mov
test
cdq
jmp
jno
mov
adc
dec
bound
pop
in
scas
fs
mov
stos
(bad)
push
xchg
jp
adc
push
inc
repz
out
jb
scas
xchg
cs
in
pop
mov
stc
inc
(bad)
mov
imul
in
mov
xor
in
or
fist
xor
mov
inc
push
push
ret
out
adc
dec
mov
mov
pop
mov
lods
push
mov
add
add
fsubr
mul
and
mov
mov
add
shl
mov
lahf
cmc
call
outs
and
cmps
mov
outs
fcom
lock
sub
call
mov
inc
in
push
ja
sahf
xor
push
pop
outs
mov
add
jle
fimul
sbb
(bad)
xor
sbb
jnp
lods
movs
mov
xchg
adc
mov
push
cmp
shl
dec
fnstcw
xor
dec
into
fwait
jo
dec
cs
inc
mov
hlt
outs
jg
cmp
popf
mov
mov
sar
push
or
add
mov
mov
imul
jbe
jmp
addr16
iret
ja
xchg
jae
enter
loopne
pop
sub
sub
pop
mov
push
(bad)
pop
push
lods
mov
nop
sbb
in
(bad)
pop
cmp
pushf
mov
out
xchg
lods
cmovo
fmul
push
ins
nop
push
mov
ret
jl
inc
sub
add
bound
jmp
or
int
inc
lods
int
int3
xchg
cmp
(bad)
jg
adc
push
aad
mov
lods
ret
sbb
push
lea
mov
mov
pop
jge
aaa
push
mov
mov
xchg
xor
mov
outs
ins
(bad)
mov
clc
pcmpgtw
loope
outs
adc
or
outs
and
mov
mov
mov
cld
mov
adc
xchg
lods
test
data16
push
pop
xlat
mov
outs
jbe
dec
int
loop
imul
adc
fcomp
adc
sub
std
xchg
outs
aam
dec
push
inc
mov
sti
mov
cli
adc
jns
or
push
cli
xor
inc
push
mov
mov
inc
add
mov
or
dec
dec
pop
fmul
out
mul
lahf
jmp
dec
xor
or
and
inc
mov
fnsave
cmp
jmp
inc
push
inc
out
xchg
fidiv
jg
mov
movs
dec
imul
addr16
leave
test
mov
push
jnp
mov
add
push
pop
lods
into
mov
pop
xor
lods
adc
mov
imul
jnp
test
inc
jmp
push
das
jge
jle
inc
stos
mov
jns
pop
or
aam
aas
jle
xor
enter
sar
and
arpl
shl
inc
int
sub
lahf
addr16
imul
ret
pop
rep
rcr
or
out
pop
fsub
pop
out
jmp
or
or
xor
jl
mov
loop
cmp
mov
xor
and
lock
ins
or
mov
sbb
jbe
fist
mov
xchg
icebp
test
sbb
adc
pop
jge
(bad)
add
js
ins
dec
add
in
out
lds
jbe
retf
fdiv
pop
pop
nop
or
sbb
xchg
(bad)
cmp
cdq
push
pop
(bad)
aas
mov
jns
das
lds
mov
stc
cmp
xchg
cmp
lea
push
cli
ret
mov
int3
adc
inc
into
clc
cmp
dec
arpl
or
and
ficom
call
pop
fyl2x
mov
xchg
lods
ficom
test
pop
in
cmp
push
cmp
add
dec
les
jp
leave
(bad)
int
push
pop
gs
sub
cmc
ret
leave
add
or
push
in
les
jne
jl
cld
mov
imul
imul
inc
aad
loopne
mov
test
pop
cmp
push
or
sbb
add
imul
add
cmc
faddp
lods
mov
and
idiv
ds
dec
mov
fiadd
cmp
xlat
pushf
jg
mov
stos
(bad)
rol
imul
enter
adc
jg
add
add
and
cld
adc
iret
out
clc
xor
adc
cmp
pop
je
sar
loopne
inc
add
in
jl
retf
adc
pop
dec
addr16
into
loopne
sbb
data16
sar
out
adc
mov
jge
lds
inc
hlt
cs
mov
mov
mov
test
cmp
cmp
ret
outs
sar
inc
adc
mov
cmp
dec
xchg
ins
mov
in
lock
xor
repz
xchg
mov
pop
cmc
test
and
int
(bad)
mov
fdiv
into
popa
and
aaa
xor
fsub
mov
(bad)
sbb
lods
cld
out
icebp
lods
pusha
mov
or
sub
adc
gs
pusha
ret
push
dec
pop
movd
xchg
sbb
jmp
fwait
or
add
aaa
pop
add
add
loop
ret
outs
mov
push
adc
mov
cmp
sahf
(bad)
sbb
test
adc
jle
push
sub
std
dec
xor
mov
mov
movs
pop
add
int3
mov
wbinvd
mov
arpl
sti
xor
scas
push
push
adc
push
mov
into
pushf
mov
or
pop
repz
push
ret
out
sbb
cmp
cmp
popf
mov
mov
jmp
xor
xor
stos
arpl
pop
lahf
pop
cmp
inc
lock
sbb
cmp
pusha
cmp
dec
xchg
add
ror
out
sbb
repz
add
and
jne
mov
and
push
and
jmp
adc
add
aas
push
getsec
cli
jns
shl
movs
(bad)
movhps
pop
int3
cmps
aas
jno
or
adc
dec
out
retf
dec
and
jae
pop
jne
(bad)
push
cmp
nop
mov
dec
pop
xchg
mov
ds
xchg
into
mov
mov
mov
hlt
and
mov
mov
xchg
(bad)
dec
mov
jp
xchg
imul
sbb
test
ror
retf
or
add
cld
fwait
mov
inc
lock
stos
rcl
and
int
dec
pop
sub
xlat
cld
jae
adc
shr
pusha
add
cmp
cmps
shl
scas
ins
jno
or
shl
adc
xor
test
data16
cmp
shl
retf
std
int
mov
(bad)
out
mov
cmp
sub
pop
sar
add
(bad)
adc
cmp
rcr
dec
xlat
rep
dec
dec
repz
push
repnz
lock
out
retf
std
fwait
(bad)
dec
(bad)
dec
xchg
addr16
push
fst
sti
cwde
lea
cld
je
adc
inc
mov
xchg
nop
xchg
aam
popa
aad
shr
je
and
pop
dec
cli
jecxz
pop
sub
push
ins
inc
jmp
xchg
hlt
jl
push
pop
pusha
rcl
popa
dec
sub
and
sub
pop
mov
pop
mov
and
xor
lods
fs
pop
and
jno
(bad)
and
cdq
jnp
pop
sbb
ret
stos
div
or
popa
mov
jno
sub
outs
pop
pop
push
and
(bad)
je
and
and
pop
jmp
push
jle
pop
cmps
sub
pop
pop
jbe
lahf
leave
xchg
sbb
sahf
into
push
push
mov
arpl
pop
jl
cmp
dec
lds
in
xchg
pusha
into
inc
ficom
pushw
cmp
fs
jmp
add
adc
adc
pop
dec
cmp
aam
(bad)
pusha
push
jl
mov
pop
pusha
out
add
js
cs
mov
add
(bad)
dec
and
bound
xchg
ret
or
xor
ins
jbe
cmp
dec
dec
sub
push
cdq
jmp
je
enter
fldenv
test
iret
sbb
out
dec
fwait
jp
adc
mov
pusha
sub
movs
inc
adc
sbb
test
fucom
add
std
jae
push
mov
xchg
int3
pop
pop
dec
jle
push
or
(bad)
sbb
push
pop
shl
jne
pop
mov
jg
sbb
rol
xor
push
stc
adc
jne
pop
mov
or
test
jbe
mov
pop
push
lahf
movs
fwait
xor
enter
es
fsub
lods
adc
add
push
lahf
lock
ds
add
inc
movs
(bad)
jp
mov
xchg
in
push
jle
loope
mov
pop
shr
mov
xchg
int3
stos
inc
(bad)
cmc
fistp
and
dec
sar
(bad)
jge
mov
das
ds
movs
dec
retf
mov
test
cmp
add
out
ss
dec
pop
(bad)
fisttp
or
jl
jbe
dec
adc
cwde
shl
retf
ror
cmc
mov
mov
leave
cmp
pop
stc
mov
ja
pop
push
sti
dec
fisubr
push
jns
retf
mov
push
daa
push
jnp
aad
ja
(bad)
jmp
aaa
push
out
sub
mov
mov
cs
iret
jne
in
sahf
int
pushf
pushf
sub
sbb
push
mov
daa
fwait
sbb
sahf
push
adc
xchg
sar
sub
test
sub
mov
or
dec
repz
cmps
out
mov
cmp
scas
(bad)
icebp
cmp
xchg
iret
xchg
and
cwde
test
and
pushf
mov
sub
retf
xchg
push
and
gs
sub
cmp
imul
cld
adc
ret
xor
push
ja
std
sbb
sub
(bad)
cmps
mov
jl
cld
add
cmps
pop
cdq
repz
sbb
xchg
in
repz
outs
add
or
cmp
je
stos
setae
in
push
pop
dec
adc
das
stos
out
adc
lea
mov
pop
or
movs
cwde
ins
daa
iret
dec
je
fist
pop
xor
cmp
pop
clc
pop
aam
jmp
das
jmp
imul
ja
xchg
xor
arpl
mov
cmp
in
sub
inc
cmc
xchg
xor
cld
in
mov
cdq
and
adc
or
cmp
add
jl
icebp
add
dec
jecxz
bound
mov
or
sbb
mov
dec
xor
dec
jmp
cmp
lods
push
sub
std
push
loopne
repnz
stos
jmp
inc
cwde
fild
dec
call
ret
fld
mov
shl
push
inc
aad
xor
push
sti
push
ret
sub
lods
ror
xor
pop
adc
adc
das
arpl
pop
jmp
arpl
cmp
inc
mov
dec
push
lds
and
fwait
cmp
cwde
mov
add
seto
ror
retf
idiv
sbb
and
not
ins
fisubr
outs
(bad)
cmps
iret
fbld
adc
movs
adc
pushf
mov
sub
enter
sbb
and
data16
add
mov
ret
dec
movs
or
mov
or
sbb
or
ins
ficom
mov
mov
mov
bound
movs
call
or
popa
in
push
pop
mov
fild
ds
jle
call
outs
xlat
ins
inc
push
jb
jb
inc
movs
outs
retf
lods
dec
jle
js
pop
in
mov
add
pop
fidiv
fdiv
xor
mov
add
bnd
dec
jae
scas
test
sub
or
mov
xchg
in
sti
jge
xor
mov
iret
lea
mov
cmp
pusha
aam
iret
test
in
push
adc
mov
sti
(bad)
sbb
cmp
mov
push
int3
ret
test
out
jmp
xchg
sbb
outs
dec
nop
mov
xchg
pop
inc
out
(bad)
xor
(bad)
jb
mov
sbb
add
sub
or
cs
inc
cmp
pop
push
lahf
pop
add
aam
xchg
push
in
mov
mov
mov
iret
enter
mov
jb
push
push
xchg
push
xor
or
lahf
adc
popa
hlt
test
or
int3
cwde
popf
das
dec
mov
mov
sub
add
cwde
cmps
mov
sub
xchg
mov
scas
sti
mov
push
xchg
xor
test
enter
pop
xchg
sbb
push
mov
(bad)
loop
jmp
int3
aas
mov
test
mov
sti
inc
icebp
lea
inc
lock
movd
in
ins
push
push
push
ficom
lea
ss
cld
loopne
push
cld
rol
sub
fcomp
jg
lock
mov
shl
sahf
sub
adc
add
fcom
sub
stc
and
and
call
int
mov
mov
repnz
or
imul
fild
fwait
push
push
dec
loopne
dec
xor
mov
mov
std
dec
mov
loop
repnz
jp
mov
mov
xor
(bad)
sti
pop
pop
jmp
jmp
or
xchg
mov
pop
movs
and
mov
jne
mov
out
test
mov
dec
lods
jecxz
jmp
fwait
aam
pop
out
xchg
lods
or
test
sar
xchg
js
sbb
dec
xchg
movs
hlt
sar
push
pop
lock
int
xchg
xchg
pushf
enter
pusha
lea
aas
add
push
mov
test
push
std
pop
mov
or
jp
scas
or
enter
add
jae
xchg
pop
mov
cmp
lahf
or
fwait
sub
pusha
pop
out
inc
push
push
inc
inc
mov
call
out
sub
dec
adc
push
std
shl
lahf
arpl
mov
lods
push
dec
mov
(bad)
(bad)
sub
mov
mov
arpl
ss
mov
(bad)
fdivr
stc
dec
inc
cmc
pusha
pop
mov
into
inc
movs
push
xchg
xchg
fcmovu
sub
sub
push
mov
jge
mov
in
or
call
dec
and
xlat
test
mov
and
inc
ret
out
cmps
mov
pop
dec
xchg
out
mov
retf
test
(bad)
popf
dec
dec
in
test
sub
mov
and
cli
push
fs
clc
mov
out
ret
enter
add
or
int
retf
dec
push
aas
cmps
shr
pop
loopne
sub
shl
inc
jnp
pop
inc
mov
fwait
sbb
cmps
or
xchg
js
addr16
inc
out
iret
jnp
mov
add
adc
sbb
dec
fadd
sub
push
not
mov
mov
xor
mov
in
gs
call
mov
into
sahf
(bad)
lock
les
mov
mov
movs
push
pop
les
and
xor
sub
sub
(bad)
fxch
mov
out
sub
mov
pusha
jmpw
call
and
scas
jb
retf
arpl
adc
call
jl
mov
pop
idiv
int
xor
cdq
movs
xor
and
addr16
addr16
inc
sbb
sub
xlat
ds
adc
fist
inc
retf
daa
mov
or
inc
mov
retf
(bad)
imul
(bad)
nop
fst
push
or
jl
jl
fidiv
in
and
mov
call
aad
sbb
push
dec
shr
out
jb
pop
mov
out
mov
out
adc
jns
js
es
aas
sti
retf
pop
mov
ss
or
pop
mov
sbb
cli
mov
push
stos
ror
jo
jne
mov
mov
mov
fcom
mov
ins
jle
lock
outs
or
add
mov
mov
in
por
cwde
jecxz
(bad)
ja
add
dec
iret
pusha
add
in
push
lods
or
sahf
xchg
push
xor
das
and
adc
dec
outs
movs
push
jno
out
inc
sbb
mov
pop
cs
fild
and
xchg
int3
sbb
call
ins
pop
jmp
push
lods
fcom
and
pushf
adc
mov
movs
loope
mov
sbb
mov
pusha
mov
dec
(bad)
arpl
out
stos
push
cmps
enter
int
and
fisubr
pop
xor
test
pop
add
ds
not
sahf
inc
sub
or
sub
(bad)
pop
jg
pop
lea
pop
pop
xchg
sbb
(bad)
adc
xchg
xor
mov
loopne
cmp
outs
dec
or
(bad)
push
xchg
lahf
cli
push
inc
(bad)
add
or
iret
mov
clc
(bad)
push
mov
sub
ret
fsub
xor
dec
push
loope
mov
imul
lahf
in
inc
hlt
adc
inc
lods
int
nop
retf
sub
jae
ds
xor
or
dec
cmp
fsub
bound
aad
sbb
ins
mov
push
repnz
mov
repnz
xchg
std
rol
xor
cmc
cmps
(bad)
pop
aaa
mov
adc
jmp
outs
arpl
pop
dec
dec
jle
jnp
rol
fdivr
(bad)
stc
push
gs
fbstp
add
sbb
imul
addr16
clc
and
out
adc
xor
outs
jnp
push
cmp
scas
push
frstor
scas
daa
push
gs
ror
cmp
lods
pushf
xchg
xor
mov
rcr
gs
(bad)
pop
jmp
inc
jno
(bad)
dec
push
loope
dec
shl
adc
loopne
cld
mov
push
cmp
or
pop
in
xor
lds
adc
fild
inc
mov
add
mov
lods
repnz
sbb
mov
lds
jae
(bad)
sbb
add
adc
push
xchg
f2xm1
in
sbb
sbb
stc
cmps
and
repz
inc
push
rcr
sbb
enter
xchg
test
dec
cwde
loope
int3
and
mov
pop
mov
xchg
xor
mov
shr
(bad)
sub
cmps
shr
sbb
xor
out
gs
jecxz
loopne
mov
xchg
dec
mov
arpl
and
xchg
jecxz
xlat
lahf
push
xor
arpl
add
in
xor
mov
and
cmovns
pop
clc
nop
lods
cs
add
fwait
or
pop
cld
das
dec
xor
mov
push
mov
add
rcr
cmp
out
sub
jmp
rcl
imul
push
lds
fwait
xchg
movs
and
adc
scas
or
or
mov
fstp
dec
mov
jl
mov
stos
sbb
lods
data16
fidiv
div
cs
dec
cmps
out
mov
adc
inc
jp
iret
popa
enter
fstp
(bad)
adc
ss
out
dec
(bad)
aas
ds
(bad)
(bad)
sbb
lds
rcr
aas
(bad)
sub
ja
inc
mov
jmp
adc
fs
or
inc
cmps
call
es
add
pop
pushf
pop
mov
adc
push
adc
xchg
sub
pop
or
lods
mov
mov
out
in
mov
iret
adc
pop
repnz
shl
mov
js
mov
dec
out
push
adc
xor
or
pop
popa
pop
push
ret
ficomp
jb
mov
aad
xchg
cmp
ror
sbb
popf
mov
std
xor
mov
sbb
jbe
add
fidivr
pop
xor
dec
mov
fistp
add
xchg
and
mov
inc
xlat
js
std
jg
mov
in
dec
fstp
scas
jecxz
jb
data16
xchg
ficomp
sbb
push
inc
pop
add
call
cs
and
dec
call
shl
mov
jbe
sub
push
outs
rol
push
dec
arpl
cli
mov
fdivr
clc
pop
jge
and
mov
test
(bad)
out
add
leave
pushf
outs
lahf
retf
popf
nop
push
mov
js
inc
inc
stc
aad
stc
js
cmp
scas
mov
icebp
cli
jb
push
push
or
out
imul
mov
dec
adc
iret
call
test
hlt
add
popf
fldln2
or
leave
jno
jbe
mov
(bad)
and
add
or
pop
sub
xchg
lds
inc
mov
imul
dec
test
push
lods
jl
sahf
fldcw
imul
(bad)
adc
outs
mov
push
jg
stos
inc
rcr
mov
nop
inc
push
popa
add
inc
add
sub
add
mov
add
sub
scas
sahf
popf
pop
mov
and
(bad)
jl
and
cmp
xchg
jo
jmp
cmp
xchg
sbb
pop
cmps
ins
jbe
mov
and
iret
into
repz
add
xchg
in
loop
push
retf
loop
dec
xor
stos
or
popa
add
mov
add
fbld
cmc
scas
leave
fwait
(bad)
mov
push
cs
imul
add
sbb
stc
sbb
mov
xor
jle
xchg
mov
cmps
cwde
sti
call
outs
pop
stc
icebp
push
stos
jl
pop
adc
xchg
mov
cwde
repz
inc
adc
sbb
cmp
mov
push
cmp
jmp
push
sub
les
outs
pop
jno
cli
xor
mov
mov
sbb
rol
mov
es
js
cli
pop
xor
(bad)
movs
test
mov
xor
lahf
shr
push
pop
pusha
into
mov
ja
cmp
je
mov
mov
cmp
std
scas
add
(bad)
rcl
add
cmp
or
adc
neg
jns
xchg
adc
add
ss
or
push
mov
cwde
hlt
popf
out
imul
mul
jmp
or
inc
mov
jae
xor
call
mov
aas
inc
pop
jns
jmp
push
add
aad
mov
dec
mov
(bad)
push
cmp
dec
mov
xor
loopne
and
sbb
scas
(bad)
loopne
pop
mov
or
fcomi
dec
xlat
clc
retf
pushw
xchg
jle
pop
stc
inc
push
imul
inc
push
and
repz
fistp
arpl
mov
or
adc
adc
movs
inc
(bad)
imul
and
clc
adc
dec
and
or
loopne
out
xchg
dec
mov
aam
aaa
aaa
push
in
mov
out
xor
test
ror
into
xor
push
jns
inc
add
sbb
mov
ror
cmps
jl
out
mov
es
pop
fcomp
sbb
xchg
cmps
pop
mov
mov
pop
mov
cld
sar
lahf
or
test
mov
pop
sub
inc
mov
hlt
mov
les
stos
out
loope
arpl
mov
jp
shr
movsx
fidivr
mov
aas
sbb
cmp
(bad)
repnz
aas
and
inc
xor
sahf
test
ss
fwait
inc
xor
out
ja
ret
xchg
jno
jno
rol
icebp
push
or
repnz
cmp
sub
jb
dec
hlt
mov
repz
push
sbb
sub
(bad)
fsubr
sbb
inc
pop
scas
push
lock
mov
dec
jo
js
and
call
jmp
jo
fnstcw
push
jns
inc
loope
jo
jmp
sbb
stos
imul
rcl
icebp
mov
stc
pop
hlt
test
cmp
dec
nop
fstp
cs
cmps
(bad)
jo
pop
sub
sub
ficom
aas
mov
dec
sbb
mov
sahf
and
in
adc
cwde
ret
xchg
test
push
nop
mov
addr16
mov
popa
addr16
sti
sar
sub
or
xor
daa
sbb
add
leave
mov
push
push
inc
fs
jns
sbb
retf
mov
push
or
add
inc
mov
mov
jnp
jg
or
cmp
call
mov
in
outs
push
js
repnz
cld
jo
inc
scas
mov
jmp
sbb
pop
sbb
cmp
stos
jnp
sbb
movs
mov
int
xor
jecxz
aaa
shl
inc
cmps
fcomp
pop
jno
push
mov
and
nop
in
sub
ds
icebp
movs
add
aad
mov
int
or
clc
loope
mov
or
scas
inc
and
add
or
cld
or
push
push
jle
or
inc
xchg
mov
xchg
pop
sbb
aad
inc
push
ins
into
mov
dec
pop
push
sti
mov
mov
(bad)
imul
inc
adc
jb
adc
mov
popf
jle
mov
mov
idiv
adc
adc
lock
in
or
out
or
mov
outs
xchg
fwait
mov
fcom
outs
in
dec
mov
adc
jae
leave
test
sbb
sub
xchg
hlt
ret
sbb
xor
cmp
or
mov
dec
dec
push
addr16
add
jae
adc
push
cmp
and
test
xor
and
ss
xor
js
inc
(bad)
daa
mov
out
fdiv
or
inc
pop
stc
pop
sub
adc
fadd
push
xchg
or
imul
mov
push
mov
push
test
not
jne
sub
shr
out
fwait
jae
jae
in
and
pop
push
cld
push
dec
xor
imul
ficom
stos
cmps
cmp
sbb
xor
dec
sbb
or
outs
or
stos
nop
pusha
scas
aam
dec
addr16
jmp
push
dec
ret
mov
les
jae
mov
fisub
imul
daa
dec
xchg
lea
in
pushf
xchg
jo
xlat
test
pushf
jb
lds
xchg
sbb
call
in
pop
stos
xchg
movs
daa
sbb
fdivr
popf
hlt
sub
repz
call
push
data16
cdq
retf
jg
sahf
dec
clc
out
add
popa
inc
dec
imul
mov
pop
cs
push
mov
ret
xchg
and
int3
sar
(bad)
daa
push
adc
mov
sub
bound
idiv
mov
cmp
and
(bad)
mov
fistp
xchg
call
js
and
dec
sbb
sti
push
pop
sub
sub
popa
jmp
jmp
adc
pop
mov
add
cmps
pop
ret
cmps
movs
mov
clc
ss
and
fild
push
dec
cmps
mov
(bad)
mov
add
add
lea
das
outs
lods
or
cli
cmps
repz
mov
inc
and
mov
add
cmp
scas
pop
mov
loopne
test
xchg
xchg
iret
pop
ds
pop
(bad)
and
inc
js
test
sahf
add
fild
fsub
xor
out
cmp
jecxz
aas
xchg
repz
sub
loop
jg
test
lea
out
enter
xchg
xchg
or
fsub
icebp
cld
dec
out
lea
(bad)
cmp
xchg
dec
js
rol
addr16
cmp
repz
test
add
inc
fwait
ret
or
retf
xchg
aas
popf
cmovnp
mov
push
xchg
(bad)
xchg
shl
mov
jp
out
mov
or
and
in
jle
mov
and
(bad)
out
ret
add
and
push
pushfw
mov
retf
dec
sbb
fdivr
and
and
sub
xor
rcr
or
sub
adc
pop
pop
or
mov
xor
add
in
movups
lds
imul
adc
in
add
lods
jae
push
jo
xchg
mov
pop
mov
out
adc
shl
inc
xchg
xchg
pop
(bad)
stos
out
cmp
in
sub
inc
(bad)
pushf
adc
imul
fnsave
data16
(bad)
movs
pop
rcr
cmps
mov
es
push
add
sub
mov
test
xchg
mov
mov
dec
ret
out
xchg
or
out
ret
(bad)
cmp
fadd
inc
xor
or
lods
sbb
lods
aad
and
jge
cmp
dec
in
loopne
xor
scas
je
sub
sbb
push
xchg
lahf
loope
cld
mov
cwde
dec
inc
cmp
adc
ds
jl
das
jne
pushf
ds
fwait
dec
out
scas
cmp
cmps
popa
push
loope
ror
cs
xor
popf
inc
xor
push
jmp
jp
sub
outs
leave
jnp
mov
cmc
pop
(bad)
or
and
add
std
shl
cmp
mov
and
xchg
ficom
ret
jno
push
ins
pop
fsubr
inc
mov
adc
mov
mov
pop
ss
(bad)
in
xchg
rcl
(bad)
in
xchg
cmp
ret
pop
cmp
adc
fidivr
jae
pop
cmp
jl
fdiv
fcom
pop
cli
sub
into
mov
pop
gs
adc
inc
cmp
ins
xchg
adc
jl
scas
enter
dec
mov
(bad)
xchg
mov
call
adc
fmul
data16
and
sub
xor
bound
sub
jl
sbb
push
jmp
jne
xchg
cmc
dec
adc
sbb
xor
sub
(bad)
in
push
push
add
push
inc
and
cs
out
ja
cwde
or
cmps
and
jmp
out
push
mov
xlat
mov
arpl
leave
pop
xchg
mov
outs
mov
add
mov
aas
outs
loopne
rol
mov
lock
mov
(bad)
cmp
cdq
gs
repz
add
lds
mov
jp
inc
lds
ins
jl
les
cmp
inc
or
mov
and
das
xchg
dec
jle
and
add
(bad)
ins
in
std
je
daa
pop
push
adc
jae
aam
sub
movs
or
sbb
adc
(bad)
enter
sub
imul
daa
push
fild
xor
adc
sub
add
mov
bound
mov
scas
push
push
cmp
mov
and
push
and
xor
cmp
mov
jne
je
push
jno
xchg
pop
mov
cs
sub
dec
ins
sbb
xchg
movs
outs
sub
mov
sbb
cmp
faddp
(bad)
or
test
pop
cmp
or
inc
cbw
(bad)
fwait
jne
and
out
xchg
jmp
je
fiadd
inc
call
retf
and
fs
push
popf
int
mov
mov
add
dec
test
inc
dec
lds
ret
(bad)
mov
inc
emms
stos
mov
push
mov
es
test
mov
mov
dec
jecxz
repz
std
stos
or
jmp
popf
pop
push
cwde
adc
out
ins
not
mov
aad
ret
popa
test
jno
scas
push
jo
push
inc
je
sub
icebp
dec
cmp
push
jnp
pusha
in
js
(bad)
pop
and
outs
add
outs
pushf
(bad)
sbb
stos
xor
cmp
or
mov
lods
aaa
ss
jl
inc
pop
data16
mov
popf
into
leave
stc
leave
mov
test
mov
lods
inc
mov
popa
shl
jge
mov
jg
retf
dec
das
adc
adc
js
iret
mov
add
mov
scas
pop
pop
and
jnp
xchg
or
push
pop
jg
mov
sub
xchg
xchg
dec
pop
pop
push
cmp
movs
(bad)
in
mov
popa
jae
pop
ret
sbb
(bad)
sub
test
inc
xchg
cmp
pop
jns
fisub
bound
xor
sub
push
mov
sar
pop
es
pop
clc
icebp
add
and
sbb
mov
or
dec
addr16
sbb
mov
ins
imul
and
repnz
imul
pop
stos
xor
loop
pop
lea
out
sbb
inc
xchg
sbb
lahf
pop
add
ret
stos
je
xor
ret
pop
cmp
mov
scas
inc
fidivr
in
(bad)
mov
aam
and
shr
sub
inc
jo
and
std
and
and
jecxz
jecxz
cmp
jecxz
pop
sub
mov
and
call
lea
ret
or
cmp
mov
pop
into
dec
jge
in
dec
mov
push
inc
mov
jns
cwde
mov
pop
dec
xchg
mov
jmp
adc
ret
arpl
mov
adc
movs
pop
pushf
popa
mov
ror
ret
cmp
sbb
(bad)
and
je
dec
test
dec
stos
add
in
inc
imul
lock
int3
mov
(bad)
test
aam
fwait
je
pop
mov
dec
lds
popf
xchg
in
mov
xlat
int3
aad
pushf
mov
call
jmp
aaa
mov
ja
inc
push
jo
mov
cli
sub
pop
cmp
int3
inc
xor
or
fnstenv
inc
les
mov
sub
xlat
(bad)
or
mov
jle
pop
sbb
std
add
push
out
repnz
(bad)
adc
dec
test
mov
add
cmc
mov
out
pop
(bad)
fistp
xchg
jge
jmp
loopne
clc
mov
in
or
test
cmps
dec
test
mov
add
pop
std
in
xor
rcr
sbb
push
pop
inc
or
gs
aas
fcom
or
push
stos
mov
call
ins
lea
cmp
push
movs
out
mov
jb
outs
and
outs
sub
pop
xor
je
icebp
test
(bad)
or
out
sub
loopne
pusha
xchg
out
mov
bound
adc
mov
rcl
ins
loope
sahf
shl
mov
div
add
gs
stc
es
mov
push
and
int
outs
les
hlt
jmp
out
hlt
add
nop
add
mov
pop
inc
push
push
repz
and
jb
fadd
sub
dec
push
mov
or
adc
cdq
mov
jecxz
pop
(bad)
popf
dec
(bad)
push
xor
and
adc
push
loopne
js
gs
popf
mov
inc
cmp
fidiv
daa
cmp
mov
arpl
mov
xchg
jo
outs
pop
cmp
fucomp
xchg
es
sub
lods
lods
aam
sub
scas
outs
out
test
imul
and
pop
retf
pop
sbb
sbb
cmps
push
scas
ins
fwait
retf
and
in
sbb
inc
aam
lahf
push
in
jp
lock
retf
ss
pop
out
nop
fwait
stos
adc
dec
mov
int3
out
push
mov
xlat
pusha
not
imul
and
sbb
popa
ds
stc
adc
cs
push
pop
xchg
test
lahf
jecxz
xor
retf
inc
jno
call
lahf
(bad)
push
mov
push
jb
arpl
lds
mov
xchg
pusha
fcomp
add
pop
xchg
aaa
in
ins
sbb
push
daa
shl
mov
cmc
hlt
dec
lea
rcl
push
push
xchg
aaa
xchg
pop
out
pop
loop
dec
nop
add
jp
imul
or
fs
inc
int
push
adc
mov
inc
sub
sbb
mov
loopne
mov
push
retf
sbb
in
out
mov
mov
not
adc
xchg
pop
adc
sbb
(bad)
cmp
aad
pop
sbb
mov
test
cmps
sbb
or
shl
mov
data16
js
adc
les
adc
cmp
scas
es
sub
mov
add
movs
sub
fwait
rcl
jp
leave
mov
das
push
cmp
sbb
aaa
push
fist
jae
add
movs
pop
pop
xchg
dec
sbb
add
jbe
cmp
lahf
and
test
fild
dec
inc
jno
push
sbb
(bad)
loop
rcr
sub
jle
adc
inc
mov
rol
jmp
sbb
fld
bound
jecxz
imul
xor
push
mov
fstp
mov
loopne
fnstsw
ror
scas
pushf
mov
or
or
aas
pusha
ins
jbe
dec
inc
fst
cwde
pop
cld
pop
mov
cwde
rcr
lods
sub
mov
and
mov
out
xchg
mov
push
call
lock
jg
adc
mov
out
xor
mov
idiv
and
pusha
daa
gs
(bad)
adc
(bad)
imul
sub
repnz
and
in
mov
adc
fs
and
jecxz
scas
ja
rcl
or
(bad)
ins
add
(bad)
ror
adc
jne
(bad)
fcom
mov
test
push
aaa
push
push
push
jno
xchg
inc
ss
cmp
pusha
mov
in
test
push
cs
pop
ja
fisub
mov
pop
and
les
add
inc
cmp
cmp
retf
iret
lds
int3
stc
out
int
mov
add
and
push
jns
loop
push
sbb
in
rol
or
and
(bad)
pop
fwait
(bad)
in
shl
icebp
pushf
pop
arpl
cwde
scas
xchg
add
adc
clc
mov
(bad)
mov
imul
mov
inc
popf
add
data16
sahf
in
inc
in
test
cdq
or
scas
enter
ret
jnp
push
and
pop
icebp
mov
ds
mov
cli
jo
(bad)
stc
sbb
sar
push
cld
inc
mov
adc
fcmovu
push
jb
es
cmps
mov
add
dec
test
icebp
lds
sar
js
out
adc
jle
dec
and
xor
stos
mov
sti
hlt
(bad)
jns
in
in
mov
in
shl
ror
fist
mov
mov
rcl
push
lock
ds
das
sub
xchg
sahf
ja
sti
sti
push
leave
sti
ss
add
xchg
rol
xlat
or
mov
xor
lds
pop
cmp
call
cli
shl
or
push
(bad)
adc
pop
jmp
lahf
push
cwde
xchg
cmp
mov
cmc
jge
cmp
ss
xchg
in
scas
fs
int
sbb
retf
out
cmps
arpl
inc
and
sub
dec
jg
stos
iret
add
stos
adc
sbb
xor
mov
dec
sub
mov
add
and
hlt
push
jb
scas
movs
dec
into
lea
stos
div
cmp
or
xchg
cmp
lock
aad
cmp
or
jmp
adc
cdq
sub
jno
and
ret
or
fst
div
and
jmp
mov
stos
retf
js
mov
(bad)
mov
fdivr
bound
ficom
push
(bad)
jl
xor
inc
out
popa
sub
inc
xchg
mov
stos
add
inc
(bad)
fs
lods
dec
sbb
mov
and
bound
mov
dec
jmp
push
and
pop
push
(bad)
and
idiv
loope
stos
repnz
jb
lods
sub
jecxz
and
and
mov
mov
or
push
xor
mov
loope
nop
enter
jo
ss
jmp
sbb
push
add
dec
push
push
push
pop
xchg
push
xor
cs
movs
(bad)
mov
jmp
idiv
xchg
inc
sahf
jne
fs
int3
jno
nop
pop
inc
repnz
mov
pop
sti
int3
sbb
hlt
mov
int
int
dec
cdq
inc
fs
jmp
and
inc
cmc
pop
fnstenv
dec
cdq
push
cld
outs
add
jmp
add
fst
loop
and
cld
jnp
bsf
pop
add
hlt
lods
imul
dec
das
loopne
outs
ins
adc
cmp
fidiv
dec
data16
out
repnz
mov
movs
dec
call
push
mov
sub
(bad)
fcmovb
enter
outs
test
mov
mov
adc
rep
xchg
daa
call
sbb
xchg
add
out
jns
mov
xor
inc
mov
cmp
outs
(bad)
mov
or
jg
mov
nop
test
jmp
sbb
int
cmps
jge
arpl
imul
inc
(bad)
dec
or
inc
cmp
in
mov
leave
iret
out
xlat
dec
and
gs
jecxz
pop
xor
fwait
call
(bad)
push
in
pop
(bad)
fisub
push
hlt
mov
out
imul
fild
add
shr
xor
sub
iret
sub
push
push
in
addr16
sbb
inc
retf
and
sti
in
pop
add
xchg
adc
cmc
jns
aaa
jmp
in
test
pusha
sbb
push
xlat
adc
mov
mov
pop
inc
inc
(bad)
pop
xor
data16
cmp
mov
movs
add
in
cmps
scas
push
dec
jle
sbb
jno
and
jge
rol
push
cmp
out
out
cmp
bound
xor
nop
sbb
or
repz
outs
enter
add
push
push
mov
scas
lock
(bad)
jae
in
scas
mov
push
jne
mov
fcom
movs
sbb
adc
mov
push
cmp
mul
jle
jnp
xlat
pusha
repnz
sahf
add
shl
jno
jmp
add
sti
adc
stos
not
mov
add
aas
ret
fwait
mov
enter
push
mov
mov
or
sub
inc
out
mov
test
pop
stc
in
shr
clc
xchg
mov
(bad)
push
jmp
adc
cli
not
add
je
cmc
mov
(bad)
mov
push
shl
lods
les
xor
sbb
jns
jecxz
fcomp
push
push
ds
(bad)
jne
je
fs
fild
stc
movs
rol
sahf
fs
xchg
shr
jno
sahf
call
lock
pop
and
add
(bad)
js
fs
fisub
xchg
lds
(bad)
enter
or
dec
sbb
ins
push
(bad)
mov
pop
cmps
add
push
jae
sahf
cmps
loop
out
xor
int3
mov
lods
add
movs
call
adc
adc
mov
dec
sbb
jle
mov
and
cdq
js
(bad)
mov
cli
sbb
cmp
pop
cld
xchg
out
movs
(bad)
sti
jl
bound
xchg
fst
test
sub
jb
shr
sbb
imul
sub
and
ds
jecxz
mov
out
(bad)
ja
jle
lods
movs
adc
cmp
sub
adc
dec
cdq
inc
sub
arpl
adc
outs
or
inc
scas
xchg
jns
fisub
or
dec
lock
loop
jb
pop
aaa
fsub
cmps
mov
enter
push
stos
mov
dec
in
dec
dec
lds
inc
push
adc
ret
push
inc
stos
aas
or
push
shl
mov
nop
cwde
or
popf
inc
sahf
mov
ror
xchg
sahf
dec
pop
fsubr
push
jmp
pop
hlt
push
pop
push
scas
jnp
or
jl
sbb
popf
xor
adc
pushf
add
mov
test
push
and
push
imul
xchg
mov
jne
adc
and
dec
fmul
dec
cmp
cwde
call
test
sub
je
std
cmp
sbb
call
movs
xlat
imul
adc
stc
mov
mov
neg
loop
push
int3
icebp
icebp
mov
fldenv
xor
add
sbb
or
push
lods
adc
jecxz
and
in
cli
mov
sub
add
adc
fcom
xchg
hlt
inc
adc
(bad)
imul
in
les
add
ins
add
dec
test
pop
aad
xchg
mov
push
cli
jbe
cmp
or
cmps
and
add
and
mov
test
xor
neg
mov
test
or
sub
test
ds
sub
mov
push
jp
mov
out
mov
je
adc
fimul
scas
(bad)
aam
sub
cmp
repnz
popa
and
(bad)
movs
out
stc
in
ret
adc
icebp
movs
cmps
dec
mov
cmp
cmp
inc
mov
dec
sbb
js
aaa
xchg
ror
cwde
int3
or
sub
hlt
cmp
dec
(bad)
sub
xchg
outs
xchg
mov
pusha
push
inc
inc
mov
xor
int3
ins
cs
addr16
jb
adc
cmova
mov
sbb
(bad)
xchg
imul
push
out
xchg
out
sub
or
or
data16
push
mov
addr16
pop
aad
rol
cmps
outs
mov
repnz
jmp
or
test
dec
cmp
shl
cmps
push
push
mov
daa
jl
jbe
adc
xor
rol
mov
pop
lds
popf
adc
loope
dec
mov
iret
aad
adc
inc
shl
test
jmp
xchg
xor
jne
outs
leave
hlt
test
ins
mov
xor
movs
repz
fnstenv
mov
sub
sbb
cmp
dec
leave
mov
and
imul
std
stc
sub
mov
mov
add
xlat
iret
lds
xchg
pop
mov
mov
sub
inc
and
dec
cmps
push
dec
clc
iret
fisttp
mov
fwait
push
out
jbe
in
jno
arpl
fldcw
jg
add
jecxz
mov
jmp
jno
sbb
push
add
js
(bad)
sub
icebp
xadd
(bad)
dec
sub
mov
push
or
xor
inc
inc
sti
push
or
stos
and
push
pop
jne
xchg
cmp
pop
inc
lods
adc
push
popf
in
test
mov
sub
std
loopne
inc
(bad)
cmp
mov
es
shl
push
mov
sbb
(bad)
nop
adc
add
fmul
push
dec
loopne
test
das
sub
jle
mov
out
mov
or
neg
push
leave
dec
jmp
imul
push
stos
call
sbb
retf
stc
sbb
fucomip
xchg
sbb
jnp
gs
out
or
dec
dec
cmp
in
push
sub
xor
(bad)
sahf
inc
das
sti
cmp
mov
dec
push
(bad)
imul
sub
int
setb
ins
fadd
popa
icebp
push
inc
sub
pop
fild
call
std
and
les
sahf
(bad)
(bad)
aam
push
shl
pop
ins
pop
dec
and
xchg
dec
inc
popf
push
or
dec
push
dec
pop
mov
out
cs
outs
xor
jecxz
out
pop
pusha
loopne
leave
cmp
fimul
xor
mov
test
mov
iret
mov
test
fisttp
mov
ja
lds
jl
out
in
mov
or
and
rol
dec
mov
pushf
sbb
jp
mov
adc
sbb
test
sub
out
aam
loop
push
mov
sbb
pop
iret
mov
adc
cmp
in
fisttp
(bad)
(bad)
push
sbb
add
neg
jo
fimul
adc
jns
or
iret
clc
repnz
dec
jge
cld
xchg
aam
int3
mov
loop
dec
cdq
or
and
repz
xchg
and
cmp
inc
xor
adc
in
sbb
sbb
and
ret
call
adc
icebp
push
and
mov
(bad)
jecxz
pusha
xor
cdq
inc
mov
lods
fldcw
pop
inc
sbb
pusha
in
sar
cs
mov
mov
inc
pop
in
inc
call
jmp
sahf
xor
into
cdq
imul
jmp
mov
mov
jbe
add
pop
sti
sub
adc
or
cwde
fdivrp
mov
ret
dec
pop
add
mov
or
and
mov
adc
imul
pop
push
cmps
cld
jb
jmp
pop
(bad)
cmc
cmp
ins
xchg
jge
popf
inc
(bad)
jp
xor
fstp
xchg
adc
js
fcom
rcr
rol
shr
jecxz
dec
(bad)
stos
add
ror
scas
cmc
cmp
cmc
adc
push
retf
mov
adc
jmp
and
nop
pusha
shl
int
pop
(bad)
enter
cmp
dec
into
cmovge
cmp
xlat
xchg
repz
inc
adc
bound
inc
mov
sbb
in
or
add
jecxz
aam
dec
in
dec
adc
or
jl
aam
fwait
inc
and
adc
cmps
and
leave
jae
ds
es
jno
push
push
je
jo
mov
mov
not
test
inc
xor
les
fadd
out
mov
mov
data16
inc
or
div
jne
cs
addr16
xchg
mov
push
enter
xchg
mov
add
jp
mov
mov
push
les
mov
pop
sti
dec
xchg
scas
ret
mov
cli
sub
adc
jbe
mov
pop
mov
stos
rol
in
mov
xor
or
and
sahf
pushf
and
xor
popf
or
icebp
pop
mov
jb
lods
or
pop
or
outs
inc
dec
test
ins
scas
jnp
sub
inc
push
mov
mov
(bad)
cwde
popf
mov
movs
xchg
das
mov
loopne
push
loopne
mov
std
sbb
xchg
cs
and
(bad)
sbb
jg
sbb
mov
rcr
clc
mov
dec
nop
jo
push
js
lods
fwait
or
adc
push
jl
fcom
lahf
in
mov
jg
pushf
imul
iret
loop
mov
pop
icebp
or
sbb
fistp
xchg
push
pop
js
or
or
neg
cmp
xchg
cmp
aas
mov
cmp
mov
rcl
sbb
and
adc
cs
test
mov
imul
lea
das
sub
test
bswap
pop
sar
retf
bound
mov
dec
retf
(bad)
cdq
xchg
(bad)
lock
or
(bad)
cwde
or
ds
repz
dec
into
ficomp
sbb
fimul
and
sub
mov
xchg
jl
mov
jecxz
stos
and
inc
fsubrp
xchg
fmul
cmp
mov
mov
mov
rcl
mov
nop
inc
xchg
cmps
mov
xchg
and
test
repnz
cld
dec
mov
push
dec
call
pop
mov
xor
loop
add
sbb
jmp
jg
adc
ss
add
or
or
movs
ins
dec
out
push
xchg
mov
leave
ins
xor
lock
stc
(bad)
jb
fnsave
jae
fiadd
jne
xchg
loopne
stos
int3
jp
out
cmps
pop
mov
or
push
sub
arpl
loop
push
jmp
mov
mov
xchg
inc
inc
inc
jnp
lock
(bad)
sti
in
mov
lds
movs
adc
jg
mov
das
pop
sub
test
or
inc
add
data16
hlt
out
mov
mov
jnp
lahf
neg
or
mov
cs
arpl
fsubr
stos
add
gs
fldcw
imul
ror
add
xor
(bad)
imul
hlt
dec
je
mov
ret
or
shr
(bad)
mov
fwait
or
stos
mov
cmc
pop
test
(bad)
ds
fild
cmps
cli
xlat
mov
adc
idiv
pop
lahf
ret
(bad)
push
cli
sub
add
daa
bound
xor
cmc
adc
dec
repnz
mov
adc
cmc
and
clc
mov
neg
or
scas
push
and
jmp
mov
jmp
fcomp
pop
add
das
xchg
mov
jne
stc
dec
pusha
nop
js
mov
dec
cmp
mov
rcr
mov
pop
mov
js
push
adc
push
out
adc
popf
add
cmp
push
out
out
add
mov
dec
jecxz
nop
sbb
sti
push
xchg
xchg
mov
jbe
lods
daa
push
in
(bad)
(bad)
outs
mov
inc
adc
dec
and
pop
sub
sbb
adc
xchg
(bad)
mov
outs
(bad)
mov
sar
fwait
mov
dec
test
adc
outs
xlat
sbb
retf
pushf
dec
fistp
test
and
fmul
add
sub
jne
cmp
sbb
test
xchg
lds
and
lods
cwde
aaa
repz
xlat
add
fcom
pushf
movs
mov
pop
push
mov
(bad)
cmp
cmc
add
aam
dec
jle
xchg
aam
xchg
jno
dec
movs
aam
leave
xor
pop
mov
jmp
and
lahf
fimul
loop
outs
leave
fnstsw
rol
pop
ret
sbb
cmp
call
jecxz
jmp
sub
sub
rol
push
cmc
pop
cmp
sub
pop
mov
jg
add
or
mov
fld
add
sbb
mov
xor
cld
pop
jecxz
mov
cmps
cdq
mov
and
mov
sbb
fwait
mov
dec
(bad)
adc
(bad)
out
sub
mov
xchg
dec
ret
scas
retf
neg
dec
push
mov
add
arpl
jmp
in
inc
ins
push
pop
ds
pop
push
pop
or
fadd
cmps
jl
and
loope
retf
cmps
and
test
test
add
(bad)
lock
scas
cmc
sahf
push
pop
xor
or
rol
or
mov
(bad)
in
fcom
fld
mov
(bad)
sub
add
shl
or
call
mov
and
pop
adc
in
jg
pop
addr16
push
and
jae
mov
lock
daa
inc
test
inc
push
push
(bad)
fsubr
pop
jnp
fwait
jne
jne
in
jmp
popa
jae
(bad)
dec
pop
add
loope
daa
sub
out
mov
ja
icebp
jp
xor
mov
cmp
push
ds
arpl
mov
ror
xchg
push
mov
add
std
(bad)
adc
pop
adc
pop
rcr
cwde
push
pushf
add
scas
call
ret
or
in
and
pop
sar
xchg
into
and
ret
pushf
(bad)
es
add
cli
es
outs
push
ret
lods
cmps
xchg
sub
xchg
fmul
mov
push
(bad)
je
lock
mov
xor
cmp
jp
xchg
dec
(bad)
nop
and
enter
js
into
jb
inc
jl
ret
aas
push
xchg
movs
pop
mov
push
nop
cmp
adc
pop
push
xchg
inc
jb
ins
sbb
pop
and
fsubr
popa
or
cs
jmp
xor
inc
inc
push
jmp
or
xchg
xchg
xor
adc
stc
test
push
adc
jp
(bad)
jp
popf
icebp
loope
push
dec
faddp
and
outs
xchg
lods
add
cmp
push
adc
in
mov
jp
jne
pop
int
mov
push
test
push
sti
xor
push
into
mov
cmp
lahf
xor
push
iret
ret
shr
lods
pop
cmp
jecxz
int
dec
bound
ins
(bad)
cld
jg
xchg
push
movs
push
aam
cli
je
push
adc
out
jbe
and
sbb
mov
mov
(bad)
not
fwait
stc
mov
mov
inc
movs
pop
aaa
or
jecxz
jae
jge
inc
pop
fiadd
inc
pop
ds
scas
sbb
pop
inc
cmp
mov
pop
icebp
add
mov
mov
xchg
or
xchg
cdq
mov
mov
mov
jbe
jb
stos
shl
(bad)
cmp
or
mov
mov
pushf
push
leave
inc
loopne
call
test
push
mov
data16
push
cmp
xor
jg
ins
ins
pop
test
add
fdivrp
call
xor
sbb
sub
aas
ret
stos
pop
mov
dec
jmp
loop
inc
outs
ret
test
mov
xchg
and
es
pushf
cmps
iret
push
mov
jmp
add
jb
(bad)
cmp
pop
data16
fisub
sub
mov
cmp
or
mov
jle
xor
mov
inc
mov
jmp
or
dec
inc
lea
pop
addr16
cmp
or
daa
mov
add
mov
xchg
les
into
cmp
jl
aam
pop
mov
leave
sbb
int
jmp
jp
pop
sub
int
add
stos
fs
cmp
cmp
cmc
gs
leave
mov
pop
cwde
sbb
mov
fld
jmp
lock
mov
mov
cmp
or
retf
fisttp
jb
lods
inc
push
stos
mov
xor
repz
push
in
popa
or
fnstsw
and
push
in
mov
mov
cwde
push
(bad)
fbld
shl
xchg
add
or
hlt
inc
dec
jno
xor
dec
movs
data16
jmp
mov
stos
jp
push
movs
push
inc
sub
xchg
int
ror
xor
jle
mov
imul
fidivr
xchg
pop
pop
jg
or
mov
call
call
dec
xchg
pop
xchg
(bad)
ficom
xchg
mov
(bad)
fwait
sbb
add
xchg
push
in
jecxz
cdq
ja
push
push
or
xchg
ficom
in
mov
iret
inc
pop
test
rcl
xchg
or
inc
out
pop
ja
xlat
fwait
pop
cmp
scas
sbb
inc
test
cdq
push
add
sub
cs
pop
push
bound
sti
pop
pushf
cdq
pop
push
xlat
ds
call
mov
xchg
(bad)
aas
cmp
movs
or
sbb
in
(bad)
pop
movs
mov
retf
arpl
mov
pop
xor
das
sub
pop
dec
xchg
shr
shr
(bad)
lahf
aad
shr
sbb
mov
adc
and
mov
mov
lods
dec
dec
loope
mov
ret
jmp
xchg
test
push
mov
sub
jg
push
retf
mov
mov
inc
test
push
mov
cmp
mov
mov
aaa
(bad)
mov
push
les
inc
jcxz
div
leave
mov
push
xor
imul
push
pop
enter
lods
push
mov
mov
enter
mov
shl
push
sub
scas
push
fld
xor
or
rcr
les
stc
fadd
mov
(bad)
lahf
popa
sbb
repz
or
cmps
mov
cdq
ins
jmp
loope
and
fs
mov
aad
push
mov
in
ret
and
lods
fmul
(bad)
(bad)
xchg
cmp
nop
and
fs
xor
rcl
add
push
outs
jo
or
cmp
scas
adc
adc
dec
clc
xor
and
imul
mov
jmp
xchg
jns
mov
sbb
stc
dec
shr
out
retf
jecxz
inc
cmp
sti
stc
jecxz
ds
inc
push
dec
rcr
sub
sub
into
out
sub
and
mov
mov
and
push
retf
popa
call
in
sysret
mov
retf
mov
jmp
retf
pop
dec
mov
pop
repnz
mov
mov
inc
ret
stos
bound
ds
pushf
dec
cmps
rdpmc
sub
iret
xor
test
and
jle
mov
adc
iret
repz
xchg
add
(bad)
test
test
xchg
icebp
push
movs
in
jl
xor
or
jg
mov
or
xchg
out
aad
mov
(bad)
mov
les
in
outs
dec
into
add
xchg
mov
inc
stos
je
pop
and
sub
mov
sub
in
in
jp
imul
fadd
mov
xor
in
jbe
shr
fadd
mov
gs
loopne
dec
loopne
xor
xlat
xchg
add
std
pusha
retf
xor
mov
sbb
jmp
mov
test
(bad)
inc
test
pop
shl
mov
push
xor
retf
sbb
dec
sbb
in
push
outs
jle
mov
ret
mov
or
rcr
ret
mov
fnsave
in
(bad)
(bad)
push
and
xor
mov
push
mov
or
les
fbstp
mov
jmp
jge
ins
out
lods
pop
mov
add
ins
popf
pop
sub
mov
call
mov
mov
pop
inc
pushw
pop
clc
pop
mov
lfs
jecxz
repnz
and
jbe
std
mov
push
sbb
sar
ins
jle
fstp
and
cmp
pop
jmp
mov
and
pop
addr16
adc
jmp
movs
sub
pop
lds
xchg
mov
cmp
scas
mov
jge
xchg
xchg
and
test
inc
cmc
std
cdq
mov
call
retf
ret
fild
pop
push
clc
inc
inc
jne
out
adc
sar
dec
mov
inc
jo
jg
push
movs
lods
jp
(bad)
and
fxch
mov
daa
ss
lods
xor
xlat
add
push
or
inc
shl
xchg
xchg
in
arpl
cmc
xchg
and
or
mov
test
pusha
and
or
mov
push
hlt
jbe
sub
add
push
xor
cwde
cmp
out
mov
call
xor
pop
idiv
ds
int
push
popf
lock
or
rcl
mov
repnz
outs
lds
icebp
jae
retf
or
inc
fs
cld
sbb
xchg
lods
sub
popf
pop
adc
retf
dec
fs
adc
outs
out
outs
pop
popa
pop
and
lahf
sahf
fstp
icebp
mov
(bad)
cli
add
xor
pop
lds
adc
push
cdq
lahf
lds
lahf
jl
aas
adc
xchg
sar
movs
mov
add
bound
push
scas
add
cmps
mov
jnp
pop
adc
sahf
es
or
(bad)
fnstcw
call
scas
inc
adc
mov
jg
add
arpl
neg
cs
out
sub
fcomp
push
gs
pusha
outs
mov
test
add
daa
lods
cmp
pop
ror
mov
cmp
dec
dec
jecxz
sub
mov
jge
push
pop
push
sbb
es
push
popf
loopne
out
outs
scas
rol
es
cwde
idiv
jle
out
cmps
in
popf
add
dec
dec
out
mov
cmp
fucomip
mov
call
popa
mov
leave
jl
xchg
mov
cmp
xchg
jo
push
fst
cmp
test
xchg
jae
aaa
push
jg
mov
sbb
push
sub
bound
pop
icebp
adc
pminub
scas
mov
shr
ja
cmps
(bad)
mov
mov
fwait
arpl
idiv
pop
sti
sub
call
lahf
mov
stc
shl
and
sub
push
jbe
push
(bad)
push
sbb
adc
loope
(bad)
hlt
hlt
stc
je
mov
fucomi
popa
pop
push
mov
aad
in
out
popa
bound
and
mov
inc
and
gs
leave
pop
mov
xor
sub
lods
push
loop
fcomp
mov
div
cmp
xor
adc
in
mov
mov
lds
add
inc
xor
inc
or
jno
jo
jl
test
adc
sbb
dec
jg
dec
push
mov
mov
inc
lods
ins
pushf
mov
jle
ret
inc
inc
add
push
arpl
mov
mov
les
mov
pop
add
jmp
scas
add
popf
inc
jl
rcr
ficom
inc
push
sar
mov
repz
add
mov
dec
xor
ins
movs
mov
dec
dec
in
out
mov
mov
mov
add
dec
push
or
movs
adc
out
ret
sbb
test
adc
dec
cmp
jecxz
ja
or
(bad)
in
mov
jnp
outs
fucompp
sub
add
stos
cs
std
push
cmp
sbb
(bad)
and
sbb
inc
stos
mov
xor
es
adc
icebp
or
shl
dec
int
test
and
(bad)
lods
fidiv
cmps
push
mov
inc
inc
add
jbe
bt
lea
xchg
dec
add
xor
lock
mov
jb
push
stos
dec
ret
push
mov
jge
hlt
out
push
cmp
jmp
mov
adc
sbb
cmp
xor
shl
jp
ins
cmc
add
jecxz
cdq
dec
es
retf
jmp
pop
sbb
adc
add
sbb
into
jmp
fcmovbe
es
pop
movs
and
movs
int3
cmps
adc
add
and
(bad)
mov
pop
cmp
test
es
js
sti
out
sti
in
cli
out
inc
mov
push
xlat
out
das
into
(bad)
jg
(bad)
loopne
mov
sbb
sbb
js
add
inc
je
add
and
mov
std
arpl
cmp
retf
stos
and
push
test
sar
mov
ror
outs
in
xchg
das
adc
pusha
rol
bound
cmp
sub
cmp
sbb
lods
mov
push
pop
sbb
mov
lock
or
icebp
mov
test
iret
out
iret
call
dec
adc
xchg
imul
dec
and
stos
pop
int3
outs
fsubr
or
jae
pushf
icebp
mov
push
mov
jne
mov
scas
mov
xchg
outs
pop
movs
jmp
xchg
lock
xchg
clc
push
adc
cmp
xchg
frstor
jg
repnz
scas
mov
xor
xor
ds
jb
mov
dec
push
sti
mov
mov
jns
jnp
cwde
mov
pop
icebp
int
iret
pop
stos
test
sub
cdq
mov
adc
push
(bad)
jmp
inc
test
jecxz
aad
repnz
ins
stc
mov
das
lods
out
adc
inc
out
dec
sbb
jo
sub
mov
lods
or
call
int
pop
mov
sahf
or
add
cmp
sbb
mov
inc
sub
gs
mov
rep
mov
inc
fidiv
aaa
enter
xor
cmp
in
scas
inc
dec
enter
mov
inc
xchg
mov
in
popa
mov
daa
in
lods
add
daa
xor
push
call
sub
mov
daa
sbb
and
inc
mul
out
rol
shl
fild
mov
sbb
add
popf
cmp
outs
mov
(bad)
adc
dec
aaa
lahf
inc
cmc
mov
push
aad
mov
pop
(bad)
adc
in
jl
xor
pop
mov
sub
mov
shl
(bad)
pop
rcl
inc
je
or
das
mov
xor
(bad)
arpl
shr
mov
mov
push
not
gs
cmp
sbb
loopne
cmp
ja
pop
sbb
lock
sub
retf
arpl
pusha
pop
stos
rol
mov
mov
pop
xor
jle
cmp
mov
call
fwait
stos
lds
rcr
test
adc
std
in
xor
mov
cs
fisttp
and
inc
push
ret
add
ds
cdq
(bad)
pop
and
je
jp
push
adc
add
cmp
inc
mov
xor
icebp
mov
std
adc
push
mov
hlt
mov
neg
xor
cmp
push
aaa
inc
imul
inc
daa
inc
add
push
cmp
(bad)
pop
jne
outs
xchg
retf
imul
or
sar
(bad)
sbb
je
mov
inc
jne
fucomi
rcl
test
out
cmps
sahf
int3
sub
add
add
mov
(bad)
pop
push
push
dec
cmp
in
and
rcr
retf
jmp
clc
cmps
pop
pop
mov
sbb
cmp
fwait
stos
ret
push
scas
dec
aaa
inc
outs
stos
rcr
rol
call
or
sub
sbb
scas
cmp
sbb
and
sahf
enter
mov
cld
mov
rol
int3
das
loop
mov
adc
cmp
jmp
fnstenv
cmps
dec
jle
fisub
sub
in
cmc
sbb
sbb
das
mov
add
movs
clc
call
inc
xchg
dec
mov
mov
(bad)
jg
nop
xor
cmps
sahf
push
mov
ficom
push
inc
push
cli
add
ins
int3
(bad)
sbb
jmp
cmp
sti
aas
mov
fbld
push
lds
(bad)
inc
cs
pusha
jecxz
scas
movs
jo
xchg
push
xor
sbb
jo
jne
(bad)
xchg
lahf
jp
fidiv
mov
loop
loope
inc
repz
shl
(bad)
jbe
sub
xchg
fwait
ins
add
cwde
mov
adc
inc
ffree
or
xchg
jns
and
out
into
dec
shl
inc
into
leave
arpl
jae
sub
lods
add
scas
gs
pusha
daa
xchg
mov
adc
out
or
jl
push
or
daa
cmp
xchg
les
iret
inc
xor
push
inc
loop
lods
push
(bad)
push
shl
mov
and
bound
aas
cmp
jo
leave
jae
cmp
pop
jle
mov
ins
repnz
inc
jmp
sbb
ja
iret
mov
mov
loope
sbb
mov
movs
cli
sub
retf
or
cmps
imul
sub
rcr
je
imul
adc
and
in
popa
dec
loope
mov
mov
mov
fs
add
test
pusha
int
jmp
mov
mov
outs
push
jmp
(bad)
dec
pop
frstor
retf
repnz
loopne
jmp
mov
out
mov
fwait
sahf
inc
cmps
cmp
leave
inc
(bad)
mov
jmp
cmp
ds
or
push
ret
mov
imul
test
idiv
push
adc
push
stos
mov
movs
mov
and
lahf
sub
and
ja
(bad)
jno
or
jnp
cwde
arpl
rol
ss
mov
shl
pushf
and
lock
or
mov
js
sbb
sub
adc
lock
push
push
pop
or
(bad)
jmp
push
mov
xor
mov
push
outs
mov
fnstsw
cdq
cmp
cmp
push
and
mov
mov
and
push
mov
daa
out
cmp
mov
dec
mov
mov
sbb
(bad)
(bad)
push
mov
push
adc
xor
push
and
cmp
xlat
ret
scas
xor
sbb
push
add
jae
imul
(bad)
or
lods
mov
jmp
loop
cwde
sbb
xchg
repnz
imul
ins
mov
cmps
adc
mov
das
jnp
xchg
lds
and
ret
lds
adc
rcl
in
inc
sahf
push
jle
mov
mov
stc
push
fmul
mov
ror
mov
les
je
leave
fldl2t
into
pusha
rol
jbe
out
xor
jno
cmp
jae
dec
in
out
pop
idiv
mov
jmp
or
pusha
arpl
addr16
(bad)
add
(bad)
and
pop
pop
mov
add
ret
iret
fidivr
arpl
mov
xchg
inc
sbb
in
scas
test
cmp
cwde
mov
inc
jp
xchg
(bad)
aas
in
pop
mov
mov
mov
and
leave
cmp
in
loop
sbb
shr
and
push
sbb
pusha
cmp
sub
add
inc
in
inc
jb
in
scas
and
xor
adc
dec
xchg
inc
jge
mov
jg
cmp
jbe
nop
inc
pop
sti
cmp
ret
dec
movs
clc
in
clc
inc
daa
and
retf
pusha
mov
jo
cdq
sar
push
cmp
lods
pop
cmc
lods
bound
ss
inc
jge
std
gs
sub
jg
arpl
mov
rcr
aam
dec
xor
js
add
sbb
inc
push
adc
test
mov
mov
(bad)
call
imul
sub
adc
dec
arpl
imul
jmp
mov
loop
jg
outs
and
cli
into
rcl
cmp
mov
xor
(bad)
out
xlat
les
inc
mov
dec
stc
jl
shl
jnp
movs
mov
es
add
cmp
popa
movs
jp
retf
inc
sbb
mov
jne
push
loop
dec
movs
and
std
imul
in
cs
dec
mov
scas
mov
call
dec
loope
in
repnz
push
xchg
mov
cmp
pop
jns
fsubr
push
fcmove
mov
arpl
push
and
out
jg
mov
int
daa
test
fisubr
mov
jnp
scas
shl
xchg
mov
cmps
adc
cmp
dec
cmc
fmul
test
push
(bad)
push
imul
imul
repnz
jl
lea
lds
loope
inc
sbb
pushf
pop
inc
or
inc
fs
stos
pop
or
mov
push
les
push
ss
add
xor
cs
cmp
xor
pushf
mov
mov
dec
sub
fiadd
cdq
mov
mov
xor
xchg
sub
pop
and
dec
icebp
les
(bad)
xor
outs
pop
loope
jge
xor
sbb
mov
jae
fidivr
jmp
xchg
xor
push
pushf
jle
bound
mov
int
cdq
mov
into
cmc
out
das
test
push
in
dec
pop
ficom
dec
cwde
je
sub
and
mov
in
adc
retf
popa
mov
shl
cmp
lods
xchg
repnz
invd
push
push
adc
pop
adc
popf
sub
and
xor
jne
adc
xor
sub
loope
iret
rol
or
sbb
jl
cmp
dec
sbb
aas
pop
push
jmp
mov
retf
mov
rcr
push
mov
mov
mov
mov
(bad)
(bad)
sbb
enter
test
xor
xchg
inc
mov
dec
cmc
imul
mov
lds
dec
jno
push
popa
jmp
sub
sbb
jo
add
pop
call
fisttp
cmps
cmc
jno
push
and
add
fmul
jo
adc
mov
ret
retf
aad
add
xchg
rol
mov
in
(bad)
ficomp
push
push
pop
cwde
(bad)
fst
xchg
jmp
movs
jg
dec
int3
push
je
and
push
pop
in
test
loop
add
add
jns
lock
ins
call
movs
repz
(bad)
das
jb
xor
add
call
xlat
sbb
imul
stos
cs
rcr
sbb
dec
repz
xchg
clc
xchg
xchg
jmp
and
xor
or
arpl
stc
and
loope
pop
xor
add
(bad)
fild
mov
daa
daa
adc
pop
out
test
mov
enter
popf
ja
ins
lock
cmp
cmp
ins
and
jbe
xlat
adc
add
call
pop
rcl
test
addr16
adc
and
movs
push
ja
aad
mov
call
shr
xchg
cwde
arpl
jg
or
jmp
aaa
mov
xchg
push
xchg
mov
pop
or
jecxz
adc
mov
xor
fild
jmp
push
and
pop
fild
pop
adc
lock
aam
jns
dec
lds
or
xchg
push
adc
push
jg
inc
sbb
mov
adc
sub
push
pop
(bad)
imul
and
and
add
fsub
and
xor
test
out
inc
adc
jns
xor
jg
mov
cmovnp
je
mov
cmp
dec
jno
neg
(bad)
lods
cld
push
cmp
fcomp
sub
ret
mov
jecxz
(bad)
mov
mov
loop
pop
dec
push
adc
mov
jae
mov
inc
adc
ins
icebp
jle
shl
push
pop
add
jne
dec
xor
fcomp
mov
push
pop
and
mov
sbb
cmps
rol
sbb
mov
aad
pusha
aaa
add
mov
test
lahf
dec
push
fstp
shl
mov
pop
adc
jmp
add
inc
pop
cmp
jnp
push
and
sbb
scas
or
cs
xchg
inc
nop
lds
(bad)
movs
push
jmp
sub
popa
add
push
leave
mul
int
push
add
(bad)
cmps
xor
push
out
dec
xchg
mov
ror
es
pop
loop
or
pop
retf
test
sbb
fild
ins
dec
jmp
rcr
fidiv
addr16
outs
nop
addr16
cmp
daa
or
(bad)
pop
popf
test
mov
test
inc
xor
movs
iret
cmps
mov
inc
test
xor
adc
ror
adc
mov
or
inc
add
pop
or
cmps
imul
push
xor
aas
cmp
mov
jle
retf
add
aaa
push
(bad)
(bad)
xchg
call
scas
push
jge
mov
std
mov
or
ret
sub
out
pop
icebp
jp
aam
jge
ds
jo
mov
xchg
sbb
jb
mov
mov
xchg
jmp
ret
xchg
ja
mov
int
mov
nop
fisubr
mov
push
mov
test
jg
cmps
mov
pop
xor
es
fwait
add
xor
inc
xchg
sub
repz
int3
jmp
mov
clc
xor
aam
movs
mov
out
xor
push
add
push
je
leave
call
fdivrp
push
loopne
inc
push
iret
jmp
imul
sahf
mov
sub
lods
ins
outs
sti
pop
xor
mov
stos
shl
xor
and
push
into
add
xchg
pop
(bad)
aam
pop
mov
push
ret
loop
mov
and
loope
xchg
jo
ret
outs
mov
das
xor
pop
test
pusha
push
clc
movs
xor
push
push
ficom
push
cmp
cld
(bad)
mov
or
popf
xor
mov
ret
jns
cmp
movs
mul
xchg
push
mov
(bad)
loopne
fcmovb
push
sub
sub
ja
push
xchg
cld
test
into
enter
jae
sbb
jge
nop
mov
les
mov
rcr
fdiv
adc
push
push
push
pop
pop
ffree
gs
mov
jl
call
mov
pop
dec
cmps
push
imul
call
xchg
int3
rcr
call
mov
or
sbb
inc
je
adc
sub
dec
js
mov
push
jl
add
shl
imul
int
mov
add
ds
ss
int
inc
test
scas
lds
pop
dec
ds
dec
add
mov
pushf
jge
stos
sub
jbe
pop
out
mov
jno
cmp
pop
ss
ret
and
(bad)
leave
jl
mov
pop
sbb
lahf
sub
imul
push
out
or
and
mov
jo
mov
add
adc
jae
je
jl
out
inc
push
mov
jne
and
cdq
retf
pop
or
cmp
jmp
ret
shl
imul
ds
sub
aaa
pop
mov
mov
adc
(bad)
lock
enter
pop
jge
xchg
push
sub
and
rol
and
sub
and
aam
lods
adc
nop
push
xchg
sti
loop
(bad)
xor
pop
pop
inc
outs
xchg
out
shl
xchg
cmps
push
std
xchg
pop
enter
mov
mov
(bad)
loope
ins
jge
and
bound
ficom
and
retf
cmps
shr
sub
(bad)
jle
jbe
cmp
push
std
xchg
dec
mov
cdq
hlt
(bad)
cmps
pop
mov
shr
mov
inc
mov
fdiv
mov
mov
lock
push
cmp
cmc
clc
lock
cmps
or
xor
stos
jmp
call
les
icebp
imul
mov
jp
dec
mov
std
ja
dec
imul
dec
mov
mov
pop
push
push
mov
xor
retf
dec
xor
sbb
in
pusha
bound
or
stos
mov
(bad)
mov
xor
leave
(bad)
sub
xlat
inc
cmps
inc
adc
xchg
push
jle
dec
fwait
in
sub
imul
lock
aaa
jp
push
mov
lock
push
mov
dec
jmp
xchg
fs
cdq
mov
and
mov
outs
pusha
iret
sbb
test
mov
jg
and
iret
test
popf
(bad)
push
ss
mov
ret
out
outs
mov
aaa
iret
jp
fdivrp
mov
adc
fcomp
lea
imul
jne
xor
(bad)
mov
xor
push
xchg
test
pop
iret
je
dec
sbb
inc
(bad)
sbb
shl
loope
jb
mov
ins
cmp
aam
fild
sub
xchg
mov
lods
push
in
psubb
shl
pop
mov
cld
push
mov
outs
fisub
lahf
movs
enter
adc
push
imul
inc
imul
mov
icebp
retf
cmp
xor
add
int3
or
or
sub
loopne
add
mov
add
ja
das
inc
mov
sub
jae
shl
aad
arpl
fdiv
ds
xchg
dec
lods
scas
xchg
jno
sti
rol
push
test
mov
adc
push
dec
pop
mov
xor
stos
sub
adc
in
arpl
lea
dec
pop
call
aaa
iret
nop
test
ss
lds
cmps
mov
iret
push
jmp
scas
mov
or
jae
mov
mov
sub
xor
push
outs
or
imul
test
imul
popf
mov
xchg
fcom
jns
pop
or
cld
imul
cmp
push
push
xor
mov
add
push
xor
or
and
aaa
es
sar
retf
inc
add
pop
fwait
enter
addr16
dec
imul
or
or
in
arpl
inc
(bad)
in
scas
mov
push
out
clc
mov
loope
and
cmp
pop
dec
dec
push
or
adc
je
and
sar
and
or
mov
shr
jb
ss
into
sbb
cmp
mov
xchg
sar
pushf
inc
int3
mov
jmp
popf
out
xchg
ja
cmp
pop
leave
out
cmp
in
test
hlt
test
sub
jle
jmp
mov
call
adc
push
push
push
mov
dec
mov
aam
push
pop
add
sti
and
cmp
pop
ret
les
adc
ds
test
je
or
fs
ror
addr16
push
in
psllq
inc
sbb
jbe
jnp
and
inc
stos
mov
test
mov
xchg
and
in
mov
push
push
and
out
js
xlat
mov
stos
outs
xor
aam
sub
nop
xor
clc
mov
xor
jb
add
and
xchg
push
mov
mov
add
mov
add
mov
push
cmp
adc
pop
fadd
add
and
out
or
jbe
pop
or
fimul
mov
cmps
add
sbb
std
fnstenv
jno
xchg
mov
push
rol
xchg
mov
mov
rol
fisubr
sbb
stos
repz
mov
ficomp
add
(bad)
sub
add
xor
mul
fadd
sub
stos
push
jecxz
jp
hlt
in
ins
out
push
inc
dec
sub
arpl
loopne
pop
mul
add
xor
std
inc
push
lods
dec
fsubr
mov
adc
jnp
shr
adc
and
mov
ret
fild
sar
or
aaa
add
pop
adc
pop
mov
sahf
xor
outs
mov
mov
sub
push
jbe
test
push
mov
and
sbb
mov
pop
rcr
xchg
clc
cs
ja
test
xor
wbinvd
movs
jae
pop
push
pop
retf
pop
adc
cmps
mov
imul
fadd
dec
loope
sub
outs
in
jecxz
jg
ss
das
(bad)
xlat
out
adc
outs
jno
push
push
sti
sub
stos
adc
cmp
mov
aas
pushf
adc
mov
(bad)
cmp
sub
popa
pusha
sub
or
mov
cmp
pop
jge
repz
inc
or
adc
ds
mov
dec
sbb
movs
and
push
mov
in
stc
push
(bad)
addr16
data16
scas
sub
sar
popf
and
test
mov
out
inc
cmps
scas
mov
cmp
not
jle
retw
sub
xchg
add
movs
ret
mov
or
cli
push
mov
pop
arpl
call
push
scas
stc
fidiv
cmps
cmp
jne
arpl
pop
movs
and
ins
jb
shl
cmp
sub
jmp
add
neg
fsubr
xchg
ret
shl
scas
pushf
dec
lods
dec
es
aam
pop
sub
outs
or
sub
repnz
cdq
shl
fistp
mov
mov
inc
xor
dec
inc
cmp
(bad)
jbe
ss
push
bound
test
and
mov
jne
lds
sub
test
xor
div
jne
lds
stos
jmp
mov
bound
and
cdq
into
ror
pop
call
adc
fnstcw
fisttp
mov
mov
sbb
and
push
call
movs
call
sub
(bad)
xchg
adc
ret
mov
mov
ret
in
xor
sar
scas
push
inc
cli
push
sbb
jne
sar
in
xchg
cwde
ins
ret
mov
mov
dec
push
mov
(bad)
add
lahf
xlat
test
add
cmps
outs
cmp
ret
jmp
pop
stos
(bad)
push
loopne
dec
adc
and
mov
push
sub
out
mov
pop
call
int
jge
cmps
push
push
mov
scas
arpl
sub
jmp
loope
push
adc
mov
lods
push
in
xor
bound
(bad)
and
mov
or
arpl
cmp
adc
push
or
sub
xor
cmp
sbb
mov
call
sbb
sbb
push
cwde
xchg
cmp
pop
cs
jns
inc
outs
mov
mov
not
test
mov
cmps
inc
inc
in
das
fisub
sbb
and
xor
aad
mov
in
pop
xchg
jae
mov
cld
pop
cmp
xchg
aad
xchg
outs
mov
setns
mov
mov
lods
jbe
push
mov
jp
addr16
cmp
add
aad
(bad)
in
xor
fnstcw
push
inc
(bad)
sub
inc
test
and
sahf
int
mov
ret
frstor
fild
repz
repnz
js
inc
adc
add
xor
out
retf
mov
cli
cmp
sub
push
dec
push
retf
sbb
mov
push
retf
xchg
inc
(bad)
sti
(bad)
or
in
pop
movs
in
cmp
xor
push
lea
and
and
and
pop
or
cmp
(bad)
aam
pop
push
fs
adc
cli
dec
int3
mov
adc
js
ret
ins
scas
mov
or
hlt
inc
add
jge
out
xchg
cs
sbb
lods
jae
mov
pop
pop
pop
stos
out
out
jmp
pop
in
sbb
scas
jg
push
mov
imul
mov
das
inc
xchg
leave
mov
add
loope
add
cmp
int
retf
fstp
ds
in
mov
add
jl
leave
stc
sbb
adc
cmp
xchg
sub
(bad)
btr
push
outs
adc
jmp
in
xchg
mov
(bad)
sbb
(bad)
jae
test
adc
dec
aad
dec
(bad)
pop
daa
test
pop
(bad)
cmp
inc
xchg
cmp
and
sub
xchg
xor
movs
sbb
cmp
push
stc
loope
in
mov
add
out
xor
popf
cwde
xlat
inc
adc
lods
ficom
test
ficom
jp
xor
retf
cmp
stos
xchg
inc
mov
xchg
sub
jne
retf
je
inc
jp
push
mov
sub
out
ins
mov
dec
iret
mov
mov
push
cs
sbb
adc
mul
cli
cmps
stos
out
sbb
pop
pusha
cmp
neg
add
mov
enter
(bad)
mov
mov
loopne
movs
adc
lds
sbb
neg
sub
or
mov
lods
call
imul
sub
xchg
push
xchg
jmp
add
cmp
(bad)
mov
push
sbb
test
inc
pop
push
es
sub
(bad)
shr
fld
mov
cmp
jmp
mov
ds
leave
ds
inc
rcl
xchg
dec
or
call
js
inc
add
add
stos
sub
adc
lds
jmp
xor
sub
pop
xor
add
lods
lods
jle
or
and
movs
jbe
cmp
dec
stos
inc
mov
xor
mov
pop
into
xor
push
aad
imul
jnp
add
pop
sbb
mov
out
mov
stos
movs
icebp
push
cmc
retf
int
inc
inc
sub
dec
mov
lock
pop
and
jmp
das
ins
jmp
adc
dec
or
add
test
mov
stos
mov
cmp
cmp
jmp
add
(bad)
cli
and
out
fisttp
outs
inc
retf
sub
ins
xchg
imul
test
mov
or
jb
xchg
cld
cli
loopne
int3
pop
ja
ss
imul
mov
xchg
out
dec
(bad)
jne
stos
aad
adc
loopne
call
push
lods
retf
push
or
test
aam
movs
sub
call
test
daa
mov
inc
jmp
inc
xlat
adc
test
mov
ins
fist
inc
shl
frstpm(287
int
iret
nop
xor
das
sbb
dec
jg
push
mov
add
xor
(bad)
dec
push
mov
pop
jmp
sub
push
loopne
cmp
jl
clc
es
push
out
push
and
cli
out
mov
pop
or
jno
xchg
stos
int
cmp
xchg
cmp
addr16
aaa
inc
sahf
sbb
add
stc
arpl
inc
and
je
sahf
push
add
mov
hlt
lds
pop
stos
fcomp
xor
cmps
adc
dec
pop
mov
daa
fisubr
(bad)
sahf
daa
mov
stos
aaa
xor
outs
dec
adc
ret
inc
outs
jmp
pop
pop
repz
dec
(bad)
jp
adc
xchg
test
shr
and
das
add
jae
int
out
retf
ja
jnp
mov
sbb
mov
outs
and
xor
outs
sahf
and
ret
(bad)
hlt
sbb
fmulp
repz
and
ror
sub
mov
xchg
test
mov
pop
xchg
xor
jbe
jae
or
inc
adc
jbe
loope
push
dec
sbb
inc
ror
pop
loope
pop
(bad)
pop
(bad)
aam
mov
jbe
jo
cmp
mov
cmps
adc
ins
cdq
adc
pop
inc
mov
and
mov
or
mov
test
sub
xor
fadd
icebp
jmp
mov
rcr
push
mov
or
push
fucom
enter
adc
cmc
std
ss
pop
dec
dec
adc
out
or
rep
inc
scas
push
enter
xchg
bound
mov
pop
mov
xchg
fwait
mov
mov
cld
push
xor
(bad)
les
push
sti
mov
pushw
sub
sbb
es
push
sub
and
mov
push
xchg
(bad)
test
jbe
mov
add
and
push
cmp
ror
or
lods
out
jne
xchg
adc
js
das
add
stc
pop
mov
inc
mov
scas
retf
sbb
daa
mov
sbb
jns
push
mov
mov
jle
mov
fild
xchg
jmp
imul
xchg
les
jne
add
pop
(bad)
in
xchg
hlt
dec
fldenv
push
add
loope
push
mov
mov
inc
dec
test
ror
imul
and
add
nop
sub
es
inc
(bad)
jmp
and
ficomp
pop
mov
jne
mov
clc
adc
nop
das
mov
mov
lahf
lahf
adc
out
dec
pop
jmp
data16
fiadd
push
lods
or
dec
dec
lock
mov
xchg
mov
inc
mov
xor
jp
add
push
inc
push
cs
cwde
ret
cmps
jmp
fdiv
add
mov
into
lods
jmp
ins
push
ds
mov
dec
sub
pop
scas
int3
pop
inc
shl
mov
cs
and
mov
fdiv
(bad)
sub
ss
das
nop
push
push
pop
loop
test
sub
enter
mov
daa
test
jno
pop
dec
call
retf
jmp
xchg
ds
repnz
sti
stos
rcl
and
mov
adc
inc
lock
mov
and
xchg
mov
inc
mov
imul
xor
add
push
aad
stc
stc
xor
jecxz
mov
mov
(bad)
cmps
mov
xor
jge
imul
mov
je
inc
dec
hlt
sahf
xlat
cmc
push
int3
jg
ins
loopne
push
(bad)
outs
imul
jne
inc
fisub
jecxz
jb
dec
les
xchg
adc
xchg
dec
repz
and
fcomi
leave
stos
fisubr
and
mov
mov
mov
xchg
xchg
lods
xor
dec
imul
fbld
imul
iret
pop
ins
sub
mov
mov
inc
int3
fmul
(bad)
jns
cmp
lds
push
scas
mov
adc
and
mov
mov
add
test
pusha
neg
or
xchg
ficom
mov
daa
mov
dec
jge
pop
loope
dec
lahf
mov
pop
inc
mov
cmps
js
cmc
adc
fdiv
adc
lock
pusha
jecxz
cmps
adc
xchg
xlat
push
push
stc
aas
inc
outs
stos
call
sbb
jb
dec
and
test
dec
pop
ins
push
out
sub
out
rcl
inc
xor
mov
push
push
pop
or
cmps
push
pop
gs
in
adc
sub
sbb
xor
sbb
add
push
outs
cmp
out
out
sbb
cmps
push
sahf
inc
or
xchg
sbb
mov
pop
ret
mov
add
dec
add
push
mov
iret
inc
pop
mov
repnz
dec
ja
fsubrp
pop
imul
jg
cmps
and
ficomp
cmp
movs
bound
and
pop
mov
mov
(bad)
jl
xchg
add
pop
dec
retf
cmp
add
adc
outs
enter
sbb
push
jne
repnz
xchg
mov
jo
mov
adc
jmp
es
inc
xor
call
lods
add
mov
rol
mov
xchg
mov
cmp
loop
test
adc
push
or
jae
add
bound
out
inc
xor
cmp
mov
inc
sub
xor
mov
test
xchg
push
call
aaa
(bad)
fcom
jecxz
push
js
xchg
bound
xor
data16
add
sahf
jle
ret
adc
inc
mov
aaa
(bad)
and
sub
mov
loop
cli
inc
dec
cld
fstp
sub
pop
and
fidiv
jmp
(bad)
mov
xchg
ss
pop
pop
mov
and
clc
je
mov
jo
clc
pop
push
je
push
mov
iret
jl
out
(bad)
(bad)
jl
sub
push
rcr
repz
mov
and
lds
push
popa
jae
mov
out
xchg
dec
cmps
sbb
in
aas
or
pop
sbb
push
adc
add
pop
out
adc
sbb
lds
pusha
stc
outs
inc
out
ret
and
mov
scas
arpl
call
and
dec
movs
cmp
loope
fscale
fcom
mov
push
repnz
dec
xchg
in
push
mov
push
mov
adc
mov
movs
das
sub
loop
cmp
cmps
push
retw
ret
sbb
in
ret
hlt
sbb
enter
xchg
mov
or
repz
ss
(bad)
xor
iret
test
movs
dec
mov
sbb
es
or
pop
and
mov
push
jmp
jb
xchg
test
adc
lock
or
sbb
fnsave
sbb
stc
xor
adc
lods
mov
xor
sbb
mov
jg
xchg
pop
inc
call
fldenv
mov
sub
test
rcr
jbe
pop
es
or
rol
pop
in
es
mov
add
mov
sahf
iret
mov
or
mov
sti
bnd
xchg
mov
outs
call
adc
not
int3
sbb
scas
pop
out
xor
add
imul
push
sub
jmp
test
push
push
push
sar
push
jmp
shr
cwde
popf
jno
dec
cmps
push
cdq
cmps
aad
sbb
dec
sbb
or
pop
stos
js
xchg
fldenv
scas
push
jae
add
pop
add
out
adc
lahf
or
sbb
mov
dec
ficomp
sub
adc
jge
sub
aas
dec
pop
(bad)
(bad)
adc
fucomi
sbb
cmp
mov
mov
scas
pop
xor
or
sub
sub
add
sbb
shl
jmp
dec
fucomip
in
sbb
clc
in
addr16
cmc
mov
sahf
(bad)
mov
ret
test
inc
nop
mov
data16
ret
int
imul
pop
(bad)
jno
add
xor
and
push
mov
lahf
add
add
sahf
inc
sub
cld
addr16
cdq
and
rcl
cwde
cmp
cmps
push
add
jns
adc
das
xchg
xor
clc
or
sub
jecxz
pop
push
iret
add
in
iret
gs
xor
out
je
mov
call
xor
or
inc
test
out
cmpxchg
push
add
mov
scas
mov
xor
pop
xlat
fisubr
cmp
fwait
sar
mov
(bad)
(bad)
xor
int3
add
(bad)
call
mov
and
push
dec
xor
shl
out
faddp
leave
je
push
dec
xchg
add
mov
out
mov
fs
cmps
retf
mov
mov
and
cmp
sub
gs
data16
es
popa
xchg
or
stos
add
popf
or
test
aas
cdq
aad
stos
fldcw
imul
xor
dec
jmp
test
pop
lds
(bad)
std
sti
shl
jecxz
mov
imul
fisttp
js
xchg
shl
out
stos
push
bnd
call
mov
addr16
xchg
jnp
fmul
adc
mov
(bad)
adc
dec
stos
cmps
imul
out
cmp
out
mov
leave
mov
imul
int
std
montmul
cmps
cmp
push
dec
adc
or
out
inc
das
dec
mov
sahf
push
push
scas
fld
jnp
jmp
lahf
pop
jmp
xchg
xchg
push
scas
or
pop
jge
leave
ds
inc
jb
lahf
js
xchg
xchg
out
gs
dec
or
es
fiadd
addr16
je
in
loopne
push
sbb
imul
and
and
or
into
test
or
mov
adc
xor
mov
mov
and
rcr
imul
cwde
adc
push
call
pop
push
dec
enter
xor
cmps
xor
dec
push
mov
or
fwait
pop
adc
add
std
ret
sub
jg
fs
jecxz
sub
pop
loop
mov
aad
jo
dec
(bad)
cli
mov
sbb
pusha
or
repz
das
rol
cs
and
cmp
push
inc
ins
cli
and
outs
inc
push
repnz
int3
and
sub
mov
movs
lock
mov
mov
lahf
mov
dec
push
fisub
dec
xchg
mov
dec
cmc
fisttp
adc
jmp
and
cmp
in
jecxz
pop
test
mov
cmp
jmp
(bad)
cmps
inc
and
shl
arpl
sbb
dec
add
ins
addr16
xor
and
pop
inc
clc
scas
xchg
enter
adc
inc
mov
mov
daa
and
push
mov
sbb
push
adc
mov
mov
jp
jecxz
xor
jne
ret
cmp
jp
mov
data16
cs
adc
dec
movs
dec
or
mov
mov
jbe
sub
repz
nop
and
psubd
dec
or
mov
hlt
sbb
xchg
add
aad
loope
lahf
pop
jl
adc
neg
test
mov
sbb
out
int
jnp
or
loope
inc
push
jl
jmp
pop
out
sbb
js
mov
fcmovu
and
and
mov
jo
mov
call
ss
push
mov
ror
loope
mov
cmc
jne
xchg
aam
jnp
xchg
adc
xor
pop
mov
add
jge
cmp
push
add
add
fld
sbb
xchg
retf
cmp
aas
ja
int3
aaa
or
cmps
les
mov
mov
jp
int3
sbb
lock
ins
fst
pusha
jmp
xor
mov
push
mov
dec
test
mov
cmp
call
sbb
test
mov
xor
and
cmp
bsr
lods
inc
mov
test
and
jns
scas
lock
pusha
sub
inc
sbb
push
mov
les
(bad)
in
ficomp
xchg
aam
les
lea
inc
es
sbb
push
leave
ss
call
and
xchg
js
hlt
and
sbb
jno
sti
and
sti
jle
jnp
and
out
push
call
mov
and
in
out
mov
fdivr
xor
test
or
sub
pusha
iret
jae
or
sti
pop
fnsave
clc
jmp
stos
test
push
paddq
(bad)
addr16
jecxz
mov
sbb
xchg
add
inc
inc
in
out
test
add
or
xor
adc
or
xchg
icebp
mov
lock
sub
dec
icebp
jno
inc
and
(bad)
retf
arpl
cmp
and
jle
jle
mov
(bad)
pop
js
sbb
cmp
rcl
pop
inc
loope
mov
call
or
jp
std
data16
mov
and
les
adc
dec
cmp
gs
mov
nop
jge
scas
push
xchg
xchg
clc
add
loop
imul
dec
or
ins
cdq
xchg
xchg
xchg
sub
add
pop
js
loop
rol
adc
in
mov
mov
lahf
jecxz
jecxz
out
nop
je
mov
scas
scas
push
inc
jp
lods
lahf
out
jo
add
inc
cmp
leave
jle
jae
ror
ins
push
jns
mov
test
mov
push
pop
xchg
inc
arpl
and
or
aaa
cwde
movs
stos
jns
push
iret
dec
(bad)
loope
shl
sti
and
fcomp
push
test
cmp
clc
cwde
mov
aam
jno
add
pop
sar
sar
shl
in
in
retf
jmp
add
retf
cwde
mov
es
push
and
and
fstp
lahf
sub
xor
(bad)
jae
xchg
inc
cmp
out
into
cmp
push
sub
sbb
sti
(bad)
mov
pop
add
test
adc
jl
mov
(bad)
jg
out
inc
xchg
jo
cmp
push
sub
pushf
je
enter
xor
scas
dec
cmp
rcr
mov
cmp
pop
imul
std
call
push
pop
push
inc
cmp
jb
aam
pop
jae
pop
sbb
jp
repnz
xor
xchg
pop
je
mov
adc
push
mov
add
add
adc
cmp
adc
jbe
xor
es
jbe
(bad)
idiv
pop
leave
xchg
int
mov
cmps
popf
push
dec
mov
xor
cmp
push
adc
(bad)
pop
pushf
sbb
in
pop
shr
and
jg
shl
inc
adc
push
sbb
and
leave
push
out
adc
fild
shr
aad
sbb
(bad)
mov
push
rcr
ds
mov
aad
call
jae
add
out
mov
gs
rol
mov
leave
dec
jns
lea
xchg
mov
loope
sub
scas
aad
pop
jbe
inc
nop
cmp
inc
aad
shl
(bad)
sbb
jmp
loop
add
imul
xor
sub
xor
stc
jns
pop
xchg
and
shl
ins
sbb
es
cs
sti
clc
cmps
cli
mov
push
push
test
test
jle
pop
mov
std
call
scas
sbb
sbb
sub
js
loope
add
inc
push
mov
mov
pusha
jl
cwde
adc
add
adc
fisub
loopne
adc
xchg
(bad)
pop
rol
inc
xchg
ja
rcr
icebp
xchg
(bad)
cmp
int3
in
cld
jns
dec
vexpandps
out
ss
in
push
inc
jae
loopne
mov
aad
addr16
add
call
add
adc
in
dec
xchg
or
mov
lods
sti
cmp
or
sbb
retf
out
das
fwait
ret
pop
imul
rcl
jmp
in
cmps
mov
jae
add
cmp
sbb
pop
pop
pop
dec
adc
aad
int
sub
imul
popa
sar
push
retf
int3
jmp
pusha
jno
xchg
pop
fld
push
shl
repz
pushf
sti
in
adc
mov
fstp
mov
mov
mov
cdq
repz
sub
movs
fild
dec
cwde
jb
call
sbb
sub
jmp
enter
jno
cmp
or
push
jno
(bad)
jl
out
retf
shr
pop
mov
pextrw
pop
xchg
sar
or
pop
dec
jno
je
mov
rol
add
jg
sar
mov
jnp
call
fcomi
adc
ja
inc
aad
vmwrite
call
iret
pop
push
call
loope
adc
fnstsw
mov
mov
lock
fld
and
sub
cmp
cmp
jl
in
movs
mov
inc
and
adc
add
cdq
mov
(bad)
repnz
and
fwait
xchg
pop
test
les
mov
pop
mov
dec
mov
lods
and
rol
jns
lods
cdq
fwait
mov
(bad)
dec
dec
pop
test
and
jl
xor
mov
les
das
mov
ficom
sub
sub
mul
add
aaa
out
outs
(bad)
jge
jecxz
pusha
not
fisub
lds
das
test
jne
das
shl
xchg
pop
into
ret
(bad)
imul
xor
inc
xor
jbe
mov
addr16
adc
(bad)
daa
test
and
cmp
lods
mov
ret
repz
aam
out
ds
out
es
mov
mov
sbb
sub
daa
inc
loopne
dec
cwde
sbb
outs
cmc
ret
push
mov
or
jno
pop
loope
stos
jg
mov
sub
mov
dec
sti
(bad)
add
xor
mov
stos
adc
or
inc
mov
dec
aam
iret
push
movs
xchg
popf
jbe
mov
push
cmp
stos
icebp
push
mov
sbb
rol
pop
mov
pop
retf
ja
push
call
jmp
out
fild
push
mov
sbb
std
push
lods
or
scas
js
xchg
bound
mov
cmp
mov
add
(bad)
fcomp
out
mov
cmp
mov
jle
xor
js
sbb
outs
mov
(bad)
push
mov
jae
movs
xchg
inc
fisttp
or
push
pushf
shl
fs
push
movs
push
add
adc
fadd
gs
mov
leave
cmps
pop
call
not
aam
dec
retf
dec
retf
pop
ret
(bad)
mov
or
mov
mov
jno
jno
push
loop
and
fwait
loopne
mov
sub
ja
push
js
xor
lods
fadd
dec
cmp
xor
jae
jne
adc
into
inc
or
mov
jbe
or
or
inc
(bad)
jns
neg
push
mov
fst
push
icebp
std
pop
cmc
xchg
lock
mov
clc
mov
pop
ss
sbb
out
mov
jae
stos
fild
add
daa
cli
sahf
adc
mov
pop
(bad)
mov
mov
or
in
mov
mov
popa
out
psubb
pop
pusha
in
xchg
aas
pop
ja
mov
retf
jno
mov
jl
ret
jb
xchg
cmp
jp
test
sub
mov
mov
lock
aad
dec
fdivr
mov
sahf
les
sub
pop
mov
jns
add
sbb
cmp
mov
jmp
jmp
rol
push
test
dec
pop
jecxz
cmp
mov
xor
lds
cmp
xlat
jl
and
inc
jbe
(bad)
mov
out
lea
xlat
sub
xchg
xchg
jnp
mov
jns
nop
jb
js
bound
sub
fldcw
adc
jae
mov
mov
call
ss
ret
jne
xchg
jns
mov
mov
xor
pop
imul
ins
pop
inc
test
mov
outs
retf
inc
fucom
cmps
mov
adc
push
or
and
sbb
jne
dec
or
test
(bad)
sub
nop
pop
test
inc
push
and
out
add
add
mov
xchg
retf
bound
mov
or
popf
sbb
les
mov
xchg
adc
jno
mov
jmp
or
fdiv
scas
or
cli
and
inc
xor
call
aaa
fisttp
inc
popf
or
stc
out
popa
sbb
lahf
lods
add
push
outs
adc
adc
int3
aam
test
inc
push
into
stos
cmps
jle
arpl
out
xchg
mov
mov
lods
add
dec
inc
or
and
pop
bound
cs
pop
ins
push
jl
fs
push
or
addr16
mov
xchg
xor
and
push
or
mov
push
cmp
or
jns
movs
fwait
and
cmp
mov
jb
xchg
add
popf
inc
pop
or
xor
adc
in
xchg
sub
iret
jecxz
cdq
sub
repz
sub
and
dec
loope
mov
mov
test
mov
ret
imul
add
mov
dec
lods
popa
add
clc
push
mov
int3
repnz
sbb
inc
ret
dec
mov
(bad)
out
inc
cwde
aad
rcr
cmp
stos
inc
inc
push
or
mov
(bad)
xor
lods
lock
(bad)
aaa
daa
loop
sub
and
push
mov
ja
pushf
popf
mov
in
inc
je
daa
call
jl
adc
pop
pmulhw
jbe
push
and
mov
jne
(bad)
int
sti
sub
jbe
or
dec
hlt
aam
aad
adc
jg
stos
add
fwait
add
or
repnz
jno
hlt
mov
bnd
jmp
jp
mov
sbb
imul
psubb
test
out
das
aas
int3
and
sbb
in
bound
sub
pusha
lods
retf
test
mov
cmp
or
pop
cmps
call
outs
and
or
and
sbb
sub
clc
push
pop
clc
in
pop
fnstsw
enter
sub
ret
int
pushf
sti
sti
jecxz
cmp
jp
retf
adc
cmp
(bad)
data16
fld
lahf
test
test
adc
sar
jmp
scas
out
daa
mov
xchg
mov
pushf
frstor
xor
fmul
pop
rol
ds
push
cmp
ds
and
call
push
xlat
dec
push
call
jl
jmp
test
sub
mov
cmp
mov
push
cli
gs
int
push
dec
push
sbb
cmp
dec
sbb
pop
jns
add
xchg
fadd
in
das
sar
js
sbb
sub
or
hlt
(bad)
aad
adc
mov
xchg
out
out
fsubr
je
mov
nop
outs
ficomp
push
popf
into
neg
sbb
loop
mov
aas
sbb
adc
push
push
mov
sub
inc
mov
jo
xor
outs
jmp
and
stos
bound
movs
push
dec
les
mov
cmps
pop
stos
fsub
inc
mov
sbb
xor
dec
popa
push
std
xor
or
inc
mov
sub
mov
mov
dec
sahf
dec
xchg
inc
xor
not
clc
leave
jg
in
mov
push
test
popf
shr
mov
xchg
pop
sub
jne
adc
xchg
xchg
mov
stos
bswap
jns
jmp
cmp
test
mov
push
leave
inc
fcom
mov
mov
nop
jge
cs
inc
xor
pop
ror
pusha
jl
nop
es
aam
mov
inc
mov
lods
jp
leave
in
and
push
and
cmp
push
(bad)
(bad)
jge
mov
xor
xor
cmp
(bad)
lods
aaa
dec
xchg
inc
lahf
sbb
sbb
pusha
mov
dec
out
mov
dec
jmp
inc
js
imul
push
mov
push
or
sub
and
mov
mov
fadd
inc
or
ins
test
push
retf
aas
pop
cmp
push
icebp
dec
jmp
xlat
mov
xchg
or
cli
les
fistp
addr16
jnp
nop
mov
lods
xor
ja
pushf
xor
cmp
adc
xor
sbb
lock
inc
mov
jo
add
sbb
call
pop
and
lahf
(bad)
ffree
lahf
pop
movs
pmuludq
ss
push
xchg
sbb
ss
jl
mov
ins
in
stc
mov
push
or
imul
movs
cld
mov
xchg
scas
movs
jecxz
out
call
(bad)
jmp
jmp
(bad)
mov
mov
mov
leave
push
mov
adc
push
out
int3
push
or
adc
pop
(bad)
outs
sub
inc
popf
adc
enter
xor
or
femms
adc
mov
mov
arpl
inc
fiadd
ret
stc
sub
in
scas
fcom
xor
jno
pop
cli
dec
sub
push
cdq
dec
test
das
(bad)
add
mov
loop
fdivr
es
inc
pop
jnp
mov
dec
ret
add
cld
mov
shl
in
mov
aam
stos
data16
hlt
push
pusha
into
imul
cmp
xor
loope
pop
scas
ss
aad
pop
dec
adc
sub
push
and
mov
mov
scas
int3
sti
mov
push
or
in
sub
mov
xchg
sub
dec
stc
imul
test
sub
pop
mov
push
repz
rol
or
adc
int
out
mov
xor
xchg
rol
pop
mov
mov
jmp
push
push
sub
mov
cmp
cdq
inc
adc
in
into
adc
jae
push
sub
imul
pop
cmp
adc
lds
mov
(bad)
(bad)
cdq
sub
pop
sbb
out
test
inc
int3
scas
clc
std
jecxz
outs
adc
jp
in
jb
sub
sub
in
mov
in
pop
cmp
push
sub
sub
add
sbb
cwde
lods
cld
repz
shr
cwde
push
stc
(bad)
sub
aam
add
leave
mov
retf
xor
hlt
push
addr16
cs
icebp
jno
add
pop
aad
int
test
push
push
stos
dec
pushf
mov
leave
xor
cmc
xchg
retf
fidivr
fcom
ret
cdq
fsubrp
mov
int
mov
inc
fiadd
enter
push
and
repnz
cmc
js
sub
sub
or
inc
ror
out
pop
ret
pusha
lsl
pop
clc
shl
mov
sbb
mov
test
dec
sti
test
imul
and
fcomip
rcl
iret
pusha
fs
mov
or
stc
xchg
xor
jae
pop
fcomp
mov
add
cmps
pop
mov
retf
xor
jmp
cmp
sub
sub
pop
aad
int3
shl
sar
jmp
out
test
enter
sub
arpl
outs
or
dec
inc
std
push
jae
inc
jg
ret
add
jecxz
movs
push
shl
push
add
ins
add
mov
aad
mov
sti
add
inc
push
es
popa
mov
pop
inc
xchg
movs
mov
and
and
movs
or
mov
daa
mov
call
mov
fld
jl
ds
lods
(bad)
dec
dec
enter
es
dec
fisttp
and
addr16
ror
mov
or
mov
push
add
inc
jo
shr
fbld
sahf
mov
xchg
push
clc
daa
ins
xchg
lahf
add
or
mov
mov
cmps
ja
leave
add
jmp
(bad)
hlt
fwait
sbb
aas
mov
popf
mov
(bad)
ss
sti
push
mov
out
retf
sub
enter
push
pop
pop
neg
adc
das
cs
push
mov
or
fist
xlat
add
data16
mov
jbe
mov
stos
(bad)
mov
sti
addr16
and
in
int
int
imul
popa
inc
xchg
std
sub
cmp
xchg
ss
push
sti
xor
mov
out
mov
sbb
loop
jg
mov
inc
sub
(bad)
mov
xor
out
sbb
sub
xchg
popa
rcr
or
or
loope
mov
fnsave
imul
rcl
push
sbb
cdq
push
in
jno
rol
or
jbe
mov
xchg
xchg
lock
dec
fdivr
xor
movaps
cmp
(bad)
add
mov
je
movs
popf
test
arpl
push
mov
outs
and
mov
dec
mov
dec
and
shl
mov
fs
xchg
fimul
mov
push
fidivr
bound
popf
(bad)
fldcw
or
cmp
call
mov
add
adc
inc
xchg
test
jge
and
mov
add
repz
xchg
fwait
js
pop
or
adc
adc
or
push
stos
push
cmp
mov
jae
movs
fsubr
jbe
std
inc
mov
adc
xchg
cmp
sbb
sub
sbb
lods
pushf
inc
test
xchg
(bad)
stc
pop
xchg
ds
and
cld
arpl
push
aaa
xchg
shl
icebp
ja
int
fisubr
(bad)
cmp
ficomp
inc
stos
xor
shl
inc
xor
push
xor
sub
jmp
mov
int3
sub
fwait
sub
xchg
add
test
pop
inc
shl
stos
inc
and
inc
push
mov
cmp
ror
cmp
leave
(bad)
out
jo
mov
pop
pop
fsubrp
je
stos
push
mov
jb
sub
cmp
mov
jo
(bad)
jmp
lea
mov
sub
in
popa
test
sbb
enter
xchg
jae
mov
xchg
cwde
mov
mov
inc
cdq
push
sub
loope
das
stos
dec
sbb
jmp
jns
mov
clc
mov
jmp
cmps
(bad)
retf
es
jp
jl
repnz
xchg
std
shl
sbb
repz
pop
sar
sbb
dec
bound
xor
aad
test
xor
adc
xchg
scas
and
jnp
fild
xchg
fsubr
mov
ret
aas
cs
mov
push
xor
cmp
sbb
pop
scas
lods
xlat
lods
jns
(bad)
xchg
icebp
or
loope
(bad)
push
(bad)
out
movs
cli
cmc
les
ret
mov
scas
xchg
jns
mov
or
or
mov
push
pop
pushf
push
mov
mov
nop
in
jne
mov
nop
pop
pop
mov
js
jo
add
nop
sbb
(bad)
dec
cmc
aad
and
int
jmp
mov
jnp
or
cdq
adc
fldpi
stc
loopne
in
or
rol
xlat
xor
inc
xor
(bad)
xchg
movs
sbb
fsubr
mov
push
pop
pop
fdiv
mov
dec
add
pop
retf
pusha
ins
lea
inc
lock
(bad)
shl
scas
xor
mov
outs
inc
(bad)
mov
enter
mov
jmp
pop
sbb
add
dec
pop
push
xchg
rcl
ins
xor
and
sub
pop
sub
js
mov
mov
int3
inc
xchg
out
fisttp
lods
std
jo
mov
fisttp
mov
movs
mov
dec
cmps
rcl
fld
div
adc
sahf
movs
dec
cli
in
or
in
xchg
or
or
dec
fdiv
daa
sub
and
pop
jmp
call
mov
dec
(bad)
jge
ds
loop
addr16
mov
dec
nop
daa
popf
jmp
pop
sbb
stos
sahf
mov
ds
or
bound
sbb
sbb
add
jbe
mov
xor
cmp
and
jae
push
jae
fild
adc
and
inc
xor
lds
sub
xchg
sahf
stos
dec
push
stc
cld
loop
fsubr
sub
mov
add
idiv
jg
pop
movs
adc
mov
push
push
adc
pop
cmp
imul
(bad)
mov
arpl
or
daa
sbb
jmp
in
mov
jmp
sbb
clc
dec
int3
repz
push
mov
and
add
mov
mov
jbe
cli
cmp
pshufw
fs
sbb
mov
jmp
in
outs
or
imul
out
test
movs
cmp
repnz
xchg
enter
jb
mov
cmps
adc
out
adc
cs
call
arpl
leave
fcom
xchg
add
aad
mov
inc
neg
mov
pop
mov
dec
cdq
jle
jecxz
ror
or
(bad)
fistp
push
imul
or
jo
adc
mov
mov
test
mov
and
out
push
jmp
movs
in
add
retf
mov
movs
leave
xchg
ret
sar
ret
lea
pop
jne
inc
cdq
ds
fs
outs
(bad)
pop
repz
test
stos
inc
sahf
ret
pop
push
(bad)
jmp
xchg
cli
push
mov
mov
push
xchg
push
stos
xor
pushf
fistp
retf
ss
push
aaa
fistp
(bad)
lock
test
pusha
xchg
jg
dec
bound
push
mov
ins
push
xor
call
jle
cmp
sahf
pop
out
sets
(bad)
int3
push
xor
dec
or
xor
adc
sti
mov
das
or
neg
and
clc
hlt
pop
dec
aaa
adc
arpl
mov
add
daa
xchg
lds
sbb
loope
and
inc
mov
xor
imul
or
js
inc
inc
ins
sbb
loop
and
cmp
and
setnp
mov
cmps
adc
mov
lds
shl
dec
rcr
add
inc
xlat
out
xchg
rcl
xor
jb
test
ins
test
pop
push
test
aad
mov
in
cmp
test
mov
jg
retf
dec
xor
inc
mov
pusha
fcmovu
lea
xchg
ins
push
sub
mov
ror
das
mov
mov
out
(bad)
(bad)
xor
push
push
add
into
into
repnz
test
inc
jmp
or
dec
or
push
inc
or
push
call
ins
imul
or
pop
lea
(bad)
cmp
mov
dec
mov
rcl
mov
jbe
xchg
in
mov
pusha
setl
cmps
imul
jl
dec
mov
pop
mov
xchg
jp
loope
jmp
stc
inc
jae
push
and
cmp
pop
outs
pop
test
and
push
pop
sub
xor
fisub
fnsave
push
stos
mov
int
idiv
add
dec
shl
std
cmp
adc
jno
test
mov
pop
int3
xchg
stos
cdq
mov
test
js
rcl
sti
cmp
dec
test
aad
cld
adc
sti
inc
movs
(bad)
mov
push
sbb
in
iret
retf
ror
mov
xor
ds
push
adc
rol
rcl
fdiv
push
jecxz
adc
mov
pop
call
add
aad
rcl
pusha
pusha
fcomp
xor
outs
fcom
(bad)
sbb
aam
pop
das
scas
xchg
xchg
mov
and
push
and
lock
xchg
xchg
inc
in
int
push
dec
push
push
(bad)
jb
adc
pop
xchg
push
jns
adc
je
fnstcw
xchg
into
inc
mov
jne
add
or
outs
or
out
xchg
aas
cmp
sahf
les
gs
imul
int3
mov
test
sbb
enter
sbb
sub
hlt
fisttp
sbb
(bad)
(bad)
jg
and
fnstsw
cmc
es
mov
pop
arpl
jae
loopne
adc
rcl
ja
mov
jne
cli
pop
jp
and
imul
sahf
stos
push
jg
jns
imul
sub
pop
dec
retf
and
mov
ja
(bad)
fbstp
inc
push
pop
(bad)
pop
pop
cld
fmul
xchg
retf
shl
ret
lea
(bad)
retf
sti
rol
fldenv
push
adc
sub
add
sub
xor
pop
mov
mov
push
(bad)
outs
in
mov
sub
jecxz
cmp
mov
mov
cmc
fs
into
sbb
mov
cmp
add
out
dec
mov
inc
mov
loop
shl
shr
or
cmp
lahf
loope
xchg
fist
fs
aas
jg
mov
adc
std
push
imul
adc
scas
lods
mov
adc
test
mov
(bad)
push
fwait
pop
nop
mov
mov
and
fistp
leave
and
jmp
pusha
fdivp
icebp
lds
adc
push
adc
ja
or
(bad)
fs
sti
ins
push
cld
std
out
shl
pop
clc
int3
jg
mov
test
sbb
pop
xchg
add
sti
jg
pop
fist
neg
pop
push
test
lods
cmps
push
(bad)
push
imul
jne
cmp
imul
(bad)
push
mov
xchg
int3
jo
pusha
pop
loop
jo
cmc
sbb
(bad)
rol
nop
test
pop
xor
mov
ss
mov
cmp
icebp
ret
sbb
adc
mov
sub
mov
in
mov
push
pop
test
mov
adc
push
stos
jbe
pop
dec
jns
mov
aam
push
lea
daa
aam
lahf
bound
adc
fcomp
sbb
neg
pop
bound
inc
arpl
jecxz
(bad)
cmp
outs
mov
in
aaa
pop
sti
pop
push
repz
push
jb
jne
xor
xchg
out
loopne
es
ret
xchg
lock
xor
ficom
cmps
test
mov
pop
mov
lock
std
xor
inc
cmp
push
cmp
sbb
pop
shl
xor
xor
push
or
outs
add
scas
(bad)
pushf
enter
jnp
push
fiadd
in
xchg
je
sbb
repnz
into
dec
(bad)
mov
outs
pop
or
stos
mov
getsec
sub
jbe
xchg
jle
fwait
xchg
js
pop
inc
xchg
scas
dec
hlt
cmps
cmps
inc
sub
jmp
inc
xchg
(bad)
outs
out
out
xchg
xchg
mov
cmps
pop
popa
dec
out
jb
jmp
sbb
adc
cli
cmp
call
idiv
dec
icebp
jno
stc
in
mov
mov
shr
ds
dec
sti
aam
jbe
adc
sub
mov
rcl
adc
inc
lds
test
xchg
cmps
dec
sub
lock
mov
std
pop
scas
mov
push
ret
bound
xchg
fst
xchg
std
ret
fcomi
pop
int
mov
sub
std
lea
js
in
in
jg
or
add
xchg
xchg
out
outs
call
and
or
(bad)
pop
sub
jae
xor
lods
out
push
xlat
pushf
sub
sbb
(bad)
cld
pop
mov
outs
xor
test
push
cmp
adc
mov
inc
jecxz
adc
jo
push
cmc
xchg
(bad)
(bad)
mov
(bad)
dec
adc
pop
push
push
inc
leave
adc
mov
imul
fiadd
adc
adc
sub
clc
or
push
movs
stc
fst
jmp
scas
mov
sbb
je
adc
cwde
jb
shr
mov
lea
dec
push
pmulhuw
pop
cmc
and
jne
fsub
shl
inc
dec
push
mov
sbb
mov
cmp
fcom
or
stos
ds
and
in
outs
sbb
sub
add
and
dec
adc
xchg
popf
sbb
shr
aad
mov
mov
ins
mov
xor
jo
cmp
push
int
(bad)
jns
adc
(bad)
in
(bad)
mov
(bad)
ret
mov
add
test
aas
(bad)
push
pop
add
test
cmps
mov
jo
fsubr
outs
add
add
repnz
cwde
pop
ficomp
mov
in
adc
dec
jge
ds
loop
mov
imul
push
mov
cmp
sbb
addr16
add
pop
stc
adc
jmp
dec
fwait
test
pop
in
out
fld
loope
pusha
jmp
(bad)
add
aaa
adc
out
mov
(bad)
lds
and
in
jmp
repnz
sbb
fst
push
test
inc
dec
pop
dec
xchg
clc
jbe
mov
test
mov
lods
outs
adc
fwait
popa
pop
and
mov
xchg
ins
mov
in
int3
dec
jae
lahf
lahf
mov
inc
test
push
stos
lds
or
bound
adc
iret
adc
xor
nop
or
ja
mov
add
in
scas
div
fsubr
fbld
mov
sbb
rdseed
test
mov
adc
inc
mov
ins
leave
nop
xor
add
mov
or
in
mov
(bad)
sub
mov
out
xchg
jns
daa
das
mov
shr
dec
ins
xor
mov
cmc
pop
xchg
and
cmps
mov
pop
adc
and
jb
mov
pop
pop
into
inc
and
cwde
mov
push
sbb
iret
dec
xchg
popf
xchg
call
stos
popf
aad
ficom
push
jne
(bad)
pop
cmps
xor
mov
shl
(bad)
rcl
add
lock
inc
rcl
pushf
push
xchg
seta
mov
push
fisubr
add
inc
jle
int3
sti
inc
and
fdivr
push
adc
(bad)
hlt
push
imul
jmp
adc
and
dec
dec
dec
inc
and
fdivr
add
push
leave
jae
inc
and
frstor
sbb
push
popa
fidivr
mov
xchg
xor
movs
loop
shr
cmp
call
sbb
dec
sbb
in
mov
xchg
cmc
jl
push
mov
leave
mov
les
lds
outs
sub
jbe
mov
jae
mov
pop
lods
xor
xchg
inc
adc
cmp
jnp
inc
mov
call
mov
cpuid
xchg
xchg
mov
test
and
sti
push
test
lock
ins
lahf
sti
imul
test
xchg
and
fwait
rcl
pop
mov
ds
leave
lods
mov
loope
sub
leave
rcr
jb
mov
das
arpl
lods
sub
outs
aaa
or
inc
cli
or
rol
jg
mov
jne
or
jne
cmps
mov
sub
xor
ror
repnz
iret
fadd
sub
add
inc
gs
push
push
(bad)
lods
icebp
cwde
cld
pop
pop
mov
arpl
adc
lock
sub
mov
rol
dec
xchg
mov
xchg
in
ret
mov
pop
mov
repnz
inc
fs
out
ins
mov
mov
ja
iret
dec
outs
sbb
dec
cwde
(bad)
(bad)
mov
call
outs
shl
add
ins
dec
jae
scas
bound
out
add
or
cmc
inc
fstp
cmp
imul
popa
push
fdivp
push
push
jne
mov
stos
pop
aaa
into
and
aad
dec
cli
fucomip
enter
adc
add
loopne
and
jle
repnz
test
jns
jle
int3
and
imul
int
sbb
and
les
xor
cdq
jmp
jge
sbb
jbe
ror
and
jg
inc
cwde
ret
ins
rol
adc
jp
sbb
xor
sbb
xor
sbb
les
push
add
sti
shl
clc
(bad)
dec
push
pop
mov
cmp
in
daa
sbb
je
(bad)
hlt
or
xchg
scas
push
pop
cmp
push
xchg
sub
or
add
mov
dec
and
aam
xchg
shl
mov
hlt
mov
push
jbe
icebp
push
jae
push
shl
aad
ret
sub
xor
shl
mov
in
sbb
leave
pushf
add
cmps
rcl
push
adc
test
xchg
sbb
cmp
jecxz
cs
pop
fst
mov
jne
test
aaa
jmp
and
cmp
out
loopne
and
into
pop
loope
pop
adc
mov
sbb
out
retf
imul
push
ds
dec
sub
sbb
mov
test
and
aam
xchg
xchg
dec
sub
fistp
xchg
fistp
and
gs
shl
ficomp
cwde
sar
mov
aaa
scas
ins
les
das
push
cmp
loope
in
jecxz
hlt
dec
enter
shl
int
nop
xor
xchg
mov
xchg
cmp
inc
mov
pop
jbe
bound
sbb
(bad)
xor
adc
inc
xchg
inc
xor
xchg
jb
cmps
mov
push
mov
test
mov
in
or
xchg
in
jl
test
fstp
mov
stos
movs
pop
pop
ds
cmc
mov
imul
retf
push
pop
sbb
les
into
or
pop
cmps
ss
push
xor
and
or
jns
in
sbb
inc
adc
sub
dec
ja
mov
(bad)
pop
xchg
aad
in
fdiv
and
jg
or
movs
adc
xor
mov
clc
test
jo
into
pop
in
sbb
mov
cdq
add
xchg
mov
mov
mov
push
in
sahf
(bad)
push
imul
repnz
loop
rcl
lahf
xor
xchg
std
repz
add
push
pop
or
pusha
cdq
dec
test
pop
jae
pop
pop
out
inc
hlt
fsub
fld
pop
sbb
adc
pop
push
mov
sbb
icebp
jle
sub
cmp
sbb
cmc
sbb
pop
pop
xlat
es
ins
pop
pop
xchg
call
or
retf
clc
mov
cwde
xor
dec
lods
pusha
dec
dec
cmps
add
adc
(bad)
cmovg
jecxz
jne
cmp
jae
in
jle
pushf
inc
jg
dec
shl
and
xor
sar
pop
outs
mov
xor
loope
adc
ja
fs
or
lods
pop
(bad)
cmps
mov
gs
push
call
adc
sar
jmp
push
xchg
sbb
pop
rol
dec
jmp
mov
test
lods
mov
cmc
(bad)
pop
neg
bound
jp
fwait
xchg
sbb
adc
add
push
mov
jae
(bad)
enter
rcl
movs
leave
in
stos
gs
ja
cmps
sbb
pop
mov
dec
inc
fld
jp
(bad)
fild
and
cwde
mov
add
push
dec
jb
jp
xor
and
jbe
fsubr
jae
cmps
sub
pusha
pop
adc
and
pop
adc
inc
push
addr16
or
xchg
sbb
and
outs
or
sar
jg
push
fsubr
and
xchg
sub
sub
mov
scas
int
cmp
ds
push
jmp
repz
leave
mov
int3
cmp
daa
stos
scas
push
dec
pusha
dec
sbb
ret
xor
ror
stos
xor
dec
leave
fisub
arpl
adc
stos
sub
xor
cmps
dec
push
jns
fs
mov
mov
mov
fwait
rcr
jle
inc
inc
cwde
pop
cmc
ret
outs
pop
hlt
jbe
call
cmps
adc
xchg
sbb
cmc
mov
or
pop
sbb
sbb
add
jge
jbe
cmp
daa
mov
or
push
mov
movs
std
sbb
mov
inc
mov
push
(bad)
(bad)
out
adc
out
data16
aas
ja
xor
and
sbb
mov
ja
imul
lods
lds
mov
xor
imul
push
adc
push
jmp
inc
call
jecxz
and
popf
fild
ss
imul
dec
sahf
and
arpl
push
push
cli
sti
xor
push
inc
repz
(bad)
mov
inc
jg
ins
dec
inc
pushf
call
jecxz
sbb
mov
xor
cli
mov
jecxz
xor
into
jg
fisubr
xor
out
pushf
pop
(bad)
xor
(bad)
dec
dec
aam
in
std
js
xchg
xchg
mov
call
dec
cdq
mov
movs
sbb
(bad)
mov
fst
cmp
popa
fdiv
aam
xlat
inc
sahf
fiadd
shl
(bad)
cmps
xor
clc
mov
les
in
das
call
xchg
cmc
mov
int
jl
inc
mov
dec
or
sbb
mov
xchg
adc
ret
cmp
ficom
inc
xor
or
in
mov
xchg
dec
in
repnz
push
add
stos
or
mov
lahf
out
shl
bound
and
sub
mov
retf
ret
mov
imul
sub
mov
push
pmulhuw
fnsave
fwait
cld
mov
(bad)
fyl2xp1
add
pop
(bad)
sub
(bad)
push
adc
fs
test
add
or
in
xor
or
inc
loop
fst
cli
test
jns
and
stos
and
sbb
sti
rcl
cmps
jmp
or
mov
mov
sar
bound
out
ror
adc
mov
out
adc
fnsave
push
push
sub
out
xchg
sub
xchg
mov
jne
cmps
jo
push
sbb
cmp
int3
sub
adc
test
stos
retf
rcr
mov
cmc
out
daa
cmp
push
jne
hlt
idiv
sub
or
mov
mov
icebp
sbb
add
xor
das
xchg
dec
dec
aad
std
mov
push
cmp
leave
pop
fwait
mov
adc
sub
(bad)
or
rol
and
mov
xchg
scas
outs
je
sub
lea
sub
jle
repnz
dec
push
xchg
pop
ret
(bad)
xchg
hlt
ja
cli
shl
push
or
hlt
inc
test
shr
repz
fwait
test
outs
sbb
push
cmp
aam
fst
fimul
stos
inc
xchg
fidivr
mov
pop
int3
jnp
mov
imul
adc
fprem
or
(bad)
and
push
pushf
ds
not
and
inc
xchg
les
push
sub
and
lods
sub
movs
jb
xchg
fwait
dec
inc
and
cmc
jl
or
mov
adc
pusha
xor
(bad)
into
div
cwde
mov
stc
repnz
push
loop
add
dec
mov
and
mov
add
mov
sar
xchg
loopne
jmp
jmp
xchg
clc
push
push
mov
loop
fs
adc
dec
xor
xor
int
loop
cdq
mov
repnz
xchg
inc
int3
es
and
push
and
push
or
(bad)
clc
mov
mov
mov
sbb
in
pop
pop
cld
in
int3
adc
int
retf
shl
mov
mov
or
loopne
call
jmp
push
pop
mov
fs
pop
mov
ja
mov
mov
out
sti
pop
nop
mov
jae
mov
mov
pop
adc
daa
popa
mov
mov
xchg
xchg
dec
aam
aaa
fsub
rol
dec
inc
out
arpl
mov
mov
call
jbe
pop
ror
test
retf
test
stc
jb
(bad)
push
jo
mov
dec
rcr
sub
mov
mov
ficom
adc
xchg
dec
cmp
das
xor
mov
sub
mov
icebp
and
pop
fld
inc
cmp
or
(bad)
and
lods
cs
std
xchg
xchg
shl
cmp
retf
(bad)
hlt
add
(bad)
cli
cli
sti
jmp
ror
sub
(bad)
cmp
test
test
jg
dec
repnz
xor
adc
addr16
bound
movs
loope
mov
int3
cmp
out
xchg
jo
dec
jnp
lea
loop
and
push
pop
imul
popa
ret
xchg
pushf
sti
lahf
jmp
daa
adc
outs
lods
adc
das
sbb
sbb
(bad)
mov
leave
int
out
jp
jbe
or
mov
(bad)
xchg
jns
pop
(bad)
cmps
xchg
repz
adc
fldcw
fnstenv
push
popa
frstor
jmp
rol
dec
mov
cmp
dec
aad
mov
adc
dec
jl
dec
(bad)
sbb
ins
arpl
jmp
pop
or
and
rol
dec
xchg
loopne
div
jbe
mov
sar
cmp
sub
in
xchg
ds
jmp
retf
cmps
fist
inc
inc
(bad)
mov
cmp
imul
mov
sub
sti
lahf
cmps
push
mov
aam
cmp
sub
sub
movaps
cmp
jo
sbb
pusha
pop
dec
push
fist
xor
movs
fcomp
push
outs
cmp
ficom
jne
fnstsw
call
cmc
sub
dec
imul
inc
pop
daa
xor
pusha
in
dec
into
cmpxchg
cmp
das
repnz
sahf
scas
dec
xchg
adc
push
and
lock
xchg
push
int
dec
push
fadd
sub
ds
xor
lock
jne
scas
sbb
sar
push
jl
int3
adc
dec
cmp
push
adc
mov
pop
push
sub
clc
fcom
mov
(bad)
rcr
clc
iret
jbe
pop
loopne
add
retf
neg
pop
xchg
addr16
add
push
ins
out
jmp
stos
ins
pop
pop
adc
int
sub
popf
out
mov
scas
imul
jl
fs
sbb
out
xchg
push
jo
call
and
in
xchg
push
mov
xlat
jae
fsub
add
mov
pop
add
and
push
clc
cmps
sbb
in
sahf
arpl
mov
push
cmp
mov
inc
je
add
(bad)
jg
adc
pop
xchg
mov
sub
dec
inc
icebp
ja
idiv
dec
jl
loope
jno
mov
sbb
dec
shl
mov
xchg
mov
pop
sar
jmp
int
cs
and
arpl
test
stos
in
test
ds
jle
iret
dec
xchg
cmc
data16
jno
dec
sub
mov
int
pop
add
pop
call
jno
fwait
add
sbb
push
sub
pop
add
stos
sar
(bad)
in
pop
mov
out
or
mov
mov
cmc
cs
das
and
imul
repz
(bad)
not
and
or
out
test
jmp
pop
imul
imul
ret
fdivr
mov
in
ror
cmp
repnz
pusha
scas
mov
push
pop
pop
or
xchg
mov
pop
push
aad
add
push
sbb
mov
jne
push
loopne
mov
mul
fs
daa
adc
fchs
xor
mov
ret
mov
dec
add
inc
inc
cmp
lds
mov
lahf
jecxz
mov
adc
ja
xchg
xchg
stos
inc
cli
lahf
loop
div
xor
fcmovnb
or
retf
aam
mov
sbb
push
sbb
pop
sub
pushf
test
push
mov
push
jmp
xor
jp
ror
mov
push
adc
fs
jmp
aaa
sub
cmp
lds
sub
and
mov
in
pop
inc
cmps
and
movs
js
push
add
xchg
inc
(bad)
fld
xor
sti
daa
dec
adc
push
adc
inc
push
pop
pop
jbe
or
mov
arpl
sub
and
popa
ret
in
push
stc
dec
or
mov
retf
ss
cmp
iret
mov
(bad)
out
stc
mov
test
sbb
sub
jl
sbb
mov
retf
sbb
dec
cmp
fadd
jle
mov
fld
adc
outs
pop
fadd
push
push
dec
dec
mov
cld
test
std
pop
dec
loope
sbb
cmps
fistp
mov
and
leave
std
adc
cmp
daa
lds
dec
cmp
loopne
sub
lds
dec
rcr
cmc
xchg
xor
je
sbb
jmp
xchg
shr
sbb
sbb
cmp
les
pop
(bad)
push
les
out
sar
cmp
xchg
mov
arpl
hlt
adc
dec
jl
sub
stc
pop
test
shl
jae
loopne
popa
loop
xor
inc
xor
or
scas
mov
dec
(bad)
out
retf
sub
gs
scas
lock
mov
cwde
jmp
fisttp
dec
adc
popa
push
add
xor
arpl
and
rcr
outs
(bad)
and
std
scas
imul
ins
cmp
dec
pop
or
dec
or
add
inc
and
(bad)
pop
xor
xlat
mov
ss
pushf
jns
call
dec
aam
push
lods
rol
fs
enter
cmps
loopne
push
or
dec
add
shl
ds
aad
loope
je
or
jecxz
push
mov
or
gs
adc
pop
out
xchg
xor
and
in
jg
out
xchg
lods
aas
mov
daa
sbb
fwait
sbb
loop
jo
mov
xchg
and
or
enter
shr
scas
mov
shr
fs
jecxz
ins
dec
dec
lods
fucom
scas
xchg
stos
stos
stc
jmp
push
nop
push
or
mov
and
xor
xchg
cmps
leave
(bad)
cmps
xchg
xchg
lods
in
call
loopne
jno
std
movs
xchg
das
sti
jl
iret
out
xchg
cld
stc
add
fnstenv
(bad)
fst
call
sub
push
daa
dec
sti
push
jae
jmp
aad
xor
pusha
pop
dec
dec
sub
jl
and
mov
mov
mov
lods
dec
mov
and
int
jg
or
xchg
cld
xor
or
je
xchg
inc
mov
push
inc
cdq
sbb
cmps
call
mov
imul
lods
inc
push
push
mov
ins
lahf
cmp
and
adc
sub
cmc
sbb
and
cdq
sub
add
cmp
test
inc
popa
jns
mov
push
mov
add
dec
cmps
dec
imul
sub
(bad)
cwde
mov
cwde
gs
clc
loopne
add
mov
jns
(bad)
cwde
fbstp
(bad)
pop
inc
dec
push
dec
fcom
add
(bad)
add
or
(bad)
mov
cmp
sahf
out
(bad)
cmc
pop
xchg
fwait
jg
or
pop
shr
push
xor
mov
imul
retf
mov
push
iret
jp
das
pop
jg
imul
sub
xor
das
xchg
cld
pop
cmp
cld
xchg
cmp
push
xchg
mov
push
and
add
in
pandn
mov
jp
push
or
shl
and
(bad)
clc
adc
in
ds
fmul
pushf
aas
or
jecxz
rol
out
cld
xor
mov
sbb
dec
mov
pushf
sub
and
inc
jb
jmp
rol
adc
push
call
push
push
sub
sub
call
xchg
pop
jnp
mov
xor
push
movs
mov
push
lock
out
fadd
fld
retf
inc
cmp
and
inc
ret
push
sahf
pop
mov
mov
inc
mov
pop
jne
(bad)
in
push
lods
adc
xor
stc
add
sbb
jge
mov
aad
pushf
push
aaa
fwait
jp
test
dec
cs
fisub
inc
(bad)
hlt
test
or
dec
dec
stc
push
and
sub
add
adc
dec
xor
jne
add
lea
dec
fnstcw
mov
or
mov
stos
shl
adc
shr
xor
fldenv
gs
popf
pop
bnd
inc
imul
pop
sub
daa
jo
mov
and
(bad)
scas
add
rol
imul
ret
lea
shr
es
inc
test
(bad)
xlat
clc
mov
and
retf
mov
(bad)
mov
or
fwait
dec
adc
sbb
fsub
add
mov
push
psllw
and
xlat
arpl
das
mov
(bad)
adc
sbb
test
jg
xchg
hlt
in
dec
mov
jecxz
ins
ds
sti
xchg
in
xchg
dec
or
pop
mov
loopne
leave
xlat
cmp
shl
dec
fstp
js
sbb
pusha
ja
inc
js
mov
aad
xor
lock
into
shl
les
cmp
xor
pop
jae
in
stos
retf
fisttp
or
nop
jge
adc
xor
cwde
pop
xchg
xor
(bad)
sbb
inc
and
push
data16
sub
inc
add
daa
retf
dec
cmp
xor
ror
mov
lods
cmc
cmps
test
rol
lock
rol
mov
adc
faddp
scas
es
cmps
or
cmp
cmps
and
inc
pop
jb
in
std
jp
sbb
adc
int
jne
mov
div
dec
scas
gs
fcom
push
rcl
fmul
jecxz
dec
or
lock
jo
jne
or
jg
lea
mov
add
addr16
jl
mov
add
sahf
fstp
xchg
(bad)
xor
es
dec
leave
pop
sub
scas
xchg
ds
imul
lds
xchg
mov
repz
pop
int3
mov
out
dec
(bad)
push
in
mov
(bad)
(bad)
xor
pop
test
mov
cmp
js
dec
or
push
mov
pop
pop
test
test
in
xchg
sbb
xchg
inc
jmp
pop
cmc
rcl
mov
or
jg
lock
pop
hlt
lods
movd
out
sub
jb
add
pop
push
or
mov
sbb
jno
sub
arpl
xor
fild
sbb
test
xor
sbb
xchg
fmul
into
xchg
sbb
jecxz
mov
xchg
ins
lods
jns
(bad)
sub
in
mov
(bad)
push
jo
jno
shl
fmul
(bad)
(bad)
push
mov
inc
mov
retf
jne
jno
lds
or
mov
cs
mov
xchg
fld
fdivp
add
dec
out
icebp
inc
loop
in
sub
icebp
pop
ror
xchg
ret
sahf
push
ja
push
cdq
jo
or
inc
mov
adc
mov
push
loop
out
xchg
pusha
addr16
pop
loopne
(bad)
jecxz
and
push
idiv
call
pop
dec
icebp
rcl
cmc
push
cmp
lds
ret
cdq
test
sbb
sbb
std
xchg
jns
dec
ss
sbb
out
jmp
push
call
sbb
paddusb
cmp
fld
jg
mov
ficom
push
mov
lahf
call
(bad)
or
loop
xor
aad
pop
dec
dec
jae
xchg
sbb
mov
jl
jp
dec
xchg
iret
lds
je
dec
mov
push
leave
xchg
sbb
aam
add
retf
xor
into
hlt
jne
cmp
xor
lods
movs
xchg
imul
call
pop
daa
inc
ins
add
in
out
jl
test
mov
out
loope
mov
sub
push
inc
repnz
mov
jbe
repnz
fcmovb
ja
test
aam
and
xchg
scas
jmp
xor
cmp
ret
shl
add
(bad)
adc
test
dec
fldln2
das
repz
adc
mov
push
pop
imul
scas
cmp
lock
test
out
(bad)
neg
ins
icebp
or
cli
sub
sti
dec
xchg
out
adc
push
pop
(bad)
cdq
aas
mov
lds
test
inc
ret
mov
mov
mov
dec
fwait
cmps
push
loop
mov
xor
pop
lods
mov
jns
cmp
xor
mov
icebp
pop
ins
scas
mov
ss
push
gs
xor
xor
das
gs
outs
push
outs
ins
mov
imul
adc
dec
inc
lock
aas
test
xor
(bad)
arpl
fwait
xchg
sbb
adc
ret
(bad)
mov
(bad)
or
cmp
bound
jo
sbb
inc
jecxz
test
out
es
adc
into
or
adc
inc
out
and
daa
scas
push
std
cwde
or
iret
stos
fwait
loopne
push
je
dec
cmp
push
hlt
pusha
xchg
jle
pop
mov
push
into
in
dec
ds
div
arpl
stc
mul
pop
icebp
and
dec
pop
out
inc
mov
or
sbb
int3
stos
je
cmp
xor
daa
jmp
neg
ret
inc
dec
stc
arpl
outs
pop
(bad)
imul
mov
ficom
fsub
push
push
add
mov
push
mov
xchg
jl
xchg
jne
dec
jl
mov
popa
sub
repz
inc
shr
lea
scas
push
mov
hlt
movhps
cwde
call
fisub
cwde
dec
call
int
jb
cmps
push
add
jno
inc
add
adc
add
out
cmc
hlt
mov
inc
adc
nop
cmp
(bad)
int
pop
jmp
jge
cmp
mov
rcr
or
lock
sbb
fisub
xchg
jl
(bad)
inc
in
sub
mov
ror
in
jmp
adc
sar
inc
sbb
jo
xor
stc
fild
pop
imul
push
sub
add
dec
movs
into
retf
pop
je
push
pop
jle
call
and
sub
mov
pop
ja
jb
outs
ds
jmp
mov
lahf
addr16
xchg
in
ja
sub
jb
iret
ins
or
lea
arpl
mov
xchg
jmp
push
mov
(bad)
sub
scas
adc
xor
lds
cmps
adc
sub
jge
push
pop
rep
jle
mov
les
mov
or
fidiv
sar
idiv
test
aaa
aaa
loop
mov
xchg
pop
repz
dec
popa
jmp
ds
cmp
xchg
sbb
movs
push
cli
sti
xchg
popf
rcl
xchg
xor
or
mov
call
adc
jg
test
mov
mov
test
cld
int3
ret
dec
sub
mov
jmp
mov
xor
xchg
js
sub
retf
out
idiv
in
movs
xor
sbb
xchg
sub
and
repz
mov
addr16
mov
cs
mov
(bad)
cmc
ds
test
or
inc
or
dec
outs
loope
movs
adc
dec
inc
gs
push
pusha
xor
add
mov
inc
and
sbb
addr16
or
lea
adc
popa
push
push
mov
mov
outs
(bad)
mov
aad
sbb
dec
cmp
fcmovb
div
imul
inc
pop
or
mov
push
icebp
inc
jg
sub
inc
mov
popa
sub
pop
adc
mov
rcr
(bad)
retf
or
test
(bad)
cwde
mov
pop
add
int3
rcr
sub
rcl
popf
sahf
mov
lods
jmp
in
jmp
rol
loopne
mov
dec
mov
movs
test
ins
add
mov
ret
sub
je
sub
lods
or
sbb
adc
mov
jmp
std
(bad)
popa
adc
jno
sbb
push
sti
ret
stc
nop
(bad)
std
aas
pop
neg
mov
sub
mov
xchg
scas
in
push
pop
les
push
xchg
dec
out
leave
je
mov
das
jo
or
mov
dec
bound
cmp
mov
or
xchg
push
sbb
adc
icebp
popa
ins
or
aad
enter
call
sbb
jo
jb
mov
push
ins
ret
add
jle
(bad)
xlat
repnz
dec
mov
mov
ror
inc
fstp
cmp
das
cmp
pop
pop
movs
add
cdq
dec
cmp
popf
out
push
call
lea
pushf
fisttp
xor
cli
and
mov
pop
add
xchg
retf
mov
sbb
not
outs
arpl
mov
jle
mov
sbb
pop
lods
jle
jb
stos
aam
hlt
sub
shr
pop
jecxz
mov
adc
adc
repnz
jnp
push
adc
push
sbb
jmp
push
ss
or
cli
cmp
das
cdq
dec
sub
jl
sbb
push
sub
fnstcw
scas
data16
mov
cmp
fist
sub
add
and
dec
test
cwde
nop
xlat
mov
repnz
or
adc
icebp
hlt
out
mov
loopne
fdiv
xchg
out
mov
bound
test
fwait
mov
addr16
add
aas
popa
and
retf
(bad)
daa
out
xlat
add
jge
pop
pop
mov
xchg
push
popf
dec
cmp
add
loope
inc
rcl
adc
(bad)
ds
mov
pop
inc
sub
aam
jns
test
mov
cmc
sahf
dec
mov
jl
stos
out
mov
xor
call
push
pop
scas
enter
or
mov
jo
adc
in
jbe
seta
or
or
adc
ins
cmc
jecxz
repz
dec
movs
or
(bad)
fdivr
cmp
add
jne
push
or
jb
mov
adc
inc
cwde
fwait
test
gs
jbe
inc
mov
test
or
je
pop
pop
pop
mov
jmp
xor
dec
int
js
test
xchg
jmp
xchg
inc
popf
dec
push
xchg
shl
mov
pop
dec
test
push
fs
in
dec
lahf
test
scas
mov
or
cmc
adc
fwait
int3
dec
daa
jne
cdq
push
inc
aam
adc
rcr
cli
pop
jmp
outs
hlt
inc
jo
pop
sti
pop
repnz
xlat
adc
rol
pop
xor
mov
push
daa
aam
call
sbb
pop
shr
jnp
mov
add
movs
je
add
or
add
mov
out
int
pop
out
imul
hlt
ds
jle
mov
outs
outs
out
dec
jle
xlat
scas
shr
jmp
xchg
and
mov
fdivr
and
out
mov
ss
test
mov
inc
mov
sub
mul
cmc
sbb
int
jl
jmp
outs
mov
inc
push
movs
mov
inc
(bad)
dec
(bad)
mov
in
scas
jmp
mov
jmp
sar
into
cmp
xor
ror
outs
jns
jae
(bad)
mov
sbb
mov
fst
pop
sub
lds
xchg
xchg
pop
jae
mov
rcr
ins
add
fwait
cmps
clc
dec
sub
mov
pop
push
xor
popa
dec
cdq
fisubr
(bad)
repnz
iret
inc
mov
jge
mov
sbb
daa
fisttp
mov
add
es
(bad)
sub
adc
pop
in
mov
(bad)
push
lock
jg
jp
push
mov
stc
adc
xlat
dec
fwait
(bad)
sub
adc
or
mov
cmps
push
xchg
imul
or
jnp
push
into
(bad)
jmp
ret
inc
mov
dec
std
ins
mov
in
(bad)
shr
enter
nop
aaa
ret
pop
test
pop
push
shl
popf
push
mov
pop
adc
xchg
sahf
cli
sbb
pop
ror
aam
xchg
sbb
(bad)
jp
mov
mov
fsubr
in
dec
pop
pop
sbb
clc
sub
shl
add
jge
cmp
xor
jnp
les
add
push
xchg
(bad)
push
xor
ins
mul
mov
ds
std
rol
rcr
mov
sbb
(bad)
out
xchg
js
outs
sub
cli
dec
sub
sub
and
jb
push
hlt
xchg
mov
dec
data16
addr16
lods
inc
sub
mov
popa
jp
adc
and
js
mov
mov
pop
cmc
repz
push
add
cli
mov
adc
cmp
add
pop
fist
and
or
jg
xor
aaa
dec
xor
and
js
jno
mov
not
cli
ds
daa
adc
sbb
ret
(bad)
out
test
mov
sar
and
adc
cwde
popa
sub
aas
rcl
lahf
out
repnz
call
ror
adc
mov
leave
jl
clc
test
mov
mov
xor
sbb
mov
jnp
(bad)
sbb
pop
adc
pop
jecxz
fs
(bad)
dec
xchg
sub
shl
gs
jecxz
inc
das
and
sar
sbb
lods
or
sbb
mov
stos
jae
mov
adc
push
pop
aaa
jmp
jl
movs
mov
and
inc
cmps
(bad)
dec
leave
mov
ds
loopne
cmp
mov
push
add
sar
push
fwait
xor
fmul
and
sbb
inc
xor
lds
adc
fistp
loope
xchg
pop
(bad)
dec
scas
push
mov
add
arpl
clc
fs
inc
fs
adc
inc
dec
popa
adc
jle
loop
push
adc
dec
loope
gs
xor
(bad)
lds
and
adc
mov
adc
cli
jl
push
fidiv
repz
test
xchg
mov
leave
mov
pop
mov
xchg
xor
and
es
pop
addr16
sbb
stos
scas
and
push
icebp
xchg
jno
mov
ret
dec
imul
lods
or
mov
pop
pop
and
pop
sub
xchg
nop
stos
lahf
jmp
add
in
sub
neg
scas
cmp
in
inc
xchg
enter
dec
push
jle
mov
or
icebp
inc
push
jl
jp
mov
jmp
test
pushf
inc
mov
loop
sbb
or
mov
dec
pop
sub
ret
dec
or
ret
pop
pop
or
(bad)
cld
fstp
lea
(bad)
and
ds
push
sub
adc
cmps
ficom
pop
push
int
cmp
ds
jecxz
(bad)
aam
adc
into
aam
shr
shl
or
int
loope
adc
jb
dec
fisttp
inc
xor
mov
loope
movs
cmp
mov
mov
mov
aaa
pop
scas
push
icebp
dec
mov
in
sbb
push
es
int3
push
pushf
adc
cmc
xchg
out
out
aaa
sub
leave
gs
popf
fs
sub
xchg
enter
jno
cmp
inc
daa
cdq
sub
icebp
repnz
lahf
mov
shl
push
add
inc
push
mov
adc
aas
xchg
cs
jle
cld
lock
inc
jne
push
pop
ins
cmp
xchg
repnz
test
sahf
hlt
loop
sbb
inc
ror
add
icebp
dec
sub
xchg
fst
sbb
pop
test
and
(bad)
pop
cmp
cs
in
test
fnstcw
loope
repnz
mov
loopne
movs
sbb
scas
vandpd
and
jmp
cmp
xchg
arpl
mov
test
pop
pop
nop
mov
data16
sub
mov
dec
xchg
jne
adc
push
scas
lock
(bad)
repnz
outs
test
mov
mov
call
lea
mov
fld
pop
or
jae
dec
(bad)
pop
cmps
ror
bound
aad
mov
stos
loope
mov
cmps
ret
jo
sub
je
nop
js
xor
outs
cs
jmp
cwde
pop
push
addr16
cmp
mov
push
add
outs
into
xchg
push
jle
push
and
rcl
dec
mov
dec
rcl
lods
aas
popf
sbb
jnp
dec
jmp
fs
pushf
dec
mov
sub
mov
jno
lods
mov
add
ins
in
test
(bad)
jle
xchg
pop
frstor
cmps
or
outs
lds
mov
sar
add
mov
outs
stos
pop
cmc
es
cmps
mov
jmp
cwde
pushf
and
pop
push
(bad)
not
std
add
out
pop
xor
or
add
cli
scas
or
mov
rcl
out
repz
arpl
adc
mov
or
sub
xor
int3
imul
shl
push
movs
sbb
mov
mov
jns
cmps
pop
pop
add
sar
enter
shl
test
mov
adc
cmp
mov
mov
scas
and
jl
js
sahf
push
int3
fs
inc
(bad)
dec
mov
push
ds
das
jns
leave
es
xlat
and
clc
push
or
sbb
sub
das
movs
in
jle
int
xchg
add
add
out
movs
adc
icebp
mov
sub
rcl
(bad)
mov
inc
dec
xor
xlat
repnz
imul
sub
ja
(bad)
daa
and
(bad)
fldenv
mov
scas
pop
push
addr16
inc
in
cmp
mov
enter
std
je
push
adc
icebp
pop
outs
mov
aam
adc
sti
xlat
cmps
aas
jb
mov
(bad)
nop
dec
sbb
xchg
int3
push
shr
div
cld
sbb
cli
mov
dec
push
and
inc
mov
imul
mov
jle
xchg
ret
push
pop
cmc
test
mov
or
xor
xchg
sub
in
sbb
imul
sub
and
sbb
call
jmp
xchg
repz
mov
ror
dec
mov
and
or
hlt
rol
inc
mov
add
mov
cmp
mov
push
data16
popf
jle
test
nop
sub
jp
test
(bad)
xor
in
(bad)
lods
mov
mov
arpl
adc
fnstsw
fisttp
xchg
xchg
daa
and
daa
push
pushf
call
mul
or
dec
mov
and
jbe
mov
mov
call
pop
lock
mov
mov
ret
xchg
xchg
jge
mov
mov
repnz
les
add
mov
mov
pop
cmp
sbb
sub
frstorw
mov
pop
mov
xor
mov
inc
(bad)
lea
xchg
icebp
sub
mov
mov
shl
add
aam
add
mov
imul
and
push
out
fisubr
cwde
in
sub
aad
pop
jle
pop
lahf
shl
jmp
test
jmp
jnp
sub
dec
jg
fcomp
cdq
ficomp
lahf
int
xchg
jo
scas
adc
(bad)
or
aaa
and
ss
test
and
mov
xor
scas
ja
and
out
call
mov
int
pop
ins
mov
and
test
mov
jae
cdq
std
inc
jbe
jl
xchg
jmp
cmp
cmp
loop
inc
mov
icebp
sub
cmovg
fs
int
sub
sub
or
mov
pop
mov
aaa
cs
push
cld
ds
lock
sbb
jle
(bad)
jecxz
aaa
mov
xor
adc
and
punpckhbw
jb
ror
mov
adc
mov
pop
sbb
ret
add
jns
push
inc
pop
adc
mov
lock
mov
aaa
stos
pusha
jmp
adc
lods
cmc
cwde
add
mov
pop
xor
mov
inc
ja
mov
xor
jecxz
mov
fild
test
test
hlt
sbb
or
(bad)
mov
adc
jmp
lods
adc
mov
jg
adc
out
adc
fsub
push
inc
sub
jne
sbb
dec
xor
test
sbb
es
lahf
cmc
sub
stos
push
mov
add
mov
imul
test
add
sbb
and
dec
sbb
loop
cmp
xchg
ds
test
adc
bnd
adc
cmp
sbb
lods
jecxz
movs
cmc
mov
xchg
imul
mov
ficomp
mov
aaa
cmp
push
out
inc
jbe
sub
in
sbb
xchg
sbb
inc
lds
in
je
xlat
push
sbb
push
cmp
sub
xor
out
sbb
fcomip
repnz
popf
mov
pop
pop
xchg
ficomp
mov
jg
xor
adc
sbb
and
aas
xchg
ins
sub
ja
xlat
jne
rol
push
jp
cmps
shl
mov
cdq
fidivr
cli
cmp
popf
dec
es
test
mov
cwde
cld
inc
imul
jg
inc
jne
and
pop
jnp
jecxz
aad
aam
movs
das
inc
pop
xchg
adc
addr16
scas
in
and
jb
mov
pop
xchg
lods
aad
(bad)
ja
adc
sahf
or
imul
outs
or
rol
scas
push
push
xchg
shl
adc
shl
mov
call
(bad)
cli
xor
sar
aaa
hlt
test
and
pop
or
inc
lds
(bad)
pop
fcomp
ja
mov
sbb
mov
xor
inc
mov
pop
or
pop
jg
and
mov
pop
aaa
mov
cs
or
stos
aad
mov
popa
mov
je
push
sbb
push
cli
push
add
pop
jl
(bad)
std
jno
pop
ss
popf
adc
(bad)
cmp
sbb
jge
mov
sbb
dec
dec
outs
popa
or
repnz
push
mov
ret
jbe
pop
mov
mov
popa
in
xor
in
pop
dec
dec
or
arpl
jmp
test
retf
push
lea
les
and
aad
movs
add
icebp
gs
aam
rcr
inc
sub
dec
loop
adc
or
or
fnsave
(bad)
sbb
sbb
mov
je
pop
ins
jecxz
xchg
sbb
lods
mov
fdivr
outs
movs
jo
pop
out
cmp
push
cmps
xor
dec
dec
cmp
in
fcmove
sub
mov
inc
cmc
sbb
fisub
inc
in
dec
ds
mov
retf
sbb
daa
mov
xchg
cmp
(bad)
cmp
scas
jmp
xor
adc
idiv
in
test
jle
sbb
ror
push
fld
xor
daa
push
mov
ds
fdiv
cmps
adc
cmp
es
jecxz
mov
movs
jae
shr
inc
push
jmp
mov
add
test
jo
sbb
push
scas
push
cmp
jecxz
out
fstp
test
daa
ins
jbe
jbe
mov
sahf
sbb
xor
repnz
jne
ja
lahf
pop
adc
sub
and
mov
inc
and
pop
out
movs
lds
sbb
mov
jnp
addr16
xor
xchg
sbb
xor
sub
fwait
xchg
mov
(bad)
loopne
mov
adc
and
mov
std
iret
xchg
inc
mov
ins
frstor
adc
repz
xchg
call
push
mov
pop
inc
cmp
sub
into
xor
ja
repnz
fild
jmp
ds
aaa
push
and
mov
mov
adc
dec
pop
sub
scas
xor
pop
int
xchg
shl
pop
or
sbb
aam
int3
xchg
push
jle
(bad)
cld
cld
fnstenv
outs
dec
stc
(bad)
and
mov
cli
mov
pop
cmp
push
or
inc
clc
xchg
iret
inc
sub
mov
mov
enter
mov
(bad)
(bad)
xor
or
jae
cmps
stos
adc
movs
shl
pop
leave
xchg
cs
sub
sub
mov
pusha
mov
std
push
xlat
inc
xchg
mov
stos
or
and
sub
add
pusha
data16
xor
and
rcl
in
mul
xchg
or
adc
neg
repnz
xor
packuswb
inc
popf
jl
jle
loop
xor
ret
jmp
mov
fisubr
lea
ret
ret
sub
test
fist
idiv
mov
push
mov
pushf
inc
cmp
mov
push
aad
aas
pop
add
xchg
push
stos
inc
adc
adc
ror
popa
call
sbb
imul
sbb
ss
mov
or
dec
sbb
pop
call
outs
jbe
out
or
icebp
sti
inc
frstor
ret
jl
add
in
cmp
retf
or
push
(bad)
lods
ins
adc
xchg
add
dec
(bad)
pop
pop
cmps
mov
das
repnz
lea
pop
inc
mov
push
fs
mov
xor
cmp
xchg
call
aad
daa
mov
gs
dec
add
adc
or
enter
popa
xchg
mov
jmp
(bad)
(bad)
push
test
xchg
add
rep
pop
ret
jae
call
in
add
add
cmps
call
es
jecxz
mov
(bad)
mov
shr
(bad)
mov
xchg
das
add
mov
xor
into
inc
jbe
pop
inc
fisub
nop
xchg
push
add
sbb
xor
movs
ins
mov
int3
mov
ja
cmp
mov
adc
hlt
jmp
test
mov
fs
xlat
mov
mov
ret
cmc
jno
xlat
cmp
fdiv
fs
test
add
int3
test
fadd
ret
mov
aam
adc
lock
nop
pushf
repnz
cmp
not
dec
xor
fidiv
jg
pop
mov
pop
cwde
adc
push
push
sti
lea
int
mov
or
scas
icebp
js
(bad)
mov
pop
fdivp
out
imul
icebp
or
jno
push
pop
pop
pop
dec
inc
mov
jno
jbe
mov
mov
rcr
inc
push
dec
es
das
jae
push
push
push
adc
test
jp
mov
or
jno
addr16
mov
inc
sbb
mov
fcmovnu
fld
outs
movs
mov
ror
and
fnstsw
ins
and
mov
pop
into
mov
test
xor
pop
and
pusha
in
or
loop
ins
sahf
cwde
adc
xchg
sbb
sbb
fst
add
jle
rol
cmp
cmp
mov
jmp
jo
loope
clc
push
popa
fldcw
div
or
inc
jecxz
shl
fwait
or
neg
pop
jle
mov
xor
cmps
scas
sbb
es
je
in
retf
jno
sub
ja
add
add
lea
lds
repnz
loopne
div
dec
cmc
mov
aam
lea
out
stc
xchg
cli
and
pop
sbb
adc
je
jp
loop
push
mov
cmp
jge
xor
lea
and
sub
sbb
aad
adc
push
sbb
mov
dec
jb
mov
xchg
push
sti
sbb
sti
ret
or
mov
fwait
pop
add
mov
(bad)
shl
pop
cmps
xchg
jb
pop
stos
adc
fwait
shl
ror
mov
loope
daa
outs
aad
xchg
ss
(bad)
scas
cmp
or
and
inc
or
adc
clc
sub
jnp
imul
fwait
test
sbb
pushf
pop
cmps
jne
or
push
imul
test
pop
movs
fcomp
and
sub
fld
push
push
ret
mov
bound
jecxz
jmp
mul
sti
cwd
adc
je
lods
cmps
ja
sti
dec
int3
ficom
gs
pusha
or
mov
dec
leave
push
push
lea
jmp
mov
mov
adc
scas
push
inc
sti
mov
push
mov
or
jmp
or
dec
fadd
scas
(bad)
loop
enter
fisubr
test
pop
xlat
ficom
(bad)
repnz
rcl
xor
cmp
mov
stos
aas
(bad)
(bad)
adc
mov
js
inc
cmp
mov
inc
loopne
and
add
mov
nop
jo
push
add
mov
mov
push
imul
cmp
mov
xchg
out
mov
fisub
sub
mov
fmul
wrmsr
frstor
sub
lahf
(bad)
jnp
and
mov
out
mov
add
mov
pop
mov
outs
sub
lahf
ins
ss
(bad)
adc
ret
push
jb
inc
je
mov
je
pop
aas
pop
data16
idiv
pushf
mov
xchg
sub
pop
mov
cdq
imul
mov
cli
repnz
lds
retf
fld
sub
dec
sbb
xor
retf
push
fstp
cld
adc
popf
jae
and
xor
out
ror
repnz
push
inc
into
push
pop
mov
xor
aam
and
stos
push
mov
cdq
repz
sub
cmp
imul
mov
mov
dec
inc
push
push
in
jbe
cmc
push
daa
out
push
mov
aas
daa
mov
shl
mov
cmc
xchg
xor
push
(bad)
imul
or
ds
shl
cdq
cmp
mov
fnstenv
push
mov
dec
cmp
jl
xchg
das
sub
and
xchg
nop
or
xchg
pop
sub
sbb
lahf
repnz
xor
dec
(bad)
test
loope
mul
inc
push
icebp
add
hlt
dec
loope
xchg
aad
xchg
push
jecxz
cmp
retf
sbb
xchg
test
arpl
sub
push
sub
ss
sub
mov
sbb
xchg
loopne
add
es
(bad)
pop
mov
push
dec
jo
pop
repnz
add
in
cmp
cs
ins
js
aad
je
(bad)
out
and
xchg
ins
shl
fwait
dec
mov
lds
jmp
dec
mov
cmp
dec
aam
push
inc
call
dec
push
inc
shr
push
adc
mov
les
ins
test
movs
mov
(bad)
sbb
shl
fs
aaa
push
or
movs
sub
push
adc
test
enter
iret
nop
sub
sub
xchg
pop
fcmovb
aad
add
add
xor
jmp
and
sub
clc
xchg
cmp
adc
fbstp
clc
outs
inc
repnz
jmp
xor
xor
fnsave
push
cmp
jp
pop
loopne
inc
pop
and
xchg
pop
arpl
scas
and
stc
push
pop
in
in
loope
inc
jo
mov
jg
loope
jbe
xchg
cs
sbb
sub
arpl
das
outs
gs
(bad)
in
and
stos
jmp
cmp
pop
(bad)
cmps
cwde
push
std
mov
adc
fsub
jmp
add
pushf
(bad)
mov
pusha
popf
int3
cmp
xchg
mov
call
jbe
pushf
jns
sub
pop
xchg
add
and
ror
cs
ds
imul
mov
mov
inc
test
nop
lahf
mov
(bad)
test
xchg
clc
xchg
push
loop
push
push
retf
push
out
push
retf
iret
push
jmp
pop
or
or
jp
(bad)
push
out
pop
retf
outs
int
fld
pop
add
push
sbb
inc
mov
popa
gs
leave
push
ds
in
out
sub
add
(bad)
mov
hlt
fstp
dec
cli
xor
jp
bound
pop
(bad)
adc
mov
pop
mov
adc
cmp
mov
lock
xor
xor
dec
ret
push
jg
fsubr
inc
lods
test
or
repz
add
inc
cdq
das
mov
xchg
dec
dec
test
mov
push
cmc
je
cdq
push
int
scas
push
popf
mov
(bad)
pop
dec
fs
mov
inc
movs
sbb
loop
pop
pop
adc
mov
sub
lock
ror
pop
fistp
cld
adc
push
stc
les
ss
mov
outs
pop
call
pop
stos
and
lods
push
mov
jecxz
outs
cli
inc
shl
test
pushf
leave
stos
cli
xor
fstp
js
cwde
repz
dec
shl
lock
push
jae
dec
cmp
call
sahf
lods
sub
dec
repz
retf
ret
ret
retf
or
shl
dec
adc
call
xor
sub
inc
or
movs
inc
pusha
jle
dec
adc
cmps
call
out
push
leave
jmp
cwde
sub
(bad)
call
adc
xchg
mov
retf
cmp
pop
pop
pop
test
jle
mov
test
and
mov
call
pop
mov
or
clc
rcl
mov
fcom
fwait
xchg
int3
pop
mov
jecxz
add
sbb
xchg
mov
call
add
adc
call
popa
mov
dec
out
mov
shl
push
outs
ret
adc
ins
xlat
stc
mov
js
inc
mov
jmp
push
fiadd
xchg
cmp
aad
adc
jge
test
(bad)
(bad)
xlat
and
cli
add
dec
push
jnp
push
clc
int3
pop
out
xchg
lea
mov
sar
cmp
pop
mov
(bad)
mov
bnd
mov
or
mov
push
ds
popa
add
lea
cmp
daa
fadd
mov
test
jns
mov
int3
xor
add
js
cmp
fnsave
push
xchg
jne
leave
sub
push
mov
mov
sub
rep
iret
cmps
out
cmps
jecxz
mov
jecxz
mov
jo
xor
enter
repnz
js
jo
xor
adc
inc
das
sub
retf
dec
out
pop
stc
pop
icebp
(bad)
mov
dec
pop
das
leave
sub
repz
sbb
ror
imul
daa
aad
or
imul
push
inc
popf
cmp
sbb
pop
dec
or
daa
sub
adc
and
(bad)
fiadd
mov
out
ror
or
ja
xchg
out
push
push
stos
imul
rcr
xor
icebp
cmp
xchg
int
iret
mov
fcmovnu
push
sub
jge
and
jl
add
fdiv
stc
ror
test
push
shl
jnp
test
jg
je
pop
adc
or
ins
in
in
ins
pop
cmp
leave
sub
sar
push
nop
and
mov
xor
dec
clc
js
jl
jge
xchg
cmps
xor
stos
imul
ins
stc
ret
xor
stos
int
mov
jne
mov
aaa
cdq
or
push
fld
lods
xchg
xor
sbb
mov
daa
sti
movs
adc
mov
mov
mov
adc
shl
fisubr
call
addr16
call
pop
push
loope
stos
pop
movs
inc
ror
jb
ret
add
ss
mov
aam
mov
adc
or
gs
scas
mov
ret
repz
push
or
push
cld
inc
ja
push
sbb
popa
test
loop
test
lods
fiadd
inc
lds
ins
mov
mov
jmp
ja
div
and
inc
mov
dec
inc
and
rcr
jo
mov
sub
mov
scas
jnp
dec
sub
in
outs
push
adc
sahf
cmps
inc
dec
cld
add
call
test
outs
pop
pop
jge
out
cmp
sbb
jp
jnp
push
jbe
mov
(bad)
and
inc
jg
(bad)
add
pop
add
lods
mov
(bad)
jns
cdq
add
jno
out
push
cmp
mov
cs
pcmpgtw
cs
rol
and
fcmovu
pusha
sbb
aad
movsx
add
movs
sbb
mov
cmp
sbb
repz
maskmovq
not
sub
jmp
push
pop
push
xchg
cmp
inc
and
mov
dec
add
rol
cmc
sub
(bad)
int
inc
add
jmp
in
ror
jmp
adc
dec
push
fbld
lods
and
sbb
iret
scas
std
add
cdq
outs
sbb
inc
les
push
dec
retf
and
mov
arpl
push
push
sbb
push
repz
mov
fs
lds
mov
ss
sub
sbb
int
dec
cmp
leave
xchg
and
cmps
fwait
push
mov
add
add
add
xchg
jae
and
and
or
cmp
jecxz
(bad)
mov
cdq
push
loope
clc
pop
in
je
(bad)
sub
sbb
imul
sub
push
mov
jl
or
nop
push
loopne
pusha
push
lods
mov
aas
push
sub
mov
aam
call
aam
popa
or
fidivr
in
inc
(bad)
lods
mov
scas
mov
xchg
and
cmp
(bad)
xor
cld
push
jb
neg
ins
iret
pop
fwait
jg
xchg
jne
push
imul
cmp
daa
push
ds
jnp
cld
shl
mov
imul
mul
rcl
in
mov
sub
xlat
fadd
scas
mov
cwde
movs
jno
xchg
popf
inc
les
and
iret
leave
lock
stos
cmp
jne
inc
inc
sbb
xor
popa
das
xchg
int
push
pop
fwait
icebp
jnp
aaa
push
xbegin
jmp
out
fidivr
add
mov
adc
xchg
imul
mov
mov
xor
inc
xlat
push
mov
inc
xchg
fild
or
mov
mov
xchg
cmp
(bad)
dec
ins
sub
in
jnp
test
dec
push
sbb
cmp
inc
std
mov
(bad)
aas
sti
mov
scas
pop
(bad)
hlt
enter
sar
mov
jle
retf
cwde
mov
xchg
jns
int
jb
cmp
and
cli
rcl
fild
test
cdq
bound
pop
push
sbb
jno
cmp
stc
in
sub
in
mov
sti
jo
push
mov
(bad)
cwde
fldenv
pop
and
add
sub
repnz
(bad)
test
sbb
and
out
cmp
inc
dec
or
(bad)
call
lahf
je
cwde
dec
cmc
loopne
les
call
aas
stc
sub
pop
sub
fidivr
xor
(bad)
or
shl
in
test
pop
mov
rol
add
mov
lock
fs
outs
mov
(bad)
aas
mov
mov
push
ss
push
imul
or
loopne
push
add
imul
cmps
mov
leave
sbb
adc
push
fstp
fisub
jnp
sbb
aas
and
mov
dec
out
call
rol
es
or
jbe
or
jne
jb
in
push
lods
fcmovne
inc
jns
mov
stos
pop
jg
arpl
sub
pop
arpl
aas
ins
add
ja
jmp
xchg
popf
mov
int3
rcl
inc
out
mov
sar
mov
lds
(bad)
jo
and
cmp
xchg
aad
nop
cld
lods
bound
jmp
mov
cmp
inc
inc
jle
mov
lock
pop
push
add
xor
pop
push
adc
das
(bad)
fadd
shl
sbb
pushf
add
shl
add
mov
add
das
out
scas
test
push
jmp
jnp
call
in
cmp
clc
nop
adc
pusha
test
(bad)
mov
mov
fs
dec
icebp
imul
ret
clc
adc
iret
les
ror
adc
and
imul
fcom
dec
xchg
or
ficom
mov
imul
rcr
pop
popw
loopne
imul
mov
mov
lock
inc
popa
jp
sub
cs
add
mov
outs
cmp
mov
pop
stc
test
and
sbb
mov
ss
ss
xor
adc
fwait
mov
and
xchg
pushf
in
mov
lds
pusha
sar
call
jne
or
push
mov
aaa
sub
cmps
es
leave
test
mov
mov
daa
xor
jle
fld
test
int3
xor
enter
outs
lahf
add
sbb
xor
pop
pushf
pop
ror
push
hlt
or
div
mov
pop
in
jl
sbb
das
ja
jl
lock
or
mov
push
movs
(bad)
ss
pop
repz
std
addr16
rol
jo
push
adc
paddd
mov
jbe
push
jb
bound
loopne
mov
shl
sbb
mov
js
and
xchg
xchg
adc
jp
dec
out
cdq
push
dec
(bad)
xlat
push
sub
xchg
or
call
out
xchg
out
loope
lods
dec
jmp
lods
aaa
outs
ins
jbe
push
jle
call
jl
push
repz
mov
add
cmp
ret
int3
aad
push
add
call
ds
int3
sar
dec
scas
mov
ins
scas
jno
push
mov
jne
inc
dec
xchg
mov
pop
sub
sbb
cdq
call
adc
(bad)
xchg
mov
mov
adc
sub
sbb
sub
inc
int
sub
add
sbb
mov
movs
into
push
test
aad
or
cmps
dec
mov
(bad)
in
out
and
mov
mov
sbb
leave
or
sub
xchg
pop
shl
push
push
das
push
mov
cmp
push
xchg
dec
pop
retf
inc
cmp
mov
jg
imul
jecxz
in
add
mov
pop
sub
cmps
xchg
pop
retf
ret
(bad)
adc
jo
mov
pop
mov
adc
pusha
int3
inc
add
fucom
push
jecxz
mov
mov
cmp
cmps
mov
inc
and
les
enter
jne
hlt
push
dec
shl
(bad)
mov
cmp
cwde
ret
es
push
jl
(bad)
pop
scas
fs
xchg
dec
icebp
jmp
and
scas
adc
inc
das
loope
imul
adc
push
lods
lods
and
lods
sub
pop
pop
pop
mov
jge
xchg
nop
pop
retf
mov
mov
add
sbb
mov
mov
loopne
stc
add
imul
push
sbb
sub
pop
xor
or
sub
and
fidiv
fisub
ds
mov
mov
call
aad
div
cs
test
adc
stc
mov
aam
mov
mov
jno
inc
int3
pop
sbb
jle
or
outs
jb
jmp
mov
leave
push
in
(bad)
rcr
sub
xchg
repz
add
and
inc
fld
jnp
push
lock
icebp
inc
sub
add
loop
aam
jb
push
mov
inc
cmp
push
jo
pop
push
xor
cs
pop
dec
pop
or
repz
leave
pop
sbb
pop
dec
cmovae
adc
jecxz
pop
cli
hlt
cmc
add
mov
xchg
pop
push
jo
ret
addr16
call
adc
mov
pushf
cld
sti
push
into
nop
and
ds
cmp
add
push
repz
inc
fs
fcomp
mov
and
cmp
mov
(bad)
imul
inc
(bad)
jo
cmp
daa
or
jo
sbb
adc
mov
es
in
fwait
lds
out
icebp
(bad)
lock
or
imul
pop
add
sahf
retf
mov
cdq
repnz
out
int3
cdq
sub
jecxz
mov
cmps
aas
std
jne
dec
nop
sub
sti
fld
imul
inc
test
push
push
call
out
push
xchg
or
movs
cwde
ret
inc
hlt
cmp
popa
mov
mov
cwde
jbe
sub
in
adc
fild
and
retf
sub
cmp
outs
xor
jge
popf
push
in
aas
sar
cmp
inc
js
and
js
pop
add
out
jb
shl
sbb
and
jno
mov
outs
or
popf
push
add
mov
movs
scas
outs
lea
cs
add
loopne
inc
xor
mov
push
mov
fbld
popf
jnp
fs
xchg
sub
clc
lods
and
ret
or
out
mov
daa
aad
sahf
and
fsubrp
xchg
dec
xor
xlat
fwait
pop
call
mov
cs
in
pop
cdq
xor
jle
dec
or
lods
mov
jmp
add
xor
cmps
inc
xchg
dec
jmp
mov
dec
push
dec
(bad)
push
shr
in
gs
fstp
movs
dec
std
cmc
fimul
rol
add
adc
adc
rcr
in
sub
dec
jg
cmps
xchg
push
repz
je
mov
inc
loop
imul
or
shl
bound
mov
je
icebp
pop
fwait
or
popa
xor
push
xlat
jmp
and
pusha
lds
in
scas
sub
popf
mov
cs
aaa
lods
mov
movs
dec
xchg
into
sub
shl
sbb
and
iret
outs
cmp
add
out
jbe
mov
in
cmc
lods
add
jne
fidiv
add
jno
fdivr
add
call
push
mov
xchg
push
aad
in
inc
and
movs
dec
sub
push
lods
ss
xchg
shr
mov
mov
and
ror
aaa
neg
cmp
jmp
je
dec
inc
cdq
data16
mov
mov
and
fst
bound
ret
jg
and
test
push
clc
ins
loopne
stos
jnp
xchg
jbe
cmp
enter
out
ins
xor
sbb
mov
sub
arpl
dec
jae
mul
sbb
icebp
cmp
sub
cmc
lods
mov
in
cmp
in
cdq
(bad)
jnp
mov
pop
mov
lahf
shl
js
imul
movs
ror
jge
push
add
lea
mov
int
mov
mov
push
or
imul
movs
mov
out
fist
(bad)
std
xchg
xor
add
fs
pop
jp
out
es
add
nop
dec
retf
test
data16
lahf
mov
adc
jmp
pop
stc
(bad)
sti
xchg
mov
cmp
mov
pop
es
adc
mov
data16
out
pop
cmp
fs
mov
pop
pop
sbb
clc
mov
sub
(bad)
xor
adc
sub
pop
mov
fld
test
push
outs
out
pop
cdq
pop
in
mov
fmul
(bad)
lock
cs
xchg
adc
(bad)
sbb
jnp
rol
xlat
push
push
pop
xor
add
jp
xchg
pop
data16
out
xchg
sub
loopne
out
jno
call
mov
dec
stos
mov
test
fadd
mov
cdq
sbb
and
rcr
sub
push
add
jno
jae
jmp
sti
in
inc
sbb
pop
test
pop
ds
xlat
dec
pop
test
jns
cmp
ja
data16
lds
aaa
mov
cmc
test
xor
sbb
dec
inc
pushf
xchg
sahf
adc
stos
repz
movs
adc
movs
mov
jnp
xchg
stos
cli
push
fwait
out
xlat
cmp
fisttp
mov
outs
jns
pop
stos
loope
ror
jp
ins
mov
loopne
repnz
xlat
repz
mov
add
cmp
pop
imul
mov
addr16
inc
movs
and
push
jno
inc
fwait
scas
push
add
out
or
jecxz
or
sbb
popa
sub
test
cmps
or
dec
add
inc
push
or
cli
outs
and
inc
sbb
scas
stos
cmp
icebp
ins
fmul
mov
out
jmp
jns
out
mov
mul
loop
adc
jae
aam
cs
pop
or
fstp
(bad)
retf
rcl
mov
js
pop
cld
push
sub
pop
push
dec
sbb
shr
cli
jo
in
mov
int
loopne
sub
mov
cmp
(bad)
retf
lods
cli
mov
mov
fimul
lods
outs
arpl
fwait
dec
cld
jne
push
cld
arpl
sar
mov
or
sar
jp
sbb
movs
aad
loop
sahf
shl
retf
test
cld
jmp
adc
ss
mov
push
jno
scas
mov
or
or
fcom
int
xchg
dec
(bad)
aas
outs
fmul
add
dec
sar
fmul
imul
xchg
stos
sar
cdq
sub
xor
ror
inc
and
mov
cs
add
or
pop
(bad)
mov
or
outs
pop
pop
cs
pop
sbb
cmps
adc
cmp
push
jb
jb
cld
adc
retf
ss
dec
ret
dec
mov
iret
fist
daa
ficomp
mov
fst
mov
lods
or
test
adc
ror
jmp
lea
ins
xor
lods
xchg
out
add
mov
or
ins
sti
lock
push
cld
mov
imul
jg
mov
idiv
and
or
cmps
repnz
adc
cmp
mov
add
cdq
push
pusha
push
pop
data16
fidivr
adc
sbb
cmps
retf
cdq
addr16
ror
pop
pop
outs
cdq
mov
rol
cmp
imul
or
ds
mov
jns
cmp
inc
mov
call
ins
int
out
loopne
fistp
or
(bad)
sbb
sbb
mov
aad
loope
jnp
xor
out
pop
inc
cmc
out
sahf
or
jmp
sbb
mov
(bad)
mov
jo
push
in
mov
add
les
call
dec
inc
xchg
clc
pop
fild
mov
jae
loop
push
fbstp
cmps
cs
pushf
add
push
sub
ins
inc
adc
out
mov
xchg
and
sbb
xor
inc
hlt
pop
lds
int3
jle
and
fiadd
or
les
push
xor
push
retf
enter
sub
retf
cmp
push
into
cdq
movs
fsub
jle
push
icebp
outs
stos
out
addr16
ins
and
xchg
jle
pop
dec
fs
inc
xchg
lods
test
and
js
pop
sahf
lea
in
rcl
(bad)
dec
mov
retf
sub
dec
scas
xchg
out
xor
add
mov
daa
aas
push
xchg
out
into
(bad)
fwait
cmp
imul
mov
gs
lock
fdiv
(bad)
out
sub
jecxz
cmp
adc
or
gs
sub
fcomp
(bad)
fbstp
mov
div
data16
ja
sub
dec
aaa
mov
push
jno
test
sbb
adc
outs
stc
mov
test
add
ins
stos
gs
jle
je
dec
dec
lock
sbb
cs
add
loope
push
sti
aam
and
aaa
or
mov
sti
adc
jno
dec
mov
or
xor
dec
cwde
push
pop
sbb
lds
loope
jno
aaa
jns
cli
sub
mov
addr16
out
mov
mov
cmp
shl
jbe
pusha
jle
test
aad
nop
jmp
pop
xchg
fwait
mov
mov
xor
jmp
sbb
pop
inc
push
movs
inc
lahf
adc
(bad)
(bad)
sti
pop
movs
xor
idiv
mov
aam
pop
dec
mov
jb
jp
xchg
dec
push
psllw
sti
leave
xchg
bound
dec
add
lods
retf
call
pop
adc
dec
(bad)
sbb
inc
outs
rcr
inc
cmp
fldenv
punpckhbw
fiadd
sub
mov
jns
arpl
xor
cmp
jne
and
push
cmps
fmul
sbb
mul
outs
jp
pop
cmp
ja
repnz
icebp
jae
icebp
sub
mov
mov
sti
je
mov
mov
retf
out
je
ins
adc
or
aaa
or
mov
sub
jne
jnp
dec
push
inc
cmc
or
div
enter
fdiv
nop
stc
stc
xchg
dec
add
mov
ja
sub
cmps
test
movs
sahf
inc
outs
aaa
mov
pop
sbb
in
sub
xchg
popf
cwde
cmp
gs
test
addr16
shr
stos
das
jge
int
cmps
in
jecxz
stos
ins
rol
fisub
mov
mov
cli
pop
push
retf
ss
mov
mov
push
jne
push
cmps
aas
movntq
jne
push
loope
jg
mov
add
scas
out
jo
fxch
mov
or
xchg
push
sub
(bad)
std
inc
lods
or
and
add
sbb
jmp
out
loop
in
or
out
clc
retf
jmp
mov
(bad)
xlat
push
pop
mov
mov
scas
aaa
mov
mov
dec
sub
inc
rcl
loop
cdq
mov
push
(bad)
imul
xor
inc
push
mov
xlat
mov
hlt
jns
mov
jge
ins
cmp
sub
pop
sbb
xor
cs
test
jno
inc
jle
sub
fdiv
adc
adc
lea
loopne
rcl
mov
sub
leave
out
adc
es
jns
push
dec
loope
cmp
or
push
xor
test
mov
mov
mov
fcomip
cmps
jp
scas
int
inc
call
mov
dec
pop
and
loope
(bad)
imul
mov
add
add
xchg
mov
sub
fsub
add
mov
mov
je
ds
push
push
cs
vpcmpeqb
or
pop
cmc
xchg
shl
int3
xchg
out
pop
add
xor
loope
rcr
int3
add
repnz
addr16
mov
xor
test
cmp
loopne
mov
lods
scas
aaa
push
mov
push
lds
and
push
xor
xlat
stos
mov
lea
frstor
dec
cmp
mov
and
jp
pusha
xchg
and
inc
(bad)
push
xchg
xchg
outs
sbb
cmp
loope
add
jns
(bad)
xor
std
fwait
cld
xor
sbb
adc
inc
or
lock
push
push
out
(bad)
nop
add
pop
test
cmp
out
imul
xor
bound
jl
addr16
leave
cmp
or
add
int
fld
cmp
lods
pop
movs
clc
inc
dec
mov
cdq
outs
les
mov
icebp
mov
imul
push
cmc
lds
inc
sbb
cs
mov
sbb
mov
push
aad
js
repnz
inc
daa
in
call
data16
test
fs
adc
lods
aad
dec
xchg
cli
mov
push
push
dec
mov
test
jns
arpl
mov
jmp
popa
add
mov
push
dec
gs
enter
mov
je
stos
cwde
into
mov
cmps
mov
loopne
cmp
sbb
in
scas
loopne
push
ins
push
test
not
retf
inc
fbstp
loope
es
pop
mov
movs
lea
ds
mov
dec
dec
mov
std
push
sbb
mov
imul
leave
movs
ret
rcl
(bad)
lods
imul
push
out
in
ret
ret
in
and
dec
mov
add
sbb
push
mov
mov
push
stc
pop
add
lahf
(bad)
sub
lock
test
cmps
mov
fisttp
jno
mov
cdq
inc
or
xor
mov
sbb
pop
mov
or
out
jle
fs
jns
push
sbb
out
test
push
xchg
(bad)
mov
dec
movs
mov
in
(bad)
addr16
dec
and
adc
pop
jne
in
jno
dec
sub
mov
gs
add
test
xor
mov
push
mov
pop
cmp
push
push
xor
sbb
cmp
jg
(bad)
loop
or
xchg
push
je
test
mov
xor
jnp
add
sbb
int
stos
xor
push
(bad)
in
aaa
adc
icebp
fs
push
stc
call
ds
cmp
in
movs
add
daa
pushf
outs
and
jge
aam
ja
(bad)
test
or
jns
jmp
adc
push
cmps
aas
lea
push
lods
mov
test
test
push
add
dec
pusha
sub
inc
fwait
add
aaa
leave
xor
andps
xchg
xor
repnz
push
js
shl
test
out
sar
pushf
adc
and
fmul
sbb
sub
pop
mov
pushf
fst
mov
add
jo
mov
mov
out
pusha
dec
jo
inc
pop
adc
ins
fild
pop
repnz
dec
mov
mov
sbb
add
test
in
adc
sar
adc
lock
test
bound
inc
and
ss
mov
jmp
loopne
xchg
je
cld
add
push
adc
neg
(bad)
ins
fldcw
out
cdq
jno
out
xchg
mov
pop
iret
add
or
scas
adc
pop
inc
retf
sbb
mov
xchg
cmp
ins
lea
scas
jnp
dec
pop
scas
repz
add
pop
neg
dec
aaa
or
mov
ret
adc
cmc
mov
sbb
cli
jle
das
add
or
shr
jnp
jb
cmp
or
xor
push
sbb
push
stos
adc
push
cwde
xchg
xchg
xchg
lock
xchg
mov
in
and
in
jp
int
xlat
and
push
xor
ror
stos
jnp
push
cld
pop
lock
xor
push
stc
push
push
mov
push
or
xor
ds
mov
or
dec
shr
mov
iret
add
add
mov
and
or
in
push
std
imul
pop
sbb
sub
jg
dec
fs
mov
mov
fnstsw
jmp
jge
cmp
jge
sub
mov
add
pop
fsubrp
jecxz
in
sub
mov
addr16
jg
pop
(bad)
xor
mov
pushf
sub
jg
push
push
adc
das
movs
xchg
pop
dec
sti
pop
jl
push
js
shr
jae
jb
mul
leave
and
lds
ret
xchg
adc
dec
test
dec
inc
push
sbb
push
xchg
std
pop
push
push
and
adc
dec
pop
leave
cli
dec
cmp
ds
jnp
jp
xchg
adc
sub
xor
xchg
call
pushf
jbe
out
adc
jno
(bad)
je
cmp
xchg
shr
gs
icebp
popf
push
int
aad
in
lods
add
jl
cld
movs
push
and
dec
loopne
add
cmc
repnz
aad
push
sub
or
call
ja
and
pop
xchg
dec
retf
mov
inc
retf
(bad)
pop
add
and
lods
push
(bad)
push
ret
js
lea
repz
push
test
adc
in
ins
and
or
or
pushf
fcmove
rcl
inc
fcmovnbe
dec
in
push
add
dec
inc
scas
inc
sub
cmp
cmp
push
nop
jns
sahf
in
cmp
test
lds
xchg
in
loope
mov
inc
fnstenv
adc
sub
xor
hlt
xor
mov
mov
sbb
in
jno
repnz
mov
daa
inc
ret
push
sti
sub
cmp
int3
loope
and
ds
in
call
(bad)
pop
idiv
mov
jne
sti
dec
pop
adc
popf
mov
repz
aaa
(bad)
lock
stos
in
mov
and
sub
jo
sub
inc
xchg
popa
into
mov
xchg
rol
lock
icebp
jb
outs
arpl
sahf
movs
adc
mov
es
push
into
pop
xchg
frstor
cdq
xchg
push
aas
test
retf
pop
sub
mov
mov
push
outs
mov
push
mov
ror
lds
cmp
adc
outs
dec
dec
dec
pop
clc
imul
enter
outs
lea
ds
(bad)
jnp
imul
stos
outs
(bad)
mov
mov
cmps
add
test
push
sahf
mov
or
xchg
das
fnstsw
stos
arpl
add
jp
xchg
pop
pop
retf
jno
ret
cmc
mov
pop
adc
jecxz
or
push
jmp
jmp
dec
in
pop
sbb
daa
push
push
push
fidiv
std
dec
sahf
sub
mov
sub
jbe
ins
dec
fild
lea
mov
cmp
fs
inc
out
sub
jb
scas
pushf
mov
mov
mov
jb
push
enter
push
jl
cld
add
add
retf
in
aad
pop
ret
fcom
push
shl
mov
sti
or
mov
jnp
inc
pop
xlat
jle
push
mov
jbe
xchg
sub
and
shl
push
xchg
enter
mov
sub
enter
pop
sub
xor
mov
push
ret
clc
or
cmp
lods
movs
mov
mov
xchg
and
jmp
jno
div
mov
mov
scas
fidiv
xchg
jmp
cli
xchg
mov
int3
jns
xchg
(bad)
xor
add
fild
lahf
out
loopne
jb
popa
add
fidivr
cdq
loop
xchg
add
dec
dec
imul
(bad)
shl
idiv
sbb
in
sbb
mov
movs
out
lahf
pop
jmp
add
add
sub
or
xor
loope
add
and
mov
fild
pop
outs
push
rol
cmps
test
push
cs
popf
stc
or
push
mov
(bad)
ss
(bad)
push
dec
sti
test
nop
cmps
add
pop
cli
sbb
(bad)
jge
add
arpl
leave
pop
addr16
push
jl
cld
mov
jmp
arpl
dec
sub
int3
lock
enter
cld
cs
inc
test
(bad)
pop
mov
inc
shl
out
aas
jb
aam
jl
sbb
sub
xor
retf
aaa
push
push
push
add
das
(bad)
(bad)
jno
push
push
ret
pop
js
pop
jae
xor
out
lods
ja
mov
push
jno
movs
push
loop
xor
rcr
addr16
xchg
jbe
(bad)
mov
retf
xor
inc
ins
std
mov
mov
adc
clc
stc
inc
and
aad
cwde
mov
mov
repz
mov
pop
iret
nop
es
fs
outs
mov
gs
(bad)
jnp
pop
call
adc
pop
jnp
cmp
fcom
ins
popa
sub
test
adc
(bad)
jmp
sbb
sti
dec
lahf
pop
ins
mov
xor
adc
mov
fisttp
jo
inc
and
pop
push
repnz
jo
inc
adc
out
sbb
mov
xchg
add
sub
mov
mov
and
(bad)
or
rcl
mov
xchg
mov
mov
(bad)
arpl
test
push
dec
mov
(bad)
(bad)
pop
stos
and
adc
sti
enter
dec
movs
dec
sbb
push
add
xor
cmps
dec
ja
push
ins
xor
inc
shl
sub
into
jmp
jg
test
adc
mov
into
fdivr
hlt
cs
xor
add
sub
sbb
or
or
sti
xor
add
add
sbb
out
pop
xchg
inc
jbe
xchg
mov
mov
jp
outs
xchg
rcr
movs
sub
lds
dec
xor
cmc
loope
std
(bad)
aam
cmp
and
retf
dec
lods
fild
xchg
add
mov
jp
dec
jp
pop
mov
das
fldenv
pop
jp
xchg
sar
stos
stos
mov
push
inc
bound
cdq
shr
imul
inc
aad
ret
dec
push
or
xchg
push
js
stos
pop
in
repnz
xor
sbb
(bad)
cmpxchg
mov
popf
inc
xchg
test
jbe
pushf
add
call
push
adc
or
dec
xchg
scas
pop
enter
push
or
add
dec
fistp
test
aas
sub
push
fld
dec
xchg
dec
sti
fisttp
mov
jecxz
xlat
xor
add
aad
sub
or
dec
adc
sbb
mov
inc
and
retf
or
mov
add
pop
push
rcl
cmps
movs
push
nop
cmp
(bad)
dec
add
jnp
mov
mov
(bad)
sti
inc
retf
jg
leave
sahf
(bad)
mov
sahf
aam
retf
cmp
ja
or
jle
or
sbb
xchg
push
pop
fs
int
stc
in
dec
pop
inc
ja
or
ss
pop
mov
jne
lods
aam
and
cs
movs
adc
int
xchg
lahf
retf
xchg
sbb
cwde
inc
stos
repz
mov
and
icebp
aam
test
repz
test
fcom
cmp
lods
inc
dec
mov
add
xchg
or
movs
cmc
aam
fwait
jge
ins
ret
pop
cmp
inc
xchg
arpl
enter
popa
pop
ror
mov
jae
xchg
pushf
jno
aam
pop
in
mov
or
test
cmp
push
enter
cmp
add
sahf
test
sub
loope
inc
dec
pop
(bad)
aaa
popf
sub
add
xchg
mov
or
enter
push
cmps
int
pop
(bad)
adc
jae
sub
mov
div
out
push
repnz
push
sub
ror
lods
jne
push
in
(bad)
cmp
or
xor
shr
push
add
push
mov
mov
in
sub
fwait
mov
std
ror
ret
mov
jbe
lahf
lea
mov
jo
push
jp
adc
add
and
imul
ja
cwde
cli
mov
sub
jne
mov
cmps
xchg
push
(bad)
daa
pop
jg
push
ret
sub
mov
js
mov
xor
loopne
sahf
gs
ret
xchg
ss
cld
and
mov
push
and
mov
mov
sbb
xor
out
adc
int
jnp
enter
push
jb
pop
out
aaa
int3
xlat
dec
xchg
cwde
xor
mov
stc
jg
jp
(bad)
or
stos
(bad)
int
push
loope
(bad)
es
gs
(bad)
jno
cmp
test
fwait
call
cdq
imul
sub
adc
shl
pusha
mov
clc
ds
imul
lods
jl
inc
jns
xchg
ins
jp
mov
add
mov
arpl
mov
inc
fistp
pop
mov
cmp
or
xchg
movs
mov
pusha
dec
adc
add
icebp
adc
mov
movs
and
aam
scas
mov
jbe
stos
pop
add
mov
daa
loop
stc
lods
pop
dec
hlt
cmc
lock
inc
enter
rcl
add
(bad)
and
pop
bound
out
or
inc
lods
xchg
shl
dec
pop
mov
rol
mov
pop
xchg
ins
dec
mov
std
jmp
pop
xor
lock
sahf
hlt
or
add
push
dec
dec
int3
adc
clc
push
fst
les
jnp
arpl
mov
mov
xor
test
lods
add
sbb
ds
popa
rcl
rcl
sbb
mov
add
push
inc
pusha
mov
push
adc
retf
data16
and
mov
lahf
out
sub
xchg
dec
lock
sti
in
bound
aaa
adc
(bad)
adc
mov
or
mov
in
sub
fisttp
push
movs
mov
push
push
call
(bad)
(bad)
xlat
push
jge
sub
(bad)
out
sbb
and
hlt
add
pop
pop
adc
or
xchg
jne
mov
aaa
loopne
xor
add
sub
inc
adc
das
pop
imul
sbb
outs
repz
je
sbb
rcr
inc
fmul
mov
pop
aam
mov
inc
lea
leave
popf
push
and
out
out
xchg
mov
fisubr
xor
bound
push
test
mov
pusha
xor
jne
aaa
lahf
call
fcom
push
ret
int3
push
push
ret
add
loopne
cmp
mov
jmp
add
sbb
iret
ret
mov
cli
mov
(bad)
xor
mov
sub
push
push
frstor
jns
adc
inc
out
sar
jmp
push
shl
cdq
mov
mov
jns
add
shl
mov
add
and
mov
cdq
cdq
cmc
loopne
pop
clc
movs
jne
cdq
pop
push
lahf
sahf
bound
std
stos
(bad)
out
lds
mov
jae
mov
inc
lahf
inc
add
loop
dec
and
push
je
cmp
or
lahf
shl
ja
pop
in
(bad)
cmp
(bad)
rcl
mov
xchg
dec
cld
or
push
sbb
xlat
pop
xor
movs
mov
je
push
fidiv
aas
dec
fisubr
or
les
add
lock
sti
push
cmps
xor
xor
sbb
nop
scas
adc
push
out
xlat
mov
or
ja
push
sbb
xor
lock
retf
jmp
sar
fsubrp
adc
or
sub
std
mov
mov
fnstcw
pop
cmp
pop
call
dec
sbb
mov
movs
idiv
mov
pop
(bad)
and
aas
enter
loop
sub
mov
nop
call
jmp
sub
das
inc
jg
popf
sbb
sub
mov
dec
jmp
retf
xchg
mov
cwde
shl
call
nop
retf
retf
inc
dec
add
adc
shl
push
cmp
ja
adc
sub
inc
stos
jne
movs
and
cmp
and
add
sar
fwait
scas
mov
test
(bad)
mov
repz
cld
ins
dec
xchg
xchg
xor
test
stos
in
retf
jbe
pop
mov
mov
xchg
retf
ins
or
imul
sbb
xchg
imul
mov
gs
inc
outs
cmp
fadd
xchg
out
mov
outs
xchg
aaa
int3
fmul
and
push
adc
add
pop
pop
mov
adc
jbe
in
push
jl
mov
xchg
cmp
repz
sbb
mov
loope
clc
pusha
add
movzx
sbb
or
cmps
call
mov
js
or
push
push
adc
jnp
ret
or
jns
cmps
test
fisttp
cdq
adc
mov
xchg
mov
mov
mov
fnsave
cmps
inc
sar
movs
dec
cli
dec
shl
stc
fld
adc
jmp
out
(bad)
cli
aas
jmp
aas
ds
jno
cmc
mov
mov
jp
nop
pop
cmps
xchg
jns
fistp
sub
in
call
and
mov
daa
jecxz
rcr
es
(bad)
std
(bad)
jb
fwait
or
mov
data16
push
mov
(bad)
lods
push
xchg
mov
cmp
sbb
repnz
push
mov
int3
clc
outs
ret
aas
xor
lahf
inc
push
nop
or
jl
inc
ret
mov
fldl2t
add
bound
or
sub
stc
and
adc
mov
xor
adc
xchg
clc
lea
jmp
and
rcl
stos
and
fcmovu
ror
sub
imul
repnz
ror
cmp
mov
xchg
and
inc
jmp
int
pushf
pop
lock
xchg
inc
jmp
enter
out
sub
movs
popf
and
out
mov
and
clc
add
mov
fimul
loopne
mov
jno
inc
inc
cdq
push
jne
fisubr
dec
pop
adc
mov
xor
mov
loope
cwde
pop
mov
dec
mov
mov
and
push
mov
jmp
aam
dec
pusha
sbb
mov
xor
push
lods
mov
fisttp
aaa
jmp
pop
and
enter
inc
icebp
je
fsubr
hlt
and
inc
pop
sti
outs
sbb
adc
div
inc
icebp
sbb
stos
fwait
adc
sbb
(bad)
icebp
enter
fstp
ret
cs
jge
mov
mov
inc
rcr
scas
adc
call
inc
iret
cmp
xchg
mov
ja
cmp
mov
pop
es
lock
and
mov
push
and
push
cmp
xor
loopne
or
(bad)
call
sub
ins
xchg
adc
imul
mov
cmc
mov
shl
cmp
add
test
(bad)
pusha
imul
icebp
dec
mov
cmp
clc
push
hlt
retf
retf
or
stc
test
add
push
dec
mov
ret
fcmovne
call
addr16
fidiv
inc
adc
test
fcomp
cmp
retf
mov
sub
fiadd
add
jecxz
inc
sub
retf
lock
push
mov
ficom
call
cmp
je
and
pop
jecxz
mov
add
mov
movs
loopne
xor
adc
loope
rol
sbb
dec
clc
pop
pusha
or
inc
jne
int3
sbb
loop
test
cmp
ss
and
xor
cmp
pusha
pop
out
sti
ss
fild
fldcw
fistp
leave
fwait
push
pop
cmp
loope
(bad)
cdq
movs
cdq
pop
std
cmp
fstp
cmpxchg
mov
push
xchg
ds
add
cs
xchg
sub
jbe
jmp
iret
or
add
mov
arpl
inc
scas
jmp
inc
mov
mov
push
jae
sub
pusha
cs
mov
mov
xor
mov
jp
sbb
scas
add
stos
xchg
ja
dec
jno
les
dec
sbb
cld
frstor
pop
mov
sbb
adc
cmp
shl
(bad)
jnp
mov
aad
cmps
or
push
xor
verr
and
pushf
std
xor
adc
adc
dec
test
ficomp
adc
ss
pop
fcom
jl
(bad)
ins
mov
add
pop
inc
sub
mov
(bad)
add
and
lea
lock
cdq
jno
stos
sahf
mov
ret
cwde
fsubr
fistp
cmp
jmp
out
enter
sub
mov
pop
cmps
(bad)
ins
inc
xor
shl
mov
adc
into
test
jo
jno
and
movs
movs
jl
mov
(bad)
sar
and
jbe
inc
xchg
adc
shr
bts
stos
dec
mov
pop
cmp
imul
in
call
jg
xchg
xor
cld
(bad)
mov
lods
ss
cmp
adc
lods
adc
xchg
ds
push
xchg
or
push
mov
dec
int
(bad)
mov
mov
pop
lahf
mov
fwait
pop
mov
std
xor
mov
xchg
mov
fadd
cmp
inc
cmps
and
rcl
out
stos
shl
sub
retf
xchg
lahf
test
in
lds
cmps
inc
sti
(bad)
push
jo
scas
jp
ror
bound
push
sti
adc
jbe
dec
pop
add
xchg
ins
and
and
xor
and
sub
pop
movs
es
mov
out
hlt
sbb
mov
pop
icebp
jo
out
sar
pop
dec
jecxz
add
std
cmp
mov
xor
bnd
dec
xchg
jge
rol
cmp
add
std
push
in
call
test
pop
jmp
xlat
int3
mov
pushf
in
jecxz
stos
in
mov
mov
and
xchg
fucomi
(bad)
repz
mov
or
lods
iret
lahf
outs
fdivp
xor
aam
xor
ins
mov
dec
icebp
shl
jg
pop
xchg
xor
pop
pop
push
fwait
pop
bound
push
mov
pop
push
in
ss
xchg
je
fisub
fild
xlat
iret
cmp
ins
sbb
jo
inc
mov
call
mov
rcr
adc
or
add
test
cld
or
stc
cmps
mov
cmp
mov
enter
sbb
sub
inc
mov
js
dec
in
pop
out
ja
mov
(bad)
sub
dec
pop
das
add
stos
jl
out
sbb
push
push
icebp
clc
xor
add
and
vmwrite
enter
ins
jl
push
call
push
outs
(bad)
lds
sub
add
mov
add
sti
push
sbb
cmp
jnp
pop
jge
imul
jo
ror
mov
jmp
dec
loopne
mov
sub
pop
aam
cmp
jmp
or
inc
add
sbb
sar
in
push
mov
mov
cli
mov
lea
sbb
in
jo
cs
test
push
fwait
in
cmp
and
sbb
and
fwait
clc
sbb
inc
cmps
sbb
mov
fst
mov
adc
loope
fldenv
mov
cmps
jmp
sar
dec
pop
stos
shr
cmps
xor
and
daa
mov
cmps
sar
add
and
dec
push
loope
mov
ins
leave
out
in
test
push
xor
and
loope
scas
mov
sti
pop
and
aaa
mov
lods
xchg
dec
call
fs
leave
cwde
lods
xor
js
cld
les
(bad)
and
sub
loopne
test
cmp
mov
pop
xor
retf
retf
dec
push
mov
xchg
pop
xchg
leave
(bad)
push
mov
mov
pop
mov
xchg
repnz
adc
iret
sub
inc
out
hlt
pushf
fsubr
arpl
sub
ds
inc
loopne
outs
jmp
and
and
jns
hlt
mov
inc
loop
pop
and
mov
rep
leave
mov
arpl
sub
ja
add
ins
inc
push
lods
push
lods
push
mov
les
sub
fcom
lahf
cli
out
jns
inc
dec
into
les
push
cmp
sbb
xor
adc
ins
cmps
lahf
icebp
push
sbb
mov
fnstsw
call
jns
cmp
movs
mov
jmp
lock
jnp
scas
test
jmp
xchg
push
aad
mov
push
sbb
xchg
inc
and
xchg
xor
ret
int
push
ins
lahf
(bad)
test
sub
shr
jmp
aad
add
or
fmul
lahf
jl
mov
jge
sbb
cmps
sub
data16
xchg
xchg
mov
dec
ficomp
mov
(bad)
or
sahf
xchg
das
fidiv
call
mov
into
fisttp
out
pop
push
int
popa
push
jg
jb
pop
mov
add
adc
pop
aaa
and
add
mov
shr
and
mov
aam
jmp
add
and
int
jl
int3
(bad)
dec
fild
inc
int
shl
or
or
push
xchg
sbb
add
mov
xchg
into
outs
mov
cli
mov
out
jp
jmp
mov
repnz
adc
pop
cld
jle
mov
stos
push
in
cmps
mov
adc
daa
retf
rcr
xchg
or
mov
jb
lods
mov
(bad)
sub
test
jnp
xchg
inc
(bad)
mov
jle
mov
out
mov
mov
sbb
fnstcw
dec
pop
lar
jae
inc
shl
adc
gs
pop
xor
jno
sbb
xchg
clc
xchg
jl
cmps
pop
fwait
(bad)
sub
pop
or
bound
stos
jl
fidiv
loope
mov
and
out
pop
call
sbb
fcomp
or
fild
inc
ret
cmp
je
mov
mov
test
cmps
sbb
cmp
sbb
lea
nop
lahf
or
and
inc
dec
sub
test
adc
mov
inc
jno
jmp
aas
ins
pop
mov
and
call
pop
add
sbb
dec
jae
das
sbb
xchg
or
scas
mov
mov
shl
sub
fldl2e
mov
ins
cmp
loopne
addr16
in
or
mul
jbe
ja
hlt
cmp
xor
repnz
pop
cmp
pop
push
pop
shr
inc
fbstp
imul
mov
dec
rol
int3
sub
inc
stos
xchg
imul
shr
in
aas
fidivr
popf
cmp
push
mov
mov
sbb
arpl
sub
loop
aad
and
cmc
sbb
mov
hlt
and
jge
cli
ret
popa
cld
xor
data16
cmps
call
jne
aas
arpl
mov
scas
int
out
adc
daa
je
sub
mov
inc
shl
or
shr
sbb
add
ja
int3
jo
inc
mov
sti
xchg
lods
sbb
cs
jmp
mov
xchg
stos
push
jp
rcl
mov
setne
push
(bad)
mov
movs
sbb
cmp
shl
test
pop
jmp
inc
jbe
je
xor
aaa
jle
jmp
rcl
xor
gs
out
ror
shl
imul
call
mov
dec
sub
mov
jg
dec
(bad)
jae
mov
aas
adc
bound
mov
mov
pusha
movs
xchg
cmp
dec
pop
iret
fcomi
shl
clc
jle
into
outs
xchg
pop
sub
adc
cmp
popf
sbb
out
cmp
inc
retf
inc
dec
gs
and
clc
xchg
out
aam
adc
dec
cmp
dec
cmp
loope
push
push
and
jne
jl
movs
stos
ss
aad
xchg
xchg
add
cs
dec
test
sahf
cmp
movs
mov
aad
std
pop
push
not
cli
hlt
or
inc
xchg
xlat
push
les
rol
jp
pop
mov
in
sub
mov
xchg
xor
ss
jp
add
dec
sbb
sahf
jg
das
or
pop
sbb
xchg
sahf
push
(bad)
rcr
test
mov
inc
push
test
pop
pop
loopne
adc
mul
int3
cmp
pusha
push
out
test
shr
dec
nop
jmp
je
popf
adc
jne
mov
mov
cld
enter
sub
mov
sbb
jg
cmp
loope
pop
jl
(bad)
mov
cmp
sub
stc
movs
stos
stos
xchg
ror
push
in
cs
push
sub
sbb
fiadd
sub
mov
xchg
pop
push
jbe
into
fdiv
leave
into
mov
stc
sar
jp
xchg
sub
mov
ins
fbstp
into
cmc
movs
jne
retf
cmp
arpl
mov
shl
addr16
inc
pop
imul
sbb
add
mov
and
or
gs
xchg
xchg
popf
xchg
retf
in
cmp
in
sti
or
adc
ror
push
sub
inc
cmp
test
dec
adc
and
xor
sbb
ins
rcr
cmp
mov
add
cmp
mov
bnd
lahf
enter
inc
bts
add
in
fstp
mov
push
adc
sub
daa
xor
mov
jb
mov
retf
and
cmp
(bad)
jno
rcl
in
lea
ficom
pop
dec
xchg
clc
xor
clc
push
inc
lahf
or
aaa
ins
sbb
js
lods
ss
lods
jo
test
(bad)
cmc
jno
mov
sub
or
xor
and
xor
mov
cmps
(bad)
pop
into
mov
sbb
test
fdiv
arpl
push
test
fst
retf
lods
jo
adc
pop
in
push
inc
daa
mov
push
jmp
scas
and
xor
mov
wrmsr
aad
sar
dec
add
test
mov
(bad)
inc
push
sub
dec
sbb
or
or
popf
dec
cmc
sbb
mov
and
xchg
push
xor
test
shl
add
aaa
scas
aad
das
add
(bad)
(bad)
push
nop
das
fisubr
rcl
sbb
adc
dec
or
add
fs
dec
dec
jno
jb
xor
arpl
jl
sub
sbb
loope
div
clc
aam
mov
cld
add
or
xchg
and
inc
mov
leave
jg
jecxz
pop
ja
jno
popf
xchg
adc
inc
ja
(bad)
jo
inc
(bad)
imul
outs
adc
iret
cmp
dec
sbb
jno
arpl
(bad)
cmp
fwait
jno
mov
jge
jo
mov
cmp
and
xchg
xor
repz
jb
mov
mov
icebp
cmps
ret
test
dec
add
or
sub
jp
test
xchg
aad
fsubr
(bad)
mov
cli
mov
adc
repz
in
sbb
xor
(bad)
jmp
(bad)
aam
ret
aad
retf
movs
(bad)
pusha
shr
les
mov
fld
mov
scas
ror
scas
mov
test
jne
movs
jge
std
lods
(bad)
and
fdivr
mov
pop
mov
lods
jne
mov
inc
fist
aas
jbe
xchg
xor
sahf
fs
xor
sub
test
outs
stos
in
and
ss
push
xor
ins
das
je
lock
sub
jg
in
in
stos
call
or
sbb
add
push
or
stos
jnp
hlt
mov
mov
jns
mov
(bad)
cld
jle
je
jbe
int3
inc
jo
push
jle
lea
mov
jle
push
test
push
fldcw
push
jne
or
mov
pop
dec
xchg
mov
jmp
push
(bad)
pop
xlat
ficomp
inc
pop
mov
mov
pushf
into
aaa
sub
std
inc
push
cmc
jl
or
aam
xchg
cmc
movs
stos
push
xchg
pusha
and
xor
ja
xchg
mov
push
xlat
stos
popa
push
xchg
fld
push
inc
dec
jne
sbb
cmps
pop
repnz
push
outs
sbb
test
(bad)
(bad)
adc
cmp
pop
sub
lods
mov
lock
pop
or
and
ins
ficom
outs
sbb
xor
inc
push
cmp
push
imul
lods
mov
or
leave
and
mov
dec
inc
or
jecxz
mov
test
and
xchg
push
jne
fs
shr
test
inc
in
or
out
int
pusha
pop
stos
mov
jbe
in
imul
int
push
loopne
push
scas
lds
or
cmovnp
retf
mov
mov
out
and
lods
int3
ss
icebp
dec
(bad)
mov
arpl
rcr
cli
leave
push
fnstenv
mov
mov
js
sbb
(bad)
or
mov
(bad)
fcmove
je
popf
mov
icebp
jecxz
sub
(bad)
fs
dec
ja
jne
jp
pusha
sub
daa
adc
mov
add
xchg
leave
fistp
mov
call
add
(bad)
scas
ja
add
sbb
cld
fimul
ss
aas
mov
inc
cwde
pop
dec
mov
dec
adc
push
aad
sub
cs
sbb
mov
xchg
and
mov
mov
jecxz
inc
or
(bad)
mul
cmc
dec
and
sbb
(bad)
xchg
js
out
js
popf
sbb
dec
icebp
cmp
cli
repz
add
mov
xor
iret
ss
scas
cwde
jno
scas
inc
idiv
jae
imul
jnp
xor
mov
std
push
les
add
stos
(bad)
into
popf
movs
sbb
ds
shr
movs
scas
fadd
stos
and
xor
mov
jmp
aad
mov
xchg
xor
add
inc
sbb
xor
sahf
mov
mov
movs
mov
lock
dec
outs
sbb
lds
xchg
pusha
js
jmp
fwait
fwait
lock
mov
ins
(bad)
and
sub
inc
je
push
jl
add
pop
call
jae
pop
js
loope
xor
dec
or
xor
mov
fdiv
(bad)
into
in
repnz
gs
sub
ds
pop
jle
jne
cmps
arpl
loope
ret
aaa
push
xor
popa
and
fisubr
inc
ror
icebp
lahf
jp
or
mov
cmp
ret
dec
dec
sar
jns
sbb
enter
fistp
sub
shl
cmp
push
cpuid
lods
das
push
mov
jno
mov
mov
dec
mov
das
(bad)
pop
int
xor
test
leave
xchg
or
jl
push
jbe
imul
pop
sbb
and
cld
mov
call
loop
xchg
cld
push
jae
js
push
sbb
cmp
adc
inc
ret
mov
int3
sub
cli
jmp
leave
mov
push
dec
mov
dec
out
ret
dec
call
fadd
and
push
inc
cld
or
leave
jb
mov
imul
gs
popa
push
aam
pop
data16
je
(bad)
push
or
js
mov
sbb
daa
jae
cmp
mov
in
push
push
mov
xchg
sub
pop
inc
add
pop
push
rcr
lods
inc
xlat
nop
lahf
cmc
or
leave
out
call
add
fs
dec
mov
mov
adc
xor
jg
adc
(bad)
dec
ret
(bad)
in
mov
(bad)
(bad)
xor
imul
sti
jmp
or
jecxz
pop
cmp
and
loop
scas
jno
int3
fistp
xchg
int
pop
aam
jmp
(bad)
adc
pop
pop
loope
sbb
xor
xor
mov
inc
ret
and
test
pop
(bad)
push
jo
xchg
in
xor
ss
mov
dec
inc
and
mov
inc
jbe
iret
js
movs
mov
cld
pop
hlt
sub
fsub
call
mov
inc
jle
shl
in
repnz
shr
icebp
mov
daa
int3
(bad)
mov
cmp
pop
mov
jp
jmp
and
mov
aam
popf
xor
clc
and
mov
jl
or
cs
jns
mov
dec
sbb
and
adc
fs
imul
test
mov
sub
pop
mov
ja
fistp
mov
and
inc
shl
int
les
add
leave
(bad)
ror
mov
mov
in
cmc
mov
mov
enter
inc
pushf
clc
sbb
push
das
xor
inc
call
dec
or
retf
lods
or
cmp
mov
mov
adc
retf
push
mov
add
jno
shl
or
jnp
ds
push
aaa
repz
int
js
pop
mov
stc
sub
push
cmps
cmp
add
and
xor
loop
or
dec
pusha
mov
loope
add
xchg
sub
cmp
retf
pusha
je
loopne
dec
jecxz
and
xor
call
xchg
js
fcom
js
nop
add
imul
out
sub
jp
icebp
lea
hlt
mov
fdivr
daa
cdq
sbb
and
in
add
ret
jns
mov
clc
xor
dec
mov
or
or
ret
push
xchg
cld
add
pop
inc
jge
jmp
(bad)
clc
stos
movs
loope
and
xchg
jae
pop
dec
nop
mov
stc
dec
rol
js
push
daa
loop
repnz
cmps
je
(bad)
dec
sbb
repnz
cld
hlt
and
js
sbb
bound
fwait
push
pop
mov
call
rcr
imul
mov
or
and
or
or
test
or
cmp
cmp
jp
ds
add
add
aas
ficom
and
lahf
jmp
lock
dec
jb
leave
dec
js
jne
pop
scas
or
imul
and
mov
mov
outs
fdivr
(bad)
and
movs
ins
jbe
push
outs
and
sahf
(bad)
xchg
ret
lods
out
js
repz
cwde
adc
adc
mov
in
(bad)
adc
inc
retf
adc
fld
dec
inc
clc
xchg
jb
scas
gs
pop
inc
xor
call
sub
repnz
out
sbb
dec
cld
stos
outs
add
adc
outs
push
push
(bad)
sub
lea
push
xchg
xor
xchg
clc
das
lea
imul
sbb
mov
out
in
xor
sti
shl
fadd
mov
hlt
xor
mov
or
gs
dec
push
call
jne
mov
out
sub
jecxz
dec
push
aam
mov
cmps
mov
test
push
dec
adc
popa
add
aad
out
dec
jl
inc
mov
xchg
xor
xchg
sar
mov
jb
inc
fdiv
xchg
jp
cmc
lock
fiadd
cmc
or
dec
cmc
jo
mov
pop
(bad)
int3
dec
dec
jno
pop
or
xchg
(bad)
cli
scas
cwde
mov
mov
(bad)
in
jmp
adc
pop
cmp
in
push
mov
dec
inc
xor
mov
movs
stos
mov
pusha
pop
adc
je
icebp
jp
test
cdq
(bad)
ficomp
mov
shr
in
mov
cld
push
mov
gs
or
cmp
pop
xchg
mov
outs
dec
jne
pop
test
xchg
pop
push
xchg
xchg
adc
movs
and
(bad)
neg
jmp
pop
add
xchg
clc
into
fadd
rol
shl
xor
lock
push
inc
out
jno
je
dec
pop
or
ret
inc
mov
push
scas
popa
push
std
sti
call
adc
dec
cdq
mov
iret
push
rol
dec
mov
mov
mov
pop
int
or
dec
(bad)
jns
ja
mov
push
adc
cmps
frstor
mov
sbb
aad
mov
scas
aam
pusha
pop
cdq
pop
mov
jp
loop
stos
push
lds
dec
xor
mov
(bad)
in
loop
xor
sub
ins
jg
mov
dec
push
add
shl
lahf
adc
cmpxchg
sub
pop
sub
pop
pop
adc
imul
and
not
sbb
xor
fwait
clc
aad
mov
shl
popa
mov
pop
push
sub
xchg
ret
or
ja
retf
rol
jns
push
cmp
into
cmp
daa
jbe
fld
pop
xchg
popa
daa
dec
cmp
js
push
sahf
in
sbb
or
lods
inc
mov
hlt
lods
xchg
ins
into
xor
jne
aam
enter
jecxz
mov
das
(bad)
into
push
jnp
retf
outs
pushf
mov
or
out
pop
mov
lea
loopne
push
inc
push
inc
sbb
cli
pop
fadd
and
xchg
cli
std
push
mov
pop
adc
sahf
shl
push
cmp
inc
add
cmp
jne
out
mov
cmp
aaa
mov
jg
pop
lds
mov
cwde
push
pop
xchg
ret
jo
xor
dec
xor
lock
sub
lock
sbb
fldcw
and
test
push
cmp
in
movs
mov
lock
xlat
imul
(bad)
repnz
fwait
adc
ret
jg
mov
call
push
fnstenv
pushf
or
dec
ds
add
lahf
and
adc
jno
jb
mov
pop
xchg
or
or
dec
int
pop
push
jle
(bad)
loop
movs
xor
fs
jp
mov
repz
inc
lahf
(bad)
out
jo
loop
xor
neg
ins
inc
fcom
outs
leave
test
xchg
xchg
mov
inc
int3
cmp
shr
mov
jle
test
push
pop
stos
push
test
pusha
inc
pop
pop
jl
xchg
outs
cs
rcl
pop
cdq
enter
leave
hlt
or
(bad)
mov
aas
sti
add
retf
hlt
or
call
hlt
call
inc
outs
out
ss
push
inc
sub
sti
repnz
fcomi
push
jne
stos
cmp
xor
and
xor
push
ret
adc
inc
test
sub
ror
cs
outs
pop
cli
stos
jmp
jb
mov
sbb
mov
xor
inc
mov
push
or
leave
ret
fsub
ret
inc
dec
jb
pop
sub
es
lods
push
leave
mov
adc
loop
mov
sub
pop
xchg
adc
sub
rol
or
or
pop
addr16
cmc
push
push
and
add
dec
rcl
rcr
jbe
xlat
pop
outs
cwde
and
inc
ja
and
push
rcr
pop
add
cmc
push
(bad)
sub
mov
(bad)
xchg
push
cmps
repnz
jae
jo
mov
inc
jmp
fistp
fisttp
adc
cmp
cmps
ret
imul
leave
mov
(bad)
push
xchg
xchg
xor
ds
mov
(bad)
push
push
push
cmp
into
cmp
mov
push
call
jl
gs
movs
lods
mov
movs
adc
lock
xor
in
adc
pop
shl
inc
add
jnp
(bad)
ds
inc
xchg
call
push
repnz
nop
push
outs
dec
jb
rol
sub
or
inc
das
iret
and
das
fsubr
xchg
pop
push
dec
mov
loopne
movs
ret
jnp
and
and
or
movs
xor
sbb
pushf
(bad)
mov
iret
sub
in
int
jo
add
in
and
cmp
in
jp
aaa
test
mov
jae
stc
movs
fiadd
sbb
mov
push
or
out
mov
sbb
sbb
xlat
popf
call
jmp
sar
mov
pop
or
pushf
frstor
or
loope
jmp
call
mov
mov
jmp
and
js
jmp
sub
push
mov
sub
fwait
lds
bnd
xchg
xor
xchg
xchg
jnp
mov
call
add
sbb
into
mov
adc
repnz
dec
add
xchg
icebp
ret
mov
and
stc
pop
(bad)
jnp
pop
mov
leave
push
(bad)
test
xor
push
or
scas
and
lss
pop
lahf
cld
xor
sub
and
and
add
inc
les
cmp
mov
repnz
push
fild
and
int3
leave
dec
or
push
xor
cmp
test
outs
xor
sbb
mov
daa
add
xor
adc
jmp
jbe
shl
popa
cmp
fild
leave
call
adc
push
lds
sar
paddsb
repnz
or
mov
cmp
push
xchg
and
in
aas
sub
jns
ins
int3
cmp
adc
into
das
xor
fist
jg
mov
mov
(bad)
jb
push
push
cmps
adc
inc
push
imul
jp
or
inc
and
(bad)
dec
iret
cmps
aaa
lock
stos
or
mov
sbb
fcom
pop
push
add
push
out
add
out
xchg
jge
mov
jp
mov
adc
and
add
gs
pop
jmp
or
adc
ror
movs
sbb
xchg
call
(bad)
repnz
sti
das
imul
jmp
xlat
and
fcomp
adc
retf
push
cmp
jno
test
xor
push
mov
or
mov
data16
mov
xchg
retf
mov
loop
adc
pop
popf
jecxz
push
fisttp
cmps
mov
or
and
inc
sti
inc
xor
fwait
jno
sub
js
push
jle
or
sub
xor
add
cmp
jno
push
aam
rol
retf
std
jo
call
aad
or
push
mov
in
xor
sub
inc
iret
jg
outs
push
loop
retf
and
loope
and
cmp
adc
add
loop
sahf
scas
out
jmp
dec
inc
pop
inc
movs
sub
sub
dec
adc
push
mov
mov
push
pop
push
xchg
push
cmp
mov
das
xor
cld
dec
daa
fisttp
cmp
outs
pop
and
xor
pop
test
sub
xor
pop
out
mov
popf
xchg
cmc
dec
push
adc
push
sbb
push
sub
(bad)
sub
(bad)
mov
dec
jo
push
mov
pop
test
out
nop
je
loopne
mov
xchg
mov
dec
pop
test
jl
dec
retf
(bad)
mov
sub
xor
jne
cvttps2pi
shl
int3
xchg
(bad)
jmp
push
stc
ds
mov
(bad)
mov
mov
pop
xor
push
add
mov
jae
mov
sub
mov
add
sub
xor
push
enter
in
ins
movs
push
idiv
pop
mov
mov
rcr
mov
mov
cmp
mov
scas
sbb
and
adc
outs
cmps
mov
xchg
hlt
push
jecxz
imul
mov
push
mov
xchg
push
out
mov
sbb
mov
mov
out
push
sub
in
mov
pushf
mov
adc
fnstsw
cdq
pop
push
rcr
or
jbe
test
cmp
xchg
and
sub
ret
xor
push
push
jmp
push
mov
cli
cmp
scas
pop
push
push
mov
gs
scas
cmp
push
or
fnsave
mov
add
jbe
mov
loope
ja
cmp
repz
and
scas
outs
xchg
nop
fsubp
mov
cwde
stos
xor
adc
cmc
cmps
scas
in
add
loope
fwait
and
cld
cmps
cmp
xor
in
or
inc
call
iret
dec
shr
add
retf
mov
hlt
icebp
int3
test
(bad)
jno
(bad)
cdq
sbb
push
pusha
aam
pop
cmc
jns
mov
pop
stos
push
(bad)
xor
pusha
pushf
js
add
cli
xchg
xlat
aam
mov
imul
adc
pop
stc
lahf
ins
mov
xor
(bad)
and
jbe
call
jo
pop
enter
iret
movs
cs
or
xchg
ret
or
xchg
jbe
sbb
pop
xchg
fidiv
stos
inc
cmp
rcl
fisub
mov
cld
pop
cmp
xchg
and
or
xchg
xor
sub
movs
call
rcl
das
mov
adc
repnz
ror
sub
mov
test
mov
(bad)
(bad)
or
ins
dec
sbb
and
enter
shl
dec
js
jle
jns
lods
es
pop
lahf
das
fdiv
sar
fidivr
daa
mov
aam
cmp
sbb
movs
repz
(bad)
loop
ins
loopne
je
(bad)
cmp
adc
inc
stc
ja
mov
out
pushf
fcmovne
push
fbld
mov
loop
test
mov
xchg
push
xor
add
push
or
mov
out
xor
imul
or
or
fst
sbb
shr
sub
lahf
ja
repnz
leave
push
sub
xor
fidivr
sar
cmps
push
and
mov
nop
adc
sbb
retf
sub
hlt
rol
std
push
fs
ins
in
adc
jl
pop
jnp
push
adc
in
cmp
mov
push
add
xor
mov
and
(bad)
dec
arpl
xchg
ja
sti
xor
adc
push
or
dec
sahf
push
dec
cmp
out
imul
into
movs
pop
retf
cmp
js
push
gs
push
ss
leave
adc
call
sub
mov
adc
adc
icebp
nop
jecxz
xor
add
add
push
retf
adc
movs
xchg
sbb
add
lock
lea
and
vaddpd
ja
or
and
hlt
je
inc
mov
aaa
sub
cdq
jmp
inc
mov
sbb
gs
imul
jle
movs
add
fld
or
pop
scas
adc
inc
and
mov
fs
pop
in
dec
sbb
ror
lds
std
daa
sub
push
mov
mov
jecxz
cmc
jnp
push
xor
add
rol
and
sbb
push
add
in
fimul
loop
mov
xor
jmp
inc
lods
movs
mov
xlat
mov
mov
xor
xchg
and
ja
aas
sbb
mov
js
fsub
rcr
(bad)
jmp
dec
js
add
push
sti
or
sahf
cwde
rcr
push
xor
test
daa
fdivp
je
pop
sbb
daa
sbb
inc
inc
push
test
mov
or
scas
adc
xor
scas
aaa
jmp
inc
pop
push
mov
in
movs
shr
pop
leave
xchg
enter
je
outs
dec
mov
xchg
in
out
push
cld
mov
je
out
jae
pop
mov
sub
adc
jmp
rol
pop
jp
sbb
lods
jg
xor
pop
fst
xchg
xor
mov
or
lds
movs
jbe
pop
(bad)
dec
loop
sti
cmp
xchg
aam
in
leave
jle
fdivr
inc
sbb
push
dec
jle
pop
fs
pop
add
mov
cmp
loopne
mov
or
out
shl
int
xchg
mov
jecxz
jbe
xor
or
lds
sbb
pop
xor
jno
retf
jecxz
mov
cmp
stc
xchg
and
call
mov
mov
aaa
mov
loop
adc
popa
mov
mov
mov
shr
sbb
mov
jmp
mov
cmp
dec
movs
pusha
neg
adc
fwait
xor
mov
jp
loope
icebp
mov
sub
jo
arpl
jmp
sub
mov
iret
in
test
fmul
mov
cs
mov
xchg
fwait
jmp
loop
push
mov
mov
xchg
call
cmp
aad
sbb
out
mov
inc
mov
push
imul
aas
mov
xor
mov
mov
add
pop
cmps
xchg
xchg
ss
(bad)
fnsetpm(287
ins
sahf
aas
jne
mov
(bad)
sub
movs
mov
mov
fsub
jo
in
dec
movs
pop
sar
xor
jle
(bad)
ror
mov
mov
lods
repnz
dec
sub
fstp
and
pop
sub
pusha
aaa
push
call
movs
dec
and
or
mov
cmp
mov
or
imul
adc
pop
jns
mov
ds
in
fidiv
cwde
push
mov
xchg
in
add
or
fadd
xchg
sub
in
rol
mov
outs
or
or
pop
dec
call
movs
int
mov
mov
inc
mov
pop
or
jmp
test
call
rcl
sbb
pop
pop
sub
movs
loopne
xor
push
movs
fisttp
pop
push
imul
lods
push
pop
data16
and
jae
push
shr
lahf
adc
fsubr
cmps
or
cmp
push
mov
arpl
fidivr
add
outs
mov
enter
imul
dec
mov
jne
hlt
and
pop
mov
rcr
inc
into
icebp
loopne
jmp
out
or
mov
in
jns
aam
mov
push
lds
fdivr
movs
add
repnz
sbb
xchg
mov
adc
cmp
scas
pop
mov
rcr
mov
mov
(bad)
fsubr
ss
and
dec
xor
shr
rcr
mov
ja
xor
jmp
repz
xchg
pop
and
fucomip
pop
jecxz
dec
push
pop
fdivr
fcmovnbe
pop
push
arpl
(bad)
clc
inc
jo
shl
repnz
sub
rcl
repz
cs
mov
dec
rcl
in
or
lea
int3
shl
arpl
hlt
push
pop
or
rol
int
lock
fmul
ins
inc
loopne
std
adc
out
mov
mov
xchg
fdivr
clc
cld
pop
sbb
xlat
in
dec
pop
adc
das
add
push
ja
ror
sub
test
push
(bad)
lea
fdivr
adc
nop
push
push
jne
xor
dec
dec
loopne
jmp
or
in
rcr
xchg
xor
sbb
cwde
or
xchg
sub
mov
packsswb
jns
imul
leave
stos
pop
test
jno
mov
mov
or
adc
push
push
fs
or
fld
outs
mov
pop
sub
scas
pop
mov
in
xchg
add
cmps
inc
(bad)
mov
ins
xchg
(bad)
dec
and
retf
dec
fiadd
bound
hlt
popa
sub
xor
mov
mov
xchg
jl
add
ret
push
sub
cmp
dec
movs
push
dec
push
scas
inc
jg
fimul
sbb
add
mov
std
pop
sub
aad
cmc
call
sbb
addr16
or
sub
sbb
or
std
xchg
es
inc
les
mov
add
les
push
out
stos
stc
mov
xor
std
jp
jnp
in
mov
jo
inc
mov
aad
cmp
outs
pop
mov
inc
jecxz
fild
jecxz
adc
jae
pop
sub
add
(bad)
sub
xor
addr16
mov
sar
sbb
bswap
ins
or
aas
push
imul
add
push
daa
out
push
ret
push
lods
mov
dec
ins
inc
pop
ins
mov
adc
add
cmp
mov
mov
dec
cdq
cmp
sbb
test
jge
scas
add
or
(bad)
push
jmp
add
mov
push
fninit
jns
std
mov
fstp
jg
jp
stos
sar
rcr
js
ins
fucom
push
cmp
dec
or
dec
sub
xchg
dec
jmp
sbb
cmp
jno
fs
xor
stc
ins
pop
(bad)
adc
shl
xor
inc
and
jmp
ret
mov
cwde
std
loope
or
cmc
mov
call
test
(bad)
push
or
cmp
test
add
mov
push
jno
pop
rcr
dec
xor
jnp
jbe
mov
sbb
hlt
data16
mov
rol
and
(bad)
aaa
push
retf
push
inc
add
(bad)
repz
imul
popf
ins
aad
pop
mov
rcr
scas
sbb
add
movs
add
pop
pop
sbb
sbb
adc
or
push
fs
push
push
jo
arpl
jae
es
add
sub
sbb
fldenv
mov
or
xor
dec
fs
and
push
cld
into
jmp
inc
or
lahf
lods
lds
add
cmp
test
arpl
jmp
(bad)
out
out
fstp
jae
stos
aam
gs
pop
adc
(bad)
scas
fist
rcr
and
adc
jns
xor
cwde
and
mov
sub
hlt
fnstcw
xchg
in
sub
repz
dec
inc
aam
push
jb
pushw
mov
and
pusha
call
neg
loop
inc
push
jecxz
cmp
cmc
bswap
repz
xchg
push
leave
dec
cmp
mov
pop
enter
stos
call
mov
xor
in
je
mov
mov
cmps
pcmpgtd
add
loopne
xor
or
mov
and
lods
(bad)
(bad)
popf
ret
jcxz
jle
jl
pop
sbb
aam
in
add
repz
push
sub
pop
dec
lahf
leave
inc
in
das
jl
fld
pop
lock
lds
inc
shr
mov
out
call
retf
dec
pop
sar
cmp
dec
mov
and
inc
repz
call
push
mov
xchg
mov
ins
clc
repnz
sub
xor
out
sub
lock
call
jns
sbb
xchg
jae
xor
pop
inc
lock
xor
xchg
scas
cdq
pop
mov
leave
data16
scas
outs
dec
sahf
cdq
aas
xlat
adc
push
jbe
adc
mov
ror
or
push
ins
popf
add
and
int
fdiv
cld
pop
push
sub
sbb
popa
jns
aad
jge
add
dec
es
fstp
mov
cld
mov
lods
and
dec
adc
pop
mov
aam
inc
repz
in
jmp
lods
ucomiss
adc
test
jmp
adc
pop
out
je
(bad)
push
popa
sub
(bad)
lahf
jmp
adc
sbb
repnz
leave
adc
xchg
leave
xchg
push
popf
pop
mov
scas
cwde
pop
lods
mov
movsx
sbb
out
pop
faddp
out
push
dec
loop
mov
dec
xor
jo
or
mov
jmp
mov
loop
add
ins
ja
xchg
int
jno
test
mov
call
ins
pop
cmp
mov
repnz
in
imul
retf
outs
push
dec
sub
addr16
pop
xor
ret
inc
mov
adc
cld
ret
jno
in
xchg
scas
cmps
and
dec
xor
out
and
mul
in
inc
dec
out
push
inc
ins
xchg
cmp
push
das
xchg
repz
ret
or
in
cmps
les
popa
xor
xchg
jmp
je
pop
sbb
add
loopne
retf
repz
bound
inc
pushf
push
xchg
jbe
(bad)
popf
jne
sbb
stos
ret
gs
icebp
sub
fimul
icebp
imul
repnz
sub
xor
scas
jmp
js
fist
call
in
pop
outs
je
pop
mov
into
jmp
jne
mov
sub
in
pop
xchg
cmps
imul
xchg
inc
mov
xor
int
scas
(bad)
fcmovb
in
xchg
inc
inc
fs
out
es
push
xor
jle
cmps
fistp
cli
xor
out
jae
mov
push
jne
lods
push
sub
pushf
lahf
popa
ret
pop
xchg
mov
and
aaa
(bad)
mul
scas
mov
sar
pop
mov
cmps
icebp
add
rol
dec
scas
jecxz
into
inc
inc
retf
inc
mov
mov
movs
push
xlat
add
pop
push
sbb
cmps
nop
add
test
or
and
and
rol
jbe
fldcw
(bad)
adc
sbb
or
jne
stos
inc
adc
jmp
lds
xor
aaa
and
inc
add
outs
vpunpckhqdq
ja
dec
popa
mov
xor
or
fld
add
fwait
shl
mov
pop
mov
neg
int3
daa
and
sbb
jmp
or
jmp
adc
xchg
popf
out
stos
push
push
xor
mov
mov
lock
inc
add
test
adc
push
enter
mov
add
psllq
jmp
add
test
cmp
dec
(bad)
cmp
jo
aad
in
or
sub
fdiv
and
xor
sbb
cwde
and
inc
fidivr
pop
(bad)
dec
inc
ds
loope
comiss
mov
pop
inc
arpl
pop
jno
dec
icebp
dec
outs
sbb
mov
xchg
test
fdiv
xchg
js
inc
sub
push
inc
mov
test
retf
cmp
jns
jb
inc
xchg
adc
sub
and
in
add
cmp
add
aaa
and
les
cmp
xchg
push
adc
pop
mov
sub
jp
sbb
jbe
sub
or
mov
repz
push
lahf
gs
xor
mov
cwde
ins
jl
mov
cmp
push
(bad)
push
stos
imul
inc
cmc
call
or
retf
scas
sbb
xchg
call
adc
(bad)
mov
leave
pop
dec
daa
cmp
sub
push
jbe
dec
mov
stc
mov
jo
mov
pop
(bad)
clc
push
cmp
sub
into
ss
pusha
cwde
push
jle
mov
jp
adc
dec
xchg
xor
mov
cmp
std
add
test
or
mov
repnz
mov
cld
xor
push
ret
jnp
outs
inc
cmps
dec
xor
cli
jns
mov
jecxz
and
jbe
stc
dec
adc
retf
je
sub
int
jmp
push
into
sahf
mov
pop
test
jo
pop
add
imul
sti
das
enter
sbb
es
add
pop
test
cld
cmp
adc
adc
dec
mov
jb
fist
jp
push
xor
or
add
adc
jns
in
leave
jecxz
push
cdq
stos
and
push
lahf
loop
xor
scas
adc
call
cld
inc
sahf
out
adc
int3
sti
and
stos
daa
loopne
icebp
fisub
mov
daa
cdq
pop
loope
cli
sbb
push
outs
or
cmp
ds
pop
jmp
jns
call
or
or
push
stos
jmp
dec
in
ror
jmp
mov
lods
in
jg
xor
push
xorps
inc
pop
popa
jb
jae
fsub
pop
and
shl
jae
loop
ss
movs
mov
adc
clc
push
or
push
adc
das
or
mov
lods
and
int3
jl
mov
pop
cmc
out
push
cmp
adc
imul
add
mov
mov
loopne
out
inc
retf
xchg
fistp
dec
xchg
xchg
out
dec
push
sub
pop
jge
ds
mov
push
sub
sbb
xchg
jb
ret
bound
jmp
cdq
fs
cmp
sbb
xor
push
outs
(bad)
sbb
pop
hlt
adc
xchg
cmps
rcl
mov
clc
push
xchg
inc
sub
adc
ret
inc
pop
mov
cmp
fidiv
call
add
adc
bound
dec
nop
adc
aas
xchg
push
ret
mov
push
xchg
lds
mov
iret
dec
xor
xchg
adc
mov
fwait
aad
jp
and
das
and
ja
pop
mov
retf
xor
cmps
push
loopne
sbb
movs
iret
test
ds
push
mov
test
pop
ins
out
mov
add
ins
xchg
xor
dec
cmp
and
jnp
mov
inc
int
cli
push
daa
in
out
icebp
xchg
loopne
in
lds
dec
dec
adc
jb
popf
lds
mov
push
adc
sub
dec
stos
push
jl
mov
jb
pop
sub
xchg
push
aas
mov
inc
dec
dec
xor
shl
dec
sbb
stc
mov
call
arpl
push
pop
xchg
inc
push
cmp
jb
popf
and
rcl
pop
aam
fcom
xor
ins
sbb
push
stos
xchg
inc
xor
sub
or
pop
fbstp
hlt
push
not
stos
add
inc
cmp
ins
and
fcomp
in
add
sti
aam
aam
adc
cmp
pop
or
sti
jns
not
fdivr
fidiv
loope
jl
movs
sub
cmp
lock
(bad)
ds
jp
movs
mov
call
test
nop
inc
xchg
push
test
es
mov
sub
lahf
clc
aaa
mov
jnp
mov
sub
(bad)
adc
add
nop
rol
and
(bad)
mov
jmp
cmp
(bad)
loop
jmp
pop
pop
das
xchg
dec
clc
call
xchg
hlt
jl
fisub
sbb
mov
aam
pop
adc
xchg
dec
jp
push
je
xchg
mov
xor
mov
rol
fiadd
pop
mov
cmc
(bad)
out
es
test
jge
popf
mov
sbb
in
lock
push
retf
outs
std
test
or
xlat
fcmove
dec
sub
and
and
addr16
xchg
mov
stos
test
cmp
mov
cmp
out
mov
out
pop
mov
pop
aad
push
aam
cmps
mov
jp
enter
sbb
jbe
ss
scas
test
mov
or
shr
sbb
pop
inc
out
jns
mov
xlat
pop
or
adc
pop
or
rol
leave
add
cs
sbb
pop
sbb
stos
and
or
sbb
loope
aam
shr
stos
jl
ins
sub
out
fidivr
ja
adc
cmps
in
mov
sbb
ja
adc
scas
cmp
stos
mov
(bad)
retf
(bad)
imul
leave
sub
scas
mov
iret
enter
mov
psrlq
mov
mov
scas
jbe
jg
aas
aas
in
data16
jnp
sub
aas
mov
xor
pop
cs
not
rcl
into
pop
jnp
iret
cmc
push
loope
push
mov
js
aas
popf
pop
pop
lock
add
fdiv
inc
adc
pop
cmc
sub
pop
or
and
jo
popa
je
jo
xchg
(bad)
xor
lock
repz
(bad)
jge
push
fcomp
loope
sub
pop
mov
popf
adc
gs
jo
xlat
or
jne
sti
pop
inc
lods
and
inc
dec
jnp
xchg
popf
push
test
and
lods
mov
aam
lahf
and
clc
mov
and
ins
pop
div
pop
xchg
jle
jge
xor
mov
inc
loope
call
push
mov
sub
imul
push
jle
adc
scas
std
fild
dec
jns
cmp
inc
addr16
aas
jne
das
mov
(bad)
clc
sub
cmp
lods
loop
jnp
dec
or
das
movd
gs
adc
das
pop
scas
xor
sbb
dec
push
aad
jne
mov
mov
bound
lods
pop
mov
sti
jp
mov
gs
mov
adc
sbb
pop
cmp
in
sub
(bad)
in
ja
cli
in
repz
cmp
cwde
imul
pop
dec
push
adc
add
mov
popa
rcl
sbb
out
pop
cmc
lds
outs
pushf
cmp
dec
cld
cmps
js
mov
adc
arpl
pop
in
push
movs
mov
pshufw
imul
adc
sar
iret
out
xchg
into
jmp
retf
or
pop
inc
test
fadd
retf
retf
cwde
cmps
sbb
das
aas
sbb
imul
call
mov
sub
gs
pushf
jnp
in
leave
es
icebp
ret
aas
data16
xor
xor
inc
scas
cmp
adc
dec
mov
retf
popa
cwde
aad
stos
mov
push
mov
imul
loop
and
jle
mov
ins
mov
es
(bad)
aad
sbb
sbb
and
leave
mov
or
dec
and
mov
dec
movs
add
test
push
fistp
lea
aas
jnp
xchg
shl
ins
fs
cli
jb
fstp
je
cmps
mov
int
and
cmps
xor
sub
aad
adc
jns
mov
mov
or
pop
in
sbb
adc
fcom
pusha
xchg
fldenv
jb
addr16
pop
inc
or
out
into
arpl
push
inc
dec
cmps
test
call
push
inc
or
jnp
outs
jnp
ja
stos
inc
xor
loopne
out
int3
dec
mov
pusha
enter
jne
loopne
xor
mov
ins
jmp
and
mov
pop
push
mov
aad
neg
retf
cmp
ret
pop
pop
hlt
dec
xor
mov
mov
and
jae
push
out
mov
xor
mov
(bad)
out
stos
daa
cmp
mov
pushf
jg
dec
call
xor
xor
nop
retf
cwde
add
inc
sbb
or
cmp
das
xchg
jnp
mov
jg
lds
pop
dec
xchg
sbb
dec
adc
arpl
jl
add
xchg
lods
jo
fdivr
add
dec
adc
(bad)
jbe
lea
lea
mul
shr
call
(bad)
jmp
scas
cdq
in
int
std
sahf
jmp
ss
cmc
jno
and
fisubr
push
ds
fidiv
dec
and
hlt
jl
adc
bswap
push
dec
or
shr
sub
pop
dec
hlt
inc
test
popa
test
out
xchg
call
into
mov
in
jbe
jmp
sbb
fdiv
cmp
movs
sbb
shl
shl
mov
dec
lock
mov
pop
jbe
jg
in
jbe
lahf
outs
in
inc
imul
jg
les
pushf
les
mov
adc
mov
push
scas
icebp
jae
gs
xchg
mov
clc
sbb
jl
xchg
add
dec
mov
dec
xchg
adc
push
ins
and
loope
bound
int3
mov
xor
(bad)
rcl
stos
repz
int3
sbb
add
aam
cmp
and
jae
pop
and
into
fcomp
or
pop
lock
retf
retf
jg
bound
mov
icebp
cmp
aam
xchg
mov
rcl
mov
sub
out
(bad)
ins
jg
sub
shl
and
ret
loopne
xlat
jae
stos
call
add
push
out
into
shl
mov
and
push
call
inc
fcom
pop
mov
and
in
push
call
push
mov
adc
jb
shl
lock
ret
jmp
jbe
scas
enter
xchg
jle
arpl
(bad)
jecxz
pop
cmp
mov
add
sub
pop
sub
jl
scas
mov
jp
and
out
cmc
mov
and
cmc
push
and
imul
mov
ins
std
jnp
mov
mov
dec
fst
pop
dec
fstp
fsub
scas
int
icebp
pushf
scas
add
out
pop
xchg
push
fst
js
jne
inc
sbb
inc
cld
js
xor
dec
clc
ds
fsub
and
jne
shl
inc
(bad)
push
jl
sub
sbb
add
cli
mov
push
cmp
mov
add
cmp
vpslld
dec
adc
call
aas
or
out
jle
sbb
fucom
and
in
push
addr16
mov
fistp
inc
or
push
cmps
cmp
jmp
jnp
jl
aad
js
and
ficom
adc
xchg
test
rsqrtps
cmovb
add
or
inc
xchg
cmp
adc
push
retf
push
mov
mov
mov
xor
and
cld
mov
rol
aam
mov
fcomp
dec
inc
cwde
xor
lds
jnp
pop
add
mov
imul
fwait
repz
movs
imul
pop
dec
popf
pop
clc
push
mov
test
iret
out
xchg
into
pushf
in
push
push
leave
mov
and
ins
mov
hlt
clc
adc
into
xchg
(bad)
mov
mov
(bad)
push
mov
pop
mov
inc
xchg
xchg
(bad)
int
cmc
mov
mov
dec
jmp
repnz
sbb
mov
adc
sahf
fnstcw
and
(bad)
std
or
push
int
daa
mov
or
jns
out
aam
and
mov
ror
add
inc
add
test
inc
mov
push
cwde
mov
cdq
and
sbb
retf
test
fxch
sbb
stos
jg
ret
jno
loop
hlt
pop
lods
call
cs
jbe
adc
aam
das
sbb
scas
dec
cmp
pop
sti
cmp
cmp
cmp
cmp
mov
jb
out
add
test
fcmovu
or
lods
inc
jecxz
inc
sbb
(bad)
pop
pushf
test
jmp
xchg
sub
jbe
adc
xor
loop
jmp
lods
add
add
test
mov
adc
mov
mov
push
hlt
xchg
iret
xlat
jp
push
adc
and
pop
mov
call
cld
fisubr
mov
out
adc
mov
add
icebp
xor
pop
ja
les
imul
mov
outs
xor
and
dec
std
in
ds
iret
sbb
push
add
mov
nop
enter
imul
cmp
jge
ret
icebp
pushf
clc
xchg
or
aam
inc
scas
aaa
sub
sub
pop
lods
sbb
cmp
inc
xor
push
outs
fstp
dec
push
add
or
push
mov
cmp
pop
aas
in
or
jo
dec
je
mov
sti
mul
test
mov
adc
jb
cmps
mov
(bad)
stc
add
push
cmp
rcr
sbb
jecxz
cdq
test
or
sub
mov
ins
fcmovnbe
xchg
nop
enter
js
mov
mov
imul
add
jno
sbb
rcl
jp
ret
pop
dec
xor
xchg
fwait
outs
das
push
into
rcr
xchg
xor
adc
jg
popf
aad
sbb
push
inc
shl
lock
and
test
pop
cdq
sub
jp
ins
daa
add
mov
push
jne
punpcklbw
mov
(bad)
aaa
xor
(bad)
xchg
push
daa
and
add
xchg
jns
and
cs
push
outs
cmp
mov
pop
je
xlat
fwait
mov
lahf
push
sti
mov
or
xchg
push
enter
sbb
sbb
sub
call
icebp
push
sbb
mov
lea
dec
inc
rcr
jbe
iret
rcl
push
add
mov
outs
cdq
lea
sub
ficomp
push
jne
mov
and
xor
dec
mov
(bad)
retf
dec
ror
aam
jl
arpl
loope
daa
xchg
fcomp
loope
jmp
iret
loope
cmp
aad
jb
stos
fcmove
outs
punpckhdq
retf
sbb
repz
stos
pop
inc
fwait
loope
retf
add
hlt
jg
xor
movs
hlt
push
pop
rcr
vmwrite
sub
sbb
pop
adc
and
adc
fdivr
ret
in
mov
mov
sbb
cmc
popa
loope
into
inc
nop
into
mov
repz
in
mul
cmp
mov
or
out
loop
and
inc
repnz
xlat
and
push
and
loopne
loop
cmp
dec
and
bound
add
call
(bad)
repz
jmp
mov
pop
pop
call
sub
mov
sub
xor
lock
mov
lahf
push
das
mov
add
dec
or
pop
scas
xor
cmps
stos
fimul
dec
fcomp
sub
mov
cwde
mov
shl
push
test
and
pop
jmp
inc
xchg
sub
test
jp
mov
add
fistp
add
pop
adc
cld
loope
inc
je
pop
(bad)
(bad)
pop
mov
adc
int3
aam
mov
cmc
mov
mov
or
int3
aaa
mov
popa
jl
in
jno
and
repz
outs
push
mov
cld
sub
(bad)
or
clc
test
pop
cwde
neg
push
xor
push
adc
adc
(bad)
fnsave
ins
call
adc
fcom
adc
aaa
mov
pop
test
or
shl
lods
mov
out
jmp
outs
xchg
dec
inc
sbb
push
fcmovnb
cs
rcl
jp
push
out
push
or
lods
jae
and
and
push
pop
not
add
inc
pushf
lods
add
inc
mov
loopne
addr16
jo
scas
int
jg
push
adc
jmp
cmp
ja
imul
addr16
pusha
jne
(bad)
and
loope
fst
inc
inc
imul
leave
mov
push
push
clc
pusha
dec
jecxz
sbb
out
mov
ja
push
sbb
xor
inc
pop
in
rep
adc
cmp
cmp
xchg
mov
xchg
mov
add
cwde
fwait
adc
sbb
retf
mov
gs
adc
imul
or
dec
jge
popa
(bad)
inc
loop
mov
fwait
dec
clc
xchg
sub
fst
fs
mov
repz
ss
outs
pop
add
mov
ret
(bad)
repz
push
aam
in
sub
xor
cli
shr
ins
cmp
and
fs
popf
xor
pop
stos
dec
sub
sbb
bound
icebp
cld
stos
scas
push
xchg
and
loope
ret
jge
inc
mov
test
mov
jg
loopne
jp
mov
pop
jmp
call
lds
out
push
inc
mov
xchg
sub
mov
xchg
lods
lea
in
(bad)
loope
bound
mov
sub
pop
jg
test
rol
addr16
loopne
mov
pop
cmps
inc
jo
leave
jmp
stos
or
jecxz
lock
ret
jne
sub
mov
fadd
adc
cwde
sar
scas
inc
jb
xor
repnz
cmp
test
sbb
ins
xchg
xlat
jb
lea
cs
(bad)
xchg
mov
rcl
scas
outs
jge
out
sti
adc
xor
test
mov
scas
mov
stos
js
aas
cmp
shl
lods
sbb
xchg
dec
mov
xor
xor
dec
pop
(bad)
xchg
jno
and
xchg
leave
rcl
add
jl
xor
nop
jg
(bad)
lock
pop
add
dec
loop
sub
mov
and
inc
leave
adc
jb
push
xchg
pushf
fnstsw
push
mov
sbb
pop
aad
xchg
and
fwait
push
jge
fisttp
ins
(bad)
call
inc
bound
shl
outs
cwde
int3
ds
or
out
mov
cdq
xor
or
int3
out
or
pop
adc
icebp
pop
popf
inc
lahf
cld
out
out
adc
mov
loopne
add
cld
jge
fdiv
in
rcr
lea
push
inc
sub
pop
les
jno
cli
scas
push
(bad)
and
push
retf
sar
and
(bad)
push
out
mov
gs
jecxz
repnz
out
mov
out
mov
(bad)
jne
mov
fwait
ds
or
mov
inc
sbb
popf
mov
mov
out
cmp
sbb
or
mov
jmp
dec
(bad)
xor
mov
rcr
icebp
(bad)
ins
sbb
mov
jl
cmp
mov
cmp
xchg
inc
fisub
xchg
retf
stos
push
out
sub
fucomip
and
loopne
imul
pop
test
jmp
and
adc
mov
adc
push
or
retf
push
js
sub
sbb
lahf
sahf
int3
mov
int3
nop
mov
imul
cli
add
dec
push
icebp
cwde
jecxz
in
popf
daa
mov
(bad)
sbb
call
fwait
mov
xor
and
inc
(bad)
loop
pop
ja
mov
xchg
push
push
(bad)
cdq
add
out
sub
dec
dec
cmps
cmp
imul
xor
sbb
rcl
jmp
sbb
sbb
test
inc
bound
popf
cmp
adc
sbb
ds
inc
jecxz
out
cmc
push
icebp
xchg
and
test
xor
sbb
sub
rcr
dec
push
xchg
mov
scas
adc
push
ins
inc
dec
mov
and
push
add
(bad)
xor
rcr
jbe
stos
adc
retf
sub
xchg
mov
mov
pop
hlt
mov
(bad)
xor
in
cmp
pop
pop
sub
jb
scas
pop
fs
cld
jae
outs
fwait
repnz
jb
jns
xchg
or
pop
push
jp
or
jle
out
repnz
int3
int
cmp
js
loopne
push
mov
in
sbb
js
popf
pop
outs
push
(bad)
sbb
jb
xchg
mov
daa
lahf
push
movs
push
inc
into
call
sub
mov
sub
mov
jg
add
mov
jmp
imul
sub
and
ja
lds
sbb
sub
adc
inc
scas
hlt
mov
adc
or
mov
inc
jns
in
xor
lea
int3
leave
gs
ss
out
pop
inc
fldcw
xchg
jl
jmp
jle
fcom
movs
adc
es
iret
add
and
pusha
repz
lods
push
pcmpeqw
les
pusha
(bad)
loopne
jno
fisttp
in
mov
mul
sbb
mov
in
mov
cmps
mov
pop
cli
and
stos
jno
jecxz
fdiv
dec
repz
ins
mov
(bad)
sti
ret
arpl
outs
je
add
xor
jp
sbb
in
mov
pushf
mov
lods
shl
dec
mov
daa
and
mul
sbb
xor
pop
in
stos
sub
shl
lods
and
ss
lock
repz
pop
ror
inc
lds
ins
inc
stc
and
and
inc
iret
dec
imul
(bad)
sbb
jge
push
jge
add
dec
retf
fist
sbb
xlat
inc
fidiv
pop
(bad)
cdq
push
and
and
ret
mov
test
xchg
movs
sub
das
adc
jno
xchg
stc
(bad)
and
lea
pop
add
stos
add
dec
sub
aaa
mov
sub
push
xlat
repnz
mov
mov
pop
shl
push
lods
stc
cs
in
addr16
stc
call
fcmovnb
mov
push
ins
sbb
test
pop
jmp
call
inc
cmp
push
adc
or
pop
in
ins
jmp
ins
push
sbb
jmp
lahf
xor
mov
mov
in
out
mov
addr16
adc
jo
mov
pop
adc
pop
cli
sub
inc
dec
jmp
(bad)
sbb
sub
mov
mov
or
int
add
sbb
push
sti
arpl
push
mov
dec
aaa
cmp
push
(bad)
leave
push
int3
sbb
lds
out
out
inc
pop
hlt
(bad)
clc
stc
xor
xchg
clc
inc
(bad)
int
mov
mov
cmp
jno
mov
lock
in
test
aam
xor
fwait
pop
mov
jb
push
cmp
sahf
jg
xchg
pop
retf
jge
push
mov
cmp
imul
es
jbe
mov
(bad)
sti
out
xchg
js
mov
(bad)
xor
cmp
mov
pop
add
sbb
jo
add
add
mov
in
push
fdiv
add
cmp
ror
lock
scas
jno
mov
mov
dec
dec
in
mov
ret
lea
ja
fwait
jl
xchg
xchg
cmp
adc
ds
cmp
aad
out
mov
icebp
inc
mov
call
dec
push
mov
popa
dec
cmp
push
out
lods
or
repz
pop
cmps
das
adc
retw
fstp
sbb
xor
f2xm1
jl
mov
and
aad
cmp
retf
movs
sub
xor
in
mov
push
add
adc
imul
adc
stos
das
iret
fs
mov
sbb
mov
mov
imul
test
inc
push
dec
or
push
mov
fmul
pop
mov
cmp
xchg
out
lods
imul
out
push
pop
mov
jne
test
mov
aaa
push
push
mov
movs
xor
pop
dec
push
repnz
mov
mov
adc
xor
movs
sub
add
inc
jecxz
xchg
sbb
cmp
sub
mov
fsub
pop
sub
push
cmp
std
sbb
lock
out
(bad)
mov
cld
sahf
(bad)
dec
jp
or
mov
mov
mov
cmc
lea
sub
and
mov
jmp
stos
push
sbb
aas
jo
add
dec
push
pop
mov
leave
mov
pusha
dec
pop
inc
xchg
in
mov
pop
lea
cmp
xor
ja
sahf
and
retf
mov
cwde
mov
fistp
fs
mov
retf
xlat
(bad)
iret
imul
or
arpl
pop
(bad)
out
pop
loope
jbe
nop
xor
lods
and
xor
lds
and
nop
in
aad
push
stc
xchg
fld
pusha
cmp
pop
inc
sub
fnstenv
repnz
mov
mov
jle
push
pop
inc
dec
add
mov
inc
pusha
imul
jb
fsub
cs
mov
rcr
inc
cmp
mov
mov
and
int3
jecxz
adc
mov
push
(bad)
fisttp
or
lock
ja
mov
push
cmc
sar
enter
mov
add
shl
fwait
lods
dec
fcom
dec
jge
sub
shl
push
leave
xchg
repz
call
push
pop
int3
enter
xor
mov
dec
inc
sub
rcr
loopne
cmp
retf
jle
or
adc
int
cwde
jl
imul
cmps
adc
inc
ss
imul
jg
sub
outs
or
sub
ror
cmp
out
scas
aaa
and
cmps
jg
test
repz
movs
fwait
retf
fist
add
nop
mov
aaa
pop
call
or
push
das
dec
sub
mov
add
xchg
mov
adc
dec
je
mov
and
cs
push
and
and
sbb
dec
out
jl
xchg
cli
sbb
or
imul
aad
cmp
test
sub
test
mov
sar
scas
and
xchg
out
cmps
data16
jo
push
pop
rol
push
fcom
pop
dec
xchg
push
jno
pop
mov
inc
sub
mov
daa
inc
out
sub
add
test
jnp
scas
das
outs
(bad)
sub
fwait
cmp
ja
cmp
push
jle
cmp
mov
rcr
fiadd
inc
mov
or
jg
(bad)
aam
ror
sbb
call
or
es
sbb
inc
repz
jecxz
out
arpl
push
xchg
outs
dec
inc
mov
xchg
or
mov
(bad)
xchg
aad
sbb
ja
aaa
repnz
into
(bad)
sti
push
mov
pop
arpl
les
sub
dec
aad
pop
retf
rcr
push
mov
mov
pop
shl
push
or
sub
cli
jle
adc
movs
repz
sahf
ret
fwait
jne
sbb
outs
dec
jnp
jmp
repz
sbb
inc
scas
mov
push
scas
jmp
retf
dec
into
out
sbb
mov
xchg
sahf
test
lods
xor
jmp
jp
cdq
hlt
add
xchg
imul
jle
push
retf
jecxz
mov
popa
js
jge
mov
adc
add
fmul
cwde
cdq
inc
lea
adc
inc
cmp
xchg
jp
(bad)
outs
pop
cdq
int3
push
adc
or
jl
dec
call
dec
pop
mov
icebp
mov
add
adc
mov
mov
cmc
sub
adc
jo
or
out
inc
in
mov
leave
lds
add
xchg
nop
cmp
push
lds
stos
inc
test
in
xchg
sub
lods
pushf
(bad)
jb
jns
dec
mov
jle
mov
dec
xchg
fcom
xchg
jl
add
(bad)
mov
mov
les
cmps
push
push
mov
adc
shl
ror
dec
bound
test
push
pop
loope
add
mov
add
cmp
nop
dec
jns
or
js
push
mov
fcmovbe
scas
(bad)
call
or
ja
shl
or
scas
add
popf
inc
pushf
pop
inc
addr16
in
(bad)
jge
mov
fist
cmps
ss
or
mov
sub
dec
fsubr
push
adc
int
jecxz
js
cmp
jbe
icebp
sbb
std
aad
out
mov
ror
aaa
mov
mov
xor
fidiv
and
xchg
mov
or
mov
mov
push
pusha
push
pop
out
push
push
aad
and
out
outs
pusha
adc
aas
cmp
fisttp
pop
(bad)
scas
push
push
and
cmps
jo
ror
rcl
ja
cmps
and
jno
nop
std
(bad)
add
push
sbb
movs
fadd
nop
cmp
push
jle
jp
add
pop
jg
hlt
xacquire
sbb
mov
movs
mov
push
int3
and
leave
scas
mov
push
pop
dec
and
push
or
mov
ret
mov
sbb
pop
pop
enter
shr
rol
jo
(bad)
sub
lds
(bad)
or
ds
outs
push
addr16
pop
outs
pop
test
sbb
xor
aam
adc
cmp
xor
ror
popa
arpl
sbb
sbb
(bad)
push
movs
movs
mov
ds
add
enter
mov
or
fsubr
or
push
pop
jl
cmp
pop
xchg
xlat
xor
jg
es
into
sbb
adc
ret
or
lds
xor
ret
push
mov
and
sub
mov
ins
pushf
cs
lahf
inc
into
dec
mov
cwde
mov
retf
loopne
aam
inc
mov
call
inc
fstp
push
pop
xchg
fxam
cmps
push
cmp
movs
push
jmp
jo
test
sbb
cmps
adc
sbb
jge
mov
mov
sbb
lahf
xchg
bound
test
icebp
loope
jmp
inc
sbb
push
aam
lock
dec
mov
adc
jmp
pop
and
pop
xchg
(bad)
mov
mov
jl
(bad)
jmp
pop
xor
addr16
add
jnp
jl
inc
das
xor
ds
mov
mov
mov
push
cmp
mov
push
sahf
inc
jo
lea
aaa
or
or
pop
rcl
std
add
movs
jb
pop
xlat
sub
cs
sbb
in
mov
mov
xchg
idiv
mov
add
mov
push
push
inc
cmp
outs
jge
mov
fdiv
xchg
mov
stos
sti
push
into
in
in
or
push
cpuid
push
leave
and
xor
mov
jge
jae
ret
pop
mov
xor
dec
jecxz
cmc
jmp
imul
mov
push
and
(bad)
adc
out
push
mov
dec
add
lea
data16
xchg
mov
adc
into
inc
rcl
or
lods
sub
inc
push
mov
mov
movs
push
mov
ss
jecxz
out
aaa
push
push
sbb
dec
push
adc
mov
jne
adc
test
(bad)
fisttp
and
push
dec
sub
outs
xchg
shr
inc
clc
inc
or
cmps
sbb
push
adc
test
and
push
(bad)
aas
scas
das
les
std
xor
mov
push
dec
jne
adc
das
or
adc
xlat
xchg
xchg
jmp
push
and
pop
cmp
cmp
adc
sbb
xchg
outs
ins
push
test
add
int
sub
cmp
pop
scas
(bad)
out
dec
jp
ins
dec
xchg
aad
(bad)
fcmovnu
jb
and
pop
js
fdiv
xlat
aam
mov
inc
or
mov
sbb
and
(bad)
rcr
pop
dec
jle
xchg
adc
mov
retf
xchg
mov
mov
hlt
out
lahf
test
dec
mov
test
ds
push
sbb
jno
cmps
out
call
fsubr
lods
(bad)
aas
ins
push
in
mov
adc
mov
jo
retf
clc
frstor
xchg
rcl
in
mov
adc
sbb
into
sahf
ss
aad
or
fmul
jmp
jmp
stos
push
jle
lock
and
adc
std
cmc
sub
lock
cmp
xor
pop
mov
pop
adc
xor
sub
aas
cmp
xchg
pop
icebp
arpl
je
sbb
cmp
addr16
or
jbe
sbb
jns
jle
loopne
xchg
pop
and
jns
popa
(bad)
mov
cmp
jns
arpl
popa
xor
inc
and
imul
xchg
mov
cld
dec
inc
jno
push
xor
sahf
fmul
inc
popf
lods
mov
mov
dec
test
movs
rcl
(bad)
dec
mov
xchg
push
out
enter
pop
js
ds
arpl
jo
pop
cwde
add
jnp
lea
hlt
icebp
jb
push
bound
inc
ins
sbb
jmp
and
(bad)
lds
pop
mov
xchg
adc
int
jnp
sahf
or
imul
jae
jae
sbb
sub
ins
je
mov
xor
shl
movs
cmp
push
fsub
add
cmps
dec
jne
fcom
pop
push
std
inc
sub
cmp
ins
hlt
push
(bad)
adc
pop
mov
jp
scas
arpl
das
jno
lods
xchg
add
mov
fld
mov
hlt
(bad)
mov
cli
dec
mov
pop
jecxz
push
xchg
ror
mov
call
jmp
jg
or
dec
cmp
dec
xchg
dec
dec
cmp
mov
mov
test
xor
lods
sar
aaa
add
adc
loope
shl
aaa
fmul
dec
arpl
enter
out
out
push
outs
stc
test
(bad)
adc
in
in
aaa
wrmsr
push
push
add
push
leave
out
retf
xchg
mov
and
fisubr
jns
out
xchg
mov
int3
sub
das
loopne
sti
xchg
fyl2xp1
add
jae
out
push
push
in
jle
fmul
jne
movs
(bad)
iret
rol
dec
mov
or
mov
fmul
xchg
mov
daa
aam
cmp
jmp
mov
(bad)
cmp
mov
jne
push
cmc
pushf
aas
jo
xchg
pop
hlt
pop
sub
jp
pushf
mov
in
out
push
movs
neg
lods
jp
jb
cs
lods
movs
cmp
and
pop
mov
test
xchg
sub
loopne
or
das
inc
mov
cld
int3
mov
inc
stos
xor
cli
mov
inc
or
sub
nop
mov
pushf
xor
nop
sbb
dec
stos
xor
stos
sub
fldenv
mov
xchg
xchg
dec
or
and
add
xchg
cli
(bad)
int3
mov
aas
sahf
add
mov
pusha
xlat
shl
inc
sbb
cmp
pop
loope
lea
xor
mov
push
mov
push
add
mov
shl
sahf
enter
sbb
dec
(bad)
arpl
xor
ja
mov
popf
mov
loopne
rcr
mov
mov
fcom
adc
test
imul
add
movs
pushw
sbb
adc
xor
lahf
mov
push
adc
push
ret
xlat
pop
or
lahf
sub
add
sar
jns
int
add
icebp
mov
cmp
out
or
mov
mov
test
vmwrite
test
in
ret
movs
fsub
(bad)
rcr
ja
jmp
icebp
push
pop
es
std
pusha
mov
rcl
adc
inc
int
call
leave
mov
ret
push
shr
inc
xchg
repz
sbb
pop
lock
adc
(bad)
dec
mov
push
pop
or
icebp
mov
fidivr
sbb
jae
push
xlat
cmp
xchg
(bad)
mov
adc
push
adc
jle
(bad)
cld
and
push
xchg
sub
sub
pop
repz
not
adc
jnp
jnp
push
in
xor
mov
repz
nop
cmps
and
push
movs
jae
and
aam
or
sub
or
(bad)
cmps
mov
cli
test
leave
sahf
in
cmps
bnd
psubsb
movs
xchg
outs
push
jb
or
in
fcomp
dec
mov
mov
adc
arpl
fs
dec
push
and
enter
add
dec
xor
sti
jb
cmp
mov
jmp
sahf
cmp
lahf
pop
fucomi
shl
adc
out
loope
dec
pop
inc
stc
call
cs
out
push
int
xchg
xor
ins
ds
ja
outs
out
test
push
push
pop
je
nop
int
mov
xchg
out
vmaxps
ja
sbb
mov
cmp
push
xor
jmp
mov
nop
add
push
or
aam
push
or
jmp
xchg
mov
sbb
loopne
dec
ss
jne
xchg
and
xchg
fisttp
adc
adc
jno
pop
jp
or
int3
xor
sar
jmp
jl
sbb
xor
stos
test
loope
mov
shr
(bad)
fcomp
jge
jge
add
adc
lock
vzeroupper
movs
ret
fimul
inc
cmp
jmp
punpcklbw
xchg
add
cmc
sbb
mov
ins
test
fstp
ror
test
push
icebp
fbld
aam
sar
out
adc
cdq
pop
adc
scas
sbb
jno
(bad)
or
dec
pop
test
mov
jp
pop
test
jg
dec
mov
mov
or
lds
adc
test
or
cdq
scas
jns
sahf
inc
(bad)
shr
in
add
aam
aam
fsubr
mov
out
daa
(bad)
test
icebp
xchg
popa
stos
add
scas
stos
mov
shl
inc
stc
jne
sub
int3
cmp
xchg
push
(bad)
mov
outs
data16
jno
das
in
ret
iret
adc
mov
stos
inc
and
in
inc
mov
cmp
pop
mov
pop
push
or
iret
arpl
jmp
mov
pop
jbe
jg
cmp
ret
popf
cmc
je
std
cmp
fist
hlt
stc
push
lds
out
fdiv
clc
mov
(bad)
mov
adc
fdiv
sahf
and
mov
aas
test
movs
div
cmp
sub
imul
cdq
xor
fdivrp
arpl
pop
inc
inc
movs
in
inc
cmp
cmp
xor
mov
xchg
and
sbb
sahf
mov
sbb
shl
iret
cdq
and
pop
sar
push
loope
push
xor
(bad)
pop
push
aaa
xor
outs
mov
(bad)
xchg
sbb
cmp
mov
mov
or
rcl
into
push
inc
pop
adc
push
cld
sub
or
ja
outs
cli
dec
jbe
ins
inc
push
jno
stos
xlat
jle
dec
inc
es
arpl
xchg
sub
pop
add
cmp
iret
jg
ds
xchg
ss
test
mov
into
xchg
or
mov
sbb
mov
mov
cld
inc
in
test
(bad)
dec
imul
fs
push
mov
into
mov
rcl
data16
jmp
inc
add
mov
in
daa
cmp
dec
add
add
xchg
add
adc
scas
lods
mov
scas
scas
sub
div
loopne
cs
push
cmps
push
outs
call
jno
vpshad
push
scas
imul
icebp
ds
jecxz
setb
pop
pop
fsub
push
outs
les
int3
add
outs
mov
inc
mov
jmp
adc
xchg
push
xor
ins
iret
lock
or
sub
add
and
push
mov
(bad)
xor
sub
bound
fcmovbe
neg
sbb
xchg
sbb
(bad)
fadd
lea
loopne
xchg
mov
sub
sbb
xlat
pop
adc
ins
sbb
mov
cmps
sbb
cdq
popa
mov
xor
adc
das
leave
test
push
lds
pop
cdq
push
adc
dec
push
jmp
xor
test
(bad)
or
xor
xlat
pop
jp
(bad)
mov
frstor
push
addr16
icebp
mov
mov
mov
or
mov
mov
mov
in
dec
repnz
or
jecxz
sahf
in
out
test
adc
das
inc
pop
pop
and
(bad)
in
add
pop
dec
outs
jl
cmp
imul
pop
jae
fdivr
jmp
pop
or
imul
pop
aad
call
mov
sbb
ins
mov
add
add
add
js
ret
mov
xor
ret
mov
mov
sbb
inc
dec
mov
inc
mov
xlat
nop
clc
xchg
stos
ret
adc
test
inc
push
sbb
ret
(bad)
fbstp
icebp
std
(bad)
inc
add
mov
mov
imul
sbb
push
push
inc
mov
adc
retf
iret
mov
add
(bad)
xchg
cmp
push
sbb
into
daa
sbb
cwde
(bad)
jns
out
or
and
push
add
pop
repnz
push
loopne
clc
cmp
xor
into
test
pop
cmps
push
lea
iret
iret
scas
inc
lahf
push
sbb
dec
mov
std
mov
fdivr
and
or
jle
xchg
xor
in
das
cmp
sub
and
outs
daa
push
or
mov
retf
mov
pop
push
and
jb
xor
xchg
mov
push
dec
fsubr
mov
rcl
add
mov
cli
jnp
pop
add
mov
jg
mov
cs
aam
ret
mov
stos
nop/reserved
jnp
xor
ja
cli
sbb
xor
mov
stos
add
xchg
adc
add
xchg
push
cmps
xor
inc
in
sbb
das
adc
mov
outs
ins
sub
sti
aas
mov
mov
in
inc
push
imul
jo
add
xchg
adc
jle
pop
arpl
cmps
lds
aam
enter
sub
fcomip
mov
mov
mov
lds
mov
jb
shr
inc
stc
or
call
cmp
inc
push
ja
nop
push
cmp
rol
mov
(bad)
(bad)
xor
loopne
out
lds
jae
mov
dec
in
mov
xor
sbb
repz
test
pusha
pop
call
dec
clc
mov
mov
jp
nop
jno
out
mov
sbb
retf
popa
sbb
mov
int
jns
sub
mov
mul
push
lods
mov
push
movs
mov
sti
fst
xor
push
jns
xor
mov
sahf
(bad)
hlt
(bad)
xor
fldenv
sar
pop
cwde
sbb
pusha
outs
xchg
adc
cmc
cmp
adc
imul
cmp
sti
movs
xchg
adc
xchg
adc
cmp
mov
and
clc
cmc
xchg
cmp
loop
leave
in
movs
adc
test
jb
test
repnz
xchg
sti
xor
mov
js
cmp
jne
push
scas
sbb
mov
mov
jmp
cmps
inc
add
jmp
fimul
and
std
pop
in
mov
aas
dec
mov
fcmovu
jo
idiv
add
(bad)
fsub
pop
add
mov
dec
xlat
call
aad
lds
and
rol
mov
jmp
enter
sbb
popf
clc
cs
push
(bad)
fiadd
jbe
(bad)
fistp
aaa
mov
mov
pop
out
ret
or
pop
repnz
cmp
sub
xlat
add
mov
push
loop
neg
into
cmp
inc
and
(bad)
cmp
jnp
cmp
imul
jl
sub
stos
pop
xchg
pop
xchg
sub
mov
mov
outs
dec
push
xor
loope
mov
lock
imul
and
fadd
loopne
and
movs
inc
cmp
mov
fwait
call
mov
or
xlat
int
mov
add
inc
xor
ja
mov
call
nop
and
or
xchg
push
jl
mov
inc
in
mov
outs
stos
out
mov
mov
jp
jnp
mov
jmp
pushf
jnp
mov
cmp
push
xor
adc
pop
aas
mov
push
inc
pop
xor
add
dec
cmp
fist
xor
cmps
lahf
std
cmps
retf
call
fisttp
adc
dec
cmp
adc
adc
dec
pusha
push
sub
push
sbb
mov
je
gs
(bad)
ss
cmp
test
ja
push
add
out
call
push
mov
std
pop
lock
sti
loopne
test
mov
clc
movs
shl
js
push
fucomp
mov
jge
cmps
call
inc
or
stos
push
jbe
jle
inc
mov
(bad)
jmp
call
out
movs
and
lds
ss
push
lods
scas
mov
into
in
sbb
fld
rcr
jl
cmp
and
inc
mov
pop
cmp
sub
xchg
(bad)
mov
dec
(bad)
cmps
movs
jg
imul
leave
scas
dec
out
in
mov
outs
and
test
test
sbb
lods
sub
cmp
cdq
jo
ja
mov
dec
mov
adc
push
push
test
mul
adc
cmps
sub
mov
sub
sbb
adc
mov
jp
add
in
xlat
add
pop
mov
inc
leave
loop
icebp
cmp
dec
ror
nop
stos
repnz
jno
aas
adc
gs
jmp
(bad)
gs
mov
(bad)
cmp
mov
mov
(bad)
push
popf
jbe
dec
in
cmp
xor
mov
and
jbe
push
or
jmp
or
js
gs
bound
push
movs
sti
scas
add
pop
push
and
adc
mov
daa
push
push
jb
mov
ss
xchg
lods
ror
sbb
push
out
push
dec
jnp
fstp
cmps
mov
mov
and
stos
(bad)
test
inc
jno
sub
ins
daa
inc
mov
and
xchg
inc
xchg
or
ins
cmc
sar
mov
xchg
pop
push
cmp
enter
jbe
jge
xchg
in
lea
dec
xchg
nop
into
xor
stos
fcomp
iret
or
jns
adc
out
pop
mov
clc
cmps
pusha
cli
jle
popa
mov
mov
mov
icebp
(bad)
test
jo
sbb
stc
mov
dec
cmps
in
mov
in
jle
inc
mov
fsubr
stc
cmps
daa
fld
movs
retf
fild
xor
(bad)
push
and
xor
sbb
jne
mov
les
into
ja
push
es
mov
or
push
jo
fcmovb
push
inc
dec
loope
sbb
mov
lea
add
push
cwde
call
nop
(bad)
push
adc
xchg
cmp
pop
fsub
pop
into
and
(bad)
mov
pushf
mov
shl
pop
stc
pop
mov
xchg
pop
or
jo
fmul
cs
dec
in
push
stos
jecxz
xchg
cdq
or
pop
dec
or
cmp
repz
push
dec
(bad)
adc
clc
mov
stc
fnsave
lahf
arpl
mov
repz
dec
and
jmp
push
dec
cmc
mov
jae
xchg
out
fsubr
inc
or
mov
fiadd
sub
jl
cld
repz
sub
ss
leave
stos
and
data16
out
ret
cs
aas
push
lea
adc
cwde
fwait
arpl
iret
movs
inc
xlat
in
hlt
int
rcr
gs
jmp
fild
fadd
clc
scas
jg
dec
in
std
or
(bad)
mov
ds
test
jp
cli
iret
test
(bad)
sbb
sti
gs
aaa
into
or
das
pop
inc
arpl
out
or
jecxz
xchg
and
popf
mov
or
cmovb
shl
(bad)
push
les
fldcw
pop
mov
sahf
lock
pop
adc
jp
addr16
inc
jmp
inc
mov
jbe
imul
mov
xor
sub
or
fcomp
push
sub
test
inc
into
icebp
and
cmp
add
push
sahf
loope
loope
hlt
fidivr
pop
sbb
fs
std
call
cld
mov
mov
popf
out
retf
imul
ins
dec
aam
push
jbe
add
fs
xchg
hlt
adc
jmp
push
sub
mov
lods
cmps
(bad)
mov
pushf
pop
fwait
outs
test
imul
and
hlt
cli
jne
movs
adc
or
call
arpl
je
pop
clc
xlat
sahf
cmp
(bad)
xor
out
or
mov
dec
jmp
push
mov
mov
ret
mov
dec
outs
pop
cmp
sub
mov
hlt
mov
les
push
imul
push
fist
enter
mov
(bad)
sbb
adc
mov
push
adc
and
call
(bad)
lods
cwde
in
movs
push
xchg
inc
scas
icebp
cdq
es
push
inc
xchg
adc
loope
sub
xor
es
or
sti
lods
adc
rcr
mov
cmps
and
(bad)
fsub
shr
cmp
sub
mov
cmps
hlt
nop
pop
xchg
in
pop
leave
adc
and
and
loop
xor
mov
or
mov
jo
inc
pop
iret
imul
fcmovu
sub
push
inc
push
xchg
or
ja
imul
cmp
icebp
fmulp
in
call
pop
pop
xor
sub
mov
mov
jnp
dec
lock
ret
ins
and
imul
call
(bad)
call
rol
xlat
aad
cmp
pop
jnp
cmp
call
or
dec
dec
mov
xor
inc
mov
mov
std
mov
mov
or
cmp
jne
in
in
xchg
cmp
add
pop
outs
push
adc
das
retf
sbb
jecxz
imul
mov
xor
pushf
gs
shl
fidivr
mov
leave
mov
outs
push
int3
dec
pop
or
and
cmc
ins
sti
cmc
movs
mov
not
fild
push
mov
and
cmp
jae
jo
into
xchg
jl
jp
xor
push
push
inc
mov
imul
pushf
out
pusha
in
push
mov
in
fnstenv
(bad)
jns
mov
lods
sub
adc
cmp
jnp
xor
stc
adc
call
repz
mov
out
jbe
mov
mov
dec
and
push
jbe
push
jo
retf
pop
clc
pop
test
jbe
imul
cmc
mov
sub
mov
mov
mov
je
loopne
aam
xchg
aam
jecxz
jg
push
scas
pop
lock
jne
out
repz
xor
mov
mov
repnz
or
mov
xchg
push
mov
add
daa
loope
test
mov
lea
scas
in
push
retf
imul
mov
adc
cmp
lods
mov
retf
mov
adc
pop
add
xor
data16
mov
pop
pop
push
dec
or
ds
mov
xchg
push
cs
lea
stos
jle
fidiv
scas
fst
or
mov
aaa
mov
adc
gs
add
add
or
jbe
dec
stc
sar
fstp
call
mov
dec
scas
mov
pop
cmp
cmp
scas
retf
mov
rcl
mov
sbb
add
dec
shl
jmp
or
dec
xor
(bad)
push
xchg
add
rcr
sub
sbb
mov
xor
js
xor
add
xor
mov
js
test
stos
add
cmp
shl
xchg
dec
in
sub
call
sbb
(bad)
or
leave
std
or
(bad)
mov
clc
out
jp
mov
cmp
add
pop
and
aam
adc
(bad)
shl
into
mov
push
pop
add
cmp
xchg
(bad)
fsub
mov
add
cmps
xor
cmp
xor
fsubr
(bad)
repz
and
pop
xor
shr
jo
jnp
xchg
mov
stos
mov
push
nop
ficomp
(bad)
pop
jge
mov
imul
pop
fdiv
sub
(bad)
pop
mov
cmp
pusha
xor
call
fnstsw
pop
push
sbb
jge
mov
jb
push
scas
call
push
xor
scas
push
js
shl
enter
pop
ins
retf
(bad)
popf
and
mov
out
inc
rcl
ror
push
fabs
add
aaa
mov
jo
pop
les
(bad)
add
jmp
pop
xor
test
outs
daa
and
pop
pushf
aaa
and
pusha
test
jp
aam
jle
call
dec
pop
sub
and
add
mov
outs
dec
jg
mov
pop
dec
and
xchg
loopne
pop
pushf
rcr
repz
sbb
and
jle
cwde
das
cmps
jmp
test
fldenv
xor
in
scas
icebp
lods
(bad)
(bad)
jns
pop
jle
xchg
jmp
scas
mov
and
icebp
mov
jmp
pop
add
jmp
call
bound
dec
nop
pop
cmp
mov
(bad)
fwait
inc
ret
mov
inc
loope
xor
imul
xchg
xchg
retf
(bad)
mov
push
pop
retf
xchg
xchg
cmp
outs
push
inc
sub
cld
sub
xlat
movs
sbb
cld
lock
xchg
js
xchg
xchg
out
cli
add
fsub
sbb
add
imul
dec
sub
popa
pop
(bad)
test
push
ds
mov
lods
fadd
inc
cmp
in
push
xchg
pop
in
lea
pop
push
dec
out
jmp
add
jecxz
inc
mov
cmps
mov
add
out
pop
retf
pop
jg
mov
aas
cmp
lods
add
pop
(bad)
repz
not
xor
mov
cs
jmp
(bad)
popf
(bad)
inc
cmp
test
mov
xchg
or
inc
pop
ficom
jg
fistp
xchg
lds
add
dec
call
xor
mov
lahf
and
xor
mov
jle
addr16
fild
xchg
loopne
pushf
clc
and
dec
daa
xchg
out
xor
in
cli
cld
popa
cmc
mov
pop
and
adc
mov
and
(bad)
jae
xor
inc
cmp
outs
lahf
jp
dec
jae
push
in
add
pop
(bad)
mov
push
add
fwait
add
bound
pop
add
test
addr16
rol
les
leave
mov
shr
(bad)
bound
(bad)
mov
push
imul
inc
xchg
cmp
sub
dec
push
jmp
fidiv
push
test
(bad)
shl
push
stos
xor
adc
js
dec
stos
movs
mov
imul
nop
cmp
or
popf
(bad)
loop
fcom
retf
rcl
fisub
sub
repz
cwde
sub
mov
sub
sbb
lds
retf
inc
mov
sub
jmp
pop
inc
push
fwait
outs
cmps
movs
mov
or
sub
mov
(bad)
outs
jbe
mov
outs
repnz
cmp
pop
and
sub
arpl
ss
cmps
jmp
push
cmp
mov
cmps
fs
jg
int
loop
lahf
ins
imul
cld
inc
jmp
cmp
cmp
jnp
pushf
inc
test
sbb
adc
sbb
dec
add
inc
out
std
push
sti
ins
enter
mov
inc
jl
cmp
inc
pusha
sub
(bad)
jle
cmp
mov
hlt
and
mov
add
and
and
mov
loope
aam
loope
int
mov
mov
ja
test
ins
adc
xchg
(bad)
sub
push
stc
(bad)
leave
jl
mov
mov
out
shl
inc
fadd
lods
popf
mov
xchg
pop
xchg
int3
dec
push
adc
dec
mov
mov
mov
(bad)
sub
adc
stc
add
and
scas
push
dec
push
std
add
xor
ja
cdq
pusha
aas
jnp
in
sub
or
shr
inc
movs
jg
pop
je
mov
pop
add
outs
ror
aas
fsubr
sar
xor
mov
mov
lea
out
pop
mov
or
cdq
adc
cli
test
call
fadd
push
jmp
xchg
clc
or
es
cmp
jnp
retf
sbb
fs
xor
test
mov
push
fs
jge
add
mov
push
mov
or
and
lock
mov
add
lods
frstor
cmp
jbe
sub
jecxz
fwait
dec
movs
gs
add
xchg
mov
(bad)
and
push
gs
inc
stc
add
mov
mov
xchg
pop
ret
cmp
out
stos
fs
xchg
pop
into
sub
mov
sbb
or
xlat
xlat
xchg
ss
out
adc
(bad)
je
push
push
mov
adc
shl
loop
mov
daa
pop
and
jge
clc
pop
cmp
jmp
jns
aaa
fist
push
in
outs
jg
mov
scas
xchg
mul
rcl
mov
jmp
cli
leave
movs
outs
test
vsubsd
pop
(bad)
jge
into
xlat
fcom
push
mov
outs
mov
and
xor
rol
jl
push
movs
in
loop
aad
jb
mov
fiadd
sub
push
dec
cmps
adc
(bad)
pop
mov
mov
sub
ds
or
mov
dec
push
cli
test
cmp
fwait
dec
jns
inc
imul
loope
or
sbb
xor
into
sub
mov
cmp
(bad)
repz
iret
mov
cmc
push
add
call
or
mov
icebp
(bad)
ret
add
push
lods
sub
xor
fist
cdq
mov
xchg
sahf
add
dec
shl
cmp
mov
sub
stc
cld
out
add
mov
xor
stos
jge
adc
lock
inc
icebp
mov
mov
aam
out
jb
or
xchg
imul
xor
push
xchg
pusha
shl
inc
jbe
mov
imul
sbb
loope
fadd
mov
or
(bad)
iret
mov
div
cmp
sbb
sub
pop
jbe
sub
sbb
outs
adc
xor
push
mov
adc
dec
add
fstp
aas
fidivr
fild
mov
ja
add
mov
sbb
mov
push
lods
fs
mov
pop
cs
ficomp
inc
jno
mov
jb
xchg
pop
fistp
movs
pop
jge
adc
mov
mov
or
cmps
jge
jns
aas
stos
cli
sbb
aam
icebp
pop
cmp
idiv
sub
adc
pop
cmp
loop
mov
ret
popf
test
add
mov
jle
nop
je
xchg
adc
dec
sahf
ds
jno
shl
mov
jge
out
jb
fisub
dec
imul
push
out
jmp
cmps
aad
sub
in
mov
repnz
or
and
push
sbb
push
push
fwait
gs
xor
sub
add
cs
jbe
imul
loope
fcom
mov
xchg
mov
push
ds
add
add
dec
or
aam
or
sbb
fidiv
inc
or
ins
sub
inc
outs
(bad)
push
scas
test
fadd
and
imul
and
fisttp
fidiv
mov
fs
dec
and
not
push
mov
fidiv
add
das
ins
mov
ror
and
iret
cs
das
gs
jo
aam
and
mov
ret
sub
data16
in
add
fidiv
popf
mov
data16
xchg
inc
push
arpl
jbe
outs
push
das
or
adc
mov
xchg
fnstenv
or
dec
inc
neg
inc
iret
cs
mov
cli
call
push
xchg
or
sub
or
pandn
mov
cdq
pop
push
push
ss
leave
fwait
retf
inc
or
add
mov
ror
adc
shl
pop
jmp
mov
pop
cmps
jnp
inc
push
mov
cmp
xchg
out
out
adc
and
pop
jmp
out
rcr
pop
inc
dec
sub
xchg
test
icebp
jns
push
repz
call
fcomp
shr
xor
adc
push
add
test
or
jnp
jns
sbb
loopne
push
sahf
jb
add
cmp
retf
xchg
popa
pop
mov
sub
xlat
mov
(bad)
daa
aad
xor
cmc
xchg
jge
mov
call
pop
(bad)
push
cmp
mov
inc
inc
and
mov
xor
popf
cld
xchg
mov
sbb
jge
out
jle
popf
addr16
mov
mov
repnz
mov
jmp
aam
mov
xchg
retf
imul
movs
dec
mov
out
inc
sub
jecxz
xlat
sbb
iret
mov
lahf
jnp
jmp
cld
ret
dec
int
pop
inc
retf
cmc
sbb
inc
outs
lea
xlat
in
ss
movs
push
add
ins
fucomi
cwde
push
sub
daa
jecxz
fistp
sbb
xor
sti
or
bound
sbb
popf
mov
ss
jl
push
loopne
cmp
jne
jp
adc
sahf
push
(bad)
adc
outs
xchg
mov
sbb
out
dec
inc
xchg
pop
jnp
mov
leave
je
pushf
stos
cmc
and
push
adc
jmp
stos
sub
loope
loope
mov
jp
es
adc
xchg
push
int3
mov
push
xor
adc
adc
lahf
dec
rcl
jle
sar
(bad)
push
push
and
adc
stos
in
mov
(bad)
out
push
push
push
pop
ins
pop
aaa
inc
mov
fild
jmp
js
daa
dec
loope
ja
psubusw
sbb
shl
and
add
dec
inc
and
aad
jmp
clc
dec
fbstp
in
movs
mov
ficom
push
jb
sti
hlt
scas
dec
shl
xchg
(bad)
fisub
cmc
das
push
jns
jb
wbinvd
inc
imul
fcom
(bad)
mov
test
(bad)
mov
jnp
sbb
fadd
arpl
test
mov
xor
sub
fmul
xor
sbb
jmp
(bad)
call
mov
lods
adc
ja
dec
mov
fadd
xchg
leave
xchg
jmp
jno
adc
cmp
es
push
adc
jp
xchg
xchg
jns
dec
fadd
mov
(bad)
fcmovu
sub
call
out
(bad)
fist
pop
js
push
jno
outs
jecxz
ficomp
xlat
xchg
dec
and
inc
ds
pop
xor
out
loop
cmps
mov
imul
mov
fs
mov
pop
adc
mov
xor
aad
repnz
call
add
clc
test
adc
(bad)
jg
or
shl
mov
call
lahf
or
cld
cmps
nop
sub
data16
fdiv
int3
test
jmp
cld
outs
jle
xor
push
data16
lds
jmp
sub
daa
scas
xchg
ja
sub
loopne
stc
neg
aas
xchg
loop
jle
jb
outs
mov
hlt
idiv
mov
fmul
ss
retf
icebp
jno
mov
popa
mov
std
mov
xor
mov
std
test
and
outs
jecxz
pusha
test
jne
popf
icebp
ss
mov
cld
(bad)
sbb
pop
pop
sar
mov
ret
aas
mov
dec
(bad)
push
sbb
ds
(bad)
mov
mov
loop
or
js
jnp
pop
nop
jmp
cmp
cmp
movs
adc
xlat
adc
xchg
fcom
sub
mov
pop
xor
cwde
push
ins
ds
aas
fisttp
(bad)
ins
outs
(bad)
push
cmp
push
ins
pop
jg
pusha
cmc
add
push
inc
mov
jecxz
addr16
lock
test
adc
fs
sti
xor
cdq
jae
dec
sub
cmp
(bad)
out
or
jns
jg
aad
mov
por
xchg
dec
popf
or
aad
inc
std
xchg
mov
dec
dec
jmp
pop
jge
aaa
xor
dec
fadd
clc
mov
mov
mov
or
and
mov
mov
xchg
movups
push
jecxz
add
aas
cmps
jp
aad
aad
pop
mov
jae
pop
das
jecxz
mov
or
xor
ds
pop
ins
mov
lods
int3
sub
icebp
cld
jge
mov
mov
sub
pop
sub
stc
xchg
and
mov
push
or
push
dec
lods
ret
adc
jmp
enter
push
(bad)
sbb
jge
pop
adc
repz
in
cs
mov
dec
addr16
mov
and
xchg
mov
or
push
fwait
sti
es
or
and
lods
mov
loop
cmc
push
(bad)
adc
and
pushf
test
test
int3
leave
sub
sbb
dec
movs
push
mov
popf
cmp
bound
jp
dec
jle
stc
popf
ret
inc
and
scas
sub
xchg
jne
xor
movs
sub
sub
retf
mov
(bad)
aad
mov
xchg
cmp
stos
sahf
(bad)
rol
inc
add
pop
out
xor
fwait
call
cli
jp
out
and
pop
test
lea
push
inc
cmp
xor
pop
sub
mov
imul
inc
into
mov
push
xchg
cld
arpl
dec
xchg
popf
cdq
stos
sbb
cmp
cmps
imul
scas
in
sub
dec
addr16
cdq
sbb
retf
jb
xor
jns
lahf
imul
in
aas
and
enter
push
push
fs
mov
mov
add
(bad)
and
jmp
push
lock
sub
imul
inc
out
pop
bound
xor
rcl
out
mov
inc
sar
stos
push
push
into
nop
mov
xor
stos
mov
xor
push
test
pop
(bad)
xor
test
and
inc
(bad)
int3
addr16
sahf
add
cmc
sub
loope
inc
dec
fisubr
mov
in
adc
sbb
xor
mov
retf
push
dec
or
mov
int3
(bad)
dec
and
mov
sahf
rcr
jns
and
cmp
add
sub
mov
xor
aam
js
mov
and
jle
repz
mov
(bad)
mov
rcr
mov
sahf
and
xchg
sti
ficomp
push
and
loop
jmp
outs
inc
push
pop
(bad)
je
stos
ss
call
mov
test
mov
push
ret
(bad)
jp
mov
mov
dec
adc
fcmovnu
mov
movs
push
mov
push
stc
push
pusha
mov
mov
mov
and
sub
pop
retf
xchg
mov
aaa
out
js
mov
push
fimul
jg
out
aam
sbb
nop
adc
outs
das
fs
iret
mov
mov
mov
pop
push
jbe
hlt
in
and
sbb
dec
popf
sti
sub
lods
popa
xor
push
mov
xor
inc
push
adc
add
sub
sub
add
test
fucomi
not
add
std
call
fistp
call
push
mov
dec
mov
push
jb
jns
mov
sahf
mov
hlt
movs
inc
test
out
jmp
retf
test
jge
lock
xchg
(bad)
scas
sub
dec
outs
and
mov
or
jle
inc
ss
repnz
mov
icebp
and
jns
outs
or
adc
mov
push
jne
push
ins
push
cwde
cld
push
inc
sahf
push
cmp
push
push
pop
fld
movzx
cwde
sti
pusha
shl
mov
mov
add
cmc
sub
inc
jmp
addr16
imul
aam
movs
(bad)
std
sbb
sbb
pop
xor
loop
mov
outs
inc
loope
pop
mov
icebp
stos
cmp
push
mov
ds
icebp
ss
call
ins
and
add
pop
sar
adc
retf
cmp
test
jmp
sahf
in
shl
stos
aam
repnz
idiv
jno
aas
push
fstp
cmc
inc
aam
mov
adc
test
lods
mov
cmps
repnz
test
sbb
outs
int
jg
xor
ss
mov
repnz
jnp
scas
jmp
pop
mov
mov
mov
dec
xchg
cmp
mov
mov
outs
icebp
hlt
mov
and
push
hlt
mov
pop
mov
cdq
cmc
push
(bad)
iret
inc
cmp
xchg
data16
daa
cli
mov
sti
stc
stos
mov
push
ins
das
pop
cwde
push
fadd
ret
mov
int3
inc
out
sbb
inc
pop
das
and
sti
dec
and
push
daa
cmp
pop
and
test
stos
repnz
pop
movs
mov
mov
into
sbb
and
and
aaa
inc
lahf
ror
rcr
push
hlt
or
pop
(bad)
jb
dec
ds
cmp
in
pop
enter
pop
mov
rcl
or
cmp
rcr
push
lods
sbb
jp
lock
ficom
mov
scas
mov
repz
fcomp
jne
sbb
add
push
mov
daa
xchg
fistp
xlat
adc
push
push
adc
jmp
jl
shr
mov
les
in
retf
xor
jg
dec
inc
outs
je
(bad)
out
xchg
push
loope
mov
sbb
rol
jno
pop
lea
mov
mov
sbb
adc
jg
dec
das
add
cmp
jbe
inc
lds
xchg
sbb
outs
loop
rcl
push
jmp
aas
clc
sub
pushf
add
adc
(bad)
loope
mov
div
xchg
icebp
out
inc
cdq
pusha
jle
loope
pop
jbe
xor
fistp
dec
and
addr16
cmp
or
pushf
addr16
push
push
test
xchg
mov
adc
sub
mov
dec
sub
xor
iret
pop
je
jae
test
pop
mov
jnp
dec
add
(bad)
bound
push
xchg
add
inc
xor
xchg
dec
lahf
xchg
xchg
dec
dec
(bad)
xor
loop
or
add
push
push
scas
adc
mov
sbb
xor
je
mov
adc
retf
push
data16
mov
call
jae
xor
sub
js
ror
mov
ret
iret
js
inc
jbe
xchg
xor
mov
xchg
jns
frstor
arpl
lods
fild
mov
dec
in
jae
xchg
movs
push
les
xchg
push
aas
imul
lds
and
enter
jl
aaa
arpl
sbb
(bad)
repnz
inc
and
xor
xor
(bad)
movs
fadd
adc
scas
xchg
sbb
faddp
jne
dec
sbb
mov
iret
sub
ror
aaa
mul
sbb
push
adc
jmp
mov
das
push
(bad)
into
inc
xchg
and
lea
mov
lds
aas
xor
mov
sti
les
ja
jge
lock
(bad)
push
cmps
jbe
outs
inc
sub
xor
pop
scas
fwait
mov
and
popf
sbb
mov
sub
mov
mov
out
cmp
nop
sbb
stos
retf
cld
(bad)
xor
js
inc
js
cmp
jmp
int
lods
xor
mov
inc
pop
fbstp
ds
mov
sbb
mul
icebp
pop
jmp
icebp
scas
xor
and
add
push
ds
retf
movs
adc
ins
inc
es
pushf
cmp
xor
cs
cli
mov
mov
retf
addr16
mov
das
fs
mov
mov
aad
and
(bad)
inc
jae
bound
dec
push
sub
scas
arpl
inc
js
hlt
sahf
xchg
movs
jp
lods
xor
icebp
mov
pushf
outs
dec
outs
push
mov
push
pop
and
cmps
jno
shl
bound
mov
and
aas
jl
add
repz
push
pop
xchg
das
jb
jecxz
xor
jne
outs
scas
xchg
(bad)
sahf
cmc
inc
inc
outs
mov
or
sub
shr
adc
and
cdq
xor
mov
jb
inc
cmp
lahf
adc
sub
add
lods
arpl
nop
ror
mov
jb
cmp
sub
xchg
shl
xor
(bad)
movs
pop
adc
mov
dec
scas
or
or
adc
ins
jp
mov
lea
pop
dec
add
sar
add
add
mov
es
pop
xlat
and
cs
push
pop
pop
inc
repnz
iret
pop
and
xchg
scas
jo
ja
repz
lods
stos
pushf
aas
out
cwde
inc
pop
cmp
scas
add
out
lahf
jecxz
mov
sar
pop
xor
dec
and
jb
xor
cmp
mov
push
repz
and
add
mov
add
(bad)
cld
mov
pusha
xchg
mov
sbb
inc
mov
or
pop
cs
mov
pop
push
mov
cs
and
sub
sbb
in
xchg
fidiv
and
lods
fadd
jmp
inc
aaa
mov
data16
mov
mov
add
dec
dec
fwait
(bad)
xchg
in
mov
lods
sbb
dec
dec
adc
ds
js
lock
mov
mov
pop
test
jo
in
xor
bound
mov
in
push
movs
sbb
stos
inc
mov
std
push
xor
jp
or
loopne
xchg
retf
repz
xchg
xor
enter
mov
movs
mov
cmp
push
aam
sahf
xor
add
cwde
push
icebp
pop
sub
cdq
sub
in
jecxz
popf
call
rol
mov
lds
popa
(bad)
aad
outs
das
xor
arpl
(bad)
sbb
loop
clc
in
jl
jl
pop
outs
es
cmp
jecxz
jmp
je
xor
jg
ret
add
mov
push
push
jnp
jg
xchg
or
push
sub
lea
dec
call
ret
stos
inc
pop
ror
fstp
lahf
bound
push
cmp
sbb
jecxz
rol
int
into
cmp
and
fs
adc
in
outs
xchg
pop
pop
inc
or
dec
push
dec
and
scas
xor
inc
jno
mov
jne
addr16
call
fild
push
xor
mov
mov
xor
test
add
mov
cdq
cmp
and
xchg
jecxz
mov
xor
adc
dec
xor
test
ss
fwait
jmp
dec
pop
cmp
mov
mov
xor
in
mov
out
or
repz
pushf
pop
mov
and
addr16
push
adc
xlat
mov
lahf
into
and
jnp
pop
popf
int
inc
push
outs
mov
popf
ret
pop
cpuid
mov
pop
pop
or
add
pop
aad
or
(bad)
rol
dec
mov
push
xchg
xor
jnp
inc
add
push
ret
sbb
out
(bad)
dec
jge
mov
mov
add
jmp
fisubr
daa
inc
repz
in
lock
imul
ds
push
xor
mov
xor
dec
mov
push
and
pop
xor
pop
inc
adc
push
in
cwde
pop
or
inc
pop
out
adc
add
lahf
push
into
out
sbb
fcmovnbe
jmp
aam
jb
jb
mov
or
scas
std
out
mov
cmp
cmps
and
pop
mov
cmp
movs
jmp
aad
mov
push
xor
(bad)
cmp
fnstenv
hlt
sar
(bad)
sbb
into
fcmovnu
in
jns
outs
push
fild
or
(bad)
arpl
cs
xor
int3
mov
xchg
je
test
pop
adc
ds
mov
iret
and
and
(bad)
cmp
(bad)
call
nop
call
pushf
aad
mov
sbb
sti
cdq
jns
xchg
xlat
and
loope
jae
add
and
aad
neg
out
fcomp
imul
jecxz
cwd
add
mov
enter
add
push
cmps
mov
and
in
fnstenv
or
shl
in
mov
pop
retf
cli
and
test
mov
or
pop
add
loope
jge
mov
xchg
or
test
retf
sahf
mov
arpl
and
movs
js
cmp
jl
cmp
mov
ins
pop
add
movs
add
(bad)
sub
xchg
jnp
inc
inc
mov
mov
jmp
jle
addr16
xchg
jb
lods
mov
(bad)
inc
cmp
lahf
call
out
(bad)
xchg
jmp
aad
lea
mov
rcr
aaa
dec
movs
shr
(bad)
retf
(bad)
sub
cmps
fcomp
inc
in
pop
popf
js
jbe
xchg
mov
shl
jns
rcl
sti
cmp
shr
mov
and
sub
imul
dec
ja
ror
(bad)
push
pushf
inc
and
jle
xor
pop
cli
push
fdiv
inc
movs
hlt
nop
loope
imul
pop
push
lock
adc
add
enter
in
fwait
and
push
int
jg
retf
inc
in
ret
sbb
cld
jl
cmovp
cmps
fadd
sbb
jle
mov
lock
push
iret
cmc
jge
sub
test
mov
mov
(bad)
xchg
jo
add
push
leave
out
mov
dec
icebp
sbb
cmp
add
jne
cld
or
sar
and
cmp
or
mov
das
lods
adc
add
dec
inc
mov
jns
sub
leave
movs
mov
mov
mov
outs
mov
and
push
xchg
add
adc
cmps
xchg
sub
and
loope
jl
cld
adc
les
push
push
mov
push
into
std
push
inc
icebp
ds
jp
out
iret
mov
add
add
inc
lahf
add
dec
je
cmps
fadd
dec
cmp
jno
jns
enter
ret
retf
leave
pop
in
cmp
push
mov
push
xchg
xchg
mov
pop
dec
adc
popa
mov
mov
jle
pop
call
ins
out
jg
inc
jp
fs
adc
fisub
in
sub
push
mov
imul
sub
mov
cmp
test
fs
les
lds
and
dec
cmps
popf
js
iret
jmp
test
xchg
push
inc
add
daa
push
push
cmp
xchg
rol
dec
jecxz
push
loopne
pop
retf
pop
cld
test
adc
call
iret
sub
(bad)
jnp
cmp
std
mov
mov
test
mov
mov
test
cmp
mov
inc
add
mov
jecxz
push
cdq
push
mov
mov
(bad)
leave
dec
int3
ret
xor
icebp
ror
ret
fs
push
mov
iret
fwait
and
push
and
ins
or
mov
mov
scas
ins
xchg
ss
inc
hlt
mov
jo
sbb
fdiv
cs
les
lea
inc
xor
mov
sub
sub
loopne
pop
jmp
dec
or
(bad)
ret
xor
xchg
shr
sar
rcl
pop
shr
call
retf
es
jae
sbb
push
push
xor
jbe
mov
pop
add
fist
xchg
mov
call
jmp
xor
add
pushf
div
sbb
out
sbb
ins
or
push
pop
jno
movs
fadd
sub
mov
in
psrad
movs
adc
fcomp
pop
(bad)
(bad)
repnz
xchg
enter
or
sub
test
jb
adc
mov
push
xor
test
(bad)
jp
aaa
xchg
dec
ret
pop
pop
rol
jge
pusha
and
cli
cmp
pop
jbe
iret
and
mov
shl
xor
out
in
sbb
out
pushf
jo
hlt
sub
inc
dec
int3
cmp
or
fld
mov
pop
jle
mov
push
loop
inc
inc
fidivr
add
cmp
xchg
ds
lahf
stc
cwde
ss
mov
mov
leave
xchg
push
setae
test
rol
mov
xor
and
and
dec
pop
jmp
or
scas
add
out
cmp
scas
jnp
push
pop
adc
ins
scas
clc
sub
and
cmps
in
push
repz
repz
push
pop
cs
js
pop
push
push
repz
push
jne
sbb
jbe
retf
lds
add
jl
sub
cmp
push
stos
rol
push
and
xchg
inc
sbb
cmc
jo
sub
sbb
mov
aaa
cli
mov
inc
or
push
cmc
push
jp
imul
jecxz
stos
jnp
arpl
adc
inc
cmp
arpl
and
push
and
cdq
out
push
pop
push
enter
mov
pop
daa
cmps
cld
cmp
push
pop
or
test
xor
movs
(bad)
int3
nop
adc
cmp
pop
shr
xchg
popf
ficomp
dec
mov
lods
cmp
sub
mov
or
sbb
sar
clc
bound
aaa
aaa
in
jecxz
bound
int
in
shl
fidiv
inc
jbe
clc
dec
fadd
pop
xchg
xor
xchg
cmp
xor
in
stos
test
xchg
xor
jno
and
xor
sub
pop
inc
sub
push
sbb
ds
jo
loope
mov
imul
jo
or
loop
sbb
es
cs
aad
xchg
push
and
pop
mov
adc
jp
add
jae
ins
ins
add
cmp
call
cli
add
arpl
mov
fst
addr16
retf
jne
out
sub
ja
mov
aas
dec
push
bound
(bad)
push
imul
mov
test
out
mov
popa
icebp
popf
and
cmp
inc
mov
lea
les
xor
aad
movs
pop
xor
mov
addr16
lock
mov
xchg
inc
xor
push
lods
addr16
ret
xchg
fwait
jne
or
arpl
push
adc
push
xchg
test
add
cmps
pop
mov
xor
ins
xchg
ja
cli
into
push
and
mov
mov
call
mov
(bad)
(bad)
lock
loop
sub
pop
movs
mov
pop
sbb
add
data16
idiv
popa
push
push
and
mov
mov
mov
xor
sahf
(bad)
frstor
stc
test
inc
mov
das
movs
int3
jmp
push
idiv
adc
(bad)
enter
ficomp
neg
fsub
jno
je
push
test
je
std
mov
mov
popa
gs
sub
je
leave
lahf
add
jo
fisttp
push
and
test
imul
cmc
push
and
add
jo
inc
xchg
mov
inc
je
movs
stos
outs
pop
popf
inc
mov
dec
add
popa
mov
(bad)
adc
sbb
std
adc
and
ja
int3
dec
bound
fnstenv
mov
pushf
cdq
test
jle
aam
mov
xor
test
inc
sbb
and
movs
retf
jge
loopne
and
xor
sbb
test
pop
dec
pop
mov
fnstsw
addr16
std
imul
add
xor
inc
jge
pusha
and
lock
or
es
aad
inc
fistp
add
aad
jae
aas
ss
(bad)
pop
xor
dec
iret
repz
jmp
push
push
retf
div
lods
xchg
lahf
outs
imul
push
xlat
adc
mov
push
mov
(bad)
ins
jnp
or
movs
in
fucomip
and
in
dec
test
scas
int
scas
ins
xchg
js
int3
dec
lea
repz
xor
and
in
or
and
outs
es
imul
int
add
sbb
sbb
jl
mov
scas
adc
(bad)
push
pop
and
test
repnz
cmps
sahf
popa
sbb
scas
jno
dec
leave
adc
mov
mov
repz
jnp
cmp
xchg
mov
popa
mov
add
(bad)
out
ror
aad
xor
jbe
jnp
jns
adc
movs
adc
xchg
pusha
(bad)
lea
mov
cld
mov
gs
mov
mov
mov
mov
mov
hlt
addr16
repnz
jge
or
add
push
mov
sub
mov
xchg
test
sub
call
add
dec
sbb
xchg
adc
int
mov
xchg
adc
rol
push
ins
add
movs
shl
aas
add
fnstsw
inc
and
jmp
adc
sub
lock
inc
push
stos
and
xchg
popf
pop
xlat
ins
call
(bad)
adc
mov
pop
lods
lods
inc
fld
test
or
dec
pop
push
call
add
add
pusha
inc
and
leave
in
test
movs
and
xchg
adc
hlt
mov
dec
adc
jge
ret
cmp
ret
sti
xchg
es
and
movs
lods
loop
test
inc
jo
jno
mov
movs
test
outs
out
sbb
std
xor
mov
xor
fwait
jp
or
test
lahf
ret
adc
mov
test
(bad)
std
ss
dec
in
jg
or
mov
inc
outs
in
add
xor
cdq
addr16
mov
mov
pop
pop
and
lahf
push
fsub
push
pop
loop
inc
xchg
repz
mov
push
push
inc
sbb
xchg
js
(bad)
mov
jp
je
imul
mov
in
mov
mov
and
test
xchg
js
jnp
inc
jmp
push
repnz
push
lahf
push
inc
sbb
cli
shr
push
mov
mov
or
xlat
mov
jmp
dec
xchg
(bad)
imul
mov
ret
cmp
sub
dec
dec
leave
out
fadd
call
scas
es
popa
push
call
and
cmpps
cmps
add
and
or
dec
mov
xor
stos
pop
(bad)
imul
push
div
jno
data16
push
pop
je
enter
mov
push
jp
and
mov
dec
xchg
in
sbb
push
mov
cmp
sub
mov
jmp
pop
lock
test
je
mov
push
xchg
movs
nop
cld
sbb
add
not
call
das
test
mov
test
jecxz
movs
loop
pop
cmp
push
(bad)
mov
leave
call
jmp
mov
dec
js
pop
inc
mov
repz
aas
imul
inc
sbb
aas
xchg
sub
push
jno
cmp
mov
push
add
es
jno
fadd
xchg
jo
adc
fadd
jns
ins
push
xor
lds
sbb
jno
dec
hlt
icebp
pop
ror
stos
add
lods
jg
push
adc
or
ss
cwde
fistp
nop
(bad)
mul
pushw
push
adc
pop
or
adc
imul
stos
sub
sub
ret
cdq
dec
pop
fld
ins
dec
cs
jmp
retf
and
(bad)
and
mov
outs
lods
mov
icebp
je
lods
int
add
jno
test
mov
retf
xchg
clc
and
or
loopne
lods
pop
ror
pushf
shr
jne
mov
jecxz
sub
out
retf
outs
movs
adc
and
adc
repnz
xor
jecxz
pop
cwde
mov
dec
dec
add
sub
cmp
adc
mov
sbb
out
in
repnz
add
ins
mov
push
pop
dec
dec
retf
sub
retf
jbe
(bad)
stc
retf
mov
lahf
repz
iret
movs
dec
leave
or
int3
push
cmp
bswap
shl
xor
push
dec
call
xor
cli
push
pop
in
into
sub
mov
enter
movs
jo
pop
xchg
jg
pushf
hlt
fs
hlt
mov
sar
inc
jmp
xchg
xchg
adc
popf
xchg
mov
ror
je
dec
call
push
cmp
lods
jg
call
out
push
sub
call
iret
das
inc
mov
xlat
push
xor
jge
int3
push
or
sub
jb
mov
xor
stc
mov
dec
push
lds
cld
das
and
sub
mov
sbb
repz
adc
dec
add
das
pop
push
imul
loop
data16
lods
invd
sbb
or
push
or
xlat
pop
fnstenv
mov
mov
xchg
adc
sbb
mov
mov
dec
shl
sub
mov
jle
sti
lods
idiv
cmp
xor
or
jl
retf
xchg
sub
js
ja
std
xchg
sbb
xchg
xchg
jl
xor
loopne
xor
mov
jns
loope
mov
out
call
pop
rcl
push
stos
ins
push
and
into
mov
sub
retf
retf
ds
sub
push
imul
sub
jmp
dec
(bad)
and
mov
push
xchg
(bad)
mov
js
repz
imul
out
cmp
sti
add
inc
push
sbb
cdq
jmp
xor
imul
fs
call
arpl
xchg
or
push
clc
in
push
dec
xor
xchg
test
xor
push
mov
adc
cwde
push
mov
and
sbb
sbb
sub
or
jmp
and
jae
out
rcr
pop
jle
xchg
into
aas
cmp
fwait
and
add
and
hlt
jmp
or
ficom
cli
sbb
lahf
test
call
xchg
inc
arpl
clc
push
cli
repnz
test
jb
pop
sub
sub
dec
dec
jno
push
arpl
xor
(bad)
dec
mov
rcr
aad
cs
leave
shr
sbb
pop
fnstcw
xchg
hlt
mov
jns
cwde
sti
or
cmps
out
inc
jns
ins
lea
ret
ja
neg
pop
pusha
daa
mov
dec
repnz
cmc
sub
mov
mov
or
outs
cld
pop
fisub
cmps
mov
clc
mov
mov
adc
adc
sar
xor
ds
fs
sbb
mov
cmps
cwde
xchg
(bad)
outs
fidivr
jbe
cwde
push
adc
mov
xchg
pop
jno
lods
jb
xlat
call
jmp
mov
ja
and
inc
mov
stos
jbe
cli
and
jecxz
repnz
pop
(bad)
cld
add
mov
xchg
mov
xchg
xchg
jmp
xlat
loopne
and
out
ins
sub
mov
and
lea
xlat
sub
mov
fidiv
or
sbb
into
push
jmp
(bad)
loopne
mov
or
fs
inc
into
jo
hlt
mov
adc
jmp
xchg
out
push
imul
add
add
sbb
jp
inc
jns
jg
je
cld
fcomp
mov
(bad)
popa
sub
push
movs
leave
arpl
mov
inc
and
enter
mov
adc
(bad)
jno
xlat
cmp
and
push
out
or
jmp
out
cdq
cwde
out
mov
dec
dec
stos
sahf
mov
adc
push
mov
std
ret
jbe
cmp
ror
loope
push
cli
xchg
jp
push
inc
test
pop
fwait
adc
mov
inc
cdq
call
out
leave
jge
loop
ds
mov
and
arpl
mov
mov
pop
push
adc
pop
jno
lock
outs
xor
pop
cdq
pop
out
sub
bswap
and
jge
mov
into
xchg
fmul
inc
xchg
inc
loopne
lds
popa
ret
adc
bnd
dec
icebp
fcomp
mov
cmp
pop
cld
scas
cmp
cld
cmc
sub
movs
adc
retf
mov
or
cdq
mov
and
jae
in
cld
push
inc
xchg
dec
stos
iret
daa
outs
iret
aaa
clc
mov
adc
sti
or
lods
push
cmp
aam
mov
dec
sbb
and
ins
pop
(bad)
xchg
test
jecxz
(bad)
cmp
sbb
out
retf
mov
or
mov
mov
push
cs
ss
dec
adc
cli
pop
xor
repnz
push
div
fadd
push
mov
addr16
fdiv
inc
mov
pop
xor
outs
shr
cdq
sar
jp
retf
int
icebp
push
repz
mov
xchg
or
mov
test
xchg
push
xchg
sub
loopne
jns
add
jns
(bad)
imul
shr
jne
aaa
adc
pop
dec
daa
fs
pop
popf
rcl
inc
rcr
pop
ror
in
cmp
jmp
push
push
int3
pop
enter
inc
shr
adc
inc
jnp
mov
test
scas
mov
mov
imul
jg
lods
iret
in
or
lods
call
(bad)
cmp
dec
sbb
inc
aaa
call
(bad)
fstp
mov
inc
cmp
mov
repnz
iret
in
jg
mov
jmp
xor
jp
and
mov
push
pop
pop
fisttp
jg
mov
(bad)
pop
push
das
shl
(bad)
inc
lds
jae
inc
ja
pop
or
mov
repnz
inc
mov
movs
mov
add
cmp
loop
aaa
inc
stc
push
das
lods
in
test
cmp
xchg
or
sub
sbb
cdq
sub
les
ins
and
loopne
mov
xchg
ror
outs
push
scas
shl
mov
imul
and
jb
push
pop
jecxz
adc
push
lods
inc
fwait
sub
mov
xlat
jp
push
retf
stos
or
sub
sbb
call
and
scas
pop
aaa
cmp
fcmove
test
push
iret
xchg
xor
prefetchnta
out
or
data16
ffree
cmp
cmp
movs
(bad)
shl
ins
xchg
aaa
add
(bad)
fs
xchg
rcr
adc
shl
jbe
mov
cmps
mov
jecxz
jg
pop
lds
popa
call
int3
xchg
retf
lock
mov
aaa
add
shr
pop
(bad)
sub
pop
jmp
pop
jg
bound
mov
retf
addr16
mov
je
ret
retf
movs
in
and
(bad)
pop
fild
pushf
mov
xchg
mov
test
scas
div
ror
push
jg
pop
repz
adc
js
push
lds
pop
cmp
adc
mov
cld
cmps
add
jb
daa
push
imul
fimul
mov
xor
jle
dec
xor
jmp
mov
cmc
imul
popf
adc
iret
cmp
sbb
jmp
aad
(bad)
lea
int3
sbb
mov
ds
in
cmps
push
rol
in
mov
mov
dec
test
into
out
add
pop
ss
jae
mov
pop
xchg
(bad)
push
xor
or
sbb
jb
cmp
mov
or
mov
xchg
in
dec
(bad)
mov
ror
jae
push
add
int
inc
add
inc
dec
fmul
bound
xor
push
sub
popf
retf
xlat
ret
imul
pop
push
mov
lahf
gs
pushf
data16
mov
mov
push
das
out
cld
push
push
cmp
retf
repz
mov
cmp
repz
and
pop
inc
sti
rcr
pop
ret
stos
adc
jge
mov
pusha
outs
retf
cmp
cmp
add
daa
iret
cmps
or
in
aam
add
or
aad
ss
sub
out
inc
mov
lds
push
cwde
std
dec
dec
sbb
ror
or
ins
gs
xor
int
out
repz
js
popf
mov
mov
pop
test
sbb
cmp
outs
mov
repnz
add
dec
fsubr
cmc
ja
sbb
lods
pop
push
loope
call
pop
adc
test
pop
cmp
mov
ret
jnp
dec
cmp
outs
inc
call
test
repz
mov
aas
arpl
rcr
inc
jl
xchg
xor
sub
test
mov
add
push
jge
add
mov
sahf
(bad)
int3
mov
sahf
mov
retf
and
lahf
lods
vmovups
fwait
into
(bad)
mov
jmp
and
pcmpgtb
popf
adc
adc
sub
and
cmp
fisub
mov
lea
adc
fadd
mov
sbb
stos
(bad)
cmp
mov
sbb
shr
cli
sti
jmp
push
sub
mov
std
xor
into
dec
sbb
loopne
repz
sub
sub
cmp
pop
cmp
mov
pop
inc
xchg
pop
or
test
lock
cmps
fs
sub
pop
sbb
lods
(bad)
call
adc
xchg
(bad)
(bad)
cli
sub
sub
or
jo
and
pushf
dec
in
and
and
xchg
test
hlt
pop
scas
das
das
shl
add
jmp
xor
pop
aam
inc
daa
jno
jno
loopne
xchg
pop
xchg
stos
mov
push
std
lahf
cmp
push
push
popf
popf
shl
jae
lahf
mov
sysexit
(bad)
pop
call
rcl
loope
mov
pop
scas
sub
adc
inc
jbe
mov
push
stos
pop
(bad)
ret
es
iret
sbb
pop
push
or
push
fistp
aad
pop
in
xor
out
sub
mov
mov
rol
or
xor
adc
icebp
cmp
in
aam
fsub
repz
push
cmp
cmps
lahf
mov
addr16
push
shl
mov
sub
shl
ss
and
sub
pop
pusha
ficomp
xchg
pop
mov
ds
addr16
dec
retf
xchg
ret
sub
jmp
xchg
mov
pop
add
sbb
aas
dec
xor
daa
add
adc
inc
test
test
movs
cmc
mov
cmp
mov
sub
mov
inc
sub
sbb
movs
ins
rol
dec
test
popf
or
outs
stos
push
mov
pop
push
jp
rol
lahf
aas
mov
fs
test
jb
int3
cli
pop
inc
into
test
mov
fdivr
xor
inc
stos
in
xchg
fisub
push
movs
jl
mov
adc
out
pop
push
repz
jg
aaa
js
cmc
inc
jl
rol
ret
rol
jg
ss
add
sub
cs
mov
push
mov
fwait
pop
xchg
sub
std
sub
fs
jo
mov
in
jno
jecxz
push
sti
sbb
rcr
xor
(bad)
imul
adc
or
inc
pop
inc
xchg
fstp
out
or
pusha
jp
mov
push
call
mov
jmp
aaa
and
cwde
movs
ror
bswap
pop
xchg
gs
mov
xchg
xchg
xchg
jnp
iret
push
aaa
ds
mov
sbb
mov
les
xchg
sub
es
push
mov
add
mov
inc
mov
daa
xor
fcomp
jne
movs
ret
pop
mov
adc
popf
mov
mov
enter
gs
stos
xchg
dec
cli
mov
test
push
sub
ror
scas
jns
out
cmp
mov
push
mov
inc
push
xchg
loop
retf
push
(bad)
mov
sub
jnp
add
mov
xor
sbb
jo
fst
bound
ss
xor
sub
sub
push
scas
inc
sbb
and
out
add
sub
jbe
popf
enter
lods
mov
push
xor
and
cli
xchg
xchg
rcl
out
pop
jl
jbe
pusha
sbb
sbb
cmps
mov
jmp
fld
xchg
(bad)
in
cs
push
sar
dec
and
add
cmp
sub
fbld
and
mov
scas
sub
add
adc
mov
jmp
sub
or
or
pop
cmp
fst
dec
mov
daa
lock
add
jge
push
dec
adc
test
daa
pop
mov
adc
test
mov
fcom
(bad)
xlat
add
xor
jle
int3
mov
sbb
popaw
mov
dec
test
arpl
ds
cmp
dec
dec
in
add
(bad)
dec
cmp
jb
aaa
dec
pop
jmp
dec
pusha
sub
lea
(bad)
test
dec
mov
xor
xor
gs
push
inc
sub
xor
not
jns
inc
enter
inc
push
(bad)
push
jg
pusha
inc
sahf
jmp
jns
jns
push
pop
mov
retf
and
lods
fcom
shr
sbb
mov
pop
test
mov
sub
add
jle
psubw
or
nop
dec
ss
sbb
scas
rcl
das
fldcw
mov
popa
xor
popf
or
jmp
mov
test
jge
mov
add
adc
rcl
data16
mov
cdq
repnz
retf
iret
or
stc
test
(bad)
jne
repz
cmps
push
gs
sub
out
arpl
mov
out
sbb
ds
mov
cli
repnz
(bad)
daa
scas
ss
xchg
das
fnsave
add
addr16
jo
(bad)
mov
scas
aaa
(bad)
pop
sbb
jno
and
ret
and
popa
inc
push
in
imul
jecxz
jo
sar
dec
pop
mov
mov
loope
cmp
js
add
loopne
mov
aaa
mov
inc
stc
adc
xchg
out
into
dec
add
xchg
pusha
xchg
mul
cmp
es
out
mov
into
push
push
fwait
rcr
ss
scas
mov
pslld
gs
jmp
dec
mov
daa
ins
pop
lahf
jne
or
daa
adc
xchg
add
or
dec
ret
adc
fs
and
sub
inc
sti
icebp
mul
mov
mov
pop
mov
pop
jecxz
js
mov
mov
add
stos
dec
cmp
sbb
neg
xor
jp
je
fwait
movnti
sub
fwait
and
or
retf
xchg
or
push
icebp
mov
mov
jnp
cmp
xchg
aaa
div
dec
jg
pop
lock
in
movs
xchg
fild
pop
(bad)
cmp
add
loop
scas
data16
icebp
in
cmp
xor
sbb
div
test
stc
jo
test
inc
popf
cmps
sbb
push
mov
sbb
cmp
mov
push
dec
cmp
retf
scas
and
je
or
cmp
jecxz
cwde
xchg
into
sub
push
dec
loopne
fmul
ror
in
rcl
test
mov
scas
xchg
mov
dec
pop
mov
dec
sub
push
sbb
cmp
test
xlat
mov
and
pop
jmp
cld
pop
fidiv
mov
pop
jmp
ds
jno
jecxz
dec
out
aad
dec
outs
or
adc
xchg
pop
push
xlat
test
pop
sbb
push
xor
cwde
inc
or
add
pop
sub
xchg
xchg
sbb
dec
inc
(bad)
inc
sub
mov
or
jae
rol
inc
push
sub
sub
loop
dec
out
clc
sti
(bad)
in
and
icebp
(bad)
adc
or
add
ins
pop
mov
(bad)
push
scas
sub
adc
pop
popa
xor
dec
mov
cmp
or
cmc
dec
mov
loopne
int3
xor
fsqrt
jae
daa
call
stc
jge
movs
pop
arpl
mov
mov
(bad)
inc
fimul
push
mov
push
lods
add
push
inc
jnp
icebp
mov
and
pop
aam
pop
ins
jg
rol
pop
(bad)
xlat
ret
bound
outs
scas
jge
hlt
and
vmptrld
xchg
ds
knotq
xchg
lock
mov
jnp
ret
pushf
cmp
add
(bad)
retf
mov
jl
aad
or
scas
(bad)
push
fild
stos
jp
inc
lock
bound
sub
pop
ds
pop
mov
retf
imul
lds
retf
stos
rcr
data16
sti
mov
sti
push
jb
in
retf
mov
retf
mov
sti
pop
ficom
out
in
pop
cmp
jp
aaa
add
jp
leave
jo
repnz
mov
imul
sahf
int
jb
repnz
(bad)
ror
inc
sbb
ret
(bad)
push
sub
in
dec
out
jg
clc
jle
or
fidivr
stc
ins
pop
pusha
jne
loopne
cwde
push
mov
ss
cmps
mov
xlat
sub
push
adc
xchg
aam
sub
fistp
pop
jo
jae
xor
and
mov
and
pop
push
xor
add
pop
sbb
call
push
xchg
punpcklbw
add
fimul
sbb
pop
inc
(bad)
js
std
aas
jecxz
aam
pop
push
sub
xor
ror
inc
add
test
sbb
xchg
or
std
outs
or
dec
repnz
pop
sub
mov
dec
and
int
(bad)
lds
cmp
mov
sbb
sti
fldcw
sub
mov
inc
mov
mov
or
fisub
call
stc
and
mov
add
data16
push
pop
dec
sub
xchg
mov
push
xchg
jmp
sub
enter
icebp
or
in
push
fidivr
mov
sub
mov
adc
jg
imul
cmps
push
or
xor
leave
jp
cs
test
aad
or
aas
cli
add
sti
push
dec
(bad)
ror
mov
mov
jbe
mov
inc
test
inc
push
mov
add
adc
jns
jmp
into
fidiv
mov
mov
ror
stos
mov
mov
dec
stos
mov
jne
sar
xchg
rol
pushf
int3
mov
sti
or
movs
jl
jae
mov
mov
xchg
push
push
movs
or
shr
sub
es
mov
cld
jl
sbb
jbe
aam
and
hlt
repz
push
sti
xchg
push
fmul
cdq
inc
mov
fmul
mov
mov
call
dec
adc
add
jmp
jl
pushf
mov
or
test
add
lods
sub
sbb
xchg
out
xor
mov
jnp
and
inc
ja
cmp
retf
mov
cli
cmp
cmp
ja
je
or
push
push
xchg
jl
mov
repz
fistp
cmp
pop
mov
pop
fistp
imul
cmp
jl
push
data16
sbb
aaa
add
mul
add
push
into
out
or
dec
or
mov
stc
and
add
push
out
mov
and
push
(bad)
repz
repz
push
pop
mul
gs
ins
lods
imul
ret
or
lock
rcr
lods
mov
stc
jmp
mov
(bad)
mul
addr16
jg
out
rcl
outs
loop
(bad)
repz
push
fsubr
add
dec
(bad)
out
(bad)
ror
pop
test
add
jle
in
adc
mov
and
mov
in
(bad)
stc
xor
jo
mov
vmulps
dec
mov
loope
sti
and
sbb
sti
pop
pusha
repz
cld
cmp
lds
int
bound
mov
xchg
adc
ja
jnp
mov
xchg
mov
mov
xor
jns
cmps
ins
pushf
sub
lea
add
fistp
clc
fcmovnb
dec
pusha
cli
enter
(bad)
pop
adc
cmps
and
xchg
in
lahf
sub
test
lods
cld
mov
outs
jb
adc
fcmovnb
(bad)
shl
dec
and
out
or
cli
in
es
push
out
cmp
es
into
shl
lds
sub
int3
test
pop
dec
pop
mov
push
test
enter
and
shl
(bad)
and
cmp
outs
mov
cmp
xchg
clc
fild
dec
js
inc
dec
mov
cmp
retf
out
and
es
mov
dec
adc
pop
dec
and
sub
es
rcr
lock
and
pop
jg
aad
jns
loope
pop
inc
(bad)
scas
mov
movs
xor
mov
je
repz
jg
pop
call
addr16
fdivr
movs
les
dec
adc
sub
xchg
mov
and
mov
push
ds
xchg
ins
out
add
mov
xor
jmp
(bad)
movs
jecxz
cwde
movs
dec
gs
fisub
call
(bad)
mov
jnp
repz
xchg
test
mov
mov
cs
loop
add
sbb
ret
push
repz
fs
jmp
gs
ds
and
out
retf
push
sub
inc
pop
or
scas
stos
xchg
sti
mov
xor
in
popf
mov
repnz
jge
pop
clc
inc
push
mov
sub
jb
aas
or
add
nop
pop
mov
aad
jecxz
jnp
div
cmp
lahf
lea
push
xchg
adc
in
lea
xchg
in
bound
js
rcl
loop
cmp
out
dec
rol
push
stos
inc
sbb
inc
(bad)
mov
test
sbb
dec
dec
dec
mov
sub
leave
int3
or
retf
rcl
call
aad
mov
sti
cld
mov
aas
int
fcmove
jmp
and
push
jae
pop
jle
iret
jb
and
sbb
adc
xchg
fild
jnp
dec
cmp
jecxz
pop
pop
cld
cmc
cli
aam
mov
xor
es
push
adc
pop
or
xchg
lods
cld
dec
repnz
inc
mov
std
cmp
mov
aam
adc
(bad)
xor
scas
or
jle
mov
jno
xor
push
(bad)
pop
je
xchg
dec
inc
push
adc
std
loope
adc
xor
pop
test
adc
(bad)
scas
adc
add
scas
adc
cmp
pop
pop
mov
adc
pop
inc
(bad)
sahf
or
(bad)
jmp
sahf
stos
rol
icebp
js
int
outs
jecxz
inc
or
sub
mov
repnz
add
imul
(bad)
fnstcw
add
pusha
mov
call
lods
out
test
test
push
jno
mov
repnz
cmps
ins
test
push
cmp
js
ss
(bad)
int
imul
fwait
lods
jno
mov
das
mov
(bad)
fmul
cld
fdiv
xchg
imul
inc
out
dec
aaa
sub
test
outs
jnp
jge
(bad)
dec
jno
popf
dec
xchg
dec
xchg
scas
stos
popa
push
ins
jbe
sub
jbe
cmp
sbb
mov
mov
push
nop
dec
xor
cmp
lods
adc
fmul
ins
mov
dec
(bad)
push
das
ror
stos
cmp
ja
mov
loope
cmp
inc
out
add
xor
dec
adc
dec
cdq
push
int3
jmp
test
adc
fs
jne
or
(bad)
div
push
arpl
push
mul
sbb
adc
hlt
daa
jmp
je
popf
sbb
aad
ins
cmps
jl
and
(bad)
ins
(bad)
pusha
arpl
and
adc
movs
cmp
loope
(bad)
mov
push
add
rcr
adc
xchg
ficomp
inc
mov
or
fild
mov
inc
call
sahf
jmp
mov
dec
xlat
scas
push
mov
leave
loope
out
daa
(bad)
and
dec
call
cli
mov
mov
mov
cmp
inc
cmp
dec
aaa
xchg
sub
outs
ss
mov
push
xchg
pop
adc
jnp
sbb
mov
dec
dec
outs
js
adc
and
sub
mov
pop
or
das
inc
cs
int3
mov
push
outs
popa
psllq
out
repnz
push
mov
sub
dec
mov
out
mov
enter
cmp
add
add
imul
iret
ins
xchg
repnz
loope
dec
lock
jb
sar
fwait
mov
xchg
mov
cmp
cmp
cld
ret
or
mov
xor
dec
out
dec
rsqrtps
cmps
div
mov
jecxz
sbb
sbb
pop
xlat
xchg
je
sbb
and
cmps
jb
shr
sub
outs
fidivr
loop
xchg
inc
shl
in
(bad)
jecxz
stos
loopne
scas
or
inc
cdq
pushf
repz
addr16
and
jne
cmp
mov
mov
inc
call
xlat
daa
inc
ss
ret
add
pop
and
jo
xor
jge
add
xchg
pop
jnp
and
nop
or
arpl
xchg
dec
inc
call
not
push
scas
or
sbb
ds
add
xor
and
not
pop
or
ins
add
and
push
inc
imul
(bad)
jnp
inc
add
movs
inc
lods
xor
sub
jmp
scas
test
and
out
and
test
hlt
or
test
jmp
sub
aam
in
sti
add
mov
xchg
fst
or
std
sar
sar
jl
rcl
jmp
adc
movs
xchg
sbb
stc
mov
or
rep
icebp
gs
cmps
(bad)
adc
(bad)
dec
or
xor
add
int3
je
jge
push
mov
xchg
mov
mov
fs
sub
mov
inc
xchg
mov
and
mov
(bad)
repnz
add
inc
test
dec
je
jb
aam
adc
lds
push
test
jno
inc
push
jmp
outs
push
adc
data16
inc
push
add
inc
push
inc
sbb
movs
mov
mov
lods
dec
or
jns
jecxz
or
fmul
mov
cli
rol
jmp
mov
lock
ja
repnz
dec
std
pushf
mov
sar
outs
jns
sub
scas
pandn
repz
pop
xchg
shr
fistp
repnz
push
and
and
and
xor
int3
jmp
sub
outs
jg
inc
dec
jae
jmp
fild
les
cmps
cmps
lahf
rcl
dec
cmp
into
into
push
ins
push
out
xchg
xchg
les
push
rol
inc
aam
mov
stos
dec
adc
cmp
fidiv
mov
leave
iret
adc
fcomp
mov
sub
ss
test
xchg
add
mov
inc
add
or
sub
and
rcl
push
pop
jp
clc
das
pop
loop
loopne
mov
pop
test
xchg
add
shl
and
aas
mov
add
cld
mov
mov
sub
sbb
jb
and
(bad)
movs
(bad)
xor
xor
xchg
out
cmp
aad
push
jge
loope
retf
mov
xor
popf
push
idiv
add
retf
shl
je
push
mov
outs
out
dec
cmp
cdq
adc
adc
cmps
jle
call
adc
and
jg
ficom
out
sete
pop
rol
aam
and
call
fisttp
sub
xchg
mov
mov
pushf
ins
mov
add
jp
pop
in
ret
jmp
test
pop
pop
cld
jp
sahf
xchg
cld
push
cld
fdivr
into
retf
add
mov
sub
add
rcl
lock
and
int
lock
jo
xchg
ret
sbb
arpl
loop
jno
std
mov
das
leave
push
cli
out
xchg
lea
leave
iret
sti
adc
sbb
(bad)
mov
adc
sub
or
jno
dec
cld
jl
pop
push
mov
sub
icebp
dec
mul
popa
nop
or
dec
jp
out
fsin
inc
addr16
push
lds
sub
xor
lock
inc
retf
popf
mov
out
jbe
pushf
xchg
xchg
movs
fs
cmc
test
rcr
push
scas
fnstsw
dec
pop
scas
add
xchg
(bad)
aas
mov
jne
sbb
dec
repz
pop
out
dec
sahf
fcom
jns
rcr
add
sub
lods
mov
inc
sbb
push
push
jno
pop
setge
or
or
xor
stos
adc
jne
add
mov
fmul
and
in
inc
cmp
or
fnsave
jb
add
(bad)
xchg
pop
or
bound
xchg
mov
pop
adc
mov
les
adc
xchg
xchg
mov
test
sbb
lahf
cmp
test
loope
cmps
inc
pop
sbb
jmp
je
popf
out
repnz
adc
and
les
cmp
mov
add
xor
mov
xchg
mov
ret
add
sar
mov
into
pop
mov
in
mov
test
and
lahf
fldl2e
call
test
dec
jg
mov
cmp
sbb
retf
test
inc
leave
in
cmps
repnz
pop
arpl
scas
leave
lock
xor
pushf
jp
and
pop
icebp
or
mov
add
mov
movs
adc
jg
mov
add
mov
lahf
lahf
mov
jbe
mov
jnp
aaa
mov
xchg
fild
retf
sub
(bad)
adc
mov
retf
out
pop
scas
xchg
add
mov
or
aam
enter
ror
addr16
enter
pushf
pop
retf
mov
xor
cmp
pop
xor
loope
mov
xor
arpl
cmps
cmc
scas
not
movs
rcr
cmp
sti
enter
xor
mov
pop
das
push
lahf
das
dec
les
xor
xlat
xor
add
dec
inc
cmp
shr
xchg
(bad)
add
push
enter
jp
push
sbb
fild
inc
mov
add
cs
inc
les
loopne
or
sti
sbb
in
ds
push
and
sub
dec
jmp
or
xchg
int
jbe
cmc
xchg
dec
mov
cli
cmp
sahf
sahf
sahf
cmp
out
or
pop
ja
xor
ss
mov
dec
mov
push
js
scas
add
dec
adc
mov
sub
jecxz
cmp
push
cmp
test
fiadd
out
data16
setbe
sub
pop
push
push
out
dec
retf
mov
mov
xchg
cli
aam
and
or
cwde
(bad)
jae
jb
movq
aad
pop
daa
test
inc
mov
fdiv
call
dec
iret
mov
aad
dec
cli
or
ja
mov
jg
jmp
ds
icebp
aad
push
cmps
lods
push
mov
sbb
aas
ja
inc
add
pop
mov
dec
mov
js
leave
int3
and
in
ficom
jmp
xchg
push
push
add
aaa
sub
sub
mov
pavgb
add
add
pop
xchg
jge
xchg
pop
movs
dec
jecxz
popf
adc
rcl
mov
leave
pop
push
adc
and
fnsave
test
in
iret
dec
call
clc
sbb
or
ins
lea
lds
fdiv
in
(bad)
jecxz
adc
mov
rcl
fldcw
mov
cmp
test
mov
xor
jo
test
fistp
mov
inc
pusha
shl
xchg
popf
mov
pop
dec
data16
pusha
jb
call
in
ret
ins
push
dec
mov
mov
and
and
cdq
cmps
inc
aam
test
mov
shr
or
adc
int
cmp
jne
test
mov
jnp
add
jmp
dec
or
inc
mov
sbb
sar
fst
push
xchg
dec
and
repnz
ret
les
call
cmps
mov
scas
xchg
(bad)
movs
xchg
jecxz
jg
or
cmc
pusha
ret
inc
xlat
pop
loopne
add
jecxz
mov
mov
pushf
push
into
bound
xchg
mov
aam
adc
shr
sub
dec
push
mov
lods
push
adc
in
test
jg
inc
cmp
mov
add
jmp
sub
lods
and
adc
cmp
aas
sub
dec
push
addr16
gs
mov
fldcw
xor
loop
cmps
popf
add
mov
xchg
add
xchg
xor
test
sbb
outs
jmp
jge
inc
ja
and
call
sbb
sub
iret
clc
call
mov
icebp
mov
xor
jbe
xchg
jbe
lea
push
mov
lods
dec
sub
jnp
div
(bad)
movs
or
pop
call
xchg
sbb
sbb
repnz
dec
stc
jno
cmps
and
loope
pop
sub
mov
mov
push
mov
and
mov
test
fxch
sub
stos
in
push
fbld
sub
mov
xchg
test
jbe
hlt
mov
ins
sbb
fldenv
pop
mov
inc
or
fld
ins
add
sbb
out
enter
sub
fmul
pop
mov
cli
push
mov
pop
js
scas
push
ret
mov
and
rcl
leave
or
cmp
inc
cmp
add
sub
loop
fidivr
(bad)
int
or
fidiv
ds
pop
xchg
std
xchg
dec
adc
and
and
or
push
fcom
cdq
pop
adc
add
es
int
ss
jp
rol
les
mov
push
cmp
sub
xchg
sub
pop
pop
cwde
je
ins
pshufw
jle
push
out
ret
jns
sbb
int3
sbb
adc
xlat
call
daa
sbb
mov
pop
or
push
add
loop
push
(bad)
(bad)
xlat
in
lods
mov
or
out
std
or
xor
les
push
sub
dec
sbb
mov
iret
lods
mov
push
adc
jo
ret
and
jnp
int3
push
icebp
cmps
sub
push
jno
retf
sbb
sahf
cmp
(bad)
cmp
ret
push
cmp
pop
jb
inc
xor
js
outs
lds
and
dec
(bad)
xchg
pop
ja
(bad)
mov
xor
xor
rcr
push
push
xchg
cmp
les
lods
push
adc
pop
dec
fs
xchg
les
cli
xor
sub
jmp
inc
or
jbe
pop
mov
iret
adc
sub
add
xchg
popa
jecxz
sar
std
enter
mov
arpl
outs
fwait
or
inc
inc
push
push
mov
mov
dec
sub
neg
mov
inc
mov
jg
(bad)
iret
sbb
test
ds
sub
aam
or
out
xor
mov
jl
jmp
pop
jae
xchg
mov
mov
enter
mov
push
imul
mov
adc
mov
cld
fstp
adc
outs
adc
jb
xchg
iret
xor
cmp
push
jmp
inc
or
ins
in
add
dec
clc
sar
inc
or
inc
pushf
dec
dec
jle
cmp
cmc
xor
bound
push
lahf
xor
or
dec
into
jbe
(bad)
jo
sbb
nop
mov
mov
adc
cdq
mov
dec
push
adc
jno
outs
scas
mov
xchg
sbb
mov
xor
pop
sub
(bad)
cmp
jbe
lock
push
iret
(bad)
fst
shl
loope
jl
(bad)
(bad)
mov
pop
cmp
es
retf
aam
xlat
sets
imul
out
cmp
ja
out
leave
test
xchg
repnz
mov
xlat
xchg
ret
stos
outs
add
jle
loopne
and
xor
lods
dec
mov
and
arpl
iret
out
aaa
dec
and
(bad)
xor
inc
mov
mov
push
adc
daa
sbb
out
sub
jae
mov
push
push
arpl
aas
push
loopne
out
push
xchg
das
cmp
jnp
sbb
and
iret
push
sub
sahf
cmps
sub
pop
fst
jecxz
movsx
lods
mov
pop
clc
lea
pop
xor
push
inc
dec
pop
cdq
popa
stos
(bad)
xchg
jb
loop
fwait
pop
mov
xor
add
cld
or
dec
(bad)
(bad)
repnz
fist
sbb
jp
clc
outs
jle
xor
sar
dec
gs
mov
jb
es
mov
movs
sub
and
pop
aaa
cwde
sbb
retf
jnp
cmp
movs
sbb
pusha
leave
jnp
leave
in
push
inc
inc
pusha
test
inc
pop
call
xlat
pop
cmps
mov
mov
mov
dec
cmp
in
imul
test
push
add
mov
aad
dec
push
push
push
aad
(bad)
mov
sti
mov
or
mov
sub
daa
push
mov
call
mov
pop
pop
jnp
xor
lods
popf
out
push
or
das
pushf
mov
inc
(bad)
inc
or
sbb
enter
call
dec
lock
mov
div
mov
jmp
mov
jne
clc
xchg
mov
or
cdq
xor
mov
push
jb
xchg
cmp
xchg
push
ja
retf
xor
mov
mov
(bad)
push
div
and
jnp
lods
mul
mov
sbb
push
jmp
push
push
(bad)
in
ror
push
jns
sti
sub
mov
dec
push
icebp
xchg
int
pop
push
movs
mov
and
nop
cmp
jae
repnz
push
push
leave
mov
jae
inc
mov
hlt
push
call
outs
out
stos
sub
adc
inc
jno
mov
and
push
push
hlt
dec
std
mov
lods
or
sbb
jecxz
test
outs
rcr
push
ja
or
jmp
shr
mov
jno
shl
scas
idiv
mov
jecxz
sbb
jecxz
inc
call
push
bound
jge
(bad)
loop
ret
push
shl
lods
aam
xor
cmp
or
stos
je
add
pop
jl
or
xor
rol
pop
adc
aam
sbb
sbb
data16
jg
xor
es
pop
icebp
loopne
adc
add
push
dec
xlat
cli
cmp
pop
add
test
push
xchg
(bad)
add
jmp
imul
or
in
loope
loope
jo
sub
(bad)
adc
adc
xchg
(bad)
inc
fwait
jne
enter
call
test
cdq
jg
test
cmp
test
mov
mov
pop
push
fidiv
lahf
cld
bound
test
mov
fidiv
frstor
jle
xor
and
sbb
add
sahf
sbb
stc
adc
repz
out
in
mov
cmps
stc
sbb
in
jb
jge
mov
push
and
jb
das
adc
mov
call
push
stos
push
lock
mov
cs
cli
pop
nop
call
ss
xchg
dec
aas
loopne
sub
imul
nop
push
stos
ficomp
loope
jg
js
int3
enter
popa
stos
jo
clc
stc
ja
inc
mov
into
test
popf
call
jbe
loopne
ror
mov
mov
std
mov
sbb
add
mov
xchg
pusha
push
pop
cmps
(bad)
cmc
xchg
gs
jecxz
jne
cmp
pop
xchg
pop
std
push
sub
xor
fld
stos
in
adc
mov
mov
shl
sar
or
ja
(bad)
sub
inc
sub
js
repz
ret
xchg
(bad)
pop
dec
lods
in
jmp
hlt
mov
jo
retf
lahf
sbb
dec
pop
ss
xor
or
repz
mov
xor
or
dec
aam
adc
pop
add
add
mov
(bad)
sbb
int
inc
nop
std
push
mov
enter
test
xchg
add
out
fistp
int3
dec
adc
cli
pushf
sub
sub
adc
mov
xchg
xchg
add
cmp
jnp
in
xor
mov
xchg
pop
addr16
xchg
pop
mov
int3
ins
fild
jl
das
adc
pop
xchg
cmp
in
stc
aam
or
inc
pusha
jno
jge
loopne
sub
inc
jecxz
jo
cld
mov
mul
ss
aaa
mov
lods
leave
scas
retf
push
fucomip
mov
mov
inc
mov
cmp
inc
aaa
sbb
ja
fmul
inc
or
mov
sub
test
pop
xor
adc
pushf
(bad)
sub
or
ins
not
and
cs
in
mov
imul
setnp
and
mov
gs
les
push
mov
dec
(bad)
inc
iret
push
lods
scas
mov
pusha
mul
mov
cmp
fs
mov
mov
mov
movs
data16
mov
std
ret
ja
ret
jmp
(bad)
outs
push
inc
pusha
sbb
in
pop
xor
sub
xchg
pop
adc
and
dec
mov
das
push
ficom
pop
stc
adc
inc
pop
lea
jae
in
mov
and
add
mov
imul
arpl
mov
sub
mov
jo
push
inc
nop
das
or
xor
daa
add
cmp
and
sbb
es
xchg
mov
and
inc
das
jo
xor
stos
outs
not
xchg
dec
or
(bad)
push
lea
cmp
lea
xchg
mov
pop
jle
cdq
cmp
xor
adc
xchg
fmul
imul
sar
fist
cmp
ja
or
outs
pop
(bad)
mul
xchg
and
push
popf
pop
mov
push
or
repz
xchg
imul
not
mov
add
call
ins
pop
adc
jmp
mov
out
aam
or
jecxz
xor
cmp
xchg
inc
fimul
call
jae
jmp
clc
add
and
pop
pop
push
arpl
cmp
ja
into
xor
dec
fdivr
imul
fwait
adc
fstp
jmp
dec
pop
push
or
aas
pop
sub
movs
inc
mov
jns
int
sbb
(bad)
out
pusha
out
dec
mov
jno
and
mov
pop
inc
sbb
xchg
jb
sar
lock
pusha
pop
mov
pop
idiv
push
into
xchg
sbb
hlt
or
int3
int
sbb
aaa
xor
mov
and
cmp
sbb
imul
enter
lods
dec
inc
mov
xor
cmc
adc
lods
lock
dec
not
mov
es
mov
cli
adc
aad
out
popa
mov
jge
aaa
or
nop
pop
mov
xor
mov
xchg
dec
or
mov
jmp
rcr
xor
andnps
repz
pop
rcr
adc
ror
lods
mov
jp
adc
(bad)
xlat
mov
add
pop
jle
shl
sub
push
sar
movs
lock
jnp
sub
push
lea
ss
je
hlt
sbb
push
loopne
retf
mov
out
sub
repnz
mov
test
test
repz
scas
xor
inc
xor
push
(bad)
pop
adc
mov
adc
adc
out
push
dec
pop
rep
jge
inc
retf
(bad)
loop
add
xchg
pop
push
mov
(bad)
inc
xchg
sti
mov
and
(bad)
sbb
out
jb
dec
enter
dec
fsub
enter
in
sar
retf
pop
bound
cs
clc
pop
xor
fidivr
cmc
retf
jge
pop
iret
jo
lahf
mov
sbb
adc
lahf
out
push
push
jecxz
jecxz
adc
cmp
dec
ja
sar
std
jo
cmps
enter
sub
and
xchg
adc
scas
int
adc
and
xchg
mov
cwde
shl
mov
(bad)
cmps
push
mov
push
idiv
push
sub
ja
loopne
imul
lds
cmps
hlt
inc
call
xchg
sbb
and
cmp
out
add
sahf
jmp
shl
cmp
inc
and
sbb
cld
rcr
cmc
(bad)
jno
mov
jo
mov
mov
mov
jmp
xchg
fild
and
cs
in
dec
dec
pop
out
(bad)
aam
jne
mov
in
sbb
adc
leave
enter
das
xchg
mov
jno
out
inc
aaa
dec
pop
sahf
jns
fs
bound
or
fs
or
mov
int
mov
inc
(bad)
lock
pop
push
out
push
jle
mov
icebp
push
dec
es
imul
repnz
mov
jmp
pop
jl
imul
dec
pop
xchg
pop
aas
lock
dec
scas
popf
ja
test
push
cmp
adc
adc
mov
dec
mov
cli
(bad)
and
nop
mov
enter
mov
(bad)
call
retf
inc
rol
jae
mov
test
mov
pop
retf
int3
push
std
mov
mov
fmul
push
cli
mov
xor
je
inc
cmps
mov
(bad)
popf
dec
fdiv
jle
je
mov
(bad)
or
loope
jmp
sub
pop
in
mov
push
mov
or
adc
cmp
pop
mov
mov
inc
loope
dec
imul
mov
jae
xchg
xor
jbe
jg
dec
mov
push
lahf
paddusw
sub
test
cmp
and
dec
dec
in
sub
mov
fsubr
inc
add
retf
sbb
pop
mov
jnp
repz
mov
jle
or
xor
xchg
jae
adc
pop
cmp
jecxz
movs
xchg
xor
(bad)
loop
jg
mov
or
inc
pop
cmp
mov
int3
pop
mov
mov
in
(bad)
adc
push
imul
shr
and
test
retf
pop
jb
push
int
outs
(bad)
mov
mov
or
and
arpl
es
add
mov
adc
jae
pcmpgtb
test
mov
cmp
mov
inc
fst
jmp
mov
mov
nop
pop
loop
xchg
xchg
mov
imul
cmp
and
xor
cmp
mov
adc
xor
jg
xchg
mov
lahf
out
xchg
xor
push
pusha
inc
les
add
hlt
ins
mov
xor
and
ror
add
(bad)
and
les
pop
rol
mov
icebp
stos
xor
pop
push
retf
xchg
adc
add
ret
adc
bound
daa
adc
adc
pop
retf
xor
push
adc
xchg
mov
stos
repz
xor
adc
adc
repnz
outs
shr
aas
jbe
mov
int3
inc
cs
pop
jmp
push
shr
ffree
(bad)
arpl
cs
cmp
lock
inc
mov
aas
dec
scas
dec
adc
ret
daa
cmps
mov
leave
sub
ror
push
xchg
mov
les
outs
jg
popa
call
int
test
sub
mov
push
scas
ja
stos
xor
xchg
scas
fcom
pushf
(bad)
shr
sub
sbb
test
inc
pusha
pop
mov
pop
mov
xchg
mov
dec
stos
inc
mov
mov
gs
jnp
out
push
jmp
mov
pop
into
mov
bnd
mov
dec
fdiv
pop
test
pop
retf
cmp
dec
add
loopne
jmp
adc
movs
lahf
or
xlat
dec
lahf
pop
pop
cli
cmp
fld
(bad)
cmc
adc
mov
dec
or
or
cmps
mov
mov
(bad)
sub
movs
out
cwde
movs
push
dec
ins
add
fsubr
cli
mov
inc
and
cmp
jae
adc
sub
in
aad
out
shr
aas
cmp
jmp
pushf
push
jne
xor
xor
ss
sub
pop
pushf
inc
xchg
mov
inc
lahf
int
stos
mov
stos
sbb
pop
xlat
mov
loope
push
mov
je
mov
ins
xor
adc
loope
fldcw
std
mov
rcl
pop
cmp
pop
lahf
mov
sbb
dec
mov
jns
call
aad
lock
mov
mov
mov
sahf
sub
xchg
mov
movs
add
sbb
jne
jmp
or
cs
imul
(bad)
jmp
sbb
mov
arpl
lods
loopne
icebp
iret
in
out
mov
xor
sbb
add
cli
cmp
cmp
push
icebp
xchg
dec
or
ss
fidivr
stc
xchg
inc
add
outs
jo
sub
gs
xchg
(bad)
(bad)
mov
fcomi
inc
cld
mov
dec
add
sub
aas
sbb
arpl
add
mul
mov
add
mov
iret
mov
mov
cmp
ror
pop
jmp
shr
shr
inc
int3
push
inc
mov
shl
cmp
jns
in
lds
xchg
gs
gs
dec
mov
mov
jle
shr
mov
add
pop
ret
aas
stos
out
dec
add
or
dec
pop
iret
hlt
ins
imul
push
and
xchg
xchg
push
add
cmc
fsub
(bad)
push
stc
pop
icebp
jp
mov
sub
push
gs
mov
scas
xchg
cld
jl
xor
pop
in
pop
sbb
shl
pop
adc
cmp
stos
pop
pusha
std
push
push
cli
xchg
call
jge
scas
out
leave
jne
mov
adc
outs
mov
adc
mov
and
jge
mov
xchg
out
(bad)
shr
dec
inc
(bad)
in
and
adc
pop
inc
xor
xchg
inc
in
arpl
mov
mov
push
ins
mov
das
mov
mov
out
(bad)
mov
int3
pusha
xchg
call
dec
adc
push
add
xor
sub
push
push
mov
ficomp
nop
rcr
(bad)
in
mov
mov
inc
push
loop
jp
or
adc
out
frstor
or
xchg
mul
or
inc
fild
iret
inc
add
push
in
inc
sub
xor
xchg
sub
add
stc
mov
les
pop
out
xor
aaa
and
cmp
std
sub
cmps
pop
pop
pop
cmps
inc
iret
jns
arpl
pop
jg
dec
test
test
mov
add
sti
(bad)
cmp
xchg
jmp
std
pop
daa
mov
and
pop
mov
add
pop
jp
pushaw
xor
loopne
xchg
test
and
(bad)
mov
(bad)
or
xchg
pop
iret
push
jb
xchg
ret
ss
mov
jmp
ss
jnp
movs
fwait
inc
or
imul
mov
sbb
or
mov
pushf
sahf
add
inc
inc
xor
fadd
push
clc
daa
ror
mov
inc
mov
mov
jo
add
mov
outs
sbb
mov
fsubr
lahf
cmps
dec
into
(bad)
adc
test
cs
inc
and
sti
jbe
dec
xchg
cmp
js
pop
cli
out
outs
pop
dec
cmp
push
ds
pushf
mov
ins
retf
int
std
cmp
mov
jmp
adc
push
xor
sub
cmps
retf
push
push
es
sbb
or
clc
cwde
or
sub
cli
call
sbb
ins
jns
pop
sar
sar
arpl
xchg
jge
(bad)
xchg
jecxz
out
retf
inc
sbb
or
or
stc
mov
daa
pop
mov
dec
adc
jle
mov
add
test
push
cmp
add
push
test
iret
int
and
mov
mov
adc
daa
stos
int3
xchg
mov
add
(bad)
rcr
mov
fucom
mov
(bad)
icebp
movs
adc
xlat
ins
hlt
jmp
mov
test
pop
add
dec
ss
loope
out
add
or
xor
sub
fsubr
shl
mov
mul
in
push
arpl
cdq
cmp
lock
fimul
cdq
scas
cdq
popa
loop
popa
push
xor
mov
jmp
test
cs
push
sbb
adc
loopne
shl
sub
fisubr
(bad)
pop
pop
mov
pop
or
movs
test
sub
lahf
aaa
xchg
cld
mov
popa
adc
ja
lods
ins
mov
mov
dec
daa
sub
inc
in
scas
lods
out
repz
mov
test
xchg
fimul
or
xchg
loope
xlat
mov
sti
imul
(bad)
jns
jmp
or
push
cli
and
inc
inc
loopne
or
jno
push
xchg
out
pusha
(bad)
pop
jmp
sbb
hlt
test
(bad)
or
pop
inc
dec
and
and
or
sub
aad
fcmovu
mov
add
mov
mov
xchg
adc
xor
out
ret
or
stc
or
addr16
add
(bad)
sbb
into
push
adc
lds
sbb
xchg
out
xor
ret
or
imul
addr16
mov
mov
pop
adc
push
mov
jae
test
sbb
sub
hlt
movs
das
mov
pop
push
sbb
lea
loope
hlt
cli
outs
shl
gs
push
sbb
outs
aaa
xor
(bad)
int
les
je
in
movs
es
imul
push
imul
jbe
add
cld
xor
cdq
sar
nop
or
fs
inc
jnp
sbb
call
jecxz
fwait
jnp
pop
and
lahf
adc
sbb
in
ins
xchg
mov
mov
fist
ins
(bad)
cmp
mov
shr
aam
push
ret
lods
jae
in
ins
pop
mov
adc
and
(bad)
(bad)
aas
push
xor
pushw
add
(bad)
jb
adc
not
rcr
(bad)
sbb
xchg
mov
sub
out
ds
sub
jp
ins
mov
leave
push
dec
mov
and
ret
fldcw
shr
aaa
sar
push
into
fidiv
(bad)
outs
mov
pop
in
add
ds
dec
in
xchg
jae
ficom
pop
mov
cmp
je
mov
outs
popa
aam
sti
dec
outs
pushf
mov
adc
scas
je
mov
cmp
popa
xchg
pop
mov
fcomi
sbb
fnstenv
sub
in
xor
popa
inc
cdq
xchg
sub
std
and
psrad
and
add
clc
sahf
adc
pop
shl
popa
pop
adc
scas
adc
adc
int
cmps
inc
lahf
inc
rol
scas
jl
mov
dec
sar
bound
inc
movs
lods
mov
xor
pop
pop
push
jno
adc
call
mov
cdq
inc
stos
push
push
dec
adc
jg
fldcw
ja
sbb
mov
fs
xchg
push
cdq
out
aad
hlt
push
or
xchg
push
shl
arpl
push
ret
jmp
sbb
sbb
dec
mov
fstp
aam
outs
(bad)
lea
cmp
ret
sub
and
push
pop
cmp
dec
push
popf
xor
cmp
xor
ret
mov
and
(bad)
bound
es
sbb
pusha
in
cs
xchg
(bad)
xor
scas
cdq
pop
ins
jle
cmp
fstp
mov
in
jns
std
xchg
mov
test
cmc
mov
mov
icebp
fdivr
shl
cmp
add
or
imul
fiadd
fdiv
imul
out
mov
(bad)
je
mov
inc
cmp
push
mov
mov
mov
push
outs
inc
inc
imul
(bad)
push
ins
outs
push
mov
test
mov
cmc
cld
dec
loope
call
out
jmp
loope
jno
loop
xchg
cmc
sbb
ins
xchg
xchg
(bad)
icebp
outs
cmp
push
xor
add
pop
test
aam
out
stos
pop
pop
aam
push
ror
cmps
add
pushf
jge
nop
out
jmp
cmp
in
cmp
cdq
fldcw
shr
(bad)
repnz
outs
(bad)
ins
dec
test
jnp
movs
mov
fild
sbb
imul
and
pop
sbb
push
mov
push
inc
(bad)
movs
push
cmp
arpl
rcl
repz
and
iret
mov
or
mov
out
sbb
fisub
dec
dec
loope
sahf
cmp
sbb
and
dec
mov
test
ja
lahf
repz
adc
pop
shl
dec
push
clc
icebp
jl
push
pop
push
(bad)
or
and
mov
dec
mov
adc
sbb
into
sub
(bad)
outs
or
xor
xchg
or
jecxz
mov
sub
sbb
jle
jne
in
jp
jmp
fild
sub
call
push
inc
lock
jne
sbb
mov
pop
scas
lahf
adc
cmp
mov
aam
pop
sub
arpl
clc
mov
mov
add
sahf
imul
ret
xchg
fistp
jmp
lahf
push
shl
and
loopne
ror
inc
fwait
movs
pop
fnstsw
mov
pushf
inc
sub
(bad)
ffree
mov
mov
cmp
mov
out
imul
inc
loope
sbb
xchg
fisub
pop
lea
stos
movups
rcr
gs
jnp
jmp
retf
and
jp
int3
(bad)
sahf
pop
ret
jmp
scas
cwde
arpl
and
mov
fiadd
mov
out
icebp
enter
push
or
stc
mov
out
sbb
mov
and
repz
icebp
ds
inc
mov
cmc
push
pop
pushf
mov
and
mov
mov
ffree
mov
sbb
leave
and
or
dec
jne
std
popf
fnstcw
fs
mov
cmp
std
sub
xor
fiadd
adc
sbb
push
pop
test
mov
or
cmp
adc
mov
repz
adc
adc
icebp
sbb
add
and
adc
add
gs
mov
aaa
push
div
jne
pop
push
sbb
lock
push
pop
jp
xchg
xor
jle
xchg
mov
(bad)
movs
inc
aaa
cmc
out
and
cmps
loopne
popf
pop
xchg
idiv
stc
sub
mov
mov
ret
mov
push
or
loope
inc
(bad)
call
addr16
aas
xchg
mov
inc
xor
sbb
test
add
pop
cli
test
jb
push
mov
xchg
cmp
xor
hlt
test
outs
data16
mov
das
mov
jmp
call
xor
xchg
dec
mov
in
shr
mov
ficom
retf
and
outs
fisub
push
lods
into
sti
pop
fsubr
cmp
xor
sub
ja
fwait
cwde
(bad)
or
mov
(bad)
mov
or
imul
lock
push
sub
sahf
push
pusha
enter
popa
xor
sbb
and
in
sti
sbb
xor
leave
pop
mov
cmp
inc
mov
in
stos
push
jne
mov
cmp
fisubr
sub
xor
popf
fstp
inc
or
movs
les
pop
in
(bad)
out
sub
scas
cmp
jo
mov
out
dec
xchg
in
push
rcl
inc
pcmpgtw
dec
in
jne
xor
fsub
add
fidivr
dec
mov
ins
inc
xchg
pop
shl
push
repnz
ret
or
mov
push
add
lea
mov
int
add
test
jbe
lock
idiv
fisub
cmc
mov
dec
mov
push
mov
add
xlat
bnd
rcl
jno
sbb
mov
sbb
add
xor
pop
sub
adc
mov
push
mov
push
xchg
mov
mov
dec
call
pop
jl
je
cmp
(bad)
nop
pusha
fsubr
dec
popf
in
inc
pop
adc
and
ja
adc
test
add
push
push
pop
jnp
and
and
sub
mov
and
aas
or
add
ret
adc
ins
jno
shl
mov
xchg
jle
mov
into
pop
cmp
fwait
xchg
rcr
push
jo
xlat
mov
xchg
ja
ja
xchg
int3
xchg
jge
mov
repz
mov
adc
sbb
popf
adc
ss
pop
in
mov
out
imul
xchg
pop
retf
jl
add
stc
xor
lock
repnz
clc
mov
jge
cmp
jg
out
out
int
xor
adc
mov
outs
xchg
xor
mov
inc
mul
fbstp
xor
inc
push
lds
imul
cmp
mov
outs
cld
jg
inc
call
dec
xchg
(bad)
les
clc
aam
jae
mov
sub
not
add
or
push
ficomp
or
xchg
xchg
(bad)
int
cwde
jl
pushf
in
mov
sbb
inc
shl
jle
mov
sub
leave
not
cmp
mov
or
jle
sti
xchg
stc
xchg
aam
add
push
cmp
fldcw
sbb
outs
xchg
pop
jp
movhps
shr
outs
das
cmps
loopne
push
or
in
leave
add
push
dec
mov
inc
or
xor
pop
jmp
scas
xor
xor
aam
sbb
scas
inc
lock
hlt
xchg
in
fcomp
rol
lock
nop
loopne
add
div
out
jp
int
clc
add
and
add
repz
mov
xchg
cmp
jmp
rol
ins
jecxz
jl
arpl
add
dec
sub
xchg
loope
mov
dec
enter
in
xchg
pop
stc
lahf
jno
mov
ins
ret
adc
lahf
ss
(bad)
in
jmp
test
loop
rcr
mov
pop
pop
ds
cmp
jnp
and
or
iret
dec
aas
push
mov
xchg
in
add
mov
nop
out
ret
cmp
mov
out
loop
inc
add
cli
xchg
inc
ins
in
inc
inc
mov
pop
in
hlt
sti
(bad)
in
add
mov
push
mov
aam
mov
sbb
jle
jbe
cmp
mov
inc
enter
xor
xchg
mov
mov
cmp
mov
cmps
in
sub
(bad)
mov
paddusb
sub
fwait
mov
sahf
push
adc
imul
and
(bad)
nop
outs
in
aas
in
and
dec
mul
in
test
xor
add
cwde
call
xor
cmps
xor
and
shr
dec
jmp
push
jo
xchg
fucom
dec
mov
cli
push
lea
jg
call
lods
inc
mov
shl
cmps
pop
push
push
adc
adc
or
mov
stc
pop
cmp
nop
and
std
sub
lds
gs
add
leave
pop
pushf
inc
xchg
pop
loope
dec
lea
sahf
pop
loope
loope
push
sbb
(bad)
push
or
xor
hlt
sub
push
dec
sub
imul
leave
sbb
les
cmc
pop
inc
call
mov
mov
in
cmc
pop
xor
dec
enter
mov
(bad)
in
call
and
mov
mov
cs
pop
adc
xchg
jno
mov
ja
sbb
fwait
out
out
mov
sahf
(bad)
cld
cs
pop
mov
inc
sar
inc
gs
mov
push
push
mov
jle
les
fcom
jmp
das
out
arpl
xor
mov
inc
and
gs
outs
sbb
in
imul
test
int
sbb
sbb
sbb
stc
rcl
cli
jl
jg
cmp
shr
adc
in
lock
lahf
int3
icebp
nop
les
jp
pop
cs
outs
mov
hlt
test
add
and
frstor
pop
mov
popa
pop
movs
pusha
adc
icebp
mov
pusha
adc
sbb
push
aad
fwait
push
inc
xchg
xchg
repnz
sbb
fcmovnbe
loopne
(bad)
pop
jmp
add
stc
jno
pop
neg
adc
xchg
outs
into
in
loop
cmp
repz
sbb
sub
xor
jl
int
adc
pusha
xchg
les
xchg
add
jne
in
test
push
test
dec
mov
push
not
pop
cmps
inc
cld
daa
sar
push
inc
rcl
sub
add
dec
pop
jne
push
in
call
add
sub
fmul
movs
push
pop
dec
loop
loopne
pop
cmp
pop
jmp
call
push
es
mov
xchg
push
cmc
aaa
aam
xchg
sbb
(bad)
bnd
pop
fdivr
pop
(bad)
out
lods
or
mov
(bad)
movs
neg
into
mov
jbe
adc
sahf
pop
(bad)
scas
pop
push
cmp
sbb
dec
popa
adc
in
(bad)
xchg
pusha
test
jmp
cmp
mul
adc
and
mov
lds
inc
sbb
int3
(bad)
cmp
nop
sbb
sti
sub
push
xchg
imul
shl
cmp
movs
mov
adc
pushf
inc
scas
lods
not
not
shl
and
pop
sbb
xor
icebp
popa
test
in
xor
clc
les
add
in
std
cmp
jl
rcr
adc
movs
push
dec
mov
xchg
(bad)
(bad)
pop
push
add
arpl
imul
fbstp
mov
xchg
scas
jl
cdq
pop
mov
add
xchg
data16
push
bound
retf
pushf
dec
dec
adc
pop
sub
inc
mov
out
jle
push
push
fidiv
dec
imul
icebp
sub
outs
inc
jle
jne
ret
adc
add
mov
push
in
xor
mov
jge
outs
add
test
aam
lea
test
jmp
jle
cmp
retf
fcom
add
out
or
movs
call
call
pop
sahf
mov
into
outs
retf
in
push
push
inc
jbe
add
icebp
jae
hlt
xor
call
push
push
in
scas
and
in
ret
jle
xchg
cdq
push
(bad)
bound
push
or
ins
push
xchg
add
ret
popa
ror
ret
cmp
jecxz
cmp
or
mov
add
ficom
inc
loopne
mov
inc
adc
add
stos
scas
imul
mov
push
mov
inc
mov
mov
mov
pop
mov
loop
jo
test
addr16
cmp
xor
push
dec
stc
fdivp
push
or
ficomp
inc
outs
cmp
jmp
adc
clc
jp
adc
mov
and
jle
(bad)
movs
and
das
fsubr
push
mov
arpl
(bad)
outs
dec
leave
out
out
test
dec
add
sbb
pop
in
mov
fadd
push
mov
push
outs
rcl
sub
aas
cmp
sbb
out
aam
ret
pop
or
int
(bad)
fcmovbe
out
jecxz
ret
out
(bad)
rol
or
adc
jb
clc
bound
call
sub
pop
cmp
in
cmp
push
stc
mov
aas
pmovmskb
call
test
ss
idiv
dec
mov
or
in
add
or
enter
cdq
dec
data16
pushf
cmp
and
dec
arpl
dec
mov
sbb
dec
and
mov
gs
xchg
js
mov
ja
xor
into
ins
dec
pop
or
sub
inc
lods
dec
jae
arpl
push
cmp
sbb
xchg
nop
fldln2
jmp
test
adc
fdivr
mov
pusha
out
xor
fidivr
outs
into
cs
or
adc
leave
xchg
retf
push
fs
cli
cmp
push
mov
scas
mov
pop
xchg
cli
xchg
mov
(bad)
stos
push
pop
das
outs
pop
mov
rcr
imul
xchg
push
xlat
or
xor
add
push
mov
scas
dec
xor
mov
imul
mov
inc
shl
add
inc
inc
arpl
hlt
adc
(bad)
cmp
cmps
xchg
mov
push
inc
add
add
dec
push
ds
fcomp
dec
sub
pop
cmps
pop
imul
lock
mov
aas
xchg
cmps
cmp
pop
jne
jmp
in
in
out
cmp
loop
imul
mov
add
sbb
xor
aas
jbe
add
push
pop
add
pushf
push
or
push
test
pop
sbb
mov
arpl
or
dec
aad
fistp
aas
repnz
lods
sub
cmp
arpl
das
cmp
popf
les
lahf
rcr
leave
xchg
jecxz
arpl
adc
stc
sahf
leave
test
mov
add
add
xor
stos
ret
ja
dec
inc
test
mov
or
js
add
cld
or
(bad)
ret
push
sti
(bad)
mov
mov
jl
jno
cmp
adc
adc
mov
test
add
das
jecxz
call
out
(bad)
shr
mov
loope
or
out
cwde
sub
adc
je
aad
ds
(bad)
xor
xchg
xchg
mov
pop
imul
jecxz
imul
mov
and
mov
out
and
pop
test
mov
xor
xchg
mov
test
or
push
adc
jecxz
arpl
ds
sbb
pop
xchg
mov
xor
inc
pop
in
jle
pusha
imul
mov
jl
imul
vunpckhps
enter
mov
xor
jmp
pop
push
fmul
or
sbb
call
gs
jno
mov
dec
stos
(bad)
push
(bad)
dec
and
sbb
cmps
mov
mov
add
dec
jge
sbb
sbb
rcl
loop
mov
lea
inc
std
xor
test
or
dec
cmp
pop
ror
shl
shl
inc
sub
adc
mov
vmovaps
in
pushf
push
sub
add
push
mov
push
xor
nop
(bad)
xchg
repnz
outs
ror
ret
and
fsubr
pop
jecxz
adc
aas
mov
aaa
adc
pop
pop
jle
sar
push
inc
push
fcos
pop
lock
fsub
sub
sub
imul
test
sub
push
mov
jo
out
inc
scas
push
push
xchg
add
xchg
jne
jbe
and
fdivr
push
sub
cmc
mov
pop
test
test
stc
aaa
mov
jmp
js
movs
imul
fbstp
cmp
xchg
in
mov
inc
out
mov
daa
clc
rcl
mov
sbb
and
sbb
ret
arpl
adc
or
ficom
pop
cmp
ss
mov
mov
jl
aad
sbb
retf
shl
es
pop
imul
fcmovne
rcr
mov
inc
pop
pop
inc
inc
mov
sbb
imul
or
dec
jge
test
shr
test
shl
and
jae
sbb
xchg
xchg
jl
cli
mov
out
mov
or
and
push
(bad)
imul
mov
or
jae
cmp
stos
fs
call
loope
cmp
or
fld
retf
and
pop
add
js
adc
call
in
into
clc
mov
mov
fstp
pushf
or
adc
mov
lods
cmp
loope
jbe
inc
lahf
mov
movs
pop
inc
xchg
les
or
hlt
hlt
push
mov
pop
pop
push
out
dec
ret
mov
lods
leave
es
adc
mov
jne
lock
pop
adc
es
movs
jecxz
or
das
inc
mov
push
dec
retf
not
mov
repz
jb
push
adc
mov
adc
sub
out
inc
push
push
clc
pop
(bad)
adc
sub
cmp
sub
xchg
mov
cmp
sub
dec
cmp
push
xchg
mov
inc
(bad)
sub
ds
stos
sti
pop
test
sbb
cmp
sub
sub
cdq
add
gs
out
xchg
xor
jbe
cli
movs
dec
jmp
arpl
hlt
dec
retf
mov
cmp
or
ins
cmp
push
out
jns
mov
inc
dec
ss
enter
push
mov
sbb
imul
call
stos
jmp
jmp
fwait
mov
je
and
xor
ficomp
cld
and
jmp
jl
pop
imul
and
jne
imul
cmp
add
scas
ins
or
sub
add
xchg
sbb
repz
sub
adc
push
jmp
ss
jl
sbb
xchg
aad
fst
ret
dec
push
rol
jle
out
xor
mov
sub
sti
push
imul
jecxz
clc
imul
imul
and
repz
bound
int3
jns
repnz
(bad)
cld
push
cwde
out
pop
outs
repz
adc
cmp
neg
imul
adc
mov
sub
xor
stc
fstp
jb
int3
in
xchg
shl
cmp
mov
dec
rcl
into
xchg
sbb
mov
xlat
(bad)
mov
fst
cmp
pushf
retw
inc
inc
mov
or
sbb
test
dec
mov
mov
out
mov
and
mov
scas
je
push
movs
push
mov
pop
sar
cwde
inc
mov
pop
(bad)
retf
lea
xor
loope
test
sub
jecxz
add
add
cmp
inc
push
div
pop
dec
fdiv
rol
xchg
call
pop
sbb
retf
addr16
(bad)
pop
jmp
fidiv
fisubr
jnp
jno
movs
sub
mov
repnz
jmp
ret
div
jmp
dec
push
cs
and
shl
dec
mov
add
sub
pop
sbb
cld
mov
sar
push
pop
adc
(bad)
mov
ret
mov
mov
imul
pop
popf
mov
jbe
cmps
mov
data16
fbld
dec
or
or
scas
(bad)
arpl
sub
pop
fcomp
sti
idiv
inc
jmp
jle
add
push
gs
gs
shl
or
mov
cmc
cmp
xchg
lods
inc
sahf
add
mov
dec
mov
neg
and
dec
popa
xchg
test
retf
cmp
add
into
pop
nop
jecxz
call
inc
jp
adc
imul
mov
adc
sbb
or
inc
inc
out
repnz
lods
out
aas
inc
cmc
push
mov
push
mov
(bad)
test
xchg
mov
pop
jo
inc
fwait
cmp
inc
xchg
lahf
sub
out
aad
cmps
fiadd
jo
fistp
repnz
ds
dec
cmp
mov
in
loopne
cdq
adc
add
cmps
mov
cmps
inc
je
movs
adc
fcomp
push
jecxz
es
and
push
test
jns
or
imul
pop
cmp
mov
(bad)
push
pop
sbb
and
mov
lock
in
or
aad
rcr
shr
and
dec
ss
push
fsubr
ins
rcr
cmp
dec
bound
sbb
les
mov
(bad)
shl
(bad)
das
cmps
iret
ret
xchg
ins
movs
pop
frstor
cwde
mov
mov
jg
sahf
hlt
cld
pop
in
sbb
cmp
add
jbe
js
ins
mov
inc
aad
add
sbb
mov
sub
push
les
iret
sbb
cmp
or
cmp
xor
outs
inc
cmp
jnp
mov
scas
movs
repnz
xchg
(bad)
mov
lods
mov
shl
sub
and
xor
test
cmp
mov
sbb
inc
sbb
push
push
push
push
mov
mov
or
(bad)
imul
dec
xor
xchg
pop
xor
out
in
gs
lock
clc
jg
mov
xor
cmp
out
push
std
add
ins
mov
mov
inc
add
scas
inc
cmp
cmp
imul
xchg
rol
(bad)
and
mov
jmp
or
push
sub
pop
xchg
push
(bad)
dec
out
(bad)
push
test
mov
sbb
add
cmp
aaa
inc
mov
(bad)
sar
std
aad
daa
addr16
loopne
mov
push
mov
(bad)
pop
pop
pop
popf
in
fmul
es
jp
push
jl
xor
shr
or
daa
arpl
push
sbb
inc
hlt
ficomp
in
push
push
lea
sub
and
in
mov
add
add
fbld
sti
sbb
ficomp
fprem1
daa
stos
mov
inc
outs
aam
cmp
push
inc
dec
neg
movs
cmp
and
mov
mov
enter
ins
jge
test
fsubr
movs
imul
hlt
dec
inc
mov
and
call
jl
test
xchg
dec
mov
xchg
aas
mov
dec
daa
push
mov
sub
repnz
scas
popa
push
dec
(bad)
(bad)
pop
sti
and
push
push
aas
outs
rcr
test
mov
push
mov
mov
lds
in
xor
test
jmp
mov
aas
test
cwde
retf
cmp
lds
add
cmp
pop
cmp
outs
push
sbb
jbe
fiadd
xor
loopne
outs
mov
stc
(bad)
mov
lods
mov
cmc
ret
dec
movd
data16
lds
push
pushf
dec
jo
or
cmp
dec
add
nop
ins
in
les
pop
sbb
sbb
cmp
xchg
add
pop
push
jnp
sub
mov
sbb
dec
aas
push
lds
gs
sbb
mov
mov
mov
jecxz
jge
jo
cmp
cs
mov
retf
ins
xor
int3
(bad)
(bad)
lods
sbb
push
hlt
mov
in
inc
int
xor
inc
les
(bad)
ja
sbb
lahf
jg
call
adc
dec
push
inc
jge
sub
cs
jmp
jl
stos
xlat
nop
fwait
pop
popa
cs
pop
bound
dec
cmp
dec
loopne
add
mov
aas
pop
jmp
fnsave
push
xor
(bad)
lods
je
mov
push
sub
pop
pop
pop
jecxz
loope
pop
jmp
mov
ficom
xlat
mov
inc
push
add
push
int3
dec
sahf
or
outs
stos
push
adc
int
test
popf
dec
popf
dec
jp
adc
gs
push
mov
dec
pop
stos
mov
(bad)
adc
das
aas
leave
cmps
jmp
nop
adc
pop
adc
and
cmp
in
shl
push
lds
shl
dec
push
in
pop
bnd
ja
mov
(bad)
adc
push
ja
push
push
xchg
dec
shr
xor
or
call
aaa
adc
sbb
xor
mov
dec
push
ins
and
movs
or
push
fwait
lock
and
mov
mov
mov
pop
fwait
and
out
enter
mov
int
dec
in
fild
cmp
adc
mov
inc
push
ret
push
push
ins
stos
mov
sar
aas
add
scas
int
js
leave
ins
add
cmp
(bad)
and
sbb
push
mov
hlt
imul
push
dec
xor
in
ja
cmp
imul
aaa
mov
out
adc
stos
fwait
enter
mov
and
(bad)
adc
fld
sub
cmp
cld
jl
xor
pop
sub
xor
sbb
pop
cmc
das
mov
cmp
mov
mov
inc
pop
outs
or
(bad)
cmp
ret
loop
loop
rol
xchg
sbb
jg
fst
ins
xchg
push
ret
and
movs
xor
pop
xchg
sub
pusha
mov
mov
js
and
pusha
xor
and
ss
int3
mov
and
aaa
pushf
mov
mov
ficom
inc
adc
test
push
sub
xchg
add
bound
fldenv
inc
cmp
dec
in
mov
sbb
js
inc
adc
pushf
mov
je
stos
xor
sbb
bound
(bad)
fstp
lea
jmp
cdq
mov
in
mov
pop
inc
cmp
xor
or
mov
cmp
test
add
cmp
or
loope
adc
test
aam
jo
dec
shr
hlt
push
aaa
xchg
mov
mov
lea
bswap
daa
push
out
mov
out
push
mov
je
sub
cwde
adc
sar
xchg
or
push
cmc
adc
and
dec
and
in
(bad)
(bad)
ret
loopne
mov
stc
cld
push
mov
test
mov
and
clc
add
or
shl
dec
(bad)
xor
lods
cmp
rcr
pop
les
and
jge
mov
(bad)
out
fstp
mov
mov
in
xor
ins
jp
imul
jnp
fdivr
adc
push
in
stos
mov
iret
sti
push
inc
jmp
shl
xor
addr16
pop
xchg
xchg
out
retf
mov
push
popf
fs
cmp
shr
scas
clc
dec
in
mov
fadd
xor
dec
ds
pop
je
push
loop
ret
out
ss
fnstsw
lods
iret
mov
jmp
adc
mov
xchg
retf
inc
call
les
ret
fsubr
out
xor
mov
pop
nop
ror
jb
stc
pop
cld
pop
mov
dec
dec
aas
cmc
adc
mov
fsub
xchg
push
adc
xchg
les
cli
cmp
inc
ja
xor
xchg
lahf
or
xor
inc
cmp
inc
icebp
retf
imul
jg
jle
out
or
dec
xchg
mov
add
jge
mov
shl
xchg
(bad)
(bad)
je
ds
adc
xchg
xchg
cmc
fdivr
mov
pop
(bad)
shr
pop
pop
mov
pop
add
lds
mov
leave
push
aad
mov
ins
repnz
mov
inc
inc
(bad)
and
in
fst
or
clc
or
scas
ds
mov
and
test
out
mov
adc
inc
dec
jb
ror
(bad)
cmps
hlt
xchg
(bad)
mov
cmp
mov
enter
rcr
repnz
push
std
mov
sub
sub
mov
xor
mov
inc
aas
cld
inc
(bad)
test
test
ja
icebp
mov
outs
les
loop
push
arpl
and
mov
mov
jne
sub
mov
stos
jae
movs
sbb
pop
pop
clc
ret
call
cmp
mov
gs
push
scas
push
jge
loope
adc
adc
or
jle
push
push
push
jae
clc
pushf
sbb
lods
push
(bad)
jmp
adc
fld
ret
hlt
xchg
cmps
ins
push
lods
xchg
xchg
jno
or
(bad)
js
lock
and
inc
push
test
je
pop
mov
push
xor
push
mov
push
mov
ja
xchg
jae
(bad)
cmc
dec
xchg
mov
xchg
daa
or
test
inc
xchg
test
dec
test
(bad)
or
test
je
xor
push
hlt
lock
jmp
adc
inc
xor
and
mov
sahf
add
pop
sbb
push
fnstsw
neg
movs
mov
fcmovb
div
inc
lea
fs
fadd
dec
outs
sub
and
adc
mov
sti
xchg
jns
repz
imul
pop
add
shr
call
cmps
mov
nop
inc
sbb
jae
stc
add
jp
test
out
jp
ins
mov
aad
mov
and
jl
inc
stos
arpl
bound
xlat
sbb
scas
enter
jno
sub
(bad)
popa
lock
(bad)
sbb
and
pop
int3
jmp
mov
repnz
clc
sbb
ret
pop
pop
mov
sub
push
das
jmp
mov
jge
jle
push
ds
fs
bound
into
push
push
fucomp
imul
mov
pop
fmul
cmps
icebp
stos
jnp
fwait
cmp
dec
shl
in
inc
jl
or
dec
in
push
push
out
jnp
pop
or
idiv
mov
pushf
dec
popa
xlat
sbb
not
idiv
mov
ret
scas
or
pop
and
mov
pop
cwde
(bad)
or
in
mov
sar
push
mov
fdiv
xlat
xor
call
loopne
mov
push
adc
xchg
ins
shl
mov
cmp
pop
cmps
jbe
out
jnp
aaa
push
add
xchg
push
jecxz
inc
sub
pop
mov
sbb
add
cmps
adc
inc
pop
mov
out
cmp
pop
pop
or
cdq
xchg
and
push
sahf
and
outs
in
mov
push
jge
cmps
and
push
enter
sbb
or
push
sbb
fs
pop
pop
loopne
sub
mov
sub
dec
cdq
inc
inc
fist
mov
cmp
xchg
or
pushf
jo
ins
das
cmp
mov
mov
cld
cmp
and
xor
inc
dec
ins
leave
addr16
sbb
xlat
mov
test
inc
sub
fisttp
sub
or
sub
xor
adc
pop
cmp
ror
pop
(bad)
aas
into
pop
ss
push
rcl
pop
test
push
cmps
cs
jmp
sti
and
dec
sbb
push
repnz
ins
lea
cmp
dec
ficomp
loop
repz
loopne
ja
fadd
ja
xor
sbb
repnz
rcl
pop
jne
xchg
retf
(bad)
xchg
cmp
inc
mov
data16
jl
in
sbb
or
xchg
xor
sub
jl
stos
into
add
cmp
xchg
xor
stos
pop
cld
push
je
(bad)
push
push
add
fsubr
mov
ds
out
and
mov
sbb
adc
int3
fcom
mov
cmc
mov
xchg
sub
int
mov
adc
sub
fadd
push
ret
adc
jl
push
mov
add
jecxz
xchg
int3
add
sbb
std
adc
mov
movs
ins
fdiv
and
cld
(bad)
dec
imul
shl
mov
cmp
popa
into
sbb
and
inc
adc
je
sar
pop
add
add
mov
cs
pusha
xchg
stc
xchg
mov
loop
jmp
jg
jl
push
loope
push
hlt
neg
and
or
in
shr
mov
fsubr
and
fldenv
mov
cdq
sub
aam
in
and
loopne
scas
fadd
xchg
mov
mov
cmp
cmp
sbb
pushf
scas
loop
xchg
fnstcw
xor
pop
jne
scas
xor
(bad)
sti
rcl
nop
stos
mov
je
pushf
arpl
dec
dec
xchg
stos
dec
frstor
sar
add
je
xchg
pop
pop
pop
test
inc
jnp
jno
dec
xlat
mov
fwait
retf
pop
push
lahf
cmp
inc
imul
inc
xchg
pop
pusha
retf
std
bound
ds
fs
mov
repnz
adc
or
push
cmc
cmp
ins
or
jg
outs
arpl
adc
rol
out
inc
pop
mov
or
add
iret
adc
lods
mov
scas
(bad)
inc
xor
repnz
push
xchg
inc
out
add
jno
sahf
adc
dec
jp
sub
retf
jns
pcmpgtd
cmp
sub
int3
jbe
mov
(bad)
call
mov
dec
xor
mov
imul
mov
in
cli
(bad)
(bad)
lds
push
cmp
icebp
sub
mov
sub
inc
(bad)
gs
and
imul
jns
ins
test
adc
sub
std
and
aam
push
out
mov
pop
and
sar
fbstp
adc
add
movs
call
mov
and
dec
stos
gs
shr
(bad)
std
push
aam
mov
add
ins
setp
push
pushf
ror
add
xchg
lods
mov
mov
jecxz
mov
(bad)
mov
and
xchg
or
sub
cmp
cmps
cmp
pop
rcr
push
sub
stc
bound
ret
jl
pop
inc
xchg
dec
out
push
inc
add
(bad)
fs
inc
inc
xor
xchg
bound
dec
mov
jo
xor
cmp
mov
jp
popa
ret
lahf
pop
ss
jle
stos
out
(bad)
lahf
fmul
gs
sub
sbb
sbb
jnp
enter
jno
data16
ja
rcl
sub
outs
and
inc
fiadd
mov
lock
mov
fcomp
shl
loope
inc
lds
lock
out
and
hlt
rcr
and
lock
dec
push
sub
pop
dec
les
inc
add
lock
pop
movs
cmps
xor
inc
adc
lahf
sbb
push
push
outs
pop
jg
push
jno
aam
inc
fdivr
aaa
rcr
(bad)
out
aam
mov
xor
add
push
adc
mov
xchg
pop
inc
ficom
inc
test
pop
ss
test
sub
fstp
pusha
cmp
sbb
mov
push
fyl2xp1
adc
mov
or
jbe
xchg
pop
pusha
loopne
test
scas
in
cmc
ja
xchg
add
and
add
or
push
gs
test
inc
add
fld
and
dec
sub
movs
and
sbb
leave
ffreep
shl
ja
xchg
push
mov
pop
push
mov
dec
push
hlt
and
mov
call
fneni(8087
(bad)
test
sbb
and
test
cmp
hlt
das
adc
and
shr
stc
sub
das
push
pop
push
adc
push
dec
push
les
inc
jecxz
sbb
xor
pop
mov
cmp
out
sub
jmp
aas
or
xchg
hlt
outs
dec
push
scas
push
mov
dec
dec
mov
shl
cli
dec
sbb
jb
pop
mov
les
mov
push
dec
inc
push
lea
push
cmp
add
push
fisub
js
rcl
and
adc
xchg
mov
jae
mov
test
adc
outs
cmp
retf
pop
mov
sbb
push
jo
pusha
in
mov
(bad)
mov
push
popa
rcl
xchg
jge
jae
stos
adc
pusha
scas
cmp
not
mov
and
(bad)
adc
retf
cmp
cmps
xor
test
jno
mov
or
adc
mov
mov
movs
xchg
mov
mov
pop
ret
ja
sub
fsub
lods
mov
(bad)
add
imul
mov
xchg
xchg
out
xchg
daa
sbb
cwde
or
clc
lea
lahf
call
push
inc
jl
xchg
add
rcl
nop
cld
call
cs
inc
push
ss
pop
bound
and
jl
adc
iret
inc
lods
iret
cmps
hlt
inc
dec
sbb
mov
mov
loope
xchg
out
es
fstp
jmp
or
xor
lods
lods
inc
shr
mov
xchg
not
aad
imul
push
inc
inc
dec
int
int3
(bad)
jle
pop
cmp
pop
or
test
hlt
dec
xchg
mov
add
ds
dec
lock
test
sar
add
mov
imul
sub
sqrtps
jns
xchg
or
out
mov
dec
add
test
out
push
(bad)
call
pop
addr16
push
and
mov
pushf
cmp
fstsw
lea
and
and
xchg
call
sub
pop
sub
into
sbb
add
mov
push
ror
mov
inc
and
mov
jbe
fcmovnb
sub
xchg
xchg
jb
out
mov
mov
lea
repnz
pop
(bad)
jmp
add
bound
aas
ins
push
jbe
push
jae
xor
scas
cmp
xor
xor
jecxz
pop
scas
loope
pop
jg
lea
sbb
mov
es
dec
push
pushf
stos
stos
jle
jmp
dec
cmp
lods
cs
push
stc
and
lods
inc
push
and
jb
sub
mov
or
fimul
and
xor
push
mov
call
sub
fimul
inc
mul
ror
xchg
mov
xchg
stc
cmp
adc
cmp
sub
sub
xchg
je
imul
push
pop
fs
jecxz
jb
sub
xchg
rol
mov
out
popf
xlat
pop
(bad)
mov
xor
ins
xor
call
cdq
fldcw
fnstenv
mov
nop
jg
retf
movs
adc
fistp
sub
mov
xchg
and
add
pop
or
add
(bad)
jle
repnz
xchg
leave
into
adc
mov
sub
mov
scas
sti
lds
loop
inc
cmp
mov
mov
sar
jg
inc
jg
mov
mov
push
cmp
bound
hlt
movs
mov
push
ror
and
sbb
push
imul
and
loopne
mov
push
pop
xor
inc
je
addr16
mov
test
jns
repnz
fisub
mov
mov
loop
inc
inc
dec
fadd
popf
dec
mov
sub
sub
div
imul
clc
inc
(bad)
fmulp
rcr
cli
inc
jmp
fwait
xor
add
lock
and
scas
pop
lahf
fs
nop
fsub
add
mov
imul
sbb
loopne
inc
push
aaa
cld
inc
jl
mov
sbb
and
imul
dec
mov
sbb
fcmovnb
pop
mov
jmp
adc
fld
fbstp
iret
jge
dec
jg
push
retf
mov
xchg
ret
aas
add
or
popf
jb
(bad)
pop
lods
cs
cld
out
cdq
jle
ret
leave
xchg
mov
sub
ins
adc
add
push
sbb
inc
add
dec
xchg
jge
dec
xchg
pop
test
xchg
or
xchg
mov
mov
jb
fld
mov
mov
shr
movs
xchg
(bad)
jl
ins
mov
in
jge
(bad)
nop
mov
push
sub
in
xlat
cwde
sbb
mov
ficom
xor
or
push
ins
jno
inc
imul
xchg
sbb
in
mov
mov
add
loop
mov
mov
add
push
bound
xchg
mov
adc
sub
shl
jl
sbb
and
loop
inc
or
int
rcr
shr
push
int
shl
sub
outs
pop
sbb
int3
xor
pop
mov
inc
sbb
(bad)
xor
fdivr
cli
inc
pop
mov
out
adc
sub
inc
dec
sub
vcmpfalseps
and
test
xor
mov
cmp
cmp
into
daa
push
sub
mov
fst
movs
xor
gs
mov
ficom
loopne
jns
push
sahf
sbb
mov
jmp
pop
repz
sub
in
sub
stos
test
fnstcw
or
jl
xchg
inc
inc
mov
fs
bound
fnsave
hlt
and
addr16
mov
mov
cld
or
shl
lock
jle
dec
xor
iret
arpl
in
and
je
lock
adc
aaa
jmp
mov
and
jecxz
rcl
imul
jnp
and
stos
jp
mov
mov
popa
outs
mov
fs
adc
inc
or
fsubr
dec
addr16
fisttp
sbb
in
sub
xchg
or
leave
inc
dec
cmp
sub
mov
inc
mov
jmp
mov
jmp
stos
adc
ins
jnp
sbb
scas
mov
sub
adc
cdq
dec
jmp
xchg
ss
sub
ret
lock
xchg
inc
popa
lea
aaa
aas
popf
out
js
and
aad
and
push
adc
dec
or
shr
adc
mov
push
pop
inc
add
fwait
mov
popf
pcmpeqd
scas
ret
or
jl
xchg
and
mov
jmp
xchg
shl
sti
mov
adc
and
stos
sbb
push
mov
das
push
imul
sub
mov
or
std
mov
sbb
(bad)
pushf
xor
inc
push
mov
bound
push
les
out
lea
(bad)
jg
mov
cmp
iret
pushf
or
(bad)
sbb
mov
lahf
mov
int3
pop
or
push
add
mov
jmp
cdq
dec
les
inc
or
sub
call
das
push
mov
jge
add
sbb
mov
jns
mov
in
adc
dec
xlat
cmp
lods
ret
cdq
cli
(bad)
or
add
mov
push
add
lea
or
(bad)
dec
out
inc
pusha
xchg
aaa
add
mov
cmp
jp
and
jbe
sbb
retf
xchg
fwait
xchg
sub
mov
fwait
pop
bt
les
popa
mov
hlt
pop
sahf
hlt
mov
and
stc
(bad)
mov
push
test
mov
push
stos
push
scas
out
es
sbb
imul
loop
outs
(bad)
mov
push
ror
xchg
xchg
scas
jo
out
addr16
adc
cmp
movs
test
mov
add
test
cld
jle
jb
cwde
cs
mov
hlt
add
push
scas
dec
fwait
mov
imul
and
into
mov
adc
arpl
cdq
es
jmp
and
retf
jnp
in
pop
vmwrite
pop
sub
xor
inc
ftst
sbb
js
rcr
lock
push
or
jne
push
loopne
push
test
xchg
jb
loope
repnz
mov
mov
mov
dec
repz
push
and
xor
xor
std
test
test
xchg
test
(bad)
jmp
and
data16
push
xor
fistp
jge
pushf
mov
adc
pop
jmp
test
dec
pusha
jbe
pop
(bad)
call
dec
mov
outs
pop
retf
sub
(bad)
or
jne
js
mov
(bad)
cmc
out
cld
das
scas
aaa
mov
repnz
(bad)
fs
xor
jmp
jbe
and
inc
and
or
popf
lahf
dec
aaa
mov
cmps
or
add
rol
repz
mov
sub
sub
or
nop
push
mov
cmps
out
(bad)
sbb
call
sbb
clc
pop
mov
adc
cmp
aam
rcl
cwde
popf
jne
push
ss
inc
jl
aam
add
inc
scas
ds
xchg
xchg
mov
ja
daa
loop
push
out
jmp
jg
cmps
mov
popa
hlt
jnp
mov
test
bound
(bad)
icebp
add
out
sub
inc
inc
test
xchg
xchg
stos
pop
xor
adc
test
cwde
in
cld
mov
mov
scas
repz
xchg
int
mov
pop
xchg
daa
sbb
mov
(bad)
cmc
jmp
clc
ja
sbb
loopne
dec
pop
lea
mov
test
xor
push
dec
pushf
or
inc
mov
inc
fabs
or
jp
stc
push
mov
rcl
sub
nop
bound
xchg
mov
call
in
pushf
mov
jmp
cmps
test
dec
iret
(bad)
xlat
mov
pop
mov
out
cmc
scas
daa
ss
push
xor
(bad)
enter
jnp
les
pushf
add
clc
xchg
rol
cmps
in
mov
in
dec
pushf
pushf
sub
call
hlt
and
int3
les
outs
imul
xor
popa
pushf
js
push
shl
sub
adc
shl
add
push
ins
out
sub
lods
cli
hlt
pop
or
addr16
jp
stos
xor
dec
and
push
add
xchg
stos
pusha
adc
pop
mov
scas
adc
aam
sbb
mov
xchg
in
int3
mov
jbe
bound
test
add
or
sbb
push
xchg
cli
pop
push
loope
sub
retf
lock
call
mov
jl
sahf
js
push
mov
mov
lds
push
mov
jle
xchg
es
icebp
mov
std
fcom
add
shr
scas
pop
or
sub
add
adc
pop
nop
mov
sbb
inc
pop
mov
cmp
clc
jnp
sub
js
xchg
inc
test
fmul
cli
(bad)
cwde
xchg
sbb
fnstenv
inc
inc
int3
mov
pop
out
shr
imul
sub
add
popf
adc
cmp
mov
or
inc
(bad)
cmps
sbb
pusha
lahf
xchg
test
test
repz
popa
cmp
bound
add
jp
retf
mov
xchg
inc
ret
jle
or
out
dec
(bad)
ficomp
into
cs
inc
pop
jle
enter
mov
ins
call
inc
sbb
or
dec
add
cmps
sbb
adc
(bad)
pusha
sti
adc
push
push
popa
cmp
mov
call
call
push
cmp
movs
xchg
arpl
push
adc
jmp
mov
test
sub
dec
fld
adc
or
xchg
add
adc
mov
cmp
sbb
cmp
test
cmp
sahf
adc
pop
ja
push
add
mov
into
xchg
jmp
stos
out
int3
push
hlt
lahf
or
or
push
pop
mov
stc
add
mov
sbb
stos
dec
cmp
adc
lds
in
call
dec
int3
cmps
(bad)
cs
fiadd
mov
dec
icebp
add
jno
cmp
pop
sub
inc
cli
sbb
scas
add
test
inc
in
iret
pop
iret
inc
jo
cdq
fwait
dec
and
and
test
ja
add
xchg
adc
push
outs
adc
add
jne
or
ds
xchg
ficomp
jmp
lea
cmps
out
pop
mov
(bad)
and
test
or
mov
sti
mov
cli
and
xchg
mov
and
in
mov
js
adc
xor
and
in
mov
mov
mov
inc
ss
fisttp
sti
(bad)
xchg
das
xchg
ins
inc
and
adc
cld
inc
cmp
inc
xor
sbb
lods
push
pop
retf
or
inc
ins
xor
mov
punpckhwd
inc
stos
xor
xor
into
ds
test
xchg
pop
mov
aaa
jle
jl
or
inc
push
test
mov
in
mov
mov
(bad)
mov
adc
div
mov
pop
lds
pop
rcl
fs
(bad)
fldcw
pop
sub
pop
pop
fdivp
or
and
outs
rcr
mov
cmp
loope
scas
(bad)
sub
adc
jno
mov
cs
sub
adc
sbb
dec
(bad)
bound
(bad)
loope
xchg
enter
(bad)
iret
out
cmp
push
cli
mov
sbb
jge
lods
xchg
stos
int3
scas
sub
pop
scas
into
mov
jmp
pop
sbb
cmp
(bad)
adc
mov
inc
cmps
jbe
pop
sbb
cmps
bound
xor
adc
sbb
mov
arpl
sub
ror
call
mov
popa
mov
jl
sub
dec
mov
xor
mov
fiadd
adc
or
shl
out
adc
mov
pop
dec
daa
lods
cmp
or
jl
xor
fwait
imul
jecxz
mov
call
adc
inc
or
mov
jns
mov
adc
int3
sub
push
jae
add
mov
shl
inc
outs
pop
and
ret
mov
cmc
cld
int
add
or
adc
push
pop
push
mov
mov
stos
dec
sbb
push
cmp
and
or
pop
adc
sbb
rcl
jecxz
pop
or
push
pop
pop
mov
mov
jae
sub
pop
jnp
jo
out
dec
mov
add
xchg
sbb
ja
dec
jno
pop
and
imul
fucom
sub
sub
jg
cmc
or
pop
lods
cld
inc
sbb
jle
std
idiv
xchg
xor
jb
or
push
and
jns
scas
je
mov
lea
xor
(bad)
cmp
dec
pushf
repz
popa
pop
lods
or
shl
mov
out
cli
ret
aas
pushf
mov
sub
pop
push
stos
test
pop
inc
xor
nop
pop
int3
and
fsubr
sbb
sub
xchg
mov
popf
inc
or
ss
rcr
sub
je
pushf
xor
retf
pop
mov
add
jne
loopne
pop
mov
dec
mov
jecxz
jmp
mov
jecxz
ins
or
jb
stos
xor
pop
fisttp
ret
or
pop
lods
(bad)
addr16
out
fisub
adc
cdq
ja
inc
push
cmps
push
je
out
and
and
leave
mov
adc
jg
mov
push
jge
in
jge
mov
jecxz
cmp
adc
pop
das
test
dec
pop
loope
enter
mov
push
test
push
cmp
xchg
outs
push
push
mov
shr
out
ss
repnz
inc
or
mov
jle
clc
rcl
fcom
arpl
nop
xlat
push
xor
inc
add
repz
xor
lahf
jb
aaa
je
in
retf
ret
mov
cmp
pop
jl
das
(bad)
movs
sbb
pop
jnp
mov
jle
push
test
push
iret
sub
les
in
jbe
hlt
xchg
or
xor
ss
mov
mov
lock
fnstcw
pop
cmp
ja
outs
push
call
mov
in
mov
stc
mov
dec
mov
lds
out
test
clc
mov
mov
aas
or
push
pushf
sti
push
arpl
sahf
repz
mov
(bad)
ja
xchg
outs
jge
ret
xchg
shr
dec
pop
and
or
rep
push
xchg
in
jns
push
dec
xor
cmp
mov
cmp
cmp
pop
push
rol
push
nop
mov
scas
out
cmp
mov
repnz
popa
mov
rcr
daa
push
inc
cmp
push
idiv
sbb
bound
sbb
and
cmp
xor
sub
dec
fiadd
jns
or
or
and
jne
mov
test
aad
ret
dec
cmp
shl
mov
in
mov
nop
dec
xchg
aas
aad
jne
(bad)
mov
and
mov
cdq
repz
pop
lock
sub
scas
out
sub
leave
jno
nop
not
dec
out
lods
pop
scas
push
xor
aas
jmp
stos
add
pop
(bad)
nop
sbb
nop
push
pusha
shl
adc
(bad)
sub
mov
ins
adc
push
lea
dec
and
cwde
aas
jmp
mov
jne
mov
push
(bad)
cmps
sub
les
pop
sbb
lods
lahf
lds
inc
je
mov
and
call
sub
sub
xchg
pop
mov
fs
scas
push
add
push
jae
loope
cmp
sbb
icebp
or
out
imul
iret
jecxz
inc
xchg
cmp
sub
(bad)
sar
lods
cwde
jno
fs
push
jmp
js
mov
ja
pop
stc
push
in
movs
bound
gs
cmc
(bad)
ror
pop
aad
sbb
inc
and
stos
pop
push
dec
vcmppd
pop
std
fsubp
and
add
cmp
in
mov
sbb
dec
mov
maxps
jp
mov
sub
mov
pop
ja
pop
adc
imul
or
pop
bound
data16
mov
pop
xchg
dec
inc
int3
fidiv
push
cmp
cdq
cmp
xchg
xor
shl
mov
cmp
out
or
in
add
fstp
mov
sbb
in
push
shl
cmp
imul
fisttp
into
xchg
retf
jnp
mov
daa
bound
mov
mov
cs
mov
pushf
hlt
(bad)
outs
add
data16
call
stos
imul
adc
mov
loop
(bad)
mul
jmp
(bad)
sub
mov
cld
fnstcw
sub
rol
sub
xor
ins
adc
stc
or
(bad)
into
sub
movs
adc
pusha
into
jne
push
mov
cwde
push
shr
and
jmp
cli
test
cmp
fiadd
ficom
sti
movs
mov
dec
ds
loope
sahf
test
aad
sbb
push
fidivr
xchg
je
js
loop
fwait
imul
stos
fiadd
cmp
cmc
pushf
xor
pop
pop
dec
fisubr
out
and
push
repnz
mov
push
mov
in
gs
mov
xchg
mov
das
hlt
xchg
in
xrelease
test
cli
dec
pop
sar
sub
lock
adc
fwait
pop
cmp
loop
bound
or
xor
sbb
xor
cld
mov
scas
retf
aad
mov
ins
imul
adc
adc
push
hlt
sub
and
ds
or
and
mov
imul
mov
xor
pop
xor
push
add
retf
repnz
sbb
xor
xor
or
hlt
pusha
xchg
in
stos
mov
jecxz
inc
ja
fmul
xchg
pop
shl
inc
pop
mov
xlat
stos
cmc
xor
stc
rcr
jno
mov
cmp
loop
xor
adc
int3
xchg
lea
loope
fwait
jns
dec
out
fwait
movs
out
ret
in
bound
ror
push
cmp
ins
sti
pusha
int
jmp
imul
xchg
pushf
(bad)
push
dec
lods
popf
ret
jbe
hlt
push
pop
sbb
ret
mov
shl
lock
xchg
or
popf
jge
imul
sbb
mov
push
xor
enter
inc
ja
rol
adc
(bad)
mov
nop
cmp
add
xchg
push
aaa
daa
or
jg
dec
cmc
aad
xchg
dec
adc
inc
fwait
mov
pop
push
and
shr
push
(bad)
into
mov
ss
inc
fdivrp
adc
fmul
mov
(bad)
fsub
cmps
pushf
mov
imul
xlat
rol
sti
je
and
inc
inc
mul
adc
jle
pop
inc
push
jb
mov
and
cs
es
or
sti
xor
inc
mov
sub
fimul
adc
mov
jmp
arpl
mov
fs
mov
xor
xchg
test
mov
and
clc
and
rcr
mov
jae
jno
sbb
and
sub
in
fld
loope
ins
mov
cmp
or
fidiv
mov
(bad)
mov
movs
xchg
and
mov
xor
aam
lock
mov
call
in
fisubr
int3
in
rcl
xor
aaa
test
lds
add
sbb
out
(bad)
cdq
push
and
into
in
in
add
icebp
imul
jbe
mov
aas
mov
pop
(bad)
pop
stc
int3
and
sbb
jne
push
hlt
mov
outs
jl
retf
adc
dec
pop
js
add
push
movs
add
adc
xchg
daa
lock
rcl
pop
into
js
push
mov
pushf
fs
jp
xchg
mov
sub
cs
mov
cmp
push
cmp
adc
inc
jmp
js
fisttp
aad
stc
jmp
mov
fwait
adc
xor
cmp
pushf
dec
test
cmps
add
mov
jo
xor
aad
push
(bad)
sbb
sbb
test
or
xor
pusha
adc
je
xchg
sbb
mov
stc
test
push
pop
adc
in
cs
aaa
pop
push
mov
lods
xor
jmp
ss
or
mov
cld
loopne
xchg
sbb
movs
in
inc
push
repnz
imul
clc
inc
or
sbb
xchg
xor
addr16
aaa
int3
mov
out
fcmovbe
pop
scas
in
jl
push
cmp
rcl
or
push
pop
sub
sti
inc
movs
inc
sub
stos
pushf
cdq
das
or
mov
lods
mov
pop
push
mov
imul
movs
pop
mov
pop
fst
or
(bad)
fist
cmp
shl
mov
retf
or
cmp
sbb
mov
push
loope
xchg
and
jp
mov
outs
je
test
mov
aas
mov
shr
les
mov
xchg
adc
bound
cmp
pop
pop
or
xchg
pop
cmps
mov
loopne
outs
out
adc
xor
inc
cmp
data16
test
rol
aaa
lock
xchg
or
and
aaa
lock
jmp
mov
inc
popf
or
lds
in
or
adc
out
cmp
out
addr16
cmp
inc
dec
and
jne
dec
lea
pusha
dec
frstor
mov
adc
fcomp
in
push
test
test
or
(bad)
sbb
enter
dec
xor
mov
and
retf
dec
sub
sub
or
shr
mov
lds
mov
rcr
mov
mov
into
cmc
les
xchg
in
push
bound
dec
adc
fist
mov
xor
adc
add
lock
mov
lods
int3
test
and
test
xchg
fidivr
retf
sbb
sub
gs
jo
cld
add
pop
push
popa
jecxz
loopne
hlt
mov
retf
pop
cmp
clc
sub
xchg
(bad)
mov
loop
xchg
stc
stc
popf
retf
aas
iret
sbb
call
inc
ds
xchg
inc
test
fucomi
and
repnz
int3
jno
inc
pop
call
xor
and
cmps
sub
adc
mov
and
pop
ror
(bad)
popf
or
adc
add
sahf
cmp
out
bound
jae
popf
xchg
jnp
mov
pop
mov
mov
pop
xchg
and
or
and
lahf
cs
push
mov
movs
inc
cli
cwde
cmp
in
test
mov
out
call
aaa
ss
sbb
push
cli
out
inc
mov
aad
lods
lahf
(bad)
(bad)
ffreep
add
push
push
jbe
nop
push
push
cld
test
fmulp
push
ror
sbb
test
test
outs
sub
xor
addr16
adc
(bad)
cld
mul
xchg
jno
stos
int3
movs
fistp
pop
rep
dec
lds
scas
mov
or
mov
dec
xor
push
inc
mov
aas
ret
scas
or
(bad)
push
mov
stc
jo
xchg
arpl
and
into
movs
std
cld
pusha
scas
pop
mov
in
or
lea
(bad)
out
leave
repnz
retf
ins
mov
enter
mov
fist
imul
pop
cmp
mov
adc
push
je
(bad)
jns
sbb
pop
sbb
cmp
repz
adc
stos
xor
fidivr
xchg
ja
cs
add
push
push
sbb
repz
div
pop
push
rcl
cli
sbb
sub
cwde
or
aas
repnz
gs
pusha
pop
jae
movs
inc
push
jp
cmc
mov
rcl
outs
imul
leave
clc
and
imul
unpckhps
xchg
cmp
pushf
movs
xor
leave
sub
inc
movs
dec
sub
jb
and
dec
dec
fwait
xor
xchg
outs
dec
mov
hlt
adc
and
cmp
leave
fmul
sub
cmp
push
cmp
adc
cwde
inc
inc
sub
cmps
cmp
ss
jne
lds
mov
pusha
dec
(bad)
test
cli
outs
pop
mov
jmp
sub
std
loope
cmps
inc
sbb
sub
jnp
xchg
mov
push
and
pop
in
daa
int3
cmps
ret
mul
xor
iret
pushf
addr16
outs
inc
mov
xchg
xchg
or
repz
adc
fbstp
cli
pop
inc
cmp
mov
lock
and
xor
sub
stos
les
pop
nop
mov
loope
xor
cli
daa
call
push
loope
mov
aaa
sti
cdq
jp
pop
inc
jle
sub
es
dec
xor
pop
xchg
hlt
push
and
cmp
inc
in
sar
ret
dec
xchg
test
into
test
mov
mov
arpl
add
ror
shl
cmps
ror
fst
out
mov
mov
(bad)
shl
mov
mov
inc
test
and
mov
test
jo
retf
pop
pop
sub
sbb
cwde
jno
mov
jbe
mov
fcom
(bad)
lahf
frstor
xor
dec
or
mov
dec
in
movs
mov
xchg
std
test
xchg
(bad)
jl
cmps
arpl
sbb
cmc
adc
or
shr
sub
call
ins
gs
in
fadd
xor
cld
mov
adc
movs
ins
lods
adc
outs
jecxz
pop
popa
xchg
fcmovu
movs
mov
fadd
xchg
leave
push
sub
jbe
adc
lock
popa
(bad)
mov
xchg
ss
int3
jmp
adc
jmp
(bad)
pusha
cwde
dec
mul
inc
repz
mov
daa
jmp
inc
xor
push
dec
call
xchg
mov
jbe
popf
out
pop
cld
jbe
setb
pop
pop
inc
and
gs
test
repz
jo
das
or
mov
jno
cmp
push
mov
ror
xor
int
dec
lahf
aad
jl
mov
jl
push
(bad)
fcmove
lds
gs
out
xor
push
lds
add
xor
mov
add
(bad)
repnz
xchg
std
and
push
fs
sbb
loope
mov
mov
inc
scas
scas
hlt
ins
dec
clc
add
or
lods
cld
sbb
add
and
cmp
rcr
cmp
out
inc
dec
cmp
xchg
inc
xchg
xchg
repnz
call
cmps
mov
sub
jne
push
inc
retf
cmp
mov
and
push
mov
xchg
push
sub
scas
adc
cld
jo
addr16
rcl
rol
mov
push
sbb
push
icebp
adc
sub
aaa
xchg
jbe
cmp
jmp
(bad)
mov
pop
xor
mov
add
mov
pop
jmp
(bad)
je
mov
xchg
mov
repnz
js
cmp
in
pop
das
cmp
xor
sbb
int
add
jbe
sar
adc
mov
out
icebp
mov
and
dec
dec
shl
sub
jge
or
jp
mov
in
push
test
mov
popa
fnstenv
je
jo
xchg
push
sbb
pop
inc
mov
icebp
xor
pop
jg
es
inc
pop
(bad)
pop
loopne
sub
and
mov
out
test
mov
mov
psrlw
pop
ror
mov
cwde
inc
add
pusha
or
xchg
or
xchg
add
inc
shr
rcr
pop
sub
imul
sub
add
and
sub
lahf
std
movs
ds
aam
clc
not
mov
jge
add
aad
pop
sub
pop
and
mov
cmp
shr
jne
pop
xor
jmp
inc
rcr
imul
mov
dec
(bad)
call
add
aas
daa
push
push
ret
aam
dec
inc
sbb
jmp
call
bound
fild
hlt
repz
push
(bad)
dec
adc
and
cli
push
icebp
je
sub
test
les
les
mov
mov
rcr
dec
and
or
or
fneni(8087
(bad)
je
dec
xlat
cli
jo
dec
test
or
mov
inc
test
scas
pop
sti
rcl
fs
mov
call
add
shl
push
call
test
inc
sub
(bad)
rol
in
mov
cwde
cmp
xor
jg
pop
in
popf
lahf
xor
out
hlt
mov
inc
xor
pop
jmp
syscall
dec
int3
sub
xchg
xchg
cmp
(bad)
mov
dec
pop
push
in
jp
mov
xor
jnp
leave
cmps
xor
scas
popf
cmp
cs
mov
cmps
in
aaa
lds
stos
rol
lds
mov
pushw
push
in
rcr
cli
inc
lahf
xor
popf
nop
sar
fnstenv
fcmovnbe
icebp
and
push
pushf
rol
out
or
mov
es
loopne
retf
ins
into
sbb
ins
shl
mov
adc
(bad)
outs
fs
xchg
jo
mov
xor
mov
adc
inc
dec
idiv
repz
jae
cmp
sub
jp
out
push
mov
push
add
std
pcmpgtd
jecxz
or
cwde
push
xchg
inc
enter
cmp
lock
in
loope
sbb
cld
sbb
icebp
(bad)
sub
jecxz
pop
push
mov
mov
out
push
and
test
xor
inc
cdq
outs
loope
jo
sub
or
jb
icebp
or
pop
repz
out
xlat
jp
pop
mov
mov
push
xor
or
mov
add
shl
aad
cmp
xlat
enter
scas
push
gs
xor
xchg
addr16
add
add
adc
les
jmp
and
rol
adc
shr
popf
dec
enter
cmp
mov
dec
out
mov
push
add
pop
jb
out
(bad)
jg
mov
sub
inc
mov
out
jmp
out
or
jns
test
xchg
sub
leave
(bad)
popf
stos
mov
sub
xor
into
jmp
mov
xchg
leave
int3
jmp
and
jp
sar
jnp
(bad)
xor
outs
dec
jg
movs
sbb
cmp
out
rol
daa
int3
sub
cwde
cmp
scas
imul
fbld
add
sub
pusha
cmp
sbb
add
inc
and
sub
hlt
popa
int
retf
cli
adc
icebp
ret
(bad)
lahf
jl
cmp
into
push
dec
mov
and
pop
cmps
std
jp
pop
adc
mov
inc
repnz
cmc
xlat
sbb
pushf
stos
jmp
addr16
push
inc
push
xor
mov
cmp
jne
ja
adc
add
cmp
add
cwde
mov
cli
mov
fbld
fsqrt
dec
or
into
jecxz
rcr
dec
add
(bad)
push
cmc
xchg
bsf
je
arpl
dec
les
dec
pop
pop
inc
xchg
pop
gs
ins
ins
mov
dec
pop
lds
inc
push
loop
jnp
(bad)
scas
push
movs
adc
dec
pop
jl
clc
sbb
push
adc
push
fdivr
(bad)
mov
jg
cmps
push
sub
js
mov
xchg
dec
in
ins
idiv
add
and
(bad)
les
xor
test
cmp
icebp
jno
jno
xor
imul
rcr
push
xchg
dec
jmp
mov
out
jmp
xchg
jne
mov
popf
or
inc
dec
sbb
push
add
iret
inc
popa
shl
pop
add
adc
cs
rol
cli
stc
adc
mov
inc
out
sub
cmp
push
nop
fistp
push
js
movs
popa
rcr
or
or
call
not
xchg
scas
cld
stos
popa
dec
jb
cmp
fstp
mov
or
jge
push
jp
mov
mov
cmp
adc
les
xor
xchg
xchg
ins
sbb
fwait
mov
or
adc
mov
das
popf
pop
rol
les
pop
jl
js
dec
push
cmps
push
test
add
ja
fst
pushf
sti
out
xchg
push
sbb
pop
pop
stos
fnsave
outs
lahf
daa
imul
xor
aas
mov
push
sti
cmps
dec
cs
mov
pushf
pop
scas
gs
gs
sbb
pop
cld
loopne
mov
ret
mov
imul
jb
in
fisubr
fwait
sahf
adc
(bad)
add
adc
inc
mul
int3
jb
lods
inc
mov
jle
packssdw
or
(bad)
std
inc
inc
das
mov
nop
sub
(bad)
fidivr
inc
movs
je
rcl
mov
cmp
push
loope
ficomp
or
adc
inc
fidiv
cmp
repz
sub
loope
call
loopne
int3
scas
and
fwait
sbb
dec
jmp
adc
test
sub
add
retf
jmp
pop
ret
fwait
mov
pop
adc
dec
adc
arpl
jp
ins
ins
idiv
mov
lock
lock
out
mov
inc
jno
jnp
je
push
or
sub
cmp
popa
cmp
clc
pop
repz
outs
sub
in
test
xchg
pop
cmp
cld
es
xor
in
dec
mov
and
add
inc
mov
mov
fcmovbe
mov
adc
jnp
(bad)
stos
popf
inc
pop
call
jbe
lds
xchg
in
data16
or
mov
sti
scas
scas
call
into
and
fidiv
test
cs
mov
(bad)
cdq
jbe
in
and
or
cmp
dec
dec
push
in
jg
cmp
add
dec
cli
lahf
sahf
icebp
mov
xchg
imul
cmp
mov
arpl
lods
ins
cmp
sbb
shl
pop
fucomip
sbb
push
push
xchg
outs
ret
in
or
repz
mov
add
aas
jnp
or
in
mov
bound
lock
aad
ret
ins
lds
or
cmp
push
pop
jle
sbb
mov
xchg
ret
mov
ret
cdq
dec
pop
adc
inc
mov
inc
popf
add
imul
in
pop
xor
cld
fldln2
(bad)
std
cmp
jns
and
loop
sub
data16
cmps
das
jnp
fisub
push
outs
mov
call
shl
pop
fidivr
in
imul
leave
adc
inc
jno
in
cdq
sub
stos
call
jne
add
mov
adc
bound
pop
je
rcr
les
(bad)
mov
in
cmp
scas
mov
js
adc
ss
fisttp
call
pop
pop
scas
ss
lds
sbb
push
dec
outs
repnz
(bad)
ror
or
mov
dec
out
dec
adc
xchg
fiadd
lahf
adc
es
sub
jb
xchg
out
test
inc
pop
push
shr
cmp
pushf
hlt
rcl
(bad)
mov
add
ins
sbb
sbb
sbb
inc
repnz
icebp
sub
sub
sub
aad
icebp
mov
add
dec
mov
popf
std
push
lock
neg
popa
sub
(bad)
mov
jbe
sub
fsubr
pusha
cli
sub
mov
test
(bad)
adc
push
push
fidiv
mov
cdq
out
jecxz
and
inc
das
jnp
cwde
mov
les
imul
cmc
fsub
call
aad
jmp
scas
xchg
out
jnp
pop
das
inc
push
adc
(bad)
mov
nop
fsubr
pop
sti
or
jns
imul
call
push
daa
mov
xor
rol
iret
add
out
push
aad
mov
bound
clc
jno
sub
out
and
cmp
scas
jmp
add
jmp
and
in
mov
cwde
xor
rol
cmp
jle
out
es
mov
cmc
dec
mov
mov
(bad)
test
mov
in
cmp
movs
xor
mov
ja
jl
frndint
(bad)
jae
xchg
or
pusha
xchg
push
arpl
pop
push
xor
scas
int
xchg
fcom
dec
mov
shl
or
mov
out
mov
outs
in
jmp
push
(bad)
dec
add
popf
inc
sti
retf
push
xchg
xor
xchg
stos
push
mov
lahf
mov
mov
imul
and
xor
add
inc
loopne
cs
nop
pusha
mov
xor
sub
popf
fnstenv
pop
pop
inc
pop
cmp
adc
xchg
aaa
add
pusha
cmps
bnd
add
loop
sti
add
dec
adc
push
ret
fldcw
jae
neg
sub
and
mov
push
scas
(bad)
and
popf
adc
xor
stc
sbb
xor
xchg
fs
sub
add
pop
sub
push
repnz
popa
inc
mov
xor
cmps
int
xchg
fld
shl
xchg
push
cmp
push
or
and
inc
ins
inc
inc
mov
or
lahf
xchg
push
loopne
sub
mov
jns
lahf
pop
adc
jmp
loopne
(bad)
movs
imul
push
adc
out
das
push
dec
loope
dec
and
mov
pop
std
add
mov
or
sub
rcr
xchg
ror
ret
push
int3
arpl
repz
mov
pop
leave
dec
stos
retf
ins
push
xchg
out
push
movs
loopne
adc
add
repnz
outs
lock
cmp
js
out
push
cmps
mov
in
hlt
dec
sub
ret
push
or
jmp
and
test
mov
sbb
ret
loope
out
cmp
mov
push
pop
sub
cmp
gs
aas
shr
lods
lahf
xchg
pop
int3
mov
mov
inc
adc
mov
sahf
jl
or
and
push
mov
mov
add
movs
hlt
int3
cmp
cmp
sbb
pop
adc
or
or
sbb
pop
in
outs
fisub
xchg
outs
ins
jecxz
and
lods
clc
das
push
mov
test
jmp
sbb
pop
jno
push
imul
inc
pop
ins
push
ins
sub
sbb
enter
jmp
add
mov
arpl
cmp
inc
sbb
pop
pop
inc
xchg
and
(bad)
push
sbb
dec
cdq
in
mov
adc
into
pop
mov
and
dec
mov
sub
pop
inc
int3
cld
xchg
push
xchg
imul
jmp
jmp
fdiv
jmp
fwait
add
add
(bad)
retf
xor
pop
cdq
push
jno
and
pop
or
and
cmp
add
ss
mov
data16
jnp
dec
pop
xor
and
jg
xchg
jge
xor
sbb
push
leave
pop
push
sbb
dec
sub
sbb
dec
sub
mov
xor
mov
daa
aas
pop
mov
call
xchg
add
cld
mov
adc
jns
and
fisubr
loop
fnstsw
dec
inc
inc
rol
mov
push
shl
fdiv
clc
es
cld
hlt
in
xor
rcr
lahf
sub
pop
ins
mov
mov
into
mov
sub
push
xor
and
popa
cmp
neg
or
sub
inc
jmp
mov
addr16
pop
ret
aam
pop
int3
xchg
mov
push
push
sub
xchg
mov
ja
dec
sub
mov
movs
sub
jge
inc
imul
(bad)
xor
or
pushf
sub
add
(bad)
repnz
ss
add
stos
das
dec
imul
adc
add
test
adc
sahf
push
pop
push
cwde
mov
into
ja
out
aam
inc
jmp
xchg
test
cmc
or
pop
mov
aas
mov
outs
pop
cmps
sub
ins
int
pop
cs
int
loopne
jge
xor
div
adc
and
mov
sbb
fdiv
rcl
cdq
adc
gs
jge
icebp
sub
push
popf
sbb
adc
mov
xchg
dec
int3
fscale
vmulpd
xlat
sbb
inc
mov
add
les
jmp
sbb
push
call
xor
cli
aad
add
mov
adc
daa
inc
mov
push
pushf
adc
movs
fsubr
sub
ret
(bad)
xchg
push
ja
sub
ins
ins
fnsave
sbb
sbb
sti
mov
dec
fstp
sahf
dec
neg
in
cmp
xchg
push
fidivr
fsubr
movs
pusha
add
fwait
and
or
fnstsw
jno
enter
std
sbb
jmp
repnz
xor
lea
xor
xor
jno
test
inc
ss
sbb
and
or
scas
scas
neg
xchg
dec
sar
loope
enter
test
mov
daa
lahf
push
call
arpl
stos
mov
cmp
and
sbb
loop
stc
push
push
leave
lea
shl
pop
ret
xchg
push
jb
cmp
dec
stos
je
aas
xchg
push
jae
adc
cmps
inc
mov
jl
jge
cmps
test
outs
dec
xor
xlat
out
and
les
mov
stc
mov
js
sbb
xlat
movs
or
push
les
mov
sub
call
jle
add
mov
xchg
jns
pop
mov
adc
cli
icebp
add
shl
jg
inc
inc
int
or
add
lods
lahf
or
jmp
or
pop
loopne
repz
mov
sub
jg
mov
scas
movs
inc
pop
and
sub
inc
out
push
pop
fadd
int
leave
stc
pop
jo
lods
push
popf
in
movs
fwait
pop
add
imul
and
mov
adc
sub
dec
dec
out
xchg
loop
mov
scas
cmc
mov
inc
push
pop
xchg
adc
push
call
test
sti
out
or
leave
sbb
fdivr
jne
xor
xor
xchg
sbb
push
out
xchg
adc
jae
lea
xor
mov
mov
arpl
ins
nop
xor
pop
movs
or
jns
or
outs
pushf
push
pop
jp
cmp
test
dec
cli
jns
lock
xor
ret
std
sub
pop
fidivr
inc
jns
dec
outs
dec
add
jnp
ret
jns
pop
out
push
jb
in
mov
aad
add
loopne
out
sbb
out
mov
ja
out
mov
mov
out
cmp
cmp
xor
in
or
pusha
leave
cmp
sub
xor
mov
mov
aam
repz
xchg
sub
(bad)
pop
sbb
enter
xchg
or
mov
mov
cdq
xchg
mov
pop
sbb
mov
stc
jb
dec
imul
ins
ins
(bad)
lock
ja
push
test
out
sbb
clc
ins
dec
push
repnz
and
sub
cli
cmp
mov
push
enter
or
mov
enter
mov
inc
inc
dec
xor
jmp
ds
neg
loop
mov
xchg
pop
ins
mov
and
dec
fcmovne
jmp
dec
frstor
scas
pop
mov
jbe
lods
sbb
sub
cmp
gs
imul
stos
add
and
je
mov
add
adc
test
dec
or
inc
mov
adc
push
shr
addr16
mov
enter
mov
outs
pop
push
inc
push
pop
ret
(bad)
cmp
das
add
xchg
add
push
sub
push
push
int3
ret
xchg
mov
push
aam
or
jg
scas
movs
xlat
push
or
std
hlt
(bad)
or
out
dec
repnz
(bad)
mov
outs
mov
jp
clc
std
jp
mov
xchg
fmul
imul
xchg
scas
fsubp
jge
inc
lahf
inc
loope
call
into
push
mov
gs
shl
push
repnz
adc
dec
int3
(bad)
mov
adc
loopne
loopne
xchg
ins
icebp
mov
cmp
mov
inc
mov
rol
arpl
les
and
push
shr
push
mov
popa
mov
and
xchg
mov
adc
push
dec
fiadd
in
mov
movs
(bad)
retf
add
mov
and
push
xchg
retf
lahf
ficomp
imul
inc
jp
sbb
mov
clc
mov
mov
xchg
ins
out
gs
add
sub
lahf
sub
retf
ror
push
cmp
aas
sub
sbb
in
ficom
int3
cmp
mov
rol
dec
jg
jge
(bad)
mov
sub
cmp
push
mov
(bad)
cmps
fidivr
into
nop
mov
out
test
push
cmc
sbb
dec
sub
dec
or
xlat
add
push
cmp
leave
inc
in
pop
in
bound
mov
pop
xchg
aaa
shr
push
sub
out
stos
pushf
pushf
pop
call
ja
or
int
mov
sub
out
push
movs
pop
cwde
cmp
mov
fld
imul
dec
sbb
neg
sub
test
popa
mov
(bad)
push
xchg
mov
sub
and
mov
sahf
pop
jle
lds
addps
lahf
loop
sar
sub
loope
push
sbb
sub
rcl
dec
pop
add
or
or
mov
inc
pop
sub
in
outs
sahf
or
add
sbb
loope
mov
inc
pop
push
pusha
cwde
daa
lods
loopne
dec
mov
add
xor
xchg
out
lods
mov
inc
and
mov
cmps
ret
fstp
mov
ja
push
or
xor
test
xchg
mov
loopne
mov
mov
arpl
add
aas
mov
cld
test
add
call
dec
aaa
adc
ds
adc
sub
jl
fisttp
jmp
cli
cmp
outs
outs
and
and
or
je
nop
xor
adc
mov
inc
xor
sbb
test
cs
cmp
pop
rcr
sub
cdq
inc
xor
jmp
daa
jb
test
dec
test
mov
jecxz
dec
xor
mov
test
push
loope
and
add
sbb
push
dec
pop
and
mov
xchg
dec
lods
cmp
clc
and
pop
or
bound
mov
ins
xor
and
add
push
repnz
inc
loope
movs
(bad)
rcr
movs
add
push
mov
xchg
loopne
in
mov
xchg
jns
(bad)
fld
push
or
xor
fiadd
mov
sub
xor
adc
ret
sub
add
ret
stos
loope
aas
adc
scas
push
jno
in
test
movs
xor
inc
cwde
push
jl
dec
xchg
mov
(bad)
shr
call
or
aad
jb
es
adc
push
mov
inc
mov
pop
imul
push
mov
pop
cmp
les
iret
push
shr
(bad)
jns
inc
movs
sbb
inc
cmps
xor
pop
cmc
or
mov
or
jmp
shr
(bad)
jmp
adc
aas
fwait
mov
cmp
xlat
call
and
add
pop
add
push
sar
mov
fcomp
iret
ss
sbb
push
adc
push
leave
mov
cli
ins
aam
enter
icebp
inc
clc
jg
xchg
adc
jnp
inc
repz
into
cmps
addr16
pop
js
fbstp
or
add
pop
dec
dec
stos
jae
(bad)
repnz
sub
ds
shl
xor
cmp
push
fsubr
ins
push
and
mov
out
mov
or
pop
repnz
inc
bound
xlat
dec
in
lahf
pop
xor
mov
pop
mov
mov
or
dec
in
das
jmp
push
adc
sbb
cld
cmp
out
push
sti
pop
out
(bad)
sbb
je
jbe
cmp
pop
gs
pop
sbb
pop
imul
xor
(bad)
mov
movs
sti
sub
and
sbb
inc
nop
mov
mov
lods
xchg
imul
adc
movs
sbb
pop
pop
mov
push
(bad)
push
cmp
sub
into
push
cmc
ins
aaa
jb
shr
inc
mov
add
or
fsubr
stos
push
or
mov
(bad)
cmps
retf
inc
lea
push
call
sub
or
movs
sub
out
jns
push
cli
repnz
out
es
sbb
inc
loopne
cmp
stos
xchg
jnp
cwde
or
jle
or
call
or
xchg
push
gs
jb
dec
dec
push
push
pop
push
mov
xchg
sub
bound
aaa
mov
movs
fimul
mov
pusha
das
ret
fst
add
push
xchg
rcl
jmp
sbb
push
(bad)
mov
lahf
test
xchg
add
int
inc
(bad)
fld
or
fdivr
mov
mov
xor
lea
jno
push
popa
dec
xor
push
pop
cmp
dec
fisttp
fld
dec
fstp
movs
and
lahf
or
mov
sub
das
mov
mov
movs
push
pop
jl
(bad)
lock
in
lock
repz
cmp
ss
or
jbe
sbb
into
lea
ins
in
test
xchg
ss
dec
mov
cmp
mov
push
hlt
and
pop
mov
daa
sub
es
or
lock
test
cmp
ds
dec
inc
push
xchg
pop
mov
or
scas
push
scas
dec
loopne
or
cmps
stos
and
(bad)
pushf
or
lea
jmp
xchg
imul
test
cwde
ins
repnz
jecxz
mov
jmp
outs
mul
(bad)
mov
jae
jp
or
imul
addr16
mov
push
jne
xor
sbb
add
xchg
fdivr
sbb
push
and
inc
scas
ret
(bad)
retf
pop
mov
or
sub
in
outs
fs
jne
ds
adc
in
in
xlat
cmp
and
fs
ret
dec
out
add
mov
lea
loop
mov
out
push
pop
jne
cmp
dec
rcr
loopne
test
and
pop
mov
je
popf
mov
add
pop
pop
or
mov
and
scas
sbb
mov
or
push
retf
mov
xchg
jns
jb
push
retf
sar
pop
in
lods
not
fcom
jmp
xor
jne
pop
or
push
xchg
int
aam
test
jl
mov
(bad)
adc
loopne
mov
pop
fidivr
jle
je
push
jmp
or
push
mov
iret
mov
dec
dec
xchg
or
aas
in
(bad)
adc
stos
and
iret
aad
xor
push
mov
dec
popa
sti
xor
call
imul
in
aas
and
lock
sbb
daa
ror
fadd
gs
inc
jle
sbb
inc
xchg
inc
add
int3
je
cmp
addr16
lods
cdq
cmps
popa
sub
test
mov
adc
hlt
lock
dec
popa
or
add
mov
shl
test
pop
xor
jnp
punpcklbw
push
pop
jg
xchg
cmp
push
sar
jge
adc
jp
nop
dec
cmps
mov
outs
leave
push
mov
sahf
es
jbe
mov
out
imul
push
fwait
cmp
stos
aad
loope
nop
clc
scas
fs
sbb
and
push
sbb
jp
xor
adc
lahf
xor
sbb
aad
(bad)
push
int
or
sbb
imul
dec
shl
adc
xchg
push
dec
lea
push
pop
cmc
cmp
aaa
pop
jle
call
dec
clc
sub
and
jle
jle
cmp
bound
iret
jg
inc
mov
and
mov
mov
sahf
inc
sbb
loope
sar
fnsave
leave
mov
sub
daa
sub
inc
inc
mov
sub
mov
cmp
ss
mov
push
pop
cmp
jne
iret
pop
rcr
fs
mov
adc
movhps
sub
hlt
shr
xor
fwait
js
push
retf
hlt
inc
sbb
jo
out
int
fwait
mov
mov
setne
inc
mov
push
(bad)
arpl
pop
jmp
in
xor
movs
in
outs
cwde
dec
leave
jo
xor
pop
pushf
and
mov
pushf
sti
cmps
push
cmc
mov
out
pushf
fsub
or
jmp
nop
jmp
ret
pop
xchg
shl
scas
repz
mov
mov
add
ds
shl
(bad)
cdq
js
jbe
repnz
sbb
cmps
lods
popf
ror
cdq
jle
xor
xor
inc
dec
push
daa
ja
or
(bad)
mov
lds
cmp
fsub
and
jno
sbb
inc
xchg
cs
add
repz
xor
add
add
pusha
add
xor
sbb
cwde
push
adc
sbb
push
inc
adc
mov
mov
sbb
xchg
mov
sbb
pop
mov
pop
jp
lea
adc
push
and
popa
sub
(bad)
xor
mov
xchg
push
dec
or
xchg
xchg
popa
xor
jmp
dec
in
add
leave
mov
and
rcr
jae
in
pop
mov
call
cmp
dec
popf
xchg
mov
dec
jno
cmps
test
lds
xchg
jno
leave
aad
dec
add
test
dec
mov
pop
leave
(bad)
pop
sub
inc
icebp
mov
or
pushf
jne
add
add
inc
fbstp
sar
inc
mov
rcl
movs
mov
call
mov
je
mov
aam
xor
adc
or
push
adc
(bad)
mov
rol
dec
adc
add
and
ja
adc
daa
hlt
stc
movs
pminub
imul
mov
hlt
sub
inc
push
ret
xchg
stos
pop
sbb
push
fwait
out
add
adc
xchg
adc
push
icebp
cli
dec
lods
sbb
sbb
mov
pop
dec
push
outs
cdq
and
mov
mov
movs
sub
pusha
jns
ret
movs
arpl
xlat
int3
xchg
ret
cld
xchg
xchg
mov
dec
mov
cdq
pusha
inc
jnp
sub
fdiv
stc
fist
scas
sti
(bad)
mov
mov
dec
(bad)
dec
inc
fsub
dec
xor
jnp
push
jno
pop
out
push
mov
jnp
xor
cdq
adc
mov
stos
push
and
loope
xlat
fild
ins
xchg
out
jae
and
inc
daa
ja
cmc
jbe
in
in
push
cwde
dec
pop
fs
xor
add
(bad)
xor
mov
pop
mov
les
inc
jnp
popa
fistp
pop
mov
mov
lahf
or
push
mov
mov
repnz
stos
push
xchg
lahf
add
retf
pavgw
arpl
push
adc
sub
fild
loope
mov
cli
(bad)
sub
pop
repnz
les
jbe
mov
pop
xchg
push
pop
cmp
pushw
pop
jo
sbb
aas
bound
and
(bad)
mov
mov
push
pop
cmp
mov
bound
cmps
jmp
or
cwde
push
lods
in
xchg
mov
pop
xor
sub
fwait
cmp
test
repz
pop
mov
xchg
or
mov
add
push
outs
sbb
and
or
loopne
add
add
out
add
or
mov
mov
imul
pop
fsubrp
and
cdq
or
sub
aam
or
push
or
jmp
pop
jae
test
or
call
jp
out
inc
xchg
daa
lds
sub
dec
jne
sub
icebp
stos
mov
mov
fisttp
push
jp
daa
fst
int3
pop
push
les
xchg
aam
jmp
pushf
xchg
mov
std
dec
shl
das
mov
loope
dec
jno
aam
pop
and
push
jnp
fisubr
sbb
jecxz
mov
mov
xor
mov
shr
push
fwait
mov
mov
push
sub
mov
fstp
or
nop
shl
push
add
retf
aam
lds
sbb
das
sub
ss
les
mov
pop
into
mov
aad
cwde
retf
mov
fidivr
ja
jle
mov
inc
lahf
scas
or
inc
lds
inc
pop
add
jnp
cmp
nop
(bad)
hlt
into
and
and
ins
scas
dec
sbb
dec
fisub
jne
lahf
mov
cmp
or
xchg
add
mov
xchg
pop
fcom
mov
sub
mov
ret
mov
call
and
or
xchg
mov
int3
mov
cmp
and
in
cmp
or
shl
fwait
stc
xor
add
add
add
loop
xor
(bad)
je
bound
dec
cmp
aaa
aaa
mov
ins
mov
inc
adc
fcomp
sti
pop
daa
lahf
das
frstor
pop
xchg
and
push
mov
outs
push
jae
jge
or
pop
dec
xor
jge
and
mov
lods
jl
sbb
pop
test
fsubrp
je
sti
cmps
hlt
cwde
mov
fcmovnb
inc
lock
mov
push
rol
cmc
cmp
hlt
jns
dec
out
sub
fisubr
inc
bound
or
and
fst
adc
push
clc
dec
dec
and
fwait
dec
mov
test
mov
push
shl
dec
inc
fwait
cmp
xchg
xchg
or
push
sub
push
loope
aas
clc
push
cmp
mov
mov
sbb
xor
dec
into
and
(bad)
adc
or
gs
in
xchg
jb
mov
dec
out
pop
jns
jge
cmp
or
sub
sub
out
cmp
xchg
test
push
and
inc
mov
popf
pop
inc
cmp
imul
sbb
ffreep
mov
gs
and
mov
inc
stos
js
pop
mov
stos
adc
or
ds
jge
mov
dec
mov
push
repnz
add
fcomp
(bad)
xor
xchg
xchg
adc
xor
dec
cdq
pop
inc
xchg
push
sbb
pop
fisub
and
std
rcr
rcr
and
jns
or
out
(bad)
fcmovu
or
dec
cmp
dec
push
stos
aad
cmps
pop
jg
pusha
pushf
int3
pop
add
cdq
cmp
fwait
mov
pop
cmps
out
mov
jbe
stos
cmp
retf
lods
mov
and
(bad)
cld
sub
sub
nop
pop
sbb
sbb
mov
push
popa
xchg
jae
rcr
sbb
mov
(bad)
mov
and
sbb
aad
inc
push
daa
mov
cmp
pop
sub
adc
sbb
mov
push
std
pop
leave
out
xchg
or
pop
pop
outs
inc
inc
loop
ror
aaa
scas
pop
xchg
(bad)
ror
jnp
mov
mov
jb
(bad)
jne
add
mov
inc
in
mov
scas
sub
adc
out
mov
push
(bad)
add
imul
jg
int
mov
adc
mov
mov
pop
sbb
in
sub
mov
(bad)
mov
or
loopne
cmp
movs
fcmovne
inc
(bad)
lds
mov
mov
mov
pop
xorps
fild
out
xchg
or
ja
lods
stos
pusha
lock
ss
ins
adc
stos
repnz
cmp
or
iret
jp
dec
mov
ret
inc
call
fild
je
dec
pop
loop
aad
retf
xlat
test
mov
or
sbb
inc
xchg
test
xchg
dec
sbb
jp
jmp
iret
or
je
jg
push
cmps
xchg
dec
stos
add
sbb
jns
fld
and
inc
and
mov
hlt
and
hlt
data16
bound
dec
or
mov
adc
cmp
lods
pop
or
nop
xor
push
movs
enter
out
push
push
pop
iret
pusha
mov
ror
fild
(bad)
sar
mov
push
scas
inc
pusha
mov
and
inc
pop
inc
rcr
jecxz
add
fld
or
es
mov
ss
cdq
stos
ret
pop
ins
adc
movs
ins
jne
mov
mov
inc
mov
ret
popf
nop
sbb
xchg
or
push
out
push
inc
das
mov
sub
retf
sbb
sbb
and
and
and
fs
sub
addr16
sahf
out
fsubr
dec
in
mov
stc
xor
xchg
xchg
stos
pop
lea
xlat
xor
mov
cmp
sbb
sar
arpl
sub
dec
repz
add
jb
aam
push
adc
les
fiadd
ins
and
loope
ins
adc
push
mov
pop
and
fistp
pop
aad
shl
fistp
movs
loop
sar
idiv
jae
pop
dec
or
mov
inc
sbb
enter
lea
nop
adc
loope
xor
or
(bad)
call
cwde
cmp
mov
int
pop
mov
jp
inc
mov
sahf
xor
ja
mov
sbb
imul
mov
mov
push
sbb
int
inc
jmp
sbb
in
arpl
loop
push
fstp
das
mov
cmp
push
push
pushf
add
imul
inc
cmp
scas
inc
xor
ret
jle
mov
std
jg
daa
repz
rol
jl
mov
(bad)
psubb
dec
push
mov
in
ds
xchg
pop
inc
adc
rcl
jl
imul
push
test
jo
mov
mov
rol
lea
pop
fcom
push
pop
pop
scas
push
call
(bad)
add
test
(bad)
out
mov
xchg
scas
in
lock
or
icebp
mov
jp
sub
gs
cmc
jg
out
je
out
fnstsw
shl
push
imul
jb
mov
ror
dec
jmp
fcom
mov
xchg
aad
jle
add
dec
nop
imul
push
xchg
gs
(bad)
mov
sti
dec
dec
bound
add
pusha
or
xor
rcl
fcom
dec
jmp
aad
jmp
je
outs
pop
xchg
fmul
jmp
ins
(bad)
jl
dec
mov
bound
imul
in
int
test
dec
(bad)
enter
sar
add
jl
faddp
fs
mov
jmp
xlat
and
xchg
iret
cs
or
ret
int3
pop
xor
inc
outs
(bad)
movs
cmp
aad
mov
bound
xchg
jne
adc
inc
cmp
or
sub
mov
push
clc
fldenv
cmp
rol
jg
adc
call
xlat
idiv
fwait
mov
dec
push
or
dec
hlt
imul
shr
inc
pop
bound
data16
fs
imul
repnz
pop
ins
mov
fdivr
sbb
push
pop
imul
push
push
cli
or
mov
push
or
xchg
jmp
ret
stos
push
or
loopne
iret
and
or
adc
ja
neg
inc
bound
dec
push
mov
push
sti
enter
fstp
add
daa
iret
out
jmp
xchg
ret
or
(bad)
cld
data16
jmp
xchg
lock
idiv
sub
call
outs
push
mov
pop
mov
in
jmp
data16
jg
gs
sbb
enter
sbb
push
leave
inc
sar
repnz
outs
nop
(bad)
mov
xchg
sar
inc
mov
mov
or
(bad)
mov
jecxz
das
fwait
dec
jns
sahf
push
mov
aam
repz
cmp
cwde
and
or
xor
addr16
fstp
js
movs
cmp
pop
sbb
jmp
repnz
and
dec
popf
stos
dec
xchg
jne
dec
or
add
add
leave
push
jl
xor
sbb
cmp
push
jmp
int3
pop
lods
jne
mov
fcomp
adc
out
xlat
adc
sub
cwde
or
je
inc
cmp
fsub
cdq
push
xor
lods
or
fdiv
outs
push
lods
dec
das
outs
and
sub
hlt
out
jbe
out
mov
fstp
push
and
cmp
test
dec
xchg
fdiv
ret
ja
std
inc
mov
cli
add
(bad)
mov
push
mov
jns
or
mov
and
or
daa
loope
xchg
jne
enter
mov
pop
cmp
hlt
jmp
cli
xchg
or
mov
inc
pop
rcl
inc
xchg
mov
(bad)
mov
cmp
mov
mov
add
mov
pop
inc
mov
retf
adc
mov
aas
cmp
dec
xor
ret
inc
xor
ret
in
fistp
sbb
xchg
push
mov
jno
pop
jmp
test
push
jmp
jbe
cmp
call
sub
lahf
pop
dec
es
out
fwait
and
movs
repz
mov
aam
dec
xchg
xor
clc
and
adc
cld
push
retf
mov
iret
inc
ror
xor
sahf
add
inc
pop
mov
push
fnsave
mov
stos
outs
lock
push
jge
add
inc
push
sbb
mov
(bad)
xor
call
add
sub
push
push
add
sub
ins
stc
add
jae
jne
repz
pop
stc
push
pop
mov
mov
sar
sti
add
sub
inc
push
movs
fsubr
or
dec
test
dec
mov
jp
mov
and
mov
stc
xlat
inc
out
bound
clc
sub
(bad)
data16
fld
and
daa
jle
lea
es
sub
xchg
push
cmp
retf
out
push
ins
mov
xor
lds
int
movs
cmc
mov
(bad)
mov
push
movs
(bad)
cs
scas
int3
xchg
movs
test
loopne
clc
push
out
or
cmp
dec
mov
jg
dec
mov
icebp
xor
daa
mov
pop
mov
sub
jmp
push
dec
addr16
fcmove
mov
jp
jmp
popa
and
sbb
jecxz
cmp
sbb
adc
out
jbe
clc
test
cmp
mov
fs
and
test
outs
adc
xchg
popf
(bad)
call
mov
push
push
movs
inc
jmp
cli
in
mov
jg
mov
or
lahf
lods
ret
pop
lock
retf
mov
imul
xor
in
mov
add
inc
mov
dec
mov
push
mov
mov
add
jl
test
and
loope
outs
scas
test
add
sar
adc
(bad)
mov
mov
(bad)
mov
xor
add
popa
sub
movs
rcl
repnz
jo
jl
cli
(bad)
jo
lods
fs
sbb
sbb
fistp
mov
jae
aaa
cmc
ins
dec
jno
mov
jecxz
test
add
js
mov
jne
pop
dec
mov
jae
sub
and
dec
push
in
outs
jmp
mov
push
jge
arpl
mov
shr
into
movs
hlt
push
sub
icebp
(bad)
dec
loopne
imul
in
xor
sub
and
mov
xor
int
data16
(bad)
test
push
gs
test
js
push
out
sar
push
push
mov
out
or
cli
dec
aad
icebp
sub
(bad)
jns
adc
adc
xor
leave
(bad)
jnp
jmp
int3
and
lods
pop
add
mov
add
pop
mov
fs
push
test
or
mov
(bad)
hlt
inc
out
add
sbb
push
into
(bad)
and
mov
ins
int
stos
or
shr
xchg
mov
add
leave
push
sub
jbe
ficomp
xchg
push
xor
dec
inc
mov
push
adc
push
lahf
inc
scas
leave
lods
mov
cmp
jbe
lods
jno
loop
add
xor
inc
bound
les
in
fstp
pop
push
bnd
push
pop
cmp
jmp
cmps
push
push
popf
(bad)
aas
imul
movs
dec
shr
lods
or
test
shl
lds
mov
(bad)
into
or
clts
shr
ret
adc
pop
ds
pcmpgtd
push
sbb
jmp
inc
out
mov
cli
push
sub
dec
add
aad
xchg
or
cmp
je
sub
hlt
stos
and
jo
popa
push
ficom
lea
dec
add
sbb
mov
xchg
into
test
mov
inc
jp
lods
mov
or
das
inc
jecxz
jp
arpl
push
push
shl
cmp
xor
mov
xchg
sahf
ja
mov
aad
(bad)
xlat
(bad)
es
xchg
push
loope
sub
(bad)
cmps
sub
cmp
je
test
outs
mov
cmc
mov
pusha
sbb
or
jbe
push
jecxz
add
stc
les
stos
push
jmp
mov
push
and
jns
fsub
or
outs
push
out
add
int3
fld
jae
jbe
add
stos
mov
addr16
xor
mov
aad
inc
(bad)
push
mov
sbb
cmp
xor
mov
cmps
adc
mov
shl
rol
xchg
mov
push
cmp
sub
adc
or
or
jmp
fbstp
outs
stos
push
rcr
out
lahf
add
sub
addr16
(bad)
in
jnp
inc
repnz
data16
inc
loopne
lea
popa
cwde
mov
movs
mov
sti
mov
pop
mov
stos
loope
repnz
or
arpl
ficomp
repnz
jmp
lock
call
icebp
fsub
sub
add
out
jbe
(bad)
sti
pop
and
jb
retf
inc
and
daa
add
ins
fbld
ss
ja
jg
inc
(bad)
fsub
mov
mov
test
ins
repnz
and
xor
jnp
inc
xlat
iret
ss
into
xor
xchg
out
mov
and
repnz
jo
pop
xor
add
retf
inc
jno
or
pop
xchg
rcl
or
popf
jp
pop
and
add
sbb
jno
(bad)
sti
inc
pop
mov
in
mov
mov
das
je
test
dec
in
out
in
imul
or
and
mov
div
sahf
dec
rep
mov
add
les
dec
adc
stos
cmp
push
xor
mov
in
adc
out
(bad)
loop
xlat
cmp
pop
add
scas
es
outs
cmp
icebp
add
inc
out
(bad)
xchg
nop
jno
and
adc
push
mov
xchg
and
js
and
pop
lods
push
pop
outs
rcr
push
inc
or
icebp
std
mov
fadd
je
retf
cld
nop
xchg
repz
xor
cli
inc
xchg
fdiv
and
inc
jmp
nop
inc
jecxz
mov
push
aam
sti
add
fs
call
inc
(bad)
addr16
push
sub
add
mov
popf
aaa
jecxz
lods
jl
push
rcl
mov
xor
inc
stc
xchg
repz
adc
or
test
dec
sbb
xor
mov
jne
cmp
cmc
adc
(bad)
and
or
mov
dec
mov
imul
int3
ret
pop
out
dec
mov
sar
and
dec
sbb
jl
inc
imul
jbe
xchg
fmulp
xlat
cmp
add
fisub
cs
xor
stos
and
jbe
cwde
xchg
and
add
js
push
(bad)
mov
jnp
cli
push
mul
fwait
in
gs
fst
push
addr16
sahf
shl
mov
stos
sbb
std
jmp
sbb
adc
pop
clc
jmp
aam
jbe
inc
push
or
cmp
fwait
xor
scas
dec
push
and
loop
movs
cmc
xor
inc
hlt
mov
(bad)
(bad)
xor
sahf
aad
push
stos
imul
rcl
data16
sub
sub
js
ins
push
mov
jmp
ret
add
scas
fild
and
push
int3
dec
cmc
add
dec
cdq
add
push
dec
fistp
inc
sbb
inc
test
fcmovnb
mov
or
repz
mov
push
sbb
js
and
xchg
shl
scas
cdq
mov
adc
fstp
lock
out
cmp
out
xchg
pop
loopne
xor
frstor
repnz
iret
pop
into
loopne
jmp
(bad)
cmp
xchg
xor
std
jns
jo
mov
xor
adc
adc
inc
stos
dec
push
cdq
rol
mov
ret
jnp
pop
retf
scas
jmp
sub
sbb
xchg
ret
(bad)
mov
sub
scas
inc
jle
test
das
imul
cmc
out
sbb
dec
sub
mov
pop
pushf
into
lods
jge
(bad)
pop
adc
call
mov
push
sti
fild
aam
in
mov
xor
les
cmps
ficomp
das
and
sbb
sub
(bad)
inc
arpl
adc
mov
sub
jae
jg
repnz
frstor
or
repz
adc
jl
lods
repnz
mov
push
test
pop
test
retf
dec
pop
hlt
sbb
sbb
in
ins
or
cmp
ins
jae
std
push
aam
bound
push
inc
(bad)
fwait
xlat
add
stos
inc
fiadd
popa
lock
(bad)
pop
stc
jg
pop
mov
xchg
imul
imul
fscale
mov
dec
test
xor
popa
das
mov
call
es
arpl
gs
sub
push
pop
dec
stos
cs
push
mov
add
jno
loopne
aas
lods
cmp
addr16
loopne
(bad)
cmp
xlat
jne
lock
and
inc
push
nop
add
idiv
pop
jns
xchg
in
call
mov
(bad)
and
dec
or
mov
stos
mov
push
xchg
jo
sbb
sbb
out
lods
adc
mov
xor
or
pop
retf
rcl
pushf
xchg
lock
mov
fdivr
pusha
dec
mov
lods
and
adc
sub
mov
dec
int
mov
push
inc
es
adc
inc
and
je
fsubr
adc
jo
adc
dec
loope
fsubrp
push
in
cmc
jmp
in
mov
(bad)
add
sti
and
or
out
mov
adc
mov
adc
les
pop
sub
mov
xchg
jae
outs
les
xor
inc
mov
jns
aam
repnz
dec
fdivrp
lods
dec
jmp
shl
fwait
add
mov
lock
jae
outs
movs
rol
retf
mov
call
rol
adc
push
outs
mov
cmps
mov
pop
cmp
mov
retf
add
xor
movs
sbb
(bad)
push
push
frndint
(bad)
mov
dec
dec
inc
or
pop
pop
cwde
mov
mov
in
enter
sub
xor
push
adc
or
push
pop
sti
mov
dec
pop
and
pop
clc
push
cdq
out
call
aas
das
inc
push
leave
ret
sbb
loop
stc
stos
clc
(bad)
bnd
in
pop
popf
mov
adc
jg
cwde
add
ins
sahf
push
sub
dec
les
scas
fdivr
ret
jns
lds
or
push
jno
push
mov
or
mov
adc
or
sub
pop
lods
js
fistp
and
outs
sub
push
bound
retf
mov
push
imul
xchg
icebp
fisubr
out
out
sbb
mov
adc
xchg
cmps
xlat
mov
or
bound
test
in
sbb
sti
mov
fs
retf
sbb
test
inc
jmp
scas
cmc
in
std
es
and
inc
push
and
pop
fcmove
push
push
ficom
aas
adc
lahf
jnp
ret
sub
jb
test
or
xor
inc
ret
mov
sub
pop
movs
fmulp
xchg
shl
pusha
adc
fisttp
xchg
push
(bad)
je
add
or
ja
dec
shl
mov
dec
fild
add
jp
repnz
sbb
nop
popf
sbb
or
adc
stos
add
xor
push
mov
stc
into
in
jae
jae
mov
mov
mov
push
adc
(bad)
mov
cmps
retfw
add
rcr
inc
jp
push
inc
movs
and
(bad)
not
cmps
div
mov
cs
(bad)
jmp
jmp
mov
lahf
(bad)
fsub
push
(bad)
cmc
es
and
ret
cmps
test
jne
pop
aad
sub
sbb
sbb
xor
add
inc
cs
sti
pop
pop
inc
test
adc
pusha
nop
movs
add
test
bswap
(bad)
movs
ret
gs
loop
inc
arpl
push
pop
fist
cmc
loop
jmp
cwde
aad
pop
push
int3
cmc
or
pop
add
fdiv
mov
fistp
or
fwait
cmps
pop
fwait
push
ret
xor
imul
rcr
mov
cmc
outs
cmps
inc
outs
in
rcr
call
dec
push
leave
or
cmp
scas
inc
mov
cs
dec
lock
jl
js
movs
lock
cmp
jne
adc
mov
or
mov
movs
mov
or
inc
cmps
mov
xor
cmp
cmp
pop
or
push
push
add
dec
push
not
xchg
jns
(bad)
dec
mov
cld
cdq
xor
fcmovnu
retf
jl
inc
xor
jp
sbb
xor
cwde
jae
inc
fiadd
das
imul
cmp
dec
jg
add
lds
jp
inc
nop
cmp
sbb
jmp
and
inc
push
xchg
pop
adc
and
sub
retf
adc
les
mov
aas
ins
or
cs
imul
pop
movs
dec
inc
cwde
mov
cwde
sti
jl
std
add
mov
pop
add
repnz
rcr
adc
(bad)
cmp
inc
pusha
out
inc
(bad)
shl
enter
cmp
fs
mov
das
fcmovne
test
add
inc
adc
mov
add
pop
add
loopne
push
lock
popf
call
loope
mov
sbb
xor
lock
mov
mov
ret
push
fnsave
popa
sti
fwait
retf
leave
in
call
push
pop
call
sub
mov
psubq
jle
hlt
imul
shl
nop
adc
xor
mov
mov
rol
xor
jno
outs
mov
xor
loop
xor
cmp
fxch
test
in
popa
cmp
inc
(bad)
bound
popf
out
ficomp
call
push
mov
call
push
nop
aaa
out
cmc
xor
dec
mov
inc
ins
mov
push
mov
push
mov
cli
stc
retf
mov
jmp
stos
or
add
jmp
push
adc
jns
imul
dec
pop
jb
addr16
out
loope
lods
test
xchg
jae
out
adc
aas
add
jae
in
out
ss
(bad)
pop
in
fs
dec
sub
stos
push
push
or
fcom
xlat
ds
cmp
and
out
mov
jmp
or
loope
adc
mov
push
mov
mov
push
shl
mov
xor
loopne
pop
into
loope
sbb
cdq
pop
sub
fld
cmps
add
sub
sub
scas
ins
dec
call
cmp
test
ins
inc
adc
xchg
dec
icebp
lds
bound
inc
cs
push
clc
jmp
add
push
or
ds
sbb
xchg
pop
jbe
xor
pop
sbb
lahf
test
std
mov
scas
aam
(bad)
lods
inc
lds
pop
jmp
add
adc
fwait
icebp
add
pop
mov
sub
mov
test
inc
push
mov
leave
ds
inc
cli
das
pop
daa
pop
cmps
cs
jmp
(bad)
icebp
sub
adc
cmp
dec
xchg
imul
sub
mov
push
inc
xchg
out
(bad)
int3
add
ja
add
push
pushf
jmp
add
mov
sub
jbe
and
sbb
ins
mul
pop
jno
push
mov
pusha
push
lock
arpl
dec
push
push
push
adc
out
and
or
jnp
les
fwait
retf
xchg
jb
aaa
repz
cli
xor
lea
dec
repz
rcl
ja
fbstp
xor
gs
sbb
leave
pop
sahf
add
mov
sbb
rcr
(bad)
ds
mov
pop
inc
push
pop
inc
mov
imul
xor
punpcklwd
and
ins
std
retf
inc
pop
lea
ins
in
add
idiv
test
jp
sbb
popa
mov
shr
sbb
iret
in
jmp
stos
jp
lock
cmps
xchg
(bad)
fidivr
retf
mov
inc
push
jmp
mov
dec
mov
popa
fidiv
aas
cld
add
inc
sbb
push
cwde
mov
cs
call
leave
push
sbb
mov
xchg
hlt
push
test
xchg
lods
sbb
jmp
sub
repz
enter
mov
xchg
out
jmp
jmp
mov
xor
mov
adc
rcr
sbb
pop
push
lds
sbb
clc
sub
imul
xchg
std
add
mov
ss
sub
outs
out
xchg
out
or
xchg
fwait
pop
mov
daa
fst
jnp
sti
sahf
jecxz
adc
mov
mov
ds
rcl
outs
ins
cli
sbb
dec
cwde
data16
aam
ja
retf
gs
out
xor
add
call
mov
imul
fwait
xor
shr
mov
sub
adc
jmp
imul
jnp
stos
push
add
pop
inc
test
(bad)
ja
pusha
dec
fs
add
pop
sub
out
test
pop
pop
add
retf
cmp
push
push
cmp
pop
adc
jb
jns
lahf
adc
pop
rcl
push
pusha
js
(bad)
cmp
sub
out
lds
aad
hlt
bound
inc
mov
shl
jmp
sbb
sub
sbb
les
cmp
cmp
cmp
push
push
dec
pop
in
js
cs
gs
sahf
cmp
xor
(bad)
push
movs
xor
cmp
cli
fwait
pop
in
fwait
sbb
push
cld
xchg
pop
cmp
jno
xchg
sbb
jp
mov
outs
fimul
mov
adc
shr
popf
mov
dec
sbb
arpl
or
aaa
mov
test
sub
hlt
(bad)
push
icebp
retf
fldcw
jo
sbb
cdq
cmp
cmp
or
or
retf
rcl
dec
xor
movs
ret
test
sub
in
fiadd
ss
push
ja
les
fs
add
add
retf
data16
add
neg
and
mov
in
rcr
je
cmp
fs
(bad)
fcomp
pop
(bad)
xlat
jge
shl
and
push
sbb
sbb
mov
scas
dec
enter
xchg
movs
cmp
fcomp
push
pop
pop
lods
adc
jge
add
push
push
xchg
test
(bad)
sbb
lahf
xchg
jae
pusha
push
cmps
cmc
nop
cmp
jmp
fs
mov
push
mov
stos
cli
outs
out
add
xchg
and
xchg
xchg
outs
cs
adc
xlat
add
stc
test
fmul
je
out
and
fistp
pop
mov
out
inc
test
dec
je
jmp
dec
outs
(bad)
jge
shr
push
add
xchg
sub
xor
inc
sti
call
xor
add
imul
iret
cmp
cmp
les
mov
inc
and
xor
mov
loope
push
pop
and
sub
dec
inc
push
fcom
and
or
popa
shl
push
dec
out
int3
adc
add
ret
dec
shr
je
std
dec
sub
add
bound
inc
xchg
or
xchg
loop
loopne
and
inc
ja
pop
fnop
adc
xchg
js
sub
mov
test
sbb
or
cmp
adc
sub
dec
lahf
pop
loopne
lods
cwde
(bad)
lock
and
aas
xor
mov
mov
xchg
xchg
js
mov
xor
push
xor
push
ss
leave
mov
aaa
lahf
pop
rol
mov
mov
xor
fwait
cld
mov
push
stc
inc
pop
jmp
fcom
pushf
mov
and
push
adc
push
outs
psrlq
add
mov
jmp
dec
es
ror
syscall
mov
pop
je
rcl
xlat
shr
xor
int
push
add
push
idiv
(bad)
fld
xor
inc
(bad)
ja
mov
ins
push
sub
adc
add
icebp
in
aaa
xchg
cld
sub
mov
xor
(bad)
push
jmp
inc
add
add
or
(bad)
imul
adc
mov
(bad)
cmp
(bad)
sbb
iret
dec
hlt
inc
stos
ficom
jo
movs
pop
cwde
jecxz
into
jns
into
dec
inc
movs
cmp
pushf
in
test
loop
pop
std
mov
xchg
fmul
xor
adc
push
ins
xor
mov
sbb
add
dec
inc
lahf
mov
cmps
out
pop
mul
mov
(bad)
mov
shl
jmp
jbe
repnz
sbb
loope
pop
sbb
(bad)
pop
popa
pushf
adc
sub
sahf
je
daa
popf
daa
das
je
shr
inc
pop
cmc
repz
xchg
xchg
cmp
xchg
ffree
xchg
std
xor
mov
leave
jnp
inc
rcr
adc
mov
adc
sub
movs
cmps
(bad)
cmps
repz
or
loopne
dec
push
cmovbe
add
into
aad
pop
and
adc
int3
enter
mov
pop
dec
ret
outs
stc
pusha
push
push
addr16
sub
mov
dec
call
(bad)
pushf
in
adc
(bad)
or
mov
xchg
retf
pusha
mov
mov
mov
sbb
std
mov
fs
lods
mov
gs
mov
mov
sbb
sub
jo
scas
jne
adc
imul
jnp
adc
mov
xchg
cmp
xor
xchg
mov
push
cmp
mov
jge
sub
mov
pop
movs
mov
sbb
rol
imul
adc
jmp
shr
pushf
in
inc
(bad)
xchg
jae
jns
pop
out
movs
dec
into
dec
add
xor
mov
pop
gs
sbb
fiadd
inc
das
(bad)
and
jo
mov
push
mov
dec
shr
add
mov
sbb
arpl
das
jmp
test
mov
retf
rcr
iret
mov
addr16
or
loope
adc
cwde
repz
push
scas
test
mov
leave
mov
idiv
sar
stos
inc
mov
mov
dec
loope
mov
jae
ss
lahf
cmp
xchg
into
test
sahf
clc
or
mov
test
and
pop
(bad)
xchg
jp
xor
and
lock
and
add
sub
iret
or
jg
push
mov
call
sbb
outs
inc
gs
lods
retf
std
inc
xchg
fisub
dec
dec
xchg
push
or
xor
in
nop
pop
aas
mov
adc
fwait
out
adc
push
es
xlat
xchg
jg
mov
popa
rcl
into
fwait
fs
pop
mov
adc
jl
(bad)
mov
cs
push
sbb
push
(bad)
cmp
cdq
mov
inc
mov
add
dec
push
jp
mov
leave
fs
mov
jp
test
add
in
call
lds
or
test
lahf
inc
in
out
rcr
leave
dec
(bad)
add
aad
bound
mov
push
inc
dec
push
sub
xlat
retf
test
push
(bad)
jle
repz
or
mov
cdq
jmp
fistp
push
push
jb
fmul
iret
push
fistp
ja
push
mov
retf
gs
dec
fcomp
mov
and
(bad)
jp
lock
ret
jmp
xor
rcr
mov
shr
fldenv
adc
ins
jo
mov
push
in
not
mov
stos
addr16
mov
cmps
jl
cmp
jbe
pop
sub
push
cli
mov
adc
lock
add
les
add
out
sbb
xchg
mov
sbb
sub
dec
fcom
shl
sub
sbb
pop
je
pop
loope
sti
in
pop
imul
cmp
out
popa
jnp
push
repnz
retf
js
out
inc
dec
int
les
add
inc
sar
push
out
push
icebp
dec
pusha
sub
out
js
loope
imul
(bad)
in
inc
sub
test
scas
push
push
(bad)
fnstenv
sbb
ret
imul
(bad)
jp
push
adc
sar
jl
sub
pop
dec
adc
and
jge
pop
imul
shl
sbb
mov
jge
jmp
cli
mov
fwait
outs
daa
xor
push
and
and
into
sub
pop
icebp
push
push
xor
pop
pop
or
pushf
push
jle
dec
popa
cmp
arpl
mov
sbb
popf
jp
aas
std
pop
jae
pop
jns
repz
add
cli
cld
add
hlt
aas
adc
mov
test
cdq
push
dec
add
shl
outs
mov
cmp
inc
and
call
or
mov
ror
cmp
hlt
mov
jb
push
int3
add
mov
cmp
ja
add
xchg
fst
push
sub
adc
pop
or
mov
push
in
push
adc
daa
xor
bound
test
cld
jo
(bad)
cmp
loopne
mov
jno
or
das
adc
mov
mov
mov
shl
test
rcr
aam
ins
mov
mov
push
inc
out
jle
cs
add
push
popf
jb
ret
inc
add
lahf
mov
mul
fimul
dec
(bad)
fdivr
sbb
cmps
push
pushf
jbe
mov
shl
and
jbe
pop
xchg
xchg
scas
pop
inc
sub
(bad)
mov
pop
cmp
movs
cli
call
xor
into
mov
xchg
inc
popf
bswap
dec
sti
xchg
fcomp
not
jecxz
(bad)
sub
movs
mov
push
mov
push
inc
jno
jp
jo
mov
xlat
adc
sbb
(bad)
aaa
dec
jb
pop
add
cmp
push
xor
ins
addr16
or
retf
push
adc
sbb
mov
and
inc
int
add
xchg
sbb
pop
xchg
aaa
cmp
push
xchg
movs
xor
stc
pop
shl
addr16
inc
sbb
inc
jnp
idiv
daa
rcr
das
rcl
es
push
cmps
mov
mov
and
cld
push
das
cdq
dec
int
nop
das
and
jo
xchg
cmp
hlt
cmp
mov
push
mov
mov
and
mov
jle
pop
fst
add
ret
int
ror
(bad)
lods
push
cmp
rol
ins
push
hlt
jns
ret
mov
or
jae
fldenv
mov
cmp
aas
shl
call
loop
xchg
aad
dec
(bad)
rol
add
ror
aad
(bad)
mov
hlt
and
or
rcr
aad
cmp
retf
pop
idiv
jns
stos
outs
std
push
mov
out
jmp
sbb
xchg
mov
aaa
stos
or
call
pop
fstp
inc
daa
ds
dec
js
jno
inc
add
cld
and
bnd
sbb
inc
xchg
mov
jne
cdq
sbb
in
pop
dec
pushf
mov
jnp
or
mov
cld
stos
and
and
cmp
fwait
jg
xchg
cmc
dec
outs
dec
push
loopne
bound
(bad)
pop
inc
je
pop
clc
cld
imul
shr
jno
adc
xor
mov
repz
mov
(bad)
dec
and
mov
push
push
stc
pop
inc
xor
(bad)
jp
push
sub
pushf
cmp
push
push
ret
xchg
es
jmp
movs
out
mov
add
gs
inc
xor
mov
repz
loop
repz
push
pop
dec
and
dec
movs
inc
out
fcomp
or
mov
mov
fnstcw
sub
sbb
jmp
push
push
or
mov
retf
mov
or
and
fbstp
outs
cvtpi2ps
jecxz
xor
xchg
xor
jmp
sbb
xrelease
inc
and
dec
cmc
pop
pop
mov
xchg
js
mul
mov
mov
fs
hlt
xchg
jno
mov
xchg
adc
push
test
xor
test
jo
dec
adc
adc
add
cmp
sbb
(bad)
adc
rcl
jg
dec
jle
and
dec
call
xor
mov
sub
(bad)
lods
pusha
aas
clc
ftst
(bad)
in
sub
sub
jge
mov
ret
rcl
outs
mov
in
dec
in
mov
xchg
sahf
sub
icebp
enter
push
je
fdivrp
pushf
and
inc
cmp
push
inc
and
aam
or
jg
cmp
pop
cli
mov
cld
jmp
pop
sbb
ficomp
xchg
push
(bad)
cmps
cmp
sub
pop
and
stos
sub
cmp
and
mov
enter
sub
inc
(bad)
data16
shl
fisubr
leave
ins
xchg
sub
mov
jnp
add
aaa
inc
cld
jmp
pusha
push
shl
inc
xor
ret
xor
mov
cmp
out
aad
jo
loopne
sbb
cmp
call
xor
add
jl
dec
dec
retf
rol
call
and
pop
add
xor
mov
mov
push
ins
loopne
mov
cmp
pop
sti
mov
dec
pusha
or
sti
jmp
mov
sbb
and
es
rcr
fdiv
inc
and
fnstenv
enter
dec
jmp
out
xor
out
cmp
les
test
neg
call
and
imul
pop
out
dec
iret
adc
xchg
pop
mov
push
push
ret
imul
dec
out
jae
add
xor
or
fnsave
adc
add
add
jo
mov
bound
clc
ret
dec
repz
les
jecxz
sub
mov
add
addr16
adc
mov
(bad)
lock
fadd
xchg
adc
push
inc
dec
jne
xor
mov
lea
cmp
xchg
mov
pop
xchg
pop
mov
xchg
jmp
pusha
inc
cdq
imul
adc
in
add
dec
xchg
mov
add
cmp
inc
cmp
xor
jae
cmp
jmp
jg
inc
dec
(bad)
jae
fiadd
movs
inc
cli
jg
pushf
push
sti
inc
sub
shr
sbb
and
and
(bad)
std
enter
cld
dec
imul
cwde
and
daa
aas
sbb
call
ror
jge
mov
test
jecxz
jo
(bad)
call
add
mov
aas
and
or
dec
add
xor
popf
adc
addr16
xor
add
dec
sub
into
je
push
dec
push
repz
and
and
adc
mov
cmp
mov
daa
cmp
dec
cwde
outs
das
iret
pop
push
push
push
pop
mov
mov
popa
mov
push
sub
retf
repz
dec
fistp
scas
pushf
jge
out
(bad)
ror
gs
mov
sahf
pop
test
repnz
rol
add
add
cmps
and
inc
int
inc
fsub
cdq
xchg
enter
lods
(bad)
leave
loope
movs
ds
imul
ja
push
inc
fsubr
mov
pop
fimul
pusha
aad
test
xchg
pavgb
cmp
int3
aaa
push
retf
and
ins
je
jbe
cld
leave
ss
jp
xchg
stos
neg
jo
enter
and
pop
fist
xchg
stos
gs
stos
rcr
jge
repz
loope
and
nop
mov
(bad)
mov
sbb
xchg
cmps
lods
sbb
mov
dec
icebp
pop
pop
scas
inc
fcomp
loopne
sbb
mov
test
cmp
pop
inc
pop
call
adc
ret
in
loopne
adc
out
and
imul
pop
sub
in
push
fidivr
xchg
fld
jp
adc
xchg
lea
das
(bad)
(bad)
popa
loope
and
push
sbb
cmp
pop
es
leave
(bad)
push
das
inc
scas
jg
imul
stos
ret
in
adc
xor
call
fwait
test
and
mov
xchg
mov
enter
jl
loope
cmc
adc
lds
jno
sub
fdiv
jg
leave
push
cmc
mov
cmc
xchg
xor
pop
clc
dec
fwait
(bad)
pop
std
cmp
mov
or
sbb
idiv
sub
jns
mov
mov
into
add
mov
out
call
iret
repz
fst
cmps
push
(bad)
pop
popf
inc
je
adc
lock
bound
scas
call
ds
xchg
push
(bad)
ja
cmp
cmps
cld
dec
ret
sub
out
stos
add
mov
xchg
das
jmp
mov
pushf
inc
mov
xchg
iret
xor
repnz
and
data16
mov
dec
test
(bad)
jnp
mov
mov
jmp
xchg
mov
sahf
ins
mov
stc
enter
jnp
jmp
loop
adc
fwait
test
push
and
aad
out
cmps
xor
push
mov
or
out
push
shl
add
mov
jno
neg
sub
cmp
sub
bnd
scas
daa
ret
mov
movs
xchg
(bad)
inc
mov
(bad)
cmps
ins
test
sub
lods
mov
jge
and
mov
jns
fistp
cmp
or
js
cmp
jmp
retf
rcl
cs
ret
rcr
cmp
test
lds
mov
aaa
lods
or
and
push
mov
aam
jmp
movs
mov
ficom
adc
mov
xchg
je
xchg
in
jecxz
inc
inc
std
test
arpl
adc
addr16
inc
inc
mov
add
scas
xchg
adc
sahf
mov
cmps
and
jmp
ja
or
ds
fstp
mov
dec
sub
adc
dec
pushf
gs
push
(bad)
jns
pushf
push
arpl
data16
retf
pop
clc
xor
cmc
or
jge
adc
sub
sbb
out
or
jmp
stc
push
loop
outs
(bad)
inc
mov
idiv
mov
(bad)
xchg
sub
sub
adc
cs
call
fidiv
cmc
loopne
mov
test
cs
xchg
hlt
aad
inc
add
cli
and
pop
dec
and
rcl
(bad)
(bad)
neg
aad
aad
dec
sbb
and
add
add
(bad)
mov
lods
and
(bad)
aam
dec
push
lahf
cld
pop
mov
loopne
sub
movs
xchg
cmp
sbb
sub
or
dec
ja
dec
push
pusha
cdq
push
stos
inc
or
cld
jle
jbe
scas
dec
daa
or
cs
push
js
in
xchg
mov
and
jecxz
push
mov
lods
and
or
dec
aam
sbb
lahf
sbb
pop
movs
cmp
or
out
mov
loop
mov
sub
pop
push
dec
mov
adc
and
push
cmp
adc
fild
jno
adc
mov
out
jmp
dec
mov
stos
(bad)
out
jl
ins
sub
or
xchg
ins
cmps
or
inc
xor
sbb
imul
add
pop
or
dec
cmp
unpcklps
jbe
lea
inc
mov
xor
inc
inc
adc
mov
push
mov
pop
mov
sar
ins
shl
mov
and
shl
bound
lock
retf
sub
push
shl
les
or
mov
outs
pusha
(bad)
ins
leave
adc
adc
ds
and
je
stc
xor
iretw
cdq
lods
popa
fcom
fild
sbb
sbb
loop
xchg
pushf
sub
cdq
pop
xor
sub
inc
loop
push
adc
pop
les
mov
fstp
jne
xor
push
(bad)
push
pop
xor
dec
fsubr
mov
stos
add
inc
or
add
and
mov
xor
cli
stos
cmp
sbb
aad
data16
dec
sub
or
or
mov
aas
idiv
mov
xchg
ret
js
and
and
or
cmp
dec
lods
nop
inc
push
(bad)
in
ins
pop
ins
lods
cvtpi2ps
leave
ret
daa
(bad)
retf
test
daa
push
nop
inc
mov
xchg
or
(bad)
aas
xchg
stos
out
xor
clc
push
mov
adc
push
push
vmread
push
pop
push
int3
mov
out
pop
ds
add
mov
fs
and
cli
into
rcr
xchg
retf
adc
lock
popa
xchg
and
in
jge
lahf
adc
jmp
sbb
ret
int3
push
mov
cwde
sbb
jg
jp
jbe
es
mul
sbb
mov
out
push
push
popf
xchg
imul
cmc
cdq
test
mov
stos
mov
outs
out
mov
daa
or
test
into
iret
push
mov
dec
push
or
loope
and
add
adc
dec
ret
pop
jmp
sub
les
out
xor
mov
lds
xor
sbb
ss
mov
(bad)
stos
sub
imul
sub
stc
mov
pop
out
pop
add
jmp
in
and
das
push
not
inc
imul
lahf
adc
icebp
lea
sbb
sub
stc
setno
adc
mov
mov
imul
outs
mov
repnz
outs
pop
shr
mov
inc
nop
mov
cwde
lock
int
jg
sbb
or
mov
jg
sbb
inc
aas
inc
adc
scas
cwde
(bad)
adc
rol
loope
xchg
je
push
xchg
pop
and
ins
add
jmp
pop
out
mov
scas
pop
in
inc
dec
ds
cs
stos
adc
aas
mov
dec
xor
enter
neg
movs
in
adc
cmps
push
and
in
or
jecxz
stos
or
adc
jb
mov
int3
inc
loope
jbe
(bad)
in
aaa
push
bound
enter
pop
push
adc
xor
sub
aam
push
ror
jne
sub
test
adc
mov
ins
push
bound
pop
enter
or
inc
add
lock
call
sti
stos
test
cmp
fnstcw
inc
lock
repnz
jbe
outs
xchg
scas
cmc
enter
ins
mov
aad
test
fisubr
or
stc
jo
test
lds
cmp
popa
and
cmps
imul
xchg
popa
rol
dec
shr
inc
pop
mov
add
sti
push
idiv
js
or
ret
movs
ja
sub
push
sbb
adc
sbb
ret
lahf
jl
dec
adc
test
push
int3
cmp
shl
ja
xchg
call
and
pop
add
push
pop
mov
(bad)
mov
not
adc
pop
sbb
imul
xchg
or
jmp
cli
(bad)
rcl
icebp
cwde
add
iret
(bad)
push
mov
add
cmp
inc
jge
loopne
fwait
dec
xor
mov
loope
xor
pop
js
mov
and
sub
cmp
repnz
mov
or
clc
or
das
push
jg
call
ins
aaa
jb
push
add
mov
cmp
call
dec
fwait
dec
push
lahf
ret
out
jbe
in
mov
jmp
(bad)
(bad)
loopne
add
cmps
dec
adc
retf
inc
lahf
mov
adc
mov
ss
icebp
adc
inc
adc
adc
sub
adc
dec
out
sub
cmc
pop
xor
adc
cmp
nop
xor
bound
sbb
das
pusha
pop
movs
sbb
mov
loope
push
xchg
xchg
ds
mov
(bad)
je
mov
add
sbb
push
ins
pusha
nop
loope
mov
retf
push
fsub
iret
ins
outs
scas
or
cmp
je
inc
sti
dec
and
or
lea
dec
and
js
jge
(bad)
mov
mov
xlat
mov
inc
inc
loop
fwait
add
fptan
or
shl
pop
add
les
cs
fs
sbb
popf
inc
cmps
lods
cmp
(bad)
xlat
adc
std
add
jo
nop
sub
test
fidiv
xchg
adc
mov
mov
rcl
sbb
pop
test
lds
repnz
mov
cmps
stc
xchg
and
mov
(bad)
fdivp
jecxz
in
cwde
pop
pop
mov
fcomp
inc
push
cmp
sub
sbb
pop
out
movs
xchg
sahf
rol
mov
adc
cwde
jns
xchg
xchg
rcr
jmp
cli
cmp
jo
and
leave
inc
mov
std
call
jno
cwde
in
out
loop
jmp
or
std
sbb
int3
inc
sbb
(bad)
ja
cli
inc
ret
ins
mov
nop
xor
outs
cmps
push
adc
xchg
sbb
out
jb
xchg
xor
imul
nop
push
cs
fld
and
push
bound
mov
movs
sbb
jl
ss
jge
in
push
mov
inc
dec
sbb
test
adc
loopne
rcl
loop
(bad)
jno
das
mov
jno
call
push
dec
es
ss
push
ret
out
loopne
retf
jmp
dec
aaa
xor
test
mov
popf
xor
stc
ficom
popa
dec
call
shl
mov
std
aad
xchg
sbb
gs
ror
call
dec
sub
mov
push
lahf
mov
jge
cmp
dec
arpl
mulps
mov
js
sub
and
ss
mov
fsubr
imul
add
cmc
push
cmp
cmp
loopne
cld
sub
fxch
xchg
fcom
mov
outs
sbb
dec
mov
(bad)
sub
push
pop
call
(bad)
std
imul
test
loope
cmps
adc
outs
loopne
fcom
and
fistp
adc
xor
push
mov
dec
jnp
adc
jne
fcomp
in
add
cmp
(bad)
hlt
mov
sub
into
xchg
ret
sbb
mov
shl
das
mov
or
fs
ins
sbb
push
fwait
pop
cwde
bound
lds
xor
pop
(bad)
add
call
stos
jne
push
push
in
sbb
inc
inc
call
pop
mov
xchg
jb
adc
loopne
dec
mov
dec
repnz
pop
pop
inc
popf
ins
mov
bound
dec
pushf
test
sti
xchg
and
ret
adc
mov
cmc
fwait
jne
sub
jae
mov
add
jmp
mov
cmps
add
mov
in
pop
retf
sbb
fwait
xor
loop
out
sub
mov
jle
dec
fwait
inc
pop
xchg
pusha
pop
rcl
aas
push
fnstenv
retf
cmps
mov
jb
(bad)
cmp
int
pop
neg
dec
pop
out
movmskps
sbb
mov
inc
pusha
jns
push
loop
cmps
mov
dec
jge
ins
mov
imul
and
add
sub
in
inc
mov
xchg
pusha
js
lds
or
sub
pop
clc
retf
dec
sbb
lods
retf
cmp
retf
xchg
jnp
xchg
stos
inc
sbb
or
sub
enter
cdq
loopne
(bad)
gs
push
sbb
test
jecxz
xor
jge
ds
jle
aaa
out
mov
xor
dec
outs
in
fld
in
cs
imul
mov
lock
cdq
xchg
hlt
enter
test
xchg
jno
lock
ins
movs
test
mov
mov
push
sbb
ss
xchg
js
cmp
adc
repnz
ret
mov
dec
out
(bad)
iret
lock
and
lods
jl
rcr
std
adc
mov
aaa
jge
sbb
hlt
jne
jbe
(bad)
popa
jg
add
push
sub
das
aam
mov
xchg
sbb
sbb
adc
pop
std
les
(bad)
mov
inc
test
scas
xor
push
pop
mov
fucomp
dec
outs
mov
pop
sahf
shl
cld
xchg
and
(bad)
pop
push
dec
sbb
nop
mov
xor
call
jmp
cmp
daa
mov
mov
cmp
or
imul
cwde
fisubr
cmps
dec
pusha
imul
mov
iret
movs
lock
retf
punpckhbw
mov
jge
(bad)
jmp
sbb
mov
sub
or
aad
ss
stc
mov
pusha
mov
loope
(bad)
jns
sbb
and
adc
inc
leave
jae
dec
and
inc
push
adc
mov
pop
pop
stos
test
pushf
call
adc
mov
lods
enter
popa
adc
and
ret
pushf
(bad)
push
popf
or
setge
pop
std
jno
out
aam
int3
pop
lds
lods
push
cli
loope
mov
jns
scas
sub
(bad)
pop
stos
inc
cmc
cdq
lea
mov
mov
mov
add
cmps
lea
dec
cmc
mov
scas
push
inc
rcr
outs
fadd
mov
sub
adc
std
and
pusha
je
cwde
sti
loope
bound
ja
lods
adc
cmp
inc
leave
ss
in
add
cdq
ins
lods
push
stos
jmp
mov
enter
sbb
and
repnz
pop
fld
fs
push
inc
jmp
stc
push
add
or
jnp
nop
jp
fadd
xor
cli
out
add
pop
mov
scas
add
(bad)
std
repz
fs
fstp
add
jmp
push
addr16
cmp
mov
jge
test
(bad)
cmp
pop
xchg
xlat
mov
mov
mov
pop
xor
mov
adc
lds
mov
sti
or
test
lock
fimul
fs
inc
xchg
or
out
out
lods
fs
and
push
mov
push
arpl
fistp
push
(bad)
loopne
(bad)
jns
inc
ja
or
outs
jbe
sub
inc
xchg
cmps
js
popf
pop
pop
cmp
mov
aas
popa
adc
cld
jl
push
int
lahf
jns
inc
xor
jle
jmp
rcl
stos
repz
jmp
popf
ret
mov
jae
sahf
pusha
lahf
xchg
mov
test
inc
aad
imul
cdq
(bad)
icebp
mov
ret
loop
sub
scas
jmp
mov
fisub
loop
(bad)
test
dec
mov
push
aad
sbb
and
xor
pop
fisubr
push
sbb
and
test
xchg
inc
daa
jmp
inc
adc
xor
scas
mov
stos
push
push
cld
or
out
nop
fisub
pop
inc
rcl
addr16
inc
pop
or
mov
outs
xor
xchg
jae
adc
out
(bad)
out
and
jbe
pop
mov
fisubr
xor
mov
outs
sbb
adc
in
fsubrp
and
(bad)
repz
mov
fdivr
scas
and
xor
pop
mov
xor
adc
xor
jno
scas
cli
retf
inc
outs
idiv
in
rcr
cmc
add
push
dec
lds
push
setae
in
jb
xor
lahf
neg
js
loop
sti
repnz
ficomp
pop
add
cli
mov
jl
aam
gs
push
mov
in
dec
mov
scas
in
pop
or
lahf
adc
push
cmc
not
(bad)
mov
cmps
jmp
fwait
mov
stc
or
arpl
adc
fwait
cwde
sbb
mov
push
mov
cmp
cmc
aas
test
and
jbe
lock
popf
xor
arpl
mov
iret
push
jge
dec
icebp
aas
or
mov
das
mov
cmc
call
mov
sub
ja
in
xchg
mov
lds
dec
jbe
or
xor
int
daa
nop
jno
js
les
dec
push
ja
shl
fisttp
(bad)
(bad)
sbb
push
popa
inc
iret
fsin
sub
loope
or
test
mov
mov
push
inc
pop
inc
inc
or
retf
dec
ja
mov
cmp
jp
loop
retf
push
test
stos
outs
outs
aam
adc
in
stc
sub
lock
push
call
mov
mov
shl
pop
dec
test
inc
iret
mov
jmp
sbb
imul
mov
pop
cmp
pop
cdq
rcl
repz
or
xchg
js
or
sbb
inc
mov
shl
adc
jae
mov
push
adc
daa
and
sub
mov
add
inc
adc
sub
mov
jle
xchg
test
add
jbe
push
add
sub
retf
inc
ja
enter
sub
retf
stos
lock
add
je
sub
adc
jbe
dec
shl
aaa
(bad)
fdivr
xor
test
lahf
pop
adc
and
cmp
mov
sub
or
int3
jbe
lock
(bad)
test
jp
cld
(bad)
sbb
and
scas
xor
and
lea
out
sub
mov
jmp
or
fcomp
div
or
dec
mov
js
xor
in
mov
xchg
and
mov
xchg
ret
shl
daa
dec
sbb
mov
lahf
std
fcomp
xor
lods
xor
(bad)
repz
add
push
dec
fs
jge
fldcw
xchg
popf
xchg
or
xchg
(bad)
fdiv
fwait
out
add
in
ins
call
inc
sbb
inc
loopne
xlat
and
sahf
and
mov
push
test
fwait
pop
vmaxss
stc
movs
jbe
clc
dec
(bad)
repz
hlt
inc
xchg
or
rcr
int3
and
and
and
fwait
aad
mov
in
pop
mov
inc
pop
(bad)
jmp
add
cmp
cmp
ss
clc
add
popa
mov
and
sub
retf
cmps
fadd
dec
mov
mov
lds
test
xlat
push
fwait
or
pop
cmp
retf
popf
cmc
(bad)
fisubr
adc
or
dec
mov
shl
xchg
(bad)
out
test
or
sbb
lods
icebp
js
adc
add
mov
and
ins
inc
or
adc
lea
inc
shl
shl
sti
mov
paddusw
neg
and
and
xor
cli
pop
inc
cmp
add
ins
push
jne
arpl
dec
push
data16
ss
sub
jmp
pop
xchg
sbb
jne
sbb
jecxz
cmp
cld
xor
outs
pop
and
pop
xor
xchg
xor
popa
pop
enter
scas
jbe
stos
mov
xchg
in
sar
shr
js
and
xor
mov
mov
stc
stos
jae
lods
xor
test
and
and
xchg
fiadd
and
lahf
mov
outs
jecxz
cs
mov
pop
mov
dec
xor
inc
fist
adc
mov
adc
retf
sub
jge
add
push
adc
stos
fnstsw
iret
fcmovnbe
mov
lods
mov
outs
cmp
xchg
xlat
(bad)
(bad)
cmp
imul
xchg
ret
into
fisub
das
push
iret
sti
xchg
out
pop
icebp
test
mov
cmc
and
push
or
push
pop
aaa
leave
loop
sbb
leave
lahf
ficom
xor
div
mov
vmovlps
mov
fmul
cmp
call
add
adc
mov
data16
(bad)
push
xor
iret
inc
xchg
retf
inc
in
sub
and
repnz
sub
movs
sub
pusha
fcmovnbe
adc
stos
mov
in
stos
pop
loopne
idiv
mov
scas
call
cmc
inc
mov
scas
(bad)
scas
pushf
inc
call
sbb
dec
mov
add
and
cld
icebp
jmp
cmc
jecxz
mov
div
test
fwait
mov
dec
xchg
and
sbb
add
(bad)
in
stos
xchg
ins
leave
lods
das
jnp
prefetch
ror
xor
lods
xor
sub
das
int
sahf
and
cmp
pop
adc
icebp
rcl
xchg
lahf
shl
and
fdivr
cmp
mov
sub
pop
(bad)
call
mov
cmp
ret
ins
push
ret
dec
fild
xlat
and
movs
pop
pop
xor
cmps
sbb
push
mov
xchg
ficom
fucomi
add
mov
pop
inc
inc
push
cmp
fisttp
fsub
pop
sar
popa
pop
fld
cmp
ficom
fcomip
dec
xchg
jle
loop
ja
aam
xchg
cmp
iret
(bad)
out
std
lahf
cmp
dec
pusha
outs
sub
xchg
cdq
ror
in
dec
cmp
(bad)
lock
(bad)
cmp
push
jnp
js
dec
xlat
addr16
jg
popf
add
cmps
mov
cwde
iret
push
cmps
jmp
ds
push
addr16
(bad)
jg
test
add
xchg
sbb
sub
mov
retf
(bad)
(bad)
fbstp
rcr
mov
push
lods
dec
sbb
popf
scas
into
gs
jg
cbw
out
jbe
outs
retf
push
mov
push
xchg
repnz
(bad)
jns
pop
ds
cmps
loope
cmp
stc
or
lock
xchg
adc
push
cwde
dec
push
mul
retf
in
mov
test
xor
scas
add
cs
stc
int
dec
or
outs
test
ins
cmp
pop
daa
and
sub
add
jmp
fcomp
push
cmp
lock
stos
push
inc
mov
mov
mov
aaa
and
cmp
push
mov
loope
mov
js
(bad)
mov
jnp
mov
out
sub
test
sbb
pop
hlt
js
test
add
mov
sub
fdivr
scas
add
jns
mov
mov
shl
jns
and
xor
jecxz
add
sub
in
fisttp
mov
adc
movs
outs
movs
rol
cmp
inc
pop
dec
add
aas
cmp
cmp
ss
mov
pop
dec
jns
(bad)
pop
pop
test
or
and
mov
ins
int
xor
aaa
push
loop
enter
jmp
sahf
sub
dec
push
cdq
cmp
fadd
mov
out
inc
xor
ror
retf
idiv
int
xchg
sub
mov
imul
cmp
pushf
cmp
adc
jmp
stos
pop
dec
push
mov
push
add
adc
mov
stos
fisub
das
dec
sbb
cmps
shl
sub
or
sub
das
shl
fiadd
out
adc
ss
mov
pop
mov
icebp
mov
aam
sub
mov
jmp
aas
loop
leave
pop
fmul
jne
in
ret
je
fcmovnu
faddp
jmp
push
ins
jle
pop
mov
(bad)
(bad)
outs
pop
sbb
xchg
sbb
sub
add
sbb
jae
jbe
jecxz
lea
pushf
and
leave
lahf
mov
cld
fmul
js
mov
clc
cli
call
out
cmp
sub
push
es
sub
cmp
dec
lods
mov
loope
and
jmp
imul
xor
je
jge
mov
(bad)
inc
sbb
cmp
jmp
dec
mov
lds
movs
sub
stos
mov
(bad)
outs
jmp
scas
sbb
ins
aaa
sbb
cmps
(bad)
jp
jl
(bad)
mov
dec
mov
dec
loop
(bad)
out
imul
mov
aad
cdq
sbb
mov
cmc
push
shr
(bad)
jl
mov
add
jb
mov
or
pusha
push
sbb
shl
ror
dec
mov
and
pop
mov
push
ins
scas
sti
ret
cmps
test
mov
sub
jp
cmps
cmc
stos
adc
mov
out
cld
in
jle
cmp
cs
stos
and
push
(bad)
(bad)
(bad)
pop
add
stos
push
mov
sub
xor
scas
fnstsw
div
sbb
inc
or
cmc
sahf
addr16
sti
and
shl
push
sbb
retf
in
adc
adc
add
stos
popa
test
mov
mov
shl
inc
inc
stos
adc
xlat
mov
or
pop
addr16
call
mov
inc
mov
sbb
stos
(bad)
outs
sahf
push
pop
jno
xchg
loop
mov
pushf
jbe
ins
js
ja
and
cmp
sub
cmps
xor
fistp
push
fadd
rcl
int
sar
(bad)
sbb
movs
mov
in
jb
jle
xchg
mov
mov
js
dec
xchg
pop
cwde
stos
hlt
adc
inc
loopne
or
adc
sti
repz
scas
movs
sub
retf
(bad)
push
rol
lods
and
jnp
cmp
idiv
mov
pop
ss
add
sub
ret
movs
enter
ins
push
lds
imul
in
jle
xchg
dec
out
loope
call
cmp
sbb
xchg
(bad)
cmp
xchg
movs
hlt
sbb
ja
scas
nop
aas
xchg
push
sahf
mov
pop
mov
lods
shr
out
mov
or
or
xchg
(bad)
fdivr
push
and
es
dec
aad
mov
pop
mov
frstor
or
xchg
mov
gs
mov
and
pop
jno
mov
inc
or
movs
dec
push
jbe
popf
inc
ret
jae
sbb
xchg
test
in
mov
in
inc
mov
jmp
in
int3
lahf
movs
aam
xlat
retf
(bad)
dec
pop
out
movs
and
jns
push
fist
mov
inc
inc
pop
push
or
cmp
neg
dec
daa
scas
test
test
loope
imul
cwde
ret
imul
repz
mov
mov
sahf
mov
sbb
jl
xchg
jns
lock
inc
jmp
int
fild
mov
or
hlt
iret
dec
jns
iret
add
imul
retf
popa
aaa
ins
xchg
repz
out
aaa
xor
and
dec
pop
ret
dec
jg
and
push
pop
mov
stc
pop
ficom
and
adc
imul
push
in
outs
in
xchg
jmp
sbb
dec
xchg
xchg
loope
push
xlat
pop
scas
push
scas
je
sti
or
pop
jmp
loope
jg
pop
les
mov
iret
aaa
es
inc
loope
mov
in
inc
sti
loope
xchg
ror
scas
xchg
xchg
adc
inc
dec
(bad)
xchg
addr16
mov
inc
std
retf
addr16
hlt
aas
(bad)
pop
mov
fcomi
push
mov
push
or
cmp
xor
jno
rol
sti
jg
scas
mov
out
mov
loopne
push
lods
lds
pop
mov
cs
out
cwde
sahf
clc
jae
mov
xlat
iret
mov
test
lea
mov
and
mov
jmp
ins
xchg
repz
sub
pop
stos
sub
and
test
push
stos
or
pop
adc
pop
cmp
clc
mov
inc
sti
inc
inc
test
cmp
or
imul
xchg
test
push
mov
lahf
sub
pop
pop
xchg
lock
pop
test
call
ss
lods
icebp
aad
jno
rcl
lods
imul
xchg
mov
fcmovnb
jle
cmps
adc
add
xor
mov
push
cmps
jb
imul
loopne
pop
mov
aad
fcom
mov
imul
mov
test
mov
movs
jmp
(bad)
(bad)
mov
imul
lods
call
pop
mov
ins
pop
or
jae
arpl
mov
loopne
sub
pop
rol
test
add
ficomp
aas
adc
bound
xchg
jl
xor
das
in
ret
les
mov
xor
(bad)
ss
sub
sahf
out
cmp
das
test
out
mul
imul
inc
test
cmp
adc
add
cmp
adc
inc
lock
fistp
aas
jns
retf
pop
aam
test
xchg
repz
mov
dec
pop
es
push
je
push
xchg
pop
out
xchg
repnz
rcl
add
or
lods
add
loop
jge
outs
jb
ja
push
ror
(bad)
sar
fld
sbb
mov
jge
add
bound
sub
ins
jo
push
(bad)
sub
jno
jo
sub
test
out
movs
xor
adc
cs
xchg
inc
scas
repnz
or
sub
lahf
es
adc
scas
ja
sti
pop
and
cmps
jnp
fsubr
cld
ds
(bad)
adc
add
pop
mov
mov
ins
out
dec
rcr
and
pop
popf
call
xor
rol
fisubr
jb
dec
xor
sub
pop
std
inc
xor
mov
dec
es
movs
pop
sar
push
jne
lods
scas
inc
mov
leave
push
call
jo
xchg
pushf
cli
and
cmp
push
out
sub
mov
and
das
fstp
cmp
cmp
jmp
dec
mov
dec
mov
xchg
je
dec
inc
outs
add
mov
add
or
or
push
or
add
or
xchg
push
cli
repz
dec
pop
sbb
into
imul
mov
pop
mov
sbb
jb
das
or
sbb
xor
js
movs
sbb
jmp
loopne
jno
xchg
scas
or
sub
and
mov
loopne
or
sbb
fwait
push
pop
jg
mov
leave
in
inc
cmp
inc
add
xchg
test
test
popf
inc
or
or
xor
cmp
aas
jge
adc
mov
das
pop
(bad)
mov
mov
sbb
add
push
loop
sahf
jmp
retf
(bad)
xor
sbb
xor
pop
xchg
jo
loope
push
nop
pop
div
ss
nop
pop
mov
imul
enter
push
(bad)
(bad)
jb
mov
sub
inc
(bad)
jno
test
ins
jmp
sbb
out
mov
inc
mov
or
and
daa
enter
cmp
shl
jge
push
mov
inc
or
dec
dec
adc
pop
and
pop
pop
in
adc
sbb
sar
mov
sub
mov
lahf
xchg
pop
fs
mov
les
mov
es
sub
std
fistp
(bad)
fidiv
inc
(bad)
inc
sub
dec
mov
dec
ss
sub
sub
rcl
stos
in
sub
xlat
mov
shl
mov
cmp
mov
test
loop
mov
(bad)
fsub
cmp
adc
xchg
movs
repz
mov
sub
push
adc
jge
loope
repnz
pop
mov
mov
mov
aam
pop
es
dec
jbe
js
jmp
imul
clc
mov
mov
ins
push
es
aas
imul
cmps
jl
inc
lahf
inc
call
xchg
xchg
adc
jl
mov
cmps
fld
rol
pushf
(bad)
adc
(bad)
sbb
lds
jp
shl
popf
dec
repnz
add
fwait
scas
xchg
mov
fwait
outs
das
cmps
out
pushf
add
inc
mov
mov
lods
dec
and
mov
jns
ret
outs
jmp
call
es
mov
std
lods
cdq
repnz
mov
or
push
dec
aad
sbb
mov
repz
test
fld
mov
cdq
arpl
xor
aas
add
stc
imul
mov
jle
push
nop
xchg
out
and
or
je
adc
xchg
sbb
cmp
outs
loopne
pop
cwde
inc
jns
mov
inc
lods
dec
shl
pop
mov
into
jmp
sbb
aaa
xchg
cs
mov
sub
leave
inc
mov
sbb
es
les
aas
mov
ror
add
mul
xor
add
jb
jle
faddp
neg
push
in
pop
or
rol
iret
or
lea
lock
inc
repnz
inc
add
(bad)
outs
mov
mov
stc
enter
pushf
sub
aas
xchg
lea
pop
sub
add
cmp
push
loop
les
and
mov
and
mov
retf
xchg
div
ret
imul
or
adc
add
aam
sub
ror
jle
dec
stos
and
mov
lods
push
sbb
dec
xor
mov
and
scas
enter
retf
pop
dec
pop
jp
inc
fs
add
jnp
mov
dec
xor
std
pop
cmp
mov
mov
cmp
mov
push
add
jns
in
or
xor
cmp
fld
imul
iret
xchg
imul
dec
pop
outs
mov
cmps
jo
push
(bad)
dec
pop
mov
frstor
mov
mov
call
fs
sbb
sbb
mov
js
test
(bad)
mov
inc
mov
ins
imul
gs
out
(bad)
(bad)
mov
mov
test
xchg
xor
xchg
push
pop
adc
cmp
push
jp
loop
jmp
stos
jo
adc
mov
imul
mov
jns
jb
(bad)
mov
test
fdivr
xchg
sub
mov
jae
jnp
and
adc
push
loopne
cli
cmp
aam
arpl
cmp
cmps
mov
pushf
mov
sbb
cmp
pop
pop
aam
xchg
test
and
fmulp
mov
iret
mov
xchg
enter
bound
xor
xchg
or
push
xchg
push
cli
(bad)
clc
(bad)
jmp
add
repnz
mov
jecxz
aaa
call
mov
movs
mov
and
jp
loope
(bad)
pop
les
add
mov
lods
pop
xchg
mov
test
retf
or
adc
mov
push
fimul
fbld
and
mov
stos
rcr
cmp
xchg
pop
ret
cmp
(bad)
mov
shl
xchg
stos
xor
mov
movs
inc
out
or
sbb
or
ja
xchg
mov
add
xor
mov
(bad)
ror
into
inc
lea
test
pop
and
mov
push
inc
scas
cdq
ret
jl
test
pop
xchg
adc
stos
push
movs
fwait
ret
fnsave
inc
icebp
shr
and
push
mov
lods
sbb
nop
mov
dec
sbb
add
call
mov
jmp
jecxz
fnsave
push
xchg
adc
jg
enter
cmps
add
das
ja
pop
pop
das
xchg
and
test
mov
loopne
call
test
dec
and
or
es
and
jg
into
push
bound
js
ret
jp
jne
xor
sub
jmp
gs
pop
ficom
retf
icebp
loope
aas
sub
test
mov
out
and
(bad)
jmp
dec
pushf
jge
leave
adc
pop
lea
or
sbb
mov
into
ins
pop
jbe
and
mov
inc
lea
shl
mov
adc
es
cmps
jge
pusha
pop
dec
mov
sub
pop
xchg
sbb
pop
inc
sbb
add
adc
inc
sbb
push
sub
cmps
popa
push
sub
push
call
jmp
dec
mov
lock
(bad)
movs
dec
inc
dec
sbb
outs
mov
clc
push
cmp
aas
mov
push
clc
mov
xchg
xor
stos
pop
xor
cmp
xchg
sbb
in
je
arpl
movs
stos
and
ret
cmp
sbb
and
icebp
mov
sti
xchg
lods
retf
aam
mov
mov
add
retf
push
movs
sahf
mov
stos
cmps
outs
cmp
push
adc
mov
sbb
sbb
or
sahf
repnz
enter
in
aaa
mov
sub
push
test
pop
cmp
ret
pusha
jl
xchg
aam
cmp
mov
test
sbb
into
inc
lods
sbb
mov
daa
sub
cmp
scas
je
test
pusha
cmp
jmp
pop
mov
xor
or
push
sbb
xchg
pop
hlt
add
in
pop
mov
cmp
call
and
call
cmp
jne
(bad)
bound
call
ds
jp
icebp
out
push
add
repnz
daa
fistp
push
bound
or
stc
pop
je
push
shl
xor
or
push
mov
jne
cmc
shl
add
jo
sbb
pusha
adc
sbb
pop
sbb
fstp
inc
pop
rcl
sub
and
push
adc
loop
mov
mov
loop
mov
jmp
adc
mov
push
cwde
adc
ds
call
xchg
ins
pop
sti
ja
push
movs
add
(bad)
jno
adc
cwde
adc
(bad)
xchg
mov
repz
inc
add
rcr
cmp
ret
or
rol
shl
loop
ret
(bad)
sbb
adc
adc
xchg
push
movs
call
pop
xchg
fwait
lods
pop
std
sub
out
dec
std
jp
mov
prefetch
or
outs
sbb
push
dec
jne
call
inc
lods
repnz
mov
gs
lock
mov
(bad)
std
iret
cmp
cmps
push
pop
xor
jmp
das
pop
xchg
dec
xor
test
jle
loope
ja
outs
push
xchg
sub
xchg
push
mov
mov
pushf
cdq
ret
test
sub
bnd
shr
push
cmps
dec
je
xchg
nop
cmp
fdivr
sbb
iret
xlat
sub
push
push
add
and
mov
lods
mov
out
rcr
test
movs
mov
inc
arpl
clc
mov
mov
xlat
push
pushf
sbb
in
data16
jle
pop
jmp
pop
test
repz
mov
mov
jo
into
loope
or
fist
ja
in
jno
adc
lods
sub
xchg
or
stos
pop
mov
mov
push
adc
mov
dec
out
adc
(bad)
aaa
cmps
jmp
jbe
jmp
sub
push
sub
xor
adc
xchg
adc
movs
neg
mov
jae
dec
loop
mov
ficom
clc
cmps
mov
jno
jg
jno
sti
jb
dec
ins
scas
jp
pop
stc
push
in
xchg
add
in
mov
je
or
in
mov
xor
cmc
in
shl
aam
enter
jmp
sub
add
jg
inc
les
adc
(bad)
out
fist
mov
js
test
or
cmp
std
jg
loope
imul
inc
scas
leave
xchg
shl
(bad)
setbe
jae
mul
mov
adc
sub
mov
xor
sub
cmps
sbb
add
daa
ss
pop
adc
push
vmovsldup
jb
rol
loope
call
sub
nop
mov
xor
xor
lock
loope
add
gs
test
mov
mov
xor
or
arpl
jb
xor
lahf
enter
mov
mov
inc
sbb
mov
retf
or
mov
dec
scas
fidiv
fstp
cmps
aas
mov
sub
(bad)
out
cli
loop
and
add
stos
lahf
icebp
lea
jecxz
cmp
push
(bad)
pop
adc
arpl
inc
jmp
aas
xchg
ret
popf
xsha1
cmps
or
bnd
popf
mov
mov
ds
push
aam
mov
push
sub
int
test
adc
xor
xchg
daa
mov
cdq
xor
ins
mov
fbstp
rcl
mov
in
inc
xor
pushf
inc
sbb
sbb
(bad)
mov
shl
out
or
in
test
jle
(bad)
jmp
adc
addr16
call
mov
adc
xor
push
xor
cmps
adc
cmp
lock
shr
adc
jns
xor
jbe
jp
lock
lock
out
sub
pop
pop
mov
mov
xchg
sbb
enter
sahf
xchg
ficomp
sahf
xchg
fsubr
sub
and
mov
imul
jmp
jmp
or
inc
add
punpcklbw
fcomp
loope
(bad)
jmp
(bad)
jmp
adc
sbb
sub
loop
loopne
or
jl
and
cmps
iret
aas
aaa
add
jecxz
adc
shl
ss
jecxz
sub
adc
lahf
and
nop
outs
(bad)
pop
lock
inc
icebp
dec
in
stos
pop
pusha
(bad)
loop
xchg
mov
jbe
adc
xchg
icebp
add
ret
ins
xchg
fscale
cmp
das
sub
ss
jae
mov
pop
jns
sbb
sbb
xchg
inc
lods
push
scas
xchg
stos
mov
(bad)
fdivr
stc
cmp
imul
outs
add
aad
add
sbb
jbe
loopne
xchg
into
icebp
jb
inc
aad
ret
movs
jmp
retf
xchg
icebp
xchg
jae
jb
fiadd
mov
mov
(bad)
and
jno
cmp
xchg
cmp
dec
mov
jmp
rol
xor
mov
cli
adc
psrad
dec
xchg
adc
(bad)
xor
in
xchg
cmps
adc
popa
push
cs
jo
aaa
dec
es
pop
and
pop
sar
xor
add
arpl
cdq
xor
xor
pop
out
cmp
dec
popa
pop
pop
pop
dec
mov
pop
sti
in
push
dec
fdivr
imul
cli
adc
popa
sbb
mov
xchg
jmp
aad
pop
in
pusha
inc
add
cmp
idiv
sub
mov
mov
sub
pop
mov
cmp
repnz
lods
dec
xor
or
enter
enter
pop
push
in
dec
sar
adc
inc
movs
mov
leave
push
ror
jne
xlat
js
(bad)
std
dec
stos
dec
test
aaa
sbb
in
lock
mov
cs
stos
ds
inc
cmps
in
jecxz
cmp
sbb
ja
data16
fimul
adc
ret
add
jge
dec
pop
outs
lahf
sub
xor
jne
or
pop
mov
add
sub
cmp
add
test
idiv
add
push
mov
call
sub
bound
xlat
out
xor
xlat
cmp
js
xchg
fidiv
out
fisttp
mov
ja
fs
lea
cmp
push
pop
jge
jnp
dec
pop
push
outs
shl
cmc
int3
loopne
and
sub
int
push
cmps
sti
outs
inc
pop
pop
fist
jbe
mov
mov
cld
pop
(bad)
dec
retf
outs
mov
rol
and
cmp
pop
rcr
xor
lea
shl
lea
adc
xchg
in
inc
inc
call
adc
out
pop
inc
ins
pop
pusha
rol
mov
aaa
cs
imul
repz
mov
add
adc
sti
or
mov
xor
mov
mov
xor
lock
popf
xchg
adc
push
(bad)
mov
les
cli
call
push
fadd
cld
enter
lods
mov
adc
jecxz
loopne
pop
lea
fs
sbb
sub
scas
jo
lea
dec
add
icebp
adc
cmp
push
ret
es
int3
or
fiadd
push
xor
jne
test
out
jmp
aam
add
pop
mov
xor
add
or
adc
aam
out
xor
js
daa
inc
jecxz
(bad)
sub
xor
sbb
in
inc
pop
das
dec
cmp
jbe
pop
adc
call
and
push
fs
xchg
adc
test
nop
hlt
xor
push
pop
push
int
add
pop
jle
inc
ret
enter
(bad)
es
inc
inc
scas
mov
and
jg
cld
and
outs
scas
add
inc
adc
mov
clc
mov
adc
pop
mov
ror
sub
xchg
inc
sar
add
xchg
sbb
mov
jo
fwait
lahf
sar
jmp
inc
inc
adc
push
inc
dec
cmp
in
lahf
gs
movs
mov
scas
shl
mov
push
pop
lea
loope
inc
add
or
xchg
shl
xor
sbb
mov
movs
fist
xchg
sub
jae
daa
movs
add
(bad)
xchg
push
sub
inc
mov
iret
dec
mov
ins
test
and
mov
jge
jo
adc
adc
(bad)
xor
test
repz
jns
mov
dec
push
mov
sub
out
dec
dec
push
inc
inc
rcl
pop
lock
mov
inc
(bad)
cmps
pop
cwde
mov
mov
(bad)
mov
sub
cmps
pop
xor
rcr
stos
div
ret
hlt
or
bound
shl
adc
sbb
lods
sti
stc
jo
sub
adc
sbb
int
inc
jecxz
and
pop
adc
outs
(bad)
mov
aas
ss
sub
in
adc
and
dec
aam
jne
rcr
mov
and
dec
dec
aas
sbb
rol
stc
mov
test
mov
pushf
xor
inc
(bad)
inc
lahf
push
cmp
jp
dec
jb
add
push
les
and
fs
daa
ss
push
bound
ds
jno
xchg
not
int3
ds
xchg
call
cmp
pop
cdq
cld
lods
add
mov
and
(bad)
icebp
test
or
mov
mov
int3
pop
pop
add
fld
dec
cmps
ss
inc
stc
inc
mov
sub
gs
inc
xor
test
cdq
ret
adc
das
arpl
rol
popf
mov
sub
inc
push
mov
int3
mov
dec
mov
xchg
dec
pop
push
fsubr
add
sbb
xchg
sub
push
dec
inc
jne
and
sub
mov
push
mov
push
cli
or
cmp
leave
js
or
pop
loopne
cmp
jno
adc
jae
push
jae
xchg
push
inc
or
dec
loopne
add
std
xor
xor
add
fistp
push
and
std
(bad)
sbb
test
ins
adc
lock
xor
outs
js
fs
adc
ds
in
js
fisttp
jno
popf
call
pop
xor
xchg
pop
inc
push
cmps
xchg
push
sub
lea
jnp
or
xor
ss
loope
cmp
retf
dec
sub
enter
or
ja
outs
push
adc
jecxz
inc
(bad)
sbb
imul
in
lahf
sub
test
and
and
dec
pop
jno
shl
ja
xchg
add
add
mov
das
cmc
and
sbb
mov
pop
push
and
ins
inc
jle
call
retf
jp
jbe
rcl
repnz
icebp
or
imul
(bad)
cmp
adc
cmp
add
test
es
xor
mov
xlat
arpl
pusha
enter
sub
dec
ds
(bad)
jnp
les
aaa
in
movs
cmp
jno
retf
rcl
pop
idiv
mov
inc
push
cli
in
repz
or
mov
push
inc
push
or
push
sub
push
mov
cmp
js
scas
stos
add
inc
das
inc
lods
pusha
mov
cmc
shl
or
mov
dec
mov
pop
pop
push
ins
push
xor
or
adc
hlt
pop
push
sbb
inc
jmp
and
mov
in
movs
cmps
xchg
and
les
out
jmp
or
or
lea
adc
add
test
and
retf
xor
push
aad
and
push
mov
sbb
cld
cld
mov
xchg
popa
fidivr
imul
adc
sti
test
jne
xchg
add
cdq
jmp
lock
lock
bound
ins
jno
lahf
jnp
ds
xchg
add
cmps
dec
pop
add
pusha
sahf
out
in
adc
jo
add
mov
lea
int
push
int3
dec
mov
xor
inc
retf
inc
mov
ins
dec
mov
aaa
cmc
pop
leave
sbb
mov
or
addr16
mov
jo
test
rcr
hlt
pop
inc
sub
mov
push
push
adc
xchg
or
push
pop
aad
clc
outs
and
sub
aad
movs
mov
outs
enter
jae
jae
movs
pop
retf
fisttp
add
pop
pop
jle
stc
add
clc
mov
xor
cmp
(bad)
stos
xor
pop
stos
push
or
mov
pop
call
push
xchg
mov
mov
and
xchg
pop
ins
xchg
jbe
push
mov
outs
clc
and
enter
inc
cwde
arpl
add
jno
out
ins
pop
xlat
nop
test
adc
or
icebp
loopne
in
fs
mov
scas
fadd
push
(bad)
loope
push
fnstenv
adc
pop
xchg
jl
push
test
movs
add
repnz
in
pop
jno
xlat
rcr
pop
rol
mov
cmp
adc
xor
pop
cmc
scas
repz
aaa
iret
push
mov
add
lea
loope
mov
cs
xchg
aam
cs
int3
lea
inc
dec
rcr
mov
mov
sahf
xchg
clc
xchg
pop
mov
ds
mov
popa
call
pop
push
dec
mov
sbb
sub
xchg
mov
pop
sbb
cmp
cmp
or
out
retf
stos
int
mov
cmp
and
nop
or
repz
out
cmp
imul
das
pop
push
jo
ja
xor
mov
test
mov
int3
xlat
mov
mov
sub
(bad)
ficom
xor
fcmove
(bad)
mov
out
pop
mov
dec
push
in
cli
sar
pop
popf
push
in
in
mov
std
out
cdq
push
cmp
test
sbb
jne
jne
pop
add
in
out
dec
xchg
push
out
mov
mov
adc
xchg
in
fcom
clc
cs
sub
and
pop
dec
sub
jbe
xlat
and
adc
jns
jge
mov
jg
outs
xor
leave
daa
sar
ds
cmps
loope
enter
mov
pop
jmp
lds
or
cmps
loop
xor
or
adc
(bad)
xor
das
push
inc
xor
aad
in
pusha
mov
jl
lods
pop
ret
pop
lea
scas
add
cmps
stos
adc
sub
nop
and
fnstsw
popf
mov
shr
popf
xchg
mov
iret
pop
cmp
out
pop
xchg
(bad)
jecxz
mov
ds
add
cld
fist
loope
mov
in
inc
jmp
pop
call
pop
pop
push
mov
stos
cmp
push
cmp
dec
or
ins
push
adc
dec
daa
outs
inc
pop
test
sar
lods
xchg
cdq
push
or
into
outs
lods
mov
add
adc
and
aam
push
push
arpl
dec
ret
jg
outs
or
add
push
ret
cwde
pop
test
inc
push
mov
and
loopne
adc
xchg
pop
sub
and
ins
cmp
popf
movs
xor
cli
jp
outs
retf
test
iret
sub
cmp
stos
push
or
popa
mov
jb
(bad)
sti
mov
add
xchg
movs
dec
jecxz
scas
sub
test
xchg
lea
pop
sub
fild
pop
scas
sti
dec
imul
aam
(bad)
ss
popf
pop
or
cmp
adc
test
shl
js
bnd
pop
fimul
imul
ins
dec
ror
adc
mov
rol
push
mov
out
xor
sbb
pop
movs
jae
scas
inc
aas
int
mov
loop
jnp
shr
retf
ds
mov
sub
lock
push
xchg
jecxz
in
in
cwde
pop
jo
mov
sbb
dec
in
sbb
add
(bad)
shl
fneni(8087
cdq
jp
jp
arpl
int
loope
mov
popa
lods
stos
mov
mov
gs
lock
in
cmp
dec
rcl
sub
sub
jge
push
dec
fnstcw
sub
es
fild
push
mov
mov
loop
xchg
or
push
lods
inc
(bad)
add
adc
xor
and
add
imul
cmp
pop
cmp
ret
fwait
movs
sar
fist
xchg
or
cmps
arpl
sub
and
mov
ret
(bad)
les
add
lock
aam
enter
mov
neg
and
push
inc
movs
and
sbb
cmp
outs
retf
imul
cmps
lods
dec
lock
jb
ret
push
push
std
cwde
push
repnz
cmps
fcom
test
shl
sbb
hlt
fwait
inc
in
sar
inc
pop
xor
dec
inc
call
xor
test
stos
mov
mov
push
xchg
push
cli
xor
shl
popf
hlt
xchg
popf
dec
cdq
jmp
or
mov
fistp
cld
pop
push
ss
dec
stos
loop
xchg
mov
nop
out
sub
lods
sub
(bad)
pop
dec
mov
loope
dec
inc
fwait
mov
ret
sbb
push
mov
mov
daa
mov
pop
repz
call
mov
retf
pop
inc
xchg
mov
inc
shr
popf
push
addr16
cmp
repz
jmp
(bad)
sbb
xchg
cmp
in
fisubr
call
cwde
(bad)
cmps
imul
jp
pop
call
(bad)
add
test
(bad)
fistp
jnp
adc
inc
sbb
leave
pop
clc
fbstp
sub
pop
mov
push
je
cli
adc
sub
or
pusha
mov
enter
cmps
sub
pusha
shr
xchg
jns
out
jmp
cmp
lea
xchg
div
pop
adc
dec
cmp
xor
in
into
(bad)
mov
sub
test
adc
xchg
xor
(bad)
jb
ins
cmp
js
loope
std
popa
pop
xlat
dec
ret
data16
inc
je
xor
lds
inc
(bad)
ret
adc
adc
je
mov
mov
jnp
(bad)
jnp
mov
std
mov
pop
outs
xchg
mov
jecxz
repz
or
imul
inc
daa
cs
movs
inc
jle
stos
aas
lods
or
mov
mov
dec
mov
cmp
push
pop
nop
pop
pop
pushf
or
loopne
jmp
ins
and
xor
adc
ja
add
ror
and
xchg
std
mov
inc
dec
test
imul
rcl
ins
jle
jo
sub
jo
jmp
iret
out
pushf
jbe
or
xchg
aad
sub
xchg
jmp
cmp
add
outs
mov
dec
ret
pushf
imul
jnp
cmp
lods
xor
arpl
mov
(bad)
sbb
nop
sbb
fsub
test
mov
mov
push
pop
in
mov
pop
call
sub
cdq
lock
pop
xchg
and
sar
das
mov
pusha
shl
sub
cmp
sbb
mov
js
movs
sub
outs
xchg
das
bound
repz
pop
push
in
push
mov
cli
das
jne
sti
dec
cdq
sub
sbb
and
cmps
rcr
dec
fistp
xor
pop
cld
or
sbb
lds
xchg
inc
and
out
outs
adc
xor
fst
(bad)
aas
std
lock
dec
dec
aam
ja
cmp
icebp
(bad)
dec
gs
scas
sub
clc
push
xor
lods
outs
add
popa
hlt
js
jecxz
fld
fisubr
push
cmp
jns
jg
call
dec
mov
outs
movs
or
sub
push
popf
out
push
ins
add
js
enter
aaa
xchg
retf
popf
add
xchg
out
rep
jbe
inc
js
neg
inc
adc
icebp
pop
xchg
ret
jno
mov
and
movs
xor
inc
repnz
clc
repnz
ss
mov
pop
lods
and
repz
lea
jne
stc
and
dec
mov
fwait
imul
dec
ins
cmp
iret
jp
or
ja
sbb
loopne
jle
jns
fisttp
(bad)
xchg
cmps
retf
dec
les
or
cs
sbb
cmp
(bad)
call
(bad)
dec
jge
mov
or
js
in
sub
add
mov
lds
daa
les
xor
mov
mov
(bad)
cmp
or
and
scas
or
add
ss
or
or
(bad)
or
fwait
jb
mov
inc
aas
cdq
in
adc
inc
or
in
les
fwait
test
mov
xor
cs
jns
jno
call
and
jecxz
out
and
imul
and
mov
adc
jb
(bad)
add
ds
loop
mov
out
sub
mul
aas
mov
jmp
cmc
dec
cmp
loopne
cmps
pop
xchg
push
sbb
sbb
push
repz
adc
pop
mov
jbe
xchg
or
jno
push
movs
(bad)
and
inc
or
push
inc
repz
mov
mov
cmp
push
push
fnsave
daa
pop
push
pop
fdivp
jge
out
sbb
scas
clc
mov
xchg
and
call
daa
out
mov
dec
cmp
mov
inc
mov
addr16
pop
jmp
adc
dec
cld
pop
push
mov
sub
sub
xchg
pop
jo
lods
dec
push
mov
inc
dec
mov
repnz
(bad)
jns
sub
cmp
pusha
ja
or
sub
pop
push
mov
fwait
(bad)
rol
pop
adc
cmps
pop
add
dec
xor
fsub
into
cli
in
loop
int
imul
ficomp
mov
adc
in
add
lods
arpl
shl
xchg
xchg
loope
inc
fwait
or
call
sub
pop
retf
cmps
mov
fwait
popa
popa
mov
mov
sbb
jle
pop
(bad)
cdq
mov
je
lds
lss
jae
jle
test
mov
jmp
mov
data16
fisttp
(bad)
mov
jge
movs
popf
repnz
(bad)
push
pop
mov
mov
inc
sahf
mov
dec
add
test
int3
dec
cmc
push
leave
aam
cmps
retf
xchg
dec
gs
shl
adc
xchg
jbe
nop
nop
sbb
loope
xlat
sbb
aas
lods
out
aad
je
fs
and
fnstenv
test
xchg
dec
or
inc
mov
jae
sub
loope
cmp
popf
xchg
sti
mov
rcl
int3
push
icebp
into
repnz
mov
cmp
out
(bad)
outs
call
mov
lods
xchg
pop
dec
gs
jmp
outs
sbb
mov
icebp
imul
or
int3
lock
(bad)
or
daa
outs
dec
pop
dec
or
jo
ficomp
jbe
sub
in
sub
mov
(bad)
ret
inc
push
in
inc
cld
rcl
mov
into
cmp
sub
dec
test
mov
sub
jmp
pop
push
jne
sub
outs
or
jns
or
mov
loop
jecxz
jecxz
pop
xchg
jne
xor
mov
hlt
mov
div
sub
sti
int
add
xchg
loopne
cmp
cmc
(bad)
in
mov
setno
dec
and
sub
lock
jmp
lahf
mov
xor
sbb
mov
loopne
add
imul
cld
sti
inc
xchg
mov
pop
mul
lahf
fcom
sbb
neg
or
mov
mul
sbb
push
ret
and
jno
push
retf
adc
sbb
pusha
(bad)
out
push
dec
mov
repz
fidivr
mov
pop
jbe
dec
cdq
into
push
adc
test
lds
cmps
or
mov
shr
mov
fisubr
sbb
ret
dec
in
push
pop
pop
sbb
sub
mov
lahf
jg
(bad)
js
int3
cmc
mov
xchg
dec
inc
sbb
out
inc
push
inc
xchg
test
shl
movs
push
in
ins
and
dec
lock
loope
lods
push
pop
sbb
ja
push
sbb
xchg
pop
push
js
jnp
inc
sbb
push
loop
pop
pop
pop
fnstcw
dec
out
(bad)
add
in
dec
test
mov
aas
sti
fsubr
jp
xchg
inc
mov
push
fimul
push
dec
popf
add
leave
pusha
cs
daa
xor
dec
repnz
ss
icebp
pop
xchg
ror
or
pop
mov
or
cmp
and
mov
push
repz
loope
sahf
loopne
div
sub
adc
data16
cmc
xor
push
adc
xlat
das
jno
xchg
(bad)
rcr
mov
sbb
rcr
jne
call
sub
mov
lahf
dec
adc
jp
sbb
sahf
pop
xlat
dec
jmp
outs
mov
cld
dec
call
sbb
jle
setns
retf
jmp
lods
ficomp
xchg
xchg
test
pop
lds
dec
cmp
pop
cmp
or
sar
(bad)
outs
(bad)
push
dec
pop
rol
clc
enter
sub
sub
ds
sbb
shl
aaa
xor
fst
pop
call
fdivr
sbb
mov
jns
sub
mov
or
into
mov
adc
test
or
dec
and
xor
or
adc
add
pop
cs
adc
xor
shl
cdq
inc
pop
adc
sbb
xchg
sbb
and
nop
test
or
enter
aad
mov
into
call
sbb
mov
stos
jne
adc
xchg
jbe
sbb
mov
fimul
ror
sar
pop
mov
bound
addr16
cli
loopne
mov
xchg
jg
xor
out
pop
mov
add
or
nop
dec
push
xlat
mov
adc
xchg
enter
test
mov
dec
aam
jle
and
xor
jmp
push
adc
in
fadd
xor
xchg
inc
mov
mov
or
shl
addr16
xchg
scas
push
inc
cmc
mov
jle
push
push
fdiv
xchg
adc
xchg
rcl
inc
popa
cld
inc
scas
sub
sbb
loop
(bad)
or
retf
adc
sbb
sahf
loope
movs
pop
cmp
jne
leave
jl
sbb
loopne
out
sub
mov
cdq
retf
mov
mov
(bad)
lock
jb
daa
dec
sbb
mov
xor
fstp
or
int
in
or
sbb
xor
or
jns
fsub
mov
push
loope
out
add
jnp
sbb
call
jg
mov
adc
dec
adc
outs
cdq
or
test
or
sti
fyl2xp1
dec
jb
inc
mov
adc
xchg
xor
inc
dec
bound
xor
xchg
in
mov
iret
pop
les
retf
rol
xchg
xchg
pop
add
xchg
adc
xor
cmc
mov
lods
inc
push
test
pusha
movs
dec
xor
jbe
push
movs
jl
rol
and
xchg
xchg
or
enter
pusha
mul
loop
scas
div
xchg
dec
add
xchg
pop
sub
fisubr
pop
int3
or
retf
into
push
shr
and
pop
movs
fimul
jecxz
fs
xchg
sub
sub
add
out
int3
adc
pop
dec
mov
test
mov
retf
sub
push
out
ret
jmp
out
push
sbb
add
pop
(bad)
push
sbb
push
inc
push
(bad)
cmps
push
push
out
pmulhw
iret
aad
pop
in
jbe
outs
cmps
mov
icebp
mov
retf
dec
cli
call
push
jmp
mov
and
ja
jg
stos
cmp
add
shl
push
jmp
out
mov
into
push
pop
cmp
out
sub
retf
mov
xor
test
sub
loope
jae
repz
das
ja
retf
xchg
cwde
ret
add
iret
(bad)
push
xor
sbb
shl
into
repz
adc
fadd
dec
inc
adc
xchg
and
cmp
cmp
stos
imul
mov
or
mov
xchg
or
or
fsubr
neg
repz
cmc
loop
add
mov
outs
add
push
fiadd
popa
mov
sbb
sti
jge
popa
in
dec
cdq
and
sbb
lds
neg
cmp
aaa
mov
sahf
rcr
pushf
pop
std
fidivr
(bad)
daa
lock
push
imul
dec
xor
jbe
stos
dec
inc
imul
push
dec
dec
ss
outs
cwde
cmp
pop
mov
adc
jle
icebp
(bad)
mov
cmp
es
adc
and
xor
hlt
shl
pop
retf
pop
cs
rcr
pushf
add
stos
cwde
sti
(bad)
(bad)
(bad)
jmp
mov
mov
fwait
adc
xor
cdq
outs
cld
call
jb
add
add
adc
dec
cmp
gs
add
test
jg
add
add
sub
(bad)
or
and
into
pushf
out
mov
mul
rol
and
gs
and
inc
sbb
push
pop
out
imul
je
(bad)
ss
lds
xlat
imul
mov
mov
test
es
push
mov
loopne
loope
into
xor
add
das
stc
add
aad
xor
mov
inc
jecxz
jmp
xor
dec
pop
adc
mov
ss
ret
jge
mov
stos
jno
je
push
jmp
push
pop
push
int
inc
and
mov
ss
dec
pop
dec
out
jmp
cwde
fst
xchg
mov
xchg
mov
imul
ja
mov
aad
and
mov
cmp
xchg
cmp
ror
fucomp
sbb
gs
sub
idiv
sahf
mov
sub
ins
rcl
out
stos
dec
in
ins
or
pop
pop
sbb
jae
xchg
pop
sub
lods
sbb
jge
sub
fwait
rol
addr16
push
ja
mov
ds
mov
dec
sub
jb
stc
push
scas
mov
and
pop
and
pop
jmp
fisttp
cwde
int3
fsub
xor
sar
mov
or
(bad)
popf
sub
adc
mov
ret
dec
loopne
xchg
mov
mov
cmp
addr16
clc
jno
xlat
cdq
ss
inc
lods
sbb
(bad)
fimul
movs
in
dec
in
and
mov
add
dec
or
push
add
sbb
sar
stos
add
add
dec
clc
push
sti
pop
in
and
popa
and
mov
mov
repz
es
and
scas
mov
jecxz
pop
pushf
sub
lea
repz
pop
aam
or
(bad)
xor
ss
das
push
add
pop
in
mov
mov
fld
sub
pusha
out
imul
ret
adc
dec
iret
in
bound
data16
aaa
mov
(bad)
std
push
and
mov
ret
daa
adc
cmc
sub
data16
add
adc
aas
fistp
jo
call
jle
loopne
and
jb
and
or
push
xchg
addr16
(bad)
outs
fidivr
mov
stc
out
mov
int
lods
xchg
in
into
xchg
push
jl
xchg
jbe
sbb
jecxz
movs
adc
rcl
mov
popf
mov
push
pop
or
adc
push
mov
and
loopne
popa
fisttp
arpl
push
and
jg
mov
adc
out
sub
and
mov
cmp
sub
fsub
loopne
mov
pop
rcl
int
jg
push
jle
xchg
add
sbb
jl
loope
or
sbb
push
and
aam
mov
lods
dec
dec
add
pop
ror
ret
fldenv
fdivr
cmps
pusha
jbe
xchg
push
cli
ins
sbb
ret
or
push
sar
sbb
pop
mov
lods
xor
jnp
fnstsw
mov
in
adc
add
pop
push
mov
push
push
and
mov
lds
mov
iret
mov
pop
or
out
ss
test
mov
mov
dec
jb
and
xchg
daa
push
mov
sub
push
dec
cmp
daa
ret
cmps
movs
add
xor
cwde
imul
lods
adc
add
daa
fcmovbe
jne
call
or
jg
rcl
adc
xor
lock
iret
call
mov
push
push
xor
mov
int
call
xchg
js
repz
jle
xchg
shl
jg
pop
aam
push
push
cmp
xchg
jge
jnp
fistp
pop
jp
mov
dec
xor
or
ins
aas
jno
sbb
test
sbb
or
fdiv
cmp
or
push
mov
dec
sub
mov
jle
sar
cmp
sbb
fcomp
jl
push
aam
push
mov
ret
lods
jle
dec
stos
cdq
adc
lahf
dec
mov
fs
out
sahf
pop
xchg
mov
sbb
(bad)
mov
jecxz
test
sti
(bad)
push
sbb
bound
jmp
push
cmp
mov
fmul
mov
pop
loopne
not
outs
out
cmc
and
(bad)
and
mov
mov
mov
xchg
cmp
dec
xchg
fsubr
test
pushf
je
inc
and
xor
addr16
movs
xchg
push
test
pop
xchg
push
cmp
xlat
mov
or
sbb
cld
lock
and
popf
in
cmp
xchg
xor
sub
gs
dec
xchg
dec
push
(bad)
jmp
adc
in
xor
fld
(bad)
cmp
xor
push
nop
fisttp
rdpmc
sbb
not
sub
cli
xchg
test
pop
inc
ins
pop
daa
inc
les
push
(bad)
or
adc
in
mov
or
xor
ficom
mov
lods
movs
pop
jg
dec
push
and
loope
ss
cdq
pop
lds
scas
iret
jp
ror
dec
daa
pop
js
stos
scas
sbb
cwde
add
mov
(bad)
mov
cmp
dec
mov
test
mov
movs
dec
arpl
int
add
pop
pop
rol
push
mov
ds
pop
out
sub
or
or
adc
aad
push
icebp
enter
imul
frstor
push
jbe
mov
push
add
sub
mov
or
sub
daa
out
jg
imul
jae
cmc
data16
sbb
jecxz
adc
and
shl
fwait
sti
test
xchg
mov
jns
sub
sbb
cmp
mov
mov
into
xor
dec
xlat
ss
mov
mov
ds
nop
adc
in
inc
pusha
cwde
push
pop
call
adc
in
jmp
leave
pop
pop
stc
fidivr
test
repnz
sbb
(bad)
(bad)
pop
sub
xor
fwait
inc
out
sub
outs
xchg
jmp
xchg
mov
adc
mov
iret
cmp
mov
or
js
retf
or
cmps
jo
pushf
jp
out
cdq
sahf
fisubr
cmps
xchg
sub
int
sbb
and
ja
(bad)
adc
add
mov
fisttp
inc
jno
mov
xor
xlat
jae
push
xor
push
sbb
adc
adc
push
(bad)
ja
or
arpl
add
jbe
push
xchg
imul
push
mov
mov
push
addr16
sub
mov
pop
cmp
inc
ret
call
jl
ds
pop
or
shl
bound
push
shl
xor
lods
fwait
add
sbb
xor
xchg
xchg
mov
xor
lahf
out
je
inc
push
jg
bswap
push
mov
arpl
outs
sub
ds
adc
dec
adc
and
xlat
adc
push
sbb
mov
mov
(bad)
inc
data16
cmps
fwait
neg
pop
dec
mov
repz
fnstcw
inc
dec
cdq
mov
icebp
or
out
mov
dec
sub
mov
add
retf
cwde
sub
inc
shr
and
add
(bad)
mov
jp
cs
imul
sbb
xor
sub
shr
inc
cmp
fidiv
popf
test
add
lea
mov
int
inc
inc
cmp
test
inc
shl
cmps
pop
push
mov
fdivr
stos
mov
ds
jnp
jns
mov
fidiv
enter
ror
and
mov
out
jbe
mov
xor
jb
pop
mov
mov
cwde
jp
retf
js
lock
mov
ins
jle
push
jb
and
je
pusha
fucom
mov
mov
repnz
outs
mov
cmps
das
dec
es
mov
fbld
fwait
sar
push
pop
dec
fldz
push
mov
es
or
add
std
cld
or
sahf
nop
dec
call
jae
sub
rcr
inc
push
in
push
ret
cmc
jno
xchg
cli
mov
in
xchg
push
pop
adc
fstp
inc
inc
inc
push
icebp
dec
(bad)
cmp
xlat
or
adc
mov
rol
lahf
push
dec
pop
xor
sbb
loope
jb
adc
adc
adc
gs
int
ja
mov
leave
mov
adc
fist
dec
inc
adc
inc
add
or
cwde
mov
cmps
into
mov
cmp
(bad)
repnz
xchg
imul
mul
iretw
outs
arpl
dec
mov
(bad)
adc
push
ror
pushaw
jmp
sbb
push
inc
sahf
(bad)
ds
(bad)
call
mov
jnp
or
(bad)
mov
stos
dec
add
sub
adc
jo
sbb
push
mov
fdivr
ja
in
jnp
jnp
jbe
sub
lods
push
xchg
add
adc
or
dec
or
call
mov
fs
(bad)
push
js
scas
add
pop
sbb
and
fwait
cmp
retf
push
cmp
(bad)
sub
(bad)
movs
add
mov
inc
in
dec
or
mov
adc
sti
aad
aad
jae
rcr
and
dec
into
sub
dec
lods
cmp
inc
and
mov
pop
sub
push
ret
mov
std
pushf
add
fisub
inc
xchg
push
adc
shr
ror
jno
cmp
sahf
mov
cmp
or
ret
xchg
out
cmc
les
call
inc
cmp
in
cmp
dec
add
shl
mov
repnz
cs
ja
das
ds
mov
lds
mov
or
fxch
xchg
fidivr
test
out
add
(bad)
dec
imul
shl
fs
sub
iret
movs
nop
push
(bad)
retf
sbb
outs
test
loop
sub
cwde
imul
cwde
pusha
jo
in
leave
icebp
shr
lods
mov
popa
es
adc
cmp
mov
adc
sbb
dec
push
ins
mul
fdiv
cmps
out
dec
(bad)
jg
mov
dec
aad
and
test
jae
aad
es
or
cmp
mov
sub
xor
inc
call
cmp
cmc
cmps
xchg
and
xchg
jo
cmp
push
xchg
mov
add
in
cdq
(bad)
sbb
loop
sbb
xchg
dec
cmps
adc
(bad)
sbb
loope
es
push
jb
inc
sub
adc
repz
iret
outs
push
sti
ins
sbb
jb
shl
xchg
cmp
xor
fcom
popf
aas
fist
mov
pusha
inc
adc
dec
cmp
mov
jno
jae
and
inc
gs
mov
xor
sbb
xor
cli
ret
xor
cmp
pop
and
adc
daa
mov
pop
mov
out
test
rcr
ror
mov
sub
std
push
jae
iret
mov
and
out
ss
or
add
bound
ret
pop
dec
lea
cmc
clc
mov
and
cmc
imul
in
iret
xchg
(bad)
test
fisttp
out
xchg
or
pop
loope
out
mov
(bad)
das
scas
jno
push
retf
es
pop
lahf
push
push
mov
mov
xor
dec
mov
jl
mov
popf
das
sbb
push
mov
cmp
push
test
movs
iret
inc
add
lea
loope
mov
cs
addr16
mov
loop
js
out
push
jmp
lods
mov
lods
mov
outs
push
outs
enter
mov
add
fmul
add
test
adc
(bad)
jg
int3
pop
mov
pop
test
nop
call
mov
mov
cmps
pop
cwde
ret
(bad)
push
jge
or
adc
loope
xor
xchg
cdq
fs
aad
or
in
aad
ja
push
inc
rcl
and
and
xlat
call
push
fbstp
jl
xchg
daa
stos
sbb
es
sbb
cmc
or
mov
aam
fisub
daa
inc
jae
mov
hlt
jne
xor
push
call
rol
sahf
inc
mov
xor
pusha
dec
adc
push
iret
add
add
jl
cmp
nop
adc
mov
and
or
mov
mov
pop
xchg
dec
cwde
or
cmp
add
pop
gs
in
sub
into
cld
mov
pop
jo
aam
and
fs
popa
cmps
jle
ret
pop
jge
jb
mov
dec
mov
adc
in
mov
popa
cmp
outs
popf
jmp
xchg
lods
aam
add
add
sbb
pop
sbb
push
sub
push
movs
retf
jno
(bad)
xor
jmp
inc
inc
mov
in
sub
push
lock
push
cmp
das
jnp
pop
dec
jmp
mov
xchg
gs
sub
adc
sti
dec
sub
push
mov
cmp
movs
and
movs
sub
mov
ins
not
sbb
cmp
bnd
adc
arpl
je
ss
aam
cmp
idiv
popa
mov
ss
pop
xor
adc
dec
les
psadbw
(bad)
rcr
mov
inc
pop
test
data16
sub
out
sbb
xchg
lahf
dec
scas
imul
repz
adc
mov
jbe
int
js
sbb
or
push
xchg
pop
into
jl
out
punpcklwd
fisub
mov
popf
sti
mov
daa
in
xlat
imul
jne
fidiv
dec
inc
mov
aad
js
scas
xor
dec
sbb
out
pop
sub
mov
add
mov
adc
in
nop
(bad)
mov
jecxz
lock
or
pop
ins
call
lock
adc
push
retf
cwde
lea
dec
jo
cmp
cld
dec
push
cmps
xlat
jmp
inc
scas
sub
fs
inc
or
ret
push
inc
clc
scas
push
popf
arpl
push
mov
cmp
xchg
and
xor
jge
imul
sbb
xor
int
mov
mov
mov
outs
out
and
push
jmp
xor
ss
call
xor
and
xor
inc
mov
fwait
daa
pop
pop
adc
dec
xchg
sbb
lods
mov
jns
jo
mov
test
dec
xlat
and
or
(bad)
aam
or
shr
and
sahf
gs
adc
mov
and
xchg
shl
outs
dec
push
test
nop
data16
scas
js
outs
sbb
dec
or
adc
data16
loope
into
xor
lock
jmp
jae
pop
adc
sti
jno
repnz
mov
dec
cmps
stc
mov
xor
into
aad
test
jp
aam
jmp
lods
adc
inc
push
pop
jbe
add
bts
enter
test
stc
repz
sar
int3
sar
xlat
inc
dec
mov
jle
(bad)
fsubr
and
shrd
pop
inc
out
imul
inc
sub
and
repnz
or
sbb
inc
imul
aam
inc
sahf
lock
fdiv
add
mov
ins
aad
jmp
push
add
repz
pop
out
pop
not
movs
(bad)
outs
mov
adc
clc
and
sar
(bad)
ja
pop
mov
icebp
mov
adc
jle
mov
pop
sub
std
jp
sbb
jnp
mov
in
dec
cmp
mov
mov
addr16
cmp
dec
xchg
shl
movs
aas
fs
inc
mov
ins
jge
or
adc
ds
ja
push
inc
call
jge
xchg
or
cmp
ror
pop
out
in
hlt
adc
mov
lds
ds
mov
inc
dec
cmp
add
stos
in
std
and
add
dec
jbe
push
and
sti
lods
jnp
lahf
mov
mul
jl
xor
out
(bad)
cmps
js
retf
call
inc
mov
lea
xlat
sbb
fild
fadd
data16
jge
adc
push
(bad)
mov
add
repz
xchg
lock
or
xchg
stc
(bad)
fldenv
mov
int3
adc
pushf
popf
jp
popf
(bad)
adc
sub
sub
sub
jmp
inc
jae
call
inc
mov
out
mov
pop
(bad)
mov
xchg
enter
jo
mov
les
sub
scas
imul
adc
add
jne
push
mov
sbb
cli
stos
adc
xchg
test
dec
fs
mov
push
mov
push
bound
push
call
stc
add
xor
(bad)
(bad)
jge
in
mov
cmp
ficomp
gs
pop
jb
add
cwde
call
mov
xor
gs
and
mov
ret
mov
mov
clc
and
in
popa
hlt
cs
adc
xor
xor
lock
mov
xchg
and
adc
jbe
hlt
adc
inc
es
aaa
test
aad
xbegin
ins
and
ficomp
jns
push
ds
adc
mov
adc
fstp
call
mov
cmps
imul
mov
and
mov
sbb
(bad)
in
stos
dec
mov
scas
nop
pop
mov
shl
aaa
or
cmp
fst
test
sub
ins
popa
or
popa
shr
and
adc
fsub
xchg
aam
mov
aaa
jno
sub
add
daa
fisub
popf
je
add
fdivr
mov
and
bound
sub
test
cmps
or
inc
fs
shr
ins
push
popf
xchg
shr
shl
test
or
stos
ret
add
fst
dec
sar
gs
adc
mov
mov
sub
imul
out
fnsave
(bad)
call
ret
pop
das
sldt
mov
fs
ret
in
sub
mov
xlat
adc
fwait
sar
out
rol
int3
inc
add
(bad)
jno
jbe
repnz
sbb
xchg
psadbw
clc
add
jmp
inc
dec
dec
scas
jecxz
or
and
or
invd
das
test
mov
aam
inc
xor
xor
inc
xlat
(bad)
in
pop
push
pop
xor
push
sti
xchg
xor
repnz
iret
les
aaa
das
not
cmps
popf
or
fmul
push
pop
fistp
cmp
mov
stos
icebp
popa
scas
pop
in
jnp
(bad)
jne
xchg
in
adc
push
lahf
pusha
sub
jle
jmp
bound
push
cmps
mov
in
add
or
div
mov
mov
mov
cwde
retf
jnp
ins
cli
popf
nop
mov
dec
cmp
and
sbb
xchg
add
mov
(bad)
and
adc
pop
mov
clc
pop
sbb
aaa
inc
cld
test
mov
push
ss
pushf
or
fistp
xchg
sbb
jecxz
addr16
daa
iret
add
sub
(bad)
and
jp
cld
inc
shl
xor
arpl
inc
sbb
ficom
adc
mov
jno
scas
push
into
lea
pop
adc
stc
sub
push
and
out
addr16
(bad)
mov
leave
xchg
push
cmc
pop
pinsrw
sbb
push
push
xor
jmp
leave
out
rol
fsubrp
xor
lods
push
leave
out
pop
arpl
xchg
test
out
aad
ss
dec
dec
push
add
scas
jle
xor
xchg
iret
int
jnp
mov
inc
cli
add
mov
mov
jbe
mov
pop
xor
mov
push
push
mov
js
adc
push
cmp
icebp
ss
pop
jnp
cmp
out
jle
ja
ins
lods
ins
add
cmps
xchg
test
call
jle
and
jle
mov
bound
test
mov
adc
out
mov
repnz
aaa
outs
sti
pop
xchg
cmp
shr
int
lahf
pop
mov
cmp
mov
and
(bad)
push
int
sti
hlt
(bad)
(bad)
out
push
lahf
pusha
(bad)
in
cmp
fadd
es
cmps
jnp
icebp
movs
repz
stos
outs
lds
std
jne
mov
jnp
jb
sub
inc
adc
push
jmp
int
int3
mov
xchg
ret
movs
popa
int
jmp
mov
call
cmp
ja
out
fs
cs
sub
faddp
push
and
push
out
mov
adc
outs
(bad)
lods
aaa
cdq
pop
test
mov
pop
mov
mov
retf
loopne
xchg
int
push
fmul
repnz
mov
outs
daa
pop
mov
popf
shl
nop
outs
jae
jnp
std
adc
add
clc
test
cmp
out
cmp
dec
mov
sub
fiadd
lahf
adc
test
mov
sbb
xchg
sbb
add
xor
jge
push
jb
popa
pop
ret
std
jb
in
sar
push
xor
sbb
(bad)
mov
movs
lock
xor
mov
mov
xchg
addr16
inc
adc
(bad)
cld
jecxz
cmps
inc
cli
pushf
mov
and
adc
jae
jecxz
mov
std
(bad)
jge
mov
mov
or
cmp
jb
movd
xlat
mov
xchg
xchg
(bad)
outs
adc
fdivp
lahf
and
cli
js
push
and
test
and
sbb
jecxz
movs
test
shl
aad
add
dec
push
outs
(bad)
enter
jno
lea
jo
mov
jp
cmp
ret
ds
xchg
mov
mov
xor
push
and
and
fadd
mov
jecxz
cmp
mov
pop
movs
pop
jecxz
(bad)
in
jecxz
pusha
lahf
lods
xchg
das
not
enter
test
xchg
(bad)
pop
pop
scas
mov
mov
rcr
add
cs
mov
ror
lock
adc
in
(bad)
rcr
dec
and
mov
xchg
lods
imul
inc
sub
sbb
push
push
and
mov
sub
push
dec
and
xchg
imul
mov
push
cld
stc
retf
aad
and
rcr
jl
loop
pop
in
test
mov
xor
and
jmp
jnp
mov
and
sahf
imul
mov
ss
test
shl
das
mov
push
inc
xchg
inc
enter
lods
mov
cmp
dec
ins
ja
jae
neg
data16
addr16
dec
data16
mov
jo
movs
dec
dec
sub
sahf
fs
jecxz
push
pop
xchg
push
sbb
jg
jo
cmp
jb
repnz
movs
cld
loopne
cmp
cli
xchg
xchg
inc
cdq
xor
ins
inc
ins
mov
out
mov
retf
jno
arpl
pcmpeqw
add
scas
repz
movs
cmps
xor
and
jge
push
pop
push
inc
popf
(bad)
ja
shr
or
out
sub
adc
xchg
xor
inc
ja
sbb
mov
lock
jg
cmp
push
xchg
repz
int3
cmp
xchg
retf
stos
loopne
aas
sub
pop
xchg
es
mov
adc
sahf
lea
sbb
jecxz
fld
sbb
pop
mov
cwde
inc
jg
(bad)
fsub
dec
in
cmc
pop
mov
and
mov
lock
into
cmp
push
mov
hlt
jecxz
jb
add
movs
push
jo
add
xchg
add
or
call
scas
lods
(bad)
out
push
(bad)
jle
enter
rsm
jl
xchg
xor
xchg
mov
pushf
sbb
fimul
xchg
mov
fnstenv
lods
xchg
inc
popa
(bad)
xor
popa
ror
dec
push
xchg
xor
daa
and
push
rcl
jmp
pop
ror
mov
loopne
inc
jl
dec
mov
pop
pop
sbb
out
dec
xor
out
jp
inc
(bad)
aaa
mov
test
lods
mov
xor
enter
mov
add
xchg
sub
mov
mov
test
popa
dec
dec
imul
sub
int3
pop
push
repz
mov
jb
out
push
mov
movq
lea
jmp
push
cmps
push
adc
cmp
mov
mov
(bad)
mov
fist
dec
mov
mov
jmp
es
out
(bad)
test
aam
or
xlat
adc
and
fs
jmp
xor
push
shl
xchg
stos
stos
outs
es
or
outs
jne
call
rol
popf
push
call
rol
div
loop
and
or
pusha
retf
pop
jbe
mov
sbb
inc
test
out
xlat
ins
pop
or
pop
jge
jg
mov
das
iret
sub
mov
and
and
jecxz
jl
aad
out
aas
fcomp
adc
mov
test
jne
mov
xchg
retf
rcl
sub
xchg
jg
cmp
sbb
dec
test
xchg
mov
(bad)
aad
xor
mov
out
aam
fcom
pusha
adc
jp
shr
cmp
cmps
stos
pop
fs
inc
cmp
scas
dec
jg
xchg
jg
pop
adc
adc
call
daa
icebp
jns
in
cwde
fwait
sbb
xchg
xlat
scas
jge
inc
mov
retf
mov
test
pop
dec
mov
pop
fmul
mov
mov
int
and
sbb
push
or
mov
lds
sbb
mov
(bad)
pushf
ror
retf
fmul
movs
or
cs
and
(bad)
or
jo
mov
mov
test
nop
adc
icebp
outs
cmp
inc
lahf
sub
fcmovu
jmp
dec
sbb
out
jmp
inc
pop
mov
lahf
or
sbb
sub
inc
aas
adc
movs
cs
scas
(bad)
cmp
pop
jp
xor
jl
das
mov
test
sub
repz
push
adc
sbb
mov
sbb
mov
xor
push
xchg
push
retf
das
fidiv
xchg
jbe
(bad)
pop
push
add
dec
dec
sti
adc
nop
movs
xchg
jmp
shl
lods
ja
inc
clc
push
add
arpl
xchg
out
(bad)
sub
or
into
cmp
sub
jb
xor
dec
dec
and
cmp
adc
repnz
aas
xchg
fcmovnbe
mov
jmp
pop
sbb
add
test
or
jmp
xor
inc
test
arpl
outs
add
mov
icebp
sbb
pop
cmp
jg
gs
icebp
mov
scas
inc
test
out
lods
int
xor
cmp
aam
xchg
adc
jp
inc
test
jmp
inc
int3
add
lahf
ja
mov
cmps
or
(bad)
inc
pop
int
xor
inc
ret
xor
push
imul
ss
out
daa
push
adc
int3
add
pop
rcl
mov
push
lods
cmp
cli
mov
sbb
adc
fst
cmp
inc
sahf
repz
scas
push
xchg
imul
(bad)
xchg
scas
add
sub
add
pusha
fld
loop
inc
push
mov
inc
fcmove
aad
jg
fwait
ds
call
inc
lea
sub
(bad)
lea
xor
cmps
rcl
sti
xor
push
jmp
adc
ret
fldenv
mov
sbb
(bad)
push
add
or
xchg
jecxz
mov
dec
stos
dec
sub
(bad)
xchg
dec
sti
cmp
out
sbb
xor
cwde
pusha
fldenv
stos
aam
mov
lahf
ds
xor
cli
in
aas
cmp
add
les
lea
lahf
mov
mov
sbb
xor
jnp
test
add
push
pop
(bad)
pop
in
dec
call
or
and
mov
push
retf
mov
add
int
ins
mov
ins
ret
out
inc
call
push
rol
outs
xchg
and
mov
test
mov
xlat
in
adc
mov
sbb
stos
js
in
inc
aaa
push
fcom
jne
dec
mov
das
cmp
mov
ja
arpl
ret
fwait
sbb
jnp
movs
sbb
mov
imul
(bad)
cmps
loope
mov
jp
loope
cmp
add
(bad)
int
sbb
mov
stos
mov
and
aam
gs
aam
xor
popf
(bad)
stos
pusha
jl
jmp
std
stos
bound
stos
ret
or
xor
cwde
fiadd
dec
dec
shl
fbstp
sbb
mov
xchg
ss
push
sub
pop
xchg
and
jns
call
imul
movs
sbb
outs
add
push
xchg
stos
(bad)
call
stc
mov
inc
push
jecxz
sbb
jbe
ficomp
loope
stos
pop
(bad)
push
and
in
adc
popf
movs
clc
or
jbe
and
and
aad
das
push
out
jmp
push
(bad)
ja
popa
call
add
pop
mov
push
inc
call
sub
xor
cwde
fstp
aam
movs
enter
bound
sti
sub
jmp
arpl
adc
mov
movs
call
xchg
mov
and
xor
iret
cli
push
inc
adc
mov
pushf
out
jne
loop
lock
add
pop
mov
(bad)
sub
xchg
mov
movs
mov
mov
pop
arpl
dec
popa
add
jae
jp
lea
or
or
mov
mov
add
xchg
pop
inc
imul
push
jae
fld
xor
(bad)
sub
sub
cmp
add
loopne
xchg
xor
sar
shl
push
hlt
xchg
daa
rcl
jnp
(bad)
into
mov
inc
data16
(bad)
sbb
(bad)
stos
mov
jo
stc
push
call
cs
cmp
aad
mov
mov
mov
mov
dec
push
retf
add
setge
mov
es
jle
and
(bad)
jno
stos
cmp
loopne
cmps
leave
loopne
jg
xchg
xchg
cmps
push
mov
std
xchg
ror
fadd
xchg
stos
sbb
push
retf
push
retf
mov
bound
inc
jo
(bad)
lock
sbb
mov
dec
movmskps
mov
mov
jo
add
ins
cmp
xchg
mov
mov
add
sbb
and
(bad)
jmp
pop
mov
jae
les
pop
dec
add
dec
sbb
cmp
out
fstp
cmc
fidivr
jae
(bad)
aam
jns
push
jne
push
jne
and
or
fisttp
loop
mov
and
sahf
adc
test
fnsave
add
dec
mov
nop
sub
jg
inc
sub
jb
xchg
sbb
cmps
ret
dec
and
sbb
push
adc
pop
daa
js
mul
push
jle
xchg
call
mov
test
jle
mov
sbb
jae
mov
or
mov
loopne
or
pop
shr
jbe
retf
lods
and
sar
push
xchg
mov
sbb
sub
repz
cli
imul
dec
lods
adc
fist
xor
jg
out
pop
push
fadd
pop
retf
push
inc
mov
jg
or
jne
cmp
cld
std
ret
out
add
sbb
aad
xchg
xchg
mov
cmp
fwait
xor
repnz
add
out
(bad)
fisttp
or
adc
and
cmp
add
mov
mov
retf
and
add
mov
add
adc
mov
les
mov
std
xchg
push
arpl
and
sbb
mov
aaa
leave
aad
fild
xor
popf
pop
aaa
out
mov
shl
jno
push
loop
jecxz
inc
xchg
xor
xchg
xchg
cmps
retf
fst
mov
loop
mov
adc
pop
or
sbb
ds
enter
cmps
stos
cmp
nop
sub
aam
sahf
sub
imul
cmp
push
mov
sahf
inc
sahf
or
or
xlat
(bad)
fcmovne
out
jbe
mov
or
(bad)
fcmovu
fisubr
shr
jmp
popf
cmp
ror
xor
adc
out
push
rol
sar
(bad)
xor
xlat
and
or
jecxz
jae
sbb
(bad)
dec
mov
adc
pop
dec
inc
test
cmps
in
add
ja
adc
std
adc
in
cli
movs
cmp
fistp
dec
daa
outs
xchg
and
adc
mov
cmps
movs
(bad)
jnp
inc
pop
and
and
push
vcvttps2dq
dec
in
out
adc
iret
push
xor
rol
pop
mov
mov
push
lods
loopne
sbb
hlt
loop
clc
into
xchg
mov
jb
mov
shl
data16
fisttp
cmovae
mov
sub
stc
fld
lds
xor
mov
retf
cmps
sti
popa
xchg
arpl
pusha
test
push
xchg
mov
gs
shl
cmp
jae
and
lds
enter
ja
dec
sub
fstp
out
mov
pop
test
loop
fdiv
iret
ret
cld
movs
test
jae
mov
ror
mov
imul
std
push
(bad)
and
and
and
xchg
and
dec
dec
mov
mov
mov
out
iret
pop
and
iret
aaa
pop
sbb
cmps
pushf
add
push
push
adc
jmp
mov
adc
inc
pusha
out
gs
jb
mov
sub
leave
cmp
fisttp
jo
xor
inc
(bad)
push
les
push
dec
mov
in
adc
je
mov
je
setl
or
(bad)
scas
outs
leave
enter
dec
adc
adc
mov
mov
mov
call
pop
aad
mov
jne
adc
pop
sbb
pop
into
add
lds
ficom
retf
push
(bad)
hlt
push
mov
cmp
sbb
rol
mov
inc
mov
push
sbb
xor
add
cmc
push
jecxz
pop
cmps
add
dec
mov
ins
mov
cmp
pusha
loop
cmps
mov
mov
sar
mov
js
mov
xchg
outs
ins
fxch
pop
and
dec
test
push
xor
mov
xchg
stos
pop
xchg
inc
or
jne
push
popa
scas
inc
sub
fwait
pop
data16
outs
and
retf
out
aaa
cwde
ja
call
aaa
cmps
push
mov
xchg
jl
sar
inc
jbe
inc
imul
fadd
jnp
mov
push
and
jle
mov
inc
out
cmp
pop
fcomp
jne
push
dec
add
sbb
out
fild
into
inc
mov
mov
xchg
push
pop
cdq
or
dec
and
inc
jb
adc
in
mov
lods
dec
push
cmps
jle
in
pop
outs
imul
aad
xchg
lahf
cmp
retf
rcr
push
jge
pushf
push
push
xor
ja
mov
mov
mov
jnp
push
pop
add
inc
mov
loopne
dec
pop
stc
test
sub
and
scas
pop
out
addr16
inc
adc
adc
repnz
xlat
ds
sbb
stos
dec
scas
in
cmp
out
stc
or
or
rcl
xchg
cmp
pop
xchg
or
mov
push
mov
(bad)
jb
loope
popa
xchg
test
stc
sbb
add
data16
cmp
sbb
retf
and
inc
xchg
sahf
out
shr
jo
xor
das
xchg
mov
push
or
pop
lods
in
ror
pop
cmp
jp
add
out
fnstcw
and
(bad)
cli
jp
sbb
mov
dec
or
or
xchg
cwde
jg
mov
push
dec
add
dec
nop
je
jae
push
std
or
in
ret
out
pop
dec
imul
imul
xor
out
sub
loope
aad
je
les
and
pop
cli
mov
into
push
aam
rcr
ins
xchg
sbb
cwde
pop
dec
cmps
adc
jle
mov
or
pop
cld
nop
loope
inc
movs
xor
jnp
test
int
jb
adc
mov
bound
sub
call
lods
cs
leave
shr
pop
enter
test
xor
(bad)
out
rcr
sar
push
cmp
push
inc
adc
nop
jo
mov
pop
mov
inc
cmp
mov
adc
cmc
nop
popf
enter
dec
js
adc
fdivr
push
sub
in
call
push
call
arpl
cmp
inc
sar
retf
cmp
ret
dec
xor
cmp
cld
jp
push
adc
mov
pop
gs
cmp
xchg
popa
and
xor
or
xor
jno
test
cmps
(bad)
fild
xor
out
outs
fidivr
cli
in
js
mov
lods
pushf
xchg
sbb
nop
hlt
jp
cs
jmp
rol
dec
mov
push
mov
mov
push
add
ja
sbb
cmp
jo
data16
push
mov
xor
mov
shl
cmp
repnz
push
ja
adc
pop
lods
jg
mov
inc
jecxz
aad
cmps
ins
test
ja
nop
pop
iret
cli
inc
inc
in
(bad)
add
mov
fisttp
adc
loop
int
add
retf
cli
cmc
addr16
sub
sub
mov
mul
adc
lock
jmp
neg
inc
addr16
adc
fsub
fisttp
sbb
icebp
xchg
xchg
stos
loopne
push
pop
mov
aaa
movs
popa
or
iret
xor
inc
dec
pop
dec
lds
lahf
push
stos
movs
xchg
cdq
and
mov
int
sbb
loope
stos
les
sub
sub
mov
dec
sub
mov
adc
stos
dec
push
mov
daa
cmps
sub
popf
mov
ficom
outs
jmp
call
out
lock
fisub
add
shr
pop
(bad)
push
pop
cmp
scas
test
je
(bad)
jmp
add
into
pop
stc
mov
adc
rol
inc
dec
jle
out
out
icebp
jle
dec
adc
fstp
add
out
das
data16
mov
hlt
pcmpeqb
mov
xchg
cdq
rcl
jne
out
clc
out
gs
hlt
scas
dec
out
xchg
sub
fs
jno
ins
(bad)
loop
icebp
add
test
jbe
sbb
lea
push
mov
inc
mov
outs
das
cdq
xchg
cmp
mov
or
ficomp
pop
push
dec
adc
inc
loope
mov
or
loope
test
ds
lock
push
lds
mov
sub
iret
inc
not
ror
and
push
inc
sub
ins
dec
xor
add
ins
clc
es
fisub
add
add
mov
shl
and
iret
mov
pop
push
ret
ja
jmp
int
push
adc
inc
xchg
fisttp
sahf
cli
add
retf
scas
in
push
fist
jbe
jl
cmps
(bad)
push
popf
cmp
jmp
das
int3
mov
mov
xor
mov
pop
push
inc
js
cs
lahf
icebp
mov
push
jns
jns
pop
dec
(bad)
fsubr
cwde
fisttp
xchg
popf
(bad)
fisub
ja
push
inc
and
or
daa
mov
imul
push
das
sub
or
movs
dec
pop
mov
mov
inc
repz
or
movs
push
add
sbb
je
push
cli
shl
xlat
lds
in
neg
lahf
jo
or
push
iret
adc
mov
stos
jo
cs
xchg
movs
lea
xchg
inc
inc
adc
icebp
mov
mov
xchg
inc
imul
mov
ds
not
mov
loope
repnz
mov
and
adc
imul
xor
pushf
fimul
cli
call
or
je
loop
and
mov
fucomp
mov
not
push
mov
cmps
clc
xchg
xchg
dec
ret
sbb
(bad)
push
idiv
sub
fldcw
push
pop
mov
div
bound
adc
mov
ss
enterw
jmp
adc
lock
lock
mov
cli
dec
fwait
mov
push
push
xchg
mov
inc
xor
or
pop
(bad)
pop
shr
mov
imul
leave
imul
dec
jne
sbb
aam
mov
jbe
mov
add
mov
xor
mov
arpl
xchg
and
enter
movs
inc
inc
xor
nop
movs
pop
fild
and
lock
pop
jg
in
push
aas
mov
dec
in
nop
sbb
xchg
ror
adc
mov
cmp
dec
int
mov
or
ret
or
in
cmc
jnp
jo
ret
fdivr
pushf
cs
sbb
sub
mov
push
loop
(bad)
pmuludq
loop
mov
xor
push
dec
scas
mov
jl
pop
out
popf
lock
loope
pusha
xlat
dec
pop
inc
mov
or
into
cld
mov
(bad)
jmp
or
aam
pusha
adc
xchg
ss
pop
dec
pop
sbb
out
call
cwde
sbb
jo
enter
jb
pop
jne
mov
xchg
inc
gs
cmp
fwait
mov
adc
sbb
or
loop
adc
push
jae
imul
lds
fsub
int
lock
cmp
or
mov
in
rcr
ja
xor
mov
sub
das
sub
sar
dec
pushf
jne
mov
leave
cld
pusha
pop
xor
loopne
pop
in
mov
inc
mul
push
mov
push
in
mov
ins
sbb
call
test
mov
popf
call
jb
sub
cli
and
ja
or
fst
enter
xchg
sbb
xor
jb
jne
or
add
mov
loop
add
clc
call
cmp
jge
bound
into
test
fiadd
in
dec
call
and
inc
ret
int3
xlat
sub
or
pop
leave
ret
dec
cmps
shl
loop
dec
in
into
inc
imul
iret
jae
adc
mov
sub
xchg
(bad)
push
cmp
fidivr
(bad)
xchg
pop
ja
dec
jmp
repnz
ffreep
mov
mov
xor
clc
xlat
cmovs
call
call
dec
xchg
sbb
jecxz
js
paddq
cmp
outs
sub
int3
and
mov
push
pop
daa
push
pop
test
aas
xchg
in
pop
push
ja
cmps
adc
fisub
ins
cmp
in
mov
cmp
(bad)
mov
movs
aaa
cmp
hlt
dec
cmc
leave
mov
scas
add
jmp
and
jb
inc
dec
iret
les
icebp
xchg
hlt
jo
dec
cdq
ja
jmp
scas
test
jmp
add
stos
jmp
push
push
push
jge
xchg
inc
xchg
mov
enter
mov
xlat
xchg
xchg
ss
inc
mov
xchg
push
(bad)
ds
mov
and
sub
xchg
or
test
cmps
pop
fstp
aam
mov
movs
jle
fwait
or
xor
(bad)
std
ins
mov
das
lahf
mov
push
jmp
cmps
mov
ss
sub
adc
mov
cmp
out
xchg
les
cmp
jl
push
repnz
push
cmps
add
add
retf
bswap
add
mov
xor
pop
pop
ds
repnz
retf
or
mov
adc
mov
jmp
mov
mov
add
je
(bad)
adc
aam
repnz
in
xchg
jns
ret
cmps
adc
xchg
mov
add
jns
mov
lahf
pop
paddsw
and
data16
xchg
gs
ret
je
add
enter
(bad)
outs
xor
or
js
shr
push
add
fdivrp
pop
mov
inc
mov
dec
push
push
mov
jmp
ror
retf
test
mov
jge
sbb
or
rol
cs
or
rep
push
add
arpl
and
or
mov
call
lods
mov
and
jnp
fidiv
test
sti
fnstsw
fdiv
test
movs
jae
push
out
mov
push
dec
lods
shr
imul
or
out
(bad)
into
lods
sub
jbe
mov
(bad)
int3
pop
hlt
jp
push
inc
inc
movs
out
cld
je
mov
mov
sbb
in
pop
xor
push
repnz
jge
pop
(bad)
sbb
push
mov
mov
jno
mov
xchg
xor
clc
shl
sbb
fs
cdq
xor
fimul
sbb
imul
sbb
push
jbe
pushf
pop
mov
xor
add
sti
mov
jb
dec
jl
push
cmp
repnz
xchg
mov
stos
adc
outs
imul
gs
mov
inc
jl
in
sbb
movs
xor
call
pop
mov
cmp
(bad)
lods
jl
loope
leave
les
xor
sub
add
mov
xor
in
adc
shl
push
lock
aad
stos
daa
adc
lea
jae
aad
lds
and
loop
mov
hlt
ss
fimul
shr
add
daa
cmp
shl
push
stc
jge
and
push
jbe
push
mov
pop
jb
fisttp
add
jbe
nop
xor
int
pop
ret
daa
leave
cmp
sub
mov
xor
jb
fsub
or
mov
mov
mov
push
(bad)
mov
cwde
popa
xor
stos
data16
cwde
and
fild
push
inc
into
mov
and
xor
jecxz
xchg
or
jo
push
pop
inc
aad
xor
rcl
inc
sbb
outs
lahf
test
xchg
adc
mov
jnp
test
or
cmc
ffree
dec
mov
sub
call
mov
movs
jo
mov
es
jecxz
rcr
jno
stc
outs
pop
mov
retf
sbb
and
out
iret
jge
jmp
adc
and
cmp
jae
xor
inc
addr16
je
das
aad
mov
sbb
sub
(bad)
jg
adc
and
add
push
jne
icebp
mov
inc
and
jp
not
jnp
add
dec
dec
sahf
mov
or
jl
mov
inc
or
push
mov
ret
int3
jne
mov
in
push
mov
or
call
mov
lods
scas
xor
(bad)
fisttp
inc
ret
sbb
mul
jge
(bad)
fistp
out
adc
xchg
bound
imul
push
sti
(bad)
scas
xchg
xchg
mov
and
xor
mov
scas
es
dec
cmp
pop
div
xor
cmp
call
push
neg
arpl
out
jmp
call
push
dec
adc
xor
cvtps2pd
movs
push
shl
cmp
jne
sbb
or
ins
in
jp
gs
push
pop
cmp
cmp
mov
xor
outs
call
shl
xor
pusha
icebp
mov
shr
mov
add
jnp
push
gs
enter
jecxz
xchg
jle
jge
je
popa
sub
fs
and
mov
cmc
ins
std
ja
mov
or
loope
add
sar
lahf
lods
call
and
sub
in
mov
lahf
popf
aas
adc
adc
cmp
pop
imul
cs
or
and
iret
in
mov
inc
sbb
push
je
daa
pop
sub
push
bound
jmp
ret
sub
mov
fimul
cmovne
or
(bad)
repnz
(bad)
aas
stos
imul
stc
mov
adc
call
mov
daa
inc
and
xchg
cmp
xchg
int3
sub
lods
sbb
xchg
sub
jnp
xchg
lahf
push
sbb
pushf
dec
pop
or
jmp
jne
loop
inc
mov
mov
pop
(bad)
icebp
mov
push
dec
not
je
mov
xchg
scas
xchg
dec
inc
sahf
mov
cli
inc
dec
sub
arpl
pop
in
out
adc
and
cmps
shl
xchg
movs
es
cld
or
scas
and
clc
jno
mov
push
adc
or
mov
mov
lods
mov
fist
add
mov
mov
std
in
les
aam
imul
jne
xchg
arpl
imul
popf
and
inc
(bad)
mov
fwait
sbb
pop
jno
fs
aam
pop
fdiv
shl
and
test
mov
push
inc
rcl
cmp
adc
inc
add
shl
aad
pop
(bad)
cmp
cs
sbb
outs
mov
inc
dec
pop
arpl
add
cs
rol
cmp
in
cwde
and
(bad)
pop
jb
mov
inc
iret
pop
int3
mov
xchg
xchg
lea
mov
(bad)
xchg
push
and
cmp
inc
imul
leave
std
dec
movs
push
ror
jae
mov
push
pop
sti
clc
dec
push
(bad)
out
push
mov
fstp
dec
adc
dec
sbb
sti
scas
pop
push
or
jne
pop
test
ds
jg
rep
loop
frstor
popf
xlat
inc
xor
and
inc
in
add
sbb
pop
stos
sub
iret
xchg
mov
call
pop
xor
mov
push
jbe
and
sub
xchg
or
push
icebp
movs
das
push
mov
imul
repz
cmp
mov
gs
cld
lock
in
dec
dec
out
movs
push
pop
test
dec
loop
es
lds
mov
fst
and
add
push
push
mov
sbb
leave
sbb
aaa
jl
(bad)
out
ret
popa
aam
imul
loopne
mov
push
push
inc
mov
push
push
test
add
xor
sub
retf
hlt
(bad)
ins
jg
scas
jg
mov
and
lea
cld
inc
dec
sbb
scas
sub
sti
cmp
pop
out
les
jecxz
adc
cs
sbb
adc
repz
mov
sbb
push
dec
(bad)
(bad)
in
sar
aam
mov
bound
test
dec
aaa
aas
mov
loopne
mov
cld
and
stos
in
cwde
mov
jle
mov
call
dec
or
sub
je
out
cmps
mov
fnstsw
mov
aaa
or
stc
pop
scas
retf
jle
adc
dec
dec
std
inc
inc
xchg
lods
and
push
jbe
xor
ror
xchg
push
push
pop
mov
add
xchg
fidivr
add
adc
sar
and
mov
fcomip
adc
inc
or
push
iret
fistp
out
je
xchg
call
fwait
outs
push
std
xor
xor
movs
sub
shl
mov
aam
push
xor
jl
pop
fs
xor
movs
push
ret
test
aas
outs
dec
xchg
and
cmp
ins
mov
ins
dec
retf
jb
or
ds
cmp
lods
jbe
dec
sti
push
pop
mov
mov
xchg
xchg
mov
ins
stos
mov
inc
dec
jp
push
aam
push
cmp
loop
lds
loop
movs
mov
and
cmp
out
popf
or
add
mov
les
fdivr
ins
out
mov
push
fld
mov
repnz
test
adc
addr16
(bad)
jo
xchg
or
jbe
pusha
sub
test
loop
daa
stc
cdq
cs
xlat
mov
and
add
xor
xchg
push
cmp
dec
mov
mov
sbb
sub
cmc
int
test
data16
out
imul
femms
je
add
sub
sti
xor
or
dec
add
nop
or
outs
loop
jmp
pop
jp
sbb
xor
arpl
retf
test
ss
xor
shr
push
mov
add
out
xchg
inc
mov
jl
sbb
sbb
adc
pop
mov
outs
inc
fadd
cmp
(bad)
call
mov
sbb
nop
xor
mov
jbe
inc
sbb
mov
ret
je
adc
xchg
lds
fisub
mov
pop
xchg
xor
xchg
stos
in
enter
sar
jle
mov
push
fld
add
popa
enter
(bad)
in
jecxz
or
pop
xlat
loope
es
adc
je
dec
in
add
iret
jbe
and
iret
cmp
nop
in
sub
aaa
and
cwde
call
(bad)
jbe
adc
mov
jg
bnd
inc
jecxz
je
cmp
(bad)
adc
pop
xchg
jbe
repz
push
sbb
fild
movhlps
jo
push
adc
push
adc
loop
or
sbb
ss
sbb
push
sbb
and
jp
cmp
in
(bad)
inc
jmp
sbb
jle
add
or
jns
push
imul
add
paddw
pop
cdq
pop
jle
popf
sbb
int3
mov
jecxz
cli
sbb
test
adc
adc
out
pop
xchg
popf
push
cmp
addr16
mov
mov
out
imul
sar
jno
xor
jge
and
push
mov
in
stos
dec
ror
sbb
push
adc
idiv
test
pop
jb
adc
jne
clc
push
push
(bad)
xor
je
cwde
inc
inc
mov
scas
cmp
or
ins
pop
inc
pushf
nop
jo
pop
retf
cmp
mov
mov
xchg
push
fsubr
sbb
das
(bad)
dec
addr16
sub
add
sbb
push
fld
mov
addr16
push
cs
sub
jle
push
jge
jecxz
sub
movs
xchg
lock
mov
jmp
sahf
jmp
adc
daa
mov
(bad)
iret
pop
lds
popf
push
pop
push
test
cmp
movs
stos
stos
jle
adc
les
mov
mov
aaa
hlt
inc
clc
(bad)
jle
cmp
std
and
clc
mov
mov
xchg
fstp
shr
sti
xchg
cmp
test
jle
mov
push
and
adc
data16
in
mov
add
pop
repnz
test
(bad)
add
sbb
je
sbb
push
xor
xchg
nop
ds
je
or
add
dec
addr16
sbb
push
jmp
dec
stc
sti
daa
hlt
enter
add
jbe
sbb
aam
pop
mov
shl
and
adc
or
clc
neg
ror
in
jmp
adc
in
adc
lods
lock
mov
fwait
retf
sbb
out
push
push
jo
ret
mov
nop
inc
inc
pop
jge
cmps
(bad)
mov
pop
inc
mov
dec
outs
mov
aam
daa
movs
addr16
fiadd
loop
icebp
(bad)
int3
ja
in
daa
lock
cld
xchg
aaa
(bad)
icebp
inc
outs
std
xor
loope
out
mov
frstor
cwde
in
push
xchg
mov
sub
dec
fnstsw
pop
jbe
loopne
jle
lods
clc
cmp
dec
es
mov
add
mov
test
push
push
loope
in
stos
xchg
test
popf
add
in
jle
cmc
mov
mov
sti
cmp
push
inc
popf
pop
lods
movs
mov
mov
aad
jo
shl
add
dec
ds
call
rcl
push
sub
mov
add
jmp
cmc
mul
sbb
out
jg
rol
mov
mov
fs
jb
dec
inc
push
mov
or
mov
dec
mov
jb
and
jbe
and
fwait
stos
stc
mov
cmp
cmp
push
sub
and
shl
inc
int3
(bad)
mov
mov
inc
repz
pop
add
js
and
jo
stos
jp
idiv
gs
test
shl
push
jg
dec
mov
scas
cmp
mov
or
nop
and
jl
cmps
jb
add
arpl
popf
ss
xchg
inc
jns
pushf
popf
and
sbb
cmp
loop
push
retf
enter
enter
mov
imul
retf
es
aaa
or
mov
imul
mov
and
(bad)
pop
mov
sahf
xchg
xor
js
pop
mov
mov
aam
push
cdq
inc
ds
jae
pop
mov
mov
pop
jmp
fsub
sbb
push
xlat
xchg
outs
push
push
lods
retf
imul
cmps
aaa
iret
dec
xor
xchg
ret
mov
fisttp
sbb
pop
cld
pop
push
xor
jbe
sbb
sbb
mov
pop
dec
outs
dec
mov
add
push
in
or
jg
mov
(bad)
and
xor
push
cld
jae
in
jne
push
xor
adc
arpl
or
inc
cmp
inc
sbb
mov
pop
dec
imul
retf
xchg
or
dec
mov
dec
dec
mov
repnz
pop
aam
push
xchg
cmps
inc
add
lahf
and
in
mov
movs
adc
fadd
cmp
int3
xor
adc
shr
cmp
cwde
pop
jge
mov
gs
sbb
cwde
movs
mov
mov
fld
bound
icebp
scas
ficom
pop
inc
lods
jle
cli
pop
jecxz
les
xor
push
xchg
xlat
cwde
test
mov
retf
xchg
jns
scas
inc
or
jmp
lock
cmps
outs
mov
imul
xlat
jae
lahf
xchg
push
jmp
repnz
mov
jl
out
inc
sub
cmp
sub
or
cmp
ja
and
stos
imul
mov
mov
enter
xlat
inc
scas
push
sub
mov
cmps
mov
nop
stos
jne
stos
add
call
fs
(bad)
les
xchg
cmp
aad
ret
push
imul
mov
mov
loop
dec
ins
test
push
movs
or
and
icebp
popf
or
xchg
rcl
add
outs
add
fidiv
pop
push
adc
sub
cmp
mov
dec
out
inc
mov
loop
push
jle
and
lods
enter
sbb
jp
cld
call
cmp
sub
mov
int3
xor
in
and
or
rcl
in
or
inc
xchg
mov
cld
and
mov
sbb
fcmovne
inc
mov
outs
out
sbb
jmp
int
int3
clc
adc
sbb
clc
adc
cmp
add
mov
hlt
cmp
mov
sbb
adc
xchg
(bad)
jl
loopne
mov
mul
clc
leave
and
mov
je
adc
mov
xchg
ins
ins
inc
es
inc
adc
nop
mov
or
pop
push
je
iret
xor
adc
js
mov
ds
inc
xchg
pop
sahf
sbb
pusha
sbb
dec
push
shl
test
stos
mov
add
je
data16
imul
in
cwde
push
ss
retf
jns
push
jmp
pop
adc
dec
in
dec
or
out
mov
rcr
mov
fs
pop
mov
dec
mov
(bad)
leave
js
shl
dec
mov
mov
sub
mov
xlat
imul
loopne
or
dec
stc
outs
dec
inc
popf
or
sbb
jl
movs
jl
cmp
pushf
(bad)
retf
cmp
sub
call
cmc
jmp
mov
mov
test
hlt
bound
jle
movs
mov
push
jno
adc
dec
ins
push
movs
cmp
pop
mov
push
int3
mov
sbb
xlat
cmp
test
cmc
jmp
cmp
mov
xchg
mov
or
jo
push
and
mov
imul
fucomp
(bad)
ror
outs
cmp
int
jne
push
sub
(bad)
outs
pop
fist
adc
cmp
xchg
inc
int3
cdq
sub
adc
or
mov
aaa
jmp
dec
jne
push
outs
std
(bad)
or
nop
ins
add
pop
dec
adc
sbb
popf
jbe
call
rol
mov
sub
add
ret
or
or
arpl
xor
sbb
inc
dec
(bad)
out
jae
shl
jne
rcr
mov
ins
imul
into
push
(bad)
retf
dec
rcr
jecxz
sbb
retf
push
lahf
inc
retf
loopne
loop
xor
xchg
fwait
adc
bound
jle
xchg
je
int3
movs
or
mov
xchg
mov
loopne
daa
stos
ins
push
push
imul
xchg
xor
retf
mov
sub
cld
adc
leave
fwait
jne
in
xor
outs
stc
inc
pop
addr16
pop
imul
jecxz
xor
dec
test
in
cs
and
jp
mov
mov
cmp
push
add
icebp
xchg
lock
push
cdq
adc
sbb
xor
push
sub
mov
or
loopne
cmp
push
pusha
pop
(bad)
cmc
rcl
mov
xchg
adc
fdivr
jmp
jno
sbb
outs
or
pop
jmp
sbb
leave
or
sti
in
or
cs
pop
cmp
dec
sar
mov
xchg
jne
jp
mov
das
leave
cld
out
and
shl
leave
aam
mov
bound
push
cmps
hlt
call
sahf
inc
mov
dec
retf
pop
push
(bad)
mov
jge
daa
jnp
dec
ins
in
cld
or
inc
dec
mov
lds
inc
call
std
inc
inc
pop
mov
cli
jns
jp
pop
and
clc
jge
xchg
out
add
repnz
aam
inc
call
cs
fistp
pop
sbb
dec
add
cmc
hlt
fstp
pop
jae
call
es
pop
daa
add
cs
popa
in
inc
int3
inc
lods
or
test
sub
fistp
sub
jg
cmp
fs
mov
mov
clc
mov
mov
lahf
xchg
ds
add
js
mov
xor
in
sbb
(bad)
mov
scas
retf
and
not
jp
out
pop
neg
in
xchg
ins
jle
lods
clc
and
(bad)
xchg
inc
push
jle
adc
(bad)
popa
jb
not
retf
mov
push
fstp
cmp
cwde
push
xor
mov
xor
fst
sbb
test
mov
inc
mov
pop
mov
stc
or
mov
adc
inc
cld
inc
inc
cld
dec
out
mov
inc
mov
fisubr
inc
ss
ins
cmp
jns
jnp
push
ins
pop
or
xchg
add
mov
cmps
push
cmp
stos
add
dec
cli
push
mov
std
cmp
addr16
(bad)
retf
out
shr
mov
daa
in
aas
push
and
imul
and
and
frstor
mov
jo
pop
mov
loop
pop
jg
push
dec
aas
repz
push
jmp
addr16
or
lods
sti
es
loope
jne
ret
movs
das
or
cmps
push
data16
repnz
xchg
aaa
rcl
jmp
mov
push
pop
sub
xchg
xor
xchg
fstp
jbe
dec
or
nop
in
out
test
sbb
jp
cmps
and
mov
scas
sub
add
ins
aam
xor
pop
(bad)
xor
shr
(bad)
frstor
add
(bad)
ins
mov
jge
push
imul
jne
es
lods
xchg
add
popa
(bad)
push
cmp
ret
hlt
and
or
cmc
cli
dec
sbb
mov
jle
or
and
int
mov
dec
es
ds
sbb
aas
mov
and
adc
sbb
mov
mov
add
and
xchg
and
lods
xchg
ins
cs
inc
jmp
jns
clc
add
ja
jb
test
dec
push
dec
nop
jae
sub
popf
fbld
mov
add
or
lods
popa
fist
int3
mov
adc
mov
sub
jno
cmp
sub
xchg
sbb
pop
fiadd
cs
cdq
dec
scas
loope
fwait
jno
inc
pop
arpl
in
pop
mov
cwde
fcos
dec
movs
mov
mov
test
mov
xor
movs
es
or
dec
(bad)
pop
xor
jo
and
cwde
ins
movs
mov
mov
das
inc
sub
cmc
xchg
pop
popa
and
mov
out
data16
sbb
lock
out
inc
lea
xor
jmp
adc
inc
loopne
mov
repnz
int
mov
dec
dec
imul
xor
clc
mov
adc
add
enter
in
not
xchg
retf
cli
mov
sub
call
or
mov
xor
in
inc
loope
in
or
xor
leave
and
mov
push
int
cwde
xlat
xor
jg
xchg
add
adc
mov
jae
cld
dec
inc
xor
push
xor
pop
rol
mov
outs
xor
sbb
pop
mov
jnp
cmps
iret
dec
rol
mov
sbb
fst
dec
sbb
dec
xchg
cli
sub
adc
sbb
sbb
(bad)
in
ss
cmps
jecxz
faddp
mov
fst
mov
je
(bad)
clc
cmc
or
pop
mov
es
stc
mov
and
je
xor
sahf
call
ds
test
icebp
push
push
xchg
pop
cmc
ror
dec
fxch
mov
add
ret
add
inc
jg
dec
scas
inc
int
mov
dec
ss
fnsave
fwait
(bad)
push
pop
(bad)
(bad)
push
pusha
xor
mov
in
push
push
pop
stos
mov
test
sub
dec
gs
cdq
fnsave
add
in
fst
xlat
cmc
xchg
int
mul
push
xor
inc
arpl
push
pop
sahf
lea
jmp
(bad)
sahf
jnp
push
dec
and
aaa
mov
fwait
sub
mov
in
pop
dec
out
stos
push
cmps
jg
jmp
dec
std
jo
jecxz
add
sar
mov
mov
mov
(bad)
sbb
jns
dec
pushf
fsub
xor
and
iret
jmp
xchg
pop
dec
int3
enter
loop
inc
xor
mov
pop
test
ror
inc
adc
sbb
js
cmp
mov
and
adc
test
ja
movs
push
arpl
mov
into
or
mov
out
pop
(bad)
lahf
mov
in
call
inc
cmp
sahf
inc
retf
push
fimul
xor
jge
xor
sbb
daa
and
and
push
hlt
ret
clc
xchg
outs
pop
pop
test
mov
movs
pop
jb
shl
pushf
or
mov
or
push
bound
jp
int3
scas
in
and
sbb
imul
rcl
xor
lds
(bad)
push
mov
outs
stc
jmp
aas
cmp
outs
popa
fistp
sbb
cmp
icebp
xor
and
xor
dec
mov
shl
daa
sahf
in
cmp
dec
inc
sbb
xor
(bad)
cs
mov
pop
add
cmps
add
into
and
sbb
sub
sbb
cmp
ss
hlt
and
push
dec
xor
rcl
sbb
mov
xchg
inc
lahf
jg
xchg
or
dec
js
fiadd
cwde
sub
ret
xor
cmp
js
mov
jo
fld
sbb
addr16
arpl
aam
daa
jnp
aam
adc
cmp
cmc
cmp
mov
jmp
call
dec
mov
inc
and
and
(bad)
mov
repnz
and
jbe
stos
js
mov
aad
ret
push
jmp
mov
call
mov
movs
imul
into
add
push
or
fistp
adc
and
pusha
iret
ret
dec
in
sub
cld
out
lods
inc
mov
mov
(bad)
fabs
jle
or
cwde
add
loopne
cmp
inc
jmp
pusha
cli
aas
fbstp
mov
in
loop
dec
mov
sbb
sbb
in
cmps
add
pop
rcr
movs
cmp
pop
push
loop
ds
or
out
shl
cs
push
gs
loope
pusha
mov
movs
sti
jmp
imul
xor
test
outs
arpl
or
rcr
pop
jbe
int
pop
out
or
inc
push
iret
fld
and
jmp
test
inc
and
mov
mov
cwde
int
xor
xchg
jle
xchg
cmps
mov
jmp
jb
or
push
and
and
fnstcw
dec
cs
xchg
or
jp
scas
push
test
inc
cmps
jp
in
jmp
adc
les
test
neg
je
jns
mov
lods
pop
push
ror
jb
xor
lea
sbb
jne
fcomp
xor
xchg
(bad)
(bad)
mov
repz
mov
or
mov
aad
lahf
out
aaa
mov
inc
jp
int
sub
jmp
adc
push
addr16
loop
and
je
and
xor
add
inc
in
les
xchg
jns
lods
aam
push
fimul
stos
rcr
cmp
dec
adc
xor
call
push
loopne
xchg
push
pushf
adc
test
dec
jmp
adc
sub
jb
xor
jo
sub
inc
xchg
jo
mov
xor
pusha
scas
(bad)
fimul
push
jle
or
ds
sub
mov
arpl
dec
pushf
and
sbb
sub
mov
inc
bound
cs
dec
inc
retf
adc
jno
ja
mov
movs
in
outs
dec
sbb
cmp
and
and
jne
pop
mov
push
test
inc
adc
sbb
mov
std
mov
(bad)
and
xchg
adc
jl
fadd
cmp
lds
lahf
sub
in
add
inc
dec
jecxz
icebp
push
sahf
adc
mov
jmp
mov
fcom
and
aas
add
mov
xchg
mov
xchg
shl
inc
xchg
dec
jl
xchg
mov
pop
cs
fisttp
iret
mov
inc
pushf
cs
mov
lahf
sti
div
adc
test
push
pusha
mov
sub
jmp
lods
mov
mov
push
aad
sahf
xor
adc
mov
inc
lahf
loope
xor
call
call
dec
jle
inc
popf
popa
enter
cmps
(bad)
or
mov
retf
inc
pop
jp
retf
leave
pop
mov
jp
fwait
daa
repz
lock
xchg
cmp
mov
sbb
pop
adc
mov
jno
nop
aam
fst
sub
loope
stos
retf
sahf
inc
adc
fisttp
jmp
jp
jp
pop
imul
pop
call
movs
pop
int
mov
cmp
mov
push
outs
hlt
inc
(bad)
jmp
pop
jno
mov
in
xlat
pop
stc
fcom
adc
xor
or
arpl
call
js
inc
test
movs
adc
or
pusha
jo
mov
es
jg
test
pop
je
xchg
mov
cmp
je
and
mov
jp
aas
jbe
stos
mov
cmp
cmp
push
push
loope
(bad)
sub
and
mov
cwde
mov
fisubr
es
pop
mov
push
dec
sbb
jmp
or
xor
(bad)
dec
cmp
scas
repnz
test
sub
dec
fdiv
into
mov
pusha
ficomp
hlt
out
cli
push
push
ror
xor
icebp
aam
or
cwde
popf
(bad)
jg
cmp
jmp
cmp
rol
mov
mov
xor
pop
add
xchg
push
xchg
out
mov
jle
cmp
fisub
(bad)
out
(bad)
mov
idiv
xchg
xchg
(bad)
enter
test
push
push
push
mov
adc
add
xor
pop
mov
jnp
sti
fwait
ret
inc
test
xchg
jg
das
movs
fst
or
add
mov
out
and
popf
and
daa
sar
outs
cld
out
shr
imul
stos
cmp
ret
fiadd
add
rcr
mov
pop
gs
out
in
jmp
jmp
sbb
test
add
cs
dec
mov
retf
lahf
(bad)
fdiv
sti
mov
adc
xchg
or
jge
cwde
and
and
add
ret
sbb
mov
test
jns
ret
aad
mov
call
cmp
iret
adc
dec
in
mov
dec
leave
call
mov
xor
jg
fnstenv
sub
or
cdq
es
lahf
xchg
mov
(bad)
enter
jg
inc
adc
inc
mov
gs
inc
test
pop
xor
into
jmp
retf
dec
mov
xchg
adc
repnz
xchg
rol
push
ins
or
shl
pop
iret
mov
stos
imul
adc
(bad)
jmp
add
cmp
push
mov
jge
call
mov
out
test
push
stos
mov
cmp
ret
dec
(bad)
cmp
ins
xlat
movs
or
or
cmp
test
or
les
push
mov
aad
ret
movs
(bad)
shl
or
(bad)
push
outs
movs
or
mov
jns
(bad)
(bad)
and
ja
mov
mov
and
sub
xor
add
pop
sbb
mov
jo
adc
(bad)
dec
push
sub
cmc
lea
mul
dec
int3
rol
xor
or
pop
and
popf
es
dec
sub
add
mov
sbb
xchg
ins
lods
push
in
pop
jb
mov
mov
(bad)
xchg
in
(bad)
repz
pop
xchg
jle
and
imul
jecxz
pop
popa
mov
shr
sbb
jmp
sub
in
sub
imul
fiadd
jg
jo
daa
xor
imul
outs
or
jo
inc
jecxz
dec
dec
into
xor
mov
push
jnp
add
stos
repnz
xchg
xlat
push
bound
cli
xor
xchg
sar
call
xor
sbb
adc
cmp
cmc
adc
or
mov
test
lea
xor
fs
fistp
sbb
mov
adc
or
or
leave
cli
cdq
xor
push
push
ss
sahf
not
mov
mov
cdq
sub
fadd
into
xchg
enter
hlt
push
mov
cmps
mov
pop
dec
in
push
xor
(bad)
mov
add
or
sti
imul
inc
stos
mov
adc
mov
push
cld
and
mov
sahf
nop
dec
mov
leave
ss
mov
lds
adc
aad
adc
dec
adc
xchg
sub
shl
in
ror
ja
cwde
sahf
add
sub
in
sub
lahf
mov
xor
rol
jne
xor
aas
push
jno
push
jecxz
push
cs
aad
pop
jbe
pop
mov
sti
test
repnz
xchg
stos
test
ja
jp
mov
cmp
pop
div
xchg
jge
lods
enter
mov
jae
les
fdivr
mov
push
sbb
nop
loopne
mov
xor
adc
push
jmp
mov
mov
mov
fcomp
call
push
sub
sar
ins
adc
xor
dec
mov
movs
jns
adc
clc
dec
popa
mov
lods
stos
mov
retf
mov
repz
stos
(bad)
pop
pushf
mov
xor
daa
pop
scas
dec
loop
lods
dec
or
or
pushf
fdivr
neg
push
(bad)
push
loopne
jmp
and
enter
leave
bound
mov
in
mov
dec
jnp
cmc
push
lahf
adc
or
add
add
mov
ins
aas
sbb
mov
jecxz
ds
dec
ds
pop
push
pop
dec
ret
jne
sub
icebp
into
inc
mov
push
or
popf
repnz
cmps
outs
jl
jb
leave
mov
jle
xor
mov
mov
hlt
stos
fdiv
cmp
push
dec
ss
fcmovb
das
lods
dec
call
ins
dec
mov
(bad)
js
adc
inc
arpl
in
das
hlt
mov
adc
mov
repnz
dec
add
jnp
cmp
fdivr
fld
es
mov
out
mov
mov
add
add
jg
das
ins
mov
mov
jnp
ja
rol
(bad)
out
cwde
sub
enter
jp
push
imul
sbb
hlt
jmp
mov
dec
and
mov
lahf
movsx
inc
inc
jmp
mov
(bad)
mov
and
adc
ins
lds
xchg
popa
adc
or
fwait
jp
ret
movs
jnp
xor
or
cmp
imul
pop
jno
add
push
arpl
test
outs
xchg
stc
adc
stos
scas
dec
or
jb
ja
add
lahf
adc
inc
pop
or
loop
inc
and
stos
jmp
leave
test
mov
enter
stc
or
cmp
imul
push
test
pop
scas
aas
pusha
fidivr
xchg
in
inc
pop
nop
mov
dec
ret
xchg
out
repz
add
mov
xchg
sub
mov
jp
cmp
pop
inc
or
fwait
sbb
(bad)
movs
add
push
xor
div
fwait
sub
mov
lea
or
push
out
mov
scas
shl
push
jg
fcomip
pop
call
inc
out
out
loope
sub
push
ss
ja
or
mov
bound
pusha
hlt
imul
sub
adc
fnstenv
and
mov
xchg
sub
mov
loop
out
xchg
jg
pop
xor
push
shl
jb
xor
inc
pop
add
cli
sub
in
mov
jne
xor
cmps
dec
mov
popf
push
cmovne
sti
xchg
lock
inc
xchg
mov
jle
adc
ins
pop
scas
cmp
dec
test
push
xor
dec
inc
psllw
ins
push
clc
push
ins
aad
test
lods
mov
jge
clc
sub
and
arpl
mov
lea
lds
cmp
fs
and
sbb
jle
scas
jne
adc
sti
imul
gs
push
dec
add
enter
mov
rcl
xor
lock
add
pushf
cs
cwde
xor
mov
xor
test
loop
mov
outs
mov
hlt
aas
test
icebp
mov
inc
fld
sub
jb
mov
data16
shl
sub
rol
lods
jbe
daa
outs
mov
in
sbb
stos
pop
adc
push
dec
(bad)
jnp
xor
jbe
test
cdq
xchg
add
pop
pop
push
cmc
mov
in
mov
jle
xchg
jo
in
adc
inc
gs
lea
mov
dec
sar
rcl
cdq
fs
pop
add
adc
inc
pop
inc
xchg
mov
sti
cwde
add
mov
pop
ficom
loope
das
sub
or
stos
xrelease
inc
mov
js
sub
(bad)
enter
xor
dec
movs
mov
out
(bad)
in
lods
mov
dec
fs
sbb
ins
mov
push
mov
jmp
dec
adc
addr16
call
or
fcom
adc
(bad)
(bad)
cld
and
mov
add
jnp
jae
retf
dec
add
pusha
add
sbb
lea
popf
xor
movups
sub
pop
aam
(bad)
sbb
cwde
jle
scas
stos
mov
mov
movs
add
xor
xchg
or
mul
push
push
movs
rcr
movs
mov
mov
scas
jp
imul
xor
shl
xchg
lods
or
enter
cmp
scas
cmps
mov
mov
out
and
lds
mov
sbb
push
cs
pop
mov
dec
aam
jae
jge
pop
cmp
add
mov
enter
lods
imul
mov
mov
sbb
jnp
add
fist
sub
jmp
xchg
lock
xchg
sbb
push
sbb
loopne
dec
add
ror
push
push
mov
dec
fisubr
cmps
inc
jne
xchg
sub
mov
xor
js
outs
mov
adc
shl
xchg
sbb
xchg
int
jno
or
cdq
xchg
jl
cmp
push
imul
jns
stc
jbe
fs
mov
jnp
es
shl
push
push
inc
scas
popa
xlat
movs
popf
lahf
loope
push
inc
sub
add
movs
cmps
push
mov
cmp
mul
and
xor
call
push
idiv
xchg
popa
pop
jmp
adc
jae
mov
adc
scas
cmp
pop
aaa
mov
movs
(bad)
xchg
xor
icebp
loop
mov
add
div
popa
push
arpl
mov
shl
les
jg
mov
aas
out
mov
jmp
dec
push
je
and
push
sbb
in
mov
repz
push
dec
ret
mov
dec
adc
shl
mov
into
inc
into
jbe
sub
and
in
inc
jg
mov
mov
jnp
sbb
cli
inc
stos
push
test
inc
test
xlat
loop
mov
mov
xor
(bad)
daa
inc
jbe
pop
mov
mov
pop
jns
dec
push
or
(bad)
add
push
ret
cdq
mul
jecxz
mov
daa
xchg
push
jmp
xchg
sub
inc
jmp
jb
mov
push
pop
jmp
mov
mov
ja
loop
inc
adc
cdq
push
(bad)
retf
jae
aad
xor
es
cmp
in
xor
fwait
and
mov
or
aam
mov
ins
mov
or
sub
jmp
das
xchg
(bad)
xor
daa
(bad)
and
xchg
je
test
push
sbb
in
cmp
call
mov
out
ret
lds
or
mul
cmp
xchg
test
dec
scas
fdivrp
mov
bound
clc
mov
in
call
and
push
cdq
dec
out
push
xor
and
xchg
popa
mov
dec
fnstenv
xchg
scas
push
mov
js
adc
(bad)
fwait
add
jp
push
mov
mov
sub
inc
cli
inc
(bad)
iret
daa
cmovo
add
jo
sub
jmp
or
xchg
stos
push
mov
mov
xlat
ja
or
ret
jle
dec
int3
mov
cmp
push
mov
bound
or
into
push
mov
jle
outs
jl
enter
add
fwait
movs
jno
addr16
or
push
cmp
dec
sahf
add
das
inc
mov
mov
xor
js
xor
nop
dec
xor
or
call
inc
jge
and
mov
nop
inc
hlt
aas
sbb
push
and
and
push
addr16
jge
sbb
icebp
ss
ror
sbb
jmp
sub
xor
inc
dec
mov
dec
lea
mov
aam
jle
jmp
in
xor
push
repz
push
shl
xchg
cmps
mov
dec
mov
test
dec
out
ret
or
dec
push
pop
dec
or
into
(bad)
fdiv
cdq
cmps
or
jg
lods
mov
push
fs
push
mov
jbe
(bad)
scas
adc
clc
mov
addr16
xchg
hlt
(bad)
mov
push
push
(bad)
into
lds
push
pop
idiv
pop
dec
aaa
lahf
dec
mov
pop
sahf
jno
inc
call
inc
push
mov
cmps
pop
in
jge
sti
dec
cs
enter
dec
push
sbb
cmp
jae
test
pop
pop
aas
stos
imul
ins
frstor
(bad)
xor
stc
popa
push
(bad)
xor
enter
xchg
shl
dec
mov
adc
or
cmp
sub
xchg
or
and
imul
pop
ins
or
cmp
lock
mov
scas
sub
sbb
imul
xor
inc
and
mov
rcl
xchg
les
(bad)
and
sbb
sbb
ss
retf
sub
xchg
xor
pop
mov
mov
jne
stc
aam
je
push
pushf
stc
popa
in
mov
inc
xchg
out
call
movs
adc
arpl
xor
jb
cmc
add
mov
inc
leave
out
mov
aas
jp
xchg
jb
out
(bad)
lock
adc
inc
popa
(bad)
xchg
dec
cmp
jne
aad
gs
lock
icebp
daa
jle
xor
aas
sub
xor
repz
jle
imul
and
test
fstp
in
sub
push
js
mov
addr16
adc
xchg
push
fadd
cmps
fmul
cmp
popa
jne
inc
xor
or
popa
das
das
adc
mov
ins
(bad)
pop
outs
and
sub
jae
or
jbe
data16
repnz
jecxz
pop
mov
sbb
sub
pop
(bad)
fsub
cmp
pushf
mov
mov
sub
mov
dec
inc
xor
iret
fcmovbe
sub
mov
mov
lahf
retf
cmps
imul
or
into
or
inc
shl
out
push
pop
call
inc
pop
loop
ins
mul
mov
mov
cmps
adc
ins
jecxz
popf
test
adc
ret
iret
sub
lods
(bad)
fs
pop
mov
mov
iret
push
or
adc
seto
ins
data16
ficom
mov
jle
mov
dec
movs
(bad)
mov
adc
test
mov
pcmpeqb
xchg
loopne
mov
sahf
jge
xchg
add
fcomp
xchg
jnp
movs
jmp
imul
pop
aad
shr
mov
or
and
iret
and
jnp
or
cmp
pop
inc
ds
adc
or
popf
push
fist
jmp
mov
mov
(bad)
shr
div
mov
add
aad
ret
xlat
lock
aam
lods
mov
pop
fwait
aad
enter
aas
pop
and
add
cmps
nop
pop
cdq
or
sub
mov
add
sbb
xchg
adc
inc
es
dec
xor
test
ret
pop
imul
xchg
dec
inc
call
jg
daa
je
nop
int3
sbb
mov
jl
or
xchg
scas
xchg
mov
out
in
mov
sbb
or
jp
push
sub
in
(bad)
scas
popa
sub
dec
jne
cmc
fst
movs
sbb
pop
xor
xor
dec
frstor
jmp
shl
pop
xchg
out
pop
fadd
fwait
and
inc
jae
inc
xchg
adc
hlt
aas
push
xchg
mov
lea
or
lods
dec
gs
int
dec
ror
and
in
or
cmps
aaa
jb
adc
(bad)
xor
sti
(bad)
mov
int
jb
mov
mov
xchg
sbb
mov
xabort
push
xchg
leave
pop
pop
mov
cld
jp
or
pushf
cmc
aaa
imul
pop
dec
fisttp
inc
and
jge
pop
addps
imul
rcr
rcl
(bad)
jnp
push
fsubr
add
test
aaa
cmp
push
and
scas
in
daa
pop
test
or
fcomp
in
xor
pop
pop
pop
cmps
je
shl
jl
sahf
jnp
cs
push
imul
cwde
movs
cli
dec
cmp
mov
sub
xchg
jno
add
lods
outs
inc
in
test
jl
lods
mov
xchg
xchg
stos
pop
loopne
cwde
addr16
call
jmp
xor
(bad)
cld
ret
mov
mov
sub
arpl
inc
addr16
sub
pop
repz
xor
jns
sbb
push
inc
stos
sub
popf
sti
add
and
(bad)
pop
leave
lds
or
leave
sbb
in
xchg
imul
push
out
div
ja
repz
lods
push
(bad)
adc
ins
mov
cmp
mov
sbb
cmp
jns
dec
(bad)
out
cmp
or
repz
sub
je
scas
sbb
arpl
sub
push
int3
lock
mov
loopne
(bad)
pushf
ja
cld
bound
lahf
add
fld
push
retf
inc
xchg
loopne
jle
fwait
jbe
jns
xchg
sub
sub
cmp
daa
out
jl
mov
add
imul
mov
xlat
addr16
outs
(bad)
in
adc
out
retf
push
mov
in
shld
f2xm1
call
pop
pop
fld
pop
push
jmp
dec
pop
pop
jle
std
jl
aas
pop
sbb
add
stos
fst
xchg
jnp
or
pop
hlt
jo
mov
dec
sub
js
popf
xchg
fs
sub
mov
jg
ss
lahf
mov
enter
idiv
aaa
cmps
ds
mov
retf
jo
stc
popa
jle
mov
imul
sbb
mov
cmp
jmp
adc
repz
fbld
loopne
push
cmovbe
adc
pushf
ins
in
ds
pusha
and
lea
xchg
mov
(bad)
jmp
fld
gs
fisub
cld
dec
cld
sub
repnz
sahf
add
fld
sbb
sahf
sbb
mov
jnp
mov
inc
mov
rcr
out
push
mov
inc
mov
jae
lahf
cmp
movs
and
retf
pop
fdivr
cli
sbb
mov
rcr
push
pmulhuw
cmps
test
xchg
mov
imul
inc
lock
jnp
dec
inc
add
ins
sbb
and
sti
add
inc
mov
movs
repz
shl
push
mov
dec
and
push
data16
pop
or
sbb
out
mov
cli
iret
adc
mov
pop
jmp
stc
push
push
inc
loope
test
adc
mov
cmp
idiv
sub
add
mov
jecxz
pushf
out
add
imul
mov
out
inc
cli
adc
xchg
icebp
mov
loopne
inc
cdq
scas
movs
loop
jl
shr
bound
jne
dec
pushf
mov
sub
mov
jbe
into
sahf
shl
je
mov
or
push
rcl
inc
pop
xchg
ins
adc
add
sub
dec
dec
adc
sbb
sub
and
loope
ins
lahf
adc
mov
mov
stos
xchg
mov
pop
push
std
nop
sub
out
cmp
mov
int3
sbb
loop
jmp
ins
retf
sub
push
lea
inc
adc
add
adc
sar
pop
jmp
sub
mov
dec
fwait
out
nop
(bad)
cmc
lock
or
out
ret
inc
cmp
pop
sub
add
sub
cmp
dec
lea
lods
test
test
fmul
rol
jl
mov
sbb
fnstenv
add
xchg
rol
jne
dec
aas
shl
push
pop
das
sub
cmp
sub
sbb
or
out
inc
and
ins
jmp
push
mov
pusha
repz
mov
ret
lds
mov
(bad)
call
push
out
jecxz
xlat
pop
mov
or
inc
rcr
push
scas
retf
pop
mov
fsub
jne
mov
ja
popa
mov
retf
and
dec
into
push
mov
(bad)
mov
imul
add
or
popa
es
cmp
jmp
enter
xchg
(bad)
data16
lea
sub
mov
into
call
cmp
xlat
push
les
dec
xchg
xchg
dec
cmp
mov
inc
inc
mov
sub
pop
add
inc
push
mov
mov
repz
add
nop
push
jge
adc
lods
pop
int3
mov
sahf
cmc
lahf
cwde
or
aaa
ss
jmp
cmp
call
ds
adc
inc
outs
sbb
dec
push
pop
repnz
clc
aas
(bad)
stc
mul
dec
mov
mov
js
mov
fs
mov
fldlg2
pop
mov
js
mov
pop
sti
jmp
xor
mov
adc
mov
mov
push
adc
fidivr
mov
aaa
call
das
shl
(bad)
stos
push
adc
fdiv
dec
stos
ins
jo
movs
mov
dec
fist
fisub
cs
add
sahf
xchg
leave
jb
mov
fidiv
mov
pop
js
push
xchg
push
not
adc
pop
mov
in
test
fbld
and
iret
and
dec
lahf
xor
sbb
push
scas
mov
adc
sub
mov
(bad)
movs
cmp
ss
add
fidiv
fisub
(bad)
retf
mov
test
add
test
(bad)
cli
dec
ins
xor
jmp
pop
imul
dec
arpl
in
inc
mov
mov
je
jbe
mov
mov
mov
dec
inc
xchg
fist
adc
aaa
sbb
icebp
(bad)
outs
and
jno
xchg
xchg
movs
dec
mov
adc
push
mov
sbb
lods
sub
fstp
out
xor
lods
mov
fcomp
add
aas
mov
add
mov
pop
mov
or
test
cs
and
mov
test
push
add
dec
and
add
xchg
or
cmp
arpl
cmp
mov
jb
aas
lahf
add
retf
sbb
add
fstp
mov
fs
fnstsw
add
xor
mov
int
clc
scas
pushf
sub
outs
je
jae
pop
mov
and
mov
lea
(bad)
pop
sub
test
xchg
ret
int3
enter
dec
dec
sbb
mov
push
out
cld
push
xor
push
cli
test
jns
jl
inc
mov
cmp
nop
add
sub
inc
in
mov
scas
inc
sub
icebp
push
jle
cmps
shl
push
outs
mov
push
outs
retf
fs
ss
xchg
scas
arpl
xlat
in
stc
sub
adc
(bad)
fisub
ins
jge
fisub
xor
add
and
pop
inc
jno
js
and
dec
pop
clc
popa
ss
not
cwde
and
(bad)
pop
push
inc
or
hlt
pop
inc
mov
dec
mov
lahf
mov
xor
pop
adc
fldcw
add
xchg
ins
inc
sbb
dec
fadd
xor
sub
pop
fdiv
sbb
mov
mov
aas
stos
hlt
push
lock
pop
(bad)
cmp
ror
ficom
xchg
popa
clc
mov
in
loop
fst
repz
repnz
scas
sub
mov
inc
(bad)
scas
add
(bad)
ins
retf
mov
lds
fcmove
loop
mov
adc
xchg
add
lods
inc
js
fstp
scas
es
dec
rcl
inc
jbe
and
lods
and
inc
adc
cmp
xchg
or
(bad)
jmp
jmp
xchg
in
imul
push
test
add
push
dec
add
and
outs
loope
adc
xchg
xchg
add
jo
mov
ja
cmp
xlat
push
xchg
cmp
jmp
in
pop
ins
pop
dec
mov
fsqrt
add
je
mov
xchg
inc
mov
pushf
hlt
pop
in
not
scas
idiv
push
sti
pop
(bad)
iret
mov
loope
iret
dec
jae
rol
inc
test
sub
cmp
fidivr
call
jnp
dec
clc
jecxz
jge
(bad)
jbe
sbb
aad
push
push
cs
stos
xlat
jb
and
enter
cmp
add
test
repnz
popf
jmp
inc
push
mov
ins
jmp
(bad)
mov
or
jecxz
aam
push
mov
in
jnp
icebp
pop
mov
lods
pop
out
and
xchg
push
mov
xor
jo
fdivr
xchg
add
sbb
fsubp
push
ror
popf
lods
sbb
and
ret
cld
outs
cmp
lock
jns
(bad)
push
std
push
inc
dec
test
lahf
div
out
push
mov
cmps
sbb
imul
cld
leave
sbb
dec
push
mov
aaa
mov
mov
ret
lea
push
repz
adc
ss
inc
mov
xor
push
retf
leave
jp
fs
dec
pop
fcmovnbe
sbb
aas
xchg
retf
mov
data16
lds
daa
jo
mov
mov
fidivr
sti
pop
jmp
or
jne
or
xchg
dec
inc
(bad)
icebp
pop
in
fstp
scas
movs
cmps
sti
outs
xor
jmp
popa
rcl
mov
and
sahf
fadd
or
xor
cs
loop
pop
xor
ficom
popf
xor
outs
xchg
or
xchg
test
test
hlt
and
iret
jecxz
xor
sbb
inc
ins
xchg
mov
inc
call
dec
push
hlt
mov
dec
out
adc
mov
push
cdq
mov
sub
cmp
fistp
jae
gs
dec
shl
xlat
arpl
dec
in
xchg
and
in
xchg
or
movs
je
sti
ja
push
mov
xchg
adc
test
adc
push
popf
fdivr
iret
fistp
clc
ss
int3
adc
cmp
cmps
or
in
ja
je
ror
mov
mov
(bad)
or
les
or
or
sbb
mov
fnstsw
cmp
fistp
push
(bad)
fcmove
ins
div
dec
loope
push
pop
xchg
scas
push
cmp
mov
cmps
sbb
lds
jle
adc
inc
movs
popa
outs
je
addr16
add
xchg
aam
repnz
out
cmp
lahf
mov
pop
inc
xchg
mov
dec
movs
push
test
add
pop
sub
mov
jecxz
mov
xor
or
fst
xor
mov
pop
sbb
sub
aad
mov
jmp
mov
mov
push
and
cdq
cmp
out
inc
lds
repnz
adc
and
jno
push
xchg
jo
jae
pop
ss
jmp
lea
jnp
ja
xchg
cmps
mov
loop
inc
mov
mov
daa
dec
add
fs
xor
stos
ins
dec
jmp
jmp
movs
out
pop
dec
ins
pop
dec
scas
and
ins
add
outs
pop
sar
xor
or
and
and
retf
popf
es
pop
cld
(bad)
dec
mov
lods
movs
mov
loop
loopne
jg
sub
mov
push
pop
imul
cmps
sbb
popa
jge
in
fsubr
sbb
pusha
dec
je
mov
cmp
cmps
pop
cs
call
neg
loop
pusha
xchg
dec
mov
inc
jmp
enter
xchg
push
sub
mov
mov
sub
cmp
es
fnsave
dec
sbb
inc
iret
jecxz
cmp
cmps
ins
dec
mov
(bad)
aaa
test
test
dec
outs
jp
mov
inc
rcr
dec
das
dec
outs
and
xchg
in
pop
out
scas
loope
xchg
icebp
push
dec
mov
outs
mov
into
pop
fild
or
(bad)
repz
lock
not
inc
arpl
xchg
je
scas
nop
jbe
inc
jne
jb
lods
jle
adc
sub
lahf
push
mov
cmp
out
add
jle
pop
shr
jge
sub
movs
fild
or
push
arpl
mov
mov
ss
pop
adc
and
inc
cld
xor
inc
inc
(bad)
mov
ds
sahf
jb
fnsave
pop
jge
jp
fnsetpm(287
jg
dec
mov
(bad)
(bad)
int
or
dec
mov
ss
bound
ins
sub
dec
xor
xor
sbb
aam
mov
inc
jl
cmp
mov
or
add
(bad)
test
loope
data16
mov
add
not
mov
test
inc
js
fmul
jmp
out
pop
cmp
pop
inc
cld
lods
jae
mov
jns
ret
and
ja
loope
into
mov
xchg
mov
retf
clc
cli
push
xlat
cdq
cmps
scas
mov
ficomp
mov
inc
inc
ror
daa
in
push
aaa
dec
mov
fistp
and
mov
inc
mov
outs
dec
jne
ja
dec
fst
mov
gs
fild
adc
mov
add
sbb
(bad)
pop
cs
sbb
ins
jne
or
xlat
fnsave
add
sar
pop
enter
pop
sub
pop
lahf
(bad)
ins
in
xor
cmp
nop
sbb
xchg
outs
or
fcom
ja
mov
call
or
push
pop
pop
mov
cmp
adc
dec
lods
pusha
sbb
cmp
push
xor
outs
sbb
mov
xor
jecxz
into
dec
call
in
cmc
mov
or
loop
lahf
retf
ja
les
in
mov
fidivr
neg
sub
cmp
aad
mov
gs
cmp
mov
popf
mov
popf
repz
imul
and
pusha
fld
call
in
cmp
pop
inc
push
xchg
clc
(bad)
jmp
push
sbb
aaa
add
leave
icebp
loopne
mul
inc
ret
sub
mov
mov
movs
sub
movs
adc
(bad)
sub
ja
fstp
repz
jg
fcom
pop
sar
aam
dec
or
loope
stos
mov
pusha
ret
imul
hlt
pushf
push
adc
mov
stos
cmp
or
jp
xchg
xor
mov
arpl
ror
jl
and
push
pop
shrd
nop
dec
inc
popa
xor
in
call
or
xor
mov
mov
mov
popf
xor
push
push
ffreep
xchg
pop
mov
jecxz
ficom
push
jae
rcr
cmp
(bad)
out
popa
out
ror
cmp
jg
dec
adc
push
jno
loop
in
(bad)
retf
push
dec
mov
sbb
out
imul
adc
and
sbb
inc
cmp
test
mov
or
and
lods
mov
xor
pop
jmp
inc
test
mov
jo
jl
retf
es
rol
mov
call
sbb
add
retf
xchg
and
dec
jmp
out
fnsave
adc
push
or
call
jp
test
shl
add
data16
stos
movups
(bad)
idiv
mov
jae
jmp
fisub
or
sbb
xchg
sub
xchg
sub
dec
ret
mov
fild
popf
push
retf
sbb
sbb
pop
pop
icebp
sub
mov
jno
xchg
cmp
push
xor
mov
or
inc
jnp
inc
jmp
adc
out
jnp
push
cmp
push
fsub
test
ss
out
bnd
out
pop
or
add
add
mov
int
lock
repnz
mov
jg
jno
cwde
dec
dec
rcl
pop
(bad)
dec
xchg
jl
sbb
fldenv
mov
jecxz
mov
fidiv
xlat
dec
loope
scas
xor
push
mov
or
outs
inc
popf
mov
rcl
fsubr
rcl
aam
or
xchg
pushf
xchg
sbb
push
ret
mov
cmp
add
mov
jl
cmp
leave
test
(bad)
pusha
sub
das
pop
push
iret
aaa
sar
lock
aad
aam
xchg
rcr
and
enter
or
std
frstor
lock
popa
push
inc
outs
loopne
icebp
push
std
ins
fs
mov
scas
mov
mov
ss
lods
hlt
sub
xor
add
xor
dec
cmp
pop
iret
jb
mov
ins
nop
add
push
loope
mov
sub
js
popf
jmp
push
test
cmp
mov
pop
popa
retf
sub
mov
test
or
repz
sub
and
xor
cmp
cmp
mov
fistp
mov
pop
sub
sbb
out
jle
ret
pop
cmp
and
cmp
mov
mov
push
lock
pusha
sahf
pop
(bad)
out
jbe
(bad)
fst
sbb
xor
and
sub
mov
scas
sub
lods
and
int3
sbb
mov
cmps
jne
mov
or
and
dec
jmp
aad
sbb
aaa
or
fdiv
mov
mov
adc
shl
jle
adc
jno
rcl
xchg
in
jge
mov
push
ds
sub
mov
push
pop
pushf
not
nop
pop
daa
loopne
loope
mov
loope
sbb
call
mov
mul
mov
inc
mov
cli
leave
cmc
lods
test
adc
in
gs
jnp
and
int
out
jb
pop
xchg
je
push
movs
mov
cmp
dec
xor
xor
dec
mov
inc
pop
xchg
mov
(bad)
mov
stos
sub
mov
pop
mov
ds
push
inc
xor
fcomp
cmp
lahf
pop
pop
(bad)
fcomp
ds
jns
sbb
(bad)
push
jne
mov
cmp
icebp
idiv
jp
lock
jg
inc
(bad)
clc
pop
push
call
add
(bad)
rcl
stos
dec
jne
xor
adc
mov
sub
jl
test
stos
in
xor
aaa
test
mov
sbb
inc
ret
dec
gs
xchg
jb
ins
lods
mov
das
aam
icebp
xor
mov
aam
sub
test
call
loope
xchg
pop
ss
xchg
out
mov
adc
xchg
shl
push
mov
pop
mov
sbb
inc
shl
xchg
fadd
xor
jo
stos
jecxz
addr16
cwde
mov
sbb
fdiv
fld
mov
jo
ret
xchg
loop
mov
xchg
fist
nop
or
or
xchg
aaa
xor
mov
test
adc
out
in
cwde
and
rcl
stos
xor
add
(bad)
lds
push
ins
fistp
mov
xchg
loopne
xor
adc
mov
pop
pop
jae
sub
jnp
pop
pusha
fs
cli
push
aas
gs
out
fs
jmp
sti
rcl
xor
inc
movs
out
mov
mov
cmps
xchg
iret
fst
fs
xchg
(bad)
hlt
push
ins
inc
mov
les
fwait
sti
sbb
mov
fistp
pushf
lods
sub
sbb
or
and
xchg
inc
pushf
ror
(bad)
repnz
or
pop
cdq
pusha
cli
jno
movs
sbb
(bad)
repz
mov
mov
popf
inc
movs
icebp
ins
cwde
pop
cs
push
jmp
mov
jp
push
fdiv
ja
repz
popa
sbb
addr16
cmps
enter
cs
stos
xchg
jecxz
(bad)
(bad)
or
or
iret
iret
and
jmp
imul
outs
mov
or
inc
xchg
hlt
mov
push
fs
xchg
inc
mov
sbb
icebp
dec
call
mov
ret
xchg
stos
pop
and
repnz
scas
pop
fcom
or
xor
int
mov
mov
mov
push
fdiv
cmp
jecxz
jbe
cmp
sti
mov
push
adc
js
(bad)
mov
imul
(bad)
aas
sub
adc
es
add
mov
inc
dec
xlat
lahf
adc
mov
sbb
cmp
lods
pop
ja
(bad)
lea
inc
cmps
fs
jbe
pop
adc
sbb
fdiv
loop
loop
dec
das
addr16
in
repz
movs
push
mov
sub
mov
movs
pop
jg
cmc
sbb
ins
mov
repz
xchg
add
inc
sub
nop
outs
addr16
fidiv
(bad)
div
cmp
push
xchg
test
fidivr
repnz
div
push
add
add
xor
shl
jmp
dec
fst
enter
push
in
dec
int
outs
adc
inc
jae
cmp
push
call
(bad)
loop
adc
adc
lock
xor
push
add
fs
xor
test
dec
ret
dec
and
cmps
fistp
out
xchg
pop
and
icebp
push
mov
sub
adc
sbb
es
pushf
stos
ret
pushf
repnz
lock
leave
shl
xchg
je
aad
mov
jbe
in
fdivr
pop
dec
mov
jae
fs
imul
pusha
jg
rcl
xor
in
xor
cmps
movs
push
lea
dec
inc
popf
or
movs
(bad)
idiv
or
xor
mov
cmc
std
lea
scas
mov
jb
outs
push
test
stos
push
push
jnp
push
and
test
daa
or
push
retf
retf
cwde
push
jecxz
mov
aaa
(bad)
call
xlat
mov
or
inc
xor
mov
outs
das
repnz
rcl
int3
into
shr
lea
push
out
ss
jg
inc
movs
pop
div
shl
pop
mov
bound
jecxz
cmps
scas
cld
mov
stos
jae
xor
mov
push
ret
fucomp
dec
xchg
pop
popf
or
mov
imul
jbe
pop
fimul
xchg
adc
dec
pop
hlt
lock
jge
mov
lods
cmp
pop
dec
shl
cmc
mov
bound
out
mov
int
push
sbb
cmp
int3
mov
icebp
pop
jl
loop
cmp
shl
leave
sbb
fdivrp
adc
jno
stos
jg
cs
cld
test
in
mov
sbb
jmp
dec
adc
fmul
fnsave
or
inc
or
push
adc
outs
sar
inc
(bad)
push
xor
jmp
pop
jecxz
or
add
dec
cmp
adc
stos
inc
cmp
imul
push
imul
push
add
inc
out
fwait
add
jle
push
pop
sbb
es
inc
movs
(bad)
addr16
(bad)
mov
retf
push
and
mov
push
enter
push
mov
mov
dec
xlat
mov
and
gs
stos
sub
dec
jle
stos
ss
jp
push
inc
cmp
mov
fimul
lock
cmp
enter
in
int
or
dec
aaa
aaa
cmp
mov
sbb
jb
and
inc
mov
fucom
dec
fs
xor
pop
fistp
mov
enter
mov
sti
push
sbb
jb
sbb
push
pop
jl
mov
and
dec
ja
pop
xchg
adc
mov
sub
dec
mov
ja
add
retf
jmp
int
xchg
iret
ficom
movs
adc
lods
shl
lea
cmp
rol
cmp
das
sub
add
clc
js
pusha
out
shl
xchg
div
fimul
mov
fwait
mov
cdq
or
iret
pop
les
inc
mov
paddb
test
scas
jns
mov
hlt
sub
fidiv
xlat
inc
add
and
jg
pop
jl
push
in
inc
dec
dec
int3
or
(bad)
pop
sub
jb
or
add
call
es
push
loop
cmp
in
addr16
gs
scas
adc
and
push
dec
xor
jb
jp
mov
jns
loope
or
mov
popf
je
cmps
add
inc
mov
jle
push
leave
fs
sbb
push
(bad)
bound
cmp
lahf
and
(bad)
imul
xchg
stos
jle
adc
pop
lods
arpl
out
or
lahf
inc
mov
xlat
inc
imul
xchg
daa
dec
sub
inc
adc
mov
retf
inc
sub
lea
iret
xchg
cmp
mov
icebp
out
cdq
mov
icebp
arpl
int
iret
inc
cmp
sahf
lgs
add
sub
xor
sub
jmp
aas
imul
les
ror
(bad)
in
bound
xor
arpl
cmc
xchg
sbb
push
aad
aad
mov
mov
lock
pop
mov
scas
sub
pop
int
or
mov
(bad)
lock
stc
ds
ins
xchg
pop
mov
sub
mov
mov
xlat
sti
inc
aam
fidivr
jae
int
fs
fcmovnbe
out
ret
pop
leave
mov
push
sub
sub
jbe
out
nop
or
jo
gs
add
push
pop
movs
xor
fs
adc
lods
js
cli
adc
aas
js
std
out
or
jb
mov
inc
jge
(bad)
sbb
movs
xor
stos
mov
jnp
cmp
pop
push
into
(bad)
arpl
fcmovbe
jns
xchg
jmp
pusha
cmp
mov
cmp
ja
mov
(bad)
dec
or
sbb
adc
pushf
(bad)
adc
fwait
call
ds
outs
sar
movs
fimul
mov
sbb
xchg
pop
mov
inc
inc
wbinvd
dec
outs
inc
icebp
leave
mul
movs
cmp
ins
push
sub
xchg
ret
jmp
add
xchg
xor
jne
psubusw
ds
xor
jge
push
cmp
and
outs
inc
mov
(bad)
in
push
push
add
(bad)
out
mov
cli
pop
or
jmp
cs
(bad)
push
sub
xor
es
mov
xchg
(bad)
sub
push
inc
adc
xchg
cmc
mov
mov
adc
pop
fwait
dec
mov
push
pop
sahf
das
iret
xor
test
sbb
cwde
std
hlt
sbb
ins
mov
call
mov
leave
xchg
inc
jecxz
popf
xchg
retf
aas
dec
pop
mov
sahf
or
cli
or
mov
mov
pop
or
pop
add
pop
mov
(bad)
ficomp
adc
mov
ss
bound
dec
xchg
(bad)
int
(bad)
sbb
cmp
ficom
dec
ds
mov
call
inc
(bad)
sti
std
shl
mov
cmp
push
inc
xor
mov
out
cs
loope
(bad)
push
stc
or
enter
out
mov
or
in
fsubr
imul
adc
mov
sub
push
pop
xchg
push
adc
pop
pop
jle
xchg
add
je
sub
nop
iret
inc
adc
jle
jmp
and
sub
mov
arpl
inc
or
mov
dec
cld
inc
sbb
stos
fimul
fstp
rol
sahf
pop
fstp
test
xor
(bad)
jo
mov
jmp
dec
out
push
sub
and
or
mov
dec
jle
jns
and
out
mov
in
cld
fadd
in
push
fbstp
add
jne
outs
aam
add
pop
dec
pop
and
loop
imul
mov
push
or
or
xor
push
add
mov
mov
test
xor
mov
inc
lods
mov
in
lahf
dec
xor
loope
int
mov
jns
xchg
and
cmp
adc
test
jne
jb
out
scas
inc
push
jno
jo
pop
arpl
(bad)
adc
mov
in
jbe
shl
mov
call
fsub
fiadd
mov
adc
mov
pop
sbb
ret
mov
std
pop
pop
push
dec
ret
dec
and
mov
movs
push
sub
xor
outs
jge
mov
jnp
pusha
fist
xor
or
lock
(bad)
(bad)
ss
add
inc
test
dec
dec
jo
aaa
out
mov
xlat
and
xor
push
les
pop
or
cld
sbb
push
add
out
sub
shl
xchg
(bad)
fldcw
iret
adc
mov
xlat
repz
xchg
push
mov
ins
std
gs
inc
add
pop
hlt
cs
les
inc
cmp
std
pop
add
mov
imul
inc
lahf
iret
push
es
cld
idiv
imul
and
popa
aam
push
fwait
sub
and
gs
ror
fdivr
add
sub
sub
xor
fild
mov
dec
jmp
iret
dec
inc
sti
ins
dec
int
jne
test
inc
cmp
rcr
push
pop
test
pop
shr
js
enter
dec
int
js
aad
loope
jb
push
xchg
xor
hlt
addr16
jbe
sbb
inc
lock
fwait
dec
add
sub
aam
fld
adc
mov
jns
cs
adc
data16
push
push
jno
xor
inc
cmp
cmps
ins
stos
jb
iret
sbb
stos
mov
test
mov
push
sbb
cmp
inc
and
pxor
push
or
fmul
les
jae
pop
mov
das
mov
lock
stc
test
inc
dec
inc
xchg
dec
jmp
arpl
sbb
ds
pop
xchg
inc
fnsave
out
cdq
shl
xchg
or
pop
mov
fisub
mov
(bad)
outs
xchg
in
not
div
je
fwait
cmp
(bad)
sbb
pop
jg
lahf
push
add
sub
pop
cwde
loop
(bad)
rcr
cmps
and
sub
adc
out
rol
(bad)
add
shr
(bad)
clc
dec
jns
or
retf
and
dec
in
push
xor
movs
jmp
mov
sub
test
jo
movs
jle
ret
push
xor
test
movs
(bad)
in
stos
ficomp
inc
dec
movs
gs
(bad)
jg
aas
fild
xchg
inc
pop
mov
(bad)
(bad)
out
mov
stc
jmp
inc
inc
test
add
enter
jae
jae
mov
ret
adc
mov
shr
data16
call
(bad)
clc
mov
xchg
and
dec
cmp
test
mov
shl
sub
fxch
jmp
dec
stos
ret
es
rcr
or
add
rcr
jo
retf
aam
ins
movs
in
(bad)
mov
cmp
outs
int
jmp
dec
sub
cdq
mov
xchg
pop
and
jo
fnstsw
rol
xlat
in
sti
adc
dec
das
mov
push
mov
push
sub
ins
sti
pop
gs
mov
sbb
and
inc
retf
loop
aad
pop
fiadd
mov
cmps
retf
xchg
mov
(bad)
call
push
(bad)
(bad)
mov
add
lods
sub
mov
in
das
outs
das
mov
cmp
add
mov
sub
sbb
jmp
sub
dec
sub
lods
pop
bswap
mov
sub
inc
jmp
lock
out
push
cwde
push
cmc
mov
mov
adc
dec
xchg
repz
(bad)
pop
mov
xor
js
pop
mov
mov
mov
inc
retf
mov
cmps
sbb
mov
les
mov
mov
call
jmp
repz
cmp
jp
jle
pop
dec
mov
popf
mov
xchg
push
pusha
pop
stos
lods
inc
sub
xor
int
stos
imul
mov
mov
int3
in
push
out
neg
jp
test
stos
std
repnz
repnz
int3
push
in
movs
adc
adc
xchg
cmps
mov
rcl
mov
aas
mov
jns
xor
sub
sbb
mov
mov
inc
repz
jmp
ss
hlt
movs
sbb
inc
and
(bad)
lahf
(bad)
outs
inc
mov
jmp
aam
xchg
cmp
and
pop
mov
mov
fs
jbe
xor
mov
jb
in
sub
adc
adc
sub
jmp
and
dec
mov
add
cmc
(bad)
outs
imul
adc
outs
mov
jo
push
fisttp
ror
int
mov
mov
out
xchg
add
int
imul
cs
repnz
retf
xor
pop
and
mov
(bad)
into
hlt
xchg
pop
mov
add
sbb
mov
mov
xchg
in
je
outs
inc
lahf
adc
add
pusha
outs
scas
mov
xchg
push
cmp
jmp
jle
pop
pop
test
push
inc
fsubr
fcom
fimul
pop
xchg
(bad)
in
mov
(bad)
int3
int
ret
pop
and
jb
fs
or
mov
jp
repz
add
push
xor
xchg
sbb
(bad)
and
push
cs
rcl
retf
aad
stos
loope
rcr
push
in
xchg
ficomp
jp
xchg
jg
jle
sub
add
out
pandn
sbb
xchg
data16
cmp
dec
sbb
ret
int
push
or
push
leave
sub
fdivr
aad
pop
gs
ficomp
jno
lock
outs
out
jo
jg
mov
int3
test
adc
gs
dec
inc
pop
cmps
fwait
mov
loope
rcl
inc
out
push
sahf
cdq
mov
fcos
pop
dec
shl
xchg
jg
pop
xchg
add
and
mov
mov
enter
or
scas
pop
retf
push
adc
loop
pop
add
(bad)
loope
or
mov
pop
sbb
outs
pop
aas
jecxz
or
loop
sub
pop
lock
xor
ins
jle
mov
ror
jb
jnp
pop
test
jmp
push
dec
gs
imul
cld
and
movs
cmp
(bad)
sbb
mov
push
repnz
xchg
fadd
test
add
(bad)
jle
add
aaa
loopne
jnp
int
inc
jp
sbb
mov
repnz
xchg
dec
gs
dec
cmp
movs
pop
out
je
pop
xor
sahf
je
test
pop
xchg
mov
push
leave
adc
out
ja
pop
fneni(8087
add
and
out
xor
mov
cli
shr
add
test
rcr
push
lahf
bound
xor
cwde
push
jl
mov
les
pop
xlat
(bad)
movs
push
lds
cld
call
sub
jecxz
or
es
pop
arpl
enter
jp
mov
sub
iret
(bad)
adc
test
mov
mov
mov
inc
lds
mov
in
dec
jbe
or
gs
pusha
outs
mov
stc
push
lock
jae
scas
jne
iret
call
sub
cmp
jmp
sbb
cmps
shl
daa
jmp
xor
loopne
ret
mov
and
fdiv
loopne
popf
push
push
sub
stc
xchg
xchg
dec
punpckhdq
(bad)
xchg
push
mov
imul
fidivr
pop
xor
pop
outs
jge
cmp
adc
xor
mov
push
dec
inc
xor
jne
xor
rol
enter
push
test
pop
sbb
xlat
sub
fprem
sbb
or
mov
jbe
test
ss
outs
push
pop
ins
lods
out
mov
mov
dec
(bad)
cmp
xchg
(bad)
in
pushf
jle
or
xchg
aam
dec
ja
sub
cmp
cli
ja
mov
fwait
into
ret
cwde
pop
(bad)
fcomp
data16
inc
lahf
not
dec
call
fs
pop
rol
or
dec
pop
scas
sbb
cmps
mov
xchg
mov
mov
rol
jno
mov
sbb
lock
and
push
test
mov
stc
sbb
idiv
stos
lahf
mov
xchg
out
or
mov
rcl
xchg
xchg
call
and
inc
movs
addr16
pop
std
mov
into
and
sub
mul
push
arpl
ret
scas
sti
jmp
add
aam
(bad)
gs
pop
fs
inc
pop
jmp
jnp
push
fstp
jp
in
cmp
xor
dec
pop
jle
push
sub
or
dec
sbb
les
and
pop
xchg
neg
push
sbb
enter
push
sbb
push
mov
cwde
cmc
ss
push
dec
data16
mov
pushf
adc
and
(bad)
mov
ins
sbb
jmp
jo
xor
std
xchg
pop
adc
jns
in
leave
je
sub
test
xor
and
sub
mov
mov
leave
aad
scas
das
ret
push
popa
and
cmc
dec
pop
outs
xor
scas
add
xor
adc
stos
(bad)
leave
cwde
add
push
in
bound
cmp
dec
adc
test
cmp
into
and
cmp
push
test
sub
jns
cli
bound
cld
push
ss
fcomip
ficomp
mov
jne
fnstcw
pop
add
ret
ret
test
push
cmp
jge
scas
sub
pop
(bad)
daa
add
push
cwde
mov
out
mov
ss
xor
inc
push
add
sub
dec
les
inc
pop
rcl
dec
jmp
and
or
xchg
inc
xchg
iret
es
pop
sub
aas
add
rol
sahf
call
lods
add
mov
xchg
mov
icebp
pop
xchg
fnstsw
lods
and
inc
mov
mov
xchg
movs
(bad)
xchg
mov
test
and
test
mov
popa
cmp
cmc
dec
inc
inc
arpl
fwait
xlat
mov
cmps
repnz
(bad)
mov
mov
mov
inc
inc
(bad)
add
adc
out
pop
push
ds
or
loop
xchg
dec
(bad)
int
rcr
shl
xor
jo
sbb
inc
pop
call
pushf
sub
jmp
or
je
adc
cli
js
adc
xor
dec
mov
mov
loop
je
rol
push
popf
push
mov
ss
push
daa
push
test
daa
cmc
imul
cmp
add
pop
jbe
mov
(bad)
xchg
mov
or
retf
loop
sbb
rcr
mov
sti
mov
loope
sbb
in
jnp
cmp
pop
jg
push
movs
cdq
adc
xchg
sti
xchg
addr16
jns
or
sub
mov
pop
jmp
movs
sub
dec
add
xor
sahf
sub
es
pop
dec
adc
test
fist
cmovnp
fidiv
test
xchg
cmps
add
repz
movs
fwait
jp
push
(bad)
jmp
jnp
adc
adc
pop
mov
push
repz
popf
push
mov
out
sbb
fisttp
mov
vmread
hlt
add
dec
jg
xor
pop
fwait
jns
pop
xor
fcomp
mov
call
jle
sar
pop
fwait
rcl
in
scas
inc
or
xor
into
lds
and
movs
inc
or
push
enter
stos
pop
sub
test
and
in
sti
xor
add
cmp
les
cmp
cwde
xchg
jne
inc
hlt
mov
add
push
inc
out
mov
in
shl
mov
pop
xchg
in
cmp
cmp
ja
jmp
jmp
ficomp
test
sub
fidiv
movs
mov
in
data16
pop
xor
push
pusha
cwde
stos
push
and
dec
push
gs
sbb
xchg
mov
ret
add
mov
sub
int
adc
add
and
or
cmps
cmps
dec
or
repz
ret
jns
je
fdivr
jo
push
mov
es
push
mov
iret
dec
shl
and
jge
(bad)
and
xchg
mov
imul
pop
dec
push
shl
into
fadd
mov
jnp
(bad)
jmp
cwde
lods
push
inc
into
add
jg
or
minps
ficomp
xchg
sub
ret
icebp
cs
cwde
mov
fiadd
cmp
xor
or
in
mov
push
pop
mov
dec
pop
and
and
retf
add
adc
push
leave
out
ror
das
add
jge
xor
cmp
pop
(bad)
std
fwait
(bad)
add
mov
push
sahf
cli
fdivr
dec
imul
sbb
and
mov
gs
cmps
mov
adc
out
mov
pop
push
loop
int3
mov
mov
fsubp
ja
imul
push
sbb
aas
sub
xchg
fnstsw
out
clc
jno
test
daa
xlat
jb
jno
and
xchg
out
mov
mov
push
sub
into
fimul
dec
xor
icebp
(bad)
pushf
mov
sub
jne
lods
pop
fs
push
push
mov
stos
sahf
int
xor
xchg
jae
imul
push
clc
scas
xchg
mov
cdq
push
nop
adc
test
mov
xor
mov
xor
xchg
in
ins
push
push
pop
lods
xor
push
jg
mov
sbb
mov
call
mov
xor
xchg
push
sar
dec
pop
outs
cwde
dec
into
mov
leave
pop
shr
add
lea
fadd
dec
adc
sbb
add
bound
dec
dec
xchg
push
add
jmp
lods
daa
ss
cli
cmps
cmp
push
jmp
js
adc
ret
lock
jle
cmps
fsub
add
push
fdivr
gs
push
out
enter
aas
mov
xchg
pop
out
je
sub
ins
ja
push
not
and
or
(bad)
fistp
push
cwde
cmp
xchg
pushf
mov
pop
mov
xchg
es
in
add
sti
mov
push
dec
mov
(bad)
or
imul
mov
mov
mov
inc
sbb
mul
jb
je
pop
sub
outs
data16
mov
sbb
or
cmps
fisttp
adc
push
hlt
mov
retf
iret
enter
sar
rcr
cld
xor
popf
sbb
sar
mov
call
test
xor
xor
push
inc
(bad)
adc
(bad)
shl
xor
dec
or
xchg
mov
outs
xchg
ss
add
or
sub
scas
pop
inc
adc
xchg
enter
out
test
repz
or
addr16
mov
ds
push
adc
jne
into
pushf
push
call
imul
mov
jno
jp
movs
popa
lods
mov
xchg
cmp
ss
cmc
mov
xchg
bound
fnstsw
shl
in
movs
call
cmp
fisubr
call
sahf
mov
mov
mov
mov
xchg
clc
cmps
ffreep
sbb
int3
lods
pop
repz
stos
fst
(bad)
stc
std
mov
sti
(bad)
cmp
cdq
mov
(bad)
fidiv
ret
push
inc
shr
outs
movs
je
aad
inc
add
jno
jno
ret
push
adc
leave
in
popa
and
shl
xchg
dec
mov
outs
mov
mov
jl
je
jnp
mov
cs
push
in
pop
setno
sub
sti
adc
lahf
jle
in
in
push
(bad)
sub
(bad)
leave
and
ins
(bad)
iret
push
inc
pop
xchg
sahf
cli
or
push
mov
test
cli
in
and
dec
movs
leave
adc
fidivr
mov
sbb
je
enter
push
mov
push
cmps
jno
sbb
jl
rcr
xchg
adc
xchg
daa
cmp
inc
lock
repz
inc
jl
ja
mov
gs
dec
cmp
bound
or
ficomp
cmp
cmp
ret
pop
pop
pop
xor
dec
dec
jg
add
and
dec
repz
xchg
test
jno
shl
adc
test
push
pop
sahf
fs
adc
dec
pop
jl
popa
pop
adc
cmp
aad
out
push
jp
adc
pop
and
and
or
sahf
adc
mov
popa
mov
lahf
push
icebp
fistp
dec
mov
mul
jae
shr
adc
rcl
(bad)
and
pop
scas
mov
call
mov
or
leave
xchg
xor
(bad)
mov
movs
ds
push
push
aam
jno
std
inc
dec
ret
mov
jnp
mov
movs
sbb
repz
xor
rol
dec
cmp
out
(bad)
adc
dec
(bad)
sbb
mov
push
sub
xchg
add
fcomi
or
mov
push
and
cmp
push
adc
scas
mov
(bad)
addr16
inc
mov
mov
test
retf
outs
jmp
inc
mov
sbb
mov
jne
not
(bad)
std
outs
lea
call
pop
data16
out
jb
scas
mov
add
mov
cmps
or
adc
push
dec
push
rcl
imul
jnp
sub
push
push
je
mov
inc
mov
repz
push
lods
mov
stos
retf
aam
not
cwde
cs
or
push
push
cmp
pop
cmp
push
pop
int
xchg
mov
or
push
sbb
push
aas
cmp
call
jmp
jmp
add
movs
retf
jecxz
shr
mov
dec
dec
call
mov
(bad)
push
jge
push
inc
sub
scas
popf
cmp
maxps
into
adc
fwait
sbb
adc
sub
mov
outs
daa
retf
sbb
jnp
xlat
mov
or
inc
and
sbb
je
icebp
daa
mov
mov
repz
dec
mov
bound
pop
fwait
add
aam
adc
adc
(bad)
test
cmp
(bad)
in
int
in
bound
jbe
ins
pop
loope
ins
and
jae
push
xchg
clc
fisubr
popa
cmps
jmp
sbb
sti
jl
sub
xchg
sub
test
jno
fdiv
stos
shr
les
adc
inc
push
pop
mov
xor
daa
mov
jle
adc
push
loopne
in
push
aas
out
icebp
dec
push
mov
jbe
cwde
outs
mov
mov
cs
xchg
inc
sub
out
xor
iret
jecxz
adc
stc
mov
xor
pushf
dec
jns
pop
(bad)
mov
mov
cwde
cmps
or
jbe
(bad)
jne
nop
inc
sbb
call
xchg
(bad)
mov
pop
in
cli
fnstcw
sbb
(bad)
sbb
ins
fdiv
jl
jp
loope
(bad)
mov
mov
test
pop
mov
cmp
popf
imul
imul
shl
cmps
mov
or
pushf
(bad)
out
sti
push
aas
in
daa
enter
(bad)
sub
sahf
in
out
test
mov
les
in
out
add
xor
adc
mov
mov
mov
stos
or
mov
jo
adc
pop
inc
imul
pop
(bad)
jg
add
mov
aam
xchg
xor
in
mov
out
pusha
push
fsubr
adc
rcl
cmp
fs
push
dec
pop
cmp
(bad)
mov
xchg
std
jns
dec
xchg
fdivrp
inc
dec
in
rcl
out
xchg
sub
pop
push
jo
(bad)
jbe
push
retf
pushf
ret
out
push
add
inc
sbb
nop
pop
test
loope
dec
pop
inc
mov
pop
cmp
mov
cli
push
ja
retf
movs
fisub
clc
shr
loope
and
ret
out
sti
cmp
or
fcom
xchg
xor
out
and
dec
or
mov
cmp
arpl
cmp
xor
add
or
icebp
ret
add
and
mov
xor
mov
cli
sub
jle
shl
or
xchg
sbb
jne
lahf
cmp
(bad)
ss
mov
and
mov
and
and
dec
aaa
pop
(bad)
and
or
js
jne
cld
jne
mov
dec
shl
adc
xchg
popf
test
jns
in
in
scas
adc
jno
fwait
movs
jmp
ret
pop
and
pop
push
sbb
xor
and
jmp
mov
mov
retf
mov
adc
shr
out
mov
out
lahf
xchg
rol
mov
sub
mov
ja
mov
sub
jg
xor
out
push
push
sbb
vmread
test
ds
int3
shr
cmp
cs
sbb
jnp
test
idiv
xchg
mov
mov
sbb
aad
or
or
hlt
push
shl
imul
out
mov
jecxz
cld
call
pop
xchg
in
fist
inc
xor
in
ss
movs
sbb
mov
xor
(bad)
xchg
int
push
xor
pop
dec
dec
les
jb
into
pop
cld
cs
loop
mov
(bad)
sub
adc
daa
pop
xor
xchg
mov
pop
cwde
inc
icebp
sbb
rcl
inc
and
pop
loopne
fadd
clc
lods
cmp
dec
sbb
jb
retf
mov
jo
jbe
and
xchg
jmp
mov
xlat
ss
sbb
add
push
xor
daa
imul
jno
int3
dec
adc
add
push
jmp
(bad)
inc
pop
push
pop
clc
(bad)
jmp
movs
jmp
sbb
out
mov
out
pop
mov
pop
dec
sbb
div
scas
pop
mov
jp
retf
add
outs
mov
sbb
ins
loop
dec
xor
std
push
add
iret
mov
arpl
mov
cmp
retf
dec
fdiv
xor
sbb
int3
and
iret
xor
xlat
(bad)
imul
xchg
daa
lock
fsub
dec
fcomp
(bad)
cmp
jp
xor
das
(bad)
cmps
sbb
cmp
pusha
sub
dec
and
xchg
push
add
nop
cmp
jb
dec
or
ret
dec
jbe
cmp
or
mov
pop
inc
sti
cmps
push
clc
sbb
int
mov
retf
into
icebp
repnz
loope
rcr
sar
loope
jmp
xchg
inc
movs
daa
cli
mov
cmp
pop
gs
jb
repz
jmp
scas
sahf
pop
js
pop
lea
icebp
cmps
out
in
push
adc
sub
adc
call
xchg
jmp
out
mov
jmp
add
jae
or
pop
shr
ins
push
je
push
push
int3
add
ficomp
out
arpl
cmp
cmc
jge
pop
cmps
jns
fsub
mov
(bad)
xchg
out
add
ret
imul
fisub
jne
out
pop
push
and
bound
push
sub
adc
cli
or
sbb
shl
xor
xchg
mov
mov
dec
ja
(bad)
lods
xor
push
cmc
jo
mov
or
mov
int3
dec
cs
enter
and
mov
mov
scas
xchg
das
jae
adc
mov
xchg
inc
and
lods
dec
scas
and
adc
pop
xor
dec
test
cmp
jp
adc
cdq
sub
outs
add
test
pop
sti
jg
sbb
dec
je
and
jmp
push
mov
inc
loop
pop
mov
jge
inc
aaa
pop
(bad)
jb
int3
imul
push
sbb
and
sub
adc
mov
sbb
movs
and
fdivr
imul
and
inc
add
push
or
and
bound
mov
out
mov
xor
jg
sar
cmp
retf
dec
dec
xor
repnz
sub
jecxz
fiadd
and
pop
sti
or
(bad)
outs
out
movq
lods
retf
retf
std
dec
jbe
xchg
stos
mov
mov
jge
push
neg
jns
inc
(bad)
jmp
adc
xor
cmp
aad
mul
fstp
clc
lahf
xchg
dec
or
(bad)
adc
mov
mov
add
in
jns
fld
arpl
sbb
adc
adc
xchg
fisub
out
rcr
nop
lock
jnp
call
sub
cmc
sahf
mov
xchg
jmp
sbb
out
or
movs
mov
loope
enter
jl
fs
imul
inc
sub
add
icebp
inc
cmc
loop
lds
leave
or
aas
push
stos
dec
sub
scas
inc
in
inc
loope
mov
sbb
fwait
jae
xor
cli
fldcw
movs
stos
outs
pop
repz
jge
push
inc
repz
or
out
scas
sub
movs
add
dec
mov
jo
int3
call
into
lds
aas
lods
jp
adc
mov
xchg
in
or
mov
push
in
es
mov
(bad)
in
out
inc
or
ins
adc
ret
and
adc
add
test
adc
push
pusha
and
lock
pop
cld
push
adc
push
sub
mov
or
in
add
dec
nop
shl
mov
mov
or
fstp
xor
(bad)
sti
mov
mov
retf
mov
addr16
jmp
or
dec
add
jg
adc
mov
(bad)
test
lods
sub
ja
popa
cmp
jle
pop
xor
aas
adc
shl
lods
push
imul
icebp
enter
mov
mov
daa
push
mov
repnz
xchg
add
(bad)
xchg
pop
add
sti
pop
adc
jle
shl
jae
test
sub
lds
retf
stc
adc
xchg
test
jg
into
add
out
leave
outs
into
or
into
into
in
jmp
enter
in
fcmovbe
aad
mov
shl
lock
out
and
fidivr
stos
inc
inc
ror
inc
mov
and
repz
xchg
push
imul
adc
mov
cmc
cmp
cmp
lods
jmp
and
xor
mov
mov
test
stos
cmp
sbb
fst
xchg
(bad)
sub
cmps
sub
cmp
dec
jae
fwait
adc
add
lods
dec
xor
inc
dec
push
sbb
cmp
sbb
xor
fsub
cmp
std
push
push
imul
neg
bound
push
inc
xchg
adc
inc
sbb
dec
enter
sbb
add
call
push
outs
lods
jne
mov
pop
xchg
xchg
mov
outs
lock
mov
out
int3
add
aam
not
cld
mov
das
enter
push
adc
xor
mov
sub
popa
retf
test
jne
iret
pop
or
out
push
jns
rcr
sbb
fcom
push
sbb
mov
xor
push
push
clc
xchg
xchg
jge
adc
dec
pop
xchg
nop
and
pop
mov
pop
cmp
mov
inc
jmp
cld
push
push
jbe
test
lds
repz
xchg
push
add
in
ds
fist
adc
inc
js
sahf
cmp
ret
adc
cmp
add
or
jg
clc
push
int3
ss
add
mov
lds
adc
mov
imul
sbb
(bad)
mov
leave
push
pop
push
rcpps
sbb
jo
or
jns
or
shr
call
je
add
adc
lds
test
in
dec
sub
and
icebp
pop
out
push
pop
xor
inc
push
dec
int
mov
popf
je
ja
sahf
or
cmp
pop
mov
mov
and
inc
(bad)
push
bnd
ret
sub
push
mov
sub
mov
push
out
sbb
adc
aad
pop
mov
adc
dec
mov
or
pop
adc
xlat
adc
int
cmps
sbb
fimul
push
jbe
jne
jne
fidivr
stos
push
jne
fisub
xchg
cli
sub
xor
adc
retf
and
leave
neg
jg
inc
in
aam
pop
sub
or
daa
into
out
and
arpl
pop
or
or
cmp
inc
cdq
repz
add
fidiv
mov
pusha
leave
aaa
or
loope
or
ror
hlt
into
test
loopne
mov
lods
fisub
dec
mov
cmp
mov
enter
aas
jne
fwait
rcl
jbe
mov
lock
push
xchg
je
pop
push
(bad)
hlt
dec
mov
xchg
or
mov
scas
xchg
outs
mov
rcl
xchg
scas
neg
jmp
test
mov
scas
repz
and
fisubr
fld
scas
xchg
lahf
lock
sub
rcr
dec
inc
cli
push
mov
add
and
mov
outs
push
call
push
xchg
jecxz
mov
sbb
push
or
bound
xchg
xchg
mov
(bad)
mov
adc
mov
xchg
mov
retf
fdiv
push
ins
dec
in
xchg
sub
mov
mov
leave
adc
mov
sub
hlt
fild
pop
add
cwde
mov
push
stos
or
add
fbstp
xor
push
mov
sub
jno
mov
movs
leave
xor
ins
pop
sahf
xlat
xor
js
push
dec
mov
stos
mov
icebp
or
jmp
shl
push
sub
shl
add
push
jg
mov
xchg
aam
jmp
jae
std
scas
imul
mov
sub
or
leave
sub
dec
leave
cmp
sub
jg
pop
call
or
inc
or
clc
jl
rol
fcom
aad
cmp
xor
sub
adc
les
inc
loope
jnp
std
cmp
sbb
xchg
add
mov
and
(bad)
stc
xchg
lods
push
or
stos
mov
imul
mov
aam
jle
xlat
jb
call
bound
out
inc
dec
js
xchg
pop
inc
call
data16
sub
sub
loope
movs
cmp
arpl
out
mov
call
mov
sbb
(bad)
stc
cmp
xor
outs
mov
sti
dec
imul
xchg
cwde
ja
adc
mov
mov
adc
sub
inc
jb
rol
shr
lock
add
call
dec
cmp
in
push
xor
dec
idiv
movs
(bad)
add
retf
les
(bad)
push
div
cmp
xchg
scas
pop
jge
pop
loop
xchg
sti
mov
cs
repz
loopne
daa
scas
popf
xor
cld
fstp
ret
mov
and
int3
mov
lock
xchg
pop
xor
push
sub
cpuid
popa
lds
fist
dec
jp
mov
je
in
ds
adc
shl
xor
js
leave
fs
adc
mov
fnstcw
dec
or
aad
std
lods
fwait
mov
xor
fiadd
xchg
jl
ins
add
sub
mov
and
scas
pushf
leave
mov
lahf
daa
xchg
mov
jne
dec
or
add
cmp
or
(bad)
push
jl
gs
imul
sub
push
mov
shl
aad
ja
jp
or
cmp
sahf
xchg
fnclex
dec
icebp
xlat
hlt
test
rep
jae
push
ins
mov
cmp
rcl
(bad)
in
xor
xchg
aas
movs
mov
mov
mov
jb
fcmove
cdq
popa
leave
(bad)
test
cmp
call
shl
(bad)
rcl
xchg
dec
add
cwde
leave
push
std
fcomip
lahf
jg
inc
(bad)
fnstcw
ss
icebp
retf
pop
xchg
xchg
jae
cmps
test
xor
sbb
push
inc
jne
fistp
outs
mov
pop
mov
mov
(bad)
les
cli
mov
imul
inc
cs
mov
xor
scas
inc
inc
out
jmp
push
scas
inc
pop
imul
xchg
in
jo
sub
cmps
icebp
fistp
fwait
out
sbb
xlat
loopne
jle
xor
or
inc
leave
mov
cmp
add
sub
dec
sub
scas
shr
(bad)
sbb
pop
push
cli
mov
push
loop
cld
xchg
jnp
inc
scas
pop
dec
or
ja
push
in
inc
aad
mov
push
in
and
mov
pop
js
sbb
sub
dec
outs
cmp
pop
add
cmc
test
(bad)
jne
pushf
pop
cmp
push
or
and
je
xchg
fstp
mov
call
xor
cs
cmp
jmp
push
or
arpl
pusha
xchg
dec
sub
sub
ror
push
(bad)
(bad)
xor
dec
adc
sti
outs
call
addr16
ins
clc
test
push
pop
jo
or
outs
dec
xor
mov
dec
dec
jg
ret
scas
ins
hlt
in
push
jae
push
cld
pop
dec
jns
mov
cdq
mov
adc
out
mov
and
shr
mov
mov
xchg
push
xchg
cmp
aaa
mov
jl
jge
test
mov
adc
in
lods
mov
enter
cdq
pop
test
mov
push
inc
clc
stc
into
ds
mov
sbb
xor
jp
fcomp
inc
js
rcr
mov
jnp
sbb
adc
add
scas
shl
ins
inc
xor
push
push
out
gs
mov
mov
outs
push
cmps
mov
xor
add
push
add
jno
mov
jne
aad
xor
cmc
lahf
into
ds
sub
jge
sbb
repz
hlt
imul
sti
sub
ret
repz
sub
fistp
adc
call
mov
mov
and
shl
pop
aas
out
push
call
icebp
push
int
xchg
ds
(bad)
fwait
dec
dec
push
jl
bound
(bad)
push
imul
jge
sbb
in
scas
(bad)
jbe
mov
add
sbb
retf
and
push
sbb
sti
xchg
sbb
icebp
aam
jp
stos
pop
dec
xchg
ret
mov
sub
push
(bad)
(bad)
sbb
inc
add
daa
enter
cmp
pushf
mov
jno
xlat
pop
xchg
ins
popa
out
imul
es
sub
inc
stos
leave
rol
aad
cmp
bound
fmul
es
jecxz
popf
jmp
jg
inc
stos
xchg
lock
xor
outs
or
fld
pop
cli
xor
sbb
(bad)
mov
fbld
dec
xlat
pop
pop
inc
movs
and
ror
enter
lock
and
jecxz
mul
cmp
hlt
push
out
xor
stc
dec
ret
or
jle
cmps
call
rol
neg
inc
inc
sti
sub
and
rcl
retf
adc
mov
add
outs
jo
jae
lods
dec
sbb
jmp
daa
loop
shr
in
retf
out
mul
mov
jae
or
pop
pop
xor
dec
or
test
jmp
ficom
lods
idiv
sub
jge
mov
pop
add
mov
and
cwde
cmp
mov
adc
dec
fsub
pop
pop
or
inc
aaa
mov
ror
xor
ror
sbb
inc
dec
jmp
mov
cld
into
lock
mov
jo
mov
mov
cwde
out
rol
mov
adc
mov
jl
outs
dec
xor
jb
rol
add
js
mov
and
xchg
jo
adc
(bad)
aam
cmc
push
mov
mov
mov
add
fisttp
mov
sub
pop
jp
(bad)
and
jge
in
stos
gs
mov
es
pop
retf
shl
jbe
xor
cli
xchg
push
inc
and
icebp
xor
and
aam
xor
inc
fcmovnu
mov
je
or
outs
sub
mov
ret
sbb
loop
sbb
cs
inc
mov
or
jle
int
and
add
into
sbb
loope
les
std
ss
icebp
and
out
xor
sbb
(bad)
jnp
cmps
sti
cmp
push
inc
mov
dec
mov
pop
sahf
xchg
sbb
xchg
cmp
adc
sbb
shr
gs
in
jg
inc
lahf
ret
and
adc
sbb
cmc
sub
xchg
dec
lods
(bad)
lods
nop
and
daa
(bad)
push
leave
retf
or
push
mov
push
inc
stos
inc
mov
dec
jae
adc
push
rol
fs
dec
sub
outs
in
int
sar
add
and
xchg
stos
neg
xchg
(bad)
(bad)
jle
cmp
repnz
dec
and
rcr
mov
mov
cmp
icebp
dec
movs
dec
jb
shr
jo
push
add
cmova
test
pop
or
sub
in
fdiv
cmps
retf
(bad)
fdiv
repz
push
pop
mov
gs
and
inc
dec
popa
sbb
push
cmp
icebp
xor
ret
mov
adc
sbb
push
leave
aas
not
dec
inc
fnstenv
cli
and
bound
mov
jl
xor
stos
cli
xchg
fcomp
adc
aam
and
std
cmp
rol
sar
xor
xchg
add
xor
imul
jno
inc
push
jns
imul
mov
push
mov
pushf
lods
fdivr
push
outs
call
clc
ret
iret
mov
out
xchg
test
mov
push
xchg
lods
nop
fidivr
add
xor
jecxz
stos
repz
inc
loop
(bad)
jge
or
lahf
(bad)
pop
fild
push
jmp
cdq
into
pop
(bad)
sub
cmp
(bad)
sbb
adc
inc
shl
mov
add
push
jl
sub
sub
imul
stc
mov
lds
jb
inc
adc
add
sbb
aaa
ret
ins
xchg
mov
dec
sahf
mov
fcom
push
sub
cmp
stos
or
push
add
rcl
pop
lods
loop
ret
fisub
int3
push
rcl
fcom
and
aaa
xchg
call
sahf
push
push
fadd
xor
ret
cmp
icebp
or
scas
(bad)
das
lock
jne
cli
cmp
jcxz
mov
jmp
lds
add
add
jge
inc
jmp
mov
js
mov
lods
fadd
sbb
lock
inc
push
in
cdq
xor
and
outs
push
add
cmp
daa
test
in
ds
xchg
loopne
es
rcr
jno
mov
lods
ficom
cld
adc
stos
cdq
pop
adc
fsub
or
and
inc
loop
cmp
test
sbb
sar
sub
jb
push
fmulp
dec
out
daa
mov
or
ja
mov
sub
mov
dec
nop
rcr
nop
push
adc
jns
das
xchg
pop
jecxz
pop
loop
pop
aaa
and
jmp
jno
xor
jmp
push
adc
pop
jle
dec
push
push
pop
popf
xor
jg
xchg
mov
mov
lds
mov
and
adc
into
aad
(bad)
push
sar
mov
xchg
or
or
iret
add
cmp
rcl
aam
pop
jnp
push
gs
jge
dec
in
in
jo
dec
or
xor
ins
out
jb
sub
es
jmp
fucomip
out
pop
dec
xor
fdivr
shl
mov
xor
fidiv
push
xor
lock
call
xchg
mov
jbe
imul
sub
(bad)
jge
movs
(bad)
mov
loop
jbe
dec
adc
mov
pop
xchg
inc
dec
cmp
mov
scas
push
sbb
out
(bad)
fsubr
pop
pop
mov
sub
aad
jge
shr
fcomp
test
ret
mul
sub
mov
pusha
test
mov
mov
mov
shl
into
movs
inc
rol
xchg
shr
bound
jmp
pop
mov
cmps
imul
pop
cwde
jp
push
sbb
popa
mov
movs
aas
jmp
mov
mov
push
pop
adc
in
push
jnp
cmps
sbb
fmul
jge
int3
sbb
iret
dec
push
loopne
xchg
or
pop
mov
data16
out
jnp
ret
mov
jg
jns
outs
pop
test
pushf
das
jne
or
popa
sbb
aaa
mov
fwait
pop
jne
cmp
sar
loop
sbb
mov
hlt
sub
mov
push
std
std
inc
jae
aam
push
xchg
cdq
test
mov
dec
ficom
xchg
retf
dec
xor
(bad)
lahf
pop
dec
mov
fiadd
lahf
jecxz
pusha
pop
(bad)
aam
push
pop
mov
sub
je
jmp
cli
(bad)
hlt
stos
jo
pop
into
ins
push
imul
int
stc
imul
cmp
xchg
and
cdq
dec
pop
jmp
aas
call
mov
or
xchg
xchg
push
sub
mov
call
data16
imul
xor
push
mov
(bad)
addr16
mov
test
arpl
(bad)
cmp
lds
aas
xlat
call
leave
jb
cwde
pop
hlt
(bad)
pushf
sub
nop
mov
sbb
fld
aas
add
dec
xor
cmp
mov
js
mov
int
lock
push
fiadd
mov
push
sub
pop
scas
lods
into
mov
pop
in
call
lea
dec
inc
stos
sub
and
mov
cmps
jg
inc
jg
xchg
in
xchg
pop
test
imul
imul
pushf
(bad)
cmps
imul
mov
stos
scas
jo
jbe
jb
xchg
scas
or
push
pop
mov
mov
pcmpgtd
jae
in
xor
jae
data16
adc
xor
rcr
or
(bad)
mov
leave
mov
xor
or
clc
push
gs
test
cwde
sub
dec
adc
lods
and
dec
sti
pop
lahf
cmp
pop
push
shl
outs
xor
xlat
mov
lods
xlat
cli
shl
and
(bad)
sub
loop
cdq
fiadd
call
clc
xchg
dec
push
jg
hlt
cmp
stos
and
enter
adc
nop
imul
and
popf
jp
mov
inc
push
lods
repnz
xchg
pop
fbld
leave
sar
mov
pop
sub
jae
push
xchg
icebp
add
adc
dec
pop
push
sub
push
xor
mov
fmul
adc
mov
dec
ins
mov
adc
xchg
(bad)
cmp
sub
jl
mov
psubsb
cmp
in
add
iret
je
inc
pop
mov
js
dec
or
xchg
cmps
dec
push
mov
ja
leave
mov
cmp
mov
mov
xchg
and
icebp
sti
inc
mov
jo
cdq
mov
jle
sbb
retf
(bad)
and
or
pop
(bad)
dec
neg
lea
inc
aad
jbe
fadd
push
xor
lea
mov
inc
xor
mov
(bad)
sub
jns
ret
mov
adc
push
add
xchg
adc
ret
dec
enter
outs
adc
pop
scas
xor
xlat
jbe
and
test
lds
outs
xchg
aas
cmc
test
sbb
hlt
out
icebp
mov
scas
ret
mov
data16
jo
inc
or
std
sub
test
mov
jecxz
pushf
inc
ficomp
loopne
inc
mov
sar
sbb
xchg
movs
dec
in
mov
ins
push
lds
sahf
movs
inc
or
rol
(bad)
enter
jbe
mov
ret
mov
cmp
jae
and
sub
xchg
push
popa
out
leave
sbb
jmp
imul
sahf
jno
sbb
mov
adc
sub
sbb
neg
or
jnp
test
lahf
inc
pusha
(bad)
mov
and
iret
inc
adc
psllw
mov
cld
pop
ficom
(bad)
pop
adc
mov
inc
stc
test
je
nop
data16
pop
mov
imul
push
dec
fcom
ins
sbb
aad
popa
inc
pop
call
sbb
hlt
lds
dec
fsubrp
xchg
ds
cmp
inc
jno
retf
xlat
clc
mov
out
or
fidiv
pop
movs
mov
xchg
xor
jno
inc
jmp
fldcw
outs
mov
mov
sbb
sub
aad
dec
and
or
pop
xchg
test
pop
test
sub
ja
mov
arpl
push
cli
inc
call
in
cdq
jae
das
fst
sbb
xor
fstp
and
gs
scas
ss
retf
push
(bad)
test
in
ja
cld
repz
cmp
mov
fild
cwde
jo
sub
popf
ret
sti
into
inc
jae
fdivr
and
add
dec
pop
fwait
jmp
dec
sbb
lahf
add
pop
loopne
call
or
cmp
pop
or
mov
pop
daa
xor
xchg
sti
add
and
adc
ds
pop
pop
iret
adc
jmpw
dec
test
outs
popf
cmp
dec
dec
mov
out
pop
fild
test
fdivr
loopne
cmp
(bad)
sbb
in
shl
(bad)
loopne
call
out
repz
push
sahf
jnp
sub
in
add
adc
sbb
xor
push
xchg
pop
mov
scas
sub
or
pop
shl
imul
sti
nop
xor
stos
adc
fild
push
nop
scas
retf
pop
add
shl
idiv
push
inc
std
add
ins
fsubr
inc
jge
(bad)
call
push
dec
push
xchg
inc
pop
(bad)
jecxz
inc
clc
mov
xchg
in
repnz
ror
mov
mov
cmps
lods
or
xchg
mov
call
mov
mov
mov
xchg
ins
data16
xchg
push
xlat
jmp
mov
cmc
mov
push
fistp
and
fstp
mov
xchg
add
push
fdiv
push
dec
arpl
jmp
sar
xchg
push
mov
push
mov
cmp
cmp
sub
mov
inc
or
retf
fadd
inc
(bad)
lahf
xchg
mov
xchg
int
and
lds
cmp
push
les
(bad)
loope
sub
movs
inc
stos
add
hlt
popf
push
mov
out
stos
mov
fscale
pop
das
loope
dec
sar
bound
ds
sbb
sbb
es
outs
nop
push
out
push
or
mov
int
ins
addr16
inc
jle
jns
movs
dec
rcl
sbb
mov
push
inc
call
sbb
(bad)
stc
jae
mov
ror
cs
cmp
popf
imul
pop
cli
push
jo
popa
mov
(bad)
push
lock
cmps
dec
ret
int3
sbb
mov
mov
jb
xor
adc
mov
dec
mov
in
loopne
fcmovnb
jnp
popa
test
loop
jb
xor
jmp
fstp
ja
or
mov
push
xor
mov
(bad)
mov
add
mov
add
idiv
sub
push
jmp
pop
not
sbb
push
ds
movs
int
push
sub
test
jp
and
mov
xchg
out
inc
lds
dec
jb
mov
inc
add
mov
push
jae
and
mov
(bad)
mov
mov
push
(bad)
cmp
mov
std
xchg
mov
mov
pop
mov
dec
je
mov
mov
inc
push
sti
es
repz
xlat
xchg
ds
repnz
gs
jb
loope
daa
sti
mov
loopne
test
inc
scas
xor
push
aaa
xor
in
mov
fisub
bound
adc
mov
test
out
arpl
cmp
xchg
sub
repnz
jns
pop
xchg
mov
int
ds
and
imul
pop
cmp
cmp
sbb
push
fistp
std
cmc
jge
mov
div
xchg
add
mov
push
inc
cmp
fadd
scas
lahf
or
mov
and
xchg
fld
mov
jne
outs
loope
scas
sbb
out
shl
push
popa
pop
daa
xchg
test
sar
dec
sub
adc
xchg
xchg
add
push
fs
test
ins
and
(bad)
inc
in
lsl
or
ja
sub
das
sbb
adc
fwait
dec
ins
(bad)
gs
(bad)
aam
movs
and
push
or
xor
call
ss
push
mov
mov
push
popa
ret
out
mov
pop
push
mov
push
jb
mov
mov
sub
jno
mov
jmp
dec
push
cmp
pushf
imul
or
stc
add
pop
jnp
ficomp
das
(bad)
aad
mov
ret
inc
inc
test
push
sbb
mov
stos
(bad)
stc
mov
push
jecxz
jb
rcr
fisttp
cmc
add
sbb
cmps
adc
mov
inc
dec
inc
es
and
push
push
cmp
int3
mov
jnp
push
dec
mov
jnp
jbe
push
dec
jnp
adc
and
jle
jo
popf
ret
aaa
fcomp
xchg
repz
mov
jbe
cmps
adc
mov
mov
adc
adc
mov
xor
push
xchg
int
pop
fdivp
xchg
mov
sub
sbb
test
jge
pop
pop
icebp
imul
hlt
mov
ins
mov
and
loopne
pop
mov
push
test
mov
mov
fnstenv
xchg
sahf
clc
std
ins
inc
and
sbb
sbb
push
repnz
scas
icebp
fwait
or
pop
adc
mov
jmp
shl
into
scas
cmps
(bad)
das
js
arpl
shr
jl
xchg
outs
pushf
retf
dec
sbb
cld
aaa
lea
xchg
(bad)
adc
inc
pop
lds
mov
jo
lods
retf
sub
mov
and
stos
xor
lods
cwde
test
scas
rcr
sub
loop
mov
pop
or
das
fdivr
test
xor
cmc
mov
dec
push
(bad)
shl
mov
xor
aad
je
xchg
jno
loop
cmp
mov
add
nop
mov
xchg
jge
call
fwait
mov
jg
xchg
out
mov
push
leave
or
cdq
inc
mov
aad
int
pop
inc
sub
mov
mov
jo
in
nop
mov
cmp
mov
adc
call
and
iret
int3
sub
mov
out
jo
sub
pop
mov
mov
inc
inc
movs
lds
sbb
repnz
leave
(bad)
and
jle
out
push
das
rol
push
jl
mov
mov
jnp
or
nop
ds
xchg
(bad)
xor
adc
data16
add
retf
xchg
pop
icebp
push
outs
lea
inc
into
xchg
push
mov
mov
cmp
and
imul
xchg
rol
adc
or
test
jmp
mov
or
fs
shl
into
enter
daa
mov
sahf
xchg
sub
fidiv
leave
repnz
outs
cmp
mov
movs
xor
inc
sub
mov
jle
adc
mov
sub
in
pop
shl
mov
push
test
jmp
mov
rcl
mov
dec
aam
mov
test
xchg
pusha
push
cmp
mov
in
cmp
out
outs
lods
mov
mov
cwde
enter
push
mov
pop
outs
and
arpl
xchg
adc
xchg
shr
sub
or
in
test
sbb
out
adc
push
loopne
loopne
fisub
mov
test
add
xchg
jae
clc
in
pop
popf
or
dec
mov
mov
test
out
inc
addr16
inc
call
lahf
int3
adc
and
jmp
sub
das
sbb
push
in
cmc
ja
mov
loopne
push
adc
mov
test
add
mov
cli
rcr
mov
mov
mov
rol
imul
rcr
and
push
sti
aaa
(bad)
sbb
sub
cdq
stc
(bad)
sbb
jmp
sub
and
xchg
test
jmp
mov
mov
in
inc
pop
sbb
popf
std
lsl
dec
loopne
lahf
inc
inc
inc
call
sbb
sbb
mov
push
sub
cmps
mov
add
outs
adc
xchg
mov
fsub
ins
gs
push
jno
xor
dec
ins
add
inc
cli
mov
cdq
mov
ins
and
and
imul
imul
ror
sti
(bad)
rcr
int3
in
into
sbb
jmp
add
sbb
and
xchg
mov
xchg
push
xchg
mov
test
fadd
xchg
mov
sar
imul
mov
mov
lahf
ds
jne
push
add
pusha
les
add
pushf
or
sub
out
pop
rol
mov
and
test
cmps
add
jmp
cmps
xchg
or
lea
jge
sbb
xchg
or
aas
push
mov
enter
sbb
fbstp
cmp
shl
sub
fdivr
fmul
push
sbb
mov
pop
out
xchg
jle
icebp
in
jle
dec
add
add
jp
les
or
mov
pop
pop
mov
leave
lea
test
adc
jo
xchg
sub
dec
scas
mov
pop
and
inc
popf
fimul
push
inc
std
sti
stos
iret
mov
call
sbb
xor
stc
es
cs
loopne
aaa
stos
into
xor
pushf
(bad)
mov
mov
call
xchg
cmp
cmp
adc
ror
lahf
mov
cmp
std
shr
icebp
out
cmp
jnp
dec
cmp
or
mov
int3
mov
ja
sub
jne
xor
push
inc
cmp
inc
hlt
fs
cwde
sub
push
movs
sbb
in
in
int3
mov
pop
into
xlat
stos
mov
mov
sti
sub
mov
mov
cwde
jnp
dec
jnp
aaa
inc
loope
pop
and
inc
pop
mov
les
adc
test
push
and
jl
adc
(bad)
out
xor
rol
push
scas
sub
not
or
cs
jmp
loop
adc
mov
xchg
xor
xor
scas
arpl
mov
repz
outs
rcr
popf
shl
aaa
in
push
gs
inc
dec
sbb
outs
sub
cmp
ret
push
jl
dec
int
xor
push
xor
ret
repz
cmp
stos
rcl
sbb
xchg
leave
push
or
sub
test
cmp
adc
dec
or
js
cmps
mov
retf
push
outs
cmc
(bad)
fwait
(bad)
aad
xchg
jno
lea
cmp
scas
sbb
jne
pop
ds
sahf
stos
sbb
in
inc
sahf
dec
and
mov
inc
mov
scas
jns
sub
fwait
sub
in
pop
mov
adc
push
lock
test
rcr
ja
cmp
js
lds
sahf
xor
mov
push
pop
jo
cmc
pop
sub
repnz
ds
add
push
sub
cwde
push
pop
dec
push
xchg
jge
mov
cdq
inc
push
stos
outs
mov
pop
jb
cwde
mov
xchg
cs
mov
call
xchg
imul
push
mov
jo
adc
xchg
or
sar
inc
inc
aas
retf
push
inc
movs
lods
nop
dec
mov
ror
loopne
sub
fstp
in
mov
xchg
dec
jnp
loopne
jmp
push
and
mov
sub
test
fmul
scas
das
xchg
in
sub
pop
cmc
movs
pop
movsx
pop
ret
jg
(bad)
scas
push
cli
popf
jns
int3
test
iret
sahf
or
imul
add
aaa
mov
mov
cmp
xor
cmp
xor
rol
lea
dec
inc
add
lds
adc
xor
dec
inc
add
jecxz
aad
dec
(bad)
sub
retf
clc
movs
xor
loop
dec
(bad)
loope
xchg
lods
cmc
add
sbb
outs
loop
in
sub
scas
ss
dec
cmp
(bad)
call
call
mov
fst
in
int3
push
mov
xor
xchg
dec
pop
mov
pop
mov
xchg
and
mov
dec
fcom
sub
aaa
mov
cwde
test
mov
push
mov
sti
cli
shl
mov
mov
lock
jae
test
fs
int3
fdivr
push
cmps
mov
fst
test
int
fiadd
add
and
jmp
xchg
xor
inc
ins
mov
clc
dec
jne
imul
test
cdq
leave
sub
sbb
je
retf
and
cmp
cmp
(bad)
(bad)
push
pop
shl
adc
ficom
movups
fcomp
ins
leave
mov
add
and
or
mov
mov
aas
pop
into
cmp
mov
lahf
clc
aas
xchg
mov
mov
inc
js
fdivr
mov
ret
shl
sbb
and
jg
das
inc
test
mov
call
mov
rcl
jp
in
js
adc
adc
push
push
add
xchg
and
mov
aas
jb
jmp
mov
js
jecxz
test
(bad)
adc
pop
or
fs
fcom
fisttp
dec
data16
jg
in
(bad)
jecxz
scas
pop
fidiv
pop
aas
sub
std
mov
fmul
dec
mov
ret
mov
or
or
xor
mov
div
adc
std
test
outs
(bad)
fisub
mov
jg
fmul
mov
mov
repz
inc
lods
add
cmps
inc
fadd
imul
jecxz
ret
add
rol
fadd
pop
sub
xchg
dec
fld
loope
add
pop
lea
sub
std
xor
lock
mov
dec
mov
and
cmp
mov
sub
pop
dec
mov
fistp
mov
sbb
sub
push
sub
xor
adc
push
leave
dec
or
sub
daa
test
in
mov
dec
dec
or
dec
adc
jl
mov
push
adc
mov
jecxz
dec
lock
jp
and
test
xor
stos
cmp
mov
test
bound
sub
test
sti
adc
adc
mov
cmp
sub
mov
mov
sub
and
xchg
loope
popf
lods
arpl
or
cmp
or
sti
push
dec
dec
mov
mov
retf
imul
add
test
mov
rcr
cwde
fbstp
out
fsub
dec
xor
sbb
call
dec
add
or
mov
or
in
pop
scas
inc
jecxz
mov
mov
mov
cld
jmp
(bad)
add
push
jbe
je
jo
lods
js
sbb
pop
cs
inc
adc
std
pop
(bad)
(bad)
outs
jge
sbb
imul
in
inc
mov
jbe
dec
push
or
xchg
cmps
dec
push
inc
in
ss
imul
cwde
mov
mov
cmc
fsub
cmp
shl
test
pop
push
pop
jl
mov
aaa
sbb
enter
int
in
dec
fdiv
test
loopne
sti
add
call
dec
lock
scas
xor
jmp
loope
adc
stos
push
mov
cmp
mov
inc
sbb
fwait
(bad)
repnz
pop
and
retf
jmp
and
mov
sub
mov
std
sub
cmp
call
adc
cdq
or
(bad)
lock
or
repz
out
inc
fisub
bnd
xor
je
(bad)
sbb
dec
xchg
mov
rcr
mul
jne
or
int3
sub
ja
shl
xchg
retfw
int
xor
repnz
dec
push
dec
dec
jle
sub
(bad)
pop
adc
jnp
or
js
lock
test
sbb
sub
jl
push
xor
or
outs
adc
jp
dec
popa
dec
sub
retf
repz
imul
xchg
push
jne
inc
mov
mov
sar
rcl
scas
xor
mov
push
aam
repz
jg
push
mov
iret
(bad)
or
jo
hlt
(bad)
push
int3
mov
fldenv
adc
repnz
inc
in
sar
xor
inc
outs
sbb
add
dec
or
imul
add
sbb
repnz
xchg
mov
cmp
xchg
outs
xchg
adc
add
addr16
or
cmc
loop
aaa
int3
push
add
add
cmp
lock
(bad)
(bad)
aam
arpl
jae
mov
out
mov
loope
js
or
pop
int
jge
inc
sbb
test
fild
stos
mov
sub
jae
jns
iret
and
ds
inc
dec
xor
jmp
cwde
mov
call
mov
lods
mov
and
out
jns
xchg
cs
dec
cli
iret
adc
cmp
stc
cmps
jge
dec
mov
pop
daa
jg
cmp
movs
repz
mov
jne
aaa
mov
sar
es
lock
in
jmp
repz
jl
mov
or
ss
xchg
mov
jmp
xchg
mov
dec
xchg
mov
jmp
imul
or
push
jle
push
push
dec
adc
loopne
mov
lds
inc
push
gs
jbe
mov
dec
ret
add
movs
fsub
sub
jl
imul
adc
xchg
imul
stos
push
or
dec
iret
mov
sub
push
xchg
pushf
cmps
xor
stc
mov
xchg
xchg
add
mov
(bad)
and
dec
mov
mov
or
popf
sahf
div
jo
cli
shr
mov
out
ins
std
sbb
int
int
loop
and
push
xchg
push
xor
jmp
fcmovbe
rol
xor
mov
adc
mov
xor
xchg
mov
jo
popf
xor
cmps
out
dec
ss
mov
mov
into
loopne
jns
out
mov
jle
inc
and
pop
in
xor
sbb
mov
mov
(bad)
or
shl
fnstenv
xor
cmp
nop
xor
repz
jmp
loop
inc
adc
sahf
mov
in
lahf
or
push
push
sti
std
je
bnd
in
lahf
imul
mov
movs
push
xchg
fistp
imul
stc
jmp
mov
cli
adc
mov
jmp
bound
lods
bound
jns
lea
gs
cmc
fs
dec
inc
jb
dec
xor
inc
fnop
stc
and
adc
call
mov
test
push
add
(bad)
test
push
(bad)
ja
or
cs
xlat
mov
mov
mov
(bad)
pop
clc
mov
daa
push
jle
scas
out
mov
loope
das
or
pop
add
dec
fwait
xor
xor
dec
adc
push
mov
sub
mov
int
cmp
and
lahf
adc
shl
in
push
fld
dec
mov
repz
fs
in
hlt
daa
jg
out
pop
repnz
sub
idiv
pop
mov
repz
push
inc
mov
das
xchg
cmp
jl
mov
movs
inc
shr
pushf
jno
push
push
mov
cld
rcl
sbb
iret
outs
or
dec
lods
inc
xor
add
hlt
xor
pop
cli
mov
push
ds
add
rcr
(bad)
into
ja
or
sub
add
cmps
lods
call
or
adc
test
(bad)
pusha
int3
sub
sbb
(bad)
call
loopne
mov
mov
xor
jno
outs
in
fcomp
dec
sbb
mov
movs
fwait
add
mov
cmp
pop
lock
ret
pop
arpl
jecxz
jb
or
ja
adc
pop
jae
mov
test
or
sub
mov
or
mov
out
and
lods
dec
daa
inc
leave
xlat
jb
fwait
hlt
and
fistp
test
scas
shl
pop
pushf
sub
loop
xor
jbe
push
jb
cmp
cmps
adc
mov
push
movs
push
inc
push
mulps
fisub
mov
sbb
mov
dec
adc
mov
pop
loope
hlt
and
mov
cmp
call
(bad)
call
jg
push
jmp
test
mov
jne
out
jle
and
(bad)
leave
leave
imul
sbb
ret
dec
and
cmps
xchg
pusha
pop
mov
dec
xchg
pop
cmp
add
cs
mov
fbld
and
sub
mov
ins
or
imul
imul
sbb
jo
add
imul
push
es
test
(bad)
jns
iret
jmp
bound
push
and
into
stos
pop
mov
xchg
adc
jle
push
dec
jne
and
jae
jge
add
shl
jmp
xchg
cmp
add
fild
mov
popa
dec
cdq
xor
pop
call
cmp
and
xchg
pop
dec
mul
jmp
ins
xchg
cmp
mov
lods
jg
push
(bad)
sbb
retf
ins
(bad)
xchg
or
outs
pushf
test
and
js
inc
xchg
xchg
inc
jl
imul
sbb
fwait
jns
aam
sbb
int
xchg
pop
retf
imul
outs
es
push
mov
in
pop
or
(bad)
aad
sub
fstp
ins
xchg
retf
cmp
mov
xchg
jle
and
lods
pop
fidiv
loop
or
dec
mov
mov
popa
adc
das
dec
in
outs
sbb
mov
scas
add
sbb
aad
inc
add
adc
xchg
or
rcl
adc
jp
out
lahf
outs
fwait
outs
mov
dec
push
ficomp
pop
dec
ja
mov
sbb
test
jmp
dec
cmp
fnstenv
inc
inc
hlt
enter
inc
sbb
aaa
adc
jo
or
jg
or
jae
jge
fcmove
sub
jns
pop
inc
or
sbb
jg
sar
arpl
mov
rcr
ret
mov
push
lea
mov
jno
and
aad
mov
int
loop
aaa
mov
jns
es
dec
inc
repnz
pushf
xchg
mov
inc
clc
jbe
cmc
das
and
inc
push
dec
push
add
adc
add
xor
cs
cmps
and
jl
xchg
hlt
add
xor
fwait
test
call
into
loope
retf
inc
add
push
pusha
dec
daa
inc
out
pushf
xchg
addr16
xchg
(bad)
repz
clc
dec
pop
or
jno
push
or
push
jmp
xor
lahf
push
jg
dec
int3
les
add
inc
mov
and
fsubr
mov
scas
jb
mov
ss
fist
retf
pop
clc
or
(bad)
in
cwde
loop
je
ja
popa
cmps
mov
arpl
movs
dec
cmp
outs
sbb
xchg
daa
xor
and
mov
sbb
cmp
jmp
out
addr16
retf
or
xchg
adc
or
cmp
mov
inc
std
push
cmp
out
cli
cmps
sbb
aad
mov
mov
js
xor
xor
xchg
stc
adc
outs
push
inc
mov
xchg
pop
xchg
jge
mov
pop
aam
and
sub
jmp
loop
cwde
push
sbb
pusha
push
ds
gs
int3
pop
mov
shrd
xchg
fsubrp
or
fs
adc
xchg
pop
fcomp
jmp
scas
ret
jmp
add
mov
ret
push
xchg
xchg
add
xchg
xor
dec
mov
test
iret
cmps
int3
lahf
out
push
and
bound
ss
push
or
popf
xor
lds
mov
movs
aaa
sub
int
cmps
test
sub
or
push
leave
pushf
test
data16
stc
scas
push
xchg
inc
cdq
fsubr
pop
or
dec
mov
xchg
(bad)
xchg
add
cmp
dec
xchg
mov
dec
imul
paddsb
loop
sbb
push
mov
hlt
sbb
out
loope
sub
mov
push
lods
retf
adc
pop
loope
mov
push
loop
lds
pop
pop
sub
add
add
inc
mov
pop
fxch
sbb
mov
push
rcl
stos
ja
pusha
mov
mov
add
rcl
fsub
cmp
and
pushf
cmps
retf
fchs
call
call
mov
mov
mov
and
xlat
lahf
inc
popa
adc
pusha
inc
aas
jp
xchg
dec
sbb
add
and
and
aad
xor
pop
test
jge
sbb
das
xlat
gs
sbb
sbb
add
js
sti
loop
push
(bad)
ins
sbb
(bad)
push
mov
jg
jmp
test
mov
iret
in
ds
xchg
pusha
cmp
dec
jne
fsubp
mov
push
mov
jl
xor
push
xchg
hlt
into
stos
xor
je
jmp
out
jno
sbb
out
pushf
jo
rol
ins
popf
push
shl
(bad)
mov
xor
jecxz
in
jecxz
jo
aaa
or
jge
xchg
xchg
arpl
ss
pop
inc
out
call
xchg
dec
sbb
daa
cmc
leave
adc
push
add
cmps
aaa
cmc
aad
add
or
and
ja
ja
add
pop
icebp
sub
xchg
daa
scas
xor
retf
xlat
fwait
and
adc
je
jne
(bad)
sar
xchg
jne
arpl
pop
fldenv
in
test
inc
js
sub
adc
stos
scas
dec
or
in
push
imul
or
ins
outs
fimul
adc
mov
clc
sbb
fisttp
or
pavgb
outs
nop
mov
ins
xor
scas
inc
shl
lds
jecxz
mov
fbld
cmp
pop
mov
dec
je
jmp
cmp
gs
ret
mov
int3
mov
bound
add
bound
mov
lahf
pop
stc
xchg
sub
mov
outs
test
xchg
mov
cmc
fsubr
repnz
into
cmp
xchg
sahf
sub
scas
aaa
add
mov
sub
dec
fisttp
adc
sti
jae
xchg
ins
inc
ds
inc
retf
dec
mov
add
jle
mov
out
sbb
or
js
retf
cmps
test
bound
stos
or
scas
jmp
jge
adc
sub
adc
add
mov
pop
gs
jl
add
cmp
sub
mov
rol
add
cmp
call
jno
rol
cmp
sub
mov
xor
pop
idiv
pusha
test
mov
aaa
arpl
ret
inc
xor
(bad)
imul
pop
cmps
push
inc
mov
sub
dec
or
cmp
and
or
cmp
xchg
bound
cmp
test
jns
sbb
jo
and
xor
test
mov
mov
test
cmp
adc
dec
inc
mov
mov
fnstenv
sbb
adc
fs
stos
sub
push
leave
mov
sbb
repz
mov
int3
addr16
pop
or
or
nop
cld
ja
jp
repnz
or
inc
mul
scas
popf
shl
xlat
mov
cs
vcvtsi2sd
mov
out
ficom
sub
inc
inc
je
pushw
xchg
cmp
jnp
std
aad
sbb
jecxz
mov
rcl
push
fdivr
rol
sahf
jecxz
das
lock
ret
shl
test
mov
cmp
mov
in
out
add
jae
pushf
pop
add
setb
mov
lods
jg
mov
xchg
fild
jnp
dec
adc
jae
ins
xchg
pop
xor
popf
stos
call
aad
ins
pop
scas
add
call
movs
adc
mov
bound
mov
ins
cld
arpl
repz
addr16
mov
push
imul
(bad)
popa
pushf
jae
or
out
dec
and
ins
jecxz
movs
push
pop
add
(bad)
mov
fsubp
sbb
adc
js
inc
xchg
mov
inc
pop
pop
and
retf
shr
mov
mov
sti
hlt
daa
mov
fsub
adc
xlat
aas
fld
ins
lods
rcl
cmp
sub
sub
movs
repz
lds
inc
mov
mov
jo
loop
xor
lods
dec
pushf
pop
das
and
in
inc
in
dec
push
in
dec
add
movs
aaa
dec
stc
xchg
loope
dec
scas
push
ret
rcr
jmp
leave
push
mov
into
mov
add
pop
push
aas
out
stc
loop
pop
jne
ss
add
clc
in
pop
or
cmp
xchg
sub
into
xchg
or
sbb
and
rcr
xchg
imul
inc
sub
jecxz
sbb
push
scas
or
int
push
ss
or
js
fdivr
xlat
xor
mov
sahf
into
in
and
(bad)
dec
lds
xor
mov
jno
xchg
nop
inc
inc
and
cmp
adc
clc
cmps
push
inc
push
push
call
fnstsw
rcl
cmp
scas
mov
std
sbb
and
mov
adc
out
leave
add
loope
mov
std
in
bound
sbb
int
or
lods
dec
imul
into
in
jmp
shr
js
mov
dec
inc
js
xlat
scas
dec
and
dec
jp
lahf
data16
stc
mov
mov
dec
stos
mov
jo
pop
inc
(bad)
push
xor
addr16
(bad)
dec
add
pop
mov
push
enter
popa
sbb
cmps
jbe
mov
or
mov
xor
fdiv
clc
sbb
fcomp
jae
sub
xchg
enter
cs
out
inc
int3
cmp
sbb
cmp
fucomp
mov
fs
mov
pop
inc
push
in
repnz
dec
sbb
xchg
and
cmp
loop
fimul
icebp
ds
fcom
movs
mov
push
stc
add
or
xor
mov
jl
iret
pop
rol
lock
std
inc
mov
mov
and
inc
dec
and
js
enter
scas
ins
fidivr
hlt
mov
push
pop
push
or
xchg
out
aaa
jle
js
int
sbb
sub
inc
ret
call
loop
mov
pop
cmp
jbe
lahf
jns
jle
sar
shl
push
xchg
mov
or
sbb
and
jp
aas
es
mov
jbe
out
push
ret
iret
pop
dec
rcr
out
in
jo
mov
in
outs
mov
in
mov
pop
shr
(bad)
pop
mov
call
mov
and
push
sbb
ret
add
or
dec
sbb
inc
push
movs
or
jb
mov
or
adc
mov
fidivr
sbb
je
add
fs
cdq
mov
jmp
sub
icebp
gs
arpl
call
in
mul
jno
mov
xchg
push
repnz
and
(bad)
push
js
test
xchg
dec
cld
fs
pop
dec
int3
enter
pusha
cmp
push
adc
cdq
lahf
repnz
out
repnz
movs
pop
iret
jle
pushf
xlat
imul
imul
(bad)
fld
int
mov
mov
gs
cmp
lea
push
inc
mov
or
(bad)
xlat
push
stc
nop
fimul
push
inc
mov
add
jne
jg
stc
(bad)
mov
in
add
dec
frstpm(287
adc
call
push
xchg
push
es
mov
retf
mov
sbb
icebp
cmp
lea
mov
pusha
xchg
cdq
test
jo
hlt
cmp
jmp
sahf
xchg
iret
sbb
push
lods
fs
push
sbb
jl
inc
pop
cmp
jns
and
(bad)
mov
xor
scas
xchg
or
out
imul
ja
cs
cmps
in
(bad)
push
fisubr
sub
lea
adc
loope
fcomp
(bad)
push
retf
das
das
push
pop
fbstp
push
sbb
fisttp
mov
cwde
test
out
sub
pop
sbb
sub
aas
(bad)
jo
jmp
sbb
and
in
cmp
icebp
cmp
mov
mov
add
aad
shl
cmp
mov
sar
jmp
cmp
rcr
mov
test
clc
mov
stc
test
xlat
mov
jns
hlt
mov
fiadd
xor
dec
sbb
int
sbb
inc
fdiv
pop
retf
outs
xchg
nop
adc
mov
dec
neg
mov
(bad)
loopne
fisub
xchg
gs
rcl
mov
sbb
shr
inc
aad
fidivr
pop
mov
adc
test
imul
movs
js
mov
shl
stc
add
aaa
xlat
mov
pushf
or
cmp
sar
bnd
dec
idiv
dec
mov
add
push
xchg
and
inc
add
mov
mov
aas
inc
je
jmp
push
mov
pop
pop
pop
inc
(bad)
mov
lds
xor
add
call
dec
sub
or
scas
sub
xor
jo
mov
stc
ins
je
in
imul
rol
imul
addr16
mov
out
mov
call
xchg
dec
push
mov
ins
aam
pop
sbb
sahf
repnz
or
sbb
mov
adc
popf
or
ins
inc
fisttp
adc
mov
or
aaa
sbb
dec
jo
jp
xchg
aad
dec
dec
mov
dec
xor
test
ret
mov
add
inc
inc
outs
int3
xor
mov
and
scas
dec
jbe
arpl
push
lock
fnclex
mov
addr16
sub
add
inc
scas
sbb
adc
int
sub
pop
addr16
cli
push
ins
mov
sti
push
(bad)
mov
jge
push
and
xor
pop
cmp
xchg
push
pusha
and
loopne
fwait
scas
shl
outs
int3
inc
ins
push
and
dec
jge
xor
xchg
out
sbb
cmps
or
add
pop
xor
out
xchg
out
sbb
popa
call
out
les
stos
movs
movs
imul
stc
jne
xlat
aaa
jmp
clc
scas
adc
pop
int
jo
inc
jge
mov
test
push
jl
jp
or
inc
test
dec
push
mov
mov
loop
lock
mov
pop
jge
mov
addr16
test
sub
test
jle
sbb
lea
inc
push
jns
retf
das
cwde
cmps
push
cmp
aaa
test
aad
imul
mov
xor
sub
cdq
push
or
not
cmp
mov
jns
in
pop
jnp
jno
icebp
add
add
or
arpl
dec
mov
stos
jl
arpl
xchg
scas
mov
ss
sub
leave
dec
retf
sub
xor
xchg
clc
cli
adc
mov
xchg
outs
in
icebp
mov
sbb
lods
movs
sti
mov
jge
cmp
jae
pop
mov
or
pushf
mov
fcom
movs
inc
mov
aam
jl
daa
jmp
lahf
out
xor
lea
mov
push
adc
out
iret
pusha
xchg
ror
(bad)
jae
adc
pusha
push
dec
adc
call
push
push
mov
mov
sbb
ja
test
je
je
mov
adc
sahf
scas
jbe
mov
xchg
in
cmp
xlat
pop
movs
fld
inc
inc
lahf
scas
hlt
cmp
ret
imul
sub
outs
xchg
idiv
cs
adc
cli
push
or
mov
push
js
scas
cmp
sub
stos
cwde
add
sub
das
jg
or
jmp
arpl
mov
jmp
jb
xchg
pusha
stos
int3
dec
jle
sbb
cs
stos
xor
enter
and
retf
jmp
pop
cmps
(bad)
dec
sahf
xor
icebp
outs
mov
add
ret
sbb
loop
or
sub
xchg
adc
out
inc
dec
sbb
mov
sti
and
shl
cvttps2pi
jb
cwde
mov
(bad)
retf
out
cli
ins
mov
repz
shl
mov
ins
xchg
adc
mov
(bad)
call
adc
add
sbb
push
mov
and
stos
scas
add
in
xchg
jns
dec
lahf
popf
inc
mov
xchg
ret
cld
or
mov
fwait
mov
lds
addr16
xchg
shl
push
bound
xor
movs
sub
jecxz
movs
pop
push
aad
inc
xchg
lods
sub
clc
xor
mov
or
jp
icebp
sub
add
push
cmp
lods
xchg
pusha
data16
test
push
sbb
rcr
mov
and
jmp
gs
jg
test
pop
push
cmp
ds
jns
gs
sbb
cld
std
add
sbb
int
iret
or
shl
out
push
jecxz
les
jne
jl
push
jb
sub
xchg
and
aaa
test
mov
clc
sar
sbb
mov
pop
mov
sti
xchg
(bad)
jge
mov
cmp
sbb
out
lea
mov
call
aad
popa
or
mov
not
(bad)
mov
pop
stos
adc
jmp
ret
adc
or
out
frstor
push
add
mov
or
jmp
in
mov
lods
pop
push
sbb
xchg
sbb
xchg
jno
out
pop
cmc
pop
inc
fldenv
push
sbb
add
adc
add
push
clc
or
cmp
dec
jo
mov
pusha
fsubr
cmps
mov
jmp
pop
push
jb
mov
adc
popa
dec
test
imul
add
hlt
stos
push
cmp
daa
push
dec
pop
fisttp
jns
pop
mov
js
shl
sbb
inc
mov
jo
inc
push
pop
leave
and
(bad)
mov
mov
inc
mov
xchg
les
shr
jae
push
rcr
out
jmp
dec
mov
addr16
(bad)
sbb
mov
jne
movs
scas
inc
call
shl
dec
(bad)
add
fisub
sbb
push
scas
lods
stc
mov
push
jg
sbb
(bad)
jne
cmp
cmp
(bad)
in
fdivr
push
fidiv
mov
mov
cmp
imul
push
mov
ss
ss
mov
adc
lock
xchg
loope
repz
push
inc
fstp
fs
cmps
bound
or
push
fmul
pop
mov
out
sub
test
jbe
movs
cdq
push
sub
sbb
arpl
adc
outs
ss
mov
adc
push
inc
adc
add
fcmovu
ins
inc
and
sbb
cmp
out
adc
mov
xchg
out
inc
invd
lods
sar
push
sub
push
jp
sti
add
sbb
test
pop
and
xor
out
in
loopne
inc
xchg
inc
pusha
jns
(bad)
xchg
pushf
lods
dec
cmp
scas
addr16
lods
mov
mov
push
or
loopne
(bad)
outs
out
jp
(bad)
jl
stos
and
jbe
movs
pop
shr
fcom
(bad)
ins
loopne
xor
ins
push
sub
not
sub
pop
mov
or
push
jge
inc
inc
mov
adc
imul
xchg
je
aad
jne
jmp
mov
rcl
(bad)
xor
cmp
pop
cmp
jp
and
sub
sbb
lahf
pushf
inc
gs
pop
imul
les
mov
pop
ret
aas
pop
hlt
adc
mov
xchg
push
dec
mov
mov
mov
jle
sbb
xor
add
xchg
mov
adc
mov
ror
aad
pop
sub
adc
sbb
jecxz
add
into
nop
sub
mov
and
sar
inc
jge
retf
xor
mov
(bad)
call
loope
(bad)
xchg
and
jo
fld
fs
fcmovb
call
add
inc
mov
push
data16
repnz
ja
fcmovnb
sub
popa
cmp
repz
xchg
les
call
adc
or
mov
fs
adc
int
ins
(bad)
jbe
mov
fstp
(bad)
lock
sti
xchg
sti
call
inc
shl
mov
sub
pop
sub
mov
pop
mov
(bad)
(bad)
inc
jl
sahf
int
iret
iret
xor
adc
(bad)
movzx
popa
lds
mov
jb
ins
inc
jle
pop
jmp
or
jo
and
push
inc
(bad)
movs
xor
sub
mov
jne
lock
lea
dec
das
fsubrp
cmp
jns
jg
mov
cmc
adc
jp
pop
sub
aad
mov
add
ret
(bad)
adc
jp
inc
pop
jmp
jecxz
push
enter
repz
jns
sbb
call
pop
cld
enter
aaa
fwait
lds
fist
bound
pop
inc
lods
jmp
stc
(bad)
(bad)
sbb
aad
cmp
push
iret
outs
scas
dec
xchg
dec
arpl
sbb
shl
push
jmp
leave
cld
test
gs
ja
sub
(bad)
cmp
jns
push
add
jb
fiadd
into
add
adc
sbb
pusha
jo
mov
dec
retf
out
mov
sub
sub
dec
ds
jo
lods
cmp
icebp
mov
lods
xchg
dec
mov
pop
add
out
nop
or
push
(bad)
in
jg
xchg
out
pop
lock
outs
mov
inc
cmp
cli
lds
out
sub
add
sub
cmc
cdq
push
sub
scas
or
inc
or
jmp
mov
gs
xchg
and
outs
data16
int
add
dec
mov
retf
lahf
sar
clc
pop
mov
jl
repz
cmp
repnz
adc
ror
jp
shl
es
sahf
add
into
dec
cmp
das
dec
mov
jbe
mov
call
sbb
rcr
stc
push
ror
inc
inc
and
loopne
inc
fwait
sti
fild
cli
jecxz
fsub
xor
aad
sub
pop
and
mov
std
xchg
test
shl
pop
sbb
sbb
lods
and
and
bound
inc
push
jns
jp
jmp
xor
lahf
push
mov
inc
add
bswap
mov
dec
shl
in
mov
sub
pop
adc
xchg
cmp
pop
adc
add
add
mov
inc
push
cmp
dec
mov
and
call
mov
fstp
fadd
cdq
pop
js
cmps
ficomp
jb
or
adc
lods
jl
int3
fwait
jne
cmp
out
cmps
push
(bad)
ror
outs
or
out
xor
inc
idiv
(bad)
sbb
or
and
bswap
inc
xchg
mov
adc
pop
sbb
push
mov
mov
pop
scas
adc
ret
cdq
std
stos
xor
inc
mov
rcl
rcr
pop
test
dec
or
bound
cmp
pop
pop
sbb
stc
aad
add
inc
lods
or
sbb
sub
xchg
sbb
push
sbb
loope
hlt
dec
push
(bad)
aaa
repz
int
mov
and
call
mov
jge
mov
jbe
jecxz
xchg
cmp
adc
add
mov
mov
scas
mov
stc
inc
sbb
mov
cmp
stos
sub
cmps
arpl
imul
fwait
(bad)
cmp
stc
cld
mov
loop
add
sbb
popf
add
call
out
or
mov
dec
push
dec
pop
fist
scas
jp
stos
lock
pop
leave
pop
cmps
inc
pop
jmp
lahf
rcr
std
jle
pop
mov
sbb
pop
aam
jb
push
mov
mov
push
pop
fcmovbe
fmul
add
sahf
dec
imul
inc
and
push
arpl
(bad)
out
fisubr
je
xlat
mov
xchg
jp
sub
rcl
dec
mov
push
stos
mov
retf
push
and
shr
dec
adc
sahf
in
idiv
aad
int
mov
inc
sub
xchg
ins
inc
out
pop
sub
xchg
fs
int3
sbb
jmp
stos
fmul
not
add
jmp
sbb
jg
jl
mov
xchg
or
(bad)
cld
and
aas
call
add
jecxz
mov
popf
xor
(bad)
retf
adc
or
xor
out
jmp
mov
nop
cs
imul
out
cmp
mov
in
mov
mov
bound
popf
cdq
xchg
out
dec
add
mov
jecxz
cs
mov
into
mov
mov
sbb
lea
shl
dec
push
mov
sub
ins
retf
push
and
out
jne
std
mov
clc
scas
jns
xchg
lods
pop
out
adc
mov
rcl
cmps
test
repz
rcr
ror
daa
mov
(bad)
(bad)
sbb
repnz
dec
inc
(bad)
(bad)
daa
or
in
in
cmovs
mov
sub
(bad)
das
mov
sbb
int3
ror
call
and
addr16
test
jno
stos
dec
and
fldcw
or
int3
std
rol
test
xchg
mov
jo
inc
popf
push
aad
jbe
push
iret
fdivr
xor
cmps
mov
mov
icebp
jmp
adc
movs
xchg
xchg
mov
ret
and
mov
or
jl
test
mov
mov
or
in
jno
out
or
bound
ret
bound
inc
fucomi
rcl
jnp
cmp
ret
sbb
loope
xor
cdq
inc
loop
mov
mov
jmp
xor
fdivr
cmp
pop
inc
add
jne
mov
mov
mov
aad
jl
sbb
cmps
es
mov
inc
push
xchg
movs
idiv
lods
mov
test
cmps
cdq
daa
lahf
sahf
jbe
mov
ror
loope
inc
mov
fadd
(bad)
sti
sbb
imul
cmp
push
call
mov
sbb
movs
aaa
mov
pop
xor
(bad)
scas
pop
xchg
dec
xchg
cs
add
rcr
popa
and
lock
pop
js
xor
pop
sub
fbstp
cmp
mov
gs
into
fisubr
xchg
lds
fmul
mov
lea
popf
jle
fld
mov
or
xor
idiv
fstp
mov
inc
test
and
pop
call
inc
pop
push
movs
test
es
outs
ja
cdq
in
push
imul
lds
mov
or
inc
jl
sub
xor
and
add
push
rcl
pop
(bad)
jmp
sahf
lea
sahf
es
fiadd
jb
push
mov
cli
sub
loop
(bad)
fsubr
sbb
mov
popa
jae
retf
jo
jb
lock
rcr
xchg
cwde
sub
jne
cwde
jno
sar
cmc
das
jp
fsubr
arpl
pushf
pop
mov
ret
dec
int3
cmps
sbb
out
arpl
movs
push
stc
sbb
les
mov
in
mov
call
xor
and
cs
adc
(bad)
adc
adc
inc
test
movs
mov
test
sub
inc
popa
or
ds
dec
dec
lahf
enter
mov
push
hlt
fs
cmp
push
mov
in
rcr
ins
sar
icebp
xchg
mov
add
jo
cmp
add
outs
dec
not
and
sbb
mov
(bad)
push
int3
retf
or
test
les
and
add
or
in
jmp
int
in
or
icebp
test
add
jl
jmp
ins
inc
inc
inc
sub
ret
mov
js
mov
retf
and
inc
jmp
inc
test
out
xor
fisttp
(bad)
dec
in
jecxz
mov
mov
and
xor
mov
jecxz
icebp
imul
ror
mov
or
bound
cmp
inc
xchg
add
leave
loope
mov
scas
xor
or
dec
cmp
push
mov
dec
lds
jmp
pop
jmp
xor
push
mov
fwait
rcl
jp
cmc
aad
xor
lods
(bad)
out
fst
out
ds
cmp
jnp
loop
pop
popf
add
lock
inc
nop
or
sub
cmps
jae
xchg
push
mov
and
jp
push
sub
jecxz
sub
ss
fist
nop
rol
mov
dec
or
hlt
push
inc
xor
push
call
js
push
test
jecxz
ins
jno
out
mov
fild
push
sub
dec
cmp
addr16
mov
pop
bound
push
and
sub
push
out
add
dec
dec
fild
bound
xor
pop
loopne
cmp
scas
push
xchg
addr16
addr16
movs
dec
sub
and
inc
or
arpl
inc
sub
and
sbb
push
gs
pop
ins
inc
pop
cmp
jmp
jbe
ss
mov
push
(bad)
stc
(bad)
dec
out
jnp
mov
ins
fst
test
cmp
push
xor
imul
or
sbb
das
mov
cmp
shr
sub
push
sbb
cmp
sar
gs
xor
inc
lods
jge
(bad)
jle
fstp
scas
push
or
cwde
(bad)
pop
repz
sub
in
push
rcl
sub
dec
jb
sahf
aaa
lock
and
cmp
jmp
lods
fcomp
jmp
js
repz
std
pop
shl
in
out
clc
lea
cld
fmul
and
xchg
xlat
and
ja
add
mov
sbb
cmp
rcl
add
adc
jmp
cmp
xchg
mov
mov
movs
jmp
ins
add
std
jmp
hlt
sbb
cmps
mov
and
jle
mov
jae
mov
je
or
adc
or
add
sar
push
add
or
ins
ja
mov
add
stos
jle
test
jp
inc
fstp
mov
cld
in
fs
mov
scas
push
sbb
fiadd
loope
outs
call
sub
push
jo
(bad)
xchg
mov
and
out
mov
in
leave
out
in
cmp
mov
inc
imul
mov
test
xlat
sub
cmp
fwait
es
imul
jno
mov
ins
or
jecxz
mov
aas
and
push
mov
repz
sub
aaa
arpl
push
adc
out
mov
xor
add
mov
xchg
sub
cmps
adc
loope
movs
shr
add
dec
into
xlat
test
loop
pop
lea
or
rol
adc
(bad)
es
cmp
mov
bswap
jne
addr16
jg
imul
pop
(bad)
push
mov
mov
ss
enter
call
shl
int3
in
(bad)
pop
mov
adc
cmp
jp
inc
mov
mov
fld
mov
push
mov
adc
retf
xchg
popa
jbe
xchg
jnp
bt
jbe
jmp
mov
mov
dec
sub
jb
adc
dec
push
inc
repz
dec
data16
cld
out
(bad)
cmc
neg
(bad)
push
fmul
dec
push
mov
xchg
(bad)
or
mov
popfw
bound
nop
cmp
sub
std
xor
psadbw
cmp
ja
mov
mov
mov
(bad)
pop
add
add
xor
xchg
sub
jp
loope
clc
xchg
in
stos
mov
test
add
or
retf
xor
pop
push
push
jb
test
jl
enter
cs
lods
movs
sbb
dec
jle
jl
mov
pop
xchg
sbb
xor
ret
out
lahf
push
retf
fadd
mov
cmps
retf
scas
pusha
stos
pop
addr16
jg
inc
aaa
ror
pop
call
test
inc
call
jae
outs
aaa
or
clc
lods
jge
jnp
push
imul
fmulp
retf
test
inc
xchg
add
push
faddp
les
out
movs
push
jbe
cmp
adc
stos
ins
jne
xor
daa
lds
sbb
shr
jge
xchg
push
or
mov
fistp
push
test
push
mov
sbb
mov
aas
int3
push
add
(bad)
mov
inc
ss
push
in
not
nop
or
push
aad
inc
inc
sub
jge
call
push
(bad)
or
or
mov
out
lea
fxch
sbb
pop
xchg
jnp
rol
jg
push
sub
gs
out
ja
lahf
mov
fwait
mov
mov
cld
int
iret
sar
popf
add
rol
mov
call
lock
cmc
mov
xor
jmp
mov
test
xor
es
gs
dec
shl
leave
inc
(bad)
cmp
add
lea
mov
and
inc
loope
imul
clc
xchg
sbb
and
push
and
mov
and
out
mov
cmc
mov
pop
inc
clc
jb
xchg
imul
dec
fcom
mov
xor
(bad)
call
xchg
pop
push
push
and
repnz
and
xor
xchg
mov
pop
sbb
dec
pusha
je
and
loopne
ficom
mov
shl
icebp
(bad)
push
or
jp
ret
dec
std
movs
dec
icebp
xor
loopne
js
addr16
fs
outs
push
(bad)
mov
ins
sub
or
mov
dec
mov
jl
pop
adc
stos
(bad)
sub
aaa
inc
repz
sar
inc
jecxz
test
pop
call
ss
sbb
(bad)
xchg
lods
xor
push
push
mov
sbb
mov
call
mov
push
repz
mov
jl
or
sti
push
jecxz
cdq
pop
fidivr
xor
lea
cwde
(bad)
dec
inc
mov
(bad)
dec
(bad)
mov
mov
sbb
push
pop
or
sub
dec
ja
adc
push
pushf
dec
sbb
jbe
rcl
cmp
mov
aam
pop
imul
ja
xor
cmp
(bad)
aad
jns
leave
and
ss
pop
cmp
and
adc
sub
arpl
inc
jnp
push
cmp
sbb
xchg
pushf
outs
and
push
mov
and
pop
cld
cs
mov
inc
stos
fisub
loope
imul
or
call
pop
pop
retf
sbb
jae
or
cmp
enter
mov
inc
mov
(bad)
adc
adc
js
dec
push
jmp
push
and
sub
sbb
imul
push
jae
out
imul
fldenv
mov
ds
sbb
call
outs
inc
jns
test
xchg
mov
retf
stc
sbb
in
ficom
jmp
icebp
jns
pusha
xchg
dec
or
rcl
mov
(bad)
test
iret
pusha
rep
call
mov
adc
and
jno
test
mov
sahf
push
xor
(bad)
mov
mov
lods
sahf
or
jl
sub
out
mov
test
sub
imul
fcomp
hlt
fstp
ret
cmps
std
(bad)
xlat
out
push
jb
ror
jns
jmp
pop
dec
rcl
ins
fnsave
push
std
adc
outs
ret
inc
in
inc
data16
push
shl
int
daa
lea
sub
xlat
mov
jb
fsubp
test
push
lods
dec
fadd
xor
sub
aas
push
push
pop
jecxz
lods
pop
cmp
(bad)
ds
jp
rcr
sar
jne
mov
mov
mov
imul
jb
ds
mov
retf
mov
and
movs
dec
sub
int3
pop
int3
call
js
enter
jno
mov
(bad)
fist
xor
dec
shl
pop
aas
inc
sub
into
adc
mov
and
pushf
enter
inc
repz
jae
lods
repz
or
cs
jo
push
xor
adc
mov
dec
out
push
push
shl
loopne
mov
dec
lea
test
popa
(bad)
cmp
push
addr16
mov
jl
jge
mov
sahf
inc
jecxz
dec
mov
ret
sbb
adc
in
inc
mov
lahf
out
cmp
fstp
inc
mov
and
test
mov
inc
mov
mov
fldl2e
out
mov
cmp
cli
shl
clc
or
into
mov
pop
cmp
pop
or
dec
retf
inc
call
loopne
jle
stos
push
push
xchg
test
mov
push
movs
sub
cmps
(bad)
loop
dec
push
mov
adc
inc
imul
fnstsw
add
cli
jb
jecxz
movs
pop
and
jmpw
inc
push
fwait
cmps
dec
cdq
inc
push
clc
push
and
ds
imul
xor
fisub
cmp
into
inc
xchg
test
mov
dec
(bad)
rcr
fisubr
nop
sbb
fcomp
mov
inc
push
cmp
fild
sbb
gs
sub
mov
add
inc
ss
and
neg
pop
jns
mov
sti
aas
out
add
xchg
fimul
cld
retf
or
push
mov
std
aas
cs
aad
fnstcw
push
adc
mov
lahf
rcl
inc
xchg
ins
mov
in
jns
fsub
into
jp
xor
sub
out
mov
fidiv
repz
clc
mov
adc
xchg
inc
in
sub
adc
sbb
adc
aas
mov
imul
or
cmp
test
imul
mov
jns
jmp
jne
mov
in
mov
push
retf
(bad)
jmp
mov
xor
int
mov
cwde
and
fistp
loop
fdivr
xchg
in
dec
into
push
jp
retf
mov
jb
icebp
add
jmp
daa
int3
mov
call
and
xchg
in
mov
jne
mov
add
ins
inc
ins
(bad)
aaa
jae
rcl
jecxz
add
loop
or
dec
das
and
outs
sub
sub
mov
pop
out
call
xchg
fnsave
(bad)
fcomp
mov
imul
or
(bad)
mov
inc
xor
jle
sbb
mov
jae
or
sub
fwait
pop
es
sar
outs
jle
cmp
movs
ficom
ins
mov
cmp
shl
rol
repnz
lea
or
fild
ins
ins
in
adc
mov
xor
jmp
bound
scas
int
mov
stc
out
movs
cld
or
in
inc
add
mov
cmps
call
cmps
mov
push
ss
jb
jmp
mov
adc
aas
repz
push
sub
sub
pop
ins
(bad)
pop
sub
das
aaa
rcl
push
jl
nop
faddp
xchg
rol
outs
inc
(bad)
cmp
stc
add
(bad)
loopne
cwde
movs
lar
sub
and
jnp
adc
mov
or
and
cmp
inc
dec
sbb
or
jecxz
xor
mov
je
call
mov
jmp
rol
xchg
and
xchg
add
xchg
imul
mov
xor
pop
pop
hlt
loopne
ja
and
mov
push
stos
push
(bad)
enter
sbb
mov
dec
pop
and
cs
retf
in
repz
js
mov
push
and
mov
hlt
stos
and
jb
add
cmp
test
(bad)
std
cwde
cmc
jno
adc
xchg
xlat
mov
lock
xor
test
mov
or
mov
adc
add
mov
lds
das
or
inc
(bad)
jle
xchg
pop
xor
out
retf
dec
mov
stos
xchg
mov
call
inc
push
mov
mov
mov
icebp
and
or
add
inc
push
and
push
(bad)
mov
push
cdq
sbb
sub
mov
(bad)
pop
inc
rcl
pop
add
daa
std
retf
shr
mov
(bad)
fist
ins
lea
adc
xchg
sub
inc
inc
mov
retf
xchg
in
out
adc
adc
dec
sub
add
lods
mov
xchg
pop
lods
mov
sbb
fsub
lods
shl
cmc
add
mov
lods
mov
dec
js
adc
mov
jae
cli
ins
das
jl
test
in
out
pusha
ins
cwde
loopne
dec
pop
mov
pop
or
bound
arpl
adc
lods
jns
lea
(bad)
cwde
push
inc
daa
in
js
and
in
mov
mov
xchg
mov
ret
inc
mov
sbb
xchg
pop
sub
mov
jle
mov
leave
mov
lods
popf
call
or
cdq
jmp
in
gs
xor
call
retf
mov
sub
mov
push
stc
push
enter
jp
rcl
push
add
cli
jecxz
in
sub
fdivr
inc
(bad)
mov
adc
into
in
dec
jo
ja
in
repnz
ins
adc
cmp
and
(bad)
inc
dec
xchg
add
shl
and
fnsave
push
imul
(bad)
sahf
pushf
mov
push
inc
inc
int
mov
data16
jle
adc
pop
and
mov
jbe
or
test
pop
inc
pusha
and
dec
in
dec
add
jbe
cmp
and
clc
sub
ja
lods
and
inc
xchg
imul
in
enter
les
leave
test
cmps
jnp
jns
movs
mov
xchg
inc
cmp
or
aad
adc
adc
lods
push
jmp
cmp
cmps
mov
repnz
pop
daa
daa
sub
aam
out
ja
jnp
in
popa
js
sub
inc
fnsave
cmp
or
pop
pop
sub
xor
or
push
sub
bound
xchg
(bad)
xor
push
sub
sbb
sbb
pop
xchg
pushf
sbb
pop
add
xchg
gs
mov
sub
mov
cmps
mov
sbb
movs
shr
in
inc
mov
out
jp
ja
stos
mov
cmc
add
or
push
lds
jns
lahf
pop
mov
out
lods
scas
nop
jo
loop
ror
fild
pop
call
cmps
jmp
sbb
mov
and
mov
and
outs
in
push
rol
add
and
(bad)
loopne
sar
mov
in
xchg
pop
jne
pop
in
cmp
mov
ss
in
mov
pop
hlt
push
aas
outs
dec
mov
push
xchg
mov
(bad)
(bad)
mov
cld
(bad)
mov
xor
add
ficomp
add
push
push
popa
jmp
in
push
dec
cmp
jae
mov
sbb
jmp
or
dec
clc
iret
cld
and
fnsave
add
mov
inc
push
or
mov
imul
jae
add
add
add
mov
xchg
enter
hlt
clc
mov
mov
cwde
mov
mov
sub
mov
das
pop
mov
sbb
jp
icebp
sti
and
lock
push
shl
xor
call
popf
xchg
ret
bound
or
push
inc
fwait
push
nop
retf
push
sbb
pop
mov
loope
ror
dec
aam
push
movs
cmp
popa
jnp
loop
jne
xor
inc
iret
dec
aaa
repnz
push
stc
mov
push
xor
pop
out
lock
xor
es
outs
les
xor
push
(bad)
or
push
ss
repz
sar
fsubr
add
icebp
dec
sbb
push
mov
cmps
out
add
or
cmc
scas
cmp
sbb
mov
out
call
push
stc
dec
push
addr16
cmp
dec
das
lahf
mov
mov
das
jae
or
push
xchg
lods
or
cmps
cwde
jae
push
xchg
push
stos
popa
in
add
fcmovbe
out
xor
cwde
xor
lea
add
stos
sbb
push
pop
test
sbb
pop
stos
int3
sub
cld
mov
ds
arpl
enter
sub
ds
push
jecxz
rcr
in
push
fisub
pop
outs
mov
sub
push
shr
xchg
outs
xchg
dec
retf
xchg
lods
inc
pop
fild
int3
and
and
fmul
add
imul
or
ja
sahf
adc
inc
and
sbb
adc
out
cs
lds
push
es
inc
sbb
cmc
idiv
jae
test
mov
(bad)
push
mov
pop
cmc
hlt
dec
sbb
inc
cmps
scas
rcl
popa
cli
mov
hlt
leave
sbb
inc
daa
lods
(bad)
pushf
imul
repz
out
sub
xchg
pushf
adc
hlt
jnp
sub
jp
cmp
cmc
mov
cli
lea
retw
inc
nop
hlt
call
pop
inc
lahf
xor
inc
scas
or
jl
mov
stos
or
(bad)
out
fcom
jl
retf
in
or
(bad)
fcom
rcl
jmp
xchg
push
jl
(bad)
shr
push
enter
dec
pop
loope
test
icebp
mov
call
ds
(bad)
mov
or
push
dec
mov
js
push
shl
fs
(bad)
xor
inc
(bad)
lds
pusha
or
shl
nop
mov
inc
jmp
fld
sbb
pop
les
sahf
push
call
sub
sub
(bad)
mov
hlt
or
daa
bound
loope
sub
mov
and
loopne
mov
dec
mov
imul
rcl
aad
jmp
sbb
push
xchg
movs
in
aam
out
pop
jecxz
jl
rol
bound
mov
out
rcr
vmovdqu
pushf
(bad)
cld
scas
fcomp
push
out
or
jmp
xchg
cdq
mov
xor
cmp
push
cmp
mov
ss
(bad)
cmp
ret
sub
pop
inc
das
dec
mov
rcl
mov
adc
and
repz
jg
cmp
jmp
sbb
sub
xor
adc
push
add
sub
mov
or
inc
into
mov
movs
add
ins
enter
push
and
mov
stc
jecxz
vmovntdq
add
jmp
fwait
pushf
mov
jp
jg
std
and
out
mov
pop
cwde
aas
inc
jmp
push
lds
test
mov
xor
ror
call
out
or
in
xor
mov
out
call
xchg
inc
leave
and
loop
popa
sti
xchg
jg
sbb
pop
test
jbe
mov
mov
sbb
(bad)
cld
mov
arpl
(bad)
je
mov
inc
xchg
adc
push
xchg
or
push
pop
or
cdq
push
xchg
stos
mov
mov
dec
int3
mov
mov
out
test
nop
mov
cdq
inc
movs
std
xchg
jecxz
aad
in
popa
ins
test
jmp
into
and
add
mov
sahf
xlat
mov
dec
inc
(bad)
dec
cld
(bad)
mov
mov
dec
ss
rcr
ss
and
mov
setge
(bad)
inc
pop
jnp
clc
sahf
retf
sub
jno
and
push
mov
lock
ficomp
loopne
ret
shl
stos
loopne
push
push
mov
inc
mov
add
xor
mov
sbb
push
fisub
test
lock
push
mov
mov
test
call
icebp
pushw
daa
dec
jp
pop
hlt
push
cmp
enter
lea
lock
jmp
xchg
pop
cdq
pop
or
cmc
xor
mov
dec
dec
cmps
jmp
inc
pop
pushf
add
push
cmp
and
das
mov
stos
les
ret
cmps
sbb
sti
jmp
push
cmp
inc
add
cmp
xchg
add
repz
ficomp
push
and
jge
imul
push
dec
mov
mov
pop
aaa
clc
lahf
(bad)
xlat
xchg
jg
ret
push
inc
or
out
adc
xchg
test
or
push
sub
dec
aas
(bad)
sub
jge
imul
pop
sahf
dec
hlt
(bad)
ffreep
push
pushf
xchg
jno
fsubr
imul
or
ror
loope
lahf
repnz
or
push
xor
pop
mov
or
xchg
add
push
clc
scas
cmps
or
sbb
retf
ins
push
mov
add
mov
ds
and
mov
sbb
push
mov
cmc
cld
cmp
lods
jbe
ins
adc
jo
outs
test
push
and
stc
js
push
aaa
xchg
sbb
in
cmp
cdq
imul
push
sub
mov
jo
aam
pop
inc
xor
xor
pop
jbe
pushf
xchg
pusha
int
outs
mov
repz
lods
and
outs
test
sub
ret
inc
icebp
mov
pusha
pop
clc
inc
mov
mov
mov
imul
in
cmp
scas
jl
cwde
cld
mov
movs
cmp
xchg
int
or
loope
aam
fisubr
mov
jns
aad
pop
in
dec
rcr
int
xor
inc
jp
out
hlt
add
push
sahf
in
add
mov
dec
(bad)
aaa
adc
repnz
mov
add
int
push
out
repnz
mov
sub
pop
and
xlat
lods
mov
jbe
mov
inc
mov
push
and
mov
or
dec
fadd
inc
pop
out
sub
add
dec
jge
mov
lods
add
mov
inc
mov
cmp
aaa
mov
es
setg
jb
jnp
xor
jl
loop
mov
mov
inc
sbb
mov
in
je
dec
in
ror
aaa
pop
out
inc
or
inc
lds
fsubr
fwait
jb
fadd
dec
(bad)
inc
push
sub
pop
mov
and
dec
ins
imul
cmp
in
push
cmp
pushf
jnp
inc
mov
int3
retf
out
mov
add
jnp
adc
or
ja
jmp
enter
or
sbb
popf
push
adc
icebp
sub
adc
or
mov
xor
out
lock
mov
cmp
jns
sbb
dec
imul
adc
and
mov
sbb
push
mov
dec
gs
sbb
mov
and
push
jp
leave
mov
lock
inc
jae
outs
adc
(bad)
cmp
dec
out
fistp
mov
cmp
and
loop
mov
ja
adc
hlt
xor
movs
mov
shl
in
aam
push
jae
jg
dec
jb
push
jbe
stc
call
call
inc
out
sub
imul
shr
gs
or
pop
cmps
pop
adc
xor
mov
inc
pop
jecxz
stc
loop
cmp
and
mov
lods
dec
test
popf
dec
test
(bad)
sbb
dec
ror
and
xchg
jg
mov
adc
es
inc
xor
movs
add
adc
sbb
call
pop
repnz
mov
inc
cmps
inc
hlt
test
dec
leave
sub
cmp
(bad)
test
jl
arpl
dec
cli
shl
sbb
and
addr16
(bad)
mov
ret
inc
icebp
cmp
(bad)
mov
mov
mov
in
je
cmps
pop
add
jg
add
icebp
(bad)
sbb
aam
cld
pop
mov
imul
movs
cld
pop
cmp
lea
sub
cld
adc
mov
popf
dec
outs
push
pop
cli
es
or
loop
mov
jle
add
cwde
clc
call
add
jl
mov
arpl
xor
enter
push
jge
push
in
adc
(bad)
sbb
xor
nop
mov
test
fdivr
xor
push
cmp
ja
out
aas
repz
mov
mov
pushf
inc
nop
dec
int3
jae
retf
push
mov
sub
jno
adc
mov
(bad)
xor
push
cmc
mov
inc
bound
mov
mov
xor
ds
hlt
add
adc
cmp
loop
call
push
xchg
cdq
adc
outs
sar
mov
pusha
jne
fcom
pop
mov
ins
mov
mov
cmps
sub
popf
arpl
sub
shr
pop
sti
jle
shl
pop
push
shl
rcl
cld
fs
sahf
mov
adc
dec
ret
push
fst
cwde
mov
aaa
pop
inc
and
push
sub
stc
cli
push
dec
div
ins
imul
rcr
movs
bound
lods
mov
outs
mov
jecxz
ss
pop
shl
or
iret
loopne
ja
ins
jl
mov
push
and
mov
dec
xor
out
cmp
xchg
sub
add
mov
in
push
(bad)
jmp
mov
push
mov
lahf
cmp
in
scas
push
jne
test
cmps
test
lahf
arpl
lds
in
push
loopne
leave
cli
enter
jno
pop
fmul
data16
mov
fcom
push
push
les
lahf
int3
jmp
cs
push
nop
popf
jb
iret
sub
test
jns
imul
cdq
sbb
repnz
fwait
sbb
xor
push
jne
repnz
pop
mov
std
ds
mov
pop
and
leave
pop
sub
jo
xchg
mov
push
shr
aaa
call
fdiv
xchg
movlps
lahf
pusha
stos
xchg
mov
jmp
test
mov
ins
out
imul
dec
sbb
aaa
ins
(bad)
loope
pop
frstor
cmp
scas
xor
jl
jle
mov
sahf
add
xchg
lods
push
pop
es
push
stos
rep
jmp
mov
xor
push
lds
inc
sbb
outs
(bad)
gs
or
movs
in
jne
mov
jbe
in
or
ins
add
call
adc
sbb
sub
mov
int3
sti
lahf
sbb
mov
push
xchg
les
imul
in
push
push
sbb
jle
push
mov
icebp
aam
cmps
cs
popa
iret
out
sbb
mov
cmps
stos
cmp
and
nop
mov
inc
mov
dec
mov
xchg
or
scas
aam
xchg
pop
jnp
out
hlt
cmp
pop
pop
push
ror
jge
fidivr
mov
add
retf
cwde
xchg
mov
lock
bound
xchg
or
xchg
xor
jns
pop
inc
fidiv
xchg
and
int3
repz
or
cmc
addr16
add
mov
or
aam
loop
(bad)
xchg
lods
clc
ret
jne
lods
loopne
xchg
mov
inc
jae
mov
inc
adc
jmp
sub
and
mov
fwait
push
cdq
rcl
pop
mov
aas
js
fadd
cld
mov
cmps
cmps
ret
pop
cs
xor
xchg
pop
aas
loopne
outs
adc
or
in
xor
int3
dec
push
jl
mov
dec
outs
cmp
popf
lds
sahf
pop
mov
dec
adc
stc
push
mov
push
xchg
retf
jbe
out
call
add
push
add
adc
jp
mov
mov
lea
lock
sti
cmp
in
js
repz
call
sub
jl
dec
xor
push
(bad)
xchg
retf
pop
int3
(bad)
xchg
mov
call
add
jp
js
sar
adc
in
pusha
inc
xchg
cli
sar
pop
call
pop
mov
cmp
jae
fcmovu
adc
lea
and
dec
push
mov
xor
add
(bad)
dec
push
adc
cmp
dec
js
cli
pop
mov
xchg
adc
adc
ins
pushf
imul
and
hlt
pop
cmp
pop
dec
pop
push
dec
mov
xchg
pop
cmp
loopne
stos
cmps
dec
pop
sar
jmp
push
sbb
out
and
sbb
inc
call
dec
inc
or
in
mov
dec
dec
and
leave
or
add
xchg
push
cdq
dec
jnp
cmc
pop
sub
jnp
pop
jecxz
lahf
ret
jp
mov
adc
adc
inc
pop
push
jle
mov
mov
push
dec
mov
sahf
push
clc
je
jecxz
add
cmp
push
jne
jmp
mov
imul
rol
mov
scas
lods
in
mov
mov
(bad)
ins
cli
(bad)
mov
test
dec
mov
cdq
fsubrp
xchg
push
test
dec
je
or
arpl
pop
leave
push
xchg
and
ds
sbb
test
repz
xchg
ret
fs
mov
popf
pushf
shr
push
aaa
jmp
or
fisubr
or
cmps
aam
jmp
or
arpl
mov
sahf
cld
cli
mov
jno
shl
inc
retf
mov
fiadd
(bad)
je
jge
pop
imul
cmp
(bad)
cli
mov
mov
out
pop
jl
(bad)
in
inc
es
xchg
pop
jo
mov
jbe
cmps
push
pop
(bad)
gs
daa
or
mov
mov
daa
dec
jbe
je
ja
xchg
stos
adc
add
dec
push
mov
push
xor
add
mov
aad
jg
fisub
lods
mov
jg
scas
cmp
push
retf
mov
imul
or
add
and
add
jmp
lock
rcl
repnz
shl
dec
add
mov
lock
mov
push
or
sbb
mov
mov
iret
push
lods
lea
add
dec
jne
pop
jae
dec
inc
(bad)
sbb
jno
sahf
data16
into
aad
jge
adc
or
sub
xchg
jns
stos
add
inc
dec
and
inc
ret
nop
xor
cmp
and
(bad)
jb
fisubr
sbb
in
xchg
mov
lea
jne
and
sbb
es
mov
fdivr
dec
jo
adc
adc
cmps
push
idiv
xchg
jb
das
sub
(bad)
mov
in
imul
fcomp
ror
sar
mov
sub
sbb
sbb
shr
mov
fstp
cmps
rol
ins
in
std
mov
pop
inc
push
jp
popf
inc
sub
jle
cmp
jb
mov
adc
iret
sub
arpl
pop
or
xchg
inc
fstp
mov
mov
dec
push
sar
cmp
aam
and
cli
shl
(bad)
mov
pop
popa
add
dec
mov
adc
mov
rol
data16
stos
mov
fs
inc
call
dec
xchg
dec
mov
and
xor
cmp
sub
fimul
xchg
sahf
test
pop
stos
add
enter
xchg
cmp
cmps
dec
xchg
pop
jmp
std
fidiv
adc
jg
pop
jnp
sbb
push
inc
fidivr
je
call
add
xchg
mov
pop
sub
mov
fsubrp
lahf
push
ret
repnz
pop
int3
mov
xor
pop
rol
push
sub
cmp
push
pmaxub
das
add
inc
ret
mov
xchg
jg
pop
inc
mov
cmp
xlat
or
push
adc
and
xchg
dec
dec
ins
mov
dec
inc
out
xor
sub
or
mov
(bad)
(bad)
adc
retf
cli
push
aaa
scas
or
inc
aaa
ret
add
cmp
pop
fimul
inc
cmp
adc
(bad)
mov
sti
pop
mov
call
push
or
cmp
inc
push
dec
popf
lea
lahf
inc
imul
adc
jne
push
fisubr
inc
loop
mov
test
scas
xchg
xchg
scas
cmc
push
repnz
jnp
pop
je
sti
(bad)
in
sub
retw
retf
jge
cwde
jns
mov
jg
shr
call
xor
mov
pop
fstp
bound
adc
and
ss
push
out
mov
and
or
stos
das
hlt
cmp
fidiv
add
leave
adc
cmc
inc
adc
dec
push
mov
mov
iret
fwait
bound
sbb
or
cmp
scas
add
into
inc
mov
mov
lea
dec
or
ficom
jl
sbb
lods
movs
in
stos
movs
cli
xchg
inc
ret
sbb
push
mov
mov
sti
lods
cmp
movs
call
aaa
pop
inc
loopne
mov
dec
push
jg
adc
adc
call
dec
cdq
jecxz
lahf
loop
mov
pop
fstp
and
popf
ror
or
popa
std
mov
repz
icebp
fimul
dec
xchg
cmp
pop
mov
js
lds
aaa
mul
or
add
(bad)
fisubr
xchg
inc
and
arpl
jnp
mov
sbb
or
cmp
add
cmps
jb
push
lods
mov
aaa
pop
xchg
add
mov
sar
or
sub
adc
daa
jecxz
mov
pop
imul
and
cmp
bound
sub
mov
lea
adc
ret
outs
cmp
pop
lods
push
test
aaa
xchg
jg
jnp
sub
cmp
pop
adc
loop
(bad)
add
inc
inc
pop
sti
loope
mov
jns
pop
mov
push
(bad)
and
mov
retf
fstp
sbb
add
cld
cmps
push
xchg
out
fwait
std
push
mov
jl
xor
add
or
jns
mov
and
fadd
jl
gs
dec
arpl
cmp
lea
lods
ins
mov
dec
icebp
sub
sub
xchg
daa
inc
xchg
test
xchg
ds
jecxz
cmps
jne
cdq
sub
mov
add
out
pop
jmp
stos
loope
jmp
loop
movs
add
mov
cmp
mov
and
sbb
jecxz
dec
mov
xchg
enter
lods
mov
push
jl
inc
lds
push
sub
lahf
popa
add
stc
neg
int
and
jae
dec
outs
push
xchg
dec
(bad)
cmp
cli
in
cmc
and
add
mov
sub
jnp
or
inc
jbe
lods
imul
pusha
(bad)
jg
stos
adc
dec
jns
cld
push
push
rcr
ss
hlt
adc
xchg
inc
loopne
dec
mov
cmp
leave
aaa
pushf
adc
jmp
(bad)
bound
rcl
jno
sti
fdiv
pop
sbb
fs
gs
mov
jns
push
cmp
push
mov
ret
cmps
lea
cmp
or
jns
or
dec
sahf
mov
mov
es
mov
js
movs
mov
lahf
and
jg
fimul
add
xchg
or
xor
xor
outs
pushf
lods
adc
icebp
sub
aad
cmps
hlt
pop
and
sbb
mov
sbb
cli
push
imul
popa
jge
retf
stc
dec
adc
mov
pop
jo
bts
dec
lds
mov
xchg
fild
pushf
cmps
pop
jmp
ds
jp
repnz
(bad)
(bad)
fisub
pop
push
add
xor
jmp
cs
adc
push
scas
and
xor
add
inc
adc
(bad)
(bad)
sbb
inc
inc
stos
call
jecxz
mov
or
cwde
test
add
jge
mov
push
inc
pop
imul
pop
add
add
mov
jmp
sub
xchg
cdq
xchg
adc
int
mov
push
cmp
int
test
in
aas
test
lods
push
out
mov
imul
(bad)
jno
xchg
xor
clc
sbb
(bad)
push
sbb
jo
mov
leave
xchg
scas
inc
push
in
push
and
cmp
imul
cdq
pop
sub
mov
xchg
stos
iret
cmps
mov
fild
xor
mov
call
arpl
push
pop
sar
(bad)
mov
mov
movs
retf
jo
xchg
retf
xchg
and
test
mov
xchg
rol
jecxz
in
or
jo
(bad)
adc
pop
inc
pusha
in
mov
fcom
or
mov
in
sbb
cmp
dec
xchg
adc
pop
hlt
mov
loope
adc
inc
adc
pop
dec
inc
movs
push
test
das
lods
repnz
pop
je
lds
scas
pop
and
sub
aas
push
mov
lea
ins
outs
in
xchg
mov
repz
pop
in
pop
xchg
jmp
mov
daa
cmp
rcr
ret
fwait
iret
jge
cs
dec
add
pop
push
jno
shr
mov
pop
sbb
jns
jne
out
loop
jle
add
or
inc
adc
and
aam
xor
jbe
cmp
nop
(bad)
cmp
lods
daa
jl
mov
loop
std
loopne
das
xchg
jge
jecxz
cmps
je
cmp
jbe
iret
mov
outs
add
push
(bad)
xor
or
mov
movs
xor
sti
repnz
cmc
jmp
cwde
and
mov
xor
call
pusha
cmp
mov
stc
cwde
cmp
xchg
test
cmp
or
data16
rcl
and
mov
lods
loop
inc
jl
mov
rcl
cld
in
call
nop
jmp
test
cld
jecxz
(bad)
test
inc
imul
add
int3
neg
xor
push
xchg
inc
(bad)
cld
test
add
out
push
cmp
xchg
icebp
das
jmp
sub
pop
push
cs
cmp
push
pop
push
jo
rol
popa
inc
fild
jmp
cmp
pop
xor
add
jmp
pop
into
repz
scas
push
aas
int
sahf
rcl
cmp
(bad)
in
scas
and
stos
enter
mov
push
jns
mov
rcl
add
xchg
mov
jle
xchg
loopne
mov
jl
mov
shl
mov
pop
aad
mov
push
daa
inc
stos
jmp
inc
fadd
iret
(bad)
push
cdq
ret
jae
(bad)
cmp
ret
enter
pusha
ja
push
pop
repz
loopne
sbb
clc
ret
scas
mov
inc
gs
jmp
popa
cmp
pop
pop
inc
or
mov
gs
iret
push
pop
dec
mov
push
sub
xlat
adc
ror
movs
jmp
inc
imul
clc
cmp
out
jnp
lods
std
repnz
jae
cli
lods
inc
into
sbb
push
ds
call
xor
shr
jo
data16
mov
pop
and
fidiv
daa
jg
test
outs
sub
idiv
jne
mov
(bad)
enter
outs
fmul
xchg
jne
mov
pop
adc
ins
mov
(bad)
scas
bound
daa
repnz
(bad)
xlat
xchg
in
mov
mov
imul
jle
xchg
add
outs
mov
stos
cld
jmp
or
sub
mov
(bad)
aaa
int
inc
in
mov
cmp
enter
inc
mov
mov
inc
fst
sbb
sbb
neg
mov
or
jecxz
outs
ds
cmps
dec
or
jne
in
in
loope
stos
push
nop
mov
mov
ja
test
lock
cdq
sub
and
mov
movs
sbb
sbb
or
nop
mov
(bad)
sbb
popf
push
repz
dec
fidivr
fst
inc
xcrypt-ctr
cmps
(bad)
pop
leave
mov
xor
movs
outs
lock
pushf
xchg
(bad)
sub
sub
push
mov
fdivp
mov
call
ja
movs
arpl
jmp
push
sub
inc
cdq
test
int3
inc
clc
fwait
loopne
scas
stos
xchg
and
fdivr
jb
loope
dec
ins
(bad)
fstp
cdq
enter
adc
div
xor
jbe
ins
xchg
pop
nop
scas
aam
jge
movs
push
xor
add
inc
je
pop
and
bound
sbb
mov
repz
addr16
adc
enter
xor
and
and
cmps
inc
push
fiadd
pop
pop
pop
add
mov
cwde
mov
std
fstp
popa
mov
jnp
pop
mov
cdq
pop
pushf
push
loop
ret
(bad)
shl
lahf
dec
std
jns
mov
push
xchg
add
loopne
mov
mov
pslld
(bad)
jnp
arpl
int
leave
xor
xor
add
jmp
cmp
mov
mov
call
test
mov
ja
jns
pop
adc
xchg
loope
in
or
repnz
ror
mov
(bad)
movs
nop
pop
push
and
mov
std
jo
fucom
imul
pop
jecxz
jecxz
push
add
test
jns
jge
xchg
loopne
es
movs
xor
pop
push
lods
hlt
rol
push
mov
jmp
push
out
pop
adc
mov
fld
jnp
xor
mov
jae
enter
xchg
jns
ds
ins
pop
mov
mov
(bad)
jp
shl
dec
jns
in
outs
test
(bad)
cld
push
mov
cmps
mov
scas
mov
inc
xchg
out
cmp
pop
or
fmul
mov
cmp
sbb
pop
fmul
dec
ror
jne
inc
lahf
ja
fld
cmp
xor
rol
shr
mov
fidiv
mov
outs
xchg
sub
jns
sbb
or
stc
inc
cmc
xchg
adc
add
cmps
fs
je
mov
cld
pop
pop
add
loopne
out
pop
or
xchg
and
mov
sti
(bad)
repz
inc
push
sti
(bad)
dec
ins
sar
mov
mov
retf
loopne
cmps
mov
shr
fimul
popf
push
rol
stos
mov
dec
fwait
popa
push
iret
push
call
cmc
or
fist
sub
mov
or
out
inc
and
outs
test
ret
and
fbld
pushf
daa
test
sar
add
ret
or
adc
in
repnz
nop
push
dec
mov
add
inc
mov
mov
push
or
jnp
test
mov
xchg
inc
ja
js
pop
ins
ins
dec
mov
and
mov
and
scas
adc
pop
sbb
pop
add
cwde
dec
inc
sbb
in
popa
push
das
ins
rcl
mov
das
ds
pop
sbb
gs
mov
xchg
inc
mov
jae
inc
jecxz
repz
and
mov
mov
arpl
sti
or
sbb
jle
arpl
pop
in
mov
inc
ins
fcomp
dec
inc
loope
idiv
jmp
mov
in
stos
repnz
and
push
call
dec
bound
inc
rol
and
call
outs
adc
cld
pop
int
jns
inc
shl
jecxz
inc
jno
pop
mov
cdq
into
cld
push
imul
mov
pop
in
mov
inc
test
in
dec
sti
(bad)
ins
inc
push
mov
jbe
xor
clc
mov
push
cli
sbb
(bad)
push
pop
inc
adc
xchg
jo
clc
jmp
(bad)
iret
lods
cmc
mov
in
jne
shl
jb
mov
lock
movntq
jmp
call
sub
sbb
add
out
arpl
dec
gs
dec
repz
vandps
repnz
mov
rcr
mov
jl
pop
outs
dec
sub
(bad)
aad
and
sbb
cdq
pop
repz
les
cli
in
popa
jmp
jecxz
pop
in
pop
div
stc
imul
rcr
repz
mov
jmp
adc
and
pop
movs
inc
cmps
cmp
int3
mov
lahf
mov
xchg
das
xlat
and
cmp
sbb
adc
sub
mov
push
scas
sub
xor
dec
pop
repnz
mov
xchg
jnp
aaa
sbb
shl
sbb
pop
jecxz
(bad)
pop
pop
ret
sbb
sahf
icebp
mov
mov
xchg
hlt
jne
into
pushf
dec
aam
push
popa
xchg
jl
lds
fistp
leave
mov
(bad)
or
aas
(bad)
pop
cmc
sbb
lods
pop
outs
and
cmp
inc
push
aad
dec
les
jle
mov
cmps
nop
ret
es
ja
cmp
add
mov
mov
adc
scas
jo
jbe
bound
jne
mov
test
mov
or
jne
sti
out
xor
push
inc
xlat
push
mov
out
repz
(bad)
bndldx
sbb
pop
ins
inc
stos
lock
or
mov
and
pop
adc
gs
mov
ins
aas
scas
mov
(bad)
mov
jne
and
in
xchg
dec
jb
data16
test
dec
fstp
xor
add
fwait
xor
fistp
or
sub
(bad)
jmp
add
ss
sbb
lds
or
xor
(bad)
inc
outs
push
or
cmps
call
out
cmp
add
pushf
test
xor
bound
aad
daa
mov
xor
mov
call
push
out
(bad)
not
mov
xchg
push
(bad)
(bad)
dec
mov
jmp
and
push
fcom
or
(bad)
test
xchg
fs
sub
add
loope
rcl
xchg
and
ins
cmp
add
cmps
mov
repnz
mov
mov
loope
mov
repnz
std
cmp
(bad)
jbe
inc
or
lods
aaa
pop
push
test
loopne
repnz
daa
xchg
scas
fdivp
loop
loopne
sar
pushf
sub
fist
in
add
dec
mov
int3
loopne
daa
aam
push
or
leave
add
add
push
inc
movs
sbb
fs
sbb
cmps
mov
test
push
dec
fistp
cmp
xchg
je
loop
aad
ror
out
clc
mov
out
hlt
pop
imul
jno
hlt
sub
xor
sahf
sbb
(bad)
faddp
adc
push
inc
sbb
bound
pop
bound
loop
in
test
adc
pushf
jo
mov
out
aam
mov
test
enter
and
push
aam
push
es
push
inc
push
mov
loopne
test
clc
pop
sbb
or
pop
inc
sbb
and
jmp
(bad)
mov
je
pop
push
push
test
ret
fnstcw
test
in
push
xchg
ins
fxch
int3
jns
fisttp
xchg
fs
cmp
xor
pop
dec
out
sar
mov
xchg
ins
or
std
pushf
inc
and
(bad)
sub
data16
imul
lock
inc
jne
adc
mov
and
jmp
mov
je
into
mov
xor
scas
jge
push
aas
sub
add
dec
rol
sbb
(bad)
mov
xor
or
ja
cmp
inc
jne
add
pop
pop
hlt
aaa
imul
jbe
cmp
mov
shr
mov
into
cmp
scas
mov
push
call
inc
lods
xor
call
xlat
push
fiadd
jo
retf
sbb
and
push
xchg
pop
sub
cmp
lea
(bad)
cs
inc
lods
sbb
dec
xchg
test
shl
retf
adc
and
sub
xor
mov
pop
enter
jmp
xor
js
push
add
jp
sbb
add
mov
dec
cdq
or
pop
mov
push
xor
cmp
int3
aas
fidivr
mov
js
push
cmp
push
ret
scas
or
sti
pop
xchg
popa
jmp
mov
dec
rol
mov
sbb
(bad)
data16
dec
push
jl
call
and
fisttp
dec
mov
fwait
inc
push
enter
cmp
retf
jne
cmps
pusha
dec
fmul
and
pop
out
faddp
ret
add
data16
outs
call
dec
or
lds
test
mov
(bad)
sub
test
int
lock
dec
sbb
popa
sub
push
mov
sbb
mov
pop
pop
not
jnp
jmp
dec
sar
js
inc
xchg
and
push
dec
add
add
js
in
inc
and
stc
sub
push
push
in
push
sbb
(bad)
sub
rcl
loope
movs
ret
cmps
mov
cmp
pusha
adc
or
add
test
pop
jmp
and
xchg
mov
leave
mov
dec
call
fldpi
inc
xchg
dec
add
(bad)
bound
stos
jmp
jns
mov
cdq
add
mov
mov
pop
dec
pop
test
mov
outs
ret
mov
jne
or
ja
rcl
inc
ins
rcr
adc
mov
daa
or
dec
mov
sahf
add
or
imul
call
dec
repz
mov
aaa
mov
and
out
xor
(bad)
adc
mov
inc
in
xchg
cmc
ret
ins
arpl
call
fdivrp
jg
mov
leave
xchg
add
push
xchg
call
pop
stos
add
aad
cmps
cmp
inc
inc
fs
(bad)
sbb
pushf
arpl
ins
add
jne
das
jo
inc
add
mov
lds
lods
mov
add
aaa
rcr
inc
mov
popf
mov
loopne
mov
sar
jns
movs
mov
add
xchg
ror
shl
mov
or
mov
push
pop
pop
aas
enter
outs
cli
adc
sbb
sbb
out
ds
adc
mov
xor
hlt
pop
xchg
add
mov
mov
imul
sar
fild
jg
repz
push
nop
movs
dec
je
sub
nop
hlt
push
jae
sbb
dec
mov
fst
inc
pop
mov
or
in
fst
cmp
ds
mov
inc
inc
sub
mov
cmps
cs
int3
cmp
int3
jb
mov
inc
or
loopne
repnz
fxam
adc
pop
pop
enter
sub
popf
nop
fidiv
xchg
xchg
adc
scas
aaa
es
mov
std
icebp
mov
(bad)
(bad)
aad
cmp
and
inc
fst
xchg
xchg
or
mov
jno
mov
sbb
cmp
movs
dec
xor
inc
mul
jg
mov
cmc
mov
adc
outs
cmps
icebp
mov
and
add
pop
sbb
push
sbb
pop
xor
mov
rol
xchg
aam
dec
aaa
sub
fild
call
inc
loop
popf
sbb
retf
cmp
lock
xor
ins
loopne
mov
mov
cdq
ds
sbb
mov
xor
mov
test
outs
mov
xor
dec
jg
jmp
out
dec
jmp
or
movs
add
push
cmp
dec
test
icebp
xchg
aas
add
mov
mov
adc
int
dec
push
fs
fsubrp
jmp
test
xchg
hlt
ds
mov
lds
xchg
dec
aas
and
imul
clc
mov
aaa
es
add
movs
aad
adc
(bad)
cmp
xchg
test
je
sub
and
stc
jl
mov
sar
inc
mov
pop
mov
in
retf
test
adc
mov
jg
xlat
xchg
fidiv
std
imul
mov
lahf
cmp
xchg
or
js
adc
ja
iret
call
ss
push
inc
fwait
out
iret
out
sub
jmp
dec
mov
call
mov
fdiv
jmp
xchg
mov
push
cmps
jle
fild
dec
jns
loop
imul
or
loope
cmp
sub
push
sbb
push
inc
outs
int
and
aas
mov
inc
fs
and
rol
sub
sub
loopne
jnp
sub
cli
jb
cmc
or
in
pushf
mov
in
addr16
xlat
mov
cs
in
sbb
pop
sbb
fdiv
sbb
loope
loop
pop
(bad)
repz
or
sub
aas
pop
jg
jg
push
xchg
jge
clc
jp
xor
pop
pop
pop
out
inc
add
adc
cmps
imul
cmp
cmp
and
stos
je
inc
in
pop
or
addr16
sar
jl
arpl
inc
inc
push
mov
and
push
int
retf
neg
sbb
stos
mov
sub
pop
int
mov
xchg
stos
std
add
jp
nop
enter
int3
push
inc
cs
mov
out
mov
mov
ret
cs
xlat
scas
outs
loope
aas
repz
aad
pop
test
(bad)
jmp
inc
or
jns
cwde
cmp
sub
adc
outs
test
push
jecxz
lods
or
mov
ret
xor
call
pop
mov
lods
cmps
mov
ror
xchg
mov
lds
dec
jecxz
sub
jl
jecxz
pushf
call
test
(bad)
or
mov
xacquire
mov
stos
scas
push
repnz
cmp
dec
ja
sahf
rcl
cmps
movs
ds
push
push
imul
dec
inc
cld
outs
jl
mov
hlt
test
add
retf
pop
mov
mov
pop
imul
mov
out
mov
fsubr
test
(bad)
(bad)
mov
xor
jo
popf
xchg
(bad)
les
add
aad
xchg
rcr
xchg
add
rcl
rcl
aaa
cmp
repnz
shl
clc
mov
icebp
sbb
sbb
jmp
stos
adc
(bad)
(bad)
(bad)
fmul
and
cmp
cmp
sub
dec
xchg
xchg
call
fadd
dec
cdq
les
adc
xor
das
mov
adc
push
cmps
aas
outs
(bad)
popf
jl
sar
and
mov
or
fwait
stos
push
jmp
fdivr
test
push
stc
repnz
dec
jae
imul
sahf
out
sub
sbb
and
retf
repz
pop
daa
xchg
call
repnz
sub
fs
jbe
pop
mov
inc
xchg
xchg
xor
jno
mov
jg
clc
or
jmp
xchg
leave
push
les
dec
xchg
xchg
cmp
sti
fmul
push
jno
and
add
jo
dec
cmc
(bad)
imul
add
fsub
inc
dec
or
lea
in
adc
shr
push
adc
ins
and
in
call
mov
dec
push
(bad)
push
cwde
fwait
push
cmp
pop
(bad)
aad
into
xchg
mov
add
aam
retf
push
mov
scas
call
and
dec
or
hlt
push
outs
xor
pmaxub
fs
scas
mov
lods
mov
(bad)
push
je
mov
div
(bad)
xchg
(bad)
mov
mov
mov
sub
fadd
imul
fsub
sub
stos
dec
xchg
(bad)
mov
int3
adc
jno
pop
aas
pop
inc
and
mov
lds
adc
sbb
sbb
test
sbb
adc
je
mov
push
or
inc
cmp
sub
dec
ret
lahf
test
inc
popf
(bad)
xor
mov
sbb
rol
popa
call
push
lods
aaa
(bad)
fwait
repnz
sbb
sub
sar
(bad)
push
jl
jmp
and
fnsave
dec
mov
dec
imul
pop
in
push
xchg
dec
dec
frstor
push
iret
sahf
loop
mov
rcr
sub
inc
mov
fidivr
add
or
xchg
mov
ror
popf
enter
test
or
cmp
push
lahf
mov
lds
sti
aam
fimul
jmp
jno
sahf
dec
push
lock
or
fmul
pop
stos
dec
adc
or
mov
add
lods
mov
(bad)
mov
push
mov
adc
dec
scas
inc
aaa
stc
pusha
cli
push
outs
add
mov
add
lahf
sahf
sti
hlt
add
loope
mov
cmps
push
xchg
inc
cs
push
and
inc
rol
push
dec
sub
cmps
cmps
jne
push
mov
mov
cmp
sub
jmp
jmp
mov
pop
loope
sub
(bad)
cmp
xor
cmps
ror
inc
jl
js
inc
lea
cli
push
pop
adc
pop
xchg
cmp
mov
test
inc
push
pop
mov
inc
add
push
cmp
int
push
push
std
fdiv
sub
jl
(bad)
pop
repz
sub
ins
add
mov
xlat
sub
cmp
bound
pushf
sbb
movs
stos
or
mov
mov
fdivr
and
stos
push
mov
aas
(bad)
jg
test
jno
xor
rol
dec
stc
mov
mov
dec
xchg
adc
xchg
add
jbe
mov
mov
adc
adc
movs
popf
cmp
(bad)
scas
jne
test
and
mov
dec
sub
imul
cld
das
jns
sub
loopne
lods
xor
fbstp
jmp
mov
sub
or
xor
in
mov
fimul
fmul
jb
scas
cld
jno
pusha
inc
clc
sub
test
xor
sub
daa
repnz
in
add
xor
sbb
icebp
pop
in
(bad)
push
cmp
pop
in
cmps
inc
inc
(bad)
fdivrp
sub
jmp
lock
fcmovnb
lea
bound
lds
jmp
and
and
cld
out
fwait
dec
pop
sbb
mov
fisub
pop
in
in
es
aam
inc
xlat
cmp
cwde
xor
sub
div
mov
dec
stos
mov
lods
or
ins
jo
cwde
xchg
ret
outs
cmp
add
mov
repnz
into
fcmovnb
push
push
pushf
inc
loopne
xor
dec
fidiv
dec
and
(bad)
pop
cdq
pop
add
pop
dec
pop
mov
jp
mov
cmc
movs
in
jno
xchg
lods
and
in
outs
scas
ss
and
rcl
sub
xor
js
bound
mov
push
mov
sbb
xchg
mov
dec
jbe
(bad)
sub
inc
cmp
and
sub
inc
adc
out
and
jp
cmp
adc
pop
pop
jmp
mov
and
adc
aam
xchg
cmc
xor
fstp
xchg
mov
add
inc
and
fnstenv
imul
sbb
outs
test
jae
mov
push
sbb
in
add
mov
pop
pop
and
adc
pop
sbb
int3
jmp
add
jecxz
dec
ss
add
js
xor
repz
hlt
lock
adc
xchg
push
jae
jbe
pop
inc
cmp
adc
pop
pop
mov
sbb
(bad)
(bad)
mov
mov
inc
adc
mov
inc
repz
sti
ror
(bad)
adc
fs
push
test
outs
adc
mov
push
in
(bad)
sbb
call
dec
xor
std
xchg
add
repz
imul
popf
enter
aam
push
jmp
(bad)
xchg
scas
jmp
dec
lods
cmp
mov
test
shl
add
scas
outs
xchg
(bad)
pushf
repz
mov
mov
or
aam
push
in
or
ret
mov
je
cmp
pcmpeqb
in
ret
sub
push
(bad)
xor
not
cdq
dec
xchg
(bad)
aaa
push
cmp
push
xchg
(bad)
push
test
neg
loope
mov
xchg
push
out
push
jbe
fst
ficom
movs
and
dec
in
or
xor
addr16
adc
and
sub
je
pop
sbb
adc
dec
lods
pop
dec
mov
in
aam
mov
fwait
pusha
push
mov
mov
pop
xchg
inc
mov
jns
jae
mul
xchg
mov
lds
add
ins
push
pop
and
cmp
inc
and
jne
shl
sub
shl
push
inc
rol
jbe
dec
rcl
or
push
mov
jno
sbb
add
and
in
jg
or
sbb
jo
mov
mov
mov
adc
(bad)
adc
stc
mov
sub
inc
dec
mov
cmp
push
jecxz
cld
js
pop
repnz
or
pop
gs
fs
cs
push
or
push
loopne
fld
jbe
cwde
pop
lea
xor
data16
or
mov
jo
push
mov
push
mov
fdiv
inc
loopne
mov
pop
sub
pushf
mov
mul
rcl
sbb
(bad)
jno
sbb
lods
mov
retf
les
scas
pop
xchg
mov
xchg
ret
sti
push
in
sub
mov
mov
lds
push
mov
cmp
push
cmp
arpl
xchg
imul
cld
jp
inc
mov
sub
sub
jae
mov
pop
dec
add
add
icebp
les
inc
fimul
push
jmp
cmc
fst
mov
mov
dec
xchg
std
and
adc
aam
mov
lock
(bad)
jmp
(bad)
ins
(bad)
sbb
cmp
out
push
xchg
outs
push
int
jge
xchg
rol
test
or
mov
adc
cmps
jno
mov
cli
mov
xchg
or
stc
mov
bound
dec
pop
mov
sbb
addr16
pop
sbb
dec
dec
gs
mov
cwde
and
into
xor
fsubr
enter
mov
add
mov
mov
in
push
rcr
fidivr
daa
xchg
adc
push
cmps
pop
cmp
pop
dec
movs
add
shl
mov
arpl
xchg
sub
jle
in
sti
cmps
lock
sub
stos
ret
lea
cmps
jg
outs
ins
mov
aas
fcomp
jmp
pushf
imul
mov
test
test
ja
call
mov
push
lods
ds
int
push
call
jnp
lock
loopne
pop
hlt
ins
nop
mov
fs
stos
fs
mov
stos
ficomp
mov
mov
mov
sbb
fdiv
out
ret
mov
xchg
lock
sub
imul
repnz
and
mov
pop
jg
xchg
(bad)
leave
ftst
jle
loope
pop
loope
aaa
out
in
adc
test
jo
ficom
dec
mov
and
sub
test
and
cmp
fbstp
hlt
ins
mov
test
sti
movs
mov
jle
dec
inc
xlat
rol
gs
shr
or
jae
shl
jns
push
push
inc
push
ret
jge
jo
inc
jge
rol
es
mov
aad
mov
mov
push
retf
sub
scas
sti
daa
pop
fldl2t
push
pop
pop
bound
jp
scas
or
fisub
clc
rcl
xchg
pop
stos
xor
lods
imul
mov
lock
movq
mov
pop
or
ret
mov
scas
fiadd
cmp
sbb
hlt
enter
stos
or
sbb
xchg
iret
frstor
adc
pop
inc
fwait
popa
xchg
fsubr
dec
test
repz
inc
jb
ja
mov
movs
into
enter
sub
dec
dec
push
retf
aam
push
cs
fidiv
cmps
fwait
js
mov
loope
sub
pop
jae
les
outs
sbb
cmp
jnp
and
mov
pop
jbe
pop
ror
push
addr16
lds
cmp
(bad)
test
xchg
adc
mov
xchg
xchg
pop
mov
or
push
dec
call
adc
and
leave
push
ds
adc
fstp
sub
sbb
pop
push
dec
int
dec
scas
jg
and
push
aas
fistp
add
add
pusha
mov
pop
in
pop
es
push
popa
cdq
push
aas
in
xchg
mov
jl
or
in
inc
xlat
leave
(bad)
xlat
rcr
and
xor
mov
xchg
adc
in
adc
cmps
data16
int
and
iret
sbb
add
pop
xor
shl
aas
mov
sub
add
in
repnz
or
mov
jmp
jmp
test
movs
lods
ss
cwde
lock
movs
lahf
mov
sub
mov
(bad)
(bad)
cli
xor
es
xchg
xchg
ins
gs
test
cmp
adc
ja
or
lock
cli
adc
lock
sub
iret
in
push
jg
sahf
jo
add
push
fs
cmps
je
test
jb
xor
and
or
aaa
movs
mov
and
outs
leave
loopne
aad
aaa
ffreep
retf
fwait
(bad)
fst
inc
outs
jne
gs
mov
ds
push
mov
repz
and
sub
mov
push
je
aas
icebp
aam
dec
aaa
sbb
ret
jno
es
push
aad
mov
cld
sbb
fsubr
repz
jno
je
clc
cmp
jle
sub
outs
cdq
fsubr
ss
mov
ja
and
out
add
or
movs
sar
pop
jo
test
mov
test
sbb
jns
lods
mov
inc
add
pop
sbb
mov
out
dec
leave
lods
adc
xor
mov
test
push
mov
aas
jecxz
or
lahf
jge
or
lods
mov
mov
loopne
or
jge
fiadd
cmp
adc
mov
add
stos
mov
inc
dec
mov
stc
fsubr
push
cmp
imul
stos
ret
mov
mov
xchg
lods
loopne
and
(bad)
push
cmp
xchg
ja
jne
lea
adc
xchg
hlt
xor
mov
dec
pop
push
jle
ss
or
jb
dec
fst
xor
(bad)
(bad)
fwait
add
push
jp
sub
xchg
adc
mov
cmps
outs
jmp
icebp
xchg
cmc
scas
test
mov
ret
adc
xchg
fcomi
or
or
bound
jecxz
add
dec
loopne
cs
fadd
scas
ror
dec
sub
cmp
popa
fdivr
repz
arpl
nop
sbb
or
aaa
xchg
push
push
cmp
idiv
daa
cld
push
loope
enter
leave
adc
enter
repz
and
push
outs
and
(bad)
adc
sbb
fild
shr
mov
cmp
aaa
out
ror
jo
jle
outs
(bad)
sbb
xchg
in
mov
xchg
jae
pop
div
imul
sub
inc
ret
cmc
ret
daa
mov
jns
push
mov
retf
aad
mov
push
push
pop
adc
adc
in
ins
outs
pop
jbe
call
xor
neg
call
in
xchg
fist
aam
out
or
sbb
mov
fidiv
push
add
mov
into
popa
or
outs
sahf
xchg
xor
cmp
nop
(bad)
arpl
ins
adc
pop
jmp
enter
into
mov
out
repz
mov
lods
loope
add
mov
clc
add
inc
(bad)
ins
push
xchg
xor
dec
mov
setne
(bad)
cmp
add
pop
inc
jne
mov
mov
jne
popf
xchg
in
retf
dec
pop
push
or
xor
aad
outs
and
xor
mov
push
ror
and
and
hlt
dec
and
adc
cdq
(bad)
mov
mov
(bad)
mov
pusha
sbb
add
loopne
out
dec
jge
stos
or
cs
in
lds
cmc
jne
nop
cwde
jmp
mov
cwde
lock
xchg
jbe
mov
push
loopne
icebp
inc
(bad)
xchg
xor
fldcw
int3
sbb
xor
pop
sub
(bad)
dec
cli
stc
xchg
mov
sti
mov
sbb
ret
loope
cli
rcr
add
push
pop
sub
fmul
(bad)
fnstenv
rol
les
xchg
and
inc
inc
int3
mov
xchg
and
pop
fs
outs
inc
push
mov
cmp
stos
ds
mov
jae
test
and
pop
xlat
adc
push
aaa
sub
(bad)
pop
xchg
test
jmp
repnz
dec
ret
push
aad
fdiv
cwde
dec
adc
cmp
lods
or
or
cmp
scas
or
dec
loop
pop
into
pop
das
cli
dec
retf
pminsw
repz
add
xor
and
popf
sub
imul
in
lock
push
add
xchg
xchg
inc
mov
or
call
aaa
dec
mov
in
fs
cdq
pop
cmp
pop
out
rcl
aad
call
dec
fwait
arpl
cmp
out
mov
(bad)
ds
pushf
scas
cmp
add
push
stc
mov
(bad)
mov
movs
xor
ins
aaa
stc
or
mov
xor
ret
icebp
frstor
mov
dec
out
mov
jge
xchg
xchg
stos
retf
inc
mov
pop
test
mov
jle
stos
cmp
and
imul
stos
movs
mov
int3
push
das
jb
ret
jno
mov
push
cs
rcl
push
cmps
dec
jmp
imul
fmul
or
sbb
dec
(bad)
out
xor
xchg
(bad)
fsubrp
xchg
retf
adc
sub
and
xchg
adc
adc
sub
push
xor
xchg
pop
inc
xchg
adc
or
adc
mov
ror
push
fmul
push
mov
adc
fldenv
pop
dec
les
xchg
inc
push
or
mov
mov
jbe
mov
sub
or
fs
fcomip
pop
mov
hlt
jmp
push
ja
add
test
mov
adc
jl
mov
ds
iret
mov
and
or
dec
pop
shr
inc
adc
dec
pop
jge
inc
test
jg
dec
(bad)
fucomi
frstor
sub
push
or
and
cmp
pop
sub
mov
jge
push
mov
sbb
(bad)
and
inc
inc
icebp
lods
bound
inc
lods
mov
jne
sbb
les
xor
mov
aaa
fmul
pop
(bad)
sub
daa
inc
push
pusha
push
out
repnz
popf
pop
pop
out
inc
in
xor
fld
sbb
dec
pushf
and
repz
cld
cld
or
lahf
jecxz
mov
pop
or
ror
cli
mov
test
adc
push
fstp
test
pop
imul
pusha
shl
cmp
cs
add
adc
mov
aaa
xchg
pop
mov
sti
test
cmp
loopne
jle
aad
xchg
add
xor
jmp
xchg
xor
push
cmp
add
or
lahf
call
notrack
sub
or
int3
data16
lock
dec
scas
imul
dec
xlat
(bad)
out
shl
pushf
jmp
adc
test
cwde
popf
dec
xchg
xor
dec
mov
dec
mov
fsubrp
xchg
and
int
scas
sahf
and
adc
mov
pop
mov
rcr
dec
fs
push
xchg
mov
fs
popf
test
dec
mov
test
jmp
or
push
jbe
xchg
cld
adc
and
cmp
inc
xchg
mov
push
xor
sti
cmp
pop
or
and
lods
pop
out
or
lods
xor
dec
xlat
xor
sti
aad
outs
mov
add
cs
adc
ficom
repnz
sub
std
stos
out
mov
inc
pop
in
lock
(bad)
inc
jmp
mov
xor
inc
adc
lahf
in
mov
and
jns
xchg
out
ror
call
mov
adc
dec
add
ret
jns
sbb
mov
repnz
add
dec
sbb
inc
mov
shl
mov
push
popf
fnsave
(bad)
dec
int3
mov
leave
ja
sub
aam
test
mov
data16
dec
push
cli
mov
inc
mov
pop
call
mov
test
js
shl
nop
in
pop
repz
clc
fisubr
pop
and
rcr
iret
repz
or
mov
mov
fwait
or
sbb
push
jg
xchg
idiv
rcl
lahf
mov
ror
push
add
ds
adc
dec
stos
push
(bad)
mov
mov
lock
ret
push
arpl
cmp
jb
add
inc
push
add
add
stos
add
jg
mov
mov
fiadd
xchg
or
and
sbb
out
dec
aaa
mov
adc
push
cli
push
je
xlat
add
xchg
neg
mov
loope
enter
jno
mov
int3
in
add
popf
int
mov
cli
fdiv
test
dec
clc
adc
cmps
or
jnp
repz
shr
inc
mov
mov
jnp
push
sub
test
fidiv
cmps
gs
ret
add
(bad)
ficom
int
aas
loop
adc
add
push
push
pop
jg
xchg
sub
jmp
in
sbb
or
add
outs
mov
dec
or
xchg
mov
mov
stos
cwde
xchg
das
scas
xor
cmp
and
hlt
fsub
xchg
cmp
ds
sub
or
jmp
xor
ret
xchg
in
enter
cwde
pop
dec
sbb
out
adc
jge
fptan
cmc
jnp
pop
scas
dec
ss
cld
and
sbb
cdq
loope
imul
dec
lods
not
mov
sti
xchg
sbb
jecxz
cmp
retf
dec
cmp
pop
not
movs
out
xchg
rcl
push
cmp
mov
and
cmp
pop
inc
pop
pop
popf
in
or
adc
or
lahf
hlt
test
pop
xchg
jnp
pop
mov
mov
ins
lea
and
and
test
xchg
in
cs
loop
pop
sub
inc
pop
daa
mov
sbb
ins
pushw
imul
cmp
fcomip
inc
xor
or
stos
cmps
es
adc
sub
sub
push
data16
mov
sbb
dec
loop
ins
mov
xchg
xor
and
shr
add
jbe
sbb
pop
daa
clc
add
and
adc
fmul
scas
dec
out
mov
lahf
lods
(bad)
je
arpl
mov
jae
push
xlat
add
push
cli
jo
cmp
fs
mov
mov
cmp
aas
ds
dec
sbb
mov
aad
test
sbb
addr16
(bad)
jnp
jne
mov
push
xor
cmp
xchg
adc
mov
hlt
loopne
push
mov
and
xor
aaa
es
adc
ins
mov
mov
jmp
push
jp
loopne
movs
idiv
or
pop
lock
jmp
ds
addr16
mov
xchg
stc
cli
push
daa
les
push
dec
mov
and
outs
jmp
fcmovnbe
cmp
aad
in
sub
push
int3
das
cmp
mov
gs
lods
hlt
or
mov
je
hlt
push
imul
mov
cli
rcl
inc
test
cs
mov
sub
retf
pusha
xchg
jae
gs
add
movs
cwde
es
adc
jne
pop
mov
(bad)
(bad)
ins
jns
ficom
sbb
fisttp
std
std
movs
adc
test
jl
mov
push
sbb
int
aam
(bad)
or
js
adc
shl
pop
cmps
sub
shl
pop
and
pop
mov
fdivr
mov
dec
loope
push
js
scas
fnsave
dec
in
xor
cmp
fld
lea
popa
dec
lahf
data16
(bad)
pusha
or
jg
inc
and
mov
ret
cmp
xchg
inc
jbe
mov
mov
mov
mov
mov
xor
or
inc
xchg
fneni(8087
les
dec
xor
fs
in
popa
cmp
dec
mov
push
xor
jae
cmps
push
cmps
add
scas
loope
aaa
rdmsr
arpl
gs
clc
ror
cwde
aam
fist
pop
sbb
cmp
push
mov
and
sti
test
mov
fmul
jecxz
popa
jns
xchg
pop
jle
adc
jae
stos
cmp
aad
aaa
xchg
xchg
addr16
retf
pop
(bad)
inc
fwait
add
call
(bad)
(bad)
retf
cmp
shr
neg
retf
sbb
xor
(bad)
out
(bad)
xchg
inc
jmp
mov
add
pop
rcl
jge
repnz
sbb
or
shr
mov
mov
push
ja
bndldx
and
sub
sub
(bad)
adc
ins
aad
mov
and
test
mov
addr16
dec
dec
retf
ret
loope
shl
adc
push
push
cmp
jge
push
mov
vpsubd
mov
jecxz
or
jb
inc
sub
and
mov
inc
bound
mov
add
adc
jl
lods
sahf
test
out
shl
(bad)
fist
mov
nop
xor
dec
push
pop
scas
xor
jl
push
pop
mov
jb
stos
xchg
js
add
scas
mov
pushf
cld
popa
cmp
int3
sbb
ror
movs
inc
stos
scas
popf
arpl
push
rcr
mov
xor
outs
mov
push
jnp
add
repnz
dec
cwde
loope
cs
aam
loopne
ja
stos
(bad)
loopne
sbb
mov
inc
push
sbb
xor
test
mov
cmp
fsub
das
das
stos
stos
pop
mov
sub
loope
retf
xchg
cld
fldcw
push
dec
or
ja
jp
je
pop
in
cmc
shl
sub
adc
adc
adc
inc
fst
push
mov
pop
mov
retf
js
inc
lods
pop
mov
(bad)
das
in
adc
cmps
sub
and
jl
inc
lods
loope
dec
pop
sub
dec
jp
test
sbb
xor
rol
imul
mov
inc
mov
mov
add
or
lock
ror
pop
xor
xchg
push
(bad)
rol
fdivr
(bad)
dec
push
cli
inc
(bad)
pop
xchg
pop
jo
lahf
xchg
cli
les
and
push
and
adc
push
dec
add
sbb
test
pop
sbb
sub
out
and
adc
std
push
nop
dec
pusha
or
add
aad
inc
mov
push
sbb
imul
setp
icebp
imul
cmp
ja
sub
fmul
shr
std
ret
inc
push
push
or
cmp
imul
or
jb
sti
push
dec
addr16
popf
sbb
cmp
inc
in
sub
das
jge
cmp
xor
xor
lods
sub
popf
rcr
mov
xchg
daa
not
inc
mov
sub
repz
mov
add
or
cmp
push
ficom
iret
push
sbb
jge
out
cwde
(bad)
int
(bad)
push
hlt
aam
pop
push
stos
(bad)
arpl
fild
xchg
add
stos
loope
sar
shl
pop
pop
sbb
pop
mov
shl
mov
dec
(bad)
loop
cld
inc
add
test
pop
pop
cmp
mov
lahf
and
dec
shr
add
fdiv
push
xchg
adc
push
fisub
cmp
imul
add
inc
lods
pop
push
and
aaa
enter
and
mov
jle
pop
cmps
hlt
shr
(bad)
adc
div
or
jmp
inc
push
cwde
stos
jmp
bound
adc
mov
and
imul
cdq
jle
aam
mov
push
mov
das
popf
stos
shr
jo
cmp
mov
jmp
mov
push
xlat
pop
jo
and
repz
adc
xchg
dec
loopne
sbb
in
push
and
lods
mov
xlat
sbb
mov
(bad)
int
and
cmps
cmp
inc
inc
cmp
jmp
imul
fistp
hlt
xchg
std
push
frstor
or
push
lods
das
add
test
test
sahf
fstp
ret
ins
scas
jne
movs
cld
and
xchg
les
and
jge
adc
dec
adc
add
scas
adc
retf
mov
mov
xchg
mov
mov
ret
push
cmp
mov
mov
pop
out
cwde
dec
je
inc
out
inc
xchg
test
ror
fisttp
scas
imul
and
lahf
mov
aaa
(bad)
sub
mov
(bad)
push
or
dec
mov
retf
pop
jae
(bad)
mov
jl
jnp
adc
pop
push
into
fcom
push
push
in
dec
or
sub
inc
lds
test
push
outs
sub
test
xor
test
adc
stc
icebp
lds
pop
push
and
xchg
jnp
dec
ds
cmp
imul
nop
adc
inc
mov
pop
mov
js
cmp
push
inc
jg
repnz
loope
cmps
ins
dec
xchg
movs
cdq
rcl
ret
das
arpl
xchg
int
cmp
arpl
jmp
xchg
fidiv
pop
pop
aaa
push
dec
leave
xor
in
xchg
lahf
repnz
add
data16
mov
and
shr
inc
mov
mov
scas
call
push
call
xlat
fs
sbb
sub
inc
mov
loope
in
ret
push
sbb
(bad)
xchg
cmp
fmul
mov
and
dec
lods
pop
jns
mov
es
push
aad
clc
aaa
jne
adc
int
jbe
sub
adc
movs
fistp
mov
ret
inc
pop
dec
hlt
mov
test
xor
cmps
dec
imul
(bad)
and
fimul
les
inc
dec
adc
xor
and
inc
adc
cmp
dec
xchg
inc
ins
fcom
and
cdq
test
adc
push
(bad)
jmp
xor
popa
xor
xchg
mov
rol
sbb
jp
icebp
cmp
bound
lods
sub
adc
mov
mov
dec
sbb
and
repz
or
sti
inc
addr16
enter
sub
cwde
and
scas
lods
xchg
fidivr
data16
ret
std
fld
jecxz
sub
lahf
lea
sub
jg
repz
inc
das
mov
stos
daa
fidivr
add
hlt
rcl
sbb
mov
adc
rol
movs
dec
enter
pop
cmp
mov
inc
std
dec
sbb
mov
push
(bad)
les
fld
cmp
imul
or
xor
imul
mov
pop
in
mov
cmp
push
push
pop
mov
lods
loop
adc
popa
push
mov
movnti
sub
mov
fisttp
pop
ret
arpl
xchg
stos
xchg
repz
mov
fmulp
fidiv
dec
add
in
jb
adc
push
jnp
(bad)
jle
retf
loopne
stos
test
push
mov
aas
inc
add
mov
loopne
mov
mov
test
xchg
daa
fs
mov
int3
jno
pusha
repnz
mov
jge
sbb
mov
out
mov
mov
(bad)
scas
mov
out
sub
mov
push
sbb
cmc
(bad)
cmp
(bad)
leave
dec
push
push
sub
xchg
mov
xor
sbb
call
ins
ret
pop
je
ret
or
nop
add
std
pop
add
das
sbb
shr
sbb
data16
addr16
inc
ja
xchg
sub
dec
dec
ret
ret
sar
xor
inc
data16
test
and
cmp
mov
loope
and
jns
test
adc
cmp
jmp
sbb
cmps
jmp
cwde
arpl
cmp
stos
imul
int3
mov
xor
(bad)
push
sar
or
or
lea
cmps
repnz
mov
(bad)
ror
mov
jecxz
into
test
stc
ins
xor
cmps
aaa
mov
pop
mov
dec
mov
into
arpl
pop
add
or
mov
test
dec
mov
int3
shl
mov
add
add
mov
(bad)
in
outs
dec
hlt
sahf
mov
add
imul
sub
scas
jmp
loope
push
pop
push
inc
dec
neg
mov
fidivr
cmp
(bad)
adc
rcl
idiv
xor
call
(bad)
jb
jl
leave
cli
mov
sti
ret
mov
imul
in
add
inc
add
lea
mov
enter
add
test
push
bound
pop
push
xchg
xchg
ins
xchg
push
int
jmp
loop
aad
xor
ja
call
jmp
pop
cmps
xchg
inc
mov
stos
jmp
sub
ins
rol
sub
pop
pop
xchg
mov
xchg
push
jns
loop
adc
imul
rcr
inc
xchg
xor
mov
or
push
shl
mov
aas
popf
adc
ja
push
cmps
ss
cmp
or
adc
mov
daa
fwait
popa
add
adc
inc
mov
pushf
mov
mov
inc
mov
loop
popa
and
pop
mov
mov
(bad)
fidiv
push
mov
lds
adc
mov
push
sbb
lahf
mov
sti
add
inc
push
dec
and
test
hlt
les
or
fidivr
aaa
popf
mov
jnp
sbb
xchg
mov
mov
mov
scas
ret
mov
sub
into
sar
push
dec
lods
cwde
add
inc
cwde
mov
call
cmp
or
sbb
xchg
loopne
xor
sbb
cmp
pop
mov
sub
ss
xor
push
cmp
cdq
mov
or
add
scas
stos
ja
push
mov
mov
jecxz
mov
push
jb
dec
out
inc
push
in
out
jmp
cmp
int
xchg
dec
add
mov
ss
das
push
cmp
pop
out
and
mov
lea
mov
adc
fistp
scas
(bad)
adc
fimul
add
ds
cwde
gs
fsub
sti
adc
sbb
pop
in
sbb
out
pop
sar
mov
mov
fldenv
int
mov
mov
add
sbb
mov
cmp
adc
test
xor
test
xor
mov
xlat
(bad)
icebp
adc
test
xor
cmp
sbb
adc
add
mov
mov
pusha
sbb
fldenv
pushf
jb
lea
and
and
jo
(bad)
push
jbe
outs
jnp
(bad)
pextrw
xor
mov
mov
push
add
mov
push
pop
jp
les
mov
mov
mov
jg
mov
jbe
pop
xor
cmp
inc
push
cmc
jo
movs
ror
jl
hlt
rcl
les
dec
call
dec
fsubr
popa
loopne
ins
out
das
mov
test
inc
jbe
adc
inc
mov
mov
cmp
hlt
mov
mov
fild
dec
mov
mov
mov
sti
or
push
stc
pop
enter
scas
jnp
push
hlt
push
in
pop
icebp
mov
mov
xor
dec
jge
xchg
jmp
cmp
mov
in
ror
xor
icebp
push
inc
in
ds
xchg
or
stos
or
mov
int3
add
movs
push
pusha
xchg
scas
dec
in
push
rcl
jb
cmp
sti
repnz
or
push
into
jnp
iret
xor
ins
cmp
jmp
xchg
movs
mov
sar
push
mov
cld
mov
adc
jbe
and
mov
es
jo
aam
xlat
jp
pop
loop
mov
xchg
mov
sbb
fwait
and
(bad)
je
bound
cmp
jp
stos
push
sbb
cmc
adc
sbb
xchg
xchg
pop
popf
xchg
ss
pop
das
cmp
shr
mov
mov
mov
xchg
push
test
sub
mov
and
repz
(bad)
push
aaa
xor
jl
scas
rcl
outs
jmp
pop
jae
dec
in
shl
sbb
pop
mov
inc
mov
and
je
repz
lock
and
pop
es
dec
jnp
jp
jmp
scas
(bad)
dec
sti
faddp
shl
lods
icebp
jle
inc
mov
sbb
in
movs
lock
adc
mov
cmps
fcom
or
in
movs
xchg
clc
sti
adc
in
push
out
sbb
add
cmp
xor
jmp
gs
ret
aaa
mov
cli
sti
push
jae
sub
ins
retf
jbe
jb
call
lea
push
aaa
xor
fdivr
lea
retfw
pop
ins
cli
push
pop
adc
cmp
retf
lods
ret
add
jge
xchg
call
inc
jmp
or
mov
pop
xor
jge
test
dec
add
adc
test
cmp
sbb
pop
(bad)
outs
mov
mov
pop
sub
stos
mov
mov
and
mov
fstp
pop
push
mov
pusha
inc
fcmovne
dec
mov
push
in
adc
cmc
sti
pop
shl
icebp
sub
retf
movs
jg
adc
bound
imul
xor
daa
lods
call
repz
add
mov
sbb
cs
inc
dec
mov
jmp
or
mov
adc
mov
gs
into
(bad)
bound
test
or
(bad)
cmp
not
call
retf
ds
adc
std
jecxz
arpl
push
out
push
mov
test
loopne
fidiv
pop
ja
ja
jmp
out
xor
mov
shl
jl
mov
and
shl
xchg
movs
mov
jl
dec
leave
inc
es
mov
in
inc
repz
int
push
xor
cmp
popf
adc
jno
cmp
les
ins
frstor
sub
data16
arpl
outs
test
repnz
mov
int
ss
inc
enter
lea
or
mov
and
pusha
test
xchg
sbb
cmp
push
das
ins
cld
repz
add
pop
dec
outs
jb
(bad)
vmread
sub
inc
jb
(bad)
iret
push
cmp
aas
mov
push
pop
mov
into
push
das
sbb
sbb
mov
(bad)
in
inc
ja
retf
ds
or
ja
push
adc
pop
frstor
repz
xchg
fdivr
or
adc
or
movs
add
jbe
add
pop
pop
(bad)
dec
cmc
idiv
std
(bad)
pcmpeqd
cmp
sbb
imul
lds
pop
mov
popf
jecxz
aam
adc
ficomp
mov
or
add
movs
shl
push
push
scas
cmp
(bad)
pop
dec
or
mov
repz
jg
mov
mov
ins
pop
daa
sar
out
push
cmp
xchg
mov
ja
shl
add
adc
push
fimul
imul
mul
hlt
call
hlt
xor
mov
mov
jne
jmp
inc
sahf
cmovl
xor
stos
pusha
fidiv
imul
and
loop
sub
add
push
daa
pop
das
push
cld
adc
mov
call
jg
pop
loope
ss
es
add
mov
inc
ret
(bad)
es
rcr
fisttp
add
xor
ja
sbb
daa
xchg
ins
fsubr
jg
adc
call
mov
mov
add
adc
call
sub
pusha
les
mov
xor
lds
xor
inc
mov
mov
inc
fs
xor
xchg
dec
shr
pop
cmps
bound
std
or
int
cmc
push
cdq
mov
mov
xchg
pop
sbb
cmps
and
dec
pop
push
stos
cli
dec
and
retf
in
xlat
in
aam
adc
nop
dec
mov
test
out
adc
out
fisttp
ss
mov
jg
mov
fsub
scas
fstp
jae
mov
ret
aam
ja
or
jmp
scas
jge
or
push
push
stos
xlat
bound
cmps
mov
loopne
mov
pop
test
cmp
mov
icebp
pop
daa
sbb
test
push
pop
push
mov
lar
movs
mov
mov
pop
movs
aaa
xchg
mov
adc
fdivr
enter
jge
into
out
mov
(bad)
pop
add
sbb
pusha
add
test
pop
dec
repnz
loopne
push
or
pusha
fiadd
mov
push
jmp
repnz
mov
or
gs
scas
sbb
test
xchg
push
pushf
popf
jbe
jnp
cmp
pop
lds
push
sub
or
sti
dec
push
mov
fyl2x
push
dec
in
and
adc
pop
push
js
xchg
dec
jo
pusha
mov
or
jmp
pop
inc
push
jb
dec
add
jae
leave
mov
xor
sbb
fdiv
adc
or
mov
mov
fcmovnu
dec
push
cmp
pop
push
(bad)
pop
enter
outs
fsub
arpl
xchg
sbb
mov
and
push
clc
pop
stc
ins
ret
pop
sti
adc
ss
in
ss
cmps
stos
data16
leave
fadd
sub
xor
mov
sub
jne
enter
xchg
scas
jg
je
imul
jge
inc
sub
cmp
test
xchg
movhps
out
mov
mov
sub
add
call
lods
das
sub
leave
sbb
retf
sub
or
(bad)
daa
mov
stos
shl
adc
adc
and
push
mov
push
push
jecxz
outs
push
xchg
out
xchg
jb
leave
or
or
mov
or
movs
mov
out
cmps
pop
sub
ds
iret
and
in
movs
mov
nop
xchg
(bad)
cwde
jb
sub
mov
adc
xor
(bad)
fbstp
les
pushf
out
xchg
cmp
inc
sub
mov
in
retf
ins
or
inc
out
cld
jnp
inc
fwait
rcl
dec
mov
ja
mov
repnz
pop
arpl
push
and
push
lds
mov
push
es
pop
fisttp
scas
sub
mov
mov
inc
imul
jmp
xchg
mov
cmp
sbb
cmp
movs
dec
mov
rol
cmp
rol
sub
es
jl
xchg
xchg
scas
cmp
sar
ds
pusha
jg
push
inc
shl
mov
out
mov
jge
sub
cmp
pop
adc
inc
call
xor
in
jmp
rcr
pop
sbb
fs
dec
jne
inc
dec
cmps
into
sar
adc
mov
adc
ret
xchg
sti
ret
out
cmp
in
cmp
jl
cmp
addr16
lahf
sub
adc
ror
push
(bad)
out
push
mov
fld
daa
cli
fidiv
pop
mov
pop
pop
sbb
fiadd
mov
sbb
pop
lock
nop
xor
cmps
jnp
cmp
bound
or
and
loope
call
pop
sbb
or
push
cs
(bad)
inc
aam
inc
sub
xor
mov
mov
inc
sbb
call
(bad)
fdiv
js
retf
loop
popa
lock
fadd
cmp
add
jp
and
xor
sar
mov
sbb
das
in
pop
push
imul
push
jl
mov
(bad)
das
int
(bad)
xchg
in
dec
push
lds
mov
push
fld
push
mov
inc
mov
mov
retf
test
retf
loope
daa
mov
imul
dec
dec
xchg
push
pop
int3
push
outs
push
push
das
dec
jns
xchg
mov
cwde
imul
js
hlt
sahf
cmps
(bad)
xchg
das
jg
pushf
sbb
sub
cdq
cmp
pop
pushf
push
dec
and
inc
cs
retf
jl
pop
cdq
adc
push
(bad)
or
dec
ss
mov
adc
loopne
xchg
aas
sbb
sbb
cli
sbb
dec
cmp
pop
or
and
scas
jecxz
sub
ficom
push
mov
sbb
arpl
std
and
data16
mov
rol
jns
mov
idiv
es
fdivr
loopne
fld
cs
repnz
jb
mov
imul
push
sbb
jae
fstp
das
xchg
jmp
pop
dec
lahf
std
loop
or
pop
mov
xor
popf
das
adc
or
sbb
aam
mov
mov
icebp
and
dec
gs
and
dec
push
sub
sti
in
cli
add
pop
ja
lock
inc
inc
repz
pop
jne
cs
lock
pop
push
adc
loop
jae
ret
(bad)
aad
xor
lods
(bad)
cmps
xor
jae
je
mov
lods
cmps
push
es
fmulp
dec
shr
loop
out
xor
fld
or
in
push
retf
dec
add
mov
jl
mov
sbb
dec
in
mov
add
jg
imul
mov
scas
sub
not
mov
xchg
push
nop
repz
neg
(bad)
iret
hlt
pusha
and
dec
aaa
jmp
outs
mov
add
sub
imul
shl
sbb
jge
push
sub
add
jg
imul
and
dec
test
xchg
cld
addr16
in
pop
sub
and
push
das
push
sub
ins
push
push
sti
hlt
jp
mov
cmp
sub
jnp
cmp
test
(bad)
push
movs
cdq
ins
icebp
mov
xchg
loope
mov
push
jmp
daa
aas
sub
cmp
fiadd
mov
cli
sti
xor
or
(bad)
push
push
cmp
or
xchg
cmp
mov
push
sbb
and
mov
ret
add
sbb
cmp
add
push
cld
dec
int3
xchg
and
enter
xor
inc
aas
inc
mov
stos
lea
fbstp
push
sub
pop
(bad)
popa
jae
outs
retf
push
xor
sbb
mov
aam
mov
(bad)
arpl
cmps
or
mov
adc
icebp
fimul
xchg
xor
(bad)
cld
call
lods
arpl
mov
mov
mul
daa
sar
icebp
hlt
push
movs
out
jp
inc
fnsave
fst
adc
lahf
pop
inc
inc
outs
mov
xchg
mov
call
inc
stc
fisubr
jno
and
cmp
cwde
es
inc
jg
call
push
mov
lahf
ins
jmp
movs
in
xchg
shl
adc
daa
cwde
mov
xchg
test
stos
jg
push
aad
loop
pop
and
mov
and
sub
loop
outs
retf
push
pop
xchg
(bad)
nop
dec
rcr
xlat
stos
mov
dec
push
or
push
scas
hlt
pop
push
dec
(bad)
adc
mov
xchg
dec
ds
test
xor
push
ins
pushf
jnp
lahf
mov
jo
test
bswap
movs
scas
sahf
and
fld
xchg
xchg
mov
mov
inc
jae
fwait
adc
cmp
xor
push
out
sub
(bad)
adc
gs
cmp
cmp
shr
outs
add
imul
das
cmps
test
mov
lock
push
cwde
add
hlt
out
mov
lock
fs
ficom
push
cmps
xor
js
in
xchg
mov
sbb
fs
or
out
xor
sbb
clc
fucomp
mov
shr
mov
push
inc
(bad)
(bad)
sti
jl
es
adc
cmp
and
or
stc
iret
push
jo
lea
rcl
sbb
in
xchg
aad
retf
push
fild
pop
mov
add
jo
cld
pop
mov
xor
pusha
test
and
icebp
pop
mov
sahf
(bad)
scas
aad
mov
iret
xor
mov
icebp
jl
pcmpgtw
jmp
mov
inc
mov
mov
mov
mov
ror
xchg
inc
jle
mov
sub
pop
sub
and
out
dec
add
sbb
cmps
cmova
(bad)
movs
inc
xor
lea
lea
stos
mov
inc
xor
lahf
call
cmp
mov
pop
jo
loopne
pushf
mov
mov
test
mov
adc
pusha
sti
xchg
mov
jmp
push
(bad)
fldenv
dec
cmp
in
mov
out
cdq
add
sbb
dec
inc
fisub
adc
repz
jnp
and
sbb
ja
rcr
int3
push
add
and
push
mov
aam
aam
lods
jns
mov
mov
lods
mov
sub
cmp
mov
add
jmp
dec
xchg
mov
and
(bad)
(bad)
fstp
(bad)
(bad)
stos
push
rol
xlat
out
xchg
repnz
jo
in
aam
mov
xor
ja
push
ror
push
add
dec
in
pop
ds
jb
push
clc
shl
inc
jmp
xor
inc
jle
cmp
into
scas
add
jns
xchg
pop
push
mov
cmp
mov
mul
dec
cmp
push
mov
fadd
mov
ins
sahf
cmp
imul
mov
ror
xchg
mov
sbb
pop
ss
mov
mov
popf
loope
shl
and
loope
mov
cmp
inc
cmp
not
mov
push
mov
or
neg
mov
cmp
shr
mov
xchg
repnz
clc
stos
and
or
out
push
cli
and
shl
hlt
mov
mov
mov
aas
in
fisubr
mov
scas
mov
dec
stc
xor
xor
inc
pop
shr
jecxz
test
xchg
pusha
push
fcomip
sbb
adc
xor
jle
sub
pop
push
push
mov
mov
sub
and
or
pop
in
enter
imul
cmp
sbb
sbb
push
xor
repnz
mov
adc
xor
xor
in
leave
push
lahf
xchg
mov
call
push
aam
fcmovne
or
das
loope
fild
add
mov
inc
fnstenv
daa
add
ficomp
aas
das
ja
iret
in
sub
xchg
ror
ds
int3
xchg
pop
scas
push
add
(bad)
stc
push
(bad)
sbb
(bad)
pop
jns
in
rol
loop
lods
jg
mov
fucom
sub
cdq
pop
sub
xchg
xor
lods
add
jl
(bad)
jae
xchg
ror
and
pop
adc
lods
dec
push
mov
push
mov
out
ja
repnz
hlt
dec
pop
add
cmps
ret
xchg
jno
xchg
imul
iret
lods
clc
and
xchg
aam
jecxz
sub
or
dec
std
jecxz
loope
loopne
mov
cli
adc
jmp
jmp
(bad)
ins
mov
inc
xchg
(bad)
stos
mov
cmps
xor
(bad)
cli
xor
jmp
mov
pusha
xchg
add
in
repz
idiv
mov
xor
jl
cmc
cli
or
xchg
push
sub
sub
add
ficom
mov
sub
loop
inc
dec
call
ins
lss
stos
sub
sbb
mov
fiadd
xor
inc
scas
jg
push
(bad)
icebp
mov
(bad)
je
into
mov
push
or
iret
(bad)
pop
adc
sbb
imul
(bad)
push
mov
int3
ins
push
mov
xor
mov
xchg
out
pop
inc
pop
jmp
into
clc
cmp
clc
push
loop
fwait
sub
aam
hlt
mov
jns
adc
sub
(bad)
fndisi(8087
jbe
mov
imul
push
sti
retf
lods
std
loop
aad
test
(bad)
fstp
jp
add
(bad)
push
jmp
sub
push
push
mov
jmp
movs
cmp
pop
jae
pop
scas
mov
mov
dec
data16
xchg
adc
mov
mov
test
jl
(bad)
scas
nop
outs
mov
xor
ss
cmp
xlat
fsub
mov
cmp
inc
int3
jle
pop
ins
or
(bad)
cmc
cmp
loopne
jle
ds
movs
or
xchg
dec
dec
ss
mov
call
(bad)
ss
fcomip
out
add
shr
mov
xchg
xor
and
xchg
and
rcl
pop
xchg
idiv
sar
repnz
mov
pop
mov
icebp
out
imul
nop
dec
stc
cmp
xor
add
push
popfw
loope
lock
dec
add
jle
jecxz
mov
sub
icebp
cmp
stc
pop
je
and
popa
inc
test
mov
(bad)
mov
imul
ss
(bad)
outs
aas
nop
xor
xlat
(bad)
sahf
ss
fs
test
fldcw
mov
add
jle
rcl
or
sbb
sub
cmp
xchg
xchg
jp
nop
sbb
jle
xor
shl
movs
icebp
inc
in
or
loopne
pop
mov
jg
ss
cmp
sbb
adc
jno
mov
retf
(bad)
lods
dec
jmp
aam
or
dec
cmp
stc
ret
sahf
ror
rcl
movs
and
xchg
aas
(bad)
jo
fwait
sbb
or
jmp
lds
inc
jbe
mov
pusha
cmp
sbb
stos
sahf
xor
pushf
loop
cdq
xlat
jbe
loopne
aam
pusha
in
in
vcvtps2pd
mov
lea
jp
mov
mov
sbb
mov
ins
je
and
ins
sub
loopne
pop
pop
add
pop
mov
inc
ja
xor
mov
ja
(bad)
shr
cmc
jle
int3
in
xor
je
sub
push
bound
test
inc
mov
xor
cwde
imul
or
and
push
mov
loop
jbe
pop
push
pushf
fidivr
je
xchg
pop
call
aas
(bad)
stos
adc
sbb
test
test
adc
cmp
xor
pushf
or
repnz
xchg
data16
addr16
lea
inc
test
leave
pop
mov
adc
gs
cdq
xor
mov
aad
shl
push
pop
fild
shl
inc
mov
mov
pop
pop
loopne
mov
lods
mov
test
repnz
add
inc
into
sbb
mov
sahf
movs
pop
or
mov
std
cmc
popf
adc
arpl
or
pop
stc
cmp
pop
(bad)
inc
das
jmp
pushf
mov
repz
adc
adc
stc
das
nop
fidivr
pop
outs
or
repz
or
jcxz
cli
inc
mov
sti
xchg
and
or
lods
inc
mov
outs
fcmovne
cmp
mov
adc
dec
sub
add
cmp
jae
cmp
and
jl
mov
xchg
cli
dec
outs
jl
int
jmp
dec
fwait
loopne
addr16
ficom
lahf
repnz
outs
call
mov
ds
leave
iret
sar
icebp
and
mov
lods
stos
inc
dec
xchg
mov
xor
and
cmp
clc
stos
mov
jge
scas
lea
sub
pop
or
xchg
shl
pop
push
adc
adc
adc
mov
dec
or
mov
sahf
outs
mov
jle
sbb
sar
push
mov
pop
add
nop
(bad)
aas
loop
xchg
mov
jno
outs
pop
lock
xor
stos
push
adc
and
mov
fmul
jbe
mov
and
vpinsrw
jp
shl
xchg
cmp
pop
mov
out
and
fiadd
dec
out
mov
fcomp
out
icebp
ss
mov
dec
sub
or
stc
ins
imul
xchg
pop
sub
ret
push
es
in
in
mov
cmp
xchg
mov
ds
enter
cld
push
or
push
popa
je
retf
xchg
mov
mov
sbb
dec
pop
adc
cmps
lea
push
mov
or
enter
mov
rol
inc
aam
xor
dec
bound
mov
or
(bad)
sbb
addr16
rcr
mov
and
push
inc
mov
pushf
mov
cmps
jecxz
or
or
lods
jle
adc
lock
(bad)
loopne
xchg
and
lds
fxch
int
nop
enter
pop
fld
gs
loop
mov
sub
mov
out
mov
fdivr
ds
stc
shl
dec
test
movs
cmp
xor
movs
scas
add
xchg
in
icebp
mov
adc
fnstsw
retf
pushf
xor
push
ret
sub
mov
jmp
int3
daa
popf
imul
mov
iret
sbb
out
add
jp
or
xor
jbe
pop
retf
mov
push
adc
mov
jmp
mov
enter
ins
jge
fs
mov
popf
test
mov
out
xor
in
je
outs
int3
xchg
ds
int
inc
and
test
cmp
fist
retf
aam
in
cmp
add
repz
mov
push
inc
jns
movs
cmp
mov
loop
cmp
pop
cld
scas
pop
pop
in
jne
or
push
xor
sbb
stos
sub
fmul
dec
cmp
push
outs
fisub
int
jmp
jp
cmp
xor
scas
cmc
or
ins
jno
test
in
xor
cmp
(bad)
xlat
sub
cld
mov
repz
stos
nop
sub
adc
sub
or
or
in
sbb
dec
scas
jg
xor
loope
(bad)
out
jp
je
fwait
dec
icebp
mov
xlat
sbb
adc
add
rcl
cmp
xchg
add
les
mov
jae
retf
cs
lahf
cmp
fidiv
mov
mov
mov
ror
sbb
push
mov
inc
mov
xchg
fdivr
mov
sub
pushf
inc
call
aaa
call
in
ins
mov
stos
arpl
xor
fist
fiadd
rcr
xor
ss
js
pop
adc
adc
and
loopne
stc
mov
mov
addr16
fadd
jp
shl
jmp
push
scas
scas
add
pop
(bad)
out
shr
and
test
xchg
dec
bound
int
xor
das
mov
mov
popf
sub
inc
mov
and
sub
lock
jg
sub
cmp
jns
dec
xor
jns
cmp
ins
jg
aas
leave
mov
call
jo
out
out
scas
loope
lock
xchg
pop
test
ds
cli
retf
es
fs
jo
cwde
mov
jmp
jl
push
jge
pop
iret
rcl
adc
push
mov
mov
stc
jl
enter
rcr
and
cmp
gs
pop
mov
sub
and
sbb
and
shl
push
sub
arpl
xchg
add
out
mov
push
dec
in
dec
sbb
cmp
jmp
mov
fcmovnb
pop
movs
mov
mov
mul
std
stos
into
jp
xchg
sar
sub
mov
dec
xlat
and
mov
cmps
and
or
call
cwde
jmp
xchg
cs
stc
xchg
(bad)
cmc
mov
test
adc
mov
test
fcmove
imul
push
sbb
or
in
sbb
mov
push
int3
stos
xchg
or
stos
jno
jl
ds
pop
cmps
and
pop
in
nop
mov
dec
jmp
mov
mov
push
in
sahf
or
retf
fistp
outs
icebp
arpl
mov
sub
fmul
or
gs
mov
jnp
lock
(bad)
neg
mov
mov
inc
xor
fcomp
sahf
ficom
sub
mov
bswap
inc
call
call
loopne
ins
retf
pop
outs
in
imul
jmp
sbb
out
push
cdq
cwde
or
jo
cmps
or
sti
push
out
sub
outs
jo
adc
mov
cld
in
dec
loop
ret
xchg
sub
and
addr16
cs
lods
cmp
and
js
adc
sub
push
imul
xchg
test
fwait
call
push
in
push
std
rcl
test
(bad)
lahf
hlt
(bad)
iret
xchg
jmp
cmp
adc
xchg
and
xchg
sar
fwait
arpl
xor
das
mov
fnstsw
mov
test
in
call
adc
xor
fdivr
push
push
dec
push
dec
mov
xchg
ins
cli
hlt
or
pop
cmps
xor
push
iret
stos
mov
sub
gs
or
pop
or
out
loope
call
or
aaa
push
in
mov
mov
scas
sbb
dec
sub
and
dec
push
loop
out
call
test
fs
mov
or
add
push
and
lock
in
and
xor
lahf
std
mov
es
ffree
mov
cmp
or
xchg
gs
daa
div
ins
scas
jbe
mov
imul
mov
scas
pop
outs
jmp
mov
add
enter
cmp
xor
aam
or
adc
and
cdq
(bad)
jns
sub
pop
jmp
pop
push
fidivr
xchg
jg
pop
push
sub
scas
inc
sbb
cdq
loope
iret
or
add
sbb
sbb
inc
or
daa
pop
xchg
sub
inc
jo
mov
(bad)
sbb
lds
cwde
mov
ds
test
mov
jne
cmp
xlat
add
pop
dec
test
inc
leave
pop
adc
inc
sub
sub
jnp
fiadd
xor
jb
daa
add
rol
xor
out
ins
or
js
outs
jnp
mov
scas
mov
das
or
sub
int
mov
test
loope
out
xchg
in
(bad)
shl
aas
popf
stos
gs
arpl
mov
cmp
sti
xchg
fidivr
data16
(bad)
mov
int3
fdivr
pop
xor
das
or
es
in
stc
nop
and
arpl
loopne
jns
inc
jns
lds
imul
or
leave
sub
loope
stc
fild
dec
mov
jo
cmp
inc
test
std
icebp
pop
xchg
mov
leave
xchg
sbb
sub
jecxz
jbe
add
jns
xor
out
jmp
xchg
pop
icebp
pop
cmps
mov
cmps
mov
or
(bad)
push
aad
mov
arpl
dec
cmps
jle
out
add
arpl
pop
ret
outs
sbb
xchg
lods
xchg
xchg
(bad)
out
mov
mov
fcompp
int3
es
dec
rcl
mov
mov
dec
cmp
fs
cmp
pop
scas
dec
loop
push
movs
dec
dec
add
pop
or
pushf
movs
push
mov
ret
loop
pop
push
push
movs
pop
outs
push
stos
lods
test
adc
dec
xchg
xchg
sub
inc
pop
ins
and
lahf
push
int
imul
nop
mov
push
out
sbb
jmp
xor
or
add
jp
ret
cwde
in
xchg
int3
inc
cli
pop
jecxz
call
or
repz
int
loop
imul
and
pop
sbb
call
lds
mov
dec
cwde
mov
lods
stos
inc
dec
retf
jmp
inc
or
test
or
xchg
xchg
outs
stos
dec
and
xchg
cld
jae
sub
leave
idiv
sbb
adc
outs
dec
dec
sbb
mov
sbb
test
imul
in
call
fs
dec
sub
mov
leave
jno
xchg
scas
iret
enter
rcr
std
xchg
stos
and
iret
(bad)
std
shl
mov
pop
adc
and
mov
int3
dec
add
push
shld
xchg
xchg
pop
cdq
xor
push
adc
sub
aad
adc
jb
mov
mov
jne
cli
rol
arpl
and
add
push
call
jne
daa
and
xor
push
jp
hlt
es
adc
data16
add
fadd
add
cmps
dec
push
sbb
xor
popf
jmp
fist
pop
xor
test
nop
dec
push
mov
jmp
mov
lahf
adc
inc
adc
jle
imul
adc
(bad)
int3
imul
dec
push
fistp
pop
cmp
xor
je
mov
in
fst
jne
mov
fdivr
mov
mov
repnz
rol
movs
jl
cmc
jecxz
jle
out
push
xchg
xor
mov
hlt
aad
inc
iret
fxch
xlat
sahf
cmp
(bad)
rcr
test
jp
xchg
sub
pop
ds
or
mov
pop
mov
dec
dec
mov
jo
ins
and
test
fstp
sbb
nop
ja
cdq
jno
inc
das
dec
push
(bad)
push
adc
hlt
push
stc
ds
cmps
(bad)
fidiv
xchg
dec
cdq
jo
daa
inc
rcr
and
pop
fs
stc
pop
icebp
call
nop
xchg
clc
scas
aam
(bad)
(bad)
push
sar
clc
fcmove
addr16
sub
fst
das
cwde
jnp
xor
ins
jns
inc
and
enter
sub
jecxz
pop
fstp
iret
xor
pop
add
loope
call
push
fs
mov
push
inc
inc
mov
pusha
mov
in
aaa
adc
cwde
cwde
(bad)
lods
sub
cli
xor
xlat
push
call
adc
sub
gs
mov
jmp
add
sub
rcr
xor
jecxz
push
sbb
test
inc
fistp
mov
out
rcl
xchg
cmp
xchg
pop
lods
xchg
push
xor
push
aad
pop
sahf
icebp
aaa
xchg
mov
jmp
or
neg
push
pop
pop
or
out
cmps
xor
mov
xor
rcl
ret
ds
cmp
icebp
lds
popa
cmp
arpl
daa
sbb
nop
and
fisubr
or
in
jp
fwait
div
cmp
inc
int
shl
loop
daa
sub
adc
jp
fisub
or
les
inc
xchg
inc
xadd
(bad)
pop
mov
xor
shl
add
hlt
div
and
cdq
dec
dec
test
pop
fs
pop
popa
imul
ins
push
dec
xchg
aaa
xchg
dec
xchg
inc
jg
test
dec
mov
enter
in
inc
pop
jp
outs
add
bound
lods
or
sub
sub
sub
sbb
push
jne
jae
pop
faddp
push
arpl
adc
test
adc
pusha
mov
push
cmp
and
push
add
xchg
pop
jge
fwait
xchg
push
cdq
mov
into
dec
dec
rol
cmp
jp
add
or
in
mov
xchg
les
pop
or
in
ficom
cmps
lock
xor
mov
pusha
pusha
sti
dec
outs
lock
ss
push
mov
sbb
jmp
and
jnp
mov
outs
cmp
push
in
in
xchg
push
jnp
aaa
xor
fstp
cmp
cmp
div
dec
std
sti
inc
retf
ss
cmp
cmp
mov
sbb
or
jge
mov
jecxz
loop
mov
scas
xor
jge
imul
inc
jp
push
ins
ret
inc
mov
stc
sbb
pop
sar
iret
xchg
stos
(bad)
mov
(bad)
jle
sbb
inc
cmp
(bad)
std
movlps
jae
jae
xor
push
nop
call
dec
cmp
jbe
(bad)
gs
mov
shl
sahf
add
out
push
or
xchg
ins
bound
das
shl
nop
not
push
or
repnz
(bad)
pop
dec
pop
dec
mov
cld
test
push
retf
(bad)
int
aaa
jno
jns
push
push
inc
push
in
add
arpl
mov
jge
adc
push
sbb
cld
add
cmps
mov
rcl
cmp
loope
xchg
mov
or
outs
ret
dec
or
jae
pop
stc
inc
jnp
or
jno
push
mov
imul
mov
out
test
pop
es
(bad)
arpl
cmps
pop
pushf
(bad)
push
scas
sbb
cs
jp
jb
jp
mov
jnp
pusha
retf
xor
mov
out
sbb
and
and
out
dec
call
es
(bad)
xor
adc
sar
dec
out
mov
lds
shl
inc
push
pusha
jge
enter
ds
pop
mov
pop
pop
mov
out
or
pop
xchg
fmul
adc
sub
mov
inc
std
xchg
mov
dec
cmp
sub
cs
dec
sahf
data16
or
mov
xchg
xchg
dec
popa
mov
pop
mov
ret
mov
cmps
push
in
(bad)
test
scas
loope
push
popa
jb
and
and
mov
sbb
dec
cmp
loopne
xchg
mov
adc
dec
fmul
cwde
ret
xchg
call
inc
ret
leave
inc
retf
sub
mov
nop
mov
ja
cli
lods
jecxz
ds
push
mov
mov
popf
ret
mov
xor
xchg
outs
add
add
stos
sbb
cld
aad
ds
add
stc
out
and
popf
fs
and
mov
sahf
or
add
mov
mov
ja
mov
inc
ja
add
mov
js
adc
(bad)
aam
pop
push
cmps
mov
stos
xor
ja
dec
vpmovmskb
mov
adc
call
in
test
cmps
int
or
sub
cmp
cmp
stos
push
rcl
mov
mov
sbb
rol
out
sbb
into
lock
leave
mov
cli
mov
pop
cs
out
xchg
sbb
icebp
push
jbe
adc
cmp
xor
adc
sahf
jmp
add
cld
clc
add
pop
out
adc
sbb
sbb
test
jbe
push
ds
sub
repnz
adc
adc
imul
inc
test
mov
js
popf
dec
call
retf
jmp
repz
and
sbb
dec
push
iret
jle
in
ret
(bad)
fcom
dec
jae
aad
jl
mov
aad
xor
stos
jmp
or
dec
(bad)
and
dec
adc
dec
pusha
daa
sub
clc
bound
daa
cmp
cli
xor
xchg
mov
dec
mov
jmp
push
ret
push
pop
pusha
dec
scas
call
js
pop
inc
ficom
sbb
lds
les
xlat
mov
jb
std
jmp
push
inc
lods
mov
and
pop
cmp
enter
sub
dec
cdq
mov
dec
and
cmp
jmp
lods
add
retf
adc
mov
shl
add
loop
retf
aam
movs
push
xor
push
sar
iret
retf
(bad)
push
lock
ret
aas
inc
out
mov
mov
xchg
push
pusha
mov
stc
pop
mov
das
jge
jp
inc
imul
mov
push
or
adc
pop
into
lea
dec
(bad)
fiadd
(bad)
(bad)
cmp
in
mov
xchg
push
out
jge
arpl
xchg
add
stos
daa
in
rol
out
mov
retf
ss
add
popf
mov
(bad)
fwait
add
sahf
mov
les
cwde
xor
icebp
mov
out
cmps
popf
push
push
pushf
inc
mov
scas
push
pop
mov
mov
das
mov
fucomip
xor
adc
(bad)
imul
test
(bad)
je
movs
push
adc
fucomi
mov
cmp
int
cli
or
pop
pushf
sbb
movs
ins
pusha
xor
out
dec
jl
sub
push
inc
dec
cmps
mov
cmp
call
inc
pop
(bad)
iret
cmps
push
outs
mov
mov
mov
cmp
mov
sub
sbb
jp
test
pop
bound
ja
xor
es
hlt
hlt
shl
adc
mov
mov
and
cmc
out
xor
(bad)
dec
jp
or
fucomi
xlat
xchg
dec
xchg
stos
cmp
mov
lds
cmp
es
cmp
cmc
cmp
data16
mov
jge
inc
pop
mov
loope
xor
sar
push
inc
std
int3
or
mov
sbb
and
aaa
and
ins
popf
inc
cmp
scas
jnp
(bad)
out
sbb
or
adc
xchg
or
icebp
je
adc
xor
jns
push
cmps
ja
stc
js
mov
cmps
sbb
mov
jl
call
and
es
push
pushf
push
aam
pop
(bad)
fstp
jbe
cmp
shl
sub
pusha
mov
jae
and
pop
mov
jns
fdiv
inc
imul
sub
ror
sbb
hlt
mov
ins
or
(bad)
xchg
xchg
jl
mov
js
enter
xchg
cld
or
bound
(bad)
outs
pushf
inc
adc
mov
fild
arpl
rol
xchg
inc
mov
fld
loope
jno
fucomip
(bad)
pop
jbe
fld
cmp
add
jns
adc
jb
es
bound
adc
mov
mov
or
pop
push
icebp
call
lock
hlt
cmp
jge
std
cmp
or
lock
push
lock
and
sbb
add
add
in
imul
dec
test
pop
imul
arpl
mov
gs
rol
dec
arpl
rol
scas
out
rcr
es
dec
aam
mov
in
mov
pop
mov
inc
sahf
cmp
dec
pop
cmp
adc
int
int
enter
add
call
mov
mov
and
and
cmp
mul
aad
test
jae
sub
and
or
jb
test
mov
out
clc
daa
hlt
stc
es
int3
jecxz
mov
xchg
push
push
fstp
mov
icebp
cmp
push
int
jne
pop
push
and
fstp
fisub
test
lds
in
add
mov
sbb
xor
outs
scas
aad
js
imul
fcomip
hlt
xchg
adc
daa
into
mov
xchg
repz
lods
mov
cmp
jle
bound
loopne
mov
jns
cmp
cli
cld
or
fcmove
out
mov
pop
nop
and
(bad)
repz
mov
add
lods
fistp
xor
mov
fcmovnbe
adc
movs
or
push
xlat
test
adc
inc
dec
pusha
mov
cmovl
dec
into
or
xor
popf
(bad)
fs
mov
aad
adc
and
scas
xor
lea
mul
mov
call
or
adc
mov
dec
lock
dec
push
sub
into
dec
ins
test
mov
cli
mov
sub
xor
movs
(bad)
retf
imul
dec
hlt
int3
xor
and
in
imul
xchg
push
fisub
dec
sub
xchg
inc
dec
push
pop
mov
mov
aaa
stos
pop
(bad)
pop
test
xchg
outs
jne
not
bound
in
pusha
lea
ja
push
je
cmp
cmp
out
xchg
mov
push
mov
lods
add
sbb
xor
popa
cmp
jl
jae
sbb
call
ret
cmps
dec
or
ror
aas
pop
sar
xchg
fisub
dec
pop
out
imul
popa
cmp
adc
ret
daa
imul
out
jnp
scas
(bad)
pop
fcomp
adc
xchg
ja
pop
push
test
sbb
cld
repnz
sbb
or
out
cmp
fsincos
in
xor
push
scas
add
push
imul
repz
mov
inc
mov
shl
call
(bad)
rcl
in
add
mov
es
dec
outs
dec
lods
xchg
dec
or
mov
cmp
stc
pop
std
or
xchg
fwait
inc
add
and
mov
mov
mov
pop
pop
mov
xchg
dec
adc
sti
in
repz
mov
test
aaa
rcr
or
data16
lds
jecxz
cmps
push
inc
xchg
imul
fnstsw
rcr
push
inc
ins
pop
sub
ins
pop
ret
out
adc
mov
jge
aaa
aas
outs
scas
jmp
popf
ret
push
gs
adc
mov
in
aaa
jecxz
imul
ins
xchg
bswap
aaa
fsubr
cmps
stos
fnstsw
stc
jbe
adc
nop
das
xchg
adc
mov
fdiv
fdiv
scas
xor
les
mov
pop
push
shl
xchg
outs
cwde
pop
push
xchg
leave
sbb
push
(bad)
loop
jg
call
pop
sub
xor
cmps
jle
mov
aam
jecxz
fsub
test
cmp
sub
sbb
jns
jae
push
jmp
sub
jle
jle
loope
mov
imul
pushf
mov
pop
hlt
shl
and
sbb
lea
mov
test
js
dec
dec
pop
cli
mov
(bad)
jg
push
call
loopne
mov
mov
ins
xchg
mov
imul
mov
sub
sub
xor
xchg
retf
(bad)
hlt
xor
ja
sub
jp
adc
loopne
mov
push
cs
test
push
(bad)
ror
cmp
lds
sub
js
mov
cmp
mov
and
jg
mov
add
add
loopne
arpl
jb
aad
adc
jmp
pop
adc
(bad)
dec
test
jecxz
inc
inc
cmp
jnp
sub
xor
das
push
xor
outs
outs
loopne
push
jp
cmp
mov
test
test
sub
or
in
(bad)
repz
ret
sub
dec
dec
or
ins
xor
int
add
sub
push
xchg
xchg
push
mov
(bad)
pop
push
inc
fwait
rcr
inc
push
mov
inc
mov
not
sub
dec
pop
arpl
push
mov
inc
cdq
mov
js
sar
imul
loopne
push
xchg
sar
dec
add
lahf
xor
jge
jmpw
jae
psrlw
out
push
push
mov
jl
test
fwait
push
movs
dec
mov
out
jne
adc
gs
adc
jnp
jg
jle
sti
xchg
adc
es
inc
enter
push
das
cli
fdivr
cmp
ror
add
into
mov
pusha
scas
imul
and
fild
add
push
add
into
addr16
in
add
mov
rcr
mov
cld
push
fdiv
cdq
xor
sahf
dec
mov
mov
and
imul
jp
sub
fidivr
mov
fwait
out
movs
inc
xchg
xchg
xor
out
sbb
or
xchg
neg
mov
xor
xor
or
(bad)
lods
lds
mov
stos
xchg
cmp
in
arpl
pop
jp
mov
int3
lds
inc
(bad)
sub
xor
add
adc
inc
and
mov
jmp
cmps
pop
mov
pop
mov
scas
stos
push
das
shl
inc
dec
in
mov
cmp
xor
cmps
and
movs
jge
pop
mov
sub
dec
test
pop
cmp
aam
shr
dec
rcl
xor
add
dec
mov
ds
inc
dec
iret
movs
mov
xor
or
jne
(bad)
cmp
xchg
ret
pop
stos
sub
adc
push
(bad)
outs
in
ficomp
adc
aaa
cmp
cdq
addr16
cwde
das
cmp
xchg
mov
icebp
das
or
retf
loope
pop
loopne
push
in
sub
xchg
mov
or
pop
loope
out
add
xchg
jns
push
push
cwde
shl
aas
not
mov
mov
or
inc
clc
outs
(bad)
repz
in
test
cmps
(bad)
hlt
js
sub
jecxz
sub
dec
(bad)
out
adc
cwde
popa
pop
(bad)
jno
mov
push
mov
rcr
xchg
repnz
mov
int
fcomp
add
iret
xor
and
inc
test
push
add
fnsave
lods
repz
mov
addr16
imul
cwde
cmps
and
(bad)
data16
or
(bad)
aaa
aas
mov
pusha
pop
and
fild
mov
pop
fwait
mov
or
fdiv
cld
sub
int
pop
loopne
sbb
push
out
mov
adc
mov
dec
loopne
push
and
pop
pop
data16
(bad)
dec
add
addr16
and
add
jnp
add
sbb
cmp
ja
leave
dec
jbe
sub
cwde
mov
and
mov
hlt
xor
shl
inc
dec
out
out
jns
nop
mov
push
inc
mov
call
jp
dec
call
call
cmp
ret
xchg
or
hlt
fistp
mov
mov
mov
xor
in
inc
inc
and
pusha
add
imul
push
imul
call
xchg
es
push
adc
push
mov
outs
add
sahf
outs
adc
mov
jp
xchg
dec
adc
dec
fcomp
adc
loop
push
in
sub
test
xlat
outs
pop
lds
sub
and
dec
add
adc
repnz
pushf
ins
enter
pop
xor
sbb
rol
dec
loop
push
addr16
outs
pop
xor
add
mov
shl
imul
or
das
cmc
mov
sbb
ins
sub
sbb
call
pop
cmp
(bad)
loop
cmps
and
sub
rcr
dec
inc
dec
stc
jnp
or
out
jge
xchg
mov
jp
pop
push
pop
and
lock
int3
add
or
jae
pop
aam
sbb
mov
add
mov
dec
je
mov
inc
mov
add
mul
adc
in
fistp
sbb
lds
out
dec
jg
xchg
test
pop
pop
push
ja
xchg
push
mov
fdiv
outs
stos
sub
imul
arpl
mov
jl
mov
inc
sbb
add
sbb
jne
push
inc
inc
imul
push
test
fisttp
in
push
dec
dec
shl
pop
shl
jae
scas
jnp
iret
into
and
and
pop
ds
adc
add
out
xor
call
xchg
cs
jle
mov
cmp
je
sti
xchg
xor
add
and
xchg
mov
lods
(bad)
lods
mov
inc
popf
inc
pop
adc
pop
add
mov
aas
fcom
sahf
popa
mov
in
mov
stos
pushf
mov
cmp
sbb
add
push
and
jmp
sub
stc
dec
and
adc
xor
jo
mov
dec
push
pop
std
mov
mov
ror
pop
add
sbb
out
outs
push
cli
and
es
adc
in
mov
inc
cmp
jl
retf
ret
out
mov
dec
mov
xor
xor
xchg
cmp
mov
aam
push
or
ds
emms
ins
push
dec
sbb
fs
push
repz
aam
and
sbb
jg
mov
xor
jns
and
iret
pop
(bad)
or
(bad)
adc
mov
sub
push
jnp
stos
fsub
sbb
data16
xchg
jne
mov
hlt
pop
mov
fdivr
mov
movs
cld
pop
out
stos
fadd
fwait
popf
add
out
adc
fwait
cld
cwde
jb
sbb
les
fst
adc
mov
mov
pop
lea
loopne
mov
int3
sub
inc
mov
cmp
js
jl
dec
pop
shl
stos
in
pop
inc
push
xor
xchg
jb
jne
mov
dec
mov
mov
les
es
push
adc
push
jmp
or
test
dec
wbinvd
ins
addr16
mov
mov
push
cmp
xchg
test
scas
hlt
ret
data16
jbe
lods
cmp
bound
test
cld
fcom
add
adc
mov
jge
xchg
js
and
cld
pop
in
add
jmp
xchg
adc
lods
out
inc
pop
(bad)
mov
icebp
call
retf
out
cmp
fsub
jns
or
push
or
jg
adc
push
cli
cmps
daa
cld
mov
int
dec
xchg
ins
bound
div
mov
lds
or
xor
dec
out
outs
test
nop
pop
pusha
imul
cmp
xor
ret
sub
outs
ins
lds
push
imul
ds
add
test
pop
enter
dec
fimul
sar
fwait
jo
mov
sar
not
push
adc
call
bound
xchg
scas
inc
(bad)
ja
mov
and
(bad)
retf
std
aad
fidivr
sahf
aaa
mov
fxam
jne
xchg
neg
or
adc
or
dec
xchg
ret
mov
jl
sub
mov
push
dec
jecxz
ss
jl
lea
repz
imul
cmp
aad
pop
jp
add
xor
fnstsw
push
mov
adc
rcr
ja
(bad)
shr
inc
arpl
sub
lds
sbb
ret
fimul
cmc
shr
scas
push
sti
adc
and
jp
ds
adc
fmul
cmp
mov
push
(bad)
fsub
movs
pop
push
test
and
mov
add
mov
jmp
push
sub
push
mov
ficomp
js
ret
dec
or
pop
outs
inc
mov
aad
ret
fild
inc
dec
into
popa
lock
jg
arpl
in
jg
fucomi
mov
(bad)
pop
xor
cmps
mov
scas
and
mov
arpl
mov
inc
outs
rcr
lods
dec
and
fldcw
jo
or
rol
sbb
jg
icebp
pop
push
sbb
stos
xor
test
popa
out
jnp
pusha
sti
sar
cmc
out
and
(bad)
inc
mov
xor
xchg
pop
int3
sub
mov
pop
sub
fst
lock
mov
adc
int
shr
mov
(bad)
scas
aam
xchg
push
out
xchg
fs
xor
arpl
lock
popf
jnp
neg
fistp
and
mov
rcr
sbb
iret
mov
mov
xchg
push
ins
movs
jo
add
or
or
loopne
sub
test
cmp
(bad)
std
stc
sbb
ret
lds
mov
fstp
out
aam
mov
mov
adc
shl
xor
icebp
bound
fimul
and
xchg
push
sub
push
pop
js
cmp
movs
(bad)
cmp
test
xchg
aaa
pop
jge
mov
div
jle
mov
hlt
pop
or
pop
fld
xor
adc
lahf
mov
ror
test
xchg
popa
xor
or
pop
movs
fsub
outs
or
retf
and
es
sub
inc
hlt
mov
aad
push
mov
cmp
fld
push
pop
mov
test
push
scas
in
xor
or
add
pop
sbb
shr
inc
iret
fwait
xor
add
mov
fldz
mov
jo
pop
mov
lods
out
repz
jl
je
fcom
push
push
and
enter
mov
and
out
ds
outs
inc
xchg
xor
bound
clc
les
xchg
in
lods
pop
jns
xchg
call
inc
lahf
push
in
ror
mov
pop
aaa
add
xor
dec
stos
sahf
sti
cli
in
test
(bad)
jmp
push
scas
and
pop
pop
hlt
inc
scas
jg
ja
call
and
test
(bad)
mov
adc
sar
and
or
stc
pop
mov
lahf
push
or
xor
and
mov
push
or
mov
shl
std
cdq
js
push
popf
push
sbb
scas
in
into
mov
nop
aas
xchg
and
scas
clc
(bad)
enter
jnp
push
add
mov
out
mov
push
and
out
mov
add
stos
cmc
cmp
push
push
push
scas
pop
jmp
js
adc
mov
jo
mov
loop
movs
pop
idiv
xchg
pop
dec
(bad)
movs
std
sbb
loop
dec
sti
in
xchg
scas
loope
sbb
mov
xchg
pop
movs
inc
dec
add
mov
aad
fld
into
xchg
nop
jmp
fwait
mov
xor
or
ss
inc
jno
inc
ss
mov
shl
test
and
fs
and
imul
inc
ret
mov
out
push
xor
xor
out
icebp
mov
dec
mov
pop
sub
xchg
repz
mov
push
jmp
jl
(bad)
dec
sbb
stc
pushf
shl
fstp
sub
fisubr
inc
push
cmp
das
fwait
hlt
jle
and
push
cdq
test
push
mov
outs
stos
cdq
repz
sbb
int
jb
int
int3
scas
cld
or
stos
cmp
cmp
in
mov
or
push
xchg
xchg
xchg
and
(bad)
sub
or
or
call
nop
in
xchg
nop
cmc
add
mov
dec
sub
adc
xchg
rcl
daa
xor
sub
sub
in
sbb
mov
dec
call
test
repz
dec
in
stos
cwde
sbb
pop
dec
fdiv
jg
movs
test
shr
jae
sub
imul
test
pavgb
or
lock
sti
arpl
dec
and
pop
repnz
ss
enter
mov
test
test
imul
(bad)
aaa
retf
jmp
in
aam
and
loopne
mov
pop
pop
xor
fwait
adc
push
aaa
jo
ds
shr
push
pushf
out
bound
in
jns
shl
xchg
pusha
outs
push
shl
std
push
sbb
repz
inc
(bad)
aas
dec
jmp
cmp
sar
xor
test
add
fsubr
test
imul
fs
popa
stos
jle
jns
jmp
mov
stc
and
xchg
jge
jg
in
cmp
sub
sbb
int
or
push
das
adc
out
mov
add
mov
cmp
cmp
loop
clc
pop
pushf
mov
pop
movs
neg
scas
and
call
cmc
and
pop
test
ror
cmp
pop
test
add
push
jne
es
adc
aad
cmp
xchg
xchg
xchg
pop
call
fstp
mov
fbstp
pop
in
jns
xchg
std
gs
xor
jle
push
fidivr
jmp
test
xor
jae
in
and
scas
pop
pop
mov
inc
fdiv
call
mov
xchg
out
xchg
push
cmps
js
leave
dec
stc
xchg
mov
dec
vmovntpd
adc
stc
add
pop
in
xor
jbe
cmp
jns
shr
fs
xchg
jge
arpl
jns
in
mov
scas
cmps
lods
jmp
fnstsw
adc
repnz
xlat
mov
mov
out
sahf
sbb
imul
mov
sub
cld
fdivr
dec
sub
(bad)
xor
enter
mov
shl
pushf
add
call
out
shl
mov
and
mov
mov
sbb
outs
xchg
cli
in
mov
push
sti
cmp
fisub
and
adc
push
xchg
icebp
push
pop
push
xor
std
xchg
xchg
addr16
pushf
cmp
or
mov
(bad)
aad
out
mov
pop
into
adc
pop
in
movs
imul
mov
inc
bound
xor
push
xchg
jge
sub
mov
dec
adc
dec
xor
mov
xchg
pop
pop
adc
mov
scas
les
stos
cmps
xor
mov
mov
pushf
dec
and
mov
jne
lods
repz
out
les
test
add
bound
inc
or
mov
jnp
ds
xor
rcr
test
sbb
and
sub
xor
cmc
pop
jbe
cmp
sbb
and
jno
pop
cli
push
fdiv
pop
mov
wrmsr
cmc
fild
arpl
and
and
adc
push
lea
into
loope
xchg
and
push
popa
test
sub
test
sub
inc
out
test
and
mov
xor
cwde
xor
sbb
pop
cs
call
jnp
cwde
test
sbb
or
jmp
push
or
adc
jnp
cli
sbb
or
pop
mov
movs
call
xor
rol
sub
jbe
mov
stos
movs
mov
imul
add
sbb
jp
imul
ror
imul
lods
or
lahf
and
mov
frstor
push
int3
inc
push
test
fwait
cmp
jno
or
push
ins
push
or
ror
cmps
sti
movs
sub
mov
mov
and
xor
ds
test
fs
sbb
pushf
pop
scas
sub
xchg
scas
push
xchg
mov
jne
aaa
es
icebp
push
enter
in
fiadd
ret
enter
or
lds
call
mov
fmul
and
in
adc
pop
mov
fbstp
test
cmp
jp
pusha
jne
mov
or
mov
jge
mov
jb
(bad)
cwde
cmp
dec
pop
dec
fisttp
or
repz
mov
push
add
or
mov
(bad)
fisub
pop
ins
mov
cmp
fst
push
(bad)
out
or
jne
pushf
pop
push
cmps
shl
xor
int3
stc
arpl
aad
add
dec
add
(bad)
out
and
ret
outs
retf
dec
xchg
xlat
mov
pop
inc
in
pop
jne
sub
(bad)
in
dec
inc
add
int
pop
cmp
fwait
js
xchg
push
loope
mov
pop
jg
inc
jb
xor
inc
in
ret
mov
pop
push
(bad)
out
sti
ds
lock
mov
fdiv
and
cmc
xor
or
push
loope
imul
dec
cmp
in
aaa
mov
sbb
repz
lock
xor
movs
cmp
loopne
xchg
dec
imul
fwait
inc
popf
xchg
pop
retf
and
mov
adc
mov
bnd
sub
and
scas
add
out
lea
push
scas
rol
stos
retf
aas
push
sbb
fidiv
icebp
xchg
cmp
repnz
fdiv
cmps
cmp
jne
push
add
and
fwait
cmp
or
outs
scas
movs
sbb
xchg
cmp
lds
popf
push
aam
imul
push
out
pop
icebp
imul
or
add
push
fld
and
jbe
or
mov
daa
out
in
pop
mov
ss
and
push
pushf
mov
xchg
popa
sbb
lods
scas
add
test
or
dec
mov
add
repz
adc
clc
icebp
js
sahf
test
icebp
pop
push
cdq
pushf
fdiv
or
jno
push
stos
xor
adc
fcmovb
test
jl
jb
xchg
xchg
dec
inc
cmovo
dec
pop
ins
or
pop
pop
shr
iret
call
dec
cmp
jge
xchg
mov
call
out
dec
push
popf
xchg
mov
cmp
jecxz
ins
or
cli
or
(bad)
xchg
int
and
and
push
jecxz
iret
adc
and
jbe
lods
daa
push
mov
ret
sbb
mov
shl
push
mov
enter
movs
dec
jp
xor
push
cmps
leave
xor
ror
xchg
scas
pop
sahf
and
mov
ret
ja
xchg
or
les
mov
add
pop
or
ss
outs
sar
movs
push
sbb
icebp
mov
mov
jbe
cmp
cmp
xor
jmp
mov
push
mov
cmp
sbb
jae
popa
repz
cwde
cli
and
(bad)
aam
dec
call
push
push
and
aam
div
cmp
push
std
xchg
mov
and
(bad)
(bad)
inc
cmps
neg
std
pop
test
int
jae
(bad)
mov
mov
xlat
aad
cmp
xor
out
sbb
cli
pop
mov
mov
jmp
rcl
cmp
jmp
mov
call
loop
repz
(bad)
push
cmc
mov
dec
jns
push
mov
(bad)
shr
in
into
mov
cmps
xchg
je
xchg
sub
aad
add
loop
fwait
and
mov
or
std
inc
push
xchg
jl
adc
xchg
iret
sub
fwait
cmp
cmp
arpl
xlat
std
push
mov
mov
gs
ins
repnz
movs
out
xchg
push
and
neg
or
xor
xchg
dec
in
sbb
or
cli
in
dec
loopne
and
mov
cmps
jp
lods
push
sbb
xchg
mov
shl
push
fisub
popa
or
push
fidiv
pusha
mov
(bad)
mov
adc
sub
(bad)
mov
sbb
not
push
mov
pop
jbe
or
cwde
int
xor
or
pop
inc
jae
jb
pop
sub
ins
push
xor
push
icebp
sub
dec
jg
ins
add
aam
std
add
mov
(bad)
in
test
push
loop
push
lea
add
sub
jbe
mov
movs
or
ds
ror
and
rol
nop
lock
sub
cs
cmps
loope
sub
mov
sub
sahf
fld
fisub
mov
push
loop
jmp
ins
add
add
out
fisttp
xor
push
lahf
stc
lahf
jmp
data16
test
cmc
dec
into
in
popa
popa
lea
push
pop
pop
inc
mov
jae
push
jle
dec
cmc
cmp
retf
pop
lods
dec
jge
(bad)
gs
int3
xor
lods
inc
test
lods
rol
mov
fcmovu
and
xor
(bad)
mov
jl
xlat
adc
add
inc
push
pop
and
and
stc
add
cli
fmul
jp
mov
xchg
cmp
jmp
retf
pop
sbb
push
je
push
push
sub
add
mov
mov
sub
cmp
ins
inc
adc
cmp
hlt
shr
push
inc
pop
inc
xchg
inc
mov
add
(bad)
sahf
loope
dec
sub
pop
mov
sub
scas
mov
inc
scas
icebp
inc
push
cmps
js
mov
jmp
push
imul
jo
push
sub
arpl
xor
dec
jb
inc
push
test
ret
sti
pop
gs
add
add
push
ins
xchg
mov
xchg
dec
dec
loopne
mov
inc
loopne
loope
adc
sahf
loope
int
mov
push
pop
sbb
dec
lods
ss
shl
jnp
std
test
jne
(bad)
shl
adc
adc
sub
dec
jge
sbb
in
and
fs
mov
mov
adc
adc
loop
add
enter
lock
cld
sti
div
jae
adc
mov
xchg
inc
or
and
sbb
jns
gs
pop
into
jno
repz
into
push
xchg
cmp
push
xor
clc
pop
pusha
cmps
or
inc
inc
stc
movs
mov
movs
push
test
jb
sbb
lea
imul
xchg
adc
gs
lods
jecxz
int
jae
mov
cmp
into
fcmovbe
sar
mov
mov
push
pop
lahf
mov
add
mov
jo
mov
dec
inc
xor
mov
dec
sbb
mov
inc
dec
pop
jle
lea
mov
push
fs
iret
neg
push
out
jnp
das
ror
stc
xchg
sbb
lea
mov
rol
scas
arpl
cwde
scas
fs
inc
popf
xor
jmp
mov
in
mov
into
add
out
jp
adc
in
ret
xchg
mov
(bad)
icebp
sub
cld
hlt
jmp
das
mov
xchg
lock
push
push
add
mov
and
inc
jmp
aaa
inc
and
sar
dec
xchg
push
(bad)
(bad)
add
call
imul
ror
das
test
jne
scas
mov
inc
push
add
test
and
cmps
mov
adc
and
push
rol
aam
je
into
jae
stos
jo
jle
xchg
pop
xor
hlt
test
movs
call
jbe
shr
jbe
test
fldenv
inc
xor
pop
js
jecxz
gs
in
xlat
sbb
not
lea
(bad)
sbb
cmp
jb
xor
mov
in
sbb
xchg
or
mov
clc
ret
jns
retf
loope
rcr
xchg
jne
test
jnp
mov
xor
sbb
mov
stos
dec
loope
adc
dec
movd
fwait
addr16
sar
aas
(bad)
mov
stos
pushf
xor
and
int
push
jns
add
loopne
xchg
or
(bad)
jnp
pushf
push
cwde
shl
scas
aas
or
daa
lahf
ins
and
and
push
mov
lahf
mov
jmp
ret
fs
and
and
dec
mov
rcr
dec
pusha
xchg
xor
push
mov
ss
mov
jmp
(bad)
sub
gs
lds
pop
enter
popa
clc
popa
mov
push
pop
and
push
mov
mov
es
call
mov
sub
test
aad
jno
daa
pushf
jbe
and
dec
in
add
js
lods
xchg
push
add
std
nop
inc
shl
push
movs
dec
sahf
cmps
jecxz
aaa
out
mov
stos
pop
push
cmp
or
add
fsubr
mov
(bad)
and
fbld
xchg
in
dec
pop
lods
xor
pop
addr16
pop
pusha
sbb
xor
aad
in
pop
xchg
stos
jnp
outs
adc
es
(bad)
xor
imul
fisubr
dec
in
dec
ror
daa
or
retf
cmp
ins
or
int3
jle
jl
ss
push
xor
cli
movs
add
mov
sbb
arpl
dec
sbb
fbstp
pop
lock
push
mov
dec
(bad)
ds
cs
lods
mov
or
pop
retf
outs
mov
inc
test
call
xor
and
jmp
aaa
mov
jmp
cld
lods
push
sub
dec
daa
int
mov
push
xchg
pop
cli
pop
jo
xor
fs
inc
stos
jg
into
mov
adc
jnp
ror
aaa
in
jbe
cmc
ret
daa
xchg
and
pop
ins
fcomp
ret
or
aad
int
xlat
fiadd
nop
ins
jnp
mov
inc
and
ficom
xchg
fldcw
lds
dec
out
or
adc
mov
pop
pusha
call
lock
adc
ds
fmul
push
fs
jecxz
add
pop
(bad)
out
in
dec
mov
or
or
stos
inc
fcom
or
ins
inc
and
ins
cmps
mov
loope
add
ins
mov
xchg
rcl
hlt
jo
xchg
dec
add
inc
(bad)
repz
out
and
jae
and
pop
leave
out
xchg
popf
sbb
or
xlat
div
cs
jle
(bad)
stc
or
rcl
push
scas
pop
pop
fild
enter
inc
xor
(bad)
jns
cwde
scas
adc
movs
push
mov
clc
out
fldenv
loope
sbb
push
mov
aas
fisttp
push
push
or
ds
xchg
mov
jae
cli
mov
and
(bad)
dec
pushf
out
inc
pop
push
jo
fsubr
inc
fwait
add
adc
loopne
out
inc
js
mov
and
mov
dec
rol
sub
inc
out
cmp
movs
jp
fisttp
aaa
sbb
inc
loop
push
imul
cld
int
jecxz
sub
mov
adc
adc
jnp
scas
aaa
cmp
aas
lea
pop
mov
push
pop
aad
ja
pop
or
inc
les
lds
pop
lods
inc
mov
(bad)
dec
or
xlat
lahf
jmp
lock
(bad)
push
or
push
(bad)
jae
push
and
inc
dec
and
das
ret
clc
jae
sbb
lods
stc
loopne
adc
jp
xor
mov
xor
pop
test
ficom
out
clc
movs
or
popf
adc
js
stos
sar
sar
inc
cld
jecxz
out
fisubr
mov
data16
xor
sbb
call
fld
inc
sub
jnp
adc
(bad)
mov
idiv
in
neg
gs
inc
pop
jp
sti
pop
jmp
pop
ds
mov
mov
sahf
bswap
outs
int
out
mov
dec
or
test
mov
pop
neg
jl
gs
push
xor
mov
in
in
mov
je
bound
jmp
dec
int3
jno
cs
out
cwde
jge
in
jbe
inc
outs
xor
cli
xor
into
and
cmp
pop
or
sbb
adc
aam
mov
and
cmps
inc
ss
cmc
pop
std
dec
hlt
inc
imul
cmp
or
push
(bad)
adc
fisttp
clc
add
daa
xor
ficom
es
push
inc
inc
mov
aas
mov
shl
(bad)
sub
cmp
aam
jae
sti
repnz
out
(bad)
push
inc
mov
jl
jae
test
adc
ins
mov
retf
push
in
sub
mov
push
add
mov
jnp
lea
cmp
aaa
(bad)
out
push
(bad)
(bad)
aaa
mov
push
pop
dec
mov
cmp
mov
(bad)
xor
mov
jbe
clc
ins
push
popf
and
mov
jmp
adc
arpl
mov
iret
into
das
mov
xor
xchg
add
push
sar
pop
fst
mov
or
lahf
jg
or
hlt
jns
sbb
(bad)
push
mov
clc
repnz
push
mov
xchg
xchg
or
pop
xchg
add
lods
xor
sti
cmp
test
fnstcw
jmp
mov
sbb
sbb
shl
lods
push
stos
cmp
hlt
mov
mov
fsqrt
ret
jg
jl
sub
xor
mov
aaa
jmp
pop
jge
into
xor
mov
cmps
icebp
dec
pop
or
or
aaa
loop
jmp
xor
retf
outs
aas
(bad)
fiadd
add
xor
push
and
pop
scas
push
lock
push
popa
in
add
pop
imul
xchg
push
mov
add
mov
test
xchg
mov
std
xor
jle
mov
cli
add
test
mov
pop
ds
mov
cmps
adc
daa
rcl
mov
cwde
outs
add
sbb
stc
sbb
rcl
retf
ret
shl
es
add
int3
pop
mov
sub
repz
cmp
mov
mov
popf
lea
(bad)
div
and
sbb
lea
and
aaa
cmp
retf
call
dec
adc
xor
and
not
pushfw
mov
jl
mov
cmp
in
stos
int
loopne
loope
cmc
sbb
mov
aas
add
mov
popa
retf
gs
mov
jae
clc
push
jnp
test
fcmovne
(bad)
movs
leave
imul
add
pop
cwde
je
cli
pushf
xlat
addr16
fst
inc
ss
xchg
jnp
aad
smsw
clc
pop
(bad)
xor
and
mov
repz
inc
jne
call
leave
stos
pop
iret
inc
dec
dec
ror
xor
data16
push
jmp
stc
and
loope
pop
push
out
pop
xor
adc
std
dec
test
bound
out
xchg
test
jno
lea
mov
cmps
xchg
test
pop
push
cmp
jg
inc
pop
push
xchg
outs
pushf
dec
sbb
dec
and
sti
popf
lds
dec
nop
pop
xchg
aaa
rol
lods
std
cmps
xor
cmp
icebp
bound
sub
in
inc
outs
mov
rol
jmp
idiv
int
jo
xor
bound
fidivr
inc
ss
retf
retf
iret
rol
gs
scas
ins
push
push
mov
popf
fisttp
adc
inc
jp
cmps
cld
loop
mov
cmps
pop
je
mov
dec
mov
and
retf
jne
xor
cmps
movs
sbb
inc
sbb
or
bound
mov
xchg
scas
or
loope
and
popa
inc
iret
mov
mov
and
stc
xchg
xchg
and
xor
xchg
push
pusha
add
or
nop
mov
div
push
mov
jle
ins
cmp
adc
rcl
adc
clc
pop
cmp
and
push
push
mov
mov
xchg
(bad)
pop
nop
push
fwait
or
xor
add
aas
lds
rcr
cdq
jg
shl
inc
shl
or
add
stc
icebp
addr16
pop
gs
das
xor
cmp
push
push
jecxz
xchg
add
neg
stos
ins
add
ret
fnstcw
mov
sub
adc
ret
xor
lods
sbb
mov
cdq
mov
repz
in
inc
sub
in
and
cmp
sbb
xchg
shr
add
cmc
or
mov
loopne
jae
rcl
into
outs
mov
push
sub
sti
int
sti
dec
inc
scas
add
xlat
(bad)
iret
lods
out
retf
retf
fwait
jmp
pop
and
icebp
mov
jge
das
pop
jmp
outs
out
fstp
push
cmp
push
push
jo
mov
jecxz
aad
shl
imul
mov
(bad)
dec
loopne
xchg
dec
pop
idiv
stos
cmp
add
xchg
aaa
movs
inc
shr
jns
mov
dec
ins
cs
ret
add
les
push
out
add
cmp
daa
cdq
cli
in
push
sti
cli
aaa
pop
in
cli
imul
fcomp
dec
xor
xchg
xor
mov
jb
jnp
test
daa
mov
mov
mov
test
and
inc
cmc
and
jecxz
loop
cmp
sbb
xchg
(bad)
stos
mov
fs
es
xor
xor
dec
pushf
jl
pop
hlt
push
pusha
out
mov
cld
mov
imul
lods
push
adc
pop
repz
sbb
daa
addr16
out
nop
or
xchg
aam
mov
ins
add
jo
cmp
ja
(bad)
mov
add
arpl
xchg
inc
mov
pop
and
jg
in
(bad)
xchg
adc
mov
repnz
iret
push
xor
mov
js
mov
mov
scas
pop
mov
and
aas
dec
jmp
pop
(bad)
cld
push
pop
mov
(bad)
mov
jmp
shr
ret
cmc
xor
push
mov
mov
stos
call
add
dec
in
inc
inc
ja
(bad)
das
cmp
jecxz
adc
mov
lea
jmp
jb
cmovb
jae
cmp
sub
cmc
test
bound
xchg
dec
aad
adc
lock
or
sub
adc
pop
cmps
repz
xlat
mov
push
add
cmps
std
das
jecxz
in
inc
test
push
dec
or
mov
mov
fsubr
add
pop
pop
scas
fbstp
cs
loope
movs
inc
fnstcw
mov
(bad)
sahf
inc
movs
xor
adc
sub
movs
cdq
cmps
ret
ror
ror
adc
mov
pop
jl
push
jl
not
repz
pop
mov
cmp
lods
mov
cmp
out
imul
(bad)
dec
int
popf
addr16
dec
sbb
jecxz
lahf
mov
or
pop
int
das
cdq
inc
or
sub
cmp
mov
jns
mov
movs
and
in
mov
std
test
aaa
mov
out
loopne
pop
(bad)
imul
and
mov
mov
cli
push
or
pusha
pop
mov
push
mov
and
mov
rcr
push
push
jp
mov
xchg
dec
dec
jle
lods
test
loope
push
popa
sub
jno
add
mov
shl
add
sar
rcl
call
xor
es
repz
dec
loopne
ret
push
call
mov
sub
jp
leave
adc
pop
test
jnp
push
lahf
stc
test
sub
pop
dec
and
test
pusha
push
les
xor
xchg
test
(bad)
jp
jnp
or
pop
jne
dec
sub
xor
add
ja
jp
js
ficomp
xchg
daa
push
xor
mov
xor
add
pusha
lock
or
push
push
add
mov
sub
icebp
shl
enter
mov
inc
sbb
jns
xor
aam
outs
rcl
dec
add
jae
pop
xchg
push
stc
sahf
lahf
adc
or
mov
inc
jg
fbld
adc
iret
and
xor
fwait
pop
adc
fmulp
icebp
out
call
jbe
mov
movs
xor
push
arpl
inc
mov
retf
mov
cmp
pop
aad
lds
add
imul
xchg
pop
cs
mov
mov
mov
pop
ins
shr
(bad)
xchg
test
add
scas
ror
not
inc
pop
ds
push
pop
icebp
dec
or
les
into
out
ds
idiv
xlat
dec
cmp
addr16
dec
test
fcomp
inc
add
push
adc
sub
xchg
inc
(bad)
pop
ret
imul
retf
test
adc
mov
scas
repz
adc
in
lds
(bad)
loop
loope
xchg
adc
addr16
(bad)
loopne
mov
pop
push
rcl
adc
mov
aam
mov
pushf
outs
icebp
or
pusha
add
xor
mov
retf
(bad)
xchg
adc
sar
inc
mov
leave
(bad)
aas
pop
pop
es
sbb
or
jnp
push
or
cmps
outs
cmc
push
fsub
xchg
cli
sub
jge
sahf
or
and
mov
add
lahf
mov
and
fnstcw
mov
pop
jb
xlat
bound
sbb
push
arpl
lea
retf
aaa
cmp
jle
mov
in
ins
bound
movs
stos
and
jg
call
xchg
xchg
int3
sbb
xchg
xor
jmp
xor
sub
add
in
scas
mov
lahf
aaa
cli
mov
mov
sub
jbe
sub
fisttp
outs
adc
test
scas
cmp
scas
add
pop
pop
neg
adc
jle
cmp
call
and
add
inc
int3
std
or
xlat
repz
cmps
fsub
mov
stos
jge
cmps
arpl
retf
test
add
lods
movs
and
mov
sbb
xchg
mov
ds
leave
pushf
mov
das
out
push
retf
in
pop
bound
mov
(bad)
out
into
cmps
jo
cmp
sbb
gs
add
cmp
int
hlt
scas
add
mov
(bad)
imul
cmc
cld
call
add
mov
ja
ds
fisubr
rol
aam
fisubr
jb
sbb
mov
xchg
mov
xor
adc
mov
icebp
rol
mov
test
dec
adc
retf
mov
push
sbb
pop
pop
mov
xchg
add
in
mov
mov
xchg
xchg
ss
icebp
aas
push
mov
or
sti
add
xchg
inc
mov
sbb
pop
hlt
mov
xor
call
in
mov
xor
inc
mov
pop
dec
inc
pop
fisttp
jo
inc
jns
jne
ins
fsubr
or
dec
cmp
inc
inc
das
scas
adc
add
push
adc
jl
sub
ror
jecxz
push
in
adc
and
rcl
movs
(bad)
ror
inc
cmp
aam
fcmovnb
sbb
out
mov
mov
push
push
mov
xchg
popf
outs
xchg
xor
fsubr
jns
into
mov
fwait
test
jno
mov
sub
mov
inc
shr
adc
gs
jbe
test
mov
out
xchg
cmps
lock
adc
ss
cwde
add
rcl
(bad)
icebp
rep
or
sub
stos
sbb
dec
and
out
push
(bad)
mov
add
pop
sub
add
js
jp
adc
(bad)
adc
imul
out
and
jg
xchg
jmp
or
adc
cld
add
adc
jle
and
cmp
cdq
mov
mov
pop
sbb
daa
inc
dec
test
add
mov
mov
pop
cs
out
mov
pop
ds
fisttp
je
and
mov
add
stos
dec
retf
and
shl
add
cdq
mov
sbb
mov
repnz
bound
inc
add
inc
test
ins
stos
jmp
cmc
iret
mov
mov
cmp
test
rcl
test
jmp
add
jae
pop
jge
popf
out
cwde
xchg
sbb
push
lahf
cmp
or
push
aam
cmps
lahf
call
dec
cs
adc
ror
mov
fnstsw
shl
jae
sub
fisub
shl
jge
retf
push
test
xchg
adc
loopne
push
sub
(bad)
aad
(bad)
cmp
(bad)
cli
test
mov
mov
in
sub
push
mov
shl
jge
out
lds
push
imul
xor
xlat
mov
mov
jecxz
add
add
dec
dec
cwde
adc
mov
ins
pop
(bad)
fstp
lahf
sldt
ins
fcomp
cmp
push
xchg
lahf
js
inc
mov
test
and
loop
or
test
test
imul
push
sbb
mov
or
and
cmp
pusha
inc
sbb
mov
movs
sbb
clc
cmp
aas
jecxz
inc
jle
hlt
jp
es
adc
movs
cli
or
nop
in
mov
fcmove
daa
jge
(bad)
std
push
jno
adc
mov
loope
hlt
js
out
mov
dec
jmp
mov
(bad)
gs
gs
ds
pop
sbb
mov
data16
ret
mov
jne
in
call
and
jmp
enter
xor
inc
dec
mov
xchg
call
xor
in
mov
push
dec
xchg
ds
mov
(bad)
(bad)
adc
cmps
scas
xor
cld
scas
fidivr
sahf
repz
sub
mov
mov
ins
ins
mov
mov
lock
sub
loop
mov
test
jne
sub
pop
cmp
cs
idiv
inc
push
retf
clc
fs
adc
mov
test
pop
(bad)
inc
imul
xchg
cwde
push
mov
pxor
jb
pop
inc
xor
pop
or
(bad)
jno
outs
movs
xchg
xor
dec
int3
mov
jae
pop
mov
dec
lahf
dec
mov
stc
pop
inc
jmp
ror
adc
daa
xchg
cmc
xchg
fstp
lods
sahf
shl
ret
inc
pop
aad
adc
dec
push
pop
xlat
cmp
es
cmps
or
ror
lods
(bad)
xchg
data16
xlat
xchg
or
fwait
cmp
mov
jge
mov
cmps
mov
(bad)
push
js
in
test
jbe
mov
mov
iretw
xor
fmul
nop
mov
and
ins
gs
jnp
outs
icebp
inc
add
mov
jmp
retf
fmul
mov
dec
sbb
inc
out
dec
jecxz
adc
ss
sub
cwde
fwait
cmp
sub
data16
and
mov
cmp
jg
lock
jmp
xchg
pop
adc
adc
(bad)
sbb
repz
or
pusha
icebp
daa
bswap
xor
fdivr
jmp
stos
arpl
(bad)
sbb
and
add
dec
imul
adc
pushf
neg
fs
push
test
pop
ret
(bad)
cli
mov
fisub
retf
data16
cmp
gs
push
popa
cwde
adc
int3
out
dec
pop
retf
sbb
pop
add
aas
xor
xor
cmp
dec
and
mov
inc
mov
jnp
cs
aam
fsub
jl
mov
outs
mov
xchg
pop
and
mov
xor
out
add
jmp
out
(bad)
push
(bad)
scas
mov
push
and
pop
das
loopne
pop
aam
pushf
and
movs
add
fwait
lds
pushf
repnz
adc
sub
pop
movs
jne
push
stc
ja
iret
popa
inc
cmp
fdivr
mov
push
rcr
sub
xlat
je
nop
sbb
jo
pusha
jmp
inc
pop
add
stos
std
cmp
enter
psraw
adc
or
daa
sub
lock
jmp
xchg
cli
and
jle
cmp
pop
pop
inc
lods
in
test
push
js
call
xor
inc
daa
sub
int
mov
mov
add
sti
iret
lds
imul
xor
xchg
into
and
hlt
and
xchg
arpl
inc
push
add
int
mov
not
dec
fcmovne
arpl
in
add
sbb
jmp
or
inc
scas
test
push
into
ja
mov
arpl
in
cmp
sub
or
jmp
popf
push
fnstenv
clc
lahf
sbb
xor
pop
push
out
jge
sbb
pop
sub
pop
xor
mov
cmp
into
xchg
or
mov
jge
jo
out
movs
cmps
adc
or
push
fist
in
cmp
ja
xchg
and
enter
or
mov
(bad)
xor
push
popa
push
fild
xchg
arpl
(bad)
out
pop
or
js
mov
(bad)
xchg
sar
cmp
ja
ins
imul
ret
inc
stc
idiv
shl
out
les
pop
mov
xor
xor
cmps
loopne
inc
mov
cmp
stc
sahf
loop
dec
xor
mov
cmp
xchg
div
(bad)
mov
pop
jecxz
sar
icebp
sub
add
cld
mov
jmp
pop
ret
push
jno
sti
scas
or
xor
inc
js
aas
fidiv
mov
cmp
icebp
sub
fdiv
lods
inc
aas
jecxz
jb
movs
push
jmp
push
xchg
mov
mov
xchg
push
or
mov
mov
mov
call
adc
and
clc
stos
inc
sbb
dec
repnz
pop
fstp
and
xor
jae
cwde
add
stos
arpl
aad
mov
cmc
push
(bad)
(bad)
outs
xor
mov
or
inc
sbb
loop
dec
jl
and
cli
(bad)
jmp
repz
push
mov
push
cmps
jle
sbb
jne
mov
cmp
push
adc
sub
push
add
mov
fnstsw
jge
sahf
je
cmps
add
dec
add
adc
nop
xchg
in
jecxz
xor
xor
adc
lds
movs
or
aas
popf
data16
mov
jp
sbb
lahf
or
dec
pop
lods
mov
sub
jmp
adc
and
adc
jle
mov
out
sub
sbb
mov
scas
nop
(bad)
aad
push
dec
add
scas
into
jg
and
dec
rol
push
or
add
out
inc
inc
sub
sti
or
aas
push
std
scas
inc
movs
mov
pop
outs
scas
aad
or
retf
fistp
aas
imul
subps
iret
lock
jno
pop
repnz
imul
popa
and
loope
xchg
cmc
stos
(bad)
pop
std
push
mov
sbb
push
sub
push
xor
test
stc
xchg
push
cwde
fisubr
mov
js
xchg
jb
push
and
dec
ss
sbb
loop
pop
fist
mov
mov
repnz
mov
outs
adc
rol
sub
xor
out
mov
mov
push
pop
into
dec
es
or
xchg
(bad)
icebp
adc
adc
lahf
stos
xor
dec
and
ret
mov
js
dec
js
dec
dec
push
xchg
inc
and
jns
add
sbb
mov
test
cmc
lea
or
dec
push
and
mov
into
mov
fsubr
mov
(bad)
sbb
fst
pop
(bad)
push
xlat
cmp
pop
(bad)
mov
jecxz
jle
cmp
pop
test
fsubr
mul
imul
ror
imul
adc
and
pop
jmp
adc
xor
fcom
mov
fdiv
inc
popa
pop
les
in
(bad)
iret
scas
pusha
xchg
repnz
(bad)
jb
jecxz
mov
imul
xchg
ja
cs
cmp
call
sub
mov
mov
es
mov
ror
and
ret
add
dec
jecxz
xor
xchg
and
inc
not
mov
imul
cwde
mov
cmps
dec
cmps
pop
shl
fisub
adc
iret
retf
push
jge
cmp
pop
ds
dec
lock
mov
mov
xchg
cmps
loopne
jnp
mov
adc
jmp
jmp
icebp
pop
rcr
out
aaa
push
pop
in
sahf
ficom
jg
pcmpgtd
fwait
sbb
push
or
repnz
clc
xchg
xchg
pop
ds
add
mov
aam
xchg
or
imul
enter
push
(bad)
loope
add
xchg
outs
cmp
push
pop
cmp
test
retf
pusha
pop
rcl
fs
pop
push
shl
lea
or
aad
inc
adc
push
mov
sbb
jge
sub
lock
mov
sbb
fmul
push
leave
retf
(bad)
aas
js
mov
fld
sub
push
jmp
cmc
xchg
jbe
pushf
outs
push
mov
div
sub
mov
sub
ins
sub
cwde
push
stos
or
int
movs
cmp
sbb
mov
adc
or
pop
inc
in
pop
test
stc
mov
adc
push
xor
inc
xor
push
jae
mov
cmp
sahf
hlt
sub
lods
jo
daa
push
mov
xor
sbb
sub
mov
add
sbb
imul
pop
push
cwde
pop
cwde
dec
add
dec
sub
sahf
mov
aas
sbb
retf
adc
mov
cmps
sti
lds
int
(bad)
pop
push
les
xor
jns
lods
pop
cwde
vxorps
jbe
imul
mov
cmp
pushf
and
out
and
imul
mov
lods
(bad)
lods
out
cmp
mov
or
ds
mov
test
ja
and
popa
jnp
add
xchg
add
mov
mov
dec
adc
inc
xchg
mov
test
inc
call
stc
xchg
push
in
sbb
sbb
mov
ret
repz
sub
cld
push
sbb
sbb
aad
pusha
push
adc
out
iret
ror
nop
loop
add
dec
dec
or
inc
cld
mov
scas
pop
in
test
inc
frstor
add
stos
jns
sub
mov
cmp
lock
es
adc
pop
lea
jg
sbb
adc
aad
in
or
bound
mov
sub
hlt
adc
sbb
adc
and
cmps
mov
mov
das
xchg
jae
call
add
aam
test
loope
xor
mov
cmc
mov
or
sbb
out
pop
sub
push
cmp
loope
pop
sti
in
jbe
cmp
test
mov
cmps
jl
sbb
jl
pop
(bad)
mov
mov
lock
mov
push
inc
imul
lods
ins
sbb
je
and
push
lods
aaa
movs
sbb
and
shl
pop
inc
sub
pop
test
fidivr
lahf
in
aam
xor
js
cwde
loop
std
enter
sub
pop
cmp
call
(bad)
xor
enter
jnp
fs
pop
cmp
fiadd
fdivr
push
repz
inc
push
mov
data16
ins
lods
inc
pop
dec
popa
call
call
adc
lods
out
fbstp
ficomp
mov
mov
repz
pop
movs
pop
mov
imul
xor
xor
dec
xor
cmp
adc
std
leave
ds
test
pop
test
adc
mov
mov
mov
cmp
ja
mov
xchg
ins
adc
jnp
lock
int3
ret
sub
int
inc
pop
push
sbb
xchg
(bad)
push
sti
stos
ret
cmp
retf
loop
jmp
xor
adc
in
jae
test
mov
mov
pop
bound
shl
cdq
ins
outs
jl
pop
jno
mov
add
mov
and
pop
shl
ret
lods
xchg
ins
xor
or
rol
jp
xor
mov
and
gs
das
movs
movs
add
add
mov
mov
xlat
mov
sbb
mov
push
xchg
and
cli
(bad)
fnstsw
enter
fcomip
xchg
xor
adc
xchg
inc
(bad)
test
inc
xor
retf
aam
mov
mov
xor
rcr
jnp
and
dec
cmp
cmp
xchg
rol
push
and
push
pusha
in
addr16
pop
xor
xchg
xchg
gs
int3
cmp
pop
push
imul
xor
mov
mov
cmp
jmp
cmc
fwait
sbb
dec
pop
mov
sbb
inc
push
cmp
xor
fsub
jae
es
loope
sub
popa
mov
hlt
data16
repnz
cmp
sub
out
jle
cmps
pushf
data16
mov
jl
inc
mov
clc
cmp
popa
jb
mov
imul
mov
ins
add
rcr
mov
cli
xchg
inc
movs
gs
xor
push
cmps
stos
xchg
rcl
push
pop
and
into
movs
iret
xchg
pushf
push
call
adc
dec
jg
push
lods
in
cmp
ins
mov
icebp
pop
movs
push
fld
inc
aas
add
adc
stc
xor
cld
mov
jns
xor
neg
pop
mov
pop
mov
popf
jmp
cwde
ins
stc
sbb
cmp
sub
push
movsx
mov
mov
fwait
shl
repz
add
xchg
cmp
cmp
xchg
add
push
fsubr
fcomi
sysexit
xchg
mov
aas
movs
pop
and
shr
push
test
imul
mov
sub
jo
mov
cmp
mov
inc
ret
xor
inc
mov
pop
push
loopne
shl
sub
movs
and
cmp
hlt
in
xlat
loop
in
push
out
in
cmp
push
es
cmps
inc
cmps
test
xchg
xchg
jne
stos
xor
(bad)
xchg
add
xchg
pop
stos
jno
das
cmp
aaa
adc
sub
and
mul
sub
ins
mov
mov
jmp
sahf
loopne
sbb
mov
add
lahf
adc
jne
(bad)
pop
or
test
mov
cmp
or
(bad)
sbb
test
test
sbb
cwde
into
icebp
mov
dec
sbb
cmp
lahf
inc
cmps
inc
mov
das
icebp
dec
sbb
pop
mov
ss
xchg
arpl
xor
test
dec
mov
mov
(bad)
ins
push
xchg
aaa
shl
daa
arpl
or
mov
push
jg
shl
repz
mov
dec
and
push
lahf
dec
leave
out
xchg
enter
std
mov
out
int3
push
shl
imul
aam
add
leave
add
rol
xchg
call
outs
or
pop
cmp
(bad)
cld
stos
popa
xlat
pop
fld
xor
fldlg2
ss
xchg
daa
call
sub
cmp
fstp
rcr
dec
jmp
pop
xor
jae
mov
sub
fsub
add
jnp
scas
mov
adc
mov
test
mov
shl
enter
lea
adc
sub
pushf
sub
mov
in
jns
jb
pop
loopne
or
mov
mov
ss
dec
add
mov
mov
mov
sar
mov
out
retf
fsub
cmp
(bad)
imul
in
xchg
pop
lahf
xchg
push
cli
hlt
inc
jb
add
adc
pushf
or
or
loop
push
push
enter
rcl
addr16
and
mov
inc
mov
cmp
jle
fistp
mov
xchg
mov
fsub
xor
les
mov
mov
sti
aaa
add
scas
pop
mov
cwde
mov
xor
dec
popf
mov
mov
mov
popf
jne
enter
xor
jns
push
sub
cmp
cmp
outs
push
pop
sub
inc
out
lock
pop
stos
dec
jge
mov
dec
call
gs
pop
add
and
xchg
jnp
jl
jno
sub
(bad)
pop
xor
sar
pop
int
push
xlat
ins
daa
cdq
inc
or
pop
mov
pop
pop
scas
popf
mov
es
paddb
ror
mov
adc
xchg
mov
adc
add
in
cmp
imul
pop
jo
aas
movlps
xchg
in
sub
xor
(bad)
(bad)
jns
inc
adc
dec
push
fidiv
add
jge
adc
fimul
call
test
xor
mov
(bad)
xor
adc
add
pop
ret
je
mov
and
xor
dec
jne
pushf
cmps
enter
push
or
test
push
mov
dec
mov
sub
es
jl
and
fwait
pop
leave
out
jmp
leave
outs
ins
addr16
adc
lahf
sub
out
test
in
mov
lds
sar
jl
push
dec
mov
lds
neg
xchg
push
mov
arpl
(bad)
aad
cmp
lea
pop
inc
daa
movs
sbb
out
outs
inc
xchg
pop
(bad)
jle
cmp
jae
or
xor
inc
cmp
cmp
int
mov
inc
into
inc
inc
jl
fs
sub
les
pop
in
lock
les
jecxz
cwde
jo
pop
xlat
fs
mov
cmova
xchg
adc
dec
jmp
fmulp
inc
fidivr
fidivr
in
cdq
sti
vunpckhpd
pusha
repz
out
retf
inc
js
ror
(bad)
cmp
dec
dec
sar
mov
cmps
sti
sahf
add
daa
aas
dec
xchg
xor
jmp
(bad)
xor
imul
and
retf
fidivr
jmp
add
pop
(bad)
sbb
and
pushf
jb
je
sbb
test
pusha
add
stos
sub
fldlg2
inc
shl
dec
pop
adc
js
sti
mul
(bad)
aam
imul
mov
pop
out
outs
jb
lds
mov
daa
pop
cli
xor
inc
fs
xchg
stc
sbb
frstor
shr
(bad)
adc
mov
mov
mov
fisttp
adc
and
mov
movs
int
sbb
and
sbb
dec
arpl
or
lahf
out
mov
cwde
popf
mov
and
pop
or
add
outs
mov
inc
pop
sbb
add
pop
jae
sub
(bad)
push
jnp
cld
int
sbb
lahf
mov
mov
int3
sbb
xchg
arpl
sub
lds
test
push
dec
mov
popf
jne
jno
fwait
add
mov
outs
jmp
arpl
(bad)
shl
push
ins
sub
mov
ins
scas
loope
cmp
jb
out
int
push
mov
cld
clc
int
xchg
pop
je
xlat
sub
jbe
cld
or
gs
arpl
sbb
sbb
icebp
and
fdiv
jge
cmps
lahf
pushf
dec
mov
ss
xchg
lea
inc
jge
das
imul
outs
in
(bad)
adc
adc
ja
lods
xor
cmp
in
mov
xchg
mov
stc
jl
xchg
lods
push
xlat
mov
mov
xor
adc
(bad)
loopne
pusha
jno
fadd
and
mov
mov
jmp
daa
test
das
cmp
movs
ficom
mov
mov
out
dec
repnz
shr
stos
pop
adc
xor
jle
inc
pusha
les
stos
sbb
loopne
mov
stos
popf
adc
pushf
leave
loope
pop
out
and
xchg
fnstenv
dec
or
dec
enter
retf
mov
lods
mov
or
jne
fbstp
dec
jne
xlat
xchg
mov
sti
cs
aas
add
or
(bad)
dec
rcl
push
mov
dec
mov
cwde
out
aad
out
mov
and
shr
push
xchg
std
mov
xchg
and
pop
xchg
imul
mov
jmp
and
call
pop
jp
pop
pop
cmps
cmp
add
in
push
ret
pop
movs
pop
jmp
aaa
sub
or
imul
test
cmps
jae
jecxz
xchg
pop
mov
in
ins
imul
cmc
inc
test
mov
mov
inc
push
out
mov
cmp
or
lock
jns
imul
movs
into
add
sub
xor
xor
mov
out
rol
cmp
dec
push
mov
(bad)
js
(bad)
add
shl
mov
add
shr
mov
cli
sub
inc
sbb
and
jp
test
jp
imul
xor
pop
and
fdiv
inc
inc
cmp
fisubr
enter
jecxz
push
(bad)
rol
clc
or
mov
or
adc
xor
inc
adc
ja
stc
hlt
push
ret
push
jb
and
sub
ret
rcl
mov
imul
retf
daa
mov
aad
ror
push
addr16
mov
sub
pusha
sbb
in
inc
inc
ss
jp
add
es
mul
test
into
inc
fist
ret
loope
loopne
push
dec
add
popf
ror
ins
clc
mov
in
rcr
xlat
pop
(bad)
inc
rcr
sub
mov
xchg
jnp
xor
add
push
shl
add
pushf
(bad)
mov
call
sbb
fwait
repz
fisubr
sahf
add
mov
xchg
xor
cs
lods
jns
inc
or
outs
gs
dec
popa
jle
dec
adc
ss
movs
ss
mov
lds
dec
xchg
retf
inc
push
mov
stc
jmp
mov
xor
movs
and
adc
das
sub
fisub
cdq
shl
ja
(bad)
xchg
adc
dec
lods
call
xor
hlt
cld
cmp
movs
cmp
sub
jmp
xchg
push
sub
daa
mov
sub
pop
in
sub
sar
inc
push
xor
dec
lods
adc
loopne
or
push
pop
loop
pop
out
fdiv
fild
iret
(bad)
je
test
adc
fiadd
dec
scas
jge
out
cmp
push
loop
push
dec
repz
mov
xor
call
repnz
mov
imul
lods
add
adc
jo
mov
movs
fwait
mov
call
shl
jmp
mov
mov
fbstp
mov
mov
mov
pop
(bad)
push
(bad)
sbb
inc
clc
jle
sub
push
es
jmp
(bad)
mov
fldcw
test
jge
std
and
jb
retf
retf
push
lea
mov
stc
pop
xchg
in
outs
scas
icebp
jbe
xchg
in
fwait
mov
call
in
cmp
push
retf
and
mov
sub
mov
jp
mov
jae
xchg
iret
mov
cmp
repz
fisub
rol
test
pop
or
xlat
pop
ficomp
mov
lds
dec
dec
lods
cs
rcr
jg
mov
pop
jp
in
jmp
cs
popa
test
or
mov
nop
imul
or
jmp
fs
jg
pushf
push
ror
xchg
scas
xor
loop
jns
popf
mov
lock
cld
and
ins
repz
jmp
add
(bad)
xlat
cmp
int3
sbb
dec
or
shl
sbb
cmp
loope
or
int3
or
pop
sbb
das
cmps
mov
adc
inc
sub
and
jmp
mov
dec
adc
ror
loopne
leave
or
dec
fcomp
rcr
mov
int3
xchg
movs
mov
mov
fs
test
pop
pop
push
cmp
shl
adc
repz
loopne
cld
xor
aad
mov
bound
addr16
mov
dec
xor
lods
fcom
(bad)
and
jb
mov
fldenv
dec
popf
loopne
aas
push
mov
mov
rcl
and
aam
or
adc
jns
repnz
push
es
mov
cmps
jb
dec
fst
aaa
xchg
cmp
adc
daa
gs
jmp
pop
test
(bad)
jge
xor
rcl
je
adc
jb
cmp
hlt
fiadd
ins
test
cld
ret
cdq
cli
cwde
or
sub
mov
xchg
iret
mov
jge
jne
jecxz
ds
outs
int
xlat
xchg
and
test
inc
sub
shr
(bad)
ins
add
dec
ret
call
hlt
fild
dec
imul
jb
push
or
pushf
nop
or
xchg
inc
stc
imul
call
cmp
cmp
ja
imul
sbb
or
jg
xchg
in
jns
dec
or
lods
sbb
sub
scas
and
cs
inc
sbb
popf
ret
add
gs
in
lods
loopne
sbb
(bad)
pop
mov
cmp
xor
mov
lds
mov
and
repnz
(bad)
in
mov
push
jge
enter
xchg
and
ffreep
mov
enter
je
mov
jno
add
adc
fisttp
dec
(bad)
bound
push
xchg
ss
dec
push
and
aam
mov
push
pop
retf
pop
cmp
mov
lea
sbb
repz
(bad)
in
popf
mov
leave
xchg
jo
imul
inc
xchg
inc
xchg
inc
test
pop
mov
rcl
xor
inc
sub
jo
cmp
and
sub
pusha
scas
xor
cli
mov
xchg
daa
mov
dec
pop
mov
inc
loop
add
dec
dec
test
or
loopne
iret
lods
in
aaa
ret
add
push
push
das
add
add
push
xchg
push
dec
les
js
adc
ret
arpl
dec
ret
mov
mov
adc
lea
jo
xchg
push
ficomp
mov
std
adc
xchg
mov
pop
jmp
fstp
inc
cmps
(bad)
xlat
add
adc
pop
scas
xlat
adc
dec
jmp
dec
mov
xchg
mov
push
ret
add
scas
push
ins
sbb
mov
sti
stos
daa
rcl
cli
xor
jno
mov
mov
jp
mov
test
test
push
jb
pop
test
bound
jp
dec
mov
test
in
int3
xchg
mov
imul
sub
test
test
cmp
xor
out
push
ret
pop
arpl
ret
shr
daa
test
push
cmps
jmp
jmp
inc
(bad)
inc
retf
and
cmp
mov
and
cmp
in
xor
stos
push
mov
rcl
inc
pushf
aam
(bad)
mov
out
arpl
rcl
jbe
mov
sbb
arpl
sbb
in
mov
mov
sub
aas
add
mov
inc
inc
xor
imul
xchg
adc
dec
jl
jmp
clc
(bad)
fcom
push
cmp
mov
pop
pop
jnp
or
push
add
mov
iret
push
into
mov
sub
shl
bound
push
(bad)
setns
push
ds
push
jp
sbb
int
pop
cld
movs
mov
ins
ja
enter
xchg
icebp
cmps
fistp
cmp
mov
(bad)
sar
push
add
add
daa
xor
mov
adc
dec
fiadd
or
dec
add
dec
loop
or
xchg
mov
call
out
leave
mov
inc
and
popf
cli
js
jmp
fwait
adc
out
lods
pop
and
clc
push
out
mov
xlat
(bad)
and
dec
or
jne
push
aas
fmul
xor
inc
xlat
shl
and
fs
or
adc
mov
repz
iret
cmp
div
pop
jge
and
push
cdq
sti
dec
inc
inc
pop
add
jb
xchg
int3
and
ss
or
dec
loopne
mov
test
stos
movs
mov
in
mov
in
aam
into
cmp
add
xor
xor
jp
pop
inc
pop
clc
int
jg
(bad)
push
test
xchg
out
push
pop
cmps
jns
test
pop
dec
xor
add
jo
ret
pushf
or
sub
div
pop
pushf
xchg
jle
and
lock
or
jb
pop
xor
neg
push
fiadd
in
fst
mov
sti
and
fs
pop
xor
popf
push
jp
add
popa
mov
sub
fs
es
ss
cmp
retf
cmps
hlt
jmp
and
pushf
add
shl
fistp
pop
cmps
add
int
sbb
ins
sbb
in
dec
call
push
xlat
scas
xor
sub
push
pop
mov
xlat
and
adc
js
push
fst
jmp
adc
add
and
push
adc
jmp
cmp
push
add
iret
stos
stos
mov
aad
cmps
sub
push
or
movs
cdq
and
push
add
out
add
je
push
xchg
xchg
out
iret
sar
neg
push
jge
and
xor
xchg
mov
repnz
jp
add
dec
loopne
shl
sub
imul
fsubr
mov
push
cmp
sahf
push
dec
addr16
call
inc
xchg
sti
or
and
fucomip
(bad)
cmp
pop
push
and
scas
or
xchg
dec
push
icebp
(bad)
int
int3
cmps
ins
jecxz
push
jnp
push
ss
sbb
inc
rol
pop
popf
in
xchg
retf
cmps
and
aas
out
fadd
(bad)
xor
(bad)
lea
dec
aam
pop
inc
or
mov
xor
jnp
fcom
mov
out
and
lock
mov
inc
pop
cmc
jb
(bad)
mov
shl
mov
jnp
jno
jae
imul
jecxz
rcl
push
or
dec
sbb
or
icebp
jmp
sbb
cmova
adc
fisubr
sti
pop
mov
stos
(bad)
xchg
into
arpl
ret
jp
(bad)
shl
or
test
push
adc
mov
inc
idiv
dec
adc
jp
retf
sub
pop
setg
pushf
inc
jg
loopne
nop
xchg
sahf
jp
push
mov
(bad)
in
mov
and
sub
lock
push
pop
mov
mov
xor
jo
int
aaa
stos
xchg
aad
xchg
pusha
sti
jne
gs
xor
push
dec
repnz
lock
sbb
mov
push
pushf
mov
xor
inc
in
rcr
cmp
xchg
mov
or
rcr
adc
inc
je
pop
mov
dec
jle
fidiv
mov
dec
js
add
cmp
adc
pop
int3
and
jmp
sahf
lods
cmps
fsub
jne
dec
mov
cs
out
xor
sub
adc
mov
and
or
or
cmp
iret
sub
sub
cmp
cmp
imul
add
xor
test
arpl
add
sub
xchg
sbb
xor
mov
and
enter
pop
ins
iret
mov
fcom
inc
jp
push
push
enter
or
and
(bad)
daa
xchg
xchg
mov
enter
pop
leave
shr
inc
inc
iret
or
stos
das
inc
xchg
xor
xor
adc
jb
mov
ret
pop
or
cmp
lahf
into
imul
repz
loope
adc
or
inc
cmps
std
add
xchg
add
jle
add
outs
sbb
mov
js
pop
mov
cmps
mov
jno
aas
xor
mov
jle
dec
push
nop
fistp
ss
leave
rcr
iret
jmp
enter
sbb
mov
in
call
xchg
ja
adc
mov
mov
add
or
sbb
jg
add
aad
or
sbb
mov
mov
pop
push
outs
outs
lods
cmp
mov
inc
sub
add
call
and
mov
mov
inc
jns
loope
out
popf
and
inc
mov
dec
out
or
call
jl
xchg
cmps
mov
pop
push
mov
and
sub
lahf
xchg
adc
les
sbb
jp
stos
in
call
ficom
sbb
and
loopne
cwde
retf
jnp
sbb
sbb
xchg
js
sar
fcomp
sbb
lds
dec
fsub
in
or
jmp
out
adc
fist
rcr
inc
xor
lahf
dec
xor
or
call
adc
sti
out
push
xchg
push
bound
(bad)
or
cli
ss
imul
push
sbb
or
push
sbb
xor
call
daa
fadd
outs
pop
cld
jb
aas
jae
out
mov
dec
cli
mov
lahf
test
adc
inc
pop
int
adc
sub
fcom
in
arpl
in
lds
gs
dec
mov
cmp
addr16
inc
in
cmp
pop
pop
and
ins
push
lock
aad
adc
or
and
and
sti
mov
dec
add
pop
cwde
iret
ror
adc
clc
sub
movs
pop
mov
pop
mov
shl
fcomi
popa
jg
(bad)
cld
xchg
pop
mov
ret
xchg
sbb
or
dec
xlat
and
mov
sar
push
test
xchg
push
rep
or
sbb
push
push
lock
sahf
mov
pop
or
pop
inc
fld
adc
or
mov
mov
xchg
add
sbb
inc
mov
cmc
mov
shl
mov
out
pop
sti
jo
dec
or
movs
mov
stos
int3
pop
test
pushf
call
xchg
mov
dec
dec
test
lds
pop
leave
sahf
pop
or
(bad)
(bad)
adc
dec
mov
mov
adc
sbb
mov
mov
xor
sbb
add
pushf
mov
fmul
jb
jb
inc
popf
lds
lods
vcvtdq2pd
mov
mov
jle
cmps
(bad)
out
inc
dec
int3
jmp
sub
pop
push
mov
(bad)
jmp
loope
push
dec
jnp
stc
cmp
mov
and
icebp
add
cmps
sub
scas
sub
test
cdq
push
dec
(bad)
rol
shl
rcl
mov
movs
xlat
outs
add
or
stos
ror
fst
call
cmp
pop
pop
xor
in
mov
inc
pop
pushf
push
addr16
push
fld
popa
pop
inc
xor
xchg
dec
retf
add
mov
sahf
repz
dec
arpl
jbe
rcl
aas
pop
repnz
out
gs
ss
push
xrelease
adc
dec
repz
icebp
pop
sbb
jno
in
dec
mov
mov
cmp
jle
jp
repz
mov
out
test
pop
add
inc
xor
fcom
nop
call
pop
shl
sbb
in
aad
in
sub
shr
jno
mov
pop
mov
xchg
les
cmp
jmp
leave
loope
int3
popf
out
int3
movs
js
xor
lahf
movs
mov
dec
inc
xor
or
lahf
xor
cmp
xchg
or
scas
xchg
nop
xor
nop
mov
ror
push
pop
jmp
pop
jb
and
push
call
mov
ins
or
stos
push
push
nop
jg
cdq
mov
aad
dec
push
xchg
mov
cdq
loop
pop
jbe
out
out
cli
cmp
imul
cmc
mov
pusha
inc
adc
inc
adc
adc
inc
push
mov
push
cmps
xchg
rol
mov
xchg
jb
and
xor
push
stc
cmp
loop
fs
movs
push
test
out
sbb
adc
pop
xchg
out
(bad)
mov
pop
pop
imul
fwait
pusha
mov
and
adc
and
scas
pop
cmp
sub
stos
cmp
jp
mov
adc
or
popf
fimul
and
fwait
int
xchg
inc
js
daa
or
xchg
xor
es
mov
aas
adc
in
loop
loope
adc
xchg
jns
mov
sub
lahf
xor
scas
pop
mov
movs
nop
loop
sub
mov
add
or
or
jbe
ins
in
cdq
out
lods
and
jne
enter
and
jae
push
push
adc
clc
sub
mov
mov
mov
fcmovb
loope
cmps
jmp
mov
xor
mov
sub
in
xor
jno
lds
jp
jo
mov
jecxz
push
cmc
mov
pop
jmp
pop
push
xor
ja
cmp
cmp
push
adc
and
and
add
in
(bad)
fs
in
mov
sahf
xchg
add
mov
cmp
add
xlat
xchg
inc
mov
jmp
mov
mov
ins
ins
dec
ja
nop
cld
pop
daa
popf
cli
add
js
js
inc
out
mov
test
add
call
stos
(bad)
sti
inc
sbb
iret
xor
sub
sub
out
xchg
ins
idiv
mov
mov
mov
inc
(bad)
dec
sbb
sbb
push
mov
ret
pushf
sbb
jg
call
int
mov
ret
and
xchg
add
arpl
xor
sub
sbb
add
add
call
inc
js
inc
adc
or
or
ins
pop
ins
dec
scas
scas
hlt
and
jae
sbb
jmp
add
test
stos
or
fadd
sbb
lods
test
xchg
jno
div
mov
xor
mov
stc
jecxz
adc
sbb
cmp
xchg
jns
fisttp
out
adc
shl
popf
cmp
fs
imul
inc
dec
fmulp
xchg
movs
xor
sub
addr16
aas
fisub
(bad)
test
into
cmp
mov
imul
clc
cmp
pusha
mov
fcom
mov
or
or
aam
mov
sti
(bad)
cwd
cdq
retf
cld
leave
fwait
xor
xor
and
and
jb
sub
movs
stos
cmp
or
or
sbb
movs
jl
in
pop
shl
ins
retf
scas
repnz
xchg
(bad)
test
fdivp
test
sbb
aaa
sbb
and
sbb
stos
xchg
push
xchg
cwde
pop
mov
loope
dec
dec
cmps
fcom
js
out
test
sub
in
hlt
or
fwait
int
cmp
mov
out
mov
pusha
mov
mov
fist
test
jns
mov
lds
and
jle
xor
fadd
jbe
mov
mov
dec
pop
cmps
retf
pop
popf
jne
mov
out
push
adc
xor
ins
and
fdiv
mov
ins
neg
jo
lds
in
push
faddp
mov
rol
out
mov
push
cdq
push
or
repz
paddusw
int3
loope
mov
and
mul
gs
loop
dec
in
sub
fld
in
add
adc
dec
mov
xor
sbb
mov
mov
jne
cmc
dec
push
out
aas
(bad)
sar
das
dec
jmp
jg
dec
push
mov
sahf
mov
adc
mov
mov
mov
push
push
pop
(bad)
scas
push
sbb
dec
icebp
adc
pop
xchg
std
ror
rcl
push
add
dec
pushf
xchg
imul
or
(bad)
shl
pop
out
push
pop
xor
dec
jmp
mov
mov
xchg
add
push
push
or
ror
lock
sbb
mov
jmp
dec
imul
fisttp
xor
xchg
mov
xchg
sbb
scas
or
adc
fcomp
enter
call
ss
stc
sub
pop
push
movs
enter
jg
ins
mov
lock
aaa
jmp
push
lods
and
retf
cmp
mov
aam
retf
rcr
in
mov
pop
cmp
mov
imul
mov
adc
and
mov
and
sbb
popf
sub
mov
sub
inc
sub
mov
xor
push
addr16
mov
dec
mov
cli
iret
dec
rol
scas
rol
xchg
int3
cdq
out
adc
lea
pop
(bad)
cmps
cmc
movs
mov
mov
(bad)
push
xchg
pop
out
mov
push
and
jmp
jl
cwde
test
out
fstp
pop
mov
(bad)
ja
and
dec
or
ja
clc
adc
sbb
ret
pop
dec
mov
inc
in
xchg
xor
adc
stc
and
dec
xchg
and
outs
jae
(bad)
scas
add
cld
retf
jg
or
jbe
ret
lock
xchg
fucom
fadd
mov
mov
inc
xchg
mov
stos
xchg
jmp
push
ja
jp
popa
iret
pop
push
sbb
jmp
les
push
push
cmp
stc
mov
sbb
dec
push
mov
shr
shr
inc
jmp
iret
scas
fst
jne
stc
mov
into
xchg
pop
and
xchg
js
sbb
push
jmp
mov
add
repz
fcom
push
out
dec
xchg
out
int3
xchg
cmp
stos
add
add
pop
loop
inc
sbb
cli
sbb
mov
sbb
xor
jmp
jecxz
mov
fpatan
mov
je
mov
xchg
and
sub
or
xchg
mov
xchg
ds
xor
mov
cmps
mov
fs
inc
popf
sub
jp
mov
jne
sub
and
call
call
sub
fidivr
adc
mov
jle
jle
mov
or
add
mov
mov
outs
cli
fsub
ds
les
adc
aam
mov
cmp
inc
enter
enter
or
adc
inc
jle
into
jle
mov
fxch
stos
jmp
fadd
add
mov
sub
loope
data16
push
mov
dec
loopne
adc
mov
mov
cmp
jno
cmp
sub
ret
jge
mov
outs
inc
cs
or
in
push
jnp
push
mov
jl
add
adc
into
xchg
adc
or
test
adc
jmp
pop
sbb
inc
sbb
push
mov
(bad)
in
inc
jg
sub
scas
fs
or
aas
out
movs
and
movs
(bad)
fimul
xchg
std
add
frstor
xchg
cmp
shl
xchg
mov
fprem
clc
into
pop
(bad)
mov
ds
es
mov
aas
xor
aam
std
xchg
add
ret
dec
and
xlat
nop
loop
sub
retf
cmps
sub
in
jo
jmp
jle
xor
sbb
and
sub
adc
daa
xor
jnp
add
mov
fnsave
test
add
adc
inc
push
add
enter
jl
(bad)
es
sahf
ja
adc
sub
fs
rcr
loope
jge
cmovae
arpl
dec
in
add
fcomp
loopne
sub
xchg
push
movs
int
fisub
pusha
and
dec
lods
inc
mov
dec
push
cdq
cmps
sti
push
cmp
inc
fiadd
adc
lods
or
clc
dec
leave
pop
or
xchg
fldenvw
ror
lods
in
push
(bad)
sub
das
mov
mov
sti
mov
xchg
data16
fimul
jge
xor
arpl
inc
pushf
aaa
in
arpl
jae
lea
std
stc
pop
inc
shl
aad
pop
(bad)
ficom
adc
test
in
mov
mov
dec
xchg
xor
and
sbb
cmps
aam
enter
cmp
in
push
pusha
push
js
fidivr
add
pop
and
jo
test
pop
cmps
and
adc
or
mov
adc
and
lods
xor
mov
movs
mov
add
jle
xlat
(bad)
and
jb
or
adc
xchg
add
leave
je
add
les
scas
pmulhw
mov
sbb
mov
mov
push
mov
adc
frstor
xor
jl
scas
sub
mov
cmps
mov
out
ins
in
loope
cmp
rcr
push
mov
xchg
pusha
lock
data16
dec
fwait
jne
jae
inc
int3
dec
jb
adc
cdq
fsub
sub
loope
pop
fdiv
mov
and
cs
pop
adc
shl
aad
(bad)
pusha
pop
sub
add
pop
(bad)
aad
adc
or
pop
mov
test
dec
push
push
push
add
xchg
les
ror
fnstcw
loope
jbe
les
mov
or
add
ror
adc
fimul
cld
movs
push
add
out
and
xchg
ffree
inc
stos
push
jecxz
movs
popa
sub
inc
out
pusha
push
add
or
dec
mov
test
push
mov
js
div
retf
ret
aaa
cmp
dec
and
cmp
mov
and
into
out
ret
cs
out
xor
cmc
fstp
lods
or
or
cmc
adc
in
and
test
sub
repnz
inc
adc
xchg
bound
adc
popf
xor
push
mov
mov
jg
leave
cmp
xchg
(bad)
xor
sub
pop
frstor
push
adc
imul
outs
jbe
jg
ins
daa
sbb
pop
rol
cmp
aaa
dec
out
mov
sub
mov
mov
or
imul
jle
mov
push
je
in
sti
cmp
rcr
sbb
in
mov
sahf
mov
or
data16
sbb
dec
lahf
call
mov
xchg
xchg
or
xchg
jecxz
sbb
pop
xor
data16
jp
mov
adc
or
and
rol
sub
mov
sbb
test
and
leave
pop
and
sub
cmps
retf
mov
mov
scas
mov
sbb
pusha
ret
mov
mov
jbe
dec
pop
mov
xor
push
and
dec
add
pop
addr16
sar
ins
cs
test
repz
pop
pop
cmps
lods
ins
mov
scas
cmp
inc
cli
xchg
pop
(bad)
mov
jl
inc
lods
cmp
dec
dec
fldenv
inc
mov
adc
fld
jmp
mov
sbb
into
rcl
xchg
mov
push
ja
inc
jo
pop
mov
or
add
push
in
call
mov
test
aam
jmp
stos
add
jl
or
and
add
(bad)
mov
dec
scas
cmps
(bad)
cmps
(bad)
mov
and
ffreep
sbb
test
mov
stos
mov
movs
jne
div
fiadd
mov
es
nop
test
cmp
sub
leave
xchg
cmp
mov
add
call
(bad)
sub
fsubrp
loopne
fcmovu
(bad)
in
stc
popf
or
ds
or
fwait
jae
mov
movs
push
in
jmp
out
xchg
pop
(bad)
mov
popf
(bad)
push
and
repnz
cmp
imul
dec
out
fimul
xlat
aam
xchg
jne
sbb
push
xlat
gs
(bad)
imul
jnp
inc
cmp
(bad)
mov
ss
loope
cmps
or
and
add
loopne
data16
jecxz
cmps
loope
sbb
inc
gs
lock
sbb
in
fs
dec
inc
test
out
es
fstp
mov
in
and
call
adc
pop
repnz
and
fcmovnb
es
icebp
xchg
test
jnp
mov
ret
repnz
mov
push
mov
not
(bad)
mov
pushf
rol
sub
and
pop
mov
cmp
loop
clc
mov
mov
adc
loope
clc
jp
rcl
out
fs
loop
aam
mov
mov
ror
shr
mov
inc
push
stos
mov
hlt
sbb
enter
test
leave
xchg
cdq
mov
ja
outs
bound
inc
mov
loop
clc
dec
es
aaa
sub
mov
push
cmc
xchg
inc
jns
and
dec
add
popf
fcmovnbe
jmp
in
cmp
test
das
inc
sub
dec
mov
mov
std
sti
cmps
mov
repnz
xor
and
push
cdq
dec
inc
sbb
sbb
cmp
xchg
cmc
lahf
dec
iret
mov
xor
pusha
in
adc
mov
sub
sub
push
xchg
test
in
cmp
or
mov
adc
sub
div
gs
icebp
inc
jns
dec
jge
pop
int3
rol
arpl
in
adc
push
push
fs
xchg
inc
push
mov
or
aad
out
cwde
push
pop
mov
aaa
jne
or
inc
xchg
push
stos
dec
push
fistp
xchg
loop
enter
jmp
call
jl
aas
sub
in
test
repnz
jecxz
call
out
jnp
push
mov
stos
out
(bad)
enter
lods
pop
inc
mov
cs
dec
repnz
dec
test
cli
inc
push
lods
jbe
retf
aas
bound
sub
int3
sbb
cdq
push
push
push
or
sub
sbb
rol
cmp
cmp
movs
mov
fmul
cmp
inc
movs
lds
xor
inc
stos
dec
dec
fidivr
lods
stos
sbb
cmc
mov
lods
inc
jno
repnz
in
and
inc
push
dec
sub
mov
ret
push
adc
retf
and
enter
pusha
fwait
out
ja
jmp
mov
mov
scas
cmp
imul
shl
inc
jne
or
lock
sbb
sti
cs
mov
mov
dec
xor
mov
das
(bad)
cli
gs
or
aad
mov
mov
popf
xlat
loop
sub
dec
mov
xchg
dec
adc
in
daa
mov
and
sahf
mov
pop
add
repnz
adc
or
cld
cmps
pop
jg
mov
inc
xor
and
mov
xlat
pop
call
inc
mov
mov
(bad)
cli
fsub
dec
sub
retf
pop
push
cmp
jne
push
pop
pop
rol
stos
mov
int3
xchg
into
jnp
or
push
test
into
cwde
fimul
dec
or
xchg
fcomip
popa
mov
fist
lock
out
loop
out
inc
cmp
dec
xor
push
dec
test
push
lods
add
push
hlt
sbb
mov
jl
fist
aad
adc
jg
repz
popa
mov
mov
jo
xchg
mov
jo
jp
cmc
pushf
add
lock
jns
out
mov
stos
gs
push
mov
xchg
out
adc
or
adc
fisubr
enter
sar
push
pop
ins
add
jno
arpl
mov
int
pop
xchg
pop
mov
dec
mov
pushf
and
pop
push
shr
xchg
jmp
jnp
out
jg
je
inc
mov
mov
jge
or
(bad)
inc
push
sbb
mov
inc
sbb
(bad)
xor
and
mov
arpl
pop
and
test
dec
stc
imul
sbb
std
and
cmc
lahf
mov
ror
adc
jmp
jae
mov
xor
or
or
push
add
add
mov
mov
xchg
jp
fstp
mov
jg
sub
dec
pop
mov
sbb
shl
mov
fwait
pop
les
je
inc
rcl
cmp
push
retf
in
pop
push
sub
pop
sbb
and
mov
fnstenv
pop
push
pop
mov
mov
imul
add
shl
push
pop
and
sbb
push
jl
jmp
jge
lahf
scas
pop
sbb
fsub
adc
aas
sbb
cmps
lods
hlt
jmp
lahf
mov
out
sub
repz
jl
jle
add
push
or
mov
(bad)
or
div
pop
xor
movs
mov
xchg
lods
jb
and
sub
or
jo
jo
inc
push
out
or
push
popf
mov
cmp
jle
jo
out
push
hlt
shr
icebp
inc
mov
(bad)
sti
outs
xchg
dec
xchg
xchg
add
iret
mov
jg
fnstcw
sbb
mov
mov
mov
in
mov
aaa
aad
sbb
mov
add
push
jl
out
xor
aam
shl
movs
aaa
sbb
inc
mov
push
push
add
lods
into
mov
push
or
lods
add
aaa
jno
inc
cmp
(bad)
adc
jnp
adc
xor
jae
dec
out
test
jmp
ins
jg
xor
lods
push
mov
out
inc
add
pop
or
push
xchg
test
inc
sbb
xchg
pop
adc
hlt
cdq
test
jo
sbb
cs
sbb
push
pop
retf
(bad)
sbb
pop
gs
call
cmp
gs
adc
sub
nop
jp
sub
rol
cld
scas
fstp
pop
mov
ret
(bad)
dec
ja
sub
jmp
ret
mov
repnz
sbb
outs
mov
jnp
call
push
pop
test
pop
dec
mov
hlt
pop
sbb
je
sbb
inc
or
inc
fidiv
outs
mov
jb
lock
pop
inc
sub
cmp
mov
push
jnp
test
and
adc
cli
scas
mov
cmp
imul
jl
in
es
mov
cmps
cmps
mov
pop
mov
dec
test
xchg
xor
sbb
inc
sub
cmp
mov
movs
pop
retf
mov
cld
js
pop
popa
add
adc
pop
fs
and
sti
sbb
xchg
pop
ret
add
push
dec
cmp
ret
xchg
call
mov
arpl
or
in
nop
xor
push
dec
mov
das
scas
mov
jne
mov
and
xchg
inc
pop
sub
adc
(bad)
sbb
cmc
out
jecxz
std
arpl
jno
cmp
xchg
jl
push
cmp
retf
xlat
stc
xchg
adc
call
ds
mov
xor
popf
xchg
pop
aas
and
movs
or
inc
outs
adc
push
movs
jno
mov
sahf
daa
mov
idiv
nop
lods
push
cmp
xor
mov
xchg
xchg
fnstsw
cwde
jl
cmp
je
retf
jns
icebp
add
fisttp
ret
mov
mov
icebp
cld
cmc
jge
fsin
fmulp
or
push
jmp
sbb
call
adc
jge
pusha
inc
add
pusha
xor
call
and
mov
rcr
not
pop
adc
mov
mov
fstp
ja
add
sub
scas
pop
daa
and
xchg
cmp
popf
xchg
cmp
sub
aas
je
sti
inc
xchg
sar
fild
xchg
iret
mov
dec
inc
mov
cmp
mov
xchg
fcomip
add
or
xor
or
add
scas
mov
arpl
xchg
aam
and
pop
lock
sub
adc
int
lds
mov
dec
push
sbb
out
cmp
push
push
xchg
stos
enter
dec
pop
xchg
jnp
outs
std
fucomip
arpl
jne
xchg
or
ret
push
sub
sahf
push
rcr
ret
into
pop
mov
cli
femms
leave
pop
aaa
sub
fucomp
out
outs
xor
fdivrp
push
shl
jmp
mov
imul
aad
es
pop
jb
lds
iret
sbb
cmps
jg
push
aas
xchg
stc
out
inc
jp
jns
cmp
jmp
xor
jmp
jp
add
fcmovne
cmp
scas
(bad)
stc
xor
lods
ins
push
adc
cmp
jmp
jecxz
icebp
push
les
cmp
test
sbb
mov
xchg
xchg
bswap
cdq
sub
pop
mov
mov
sahf
int
cli
mov
dec
stos
jae
fs
imul
cmp
fs
adc
cmps
(bad)
fcompp
add
cld
cmp
push
mov
mov
ror
rcl
mov
mov
repnz
adc
cmp
scas
(bad)
cmp
(bad)
adc
cmc
out
push
push
xlat
iret
lods
mov
sub
neg
fwait
inc
into
ret
imul
push
add
inc
adc
jmp
mov
shl
jb
or
test
leave
lods
sbb
(bad)
out
sbb
mov
ror
lahf
cmps
into
jmp
jl
mov
movs
lds
ret
popa
stos
mov
xor
aas
ds
in
test
retf
rcr
xchg
cmps
js
cmps
cmp
add
xor
xchg
daa
mov
test
or
mov
pop
cmps
mov
pop
or
inc
loopne
or
iret
xchg
imul
mov
pusha
hlt
push
in
popf
test
fld
sbb
mov
xor
imul
inc
test
pop
gs
or
inc
adc
mov
xchg
mov
cmp
mov
add
(bad)
pusha
xor
xor
popa
or
inc
(bad)
stos
jo
adc
pop
clc
xor
or
and
sub
int
pop
inc
mov
cmps
lds
fbld
out
mov
or
and
icebp
push
inc
retf
pop
pop
sbb
cmp
sbb
div
cmc
and
sbb
stc
sbb
inc
dec
xlat
shl
jge
test
xchg
rol
repnz
aaa
sbb
into
push
ret
icebp
in
jae
repz
xor
(bad)
mov
out
push
adc
in
push
(bad)
imul
xlat
push
push
mov
mov
scas
mov
lock
mov
jae
sub
leave
mov
cmp
inc
push
jmp
inc
out
outs
push
xchg
pop
lea
mov
pop
xlat
into
out
in
lds
push
push
mov
add
in
iretw
jnp
jecxz
jp
mov
add
mov
and
and
adc
dec
add
inc
adc
jnp
pop
outs
jmp
xchg
addr16
mov
rcl
and
stos
addr16
das
sub
or
inc
inc
dec
xchg
(bad)
out
xchg
mov
and
push
mov
dec
jne
out
pop
(bad)
aad
outs
test
sbb
fsub
push
movs
sbb
push
mov
movs
in
xchg
movs
lods
mov
or
jae
or
out
out
jno
mov
mov
mov
pop
mov
stc
mov
xchg
and
jmp
push
mov
pop
sbb
cs
fistp
xchg
pushf
and
mov
enter
mov
leave
(bad)
les
inc
xor
or
xor
mov
or
dec
push
cmp
call
xchg
sbb
cmp
mov
sbb
push
fnstenv
push
sbb
jle
jno
mov
sub
adc
out
mov
xchg
xor
jl
jmp
sahf
outs
xor
out
cmp
inc
xchg
pop
lods
outs
cmps
loopne
das
jmp
neg
ins
xor
lods
xor
or
imul
hlt
mov
pop
enter
sbb
push
jmp
aaa
or
js
or
sub
cmp
mov
leave
xor
xchg
je
xchg
jg
xchg
adc
jp
test
sub
cmp
dec
and
cwde
sbb
leave
loopne
jg
outs
jbe
mov
std
sub
push
inc
push
mov
add
sar
inc
ret
adc
and
icebp
cmps
mov
jbe
pop
icebp
and
retf
retf
cmp
js
mov
inc
inc
aas
mov
mov
mov
ret
test
pop
fist
xchg
les
push
cmps
(bad)
fucomip
jne
inc
dec
mov
imul
into
add
push
inc
pop
into
addr16
add
lea
sbb
mov
movs
cmc
mov
and
sti
jb
sub
out
cmp
adc
push
jmp
or
sbb
pop
dec
jnp
gs
in
adc
test
sti
push
xor
lock
cmp
push
cdq
ficomp
jbe
and
and
sbb
(bad)
bound
(bad)
push
mov
idiv
adc
dec
xchg
ror
inc
inc
inc
xchg
sbb
cmp
stos
jns
xchg
push
or
movs
push
lods
aaa
dec
sbb
pop
cli
loope
shr
fcmovbe
cs
movs
int3
mov
mov
jb
push
or
fnstsw
dec
(bad)
push
ja
js
addr16
aad
in
rcr
stos
test
dec
je
rol
frstor
ds
push
xchg
and
sbb
xchg
add
das
fstp
dec
pop
mov
add
out
fwait
pop
sbb
push
dec
mov
cmps
das
mov
jge
stos
repnz
xor
xchg
cmp
mov
xchg
mov
cmp
bound
lds
inc
addr16
repz
inc
mov
xchg
dec
dec
or
pop
fdivrp
xchg
mov
mov
sub
movs
scas
xchg
rcr
mov
push
xchg
mov
loopne
not
lock
aam
in
movs
(bad)
xchg
mov
aas
xor
clc
mov
xlat
push
and
and
retf
jge
mov
adc
pop
or
ret
fcmovbe
scas
sbb
cwde
dec
mov
inc
into
add
and
mov
sar
lea
stos
jecxz
jecxz
cwde
or
idiv
leave
mov
scas
xlat
sub
retf
pop
lods
clc
and
and
or
or
pop
nop
cmp
cdq
jge
pop
cmp
sub
add
jbe
in
into
push
movs
cdq
inc
fisttp
aas
mov
inc
inc
or
cmp
or
in
xchg
adc
cmc
cli
pop
dec
(bad)
sar
mov
aaa
xor
out
dec
jl
jmp
in
sahf
mov
sub
jo
lods
pusha
cli
repnz
mov
inc
lahf
xchg
or
push
mov
push
mov
mov
das
fucomip
jnp
movs
jmp
push
int
jge
add
inc
je
xor
test
push
mov
dec
arpl
retf
mov
sub
push
shl
rol
xor
jmp
inc
xor
adc
fist
cmp
jne
call
(bad)
ror
std
add
adc
not
lods
std
aas
sub
aaa
pop
or
lods
cmp
pop
xchg
retf
cmc
inc
paddq
imul
mov
call
pop
neg
loop
scas
imul
or
js
jmp
mov
lock
repnz
rcr
test
call
adc
idiv
xor
adc
mov
sub
jns
inc
movs
scas
xchg
lds
icebp
and
push
mov
inc
jecxz
cmps
lea
or
inc
stos
mov
jbe
xor
lahf
(bad)
(bad)
(bad)
loope
fnstcw
nop
mov
shr
cli
bound
adc
test
ss
(bad)
fmul
mov
xchg
inc
and
scas
xor
add
test
pop
jl
loopne
jno
sbb
push
fdivr
shr
clc
aam
add
loopne
gs
pop
lods
jmp
fdivr
adc
clc
mov
scas
cmps
mov
xor
retf
push
daa
xor
dec
cmp
mov
repz
add
leave
mov
xor
stos
xchg
push
jl
or
leave
jmp
cmp
iret
cmps
cmp
mov
inc
mov
ficom
(bad)
push
mov
mov
bound
gs
cld
push
data16
call
call
push
out
fs
pop
cwde
(bad)
movs
push
je
cdq
ja
jb
int3
adc
test
inc
cmp
test
imul
inc
push
mov
jge
ds
aas
or
inc
mov
jnp
push
mov
pop
xor
sar
push
ja
push
repnz
xchg
imul
xchg
lahf
out
jae
or
shl
dec
pop
popa
xchg
mov
adc
mov
xchg
push
pop
sbb
rcr
jg
leave
cdq
mov
mov
lods
lahf
jae
add
lods
out
lock
imul
sahf
mov
xor
mov
pop
leave
rcl
add
nop
leave
in
call
inc
pop
daa
lods
(bad)
fmul
iret
sbb
xor
stos
or
out
sbb
les
dec
lock
int3
cwde
sub
daa
dec
jmp
sub
and
aam
pop
dec
js
test
in
push
jmp
mov
std
adc
jne
fild
fmul
mov
es
out
retf
xchg
test
sub
and
fld
or
pusha
movs
movs
and
outs
out
dec
ins
and
sbb
or
jl
jno
xor
xor
bound
mov
xor
loope
stos
popa
retf
mov
ret
jne
adc
not
ins
(bad)
fnstenv
mov
dec
mov
fbstp
push
lds
ret
xor
pop
sub
add
add
popf
stc
mov
lds
and
xchg
xchg
cmp
das
loopne
pop
test
js
in
xchg
inc
pop
add
int3
adc
inc
outs
outs
in
sub
xchg
or
(bad)
call
mov
shr
cs
hlt
sbb
call
je
cmc
movs
movs
pop
jmp
add
pop
gs
cwde
fisubr
sbb
or
inc
adc
(bad)
cmp
imul
(bad)
loope
and
or
jmp
and
lods
mov
cmps
(bad)
cmp
movs
cmp
and
sbb
jo
adc
cmps
xor
cdq
bound
loopne
xor
jb
outs
sbb
leave
mov
into
repz
repnz
jp
pusha
and
pop
mov
repz
fist
push
test
jecxz
das
inc
div
dec
aam
mov
adc
leave
cmp
xchg
ror
ret
aam
pop
xchg
fstp
adc
aad
and
cmp
(bad)
fwait
sub
xor
addr16
(bad)
sub
adc
dec
jne
lock
mov
cs
pop
inc
push
inc
call
cli
or
dec
cmc
xchg
push
xor
aas
imul
or
repnz
call
and
sbb
xchg
rep
cmc
test
push
or
mov
pusha
jns
push
out
ds
in
add
loope
outs
dec
pop
dec
cmps
repnz
cmps
or
leave
(bad)
jle
or
push
pop
sahf
mov
cdq
adc
xchg
xor
js
push
stc
mov
call
xchg
mov
lea
sbb
cmp
cmp
push
(bad)
jle
mov
xor
push
jp
cdq
ret
stos
(bad)
cld
movs
movs
aaa
popa
imul
mov
leave
aaa
sub
mov
or
pop
sbb
lea
push
rcr
inc
sti
jo
xor
add
or
dec
mov
es
sbb
mov
and
shl
mov
in
xlat
call
mov
outs
or
jbe
sbb
xor
movs
push
lock
frstor
aad
lds
das
enter
dec
or
bound
sub
pushf
aad
(bad)
add
push
sbb
cmp
add
inc
xor
rol
les
adc
cli
pop
fdivr
xor
ins
adc
or
xchg
test
xchg
dec
jns
mov
loop
push
cmp
enter
int
mov
sbb
pop
adc
add
mov
jae
sub
out
adc
mov
adc
repz
popa
lahf
leave
mov
lahf
int3
and
jb
aad
inc
inc
push
add
nop
nop
neg
fwait
test
test
sbb
add
seto
es
push
clc
sub
cmps
jp
pop
push
push
xchg
pop
xor
pop
pop
ds
sbb
les
scas
sbb
or
in
jns
cmps
pop
shl
and
adc
dec
inc
mov
pop
add
(bad)
sti
sbb
shl
je
fwait
cmc
mov
fsubr
push
mov
les
sbb
popa
ret
push
mov
sub
stc
adc
es
cmp
(bad)
dec
cmp
or
dec
push
mov
mov
lods
and
push
dec
ins
ret
mov
push
popf
push
push
push
push
jmp
sbb
popa
scas
fidivr
fwait
daa
pop
(bad)
out
pop
test
inc
fimul
pushf
call
shr
imul
aam
clc
ss
(bad)
call
jo
push
xchg
dec
daa
jb
out
stc
xchg
dec
mov
cmp
mov
xchg
push
xchg
push
ds
je
call
sar
mov
shl
stos
xor
jl
fmul
dec
adc
sub
mov
or
retf
cmps
inc
adc
push
cmp
popa
sbb
imul
les
inc
pusha
ja
mov
movs
shl
or
dec
je
or
inc
or
mov
mov
inc
out
mov
out
popf
jno
cmps
cmps
fwait
cmp
push
inc
sbb
rol
add
call
pop
inc
jae
sub
mov
mov
lea
out
adc
sub
dec
jns
inc
or
clc
or
in
in
mov
xchg
popf
mov
cmp
lock
pop
cmps
jle
sub
les
iret
pop
jns
movs
adc
mul
mov
cmp
ss
fstp
jge
sub
push
jge
pop
lods
add
mov
hlt
bound
mov
je
add
sub
adc
fld
cmc
in
add
mov
xor
in
test
cmps
add
adc
xchg
mov
pushf
ins
add
rcl
adc
cli
(bad)
in
(bad)
xor
scas
push
in
cmp
inc
inc
adc
push
add
retw
pushf
enter
mov
ins
bound
lods
loope
les
out
outs
es
repnz
mov
shl
xor
jge
xlat
pop
adc
lods
lods
sub
jno
xchg
popf
jg
or
xchg
rcr
aad
push
pop
les
and
ins
aas
and
addr16
xor
add
fdiv
outs
xor
and
and
nop
jmp
jmp
mov
mov
dec
push
addr16
sbb
push
aad
lds
sub
sbb
(bad)
fwait
sub
ins
test
xchg
sbb
lock
mov
add
je
stc
add
popf
lock
mov
adc
aad
div
pushf
push
cld
dec
mov
and
pop
jne
test
xor
or
stos
(bad)
lock
enter
mov
mov
sbb
gs
rcl
and
xchg
push
push
xchg
movs
xor
leave
sub
sbb
push
push
and
inc
add
iret
inc
cs
pop
mov
stos
sbb
push
outs
lods
push
ins
or
les
cmc
cli
rol
sub
push
cmp
fs
cmps
es
cmc
inc
idiv
or
or
gs
jnp
dec
enter
clc
call
jbe
test
push
pop
inc
rol
je
adc
jp
cmp
stos
mov
test
cmp
mov
cmps
inc
in
aam
mov
xchg
cs
daa
adc
mov
xor
cmp
mov
pop
sbb
adc
stos
sub
aaa
push
pop
cmp
jecxz
fbstp
out
loopne
stos
outs
and
movs
push
and
mov
sbb
xacquire
sbb
add
cmp
rol
or
lods
or
mov
nop
and
retf
mov
and
mov
mov
dec
mov
mov
pushf
push
mov
lds
cmp
call
test
hlt
das
mov
dec
jb
int3
or
jb
xchg
xchg
and
repz
mov
add
xor
pop
(bad)
xchg
mov
movs
fs
out
daa
lods
mov
div
jge
inc
sub
imul
gs
push
xor
or
xchg
push
sbb
aas
in
mov
push
jne
cmp
shl
fwait
jecxz
and
out
pop
imul
stos
pop
push
cmp
push
ja
add
push
imul
inc
das
fadd
push
dec
sub
rcl
(bad)
or
retf
jns
inc
adc
and
cld
mov
neg
jb
dec
fcomi
pop
and
cli
mov
cwde
jecxz
sbb
rol
movs
push
mov
stos
in
dec
jo
stc
scas
cmp
lahf
in
pusha
sbb
int3
enter
mov
(bad)
(bad)
(bad)
arpl
cmp
mov
sub
fild
push
(bad)
push
retf
lods
outs
out
sub
shl
aam
mov
dec
stos
xor
fst
inc
rcr
lds
or
push
in
pop
push
push
pop
adc
cmps
xor
(bad)
sub
or
ret
inc
cmps
push
inc
sbb
pop
out
sub
mov
fwait
loop
pop
pop
test
sub
fild
outs
mov
mov
sub
stc
popf
and
rol
loopne
xchg
adc
test
icebp
adc
test
mov
pushf
(bad)
pop
mov
cld
push
dec
push
pop
sbb
xor
add
dec
int
into
aad
or
mov
sahf
adc
int
push
fcomi
ins
retf
push
pop
aam
imul
adc
xor
xchg
cmp
ds
(bad)
fidivr
sub
mov
inc
sbb
aam
in
retf
cmp
add
je
jnp
call
lds
sub
scas
mov
or
and
daa
pop
cwde
adc
inc
(bad)
jnp
adc
cmp
push
mov
imul
and
shl
(bad)
in
rcr
pusha
dec
fdivr
mov
rol
xor
mov
or
fistp
mov
movs
fisub
inc
sti
test
add
jp
lds
jl
clc
jns
nop
add
sar
sbb
sbb
xchg
dec
push
push
pusha
dec
leave
les
sub
test
cs
jnp
adc
mov
clc
adc
push
int3
xor
inc
jo
adc
jg
inc
imul
jnp
fisub
pop
pop
je
jae
mov
cmp
test
test
clc
xor
ret
nop
sub
cdq
(bad)
in
mov
inc
nop
repz
xchg
out
movs
mov
(bad)
cmp
fldcw
inc
pandn
pop
pop
jecxz
mov
and
mov
fs
jnp
popa
gs
cmps
fadd
fistp
adc
inc
push
call
sahf
pinsrw
enter
ret
mov
cmp
outs
mov
pop
push
(bad)
jmp
out
clc
cmps
scas
mov
inc
call
or
mov
lods
mov
dec
shl
cmp
leave
ror
push
sar
lock
pop
dec
lods
xchg
retf
pop
push
daa
and
jae
dec
add
or
scas
scas
mov
daa
cmp
mov
add
adc
(bad)
jnp
out
dec
out
or
cmp
(bad)
pop
mov
sti
inc
push
pop
inc
jmp
mov
outs
sar
or
sti
mov
cmp
mov
ret
mov
jo
retf
mov
dec
pop
jne
jecxz
mov
lock
das
je
das
and
outs
sub
repnz
mov
add
scas
adc
cli
punpckhbw
fidiv
mov
loopne
push
std
or
imul
mov
test
xor
mov
xor
mov
xlat
lahf
add
push
mov
mov
sahf
inc
aam
push
sbb
xor
or
(bad)
clc
cmps
pop
mov
loope
mov
mov
jp
jge
sbb
pop
mov
repz
mov
fwait
scas
sbb
call
hlt
jecxz
data16
jl
inc
or
mov
dec
mov
jge
fcomp
dec
push
inc
icebp
fidivr
lods
arpl
in
mov
mov
push
es
and
ds
in
mov
(bad)
adc
inc
mov
pop
sub
test
shl
into
mov
xchg
nop
rol
jne
cmp
mov
outs
fcom
jge
leave
mov
out
arpl
cmp
dec
dec
jb
cld
lods
(bad)
popa
pop
jns
shr
fist
sub
xchg
cld
add
mov
pop
sub
and
jge
xor
rcl
pop
cwde
sub
xor
scas
or
xor
imul
dec
adc
div
dec
jo
call
arpl
jbe
sbb
jg
enter
sub
fcom
mov
ds
dec
cmc
aas
mov
xor
and
stc
repz
jnp
in
loop
test
xchg
dec
sub
sti
fisub
pop
sub
adc
(bad)
sbb
mov
mov
cwde
imul
out
test
aad
pusha
clc
test
faddp
jmp
lds
or
mov
fadd
push
pop
outs
xchg
push
ja
stc
pop
fwait
mov
and
mov
stos
mov
fdiv
sub
test
jecxz
mov
sub
push
test
sbb
cmps
inc
dec
mov
(bad)
push
popa
jmp
sbb
jmp
dec
arpl
cmp
dec
push
xchg
cdq
jae
fisttp
and
push
xchg
add
mov
adc
cli
jmp
popa
ficomp
cmp
push
lds
xor
cmc
sub
add
add
fmul
adc
push
js
pop
mov
sar
and
inc
and
aas
shl
sub
je
cs
jmp
add
arpl
das
rcl
(bad)
mov
aaa
aad
repz
mov
sub
inc
test
pop
scas
jmp
or
sti
mov
das
es
jmp
movs
je
mov
fwait
in
in
push
lea
and
add
rcl
and
add
mov
scas
das
in
ja
mov
ret
xchg
and
push
sub
test
fbld
psrld
add
adc
(bad)
fcmovnu
push
xor
xchg
xor
cmp
int3
in
pop
cmp
cmp
test
inc
xchg
ins
add
dec
inc
cld
mov
mov
shr
jb
sub
jae
retf
aam
shl
dec
ja
pop
xchg
shr
jmp
or
ficomp
add
ror
dec
and
mov
xchg
pop
mov
and
out
arpl
xor
add
ret
mov
inc
jno
test
jae
inc
xor
dec
stc
in
mov
aam
xchg
aas
stc
pop
daa
out
xor
cld
test
mov
div
shl
mov
cmp
jle
mov
xchg
push
pop
sar
lea
movs
stos
scas
in
pop
sbb
pop
push
imul
or
cli
and
mov
mov
cmp
into
cmp
mov
bound
add
retf
cld
mov
dec
mov
jmp
bswap
sub
mov
jmp
int
mov
jns
xchg
repz
fild
cmp
loop
aas
(bad)
jae
pushf
(bad)
popa
push
in
scas
jp
in
sub
in
fidiv
adc
lods
jge
leave
mov
mov
or
inc
aaa
adc
jmp
rcl
fldenv
clc
or
or
out
ja
inc
mov
sahf
dec
outs
call
ror
cmc
aad
lods
scas
mov
pop
imul
lods
xor
jo
clc
sbb
xchg
movs
pop
(bad)
popa
aas
test
and
cmp
jae
xchg
test
je
mov
inc
mov
fild
or
movs
push
pop
ret
retf
cmp
loope
jae
sar
mul
(bad)
sub
jno
mov
cmp
adc
push
movs
test
mov
mov
xor
clc
rol
push
cld
push
cmp
jo
imul
icebp
out
mov
(bad)
sahf
fcomip
jmp
enter
retf
pop
adc
pop
in
mov
push
test
inc
jl
add
rcl
retf
sbb
sub
aas
pop
in
and
sub
mov
(bad)
or
and
sbb
aad
shl
and
xor
mov
test
sbb
inc
pop
out
push
in
hlt
aam
jmp
rcl
mov
jmp
adc
jne
mov
mov
stos
cmp
sub
ins
pop
rcl
mov
mov
mov
pusha
mov
ins
cdq
ds
(bad)
xchg
jle
add
push
fld
ja
ds
mov
xlat
shl
adc
xor
xchg
sub
inc
mov
leave
cmp
mov
pop
xchg
pop
push
test
push
cli
mov
xchg
ret
push
pop
cmp
mov
push
(bad)
rcl
cmp
adc
movs
(bad)
stc
cs
mov
outs
fmul
and
outs
popf
push
shl
push
adc
push
mov
stos
je
or
leave
cs
xor
lods
xchg
push
mov
dec
sti
add
inc
ins
add
ins
add
hlt
cmps
out
or
test
rol
and
arpl
inc
int3
jle
out
sbb
push
inc
pop
mov
les
or
je
fdivr
sahf
fwait
add
dec
shl
das
pop
stos
inc
out
xchg
add
mov
push
push
movs
or
jmp
add
jge
push
adc
mov
jne
push
adc
ret
jle
sub
aaa
inc
dec
les
aam
dec
mov
and
mov
mov
cmps
sub
ficom
ins
push
enter
sbb
mov
xlat
push
inc
push
pushf
jmp
test
adc
sbb
ret
jno
inc
add
rcl
data16
sbb
add
test
cmp
jb
inc
mov
cmp
stos
pop
aad
leave
push
jmp
je
push
repnz
popa
pop
dec
mov
cli
loope
push
jnp
loop
fadd
mov
push
xchg
in
mov
lds
mov
pop
cmps
adc
push
lock
shl
pop
mov
sbb
mov
sub
jae
push
cmps
mov
loope
jbe
push
sbb
jle
jle
xor
data16
mov
sub
push
mov
std
dec
repz
lods
cwde
pop
scas
fisttp
loope
jne
(bad)
popa
out
clc
dec
loop
dec
or
and
add
pop
pop
sub
adc
int
sub
test
jl
add
in
jmp
call
pop
jne
jae
ret
jge
sbb
jnp
loopne
add
je
mov
int3
cmps
or
inc
scas
repnz
ss
sbb
and
cmp
pop
push
xchg
dec
out
mov
mov
mov
xchg
adc
sbb
pop
in
and
nop
ins
rcr
push
pushf
lods
cmps
inc
pushf
sbb
inc
scas
xor
les
push
dec
mov
mov
inc
pop
cmps
ins
ror
lods
out
fild
mov
das
call
xchg
bound
ret
xchg
rcr
pop
dec
in
repz
shl
push
push
cwde
cdq
cld
es
xor
and
dec
cmp
dec
sub
fwait
jo
loop
and
fdivr
push
push
push
stc
test
fucom
leave
or
repnz
xchg
sub
push
mov
sub
xlat
jp
aaa
mov
adc
xchg
add
mov
sub
nop
popf
mov
pop
inc
fnstcw
add
aam
xchg
pop
xchg
pop
mov
mov
cli
(bad)
sbb
imul
sbb
dec
dec
mov
adc
mov
imul
xor
sbb
aaa
call
mul
mov
enter
or
mov
aam
in
xor
and
jl
jg
into
pusha
and
jo
sbb
sub
mov
(bad)
mov
jmp
cmp
sub
stos
outs
push
gs
shl
push
mov
jae
adc
jbe
xor
mov
jns
iret
(bad)
shl
gs
pusha
xor
jmp
pop
mov
cs
sub
fnstcw
sahf
(bad)
inc
pushf
lods
adc
adc
or
call
sub
cmps
cmp
mov
sbb
sbb
sub
addr16
pop
inc
sub
inc
sub
loope
sar
pusha
and
add
sbb
jbe
in
movs
mov
test
test
jge
push
sar
jmp
scas
sbb
jne
sbb
in
mov
xor
mov
lahf
adc
push
(bad)
push
sbb
call
test
mov
stc
test
mov
test
leave
push
das
xchg
inc
push
mov
imul
loope
enter
dec
sub
sbb
bound
sbb
es
jno
mov
push
push
jle
mov
or
cmp
mov
daa
mov
imul
jl
rcl
pop
jecxz
outs
jecxz
push
inc
push
xor
popa
fild
mov
add
jge
lahf
inc
and
xor
call
pop
les
int3
out
xchg
inc
sbb
mov
adc
pushf
mov
xchg
sahf
les
or
xor
imul
mov
lods
call
add
lea
mov
loope
push
xchg
scas
inc
dec
push
jl
pop
ss
(bad)
test
ins
add
popf
(bad)
sbb
or
mov
rol
mov
push
xchg
dec
xor
int
call
loopne
cmp
iret
mov
jg
or
int3
pop
dec
fild
gs
mov
dec
adc
pop
cmc
call
xchg
xor
int3
xchg
pop
outs
or
call
mov
mov
sub
mov
xor
in
cs
shl
dec
je
sub
addr16
sahf
mov
fisttp
or
repz
(bad)
jl
pop
adc
and
dec
mov
scas
sti
cli
test
retf
add
jnp
push
mov
into
jno
hlt
mov
fstp
xchg
enter
sub
lods
xor
or
mov
in
retf
pop
jne
gs
cmp
mov
and
stos
push
cmp
movzx
addr16
ret
jmp
lock
icebp
cdq
aad
out
nop
fcomp
mov
call
inc
mov
js
mov
mov
fstp
pop
jl
adc
es
aaa
jbe
fimul
das
ss
adc
or
jne
dec
sbb
fs
test
fistp
mov
mov
and
cmp
sbb
or
inc
mov
jmp
ror
adc
add
pop
imul
and
and
mov
fimul
repz
js
mov
das
cli
sub
stos
push
sbb
pop
add
sub
or
mov
xchg
jge
cli
xchg
push
inc
cli
movs
sbb
imul
ins
push
inc
jne
dec
inc
push
mov
cdq
bound
mov
xchg
and
call
or
sub
popf
xor
push
rcr
movs
inc
and
in
in
pop
dec
movs
fist
test
jle
mov
pop
add
dec
sbb
mov
add
dec
ror
mov
mov
and
mov
push
out
mov
enter
add
fiadd
push
and
les
add
mov
push
xor
pop
clc
cld
retf
out
popf
adc
mov
sub
inc
call
punpckhbw
mov
hlt
xchg
ss
std
xchg
cmc
imul
ror
lock
out
cmp
popa
out
xlat
arpl
lahf
loopne
pop
add
pop
mov
xchg
jle
sbb
rol
(bad)
adc
or
nop
fisubr
mov
and
cmps
cwde
sbb
lods
pop
sbb
sub
and
rol
movs
adc
iret
ret
xor
in
push
mov
mov
push
dec
adc
cmp
into
xor
push
push
ins
repnz
hlt
sub
pop
repz
cwde
rcl
in
fist
inc
in
push
mov
sub
(bad)
cwde
je
cmp
in
xchg
inc
sub
mov
in
faddp
mov
fidiv
or
addr16
sub
xchg
scas
adc
jle
mov
rol
fistp
fstp
inc
add
push
cmp
ror
or
mov
pop
ror
mov
ja
pop
pop
push
cmp
fsubp
out
jmp
movs
mov
sbb
js
shl
push
idiv
outs
dec
xchg
imul
dec
mov
xor
jge
fstp
inc
fwait
xchg
addr16
scas
inc
and
add
sub
imul
inc
lock
push
lods
lea
shl
and
ss
xor
pop
dec
cs
or
pop
imul
pop
pushf
ja
in
inc
xlat
inc
loopne
imul
rol
push
push
or
add
add
mov
mov
add
dec
dec
call
repz
push
and
ss
imul
fstp
push
add
popf
int
nop
xor
adc
jns
fisttp
aad
int
mov
add
push
jmp
lahf
jns
xor
lea
ret
inc
dec
out
ror
mov
ss
pop
sub
neg
pop
inc
dec
jl
dec
fistp
cmp
shl
cdq
pop
mov
into
jno
cmp
ret
cmp
inc
cmps
fist
sbb
cld
fistp
clc
mov
add
cwde
cmps
retf
ror
pushf
in
mov
jl
data16
push
popf
sbb
cwde
mov
cld
fwait
and
cdq
mov
xor
jne
jae
jb
push
fs
cmp
mov
sahf
and
add
and
add
push
pop
and
lock
hlt
adc
xlat
and
aas
push
dec
jnp
aam
fucomi
fistp
ins
ja
mov
sbb
cmps
call
lahf
sbb
jae
xor
and
push
adc
fucomip
pop
jo
adc
pop
ja
inc
int3
mov
jmp
ins
push
adc
adc
mov
inc
retf
xchg
sub
ds
jmp
mov
pop
in
xor
add
xchg
sbb
repz
test
in
pop
xchg
mov
dec
xor
cwde
das
cwde
cmp
push
fnsave
mov
mov
stos
mov
out
dec
daa
xchg
sub
sub
jl
adc
push
push
inc
shl
mov
sub
pop
out
jg
sbb
cmp
in
out
xor
rol
mov
jne
mov
fstp
inc
mov
(bad)
sub
push
cmp
stos
ins
retf
pop
jmp
push
cmp
push
inc
cmc
inc
xlat
add
leave
add
mov
push
dec
gs
stos
sbb
or
imul
test
mov
add
lods
mov
push
xchg
je
pop
imul
push
in
and
neg
jno
xor
hlt
push
xor
lods
jb
leave
dec
mov
lods
push
mov
or
adc
lods
dec
or
stc
xchg
jecxz
rcr
or
cld
retf
jp
push
ror
inc
adc
mov
mov
xchg
inc
enter
cmp
xchg
or
mov
xchg
idiv
les
xchg
ins
cmp
stc
mov
push
and
call
ds
mov
jge
or
popa
into
xchg
fst
les
fistp
rcr
sbb
popf
pop
cmp
(bad)
cmps
ja
and
sahf
mov
sbb
aaa
sub
inc
or
add
jg
fimul
mov
dec
xor
xchg
mov
xor
stos
lahf
rol
push
xchg
jge
mov
and
retf
ss
ds
bnd
adc
inc
dec
and
jne
push
inc
sbb
jbe
stos
xor
push
jns
xchg
adc
bound
mov
inc
inc
icebp
mov
add
movs
xchg
(bad)
and
shl
jno
dec
xchg
dec
lds
hlt
or
out
ss
sub
jecxz
jle
shr
pop
push
fmul
mov
add
mov
inc
jg
xchg
std
(bad)
xor
ret
pop
iret
mov
jg
cmc
pop
aaa
aam
cld
mov
adc
ror
ja
jmp
push
bound
loope
sub
sub
mov
pop
pop
ret
mov
mul
aaa
push
sub
and
xchg
push
movs
test
dec
or
adc
(bad)
mov
add
and
cmp
xor
jmp
inc
shl
pop
sub
mov
pop
mov
jg
cmps
adc
xlat
adc
out
adc
sbb
(bad)
imul
xor
or
inc
and
fild
gs
mov
add
xchg
jnp
jmp
(bad)
and
push
jnp
jecxz
sub
sbb
in
cmp
inc
pop
adc
gs
ror
or
out
call
xchg
sbb
ret
(bad)
call
jae
pusha
pop
pop
mov
les
and
mov
call
dec
mov
jle
xor
retf
xchg
push
sbb
and
xor
jnp
daa
mov
shl
sbb
repnz
ds
mov
cwde
std
cmp
add
xchg
js
mov
sub
inc
dec
mov
ds
out
cmp
adc
xchg
cli
push
inc
fs
sub
adc
js
sbb
adc
aad
mov
xchg
aaa
(bad)
cmp
ins
lds
adc
rcl
mov
cld
jns
cmps
jno
into
xchg
cmps
not
mov
repz
and
adc
sbb
push
fdiv
loop
mov
(bad)
loopne
(bad)
mov
(bad)
out
pushw
ja
or
pushw
xor
lods
dec
je
cmc
xor
clc
int3
cli
xchg
das
sub
mov
out
stc
call
mov
pop
stc
add
arpl
inc
or
es
cs
push
cmp
fldenv
scas
fcomp
fnstsw
inc
cmps
jp
inc
inc
and
dec
add
retf
neg
js
add
popf
adc
sbb
mov
mov
xlat
sbb
into
scas
lods
adc
xchg
leave
jbe
data16
cmp
xor
add
test
cmp
jo
mov
xor
push
push
fs
add
mov
sub
ins
sbb
imul
mov
mov
int
sahf
fxam
sbb
sbb
xor
ja
sub
jbe
jg
popf
xor
push
add
loop
test
jae
and
sbb
push
loope
arpl
cmp
dec
mov
push
push
xchg
and
stos
jmp
les
or
in
jns
das
fsub
hlt
push
test
cmp
sub
sub
mov
mov
jge
and
aaa
push
push
clc
cld
leave
mov
mov
pop
es
mov
in
adc
inc
jl
adc
xchg
push
js
dec
xor
adc
aam
aad
jo
in
or
test
fidivr
ss
xchg
movs
ret
cli
xor
out
(bad)
rol
stos
imul
sub
aam
jne
inc
sub
jl
das
(bad)
xor
inc
in
jecxz
dec
sbb
fcomp
and
inc
aad
mov
mov
lahf
mov
inc
inc
push
rol
pop
cmp
or
ret
sub
ins
jbe
push
nop
ret
xor
cmc
sahf
int
lock
loopne
cmp
arpl
movs
lds
frstor
sbb
(bad)
mov
push
call
(bad)
mov
popf
mov
xchg
test
in
mov
fs
(bad)
mov
outs
pop
idiv
add
xchg
inc
arpl
add
xchg
cli
inc
ins
jle
and
xor
jg
adc
sti
jno
ret
pop
mov
xchg
xchg
(bad)
cli
pop
popf
xchg
ja
pop
pop
aad
inc
sbb
into
jmp
add
mov
jl
jmp
inc
add
ss
cmp
dec
mov
xor
lods
jae
fnstcw
xchg
lods
jne
psllq
out
out
adc
pop
dec
dec
sbb
inc
dec
or
psllw
push
sub
dec
enter
movs
mov
jb
sahf
rcr
jecxz
popf
sar
pop
jne
jae
inc
dec
stc
fnstsw
frstor
cld
jmp
inc
mov
inc
mov
inc
add
cmp
inc
cmps
add
in
fsubr
pop
push
mov
inc
cmp
sbb
mov
cmp
dec
jmp
mov
jecxz
stos
inc
fmul
scas
scas
push
and
gs
push
call
mov
mov
xchg
out
pop
fsubr
shl
cmp
stc
xchg
push
adc
mov
push
cld
xor
cmp
fcom
xchg
jge
popf
or
scas
add
pusha
mov
adc
frstor
inc
mov
out
add
mov
xor
mov
adc
outs
shl
or
gs
test
lgs
and
and
mov
xchg
call
push
ja
int
jmp
not
sahf
(bad)
stos
cwde
mov
inc
or
aam
movs
ficom
scas
push
push
sbb
mov
(bad)
data16
jmp
lea
ins
mov
stc
and
adc
or
dec
sub
out
imul
pop
pop
loope
repz
(bad)
mov
xchg
lea
and
push
inc
pop
(bad)
push
aas
jmp
adc
mov
cmp
mov
data16
mov
int
dec
mov
dec
pop
dec
mov
mov
add
rcr
mov
inc
movs
and
ja
jecxz
out
jmp
jle
xchg
and
psrld
stos
inc
fmul
cmp
mov
out
and
addr16
and
push
std
ficom
popf
mov
fstp
jo
mov
jg
inc
rcr
pop
push
push
xchg
xchg
aas
mov
xor
mov
mov
add
(bad)
sub
shl
pop
jle
and
and
pusha
mov
shr
(bad)
bound
mov
into
xchg
cdq
popf
lds
jmp
shr
mov
dec
mov
inc
(bad)
mov
dec
jmp
mov
hlt
mov
dec
pop
cli
mov
cmp
mov
jb
loop
stos
push
dec
js
popf
pop
xor
daa
inc
in
sbb
inc
lods
or
arpl
and
or
loop
xor
and
call
mov
call
push
outs
ror
ret
std
les
gs
mov
retf
stos
test
xor
and
or
push
test
inc
pop
mov
mov
xor
ror
mov
shr
fist
pop
add
xchg
inc
push
leave
int3
dec
js
test
mov
iret
inc
popa
cdq
sahf
adc
jnp
mov
jmp
jp
imul
aas
adc
mov
leave
sbb
lods
and
mov
push
retf
mov
inc
call
arpl
sub
call
out
pop
sar
and
xchg
je
sbb
pop
aam
jmp
nop
dec
mov
inc
add
mov
sbb
retf
cmps
and
jmp
adc
adc
jg
iret
mov
push
mov
dec
(bad)
jnp
hlt
add
loope
loop
in
xchg
pop
xor
mov
xor
cmps
fst
(bad)
mov
lock
out
rcr
(bad)
out
dec
push
mov
rol
les
push
pop
push
mov
inc
enter
pop
fsubr
mov
repnz
addr16
jns
cmp
aam
pushf
push
leave
aas
cmp
lahf
or
iret
push
arpl
jmp
lods
sbb
(bad)
dec
iret
inc
mov
aaa
cmp
xchg
test
and
in
dec
lds
loope
push
xchg
mov
icebp
mov
sbb
leave
xchg
imul
push
rol
cmp
test
mov
jno
(bad)
jecxz
js
mov
mov
cmp
ret
jecxz
mov
repz
add
je
in
sub
xlat
add
scas
(bad)
jo
jmp
xor
cmp
gs
ins
fs
mov
add
mov
mov
xor
test
xor
inc
fisttp
cs
add
ins
inc
xchg
fadd
pop
aaa
loope
inc
mov
idiv
jns
loopne
outs
and
sbb
das
ins
adc
fwait
dec
jbe
repz
aad
(bad)
inc
adc
mov
push
mov
pmulhw
xchg
jb
cmps
xchg
leave
dec
popf
mov
outs
mov
dec
mov
mov
mov
mov
ss
inc
es
sub
dec
(bad)
push
pop
ja
pop
mov
je
jg
mov
push
jno
jg
mov
mov
pushf
mov
dec
sbb
ror
or
push
test
push
sub
cmp
hlt
imul
arpl
aas
cmp
pop
mov
add
xchg
jne
int
cmp
push
xchg
pop
(bad)
jno
mov
outs
popf
sub
loopne
xchg
push
ja
fmul
xchg
add
scas
fsub
mov
sub
adc
jmp
in
mov
mov
inc
sub
xor
mov
icebp
inc
sbb
fidiv
sub
add
push
mov
aaa
jne
jge
aam
cmp
or
jo
in
or
fimul
imul
loope
outs
xchg
pop
loopne
sbb
iret
(bad)
in
sbb
push
xor
pop
pop
cmp
xor
(bad)
cld
cmps
cwde
scas
je
push
or
into
loope
jge
inc
sub
pushf
(bad)
ja
inc
enter
int
enter
adc
mov
dec
sar
add
mov
aas
ret
je
sbb
stc
imul
push
inc
cmps
push
jge
push
lods
jbe
out
sub
sbb
xlat
sbb
iret
test
mov
or
outs
mov
xor
and
pop
(bad)
mov
test
jg
pop
in
mov
mov
xchg
sbb
jmp
test
imul
cdq
fstp
xor
pop
leave
inc
jo
jg
sub
sub
push
sub
pop
pop
jae
add
clc
cmovs
pop
adc
fisubr
ret
sub
fmul
aaa
nop
push
inc
aad
(bad)
mov
aam
xchg
add
add
hlt
ds
push
cli
add
fisub
inc
dec
dec
aas
xacquire
mov
cmp
mov
pop
jbe
mov
sahf
sbb
lods
dec
pushf
pop
mov
out
movs
scas
es
iret
sub
ror
and
push
and
mov
(bad)
(bad)
lods
es
adc
iret
mov
rcl
test
sbb
pop
sub
test
clc
rcl
adc
rcl
jns
inc
sti
xor
jge
lahf
in
mov
pop
pop
dec
dec
jno
push
or
(bad)
out
out
popf
dec
or
(bad)
jmp
adc
sub
adc
mov
mov
(bad)
repnz
mov
sbb
inc
and
mov
jo
mov
adc
jnp
ss
or
jae
call
add
nop
imul
aas
movs
movs
cmp
xor
mov
inc
push
add
ins
push
fimul
lods
aam
mov
popf
ins
pop
add
(bad)
jmp
sub
stc
sbb
cmp
jl
lods
sbb
es
stc
mov
div
cmps
dec
aam
(bad)
rcr
sbb
or
pop
xchg
inc
push
mov
cwde
shl
scas
cmp
xchg
xchg
inc
inc
sub
sar
std
dec
js
sub
push
xchg
cmp
mov
mov
xchg
inc
mov
retf
lea
outs
test
sub
(bad)
and
inc
xchg
jns
mov
xchg
or
sub
or
dec
push
test
pusha
push
cwde
loopne
fcom
pop
sar
cmp
loope
push
and
mov
xor
fdiv
in
pop
adc
popf
stos
adc
and
jge
xchg
and
and
loop
pop
mov
fs
dec
pop
and
not
fisub
movs
xor
and
lods
aam
pop
fidiv
fdiv
pop
xchg
imul
stos
mov
jmp
jmp
mov
or
fisttp
xchg
jno
xchg
push
(bad)
popa
aaa
jg
leave
cmps
add
pop
cli
push
(bad)
fisub
dec
push
bnd
xchg
fld
adc
inc
fimul
mov
stos
or
call
scas
jae
das
cmps
xchg
gs
sub
add
sbb
adc
ret
imul
stos
inc
shr
pop
mov
and
hlt
and
push
pop
mov
stos
(bad)
inc
push
aad
movs
mov
or
dec
jae
rol
jo
mov
ja
cmc
mov
clc
xchg
mov
sbb
cmp
mov
fs
inc
dec
pusha
xlat
lods
(bad)
sar
xor
and
out
hlt
retf
dec
addr16
ror
sbb
xchg
sub
pop
repnz
xchg
adc
retf
and
sub
repz
cmc
shr
mov
add
or
mov
jno
aad
out
pop
adc
daa
sbb
shl
dec
fistp
push
arpl
retf
retf
lock
mov
addr16
jmp
stos
adc
xor
out
fcmovbe
daa
or
shl
aad
pop
in
add
fsubr
sbb
pushf
icebp
test
shl
mov
jp
inc
jmp
sti
cmp
aad
push
jnp
jecxz
sti
push
sahf
cdq
xor
test
lods
test
daa
xchg
repz
mov
mov
aad
out
xor
add
xchg
stos
mov
mov
cmps
jle
retf
push
jmp
push
jle
(bad)
adc
in
mov
jl
inc
leave
mov
mov
or
add
mov
(bad)
mov
cmps
mov
nop
fcom
sbb
aaa
pop
jno
xor
enter
std
in
neg
xchg
(bad)
scas
adc
jnp
test
mov
xor
cmp
adc
jmp
gs
jne
pop
push
scas
jae
fcmovu
or
dec
xor
pop
lock
ror
xor
test
shl
cli
jge
cwde
mov
movs
fadd
xchg
xchg
mov
daa
and
cld
adc
inc
mov
aam
mov
test
sub
ret
loopne
push
idiv
in
mov
dec
pop
and
(bad)
sub
xor
xor
push
sti
loop
(bad)
retf
test
pop
push
(bad)
dec
mov
mov
adc
outs
xchg
inc
or
div
sub
push
add
jo
dec
les
movs
in
(bad)
fwait
push
ja
call
movs
xchg
bound
push
sub
add
sub
pop
jmp
iret
(bad)
(bad)
daa
inc
sub
iret
add
test
or
inc
pop
cld
test
lods
xchg
add
xchg
xchg
call
dec
imul
inc
jne
mov
(bad)
add
or
les
push
push
mov
fdivr
jmp
push
dec
outs
lar
addr16
jmp
sub
cwde
dec
ja
xchg
push
xor
test
aaa
(bad)
fucomip
repz
fucomi
and
out
mov
or
push
jns
aad
loopne
cmp
jecxz
cmc
aas
xchg
dec
movs
pop
sub
sahf
hlt
mov
int3
test
(bad)
adc
cmc
dec
icebp
popf
inc
xchg
xchg
cmc
add
mov
retf
loopne
and
dec
add
nop
ds
cmps
mov
dec
retf
fadd
ror
push
xor
xchg
sar
xor
sub
pop
ret
sbb
xor
and
add
push
(bad)
js
je
and
push
add
idiv
adc
jle
mov
mov
xor
lea
xor
push
ss
stos
push
add
movs
pop
(bad)
sbb
ins
lahf
jge
jg
dec
sbb
ud1
adc
out
cmps
dec
retf
in
push
enter
aaa
push
pop
mov
xor
add
dec
mov
adc
and
popf
repz
dec
pop
xchg
ins
mov
sub
push
pop
inc
and
push
in
aaa
pop
and
js
movs
pop
push
dec
cmp
jbe
and
pop
push
or
out
je
xor
rcl
loop
aas
scas
fidivr
pop
imul
mov
xor
inc
repz
push
sbb
cdq
pusha
jmp
loope
push
push
jo
push
mov
pop
mov
inc
stc
ret
cmp
jae
pusha
or
test
jo
dec
inc
xchg
xlat
mov
jmp
push
(bad)
int
cli
pop
clc
rcr
inc
inc
ror
imul
mov
retf
inc
sbb
add
mov
out
mov
das
sahf
add
xor
mov
inc
out
cli
inc
add
or
(bad)
push
cmp
inc
jbe
add
out
les
popf
cwde
gs
gs
scas
(bad)
dec
loopne
fucomi
push
pop
mov
cmp
scas
inc
sub
loope
mov
pop
jns
mov
dec
xchg
push
loopne
xchg
mov
jl
sub
enter
xor
ret
push
pop
and
imul
out
out
push
call
xchg
popf
push
push
(bad)
into
sbb
stos
mov
cli
add
push
loop
stos
dec
jmp
(bad)
cmp
xlat
leave
xchg
out
(bad)
movs
fs
jmp
sub
mov
dec
aaa
cwde
rol
mov
adc
pop
push
(bad)
mov
mov
mov
sbb
(bad)
js
cmp
sbb
in
fucomp
inc
or
iret
div
push
or
jae
inc
jnp
fs
mov
sbb
ficom
cmp
xchg
loop
push
mov
jmp
sub
or
pop
ss
cmp
add
add
or
cwde
pop
aaa
(bad)
jmp
jno
leave
ss
gs
jnp
out
xchg
(bad)
pusha
lahf
fadd
es
scas
cld
popa
movs
xchg
jecxz
sbb
cli
or
int3
lods
jmp
jecxz
cmp
and
je
adc
add
setle
gs
daa
(bad)
xchg
rcl
inc
jle
fwait
(bad)
push
dec
aas
cmp
ss
test
(bad)
pop
cmp
fadd
mov
inc
jns
jp
pop
cmp
adc
dec
shr
aas
(bad)
js
addr16
test
sbb
sub
dec
mov
test
jp
xchg
test
and
mov
pop
push
fst
in
addr16
inc
ret
jbe
sti
add
jmp
ror
dec
out
adc
xlat
inc
(bad)
in
not
retf
test
fisttp
in
mov
aam
push
and
inc
adc
ret
sbb
sub
mov
jne
mov
push
in
stc
cmc
(bad)
pop
lods
in
cmp
pop
retf
pop
or
mov
les
mov
lea
fild
bound
jb
imul
scas
mov
or
and
ret
shr
push
jge
sahf
add
and
jns
jg
stos
out
or
and
test
fld
sub
inc
or
xchg
(bad)
mov
push
xchg
sahf
cmp
mov
cmp
repz
iret
(bad)
lods
xchg
div
inc
cmp
push
add
jnp
(bad)
inc
ret
or
mov
fild
js
arpl
les
les
jg
shr
popf
xor
leave
mov
fldcw
push
mov
pop
int3
out
dec
jecxz
pushf
inc
fist
inc
mov
push
arpl
xchg
pop
pop
and
lea
jb
cli
repz
adc
inc
dec
push
sub
inc
and
loope
or
pop
dec
and
dec
and
and
into
neg
out
sub
push
mov
movs
jle
je
retf
adc
or
clc
push
xchg
fidivr
daa
pop
loope
mov
sub
call
xchg
xor
cmp
stos
pop
(bad)
(bad)
mov
jo
test
mov
lods
lods
sti
sub
mov
dec
jne
mov
push
sbb
xchg
xor
xchg
mov
push
(bad)
push
mov
sub
jmp
pop
adc
jnp
mov
jecxz
ret
cmps
dec
sbb
xchg
jno
movs
(bad)
out
inc
(bad)
cmc
sbb
sub
pop
not
adc
sbb
inc
jge
icebp
adc
cmp
mov
mov
sub
clc
cld
popf
push
out
add
shl
inc
je
mov
push
pop
mov
daa
and
leave
mov
retf
ret
daa
dec
inc
push
jno
pop
bnd
stos
cmp
mov
xor
les
mov
dec
gs
repz
and
test
and
or
push
dec
mov
and
inc
out
pushf
lock
jmp
xchg
xor
inc
xor
shr
mov
clc
aad
sub
jne
mov
push
scas
out
movs
jle
cmc
in
stos
imul
(bad)
fisttp
pop
fwait
shl
dec
test
gs
add
sbb
sub
mov
xor
pop
jne
loope
lock
xchg
adc
pop
mov
fsub
repnz
pop
stc
cmp
rol
(bad)
stc
dec
and
sub
stos
mov
and
cs
aad
enter
mov
mov
pop
push
icebp
clc
(bad)
jmp
mov
pop
pop
xchg
(bad)
das
and
add
pop
popa
sbb
mov
and
jne
enter
std
mov
pxor
sub
call
xlat
push
aaa
daa
imul
std
ja
shr
mov
add
dec
dec
shr
pop
cmp
cmp
jg
(bad)
faddp
pusha
mov
(bad)
push
sub
mov
sub
xchg
imul
mov
imul
ret
aaa
mov
mov
in
xchg
xchg
xor
pop
std
or
mov
es
xchg
push
ins
mov
int3
inc
ja
or
test
bound
jae
pop
push
adc
mov
cld
mov
and
int
int
hlt
ins
mov
pusha
arpl
add
cdq
les
cmp
rcl
or
push
clc
inc
loop
inc
adc
std
inc
push
push
mov
pushf
inc
idiv
jecxz
dec
mov
mov
or
(bad)
pop
pop
sub
inc
jae
push
nop
cmp
ins
pop
jp
js
mov
jo
and
adc
adc
pop
pop
xchg
into
xor
cs
mov
add
inc
ja
dec
inc
add
ds
and
out
mov
(bad)
and
iret
add
mov
out
out
jno
das
adc
push
push
jge
add
cld
jle
shr
in
fisttp
xchg
popa
popf
int3
outs
sbb
jmp
arpl
xlat
xchg
push
psrlw
pop
test
outs
and
jne
push
sub
sbb
(bad)
push
jb
shl
fst
or
add
shl
xchg
iret
mov
adc
adc
jnp
pushf
cmps
out
dec
fistp
pop
cmp
cmp
pop
data16
rcr
pop
cmp
pushf
fldl2e
add
fsub
test
das
movs
cmc
jb
movs
sbb
stos
out
dec
mov
scas
mov
mov
inc
xor
dec
lea
sahf
sub
mov
adc
sub
adc
inc
test
and
sub
div
pusha
ficomp
stc
xor
or
shr
ins
pop
push
mov
sub
stos
mov
dec
adc
fsub
sbb
gs
push
in
inc
shl
bnd
xor
jl
jmp
xchg
arpl
cmps
nop
popf
mov
mov
push
jmp
jge
inc
and
ret
pop
mov
inc
add
frstor
pop
add
xor
xchg
inc
mov
or
retf
adc
sub
mov
cmp
shl
add
sub
out
pop
adc
adc
add
popa
inc
repz
or
es
mov
sub
jmp
or
hlt
pop
mov
loop
test
xor
sti
sub
aas
and
xor
jmp
xchg
fistp
mov
and
sub
cmc
adc
scas
test
ret
and
test
cld
aaa
cmp
xchg
shl
mov
stos
inc
jae
leave
jno
mov
xchg
sbb
fistp
(bad)
(bad)
neg
mov
pushf
popf
and
mov
sahf
xchg
jmp
lahf
or
sbb
ret
ds
imul
das
mov
cwde
retf
shr
jecxz
mov
cwde
inc
rol
jmp
pop
(bad)
movs
inc
xlat
cwde
cmp
jmp
ror
jo
(bad)
stc
stos
stc
jo
add
femms
mov
sub
icebp
sbb
push
or
dec
xlat
shl
xor
push
stc
popf
inc
or
add
dec
imul
(bad)
test
adc
nop
retf
push
call
cmp
scas
icebp
out
add
lods
call
cli
inc
jmp
repnz
sar
adc
sahf
mov
movs
mov
stos
popf
pop
leave
add
jo
sbb
sbb
hlt
mov
xor
out
out
pop
sahf
pop
mov
sbb
lods
mov
out
imul
jae
mov
adc
call
out
push
and
or
mov
jge
xor
pop
es
sbb
lahf
(bad)
push
mov
rcr
aad
mov
int3
das
jb
icebp
stos
adc
adc
out
push
das
dec
or
hlt
pop
jb
ret
and
gs
mov
dec
mov
pushf
sbb
or
sbb
xor
stos
push
sub
jl
jp
pop
js
call
inc
(bad)
sti
lods
movs
xor
xchg
out
add
xor
cmp
xor
ror
movs
or
or
jge
jb
add
cmp
cmps
imul
or
jmp
mov
jle
mov
inc
scas
repnz
cmc
ss
xchg
cli
enter
push
push
push
daa
mov
aaa
and
movs
jne
sbb
in
sub
cmps
dec
gs
je
dec
mov
int3
out
lods
leave
and
add
scas
popf
push
(bad)
inc
jns
mov
aam
in
pusha
(bad)
shl
or
les
jg
loop
push
aam
mov
adc
repnz
mov
rcl
addr16
or
mov
jle
xchg
fcomp
cmps
sub
int3
fld
jmp
or
add
lds
cmp
pop
fist
xchg
mov
pop
and
int3
mov
jnp
test
sub
push
pop
(bad)
fisub
and
or
push
xchg
call
bound
xor
shr
sbb
xchg
push
shl
icebp
mov
ja
lea
mov
add
pop
and
add
enter
push
out
in
test
int3
mov
mov
add
cmp
int
pop
or
and
inc
loop
(bad)
rcl
outs
mov
xor
mov
mov
and
ds
xchg
scas
call
pop
xchg
movs
rol
xor
jne
lock
push
pop
dec
ror
pop
mov
pop
mov
adc
jmp
mov
sahf
pop
mov
cmps
adc
push
cmps
gs
jmp
pusha
cmc
mov
dec
(bad)
pop
push
sti
cmp
(bad)
jae
sbb
fldcw
dec
je
pop
dec
into
arpl
mov
push
xchg
cli
sbb
cli
out
jb
shl
cmc
enter
gs
jecxz
and
call
jge
jge
arpl
xchg
call
sbb
mov
mov
lods
pop
aad
popf
fisub
sub
xlat
leave
and
cmp
je
ins
pop
pop
adc
mov
rcr
neg
inc
mov
int3
scas
(bad)
or
out
and
mov
dec
push
gs
sbb
and
push
scas
scas
sub
sti
pop
mov
inc
imul
lds
in
push
(bad)
imul
adc
xchg
mov
ss
daa
sbb
cmp
inc
ss
adc
(bad)
xchg
les
pushf
mov
std
mov
and
push
xor
add
iret
mov
hlt
xchg
sbb
mov
popa
data16
or
test
in
das
into
or
push
adc
and
cmps
push
stc
pop
sub
cs
daa
inc
test
jns
and
out
shl
call
mov
inc
retf
loope
dec
out
cmp
cmp
and
sbb
fdivp
mov
cmps
div
sub
add
in
leave
sbb
xchg
mov
or
and
add
fistp
stos
and
in
loop
(bad)
(bad)
add
test
xor
cld
sbb
lods
xor
out
pop
pop
and
push
mov
test
xor
mov
ret
or
std
aas
jns
stos
bound
pop
inc
scas
data16
in
dec
sbb
(bad)
sbb
or
movs
clc
jle
aam
vunpckhps
xor
loope
dec
(bad)
inc
cld
jmp
out
sbb
sbb
adc
mov
pop
inc
push
ins
sbb
jae
test
push
lock
mov
mov
sbb
push
pusha
mov
mov
ds
das
push
xor
or
sbb
pop
stc
sub
lds
mov
dec
inc
sub
popw
cld
mov
(bad)
sbb
jno
inc
mov
push
push
jo
bnd
jecxz
cmp
xchg
mov
sbb
enter
mov
sbb
mov
dec
pushf
je
sub
xchg
les
add
lock
xchg
out
movs
fs
add
jno
mov
jecxz
lods
int
addr16
mov
xlat
add
stc
pusha
call
idiv
in
mov
rcr
lea
fs
fsubr
cmp
dec
jp
test
inc
shl
push
not
adc
int
cmp
sti
mov
pusha
mov
mov
cli
loopne
or
jmp
mov
fadd
xchg
retf
dec
cld
cwde
xchg
les
cmp
mov
imul
push
mov
jnp
rcl
popf
popfw
bnd
add
test
stos
(bad)
add
pop
das
and
movs
or
imul
es
add
push
stos
and
test
mov
jg
jbe
sub
jle
push
xor
add
xor
movs
cmp
fisubr
jne
or
sub
push
das
repnz
add
mov
sbb
adc
mov
ins
stos
push
jge
movs
cdq
mov
sbb
mov
jp
fcomp
adc
sub
pop
inc
add
xor
sbb
iret
sbb
dec
push
mov
pop
xchg
push
imul
add
aas
sub
nop
(bad)
popf
xchg
jbe
sbb
cmp
fistp
jg
ficomp
fmul
scas
arpl
and
mov
sahf
mov
call
icebp
ror
cwde
xchg
mov
dec
adc
shl
imul
ret
mov
jp
mov
lea
mov
out
mov
push
push
rol
pop
cld
add
je
mov
ins
or
rol
clc
int3
in
shl
inc
fdivr
test
mov
fldcw
mov
mov
dec
clc
sub
lea
fwait
out
fist
loopne
repz
xchg
mov
(bad)
push
shr
(bad)
ja
aad
dec
fdiv
jnp
pandn
call
add
scas
sti
mov
ins
addr16
jns
repnz
mov
adc
inc
les
aad
add
call
iret
or
cdq
imul
pop
scas
cs
inc
and
pop
fsubr
arpl
sub
mov
pop
aaa
test
das
inc
pop
inc
mov
jnp
aad
pushf
pop
ins
(bad)
sahf
(bad)
retf
inc
stc
push
nop
dec
jecxz
push
cmp
pop
test
mov
test
fbld
inc
mov
jp
scas
push
and
jne
adc
call
icebp
push
cmps
movs
push
inc
fnstcw
imul
mov
pop
or
xlat
cwde
hlt
cmp
pop
retf
pop
sahf
in
and
mov
in
push
test
sub
call
jae
add
jmp
retf
fdivr
mov
cmp
cmp
xor
pop
pop
(bad)
js
xchg
and
adc
xchg
js
scas
call
mov
inc
adc
and
lahf
cmps
pop
leave
push
in
popf
sar
push
es
lahf
mov
push
adc
mov
push
mov
iret
cmp
dec
push
cli
mov
cmc
dec
std
popa
stc
adc
cmp
jae
pop
cmp
jmp
mov
neg
jns
cwde
hlt
loope
out
mov
rcr
push
ins
pushf
xchg
sbb
sbb
sbb
adc
dec
add
ja
movs
sbb
or
or
out
adc
call
inc
dec
stos
fild
stos
(bad)
out
test
popa
faddp
xor
pop
and
shr
inc
sbb
retf
and
or
cld
xor
lahf
sub
in
pop
or
push
dec
fidivr
jne
shl
push
mov
push
and
gs
cld
in
pop
cmp
adc
mov
ss
pushf
xlat
mov
repz
loop
pop
pushf
scas
nop
mov
cli
cpuid
call
aaa
je
dec
test
call
bswap
mov
(bad)
jmp
les
daa
mul
sub
xchg
mov
scas
inc
frstpm(287
cs
jmp
pushf
xor
hlt
iret
jo
add
call
push
test
mov
fld
leave
popa
jge
in
test
js
ja
mov
add
arpl
ds
stos
mov
fisubr
lea
addr16
push
inc
inc
int
or
scas
adc
inc
push
cmp
push
(bad)
mov
fldenv
cmc
(bad)
out
fcom
and
sbb
(bad)
mov
xlat
pop
push
cmp
xchg
inc
ds
mov
clc
dec
sub
xor
xchg
xchg
push
cmps
rcl
push
(bad)
mov
pop
sub
jno
sbb
add
mov
sub
dec
gs
mov
pop
add
or
cmp
imul
xchg
inc
add
std
or
xchg
and
inc
(bad)
fcomp
jp
jmp
sbb
xchg
out
jns
dec
or
mov
mov
fsubr
cmp
fidivr
xor
cli
les
addr16
out
pop
pushf
ins
sub
dec
out
mov
ret
(bad)
push
lock
std
mov
adc
or
and
daa
imul
outs
jg
retf
mov
cmp
repz
push
adc
jecxz
add
or
inc
stc
push
pusha
dec
rol
out
xchg
aad
bound
xchg
xchg
mov
fnstenv
in
sub
aad
xor
test
lods
push
das
div
arpl
(bad)
jmp
xchg
call
ds
out
stos
or
shl
iret
outs
fdivr
es
dec
mov
or
cmps
out
cli
add
shl
push
cmp
pushf
scas
scas
movs
add
mov
fldcw
pushf
data16
mov
fcomp
adc
cld
sbb
addr16
ret
dec
fs
lea
inc
inc
ss
pop
xor
xchg
adc
cmp
rol
mov
xor
aaa
out
mov
pushf
and
add
movs
push
fcmove
or
dec
adc
cmp
fcomp
hlt
fidivr
daa
sbb
xchg
out
es
inc
mov
aas
sub
ret
jmp
in
(bad)
and
cmps
bound
mov
gs
mov
adc
ja
adc
icebp
hlt
push
push
jb
cmp
rcpps
and
pusha
(bad)
cmp
sbb
sbb
jne
(bad)
inc
ds
mov
mov
bound
inc
sub
sbb
mov
xchg
add
push
add
cmps
add
mov
inc
sub
bound
retf
lods
and
jge
js
test
shl
cdq
add
push
aad
cmp
mov
nop
popf
(bad)
cmc
mov
mov
ret
push
xchg
imul
dec
repnz
jmp
adc
xor
adc
hlt
lea
adc
cmps
es
lea
adc
fisttp
out
lods
cmc
nop
xchg
jg
sar
repnz
xchg
fldl2e
jns
push
jmp
sbb
(bad)
pop
or
inc
sub
imul
jno
imul
cmps
mov
rol
adc
push
imul
leave
repz
pop
dec
inc
shr
sub
test
(bad)
pusha
push
jg
push
loop
nop
add
addr16
and
or
push
daa
jne
push
cmc
test
out
jecxz
jle
xor
jne
xchg
pop
popa
add
mov
or
popa
aad
retf
in
push
in
bound
fst
mov
jp
xor
cmp
jnp
repz
bnd
scas
(bad)
jno
pop
push
cdq
imul
adc
ror
clc
mov
jecxz
mov
loop
push
cwde
mov
in
gs
jae
adc
das
pop
rol
dec
(bad)
out
popa
push
shl
xchg
sti
push
push
dec
push
xchg
cmps
or
inc
push
and
add
dec
mov
je
sbb
in
jns
bound
dec
aam
cs
mov
mov
push
sub
std
rcl
dec
cwde
lea
hlt
dec
adc
and
je
jle
mov
mov
cmp
(bad)
cwde
cs
push
push
icebp
test
leave
xor
cmps
shr
jle
into
popf
mov
inc
sbb
or
lods
icebp
lock
popf
dec
jnp
and
in
cmp
or
gs
fild
mov
jecxz
retf
push
sbb
mov
sub
xor
shl
repnz
repz
int
into
pop
mov
adc
std
dec
ins
or
fdiv
push
push
(bad)
fcmove
push
or
push
jmp
sub
xor
pushf
movs
arpl
jbe
cmc
xchg
repz
mov
cdq
xor
das
fdivr
jo
cmp
adc
or
push
hlt
mov
stos
inc
stc
sar
pop
sbb
imul
dec
adc
lods
popfw
mov
jmp
out
cmp
daa
push
jae
inc
push
jb
in
or
movs
mov
inc
in
sti
and
xchg
lods
push
jmp
shl
shl
mov
pop
dec
mov
ins
test
sbb
mov
js
ins
inc
das
mov
mov
sub
xchg
push
jmp
scas
fwait
dec
push
mov
sbb
imul
in
movntq
int
xchg
inc
pop
aas
or
loope
pop
pop
or
test
movs
ins
jg
es
aaa
fnstsw
pop
jae
push
mov
pop
adc
leave
pop
xchg
and
retf
or
add
sub
mov
out
mov
xchg
ins
mov
ror
leave
inc
cmp
lds
(bad)
call
cmp
mov
jns
bound
jbe
push
push
lea
mov
fldenv
mov
mov
push
add
xor
rol
mov
and
inc
cmp
out
outs
inc
aad
aas
arpl
cmp
adc
mov
call
test
jge
xchg
jle
cmp
mov
cmp
ins
les
in
aad
scas
inc
cwde
sub
cmps
mov
repnz
call
inc
and
jo
add
outs
iret
cdq
int
inc
lds
push
std
sti
adc
add
sbb
add
cmp
jl
and
popa
adc
add
jecxz
pop
mov
in
dec
es
bound
mov
inc
stc
push
mov
cmp
or
movs
das
or
inc
or
scas
xchg
xor
push
jno
inc
sub
pop
inc
out
out
mov
aaa
pop
dec
into
enter
sub
outs
clc
adc
je
push
ret
ins
xchg
xchg
pop
mov
je
xchg
or
jns
(bad)
mov
aaa
fsubr
hlt
cwde
jl
cmp
mov
add
lods
addr16
jbe
jecxz
fpatan
mov
fwait
dec
retf
pop
sub
sar
sub
aam
mov
aam
lods
mov
ss
stos
xor
mov
jl
and
fsub
jbe
mov
push
lds
jp
sti
mov
sbb
lds
jo
shl
in
or
ficomp
enter
ins
xor
add
inc
(bad)
jle
inc
fisttp
jbe
or
dec
test
adc
jmp
ins
pop
mov
popf
sahf
movs
pushf
push
out
clc
mov
push
and
adc
sub
push
dec
(bad)
pop
xchg
inc
push
les
dec
stos
cs
push
repnz
fucomi
imul
add
and
gs
or
and
push
sub
mov
xor
outs
jge
sub
int
ret
xchg
mov
scas
pop
cmps
jmp
mov
call
cmps
inc
sub
pop
mov
or
(bad)
jae
aas
test
fimul
mov
jbe
fidivr
lods
and
sbb
repnz
mov
mov
pop
inc
ins
pop
movs
cmp
(bad)
pushf
push
pop
sar
sti
cmp
(bad)
in
inc
mov
or
(bad)
adc
adc
xlat
add
cmps
cmp
sub
pop
pop
push
nop
sub
inc
aam
and
cld
jmp
iret
stc
mov
jae
dec
mul
aam
call
mov
mov
jo
xor
fist
sub
xchg
test
adc
add
jge
xor
mov
div
js
sub
retf
and
in
ja
push
adc
push
stos
jecxz
mov
out
mov
popf
adc
aas
push
push
jmp
call
jbe
mov
ja
popa
pop
adc
inc
sti
mov
dec
imul
xor
in
test
lods
hlt
aad
fisubr
sbb
inc
adc
add
inc
cmc
popf
push
xchg
popf
xchg
xchg
cwde
mov
sahf
add
mov
imul
adc
xchg
xor
std
and
jg
and
nop
push
inc
mov
ins
lahf
add
xchg
(bad)
sub
pop
dec
xchg
icebp
jl
jo
cmp
sbb
jge
(bad)
cdq
aaa
push
pop
mov
add
cmp
pop
aaa
fidivr
ret
je
pop
mov
dec
repz
dec
pop
in
hlt
jo
and
ja
fistp
rol
sahf
jmp
movs
int3
xlat
retf
arpl
ins
push
inc
(bad)
mov
pop
lock
fidivr
fisttp
sar
xor
mov
adc
in
pop
sbb
movs
into
adc
ss
div
test
shl
cwde
cli
aas
cmp
and
cdq
mov
ja
mov
pop
inc
or
out
or
std
adc
cmp
in
push
and
jne
call
loop
dec
pop
mov
into
cmp
sar
push
adc
cwde
dec
mov
and
mov
inc
inc
stos
packssdw
add
adc
adc
iret
pop
cmps
push
dec
push
sbb
sub
or
loop
cwde
cwde
retf
sbb
lods
sti
inc
mov
rol
xor
add
test
cmp
in
xchg
pop
or
outs
cdq
adc
cld
mov
mov
daa
sub
mov
fiadd
cmp
jno
cmp
push
pop
mov
xchg
cdq
cs
mov
and
and
daa
mov
mov
pop
inc
cwde
mov
cmp
adc
mov
xchg
cmp
(bad)
pop
and
push
jb
jmp
cmps
add
lods
jecxz
push
cmps
dec
pop
shr
jo
lahf
ins
xchg
xchg
(bad)
and
add
adc
xchg
cmp
ret
mov
mov
fisttp
adc
movs
xchg
pop
std
xchg
jg
pop
cld
pop
inc
mov
fisub
or
shr
jg
push
cmp
xor
cmp
inc
aad
mov
and
fld
clc
sbb
mov
mov
xlat
cdq
popf
popf
or
cld
loop
aas
(bad)
stos
cmp
icebp
stos
add
push
dec
mov
and
jo
xor
mov
xor
jo
aaa
sti
jmp
cmp
bndstx
mov
adc
jmp
mov
xor
jg
dec
call
cmc
push
sub
cmp
test
jnp
fbld
adc
dec
mul
repnz
push
cwde
xchg
(bad)
ds
movs
push
mov
xor
cmp
pop
mov
or
mov
daa
cmc
ss
fnstcw
push
pop
push
adc
mov
dec
dec
fldenv
sbb
pop
fmul
xor
movs
test
js
jmp
xchg
pushf
xor
xchg
dec
das
stos
aam
(bad)
movs
or
pop
imul
inc
or
les
ds
repz
jle
pop
xlat
(bad)
nop
fcomp
and
jg
mov
xchg
stos
imul
dec
cld
adc
or
out
dec
and
xlat
aam
xor
jae
lock
fcmovb
xchg
ins
bound
sbb
pop
enter
push
in
call
shl
retf
in
ja
mov
call
jge
sahf
loopne
fild
in
cmp
mov
dec
stos
popa
jmp
pop
jnp
push
popf
mov
mov
gs
jge
adc
cwde
cdq
mov
xor
cmp
pop
lds
retf
ja
cwde
add
pop
push
ins
adc
xchg
out
cdq
(bad)
cmp
and
sbb
mov
sti
sub
test
sbb
mov
in
jno
mov
xor
sbb
enter
in
mov
push
dec
test
jae
jnp
add
shl
nop
jmp
int3
rol
mov
call
ins
rcr
ffreep
push
jbe
aaa
cmp
jmp
jle
mov
outs
inc
sbb
cmc
push
shl
clc
inc
adc
in
aas
and
jno
push
jnp
je
dec
xor
cmps
xchg
xchg
daa
cmp
mov
add
jo
jns
adc
pushf
imul
cmp
rol
mov
xor
imul
dec
dec
adc
pop
push
enter
sbb
int
jge
sub
sbb
add
nop
pop
jle
sub
(bad)
adc
xor
jo
mov
xchg
adc
(bad)
rcl
add
call
scas
aad
dec
adc
aam
call
and
les
mov
xor
push
fbld
shr
mov
lods
repz
mov
adc
clc
pusha
shr
je
arpl
sub
add
push
mov
and
push
xchg
movs
and
sbb
loopne
cmp
(bad)
sub
xchg
dec
test
jne
push
adc
xchg
or
loopne
xchg
xor
dec
aaa
push
mov
xor
add
mov
or
dec
xor
stos
xchg
mov
pop
cdq
add
icebp
jbe
mov
push
call
jmp
mov
pop
fist
pop
mov
into
test
dec
pop
mov
pop
inc
nop
lds
add
jb
idiv
add
sub
pop
cli
xchg
adc
pop
and
pop
mov
dec
gs
jle
shr
cmp
add
clc
sbb
inc
pop
ins
mov
cmps
fcomp
xlat
rol
test
pop
fadd
cwde
jle
xlat
add
dec
mov
add
shr
je
add
xor
pop
xchg
shl
scas
push
dec
sbb
mov
lea
je
jl
test
cmp
repnz
sub
dec
inc
sbb
dec
or
mov
adc
add
mov
xor
rol
icebp
push
idiv
in
lea
rcr
test
pusha
xchg
sub
add
int
rol
push
sbb
jl
mov
add
and
fs
out
loopne
out
es
or
pop
test
fwait
pop
push
mov
(bad)
cmp
lods
shl
cmp
imul
push
int3
ror
and
mov
sub
jmp
pusha
adc
sbb
cdq
dec
stc
test
add
jbe
jecxz
int
xor
fcmovnb
cld
scas
or
lea
jno
xchg
inc
out
shr
and
sub
pop
repz
dec
scas
sbb
jnp
enter
pop
inc
mov
(bad)
cli
mov
or
or
mov
jmp
aam
push
cmps
and
mov
mov
(bad)
in
adc
add
jp
int
xchg
sub
sub
mov
scas
mov
add
inc
adc
pusha
lahf
(bad)
out
in
aaa
sub
mov
inc
xchg
jno
ins
xchg
ret
push
cdq
xor
jmp
hlt
retf
dec
lock
call
pop
lahf
ffree
pusha
hlt
sub
pop
fbstp
jmp
sbb
sub
pop
push
mov
xlat
jp
das
int
mov
and
cmps
xor
mov
loop
and
jmp
jge
sbb
and
fstp
push
les
push
pop
ror
sub
xchg
jne
test
xchg
xchg
pop
adc
or
dec
or
cmp
inc
add
inc
out
loope
int
sub
fimul
jp
dec
dec
pop
psraw
push
pop
nop
int3
imul
les
xchg
fdivr
cmps
stos
xchg
mov
jbe
(bad)
push
or
mov
pop
cmp
mov
out
cmp
vmaxsd
adc
cmps
adc
mov
retf
dec
push
dec
shl
or
xor
aaa
xor
or
retf
fldln2
add
dec
in
push
cwde
sbb
mov
xlat
cmp
pop
add
and
dec
pop
jle
sahf
hlt
lods
dec
jb
aaa
lahf
cwde
dec
out
in
mov
adc
out
mov
in
pop
jb
mov
push
dec
shl
jle
or
outs
enter
(bad)
jae
in
shr
sbb
popf
jge
fwait
push
push
aas
popa
scas
add
in
jmp
call
into
pop
les
retf
xor
mov
shl
retf
imul
mov
lahf
xor
cmp
stc
mov
cdq
cmps
xchg
shl
and
sbb
stos
dec
sbb
xor
cmp
(bad)
jmp
jae
stos
leave
xchg
and
and
frstor
out
mov
jno
jp
adc
in
xor
push
in
cwde
and
or
lock
into
cmps
fs
std
leave
push
ins
xor
jae
(bad)
mov
push
dec
cld
fldcw
or
sub
cmp
dec
xchg
int
(bad)
fldenv
rcr
add
sub
add
sub
or
test
out
xchg
or
(bad)
pop
daa
or
xchg
push
or
jmp
iret
inc
xor
cmps
sub
sub
adc
(bad)
pusha
xor
or
sub
(bad)
sbb
repz
jmp
sub
mov
push
push
push
push
retf
and
pusha
mov
stc
ret
aas
mov
movs
adc
add
imul
pop
mov
xchg
fld
and
push
mov
bound
push
not
mov
jp
xchg
cmp
xchg
test
out
jb
(bad)
jbe
push
cwde
test
xor
dec
jbe
retf
in
out
sbb
fdivr
bound
add
sub
mov
test
mov
rcr
sti
mov
mov
aaa
call
or
jl
jmp
(bad)
aaa
mov
in
dec
dec
nop
jno
cmp
(bad)
test
(bad)
jmp
cmp
stos
aad
rcl
xcrypt-ecb
cmps
dec
push
scas
or
fwait
or
pusha
and
test
int
jo
adc
sbb
jno
cmp
adc
jo
retf
(bad)
pop
rcr
xchg
fild
cwde
aad
bndldx
mov
push
aaa
stc
mov
dec
je
xor
and
not
push
mov
dec
jecxz
and
pusha
xchg
mov
cs
pushf
pop
jb
test
and
jbe
in
mov
ins
cmp
xchg
cmp
fbstp
pop
inc
mov
jmp
push
fs
mov
sub
or
xchg
cmps
cmc
ins
sbb
adc
pop
lods
jae
lea
je
sbb
push
push
jp
pushf
sub
jno
cwde
popf
arpl
and
in
mov
(bad)
into
dec
cmps
sar
into
push
or
movs
pop
movs
push
call
or
push
in
xchg
imul
test
mov
or
cli
hlt
jp
movs
mov
push
push
mov
and
and
dec
ret
repz
xor
sti
outs
pop
mov
jno
jecxz
jmp
aas
fimul
pop
mov
imul
cmp
adc
adc
ins
in
ror
test
stos
jbe
ret
adc
cmp
stos
push
sahf
gs
xor
mov
dec
sbb
cmp
push
(bad)
mov
shr
in
jge
aad
sti
nop
mov
test
cdq
test
and
mov
lods
dec
jge
jno
repz
leave
mov
std
in
add
adc
push
mov
inc
xor
xor
out
in
sbb
push
sub
inc
call
and
inc
mov
(bad)
and
push
inc
mov
xor
dec
loop
mov
jmp
push
(bad)
dec
out
push
loope
add
or
xlat
rcr
xchg
push
cwde
cs
push
xchg
dec
xor
pop
rcr
pushf
push
(bad)
dec
mov
xor
push
cmps
jge
sbb
inc
dec
repnz
dec
inc
nop
retf
adc
call
hlt
jbe
mov
jle
add
mov
adc
ret
push
jmp
test
call
cmp
push
pop
movs
adc
retf
pop
std
mov
cdq
ror
imul
push
into
inc
jns
out
pop
in
popa
add
or
and
dec
mov
ficom
out
(bad)
jl
pop
sbb
mov
jp
pop
push
mov
lahf
mov
jmp
ins
(bad)
rol
push
shl
dec
daa
std
jg
cmp
mov
out
in
sub
hlt
add
mov
int3
loope
mov
jns
xor
dec
out
sar
sti
and
clc
mov
add
enter
stos
bswap
sahf
jnp
mov
dec
loop
outs
in
add
dec
test
addr16
and
push
xor
xchg
imul
fs
out
and
adc
scas
dec
xchg
lock
dec
fidivr
inc
jecxz
retf
scas
pusha
xchg
les
test
push
xchg
push
xlat
retf
xor
sar
dec
inc
push
ds
fwait
mov
and
aaa
xchg
cwde
jmp
test
or
mov
scas
movs
xchg
xor
sbb
pop
ret
fisub
xchg
mov
jno
mov
enter
mov
xchg
pusha
mov
xchg
cmp
iret
test
aam
in
dec
lea
cmp
into
es
mov
iret
outs
and
je
add
sar
mov
xchg
jg
loope
scas
fdiv
mov
dec
and
icebp
(bad)
jno
iret
cmp
adc
mov
or
sahf
pop
sti
jae
cli
or
jnp
sar
sbb
mov
cmp
imul
or
xor
xchg
pop
xor
shl
aam
mov
scas
xor
sub
int
jo
sbb
outs
dec
xor
addr16
outs
pop
sub
mov
xchg
into
out
ja
stos
mov
and
push
mov
stos
aaa
stos
adc
iret
xor
popa
xchg
call
jle
sbb
ds
add
push
in
(bad)
dec
sub
imul
inc
popf
push
or
cmp
push
mov
adc
pop
lds
imul
push
imul
jp
sub
test
ja
clc
dec
push
xor
xor
dec
ds
mov
daa
stc
add
pop
adc
dec
xchg
outs
xor
icebp
jmp
in
fmul
jo
lahf
out
xchg
pop
sub
inc
dec
xlat
mov
arpl
cwde
add
xchg
or
cmp
add
gs
retf
loopne
add
dec
mov
pushf
daa
push
pop
cmps
gs
jbe
out
sub
(bad)
stos
nop
jg
adc
(bad)
or
inc
pop
xchg
cwde
aad
imul
sub
mov
imul
add
rcr
hlt
ja
pop
cmp
out
and
outs
adc
jp
jmp
jge
repz
cmp
arpl
inc
mov
mov
xor
dec
pop
pop
adc
stc
cli
hlt
out
jmp
inc
jns
add
shl
adc
out
retf
shr
push
add
mov
pop
mov
mov
call
push
cmp
cmp
inc
or
cli
pop
(bad)
movs
fiadd
pop
mov
or
fmul
out
push
stos
add
cld
jno
jge
in
outs
xchg
clc
dec
leave
leave
dec
xor
fist
pop
push
pop
scas
and
cmp
xor
dec
mov
dec
pop
daa
add
mov
mov
shr
cmc
repnz
sub
out
jns
ja
clc
cwde
inc
clc
xchg
fild
sbb
pop
push
pop
movs
xor
pop
sub
hlt
mov
getsec
mov
jbe
iret
inc
ficom
test
(bad)
and
xchg
fsub
test
or
or
jbe
stos
add
or
cmp
add
addr16
xchg
mov
and
push
mov
push
jo
push
adc
ret
push
cwde
sti
lea
sbb
ds
push
jno
xor
mov
fisub
xchg
hlt
(bad)
xchg
cmp
pop
les
lds
and
inc
sbb
pop
and
xchg
addr16
iret
cmp
xchg
scas
pop
jnp
cmp
pop
jbe
xchg
and
sub
fistp
(bad)
ins
push
cld
iret
aam
adc
jmp
lea
sbb
in
add
imul
fadd
mov
js
xchg
(bad)
call
inc
jo
nop
lock
add
or
js
inc
pop
ret
dec
out
ins
bts
gs
sub
or
mov
scas
mov
(bad)
rcl
or
ret
jp
lds
lea
mov
(bad)
aas
fstp
int3
or
xchg
pop
fwait
pop
pusha
gs
or
dec
leave
mov
push
(bad)
xchg
fsubr
js
push
int
call
into
pop
clc
xor
stos
aad
iret
lea
aaa
mov
cmp
add
lea
outs
sub
add
cmp
in
sub
xchg
cs
dec
jno
adc
inc
gs
inc
cmp
cli
or
shl
fwait
test
cdq
cmps
add
add
out
cmp
or
mov
mov
adc
push
xor
scas
outs
push
cmc
sub
cmc
and
dec
xchg
inc
mov
cmp
in
arpl
xor
outs
xchg
jns
push
mov
in
or
push
and
cmp
inc
sbb
add
add
adc
add
adc
add
and
add
adc
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
