push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
unpckhps
mov
ror
cmp
cld
xchg
ds
(bad)
jmp
sahf
test
mov
sub
mov
je
and
or
jmp
mov
aaa
and
jecxz
test
(bad)
fucomp
add
mov
sub
sar
sbb
aad
sbb
add
mov
sub
and
xchg
dec
add
add
cmp
sbb
or
mov
dec
psubd
sbb
add
add
mov
xchg
cs
add
and
je
jmp
adc
jl
jo
in
mov
icebp
xor
xchg
push
add
add
lods
jge
and
add
mov
mov
add
fistp
std
cmp
sub
and
pop
pop
fld
stos
add
add
test
push
add
adc
inc
and
mov
add
fild
jne
xchg
mov
fld
and
arpl
add
and
sub
push
test
mov
inc
pop
jp
add
mov
test
mov
push
(bad)
sbb
add
add
xor
sub
je
and
jb
xor
mov
add
shl
sar
sgdtd
add
jne
aad
xchg
mov
mov
test
add
dec
test
add
add
mov
add
mov
mov
loopne
or
inc
jne
repz
add
mov
mov
mov
rcl
jl
add
add
jp
adc
inc
and
jmp
imul
stos
pop
mov
call
std
fmul
cmp
mov
mov
and
cmp
push
inc
push
shl
add
add
mov
xchg
push
and
cmp
movs
inc
rol
lods
adc
adc
add
mov
stos
shl
sbb
in
call
add
mov
aaa
pop
fmul
mov
ins
fst
add
mov
add
jne
add
mov
mov
arpl
adc
enter
movs
jnp
dec
cdq
add
inc
and
jno
ss
sbb
mov
mov
mov
mov
add
das
add
add
rol
pop
pusha
mov
jmp
cmp
pusha
clc
mov
inc
pop
cmps
lock
jmp
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
(bad)
mov
mov
scas
mov
and
pop
add
or
arpl
gs
pop
add
xor
int
and
jge
add
test
loop
retf
add
icebp
mov
add
jmp
lahf
mov
pop
sbb
lods
jmp
(bad)
and
mov
fdivr
scas
add
scas
ins
add
and
dec
adc
jmp
mov
ins
jg
jmp
iret
cmp
mov
ins
jle
mov
push
add
add
inc
and
and
fcomp
fs
add
mov
sub
mov
icebp
add
xlat
pop
scas
add
test
jae
jne
call
lea
out
add
addr16
aam
cdq
and
sub
inc
inc
and
je
test
jle
sub
dec
inc
ret
inc
push
add
sbb
inc
add
jmp
jnp
xor
scas
add
ins
add
xchg
mov
arpl
add
mov
push
jl
mov
push
inc
dec
imul
xlat
or
mov
and
mov
add
add
mov
jmp
mov
(bad)
cmp
mov
inc
(bad)
add
mov
stc
mov
mov
add
jecxz
add
pushf
add
out
mov
mov
add
mov
(bad)
xchg
lock
add
push
and
mov
movs
mov
call
mov
lea
mov
mov
popf
inc
and
xchg
or
add
ret
cmp
dec
inc
out
cmp
movs
add
push
rcr
add
push
xor
and
add
xlat
mov
mov
adc
add
add
mov
dec
(bad)
add
mov
mov
and
add
ret
mov
fistp
cs
add
add
xchg
mov
pushf
add
popa
mov
sub
mov
push
pushf
pusha
out
or
add
ins
add
adc
cmp
mov
mov
mov
mov
call
mov
shl
mov
mov
call
add
push
add
call
mov
xchg
lods
(bad)
mov
daa
leave
and
mov
pushf
or
mov
mov
gs
and
ret
ss
retf
add
lea
mov
cmps
fldcw
add
and
(bad)
add
add
dec
stos
enter
add
mov
mov
add
mov
cwde
add
(bad)
fldcw
add
xchg
lock
dec
and
xor
std
or
add
popf
and
add
ret
mov
lods
test
push
inc
jle
mov
sub
add
push
and
add
mov
lock
mov
enter
mov
imul
add
add
xor
jle
lahf
or
dec
xor
mov
mov
outs
mov
sub
and
add
add
jmp
add
add
inc
mov
cdq
add
xlat
mov
sub
mov
and
pop
add
xchg
jecxz
in
addr16
aad
int
sub
imul
mov
ret
pop
dec
sub
add
add
add
out
mov
inc
add
add
add
rol
mov
adc
fwait
in
loopne
cld
jno
data16
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
inc
sbb
out
cdq
mov
call
mov
or
cmp
add
add
and
add
add
add
in
mov
add
add
add
adc
add
test
add
add
mov
pslld
ret
mov
inc
add
sub
ror
add
repz
mov
in
and
xchg
mov
rcl
mov
mov
add
imul
mov
mov
scas
add
add
and
add
add
les
call
adc
add
in
add
mov
add
test
push
add
jg
fild
sbb
add
adc
test
femms
cmp
add
xor
aas
mov
add
sub
mov
js
jmp
mov
and
sub
dec
ret
fldcw
test
sbb
add
(bad)
(bad)
add
add
and
add
pop
add
push
xchg
xchg
cmps
inc
shl
inc
add
add
add
ss
retf
dec
jmp
add
jmp
and
outs
dec
in
(bad)
addr16
xchg
add
add
dec
pop
call
scas
push
test
push
add
add
mov
dec
(bad)
cli
or
aas
jmp
sbb
and
add
add
daa
pop
xor
add
add
push
shl
sub
add
inc
iret
test
add
aas
out
xchg
lods
in
imul
pop
add
rol
add
add
sub
mov
pushf
xor
add
add
pop
add
mov
mov
fwait
inc
mov
sbb
inc
xchg
ins
xchg
jmp
mov
xchg
neg
(bad)
push
xchg
and
add
pinsrw
inc
add
mov
cmp
ret
xchg
pop
jge
and
add
add
js
shl
test
sbb
add
mov
and
add
add
pop
push
mov
mov
sub
mov
and
inc
sbb
btc
or
ins
jp
mov
cmp
add
sub
xor
(bad)
pusha
inc
sbb
(bad)
ret
ins
xchg
mov
add
adc
movs
sgdtd
add
or
add
mov
inc
lods
adc
movs
mov
jg
cld
add
mov
inc
add
sub
mov
xor
adc
xchg
push
jle
cmp
mov
add
jmp
test
add
add
mov
(bad)
ret
ins
xchg
mov
add
cmp
cmc
mov
lods
test
mov
add
inc
addr16
sar
add
mov
dec
(bad)
and
add
sub
add
mov
sbb
add
pop
sub
mov
lods
test
add
xchg
test
add
add
mov
bound
mov
add
add
xchg
and
test
add
lahf
add
pop
ins
xchg
xor
lods
pop
adc
pushf
movs
cmp
add
inc
(bad)
and
add
fild
add
inc
iret
test
add
aas
add
mov
sbb
add
add
add
dec
mov
and
add
out
lock
xchg
add
(bad)
mov
cmp
jmp
sahf
test
add
sub
mov
add
inc
int3
cwde
mov
scas
(bad)
mov
jo
mov
and
add
xor
(bad)
and
add
lods
add
inc
add
ins
add
mov
mov
add
sub
inc
inc
add
add
sub
mov
mov
and
scas
add
add
add
dec
rol
jg
inc
mov
add
sbb
mov
jmp
mov
and
sbb
call
dec
push
rol
bswap
pusha
sbb
add
ret
ins
xchg
mov
add
add
ss
test
pusha
test
add
mov
mov
inc
lods
stos
ds
and
add
add
outs
rol
inc
inc
sbb
daa
mov
mov
add
add
jmp
outs
in
test
or
add
add
mov
dec
rol
shl
loopne
mov
cmova
popa
xchg
add
add
mov
add
or
inc
dec
(bad)
and
sbb
jmp
out
and
add
mov
scas
mov
xchg
and
add
por
rol
loop
inc
inc
mov
sub
or
and
fst
add
xor
mov
out
xchg
add
in
mov
adc
add
jmp
mov
sub
dec
test
add
pop
add
adc
add
sub
mov
aas
add
jmp
jmp
sahf
es
add
sub
mov
and
rol
cmp
add
sbb
add
mov
out
add
add
shl
jecxz
mov
and
add
add
add
cld
sub
iret
in
add
add
mov
aas
in
aas
add
(bad)
loopne
add
add
add
stos
cmps
hlt
cmp
test
loopne
add
add
ins
xchg
push
icebp
cmp
add
adc
mov
out
and
add
xor
cmp
aas
add
ret
ins
add
mov
xor
xchg
dec
add
test
icebp
pop
add
dec
test
add
add
mov
lods
(bad)
and
add
add
xor
pusha
ja
mov
aaa
test
jns
add
mov
add
inc
and
xor
add
cmp
ret
ins
jp
mov
and
add
ret
adc
add
add
test
xor
lods
cmp
mov
ins
adc
jecxz
add
les
add
or
jmp
sub
inc
and
dec
test
test
xor
add
mov
add
scas
hlt
cmp
and
test
xor
retf
cmp
ret
ins
jmp
mov
hlt
or
and
shl
je
repnz
aas
ret
mov
inc
test
jns
mov
and
add
or
adc
outs
rol
je
cmp
dec
jmp
add
test
or
pop
jmp
sub
dec
in
repnz
mov
cmovl
add
jp
add
mov
cmp
lods
sbb
xlat
sub
xchg
iret
dec
xor
add
ret
out
and
add
mov
call
add
shr
xor
inc
mov
and
sbb
ret
sub
xor
mov
leave
add
fild
add
push
call
add
bound
push
cmp
pop
add
add
xor
dec
sub
inc
dec
ja
add
jmp
mov
xchg
sub
mov
and
out
add
dec
sub
mov
inc
inc
ss
stos
dec
dec
jmp
add
xor
add
add
scas
fld
mov
add
test
shl
jg
(bad)
ret
add
add
cmp
sub
and
add
add
add
rol
inc
add
loop
cmp
mov
cmp
add
add
adc
test
add
sub
mov
sbb
test
ins
add
cmp
add
adc
pop
ret
cmp
mov
add
xchg
mov
sbb
add
cmp
js
test
inc
add
mov
aas
mov
ret
add
mov
and
cvtpi2ps
dec
shl
shl
inc
sbb
mov
je
jmp
mov
lods
pop
(bad)
(bad)
daa
mov
cmp
aas
jmp
mov
and
cmp
add
je
sub
add
mov
sub
mov
bound
pop
push
add
mov
hlt
mov
jnp
mov
and
bswap
sub
inc
inc
jmp
dec
test
xchg
add
xchg
lods
jmp
iret
mov
minps
sub
add
inc
and
add
add
mov
jnp
xor
mov
sub
shl
mov
push
movzx
inc
sbb
sub
ins
xchg
mov
add
daa
pop
push
push
and
lods
test
mov
jmp
mov
add
sub
mov
dec
int3
jmp
push
xchg
add
add
adc
nop
(bad)
mov
scas
or
mov
test
add
add
mov
mov
add
dec
xchg
in
inc
inc
add
mov
and
(bad)
dec
ds
sub
mov
sub
dec
inc
push
js
test
add
add
outs
ret
add
mov
mov
xor
or
jmp
mov
add
mov
test
add
mov
movs
mov
fld
sub
mov
inc
inc
cmp
add
jmp
lods
js
add
xchg
cmp
xchg
and
add
add
mov
jmp
cld
push
mov
fnsave
push
mov
and
add
add
add
dec
ror
mov
outs
repz
cwde
outs
sti
seto
ins
cmp
aaa
inc
ror
and
add
add
or
xchg
out
js
out
jge
stos
and
ret
cmp
pushf
dec
jp
mov
frndint
inc
xchg
outs
repz
jbe
cs
mov
cmp
ud0
mov
jmp
mov
cmc
mov
and
shl
iret
xchg
and
add
add
ret
ins
mov
sbb
and
mov
mov
mov
lods
arpl
add
mov
sahf
cs
add
add
xor
pusha
add
sbb
aas
dec
inc
and
jnp
popa
add
mov
mov
and
dec
add
add
add
out
and
rol
jmp
fdivr
add
(bad)
test
xchg
mov
fsubr
imul
add
mov
dec
adc
mov
aas
add
inc
out
call
push
aas
sbb
push
add
mov
jmp
mov
mov
add
sar
add
mov
mov
mov
sub
xchg
inc
add
mov
add
inc
mov
and
add
add
mov
out
add
inc
xchg
inc
add
mov
movs
add
mov
enter
add
dec
ds
mov
mov
out
pushf
pusha
add
sub
test
push
sub
sub
jecxz
mov
and
add
mov
mov
inc
push
cmp
mov
lods
dec
or
in
fbld
shl
mov
ds
mov
push
daa
push
add
inc
test
pop
mov
xchg
paddw
out
inc
add
add
inc
xchg
inc
add
mov
in
mov
cmp
add
adc
mov
sar
add
lods
jnp
add
add
add
pop
movzx
push
sbb
add
movs
scas
dec
add
add
dec
mov
pusha
cld
add
add
inc
add
add
add
adc
add
mov
imul
and
dec
jle
dec
xchg
inc
and
xlat
cmp
out
xchg
mov
fadd
xor
add
mov
adc
clc
and
add
add
sbb
sbb
and
mov
and
mov
std
adc
fisttp
add
mov
aad
jmp
add
or
mov
out
sbb
sub
add
xchg
mov
(bad)
lahf
sbb
call
xchg
mov
mov
add
dec
add
outs
rol
inc
inc
add
ret
ins
sbb
or
and
add
mov
dec
dec
dec
jle
dec
mov
lods
fisub
add
mov
add
mov
push
call
add
and
call
mov
and
dec
add
jbe
imul
xor
stos
ret
and
mov
test
and
add
add
add
dec
add
test
add
sub
mov
jmp
mov
xchg
test
add
add
pop
xchg
mov
stos
retf
std
lods
add
add
test
mov
inc
add
sbb
lods
or
aas
dec
test
ins
xchg
add
xor
or
and
adc
and
add
push
add
add
call
mov
mov
jp
cmp
or
in
add
add
add
dec
fnstenv
mov
or
pusha
dec
xchg
jae
or
sub
push
xor
or
mov
lahf
add
add
mov
mov
jae
add
(bad)
mov
add
mov
sub
mov
std
mov
push
xor
sar
add
ret
xor
or
add
mov
dec
xor
xor
jno
lods
mov
cmp
add
inc
ror
outs
mov
mov
mov
aas
mov
ins
mov
and
sub
loope
add
mov
mov
mov
mov
sbb
into
xchg
add
cs
xchg
xchg
test
add
mov
xor
jmp
inc
sub
fcom
pop
jmp
mov
std
or
out
add
mov
cmovb
pop
and
mov
add
sar
sbb
pop
add
mov
arpl
loop
push
jbe
pop
adc
pusha
scas
iret
cmps
outs
cmp
inc
mov
add
fld
add
xchg
movs
and
mov
sbb
imul
call
add
mov
dec
loopne
aaa
pop
imul
clc
add
ret
add
mov
jmp
push
xchg
and
mov
pop
xchg
sub
add
inc
cld
sti
sbb
add
sub
call
scas
fst
dec
mov
mov
stos
ds
add
js
dec
add
pop
add
(bad)
mov
add
add
mov
fsubr
add
mov
fadd
or
fisubr
jmp
and
adc
pop
adc
pop
add
dec
mov
and
ds
ins
sbb
inc
xchg
inc
add
mov
or
std
enter
sub
dec
emms
cmps
pusha
mov
adc
inc
xchg
inc
add
mov
add
les
add
xor
das
sbb
adc
movs
(bad)
sub
add
add
mov
and
call
int
and
sbb
aas
mov
repz
fst
stos
rol
iret
mov
add
add
add
mov
mov
mov
and
mov
mov
pop
add
xlat
dec
shl
mov
and
sbb
ret
sub
and
add
and
call
mov
test
and
add
add
cmp
cs
(bad)
jmp
pop
fcom
mov
jmp
mov
mov
and
dec
pop
add
mov
(bad)
inc
add
add
test
ret
mov
test
out
(bad)
fsub
push
pusha
pop
imul
adc
add
add
add
add
pusha
imul
(bad)
jmp
pop
sub
aas
in
(bad)
jmp
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
call
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
call
cmp
cmovne
mov
jmp
mov
call
call
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
call
sub
add
add
mov
sub
mov
sub
add
mov
mov
sub
mov
sub
mov
mov
sub
add
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
jmp
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
out
adc
add
fisttp
sub
and
pop
add
inc
and
sbb
add
scas
jle
add
add
test
add
leave
add
add
(bad)
pop
and
add
call
dec
(bad)
mov
call
jle
add
xor
test
add
add
test
add
pop
out
jl
mov
xchg
mov
add
imul
add
add
jg
xchg
add
les
test
push
inc
inc
sahf
aaa
mov
xor
sbb
leave
fimul
mov
dec
xor
pop
jg
inc
loopne
stos
xchg
scas
add
repnz
das
mov
(bad)
in
in
stos
paddsw
push
sub
add
les
mov
(bad)
stc
sub
sbb
cmp
add
mov
dec
push
cmp
adc
je
sub
or
sub
mov
and
push
or
add
add
add
add
dec
xor
dec
mov
aas
sub
add
add
add
dec
and
sub
mov
sets
outs
add
mov
stos
and
add
rcr
jbe
cmp
xchg
add
add
xor
pop
sub
mov
and
jg
test
add
leave
push
test
push
sub
in
test
sbb
pop
add
add
add
add
xchg
test
sub
mov
and
jg
jmp
mov
sbb
add
cvtpi2ps
pop
jle
dec
add
add
or
repnz
rol
push
push
add
jmp
mov
sbb
mov
stos
popf
stc
add
xor
mov
add
cmps
inc
and
je
test
add
add
inc
test
add
jg
outs
cmp
push
test
(bad)
movs
sbb
sub
add
jbe
test
add
sub
mov
cmp
sbb
push
jmp
mov
add
mov
jbe
and
jo
add
xchg
add
add
stos
and
cmp
add
adc
call
and
pop
test
fnstcw
add
cli
and
movs
sbb
aaa
mov
mov
jmp
jmp
add
mov
sub
push
fsubr
sbb
lahf
add
sbb
fimul
das
cmp
sub
push
es
pop
xchg
add
movs
jmp
out
test
sbb
dec
mov
and
add
ins
sub
in
and
add
cmp
shl
popf
mov
call
add
add
add
dec
mov
or
inc
loopne
je
imul
pop
mov
mov
adc
aas
ins
mov
(bad)
mov
ss
out
frstor
jle
movs
sub
mov
adc
test
add
ret
mov
jmp
mov
into
sbb
mov
pusha
jle
leave
fsubr
lods
inc
mov
cmps
lods
add
xor
add
pop
sub
inc
ror
add
sbb
test
sbb
leave
inc
inc
aas
jo
cmp
movs
fs
mov
jle
imul
mov
pop
sub
outs
psadbw
cmps
mov
xchg
leave
add
jmp
mov
mov
add
jle
rol
add
add
mov
and
add
add
xor
and
arpl
aam
xchg
add
aad
sbb
cmp
mov
add
push
add
imul
pop
jle
jmp
mov
jmp
mov
mov
push
mov
add
mov
push
dec
jmp
and
push
add
mov
pushf
xor
mov
adc
ins
sbb
xchg
retf
and
sub
xor
mov
add
and
aad
lea
add
mov
add
mov
and
pop
pusha
add
popf
test
mov
das
cmp
add
stos
test
sbb
add
in
add
add
leave
scas
sbb
iret
xchg
xor
mov
add
inc
xor
add
ret
outs
mov
inc
lahf
in
and
mov
(bad)
sub
add
jno
ror
add
fwait
repnz
sub
ror
mov
cmps
loop
or
bound
outs
xor
add
in
jb
test
add
add
lahf
hlt
and
bound
add
mov
mov
fcmovnbe
and
das
cmp
ins
sbb
add
inc
ror
add
ds
mov
inc
xchg
add
pop
test
add
test
mov
xor
outs
mov
stos
and
cmp
add
mov
add
add
test
add
lea
pop
pop
ins
pop
ret
jmp
xchg
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
push
cmp
pop
push
mov
xchg
inc
and
rol
imul
or
push
jg
mov
adc
popa
jecxz
add
add
sub
call
popa
gs
div
int3
add
cmps
ins
ret
lods
mov
cs
jae
pop
aam
mov
jmp
or
aad
add
(bad)
xchg
adc
xchg
or
pop
or
fild
fcom
pop
bound
sbb
dec
fcmovnbe
out
adc
cdq
inc
inc
call
pop
ror
bound
nop
add
lea
test
cwde
push
mov
mov
outs
cmps
shl
inc
repz
nop
(bad)
js
out
mov
clc
fwait
mov
enter
fnstcw
(bad)
cmc
in
or
push
(bad)
loop
mov
jl
aam
mov
inc
sub
clc
fdivp
out
cmps
pop
fisttp
add
sar
xchg
add
mov
mov
stos
xchg
data16
sub
sbb
out
xchg
iret
loope
xchg
mov
adc
out
hlt
push
cdq
lea
lods
(bad)
fwait
xchg
(bad)
xchg
popa
in
lods
ficom
pop
leave
in
jbe
popa
retf
xlat
xlat
pop
rcr
fistp
sub
add
inc
iret
lds
add
clc
mov
ret
mov
sar
sub
push
push
dec
int
sbb
fwait
xor
pop
or
pushf
fst
addr16
leave
mov
sbb
xchg
mov
push
fdivrp
dec
(bad)
jne
mov
cmps
mov
mov
mov
add
pop
in
and
sub
sahf
(bad)
pop
in
sar
call
sbb
jge
push
hlt
scas
enter
pop
mov
push
push
ud2
inc
xchg
sahf
sub
ss
inc
in
push
push
dec
sbb
(bad)
jae
int3
sbb
push
xor
outs
and
test
scas
ds
lods
pop
push
add
mov
div
mov
xor
sub
imul
add
sub
push
std
pop
popa
push
dec
pop
fld
mov
cs
pop
pusha
mov
es
rcl
pop
mov
inc
mov
rcr
jge
(bad)
(bad)
cld
inc
fadd
mov
push
jo
test
sub
arpl
jnp
scas
ins
(bad)
dec
ficomp
push
adc
sbb
mov
ins
ret
push
stos
sahf
fdivr
add
push
lods
out
mov
ss
mov
iret
ret
adc
(bad)
inc
cld
cmps
pusha
pop
jo
call
cmps
mov
pop
rcr
icebp
stos
test
dec
test
in
(bad)
ret
xlat
popf
loop
or
pusha
jae
xor
sbb
into
div
out
dec
pop
dec
jle
fsubr
push
add
jle
and
adc
rol
pcmpeqw
jbe
adc
test
out
xchg
pop
lods
mov
and
sbb
sub
ret
adc
outs
add
push
jmp
pop
inc
jne
push
clc
test
xor
cdq
and
mov
mov
ins
add
stc
xchg
mov
pmaddwd
xor
inc
mov
mov
inc
jle
mov
mov
mov
xchg
ds
fldenv
std
add
xchg
nop
xchg
popa
xchg
fadd
jbe
xchg
jns
pusha
call
jno
not
jae
cmp
loop
cmp
inc
pop
sbb
and
cdq
cmp
test
dec
xchg
dec
lea
add
xor
aaa
sub
push
pop
push
in
icebp
inc
cwde
jmp
fadd
clc
and
cli
out
pop
cdq
imul
pop
in
bnd
xor
aad
lahf
jecxz
sbb
mov
fdivr
les
retf
xor
je
div
add
cmp
add
jp
push
fwait
jle
push
mov
in
hlt
add
loope
test
pop
or
fst
mov
mov
cmps
sub
enter
mov
rol
sub
add
inc
jmp
ret
jle
test
arpl
push
xor
mov
out
es
lahf
jns
or
sub
xor
repnz
mov
sub
enter
mov
loop
retf
adc
call
icebp
sub
and
mov
adc
sub
xor
mov
add
xor
sbb
daa
out
arpl
push
jg
aad
repz
pop
call
push
pop
pop
retf
and
cdq
xchg
shl
sbb
push
mov
adc
mov
(bad)
pop
es
vcvttsd2si
and
mov
mov
test
pusha
sub
dec
jecxz
sbb
inc
enter
test
xchg
cs
dec
je
lea
lock
(bad)
aam
mov
mul
dec
ja
pushf
jle
add
movs
inc
xor
lea
jae
push
jge
sti
mov
stos
push
cmc
cmp
or
xchg
inc
fbld
and
into
mov
push
and
lea
sti
arpl
mov
sub
outs
in
fcmove
push
stos
mov
adc
call
pop
dec
cmp
(bad)
or
bound
fwait
xor
xor
ret
in
std
xchg
cs
push
lahf
mov
xchg
xchg
or
pop
xchg
fcom
sub
pop
cs
sub
jnp
sub
add
lods
push
or
dec
push
out
(bad)
lods
out
es
push
dec
xlat
cmps
das
lock
push
enter
mov
cmovg
xchg
out
and
iret
sahf
and
dec
imul
repnz
mov
pop
and
mov
in
cmp
xor
cwde
xor
ja
(bad)
pop
aad
or
cmps
movs
out
pop
pushf
stos
jmp
mov
push
xchg
sub
mov
sbb
das
pop
dec
mov
cli
imul
pop
add
dec
inc
jbe
sub
jp
xchg
dec
xor
loopne
movs
adc
mov
scas
fimul
or
pusha
in
push
outs
mov
push
adc
mov
cmc
xchg
fst
in
lds
mov
jmp
(bad)
ror
test
dec
pop
loopne
mov
pop
lahf
in
ret
mov
loop
(bad)
stc
mov
and
stos
repz
cmp
ins
std
pop
jmp
(bad)
mov
cmp
xor
out
addr16
jge
inc
lock
retf
inc
clc
call
std
cli
fsub
mov
lea
jnp
ins
dec
pop
and
test
pop
popf
jp
fdiv
jae
mov
and
xor
inc
sbb
ret
je
cmp
adc
mov
loope
addr16
push
call
sbb
xchg
sahf
in
jmp
loope
test
and
pop
aas
push
and
pop
gs
cmp
and
leave
pop
jle
push
add
call
inc
loop
outs
mov
mov
and
into
push
nop
movs
int3
cmp
ror
push
cmp
(bad)
pushf
push
mov
xchg
xlat
inc
rcr
xchg
mov
je
push
fpatan
dec
lods
xchg
jb
xchg
je
mov
rcr
out
push
dec
in
mov
aas
dec
adc
xor
ret
out
cmps
shl
and
movlps
test
mov
arpl
push
mov
in
pop
or
imul
call
or
mov
add
call
dec
repz
push
repnz
cmp
dec
and
jle
aas
mov
outs
leave
(bad)
xchg
ds
lods
out
ins
and
mov
fprem1
push
push
or
mov
jle
nop
bound
and
out
(bad)
push
fisttp
jae
js
aam
sti
imul
sbb
sub
adc
xchg
mov
cmc
in
add
sar
inc
iret
mov
xchg
nop
ja
adc
inc
jno
jo
push
in
jp
mov
xor
mov
(bad)
sti
mov
rcl
inc
sbb
fisttp
(bad)
or
movs
xchg
lods
and
cmp
and
adc
comiss
(bad)
hlt
sbb
iret
jg
pop
or
dec
adc
pop
test
fnstcw
add
aad
inc
mov
pop
xor
jae
punpcklwd
jg
aad
mov
and
mov
rol
jge
cdq
add
leave
lahf
mov
and
and
(bad)
in
and
pop
ds
pusha
loope
leave
dec
aaa
mov
out
or
jp
ins
into
movs
adc
mov
into
movs
mov
adc
push
loopne
add
mov
or
mov
push
dec
int
inc
or
sbb
cmps
mov
ja
mov
sub
cmps
xor
xor
pop
xchg
sbb
pop
cmc
dec
aaa
loopne
mov
push
into
inc
pop
retf
not
push
sub
das
icebp
imul
pushf
dec
loop
dec
add
fs
mov
aas
mov
mov
sbb
cmps
pop
sub
paddb
jmp
lods
inc
mov
lock
xchg
cmps
and
es
cmc
aad
xchg
scas
es
xor
and
adc
popa
lods
int3
mov
mov
jecxz
cmps
lods
jne
das
mov
ins
jge
call
pop
mov
dec
(bad)
(bad)
(bad)
push
ficom
fsub
cdq
icebp
mov
test
and
hlt
in
lahf
and
mov
inc
mov
push
std
movs
call
add
out
push
jne
fistp
test
xor
mov
or
add
push
test
xchg
iret
mov
pushw
or
loopne
call
mov
ret
test
call
ins
repz
sbb
icebp
push
lds
adc
dec
imul
mov
jmp
sub
sbb
pop
push
pop
xchg
push
rol
mov
mov
jnp
test
pop
xchg
dec
dec
inc
lods
push
sub
pop
ret
or
jne
sahf
loope
mov
push
(bad)
cmp
mov
in
inc
inc
or
js
mov
js
fiadd
or
rcl
call
inc
pushf
adc
pop
fisttp
loope
data16
and
mul
movs
sti
mov
lahf
push
scas
push
sahf
pop
test
pop
(bad)
in
push
xor
push
pop
out
add
retf
xor
mov
sbb
mov
dec
mov
adc
pushf
mov
push
push
or
rcl
and
shl
nop
mov
jns
stc
imul
pop
pop
add
jbe
sub
aad
add
or
dec
or
add
mov
cmp
ins
clc
xor
imul
mov
add
in
pushf
cli
test
popa
mov
jle
cmp
jbe
ret
sbb
movs
pop
(bad)
xchg
sub
fmul
inc
add
dec
dec
pusha
int3
add
mov
inc
es
aas
inc
lds
fs
xchg
outs
cdq
dec
pop
clc
popf
shl
pop
or
retf
retf
loope
xlat
fbld
sbb
pop
arpl
or
scas
je
adc
xchg
fcmovnbe
cwde
sbb
pop
retf
cs
xchg
jae
sub
xlat
rcr
add
mov
scas
hlt
outs
cwde
(bad)
sub
add
inc
std
jge
add
daa
loopne
sbb
pop
lods
jp
push
jbe
adc
mov
dec
in
test
push
cmp
cld
pop
call
lds
cmp
ror
push
inc
not
pop
enter
or
int
shl
xor
push
das
imul
aad
mov
je
push
add
push
(bad)
and
jmp
push
inc
adc
and
call
in
sti
pop
cmp
loope
xor
mul
fcomp
push
adc
and
mov
clc
sbb
hlt
int
dec
(bad)
push
add
and
sub
fld
aam
push
mov
pop
lds
jne
data16
adc
or
aad
mov
(bad)
mov
lea
sub
mov
mov
cmovo
enter
mov
mov
mov
add
push
into
scas
push
push
test
jl
and
sbb
sub
js
add
call
pop
out
sub
cs
stos
scas
cmc
push
or
into
nop
ss
rol
and
adc
popa
xchg
mul
ret
mov
jmp
or
movs
cmc
xor
jnp
(bad)
push
inc
mov
mov
test
movs
or
jge
aaa
mov
cmp
enter
jmp
push
sub
bound
sbb
scas
mov
xchg
ins
add
jbe
mov
mov
adc
cli
and
mov
loope
inc
sbb
daa
mov
lds
sbb
loopne
mov
sbb
add
mov
cmc
imul
ins
scas
loop
cmp
cmp
pusha
jo
pop
cli
fwait
scas
jecxz
fs
dec
out
mov
fmul
inc
pusha
jno
lds
jecxz
or
fwait
adc
and
pushf
jle
pop
fcom
cmp
adc
stos
mov
xor
in
scas
push
sub
add
(bad)
jle
mov
pop
xchg
repnz
sbb
lods
add
jns
cmp
test
jmp
aad
punpcklwd
xchg
push
test
repnz
mov
mov
push
ins
inc
xchg
dec
movs
out
mov
stos
jle
lahf
out
fcmovnb
rcl
inc
ins
fnstcw
rcr
sub
mov
adc
sbb
push
call
mov
or
pop
inc
shl
jne
jp
les
mov
jp
jbe
pop
mov
pop
(bad)
movs
mov
mov
int3
shl
sbb
popf
test
rep
jge
or
jbe
(bad)
mov
enter
mov
div
sub
push
pop
out
test
mov
frstor
dec
mov
ret
jl
hlt
imul
leave
arpl
clc
lock
push
inc
xor
sar
aaa
das
xchg
jge
test
cld
push
enter
push
push
inc
out
adc
mov
shr
rol
inc
xor
jb
jb
mov
lods
cwde
nop
inc
xchg
sub
jo
cmp
mov
cmps
mov
mov
sbb
sbb
jmp
addr16
cmp
loop
jge
jp
cmp
lds
and
adc
xchg
pop
pop
jmp
shl
or
xchg
js
in
out
mov
fcmovbe
and
sbb
push
cmp
shl
scas
and
xor
add
fild
add
push
mov
stos
pop
push
or
rcl
jmp
sti
mov
and
nop
cs
adc
push
mov
inc
popa
rol
repnz
imul
sbb
out
int
cmp
mov
mov
rcr
es
test
cmp
retf
push
mov
jp
cmc
cmp
(bad)
icebp
dec
add
xor
cdq
retf
pop
bound
jg
je
out
sbb
adc
sbb
std
imul
sub
cmps
dec
(bad)
xor
ja
pop
dec
ins
adc
aas
and
sbb
sub
pop
gs
cmp
push
mov
mov
faddp
lock
xchg
pop
push
test
loop
xchg
je
mov
cmps
dec
and
(bad)
jo
outs
nop
pop
out
leave
lea
adc
jmp
mov
mov
call
(bad)
mov
cmc
mov
lea
xor
xchg
dec
xchg
xlat
aas
lods
in
cmp
in
cli
out
inc
xor
repz
fbstp
mov
cmc
cmp
pop
or
xchg
in
mov
addr16
fwait
cmp
cmc
pop
fwait
mov
sbb
mov
cmp
xchg
lock
out
cmps
rcl
lods
cmp
cmp
sub
xor
es
sbb
and
test
jp
sahf
dec
mov
cmp
into
add
(bad)
dec
mov
lock
cmp
jnp
shr
dec
lds
jae
mov
out
lods
inc
dec
jno
inc
sbb
sahf
push
sbb
data16
xor
fdivrp
adc
into
add
(bad)
jnp
and
cmp
pop
idiv
fild
stc
sub
rcr
cld
inc
cmp
aaa
jnp
and
mov
ins
mov
stos
test
ret
ins
add
bndldx
sub
jle
rcl
cwd
cmp
mov
inc
mov
cmp
dec
mov
push
xchg
lods
and
xchg
les
jae
jecxz
mov
pop
jne
loopne
xchg
sub
enter
fidivr
sub
imul
jmp
and
push
loope
inc
aas
hlt
scas
popa
add
cmc
sub
fdivr
das
dec
add
dec
push
jp
hlt
ret
push
mov
sbb
lock
jmp
jecxz
or
sub
sub
jmp
xor
retf
pop
jns
shr
push
cwde
sub
push
and
rcl
jge
mov
xor
out
mov
lds
jmp
pop
stos
jp
cwde
xchg
xchg
pop
jne
movs
mov
push
test
mov
imul
pushf
sub
test
jmp
mov
loope
loopne
sbb
out
outs
lahf
cmps
and
mov
sub
adc
and
movs
mov
push
push
inc
movs
jg
sbb
je
stos
mov
mov
scas
(bad)
lea
sbb
xlat
stc
retf
jmp
inc
dec
movs
sub
pop
(bad)
or
pop
and
popf
clc
pop
data16
add
mov
cmp
cli
test
pushf
push
enter
cmp
fucomi
inc
pop
jecxz
sbb
mov
xchg
es
sbb
leave
je
call
sbb
call
scas
out
(bad)
jo
add
jbe
and
jbe
inc
push
fxam
fs
aad
(bad)
inc
mov
jecxz
shl
fadd
ins
aam
mov
push
int3
push
mov
jns
dec
stos
fisubr
fadd
mov
jl
aaa
test
aaa
pop
loope
idiv
lock
fmul
xchg
push
mov
inc
ja
imul
(bad)
jmp
adc
call
dec
in
cmp
cld
in
adc
je
xlat
cmp
cmp
data16
xchg
sahf
ror
cwde
aam
sub
in
jae
push
rcr
rcr
mov
pop
mov
push
xchg
(bad)
in
mov
adc
mov
inc
repnz
cli
shl
push
sub
pop
(bad)
jb
mov
push
pop
rcr
dec
dec
enter
push
cmp
jp
push
xchg
cmc
lahf
fidiv
ins
in
fidiv
sub
mov
push
mov
(bad)
mov
sbb
das
lock
stos
neg
or
fnstcw
mov
cmp
xchg
pop
and
dec
sbb
adc
dec
cmp
lock
adc
mov
or
out
inc
push
fmul
and
jnp
xchg
xchg
jp
cmp
mov
adc
mov
push
xlat
sar
in
daa
rdmsr
in
mov
mov
inc
mov
cmc
sbb
in
arpl
push
adc
mov
div
or
jmp
mov
pop
add
cdq
shl
adc
cmp
bound
add
dec
push
(bad)
jae
mov
push
ja
repz
scas
and
xchg
bound
mov
cdq
lods
loopne
ja
cwde
rcl
sub
or
mov
cdq
movs
stos
(bad)
data16
outs
addr16
adc
xor
mov
pop
scas
xchg
cmpps
adc
jno
sbb
mov
icebp
xor
fstp
xchg
fadd
int
sbb
in
sub
adc
jl
(bad)
clc
das
stc
jl
sbb
and
lds
pop
ffreep
movs
test
cld
mov
(bad)
fisttp
mov
and
(bad)
pop
jp
xchg
cdq
popa
xor
xor
mov
sub
xchg
xor
aad
jo
sar
movs
mov
mov
lods
sub
dec
mov
les
lea
std
ja
mov
push
lods
cmp
call
test
jle
xchg
push
adc
test
mov
retf
pop
xchg
and
cwde
daa
popa
mov
and
or
fidiv
(bad)
mov
cmp
out
mov
das
and
sar
cmps
call
cmps
dec
push
test
sbb
ret
sub
jmp
repz
cwde
sub
loopne
push
mov
pushf
jmp
popa
test
repz
adc
cmps
cmps
xchg
aam
push
mov
not
inc
xor
lock
dec
mov
loope
cmps
push
sub
or
jp
and
sbb
jl
dec
lods
sbb
cmp
cmps
shl
mov
and
or
add
ins
sub
push
xor
movs
xor
jae
push
cmp
and
mov
jp
dec
stos
push
mov
into
iret
(bad)
jecxz
fdivp
stos
xor
adc
push
push
mov
cmp
in
sub
mov
mov
or
aam
jns
nop
(bad)
add
xor
out
mov
xor
int3
pushf
mov
push
add
enter
sub
ficomp
lods
jg
aas
mov
in
lods
imul
xchg
lods
xchg
and
lods
adc
movs
(bad)
in
les
inc
lea
pop
jecxz
cld
mov
add
push
xchg
sub
sub
jnp
sgdtd
mov
outs
pop
in
fs
clc
call
inc
repnz
arpl
adc
mov
or
imul
(bad)
mov
enter
jne
sbb
jnp
imul
nop
(bad)
clc
jno
inc
repz
and
cmp
popa
mov
out
inc
test
in
pusha
jo
adc
or
jo
xor
xchg
add
ins
sbb
sub
test
sub
dec
addr16
outs
mov
outs
cmc
sbb
(bad)
xor
inc
mov
jp
or
fmul
ins
aam
push
pop
cmc
pop
mov
test
inc
ss
cld
mov
inc
dec
sub
daa
int
or
repnz
out
sti
dec
cdq
gs
sub
lds
nop
out
ror
pop
scas
mov
pop
xchg
push
rcl
or
pop
push
jl
or
sub
xchg
leave
sub
fcom
sti
sar
push
(bad)
push
test
cmp
add
push
out
ins
ins
fiadd
fs
addr16
retf
setp
ja
pop
dec
jle
add
mov
mov
push
mov
inc
inc
mov
xchg
ret
imul
pusha
test
and
jmp
arpl
repz
jle
push
sub
test
add
inc
push
fstp
fisub
jnp
fwait
or
adc
pop
mov
mov
or
inc
sub
pop
(bad)
jp
mov
pop
jmp
ds
rcr
adc
inc
outs
das
inc
test
cs
jae
push
push
jb
inc
push
cmp
out
inc
pusha
dec
(bad)
(bad)
sahf
(bad)
(bad)
mov
stc
mov
fsubr
fyl2x
fs
arpl
mov
(bad)
sbb
sbb
push
mov
sub
lock
jmp
mov
cmps
mov
loopne
and
aaa
mov
sbb
cli
push
jbe
mov
ror
outs
popf
fpatan
popf
push
addr16
mov
imul
mov
mov
xor
sbb
mov
jmp
(bad)
repnz
call
repnz
imul
stos
(bad)
mov
fbld
push
(bad)
mov
dec
dec
fadd
cmp
ss
pop
pop
mov
ds
(bad)
sub
loopne
in
jmp
stc
in
iret
sub
(bad)
scas
sbb
mov
test
nop
inc
std
jb
fadd
cdq
inc
mov
outs
ins
and
addr16
and
sbb
(bad)
repnz
jo
rcl
jbe
inc
jnp
mov
jb
pop
test
test
cmp
add
push
cdq
cmp
gs
hlt
or
mov
xlat
adc
xor
into
addr16
aas
ja
cmc
fs
out
call
inc
or
loope
lea
xchg
jmp
mov
mov
dec
dec
cmp
into
mov
sbb
mov
imul
or
fcomp
adc
lock
cld
push
scas
sub
push
lods
fdivr
dec
mov
jno
daa
fisubr
sbb
inc
js
mov
xchg
xchg
addr16
out
retf
mov
xor
dec
xchg
rcl
dec
clc
jle
iret
enter
mov
loop
and
add
leave
pop
mov
mov
sub
dec
xor
cwde
in
int3
out
fs
inc
ror
not
dec
dec
sub
dec
stos
ret
lods
mov
push
xlat
mov
ja
push
pop
out
pop
inc
cmp
sub
mov
in
jmp
loope
cmps
out
fsub
scas
pop
jo
test
icebp
popf
(bad)
xchg
xchg
gs
pusha
cmp
fcom
fcom
pop
xchg
jae
jmp
pushf
in
sbb
(bad)
sbb
das
in
cmp
arpl
sbb
jl
out
sti
push
push
scas
push
xlat
leave
cmp
(bad)
pop
push
mov
pusha
sbb
sub
cs
push
inc
push
dec
dec
sbb
into
inc
loope
push
enter
sti
xchg
mov
lock
clc
or
in
xchg
cmp
mov
cmps
not
xor
daa
sar
xchg
sbb
push
mov
cmp
push
int3
xchg
mov
mov
mov
mov
in
(bad)
xor
sbb
shl
leave
call
sub
pop
pop
pop
mov
je
inc
aas
movs
add
push
scas
push
dec
lds
mov
ret
jne
add
push
dec
mul
push
lods
int3
sbb
out
mov
mov
and
ss
lods
repnz
jns
ret
cmp
(bad)
stc
cmp
push
dec
mov
sbb
push
dec
arpl
das
jmp
push
mov
sbb
xor
sahf
xchg
in
sti
cmps
push
sahf
push
lea
js
sbb
aas
data16
xchg
pop
and
popa
cmp
adc
in
mov
pop
xlat
test
jnp
mov
mov
fbstp
fisubr
cmp
out
loope
mov
add
(bad)
mov
dec
scas
cmp
add
call
pusha
cmps
xchg
sub
sti
xlat
inc
test
lods
and
popf
jmp
cwde
mov
cmp
lods
fcomp
xor
out
push
aaa
outs
and
movs
loop
push
mov
sbb
inc
call
inc
and
test
jne
mov
and
push
aas
dec
mov
iret
sub
push
mov
sub
adc
rcr
out
dec
cwde
xchg
and
int3
(bad)
push
js
cmc
inc
popf
or
sub
inc
jnp
adc
fcomp
add
mov
(bad)
mov
(bad)
mov
ja
test
xor
bound
and
cmp
dec
cmc
sbb
pop
hlt
scas
outs
sbb
xor
sbb
in
dec
mov
mov
dec
or
sbb
lahf
sar
movaps
(bad)
push
inc
inc
iret
fstp
stos
push
fcmove
mov
rcl
xchg
mov
ins
cs
jge
mov
or
pusha
imul
and
fld
ja
sub
dec
mov
mov
aam
and
mov
or
and
sub
(bad)
xor
mov
aas
sbb
mov
jmp
pop
mov
pusha
mov
in
push
push
sub
cmp
ja
fcmovnb
pop
in
mov
mov
std
sbb
adc
or
and
rcr
out
(bad)
loopne
stc
(bad)
cs
push
mov
adc
repnz
mov
cdq
fs
fsubr
enter
xor
or
jb
xchg
(bad)
sbb
(bad)
in
into
ins
ins
mov
pop
and
out
rcl
imul
aam
sbb
mov
pop
fisttp
jmp
dec
mov
arpl
fidiv
and
dec
dec
adc
out
pop
jmp
mov
jb
cli
and
nop
and
push
loopne
call
jl
xor
and
mov
jae
cmp
xor
inc
xchg
les
cmp
mov
aaa
mov
out
add
mov
ret
cld
inc
inc
pop
add
add
mov
shl
sbb
push
les
sub
cmps
or
or
repnz
out
push
add
push
inc
cld
dec
int3
cmc
cli
cmps
(bad)
sbb
cmps
nop
sub
fdivr
cmps
xor
loopne
jno
xchg
je
ds
inc
retf
cdq
sub
fs
aas
cli
pop
pop
mov
lock
in
pop
(bad)
ds
xchg
mov
mov
pop
lds
xor
outs
or
dec
test
push
jmp
push
push
dec
sub
push
fs
add
fisubr
and
cmps
mov
jmp
inc
cmp
push
mov
je
std
pop
xchg
mov
cmp
mov
adc
cmp
fidiv
fcmovnbe
or
out
in
fcom
stos
mov
cmp
stos
or
sti
or
pop
les
pusha
mov
sub
test
jae
hlt
lds
(bad)
dec
cmp
jmp
inc
ret
gs
inc
in
cwde
inc
mov
dec
or
mov
ins
movs
cmps
mov
ret
dec
pop
les
rcl
idiv
bound
lods
out
xchg
mov
lds
push
lahf
sub
xor
(bad)
dec
and
fiadd
and
je
sbb
push
sti
call
xor
and
dec
cld
sub
adc
pop
jecxz
push
jnp
sub
mov
xchg
dec
sub
lahf
sahf
jb
not
push
popa
inc
lock
jmp
pushf
and
jle
and
sub
dec
imul
sbb
daa
arpl
retf
add
in
fld
mov
jbe
xor
call
pop
popf
mov
ins
lock
mov
ins
das
mov
cmp
cmps
(bad)
cmps
in
hlt
scas
icebp
ror
je
jg
lds
cmc
lds
jb
add
mov
cmp
pop
cmp
mov
pop
push
pusha
pop
lods
cwde
outs
xor
es
pop
imul
retf
pusha
mov
xor
xchg
stos
jmp
xchg
(bad)
jo
dec
sti
cmp
outs
sbb
xchg
mov
pop
out
iret
test
in
xchg
cmp
rcl
data16
lea
hlt
add
shl
into
aas
(bad)
das
lods
pusha
div
aad
add
pop
pop
and
popf
pop
ins
xor
mov
cmps
fild
mov
retf
inc
pop
inc
inc
adc
leave
add
adc
xor
cmp
xchg
out
lahf
loope
lss
adc
mov
daa
jge
mov
xchg
(bad)
cld
loope
stos
(bad)
das
setg
aas
in
sub
xor
mov
popa
call
mov
jge
ret
pop
(bad)
loopne
inc
mov
mov
jl
ins
xchg
dec
aas
push
mov
xchg
out
jecxz
fild
pop
xor
sti
mov
mov
adc
mov
outs
jp
inc
cli
sahf
in
shl
rcr
inc
imul
xchg
fsub
stos
(bad)
pop
xchg
xchg
retf
(bad)
clc
imul
cld
ins
cmps
jecxz
jnp
add
add
leave
and
jg
and
push
or
sbb
or
push
add
push
pop
jl
inc
popa
xchg
dec
mov
(bad)
fsub
adc
xor
mov
fimul
and
and
int
fmul
mov
sub
hlt
fldpi
cmp
adc
and
cmp
mov
mov
add
and
xor
pop
xor
out
and
push
lock
or
xchg
xchg
stos
sub
pushf
push
sbb
xchg
jp
sub
lods
shl
dec
ret
je
sbb
fdivrp
ins
test
int
lea
out
and
lods
shl
sbb
xor
and
push
ret
mov
cwde
add
pushf
mov
adc
(bad)
xor
das
imul
stos
or
adc
fisubr
imul
fld
cmc
ja
jbe
call
xor
inc
dec
sbb
icebp
ja
add
push
lea
out
cmp
push
lods
loope
fs
(bad)
data16
and
xchg
or
mov
repnz
and
adc
rcr
inc
jbe
pop
jb
movs
inc
test
mov
fld
or
cmc
leave
cwde
mov
lds
mov
mov
mov
(bad)
outs
loopne
jo
jl
sbb
or
mov
cs
imul
lock
test
loopne
push
xor
sbb
hlt
inc
pop
cmps
(bad)
cs
call
lods
neg
loop
cmp
nop
scas
inc
retf
cmp
loopne
jp
and
out
cmp
mov
mov
lods
sar
hlt
repnz
fbld
pop
xchg
jecxz
jmp
or
push
mov
sub
bound
lods
lds
push
mov
rol
mov
daa
push
(bad)
mov
test
fidiv
mov
loopne
mov
loopne
jmp
xchg
pop
mov
fldenv
push
dec
(bad)
jge
pop
test
fild
fs
movs
clc
ja
mov
xchg
sub
push
push
jne
jmp
jnp
adc
add
es
stos
jns
imul
push
das
or
and
cli
jge
rcr
pop
call
push
fwait
push
mov
test
imul
rcr
int
jle
lahf
ret
mov
pusha
out
or
call
dec
sbb
test
push
add
push
out
cdq
lods
sbb
pop
inc
test
loop
aaa
push
xor
out
cmps
jmp
sahf
sub
dec
add
jae
jmp
or
mov
outs
test
in
mov
mov
(bad)
sahf
les
mov
or
add
retf
das
pop
test
call
push
mov
out
and
in
lock
sbb
out
push
mov
pop
jg
cmp
das
and
les
je
das
sub
pop
cwde
pop
pop
mov
ja
stos
mov
dec
(bad)
fwait
push
ds
aam
xor
inc
sub
push
rol
sub
cmp
or
pusha
or
loop
js
push
sahf
mov
xchg
mov
push
js
mov
and
leave
push
xchg
xchg
fwait
mov
jmp
(bad)
std
push
sbb
test
loope
pop
fist
mov
enter
mov
ror
lahf
cs
aam
xchg
push
outs
dec
push
shl
out
cmp
cmp
scas
and
jg
jge
jge
push
pop
dec
jecxz
adc
out
cmp
push
pop
ret
mov
or
mov
movs
pop
in
and
aas
add
nop
xchg
dec
cmp
jmp
xchg
imul
retf
icebp
bound
imul
mov
pop
ficomp
fwait
push
cmp
and
mov
adc
imul
dec
pop
mov
adc
aad
(bad)
fcomp
stos
and
jne
dec
and
(bad)
xor
jl
add
arpl
pop
popf
sbb
shr
jbe
out
mov
adc
fcomp
popf
(bad)
lea
jle
cmp
xor
pop
or
mov
sub
adc
or
cld
mov
in
pop
or
mov
stos
xchg
sub
pop
popa
pop
fmul
and
rol
inc
push
rol
(bad)
jmp
dec
push
in
adc
call
and
mov
das
(bad)
int
int3
mov
xor
ss
lahf
lods
mov
ja
scas
cmp
push
retf
out
ja
imul
and
aam
lods
inc
mov
int
inc
cmc
ins
idiv
inc
pop
adc
cmp
out
test
inc
lea
cli
xor
sub
fild
jmp
imul
pop
sub
cmp
adc
adc
sahf
mov
sahf
test
pusha
jl
and
or
xchg
mov
pop
xchg
out
mov
movs
adc
retf
sbb
and
mov
icebp
test
sub
movs
daa
lahf
adc
pop
jmp
or
or
popf
cli
sbb
dec
mov
int
jp
push
dec
sbb
sahf
clc
ja
xchg
add
add
pop
xchg
dec
les
jge
pop
loope
mov
xor
sub
ins
mov
fst
pop
ins
sub
daa
or
sbb
mov
imul
push
push
mov
and
sbb
inc
sub
rol
imul
push
popa
test
and
movs
loope
jae
ja
dec
out
lock
xlat
outs
cmps
call
out
mul
pop
loope
lahf
xchg
sbb
in
shl
add
not
std
pop
sub
bound
add
pop
push
fidiv
jle
mov
inc
jmp
(bad)
push
jg
mov
sar
xchg
shl
test
ret
dec
add
cmps
lds
sahf
add
adc
or
jp
push
out
xor
push
xor
(bad)
cmp
mov
pop
retf
leave
mov
inc
mov
lds
hlt
cmp
mov
cmp
out
lods
mul
(bad)
aas
jmp
pop
in
clc
pusha
jns
mov
add
test
adc
xchg
(bad)
mov
ja
jo
scas
out
push
(bad)
mov
aam
push
sbb
loop
pop
pop
jno
test
mov
lods
xor
sbb
push
adc
inc
ret
push
pop
ror
sbb
test
push
bound
add
scas
jecxz
mov
xor
into
push
push
cwde
imul
das
and
inc
(bad)
dec
inc
sbb
in
pusha
repnz
lock
leave
rcr
sbb
add
pop
(bad)
cmps
or
cmp
mov
scas
call
imul
xchg
loope
mov
fdivr
lods
fwait
add
add
retf
xor
or
popa
cmp
adc
and
pushf
clc
call
jae
xor
rcr
(bad)
call
inc
lea
inc
cmp
xchg
call
mov
pop
adc
add
and
sahf
scas
mov
inc
dec
dec
mov
mov
dec
clc
int3
mov
outs
pop
jbe
xchg
and
push
and
dec
jle
div
mov
sub
hlt
out
arpl
xchg
push
xchg
mov
jnp
and
imul
(bad)
jbe
adc
es
das
int
sbb
mov
xchg
xor
sub
mov
xor
getsec
enter
push
push
adc
cld
cs
inc
fs
sti
mov
shr
pop
jecxz
pop
mov
adc
movs
popa
stos
inc
loopne
and
cmp
pop
pop
or
in
call
mov
or
ja
and
outs
(bad)
ja
ret
not
sbb
shl
xor
mov
sbb
sbb
ds
dec
push
xchg
lock
jo
mov
call
cmp
pop
mov
fst
test
xchg
outs
aam
loop
in
cli
mov
sub
lods
dec
sub
xor
fisub
xor
jmp
cli
inc
icebp
sbb
or
pop
fcmove
bound
adc
xchg
ins
mov
mov
inc
rcr
das
fld
retf
adc
mov
add
imul
lods
(bad)
adc
sbb
les
mov
fiadd
mov
add
sbb
loop
les
sbb
out
push
jg
pop
sbb
lods
(bad)
mov
aaa
test
ret
xlat
in
inc
clc
fstp
push
ret
cmp
push
mov
js
cli
mov
sub
(bad)
cli
pop
fbstp
xor
repz
dec
or
lock
and
adc
call
lock
sti
inc
or
jle
mov
test
aas
push
(bad)
dec
and
mov
out
das
in
ins
mov
mov
push
ffreep
fdivr
or
xchg
pop
and
mov
fdiv
jnp
pop
xchg
inc
fbld
adc
push
mov
out
retf
dec
sbb
push
(bad)
cmp
push
aam
dec
push
rcl
into
repnz
adc
xchg
aad
leave
sbb
sti
loop
(bad)
pop
push
sub
outs
mul
sub
push
out
lock
fisub
adc
ins
std
loopne
adc
pushf
movs
cmp
cmp
sub
and
mov
sbb
pop
push
movs
sub
in
ret
div
and
cmc
shr
xchg
fld
inc
lahf
pop
jmp
xchg
dec
movs
xchg
sar
nop
sub
scas
xlat
xor
(bad)
or
int3
dec
in
daa
clc
xor
sbb
inc
pop
dec
inc
rcl
out
adc
addr16
dec
mov
jb
shl
cdq
cmp
fisub
mov
enter
clc
xor
xchg
mov
jbe
jp
sbb
popf
push
je
and
dec
cmp
cmp
mov
and
dec
push
(bad)
cpuid
or
fcom
add
loopne
jno
mov
sub
mov
xchg
mov
cwde
dec
adc
es
repz
xor
xchg
fdiv
xchg
lds
aam
push
aam
add
adc
inc
rol
shr
mov
repz
xchg
pushf
mov
jge
shl
jno
sub
inc
jmp
jge
(bad)
imul
xor
push
fcom
lea
lock
pop
shl
mov
sub
into
in
cwde
pop
pop
cmps
or
aaa
stc
data16
test
loopne
xchg
js
in
(bad)
in
mov
dec
rcl
cmp
dec
aas
mov
ins
or
xchg
mov
xor
into
inc
mov
aaa
mov
lods
mov
(bad)
sub
sub
ins
icebp
fdivp
xchg
mov
aas
je
(bad)
xchg
lock
inc
out
jb
mov
sbb
or
popf
pop
mov
or
neg
push
and
adc
fcom
sub
pop
pop
sbb
push
jecxz
sbb
mov
pop
repz
outs
jl
(bad)
into
sbb
icebp
scas
loope
mov
or
jp
push
inc
push
mov
push
je
fbld
pop
xchg
int
pop
ret
ds
jecxz
xlat
adc
jne
vmwrite
ja
mov
out
or
dec
xor
out
std
pop
mov
mov
push
test
jbe
dec
lock
pop
or
lahf
inc
push
xchg
dec
mov
inc
inc
ret
scas
retf
sbb
sbb
pop
cmp
lahf
xor
sub
sub
sbb
cli
call
sub
inc
cli
mov
dec
sbb
mov
outs
in
rep
repz
ins
setae
fisub
(bad)
xchg
sbb
xor
arpl
mov
es
add
rcl
jmp
jne
xchg
pop
push
or
jg
pop
fwait
xchg
jmp
test
or
mov
cmp
xchg
loope
add
imul
cs
mov
stc
xor
jmp
cmps
ret
lds
xor
jo
cs
add
jge
leave
iret
mov
into
push
retf
or
cli
gs
jo
icebp
push
xchg
jle
mov
add
or
mov
shl
mov
or
lea
mov
(bad)
sub
les
xor
push
dec
lahf
xchg
ds
nop
popf
ins
jg
xchg
dec
les
or
cld
or
(bad)
mov
mov
xor
mov
jne
mov
pop
add
push
xor
push
popa
in
cdq
mov
test
cdq
test
cmps
dec
xor
jb
fsubr
xchg
aad
jbe
ds
or
dec
mov
pop
push
cmc
stc
push
(bad)
cld
xchg
xchg
mov
mov
mov
cli
and
ja
das
or
jl
and
dec
fsubr
sub
adc
mov
out
cwde
sub
mov
add
ret
cmp
pop
push
or
sbb
dec
jmp
(bad)
stos
std
adc
push
sub
add
push
outs
popf
mov
sub
cmp
pop
jno
sub
or
xor
sbb
ds
jns
mov
fwait
mov
out
xchg
dec
es
inc
cmp
test
pop
into
clc
fdiv
lods
out
fdivr
inc
or
adc
je
xor
or
xor
call
loop
dec
stc
jbe
cmp
adc
ret
ins
sub
or
xchg
pusha
xchg
xchg
(bad)
sbb
pop
jns
mov
dec
push
mov
stc
dec
adc
or
(bad)
mov
aam
add
xchg
mov
movs
lds
dec
rol
in
mov
cld
adc
mov
fdivrp
sbb
mul
or
js
ins
pop
dec
cli
dec
pop
mov
test
mov
enter
add
sbb
sar
sbb
ins
push
mov
push
pushf
ja
mov
out
test
dec
push
xlat
cmps
ds
(bad)
(bad)
mov
(bad)
mov
shl
mov
jg
xchg
xchg
jb
or
fcomp
cld
enter
pop
sub
add
xchg
(bad)
sbb
xchg
sub
xchg
mov
jb
es
mov
inc
or
mov
jge
dec
cwde
mov
enter
dec
mov
add
sbb
popf
aam
jecxz
imul
jae
cmps
lea
jno
cmp
loop
push
out
aam
shl
cld
iret
call
mov
sbb
dec
xchg
xchg
jno
add
ret
sbb
test
popa
push
call
inc
dec
jno
sub
enter
retf
icebp
mov
test
pop
pop
out
into
xchg
mov
and
sub
fld
hlt
mov
sub
lahf
sbb
pop
sti
and
mov
sbb
pop
std
es
sbb
bound
sbb
pop
mov
sub
scas
pusha
inc
fwait
sbb
iret
inc
mov
sbb
sti
lods
jno
pusha
stc
test
ror
xor
or
outs
repz
pop
loop
out
fs
arpl
jmp
mov
out
push
add
push
test
imul
popa
ret
dec
adc
sub
pushf
and
jns
cmp
movs
mov
(bad)
dec
lods
jno
xchg
pop
sbb
sbb
fld
mov
lods
and
rcl
sub
pop
adc
test
dec
arpl
sbb
jne
cmp
das
mov
sbb
push
cmp
or
movs
mov
cmp
pop
mov
xor
jae
fdiv
push
add
adc
inc
dec
xchg
jl
inc
fbld
call
jne
xchg
movups
mov
jmp
add
dec
out
pushf
pop
stos
movs
cmps
mov
inc
jne
hlt
dec
or
loope
sub
clc
xor
inc
mov
sub
and
jmp
cmp
cld
inc
push
add
(bad)
mov
or
mov
cmp
out
loope
lock
test
sub
loopne
mov
push
pop
aaa
mov
push
out
call
or
hlt
push
adc
(bad)
sub
fbstp
jg
fld
ret
inc
push
cmp
pop
mov
arpl
pop
loop
sub
pop
adc
inc
into
repnz
aam
shl
or
and
mov
jp
clc
hlt
add
pop
jecxz
mov
jmp
pop
(bad)
jo
(bad)
mov
std
and
stos
push
or
or
add
mov
addr16
xor
cld
cmps
cdq
dec
stos
mov
in
mov
or
push
pushf
add
inc
shl
and
cs
into
cmp
xchg
std
(bad)
aad
push
push
aas
jle
jo
fs
outs
imul
inc
mov
lea
mov
enter
sti
out
sbb
add
into
daa
xchg
(bad)
pop
pop
cs
stos
call
push
mov
(bad)
mov
clc
cs
mov
add
test
cmc
les
mov
cmps
es
pop
lods
stos
xchg
sahf
push
out
(bad)
xchg
(bad)
jecxz
lahf
retf
mov
fsubr
mov
jae
lods
inc
jne
inc
push
in
sbb
pop
adc
push
xor
lods
add
adc
pop
xchg
inc
out
xor
pushf
and
mov
cmps
or
mov
outs
mov
mov
mov
mov
cmp
dec
ja
in
xor
adc
cmp
mov
or
mov
out
or
shr
cdq
dec
cmc
and
scas
test
jne
pop
inc
popf
ja
mov
sti
push
inc
gs
sub
jmp
das
xchg
in
push
sbb
cs
inc
pushf
dec
sbb
jmp
mov
push
out
dec
and
xlat
cmp
sub
dec
dec
pop
xchg
mov
push
mov
adc
sub
aad
in
in
retf
mov
sub
test
pop
mov
xchg
push
test
pop
sbb
sbb
int
callw
or
add
lods
xor
lods
mov
test
mov
or
outs
sbb
loop
outs
xchg
add
sahf
out
in
dec
test
aad
aaa
cmps
aas
adc
loop
xchg
test
xor
outs
jp
rcr
xchg
repz
push
jno
adc
sar
ret
sub
stos
cmps
jle
cdq
inc
inc
iret
pop
lods
dec
xchg
(bad)
add
adc
jg
cmp
cmps
jge
and
out
jmp
fdivr
push
pop
neg
sbb
xchg
cmp
pop
adc
bound
inc
xrelease
xchg
push
push
sar
retf
mov
mov
mov
mov
std
dec
fbstp
jecxz
or
addr16
ds
das
(bad)
xchg
das
mov
jo
enter
sbb
xor
gs
das
jecxz
cdq
adc
ja
mov
test
and
daa
xchg
cmp
test
rol
sbb
push
stos
addr16
(bad)
fiadd
mov
or
sub
jo
and
adc
jmp
in
inc
fsub
cli
and
ds
dec
dec
stc
cmc
jmp
inc
and
js
pop
fild
rcl
in
jmp
inc
outs
clc
addr16
icebp
mov
or
gs
lods
push
aaa
in
gs
jb
call
fisttp
fdivr
test
adc
or
sub
jmp
outs
aas
pop
sar
xchg
cmp
jbe
push
mov
fsubr
rcl
out
push
xchg
out
clc
jmp
outs
xor
pop
retf
adc
lahf
pop
fwait
push
jno
sub
sub
enter
jg
mov
rcr
inc
add
push
das
mov
and
or
inc
lock
cli
stc
sub
mov
add
lock
repz
imul
push
cmp
mov
mov
cdq
retf
in
sub
cdq
(bad)
adc
pop
scas
jo
ret
jp
jbe
jno
into
scas
or
mov
es
(bad)
adc
movs
push
mov
pop
retf
mov
push
sahf
aaa
les
sub
sbb
adc
xchg
repnz
mov
rol
sbb
movs
stos
repnz
mov
push
test
enter
sbb
push
pop
adc
jnp
inc
push
push
pop
movs
mov
and
dec
and
jl
lea
bound
mov
dec
add
mul
mov
lds
cmp
dec
push
mov
xlat
dec
adc
jbe
imul
stos
sar
mov
bound
sub
or
js
pop
sub
(bad)
jmp
not
adc
mov
inc
mov
js
cdq
popf
dec
push
test
sub
retf
es
call
sub
leave
lahf
ficomp
xor
test
fnstsw
scas
fdivr
movs
sbb
jmp
inc
ret
or
mov
adc
inc
(bad)
push
dec
loope
dec
xchg
dec
cmp
pusha
fidiv
fcmovbe
lods
loopne
push
sbb
sbb
jo
pop
mov
mov
adc
jo
push
mov
loopne
cmp
add
sbb
dec
mov
or
cmps
(bad)
mov
adc
in
arpl
popa
pop
les
xchg
addr16
dec
and
xor
add
loope
mov
or
hlt
popa
cmp
icebp
pushf
sbb
push
es
pop
jp
shl
ja
adc
push
lea
call
inc
aad
cmp
pop
pushf
mov
and
cmp
jno
pop
jle
imul
inc
pop
jge
sub
jecxz
scas
mov
adc
xlat
dec
imul
out
add
test
sti
pop
xchg
push
push
repz
mov
in
or
(bad)
fnstsw
sub
das
xchg
inc
pop
aas
clc
dec
jo
sbb
sbb
mov
dec
(bad)
adc
pop
leave
jb
retf
push
jns
mov
xchg
mov
aad
(bad)
sbb
fisub
mov
cmp
inc
inc
loop
push
xchg
adc
pop
test
test
scas
pop
or
mov
sbb
mov
addr16
retf
cmp
sub
and
xchg
mov
inc
and
dec
mov
add
movs
call
int
retf
add
add
mov
sub
fs
bts
jle
add
xchg
ins
dec
mov
std
pop
add
or
into
fs
ins
adc
call
sub
push
test
push
repnz
ins
inc
in
bound
xchg
mov
sar
mov
xor
pop
movs
inc
pop
sahf
inc
hlt
jmp
pusha
jno
adc
pop
and
loopne
and
fiadd
les
inc
mov
cmc
arpl
xchg
ds
cmovno
into
fcom
scas
or
dec
mov
push
loope
dec
mov
xchg
pop
stos
movaps
mov
int3
lds
(bad)
mov
sub
in
emms
mov
push
push
mov
sub
aaa
sub
push
addr16
add
add
sbb
in
leave
ins
scas
mov
in
shr
int
inc
dec
mov
outs
dec
mov
pop
mov
pop
in
or
hlt
sbb
(bad)
mov
add
call
lahf
jle
and
mov
or
dec
push
sub
dec
cmp
jecxz
cli
in
inc
fcomp
jns
cmp
add
stos
jnp
jp
dec
test
aas
fcom
mov
pushf
cmp
and
or
fabs
in
pop
lods
cmc
pop
adc
jmpw
mov
dec
out
adc
shl
test
mov
enter
and
jmp
push
or
popf
xchg
ds
cld
mov
imul
ss
sub
aam
xor
add
pop
dec
mov
cmp
mov
mov
int
sbb
loopne
xor
adc
mov
movs
inc
mov
sbb
enter
or
daa
add
dec
adc
mov
pop
or
test
mov
cmp
int
sbb
mov
cs
xchg
popf
push
and
not
(bad)
ss
mov
imul
out
adc
loopne
cmps
call
iret
xlat
mov
popa
bound
xor
cwde
dec
push
adc
mov
daa
sti
add
jmp
neg
sub
inc
inc
pop
cmp
or
pop
sub
fcomp
jmp
adc
outs
test
push
scas
outs
imul
sbb
outs
cld
into
xor
push
push
retf
fs
or
cld
cld
push
call
push
call
dec
fadd
cmp
xor
leave
push
imul
jnp
in
out
js
inc
ja
dec
jno
xchg
cmp
in
sahf
mov
xchg
inc
gs
push
lock
mov
jo
scas
imul
and
mov
push
pop
add
in
inc
idiv
inc
sbb
jnp
icebp
inc
nop
outs
shl
gs
xchg
outs
inc
dec
mov
je
sbb
mov
aaa
mov
stos
and
or
xor
mov
fsubr
mov
ret
(bad)
dec
in
imul
addr16
dec
xor
pop
or
or
mov
jb
fwait
sub
sub
in
push
mov
(bad)
push
inc
(bad)
shl
inc
xchg
movs
pop
cld
fsub
pop
call
fcom
push
xor
sub
and
cmp
neg
sbb
jle
popf
xchg
cmc
add
sti
movs
ins
sbb
push
inc
mov
inc
jl
adc
jmp
int3
imul
arpl
dec
(bad)
mov
frstor
daa
test
into
outs
shr
popf
imul
outs
jle
lods
sbb
jno
xchg
mov
(bad)
stc
or
xchg
add
movs
pop
jecxz
xlat
movs
inc
outs
dec
mov
jp
jecxz
imul
mov
cmp
lahf
nop
jae
sub
pop
daa
pop
lahf
stc
and
fadd
imul
jl
sub
aad
add
call
je
in
or
repnz
fwait
mov
dec
sbb
btr
pusha
les
ja
mov
mov
loope
xlat
not
jecxz
dec
add
adc
popf
(bad)
ss
fwait
adc
ficom
scas
rol
(bad)
inc
std
xor
inc
add
xchg
pusha
addr16
lea
clc
neg
sbb
in
fstp
cli
rcl
jnp
fidiv
fs
cmp
push
xor
sub
jl
xor
mov
mov
jnp
(bad)
fadd
xchg
dec
push
adc
xor
xor
movs
(bad)
cmps
icebp
bound
stc
sbb
add
sub
cmp
jno
aaa
jl
inc
mov
sub
mov
mov
mov
mul
inc
and
fnstenv
(bad)
pop
jecxz
add
inc
push
xlat
and
mov
fsub
outs
fistp
sub
sbb
in
into
or
out
mov
xor
and
push
(bad)
jno
into
bt
outs
push
ficom
dec
dec
jae
test
sbb
sub
jg
and
xor
test
ror
mov
movs
mov
ds
jnp
push
dec
mov
push
in
popf
xchg
out
adc
dec
dec
mov
scas
push
mov
mov
inc
push
jecxz
out
stc
sub
movs
inc
cwde
dec
sbb
dec
sbb
pop
das
push
jbe
retf
xchg
cmps
inc
push
mov
inc
push
mov
push
pop
lods
and
mov
add
not
adc
ja
push
in
int
inc
outs
out
and
cmps
lods
or
(bad)
ffreep
fucomi
lds
ja
enter
jle
cmp
les
mov
shl
jg
jae
je
(bad)
cmp
pop
dec
(bad)
fmulp
sahf
cs
xor
ror
push
adc
xor
cwde
jmp
jns
mov
addr16
adc
sbb
xchg
leave
and
adc
push
out
xchg
jp
mov
inc
push
push
xchg
ret
sub
xchg
div
in
xor
inc
fadd
push
and
bound
pop
dec
or
dec
xor
test
unpckhps
xorps
push
mov
mov
cli
jge
or
loope
in
jmp
cld
pop
movs
or
stos
sbb
outs
aam
xchg
mov
in
test
mov
sbb
mov
movs
cli
cmps
mov
loope
mov
retf
jb
pop
int
test
or
jnp
pop
and
sub
sbb
fild
fdiv
icebp
idiv
loope
push
(bad)
bound
xchg
in
xchg
imul
(bad)
xor
in
outs
fwait
imul
jmp
inc
ins
leave
jge
dec
jb
push
movs
xor
and
xchg
sti
or
int3
inc
div
or
add
stos
retf
std
push
mov
mov
ror
or
add
or
lods
fmul
les
add
or
lahf
sti
jmp
add
daa
mov
dec
dec
sbb
fwait
cmp
pop
pop
sahf
sbb
scas
inc
jmp
xlat
pop
inc
mov
cli
(bad)
out
mov
fcomp
add
nop
sahf
pop
jge
dec
aas
mov
push
sahf
je
popf
push
and
xchg
adc
jae
int
(bad)
gs
or
(bad)
dec
popa
imul
cmp
push
sbb
cmp
shl
mov
and
add
stos
xchg
nop
je
adc
or
jmp
pop
pusha
test
lods
push
mov
dec
or
push
mov
inc
ins
or
dec
ret
sti
cmp
cld
stos
xchg
mov
dec
sbb
add
mov
push
and
(bad)
mov
jns
cwde
imul
lock
popa
jp
popa
outs
and
pop
sbb
imul
int
mov
in
outs
fs
in
push
sub
lds
push
out
xchg
and
stos
xor
add
mov
inc
mov
ins
outs
or
mov
cwde
repnz
icebp
pushf
inc
add
mov
add
cmp
call
test
gs
xor
aad
(bad)
jge
add
fisubr
mov
out
cmps
sbb
(bad)
into
lds
scas
loop
rcl
int3
std
sub
mov
sbb
cmp
imul
fs
inc
fsubr
jmp
mov
out
xchg
add
dec
neg
in
movs
das
and
add
inc
adc
jae
xchg
into
hlt
enter
lods
jge
or
mov
push
cmp
mov
test
mov
mov
nop
retf
xor
cmp
or
adc
aam
push
cmp
pop
into
add
cmps
xchg
dec
es
xchg
push
js
sti
sti
pop
(bad)
adc
imul
arpl
mov
jmp
and
call
add
push
push
xchg
and
cmp
cmp
adc
jmp
push
cli
stos
loop
pop
movs
jle
retf
lds
adc
add
push
retw
sub
pop
push
cmps
mov
xor
xlat
mov
idiv
shl
out
mov
ror
mov
jnp
fistp
push
push
sub
push
inc
push
movs
jne
lods
cli
test
inc
js
mov
mov
mov
gs
out
mov
and
sbb
fnstenv
mov
fsubr
clc
sbb
aas
jbe
repz
add
cdq
test
jo
iret
imul
inc
xchg
hlt
jbe
xor
jmp
movs
xor
fistp
xchg
push
push
shl
pusha
mov
stos
jecxz
cmp
dec
jp
fidivr
outs
and
sub
xor
mov
add
cwde
mov
mov
push
jmp
ins
xchg
push
sub
test
fnstsw
nop
xchg
and
(bad)
rcr
pushf
add
inc
sub
pop
xlat
in
sub
add
ins
stos
movs
loopne
or
push
das
stos
sub
daa
imul
and
lahf
and
cmps
call
xchg
test
sub
adc
add
and
in
xchg
(bad)
mov
int3
inc
movs
sub
clc
clc
movs
cmp
cmp
ror
test
pop
cmp
xor
test
fldz
fldcw
cmp
repz
push
or
lds
xchg
jp
mov
repnz
mov
mov
xor
and
xor
sbb
dec
xlat
js
dec
sub
pop
pusha
adc
loope
leave
push
mov
in
outs
mov
addr16
outs
cdq
out
push
cmp
icebp
imul
and
fsub
(bad)
call
ret
cmps
fwait
lock
es
lods
mov
ror
mov
mov
std
pop
daa
addr16
lods
fild
jae
jno
pop
js
and
jb
cmps
bound
dec
mov
xor
std
mov
ror
jmp
mov
jbe
retf
jbe
test
dec
sbb
mov
sbb
xor
mov
inc
call
ret
jno
add
adc
nop
aam
frstor
rcl
adc
inc
cs
aam
adc
repz
fnstcw
repz
sti
and
mov
mov
or
lock
and
addr16
and
push
dec
xchg
add
iret
cmp
aam
adc
cs
inc
or
cmp
pop
cdq
mov
inc
push
mov
sar
cmp
dec
jp
mov
cdq
ins
arpl
jg
sti
xor
mov
cld
jb
pop
jae
xchg
xor
stos
repz
test
stos
lock
repnz
adc
push
jo
not
fcom
lds
add
push
adc
test
test
or
jg
xor
pusha
or
mov
inc
push
push
push
mov
sbb
cld
shr
push
into
sub
lods
mov
pop
add
out
in
sahf
jae
(bad)
xor
inc
ins
mov
daa
push
imul
mov
sbb
aam
retf
inc
shr
cmp
sub
out
aam
sbb
push
dec
arpl
cmps
(bad)
call
loop
(bad)
ins
cwde
mov
push
xor
inc
imul
mov
sub
pusha
jae
fwait
sbb
loopne
(bad)
xchg
lahf
data16
les
scas
test
xchg
jbe
out
es
(bad)
test
add
cmp
inc
in
mov
imul
or
loopne
popf
arpl
inc
fst
xchg
cmc
jo
xor
rcl
or
cdq
std
fild
aaa
mov
imul
mov
imul
xor
or
stos
cmps
sub
jge
test
loope
ret
push
pop
dec
jbe
push
(bad)
sti
cmp
movs
jmp
jns
xor
xchg
xor
jmp
out
mov
cmp
mov
lahf
xor
jl
push
es
cmp
lahf
xchg
hlt
jl
jmp
sbb
sti
stos
jne
rcl
dec
dec
dec
push
sahf
mov
or
inc
adc
fs
cmps
jo
push
test
adc
mov
lea
scas
jo
mov
fsubr
fs
inc
push
adc
inc
nop
adc
outs
fmul
push
fidiv
stos
nop
fld
adc
call
(bad)
sub
push
cmp
cwde
or
mov
jbe
out
cmps
mov
inc
call
inc
xchg
sub
inc
aam
xor
stos
xchg
mov
or
aam
fs
xor
push
xchg
cwde
movs
lahf
xor
or
jg
int
xchg
cmc
push
lea
cdq
test
inc
or
inc
mov
mov
ja
push
xor
add
adc
inc
mov
out
cld
fs
xchg
into
pusha
jbe
or
in
push
retf
(bad)
out
sahf
stos
dec
add
pop
jecxz
push
jnp
xor
in
mov
ror
enter
dec
loope
cmps
jmp
fstp
stc
jns
mov
(bad)
aas
jl
jb
cmp
cmp
sahf
mov
aad
mov
xor
push
jge
dec
mov
inc
sbb
loopne
mov
iret
cmp
popa
clc
outs
fdivr
adc
and
add
cmp
xchg
add
jmp
cs
out
rcr
pop
neg
loop
call
bound
jmp
ins
or
jp
popf
out
je
jle
int
div
cdq
ds
hlt
add
leave
or
arpl
xchg
xchg
push
rcr
sub
adc
arpl
jne
mov
jbe
ret
xchg
pop
xchg
call
mov
enter
xlat
add
cmp
call
and
sar
ret
xchg
outs
shr
aad
push
and
mov
sub
push
xor
sbb
das
cli
loope
fbld
push
add
(bad)
xor
dec
push
(bad)
fisttp
and
or
push
mov
dec
xchg
nop
aas
(bad)
das
adc
je
ds
loope
and
mov
stos
in
jns
bnd
push
cmps
mov
and
cmps
movs
popf
call
and
or
out
dec
out
xchg
adc
(bad)
fisubr
pop
adc
cmp
push
push
(bad)
jns
mov
inc
mov
or
(bad)
retf
push
xchg
push
out
xchg
repnz
xchg
mov
xchg
sub
fisttp
cmc
or
pop
jge
jbe
mov
adc
pop
push
inc
lahf
ficomp
and
pushf
pop
sbb
push
shr
mov
mov
sbb
imul
call
data16
mov
pop
dec
std
sbb
and
das
cmp
cs
div
xchg
shl
mov
sub
mov
push
int
cld
cmp
sahf
xchg
push
inc
jl
sub
jl
jo
xchg
addr16
cmp
mov
pop
cmps
retf
mov
addr16
imul
(bad)
stc
out
lods
(bad)
das
mov
movs
xor
fnstcw
xchg
arpl
jne
add
call
scas
or
jg
mov
sbb
inc
and
or
cmp
sbb
mov
pushf
fld
or
pop
xchg
loopne
pop
fwait
cmps
addr16
call
dec
jb
and
mov
xchg
xor
stc
sti
mov
fwait
popf
leave
mov
mul
arpl
push
mov
and
mov
inc
les
sub
movs
xchg
jnp
inc
ret
add
gs
fcomi
aad
outs
scas
mov
into
test
cs
xchg
dec
jg
mov
sbb
fdiv
cmc
rcr
outs
fistp
fmul
or
mov
out
(bad)
icebp
xor
popa
mov
(bad)
jg
mov
ins
jecxz
xchg
jae
xchg
out
add
ficomp
(bad)
aad
push
and
cld
mov
xchg
mov
add
push
mov
or
fidiv
gs
cmc
sub
and
cwde
cmps
lock
push
(bad)
mov
dec
sbb
test
hlt
scas
iret
outs
push
mov
xchg
mov
and
sub
pop
pop
aad
mov
sbb
movs
inc
mov
xor
ins
cli
or
adc
(bad)
jl
add
repz
adc
repz
leave
lock
jbe
lds
xor
int3
fisubr
scas
jnp
(bad)
mov
jl
mov
mov
imul
cld
sbb
daa
push
or
mov
cdq
aas
out
pop
sbb
(bad)
xor
or
data16
setb
loopne
add
push
popa
dec
pop
je
int
test
mov
or
add
movs
aad
(bad)
mov
loopne
aas
cmp
push
xchg
dec
in
(bad)
popf
mov
fst
adc
inc
test
pusha
push
push
test
sub
cmp
mov
daa
ret
cmp
mov
data16
or
mov
mov
push
inc
push
pop
dec
retf
loope
dec
aad
jle
sar
mov
leave
out
pop
pop
push
fcomp
loope
daa
xor
(bad)
xchg
gs
mov
je
les
cmp
sahf
inc
mov
and
mov
popa
es
xchg
leave
push
and
stos
pop
cmp
xor
(bad)
push
adc
or
inc
cmp
hlt
push
test
dec
shl
fwait
mov
mov
mov
pop
shl
rcr
push
mov
or
movs
or
stc
cmp
in
sti
jo
sub
dec
fwait
xor
xchg
xor
mov
mov
dec
leave
sbb
push
fldcw
add
inc
jbe
xchg
ret
mov
push
jo
in
bound
(bad)
stos
(bad)
fisttp
xchg
sbb
das
pop
push
mov
cmp
push
sbb
stc
dec
cmp
shl
in
push
cld
lods
enter
jge
imul
adc
adc
(bad)
xchg
jmp
push
out
repnz
pop
xchg
fadd
ror
and
lods
es
cmp
ins
cmp
cmps
sub
ja
mov
retf
std
jmp
popa
fiadd
and
shl
mov
mov
xchg
(bad)
cwde
(bad)
adc
lods
mov
dec
cwde
jae
cmc
add
ffreep
movs
inc
dec
add
xchg
mov
cmp
sub
pop
ins
stos
pusha
daa
mov
jg
adc
cmp
movs
xchg
add
inc
test
dec
mov
sub
mov
mov
xor
xchg
push
out
mov
xchg
sub
shl
stos
mov
add
push
std
mov
dec
(bad)
imul
fstp
mov
xchg
iret
fld
int3
loopne
stos
xchg
loope
(bad)
fistp
test
xlat
xor
fwait
inc
mov
pop
inc
gs
icebp
pop
retf
dec
mov
mov
loopne
(bad)
ins
cmp
sbb
ds
aas
fstp
imul
stos
arpl
mov
jns
gs
dec
jb
sub
fild
lods
jne
jp
xchg
enter
arpl
fldenv
sub
bound
mov
jne
xor
test
mov
xchg
mov
pop
or
sub
adc
loop
je
sbb
aad
and
lahf
popf
leave
repnz
mov
jl
leave
out
sub
test
cdq
ins
xor
or
js
inc
xor
xor
test
xor
xchg
mov
adc
enter
shr
test
imul
jbe
shl
ret
(bad)
cdq
add
popf
inc
addr16
or
int
iret
fnstsw
xor
pop
sahf
into
adc
and
nop
(bad)
dec
sub
shr
add
or
cmp
sbb
fistp
xor
fistp
retf
mov
daa
int
adc
or
mov
dec
or
mov
(bad)
cwde
imul
fdivr
sahf
fadd
outs
test
pop
pushf
gs
outs
sub
mov
sbb
mov
repnz
sar
xchg
push
stos
aas
out
call
mov
mov
push
adc
in
into
adc
std
sub
lahf
sub
ss
popf
and
dec
xchg
cmp
pop
(bad)
into
fst
sub
scas
jbe
mov
push
gs
dec
sub
sub
inc
jle
mov
push
xchg
sub
data16
cmp
lock
inc
aas
sahf
cdq
mov
push
and
pop
or
jle
(bad)
sub
dec
push
fwait
dec
inc
dec
jle
out
pop
test
cmp
hlt
jae
push
jo
ins
daa
(bad)
push
das
pop
and
inc
retf
jle
(bad)
and
inc
push
popf
shr
xor
je
add
pop
(bad)
xchg
(bad)
std
scas
pushf
mov
cmp
inc
xor
out
into
test
lock
aad
dec
push
ficom
out
pop
xor
icebp
in
jbe
mov
push
xchg
test
mov
aaa
test
fmul
adc
arpl
test
and
popa
fistp
jmp
jge
inc
in
inc
mov
xor
aas
mov
into
xor
adc
fld
test
push
stos
cld
push
das
cli
and
jb
jle
and
mov
push
les
daa
sbb
shl
sub
and
push
adc
ret
js
ror
sub
push
test
aad
push
xor
jmp
nop
push
stos
mov
inc
push
lods
(bad)
mov
outs
shr
(bad)
dec
leave
imul
push
jno
popa
jno
and
mov
add
push
gs
dec
stos
loope
dec
and
ret
mov
mov
mov
sar
jne
das
jb
inc
fwait
je
retf
jp
int
and
or
jle
mov
fs
and
dec
mov
add
lock
mov
test
int
call
pop
sub
push
jl
mov
xor
mov
cli
xor
jb
mov
add
movs
cmp
dec
lea
xchg
mov
or
xchg
movs
hlt
gs
cld
mov
inc
xor
xlat
jg
ret
lds
mov
xor
pop
pop
add
mov
loope
adc
loopne
add
ja
shr
cmps
outs
sbb
(bad)
ffree
int3
test
xchg
inc
jbe
lods
int
and
neg
sbb
push
pop
inc
mov
(bad)
xor
cmp
mul
pusha
scas
aas
sbb
ins
add
ds
xor
sub
add
int3
push
ss
adc
cmc
loop
in
cli
jp
sti
pop
inc
int
dec
repz
test
test
imul
cdq
xchg
mov
pop
lods
push
and
sbb
push
inc
push
movs
sbb
and
mov
rcl
xchg
xor
adc
xchg
test
fdivr
ja
pop
pop
push
mov
sbb
xchg
outs
ds
pop
je
mov
xor
mov
stos
rcl
or
aam
(bad)
cmp
inc
adc
mov
inc
das
xchg
cmp
sti
jne
add
sub
mov
pop
mov
add
jg
xchg
push
pop
pop
lahf
rcr
sub
or
sahf
xor
ds
push
popa
popf
cmp
stos
mov
cmps
in
adc
std
cld
push
fimul
and
add
xchg
pop
test
mov
push
jb
mov
aas
test
aaa
jmp
inc
sbb
xchg
rol
fcomp
push
addr16
cmp
or
addps
arpl
jmp
xchg
dec
pop
fst
add
jl
cmp
rcr
repz
fcmove
int3
test
rep
push
daa
outs
ins
addr16
dec
into
mov
imul
mov
push
arpl
mov
shr
mov
test
in
xor
std
and
ja
and
inc
jae
or
xchg
(bad)
leave
enter
rcl
jle
inc
xchg
pop
pushf
sub
test
fdiv
inc
daa
jg
(bad)
mov
test
loop
mov
loop
xor
adc
cmp
push
fwait
and
arpl
outs
xchg
test
shl
xchg
test
xchg
stos
push
leave
pop
adc
jmp
loopne
js
out
mov
retf
out
add
mov
stos
movs
shr
add
js
dec
jbe
jp
repnz
leave
and
icebp
xchg
mov
in
jge
push
cld
das
in
cmp
sbb
in
arpl
sbb
mov
push
add
movs
cmp
sbb
mov
and
mov
jp
and
test
jge
pop
push
mov
inc
nop
push
add
addr16
adc
mov
mov
pop
mov
xor
push
xchg
pop
jmp
mov
rol
iret
mov
popa
frstor
test
lock
sbb
sub
push
retf
in
sub
mov
jns
loop
push
jp
mov
push
retf
and
mov
imul
daa
adc
call
xor
cmp
out
dec
sub
xlat
test
mov
pushf
xchg
(bad)
enter
shr
sbb
inc
lods
test
inc
lds
pop
cmps
cmc
xchg
repz
pop
push
fisttp
out
cmp
inc
repnz
(bad)
xchg
pusha
in
jo
mov
pop
xchg
in
jg
test
ja
pop
lahf
add
sbb
push
jae
fst
sub
dec
xchg
push
mov
lock
inc
cmc
jo
mov
sbb
add
in
addr16
pop
mov
clc
ja
rep
in
pop
inc
mov
popf
mov
popa
sub
jmp
setne
sbb
mov
dec
jno
push
inc
xchg
cmps
adc
fstp
rol
out
pop
shl
xlat
or
pop
and
add
xchg
mov
test
xor
push
add
cmp
jnp
mov
cmp
xchg
inc
cmp
add
hlt
adc
xor
jns
pop
jge
push
imul
push
test
int
push
fmul
arpl
repnz
cmp
xor
push
cmp
movs
sar
sahf
lods
lods
imul
out
ret
aad
in
sbb
ret
dec
inc
stos
fnstsw
ins
pop
xlat
je
jmp
or
fwait
cmp
out
enter
sub
int3
xchg
and
dec
and
ja
(bad)
cmp
leave
test
out
add
pop
clc
jge
adc
dec
push
mov
(bad)
dec
inc
mov
daa
xchg
retf
mov
dec
xor
xchg
pop
or
popa
dec
pop
mov
mov
pop
mov
cli
idiv
xchg
push
push
mov
div
out
into
aaa
cmp
mov
neg
int3
cmps
test
shl
jp
mov
shl
inc
test
movs
cmp
dec
add
mov
pop
push
mov
or
nop
stc
jp
sub
popa
inc
xor
lods
sub
jno
inc
mov
cmc
fwait
pop
js
sbb
test
push
adc
out
ror
adc
jecxz
cs
mov
je
fcom
and
dec
push
(bad)
push
pop
sbb
fild
sar
cmc
mov
mov
push
out
lds
sbb
shr
and
in
and
inc
and
int3
test
ret
push
adc
addr16
inc
jg
out
push
test
pminub
adc
pop
popf
pop
add
pop
retf
cmp
adc
lds
data16
cdq
dec
mov
jl
adc
jp
push
sub
pushf
and
hlt
ror
cmc
mov
cdq
dec
loope
gs
jmp
push
enter
popa
pop
mov
stos
fcomp
lods
sub
mov
sbb
aaa
in
inc
sbb
xchg
aad
rol
movs
cmp
out
push
jmp
inc
mov
jns
daa
xchg
cwde
jns
pop
xor
sub
dec
call
arpl
iret
jg
bound
jmp
aad
ret
loop
or
dec
es
cmp
adc
test
inc
sub
test
adc
out
int
data16
push
sbb
rol
add
cmp
cmps
call
rcr
cmp
xor
mov
dec
jmp
sbb
jnp
mov
outs
sub
popa
sbb
lods
lods
arpl
aas
call
inc
sbb
inc
jmp
js
addr16
adc
push
dec
inc
cmp
les
push
iret
adc
and
jnp
sub
jne
push
and
mov
mov
cmps
stos
mov
add
inc
push
imul
sub
loope
xchg
(bad)
jge
cmp
fwait
push
jmp
je
push
xor
pop
add
retf
cs
jg
xor
in
dec
lods
mov
mov
fisub
mul
loope
adc
mov
scas
adc
movs
test
hlt
pop
ins
cmp
sub
mov
dec
or
loope
lock
dec
mov
push
mov
clc
cmp
dec
sub
inc
aam
and
or
push
ja
out
sub
cmp
lahf
dec
lods
(bad)
sbb
aam
sbb
cmps
dec
or
(bad)
scas
push
adc
push
sbb
repz
dec
in
or
push
push
xchg
mov
add
dec
aas
push
in
int
std
shr
add
mov
inc
loopne
jmp
push
lods
xchg
fadd
jo
sbb
inc
jbe
push
mov
ja
push
mov
dec
sbb
(bad)
dec
daa
data16
in
cmp
inc
and
sub
or
jb
imul
push
stos
mov
imul
fild
aad
je
adc
mov
(bad)
sub
xchg
das
fsubr
jge
mov
and
retf
mov
push
inc
inc
push
or
stc
and
adc
xchg
inc
(bad)
jl
sbb
icebp
lods
movs
js
call
pushw
out
out
xchg
arpl
in
mov
pop
push
inc
fisub
ss
sbb
sub
bound
sbb
jmp
mov
repnz
(bad)
xchg
or
sub
loope
ins
fld
lods
add
cmp
mov
loope
stos
push
mov
cmp
jbe
push
jae
in
mov
rcl
fwait
sbb
push
pop
jecxz
pop
push
and
jno
lods
shr
mov
jg
sbb
lahf
lods
xor
push
and
cmp
push
cmp
dec
fild
ret
scas
xchg
fbld
test
cli
clc
pop
fcmove
imul
adc
scas
ins
jne
jp
mov
test
xor
shl
int3
push
fcomp
mul
into
fmul
cmp
xchg
leave
cmc
pop
mov
shl
jp
sbb
dec
ret
cmp
loopne
jmp
popa
mov
mov
shl
fst
outs
and
pop
jg
sbb
bound
lahf
and
xor
push
in
(bad)
scas
mov
mov
mov
dec
or
test
or
lods
sub
dec
dec
push
dec
xchg
push
stos
mov
cmps
lds
adc
mov
(bad)
sub
test
adc
retf
icebp
mov
inc
add
pop
cwde
test
mov
int
cmps
lahf
idiv
call
cmp
fdiv
cmp
or
rcr
add
adc
cwde
test
push
mov
and
dec
psrlw
sbb
xchg
test
sbb
mov
sbb
ficom
push
cmp
dec
push
jo
retf
cmps
cmp
clc
aad
les
jae
ins
js
cli
mov
push
shl
dec
cwde
lock
add
sbb
pop
not
xor
and
xor
shld
mov
movs
dec
pop
push
mov
cmc
sub
push
gs
and
mov
sbb
in
adc
in
or
lds
paddusb
add
shl
sahf
jae
lock
inc
or
outs
div
jmp
dec
fbld
aaa
div
stos
inc
sbb
inc
loope
loope
inc
rol
xor
sbb
mov
mov
push
out
adc
add
sbb
jmp
(bad)
sahf
icebp
inc
mov
pop
sbb
mov
iret
sti
mov
inc
sbb
push
std
xchg
pop
fldenv
cwde
fldcw
enter
dec
inc
or
jns
icebp
jb
(bad)
jne
(bad)
and
clc
push
mov
dec
pop
test
stc
jo
les
or
retf
mov
mov
sbb
push
test
add
dec
lds
cld
adc
add
sbb
or
sub
pop
cli
nop
add
sbb
push
cmp
mov
out
xchg
jmp
pop
fwait
ror
mov
and
xor
in
xchg
push
dec
mov
in
adc
cmp
jmp
into
pop
cmp
(bad)
pop
sbb
xor
push
jae
mov
cmp
test
mov
cwde
in
or
dec
inc
pop
xchg
dec
ins
sar
fldpi
mov
fdiv
fisttp
shl
jne
mov
in
mov
(bad)
les
mov
xor
xchg
cmp
mov
push
and
jl
(bad)
enter
(bad)
sbb
add
sbb
or
(bad)
(bad)
fwait
jb
stos
xor
adc
jno
jecxz
xchg
cwde
pop
test
stc
dec
sub
jl
fistp
popa
cmp
xor
test
jp
sbb
sub
outs
les
adc
shr
add
add
adc
cmps
mov
mov
mov
(bad)
ror
repz
mov
scas
mov
mov
lods
pop
call
jne
clc
aad
jae
add
or
mov
arpl
in
dec
mov
jge
stos
mov
mov
push
pusha
sub
test
pusha
jae
and
(bad)
adc
push
push
mov
add
gs
sbb
mov
dec
call
sti
xchg
rol
arpl
push
cmp
punpckldq
cs
add
mov
xchg
addr16
out
in
lea
xchg
daa
push
aam
pop
cmp
xor
dec
jmp
stos
fs
out
mov
dec
mov
push
sbb
enter
fiadd
hlt
xlat
mov
add
mov
mov
(bad)
cmp
lea
ror
sbb
xor
cmps
mov
sbb
mov
adc
(bad)
and
xor
mov
daa
data16
jnp
and
pop
jns
push
cs
lea
out
retf
pop
mov
shl
add
mov
and
jg
call
pop
inc
lahf
mov
scas
popf
mov
push
cld
repz
xor
pusha
scas
add
push
mov
push
ret
fstp
ss
xor
bound
mov
mov
dec
mov
xchg
push
cmp
add
xchg
into
mov
retf
pop
pusha
mov
ror
or
data16
call
pop
and
mov
xor
shl
and
xor
rcr
ins
ss
sub
sti
pop
xor
jmp
inc
ss
push
sub
fcomp
lods
push
mov
xor
pop
or
ret
ror
adc
psubsw
push
cmp
call
xchg
mov
nop
add
arpl
sub
xor
adc
xchg
pusha
add
(bad)
and
and
mov
or
lods
or
mov
jle
sub
scas
xchg
aas
test
jne
dec
mov
adc
cli
(bad)
(bad)
push
aas
lahf
dec
push
add
mov
popf
popf
(bad)
shl
pusha
xchg
nop
pop
repz
ds
mov
popf
arpl
cmps
clc
pop
mov
pop
cmp
mov
adc
rcl
call
rcl
mov
pushf
repnz
lods
pop
or
ss
adc
xor
dec
out
movs
add
(bad)
jmp
push
cmp
cmp
inc
enter
xor
xlat
jge
call
loope
sub
inc
and
xor
xchg
scas
ja
into
(bad)
ficom
(bad)
cmc
mov
sub
sbb
jecxz
std
aas
mov
adc
mov
(bad)
push
sbb
xchg
cmc
cmp
pop
push
outs
mov
les
push
int3
pop
adc
cli
hlt
push
xor
push
enter
mov
mov
addr16
lahf
mov
das
outs
arpl
inc
bound
and
mov
ds
adc
out
mov
test
icebp
inc
mov
in
inc
retf
js
adc
add
xor
xor
or
pop
sub
arpl
or
sbb
mov
das
hlt
sbb
inc
jge
scas
and
inc
and
adc
pop
xchg
jmp
ror
popf
mov
in
dec
loopne
mov
push
add
push
dec
inc
mov
sbb
repz
xor
or
cmc
xchg
cdq
pop
sti
add
cmp
cdq
sub
mov
inc
lods
aaa
lds
imul
sbb
xchg
sub
aad
pop
mov
mov
lods
sar
ss
cmp
cmp
enter
sub
fdivrp
xchg
push
mov
xor
mov
inc
sysenter
hlt
add
ror
cs
stos
dec
jmp
inc
mov
int
pushf
ja
and
or
rcr
or
mov
or
inc
jge
xchg
retf
(bad)
push
jmp
outs
mov
push
sub
xchg
add
test
scas
and
call
in
adc
fs
xchg
aas
mov
pusha
loopne
jb
jmp
call
ins
je
test
scas
shl
ja
add
dec
out
adc
jle
cdq
dec
scas
addr16
xchg
(bad)
movs
loop
ret
add
mov
retf
ja
jae
sbb
movs
out
rcl
test
or
jg
int
les
adc
mov
add
fistp
call
jmp
or
out
outs
jb
ins
int3
or
daa
inc
sub
push
push
cmp
mov
sub
mov
push
sbb
sahf
stc
jb
push
sbb
imul
sbb
ret
cmc
scas
movs
sub
sub
call
add
and
scas
or
xchg
mov
inc
aaa
scas
mov
xor
mov
xor
mov
mov
mov
push
fcomp
es
push
in
dec
jb
lods
xchg
jmp
lods
xchg
icebp
out
ss
retf
rcr
sbb
std
lock
dec
popf
stos
push
jp
jb
call
pop
pusha
cmp
pshufw
mov
sti
lods
push
mov
test
loopne
fimul
shl
icebp
mov
sti
call
mov
xchg
sub
loop
repz
dec
xchg
test
(bad)
out
mov
mov
mov
jb
xor
pop
test
jp
adc
enter
xchg
jle
dec
jle
inc
stc
push
(bad)
repz
dec
add
xor
jno
std
cmp
push
adc
xchg
gs
out
xlat
in
ja
xor
(bad)
dec
add
fwait
retf
dec
test
out
add
(bad)
sahf
jl
jnp
push
inc
rol
in
sbb
cdq
sbb
or
add
xchg
stos
push
adc
jns
test
cmps
lea
xor
mov
cdq
inc
icebp
lock
jmp
rol
arpl
push
ror
xchg
sbb
stos
fisttp
stos
sub
jb
pop
movs
cmp
std
mov
jle
push
push
add
movs
jo
jmp
adc
retf
jb
add
std
movs
outs
mov
sub
inc
sub
or
adc
mov
pop
or
or
xchg
scas
add
loop
ja
xor
push
adc
add
and
es
mov
push
dec
jp
mov
ret
mov
xor
add
inc
fwait
push
xchg
mov
inc
mov
ror
sub
ret
pusha
inc
or
addr16
dec
ja
imul
push
jae
ins
and
push
add
push
dec
mov
jnp
shr
in
sbb
xor
adc
adc
mov
movs
imul
inc
sbb
daa
cmp
inc
mov
test
xor
pusha
out
out
mov
gs
mov
mov
pop
scas
and
add
bound
fsubr
arpl
push
test
jecxz
push
scas
push
cs
out
fcmovu
inc
fmulp
sbb
test
nop
mov
ficomp
jae
mov
pop
shr
stos
sub
imul
add
call
sbb
mov
out
add
stos
icebp
ret
movs
mov
xchg
mov
add
and
jae
mov
adc
les
mov
shl
xor
pop
idiv
adc
sbb
add
cmp
sub
xor
inc
and
in
sub
push
xor
add
aaa
mov
cmp
mov
out
mov
jb
lock
enter
call
fsub
aad
lods
mov
push
repnz
mov
push
and
js
inc
mov
mov
sub
mov
xor
je
sub
int
into
push
cmps
adc
data16
pop
mov
fst
inc
fsub
in
stos
adc
dec
leave
xchg
pusha
repnz
mov
scas
adc
sub
sar
jmp
rcr
or
stos
adc
std
ins
ffreep
add
push
or
std
push
dec
test
push
adc
jne
sub
jmp
jp
mov
or
push
int3
mov
push
push
cmc
out
dec
mov
(bad)
stc
xchg
sahf
cmp
fstp
stos
add
push
cld
cmp
cmp
int3
and
in
mov
jecxz
lods
cdq
mov
dec
sahf
and
sbb
inc
jl
test
shr
dec
xor
push
jno
(bad)
ins
mov
xor
mov
ja
nop
call
push
in
mov
xchg
jnp
lods
pop
jo
clc
es
adc
test
and
jae
inc
not
fxch
mov
sbb
loop
push
data16
(bad)
icebp
movs
push
sbb
xor
sbb
add
jb
rcl
and
(bad)
test
scas
arpl
sub
in
shl
cli
push
(bad)
and
aad
icebp
jmp
mov
mov
imul
lods
jmp
hlt
mov
les
add
jmp
data16
pop
mov
push
cmc
sahf
ss
jmp
addr16
dec
xchg
xchg
and
cmc
hlt
push
out
pop
push
adc
jmp
out
dec
lahf
fs
or
dec
dec
cwde
or
cmp
pop
sbb
jecxz
jp
add
lods
mov
stos
push
mov
arpl
leave
jae
sbb
in
jg
int
out
inc
xchg
mov
dec
push
call
push
xchg
dec
xor
sbb
sub
mov
pushf
(bad)
rcl
push
fmul
push
mov
push
cmovl
ss
adc
test
test
imul
xor
pop
enter
adc
sub
push
dec
and
mov
aam
dec
cmc
(bad)
lahf
lahf
mov
push
xor
or
ds
retf
inc
in
fwait
pop
dec
push
mov
xor
xchg
loopne
mov
ret
stos
sub
and
rcl
xor
cmp
fidivr
fisttp
stos
sbb
mov
mov
test
xor
sbb
pop
pop
shl
and
xor
ja
pop
xorps
repz
xor
add
psrad
fnstsw
lods
push
jnp
add
mov
push
gs
in
pop
ret
sub
cdq
stos
push
and
mov
adc
adc
pop
call
add
bound
inc
xchg
movups
rol
sar
and
mov
dec
inc
mov
es
leave
mov
sbb
leave
test
adc
in
dec
push
ror
xchg
loopne
mov
mov
jnp
fcomp
cdq
or
inc
neg
sahf
xchg
sub
cmp
lods
mov
(bad)
sub
scas
mov
in
pop
lahf
adc
test
and
test
into
fidiv
fst
lods
sub
lahf
out
fsubr
dec
(bad)
mov
mov
loope
into
out
sub
and
ret
hlt
lods
xchg
push
jl
imul
das
inc
test
lds
out
div
ins
mov
push
mov
pop
ins
xor
mov
jecxz
jno
xor
adc
cmps
mov
clc
cmp
mov
mov
arpl
fst
mov
pop
fwait
add
pop
jae
movs
(bad)
out
jg
or
pop
or
clc
pop
inc
cdq
int
shl
pop
mov
dec
push
arpl
retf
stc
aas
fwait
jecxz
das
inc
mov
add
jge
hlt
addr16
out
pop
in
sahf
xchg
jno
gs
push
outs
push
sub
rcr
xchg
inc
das
push
adc
(bad)
outs
mov
cmp
jnp
or
repz
dec
jecxz
jns
movs
aam
jle
dec
ins
cmp
in
adc
sub
and
ror
sbb
push
lods
cmc
inc
mov
movs
test
jb
push
push
gs
dec
loop
sbb
push
aad
xchg
loop
jle
ret
jg
ins
xor
test
ror
test
mov
popf
push
out
xor
xor
in
jle
jne
xchg
test
xchg
into
dec
add
fsub
cli
cmp
into
repz
jbe
jecxz
xor
mul
jp
mov
sub
mov
adc
push
xchg
mov
outs
cmp
shl
(bad)
mov
pop
and
or
and
outs
inc
cdq
cmp
out
jne
jmp
data16
inc
retf
mov
push
jmp
xchg
jns
cwde
jle
fiadd
retf
push
mov
cmp
xchg
xchg
fld
push
mov
les
xchg
cmp
hlt
adc
xchg
push
pop
sbb
(bad)
xchg
shl
das
out
test
test
xor
ficomp
mov
in
aam
mov
adc
dec
pop
xchg
shl
fmul
cld
push
loop
dec
retf
mov
in
cli
cmp
jno
fisubr
sbb
xor
xchg
push
jo
imul
scas
and
mov
mov
push
fcomp
jno
xchg
in
fsub
xchg
enter
sub
inc
mov
es
xor
inc
sub
dec
ror
mov
add
xchg
or
jmp
xchg
pop
and
xchg
add
add
and
je
iret
ficom
loopne
mov
ds
inc
lea
iret
xor
movs
mov
les
nop
mov
ret
into
in
or
jle
sub
fdiv
xor
inc
loop
push
adc
xchg
jg
jg
pop
mov
mov
sub
push
sbb
inc
push
js
rcl
push
mov
lds
jb
sbb
pop
xchg
pushf
add
in
sbb
scas
into
mov
ss
ficom
mov
dec
mov
xor
dec
mov
sbb
test
xchg
dec
or
adc
push
push
push
and
fwait
mov
sub
mov
lods
lds
cwde
or
movs
fisub
dec
repnz
mov
jmp
mov
cmc
(bad)
sbb
and
int3
fcmovnu
push
fwait
aas
lock
pop
mov
ins
mov
js
fwait
sbb
stos
ja
sub
push
add
test
hlt
enter
in
jle
mov
inc
ja
ret
loopne
push
scas
cs
lods
jb
pop
fdiv
fdiv
xor
jmp
in
dec
(bad)
loopne
push
je
mov
or
push
cmp
adc
dec
scas
or
pop
cmp
into
cmps
adc
retf
bound
xor
xor
gs
inc
fldenv
shr
adc
in
enter
cli
mov
sub
es
or
jecxz
add
js
mov
jge
sti
inc
dec
mov
in
rcl
ins
jmp
inc
inc
xor
(bad)
lock
das
xchg
dec
scas
shl
or
gs
cmp
lock
xchg
shrd
dec
and
lods
jbe
or
pop
lock
in
call
pop
push
retf
sbb
dec
and
pop
ds
pusha
clc
or
ret
add
(bad)
and
and
mov
xchg
not
retf
popf
xor
mov
jmp
or
pop
ss
push
arpl
std
sar
repnz
inc
mov
out
sahf
icebp
dec
mov
push
xchg
push
xchg
loop
jb
push
ret
stos
cld
mov
enter
scas
retf
adc
fwait
jns
mov
out
callw
sub
mul
test
jo
(bad)
mov
out
cmp
test
xchg
mov
sbb
pop
repz
pop
outs
fwait
ret
(bad)
xchg
popa
outs
imul
or
jno
loopne
cmp
xchg
and
aam
dec
jnp
jb
in
fwait
shl
sar
stos
jl
and
addr16
mov
je
mov
inc
sbb
or
adc
es
mov
and
test
gs
mov
out
ins
in
sub
mov
aas
and
or
push
cmc
out
xchg
addr16
aas
push
xlat
stos
mov
lds
in
dec
pop
xchg
jg
je
hlt
pop
xchg
fisub
pop
inc
clc
cmp
bound
push
jmp
push
push
pop
xchg
jmp
hlt
fld
fcom
lods
adc
clc
inc
cmps
mov
fidiv
test
sub
es
pop
and
inc
add
add
retf
add
dec
out
add
cmp
or
mov
jno
add
jle
cmp
retf
inc
cdq
in
pop
pop
sbb
les
pop
pop
pop
mov
jmp
jb
jp
inc
dec
stos
fucomp
mov
test
jecxz
in
je
jg
inc
mov
out
test
pop
cld
dec
jmp
(bad)
loop
push
add
dec
add
sub
dec
sub
cmps
and
push
iret
sar
(bad)
sbb
arpl
loop
popa
addr16
and
add
or
mov
xchg
bound
xchg
pop
aas
and
adc
inc
in
fld
movs
mov
cmc
cwde
mov
ds
inc
pusha
dec
loop
cmc
adc
add
in
(bad)
push
pop
dec
mov
fcomp
xlat
js
jo
out
jmp
imul
push
jle
mov
push
iret
push
arpl
popf
cmp
sbb
mov
inc
and
sbb
sub
mov
pop
dec
jnp
mov
test
add
cmc
pop
out
adc
add
or
leave
aas
jno
xor
jb
les
lods
xchg
push
jmp
aam
inc
(bad)
push
nop
sbb
jge
jmp
push
pop
cmc
dec
sar
es
repz
test
and
cli
pop
and
lods
scas
(bad)
movs
out
or
out
ficomp
xor
push
mov
(bad)
fcmovb
jo
xchg
out
in
sub
(bad)
fsubr
cmps
and
aad
lahf
bound
lods
clc
mov
int
jle
dec
imul
call
nop
cmp
enter
inc
or
std
fadd
ja
ficomp
pop
mov
mov
xchg
fwait
in
xchg
cmps
cmps
pop
test
jmp
retf
cmp
pop
loope
outs
movs
call
shr
and
mov
movs
cmc
in
bound
pop
add
jno
cmps
push
fisubr
mov
xor
les
pop
out
jp
js
mov
ja
xlat
mov
fdiv
ds
mov
inc
and
jno
ret
lahf
outs
ds
add
mov
jnp
add
push
jae
jl
adc
pop
mov
xor
inc
out
sub
and
fist
pop
pop
test
lods
adc
call
sbb
xchg
dec
adc
retf
fstp
(bad)
ins
std
add
fwait
jmp
push
call
lock
cmp
test
xor
pop
add
dec
scas
call
cmp
sub
jo
dec
lea
or
scas
inc
and
dec
sub
jmp
pop
loop
sub
or
jnp
sub
out
mov
clc
xchg
pop
xchg
xchg
imul
cmps
push
cmp
xchg
sbb
daa
sub
mov
cld
loopne
push
xchg
mov
lahf
xchg
sar
ins
inc
(bad)
push
xchg
cmp
or
sub
dec
mov
push
add
xchg
push
sbb
imul
inc
popf
sub
std
jns
add
in
jmp
inc
fisub
aam
rol
ret
adc
scas
out
mov
xchg
(bad)
mov
adc
test
shr
imul
fmul
cld
push
inc
pop
xor
pop
ret
and
mov
sbb
push
sbb
lock
push
xchg
sbb
pop
call
aas
add
rcr
sbb
and
scas
xor
dec
inc
mov
(bad)
and
push
retf
out
pushf
sahf
push
dec
loope
test
out
xor
mov
mov
adc
lahf
fisttp
adc
jle
retf
outs
sub
jmp
dec
and
popa
sbb
sbb
push
ds
shl
xchg
stos
mov
in
push
rcl
movs
bound
inc
add
xchg
fstp
sub
leave
dec
ret
cmps
bound
dec
test
pop
movs
stc
(bad)
xor
mov
push
(bad)
mov
dec
fmul
fmul
ret
sbb
mov
push
mov
add
xchg
jmp
and
shl
sbb
out
xlat
mov
inc
pop
mov
mov
sbb
scas
sub
pop
lahf
(bad)
sahf
and
and
fsub
movs
daa
add
push
adc
mov
sub
sbb
fsubr
adc
mov
sbb
mov
inc
mov
mov
push
sbb
clc
add
pop
popa
(bad)
inc
inc
inc
pop
call
cmp
iret
push
inc
pop
ret
lea
or
adc
pop
fild
paddusw
dec
shl
rcl
and
retf
ss
inc
xlat
mov
mov
aad
jecxz
xchg
mov
xor
pop
xor
xchg
(bad)
call
(bad)
(bad)
sub
bound
jo
out
pop
mov
cmp
icebp
cmps
fld
(bad)
clc
cmp
in
mov
xor
and
leave
dec
cmp
ins
push
int
jae
push
cwde
imul
(bad)
hlt
pop
or
inc
jmp
das
add
imul
cmp
int
mov
iret
pop
add
test
cmps
fs
jg
cmp
cmp
clc
dec
(bad)
fwait
push
gs
inc
or
call
sub
jbe
sub
mul
je
push
daa
(bad)
adc
inc
(bad)
fnsave
cs
ror
cmps
ds
add
ffree
gs
das
or
lea
das
test
jae
xor
fnstcw
mov
retf
mov
mov
xor
fiadd
rcr
scas
enter
mov
sahf
or
sbb
bound
pop
cmp
pop
xor
bound
ds
(bad)
repnz
sub
cmps
call
mov
aam
retf
dec
pop
ds
push
scas
sub
mov
and
call
ret
neg
and
popf
stc
imul
xchg
scas
adc
sub
sahf
add
popa
popa
(bad)
jmp
fcomip
pop
jg
and
add
mov
dec
jns
push
pusha
dec
in
inc
pusha
outs
loop
mov
adc
pop
push
test
outs
jb
dec
xor
mov
push
std
arpl
adc
jnp
shr
lock
cmp
inc
inc
movs
cdq
add
push
in
imul
xor
(bad)
imul
add
push
fmul
pop
and
xchg
test
sbb
fs
mov
sbb
cmps
cdq
hlt
test
jo
xchg
or
mov
pop
int3
shl
fwait
les
cmp
push
mov
ss
test
loope
lods
xchg
imul
jae
(bad)
bswap
lahf
mov
mov
outs
jge
push
jle
and
mov
int3
adc
or
cdq
test
outs
in
test
pop
push
lods
mov
sar
mov
mov
jb
ficomp
mov
add
fsub
pop
aaa
push
jbe
xchg
jmp
xchg
jp
btc
fimul
enter
in
cmp
cmp
sahf
idiv
lods
aam
pop
pop
sbb
pop
ss
aad
jge
rcr
ins
aas
dec
or
mov
bound
retf
fisubr
dec
shl
push
xor
jp
pusha
(bad)
adc
pop
jmp
cmovae
lds
pop
(bad)
out
cmc
mov
in
test
ret
std
lods
inc
jns
xor
cdq
add
daa
pop
sbb
repnz
jbe
int3
fsubr
pop
jns
push
adc
pop
imul
cmps
xchg
add
and
fsub
call
test
retf
mov
adc
scas
mov
sbb
adc
cmp
fmulp
xchg
jne
push
bound
mov
xchg
mov
fbstp
add
dec
in
in
jno
or
sub
lods
adc
imul
stos
test
arpl
repnz
and
stos
aas
cs
in
inc
daa
xchg
pusha
repz
inc
and
out
add
xchg
(bad)
push
out
or
jp
test
sti
jecxz
into
lds
cs
cmp
inc
mov
push
cmc
les
dec
sbb
les
addr16
jecxz
cdq
inc
out
jecxz
push
adc
pop
xchg
js
inc
push
push
dec
add
adc
cwde
sub
adc
cmp
int3
adc
test
dec
push
xchg
add
mov
xor
mov
popa
test
repnz
sub
xchg
jno
xchg
shl
cwde
mov
mov
push
push
sar
cmp
push
ins
ins
add
lahf
cs
in
retf
inc
jmp
mov
shl
jnp
and
mov
rcl
mov
gs
adc
sub
inc
dec
stos
or
jbe
mov
pop
mov
mov
(bad)
pop
mov
sub
(bad)
jo
xlat
loop
cs
outs
push
loope
inc
jge
inc
mov
dec
leave
call
bsr
aad
mov
jle
pop
xchg
adc
or
sbb
adc
cdq
sub
lds
jp
xlat
adc
jmp
in
(bad)
loopne
jbe
(bad)
sub
mov
aam
dec
inc
inc
es
nop
cmps
mov
sub
sti
ds
adc
scas
dec
sub
sub
inc
or
inc
inc
jbe
frstor
sti
sti
out
xor
stos
mov
das
ss
jne
push
fdiv
push
ret
imul
adc
sbb
in
mov
ja
mov
neg
(bad)
out
lods
mov
add
cmps
bound
stc
mov
not
xchg
ins
inc
adc
setae
or
scas
ret
stc
out
rcr
or
push
jle
add
pop
cmps
pop
push
jmp
nop
cld
pop
iret
mov
sub
das
push
xor
xchg
(bad)
cdq
or
xchg
xchg
xor
les
push
div
push
clc
push
pop
mov
mov
sbb
jbe
out
mov
retf
jns
ss
sbb
jb
into
ds
mov
cmp
in
mov
push
cmp
cli
mov
adc
iret
aas
pop
imul
add
ins
dec
enter
xor
mov
imul
mov
push
(bad)
rcr
icebp
inc
cmp
daa
pop
inc
jmp
sub
prefetch
and
lock
jecxz
push
test
das
hlt
mov
inc
mov
push
(bad)
jbe
(bad)
adc
xor
retf
dec
xchg
adc
cmp
sub
lods
push
mov
xor
push
sahf
add
add
and
fld
mov
mov
cmp
jp
nop
lods
call
push
bound
rol
cli
and
xchg
adc
es
imul
ja
das
inc
sbb
pop
dec
aas
cmp
push
arpl
div
fdivr
pop
dec
pusha
push
ins
jae
sub
cmp
sahf
ins
(bad)
cwde
mov
adc
sbb
cs
xchg
lahf
ret
pminub
and
(bad)
ret
aad
cmp
mov
call
mov
out
not
fsubr
mov
jno
ret
xor
and
mov
jne
out
push
je
mov
mov
lods
aas
xchg
push
pop
or
ja
cmp
outs
cmps
fcos
push
pop
stc
inc
pushf
jg
ret
mov
ja
leave
dec
push
mov
bound
jg
xchg
pop
add
jmp
aaa
shl
push
mov
mov
and
(bad)
les
ret
pop
test
sbb
cmp
push
fucomip
loopne
outs
jp
and
test
ja
push
jge
jg
popa
and
dec
int
mov
push
(bad)
xchg
jno
outs
ja
call
and
adc
or
ss
test
test
lods
shl
lods
rcl
movs
jno
lock
in
popa
and
add
fs
addr16
es
(bad)
mov
mov
adc
lahf
outs
scas
push
cmp
inc
jp
movs
xchg
xor
int3
dec
push
leave
test
mov
jecxz
sbb
pop
cwde
in
add
add
iret
loop
add
sub
in
push
aam
aas
addr16
bswap
js
jg
mov
cmp
sbb
vmovaps
mov
lock
sub
ins
adc
or
fstp
jns
mov
cmp
int
jg
adc
popf
sub
adc
movs
fdiv
in
daa
int3
pushf
push
(bad)
fwait
xchg
push
loope
xor
inc
je
(bad)
xor
xor
dec
mov
push
adc
and
xchg
mov
cs
cmp
rol
into
and
ret
push
sbb
push
fdiv
dec
test
enter
push
inc
ins
sbb
out
adc
xor
daa
mul
add
sub
aam
jp
lods
or
sub
sub
stos
mov
lock
sti
inc
jns
pop
mov
add
call
outs
fmul
test
push
hlt
jb
sbb
enter
push
popa
loop
sar
jp
retf
dec
cmps
pop
sub
sub
fmulp
add
mov
inc
xor
mov
xor
and
sub
test
in
sar
or
pop
movs
ins
dec
fiadd
ror
push
adc
repz
mov
sbb
nop
iret
xchg
pop
push
out
mov
lea
dec
push
inc
mov
ror
dec
ret
cld
mov
pop
mov
cld
(bad)
pop
call
and
sbb
int
xlat
pop
cdq
(bad)
mov
and
sbb
pop
dec
pop
(bad)
or
pop
jp
pop
sub
adc
dec
jmp
mov
jecxz
mov
cmp
cmp
jmp
sbb
push
dec
pop
shr
and
sbb
fdivr
jg
add
ffreep
push
add
mov
pop
jecxz
out
lods
and
ret
xor
fwait
dec
jp
mov
mov
sbb
in
out
aad
sbb
cmps
outs
movs
sub
mov
xor
jnp
mov
icebp
fisubr
pop
push
in
shl
test
jbe
daa
out
push
imul
outs
aas
sti
xor
rcl
mov
popf
cmps
lea
jo
retf
fisttp
jl
and
push
inc
mov
mov
mov
adc
cmps
sbb
sbb
jae
je
xchg
xor
std
arpl
not
mov
cdq
loope
mov
(bad)
sub
jg
jmp
xor
sahf
xchg
xchg
leave
jne
xor
cmc
or
ins
hlt
std
inc
outs
retf
push
push
dec
mov
loope
pop
ins
rcr
je
pop
(bad)
adc
mov
mov
lods
pop
pop
xor
test
inc
cmp
lods
push
inc
jne
mov
add
inc
add
or
ret
or
pop
sahf
aas
dec
inc
in
mov
aas
push
add
into
add
mov
ss
adc
mov
in
and
jo
jb
mov
call
call
aas
cmp
mov
lahf
cmps
jmp
adc
jns
lods
pop
cmp
mov
inc
pop
in
ja
jl
add
add
pop
jge
mov
cmp
sbb
movs
sbb
into
nop
test
pop
inc
adc
test
int
inc
dec
aad
lods
push
mov
loopne
(bad)
pop
pushf
fwait
int3
int
push
mov
ja
rcr
imul
dec
adc
mov
xor
and
push
(bad)
cmp
aad
retf
loop
fcomp
scas
mov
jmp
fwait
aas
call
or
and
in
rcr
sbb
or
dec
jnp
aas
push
push
or
pop
mov
shr
mov
inc
pop
mov
(bad)
cdq
les
ja
neg
fbstp
stos
sbb
xor
mov
mov
adc
fcomp
cmp
outs
inc
or
dec
ret
repnz
sub
adc
xchg
xor
fidivr
outs
push
cmps
sub
fld
scas
mov
add
adc
iret
out
adc
pcmpeqb
daa
pop
push
mov
inc
cmp
rcr
mov
mov
les
test
push
pusha
out
push
loop
pop
sub
mov
mov
dec
mov
jbe
rol
dec
cmp
xor
jg
dec
pop
mov
loop
cmps
inc
(bad)
mov
repz
adc
fs
(bad)
scas
fstp
(bad)
movs
popa
loop
jb
pusha
mov
pusha
xchg
push
out
push
mov
leave
cmp
in
cmp
hlt
or
pop
loopne
cli
jg
jno
cmps
add
sub
mov
pop
call
jmp
js
jecxz
cmp
movs
or
js
cmp
and
(bad)
mov
ja
pop
jnp
push
popa
xchg
dec
cli
sub
cmp
push
mov
std
sar
call
mov
add
into
retf
icebp
or
inc
cmp
and
jne
mov
pop
push
xor
inc
add
cmps
fxch
loope
stos
nop
fwait
aad
jmp
sub
dec
pop
cmps
scas
popf
mov
ret
sbb
retf
dec
and
mov
dec
pop
(bad)
push
enter
sub
mov
sub
aaa
xor
sbb
dec
pop
mov
arpl
inc
pop
lds
add
dec
xchg
mov
mov
stos
jns
fimul
sub
sbb
(bad)
out
adc
mov
cmp
mov
xchg
movs
mov
inc
out
mov
pop
sbb
adc
enter
or
leave
retf
mov
dec
lea
movs
push
pusha
retf
and
push
inc
xchg
mov
pop
mov
xchg
imul
sbb
lods
sub
jg
xor
ret
stos
(bad)
adc
sub
adc
hlt
aad
mov
mov
std
inc
adc
dec
not
jmp
cs
fucomp
dec
sbb
ret
or
stos
aaa
cmp
mov
leave
sub
cmp
and
in
jmp
xchg
mov
scas
loopne
xchg
push
push
adc
dec
mov
push
in
ret
adc
cmps
ficom
aam
pushf
aaa
retf
mov
sar
and
test
lods
mov
dec
inc
mov
push
mov
rol
aaa
fbld
ja
jmp
retf
xor
adc
(bad)
jnp
clc
and
enter
inc
pop
test
stos
popf
xor
inc
mov
sti
xchg
jmp
fnsave
(bad)
ins
shr
les
rcl
push
cmp
cmp
and
sub
bound
add
jecxz
jp
pop
(bad)
adc
cli
jb
or
movs
sub
test
add
pushf
hlt
clts
sahf
test
imul
and
cmps
and
sbb
cmps
out
xchg
and
and
fcomp
and
push
movs
lock
mov
das
(bad)
mov
mov
push
xor
pop
gs
xor
movs
ins
(bad)
jg
jne
mov
iret
mov
ret
sbb
stc
push
pop
mov
outs
jns
sbb
hlt
inc
imul
jmp
inc
test
xchg
fnstcw
and
lods
mov
push
cmp
or
sub
jo
loope
push
dec
sub
stos
test
add
mov
xchg
sub
adc
(bad)
jmp
daa
ret
pop
sbb
movs
ficom
jae
add
call
fwait
jbe
mov
mov
rol
int
mov
jbe
xchg
push
ret
(bad)
mov
retf
mov
mov
(bad)
iret
mov
pusha
pop
ins
das
xchg
jo
repnz
test
movs
fild
push
xchg
inc
repz
ror
dec
stc
push
push
jne
xor
in
stos
jg
loopne
xor
lds
cmp
xor
scas
xchg
outs
mov
add
jle
dec
push
jmp
inc
ins
dec
push
jbe
inc
xchg
dec
jne
(bad)
idiv
and
in
div
idiv
pop
inc
ret
mov
leave
mov
inc
push
jmp
fucomip
sub
shr
enter
adc
int3
scas
in
add
pop
fdivr
(bad)
mov
ror
sbb
into
push
cmp
scas
rcr
push
inc
adc
inc
cdq
popa
retf
add
push
or
xchg
retf
in
adc
call
nop
push
add
clc
daa
popa
loope
jmp
or
push
or
call
jnp
sar
(bad)
out
sbb
mov
popf
adc
pop
jbe
lar
mov
aad
or
das
repnz
mov
ss
push
(bad)
(bad)
mov
mov
fidivr
mov
dec
jno
jl
daa
fs
mov
push
pop
test
out
cmc
sbb
inc
repz
out
in
aas
sub
jbe
aas
cdq
mov
sub
inc
pop
repnz
inc
xor
xor
or
retf
adc
and
std
and
icebp
ror
sbb
leave
xchg
mov
outs
xchg
cmp
pop
(bad)
sbb
jbe
push
arpl
cmp
or
mov
pop
mov
or
push
pop
sbb
rcl
and
inc
xor
adc
rcl
scas
out
cmp
mov
cmp
in
fsub
ins
stos
inc
int
cmp
mov
out
jb
rcl
adc
nop
adc
xor
adc
sbb
jnp
mov
fimul
push
add
cwde
sub
nop
and
gs
rol
sub
pop
icebp
imul
cmp
sbb
mov
xor
mov
gs
xlat
mov
inc
jmp
fs
std
sub
and
or
in
iret
aaa
repnz
fld
and
sbb
mov
(bad)
bound
scas
xchg
leave
cmp
sar
mov
(bad)
outs
dec
call
scas
popf
scas
xor
xchg
ins
mov
and
inc
push
dec
pop
(bad)
add
mov
mov
out
inc
inc
ins
dec
dec
les
jg
cmp
mov
(bad)
mov
call
jbe
test
xchg
dec
dec
fimul
sahf
pop
imul
shl
rcl
bound
movs
aaa
jp
fs
mov
popf
pop
jle
jl
ficomp
and
loopne
cmp
aad
mov
xor
pop
add
sbb
lds
mov
xchg
pop
ss
aas
mov
scas
aam
jne
jnp
scas
lahf
outs
pop
pusha
imul
outs
adc
push
mov
mov
mov
ret
dec
or
ret
sub
loope
inc
jle
or
jecxz
js
dec
clc
and
fiadd
or
inc
in
jmp
jns
jmp
cmp
add
fs
sahf
rcr
js
cmps
push
and
gs
jbe
dec
mov
dec
ret
jmp
ret
fimul
ror
mov
or
mov
mov
jb
cmp
fadd
and
int3
jns
mov
(bad)
in
cmp
in
pop
test
sbb
retf
push
cmp
jmp
inc
xchg
xor
sbb
lds
inc
js
pop
inc
jne
idiv
loopne
outs
adc
adc
test
ror
push
fld
adc
push
nop
dec
push
dec
icebp
(bad)
mov
sbb
mov
dec
and
inc
mov
dec
pop
jle
pop
test
ror
push
fimul
pop
push
pop
ffree
stos
and
sar
mov
cmps
xchg
and
(bad)
mov
neg
cmps
push
adc
sub
or
jecxz
or
das
mov
std
out
sbb
mov
sub
cmp
in
jge
loopne
in
push
pop
jno
call
inc
movs
call
pop
out
outs
cmc
mov
sub
out
bound
fnstcw
inc
loop
mov
pop
sbb
jne
mov
xor
(bad)
sahf
lock
jae
scas
les
(bad)
jmp
add
popf
mov
(bad)
mov
sub
inc
ficomp
mov
mov
addr16
mov
cmp
pop
xchg
mov
inc
push
and
add
mov
xchg
aaa
pop
xor
call
scas
sub
in
icebp
(bad)
fisttp
mov
(bad)
mov
std
stc
hlt
mov
xchg
(bad)
repnz
cs
mov
sub
dec
cmp
aad
cmps
sbb
sub
adc
pop
and
mov
xchg
sbb
icebp
pushf
xor
adc
sbb
das
movs
je
and
and
pop
push
cmp
hlt
sub
sbb
ret
call
jl
push
fsub
ss
adc
xchg
cmp
push
call
stos
int
sub
mov
jmp
shr
iretw
mov
ficom
mov
inc
add
sbb
sahf
sti
(bad)
aad
lock
fs
cwde
pushf
gs
popa
xor
jb
sub
iret
xor
push
popa
into
sti
mov
daa
aad
les
and
sub
dec
fdivr
add
lods
stos
movs
adc
mov
xchg
mov
ins
fwait
(bad)
mov
jnp
cmc
sbb
or
hlt
je
iret
(bad)
or
ds
pop
or
fcomp
loopne
out
je
or
xchg
loope
hlt
cmp
in
pushf
mov
cmp
loope
adc
adc
popf
(bad)
test
mov
push
(bad)
inc
imul
aas
and
xchg
mov
inc
or
aad
ret
inc
imul
div
mov
(bad)
cmp
or
cmp
add
pop
pop
rol
lahf
sar
call
jns
stos
xchg
outs
sahf
ja
outs
jl
pop
gs
push
sub
jge
stos
ja
mov
cmp
out
scas
ds
jmp
in
lea
adc
scas
cmp
pusha
in
sbb
push
lods
mov
lahf
stos
xchg
xor
add
cmp
push
jl
inc
pop
mov
mov
inc
and
(bad)
(bad)
test
rcl
pop
push
(bad)
mov
test
into
pop
add
mov
dec
fdivp
mov
mov
dec
hlt
repnz
imul
inc
pop
dec
pusha
dec
hlt
into
mov
lock
addr16
cli
dec
mov
mov
ret
mov
xchg
outs
call
gs
mov
jecxz
and
faddp
dec
cdq
jecxz
sbb
push
cld
aaa
push
icebp
cmc
pushf
mov
idiv
in
mov
jle
leave
fs
xchg
(bad)
cmp
stos
cli
in
adc
xchg
rol
cmc
pop
aad
icebp
xor
and
push
xchg
call
(bad)
mov
out
adc
les
call
sbb
sbb
jno
sbb
mov
inc
mov
push
jge
cmp
cdq
stos
pop
cwde
stc
lods
cmp
in
sahf
clc
add
mov
push
xor
or
push
sub
int
push
lea
xlat
mov
sub
pop
add
outs
arpl
shr
mov
test
inc
and
mov
push
and
mov
repz
push
mov
cli
mov
mov
cmovle
nop
inc
inc
cmc
mov
pop
mov
in
enter
ss
ins
mov
jl
dec
xor
mov
rol
test
or
mov
imul
retf
int3
and
cmp
mov
aaa
inc
arpl
push
lods
add
inc
xchg
inc
stc
mov
xor
add
xor
fdiv
std
jmp
mov
test
in
ds
or
sbb
loop
push
out
dec
cmp
rcr
dec
ret
inc
xchg
popa
dec
sbb
dec
aad
scas
inc
xchg
xchg
or
imul
daa
dec
je
cmp
xchg
add
popf
fstp
inc
mov
gs
cmc
popf
mov
jp
jnp
adc
das
mov
jecxz
and
in
call
ret
out
inc
dec
add
mov
(bad)
sub
dec
cmp
lock
push
in
add
cmc
sub
xchg
in
push
scas
mov
(bad)
aas
cmp
mov
xchg
inc
pop
cmps
and
mov
mov
call
xchg
lahf
(bad)
push
jle
leave
(bad)
pop
xor
push
jecxz
sbb
aad
nop
lock
in
xchg
add
jne
mov
mov
stc
push
fs
mov
jle
dec
out
jp
aas
and
push
cs
dec
cmp
mov
pop
mov
clc
mov
pop
xchg
aaa
retf
loop
shl
push
fist
xor
and
lock
test
je
xor
add
test
and
xchg
cli
rcl
jle
pop
movs
mov
or
pusha
mov
mov
mov
inc
cmp
mov
sbb
dec
inc
xchg
test
jmp
xchg
call
xchg
jnp
xor
add
ret
ss
cmp
jnp
inc
and
in
cmp
(bad)
(bad)
mov
xchg
scas
push
popa
lods
dec
mov
enter
or
push
dec
mov
xchg
scas
mov
stos
in
dec
rcl
push
out
inc
mov
ror
mov
out
push
mov
ins
sub
je
(bad)
call
ret
push
inc
clc
stc
out
mov
pop
ja
les
pop
jge
jl
or
setle
cmp
sub
std
fcmove
sahf
mov
xchg
inc
dec
pop
addr16
mov
jno
and
cld
pop
cmps
loopne
xlat
xchg
jnp
mov
and
addr16
sub
fistp
ins
sub
jb
mov
loop
mov
dec
loopne
mov
movs
sbb
in
in
sub
lea
(bad)
sbb
dec
rol
push
fiadd
popa
mov
cli
inc
cmps
pop
or
mov
imul
shl
shufps
dec
mov
pop
inc
test
jae
sbb
push
xchg
mov
mov
or
jbe
jmp
xchg
sub
outs
(bad)
or
imul
xchg
push
xchg
fsubp
dec
std
jbe
stos
or
not
(bad)
test
sub
nop
sub
sub
cmp
inc
retf
into
jecxz
out
popf
adc
in
fdivr
adc
(bad)
cmc
xchg
dec
call
(bad)
mov
or
pop
inc
and
fidiv
repnz
inc
adc
mov
add
cmps
lahf
int3
outs
mov
xor
pop
movs
xchg
clc
mov
cmp
call
cdq
nop
push
mov
div
shl
enter
(bad)
or
int3
not
ds
push
shl
shr
adc
(bad)
xchg
xor
pop
sbb
enter
je
jmp
jno
retf
frstor
cli
in
popa
jmp
mov
pop
(bad)
ret
and
aad
inc
ficom
ja
shr
es
pop
sti
data16
ja
push
dec
jae
jmp
and
mov
mov
call
mov
(bad)
jmp
and
pop
hlt
stc
inc
mov
rcl
add
mov
fistp
bound
cmc
xor
rcr
mov
or
dec
push
pop
and
shl
mov
lock
jb
push
mov
pop
sbb
sbb
mov
add
or
sti
adc
sbb
out
sbb
mov
jl
stc
mov
mov
sahf
mov
out
sub
jmp
stos
in
clc
pusha
mov
xor
and
sub
sub
iret
leave
mov
lods
test
pop
call
adc
or
sbb
pop
test
cmp
(bad)
push
rcl
dec
add
push
or
cmp
push
jo
outs
push
adc
(bad)
(bad)
aam
lock
(bad)
pusha
dec
pop
loopne
mov
or
cmps
sbb
cli
movs
les
ficomp
or
data16
xchg
retf
mov
mov
lea
mov
in
push
cld
mov
and
jb
mov
mov
in
mov
xchg
inc
push
out
test
sbb
mov
and
mov
xchg
aam
push
js
test
push
pop
pop
mov
int3
push
pop
jmp
aas
cmp
cmp
ret
shr
cmps
push
imul
xchg
in
push
and
jno
push
jne
mov
pop
loopne
mov
ja
loopne
push
shl
ins
add
dec
fstp
rcr
adc
inc
inc
ror
mov
xchg
fcomip
rcl
jb
pop
dec
rol
adc
sti
add
inc
movs
stos
jp
sbb
push
jnp
and
popfw
jge
arpl
cmp
xchg
dec
cmp
aad
ja
ss
xchg
dec
ret
movs
call
dec
push
inc
or
pop
pop
xor
rol
ja
mov
jns
bound
test
mov
lods
iret
cmc
idiv
loopne
mov
lods
das
and
pop
mov
fs
ss
dec
cmp
rcr
adc
inc
lahf
adc
les
cdq
in
rcl
cmp
rol
sub
dec
dec
jne
jbe
dec
push
dec
xor
add
ret
jmp
fdivp
jo
jo
retf
inc
stos
mov
out
add
add
inc
inc
call
cs
jmp
add
add
lods
mov
sahf
pop
adc
add
pusha
xchg
or
add
hlt
mov
sub
and
push
inc
sub
xlat
fild
xchg
push
retf
mov
jae
cmps
(bad)
and
call
jp
adc
dec
adc
and
loope
or
dec
ficomp
fst
push
xchg
shl
ret
xor
outs
jl
and
xor
adc
gs
(bad)
sahf
mov
daa
mov
inc
pop
mov
(bad)
fcomp
adc
call
jmp
movs
push
test
jne
imul
mov
inc
mov
inc
retf
repnz
pop
mov
or
add
dec
idiv
mov
je
jno
push
stc
fcom
pop
sbb
xor
retf
loopne
and
mov
xchg
dec
in
dec
int
jo
mov
inc
xchg
xlat
xor
daa
or
inc
cmp
mov
int
jg
mov
test
(bad)
int3
mov
in
or
xchg
hlt
add
cwde
sar
inc
and
push
dec
loopne
adc
retf
ret
xor
xor
push
call
outs
enter
nop
fwait
dec
test
push
jae
pop
sbb
ss
adc
stos
add
pop
xchg
and
ror
scas
mov
mov
and
pushf
push
xchg
gs
pop
push
or
movs
and
cmp
shl
test
xor
inc
mov
pop
adc
ret
and
add
int3
sbb
xchg
in
imul
xor
pop
movs
inc
and
or
ds
xor
jmp
xchg
mov
or
push
iret
or
cs
stos
sbb
inc
or
shl
mov
hlt
inc
adc
in
or
aad
pop
add
cmp
int
movs
xor
push
scas
daa
lds
aas
mov
sbb
add
jg
mov
push
out
xchg
push
daa
pop
clc
leave
xchg
adc
push
pop
pop
push
pop
sub
fwait
add
imul
dec
mov
pop
int3
push
out
fwait
mov
fwait
jmp
mov
jp
push
(bad)
xchg
mov
imul
mov
and
xor
inc
loope
cmc
mov
xchg
shl
push
jmp
pusha
mov
mov
pop
or
cld
movs
data16
lds
in
stos
jmp
ret
(bad)
jmp
outs
cwde
jmp
mov
sbb
adc
add
inc
pop
sbb
enter
(bad)
sub
mov
xlat
xchg
pop
sub
ds
iret
popa
jmp
cmps
std
xor
jle
jns
bound
push
lods
mov
idiv
mov
and
aas
ss
inc
js
xlat
inc
inc
ja
nop
dec
aaa
test
mov
test
mov
xor
xor
in
mov
das
and
test
mov
mov
xor
xchg
enter
jecxz
sub
inc
xchg
dec
mov
jecxz
loopne
xor
pop
sbb
mul
cs
xor
ror
xchg
inc
push
sub
mov
call
repnz
enter
outs
dec
xor
dec
out
pusha
(bad)
stos
es
ret
test
xor
jg
bound
xchg
fimul
or
dec
mov
lods
aad
call
lock
sub
mov
dec
and
test
or
mov
or
inc
push
ret
in
or
icebp
fisubr
or
jae
jmp
test
add
push
cdq
push
test
jg
push
(bad)
push
aam
(bad)
movs
aam
and
jg
sar
cdq
dec
sbb
jl
cmp
sbb
outs
fstp
rol
fwait
adc
pusha
rcl
int
mov
sbb
pop
xchg
dec
mov
xchg
sbb
mov
mov
push
or
in
call
sti
scas
sbb
mov
sub
jecxz
ret
add
jmp
stos
mov
dec
pop
add
repnz
xchg
retf
xchg
push
aaa
or
shl
daa
ret
or
mov
cmp
jl
dec
adc
fidiv
movs
push
push
mov
aaa
jmp
jae
and
retf
and
jb
fdiv
xchg
ins
sbb
std
jbe
xchg
and
mov
cs
dec
scas
sbb
jnp
iret
(bad)
repnz
clc
mov
cld
jecxz
pop
out
(bad)
pop
pop
adc
out
cmc
mov
ret
std
add
imul
inc
fsub
mov
xlat
sbb
sub
stos
mov
dec
imul
mov
fistp
sahf
int
pop
out
add
cmp
add
jne
scas
rol
and
xchg
jecxz
jmp
fcmovnbe
jns
daa
xlat
dec
add
ds
aad
(bad)
fsubrp
push
enter
push
lock
jmp
out
imul
enter
int
je
xchg
sbb
and
std
sbb
xchg
fstp
xchg
mov
jne
jae
mov
pop
mov
and
xchg
ret
aad
mov
int3
jbe
dec
or
cmps
test
add
xor
ja
dec
and
rol
xor
jp
mov
and
cdq
jmp
repnz
mov
or
fistp
add
cmp
xor
mov
mov
jns
lea
enter
xchg
cwde
inc
pop
push
cwde
test
mov
scas
jmp
add
cmp
inc
cmp
inc
rcl
ret
pop
push
sar
pop
xchg
mov
jnp
icebp
mov
add
stos
adc
sbb
(bad)
in
fs
dec
cmps
sub
ficomp
dec
jg
mov
lods
in
pop
and
and
mov
lahf
mov
mov
cmp
sbb
(bad)
int
cmc
xor
inc
fidiv
bnd
out
repz
jmp
fimul
and
inc
cmp
pop
pop
cmp
sub
adc
(bad)
bound
mov
cmp
pop
in
pop
xor
sub
aam
xchg
push
jmp
inc
sub
push
imul
test
mov
inc
xchg
push
mov
mov
js
sub
or
or
push
fdiv
fwait
xor
leave
aam
xor
jl
repz
xchg
test
xor
jbe
jb
and
pushf
mov
jecxz
mov
or
sbb
(bad)
mov
addr16
or
jecxz
jmp
cmp
aam
jmp
and
cmps
sti
imul
sub
cmp
inc
rcr
stos
xchg
das
push
aas
xchg
push
(bad)
loop
call
mov
scas
or
push
in
call
nop
mov
ret
pop
or
pop
push
repnz
fadd
cmp
mov
scas
jl
dec
cmc
push
dec
xchg
pop
stos
and
inc
and
aad
xor
sbb
or
nop
inc
pop
ret
inc
or
in
(bad)
ret
int
lock
sbb
mov
mov
jne
pop
inc
retf
mov
push
jns
xor
jmp
outs
dec
test
dec
mov
pop
pop
mov
mov
gs
imul
inc
out
cmp
xchg
adc
lock
pop
inc
call
scas
int
scas
xor
push
mov
sbb
aas
xor
sub
inc
call
lds
xchg
sub
dec
xchg
mov
fst
and
(bad)
test
js
pop
in
mov
mov
ins
fidivr
xor
rcl
ror
add
jmp
xchg
or
les
mov
popf
int3
shr
ins
xchg
call
dec
int3
adc
call
cld
mov
das
pusha
sysexit
mov
ja
and
sub
cmp
push
ror
loop
pop
jecxz
adc
sub
dec
out
repz
mov
out
jmp
cmp
add
retf
stos
sub
das
shl
pop
jo
(bad)
outs
mov
int3
push
xchg
rcr
pop
pop
mov
(bad)
push
rcr
sub
push
rcr
cmp
mov
jns
pop
test
sbb
cmps
jmp
dec
push
pop
aaa
mov
ror
pop
cmp
or
repz
pop
pop
mov
and
les
stos
inc
dec
pop
inc
push
int
inc
mov
push
jecxz
into
sub
xchg
lds
pushf
add
pop
add
push
std
pop
or
fisttp
add
jo
xchg
and
pop
lock
jae
out
(bad)
jae
jae
mov
leave
jo
test
in
int3
scas
adc
aad
push
movs
pop
aam
jmp
popa
retf
bswap
fdiv
sbb
ss
push
adc
or
cmp
cmp
sub
add
adc
mov
sbb
cmp
jmp
cmp
mov
(bad)
in
jmp
aas
push
fcom
jae
mov
adc
jge
test
xor
pop
scas
inc
lods
xchg
ins
loope
ficom
(bad)
leave
add
or
push
inc
dec
int3
inc
popf
push
cmp
xchg
cld
add
add
lock
jecxz
sar
jp
xchg
cmc
sub
jp
bound
fs
out
ss
aas
adc
cmps
and
push
adc
pop
mov
mov
and
push
test
sti
popf
or
adc
movs
xchg
addr16
xchg
cmp
outs
mov
mov
std
pop
aad
scas
cmps
rol
mov
mov
test
jns
fs
sbb
and
rol
(bad)
mov
mov
adc
lea
in
int3
sub
sbb
xchg
cmp
mov
adc
and
xchg
dec
gs
xor
mov
xchg
push
dec
add
jg
aam
outs
sahf
jae
icebp
aad
mov
dec
push
inc
jg
out
mov
xchg
inc
std
mov
mov
inc
dec
nop
outs
push
jo
test
ins
(bad)
scas
ret
adc
test
mov
push
(bad)
shl
js
cmp
adc
das
mov
or
inc
out
push
mov
sbb
js
test
pop
arpl
test
sar
mov
idiv
addr16
lds
inc
pop
in
jne
loop
stos
sub
xchg
je
popa
test
or
ja
mov
movs
fstp
dec
cmp
dec
imul
mul
les
imul
outs
rcr
or
fidivr
movs
lahf
gs
mov
push
pop
in
repz
pop
jl
fwait
sub
mov
push
sbb
xor
mov
mov
int
xor
push
mov
repz
dec
cmp
enter
cli
pop
out
test
xchg
(bad)
mov
int3
xlat
jle
mov
mov
or
hlt
ins
and
mov
xchg
cmp
ret
mov
pop
std
add
sahf
imul
ret
das
or
mov
xor
sbb
fadd
je
or
lods
mov
repz
fcomp
(bad)
inc
xchg
xchg
fst
mov
in
out
out
sub
gs
cmp
gs
mov
add
add
mov
push
hlt
jge
mov
test
cmp
and
cli
add
or
in
pop
xor
out
push
push
popf
fs
ja
jge
xor
inc
lock
sahf
mov
adc
out
test
jo
outs
loop
jmp
addr16
pop
or
clc
rcr
xchg
inc
iret
movs
aam
ds
shr
lods
daa
push
inc
mov
out
in
sub
test
movs
lods
and
(bad)
add
sub
js
dec
jge
cli
fnstcw
cwde
mov
inc
sar
lds
sub
xor
mov
leave
or
hlt
cmps
pop
(bad)
pop
inc
daa
dec
sub
ja
(bad)
jmp
cs
push
icebp
mov
xor
addr16
cmp
daa
test
sbb
or
(bad)
sbb
xor
adc
fbld
jge
sub
dec
push
inc
or
and
pop
lock
clc
adc
movsx
pop
lock
adc
and
jmp
setns
add
fmul
outs
sub
rol
cmps
xchg
lock
imul
mov
jg
ret
fnstcw
inc
(bad)
ins
push
push
lods
(bad)
pop
out
pop
push
pushf
cmc
mov
mov
mov
cdq
adc
sub
in
rcr
mul
jmp
mov
imul
ins
cmps
inc
repz
(bad)
mov
add
div
jmp
sub
rol
std
xchg
rcr
jnp
mov
repz
mov
scas
ficomp
dec
sbb
cmp
stos
loopne
test
push
into
jne
xor
xchg
test
in
(bad)
mov
es
outs
pop
push
adc
ficom
into
enter
movs
mov
mov
lods
cmp
cld
push
aas
inc
rcl
add
pushf
scas
jb
les
in
or
(bad)
outs
inc
pop
pop
jecxz
add
ja
test
js
xchg
add
dec
jmp
sbb
cmp
jae
mov
rcl
sbb
std
or
lahf
ficomp
fwait
jmp
mov
ja
in
sub
mov
pop
inc
clc
mov
or
popf
cmps
or
sbb
fwait
mov
cmp
test
pop
xchg
iret
mov
cmp
ds
lds
in
fsubr
xchg
test
or
into
push
jg
jo
movs
aad
call
cdq
loop
jecxz
adc
sub
rol
ja
seta
dec
arpl
(bad)
(bad)
retf
push
test
sbb
xor
mov
rcl
test
add
mov
retf
sub
dec
dec
sti
jmp
lods
cwde
div
or
or
cmp
add
pusha
fwait
adc
adc
loop
fdiv
mov
sbb
aas
push
jb
push
dec
fdiv
mov
mov
jno
xor
scas
into
sbb
popf
dec
xchg
add
lods
(bad)
xchg
jmp
repnz
mov
mov
stos
das
pop
push
sub
jge
push
rol
mov
mov
or
adc
adc
xor
(bad)
push
sub
(bad)
cmps
sub
rcl
or
and
cmc
sub
push
daa
loopne
inc
mov
xchg
cdq
sub
fcmovne
sub
push
call
lods
pop
call
ror
mov
push
fist
scas
jo
clc
dec
inc
sub
out
ss
pop
ds
adc
dec
jle
repz
cmp
mov
mov
int
mov
add
lods
mov
xor
adc
out
(bad)
push
ss
and
inc
(bad)
imul
pop
mov
aas
mov
push
and
mov
sti
sbb
pop
call
stc
sbb
lods
lea
sub
push
pop
ret
xor
push
adc
test
push
xor
xchg
pop
push
ins
sahf
dec
cmc
push
dec
leave
popa
adc
fs
sub
push
(bad)
sub
cdq
mov
fwait
ins
les
xchg
pop
sub
push
dec
or
inc
mov
jle
dec
stos
aas
imul
mov
shl
jno
adc
ret
pushf
fxch
test
cdq
mov
fstp
jae
sar
fst
adc
mov
sub
xlat
loope
mov
leave
lea
mov
mov
dec
mov
bound
or
push
mov
xor
mov
sbb
push
cmp
test
lea
cmp
xor
dec
cmp
push
int
fs
sahf
mov
inc
xchg
loopne
mov
jp
int
mov
(bad)
mov
outs
data16
(bad)
push
in
fcmovb
jp
cwde
cmps
xor
retf
cmp
sbb
add
int
scas
mov
aas
loop
mov
xor
stc
cwde
mov
or
popf
or
dec
jns
repnz
out
xchg
clc
popf
pop
dec
stc
cmp
int
xchg
out
mov
int3
cld
test
lods
dec
and
mov
out
sbb
push
into
inc
ret
xor
pop
dec
jge
fcom
outs
aas
test
pusha
or
hlt
repnz
stos
mov
(bad)
pushf
jb
les
push
or
nop
pusha
push
(bad)
popa
sbb
mov
adc
daa
jle
test
sub
out
fisttp
fistp
mov
addps
aam
inc
cmp
lock
pop
xchg
ret
call
xor
xor
xchg
enter
jns
cld
(bad)
push
cld
mov
xchg
mov
or
xor
inc
out
sti
and
fidivr
jp
lea
bound
jle
or
lds
daa
pop
mov
jno
dec
cmc
adc
rcr
js
inc
ror
popf
imul
cmp
mov
mov
cmp
adc
mov
inc
(bad)
jmp
pop
sub
jl
clc
adc
cmc
(bad)
and
inc
jmp
shl
sub
jb
jmp
(bad)
mov
mov
add
add
and
inc
fwait
xchg
mov
fcomp
inc
ffreep
fbld
fld
jae
mov
dec
retf
dec
fidiv
rcl
xchg
mov
xchg
into
mov
lds
aaa
js
jbe
aad
xchg
pusha
data16
aad
loope
(bad)
in
inc
cmp
xchg
xchg
push
add
lock
sub
aaa
and
cmps
fwait
ins
dec
in
xlat
pop
jmp
leave
stos
pop
mov
jg
xchg
sbb
fs
mov
sahf
and
mov
adc
dec
ss
xor
out
(bad)
sub
push
inc
xor
cmp
sbb
cmc
cmp
mov
(bad)
add
fs
popa
or
inc
jg
outs
rcr
inc
or
jp
dec
jmp
ror
mov
pop
jp
(bad)
fmul
aaa
(bad)
pop
call
into
jmp
lea
push
int3
cmp
stos
mov
ins
sub
mov
cmp
cmp
inc
cmp
push
mov
mov
adc
aam
sar
xchg
xchg
arpl
test
rol
jge
xor
mov
cmp
fld
inc
test
arpl
aaa
dec
aaa
mov
js
push
pusha
xor
or
push
fldenv
mov
fsub
sbb
shl
sbb
adc
add
fbstp
inc
ins
aam
xchg
int3
or
mov
pop
imul
mov
lahf
mov
arpl
push
mov
pop
mov
adc
pop
adc
leave
dec
jns
jns
adc
jmp
mov
ja
movs
enter
push
int
add
ss
loop
call
fwait
cmc
push
inc
jns
rcl
dec
pop
ss
pop
out
int3
lods
mov
cdq
mov
push
adc
adc
inc
mov
and
mov
or
push
or
in
cmps
adc
mov
iret
movs
test
ss
mov
sti
fisub
pop
ror
mov
lods
mov
dec
imul
aaa
inc
sub
nop
dec
outs
jb
fs
addr16
adc
lods
fmul
inc
cld
sar
stos
dec
xchg
fst
scas
or
push
ds
inc
mov
jl
aad
je
cmp
inc
dec
jmp
out
jns
mov
mov
ret
sahf
mov
push
loope
movs
je
cwde
sub
loop
pop
add
jnp
lahf
add
in
js
ret
or
inc
or
push
pop
fcomip
dec
(bad)
nop
fxch
xchg
inc
jecxz
retf
retf
retf
das
dec
dec
dec
loop
mov
out
xchg
sub
sbb
or
jle
mov
test
mov
push
mov
and
inc
(bad)
imul
dec
push
sahf
add
icebp
cmps
std
js
adc
rcl
shl
or
inc
mov
mov
cmp
test
ficom
fldcw
mov
iret
mov
mov
xchg
adc
scas
fisttp
int3
dec
cwde
mov
ja
stos
push
in
add
loopne
int3
pop
arpl
pop
jo
ss
bound
scas
jns
add
fwait
sti
dec
aam
xchg
nop
mov
test
cmp
push
cwde
iret
mov
icebp
xchg
call
and
jl
add
(bad)
mov
adc
xor
stos
ret
jp
nop
clc
jge
add
iret
xchg
enter
xor
push
aam
xor
jmp
cmp
or
sbb
shl
mov
push
pop
xor
xchg
cmp
test
or
inc
nop
repz
sub
sub
shl
sbb
(bad)
or
ins
mov
push
add
sti
mov
repz
mov
sbb
mov
push
add
hlt
sub
mov
test
add
sbb
dec
mov
cmp
cmps
sbb
pop
leave
shl
hlt
jecxz
push
stc
and
retf
dec
test
fsubrp
sub
push
arpl
fld
cmp
jecxz
ss
sub
in
lahf
dec
aad
or
fistp
in
xchg
stos
gs
add
fdivr
cmp
jg
dec
jnp
mov
or
push
sub
pop
fwait
bound
movs
or
jmp
lods
into
call
fldcw
inc
leave
pop
imul
ins
ret
add
mov
mov
in
xchg
nop
sbb
retf
xor
mov
push
dec
repz
lock
mov
rol
cmp
jb
into
gs
jmp
(bad)
cs
push
jae
fstp
push
iret
movs
ror
add
js
scas
pusha
xlat
jb
sbb
add
lahf
and
fdivr
xchg
mov
adc
pop
jno
push
mov
nop
ss
push
cmps
jo
pop
mov
addr16
cmc
cwde
sbb
adc
les
mov
xlat
fistp
or
out
outs
(bad)
inc
jecxz
dec
dec
lea
push
bound
push
push
movs
cmps
mov
clc
in
fstp
mov
push
lea
dec
mov
scas
and
js
mov
mov
dec
mov
imul
out
ins
ret
xchg
pushf
adc
xor
dec
shr
push
rcl
ss
xor
fs
and
ins
push
gs
sbb
(bad)
out
es
ins
fcom
mov
retf
sub
fnstsw
popf
jb
stc
and
cmp
in
inc
stos
retf
pop
mov
cmp
jle
fbld
hlt
xchg
popf
popa
xchg
das
dec
push
mov
fmul
imul
xlat
push
push
add
push
and
mov
add
stos
jmp
rcr
mov
push
sub
mov
adc
adc
xlat
mov
add
ret
scas
and
jbe
sub
gs
aam
and
jnp
xchg
cmc
xchg
inc
retf
int3
sub
sub
(bad)
mov
mov
ficom
leave
dec
popf
xor
in
sub
ss
xchg
das
mov
call
bound
test
stc
sbb
add
ss
test
mov
inc
sub
in
mov
gs
push
aam
mov
mov
fdiv
inc
ret
and
or
sub
(bad)
cli
cmp
add
mov
in
aad
sub
jbe
xchg
in
xor
jno
popf
jmp
aaa
shl
scas
test
ret
pop
pop
ret
fimul
push
and
xlat
push
push
cli
jmp
add
aad
inc
xchg
pop
xor
rcl
or
jnp
aam
mov
call
outs
dec
xor
fsub
inc
inc
ins
push
data16
mov
icebp
push
movs
or
jbe
scas
(bad)
in
jbe
inc
repz
push
loop
sbb
call
bound
adc
inc
push
in
pop
sub
iret
jbe
xchg
les
rol
sbb
xchg
xchg
lock
shr
mov
inc
ins
cmp
mov
cmp
inc
fldenv
mov
jg
in
jle
jbe
mov
fsincos
loope
sub
stos
loope
mov
jo
rcr
js
adc
push
je
(bad)
bound
mov
enter
dec
aaa
mov
and
push
(bad)
jae
mov
mov
cs
inc
lods
call
dec
repnz
sbb
mov
aas
ss
bound
pop
pop
cmp
aad
jmp
add
enter
rcl
call
mov
(bad)
pop
pop
push
adc
ds
adc
sbb
(bad)
add
cmc
xchg
push
sub
ins
lea
stc
pusha
scas
out
push
retf
popa
retf
xor
lods
sbb
lock
mov
bound
enter
jmp
pop
sub
mov
std
pop
push
popf
push
and
cmp
xchg
push
rol
popa
xor
ins
mov
enter
xchg
jmp
and
iret
aas
sub
movs
test
daa
(bad)
add
or
and
aad
or
cmp
jbe
movs
int
and
pop
and
xchg
mul
cwde
push
mov
jle
xor
cmc
sub
jg
aaa
push
and
mov
adc
sbb
cmp
jle
paddsw
adc
shl
inc
(bad)
cli
in
or
sbb
jno
mov
pop
ret
xor
sbb
add
jns
sbb
out
aam
inc
push
lea
mov
mov
sub
adc
sub
ror
pop
cmp
cld
adc
add
pushf
and
pop
mov
push
daa
es
(bad)
and
adc
mov
xchg
sub
stc
xchg
pop
cld
aad
sbb
mov
adc
xchg
xchg
push
mov
fsubr
(bad)
inc
dec
jp
sti
inc
icebp
add
jbe
rcr
sub
xor
pusha
inc
fild
and
inc
dec
mov
add
enter
adc
mov
movs
push
loop
xchg
adc
int
fsub
test
or
push
icebp
hlt
jae
(bad)
sbb
out
sti
mov
cmc
repz
dec
mov
test
fsub
sbb
shl
xchg
and
mov
pop
imul
adc
sahf
int
lahf
sbb
sbb
into
sbb
lock
adc
movs
inc
in
outs
adc
test
mov
xchg
movs
sbb
jnp
ret
jae
test
arpl
in
test
sub
dec
dec
inc
out
test
std
add
mov
ret
(bad)
dec
mov
inc
and
dec
movs
test
xor
frstor
mov
inc
rol
pop
xchg
clc
xor
es
mov
je
push
mov
cmc
mov
mov
mov
repz
icebp
mov
jo
mov
sub
jecxz
bswap
and
sbb
daa
jne
popa
push
dec
dec
shl
aaa
add
data16
jae
mov
xor
mov
and
jl
les
cmps
fldenv
jle
daa
add
inc
fiadd
cld
mov
jmp
dec
fcomp
or
mov
add
fwait
xor
(bad)
sbb
je
mov
xlat
pushf
out
jl
shl
push
mov
pop
in
imul
add
movs
cmp
imul
stos
sub
sub
enter
leave
sub
shr
fwait
sub
test
sub
mov
std
cld
push
movs
and
lods
ss
in
inc
add
mov
inc
sub
cmp
dec
push
or
out
xchg
int
push
push
sbb
or
jno
scas
mov
(bad)
fucomip
(bad)
jnp
pop
div
dec
sbb
cmp
push
int3
addr16
js
fisubr
jge
rcr
inc
xchg
dec
je
mov
inc
cmp
or
add
add
xchg
sub
mov
pop
adc
ins
or
adc
int
jo
cs
iret
or
enter
test
enter
popf
outs
repz
push
push
in
(bad)
retf
dec
cmps
pushf
idiv
fwait
sar
retf
out
xor
stos
outs
xchg
aas
jnp
xchg
add
dec
push
movs
cli
push
loopne
neg
inc
dec
paddw
leave
cwde
mov
push
inc
xchg
out
jg
and
shr
pop
jp
pop
push
cmp
jle
cmps
cmps
jnp
dec
pop
sub
into
or
mov
cs
mov
out
pop
loopne
sbb
fnsave
pop
xchg
fldcw
jle
lods
aas
cmp
jmp
cwde
jb
pop
stos
jne
pop
jb
outs
iret
dec
sahf
cmp
cmps
add
(bad)
cmp
jae
cmp
mov
std
addr16
hlt
xor
loope
or
inc
je
out
lock
push
dec
scas
pop
add
jge
mov
jbe
jo
rcr
add
(bad)
mov
jbe
xchg
inc
sbb
fldcw
xchg
xor
jno
pop
cdq
aas
fld
lahf
mov
nop
jmp
inc
das
dec
rol
push
mov
adc
cmp
jns
add
mov
mov
popa
push
in
sbb
mov
popa
sbb
mov
dec
in
sbb
aaa
jo
inc
pop
js
cmp
popf
jae
pop
stc
rcl
test
rol
int3
inc
mov
xchg
add
mov
fidiv
or
int
mov
and
pusha
jns
lods
mov
fdiv
cmp
and
cmp
cli
leave
and
fwait
sub
bound
repnz
push
in
into
and
idiv
call
pop
xor
cmp
(bad)
push
mov
push
or
jle
loopne
and
xor
add
into
jo
mov
out
push
sbb
mov
das
icebp
sti
sti
sbb
inc
jmp
push
xor
push
cmps
adc
jnp
(bad)
sub
shr
aam
push
jo
loope
push
sub
test
push
les
mov
mov
jns
enter
sbb
ins
aam
cmp
in
cmc
mov
and
and
cld
fisttp
call
push
or
dec
adc
push
jmp
ins
sahf
xor
fcomp
dec
lds
pusha
in
push
sub
(bad)
jmp
mov
sub
stos
and
or
mov
sub
sbb
mov
push
icebp
lods
cmp
gs
ficom
ret
sub
inc
popa
pop
nop
jb
leave
aaa
lods
jmp
xor
dec
cmps
or
or
mov
sub
fs
jne
movs
sub
fdivr
loopne
test
pop
ins
xchg
sbb
shl
cmp
pop
and
jmp
mov
hlt
stos
out
stos
push
pop
mov
pop
push
imul
or
aaa
jae
outs
test
and
fst
fsubr
adc
outs
pop
mov
mov
lods
(bad)
xchg
shl
jmp
ffreep
xchg
push
(bad)
push
mov
cmp
clc
and
arpl
sbb
ins
jo
out
js
cmps
jns
fadd
rcl
mov
lds
stos
pop
cmps
(bad)
retf
jecxz
dec
in
cs
mov
cmc
jne
in
fmulp
xchg
mov
cmps
popf
out
shl
cwde
mov
xchg
pop
sbb
xchg
movs
test
fadd
arpl
mov
push
and
or
rol
movlps
gs
lock
int
loopne
push
push
jge
es
add
cmp
xor
leave
pop
(bad)
mov
cmps
popf
fdiv
dec
scas
cdq
cli
imul
jmp
fwait
mov
mov
call
push
xor
sti
or
ret
out
mov
xor
lea
out
loope
pop
call
mov
and
gs
xchg
or
cld
and
fs
push
push
inc
cmps
jmp
mov
jbe
rol
sbb
in
sub
loope
sbb
pop
lods
mov
fadd
add
xor
cmp
je
test
(bad)
out
hlt
push
nop
mov
and
pop
jnp
jmp
jns
fistp
les
ret
mov
pop
xchg
cmp
cmc
inc
jmp
jns
repz
arpl
sub
nop
pop
(bad)
xchg
scas
push
popa
js
(bad)
fcom
call
xor
mov
arpl
aas
lods
sub
or
add
add
add
sub
lock
mul
push
clc
imul
jne
retf
jmp
mov
xor
mov
mov
and
pop
jnp
stos
cmp
cwde
cmc
sub
jb
test
aam
inc
xor
adc
push
push
sub
xor
out
gs
int3
sub
pop
or
fild
scas
jb
loop
add
es
push
not
repz
sti
(bad)
mov
int
mov
lods
iret
cdq
les
adc
ss
out
and
push
in
loopne
jbe
xlat
lods
mov
(bad)
mov
sub
fcomp
scas
adc
pop
sbb
and
cmp
loop
jecxz
scas
aam
in
popaw
mov
lahf
shl
inc
push
(bad)
scas
mov
mov
mov
jmp
ret
repz
push
icebp
xchg
loopne
adc
ds
xor
std
icebp
in
sbb
mov
ja
dec
nop
xor
push
sbb
and
inc
add
xor
inc
mov
push
mov
adc
pop
stos
pop
mov
and
cmps
jo
jg
das
push
jl
lahf
(bad)
jb
and
adc
xor
lods
enter
lahf
sub
pop
iret
mov
movs
imul
call
cmp
xchg
push
pushf
mov
shl
(bad)
nop
fld
shl
or
jecxz
cmp
xchg
(bad)
cmp
or
jb
int
xchg
mov
fs
rol
fwait
mov
(bad)
push
jp
int
mov
mov
fsubr
push
and
xor
xor
dec
je
mov
xchg
mov
jns
or
adc
mov
clc
arpl
pop
pop
ss
and
mov
pusha
sti
int
mov
sub
(bad)
mov
mov
mov
cwde
fdivr
add
mov
cmps
or
and
(bad)
js
pop
adc
stc
test
pop
(bad)
stc
lock
dec
in
loop
push
mov
ins
in
push
sbb
xchg
inc
ret
imul
sti
cdq
out
hlt
into
xchg
mov
pop
mov
ja
inc
test
pusha
xchg
mov
div
shr
mov
adc
fstp
loop
out
cli
jno
pop
dec
(bad)
les
push
ja
ins
mov
out
xlat
lds
cmc
shl
loopne
xor
push
push
xor
pop
mov
ja
mov
sbb
xchg
xor
mov
mov
or
aaa
out
aam
push
js
popa
imul
adc
stos
repz
jl
aad
dec
rcl
mov
xor
arpl
retf
ss
push
bound
test
daa
hlt
mov
leave
lahf
sbb
mov
jns
jno
scas
add
mov
adc
in
or
jne
ins
or
or
jbe
adc
cwde
push
and
xlat
xchg
sar
pop
jmp
mov
unpcklps
mov
fcomp
jp
cmp
mov
rol
mov
arpl
push
jmp
cmp
into
mov
and
fsub
fld
shr
into
mov
fisubr
and
lahf
stos
mov
hlt
loopne
sahf
push
sahf
sub
and
movs
lods
cmc
cmps
xchg
std
repz
lahf
shl
loopne
inc
push
jne
or
aas
popa
xchg
(bad)
pop
push
sbb
nop
add
sti
cmps
add
pop
test
mov
adc
mov
ficom
ret
add
xor
mov
xor
hlt
push
adc
stos
(bad)
cs
arpl
push
call
cmc
clc
pop
mov
ret
lea
pop
xchg
call
jns
xchg
adc
fnstcw
cdq
jp
into
add
outs
dec
xchg
and
pop
rcl
mov
cmp
bound
daa
jo
push
mov
pop
push
add
mov
test
add
xor
inc
push
loope
lock
lea
int
gs
ja
push
fldenv
(bad)
xor
inc
jg
mov
lock
sub
push
dec
lahf
jnp
shl
repnz
and
adc
aam
and
mov
lahf
dec
cs
cdq
push
cld
mov
pop
adc
rol
cmp
jbe
xor
cs
addr16
sbb
ins
xchg
mov
cmp
sbb
rcpps
gs
rcr
pop
lods
rol
dec
jnp
and
mov
cmp
mov
mov
and
mov
sbb
adc
dec
inc
fidiv
pop
jl
dec
call
idiv
(bad)
fsubr
jmp
aam
xchg
push
pop
aas
mov
jae
ror
cmp
add
cmp
inc
xchg
and
fisttp
push
loopne
hlt
push
(bad)
imul
dec
push
xchg
ins
adc
test
xchg
xchg
cmps
mov
jo
or
mov
adc
mov
aam
inc
jo
mov
imul
call
xchg
loope
xlat
ins
inc
jb
stos
fst
jbe
mov
scas
mov
es
in
aad
push
stc
mov
fimul
ja
retf
mov
add
jnp
shr
xor
push
or
and
hlt
ja
cmc
stos
icebp
test
or
pop
and
xchg
xor
pusha
and
cld
call
push
aas
int3
pop
mov
hlt
in
xchg
fistp
outs
(bad)
sahf
xchg
or
loope
bound
sar
or
outs
or
call
out
scas
cmp
les
sbb
imul
ret
shr
cld
xchg
enter
neg
arpl
test
aad
lock
scas
mov
dec
mov
pop
fdivp
xor
das
sub
test
int
or
pop
aaa
dec
in
cmc
jle
pop
dec
fstp
cmps
ret
pop
jno
pusha
jg
adc
pop
sahf
jmp
xchg
pusha
xchg
mov
ficom
hlt
sbb
fwait
lock
cmc
stc
add
repnz
push
and
movs
test
loop
retf
das
jecxz
pop
adc
cmps
dec
or
xchg
jo
aam
lea
dec
shl
cmps
mov
or
xchg
pop
dec
adc
sub
cmc
jo
push
xchg
mov
sub
cdq
hlt
xor
lds
xchg
out
std
(bad)
enter
xchg
cmp
dec
ja
scas
cld
mov
cs
adc
mov
adc
bound
les
push
add
mov
(bad)
cmps
stos
pop
or
mov
cs
out
or
jmp
aad
out
cmp
fild
inc
pop
add
aaa
and
sbb
push
push
add
ret
inc
mov
or
mov
adc
push
dec
sti
int
adc
sub
jno
in
pop
iret
outs
and
loopne
iret
les
push
movs
sub
cdq
xchg
and
push
test
shl
mov
mov
stos
adc
inc
not
push
xor
pop
aaa
mov
icebp
(bad)
xchg
outs
pop
mov
aas
mov
outs
or
(bad)
cli
adc
pop
cmp
cs
push
or
cwde
or
xchg
jle
fwait
and
lea
(bad)
test
push
dec
inc
out
mov
cmp
mov
push
push
and
imul
push
stos
or
adc
and
mov
rol
scas
mov
test
aam
fcom
sub
jl
mov
xor
push
cli
outs
fwait
jo
(bad)
outs
inc
jle
imul
ret
sub
xchg
nop
cmp
pop
push
(bad)
mov
mov
ret
pop
mov
retf
shl
mov
and
xlat
push
leave
(bad)
bound
in
pusha
in
adc
div
cmp
adc
jle
imul
cmp
sbb
sub
xchg
sti
repnz
cmps
repz
movs
gs
fmul
stc
jns
xor
jnp
movs
push
jno
and
pop
dec
cdq
mov
call
xor
cwde
ja
leave
xchg
fadd
push
outs
jl
lds
mov
inc
jp
dec
dec
lock
inc
fld
rcr
enter
cmp
shl
push
cmp
scas
inc
mov
mov
cmc
arpl
nop
push
pusha
shl
outs
push
jecxz
dec
fld
int3
mov
mov
fucom
es
int
mov
dec
fadd
dec
shr
mov
and
int3
rcl
mov
pop
add
and
out
jge
(bad)
cmp
sbb
xor
sti
add
mov
div
and
pop
es
imul
retf
sbb
int
jmp
add
in
out
dec
(bad)
jp
push
rcl
inc
cwde
mov
sbb
ds
scas
ror
sar
pop
sbb
aam
outs
push
sar
adc
sahf
idiv
ins
cmp
int3
aaa
and
ret
jle
xor
adc
shl
push
aas
in
inc
es
xchg
jnp
aad
adc
std
(bad)
daa
xor
adc
je
jo
stc
clc
cmps
inc
ja
cmp
mov
popa
mov
int3
push
or
xchg
adc
leave
adc
adc
test
das
jp
out
cmp
lods
sbb
repnz
push
xor
outs
stc
mov
jns
inc
adc
adc
push
ja
neg
adc
lods
inc
fidivr
aam
dec
or
scas
push
enter
mov
sub
cmp
push
push
sbb
aas
inc
movs
mov
push
push
lods
outs
or
(bad)
jae
xchg
rcr
pop
movs
adc
add
imul
cmp
(bad)
je
and
adc
cmc
(bad)
cmp
lods
inc
das
stos
cli
push
mov
fdivr
sbb
push
jno
cmp
xor
mov
xchg
push
aad
dec
add
sub
cmp
jb
push
fild
push
popa
dec
(bad)
je
js
pushf
stos
jmp
push
movs
out
push
imul
cdq
sub
(bad)
arpl
pop
push
xor
pop
outs
sbb
jmp
repz
pop
mov
adc
sub
sar
dec
sub
mov
in
sahf
cwde
push
shl
inc
sub
push
xor
mov
pop
stc
ss
dec
aam
hlt
mov
and
into
repnz
and
jno
mov
outs
das
sub
xor
mov
push
xor
out
stc
xor
cmps
mov
ror
pop
push
mov
or
push
test
scas
mov
mov
cmp
xchg
(bad)
les
mov
dec
sti
bound
mov
hlt
jl
test
out
aam
nop
in
loopne
adc
ror
stos
call
inc
gs
retf
and
and
in
xor
xchg
push
add
aaa
hlt
lods
dec
xchg
scas
cs
jge
mov
push
jno
je
fist
scas
or
pop
jbe
sbb
dec
sbb
retf
scas
push
les
repz
or
dec
push
xchg
enter
cdq
push
sub
mov
sbb
loopne
mov
in
cmc
jp
push
inc
mov
(bad)
sbb
mov
add
cmp
inc
sbb
jecxz
sub
pop
sar
or
mov
push
mov
(bad)
fs
enter
mov
loop
aas
les
es
mov
xor
hlt
bound
mov
jo
xchg
loope
fldcw
jno
dec
mov
aaa
push
mul
adc
das
sub
xor
mov
inc
fiadd
jno
mov
daa
mov
(bad)
ja
mov
sbb
inc
scas
sbb
fcmove
mov
sbb
mov
out
dec
sbb
cmp
repnz
and
jno
mov
inc
test
jnp
outs
or
les
sbb
mov
xchg
or
lds
pop
(bad)
fcmovnb
das
inc
shr
adc
cs
fldenv
xchg
add
test
mov
(bad)
hlt
adc
mov
mov
jg
mov
hlt
and
jg
icebp
out
sub
inc
inc
add
arpl
sub
mov
std
ds
fwait
jns
push
in
call
cdq
sbb
pop
in
sub
push
or
fistp
sbb
fsub
jmp
ror
cmp
jl
sbb
or
xchg
(bad)
xchg
cmp
movs
aaa
ins
std
in
mov
scas
jl
adc
fs
daa
cli
(bad)
or
imul
xchg
cmps
jle
mov
iret
ficomp
fnsave
push
adc
jg
fwait
adc
add
push
adc
pop
push
fs
push
lods
or
mov
add
mov
pop
rol
add
push
dec
push
arpl
sti
out
cmc
(bad)
retf
ins
out
adc
hlt
push
mov
imul
fdiv
aad
cs
std
(bad)
imul
into
pop
in
sbb
lods
cmc
psubsb
dec
and
mov
ins
xchg
xor
xchg
out
sbb
xor
shl
add
mov
mov
movs
cdq
cmc
fdivrp
jo
sbb
mov
jg
mov
ja
push
mov
pop
sub
mov
and
fild
pop
repnz
jmp
cmp
pop
les
cmps
dec
adc
arpl
cld
ins
mov
xlat
cli
(bad)
push
nop
sub
sub
cmp
mov
iret
outs
test
retf
and
or
stos
jmp
les
aam
add
cli
(bad)
adc
fbstp
pop
xchg
and
test
cmp
inc
dec
out
shl
int
push
xor
or
data16
cdq
and
mov
pop
jno
mov
sti
icebp
dec
inc
in
or
dec
arpl
pop
hlt
in
loope
and
popa
(bad)
mov
add
pop
sti
or
in
les
mov
dec
cmp
xchg
mov
xor
std
jbe
or
pushf
aam
pushf
(bad)
mov
arpl
push
and
iret
bound
mov
test
xor
cmps
xor
js
fstp
inc
sti
or
add
addr16
ds
mov
in
mov
xor
cld
daa
inc
sbb
inc
(bad)
gs
out
inc
scas
or
shr
pushf
repz
fwait
or
(bad)
jb
int3
mov
mov
adc
jmp
inc
pop
loop
into
in
movs
jp
mov
dec
test
jecxz
retf
test
mov
out
xchg
js
or
mov
popa
arpl
data16
adc
jl
sbb
in
into
mov
fstp
in
les
push
les
out
es
ret
mov
imul
cmp
cmp
dec
mov
pop
fdiv
test
xchg
dec
enter
adc
mov
test
push
jbe
shl
fistp
mov
cmc
xor
dec
mov
loopne
sub
push
inc
jne
mov
inc
out
jbe
mov
jl
mov
js
xchg
jns
ss
mov
mov
pusha
xchg
sub
enter
aas
addr16
mov
adc
sti
call
inc
mov
and
(bad)
mov
sub
pop
xor
adc
enter
mov
mov
test
mov
or
icebp
mov
or
mov
dec
push
mov
in
sbb
(bad)
enter
call
div
jge
mov
js
and
sub
lock
mov
sti
not
std
mov
pushf
add
xor
lahf
sub
inc
inc
mov
iret
fs
dec
aam
mov
inc
hlt
mov
pop
out
push
sbb
jne
adc
xchg
sub
xchg
arpl
cmp
xor
xchg
or
mov
xchg
gs
scas
mov
sub
cwde
int
iret
mov
and
sub
lods
mov
mov
sub
inc
fdiv
in
or
shr
jo
aam
ds
div
xor
nop
pusha
leave
adc
imul
cs
pushf
xchg
cdq
int
or
loop
mov
jl
repnz
mov
add
or
sbb
mov
scas
xor
mov
stos
push
lea
scas
jbe
outs
scas
shr
sbb
jo
into
mov
jb
sbb
adc
add
xchg
push
mov
inc
addr16
push
test
add
cwde
test
rcl
lock
jnp
add
retf
daa
pusha
xchg
pop
imul
clc
pop
jmp
sub
enter
cmp
in
sahf
scas
mov
movs
packsswb
shl
push
daa
sbb
call
adc
sub
mov
push
inc
in
mov
shl
pop
xchg
push
in
enter
lods
xchg
pop
lods
call
mov
lahf
sbb
das
les
sub
mov
cdq
adc
inc
jnp
pop
mov
push
outs
call
ins
jg
xchg
sti
xchg
in
dec
adc
loop
shl
repz
jbe
mov
pop
sub
xor
adc
mov
mov
and
push
and
inc
xlat
mov
add
inc
mov
(bad)
retf
xchg
mov
xchg
(bad)
mov
pop
pop
xor
jno
inc
jmp
int3
cmp
ja
push
mov
shl
pop
pop
adc
arpl
cmp
mov
(bad)
adc
and
ins
xchg
xchg
jno
call
pop
jecxz
jo
mul
push
xchg
aas
xchg
dec
scas
ss
xor
fs
in
inc
cld
dec
and
push
or
pop
xor
mov
xchg
mov
dec
dec
and
xchg
push
popa
xchg
sbb
enter
fucomi
sbb
inc
bound
data16
jmp
and
mov
imul
(bad)
jmp
dec
call
push
cmp
rcr
inc
push
or
mov
xchg
sub
mov
xchg
dec
enter
movs
xlat
pop
stc
xor
xor
jle
inc
jb
sub
inc
cmp
sbb
and
movs
dec
sbb
and
shr
add
fs
gs
shl
call
fcom
das
adc
(bad)
xor
popf
fmul
inc
xlat
dec
push
fstp
fmul
mov
std
sbb
mov
jl
test
or
stos
shr
cwde
xchg
mov
vpandn
sti
out
inc
nop
mov
mov
and
(bad)
mov
fs
sub
sub
mov
xor
mov
pop
daa
inc
sub
rcl
adc
or
aaa
ja
xchg
adc
jmp
adc
sbb
stos
test
push
sub
mov
add
movs
neg
lock
je
xchg
cmp
sub
mov
cmp
jno
adc
ja
inc
sub
repz
push
in
mov
adc
xor
mov
pop
dec
mov
xor
outs
dec
loop
cmp
ss
jmp
push
fistp
mov
stc
xor
fadd
add
and
mov
ret
sbb
pop
and
add
mov
jo
rcl
imul
gs
or
ret
push
and
into
fist
sub
dec
outs
rcr
sbb
test
in
ficom
adc
jae
jg
xor
sbb
sbb
(bad)
repz
pop
dec
add
push
xchg
jp
jno
add
sbb
push
popf
push
push
repz
ins
dec
das
or
in
inc
mov
repnz
sbb
cmp
les
or
(bad)
fcomp
sub
(bad)
push
test
dec
jle
adc
addr16
mov
rep
sub
leave
inc
scas
hlt
mov
dec
jl
into
dec
xchg
lods
lea
(bad)
xor
adc
mov
iret
(bad)
adc
stos
mul
xor
mov
or
shl
and
pushf
fimul
and
xor
(bad)
stc
aam
mov
gs
xchg
pop
cdq
das
imul
into
and
mov
cmp
shl
cmp
mov
jae
push
(bad)
retf
xor
int
sub
cmp
test
dec
out
sar
jb
fild
sub
xor
ret
jne
fisubr
dec
or
sbb
inc
aaa
mov
in
loop
jo
sbb
clc
or
or
add
mov
test
cmp
imul
imul
ret
sar
repz
dec
cmp
les
in
dec
shl
add
nop
fadd
inc
cmc
fidiv
js
enter
and
xor
sahf
cmp
and
lds
in
int
cmp
jmp
and
sub
leave
pop
adc
pop
mov
push
inc
lock
test
xor
xor
test
js
int
push
mov
pop
dec
imul
and
lods
xor
push
sar
stc
(bad)
jns
shr
cli
pop
adc
fs
out
imul
inc
mov
aad
push
inc
sbb
loope
push
jmp
fiadd
arpl
inc
repnz
push
sub
jmp
out
stos
mov
(bad)
jae
pusha
push
out
adc
int3
xor
or
aaa
fs
add
push
hlt
push
jecxz
dec
push
fst
into
retf
mov
out
xor
cli
sbb
mov
adc
fisub
jge
xchg
mov
dec
cmp
in
dec
dec
inc
cmc
mov
jmp
and
jns
sbb
pop
xchg
jle
push
xchg
js
xchg
mov
push
fs
stos
fld
test
mov
add
daa
popa
ja
mov
ja
getsec
or
sbb
imul
sub
pop
pop
mov
mov
adc
xchg
test
mov
rol
test
push
(bad)
cli
cmp
fucomi
pushf
push
xchg
pop
les
mov
pushf
fsubr
mov
lods
vdivsd
(bad)
pop
ja
push
jbe
int
jp
popa
xor
mov
in
inc
rcl
lahf
loop
(bad)
std
cdq
lea
mov
arpl
in
rcr
mov
loop
cs
xchg
push
xor
add
xchg
movs
mov
push
out
cmp
fs
es
cmps
xor
xchg
sub
fstp
iret
cmp
cld
mov
push
pop
ins
scas
jg
jno
pop
jb
cmp
mov
xor
cld
xor
std
jb
aas
in
and
pop
dec
inc
jecxz
mov
fisttp
mov
call
or
(bad)
pushf
push
mov
ja
xor
mov
and
cmp
leave
pop
push
popa
xchg
iret
andps
(bad)
movs
inc
push
cli
mov
dec
push
sub
push
aam
push
test
add
xchg
xor
lds
and
jo
fsub
and
scas
xchg
call
sbb
mov
rcr
lods
add
inc
pop
add
jmp
and
and
xor
leavew
in
(bad)
jae
push
cdq
xchg
cmp
clc
pushf
xor
cmp
fld
push
xchg
inc
mov
(bad)
repnz
xchg
mov
leave
popa
div
jne
add
xchg
mov
xor
inc
lods
pop
mov
mov
stc
add
or
hlt
sub
imul
adc
dec
ret
push
xchg
dec
push
movs
add
and
out
fwait
mov
loop
cmp
pushf
xor
call
jmp
pop
add
cmp
cdq
sub
mov
mov
or
and
mov
and
jmp
sbb
fmul
push
(bad)
pop
pop
add
push
push
pop
stos
cmps
xor
cmps
or
int3
xchg
pop
xor
(bad)
lods
mov
add
sub
and
sub
jnp
cmps
ins
lods
das
fsubp
inc
adc
movs
div
xchg
cmp
jns
mov
sub
pop
sbb
outs
cmp
add
imul
xchg
out
dec
lods
repnz
dec
mov
loopne
xchg
out
and
pop
pop
lds
xchg
push
push
imul
push
sbb
jnp
cmp
leave
cmp
cli
sub
add
pop
pop
pop
lahf
fnsave
xor
sub
fist
lods
(bad)
scas
arpl
jmp
dec
add
adc
fwait
lock
rcr
dec
pop
mov
sbb
or
lea
or
fistp
aad
dec
mov
icebp
dec
lds
and
movs
mov
out
xchg
cmp
push
or
fcomp
push
ins
xchg
push
gs
pop
xchg
mov
mov
mov
lds
lahf
imul
jg
adc
hlt
aaa
out
neg
cdq
nop
jbe
xor
enter
mov
cmps
or
mov
fcomp
and
inc
fcom
mov
lahf
mov
cmc
xor
ret
neg
or
fist
add
mov
push
and
fwait
sbb
push
int
ins
out
scas
sub
ins
cmp
test
int
or
retf
jg
retf
pusha
cmp
or
pop
cmp
mov
jne
mov
push
pop
dec
jbe
sbb
sahf
pop
sar
punpckhdq
inc
in
loope
(bad)
in
adc
ror
imul
push
(bad)
cmc
out
ret
(bad)
sub
jge
iret
popf
vdivss
push
inc
call
aaa
add
or
jnp
fiadd
pop
push
fidivr
inc
xchg
mov
or
into
in
cld
les
push
out
jmp
hlt
call
or
sub
jle
or
inc
scas
daa
bswap
adc
in
es
cli
fcomip
aas
sub
out
lahf
jl
shr
sbb
inc
mov
adc
jmp
sub
inc
ins
adc
mov
je
ss
test
in
push
mov
push
cmps
jbe
mov
ror
ret
jp
mov
aam
fs
mov
pop
adc
ins
cmp
daa
(bad)
imul
arpl
or
dec
mov
cmps
xor
in
(bad)
imul
pop
add
mov
cmp
mov
rol
and
push
or
dec
xchg
sbb
and
adc
shl
fstp
mov
out
push
and
sub
cmp
mov
imul
add
out
xchg
outs
xchg
stos
mov
les
mov
cmp
lods
push
daa
aaa
inc
ret
(bad)
mov
neg
cmp
out
sub
or
pop
hlt
adc
cmc
popa
xor
je
std
jne
rol
sahf
sub
dec
js
or
out
(bad)
mov
mov
dec
int
or
js
(bad)
iret
sub
arpl
jo
sbb
daa
call
cli
fisub
xchg
pop
xor
or
arpl
ins
jo
xlat
(bad)
adc
push
call
xor
repz
pop
das
ret
fldcw
js
mov
mov
jmp
lds
clc
and
xchg
jmp
xor
pusha
imul
xor
mov
push
ins
nop
or
hlt
das
sahf
and
ins
dec
ret
cmp
fldz
(bad)
fiadd
pop
ss
xchg
adc
xor
neg
sar
lods
ret
hlt
mov
sub
jbe
dec
popa
dec
cmp
jo
pop
jp
gs
push
push
mov
loopne
add
(bad)
adc
retf
jne
mov
jp
cmp
in
adc
dec
add
inc
leave
add
rol
popa
mov
mov
shl
cs
enter
ins
sub
stos
mov
pop
add
and
int3
int3
push
(bad)
jns
imul
xlat
adc
lods
mov
sbb
and
xchg
add
adc
mov
das
cli
jp
je
outs
add
mov
stc
mov
bound
mov
push
cwde
cmp
cdq
push
cmc
fld
cmps
test
mov
lods
lds
mov
lods
mov
mov
mov
jmp
mov
xor
or
adc
test
retf
add
push
jns
scas
push
xor
push
fcom
pop
adc
ins
scas
adc
cmps
call
mov
adc
fld
out
scas
adc
fimul
test
push
hlt
xchg
test
fldenv
imul
test
xchg
movs
xor
imul
ficom
xor
add
cmp
shl
inc
mov
das
sub
pop
mov
pop
mov
les
cmps
inc
jae
loop
pop
int3
pushf
cs
fisub
push
shl
mov
mov
or
adc
adc
inc
out
jp
imul
or
imul
shl
cmp
test
xor
pop
push
xchg
push
mov
pop
push
shl
and
ins
cmp
ror
push
or
pop
adc
jno
gs
outs
(bad)
lods
ds
jmp
sbb
mov
push
enter
shr
and
out
(bad)
stos
xor
dec
data16
dec
xchg
lods
int3
rcr
aaa
imul
xchg
and
xchg
or
push
jae
dec
nop
fldenv
adc
sti
lahf
adc
outs
dec
fst
sti
xchg
xchg
mov
mov
xor
add
jp
inc
cmp
xor
and
cmp
or
mov
jle
and
mov
and
xchg
sbb
jbe
addr16
mov
gs
mov
jle
xchg
test
sbb
bound
test
mov
or
pushf
jae
mov
cmp
dec
jl
das
mov
jne
cli
(bad)
cmp
or
outs
sbb
jge
mov
repnz
ss
push
scas
imul
mov
scas
sahf
jg
jge
cwde
loopne
out
daa
or
jp
mov
mov
add
out
mov
jecxz
nop
mov
push
lods
popf
enter
pop
cmp
pusha
or
outs
ret
mov
loopne
dec
scas
and
test
xor
cwde
jle
sbb
stc
pop
or
or
loopne
xchg
mov
xchg
mov
popa
push
mov
dec
out
xlat
push
jp
mov
or
sti
add
cmc
lock
in
stos
mov
sub
mov
pop
pusha
push
cmp
xor
aad
cmp
popa
fadd
scas
popa
lods
xchg
inc
hlt
data16
(bad)
(bad)
(bad)
retf
cdq
dec
dec
dec
shl
shl
cmp
stc
popa
sbb
icebp
loopne
jg
mov
stos
les
iret
mov
xchg
stos
or
adc
fwait
dec
fstp
inc
pop
pushf
xchg
jecxz
inc
adc
jge
pop
outs
xor
and
inc
jno
mov
sbb
pmulhuw
scas
mov
outs
or
inc
(bad)
mov
push
stc
popa
xchg
in
mov
repz
mov
push
xchg
sub
ja
popf
in
bound
jno
pop
or
std
fwait
jne
fnstenv
add
inc
jle
in
xchg
cmp
xchg
dec
imul
mov
or
frstor
mov
sub
xchg
sbb
dec
in
arpl
mov
gs
inc
cmp
adc
stos
ror
mov
push
sahf
xchg
add
adc
(bad)
retf
cmps
or
into
daa
test
mov
xor
jmp
aas
mov
cmp
loope
ret
arpl
pop
cmp
dec
jbe
cmp
pop
push
dec
jo
mov
data16
aaa
add
iret
push
push
push
push
fnstcw
xchg
icebp
in
fldcw
mov
popf
(bad)
int
pusha
hlt
add
ins
xor
rcl
stos
mov
inc
shr
xchg
retf
loop
cld
or
add
inc
(bad)
fadd
xchg
ins
not
add
in
bound
ins
daa
retf
xor
pop
cmp
mov
mov
pusha
loopne
sub
adc
(bad)
push
cmp
inc
sub
sbb
es
cmc
fsub
ret
(bad)
xor
dec
and
mov
lds
(bad)
test
inc
sbb
das
repnz
sub
push
or
imul
push
in
mov
(bad)
ins
fadd
jmp
sbb
lock
fsubr
sub
ret
cmp
sti
fcomp
cmc
jge
mov
mov
ja
and
xchg
mov
shr
sub
call
xchg
cmps
push
add
add
mov
xor
dec
jo
ret
xchg
adc
in
arpl
add
mov
je
mov
call
das
clc
das
(bad)
ins
mov
sub
sbb
dec
pop
mov
gs
out
icebp
(bad)
aam
lock
dec
xchg
xor
inc
sbb
fisub
loope
(bad)
xchg
push
cmp
dec
xor
xlat
jl
mov
mov
out
aaa
push
mov
inc
sub
push
inc
mov
dec
hlt
sub
adc
lods
pop
sti
(bad)
call
mov
pop
unpcklps
clc
pop
les
jle
push
lods
jmp
mul
jae
scas
(bad)
int3
dec
cmp
das
popf
(bad)
mov
push
popf
ja
stc
jmp
jp
jmp
sbb
scas
adc
pop
jbe
mov
retf
inc
jne
cmp
or
xor
movs
pusha
ins
icebp
lock
xchg
cwde
fcomp
jns
inc
ror
dec
cli
es
in
jmp
sub
mov
jo
mov
add
inc
sbb
stos
inc
jp
and
jle
lods
ins
dec
rol
idiv
dec
outs
cmp
jne
push
jae
std
sbb
lea
cmp
xchg
popa
add
inc
jns
fs
mov
fsubr
stos
dec
les
lds
cmp
out
enter
adc
push
ds
aaa
icebp
or
and
push
mov
mov
push
sbb
loop
jg
mov
dec
in
sub
jmp
jmp
push
nop
test
repz
sub
and
repnz
add
sub
out
jnp
push
mov
xor
push
xor
xchg
pop
test
and
mov
or
sbb
jmp
cmps
(bad)
jmp
dec
jnp
ret
xlat
pop
add
xor
es
out
jecxz
mov
xchg
xchg
cli
scas
daa
adc
mov
out
ja
xlat
inc
push
js
lock
xchg
ror
mov
jmp
dec
xor
test
and
daa
sub
sub
jnp
sub
pop
pop
(bad)
outs
(bad)
mov
lahf
into
inc
js
or
mov
dec
push
push
pop
imul
imul
sub
fild
test
dec
cs
mov
out
push
ror
(bad)
sub
cs
(bad)
sbb
push
(bad)
je
push
cdq
pop
or
dec
rcr
bound
test
cdq
mov
inc
call
inc
jne
cs
mov
lods
pop
mov
mov
adc
sub
sub
in
ins
inc
mov
push
sub
sub
rcl
imul
and
push
xor
pop
add
push
sub
loope
jge
stos
fstp
iret
and
leave
je
jno
cwde
pop
mov
push
mov
mov
mov
bsf
or
push
(bad)
dec
dec
sbb
lods
push
push
adc
icebp
aas
pop
mov
xor
add
cmp
inc
xor
popf
sbb
mov
xchg
mov
aas
clc
jl
adc
xor
mov
loop
call
mov
fld
retf
xchg
jno
push
jb
mov
push
jno
push
or
mov
mov
repnz
jmp
or
cmp
mov
jl
jb
aaa
retf
jne
inc
jmp
xor
repnz
outs
xor
leave
push
inc
ins
jg
fstp
jnp
push
loopne
call
xor
sbb
push
jo
inc
jge
fdiv
sub
aad
inc
pushf
jecxz
dec
sbb
test
or
das
lock
retf
sar
rcr
pop
hlt
jns
in
adc
ret
mov
aad
cmp
sub
and
push
hlt
xchg
out
pop
add
xor
mov
mov
adc
imul
lea
out
xor
jae
hlt
daa
add
enter
jno
fwait
sub
lods
xor
add
enter
jb
xor
popf
neg
jecxz
(bad)
xchg
mov
ret
sbb
not
loop
daa
sbb
xchg
inc
retf
rcr
dec
out
nop
clc
and
rcl
mov
inc
or
sub
jbe
inc
dec
push
or
into
ss
xchg
outs
dec
outs
cmp
dec
mov
hlt
test
jge
jne
sar
dec
xor
loop
or
(bad)
mov
dec
movs
dec
call
or
int
mov
xor
paddusw
ret
in
mov
rol
mov
or
rcr
out
fadd
stos
in
jmp
sub
push
fwait
pop
jne
and
jae
stos
push
sub
gs
lods
xor
dec
scas
rol
fsubp
inc
sbb
ror
push
aam
sbb
or
fcmovne
inc
cmova
and
dec
xchg
mov
inc
ror
mov
fnstcw
jno
adc
push
push
sbb
icebp
jbe
or
dec
repz
xchg
pop
and
adc
out
dec
fisttp
and
dec
or
ins
pop
jecxz
xor
cmp
sti
add
out
or
jmp
sti
inc
es
jb
jne
repnz
sub
bound
pop
ins
mov
pop
repnz
or
pop
sbb
cmp
call
in
dec
in
pop
xchg
mov
fld
xor
loop
lods
jnp
push
or
ss
out
jge
xchg
fsub
imul
enter
ds
loop
shl
and
aam
jmp
and
adc
or
cli
out
retf
mov
dec
shl
jnp
cwde
test
cmc
jmp
dec
mov
xor
cmp
jae
data16
(bad)
xor
mov
jno
fistp
daa
mov
cmp
mov
(bad)
pop
sahf
add
ror
mov
xchg
jp
push
std
outs
mov
mov
int
xchg
cmp
mov
aam
pop
adc
cmp
xchg
aam
out
jmp
ror
shl
xlat
bound
jnp
jns
je
test
pop
scas
and
mov
push
adc
scas
scas
arpl
repnz
inc
aad
repnz
loope
sbb
call
adc
push
into
(bad)
sbb
xchg
xchg
ficomp
aas
sahf
test
ins
push
ror
arpl
jmp
enter
jle
cdq
enter
imul
pop
aas
dec
push
mov
call
mov
hlt
clc
mov
imul
fcmovu
sbb
lahf
mov
pmaxsw
lock
add
xchg
and
loope
pushf
and
mov
imul
loope
addr16
adc
mov
movs
gs
pop
xchg
retf
ins
lea
cli
push
test
cdq
jp
in
cmp
lds
jp
movs
xor
dec
fmul
ret
test
mov
imul
push
mov
pop
mov
hlt
cmp
(bad)
out
adc
mov
ret
nop
or
sub
in
mov
cmp
(bad)
dec
jb
and
mov
shl
out
lahf
push
sbb
daa
aas
adc
ror
in
pop
add
mov
inc
sbb
call
dec
mov
jno
ret
clc
cwde
js
jne
lods
sbb
iret
call
icebp
push
ret
shl
dec
ss
dec
outs
inc
cmc
mov
jmp
gs
(bad)
sub
rcr
jbe
gs
pushf
fwait
push
fs
loopne
inc
imul
cli
not
xlat
ins
pusha
(bad)
scas
dec
mov
int3
dec
retf
jecxz
sbb
test
cmp
js
(bad)
sbb
aad
mov
dec
mov
mov
test
fisttp
push
push
jbe
sar
popa
fcom
dec
push
cmp
jecxz
mov
add
mov
dec
push
nop
xchg
out
clc
jno
jmp
cmp
pop
lds
mov
and
or
retf
(bad)
add
xor
imul
mov
xor
and
loopne
shufps
jo
popf
fstp
or
sbb
in
push
gs
push
inc
pop
mov
and
sub
outs
push
arpl
mov
leave
dec
pop
(bad)
(bad)
mov
dec
lahf
cld
fidiv
pop
mov
pop
pop
in
fimul
xchg
push
int3
inc
xchg
fnstsw
outs
stos
jle
sub
jle
xchg
in
mov
(bad)
pop
lea
mov
jo
xchg
sbb
cmp
push
lods
hlt
xor
aad
mov
out
add
inc
fcmovb
xor
idiv
inc
xor
jae
sbb
dec
in
push
pop
pusha
sub
and
add
mov
pop
push
inc
mov
push
push
scas
in
pop
xor
mov
cmp
mov
test
pop
(bad)
imul
adc
dec
test
mov
repz
push
(bad)
pop
jae
dec
aas
movs
nop
cmp
lods
push
adc
call
add
inc
int
stos
or
inc
adc
add
mov
aad
push
sahf
push
jmp
cmp
test
hlt
into
sbb
pop
mul
push
mov
pushf
push
xchg
(bad)
mov
sbb
addr16
inc
mov
pop
ja
sti
jmp
fcom
loop
fmul
scas
enter
js
jnp
dec
bound
xor
stos
and
ins
pop
dec
int
(bad)
push
xor
div
call
inc
movs
jno
into
dec
div
into
mov
push
or
or
dec
xor
sar
and
adc
ss
test
pop
in
pop
sbb
sbb
stos
inc
cs
leave
pushf
lods
cmc
sub
imul
adc
xor
out
cdq
out
ins
mov
out
cdq
push
cmp
lds
push
pop
popf
inc
out
xor
pop
lea
sub
adc
(bad)
loopne
sub
data16
imul
outs
add
jmp
push
sbb
ins
xlat
or
popf
pop
fild
adc
push
mov
lds
imul
mov
mov
not
dec
add
scas
sub
pop
fucompp
js
std
aad
movs
inc
adc
inc
out
mov
ret
fwait
fwait
cmc
xchg
(bad)
lods
push
push
mov
or
ror
arpl
sub
aam
fdiv
je
jl
mov
outs
cmp
add
push
out
xchg
lea
jmp
scas
outs
pop
fsubr
mov
push
sub
test
pushf
popa
inc
aas
mov
or
inc
push
push
loope
fwait
jne
sbb
fs
push
or
push
mov
adc
outs
js
aam
adc
dec
lods
push
push
ret
shl
dec
jg
inc
mov
lods
lea
or
pop
not
cmps
outs
or
nop
(bad)
int3
es
sbb
xor
mul
push
int
inc
call
or
and
sbb
cs
out
push
cmp
js
dec
mov
cwde
adc
jmp
call
or
cmp
xor
mov
rcr
repz
loopne
retf
adc
lea
xor
enter
mov
and
pop
or
sbb
gs
xchg
(bad)
and
add
dec
in
mov
dec
stc
and
scas
mov
test
or
sub
push
aad
push
repnz
mov
inc
inc
scas
jle
or
mov
push
inc
bswap
dec
dec
(bad)
in
cdq
fs
pop
mov
xlat
pop
and
jmp
fcom
xor
add
mov
dec
mov
imul
push
fwait
pop
inc
(bad)
pop
push
xchg
popf
jecxz
out
in
mov
scas
xchg
mov
stos
mov
jns
sub
and
fbld
and
scas
jecxz
loop
loope
jmp
push
xchg
enter
call
pop
push
imul
xchg
js
ror
jo
add
stos
pop
adc
sbb
sbb
aaa
sar
in
xchg
repnz
not
fstp
and
test
xchg
lods
(bad)
adc
xchg
leave
push
mov
mov
dec
pop
fistp
adc
xchg
int
mov
scas
mov
push
push
call
sar
(bad)
inc
pop
mov
sbb
sbb
stc
sub
sub
sbb
retf
or
es
xchg
mov
adc
ret
mov
push
stos
xchg
mov
xchg
mov
adc
(bad)
mov
pushf
clc
clc
scas
mov
push
inc
repz
loop
push
dec
mov
out
mov
or
sub
lods
sahf
xlat
jmp
add
pusha
jne
outs
pop
jmp
aas
pop
mov
(bad)
lock
scas
sti
adc
xchg
jbe
xchg
cmp
jmp
arpl
xchg
fwait
inc
stos
icebp
fld
ffree
ins
test
retf
xchg
adc
add
jmp
aad
mov
sbb
fmul
mov
mov
arpl
arpl
xlat
xor
add
inc
gs
sbb
mov
lods
mov
jle
iret
mov
lock
out
out
dec
retf
fs
sbb
out
ret
imul
jge
sub
out
fcomip
std
mov
(bad)
sbb
outs
cdq
push
movs
inc
jb
pop
ins
inc
mul
cmp
inc
jo
cmp
sbb
mov
ror
sbb
nop
push
scas
cmp
repz
mov
data16
int
xchg
mov
jmp
cs
mov
leave
cmp
lods
sub
ins
call
mov
sub
or
sar
or
jp
adc
mov
xchg
fadd
and
movs
mov
ja
mov
les
fild
repnz
mov
fcmovu
test
xor
jo
retf
int
ss
mov
xchg
ror
es
icebp
lods
adc
mov
push
pop
daa
jo
xor
xor
mov
sbb
and
inc
test
sub
fs
out
int3
ror
adc
out
dec
je
xor
pop
ror
daa
call
jle
pop
loope
jl
shl
dec
add
lds
xlat
ins
mov
sbb
cmp
pop
and
inc
sub
and
rol
adc
js
js
mov
mov
jno
xlat
cli
push
movs
jp
sub
ret
fistp
out
lods
and
mov
loop
int3
xchg
iret
repz
inc
stc
shr
lods
xchg
xchg
ins
arpl
aaa
jmp
icebp
xchg
add
test
xchg
je
push
or
popa
sbb
mov
and
inc
jle
sub
jmp
lahf
mov
xchg
push
sub
add
mov
lods
mov
int3
fiadd
xor
test
jne
dec
ins
cmps
adc
xlat
jl
push
mov
xor
jns
retf
xor
enter
adc
adc
int
pop
dec
sub
lahf
cmp
hlt
sub
call
fsubr
out
or
dec
or
sbb
icebp
push
jmp
jae
inc
aaa
push
mov
jne
popa
jg
ffreep
mov
or
xchg
std
ror
cmp
push
add
icebp
sub
cdq
jne
sub
fld
das
mov
xchg
cwde
fcom
push
retf
in
mov
push
and
dec
or
xchg
out
(bad)
popa
in
add
fiadd
adc
jo
not
push
mov
ffree
mov
call
pop
stc
aaa
fs
pushf
inc
aas
and
and
mov
movs
jo
inc
xchg
cmps
jne
xchg
clc
xchg
xor
cs
xchg
inc
pop
push
jecxz
sub
push
and
cmp
sbb
data16
lods
lea
mov
and
ins
repz
sbb
xor
pop
dec
dec
stc
xor
or
jbe
cmp
sub
neg
loope
and
ds
sbb
aaa
test
in
and
sar
cld
scas
aad
ficomp
jbe
rol
jnp
push
sbb
mov
xchg
loope
push
cmps
jns
push
cwde
test
sar
leave
inc
sub
mov
test
stos
xor
scas
mov
inc
fild
call
xor
and
mov
xlat
aaa
int
(bad)
cdq
retf
push
and
xor
gs
out
pop
xchg
adc
out
pop
xor
fisttp
push
push
and
adc
out
repz
jg
adc
stos
icebp
test
adc
leave
add
xor
jns
xchg
xor
ss
or
add
bound
imul
fbstp
cmps
xchg
xor
mov
(bad)
lods
push
aaa
cmp
call
jl
lods
and
repz
movs
xchg
adc
fnstenv
mov
fadd
das
add
int3
into
sub
shl
xor
gs
push
out
outs
cmc
pushf
mov
add
sahf
(bad)
fimul
jge
clc
xor
gs
inc
arpl
das
jns
in
lahf
sahf
adc
in
icebp
(bad)
jl
inc
xchg
scas
repnz
dec
mov
leave
xchg
pop
in
cmp
xor
jecxz
push
fimul
cli
leave
ds
scas
(bad)
pop
jne
ss
xor
shr
sub
cdq
and
imul
fwait
cmc
js
jbe
les
call
call
sti
jne
in
fbstp
sti
or
inc
adc
enter
movs
sbb
aaa
mov
jp
rol
adc
into
lea
enter
xor
or
sub
jbe
push
jp
inc
cs
das
int3
jecxz
shr
dec
movs
aaa
mov
add
fisubr
add
mov
sub
sub
fisub
xor
push
and
imul
push
push
xchg
ds
cmp
mov
clc
int
jbe
mov
aad
jbe
mov
mov
je
lds
aad
jecxz
mov
(bad)
daa
mov
xor
push
rcl
fbld
jp
jmp
sub
mov
iret
cmp
enter
lock
sub
sbb
and
and
jb
nop
rcr
adc
bound
mov
jg
mov
(bad)
mov
xor
ds
ror
lock
aam
iret
retf
fisttp
sahf
xchg
mov
into
pop
pop
in
pop
add
pushf
cdq
mov
xor
mov
es
cmp
jns
sub
addr16
(bad)
(bad)
das
push
icebp
add
mov
rol
ins
mov
fbstp
js
mov
ins
pop
add
aas
inc
retf
rcl
ret
push
pop
sub
or
pop
fs
add
mov
ret
inc
adc
mov
and
push
sar
out
cmps
inc
shl
pop
cmp
stc
inc
ds
push
mov
or
leave
sub
dec
xchg
movs
(bad)
(bad)
adc
mov
fisubr
xlat
mov
inc
je
popf
in
cmp
daa
sbb
fadd
in
and
push
scas
(bad)
mov
pop
mov
std
inc
sub
cmps
test
push
(bad)
sub
(bad)
cwde
mov
ins
cmps
inc
cld
xchg
jbe
movs
fs
fiadd
adc
test
xchg
inc
fcom
add
dec
pop
cmp
dec
mov
cmc
pop
push
das
clc
inc
popa
cmps
push
push
dec
add
push
pushf
out
pop
jp
push
pushf
add
fs
cdq
or
push
dec
mov
aaa
mov
pop
dec
mov
dec
sar
or
pop
pop
sub
das
je
xchg
inc
(bad)
fidivr
jo
loopne
dec
(bad)
aam
add
mov
push
and
xor
or
dec
inc
lahf
outs
jae
pusha
pop
xchg
cmp
adc
inc
and
ins
lods
xchg
cmp
pop
test
pop
xchg
(bad)
fiadd
int3
add
cmp
test
pop
je
mov
inc
movs
adc
dec
or
jmp
mov
cmps
mov
fadd
ds
ret
jmp
or
lods
push
xchg
push
lods
fcmovne
cmp
add
dec
aad
xor
add
add
pop
cld
xchg
push
mov
and
jmp
aad
gs
cmp
push
push
fs
cmps
les
popf
lea
xchg
les
jmp
sbb
ret
jecxz
hlt
dec
cld
add
cwde
or
popf
scas
fsub
ins
sbb
add
outs
add
xchg
lods
push
push
std
mov
pop
add
xor
dec
dec
adc
jae
dec
inc
mov
imul
xor
xor
dec
mov
sub
pushf
xchg
rcr
mov
shl
jmp
addr16
outs
inc
inc
and
dec
retf
mov
repnz
fdivr
xor
pop
mov
mov
popa
and
(bad)
fdivr
ja
je
icebp
ins
stc
adc
(bad)
jle
enter
in
mov
and
retf
sub
popf
mov
pop
enter
(bad)
mov
xor
inc
jo
inc
sub
mov
jns
xchg
mov
push
addr16
je
daa
inc
cmp
adc
xor
sbb
xchg
push
mov
ret
pushf
lock
xchg
mov
pop
imul
xor
xor
jo
jmp
ss
in
pop
cmp
mov
cli
test
ja
add
pop
jns
or
lods
add
repz
cld
mov
push
cmp
dec
rcl
(bad)
loop
test
out
dec
push
outs
mov
mov
adc
repz
gs
sub
pop
fcomp
stos
mov
mov
das
mov
pop
cdq
cdq
js
cmps
push
dec
mov
popa
test
dec
popf
shr
inc
or
idiv
mov
push
inc
(bad)
dec
cmp
mov
in
ret
mov
xor
jl
sub
and
xor
ins
scas
pop
sub
cmp
jmp
dec
xor
mov
into
mov
xchg
aam
lds
cwde
scas
mov
fadd
fstp
jecxz
sbb
mov
jp
jmp
mov
stc
mov
inc
and
in
add
xchg
sti
pushf
stos
jbe
nop
xchg
aas
jbe
hlt
bound
pop
sub
mov
push
mov
push
test
adc
mov
adc
loopne
daa
mov
fisub
mov
sub
rol
ror
das
imul
or
jmp
lds
pop
(bad)
xor
jns
adc
push
retf
fucom
fsub
loope
jnp
cmp
stc
or
aad
popa
sbb
cmp
pop
hlt
jmp
shr
ror
sub
or
pusha
frstor
cmp
sbb
neg
jne
push
or
cs
push
mov
mov
lock
test
mov
gs
mov
pop
ret
add
stc
push
inc
dec
jmp
(bad)
fidiv
mov
xchg
out
cli
or
mov
add
sub
xchg
ror
pop
in
lods
and
pop
and
enter
mov
fstp
test
sbb
pop
dec
addr16
call
cwde
xor
(bad)
in
jbe
das
imul
aaa
add
pop
cmp
mov
mov
dec
pop
call
fadd
ins
les
hlt
xchg
mov
lds
or
(bad)
int3
mov
or
test
(bad)
fld
pop
cmp
clc
mov
out
push
ror
int
mov
test
and
clc
pop
loope
mov
mul
sub
bnd
sti
aam
push
or
les
fld
stos
sbb
jmp
ret
add
or
sbb
arpl
and
mov
hlt
in
jp
cmc
push
jmp
mov
pop
aaa
pop
movs
jb
sub
jl
in
in
inc
jmp
or
sub
xor
add
shl
and
loope
sbb
sbb
jbe
mov
or
lods
inc
or
scas
xchg
cmps
ret
sbb
ss
sti
into
gs
sbb
mov
pop
dec
out
es
outs
cld
cmps
addr16
fwait
out
mov
mov
cmp
popf
xchg
std
ins
jae
jo
cmp
out
sbb
or
jmp
jg
es
shr
arpl
xor
jl
pop
pop
imul
fyl2x
imul
and
and
and
fistp
pop
shr
sub
jb
xchg
dec
ja
mov
pop
stos
retf
add
jp
bound
bound
test
adc
jne
adc
ret
ss
sub
stos
neg
ror
(bad)
dec
cmc
test
es
repz
or
cld
or
data16
xor
mov
fisttp
jecxz
loopne
ja
sub
push
inc
jl
in
sub
pushf
imul
out
(bad)
mov
repz
cmp
mov
ret
frstor
jae
mov
fnstenv
pop
mov
movs
cs
jl
call
jae
or
std
leave
cmp
mov
pushf
push
mov
mov
xor
push
or
ins
adc
test
mov
pop
daa
enter
mov
outs
outs
pop
sub
cmovge
inc
inc
xchg
out
retf
mov
fist
daa
jo
pop
out
inc
sub
lds
dec
movs
xor
sbb
cmp
mov
push
cmc
(bad)
sbb
jb
iret
je
pop
push
push
fsubr
cmp
mov
or
or
xor
lods
aam
in
bound
xchg
js
push
movs
fidivr
pop
cmp
push
mov
dec
adc
pop
out
add
and
mov
test
outs
xchg
aaa
jbe
repz
cmp
and
clc
pushf
mov
add
lahf
ror
dec
push
outs
nop
mov
adc
mov
clc
push
arpl
(bad)
sahf
jmp
adc
(bad)
add
xchg
test
fidivr
stos
mov
jo
pop
sar
aas
xchg
adc
stos
pop
outs
pop
push
leave
je
push
dec
dec
iret
jo
dec
inc
ret
inc
dec
push
bound
data16
adc
je
or
jecxz
jle
pop
mov
aad
mov
in
sub
push
mov
mov
out
add
(bad)
(bad)
dec
pop
mov
and
ins
(bad)
jmp
xor
push
std
stc
mov
(bad)
movs
cmp
shl
mov
jmp
mov
add
(bad)
inc
test
jnp
push
sbb
aam
(bad)
adc
jbe
popa
dec
and
test
popf
add
sbb
mov
mov
lods
jns
inc
push
jmp
das
repz
jno
mov
arpl
fmul
xor
adc
sbb
push
ret
(bad)
pop
adc
adc
or
fiadd
mov
shl
test
add
xor
outs
hlt
fidivr
cmps
xor
pop
aaa
or
sbb
ja
or
cmp
jge
gs
das
aas
mov
sub
jae
push
or
sub
loope
icebp
icebp
fild
pop
push
popf
and
push
xchg
xor
pushw
bound
ins
(bad)
mov
jnp
mov
mov
xor
(bad)
ficomp
pop
jno
bound
das
inc
and
idiv
adc
loope
loop
movs
jge
ret
and
test
push
add
inc
sub
fadd
cdq
bound
cli
shl
pop
enter
and
xchg
push
mov
(bad)
jmp
xchg
adc
ror
lds
mov
outs
jnp
or
push
jp
jmp
xor
test
pop
hlt
scas
mov
xchg
icebp
cmp
aas
movs
adc
jmp
jp
clc
cmp
push
mov
imul
popf
mov
fs
js
shl
in
jno
pusha
dec
inc
or
sbb
sbb
ror
xchg
rcr
inc
mov
ret
pop
fucomip
lock
ficomp
scas
push
sbb
adc
out
pop
dec
(bad)
add
sbb
dec
retf
add
pop
dec
and
mov
jno
push
dec
int3
shr
sub
cmc
in
jmp
push
ret
mov
mov
ja
xchg
fistp
dec
imul
inc
repz
cmps
or
cli
cs
or
fcomp
mov
mov
cmp
sub
adc
loope
push
push
test
mov
jp
cmc
jg
mov
arpl
fist
dec
(bad)
jp
retf
or
sbb
add
inc
xor
fs
jg
mov
lods
xor
cli
repnz
je
pop
out
pop
sub
pusha
in
jle
xchg
das
loopne
cmp
std
fmul
push
xchg
mov
fiadd
sbb
add
inc
lahf
imul
jb
es
in
inc
add
pusha
mov
pop
test
xchg
jo
jg
loopne
test
mov
stos
in
inc
imul
int3
add
out
ds
mov
pusha
xor
xchg
retf
push
pop
fidivr
jge
mov
sub
cmp
fwait
aaa
pop
add
mov
mov
mov
pop
aad
jmp
cli
js
add
in
pop
rol
mov
das
mov
jecxz
mov
stc
pushf
clc
(bad)
xlat
xor
xor
jmp
xor
lods
ins
(bad)
jmp
cmps
in
call
iret
jge
ds
and
push
retf
push
xor
dec
inc
outs
or
test
aaa
cs
pop
mov
inc
and
adc
jmp
popa
movs
jl
push
lea
cmps
jo
sub
ror
sbb
enter
mov
inc
das
xor
retf
retf
push
mov
stos
(bad)
shl
inc
test
leave
jecxz
and
jno
pop
sbb
ret
and
dec
mov
mov
cmp
adc
add
retf
or
mov
cs
mov
or
mov
cmp
dec
cmp
loope
(bad)
jbe
cmp
and
sbb
mul
pop
sub
repz
jecxz
push
jnp
pop
ret
ins
movs
(bad)
(bad)
mov
ret
dec
sub
cld
add
lods
sub
mov
(bad)
jb
ficomp
aam
stos
mov
dec
add
ret
lds
shl
ror
and
mov
cmps
rcl
sbb
(bad)
out
cld
jle
xchg
ret
adc
adc
cdq
call
aas
jmp
shl
int3
mov
das
aad
lock
dec
pop
int3
mov
(bad)
arpl
cmp
test
test
ret
jb
jnp
or
repz
add
xor
push
or
push
sti
test
cld
and
cld
dec
jecxz
repnz
cmc
fs
push
pop
push
out
inc
add
add
ds
popa
call
jbe
test
and
sub
pop
inc
jmp
out
and
(bad)
mov
repz
push
fstp
pop
and
xchg
inc
adc
and
jb
or
ret
stos
or
or
sbb
adc
lods
shr
push
inc
sub
and
mov
fwait
and
je
aaa
(bad)
jmp
jle
add
rol
daa
movs
fcom
mov
js
stos
add
push
jg
test
mov
push
jb
ret
dec
rcl
sar
hlt
and
call
sub
mov
push
rol
neg
call
dec
(bad)
in
mov
pop
enter
popa
jb
cmp
cmp
xchg
xchg
jge
xor
inc
lods
or
and
popa
(bad)
sub
iret
mov
push
loop
je
into
mov
sub
sbb
(bad)
lods
and
inc
jl
dec
fild
dec
sar
aaa
cmps
sbb
mov
icebp
sbb
inc
pusha
sbb
mov
push
jge
(bad)
movs
fnsave
js
enter
jge
div
cmp
dec
pop
xor
dec
lock
cwde
sbb
jo
add
push
mov
shr
es
and
test
inc
inc
scas
xor
clc
dec
mov
cmps
pop
(bad)
mov
shr
test
mov
and
dec
imul
inc
call
aaa
out
in
xchg
push
(bad)
test
adc
leave
jge
out
(bad)
push
fisttp
loopne
retf
loopne
repnz
cli
pop
cmps
in
pop
push
xchg
stc
jle
sub
retf
imul
int3
push
add
jb
fistp
pushf
xchg
pop
ins
sbb
aas
add
cmp
jne
adc
(bad)
shr
shl
je
test
and
outs
and
sbb
(bad)
sub
jl
out
mov
mov
loope
pusha
push
xor
psrlw
cmp
sbb
adc
aad
ficomp
jl
in
shr
mov
adc
(bad)
push
lahf
in
shr
sbb
ins
je
sbb
jmp
je
sbb
cmp
pop
sbb
cmps
popa
sbb
jae
sub
xor
push
dec
test
push
lods
cmp
popf
dec
cmp
or
pusha
fcmovbe
or
call
cwde
aaa
cwde
shl
cmps
mov
aaa
pop
inc
and
mov
(bad)
int3
jns
inc
push
mov
mov
add
add
sub
iret
or
push
cmps
adc
mov
pop
cmc
jp
test
lahf
push
inc
movs
jecxz
pop
adc
in
neg
or
cmp
mov
or
dec
rol
and
test
pop
push
icebp
rol
mov
xchg
inc
es
shl
inc
mov
or
add
pop
sahf
out
dec
pop
imul
jp
popf
adc
push
cwde
repz
add
jge
repz
ins
inc
daa
cs
adc
rcr
retf
(bad)
dec
cwde
mov
push
pop
(bad)
cmp
fwait
popf
cs
mov
push
adc
pop
aaa
repz
push
mov
clc
fst
lahf
pop
gs
adc
jns
aas
xchg
retf
cmp
loopne
dec
xchg
adc
lock
ins
cmps
ror
adc
icebp
imul
outs
sub
test
mov
push
bound
cs
adc
(bad)
cli
xchg
pop
dec
cwde
dec
js
adc
loop
jnp
sbb
inc
jle
cdq
out
loop
cmp
mov
stos
out
pop
xor
mov
pop
xchg
shl
inc
cmc
loope
inc
test
ja
push
unpcklps
adc
mov
lods
mov
addr16
or
jno
cmp
std
mov
pop
or
sti
fisub
dec
nop
fcom
out
push
jbe
inc
iret
add
cmp
xor
test
cwde
adc
cli
jle
lds
into
cmp
mov
popa
sub
sbb
(bad)
fiadd
mov
inc
jne
mov
(bad)
aas
add
call
or
jnp
lds
jns
jbe
mov
dec
std
push
dec
shl
mov
ds
movs
leave
out
inc
ja
sbb
lods
sub
loop
push
ins
cmc
sub
cdq
xchg
aaa
pop
js
(bad)
test
aad
xchg
cmc
pop
sub
add
inc
mov
pop
jbe
pop
inc
inc
push
adc
or
jmp
add
imul
mov
pop
inc
jge
sub
cmps
(bad)
bound
mov
push
push
sti
dec
xor
pop
push
xor
push
je
and
and
xor
fist
ja
pop
and
imul
dec
movs
cmps
mul
pop
push
xchg
shl
aaa
lods
jae
cmps
in
inc
sti
inc
loop
mov
or
cli
popa
es
mov
shl
sbb
loope
mov
mov
fnsetpm(287
jne
sbb
(bad)
jg
push
aas
repnz
jae
stos
mov
(bad)
adc
test
repz
in
mov
lods
xchg
xchg
fisttp
xchg
cmps
xlat
sbb
les
xor
push
add
mov
inc
call
cld
out
in
push
cmc
pop
shl
shr
adc
lds
xchg
mov
(bad)
test
pop
pop
(bad)
test
push
scas
mov
mov
cmc
imul
shl
mov
std
enter
enter
lock
mov
and
add
xor
push
and
inc
stos
mov
adc
lock
aad
nop
adc
adc
adc
xor
pushf
mov
into
adc
adc
sbb
bound
jbe
call
and
xchg
xchg
cld
test
pop
repnz
adc
xchg
icebp
fistp
out
dec
jmp
test
rcl
pop
jg
shr
fs
(bad)
sbb
sub
inc
cmp
pop
push
in
cmps
pop
shr
std
sub
push
inc
xchg
iret
fs
icebp
and
adc
or
mov
repnz
sub
mov
xor
idiv
xchg
shr
loop
lea
add
sub
rcl
push
push
push
mov
jae
sub
cmp
dec
in
push
repnz
ds
lods
add
sbb
jo
mov
mov
enter
ficom
sbb
call
xchg
and
data16
mov
pop
pusha
js
fldenv
jmp
lds
mov
mov
(bad)
dec
or
cmp
mov
adc
sbb
add
mov
jb
and
xor
mov
and
add
mov
mov
jae
loop
repz
or
mov
rcl
bound
cmc
pop
mov
stos
(bad)
scas
icebp
mov
sbb
dec
xchg
fmul
int3
out
clc
mov
mov
daa
out
out
sub
mov
jge
and
out
scas
retf
inc
arpl
mov
repnz
clc
sub
mov
or
in
(bad)
sub
out
and
jb
pusha
xor
mov
div
add
arpl
and
retf
clc
cli
ret
push
add
outs
inc
fisubr
pusha
out
jmp
popa
imul
add
popa
sti
jl
mov
fcom
aaa
arpl
into
dec
cmc
adc
xchg
das
mov
inc
call
push
pop
shl
add
mov
(bad)
ins
lods
sub
mov
push
or
clc
and
dec
popa
cmps
pop
loop
lods
in
jp
cli
in
or
add
jnp
xchg
jno
mov
jp
mov
es
inc
push
pusha
xchg
sub
imul
retf
mov
shl
bound
add
cmps
xor
mov
mov
fnstcw
and
inc
hlt
je
hlt
outs
mov
aad
inc
pop
dec
inc
add
fcmove
stc
cld
and
sub
pop
pusha
mov
scas
jns
sti
adc
repnz
xchg
(bad)
cmp
ret
std
xor
xor
(bad)
(bad)
push
xchg
into
push
pop
pushf
xchg
push
aas
inc
or
and
pop
fistp
rcr
ins
ds
pop
ins
rcr
arpl
int
jmp
mov
inc
fidiv
jbe
fs
popf
call
addr16
das
adc
push
push
popf
out
in
fs
pop
test
dec
add
adc
and
fisubr
sahf
mov
push
repnz
inc
int3
aas
add
outs
ss
mov
and
(bad)
add
adc
repnz
push
xor
inc
sbb
clc
ret
inc
jnp
sub
jmp
push
test
pop
push
add
fnstcw
popa
call
daa
into
mov
pusha
pop
fistp
sbb
sub
shr
dec
popa
sbb
push
mov
(bad)
rcl
scas
inc
sub
pushf
push
fiadd
(bad)
call
lods
nop
loope
mov
pusha
xchg
sbb
loope
daa
pushf
imul
fdiv
jl
cwde
lds
push
xlat
xor
in
pop
(bad)
clc
je
adc
ds
jne
in
repz
lock
cmc
xchg
fscale
test
aas
fs
iret
in
push
ret
jp
repnz
mov
mov
mov
xchg
jmp
cs
loope
(bad)
jmp
js
sub
retf
xor
repnz
aas
cmp
xor
test
arpl
pop
add
mov
jo
add
loopne
fbstp
sbb
aaa
or
imul
cmps
das
mov
sbb
push
and
or
mov
inc
out
pop
push
xor
mov
pop
sbb
and
pop
loopne
jne
push
mov
idiv
dec
loop
add
clts
pop
(bad)
cmp
icebp
js
xor
aad
inc
xchg
push
jmp
frstor
ss
mov
pop
jnp
jns
jp
cs
cdq
ja
mov
sbb
out
fiadd
xchg
pop
imul
test
push
jbe
mov
mov
cmp
idiv
sub
cmp
mov
mov
aas
pushf
inc
js
popa
cmp
adc
int3
push
enter
add
(bad)
pop
dec
imul
or
inc
rcr
or
aad
mov
add
mov
dec
inc
jmp
arpl
(bad)
bound
inc
push
and
mov
lahf
inc
xchg
imul
mov
das
aad
adc
(bad)
sti
dec
cld
pop
sub
inc
sbb
jle
in
nop
jmp
mov
rol
dec
xor
sbb
mov
popa
mov
sub
mov
cwde
cmc
xor
mov
dec
repnz
je
jmp
(bad)
in
loopne
repz
sbb
xor
ins
dec
test
outs
adc
retf
(bad)
xchg
or
shl
sbb
add
push
mov
and
mov
add
adc
je
mov
pop
sbb
mov
js
mov
mov
in
sbb
rcl
mov
sub
sahf
(bad)
fstp
cmc
stos
imul
jl
rcl
jge
mov
cmc
xlat
jnp
stc
jecxz
(bad)
fs
push
sub
pop
sub
cld
cmps
xchg
jle
and
dec
test
repnz
int
push
in
or
push
int
ins
mov
hlt
adc
pop
ror
jno
test
jge
call
shl
mov
fs
add
popf
mov
push
cli
mov
adc
sar
cmp
enter
js
xor
mov
push
test
push
sub
push
ret
mov
sub
jo
xchg
push
cwde
sbb
xor
xor
inc
fiadd
(bad)
aam
in
jns
sbb
sbb
out
add
pop
xor
xor
mov
lds
cmps
fbld
mov
or
xchg
mul
cmps
and
sub
popf
sub
jge
mov
mov
or
ret
inc
out
sbb
sar
and
and
es
or
adc
sub
sahf
add
or
repnz
mov
sbb
push
lock
outs
or
push
jl
inc
jg
xor
(bad)
repz
int3
lahf
jecxz
mov
loopne
fimul
pop
xor
adc
or
pop
retf
sar
pop
sbb
lods
pop
dec
xor
dec
dec
enter
cli
(bad)
sbb
xor
mov
(bad)
aad
xchg
xchg
add
cdq
or
inc
dec
dec
clc
lea
std
neg
add
cdq
add
ins
retf
into
xchg
push
addr16
xchg
adc
call
scas
(bad)
clc
xor
pop
out
fwait
pop
mov
pop
lahf
jo
mov
pop
int
or
add
xchg
(bad)
daa
adc
adc
arpl
enter
retf
movs
add
mov
xchg
cmc
dec
or
xchg
pandn
ret
iret
push
retf
fimul
fstp
xchg
jl
sbb
idiv
scas
outs
(bad)
dec
scas
sub
sub
addr16
test
popa
push
sbb
and
and
pop
add
mov
dec
fild
add
scas
sbb
inc
xchg
xchg
xchg
adc
add
xchg
sub
stos
inc
cld
xchg
mov
cmp
dec
hlt
jae
mov
outs
xchg
xor
mov
cmps
inc
sbb
and
mov
out
pop
xchg
adc
cmp
retf
fsubr
xor
fdivr
loope
pushf
popa
and
stos
out
sbb
mov
movs
pop
rcl
ss
fst
push
inc
mov
(bad)
add
cmp
and
in
gs
leave
cmc
sub
xor
addr16
je
pop
pop
push
push
mov
inc
inc
lahf
(bad)
sub
scas
pop
mov
cmp
test
ins
and
ret
test
or
mov
add
into
mov
push
fs
out
pop
imul
lods
mov
test
fsubr
mov
xchg
fld
push
dec
dec
loope
mov
mov
fstp
cmp
jge
fucomip
mov
pusha
fisttp
cmp
jb
rcr
int
test
mov
loope
sub
push
js
inc
cmp
retf
mov
jecxz
dec
(bad)
sbb
mov
and
sar
dec
push
push
fwait
(bad)
je
imul
push
gs
test
fbstp
ret
mov
jmp
lds
imul
push
jmp
cs
(bad)
xor
xchg
sub
mov
add
pop
add
mul
sbb
loope
call
ret
push
mov
data16
mov
dec
and
mov
(bad)
popf
das
std
xchg
add
cmp
add
daa
cli
inc
iret
in
inc
ja
mov
lea
pop
out
add
dec
rcr
imul
cld
stc
xor
dec
(bad)
in
jmp
sub
inc
sbb
lods
and
lock
cwde
add
rol
ins
iret
pop
push
xor
loopne
je
jmp
bswap
and
dec
repz
retf
or
fsubr
or
(bad)
mov
bound
dec
daa
int
jl
add
fwait
inc
mov
js
mov
mov
fcomp
stos
out
jl
mov
std
add
xchg
ja
pop
mov
mov
fisttp
ror
aaa
push
push
in
dec
daa
and
dec
and
jne
test
int
jbe
or
sub
(bad)
into
jl
jp
sub
stos
mov
pop
xor
fisttp
fstp
dec
or
int3
pusha
icebp
mov
xchg
aaa
in
into
sub
push
dec
sub
out
lahf
rol
mov
mov
ss
ja
mov
xor
lahf
xchg
mov
mov
mov
adc
pop
aas
or
pusha
(bad)
mov
sub
(bad)
loop
or
je
push
call
fs
push
nop
gs
jmp
or
iret
or
or
ja
cli
sub
mov
in
call
stos
sub
repz
lahf
xor
cmp
xor
jmp
jno
cli
jnp
cmp
pusha
add
push
test
test
scas
pop
rcr
xor
jp
stc
mov
cld
lahf
icebp
or
loopne
sahf
(bad)
popf
and
jns
rol
jne
jecxz
inc
and
push
out
cmp
pop
std
aad
and
jno
(bad)
push
push
pop
jmp
pushw
cmps
out
addr16
cld
pop
icebp
(bad)
and
pusha
or
mov
inc
(bad)
cmc
loop
enter
adc
add
push
cmp
out
retf
xchg
or
push
adc
xchg
add
xchg
add
xor
cmp
xchg
push
ja
dec
adc
dec
enter
mov
adc
xor
xor
push
xor
sbb
pop
mov
push
test
(bad)
out
add
pop
(bad)
mov
int
jns
cmp
and
mov
push
cmp
pop
inc
jle
add
loop
call
push
cld
les
in
add
sti
inc
push
out
sahf
xor
lea
seta
inc
(bad)
in
xor
stos
inc
ret
out
inc
outs
fcomp
fnsave
inc
xchg
push
or
or
mov
scas
aaa
cmps
(bad)
idiv
stos
pop
(bad)
lods
or
je
call
xor
inc
push
push
xor
ret
call
sbb
int
sub
mov
jge
int3
cld
out
mov
pop
mov
imul
icebp
daa
mov
inc
xor
or
out
sub
lahf
(bad)
jmp
(bad)
in
mov
fcomp
shl
ret
jns
xor
out
lock
outs
sub
jg
out
xchg
mov
sbb
imul
dec
dec
or
dec
out
cmp
minps
ja
mov
jns
out
clc
jns
sub
fdiv
movs
xchg
je
int
ret
fist
jle
push
(bad)
sub
lds
push
mov
jns
pop
dec
and
loope
mov
in
(bad)
rcr
cmp
shr
mov
scas
lods
and
lods
cmp
inc
std
test
int3
mov
and
add
cli
inc
ss
sbb
pop
adc
xor
xor
dec
push
inc
jae
sub
int
sub
sahf
fild
mov
leave
pop
and
out
fwait
mov
stos
mov
inc
scas
data16
jns
add
scas
loop
mov
outs
out
movs
mov
repz
xchg
scas
pop
and
das
pop
cmp
mov
fs
lock
mov
cs
imul
(bad)
mov
std
out
jnp
aas
ja
sbb
popa
mov
pop
loope
and
sub
xor
jne
pop
adc
sar
or
jmp
out
aaa
call
push
outs
push
mov
push
scas
sbb
xor
and
xchg
mov
push
in
mov
adc
int
mov
xchg
jns
pop
or
mov
test
add
pop
dec
adc
push
bound
cmp
aad
cmc
inc
ins
das
(bad)
sbb
cdq
in
sub
or
fs
cs
cmp
mov
(bad)
loope
ror
fild
lock
add
dec
xor
ror
mov
jmp
push
push
sub
xchg
inc
jp
cli
pop
sub
push
ror
pop
and
and
or
fwait
add
mov
outs
xchg
xchg
and
mov
jg
jecxz
xor
or
inc
sahf
sti
rol
mov
push
sub
out
ret
sbb
rol
cmp
sbb
inc
pop
shr
sbb
(bad)
sbb
je
out
loope
div
push
enter
hlt
cmp
mov
inc
mov
mov
fs
or
movs
and
or
and
loope
cmp
les
enter
jmp
push
cmps
imul
aad
sbb
jnp
adc
cmps
daa
aad
xchg
(bad)
in
jmp
jle
or
imul
fsubr
sub
inc
jge
call
pop
push
inc
sahf
mov
or
sub
hlt
ins
rcl
aad
adc
test
jecxz
lods
push
adc
fisttp
pusha
rol
mov
cld
xor
lods
(bad)
int3
bswap
loop
dec
mov
cld
cmp
ins
shr
pop
inc
jmp
stc
mov
mov
push
fs
xor
movs
fwait
pop
popa
sub
sbb
(bad)
xchg
outs
mov
mov
jmp
xchg
in
mov
jnp
push
cdq
mov
pop
fild
add
mov
mov
ret
pop
inc
dec
das
mov
pop
jmp
cmps
cdq
xor
enter
popa
ins
(bad)
mov
loop
dec
xchg
test
aaa
xchg
pusha
push
jg
fsubp
les
arpl
popa
jecxz
cs
ror
inc
jmp
sub
or
rcl
mov
adc
cmp
js
rol
xchg
mov
mov
(bad)
inc
jmp
test
imul
ins
cmp
inc
jb
daa
push
leave
push
jg
jmp
shl
add
imul
gs
push
stc
fdiv
popf
push
and
mov
push
and
push
pop
mov
les
lahf
push
test
stos
rol
je
les
aaa
xor
cmp
jae
push
out
es
js
clc
mov
gs
mov
rol
cmp
call
cwde
mov
jp
cmp
mov
sub
scas
(bad)
jne
pop
out
mov
outs
or
mov
cmp
fdivr
mov
xchg
lea
cmp
xchg
xor
xor
and
test
in
loopne
(bad)
sbb
mov
mov
test
jne
and
mov
jmp
iret
dec
xor
pop
mov
aam
test
std
in
aas
aas
fadd
push
push
inc
add
loopne
sbb
lods
sub
ss
xchg
and
nop
mov
lods
stc
call
xor
sahf
xor
in
xor
scas
stos
mov
dec
mov
cmc
and
iret
xchg
xor
dec
cwde
stos
outs
mov
jbe
jae
add
ins
xchg
clc
lahf
inc
(bad)
mov
jle
jae
jno
ficomp
sbb
(bad)
sub
jmp
call
(bad)
push
into
call
jmp
dec
inc
data16
arpl
jmp
mov
call
jmp
out
cmps
jge
test
inc
enter
push
or
mov
sti
inc
add
outs
and
imul
movs
pop
(bad)
push
or
ins
les
ret
or
out
pop
pop
hlt
je
imul
jmp
aaa
sub
(bad)
dec
fcom
das
push
xchg
jmp
shl
xchg
mov
aas
xor
mov
fst
rol
jl
dec
push
cs
push
rcr
std
push
stos
jno
mov
cmps
rcr
dec
idiv
sub
or
pop
jmp
aas
call
in
loop
cli
or
in
or
clc
inc
add
stos
add
pop
clc
cmc
add
ret
inc
add
in
js
mov
adc
push
xor
push
jno
test
ins
push
and
jle
push
daa
out
cmp
into
push
pop
data16
mov
ret
fisubr
mov
out
mov
jmp
push
mov
sahf
ss
or
iret
jo
inc
xchg
mov
push
mov
jnp
iret
sub
rcl
sub
mov
mov
fild
bound
std
sub
push
rcr
add
sahf
dec
cmc
scas
pop
fwait
cmp
cmp
outs
xor
fs
and
pop
call
cli
xlat
pushf
leave
mov
or
pop
fisub
or
ds
js
pop
(bad)
enter
inc
cmp
jae
imul
pushf
and
hlt
add
leave
or
and
add
call
mov
(bad)
and
sar
inc
in
xor
(bad)
jecxz
outs
aam
adc
and
jno
sub
sub
ret
retf
pop
mov
xchg
aaa
inc
shr
jge
push
adc
xor
sub
inc
dec
loopne
dec
cli
fcomp
movs
push
mov
jbe
or
or
mov
pop
gs
je
sbb
or
(bad)
(bad)
fdivr
in
push
gs
mov
inc
and
cmps
sub
jecxz
or
cwde
or
movs
or
and
cmp
mov
(bad)
push
leave
push
jmp
mov
cmp
mov
loope
out
and
int3
add
shl
iret
xor
pop
and
mov
and
xor
mov
arpl
icebp
(bad)
xchg
aad
hlt
adc
and
pop
fiadd
bound
cld
data16
push
inc
dec
(bad)
mov
inc
pop
push
mov
leave
sub
movs
sar
outs
pop
lea
push
mov
fimul
xchg
js
lock
dec
sub
xor
(bad)
mov
push
out
iret
mov
or
mov
test
cmp
(bad)
int
pop
push
sub
xor
sbb
mov
push
loope
fnsave
ds
cmp
jns
popa
aaa
rcl
loope
cwde
add
pop
out
dec
sar
push
fistp
hlt
jecxz
mov
xor
cld
js
fld
ret
inc
stos
or
sahf
cld
ss
mov
enter
popa
inc
push
mov
outs
cdq
imul
mov
inc
inc
clc
iret
jmp
imul
sbb
xor
jne
push
imul
sbb
aas
sbb
fdiv
es
fbstp
jmp
dec
jle
xchg
outs
repnz
(bad)
(bad)
sbb
ret
lock
dec
cli
cmps
test
movs
mov
pop
cwde
inc
mov
out
sub
xchg
cmps
xor
lods
pop
sbb
xchg
leave
sahf
stc
and
dec
fcmovu
add
not
add
or
call
mov
fbld
in
xchg
mov
iret
daa
movs
lea
xchg
enter
fadd
cmp
xor
adc
mov
lahf
ja
daa
mov
push
scas
mul
add
popf
lods
mov
test
pushf
out
mov
mov
icebp
(bad)
stos
jo
jnp
fisttp
movs
sub
ds
jno
jae
out
and
pop
ficom
test
dec
outs
bound
rol
mov
cld
sbb
imul
mov
jnp
(bad)
test
push
mov
sbb
into
xchg
xor
cli
and
fwait
adc
movs
mov
add
(bad)
sub
ja
aas
xor
sub
push
or
popa
hlt
rol
push
arpl
mov
loope
inc
(bad)
push
mov
jae
dec
fnstsw
in
aaa
inc
nop
mov
xor
and
arpl
(bad)
out
cdq
sbb
(bad)
in
fcomp
cwde
dec
fisubr
imul
popa
stos
fcom
mov
cdq
mov
cmp
aad
push
sub
cmps
in
ret
int3
xor
sahf
int3
add
das
jae
xor
dec
jle
sub
and
data16
add
add
add
add
sub
sub
mov
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ror
or
add
dec
adc
xchg
sub
test
xor
add
xor
add
test
add
inc
mov
(bad)
ins
and
sbb
add
mov
adc
pop
dec
add
add
sub
hlt
test
add
add
mov
add
add
add
add
mov
or
movs
fiadd
adc
scas
and
add
mov
jecxz
and
jl
add
rol
and
inc
and
call
mov
mov
lahf
test
in
add
add
shl
shl
push
mov
ud1
add
sbb
out
add
mov
cmp
add
sub
mov
and
add
add
add
mov
jb
mov
sub
jecxz
and
sbb
add
sbb
or
and
call
rol
popf
add
mov
out
xchg
pop
add
(bad)
add
out
lods
pop
call
adc
inc
jae
test
jb
add
setnp
sub
jb
test
test
(bad)
xlat
mov
mov
sbb
out
lods
push
add
xchg
add
add
test
add
xor
push
cmp
and
jb
test
(bad)
popa
mov
add
add
push
mov
out
cmp
xchg
mov
mov
add
mov
add
add
add
mov
jmp
inc
add
mov
les
add
sub
out
add
mov
or
pop
add
add
mov
xchg
mov
or
ins
fs
add
test
add
sub
sub
and
sub
add
jmp
mov
and
xor
add
mov
xor
add
add
int
ss
retf
push
pop
pop
(bad)
mov
mov
add
ficom
sub
add
cli
fmul
add
pcmpgtd
add
add
add
int
sbb
mov
add
xor
add
add
add
pop
sbb
and
mov
add
adc
sub
mov
mov
sub
cmp
mov
add
fsubrp
dec
pop
add
xor
sbb
and
add
add
retf
mov
add
add
add
mov
adc
pop
pushf
add
add
add
mov
add
and
add
push
add
add
mov
out
sub
sub
dec
aaa
add
adc
test
jb
rcr
shl
add
ud1
movs
out
cmp
add
cmp
or
add
add
add
add
xor
call
mov
ficom
mov
cvtpi2ps
add
verw
add
cmp
add
rcr
push
test
ficomp
test
pop
add
ss
sub
cmp
dec
mov
add
add
ficom
test
sub
sbb
pop
mov
je
jmp
mov
add
xor
mul
test
add
add
and
call
and
shl
add
sbb
test
out
add
sub
setae
mov
mov
add
add
call
shl
retf
add
add
add
sbb
test
add
test
xchg
push
cmps
add
add
call
sub
setae
cmp
add
or
test
es
pop
pusha
test
add
jo
add
mov
and
add
jb
ret
cmp
inc
scas
pop
gs
and
ss
out
add
cmp
add
rcr
and
je
fwait
das
test
inc
add
and
add
add
xchg
jno
dec
sub
and
daa
(bad)
and
add
jmp
xchg
mov
mov
xor
sar
retf
push
jb
jmp
into
test
les
loope
dec
jmp
add
add
add
mov
xor
mul
je
jmp
mov
pop
pop
cmp
push
mov
popa
inc
test
dec
add
add
add
add
xchg
inc
and
add
lock
add
add
add
mov
inc
mov
add
jmp
ss
test
lea
not
adc
add
retf
add
xor
mov
sub
mov
xchg
jmp
add
ss
and
add
add
mov
pop
cmps
cdq
xor
test
test
sub
xchg
inc
and
stos
bound
sbb
add
es
add
push
test
add
add
test
aad
and
scas
sbb
add
push
add
adc
and
loop
mov
mov
dec
xchg
adc
fild
js
mov
xchg
popa
test
push
rol
cmovne
mov
and
add
out
push
mov
sbb
test
add
mov
sub
sbb
sub
mov
xchg
mov
mov
call
pop
test
into
stos
mov
mov
add
add
add
or
mov
aaa
jmp
test
stc
mov
sbb
add
mov
fsubrp
add
add
jne
in
loop
movs
pop
add
sbb
mov
dec
dec
ficom
add
int3
imul
test
xor
add
and
add
aad
lea
movs
mov
mov
cmp
dec
add
and
add
add
call
mov
add
jecxz
int
add
sbb
and
les
add
in
mov
mov
push
in
lea
mov
push
adc
add
cmp
ins
adc
sbb
add
xor
add
or
pop
xor
mov
loop
mov
adc
add
cld
dec
add
add
lods
sbb
add
xor
int3
test
add
add
mov
add
add
dec
cmp
and
add
add
adc
sub
mov
loop
inc
add
or
or
add
xlat
rol
cmp
or
imul
add
dec
mov
call
mov
mov
sti
test
test
loope
adc
add
sahf
bound
mov
add
dec
retf
xchg
in
add
add
enter
sub
push
test
add
sahf
add
test
xor
add
(bad)
ret
sub
pop
out
add
add
aaa
and
add
add
adc
cld
mov
jge
ror
add
add
add
xchg
pusha
nop
dec
add
int3
or
lods
pop
dec
sbb
dec
mov
jmp
mov
add
jmp
mov
mov
jmp
mov
cdq
mov
jb
adc
mov
add
adc
mov
and
add
add
outs
inc
or
pop
jmp
dec
test
and
add
mov
jmp
and
add
add
add
sub
mov
and
imul
mov
and
and
add
add
add
mov
in
mov
xor
add
popf
xchg
mov
popf
jnp
xchg
daa
and
test
test
test
sub
out
rol
mov
retf
pop
xor
fucomi
lods
add
add
add
sub
mov
int
aaa
sbb
and
sbb
cld
in
jmp
mov
mov
add
jmp
lods
outs
in
les
add
inc
mov
out
sbb
and
cmp
xor
cmps
ficom
mov
inc
mov
jge
adc
sbb
mov
aas
jne
cmp
cmp
fcmovnu
cmps
add
sub
sub
add
add
inc
mov
add
sub
xchg
sub
add
add
test
add
add
sbb
jb
add
push
fiadd
add
cdq
mov
jb
xchg
mov
add
pusha
jp
add
inc
and
add
add
mov
call
mov
and
or
add
pop
cld
(bad)
(bad)
dec
fiadd
lahf
mov
add
add
add
test
lock
add
xchg
jno
dec
mov
inc
add
xor
adc
sbb
popa
jmp
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
push
mov
xor
cmp
pop
cmovne
mov
jmp
mov
jmp
mov
mov
add
shl
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
shl
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
sub
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
cmp
cmova
mov
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
pushf
mov
xor
popf
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
pushf
xor
add
sub
popf
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
jmp
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
shl
mov
call
mov
mov
jmp
mov
jmp
mov
mov
call
mov
jmp
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pushf
movs
inc
add
movs
inc
add
movs
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
outs
cmps
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
enter
shl
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
cmps
inc
add
test
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
inc
add
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
les
cli
test
add
cmc
mov
adc
call
add
mov
cwde
gs
mov
(bad)
into
lds
call
jae
mov
jp
test
mov
add
add
push
mov
mov
push
sar
xchg
cmp
push
sbb
gs
clc
dec
add
ret
addr16
add
mov
and
mov
dec
fisttp
add
psubsb
add
add
add
out
shr
xor
test
xchg
add
ins
js
ret
jmp
mov
and
add
add
mov
pop
jl
call
mov
out
shr
push
rcr
jo
jecxz
cli
call
jl
jmp
add
dec
pop
sub
fimul
lds
xadd
add
add
lods
or
add
xor
add
xchg
in
retf
jae
retf
jp
adc
add
add
test
add
sub
in
inc
and
je
jmp
mov
sub
mov
mov
(bad)
pop
add
add
add
add
test
nop
sub
clc
dec
aaa
push
mov
cs
test
add
inc
and
add
mov
cwde
fild
and
cmovl
add
add
cmc
jnp
addr16
jbe
imul
pop
pop
jp
call
and
add
push
xor
mov
test
fadd
dec
loope
sub
push
sub
retf
cmp
add
mov
add
mov
pop
nop
add
ret
or
inc
fdiv
add
jmp
in
test
add
loope
hlt
retf
mov
sub
xchg
add
add
out
sti
and
add
ret
sub
adc
arpl
(bad)
fsub
add
jnp
add
shl
add
int3
cli
mov
and
je
jmp
mov
sub
pop
mov
and
clc
gs
mov
jae
add
add
mov
ud2
out
push
add
mov
add
mov
and
add
add
mov
sub
in
inc
and
xadd
add
add
fimul
add
add
cdq
xchg
mov
cmps
sar
add
add
add
jmp
mov
stc
pusha
in
add
add
add
clc
test
push
mov
push
ror
test
add
call
test
gs
and
ud2
aaa
and
add
mov
sub
test
test
add
add
cli
add
mov
and
add
dec
sub
je
mov
aaa
addr16
dec
push
and
add
add
shl
pushf
stos
dec
and
mov
jg
addr16
mov
jno
and
add
push
adc
mov
cmp
add
loope
gs
cmp
add
in
ja
mov
clc
xchg
and
xchg
add
cli
add
add
retf
test
add
add
add
add
clc
gs
inc
adc
rep
fdivr
ja
sub
ins
add
and
jbe
getsec
pop
in
mov
jl
mov
sbb
add
out
cli
sub
xchg
and
add
cmp
cmove
add
jmp
mov
cmp
and
add
gs
(bad)
and
mov
add
mov
and
inc
xchg
jnp
add
lea
icebp
add
xlat
scas
out
sbb
jg
mov
sub
in
pop
jp
pop
cmps
daa
mov
jns
ins
lea
addr16
mov
pop
and
add
test
xor
jae
add
add
hlt
scas
loopne
rol
call
jnp
or
add
stos
push
inc
add
dec
add
lahf
sbb
inc
gs
xchg
(bad)
push
add
cmovne
mov
and
add
rcl
cld
gs
lea
dec
add
out
xchg
popa
pushf
(bad)
and
xchg
mov
xchg
ja
xlat
inc
or
jl
mov
mov
inc
xor
mov
or
jnp
push
and
push
add
push
add
mov
int3
test
mov
jmp
cmp
add
xor
inc
xchg
add
loope
rol
add
dec
push
add
mov
inc
xchg
add
sar
cmp
mov
mov
add
jnp
in
jecxz
cwde
add
add
push
mov
int3
fsub
mov
icebp
rol
and
xchg
add
(bad)
loope
call
xor
add
add
inc
movs
add
add
call
pop
mov
add
xchg
inc
(bad)
stos
add
add
test
add
adc
cli
(bad)
dec
pop
add
in
push
push
and
add
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
sti
or
inc
push
test
jecxz
daa
in
mov
(bad)
addr16
add
add
loopne
hlt
xchg
add
add
add
mov
mov
jle
and
fld
add
mov
add
adc
mov
mov
cwde
outs
and
add
ret
cld
and
mov
jge
(bad)
call
or
add
mov
add
and
dec
hlt
inc
and
adc
add
pop
push
(bad)
jle
aad
add
fld
jae
loop
test
rol
add
adc
add
push
and
je
add
mov
in
adc
add
add
add
inc
test
or
add
js
mov
pop
jmp
scas
pusha
xchg
pushf
add
push
out
mov
push
add
or
add
add
mov
sub
xor
jg
or
in
mov
mov
add
cmp
mov
jmp
or
xor
jg
and
add
add
enter
jecxz
daa
jg
jmp
mov
sub
nop
test
imul
test
cmps
or
dec
mov
add
sub
mov
(bad)
jae
(bad)
and
add
or
call
sub
(bad)
or
in
add
cwde
fs
xor
sbb
mov
and
add
icebp
sub
cli
data16
add
mov
sahf
rol
jne
sbb
add
loope
and
pop
mov
ror
fs
add
pop
cmp
add
push
sti
inc
(bad)
mov
add
push
and
ret
jp
and
add
add
pop
add
jp
pushf
add
inc
rcl
jl
enter
hlt
jbe
test
icebp
inc
jmp
lods
test
add
cmp
ins
add
sbb
(bad)
and
add
mov
add
mov
or
add
sub
mov
add
je
jmp
push
test
add
add
pusha
shl
fs
add
(bad)
and
adc
sub
add
mov
test
push
faddp
dec
retf
push
push
test
pusha
and
add
push
cmp
hlt
lahf
loope
add
test
out
jecxz
add
lods
test
in
dec
push
mov
add
push
add
jp
clc
add
xchg
mov
mov
pop
add
add
repnz
or
add
pop
or
jae
test
jecxz
add
adc
addr16
add
add
(bad)
push
add
add
loope
and
jmp
repz
dec
cli
mov
add
test
or
or
loop
test
mov
add
mov
ret
psubd
mov
sbb
push
mov
mov
clc
add
mov
mov
test
cmovno
jmp
lods
test
sub
jb
jl
dec
icebp
xchg
inc
add
sbb
in
add
dec
mov
hlt
jbe
mov
test
fadd
jae
mov
jmp
mov
xor
mov
and
add
xchg
movq
pop
add
movs
add
fld
jg
and
add
mov
imul
daa
packssdw
jecxz
add
popf
and
imul
jae
in
mov
inc
mov
jmp
mov
add
imul
jg
or
add
add
sbb
sub
mov
jg
jmp
stos
enter
fld
sub
mov
sub
add
jl
ret
push
daa
in
and
jecxz
mov
jb
outs
dec
add
fs
and
(bad)
jle
jbe
push
add
icebp
inc
mov
out
jecxz
add
cwde
test
and
jne
push
(bad)
push
push
push
add
add
jne
and
add
add
loopne
test
xor
hlt
jns
pop
mov
jae
add
and
in
mov
aad
loopne
push
and
add
jg
sbb
(bad)
out
test
or
mov
mov
add
xor
loop
mov
pushf
push
es
xor
sbb
(bad)
out
inc
jmp
out
test
add
add
mov
jbe
dec
call
add
shl
and
mov
add
clc
add
mov
add
add
out
adc
and
and
les
mov
and
mov
and
jae
into
in
and
push
sbb
add
mov
add
add
adc
add
fcomi
add
add
ins
xchg
and
daa
add
jmp
xchg
add
and
adc
add
push
add
xchg
add
add
repz
push
add
mov
pushf
add
xchg
aad
test
mov
jecxz
ret
jne
add
add
sub
imul
(bad)
lahf
or
jne
fld
fnstenv
adc
into
aad
pusha
and
add
push
ins
and
jne
lock
add
mov
and
lea
dec
pop
xchg
xor
xor
add
jo
or
add
shl
add
gs
jb
add
ins
xor
jecxz
dec
and
add
mov
add
mov
add
push
fs
add
jo
jo
icebp
test
add
(bad)
pushf
add
add
mov
xchg
(bad)
pop
jne
mov
xchg
dec
pop
mov
jmp
sbb
and
add
loopne
mov
test
add
test
dec
fnstenv
mov
pusha
and
and
(bad)
lds
mov
(bad)
imul
dec
xor
add
add
pusha
es
pop
and
add
add
test
or
add
mov
cmp
mov
jmp
push
add
add
fs
imul
adc
and
mov
jo
jae
jmp
outs
test
addr16
mov
je
sbb
gs
jl
mov
jmp
jne
and
add
ja
jmp
rol
and
test
add
mov
add
hlt
pop
repnz
mov
cwde
adc
add
ins
loopne
add
mov
push
pop
test
add
add
test
add
je
jmp
mov
std
out
jecxz
add
mov
jecxz
dec
push
mov
push
add
mov
and
xchg
loopne
sub
mov
jns
inc
or
jae
mov
or
push
adc
mov
jg
sub
add
cmp
add
imul
add
test
fidiv
mov
sub
dec
test
mov
push
add
add
(bad)
jmp
(bad)
mov
pushf
cmc
add
rcl
push
retf
add
xor
or
add
test
add
mov
pop
or
bound
cwde
pop
add
dec
fiadd
add
fisttp
icebp
inc
hlt
mov
test
cwde
in
mov
test
or
add
push
test
add
sub
jecxz
and
add
loopne
movs
xor
add
mov
pushf
cmc
add
ins
sar
sahf
mov
in
test
add
in
mov
add
mov
sub
jecxz
and
mov
fs
outs
and
fucomp
hlt
add
jp
and
inc
add
pop
in
and
mov
jg
or
jne
sbb
(bad)
fs
mov
jg
sbb
fnstenv
test
pushf
es
sub
push
and
add
add
add
add
add
test
pushf
gs
add
and
lds
lds
je
push
add
add
mov
pop
mov
scas
cmp
mov
jmp
inc
pop
and
jmp
mov
popf
imul
fisttp
jecxz
jnp
add
cld
fs
mov
add
add
push
mov
jo
jne
or
jmp
imul
pop
sbb
test
pop
mov
out
adc
mov
repz
xor
fimul
test
add
jmp
mov
movs
ror
inc
xchg
jge
test
add
add
add
test
add
add
jge
and
pslld
add
mov
add
add
iret
invlpga
daa
lods
inc
xor
push
add
jmp
mov
and
add
sub
mov
jae
and
fadd
hlt
mov
popf
pushf
lock
add
mov
punpcklbw
sub
add
ret
inc
add
mov
icebp
loopne
out
dec
jmp
mov
sub
enter
in
mov
jmp
scas
test
iret
mov
ds
jnp
je
jmp
mov
lock
dec
dec
xor
dec
test
loop
jmp
mov
or
and
je
pushf
adc
and
(bad)
(bad)
fs
push
inc
and
das
test
test
hlt
mov
ins
mov
mov
maskmovq
mul
add
or
scas
test
sub
mov
int3
icebp
test
sbb
add
mov
jne
inc
or
add
or
test
stc
add
jmp
mov
std
out
jecxz
in
lds
and
int3
test
je
mov
jecxz
add
or
pushf
add
pusha
push
inc
dec
lds
cmc
je
sbb
fnstenv
imul
xchg
cmp
je
lods
add
test
int
jge
aam
push
mov
push
je
sbb
fld
mov
and
es
sub
mov
push
int3
in
add
imul
and
add
or
and
out
movs
or
jmp
push
loope
add
mov
retf
lds
add
add
dec
xor
ss
cmp
aam
and
test
and
outs
repz
mov
popf
pop
add
inc
fcom
in
daa
imul
add
add
dec
dec
pop
mov
clc
add
add
and
call
out
adc
or
pusha
fmul
mov
cmp
das
or
mov
jmp
lds
xchg
imul
test
loop
add
jne
sbb
mov
in
add
call
mov
mov
cmp
(bad)
xor
lods
add
jae
adc
in
(bad)
xor
adc
xchg
(bad)
adc
pop
lea
mov
xor
xchg
loopne
(bad)
mov
jbe
in
nop
inc
add
dec
dec
jno
mov
in
and
outs
out
mov
push
dec
add
fidivr
add
ror
fldenv
dec
mov
push
add
sub
mov
imul
cwde
xchg
add
push
and
cwde
push
(bad)
iret
mov
call
clc
mov
dec
add
add
mov
mov
jnp
(bad)
inc
mov
and
xchg
add
imul
mov
sub
lds
std
xor
add
test
xchg
mov
and
adc
(bad)
xor
xor
sbb
add
jecxz
cmp
(bad)
fs
in
mov
and
mov
call
mov
add
jle
add
add
mov
mov
add
mov
sbb
jecxz
jne
push
retf
jnp
jmp
aas
add
pop
lods
fdiv
jbe
pusha
or
add
add
lea
lock
add
shl
test
repz
add
jmp
push
xor
xchg
loopne
jmp
mov
fsub
dec
pusha
push
js
add
(bad)
out
jle
add
add
and
call
mov
or
add
add
cmovl
imul
push
add
inc
lods
add
sub
jb
fld
(bad)
icebp
sbb
add
add
cmc
gs
aas
and
or
mov
add
mov
lea
loop
retf
fld
cmovl
xchg
loopne
jmp
sbb
adc
rcl
loop
lea
stos
or
mov
mov
add
add
iret
cmp
push
cdq
cmp
adc
call
add
icebp
aaa
add
mov
push
pop
add
add
jle
add
add
add
call
or
inc
ins
aas
mov
dec
mov
push
(bad)
retf
and
xchg
add
or
dec
add
pop
rcr
add
pusha
jmp
imul
add
and
call
mov
mov
lea
sbb
push
ror
mov
enter
leave
jge
xor
sbb
lods
ja
add
mov
add
lea
lea
inc
inc
add
rol
scas
add
mov
mov
push
js
adc
mov
mov
(bad)
retf
inc
lods
xchg
loopne
jmp
xor
cdq
dec
dec
adc
rol
daa
add
add
adc
add
and
popf
jle
add
mov
or
jnp
in
mov
add
imul
and
add
fwait
xor
add
jo
fidivr
dec
pusha
call
add
add
add
xor
add
jp
xlat
pop
push
mov
cmp
imul
and
and
dec
fimul
jne
lods
add
fcom
jo
add
add
add
xchg
mov
int3
repnz
add
test
outs
daa
iret
mov
fwait
ja
add
dec
sub
mov
leave
lsl
add
hlt
jbe
sub
jae
lea
lea
inc
bound
mov
xchg
lods
dec
and
stc
lods
scas
add
pop
mov
aad
mov
ret
add
imul
inc
push
mul
es
cld
or
rol
cmp
add
jecxz
test
dec
and
call
mov
pop
mov
(bad)
pop
push
fld
hlt
add
retf
aad
add
fldl2t
lock
add
xor
jecxz
xchg
(bad)
pusha
jmp
lea
jge
add
add
pop
and
dec
and
call
mov
mov
frstor
dec
xor
cmovl
push
mov
add
sbb
loop
test
add
mov
xchg
dec
pusha
clc
sub
inc
and
je
mov
sbb
add
cwde
test
add
add
add
mov
test
lods
gs
add
lock
movs
add
xor
gs
test
outs
add
fild
dec
add
in
add
and
ret
pop
stc
imul
mov
mov
in
les
imul
inc
jbe
mov
fidivr
inc
fld
shr
dec
add
and
push
pop
(bad)
inc
add
in
add
mov
sub
add
and
sbb
cmp
add
loopne
cmovne
mov
jmp
call
xor
and
or
inc
add
add
inc
fld
test
mov
outs
add
add
mov
cwde
cmp
add
add
aas
mov
and
xchg
add
jmp
mov
push
lock
mov
add
jbe
add
mov
add
retf
xchg
aad
add
inc
inc
mov
or
sbb
push
cmovne
mov
(bad)
fcom
into
push
xchg
mov
jg
popf
clc
lock
fptan
cmp
add
daa
pop
sar
xor
pop
scas
add
sub
mov
imul
ret
sbb
icebp
mov
call
popa
retf
or
xor
jecxz
into
fisttp
fs
pop
xor
push
sar
clc
fdiv
add
add
add
xor
add
call
and
and
push
pop
out
push
(bad)
(bad)
fsubrp
jnp
add
mov
xchg
jge
jle
loopne
add
test
xor
fst
inc
inc
js
xchg
add
inc
push
test
dec
out
(bad)
addr16
add
mov
and
or
pop
add
add
arpl
movs
fsubrp
(bad)
dec
add
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
push
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
mov
mov
not
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
or
jge
sbb
mov
mov
nop
add
test
add
add
add
add
add
test
add
in
cwde
add
add
add
mov
or
retf
jmp
add
fisttp
and
dec
aas
push
(bad)
dec
in
adc
jns
and
rol
call
mov
jnp
xor
in
add
or
add
cmps
mov
jno
xchg
xor
mov
rol
add
and
add
add
(bad)
icebp
repnz
fdiv
and
add
push
inc
loope
aam
xchg
add
maxps
add
add
xor
lods
mov
cmps
(bad)
ss
add
add
add
lock
std
push
adc
fs
push
jg
jmp
outs
sbb
mov
add
inc
lods
mov
jg
jmp
mov
sub
cmp
add
jg
jmp
cmp
enter
add
push
push
add
sbb
aam
call
add
test
lahf
xchg
jno
add
add
jno
add
push
add
add
cwde
or
ins
mov
push
add
test
push
(bad)
add
mov
fisttp
xor
add
test
xor
add
add
sub
mov
add
test
inc
add
add
call
mov
mov
jg
inc
add
fstp
and
add
in
ja
fwait
mov
or
xchg
rol
packuswb
add
add
test
fwait
push
add
das
sbb
xchg
(bad)
in
je
jmp
je
mov
pop
dec
mov
push
test
(bad)
and
in
jmp
mov
add
or
mov
sbb
jmp
aas
test
js
add
pop
test
add
xchg
jg
pop
add
xor
test
mov
(bad)
xor
les
cwde
add
paddsb
repz
add
mov
add
mov
push
xchg
test
xchg
xor
add
mov
cs
push
test
or
mov
test
add
add
test
out
cwde
mov
add
pop
ins
and
mov
add
(bad)
push
add
mov
and
sub
mov
pcmpeqb
aad
call
xor
push
add
das
dec
adc
cmp
cs
add
jmp
arpl
and
add
add
cmp
add
je
jmp
mov
inc
cmp
mov
out
movs
add
add
add
add
mov
leave
je
or
call
rol
call
nop
stc
mov
(bad)
sti
add
add
add
mov
mov
sub
mov
or
cmc
add
jl
add
test
mov
sub
mov
lds
xchg
shr
wrmsr
and
add
add
repnz
and
sbb
jmp
mov
mov
add
and
and
scas
add
xchg
cmp
test
add
xor
jb
lahf
inc
and
jbe
jmp
mov
sbb
ficomp
and
call
add
test
add
not
cmp
and
punpcklwd
sbb
lock
pop
ins
mov
sub
mov
(bad)
mov
in
cwde
add
mov
stos
adc
xchg
add
and
mov
and
wrmsr
inc
xor
mov
sbb
push
add
add
sub
out
mov
lock
mov
hlt
or
add
mov
scas
add
add
cmps
mov
shl
sbb
retf
jg
jmp
je
jnp
(bad)
and
loop
cmp
nop
inc
jmp
jge
lock
call
icebp
ret
and
wrmsr
dec
adc
add
mov
test
mov
aaa
pop
push
mov
add
mov
sub
repnz
and
jbe
jmp
mov
add
pop
inc
aam
fild
mov
jmp
lock
add
add
cmp
je
and
push
int3
loopne
add
test
mov
clc
mov
add
push
mov
sub
mov
and
xchg
test
pop
mov
xchg
mov
test
ins
mov
xor
jbe
pop
sbb
and
push
cld
dec
jl
xchg
int3
cwde
je
fadd
mov
jnp
and
add
mov
mov
outs
xchg
mov
adc
call
ror
add
std
cmc
add
push
mov
xor
add
add
pop
add
add
and
sub
retf
mov
fist
rcl
mov
jnp
cmc
(bad)
jmp
or
add
mov
jmp
mov
test
add
jnp
xchg
and
add
add
mov
dec
in
cwde
cmps
pop
stos
mov
mov
call
ret
pop
retf
(bad)
loopne
test
push
cmps
add
and
push
movs
adc
call
cdq
mov
test
push
jnp
push
jmp
add
add
ds
mov
mov
add
push
push
xor
or
and
div
in
add
jmp
or
inc
pop
cdq
mov
adc
test
cmovne
mov
jmp
cmp
add
add
add
xchg
dec
cmps
add
mov
pusha
cs
mov
mov
mov
ror
jno
arpl
mov
(bad)
(bad)
mov
push
ret
adc
add
mov
rol
cmp
add
mov
push
cmps
add
scas
test
cld
pusha
or
ins
cwde
add
mov
push
mov
cmps
add
mov
mov
mov
stos
or
xchg
add
adc
add
(bad)
mov
lahf
push
add
push
icebp
adc
add
mov
mov
push
aas
xor
jnp
out
lods
mov
add
add
add
add
aas
mov
dec
or
add
loope
mov
mov
push
add
add
mov
add
mov
pop
inc
and
jmp
add
icebp
mov
add
fistp
cmps
add
cmps
test
mov
lock
arpl
nop
pop
xor
and
xchg
jmp
lods
sbb
cwde
add
loope
aam
cmp
test
shl
sub
popf
add
add
and
cmps
add
pop
pop
in
scas
or
add
cmps
fdivr
add
xchg
add
cmps
mov
mov
cdq
cs
add
call
test
mov
repnz
and
mov
xor
add
jbe
nop
in
add
retf
and
ds
mov
add
call
pop
cs
xor
jnp
add
div
jmp
aas
test
push
ins
and
aam
(bad)
dec
and
xchg
add
aaa
sbb
jmp
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
adc
dec
adc
mov
mov
and
pmaxsw
mov
sbb
or
add
mov
add
(bad)
jmp
add
push
add
mov
and
mov
mov
adc
lea
sahf
push
xor
xor
cmovbe
fs
add
add
jl
cmps
dec
test
xor
rol
add
fldcw
loopne
add
add
pop
jmp
loope
or
add
mov
mov
add
ins
mov
retf
(bad)
sub
mov
lock
add
add
(bad)
jbe
xor
jmp
push
push
(bad)
les
add
mov
leave
jecxz
add
(bad)
jmp
mov
and
aam
push
or
mov
psrad
add
add
push
add
inc
and
add
xor
pop
shl
xor
add
add
ins
lods
movntps
add
sub
mov
inc
push
add
cs
add
xchg
or
movntps
add
adc
sub
aam
add
jmp
imul
les
add
adc
js
add
add
add
sbb
push
test
sub
sbb
lods
movntps
shl
ins
xor
pop
pop
shr
les
xor
hlt
jecxz
xor
sub
add
lods
add
add
xchg
fcomi
les
add
jnp
loope
mov
push
les
pop
add
pop
das
ins
add
add
add
repz
add
(bad)
jecxz
add
jnp
ins
add
mov
sub
push
sub
mov
push
pop
aad
add
sub
mov
mov
add
push
ins
xor
jmp
pop
test
add
push
sub
sub
jg
test
add
lods
test
and
inc
push
mov
add
lea
xchg
or
aam
jmp
mov
add
mov
fcomp
rol
test
add
les
add
jnp
movs
xchg
test
pcmpgtb
add
ins
inc
add
movntps
pop
(bad)
sub
xchg
inc
and
(bad)
pop
push
push
add
xchg
add
add
fld
sub
in
and
add
jp
pop
add
and
xor
add
mov
add
pop
add
add
fs
add
add
icebp
inc
loopne
dec
and
psubusb
rol
jmp
push
cdq
and
aam
add
mov
rol
les
mov
psubsw
add
add
add
data16
add
jnp
(bad)
data16
add
add
xor
sub
les
xchg
add
mov
inc
and
push
inc
jmp
add
jmp
pop
test
push
xor
sub
mov
and
(bad)
test
ins
lods
out
sub
push
mov
loop
xor
add
mov
pand
add
jmp
mov
sub
mov
and
mov
pop
das
into
add
add
cdq
jnp
add
and
std
fimul
fs
xchg
pop
(bad)
out
and
xor
lea
aam
jmp
test
xchg
add
mov
ins
add
test
sub
add
and
inc
je
jmp
mov
lock
add
xor
mov
sub
pop
(bad)
jmp
mov
adc
add
out
xchg
mov
add
loopne
add
test
add
sub
mov
fild
add
add
add
dec
push
aam
mov
mov
mov
sbb
ins
add
push
add
add
fbstp
add
fld
mov
push
int3
sbb
mov
add
jecxz
mov
pop
add
add
xlat
cld
push
mov
mov
xor
xor
movs
and
mov
or
mov
cld
pop
ror
mov
outs
out
and
aam
shl
and
mov
mov
sub
mov
in
add
test
mov
mov
std
mov
and
or
xor
hlt
sub
mov
fwait
sbb
mov
mov
xor
mov
in
pop
add
fistp
paddq
out
and
test
mov
and
sbb
xor
and
(bad)
add
push
(bad)
and
push
inc
movntps
sub
mov
sbb
mov
ret
sub
and
sbb
jbe
add
inc
adc
or
pop
inc
jnp
fdivr
data16
mov
repnz
and
fmul
ins
and
or
mov
add
xchg
jl
clc
(bad)
stc
xor
add
(bad)
les
jno
outs
sub
ds
mov
inc
and
hlt
fmul
inc
adc
test
mov
inc
dec
mov
les
dec
add
test
xor
adc
fs
mov
add
push
je
daa
and
push
sub
and
and
push
add
sbb
sub
bound
jno
mov
add
inc
fld
xchg
mov
ins
add
mov
pavgb
add
xchg
test
add
(bad)
(bad)
push
test
int3
pop
add
(bad)
push
jb
add
add
ror
lahf
fisttp
add
fnstcw
mov
jmp
mov
mov
add
(bad)
mov
push
jno
outs
(bad)
mov
or
cs
push
(bad)
nop
add
jmp
lock
push
add
mov
mov
adc
sbb
sbb
mov
dec
push
shl
out
jmp
fidivr
add
mov
mov
add
add
or
sub
push
pop
add
adc
dec
mov
fadd
add
add
mov
add
in
dec
add
add
mov
movs
add
(bad)
jmp
mov
mov
push
push
(bad)
jmp
lods
paddusw
add
sbb
mov
fld
cwde
push
les
rol
add
mov
and
enter
mov
add
add
test
push
xor
hlt
(bad)
or
lods
mov
mov
xlat
dec
dec
int3
xor
add
add
adc
and
push
inc
and
jp
rol
add
ror
mov
and
add
sub
cmp
add
mov
mov
and
xor
add
add
add
add
(bad)
pop
add
add
dec
and
call
xor
mov
jle
int
sbb
mov
loopne
mov
add
add
lods
cmovne
mov
add
test
xor
sbb
add
mov
pop
add
dec
add
aam
mov
rol
add
int3
ins
xor
pop
aam
xchg
neg
repnz
sub
mov
xor
pop
add
test
add
xchg
and
add
add
adc
xchg
aad
and
call
mov
sbb
xchg
sbb
mov
add
mov
mov
and
mov
mov
(bad)
(bad)
push
add
mov
and
jnp
ins
lods
(bad)
inc
pop
dec
loopne
popa
out
mov
xchg
and
add
(bad)
in
cmp
add
lea
sbb
mov
mov
add
push
mov
and
lods
add
mov
call
mov
in
dec
std
mov
add
push
mov
lea
mov
in
adc
sti
push
add
pop
mov
cmovne
add
add
adc
add
push
add
ds
jmp
mov
loopne
lods
aam
out
push
out
pop
add
mov
add
add
add
add
add
add
lods
add
pop
push
lahf
mov
mov
add
xor
add
adc
outs
and
ret
xchg
jmp
subps
add
repnz
adc
xchg
xchg
sub
mov
push
ret
lock
mov
sbb
mov
xor
dec
and
mul
push
(bad)
mov
jl
add
sub
add
adc
lods
je
push
iret
add
xchg
out
and
xor
(bad)
cmc
push
add
add
fdiv
inc
and
add
add
mov
(bad)
cmp
dec
fadd
add
and
(bad)
mov
push
add
ror
add
test
xchg
add
add
xor
ret
push
es
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
inc
or
and
add
add
mov
jp
addr16
add
mov
leave
test
jae
add
or
add
mov
dec
test
add
out
push
and
addr16
(bad)
repnz
add
fisttp
jmp
lea
sti
test
push
mov
add
test
add
clc
dec
out
in
add
mov
mov
sub
xchg
dec
add
test
int3
pop
shl
add
in
test
push
ja
add
sti
mov
(bad)
scas
scas
or
fcom
add
add
mov
lea
dec
(bad)
ret
add
mov
es
add
aad
(bad)
dec
add
push
add
mov
sub
scas
stos
or
add
mov
mov
and
inc
call
inc
in
or
out
call
dec
loop
pop
add
repz
mov
add
push
js
(bad)
dec
add
mov
(bad)
mov
add
mov
call
mov
add
dec
sub
and
mov
add
loope
xchg
inc
add
mov
sti
xchg
xchg
lahf
pop
add
mov
div
jmp
and
add
add
out
add
add
add
mov
mov
push
test
add
mov
inc
add
xchg
fs
add
push
dec
add
aas
cmp
add
mov
add
dec
shl
push
add
adc
add
cmp
add
fs
push
xor
cmp
mov
and
call
push
or
add
lea
mov
loopne
inc
out
or
add
mov
cmp
inc
dec
call
push
and
repz
mov
and
rol
mov
out
mov
add
inc
xor
aad
inc
dec
bound
leave
(bad)
xor
ret
lea
fadd
lds
mov
call
imul
les
jmp
out
adc
add
add
add
rol
add
xchg
and
pop
add
mov
mov
mov
or
mov
add
call
lea
or
dec
lea
xchg
mov
aam
push
mov
xchg
and
add
dec
pushf
and
add
shl
out
mov
loopne
push
inc
(bad)
jmp
jle
and
lds
test
cmc
add
call
add
or
add
inc
add
add
add
add
cdq
rol
and
pop
add
mov
popf
xor
push
rol
outs
test
lds
add
add
jg
jmp
mov
outs
ins
inc
xor
mov
jg
jmp
mov
ret
add
out
pop
push
xor
cdq
jae
mov
xchg
movs
inc
jb
add
add
cmp
and
shr
xchg
mov
shl
ret
jg
jmp
mov
and
inc
add
add
sbb
sub
mov
inc
add
add
mov
or
add
jns
xor
add
push
fild
inc
dec
mov
mov
test
test
mov
ror
loop
and
jbe
cmp
retf
mov
push
push
mov
in
mov
out
test
add
retf
adc
add
add
loope
mov
add
dec
add
call
inc
inc
cld
add
out
pop
and
add
pop
ret
add
std
test
test
repnz
aaa
(bad)
jmp
je
fwait
arpl
and
add
shr
test
add
ror
dec
out
add
add
mov
xor
add
outs
fsubr
leave
aam
test
add
jge
push
add
add
add
add
mov
ret
les
sub
mov
call
inc
dec
add
add
add
add
push
popf
jmp
sbb
test
xlat
les
mov
add
fild
sub
sub
pinsrw
clc
ror
loop
and
jbe
fcmovb
test
loopne
add
test
add
adc
mov
iret
and
mov
and
bound
add
pop
and
add
sub
std
xchg
shl
add
add
jb
push
mov
add
cmp
and
add
shr
out
inc
and
jbe
adc
(bad)
and
add
add
mov
sub
lahf
test
add
add
add
stc
cld
add
mov
jmp
ret
nop
mov
add
add
aam
add
jmp
pusha
push
and
inc
jb
sub
cmp
and
clc
shr
or
les
mov
cmps
lds
leave
div
je
dec
add
mov
add
add
pop
inc
inc
out
add
rol
stos
cdq
retf
dec
add
add
add
jle
add
mov
and
add
add
(bad)
jmp
ret
les
(bad)
push
add
imul
fild
add
mov
and
jmp
dec
xor
test
or
dec
add
cmp
jbe
rol
in
test
add
fiadd
(bad)
inc
ror
test
add
add
add
inc
jb
add
test
add
xor
sub
mov
(bad)
add
ret
jns
lea
add
jmp
pusha
push
xchg
mov
mov
jae
mov
fisttp
jmp
std
xchg
sar
add
popa
(bad)
inc
ror
mov
adc
add
pop
add
outs
add
and
(bad)
mul
push
adc
add
add
add
enter
mov
xchg
mov
inc
sub
add
jmp
ins
push
and
add
sub
mov
pcmpgtb
mov
dec
add
shl
rcr
dec
mov
jg
arpl
test
dec
add
sub
jno
in
bound
add
(bad)
jle
les
jbe
test
add
add
fistp
pop
sub
jge
jae
add
pop
dec
add
xor
add
sub
mov
dec
jbe
adc
js
inc
dec
add
add
add
mov
and
add
mov
aad
mov
pinsrw
clc
ror
test
add
add
dec
test
retw
jbe
js
fild
jmp
mov
pop
jp
sub
mov
sbb
jmp
dec
out
and
add
call
xrelease
and
clc
push
adc
dec
add
add
add
jae
mov
and
(bad)
out
add
jbe
not
push
sti
add
iret
cmp
and
or
(bad)
out
add
and
add
ret
test
cdq
mov
xor
test
dec
jmp
hlt
mov
and
pop
mov
sub
mov
test
add
(bad)
in
inc
and
add
adc
movs
cmp
mov
and
in
syscall
inc
jb
dec
mov
add
and
add
sub
mov
clc
add
add
add
add
ret
xor
sbb
inc
and
dec
test
add
dec
add
pop
adc
mov
push
pop
je
jmp
enter
jmp
pop
lahf
inc
and
sysenter
fimul
mov
add
and
add
shr
repz
push
mov
clc
pop
cli
add
inc
jmp
add
fs
add
std
push
fbld
and
(bad)
add
ror
inc
inc
and
ret
add
ror
xchg
imul
mov
add
add
sub
inc
and
je
mov
add
ins
push
and
add
out
shl
cdq
mov
inc
dec
test
push
mov
xor
push
or
inc
and
punpckldq
aaa
add
add
adc
jbe
fist
loope
or
je
add
add
mov
add
pop
jmp
inc
and
inc
test
rol
add
fld
add
pop
sti
pop
iret
lods
out
ror
add
or
mov
hlt
mov
add
xchg
cld
rol
bound
add
add
test
adc
inc
add
add
add
add
xor
mov
cmp
lea
cmp
jo
push
dec
repz
mov
add
cmp
add
test
dec
add
add
add
lea
addr16
pop
adc
mov
mov
out
xchg
or
xor
cli
mov
fwait
and
add
je
push
repz
add
inc
and
ret
jne
pop
call
daa
fs
jb
mov
dec
mov
mov
mov
mov
outs
add
jp
xor
and
and
mov
jg
icebp
mov
dec
mov
pop
dec
ds
and
add
add
call
push
inc
test
jmp
jnp
xor
dec
add
arpl
inc
jb
mov
retf
test
add
mov
add
mov
pop
add
jecxz
out
les
xchg
ret
adc
sti
repz
add
retf
and
jmp
arpl
add
call
shl
outs
fsub
inc
add
add
ins
inc
daa
mov
jmp
mov
iret
sbb
mov
dec
addr16
add
or
mov
inc
xlat
mov
sub
inc
and
ret
xchg
aam
fldcw
mov
mov
popf
mov
pop
mov
mov
xor
data16
add
mov
mov
sahf
xchg
add
adc
repnz
mov
ret
into
mov
sub
aas
jle
(bad)
inc
mov
pop
imul
dec
add
adc
rol
xchg
add
fwait
jp
add
ja
and
clc
add
mov
add
add
mov
call
mov
mov
jle
and
mov
and
mov
call
pop
add
sub
mov
sti
dec
xor
pop
ret
icebp
add
repnz
add
(bad)
in
ins
imul
add
add
test
and
out
dec
out
mov
dec
fcom
dec
add
leave
pop
test
xor
pop
sbb
jge
ror
add
shl
xor
pop
out
test
push
add
add
xor
add
loop
imul
dec
add
scas
mov
call
mov
add
add
fadd
rol
mov
inc
or
pop
rcr
xchg
mov
mov
loop
inc
add
jns
add
(bad)
div
fmul
add
in
call
pop
and
repz
cmp
bswap
bound
mov
mov
dec
out
push
pop
add
dec
bound
shr
and
test
cdq
std
gs
es
jmp
dec
test
add
add
(bad)
iret
and
mov
xor
jmp
ficomp
xchg
inc
movs
jnp
jmp
pop
add
add
test
sub
jmp
jae
inc
cmp
les
mov
call
mov
add
mov
leave
mov
jmp
test
leave
test
add
push
jmp
mov
mov
dec
repnz
test
fmul
(bad)
daa
fs
out
xlat
shr
add
mov
pop
add
gs
fwait
pop
pop
movs
add
and
add
fild
inc
add
mov
dec
and
add
mov
stc
sbb
dec
add
inc
and
out
add
mov
mov
imul
rol
mov
rcl
enter
mov
and
call
xchg
xor
add
dec
loopne
out
pop
jmp
aas
test
mov
add
jmp
and
neg
add
inc
mov
(bad)
dec
pop
add
add
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
call
mov
call
sub
mov
call
call
call
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
call
call
mov
mov
jmp
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
sub
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
add
mov
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
call
jmp
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
mov
call
sub
call
mov
call
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
call
call
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
call
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
call
mov
call
jmp
mov
lea
pop
pop
pop
pop
ret
mov
call
call
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
call
mov
mov
mov
call
call
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
call
call
mov
mov
mov
mov
call
call
call
mov
jmp
mov
mov
mov
jmp
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
jg
jmp
call
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
call
sub
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmovne
call
jmp
mov
mov
call
cmp
cmove
call
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
call
jmp
mov
pushf
xor
add
sub
popf
mov
test
cmovne
call
jmp
mov
mov
jmp
call
mov
call
mov
mov
call
jmp
mov
jmp
call
mov
jmp
mov
mov
jmp
call
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
call
add
pop
ret
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
call
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
mov
push
mov
push
inc
and
mov
loop
cmc
fild
ror
add
fwait
pusha
dec
and
jg
jmp
imul
jb
inc
int
xor
gs
retf
popf
add
bound
pop
sub
leave
and
data16
out
add
add
add
inc
and
xchg
sbb
inc
pusha
dec
sbb
or
add
push
inc
and
sub
adc
fs
enter
add
verr
inc
inc
and
sub
into
push
and
jg
lods
push
xchg
add
xchg
and
sub
add
xchg
or
mov
and
sub
in
inc
push
cmp
pop
inc
add
test
xor
add
adc
ins
or
jmp
mov
jmp
jmp
adc
rol
inc
mov
sub
mov
pusha
add
add
out
(bad)
not
in
xor
loop
aas
adc
int3
rol
inc
popf
inc
and
mov
mov
leave
dec
prefetch
add
push
je
inc
(bad)
jmp
pop
cmp
sbb
jmp
sbb
add
sbb
rol
and
sub
mov
and
je
add
mov
jmp
or
jle
add
int
mov
mov
pop
test
(bad)
xchg
mov
das
test
add
cmova
int3
out
xor
dec
rol
ins
hlt
arpl
cmps
loopne
inc
and
mov
fnsave
ret
sub
xor
ss
pop
inc
and
mov
and
mov
and
fmul
inc
shl
or
push
inc
mov
inc
mov
xor
or
or
adc
and
mov
xor
inc
jno
fadd
mov
xor
mov
xor
and
or
push
hlt
inc
xchg
in
mov
fldenv
mov
leave
bound
fdiv
mov
dec
lods
and
mov
ins
mov
inc
and
(bad)
sbb
add
out
(bad)
and
mov
mov
sbb
fcom
add
and
or
loopne
push
and
sub
push
cmp
xchg
pop
call
xor
mov
mov
in
mov
add
and
and
fs
int
mov
inc
and
and
mov
int
mov
enter
adc
int3
and
ins
hlt
fcomp
or
add
sbb
outs
ftst
add
inc
loopne
add
sub
mov
test
add
and
mov
or
fwait
mov
add
and
pop
ret
fs
cmc
ins
inc
and
xor
or
in
iret
sub
and
mov
(bad)
repz
fs
and
mov
jmp
fsubr
or
test
push
je
sbb
and
jmp
lea
mov
cwde
xchg
mov
dec
cmps
lahf
das
mov
and
rol
add
and
out
sub
and
popf
add
add
sub
dec
add
rcl
jno
mov
xchg
jg
fstp
add
add
add
add
sub
std
mov
(bad)
arpl
add
cmovb
or
movs
xchg
add
ror
ds
repnz
cli
push
push
inc
cmp
psubusb
push
add
mov
mov
mov
xor
int3
imul
retf
or
xor
sub
pop
inc
in
std
cmps
movs
xchg
push
outs
and
jmp
pusha
or
mov
add
add
add
mov
mov
ins
fcom
add
ror
mov
sbb
add
add
loop
push
add
add
cmp
dec
repz
sub
sub
sub
mov
mov
and
mov
(bad)
jmp
out
in
hlt
or
pop
pop
ret
jmp
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
call
mov
sub
mov
sub
add
mov
mov
sub
sub
add
add
sub
sub
call
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
call
sub
call
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
mov
xor
mov
mov
and
or
xor
xor
and
mov
xor
and
mov
xor
and
or
xor
xor
xor
or
or
xor
and
mov
and
xor
or
test
call
cmovne
mov
jmp
call
mov
mov
mov
jmp
mov
call
sub
add
add
add
sub
add
add
sub
mov
call
jmp
mov
mov
jmp
lea
lea
mov
mov
mov
mov
add
sub
movzx
add
sub
sub
sub
sub
add
add
add
sub
add
mov
mov
add
movzx
mov
sub
add
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
setl
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
call
mov
mov
jmp
call
mov
jmp
call
sub
pop
pop
pop
pop
ret
lea
lea
mov
mov
mov
mov
add
add
mov
movzx
add
sub
sub
sub
sub
add
mov
sub
mov
sub
add
mov
sub
add
mov
mov
add
movzx
sub
add
add
mov
mov
sub
add
sub
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
call
mov
lea
mov
mov
mov
call
call
mov
lea
mov
mov
mov
mov
call
mov
lea
mov
call
mov
call
mov
lea
mov
mov
mov
call
mov
lea
call
call
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
sub
mov
sub
mov
sub
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
call
mov
call
call
imul
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
sub
mov
sub
add
mov
sub
add
sub
sub
add
add
mov
mov
mov
mov
call
mov
mov
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
add
sub
sub
mov
call
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
sub
sub
add
mov
mov
mov
sub
add
sub
sub
add
call
mov
mov
sub
mov
sub
add
mov
sub
add
sub
sub
sub
add
call
call
shl
add
mov
shl
add
mov
mov
mov
mov
call
call
mov
call
jmp
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
pushf
xor
popf
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
lea
mov
sub
sub
sub
sub
add
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
call
sub
mov
mov
call
jmp
mov
jmp
mov
mov
cmp
cmove
mov
jmp
call
mov
mov
call
mov
lea
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
call
sub
mov
call
mov
mov
mov
mov
lea
call
call
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
call
call
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
call
call
mov
call
mov
not
and
mov
and
add
xor
and
or
mov
not
and
and
add
xor
mov
mov
lea
mov
mov
mov
call
call
mov
mov
mov
call
call
mov
mov
sub
mov
sub
mov
mov
call
lea
call
call
mov
not
mov
mov
and
and
add
mov
xor
and
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
lea
call
call
mov
not
mov
and
and
add
mov
xor
and
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
inc
call
mov
mov
lea
mov
call
mov
not
mov
and
and
add
mov
xor
and
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
call
mov
movzx
mov
call
movzx
mov
call
mov
lea
inc
mov
mov
mov
mov
mov
lea
call
call
mov
call
mov
mov
mov
call
call
sub
mov
call
xor
mov
mov
mov
mov
mov
mov
call
call
call
sub
lea
mov
call
mov
mov
mov
mov
call
mov
call
call
sub
lea
call
call
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
call
sub
mov
mov
call
mov
mov
mov
mov
call
sub
call
call
mov
mov
mov
mov
mov
call
sub
mov
mov
call
mov
call
mov
call
call
sub
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
call
call
mov
call
sub
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
call
mov
mov
call
mov
call
sub
mov
call
lea
mov
mov
xor
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
add
sub
sub
sub
sub
add
call
shl
add
movzx
mov
mov
mov
mov
shl
add
add
call
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
sub
sub
add
sub
sub
add
sub
sub
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
call
call
lea
mov
lea
mov
mov
call
add
add
sub
add
sub
sub
sub
add
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
movzx
mov
mov
add
sub
sub
add
add
add
add
sub
mov
movzx
mov
mov
mov
add
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
call
call
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
call
mov
mov
mov
call
sub
lea
mov
call
mov
mov
mov
call
call
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
call
sub
lea
mov
mov
movzx
mov
mov
sub
sub
add
mov
sub
mov
sub
add
sub
add
add
add
mov
movzx
call
mov
mov
mov
shl
add
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
call
sub
lea
mov
call
mov
mov
mov
mov
call
mov
call
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
sub
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
call
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
call
lea
mov
mov
call
mov
lea
mov
mov
sub
mov
sub
add
sub
add
sub
sub
add
sub
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
sub
mov
mov
jmp
xchg
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
add
mov
lea
cmp
xor
add
enter
inc
and
add
and
or
and
mov
bnd
adc
rol
cmp
and
inc
dec
add
fild
inc
inc
and
jne
lods
sub
and
add
mov
dec
and
xsha256
cmps
push
and
add
or
adc
ds
jmp
mov
xor
and
inc
movs
nop
pop
rol
mov
and
(bad)
dec
add
add
call
mov
mov
scas
js
add
cmp
or
sub
mov
adc
mov
jmp
mov
fstp
aam
inc
and
je
jmp
mov
repnz
sub
mov
clts
loop
mov
add
jo
add
pop
or
mov
aam
xchg
and
mov
and
data16
mov
mov
cli
cwde
les
adc
inc
in
(bad)
jmp
inc
test
add
add
add
js
add
leave
call
mov
dec
jmp
ins
push
sbb
fld
add
add
cli
dec
cmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
or
add
or
add
push
and
add
add
fisttp
add
add
or
xchg
add
dec
push
and
retf
mov
push
stos
inc
pop
and
sbb
add
jmp
ret
push
and
push
cld
add
mov
jg
loopne
add
mov
retf
sub
and
add
adc
int
std
out
add
push
and
push
add
sub
sub
cli
mov
bswap
xor
add
jmp
stos
test
add
mov
test
jnp
pop
add
sbb
add
dec
add
cld
mov
mov
cld
and
scas
add
adc
test
cwde
mov
add
xor
xchg
add
shr
mov
jne
and
add
mov
jle
inc
sti
or
add
xchg
add
retf
loopne
das
mov
je
cmc
fnstenvw
int
dec
sub
mov
nop
add
add
add
add
add
test
or
add
lods
inc
movs
and
add
add
cmc
sub
mov
mov
sub
test
add
add
and
xchg
fucomp
add
mov
pop
shl
sti
or
mov
cmovle
in
sbb
add
add
add
mov
(bad)
in
in
dec
xlat
mov
mov
sub
mov
and
dec
test
add
add
mov
xchg
add
and
add
pushf
xchg
inc
loope
retf
mov
jg
jle
in
add
test
push
add
sub
fld
add
jg
add
add
jge
add
mov
mov
adc
(bad)
and
sbb
mov
xchg
inc
test
cli
add
xlat
js
sbb
and
ror
test
mov
lods
inc
cli
or
mov
and
xchg
add
sub
mov
cmp
les
add
pop
pop
add
pop
add
dec
sub
mov
ror
je
add
jmp
mov
and
add
or
das
test
xchg
and
add
push
fild
add
xchg
and
add
in
addr16
ins
xor
retf
lods
mov
rol
and
add
add
test
(bad)
and
sbb
push
fild
add
pop
xchg
sub
ret
xchg
jno
jne
arpl
add
add
sub
mov
lds
jmp
xchg
dec
cmps
lods
add
add
sbb
and
add
mov
test
xchg
fisttp
pop
mov
inc
and
push
test
add
outs
mov
and
add
pushf
add
mov
mov
mov
add
mov
addr16
pop
fwait
push
fdivr
xchg
fadd
add
add
icebp
mov
pusha
mov
add
and
test
prefetcht1
add
add
add
adc
add
ins
(bad)
add
aad
xchg
jmp
retf
lods
add
add
add
rol
mov
jmp
mov
pop
mov
add
add
sbb
mov
(bad)
sar
mov
dec
xlat
push
mov
int3
xchg
add
add
mov
dec
add
add
add
retw
pusha
cmp
and
mov
cmp
adc
mov
xchg
int
int3
add
xlat
mov
ja
mov
mov
add
iret
or
loopne
mov
push
inc
test
pushf
add
(bad)
cmp
add
retf
xor
push
mov
add
repz
ss
push
mov
inc
fisttp
add
inc
ror
lods
mov
add
jmp
mov
cmp
push
jnp
mov
xchg
ins
into
in
add
cmovl
mov
call
mov
dec
or
stos
push
iret
outs
sub
adc
add
and
push
add
xchg
jne
aam
or
inc
mov
ja
and
and
dec
inc
cmp
mov
jmp
mov
mov
lea
mov
mov
mov
(bad)
cmp
add
mov
mov
jmp
lds
hlt
inc
stc
mov
mov
and
sub
lods
mov
aas
xor
mov
mov
and
sub
inc
icebp
mov
sub
add
mov
or
and
xchg
add
and
pop
or
retf
add
mov
mov
icebp
mov
mov
and
pop
mov
popa
shl
in
clc
jg
(bad)
cmp
xor
fisttp
mov
mov
mov
(bad)
pop
and
add
pop
xchg
inc
inc
and
call
lea
in
push
add
sub
pop
fisttp
mov
and
mov
je
fbld
mov
mov
rcr
add
ror
add
sbb
jne
and
imul
movs
and
mov
inc
je
mov
sub
data16
push
mov
and
out
adc
(bad)
(bad)
(bad)
dec
icebp
push
adc
xor
sub
push
push
ret
iret
or
cdq
idiv
push
and
iret
xor
popa
in
into
or
fld
mov
and
add
add
add
add
add
mov
sub
xchg
sti
jmp
movzx
xchg
cmp
loope
pop
push
and
mov
mov
jle
outs
add
mov
mov
lods
sbb
add
add
data16
jecxz
and
mov
xor
call
mov
mov
add
mov
iretw
sbb
mov
out
and
and
fcom
sub
dec
call
rcr
sbb
fidiv
adc
mov
(bad)
jmp
mov
xchg
jbe
push
add
mov
jl
mov
popf
repz
mov
test
ror
in
or
xor
(bad)
mov
cdq
mov
pop
dec
jnp
mov
add
dec
aas
mov
and
add
add
mov
int3
sbb
(bad)
rol
xchg
inc
aaa
xor
shr
dec
addr16
cmp
or
div
pop
jl
add
adc
cmp
shr
or
dec
xlat
add
mov
outs
add
(bad)
adc
fisttp
retf
add
fwait
sti
add
into
test
sub
in
jmp
(bad)
pushf
and
add
add
fistp
in
int
add
xlat
push
jge
(bad)
(bad)
(bad)
call
pop
and
add
add
and
sti
add
or
and
out
(bad)
(bad)
(bad)
fistp
sbb
cwde
and
mov
add
xchg
mov
in
add
xchg
xor
cmp
add
xor
add
icebp
pop
mov
or
add
add
shl
in
pushf
mov
test
fild
sub
jle
int
add
pop
mov
(bad)
dec
pop
add
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
add
push
or
xchg
and
mov
push
mov
and
mov
xor
cdq
and
mov
mov
std
adc
or
inc
mov
or
jae
(bad)
sbb
fcmovne
cmp
mov
lods
cli
mov
and
repz
mov
add
fild
mov
inc
int3
sahf
aad
js
inc
and
xadd
add
push
fwait
sub
mov
and
mov
add
add
add
or
sub
inc
xor
shrd
or
add
add
loope
addr16
and
leave
sar
xlat
dec
mov
add
add
lods
inc
mov
jge
mov
and
(bad)
xchg
xor
fld
adc
xor
nop
and
mov
sub
stos
add
push
add
inc
and
sub
inc
inc
sbb
adc
adc
xor
adc
shl
add
cmp
mov
cdq
call
leave
repz
mov
add
jmp
jmp
mov
mov
mov
cs
cmp
fsub
xor
add
push
and
xor
mov
je
xor
test
mov
cwde
ret
add
clc
push
mov
and
cmps
popw
fcmovne
cmp
inc
jne
inc
int
jmp
mov
mov
pop
jle
xor
(bad)
jmp
(bad)
or
inc
mov
ins
add
pushf
call
mov
mov
int
mov
pushf
mov
pop
mov
mov
stos
enter
push
rol
push
pop
int
and
inc
sahf
jge
jmp
mov
les
pop
pop
sti
movs
jmp
jmp
data16
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
les
mov
mov
(bad)
mov
sub
pop
mov
ja
add
jae
add
jo
and
(bad)
push
int3
add
jmp
mov
setge
mov
scas
cwde
add
jmp
mov
and
xchg
cmc
pusha
mov
je
jmp
mov
sbb
mov
je
cld
lahf
jb
or
inc
lods
fdiv
std
inc
and
adc
adc
cmps
add
jmp
push
retf
lock
add
scas
inc
sub
cmp
cmp
cmps
add
add
inc
sub
(bad)
jno
rcl
bound
repz
mulps
mov
mov
call
sub
mov
sub
sbb
cli
scas
mov
add
pop
hlt
stc
pop
pop
add
pop
retf
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
fwait
inc
and
mov
mov
sub
dec
and
mov
mov
dec
inc
jecxz
inc
dec
jbe
push
mov
xor
stos
(bad)
push
adc
add
add
add
lds
cmp
jne
cs
cmp
ins
add
jmp
mov
and
mov
pop
les
(bad)
sbb
add
adc
sub
sub
ss
fadd
cmp
sbb
mov
or
and
jg
jmp
mov
sub
loopne
pushf
cmp
(bad)
fiadd
dec
add
add
pop
inc
and
sub
xchg
xor
lods
sbb
add
movs
push
sub
fisubr
sub
fld
add
mov
mov
or
jbe
push
fld
add
add
pop
and
sub
inc
and
add
add
test
add
nop
inc
and
and
stos
inc
and
stos
(bad)
sbb
xor
jle
mov
inc
shl
mov
inc
and
xlat
addr16
mov
push
and
mov
push
out
mov
jle
push
add
(bad)
cli
jnp
pop
sub
cmps
and
add
movs
push
and
sub
mov
and
pop
test
add
imul
mov
aas
pop
aad
imul
test
sbb
add
inc
sub
fisubr
mov
xlat
addr16
push
add
add
sbb
lahf
test
inc
dec
movs
adc
fadd
inc
and
out
add
inc
test
xor
call
(bad)
dec
lods
in
sub
mov
rol
cmove
pop
dec
and
mov
push
lock
mov
mov
dec
pop
cmp
cmove
fiadd
push
popf
add
add
imul
inc
and
mov
jmp
fwait
std
(bad)
fistp
adc
and
jmp
pop
add
cmove
test
add
xor
xchg
inc
pop
les
mov
scas
inc
and
call
jno
push
imul
lds
sub
xlat
addr16
dec
add
ja
pop
sub
cwde
and
mov
test
(bad)
loope
mov
jmp
mov
int3
xlat
pop
pop
(bad)
xor
dec
std
(bad)
jmp
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
inc
dec
jl
test
add
add
and
add
mov
call
xor
fs
and
mov
test
push
lds
jae
jmp
pop
add
lock
mov
mov
loope
mov
or
xor
shr
and
lds
dec
retf
cdq
mov
jmp
inc
test
inc
push
inc
jno
pop
sub
sub
pop
and
lock
add
(bad)
mov
add
add
and
enter
dec
and
imul
mov
adc
scas
inc
test
je
outs
inc
mov
pop
push
mov
push
lock
jmp
mov
enter
(bad)
and
add
(bad)
lock
push
push
xchg
test
mov
mov
enter
add
mov
add
add
pop
add
movs
add
lock
(bad)
fnstcw
jmp
mov
and
add
sub
and
cmovne
leave
add
js
test
sub
bound
cmp
add
imul
sub
shl
lock
lock
inc
sbb
mov
inc
aas
mov
mov
add
add
mov
scas
(bad)
daa
std
test
add
test
leave
add
stc
rol
pop
lahf
mov
add
fs
add
jmp
inc
dec
and
add
test
lea
pop
test
inc
add
(bad)
mov
add
(bad)
mov
and
add
add
xchg
jl
inc
in
mov
es
lock
mov
and
add
adc
test
add
add
(bad)
jo
add
add
mov
dec
add
test
inc
jns
in
add
add
or
add
add
xor
rcl
sti
inc
(bad)
and
jg
jmp
mov
sub
std
mov
js
(bad)
popf
add
js
add
add
xor
mov
loop
inc
and
cmova
add
and
imul
test
xchg
add
jo
(bad)
xor
leave
js
(bad)
mov
iret
mov
add
out
mov
clc
mov
and
add
add
add
add
mov
mov
pop
nop
loope
(bad)
leave
mov
iret
pop
mov
add
test
lock
ret
mov
(bad)
xor
add
jmp
mov
imul
cmps
inc
push
je
outs
jmp
mov
and
mov
mov
in
xchg
paddsw
or
and
add
add
aaa
push
stc
and
cmp
jmp
xor
add
mov
sub
mov
and
scas
mov
stos
retf
test
js
add
and
xor
inc
sub
mov
add
add
or
test
lock
leave
sub
mov
cmp
add
mov
xor
inc
dec
dec
sbb
sub
xchg
ss
xor
dec
pusha
test
jns
(bad)
add
add
inc
sub
mov
dec
out
add
inc
jle
or
sbb
retf
arpl
and
paddb
and
aas
jmp
mov
mov
retf
imul
cmovle
jbe
add
dec
outs
add
inc
cld
and
add
sahf
or
leave
inc
and
je
and
add
sub
mov
xchg
mov
and
cmp
add
adc
jmp
mov
sub
and
(bad)
inc
add
jmp
and
les
add
sub
mov
sub
test
fstp
add
mov
test
add
inc
xchg
loopne
test
je
jmp
mov
pop
ins
popa
fbld
and
cmpxchg
add
imul
test
mov
add
xor
xor
fs
je
and
test
retf
add
and
and
(bad)
add
retf
lock
cld
stos
mov
xor
sub
mov
sbb
test
imul
mov
add
add
mov
je
and
add
add
and
add
xor
leave
inc
and
xor
enter
mov
add
mov
je
rcl
add
or
jo
add
jmp
jmp
mov
jb
popa
mov
sub
add
je
cmp
inc
mov
jmp
ss
jmp
xor
inc
dec
and
imul
sub
(bad)
leave
jmp
mov
test
and
js
mov
jmp
mov
mov
mov
test
push
in
pop
int3
add
add
add
pushf
cmp
jecxz
add
mov
adc
add
add
js
mov
imul
std
jmp
adc
or
add
pushf
xchg
inc
add
fistp
mov
mov
add
add
push
and
jb
retf
and
imul
cli
add
add
ret
enter
mov
jmp
sub
add
sar
ja
mov
jmp
jno
sbb
clc
add
add
mov
and
enter
push
inc
stos
das
sub
data16
pop
xchg
jno
int
cmps
test
jne
shr
adc
inc
push
add
arpl
mov
mov
les
aas
jmp
fnstsw
retf
imul
or
jmp
call
(bad)
pop
lahf
call
mov
add
add
idiv
mov
add
add
and
jnp
enter
mov
cmp
add
inc
mov
adc
add
add
adc
push
inc
fdiv
push
push
out
or
rol
mov
jnp
and
int3
push
sbb
test
data16
(bad)
ret
je
test
add
lock
out
dec
sbb
push
add
add
mov
mov
sub
fistp
call
dec
add
(bad)
mov
ret
mov
add
add
sub
mov
(bad)
mov
add
push
mov
daa
xchg
(bad)
jns
add
and
xor
add
les
jg
xor
scas
mov
ret
add
(bad)
test
add
je
mov
add
pusha
test
mov
mov
mov
inc
retf
add
dec
retf
add
add
add
leave
icebp
add
xlat
(bad)
and
cmc
sbb
add
jns
xchg
icebp
mov
not
(bad)
fidiv
out
call
adc
test
and
add
je
add
outs
add
test
mov
mov
imul
test
add
jl
mov
repnz
scas
sub
cmp
xchg
and
mov
add
add
xlat
js
and
push
mov
jmp
xor
enter
inc
(bad)
xor
mov
enter
mov
(bad)
inc
mov
xor
les
add
aas
xchg
test
mov
scas
retf
imul
add
jo
vrcpps
outs
leave
add
sub
sub
mov
enter
add
retf
sub
and
sub
retf
je
lods
sub
add
inc
shr
push
movs
ja
int3
imul
xor
imul
mov
enter
xchg
data16
mov
ret
data16
push
mov
push
push
push
add
call
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
add
mov
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
add
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
jg
jmp
call
sub
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
call
jmp
call
add
call
mov
jmp
pushf
mov
sub
popf
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
call
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
call
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
call
mov
mov
cmp
cmovne
call
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
call
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
call
jmp
mov
jmp
mov
mov
mov
mov
add
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
pushf
sub
popf
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
call
jmp
mov
mov
movzx
cmp
cmove
call
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
call
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
call
jmp
mov
jmp
mov
jmp
mov
jmp
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
add
inc
scas
retf
and
add
add
push
stos
add
mov
push
xchg
add
inc
mov
xchg
inc
add
jmp
je
dec
add
add
xchg
add
add
add
cmps
inc
and
and
dec
and
in
cmc
stos
(bad)
jmp
and
sbb
test
jle
add
xlat
fwait
into
mov
and
mov
lods
mov
cs
mov
dec
xchg
ins
aaa
and
test
add
push
retf
dec
pop
movs
ror
pusha
mov
je
jmp
mov
pop
mov
inc
mov
sbb
push
inc
add
scas
mov
mov
add
xor
add
and
cmp
arpl
out
add
stos
and
mov
ins
aas
pop
inc
test
add
pop
ins
and
and
gs
add
jmp
xchg
imul
iret
in
jle
mov
mov
lock
test
add
add
loop
pop
ds
das
inc
and
(bad)
loope
add
jmp
mov
and
daa
pusha
and
je
jmp
mov
adc
mov
jmp
add
jmp
inc
and
sub
in
add
test
scas
add
enter
mov
mov
mov
jno
dec
add
add
jmp
ins
mov
repnz
mov
cdq
out
stos
add
jnp
jle
repz
ror
add
je
jg
iret
add
outs
inc
pop
pop
sub
loope
and
add
add
scas
mov
sub
cmp
jg
inc
jmp
je
xchg
xor
cmps
add
and
sub
in
add
sub
add
sbb
out
add
stos
pop
add
fldcw
adc
and
(bad)
ins
and
jmp
pushf
ret
pop
inc
and
mov
jmp
jnp
add
pop
repz
add
inc
test
jmp
cmps
sub
add
add
add
mov
xchg
jp
inc
cmps
add
mov
mov
imul
out
jmp
cs
mov
pop
retf
cmp
daa
jl
je
add
push
inc
and
int
add
mov
mov
lods
xchg
mov
cs
add
pop
stos
dec
jmp
jg
fcmovbe
je
and
call
mov
mov
jecxz
and
scas
push
and
mov
xchg
add
mov
add
and
inc
jmp
add
inc
xlat
or
mov
add
cmp
mov
dec
sub
cdq
popa
add
and
xor
fs
jmp
cmp
jmp
dec
add
sbb
cs
rol
pop
daa
jmp
mov
dec
stos
add
add
test
and
add
and
aas
lahf
jmp
cs
sbb
jmp
shr
pop
aam
mov
mov
add
and
adc
iret
add
and
jnp
add
gs
mov
(bad)
retf
dec
inc
dec
aad
adc
mov
pop
test
add
add
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
sub
call
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovne
call
jmp
mov
mov
call
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
mov
add
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
pushf
xor
popf
mov
mov
mov
mov
call
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
sub
mov
mov
jmp
call
add
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
call
call
mov
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
ror
add
add
je
pusha
std
jne
ins
inc
dec
jo
(bad)
idiv
add
jb
mov
jg
call
(bad)
(bad)
call
cwde
sbb
add
mov
dec
pushf
cmp
add
mov
add
add
and
mov
(bad)
idiv
add
add
add
dec
rcr
retf
push
and
mov
push
mov
je
inc
mov
js
cli
clc
fmul
jmp
mov
fst
and
(bad)
shl
loop
add
test
jg
inc
push
inc
and
add
fidiv
cmp
and
sub
mov
(bad)
ficom
mov
add
add
mov
jecxz
dec
jge
and
jg
cld
add
add
push
dec
add
mov
ror
or
add
add
into
mov
and
jbe
sub
xor
test
hlt
int3
stos
ficom
and
sub
mov
rol
add
push
gs
fiadd
test
add
hlt
and
fild
sub
push
inc
call
je
add
add
mov
adc
mov
je
and
hlt
add
mov
xchg
mov
pop
test
add
pushf
add
add
sbb
mov
jmp
add
fidiv
inc
inc
and
jbe
jno
cmp
fld
and
xor
mov
dec
sub
mov
dec
in
add
add
inc
and
es
bound
mov
sbb
add
fiadd
push
out
test
pop
in
in
push
fimul
cli
or
int
cmovne
jge
pop
cld
xchg
add
and
fsub
enter
jmp
imul
cli
ins
stc
jg
lahf
mov
mov
and
mov
xor
js
(bad)
(bad)
mov
rol
xchg
es
mulps
jmp
(bad)
pop
and
movs
jecxz
xchg
fwait
data16
add
and
inc
inc
data16
inc
and
fs
xor
mov
dec
scas
cmc
scas
cmp
psadbw
push
ss
pop
and
hlt
add
leave
push
jo
mov
call
(bad)
fsub
adc
jmp
and
and
xor
add
mov
jmp
push
ss
mov
stos
pop
pop
bts
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
sbb
xchg
test
add
cmps
mov
or
add
add
add
add
dec
add
(bad)
mov
mov
out
mov
call
adc
mov
add
adc
sbb
add
(bad)
sbb
in
bound
test
add
add
rol
mov
mov
add
add
sbb
add
mov
and
push
fnsave
jmp
and
add
(bad)
pop
or
add
xchg
scas
test
sub
dec
test
add
add
xchg
stc
outs
jbe
jmp
outs
test
add
add
mov
add
dec
mov
xchg
int3
cdq
ret
add
add
push
jo
test
add
add
test
mov
fld
add
test
add
in
mov
inc
test
or
ret
add
mov
sub
mov
and
repnz
jg
xor
popf
mov
sub
mov
cmc
loopne
int
pextrw
add
and
call
jg
test
add
jns
and
in
add
add
sub
add
xor
jmp
dec
test
add
sub
adc
int
and
sbb
add
add
sbb
ret
(bad)
ret
xor
nop
add
lahf
lahf
ret
pushf
adc
add
inc
enter
adc
and
add
add
in
cmc
push
int
jmp
mov
nop
gs
add
adc
test
add
icebp
sbb
fisttp
add
add
pop
test
add
dec
(bad)
xchg
out
add
cdq
dec
test
scas
call
pushf
mov
mov
push
jbe
je
out
ror
add
mov
lahf
cmps
mov
jg
jmp
dec
test
add
sbb
call
adc
add
jmp
scas
add
sub
add
add
inc
loopne
stos
addr16
and
and
loopne
add
call
aam
repnz
call
test
popf
add
test
add
jmp
mov
addr16
loopne
mov
cs
dec
add
add
pushf
add
add
add
mov
cdq
and
sets
add
test
add
adc
jg
jmp
adc
ret
out
(bad)
fmul
(bad)
das
add
add
add
push
test
add
add
ins
inc
inc
mov
int
jmp
gs
add
add
lods
int
fisub
jg
jmp
jns
and
add
add
mov
movlps
rol
add
and
dec
mov
ret
test
inc
movhps
add
jmp
mov
out
repnz
ja
inc
mov
add
add
(bad)
into
and
add
mov
xchg
jl
stos
sbb
pop
int3
stos
push
add
add
jnp
add
adc
add
adc
cwde
(bad)
test
test
add
jmp
mov
push
ror
outs
clc
mov
jge
pop
mov
add
mov
add
push
retf
mov
push
xchg
test
add
add
inc
cmps
push
push
sbb
pop
add
sub
mov
inc
add
dec
jmp
test
out
(bad)
xchg
into
mov
je
sub
repz
add
push
int3
out
bound
je
jmp
mov
and
rcl
sbb
mov
mov
and
loope
pop
add
add
test
add
xor
xchg
inc
and
repnz
add
in
pop
shr
fisttp
mov
push
sbb
xchg
scas
add
add
cmp
add
aam
add
sub
test
xchg
rcl
and
or
sub
sbb
xchg
inc
push
js
add
repnz
test
sub
mov
xchg
test
push
add
add
bound
cld
cs
inc
add
xor
int3
scas
ret
add
lock
add
add
dec
mov
and
add
add
sbb
inc
aam
rcl
jne
cmp
push
jge
cdq
ret
(bad)
jnp
add
jmp
jp
rol
xor
add
push
pop
xor
in
aad
(bad)
xor
pop
pmaddwd
mov
add
add
jmp
pop
test
add
sbb
test
not
pop
retf
add
cmp
add
mov
mov
cld
ds
out
cmp
add
gs
and
add
add
add
jp
add
cmp
fadd
repnz
inc
retf
and
add
add
mov
mov
call
mov
inc
and
mov
out
sbb
jnp
test
add
or
mov
add
add
push
sbb
in
add
test
add
or
jle
pop
jne
and
inc
les
add
jmp
pop
cmps
cdq
bound
rol
push
inc
xchg
sub
rcl
ror
jl
add
adc
adc
add
sub
mov
push
mov
mov
test
cmovne
mov
and
mov
add
adc
and
cdq
add
mov
cmps
loope
jp
add
add
sub
sub
jnp
and
push
fisttp
bound
pop
nop
dec
add
call
rol
ret
mov
call
add
xor
shl
in
inc
loopne
mov
add
add
add
dec
pop
mov
mov
sgdtd
iret
jae
mov
nop
add
dec
and
popf
pop
add
pusha
rol
add
adc
inc
lea
mov
add
fiadd
add
push
loopne
cmp
ds
jnp
add
add
inc
sar
mov
jbe
jmp
(bad)
pop
mov
jae
pop
jp
cmp
add
xchg
add
popa
add
add
clc
jbe
mov
xchg
inc
and
dec
adc
add
test
push
adc
add
or
jns
lea
add
stos
and
call
sub
repnz
mov
loope
and
add
add
pop
sub
rcl
push
retf
or
pop
add
dec
and
retf
lods
add
add
adc
ret
cmps
add
test
add
popf
mov
ins
add
popf
rol
mov
or
and
cdq
dec
xchg
or
jnp
call
ret
(bad)
or
add
add
and
fld
popf
loopne
and
mov
dec
sub
(bad)
rol
pop
mov
ret
push
test
fcomp
cmp
div
sbb
sub
and
add
adc
call
mov
sbb
or
dec
add
cmp
add
cs
sub
dec
mov
adc
sub
pop
add
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
cld
mov
add
inc
and
imul
sub
mov
mov
mov
lods
and
lods
test
jle
mov
movs
jmp
test
jbe
adc
mov
xor
scas
add
cmp
and
es
jp
nop
add
add
mov
push
std
sbb
je
jmp
mov
pop
imul
add
icebp
inc
add
add
push
pop
and
icebp
sahf
and
sub
mov
and
cmp
cmp
jmp
dec
pusha
jmp
addr16
mov
ins
cmp
or
scas
and
cmp
jle
mov
adc
add
push
(bad)
dec
xchg
dec
add
cmc
or
add
jne
ins
adc
jp
add
inc
and
add
jg
(bad)
jle
and
push
mov
inc
and
lea
pop
outs
pop
pop
(bad)
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
punpckhdq
or
mov
clc
sbb
push
or
add
and
add
fst
mov
div
dec
xchg
mov
(bad)
mov
add
add
push
add
add
into
jo
add
add
ja
jecxz
in
inc
add
add
test
pop
test
cmp
add
pop
push
fwait
mov
movaps
mov
daa
dec
add
mov
fsub
sbb
add
retf
outs
fstp
sahf
sti
enter
mov
cld
mov
shld
repz
in
outs
inc
add
sub
mov
jg
jmp
mov
les
sub
sbb
jne
mov
push
xchg
sub
jmp
js
and
add
add
nop
fild
add
push
jg
inc
pop
add
add
adc
lds
lock
jmp
fnsave
rdmsr
mov
sub
mov
adc
add
xchg
inc
mov
pop
push
pop
push
loop
jmp
mov
addr16
adc
cdq
clc
or
add
sbb
push
sub
jmp
aaa
test
adc
dec
outs
addr16
mov
movs
hlt
ins
add
(bad)
inc
scas
add
and
jb
add
add
lock
or
mov
dec
adc
add
xor
in
add
mov
dec
jmp
mov
add
test
add
repz
xchg
add
or
and
jecxz
inc
sub
and
dec
xchg
call
jmp
mov
add
add
and
sub
in
add
jl
push
rol
add
add
icebp
and
mov
sbb
add
in
dec
add
outs
rcl
adc
add
in
xchg
inc
jmp
js
add
add
add
dec
jge
call
or
xchg
sub
jp
push
dec
push
and
add
add
scas
xlat
test
les
dec
mov
mov
and
add
xchg
add
add
jo
ins
push
loop
mov
movs
add
fcom
int3
add
add
cld
jnp
xchg
add
fld
jne
test
mov
sbb
enter
jg
jmp
or
ja
jecxz
in
sub
mov
and
add
add
(bad)
dec
add
jae
dec
xchg
call
or
in
xor
outs
add
(bad)
adc
dec
push
jmp
out
and
jecxz
add
into
int
in
es
iret
add
dec
bndstx
fld
pushf
add
sub
xchg
sub
mov
and
outs
add
jg
test
push
add
data16
and
scas
add
jno
(bad)
aaa
(bad)
mov
add
paddb
add
dec
jmp
mov
stc
adc
add
mul
mov
add
or
rol
or
mov
bound
dec
xchg
xchg
push
push
xchg
mov
add
add
mov
mov
inc
out
add
xlat
stos
pop
idiv
test
add
dec
add
mov
pop
sbb
add
add
repz
mov
add
in
addr16
in
and
push
add
loop
fld
repz
test
add
dec
sub
push
icebp
and
add
add
add
aaa
ja
adc
dec
add
fld
je
jmp
mov
mov
pop
neg
mov
mov
add
xchg
jg
outs
mov
scas
and
add
popf
mov
loop
add
inc
scas
add
jae
les
sub
adc
jp
movs
mov
add
add
test
adc
add
fidiv
mov
add
test
pop
add
jmp
and
and
add
fcmovnbe
test
add
add
mov
add
jmp
mov
xor
(bad)
jmp
aam
sub
add
clc
inc
and
xchg
call
mov
shld
dec
add
push
add
fs
data16
psubusb
ja
(bad)
add
pop
test
sub
sbb
enter
add
add
dec
outs
add
rcl
adc
add
add
mov
and
in
test
scas
add
jl
and
add
add
mov
ror
outs
mov
cmp
adc
dec
add
lock
fld
bound
(bad)
loopne
add
and
add
mov
fld
sar
fnstenv
jmp
mov
and
add
add
mov
pusha
inc
jmp
add
loop
add
scas
pop
jbe
int3
sbb
inc
test
add
add
or
cdq
adc
add
mov
jp
push
inc
rcr
add
test
in
add
sub
add
jae
iret
dec
push
in
mov
and
mulps
add
add
sub
mov
and
inc
test
and
dec
inc
add
add
mov
and
push
jae
jbe
add
xchg
add
adc
adc
add
stos
imul
cwde
dec
cld
sbb
mov
and
push
loop
sub
jle
push
inc
retf
add
fwait
add
inc
cmp
xlat
and
mov
jae
add
in
mov
add
into
and
add
add
lods
push
push
and
punpckhwd
test
mov
retf
push
inc
xchg
int
cld
inc
and
mov
call
add
js
and
add
addr16
sub
adc
inc
ja
je
jmp
leave
sub
jb
add
mov
stc
xor
icebp
popf
add
add
or
add
add
sub
xchg
push
ffree
and
psubsw
add
add
add
adc
lds
addr16
in
cld
inc
and
mov
mov
lods
add
add
add
add
mov
and
psubsw
loope
in
stos
pop
pop
div
test
dec
xchg
add
sbb
xor
and
pop
pop
std
add
add
dec
add
mov
inc
jge
mov
(bad)
xlat
pushf
in
inc
scas
jmp
mov
sub
mov
xchg
test
add
jne
pop
or
add
add
push
pop
clc
sti
inc
xor
test
xchg
and
outs
dec
push
sub
imul
add
jae
ins
add
dec
pop
push
and
fadd
jne
shl
push
mov
movhps
sub
mov
dec
mov
outs
adc
add
and
fiadd
je
stos
xor
jae
ror
call
inc
and
jl
in
push
add
add
ins
push
iret
jb
dec
xlat
mov
clc
neg
dec
add
jmp
outs
std
add
add
and
mov
mov
dec
dec
add
aad
ins
push
add
pop
and
and
test
sub
nop
add
mov
mov
mov
jmp
mov
lds
or
and
push
loop
mov
jbe
scas
pop
clc
mov
cmp
inc
xchg
ret
fmul
add
xor
and
add
sub
lock
mov
(bad)
loope
sub
jecxz
add
mov
jmp
mov
jmp
mov
mov
in
(bad)
ins
add
repnz
or
add
and
scas
add
pop
mov
xor
add
pop
mov
add
dec
out
and
push
add
add
add
add
scas
pop
dec
loope
cmps
pop
sub
push
loope
xlat
mov
sub
stc
xor
add
jmp
mov
jmp
icebp
mov
mov
jl
push
sbb
add
inc
push
mov
jmp
mov
sbb
in
scas
add
repnz
rol
in
xor
jecxz
into
mov
div
into
and
add
add
add
fnstsw
ds
sub
and
add
sub
add
add
add
ins
jmp
aam
mov
pop
div
pop
dec
xchg
mov
adc
ins
add
loope
rdtsc
sub
xchg
add
mov
jmp
mov
mov
out
and
add
in
mov
pop
cmovne
mov
loope
xchg
add
add
and
xchg
add
jne
es
jmp
mov
mov
movs
jne
add
add
inc
scas
add
clc
dec
outs
mov
push
mov
or
nop
dec
push
mov
mov
xchg
push
add
add
add
push
inc
scas
add
mov
jmp
and
push
sub
xchg
add
and
and
add
lods
retf
mov
add
sub
pop
add
jmp
retf
mov
js
or
fdiv
test
cmovne
add
add
add
mov
data16
mov
and
add
test
add
mov
xchg
sub
dec
outs
dec
adc
and
push
add
leave
pop
add
scas
push
mov
sar
add
mov
mov
fwait
add
jp
or
add
cwde
add
add
test
add
mov
jmp
mov
dec
into
mov
fdiv
outs
inc
add
add
(bad)
cmp
add
add
add
push
(bad)
imul
mov
mov
into
mov
add
sub
pop
ret
or
and
xchg
sub
outs
add
inc
cmp
into
and
add
cli
add
inc
xlat
mov
add
test
jb
lds
fld
jne
test
or
std
js
ja
sub
dec
(bad)
jmp
dec
add
add
cdq
popa
repz
test
js
jb
add
lds
dec
mov
jmp
sbb
dec
out
and
push
add
jecxz
inc
fucomip
out
jmp
(bad)
jae
imul
xchg
sub
sbb
add
test
mov
scas
mov
dec
mov
jmp
nop
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
or
test
mov
repnz
add
mov
and
add
xchg
int3
and
add
mov
mov
pop
mov
and
add
add
lds
add
mov
push
or
add
test
test
dec
pop
add
test
add
add
loopne
dec
add
mov
es
(bad)
add
arpl
mov
inc
int
xchg
sub
inc
add
(bad)
push
dec
add
add
rol
mov
and
je
or
add
mov
sub
jl
out
pop
test
rol
mov
test
add
mov
jg
add
add
(bad)
retf
add
or
test
add
adc
mov
(bad)
xlat
xchg
or
add
sbb
add
mov
sub
cmp
and
add
punpcklbw
add
jmp
mov
test
repnz
mov
jg
jmp
mov
test
pop
sub
mov
jp
je
add
aam
dec
test
or
sub
mov
scas
fwait
mov
into
out
add
or
add
adc
mov
mov
jg
jmp
mov
mov
cmp
add
out
mov
jmp
call
dec
test
mov
jg
jmp
xchg
test
mov
pop
ss
imul
(bad)
pop
push
add
add
add
test
add
stos
or
push
and
add
add
(bad)
dec
push
jmp
add
mov
sub
in
test
add
add
(bad)
jecxz
out
test
add
add
arpl
push
shr
and
push
and
add
add
cmps
test
add
add
add
pop
add
dec
call
les
adc
add
cmp
daa
add
out
test
add
add
dec
sti
leave
daa
mov
(bad)
(bad)
shrd
jne
(bad)
jmp
xchg
int3
jp
add
jmp
add
jne
pop
aam
mov
mov
add
sub
pusha
test
dec
pop
mov
mov
add
xor
add
je
add
mov
lock
add
add
add
jg
add
pop
add
mov
and
iret
mov
add
push
test
add
sbb
mov
dec
add
add
data16
pop
in
lock
dec
ins
add
sbb
xlat
add
add
mov
add
fisubr
or
jmp
out
mov
mov
rol
pop
and
jg
jmp
mov
and
add
sbb
sar
xor
in
gs
out
lldt
jne
jmp
call
add
jp
clc
retf
mov
adc
pop
add
dec
jmp
aad
test
add
and
test
daa
add
loopne
pop
mov
jne
or
dec
push
or
add
add
or
int
add
add
(bad)
aas
add
dec
jmp
sub
add
mov
mov
sub
and
add
mov
pop
loopne
add
pf2iw
add
mov
jbe
push
inc
test
out
test
je
jmp
ret
test
sub
mov
rcl
sbb
(bad)
and
adc
add
inc
outs
out
add
test
cld
mov
add
add
test
test
sub
(bad)
cmp
mov
enter
sbb
mov
add
mov
add
pop
test
(bad)
(bad)
shrd
ja
(bad)
imul
test
dec
add
add
sahf
and
test
sub
pushf
or
aam
test
jne
(bad)
ror
push
add
ins
mov
imul
test
add
add
or
test
add
add
cmps
pop
add
add
add
mov
sub
mov
mov
jmp
movs
adc
jmp
mov
add
imul
mov
add
add
pop
imul
(bad)
add
add
sub
mov
je
jmp
mov
or
mov
add
add
lea
add
sub
jg
pop
test
sbb
jne
sub
jg
jmp
shl
add
add
add
cmc
jmp
fldenv
jmp
mov
cmp
add
jns
or
jmp
mov
test
mov
sbb
(bad)
add
(bad)
and
add
jmp
mov
pop
sub
mov
mov
or
arpl
push
or
dec
sub
sub
mov
movs
nop
add
jg
jmp
mov
test
add
mov
mov
je
jmp
push
test
add
add
mov
and
add
add
add
add
dec
pop
mov
sub
in
mov
add
rol
(bad)
(bad)
sub
add
lods
out
inc
clc
mov
enter
jg
mov
add
add
or
leave
in
jmp
es
fiadd
add
aas
(bad)
push
add
bound
add
popf
inc
and
push
jmp
jne
add
aam
gs
int
mov
test
jmp
dec
mov
sub
sub
je
push
add
sub
add
frstor
and
je
xchg
cmp
adc
and
add
add
xlat
inc
test
or
add
icebp
sub
bound
add
adc
xchg
and
jo
mov
cmp
aas
mov
push
jmp
add
add
sahf
(bad)
fidiv
inc
rol
push
call
mov
mov
sub
mov
and
shrd
add
jge
add
mov
les
into
mov
xlat
inc
test
fiadd
add
add
(bad)
jne
sub
jmp
add
add
enter
hlt
test
add
add
or
and
(bad)
and
sbb
mov
sub
cmps
das
bound
and
jl
cmp
push
test
xlat
sub
test
jl
dec
pop
sbb
sbb
ret
fiadd
cmp
xor
ins
test
aam
mov
mov
dec
jle
cmp
lods
mov
and
out
out
dec
pop
mov
add
add
mov
retf
ins
test
dec
add
ins
sub
add
mov
sti
cmp
push
(bad)
xchg
inc
ins
data16
xor
add
add
sub
or
and
adc
add
push
(bad)
add
add
xor
mov
and
mov
test
fdiv
add
add
shr
lds
je
aas
mov
add
fsubr
dec
dec
add
jae
test
ret
and
packssdw
jne
mov
add
add
and
add
add
mov
je
jmp
jmp
mov
icebp
xchg
cdq
push
or
daa
out
test
cmovne
pop
test
(bad)
aam
ins
jecxz
(bad)
sub
and
iret
pop
or
int
add
add
call
sar
test
jmp
mov
inc
cwde
add
dec
hlt
xor
xchg
aas
mov
sub
mov
pop
test
add
add
and
add
fild
mov
gs
mov
loope
rol
add
(bad)
(bad)
cmp
cmp
(bad)
cmp
int
ja
test
dec
dec
pop
mov
add
mov
lods
xchg
retf
loopne
jne
pop
dec
fld
ret
add
pop
inc
add
add
test
call
pop
add
mov
(bad)
xor
or
and
add
setno
mov
adc
sub
test
pusha
add
mov
mov
pop
add
add
mov
in
add
jbe
add
shl
mov
and
std
add
add
mov
pusha
add
adc
adc
add
mov
dec
add
add
mov
add
mov
inc
mov
retf
repnz
cmps
jl
add
add
sub
mov
mov
loope
mov
nop
inc
adc
loopne
aam
cmp
hlt
mov
pop
add
dec
add
xchg
test
mov
mov
dec
mov
or
arpl
mov
mov
mov
ins
push
pushf
ja
hlt
mov
add
add
mov
add
add
add
add
inc
or
add
cmp
test
test
dec
xchg
sbb
add
jmp
fsubr
pop
sbb
test
add
mov
mov
jne
or
add
(bad)
mov
push
test
gs
add
rol
add
mov
jmp
call
icebp
inc
in
jo
popa
fimul
mov
add
pusha
add
add
add
add
retf
movs
and
add
cmp
ja
add
pop
mov
inc
pop
add
add
add
movs
aaa
add
leave
mov
mov
mov
add
pop
mov
fsub
pop
mov
mov
scas
inc
and
call
sub
stos
dec
add
jne
mov
add
add
and
xlat
add
mov
adc
xchg
mov
add
add
daa
out
or
and
jmp
add
mov
xor
cmp
fxch
cdq
pusha
mov
dec
add
jmp
mov
scas
test
dec
test
add
or
mov
mov
jmp
inc
xlat
int
dec
add
das
mov
pop
add
cld
mov
add
cmp
mov
mov
pop
add
mov
fiadd
jmp
jb
inc
dec
add
ja
icebp
shl
add
mov
imul
test
add
add
push
add
mov
fcom
sbb
add
setne
and
pushf
mov
add
pop
in
test
mov
and
repz
xor
outs
adc
repnz
add
add
lahf
mov
mov
es
and
add
jne
jmp
mov
sub
pop
add
add
mov
sub
std
rol
mov
mov
inc
test
cwde
je
and
test
jo
sub
mov
fimul
inc
ret
(bad)
fiadd
(bad)
xchg
mov
add
je
add
or
(bad)
int3
and
mov
add
hlt
adc
add
adc
test
sub
ins
add
mov
and
add
add
mov
add
mov
pop
add
add
and
mov
(bad)
call
int3
mov
mov
out
add
mov
int
dec
add
and
jo
mov
pushf
loope
dec
add
add
sbb
jne
mov
jmp
inc
test
add
add
retf
data16
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
xchg
mov
and
or
mov
sbb
push
aam
cs
xchg
out
inc
mov
sbb
and
jg
jmp
mov
sbb
and
je
jmp
xor
retf
push
or
test
add
sbb
out
scas
add
cld
leave
(bad)
fstp
je
jmp
in
and
sub
mov
mov
repnz
and
add
and
stos
lock
add
mov
mov
cmp
cmove
mov
jmp
je
and
add
add
mov
cwde
mov
popf
fimul
cmp
add
mov
and
inc
mov
or
rol
and
(bad)
stos
and
jnp
add
jae
and
lea
pop
mov
outs
and
nop
mov
ret
nop
push
mov
push
push
push
and
sub
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
mov
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
call
mov
call
call
mov
call
call
xor
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
movs
mov
mov
dec
test
xor
add
inc
and
ror
sub
mov
push
sub
inc
and
(bad)
mov
fs
and
add
add
inc
and
jmp
call
dec
loope
add
jp
add
add
mov
add
(bad)
mov
cmp
add
adc
aas
mov
sub
pop
jo
into
add
add
inc
add
mov
push
stc
mov
cdq
add
fadd
add
adc
dec
sahf
xchg
sahf
repz
out
xchg
cmps
sti
add
add
or
mov
mov
(bad)
dec
add
adc
adc
and
in
and
push
mov
icebp
enter
inc
(bad)
dec
add
fld
cmp
mov
outs
mov
add
cmp
cmp
add
add
inc
fild
lods
sub
xchg
mov
and
add
and
outs
add
ret
push
cmp
in
arpl
sti
add
rol
add
js
push
(bad)
mov
sbb
test
add
rol
mov
retf
push
int3
push
jmp
sbb
adc
jg
ds
movs
ins
jmp
and
inc
test
cli
add
inc
js
add
mov
jmp
push
in
mov
sub
pusha
add
mov
sub
mov
test
fadd
add
add
dec
inc
adc
cli
push
leave
sub
je
sub
mov
inc
jecxz
and
sub
and
and
(bad)
in
adc
int3
or
inc
mov
sub
dec
int3
adc
in
cmp
sti
jmp
aad
(bad)
xor
mov
mov
mov
and
add
add
aaa
add
add
inc
ror
dec
sti
fnstcw
test
mov
int3
inc
mov
adc
add
cmp
mov
out
fisubr
add
add
retf
test
fld
call
(bad)
jmp
pop
mov
and
adc
test
dec
add
add
mov
imul
mov
add
add
add
adc
dec
sti
push
push
mov
sub
inc
adc
adc
inc
and
adc
add
leave
sub
repz
lods
adc
mov
add
lea
mov
mov
jge
add
inc
and
call
sub
std
jne
js
mov
mov
outs
jg
jp
bswap
retf
gs
inc
and
jmp
push
inc
mov
mov
(bad)
xor
lods
add
inc
ss
xor
add
inc
and
pusha
jnp
add
mov
inc
addr16
add
in
and
add
dec
cmp
and
mov
add
adc
mov
sub
dec
add
add
mov
(bad)
ja
nop
fsubr
ins
aad
(bad)
xor
mov
outs
lea
pop
pop
and
add
int3
adc
dec
int
sti
pop
(bad)
dec
pop
inc
add
sbb
add
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
sub
mov
call
mov
mov
sub
mov
mov
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
lea
call
mov
movzx
mov
mov
mov
mov
movzx
mov
call
call
mov
add
sub
call
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
add
mov
mov
jmp
call
jmp
add
pop
pop
pop
pop
ret
lea
mov
mov
movzx
mov
mov
call
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
sub
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
mov
mov
jmp
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
ror
sub
int3
retf
sar
ja
(bad)
and
sub
sub
add
mov
inc
mov
fwait
and
dec
or
inc
and
mov
ror
retf
mov
and
and
movs
jmp
inc
and
sub
mov
je
jmp
ja
and
sub
mov
test
ins
mov
add
add
xor
add
inc
mov
stos
lock
push
inc
(bad)
add
cld
and
aaa
inc
ror
bswap
(bad)
pop
add
jmp
jmp
mov
push
(bad)
sub
cdq
pop
mov
add
add
shl
ret
jmp
mov
sar
jmp
inc
and
cmp
dec
movs
and
add
cwde
jmp
sub
mov
and
pop
inc
in
jmp
mov
mov
jmp
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
pop
mov
jmp
mov
mov
shl
mov
test
test
call
sub
cld
inc
and
mov
popa
test
mov
mov
sub
fcomp
jle
dec
push
xor
add
add
fwait
and
and
outs
scas
mov
inc
test
inc
jmp
mov
jne
ja
mov
and
jl
pop
add
add
mov
push
and
je
jmp
dec
ins
and
dec
ss
and
(bad)
sbb
dec
add
add
repnz
jge
and
lock
fwait
add
out
jmp
xchg
inc
push
xor
sar
mov
sbb
sbb
add
add
mov
and
sbb
ja
mov
and
ja
push
hlt
retf
inc
mov
test
and
jp
scas
test
add
add
inc
jmp
inc
mov
xchg
add
mov
sub
sub
adc
js
jmp
mov
push
adc
dec
add
xchg
les
cli
add
add
adc
cmp
mov
mov
pop
into
add
add
je
mov
jmp
and
mov
stos
sub
jne
and
fs
ret
add
add
inc
and
mov
add
call
shl
(bad)
fs
inc
out
or
jne
push
mov
(bad)
xor
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
inc
popf
inc
mov
mov
mov
scas
push
and
mov
adc
call
mov
xchg
xor
push
mov
and
mov
sbb
add
xlat
leave
pop
inc
and
addr16
push
fmul
movs
aam
out
mov
add
loopne
and
lahf
shr
mov
inc
and
jg
jmp
mov
sub
mov
aad
jg
jmp
mov
inc
sbb
jle
mov
aaa
inc
das
xor
(bad)
fild
movhps
sbb
sub
mov
sub
(bad)
scas
add
add
cmps
xlat
add
pop
inc
and
cmp
pusha
lock
jns
pop
add
add
add
add
and
aas
retf
sbb
xchg
stc
xchg
dec
sti
add
dec
add
add
pop
inc
and
fmul
sbb
ret
mov
sahf
add
sahf
mov
push
and
sub
mov
and
stc
test
sti
jmp
pop
lea
std
xchg
fld
jnp
inc
push
xor
mov
jmp
mov
das
inc
or
lahf
xlat
and
mov
sbb
ja
add
mov
and
in
int
lock
mov
mov
es
jmp
mov
and
pop
push
das
clc
lahf
das
xor
test
loopne
xlat
leave
mov
adc
mov
aam
dec
mov
add
push
loopne
and
lahf
xchg
sahf
mov
jb
and
fadd
out
mov
mov
or
js
push
add
psllq
add
or
add
movhps
or
arpl
sub
xchg
gs
xor
sar
and
iret
movs
ficomp
addr16
fldpi
ja
popf
aas
xor
adc
dec
and
test
push
mov
lock
into
add
add
push
push
mov
xor
mov
push
repnz
not
pop
mov
and
add
mov
xchg
pop
test
cld
jmp
cli
push
add
cmove
mov
jp
mov
add
pop
and
sti
cmps
xlat
add
xchg
and
aam
nop
mov
mov
add
and
add
push
test
movhps
pusha
push
jmp
mov
pop
test
retf
rol
mov
dec
mov
cmps
pop
ficomp
and
xor
ret
mov
test
mov
pop
rol
sub
sub
sbb
or
sub
mov
fwait
es
mov
xchg
in
push
mov
jmp
jmp
and
add
lahf
ja
inc
and
aam
and
jmp
xchg
add
inc
and
xchg
sahf
hlt
pop
clc
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
fbld
add
add
add
fdivr
add
jp
test
add
add
(bad)
dec
add
mov
lahf
mov
scas
enter
call
test
mov
add
je
mov
add
mov
mov
jmp
test
leave
pusha
add
sub
(bad)
xchg
and
scas
add
pusha
or
add
add
add
and
jmp
mov
jge
(bad)
mov
add
adc
jmp
add
mov
or
and
leave
add
test
mov
in
and
add
imul
push
or
loope
mov
imul
(bad)
inc
leave
jmp
sub
mov
ret
test
add
jg
xchg
lods
loope
jmp
mov
jg
or
add
lods
mov
sysenter
pop
push
add
jmp
rol
test
mov
stc
sub
outs
leave
mov
or
das
add
cmp
and
pusha
mov
push
call
add
(bad)
imul
test
cwde
add
add
fwait
jge
lahf
daa
mov
mov
jmp
add
out
dec
cwde
jo
scas
int3
aad
stc
push
add
add
mov
add
stos
leave
add
test
push
inc
add
mov
push
push
mov
jl
test
jecxz
jmp
inc
pop
or
mov
sub
mov
and
add
dec
sub
cwde
imul
shr
out
mov
jg
rol
jmp
add
inc
cwde
add
mov
lods
mov
fadd
sub
add
test
add
sub
js
add
sub
ror
inc
je
add
in
int3
inc
xlat
add
ret
inc
and
arpl
dec
jo
add
loope
add
mov
sub
cmps
test
add
leave
jmp
mov
repz
add
sub
mov
pmulhuw
add
jmp
rol
pop
xchg
rol
pop
pop
rcl
add
mov
add
aad
sbb
add
and
cmp
jmp
mov
push
mov
cs
scas
loope
or
mov
sub
sub
inc
and
add
retf
add
jmp
icebp
out
push
cwde
scas
loope
and
mov
push
(bad)
imul
add
mov
stos
leave
mov
lahf
cwde
add
(bad)
jns
mov
pop
dec
pmulhuw
add
add
imul
nop
iret
push
lods
je
jmp
mov
and
mov
dec
inc
jg
and
add
jmp
mov
and
das
in
add
jg
shl
mov
push
dec
or
inc
add
ins
icebp
out
and
add
jle
mov
jg
add
add
add
leave
add
mov
popa
xor
test
or
ins
jmp
mov
mov
add
sub
bound
add
paddsw
cmp
stos
add
pusha
xor
popa
dec
dec
or
inc
js
add
stc
jmp
add
or
leave
sub
mov
je
jmp
mov
icebp
outs
enter
mov
jmp
add
jmp
mov
sub
and
mov
add
add
inc
add
mov
pop
mov
dec
ins
mov
add
ins
jmp
add
add
es
inc
aas
mov
xor
jmp
pusha
xor
and
xlat
add
test
inc
and
mov
add
(bad)
add
add
and
pop
add
sub
mov
movs
add
add
mov
and
push
cmp
xor
in
out
test
pop
or
add
add
jmp
mov
mov
xor
and
inc
add
sar
dec
repnz
mov
jmp
mov
jg
add
add
jmp
pop
add
inc
cmp
rol
add
test
jp
imul
test
scas
loope
mov
add
das
mov
mov
mov
leave
pop
das
jo
xlat
dec
or
ror
imul
lods
add
call
pop
(bad)
xchg
in
mov
mov
iret
dec
add
xor
inc
inc
or
push
mul
add
add
add
add
ds
jg
enter
dec
add
mov
fld
or
xchg
in
cmp
add
and
or
or
scas
loope
shl
ror
shl
add
push
inc
xlat
jl
gs
jmp
cwde
jnp
add
pop
mov
cmp
xlat
sbb
xor
mov
and
mov
(bad)
ins
cli
add
add
mov
cmovne
pusha
mov
add
add
push
add
add
leave
add
mov
and
add
add
xlat
dec
or
jo
rol
ror
mov
add
add
jl
jge
add
mov
mov
mov
lahf
movs
push
add
(bad)
(bad)
add
mov
mov
mov
push
mov
pop
or
add
ss
xchg
sub
retf
in
push
je
rol
xchg
and
add
mov
and
loope
jmp
and
test
add
jmp
jmp
mov
loopne
add
add
out
and
add
pop
add
add
das
mov
sub
(bad)
mov
leave
(bad)
push
lahf
xor
add
push
mov
mov
movs
or
and
adc
inc
ficomp
add
mov
stos
leave
loope
ret
stos
sub
repnz
das
or
leave
cs
add
add
and
sub
jmp
jmp
sub
in
and
imul
mov
jmp
pushf
test
add
add
mov
and
stos
lea
ret
mov
and
mov
add
add
cmp
dec
outs
mov
sahf
retf
add
add
add
add
add
mov
mov
mov
mov
and
jo
loope
fs
jmp
mov
(bad)
jns
loop
add
in
mov
bound
cmp
addr16
sti
test
xchg
inc
sub
mov
sub
add
push
ins
mov
add
das
mov
ins
shl
call
test
add
dec
into
call
jo
adc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
pushf
add
popf
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
sub
call
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
call
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
call
add
mov
je
jmp
call
add
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
pushf
xor
add
sub
popf
call
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
call
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
call
mov
mov
cmp
cmovne
call
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
sub
sub
call
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
add
call
je
jmp
call
sub
mov
jg
jmp
call
add
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
call
jmp
mov
mov
call
mov
jmp
add
pop
ret
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
push
mov
sub
mov
mov
mov
mov
mov
call
call
mov
mov
mov
call
mov
mov
sub
mov
call
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
add
call
je
jmp
mov
add
call
je
jmp
jmp
mov
mov
mov
jmp
lea
mov
call
mov
call
jmp
add
pop
ret
lea
mov
call
call
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
push
mov
push
push
add
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovl
mov
jmp
mov
call
jmp
mov
mov
jmp
mov
jmp
mov
lea
mov
mov
mov
call
mov
call
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
call
jmp
mov
add
mov
mov
jmp
lea
mov
mov
movzx
mov
call
mov
sub
sub
add
mov
sub
add
mov
sub
mov
sub
add
mov
sub
sub
sub
add
call
shl
add
movzx
mov
mov
mov
call
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
call
jmp
mov
mov
jmp
mov
mov
mov
call
jmp
mov
jmp
call
jmp
mov
pushf
xor
popf
mov
jmp
lea
mov
call
mov
push
mov
xor
cmp
pop
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
call
mov
sub
sub
add
sub
add
sub
mov
mov
mov
call
mov
call
call
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
call
call
lea
mov
call
mov
mov
call
mov
call
sub
mov
call
call
jmp
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
call
jmp
mov
call
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
call
call
sub
mov
add
pop
pop
pop
ret
call
jmp
mov
mov
jmp
lea
mov
call
mov
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
call
call
lea
mov
call
mov
mov
mov
mov
call
sub
call
mov
jmp
call
mov
jmp
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
call
mov
mov
mov
sub
mov
mov
call
call
add
mov
call
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
call
mov
jmp
mov
call
jmp
mov
mov
jmp
mov
jmp
call
add
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
call
jmp
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
call
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
call
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
pushf
mov
xor
popf
cmp
cmove
mov
jmp
lea
add
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
call
jmp
mov
add
call
call
jmp
call
mov
jmp
mov
mov
call
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
add
mov
call
mov
call
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
add
call
add
shl
add
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
call
cmp
cmove
call
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
call
mov
jmp
mov
mov
call
cmp
cmovb
mov
jmp
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
call
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
call
shl
add
call
mov
jmp
mov
jmp
mov
jmp
mov
add
call
mov
jmp
call
jmp
mov
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
add
mov
mov
call
add
add
sub
mov
mov
mov
mov
add
mov
mov
add
mov
mov
jmp
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
call
jmp
mov
jmp
mov
jmp
call
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
call
add
mov
call
jmp
mov
mov
mov
call
cmp
cmovne
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
call
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
call
cmp
cmovb
mov
jmp
pushf
mov
sub
popf
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
call
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
call
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
call
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
add
mov
mov
movzx
xor
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
call
mov
jmp
mov
jmp
call
jmp
mov
add
call
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
call
jmp
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
jl
add
mov
sub
mov
outs
inc
ja
and
mov
(bad)
jmp
int
imul
and
jg
jmp
xchg
push
ret
into
inc
sbb
mov
xor
pop
inc
cmps
add
fild
mov
sub
mov
sbb
xchg
push
add
sbb
sar
es
je
adc
mov
popa
pop
sbb
adc
test
add
dec
add
add
inc
and
cmp
inc
and
or
add
inc
cld
add
mov
and
sub
mov
jg
bswap
mov
add
imul
add
sub
mov
sub
pop
sbb
pop
mov
sbb
movs
mov
add
ins
add
add
jmp
and
jbe
test
mov
and
sbb
outs
inc
cmp
jmp
jno
sbb
test
dec
inc
add
add
add
or
mov
or
loop
or
and
jbe
push
add
jne
xor
dec
add
pop
push
(bad)
mov
movs
shl
or
adc
fwait
out
jmp
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fiadd
or
mov
or
ret
add
add
movs
lea
mov
mov
and
add
add
inc
jnp
add
cmp
xchg
inc
push
daa
push
aaa
inc
xor
shl
jg
mov
in
js
sbb
add
and
rcr
and
xlat
test
test
mov
inc
(bad)
fs
inc
stos
in
dec
inc
push
jnp
(bad)
sbb
add
and
sub
push
test
js
jle
mov
enter
jnp
cdq
in
mov
add
add
mov
daa
imul
jo
add
add
inc
in
sub
mov
(bad)
mov
add
add
mov
add
mov
test
adc
add
add
add
sahf
and
in
in
xchg
daa
or
mov
add
dec
mov
push
add
and
ins
jo
mov
mov
js
mov
arpl
jmp
mov
mov
in
pushf
(bad)
sub
mov
cmp
lahf
adc
mov
daa
movzx
aam
ficom
dec
adc
clc
pop
and
push
cmps
inc
test
and
jmp
(bad)
xor
adc
inc
and
pop
daa
or
test
push
sub
jnp
inc
jmp
mov
jbe
sbb
push
or
and
jg
lds
lahf
xchg
daa
ret
jmp
cwde
xchg
mov
pop
pop
jmp
jmp
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
js
and
jmp
and
repz
lods
ret
and
rol
mov
mov
push
scas
add
in
lea
and
cmp
out
xlat
push
je
dec
int
add
pop
and
das
es
mov
jg
jmp
mov
sbb
fs
inc
and
je
fs
scas
add
shl
sar
dec
xor
test
mov
add
mov
fwait
push
loope
icebp
mov
movntps
add
in
sbb
pop
add
inc
aad
cmp
out
and
cld
test
add
jmp
dec
nop
mov
add
push
hlt
xor
sub
icebp
pop
cmp
inc
scas
mov
jmp
mov
mov
and
fcomi
std
dec
add
mov
movs
jno
and
xchg
mov
ins
add
mov
mov
mov
add
mov
mov
addr16
add
pop
js
dec
add
and
xchg
idiv
inc
add
lea
add
mov
or
add
ret
rcr
(bad)
(bad)
dec
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
call
sub
call
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
call
mov
mov
call
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
call
mov
mov
call
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
call
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
movzx
mov
call
mov
mov
sub
sub
sub
mov
add
sub
mov
sub
sub
call
add
sub
sub
mov
movzx
mov
mov
mov
add
sub
mov
add
mov
call
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
sub
sub
sub
sub
add
add
mov
sub
mov
sub
add
mov
sub
call
movzx
mov
mov
mov
add
add
call
sub
call
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
retf
and
add
inc
cmc
test
retf
call
pop
aas
and
call
add
add
ja
xchg
call
call
stc
or
mov
call
mov
sbb
inc
and
mov
adc
and
and
ja
mov
test
(bad)
leave
and
cdq
push
inc
jg
popa
adc
idiv
sub
xchg
stc
cmp
test
add
add
mov
jne
xchg
inc
(bad)
pop
jecxz
imul
out
jp
mov
add
xchg
and
xor
(bad)
sbb
add
add
inc
stc
inc
sbb
iret
sbb
xor
cwde
add
or
popa
push
call
xchg
and
stc
mov
sub
test
add
jae
add
cmp
clc
rcr
mov
jge
pop
xchg
add
xor
add
and
mov
sub
pop
je
jmp
xlat
nop
inc
clc
pop
nop
inc
loope
inc
and
seta
add
jmp
jmp
mov
adc
mov
xchg
sbb
add
das
sbb
and
cmp
mov
adc
inc
and
ja
cmp
jmp
mov
je
call
stc
dec
push
and
fdivrp
iret
mov
movs
(bad)
fisub
xor
add
lods
stc
pushf
or
cli
into
jmp
leave
and
cmps
cs
mov
add
add
dec
(bad)
mov
and
jmp
test
and
mov
mov
xor
dec
add
rol
and
pop
nop
inc
loope
push
shl
std
lea
pusha
pop
push
or
xor
retf
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
lea
mov
mov
and
add
add
jno
test
and
jae
xor
xchg
ret
inc
and
loope
push
in
and
(bad)
jmp
test
mov
hlt
inc
and
jmp
je
dec
mov
xchg
push
test
mov
dec
and
pop
(bad)
sbb
shl
add
mov
sub
add
je
out
or
inc
add
cmp
inc
inc
and
jg
mov
mov
pop
mov
mov
jb
jp
add
pop
sub
das
aaa
neg
push
add
popf
out
add
add
mov
or
outs
or
pop
stos
inc
and
test
cmp
push
mov
jmp
mov
mov
and
movlps
sub
loope
push
test
add
push
add
test
push
add
popf
add
add
jo
sbb
mov
sbb
loope
push
add
ins
xchg
out
inc
sahf
dec
je
jmp
clc
inc
div
mov
inc
and
sbb
push
add
nop
mov
adc
movs
imul
sub
imul
rol
fisubr
fldenv
sub
cmp
and
shrd
and
jp
mov
dec
and
rcr
add
int
push
add
add
or
add
sub
stos
inc
and
stmxcsr
add
add
xor
popf
fs
iret
pop
inc
pop
movs
cmovbe
test
push
sub
mov
adc
outs
add
mov
(bad)
in
inc
mov
jae
jmp
stos
xlat
and
add
mov
mov
add
add
mov
xchg
fnstenv
and
pcmpgtw
pop
and
add
mov
sub
fld
minps
add
add
sub
mov
unpcklps
lock
add
mov
lea
test
add
xchg
ret
mov
jo
shl
xchg
mov
je
jmp
mov
and
sub
sbb
(bad)
jle
add
dec
jae
add
fidivr
add
mov
mov
mov
mov
xchg
add
nop
add
inc
ror
mov
mov
jmp
sub
add
popf
add
inc
in
mov
and
jmp
push
inc
add
pop
push
sub
add
call
mov
stc
outs
add
out
test
add
mov
pop
jg
(bad)
mov
out
popf
inc
(bad)
(bad)
mov
mov
mov
retf
and
add
add
retf
and
je
add
add
iret
lds
sbb
add
mov
and
add
mov
push
cmps
jae
ficom
mov
and
jne
int
add
mov
push
nop
add
and
je
popf
add
mov
call
mov
add
and
mov
sbb
add
xchg
mov
xor
push
cmps
jae
cmovne
mov
pop
sub
and
loope
and
in
call
mov
fwait
movs
call
mov
jb
mov
jmp
mov
dec
and
mov
and
lds
pop
nop
and
sbb
push
sub
es
pop
into
lahf
ret
(bad)
fldenv
mov
add
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
adc
or
inc
vmread
inc
and
mov
jle
and
mov
in
inc
and
aad
jmp
xchg
mov
or
mov
aaa
sbb
cmc
add
add
and
sub
mov
mul
mov
push
sub
mov
outs
ficomp
mov
jg
jmp
cli
inc
in
cmp
mov
cvttps2pi
(bad)
aad
add
jmp
(bad)
mov
pop
add
test
jg
mov
inc
and
sub
sub
test
hlt
sub
add
or
in
pop
xchg
push
leave
and
jg
jmp
mov
and
xchg
aad
stos
imul
outs
stos
sbb
mov
jno
mov
addr16
push
inc
cmps
pop
mov
pop
xor
fadd
sub
(bad)
in
jno
add
inc
mov
dec
mov
dec
and
stos
test
add
addr16
cmp
out
les
inc
and
je
jmp
jmp
mov
xor
cmp
mov
and
add
sar
in
or
or
shl
adc
ret
and
movs
add
mov
iretw
or
and
(bad)
(bad)
(bad)
aas
aas
inc
and
adc
add
das
cld
loopne
lock
add
mov
and
push
add
inc
and
call
mov
mov
mov
call
mov
add
add
add
loopne
mov
loopne
sbb
add
add
inc
and
jo
push
retf
mov
jmp
or
call
mov
inc
add
xor
arpl
inc
add
dec
sub
add
add
or
add
(bad)
iret
add
sub
add
rol
and
add
add
into
inc
and
pop
mov
add
or
or
push
lea
cmp
pop
rol
dec
neg
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
aad
call
(bad)
mov
add
add
sbb
inc
add
inc
nop
dec
add
push
clc
inc
push
dec
mov
gs
(bad)
rcr
in
gs
mov
jecxz
add
sub
mov
cmp
(bad)
sbb
jno
add
mov
or
test
mov
je
jmp
mov
sub
mov
and
jg
jmp
add
add
mov
and
inc
xchg
or
jmp
dec
mov
and
sub
mov
and
test
mov
cmp
cmp
mov
pusha
inc
and
pmaxub
jmp
les
jge
cmp
(bad)
cmp
test
add
add
ror
or
sbb
test
call
les
mov
sub
mov
and
pand
mov
add
add
sub
mov
cdq
or
cli
(bad)
(bad)
mov
push
push
push
repz
outs
mov
inc
ror
add
dec
xor
and
fcmovu
rcl
xor
call
rol
add
mov
sar
(bad)
dec
lock
inc
adc
and
jb
std
or
and
jns
lahf
add
test
add
add
sub
adc
mov
and
push
mov
inc
mov
mov
pop
retf
mov
sub
add
jmp
sbb
and
call
cli
test
cdq
jnp
mov
jo
(bad)
dec
mov
iret
add
fsubrp
dec
rdpmc
dec
mov
mov
sbb
cmove
mov
add
add
and
std
jmp
call
rol
mov
movs
add
out
dec
cmp
add
cwde
inc
and
pop
scas
inc
push
mov
shl
sbb
outs
ret
jmp
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
hlt
(bad)
sbb
jbe
add
jno
adc
jno
test
sub
push
sahf
add
jmp
adc
add
inc
mov
jg
add
and
add
cli
mov
add
test
jns
mov
cld
test
push
xchg
jle
xchg
mov
and
cmc
jo
mov
shl
add
mov
jg
nop
add
and
dec
push
xchg
sub
mov
and
add
or
std
inc
sub
add
jg
test
mov
add
push
pop
and
jno
cmp
fucomi
xchg
add
add
push
mov
rcl
test
add
(bad)
mov
add
adc
add
mov
movs
add
jae
or
push
or
inc
shr
adc
add
pop
fidiv
lods
call
and
mov
dec
add
mov
xchg
ds
sub
mov
xor
or
jns
popa
movs
add
ja
test
push
add
and
movs
std
bswap
rol
add
xchg
add
pop
mov
add
sub
mov
js
ret
add
add
add
and
inc
add
js
in
int3
test
add
add
pushf
pop
add
jmp
cmp
mov
lock
and
add
retf
add
inc
push
or
cmc
add
add
mov
pcmpeqw
mov
and
add
add
or
shl
cmpps
add
std
into
test
mov
dec
ss
xlat
mov
xchg
add
dec
add
and
inc
push
add
mov
adc
jg
jmp
jp
and
jns
mov
mov
je
mov
dec
xchg
pop
xor
mov
sub
mov
pop
rol
add
push
test
add
sub
mov
stos
jns
rol
jmp
mov
fidiv
xchg
cmp
and
xchg
inc
add
dec
mov
mov
add
add
xchg
imul
and
je
push
cli
mov
jp
and
jns
mov
push
mov
add
add
or
sar
add
pop
mov
mov
push
out
sub
adc
aas
xchg
add
sti
add
sbb
in
mov
(bad)
mov
or
cmps
ret
add
sub
inc
xchg
inc
and
add
add
add
call
mov
add
add
ret
sbb
dec
add
add
call
xor
add
call
movs
std
add
and
test
add
add
adc
add
sti
cmps
inc
add
add
std
call
retf
push
add
sbb
dec
add
out
mov
add
adc
enter
mov
mov
add
jmp
mov
into
xchg
pop
test
mov
rol
add
mov
and
add
mov
sub
xchg
mov
mov
jae
add
add
stc
mov
mov
(bad)
lock
push
add
and
push
pop
std
inc
rcr
add
mov
mov
push
sub
daa
mov
test
add
add
repnz
or
(bad)
mov
aaa
mov
xor
(bad)
fs
stos
aaa
ror
repz
and
inc
and
inc
and
(bad)
(bad)
inc
add
(bad)
jmp
in
and
and
mov
mov
repz
mov
aad
or
pop
cld
(bad)
jmp
mov
lea
jp
jl
mov
mov
mov
mov
push
fisttp
fcmovne
add
mov
push
mov
adc
jge
mov
test
and
mov
sub
sbb
inc
cmps
mov
jns
ror
push
int
(bad)
and
movs
stos
repnz
mov
and
mov
cmp
dec
cmps
inc
or
cmp
dec
jbe
jmp
mov
stos
(bad)
mov
mov
xor
test
fnstenv
(bad)
aas
str
sar
or
(bad)
pop
push
mov
(bad)
cld
push
ror
call
jmp
add
mov
inc
loopne
(bad)
jl
jae
and
mov
pop
fdiv
mov
xor
mov
mov
and
push
xor
lds
jge
dec
popa
hlt
xchg
mov
jl
(bad)
mov
mov
xor
repz
mov
dec
cmc
sub
pop
cmp
cmc
inc
mov
mov
mov
sahf
mov
fidivr
lock
and
mov
and
xor
ror
inc
mov
or
mov
fld
mov
hlt
or
adc
jnp
or
icebp
push
inc
xchg
retf
jo
and
or
mov
outs
lea
fimul
fcomp
add
(bad)
bnd
(bad)
dec
add
inc
dec
mov
mov
jle
add
xchg
and
or
or
rcl
pmaxub
add
mov
dec
and
mov
xchg
mov
add
jl
add
add
or
add
test
add
add
jo
jno
add
jg
mov
jmp
mov
mov
retf
add
add
dec
add
add
pop
add
inc
sar
jmp
mov
sub
mov
mov
pop
movs
leave
sub
add
xchg
mov
movs
add
inc
rcl
int3
mov
pop
mov
add
sbb
add
mov
mov
and
add
les
add
sbb
mov
call
mov
call
imul
std
inc
test
in
mov
jmp
lea
sub
bswap
mov
add
add
jg
mov
js
and
repnz
mov
jmp
data16
mov
mov
mov
pop
dec
call
(bad)
shr
adc
std
inc
mov
daa
add
nop
call
ret
nop
mov
ret
data16
push
mov
push
push
push
sub
mov
call
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
call
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
call
movzx
mov
mov
call
mov
mov
call
call
mov
add
add
mov
mov
mov
sub
mov
mov
call
mov
shl
add
sub
mov
mov
mov
mov
mov
call
add
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
jmp
mov
jmp
lea
pop
pop
pop
pop
ret
mov
call
mov
mov
mov
jmp
mov
mov
add
mov
mov
call
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
inc
xor
mov
mov
mov
pop
jns
shl
jns
push
adc
dec
and
psubq
add
add
add
jb
mov
or
mov
or
add
jmp
mov
xchg
cmp
rol
xor
test
cmps
lock
stc
sub
add
ss
je
xor
push
pop
or
aas
mov
je
sar
popa
xor
dec
pop
add
lock
xchg
loope
xchg
movs
inc
pushf
cmp
popf
popf
or
xchg
scas
cmp
inc
cmovne
mov
jmp
mov
xchg
add
or
add
icebp
mov
mov
(bad)
dec
std
push
inc
mov
mov
movs
inc
and
lea
hlt
pop
cmp
clc
mov
pop
(bad)
dec
pop
add
in
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushf
rcl
mov
xlat
mov
xor
(bad)
mov
sub
sub
addr16
movs
rol
loope
and
mov
pop
lods
xor
mov
and
jb
add
add
repz
add
cmp
test
push
cdq
(bad)
mov
mov
clc
and
cmp
mov
jg
jg
add
mov
sub
in
sub
jg
jmp
mov
and
sub
mov
in
test
cmp
jmp
push
push
mov
mul
pop
mov
and
sbb
jge
add
adc
mov
mov
mov
je
test
inc
call
shr
inc
cwde
pop
sysenter
sbb
add
and
adc
pop
sub
mov
jns
fisttp
push
push
add
out
inc
cwde
ja
mov
and
pop
(bad)
add
add
cmp
shl
xchg
push
aaa
inc
dec
inc
xchg
and
test
mov
ds
bound
arpl
add
(bad)
inc
add
add
xchg
add
pop
add
es
jbe
add
push
icebp
add
add
cmp
pop
sbb
(bad)
sbb
loop
add
inc
sbb
ins
mov
inc
stc
add
mov
adc
pmulhw
add
add
sub
data16
clc
in
inc
cwde
xor
jmp
mov
je
sub
mov
in
test
add
add
shl
cmp
inc
and
je
push
pop
out
add
inc
and
sub
hlt
pop
and
je
jmp
sbb
add
rcr
pop
xchg
jmp
mov
sub
jno
and
imul
pop
and
mov
retf
push
mov
test
add
add
sub
add
dec
neg
loopne
cmp
add
add
and
sbb
push
xchg
add
mov
ins
lods
and
mov
adc
clc
adc
push
imul
pop
xchg
add
cs
mov
and
push
dec
stc
mov
out
mov
mov
pushf
xor
popf
fsub
repnz
loope
sar
push
test
retf
sub
inc
cdq
pusha
jmp
xbegin
fst
retf
push
add
mov
mov
shl
add
add
jl
inc
and
jmp
mov
mov
jmp
mov
jmp
sti
mov
ja
jge
test
clc
add
mov
and
stos
sar
imul
mov
jmp
add
add
push
dec
sub
mov
mov
sub
adc
rol
rcr
shr
mov
jecxz
cmp
hlt
pop
mov
pop
lods
sub
pop
shr
sbb
and
(bad)
mov
ins
sahf
xchg
dec
add
add
and
xchg
inc
and
cmp
test
xchg
add
hlt
pop
pop
pop
pop
sbb
mov
mov
xor
shrd
repnz
sbb
mov
mov
jl
cld
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jmp
aas
imul
adc
sub
jmp
sub
ja
ret
sahf
mov
mov
sbb
and
out
jmp
mov
adc
mov
repnz
jge
adc
push
xor
add
or
mov
cmp
xor
inc
loope
jmp
mov
mov
push
and
ret
xor
mov
jae
jle
mov
out
(bad)
dec
or
repz
mov
pop
mul
xchg
(bad)
(bad)
jmp
mov
(bad)
jge
out
cmp
test
dec
jg
adc
cdq
(bad)
(bad)
jmp
dec
xor
mov
or
(bad)
clc
cmps
mov
fidivr
inc
rol
inc
inc
or
jecxz
out
cmp
movs
push
les
inc
and
xchg
ror
dec
adc
jg
dec
ror
stos
xor
(bad)
dec
outs
in
dec
add
cmp
rol
sar
mov
or
adc
xchg
es
xor
or
add
test
mov
and
xor
and
mov
mov
(bad)
jmp
inc
pop
sahf
ret
add
mov
inc
jno
xor
add
(bad)
fidiv
inc
repnz
inc
repnz
sub
adc
adc
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
mov
pusha
or
add
lods
add
ds
and
add
mov
movs
add
add
popa
leave
add
add
adc
add
call
(bad)
sbb
push
add
add
stc
sub
out
mov
icebp
add
aad
inc
sub
jo
and
add
jmp
(bad)
das
add
add
xor
ja
add
cmps
movs
cld
and
add
add
lods
mov
popa
jmp
mov
in
mov
bound
add
xchg
out
jae
popf
xor
pop
add
jge
test
mov
js
scas
sbb
lods
lods
jl
(bad)
cmp
add
stc
push
add
movs
xchg
movs
xor
and
bndstx
jmp
add
mov
inc
hlt
mov
rol
dec
add
jmp
in
js
add
cdq
rcl
and
stos
xor
xchg
add
call
add
loop
mov
fs
sub
ror
bound
add
loope
cwde
fsubr
leave
jmp
pop
test
mov
daa
jge
mov
pmullw
jge
stc
jmp
repz
lds
jmp
aaa
ins
jge
cmp
jg
push
add
inc
mov
enter
push
loopne
aas
inc
and
cmp
jmp
mov
fs
xlat
xchg
mov
push
add
mov
mov
add
adc
lods
and
je
jmp
jb
or
ror
call
rcl
test
add
and
add
add
call
test
add
add
test
dec
pop
add
sub
mov
inc
ins
sahf
add
add
pusha
add
pop
test
mov
add
sub
retf
xchg
inc
mov
add
call
adc
add
movs
inc
pop
add
jmp
mov
aam
dec
jge
xor
cmp
add
jmp
inc
test
sbb
ret
or
paddb
add
jg
cmp
add
stc
sub
cmp
and
mov
cmp
leave
enter
popf
xor
test
jge
add
dec
or
add
mov
test
push
ret
add
inc
and
cmovl
add
xchg
jmp
mov
sub
mov
and
add
mov
add
sub
mov
paddsb
add
add
xchg
add
sub
les
and
stc
dec
add
add
aaa
stc
sub
repz
ins
mov
push
xor
sti
outs
mov
cmp
mov
dec
sbb
add
leave
add
in
dec
popf
pusha
sbb
test
add
fld
(bad)
pop
jge
mov
imul
leave
mov
mov
mov
adc
repz
call
fidiv
xlat
dec
fild
cmp
imul
add
mov
add
add
and
add
xor
push
add
mov
pushf
xchg
add
lea
lea
mov
jmp
in
add
jmp
add
mov
jge
cmps
adc
mov
inc
mov
mov
or
add
pop
jge
push
jns
add
jecxz
hlt
add
test
call
add
add
add
adc
add
xchg
pop
mov
cwde
and
add
dec
cmc
and
add
add
pushf
and
add
add
leave
and
jl
add
ins
frstor
push
cwde
mov
jmp
and
pop
fdiv
mov
addr16
add
(bad)
(bad)
rcl
ins
pusha
add
mov
jmp
push
scas
fisubr
xor
mov
pop
jge
stc
punpckhwd
add
pusha
pop
aam
add
stc
add
add
call
mov
push
ins
xchg
nop
add
add
out
retf
push
jl
sub
movs
mov
cmp
imul
stc
add
cmc
ror
add
add
enter
movs
popf
xor
dec
pop
pop
call
test
add
ror
mov
jmp
mov
jmp
(bad)
and
popa
add
enter
mov
jmp
inc
push
pop
pop
xchg
mov
add
dec
jmp
inc
ror
sub
add
add
movs
add
add
call
mov
add
popf
add
mov
mov
inc
cmc
int
popa
aad
add
jge
test
add
popa
leave
mov
aas
cdq
adc
jp
std
inc
test
nop
add
lea
add
add
icebp
cwde
add
hlt
lea
pop
pop
fld
xor
int3
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
call
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
call
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
add
call
jg
jmp
call
sub
call
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
call
add
call
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
add
call
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
call
jmp
mov
mov
call
mov
call
mov
call
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
call
mov
mov
mov
call
jmp
mov
mov
mov
mov
mov
call
cmp
cmove
mov
jmp
mov
mov
mov
call
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
sub
sub
add
call
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
call
jmp
mov
sub
pop
pop
pop
ret
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
mov
sub
add
mov
sub
add
add
call
mov
mov
mov
mov
call
sub
call
call
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
inc
and
mov
and
push
rol
mov
push
dec
mov
cmp
jmp
mov
mov
or
ror
dec
jns
in
loop
fucomip
call
mov
inc
mov
inc
mov
cmp
jmp
mov
dec
outs
and
inc
mov
ds
popa
push
add
sti
ja
jbe
ss
int
mov
ud1
add
add
mov
inc
jecxz
sub
dec
inc
inc
dec
pop
test
add
add
cmp
add
cwde
push
jmp
lahf
(bad)
sbb
add
ret
add
rcl
sbb
inc
xor
add
jmp
ja
push
adc
ror
(bad)
sbb
add
add
push
ja
push
jne
cmp
inc
(bad)
mov
popa
push
add
mov
inc
pusha
cmps
jg
jmp
mov
mov
sbb
inc
sub
inc
jecxz
pusha
stos
dec
(bad)
popa
push
jmp
mov
add
dec
push
aam
xor
xor
xchg
xor
bound
add
dec
inc
and
add
mov
je
jmp
cwde
push
in
cwde
pop
mov
or
inc
(bad)
mov
sub
mov
outs
test
xchg
adc
add
movs
mov
pusha
and
sbb
xor
add
xor
sub
jmp
jecxz
mov
clc
add
push
jecxz
push
and
icebp
mov
jb
pop
int3
test
add
add
mov
daa
add
int3
fadd
mov
jo
stos
add
jecxz
rcl
push
or
xchg
add
mov
push
(bad)
aaa
sub
ins
call
mov
mov
loop
aad
outs
aam
add
(bad)
fld
add
pop
cmp
sub
mov
mov
adc
jbe
rol
add
inc
cwde
push
mov
xchg
dec
add
push
inc
mov
and
inc
and
jmp
mov
xor
mov
mov
mov
mov
add
add
add
ficom
loop
out
sbb
std
or
mov
mov
sub
mov
push
xor
add
adc
inc
and
jmp
outs
sub
dec
pop
out
push
or
add
(bad)
and
mov
xor
sub
mov
push
inc
aaa
inc
push
cs
xchg
jns
add
add
inc
out
outs
cwde
push
jno
pushf
cld
(bad)
dec
pop
inc
add
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
les
call
mov
or
mov
sub
push
mov
mov
and
add
lods
add
inc
imul
inc
and
mov
mov
xlat
add
add
inc
push
pop
add
add
xlat
add
add
loop
add
dec
add
add
(bad)
rol
and
mov
ins
mul
cmp
mov
adc
mov
mov
xchg
jmp
mov
sbb
or
jg
jmp
mov
scas
cmp
push
sti
inc
and
stc
(bad)
push
lods
xor
jmp
mov
test
imul
pushf
mov
out
or
push
stc
inc
and
sub
mov
(bad)
xor
pop
add
adc
loope
ficom
jge
out
imul
add
jae
mov
mov
sbb
push
add
sbb
or
retf
and
cmps
(bad)
ret
sub
or
jne
sub
shr
rcr
xlat
pop
and
ret
inc
ror
cdq
sbb
add
jb
stc
inc
rcl
push
fucomip
js
xchg
sbb
test
std
adc
xchg
add
inc
and
sub
scas
push
push
sub
(bad)
jmp
add
jmp
jp
or
jae
and
inc
and
je
jmp
mov
es
(bad)
aas
pushf
cld
and
and
je
pop
sub
rol
mov
fst
or
or
test
add
into
add
add
stc
ss
sub
mov
and
add
mov
add
add
pushf
es
stos
aas
sbb
add
add
jmp
or
ja
push
xchg
popa
cld
cwde
push
and
or
daa
sub
push
fsubr
(bad)
aaa
mov
and
cmps
loop
add
(bad)
hlt
and
sub
mov
pop
sahf
retf
jmp
popf
inc
push
pusha
add
mov
shl
add
sub
inc
or
pop
sbb
fwait
cwde
adc
pop
retf
ins
imul
(bad)
addr16
stc
shl
and
mov
jge
add
jmp
mov
sahf
and
mov
inc
das
inc
push
add
call
sub
adc
fstp
mov
push
mov
xor
sub
pop
cmovne
xchg
dec
retf
pop
in
sbb
pop
inc
and
jmp
mov
cmc
ret
jbe
fbstp
sbb
cmp
push
sub
inc
add
push
pusha
mov
mov
sub
imul
inc
xchg
push
push
mov
add
add
pusha
imul
jmp
mov
mov
mov
add
mov
sub
add
jg
cmp
push
mov
pop
add
mov
add
adc
mov
xlat
dec
and
fs
jge
cdq
loopne
xor
jb
add
and
imul
or
mov
add
std
mov
in
add
add
gs
pop
pop
pop
pop
ret
lods
push
push
je
dec
and
(bad)
and
imul
aad
sub
mov
aad
fldcw
dec
and
xchg
popf
in
adc
cmc
rol
add
rol
cdq
mov
mov
adc
jo
add
out
jl
pop
sti
stos
add
add
push
call
call
add
mov
ins
mov
and
lahf
or
ss
jb
add
push
and
scas
adc
mov
inc
or
jmp
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
clc
sbb
mov
xchg
loopne
add
add
adc
mov
mov
mov
mov
and
mov
and
add
jmp
push
call
rol
mov
mov
and
mov
and
cli
add
inc
cmp
mov
add
(bad)
cmp
sbb
and
sbb
or
add
and
sub
adc
sub
sub
add
sti
jmp
mov
out
lods
rcr
jo
(bad)
sbb
add
test
mov
sub
test
and
sub
add
sti
jmp
mov
(bad)
ror
push
call
push
push
add
add
add
sub
mov
je
jmp
int
out
ret
and
pusha
push
adc
add
add
inc
jae
out
inc
and
je
jmp
mov
inc
test
adc
and
cvttps2pi
add
add
mov
test
mov
add
add
retf
mov
fist
jbe
push
mov
jg
jmp
or
sub
mov
jg
jmp
xchg
and
out
inc
xchg
cwde
arpl
and
nop
add
add
mov
and
add
shl
add
retf
xor
retf
inc
or
push
pop
push
add
adc
add
(bad)
and
sub
mov
jg
jmp
mov
sub
inc
inc
and
jg
adc
jmp
sub
mov
xchg
mov
push
cli
add
add
dec
aad
rep
(bad)
call
add
add
add
sbb
and
sub
or
popf
test
add
mov
add
xor
and
ret
mov
add
push
or
sub
mov
cmc
mov
pushf
add
and
sub
mov
je
imul
out
mov
mov
and
cmp
ja
add
jns
mov
out
lods
retf
enter
inc
and
je
ins
popa
xchg
add
sub
mov
adc
mov
push
dec
sti
jmp
pop
push
xchg
icebp
or
paddusw
xor
add
xchg
inc
pop
xchg
mov
fstp
inc
and
xchg
sub
mov
mov
(bad)
add
add
add
adc
cmp
imul
mov
mov
add
call
icebp
loope
sbb
pusha
push
pop
lods
pop
inc
cdq
add
jmp
dec
mov
inc
mov
mov
add
pop
xchg
out
mov
test
pop
add
xor
mov
add
mov
jmp
push
and
add
jmp
mov
mov
mov
imul
test
mov
jae
and
add
retf
add
jmp
pop
add
sbb
mov
push
ret
xchg
add
data16
sahf
and
mov
xchg
adc
aas
add
adc
xchg
mov
jmp
mov
in
inc
and
std
inc
jmp
popf
mov
and
(bad)
add
dec
imul
xor
add
add
outs
in
xor
add
sti
(bad)
outs
and
add
add
or
sti
fadd
add
call
sub
(bad)
mov
cmp
cmp
mov
and
popf
mov
cwde
add
mov
xor
retf
jmp
(bad)
shl
xchg
add
jmp
mov
add
or
inc
and
sub
jmp
movs
rol
add
add
test
test
xchg
push
fidivr
xor
add
and
sub
retf
sub
adc
adc
test
or
fsubr
mov
add
mov
mov
jmp
push
test
add
add
dec
inc
jmp
push
mov
push
push
push
and
add
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
imul
jecxz
add
mov
sbb
add
sub
sub
add
add
dec
xor
mov
mov
in
and
pop
add
jmp
sbb
add
add
daa
test
mov
add
add
add
test
push
add
push
jne
add
pop
add
add
(bad)
or
test
add
add
aaa
add
and
mov
add
jg
xchg
test
add
add
icebp
rol
add
mov
mov
std
adc
add
add
pmaxub
hlt
add
mov
pop
add
mov
adc
pop
adc
add
add
movs
add
sub
mov
jg
jmp
xlat
test
add
(bad)
ficom
test
add
sub
add
push
add
test
mov
adc
sbb
and
sbb
add
push
jge
add
hlt
push
ja
pop
loop
add
mov
add
add
mov
rol
mov
add
pop
fadd
sti
(bad)
xor
sbb
jmp
mov
add
sub
push
xchg
sbb
fist
rol
push
mov
ficomp
fs
xor
mov
enter
mov
mov
mov
mov
add
fimul
jmp
movs
test
add
add
xchg
mov
mov
pop
fimul
sbb
jmp
mov
sub
mov
xchg
xchg
xchg
pop
add
mov
mov
sub
mov
xor
mov
mov
jg
add
add
or
xor
iret
adc
pop
mov
push
(bad)
sub
push
xchg
pop
mov
ins
add
je
mov
xchg
add
push
add
adc
sbb
ror
push
sub
adc
jg
jmp
mov
add
retf
mov
fst
test
add
mov
or
add
fiadd
or
test
add
add
(bad)
jl
xchg
call
test
xor
rcl
shr
fwait
enter
aam
add
jg
fiadd
loopne
add
sbb
sub
mov
add
stos
push
aam
rol
jmp
xchg
test
ins
adc
add
scas
dec
sub
sbb
add
jg
jmp
nop
mov
mov
add
fldenv
add
push
jno
add
add
push
ins
sbb
add
jb
and
sub
lea
jl
pop
add
jmp
mov
sub
mov
jno
add
aas
push
add
mov
xchg
pop
scas
rol
adc
add
out
(bad)
mov
pop
add
add
inc
jge
add
cdq
push
adc
add
nop
or
sbb
add
add
mov
add
cmps
jo
add
add
sete
add
jmp
add
add
repz
mov
xor
xchg
or
call
test
add
shr
sbb
hlt
(bad)
cld
(bad)
ror
add
or
add
mov
ins
add
sbb
jmp
jle
movs
xchg
jmp
mov
sbb
sub
mov
and
das
add
cmp
add
add
loopne
rol
sub
mov
stos
push
add
xor
js
sbb
add
add
add
and
add
add
(bad)
into
ds
jmp
mov
call
sar
lods
hlt
add
xor
(bad)
cwde
or
xor
mov
mov
mov
or
repz
aaa
mov
xor
add
or
add
jg
pusha
add
rol
mov
call
pop
aad
fadd
add
fwait
ror
cld
(bad)
repz
mov
pop
add
or
push
movs
jg
pusha
add
rol
mov
jmp
xor
add
pushf
or
(bad)
jmp
nop
mov
ins
loop
pop
add
mov
add
movntps
add
xor
jecxz
and
add
add
mov
jg
repz
aaa
mov
sub
or
add
stos
(bad)
cmp
add
jmp
mov
sbb
add
pop
aad
pushf
das
add
sti
(bad)
jae
repz
aaa
loopne
add
sub
push
ret
jmp
add
divps
pop
add
xchg
call
rol
push
mov
mov
jg
jmp
mov
adc
sbb
repnz
addr16
cs
add
jae
xor
adc
and
add
adc
mov
add
(bad)
bound
ss
sbb
adc
mov
mov
add
add
add
push
xchg
xlat
stos
shr
lea
mov
add
ss
jmp
hlt
rol
cld
pop
xchg
and
sbb
jg
cmp
xchg
pop
mov
sub
xchg
test
add
add
outs
leave
add
add
add
add
add
mov
add
sub
add
add
xor
mov
xor
mov
cwde
xchg
add
push
mov
sbb
add
add
pop
add
ret
(bad)
mov
xchg
cmp
xor
push
add
fcomp
jp
test
add
add
ror
repz
aaa
mov
add
add
mov
jno
add
add
cmp
test
xor
adc
jbe
int
mov
jg
jmp
mov
jne
and
test
test
jo
jge
add
add
add
mov
aad
mov
add
hlt
repz
add
add
pop
push
mov
jl
add
lldt
jg
jmp
pop
test
ss
test
js
add
or
add
and
add
add
xchg
jecxz
add
add
verr
add
jmp
mov
sub
add
loope
and
sbb
add
pop
and
add
js
and
add
add
jmp
ja
add
mov
jmp
mov
inc
push
jns
pushf
adc
bndstx
hlt
add
sbb
mov
add
sub
add
je
jmp
mov
sub
adc
rcr
and
add
jmp
mov
add
fnstcw
pushf
mov
mov
movs
and
add
inc
jbe
add
test
sub
sbb
push
(bad)
repnz
add
push
xchg
pop
add
add
int
fist
sahf
add
psubq
stos
mov
jmp
mov
cmp
retf
aad
and
add
add
add
add
or
add
add
add
mov
jg
jmp
mov
add
cmps
jo
lds
add
jg
jmp
mov
test
fsub
lods
inc
add
add
pop
xor
add
xor
adc
add
mov
inc
add
add
(bad)
pop
jmp
nop
add
js
adc
mov
imul
rol
push
xchg
mov
or
add
rol
sete
add
jmp
add
sub
mov
jg
jmp
movs
test
ins
add
jl
mov
add
sysret
fcomp
add
jmp
mov
and
adc
sbb
out
lds
test
fwait
sbb
cmp
add
push
add
add
add
add
test
add
loopne
mov
ins
add
jg
mov
push
shr
push
pusha
mov
and
fwait
add
je
clc
rol
push
add
cs
retf
pop
push
ins
mov
je
jmp
nop
add
mov
pop
js
mov
sbb
add
add
mov
jg
and
icebp
add
sub
imul
sub
inc
pop
push
add
adc
cld
sub
in
mov
add
add
add
pop
pop
add
add
jne
pop
push
dec
mov
pop
xchg
jmp
das
test
add
mov
add
or
add
out
rol
mov
jno
xchg
pop
mov
mov
add
rcl
fild
test
mov
and
add
add
mov
unpckhps
push
xor
clc
stos
push
rcl
adc
test
mov
add
xchg
jmp
fisub
and
add
add
test
cmp
xchg
mov
repnz
pause
mov
ins
pop
add
or
add
add
push
xor
mov
xchg
sub
add
and
sbb
aaa
out
test
or
add
xor
add
add
popa
mov
ror
mov
cdq
call
call
sub
jp
aas
fild
add
out
fadd
mov
add
in
add
mov
and
dec
call
test
pop
add
clc
or
and
sub
add
push
test
shl
pop
ss
ins
mov
and
sbb
pop
pop
inc
xchg
mov
loopne
add
andnps
add
pushf
add
and
add
add
xchg
mov
sbb
test
push
add
test
sti
je
add
jmp
mov
add
sbb
int
mov
movzx
fld
push
jge
add
test
ss
cmp
imul
add
test
das
add
jmp
mov
sub
loope
and
add
add
adc
jmp
mov
mov
pop
add
sub
jp
and
aaa
loopne
push
mov
adc
add
add
lods
ins
add
adc
fdivr
mov
and
add
add
xchg
jne
add
jmp
xlat
test
cwde
add
arpl
rol
ltr
or
add
leave
jnp
add
and
mov
add
or
test
add
xor
add
add
xchg
add
push
mov
xor
add
or
mov
ins
add
test
sub
add
je
jmp
xchg
mov
ins
add
add
push
inc
add
stos
sar
add
repz
repnz
add
loopne
test
ins
mov
sbb
fsub
and
add
add
xchg
dec
fidiv
js
add
add
push
add
mov
je
repnz
test
ins
add
add
jg
test
push
movs
add
xor
fwait
add
xchg
adc
push
shr
movs
mov
repz
aam
add
or
ins
add
add
mov
test
fiadd
das
add
add
xchg
pop
sub
add
aas
stos
add
pop
cmp
adc
add
mov
sub
cdq
push
adc
test
add
jns
add
mov
add
jge
and
repz
je
jmp
mov
call
test
mov
add
push
xchg
ins
add
add
and
pop
cs
mov
mov
je
jmp
mov
movs
add
test
xchg
call
adc
call
push
add
cs
fcom
add
pop
ss
inc
add
add
mov
sub
mov
paddsb
xchg
sbb
jmp
mov
js
add
(bad)
and
mov
test
add
jmp
mov
sub
mov
prefetchw
add
pop
add
add
add
je
jo
add
repz
add
add
mov
ja
add
mov
and
je
fnstsw
add
add
adc
sub
mov
wbinvd
mov
add
jmp
imul
mov
mov
shrd
and
add
test
add
pop
ror
test
sbb
add
xlat
test
cwde
(bad)
repz
test
cmp
mov
(bad)
aaa
xchg
add
jmp
jl
shl
adc
cmp
add
add
pop
mov
add
mov
or
adc
add
xor
add
mov
push
push
or
jmp
je
jmp
mov
sub
fcom
js
je
jmp
nop
mov
ins
pop
mov
cmps
mov
add
test
or
xchg
call
rol
mov
push
stos
loop
add
add
mov
mov
je
xchg
sub
push
movs
add
inc
cmp
in
mov
cmp
xchg
mov
cmc
add
add
loopne
ret
jns
push
setg
or
test
mov
movs
mov
shl
push
xchg
inc
push
sub
aad
or
add
adc
(bad)
cmc
outs
mov
mov
aaa
add
adc
add
inc
sub
in
mov
push
push
jle
pop
add
(bad)
hlt
add
add
aaa
int
mul
ins
and
psrlw
mov
rol
mov
call
xchg
pop
inc
jne
fwait
test
add
nop
test
mov
add
add
and
lods
int
push
add
add
ins
add
add
inc
test
jp
inc
dec
and
adc
jmp
mov
mov
pop
add
sub
jp
adc
push
test
test
add
movs
add
mov
add
add
adc
mov
aad
jno
mov
mov
add
sbb
aaa
test
add
mov
pop
inc
adc
call
mov
sbb
lahf
mov
movs
pusha
test
mov
add
add
jg
adc
cmp
andnps
mov
jmp
(bad)
adc
add
int
inc
xchg
cmc
jo
xchg
pop
mov
adc
add
add
add
jbe
push
add
jns
pushf
fwait
mov
test
push
cwde
add
xor
dec
cmp
mov
rcl
pop
mov
add
cs
jle
mov
mov
imul
sub
sbb
add
add
add
adc
ret
inc
nop
sbb
add
fs
sti
add
mov
imul
mov
repz
test
mov
adc
sub
stc
call
mov
ror
cs
add
and
sbb
loopne
loope
add
mov
pushf
(bad)
lock
fnstsw
pusha
add
add
enter
mov
mov
mov
cld
add
xor
mov
mov
pop
ss
add
inc
inc
mov
add
mov
mov
(bad)
pushf
push
popa
rol
push
sub
retf
push
or
stos
loop
add
add
fadd
push
mov
sbb
xchg
add
xor
popa
(bad)
or
shr
xchg
mul
aad
or
or
add
popa
lock
test
test
add
add
add
jmp
xchg
test
add
add
add
and
xchg
mov
mov
xchg
pop
add
and
add
pop
mov
cmp
setne
xchg
xor
add
sar
call
mov
mov
mov
pop
add
jmp
mov
mov
fiadd
test
mov
dec
add
mov
xchg
add
and
ss
xchg
call
test
add
add
dec
pop
xchg
pop
mov
inc
add
les
fsub
mov
sbb
pop
add
mov
mov
pop
xchg
and
add
xor
ret
inc
rcl
cmp
add
xor
sbb
test
xchg
add
xlat
mov
repz
mov
mov
pop
add
(bad)
rcl
mov
xchg
test
xchg
add
shl
mov
add
test
add
add
mov
adc
mov
jmp
dec
inc
test
jp
ja
jo
add
jmp
pop
inc
jl
xor
lahf
and
add
add
test
bound
es
mov
out
ret
inc
rcr
add
jnp
add
mov
mov
add
mov
mov
call
pop
mov
pop
test
mov
add
jecxz
mov
xor
cwde
test
nop
add
add
test
add
add
add
cmc
add
and
add
add
test
nop
pop
add
xchg
stos
shr
push
mov
mov
js
pushf
sbb
test
fimul
jne
add
ret
add
xchg
adc
test
jmp
mov
mov
mov
test
psrlw
pop
repz
mov
xor
xor
and
(bad)
(bad)
inc
add
repnz
push
xlat
mov
and
fiadd
mov
mov
pop
add
jmp
mov
add
and
add
add
ins
add
adc
or
add
add
mov
rol
mov
loope
add
dec
test
mov
arpl
pop
sub
test
adc
add
inc
imul
jae
mov
mov
jmp
mov
mov
mov
div
mov
pop
ror
movs
pusha
sti
aad
xor
fdivr
add
mov
add
mov
je
adc
mov
or
or
or
add
push
push
sub
add
add
xor
mov
jl
mov
dec
test
mov
into
imul
push
and
add
sbb
xchg
adc
sub
add
hlt
jmp
mov
(bad)
mov
call
(bad)
(bad)
dec
add
jmp
mov
or
add
ror
cs
mov
jp
aas
mov
inc
lods
adc
loopne
adc
das
pop
add
add
fwait
xchg
and
shl
mov
call
add
xchg
mov
mov
es
xor
neg
add
add
and
call
mov
adc
mov
or
push
movs
add
mov
shl
jmp
fild
scas
imul
(bad)
repz
mov
push
jecxz
mov
add
jmp
mov
fild
adc
add
mov
(bad)
(bad)
test
mov
jg
add
mov
add
mov
jmp
(bad)
stc
inc
mov
mov
jmp
pop
(bad)
jo
add
ins
inc
add
sub
fmul
fistp
mov
sbb
ss
add
sbb
add
cs
and
(bad)
repz
sbb
add
push
mov
cmc
mov
adc
add
adc
push
xchg
in
push
in
dec
mov
(bad)
jns
and
xor
mov
inc
fimul
jg
mov
mov
jae
add
add
test
adc
add
xor
add
mov
mov
mov
fstp
sub
(bad)
(bad)
push
retf
xchg
add
jge
push
arpl
stos
jge
(bad)
js
add
add
test
out
(bad)
jmp
xchg
adc
add
add
jbe
outs
add
add
mov
fidivr
sbb
dec
add
mov
add
add
rol
jmp
mov
(bad)
hlt
outs
inc
ins
dec
pop
adc
add
addr16
xchg
add
sbb
test
loop
add
or
xchg
ss
mov
adc
push
and
add
loope
imul
repz
xor
xchg
add
mov
push
add
mov
call
shl
sbb
and
add
jg
mov
stc
dec
ret
add
cmc
jle
push
cmp
add
add
arpl
add
mov
add
add
mov
add
add
jg
xchg
add
add
mov
mov
cmp
add
adc
xor
addr16
add
mov
mov
add
pushf
add
sbb
mov
sub
push
in
cdq
test
add
add
push
and
add
(bad)
das
xor
add
test
and
fnstenv
sbb
test
add
pop
call
or
push
(bad)
and
dec
dec
fistp
sbb
xchg
and
add
inc
hlt
retf
(bad)
add
(bad)
lahf
and
add
loopne
aas
bnd
fistp
test
mov
das
mov
imul
and
rcl
add
add
xlat
call
xchg
mov
js
ss
lahf
and
add
add
mov
add
push
adc
xchg
call
xchg
and
rcl
movs
js
mov
fisubr
hlt
add
and
add
add
add
add
test
loop
fldenv
in
jmp
mov
and
adc
rol
mov
mov
add
nop
add
add
stos
and
add
hlt
mov
jmp
mov
add
mov
mov
shrd
push
add
mov
fbstp
add
repnz
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
mov
or
sar
mov
add
add
add
add
dec
mov
jp
add
movs
and
fwait
add
add
add
pop
add
add
js
mov
and
add
or
add
test
jp
add
and
and
call
and
mov
or
in
rcr
(bad)
and
add
add
test
add
iret
and
add
mov
fadd
mov
and
adc
add
test
jns
call
xchg
add
and
and
pop
add
add
setp
add
dec
imul
and
add
add
mov
call
push
jmp
repz
add
mov
call
and
add
stc
dec
push
xchg
add
xchg
fs
and
adc
add
sar
xchg
dec
add
add
(bad)
ds
cdq
mov
add
add
daa
mov
push
and
add
add
add
jmp
mov
ret
jne
or
add
dec
int
das
mov
js
sub
mov
data16
push
ret
xor
add
push
inc
and
xor
test
jns
mov
(bad)
je
adc
add
inc
adc
adc
push
or
mov
push
test
adc
shl
add
xor
mov
das
(bad)
add
das
mov
sar
and
pop
add
xchg
rol
shl
add
add
mov
jmp
mov
or
add
jae
test
mov
add
call
imul
and
add
sub
inc
movs
and
call
mov
add
add
fbld
add
jb
mov
scas
(bad)
and
test
mov
jp
shr
sub
add
test
jmp
mov
sbb
add
add
(bad)
scas
add
imul
add
xor
into
add
mov
dec
gs
fiadd
mov
adc
imul
popf
adc
mov
jg
jmp
mov
and
mov
int
add
add
add
mov
dec
add
add
add
jg
jmp
mov
ja
cmp
imul
pop
test
add
jg
(bad)
mov
pop
repz
adc
cdq
lea
jb
or
xor
call
add
and
add
adc
or
add
pop
imul
mov
add
fs
adc
jg
pop
pop
add
add
add
sub
jg
out
add
xchg
pmaddwd
int
add
call
inc
push
add
jbe
jae
jge
test
add
or
push
outs
add
add
add
imul
mov
retf
and
add
add
add
gs
pop
add
ss
or
push
lds
out
xor
into
and
add
sar
jns
add
pushf
test
vmwrite
ret
add
jmp
mov
sub
mov
pminsw
add
pop
pop
or
adc
push
xchg
movs
mov
test
add
add
adc
mov
add
add
and
add
sub
pushf
sbb
ret
cmp
add
pop
js
sub
pushf
test
(bad)
sub
ret
add
xor
push
inc
add
iret
sub
mov
jg
jmp
ror
lea
jb
movs
xchg
add
inc
inc
add
add
mov
add
add
sub
icebp
ss
add
add
test
imul
add
mov
add
dec
loopne
push
push
loop
test
je
xchg
mov
or
sahf
test
add
cdq
lea
or
and
jp
add
movs
cmp
das
arpl
push
add
cld
and
pop
add
mov
(bad)
and
mov
fs
je
jmp
(bad)
and
add
sbb
add
cmps
imul
xor
fs
mov
pop
mov
psrlq
js
mov
push
cdq
mov
ret
xor
bound
test
das
arpl
push
add
test
jns
pop
mov
lahf
fisttp
je
test
add
add
movs
and
fwait
das
add
push
mov
pop
ret
and
loope
add
push
in
mov
cmovnp
(bad)
sub
inc
ja
js
lahf
dec
outs
pop
lds
mov
call
inc
add
iret
mov
xor
pop
fbld
add
(bad)
pop
cdq
add
test
add
ret
jae
iret
repz
pusha
shld
add
(bad)
inc
add
out
test
pop
js
xor
push
and
setno
add
jmp
loop
shl
ret
xor
mov
in
mov
bts
add
add
(bad)
pop
xchg
add
cmp
xchg
jmp
(bad)
mov
pop
add
add
dec
add
add
add
mov
and
paddb
pop
or
imul
mov
lahf
mov
loopne
add
arpl
test
jns
pop
sub
mov
scas
in
pop
test
rol
add
mov
in
sub
inc
push
mov
pop
pop
or
mov
lea
into
mov
inc
paddd
add
add
mov
mov
stc
jb
addr16
mov
je
sub
jp
out
test
add
call
icebp
mul
push
mov
arpl
shl
add
add
mov
loopne
and
mov
out
test
add
add
jb
mov
and
stc
inc
cmp
add
jmp
mov
inc
and
iret
add
mov
je
jmp
mov
xchg
jp
add
sub
sub
je
xchg
xchg
add
add
add
add
jbe
mov
jg
ja
add
add
mov
lea
inc
in
dec
jne
and
adc
shl
add
pop
add
retf
mov
and
pmaxub
or
add
add
imul
sub
dec
sbb
and
paddd
popa
add
leave
mov
call
add
jbe
cmc
les
inc
and
je
jmp
mov
add
dec
inc
adc
add
fs
mov
and
add
add
mov
push
cld
mov
add
aaa
add
and
add
inc
shr
add
and
add
push
jmp
ror
mov
shl
mov
add
test
iret
add
and
add
out
outs
or
adc
dec
add
push
mov
jecxz
mov
out
hlt
cmp
cdq
mov
dec
mov
mov
add
push
add
add
mov
mov
dec
mov
mov
push
xor
push
into
add
xchg
mov
scas
stc
(bad)
aas
add
xchg
cdq
clc
push
add
pushf
and
cwde
add
xor
jp
mov
xor
hlt
shl
es
adc
cdq
test
pmulhw
xor
add
or
dec
xor
add
mov
test
ror
add
mov
jns
cmp
xchg
and
add
add
mov
in
pop
inc
add
neg
add
add
shl
repz
into
add
movzx
scas
jo
fs
pop
ja
ror
add
dec
push
add
inc
and
xchg
jp
dec
fcom
add
add
mov
add
add
mov
(bad)
fisub
adc
add
or
mov
ret
adc
add
mov
push
inc
stos
mov
mov
jg
jns
pop
add
test
dec
mov
cmp
add
add
add
cmps
push
and
push
add
test
ror
push
fcomp
and
inc
add
imul
ret
jp
fs
dec
and
fwait
das
add
sub
pop
mov
ror
xchg
add
jmp
mov
mov
cmp
and
add
shl
icebp
jae
jns
pop
adc
add
mov
sub
mov
add
and
cmovne
mov
jae
jns
mov
aad
adc
or
add
inc
test
fwait
add
mov
gs
and
add
pushf
test
loop
out
add
add
and
fiadd
add
jbe
pop
or
cmps
add
rol
cmp
and
pop
add
jno
loope
shr
ret
sbb
add
fs
cwde
das
add
loop
and
or
or
mov
mov
lea
(bad)
push
mov
and
add
test
add
ficomp
and
mov
mov
jnp
iret
stos
mov
adc
add
(bad)
jno
mov
mov
xchg
rol
mov
and
add
jmp
mov
jmp
mov
mov
mov
adc
add
call
js
mov
inc
jmp
call
(bad)
loope
and
js
dec
sahf
or
jmp
sbb
adc
jmp
mov
xor
add
mov
stc
pop
add
add
retf
mov
mov
and
add
ret
add
xor
and
into
and
mov
add
mov
jmp
mov
test
jae
stos
jmp
mov
cmps
test
mov
mov
mov
or
jp
jo
add
mov
jmp
icebp
test
and
add
dec
hlt
aam
or
cwde
mov
and
pop
or
add
add
jp
add
mov
xor
call
mov
push
and
or
ss
pop
or
add
imul
xchg
and
add
add
inc
and
add
call
add
mov
adc
xchg
xchg
inc
pop
add
add
mov
imul
add
test
push
add
inc
add
push
std
sbb
cmps
jmp
sahf
sbb
test
push
add
mov
add
push
movs
(bad)
mov
add
test
add
pop
ss
fucomp
or
add
mov
mov
dec
retf
mov
push
add
jle
add
adc
cwde
mov
bnd
add
add
(bad)
mov
or
pop
test
add
add
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
call
mov
mov
mov
call
call
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
movsx
or
mov
add
call
mov
shl
mov
mov
jmp
mov
call
jmp
mov
mov
add
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
add
mov
mov
jmp
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
sub
mov
mov
mov
call
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
jmp
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
cmp
setb
and
mov
mov
jmp
mov
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
call
mov
mov
mov
mov
add
pop
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
push
mov
push
sub
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
sub
call
call
jg
jmp
call
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
add
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
call
jmp
mov
call
mov
call
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
call
call
mov
call
mov
call
mov
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
call
mov
jmp
mov
mov
mov
call
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
add
call
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
jmp
mov
jmp
mov
call
mov
mov
call
add
pop
pop
ret
mov
jmp
mov
mov
call
call
mov
add
call
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
jnp
add
add
mov
sbb
and
pop
and
inc
push
and
add
xor
sbb
loope
and
inc
and
call
mov
jbe
fs
inc
and
mov
and
pop
and
pop
fdiv
add
lea
aad
enter
pop
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
mov
call
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
(bad)
push
lahf
cmps
cmps
pushf
mov
jp
add
in
(bad)
lea
test
pop
add
in
mov
push
add
xor
and
xchg
add
imul
and
fwait
mov
das
xchg
pushf
int3
pop
pop
dec
add
dec
and
sub
xor
and
into
add
lea
jmp
pop
and
add
cmps
pushf
cmp
stos
push
add
lahf
jnp
imul
and
shl
xchg
or
fwait
add
mov
push
add
mov
cmp
inc
and
mov
loope
and
xchg
add
pop
pushf
test
mov
dec
add
sar
jl
add
dec
sub
call
addr16
fsub
or
add
mov
call
mov
lods
add
(bad)
push
jl
push
add
int
push
mov
std
dec
add
mov
add
add
add
in
or
push
fwait
dec
push
push
std
dec
mov
(bad)
push
jl
add
add
inc
and
es
push
std
push
add
inc
and
iret
add
add
inc
cmc
test
jae
push
std
jmp
adc
mov
push
int
pop
jmp
and
out
ret
repz
std
push
scas
mov
into
add
pop
movs
and
sub
add
fwait
add
(bad)
loop
or
aam
std
dec
push
int
sub
sub
mov
xlat
jmp
lds
mov
std
inc
test
adc
add
jmp
sub
and
lahf
add
mov
and
add
add
dec
jmp
and
and
mov
mov
add
inc
and
sbb
call
mov
add
inc
cmp
mov
ret
pushf
and
mov
and
daa
dec
dec
(bad)
jmp
add
dec
add
(bad)
pusha
xor
add
dec
and
add
pop
call
lea
dec
mov
sar
add
jnp
adc
add
add
add
mov
or
push
mov
mov
mov
add
(bad)
test
pop
sub
inc
push
retf
and
add
es
fs
test
rol
add
mov
movaps
adc
mov
add
or
dec
mov
dec
sub
and
add
mov
iret
ror
outs
aam
adc
sub
sar
mov
push
add
(bad)
and
add
out
sub
in
add
ret
shr
mov
fisub
dec
or
adc
add
add
xchg
mov
pop
ret
movs
add
push
add
add
pop
pop
sub
pop
adc
jmp
mov
xor
and
mov
add
add
xchg
iret
cmp
add
pop
add
in
xor
add
ffreep
push
int
out
sub
add
mov
add
movs
out
mov
add
ucomiss
rol
add
fwait
add
add
add
cmp
add
push
jg
out
sub
pop
in
xor
add
sbb
scas
out
rol
add
cmps
adc
mov
adc
mov
rol
add
mov
sub
add
dec
test
xchg
ins
xchg
sub
dec
mov
aam
jg
jmp
mov
rcl
(bad)
jge
loopne
sbb
test
mov
add
packsswb
add
jmp
cmp
add
xchg
loop
int
or
add
fwait
test
add
push
add
jnp
or
rcl
and
mov
fst
add
rol
aam
pop
inc
mov
and
add
add
xlat
pop
add
add
int
pop
add
add
xchg
div
or
add
fimul
jmp
mov
add
adc
pop
add
test
and
int
or
add
mov
xadd
add
std
mov
jg
push
add
and
mov
jmp
mov
add
(bad)
scas
mov
movs
add
into
add
cld
pop
inc
mov
mov
test
mov
push
mov
sub
mov
add
add
(bad)
add
add
pop
sub
pop
mov
xchg
mov
scas
and
xchg
add
jg
jb
add
cmps
mov
add
lods
test
pop
add
pop
lock
mov
pop
add
sub
test
add
mov
or
xor
and
into
add
fimul
add
and
add
dec
push
xor
test
add
pshufw
int
out
add
sub
cmp
rol
add
push
scas
push
outs
xor
mov
into
add
fisubr
outs
add
add
mov
sub
sar
sbb
int
and
add
mov
jge
add
mov
mov
jg
dec
add
adc
add
pop
rol
push
xchg
js
test
push
sub
jg
jmp
mov
and
sub
xchg
loop
cmp
pop
pop
add
add
pop
add
add
add
mov
and
push
int
sub
aaa
test
cmp
add
rdmsr
fldcw
xchg
add
rol
mov
pop
cmps
add
mov
adc
pop
lods
test
pusha
inc
add
push
pop
add
lds
pop
in
mov
movs
add
nop
(bad)
in
mov
add
scas
(bad)
pop
push
cmps
adc
pop
pop
jmp
xchg
test
mov
add
stos
test
add
jmp
pop
test
add
mov
daa
test
mov
cmp
pop
add
test
push
add
mov
cmps
test
rol
add
sub
and
sub
xchg
cmovnp
or
fwait
add
and
adc
mov
in
mov
aas
lods
mov
add
pop
and
add
neg
add
mov
and
pop
add
xchg
push
int
mov
sub
mov
and
aam
iret
add
dec
add
add
dec
adc
add
sub
mov
and
test
loop
add
cmps
test
add
in
cmp
test
pushf
test
or
mov
fwait
mov
and
add
add
mov
and
(bad)
push
add
test
add
add
fiadd
pop
add
ret
stos
pop
sub
test
test
add
jb
adc
xor
add
bound
xor
add
sub
test
or
movs
mov
add
add
xor
test
call
and
jmp
rol
sub
mov
setnp
add
mov
and
into
add
sub
mov
cmps
cmps
add
test
push
pop
jmp
fisttp
rol
add
mov
cdq
rcl
pop
movs
add
cmp
fwait
cmps
sub
add
jne
sub
sub
and
pop
in
je
sub
cmps
add
xchg
iret
add
loope
and
fwait
cmps
cmps
setne
add
inc
fild
sub
mov
in
add
add
test
mov
add
mov
mov
add
and
add
cmps
test
add
loopne
add
aam
or
add
add
test
pop
in
add
cmp
lea
test
add
add
pop
or
das
and
mov
sub
add
mov
pop
dec
int
sub
inc
and
add
mov
add
jmp
inc
push
test
imul
or
repz
xchg
and
mov
aam
pop
add
mov
push
int
test
fild
add
xchg
lds
iret
mov
je
jp
add
add
rol
aam
sbb
or
add
setb
add
push
sqrtps
add
add
aad
scas
and
add
add
dec
cmp
add
jmp
adc
sub
lahf
test
call
or
jmp
mov
sub
loope
and
fwait
add
je
clc
or
add
rol
sub
mov
nop
add
int
test
in
add
movs
mov
and
xchg
iret
ror
and
sub
mov
xchg
test
jle
add
sub
xor
and
xchg
iret
add
test
push
add
adc
mov
jns
test
add
pop
and
push
cmp
ret
scas
mov
add
add
lds
fisttp
add
je
jmp
mov
(bad)
jge
xor
mov
test
lods
pop
in
mov
xchg
add
shl
or
add
mov
mov
cmp
push
mov
aam
in
mov
mov
into
rol
mov
pop
or
mov
test
call
call
scas
in
pop
mov
add
into
cmp
mov
dec
mov
add
xchg
push
mov
jmp
mov
jmp
xchg
ret
add
pushf
inc
push
mov
clc
add
add
pop
and
cmps
adc
mov
or
mov
mov
mov
lea
(bad)
add
inc
and
mov
inc
and
or
fwait
add
add
mov
push
(bad)
loope
call
lea
mov
mov
ret
and
add
add
inc
and
cwde
add
push
adc
mov
add
push
ror
cwde
int
add
fiadd
add
lea
mov
test
add
add
clc
or
into
add
lea
(bad)
pusha
add
push
adc
adc
fst
mov
add
call
mov
shl
add
push
mov
lea
in
add
add
lds
xor
mov
cmps
sbb
adc
scas
add
add
mov
sub
xchg
sub
adc
and
(bad)
mov
out
and
mov
fild
out
aas
sub
and
imul
xchg
dec
add
mov
aad
test
and
add
mov
pop
mov
je
je
iret
pop
add
retf
add
loope
mov
in
mov
aas
add
ss
add
iret
pop
or
mov
lahf
mov
cwde
int3
and
lods
push
xor
mov
call
lea
add
jp
or
add
xchg
daa
push
pop
add
mov
mov
sub
sbb
adc
stos
xor
test
dec
call
mov
add
in
add
psubd
dec
sub
jmp
mov
clc
pusha
push
and
aad
je
adc
add
add
lea
movs
xor
sub
mov
das
jmp
lods
jl
or
mov
sbb
add
mov
movs
xchg
pop
push
jns
sub
xchg
iret
setge
mov
jmp
push
cmc
daa
pop
sub
add
mov
mov
test
add
mov
clc
xchg
add
int3
mov
popf
add
add
mov
add
jp
add
movntq
mov
mov
or
add
sub
stos
out
xchg
in
sbb
add
add
(bad)
movs
dec
sbb
retf
hlt
xchg
dec
add
pop
push
inc
mov
add
add
pusha
and
add
mov
add
mov
or
add
cmp
xchg
sub
xchg
hlt
xchg
dec
add
mov
adc
pop
inc
fxch
and
push
and
mov
gs
call
xlat
cli
add
mov
mov
jne
add
add
dec
pop
adc
rcr
mov
std
push
int
xor
mov
call
jp
and
inc
sub
shl
and
add
cmps
adc
mov
push
mov
test
add
movs
xchg
and
in
add
add
xchg
dec
add
sbb
xchg
jae
pop
add
cmp
popa
test
mov
sub
(bad)
call
mov
mov
popa
or
stc
mov
jmp
shl
(bad)
nop
and
add
pushf
or
push
and
inc
add
inc
inc
and
add
push
int
inc
and
add
sub
mov
and
dec
push
or
add
sbb
cmps
cmps
add
push
hlt
retf
and
add
pop
jmp
(bad)
dec
and
add
add
outs
jmp
jmp
test
adc
sub
cs
mov
call
push
in
or
mov
cmp
ret
movs
xchg
enter
ret
add
sub
test
add
add
jp
mov
ins
aam
mov
mov
test
add
mov
rcr
sti
add
pop
(bad)
push
add
mov
and
ret
pop
(bad)
jmp
retf
rol
mov
dec
add
sub
and
mov
add
fild
add
int
push
and
jmp
and
mov
loope
push
mov
repz
inc
pop
test
fiadd
fwait
das
or
mov
and
push
xchg
add
popf
call
xchg
jmp
lea
test
add
add
inc
test
add
adc
das
push
and
xor
add
and
add
mov
mov
xchg
push
in
add
adc
mov
mov
push
lea
xor
xor
pop
fist
and
jmp
cmp
inc
ret
outs
mov
add
rol
inc
dec
rcr
xor
dec
mov
call
mov
inc
xchg
mov
adc
in
add
mov
sub
add
push
test
cwde
jno
mov
add
test
es
pop
add
add
test
jmp
out
js
inc
add
lea
aad
sub
sbb
inc
add
cs
test
cmps
adc
and
add
retf
dec
add
out
mov
in
mov
and
fmul
mov
dec
cmp
pop
jle
popf
test
(bad)
nop
inc
call
shl
add
adc
aaa
push
and
add
cld
xchg
add
mov
clc
xchg
dec
add
aam
aam
cmps
add
out
cmps
inc
dec
add
push
rcr
mov
xchg
and
xchg
jl
mov
mov
mov
push
mov
mov
test
add
cmps
mov
lea
jb
and
iret
pop
add
enter
add
mov
bound
inc
clc
sub
mov
push
in
adc
add
aam
inc
and
mov
mov
call
pop
mov
and
in
call
add
dec
retf
and
add
jmp
(bad)
cmp
clc
movs
add
add
add
sar
add
mov
dec
mov
add
jg
xor
add
add
call
add
push
add
sub
in
adc
rol
mov
pop
pop
and
add
add
mov
mov
mov
inc
fldcw
mov
add
fwait
and
add
sub
xcrypt-ofb
cmps
jmp
mov
mov
cmp
push
mov
jmp
add
cmp
loope
xchg
mov
xor
and
add
test
add
aam
xchg
popa
outs
xor
push
add
cmps
pop
call
(bad)
paddusw
rol
mov
addr16
test
jecxz
push
add
add
mov
movs
dec
dec
add
inc
in
mov
add
sub
xchg
and
cmp
add
add
mov
sub
add
inc
jg
inc
and
movs
mov
xchg
add
add
add
mov
mov
call
xchg
rcl
lahf
(bad)
and
rcr
repnz
sub
imul
add
add
xchg
or
nop
dec
add
jne
in
das
sbb
cmp
or
mov
mov
adc
add
cmovne
mov
mov
push
int
xchg
pop
in
add
mov
stos
add
add
mov
add
pop
ins
test
add
gs
pop
pop
pop
pop
push
(bad)
dec
cmc
pop
add
add
push
std
cmp
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
call
call
jmp
mov
jmp
mov
add
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
push
mov
push
sub
mov
call
mov
sub
call
call
jg
jmp
call
add
call
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
mov
imul
add
cmp
cmovne
mov
jmp
lea
mov
mov
imul
add
mov
sub
mov
mov
mov
mov
call
lea
mov
imul
add
mov
call
call
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
jmp
mov
jmp
lea
pop
pop
ret
mov
call
mov
mov
mov
jmp
mov
mov
add
mov
mov
mov
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
gs
add
fiadd
mov
and
(bad)
pop
dec
adc
pop
add
add
mov
jo
cli
js
sub
mov
mov
jbe
add
pop
and
add
dec
push
(bad)
and
add
jmp
mov
dec
pop
dec
arpl
sub
add
test
add
int3
or
outs
ja
and
dec
add
rcl
imul
cli
xor
add
add
add
add
jne
ins
fs
add
cmp
adc
add
mov
cld
add
dec
add
mov
cmp
retf
add
mov
fdiv
dec
sub
cmp
hlt
test
or
add
mov
inc
sub
or
dec
movs
aad
pop
and
jmp
mov
arpl
dec
pop
xchg
mov
push
push
cmps
mov
add
xchg
or
add
add
push
cdq
retf
jle
mov
fcom
add
push
push
add
add
add
add
pop
je
add
sub
mov
cwde
add
and
jmp
mov
stos
xor
sub
hlt
xor
fild
add
(bad)
dec
add
aam
add
dec
pop
mov
add
call
inc
fild
add
mov
es
push
jmp
mov
sub
rol
shld
add
add
jo
push
fild
add
mov
je
jmp
addr16
pop
int3
and
pop
add
scas
repz
test
cmp
mov
repz
sti
dec
fsubrp
add
add
mov
add
fmul
mov
pusha
js
inc
pop
add
dec
or
sub
test
add
add
sbb
push
add
(bad)
cmp
add
jmp
add
pop
int3
and
pop
add
add
fst
add
add
test
or
or
add
add
cwde
jecxz
xchg
jbe
push
jmp
cld
add
push
mov
jmp
mov
je
add
sub
mov
(bad)
mov
add
jmp
in
fsub
push
adc
mov
add
and
add
adc
add
mov
je
add
jns
push
pop
push
add
add
jmp
or
add
xchg
pop
aam
rol
sub
mov
push
je
dec
fiadd
jmp
mov
push
sbb
ss
xchg
fild
outs
repz
fisttp
(bad)
sub
mov
sub
and
jg
jmp
mov
sub
mov
je
ret
sbb
and
sbb
fld
shrd
outs
add
mov
pop
neg
adc
mov
add
fidiv
add
retf
add
push
jmp
mov
fcomp
add
mov
add
shl
add
add
push
add
add
sub
mov
aad
outs
push
outs
add
cld
aam
dec
mov
sub
mov
jg
adc
push
mov
je
push
add
stos
test
hlt
add
add
(bad)
std
add
dec
pop
cs
fs
ror
lds
add
ret
push
add
jmp
mov
and
add
cld
push
rol
call
mov
(bad)
add
add
sti
dec
push
mov
je
push
sbb
mov
fisttp
jmp
out
test
jne
add
or
sub
lods
adc
add
xchg
add
dec
rol
sub
cmp
inc
(bad)
fstp
add
add
fisubr
pop
fisttp
int3
and
add
cs
mov
sti
add
lds
pop
add
rcr
mov
fcmovu
add
jae
dec
add
add
add
cmp
cmp
and
mov
add
or
cld
cmp
mov
push
inc
mov
iret
mov
add
int
add
jmp
test
es
fisubr
shld
mov
(bad)
fild
add
jmp
jo
and
xor
add
and
popf
and
add
fimul
(bad)
aam
add
add
test
add
add
xlat
cmps
or
mov
imul
cld
add
add
xor
in
mov
and
add
add
add
mov
rcl
pop
xchg
pop
jb
cli
mov
sub
pop
fcmovnb
and
add
fisubr
aam
test
add
add
stos
in
js
mov
sar
add
push
push
sbb
mov
das
xor
adc
cld
add
pop
and
fiadd
sub
add
test
add
sti
or
add
and
add
mov
sub
mov
sar
mov
mov
add
cmp
out
cli
lock
add
jae
add
add
dec
add
add
add
sub
nop
test
movs
add
outs
(bad)
adc
dec
jmp
mov
sub
mov
mov
pop
push
add
add
add
mov
cld
sub
mov
add
(bad)
push
std
add
jmp
push
test
sub
push
jns
sub
stos
xchg
cwde
outs
add
fcmovnb
(bad)
add
jmp
mov
add
jne
and
inc
push
pushf
xor
and
add
fsub
cmp
movs
repz
add
pushf
add
add
sti
dec
fiadd
mov
sub
mov
je
xor
aam
mov
jle
xor
add
movs
mov
and
fidiv
add
and
add
fsub
push
(bad)
out
test
add
mov
test
add
call
mov
jns
bound
sbb
add
push
jno
add
jmp
mov
add
(bad)
pop
jmp
cvtps2pd
add
add
and
fisubr
lea
push
sub
push
or
test
add
add
mov
cmp
add
sbb
inc
and
je
jmp
rol
pop
add
inc
fbstp
test
add
push
add
mov
add
dec
push
sub
mov
clc
sub
add
jno
sub
cli
dec
add
popf
les
fld
setge
add
xor
(bad)
aam
shr
sub
inc
and
jne
fcom
push
push
sbb
and
add
jne
ins
pusha
je
jmp
mov
sub
mov
je
fsubr
push
add
mov
mov
mov
test
add
add
add
push
xchg
in
inc
and
cvtps2pd
sub
add
add
add
out
cmp
push
dec
(bad)
push
arpl
test
add
pop
mov
fs
mov
sub
nop
inc
and
or
add
mov
or
add
in
inc
fmul
test
fsubrp
jnp
add
fild
das
retf
xor
lock
bswap
stc
push
pop
cs
mov
and
add
cld
sub
dec
xchg
mov
xor
add
fimul
dec
add
mov
test
add
adc
xor
push
add
xor
loop
cmp
test
add
movs
test
add
mov
(bad)
fisttp
inc
and
dec
fiadd
(bad)
add
test
push
sbb
das
mov
aad
mov
inc
mov
fs
mov
and
fild
xor
mov
cmp
fild
outs
adc
pop
test
add
add
mov
je
jmp
ja
and
sub
mov
jo
test
and
jmp
add
add
add
add
mov
mov
sti
cmps
mov
add
mov
jo
sbb
and
out
lock
test
push
xor
cmp
and
add
add
jecxz
jno
mov
test
adc
pop
and
add
aam
push
sbb
cmp
test
xor
mov
sbb
add
mov
add
mov
pop
test
push
add
retf
add
xchg
jmp
push
bound
and
add
cmp
mov
dec
add
inc
sar
mov
mov
mov
mov
mov
mov
cmp
cmc
or
fidiv
std
and
sub
test
add
aam
sbb
add
mov
mov
jmp
not
scas
jo
sbb
add
call
aad
enter
and
add
add
jge
add
add
sub
xor
fnsave
mov
mov
fcom
int3
and
add
xor
rol
add
mov
jno
push
add
xor
inc
ror
and
aad
add
bound
xchg
sbb
and
cs
out
mov
fs
ins
(bad)
pop
and
add
add
es
add
shl
gs
xchg
test
les
add
mov
ret
loopne
cwde
add
sti
mov
jmp
or
xlat
cmp
xchg
mov
mov
add
in
add
add
hlt
dec
ror
add
mov
mov
mov
and
add
sub
cld
cmovl
mov
cmps
add
add
add
sub
cwde
push
cs
dec
and
add
cmp
sets
xor
add
mov
mov
xchg
mov
shl
sbb
sbb
or
and
add
dec
jmp
mov
mov
mov
inc
add
jae
sub
sub
adc
repz
mov
test
xor
add
mov
mov
mov
inc
push
xor
inc
xor
add
cli
add
push
dec
loop
xchg
outs
add
jmp
mov
pushf
add
xor
jp
sbb
adc
sub
add
push
push
outs
ror
add
mov
mov
mov
fs
cmp
add
dec
shl
mov
jo
and
add
cmp
outs
add
push
and
dec
add
dec
add
cs
scas
xchg
sbb
cld
add
pop
fucompp
push
add
dec
sbb
add
add
(bad)
shl
add
add
in
add
ins
inc
add
test
or
and
xor
test
mov
cld
inc
jp
fisub
mov
(bad)
cmps
and
add
add
mov
test
js
add
mov
mov
fimul
dec
add
sub
int3
movs
jo
lods
add
dec
mov
mov
sbb
pushf
add
add
(bad)
jmp
push
add
inc
add
mov
jmp
mov
add
mov
inc
add
add
mov
and
add
add
add
push
push
add
aad
pop
mov
xor
ja
in
out
pushf
and
mov
or
push
add
add
inc
jecxz
pushf
pusha
xor
aam
dec
add
pop
in
mov
add
adc
add
mov
mov
jmp
lea
dec
rcr
test
xor
outs
add
mov
(bad)
fisub
das
add
aad
(bad)
call
add
and
add
xor
add
fbld
add
mov
inc
and
dec
add
lahf
das
xor
inc
ret
mov
js
sti
add
mov
test
xor
push
jb
repnz
xchg
and
fidivr
mov
jmp
loop
fisttp
mov
cmps
add
cld
add
mov
ss
add
add
push
mov
cmp
jmp
cmp
adc
and
mov
mov
sub
stc
add
add
iret
ss
mov
and
and
add
test
add
jno
pop
cmps
(bad)
and
mov
(bad)
js
xchg
add
sti
add
add
mov
dec
sub
push
es
repnz
add
in
fcom
dec
(bad)
pop
pop
pop
ja
mov
add
push
add
add
dec
ficom
icebp
add
add
sahf
mov
fiadd
mov
mov
int3
jle
add
sub
inc
(bad)
jg
js
add
pop
into
add
jmp
mov
mov
mov
out
push
add
dec
pusha
xor
daa
stc
ret
add
mov
cmps
mov
sub
and
add
outs
stos
push
sub
jmp
mov
mov
jmp
xchg
shl
sbb
add
and
and
add
dec
cmp
add
out
test
std
add
inc
add
add
inc
sbb
test
add
add
test
mov
bound
mov
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
add
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
mov
mov
call
call
sub
lea
mov
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
call
sub
call
jg
jmp
call
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
call
add
mov
je
jmp
mov
add
call
je
jmp
mov
sub
mov
je
jmp
mov
add
call
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
call
jmp
mov
mov
cmp
sete
and
mov
mov
and
mov
call
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
call
jmp
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
call
jmp
lea
add
movzx
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
jmp
call
call
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
call
jmp
mov
jmp
mov
mov
call
mov
mov
jmp
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
sub
call
call
mov
mov
call
call
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
add
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
call
mov
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
mov
call
jmp
mov
call
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
call
jmp
call
call
mov
mov
jmp
mov
mov
jmp
mov
call
mov
call
mov
sub
mov
mov
call
call
mov
call
call
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
ret
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
call
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
sbb
add
mov
and
mov
hlt
jmp
rcl
and
mov
(bad)
push
cmp
jns
std
jne
inc
and
jl
pop
jge
mov
and
mov
neg
add
(bad)
aad
add
add
sar
mov
xor
movd
add
fst
pushf
push
ret
pop
or
cmp
or
add
mov
add
inc
xor
dec
fild
cmc
(bad)
xchg
(bad)
inc
and
cli
test
jo
add
out
inc
and
frstor
ror
and
xor
add
add
mov
push
test
push
cmp
xchg
test
pusha
add
add
in
popa
pop
add
ins
pop
ins
cmovo
add
test
mov
xchg
mov
mov
mov
add
add
xor
add
jle
and
hlt
mov
inc
push
jl
add
add
sbb
sub
repnz
jns
data16
dec
and
je
jmp
jmp
dec
mov
push
lods
pusha
jg
jne
sti
xor
cmp
xor
add
jmp
push
mov
cmp
cmove
inc
dec
int
inc
add
add
and
dec
and
or
sub
jns
js
inc
add
mov
and
ror
mov
cld
not
or
in
sbb
je
inc
mov
jle
and
in
pop
add
add
inc
retf
and
jmp
add
mul
push
add
and
add
mov
and
fadd
lahf
push
aad
add
out
and
mov
cmp
add
add
and
cmp
jne
add
dec
js
inc
pop
gs
sbb
ret
mov
imul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
add
mov
call
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
mov
call
mov
call
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
call
call
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
cmp
setne
and
mov
call
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
jmp
mov
mov
call
cmp
cmovne
mov
jmp
mov
mov
sub
mov
mov
mov
mov
call
call
mov
jmp
mov
call
call
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
and
mov
call
call
mov
call
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
jmp
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
call
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
call
sub
mov
call
add
mov
call
call
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
ins
inc
add
loopne
add
add
push
call
dec
push
and
mov
imul
jno
lahf
adc
call
call
mov
xor
inc
and
mov
int3
inc
and
mov
and
mov
mov
loop
fld
add
jmp
(bad)
cmps
and
or
add
xchg
mov
imul
mov
sub
xchg
jg
lock
add
add
call
pop
lahf
mov
in
test
pop
add
add
inc
pop
mov
sub
inc
and
and
mov
sub
mov
lods
add
add
or
push
dec
inc
std
pop
dec
mov
pop
imul
lea
mov
inc
mov
and
scas
arpl
mov
add
add
add
les
in
js
xchg
test
(bad)
call
jmp
mov
fmul
jg
cmp
jmp
inc
and
and
es
inc
add
(bad)
jge
add
sub
fldenv
push
inc
dec
je
inc
sti
and
jg
jmp
mov
adc
sub
inc
test
add
sub
add
(bad)
int3
xor
sbb
and
and
std
mov
inc
ss
add
add
xor
loopne
inc
test
add
jmp
mov
pop
sub
das
inc
and
fs
add
mov
fisttp
stc
gs
adc
mov
jmp
xchg
test
sub
loop
or
cmp
add
add
mov
dec
js
mov
leave
or
mov
add
cmp
xor
add
jnp
mov
test
imul
add
mov
addr16
mov
mov
bsr
add
add
push
add
add
adc
les
and
in
push
and
sub
leave
jg
iret
and
jmp
mov
mov
push
mov
shl
add
add
push
and
cmovnp
jmp
mov
ins
dec
pop
in
mov
jmp
lods
push
add
dec
mov
or
idiv
shl
addr16
mov
mov
(bad)
jo
popa
out
adc
push
dec
and
mov
add
imul
test
jge
fsub
mov
adc
push
(bad)
mov
add
inc
cmp
mov
push
dec
mov
int3
sbb
push
shl
add
add
lds
add
les
cmp
(bad)
imul
cli
and
inc
add
sbb
test
xor
inc
and
lea
adc
out
(bad)
jmp
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
lea
add
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
push
mov
push
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
jmp
call
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
add
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
jg
jmp
call
sub
mov
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
jmp
mov
mov
jmp
mov
mov
call
call
call
sub
pushf
mov
xor
popf
mov
mov
mov
call
mov
call
jmp
mov
jmp
mov
add
pop
ret
mov
mov
mov
call
call
sub
mov
mov
mov
mov
mov
mov
jmp
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
push
and
mov
mov
in
popa
jo
dec
mov
or
scas
shl
ins
and
mov
add
inc
and
and
add
jl
ror
push
and
icebp
retf
inc
ror
inc
and
push
int
jge
add
test
xor
in
out
pushf
or
xchg
jmp
aam
add
add
cmp
mov
nop
sub
(bad)
dec
pop
dec
dec
add
add
inc
and
jp
int
in
dec
jmp
scas
ror
loopne
and
dec
push
and
(bad)
sbb
add
cmp
mov
dec
mov
punpckhbw
add
dec
push
add
and
sub
cmove
imul
add
pop
and
pop
jecxz
mov
je
add
data16
sbb
jg
imul
add
add
jmp
adc
rol
pop
shr
repz
and
cmovb
mov
jmp
fsubp
(bad)
(bad)
call
mov
pop
dec
mov
and
mov
jns
(bad)
out
jl
gs
mov
mov
inc
and
jl
(bad)
aas
ret
and
xchg
ds
(bad)
jmp
dec
mov
inc
add
add
rcl
(bad)
(bad)
dec
xchg
call
mov
cmp
mov
out
imul
fiadd
push
sub
cs
(bad)
pop
les
cdq
repz
mov
xchg
dec
dec
adc
aas
ret
mov
fcomi
cmp
out
shl
sub
rol
into
mov
mov
int
xor
(bad)
and
rep
(bad)
mov
add
jne
add
sub
add
xchg
cdq
xlat
cmp
shl
push
and
and
sub
sub
ss
or
xchg
pop
xchg
in
push
xchg
dec
sbb
int3
push
mov
push
push
push
sub
call
call
mov
mov
call
call
mov
mov
mov
mov
mov
sub
call
mov
jg
jmp
call
sub
call
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
call
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
call
call
mov
mov
call
mov
mov
call
call
mov
call
mov
call
mov
mov
mov
call
call
mov
mov
mov
call
call
mov
call
sub
mov
mov
call
mov
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
mov
and
mov
call
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
mov
pushf
sub
popf
mov
test
cmovne
call
jmp
mov
mov
jmp
mov
call
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
mov
call
cmp
cmove
mov
jmp
call
call
call
mov
jmp
pushf
mov
xor
popf
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
call
jmp
mov
mov
call
mov
sub
sub
mov
call
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
call
jmp
mov
jmp
mov
jmp
call
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
call
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
call
call
mov
mov
sub
mov
mov
call
mov
mov
mov
call
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
call
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
call
call
mov
mov
mov
mov
mov
mov
call
call
mov
mov
call
sub
mov
mov
call
mov
call
mov
call
mov
call
call
jmp
call
mov
mov
jmp
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
call
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
pushf
sub
popf
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
call
call
call
mov
cmp
setl
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
sub
mov
mov
mov
call
call
mov
pushf
add
popf
mov
mov
mov
mov
cmp
cmove
call
jmp
call
mov
pushf
add
popf
mov
cmp
cmovl
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
call
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
call
mov
mov
call
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
call
mov
call
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
call
add
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
add
call
mov
mov
mov
mov
call
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
call
mov
mov
call
mov
sub
mov
mov
mov
call
add
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
call
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
call
call
call
call
mov
jmp
mov
add
mov
mov
call
mov
call
mov
jmp
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
mov
xchg
inc
jp
mov
nop
push
imul
(bad)
out
push
pop
and
hlt
and
sbb
shl
push
mov
pusha
push
call
add
popf
jmp
mov
and
or
cmp
mov
add
sbb
add
xchg
and
and
imul
stc
inc
and
movlps
add
rol
daa
add
pop
cwde
jno
inc
xchg
mov
xchg
call
add
add
jne
fs
out
rcl
adc
push
add
mov
adc
jp
sub
mov
add
sbb
mov
sbb
cmp
aad
jp
inc
cmp
fisubr
cmp
add
rcl
mov
cmp
fwait
(bad)
jno
out
mov
sbb
inc
and
pop
and
or
mov
aas
add
pop
and
sub
es
and
clts
xchg
sbb
add
jo
fldenv
push
inc
and
jg
repnz
mov
mov
and
sub
xchg
inc
and
je
shl
add
add
adc
and
sub
pop
jo
mov
add
sbb
lahf
enter
jmp
mov
sub
xchg
sbb
je
into
xchg
add
add
mov
push
lock
and
je
jmp
gs
lods
mov
fisttp
loop
fst
add
add
arpl
add
sub
mov
fwait
sub
mov
jmp
aad
and
icebp
pop
sub
clc
mov
jno
mov
mov
and
call
shl
je
jmp
mov
mov
stos
sub
xor
cli
sbb
out
add
sbb
add
ss
sbb
cli
pop
stc
(bad)
popf
mov
shr
call
inc
rcl
mov
mov
(bad)
leave
or
add
inc
addr16
add
add
add
add
or
rol
aaa
popf
add
stos
adc
adc
imul
call
dec
and
hlt
call
inc
test
arpl
retf
aas
add
or
(bad)
shl
add
add
add
jmp
pop
inc
and
stos
out
cwde
jmp
gs
sbb
rcr
inc
push
jge
add
add
add
test
dec
add
jp
mov
mov
and
sub
sbb
call
sbb
stos
and
xchg
dec
mov
add
and
jmp
mov
sub
ret
jae
addr16
and
jmp
mov
and
arpl
sbb
pop
pop
pop
faddp
sbb
add
add
mov
jmp
ret
push
pop
(bad)
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
or
push
or
jne
mov
and
mov
and
xchg
in
jp
mov
pop
mov
push
xchg
cmc
fs
pusha
adc
mov
std
div
cmp
or
mov
xor
(bad)
push
add
jbe
add
add
stos
jp
das
rcr
cmc
arpl
test
fild
add
stos
inc
sub
add
mov
cmp
add
pop
jmp
mov
call
inc
and
psrlw
add
in
dec
ret
cmp
mov
leave
cmp
neg
jmp
mov
sub
mov
or
pop
add
or
add
add
pop
pushf
sbb
sbb
test
sub
jmp
mov
in
xchg
xchg
dec
not
movs
add
add
in
mov
out
sar
cmp
jle
add
add
add
and
sub
mov
adc
pop
add
pop
inc
sbb
dec
ret
cmp
mov
jmp
jp
ss
pop
add
xor
push
sub
(bad)
push
push
test
mov
mov
mov
fdiv
add
outs
jbe
cmp
pop
add
or
push
or
pop
add
add
and
inc
call
inc
jp
ret
inc
add
add
inc
and
iret
in
push
femms
cmp
add
mov
xor
iret
les
push
adc
(bad)
icebp
mov
aaa
aaa
add
bswap
call
and
fs
jp
or
push
dec
mov
xor
add
mov
xor
movs
iret
push
ror
fild
(bad)
dec
sub
loop
jbe
outs
mov
sub
(bad)
dec
call
inc
or
in
push
sbb
sar
xor
adc
mov
mov
lods
(bad)
dec
outs
test
(bad)
(bad)
cli
movs
cmps
(bad)
aaa
shl
ins
lds
xchg
(bad)
pop
and
test
mov
cmps
(bad)
aaa
movs
xor
repnz
xlat
dec
mov
shl
outs
scas
push
(bad)
cli
call
and
cmp
imul
mov
cmp
inc
icebp
inc
and
mov
or
cmp
xor
mov
push
add
push
add
push
add
add
lods
scas
sub
sub
adc
stos
add
ret
and
mov
fimul
add
pop
pop
pop
stos
cdq
pop
imul
int3
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
pop
mov
mov
and
add
add
int3
repnz
mov
add
add
mov
mov
add
mov
shr
pop
test
push
dec
add
mov
repnz
and
and
add
mov
sub
shr
and
mov
jae
jbe
add
repnz
cmp
jns
pusha
or
gs
add
cs
add
mov
sub
cmc
inc
and
jg
jmp
mov
sub
daa
sbb
je
mov
rol
cmp
in
add
dec
and
mov
retf
sub
mov
fwait
and
mov
jge
imul
push
xchg
xor
jg
jmp
(bad)
inc
and
add
dec
inc
jb
(bad)
clc
add
push
jmp
mov
and
mov
call
add
add
jecxz
jns
mov
and
xor
imul
add
xchg
retf
add
mov
inc
and
jg
jmp
mov
cli
mov
je
push
test
dec
add
inc
mov
jo
in
pop
pop
xor
(bad)
sbb
pop
add
mov
movs
or
jo
jmp
cmp
and
jmp
mov
jp
imul
add
inc
pop
add
push
sub
cmp
scas
test
xchg
int3
repnz
adc
lahf
mov
push
push
push
add
les
mov
fld
sub
cmps
sub
and
inc
leave
iret
add
bnd
repnz
and
sub
mov
and
jg
jmp
mov
sub
cmp
add
jmp
mov
sub
mov
cmps
unpcklps
add
add
outs
xor
les
xchg
jns
add
add
jo
pop
mov
mov
inc
push
sub
add
add
inc
call
ins
jge
inc
(bad)
imul
add
inc
loopne
sub
fld
mov
dec
jmp
and
mov
mov
xor
cmp
retf
adc
mov
jmp
call
sbb
inc
pop
aas
dec
mov
cmp
jns
add
inc
les
inc
and
inc
sub
xor
inc
jb
jmp
loopne
inc
cli
dec
lods
push
dec
(bad)
mov
dec
jnp
imul
call
mov
mov
and
and
rcl
mov
and
loop
and
movs
sub
push
ins
add
lock
cmp
fwait
scas
fdiv
push
add
add
or
dec
je
mov
add
or
enter
dec
int3
repnz
add
mov
mov
lods
sar
mov
jge
mov
push
add
jae
retf
dec
je
ds
repnz
inc
pop
xchg
add
add
js
mov
add
(bad)
jmp
les
and
xchg
mov
iret
icebp
and
add
int3
repnz
add
ror
add
inc
push
pop
add
int
inc
inc
and
adc
pop
dec
jmp
mov
push
lea
hlt
pop
pop
xchg
scas
clc
and
and
and
xor
push
test
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
add
mov
mov
call
mov
mov
mov
mov
mov
call
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
call
mov
call
mov
mov
mov
mov
shl
sub
add
sub
mov
call
call
mov
shl
add
sub
add
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
cmp
jne
call
jmp
cmp
jne
lea
call
mov
mov
mov
mov
cmp
jne
jmp
mov
call
call
mov
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
seta
mov
call
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
cmp
setl
mov
mov
test
jne
jmp
mov
call
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
call
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
call
mov
mov
mov
add
add
sub
mov
mov
mov
mov
sub
sub
mov
mov
mov
add
mov
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jge
mov
mov
mov
call
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
add
sub
mov
mov
call
shl
add
add
sub
call
mov
mov
cmp
jae
mov
mov
mov
mov
add
add
add
mov
jmp
mov
call
mov
call
mov
mov
mov
mov
mov
sub
add
add
call
mov
call
mov
call
cmp
jge
mov
shl
call
mov
add
call
movzx
mov
and
xor
or
call
mov
call
mov
sub
mov
mov
add
add
sub
mov
jmp
call
jmp
mov
mov
mov
mov
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setb
mov
mov
test
jne
jmp
call
mov
add
sub
add
mov
mov
cmp
jb
mov
mov
sub
add
sub
mov
mov
mov
mov
call
mov
mov
call
mov
add
add
sub
mov
mov
mov
mov
sub
sub
sub
mov
cmp
jne
mov
mov
call
mov
sub
mov
sub
add
sub
call
jmp
mov
mov
mov
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
cmp
sete
mov
call
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
call
sub
add
mov
mov
mov
jmp
mov
mov
sub
add
call
mov
mov
mov
pushf
sub
popf
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
mov
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
call
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
call
mov
add
sub
sub
sub
call
mov
mov
add
sub
add
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
sub
sub
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
call
mov
mov
call
mov
mov
mov
call
mov
sub
mov
sub
add
sub
mov
jmp
call
sub
mov
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
call
mov
mov
sub
mov
add
add
sub
mov
mov
mov
mov
mov
add
add
sub
mov
mov
sub
add
add
call
jmp
cmp
jge
mov
mov
mov
mov
add
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setne
call
mov
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
call
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
cmp
jb
jmp
call
call
sub
add
add
mov
xor
mov
mov
xor
and
mov
call
call
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
sub
add
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
call
shl
call
mov
add
call
movzx
mov
xor
mov
xor
xor
xor
mov
and
and
mov
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
call
mov
add
add
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
call
shr
mov
movzx
imul
call
mov
cmp
jae
mov
mov
mov
mov
call
mov
mov
call
movzx
add
sub
add
sar
mov
movzx
sub
add
sub
mov
mov
call
sub
call
mov
add
add
sub
mov
xor
xor
xor
or
or
xor
and
call
mov
mov
shl
movzx
call
mov
add
sub
add
sar
mov
sub
mov
sub
add
sub
imul
shl
add
call
cmp
jl
pushf
xor
add
sub
popf
mov
mov
sub
add
call
mov
cmp
jb
mov
mov
call
sub
sub
mov
mov
mov
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
movzx
mov
mov
call
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shl
call
mov
xor
xor
mov
xor
and
mov
mov
add
mov
shl
add
call
shl
add
call
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
call
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
call
call
and
or
mov
or
xor
or
xor
or
and
or
mov
call
shr
mov
movzx
imul
call
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
cmp
je
jmp
jmp
mov
mov
mov
call
mov
sub
add
call
call
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
add
sub
sub
mov
cmp
jne
jmp
jmp
mov
call
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
cmp
jl
jmp
jmp
cmp
jge
call
mov
shl
add
mov
cmp
jae
mov
shl
mov
call
shl
mov
mov
sub
mov
movzx
mov
and
xor
or
mov
call
shr
mov
movzx
imul
mov
call
cmp
jae
mov
mov
call
mov
mov
movzx
add
sub
add
sar
mov
movzx
sub
sub
mov
mov
mov
shl
mov
jmp
mov
mov
call
add
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
call
mov
mov
sub
mov
mov
sub
add
sub
sub
add
add
call
jmp
mov
call
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
cmp
jae
mov
add
add
sub
call
mov
mov
call
mov
sub
mov
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
call
mov
call
mov
sub
mov
sub
add
sub
mov
cmp
sete
call
mov
mov
sub
sub
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
call
mov
mov
add
sub
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jge
mov
jmp
cmp
jge
mov
call
sub
add
mov
jmp
call
sub
add
sub
call
jmp
jmp
mov
call
mov
add
sub
add
mov
mov
mov
sub
sub
add
call
call
movzx
sar
mov
movzx
sub
add
mov
mov
call
add
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
call
and
or
call
or
xor
or
xor
or
and
or
mov
call
shr
mov
movzx
imul
mov
call
cmp
jae
mov
mov
mov
mov
mov
call
movzx
sub
sub
add
sar
call
movzx
add
add
add
mov
mov
mov
mov
call
call
call
call
cmp
cmovl
call
mov
sub
mov
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
sub
add
mov
call
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
call
shl
add
mov
cmp
jae
pushf
xor
add
sub
popf
call
shl
call
call
shl
call
mov
sub
mov
movzx
mov
xor
xor
mov
xor
xor
mov
and
and
mov
mov
mov
and
call
call
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
call
movzx
imul
mov
call
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
call
shl
mov
mov
add
mov
movzx
mov
and
xor
or
call
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
call
call
movzx
add
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
cmp
jne
call
jmp
mov
call
mov
sub
mov
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
and
xor
or
test
jne
jmp
mov
call
cmp
setb
mov
call
mov
add
add
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
sub
sub
sub
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
sub
add
call
call
cmp
jb
mov
call
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
add
sub
mov
cmp
jne
call
mov
call
mov
add
sub
add
mov
mov
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
and
xor
or
test
jne
jmp
mov
call
call
sub
add
call
mov
mov
sub
sub
sub
call
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
call
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
pushf
mov
sub
popf
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
add
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
call
mov
mov
add
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
call
shl
add
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
call
mov
mov
add
sub
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
shl
mov
mov
shl
call
mov
add
call
movzx
mov
xor
xor
mov
xor
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
xor
or
and
or
mov
call
mov
mov
add
sub
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
shr
call
movzx
imul
call
mov
cmp
jae
mov
mov
call
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
call
mov
mov
movzx
sub
sub
sub
sar
mov
movzx
mov
sub
sub
mov
call
mov
call
mov
add
mov
mov
add
imul
and
push
mov
xor
cmp
pop
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
add
call
mov
mov
sub
add
call
call
movzx
sar
mov
movzx
sub
sub
add
mov
mov
call
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
call
mov
shr
call
movzx
imul
mov
call
cmp
jae
mov
pushf
add
popf
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
jmp
call
mov
sub
sub
sub
call
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
cmp
cmovl
mov
call
add
call
mov
mov
cmp
jae
mov
mov
shl
mov
call
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
call
mov
and
or
call
or
xor
or
xor
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
call
cmp
jae
mov
mov
mov
call
movzx
sub
add
sar
mov
movzx
sub
add
sub
mov
mov
call
add
call
shl
shl
add
mov
mov
call
jmp
mov
mov
sub
sub
sub
mov
call
mov
sub
sub
sub
call
call
movzx
sar
call
movzx
sub
sub
sub
mov
mov
mov
sub
mov
cmp
jae
call
shl
call
mov
shl
call
mov
add
mov
movzx
mov
mov
and
xor
or
call
call
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
call
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
sub
mov
mov
mov
add
call
shl
shl
add
mov
mov
mov
jmp
call
mov
sub
sub
sub
mov
mov
mov
add
sub
sub
mov
call
movzx
sar
mov
movzx
sub
sub
sub
mov
mov
call
add
mov
mov
mov
jmp
call
call
call
mov
call
mov
mov
sub
sub
sub
imul
and
push
mov
xor
cmp
pop
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
call
shl
add
mov
cmp
setb
mov
call
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
call
shl
mov
mov
mov
sub
call
movzx
mov
and
xor
or
call
call
shr
call
movzx
imul
mov
mov
cmp
jae
mov
call
call
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
call
mov
mov
sub
add
mov
mov
mov
add
sub
add
mov
call
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
sub
sub
sub
sub
add
mov
jmp
mov
add
add
add
call
cmp
jne
mov
mov
mov
mov
mov
mov
shl
mov
add
sub
add
mov
mov
mov
sub
sub
mov
cmp
jge
mov
mov
mov
mov
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
call
call
sub
cmp
setl
mov
call
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
mov
and
mov
mov
and
mov
and
mov
mov
and
mov
or
mov
or
xor
or
xor
mov
or
and
or
test
mov
mov
jne
jmp
mov
test
jne
jmp
mov
call
jmp
mov
call
jmp
mov
shl
shl
mov
add
mov
call
call
mov
call
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
call
mov
add
mov
movzx
mov
xor
xor
mov
xor
xor
mov
mov
and
and
mov
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
xor
or
and
or
mov
call
shr
mov
movzx
imul
call
mov
cmp
jae
mov
mov
mov
call
mov
movzx
sub
sub
sub
sar
call
movzx
sub
sub
mov
mov
call
shl
mov
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
add
sub
add
mov
call
movzx
sar
mov
movzx
sub
sub
add
mov
mov
call
mov
sub
sub
sub
add
sub
call
jmp
mov
sub
sub
sub
mov
push
mov
xor
cmp
pop
jne
mov
call
add
add
mov
cmp
jl
mov
mov
sar
sub
sub
sub
mov
mov
xor
xor
mov
mov
xor
and
mov
mov
and
xor
xor
or
mov
cmp
jge
mov
mov
mov
shl
call
mov
add
mov
shl
add
call
add
sub
sub
shl
add
add
call
jmp
mov
sub
add
sub
mov
cmp
jae
mov
mov
shl
mov
mov
shl
call
mov
add
call
movzx
mov
xor
mov
xor
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
call
call
mov
add
sub
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
call
shl
mov
mov
cmp
setae
call
call
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
call
call
add
sub
add
call
call
mov
mov
and
xor
xor
or
mov
jmp
mov
add
sub
sub
mov
cmp
jne
mov
sub
mov
mov
shl
call
call
mov
mov
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
call
mov
shl
call
mov
add
call
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
call
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
call
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
add
mov
call
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
call
mov
sub
mov
sub
add
sub
sub
sub
sub
mov
mov
mov
mov
mov
and
xor
or
call
mov
shl
mov
mov
mov
sub
sub
mov
cmp
jne
jmp
mov
call
mov
mov
add
sub
call
push
mov
xor
cmp
pop
jne
mov
jmp
jmp
mov
mov
mov
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
call
mov
cmp
seta
call
call
mov
add
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
jmp
mov
mov
add
sub
add
cmp
jbe
mov
mov
call
sub
sub
mov
jmp
call
mov
mov
call
mov
sub
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
add
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
call
sub
add
call
mov
cmp
jb
mov
call
mov
sub
sub
mov
mov
mov
mov
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
call
mov
mov
mov
mov
call
mov
mov
sub
add
add
mov
cmp
sete
mov
mov
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
add
sub
call
mov
mov
mov
sub
add
sub
call
mov
mov
mov
call
call
add
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setne
call
mov
mov
sub
add
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
cmp
jae
mov
mov
mov
mov
sub
add
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
and
xor
or
test
jne
jmp
mov
call
shl
mov
mov
shl
call
mov
add
call
movzx
mov
xor
mov
xor
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
call
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
call
add
sub
sub
sub
call
add
sub
add
call
cmp
jge
call
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
push
mov
xor
cmp
pop
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
call
mov
mov
mov
mov
mov
mov
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
call
mov
mov
mov
call
mov
call
call
call
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
call
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
sub
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
add
pop
pop
pop
pop
ret
jmp
mov
mov
mov
sub
mov
mov
call
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
call
sub
add
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
jmp
jmp
mov
call
call
add
sub
add
call
jmp
jmp
jmp
mov
shl
call
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
call
movzx
mov
jmp
jmp
mov
mov
call
mov
mov
call
mov
sub
mov
mov
sub
add
sub
call
jmp
mov
jmp
jmp
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
call
movzx
sar
mov
movzx
add
sub
add
mov
mov
jmp
jmp
mov
mov
mov
mov
sub
add
call
mov
call
sub
add
call
mov
movzx
sar
mov
movzx
add
sub
add
mov
mov
mov
sub
call
shl
add
call
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
call
movzx
mov
xor
mov
xor
xor
xor
mov
and
and
call
mov
mov
and
call
call
and
or
mov
or
xor
or
xor
or
and
or
mov
jmp
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
call
movzx
mov
sub
mov
sub
add
sub
mov
mov
call
mov
jmp
mov
mov
shl
add
call
jmp
call
add
add
add
mov
jmp
mov
shr
mov
mov
shl
call
jmp
mov
mov
jmp
mov
add
add
sub
mov
jmp
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
add
add
sub
call
jmp
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
mov
and
xor
or
mov
jmp
mov
call
mov
call
mov
mov
jmp
mov
mov
call
mov
call
mov
mov
call
call
mov
call
mov
call
mov
call
call
sub
sub
mov
mov
mov
mov
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
call
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
jns
sub
add
add
add
imul
add
add
and
add
add
add
sub
and
add
in
add
mov
(bad)
loopne
sbb
inc
and
xchg
and
and
add
enter
cmps
add
add
mov
dec
add
push
shl
add
dec
rcr
mov
add
add
test
jmp
scas
add
push
jns
cmp
test
add
std
mov
test
mov
enter
add
leave
push
and
add
add
(bad)
xor
add
add
outs
mov
mov
neg
jbe
test
and
mov
add
in
add
add
mov
and
call
int
loop
cs
test
add
add
xchg
mov
retf
add
add
or
and
cld
xchg
cdq
test
add
add
jp
sub
cmp
add
enter
add
mov
aas
in
add
(bad)
cdq
add
add
(bad)
daa
jb
adc
add
mov
fiadd
add
test
push
add
test
sbb
test
xor
xor
in
add
add
add
mov
sub
and
mov
add
add
test
jp
dec
add
add
(bad)
fsubr
test
in
or
add
add
add
xchg
rol
rcr
jp
rol
icebp
mov
or
inc
xor
out
sbb
and
or
in
sub
cmp
add
and
(bad)
and
adc
pop
add
mov
dec
test
sbb
and
in
add
inc
xor
por
sahf
(bad)
and
add
adc
sub
jno
test
add
pcmpeqw
add
add
push
out
enter
test
shr
sub
add
imul
add
add
jne
push
sub
and
add
test
inc
add
sbb
test
sub
mov
pop
(bad)
mov
retf
in
or
mov
sub
je
and
add
add
test
call
jmp
mov
sar
sbb
mov
ja
add
jg
loope
add
mov
inc
and
mov
test
mov
cmp
add
push
pop
and
and
add
cmp
(bad)
stc
fucomip
add
cmps
jp
add
add
in
mov
or
sahf
sub
sub
jo
mov
and
add
test
add
int
push
out
enter
add
daa
(bad)
retf
add
or
add
or
ins
and
add
fs
sub
sete
add
add
jne
or
add
sub
test
add
loopne
mov
dec
add
mov
fisub
jne
enter
imul
add
jno
ret
add
in
iret
ror
add
add
mov
add
mov
sbb
and
icebp
cmps
add
test
add
jmp
xchg
sub
ret
in
or
pop
test
mov
mov
push
add
jmp
inc
shl
pop
cwde
jmp
imul
push
in
and
les
or
or
add
and
inc
and
mov
in
jg
(bad)
pop
cwde
dec
icebp
add
dec
add
(bad)
clc
and
push
mov
or
and
or
and
add
(bad)
call
mov
out
call
pop
jnp
add
xchg
and
push
std
adc
jle
mov
mov
stc
out
add
call
or
jge
add
retf
xor
inc
add
dec
add
sar
add
bound
sbb
popf
push
xor
xchg
bound
and
xor
icebp
cmps
add
leave
dec
cdq
retf
and
add
imul
jmp
test
test
add
add
push
mov
movs
pop
push
add
test
add
dec
add
dec
icebp
mov
call
cmc
add
add
and
in
add
clc
jecxz
inc
add
add
(bad)
in
jge
add
pusha
jnp
add
add
dec
add
inc
and
and
inc
mov
add
(bad)
jecxz
jmp
call
mov
sub
shl
mov
mov
cmps
mov
cdq
mov
(bad)
pop
add
xchg
jecxz
call
sbb
add
mov
sub
leave
inc
push
adc
loop
enter
and
retf
in
mov
call
mov
add
jge
add
ins
jnp
add
and
add
add
and
mov
lds
jecxz
(bad)
mov
push
jle
add
jo
dec
add
enter
test
adc
jl
and
or
and
add
add
mov
and
call
mov
out
or
mov
mov
and
and
mov
inc
and
add
and
lds
dec
fsub
(bad)
(bad)
mov
dec
sbb
dec
add
xchg
cmp
fld
retf
in
sbb
mov
fimul
add
and
adc
test
nop/reserved
add
jg
add
mov
or
add
dec
call
retf
add
or
and
jmp
(bad)
and
push
add
add
xchg
fldcw
add
add
and
add
add
lds
loop
(bad)
mov
mov
mov
mov
sub
and
mov
sahf
or
add
add
dec
mov
(bad)
call
mov
push
mov
aam
dec
add
stos
xchg
and
add
cmps
mov
mov
mov
imul
pop
call
adc
cmc
retf
in
sar
add
sub
shl
mov
add
or
mov
mov
pop
clc
mov
add
add
mov
pop
nop
jnp
add
xchg
add
dec
add
js
and
inc
and
mov
mov
loope
push
add
in
test
jnp
add
mov
in
inc
and
mov
mov
clc
popa
loope
(bad)
mov
mov
pop
cwde
jnp
add
dec
add
and
inc
in
add
inc
stc
or
add
mov
loope
(bad)
mov
inc
sar
loopne
add
and
call
fimul
inc
and
and
mov
dec
call
mov
jge
add
jl
add
add
ficom
loope
test
out
and
in
add
cdq
adc
and
add
retf
add
in
(bad)
and
adc
inc
add
pop
add
add
mov
push
inc
(bad)
inc
test
add
cwde
out
enter
dec
add
inc
dec
lods
jnp
add
in
add
sub
jge
int
add
sahf
(bad)
lods
inc
and
call
cmc
add
add
mov
add
imul
adc
mov
cmp
add
add
push
loopne
call
add
leave
inc
xor
mov
loopne
enter
add
rol
(bad)
and
add
add
mov
loopne
(bad)
mov
mov
mov
mov
mov
lds
add
inc
and
inc
pop
and
mov
(bad)
(bad)
mov
push
jge
add
mov
mov
loop
and
fild
cmc
add
retf
mov
or
mov
mov
jge
add
sar
jne
add
add
inc
xor
imul
dec
add
das
dec
in
xor
cwde
(bad)
jmp
mov
dec
add
and
clc
into
dec
add
jno
jecxz
les
inc
mov
mov
add
add
add
push
into
mov
and
call
jmp
popa
test
enter
adc
inc
pushf
and
test
add
jmp
add
add
add
std
mov
mov
mov
mov
add
call
mov
mov
cmps
cli
jl
add
ss
xor
push
cmp
cmp
lods
xor
dec
add
sub
dec
add
add
lea
ficom
add
jmp
push
test
add
(bad)
call
retf
cwde
out
mov
sahf
add
jne
inc
jnp
add
std
add
mov
inc
jle
add
mov
test
fdivrp
call
enter
cmc
push
mov
and
push
hlt
std
(bad)
mov
add
mov
ins
and
add
sahf
cmp
pop
inc
mov
mov
add
ja
shl
and
add
or
add
jmp
mov
(bad)
fs
dec
add
add
add
cs
lods
test
add
icebp
add
add
into
pop
lods
mov
add
test
push
test
add
add
outs
test
add
cmc
xor
dec
jmp
mov
jne
mov
xchg
and
add
push
mov
cdq
dec
and
(bad)
call
pop
add
mov
(bad)
(bad)
mov
jecxz
jge
add
mov
gs
xchg
inc
mov
or
and
add
in
xor
mov
cmps
xchg
fcomp
xor
mov
add
xchg
jb
cld
adc
lea
mov
popf
inc
add
add
icebp
add
test
push
(bad)
(bad)
mov
push
mov
mov
sbb
mov
ja
push
sbb
add
mov
(bad)
(bad)
mov
mov
mov
jp
sbb
leave
add
dec
call
retf
in
or
hlt
fdivr
(bad)
mov
jbe
add
add
jne
and
dec
mov
mov
cmp
add
add
js
in
adc
fs
test
jl
add
push
inc
jnp
add
rcr
add
mov
xor
and
add
sbb
adc
call
mov
cmp
and
and
inc
add
fucom
test
xor
add
pop
mov
repz
dec
pop
inc
add
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
adc
out
call
mov
mov
stos
cmp
xrelease
push
stos
mov
ins
or
mov
mov
dec
mov
add
jl
fisub
and
mov
add
xor
mov
mov
ins
add
test
add
adc
sub
dec
inc
sbb
mov
jecxz
add
dec
loopne
adc
and
inc
fld
and
and
cld
(bad)
shl
add
add
xlat
add
test
inc
in
mov
and
mov
retf
mov
loope
inc
and
cmp
mul
xor
and
add
xchg
sar
fsubp
sbb
lods
into
push
mov
or
mov
shl
mov
xchg
mov
repz
mov
lds
pusha
mov
je
mov
push
and
mov
inc
and
sub
cwde
test
dec
sub
(bad)
jmp
js
and
sub
mov
jg
jmp
mov
and
sub
fld
cmovnp
add
push
add
add
sub
mov
ss
add
ja
mov
int
pushf
retf
or
and
pop
test
outs
les
push
and
xchg
ins
sub
mov
push
push
inc
fiadd
add
mov
dec
bswap
mov
jle
jmp
push
inc
and
sbb
pop
push
dec
ins
dec
jl
sub
test
add
push
mov
push
shr
mov
mov
je
jmp
mov
sub
mov
push
test
jns
xchg
mov
and
add
mov
psubsb
add
jmp
mov
and
sahf
out
(bad)
in
pop
ins
inc
xor
add
add
dec
add
(bad)
mov
xlat
sbb
mov
jle
jmp
out
and
sub
mov
mov
sbb
add
add
and
sub
mov
cvtps2pi
xor
add
or
aad
pop
jl
out
dec
bound
push
mov
push
xor
cmp
cmovb
or
add
push
and
add
add
add
add
mov
jb
dec
add
les
and
sub
loope
add
cwde
inc
and
in
push
fld
inc
sahf
ret
sti
sub
cli
cs
imul
sub
aaa
jns
mov
int3
xchg
fs
ret
mov
push
inc
and
mov
xchg
inc
mov
in
dec
mov
ficomp
fwait
add
je
js
mov
jb
xchg
pop
add
les
inc
jle
inc
and
jmp
sbb
mov
dec
and
mov
or
add
inc
retf
mov
jmp
mov
dec
inc
and
jmp
pop
cmp
xor
mov
mov
jmp
(bad)
jmp
out
ds
add
int
and
(bad)
jl
push
jmp
mov
(bad)
mov
mov
mov
ds
add
cmps
sub
jecxz
add
mov
sub
popa
sbb
mov
ret
call
cwde
cmp
loop
lock
fild
mov
inc
add
mov
add
add
dec
repz
push
and
sub
shl
inc
shl
imul
out
sub
or
add
xchg
jg
rcl
loopne
icebp
ret
add
in
inc
or
icebp
nop
in
sar
(bad)
inc
rol
(bad)
xor
add
xlat
jb
cmp
fwait
call
cmps
push
dec
shl
(bad)
ror
scas
mov
mov
mov
push
mov
and
mov
xchg
jmp
add
adc
add
sbb
dec
add
cmc
xchg
out
add
aaa
int3
cmps
push
mov
add
xchg
fwait
add
rol
pop
and
mov
and
add
es
and
fisub
xchg
jmp
mov
scas
test
pop
pop
pop
sub
ret
mov
mov
xor
jmp
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jg
push
jnp
fld
mov
and
mov
and
cmps
enter
inc
and
mov
and
mov
leave
or
mov
xor
inc
inc
dec
mov
pusha
(bad)
sahf
out
mov
mov
mov
and
push
xchg
and
or
lock
add
inc
retf
dec
xchg
iret
stos
jmp
(bad)
daa
jne
add
in
daa
shr
mov
outs
add
add
jmp
(bad)
xchg
and
push
or
dec
cmp
mov
std
add
add
jmp
xor
(bad)
add
jnp
add
call
out
adc
inc
daa
xor
adc
loope
add
or
sub
cmps
inc
test
je
jmp
mov
cmp
sub
and
xchg
sbb
std
loope
add
outs
mov
xchg
stc
aaa
aaa
mov
jg
jmp
mov
sub
push
mov
add
outs
jmp
pop
inc
push
cmp
icebp
dec
push
mov
clc
dec
sbb
xchg
xchg
add
jmp
mov
sub
mov
je
(bad)
nop
mov
jne
xchg
and
pop
xlat
stos
mov
mov
xchg
test
cdq
pusha
add
inc
and
sub
mov
or
je
jmp
aaa
inc
dec
dec
sbb
out
dec
test
outs
add
push
dec
das
mov
mov
and
cli
shl
div
xor
test
das
add
add
and
sub
mov
je
jmp
(bad)
xchg
and
pop
mov
imul
adc
add
add
add
jg
out
add
jmp
xlat
mov
and
cld
je
int3
cmp
inc
and
jmp
mov
inc
inc
and
mov
dec
pop
jmp
mov
(bad)
jle
push
fimul
pop
ret
jmp
mov
mov
or
retf
push
mov
and
cmp
cmovne
cld
inc
cmc
sub
movs
ja
mov
adc
jmp
aam
dec
and
scas
add
enter
sub
daa
sahf
adc
and
fwait
xchg
add
std
push
stos
and
lss
mov
jmp
add
xchg
pop
and
sar
and
mov
add
xor
(bad)
imul
cmp
adc
push
mov
add
add
push
jl
mov
pop
dec
and
repnz
push
adc
outs
add
test
jge
or
dec
and
pop
std
(bad)
dec
int3
int3
int3
push
mov
push
push
push
and
add
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
pop
test
add
sar
dec
and
add
inc
sbb
jl
jl
js
inc
shl
sbb
xchg
and
add
add
(bad)
cwde
aad
push
or
mov
and
cmp
mov
movntq
jl
stc
out
outs
inc
dec
jno
aam
lds
clc
outs
dec
push
mov
inc
fld
add
cmp
sub
loope
and
punpcklwd
add
cmp
xlat
mov
xor
outs
shl
je
jmp
test
mov
fadd
add
dec
add
or
mov
pop
push
add
add
mov
xchg
adc
push
mov
xor
das
mov
push
inc
mov
dec
test
dec
lods
jmp
mov
inc
push
jne
lea
rol
add
add
add
xlat
mov
das
mov
mov
in
mov
addr16
mov
jmp
shr
sahf
dec
adc
mov
mov
mov
add
ror
mov
movs
and
mov
rcr
push
add
mov
sub
xchg
dec
call
mov
mov
stc
cmp
(bad)
lods
into
add
mov
out
add
push
inc
and
mov
pop
dec
and
ror
stc
sub
mov
dec
dec
test
jl
loope
add
mov
mov
icebp
out
jmp
cmp
adc
push
pop
adc
and
mov
and
add
mov
mov
xor
and
or
or
mov
xor
retf
icebp
mov
icebp
inc
rol
outs
and
loope
adc
mov
ins
shl
and
xor
movs
jne
mov
adc
mov
and
push
jmp
and
mov
ffree
outs
inc
dec
xor
cwde
sub
imul
(bad)
jmp
(bad)
push
mov
loope
std
or
ins
mov
retf
cmp
jns
mul
fisttp
mov
pop
push
mov
push
sbb
movs
sbb
add
fmul
lahf
xor
and
jmp
adc
xchg
repz
(bad)
mov
and
or
add
fisub
pop
hlt
lods
fld
mov
pop
jmp
rcr
(bad)
(bad)
call
and
or
inc
adc
cmp
(bad)
push
mov
cmp
jmp
adc
mov
shl
out
and
and
xor
loope
fnstenv
dec
dec
push
dec
inc
or
mov
pop
ins
add
sbb
pop
cmc
push
ror
ror
and
and
cdq
and
lea
mov
js
mov
mov
cwde
mov
and
or
mov
and
fmul
stc
mov
push
mov
pop
retf
out
(bad)
ror
push
mov
push
adc
ret
sub
sub
imul
repnz
mov
aaa
retf
inc
cmp
and
cmp
loopne
add
mov
and
cmove
pop
xchg
and
push
push
inc
addr16
add
jmp
cmp
add
(bad)
cmp
adc
mov
inc
in
add
pop
fwait
and
ret
in
fldl2e
sti
jge
cmp
rol
and
xor
add
das
pop
xor
mov
sub
jne
ins
lods
int3
xchg
aad
or
lods
add
pop
nop
pop
pop
xor
(bad)
call
in
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
jg
jmp
call
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
add
mov
je
jmp
call
sub
mov
jg
jmp
call
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
call
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
add
add
sub
add
add
sub
add
add
mov
call
movzx
mov
mov
mov
call
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
add
sub
sub
sub
sub
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
add
pop
pop
pop
pop
ret
mov
mov
sub
sub
add
sub
sub
mov
mov
jmp
mov
jmp
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
dec
adc
enter
jl
dec
and
mov
and
mov
and
lods
fnstenv
mov
add
mov
hlt
test
mov
and
outs
fld
sbb
mov
cmps
shl
and
mov
psadbw
add
data16
jge
popa
inc
or
push
inc
fidiv
and
xor
jmp
push
inc
and
add
mov
and
or
stc
and
dec
fs
cmps
mov
and
jg
je
add
add
shl
pop
fiadd
(bad)
jo
jge
adc
and
and
in
out
sbb
fld
jg
jle
jns
ins
mov
sub
add
paddsw
add
movs
add
push
mov
sub
push
cmp
lea
add
paddusb
add
cld
adc
clc
in
in
jg
jmp
mov
fs
mov
popf
add
jle
add
add
ror
cmp
add
jge
stc
int3
bound
ins
ror
jp
inc
arpl
cwde
std
call
add
push
cmp
movs
mov
or
adc
add
enter
mov
and
clc
lods
data16
jecxz
mov
psubw
add
and
ror
jbe
pop
imul
adc
js
add
add
add
pop
popf
sub
in
and
add
jmp
push
inc
and
mov
push
inc
and
je
jmp
mov
or
(bad)
jmp
adc
add
mov
mov
test
mov
es
jnp
xor
jmp
loopne
or
and
je
into
in
xchg
jns
inc
and
das
shl
and
sar
cdq
add
rol
inc
sbb
jne
and
test
dec
(bad)
paddusb
cmp
sub
dec
inc
or
test
add
daa
push
rcr
add
mov
jnp
xchg
pop
add
and
sub
mov
sbb
test
popf
xchg
add
jmp
mov
mov
mov
dec
xchg
and
aas
push
cmp
add
lahf
cmovb
mov
sub
mov
in
rcr
xor
call
add
add
mov
inc
add
mov
add
add
adc
fadd
mov
cwde
jns
jmp
pop
inc
and
pop
add
inc
cmp
add
add
dec
fsubr
fs
jns
jbe
(bad)
mov
push
inc
je
pop
sti
sub
and
data16
add
fmul
dec
add
mov
mov
and
mov
data16
jns
mov
push
nop
cmps
add
mov
mov
and
jmp
mov
mov
or
dec
je
mov
jns
stos
inc
and
inc
cmps
cmps
fldl2t
or
inc
inc
add
shl
and
inc
dec
add
pop
xchg
inc
add
mov
and
add
add
mov
add
mov
mov
hlt
pop
packsswb
pop
jns
add
add
adc
mov
add
mov
add
arpl
pop
shl
or
pop
cld
(bad)
dec
pop
add
in
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
in
inc
mov
add
add
inc
scas
mov
mov
in
rcl
pop
clc
mov
and
xchg
mov
pop
movq
mov
add
std
inc
and
sub
pop
inc
and
(bad)
push
add
repnz
inc
add
pushf
retf
dec
inc
and
mov
add
add
add
inc
and
sub
mov
and
je
(bad)
sbb
dec
loopne
inc
loope
lahf
inc
push
or
test
add
jmp
and
call
xchg
or
mov
imul
je
mov
add
inc
ror
aad
add
lods
jae
mov
inc
dec
imul
stos
add
sbb
jmp
mov
cmp
int
add
gs
xor
pop
pop
fcom
and
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
call
mov
call
sub
mov
mov
sub
mov
je
jmp
jmp
add
pop
ret
jmp
data16
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
shl
call
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
call
jg
jmp
call
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
jmp
mov
mov
call
cmp
cmovne
call
jmp
call
mov
call
shl
call
mov
jmp
mov
mov
mov
mov
call
add
add
sub
mov
sub
add
mov
sub
sub
mov
sub
sub
add
mov
sub
sub
add
add
sub
add
sub
sub
mov
mov
sub
add
add
sub
sub
sub
add
sub
sub
add
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
call
jmp
mov
call
mov
jmp
mov
jmp
call
mov
call
call
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
pushf
mov
sub
popf
mov
mov
mov
mov
mov
mov
mov
call
add
sub
sub
add
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
call
sub
sub
sub
mov
mov
mov
mov
sub
add
mov
sub
mov
sub
add
mov
sub
mov
sub
sub
sub
add
sub
sub
mov
sub
sub
sub
sub
add
sub
call
sub
add
mov
add
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
sub
pop
pop
pop
pop
ret
call
mov
jmp
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
call
cmp
jge
call
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
call
mov
call
call
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
movzx
push
mov
xor
cmp
pop
jl
jmp
mov
mov
add
add
sub
call
movzx
sub
sub
add
mov
mov
jmp
call
mov
mov
add
add
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
call
call
mov
sub
sub
add
imul
and
push
mov
xor
cmp
pop
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
movzx
cmp
jl
jmp
mov
mov
call
sub
add
sub
mov
movzx
add
add
mov
mov
jmp
mov
mov
mov
add
add
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
movzx
mov
mov
call
mov
mov
call
mov
mov
sub
add
add
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jge
mov
mov
mov
add
add
sub
mov
movzx
mov
shl
mov
mov
mov
mov
shl
call
mov
sub
sub
mov
mov
call
mov
mov
sub
sub
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
sub
imul
and
cmp
sete
push
mov
xor
cmp
pop
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
add
pop
pop
pop
pop
ret
mov
call
jmp
mov
mov
jmp
movzx
mov
mov
call
call
mov
jmp
mov
mov
sub
sub
mov
jmp
jmp
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
call
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
jnp
add
add
add
add
pushf
and
push
push
adc
mov
cmp
mov
mov
mov
xor
adc
aaa
pop
mov
fwait
mov
aam
(bad)
call
(bad)
and
pusha
and
sbb
and
push
and
mov
stos
call
mov
dec
pusha
sub
sub
add
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jno
xchg
mov
push
jne
lahf
jae
lahf
mov
sbb
or
mov
mov
and
add
jl
mov
nop
mov
adc
xor
inc
push
retf
xchg
popf
or
and
mov
jns
mov
mov
and
dec
and
(bad)
retf
jl
add
add
call
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
add
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
call
mov
mov
call
mov
cmp
setae
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
call
call
call
sub
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
movzx
mov
mov
add
sub
sub
add
sub
sub
add
add
sub
sub
add
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
add
sub
sub
add
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
pushf
xor
add
sub
popf
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
lea
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
jmp
nop
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
nop
push
mov
push
push
push
sub
mov
mov
call
mov
call
call
mov
mov
mov
mov
mov
call
mov
call
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
call
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
jg
jmp
mov
sub
call
jg
jmp
mov
sub
mov
jg
jmp
mov
add
call
jg
jmp
mov
sub
mov
jg
jmp
call
add
mov
jg
jmp
call
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
call
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
add
mov
jg
jmp
mov
add
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
add
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
call
sub
mov
je
jmp
mov
sub
call
je
jmp
call
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
call
je
jmp
call
sub
call
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
add
mov
je
jmp
mov
add
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
call
mov
mov
mov
mov
mov
call
mov
call
sub
mov
mov
mov
cmp
cmove
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
call
mov
mov
call
mov
mov
call
sub
mov
mov
mov
call
mov
mov
call
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
call
sub
mov
pushf
xor
add
sub
popf
mov
cmp
cmove
call
jmp
mov
jmp
lea
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
add
sub
sub
sub
sub
call
mov
cmp
cmovne
mov
jmp
mov
pushf
mov
sub
popf
mov
sub
sub
sub
sub
add
add
sub
add
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
call
jmp
mov
call
jmp
mov
mov
pushf
sub
popf
mov
mov
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
mov
add
add
mov
sub
sub
add
add
sub
add
call
sub
add
add
sub
sub
add
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
call
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
call
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
sub
sub
sub
mov
sub
add
mov
sub
add
add
mov
mov
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
mov
mov
call
mov
mov
jmp
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
nop
mov
ret
data16
call
ret
nop
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
data16
mov
ret
data16
call
ret
nop
mov
ret
nop
mov
ret
nop
mov
ret
data16
mov
ret
nop
call
ret
nop
mov
ret
