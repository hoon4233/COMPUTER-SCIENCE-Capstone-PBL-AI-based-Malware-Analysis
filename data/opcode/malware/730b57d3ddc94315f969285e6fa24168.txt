mov
adc
jecxz
xor
adc
aaa
cmps
sbb
jae
sbb
arpl
add
xor
rcl
ret
lahf
aad
ret
leave
mov
jo
add
adc
aaa
mov
mov
rcl
mov
mov
inc
ficom
stos
inc
div
in
pop
and
mov
neg
jg
xchg
in
test
adc
loopne
inc
and
cmp
cmc
mov
rcl
retf
popf
je
test
pop
sar
pop
inc
add
aaa
sub
outs
xchg
aaa
(bad)
dec
iret
ins
pop
clc
int3
hlt
cs
sbb
push
clc
cdq
test
mov
fidiv
sbb
inc
movs
shl
and
adc
cmp
xchg
aaa
rcr
cmp
xchg
in
sbb
loop
pop
outs
cdq
mov
jmp
mov
adc
aaa
pop
sbb
mov
fwait
xchg
aaa
cmps
imul
mov
pop
adc
pop
bound
mov
jno
and
lahf
shl
jno
and
inc
(bad)
imul
aaa
rcr
xchg
mov
shl
xor
out
sub
jne
popf
lods
add
xchg
outs
lea
arpl
int3
imul
mov
aas
cmp
adc
(bad)
cdq
cli
daa
test
hlt
sub
outs
mov
sbb
cmp
popf
enter
mov
movs
lahf
movs
mov
sub
inc
sbb
ret
cmp
push
cmp
movs
shl
fst
aaa
mov
adc
mov
sbb
mul
adc
aaa
rcl
aas
cmp
aaa
rcl
in
push
xchg
aaa
sar
mov
sub
in
sub
daa
bound
fistp
rcr
jne
cld
mov
rcl
repz
lods
nop
aaa
rcl
push
(bad)
xlat
adc
(bad)
movs
shl
shl
(bad)
rcl
aaa
cmp
xor
bound
pop
fldpi
jno
push
xchg
aaa
sar
inc
push
jae
xchg
aaa
rol
sar
push
xchg
pop
dec
add
aaa
xor
rcl
aaa
push
clc
and
dec
or
jb
cmp
adc
out
(bad)
xor
repz
jle
pop
sar
nop
adc
adc
xchg
pop
repnz
shl
cmp
aaa
shr
movs
pop
bound
enter
jne
jmp
pop
bound
mov
sar
loope
rcl
repz
mov
cwde
outs
xchg
aaa
sbb
cmc
xchg
rcl
aaa
adc
mov
rcl
cwde
movs
adc
test
(bad)
mov
loopne
sub
jbe
push
in
leave
sub
jle
pop
sar
pop
sar
rcl
ffreep
ins
xchg
aaa
pop
xlat
sub
lock
shl
outs
mov
cmps
adc
aaa
pop
xchg
test
rcr
nop
aaa
pop
xchg
imul
xchg
jle
jmp
xchg
cmp
out
shl
add
out
and
sub
adc
mov
sbb
xlat
and
adc
ret
lods
jg
rcl
rcr
jns
sub
sbb
jmp
jmp
hlt
jecxz
into
imul
inc
cs
sbb
div
rcr
aam
cmp
in
adc
aaa
mov
adc
inc
fsubrp
in
cmp
push
mov
pop
mov
rcr
push
fsubr
jmp
das
sub
or
aaa
sub
call
xchg
mov
cmp
addr16
(bad)
and
in
iret
shl
(bad)
rcl
aaa
cmp
xchg
aaa
jecxz
shr
fst
pop
icebp
adc
fiadd
mov
ss
aaa
shl
jbe
xchg
in
sbb
pop
push
ins
addr16
jle
enter
inc
(bad)
lds
adc
icebp
fnclex
in
jecxz
jp
sub
add
into
jle
enter
inc
cs
ror
adc
icebp
sub
ins
xchg
aaa
fnclex
in
jecxz
jp
jecxz
rcr
fistp
aam
pop
ror
imul
xchg
jge
add
jb
loop
test
pop
(bad)
mov
enter
jne
xchg
hlt
ret
rcl
cld
push
or
nop
cmc
pop
inc
imul
shl
aam
shr
sbb
sbb
xor
sbb
and
sub
sbb
push
fsubr
push
sub
hlt
cmps
add
jb
lahf
aam
jmp
gs
xlat
lahf
aam
cmp
sub
mov
shl
aam
xchg
popf
pusha
mov
jmp
mov
adc
push
inc
jle
aam
pop
push
cdq
mov
xchg
xchg
lods
shl
push
xchg
call
outs
enter
aaa
ror
ins
sbb
les
rcl
or
adc
test
inc
ficomp
ins
enter
push
sub
cs
enter
cmc
pop
sub
cmps
mov
cdq
mov
xchg
xchg
lods
shl
push
adc
cwde
icebp
push
adc
jp
pop
jecxz
and
pop
inc
cdq
mov
xlat
adc
test
scas
(bad)
sbb
pop
xchg
imul
es
enter
enter
mov
jmp
enter
enter
out
sti
in
mov
adc
sbb
rcl
enter
(bad)
adc
rcl
test
sbb
rcl
retf
ja
in
cmp
mov
shl
hlt
retf
pop
push
imul
stos
adc
mov
lahf
jbe
pop
aad
fst
out
xchg
imul
or
mov
pop
add
loope
push
cdq
icebp
(bad)
or
mov
es
aam
and
clc
sbb
dec
iret
ins
sbb
les
test
push
rcl
retf
loopne
ins
js
push
ins
mov
xchg
mov
clc
movs
adc
mov
lahf
jbe
pop
aad
fst
out
xchg
imul
or
mov
pop
add
loope
int
aaa
shl
hlt
retf
pop
push
imul
pop
push
cdq
icebp
(bad)
or
push
xchg
(bad)
mov
(bad)
rcl
retf
push
sub
push
ins
mov
xchg
outs
xor
jecxz
sub
cdq
cmp
mov
lahf
sbb
out
adc
jo
retf
in
xlat
push
jns
loop
adc
push
adc
ins
sbb
les
test
inc
fisubr
sbb
jecxz
sbb
sub
adc
inc
fidivr
nop
adc
fist
ins
mov
mov
inc
jns
das
jmp
addr16
dec
ins
je
inc
jns
das
jmp
mov
xor
pop
in
data16
imul
aaa
inc
shl
push
stos
sbb
xchg
mov
popf
aam
pop
shr
(bad)
mov
icebp
mov
jmp
aaa
rol
enter
aaa
mov
adc
(bad)
xchg
sbb
sbb
popf
push
icebp
(bad)
daa
xchg
mov
sbb
les
test
cmps
popf
mov
xchg
mov
mov
jne
adc
cmp
mov
jne
inc
sbb
sub
adc
(bad)
lahf
mov
sbb
das
sub
jecxz
mov
cmp
loope
ror
ins
sbb
les
add
jb
cmps
mov
sub
mov
push
jb
aaa
mov
adc
mov
ret
aaa
cmp
push
mov
adc
sbb
adc
popa
mov
jle
pop
rcr
lds
adc
hlt
jecxz
cwde
in
fisttp
cwde
mul
aam
addr16
lahf
xchg
enter
enter
aaa
rcl
hlt
push
sti
fnstcw
mov
stos
adc
in
jecxz
rcr
fstp
push
popa
cmp
outs
enter
test
cmp
inc
rcl
popa
test
sbb
sti
int3
sbb
push
sub
adc
in
push
xor
adc
shl
jmp
popf
cmp
nop
aaa
rcr
and
mov
adc
mov
mov
jne
adc
das
jae
xor
inc
sbb
sub
sahf
shl
xchg
mov
jno
xchg
aaa
mov
cdq
adc
sub
popa
popf
fisttp
aaa
mov
push
xchg
mov
sub
jmp
mov
sbb
ficom
xchg
aaa
cmp
aaa
rcl
xchg
mov
add
aaa
rcr
aam
pop
push
xchg
addr16
sub
pusha
into
popf
aam
push
imul
rcl
dec
cs
mov
adc
imul
nop
adc
enter
sbb
data16
xchg
dec
enter
hlt
sub
adc
jb
sub
xchg
inc
aad
mov
push
xchg
aaa
jae
and
iret
push
xlat
xchg
pop
rcl
aaa
cmp
loop
ror
out
jecxz
sbb
mov
aam
rcl
jb
popf
aam
jno
and
mov
lods
xchg
aaa
rcl
xchg
pop
imul
pop
pop
push
ins
mov
push
int3
outs
leave
sub
call
or
div
push
xchg
mov
jmp
aaa
pop
push
ins
adc
mov
adc
outs
addr16
xor
inc
sbb
sub
adc
jb
sbb
xchg
dec
push
xchg
enter
mov
push
jmp
enter
les
xchg
aaa
push
sub
inc
fnstenv
sar
imul
jmp
mov
mov
jne
adc
ja
adc
shl
adc
sub
dec
iret
ins
sbb
les
add
add
sti
pusha
dec
rcl
rcr
shl
xchg
aaa
push
jno
aaa
pop
push
cdq
mov
and
cmp
xchg
aaa
rcr
aam
rcl
aaa
pop
out
iret
and
popf
push
fsubr
pop
adc
ret
mov
rcl
lods
add
adc
jb
cdq
aad
rol
jo
xchg
(bad)
addr16
aaa
push
rcr
mov
adc
xor
mov
aam
xor
ins
aaa
push
imul
jb
xchg
xchg
mov
shl
cmp
iret
shr
sbb
push
jno
aaa
jecxz
sbb
and
popf
push
fmul
sbb
bound
inc
xor
sub
dec
(bad)
xchg
hlt
retf
rcr
push
jno
push
cdq
mov
and
cmp
outs
enter
retf
rcl
sahf
enter
pop
dec
push
xchg
fild
jns
aaa
cmp
lock
add
aaa
mov
adc
aaa
rcl
pop
ror
(bad)
aaa
rcr
sti
aaa
mov
jnp
aaa
pop
push
cdq
mov
xchg
xchg
lods
shl
mov
lahf
loopne
gs
in
jns
mov
cdq
aam
cmp
and
shl
sub
jnp
aaa
pop
in
data16
popa
mov
sub
jns
aaa
lea
(bad)
adc
shr
xchg
xor
rcl
popa
test
sub
popf
adc
sub
xchg
push
xor
adc
icebp
push
jmp
stc
shl
push
xchg
fbstp
xchg
gs
mov
jmp
enter
int3
sub
sbb
mov
adc
(bad)
gs
aaa
cmp
aaa
rcr
outs
mov
adc
and
sub
shr
sub
jmp
mov
sbb
or
shl
shl
(bad)
mov
xchg
aaa
and
jmp
enter
mov
jmp
enter
xchg
nop
adc
mov
pop
push
ins
adc
mov
push
mov
push
mov
sub
push
xchg
mov
sub
add
xchg
call
cmps
aas
rcl
hlt
jp
xchg
aaa
pop
xchg
push
enter
xchg
dec
mov
aaa
sbb
jb
sbb
cdq
aaa
sar
xchg
adc
adc
outs
enter
enter
aas
pop
rcl
mov
sub
jmp
pop
int3
mov
mov
jmp
enter
xchg
nop
adc
mov
pop
push
ins
adc
adc
aad
xchg
push
push
test
xchg
cmp
xchg
aaa
rcl
aaa
fst
sti
ss
cdq
adc
sub
mov
enter
cmp
idiv
sub
adc
cmp
aaa
enter
enter
cmp
xchg
aaa
rcr
es
jmp
enter
mov
jmp
enter
xchg
xchg
adc
int3
mov
sbb
leave
sub
mov
aaa
rcl
outs
aaa
push
sub
adc
nop
aaa
rcl
xchg
pop
sar
nop
adc
addr16
xchg
(bad)
loop
enter
or
xor
ss
cdq
sub
sub
sbb
sub
jmp
aaa
shl
lock
mov
xchg
aaa
sar
pop
adc
shl
mov
cld
jns
sub
sub
rcl
mov
push
xchg
mov
sub
jmp
mov
sbb
fcom
adc
sub
adc
pop
sar
nop
adc
addr16
xchg
fbstp
enter
or
xor
ss
cdq
sub
sub
popf
fs
cmp
jmp
aaa
shl
lock
mov
xchg
aaa
sar
pop
jno
shl
mov
cld
cmc
ret
adc
fisubr
outs
enter
adc
push
xchg
mov
sub
jmp
mov
sbb
fcom
adc
sub
adc
mov
push
mov
leave
sub
jl
xlat
nop
adc
addr16
xchg
ffreep
loope
enter
or
push
push
mov
jmp
enter
aaa
mov
push
xchg
pop
xor
sub
jmp
aaa
shl
lock
mov
xchg
aaa
sar
pop
stos
hlt
shl
mov
cld
pop
ret
sub
sub
rcl
mov
push
xchg
mov
sub
jmp
mov
sbb
iret
jle
pop
mov
test
(bad)
fild
outs
enter
or
push
push
mov
jmp
enter
aaa
push
out
cmp
adc
mov
outs
enter
icebp
xlat
fs
mov
jmp
enter
int
jmp
fadd
rcl
jae
xor
mov
adc
sbb
adc
ins
enter
fmulp
adc
xor
adc
mov
jmp
enter
jmp
jmp
mov
sahf
mov
adc
enter
mov
sub
inc
mov
xchg
call
sbb
push
imul
rcl
xchg
push
jmp
enter
popf
call
leave
sub
jmp
enter
adc
xchg
mov
aas
out
aaa
shl
mov
jmp
enter
mov
jmp
enter
aaa
pop
xchg
sbb
sub
sar
inc
sbb
sbb
out
and
jmp
enter
mov
jmp
enter
(bad)
nop
adc
mov
jmp
enter
enter
aaa
rcl
jb
sbb
xchg
aaa
rcr
outs
addr16
xchg
inc
enter
mov
rcl
mov
ror
sbb
push
imul
rcl
mov
jmp
enter
out
jmp
jmp
mov
pop
xchg
aaa
push
out
add
adc
sbb
jns
sub
sar
sbb
sub
call
xchg
shl
adc
sub
xchg
in
retf
rcr
adc
rcl
mov
sub
jmp
enter
enter
jb
popf
dec
push
or
xchg
cmp
xchg
aaa
rcl
xchg
mov
in
leave
sub
jmp
enter
jbe
cdq
adc
sub
and
push
cmp
jge
sub
xchg
(bad)
pop
xchg
aaa
mov
adc
mov
(bad)
aaa
shr
and
sub
jmp
stc
push
xor
mov
sub
adc
mov
add
out
sti
int3
sbb
mov
adc
sub
lahf
adc
sub
test
sub
jmp
sub
adc
ret
mov
adc
aaa
and
outs
enter
mov
rcl
xchg
pop
test
(bad)
mov
pop
push
ins
adc
adc
rcl
mov
mov
leave
sub
pop
xchg
aaa
pop
xchg
xor
pop
push
cmc
shl
pop
xchg
or
mov
rcl
aaa
pop
push
ins
adc
adc
rcl
mov
pop
enter
adc
sub
xchg
xor
mov
pop
push
ins
adc
adc
rcl
mov
mov
js
rcl
pop
sar
ins
pop
rcl
mov
adc
mov
jmp
enter
mov
jmp
enter
enter
mov
jmp
enter
inc
sub
add
shr
xchg
aaa
shl
xor
outs
leave
sub
repz
rcl
les
sub
sub
sub
cmps
popf
aam
push
(bad)
aaa
shl
jb
push
dec
outs
leave
sub
call
nop
aaa
rcl
outs
aaa
pop
xchg
adc
pop
mov
xchg
adc
sub
sar
xchg
aaa
pop
push
ins
adc
adc
rcl
mov
nop
outs
leave
sub
adc
icebp
enter
pop
shr
and
sub
nop
outs
leave
sub
inc
mov
xchg
call
sbb
push
imul
rcl
mov
je
leave
sub
adc
aaa
push
test
xchg
cmp
xchg
aaa
rcr
outs
addr16
jmp
dec
and
outs
mov
sbb
lock
popf
sub
sub
mov
aaa
rcl
aaa
fst
push
mov
jmp
enter
aaa
mov
jmp
enter
enter
pop
(bad)
hlt
shl
pop
xchg
ins
enter
fcomip
jle
aaa
push
rol
leave
sub
xchg
lods
shl
mov
sub
adc
enter
retf
adc
sub
xchg
imul
xlat
jmp
jns
mov
sbb
xor
ins
enter
pop
mov
shl
pop
xchg
ins
enter
fistp
jge
aaa
push
rol
aaa
rcl
outs
aaa
cmps
adc
mov
jmp
enter
enter
out
and
jmp
enter
mov
jmp
enter
enter
mov
jmp
enter
leave
sub
jmp
enter
enter
mov
jmp
enter
enter
mov
jmp
enter
enter
mov
jmp
enter
retf
sub
jmp
enter
icebp
push
jmp
sub
rcl
shl
adc
sub
lahf
adc
sub
and
popa
ficom
outs
aaa
cmps
sbb
mov
jmp
enter
enter
mov
jmp
enter
mov
sub
inc
cdq
mov
sub
inc
cdq
mov
sub
inc
cdq
mov
adc
outs
addr16
and
popa
(bad)
mov
sub
fst
pop
icebp
sti
enter
jne
jl
daa
xchg
adc
xchg
rcl
aaa
xor
rcl
aaa
push
clc
test
sbb
rcl
shr
and
sbb
jns
cwde
sahf
adc
lock
call
adc
fdiv
rcl
cmp
adc
mov
adc
and
outs
mov
xchg
and
jmp
cs
enter
lock
hlt
nop
aaa
rcl
jb
xlat
sbb
rcl
jmp
je
aaa
pop
imul
cmps
enter
push
ins
enter
push
xchg
in
xchg
rcl
aaa
inc
fst
rol
rol
les
xchg
call
and
pop
sar
xchg
adc
aaa
mov
adc
mov
mov
xchg
push
aaa
xchg
jge
add
or
sbb
shl
sbb
sub
adc
out
push
xor
mov
adc
mov
dec
push
xchg
aaa
push
xor
mov
sbb
ja
adc
xor
mov
aaa
(bad)
adc
aaa
adc
adc
aaa
rcl
call
(bad)
shl
frstor
xchg
adc
sbb
or
fwait
loop
rcl
adc
and
das
dec
push
xchg
ja
je
aaa
shr
xchg
inc
push
xchg
push
adc
jg
hlt
xchg
ja
push
imul
sar
scas
xor
retf
aaa
xchg
loop
paddusw
xor
aaa
shl
xchg
ds
aaa
rcl
test
xor
adc
(bad)
and
popf
push
(bad)
push
xchg
aaa
sub
adc
int
adc
enter
jne
loop
das
dec
push
xchg
daa
cmps
adc
aaa
rcl
xchg
mov
or
jbe
add
ja
push
xchg
xchg
ret
aaa
cmp
xchg
das
dec
push
xchg
xor
pop
xchg
aaa
rcl
xchg
mov
or
jbe
adc
sub
or
jbe
sbb
xor
aam
(bad)
rcl
mov
jne
aaa
rcl
aas
jb
or
mov
xchg
xchg
adc
aam
jmp
rcl
push
jbe
adc
js
rcl
mov
adc
pushf
das
dec
push
xchg
ss
adc
aaa
rcl
sub
rcl
push
jbe
push
in
jecxz
js
rcl
mov
sbb
aaa
rcl
xor
xchg
adc
aaa
rcl
mov
xlat
pusha
and
cmovge
mov
adc
pushf
das
dec
push
xchg
ja
adc
stos
xchg
adc
xor
mov
aaa
push
cli
aaa
shl
ja
xchg
in
icebp
push
sbb
fidiv
adc
aaa
jae
or
rcl
test
stc
rcl
xchg
xchg
(bad)
shl
rcl
cdq
cmps
xchg
adc
mov
adc
xchg
ds
aaa
rcl
test
cdq
rcl
enter
jne
xchg
xchg
cmovge
xor
rcr
push
mov
sub
jbe
pop
js
rcl
push
adc
pop
rcl
cmp
mov
aaa
repnz
push
jle
adc
mov
jo
xor
sbb
xor
aam
arpl
call
lods
shl
out
xchg
xchg
aaa
shr
or
outs
adc
daa
jne
xchg
pushf
das
dec
push
xchg
ja
and
cmps
mov
xor
dec
push
xchg
xlat
sub
jbe
push
jbe
popf
popa
push
and
push
jbe
push
jp
jecxz
js
rcl
mov
mov
xchg
inc
push
xchg
rcl
push
jbe
push
sahf
mov
adc
aaa
pop
(bad)
mov
nop
adc
(bad)
sti
in
icebp
frstor
xchg
adc
adc
aaa
pop
push
push
fs
xchg
nop
adc
xlat
aad
aam
frstor
xchg
aaa
rcr
adc
mov
out
rol
jmp
aas
inc
push
xchg
mov
or
aaa
rcr
daa
jb
sub
aaa
rcl
cmp
push
or
adc
xchg
mov
push
or
push
in
push
imul
sub
in
push
adc
fcom
popa
mov
fisttp
jbe
xchg
sbb
shl
sbb
pop
(bad)
mov
xchg
adc
adc
xchg
jno
pop
push
imul
xchg
in
int3
shl
mov
sbb
ja
adc
(bad)
sti
in
icebp
push
xor
fmul
popf
pop
jbe
add
aaa
pop
adc
xlat
sbb
ja
mov
cmps
xchg
adc
xor
test
aaa
mov
xor
cmps
xchg
adc
fmul
popf
pop
jbe
add
aaa
pop
adc
xlat
sbb
ja
mov
test
adc
xor
test
aaa
mov
mov
mov
ja
and
pop
hlt
xchg
(bad)
mov
fcom
aaa
shl
ja
xchg
call
in
nop
adc
ds
dec
xchg
aaa
pop
sar
and
push
xchg
pusha
cmp
int
nop
adc
pop
push
gs
aaa
shl
sub
xchg
shl
or
xchg
pusha
cmp
aaa
shl
stc
jl
push
xchg
pusha
cmp
aaa
shl
stc
imul
into
aaa
shl
into
imul
xchg
jge
add
dec
pop
int3
nop
out
pop
xlat
outs
xor
nop
sub
cdq
aam
sub
imul
lock
cld
mov
rcl
out
ror
sbb
push
jno
aaa
pop
push
cmp
es
xchg
aaa
rcl
xchg
mov
in
xchg
mov
call
and
out
popf
dec
push
or
xchg
lock
int3
nop
aaa
rcl
jb
adc
not
rcl
aam
push
or
push
hlt
outs
xor
push
and
mov
neg
jb
popf
push
lock
mov
adc
adc
dec
outs
cdq
in
imul
aaa
shl
xor
xchg
cld
rcr
xchg
aaa
pop
push
jne
sub
adc
out
jecxz
sbb
pop
push
or
jb
inc
sti
aaa
mov
adc
ss
or
jb
inc
outs
inc
jbe
aam
cmp
jo
xchg
aaa
sub
adc
aaa
sub
jle
pop
(bad)
jle
enter
dec
mov
xchg
(bad)
sbb
and
popf
push
enter
fmul
pusha
and
fild
push
jne
sub
adc
jb
call
aaa
ror
ins
sbb
les
adc
push
fidivr
popf
aam
and
enter
lahf
aam
pop
push
popa
mov
sub
inc
mov
cmp
pop
sar
mov
xchg
cld
ror
in
sti
aaa
pop
push
gs
jmp
pop
dec
push
xchg
mov
push
jns
es
adc
(bad)
adc
rol
or
mov
adc
push
xchg
enter
enter
test
adc
shr
popf
aam
pop
ror
(bad)
adc
rcl
popf
test
inc
ficomp
in
nop
adc
enter
or
jmp
aaa
shl
cmp
ss
jmp
aaa
shl
cmp
xor
shl
cmp
xor
jmp
aaa
shl
cmp
xor
jmp
aaa
rcr
adc
mov
rcl
sbb
in
pushf
test
adc
outs
aaa
frstor
xchg
xor
mov
sahf
mov
adc
aaa
pop
out
fstp
add
mov
sub
test
jmp
in
pop
out
adc
rcr
daa
and
sub
imul
adc
inc
mov
daa
jb
jg
cmp
xchg
pop
outs
push
xchg
cmp
aaa
rcr
daa
bound
add
cmp
imul
sbb
xchg
pop
enter
mov
sub
xchg
jb
xchg
jns
pop
push
gs
rcl
nop
iret
push
cld
xchg
mov
xlat
adc
mov
fs
outs
pop
adc
adc
xlat
(bad)
sub
cmp
outs
cmp
outs
enter
inc
push
xchg
mov
sub
jg
sub
iret
push
cld
xchg
mov
adc
mov
pop
adc
aam
in
pop
in
adc
(bad)
sbb
xor
sub
inc
shr
aaa
rcl
(bad)
xchg
lods
xor
popa
xchg
pop
inc
test
mov
adc
xor
adc
lods
or
popa
hlt
mov
aam
in
pop
in
adc
rcl
mov
push
sub
iret
push
cld
xchg
cmp
or
adc
aaa
cmps
adc
std
xchg
pop
enter
mov
sub
nop
out
push
cld
xchg
mov
ret
xor
adc
sbb
popf
test
rcl
aaa
push
sub
iret
call
mov
push
sub
iret
push
cld
xchg
mov
adc
mov
adc
or
adc
inc
aad
outs
aaa
rcl
das
cmp
les
pop
inc
xor
out
adc
(bad)
popf
xchg
and
adc
aaa
xchg
xchg
outs
aaa
(bad)
adc
cmp
ins
enter
ins
sbb
les
add
jne
lahf
in
cmp
mov
or
adc
ds
xchg
outs
(bad)
adc
inc
and
xchg
inc
rcl
fidivr
jns
rcl
icebp
movs
int3
js
rcl
mov
push
outs
xor
mov
xchg
mov
xchg
adc
in
pop
in
nop
out
cmp
shr
and
xor
sub
rcl
aaa
shl
mov
call
dec
xor
call
test
sub
test
aaa
jmp
ins
inc
cmp
mov
(bad)
or
xor
cdq
aad
rcr
sbb
ror
mov
in
rol
sbb
cdq
aad
rcr
xchg
sub
test
aaa
push
out
xchg
inc
pop
xchg
pop
enter
in
sti
les
int
into
nop
out
cld
xchg
mov
loope
sbb
int3
adc
or
rcl
sbb
int3
adc
mov
cmp
xchg
aaa
add
aad
jmp
and
pusha
ins
enter
cmp
inc
sbb
push
mov
sar
pop
outs
rcl
popa
test
dec
into
sub
retf
outs
enter
outs
rcl
aaa
rcl
inc
aad
adc
or
xchg
(bad)
fsubr
pusha
and
mov
retf
outs
enter
cmp
fsubr
je
jne
adc
jb
sub
sbb
mov
sti
outs
enter
push
outs
push
xchg
xor
frstor
outs
mov
sub
sbb
cmp
add
or
outs
mov
xchg
adc
add
pop
sub
pushf
jmp
adc
xchg
mov
sub
(bad)
shl
cmp
leave
aaa
rcr
outs
mov
xchg
adc
mov
sti
outs
enter
mov
sti
outs
enter
mov
adc
nop
adc
cmp
outs
enter
les
mov
outs
div
push
adc
(bad)
xor
ja
adc
mov
adc
les
push
sbb
mov
or
pusha
and
aam
jmp
aaa
fst
jns
sub
outs
mov
sub
push
xchg
mov
sub
add
les
shl
pop
xchg
fsubr
xor
xchg
cmp
push
mov
adc
and
enter
aaa
ret
or
loopne
enter
mov
sub
adc
enter
jne
xchg
xor
cmp
cwde
xchg
aaa
sar
rcl
cmp
outs
enter
call
sub
outs
mov
sbb
jb
sbb
xor
or
outs
aaa
pop
mov
jmp
jecxz
sbb
adc
xchg
div
push
xchg
bound
lahf
movs
lea
xchg
or
test
in
xchg
xchg
outs
aaa
(bad)
adc
inc
setne
rcl
inc
fstp
xchg
aaa
pop
xchg
adc
sub
xlat
xchg
daa
rcl
int3
shl
xchg
aaa
movs
mov
call
clc
jle
sub
lahf
adc
or
outs
sbb
xchg
jge
sub
jmp
enter
adc
outs
enter
aaa
sar
shl
adc
add
jae
pop
add
inc
loopne
enter
ret
cmp
and
rcr
push
(bad)
rcl
fmul
pop
sbb
call
es
outs
enter
mov
adc
xchg
xor
call
xchg
enter
enter
ret
cmp
adc
inc
gs
inc
push
xchg
mov
test
mov
cld
cmp
adc
mov
retf
pop
(bad)
xchg
and
sub
stos
or
outs
mov
ins
xchg
xor
sub
retf
pop
or
cmc
into
pop
xchg
mov
sub
jmp
mov
sub
test
sub
jmp
mov
sub
jmp
pop
into
cdq
adc
or
mov
jns
test
mov
sub
jmp
inc
xchg
lahf
adc
or
mov
adc
or
test
mov
jle
mov
sub
lahf
add
or
sbb
pop
fist
aaa
sub
jmp
lods
sub
adc
add
jae
pop
cdq
dec
call
push
retf
outs
enter
pop
inc
push
xchg
cmp
fsubr
lahf
test
repnz
aaa
pop
and
ret
cmp
(bad)
aaa
rcr
outs
adc
adc
rcl
mov
sbb
cmp
nop
aaa
rcr
outs
cmp
(bad)
adc
inc
fst
or
adc
fmulp
adc
fsubr
adc
jnp
pop
push
xchg
xor
jne
sub
retf
rcl
outs
xor
jne
sub
xchg
test
(bad)
push
cld
xchg
mov
adc
sub
adc
rcl
(bad)
push
cld
xchg
mov
adc
cmp
xlat
xchg
test
fcomp
jmp
inc
push
xchg
cmp
jmp
rcr
outs
enter
jmp
adc
les
xchg
aaa
push
cld
outs
mov
push
lock
enter
mov
push
loopne
enter
push
and
stos
mov
retf
outs
enter
call
daa
mov
adc
xchg
mov
sub
xchg
lods
or
adc
aaa
shl
mov
sub
inc
int3
xchg
lods
or
adc
aaa
shl
mov
sub
inc
fcom
aaa
shl
jo
fcomp
enter
dec
ja
in
aas
shl
cmp
fsubr
enter
jmp
jecxz
jmp
fbld
popf
mov
test
push
mov
fsubr
loopne
enter
xor
rcl
jo
rcr
mov
sub
jmp
ret
cmp
loopne
enter
aaa
shl
enter
jne
std
mov
mov
sti
outs
enter
mov
sti
outs
enter
mov
adc
nop
adc
cmp
push
sub
xlat
les
add
jb
jmp
shl
adc
outs
ss
imul
shr
bound
xchg
fcomp
jb
jecxz
sti
pop
push
push
mov
or
xchg
mov
adc
aaa
and
movs
mov
aad
xchg
aaa
and
stos
aaa
rcl
mov
jmp
mov
rcl
sbb
rcl
leave
sar
xchg
sub
aad
xor
jmp
(bad)
xchg
aam
rcl
icebp
xchg
jmp
xchg
aaa
pop
pop
sahf
add
adc
aaa
push
push
imul
fs
nop
or
adc
aaa
scas
jbe
adc
push
in
push
push
outs
frstor
adc
aad
imul
push
adc
xlat
popa
cwde
mov
push
in
xor
outs
frstor
nop
mul
xchg
imul
sub
popf
push
push
adc
shl
not
xchg
aaa
shr
adc
rcl
xor
outs
xor
mov
xchg
aaa
cmps
push
addr16
sub
xor
outs
xor
ins
ss
imul
jmp
jb
adc
and
sahf
add
push
outs
cmp
adc
adc
jecxz
push
jns
popf
xchg
adc
cmp
mov
adc
inc
(bad)
xchg
aam
rcr
daa
jb
dec
iret
ins
sbb
les
pop
popa
cdq
mov
dec
jns
call
and
adc
enter
popa
mov
adc
mov
xchg
xchg
lods
shl
mov
out
sub
inc
aad
aad
rcl
xor
stc
sbb
jecxz
sbb
lea
push
inc
sbb
push
mov
sar
mov
rcl
pusha
ins
lods
jmp
sti
popf
imul
or
cmp
in
test
in
pop
xchg
xchg
xlat
sub
inc
xchg
aaa
pop
xchg
xchg
xlat
sub
adc
aaa
push
rol
mov
mov
push
bound
(bad)
mov
sbb
or
rcl
aaa
mov
jle
fisttp
aaa
lea
bound
adc
fiadd
pusha
ins
mov
data16
adc
pop
sar
rcl
xor
adc
xor
adc
aaa
push
jmp
aas
cmp
ret
aaa
rcr
in
push
imul
aaa
pop
in
data16
gs
cmp
cmp
shl
popf
push
mov
add
pop
xchg
cld
push
data16
jb
xchg
jle
rcl
pop
rcl
cdq
mov
call
jb
jmp
ret
sub
pop
data16
fistp
inc
xchg
aaa
pop
push
ins
(bad)
popf
imul
mov
hlt
xchg
(bad)
mov
cmp
iret
pop
sar
aaa
mov
jle
pop
sar
pop
rcl
imul
inc
xchg
aaa
pop
rcl
lock
sbb
inc
(bad)
and
xchg
pop
sar
popa
cmp
aam
pop
aad
jmp
adc
into
pop
xlat
sti
aaa
pop
inc
ins
gs
pop
data16
aaa
pop
push
ins
addr16
push
xchg
popa
cmp
out
cli
adc
popa
cmp
aaa
shr
imul
inc
(bad)
mov
xor
aaa
shl
jbe
xchg
in
sbb
mov
adc
pop
(bad)
jle
pop
sar
rcl
outs
inc
(bad)
jno
rcl
icebp
pop
in
data16
gs
cmps
adc
xor
test
jne
rcl
aaa
pop
push
ins
addr16
sbb
fucomip
inc
xchg
aaa
pop
in
mov
fild
xchg
aaa
jecxz
shr
fst
pop
icebp
shl
inc
fcmovbe
aam
cmp
jbe
jns
mov
or
daa
xor
adc
popf
dec
es
outs
inc
fidivr
nop
adc
dec
adc
je
adc
or
push
xchg
fistp
rol
cmp
addr16
cld
lds
adc
ficom
push
push
call
rcl
dec
fisubr
popa
mov
cld
mov
repz
nop
cmc
pop
inc
ins
push
xchg
(bad)
mov
(bad)
aam
add
push
dec
push
push
ins
repz
adc
pop
jmp
loope
aaa
ror
enter
adc
hlt
shl
cmp
ret
aaa
rcl
inc
cmp
nop
adc
clc
adc
pop
push
ins
mov
xchg
into
imul
inc
(bad)
pusha
imul
push
adc
xchg
hlt
fcmovnbe
xchg
hlt
(bad)
xchg
hlt
rcl
cdq
in
lds
or
rcl
les
or
rcl
aam
push
dec
mov
shl
push
adc
lahf
aam
frstor
outs
fdivr
lods
jg
rcl
aam
push
dec
mov
sub
in
test
imul
ds
adc
jae
xchg
aaa
push
jns
ss
imul
ficomp
es
pushf
aam
cmp
adc
xor
xchg
aaa
frstor
aad
and
jns
scas
jmp
rcl
leave
shl
mov
xchg
int3
sbb
pop
push
popf
cmp
sbb
sbb
and
mov
mov
push
ss
lock
ror
sbb
pop
pop
jns
sbb
aam
frstor
sbb
adc
popf
cmp
xchg
mov
adc
out
mov
push
ss
lock
sbb
ja
lahf
les
frstor
nop
jb
lahf
aam
cmp
sbb
ror
sbb
lea
(bad)
adc
inc
test
(bad)
rol
aaa
inc
scas
adc
mov
xchg
push
cmps
inc
test
inc
cld
test
cmps
inc
and
add
test
cmps
inc
push
add
inc
test
cmps
inc
push
add
or
cmps
inc
test
(bad)
shl
(bad)
nop
adc
mov
xchg
push
cmps
inc
test
inc
into
test
cmps
inc
and
add
sub
add
test
cmps
inc
jne
cmps
inc
test
push
cmp
icebp
cmps
inc
test
cmps
mov
xchg
aaa
rcl
cmps
inc
test
cmps
xlat
outs
lods
ja
test
pop
or
cmps
inc
test
jg
test
cmps
pop
inc
cdq
cmps
inc
test
cmps
push
xlat
xchg
cmps
inc
test
cmps
scas
clc
add
fiadd
cmps
inc
test
inc
add
inc
test
fisub
ins
enter
aaa
push
call
shl
aaa
xchg
sbb
adc
inc
test
(bad)
rol
aaa
inc
jle
cmps
inc
test
push
inc
xchg
imul
add
xchg
adc
mov
inc
cmp
add
add
cmps
inc
test
mov
inc
jecxz
cmps
inc
test
cmps
inc
test
cmps
inc
dec
add
stos
or
cmps
inc
test
sub
cmps
inc
test
(bad)
shl
aaa
inc
test
inc
add
nop
adc
mov
inc
cmp
add
add
cmps
inc
test
mov
inc
jecxz
cmps
inc
test
cmps
inc
test
cmps
inc
dec
add
xchg
sbb
inc
and
add
sub
cmps
inc
test
push
inc
test
cmps
inc
jae
or
jmp
sbb
push
clc
mov
sbb
lahf
aam
mov
aam
adc
sub
mov
rcl
sbb
and
popa
aaa
sar
dec
aaa
rcl
out
shl
rcr
jecxz
enter
mov
sub
xor
imul
ds
popf
adc
mov
lods
adc
mov
adc
aaa
frstor
mov
mov
dec
jecxz
mov
push
(bad)
aaa
shl
hlt
retf
pop
push
jns
xchg
call
loope
(bad)
sub
inc
ret
and
ret
jp
cmp
daa
xor
sub
rcl
daa
pop
int3
nop
(bad)
xchg
sbb
daa
frstor
sbb
push
push
ins
xchg
jl
aaa
rcl
jb
inc
jns
pushf
adc
cmp
addr16
int3
nop
mov
(bad)
pop
xchg
aaa
mov
inc
sbb
shl
rcr
pop
xchg
aaa
push
shl
inc
and
jb
sbb
jb
pop
test
fst
into
imul
inc
(bad)
pusha
imul
push
cmp
xchg
fistp
xchg
xor
inc
sbb
and
out
pushf
imul
or
mov
push
sub
nop
adc
inc
aad
push
ficom
push
jno
sub
in
outs
enter
mov
push
aas
xchg
aaa
rcr
daa
dec
cmp
add
(bad)
sub
mov
popf
in
fild
aad
xor
outs
push
xchg
mov
outs
push
xchg
pusha
cmp
fdiv
sar
pop
rcr
sub
rcl
aam
cmp
jp
adc
repz
mov
inc
aaa
rcr
sbb
add
adc
adc
jmp
xchg
xor
fsubr
mov
push
xchg
mov
push
ret
jecxz
mov
pop
in
jb
lahf
test
outs
push
xchg
push
ret
iret
(bad)
mov
mov
test
imul
adc
jb
cld
cmc
jp
adc
dec
push
sbb
enter
add
jae
fcmovnb
sbb
add
pop
rcl
je
adc
mov
lahf
adc
mov
sub
(bad)
push
aad
sbb
sub
sar
pop
push
shl
pop
in
xor
test
jno
rcl
repz
sbb
inc
aaa
rcr
sbb
add
adc
adc
jmp
xchg
xor
fsubr
mov
push
xchg
mov
pop
in
jb
lahf
test
outs
push
xchg
push
ret
(bad)
(bad)
mov
mov
test
popa
inc
or
shr
cmp
xor
add
stos
mov
outs
push
xchg
cmp
out
lahf
test
pop
sbb
nop
adc
cmp
xchg
push
adc
adc
mov
sti
nop
inc
(bad)
xchg
cld
(bad)
sbb
jb
inc
sbb
rcl
push
mov
call
cdq
pop
sar
pop
sar
pop
sar
rcl
(bad)
cdq
jle
adc
jb
xchg
bound
adc
pop
rcr
in
test
in
cmp
aaa
shr
in
cmp
jns
call
cmp
scas
aaa
shl
jb
xchg
rcr
lea
(bad)
adc
rcl
mov
test
sub
xor
adc
das
jmp
mov
push
xchg
popf
rcl
mov
rcr
push
fild
aaa
push
inc
sbb
and
aad
sub
ficomp
out
popf
push
mov
push
sbb
pop
sub
sub
test
aaa
rcr
daa
dec
sub
add
mov
sub
push
into
int
pop
mov
push
(bad)
lock
sub
adc
cdq
inc
sbb
adc
sub
inc
fidiv
rcr
in
adc
xchg
enter
icebp
push
adc
sub
dec
xchg
aaa
pop
xchg
outs
leave
sub
mov
aaa
mov
cdq
adc
das
jmp
cmp
fidiv
sar
pop
sar
pop
sar
pop
rcl
ja
xchg
push
sub
push
xchg
aaa
pop
xchg
gs
outs
inc
fisubr
(bad)
pop
xchg
aaa
mov
jmp
nop
das
rcl
iret
outs
push
xchg
enter
enter
jg
adc
(bad)
shl
sbb
sub
jmp
hlt
xchg
adc
enter
jne
inc
stc
jmp
outs
enter
mov
out
ins
enter
jmp
push
xchg
mov
sub
adc
fild
xchg
fdiv
shl
ja
push
cld
ins
enter
enter
jne
jl
call
or
jmp
enter
aaa
rcl
fcomip
adc
aaa
cmp
or
adc
mov
sbb
arpl
into
dec
rcl
imul
inc
(bad)
pusha
pop
popa
test
pop
in
mov
xor
in
data16
gs
rcr
aam
cmp
in
adc
aaa
mov
adc
inc
fsubrp
in
cmp
pusha
mov
jmp
mov
adc
aam
sub
adc
or
fwait
adc
mov
sub
retf
cmp
fnstenv
ror
ins
sbb
les
stc
jbe
mov
add
in
cmp
(bad)
aaa
sar
addr16
add
inc
fsubrp
in
cmp
xchg
aaa
rcl
push
bound
shl
lods
add
popf
imul
pop
sar
xor
inc
outs
inc
ret
cmp
adc
aaa
push
ror
mov
ins
lods
(bad)
fstp
popf
push
mov
xchg
call
xchg
aaa
rcl
aaa
mov
popa
popf
enter
ins
call
push
adc
cmps
enter
inc
(bad)
jmp
sub
jmp
retf
cmp
aaa
rcr
in
cmp
fnstenv
shl
imul
cmps
call
xchg
push
adc
adc
rcl
and
push
mov
push
mov
push
jecxz
jno
adc
xor
popf
imul
xchg
call
xchg
aaa
mov
jmp
aas
cmp
(bad)
aaa
rcr
push
fsubr
cdq
aam
add
mov
jmp
retf
cmp
(bad)
aaa
rcr
in
cmp
(bad)
aaa
shl
in
cmp
es
call
aaa
and
popf
push
push
pop
icebp
shl
cs
mov
mov
rcl
xchg
aaa
cmps
aaa
jns
xchg
adc
cmp
rcr
mov
retf
pop
push
xchg
push
xchg
in
in
jecxz
rcr
xchg
jle
pop
adc
adc
aaa
mov
push
xchg
fisttp
call
data16
popa
xchg
push
adc
xchg
out
inc
jne
cld
fnstenv
adc
jb
call
aaa
ror
(bad)
adc
sbb
sti
fcomp
neg
mov
pop
add
call
fcmovbe
les
test
popf
lock
call
sbb
popf
push
push
adc
jp
push
sub
iret
sti
int3
sar
popa
sbb
push
rcr
mov
rcl
iret
push
aam
fdivr
add
or
popa
push
or
mov
sub
jg
sub
jb
rcl
mov
adc
mov
pop
in
out
cmp
jae
adc
lock
push
ins
mov
adc
ds
adc
sbb
pop
push
ins
mov
xchg
sbb
shr
jp
jecxz
into
imul
inc
(bad)
pusha
pop
dec
cdq
lock
in
pop
pop
adc
inc
and
mov
fs
adc
mov
add
adc
fiadd
ja
xchg
shl
rcr
jp
frstor
loopne
adc
cmp
mov
sbb
loope
stos
inc
sub
mov
in
or
adc
lock
jmp
scas
jmp
imul
aaa
ror
adc
mov
sbb
imul
aaa
shr
data16
(bad)
xchg
mov
push
shl
pusha
pop
imul
rol
dec
xchg
adc
mov
add
enter
adc
ds
mov
push
bound
sub
push
xchg
fild
(bad)
mov
repnz
mov
loopne
leave
sub
jmp
enter
iret
sub
popa
popf
fisttp
outs
enter
mov
and
xchg
push
adc
mov
mov
jmp
enter
cmp
push
faddp
pop
xchg
aaa
sub
push
xchg
aaa
pop
xchg
dec
enter
rcl
shl
leave
sub
jmp
outs
retf
sub
sub
add
call
inc
sti
ja
inc
shl
rcr
outs
mov
lahf
in
shr
in
mov
cld
sub
adc
(bad)
sti
in
icebp
pop
push
cdq
mov
sub
jmp
mov
adc
push
pop
ficomp
outs
sub
pop
pop
jmp
mov
sbb
bound
sbb
mov
push
sbb
jns
push
xchg
enter
leave
sub
adc
repz
test
cmp
and
imul
enter
pusha
xchg
adc
mov
sbb
(bad)
jecxz
sbb
cmp
aam
shr
or
sub
jns
xchg
adc
mov
jecxz
gs
test
(bad)
pop
in
retf
shl
test
imul
cld
dec
jae
adc
cmp
and
imul
enter
rcl
stc
add
call
jne
rcl
repz
xor
adc
cmp
and
imul
enter
mov
sbb
dec
xchg
adc
mov
adc
aaa
dec
jecxz
mov
adc
adc
jge
aaa
shr
or
sub
mov
jmp
enter
call
mov
xchg
aaa
push
rol
and
push
call
stc
push
or
pop
aad
rcl
push
outs
rcl
adc
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
push
xchg
aaa
push
rcr
aaa
sub
jmp
sbb
sbb
fcom
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
push
xchg
aaa
push
rcr
aaa
sub
jmp
rcl
jns
xchg
adc
mov
adc
aaa
dec
jecxz
mov
adc
adc
mov
aaa
shr
or
sub
mov
jmp
enter
call
dec
push
xchg
aaa
push
rol
aaa
and
jmp
enter
pop
xchg
adc
mov
pop
xchg
aaa
dec
jecxz
gs
cdq
sub
sub
jns
aaa
rcr
outs
addr16
call
stc
out
push
xchg
cmp
aaa
rcl
shl
shr
or
sub
jns
xchg
adc
mov
jecxz
gs
test
(bad)
pop
in
retf
shl
test
lea
adc
ret
shl
mov
rcl
cmp
and
imul
enter
cmp
sbb
cld
nop
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
fisttp
shr
and
sub
push
xchg
aaa
push
rcr
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
mov
mov
cmps
add
mov
jmp
enter
jmp
lods
push
xchg
aaa
push
rol
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
shl
shr
or
sub
stc
(bad)
xor
enter
leave
sub
adc
repz
test
adc
cmp
and
imul
aaa
ror
sub
sub
sub
rol
enter
mov
add
dec
repnz
mov
adc
push
enter
ficomp
xchg
xchg
aaa
sub
inc
loop
rcl
outs
aaa
cmp
mov
jmp
enter
enter
mov
jmp
enter
mov
jmp
enter
enter
sub
push
xchg
aaa
ror
lock
in
sub
popf
clc
push
jns
not
rcr
outs
mov
test
outs
pusha
mov
cdq
sub
shr
outs
pusha
cmp
aaa
rcl
les
shl
ja
push
lods
outs
retf
push
enter
retf
sub
sub
adc
cmp
outs
enter
ret
sub
or
mov
adc
enter
retf
sub
jo
jne
inc
jns
xchg
adc
mov
or
enter
mov
adc
aaa
dec
jecxz
mov
adc
and
dec
dec
jne
jmp
retf
sub
push
xchg
aaa
push
rcr
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
mov
cwde
xchg
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
push
xchg
aaa
push
rcr
retf
xchg
aaa
shr
adc
sub
in
outs
leave
sub
jmp
outs
enter
fld
jecxz
mov
sub
adc
lea
sub
adc
mov
adc
enter
or
adc
mov
adc
aam
xlat
adc
aaa
shr
outs
cmp
nop
aaa
rcr
outs
mov
sub
dec
dec
jne
cdq
adc
sub
or
push
cmp
gs
jmp
adc
into
pop
shl
mov
sub
popf
push
mov
sub
shr
sub
jmp
enter
or
adc
mov
jmp
enter
iret
sub
popf
adc
sub
loopne
leave
sub
mov
sbb
cmp
adc
fbstp
aaa
push
ror
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
nop
(bad)
pop
sar
in
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
fisttp
shr
and
sub
sub
(bad)
sub
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
popa
enter
hlt
jmp
push
xchg
shr
adc
sub
adc
enter
sub
outs
enter
shr
adc
sub
sbb
sub
outs
pop
call
mov
jns
in
adc
mov
sbb
hlt
in
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
dec
dec
jne
jmp
retf
sub
sub
fisttp
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
rcr
push
enter
icebp
cmp
aaa
shr
or
sub
stc
(bad)
xor
enter
leave
sub
adc
repz
nop
adc
sub
outs
enter
aaa
rcl
scas
aaa
shr
or
sub
jns
in
adc
mov
jecxz
gs
test
(bad)
pop
in
retf
shl
test
mov
rcl
repz
or
adc
cmp
and
imul
enter
sub
adc
mov
sbb
ror
xchg
aaa
cmp
lods
aaa
shr
or
sub
stc
cld
or
xchg
enter
leave
sub
adc
repz
and
rcl
cmp
and
imul
enter
clc
out
adc
mov
sbb
mov
fcom
aaa
dec
jecxz
mov
adc
adc
ins
lods
aaa
shr
or
sub
mov
jmp
enter
call
movs
sub
pop
sti
retf
sub
jmp
mov
adc
mov
sbb
(bad)
sti
in
icebp
cmp
lods
aaa
shr
or
sub
stc
(bad)
xor
enter
leave
sub
adc
repz
nop
adc
sub
outs
enter
aaa
rcl
lods
aaa
shr
or
sub
stc
(bad)
xor
enter
leave
sub
adc
repz
nop
adc
sub
outs
enter
aaa
rcl
xchg
and
adc
lock
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
sub
mov
sub
jmp
enter
jmp
je
xchg
aaa
push
rol
aaa
imul
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
dec
jne
jmp
retf
sub
sub
fistp
xchg
aaa
ror
xchg
dec
sar
adc
sub
outs
enter
aaa
rcl
jmp
aam
retf
push
(bad)
sub
aaa
ror
adc
ret
aaa
test
outs
pusha
mov
inc
jns
out
adc
mov
add
fsubr
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
sub
pop
or
shl
sub
jmp
int3
jmp
sbb
sub
xchg
mov
adc
aaa
dec
jecxz
mov
adc
and
in
jne
jmp
retf
sub
das
xchg
aaa
push
rcr
aaa
sar
sbb
cmp
and
imul
aaa
ror
sub
sub
sub
rol
inc
jmp
add
out
push
xchg
enter
leave
sub
adc
repz
pop
sar
pop
sar
pop
rcl
ja
popa
cdq
(bad)
sub
aaa
pop
xchg
jns
das
jmp
icebp
dec
imul
mov
adc
pop
rcr
outs
pusha
sub
retf
sub
cld
outs
retf
icebp
psrld
cmp
ins
enter
aaa
shr
and
sub
and
(bad)
pop
rol
fild
aaa
pop
xchg
jge
das
jmp
imul
adc
fdiv
pop
sbb
and
jmp
sub
mov
sbb
nop
adc
mov
jmp
rcl
iret
jecxz
sbb
mov
push
xchg
mov
sub
adc
fbld
ror
mov
mov
sub
jne
jl
jmp
adc
add
outs
enter
jne
jl
jmp
adc
fmul
push
xchg
pop
rcl
mov
popf
popa
enter
pop
push
sti
int
rcl
(bad)
adc
rcl
add
popa
test
sbb
jecxz
sbb
push
mov
retf
xchg
mov
rcr
add
mov
sub
adc
push
cwde
ins
enter
push
sub
aam
pop
rcl
icebp
xlat
inc
jns
in
xchg
mov
rcl
sar
sub
adc
mov
sub
jmp
fcomip
and
mov
sub
cdq
lds
dec
jmp
nop
iret
pop
rol
(bad)
and
retf
outs
xor
enter
aaa
rcr
outs
enter
enter
add
adc
(bad)
ficomp
outs
mov
pop
pusha
ins
enter
cmp
rcl
mov
push
jecxz
add
add
xchg
fild
aaa
pop
xchg
add
sar
xchg
aaa
mov
xchg
xor
(bad)
sub
movs
aaa
rol
jmp
xchg
pop
(bad)
adc
and
pop
jge
shl
mov
jl
aaa
rcl
mov
xor
fbstp
aaa
jecxz
js
rcl
(bad)
jmp
rcr
outs
addr16
xchg
and
fbstp
mov
outs
add
enter
retf
outs
sbb
enter
retf
outs
xor
enter
sub
outs
cmp
enter
pop
pop
xchg
or
mul
and
rcl
xchg
pop
jb
shl
pop
xchg
ins
leave
sub
sub
aaa
pop
in
mov
mov
jmp
adc
sub
outs
cmp
sar
pusha
fsubr
jmp
sti
aaa
pop
xchg
sub
sub
sub
aaa
push
ror
mov
sub
outs
jae
adc
lock
lock
enter
aaa
shl
mov
jmp
push
jmp
lea
xchg
jns
sub
ror
mov
jmp
sub
mov
enter
mov
jmp
sar
pop
sar
pop
rcr
outs
addr16
adc
adc
adc
enter
enter
add
adc
iret
sti
in
sbb
sub
jmp
and
scas
enter
xchg
ins
leave
sub
and
icebp
push
ins
enter
sbb
call
jmp
nop
adc
adc
adc
mov
leave
jl
xor
adc
pop
out
xchg
mov
ins
enter
mov
jmp
jecxz
fcmovne
in
mov
cld
fld
rcl
mov
outs
enter
pop
shl
xchg
aaa
cmp
xchg
rcl
mov
jmp
out
xchg
pop
sar
nop
adc
mov
jmp
sub
sub
rcl
adc
or
fmul
xchg
xor
das
jmp
aaa
push
ror
cmp
or
mov
mov
sub
outs
cmp
aaa
shr
rcr
loope
sub
cld
loope
rcl
aaa
sub
jmp
hlt
loope
xchg
enter
enter
add
dec
jmp
sub
adc
shl
outs
mov
sbb
xchg
aaa
xchg
ret
lahf
int3
and
lahf
aaa
xchg
popf
imul
cmps
sbb
clc
loope
xchg
mov
sub
imul
cmps
sbb
loope
xchg
mov
cs
daa
cmp
push
push
pop
inc
cmp
rcr
cmp
outs
cmp
ins
add
bound
gs
mov
adc
mov
pushf
adc
push
adc
add
mov
xchg
or
mov
push
rcr
(bad)
push
aam
cmp
mov
cmp
mov
xchg
xor
adc
mov
adc
mov
xchg
xor
mov
xor
gs
outs
mov
gs
ins
add
bound
aad
rol
loop
xchg
mov
rol
aam
push
xchg
pop
sar
fild
es
aaa
pop
rcl
fsubr
xchg
aaa
mov
es
aaa
pop
push
imul
adc
fisttp
push
imul
popf
je
sahf
or
aaa
rol
pusha
pop
dec
cdq
mov
push
lea
in
mov
mov
xor
jmp
mov
xor
outs
ja
adc
mov
sub
hlt
outs
enter
jmp
adc
hlt
std
adc
mov
push
test
jb
adc
fs
jmp
mov
push
sbb
mul
hlt
outs
enter
(bad)
and
aaa
pop
in
data16
and
lock
rcr
mov
adc
xor
outs
ja
adc
mov
sub
hlt
outs
enter
pop
std
adc
adc
mov
adc
hlt
outs
enter
aaa
rcl
in
sub
jmp
inc
fdivrp
inc
sbb
adc
not
sub
aaa
sar
cmp
adc
ins
sbb
les
rcl
movs
std
adc
test
push
stos
cmp
dec
adc
repnz
(bad)
pop
rol
pop
(bad)
adc
mov
mov
jmp
mov
adc
push
pop
ficomp
jns
outs
jmp
mov
sbb
bound
push
movs
aaa
rcl
push
pop
rcl
(bad)
sti
in
icebp
mov
cdq
adc
xor
outs
cmp
movs
aaa
rcl
mov
aaa
rcl
shr
imul
add
(bad)
xor
mov
sub
adc
mov
sbb
mov
adc
mov
adc
aaa
dec
jecxz
mov
adc
push
cmp
repnz
rcl
shr
sbb
shl
outs
enter
jmp
adc
mov
hlt
outs
enter
add
adc
repz
add
adc
cmp
and
imul
xlat
sub
daa
xchg
aaa
push
rcr
mov
nop
adc
mov
hlt
outs
enter
add
adc
repz
rol
adc
cmp
and
imul
xlat
sub
daa
xchg
aaa
push
rcr
aaa
imul
aaa
ror
xchg
dec
sti
cld
cdq
add
adc
push
rcl
scas
and
adc
enter
outs
push
push
xchg
mov
sub
adc
mov
add
inc
ret
call
shl
outs
enter
call
shl
outs
enter
add
(bad)
popf
popa
shl
mov
rcl
cmp
and
imul
xlat
sub
es
aaa
push
rcr
aaa
pop
xchg
xchg
xlat
sub
es
aaa
push
rcr
aaa
imul
aaa
ror
xchg
dec
(bad)
jl
xlat
nop
adc
mov
hlt
outs
enter
add
fidivr
nop
adc
mov
hlt
outs
enter
add
ficomp
adc
or
cld
mov
cmp
and
imul
aaa
ror
sub
xor
outs
pusha
mov
cdq
sub
xor
outs
pusha
cmp
mov
daa
mov
cdq
adc
xor
outs
cmp
mov
aas
cmp
mov
aaa
rcl
shr
imul
add
(bad)
xor
mov
sub
adc
mov
sbb
jl
push
xchg
mov
sub
adc
mov
sbb
(bad)
jecxz
sbb
cmp
fwait
aaa
rcl
shr
imul
add
(bad)
xor
mov
sub
adc
mov
sbb
sub
push
adc
enter
pushf
jecxz
xchg
mov
sbb
push
jecxz
xchg
mov
adc
aaa
dec
jecxz
mov
adc
and
cdq
adc
xor
outs
cmp
rcl
add
rcl
inc
ficomp
outs
addr16
cdq
adc
xor
outs
cmp
mov
daa
cmp
mov
aaa
rcl
shr
imul
add
(bad)
xor
mov
sub
adc
mov
sbb
aaa
or
xchg
mov
sub
adc
mov
sbb
aam
adc
mov
adc
aaa
dec
jecxz
mov
adc
and
cdq
adc
xor
outs
cmp
mov
aas
push
(bad)
aaa
shl
ja
push
clc
dec
enter
fistp
aaa
imul
aaa
ror
adc
ret
aaa
test
outs
pusha
mov
cdq
sub
xor
outs
pusha
cmp
push
daa
cmp
aaa
shr
or
sub
stc
(bad)
xor
mov
sub
adc
mov
sbb
jmp
push
adc
enter
mov
adc
mov
sbb
fldenv
xchg
aaa
cmp
mov
aaa
rcl
shr
imul
add
(bad)
xor
mov
sub
adc
mov
sbb
and
adc
mov
adc
aaa
dec
jecxz
mov
adc
push
cmp
mov
aaa
rcl
shr
sbb
shl
outs
enter
jmp
adc
mov
hlt
outs
enter
sbb
adc
repz
jmp
outs
enter
pop
rcl
repz
pop
sar
pop
sar
pop
rcl
ja
cld
sbb
rcl
mov
retf
outs
enter
and
adc
mov
hlt
outs
enter
sbb
adc
aaa
pop
test
(bad)
addr16
test
(bad)
enter
enter
sbb
adc
sub
outs
enter
aaa
shl
sbb
sti
in
icebp
lea
(bad)
adc
rcl
adc
popa
test
sbb
and
out
outs
enter
xchg
dec
jmp
addr16
in
rcr
xor
rcl
(bad)
ficomp
add
das
jmp
mov
push
xchg
push
sub
aas
xchg
aaa
cmp
sbb
adc
mov
outs
mov
lds
nop
adc
inc
stc
adc
mov
sub
cdq
adc
das
jmp
addr16
mov
rcl
mov
jmp
ds
adc
or
xchg
pop
rcl
mov
hlt
je
sub
aam
mov
push
xchg
aaa
mov
cdq
adc
sub
outs
addr16
xchg
and
fucomip
ds
aaa
pop
in
nop
iret
pop
shr
jb
outs
enter
sub
outs
cmp
imul
xchg
push
cmp
aam
mov
push
xchg
aaa
mov
cdq
adc
sub
outs
cmp
rcr
outs
addr16
xchg
ins
leave
sub
cmp
enter
scas
das
jmp
mov
adc
cdq
adc
sub
outs
cmp
mov
sub
xchg
rcl
mov
jmp
adc
jmp
aaa
rcl
mov
outs
enter
push
adc
jmp
aaa
push
shl
pop
rcl
mov
jmp
sub
mov
enter
mov
jmp
sar
pop
sar
pop
rcr
outs
addr16
adc
adc
adc
enter
enter
push
rcl
iret
shr
sbb
sub
jmp
and
scas
enter
xchg
ins
leave
sub
cmp
icebp
push
imul
adc
sbb
loope
rcl
mov
jmp
nop
adc
sbb
adc
mov
leave
jl
xor
adc
inc
clc
adc
mov
imul
adc
outs
enter
(bad)
fnclex
sahf
mov
adc
popa
aaa
sar
rcr
in
sbb
mov
cdq
adc
cs
addr16
pop
sbb
mov
cdq
adc
cs
cmp
enter
cmp
jmp
aaa
rcr
adc
mov
sub
jecxz
enter
adc
adc
pop
shr
and
das
jmp
mov
sub
adc
mov
imul
rcr
outs
addr16
jmp
jnp
jmp
mov
das
jmp
fistp
pop
dec
jne
cld
lea
fxch
shl
test
imul
(bad)
sbb
call
adc
mov
sub
popf
push
and
add
enter
enter
cmp
or
mov
jmp
mov
mov
leave
int3
outs
enter
mov
icebp
cli
aaa
rol
xor
adc
lock
mov
adc
adc
das
jmp
addr16
mov
sub
and
das
jmp
fucomip
cmp
xor
sub
adc
mov
sub
sbb
aaa
ror
ins
sbb
xchg
aaa
xchg
ret
lahf
int3
aas
ins
jecxz
push
mov
push
leave
test
cmp
aaa
rcr
popf
fistp
inc
imul
cli
adc
mov
hlt
xor
aaa
shl
jbe
xchg
loopne
lock
outs
inc
ficomp
jns
cmc
adc
cmp
aaa
rcr
xchg
popa
mov
jle
pop
sar
sbb
mov
cmp
aaa
pop
in
data16
popa
mov
add
cmc
adc
popa
cmp
aaa
rcr
retf
inc
sbb
push
xor
rcl
pusha
ins
(bad)
aad
hlt
xchg
push
ds
xchg
pop
xlat
jmp
aas
cmp
mov
mov
adc
and
outs
cmp
adc
mov
in
enter
sar
adc
pop
shr
in
pop
xchg
nop
(bad)
sub
movs
outs
enter
or
adc
(bad)
cmp
adc
int3
jb
aaa
mov
cmp
aaa
pop
sar
lea
hlt
xchg
(bad)
mov
jecxz
dec
rcl
lock
jmp
xchg
jmp
pop
push
gs
mov
sbb
loopne
pop
sar
rcl
add
shl
cmp
es
xchg
push
xor
jl
in
nop
adc
jb
inc
jns
clc
adc
mov
or
jb
inc
sti
aaa
mov
jmp
sbb
xchg
fild
cmp
aaa
mov
aam
frstor
pushf
dec
inc
dec
pop
hlt
xchg
(bad)
pusha
ins
pusha
stos
das
mov
adc
rcr
ins
mov
sar
pop
sar
pop
sar
pop
sar
pop
inc
adc
sti
aaa
mov
sub
(bad)
mov
repnz
popf
push
pop
rol
pop
sub
adc
mov
rol
pop
sub
adc
dec
cli
adc
pop
rol
pop
sub
adc
pop
cli
adc
pop
rol
pop
sub
adc
push
rol
pop
sub
adc
js
adc
mov
mov
aaa
sar
pusha
mov
mov
aaa
cmp
nop
pusha
mov
mov
aaa
cmp
nop
pusha
mov
mov
aaa
cmp
nop
pusha
mov
mov
aaa
cmp
popa
push
and
sti
pop
sub
adc
(bad)
cmc
adc
pop
rol
pop
sub
adc
aam
adc
pop
rol
pop
sub
adc
in
adc
pop
rol
pop
sub
adc
hlt
cmc
adc
(bad)
data16
aaa
and
popf
push
push
ins
xlat
(bad)
data16
pop
cs
fisttp
xchg
fist
add
sar
xchg
adc
retf
sub
adc
or
adc
pop
cs
mov
push
xchg
fcomip
xor
jbe
jl
mov
adc
retf
sub
adc
and
adc
mov
push
cdq
aaa
sar
enter
jbe
cld
imul
dec
push
xchg
pop
ret
aaa
mov
mov
aaa
cmp
mov
sar
enter
ja
cld
inc
adc
adc
aaa
inc
push
xchg
pop
ret
aaa
mov
adc
aaa
sar
enter
jbe
cld
and
rcl
dec
jae
xchg
pop
ret
aaa
mov
mov
aaa
cmp
ins
enter
jbe
cld
sbb
sbb
xchg
pop
ret
aaa
mov
mov
aaa
cmp
imul
cs
mov
push
xchg
fbstp
or
jbe
jl
mov
adc
retf
sub
adc
pusha
hlt
adc
push
push
clc
test
stos
gs
inc
or
fmul
aaa
xchg
aaa
mov
jmp
aas
cmp
pop
ds
shl
test
adc
sub
mov
test
adc
aaa
cmp
adc
adc
rcl
popa
addr16
std
adc
adc
aaa
sub
adc
aaa
test
gs
push
imul
jle
pop
rcl
addr16
jl
in
nop
adc
aaa
rcl
fucomip
xor
jbe
jle
enter
jbe
jle
addr16
aas
aam
push
cld
cmc
addr16
adc
mov
jl
in
nop
adc
in
or
pop
sar
cdq
adc
adc
xor
xchg
mov
adc
and
jbe
jle
enter
jbe
jl
rcl
jb
aas
aam
push
cld
cmc
addr16
sbb
dec
call
or
pop
sar
push
adc
adc
push
jb
xchg
pop
sar
pop
sar
pop
xlat
jle
pop
sar
pop
sar
rcl
aaa
mov
add
hlt
adc
mov
mov
mov
aaa
cmp
aaa
sar
enter
jbe
jle
enter
jbe
jle
pop
in
xchg
aaa
mov
adc
aaa
cmp
adc
in
or
pop
sar
leave
adc
adc
dec
jae
xchg
mov
and
aaa
sar
enter
jbe
jle
enter
jbe
jle
pop
icebp
push
xchg
aaa
mov
adc
aaa
cmp
adc
in
or
pop
sar
lea
rcl
xchg
jno
xchg
pop
shr
movs
add
xchg
pop
shr
movs
jae
push
xchg
pop
ret
rcl
xchg
rcl
pop
cli
jl
aaa
rol
or
pop
or
shl
mov
adc
xchg
fimul
outs
add
mov
aaa
mov
mov
aaa
mov
adc
pop
ins
adc
aaa
mov
adc
pop
pop
into
shl
mov
jle
fistp
xchg
aaa
jno
push
jbe
jle
enter
jbe
jle
enter
jne
jle
pop
mov
cmp
rcl
and
jl
call
or
pop
sar
in
rcl
fisttp
xchg
mov
sahf
mov
sar
nop
adc
aaa
mov
inc
jns
not
pop
cmps
into
shl
mov
adc
enter
jbe
cld
lea
rcl
aaa
sub
adc
aaa
sub
adc
sbb
adc
pop
loopne
cmp
rcl
dec
mov
jl
call
or
pop
sar
popf
adc
adc
mov
push
xchg
mov
dec
(bad)
aaa
sar
enter
jbe
jle
enter
jne
jl
rcl
or
jl
aaa
rcl
xor
xchg
rcr
shl
mov
jle
fistp
aaa
xchg
aaa
jno
push
jbe
cld
mov
aaa
sub
adc
aaa
sub
adc
daa
mov
adc
pop
mov
adc
aaa
cmp
adc
in
or
pop
sar
sbb
cmps
jno
xchg
mov
xchg
clc
sbb
mov
mov
aaa
mov
mov
aaa
mov
adc
pop
sub
add
aaa
rol
or
pop
or
shl
mov
adc
xchg
cmps
mov
aaa
mov
mov
aaa
mov
mov
aaa
mov
or
aaa
sar
rcl
aaa
rcl
pop
nop
into
shl
mov
jle
(bad)
aaa
xchg
aaa
jno
or
jle
enter
jbe
jle
enter
jbe
jle
pop
das
adc
aaa
mov
jle
pop
rcl
addr16
jl
in
nop
adc
aaa
cmp
mov
shl
sti
aaa
sub
adc
aaa
sub
adc
daa
mov
adc
pop
jb
xchg
aaa
mov
jl
in
nop
adc
in
or
pop
sar
or
mov
shr
movs
add
xchg
pop
shr
movs
push
jb
xchg
pop
retf
rcl
cmps
rcl
pop
(bad)
jl
aaa
push
inc
stc
jmp
push
xchg
pop
ror
shl
mov
cld
icebp
adc
jae
xchg
pop
shr
movs
add
xchg
pop
shr
movs
push
jb
xchg
pop
retf
aaa
rcl
hlt
rcl
pop
(bad)
jl
aaa
push
inc
stc
cmps
jo
xchg
pop
ror
shl
mov
cld
mov
rcl
sub
xchg
mov
adc
and
jbe
jle
enter
jne
jle
pop
cli
jl
aaa
rcl
and
jl
call
or
pop
rcl
xchg
aaa
cmp
mov
shl
sti
aaa
sub
adc
aaa
sub
adc
das
mov
adc
pop
(bad)
jl
aaa
push
inc
stc
jmp
push
xchg
pop
ror
shl
mov
cld
cmp
pop
dec
push
xchg
pop
shr
movs
add
xchg
pop
shr
movs
jae
push
xchg
pop
lds
rcl
sahf
rcl
pop
int3
jl
aaa
push
inc
stc
aam
push
xchg
pop
sub
shl
mov
adc
xchg
dec
mov
aaa
cmp
enter
push
sub
outs
enter
hlt
xchg
(bad)
pusha
ins
and
ror
popf
imul
daa
iret
shl
sub
jecxz
enter
fisttp
push
xchg
popa
cmp
enterw
daa
jno
push
jbe
popf
imul
shr
movs
aas
dec
push
xchg
(bad)
xor
popa
addr16
xchg
pop
rcl
aaa
sub
adc
aaa
test
gs
push
imul
jle
pop
rcl
addr16
jl
in
nop
adc
aaa
rcl
fild
xor
aaa
jno
xor
jle
enter
jbe
jle
addr16
aas
aam
push
cld
cmc
addr16
adc
mov
jl
out
nop
adc
in
or
pop
sar
or
xor
xchg
mov
jns
aaa
sar
enter
jbe
jle
enter
jbe
jl
rcl
jb
aas
aam
push
cld
cmc
addr16
sbb
dec
call
or
pop
sar
leave
pop
rcl
push
jb
xchg
pop
sar
pop
sar
pop
xlat
jle
pop
sar
pop
sar
rcl
aaa
mov
add
repnz
mov
mov
mov
aaa
cmp
mov
sar
enter
jbe
jle
enter
jne
jle
pop
mov
test
jl
aaa
push
inc
stc
jmp
push
xchg
pop
push
into
shl
mov
adc
xchg
cmp
mov
rcl
dec
or
pop
sar
rcl
fistp
aaa
mov
jle
pop
xchg
adc
jns
xchg
adc
mov
out
test
jne
and
and
pop
nop
aaa
shr
movs
fisttp
xchg
fild
add
aaa
mov
adc
enter
jbe
cld
cmc
sub
adc
aaa
sub
adc
aaa
sub
adc
sbb
adc
pop
loopne
test
jl
aaa
push
inc
stc
jmp
push
xchg
pop
push
into
shl
mov
adc
xchg
push
mov
aaa
pop
in
nop
iret
pop
sar
aaa
sub
adc
aaa
sub
adc
sbb
adc
pop
out
jle
pop
jl
xchg
aaa
mov
jl
call
or
pop
sar
mov
rcl
sbb
xchg
fild
adc
add
mov
aaa
mov
mov
aaa
mov
adc
pop
mov
adc
aaa
rcl
pop
or
dec
jne
jle
fisttp
or
jne
jle
enter
jbe
jle
enter
jbe
jle
pop
mov
push
aaa
rcl
hlt
rcl
pop
rcl
addr16
jl
in
nop
adc
aaa
cmp
mov
fsubp
adc
shl
sti
aaa
sub
adc
aaa
sub
adc
daa
mov
jl
aaa
rcl
push
mov
jl
in
nop
adc
in
or
pop
sar
int
rcl
(bad)
dec
push
xchg
pop
shr
movs
add
xchg
pop
shr
movs
jae
push
xchg
pop
ret
pop
imul
mov
jl
aaa
rol
or
pop
or
shl
mov
adc
xchg
inc
mov
aaa
mov
mov
aaa
mov
mov
aaa
mov
adc
pop
xor
xchg
aaa
mov
adc
pop
lods
int
aaa
mov
jle
fistp
or
jne
jle
enter
jbe
jle
enter
jbe
jle
pop
das
adc
aaa
mov
jle
pop
rcl
addr16
jl
in
nop
adc
aaa
cmp
xor
and
aaa
sub
adc
das
mov
jle
pop
(bad)
jl
aaa
push
inc
stc
cmps
jo
xchg
pop
ror
shl
mov
cld
jmp
sub
xchg
mov
xchg
call
enter
jbe
jle
enter
jne
jle
pop
cli
jle
pop
(bad)
jl
aaa
push
inc
stc
jmp
push
xchg
pop
ror
shl
mov
cld
lods
sub
adc
pop
dec
push
xchg
pop
shr
movs
add
xchg
pop
shr
movs
push
jb
xchg
pop
retf
pop
lea
pop
rcl
addr16
jl
in
nop
adc
aaa
rcl
(bad)
or
jbe
jle
enter
jbe
jle
enter
jbe
jle
pop
dec
adc
aaa
mov
jle
pop
rcl
addr16
jl
out
nop
adc
aaa
cmp
lea
shl
jns
and
outs
(bad)
or
aaa
and
popf
push
fisttp
loopne
enter
hlt
xchg
ret
stos
mov
imul
iret
and
popf
push
pop
sar
rcl
xor
adc
xor
adc
aaa
push
jmp
aas
cmp
push
mov
jmp
mov
adc
aaa
mov
or
(bad)
fbld
aaa
push
jno
aaa
adc
adc
mov
xchg
cld
sbb
pop
push
popa
addr16
push
gs
push
ins
addr16
mov
xchg
aaa
push
cld
fcom
sub
sti
aaa
sub
int
aaa
mov
jmp
cmp
repnz
enter
mov
cmps
aaa
sti
xor
inc
outs
inc
ret
adc
adc
lods
mov
enter
mov
adc
xlat
les
rcl
test
sbb
shl
sbb
push
cli
and
adc
xchg
bound
mov
sub
adc
fild
or
aaa
ror
sbb
xchg
in
enter
pop
outs
movs
shl
pop
xchg
xchg
enter
(bad)
or
aaa
pop
in
(bad)
pop
rcl
dec
sub
int3
and
cdq
adc
sub
or
in
enter
pop
daa
movs
shl
pop
xchg
xchg
enter
(bad)
or
aaa
push
imul
arpl
mov
sub
adc
mov
adc
in
enter
pop
loop
shl
pop
xchg
xchg
enter
fistp
xchg
aaa
push
imul
arpl
mov
sub
adc
mov
jmp
inc
ret
jl
xchg
jmp
enter
and
adc
dec
sub
xchg
and
cdq
adc
sub
popf
xchg
rcr
push
mov
jmp
inc
ret
jl
xchg
jmp
enter
and
adc
dec
sub
retf
and
cdq
adc
sub
inc
xchg
rcl
pop
shl
xchg
enter
fucomip
add
cmp
push
xchg
mov
sub
adc
mov
jmp
inc
ret
jl
test
jmp
enter
and
adc
(bad)
and
jmp
sub
inc
and
cdq
adc
sub
stc
xchg
sar
pop
sar
nop
adc
jl
push
xchg
mov
sub
push
xchg
fistp
lock
enter
jne
jl
xchg
push
xchg
fisttp
aam
ds
popa
sub
cli
popf
popa
shl
mov
sub
(bad)
xchg
aaa
xchg
sbb
stos
jbe
inc
inc
sbb
sti
in
sbb
pop
jecxz
fist
aaa
pop
dec
xchg
test
ds
sbb
mul
cld
lds
rcl
imul
clc
test
popa
test
adc
cmps
js
aaa
push
cli
mov
rcl
inc
pusha
push
xchg
mov
sub
adc
fist
xchg
aaa
imul
aaa
ror
(bad)
iret
sub
in
outs
enter
pop
jle
shl
pop
xchg
jl
sub
add
iret
sub
jl
test
jecxz
enter
and
adc
mov
in
outs
enter
pop
xor
xchg
jl
sub
add
aaa
shl
ja
push
lock
mov
out
enter
es
cdq
adc
and
mov
aaa
rcl
xor
push
xchg
mov
sub
adc
mov
out
enter
es
cdq
adc
and
jns
aaa
rcl
xor
push
xchg
mov
sub
adc
mov
adc
sub
sub
outs
aas
cmps
add
xchg
mov
sub
adc
mov
out
enter
es
cdq
adc
and
or
sub
sub
outs
cmp
popa
push
xchg
mov
sub
adc
mov
out
enter
es
cdq
adc
and
icebp
test
rcr
adc
and
xchg
sub
sub
outs
cmp
push
xchg
mov
sub
adc
mov
out
enter
es
cdq
adc
and
mov
aaa
rcl
cmp
push
xchg
mov
sub
adc
pop
mov
xchg
jl
sub
stc
outs
enter
rcr
dec
shr
xor
jl
test
jmp
mov
add
mov
jecxz
enter
iret
sub
xchg
sub
and
nop
stos
xor
adc
fst
xchg
aaa
pop
in
rcr
dec
shr
sbb
jecxz
sti
aaa
mov
cld
shl
sub
popf
adc
sub
outs
adc
adc
rcl
(bad)
pop
xchg
aaa
push
test
xchg
cmp
xchg
aaa
rcl
or
rcl
mov
sbb
rcl
icebp
push
jmp
enter
jge
adc
shl
mov
sub
outs
addr16
cdq
adc
cs
cmp
rcl
imul
sti
cld
shr
rcl
hlt
inc
psllq
aad
fst
out
xchg
imul
or
mov
sub
outs
enter
xor
mov
shl
shl
pop
inc
mov
aaa
mov
cdq
adc
sub
outs
cmp
mov
rcr
push
pop
inc
mov
aaa
mov
cdq
adc
sub
outs
addr16
xchg
rcl
stc
aaa
(bad)
adc
mov
sub
adc
(bad)
popa
dec
xchg
aaa
and
jecxz
enter
mov
in
outs
enter
out
nop
adc
mov
jmp
rcl
xor
push
xchg
mov
sub
adc
mov
add
cs
rcl
mov
call
xchg
addr16
xchg
ins
iret
sub
int3
shl
pop
xchg
ins
iret
sub
add
pop
rcr
outs
cmp
sar
pop
es
shl
pop
xchg
ins
retf
sub
mov
push
rcr
push
rcl
mov
sub
cld
dec
and
adc
mov
sub
popf
adc
and
xchg
sub
sub
outs
cmp
rcl
sub
outs
enter
jne
jl
out
nop
adc
mov
in
outs
enter
and
adc
repz
test
jmp
rcl
mov
jmp
rcl
mov
jecxz
enter
mov
jecxz
enter
retf
sub
outs
sbb
jecxz
enter
retf
sub
outs
aaa
cmp
outs
mov
push
test
xchg
inc
add
adc
and
jmp
iret
sub
outs
mov
sub
push
xchg
mov
sub
adc
mov
add
mov
in
outs
enter
and
adc
mov
jecxz
enter
leave
sub
pop
xchg
aaa
pop
test
sbb
aad
(bad)
pop
xchg
cld
jno
rcl
mov
in
outs
enter
rcl
mov
in
outs
enter
ret
sub
outs
fbld
ins
iret
sub
pop
xchg
aaa
pop
test
(bad)
mov
sub
inc
jns
ret
adc
mov
sub
mov
stc
aad
push
xchg
pop
sar
fisttp
cld
inc
rcl
mov
call
outs
cmp
outs
enter
enter
cmp
cwde
neg
xchg
fwait
retf
outs
cmp
outs
enter
aaa
rcl
xchg
pop
xchg
arpl
aaa
ror
call
pop
cmc
(bad)
adc
mov
rcl
mov
adc
test
xchg
loop
mov
or
add
aaa
mov
cld
mov
rcl
mov
cli
outs
enter
and
adc
cmp
adc
dec
sub
aaa
pop
push
cdq
xchg
out
shl
adc
adc
aaa
rcl
out
and
stc
outs
enter
addr16
push
xchg
fbstp
jmp
aaa
sar
nop
adc
adc
adc
(bad)
add
mov
rcl
fcom
xor
aaa
rcr
outs
addr16
add
aaa
mov
push
xchg
mov
sub
jmp
mov
add
enter
cmp
nop
aaa
rcl
xchg
aas
add
in
nop
adc
xor
xlat
cmc
sub
(bad)
adc
lea
pop
repz
sbb
xor
in
mov
sbb
adc
xchg
popf
imul
rcl
aas
jmp
cmp
jns
(bad)
adc
cmp
fisubr
jbe
pop
aad
fst
out
xchg
imul
or
mov
pop
out
mov
sub
jmp
ss
xchg
and
sub
aam
hlt
scas
pusha
xchg
aaa
adc
cmp
sub
add
cmc
shl
icebp
push
mov
push
mov
stc
outs
enter
xchg
aas
jmp
addr16
jl
out
nop
adc
mov
clc
outs
enter
and
adc
les
sbb
dec
clc
outs
enter
xchg
outs
cmp
aaa
rcr
outs
cmp
enter
xchg
aas
jmp
addr16
push
enter
das
mov
clc
outs
enter
rcl
cmp
sahf
aaa
rcl
xchg
pop
outs
int3
shl
mov
jl
out
nop
adc
ja
push
xchg
fbstp
xchg
aaa
pop
test
sbb
(bad)
ret
imul
xchg
mov
jl
xchg
nop
adc
icebp
or
pop
mov
popa
xor
popf
dec
push
or
jg
sub
push
xchg
mov
adc
aaa
and
pop
jns
shl
mov
jl
out
nop
adc
pop
inc
push
xchg
fist
test
sbb
push
ret
imul
aaa
shl
not
sar
nop
adc
icebp
or
pop
ror
xor
xchg
push
ja
test
sbb
adc
shl
imul
mov
adc
pop
sar
pop
sar
pop
rcl
ja
adc
jbe
cld
or
rcl
jb
jle
pop
sar
cmp
rcl
aam
sub
push
sub
xchg
and
sub
sbb
fsubr
push
adc
rcl
into
mov
inc
sar
inc
outs
inc
data16
dec
cmp
adc
aaa
pop
push
sub
push
stc
(bad)
xor
enter
lock
mov
or
aaa
rcl
aam
sub
push
sub
xchg
and
sub
add
and
sub
push
adc
rcl
into
mov
inc
sar
inc
outs
inc
data16
adc
aaa
pop
push
sub
push
stc
(bad)
xor
enter
pop
fst
enter
cmp
adc
pop
gs
aaa
and
stc
outs
enter
fisubr
adc
nop
adc
jb
mov
test
adc
jb
cdq
xchg
int3
scas
push
xchg
mov
lods
adc
pop
sar
sub
jb
jl
dec
rcl
aaa
cmp
aam
push
inc
rcl
jb
adc
aaa
sar
fild
xchg
aaa
pop
push
dec
lock
test
aaa
rcl
out
sti
int3
sbb
adc
adc
lock
fcom
jb
inc
jns
fst
pop
shr
movs
add
xchg
pop
sar
pop
sar
pop
sar
pop
rcl
aaa
mov
jl
in
nop
adc
aaa
cmp
xor
xchg
adc
mov
sar
fist
adc
xchg
popa
jmp
mov
adc
fist
or
adc
mov
cmp
mov
enter
mov
inc
jns
fist
mov
sub
adc
fist
sbb
enter
enter
fwait
cmp
outs
xor
adc
mov
adc
outs
addr16
xchg
cmp
pop
mov
ins
dec
jne
jl
adc
adc
pop
sub
ror
mov
js
jne
adc
xor
adc
aaa
cmp
dec
push
or
jg
sub
adc
(bad)
jle
(bad)
sbb
cmp
adc
mov
cli
outs
enter
pop
sar
xchg
adc
aaa
mov
adc
cmp
aaa
sar
pop
es
outs
add
mov
aaa
cmp
aaa
sar
mov
push
xlat
lods
or
adc
jb
inc
jns
fcom
pop
sar
pop
rcr
lds
rcl
mul
fst
rol
rcl
test
popa
test
adc
mov
xchg
aaa
pop
push
popf
mov
add
mov
adc
adc
rcr
adc
ficomp
sbb
aaa
out
add
adc
or
adc
lods
rcl
cmp
cdq
aaa
shr
test
mov
adc
cdq
aaa
rcl
xchg
aaa
fst
stc
ret
xchg
enter
jne
cld
scas
shr
jmp
nop
iret
pop
sar
fisttp
push
xchg
enter
enter
shr
popf
adc
das
jmp
mov
sub
jmp
pushf
aaa
rcr
xchg
aaa
rcr
outs
addr16
adc
rcr
xchg
adc
mov
sub
jmp
mov
adc
mov
stc
sbb
cmps
or
mov
jmp
dec
retf
adc
(bad)
lahf
add
das
jmp
sbb
fsubr
sub
nop
mov
sub
jmp
addr16
xchg
jno
sub
jmp
xchg
pop
shr
movs
jae
push
xchg
fistp
xchg
aaa
push
jecxz
cmp
adc
or
sbb
xchg
mov
shl
jno
and
add
div
jne
adc
or
popa
xchg
addr16
jp
sub
mov
adc
aad
xchg
enter
jne
cld
out
shr
adc
iret
pop
shl
aaa
dec
push
xchg
push
xchg
sbb
mov
adc
xor
adc
fimul
adc
jbe
sub
outs
inc
(bad)
test
rcl
sub
xor
jmp
mov
rcl
jb
popf
adc
sub
outs
mov
jl
aaa
shr
xchg
cmps
jno
xchg
inc
xchg
das
xchg
inc
jae
xchg
inc
out
das
xchg
pop
dec
push
xchg
inc
out
xchg
(bad)
dec
push
xchg
inc
(bad)
das
xchg
mov
imul
xchg
dec
jae
xchg
inc
into
das
xchg
xchg
jno
xchg
inc
(bad)
das
xchg
cmp
xchg
inc
fisubr
xchg
and
xchg
cmp
xchg
aaa
sar
enter
aam
adc
mov
sub
push
xchg
inc
ret
xchg
jno
xchg
inc
fisubr
xchg
add
xchg
inc
fistp
ret
inc
ret
cmp
adc
enter
enter
test
adc
(bad)
(bad)
cmp
mov
jmp
adc
rcl
outs
aaa
pop
xchg
dec
retf
rcr
sbb
retf
adc
push
push
xchg
aaa
cmp
aaa
rcr
push
pop
sub
xchg
nop
enter
enter
jbe
cld
jge
rcl
mov
jmp
enter
pop
sar
pop
or
jns
fst
enter
jbe
cld
xchg
cmp
adc
rcl
xchg
mov
adc
jmp
mov
sub
jmp
aaa
push
sub
adc
xchg
aaa
sar
rcl
mov
jmp
enter
mov
push
xchg
fist
aaa
pop
cdq
nop
enter
jmp
adc
into
push
in
xchg
inc
iret
jle
pop
mov
shl
pop
mov
fild
outs
enter
or
xor
aaa
mov
push
xchg
pop
sar
pop
cmp
push
mov
aaa
cmp
aaa
sar
div
rcl
mov
adc
shl
outs
mov
sub
xchg
fs
rcr
shl
pop
xchg
fs
rcr
sbb
pop
sub
xchg
nop
enter
enter
ja
cld
jge
rcl
mov
jmp
enter
pop
sar
pop
fmul
shl
mov
adc
enter
ja
cld
xchg
cmp
(bad)
adc
mov
sub
xchg
lods
shl
mov
add
pop
mov
repz
jne
jle
fcomip
push
xchg
aaa
sub
adc
clc
fist
ficom
adc
enter
fsubr
sbb
mov
jmp
enter
ss
push
mov
sar
pop
xor
adc
aam
adc
enter
ja
cld
add
rcl
mov
adc
mov
adc
enter
mov
jmp
enter
mov
mov
mov
jmp
enter
ret
outs
addr16
cdq
adc
das
jmp
cmp
rcl
xchg
aaa
rcr
outs
addr16
adc
enter
mov
adc
in
mov
rol
sar
fistp
and
xchg
nop
adc
and
adc
(bad)
adc
pop
rcl
mov
jmp
enter
ret
outs
addr16
cdq
adc
das
jmp
cmp
call
jmp
aaa
rcr
outs
addr16
adc
mov
outs
adc
in
mov
mov
xchg
(bad)
sbb
mov
cwde
ficom
fidiv
xchg
aaa
pop
in
mov
mov
jmp
enter
ret
outs
addr16
cdq
adc
das
jmp
addr16
fwait
aaa
rcl
xchg
aaa
rcr
outs
addr16
adc
sbb
adc
mov
adc
in
mov
jg
jne
jle
fisttp
xchg
aaa
sub
adc
jo
adc
fsubrp
pop
xchg
aaa
pop
cdq
nop
enter
jmp
adc
into
push
in
xchg
inc
bnd
pop
sar
nop
adc
aaa
cmp
aaa
shr
movs
pop
dec
push
xchg
ffreep
sbb
aaa
cmp
xchg
aaa
rcl
adc
sub
outs
aaa
cmp
sahf
adc
adc
enter
xor
sub
sti
aaa
mov
jle
fcomip
sbb
aaa
sub
adc
in
adc
ficom
push
xchg
aaa
push
xchg
outs
leave
sub
jmp
enter
inc
imul
mov
sub
jmp
mov
mov
jmp
dec
rcl
repz
aaa
rcl
mov
jmp
enter
pop
dec
push
xchg
fist
test
xchg
inc
bnd
pop
sar
nop
adc
aaa
cmp
movs
pop
dec
push
xchg
fisttp
pop
xchg
aaa
rcl
adc
sub
outs
aaa
cmp
sahf
adc
adc
enter
xor
sub
sti
aaa
mov
jle
fistp
mov
xchg
adc
sub
adc
(bad)
push
xchg
aaa
push
xchg
outs
leave
sub
adc
pop
enter
shl
cmp
leave
sub
mov
sbb
pop
xchg
nop
enter
mov
sub
push
xchg
mov
sub
adc
mov
add
mov
popf
adc
das
jmp
mov
sub
jle
pop
(bad)
jle
pop
sar
rcl
dec
push
xchg
fild
aaa
pop
xchg
gs
sub
adc
aaa
sub
jmp
xchg
xlat
adc
mov
fs
jo
sbb
jmp
adc
into
pop
xlat
sti
aaa
pop
and
mov
jmp
ret
sub
outs
fisttp
adc
mov
jmp
xchg
pop
and
shl
sub
jmp
mov
adc
mov
sub
xchg
lods
shl
pop
rcr
outs
sbb
fs
jmp
movs
xlat
adc
pop
rcr
outs
addr16
push
xchg
enter
enter
xor
adc
and
outs
enter
aaa
shr
movs
jae
push
xchg
fild
aaa
mov
adc
aaa
mov
adc
pop
repnz
aaa
cmp
adc
sub
outs
mov
push
lock
enter
shr
jmp
mov
sar
enter
enter
xor
adc
cmp
shl
push
fsubr
push
sub
hlt
mov
jmp
stc
cmps
jo
xchg
enter
enter
xor
adc
aaa
pop
xchg
popa
retf
rcr
jge
nop
adc
and
outs
enter
aaa
shr
and
sub
outs
fbld
adc
adc
sbb
sti
in
sbb
mov
js
jne
jl
out
nop
adc
addr16
xchg
pop
rcl
mov
xchg
sbb
das
mov
mov
aaa
cmp
xchg
aaa
shr
rcr
jno
sub
add
in
sub
sbb
aam
adc
push
ret
mov
add
push
fnstcw
imul
rcr
adc
rcl
mov
add
cmp
xchg
aaa
shr
movs
mov
push
xchg
inc
fldpi
movs
fisttp
xchg
fisttp
aaa
pop
in
data16
imul
fldpi
movs
mov
push
xchg
fist
xchg
aaa
jmp
adc
cmp
and
pop
(bad)
adc
or
cmp
jbe
popa
call
cld
int
rcl
iret
and
popf
push
or
or
shl
enter
jbe
cld
shl
rcl
add
mov
aaa
cmps
pop
outs
add
mov
aaa
cmp
xchg
aaa
shr
movs
pop
dec
push
xchg
inc
(bad)
xchg
lods
inc
push
xchg
aaa
cmps
pop
outs
add
mov
aaa
cmp
movs
pop
dec
push
xchg
inc
int
lods
inc
push
xchg
cmps
add
push
mov
aaa
cmp
xchg
aaa
sar
cwde
mov
xchg
in
lock
stos
add
mov
aaa
cmps
adc
sub
adc
xchg
nop
adc
xor
lods
test
adc
add
mov
aaa
cmps
adc
sub
mov
aaa
push
sti
pop
sub
adc
add
adc
sub
test
aaa
jmp
adc
xor
jmp
add
mov
aaa
cmps
adc
sub
(bad)
shl
jmp
adc
xor
lea
cmps
push
outs
inc
(bad)
jmp
daa
sub
cld
in
rcl
xor
xchg
sub
mov
push
daa
rcl
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
mov
ins
adc
aaa
pop
rcl
or
popa
mov
lock
imul
adc
repz
in
pop
rcl
(bad)
push
adc
repnz
imul
push
sahf
mov
sbb
imul
xchg
sbb
xor
aam
xor
mov
and
fist
xchg
aaa
mov
inc
jns
cmp
xlat
enter
xor
rcl
xor
sub
fdivr
rcl
imul
jo
rcl
arpl
sbb
imul
outs
enter
lds
mov
neg
mov
jbe
push
loopne
push
mov
adc
aaa
rcl
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
out
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
shl
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
test
adc
loopne
aaa
inc
.byte
xchg
aaa
.byte
.byte
