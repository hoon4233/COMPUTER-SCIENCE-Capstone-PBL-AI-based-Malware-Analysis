lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
mov
mov
mov
lea
sub
nop
lea
mov
mov
mov
mov
lea
jg
jmp
lea
lea
mov
nop
nop
mov
sub
mov
lea
mov
mov
lea
jg
jmp
lea
mov
lea
mov
sub
lea
mov
nop
je
jmp
nop
mov
mov
lea
mov
sub
lea
mov
lea
mov
mov
mov
mov
lea
jg
jmp
lea
lea
mov
nop
sub
mov
mov
mov
mov
nop
lea
lea
je
jmp
lea
mov
mov
sub
mov
mov
mov
mov
jg
jmp
nop
lea
lea
mov
nop
mov
lea
lea
sub
lea
mov
mov
nop
je
jmp
mov
mov
lea
sub
mov
mov
lea
mov
jg
jmp
nop
nop
mov
nop
mov
sub
lea
mov
nop
nop
mov
nop
nop
mov
lea
je
jmp
mov
mov
mov
lea
mov
sub
mov
mov
jg
jmp
lea
mov
mov
lea
lea
mov
sub
lea
mov
mov
lea
nop
je
jmp
lea
mov
mov
mov
lea
mov
lea
sub
lea
mov
mov
lea
jg
jmp
lea
mov
mov
mov
mov
sub
nop
lea
lea
lea
mov
mov
je
jmp
mov
mov
mov
sub
mov
lea
lea
mov
mov
lea
lea
jg
jmp
mov
nop
mov
lea
sub
mov
lea
lea
mov
nop
mov
nop
je
jmp
mov
lea
nop
mov
lea
sub
nop
mov
lea
mov
lea
lea
jg
jmp
mov
lea
nop
mov
nop
mov
sub
mov
mov
lea
je
jmp
lea
lea
nop
mov
nop
lea
sub
lea
mov
nop
lea
mov
lea
lea
nop
jg
jmp
lea
mov
mov
lea
sub
lea
nop
nop
mov
lea
nop
je
jmp
lea
nop
mov
mov
sub
nop
mov
mov
lea
jg
jmp
nop
mov
mov
mov
lea
lea
sub
mov
nop
mov
mov
nop
mov
lea
je
jmp
mov
mov
mov
lea
mov
sub
lea
lea
mov
mov
lea
lea
je
jmp
mov
lea
nop
mov
sub
mov
lea
mov
mov
je
jmp
lea
nop
lea
mov
lea
mov
mov
sub
nop
mov
lea
mov
je
jmp
mov
lea
mov
mov
nop
sub
mov
mov
lea
mov
mov
mov
lea
je
jmp
lea
lea
jmp
lea
mov
lea
mov
mov
lea
mov
mov
lea
cmp
lea
cmove
mov
mov
mov
mov
jmp
mov
lea
mov
mov
nop
mov
mov
lea
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
cmp
lea
lea
lea
cmove
lea
mov
lea
mov
lea
jmp
mov
mov
lea
lea
mov
mov
mov
lea
cmp
lea
cmove
mov
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
mov
mov
lea
mov
nop
mov
nop
lea
jmp
lea
mov
mov
mov
mov
nop
nop
mov
lea
nop
mov
lea
cmp
mov
mov
mov
cmove
mov
nop
mov
lea
nop
mov
jmp
nop
lea
mov
mov
mov
nop
nop
mov
nop
mov
lea
mov
lea
jmp
lea
mov
mov
lea
mov
mov
mov
lea
nop
nop
mov
nop
mov
mov
mov
nop
mov
mov
nop
lea
call
nop
nop
sub
mov
mov
mov
mov
lea
mov
mov
cmp
lea
mov
cmovne
mov
lea
nop
lea
mov
mov
mov
mov
jmp
mov
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
nop
mov
mov
nop
nop
call
lea
nop
mov
mov
mov
lea
mov
mov
lea
cmp
mov
cmovne
mov
mov
mov
nop
jmp
mov
lea
mov
mov
nop
mov
mov
lea
mov
mov
mov
jmp
lea
mov
lea
nop
jmp
mov
lea
lea
mov
lea
jmp
mov
nop
lea
lea
jmp
lea
mov
lea
mov
lea
mov
mov
nop
mov
lea
mov
lea
lea
mov
lea
nop
mov
mov
mov
nop
mov
mov
lea
mov
mov
mov
nop
mov
nop
lea
mov
lea
call
lea
lea
mov
sub
lea
mov
mov
mov
lea
mov
mov
lea
lea
jmp
mov
mov
lea
nop
lea
nop
mov
mov
pop
mov
pop
nop
mov
pop
nop
pop
mov
ret
mov
nop
jmp
nop
push
mov
push
push
push
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
lea
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
add
int3
test
gs
sbb
add
dec
xchg
rol
add
(bad)
add
adc
mov
test
add
movs
add
add
sub
movs
and
rcl
push
push
xchg
cmps
stc
inc
add
add
inc
jg
jmp
mov
sub
xor
xor
add
imul
add
add
mov
enter
add
(bad)
ja
mov
add
mov
mov
inc
clc
dec
cmps
mov
jg
jmp
stos
loopne
popa
dec
push
cwde
sub
mov
sbb
mov
inc
jmp
add
cmp
mov
and
add
(bad)
je
leave
cmp
dec
push
mov
xchg
xchg
repnz
add
mov
jnp
mov
pop
movs
call
add
je
xchg
and
add
popf
inc
and
and
add
mov
add
sti
xor
jmp
mov
lods
cmps
push
data16
test
xchg
mov
punpckldq
pop
adc
xor
and
add
add
and
dec
test
test
cmp
sti
movsx
add
add
and
add
imul
mov
test
js
push
adc
test
stos
jbe
add
and
dec
cmp
hlt
add
xor
(bad)
loop
repnz
sub
and
inc
mov
add
sbb
add
push
enter
and
lea
leave
and
push
cwde
add
xor
mov
ror
sbb
add
add
dec
fisttp
add
jo
imul
add
adc
add
add
ins
mov
add
jg
loop
add
add
(bad)
push
sbb
push
ins
jbe
ret
add
psubusw
add
and
add
add
jg
sub
test
add
(bad)
mov
add
fld
imul
push
mov
push
mov
out
(bad)
mov
jg
mov
ror
pop
idiv
and
shr
pop
repnz
add
dec
mov
sub
mov
jg
jmp
mov
dec
stos
mov
adc
dec
add
fisttp
ins
cmp
add
add
add
dec
mov
(bad)
pop
mov
add
mov
mov
mov
add
cwde
sti
movsx
push
add
jmp
mov
mov
hlt
pop
or
add
out
fld
add
jg
mov
add
cmp
cdq
sti
add
(bad)
pop
push
xor
jmp
imul
sub
mov
xor
add
xchg
jmp
mov
add
add
lahf
inc
and
and
fucom
add
add
or
sbb
lods
jnp
inc
and
jnp
xlat
add
add
enter
xchg
jecxz
and
ds
and
leave
and
push
add
add
jmp
and
sub
mov
jg
jmp
mov
mov
std
xchg
sbb
ror
pop
clc
xor
and
add
add
(bad)
mov
inc
test
mov
add
(bad)
add
inc
test
sub
in
test
adc
push
add
add
xor
add
test
and
jecxz
add
jns
mov
or
and
cmp
mov
imul
add
add
and
jle
push
jmp
and
dec
add
pop
pop
inc
add
xor
add
test
stc
inc
repz
sub
mov
fild
(bad)
mov
enter
mov
mov
ss
cld
mov
sub
inc
icebp
sbb
add
mov
retf
pop
dec
dec
stc
add
add
add
add
mov
mov
sbb
in
ins
jb
and
add
or
(bad)
das
add
add
add
add
and
add
add
mov
jg
popa
out
add
fst
sub
dec
test
por
dec
push
jmp
adc
mov
scas
cmp
push
test
lock
add
(bad)
jnp
add
inc
add
je
and
add
out
fs
xlat
mov
and
adc
mov
add
leave
add
add
push
cwde
sub
jb
adc
in
(bad)
icebp
add
add
add
add
daa
(bad)
add
int3
mov
and
add
add
(bad)
jge
add
jmp
stos
test
add
add
nop
push
cdq
adc
loopne
add
add
mov
add
sbb
and
out
or
cdq
dec
and
add
and
add
add
mov
and
add
sub
mov
fucomp
(bad)
adc
add
sbb
add
add
daa
(bad)
sar
jmp
enter
xlat
push
add
and
fs
and
add
cwde
sub
mov
add
(bad)
fwait
repnz
imul
add
sub
adc
add
(bad)
pop
add
add
and
stos
test
rol
xor
dec
mov
das
enter
rol
add
add
fwait
dec
or
(bad)
enter
xchg
icebp
add
fs
mov
mov
in
xchg
mov
add
in
jbe
or
cmp
je
lods
inc
or
cmp
xor
je
lea
add
mov
(bad)
xchg
mov
loop
adc
add
inc
sti
cmp
mov
inc
add
push
cmp
lahf
test
and
add
test
sub
add
jg
mov
add
push
mov
mov
mov
add
jmp
inc
test
sub
mov
test
outs
rol
in
push
cwde
add
and
add
add
push
data16
repnz
add
popa
sub
add
test
add
enter
popa
int3
dec
movs
and
add
add
and
dec
xor
add
add
sub
mov
(bad)
jnp
push
mov
jmp
adc
mov
gs
ins
test
xchg
cld
add
add
add
add
dec
fs
jge
jg
cwde
or
and
test
add
repz
and
add
add
mov
push
mov
add
jmp
mov
jg
jge
adc
test
add
and
test
add
sbb
add
imul
sub
mov
psrld
mov
jecxz
add
fs
dec
test
push
add
add
xor
add
sbb
add
push
aaa
add
cld
add
sete
enter
adc
and
rol
mov
mov
mov
add
rol
mov
test
add
add
jbe
and
punpckldq
push
add
jmp
mov
jmp
in
bswap
mov
pop
add
or
repnz
jbe
and
punpckldq
add
jmp
popf
test
add
test
adc
not
loop
sbb
jnp
pop
add
loop
mov
pop
test
iret
add
push
sbb
add
mov
sub
fcmovnu
fild
test
add
add
add
sbb
add
add
mov
fs
jmp
ins
mov
push
add
sub
mov
add
add
out
inc
imul
loope
and
mov
jg
adc
and
add
test
add
shl
pop
enter
fs
push
dec
add
fstp
xchg
or
(bad)
xchg
inc
and
(bad)
ja
add
jmp
je
and
mov
or
clc
or
mov
(bad)
inc
or
jg
pop
(bad)
and
out
test
dec
add
jg
cmps
cmps
mov
inc
das
outs
shl
push
add
jmp
or
and
add
cmp
int
test
inc
pop
test
sub
mov
mov
dec
ret
inc
popa
mov
sbb
aas
add
add
add
sub
jnp
and
(bad)
enter
push
enter
mov
test
adc
mov
setb
and
lea
add
add
test
add
add
mov
(bad)
cmp
sahf
push
xchg
add
mov
mov
lds
and
je
jmp
test
add
fs
inc
xchg
sub
retf
lgs
jne
sbb
mov
push
cmp
ins
mov
popa
add
push
stc
movs
add
mov
pop
add
sub
in
test
(bad)
xchg
add
add
add
loop
sub
jnp
movs
and
daa
mov
add
jmp
add
or
and
and
xor
sti
add
sbb
add
mov
repnz
mov
xor
sbb
or
add
add
jmp
mov
mov
dec
mov
in
ror
push
add
cwde
movsx
add
(bad)
add
xor
add
and
add
fild
lea
fwait
xchg
and
mov
sub
add
mov
inc
add
add
and
call
fs
nop
scas
mov
cmp
lock
icebp
jbe
ret
add
mov
mov
jmp
add
out
add
add
push
cwde
sti
mov
add
push
add
call
dec
sbb
iret
mov
inc
hlt
shr
add
add
mov
leave
mov
add
out
and
rol
fdivr
sbb
add
add
add
or
add
xchg
or
mov
add
adc
or
add
add
mov
nop
or
fld
adc
rcr
retf
or
add
add
mov
push
add
adc
jo
das
xchg
fsub
add
out
add
ret
mov
adc
or
lods
and
add
add
pop
lahf
mov
add
in
xchg
imul
loopne
add
mov
add
test
add
inc
add
mov
jnp
and
mov
fld
or
push
add
retf
add
inc
add
or
pop
mov
mov
add
and
add
adc
add
popf
add
add
fisttp
add
add
add
mov
mov
and
jl
sti
add
and
fisttp
and
sbb
add
add
repnz
mov
jecxz
ins
and
call
js
xchg
cmps
add
cmp
hlt
jge
mov
sbb
add
and
mov
cmp
shufps
inc
add
lea
mov
lahf
mov
add
cdq
gs
xlat
jnp
movs
enter
add
sub
jmp
test
inc
add
and
add
add
add
and
push
in
fild
add
ret
loopne
gs
sbb
inc
push
push
jb
adc
or
sbb
dec
dec
jmp
repnz
lea
lahf
ret
and
dec
and
leave
cmps
fild
add
call
or
and
add
mov
movs
add
or
cmp
(bad)
jnp
movs
add
adc
enter
sub
repnz
inc
add
and
call
cwde
add
jnp
jge
out
outs
cwde
sti
add
cmovl
or
sbb
repnz
add
pop
inc
add
fdiv
add
xchg
sub
fisttp
mov
mov
add
mov
call
add
pop
dec
push
mov
retf
repnz
add
movs
add
cmp
push
push
sbb
adc
add
inc
iret
inc
add
add
test
aam
add
cwde
xchg
stc
cmp
call
or
add
or
sub
mov
add
(bad)
jnp
movs
mov
add
fdivr
enter
sub
repnz
lahf
add
test
and
call
fucom
cwde
jg
mov
mov
or
setno
imul
out
add
add
xchg
add
daa
push
mov
jmp
lea
aaa
jb
aam
add
jecxz
call
cdq
sbb
lahf
xchg
or
add
in
dec
cmp
mov
cmp
dec
test
lods
push
adc
fsub
or
sahf
and
add
add
add
lds
aam
add
add
add
mov
mov
nop
push
retf
loopne
loop
sbb
dec
retf
xchg
add
jmp
(bad)
mov
push
adc
fcomp
jl
jmp
lods
and
jmp
add
fbstp
add
addr16
cmps
dec
iret
add
add
mov
mov
lods
movs
out
or
je
add
je
(bad)
stc
fcom
add
add
lea
fiadd
adc
and
inc
pop
fld1
jbe
add
pop
dec
call
stos
imul
add
cmp
xchg
repnz
enter
jg
mov
mov
sub
jmp
scas
fdivr
inc
add
add
(bad)
add
xor
add
cmp
les
mov
or
add
dec
retf
and
add
adc
sub
push
(bad)
out
add
ror
sub
adc
and
add
mov
cmps
add
(bad)
mov
add
mov
clc
loop
add
(bad)
and
jle
add
add
add
test
and
add
pusha
ret
xchg
mov
push
and
mov
stc
mov
push
or
inc
add
add
loop
mov
xchg
add
pop
add
add
adc
inc
mov
mov
xchg
cmc
or
add
inc
ror
test
add
or
inc
add
pushf
fucomip
fstp
add
mov
(bad)
cmps
and
fadd
add
dec
mov
sbb
push
mov
cmp
cmovne
mov
jmp
mov
not
and
(bad)
push
add
add
adc
add
and
inc
and
dec
add
cmp
add
mov
cmp
cmovne
mov
and
out
add
sbb
inc
add
add
das
inc
push
add
out
sbb
inc
add
add
add
test
add
add
fidiv
add
ins
cmp
call
sub
inc
add
inc
add
repnz
add
daa
add
inc
add
sbb
sub
inc
add
add
add
push
cwde
xchg
repnz
fucom
dec
xchg
cdq
int3
inc
sbb
pop
xor
jle
and
add
add
push
adc
mov
ror
add
cld
add
fs
mov
adc
mov
xor
and
add
cmps
ror
add
mov
sub
add
mov
or
(bad)
cmp
add
dec
rol
cwde
add
sub
(bad)
mov
movs
add
add
mov
jnp
and
jmp
mov
mov
cmp
jb
movs
and
sub
add
mov
mov
and
sub
and
or
add
cmp
and
mov
cmc
push
add
sub
enter
and
mov
(bad)
(bad)
fwait
push
leave
and
cdq
sti
add
add
movs
xor
add
add
movs
arpl
add
lea
(bad)
pop
pop
pop
ret
paddq
test
add
add
push
mov
push
push
push
sub
call
mov
mov
mov
mov
sub
mov
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
call
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
lea
lea
push
nop
nop
lea
mov
lea
lea
push
lea
push
mov
lea
push
nop
lea
lea
and
mov
sub
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
nop
mov
lea
call
mov
call
lea
xor
nop
lea
mov
mov
mov
mov
lea
call
lea
lea
mov
nop
nop
mov
lea
mov
lea
pop
mov
lea
pop
lea
pop
lea
mov
pop
lea
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovge
mov
jmp
mov
mov
cmp
cmovle
mov
jmp
mov
mov
sub
sub
sub
sub
add
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
and
fidiv
add
(bad)
sub
add
add
test
add
add
mov
add
sbb
les
mov
pop
test
rol
add
std
dec
xor
add
add
cmps
cmp
and
test
mov
lahf
add
test
add
add
add
add
add
shr
(bad)
sbb
add
add
push
sub
mov
xor
add
sub
mov
dec
mov
or
add
sahf
fld
mov
scas
xchg
and
in
jns
jne
lahf
add
sbb
add
(bad)
leave
sbb
test
add
cs
mov
add
inc
and
mov
and
test
call
lea
mov
mov
mov
or
enter
and
add
and
mov
add
push
inc
fbstp
inc
add
add
fld
add
inc
add
call
jns
add
inc
add
sbb
add
lock
sbb
add
mov
cmps
mov
and
fiadd
add
add
pop
pop
mov
ja
gs
mov
int3
rol
mov
and
add
push
add
add
cmp
aaa
lahf
add
(bad)
and
add
hlt
pop
retf
or
int3
or
add
fiadd
add
mov
scas
(bad)
and
add
nop
add
hlt
mov
sub
int3
pop
in
cwde
add
add
inc
jmp
mov
add
dec
mov
cli
jge
push
loope
cmp
enter
add
adc
add
sub
push
pop
and
add
in
add
mov
test
inc
sub
cmp
add
add
add
add
add
mov
sub
push
test
je
add
inc
hlt
xor
lahf
sbb
add
jmp
mov
cmps
bswap
lock
lahf
jmp
data16
and
inc
hlt
add
xchg
test
sub
(bad)
jmp
add
cmps
mov
sbb
pop
ret
pop
mov
add
(bad)
mov
inc
add
push
test
sbb
add
or
add
cmp
fucomip
mov
lahf
fisttp
add
ss
mov
jg
jmp
xchg
test
add
add
adc
les
mov
add
(bad)
and
lahf
add
add
add
es
inc
fnstenv
add
add
cmp
sbb
add
test
daa
add
(bad)
mov
bswap
and
add
sbb
mov
push
xchg
and
add
cmps
pinsrw
scas
mov
nop
inc
add
pop
push
test
loope
test
add
add
(bad)
and
add
aam
or
mov
mov
leave
out
xchg
mov
inc
add
or
add
mov
nop
add
sub
mov
xchg
(bad)
cmp
add
add
test
mov
mov
cs
sti
mov
add
je
jbe
lods
mov
nop
inc
hlt
add
cmp
popa
cmp
add
cmps
add
add
add
mov
and
fiadd
add
mov
add
jns
stos
add
hlt
add
add
retf
lahf
xchg
(bad)
mov
(bad)
xchg
aaa
add
add
hlt
xor
xchg
test
inc
or
and
push
test
add
sub
mov
add
and
in
add
mov
inc
sub
cmps
and
fistp
add
sub
add
mov
sub
jge
push
and
popf
add
test
cmp
inc
jmp
mov
and
add
add
cmp
paddw
add
add
mov
aas
lods
add
sub
mov
movsx
add
add
and
add
mov
xor
sbb
xor
jl
sbb
mov
pop
nop
add
add
mov
je
jmp
data16
inc
add
fyl2x
sub
mov
je
and
cmps
add
add
dec
push
xor
xchg
fadd
lods
scas
imul
pop
inc
add
mov
sub
mov
add
and
and
add
and
add
mov
popf
je
sub
je
stos
push
hlt
xor
mov
sub
mov
pop
and
cmps
inc
fbstp
fst
sti
add
xor
mov
add
pop
inc
ror
and
or
adc
sahf
add
and
inc
test
add
add
rcl
cmp
enter
es
add
add
xchg
and
lock
movs
add
and
add
xor
mov
add
add
sbb
mov
mov
enter
mov
es
inc
and
fbstp
mov
call
mov
dec
ins
sub
fcom
inc
add
add
mov
jge
and
(bad)
jbe
adc
cmp
and
enter
sub
add
cwde
push
add
inc
add
sti
mov
adc
mov
test
inc
hlt
add
mov
aad
outs
add
lea
les
add
add
sub
mov
call
mov
mov
mov
stc
mov
ror
xor
cmp
mov
cmps
cmp
jmp
mov
aaa
(bad)
jmp
sbb
fadd
or
add
popf
add
enter
and
add
add
sti
mov
(bad)
or
test
call
imul
mov
ds
sub
mov
mov
add
xchg
inc
add
push
scas
add
add
leave
push
xchg
rcr
outs
add
mov
dec
pop
sub
mov
repnz
and
add
add
cmps
add
inc
cmp
add
add
mov
call
mov
mov
loope
es
add
lahf
add
and
and
inc
leave
or
add
jge
and
xor
add
mov
mov
mov
or
add
add
and
mov
add
push
mov
jns
sbb
outs
add
mov
mov
pushf
adc
inc
add
add
mov
add
loop
xor
cmps
inc
fistp
mov
add
jbe
add
adc
mov
sub
mov
mov
adc
aas
mov
and
inc
inc
and
sbb
adc
fild
pop
inc
outs
add
mov
mov
ds
inc
add
add
inc
and
(bad)
mov
cmp
popf
sbb
mov
popa
dec
enter
adc
add
add
add
add
push
and
add
aaa
push
leave
mov
test
and
inc
hlt
xor
adc
aas
cmc
inc
add
add
add
call
and
and
mov
cdq
and
lods
add
mov
inc
add
call
mov
cmp
inc
add
shl
das
adc
mov
and
pusha
inc
and
add
add
push
cmp
aaa
add
add
mov
dec
xor
inc
add
xor
mov
add
add
add
add
das
mov
mov
push
ins
add
mov
jl
sub
push
push
es
add
add
inc
and
sub
inc
add
add
and
add
add
ins
add
mov
mov
imul
and
cmp
cmps
mov
fwait
and
mov
mov
and
lods
add
call
sbb
add
mov
push
pop
es
add
inc
add
pop
add
inc
push
or
cmp
das
(bad)
add
mov
dec
sub
inc
add
fs
add
xchg
and
cmc
add
mov
sbb
inc
in
adc
mov
lods
add
add
ins
add
stc
add
fild
adc
sub
xchg
push
dec
and
add
mov
xor
adc
mov
add
cmps
call
mov
jl
sub
mov
cmp
mov
mov
sub
mov
add
add
add
sub
jno
sbb
add
mov
mov
stos
mov
push
repz
(bad)
jae
or
mov
add
jns
stc
imul
sti
hlt
add
add
mov
mov
inc
add
adc
mov
(bad)
loop
sub
cmp
aaa
add
ja
imul
add
sub
fdivr
inc
add
hlt
add
and
(bad)
fldenv
cmp
paddsb
xchg
imul
push
inc
add
add
mov
push
and
push
fsubr
mov
and
sbb
add
enter
imul
mov
add
sub
loope
es
add
enter
push
adc
mov
test
cmp
inc
hlt
mov
sub
imul
mov
mov
mov
mov
add
adc
inc
and
lods
add
popa
add
stos
add
add
mov
mov
mov
mov
mov
mov
(bad)
data16
add
cmps
add
mov
call
es
lods
add
sbb
inc
add
in
and
cmc
xor
adc
sbb
inc
and
enter
mov
test
push
add
cmp
sub
mov
push
cmp
in
add
adc
mov
shl
pop
pop
sbb
add
sbb
mov
daa
add
aaa
jno
add
mov
xchg
adc
inc
add
xchg
es
add
add
mov
ss
inc
and
sbb
and
and
add
mov
mov
call
or
and
inc
test
(bad)
cmp
hlt
add
adc
or
inc
add
mov
add
push
sub
mov
mov
mov
or
add
add
add
inc
sub
mov
aaa
sbb
cmps
aam
enter
call
cmps
and
add
movs
pop
xchg
xor
lods
mov
mov
inc
add
add
adc
and
jno
xchg
pop
and
cmps
cmp
add
mov
add
add
add
add
mov
mov
sub
test
add
xor
imul
add
add
sbb
pop
mov
inc
add
inc
add
and
inc
and
(bad)
jae
or
add
add
xor
add
add
add
repnz
data16
cmc
xor
jns
xchg
inc
in
adc
dec
and
aaa
add
add
push
aaa
add
inc
add
mov
les
lods
mov
mov
add
inc
and
add
in
fs
mov
mov
pop
mov
xchg
push
les
cmps
inc
mov
push
inc
xchg
xor
(bad)
(bad)
and
xchg
test
add
loope
sub
push
xor
inc
add
daa
inc
add
in
(bad)
in
xchg
sub
(bad)
sti
jnp
add
mov
mov
mov
push
retf
and
add
enter
push
aam
add
mov
pop
xchg
xchg
add
fsubr
and
add
mov
mov
add
mov
and
test
popa
jg
sub
inc
adc
xor
mov
mov
mov
push
sub
inc
add
shr
add
mov
retf
pusha
int3
test
add
add
mov
add
and
add
jecxz
mov
jmp
(bad)
sbb
lods
add
mov
add
jmp
add
add
mov
loopne
inc
add
inc
add
and
pop
cdq
mov
add
and
call
rol
xor
in
inc
add
mov
popa
push
add
add
and
pusha
inc
xlat
add
and
call
lods
add
inc
add
call
pusha
and
add
add
and
add
add
enter
push
call
mov
mov
mov
mov
mov
ds
add
inc
and
add
add
mov
dec
adc
add
inc
hlt
xchg
fsubr
inc
add
and
and
add
cmp
inc
and
(bad)
pop
and
cmps
cmp
add
loop
add
mov
mov
mov
mov
mov
inc
adc
cdq
and
lods
add
mov
add
mov
push
shr
inc
add
mov
add
inc
and
(bad)
mov
add
add
mov
add
xchg
add
add
add
mov
mov
and
ss
add
test
mov
xor
jns
pop
add
push
mov
leave
add
mov
das
or
call
mov
mov
test
mov
add
pop
mov
add
in
add
(bad)
jge
and
sbb
cmp
sbb
mov
mov
add
mov
lahf
add
inc
ins
mov
add
adc
add
inc
add
pop
add
inc
add
call
das
mov
cmps
xchg
mov
nop
movs
xor
lar
cli
add
std
or
fbld
pop
add
add
nop
cmp
test
add
mov
mov
add
test
loopne
mov
fdivr
dec
or
add
and
mov
add
sub
loope
es
add
add
mov
test
mov
add
add
push
add
mov
mov
mov
mov
and
add
add
fdivr
jg
add
inc
and
add
cmps
add
daa
add
mov
add
inc
add
mov
hlt
mov
mov
mov
mov
call
fwait
add
add
add
retf
xchg
sti
lmsw
lahf
mov
mov
push
and
add
add
mov
add
dec
add
popf
add
mov
mov
add
cmps
add
inc
and
sbb
add
dec
popf
add
stc
add
mov
mov
ds
inc
add
test
jns
retf
loopne
mov
and
fdivr
or
add
dec
cmp
dec
outs
add
and
cmps
add
loope
es
add
add
(bad)
test
add
xor
aad
add
cld
aam
into
xchg
mov
cwde
sub
add
add
add
cmps
dec
fwait
retf
and
fadd
lods
dec
lock
add
add
add
add
add
dec
popa
xchg
inc
and
add
and
dec
out
arpl
add
aam
inc
add
pop
xchg
mov
xchg
push
xchg
jmp
mov
fs
inc
xchg
daa
inc
add
rol
ss
mov
mov
cmps
cmp
sbb
add
fcmovne
push
mov
lods
add
jns
jo
dec
sbb
jl
test
cmp
cmps
in
dec
xor
add
mov
push
xchg
and
mov
and
xor
and
add
popf
add
pop
arpl
add
call
pushf
and
cmps
cmp
add
and
add
lahf
js
cmp
dec
loop
inc
add
add
pop
fcom
(bad)
fisttp
pop
inc
add
in
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
sub
sub
mov
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
add
add
sub
mov
mov
movzx
mov
mov
movzx
mov
xor
and
xor
and
mov
mov
xor
and
and
or
or
xor
mov
mov
mov
mov
mov
cmp
mov
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
movsx
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
movsx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
sub
sub
mov
mov
shl
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movsx
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jo
pop
add
adc
mov
jecxz
add
add
pushf
and
jp
psrlq
call
mov
cld
dec
leave
dec
dec
(bad)
ins
add
sub
add
pop
mov
loop
mov
outs
mov
movups
loop
add
inc
and
inc
pusha
inc
inc
(bad)
inc
in
jg
cs
add
push
stos
jae
sub
xor
psubusw
(bad)
fsubr
inc
jno
ja
rol
push
jecxz
loop
and
imul
jmp
mov
sub
fs
and
jle
inc
sar
jmp
fadd
jbe
or
and
je
stos
nop
add
mov
and
sub
mov
xor
test
add
iret
add
out
mov
mov
adc
cwde
inc
jno
sahf
pop
add
shl
xlat
shl
and
pop
adc
add
dec
add
leave
(bad)
mov
inc
leave
and
test
add
jmp
mov
sub
mov
je
jmp
push
inc
retf
pop
mov
mov
je
jmp
cwde
cmp
repnz
mov
mov
pop
cld
xchg
add
push
sub
inc
rcl
into
and
inc
jno
mov
mov
inc
mov
add
add
inc
andps
add
dec
in
inc
add
std
push
das
sar
mov
add
popf
pop
mov
mov
mov
paddsw
add
sub
mov
add
add
mov
lea
xchg
mov
retf
(bad)
adc
add
mov
(bad)
je
inc
mov
in
call
adc
add
and
(bad)
pushf
retf
pop
adc
add
dec
and
inc
add
mov
cli
call
sbb
adc
mov
add
add
add
add
stos
retf
mov
xor
and
jo
add
jne
pop
push
pusha
mov
jnp
ds
add
mov
outs
add
ja
loopne
inc
add
inc
and
mov
mov
leave
pop
clc
repz
rol
rol
cmp
jmp
mov
mov
mov
hlt
mov
pop
pop
ret
pushf
xchg
std
mov
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
adc
mov
sbb
jge
mov
ret
mov
cmp
inc
pop
pusha
mov
or
test
add
jmp
mov
out
icebp
movs
mov
add
test
add
push
add
sbb
mov
maxps
add
mov
add
inc
and
ins
mov
push
and
cmp
push
and
mov
add
add
in
retf
test
cmp
add
inc
add
or
inc
inc
rcl
jg
out
movs
cmp
fcom
inc
add
js
scas
(bad)
(bad)
jmp
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
pop
mov
ror
sub
sbb
aam
and
cmps
inc
and
add
jb
inc
pushf
and
and
add
(bad)
loope
xor
jno
mov
xor
rcl
retf
arpl
mov
lods
rcl
jmp
mov
iret
xor
(bad)
loope
sub
xchg
(bad)
ds
cmp
add
mov
inc
mov
sub
cmp
and
divps
cmc
xor
add
out
fwait
push
stos
inc
and
je
bnd
ds
pop
popf
xchg
cmps
sub
mov
not
jmp
stc
scas
mov
dec
jmp
jo
ds
out
add
add
iret
(bad)
daa
jmp
sbb
mov
cmp
pop
popa
mov
pop
(bad)
clc
add
je
jmp
xor
xor
sub
shl
aam
or
add
push
sbb
mov
mov
test
out
and
shrd
xchg
and
xor
xchg
add
mov
mov
add
mov
jmp
mov
and
loope
adc
mov
push
int3
mov
aam
sbb
jle
and
test
pusha
(bad)
(bad)
dec
aam
and
call
mov
and
push
jns
jmp
and
psubusb
cmp
mov
mov
paddd
mov
xor
xchg
mov
add
jecxz
add
add
out
fwait
into
jmp
call
in
mov
loop
fld
add
sub
sahf
cmp
stos
imul
(bad)
jnp
in
or
add
lea
pop
ret
cmp
(bad)
(bad)
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
jae
arpl
push
push
mov
mov
push
and
inc
(bad)
inc
mov
inc
dec
and
mov
lea
mov
jge
push
mov
push
inc
and
pop
inc
imul
sub
sub
adc
fisttp
and
cld
shl
add
mov
and
inc
(bad)
sbb
leave
push
push
mov
xor
add
mov
inc
retf
mov
ror
dec
add
add
dec
adc
mov
and
je
jmp
mov
lods
and
mov
adc
(bad)
xchg
dec
lahf
sub
add
iret
clc
mov
mov
(bad)
jl
add
dec
add
add
popa
sub
and
sete
add
pop
add
mov
sub
push
or
je
push
add
iret
jae
jno
sub
mov
je
jmp
cmp
dec
xchg
test
xchg
push
xor
sbb
popa
pushf
bound
call
je
popa
jne
mov
add
mov
jne
mov
dec
dec
or
or
(bad)
and
mov
jmp
bnd
xchg
add
into
pusha
pop
jge
mov
sub
repz
dec
mov
inc
push
adc
and
mov
imul
push
jl
and
jl
mov
jmp
xor
push
and
mov
call
cld
xor
cmove
loopne
mov
jmp
(bad)
xchg
adc
add
xor
mov
jbe
add
sub
and
sbb
push
xchg
sbb
cmps
add
inc
xor
sbb
add
mov
and
mov
jmp
mov
pop
adc
or
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
movzx
mov
mov
add
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
imul
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
sub
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
call
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
add
add
sub
mov
mov
add
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovb
mov
jmp
lea
mov
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
movzx
mov
mov
mov
mov
add
add
mov
mov
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
ret
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
dec
mov
push
and
xor
hlt
adc
mov
mov
mov
sub
pusha
and
sub
and
icebp
aas
lods
add
jmp
mov
sub
mov
psubb
add
and
sub
mov
psadbw
nop
add
add
inc
and
sub
mov
mov
add
or
xor
movs
cmp
jb
retf
add
pusha
test
adc
or
hlt
add
test
add
add
outs
push
xchg
dec
add
jge
ins
adc
lods
add
mov
mov
add
mov
repz
out
inc
and
je
jmp
jmp
mov
or
push
and
ins
jle
adc
sub
cmps
and
add
loope
inc
or
int
cdq
sbb
add
adc
xchg
add
add
add
rol
dec
pop
sub
cmp
or
cmp
cmovne
lods
into
and
dec
sbb
mov
mov
(bad)
(bad)
mov
sahf
pop
add
add
sub
mov
sbb
fucomi
aad
add
lock
mov
mov
mov
and
lods
xor
mov
pop
cli
cmp
or
and
add
or
rol
adc
pushf
pop
or
add
test
gs
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
add
sub
sub
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
sub
add
add
sub
sub
mov
mov
shl
add
add
mov
mov
mov
mov
mov
mov
call
sub
sub
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
test
mov
mov
lds
mov
mov
push
dec
or
push
and
xchg
lds
push
jmp
sub
mov
scas
or
mov
test
call
and
xor
add
dec
add
add
add
mov
sbb
cmp
ss
inc
and
sti
test
rol
mov
add
mov
outs
daa
fcomp
out
dec
adc
test
add
add
mov
pushf
cmp
je
jmp
mov
outs
imul
mov
add
add
push
repnz
and
mov
mov
mov
cmp
bsf
cmps
dec
and
mov
inc
(bad)
sub
(bad)
(bad)
cmp
xchg
xchg
sbb
inc
int3
mov
sub
add
mov
and
mov
or
clc
fisub
hlt
or
cdq
push
jmp
data16
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
and
cmp
or
inc
add
push
and
xchg
out
pop
mov
in
or
test
mov
sbb
inc
add
push
inc
inc
dec
xor
and
mov
add
in
je
sub
dec
inc
and
xchg
xor
add
dec
lahf
str
fwait
shr
movs
test
mov
add
cmp
sub
mov
and
neg
add
out
jne
add
mov
xchg
and
add
jne
invd
xchg
add
add
add
add
jmp
add
and
push
mov
xor
add
clc
add
test
adc
add
add
inc
and
push
sub
pop
shr
jnp
and
add
and
movs
rol
mov
test
aam
movs
sbb
pop
shl
hlt
mov
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movsx
mov
movsx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movsx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
mov
movzx
cmp
cmovl
mov
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
shr
or
pop
adc
int3
pop
mov
cmc
xor
fadd
and
mov
inc
and
inc
add
icebp
mov
and
stos
dec
and
cmp
and
rcl
xor
mov
and
popa
dec
and
mov
and
call
mov
pop
pop
outs
iret
(bad)
dec
scas
enter
sub
iret
push
add
fadd
aas
int
scas
jmp
inc
add
add
inc
pop
and
aad
xchg
popa
jo
inc
inc
and
call
sub
xchg
dec
mov
lea
mov
ret
lahf
aad
add
and
test
rcl
add
fdivr
into
xchg
add
and
mov
movs
jle
inc
sbb
lds
mov
xor
dec
and
dec
jmp
pop
jmp
jg
inc
sbb
mov
jg
jle
jl
add
aam
into
test
inc
xor
je
repnz
(bad)
and
mov
clc
dec
in
pushf
fisttp
rcr
add
jmp
mov
vmread
adc
push
mov
add
push
in
out
pushf
fild
fcom
cdq
add
jmp
inc
inc
and
mov
xchg
ret
je
mov
mov
xor
mov
je
pop
inc
and
je
jo
cmp
add
and
sub
vmread
adc
add
add
push
and
sar
mov
mov
add
pop
jmp
jle
sbb
and
jmp
lods
jp
(bad)
addr16
xlat
add
jp
push
ins
add
add
(bad)
sti
pop
adc
add
paddusw
mov
jmp
add
and
into
mov
add
add
adc
inc
inc
jp
and
and
rcr
sub
pop
mov
xchg
sub
or
jmp
mov
sub
dec
call
rol
add
sub
ret
jo
cdq
add
and
add
add
mov
add
mov
test
dec
add
fdiv
xchg
cmp
scas
add
lea
pop
pop
pop
push
lahf
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
cmp
push
pop
or
and
and
les
sbb
inc
add
sub
jno
cmp
in
sar
jns
imul
enter
(bad)
and
stc
aam
dec
inc
and
add
or
and
std
xchg
out
sbb
ror
mov
mov
sbb
pop
rcl
sub
mov
popa
je
int3
dec
mov
shr
add
add
push
leave
add
jne
cmp
in
popf
test
add
add
(bad)
in
sbb
mul
loopne
je
jmp
jmp
add
nop
aad
call
push
mov
leave
xlat
and
cmovae
mov
and
push
add
inc
add
mov
in
mov
cmp
(bad)
call
push
fldcw
fmul
(bad)
(bad)
inc
push
and
or
sti
dec
repz
jmp
mov
mov
jmp
mov
mov
sub
sub
mov
enter
jb
jmp
mov
pushw
inc
xor
add
lods
jb
pop
pop
rol
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jle
or
xchg
sbb
jne
mul
mov
(bad)
mov
mov
out
and
jl
pop
or
inc
fistp
xchg
and
mov
mov
pop
lahf
or
inc
pop
icebp
mov
fld
add
jmp
or
lea
inc
pop
inc
jp
lods
jnp
cmc
dec
add
add
cmp
dec
inc
and
sub
dec
stc
and
pminsw
add
rol
xlat
out
and
jno
cmp
add
test
add
mov
xor
mov
dec
add
aam
mov
mov
lds
mov
je
sbb
mov
rol
sub
adc
jo
add
dec
rol
add
ror
and
inc
cmp
je
jmp
mov
jo
enter
outs
aaa
into
inc
pop
add
add
jns
and
xor
paddq
(bad)
and
add
int3
pop
add
sub
fcomp
in
and
add
test
add
mov
cmc
mov
lea
jp
retf
aad
xchg
cmp
cmovb
dec
inc
in
mov
add
add
iret
and
xor
add
mov
mov
js
in
(bad)
(bad)
jl
and
(bad)
nop
jp
hlt
add
add
xchg
mov
add
mov
dec
cmps
sar
into
sbb
and
nop
mov
and
jmp
mov
dec
lea
dec
std
scas
or
unpckhps
mov
mov
call
sub
(bad)
aas
push
into
sbb
pop
and
xlat
cmp
or
test
or
xor
pop
repz
and
jg
ror
mov
inc
mov
add
jns
xchg
lock
xor
add
pop
inc
jp
(bad)
out
rol
rol
lea
jg
pop
pop
pop
ret
jmp
nop
push
mov
push
mov
mov
mov
mov
add
pop
ret
nop
push
mov
mov
imul
sub
add
add
mov
shr
xor
mov
xor
and
mov
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
add
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
movzx
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
add
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
sub
sub
add
shl
add
mov
mov
jmp
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
movzx
mov
call
mov
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
movzx
mov
call
mov
movzx
mov
mov
call
mov
sub
mov
add
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
cdq
idiv
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
cdq
mov
idiv
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
and
mov
mov
or
add
mov
mov
mov
ret
and
loope
(bad)
jmp
not
add
jmp
add
add
push
mov
mov
fs
fcmovnb
inc
and
mov
and
fisubr
test
dec
and
add
out
add
and
sub
jecxz
and
(bad)
outs
xchg
add
movs
add
sub
mov
int
xchg
add
shl
add
add
pop
cmc
push
fiadd
jb
cmc
repnz
nop
cmp
dec
inc
int
inc
mov
ret
pushf
out
or
add
loopne
mov
mov
sub
or
into
dec
sub
(bad)
mov
pop
xchg
and
add
add
add
(bad)
xor
xor
and
data16
add
or
test
push
int3
(bad)
dec
add
inc
and
dec
push
loope
dec
fwait
out
aam
(bad)
call
add
add
add
add
mov
mov
and
add
adc
xor
mov
sub
mov
cvtps2pi
(bad)
call
pop
inc
lds
pop
sar
hlt
add
mov
sub
push
sub
add
mov
mov
shl
add
mov
mov
and
jecxz
icebp
or
push
ds
inc
push
(bad)
dec
add
or
sub
push
push
mov
jmp
inc
and
(bad)
xchg
inc
es
lock
fucomi
inc
add
pop
ja
sbb
in
(bad)
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
dec
(bad)
scas
inc
mov
ds
mov
mov
ret
mov
add
push
or
sti
(bad)
mov
test
xchg
add
add
mov
(bad)
jmp
ins
push
inc
add
sbb
sahf
loop
or
je
(bad)
mov
xor
or
mov
mov
fild
js
add
jg
add
sti
pop
xor
adc
adc
mov
lahf
sub
(bad)
push
pop
xlat
mov
push
jo
sahf
sbb
mov
xor
cmp
outs
ins
jg
(bad)
js
push
add
inc
and
pop
push
add
cld
je
jmp
cmp
sub
xchg
push
pop
ss
in
add
je
sti
pop
add
mov
sub
mov
xchg
repz
cmc
add
add
inc
and
jg
adc
outs
jg
jle
mov
xchg
jo
lock
dec
ja
fld
push
add
add
add
xor
repz
inc
pop
loope
sbb
add
add
sub
xchg
inc
xor
jg
imul
jnp
sub
mov
and
jg
push
mov
xchg
dec
mov
and
add
sub
(bad)
mov
je
jmp
mov
jo
xchg
hlt
push
mov
sbb
pusha
mov
add
add
cmps
inc
cmp
push
test
movs
inc
fs
add
sbb
inc
lahf
ret
loopne
jmp
add
add
mov
js
fld
and
sub
mov
mov
js
xor
mov
mov
mov
mov
bswap
adc
add
ja
add
fld
sub
mov
je
jmp
sbb
and
xchg
ss
pushf
test
add
js
push
movs
jo
and
test
ror
test
sbb
add
ds
mov
mov
mov
and
pushf
into
push
sub
jmp
jmp
mov
mov
mov
pop
and
(bad)
pushf
inc
or
add
add
inc
and
push
jne
icebp
jmp
or
jo
pop
and
and
mov
mov
add
mov
mov
push
mov
and
loop
and
adc
inc
pop
je
or
add
lock
call
push
add
imul
cmp
ja
je
adc
cdq
mov
mov
pushf
in
and
add
add
jl
jp
jb
mov
add
inc
or
repz
add
add
inc
cmp
push
jae
sbb
cwde
cmp
cs
mov
and
pop
and
add
push
pusha
nop
mov
add
inc
and
adc
and
sbb
add
mov
jecxz
je
jo
and
mov
xchg
adc
fnstsw
test
adc
mov
add
cmp
je
pusha
fnstsw
jmp
hlt
icebp
mov
add
lahf
(bad)
push
out
mov
sbb
inc
hlt
mov
jmp
xor
lahf
je
xor
sub
mov
and
add
add
rcl
je
hlt
jmp
push
xor
ret
(bad)
xlat
addr16
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cwde
mov
or
jne
mov
dec
mov
and
push
lods
ds
pushf
fsub
sbb
mov
mov
mov
sub
call
aaa
mov
pop
lahf
mov
add
test
mov
mov
nop
sub
jg
loop
sbb
test
mov
mov
mov
mov
rcl
push
pop
xchg
xchg
mov
push
jecxz
add
jl
jg
jmp
mov
movs
adc
add
test
sbb
loop
push
lock
jge
add
mov
and
add
add
popa
add
add
sub
add
and
and
aas
add
jg
jmp
nop
test
add
in
xchg
mov
or
add
add
add
add
add
mov
call
iret
cmp
add
xchg
fdiv
and
std
add
iret
int
sub
add
add
or
add
call
add
sub
mov
jmp
xchg
bound
add
adc
cld
iret
lds
adc
add
sub
sub
mov
push
into
jne
cmp
inc
add
test
es
add
mov
adc
cmps
repz
add
jg
xchg
sub
or
add
aaa
call
lods
xchg
add
ds
popf
or
push
jmp
mov
clc
sub
mov
sub
add
sub
add
mov
sub
mov
sbb
mov
or
add
fsubr
sbb
cld
loop
push
stos
xchg
sbb
jl
xcrypt-cfb
cmps
and
call
mov
push
dec
neg
add
adc
add
je
mov
mov
push
add
add
cmc
pop
push
adc
sub
add
add
add
add
adc
pop
test
cmp
adc
mov
add
enter
test
fwait
add
add
jmp
mov
push
mov
test
push
add
mov
clc
jmp
adc
push
add
fbstp
mov
inc
(bad)
and
add
push
mov
enter
ror
repz
add
xchg
push
jge
sub
mov
jg
jmp
mov
sbb
jmp
sbb
cld
loop
adc
int3
or
cs
inc
and
fwait
add
xchg
mov
add
pcmpgtb
xor
inc
mov
ror
sub
adc
call
jmp
mov
add
ret
and
add
add
fmul
add
add
mov
push
sbb
inc
mov
je
pop
jno
mov
sub
inc
fwait
imul
popf
les
add
test
jl
push
and
add
add
mov
iret
fadd
add
(bad)
pop
add
jmp
fsubr
sbb
cld
iret
push
or
fsubr
add
call
lds
or
add
sub
bound
aam
mov
add
mov
lds
lods
mov
aaa
test
add
iret
stos
ss
cmps
ss
clc
add
stos
add
jmp
mov
add
sub
repnz
and
add
push
add
fbld
add
shl
add
ds
mov
enter
(bad)
and
clc
sbb
mov
sub
dec
add
mov
and
add
cmp
inc
jmp
fsubr
and
add
add
jno
mov
daa
adc
inc
sub
aaa
add
jnp
movs
mov
sbb
mov
add
sub
cmp
add
nop
sbb
add
mov
test
movs
cmps
and
add
pop
add
add
mov
iret
fadd
add
test
and
mov
lods
(bad)
or
sti
sbb
mov
add
mov
test
cmp
and
jnp
jmp
mov
sub
call
xchg
stos
ins
mov
add
(bad)
lds
add
ds
test
add
add
mov
push
add
test
add
ds
mov
mov
test
sub
and
stos
add
sbb
fdiv
lea
and
add
mov
add
push
lods
adc
fcom
cdq
add
movs
dec
pop
mov
daa
test
out
test
sub
add
sub
mov
jg
jmp
mov
and
add
adc
xchg
test
and
sub
add
push
test
add
add
repnz
and
add
add
xor
mov
add
mov
mov
mov
sbb
add
cwde
lea
mov
mov
add
mov
in
and
mov
push
add
add
aad
jno
add
mov
psubb
mov
cs
add
adc
mov
add
add
cld
add
pop
sub
mov
push
loopne
add
inc
add
sub
mov
pop
mov
cld
push
sub
inc
data16
fmul
add
add
mov
add
loope
cmp
inc
test
pop
add
jmp
pusha
or
div
xor
dec
aad
js
jmp
and
clc
add
sbb
and
add
add
mov
rdpmc
int3
jecxz
mov
add
add
sub
and
and
setl
add
loop
add
sbb
mov
sub
(bad)
out
or
mov
add
pop
mov
and
inc
add
jge
inc
and
(bad)
and
add
jmp
mov
push
jl
shl
mov
test
add
aaa
pop
push
add
jmp
test
aam
jno
mov
jae
xor
jmp
nop
test
cwde
add
lahf
jg
push
mov
test
add
stos
rol
jnp
mov
sbb
leave
call
pushf
and
add
jmp
mov
push
stc
sbb
mov
jne
std
cmc
inc
and
daa
test
lea
jmp
lds
call
xchg
mov
mov
mov
cld
sub
imul
add
lea
dec
mov
sub
bound
cmp
mov
add
mov
and
aas
add
shl
push
inc
je
add
dec
add
lods
and
mov
jmp
pop
mov
and
dec
test
fwait
add
mov
sub
mov
mov
sbb
add
mov
sub
and
je
jmp
dec
mov
xor
adc
inc
cmps
mov
mov
arpl
add
clc
sbb
and
add
add
pop
sub
les
mov
add
xor
cli
ror
ds
mov
mov
adc
cmp
cmovl
test
add
aaa
mov
lea
cmp
out
xchg
adc
sub
jl
rol
mov
fcomp
imul
mov
and
mov
add
inc
mov
sbb
and
add
add
xor
clc
add
mov
cmp
and
add
add
cli
add
imul
mov
test
jnp
add
and
xor
mov
mov
add
sbb
mov
mov
mov
cmp
add
add
mov
and
add
bound
add
mov
fsubrp
and
(bad)
pop
mov
into
arpl
mov
cmp
push
inc
add
add
add
add
div
add
shl
aaa
mov
outs
and
add
mov
fimul
add
test
add
lods
popf
sub
inc
add
cld
add
sbb
mov
mov
mov
or
call
dec
test
stos
sub
out
test
repnz
iret
mov
mov
cmp
add
mov
js
loop
nop
mov
pop
mov
add
push
mov
and
mov
jno
(bad)
inc
jmp
add
xchg
and
push
add
adc
imul
inc
fadd
add
and
and
in
fmul
add
add
add
inc
retf
xchg
and
mov
add
test
add
mov
fidivr
jmp
js
loop
mov
nop
test
mov
mov
mov
mov
and
and
pop
cmp
(bad)
inc
dec
shl
ds
mov
and
jmp
stos
add
cld
add
clc
sbb
xchg
add
mov
cld
adc
(bad)
outs
mov
add
mov
mov
lods
bound
dec
add
xor
xchg
lahf
icebp
movzx
mov
cld
adc
xor
(bad)
pushf
add
add
jl
sbb
inc
addr16
mov
popf
gs
mov
add
add
mov
xchg
dec
inc
test
sub
in
xchg
adc
add
xor
add
aaa
pslld
add
add
adc
test
pop
std
add
(bad)
(bad)
fldl2t
inc
popf
add
movzx
mov
bswap
sub
sub
mov
sbb
ins
inc
jmp
mov
jae
add
cld
adc
sbb
test
loopne
ja
adc
add
add
cmp
mov
add
mov
cld
adc
add
add
psraw
sbb
adc
cld
adc
and
mov
jl
mov
add
cmp
mov
and
mov
or
mov
int3
xchg
fimul
(bad)
dec
mov
mov
es
and
adc
add
add
adc
add
push
and
mov
bound
dec
inc
out
(bad)
dec
or
and
add
dec
(bad)
clc
add
dec
call
add
inc
cmps
mov
sub
add
test
jp
add
shl
jmp
mov
mov
jae
lods
add
mov
and
std
add
mov
sbb
cmc
jl
sahf
mov
and
(bad)
out
or
ffreep
stos
(bad)
dec
jp
mov
mov
xchg
jae
add
adc
xor
add
(bad)
fwait
lea
mov
add
mov
inc
and
add
lahf
add
xor
push
(bad)
hlt
sbb
inc
add
adc
add
inc
sub
add
jo
add
ret
dec
jl
sbb
xchg
nop
jmp
adc
mov
hlt
and
inc
add
mov
cld
imul
adc
mov
sahf
mov
inc
test
outs
add
add
dec
mov
lods
mov
cld
imul
add
mov
js
add
mov
push
sub
add
and
mov
iret
or
adc
stos
inc
dec
add
mov
mov
add
add
cld
in
dec
xor
add
(bad)
repz
ret
(bad)
(bad)
nop
sub
inc
jecxz
add
mov
xchg
rol
add
(bad)
or
outs
xor
inc
out
jns
inc
ret
add
adc
test
pop
add
add
(bad)
mov
add
mov
ss
and
jmp
pcmpeqb
add
push
jmp
mov
jo
add
xchg
add
jno
sahf
add
mov
jae
dec
add
add
add
es
add
inc
pop
test
adc
inc
aaa
jne
mov
aad
sub
scas
mov
jl
add
call
jo
add
jmp
sub
add
popf
add
(bad)
sub
pop
adc
cld
aad
xor
mov
mov
ret
sub
mov
sub
cmp
pslld
mov
jmp
add
adc
add
popf
add
test
mov
lods
add
add
add
add
(bad)
js
mov
jne
sub
mov
mov
mov
xchg
mov
mov
or
add
sub
test
mov
add
mov
fiadd
call
(bad)
test
push
inc
add
add
(bad)
js
mov
popa
sub
jmp
mov
xchg
push
cmp
sub
inc
add
ins
test
mov
add
sub
inc
add
popf
add
mov
nop
test
retf
sub
jmp
mov
(bad)
or
stos
sub
pop
add
jmp
mov
xor
pop
jmp
mov
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmovne
aaa
dec
jno
in
imul
push
mov
jecxz
and
add
add
add
sub
add
dec
add
add
mov
imul
add
and
add
mov
and
dec
sar
jl
jb
mov
mov
and
mov
test
sbb
add
jge
mov
pushf
push
into
icebp
mov
jecxz
stc
test
lods
push
rol
sub
mov
xchg
ins
out
dec
sbb
cmps
add
js
clc
retf
mov
push
add
aaa
cmp
push
out
jecxz
out
gs
popf
add
add
push
add
cmp
and
sub
mov
sbb
add
add
jb
cdq
push
add
dec
pop
je
loope
add
add
inc
and
sub
xchg
cdq
add
mov
inc
les
sbb
gs
mov
lods
fimul
out
out
or
jmp
pop
inc
mov
pop
pop
mov
jg
dec
mov
mov
adc
sub
add
add
cmp
add
add
and
sub
hlt
inc
and
jg
jmp
loope
and
sub
cmp
pop
(bad)
lods
add
psubsw
rol
add
mov
inc
and
jg
jmp
add
inc
fisttp
movs
xor
(bad)
dec
add
rol
xchg
mov
mov
in
imul
mov
mov
sub
mov
test
call
loopne
lds
adc
lods
repnz
add
psrlq
js
xchg
add
and
sub
mov
add
push
loopne
add
mov
sub
mov
lsl
add
mov
inc
les
dec
pop
cmp
and
test
cmp
idiv
sub
lahf
jne
mov
je
pop
sbb
add
mov
mov
adc
pop
aaa
icebp
add
shr
add
pop
bound
add
loopne
and
mov
mov
mov
lods
push
push
add
add
ja
and
xor
xchg
ss
test
cmovne
mov
jmp
loope
and
add
add
push
mov
mov
or
and
add
add
je
jnp
xor
mov
add
and
dec
and
add
add
psrlq
add
add
adc
jge
loopne
repnz
add
cmp
rol
add
cmp
mov
dec
mov
fwait
cmps
add
or
push
add
and
call
in
xor
sbb
mov
mov
or
and
lds
add
test
retf
sub
pop
movs
add
add
and
jb
shl
loopne
test
xstore-rng
cmps
add
mov
mov
push
mov
fistp
dec
mov
mov
sub
add
lds
xor
mov
mov
xchg
cld
jg
idiv
shl
add
add
add
add
mov
xchg
and
add
sbb
je
jo
rol
and
xor
mov
sub
fistp
adc
add
push
psrlq
mov
mov
jmp
mov
jmp
and
add
cmps
mov
or
mov
sub
jge
add
add
mov
and
mov
xchg
ins
add
fwait
mov
add
mov
test
cmp
call
cmp
add
add
jae
add
or
xchg
and
add
mov
mov
(bad)
cmc
and
push
into
icebp
mov
inc
lods
or
iret
push
add
jmp
ror
adc
add
cmp
mov
movs
add
inc
and
jmp
sub
and
mov
add
push
mov
loopne
xchg
add
je
jo
jmp
xchg
pop
mov
cmp
sbb
cmps
mov
test
mov
movs
je
inc
add
test
rol
mov
out
inc
xchg
add
mov
jmp
daa
inc
mov
add
add
les
mov
fnstenv
addps
lea
loop
jmp
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ins
inc
fcompp
dec
xchg
mov
aaa
mov
sub
push
mov
adc
and
add
add
add
imul
cwde
add
add
push
push
fisttp
and
add
movs
fistp
pop
xchg
add
add
or
add
dec
cwde
mov
add
xchg
hlt
pop
rcl
ss
add
mov
add
xchg
test
sub
add
aam
popf
add
retf
mov
pop
push
xchg
inc
inc
pusha
and
out
paddusw
add
fbld
mov
mov
add
xlat
iret
mov
mov
sub
(bad)
and
and
jmp
pop
push
and
ja
xor
inc
mov
test
add
jmp
adc
sub
retf
inc
and
setno
sub
add
add
push
add
add
sub
pop
(bad)
and
js
(bad)
dec
adc
jmp
mov
pop
add
sub
mov
rol
push
lds
sbb
add
add
jge
cmp
mov
push
add
add
adc
sub
mov
and
call
cdq
pop
add
mov
sub
mov
xor
(bad)
fs
and
xlat
or
sub
mov
retf
jg
jmp
mov
sub
mov
jg
push
add
inc
add
add
out
mov
jg
jmp
out
test
add
cmp
inc
and
call
(bad)
cs
test
cmps
push
add
int3
mov
lea
sahf
add
add
mov
and
dec
add
sub
mov
mov
call
add
cdq
fisttp
xchg
add
add
mov
inc
paddq
add
add
add
add
mov
and
arpl
add
icebp
cmp
mov
and
mov
sti
push
push
rol
push
mov
jmp
data16
test
add
test
add
push
and
mov
inc
add
mov
mov
add
fsub
rcl
pop
stos
dec
sbb
push
xchg
lds
test
mov
test
xlat
add
sub
mov
mov
test
scas
add
jle
sti
add
mov
ficomp
sub
pop
aaa
inc
and
adc
xchg
add
arpl
scas
sbb
and
movaps
dec
adc
inc
ins
xchg
add
jo
and
rcl
sub
mov
stos
pop
add
mov
mov
sub
mov
and
je
jmp
mov
pop
push
cdq
add
mov
pop
adc
sbb
and
cmp
jno
inc
and
imul
adc
sar
xor
pop
inc
ss
sar
xchg
add
add
sub
hlt
xlat
and
shl
rol
mov
add
lea
pushfw
add
add
add
sub
add
add
xlat
and
repz
add
mov
outs
xchg
push
sti
and
cmc
push
idiv
inc
icebp
mov
xchg
push
(bad)
fld
cmp
add
retf
and
add
jecxz
add
mov
jmp
mov
and
fisttp
xchg
add
mov
add
add
mov
inc
dec
add
sub
inc
movs
add
xchg
pop
es
mov
and
movzx
push
xchg
and
xchg
cli
and
call
movs
loopne
or
mov
add
dec
(bad)
mov
xchg
jge
add
(bad)
adc
nop
out
push
jp
sbb
jmp
cmps
movs
jg
in
mov
cmp
(bad)
ror
add
fwait
add
daa
test
add
out
add
and
add
add
mov
jmp
xchg
fcomp
cmp
addr16
mov
add
arpl
inc
inc
mov
and
lods
dec
clc
inc
xchg
add
mov
test
fild
ret
cmp
xchg
add
mov
mov
dec
mov
add
imul
cmp
add
push
mov
rcl
test
cwde
add
sbb
push
add
jecxz
lds
xchg
add
add
pusha
outs
iret
imul
int3
lods
dec
adc
rcr
nop
cdq
add
jmp
mov
mov
add
fldcw
add
retf
add
jno
add
or
mov
idiv
dec
adc
test
sti
add
push
rol
add
pop
xchg
mov
add
mov
sub
xchg
and
jmp
pop
test
add
mov
repz
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
add
and
mov
loope
cmp
mov
int
cli
mov
add
cmp
push
mov
add
add
pop
test
cwde
add
xchg
add
(bad)
test
pop
in
and
inc
add
mov
lock
xor
ins
cmp
push
scas
or
add
stos
pop
and
add
aad
add
fmul
cmp
jb
ja
out
and
sub
add
mov
call
mov
mov
fdivr
cmp
and
add
mov
(bad)
out
and
or
push
rol
cmp
aam
add
arpl
lods
jo
or
add
clc
add
mov
lea
jg
add
mov
add
add
add
or
add
test
add
adc
mov
inc
cmp
push
inc
les
add
ins
mov
lea
cwde
xor
fldenv
or
add
or
add
pop
mov
or
mov
aaa
mov
mov
dec
cmp
add
mov
add
scas
mov
adc
inc
add
fist
mov
pop
adc
wrmsr
adc
add
push
add
pop
lock
jl
adc
clc
loop
push
jns
mov
push
xchg
fdiv
cmp
aad
test
add
add
add
mov
sar
mov
add
mov
aas
aaa
add
test
add
mov
mov
and
mov
cld
cld
push
add
jl
pushf
(bad)
(bad)
mov
cmp
ja
add
add
and
or
mov
out
mov
cmp
mov
(bad)
mov
lea
(bad)
add
or
sbb
and
ins
icebp
jl
or
add
mov
jg
add
in
mov
lock
lea
mov
jo
sbb
add
ins
lea
pop
mov
add
xchg
and
fild
push
stos
adc
nop
pop
stos
mov
adc
pushf
inc
and
or
and
clc
mov
mov
(bad)
mov
and
clc
mov
lea
pop
add
pop
mov
xchg
pop
add
pop
push
add
jl
imul
mov
nop
add
ficom
jbe
push
dec
mov
and
push
ins
cld
or
test
push
and
call
lea
and
add
sub
fidivr
mov
mov
or
shl
pop
or
(bad)
call
clc
test
scas
call
sbb
dec
jns
and
mov
punpckldq
add
mov
arpl
test
add
cmp
mov
cli
and
add
fimul
xor
add
push
stos
adc
add
jmp
and
into
add
mov
add
push
and
and
add
or
in
and
add
add
(bad)
and
aad
outs
adc
push
and
rsm
sub
rol
je
push
jno
mov
test
add
add
inc
into
in
mov
and
add
add
(bad)
and
aaa
add
add
mov
and
add
dec
mov
rsm
add
add
mov
add
add
sub
mov
movzx
add
push
inc
add
add
sub
clc
push
add
imul
add
add
stc
pop
in
add
mov
pop
ror
add
(bad)
sbb
add
scas
or
mov
aad
jmp
and
add
xchg
test
add
push
enter
add
mov
jle
test
lods
xor
add
js
add
mov
mov
jo
or
ins
repz
lods
pop
sub
adc
adc
mov
jg
and
in
test
add
pop
and
add
fdivrp
cmp
pop
test
adc
add
mov
cmp
xchg
pop
aam
daa
mov
sbb
add
test
cli
jb
mov
emms
sar
xchg
adc
fcomp
mov
stos
cwde
rcl
mov
pushf
and
xchg
add
sbb
test
loopne
add
jns
dec
add
test
add
add
ja
add
add
add
aad
call
sub
test
mov
add
stos
mov
add
add
add
test
push
add
or
rol
test
fiadd
clc
add
add
cmp
pop
jne
mov
add
stos
add
add
mov
and
add
push
jbe
fs
sbb
test
ins
(bad)
push
push
add
ins
add
mov
fild
add
clc
test
push
call
xlat
xor
push
pop
add
mov
add
add
sub
mov
add
arpl
clc
push
scas
or
mov
sub
mov
xchg
add
inc
add
jg
and
mov
loop
vmread
cmp
test
or
add
and
int3
pop
inc
mov
add
add
add
add
stos
adc
add
add
mov
jo
xlat
mov
mov
mov
loopne
mul
in
push
fimul
test
add
jmp
mov
and
add
fsubr
xchg
and
paddusb
in
and
add
add
sub
mov
fs
jp
add
jmp
mov
mov
xor
gs
add
pop
push
pop
in
scas
xor
arpl
in
dec
mov
psubsb
jg
add
and
add
and
jl
push
imul
sub
add
mov
sub
mov
and
ror
add
ins
add
aad
cmp
fs
test
sub
test
mov
add
scas
xor
lock
pop
cmp
daa
and
inc
test
fadd
scas
or
cmp
clc
test
jmp
movs
mov
out
add
stos
test
pop
push
pop
sub
lods
inc
and
sysexit
xchg
repnz
mov
mov
add
mov
and
idiv
jmp
mov
xchg
and
dec
popa
mov
outs
pandn
add
add
fld
add
xor
add
sub
fld
jle
jmp
pop
test
xor
inc
mov
add
ss
in
and
mov
aad
adc
inc
sbb
or
and
add
and
xchg
and
and
pandn
add
in
jmp
sbb
add
add
mov
mov
sbb
in
cli
add
clc
cmp
xchg
inc
mov
jmp
push
test
xchg
jo
jl
add
lea
out
lds
mov
mov
ss
and
fnsave
out
jbe
xor
add
sub
pop
in
add
punpcklwd
mov
icebp
add
das
jge
test
cmp
push
das
call
ins
add
add
clc
add
test
add
aad
add
add
add
xchg
and
rol
shr
push
mov
add
mov
jle
inc
sub
cmp
jmp
(bad)
call
add
pop
sti
outs
cmp
add
movs
add
mov
add
jl
pop
add
fimul
mov
call
mov
add
adc
xor
dec
add
pop
jecxz
mov
and
stc
add
rcr
add
aad
test
xchg
add
daa
sti
dec
jmp
mov
mov
mov
cmp
and
pop
lock
arpl
add
jge
mov
and
or
ins
jmp
mov
cwde
xor
int
ds
and
pop
push
pop
ins
jp
mov
add
psubd
mov
jmp
mov
jmp
mov
mov
call
add
xchg
mov
xlat
leave
test
and
test
adc
mov
push
add
scas
mov
or
pop
std
outs
lahf
jmp
push
xor
movs
iret
push
pop
repnz
cld
adc
cmp
push
pop
retf
add
add
add
test
dec
dec
cmp
sti
pop
jmp
inc
add
aad
call
adc
mov
add
add
add
add
rsm
cmp
and
mov
or
cmp
add
mov
cld
adc
cmp
out
jecxz
(bad)
(bad)
mov
lea
mov
mov
add
inc
and
mov
mov
sbb
push
mov
test
mov
ficomp
add
add
test
add
add
mov
mov
shl
add
test
mov
mov
adc
add
add
adc
mov
icebp
sbb
pop
cld
adc
icebp
(bad)
adc
stos
add
mov
in
add
jl
jb
ret
jnp
test
test
add
ins
add
sar
sub
add
imul
add
and
mov
dec
inc
or
add
and
inc
xor
arpl
retf
add
cs
imul
ds
(bad)
(bad)
call
pushf
fistp
and
and
mov
add
and
idiv
scas
test
add
pop
int3
test
add
or
jmp
add
jl
test
add
add
aad
mov
push
add
add
xchg
mov
loope
add
test
mov
mov
add
(bad)
cmovne
mov
sub
add
mov
mov
fidiv
and
outs
test
add
mov
add
xor
add
mov
mov
add
cmps
lods
call
add
mov
add
mov
dec
add
fxch
hlt
push
pop
aaa
add
in
push
(bad)
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
add
pop
pop
ret
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
lea
lea
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
lea
mov
call
lea
mov
mov
sub
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
mov
call
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
push
mov
cmp
or
cmp
adc
add
add
sub
xor
add
mov
add
test
arpl
sub
pop
and
retf
cmp
mov
fistp
(bad)
add
push
fadd
int3
adc
push
add
add
out
(bad)
(bad)
and
sbb
(bad)
jge
ret
add
cmp
(bad)
cmps
add
add
add
test
into
push
add
out
add
mov
pop
mov
add
add
add
dec
lds
add
push
add
retf
add
inc
add
xlat
mov
mov
fnstsw
add
adc
mov
mov
mov
int3
test
mov
out
mov
repz
sahf
cmp
push
add
push
add
out
push
cmp
or
push
(bad)
mov
mov
add
sub
pushf
scas
imul
nop
push
add
or
add
push
adc
sbb
popa
push
add
mov
pushf
ins
add
mov
cmps
fsub
xchg
out
mov
ins
xchg
xor
mov
and
test
mov
add
call
and
push
add
loop
mov
push
jb
push
or
or
out
out
mov
call
push
jb
mov
(bad)
out
lods
xlat
push
add
out
les
mov
and
add
add
mov
xchg
and
inc
add
mov
and
add
add
push
cmp
mov
add
sub
xchg
and
(bad)
add
add
cmp
add
add
adc
mov
ror
jmp
arpl
or
dec
mov
clc
sub
sub
add
and
cmps
fsub
pusha
cwde
in
mov
inc
xlat
xchg
mov
add
add
and
cmp
sub
mov
rol
add
out
call
cli
cli
mov
mov
mov
add
test
imul
xchg
sub
cwde
test
(bad)
sahf
add
jbe
add
add
mov
ret
sbb
add
or
and
or
jg
jmp
add
inc
xlat
mov
dec
fsubr
mov
out
pop
(bad)
sbb
add
add
add
sub
pop
push
clc
add
out
test
inc
add
push
sahf
cmp
add
ret
lds
add
(bad)
mov
add
cmps
fmul
xchg
arpl
sub
mov
je
jmp
add
sbb
or
or
jg
stos
xlat
sahf
cmp
and
add
aas
mov
addps
add
add
test
lahf
add
mov
mov
add
(bad)
int3
add
add
add
add
test
cmp
sub
test
je
push
cmps
inc
xlat
sahf
mov
frstor
sub
mov
aaa
or
mov
sub
fadd
add
out
out
bound
and
add
add
jge
arpl
add
and
and
xor
(bad)
fiadd
add
push
mov
cmps
and
mov
sub
das
pop
das
inc
out
out
push
test
add
ja
std
add
out
add
sub
ins
pop
or
fadd
jg
push
adc
add
mov
sub
mov
test
add
push
mov
and
or
or
add
setle
inc
xlat
add
add
movs
dec
mov
add
inc
jo
or
rol
fmul
(bad)
aad
add
jmp
call
sub
jecxz
lods
mov
(bad)
and
cmp
add
shl
std
stos
aam
(bad)
and
xchg
add
call
sahf
jmp
mov
ret
js
mov
mov
and
add
add
add
add
sub
mov
out
psrlq
add
(bad)
or
add
mov
mov
(bad)
mov
sub
and
add
scas
in
push
in
or
clc
mov
test
add
jmp
call
lods
in
cmp
jecxz
and
add
movzx
cmps
add
fadd
add
xrelease
je
ds
add
and
add
mov
mov
in
(bad)
and
add
add
add
sub
pop
sbb
add
mov
add
es
pop
adc
and
add
xchg
(bad)
and
add
aam
add
add
and
add
sub
mov
cmps
sbb
add
je
xor
mov
ret
adc
cli
mov
nop
add
mov
add
pusha
and
add
cmp
or
add
es
mov
cwde
test
add
xlat
xchg
mov
pusha
int
add
mov
scas
and
in
sub
pop
test
add
add
pop
add
inc
add
add
add
ret
xchg
cld
mov
je
dec
out
add
mov
out
rcr
mov
and
add
pusha
add
add
fadd
enter
add
inc
clc
js
pop
xchg
out
add
mov
adc
test
lahf
cmp
jae
mov
psubusb
add
add
add
cmp
xchg
out
retf
jecxz
pop
inc
mov
add
sub
mov
sbb
or
xchg
mov
into
out
adc
mov
sbb
stc
add
add
loopne
gs
mov
inc
add
in
pop
and
add
mov
addps
add
add
loope
and
push
add
sub
or
test
push
xchg
out
add
inc
xlat
sub
mov
lods
mov
(bad)
sbb
add
or
out
retf
adc
inc
repz
ud1
add
add
pop
push
add
add
movs
cmp
fldcw
inc
and
movzx
mov
and
add
cmp
ret
mov
test
add
mov
test
push
add
sub
mov
sysret
es
add
add
out
cmp
aad
xchg
inc
sbb
jge
add
push
mov
and
add
scas
shl
mov
mov
mov
add
leave
push
mov
sub
mov
bsf
mov
add
and
add
add
mov
cmp
(bad)
out
pushf
add
jmp
or
and
add
xchg
jae
inc
and
je
or
add
add
sbb
xlat
and
das
sub
adc
or
nop
mov
add
loopne
xchg
mov
and
add
mov
add
clc
cmp
xchg
out
mov
in
add
mov
mov
sbb
loop
lods
pop
add
add
cmps
mov
add
aam
add
out
test
cmp
mov
mov
mov
add
psrad
push
mov
scas
out
add
jmp
(bad)
push
mov
mov
js
add
mov
mov
sbb
push
add
push
fmul
mov
retf
inc
add
mov
xor
mov
(bad)
sub
add
inc
inc
cmp
add
mov
ins
mov
fwait
sbb
or
xchg
sub
out
adc
pop
sbb
jmp
repz
sbb
mov
cmp
add
(bad)
pop
jp
cmp
adc
jmp
(bad)
sbb
add
push
in
add
add
test
push
add
mov
(bad)
dec
add
mov
add
add
jmp
sti
add
add
adc
cmp
in
push
or
sbb
dec
or
mov
push
cmps
add
mov
adc
jecxz
mov
and
or
mov
(bad)
(bad)
dec
add
inc
add
adc
pop
add
inc
add
pushf
and
push
cmp
mov
imul
add
mov
or
(bad)
pushf
sbb
add
cwde
sbb
inc
dec
xlat
add
add
aam
sbb
jmp
dec
enter
mov
lods
and
sbb
pextrw
mov
add
push
add
add
cmp
cmps
add
std
add
inc
add
add
cwde
mov
add
add
inc
or
add
inc
adc
push
cmp
inc
inc
add
add
in
jbe
xor
das
sar
popa
xchg
jmp
xor
out
add
and
test
ret
add
out
add
and
push
add
test
(bad)
push
add
add
add
jb
shr
inc
add
sbb
add
and
push
add
mov
mov
stos
push
dec
sahf
addr16
add
stc
inc
inc
add
add
jbe
add
mov
mov
cmp
test
and
out
out
jmp
(bad)
(bad)
repz
sahf
add
dec
mov
push
mov
mov
daa
pusha
das
push
ret
out
add
add
add
pop
push
pop
test
sub
sub
and
cmp
jecxz
jno
add
lea
(bad)
push
pusha
mov
add
inc
add
sub
mov
movs
fcmovu
add
bound
or
mov
ins
inc
or
pop
(bad)
loope
add
add
mov
out
rol
in
adc
bound
cmp
cmps
and
cmp
or
and
or
add
(bad)
(bad)
and
(bad)
sahf
cmp
jmp
mov
mov
cmps
fist
add
adc
push
(bad)
icebp
(bad)
mov
or
pop
inc
sbb
add
jae
imul
add
cmp
aam
inc
or
stos
mov
adc
add
test
add
outs
add
add
and
or
add
jmp
and
sahf
in
ins
ret
jmp
sub
sub
fistp
push
mov
mov
pop
jmp
and
pop
shl
and
push
xlat
sahf
ds
and
aas
add
mov
add
lea
push
dec
pop
mov
jmp
push
mov
inc
pop
fstp
add
gs
inc
data16
add
add
xchg
or
push
add
mov
das
jle
add
sub
inc
xlat
sahf
cmp
imul
sub
add
add
rcr
sub
or
inc
out
ret
jmp
mov
add
and
add
out
jp
pop
stos
sar
rol
push
mov
or
ret
outs
mov
inc
xlat
sahf
add
cmova
mov
and
add
pusha
stc
push
add
mov
mov
aas
repz
mov
push
test
out
add
mov
ret
mov
xlat
add
mov
add
lods
pop
push
add
add
cmovne
mov
push
add
add
mov
and
mov
mov
dec
mov
and
imul
mov
bound
add
mov
outs
pop
xor
add
add
pand
mov
and
clc
add
add
mov
jmp
add
pop
mov
call
in
fadd
(bad)
mov
add
out
(bad)
mov
sub
pop
cmp
push
stc
jmp
xor
add
and
(bad)
cmps
add
or
outs
test
adc
cmp
add
add
add
mov
or
rol
and
add
mov
daa
add
(bad)
and
jmp
outs
test
(bad)
add
sub
push
leave
pop
pop
ret
jmp
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
rcr
or
mov
jmp
add
mov
dec
inc
loop
mov
add
test
inc
add
inc
mov
pop
mov
mov
add
or
add
inc
and
dec
mov
and
xchg
xchg
mov
and
inc
add
call
int
shr
add
and
call
mov
xchg
shr
add
lea
fisubr
add
mov
add
inc
add
cmp
and
ret
inc
and
mov
jne
inc
mov
add
inc
retf
loop
add
iret
xchg
(bad)
(bad)
mov
lea
mov
add
add
mov
fs
mov
mov
xor
outs
in
sbb
dec
or
mov
mov
mov
les
jge
cmp
and
dec
add
mov
test
add
xchg
jae
add
retf
add
test
sub
mov
and
inc
cmp
pinsrw
add
rol
sbb
add
mov
inc
and
inc
add
inc
xchg
mov
and
leave
dec
add
mov
push
test
push
add
je
add
dec
test
sub
iret
cmp
fld
add
dec
add
mov
pop
sub
dec
sbb
or
test
cmp
inc
xchg
mov
pusha
cli
bound
mov
xchg
nop
pop
add
jg
jmp
adc
es
data16
xchg
add
mov
mov
les
jbe
pop
test
test
add
cdq
repz
add
add
add
add
or
sub
mov
inc
(bad)
leave
add
add
add
add
add
pusha
pop
xchg
cs
sbb
or
(bad)
and
inc
add
add
test
add
test
push
and
je
test
fadd
sub
in
inc
and
add
and
add
jmp
imul
arpl
inc
sbb
pop
push
dec
call
mov
enter
sub
xor
(bad)
xor
add
add
inc
mov
jp
sbb
aam
mov
sub
add
scas
mov
adc
add
rol
inc
test
rol
adc
jecxz
inc
mov
mov
mov
or
and
inc
dec
inc
mov
add
push
ror
add
and
add
add
inc
mov
xchg
dec
inc
shl
pop
mov
test
inc
ret
clc
or
add
test
inc
loop
push
xchg
leave
dec
inc
mov
add
shl
inc
ret
test
add
add
inc
inc
mov
inc
add
cmc
call
mov
psrad
retf
or
rcl
add
add
pop
add
lea
mov
int3
dec
out
inc
mov
aad
ror
add
std
and
call
(bad)
xlat
jae
add
dec
mov
add
or
inc
add
add
retf
adc
xchg
adc
add
mov
push
add
and
mov
or
inc
fcomp
xchg
inc
add
add
add
xchg
add
add
fs
dec
and
mov
ret
inc
and
call
mov
mov
jno
and
dec
add
sbb
add
(bad)
aad
or
inc
and
mov
call
lea
lea
adc
add
int
leave
xor
inc
add
add
cmp
add
adc
or
les
retf
dec
or
(bad)
push
dec
add
add
cdq
add
add
mov
mov
mov
add
dec
and
mov
cdq
out
mov
push
sbb
pop
push
add
mov
(bad)
out
or
add
call
pop
xchg
imul
inc
add
and
inc
cmp
test
mov
repz
ret
xchg
inc
aad
retf
adc
(bad)
stc
and
loop
add
inc
mov
cmp
cmc
jg
fimul
call
mov
and
add
add
or
mov
add
(bad)
aad
or
or
mov
and
mov
and
mov
jbe
dec
sahf
xchg
(bad)
inc
(bad)
out
sub
cld
lea
push
std
adc
repnz
xor
and
loop
inc
clc
add
mov
add
push
and
xchg
and
mov
out
aam
inc
mov
adc
mov
mov
and
add
add
and
mov
rol
add
sbb
add
retf
int3
add
add
add
push
jae
push
and
mov
xchg
call
jno
and
sub
or
bound
loop
retf
call
mov
leave
dec
leave
mov
pop
mov
fidiv
and
mov
and
in
inc
das
and
ret
data16
push
outs
mov
xchg
dec
iret
lods
and
sub
inc
mov
mov
nop
push
and
or
mov
gs
ins
cmp
pushf
add
inc
mov
lea
add
add
or
retf
cmp
mov
mov
mov
mov
fs
ret
inc
and
(bad)
call
and
add
xchg
ss
and
inc
xchg
xchg
imul
lds
ret
inc
and
jno
out
inc
repnz
cwde
mov
mov
add
mov
(bad)
leave
dec
inc
cmp
cmovne
fld
add
add
mov
test
add
fs
test
add
cmp
add
add
js
add
leave
cmc
add
cmp
cmp
add
rol
gs
mov
retf
(bad)
mov
add
xchg
ins
dec
outs
gs
add
(bad)
sbb
fadd
and
sbb
inc
in
inc
or
inc
adc
mov
mov
mov
call
or
and
inc
dec
add
inc
add
inc
mov
mov
inc
push
dec
mov
fs
(bad)
cs
ja
fimul
cmps
gs
mov
leave
dec
leave
mov
add
xor
ret
clc
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
scas
(bad)
mov
xchg
mov
and
mov
inc
and
add
and
add
add
clc
and
mov
mov
sub
add
arpl
mov
gs
mov
adc
call
imul
rcpps
in
jmp
jmp
mov
sub
mov
lods
add
and
add
fwait
add
mov
mov
jp
(bad)
sbb
fadd
in
add
cmp
inc
and
dec
test
add
mov
in
scas
inc
and
sub
mov
cmp
sub
and
addr16
xlat
xchg
mov
xchg
add
jmp
push
fist
dec
sub
and
(bad)
sbb
inc
mov
add
add
retf
mov
xor
adc
ret
movs
test
sub
leave
push
sub
jle
and
cmpps
in
xor
add
mov
sbb
jg
dec
cs
add
sbb
fadd
mov
sub
jle
and
dec
retf
xor
add
jmp
jmp
lea
fs
(bad)
mov
push
sub
inc
loopne
fmul
xchg
(bad)
mov
xor
imul
push
mul
(bad)
or
test
inc
pop
and
inc
sti
push
jmp
mov
adc
mov
sub
add
test
sbb
add
dec
add
inc
dec
mov
mov
sub
mov
movs
jmp
xor
sub
xchg
mov
pusha
mov
jmp
fs
jmp
add
movs
(bad)
retf
mov
outs
je
ins
mov
fdiv
add
cmp
ret
ds
es
jmp
jle
and
ins
les
add
stos
mov
add
stos
sub
sub
cmps
jb
std
push
mov
and
mov
mov
adc
sbb
push
add
mov
pop
mov
cmp
cmp
cmove
iret
add
jmp
(bad)
fwait
mov
sbb
mov
push
cmp
mov
add
mov
iret
ins
mov
mov
mov
(bad)
push
and
mov
fs
call
ins
mov
mov
or
mov
and
dec
jl
push
mov
mov
and
sbb
mov
mov
xchg
mov
mov
or
add
and
movs
xor
mov
push
add
pusha
mov
mov
and
fist
add
inc
and
dec
add
sbb
inc
add
fmul
add
nop
mov
je
iret
push
pop
mov
daa
rol
cmp
pop
inc
add
in
push
push
and
sub
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
add
mov
scas
dec
and
mov
cmp
add
or
mov
mov
mov
mov
inc
sub
push
push
add
mov
xchg
mov
test
add
inc
and
clc
jb
xchg
mov
call
mov
ins
cmps
mov
and
ds
ins
mov
ja
mov
and
add
data16
sub
fs
lahf
add
or
and
jb
xchg
ja
sub
bswap
imul
retf
mov
or
fisubr
mov
or
push
jg
jmp
movs
inc
fisubr
data16
mov
ds
add
add
and
and
sub
mov
arpl
add
add
mov
cld
inc
sub
stc
inc
and
jge
lods
add
add
add
or
mov
out
xchg
sbb
and
dec
(bad)
xlat
sub
add
in
add
jecxz
push
arpl
jg
add
add
je
add
jb
inc
or
icebp
mov
(bad)
add
add
and
sub
ins
das
and
lea
nop
add
add
test
xchg
mov
je
jmp
xor
push
cmps
and
and
es
add
imul
or
push
nop
pushf
push
mov
and
add
ss
mov
sub
out
inc
addr16
lods
cdq
mov
imul
or
pusha
jl
pcmpgtb
fldenv
je
jmp
mov
mov
inc
and
mov
add
stos
arpl
retf
out
and
arpl
cmps
test
or
cli
add
popa
jo
fnstenv
fisttp
inc
and
ror
add
inc
add
mov
add
ins
out
add
movs
outs
mov
sub
mov
les
lods
in
sbb
dec
sub
mov
mov
mov
adc
inc
movs
push
test
add
sub
mov
add
inc
inc
sbb
dec
add
(bad)
and
jmp
mov
movs
stc
rdpmc
les
cmp
jns
lods
ja
inc
retf
addr16
add
out
jo
ins
loope
jmp
mov
popa
adc
in
iret
or
jb
inc
shl
inc
movs
mov
add
cmp
inc
add
loop
mov
in
sbb
add
fadd
mov
arpl
jmp
cmp
cmps
mov
add
iret
cmp
jl
inc
inc
and
rcl
add
dec
setge
mov
jmp
mov
mov
mov
mov
jmp
inc
sub
jo
cdq
mov
jmp
cli
gs
pop
cmp
and
cld
(bad)
dec
outs
movs
out
cdq
test
push
sub
cwde
test
or
and
cmp
mov
repz
push
nop
(bad)
dec
dec
mov
sub
lods
aam
shr
jge
fxch
je
mov
call
or
pop
mov
imul
test
dec
enter
fdiv
dec
test
xchg
test
aad
outs
dec
dec
or
mov
out
loope
cmps
jo
jo
jecxz
sub
movs
and
xor
or
mov
neg
jo
lods
xchg
(bad)
fdiv
sub
cmp
sub
ins
cmp
mov
popa
lods
nop
add
int3
pop
cmp
ins
pop
retf
and
xor
repnz
or
retf
je
fimul
mov
sub
cli
xchg
sub
test
pusha
ins
mov
cli
test
push
dec
je
lea
cmp
mov
adc
xor
jns
xchg
mov
cld
movs
jge
mov
scas
inc
cdq
and
(bad)
pop
fwait
in
outs
jb
stos
xchg
or
and
xchg
cmc
addr16
outs
push
sub
shr
pop
jp
in
fwait
stos
jno
xor
in
xchg
dec
ret
mov
clc
jnp
psllw
lds
push
xor
jp
outs
jmp
push
cmp
out
inc
sub
(bad)
sub
repnz
mov
nop
mov
mov
dec
push
mov
fdiv
jne
int3
jnp
push
inc
scas
loope
dec
jo
ds
shl
jecxz
pop
scas
test
push
rcl
sub
jg
movs
fild
cmps
leave
pop
mov
in
loope
nop
cmc
jecxz
sub
mov
shl
test
inc
fnop
mov
dec
push
int
pop
iret
out
div
cmp
test
xlat
pop
ds
pop
xchg
out
mov
dec
mov
and
scas
inc
mov
mov
inc
std
retf
lods
pop
or
fisub
jge
in
les
sub
sahf
inc
ins
push
jp
out
xchg
outs
mov
or
scas
ds
jmp
enter
loop
and
imul
ror
outs
lock
push
sti
pop
jmp
inc
out
cld
xchg
or
lea
dec
call
mov
cmps
aas
enter
(bad)
(bad)
rcl
popf
stc
or
loopne
pop
mov
adc
or
xchg
arpl
fwait
cmp
xchg
inc
inc
test
jge
scas
fst
dec
iret
test
or
arpl
mov
retf
outs
popa
pop
adc
das
sub
icebp
cmp
test
push
aas
cs
rol
loope
or
or
pop
retf
mov
dec
lods
into
dec
ret
sahf
rcl
add
cmp
mov
mov
(bad)
aad
(bad)
xchg
and
ss
jmp
je
pop
es
int
jo
fwait
push
push
add
mov
loop
pmullw
unpcklps
fs
in
lods
ins
loop
mov
mov
ss
dec
add
test
mov
imul
mov
cmp
push
mov
dec
call
sub
pop
mov
adc
pusha
dec
test
aam
sti
pop
in
(bad)
push
dec
ret
mov
inc
jle
js
div
mov
inc
pop
lea
lods
leave
rcr
loope
loope
adc
not
js
enter
cmp
mov
jne
mov
fsubr
loopne
add
mov
adc
arpl
cmp
and
test
(bad)
imul
add
lods
and
adc
fsubr
adc
jecxz
mov
sar
add
or
ja
adc
test
xchg
and
fimul
jmp
fdiv
in
adc
or
xchg
cwde
leave
push
aas
adc
arpl
sub
push
add
call
cmp
imul
div
int
imul
in
dec
and
lods
daa
xor
js
push
out
or
add
or
movups
dec
push
jecxz
inc
xlat
push
push
movs
dec
loopne
je
nop
mov
hlt
pop
mov
mov
sahf
test
pop
(bad)
push
aaa
jno
int3
mov
outs
pop
test
mov
cmp
or
sbb
add
jo
sbb
jge
pop
cmp
mov
add
scas
xlat
lods
pop
and
adc
jae
test
(bad)
nop
sbb
inc
mov
je
dec
icebp
test
or
fst
(bad)
fisubr
jne
int3
fsubr
or
sub
inc
push
adc
push
fwait
sbb
lods
hlt
sbb
mov
jecxz
adc
lods
adc
and
arpl
pop
inc
std
xchg
jno
int
sbb
push
jmp
dec
shl
ret
fild
mov
xchg
cwde
sub
jle
push
jo
pushf
jno
mov
dec
and
rcr
adc
pop
xor
popa
ret
mov
pop
iret
pusha
clc
or
add
rcl
and
inc
ret
movs
into
and
jae
(bad)
inc
out
or
xchg
jne
lea
jmp
and
push
jne
jo
(bad)
leave
icebp
cmp
xchg
dec
daa
retf
cmc
xor
sub
push
call
shr
stc
jae
adc
xor
into
cwde
push
jae
ss
mov
mov
das
repnz
mov
cmc
loope
adc
jmp
out
pop
int3
jl
push
pushf
jae
cmp
pop
xor
pop
mov
push
or
retf
retf
xor
cmp
dec
es
pop
jg
push
mov
mov
mov
dec
loop
adc
out
sub
push
pop
inc
ds
sahf
in
mov
test
cmp
nop
in
cmc
push
lds
out
test
(bad)
(bad)
and
in
pop
mov
dec
xchg
mov
fwait
pop
icebp
and
xchg
in
sub
mov
lock
into
aas
sbb
bound
enter
fcomi
ret
cmp
add
enter
movs
add
es
dec
hlt
in
jmp
mov
adc
bound
je
cmps
push
out
jmp
push
push
test
mov
jecxz
dec
mov
or
xchg
inc
cmp
pop
dec
mov
add
dec
dec
xchg
ss
xchg
and
jns
jmp
pop
scas
jo
pop
out
(bad)
adc
adc
cmp
ds
fcmovb
xor
repz
mov
ror
jne
jns
sub
mov
loopne
dec
cmc
stc
loope
xchg
int
sub
sbb
jbe
dec
mov
ins
mov
fidivr
cmc
inc
cmp
pushf
dec
xlat
pop
mov
xlat
ss
ror
and
dec
jmp
leave
scas
ficom
add
cmp
mov
xchg
das
push
dec
out
dec
mov
jae
bound
sub
dec
scas
cmc
and
sub
cmp
mov
mov
mov
inc
or
pop
fst
mov
sbb
in
xchg
hlt
ins
and
movs
test
mov
rcr
in
push
fld
or
mov
ror
push
adc
stc
mov
and
cmp
in
and
loope
add
cmp
pop
dec
imul
inc
mov
push
(bad)
jmp
sar
mov
(bad)
ja
popa
pop
sbb
lahf
or
sahf
ja
cli
jmp
xchg
jo
sbb
dec
jbe
sub
mov
mov
push
dec
or
in
sbb
sbb
xchg
sahf
or
pop
push
dec
pop
pop
and
outs
push
fdivr
jne
mov
repnz
mov
push
(bad)
mov
push
add
add
daa
pusha
movs
or
lahf
hlt
data16
ds
add
rcr
dec
pop
cmp
mov
rcl
push
jge
sub
mov
ficomp
fsubr
inc
push
je
sbb
cwde
call
movs
adc
jecxz
sub
inc
aam
cmp
out
mov
pusha
push
add
lahf
retf
rcl
fdivr
jns
push
or
xchg
and
mov
std
or
or
xor
loop
xor
aaa
dec
pop
xor
popa
fisttp
pop
or
add
es
icebp
add
pop
outs
push
sbb
and
or
add
call
shl
jb
mov
mov
adc
ja
push
push
lds
and
xchg
(bad)
js
stos
push
add
push
pop
ret
mov
cld
push
icebp
xlat
int3
(bad)
int3
cmp
adc
or
bound
gs
into
pop
cli
aaa
aaa
cli
gs
popa
xor
movs
add
stos
push
mov
dec
cmp
movs
fwait
gs
lea
out
(bad)
cld
mov
mov
inc
icebp
stc
cli
and
enter
test
xchg
mov
arpl
pop
je
sbb
cwde
push
ror
pusha
(bad)
pop
int
push
sub
mov
in
inc
das
clc
xchg
sahf
mov
in
stos
rcl
inc
pusha
push
xor
clc
xor
sub
pop
gs
iret
pop
rol
mov
sbb
daa
addr16
rcr
mov
pop
mov
cmp
mov
hlt
sbb
bnd
mov
lea
cmp
add
mov
xor
jo
dec
clc
jecxz
xor
mov
les
dec
loop
xor
jp
xchg
mov
jo
ror
loope
cwde
das
sub
aas
(bad)
call
adc
xlat
(bad)
push
pop
jns
imul
cmp
xor
mov
xchg
push
inc
loop
scas
fdiv
icebp
fiadd
xchg
xor
sbb
frstor
js
jl
xchg
push
mov
dec
(bad)
aad
call
mov
outs
clc
mov
nop
or
rcr
mov
lds
movs
pop
cmp
cmps
jno
rcr
pop
gs
pop
cmp
and
and
jnp
test
fmul
adc
scas
ins
or
aam
cmc
sbb
inc
js
add
sar
addr16
add
adc
in
mov
sbb
or
and
inc
inc
dec
jle
and
mov
loop
std
std
xchg
fbstp
jmp
js
push
scas
lock
jp
pop
push
loop
and
inc
aad
movs
pop
push
cmp
sbb
scas
and
xchg
mov
jmp
and
mov
fadd
(bad)
test
ror
mov
mov
push
imul
push
in
push
pop
pop
(bad)
mov
call
pop
pop
ret
test
fwait
lods
or
add
fsubr
test
dec
adc
hlt
cli
shr
dec
test
data16
lds
adc
das
dec
gs
inc
add
adc
mov
push
pop
(bad)
fucom
pushf
xchg
mov
push
les
lds
pop
test
fbld
and
(bad)
cmps
jle
(bad)
push
sbb
jecxz
out
push
std
mov
das
pop
addr16
inc
retf
inc
and
aad
stc
pop
sub
test
sbb
clc
mov
daa
(bad)
xor
rol
stc
xchg
lods
adc
inc
pop
add
push
push
add
in
sbb
jle
sti
test
out
retf
lods
pop
sbb
sbb
xchg
aaa
add
xor
stc
leave
out
aad
jle
(bad)
nop
mov
xor
xor
mov
mov
dec
sbb
adc
iret
jae
cmp
aam
dec
jno
sub
mov
mov
push
pusha
mov
xor
and
mov
movs
sbb
call
dec
cmp
sub
cld
sbb
movs
xchg
fmul
lods
push
xchg
push
inc
repnz
mov
mov
xchg
push
or
fwait
adc
leave
cmps
push
(bad)
add
and
mov
inc
adc
mov
lods
ja
pop
repnz
push
int
pop
sub
(bad)
push
xor
inc
sbb
jecxz
adc
jae
mov
imul
mov
adc
jnp
push
mov
stos
inc
mov
int
cmc
xor
mov
call
dec
pop
cs
inc
ret
jnp
clc
fnstcw
mov
sbb
(bad)
bound
mov
ins
inc
jae
sub
and
sbb
xor
sub
dec
lods
(bad)
aaa
sti
retf
xchg
dec
je
jns
cwde
les
call
ins
adc
clc
sub
sbb
mov
and
test
popa
int3
jne
inc
inc
pop
pushf
jmp
cmps
adc
xchg
out
add
les
out
fisttp
mov
stc
adc
pop
(bad)
mov
retf
stos
out
popf
sub
call
mov
aas
xchg
fs
adc
push
adc
dec
je
xor
xchg
scas
mov
pop
clc
mov
sub
adc
sub
cld
jb
mov
out
mov
mov
sbb
adc
adc
imul
loope
data16
imul
aad
ret
inc
push
lods
and
(bad)
bound
mov
push
fiadd
call
cld
test
mov
sub
pop
push
mov
jb
xchg
adc
lock
pop
lock
mov
rcl
push
mov
fdivp
movs
sbb
in
out
lds
out
in
adc
jecxz
push
jl
inc
sub
push
sbb
inc
jnp
xor
int3
ins
xchg
jnp
js
retf
test
pop
and
jle
les
hlt
jge
sub
sub
popa
push
ins
xchg
dec
je
add
add
add
pop
jns
test
push
outs
xor
xor
cs
ds
(bad)
mov
lock
shl
dec
mov
out
icebp
sahf
xor
mov
pop
mov
push
(bad)
pop
fnstenv
gs
(bad)
jno
loope
push
jl
out
icebp
imul
jmp
xor
mov
imul
lock
sahf
shr
icebp
mov
mov
movs
cmps
push
jecxz
in
cs
ja
icebp
jae
retf
std
in
out
das
push
popa
pop
jnp
fisttp
aas
(bad)
mov
sti
imul
cmps
loopne
mov
pop
mov
sub
or
dec
jle
test
lea
dec
push
and
int3
fsubr
push
and
outs
cdq
jo
or
retf
jg
ja
pop
(bad)
sub
push
ds
fdivp
push
aas
sbb
pusha
fiadd
xor
data16
sub
in
(bad)
xor
out
dec
xchg
popa
jge
out
loopne
repnz
lock
sub
xchg
xchg
retf
sub
mov
rcl
out
mov
jmp
jle
addr16
(bad)
icebp
cmp
jne
jge
mov
ficom
cmps
out
add
mov
(bad)
and
fiadd
(bad)
fsubr
jmp
nop
stc
outs
cmp
enter
push
pop
outs
add
(bad)
call
mov
movs
adc
outs
push
xchg
jno
xchg
mov
xor
pop
pop
loope
adc
scas
or
icebp
(bad)
jmp
test
cmp
mov
xchg
mov
and
mov
imul
psubusw
cmp
sbb
xlat
or
cmp
jnp
popa
inc
icebp
adc
mov
cwde
adc
outs
mov
fdiv
call
inc
les
mov
pop
inc
pop
ret
bound
stos
adc
test
data16
or
sti
popa
push
test
sub
imul
sbb
fwait
push
xchg
cli
xchg
cli
cs
or
pop
push
add
imul
ja
pop
add
cmps
xor
fld
pop
icebp
add
sbb
add
pop
add
(bad)
mov
add
adc
dec
out
lahf
jo
les
cld
lods
ret
les
pop
cmp
mov
mov
adc
test
imul
push
mov
push
(bad)
sete
lods
pop
jl
and
sahf
dec
sbb
fs
stc
pop
inc
jnp
out
in
ins
sbb
addr16
xchg
mov
out
mov
mov
(bad)
or
ret
push
xor
push
cld
dec
push
or
push
mov
cmovge
out
mov
or
(bad)
mov
sub
sbb
ret
jge
sbb
(bad)
aas
push
out
push
pop
(bad)
jg
sub
push
xchg
dec
mov
pop
xor
sbb
xor
scas
(bad)
cdq
(bad)
push
jo
sbb
inc
or
movs
xchg
std
cmps
ja
fstp
ins
and
dec
inc
repz
pushw
jno
sbb
ins
push
jp
pop
das
sbb
out
clc
lea
pusha
mov
cwde
imul
mov
sahf
sbb
pop
cmp
xchg
sub
dec
mov
fistp
jge
leave
pop
sub
cmp
retw
and
lods
fiadd
adc
cmp
jne
sub
cmps
out
mov
std
xlat
out
(bad)
mov
inc
push
rcr
adc
call
pushf
cli
mov
bound
inc
ins
mov
cdq
pusha
data16
inc
in
cmp
test
int
push
pop
iret
repz
sbb
(bad)
and
push
xchg
jno
dec
ss
movs
xchg
ror
jecxz
xor
sbb
cmp
mov
ficom
sub
js
mov
hlt
loope
in
pop
xchg
inc
pop
mov
leave
js
retf
xchg
mov
pushf
or
cli
dec
loopne
lea
xchg
inc
dec
cli
mov
mov
js
xor
fs
xor
scas
loope
xchg
sbb
mov
aas
mov
movs
icebp
test
js
int3
cmps
neg
(bad)
pop
arpl
xchg
je
and
sub
push
(bad)
pop
bound
imul
cmp
ret
push
adc
mov
push
repz
sub
int3
mov
fwait
xchg
cmp
(bad)
xchg
fwait
ja
jle
into
push
add
cmps
mov
or
add
jl
jle
sar
enter
xchg
push
inc
push
and
sti
adc
mov
lods
fcomp
jo
jno
ins
and
ss
xor
cwde
and
ds
sbb
mov
jge
pop
mov
inc
pop
jmp
push
or
mov
sbb
xchg
int
in
push
imul
mov
mov
mov
and
or
(bad)
pop
int3
xchg
dec
aad
ds
xor
in
add
retf
pop
add
imul
jl
imul
mov
jb
push
(bad)
stc
sahf
retf
add
ins
or
mov
jae
sub
push
jecxz
lds
pop
inc
push
pop
outs
push
mov
pop
test
ins
test
out
out
fcomp
dec
jle
imul
mov
and
or
jns
cmps
dec
pop
daa
mov
sti
push
pop
into
jns
pop
inc
loop
xor
sahf
das
inc
mov
push
mov
cmc
(bad)
data16
pop
jge
fisub
mov
or
adc
add
cmps
pop
jmp
dec
sbb
call
push
es
dec
dec
fadd
fcomp
inc
ds
or
aam
imul
sbb
mov
mov
movs
xor
out
cmp
sbb
out
test
ficomp
mov
test
(bad)
clc
adc
and
pop
xchg
in
bnd
cmps
jge
mov
xchg
loop
repnz
ret
dec
das
(bad)
jbe
ins
fild
mov
pop
in
pop
xchg
sti
lahf
or
nop
mov
cmp
mov
mov
(bad)
mov
addr16
test
bound
adc
(bad)
les
sub
sub
retf
adc
ret
outs
loopne
jmp
idiv
push
dec
int
aas
aad
loope
sub
pop
mov
xor
adc
add
xor
inc
fucomi
imul
inc
fnstsw
in
adc
shl
mov
sub
sub
cwde
dec
mov
test
pop
ins
add
adc
sbb
popa
push
movs
mov
pop
add
cmp
inc
rcr
or
lods
ficom
push
div
xlat
cmp
mov
adc
jmp
in
movs
mov
mov
xor
xchg
lods
and
hlt
ror
stc
mov
push
jns
test
rol
and
fwait
arpl
jg
shr
das
jge
inc
mov
jo
mov
mov
add
jnp
(bad)
into
adc
cmp
jge
pop
dec
or
ja
push
add
fadd
sahf
in
sbb
test
addr16
fiadd
jle
das
out
jnp
pusha
fbstp
ss
jb
xchg
shr
call
test
cli
xlat
test
enter
adc
push
adc
push
dec
dec
or
aaa
rcl
and
xchg
jae
in
xchg
retf
outs
(bad)
sti
(bad)
dec
mov
dec
cmc
(bad)
movs
fcmovu
stos
push
push
out
fstp
jno
adc
sti
mov
outs
jle
mov
mov
hlt
ror
fadd
cli
inc
sbb
pop
mov
and
and
cmp
retf
mov
pop
xor
adc
fmul
add
cdq
int
cmc
pop
push
pushf
fdiv
js
xor
in
jge
pop
repz
cwde
jns
xchg
jmp
mov
mov
lock
rcl
leave
scas
bnd
cmc
mov
jp
inc
mov
es
add
sbb
test
xor
xchg
in
or
sub
retf
xor
cwde
adc
ror
loop
addr16
and
aaa
sub
js
mov
pop
xchg
fadd
cmp
fnstenv
pop
cld
pop
jnp
mov
ret
sub
fwait
or
mov
cmp
(bad)
fcmovnbe
mov
repz
mov
jmp
hlt
sub
mov
jae
aad
xchg
mov
sti
mov
jl
call
and
push
sbb
inc
das
jae
je
jno
jb
jb
je
dec
sub
cmp
xchg
adc
pop
fsub
popa
or
xor
lds
push
dec
cmp
js
shr
ss
cmp
mov
inc
dec
neg
inc
mov
js
test
ds
lea
sub
out
inc
cmp
fisubr
add
push
retf
inc
cmps
jp
mov
pop
sbb
sbb
sar
stos
xor
xchg
es
push
mov
fs
sbb
jnp
aaa
xor
adc
test
or
inc
ins
sub
or
wrmsr
jne
sbb
xor
ret
test
aam
xor
imul
jnp
ja
adc
mov
push
and
stc
outs
lods
mov
add
cs
mov
pop
push
mov
sub
jge
adc
jecxz
out
inc
shr
add
jmp
mov
mov
fimul
pushf
test
lock
(bad)
xor
fcmovnb
adc
das
dec
shl
xchg
add
repz
clc
and
mov
jnp
push
xchg
scas
jne
fstp
mov
xlat
mov
adc
in
outs
inc
inc
je
ja
cli
ror
sub
out
or
and
sbb
lock
repnz
ds
xchg
rcl
xchg
push
cmc
xor
push
ja
push
loop
add
popf
push
pop
sbb
jne
pusha
jge
inc
clc
add
xchg
mov
or
push
fiadd
clc
sub
adc
cmp
push
push
push
ret
int
jns
sub
adc
(bad)
xor
inc
das
xor
ret
ds
adc
das
loope
mov
hlt
test
push
mov
cs
jg
div
or
mov
enter
xor
mov
push
test
sub
pop
jae
sub
push
lea
imul
add
ds
popa
or
pop
adc
or
enter
push
pop
das
test
out
and
ins
adc
pop
cmp
movs
clc
scas
enter
jle
sbb
cdq
cld
pop
lahf
aaa
in
mov
(bad)
int3
push
mov
arpl
lods
mov
shr
fmul
sbb
lahf
out
mov
popf
or
jl
jmp
mov
enter
xlat
fst
dec
mov
mov
les
inc
adc
pop
and
pop
adc
mov
pop
mov
mov
ror
ss
arpl
scas
and
popf
lds
int3
sub
lahf
lock
push
call
sub
sub
scas
iret
push
jge
mov
dec
mov
dec
imul
push
in
sbb
cmp
leave
aas
adc
cmp
mov
sub
iret
cld
test
mov
enter
jmp
push
sahf
lods
push
test
(bad)
out
aad
pop
sbb
sbb
test
leave
add
xchg
into
jb
jae
dec
or
(bad)
mov
or
cmp
sub
adc
adc
cmc
or
xor
inc
rcr
jl
div
inc
or
mov
sbb
push
cmps
stos
movs
js
test
call
pop
mov
imul
or
movs
jns
xor
xchg
dec
gs
sub
lahf
dec
into
lahf
cmps
mov
pop
push
retf
(bad)
adc
mov
retf
mov
ds
test
jb
inc
retf
add
in
jmp
ret
mov
inc
dec
(bad)
mov
mov
mov
sub
les
sti
bswap
mov
jmp
dec
bsr
rcr
stos
inc
or
push
iret
xchg
add
cld
jno
sbb
push
repz
outs
(bad)
pushf
jb
lods
adc
mov
add
mov
cmps
mov
add
cmps
mov
push
mov
and
or
xor
loope
shr
jbe
and
xchg
aad
add
push
xor
cmp
sahf
ss
pusha
ret
jle
sub
fsub
aas
add
sbb
mov
inc
loop
xchg
mov
fidiv
lahf
xchg
cmp
mul
mov
pop
cmp
fist
outs
adc
dec
ret
xchg
iret
pop
stos
fwait
lds
mov
es
or
scas
cmp
xor
sti
mov
mov
sub
ja
mov
dec
loope
je
hlt
jmp
pop
xchg
cmps
clc
ds
cdq
mov
out
jne
adc
xlat
xlat
or
popf
mov
repnz
test
test
popf
jae
dec
shl
dec
lea
fmul
push
scas
add
leave
out
and
jbe
mov
retf
test
jae
fucom
out
nop
inc
je
xchg
adc
sar
ins
xchg
into
mov
adc
cmp
fdivr
xor
cmp
push
fild
xchg
mov
fcomip
mov
(bad)
inc
fisttp
mov
inc
jecxz
sbb
xor
out
mov
inc
xchg
sub
and
idiv
xor
(bad)
dec
mov
pop
jl
dec
adc
call
mov
mov
sub
inc
mov
mov
pop
pop
pop
adc
dec
stos
xchg
repz
inc
(bad)
loope
sbb
sbb
inc
dec
icebp
sub
data16
ficomp
adc
into
mov
jg
fst
mov
cmps
or
pop
mov
push
or
sbb
dec
mov
xchg
fdivr
ja
hlt
adc
mov
mov
arpl
popa
push
leave
ds
mov
cmp
cmp
bound
cli
enter
or
jb
call
out
shr
data16
mov
or
push
aaa
imul
fcomip
or
jne
ins
test
sub
inc
cmp
out
loopne
pop
adc
pop
out
imul
sti
neg
popf
mov
adc
dec
pop
push
out
push
cmc
scas
and
add
outs
outs
popf
xchg
xchg
popa
adc
adc
movs
mov
mov
pusha
jmp
loopne
movhps
bound
or
adc
(bad)
jge
jg
pop
inc
and
repnz
ss
lea
add
sub
test
and
mov
mov
and
jle
jge
fidivr
xor
pop
jmp
lock
push
dec
push
inc
lods
mov
mov
into
fnstcw
test
retf
mov
dec
fstp
sar
or
mov
sub
mov
push
xor
int3
bound
jb
fwait
loope
out
jecxz
int
jmp
jmp
gs
lods
inc
push
loope
adc
repnz
sub
lea
fidiv
add
xchg
inc
repnz
sbb
or
sbb
je
mov
clc
dec
aaa
pop
loop
mov
dec
cmp
mov
sahf
or
cmp
adc
or
out
loop
ffree
adc
int3
gs
mov
add
and
std
cmp
cmp
sub
ja
or
jbe
sub
push
pop
sahf
ins
dec
push
jns
sub
mov
mov
add
ret
rol
pop
out
or
pop
mov
loope
rol
inc
mov
ds
data16
adc
sbb
xor
pop
or
push
rcr
inc
jmp
xchg
sbb
pop
(bad)
push
inc
fwait
aad
scas
dec
ret
pop
pop
mov
fnstcw
shl
xlat
shl
push
and
cmp
mov
inc
jl
sti
pop
xchg
sub
push
imul
clc
mov
neg
xchg
in
mov
xchg
sbb
inc
mov
mov
add
clc
pop
mov
dec
lea
sbb
(bad)
fstp
and
lock
scas
push
mov
pop
xlat
dec
dec
sti
das
or
inc
mov
and
jnp
push
test
and
test
mov
xchg
outs
push
xlat
movs
leave
sahf
dec
stos
dec
or
sbb
push
add
jbe
fld
clc
mov
and
push
addr16
gs
fsubr
sub
inc
mov
and
mov
add
jno
sub
inc
mov
js
mov
jmp
sbb
clc
add
hlt
adc
icebp
cwde
jne
pop
adc
fisub
mov
fsub
popf
pop
sar
fcmovne
xor
cmps
jne
adc
cmp
cmp
outs
loop
jo
cs
aaa
jmp
jb
mov
inc
lds
jne
push
sub
popa
and
push
or
inc
sbb
loopne
jae
jmp
loope
push
sbb
push
push
ja
or
jle
out
jmp
rcr
adc
dec
pop
or
std
aas
add
add
inc
int
mov
pop
sbb
(bad)
jns
test
dec
nop
add
test
jbe
pop
xchg
inc
xchg
ret
test
ret
mov
lahf
jge
(bad)
fsub
popa
addr16
call
js
push
ret
popf
stos
inc
stos
jne
fistp
(bad)
div
mov
sar
adc
scas
xchg
cmp
leave
mov
lods
cmp
mov
and
add
fld
xchg
in
out
das
repnz
fistp
pop
mov
mov
(bad)
test
xchg
dec
adc
jge
push
mov
inc
and
cmps
aas
ja
mov
mov
aaa
mov
repnz
push
jbe
pop
cmp
dec
inc
imul
inc
sub
push
test
test
jge
jge
jae
stos
dec
je
jbe
jge
daa
aaa
test
push
push
pop
popf
arpl
dec
add
mov
fs
adc
popfw
int3
cmovp
jg
sti
pop
inc
pop
mov
cmc
pop
push
outs
inc
cmps
mov
pop
xlat
ds
jbe
sahf
pop
cld
mov
pop
fiadd
mov
xchg
gs
ins
mov
mov
je
in
test
cmp
cs
xchg
into
rol
mov
stc
or
movs
fs
inc
push
ds
jne
aaa
add
leave
fidivr
popa
stc
jecxz
in
xchg
scas
(bad)
add
adc
je
xchg
shr
and
pop
or
loopne
pusha
mov
add
jns
sti
jmp
push
dec
pop
mov
retf
shl
loopne
xor
cwde
and
test
popa
pop
inc
sahf
into
ret
leave
fxam
mov
mov
and
rcl
inc
dec
xchg
mov
push
imul
mov
ja
inc
cmc
pop
push
lods
mov
ds
adc
mov
lods
arpl
test
xor
sub
mov
jb
mov
imul
jg
add
add
add
(bad)
inc
sti
pop
dec
mov
xchg
les
push
nop
outs
movs
shl
jmp
arpl
lea
or
je
and
push
clc
rep
or
dec
(bad)
sub
jne
pushf
fwait
ror
sub
clc
fprem1
ins
pop
cmp
or
aas
cmp
mov
dec
mov
add
addr16
fistp
ror
inc
mov
cld
gs
fsub
shl
xor
xor
cmp
xor
(bad)
in
in
jle
pop
push
mov
call
stos
fs
inc
mov
add
movs
pop
in
ja
xchg
(bad)
aaa
mov
mov
or
sub
scas
xchg
xchg
inc
adc
scas
xchg
pop
dec
xchg
not
lods
(bad)
in
mov
or
call
data16
push
into
xor
jg
mov
or
ins
loopne
xchg
shl
sbb
daa
retf
jmp
jae
xchg
fild
xchg
adc
pop
ja
mul
xor
in
adc
cdq
rcr
sahf
pop
imul
inc
cmp
inc
lahf
and
mov
add
add
xor
xor
rcr
inc
cdq
mov
xor
je
test
je
mov
fcmovnu
bound
retf
push
push
mov
das
shr
push
xlat
(bad)
popf
cmp
mov
cmps
test
xor
ja
sub
pop
cli
ret
sub
outs
pop
jmp
sub
xchg
mov
push
push
sahf
int3
icebp
xor
mov
jne
xchg
and
jae
dec
xlat
mov
in
inc
jecxz
mov
ds
dec
mov
jnp
loop
mov
sti
xchg
jmp
imul
cmp
movs
jae
arpl
(bad)
fist
cmp
ins
aaa
popa
push
loopne
pop
icebp
or
jmp
xor
cs
retf
xchg
jle
push
sahf
call
jne
jnp
adc
mov
pop
(bad)
jne
dec
jns
mov
jae
aam
mov
xor
shr
mov
int3
mov
pop
and
nop
or
dec
mov
push
movs
ja
ficom
js
push
mov
scas
sub
dec
xor
aaa
xchg
shr
cmp
imul
mov
xchg
mov
xchg
inc
loope
gs
fsub
dec
mov
dec
adc
push
cmp
ja
jmp
jmp
dec
stos
adc
fdiv
sub
mov
jp
das
xchg
popa
pop
xor
jp
lock
xchg
and
scas
xchg
xchg
and
sbb
jne
int
sbb
ficomp
add
cmp
push
das
pop
dec
pusha
(bad)
cmp
das
xchg
push
or
addr16
xchg
pop
xchg
jns
ins
add
in
out
fist
pusha
xchg
push
lds
lahf
or
iret
std
cmp
test
and
jg
push
sbb
mov
add
jmp
fs
in
jnp
xchg
lods
jno
pushf
iret
(bad)
add
push
loop
data16
push
sbb
bound
mov
xor
xor
mov
push
retf
push
pop
sbb
dec
dec
hlt
mov
sbb
cli
and
sub
(bad)
shl
out
and
aam
pop
xchg
(bad)
in
lea
mov
cmp
out
mov
jmp
adc
dec
push
je
ror
in
mov
bound
and
jbe
test
push
push
or
idiv
fsub
pop
dec
fstp
xchg
aas
cmp
out
pushf
pusha
xchg
repnz
jecxz
and
dec
mov
jmp
in
loope
dec
pushf
xor
jle
adc
inc
jmp
cmp
push
jne
js
in
(bad)
loop
int3
ret
xchg
jno
neg
imul
cld
jb
xor
shl
dec
leave
add
mov
jmp
stos
ret
xchg
and
add
adc
sbb
stos
int
jecxz
dec
jle
stos
(bad)
cmp
ins
imul
lea
push
ret
jbe
mov
pop
pop
fwait
test
lods
inc
(bad)
jo
js
enter
xchg
sub
add
mov
clc
xchg
rcl
nop
(bad)
out
mov
into
xlat
and
xchg
add
pop
pop
and
lods
dec
jnp
mov
push
test
mov
icebp
iret
iret
or
mov
jecxz
out
mov
mov
fcomp
ins
jnp
adc
xchg
movs
frstpm(287
or
or
mov
fidiv
mov
xchg
ja
push
stc
push
daa
push
xor
aam
outs
fs
jmp
int
loopne
ret
mov
leave
push
push
int
ja
mov
pop
outs
nop
jmp
call
inc
out
cmps
ins
mov
pop
pop
jl
ins
jg
cmp
rol
add
cmp
mov
mov
repz
jno
scas
imul
(bad)
sbb
out
mov
fld
dec
sbb
pop
repnz
pop
rcl
xor
dec
cmp
scas
nop
push
jmp
fdivr
cwde
xor
push
out
sub
ficom
xchg
pop
js
imul
mov
stc
and
test
and
push
push
cld
lds
mov
and
mov
(bad)
out
shl
mov
and
cli
hlt
xor
fimul
(bad)
sbb
push
jnp
xor
fwait
(bad)
jmp
loopne
pushf
xor
daa
adc
xor
mov
frstor
jge
pop
out
mov
es
pop
jp
fst
add
or
imul
jmp
int
pop
mul
jge
inc
rol
addr16
ja
sbb
sub
or
push
addr16
fimul
push
xlat
out
pop
jecxz
inc
stos
imul
loope
cld
in
mov
mov
sub
sti
sub
jbe
aas
aaa
cmp
nop
repz
add
stos
mov
fwait
xor
rcr
mul
out
(bad)
pop
push
(bad)
ja
aaa
jae
add
test
das
and
pop
popa
lods
aad
aad
mov
pop
or
leave
cmp
loope
in
sbb
push
pushf
jmp
loopne
imul
mov
push
neg
xor
pop
(bad)
jmp
lea
jne
sbb
mov
test
int
call
int3
jl
pop
push
shr
lods
mov
aaa
lods
mul
sub
lds
add
in
mov
inc
out
mov
out
jg
ss
pop
mov
lods
jmp
sbb
loopne
ret
pop
les
mov
add
push
inc
and
ds
lds
fnstenv
inc
sar
idiv
rol
xor
inc
call
sub
inc
pop
adc
aas
xchg
xor
loopne
mov
enter
js
mov
jnp
dec
sbb
mul
jge
xchg
(bad)
xrelease
mov
cld
mov
add
cmc
arpl
cdq
aad
movs
add
test
xor
hlt
jge
push
jb
popa
mov
cmps
mov
cmps
cmp
xchg
jmp
leave
push
xchg
mov
and
aaa
pusha
jae
pop
stos
add
test
inc
add
mov
adc
pop
dec
in
(bad)
push
popa
dec
add
mov
pop
(bad)
sbb
scas
add
jp
dec
xor
dec
mov
mov
push
mov
mov
inc
xchg
repz
ins
sbb
jp
cmp
iret
mov
push
or
clc
pop
and
adc
scas
dec
mov
push
retf
ret
add
jmp
mov
mov
dec
push
in
or
fldenv
retf
push
repz
jge
pop
push
mov
adc
and
mov
stc
fdiv
loope
cli
and
je
cmp
xchg
jcxz
iret
pusha
jae
jns
movs
add
or
and
repz
aas
adc
in
in
fs
loop
ror
mov
into
mov
mov
arpl
daa
xor
shl
(bad)
fsub
repz
imul
fadd
rol
sbb
push
mov
dec
pop
fisubr
call
outs
and
das
adc
enter
call
scas
jbe
retf
and
ins
mov
mov
cdq
fdiv
mov
lods
shl
leave
mov
adc
push
pop
jmp
in
ja
and
jb
dec
lgs
lock
bound
inc
xor
jbe
imul
aam
mov
aas
cdq
inc
ret
call
mov
jno
rcr
mov
aam
lods
add
cmp
mov
xchg
mov
sbb
repnz
inc
mov
fs
scas
inc
mov
scas
rcl
loop
call
mov
cmps
push
fistp
or
push
sbb
push
xor
inc
imul
not
adc
inc
xor
sbb
adc
dec
mov
loope
mov
ret
xchg
push
mov
dec
push
dec
imul
or
inc
xor
es
cmp
aad
jl
xchg
mov
push
iret
mov
dec
popf
xchg
push
sbb
(bad)
push
(bad)
jmp
mov
ins
cmp
adc
push
les
xor
xchg
push
jecxz
adc
imul
in
inc
dec
rcl
repnz
jmp
mov
dec
pushf
cdq
and
(bad)
(bad)
enter
cmp
adc
push
scas
mov
cmps
pop
jp
fcmovb
out
ficomp
adc
or
ret
aam
xchg
mov
cli
neg
imul
add
movs
and
sub
pop
dec
movs
dec
jb
jl
push
out
cwde
jmp
ret
sub
mov
add
jb
cmps
sti
xchg
enter
cmc
cdq
cs
push
xchg
sbb
ins
aas
(bad)
push
jmp
call
lock
leave
inc
adc
xor
dec
popf
inc
sub
daa
(bad)
fcomp
mov
cmp
repnz
and
pop
xchg
jl
(bad)
pusha
cwde
xchg
in
(bad)
and
arpl
fdiv
std
out
inc
(bad)
cli
mov
test
(bad)
cmps
loope
pusha
in
push
scas
pop
test
(bad)
adc
dec
sbb
lods
add
push
shl
fist
pop
out
mov
cmp
mov
and
sbb
jbe
cmp
add
or
mov
sub
into
pop
hlt
pop
mov
popa
outs
adc
imul
jb
fnstcw
jbe
retf
add
shr
push
mov
jge
xor
int
mov
stc
inc
mov
dec
ins
fst
sar
push
mov
icebp
inc
lea
out
int3
mov
or
fs
fisttp
lahf
xchg
imul
push
data16
aad
xor
es
es
call
cmp
fwait
int
jbe
ss
cmp
movs
jl
mov
out
popf
sbb
out
not
mov
mov
or
xchg
or
in
fbstp
lods
lods
jns
mov
ret
cmp
lds
xor
xchg
(bad)
arpl
mov
and
adc
dec
or
cmp
pop
int
cmp
xchg
fld
mov
out
adc
sbb
enter
shr
jb
mov
loopne
pop
pushf
jmp
cmp
push
or
and
(bad)
xor
je
ins
cmps
inc
outs
dec
fbstp
fwait
jecxz
arpl
loopne
out
mov
ficom
push
dec
and
lods
cld
pop
call
push
jnp
arpl
dec
mov
in
cmp
inc
adc
(bad)
fidivr
xchg
sbb
int
clc
out
mov
cmp
jmp
or
icebp
sbb
sub
imul
xor
clc
repz
fwait
or
popf
sbb
dec
sbb
pop
daa
cli
push
add
test
in
loopne
test
cdq
(bad)
out
retf
jbe
adc
mov
les
in
xlat
loopne
jmp
(bad)
push
and
xchg
sbb
mov
add
jge
pop
in
push
sub
push
outs
xchg
test
jo
jle
add
popf
fdivr
add
push
xchg
xchg
jmp
pop
sar
in
mov
mov
das
fmul
aas
mov
das
ins
loop
repnz
pop
ins
popa
(bad)
shl
outs
xchg
mov
test
adc
std
(bad)
out
retf
ret
fnsave
fisub
js
enter
sub
fwait
push
aaa
loop
mov
xchg
jne
mov
jmp
xchg
and
aas
movs
loope
mov
sbb
push
out
dec
cmp
(bad)
into
pop
xchg
cmp
ja
add
add
outs
xchg
cmp
jbe
and
or
mov
mov
cld
add
dec
loop
(bad)
sbb
(bad)
mov
punpcklbw
movs
xchg
or
ins
push
imul
cmps
jle
push
pop
push
not
loopne
ja
push
cmp
je
xchg
dec
dec
loopne
sbb
bound
jmp
clc
add
dec
(bad)
cmp
ss
mov
lahf
fisubr
and
jmp
arpl
xchg
jecxz
push
or
retf
adc
add
div
or
mov
imul
pop
adc
les
dec
mov
les
xchg
sub
shr
dec
shl
aam
cmc
call
jno
mov
push
arpl
clc
lock
into
pop
adc
pop
std
push
ret
xchg
in
mul
xor
and
push
int
sub
dec
js
loopne
xor
pop
in
mov
shr
adc
in
dec
lea
cmps
cmp
add
iret
cmps
sub
jnp
in
arpl
mov
out
retf
cs
adc
fidiv
push
jno
shr
mov
popf
mov
dec
mov
pushf
sub
test
cmp
test
call
bound
sahf
mov
clc
in
push
shl
and
call
and
sub
mov
mov
ror
and
xchg
dec
out
lea
xlat
mov
pusha
call
mov
daa
mov
nop
mov
rol
push
xlat
aam
(bad)
xchg
xor
pop
int3
xchg
std
arpl
int3
test
push
sbb
adc
push
jno
aad
xor
xchg
dec
fdivr
jbe
scas
or
or
and
and
dec
inc
push
test
lds
clc
(bad)
mov
dec
cmp
mov
shl
test
jne
(bad)
hlt
outs
cmp
call
call
inc
in
jne
push
rcr
loope
push
mov
stos
cmp
retf
loop
lds
sti
pop
mov
xor
ss
jbe
xor
mov
into
call
ins
lea
push
cmp
dec
nop
mov
aaa
call
icebp
inc
adc
jne
xchg
sbb
or
cmp
fcom
jg
movs
mov
outs
jle
inc
neg
dec
rol
mov
mov
inc
(bad)
fstp
shl
fst
sub
mov
mov
cli
(bad)
pusha
inc
push
call
clc
sbb
push
or
mov
mov
xor
imul
sub
mov
int3
add
sbb
adc
push
and
cmp
push
rol
xor
ret
mov
sub
mov
mov
mov
out
or
sbb
mov
xchg
out
inc
push
mov
lods
test
and
push
xchg
add
jne
mov
arpl
xchg
dec
push
mov
mov
mov
in
aas
movs
inc
loope
iret
pop
jne
addr16
xchg
xor
xchg
aaa
xchg
pop
outs
ret
lahf
ja
jbe
cmps
mov
and
outs
xor
ret
pop
push
mov
xchg
or
aad
shl
ss
enter
outs
fst
stos
inc
cmc
outs
inc
(bad)
xchg
ja
inc
shr
stos
in
inc
mov
test
mov
in
bound
call
pop
fbld
daa
jle
ret
jge
(bad)
fsubr
cmp
inc
add
fcmovne
push
push
aad
xchg
pushf
jge
imul
pop
out
daa
sub
cmp
push
mov
lock
imul
in
out
mov
sbb
outs
mov
mov
fwait
(bad)
jg
ds
jae
ins
and
cmp
mov
neg
js
pushf
aad
or
push
sub
lea
add
es
stos
cwde
jecxz
pop
fs
xchg
ins
mov
shl
pop
arpl
in
scas
cs
aas
or
cmps
jns
(bad)
lock
loop
ins
nop
aad
cmp
adc
dec
ins
mov
mov
pop
pop
sti
dec
add
pop
(bad)
leave
inc
cdq
fwait
iret
jecxz
mov
pop
jg
cmps
ja
fisttp
add
xor
and
fisttp
mov
imul
rcr
call
mov
or
test
push
mov
jnp
jns
outs
test
out
push
js
shl
cdq
inc
loopne
sti
cmp
adc
and
fidivr
push
mov
sub
nop
fwait
xchg
div
test
aad
or
jmp
scas
xchg
(bad)
push
enter
ret
mov
push
lods
icebp
mov
test
fdivr
daa
adc
not
pop
(bad)
adc
pop
dec
jle
xchg
cdq
arpl
scas
leave
clc
or
xchg
push
cmps
jo
es
add
stos
add
(bad)
ror
xor
cmp
sub
xor
mov
push
push
es
addr16
or
sbb
push
js
test
data16
pop
iret
lahf
out
xchg
jl
adc
shl
stc
xchg
xor
pushf
aad
mov
add
cmp
out
test
pop
cmp
out
daa
ja
cmp
pop
or
loope
mov
mov
fs
xchg
dec
aam
jecxz
in
pop
dec
mov
xchg
adc
movs
fcom
push
or
das
push
or
jbe
inc
ss
jae
jns
pop
sbb
mov
sub
xchg
or
sub
test
loop
mov
push
aam
(bad)
jb
jns
and
arpl
dec
dec
sbb
shl
pop
push
test
sahf
mov
pop
loopne
ficom
into
cmp
mov
lock
mov
mov
mov
cmp
mov
cwde
sti
pop
(bad)
sbb
repnz
push
test
ds
test
test
movups
xchg
in
or
sti
call
xlat
shl
adc
and
out
and
sbb
pop
ins
nop
pop
mov
dec
sub
dec
dec
add
pop
pusha
je
cmp
inc
xor
sbb
push
fsubr
mov
mov
lods
xor
call
adc
add
sbb
out
icebp
icebp
mov
pop
ret
add
sbb
and
bound
push
rcl
(bad)
xchg
mov
add
cld
retf
rcr
add
cmp
push
fdiv
dec
mov
xchg
das
add
test
in
ins
lds
sub
mov
cmp
dec
fisttp
ret
iret
jae
ss
push
sar
jle
fdiv
adc
dec
pushf
lea
push
push
or
xlat
adc
push
mov
into
fdivr
sub
scas
or
sub
mov
outs
fistp
mov
xor
gs
ret
pop
jmp
clc
sub
scas
mov
das
adc
ds
mov
xor
dec
cmp
out
push
and
sbb
cmp
fild
fwait
les
add
inc
call
(bad)
loop
xchg
push
xchg
mov
dec
arpl
jecxz
mov
sub
leave
retf
scas
ss
pop
sub
in
dec
shl
pop
pop
stos
pop
rcr
ins
inc
xchg
test
push
(bad)
(bad)
int3
push
ins
sub
mov
(bad)
stos
arpl
std
cmp
lea
data16
je
lods
call
inc
sub
and
push
cld
div
sub
inc
xchg
or
cwde
push
movs
inc
xchg
pop
std
nop
or
mul
mov
daa
scas
shl
ret
stos
xor
jo
xchg
mov
fist
and
xchg
cmp
ins
stos
pop
sbb
cmp
inc
dec
(bad)
outs
inc
shl
sahf
clc
sub
test
push
and
vandps
lds
ror
jno
xor
in
ret
xor
retf
test
mov
jb
dec
cmp
out
mov
loope
add
shl
inc
fild
xor
retf
cmps
int3
adc
lahf
int3
pop
aam
and
sbb
inc
daa
gs
mov
xchg
nop
push
inc
cld
das
dec
cwde
inc
add
add
xchg
(bad)
sbb
pushf
loopne
loopne
jb
sti
inc
jmp
cmc
pop
adc
shr
jb
int3
in
loopne
mov
pop
mov
jp
jne
clc
jg
push
je
and
cmp
fmul
aas
sahf
pop
xchg
stos
mov
loope
and
sub
inc
cmp
inc
stos
loope
push
aad
mov
sbb
adc
mov
inc
out
push
xchg
js
pop
xor
mov
sbb
jne
pop
mov
loop
mov
lods
into
cli
xor
out
jl
mov
mov
add
(bad)
mov
or
dec
inc
inc
leave
and
es
fs
or
push
adc
fimul
and
dec
rol
cmp
fwait
jecxz
dec
sar
pop
xchg
repz
pop
xchg
mov
xchg
loope
xlat
mov
cli
loop
dec
add
pop
and
jmp
jae
pop
mov
ins
cli
mov
mov
std
data16
test
test
mov
xor
test
sub
sti
push
inc
outs
test
push
test
or
jb
retf
out
or
push
call
mov
jecxz
fimul
mul
repnz
push
xchg
xor
les
mov
leave
hlt
in
and
pop
out
sbb
scas
jg
inc
ds
mov
pop
cdq
push
mov
mov
mov
sbb
sar
dec
push
je
dec
icebp
mov
push
cmp
push
adc
hlt
(bad)
aad
leave
dec
in
mov
sub
imul
jne
or
push
ss
cmp
scas
mov
in
or
stc
mov
stos
push
dec
push
std
repnz
pop
mov
and
or
loop
(bad)
cmp
push
sub
stos
bound
mov
sub
mov
jmp
xchg
adc
addr16
aas
rol
enter
and
mov
xchg
mov
dec
and
sbb
or
jmp
clc
(bad)
sbb
(bad)
cdq
inc
sbb
mov
mov
cmp
mov
add
lods
fcmove
fbld
add
int3
or
test
mov
push
adc
jb
push
mov
push
test
cmc
xchg
cmp
jg
icebp
aaa
add
adc
pop
ja
jno
(bad)
nop
mov
repz
hlt
shl
js
fcom
ins
ss
mov
cmp
sbb
sub
mov
push
or
nop
mov
or
jno
xacquire
ficomp
ret
pop
mov
mov
es
xchg
mov
mov
adc
adc
sti
daa
xlat
jge
adc
inc
je
or
jo
lock
orps
dec
xchg
adc
sub
mov
movs
pop
add
call
push
dec
loopne
inc
jl
and
push
xchg
sub
sbb
mov
add
clc
jns
repz
jecxz
xchg
fcompp
push
push
lock
sbb
rol
ins
(bad)
push
add
aad
mov
add
ds
movs
jne
out
adc
push
xchg
push
fadd
ret
add
not
rol
lods
mov
xchg
dec
cmp
mov
push
jle
into
or
inc
popa
ret
fwait
mov
scas
test
mov
scas
or
test
loopne
(bad)
and
pusha
mov
arpl
(bad)
lock
dec
add
arpl
fdiv
mov
movs
movs
jae
test
(bad)
mov
mov
std
(bad)
jp
das
retf
hlt
mov
cmp
sub
lea
sub
mov
jmp
push
stc
mov
imul
mov
sbb
or
xchg
cmp
inc
movs
sbb
mov
mov
pop
dec
clc
push
out
or
push
sbb
jne
inc
cmp
test
push
(bad)
pop
mov
mov
jne
mov
cli
scas
jno
retf
in
xlat
push
pop
ds
mov
sub
cli
mov
mov
leave
or
xor
mov
or
(bad)
popf
inc
xor
sub
jb
or
add
lods
cmps
xchg
test
xchg
ja
push
cmp
mov
cdq
jg
lahf
sub
adc
cdq
sub
movs
xchg
fs
jle
scas
inc
and
gs
loopne
inc
inc
out
fcomi
xchg
dec
jmp
test
rcr
out
in
sbb
outs
loope
enter
in
mov
into
xchg
mov
clc
push
push
pop
jae
mov
mov
or
out
stc
dec
stos
sar
dec
mov
jl
call
shl
(bad)
cmp
add
jge
push
and
call
addr16
fwait
and
loope
mov
push
in
cmp
call
and
aam
jb
(bad)
sbb
mov
dec
stc
mov
jg
out
rep
jns
push
test
mov
fwait
and
enter
ins
mov
loopne
mov
cmp
sub
(bad)
xor
cmp
mov
mov
ror
xchg
pop
leave
jno
xchg
push
in
fld
in
in
pushf
cmp
mov
pop
pop
mov
add
inc
mov
je
es
int3
mov
add
adc
enter
cmp
adc
push
(bad)
mov
fmulp
repz
adc
dec
ror
outs
js
adc
add
sbb
and
aaa
scas
test
push
xchg
or
fcmovnbe
movs
imul
or
xchg
xlat
adc
and
rcr
loopne
nop
stc
es
push
xor
dec
or
mov
or
movs
sub
pop
outs
push
out
adc
sbb
and
inc
inc
inc
jecxz
jp
arpl
sub
aas
lods
ret
jmp
loop
sar
scas
sbb
fcomp
or
fnsave
stc
adc
in
or
xor
pop
and
dec
fstp
cli
jnp
cdq
mov
hlt
loopne
jle
ja
addr16
cld
push
add
jecxz
jecxz
stos
lock
(bad)
les
add
and
sbb
daa
jno
test
xchg
or
stc
aad
xchg
xchg
mov
and
sbb
imul
adc
mov
aaa
pop
hlt
add
ss
mov
or
mov
xchg
dec
pusha
sub
ds
test
mov
and
jp
xchg
lds
fwait
ret
mov
ror
mov
mov
mul
inc
and
sbb
add
pop
aad
mov
and
inc
rol
retf
cmp
loopne
dec
clc
rol
adc
cmp
icebp
cmps
dec
pop
rcl
pushf
scas
hlt
pop
lahf
cmp
pop
add
or
sti
or
mov
int3
call
leave
fstp
and
add
xor
adc
add
push
mov
stos
retf
dec
xchg
sub
movs
jno
xor
fsubr
add
push
gs
mov
test
cs
push
pop
retf
lea
ja
popf
gs
sub
mov
mov
mov
scas
cmp
je
int
xchg
xchg
xor
retf
(bad)
xor
push
clc
ins
sar
aas
sub
cmp
fstp
and
shr
ss
stos
pop
test
mov
imul
jno
test
pop
adc
pop
add
je
inc
enter
sbb
inc
enter
cwde
in
jle
inc
cmp
movs
in
mov
out
imul
fiadd
cdq
jmp
dec
add
repz
or
jg
adc
xchg
in
jge
and
sbb
(bad)
bound
and
rcl
jmp
into
mov
fdivrp
jmp
sub
cmp
scas
(bad)
pop
xchg
stos
sub
dec
cmp
(bad)
sub
jge
ins
loope
add
int
sbb
gs
fnstenv
leave
dec
mov
xor
ins
sbb
push
test
dec
das
in
int
pop
mov
aam
push
aaa
loop
loop
int
fisubr
imul
push
or
call
fnstenv
cmp
rcl
into
jle
cld
pop
jle
pop
hlt
imul
push
jbe
xchg
shl
mov
mov
out
cmp
sbb
mov
sub
mov
mov
fldcw
nop
sub
sti
lods
xor
sti
sahf
mov
imul
hlt
scas
aam
retf
shr
sub
push
out
mov
movs
retf
sub
arpl
ins
call
ins
stos
or
cmp
stos
cmp
daa
cmp
pop
sti
int3
xchg
into
ret
jge
fadd
daa
xchg
fmulp
in
pop
fadd
cmp
mov
pop
inc
in
sub
int
and
mov
mov
or
repnz
xor
jp
xor
stc
imul
ja
push
xchg
jb
retf
sbb
cs
cdq
movs
mov
and
call
cmp
mov
push
sub
or
out
mov
cmps
lock
scas
fcmovu
(bad)
shr
pop
repnz
dec
inc
add
test
and
pop
xor
mov
inc
jae
shr
mov
test
xor
jl
adc
jmp
adc
aas
adc
cwde
dec
push
cdq
scas
aad
adc
sbb
mov
(bad)
int3
ficom
and
adc
xor
lds
fiadd
pop
sub
int3
call
(bad)
(bad)
out
sub
xor
lahf
push
mov
stc
ins
fs
stos
jmp
push
inc
lahf
sub
xchg
sbb
ins
sti
in
cmp
add
mov
sbb
out
lahf
pop
cmp
dec
aas
cmp
xchg
call
mov
pop
sub
add
mov
lds
and
in
(bad)
fistp
push
sub
stc
in
sahf
sbb
sbb
repz
call
leave
and
xchg
imul
imul
(bad)
push
or
stos
leave
add
sub
nop
in
mov
adc
daa
xchg
bound
out
sahf
out
jno
push
mov
jmp
mov
sbb
(bad)
xchg
shl
sahf
cs
or
out
adc
int3
dec
inc
lds
fwait
xchg
pop
lahf
sahf
xchg
xor
scas
pop
dec
mov
inc
jb
pop
pop
fisttp
loopne
push
int
or
adc
cwde
adc
hlt
jmp
inc
je
sbb
xor
inc
sub
js
mov
jbe
adc
add
int3
and
inc
ficomp
or
mov
fwait
inc
adc
sub
and
push
mov
inc
dec
xor
mov
ret
and
ror
xchg
ds
aas
aas
imul
jnp
mov
sysenter
inc
std
std
cli
push
mov
pop
inc
(bad)
jge
das
push
mov
xchg
mov
push
pop
xor
mov
mov
es
pop
test
lods
and
jb
pop
mov
ins
mov
xchg
push
ror
jbe
shl
sbb
test
xchg
cmp
xchg
fadd
adc
mov
sub
in
jg
jae
cmps
cmp
jp
cmp
test
inc
inc
les
mov
movs
adc
addr16
fwait
aas
inc
in
xor
sub
arpl
xchg
mov
in
repz
xchg
inc
or
xchg
std
adc
test
xchg
and
mov
movs
data16
sbb
icebp
mov
(bad)
retw
int
int3
int
add
inc
lds
xchg
sbb
sbb
psubq
and
mov
xchg
nop
xor
loop
cdq
aas
mov
into
add
loopne
sar
xchg
enter
out
push
fiadd
push
or
int
xor
movs
js
xchg
repnz
jg
out
mov
jl
or
sti
dec
xchg
sahf
fwait
add
xlat
(bad)
jmp
sub
xor
push
ja
sahf
outs
inc
xor
sub
mov
push
mov
mov
adc
pop
out
mov
in
xchg
mov
int
push
dec
inc
push
je
jg
in
and
inc
mov
inc
test
mov
ret
fnsave
mov
cmp
stos
sti
xor
push
jns
inc
xchg
mov
sbb
ret
mov
cmps
mov
fcomi
mov
mov
fadd
mov
addr16
xchg
aaa
scas
mov
sahf
inc
aad
(bad)
je
out
enter
fst
in
jnp
adc
movs
adc
xor
pushf
mov
sbb
xor
fs
push
test
leave
cmp
call
adc
in
jnp
out
adc
mov
rol
and
xchg
mov
mov
pop
push
mov
rol
sahf
fwait
push
in
das
js
jns
dec
(bad)
push
sbb
or
push
shl
fmul
or
test
mov
add
dec
push
xchg
bound
mov
aad
cmp
mov
cmp
pop
arpl
imul
inc
xlat
aad
xor
stos
cmp
push
mov
pop
inc
and
push
inc
out
xchg
jg
cmp
mov
aaa
sbb
lahf
sub
mov
call
ds
cmp
std
aas
push
mov
ja
imul
or
repz
ror
sub
add
(bad)
(bad)
loopne
in
pop
sysexit
xor
cmp
push
mov
inc
aas
mov
out
js
add
inc
pop
dec
fbld
add
popf
outs
ss
push
addr16
push
mov
cmc
jb
mov
and
push
push
jo
mov
mov
inc
sub
fisubr
jmp
push
aad
add
loopne
or
jmp
sub
shl
jbe
mov
add
adc
fild
xchg
sbb
data16
(bad)
cmp
out
mov
(bad)
jl
lods
and
je
xor
mov
mov
push
or
call
jbe
or
mov
mov
jbe
xchg
cmp
into
pop
out
xchg
jmp
mov
scas
test
aad
mov
loop
aad
mov
adc
in
sbb
or
nop
or
sub
imul
out
repz
sub
inc
xchg
gs
data16
jns
cmp
fdivrp
addr16
pop
or
pop
jge
dec
pop
rcr
cmp
call
out
dec
out
(bad)
cmp
jp
add
jle
cli
std
in
mov
stos
test
lea
adc
dec
outs
mov
push
cmp
ss
jo
adc
sub
rcl
out
out
(bad)
rol
xor
mov
xor
and
(bad)
adc
cmp
ins
mov
leave
xchg
lods
xchg
repnz
fdivp
mov
les
jo
jge
sub
sbb
gs
adc
push
sbb
fimul
push
xor
iret
xor
mov
fsubr
test
mov
in
(bad)
push
mov
mov
neg
xchg
cmps
inc
pop
out
mov
sbb
xchg
xchg
int
imul
in
aas
loope
ins
shr
jbe
rcr
imul
adc
enter
and
shl
loope
add
aam
adc
xor
mov
fistp
es
sbb
es
fidivr
pop
loope
les
mov
in
ins
loop
call
adc
dec
je
fsub
pop
test
jmp
jne
outs
lds
sbb
scas
test
xchg
(bad)
sub
adc
sub
jge
call
out
cmp
push
iret
imul
xchg
mov
sbb
arpl
test
adc
fiadd
xor
fmul
mov
sbb
jge
nop
jl
push
mov
daa
arpl
ror
jne
push
icebp
mov
ins
(bad)
mov
in
clc
xor
cmp
(bad)
jae
or
mov
xchg
xchg
pop
fdivr
xor
jg
sub
and
pop
xor
lods
add
push
cmps
out
mov
and
pop
popf
rcl
xchg
in
sub
add
and
jg
fwait
cmp
mov
push
lods
pop
inc
arpl
jb
in
bound
cmp
das
outs
(bad)
sub
scas
cdq
or
call
out
mov
jp
sti
mov
xor
mov
dec
push
retf
pop
cmp
fs
inc
or
and
push
in
push
(bad)
mov
cmp
mov
push
mov
inc
or
jmp
retf
xor
sbb
movs
cmp
adc
add
sbb
jbe
ja
ret
pusha
aad
add
jbe
ds
retf
pop
pop
xor
sbb
adc
xchg
cmp
les
ret
popf
add
aaa
out
add
sbb
and
adc
jmp
pop
aam
xchg
xchg
add
xor
jge
dec
and
ins
mov
loop
popa
jnp
sbb
mov
push
adc
call
adc
fisttp
fist
push
lock
mov
xlat
cmp
or
retf
arpl
sbb
xor
jl
or
scas
mov
retf
xchg
jle
je
(bad)
and
scas
test
mov
dec
ds
lods
(bad)
cmps
sahf
std
inc
mov
sub
neg
jl
pushf
loopne
push
or
or
retf
xchg
xchg
es
and
push
xchg
mov
mov
div
mov
push
int
mov
popf
lock
adc
neg
hlt
inc
push
lods
mov
push
inc
add
pop
xchg
pop
adc
addr16
sub
mov
scas
or
es
adc
scas
pop
repnz
ficom
test
inc
fidiv
arpl
enter
add
cmps
aad
fwait
out
push
in
ds
aaa
lods
aaa
(bad)
(bad)
mov
mov
leave
xchg
scas
push
addr16
cmp
pop
shl
leave
cwde
int3
inc
ret
and
dec
out
shl
sub
enter
aas
mov
loope
aas
jns
out
pop
jnp
push
xchg
repnz
jae
outs
cmps
cmp
dec
pop
sub
or
mov
sub
lss
nop
hlt
pusha
cli
inc
xchg
adc
jg
out
test
push
cwde
std
(bad)
icebp
loopne
mov
nop
out
jmp
and
dec
aaa
jb
in
fwait
out
out
xor
inc
cmp
mov
fisttp
lock
mov
movs
push
dec
cmp
and
jns
cmc
adc
push
xchg
cdq
adc
ret
or
repnz
cld
xlat
out
cmp
cmc
sar
jae
sbb
adc
call
fs
cmps
ins
loopne
(bad)
jl
sbb
jno
pop
and
cmc
hlt
pop
or
sub
xchg
push
div
ins
gs
dec
outs
jmp
loopne
icebp
mov
into
add
xchg
(bad)
fdivp
fidiv
pop
sbb
jg
dec
cmps
sbb
in
pop
test
ja
std
jbe
iret
and
jnp
adc
mov
mov
jle
jle
stc
cmps
cmps
ja
jno
int3
out
ror
dec
xchg
fsubrp
jle
fadd
cmp
ins
mov
dec
sub
enter
jne
pop
leave
pop
(bad)
mov
pop
bound
cmp
test
lods
push
mov
mov
sbb
and
pushf
xor
scas
hlt
push
inc
es
lds
jo
jecxz
push
fstp
push
adc
or
cli
pushf
mov
inc
dec
jg
xor
adc
mov
sub
into
test
(bad)
rcr
sbb
xchg
push
shl
push
mov
test
ret
jg
(bad)
xor
lods
sahf
adc
pushf
test
ror
ror
jbe
sub
jae
popf
sub
movs
outs
xchg
fimul
cmps
rcr
xchg
aas
jle
retf
ret
lods
ds
hlt
mov
movs
stos
xchg
lea
movs
fisttp
sbb
cmp
push
jno
xchg
push
adc
push
cmps
test
imul
popa
in
lods
(bad)
dec
(bad)
xlat
mov
mov
lock
call
cmps
std
in
leave
int
sub
xor
(bad)
mov
cmp
(bad)
xor
jb
dec
cwde
leave
jo
dec
mov
repz
or
cmp
or
sbb
es
cmp
shl
test
or
fs
lds
nop
dec
pop
adc
pop
shl
out
pop
cmp
std
push
jb
xchg
mov
retf
je
add
cmp
mov
mov
cmp
pop
outs
and
mov
shr
rcr
addr16
push
movs
jge
test
pop
fsub
cmp
(bad)
stos
dec
mov
pop
mov
cs
jg
pop
test
fnstcw
xchg
fild
test
arpl
cld
fistp
rol
mov
ret
mov
test
test
xor
add
mov
aaa
xchg
fadd
jg
clc
cmp
pop
addr16
inc
fisub
jo
sbb
arpl
arpl
call
call
loopne
jnp
cdq
ins
adc
jge
(bad)
jmp
xchg
leave
dec
in
mov
fist
aam
fst
inc
sub
mul
nop
icebp
cdq
sar
xchg
(bad)
jp
aad
fld
ins
or
jmp
(bad)
pushf
sar
mov
into
(bad)
outs
out
xchg
and
test
pop
stos
out
dec
les
pushf
inc
xor
mov
rcr
fnstenv
das
xor
jmp
jle
pusha
test
rcl
icebp
sub
sti
xchg
and
fsub
cs
lahf
xlat
dec
bound
rcr
ja
inc
scas
in
dec
ret
pop
scas
cmc
imul
push
mov
jnp
pop
leave
sub
xor
jae
mov
mov
repnz
addr16
add
cmp
popa
add
xor
loopne
js
cld
jle
push
shl
jecxz
adc
sbb
mov
xor
jb
xchg
mov
not
lods
sub
ret
into
into
cld
mov
push
mov
lods
shr
fdivr
arpl
rol
pop
ss
add
movs
sbb
and
ja
xor
(bad)
add
movs
shl
or
jo
cmp
and
imul
add
mov
pop
test
inc
iret
cwde
jo
(bad)
adc
sub
mov
(bad)
jno
adc
movs
aam
sub
movs
fistp
mov
mov
aam
mov
jg
pop
ins
jecxz
retf
push
sbb
cmp
dec
sahf
sbb
ret
xlat
pop
repz
scas
jnp
jno
and
push
fidivr
xchg
mov
lods
outs
iret
int3
pusha
and
jns
retf
ja
xor
clc
lahf
pop
scas
test
and
fist
dec
xor
cmp
ins
inc
or
adc
jae
mov
pusha
repz
inc
call
fld
push
xchg
dec
ror
cmp
sbb
dec
xchg
jb
cmc
jns
cmp
inc
jl
repnz
sub
dec
sti
fist
ins
jmp
test
add
repnz
sub
imul
je
mov
pop
xchg
add
xchg
dec
sub
sbb
(bad)
ror
and
cmp
sbb
outs
out
fild
ja
jne
dec
push
sub
ret
aad
sbb
ret
sub
xlat
sub
ins
mov
imul
mov
pop
aas
mov
js
lea
mov
adc
sbb
mov
test
pop
sub
mov
imul
(bad)
pop
dec
or
adc
mov
outs
xchg
mov
outs
dec
pop
mov
pop
cli
fwait
icebp
stc
and
push
adc
add
dec
xchg
jo
dec
jnp
mov
xchg
mov
mov
mov
imul
cmp
adc
cmp
aam
test
mov
test
shl
inc
call
push
cli
and
xchg
inc
add
mov
call
jnp
jl
sbb
mov
add
mov
fisub
add
ror
lea
(bad)
sub
in
cmp
mov
mov
ds
adc
daa
mov
inc
pushf
jecxz
cmp
mov
adc
jge
pop
shr
jae
out
and
fwait
ds
cwde
ftst
push
lods
jg
ret
sbb
lea
jmp
inc
cmovb
movs
xor
push
add
ret
mov
loope
in
int3
xacquire
aaa
xchg
ret
ss
rol
adc
push
sar
test
test
push
mov
iret
jb
enter
inc
dec
rcl
pop
dec
fadd
lods
sti
ss
mov
add
and
imul
into
mov
pushf
xchg
je
and
and
xchg
arpl
imul
jbe
out
inc
adc
sub
shl
jecxz
sahf
fdivr
xor
jo
out
adc
dec
or
in
jecxz
ret
xchg
(bad)
pop
popa
sbb
rcl
aam
js
(bad)
fidiv
push
addr16
inc
imul
popf
mov
icebp
ss
sbb
pop
sub
xchg
nop
cmps
push
aad
stc
addr16
call
ds
ror
push
adc
jae
(bad)
jnp
jmp
(bad)
adc
add
mov
xchg
dec
push
data16
xor
fdivp
add
fnsave
test
or
add
jbe
fcom
mov
gs
mov
pop
popa
xchg
and
lods
push
inc
mov
mov
retf
push
and
jae
inc
outs
and
cmps
stos
test
retf
and
imul
gs
(bad)
int
(bad)
sub
cld
(bad)
xor
add
xor
pusha
mov
test
or
pop
in
add
in
dec
xchg
mov
mov
scas
mov
pop
push
fimul
xor
jle
mov
push
and
mov
or
fcmovnbe
rcl
push
mov
popa
dec
mov
leave
xchg
cmps
repz
aam
and
leave
cmc
cmc
std
dec
gs
inc
mov
or
push
xchg
push
lods
gs
xlat
sbb
jmp
xor
xor
add
or
xor
pop
lea
sub
cmp
adc
inc
dec
and
fcomp
jg
sub
adc
push
cld
stos
xlat
or
(bad)
adc
sbb
sbb
mov
es
cmp
cld
mov
mov
loop
cdq
lods
stos
jb
mov
dec
jp
jmp
xchg
cmp
sbb
and
in
lea
mov
mov
aam
or
lea
mov
mov
mul
sub
mov
js
inc
js
cld
bound
retf
pop
sahf
sbb
out
mov
ss
dec
fst
retf
cmps
xchg
cwde
mov
adc
xlat
int3
sbb
mov
inc
mov
add
xor
mov
(bad)
dec
repnz
shl
push
lods
inc
inc
jecxz
pop
loopne
hlt
inc
mov
in
pop
(bad)
loopne
fnstenv
dec
and
dec
aas
test
inc
xrelease
loop
pop
sar
dec
jge
ss
push
leave
xor
mov
jae
jmp
add
add
lea
mov
pop
xor
mov
push
in
scas
sbb
sti
pop
xor
and
jp
scas
fbld
rcr
cmp
inc
pushf
or
sar
mov
mov
rcr
test
movs
inc
ret
pop
out
cmp
out
push
in
loopne
sub
pop
mov
xchg
cmps
xor
push
xor
dec
dec
movs
cmp
fst
mov
push
cmp
push
push
sahf
inc
out
(bad)
ficomp
nop
loope
mov
adc
add
push
dec
xor
cli
popa
mov
repnz
movs
adc
sub
or
pop
cmp
jmp
retf
add
ret
ja
cmps
sbb
mov
adc
cmps
inc
push
sti
pop
shr
stos
or
push
lahf
pop
fwait
ror
ins
sbb
fisttp
cmp
jge
(bad)
fwait
pushf
shr
cmovno
cdq
inc
or
mov
adc
(bad)
lock
dec
jge
xchg
out
adc
ja
shl
pop
push
fld
pop
das
pop
sbb
fadd
inc
fwait
jge
std
sub
retf
cs
mov
iret
jle
mov
test
ds
mov
push
pusha
cmp
mov
or
or
inc
sub
call
int
(bad)
outs
iret
and
sbb
leave
clc
inc
xchg
adc
xor
mov
inc
outs
add
mov
(bad)
out
push
push
jbe
iret
sub
inc
pop
add
iret
jno
push
inc
jns
aas
mov
stos
out
repz
pop
clc
fs
push
into
mov
test
imul
js
test
xchg
(bad)
xor
mov
iret
mov
and
in
rcl
pop
xchg
test
jae
loop
(bad)
pop
retf
lods
in
cmp
fimul
push
test
or
jb
loopne
adc
mov
pop
out
out
dec
adc
in
imul
and
mov
out
jecxz
or
pop
outs
ins
dec
movs
jecxz
jne
hlt
and
nop
aam
adc
pop
mov
or
fisubr
push
cmp
adc
call
push
adc
xchg
outs
add
mov
ficomp
pop
lods
sub
mov
xor
inc
mov
cmp
mov
or
mov
ja
js
adc
ds
movs
fcmovnu
fsubr
push
add
cmps
sub
shl
inc
push
cmp
sbb
cmps
sti
sub
ret
and
(bad)
pushf
(bad)
retf
pop
push
cmc
lods
(bad)
fwait
das
jmp
addr16
mov
xchg
fcom
outs
xor
clc
daa
fdiv
pop
xchg
add
and
mov
ds
aaa
leave
lods
mov
xchg
mov
push
sub
das
push
fimul
pop
mov
push
inc
mov
xor
ins
loop
nop
mov
jecxz
outs
mov
lea
mov
xchg
(bad)
nop
loope
fs
mov
loop
dec
and
rcr
and
dec
jno
cmp
and
xchg
xor
xor
in
(bad)
hlt
popa
push
leave
or
les
in
retf
rcl
les
lahf
cmp
lds
and
das
add
(bad)
sub
pop
ja
sub
call
inc
cmp
dec
outs
pop
or
mov
dec
adc
rcr
sub
push
aas
imul
cmps
and
push
mov
mov
ret
outs
mov
mov
sub
ins
scas
shl
(bad)
jmp
xor
or
pusha
pop
mov
test
xchg
mov
inc
sub
adc
je
inc
scas
popa
cmp
popa
addr16
pop
mov
cmp
lahf
aaa
shl
inc
std
adc
aad
popa
adc
outs
sar
mov
in
aad
jno
rcr
pop
mov
add
in
mov
adc
mov
imul
and
push
sub
mov
inc
mov
shl
and
jle
adc
push
xchg
mov
xor
pop
adc
adc
mov
mov
pop
es
in
xor
ss
sahf
fxch
(bad)
jno
(bad)
sbb
std
or
adc
xor
inc
sbb
inc
sbb
outs
push
mov
and
push
jbe
pop
push
or
push
push
mov
xchg
popa
or
cmp
or
mov
repz
sub
loope
fidiv
fsubr
xor
(bad)
loopne
sub
xor
sub
outs
mov
mov
lea
(bad)
push
out
std
mov
pop
sub
out
push
xor
test
jo
rol
lds
cmp
out
jl
and
shl
push
mov
xor
imul
dec
lods
pusha
inc
clc
pop
das
sub
mov
and
xor
mov
mov
xor
dec
dec
lds
ss
inc
inc
fst
push
into
sbb
push
mov
mov
gs
xor
jo
test
pop
push
fild
shl
pop
cli
(bad)
pop
xchg
jmp
pop
dec
xor
iret
fdiv
jne
rcl
jg
in
icebp
xor
int3
movs
mov
outs
cmp
push
push
out
(bad)
das
es
mov
leave
ror
xor
push
imul
test
scas
jge
push
pop
mov
cmp
jmp
sbb
and
xchg
mov
popf
push
ror
mov
cmp
outs
pop
sub
mov
(bad)
fdiv
mov
sbb
jmp
sbb
sbb
fistp
bound
out
mov
push
ds
es
push
hlt
data16
jge
daa
mov
mov
repnz
imul
hlt
hlt
and
pop
xor
hlt
shr
add
adc
in
aaa
push
cwde
mov
(bad)
stc
pop
mov
xor
xchg
loope
mov
sub
mov
out
pop
shl
jo
in
cmp
iret
inc
xlat
mov
jp
retf
(bad)
pop
mov
retf
mov
enter
mov
es
sub
inc
pop
push
(bad)
test
push
int3
mov
sti
add
and
sub
ins
jp
mov
xchg
test
int
repnz
inc
pop
mov
fisub
push
test
mov
outs
push
and
push
lock
xchg
xlat
mov
sub
rcr
sub
inc
pop
cmp
mov
mov
fbstp
sbb
retf
pop
pop
(bad)
enterw
cmps
lods
not
jb
and
rol
adc
call
iret
aaa
and
xor
or
fbstp
outs
bound
xchg
push
adc
ss
dec
not
xchg
mov
xchg
mov
mov
dec
arpl
xchg
ds
pop
(bad)
push
cdq
cmc
shl
inc
hlt
scas
inc
xchg
daa
cmp
ins
push
repnz
jl
call
imul
add
ror
(bad)
movs
cli
jecxz
(bad)
clc
xor
movs
rcr
lock
jns
not
scas
shl
and
inc
aad
mov
pop
or
mov
xlat
aam
enter
or
popf
jle
push
jmp
push
mov
xchg
addr16
cmp
into
inc
es
or
and
adc
cs
jp
call
inc
gs
popa
data16
dec
cmp
sbb
adc
mov
jmp
sub
call
inc
call
arpl
jns
addr16
iret
retf
loope
sbb
aad
mov
sub
into
add
aam
dec
fnstsw
mov
pop
dec
fild
jmp
add
cmp
or
inc
lods
(bad)
jns
inc
mov
jnp
mov
mul
enter
pop
pop
push
fsub
dec
ret
mov
jae
rcr
test
mov
or
retf
jp
xchg
enter
jge
sub
xchg
cmc
push
(bad)
ficomp
repnz
repnz
aam
inc
xor
jmp
pusha
sub
leave
in
ja
xchg
mov
cwde
js
gs
mov
mov
lods
jno
xchg
or
or
repz
gs
in
mov
faddp
aas
int
cmp
adc
xor
jmp
ret
adc
cmp
(bad)
mov
out
mov
shl
mov
or
rol
or
mov
stc
aas
jp
xchg
dec
out
imul
mov
ss
out
adc
leave
dec
sbb
pop
sar
cli
lds
pop
add
push
aad
and
push
mov
xor
(bad)
lods
out
lods
les
push
or
sahf
out
cmp
sti
in
pop
add
mov
clc
jae
cs
mov
mov
inc
movs
sbb
sub
inc
adc
inc
mov
int
not
mov
and
cmp
mov
out
dec
pushw
mov
inc
jmp
mov
les
fldcw
test
lahf
movs
int3
mov
imul
xor
mov
sbb
in
shl
pop
or
push
cdq
xchg
mov
stc
(bad)
and
out
movs
test
hlt
push
mov
mov
sub
mov
je
gs
mov
cmps
and
idiv
sub
cmp
pop
mov
mov
pusha
f2xm1
xor
and
shl
cld
ror
je
push
mov
xor
out
addr16
call
test
(bad)
cmps
jae
adc
sub
mov
cmp
(bad)
mov
cmp
imul
ds
push
cmc
inc
(bad)
fs
cmc
adc
(bad)
cmc
(bad)
lock
adc
inc
jmp
mov
mov
mov
pusha
mov
out
add
inc
sbb
adc
ror
pusha
int3
pop
rol
cmp
pop
ret
and
cmp
mov
cmp
sub
mov
inc
cli
enter
popa
jns
dec
scas
inc
sub
push
vpaddsb
push
fprem
ficomp
xchg
popa
into
addr16
cmps
jl
mov
xchg
mul
out
repz
adc
xor
mov
adc
popa
imul
(bad)
push
add
and
or
cmp
xchg
pop
and
push
popa
scas
push
(bad)
sub
mov
jge
clc
ret
dec
fidiv
push
jmp
pop
xor
sbb
jb
ror
xchg
(bad)
xchg
xchg
ja
bound
je
xor
lock
lea
fisttp
je
fiadd
popf
(bad)
jnp
and
syscall
or
je
and
not
neg
retf
stc
iret
push
mov
jmp
arpl
cmps
movs
arpl
stos
push
push
jecxz
pop
scas
mul
inc
jmp
dec
nop
sub
fistp
test
call
cmp
ret
fadd
xchg
adc
sbb
push
fadd
cmp
dec
into
es
fadd
cmp
call
mov
push
dec
adc
mov
push
push
mov
mov
js
jb
stos
icebp
int3
int
xor
out
fs
pusha
mov
dec
aaa
mov
push
cmp
dec
inc
lds
jno
popf
scas
sahf
push
xlat
sub
jo
out
out
mov
mov
add
mov
sbb
inc
std
xchg
cdq
mov
shl
std
adc
in
(bad)
(bad)
or
mov
dec
cli
pop
rol
and
sub
sbb
fmul
jmp
pop
loope
add
mov
inc
call
ret
xor
cs
sti
cmp
mov
dec
sti
sub
inc
pop
jne
jnp
mov
adc
repz
and
cmps
mov
stc
push
push
cli
dec
scas
popa
xchg
in
pop
adc
sbb
sub
adc
lds
dec
in
jbe
inc
stc
shr
call
cwde
int
das
inc
fst
push
add
scas
jle
mov
repz
xchg
test
pop
test
addr16
or
mov
push
mov
and
inc
xor
mov
in
pop
dec
adc
push
pop
xlat
add
dec
mov
ins
out
push
icebp
cdq
movs
rol
xor
add
std
add
jecxz
data16
pop
adc
lds
fwait
dec
push
jno
mov
lds
(bad)
fidivr
out
repz
dec
test
rcr
ret
out
sub
or
push
ret
enter
rcl
inc
in
call
and
imul
jae
inc
mov
aas
movs
cs
(bad)
xchg
cmp
pop
mov
push
push
cmps
push
sbb
jo
add
fs
push
add
mov
cwde
push
test
fs
pop
pop
cmp
jns
pop
xchg
push
fiadd
xchg
cmps
adc
jg
jg
or
stos
sbb
adc
pop
push
inc
(bad)
xor
out
fdivr
push
ins
mov
push
mov
jge
icebp
and
fsubr
shr
inc
loop
ja
lods
movs
inc
leave
dec
pop
or
cs
ds
mov
push
jmp
pop
aad
pop
lods
js
call
idiv
jl
xchg
mov
mov
xchg
sub
jecxz
or
aas
push
int3
mov
fcmovnu
push
sub
lock
jno
es
jnp
xchg
das
lods
fnstenv
cmp
lea
sub
mov
or
outs
xchg
and
jecxz
inc
xchg
shl
mov
inc
call
gs
dec
pop
in
and
mov
sti
cmc
test
test
pop
xchg
(bad)
ret
repnz
out
add
into
xor
push
les
iret
repz
cmc
in
bnd
addr16
mov
sub
scas
mov
dec
and
fs
pop
aaa
aaa
pusha
inc
int3
adc
mov
imul
push
xchg
push
mov
loope
xor
shl
fmul
leave
inc
cmc
mov
inc
and
or
adc
neg
pushf
push
push
push
xor
adc
icebp
inc
aas
cli
ficom
adc
jecxz
dec
fs
into
out
stc
inc
push
les
jecxz
xor
std
call
jne
ss
loop
fld
loop
fmul
call
daa
adc
jmp
and
or
jbe
sbb
jmp
pusha
fistp
popa
das
mov
add
sar
and
data16
or
stos
fst
dec
cwde
out
in
push
jb
add
in
inc
pop
jp
dec
addr16
rol
push
xchg
movs
cmps
sti
fimul
inc
stc
test
push
inc
enter
xchg
jl
push
push
dec
jb
gs
jecxz
mov
push
ret
outs
popa
and
push
jmp
and
dec
hlt
adc
movs
cli
mov
pop
or
mov
arpl
pop
push
xor
mov
mov
jg
mov
sub
fdiv
lods
stos
sbb
out
mov
pop
mov
jbe
ds
jo
or
rcl
xor
or
inc
push
mov
dec
sti
imul
sbb
lea
into
mov
pop
sub
bswap
mov
dec
in
xor
punpcklwd
in
push
jmp
js
inc
rcl
mov
rcr
movs
push
daa
clc
out
sahf
out
retf
mov
push
jp
(bad)
stc
inc
pop
das
test
push
inc
xchg
sbb
cmp
jae
call
fwait
inc
into
clc
cmp
sbb
mov
pop
mov
xchg
jle
test
mov
sub
push
scas
(bad)
out
rol
call
mov
outs
imul
js
sub
sahf
mov
daa
sbb
sahf
and
fidiv
cmc
inc
mov
repnz
jmp
adc
push
jle
xor
push
mov
and
idiv
nop
mov
cmp
clc
xchg
push
std
sbb
adc
mov
in
call
fld
sbb
inc
js
test
clc
sub
or
cld
mov
adc
mov
in
dec
push
pop
add
vmovups
dec
inc
repz
mov
adc
xchg
inc
call
std
sbb
out
or
inc
sar
iret
imul
inc
ss
fld
cmp
sub
jnp
outs
adc
cmovb
fucomp
dec
inc
mov
adc
sbb
sar
xchg
push
xbegin
test
cmps
into
or
or
ss
or
test
mov
in
or
push
popa
mov
lea
pop
adc
repz
out
pop
pop
in
xchg
cmp
mov
fld
sub
and
psrld
mov
repnz
je
inc
cmps
pop
in
cmps
arpl
dec
popa
iret
adc
les
shr
dec
(bad)
rcr
xor
xchg
outs
inc
mov
clc
and
cmp
test
xchg
std
mov
mul
ss
jnp
loop
les
icebp
cmp
cld
cli
mov
bound
int
outs
or
push
or
mov
sub
jp
and
and
loope
fs
cs
pop
ret
fbld
cwde
not
into
adc
pop
lahf
dec
loopne
retf
test
pusha
xchg
and
jb
mov
mov
and
movs
pop
loop
and
inc
or
xor
cdq
sbb
pop
out
pop
inc
mov
cmp
push
aaa
in
jae
fst
shl
jmp
js
aad
and
or
inc
xor
mov
cdq
int
je
stc
pmullw
pop
inc
mov
pop
aad
adc
jo
cmp
jl
iret
pusha
sahf
popa
mov
loop
push
inc
inc
fwait
stc
adc
mov
test
pop
shl
fcomp
retf
jnp
xchg
nop
ret
(bad)
clc
scas
cs
push
sahf
sahf
push
retf
inc
xchg
pop
push
sbb
inc
pop
(bad)
(bad)
mov
mov
or
xor
dec
fwait
mov
and
push
(bad)
lock
jnp
push
popf
add
push
and
ja
sub
push
leave
sbb
pop
push
mov
stos
mov
push
mov
jbe
cmp
dec
jb
dec
inc
or
sbb
js
mov
clc
jae
imul
and
dec
adc
xchg
dec
dec
mov
mov
pop
test
mov
xor
test
repz
lahf
cmps
lahf
mov
inc
sbb
push
xchg
das
shl
aam
adc
pusha
cdq
outs
push
repz
(bad)
xchg
hlt
das
loopne
test
aas
gs
mov
ror
xor
jle
inc
inc
pop
(bad)
sub
bound
mov
pop
adc
sbb
inc
or
ret
inc
inc
jns
pop
xchg
mov
sub
int3
pop
mov
psubusw
or
xchg
mov
dec
xchg
aad
dec
jno
es
je
xchg
pop
mov
dec
dec
inc
fst
xchg
mul
icebp
cmp
movs
add
mov
outs
push
dec
mov
loope
in
sub
js
aam
mov
jae
fisub
mov
mov
jae
fcmovu
dec
jmp
inc
ret
stos
ficom
push
das
popa
add
sbb
daa
inc
inc
jo
and
inc
aaa
inc
repz
sahf
iret
adc
cmc
xor
and
sbb
and
ret
push
scas
xor
rol
push
rcr
arpl
aam
jne
inc
mov
xor
pop
mov
xchg
lahf
adc
lds
cmps
jns
out
cs
mov
aam
hlt
push
inc
and
sbb
mov
sbb
cwde
add
dec
xor
jp
sub
xchg
mov
and
js
std
jne
(bad)
sub
test
or
cmp
sub
(bad)
fwait
jns
ror
lods
sub
js
and
cmps
repnz
fmul
cmc
sub
sti
ins
and
jo
das
pop
mov
mov
dec
ja
inc
dec
xchg
push
jecxz
jbe
xor
fcomip
cmc
shl
pop
pop
add
sbb
mov
push
jecxz
call
mov
push
test
push
mov
stc
mov
addr16
inc
push
neg
aaa
jae
mov
jp
jmp
into
ja
mov
or
xchg
xor
ret
xlat
mov
jle
add
pop
inc
add
inc
stc
or
push
cld
in
cmp
fnstsw
nop
jl
add
dec
arpl
xor
fsubrp
sbb
mov
sar
imul
xor
mov
mov
jg
dec
push
test
cmp
je
inc
movs
add
mov
xor
jmp
les
mov
sub
sti
test
xchg
rcl
loop
clc
inc
aad
push
adc
cmps
pop
sub
inc
pusha
fidivr
or
sar
sub
stos
xchg
and
pusha
xor
adc
fisubr
into
ret
std
xchg
add
ror
jmp
mov
jbe
in
aaa
fcom
mov
call
call
rcl
cmp
ror
mov
(bad)
cld
add
cmp
retf
inc
cwde
mov
shr
mov
movs
xchg
inc
rcr
out
loop
sbb
dec
sub
mov
ficom
test
(bad)
ret
test
or
mov
inc
inc
lods
xchg
pop
icebp
scas
push
(bad)
test
lahf
fcom
in
lods
inc
rcr
sbb
adc
sar
add
mov
aam
ss
pop
fmul
pop
repnz
mov
aaa
imul
popf
sti
out
mov
sub
fild
repnz
or
in
in
jmp
dec
jle
mov
mov
push
std
(bad)
push
ret
(bad)
jmp
inc
imul
jp
dec
mov
push
loopne
mov
ror
push
loope
fimul
les
les
aaa
arpl
dec
daa
jge
imul
jle
cwde
mov
dec
lods
sub
neg
cmp
mov
outs
inc
adc
pushf
movs
mov
pop
hlt
fnstenv
ins
repnz
jmp
inc
or
mov
out
inc
stc
inc
and
push
vpsubw
xor
leave
pusha
lea
scas
jl
(bad)
jg
jno
retf
fadd
or
mov
mov
clc
out
aad
call
mov
xchg
adc
sar
icebp
stc
and
sbb
add
idiv
jle
mov
neg
hlt
enter
sub
out
push
xlat
or
into
push
cs
out
mov
mov
pop
js
inc
dec
hlt
or
and
sub
rcl
pushf
inc
pop
inc
xor
cwde
fimul
mov
xchg
add
add
inc
imul
repnz
jge
cmp
push
loop
jns
push
mov
icebp
xchg
lahf
stos
jo
push
xchg
mov
lods
out
popa
fisub
inc
lods
pop
and
ret
xor
mov
add
adc
mov
sub
icebp
inc
mov
stc
inc
addr16
xor
sub
aas
pop
lahf
into
jmp
sbb
and
movs
push
hlt
retf
pop
jmp
mov
and
and
xchg
xchg
movs
sub
mov
push
sub
pusha
push
clc
sahf
add
mov
retf
xchg
xor
fs
xchg
js
xchg
push
sbb
pop
pop
or
dec
enter
and
scas
iret
xor
mov
mov
lods
imul
add
leave
xor
inc
mov
int3
jbe
mov
jne
stc
push
imul
lods
retf
mov
xor
bound
pop
pop
stc
lods
daa
icebp
mov
xchg
(bad)
and
retf
idiv
xlat
dec
mov
ins
push
push
xor
and
mov
pop
std
in
jnp
in
aaa
cmp
out
inc
cmp
xchg
push
pusha
cld
jo
jge
fcom
jmp
cdq
jo
add
stos
cmc
movs
pop
rcl
pop
xor
data16
test
les
hlt
stos
push
dec
fist
mov
push
int3
repnz
sbb
xchg
xchg
xchg
push
retf
rol
lods
mov
inc
out
gs
xchg
imul
pop
ret
jp
cmp
ins
xor
mov
and
adc
ss
pop
cmp
dec
les
push
cwde
lods
aad
xor
and
(bad)
push
or
push
push
fstp
xlat
stos
scas
retf
repz
stos
and
outs
inc
pop
mov
(bad)
xor
adc
in
push
or
hlt
shr
std
sbb
movs
cmp
popf
mov
aam
rol
std
sti
rcl
sub
xchg
int
repz
iret
imul
add
pop
mov
jns
rcl
jb
mov
addr16
loop
call
out
jmp
xor
iret
inc
pop
inc
dec
xor
and
pop
out
mov
sahf
xor
push
fidivr
lds
jmp
sahf
xor
scas
je
jmp
add
xchg
and
jmp
xchg
lea
sti
jecxz
addr16
ret
push
aad
out
lock
inc
outs
pop
sbb
rcl
lds
cmp
dec
es
pop
inc
cmps
sti
sub
int3
ins
mov
mov
adc
mov
pop
int
icebp
adc
out
inc
xor
sbb
jb
fmul
(bad)
test
icebp
imul
ins
pop
fwait
mov
fsubr
push
nop
jo
pop
mov
out
adc
and
mov
adc
les
and
les
jne
loopne
(bad)
pop
add
mul
and
imul
rep
mov
sub
loopne
sbb
xor
test
mov
xor
loope
jle
mov
xchg
les
mov
sbb
sub
movs
or
xchg
repnz
aaa
imul
fwait
mov
loope
cli
pop
cwde
mov
xchg
mov
loopne
and
into
pop
pusha
mov
jmp
pushf
out
into
cmp
mov
add
cmc
pop
das
shl
sbb
mov
fisubr
jmp
pop
mov
fmul
repz
jae
test
add
into
fcom
pop
inc
dec
into
push
jecxz
gs
aad
xor
jae
sub
lock
push
enter
jmp
dec
or
ror
fild
and
jp
fsubr
(bad)
pop
mov
add
mov
or
stos
cmp
push
out
out
push
aaa
dec
xor
call
loopne
not
ds
icebp
add
push
mov
cmp
hlt
mov
dec
inc
sbb
jmp
in
adc
sahf
data16
adc
retf
pop
jle
fdivr
jnp
sahf
les
sbb
rcl
ret
scas
pop
and
cmc
dec
pop
icebp
cmp
mov
adc
push
in
pop
jnp
cmp
push
jl
push
aam
gs
out
movs
push
stos
cmp
mov
mov
adc
cmp
es
or
sub
add
mov
(bad)
sbb
je
pop
out
movs
rcr
movs
push
pop
jp
stos
enter
int
xchg
push
add
cld
cli
js
sub
loopne
das
fisttp
inc
xor
pop
lds
cmp
jp
pop
jns
lods
sub
int3
(bad)
fwait
sbb
ret
cmp
jge
jecxz
loop
nop
lods
push
xor
push
push
ds
fmul
push
pusha
inc
cmc
data16
aad
push
push
icebp
shr
dec
push
stos
jae
jbe
enter
or
cmp
cmps
cwde
push
push
std
sub
mov
mov
loope
(bad)
sbb
pop
mov
retf
cmps
sbb
outs
jg
pop
daa
test
push
mov
push
push
pop
push
and
lock
inc
xchg
in
and
and
inc
test
push
pop
shr
push
jo
popa
clc
push
mov
mov
dec
jl
jnp
xchg
ficom
push
xchg
adc
ins
ds
adc
cld
xchg
or
jle
fs
jg
adc
(bad)
mov
mov
mov
sbb
pop
lods
xor
int3
outs
add
inc
out
mov
or
sbb
into
mov
pop
fisubr
inc
xchg
adc
inc
movs
hlt
sub
addr16
sti
sub
or
or
ins
mov
stos
xor
pop
in
pop
bound
cwde
arpl
in
int3
daa
inc
cmps
inc
fiadd
and
adc
sub
nop
add
xor
loope
pop
fs
(bad)
pop
movs
loopne
fdivrp
mov
mov
pop
call
ins
popa
adc
mov
jne
sub
cdq
pop
dec
les
shr
sbb
xchg
sbb
popf
outs
xchg
enter
gs
(bad)
mov
out
sub
xor
add
push
dec
jge
stc
clc
imul
pusha
les
add
(bad)
enter
and
ins
call
cmps
xchg
mov
mov
ret
int3
fld
xor
xchg
add
sti
mov
push
out
call
ins
push
push
fild
hlt
das
cmps
mov
in
daa
test
enter
inc
hlt
call
dec
cmp
mov
mov
rol
xor
xor
add
and
sbb
xlat
lds
sub
cmp
(bad)
sahf
mov
inc
bts
sub
push
iret
jg
pushf
data16
xchg
xchg
inc
and
xor
in
sub
cmp
das
(bad)
pop
nop
ins
mov
sub
int
mov
jo
pop
retf
test
scas
mov
push
test
je
dec
call
js
dec
ss
pop
add
cmp
xchg
bound
ja
out
imul
loop
cdq
dec
add
(bad)
iret
out
leave
push
ds
sti
pop
enter
imul
sub
fwait
shr
pop
hlt
and
stc
adc
cmp
xchg
out
pop
sbb
jmp
pop
cmp
push
aas
and
sti
lahf
ins
lahf
and
inc
mov
retf
mov
out
add
test
xor
fcmovbe
int
not
xlat
inc
jbe
jno
dec
stos
test
inc
mov
xor
test
cmp
mov
and
fsub
dec
mov
mov
ins
(bad)
fild
jl
ja
jecxz
xor
test
jne
inc
int
or
fimul
mov
jl
call
in
idiv
in
cmp
mov
fcmovu
inc
xchg
lea
xlat
out
daa
loop
push
xor
repz
or
imul
das
sbb
mov
int3
scas
fsubrp
or
adc
mov
je
mov
sub
fld
xor
jne
ss
sahf
xor
ins
ds
jne
add
inc
xor
outs
sti
lea
dec
ins
pop
inc
out
ja
in
cs
outs
inc
or
cmp
loope
call
mov
push
cmps
nop
retf
sbb
gs
inc
sahf
mov
adc
sub
mov
aaa
or
loop
stc
popf
xchg
push
inc
mov
or
fwait
in
mov
jnp
mov
or
ss
popa
lock
sti
push
jecxz
jo
sbb
push
push
add
or
jno
inc
pop
sub
stos
add
(bad)
enter
push
into
sub
stos
cld
cwde
pop
retf
mov
xchg
into
cld
(bad)
xchg
mov
test
call
ret
imul
ins
test
icebp
out
dec
aaa
add
out
jp
mov
inc
ror
push
idiv
jecxz
sub
mov
xor
shl
push
and
aas
cmp
cmp
jnp
out
push
add
repnz
int3
nop
cmp
push
test
into
into
jecxz
jmp
dec
sbb
fiadd
jge
dec
jae
cmp
mov
inc
or
loop
ja
(bad)
mov
mov
test
sub
push
inc
lock
mov
or
add
push
(bad)
dec
fwait
cli
jae
mov
and
jae
xchg
and
inc
cmc
pushf
mov
cli
fcomip
dec
lock
dec
arpl
cwde
or
sub
fist
retf
sub
sub
adc
xor
and
sbb
mov
mov
adc
fldz
lsl
sahf
mov
xchg
mov
or
add
mov
adc
aas
jp
xor
cli
dec
sub
mov
inc
xor
mov
sub
inc
fidivr
push
push
(bad)
mov
jns
enter
or
adc
jo
push
imul
jnp
mov
pop
push
dec
jl
addr16
mov
lods
pop
ret
mov
push
mov
sub
(bad)
frstor
xchg
mov
ret
retf
jg
adc
inc
aam
popf
mov
imul
outs
mov
daa
cmp
and
cmp
mov
popf
(bad)
aaa
and
and
mov
xchg
inc
mov
jg
in
cmp
jbe
mov
scas
scas
aas
lds
repz
test
cmp
sub
pop
mov
mov
cli
mov
out
lahf
mov
test
cwde
and
(bad)
out
(bad)
jmp
sbb
mov
imul
sbb
dec
jmp
lahf
retf
xor
sahf
push
xchg
ss
xor
cdq
jne
push
mov
cmp
ins
xor
in
popa
dec
test
js
xchg
sahf
popf
(bad)
cwde
packssdw
fdiv
shr
stc
mov
inc
call
mov
out
test
lods
and
xchg
bound
out
adc
(bad)
and
(bad)
mov
push
mov
and
(bad)
aaa
(bad)
sub
xchg
cmp
sbb
(bad)
and
xlat
and
in
out
mov
adc
call
loop
or
loope
mov
mov
nop
mov
fs
sub
rol
push
sbb
pop
mov
clc
(bad)
fwait
push
add
and
jmp
rcl
add
(bad)
hlt
jg
popa
inc
sbb
mov
loop
stos
fcmovnu
ret
stos
sahf
push
out
or
adc
pop
rcl
adc
dec
(bad)
add
pop
dec
xchg
cld
or
mov
inc
dec
pop
xor
jge
call
(bad)
neg
xchg
push
div
je
add
sub
dec
mov
or
out
sbb
(bad)
lahf
test
cli
test
mov
ins
scas
mov
fild
and
add
dec
dec
mov
(bad)
pop
push
in
jle
mov
call
mov
cmp
xchg
inc
pusha
add
inc
xchg
cmp
push
xor
inc
mov
cmp
xor
ins
enter
sub
sti
out
mov
adc
iret
xchg
push
mov
or
pop
ds
pop
dec
fwait
call
jo
xchg
sar
adc
mov
cmp
add
in
movs
xchg
shl
frstor
adc
dec
adc
(bad)
xor
arpl
fistp
jb
push
push
lods
dec
jne
daa
out
jecxz
push
dec
jecxz
jl
cld
jns
scas
pop
mov
push
clc
adc
dec
std
aad
popf
test
pop
outs
add
add
mov
jecxz
sbb
mov
adc
jo
leave
dec
movs
jns
into
or
add
cmc
pushf
int3
push
jecxz
fmul
aad
gs
xor
mov
bound
(bad)
fld1
jbe
int
dec
test
cmp
aas
stos
fisttp
jns
adc
push
pop
xchg
sbb
xlat
jmp
inc
out
xchg
fbstp
add
sbb
loop
xchg
push
jns
sbb
dec
mov
ins
imul
sub
and
adc
lds
stc
inc
adc
cs
and
jmp
sbb
adc
pusha
adc
in
push
out
xchg
sbb
(bad)
add
xchg
lods
push
(bad)
out
stos
clc
mov
movs
mov
sar
adc
sub
sbb
aas
add
fs
fdiv
ret
or
cmp
std
addr16
xchg
stos
mul
mov
clc
pop
or
mov
les
mov
punpckhwd
jo
sti
mov
mul
xor
ja
imul
cs
(bad)
dec
and
ret
xor
mov
pop
cld
call
pop
aas
jns
or
jne
and
xor
mov
mov
rcl
in
push
add
scas
(bad)
scas
push
xor
popf
cmc
or
pushf
adc
mov
jg
call
pop
push
dec
jmp
test
cli
push
cmp
js
adc
cmp
fdiv
and
shl
adc
pop
cmp
and
ins
push
ror
fimul
or
out
cmps
pop
ret
pop
mov
adc
and
sub
push
xchg
cmps
bound
push
adc
mov
dec
jp
push
dec
lods
mov
pop
push
cli
sti
sub
inc
adc
and
stos
not
jo
sbb
push
mov
xor
ja
aas
(bad)
es
ss
inc
movs
movs
inc
lods
jbe
xor
dec
repz
cmp
adc
fisub
push
inc
push
icebp
add
test
xchg
xchg
ins
jae
mov
cwde
pop
lock
leave
addr16
mov
dec
aaa
test
xchg
sar
sbb
inc
jge
mov
jp
fnstsw
cli
aad
push
xor
push
bound
or
jbe
inc
ror
nop
and
xchg
xor
test
push
int
shr
mov
and
sahf
adc
adc
lods
push
push
mov
clc
out
cs
addr16
sub
add
bound
in
jmp
mov
pop
hlt
dec
arpl
cmp
sub
int
pop
mov
mov
js
das
mov
pop
imul
push
push
dec
sub
and
call
push
ins
xor
arpl
add
xchg
mov
das
(bad)
loopne
adc
aaa
ins
push
sub
js
mov
rcl
push
xor
scas
test
add
ds
pushf
das
dec
fs
out
cmp
sbb
lock
mov
jmp
imul
and
les
(bad)
jl
cwde
shl
ins
sub
add
popa
pusha
stos
(bad)
sbb
sub
icebp
test
push
out
fsubr
mov
pop
sti
or
cmc
jle
jmp
pop
dec
pop
out
sbb
mov
gs
jmp
sbb
adc
lea
es
repnz
bound
call
imul
add
sub
xchg
push
enter
cmp
(bad)
cwde
sub
test
add
xchg
dec
xor
iret
cmp
pop
ins
mov
test
not
push
dec
cmp
jb
cmp
or
dec
and
and
retf
imul
cmc
mov
jl
sub
lds
push
pop
aas
sub
es
fst
or
sbb
gs
sub
je
xor
out
jl
push
(bad)
jmp
xchg
push
mov
fwait
movs
push
add
out
stos
add
mov
or
das
pop
dec
(bad)
js
xchg
pop
aas
ins
ss
or
fistp
outs
cmp
mov
div
jns
(bad)
jl
or
sbb
dec
lea
mov
pop
mov
fst
imul
loop
icebp
push
out
cmp
cmp
inc
shr
or
dec
repnz
sbb
and
mov
bound
jmp
xchg
pop
and
or
hlt
xchg
into
cli
ret
jb
jns
mov
(bad)
jg
imul
adc
or
js
ins
shl
adc
lock
inc
outs
mov
sub
inc
or
push
aam
movs
lock
add
mov
test
jnp
mov
xchg
pop
enter
loopne
jmp
inc
mov
or
lods
mov
in
and
call
cmp
fstp
push
notrack
push
sbb
sub
sub
nop
out
pop
popf
imul
push
nop
mov
inc
js
mov
std
pop
push
imul
sbb
loop
out
aaa
sti
fnsetpm(287
lods
cwde
adc
adc
cwde
mov
pop
nop
add
out
(bad)
xor
dec
and
mov
into
or
mov
pop
jmp
(bad)
ins
mov
adc
push
sbb
add
call
popa
jge
(bad)
scas
(bad)
adc
jmp
pop
movs
into
js
call
bound
test
lock
into
inc
sub
mov
fsubr
push
jmp
fadd
mov
ds
or
sub
jecxz
xchg
pop
jge
lahf
sbb
hlt
adc
add
or
or
jae
adc
rcl
leave
xchg
cmp
hlt
dec
test
nop
imul
movs
rol
push
or
and
imul
mov
add
pop
int3
cmc
hlt
test
fdivr
loope
adc
mov
inc
jmp
(bad)
jle
ins
imul
shl
inc
sub
xor
and
ss
int
push
das
lea
aad
outs
jbe
push
out
fstp
daa
in
mov
les
mov
xchg
inc
cmp
mov
and
retfw
fcom
jp
cmp
sbb
xchg
xchg
sub
mov
mov
rcl
mov
call
add
sbb
jl
imul
jo
mov
fdiv
je
add
(bad)
rcl
popf
pop
sahf
mov
xor
hlt
lds
neg
daa
jno
dec
fcom
ds
jmp
and
or
mov
pop
ds
call
and
jecxz
inc
inc
(bad)
adc
add
xor
mov
(bad)
mov
mov
sub
es
adc
push
jae
mov
stos
and
dec
xchg
pop
jg
or
jg
cmp
loope
pop
aad
sti
jmp
fcomp
ins
xchg
inc
cdq
popf
scas
adc
dec
lods
jl
pop
xchg
mov
(bad)
fcomp
sbb
mov
cmp
call
push
inc
xchg
outs
mov
cmc
pop
mov
push
and
aam
in
inc
mov
test
cmps
loopne
adc
cdq
sahf
gs
loopne
sub
mov
ins
xchg
test
test
mov
push
mov
jns
ret
mov
mov
les
popf
mov
mov
pop
jbe
aas
sub
neg
movs
mov
stos
ds
cmp
ins
jo
out
repnz
call
jg
test
dec
lock
in
fcmovu
sar
push
loopne
daa
mov
jo
pop
out
sub
loopne
(bad)
push
ja
retf
xor
inc
stos
push
into
pop
sub
outs
in
outs
pop
hlt
xor
cdq
mov
cmc
into
mov
fbstp
jb
xlat
das
add
cmc
add
icebp
sbb
cld
das
sub
add
les
lods
aam
aaa
sbb
shl
dec
es
in
xor
xlat
lods
les
les
mov
int3
dec
shl
cmp
xchg
xor
push
dec
push
push
add
in
adc
xchg
inc
and
pusha
cmp
jns
sbb
imul
cmp
cli
out
nop
mov
popa
pop
push
adc
pop
add
pushf
xchg
popa
sub
pop
cmp
mov
xlat
out
sub
sar
mov
xor
test
in
xchg
cs
cmp
add
arpl
mov
xor
je
and
int
xchg
mov
out
adc
mov
jne
cmc
adc
fistp
xlat
lods
dec
shl
frstor
adc
push
fdivr
ins
dec
repz
sbb
inc
cmp
jg
cmp
js
leave
jnp
pop
jno
daa
cwde
ret
out
jl
add
mov
out
in
addr16
push
out
mov
scas
scas
and
fcomp
loopne
lods
add
xor
int3
jmp
sbb
push
mov
fisubr
jp
arpl
inc
mov
push
(bad)
cld
pop
ins
inc
adc
ret
std
mov
jp
inc
push
cs
xchg
inc
inc
inc
punpckhbw
in
mov
or
sub
adc
ret
(bad)
enter
adc
sub
mov
pop
and
jns
xchg
or
sbb
mov
pop
repnz
xor
mov
arpl
and
jl
imul
pusha
or
pop
fidivr
mov
push
or
pop
jmp
push
xchg
sub
push
inc
cmps
cmp
jae
fcom
pusha
jmp
cmp
inc
or
test
mov
sbb
and
rcl
icebp
mov
inc
mov
int3
imul
fs
fwait
mov
rcl
or
data16
xor
xchg
fcmovnu
xor
fadd
xchg
lock
jo
jnp
les
adc
lea
dec
ins
jl
push
mov
pop
xor
cli
mov
ins
xchg
inc
cdq
loopne
leave
inc
dec
mov
add
test
xchg
cmc
(bad)
ds
jmp
cmp
cmps
sub
jae
jp
mov
nop
mov
inc
dec
inc
nop
jne
iret
nop
lds
std
imul
xor
gs
dec
in
sub
add
call
int3
mov
add
pop
pop
mov
jb
cwde
mov
lahf
cmp
icebp
outs
cmp
movs
stos
(bad)
push
inc
fsubr
test
push
sbb
push
jmp
hlt
dec
or
cmps
repnz
movs
xchg
jle
test
bound
jo
retf
mov
add
add
daa
mov
je
or
movs
cwde
sub
sbb
cli
and
push
lods
hlt
cli
add
or
cmc
and
outs
repz
mov
gs
shl
cmp
sub
jae
dec
xchg
inc
daa
lds
leave
outs
mov
retf
ja
(bad)
shl
mov
sub
inc
popa
push
xor
clc
popf
fwait
mov
xchg
call
inc
and
repz
sub
pop
stc
movs
sub
sti
imul
rol
or
adc
sub
sbb
cmc
int3
mov
stos
push
xchg
nop
aas
jmp
cwde
mov
sbb
mov
mov
lock
push
(bad)
xor
in
dec
mov
mov
sub
test
dec
das
(bad)
pop
arpl
pop
or
out
jo
fbstp
lods
mov
iret
daa
push
nop
out
xor
and
jmp
and
call
cmp
xor
sbb
ja
mov
lds
pop
mov
and
push
add
pop
pop
mov
sti
xor
pop
xlat
or
add
cwde
push
cmps
cmps
inc
push
sar
arpl
mov
into
xchg
pop
fadd
push
shl
mov
shl
jbe
and
xor
push
repnz
leave
push
mov
and
test
fwait
cmp
out
mul
mov
jg
add
fwait
pop
xor
fidiv
dec
adc
jae
mov
jle
and
add
nop
jb
inc
pop
mov
push
hlt
in
es
mov
out
sbb
lds
xor
pop
push
out
mov
adc
sub
pop
test
sbb
jp
das
shl
pop
push
fidivr
loope
ja
xor
mov
inc
ficomp
sbb
jp
mov
jae
sub
aaa
cwde
and
(bad)
dec
pop
cdq
cmps
add
movs
aad
jae
popa
pusha
les
jmp
adc
test
lds
out
nop
out
adc
test
sti
and
(bad)
push
ret
iret
iret
xchg
bound
dec
cmp
ins
nop
push
mov
inc
and
call
scas
xchg
add
call
pop
out
xchg
xor
hlt
ins
mov
repnz
push
nop
jecxz
loope
add
cmps
js
jb
test
push
push
sti
pop
mov
jb
mov
cmp
pop
xchg
cmp
or
(bad)
jp
(bad)
mov
mov
and
cmps
loope
add
jg
xchg
push
sbb
mov
outs
test
repnz
div
dec
xchg
dec
pop
mov
gs
jmp
imul
pop
mov
scas
xchg
push
mov
mov
pop
mov
sbb
and
jle
mov
out
push
dec
push
lods
inc
ds
sbb
test
cli
pop
mov
aam
call
les
add
dec
movs
ror
jnp
scas
cmp
or
dec
mov
push
sub
pop
shr
pop
mov
in
cdq
xor
or
mov
lahf
mov
mov
lea
repnz
loopne
retf
push
pop
das
mov
mov
mov
aam
ds
add
mov
or
sahf
test
dec
loop
dec
mov
fwait
xchg
or
xor
jbe
inc
ds
add
movs
outs
adc
mov
inc
mov
jno
(bad)
jmp
enter
jmp
mov
push
pop
js
in
push
push
jno
bound
mov
sti
rcl
iret
fldlg2
and
xchg
cmp
test
lods
inc
mov
out
ret
and
and
fsub
nop
xchg
mov
mov
int
inc
test
dec
retf
xchg
sub
inc
inc
adc
stos
inc
push
mov
mov
lods
mov
int3
xor
repnz
icebp
push
ins
inc
dec
jne
jmp
retf
mov
call
jb
and
dec
cmc
movs
and
not
retf
bound
out
jnp
popa
test
mov
sub
add
jl
push
jp
jle
aam
inc
add
jo
in
fnstenv
sar
sbb
sub
inc
ret
je
mov
jae
jae
out
jbe
mov
bound
(bad)
cmp
xchg
sbb
xchg
mov
ret
push
aad
mov
cmps
ins
sar
sub
inc
imul
jb
mov
add
lds
adc
mov
out
cmp
and
xchg
sbb
xchg
sub
jno
movs
loope
in
cmps
mov
mov
cmc
xor
shr
jmp
call
sbb
sub
jge
scas
xor
hlt
pop
sbb
fistp
inc
int
fucomi
arpl
shl
dec
add
jb
mov
aad
and
sbb
imul
in
lods
inc
add
add
xchg
mov
fbstp
mov
leave
xor
sub
jecxz
int
arpl
cmp
outs
lahf
mov
out
test
pusha
and
out
(bad)
daa
add
fcom
push
and
push
(bad)
sbb
inc
cmp
xor
mov
jmp
ja
mov
pushf
sub
out
dec
or
ins
mov
ret
dec
inc
repnz
(bad)
int
in
push
(bad)
cmp
mov
push
hlt
js
and
dec
mov
push
std
icebp
or
xor
ds
into
add
sub
lods
add
pushf
sub
enter
cmc
movs
mov
jmp
inc
popa
cld
sbb
in
jle
adc
aam
jmp
cmp
mov
js
push
mov
ins
outs
neg
inc
sub
cmps
lods
cmps
sub
scas
inc
push
mov
and
mov
mov
arpl
cmp
or
xchg
pop
ret
outs
lods
call
out
xor
imul
or
ja
sub
les
inc
xchg
lahf
cmp
push
sbb
lds
push
and
adc
xor
in
popf
cmps
pop
cmps
mov
mov
cld
adc
sbb
and
mov
lock
test
enter
dec
mov
mov
mov
fmul
mov
xchg
mov
(bad)
dec
sbb
mov
mov
daa
mov
fbstp
ret
out
lods
push
test
jp
pusha
addr16
movs
cmp
inc
mov
bound
pop
sbb
cmc
ror
div
neg
vpshld
and
mov
pop
nop
ficomp
lahf
dec
mov
push
inc
add
(bad)
ins
dec
or
jnp
fcom
pop
ins
xchg
xor
movs
mov
add
ss
push
mov
push
sbb
mov
cmps
and
pushf
cli
fcom
inc
xchg
enter
sub
call
gs
pop
cmp
pop
test
adc
mov
lods
mov
test
ret
sub
add
(bad)
std
ins
mov
in
mov
or
jne
mov
sbb
jp
jmp
lods
dec
or
mov
dec
mov
(bad)
jecxz
in
cmps
inc
inc
pop
mov
cmp
mov
xchg
mov
adc
inc
sbb
stos
into
nop
sbb
outs
inc
mov
fnstsw
push
dec
fmul
adc
jb
inc
cmp
sub
aas
cs
adc
jmp
add
mov
or
xchg
cmp
ds
ss
ds
inc
in
fwait
dec
in
dec
xchg
test
out
jecxz
fstp
push
js
push
stc
lods
cdq
mul
mov
pop
cwde
pop
je
push
shr
pop
inc
test
aam
(bad)
iret
sahf
xor
ror
or
cmp
movs
mov
sub
mov
push
inc
fild
not
adc
xchg
retf
jge
scas
and
scas
fild
jo
or
cmp
inc
ja
push
pop
fmul
add
push
int
xchg
xor
xchg
xchg
jns
or
jg
dec
mov
lods
shl
adc
push
push
out
sar
pushf
push
test
adc
loop
add
cmc
stc
cmp
into
icebp
xchg
xor
stos
das
fcmovnb
rcl
cdq
push
jo
test
and
mov
push
mov
xchg
das
mov
sbb
pop
mov
mov
push
js
rcr
lahf
jae
fstp
aaa
adc
xor
in
call
mov
arpl
sahf
into
imul
int3
xchg
addr16
xchg
addr16
scas
cmps
movs
mov
sub
lea
pop
nop
mov
fcomi
or
mov
and
dec
push
jo
push
cmps
ror
and
xor
jns
inc
add
(bad)
loope
cmps
leave
push
xor
mov
bound
retf
and
repnz
pusha
cmp
clc
(bad)
fistp
lea
nop
sar
daa
test
call
aaa
xor
stos
and
mov
jmp
xor
div
ja
ror
int
in
inc
in
sar
xor
adc
cmp
mov
fnstsw
push
xchg
sub
fsub
mov
daa
sbb
je
xor
pop
cmp
or
adc
(bad)
jg
push
push
enter
sbb
cmps
fmul
jecxz
add
sbb
in
shl
mov
adc
je
jle
ins
add
or
sar
adc
iret
dec
inc
scas
jb
jmp
and
jo
shl
mov
xchg
sub
and
mov
or
pop
mov
out
push
xor
bound
sar
test
retf
nop
(bad)
ja
cmc
mov
dec
pop
daa
xor
les
xchg
inc
inc
xlat
fstp
and
cli
pop
mov
call
mov
jb
inc
mov
xor
inc
and
xchg
xor
push
xchg
inc
jmp
out
sbb
sahf
movs
add
dec
dec
cs
xchg
push
xchg
les
hlt
fidiv
or
jne
shl
(bad)
cmc
add
gs
mov
int3
cmp
sbb
xor
cmp
add
cli
cmp
fdiv
xchg
cwde
jns
imul
or
mov
ror
arpl
or
sub
ja
stos
jmp
lods
fdiv
iret
jne
adc
sub
pop
je
mov
lea
fwait
and
call
in
cs
xlat
imul
add
push
jg
std
jb
nop
out
call
fldenv
add
cld
iret
cli
pop
fistp
fisub
jge
cmp
sbb
scas
pop
push
push
inc
jecxz
jns
dec
adc
shl
pusha
fild
and
mov
addr16
in
dec
ret
mov
push
mov
enter
mov
pop
inc
xchg
push
mov
movs
dec
and
ds
mov
and
sbb
lods
pop
or
call
add
jns
cwde
jmp
cmp
dec
inc
call
bound
push
pop
gs
call
adc
std
aaa
pop
(bad)
jb
call
jl
xchg
mov
xchg
(bad)
retf
and
and
push
sti
inc
and
push
add
call
or
mov
ds
jne
outs
cli
jnp
jno
add
xchg
cmp
fcom
sbb
adc
xchg
retf
sub
loopne
or
mov
not
sbb
jmp
xchg
into
pop
arpl
xlat
or
pop
sbb
add
ds
in
mov
inc
repnz
loopne
jne
adc
mov
dec
fsubr
cmp
pop
nop
ds
push
sbb
cmp
data16
and
adc
iret
and
cmps
mov
xor
(bad)
mov
dec
bound
xchg
pop
fst
mov
mov
cs
or
mov
fwait
push
dec
push
sbb
mov
nop
mov
cmp
sbb
pop
push
int3
dec
mov
push
mov
add
movs
and
jb
xchg
inc
cmp
out
sbb
test
dec
inc
(bad)
mov
jmp
cs
or
xor
arpl
jmp
jne
psllq
retf
ror
hlt
jle
movs
fadd
movs
push
xchg
sbb
pop
sbb
push
xchg
dec
cmp
and
xor
push
cmp
mov
mov
neg
mov
jle
test
ss
movs
in
cmps
sub
xchg
xchg
inc
(bad)
mov
rcl
push
out
mov
sub
(bad)
dec
or
xchg
mov
push
mul
stc
add
div
jmp
inc
cmp
fdivr
(bad)
inc
push
adc
dec
xchg
std
int
pop
movs
cmp
stos
dec
and
nop
inc
push
es
sub
repnz
or
loop
call
mov
sbb
mov
xchg
jle
mov
loope
mov
push
push
mov
dec
push
mov
in
xor
sub
jb
adc
dec
fidivr
push
fwait
sti
fwait
inc
enter
aaa
pop
into
sar
adc
lea
mov
add
repnz
pop
loop
movs
shl
pop
sti
movs
mov
pop
pcmpgtb
pop
push
jno
loop
je
mov
or
add
push
ds
add
mov
(bad)
xchg
pop
cmp
adc
mov
es
add
xchg
not
lds
pop
jno
fadd
clc
dec
pop
ret
(bad)
push
je
dec
(bad)
mov
stc
or
mov
int3
aad
cmps
call
pop
cmp
sub
das
test
ja
adc
jle
jae
jmp
mov
push
in
pop
into
mov
xchg
jns
xchg
jb
sub
loopne
xchg
enter
jnp
bound
aad
ret
inc
inc
adc
jne
ret
mov
mov
fsubr
(bad)
in
dec
gs
fimul
loope
mov
mov
imul
loope
jmp
mov
push
imul
mov
test
nop
int3
and
and
and
dec
out
jnp
call
xchg
inc
pop
pop
jns
jae
adc
bound
test
rol
or
cmc
dec
aam
stos
imul
push
mov
lock
pcmpeqd
adc
rcr
xor
and
inc
aad
pusha
mov
in
xor
push
hlt
or
scas
ins
in
retf
adc
out
dec
pop
(bad)
aam
int
in
retf
mov
int3
call
test
fbld
sbb
ror
pop
sbb
loop
lds
adc
ins
lock
out
icebp
fld1
test
ins
lds
add
xchg
adc
(bad)
je
xor
sub
ret
adc
dec
sahf
xchg
mov
call
dec
adc
push
adc
xor
in
dec
sub
aad
push
mov
cld
mov
retf
loop
xchg
mov
addr16
(bad)
push
xor
clc
mov
inc
pusha
adc
xchg
mov
cld
mov
pop
cmp
push
cmps
sbb
ins
adc
pop
cmc
fdiv
dec
jecxz
ret
adc
(bad)
or
(bad)
aaa
push
inc
jge
cmp
xchg
adc
rcl
mov
pop
nop
cmps
mov
or
pop
mov
xchg
fisubr
jle
adc
imul
(bad)
aad
aad
ret
push
xor
inc
inc
scas
mov
out
jmp
mov
stc
daa
mov
or
out
gs
data16
lods
cmc
push
test
retf
jle
dec
sbb
pop
mov
adc
out
jmp
sub
in
cmps
mov
jbe
mov
test
or
push
sub
cmc
or
mov
test
pop
mov
stos
outs
scas
sbb
push
stos
mul
aaa
mov
inc
jl
xor
push
push
loop
inc
and
js
pop
and
pop
fidiv
lods
out
stos
in
pop
pop
and
ins
pop
clc
inc
jl
mov
jno
in
push
jne
xchg
test
push
lea
loop
ss
out
xor
push
imul
(bad)
test
sti
cmp
mov
sub
(bad)
aam
dec
push
jmp
xchg
sub
push
and
cwde
scas
jb
mov
movs
cmps
ror
or
or
push
add
movs
xchg
mov
stc
inc
fild
pop
frstor
sbb
lea
pop
in
pop
dec
fsincos
push
mov
movs
sbb
inc
jmp
mov
cmps
movs
sub
bound
mov
jb
hlt
cmps
push
mov
mov
bound
and
fdiv
xor
push
mov
retf
ret
fisub
sub
rol
pushf
ins
mov
pop
inc
cmp
jno
mov
nop
leave
add
int
mov
inc
mov
js
(bad)
mov
imul
xor
stos
xlat
add
dec
lea
xlat
adc
xor
in
ss
fmul
int
xor
aas
dec
sti
xor
adc
test
ror
xor
dec
popf
adc
xor
test
inc
icebp
jl
sub
xor
pop
pop
xchg
and
out
cmp
in
in
(bad)
sti
mov
mov
xchg
jo
push
xor
push
jae
sbb
push
aam
addr16
xor
adc
stc
add
push
adc
fmul
test
add
push
push
outs
retf
dec
je
pop
repz
or
sbb
aaa
dec
ss
test
xchg
fld
mov
push
mov
ins
jbe
inc
add
jnp
outs
dec
(bad)
ficomp
sbb
retf
fild
out
jle
pop
dec
gs
xlat
call
adc
dec
fs
xchg
inc
test
push
ret
dec
mov
popf
pop
xchg
adc
cmp
fldenv
repz
or
jecxz
das
out
sti
push
xchg
jg
mov
test
sar
aas
mov
imul
push
aas
mov
daa
sahf
iret
arpl
dec
push
dec
gs
sub
leave
sbb
loop
inc
leave
xchg
cmp
aad
in
test
dec
ret
pop
pop
xchg
call
xchg
popf
icebp
mov
xor
or
fiadd
xor
clc
retf
std
pusha
pop
not
imul
push
ja
pusha
pop
repz
sbb
ds
(bad)
fmul
hlt
(bad)
jmp
xor
bound
pop
mov
addr16
jo
pusha
mov
xchg
dec
movs
lods
aas
cld
(bad)
aam
or
add
sbb
fld
outs
pop
std
adc
adc
mov
pop
or
cmp
lods
or
inc
push
(bad)
push
or
xchg
out
pop
push
das
(bad)
repz
cli
mov
mov
jnp
popf
add
lds
in
aaa
sbb
loopne
leave
stos
mov
fsub
daa
and
jbe
push
push
sbb
in
ror
and
scas
add
pop
adc
in
imul
mov
and
fidiv
out
pop
rol
scas
push
inc
sbb
(bad)
mov
rcr
and
push
or
sub
call
inc
scas
loopne
into
out
and
adc
mov
mov
ficom
and
scas
inc
pop
hlt
fs
popa
sbb
push
int3
jno
cld
in
addr16
xchg
stc
(bad)
mov
xchg
mov
xchg
xor
xor
test
dec
cli
inc
jmp
mov
imul
jmp
pop
outs
stc
(bad)
call
or
fdivr
enter
ret
shl
stos
push
and
sub
ss
call
mov
ja
sbb
xchg
in
les
je
pop
icebp
or
jne
add
movs
lahf
xchg
push
push
out
dec
imul
pusha
jo
xchg
clc
icebp
jno
(bad)
inc
mov
xor
cmp
cmp
test
repnz
jmp
rcr
shl
movs
leave
lock
pushf
push
bound
sub
sub
xor
out
leave
in
add
pop
jmp
(bad)
push
inc
push
push
mov
mov
push
cdq
sub
movs
scas
sbb
mov
inc
add
jmp
icebp
cmps
mov
mov
ret
nop
call
mov
in
sub
ins
fucomp
xor
jns
add
shr
shl
je
pop
sbb
adc
xchg
cmps
push
jle
jle
inc
mov
test
addr16
rcl
gs
cs
xchg
lds
mov
stos
loope
fsubr
mov
shr
lahf
xor
aam
sahf
sub
mov
xor
in
fwait
test
push
mov
or
jns
push
imul
rcr
(bad)
mov
adc
and
imul
dec
clc
out
mov
in
into
jbe
pop
xor
push
push
and
test
dec
mov
jl
paddw
cmp
push
jmp
sub
sub
inc
in
add
in
inc
mov
xchg
mov
inc
push
nop
sub
xor
pusha
mov
mov
push
fdivr
dec
scas
add
fsubr
je
sahf
push
xor
sub
pop
loopne
cmps
xor
add
imul
jl
add
mov
imul
retf
and
push
scas
fisttp
jecxz
jg
add
add
push
lods
add
aam
popf
cwde
sti
jl
ret
inc
inc
nop
sbb
inc
sub
jo
neg
mov
enter
in
sub
push
mov
sbb
and
pop
sbb
and
pop
lock
push
cmp
loop
mov
dec
and
push
in
lock
scas
jge
dec
or
push
ficomp
jp
pop
pushf
cmp
in
mov
inc
rcr
inc
adc
mov
pushf
ds
jae
arpl
push
ja
dec
xor
cmp
mov
dec
fwait
call
or
push
cmp
push
push
mov
lock
fwait
xchg
cmp
int
ror
mov
mov
iret
cli
retf
cmp
push
lock
inc
leave
dec
fidivr
add
push
xchg
ins
add
popa
outs
cmp
loope
leave
and
mov
adc
mov
xlat
sbb
fisubr
pop
loope
out
mov
jno
push
gs
cmp
(bad)
or
retf
xchg
into
mov
jecxz
push
cwde
mov
out
mov
push
push
shr
mov
test
adc
push
push
hlt
sub
(bad)
in
fistp
xchg
or
dec
repnz
jecxz
xor
lods
mov
in
adc
mov
leave
std
leave
sar
call
rcr
inc
dec
mov
leave
test
dec
addr16
adc
fisubr
mov
inc
shl
jge
jmp
jne
sub
pop
jb
xchg
ja
mov
xor
cmps
sbb
retf
pop
cwde
inc
pop
jl
call
mov
push
test
sub
mov
test
in
xchg
or
xlat
mov
imul
mov
icebp
data16
(bad)
xchg
jecxz
fist
cmp
repnz
xlat
mov
mov
pop
imul
jmp
mov
push
ja
ja
push
lahf
cmc
stos
pushf
les
sub
(bad)
push
adc
imul
push
sbb
cmps
push
sbb
xchg
ror
sub
inc
push
movs
jne
in
sbb
and
lds
in
add
add
sbb
xor
mov
in
mov
sbb
mov
and
jo
imul
add
push
arpl
sti
outs
stos
sti
jmp
scas
lahf
repnz
jecxz
mov
add
cmp
repz
in
dec
inc
push
inc
push
jb
popf
sbb
mov
mov
js
(bad)
and
cwde
jns
jle
scas
cli
call
sub
out
arpl
push
call
add
sbb
xchg
clc
mov
push
cwde
mov
mov
xor
stos
add
fwait
add
sub
test
enter
dec
fcomp
scas
iret
lods
xchg
mov
mov
pusha
and
cmc
or
push
add
and
js
jecxz
adc
push
out
push
xchg
or
into
in
push
cmp
or
mov
xor
aam
cmp
mov
sbb
imul
fmul
es
ret
xor
cmp
iretw
and
sub
aaa
push
rcr
leave
mov
inc
lds
shl
mov
mov
push
iret
mov
shl
xor
inc
push
sbb
mov
pop
dec
in
lds
and
add
xchg
fsub
sar
int
outs
retf
je
mov
mov
push
cld
iret
jae
(bad)
pop
and
sbb
xchg
jae
ret
ss
jle
cmps
fnstsw
(bad)
pop
aad
inc
fld
or
adc
xor
lds
lods
js
push
dec
gs
hlt
shl
adc
fdiv
sti
push
inc
lods
ds
sbb
stos
mov
cdq
inc
pop
lods
jno
xor
fnsave
and
sbb
pop
push
mov
jae
mov
inc
xor
repnz
jo
adc
add
cmp
lahf
add
xor
pop
outs
retf
dec
ret
xchg
retf
clc
jo
cdq
es
cmp
lahf
daa
pop
xchg
adc
popf
push
loope
mov
retf
or
mov
or
fidiv
pop
test
cld
pop
sub
enter
and
sti
in
mov
shl
jmp
popa
add
lods
outs
jge
in
gs
add
sub
cwde
imul
outs
add
xchg
mov
adc
loop
movs
and
(bad)
inc
mov
pop
mov
movs
(bad)
sub
jo
pop
leave
das
mov
loop
popa
jns
pop
jne
in
shl
jnp
mov
xchg
sub
sub
repz
inc
imul
jl
jge
fs
jns
and
inc
inc
mov
mov
lds
push
adc
pop
push
repnz
in
cld
sbb
xor
ins
fucomip
(bad)
pop
das
aad
rcr
fld
inc
inc
out
pop
cmp
sub
xchg
icebp
in
sbb
stc
jge
jge
call
cmps
cmp
dec
xchg
aam
iret
imul
cmp
jmp
xor
cdq
repz
pop
xor
paddsw
test
pop
lahf
dec
xchg
sbb
data16
adc
aaa
inc
sub
sbb
jbe
jno
sbb
dec
push
inc
(bad)
adc
inc
xor
call
mov
imul
add
and
ins
aad
dec
shl
lock
mov
fsincos
push
outs
movs
in
loop
ss
movs
andnps
enter
lds
sbb
sbb
fs
movs
jle
and
mov
sahf
aad
jnp
movs
and
jmp
sahf
repz
cmps
xchg
jne
sub
pop
sub
dec
pop
and
fwait
les
xor
mov
xor
cli
jge
movs
xor
sbb
dec
fisubr
add
dec
out
out
and
mov
leave
sbb
cld
imul
out
ja
adc
xor
push
(bad)
xor
cmp
mov
push
das
les
push
in
mov
cmp
frstpm(287
mov
lar
stc
btr
fisubr
(bad)
push
inc
inc
and
adc
rol
cs
shl
bnd
push
test
push
pop
cmps
addr16
(bad)
push
int
fs
outs
test
pop
xor
movs
lds
ds
jns
jmp
pop
inc
xor
(bad)
hlt
loope
sub
popa
sub
dec
ror
shl
mov
sbb
sbb
sub
dec
ret
mov
(bad)
hlt
ins
xchg
mov
lahf
adc
xor
dec
popa
enter
adc
add
sar
xor
or
jp
add
mov
mov
or
pop
push
pop
push
fiadd
jl
out
inc
xor
xchg
loope
xchg
inc
aaa
adc
cmps
add
mov
test
aas
sbb
mov
in
test
pop
mov
or
(bad)
and
mov
in
push
pop
jp
jle
dec
adc
xchg
jo
in
rcr
sbb
fdivr
cmps
adc
push
ds
jne
sbb
(bad)
das
cmp
out
rcl
push
cmps
pop
add
in
test
in
ror
lock
dec
cli
jbe
or
mov
cmps
fsubr
xchg
sbb
jnp
cld
imul
pop
aad
popf
mov
in
add
popa
inc
xchg
je
mov
loopne
pop
aas
movq
loop
pop
ret
icebp
jo
ins
sahf
and
es
mov
std
movs
push
(bad)
mov
cmp
xor
dec
sbb
pop
push
inc
dec
push
test
movs
dec
mov
xchg
mov
rol
lods
fistp
and
sub
je
test
clc
fs
out
iret
xchg
fbld
imul
pop
int
imul
inc
and
sub
(bad)
and
add
cmp
nop
mov
jg
xchg
add
sub
push
test
(bad)
out
loop
in
push
loopne
data16
xchg
xchg
dec
aad
dec
jnp
in
add
lahf
dec
mov
sbb
loop
cmp
leave
(bad)
jnp
mov
ins
mov
dec
mov
add
xor
and
stos
into
or
ret
movs
mov
icebp
dec
test
xchg
add
mov
sub
or
mov
fsub
push
ins
sbb
push
adc
enter
out
les
jns
xor
sbb
aad
dec
leave
push
fcmovnb
mov
mov
sar
jnp
test
stc
jmp
in
aam
push
test
push
in
mov
xchg
mov
outs
frstpm(287
jecxz
imul
addr16
cmp
rcl
push
cmp
jl
cs
ins
fidivr
repnz
or
call
inc
gs
jnp
inc
pop
sbb
adc
xor
mov
push
leave
retf
div
sub
dec
retf
sbb
sub
sbb
sub
xor
ins
lahf
loope
mov
push
mov
stc
push
aam
push
adc
das
int
sub
sub
test
jmp
fiadd
aaa
out
cmps
pop
push
test
mov
and
mov
adc
popa
jl
pop
sar
push
outs
mov
cs
fldcw
or
ret
jp
sbb
dec
add
xlat
(bad)
jmp
idiv
fdivr
lahf
sub
add
in
xor
dec
std
dec
jmp
xor
fwait
es
adc
push
inc
call
bt
repz
and
lods
fwait
xor
push
or
idiv
mov
inc
jnp
sbb
aad
dec
sbb
and
daa
js
mov
pop
inc
sub
clc
cli
sub
push
repz
loopne
jl
fadd
mov
test
or
jmp
sub
xchg
fs
add
push
xor
push
inc
js
bound
cmps
inc
addr16
cmp
sbb
jno
neg
jge
stos
mov
(bad)
mov
arpl
out
idiv
mov
dec
cmp
cmp
iret
and
or
fld1
mov
jmp
or
push
xlat
mov
inc
xchg
inc
and
push
xchg
cmp
leave
pop
pusha
cwde
push
dec
sub
ds
mov
mov
pop
cmp
frstor
mov
pop
jg
repnz
fcmovnbe
cmp
sub
ins
jp
sbb
jne
js
(bad)
jle
dec
sbb
jb
add
sbb
(bad)
inc
pop
mov
aad
push
mov
inc
gs
push
ja
push
mov
test
call
pop
aad
push
pop
outs
cwde
lds
mov
out
js
fisubr
add
mov
push
fist
aad
mov
cs
sub
jne
jge
scas
mov
cmp
(bad)
out
mov
cmp
imul
repnz
fisub
xchg
pop
sub
cmc
mov
(bad)
jl
lahf
sbb
jne
xchg
jnp
mov
arpl
sub
sbb
imul
sub
inc
cwde
popa
in
test
sbb
cmp
jp
pushf
jbe
outs
out
in
lods
mov
adc
lods
sbb
mov
daa
jne
xchg
cwde
(bad)
xchg
test
lahf
xor
cmps
outs
test
cdq
mov
cmp
pop
jp
push
cmps
jns
jmp
ret
rol
lahf
sbb
sbb
or
loopne
jb
sbb
sahf
int3
iret
or
sbb
repnz
rcl
shl
sbb
mov
scas
add
inc
sbb
pop
sbb
call
push
jns
cmps
stos
xchg
test
xchg
push
push
and
jmp
dec
inc
xor
push
xchg
cmp
data16
ret
ins
out
aam
xchg
mov
push
ins
rcl
pusha
mov
(bad)
fisubr
call
repz
xchg
inc
leave
in
aam
aam
sbb
jge
arpl
cli
and
lds
inc
jo
aam
jl
cmps
aaa
call
ret
jecxz
std
xor
call
lea
ins
mov
xchg
loopne
test
clc
xor
addr16
neg
pusha
add
push
or
inc
jne
dec
ret
cli
les
xor
add
fwait
sbb
sub
mov
imul
shr
jo
or
icebp
clc
xchg
sbb
fucom
lds
test
dec
sti
int
xchg
out
or
pop
mov
(bad)
shl
sbb
push
mov
inc
cmps
aas
int
xchg
adc
scas
push
xor
loop
call
sbb
fcom
push
call
push
cdq
mov
shl
sbb
mov
loope
add
jecxz
dec
add
sub
pop
add
repnz
mov
inc
pop
loopne
adc
stos
pop
mov
mov
add
test
pop
cli
je
fdiv
loop
scas
sbb
adc
adc
jmp
mov
in
cmp
adc
mov
xor
inc
push
ins
mov
jns
fmul
cwde
xchg
add
push
mov
and
(bad)
mov
es
in
(bad)
mov
cmp
add
pop
fstp
and
test
sbb
mov
or
jbe
stos
jge
cli
aam
lods
iret
test
push
dec
mov
mov
aaa
push
std
ret
sub
cmps
daa
sub
shr
mov
sbb
jns
jmp
dec
jno
pop
leave
or
mov
sahf
(bad)
cmp
shr
test
xor
test
jmp
mul
retf
push
mov
adc
and
out
mov
mov
icebp
adc
cmp
ds
int
jmp
(bad)
iret
es
pop
mov
pop
ficomp
clc
jle
outs
xor
add
push
xchg
xor
movs
ds
popf
nop
addr16
out
or
inc
push
shr
pop
rol
nop
inc
pop
xchg
jmp
mov
das
gs
out
sub
push
xor
mov
mov
jb
pop
icebp
cmc
add
sbb
push
popf
cmp
mov
test
cmp
lea
xchg
xor
outs
pop
mov
daa
jmp
xor
sub
sar
sbb
mov
and
sub
(bad)
cdq
arpl
sub
js
pop
dec
aas
mov
sbb
je
lods
test
sbb
icebp
xchg
adc
push
pop
dec
idiv
and
call
ss
cmp
ins
ja
mov
push
cdq
in
popa
je
ffreep
adc
push
push
movs
jle
pop
cmp
fwait
lods
dec
mov
icebp
xor
cli
mov
mov
pop
push
scas
dec
xlat
xchg
jle
stc
mov
jnp
sbb
dec
shl
aas
push
sbb
mov
hlt
jmp
dec
call
lock
jo
out
jmp
cld
sub
and
or
mov
cmp
imul
push
test
mov
pop
mov
retf
cmps
test
in
mov
sti
sar
jae
fst
pop
mov
add
cmp
pop
mov
outs
mov
stos
inc
mov
hlt
adc
fadd
fcom
push
into
les
(bad)
rcl
stc
std
xlat
push
bound
jp
dec
movs
xchg
pop
xor
test
add
popf
mov
pop
rcr
xor
mov
sbb
sahf
or
in
in
mov
adc
or
je
push
into
pop
mov
mov
sub
pop
add
and
adc
inc
cmp
xor
mov
pop
pop
add
mov
cli
xlat
test
jmp
adc
xor
stc
mov
xchg
out
jnp
adc
add
rcl
mov
data16
bound
enter
out
or
stos
mov
fcom
stos
je
dec
xchg
test
mov
dec
enter
ja
rcr
adc
jp
jle
mov
push
out
inc
int
repnz
or
fstp
push
ret
pushf
popf
push
aam
push
enter
add
inc
xchg
dec
ds
push
test
out
pop
cmp
mov
outs
popa
push
loop
dec
dec
mov
mov
jmp
inc
stos
cli
sbb
mov
pop
xchg
iret
(bad)
mov
rcl
dec
mov
mov
les
mov
mov
cmp
and
push
jo
aaa
pop
out
dec
pop
addr16
cmp
cmps
in
popa
ins
or
xchg
mov
push
arpl
push
adc
push
lods
retf
mov
imul
mov
cmp
sub
mov
rcl
inc
jmp
shl
sar
mov
das
(bad)
sbb
cmp
shl
push
mov
pop
push
add
out
xchg
push
xchg
cmps
hlt
lock
fiadd
sub
sbb
call
pop
js
mov
xchg
ret
imul
dec
push
stc
call
mov
push
adc
sub
test
(bad)
mov
and
pop
sbb
dec
mov
adc
mov
aas
inc
jmp
sar
stos
scas
js
(bad)
rcl
mov
xor
(bad)
icebp
xchg
gs
xor
mov
or
mov
inc
sbb
mov
leave
mov
pop
fidivr
adc
inc
(bad)
arpl
movs
fneni(8087
dec
xchg
dec
or
inc
push
cmp
push
adc
cwde
test
xor
mov
xchg
sub
push
xchg
scas
xchg
xor
mov
push
sahf
add
add
pop
push
call
out
jno
ror
cmc
lea
inc
popa
add
add
rcl
pop
or
jmp
or
inc
into
xchg
sar
sbb
jo
sbb
out
test
cmp
pop
in
or
in
cdq
test
ins
adc
mov
lahf
cmps
or
xchg
add
out
ret
ja
mov
pop
repz
rcl
ins
sub
popa
jle
test
les
movs
cmp
lock
pushf
cli
repnz
loopne
sbb
mov
push
ins
sub
push
pushf
movs
inc
enter
int3
push
cld
xchg
popa
cmp
dec
aam
or
je
icebp
ret
inc
xchg
cmp
push
mov
jnp
lods
push
in
sahf
je
jl
jbe
jnp
cs
mov
sub
or
pop
sub
inc
sub
jmp
(bad)
imul
adc
leave
and
jnp
xor
inc
rol
fwait
mov
jns
jns
sbb
aaa
dec
ror
mov
das
mov
(bad)
in
xlat
cmp
add
jno
(bad)
mov
out
inc
jmp
cmp
pusha
std
add
sti
pop
cmp
add
cli
sub
clc
sub
xor
call
(bad)
adc
mov
rcl
shl
repnz
fwait
pop
popa
inc
cli
push
or
mov
dec
dec
add
jnp
(bad)
sbb
xchg
and
adc
aam
mov
repnz
fild
ins
add
stos
mov
ds
dec
lock
xchg
les
test
dec
ss
add
cmp
xchg
mov
xlat
or
cmp
mov
fdiv
js
pushf
jp
retf
xchg
sub
dec
add
mov
fsubr
repnz
rol
mov
cmp
adc
xor
call
mov
xchg
loop
push
pop
pop
or
in
jecxz
jp
pop
add
adc
sub
test
jns
mov
test
aad
dec
sbb
fs
pushf
cs
enter
mov
int
int3
fdiv
xor
pop
imul
test
mov
mov
leave
xor
or
adc
ret
adc
hlt
call
dec
rcl
cdq
xchg
mov
mov
add
gs
enter
cld
sbb
pop
mov
int
lods
mov
daa
xor
loope
(bad)
scas
mov
and
iret
movs
out
ss
aam
or
mov
push
adc
push
mov
mov
pop
std
or
idiv
loope
xchg
in
test
or
mov
ds
and
jmp
(bad)
cmc
jmp
add
loope
shl
add
sbb
or
adc
xchg
push
shl
jbe
in
xchg
cmp
in
or
mov
mov
adc
cs
xlat
pop
shl
iret
fwait
test
sbb
and
cmpxchg
loopne
jmp
push
pop
loopne
push
aam
iret
push
rcl
out
ins
clc
dec
lea
retf
les
rcr
inc
or
sbb
mov
sbb
add
icebp
fadd
mov
jp
sbb
adc
ret
mov
sti
sbb
outs
shr
pop
ins
out
fwait
jmp
retf
mov
clc
std
inc
fdivr
push
repnz
add
push
les
cmp
cdq
mov
jae
test
pushf
mov
shr
push
movs
mov
call
test
mov
add
rcr
mov
psrlq
adc
and
int3
sub
dec
mov
retf
xchg
xchg
call
pop
push
ffreep
clc
repnz
das
fdivr
mov
clc
mov
push
loopne
mov
rcr
dec
mul
sub
jne
arpl
in
ffree
add
xor
scas
cmp
(bad)
xor
fadd
mov
inc
xchg
sbb
popf
sbb
aam
repnz
mov
dec
pop
loopne
arpl
in
sub
shr
add
sub
repz
jmp
push
jne
ficomp
jbe
aaa
das
add
push
pop
sbb
jl
push
iret
sub
mov
cmc
lea
mov
jnp
cli
cmc
bound
mov
not
jmp
push
mov
test
lahf
mov
shl
or
cmp
push
stos
push
push
jle
and
adc
and
push
and
dec
add
js
fsubr
aas
outs
push
and
push
mov
ret
push
mov
in
pop
in
frstor
aam
fist
lahf
test
fcom
stos
adc
(bad)
arpl
push
movs
in
ret
fisttp
jbe
jecxz
jp
xchg
lods
mov
cli
dec
enter
add
adc
setb
mov
mov
cdq
push
lahf
and
xchg
mov
test
or
pop
xchg
aam
adc
sub
arpl
mov
mov
xchg
ins
in
mov
mov
dec
xor
dec
adc
fisub
xchg
sub
pop
cdq
jb
mov
out
mov
add
ror
aad
aaa
(bad)
inc
shr
ja
(bad)
mov
xchg
test
cmps
and
dec
or
xchg
fwait
sub
pop
fbld
sub
das
iret
pop
call
pop
mov
and
scas
ds
mov
sub
retf
sbb
pop
inc
out
sbb
cld
mov
pushf
call
jbe
push
test
std
sub
add
xor
mov
stc
jb
lds
and
mov
inc
shl
clc
jp
popf
inc
jo
cmps
int
and
xchg
scas
adc
xor
dec
dec
sub
jo
jnp
scas
inc
pop
add
fwait
cwde
(bad)
loop
outs
(bad)
jp
aas
rcl
hlt
sub
mov
movups
lods
js
cmps
cmp
xor
in
shr
jns
sub
test
(bad)
sub
dec
adc
pop
out
sub
xor
mov
cmp
imul
mov
sbb
jb
xor
out
inc
dec
fwait
dec
aad
sbb
hlt
push
push
sub
jbe
mov
ret
and
dec
inc
mov
mov
es
es
xchg
mov
movs
shl
stos
xchg
retf
dec
jns
addr16
lea
fcmovbe
mov
and
fidivr
icebp
mov
lods
cmp
xor
gs
outs
add
push
pop
xchg
popa
in
test
mov
in
data16
mov
cmp
icebp
xor
inc
scas
jle
pop
loope
(bad)
(bad)
aas
test
or
and
imul
mov
jno
xchg
adc
adc
add
cdq
pop
sub
retf
sbb
sub
jo
inc
out
pop
int
in
pop
mov
or
inc
xchg
ret
mov
arpl
movs
push
imul
sub
and
in
pushf
and
pop
fiadd
pushw
push
or
push
daa
cmp
lds
add
add
rcr
in
pop
sti
arpl
jecxz
enter
outs
retf
mov
xor
iret
sar
push
xor
pop
mov
test
cld
pop
or
and
lahf
sub
inc
cmps
inc
loopne
mov
xor
aam
cdq
cmp
in
push
push
mov
(bad)
icebp
cld
aas
clc
and
retf
aaa
pop
push
leave
mov
pop
mov
push
test
pop
jno
or
(bad)
xchg
cmp
or
sub
mov
mov
mov
jb
xor
jmp
cs
adc
sahf
cmps
or
retf
sbb
mov
std
xor
outs
jbe
push
mov
mov
or
test
mov
leave
and
add
sbb
stc
mov
pop
adc
fld
test
xor
cwde
mov
es
ret
mov
jnp
dec
pushf
clc
cli
stos
fisttp
push
retf
std
mov
adc
in
pop
imul
mov
into
out
call
les
dec
imul
inc
lahf
into
test
fs
(bad)
cmc
retf
mov
mov
jns
repnz
xchg
cs
add
xchg
popf
pushf
mov
adc
pop
inc
jo
fbstp
dec
pop
scas
pop
fnsave
test
pop
jo
jl
popa
pop
(bad)
outs
pop
ror
and
test
lea
aaa
push
inc
jmp
pop
push
div
and
movaps
sbb
xchg
jecxz
sub
jae
push
cdq
mov
jno
movs
rcl
push
jno
mov
sbb
xor
loope
sub
or
xor
test
rol
lods
cmc
jns
ror
pop
inc
mov
sub
ret
xchg
mov
dec
arpl
adc
int3
jne
jle
cmp
loop
lods
mov
mov
test
movs
loop
jo
cld
pop
test
clc
arpl
or
cdq
ret
push
sub
cmc
popa
nop
sbb
adc
add
call
lea
sbb
push
out
fnsave
pminsw
jno
sub
out
out
jge
jae
pusha
dec
or
rcr
stos
dec
jno
cs
jne
push
adc
jp
pop
loope
jge
std
push
push
out
cmp
fld
into
and
test
xor
and
mov
adc
(bad)
rcl
popa
mov
adc
data16
or
cmps
sbb
fs
(bad)
xchg
outs
and
cmp
pop
jmp
cmp
fnstenv
adc
xchg
push
adc
add
sahf
imul
enter
pop
push
leave
ficomp
sbb
sar
clc
add
shl
sahf
adc
adc
sar
sub
cmp
scas
pop
scas
mov
jmp
jmp
sahf
cmps
xor
mov
xchg
leave
sub
xlat
dec
push
mov
inc
test
aaa
shl
les
pop
or
and
or
sub
sbb
retf
movs
pop
add
sub
sbb
fadd
test
xor
push
mov
and
adc
xchg
cmp
sbb
clc
call
pushf
jmp
inc
pop
xchg
lds
xchg
jge
pop
enter
sub
aad
pop
xchg
fisubr
mov
ins
std
inc
outs
cmp
cs
cli
mov
add
bound
mov
add
ret
or
movs
fmul
aas
ret
adc
xlat
xor
jmp
rcr
bound
sar
es
cli
jle
and
xlat
pop
gs
or
enter
inc
xor
dec
pop
lahf
repnz
add
fs
mov
lods
iret
inc
push
and
pusha
pusha
mov
cmps
mov
out
or
sub
ins
or
cmp
lea
push
and
test
mov
outs
add
or
push
or
xchg
mov
add
mov
in
imul
sahf
mov
inc
ret
cmps
fdiv
fst
jmp
jmp
in
popa
imul
int3
dec
(bad)
cmc
ins
or
and
mov
(bad)
sub
sub
mov
data16
and
popa
cmp
outs
int3
jno
(bad)
mov
dec
adc
cmovge
fisubr
pop
div
out
add
xchg
addr16
jmp
rcl
rol
mov
mov
outs
jp
and
inc
je
dec
cmp
retf
mov
add
pop
loopne
pop
jmp
(bad)
aam
pop
pop
mov
call
repnz
enter
cmps
dec
push
data16
mov
mov
xchg
mov
xchg
pop
fcmovb
mov
out
pop
adc
lods
gs
dec
inc
jbe
aas
jo
jge
retf
stc
outs
imul
sbb
and
sbb
lahf
fcom
les
xchg
cmps
icebp
xchg
push
sbb
mov
in
inc
sbb
sbb
(bad)
fld
test
mov
addr16
pop
dec
(bad)
mov
xor
div
xor
ins
fiadd
cli
(bad)
cli
mov
jo
iret
mov
cmp
mov
adc
xchg
and
cmp
dec
mov
loopne
mov
ret
ret
arpl
jb
mov
lds
cmp
test
inc
add
ds
ins
aam
sbb
lds
(bad)
mov
sbb
xchg
cmp
jl
pop
and
jns
repnz
jp
xchg
mov
jbe
pop
inc
adc
imul
(bad)
(bad)
push
popf
xor
popf
push
pop
(bad)
popf
nop
test
test
and
inc
jmp
mov
or
retf
cmps
inc
fadd
(bad)
sub
sub
mov
repnz
fisttp
adc
popf
jae
inc
(bad)
in
jnp
mov
sub
cld
movs
push
add
pop
int
push
mov
and
mov
mov
rcr
pusha
or
jl
nop
pop
xchg
sub
lea
call
jp
and
adc
leave
sub
dec
loope
or
jno
popa
int
aam
sub
cli
jle
mov
xchg
mov
ja
pop
ss
push
cli
mov
pop
shr
inc
ror
cmps
in
out
cmp
sbb
fild
mov
mov
or
in
fld
ins
adc
sbb
jmp
shr
mov
mov
test
xchg
(bad)
aam
mov
xchg
nop
sar
arpl
xor
dec
jecxz
stc
imul
fisttp
jle
sub
dec
cdq
dec
(bad)
pop
or
fidivr
into
movs
or
cmc
out
inc
fisub
xor
jno
dec
sub
out
dec
or
in
add
push
bound
enter
lds
sbb
idiv
test
data16
out
mov
aaa
les
mov
xchg
mul
pop
sub
ss
aaa
push
fld
je
dec
push
outs
jl
sub
xor
mov
enter
out
dec
lea
mov
clc
mov
jmp
jmp
popf
pushf
jecxz
das
jge
fisttp
and
imul
iret
rcr
pop
stos
call
popa
enter
jle
push
stos
add
movs
xchg
sub
pop
dec
ins
jae
push
test
dec
ror
and
es
inc
and
aaa
jecxz
outs
loopne
cmp
fld
mov
fcom
fisttp
retf
outs
(bad)
adc
popa
outs
and
stos
jnp
xchg
push
sbb
jno
fcmovnu
xor
cmps
mov
jle
call
push
not
out
add
xchg
das
xor
in
mov
sub
sub
sbb
dec
mov
pusha
sbb
xchg
inc
mov
enter
dec
mov
pop
pop
sbb
lock
outs
jle
jmp
xchg
dec
fistp
or
dec
enter
inc
xlat
fsubr
mov
xchg
ins
and
cmp
ficomp
daa
mov
pop
call
sbb
push
movs
adc
pop
(bad)
fcomip
jp
pushf
bound
enter
adc
dec
sub
cli
cmp
add
stc
(bad)
retf
or
out
in
pusha
(bad)
aaa
inc
gs
div
(bad)
sbb
jmp
(bad)
int3
out
cmps
push
mov
popa
call
shl
sbb
sub
outs
adc
je
add
cmp
(bad)
push
out
mov
lea
push
mov
ror
dec
mov
mov
ss
shl
inc
inc
adc
inc
mov
jl
jmp
mov
pop
or
(bad)
jo
(bad)
outs
jg
icebp
bound
leave
loopne
loopne
test
jne
out
int
xchg
or
mov
xor
movs
or
jno
push
fisttp
out
into
pop
cmp
xchg
mov
ret
loopne
xchg
ret
dec
mov
pop
mov
into
add
fld
fstp
dec
int
cwde
cmp
sub
dec
cmp
rcr
ret
pop
lds
rol
aam
lods
inc
inc
ins
jae
ficom
cs
add
pop
out
nop
cmp
or
test
cs
sbb
pop
mov
fwait
sar
movs
xchg
mov
jns
arpl
cs
fldz
mov
mov
sar
sbb
pop
push
jo
data16
dec
js
mov
and
and
pop
jecxz
cmp
aam
in
aaa
not
retf
test
loope
jge
lock
add
sub
fcomp
and
inc
sbb
adc
maxps
fistp
mov
pop
push
(bad)
adc
add
sub
push
and
lock
xchg
hlt
push
mov
js
jmp
adc
outs
sbb
mov
aad
add
repz
mov
fild
imul
xlat
sbb
mov
ins
lahf
xchg
outs
cmps
jno
ins
(bad)
in
cdq
leave
int3
(bad)
sbb
inc
xchg
popf
inc
dec
rcl
sub
and
push
fisubr
xor
daa
std
lahf
xor
inc
imul
sbb
inc
ins
lods
data16
add
mov
jge
or
movaps
jg
neg
jl
sub
push
fwait
or
inc
or
shl
(bad)
not
pop
cmps
popa
xchg
mov
iret
push
arpl
sar
jns
mov
push
xor
cdq
sbb
push
cmp
sub
mov
inc
(bad)
iret
mov
shl
mov
adc
test
sbb
test
push
cmp
ret
push
shl
xor
jbe
sbb
pop
into
and
(bad)
int3
mov
ret
adc
ss
in
adc
dec
int3
adc
sbb
inc
jo
outs
fwait
enter
cmp
add
adc
pop
and
(bad)
and
add
lods
xor
mov
xchg
and
inc
out
dec
jg
lea
int
sub
aad
outs
push
push
pop
pop
or
dec
cmp
jmp
sbb
add
movs
aas
mov
fadd
aaa
jb
push
and
fdivp
test
push
fsubp
scas
inc
(bad)
mov
lea
es
test
loopne
leave
push
addr16
retf
sbb
test
dec
rol
inc
into
or
lods
cs
clc
xchg
inc
jbe
ja
cmp
out
shl
mov
lock
bound
cmp
xor
ror
mov
mov
adc
jmp
push
xchg
and
sbb
in
pushf
dec
cmp
out
repz
lock
mov
fisttp
mov
or
std
sub
aad
push
adc
pop
stos
cmp
cmp
cs
rol
cmp
mov
pop
cmc
jbe
xor
and
icebp
or
adc
dec
gs
(bad)
fcmovu
mov
das
sub
mov
cli
pop
stc
jbe
pop
jns
in
mov
outs
jmp
xchg
inc
or
data16
or
dec
sub
or
fucom
pop
ficom
pushf
imul
clc
imul
test
lods
sar
adc
retf
mov
cmp
push
cmps
or
aam
sub
out
rcr
cmp
iret
xor
mov
push
js
stos
ja
cmc
sahf
add
xchg
vaddss
inc
cmps
scas
sahf
loop
cdq
xchg
fld
repnz
xchg
dec
mov
adc
(bad)
mov
inc
lods
dec
mov
push
cmp
mov
imul
mov
pop
pop
out
movs
or
fisub
and
pop
push
mov
fisubr
mov
push
ret
ret
push
mov
dec
pushf
adc
or
sub
mov
xchg
push
mov
(bad)
sub
dec
sub
in
shl
stc
nop
(bad)
mov
add
ror
lahf
push
fist
mov
sahf
jecxz
hlt
aad
rcr
arpl
push
xchg
adc
jb
mov
sbb
jmp
idiv
repnz
pop
sub
(bad)
movs
xor
add
aaa
mov
ins
lea
or
inc
call
fisubr
outs
xchg
pushf
dec
call
out
sub
jecxz
jge
aaa
adc
(bad)
loopne
lds
jnp
retf
mov
add
add
jb
ret
push
retf
sub
dec
add
push
add
mov
jno
loopne
push
mov
loop
jo
lock
mov
sahf
sub
ins
xchg
jmp
stc
mov
(bad)
repnz
dec
mov
(bad)
fwait
mov
add
mov
shl
stos
shl
mov
imul
push
mov
push
sahf
xchg
xchg
pop
and
add
leave
add
stos
fsubr
and
pop
sbb
mov
add
lds
adc
imul
mov
fdiv
or
mov
cld
dec
cmp
mov
lock
mov
imul
cli
xchg
pop
es
sar
cmp
mov
scas
std
fmul
cmc
test
data16
and
push
rcpps
mov
mov
rep
jg
pop
jnp
pop
movs
sbb
popa
fimul
sub
test
test
lahf
(bad)
mov
adc
cmps
into
popa
in
ds
cmp
das
les
dec
cmp
push
je
mov
(bad)
outs
push
addr16
movs
and
xchg
dec
les
ds
xchg
(bad)
loope
idiv
test
pop
mov
sbb
sub
sbb
sbb
cmp
xchg
mov
jae
pop
mov
dec
fdiv
pop
push
xlat
push
xchg
mov
shr
mov
mov
xlat
xchg
mov
call
dec
fldenv
mov
mov
std
(bad)
sbb
repz
(bad)
lahf
(bad)
clc
push
sbb
xor
push
clc
sub
test
xchg
adc
loopne
fsubr
sbb
cs
popa
inc
lds
test
mov
lods
rcr
lahf
or
add
inc
dec
mov
mov
enter
fcomp
mov
xor
(bad)
rol
xor
mov
mov
(bad)
mov
dec
int
mov
jbe
jge
in
test
jnp
icebp
stos
jmp
loopne
out
dec
cmp
or
xchg
sbb
inc
rol
out
sub
jmp
stc
lahf
into
not
xchg
inc
jle
fisttp
or
mov
loop
push
leave
mov
sbb
iret
xchg
mov
inc
mul
repz
cmp
daa
mov
mov
imul
ja
cmps
mov
mov
xchg
cmp
fs
sar
xlat
outs
stos
iret
and
jmp
retf
call
jmp
sbb
cmp
retf
or
cmc
mov
jmp
hlt
cdq
and
mov
or
mov
imul
mov
fwait
pusha
cmp
jae
stos
aad
sub
in
fdiv
vminpd
mov
aad
ret
pop
fiadd
add
mov
push
push
ins
in
or
(bad)
mov
test
inc
imul
push
jne
add
or
arpl
fwait
and
dec
jge
call
fucomip
pop
cmp
mov
loopne
pop
shl
bound
mov
inc
cmp
mov
ret
inc
add
leave
jne
scas
mov
shl
stos
daa
call
xlat
cmps
xchg
lods
fisubr
mov
mov
adc
lods
pop
les
int3
adc
cmp
push
loopne
or
push
inc
mov
inc
or
and
cmp
sbb
mov
mov
adc
out
sar
push
mov
rcr
mov
jae
imul
jno
ret
dec
ss
lahf
sbb
ins
ficom
jl
dec
pop
cmp
setae
pushf
mov
cmp
and
inc
adc
or
ret
shl
cmp
adc
adc
es
stos
adc
sar
or
add
in
enter
mov
mov
push
clc
sbb
leave
call
xchg
dec
xor
jo
xchg
mov
cmp
push
push
(bad)
out
pop
(bad)
sbb
fmul
jge
shl
cmps
iret
cli
dec
lahf
sub
arpl
test
xchg
xchg
enter
xor
xchg
fld
mov
retf
sbb
(bad)
stc
or
dec
pushf
aaa
loope
xor
jmp
jmp
xchg
cmc
adc
inc
mov
sbb
sahf
sar
push
mov
mov
inc
lea
cld
fdiv
jne
aaa
mov
add
sbb
jmp
nop
frstor
mov
cs
mov
hlt
lods
lahf
jcxz
iret
mov
and
pop
mov
lahf
cmp
push
(bad)
and
aaa
or
in
test
div
pop
ror
push
pop
mov
xor
mov
in
cmc
sbb
vdivps
dec
push
repz
lods
shl
enter
repnz
loope
les
test
loope
outs
fstp
mov
add
pop
int3
xor
cmps
xor
and
nop
cmps
fs
sbb
mov
cld
mov
xor
and
popf
(bad)
jecxz
adc
cmp
or
dec
add
stc
jle
div
iret
stc
fsubr
xchg
js
cmps
cmps
push
mov
ficom
xor
and
in
mov
mov
je
sub
pop
int3
pusha
js
xchg
mov
fcompp
cmp
outs
test
adc
imul
sub
out
arpl
rcr
je
or
in
jne
adc
jmp
(bad)
fistp
out
add
jmp
sbb
xchg
push
ret
aam
icebp
push
shl
jbe
cs
(bad)
sub
fs
and
cdq
add
les
ret
pop
lea
retf
jecxz
xor
pop
test
jl
dec
xchg
jns
cs
pop
push
pushf
sub
mov
fstp
ret
sub
cmp
popf
mov
cmp
ins
xor
mov
mov
aas
sub
daa
dec
movs
lahf
xchg
iret
adc
sbb
call
outs
xchg
je
neg
sub
jmp
rcr
in
dec
mov
cmp
inc
mov
push
ret
out
dec
xchg
mov
fisttp
push
popa
mov
sbb
stos
je
xchg
into
pop
int3
or
int
add
movs
arpl
data16
je
sbb
sti
(bad)
mov
jecxz
pusha
fadd
cwde
mov
iret
or
sbb
aad
enter
ins
cmp
jnp
repz
adc
icebp
dec
(bad)
cli
out
imul
cmps
mov
add
mov
loope
cmp
mov
and
shr
jp
cwde
xchg
loopne
in
mov
arpl
test
arpl
fwait
movs
mov
loop
jg
in
or
sbb
jne
and
dec
cmp
or
mov
pop
std
neg
std
shl
sbb
push
into
ja
call
and
cwde
mov
jecxz
xor
push
pop
sbb
out
test
mov
cli
push
inc
jge
dec
sub
retf
gs
push
rol
sar
sub
sbb
sub
xchg
push
nop
mov
(bad)
outs
in
adc
jmp
hlt
in
xor
or
aaa
add
adc
imul
mov
(bad)
sub
cmps
add
adc
in
xor
jecxz
or
aad
and
mov
push
push
dec
jmp
and
sub
mov
xor
js
jne
xor
shl
mov
aam
sar
mov
out
test
rol
pop
fcom
adc
jbe
mov
dec
fwait
pop
(bad)
adc
inc
pop
retf
mov
(bad)
call
scas
test
lock
pop
cmps
inc
fndisi(8087
sub
into
xor
call
xlat
(bad)
adc
jne
inc
xchg
scas
(bad)
retf
fst
inc
test
mov
push
in
sbb
adc
mov
cli
repz
mov
or
ret
(bad)
pop
push
sub
or
dec
fisttp
ror
sub
pop
push
sub
push
sbb
push
daa
mov
mov
shl
sbb
mov
add
jne
cmps
icebp
(bad)
add
fmul
icebp
movs
or
mov
jo
adc
add
popf
cdq
mov
add
clc
jle
inc
hlt
hlt
add
mov
icebp
shr
fild
adc
jle
div
ins
adc
push
js
ret
neg
(bad)
mov
xor
or
aaa
add
or
rcr
pop
dec
in
xlat
shl
imul
out
jl
sub
int3
fwait
stc
loopne
adc
nop
add
dec
cdq
out
cmps
in
sub
push
dec
xchg
pop
or
xchg
mov
out
rcl
fdiv
ds
push
jo
ins
cmp
dec
aaa
and
(bad)
mov
and
loop
aam
js
ror
sahf
pop
jge
es
mov
jo
jnp
push
clc
ins
loope
jmp
sub
add
or
stos
pop
inc
add
inc
loope
jno
and
test
inc
fwait
mov
pop
fistp
popf
push
mov
clc
adc
add
lahf
push
jo
adc
jmp
(bad)
and
xor
cli
lds
sub
mov
retf
mov
and
mov
ret
and
repz
adc
xchg
aaa
mov
pop
inc
mov
(bad)
jp
(bad)
add
fnsave
mov
jbe
setge
loope
jmp
movs
or
inc
scas
ret
into
xchg
adc
(bad)
shl
cwde
aas
jl
cmps
adc
add
shr
xchg
xchg
pop
mov
and
pop
push
adc
xor
jnp
push
jnp
sahf
dec
data16
pinsrw
xchg
inc
mov
ret
sbb
out
dec
aas
inc
cmps
mov
(bad)
inc
out
push
or
mov
jne
(bad)
xchg
loop
mov
and
mov
std
adc
test
movs
ret
stos
sub
jmp
popa
fidivr
sub
cli
and
push
jge
out
movs
sub
repnz
ja
inc
repnz
ret
jl
add
pop
mov
and
lds
adc
add
push
int3
or
push
ja
addr16
std
mov
or
test
add
ret
daa
pop
daa
and
loopne
jb
test
test
retf
adc
mov
xor
jo
mov
dec
add
mov
loop
jne
aad
push
mov
cmps
xchg
dec
retf
jge
addr16
rol
xor
add
lahf
xchg
jno
sub
xor
pop
mov
and
push
sub
fcmovu
enter
int3
push
pusha
jmp
mov
ja
push
arpl
repz
in
retf
mov
adc
test
sub
push
cmc
mov
in
push
jno
mov
dec
adc
test
xchg
test
test
popa
ja
and
and
push
xchg
sahf
and
pavgb
fist
xchg
addr16
in
jne
or
xchg
sbb
adc
or
xchg
(bad)
sub
add
aaa
ret
add
int
inc
xor
ins
je
cmc
jb
ror
scas
or
mov
fsubrp
mov
aad
sbb
mov
leave
leave
jmp
dec
pop
das
popa
xchg
test
cmp
rol
fs
cmp
in
xor
mov
out
in
in
push
(bad)
jb
(bad)
sti
adc
adc
stc
jmp
add
pop
push
dec
mov
loopne
int3
outs
(bad)
pop
dec
inc
out
mov
pop
mov
jns
mov
jmp
mov
or
je
repnz
sti
lods
or
fdivr
or
ret
mov
sbb
lea
test
sbb
add
jno
pop
pop
add
dec
jo
sub
nop
mov
test
ins
push
aaa
repnz
add
push
mov
jno
retf
test
jo
push
pop
xor
jecxz
push
les
movs
xor
xor
loop
ret
movs
stc
xchg
ja
dec
xchg
loopne
and
shr
les
and
mov
jmp
ss
xor
out
imul
loop
push
jae
stos
in
fmulp
xor
xchg
sahf
add
std
movs
in
inc
adc
cmp
dec
dec
mov
mov
jp
and
mov
mov
loope
xlat
xchg
icebp
test
iret
add
or
xchg
adc
sbb
sub
mov
cmp
dec
cli
clc
adc
jp
pusha
inc
call
sti
push
cmp
push
fidiv
sbb
mov
sub
xor
jmp
test
pop
inc
cmc
mov
dec
fiadd
js
add
imul
push
stos
xchg
adc
std
frstor
jp
jg
cmp
add
sahf
jecxz
sahf
or
loope
xor
and
sub
cmp
icebp
jg
imul
or
cmp
xor
xor
retf
cmps
jmp
or
cdq
imul
pushf
push
mov
test
xchg
add
inc
mov
xchg
imul
or
iret
lods
(bad)
pop
cs
lahf
gs
push
fwait
hlt
repz
pop
pop
test
pcmpgtd
mov
aam
add
out
not
xchg
daa
fisttp
fld
mov
sbb
hlt
pop
mov
data16
jbe
cs
cld
and
inc
xchg
lods
aaa
inc
add
loop
and
call
(bad)
adc
fidiv
sar
test
cmp
rcr
shl
cdq
mov
iret
outs
(bad)
iret
shr
in
std
movs
inc
xlat
sbb
mov
call
push
or
or
leave
adc
cmp
jo
dec
rcl
cmp
fsubr
pop
or
add
call
cmp
pop
mov
cwde
iret
xchg
add
xchg
repz
test
pusha
shl
jmp
inc
call
test
frstor
pop
jl
je
xchg
mov
(bad)
call
mov
lock
inc
nop
xlat
rcr
(bad)
call
rcr
adc
fneni(8087
add
(bad)
dec
sahf
cmp
fiadd
rcl
inc
and
or
popa
push
(bad)
rcr
sbb
jmp
or
sar
fld
fiadd
inc
push
push
pusha
mov
dec
adc
dec
fwait
pusha
jne
add
mov
adc
jle
test
fstp
in
or
popa
mov
dec
arpl
in
and
bound
mov
out
fld
movs
jno
sar
out
push
jl
xchg
outs
scas
and
fdivr
mov
test
sbb
inc
push
jge
cmp
xlat
and
push
push
push
sahf
arpl
std
mov
retf
aad
xchg
sar
pop
sti
dec
push
int3
lds
pop
fmulp
xor
ret
jbe
mov
dec
cwde
mov
les
push
imul
pop
icebp
and
(bad)
mov
jae
sub
std
pop
(bad)
inc
inc
sbb
jl
int3
push
sbb
push
and
or
cmc
icebp
inc
fimul
xchg
les
push
push
jnp
sbb
push
dec
dec
cmp
out
or
cld
jo
mov
shl
ret
add
retf
repz
(bad)
jge
gs
push
repnz
add
sar
mov
mov
push
lock
xchg
sar
aad
les
call
adc
cwde
paddsw
arpl
cmc
fmul
ds
pop
mov
pop
dec
and
sub
inc
mov
push
loope
jmp
mov
cmc
int3
jl
xor
mov
cmps
adc
sbb
out
adc
jge
pop
cmps
jmp
das
xchg
adc
addr16
pop
add
mov
ret
jp
xchg
sbb
fldenv
inc
fnstsw
lods
in
push
jmp
add
jo
test
cmp
mov
jno
pop
sti
fsub
sub
jae
adc
xchg
push
adc
mov
pop
mov
outs
dec
cmp
xchg
adc
adc
xchg
jecxz
mov
pop
pop
jnp
ret
sub
in
xchg
and
data16
add
xlat
jge
mov
cdq
test
push
sub
out
scas
adc
add
add
add
lock
add
in
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
data16
push
mov
push
mov
mov
mov
cmp
sete
and
movzx
add
pop
ret
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
add
add
sub
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
call
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
add
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
add
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
ret
jmp
data16
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
lea
mov
mov
mov
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
pop
pop
pop
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
or
add
add
mov
and
mov
ins
mov
push
add
aam
mov
aad
and
add
mov
xchg
cmp
xchg
xchg
and
add
into
cs
mov
mov
(bad)
mov
mov
and
pop
cli
and
out
cmp
add
add
sahf
and
call
mov
and
inc
inc
or
and
mov
pop
inc
retf
rol
test
dec
jmp
add
add
test
mov
and
clc
rcl
mov
sti
aas
add
add
imul
add
test
addr16
retf
nop
(bad)
lods
pop
add
add
jg
fist
ins
adc
outs
inc
and
fisttp
fld
cmp
(bad)
aad
out
add
movs
push
stos
fisttp
fild
add
add
out
nop
dec
(bad)
jge
out
stos
jmp
xchg
inc
pop
dec
jge
push
jmp
lods
dec
out
add
add
aam
cmove
popa
sub
addr16
mov
fwait
sub
add
sbb
add
add
or
and
pop
test
add
ds
add
and
ins
inc
fisttp
mov
sbb
test
jmp
and
xor
jno
and
test
rol
add
scas
add
ins
mov
add
sbb
fwait
inc
add
jmp
daa
inc
and
sub
fld
xor
das
and
jmp
mov
(bad)
cs
mov
mov
icebp
cli
ucomiss
sbb
sbb
in
mov
xor
arpl
add
aam
add
cmp
jmp
push
inc
mov
add
mov
cli
ds
add
mov
cmp
inc
inc
sbb
push
int3
jmp
mov
pusha
mov
cmp
je
mov
and
mov
stos
mov
add
mov
fmul
das
loop
add
mov
cmp
fisttp
bound
jmp
(bad)
nop
mov
sbb
ins
out
add
and
fs
cmp
inc
je
cmps
ins
fs
jp
sti
aam
sbb
(bad)
and
jl
add
repz
jmp
or
add
into
add
sub
call
and
int3
sub
sbb
inc
mov
add
add
inc
mov
add
jmp
mov
push
jp
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
call
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
inc
or
dec
out
ss
and
and
cmps
pusha
(bad)
movs
cs
xor
xor
inc
add
clc
sub
add
mov
and
add
call
or
add
inc
add
adc
push
fadd
adc
call
loopne
cmp
mov
mov
and
test
icebp
inc
cmp
in
add
mov
and
mov
sub
mov
and
cmps
mov
aad
cmp
add
add
arpl
icebp
jg
mov
(bad)
sti
mov
lods
and
push
adc
leave
xlat
add
je
lods
leave
add
or
xor
dec
add
mov
fimul
(bad)
sbb
loope
pop
add
(bad)
imul
cmp
add
mov
sti
and
xchg
and
or
add
in
add
popf
daa
pop
cmp
rcl
inc
cmp
nop
(bad)
sbb
lods
dec
les
out
test
fadd
adc
test
jae
in
jae
add
inc
and
jns
jmp
ins
sti
and
sub
or
pcmpgtw
add
fadd
cmp
add
xor
push
stc
xor
sub
jns
aas
add
add
jbe
cmps
das
mov
and
nop
lods
add
add
add
sub
ret
addr16
je
ror
retf
sbb
mov
mov
mov
xor
cmp
push
ror
add
inc
inc
adc
push
or
sahf
add
ss
pop
mov
jl
fs
mov
adc
add
add
mov
inc
inc
(bad)
(bad)
(bad)
push
in
or
jb
pop
stc
sub
pop
ret
jmp
inc
and
adc
pop
or
loope
loop
es
adc
add
add
push
add
inc
rol
popa
in
(bad)
sbb
xchg
dec
and
outs
pop
mov
call
cmp
add
jmp
enter
jle
fmul
add
add
or
ret
lods
in
std
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
sub
push
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
int3
in
dec
or
and
mov
mov
and
call
jecxz
inc
and
pop
repz
push
mov
mov
jne
stos
outs
xor
or
mov
fld
add
jmp
mov
(bad)
les
sub
mov
sub
sbb
rol
mov
sub
mov
movs
(bad)
jne
scas
mov
inc
mov
xor
std
xor
movs
mov
fisttp
mov
xchg
xor
(bad)
popa
jmp
sub
int3
imul
test
add
add
inc
mov
mov
sbb
test
add
add
add
(bad)
popa
popa
mov
xchg
adc
mov
and
je
popa
pusha
dec
add
and
les
jnp
pusha
inc
not
test
dec
add
dec
ss
xchg
push
add
add
inc
hlt
jmp
sub
mov
je
jmp
mov
aas
adc
packsswb
dec
add
add
add
add
dec
aam
pop
enter
push
(bad)
push
and
adc
add
inc
rcr
mov
idiv
adc
out
data16
and
dec
add
inc
ror
mov
jmp
(bad)
jmp
inc
sar
ins
lock
jmp
or
add
mov
and
inc
imul
aam
add
mov
pop
std
int
mov
sub
or
scas
(bad)
int3
and
xchg
push
push
inc
int
in
fsub
add
and
and
test
repnz
imul
or
hlt
add
add
inc
mov
ins
xchg
mov
hlt
xchg
xor
mov
hlt
aas
mov
pop
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
aaa
mov
mov
mov
fucomip
and
mov
pusha
add
inc
and
add
add
and
adc
clc
dec
mov
and
int3
ins
dec
lea
sub
mov
add
and
pop
stc
add
add
ins
or
mov
or
inc
dec
lea
cmp
inc
and
scas
add
cmove
sub
cmp
mov
adc
lea
add
add
pushf
push
add
mov
ins
dec
mov
and
sub
push
inc
icebp
mov
in
mov
inc
sub
jmp
mov
ins
out
aas
add
push
mov
test
out
pop
add
cmp
add
mov
clc
lds
ret
das
cmp
add
or
sti
or
pop
mov
loope
test
or
or
mov
add
imul
inc
jb
getsec
pop
and
adc
add
mov
sub
mov
sqrtps
add
add
mov
jae
inc
cmc
xchg
dec
(bad)
and
dec
(bad)
sbb
scas
test
mov
(bad)
and
mov
sub
jne
mov
cmps
xor
lods
js
lea
(bad)
jge
in
jmp
mov
es
inc
and
es
dec
add
pushf
jmp
retf
push
sub
call
add
add
add
pop
add
icebp
push
sub
ins
sub
adc
test
add
add
sub
push
xchg
inc
lahf
ficomp
mov
inc
add
sub
add
jmp
mov
mov
pop
mov
and
mov
add
mov
or
xchg
jae
jmp
fbld
add
add
and
or
addr16
add
add
inc
inc
mov
add
ins
mov
fdivr
pop
cmp
outs
push
shl
and
push
in
loop
mov
loop
add
add
and
xor
call
mov
adc
inc
and
arpl
or
packsswb
mov
idiv
inc
pop
pop
call
test
pop
mov
pop
dec
ror
cmp
inc
and
jecxz
cli
(bad)
(bad)
mov
mov
jl
pusha
adc
mov
retf
pop
jmp
and
xor
scas
inc
jmp
out
fsub
add
add
jg
and
pop
sti
scas
dec
jmp
stos
data16
mov
loop
add
jmp
test
mov
enter
mov
jmp
fsub
rcr
add
gs
jns
pop
pop
jmp
nop
push
mov
push
push
push
and
sub
push
jmp
push
jmp
push
ret
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
sbb
mov
mov
push
je
pop
pusha
dec
and
mov
add
or
mov
js
cmps
je
adc
xor
fistp
and
rol
lock
pop
(bad)
dec
dec
gs
mov
adc
sbb
mov
sti
(bad)
(bad)
in
gs
pop
pop
pop
jno
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
jmp
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
or
push
fsubr
adc
ret
adc
xchg
jmp
pop
pop
add
repnz
fild
add
test
push
add
and
jns
stos
add
mov
and
rol
add
test
imul
add
dec
cmp
add
cmp
js
add
add
stos
add
and
add
add
add
inc
retf
je
xor
rol
mov
(bad)
dec
and
jg
jmp
mov
ror
jmp
jp
data16
mov
inc
and
sub
cmp
and
repnz
nop
cld
add
jmp
mov
sub
dec
inc
loopne
jmp
stc
add
add
add
add
push
inc
call
xchg
push
and
bswap
lods
add
mov
iret
cld
add
xchg
das
je
aam
call
(bad)
xor
add
jmp
mov
pop
fistp
pop
and
bswap
inc
mov
dec
jmp
mov
shr
inc
jns
movs
pop
add
or
add
add
outs
inc
and
sub
out
inc
and
cmovo
pop
add
lds
bound
lods
clc
je
ret
scas
jge
rol
mov
fild
add
sbb
cmp
mov
rol
add
pop
mov
sub
(bad)
mov
aas
out
add
add
add
pop
sbb
sub
add
test
popf
mov
and
sub
mov
pextrw
push
mov
add
inc
and
sub
mov
mov
cdq
add
les
push
mov
aaa
loopne
cmp
je
jmp
mov
and
bound
xchg
je
xlat
imul
shl
mov
dec
mov
xchg
add
add
mov
(bad)
ffreep
adc
test
cli
add
shr
ins
add
stos
push
jp
mov
xchg
je
mov
(bad)
iret
add
pop
pop
add
or
sub
je
ret
test
stos
add
ds
(bad)
in
pop
push
or
neg
out
mov
and
inc
dec
add
add
inc
int3
mov
jmp
mov
xlat
test
les
in
(bad)
call
arpl
mov
jle
adc
mov
cmp
ud2
jns
mov
je
shl
add
mov
add
add
add
les
mov
sbb
dec
sub
add
xchg
xchg
xor
dec
xor
dec
std
test
and
dec
out
call
mov
mov
cmp
cmovge
mov
add
mov
mul
add
mov
mov
xchg
iret
std
add
xchg
mov
mov
add
aam
dec
test
call
mov
pop
jne
sar
cmp
adc
pop
and
jmp
(bad)
or
je
xchg
jl
lock
add
add
add
add
sub
out
adc
iret
imul
push
dec
std
or
add
inc
and
pop
stos
add
push
dec
sbb
mov
sub
scas
add
mov
mov
mov
add
cmovne
(bad)
loopne
add
or
add
lea
retf
ret
rcl
out
(bad)
inc
and
or
add
mov
cld
adc
push
add
add
add
je
and
add
add
mov
add
mov
aam
(bad)
xlat
jmp
cld
adc
into
inc
and
jmp
add
mov
outs
adc
mov
xor
sahf
icebp
(bad)
inc
inc
and
dec
std
add
cmp
lahf
jl
or
add
dec
inc
add
lea
mov
neg
xlat
sar
dec
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
push
jmp
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
(bad)
ret
mov
sbb
cmp
mov
sbb
mov
mov
mov
add
icebp
sbb
dec
repnz
je
sbb
arpl
mov
and
mov
push
(bad)
(bad)
mov
mov
and
push
and
mov
and
mov
mov
mov
add
inc
and
add
add
pop
ja
pop
into
dec
mov
pushf
mov
pop
call
lea
ds
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
mov
mov
int
mov
and
nop
add
add
push
jmp
adc
(bad)
(bad)
(bad)
out
or
mov
mov
and
call
lea
pop
sub
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
or
test
inc
push
dec
mov
cs
outs
add
inc
push
sub
and
mov
mov
and
jmp
jp
dec
mov
(bad)
call
mov
cmp
jle
and
xor
test
add
js
sbb
inc
and
mov
(bad)
cmp
mov
add
jmp
mov
sub
push
inc
and
jg
jmp
xor
and
pop
push
jp
jge
cmp
sub
(bad)
sahf
add
mov
popf
xchg
inc
pop
mov
in
push
std
cli
(bad)
and
xor
mov
and
addr16
stc
xrelease
inc
test
add
rol
mov
adc
jecxz
cmp
je
sub
mov
sub
mov
les
cmp
add
dec
add
dec
xchg
(bad)
push
inc
push
adc
sbb
sbb
add
mov
call
mov
and
and
js
lds
add
inc
lea
or
and
add
add
loope
mov
and
jmp
shl
ss
cmp
psubusw
test
inc
jmp
jns
(bad)
push
js
xor
jge
inc
inc
and
ror
dec
std
inc
pop
lahf
shr
or
mov
xchg
mov
dec
fld
mov
lahf
or
and
mov
popf
dec
dec
jbe
fadd
dec
and
jmp
mov
mov
jmp
mov
(bad)
retf
(bad)
retf
mov
inc
outs
add
inc
(bad)
dec
push
dec
icebp
inc
add
xchg
loope
mov
fisttp
or
mov
add
mov
add
inc
shl
(bad)
or
inc
and
dec
dec
add
mov
pop
and
sub
mov
pop
aam
xlat
jecxz
(bad)
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
adc
and
mov
and
mov
inc
std
fs
popa
xor
inc
and
add
add
and
mov
push
(bad)
sub
dec
mov
dec
test
sar
mov
push
mov
add
xchg
add
das
and
sub
mov
je
jmp
mov
sub
mov
pop
add
add
inc
and
sub
mov
and
mov
add
mov
add
rol
push
sub
cld
add
push
push
outs
popf
jmp
call
loope
hlt
push
push
xchg
inc
cmp
mov
pop
add
jne
retf
aas
sub
mov
in
or
add
ins
scas
sbb
mov
sub
mov
(bad)
lods
add
add
xchg
add
add
stos
cmp
and
jg
add
add
mov
cmp
arpl
dec
add
add
jmp
cdq
aam
xor
pop
test
add
jmp
push
pop
into
or
outs
aam
inc
dec
mov
pop
xor
add
add
add
push
inc
and
sub
cmp
dec
pop
push
add
add
mov
sub
mov
rol
add
add
xor
(bad)
xchg
ins
dec
test
xor
movq
inc
jg
sub
mov
and
arpl
sub
xchg
loop
inc
xchg
push
pop
push
and
add
xor
pop
jmp
sbb
mov
aad
jmp
mov
sbb
mov
add
add
add
add
mov
stos
cmp
stos
add
mov
das
jecxz
fld
add
inc
adc
inc
and
fist
scas
sbb
xchg
sub
dec
sti
cmp
cmove
arpl
ins
scas
add
popf
and
push
jmp
add
cmp
dec
and
inc
mov
(bad)
call
stc
mov
add
daa
pop
and
push
sbb
xchg
add
cmps
retf
xchg
pop
pushf
mov
inc
jo
cmp
sar
in
and
mov
into
fs
outs
and
inc
and
test
(bad)
(bad)
mov
mov
call
call
jmp
(bad)
das
and
push
inc
pop
loop
mov
test
add
fld
mov
or
sbb
push
mov
cmp
cmovne
mov
and
out
popf
add
scas
lock
and
call
(bad)
pop
std
pop
loop
and
or
add
mov
sbb
pop
mov
inc
std
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
shl
fs
aad
jmp
cmp
pop
sbb
je
sbb
inc
fcom
mov
fsub
(bad)
(bad)
fisub
mov
sysenter
aad
push
push
aad
push
or
stos
or
mov
(bad)
ds
mov
inc
and
jae
and
fidivr
mov
mov
sti
(bad)
dec
pop
adc
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ror
and
pop
inc
jmp
loope
add
mov
loop
push
dec
add
add
inc
and
add
outs
inc
add
leave
inc
imul
mov
push
inc
pop
movs
inc
aam
inc
add
mov
aaa
outs
mov
add
mov
add
add
add
add
add
call
loope
pop
mov
mov
pusha
(bad)
aas
and
lock
mov
and
mov
xor
mov
mov
mov
leave
scas
add
and
cmp
mov
pop
test
and
(bad)
test
inc
and
sub
cmp
mov
jg
jmp
stos
push
in
jle
test
sub
mov
je
mov
js
sbb
popf
mov
inc
and
stc
(bad)
sbb
push
mov
dec
leave
inc
mov
or
dec
pop
sti
repnz
ret
test
mov
mov
test
inc
and
mov
adc
repz
jmp
mov
dec
mov
add
(bad)
jmp
mov
and
jl
ss
outs
adc
test
loopne
jmp
jmp
mov
pushf
test
or
mov
or
aaa
sar
cmp
xchg
and
add
mov
(bad)
cmp
stos
(bad)
jl
add
jbe
dec
inc
mov
mov
mov
and
aas
ret
jecxz
push
and
lods
pop
repnz
push
mov
dec
push
test
js
or
iret
dec
les
inc
and
mov
mov
cld
mov
lock
and
(bad)
pop
add
and
std
dec
inc
push
jg
add
clc
dec
xchg
adc
or
jecxz
dec
leave
inc
loopne
sar
repnz
inc
or
leave
and
mov
cmp
mov
mov
sub
call
cld
pop
sub
enter
add
shld
cmp
push
jecxz
add
es
or
(bad)
push
lds
leave
sti
leave
inc
loopne
add
and
pop
push
push
and
or
sub
add
mov
cmp
inc
jecxz
add
shl
jmp
jmp
and
jmp
rcr
scas
cld
push
es
imul
mov
pop
sub
inc
add
je
inc
sar
add
add
lods
jp
xor
cmp
pop
add
sbb
push
xchg
inc
mov
mov
or
mov
in
push
inc
push
mov
mov
mov
lds
mov
add
add
jge
jnp
pop
in
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
cmovae
mov
jmp
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
setne
mov
xor
and
mov
xor
and
xor
and
and
or
or
xor
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
add
add
sub
mov
mov
jmp
lea
lea
mov
mov
mov
add
add
movzx
sub
add
add
mov
mov
add
movzx
add
sub
sub
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
call
call
call
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
call
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
add
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
sub
mov
sub
add
sub
add
mov
sub
add
add
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
jmp
call
mov
lea
mov
mov
mov
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
movzx
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
call
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
mov
imul
mov
call
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
add
mov
add
sub
sub
mov
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
mov
sub
add
mov
mov
shl
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
mov
mov
call
mov
call
mov
xor
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
mov
call
mov
xor
and
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
inc
mov
mov
mov
mov
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
call
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
sub
add
mov
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
shl
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
add
add
sub
mov
add
add
sub
add
add
sub
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
add
mov
sub
mov
sub
sub
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
push
push
push
and
mov
call
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
jbe
add
lea
adc
add
dec
add
lea
add
mov
sbb
mov
xchg
repnz
mov
(bad)
fwait
hlt
fcom
add
adc
add
push
add
sbb
in
(bad)
(bad)
jmp
and
sub
dec
mov
outs
sbb
sub
mov
fsub
and
push
mov
adc
in
xchg
mov
and
mov
ror
das
and
test
add
add
mov
in
xchg
xchg
repnz
out
push
adc
jle
sbb
dec
add
rol
add
stos
add
sbb
mov
sbb
(bad)
(bad)
mov
jbe
and
add
mov
inc
and
or
add
test
nop
add
dec
add
repz
aam
repnz
add
push
sti
inc
add
ror
add
inc
push
add
test
fld
add
push
pushf
mov
and
loopne
out
jg
lock
xchg
and
ins
lock
add
push
sub
mov
call
rcr
pushf
pop
xchg
mov
add
test
aam
dec
add
mov
jp
mov
jg
jmp
mov
fbld
je
mov
dec
nop
and
add
jmp
mov
mov
add
add
inc
retf
popf
xchg
add
jbe
adc
add
es
add
add
add
mov
mov
test
pop
mov
add
add
add
sbb
xchg
repnz
xchg
pop
(bad)
sbb
test
ror
or
mov
add
add
add
sub
mov
pop
(bad)
and
out
jo
popf
xchg
push
add
mov
out
mov
mov
mov
jmp
pop
adc
add
add
xor
add
mov
dec
(bad)
cmp
add
cmp
add
cmp
add
add
mov
call
mov
pop
mov
and
add
loopne
mov
add
jge
adc
add
add
add
mov
std
xlat
retf
mov
mov
je
jmp
nop
shl
add
add
push
cmp
add
and
imul
mov
test
dec
sbb
sub
mov
mov
add
add
jg
or
dec
pop
loopne
fadd
add
sub
mov
and
add
add
(bad)
and
add
mov
aam
add
fmul
imul
or
mov
test
aam
push
pushf
mov
outs
jg
pop
mov
and
add
add
add
ret
and
add
sub
mov
je
jmp
mov
(bad)
mov
test
ror
jg
js
or
add
aam
sbb
js
lods
in
inc
mov
call
mov
dec
mov
xchg
adc
into
sbb
push
xchg
pop
adc
push
sti
add
xchg
mov
std
xor
jo
adc
add
(bad)
nop
retf
dec
add
add
xchg
mov
aam
add
(bad)
ss
sbb
test
add
pop
fisttp
jmp
mov
dec
ss
aaa
pop
idiv
and
cli
xchg
mov
add
add
imul
test
sub
mov
adc
jecxz
add
cdq
test
das
add
mov
nop
mov
add
jmp
cdq
arpl
add
in
pop
test
add
cmp
je
add
lds
mov
icebp
xor
outs
test
add
sti
cwde
and
add
add
rol
ret
or
mov
pop
jmp
dec
sbb
adc
cmp
add
(bad)
and
push
rol
test
idiv
mov
mov
and
iret
add
add
add
mov
and
push
pushf
xchg
fbld
cmp
add
test
push
add
jmp
mov
sub
inc
test
push
pushf
add
(bad)
and
out
sbb
retfw
rol
add
sbb
pop
xor
add
mov
add
test
add
add
jnp
ret
dec
cli
add
ror
pop
imul
add
or
enter
mov
psrlw
test
adc
mov
sub
mov
wrmsr
and
add
jmp
mov
iret
push
add
mov
jno
(bad)
fwait
arpl
inc
xchg
mov
adc
dec
jmp
sbb
sub
mov
add
jmp
mov
aam
add
sub
mov
bswap
or
add
or
add
iret
add
jg
sbb
add
xchg
mov
add
or
add
sub
add
adc
jmp
mov
sub
mov
jg
jmp
add
cmp
jbe
cmp
out
je
push
(bad)
sbb
and
add
dec
sub
mov
or
add
jmp
mov
aas
sbb
hlt
and
test
je
jmp
mov
and
add
mov
jbe
lahf
jno
add
add
jmp
sbb
popf
xchg
push
ror
sti
cmp
cs
and
add
enter
add
add
ret
das
xchg
add
cmp
pop
imul
and
xchg
add
mov
test
into
dec
add
mov
aam
mov
and
xchg
add
sbb
add
loopne
add
sbb
popf
aam
pop
shr
mov
cmovo
add
repnz
xchg
jns
xor
sti
add
retf
fwait
and
dec
pop
add
out
sub
add
add
push
sub
mov
push
add
sti
cwde
(bad)
call
add
loopne
and
or
add
rcr
push
mov
add
mov
sub
mov
add
add
add
add
add
iret
dec
mov
xchg
fild
or
mov
add
add
pop
jmp
loopne
mov
mov
test
and
push
add
je
jge
adc
out
test
aam
xchg
mov
push
pop
int3
and
cmp
add
add
add
mov
mov
add
add
add
pop
add
ja
mov
sbb
adc
call
mov
pop
loopne
fwait
aam
add
sub
adc
adc
je
push
xchg
add
add
fwait
hlt
aam
add
mov
test
iret
add
test
push
pushf
add
adc
sti
sbb
popf
aam
pop
shr
mov
xchg
mov
mov
inc
add
mov
sub
mov
mov
push
or
add
sbb
sub
lahf
jno
xchg
add
sbb
xchg
push
push
add
add
add
sub
test
iret
dec
sbb
outs
cmc
add
jmp
jmp
mov
icebp
jmp
xchg
mov
lods
or
cmp
inc
pop
xchg
mov
mov
add
add
lods
out
sti
add
test
xchg
add
xchg
push
add
cmp
inc
add
xor
adc
mov
xchg
ficom
call
sbb
mov
inc
fisttp
xor
dec
pop
imul
and
or
add
add
iret
cmovne
add
pop
push
cmps
in
rol
out
rol
sbb
hlt
and
add
cmp
mov
aas
lock
jne
sti
adc
mov
stos
and
pop
add
pop
add
fwait
mov
and
or
mov
mov
mov
mov
popf
mov
rol
mov
call
mov
lea
mov
xor
fsub
add
add
add
inc
popf
or
add
mov
mov
pop
inc
cli
aas
jmp
stc
adc
(bad)
jg
ret
jl
sti
xchg
mov
add
add
push
push
(bad)
(bad)
mov
lea
lea
adc
mov
mov
or
mov
add
dec
out
stos
adc
(bad)
mov
add
(bad)
cli
and
inc
pushf
xchg
mov
and
mov
xchg
mov
fimul
pop
mov
mov
mov
mov
adc
and
adc
adc
sub
stos
mov
cmp
dec
pop
add
mov
test
pop
or
jno
xor
cmp
add
dec
mov
mov
mov
xor
mov
mov
push
sar
(bad)
jae
push
add
add
add
mov
pushf
and
rol
add
and
ss
cmovbe
mov
mov
call
(bad)
shl
cwde
add
jns
inc
sub
mov
and
add
fadd
or
imul
iret
dec
add
rol
add
es
sub
jae
add
push
add
add
dec
add
comiss
test
aas
dec
add
jmp
push
jbe
loop
add
xchg
popa
inc
jmp
xchg
test
adc
lea
test
add
pushf
add
mov
add
ret
dec
jl
or
imul
call
mov
add
cmp
adc
push
sbb
adc
push
cmp
and
push
add
xchg
es
mov
sub
mov
iret
add
ret
(bad)
jno
xchg
add
mov
and
add
and
les
dec
pop
loop
and
or
pop
inc
mov
sbb
push
je
or
dec
add
cdq
adc
movzx
mov
xchg
add
add
add
push
mov
sbb
adc
mov
jmp
shr
inc
outs
xchg
fild
add
add
pop
mov
pop
mov
dec
(bad)
mov
add
add
lds
shr
add
add
sti
push
or
xor
xchg
lods
ins
jns
lds
add
jmp
mov
mov
jbe
and
test
and
pop
add
pop
pushf
and
add
add
ins
add
aad
or
add
add
inc
and
add
dec
add
inc
jno
add
jae
xchg
add
pop
add
ins
mov
pop
add
mov
mov
cmp
adc
retf
mov
adc
add
(bad)
(bad)
xchg
mov
add
in
and
jmp
mov
jbe
add
dec
mov
lea
lea
sub
add
mov
and
sti
add
xchg
xor
and
fadd
nop
add
mov
or
inc
and
add
dec
add
add
add
outs
xchg
fist
add
add
jmp
call
adc
pop
dec
retf
and
into
add
lds
add
add
xchg
(bad)
idiv
jmp
mov
mov
add
inc
add
jmp
not
test
inc
mov
cs
cmp
xchg
add
add
and
add
add
mov
out
dec
add
add
in
xchg
xchg
add
lea
sti
mov
mov
test
or
dec
add
frstor
push
jns
(bad)
push
xchg
adc
mov
adc
mov
and
inc
and
push
out
sti
push
push
and
jle
and
(bad)
add
dec
mov
sbb
mov
call
lea
addr16
add
and
call
inc
mov
pop
or
add
mov
jnp
add
jmp
adc
ror
add
inc
and
sbb
and
(bad)
mov
inc
add
add
mov
lea
lea
loop
and
lea
add
push
mov
xchg
mov
push
inc
popf
push
pop
ror
mov
add
je
jecxz
inc
and
mov
call
mov
mov
test
call
and
mov
rol
add
test
imul
and
loope
int3
dec
add
test
pop
sahf
xchg
add
add
add
jbe
pop
cli
add
inc
jb
hlt
jmp
lea
sbb
ss
or
push
sub
mov
es
add
mov
(bad)
pop
hlt
add
pop
add
(bad)
das
and
adc
add
ss
and
mov
dec
(bad)
dec
jno
call
adc
and
add
add
add
mov
mov
and
add
add
mov
dec
add
xchg
jmp
xor
movzx
mov
mov
mov
test
mov
shl
out
cmp
inc
add
pop
loopne
mov
or
add
and
mov
mov
fmul
mov
mov
mov
(bad)
mov
mov
mov
lea
add
add
imul
xor
(bad)
sti
and
pop
add
add
adc
add
push
and
out
add
inc
add
add
add
cmp
mul
(bad)
push
mov
push
cmovl
mov
push
sbb
xchg
add
cmp
pop
das
push
lock
in
jmp
(bad)
adc
add
adc
out
add
test
lock
add
xchg
cs
cmp
imul
and
add
add
pushf
add
add
add
or
sub
sbb
adc
mov
inc
push
dec
data16
mov
pop
add
xchg
mov
rol
iret
jmp
hlt
add
inc
add
adc
jb
xor
iret
cmp
test
add
inc
mov
and
repnz
add
mov
mov
cmp
add
add
cmovne
add
pop
sbb
add
nop
mov
mov
add
rol
and
add
add
rcr
pop
add
icebp
(bad)
jo
scas
ds
xchg
fld
add
sbb
pop
inc
pop
mov
sti
into
add
add
ins
mov
xchg
test
or
rcl
dec
mov
or
mov
mov
cmp
cmovne
mov
add
sub
mov
pushf
mov
mov
imul
(bad)
jecxz
adc
add
inc
sub
mov
jmp
xor
ficom
sbb
sar
add
sbb
jmp
push
hlt
and
add
add
imul
jmp
sbb
add
call
pop
cmp
mov
adc
inc
add
cwde
test
xchg
adc
ret
jmp
movs
mov
outs
mov
ret
add
pop
sub
fsub
into
sbb
xor
test
mov
mov
cmc
push
jg
imul
dec
xor
mov
jecxz
jno
sti
loope
sar
mov
push
outs
fst
jno
(bad)
sub
mov
outs
aam
ss
aad
in
and
xchg
adc
retf
cmp
test
push
xor
xor
daa
shr
cmps
lods
push
or
mov
movs
dec
(bad)
sbb
mul
mov
(bad)
sub
mov
bound
popa
mov
sbb
sub
div
xchg
in
(bad)
jl
ficomp
cs
dec
ja
lahf
lahf
xor
xchg
add
out
nop
dec
inc
aam
and
out
jnp
addr16
jns
jno
loop
sbb
enter
mov
aas
aaa
xchg
jmp
lds
inc
lods
ins
push
outs
xchg
std
mov
movs
nop
scas
test
xor
cmp
jnp
xchg
imul
out
dec
mov
push
idiv
(bad)
int3
(bad)
repz
scas
inc
icebp
mov
mov
add
in
or
dec
cli
sub
pop
ja
mov
lea
adc
pop
outs
nop
test
loopne
movs
sub
inc
add
add
in
sub
lahf
cmp
and
stos
fsub
pop
sub
aad
test
and
sbb
stos
mov
mov
in
les
fidivr
jne
xchg
js
dec
push
dec
out
mov
sbb
dec
bound
outs
int3
dec
cmps
or
sub
push
(bad)
into
cs
sub
in
movs
xor
in
int
add
cmps
mov
add
nop
push
bound
mov
xlat
lahf
std
std
and
jg
or
leave
stos
or
sti
cs
and
cdq
xchg
arpl
cmps
ds
aam
xlat
(bad)
in
push
mov
adc
cdq
or
fistp
js
js
jns
cs
dec
mov
push
jle
pop
push
jo
xlat
sub
mov
int
fiadd
add
inc
dec
and
cmp
jmp
pusha
aad
mov
jge
ds
ror
sbb
test
(bad)
js
out
push
aad
xor
aaa
(bad)
stos
pop
mov
hlt
test
call
ja
pop
jle
inc
nop
sbb
pop
add
outs
add
inc
(bad)
daa
inc
fld
cwde
stos
or
dec
mov
(bad)
je
jne
xor
loope
push
mov
dec
jl
cmps
and
xchg
sbb
bnd
sbb
push
xor
dec
sbb
lods
push
adc
retf
pop
dec
repnz
mov
xor
jl
popf
cdq
inc
iret
int
mov
push
inc
hlt
addr16
repz
scas
mov
lods
mov
sbb
jbe
out
push
cs
jle
jg
cmps
cmp
pop
pop
mov
lods
cmp
iret
sbb
xchg
fistp
icebp
loope
cmp
mov
or
push
mov
inc
(bad)
leave
add
es
jns
sbb
aad
or
loope
and
cmp
or
out
jae
(bad)
cs
les
ret
mov
xchg
or
xchg
push
pop
leave
mov
ficom
in
jne
fisubr
outs
clc
sbb
inc
fidivr
mov
and
jns
rcr
adc
cmp
lods
outs
jmp
and
fnstenv
dec
inc
retf
mov
mov
or
(bad)
cmp
cmps
or
jecxz
pop
bnd
out
into
fadd
jne
adc
out
fcmovb
jmp
push
int
shl
repz
test
shr
fst
mov
inc
lea
cmp
int3
and
pop
cmps
and
mov
aaa
je
fstp
loop
sbb
lods
movs
(bad)
std
jl
or
mov
loopne
jmp
jmp
adc
pop
and
icebp
sbb
out
bound
ins
clc
(bad)
fwait
div
mov
retf
fsub
or
sbb
out
lods
jbe
jmp
cmp
jmp
and
popa
clc
in
mov
ds
ins
mov
int3
jae
or
inc
rcr
and
scas
jo
xchg
mov
retf
and
sub
pop
sbb
or
sub
in
mov
inc
in
jg
fmulp
inc
fwait
call
jo
enter
ss
mov
sar
adc
jo
ss
int
retf
inc
mov
mov
jmp
ss
hlt
test
and
test
jns
lock
xchg
adc
mov
aam
pop
adc
or
icebp
or
mov
push
add
stc
sbb
adc
mov
sbb
pop
inc
adc
scas
mov
jno
mov
js
dec
mov
jne
xchg
add
ds
sbb
outs
jnp
pop
adc
scas
sub
adc
jl
cmp
or
orps
adc
shr
xor
dec
mov
aad
mov
nop
cmp
jo
adc
loope
test
pop
pop
out
add
in
mov
in
adc
int3
mov
sbb
mov
out
push
xchg
sub
mov
cmp
data16
inc
lahf
retf
add
pop
pusha
fist
rcl
test
sub
aam
dec
dec
dec
cmc
cs
sar
aad
movs
inc
std
fs
and
adc
shl
ficom
add
inc
packssdw
xchg
or
dec
inc
cli
mov
jl
fs
rol
cmp
stos
sbb
and
adc
adc
std
outs
push
popf
xchg
(bad)
mov
mov
or
shl
pop
or
or
push
or
dec
stos
xor
jl
out
sub
xor
mov
in
fnstenv
hlt
icebp
in
pop
bound
pop
push
not
add
mov
repz
test
adc
jmp
popa
or
movs
lock
push
inc
lods
bound
mov
xchg
lods
adc
or
pop
leave
pop
dec
imul
jg
push
loop
test
add
mov
pop
push
ror
push
imul
popa
push
(bad)
xor
or
test
xchg
mov
mov
xor
sub
ss
(bad)
clc
dec
jg
call
mov
sub
mov
in
xchg
cmp
fcom
inc
stc
fstp
sti
(bad)
push
mov
test
or
test
inc
movs
repz
cmps
inc
(bad)
dec
xchg
enter
out
lds
jmp
or
xor
xchg
push
ss
in
nop
jb
stos
gs
add
xor
adc
mov
pop
cwde
out
je
cmp
cmps
out
fidiv
and
mov
sub
xchg
shl
movs
mov
rcl
int3
jo
in
xchg
xchg
pop
outs
es
mov
bound
pop
in
fild
jne
push
pop
out
test
add
push
addr16
addr16
cmc
and
mov
in
xor
arpl
xchg
push
mov
outs
adc
div
jmp
jnp
cmp
call
mov
(bad)
lahf
imul
mov
(bad)
movs
daa
jg
cs
mov
pop
push
or
adc
push
dec
xor
call
pop
js
dec
cdq
pushf
ret
fwait
fwait
mov
gs
not
pop
sbb
xchg
push
fmul
push
imul
cmp
pop
fs
test
fld
retf
cs
fucom
arpl
adc
adc
stos
xor
(bad)
mov
adc
loop
adc
jae
hlt
popf
test
loop
int
add
jno
and
ds
enter
dec
ja
jb
jg
pop
cmp
cwde
or
shr
xchg
jmp
out
das
inc
and
cmp
adc
shr
sbb
addr16
dec
sbb
cmp
push
push
in
(bad)
mov
and
adc
sub
xor
jmp
and
pop
inc
push
mov
fild
js
ret
addr16
out
(bad)
or
sbb
cld
mov
or
add
xchg
mov
mov
or
out
inc
push
and
ret
(bad)
std
cvtps2pd
fs
mov
or
(bad)
cld
imul
push
pop
int3
sub
mov
inc
jecxz
daa
bound
imul
push
icebp
lock
jnp
cmps
(bad)
xchg
sub
test
mov
push
cmp
add
test
pop
add
add
imul
fst
jbe
push
push
mov
pushf
std
scas
push
xchg
pop
push
mov
jmp
and
pop
in
rcl
jno
adc
imul
call
js
int3
and
imul
iret
sub
or
es
pop
add
xlat
xlat
mov
sbb
xor
push
in
dec
icebp
add
(bad)
outs
jl
pop
mov
mov
in
jmp
daa
inc
stos
ret
adc
call
addr16
fwait
mov
xchg
adc
ret
mov
mov
or
inc
test
test
pop
fld
and
jl
mov
movs
pop
call
fwait
lahf
hlt
std
popfw
pop
(bad)
mov
cmps
aaa
pop
mov
int3
mov
push
and
cmp
and
add
out
ss
repz
test
mov
dec
retf
retf
pusha
pop
aas
scas
out
sub
aaa
int3
push
test
sbb
or
pusha
mov
movs
adc
cld
xor
push
(bad)
cdq
ret
repz
into
xor
adc
outs
push
sbb
mov
std
enter
pushf
or
sbb
xor
sub
mov
xchg
clc
mov
or
invd
dec
push
fucomi
or
cmc
lods
mov
sub
fs
xor
ret
cmp
push
fwait
ins
inc
jmp
int
ins
inc
rol
push
ss
dec
mov
fisubr
hlt
outs
rcr
xchg
shl
pop
push
xor
inc
fsubr
fsub
xor
inc
sbb
xchg
nop
push
add
xor
neg
and
hlt
jmp
int
fbld
sub
loope
dec
and
mov
add
xchg
pop
inc
jae
add
xchg
xlat
sbb
fwait
retf
jle
sbb
mov
int
xor
rcr
(bad)
lods
mov
xchg
into
or
mov
pop
rcl
sub
dec
dec
lods
cmps
jmp
and
(bad)
xchg
(bad)
push
dec
in
shl
jns
sbb
or
mov
scas
push
scas
inc
jg
and
adc
and
aam
ret
es
cmp
idiv
bnd
push
leave
ds
adc
dec
push
xchg
(bad)
jge
cmp
sub
fnstcw
sbb
lds
inc
bound
(bad)
rcr
and
mov
inc
int3
xor
or
sub
cdq
pushf
das
adc
repz
cli
jmp
xchg
cmp
cmp
sub
xor
jne
mov
lods
and
les
jle
(bad)
cwde
daa
add
mov
add
mov
and
ror
rol
xchg
add
pusha
pop
sub
sbb
inc
cli
xor
pop
add
mov
jnp
mov
cwde
pop
cmp
or
lods
add
ret
int3
jno
mov
cmps
les
aaa
xor
(bad)
jp
hlt
xor
push
ret
cmp
mov
in
or
pop
ror
in
sti
fld
imul
push
add
jb
xchg
cmp
leave
jmp
push
jns
lock
pop
sbb
lea
sub
xor
xchg
inc
retf
out
adc
xchg
aaa
shrd
add
push
mov
adc
popf
div
dec
mov
pop
enter
aam
xchg
in
or
outs
jbe
stc
and
test
or
xor
pop
fisubr
pusha
je
jle
mov
aas
test
mov
sub
out
(bad)
test
push
in
xor
mov
jge
xchg
mov
mov
jb
pop
call
jo
adc
aam
int3
fwait
xchg
dec
jb
mov
push
mov
jg
push
inc
sti
sbb
inc
and
pop
add
mov
lock
adc
inc
adc
test
jb
int
lock
stos
daa
mov
pop
mov
test
mov
mov
xor
sub
pusha
enter
repnz
std
cmps
push
inc
hlt
xchg
pop
ror
xchg
out
push
add
xchg
pop
ins
xchg
lods
mov
inc
add
mov
jnp
(bad)
xchg
dec
cmp
mov
ret
and
pusha
movs
mov
xchg
xor
in
sbb
sbb
push
mov
cmp
pop
and
cmp
cmp
push
mov
mov
jae
sbb
loopne
jp
fwait
and
inc
mov
cmp
jb
push
lea
(bad)
mov
es
test
and
jnp
push
mov
sar
ret
call
bound
push
mov
jge
sbb
xchg
int
xchg
lock
and
sete
imul
adc
dec
add
pop
sbb
mov
add
sbb
js
iret
into
mov
sub
mov
add
outs
scas
jb
inc
je
xchg
cmps
outs
fwait
sub
xchg
aam
inc
mov
stos
nop
not
popa
test
sub
cmp
lds
sbb
(bad)
sar
mov
sub
push
dec
jno
repz
jmp
das
iret
dec
inc
aaa
or
push
ret
es
fisub
(bad)
dec
jmp
adc
pop
add
test
test
cmc
int3
leave
lock
xor
popf
shl
mov
xchg
rol
cmp
out
(bad)
or
add
push
jns
int
push
xor
fldenv
fwait
or
add
mov
shl
mov
mov
inc
icebp
inc
mov
jmp
nop
mov
ins
adc
pop
jno
fimul
or
mov
daa
mov
repnz
test
aad
out
loop
or
movs
push
xchg
or
js
ss
lea
mov
pop
lock
sbb
cmc
lods
int
loop
test
fidivr
xchg
jnp
mov
cmp
pop
fstp
leave
ins
push
xor
or
int3
or
sbb
aas
dec
retf
outs
mov
jg
aad
dec
ins
or
cld
jne
lock
ds
xor
cmp
ins
mov
fcmove
mov
pop
pop
lock
xchg
push
fnstsw
pop
into
jno
cli
adc
fnstcw
push
and
pop
enter
push
fcomp
arpl
xor
add
pusha
inc
dec
sbb
pushf
sub
lock
mov
pushf
retf
pop
fmul
shl
test
push
pop
sbb
enter
push
add
dec
cmp
popa
aad
jg
scas
add
mov
mov
das
mov
cmps
in
mov
fisttp
fcom
shl
in
dec
push
pop
jmp
mov
xchg
in
sub
jns
or
ror
adc
aaa
or
repz
jo
add
jmp
loop
fld
xchg
mov
fs
dec
sahf
cmp
out
dec
mov
mov
(bad)
call
add
cmp
fisubr
add
push
imul
int
push
cmc
or
hlt
(bad)
or
stos
icebp
mov
nop
inc
ffreep
mov
xchg
push
stc
mov
adc
mov
sub
mov
out
mov
cmp
aam
push
test
adc
ins
imul
cs
jmp
mov
retf
dec
xor
leave
dec
sub
(bad)
fidiv
cmp
not
or
mov
data16
mov
int
inc
push
pop
(bad)
dec
jae
movs
mov
ret
mov
lahf
inc
shl
adc
push
js
dec
jmp
mov
push
sbb
mov
xor
adc
push
push
sub
adc
mov
mov
push
mov
pop
jbe
out
and
dec
xor
mov
lods
fwait
iret
ins
xor
sub
xchg
fucomp
inc
jg
cmp
push
test
or
xchg
sub
frstor
push
in
fld
add
adc
push
rcr
and
or
xchg
mov
jbe
jo
push
in
add
mov
cli
add
push
sub
dec
pop
int3
out
mov
pop
dec
out
jge
ror
mov
mov
add
std
mov
pop
es
and
sub
cmp
clc
into
ficom
sbb
sub
bound
sub
mov
retf
pop
and
push
dec
jae
out
leave
daa
mov
not
mov
leave
sub
adc
pop
inc
adc
pop
jl
xor
ds
ror
cmps
jle
mov
ret
inc
sbb
cmps
adc
sub
fld
jo
pop
in
out
sbb
sub
push
adc
jg
mov
fadd
je
add
xchg
cmp
cmc
push
repnz
jno
push
inc
cmp
and
pop
add
fcmovnb
jmp
xor
sti
add
mov
frstor
(bad)
jmp
cmp
repz
(bad)
arpl
and
mov
jbe
add
imul
mov
fld
ret
aaa
loopne
retf
nop
xchg
sti
jno
add
sti
cmp
push
into
jne
mov
push
loopne
mov
inc
dec
push
pop
xchg
movs
dec
inc
lods
int3
enter
adc
sti
leave
jecxz
push
push
inc
mov
cmps
pop
fstp
les
sub
or
fs
neg
or
enter
cmovl
call
mov
shl
or
cmp
mov
pop
sub
and
sub
xchg
pop
cmp
lds
jp
out
js
lahf
fidivr
pushf
mov
(bad)
int3
jmp
shr
sub
enter
jne
ins
ret
loop
(bad)
cmps
cmp
lods
(bad)
push
stos
sub
xor
push
ds
add
enter
xchg
pop
imul
lds
fwait
mov
std
cli
or
mov
xor
js
dec
and
es
jg
push
mov
and
sub
fstp
jmp
in
arpl
cmp
mov
mov
add
push
cmp
mov
and
xor
aaa
cmp
xor
mov
push
sbb
mov
aam
cdq
loop
inc
sub
mov
sti
cdq
cli
sub
in
sub
loop
lock
push
stos
or
out
and
sub
sahf
sub
div
mov
in
jmp
adc
hlt
ret
sbb
popa
mov
push
popa
cmp
arpl
sub
inc
retf
dec
int
retf
and
call
test
scas
and
retf
call
jl
jno
out
push
loop
dec
pop
xor
shr
jno
cmp
ins
pop
cwde
mov
cmps
adc
into
aas
jge
fisttp
cli
pop
sbb
add
mov
and
dec
cmp
jbe
sar
cs
jb
sbb
mov
adc
lahf
pop
(bad)
mov
idiv
scas
scas
ss
test
jo
inc
sub
je
sti
pushf
push
aam
retf
addps
fstp
mov
out
sub
pop
scas
xchg
mov
push
jmp
mov
pop
or
xchg
loop
pop
pop
adc
cld
test
sub
and
pop
cmp
scas
repz
(bad)
cmp
pop
sbb
adc
ins
mov
(bad)
fist
retf
nop
xchg
cli
lods
mov
push
div
in
mov
mov
xchg
add
jne
add
pop
inc
stos
xchg
xor
cmp
xchg
pop
mov
inc
call
cmp
adc
mov
jns
(bad)
fidiv
fcomp
push
ret
test
sar
loopne
dec
into
sub
ins
adc
cld
or
add
mov
lods
gs
jno
repz
les
pop
fist
pop
or
xchg
or
into
jbe
js
jns
call
add
push
scas
jge
ror
jge
mov
sub
mov
cmp
jns
cmp
sahf
jecxz
(bad)
iret
jmp
cs
mov
popa
les
cmp
ffree
sbb
cmp
int3
dec
sbb
cmp
adc
ds
jbe
icebp
outs
or
ror
mov
int
add
ret
out
sub
and
ds
sub
lea
dec
lock
(bad)
retf
mov
repnz
enter
mov
and
jmp
pop
push
(bad)
mov
ds
cmp
xor
fst
sub
or
push
mov
mov
mov
aas
repz
(bad)
pop
sub
pop
aam
daa
in
inc
sub
fld
push
ins
or
xchg
aam
jo
xlat
push
jmp
test
and
retf
sub
dec
and
or
inc
pop
push
xor
sbb
sub
mov
adc
imul
add
rcr
xchg
js
jo
cmc
ja
(bad)
enter
jae
xchg
inc
in
xchg
js
mov
jmp
dec
popf
mov
call
push
adc
sbb
adc
ins
jnp
pop
aas
xchg
ss
mov
jp
les
xchg
sbb
cmc
call
outs
mov
in
gs
jne
mov
sti
retf
mov
in
sub
pop
xlat
loop
dec
xchg
popa
stos
adc
repnz
stos
pushf
sar
add
push
pop
fs
pushf
or
push
int3
movs
lahf
jbe
(bad)
xchg
mov
xchg
frstor
sbb
jnp
popa
mov
or
sub
xchg
push
aas
test
mov
jp
mov
shr
cwde
sti
sub
add
push
mov
leave
clc
nop
dec
mov
xchg
xor
jecxz
cmps
jecxz
sub
adc
stos
and
mov
je
and
out
hlt
ret
pop
int
(bad)
(bad)
adc
ja
adc
cmp
jno
lods
sbb
and
dec
outs
mov
daa
adc
fs
adc
mov
xor
dec
sbb
fnstcw
push
pop
arpl
jmp
pop
ds
and
aaa
mov
in
inc
add
jmp
sbb
mov
sbb
ins
lds
aam
movs
pop
ret
cmp
xchg
cmc
pop
enter
ja
cmp
fld
outs
cmp
fs
call
out
jo
std
xchg
sbb
mov
stc
mov
jecxz
inc
xchg
(bad)
pop
iret
(bad)
clc
inc
cld
cmp
mov
leave
mov
xor
fcmovnbe
mov
inc
je
inc
ja
shl
push
xchg
jmp
xor
sub
out
cld
jle
lock
and
jl
and
dec
push
xor
sbb
xchg
cmp
nop
in
daa
xor
(bad)
jmp
fwait
sbb
sti
pop
push
sahf
out
dec
(bad)
mov
xor
cmp
jle
push
pop
leave
stos
mov
push
jmp
or
aam
push
dec
test
lea
push
scas
jecxz
fs
cld
mov
mov
mov
sahf
jecxz
scas
mov
std
inc
mov
sbb
cmp
or
sub
popa
and
jg
in
cmp
pop
mov
jg
pusha
jmp
gs
aad
xor
fstp
mov
ins
mov
mov
xchg
mov
dec
sbb
ret
mov
mov
inc
mov
out
je
fcomi
jg
scas
js
outs
cmp
in
(bad)
mov
pop
cmc
push
(bad)
and
scas
xchg
push
sar
cmp
frstor
fcom
das
xor
and
fst
ins
xchg
jns
mov
mov
or
out
das
xor
stos
fcomp
js
jmp
jae
pop
and
sub
aas
mov
sahf
mov
xchg
adc
popaw
cmp
mov
sub
rcr
sti
pop
mov
sub
mov
ret
push
test
push
fistp
mov
mov
mov
xchg
test
leave
ret
mov
add
(bad)
int
push
sbb
sub
sub
hlt
pop
pusha
popf
lods
retf
int
aaa
es
inc
fldenv
lods
cmp
xchg
data16
pop
test
or
mov
mov
push
pop
mov
aad
outs
in
leave
pop
jnp
sbb
je
dec
xchg
pusha
repnz
fwait
adc
mov
push
inc
shr
test
ret
mov
mov
aam
aad
mov
std
aad
outs
movs
into
imul
lea
data16
lods
gs
ds
pop
cmp
out
mov
std
movs
push
ret
adc
cld
xor
adc
lahf
mov
call
pop
or
repz
daa
cmp
and
int
mov
enter
sub
mov
mov
sbb
test
xchg
pushf
ja
sbb
pop
enter
js
cld
xchg
adc
or
mov
cmps
cld
jge
xlat
push
shr
xlat
or
stos
jmp
sti
into
lods
mov
xor
sub
cmp
push
dec
mov
in
sub
hlt
xchg
fcmovb
or
ins
mov
adc
std
(bad)
adc
aad
shl
fldcw
std
or
sbb
sahf
hlt
fdiv
cs
lods
aam
cmps
sub
push
mov
outs
sbb
push
push
vmovshdup
mov
xchg
or
fist
fdivr
push
dec
cmps
xchg
mul
cmp
ret
cmp
xchg
xor
and
jnp
cmp
sbb
and
or
ja
sbb
cmp
cmp
lahf
cmps
mov
jnp
push
out
mov
aad
addr16
imul
int3
xchg
dec
cmp
mov
cmp
(bad)
fdiv
test
out
aam
out
hlt
int
mov
cs
xchg
xchg
(bad)
es
add
dec
shl
jno
imul
dec
adc
xor
or
adc
js
sub
adc
imul
arpl
movs
inc
cmp
inc
dec
jp
(bad)
sti
shl
out
push
mov
push
ficomp
iret
pop
in
adc
push
mov
push
adc
shl
push
pop
mov
mov
mov
add
(bad)
loope
mov
mov
xchg
rcl
outs
mov
movs
repnz
(bad)
(bad)
out
pop
push
inc
cmp
les
ror
movs
push
test
cmc
inc
ds
xor
ret
arpl
add
dec
and
mov
sbb
sbb
stc
retf
xor
xor
mov
lahf
call
jb
repnz
jb
test
or
cmc
inc
idiv
mov
and
dec
mov
mov
jae
ret
rol
cmp
ins
ss
jge
(bad)
cmp
add
scas
call
ds
add
mov
je
clc
sub
push
jno
add
test
sub
hlt
mov
frstor
gs
sti
dec
pushf
mov
mov
mov
sub
push
retf
sub
gs
data16
nop
push
cmps
sub
js
rcr
dec
add
bound
in
int3
cdq
sti
sbb
call
shr
int3
ds
xor
cmp
pop
jecxz
sbb
jo
shl
out
lods
push
push
ins
loopne
mov
mov
cmp
mov
jmp
loop
es
lahf
add
pop
je
mov
mov
stos
mov
mov
xchg
fstp
sbb
sbb
leave
push
cwde
sti
outs
rol
pop
jecxz
push
ret
mov
inc
and
push
push
xchg
sbb
push
jae
fdiv
aam
pusha
jg
imul
in
loopne
xchg
pop
cld
adc
loop
add
lods
or
ror
add
push
xchg
test
xor
jl
or
mov
or
icebp
sub
out
sbb
test
or
ror
loopne
pop
repnz
pop
dec
rcl
cmp
mov
or
adc
dec
mov
mov
es
sub
dec
sbb
mov
or
out
jbe
push
push
push
sbb
mov
rol
(bad)
aaa
js
mov
jnp
out
pop
mov
fiadd
movs
cli
jge
in
jg
sahf
jecxz
sub
lods
lahf
jnp
out
aas
adc
pushf
arpl
xor
in
(bad)
cmps
in
push
push
in
sub
xchg
gs
fild
(bad)
lock
dec
popa
xchg
cli
mov
data16
in
inc
sti
mov
jp
(bad)
loope
jle
adc
mov
(bad)
leave
loope
loop
sbb
push
pop
dec
and
jb
lods
adc
push
sar
and
cmp
jmp
repz
jne
xor
mov
retf
dec
jno
mov
sub
pop
sar
stos
xor
(bad)
test
ret
ins
xlat
pop
fnstsw
sti
outs
dec
outs
cmp
ror
and
jmp
out
adc
adc
sub
movs
jmp
xor
inc
push
scas
adc
sbb
jle
or
ins
cmps
or
cmp
mov
(bad)
test
mov
sub
and
imul
pop
(bad)
pop
push
icebp
cmps
jbe
(bad)
sub
and
std
inc
repz
inc
leave
jmp
xor
loope
add
xchg
shl
inc
or
jmp
clc
jl
jle
imul
jl
gs
sahf
mov
jmp
imul
and
gs
sbb
adc
pop
aad
mov
sub
xor
mov
retf
cmc
add
xchg
pop
ror
cmp
call
cli
xor
sbb
cmp
jl
xchg
sbb
fwait
cmp
xor
jmp
pop
sub
mov
retf
hlt
inc
jbe
mov
pop
sbb
jne
xchg
xor
jle
adc
mov
and
ss
mov
js
leave
or
and
push
test
int3
sbb
mov
call
sub
call
and
das
dec
xor
ficomp
fisub
jns
mov
rol
cmps
mov
mov
ss
shl
jno
push
ss
and
jle
mov
je
addr16
inc
in
xchg
jp
js
les
dec
sbb
sub
dec
stos
mov
es
test
stos
xchg
or
pop
jmp
dec
mov
cld
arpl
sub
pop
sar
and
dec
scas
jno
in
mov
into
and
mov
adc
jno
push
out
xchg
or
aad
cmp
dec
mov
adc
aam
pop
aad
std
addr16
pop
mov
mov
popf
icebp
(bad)
(bad)
in
addr16
pop
fistp
cdq
stos
pop
sbb
out
lea
(bad)
fs
lods
mov
cmps
push
xchg
test
and
fdiv
(bad)
sbb
fs
inc
sub
mov
cmp
in
pusha
sbb
adc
ds
pop
jmp
xchg
es
(bad)
fld
sub
addr16
out
loop
mov
mov
xor
push
movs
jnp
push
sub
sbb
push
sbb
leave
pslld
(bad)
xchg
cmc
(bad)
sbb
sub
clc
mov
pop
imul
xchg
in
sbb
add
js
pop
xor
stos
xchg
pop
imul
aas
xchg
pop
xor
mov
ficom
push
sbb
leave
push
sar
hlt
daa
sbb
lods
cmp
add
(bad)
stos
adc
cs
xor
jmp
cmp
push
or
jle
mov
cmps
ins
ficomp
je
jmp
pop
xchg
sbb
push
shl
pop
dec
sbb
and
or
outs
bound
out
pop
jmp
xchg
lea
mov
mov
sub
cs
call
dec
sbb
xchg
sbb
sbb
dec
dec
ficom
mov
call
mov
cmps
add
mov
lds
inc
dec
leave
xchg
mul
jb
push
push
adc
jb
in
sub
dec
and
cmp
loop
fimul
mov
inc
shl
call
push
test
jmp
ins
enter
cmc
loope
cmc
add
sbb
sub
xor
mov
lds
js
mov
sbb
stos
push
push
sbb
das
popa
jb
and
fs
imul
test
cmps
fsubp
lods
sub
xchg
add
jno
sub
dec
mov
(bad)
lods
jo
xchg
int3
pushw
mov
sti
cdq
loop
mov
lods
stos
es
scas
retf
nop
jmp
in
add
pop
shl
popa
or
or
mov
fild
jae
pop
mov
push
call
inc
fs
scas
inc
vmovd
pop
ficomp
sub
clc
inc
xchg
hlt
jbe
inc
inc
dec
ficomp
push
dec
sbb
ret
mov
fwait
call
mov
mov
pop
sub
mov
inc
pop
adc
pusha
add
mov
test
adc
push
sti
repz
in
pusha
iret
fldenv
pop
mov
push
sbb
sub
aam
fdivp
fcomp
mov
dec
push
sbb
stos
xor
jle
cs
sbb
or
out
add
jb
cmp
or
inc
jne
dec
sub
pusha
fistp
add
pop
fisttp
push
sbb
add
jmp
mov
outs
iret
test
sbb
ret
(bad)
ficomp
imul
dec
dec
push
cli
data16
cmp
cmp
gs
not
pop
hlt
or
adc
popf
dec
retf
xchg
cmp
rol
sbb
xor
out
je
(bad)
cmps
in
retf
lods
fs
xchg
jmp
pop
imul
inc
test
ret
sbb
out
mov
sub
sbb
push
(bad)
ja
cwde
retf
(bad)
push
into
dec
ja
cmps
(bad)
and
sbb
imul
add
push
(bad)
(bad)
xlat
xchg
lock
xchg
inc
push
gs
xchg
and
xchg
lock
mov
push
inc
addr16
sub
repz
clc
mov
mov
sbb
jne
lahf
mov
and
bound
pusha
cld
adc
sahf
mov
adc
in
jb
in
sbb
mov
jb
sbb
nop
rol
cwde
xchg
add
aaa
mov
ror
jecxz
stos
xor
sahf
enter
mov
pop
frstor
push
mov
shl
and
cmp
dec
or
and
fwait
jmp
cmc
sub
push
mov
test
sahf
sbb
out
sbb
jl
ffree
adc
nop
out
dec
fsubr
bound
clc
jle
inc
dec
inc
in
or
lods
loope
je
xor
inc
stos
inc
xchg
xchg
dec
shl
mov
shr
cwde
sbb
mov
mov
shl
jge
rdpmc
mov
nop
xchg
or
xchg
dec
mov
mov
test
pop
mov
sar
int
cmp
lahf
dec
or
xchg
movs
mov
or
dec
jbe
mov
mov
mov
jmp
out
arpl
cld
mov
or
pop
adc
(bad)
pop
in
mov
and
lea
mov
pop
dec
(bad)
mov
fnstsw
mov
jmp
and
inc
fistp
jecxz
add
xchg
or
ror
outs
ins
pop
jb
xchg
inc
fstp
lahf
add
or
xchg
(bad)
xlat
cwde
dec
xchg
xor
jecxz
sub
sub
pop
aad
xchg
data16
ror
dec
dec
popf
mov
jo
inc
inc
mov
sahf
mov
xchg
ds
test
jle
mov
lea
dec
(bad)
pop
jl
xlat
shl
push
sub
and
or
dec
or
sbb
in
push
add
add
fst
(bad)
or
xlat
mov
xchg
clc
mov
mov
bnd
bound
mov
mov
mov
imul
cld
(bad)
mul
pop
test
or
mov
add
xor
jge
pop
or
push
imul
mov
les
mov
push
les
mov
or
(bad)
addr16
cmc
in
or
fst
out
sub
and
jl
jl
scas
xor
dec
ret
aas
enter
cmps
ror
jne
inc
mov
mov
enter
fild
xchg
ror
sahf
repz
jle
pop
xchg
(bad)
xchg
xchg
adc
scas
sbb
xchg
arpl
std
xor
dec
push
push
lock
push
inc
test
pop
icebp
outs
push
f2xm1
stc
aam
push
push
and
xchg
jnp
call
xchg
mov
cmc
neg
pop
aas
inc
xor
lahf
loope
pop
seto
add
jnp
movs
xor
pop
movs
pop
dec
lea
cmp
test
pop
inc
adc
sub
call
scas
inc
push
xchg
xor
xchg
call
cmp
cmovp
jnp
and
(bad)
or
ss
call
loope
lods
xchg
fbld
xchg
add
out
pushf
or
into
hlt
test
rdmsr
jp
scas
pop
les
jecxz
push
add
xor
mov
and
mov
in
push
fidivr
push
das
xchg
test
or
sar
push
mov
aaa
outs
dec
ins
mov
std
jle
adc
cmp
sbb
or
pop
pop
jno
fisttp
push
push
adc
jmp
sbb
mov
sub
push
arpl
imul
cmps
hlt
or
data16
pusha
xor
sbb
mov
or
ss
or
mov
push
jmp
les
test
pop
(bad)
inc
cwde
or
cmp
and
aaa
loopne
sar
ret
jbe
sub
test
inc
and
loopne
fstp
mov
inc
sbb
inc
and
jbe
inc
mov
jl
dec
pop
outs
pop
mov
adc
cld
call
data16
in
retf
and
in
out
inc
dec
popa
mov
mov
loopne
ss
mov
jae
pop
sti
addr16
in
les
push
bnd
dec
popa
jmp
sbb
fs
cmps
stc
and
cmp
ja
sub
or
xlat
out
sub
cld
sbb
stos
test
and
sub
jp
inc
lods
xor
xchg
mov
popa
outs
stos
mov
pop
push
clc
mov
push
push
jp
hlt
in
sbb
mov
xchg
add
sbb
inc
xor
mov
sahf
das
or
xlat
in
daa
shr
mov
jecxz
shl
inc
mov
and
adc
test
and
inc
cmps
pop
inc
scas
icebp
mov
fcos
stos
fidivr
je
and
je
push
push
out
(bad)
mov
xchg
cld
xor
mov
push
xor
sbb
xchg
out
jmp
sub
call
mov
cmp
das
inc
test
out
and
xchg
ret
xor
xchg
mov
dec
cmp
addr16
mov
repz
fild
mov
mul
jns
call
inc
jp
in
mov
pop
lahf
xor
mov
enter
and
mov
add
or
retf
dec
or
sbb
push
repnz
mov
xor
shl
addr16
stc
sub
mov
stos
outs
xor
xor
pop
cmp
pop
fwait
aad
retf
gs
mov
std
inc
push
mov
push
scas
jp
and
mov
and
xor
std
mov
out
xchg
aaa
pop
dec
pop
or
(bad)
cmp
pop
ror
push
pop
jg
retf
neg
fidiv
jg
ds
pop
add
and
fild
dec
nop
(bad)
(bad)
fstp
mov
and
add
pusha
iret
pop
pop
and
push
int
cmc
add
lods
add
cmp
mov
mov
loop
adc
mov
dec
dec
in
test
pop
xor
pusha
jae
fadd
addr16
add
xor
mov
in
stos
ret
pop
xchg
into
cmps
addr16
loope
je
fwait
xlat
int3
pop
inc
sbb
xchg
sub
js
xor
xor
xor
add
inc
test
clc
jg
mov
stc
(bad)
push
dec
push
dec
sbb
out
fnstenv
fsubr
sbb
outs
rcr
adc
push
out
idiv
sbb
or
pop
out
xchg
or
rol
adc
or
jge
mov
jne
xchg
sub
sub
cmp
retf
jnp
push
scas
pop
xchg
outs
or
xor
xor
loop
lock
inc
cmp
nop
or
push
or
enter
mov
ds
cli
sub
into
dec
in
pop
mov
fsubr
fucomip
iret
push
sbb
mov
call
mov
sbb
xchg
call
fsub
jle
enter
inc
data16
fs
sbb
sahf
mov
cmp
and
sbb
dec
scas
retf
fs
sub
mov
fs
and
imul
xchg
cli
inc
imul
mov
icebp
inc
mov
into
sahf
(bad)
mov
jl
clc
sbb
icebp
jge
pop
inc
adc
mov
popa
fmulp
outs
xchg
mov
mov
cmp
xor
inc
in
inc
std
cmp
mov
popa
pusha
daa
ror
cdq
or
lods
jae
mov
cmp
mov
inc
ins
and
dec
ret
call
sbb
loop
bound
or
iret
sar
xchg
mov
rcr
test
sub
push
add
xor
gs
aas
push
xor
push
movs
cmp
push
xchg
sbb
jg
cmp
push
push
neg
jo
pop
mov
test
sub
std
push
daa
jno
in
pop
pop
or
icebp
push
or
jns
inc
movs
or
clc
add
adc
loop
mov
jmp
add
in
int
or
mov
inc
inc
add
sub
mov
loope
inc
jb
in
push
sbb
mov
clc
fild
daa
and
mov
dec
mov
push
adc
enter
inc
mov
dec
neg
sahf
mov
imul
lock
pop
xchg
sub
and
xchg
arpl
ins
adc
sahf
inc
push
push
and
fistp
neg
pusha
inc
jb
pop
push
les
sbb
mov
mov
xor
push
cmp
out
sbb
mov
scas
arpl
retf
jmp
xchg
sub
add
popf
loope
jmp
adc
jmp
ret
stc
push
or
mov
mov
test
arpl
inc
sub
aas
and
inc
movs
arpl
pop
xor
cmc
add
inc
or
aad
mov
fdivp
call
ja
dec
or
sub
lock
sbb
aas
cmps
cmps
push
jae
jne
adc
imul
xchg
pop
adc
add
je
std
movs
xlat
fist
mov
fcomip
xchg
pop
lods
push
add
mov
(bad)
push
fbstp
call
in
sub
sbb
sub
xchg
je
xor
stc
call
and
mov
and
repz
mul
ror
adc
cmps
cmp
and
repz
loopne
xor
jmp
adc
out
jle
das
or
out
stos
cli
and
std
ins
add
xchg
jl
lods
int
call
xchg
mov
xchg
xor
sar
inc
pop
(bad)
jp
xor
xor
(bad)
cmp
pushf
add
jl
pop
lods
test
xchg
inc
movs
outs
(bad)
mov
xchg
out
mov
mov
shr
ret
xchg
inc
aas
inc
stc
adc
hlt
xchg
jne
xor
(bad)
xchg
sub
adc
and
and
dec
and
sub
inc
addr16
jns
add
mov
xor
dec
js
cmps
popa
inc
mov
cs
jmp
mov
daa
dec
loopne
bound
je
cmp
mov
xchg
xchg
xchg
mov
jg
mov
in
popa
mov
scas
and
add
mov
ror
stc
jae
je
jl
push
ret
mov
push
cld
enter
cmc
push
add
loopne
ror
jnp
jp
sub
or
sbb
pop
mov
out
scas
dec
ret
sub
xchg
xor
cmp
dec
aaa
sti
popf
cmps
push
cdq
inc
aam
adc
jmp
pusha
scas
in
pop
mov
sbb
push
sti
push
xchg
(bad)
jmp
imul
(bad)
in
loopne
xchg
ret
push
int
jmp
ins
cmp
inc
lds
mov
(bad)
popf
mov
aad
jge
dec
inc
adc
xor
jae
xor
push
jno
dec
(bad)
xor
push
dec
ret
sbb
scas
cld
mov
mov
rcr
jmp
add
inc
and
sbb
or
stos
shr
cmps
and
push
ds
push
aam
xchg
nop
pop
inc
adc
xchg
pop
mov
jbe
sbb
jmp
iret
adc
je
enter
icebp
dec
mov
frstor
fcom
sub
dec
retf
dec
jmp
rcr
jmp
out
sub
ss
xchg
lds
loopne
cmp
jl
daa
out
mov
stos
xlat
adc
mov
push
aam
inc
fsub
pop
adc
push
inc
push
mov
aaa
or
jbe
mov
adc
pop
and
retf
jg
xor
jno
imul
test
mov
lods
test
push
xchg
fadd
fld
dec
dec
cmp
pop
les
and
aam
dec
sar
xor
icebp
imul
mov
lods
inc
or
test
ins
stos
sbb
dec
mov
aad
popf
xor
cwde
in
ins
stos
cmp
xchg
mov
aas
cmps
mov
inc
(bad)
xlat
(bad)
sahf
mov
addr16
mov
push
jmp
movs
fidiv
ss
cmp
iret
and
lods
fmul
sub
pop
(bad)
xlat
mov
mov
shl
cli
sub
ss
sbb
cmp
call
arpl
(bad)
sub
mov
push
inc
(bad)
(bad)
mov
xor
mov
mov
and
inc
or
push
gs
fistp
in
adc
cmp
xor
xchg
xor
jmp
mov
jb
out
stc
clc
fmul
adc
inc
sbb
idiv
push
enter
and
test
sbb
retf
sub
pop
jo
fwait
loopne
call
out
not
push
ret
xlat
movs
xor
jno
ins
sti
mov
ins
inc
or
pop
retf
cmp
es
stc
sub
daa
pushf
dec
sbb
test
dec
js
fdiv
movups
xlat
add
push
push
cmps
cmp
mov
jb
int3
imul
xor
jp
outs
push
movs
push
add
loopne
and
scas
es
mov
add
sbb
out
and
fcmovnb
and
pop
jnp
add
and
inc
add
idiv
test
xor
pusha
xchg
sub
sbb
jecxz
cmps
sar
add
push
sbb
lock
addr16
ds
cwde
(bad)
adc
stos
pop
fcomp
rcl
xchg
adc
fbstp
and
out
aaa
lods
fisubr
mov
inc
mov
jge
in
sbb
fsubr
sar
test
nop
sbb
cld
les
out
push
bound
imul
inc
pop
sub
imul
aaa
ss
cmp
inc
mov
jae
mov
imul
mov
mov
jp
mov
sbb
ret
retf
stos
hlt
jge
push
or
mov
lods
push
mov
push
sbb
pop
movs
cmp
in
sbb
push
cli
in
leave
icebp
xor
push
pop
addr16
stc
pop
or
movs
xchg
inc
add
ror
and
inc
dec
in
lahf
sahf
int3
icebp
sahf
std
hlt
imul
sbb
addr16
arpl
mov
add
out
jg
jnp
rcr
pop
shl
imul
aad
sbb
push
pop
xor
enter
cmp
lods
mov
aaa
jmp
into
pop
jae
inc
shr
fst
repnz
cmp
add
lahf
cmp
mov
mov
xor
icebp
cli
jae
and
sub
fst
or
add
in
mov
cmp
fistp
ret
xchg
add
jne
inc
cmps
and
pop
ins
push
add
mov
add
or
fsubr
mov
mov
jne
adc
mov
out
dec
push
cmps
mov
mov
ss
dec
ja
sub
push
sahf
push
pop
fs
pop
addr16
test
add
xor
mov
pop
push
and
into
les
loopne
pop
ret
push
jge
jmp
jg
cmp
retf
mov
sub
sbb
inc
sub
mov
data16
xchg
cmp
lea
xchg
xchg
loope
or
(bad)
mov
cdq
stos
or
jb
mov
jle
add
cmp
dec
xchg
xlat
xor
push
cmps
and
or
sub
jae
gs
and
movs
mov
ds
mov
cmp
jp
xchg
nop
cld
pop
or
stc
and
sub
cmp
adc
js
adc
inc
mov
sub
xor
inc
xchg
cmp
std
hlt
rol
aad
mov
mov
jnp
outs
mov
clc
mov
and
xchg
sahf
sub
in
fcom
xchg
mov
out
(bad)
push
sub
sub
clc
stc
xchg
call
fst
pop
sub
sar
and
ins
xchg
test
xor
out
or
test
popa
out
jge
xchg
push
jg
rcl
sbb
xchg
fs
and
movs
jl
push
cld
jnp
jecxz
cmp
cld
xor
shl
loope
sub
(bad)
fiadd
xchg
ja
add
jg
adc
mov
add
xchg
gs
ins
adc
xchg
or
test
push
sbb
pop
outs
adc
inc
inc
xchg
inc
fcom
loop
cmp
fwait
push
cvtdq2ps
mov
out
dec
aas
test
push
cmp
mov
dec
dec
jbe
pusha
xor
and
adc
jbe
mov
(bad)
ficomp
and
xor
xor
inc
mov
pop
(bad)
xchg
or
adc
pop
stc
pop
or
arpl
or
loope
int
loop
adc
int
ret
or
fsub
pop
mov
jns
int3
push
out
xor
std
adc
mov
push
cwde
rcl
mov
(bad)
mov
enter
push
sbb
xor
sub
int
inc
jo
shl
rol
ins
pop
dec
ss
mov
mov
sub
pop
xor
and
(bad)
test
xchg
cmp
scas
fiadd
inc
mov
shl
stc
movs
cmp
sub
or
sti
or
hlt
jg
cld
mov
adc
push
outs
popa
push
test
jmp
jge
imul
pop
push
out
cld
stc
lock
(bad)
pop
dec
xchg
fcmovnu
cmp
out
pop
or
push
and
pushf
hlt
xor
inc
cs
shl
cmps
in
pushw
and
(bad)
scas
and
ins
push
mov
xor
pop
dec
jae
xchg
call
lock
movs
adc
push
jmp
aam
imul
adc
or
push
scas
or
ficomp
leave
aam
mov
pop
aad
mov
out
push
sti
inc
cmp
call
mov
add
ret
leave
shr
jl
xor
mov
inc
inc
xchg
mov
jns
and
dec
and
jl
push
push
xor
add
les
mov
xor
not
mov
add
or
pop
xor
mov
mov
int
outs
sbb
mov
cmp
frstor
bound
add
sbb
jae
sub
sub
push
mov
hlt
(bad)
fiadd
mov
add
popa
jns
mov
mov
pop
push
es
fisub
dec
out
xchg
imul
adc
mov
aas
xor
push
cmp
inc
lock
jae
inc
cdq
fs
mov
xor
in
(bad)
fs
ror
mov
jb
add
dec
mov
frstor
inc
movs
clc
test
fild
rcl
mov
xchg
ret
pop
idiv
pop
sbb
cld
psrad
shl
inc
mov
dec
rol
iret
scas
ret
xor
push
add
push
out
push
dec
shl
test
jns
pusha
pop
retf
data16
mov
lahf
rol
mov
movs
pusha
push
jb
and
xchg
jnp
sbb
mov
push
enter
sub
les
clc
test
mov
loopne
(bad)
push
daa
ja
pop
mov
jge
jns
or
iret
ret
dec
sahf
or
loope
ror
ficomp
pop
fwait
push
stc
and
mov
xchg
push
sub
xor
push
mov
div
mov
mov
in
push
adc
popa
inc
xchg
xor
sbb
in
dec
ret
fadd
repnz
nop
mov
or
(bad)
inc
inc
sub
inc
xchg
repz
push
or
dec
retf
mov
fisttp
js
jge
out
and
lds
shl
mov
arpl
int3
int3
or
jle
das
es
sub
or
call
aad
cdq
add
(bad)
lahf
test
loopne
and
push
and
ficomp
sar
xchg
xor
cwde
or
cmp
sar
enter
cld
sbb
pop
std
sti
test
mov
or
fst
into
and
icebp
std
shl
jmp
mov
sti
fmul
push
loope
xor
popa
sub
cdq
fcomp
ss
push
ret
xor
inc
or
out
fdiv
xor
retf
aaa
mov
mov
cmp
push
leave
call
push
jnp
pop
shl
pop
pop
sbb
es
mov
mov
mov
inc
stc
stos
es
addr16
mov
iret
jg
cmc
inc
rol
or
cmp
aaa
and
(bad)
add
sbb
xor
adc
movs
sub
out
lods
mov
adc
sub
sub
xor
fs
ins
mov
push
in
pop
sbb
std
test
repnz
(bad)
jl
jg
jle
outs
scas
fstp
sub
(bad)
jno
push
ror
adc
(bad)
jns
mov
hlt
popa
in
mov
jl
in
icebp
jg
in
mov
add
sub
jmp
jmp
repnz
adc
int
shl
repnz
das
aad
xor
sub
adc
into
sbb
cld
in
mov
sbb
inc
xor
adc
adc
sbb
lahf
pop
lahf
push
int3
(bad)
jg
ins
jg
cmps
out
stos
(bad)
dec
and
pushf
add
mov
jl
dec
mov
(bad)
mov
inc
sti
jno
pop
push
(bad)
and
jne
push
fidivr
(bad)
cdq
jmp
cmc
pop
pop
scas
scas
or
cld
or
gs
in
jns
push
(bad)
xor
out
das
push
xor
mov
mov
movs
lods
ss
(bad)
hlt
(bad)
xor
and
adc
pop
add
out
test
add
xor
sub
outs
inc
or
repnz
push
sub
jo
(bad)
or
dec
push
enter
mov
add
inc
cmp
add
shl
push
and
pop
mov
sub
pushf
mov
inc
cmps
and
xchg
push
xchg
xor
lds
push
sub
xchg
(bad)
mov
rcl
lock
cdq
mov
or
jge
xor
nop
psubq
mov
push
cmp
xor
int3
ds
jmp
xchg
hlt
mov
mov
xchg
test
ja
jns
pop
fs
fcmovu
push
push
jbe
pop
sub
jnp
mov
jbe
inc
rcl
cmp
sti
dec
inc
retf
pop
dec
aaa
jge
clc
cmp
dec
mov
outs
xor
mov
test
push
pop
pop
mov
xor
mov
icebp
jp
sub
and
clc
add
outs
mov
pop
popa
(bad)
sti
mov
fdiv
std
fwait
pop
sbb
inc
ja
adc
push
(bad)
ja
sar
mov
mov
push
mov
mov
jmp
push
mov
mov
aaa
xor
call
jne
pop
mov
loopne
nop
push
repz
and
mov
or
call
mov
mov
sbb
out
es
gs
aad
pop
dec
pop
hlt
call
sar
push
dec
xchg
cmps
out
(bad)
je
ret
add
outs
xchg
enter
xchg
mov
neg
fs
pop
inc
push
pop
cdq
pop
push
(bad)
jmp
je
stc
pop
xchg
push
cli
inc
das
push
cmp
cmc
pop
mov
test
dec
(bad)
movs
int
mov
mov
mov
clts
(bad)
jbe
loope
fcmovnb
jne
daa
mov
test
cmp
bound
and
cwde
addr16
push
and
jmp
xor
sahf
cmp
or
mov
and
jb
stc
add
xor
fnstenv
adc
mov
hlt
test
cmp
hlt
sub
add
and
pop
cmps
xchg
mov
pop
adc
ja
mov
or
mov
jmp
and
out
inc
test
adc
cmp
xchg
sub
scas
sbb
mov
dec
pusha
fld
sahf
or
mov
into
or
xchg
cmp
imul
xchg
inc
sub
jmp
inc
sbb
cmp
mov
hlt
pop
or
jle
push
retf
nop
jg
aaa
cmovl
js
or
mov
sub
cmp
mov
scas
daa
(bad)
push
scas
inc
call
dec
fstp
or
loope
repz
call
or
pop
int
mov
lds
lods
adc
pop
lds
je
mov
icebp
pop
cmp
pop
dec
out
stos
xor
out
lods
mov
push
std
test
push
pop
adc
test
jnp
mov
(bad)
push
fnsave
fld
fxch
and
jns
(bad)
aam
ret
xor
fisub
cmps
pop
(bad)
adc
and
(bad)
hlt
add
xchg
sbb
push
xchg
fimul
xchg
xchg
push
mov
dec
(bad)
jb
clc
sub
inc
leave
repz
jl
rol
test
stos
push
and
pop
dec
add
xor
int3
retf
xchg
fiadd
or
or
cmp
push
popf
sbb
sahf
ins
jle
fldcw
xor
rol
adc
lahf
loopne
or
aaa
jbe
adc
mov
or
adc
cmp
aaa
cmp
xor
dec
or
mov
gs
dec
and
fmul
and
and
into
or
jno
mov
xchg
jae
mov
cmps
clc
pop
stc
test
std
mov
push
gs
cmp
push
stos
lock
sbb
mov
idiv
inc
push
inc
fdiv
les
sub
add
sbb
sbb
aaa
fstp
or
adc
ss
jmp
pop
scas
add
sti
jbe
shl
or
sub
es
iret
cld
add
mov
xor
and
cmc
pop
mov
pushf
stc
sbb
test
stc
inc
fsubr
idiv
jg
xchg
mov
imul
inc
jle
and
mov
xor
mov
and
cld
(bad)
sbb
(bad)
call
lods
cmp
sbb
out
cwde
jmp
jmp
stos
popf
lods
imul
pop
(bad)
aas
lahf
add
or
test
test
or
loope
push
ins
add
mov
(bad)
out
push
ins
fs
mov
test
(bad)
jmp
jg
ret
push
adc
lods
in
int
aad
ins
push
data16
icebp
or
mov
cmps
sahf
xchg
mov
jle
pop
neg
xchg
les
mov
and
xchg
pop
(bad)
sti
fwait
pop
mov
in
fcom
xor
in
loop
mov
ja
cmc
pop
push
pop
(bad)
mov
jg
push
mov
int
pop
sbb
push
repnz
jo
push
pop
fwait
lahf
lods
cmp
dec
mov
jae
comiss
fisubr
cmps
lock
cmc
inc
add
retf
pop
mov
mov
int
rcl
out
mov
cmp
jno
sub
enter
jp
mov
and
jecxz
(bad)
add
imul
movs
sti
mov
or
out
call
inc
sbb
pop
retf
cwde
inc
clc
xor
bound
sbb
inc
aad
repz
add
or
sbb
pop
xchg
adc
xchg
int3
pop
pop
pop
fisubr
xor
lahf
xchg
test
scas
scas
repnz
out
or
shl
pop
test
mov
shr
cmps
adc
(bad)
retf
mov
fs
in
shl
mov
xchg
dec
imul
movs
frstor
dec
in
fisubr
add
jbe
fadd
sbb
mov
xchg
cld
push
lock
sub
sbb
(bad)
push
lods
loop
dec
test
call
rcr
shl
ror
push
cmp
ins
int3
xor
shl
mov
(bad)
sbb
sbb
imul
adc
pop
push
aad
push
stos
clc
push
adc
nop
xor
mov
and
sbb
test
jg
mov
and
mov
xor
xchg
popa
pop
(bad)
je
or
into
dec
add
push
cmp
out
sub
div
sub
imul
rol
jbe
adc
adc
lds
in
pop
ss
retf
xor
sub
sar
pop
stos
cwde
sub
loopne
pop
sbb
mov
jmp
push
int3
pop
aaa
loope
push
dec
jnp
mov
popf
fucomi
clc
outs
es
xchg
cmp
out
push
sbb
pushf
fistp
or
int
jg
rcl
rcr
hlt
pop
mov
stos
loopne
inc
push
aaa
mov
adc
jmp
xchg
push
arpl
and
mov
mov
mov
cmp
push
jae
ss
jmp
jne
and
aad
imul
cmc
retf
adc
rcl
jno
cli
inc
add
mov
fadd
add
adc
add
cwde
fnsave
ret
add
mov
dec
dec
shr
mov
pop
jmp
ret
fldenv
pop
retf
data16
mov
dec
push
xchg
retf
iret
fxrstor
es
mov
imul
xor
pop
mov
in
js
lahf
xchg
adc
add
xor
mov
cmps
fld
ja
and
adc
stos
jnp
cwde
cmp
sub
fisub
aas
imul
pop
mov
add
pop
cmp
movntps
(bad)
mov
xor
xchg
leave
aaa
je
dec
mov
mov
add
out
aam
push
test
and
bound
enter
jb
lods
(bad)
std
stc
test
adc
mov
mov
xchg
or
sbb
in
in
mov
mov
cdq
mov
daa
dec
aad
ss
add
jge
xchg
fld
ins
dec
add
ret
push
push
sub
push
lods
cdq
jmp
xchg
jp
dec
je
es
int3
jl
(bad)
xor
jmp
outs
jg
js
addr16
je
in
sub
and
push
lahf
pushf
lahf
push
or
fucomip
dec
cmp
add
dec
mov
cwde
test
and
or
or
test
cmp
jge
xchg
pop
jmp
inc
inc
push
mov
cmp
adc
lods
dec
cmp
test
cmp
movs
mov
pusha
adc
mov
mov
sar
int3
push
movs
cmp
mov
fld
xor
leave
mov
ret
das
adc
(bad)
adc
pop
in
cmp
mov
shr
adc
ja
outs
ins
pop
mov
fs
push
std
cdq
stos
fldenv
mov
dec
outs
aad
xor
jne
or
inc
call
cli
aad
and
test
data16
xchg
sti
and
(bad)
cli
lock
int3
fadd
ficomp
aad
imul
loopne
sbb
sub
xchg
rol
sub
ss
xchg
xor
repnz
(bad)
fnstcw
sub
sub
clc
inc
rol
je
sub
adc
stos
xchg
and
inc
mov
in
clc
jmp
clc
adc
push
repnz
push
dec
adc
xor
stos
inc
in
mov
in
xchg
fiadd
fisttp
sub
cmp
inc
outs
call
enter
loopne
(bad)
push
cwde
call
outs
iret
mov
into
es
xlat
inc
mov
xchg
sbb
mov
stos
sti
dec
aad
imul
gs
test
and
pusha
in
stos
add
loopne
dec
add
movs
es
jmp
add
in
adc
icebp
test
test
pushf
jmp
gs
adc
add
(bad)
mov
mov
or
shl
mov
imul
repz
icebp
mov
pop
jo
idiv
dec
lods
ins
pop
lods
xor
cli
xchg
fistp
out
or
les
imul
lahf
jno
imul
es
ja
rol
ss
or
idiv
shl
mov
aad
stos
popa
adc
sbb
aas
sub
push
adc
push
mov
int3
dec
cld
neg
xchg
into
push
out
push
les
xchg
push
pop
inc
dec
sbb
inc
fbld
lea
add
xchg
mov
jecxz
cmps
ja
and
push
inc
js
sbb
push
ja
pusha
jb
pop
sbb
ins
aaa
push
out
xchg
icebp
stc
fild
mov
pop
sub
pushf
dec
fstp
icebp
out
scas
mov
pop
hlt
sub
imul
data16
test
push
pushf
inc
inc
inc
jl
stos
shl
xor
inc
stos
push
mov
(bad)
shl
mov
pushf
lock
pop
mov
daa
push
or
shr
das
adc
ret
dec
sti
adc
bound
js
das
pop
mov
sbb
(bad)
push
aad
add
lods
movs
dec
mov
ins
sar
jbe
adc
sub
outs
mul
xchg
adc
fld
xchg
shl
cmp
inc
add
iret
push
jno
shl
mov
adc
lahf
xor
jp
inc
(bad)
loop
test
adc
js
mov
jae
sub
or
loope
aad
sbb
xor
shl
(bad)
jg
leave
rcl
mov
iret
test
push
jmp
fist
pop
jecxz
or
jmp
jns
and
add
mov
push
aad
inc
push
inc
(bad)
(bad)
imul
sub
or
jae
daa
push
xor
xchg
and
imul
int
cdq
adc
fiadd
mov
mov
ins
add
sbb
test
jmp
mov
bound
aam
js
add
out
stos
call
adc
pop
test
repz
lea
das
push
cli
shl
outs
dec
call
mov
adc
dec
rcl
push
mov
loopne
ret
loopne
dec
jge
loopne
xchg
and
xchg
sub
stos
daa
xor
stos
inc
ret
cmp
loop
mov
popa
es
sbb
aaa
ins
mov
or
push
or
sbb
xchg
test
xchg
fild
in
mov
cmp
lock
bound
mov
aas
mov
jp
inc
dec
sar
cmp
dec
lods
and
cmp
and
xchg
aam
retf
int3
dec
sbb
or
sub
ss
push
pop
mov
sbb
xchg
xor
xchg
(bad)
cmps
or
mov
mov
fdiv
xchg
jnp
nop
jge
dec
or
test
push
mov
ja
and
and
mov
daa
cld
ins
iret
jl
pop
loopne
inc
mov
aas
mov
popf
cmp
fisttp
cs
leave
cmp
sahf
(bad)
pop
cmps
pop
cs
push
mov
xchg
ret
jbe
jne
aad
sar
je
pop
dec
dec
retf
call
fs
nop
cmp
das
shr
pop
das
xor
and
xor
movs
shl
test
add
ds
div
sbb
cmp
mov
call
aad
xchg
cmp
jne
jb
iret
outs
ins
repnz
inc
cmps
sub
test
test
mov
and
add
pop
inc
sbb
add
sub
sbb
test
dec
in
adc
sti
jp
jecxz
outs
dec
sqrtps
rcl
ror
rcl
clc
hlt
ror
push
sti
jle
pop
retf
stos
pop
dec
pop
dec
loopne
mov
xlat
enter
pop
inc
add
fisub
ins
sbb
sub
outs
jmp
add
cmp
out
in
mov
cmp
ins
sbb
jecxz
cli
rcl
shl
lods
jne
push
or
sub
jg
jl
call
pushf
mov
xor
repz
xchg
jbe
sub
fsubr
ret
push
xor
scas
cmp
pop
fcom
retf
aam
pop
cmp
(bad)
push
add
jmp
fst
fist
dec
cdq
mov
jmp
sbb
inc
retf
sub
mov
iret
xchg
out
xchg
shl
push
gs
inc
jle
aas
int3
call
and
scas
mov
cmp
add
retf
popf
cmp
inc
lods
jmp
jecxz
cdq
mov
pop
shl
mov
sbb
int
shl
sbb
pop
mov
lods
mov
jecxz
rcl
adc
retf
adc
dec
adc
dec
pushf
stos
dec
mov
test
out
adc
gs
or
loop
test
cs
aaa
jae
movs
jb
cmp
dec
in
repz
sub
sbb
sbb
jb
pop
hlt
sbb
aas
xor
adc
pop
mov
lahf
clc
retf
push
inc
das
mov
lods
ret
xor
push
or
mov
stc
push
int3
rcl
xchg
retf
test
imul
or
out
arpl
mov
push
sar
fisub
(bad)
jge
push
cmp
xor
sbb
sub
push
push
cwde
mov
repz
retf
mov
rcl
cmc
or
(bad)
mov
xchg
pusha
push
mov
mov
sub
lahf
addr16
jp
std
sub
push
cmps
add
adc
popa
xchg
adc
dec
pop
adc
xor
mov
and
dec
mov
mov
mov
hlt
mov
xchg
outs
outs
in
ss
inc
push
xchg
adc
ficomp
popf
mov
mov
leave
inc
adc
leave
mov
or
test
pushf
repnz
or
lods
imul
jmp
jecxz
or
out
fstp
outs
cmc
scas
popf
loopne
fs
enter
std
mov
icebp
or
shl
adc
fisub
add
inc
mov
movs
mov
jns
data16
push
pop
pop
cmp
push
retf
and
loopne
jno
pop
adc
push
xchg
lds
cmp
mov
retf
and
arpl
(bad)
mov
imul
dec
hlt
sbb
(bad)
fcmovne
jnp
(bad)
mov
xlat
add
cmps
xor
push
movs
adc
icebp
lahf
push
xor
add
jnp
pop
test
push
scas
mov
pop
xor
(bad)
cmp
retf
sub
sub
inc
jecxz
ficom
ror
imul
lea
arpl
mov
inc
cs
call
pop
and
sub
repnz
mov
sbb
xchg
adc
mov
or
fs
(bad)
dec
xchg
adc
sbb
xor
scas
add
pop
push
pop
fs
push
pop
ret
fist
xor
jmp
cmp
inc
or
jg
push
das
dec
cmc
mov
test
inc
inc
cli
sar
or
pop
push
sub
xchg
or
push
or
mov
(bad)
pop
mov
and
cmp
test
retf
xor
icebp
and
movs
icebp
test
jbe
mov
jbe
jo
push
outs
cmp
or
jle
jns
cmps
ins
or
push
icebp
(bad)
hlt
dec
aam
push
or
and
add
cdq
ins
fyl2x
inc
movs
push
inc
in
xor
mov
and
and
dec
sbb
add
mov
inc
or
(bad)
lods
xchg
cdq
into
scas
mov
xchg
leave
lods
xchg
sub
mov
xor
push
sahf
lock
retf
sub
xchg
fs
call
and
pop
mov
and
mov
outs
hlt
jmp
jmp
shr
icebp
inc
jecxz
push
add
gs
mov
xor
aaa
push
push
jp
ins
dec
ds
and
cmp
push
es
add
adc
movs
push
stos
retf
repnz
ss
xor
push
jmp
inc
shr
in
call
icebp
jbe
push
jo
xor
mov
iret
jne
sbb
pushf
inc
fwait
xchg
dec
mov
sbb
push
(bad)
shr
lahf
cmps
or
cmc
inc
add
cmps
push
pop
mov
sar
jl
ins
jge
movs
dec
fwait
and
into
add
adc
ffree
xchg
inc
mov
push
data16
rol
xor
lahf
out
lea
cwde
retf
cmc
and
loope
push
xor
add
pop
and
mov
popa
xlat
lahf
adc
pop
ror
or
movs
jmp
ror
jns
test
icebp
lods
ins
movs
cli
rcr
add
push
out
sub
enter
or
dec
rol
pop
push
bswap
push
ror
xor
mov
aad
mov
jnp
ret
jae
mov
sbb
dec
dec
mov
pop
cmc
push
cmp
and
rcr
shl
ja
ins
out
xchg
loopne
xor
outs
sbb
cmp
cmps
mov
jp
repz
xchg
mov
dec
xchg
fsubrp
sub
mov
les
retf
retf
adc
or
sub
mov
xchg
cmps
je
jmp
xor
mov
(bad)
cmp
jmp
xchg
mov
mov
push
imul
daa
test
cs
nop
arpl
cdq
fisub
xchg
lods
(bad)
retf
out
dec
jb
popf
mov
mov
(bad)
rol
iret
xor
inc
adc
xchg
call
mov
movs
cmc
call
mov
adc
(bad)
enter
push
aas
mov
mov
mov
add
xchg
pushf
das
add
pushf
loop
into
mov
jmp
int3
inc
aaa
mov
push
retf
sar
sbb
jne
xor
add
lock
imul
sub
loop
add
imul
lods
sbb
inc
mov
in
pusha
or
mov
outs
push
sbb
xor
dec
xor
dec
xor
mov
xor
mov
loopne
aam
out
test
cmp
add
outs
push
mov
popa
out
mul
push
push
popf
lods
(bad)
and
jp
mov
dec
mov
add
movs
add
jmp
push
(bad)
xchg
pushf
cmp
mov
js
je
jl
out
ja
mov
inc
push
retf
jmp
jl
xchg
mov
les
sbb
xchg
out
fimul
das
hlt
mov
jno
in
or
in
shl
pop
mov
int
lock
lods
sets
xchg
jo
push
xor
js
cmp
in
xchg
xchg
or
jno
jbe
mov
sub
cmps
and
pop
shl
pop
dec
stos
push
mov
xor
fld
push
inc
adc
add
pusha
shr
cmps
push
cli
pop
mov
add
in
push
lods
xchg
pop
xor
add
aad
lods
je
cs
pop
shl
call
(bad)
fucomi
xchg
ret
lods
or
sub
mov
sahf
mov
(bad)
and
jle
sbb
and
and
xchg
or
repnz
test
(bad)
mov
or
and
aaa
lahf
outs
push
scas
or
push
sbb
sub
out
or
adc
mov
lods
sub
(bad)
add
mov
cmp
call
xlat
das
mov
clc
daa
jp
data16
es
shl
addr16
int3
adc
jmp
and
pop
jnp
in
xor
add
mov
mov
mov
jae
es
xor
push
push
shl
or
push
pushf
pop
fisttp
loopne
jle
sbb
pop
pop
jbe
daa
data16
adc
shl
xchg
xchg
dec
pop
(bad)
je
add
jmp
rcl
nop
outs
sbb
push
xchg
inc
sub
mov
mov
pushf
mov
out
(bad)
jnp
pop
mov
jmp
fwait
mov
jg
ret
xchg
aad
mov
jne
xchg
icebp
mov
pop
cwde
in
cmp
les
ret
ja
test
pop
lock
push
mov
xor
push
push
xor
clc
xor
rcl
and
cdq
movs
xchg
adc
mov
sar
push
push
push
aaa
push
push
lds
popa
xchg
adc
mov
(bad)
lock
fcom
pop
loope
cmps
les
push
dec
pushf
inc
not
int
scas
jg
ret
cdq
push
pusha
add
jp
inc
cmps
mov
jecxz
xchg
(bad)
in
jmp
ret
pop
xchg
arpl
je
outs
add
inc
cmp
xor
rol
movs
mov
js
lods
push
lea
inc
sbb
int
mov
cli
shl
cmp
jb
or
adc
bound
push
cdq
pop
call
out
pop
mov
and
mov
jp
fs
cmps
jnp
adc
les
pop
mov
dec
bound
dec
stc
data16
out
retf
outs
mov
sbb
and
mov
jo
push
add
push
cmp
push
xor
mov
sub
in
pushf
adc
jbe
out
mov
adc
adc
sahf
pop
(bad)
imul
loope
loopne
dec
std
xor
or
shr
sahf
in
imul
or
jmp
idiv
pop
sub
cmp
pop
call
imul
ins
fs
add
retf
jmp
rcr
stos
jns
fldcw
rol
clc
jbe
sbb
call
push
fsub
push
xchg
stos
push
fwait
les
pop
aas
mov
adc
xor
pop
and
mov
inc
pop
mov
out
sbb
in
jno
int3
(bad)
mov
push
adc
pop
repz
and
xchg
pusha
push
repz
popf
in
push
mov
inc
dec
test
push
pushf
in
out
pop
push
clc
and
out
pop
ret
fidivr
xchg
lea
cmps
push
inc
xor
and
cmps
ss
stos
test
and
movs
out
clc
js
daa
std
mov
mov
jmp
and
das
mov
adc
dec
(bad)
sub
out
cmp
test
cmp
ss
lea
inc
jmp
pop
out
push
or
(bad)
div
sub
popf
pop
add
inc
(bad)
rcr
pop
sbb
jno
stos
xchg
lock
outs
ficom
push
cld
mov
sti
fist
aas
mov
loop
lock
shl
xor
iret
(bad)
fcom
shl
dec
and
mov
ret
push
mul
add
jl
cmp
xchg
cli
int
ror
pop
inc
mov
in
jne
nop
repnz
enter
mov
(bad)
fdiv
xor
and
cs
adc
lahf
lahf
inc
gs
xor
jp
ret
cld
pop
clc
test
js
jae
cld
xchg
sbb
sub
mov
loope
pop
xor
and
ja
jmp
and
inc
jbe
retf
cmp
cmp
retf
test
sub
pop
or
xchg
in
stc
mov
jmp
mov
or
icebp
add
sbb
sbb
sub
xor
pop
loope
std
sti
in
push
push
sar
not
ficomp
shl
sub
xor
sbb
out
iret
lahf
add
mov
xchg
xchg
aas
adc
(bad)
das
mov
ret
pushf
add
add
stos
lods
sub
add
xchg
dec
addr16
ret
js
ret
adc
jmp
scas
cmp
out
es
jbe
adc
pop
xor
mov
push
xlat
bound
pop
mov
add
xchg
in
jns
pop
xor
nop
in
cld
xchg
jne
idiv
neg
ror
xor
dec
mov
fwait
or
fisubr
sti
cmp
shl
xchg
cmp
dec
outs
sbb
or
int3
mov
in
jnp
pop
push
or
pavgb
push
shl
push
xlat
fwait
inc
int3
push
jmp
add
sub
out
test
outs
icebp
dec
mov
xchg
sub
push
loopne
jle
out
inc
out
leave
xchg
add
lds
aaa
je
adc
or
jno
sahf
iret
mov
sti
(bad)
xchg
aaa
jmp
mov
or
jl
jecxz
push
adc
mov
mov
adc
jo
jns
lds
lahf
inc
out
fstp
mov
lea
cmps
arpl
int3
mov
pop
cs
mov
jg
pushf
mov
outs
mov
xchg
xchg
add
rcl
imul
icebp
imul
mov
sub
imul
or
pop
stos
js
push
ins
and
(bad)
loopne
cmps
cmps
shr
inc
outs
pop
push
shr
(bad)
clc
mov
cmp
mov
mov
(bad)
lock
and
neg
(bad)
fwait
sbb
cmp
in
ret
mov
(bad)
sub
cmp
sub
js
sti
loopne
pop
inc
fsubr
inc
cmc
sti
shr
jbe
popf
(bad)
enter
jns
stc
jg
arpl
scas
(bad)
out
aad
scas
push
cmp
xchg
movs
lods
adc
ins
sub
cmp
daa
dec
inc
cmp
leave
xlat
push
push
aam
sub
pop
push
inc
in
add
mov
sbb
sub
adc
test
aam
sub
sub
cmp
sub
ds
sub
push
fadd
call
add
ss
cli
xor
test
mov
lock
dec
sbb
adc
test
je
pop
pop
sbb
push
(bad)
jge
ins
push
adc
daa
cmps
pop
fistp
pop
aam
cmp
pop
cmp
imul
ins
adc
inc
jge
rol
mov
mov
push
mov
inc
mov
in
cmp
mov
sbb
repnz
mov
or
inc
sti
jecxz
push
popa
(bad)
das
mov
data16
xchg
pop
cmp
aas
adc
out
lahf
cmp
pusha
shl
xchg
xchg
scas
lahf
xor
test
sub
sbb
mov
jmp
daa
pushf
and
in
rcl
push
loope
dec
call
imul
sbb
addr16
retf
push
mov
pop
pop
xchg
and
and
popf
std
js
(bad)
ret
xor
cwde
sub
retf
ins
push
mov
dec
push
in
lods
xchg
fld
sub
ds
(bad)
out
sub
es
and
mov
test
dec
xchg
(bad)
(bad)
icebp
dec
nop
jae
scas
xor
sbb
adc
das
or
pop
add
cmp
test
push
add
ins
std
pop
icebp
mov
xchg
out
out
js
mov
out
frstor
dec
cmps
out
addr16
je
sub
test
sar
movs
(bad)
adc
test
add
xor
cli
mov
mov
out
ins
push
cmp
shl
push
mov
test
daa
cmps
sub
pop
cmp
cmps
jne
aam
cmp
movs
inc
popf
pop
cli
and
add
dec
add
(bad)
jno
xlat
fs
movs
sbb
(bad)
scas
jmp
jae
push
ds
dec
mov
and
je
jg
das
dec
adc
outs
cwde
fisubr
dec
loopne
and
into
xchg
cmp
es
mov
jb
retf
xchg
mov
jp
mov
and
jae
xchg
retf
es
daa
push
and
lods
repnz
dec
cli
inc
xchg
adc
stos
cmp
mov
jb
cld
jno
pop
addr16
gs
xlat
jl
jnp
neg
int
mov
data16
pop
or
out
mov
out
adc
cli
das
pop
dec
ficomp
aad
les
sbb
and
xor
xor
mov
or
fs
cmp
outs
jb
xor
add
aas
add
mov
or
jmp
leave
jp
inc
dec
pop
stc
ret
adc
inc
into
scas
je
mov
pop
fistp
sbb
nop
sub
mov
cdq
inc
imul
jnp
pop
out
and
cmp
cmp
or
jo
mov
std
jge
and
cli
jae
outs
in
ror
cmp
ja
sbb
add
cmps
ret
int3
sub
mov
xchg
js
sbb
jne
push
push
xor
xchg
mov
jns
shl
loop
lahf
rcl
stos
cdq
retf
(bad)
out
gs
xor
sbb
add
cmc
iret
sbb
and
fwait
repnz
sub
and
push
cmp
in
scas
mov
cli
mov
mov
mov
push
mov
idiv
mov
xlat
call
ret
adc
cmp
ins
inc
sub
fs
jbe
fcmovnbe
rol
sub
mov
pop
loopne
or
bnd
pop
ret
in
iret
add
push
jne
pop
mov
(bad)
mov
jno
sbb
imul
sbb
pop
pop
lea
pop
mov
std
stos
(bad)
cli
ins
(bad)
jle
js
jmp
test
ins
mov
or
or
jns
out
mov
jbe
in
cmc
xor
jle
cmp
dec
and
adc
fsub
mov
mov
lea
pop
jg
jmp
(bad)
push
fisub
rcl
inc
inc
pop
fistp
cmc
int3
sub
div
dec
adc
mov
add
test
ss
addr16
jmp
aad
jne
cmp
sbb
cld
adc
in
and
xor
add
xchg
xchg
xchg
loopne
xchg
mov
dec
call
lods
mov
add
inc
imul
jle
xlat
sahf
in
cmps
mov
xor
and
aam
addr16
je
je
aaa
pop
mov
scas
mov
xchg
fldenv
loope
ja
(bad)
hlt
or
jo
xlat
mov
fsubp
mov
bound
xor
inc
xchg
pop
mov
(bad)
sti
ja
sub
inc
mov
mov
hlt
in
ficomp
jmp
mov
mov
or
jp
xchg
or
repnz
jne
lahf
sbb
popf
jo
jmp
test
iret
add
sbb
das
sub
mov
les
mov
iret
out
push
or
push
or
lock
(bad)
xor
cmp
mov
pop
out
out
add
fldenv
dec
jle
int
jno
inc
adc
int3
lods
push
pop
(bad)
adc
ds
popf
mov
and
xor
jecxz
pop
cli
mov
and
mov
xchg
push
test
(bad)
js
pop
jno
xor
xchg
xchg
xchg
pop
aas
hlt
in
mov
dec
pusha
xchg
jnp
pop
(bad)
imul
pop
shl
cmp
add
popf
in
loope
scas
iret
add
xchg
or
mov
mov
and
sub
xchg
cwde
cwde
test
push
xchg
adc
aaa
xchg
dec
add
or
in
jmp
fs
into
and
fbld
fbstp
out
retf
imul
inc
jo
in
sahf
movs
mov
sub
mov
mov
imul
inc
mov
or
in
ret
or
push
outs
test
nop
mov
jge
pop
imul
jecxz
aam
cmp
or
pop
dec
jns
and
sbb
add
rcl
add
jno
lods
jmp
mov
das
ret
push
jg
std
lods
ds
mov
add
rcr
jg
loope
push
inc
adc
in
jne
sbb
jo
push
lock
popa
jle
(bad)
int3
cmp
jl
mov
inc
cld
ja
inc
aas
icebp
mov
pop
dec
ins
xor
mov
gs
repz
xchg
dec
adc
ss
call
jg
outs
add
xor
push
cmp
lea
cdq
or
dec
jns
add
aaa
fstp
(bad)
cs
push
in
sbb
jno
nop
sti
xchg
(bad)
rol
ret
mov
fild
aad
frndint
daa
dec
and
mov
pop
inc
cld
ftst
and
push
mov
(bad)
jae
push
ins
cmps
lods
(bad)
(bad)
fistp
pushf
jmp
add
sbb
mov
or
movs
ja
std
jmp
test
and
iret
in
inc
or
xchg
fcmovne
and
pop
jbe
cwde
mov
cmc
aas
clc
mov
jb
cmps
mov
clc
pop
pop
stos
imul
fcmovb
aaa
cmp
outs
ror
pop
aas
ss
pop
lock
or
xlat
femms
or
xor
inc
loopne
aad
push
repnz
add
imul
cmp
cmps
xor
mov
adc
xor
clc
fcomip
inc
in
aad
fmulp
push
ins
and
push
retf
shl
mov
cmp
imul
hlt
lock
xor
enter
aas
in
xor
adc
cli
sbb
adc
mov
mov
and
lock
retf
arpl
pop
leave
(bad)
ins
call
mov
aaa
mov
enter
outs
out
lods
leave
jp
cli
push
mov
test
ds
scas
push
fdivr
lds
sahf
adc
push
and
mov
or
icebp
jge
ficomp
cmp
sub
rol
mov
cmps
test
jnp
fidivr
out
sbb
jg
enter
and
pop
lods
stos
pop
add
cdq
movs
loop
and
(bad)
jo
lods
(bad)
lods
mov
or
popf
jg
data16
sub
jbe
das
(bad)
(bad)
cwde
dec
and
jle
ss
repz
cdq
dec
pop
ins
sbb
imul
test
cmc
xchg
arpl
sub
sub
adc
imul
inc
sbb
ins
in
data16
fwait
arpl
or
daa
jmp
sub
cmp
popf
jp
xor
xchg
ins
jl
xchg
jecxz
inc
in
cmp
mov
push
pop
jae
fstp
cs
mov
adc
pop
sbb
aas
jl
mov
xor
jge
and
div
sahf
cmps
add
mov
cmps
xchg
push
jmp
and
push
fwait
pop
push
mov
aam
jl
gs
jge
loope
arpl
icebp
jp
cmp
push
fidivr
dec
cmp
cmps
push
inc
dec
pop
out
cwde
xchg
add
pop
in
add
adc
ins
or
shl
(bad)
lahf
mov
lods
sub
mov
neg
push
test
pop
push
pop
push
bnd
loopne
icebp
add
or
shr
inc
xchg
push
gs
and
inc
sub
mov
je
mov
std
sbb
xchg
int
pop
or
cmp
loop
jl
retf
gs
test
xchg
xchg
daa
jle
fisttp
add
push
gs
inc
or
scas
sar
cmp
fmul
aas
(bad)
push
aam
call
sahf
jb
sbb
cmps
fsubp
dec
xchg
dec
push
jmp
jnp
push
out
mov
stos
bound
sub
and
jae
xchg
cli
vshufps
mov
out
int
jns
mov
into
sub
mov
lock
inc
test
je
les
fcomp
pop
and
scas
adc
mov
dec
sub
(bad)
stc
and
jo
lds
mov
fcom
rcl
xchg
push
sub
xor
xor
lock
sar
dec
std
jmp
mov
add
shl
add
stos
(bad)
xor
dec
push
call
lock
retf
cmp
daa
push
pop
popa
mov
test
imul
call
xlat
clc
and
sbb
and
mov
adc
mov
inc
sbb
add
icebp
or
dec
dec
inc
movs
les
je
sar
add
out
or
repnz
xchg
add
pop
push
movs
(bad)
ror
pop
sbb
mov
fisubr
and
(bad)
jo
call
mov
in
xor
xchg
dec
call
(bad)
fdivr
and
add
or
repz
pop
shl
ret
mov
add
scas
jno
push
aam
cmc
cmp
xor
mov
sub
sbb
scas
and
inc
or
add
xlat
idiv
(bad)
(bad)
push
shl
out
mov
mov
(bad)
clc
ja
jecxz
mov
retf
fbld
jp
sbb
sar
pop
sub
adc
ss
push
adc
and
daa
mov
shr
xlat
fisttp
fnsave
jl
jecxz
xchg
lock
xor
xchg
pop
inc
xchg
and
sbb
mov
loope
xor
or
inc
inc
adc
dec
sti
loopne
fs
and
ss
dec
jmp
adc
outs
popf
cmc
pop
out
test
adc
xchg
or
mov
xor
jb
pop
mov
leave
push
out
mov
jae
lock
pop
ror
sub
out
xchg
mov
popa
dec
mov
fcom
mov
cmp
jbe
(bad)
xchg
push
(bad)
mov
icebp
fnstcw
jl
or
push
push
sbb
jae
movs
outs
push
(bad)
cld
test
aam
fwait
sbb
into
cmp
hlt
test
cli
cmp
test
into
ds
mov
or
(bad)
dec
int
push
pushf
retf
add
pusha
xchg
pop
cs
lds
(bad)
mov
in
(bad)
sbb
jmp
test
mov
push
xchg
xor
in
gs
inc
mov
inc
sbb
cmp
daa
cdq
sbb
ds
push
xchg
mov
ret
push
cmp
mov
mov
cmp
add
cmp
mov
mov
pusha
push
(bad)
or
add
add
outs
test
mov
inc
xchg
dec
(bad)
sbb
add
pop
bound
out
inc
loopne
cld
cmps
shl
add
dec
fisub
adc
add
cli
je
dec
xchg
call
jae
test
sub
sti
sub
and
fdivr
sar
jmp
shl
xor
stos
scas
push
add
sub
addr16
push
and
push
inc
push
push
push
adc
sti
mov
lods
inc
(bad)
pop
xor
test
nop
int
cmp
arpl
not
fldcw
push
push
xchg
sbb
inc
cmova
movs
inc
jp
or
or
retf
pop
pop
cmp
cld
cmc
fisubr
stos
jns
jbe
cli
and
dec
jp
inc
fmul
mov
push
stc
repnz
std
xchg
xor
and
das
dec
push
out
cmp
adc
jno
aam
mov
sub
and
jmp
(bad)
cli
clc
pop
push
pop
in
jle
push
mov
mov
and
mov
mov
hlt
gs
movs
fld
add
cs
sub
ret
add
out
jb
add
js
iret
inc
pop
jge
loopne
cmp
dec
xchg
xchg
aad
mov
enter
clc
adc
mov
sub
xchg
mov
jg
idiv
or
int
xchg
or
int3
dec
sub
fwait
xchg
test
push
mov
sbb
push
outs
mov
inc
imul
and
movs
inc
std
add
mov
dec
leave
push
pop
xbegin
sub
int
mov
fldcw
dec
and
(bad)
in
add
mov
push
je
lahf
adc
je
cmps
es
cmps
stc
sti
aaa
jo
push
push
lods
push
(bad)
mov
cmps
xlat
add
inc
fstp
add
pushf
and
jp
out
cmp
in
shl
adc
scas
mov
dec
(bad)
cmp
xchg
xchg
cmp
(bad)
(bad)
aam
(bad)
int3
xor
js
mov
stc
or
cs
mov
fisubr
xor
mov
pop
pop
push
jecxz
into
or
test
int3
xchg
fidivr
pop
lahf
mov
movs
loopne
mov
and
lahf
add
jo
(bad)
and
cli
sbb
test
sbb
ss
sbb
jns
xor
xor
jecxz
mov
test
call
sti
cmp
jmp
cmps
sbb
lods
sbb
pop
inc
push
inc
mov
cmp
xor
or
out
dec
add
jmp
movs
mov
or
popa
push
pop
inc
es
and
aas
xchg
je
cld
scas
jl
ret
push
jp
xchg
outs
mov
frstpm(287
jno
mov
outs
rol
or
xchg
test
jo
stos
ins
mov
push
add
cwde
sbb
jbe
retf
and
cmp
repz
mov
push
repnz
jg
jge
or
outs
fwait
or
and
jle
mov
and
mov
pushf
retf
push
cmp
inc
xchg
cld
sub
inc
mov
xor
cwde
jg
adc
mov
lods
into
mov
(bad)
cmp
lock
xchg
(bad)
xlat
jl
mov
mov
scas
adc
popf
inc
std
xor
and
(bad)
sahf
jns
(bad)
stc
call
cmp
mov
call
fcmovbe
push
push
iret
das
cmp
sub
sub
stos
dec
pop
adc
sbb
fst
loope
jmp
sub
jmp
retf
enter
sub
fstp
inc
jo
in
lods
cmc
pop
in
or
jns
pop
sub
mov
dec
push
fld
mov
push
cs
jg
mov
ds
icebp
(bad)
cmps
mov
stc
cmp
sub
cmp
rcr
mov
cmps
xchg
lods
jg
fist
mov
xchg
mov
xlat
pop
push
(bad)
mov
loope
sti
xlat
mov
jle
or
outs
xchg
inc
push
js
nop
push
pusha
xor
mov
push
adc
mov
adc
mov
mov
cmp
and
test
clc
push
jmp
pop
rcr
call
dec
fidiv
enter
sbb
pusha
pushf
sti
dec
call
sub
stos
dec
jl
cmc
xchg
mov
addr16
dec
or
(bad)
xchg
mov
movs
xchg
sub
imul
ins
mov
push
xor
std
lahf
sbb
xor
test
repz
xchg
jl
test
aas
xlat
push
and
lods
and
xchg
add
and
mov
jbe
enter
or
adc
xlat
enter
and
dec
mov
fcomp
loopne
or
fs
dec
rcr
cmp
(bad)
jae
jmp
fdiv
xor
pushf
xchg
dec
sbb
ins
fs
dec
fdiv
(bad)
idiv
push
inc
push
cmc
sub
sub
sub
dec
imul
pop
adc
cmps
imul
fwait
stos
push
cli
cmps
cmp
and
in
adc
dec
cmc
std
cmp
or
push
imul
mov
outs
je
cmp
loop
stos
jle
push
add
in
cmp
fistp
sbb
pop
ror
cs
xchg
or
(bad)
mov
outs
out
xor
not
ss
cli
movs
inc
xchg
retf
dec
add
xchg
icebp
sbb
cmp
pop
adc
mov
icebp
aas
mov
xchg
sub
retf
retf
lods
out
int
div
ret
inc
int
mov
(bad)
mov
adc
mov
inc
mov
adc
test
retf
mov
mov
push
into
mov
rol
adc
aaa
inc
in
fisttp
jl
and
gs
add
iret
fcmovu
outs
xor
rcl
leave
push
sbb
cmp
lahf
in
lea
out
add
out
nop
loope
mov
call
jae
or
xchg
sti
jle
into
sbb
jmp
jmp
and
mul
add
adc
dec
pop
sbb
mov
pop
movs
call
shl
mov
(bad)
aam
pop
pop
xchg
pop
sti
sbb
test
pusha
fcomi
ret
sbb
xlat
out
int3
retf
mov
stos
pop
dec
nop
dec
add
fadd
je
test
push
retf
in
dec
inc
in
popf
dec
ins
fimul
cmps
sbb
jnp
stc
pusha
adc
lea
mov
lods
dec
lds
pop
in
ror
aad
or
or
push
fnsave
(bad)
adc
shl
popf
retf
push
inc
dec
fsubrp
xor
and
imul
call
adc
fnsave
iret
rcr
mov
dec
outs
push
(bad)
lea
out
in
and
cmp
rol
and
je
daa
sahf
not
in
inc
or
add
and
jl
iret
sub
test
mov
sbb
add
leave
int3
push
inc
mov
adc
push
movs
mov
ds
mov
cmps
stos
imul
sti
xchg
lods
hlt
jmp
iret
out
xchg
into
fidivr
imul
inc
mov
mov
jne
xor
or
ror
pop
sbb
outs
and
or
mov
mov
loop
xchg
nop
fld
jmp
mov
shl
in
enter
pop
pop
out
mov
daa
pmaxub
mov
mov
or
repnz
rcr
sbb
or
ds
ret
jmp
and
mov
cmps
popa
fistp
adc
push
dec
sti
push
mov
les
pop
mov
adc
adc
fwait
out
or
scas
cmp
js
xor
sbb
ror
xchg
inc
pop
xchg
mov
or
push
jae
jmp
jmp
rcl
sub
mov
dec
adc
pop
cmps
clc
inc
add
cli
jp
cmp
mov
(bad)
iret
xor
or
arpl
fwait
inc
neg
aaa
xor
jmp
shl
push
imul
clc
sahf
ja
into
das
shr
leave
push
push
lahf
rcl
push
adc
push
repz
and
and
nop
mov
or
jecxz
fld
jns
enter
js
add
ret
xor
ror
loop
inc
jae
mov
mov
fld1
cmp
push
rcl
xchg
jns
adc
fcomp
sbb
stc
jns
push
imul
and
jmp
shr
adc
pop
imul
icebp
ret
fcmovnbe
jne
pop
jge
test
inc
dec
cmc
mov
adc
int3
jnp
or
stos
xchg
shr
outs
loop
int
and
stc
add
dec
cli
cmp
mov
jl
in
sub
sbb
dec
dec
mov
cmps
and
sbb
inc
sbb
ret
jge
cli
fwait
stos
jmp
fst
ins
(bad)
clc
xor
test
mov
push
mov
adc
mov
mov
fsubr
jge
movs
call
inc
inc
adc
sbb
or
bound
dec
xor
popf
mov
out
and
sahf
jge
in
jecxz
scas
mov
or
xchg
shr
mov
lods
jl
es
fwait
test
sbb
call
inc
test
xchg
test
add
jl
(bad)
cmps
fdiv
xchg
and
mov
jbe
mov
dec
into
jecxz
xchg
adc
inc
arpl
mov
fwait
dec
jne
ja
add
xchg
push
mov
cs
imul
mov
cmps
popf
mov
push
dec
mov
gs
ret
adc
les
push
stos
push
adc
call
mov
outs
fimul
mov
jns
mov
xor
inc
cdq
and
mov
mov
cli
lods
sub
cmp
outs
xor
cmps
dec
sub
pop
xor
mov
addr16
std
inc
std
xabort
nop
cmp
stos
(bad)
cmps
sub
ins
(bad)
es
shl
movs
es
frstor
mov
dec
dec
pop
push
jp
jmp
push
push
sbb
outs
cmp
loop
dec
sub
stos
jg
push
loop
hlt
mov
mov
push
jae
push
mov
and
je
icebp
cmps
aas
rcl
movs
sub
in
inc
je
add
nop
mov
jmp
xchg
pop
(bad)
std
dec
fild
jmp
loope
imul
sub
iret
mov
mov
pop
dec
or
sbb
pop
test
sahf
push
bound
xor
mov
adc
lods
sbb
mov
cmp
lahf
fsubr
pop
mov
cmp
or
mov
sub
xor
enter
pop
mov
add
and
inc
(bad)
fwait
in
pop
cmp
dec
xchg
fidiv
lods
out
movs
add
mov
inc
and
stos
cmps
fwait
inc
xchg
dec
pop
das
fild
sbb
(bad)
fist
pop
mov
data16
(bad)
mov
loopne
adc
outs
jae
add
leave
or
adc
data16
or
enter
cld
cmp
mov
stos
mov
nop
fwait
sub
cs
xchg
cwde
iret
xchg
jno
rcl
sub
xchg
mov
mov
(bad)
sub
icebp
adc
sbb
jb
(bad)
sub
ror
js
jno
gs
mov
mov
adc
jg
mov
retf
adc
popf
pop
and
lahf
icebp
sub
scas
inc
imul
inc
sbb
lea
outs
cmp
pop
into
push
dec
add
xchg
les
jbe
neg
aaa
mov
jne
jmp
jns
(bad)
mov
xor
mov
loopne
rep
adc
movs
sbb
lahf
das
mov
inc
data16
xor
sbb
mov
push
jo
pop
stc
test
shl
dec
and
xchg
retf
xor
jmp
and
push
in
test
aad
mov
je
adc
fstp
jg
repnz
adc
ins
adc
cli
xlat
data16
adc
movzx
fbstp
scas
stos
imul
scas
add
jb
add
dec
loop
push
sbb
cmps
ja
retf
jl
or
mov
ins
stos
retf
inc
cmps
icebp
ja
int3
mov
dec
push
sahf
fwait
jo
imul
push
aas
setle
loop
cmp
or
scas
mov
cwde
movnti
std
pop
ficom
sub
mov
sti
and
or
add
and
pop
and
mov
push
pmaddwd
pop
mov
pushf
push
jecxz
xchg
int
xchg
or
ret
pushf
and
div
adc
sbb
dec
add
adc
aad
loope
ins
jb
adc
dec
xchg
push
xchg
test
fmul
adc
adc
vmovlps
push
into
imul
outs
in
sbb
stos
adc
dec
scas
call
mov
adc
add
pop
out
push
out
lods
loop
nop
(bad)
data16
stos
jnp
dec
cmp
xchg
nop
pop
hlt
xchg
loope
jbe
aam
popa
add
mov
fwait
push
dec
rcl
cmp
ins
ins
pop
bound
xchg
sbb
xor
(bad)
cmp
stos
inc
xor
lahf
jle
test
cmp
mov
js
movs
test
dec
xchg
fimul
in
push
cdq
mov
xor
sbb
mov
nop
and
or
jns
cmps
jecxz
jge
cmp
mov
gs
outs
mov
enter
sub
lea
lea
sbb
out
mov
dec
pop
(bad)
fwait
sub
scas
mov
push
and
mov
aad
cmps
inc
add
push
outs
pushf
adc
test
(bad)
and
out
fsubr
and
sahf
stc
xchg
outs
sbb
cmps
sub
ins
scas
fnstenv
push
ficom
aad
or
lock
add
outs
mov
maskmovq
imul
lds
fprem1
xchg
push
jae
jecxz
je
pushf
rcr
in
cmc
cmps
pop
clc
ficom
sub
test
jp
sub
popf
aaa
jbe
inc
fistp
cs
loope
cli
adc
jno
call
inc
test
jp
enter
mov
mov
cmp
stos
fsincos
mov
repz
sbb
outs
std
pop
retf
mov
add
jo
fld
enter
es
rcl
adc
add
sbb
xchg
inc
ja
sbb
scas
cmp
ret
rcl
jno
inc
mov
iret
mov
adc
mov
adc
ds
cld
mov
fcmovbe
cmps
mov
out
or
fstp
inc
loope
sbb
movs
rol
xlat
movs
xor
aam
inc
pop
addr16
cmp
imul
xchg
jge
xor
adc
js
push
or
mov
dec
(bad)
pop
ins
movs
cmp
ins
ror
rol
rcr
mov
mov
les
loopne
push
in
inc
jle
push
inc
mov
xchg
clc
inc
push
xlat
mov
popa
shr
sbb
add
repnz
sbb
push
mov
div
scas
clc
and
icebp
sub
add
pop
ins
ja
jle
fidiv
cmp
div
ss
add
jge
dec
stos
push
push
xchg
inc
std
stc
shl
mov
bound
repnz
sbb
pop
mov
call
xor
mov
dec
loop
jg
dec
call
dec
jne
adc
repz
sahf
xlat
clc
pop
neg
push
jle
fdiv
lea
dec
cmp
mov
inc
push
popa
out
cwde
inc
leave
in
mov
or
cmp
add
ja
mov
shr
mov
stos
jb
dec
mov
mov
xchg
or
push
sbb
cmp
pop
outs
xchg
ja
outs
ja
mov
jo
push
cmp
push
dec
and
mov
dec
cmp
mov
add
xchg
sub
xchg
in
push
sub
xor
lods
sbb
cmc
and
shl
pop
in
sahf
pop
sub
mov
movs
jae
cs
cmps
(bad)
pop
lea
bound
lds
std
mov
cs
hlt
pop
popa
inc
sbb
arpl
xor
cld
push
ins
shr
and
mov
out
mov
xor
loopne
cmps
nop
add
aaa
cmp
cmps
lods
nop
fsubp
std
mov
nop
loop
inc
aaa
les
mov
mov
sbb
stos
mov
mov
test
mov
cmp
push
inc
fbstp
adc
cwde
(bad)
repnz
outs
int3
jg
push
scas
sbb
icebp
push
shr
pushf
inc
jo
enter
aad
fcmovbe
xchg
add
mov
int
mov
inc
fimul
leave
jp
pop
mov
out
test
push
cmp
xchg
loopne
sub
pop
ins
mov
lods
add
add
sbb
mov
mov
inc
push
cmp
mov
mov
enter
data16
out
je
cdq
xor
and
inc
sub
add
mov
mov
dec
jge
in
das
pop
xor
pop
cwde
dec
dec
xchg
popf
test
mov
inc
test
mov
push
mov
shr
jle
imul
push
jmp
data16
out
dec
bound
push
aad
fst
mov
adc
dec
mov
sbb
pop
add
xchg
lea
xchg
cmp
push
scas
(bad)
ja
sbb
mov
cld
loopne
fidiv
ins
add
jnp
jbe
or
rcr
sbb
pop
in
jmp
movs
outs
neg
rcl
leave
ins
fcmovnb
sub
xchg
xor
hlt
push
add
add
push
scas
(bad)
push
jecxz
test
xchg
or
lock
mov
and
jbe
dec
js
sbb
ror
pusha
push
and
mov
add
mov
test
jb
adc
xchg
pushw
pusha
and
jecxz
mov
mov
and
adc
sub
ins
sub
cmp
xor
jno
retf
and
and
mov
(bad)
clc
in
mov
add
inc
add
sbb
mov
push
imul
dec
sbb
popf
fs
push
repnz
lahf
jne
or
out
hlt
dec
sbb
jmp
or
and
sbb
push
or
mov
ss
push
ret
xchg
(bad)
inc
push
ds
push
in
adc
add
and
inc
vlddqu
les
pop
fld
clc
stc
mov
and
scas
sub
aaa
adc
dec
cmps
push
push
cmps
or
push
or
push
imul
mov
outs
lods
dec
ret
fbld
jmpw
mov
sub
mov
mov
aad
sub
popf
mov
aaa
xor
push
popa
push
xchg
mov
fild
das
pop
stos
xchg
push
stos
jo
mov
retf
pusha
mov
sub
(bad)
cmp
sahf
std
inc
je
ja
pushf
cmps
(bad)
fdiv
gs
xchg
dec
ins
mov
das
loope
push
arpl
sar
pusha
cmp
fnstenv
xchg
xor
or
adc
repnz
ins
aam
xor
(bad)
aaa
ds
aad
aam
inc
xchg
test
adc
es
stc
mov
ret
sub
mov
and
aas
aas
jmp
adc
xchg
cdq
mov
mov
sub
jl
inc
sub
adc
or
lds
das
bound
adc
es
sbb
lods
fdivp
cmp
sub
iret
cld
out
mov
jo
aas
cmp
adc
mov
mov
push
adc
test
sub
nop
ja
push
in
mov
pop
ror
lahf
sar
rol
cmp
cmps
mov
inc
mov
bound
in
rcl
cli
or
ins
hlt
outs
push
lock
jle
pushf
jmp
data16
das
push
mov
xor
mov
inc
retf
xor
cmp
mov
rol
mov
jb
(bad)
adc
dec
test
popf
pop
mov
(bad)
ret
aam
shl
in
dec
push
push
jp
out
std
je
ds
xchg
fwait
and
pusha
sbb
jne
mov
add
adc
jmp
dec
aaa
cmc
add
and
imul
pop
test
mov
stos
in
and
mov
stos
test
fild
or
xchg
adc
out
push
retf
add
add
cmp
jmp
xor
imul
cwde
fdivr
inc
xor
mov
in
inc
cmp
jg
sbb
imul
add
ss
imul
cmp
fstp
shr
stc
sub
cdq
fnsave
in
call
jge
in
stc
cmp
popa
xchg
add
fwait
ds
out
daa
adc
pop
into
xchg
cmp
repnz
mov
adc
sbb
mov
ja
fwait
sub
pop
leave
mul
jno
loopne
ja
mov
sbb
int3
sti
pop
sti
mov
(bad)
movs
or
iret
push
pop
cmc
pop
xor
jno
sub
popf
in
(bad)
lods
pusha
in
and
xchg
out
jmp
xchg
adc
inc
dec
retf
pop
jno
retf
dec
pop
xchg
dec
test
push
lods
and
clc
push
loope
jp
ds
shr
sbb
or
addr16
and
fs
aaa
fwait
mov
int3
dec
mov
cmc
add
je
pop
jno
je
std
je
mov
mov
les
nop
or
cmc
popfw
jne
dec
cmp
addr16
push
mov
fs
fwait
xlat
lds
dec
mov
push
movs
jns
jno
jecxz
es
movs
data16
sbb
leave
movs
(bad)
xchg
mov
cmp
outs
gs
push
scas
inc
adc
std
cmp
xchg
not
hlt
pusha
adc
mov
or
xchg
push
outs
outs
repz
iret
loope
(bad)
rcl
mov
mov
shl
dec
addr16
jne
xchg
dec
push
mov
pop
inc
test
pop
or
push
add
push
pop
mov
jg
ins
mov
loope
test
mov
cmps
xor
jmp
ss
mov
sbb
dec
xor
fwait
in
inc
mov
jo
adc
js
xchg
ins
je
test
mov
out
mov
and
jno
sub
loop
fadd
xchg
or
mov
jne
pop
lahf
cdq
(bad)
xchg
int3
jae
sbb
call
add
dec
pop
retf
aas
int3
repz
mov
mov
jp
es
out
test
inc
imul
loop
ret
xchg
aas
dec
push
movs
sbb
adc
xchg
daa
aam
xchg
push
xchg
ss
movs
jne
adc
in
lea
pop
sub
lea
and
sar
push
int
retf
xchg
push
fcmovnb
enter
arpl
push
ret
mov
push
inc
lahf
and
adc
shr
outs
fisub
popa
xchg
push
push
addr16
fld
clc
nop
sub
push
dec
sti
xchg
in
ret
mov
pop
xor
sub
add
sub
shl
mov
lea
push
stc
popf
hlt
outs
cli
dec
fstp
cmp
add
movs
bound
shr
enter
pop
je
adc
loope
pop
shl
adc
leave
mov
sbb
cmp
pop
ins
cli
gs
lods
pusha
xor
cmp
ret
retf
jnp
arpl
into
arpl
and
jb
add
movs
cli
pop
fs
xchg
push
jo
dec
in
xchg
ins
sbb
push
push
push
mov
and
enter
sub
rol
push
shl
sub
xchg
jp
xor
aaa
cld
and
jbe
clc
add
jmp
jo
scas
jmp
sub
dec
inc
sub
(bad)
addr16
sub
pop
xchg
mov
push
push
push
push
add
aad
pop
scas
sub
into
lahf
mov
or
mov
mov
xor
test
pop
lea
push
scas
dec
jmp
dec
movs
in
sti
stos
dec
mov
ins
bound
sub
mov
sti
daa
jbe
popa
shl
dec
pop
addr16
fst
cs
sbb
sub
pop
jge
pop
test
aaa
inc
push
loopne
jo
mov
scas
movs
jnp
mov
(bad)
fist
push
ret
test
sbb
js
dec
dec
mov
test
xor
jns
mov
jge
mov
call
popf
lea
nop
ja
pop
(bad)
shl
mov
fadd
sbb
or
jmp
mov
outs
add
(bad)
sbb
das
into
push
adc
mov
pop
repz
dec
addr16
sbb
fadd
mov
(bad)
sub
ins
sbb
xor
ins
daa
mov
mov
jno
and
sbb
int
mov
cmp
dec
out
mov
(bad)
mov
das
in
lock
mov
sbb
shl
cmps
mov
inc
push
sbb
cdq
sbb
aaa
and
or
pop
pop
mul
add
xchg
lods
or
rol
pop
ficom
sub
ds
leave
mov
loop
stos
call
lea
imul
shr
jno
(bad)
lea
sub
push
mov
jae
in
pop
jns
cwde
adc
mov
jae
sub
sbb
rcl
jecxz
inc
repnz
ja
xchg
add
sub
dec
hlt
int
outs
cmp
jbe
add
or
mov
or
xchg
mov
sub
std
jmp
cld
scas
mov
pop
fcomp
test
ja
inc
out
push
pop
out
xor
inc
xchg
mov
call
(bad)
loopne
mov
movs
or
loop
fldcw
sbb
cli
mov
sbb
sti
popa
push
imul
rcl
mov
rcl
mov
mov
out
std
test
adc
int3
and
ret
ret
xchg
push
mul
int
fstp
stos
repnz
es
mov
enter
xor
aas
push
push
fisttp
iret
loope
icebp
lea
push
pop
add
sar
cmp
ror
sahf
inc
add
xor
pop
inc
test
or
dec
mov
lea
sbb
clc
retf
jae
pop
push
out
fiadd
or
push
arpl
inc
push
or
cmp
jmp
retf
or
push
test
data16
mov
enter
inc
enter
inc
call
les
cmp
and
and
arpl
js
cld
add
outs
mov
mov
arpl
add
pusha
and
xlat
js
sub
sub
fwait
ins
push
xor
js
adc
pop
push
out
pop
and
scas
lahf
les
mov
addr16
sbb
mov
test
(bad)
leave
fadd
cmp
psrld
or
or
mov
test
jmp
das
and
lea
aam
int3
mov
add
xchg
push
scas
cmp
cmp
sub
fnstenv
into
pop
rcr
push
jl
dec
in
xchg
add
movs
outs
or
int3
enter
and
or
sub
lock
sub
outs
pop
mov
shl
add
imul
sbb
jecxz
arpl
mov
sub
add
xlat
in
es
inc
sbb
cmp
out
outs
arpl
pop
xor
neg
add
inc
fld
fwait
inc
mov
and
call
xchg
in
cld
inc
dec
sbb
sahf
or
pop
(bad)
arpl
add
cmps
pop
cmp
and
sub
or
jnp
call
push
gs
ins
xchg
sti
mov
dec
fnstsw
stos
sub
xchg
scas
rcl
mov
mov
mov
jb
and
adc
pop
jle
xlat
mov
push
pop
add
mov
push
push
inc
shl
lahf
inc
imul
sub
push
mov
xchg
jne
popf
je
das
mov
xor
(bad)
js
sbb
jmp
lods
mov
in
cmp
pop
sbb
xlat
cmp
mov
cmp
add
or
in
mov
fisttp
or
popf
in
push
push
adc
mov
xor
mov
add
mov
int
push
(bad)
pop
sti
cmp
push
std
and
lock
or
xor
outs
pop
popa
sub
retf
dec
xchg
test
mov
mov
lods
stos
adc
ins
je
daa
cmp
dec
adc
vunpckhps
push
xchg
cmp
addr16
inc
(bad)
xor
test
push
or
(bad)
mov
repnz
mov
pop
adc
ss
pop
sbb
xlat
stos
sbb
sbb
xchg
jo
and
xchg
xchg
adc
(bad)
pop
jns
adc
mov
xchg
fiadd
clc
inc
stc
jle
and
push
dec
jmp
shl
aaa
loopne
ins
jno
(bad)
inc
std
out
outs
mov
mov
adc
mov
add
aam
mov
mov
add
cmp
in
mov
adc
sub
cmp
jp
push
xor
add
in
push
and
rcr
outs
mov
jge
and
mov
cwde
pop
dec
bound
dec
mov
mov
xchg
mov
dec
clc
mov
enter
stc
jg
or
ja
pop
mov
mov
adc
das
jo
add
out
sbb
cmp
repz
dec
(bad)
xor
push
sbb
pop
sbb
or
adc
or
dec
xchg
dec
push
scas
cmps
lock
mov
pop
sbb
xchg
int
fdiv
mov
push
adc
arpl
dec
jmp
loop
add
sbb
stc
and
popf
fwait
push
mov
sahf
daa
inc
mov
and
shl
lods
fwait
cli
das
(bad)
jge
pusha
aam
je
imul
mov
mov
sbb
mov
ret
(bad)
fwait
xchg
(bad)
or
push
mov
jmp
jge
lds
(bad)
mov
jno
pop
cli
(bad)
push
pop
mov
ins
pop
adc
xchg
or
push
xchg
in
mov
imul
fsubr
mov
ret
mov
mov
fisubr
pop
xchg
(bad)
retf
test
retf
imul
es
jne
call
xchg
aad
les
xor
sbb
xchg
mov
mov
add
mov
fcompp
shr
das
mov
pop
les
cdq
xchg
mov
or
mov
(bad)
sub
in
call
aad
sub
inc
cmp
push
ficom
push
xchg
fcomp
int3
sti
ja
xchg
lods
jg
xchg
imul
(bad)
fld
cmp
cmps
mov
sbb
stos
es
mov
or
int3
fcmovnb
push
cmc
into
mov
call
and
sub
cmps
(bad)
repnz
push
sub
dec
sbb
cmp
xor
mov
out
push
cmps
popa
loopne
aad
gs
dec
loope
leave
out
sti
mov
loop
dec
pop
out
and
jmp
cmp
sbb
jnp
dec
fwait
in
leave
stos
sub
sti
imul
out
rcr
outs
rcr
fmul
aas
out
mov
xchg
inc
popa
push
sbb
jbe
ror
jne
jbe
pop
in
retf
add
pop
or
push
call
inc
arpl
jecxz
and
out
jne
in
push
stos
inc
sti
xchg
in
mov
sbb
fistp
cmc
(bad)
xchg
dec
dec
jbe
sub
mov
daa
pop
sbb
cld
cmp
nop
sbb
and
cmp
mov
sbb
add
or
jg
pop
push
push
and
out
fwait
je
ror
push
push
ds
cmp
mov
push
lock
or
mov
sub
jmp
cmp
stos
cmp
icebp
sahf
xor
xchg
push
sub
adc
jbe
dec
ss
hlt
out
rcl
jge
ds
adc
addr16
push
push
dec
std
mov
pop
cmp
mov
loop
sbb
push
ins
cs
movs
jmp
arpl
sbb
fisub
xor
mov
mov
pop
fs
adc
sbb
sar
push
xor
cmp
xor
pop
jnp
cmp
push
ins
mov
adc
dec
fadd
jo
mov
or
cli
shl
add
in
jl
adc
jb
addr16
in
(bad)
out
fidiv
mov
movs
jnp
sar
pop
push
or
call
xchg
sbb
add
push
jno
sahf
adc
loope
(bad)
sti
push
and
call
add
xor
or
sbb
mov
movs
fs
gs
adc
pop
cmp
stos
daa
add
pop
jge
rol
push
pop
xchg
mov
fwait
or
jecxz
ja
and
out
ins
and
add
test
bound
nop
inc
cli
arpl
dec
shl
retf
xchg
push
cmp
pushf
(bad)
(bad)
cmp
lahf
and
sysenter
jge
add
and
call
mov
std
jbe
push
mov
add
rcr
mov
mov
arpl
sub
lahf
das
shl
or
cmps
imul
sbb
and
inc
(bad)
aam
ret
jp
cmps
mov
hlt
and
out
jbe
or
js
movs
mov
pop
pushf
cmp
addr16
push
or
popf
push
push
jns
push
add
mov
(bad)
jl
and
clc
into
cmp
fwait
clc
or
out
outs
mov
sub
out
(bad)
xchg
mov
int3
adc
inc
cmp
push
adc
or
les
mov
xchg
adc
daa
mov
rol
mov
mov
je
jl
xchg
int3
inc
xchg
lods
(bad)
mov
pop
fisubr
cmp
push
mov
push
jbe
inc
retf
in
and
inc
(bad)
jnp
sub
ja
into
or
jecxz
dec
cwde
or
repnz
dec
btc
test
loop
fst
xor
and
add
stos
mov
out
clc
and
pop
sub
add
mov
cmp
out
and
fild
ins
or
mov
inc
loope
jae
ds
aas
stc
test
xchg
push
into
mov
data16
mov
mov
je
(bad)
inc
fnstenv
mov
add
mov
mov
cs
mov
sbb
inc
xor
cld
lahf
mov
pushf
mov
sahf
movntps
xor
fnstsw
jmp
jne
xor
cmps
ficomp
(bad)
xchg
adc
enter
pop
icebp
jb
mov
jecxz
push
mov
aaa
push
aas
stos
pop
iret
sbb
(bad)
leave
stos
pop
ret
dec
div
jbe
fcmovnbe
jae
imul
cmp
call
xchg
mov
fidivr
daa
adc
bound
test
pop
mov
fnstenv
cdq
jne
dec
sub
bound
fdiv
mov
sti
xchg
xor
test
dec
cli
sub
or
cmp
pop
scas
mov
xor
xchg
mov
(bad)
(bad)
sbb
out
not
xlat
mov
(bad)
in
or
inc
jno
and
cmp
or
cmp
enter
loop
push
xchg
cmp
pop
fisttp
pop
push
push
jmp
leave
cwde
mov
imul
inc
ror
push
stos
sub
rcl
(bad)
(bad)
sbb
jmp
mov
jb
cmc
mov
mov
pop
lock
pop
mov
div
pop
faddp
push
in
push
and
inc
sub
sbb
xchg
stos
test
idiv
in
xor
sub
pop
jo
stos
outs
repz
jmp
sub
es
lahf
retf
push
xor
(bad)
mov
in
out
and
or
dec
xor
push
pop
in
rcr
mov
idiv
inc
and
retf
stc
mov
push
mov
pop
or
ins
cmp
fisubr
or
and
setl
dec
pop
mov
xchg
push
add
xor
dec
mov
adc
stos
repz
or
(bad)
rcr
sub
inc
fisttp
adc
jnp
popf
in
xor
sub
lahf
sub
dec
fiadd
mov
dec
std
cmps
frstor
cs
mov
xchg
jmp
mov
pop
icebp
shr
or
cmc
pop
pop
sbb
xlat
adc
xchg
or
sub
pop
out
mov
inc
mov
adc
jle
xor
pop
rcr
push
jmp
into
adc
add
cld
lock
jg
(bad)
jmp
mov
push
add
fcmovb
xchg
push
inc
jo
or
xchg
push
pushf
dec
loope
xlat
adc
push
hlt
lods
dec
test
repz
mov
dec
jb
pop
xor
arpl
shl
ja
and
xor
push
jecxz
sbb
dec
inc
adc
cdq
sub
push
scas
outs
xchg
jae
inc
inc
sbb
call
jmp
ins
mov
mov
jmp
xchg
mov
xor
jb
mov
(bad)
ja
jmp
neg
jmp
scas
xor
mov
cs
sbb
jmp
mov
and
jl
in
je
fcmovnu
push
fld
loopne
xor
sub
call
push
movs
jmp
xchg
adc
cmp
dec
and
mov
loop
mov
mov
mov
inc
and
mov
test
dec
sub
and
mov
pop
mov
and
lea
daa
popa
sub
retf
outs
movs
mov
mov
mov
loop
aad
jae
cdq
popa
xor
mov
or
or
dec
push
fmulp
jmp
ss
xchg
sar
or
out
shl
push
aas
mov
dec
out
xor
pop
sub
mov
out
pop
pop
hlt
or
std
cmp
(bad)
push
(bad)
movs
add
imul
cmp
mov
out
pop
pop
in
jo
lds
mov
sbb
rol
leave
and
test
clc
xchg
(bad)
retf
pusha
push
scas
stc
mov
pop
dec
mov
mov
jp
sbb
ja
and
push
sub
inc
sar
or
or
xchg
sbb
jmp
dec
fist
cmp
int3
lods
push
pop
or
push
pop
xchg
cmp
imul
(bad)
leave
out
lods
adc
call
dec
test
or
stc
pop
push
retf
(bad)
frstor
xchg
sbb
and
mov
mov
pop
push
sbb
xor
(bad)
cwde
add
dec
dec
ret
sub
fsub
sbb
sub
mov
call
pop
pushf
cmp
in
push
xor
mov
fwait
push
cmp
lods
retf
nop
stos
push
retf
das
add
push
cmp
mov
aas
fsubr
pop
adc
mov
or
adc
mov
lods
int3
pusha
call
ss
jge
pop
scas
dec
test
inc
inc
test
loopne
dec
neg
cwde
pop
clc
pop
mov
inc
mov
les
xor
int
ins
imul
pop
jbe
in
test
inc
inc
cdq
dec
ret
movntq
jo
and
mov
addr16
movs
(bad)
repnz
dec
add
add
pusha
mov
dec
jmp
lds
sbb
push
retf
mov
popa
adc
push
sbb
adc
xchg
adc
xchg
pop
pop
adc
mov
xor
ss
adc
adc
in
fild
dec
aas
aam
lods
adc
push
movs
test
aam
push
dec
fbld
inc
pop
pop
inc
in
dec
push
cld
or
ins
sbb
dec
ret
addr16
mov
xchg
outs
out
imul
push
push
cs
(bad)
sar
inc
and
int3
in
pusha
pop
fcomi
cmp
jg
xlat
mov
in
(bad)
out
add
mov
xor
sub
mov
mov
adc
out
cdq
mov
jle
jl
xlat
pop
std
jmp
add
pop
fst
scas
out
je
addr16
jmp
aam
movs
stc
popa
arpl
push
cmc
fwait
xor
ss
mov
ret
sbb
loope
aas
js
push
and
inc
xor
fstp
and
inc
popa
icebp
mov
fmul
push
xor
js
push
sub
dec
push
sbb
inc
mov
pop
pop
icebp
jl
stos
xor
pop
cmp
call
adc
adc
xchg
mov
mov
retf
sub
xchg
fs
aaa
or
xor
or
adc
push
gs
fadd
into
dec
xor
mov
sbb
mov
fadd
loope
xchg
stc
ins
out
call
or
or
xchg
cmp
repnz
xchg
ror
rcl
mov
neg
std
jg
mov
push
add
add
lock
sub
cmp
loope
cs
cmp
mov
sub
or
xor
ds
loopne
(bad)
pop
scas
push
inc
icebp
push
lds
push
mov
dec
cmp
mov
(bad)
into
arpl
pop
inc
adc
inc
pop
sub
push
dec
and
loopne
das
jne
and
add
mov
stos
adc
push
dec
data16
loop
icebp
push
dec
imul
add
xor
(bad)
test
sbb
and
and
(bad)
cmp
pop
aaa
jge
retf
inc
jb
arpl
lahf
ins
repnz
push
fst
repnz
jns
pop
(bad)
mov
and
mov
imul
popa
aad
stc
movs
and
outs
push
push
addr16
pop
fstp
adc
fcmovbe
mov
jp
test
jmp
es
int
mov
repnz
out
(bad)
imul
jb
ret
cs
loop
into
push
sub
cld
or
loopne
cmp
push
cmp
in
fbstp
dec
fwait
jmp
sahf
mov
sbb
fxch
pop
leave
sub
sti
or
pop
cdq
push
push
popf
dec
mov
adc
scas
pop
fidiv
sub
pop
stc
pop
pop
xchg
into
inc
imul
mov
pushf
push
sub
test
push
xlat
std
test
or
mov
push
jl
scas
ins
mov
jge
push
arpl
lahf
jecxz
cdq
icebp
shr
add
pop
in
mov
add
pop
add
and
in
call
and
sar
dec
sbb
xor
icebp
xchg
xor
das
sti
sbb
stc
inc
leave
xchg
mov
fwait
scas
in
cmp
push
gs
add
or
push
pop
(bad)
mov
cmp
jge
mulps
or
movs
pop
js
sub
xchg
idiv
pop
or
add
dec
or
and
sbb
mov
sar
xchg
ins
jns
es
xor
rol
call
jmp
ror
pop
inc
adc
inc
outs
outs
iret
das
out
imul
cmp
push
cdq
(bad)
cli
fist
test
jnp
inc
push
sbb
push
and
inc
popf
or
ret
adc
mov
xor
add
jp
mov
pop
inc
mov
inc
mov
js
ret
xchg
repz
mov
fadd
cmps
ins
int3
hlt
imul
mov
push
fwait
ja
fstp
pop
cdq
dec
add
xchg
inc
(bad)
and
out
pop
xor
loop
int3
std
js
sub
mov
dec
cmp
in
pop
dec
inc
fnstenv
in
adc
cmp
loopne
call
lock
cmp
fs
mov
mov
jecxz
rcr
cs
and
js
rol
or
shl
jp
dec
div
xor
test
int
jmp
retf
add
imul
nop
shl
dec
adc
wbinvd
add
inc
loop
push
pop
jp
ins
cdq
push
adc
ss
aaa
jge
ror
sbb
daa
cs
mov
dec
rol
shl
stc
and
mov
sbb
xchg
pop
sahf
outs
lods
es
aad
pusha
xor
es
push
test
sahf
mov
ss
adc
xchg
(bad)
sub
mov
mov
jl
pusha
loopne
xor
popa
retf
loopne
mov
cmp
adc
pop
xor
xor
sbb
in
aad
mov
push
ja
std
test
jns
xor
data16
mov
pop
test
and
ret
js
pushf
cmp
lds
xchg
in
add
push
add
test
push
inc
jo
dec
xor
push
xor
les
and
mov
loopne
sub
sbb
out
popf
and
popa
or
sub
scas
mov
push
or
enter
adc
add
cmp
pop
or
jg
shr
push
out
mov
fisub
shr
addr16
repz
js
(bad)
pop
das
arpl
jmp
sti
pop
xor
inc
mov
xor
fdiv
or
ins
mov
dec
mov
into
mov
pop
std
xor
mov
push
mov
xor
test
(bad)
push
jmp
xchg
repz
mov
sub
inc
call
aad
movs
xor
sbb
jae
std
push
mov
nop
jne
mov
js
rcl
movs
xor
jp
dec
jle
pushf
test
les
mov
and
inc
out
inc
je
mov
add
sub
xchg
push
xchg
adc
leave
cmps
(bad)
int
test
retf
arpl
call
imul
sbb
das
or
dec
sbb
xor
xchg
js
ins
xchg
xor
inc
xchg
out
(bad)
aad
pop
push
fldpi
neg
mov
sar
jp
or
into
ret
cmps
mov
sbb
push
cmc
pop
mov
mov
jg
and
fcmovnbe
push
shl
inc
psrld
retf
scas
aad
into
out
les
adc
fs
push
sub
xchg
xor
mov
ja
lahf
mov
mov
enter
scas
push
cli
cli
bound
pop
add
mov
mov
movs
pop
xor
add
hlt
sub
fdivp
mov
jecxz
outs
repz
sti
jmp
xchg
jmp
jle
cmps
retf
jne
repz
xchg
jmp
test
stc
(bad)
pusha
shr
mov
sbb
jg
mov
push
mov
lock
adc
invd
sbb
sbb
dec
mov
fbld
pusha
mov
outs
daa
jae
push
and
inc
or
xor
scas
or
loop
mov
fs
or
xchg
xchg
ins
inc
cld
aam
mov
or
out
mov
test
dec
adc
daa
mov
and
mov
not
scas
xchg
call
aam
fisubr
loope
and
and
push
push
out
ror
adc
lds
popa
xchg
or
(bad)
stos
sbb
es
push
test
jmp
lea
fmul
test
out
and
addr16
xchg
fimul
and
mov
gs
out
data16
lods
ficomp
iret
jmp
add
(bad)
shl
adc
js
jns
fwait
xchg
ror
xchg
rcl
dec
bound
xlat
xchg
pop
rcl
xlat
push
into
jnp
popf
pop
and
dec
call
xor
daa
enter
(bad)
mov
mov
mov
mov
mov
or
ja
cmps
mov
mov
cmp
frstpm(287
inc
test
mov
das
lock
cld
or
dec
push
pushf
div
sbb
lea
jmp
cmp
adc
sar
mov
data16
push
pushw
movs
pusha
add
cmps
mov
adc
inc
call
dec
(bad)
dec
ret
enter
pusha
sbb
test
sbb
mov
jmp
inc
xor
popa
int
push
cmp
fwait
cs
mov
loop
mov
adc
movs
mov
test
mov
cmp
mov
mov
call
xlat
sbb
scas
sbb
adc
cdq
xchg
pop
mov
neg
mov
in
adc
fcom
mov
ss
xchg
mov
enter
test
mov
and
in
mov
pop
add
push
mov
mov
cmps
and
rcl
into
xor
cmp
call
jmp
fsub
ret
shr
xchg
aas
test
in
aad
mov
inc
mov
push
(bad)
pop
cmp
or
jl
lea
jbe
imul
in
push
sar
lods
stos
nop
mov
dec
rcr
pslld
das
sbb
outs
cwde
and
push
stos
xor
pop
push
add
fsub
in
aaa
xlat
and
fiadd
sub
jae
fisttp
push
in
test
das
pop
sub
imul
pop
sar
cmc
cmps
loope
sbb
add
aaa
mov
dec
and
rcr
(bad)
call
mov
dec
sub
jmp
or
or
cmp
add
std
pushf
push
in
in
mov
adc
aaa
mov
and
imul
fnstcw
sahf
push
gs
and
(bad)
pop
fwait
sbb
mov
jle
ror
inc
ja
inc
(bad)
ss
push
sbb
jne
xor
or
stos
sub
mov
ins
xor
mov
or
mov
in
aas
loop
mov
xchg
test
pop
daa
out
xchg
pop
scas
cs
cld
push
push
daa
sti
pop
out
shl
repz
pop
int3
lds
popf
inc
imul
pop
jle
xor
shl
in
and
cmp
xchg
outs
adc
dec
lds
cmp
iret
or
inc
sbb
mov
pop
push
ror
cmp
sahf
push
stos
mov
icebp
mov
mov
dec
mov
das
lods
lahf
shl
out
mov
movs
jnp
mov
into
adc
clc
ret
mov
jle
lods
or
mov
adc
push
ins
xchg
cmc
add
outs
fs
mov
xchg
hlt
add
dec
out
call
outs
sub
loop
lock
xor
mov
in
lods
cwde
xor
addr16
mov
sub
add
fsubr
jl
cmp
mov
mov
fsubr
jne
lods
in
xor
mov
outs
adc
test
add
xchg
scas
and
or
adc
push
(bad)
mov
xor
arpl
inc
nop
out
xor
xchg
add
(bad)
loop
sub
les
out
aaa
xchg
les
aaa
in
fcomp
xchg
popa
push
int
sar
repz
mov
and
pop
lods
mov
(bad)
mov
addr16
mov
test
xchg
cli
adc
xchg
dec
js
adc
(bad)
and
or
push
dec
add
inc
ficomp
pop
sub
sbb
add
aad
mov
xchg
jge
pop
jnp
jbe
es
out
mov
push
int
mov
idiv
aad
mov
inc
xchg
sbb
and
cmp
mov
xor
stc
fnstenv
cli
sbb
or
test
repnz
int3
test
mov
jmp
inc
push
je
push
pop
mov
mov
mov
fsub
mov
(bad)
data16
mov
sbb
add
adc
jo
cli
sar
pop
idiv
inc
test
int3
call
and
fwait
lahf
jb
mov
sub
cmp
cli
or
xchg
jl
ficom
nop
push
jo
push
mov
lds
les
je
loop
imul
sub
mov
push
into
int
lahf
add
xlat
outs
mov
pop
jle
cwde
push
adc
mov
push
xor
shr
jecxz
and
inc
jmp
jl
loopne
inc
and
dec
in
fistp
icebp
pop
sub
xchg
xor
mov
ret
test
jg
push
fmul
shr
pushf
mov
xchg
mov
jae
push
sbb
movs
pop
int3
pop
call
sub
xor
frstor
imul
popf
sbb
adc
push
push
mov
push
xor
and
sub
test
pop
pusha
cmp
pop
into
jecxz
cli
xlat
nop
test
loopne
cmp
adc
lahf
js
jl
push
jmp
ror
pushf
and
push
dec
popf
add
arpl
xchg
push
cld
loope
cs
adc
jl
in
popf
je
jge
cmp
or
jb
gs
call
ficomp
xchg
pushf
(bad)
repnz
cmp
jge
xor
xor
fs
cmps
and
jae
shl
mov
(bad)
jg
cs
outs
sbb
(bad)
xchg
rcr
lods
js
ja
sbb
idiv
pop
push
push
sub
add
shr
aad
hlt
push
lahf
cmp
jne
xchg
xchg
stc
xlat
repnz
inc
aam
inc
vunpcklps
mov
sbb
pop
popf
push
jmp
mov
sbb
jg
jb
pop
retf
mov
pop
mov
int
mov
loope
cld
aam
xchg
pop
mov
lock
fcomp
retf
stc
add
(bad)
sahf
push
push
(bad)
out
daa
into
inc
mov
dec
sti
movs
rcl
arpl
mov
add
inc
jnp
daa
jmp
dec
push
and
jno
mov
leave
stos
and
fwait
xor
jns
dec
pushf
dec
cmp
jbe
or
mov
xchg
imul
je
mov
pop
or
es
add
mov
(bad)
repnz
cs
jmp
in
sbb
cdq
sar
cmp
sahf
int3
jecxz
sub
outs
jmp
lds
jp
jae
loop
cmp
jbe
add
fldenv
mov
out
and
and
(bad)
mov
(bad)
xor
mov
fist
leave
or
scas
cmp
retf
loop
out
in
sbb
test
das
repz
mov
aam
and
rcl
ja
bound
out
inc
or
dec
movs
dec
or
jmp
adc
js
hlt
(bad)
sbb
mov
mov
adc
fsubr
push
ins
imul
dec
add
push
sbb
call
lds
xor
leave
adc
nop
data16
jne
mov
adc
mov
mov
mov
jp
jg
inc
push
mov
mov
out
ret
xor
mov
enter
sbb
mov
test
les
xlat
xchg
(bad)
xor
hlt
add
push
cld
movs
test
adc
stos
enter
xchg
cmp
lods
(bad)
cwde
shl
adc
add
add
add
mov
ja
mov
xchg
inc
pop
sub
push
mov
rcr
push
clc
pop
inc
loopne
daa
xor
mov
test
xchg
in
mov
jg
in
je
adc
call
pop
cmp
mov
jns
pop
aam
repnz
push
pop
pop
dec
aas
sar
sub
push
and
mov
jns
cmp
sbb
sbb
jmp
mov
mov
jge
jge
inc
or
mov
jnp
sar
push
cmp
loop
inc
and
jecxz
retf
(bad)
lock
(bad)
mov
in
xor
ds
push
fild
dec
cmp
dec
xor
cmp
test
mov
dec
lahf
xchg
sbb
xchg
(bad)
aam
jae
dec
mov
add
pop
dec
sub
add
jno
repz
movs
lock
xor
or
cwde
ins
clc
mov
inc
sub
cmp
neg
cmp
fbld
mov
stc
jmp
sar
and
scas
jl
mov
imul
cmc
mov
push
pop
repnz
test
xor
xchg
mov
imul
push
sbb
push
and
mov
push
inc
sbb
sub
popa
(bad)
inc
inc
ret
mov
test
mov
push
neg
cli
sbb
popf
push
into
daa
pop
mov
pop
jno
enter
ja
ins
lods
cmp
stos
cmps
leave
popa
adc
int
push
test
mov
(bad)
(bad)
mov
(bad)
loopne
sub
nop
and
adc
test
sub
cdq
cld
push
aaa
cmc
outs
mov
mov
out
inc
shl
sub
test
add
into
je
add
push
cmp
inc
jp
xchg
cmp
dec
push
rol
in
enter
mov
sbb
add
call
jmp
cwde
bound
pop
test
sub
in
and
and
pop
(bad)
dec
cmc
dec
sbb
mov
or
hlt
call
cmp
sbb
sbb
retf
jns
mov
jmp
jno
in
cwde
out
mov
(bad)
xchg
inc
cld
jb
mov
dec
leave
in
int3
jae
jns
push
mov
jge
mov
jb
pushf
push
jl
pop
aad
das
retf
lods
(bad)
mov
xchg
in
mov
pop
jae
fwait
cmp
push
repz
test
push
stc
ins
jb
data16
repz
add
sbb
je
aam
xlat
jb
inc
xchg
add
mov
jmp
enter
adc
rol
xor
mov
mov
lods
std
mov
addr16
push
pop
cld
into
and
mov
or
rol
ins
pop
addr16
iret
mov
movs
das
adc
inc
xchg
xor
ret
mov
rcr
push
cdq
stos
jnp
arpl
xlat
ret
adc
cs
pop
pop
jb
lods
das
cli
mov
mov
shr
inc
int3
aaa
pop
or
movs
(bad)
push
sahf
lds
dec
rcr
test
push
shl
lds
ja
pusha
mov
hlt
xchg
pop
inc
aaa
sub
arpl
ins
adc
sbb
push
and
fwait
inc
cmps
(bad)
aaa
cmovge
fadd
xor
push
(bad)
imul
pop
dec
rcl
loop
xchg
pop
mov
cmp
sbb
xor
jno
scas
or
jb
xchg
push
mov
add
ret
mov
jmp
sub
and
stos
stos
dec
push
add
jmp
inc
or
inc
lods
or
xchg
push
stos
neg
xchg
repnz
add
xchg
ret
(bad)
(bad)
sbb
pop
adc
push
pushf
sub
mov
and
cmp
out
cmp
pushf
enter
mov
popf
cwde
jmp
ret
mov
jecxz
lods
ja
fsub
imul
inc
adc
aam
ja
push
int3
out
mov
sbb
pop
loopne
xor
xchg
aaa
jns
pushf
(bad)
in
arpl
sub
pop
retf
mov
cmc
dec
cli
fcomp
add
inc
call
sub
(bad)
cdq
test
retf
sbb
sahf
cmps
retf
mov
test
test
out
or
retf
sub
rcl
xchg
jnp
test
test
mov
outs
xor
mov
jne
in
inc
mov
shl
popf
imul
shr
add
mov
fidivr
dec
mov
push
ret
mov
mov
jo
xchg
js
xchg
mov
cmp
cli
adc
sub
sbb
je
mov
mov
int
lahf
jbe
mov
add
retf
xchg
loop
add
xchg
int3
mov
ret
dec
mov
sbb
push
movs
cs
dec
xchg
inc
stos
mov
cmp
mov
stc
repnz
retf
test
movs
ret
mov
lods
lock
dec
fimul
adc
cmp
mov
fwait
imul
push
pop
mov
mov
les
mov
adc
shr
jp
test
into
sbb
jecxz
ror
jnp
(bad)
shr
jnp
pop
add
adc
rcr
iret
push
jnp
gs
lahf
sbb
inc
hlt
add
shl
sub
adc
or
add
push
cmc
xchg
sahf
into
paddw
loop
push
retf
aaa
rcr
push
ja
fcomi
popf
imul
out
sbb
retf
ins
mov
adc
adc
ss
fisubr
rol
js
les
scas
out
dec
stos
and
dec
mov
jecxz
mov
in
adc
or
test
push
aas
retf
arpl
inc
ficomp
adc
imul
loopne
jmp
mov
xchg
bound
mov
mov
mov
xchg
adc
cmps
jae
xchg
out
dec
loope
loope
or
mov
jmp
sti
rcl
inc
add
push
jns
dec
ret
mov
cmp
jle
int
sbb
xor
push
push
push
fwait
add
sbb
add
xor
mov
sbb
xchg
in
ins
test
add
inc
jecxz
shl
adc
lods
adc
mov
pop
sub
add
scas
push
lock
jmp
(bad)
mov
stos
(bad)
test
out
in
cmp
or
mov
sub
pushf
sub
dec
dec
fbld
adc
mov
xchg
retf
jns
mov
pusha
fucomi
add
pop
inc
popa
sahf
test
or
gs
and
push
fwait
dec
push
add
(bad)
std
mov
dec
out
sub
scas
jmp
push
sub
repnz
dec
sub
cmps
mov
loop
jecxz
add
cld
inc
sub
adc
and
lea
gs
or
cmp
xchg
push
jl
not
jp
cld
cmp
dec
mov
(bad)
sar
jmp
pushf
cmc
fsub
dec
cdq
iret
ret
ins
in
add
cmc
push
test
adc
int3
(bad)
test
xchg
rol
fwait
sub
sub
stos
jbe
sub
fcom
cwde
loopne
in
daa
adc
in
aad
jns
cmps
push
or
dec
push
mov
mov
push
ja
inc
fstp
cmp
repnz
inc
enter
aam
mov
adc
mov
je
ret
(bad)
mov
or
sub
jle
and
je
fcom
jae
popf
and
xchg
adc
not
arpl
(bad)
jae
jae
mov
mov
adc
push
push
and
cmp
and
popa
into
or
cmps
je
xlat
popa
inc
outs
clc
sub
sti
inc
mov
inc
push
mov
or
adc
lods
cwde
dec
adc
lock
ss
push
shufps
(bad)
vminpd
into
push
mov
retf
jmp
jl
push
pusha
mov
test
sub
xchg
add
and
call
xchg
pushf
mov
sbb
sub
push
mov
sub
cmp
stos
adc
outs
add
leave
outs
sub
imul
scas
jns
sbb
and
inc
int
xor
cld
add
dec
(bad)
jp
cli
int3
jae
xor
mov
mov
jp
iret
jle
xor
jle
add
mov
fnstcw
mov
sbb
loopne
retf
mov
push
repnz
test
aad
and
push
test
xor
call
xlat
dec
pop
adc
adc
mul
in
cmp
push
xor
mov
adc
dec
mov
adc
into
add
sub
sbb
push
dec
push
xchg
xchg
jge
cmp
jle
fisttp
dec
add
inc
sub
pop
inc
in
repnz
imul
mov
out
ror
xchg
out
or
test
or
aas
jne
data16
jnp
pop
mov
or
rcr
addr16
out
dec
jns
dec
into
ror
inc
lock
loope
rcr
scas
mov
outs
outs
dec
aaa
xchg
mov
push
jg
fwait
inc
push
stos
inc
std
pop
push
mov
fadd
outs
comiss
sbb
call
fild
rcr
pop
mov
mul
arpl
(bad)
adc
cmp
sbb
inc
sbb
jmp
icebp
lahf
sub
xor
xchg
stos
cdq
ja
xchg
cmp
(bad)
and
repnz
adc
jmp
es
out
inc
inc
aaa
jge
jb
push
data16
shl
and
jne
xor
out
push
mov
and
fidiv
movs
dec
jmp
dec
pop
or
push
shr
pop
out
adc
adc
call
int
sti
jle
xchg
aaa
jle
add
jo
scas
test
(bad)
scas
xchg
xor
loop
stos
cld
mov
retf
cs
pop
xor
push
jp
fld
push
mov
dec
sbb
cld
mov
(bad)
cwde
jb
out
sar
leave
sbb
pop
lods
mov
xchg
xor
add
bound
in
xor
push
mov
(bad)
out
stos
xor
in
jno
stos
mov
test
and
int3
lds
or
cdq
hlt
cmps
(bad)
and
mov
mov
mov
dec
cwde
push
sub
adc
adc
xchg
(bad)
fscale
rcr
mov
adc
pop
mov
idiv
outs
add
xor
jmp
int
aam
fldenv
aaa
int
aam
in
fnsave
addr16
in
cs
and
inc
ret
pop
xchg
jl
lods
sub
jge
mov
(bad)
fbstp
movs
fwait
or
mov
and
rcl
mov
inc
fs
aad
mov
push
aam
jecxz
lods
and
sar
sbb
xchg
push
push
mov
jno
lahf
mov
mov
out
cmp
inc
out
iret
dec
icebp
rcr
pop
pop
test
nop
xchg
jecxz
retf
aaa
add
mov
movs
mov
adc
je
and
and
sbb
mov
(bad)
jecxz
or
mov
sbb
adc
push
push
and
(bad)
mov
push
or
pop
pusha
call
or
add
out
pop
cmp
and
add
mov
pushf
push
aas
cmc
(bad)
enter
push
repnz
retf
jge
dec
mov
dec
lods
ins
fwait
iret
mov
push
mov
adc
stos
jmp
xchg
sbb
(bad)
fisttp
dec
stc
ins
or
jg
aam
(bad)
or
call
dec
ret
sub
and
dec
cmp
daa
lds
shr
fcom
jmp
cld
into
mov
loop
stos
dec
mov
and
paddd
xchg
pop
lods
jns
dec
inc
(bad)
mov
cwde
mov
lea
fwait
mov
xchg
or
add
sti
pop
cmp
ins
scas
aam
ret
cli
cli
shr
fwait
cmp
or
call
(bad)
jl
ja
add
mov
jmp
or
shl
jne
push
lock
sar
sbb
in
push
mov
fwait
or
cli
pop
ins
mov
fmul
pop
mov
mov
rcr
ja
mov
int3
dec
ss
test
icebp
sbb
pop
adc
jb
jae
add
mov
dec
test
push
or
inc
mov
xor
mov
hlt
jns
xlat
push
jecxz
dec
push
es
fild
in
or
aaa
(bad)
je
mov
jmp
bound
jmp
arpl
pop
shl
pop
mov
jmp
sbb
lods
inc
test
cmp
inc
scas
(bad)
psllq
and
jb
push
add
gs
loop
movs
pop
mov
pop
imul
inc
loop
stos
xor
shl
push
or
popf
mov
(bad)
out
aaa
arpl
je
add
(bad)
cmc
outs
push
scas
jno
cmps
mov
je
scas
call
es
outs
ret
push
mov
xchg
(bad)
fbld
mov
daa
retf
cmc
ja
and
sub
jo
mov
mov
push
lods
(bad)
inc
xor
jns
bound
inc
push
sbb
int
push
and
add
sahf
test
retf
pop
jl
(bad)
shr
test
lods
push
sub
les
push
pop
movs
mov
je
xchg
outs
adc
and
lock
adc
ja
les
mov
pop
daa
scas
loope
enter
add
jae
mov
mul
mov
dec
shl
pop
inc
loope
push
cwde
inc
or
push
int
ins
test
add
mov
ja
in
shr
jge
mov
add
jg
adc
ins
jns
adc
popa
jl
jo
bnd
jno
adc
xor
arpl
stc
rsqrtps
pop
lods
outs
test
(bad)
cld
shl
sub
and
sar
push
cli
movs
xor
fwait
sbb
adc
scas
hlt
(bad)
jp
movs
and
rdtsc
push
sti
fsubr
repz
fisub
pop
ja
pop
call
idiv
add
mov
aaa
mov
inc
mov
cld
aad
mov
jp
fs
mov
xchg
add
push
mov
sqrtps
inc
(bad)
popa
xchg
mov
fdivr
jb
and
mov
in
push
jge
jecxz
(bad)
mov
cs
ret
or
jp
imul
sub
ror
stos
push
mov
jle
cld
lahf
lods
in
iret
pop
cmp
pop
dec
cwde
and
dec
pop
das
call
and
sbb
mov
and
jno
push
or
push
movs
scas
mov
fsubrp
xchg
jp
and
out
fstp
mov
mov
loopne
xlat
xor
jno
jmp
add
cwde
mov
add
pop
fistp
mov
mov
pop
fucom
adc
rcl
mov
jmp
xlat
pop
pop
xor
push
(bad)
fs
cmp
jo
mov
jnp
outs
and
les
jmp
jae
pop
and
or
cs
mov
dec
mov
outs
sub
jns
mov
cmc
or
aad
iret
pop
idiv
add
(bad)
lods
inc
xor
fld
nop
fld
xchg
int
and
(bad)
ss
mov
sub
jmp
adc
jbe
adc
push
cmp
int3
inc
xor
movd
jbe
jecxz
inc
sbb
push
jecxz
or
mov
dec
pushf
jle
push
movs
sbb
cmp
scas
lea
(bad)
mov
sar
or
and
jmp
add
les
stc
and
pop
cmps
mov
or
push
pop
lock
pop
dec
xor
push
mov
fwait
repnz
rcl
sahf
(bad)
sar
jp
out
push
pop
push
sub
lods
scas
xchg
cwde
jecxz
cmp
mov
(bad)
shl
retf
ret
push
pop
inc
hlt
shl
pop
in
ins
jle
dec
pop
inc
scas
pop
loopne
xchg
loope
dec
jo
cmp
fimul
retf
cs
ja
pop
out
mov
es
sbb
scas
mov
in
cmps
xchg
mov
icebp
popaw
push
mov
cmp
(bad)
int3
adc
add
retf
std
inc
subps
cmps
adc
add
ds
dec
dec
bound
xchg
sub
shl
jle
retf
jmp
(bad)
int
or
push
add
xchg
nop
and
xchg
pusha
adc
mov
mov
jge
outs
pop
sahf
imul
push
enter
push
je
in
icebp
imul
cmp
lods
or
std
test
inc
mov
aam
dec
push
jne
icebp
fs
adc
adc
bswap
mov
popf
hlt
jl
jno
jmp
mov
repnz
(bad)
ins
fist
xor
sbb
pop
mov
mov
(bad)
jg
mov
inc
adc
sbb
int
cmps
adc
bound
int3
rcr
or
jno
inc
dec
push
call
mov
movs
xor
push
pop
mov
xor
mov
shl
xchg
add
leave
std
add
cdq
jecxz
pop
mov
sbb
or
test
call
inc
pop
outs
imul
xor
outs
sub
ret
mov
ins
dec
adc
shl
add
and
jg
sub
js
call
mov
pop
fiadd
scas
inc
test
arpl
loope
pop
retf
imul
cmp
add
xor
int
fnstsw
or
jecxz
icebp
mov
ret
enter
or
fwait
pop
add
aad
lock
iret
hlt
pop
ins
scas
pop
mov
daa
(bad)
in
(bad)
imul
jl
inc
int
add
cdq
cwde
xor
xchg
(bad)
mov
sbb
icebp
pop
push
push
mov
(bad)
je
jae
and
(bad)
dec
outs
ja
(bad)
sub
cmp
test
sbb
lahf
test
les
sub
fbld
mov
cld
scas
int3
jmp
loope
xchg
aam
int
sbb
mov
fisub
in
cwde
(bad)
add
add
mov
push
sub
fist
jns
rcr
and
in
xchg
jecxz
inc
adc
xor
cdq
and
jmp
bnd
or
push
daa
dec
mov
jns
sbb
pusha
xchg
sbb
mov
stos
aad
dec
fcmovb
push
fld
sbb
sbb
mov
jb
hlt
or
mov
xchg
mov
aam
push
inc
inc
fwait
outs
push
mov
or
test
mov
call
sbb
ret
test
or
cdq
xchg
aaa
je
adc
mov
in
and
ror
adc
add
mov
test
fdiv
pusha
int
in
pop
neg
mov
lea
fsubr
outs
xchg
add
add
push
dec
mov
mov
inc
les
mov
mov
popa
ret
adc
sbb
sbb
movs
mov
add
daa
loopne
jle
in
jmp
dec
fsubr
stos
aaa
or
mov
pop
xor
ficom
inc
into
das
adc
jae
inc
mov
test
leave
addr16
pushf
inc
repnz
push
or
xor
lock
fldenv
cwde
sti
ret
scas
aam
jne
mov
dec
cmc
dec
add
outs
call
mov
int
mov
sti
xchg
push
data16
push
pusha
mov
in
push
xchg
popf
iret
gs
pushf
adc
scas
dec
ret
inc
xor
outs
das
rcl
js
xchg
fcmovnu
in
arpl
pop
xchg
jo
inc
popa
sbb
icebp
cld
xchg
retf
pop
ja
xor
cmps
sub
sbb
xchg
add
pop
push
sub
or
and
pop
sub
mov
jns
(bad)
pop
jne
add
adc
dec
movs
and
jmp
out
mov
hlt
aam
or
call
popa
loope
shl
push
adc
sbb
and
ins
lea
inc
adc
repz
hlt
xchg
add
mov
sahf
scas
mov
jmp
imul
out
pop
cdq
dec
outs
ret
dec
bswap
pop
xor
xchg
sbb
push
lods
adc
or
dec
call
aas
jae
cdq
sbb
push
add
call
rol
push
add
push
sub
ds
pusha
loope
sbb
jb
or
jne
imul
or
rcr
mov
or
sub
(bad)
test
test
sub
pusha
and
mov
sahf
fst
imul
and
sbb
sbb
mov
adc
push
pop
cwde
jecxz
ins
inc
fist
dec
aas
enter
jmp
(bad)
iret
cdq
push
inc
bound
dec
out
mov
pop
loopne
xchg
mov
ror
clc
fdiv
jne
or
ins
dec
cwde
(bad)
dec
xor
leave
sub
shl
sbb
xor
and
push
cli
sbb
cwde
adc
pop
inc
outs
sbb
icebp
or
lahf
test
shr
add
cmp
jmp
sahf
(bad)
push
add
sti
jbe
jo
mov
pop
adc
shl
xor
dec
inc
fist
imul
cmps
pop
test
ins
pop
mov
cmp
push
in
sub
aaa
cmp
add
pop
xor
sub
test
add
push
jg
and
outs
dec
inc
sbb
push
repz
cmp
add
pop
dec
add
dec
xchg
adc
pop
sub
mov
call
and
loope
outs
jp
mov
pop
loopne
or
jp
pop
stos
xchg
adc
add
sub
pop
adc
cmps
test
add
loop
neg
jns
hlt
push
loope
fwait
mov
ds
aas
dec
daa
aaa
aam
dec
dec
cwde
ror
pop
ds
mov
inc
lahf
inc
es
inc
mov
imul
scas
fs
addr16
sbb
bound
mul
or
add
in
lea
lds
or
mov
mov
sub
ins
sub
adc
out
adc
fwait
add
lock
mov
add
stos
dec
add
xchg
or
int
(bad)
mov
cmp
dec
adc
invd
sbb
lea
retf
dec
shr
cmp
das
repnz
mov
popa
cmp
mov
cmp
gs
mov
mov
mov
push
or
imul
mov
jmp
adc
mov
inc
add
cwde
cmps
stc
xchg
nop
and
adc
sbb
(bad)
test
test
pusha
dec
inc
sub
fild
mov
test
out
int3
repz
iret
imul
data16
sahf
sbb
or
rcr
push
in
lods
in
xchg
jmp
call
pop
test
xchg
xor
pop
xchg
mov
(bad)
mov
hlt
shl
sbb
xchg
rcl
shl
or
push
inc
inc
lds
clc
icebp
sbb
push
aaa
iret
enter
(bad)
mov
or
pop
popa
test
clc
pop
imul
sbb
jl
outs
pop
sub
js
push
mov
sbb
stos
sbb
sbb
arpl
cli
pushf
mov
retf
adc
push
pop
sbb
sbb
popf
js
arpl
push
out
push
xchg
cmp
sub
mov
je
mov
push
jl
pop
sbb
aad
repz
or
cmp
fldln2
mov
jbe
jne
divps
push
aaa
cs
xor
xchg
mov
call
mov
add
push
(bad)
xchg
ret
ror
dec
pushf
mov
sub
push
repz
dec
cmp
cmp
sub
test
xchg
mov
sahf
test
loop
out
pop
or
or
lods
je
(bad)
out
sub
dec
js
mov
popf
push
test
jo
push
in
sub
cmc
mov
je
sub
aaa
xlat
pop
shr
fisub
dec
imul
fcmovnu
mov
stos
dec
das
add
movs
in
mov
fisubr
jecxz
jno
ror
mov
fwait
arpl
add
js
aad
ins
lea
cld
xor
mov
push
xor
sbb
popa
pop
push
dec
or
pavgb
xchg
pop
dec
sub
leave
out
jbe
shl
ss
push
dec
inc
ins
cmps
pop
arpl
scas
fdivr
or
mov
push
or
mov
(bad)
sub
fist
xor
loopne
add
jnp
add
aas
inc
leave
sbb
and
movlps
scas
cmp
sbb
adc
sbb
jge
or
out
jae
xchg
repz
mov
cmp
ret
pop
and
push
sub
dec
push
sub
out
vmovntdq
popa
in
xchg
push
je
pop
jp
lods
imul
adc
out
lock
pop
repz
xor
cld
(bad)
popa
aaa
xor
pop
cmps
enter
or
xchg
repz
push
fcomp
cs
lea
je
sub
push
jmp
push
icebp
add
fmulp
into
loop
mov
pop
repnz
jp
or
fbstp
(bad)
or
(bad)
mov
aam
pushf
fisttp
outs
sahf
adc
xor
add
adc
test
bndstx
rol
cwde
arpl
mov
cmc
out
imul
retf
ror
loopne
push
cmp
loope
mov
cmp
xor
cdq
xlat
loope
inc
into
and
xlat
test
cmc
jns
xchg
in
test
sub
sti
and
(bad)
jae
jmp
or
dec
fwait
or
inc
xchg
add
(bad)
adc
mov
sbb
push
adc
mov
dec
xchg
test
ret
pop
aas
inc
and
add
dec
pop
movs
cmp
mov
pop
or
mov
jmp
jns
mov
sub
mov
(bad)
fcomp
push
sub
jecxz
into
in
inc
sar
imul
mov
enter
push
jg
ja
xchg
sbb
jo
ja
jno
pop
pop
sahf
inc
cmp
jl
pop
cs
test
sbb
jb
or
out
push
nop
cwde
fcomp
fistp
jo
xor
mov
mov
mov
fist
stos
pop
dec
hlt
(bad)
scas
leave
imul
hlt
ret
mov
adc
lods
retf
out
mov
lahf
sbb
inc
jns
dec
or
ja
push
pop
pop
jae
mov
xchg
ds
mov
inc
dec
sub
cmp
sbb
sbb
int3
mov
ds
popa
ja
iret
jmp
aad
inc
or
jmp
cld
call
clc
repz
out
xor
imul
or
push
push
mov
mov
and
push
jmp
jbe
mov
sub
test
sbb
mov
loopne
jmp
mov
push
rol
adc
enter
(bad)
leave
rcr
sahf
aam
inc
push
es
lds
sbb
cmovle
pop
out
jo
fiadd
movs
pop
ror
pop
sub
sub
sbb
div
fisttp
outs
or
inc
jns
int3
inc
sbb
push
repz
leave
out
cmps
mov
lods
test
jle
aas
emms
dec
jno
inc
push
xchg
mov
jns
lock
push
loope
sbb
(bad)
lock
sbb
pop
ss
add
retf
shl
outs
in
add
repnz
in
and
outs
(bad)
shr
mov
inc
stos
dec
xchg
inc
mov
icebp
inc
scas
adc
adc
adc
fs
imul
add
pop
ret
cmp
(bad)
iret
movs
cmp
push
push
add
xchg
or
mov
inc
pop
cmps
push
call
jmp
or
pop
xor
xchg
or
(bad)
outs
hlt
dec
xchg
cmp
pop
sti
sbb
sub
aaa
out
xor
xchg
push
pop
dec
fs
dec
fs
shl
mov
mov
push
call
pop
jns
and
and
loop
mov
sbb
or
and
ins
jecxz
les
in
ins
or
xor
aas
mov
ffreep
jle
mov
jns
dec
pop
call
stc
loop
int
xor
jle
out
fwait
adc
icebp
pop
xchg
fldcw
mov
jge
enter
inc
jg
cli
pushf
add
cmp
inc
dec
cld
retf
in
cld
test
ss
(bad)
in
ja
xor
daa
adc
cld
mov
mov
cmp
hlt
cmp
leave
mov
sti
push
push
cmp
ins
adc
sahf
dec
push
lea
and
out
sub
adc
jbe
jl
arpl
add
sbb
fdivr
movhlps
out
sti
sub
hlt
(bad)
pop
dec
or
xchg
and
int3
dec
outs
les
cmps
jnp
or
push
and
xlat
mov
or
jns
test
add
xor
add
push
dec
ror
imul
ss
stos
addr16
mov
(bad)
mov
into
iret
(bad)
jae
cld
push
push
lds
adc
fwait
or
xchg
mov
cmp
dec
pushf
push
jae
mov
adc
pop
into
psubb
xchg
mov
push
not
ret
xor
fsubr
loop
sti
pop
sub
pop
dec
test
lods
shl
sub
popf
mov
fisubr
mov
pop
ins
or
scas
ret
adc
inc
jecxz
cli
test
iret
sbb
xchg
jmp
inc
enter
in
loop
bound
pop
pop
adc
fisttp
frstor
(bad)
jmp
sub
outs
push
pushf
aaa
imul
ins
xchg
fldcw
or
icebp
mov
fild
loop
and
fdivrp
mov
iret
sub
clc
fcmove
cmp
aad
cmp
or
xchg
cmps
sti
sub
int
adc
cmps
pop
mov
into
pop
test
dec
pop
mov
push
pop
cmps
aad
stc
xor
lahf
mov
inc
movs
or
test
dec
inc
dec
cs
pop
jl
mov
rcl
imul
aas
dec
repz
icebp
repnz
shr
outs
inc
xor
dec
jmp
(bad)
mov
pop
lea
jmp
movs
jb
cmp
nop
sub
inc
je
pop
add
lods
adc
aas
(bad)
sahf
add
lds
mov
sub
mov
lds
xchg
push
mov
cwde
xchg
mov
(bad)
fcom
push
cwde
or
mov
add
inc
popf
mov
lds
add
ret
aad
sub
xchg
mov
push
dec
add
jl
loop
sub
ret
call
pop
push
fst
lea
pop
push
and
std
cdq
call
cmp
add
retf
int3
adc
lock
dec
inc
xchg
nop
arpl
pop
sbb
push
and
mov
cmp
idiv
and
push
add
into
xor
out
cmc
xchg
sbb
(bad)
(bad)
and
mov
loopne
jl
xor
sbb
adc
mov
pop
sbb
xor
inc
fsubr
retf
mov
std
mov
fdivr
push
es
outs
arpl
sahf
stos
push
dec
sbb
loope
push
mov
sub
mov
or
xchg
iret
sbb
push
pop
test
(bad)
aad
pushf
jmp
sub
ret
adc
cli
xor
xchg
in
jne
gs
aam
jo
ret
jae
push
jmp
or
and
and
stc
jo
adc
jecxz
retf
in
or
mov
(bad)
sbb
pop
xchg
cld
add
(bad)
and
mov
mulps
jbe
and
xchg
mov
shl
arpl
ret
ss
cmp
mov
adc
shr
cmc
pop
int3
fldenv
dec
add
call
mov
pop
push
jb
pop
sbb
xchg
fnsave
adc
aas
dec
or
jge
and
mov
pop
mov
mov
push
dec
scas
xchg
fwait
out
retf
adc
adc
retf
push
ss
sub
jp
cmp
ret
mov
pop
and
jae
adc
pop
shl
adc
ss
fs
and
retf
push
cmp
dec
cmp
inc
shl
lea
test
fwait
lock
cmp
(bad)
jg
xchg
vmovupd
rol
jmp
add
in
add
adc
push
cwde
arpl
mul
pop
xchg
sub
aam
mov
xor
dec
pop
xchg
(bad)
shl
push
sbb
fcmovbe
xchg
out
dec
mov
sbb
mov
cmps
jge
mov
mov
mov
inc
aad
mov
and
or
outs
mov
es
mov
cs
sub
int
push
lods
mov
mov
push
jmp
stos
jb
js
mov
hlt
loope
daa
cli
dec
std
sbb
jno
ja
mov
mov
mov
xor
imul
mov
inc
test
and
mov
xchg
out
test
cmp
daa
xchg
jnp
sub
lds
iret
mov
push
mov
cs
lock
jbe
xchg
cmc
xchg
icebp
in
and
icebp
jecxz
fimul
out
jne
lods
in
sbb
push
inc
or
mov
fstp
sub
pop
jle
jb
or
daa
in
inc
cmp
shl
les
jo
xor
gs
addr16
stos
daa
mov
in
mov
retf
(bad)
sub
fdiv
and
fild
call
pop
nop
fld
leave
xor
and
cli
stos
retf
xchg
push
arpl
and
jmp
sar
in
xchg
(bad)
std
sahf
or
ins
repnz
mov
dec
shl
mov
push
loop
jmp
jbe
pop
mov
imul
ja
sub
mov
f2xm1
jge
and
test
dec
sub
mov
adc
sbb
aaa
push
in
fstp
mov
aas
adc
mov
js
mul
sbb
mov
pop
inc
fimul
xlat
mov
push
xchg
mov
test
jno
pop
leave
test
call
sbb
push
fisttp
ins
fld
ja
adc
xchg
out
mov
fcomp
xor
cwde
jle
jg
cs
or
cmp
fnstenv
cmp
fild
sar
aaa
out
lock
ret
call
xor
out
fsubr
dec
mov
rep
or
sub
xor
(bad)
adc
push
mov
loop
and
stos
enter
or
int
fcom
pop
retf
sbb
jle
pop
hlt
jne
xor
rcr
sbb
icebp
stc
inc
mov
retf
pop
das
pop
push
and
leave
aas
dec
cld
out
and
cld
adc
ins
mov
int3
popf
(bad)
or
imul
or
ret
mov
sbb
jo
clc
push
lods
mov
jne
mov
and
or
mov
xchg
xchg
jmp
mov
jg
xchg
dec
adc
icebp
mov
push
ror
inc
mov
jl
mov
mov
(bad)
pop
mov
retf
imul
pop
lods
pop
lods
js
call
cmp
or
pusha
mov
int
cmp
loop
scas
das
sbb
mov
stos
xchg
cmp
mov
imul
fs
or
add
add
addr16
inc
shl
cmp
xor
xchg
xor
test
jbe
mov
push
(bad)
cmp
jge
and
mov
mov
add
jge
sbb
lods
cmp
mov
repnz
add
mov
dec
fst
adc
jmp
jg
add
addr16
je
push
xor
ret
std
push
inc
sub
clc
xchg
aaa
dec
pop
inc
push
inc
mov
inc
inc
lock
ret
ror
xchg
(bad)
push
and
jne
repnz
fwait
add
sbb
fidivr
push
das
pop
ins
movs
jmp
rcr
jecxz
xchg
jmp
xchg
ret
arpl
(bad)
sbb
sbb
test
imul
pushf
js
imul
shr
outs
shl
or
jb
mov
out
adc
dec
pop
js
test
jno
mov
pop
push
sub
stos
js
pop
push
xchg
pop
and
xchg
and
paddsw
xor
(bad)
cli
xchg
pop
gs
(bad)
sar
xchg
(bad)
jmp
in
clc
daa
mov
loop
hlt
xlat
ins
push
push
jle
pushf
sti
in
cmps
jge
xlat
lods
call
ins
cmp
nop
fwait
pop
mov
imul
dec
or
jecxz
mov
jmp
mov
push
push
scas
xchg
mov
xchg
repz
aad
jmp
inc
lods
pop
xor
dec
xchg
in
push
jg
mov
mov
push
icebp
loopne
arpl
pop
fnstenv
push
repnz
(bad)
inc
sbb
xchg
xchg
add
xchg
cmp
sbb
pop
mov
test
push
into
add
push
test
push
and
into
movs
push
xor
pop
push
pop
lahf
call
shr
shl
adc
out
push
int3
popf
jo
call
jg
mov
in
rcl
xchg
or
xchg
int3
xchg
xchg
movs
cmp
jmp
mov
out
mov
mov
xor
add
sub
pop
or
mov
cmc
inc
cmp
jnp
lds
adc
mov
pop
cmp
mov
mov
pop
cdq
(bad)
jbe
repz
hlt
lods
jnp
jo
jp
pop
retf
jno
jne
pop
ret
scas
stc
repnz
fldcw
pushf
add
retf
psubsw
scas
loope
ins
adc
in
pop
inc
retf
cmp
cmps
ins
mov
adc
mov
sar
dec
inc
inc
and
add
sbb
jle
mov
clc
dec
fldcw
retf
xor
iret
rcr
lahf
test
mov
xor
das
dec
xlat
sti
loop
shl
inc
mov
loop
movs
xor
xchg
lea
pop
fcmovne
mov
jne
mov
jb
pop
addr16
mov
lods
dec
mov
sahf
outs
arpl
xchg
mov
mov
push
pop
add
adc
xchg
dec
inc
cmp
in
ficom
push
rol
gs
aaa
push
adc
cmp
popa
sub
mov
mov
xchg
mov
pop
out
call
das
cli
push
add
or
xchg
sahf
cdq
cli
int3
dec
call
cli
mov
ins
test
push
mov
push
lods
loopne
push
shl
pop
mov
or
cmp
lock
fsub
adc
mov
mov
mov
pop
les
pop
and
fbstp
jbe
leave
hlt
je
mov
out
mov
adc
and
arpl
int3
inc
xchg
inc
rol
add
mov
test
dec
xchg
paddsw
sub
rcl
jae
push
adc
dec
aas
add
push
test
cmp
xchg
xchg
lods
movs
mov
sahf
test
cmp
mov
push
and
test
add
cld
push
inc
pop
sbb
test
mov
mov
dec
or
stc
pop
cmps
inc
or
(bad)
jo
lods
dec
(bad)
and
daa
repnz
dec
jg
bound
push
mov
jae
inc
repnz
and
ins
inc
icebp
sbb
fnstenv
cmps
jbe
in
cwde
test
test
aaa
xchg
loop
inc
ror
pushf
ffreep
mov
cmp
push
out
or
lock
ins
ja
mov
test
sbb
les
fadd
jp
cdq
ja
mov
adc
sub
dec
inc
fst
fsubr
mov
xlat
mov
loopne
fistp
f2xm1
movs
mov
mov
(bad)
pushf
popf
pop
add
das
call
aaa
icebp
(bad)
cmc
pop
jne
(bad)
aas
repz
xor
imul
xchg
xor
int3
lea
sbb
test
xlat
dec
cmps
pop
mov
in
xchg
out
sub
retf
dec
pop
repz
push
and
es
xchg
int
mov
test
test
stos
outs
sub
stc
and
sub
daa
addr16
push
xor
sub
jmp
leave
add
loop
sub
add
std
mov
enter
xor
out
rol
popa
ds
call
sub
test
adc
inc
sbb
add
jle
xor
or
out
or
cmc
add
xchg
and
leave
adc
adc
dec
rcr
mov
out
mov
adc
clc
add
xor
or
jp
test
pop
loope
cmps
xchg
inc
jp
in
xchg
xchg
repnz
pop
mov
cmc
aad
sar
adc
bound
data16
pop
pop
cmp
adc
or
gs
dec
sub
push
mov
out
std
pusha
in
sbb
aaa
mov
add
cmp
jo
nop
jno
jno
arpl
fdiv
retf
jno
add
mov
test
adc
push
shl
adc
popa
xchg
sub
mov
retf
adc
fnstcw
and
dec
ret
outs
mov
(bad)
fld
and
add
cmps
fmul
dec
cmp
retf
xchg
mov
sahf
stos
or
sbb
mov
out
and
or
ret
sahf
pop
adc
push
xor
cmp
mov
in
mov
pusha
adc
inc
icebp
pop
fst
inc
xor
push
mov
outs
fstp
cmps
out
inc
jne
fisub
repnz
sbb
or
fisttp
cmc
aad
sbb
movs
and
aam
cdq
xor
ins
test
das
pop
das
xchg
cmp
stos
aaa
ja
xchg
std
int
aam
ret
inc
cmps
test
xchg
sbb
mov
mov
cs
ret
retf
mov
cmp
or
pop
cmp
pop
inc
es
mov
and
mov
add
popa
fdiv
scas
mov
mov
mov
jb
test
adc
pop
hlt
xor
icebp
ss
inc
adc
cdq
(bad)
dec
pop
push
mov
aam
jp
push
gs
xor
push
ja
(bad)
mov
fimul
mov
sub
rcl
mov
jne
mov
adc
push
sub
mov
pop
je
fmul
adc
pop
xchg
and
loope
push
ds
jl
sti
mov
mov
jp
into
push
ja
mov
ret
mov
fisub
sbb
mov
sbb
jnp
xchg
sti
cmp
mov
adc
out
dec
mov
inc
xchg
inc
adc
add
pusha
in
addr16
clc
frstor
push
push
xor
pop
add
sbb
xor
inc
jecxz
mov
shufps
mov
xchg
cmps
sbb
push
and
jno
loop
and
jbe
push
dec
or
fdivr
out
nop
std
cli
mov
call
mov
xchg
mov
fist
jp
pushf
or
cmc
mov
retf
dec
shl
push
(bad)
xlat
lea
sbb
ret
inc
retf
push
adc
jne
push
cmc
aas
enter
pop
jmp
mov
pop
xchg
add
stos
mov
jb
sub
add
dec
mov
clc
(bad)
out
fldcw
call
or
mov
mov
dec
push
sahf
sub
pop
xchg
add
mov
inc
xor
inc
sub
dec
mov
xor
fs
popf
sbb
cmp
xor
aad
jo
xlat
bound
clc
ret
shr
sub
push
cmp
xchg
mov
jp
push
popf
cmc
sub
xor
sahf
pop
sbb
out
or
mov
call
jle
lds
push
or
adc
add
fs
jb
stos
or
mov
dec
out
jb
xor
gs
jns
mov
dec
rcr
ds
cmp
cmp
adc
and
adc
(bad)
pop
ja
sbb
sub
stos
imul
clc
scas
jnp
sub
lods
jne
pop
addr16
cmp
xor
(bad)
jle
retf
mov
movs
pop
neg
frstor
mov
sbb
ror
jns
sub
ret
scas
push
rcr
cs
inc
xor
je
sub
sub
ficom
psubb
sub
and
and
jo
adc
mov
adc
daa
pop
adc
pop
fwait
punpckldq
cmps
and
add
sbb
(bad)
dec
add
mov
mov
mov
loopne
inc
sbb
mov
cwde
mov
lahf
xor
mov
xchg
fbstp
adc
out
popf
paddusb
lds
retf
sbb
lock
cld
and
jo
cmp
push
loopne
test
stc
push
out
into
xor
cmp
push
lock
ds
pusha
in
or
sti
pop
dec
repz
xchg
arpl
jmp
dec
jo
test
cmc
test
adc
in
cmc
or
dec
and
cmps
fist
cmp
lods
lock
std
lods
jecxz
mov
fisttp
adc
mov
and
adc
mov
adc
fst
sub
and
xor
pushf
mov
ds
push
dec
mov
inc
es
sar
cwde
inc
(bad)
cmps
jecxz
jmp
cmps
aad
and
pop
sbb
adc
adc
and
sbb
mov
pop
repz
dec
and
cmps
into
mov
sbb
out
(bad)
push
jle
ret
in
add
into
aam
adc
sub
in
xchg
out
stos
fdiv
mov
ss
cdq
lea
sbb
push
mov
jge
xchg
mov
pusha
or
clc
ins
push
dec
ja
xor
fstp
lods
in
imul
(bad)
mov
mov
mov
int
fisubr
mov
xor
mov
int
(bad)
popf
add
pop
sub
and
nop
xor
mov
push
dec
nop
jge
test
iret
gs
sahf
ror
jb
imul
xchg
sbb
inc
cmps
or
je
sub
cmp
int3
xor
dec
xor
xchg
popf
add
sbb
sub
xchg
jmp
cmp
daa
(bad)
jg
dec
movs
cmp
mov
push
sbb
es
dec
push
icebp
dec
lods
add
(bad)
fstp
in
mov
mov
inc
or
(bad)
sar
adc
in
in
fsubr
or
mov
test
pop
or
pop
sbb
fwait
add
mov
movs
(bad)
repnz
shl
ja
push
xor
pop
jno
sbb
(bad)
cli
sub
xchg
sbb
loope
int
test
and
int
xchg
add
and
pop
mov
mov
push
xchg
jb
js
movs
xchg
xlat
les
stc
mov
repz
add
aas
aam
aaa
xchg
xchg
mov
inc
dec
imul
cmp
mov
cmp
pop
aad
or
aaa
push
fdivr
mov
sub
sbb
jl
scas
int
loopne
fs
out
cmps
jne
mov
push
aaa
sbb
inc
inc
adc
sbb
loope
adc
push
xchg
push
test
div
loop
pop
outs
push
sbb
scas
xchg
je
(bad)
push
ja
loopne
adc
out
jno
arpl
lahf
adc
sub
dec
fisubr
sub
rcl
and
ss
aam
add
retf
mov
mov
(bad)
sbb
call
and
lods
dec
mov
imul
retf
dec
or
lds
dec
out
sti
mov
cmp
leave
inc
lea
pusha
mov
or
pushf
mov
leave
xchg
push
lods
cmps
jl
daa
sub
(bad)
ja
ret
rcl
xchg
sub
mov
gs
popa
dec
pop
xlat
pop
jmp
mov
xchg
cmc
cmc
xchg
or
in
dec
lahf
inc
and
add
daa
xchg
gs
call
mov
(bad)
cmp
pop
xchg
xor
jmp
adc
lahf
or
into
mov
inc
int
pop
stc
out
cwde
xchg
lahf
mov
mov
pop
jno
xor
cmp
xor
mov
js
enter
dec
add
in
les
repnz
sbb
into
mov
or
int3
adc
into
inc
sbb
pop
(bad)
bound
add
bound
call
leave
lea
jns
rol
push
jne
je
xor
outs
push
pop
sti
mov
stos
loope
out
ret
sub
iret
mov
push
pushf
xchg
inc
dec
push
jmp
mov
outs
push
dec
es
mov
pop
push
or
in
cli
fstp
mov
xchg
inc
ins
mov
xor
sbb
fs
jae
or
gs
stos
out
cmp
aas
inc
fld
lahf
enter
dec
jmp
push
sbb
ja
mov
add
hlt
test
dec
xlat
mov
cmps
push
rcl
xor
jnp
mov
aaa
mov
dec
leave
ja
mov
lds
les
dec
div
div
jno
xchg
lea
adc
imul
adc
jge
mov
movs
int3
fstp
jg
lock
ds
push
adc
sbb
mov
ss
add
pop
mov
sar
aad
adc
out
jb
fdivr
xor
mov
imul
sbb
std
pop
cmp
push
nop
ins
movs
jnp
scas
dec
mov
push
in
out
sbb
xchg
test
fwait
aam
cmps
or
test
mov
fsub
mov
in
cmp
dec
test
aad
shl
pop
int
test
bound
add
inc
jp
xchg
sbb
pop
sahf
in
sbb
out
scas
cmc
or
fmul
push
fadd
xchg
out
add
jle
cli
fcmovnu
icebp
inc
repz
jmp
add
test
sar
xchg
stos
ins
sahf
sub
jo
es
push
(bad)
in
dec
mov
mov
adc
inc
arpl
ins
aad
test
cmc
mul
retf
inc
push
out
mov
jae
jmp
xchg
leave
mov
dec
add
and
scas
icebp
sub
dec
scas
aaa
jle
fisttp
in
mov
dec
mov
in
push
(bad)
in
lods
ss
and
mul
xchg
dec
cdq
cwde
outs
outs
nop
test
(bad)
mov
ins
and
xchg
fst
lahf
cmps
or
jp
sti
push
inc
pop
stc
pop
(bad)
jge
mov
sub
xchg
push
jg
mov
push
mov
push
inc
fistp
jl
test
xlat
adc
nop
mov
sbb
lods
push
lods
(bad)
xor
int3
adc
cmps
push
clc
lahf
in
inc
(bad)
mov
or
ret
mov
add
pop
dec
xor
dec
and
xlat
inc
jb
xor
xor
retf
cmps
sbb
in
stos
xor
loop
mov
mov
mov
or
cmps
add
push
mov
mov
je
inc
mov
sbb
cmp
gs
dec
pop
test
adc
mov
fist
enter
or
stc
push
je
push
idiv
arpl
imul
popa
retf
adc
cmp
and
aad
fwait
cmp
cmp
jbe
xchg
movs
xchg
sub
sar
cmp
sub
mov
daa
cld
test
fmul
call
pop
sbb
ror
fs
call
ret
mov
or
repz
or
inc
xor
jmp
in
mov
je
mov
sti
xchg
cmp
(bad)
repz
jne
data16
in
pusha
inc
push
hlt
xchg
xchg
sahf
mov
adc
mov
inc
call
inc
adc
aas
fdivr
jns
imul
(bad)
fadd
cli
lods
cwde
dec
dec
retf
repnz
or
adc
push
cmps
ja
hlt
shr
jns
sbb
daa
jns
pop
xchg
add
call
stos
jge
dec
sub
mov
xchg
sub
ret
in
fld
xor
iret
movs
mov
iret
(bad)
pop
lea
inc
adc
inc
clc
inc
jmp
adc
push
test
or
enter
cmc
cmps
xor
push
sbb
jg
fwait
repnz
inc
add
pop
sbb
stos
outs
jae
cmp
cmp
push
xchg
cld
loope
ins
retf
retf
jp
les
gs
outs
cld
dec
xor
mov
fucom
xchg
jo
loope
sub
mov
fcom
repnz
in
add
or
mov
stos
xor
dec
add
scas
jl
addr16
cli
pop
in
es
sub
out
jle
cmps
bound
jg
jle
xor
adc
inc
cmp
adc
daa
push
and
dec
pop
std
mov
xlat
cmp
adc
ss
retf
test
dec
fidivr
sar
mov
aas
and
push
(bad)
sub
mov
push
push
xchg
fadd
loopne
fadd
ret
(bad)
add
push
xor
inc
inc
test
sbb
sbb
add
(bad)
fisttp
ins
push
mov
cs
in
jns
movs
aam
sti
adc
enter
inc
cdq
mov
xchg
xchg
cmp
mov
ret
or
in
or
or
fsubr
call
inc
and
jmp
add
mov
add
(bad)
ja
add
shr
mov
sub
enter
(bad)
mov
sub
cmp
inc
adc
retf
or
push
ins
iret
test
xchg
pop
fimul
xor
outs
mov
push
stc
mov
nop
dec
adc
cld
adc
js
inc
and
out
pop
inc
xchg
std
cmp
mov
add
mov
push
aam
pop
xchg
mov
int3
add
ds
ds
daa
mov
jb
adc
pop
fld
xor
xchg
add
sub
xchg
in
xchg
aaa
ss
dec
rcr
retf
dec
test
popf
(bad)
int3
call
cmps
inc
mov
sub
inc
adc
sti
jp
pushf
lods
pop
add
or
mov
shr
popa
int3
xchg
adc
dec
gs
js
cdq
mov
dec
leave
shl
(bad)
add
aaa
sbb
pop
lods
fcmovnb
pop
mov
mov
movs
pop
mov
ret
add
adc
mov
pop
out
call
jg
imul
cmp
mov
dec
in
imul
jo
dec
jecxz
jae
add
ja
out
int3
and
addr16
dec
cli
and
clc
dec
out
shl
xlat
mov
jle
out
jmp
ds
inc
mov
hlt
xchg
stos
xor
(bad)
push
neg
(bad)
iret
scas
inc
fwait
or
out
out
push
inc
inc
dec
mul
mov
jne
pop
xchg
cmp
out
addr16
cmp
jne
sbb
cmp
cmp
out
mov
repz
pop
aam
pop
add
or
ins
sbb
das
cld
dec
sub
jo
in
lods
rcl
fwait
jle
ss
das
(bad)
outs
(bad)
not
retf
ds
test
inc
adc
xchg
fs
and
or
mov
ficomp
mov
mov
call
ss
pop
cmp
test
out
and
(bad)
fisubr
jl
sbb
clc
idiv
das
push
dec
sub
dec
sbb
enter
outs
mov
out
jo
fisttp
mov
fcmovbe
add
jp
adc
inc
aam
lods
mov
imul
int3
xchg
ds
fwait
dec
jg
and
mov
sar
jge
pop
(bad)
push
jle
(bad)
(bad)
cs
mov
mov
xchg
mov
sub
ror
mov
aaa
sbb
call
cmp
sbb
mov
and
pop
fcom
push
hlt
pop
pop
dec
or
sub
sbb
jno
ficom
or
jp
loop
outs
sbb
out
cmp
and
aad
or
xchg
push
sub
cmp
push
adc
out
out
push
adc
ins
push
aaa
sbb
call
and
mov
sub
add
cld
sahf
add
fisttp
lods
ds
and
out
stos
fldcw
pop
or
sbb
inc
xchg
fsubr
(bad)
and
sbb
push
(bad)
add
push
ret
jg
cmps
push
mov
jae
mov
ja
cwde
out
repz
(bad)
fwait
xor
push
xor
outs
out
das
fstp
mov
call
jp
mov
xchg
dec
in
push
inc
outs
test
inc
daa
cmp
aas
rcr
out
xchg
pushf
pusha
push
lock
cmp
pop
cs
or
into
xchg
pop
mov
scas
fstp
push
push
aam
inc
scas
cmp
adc
adc
es
stos
sbb
pop
jbe
(bad)
std
(bad)
add
daa
inc
dec
loope
push
test
inc
fidivr
fdiv
push
or
push
(bad)
sub
xchg
dec
sub
mov
add
lods
mov
pop
mov
sub
enter
rcr
xchg
(bad)
mov
inc
inc
rol
and
pop
ret
rep
fbstp
iret
push
in
xchg
mov
pop
jmp
movs
ss
movs
loope
inc
xor
hlt
xchg
jmp
pop
push
sbb
add
fst
xchg
inc
add
aas
mov
pop
xchg
and
aad
retf
shl
loope
adc
stos
in
or
jl
enter
add
aas
test
ins
mov
cmp
imul
pop
mov
ret
or
icebp
outs
cmp
cs
sbb
xchg
out
(bad)
xor
or
mov
cvtdq2ps
adc
(bad)
test
pop
bound
cmp
je
mov
xor
inc
inc
neg
or
push
cmp
fstp
pop
int3
(bad)
aad
repnz
outs
add
dec
data16
hlt
add
imul
and
push
xchg
mov
jp
popf
sar
xchg
sahf
jmp
js
pop
in
hlt
mov
hlt
pop
dec
xchg
mov
cmp
or
and
es
in
mov
call
sub
daa
and
jp
xor
int
fucomip
mov
jmp
xor
jg
repz
arpl
and
sub
fs
iret
hlt
adc
jle
mov
in
and
jle
js
dec
cld
mov
jp
cmp
lea
arpl
cld
jge
std
or
icebp
mov
movs
scas
(bad)
xlat
xor
hlt
cmp
repnz
mov
push
pusha
fwait
or
ja
aam
mov
jmp
and
in
xor
scas
cmp
addr16
add
icebp
syscall
adc
aad
cmp
aad
outs
imul
lods
push
clc
fidivr
(bad)
movs
push
sub
out
lock
sub
adc
je
lock
inc
mov
jmp
mov
pop
es
sub
gs
push
clc
sbb
and
imul
add
neg
fadd
stos
jae
pop
and
push
fidivr
dec
cmp
mov
inc
sahf
adc
pop
sbb
pop
xlat
mov
xchg
fwait
ins
jg
(bad)
cmc
xchg
push
or
lods
mov
fst
sar
in
bnd
lahf
ret
jb
xor
sub
cmp
add
inc
in
sbb
aaa
loopne
outs
out
inc
push
jg
xor
cmps
(bad)
push
or
sar
pop
out
sti
push
and
aam
sti
mov
add
lods
mov
stos
call
cli
ins
fiadd
mov
xor
inc
push
ror
fs
fsincos
movs
add
push
xchg
lods
loope
popf
in
call
(bad)
stc
stos
cli
ins
mov
das
mov
push
adc
das
pop
dec
ja
add
sti
jne
imul
adc
cld
hlt
outs
mov
pop
add
mov
pop
dec
jo
pop
sbb
std
cmp
ins
cwde
jl
test
cdq
unpckhps
stos
ins
movs
mov
sahf
sbb
fild
jmp
fdivrp
pop
xchg
jno
add
xchg
in
into
movs
xor
loop
or
dec
inc
cmp
dec
aad
lods
sbb
cli
inc
stc
add
imul
es
arpl
push
pusha
loop
pop
adc
scas
dec
cld
jno
aam
xchg
mov
mov
ret
aas
movs
test
bound
inc
pop
and
sahf
fs
push
(bad)
xor
pop
fcmovne
(bad)
nop
mov
add
fwait
push
xor
add
cmps
(bad)
sbb
sub
sub
scas
loope
mov
pop
les
daa
or
call
retf
push
jge
loope
pushf
dec
adc
outs
outs
retf
aaa
lock
mov
addr16
mov
xchg
adc
mov
xchg
lea
jp
inc
pop
test
sub
pusha
xor
xchg
iret
jl
fwait
out
pop
push
and
jecxz
sub
dec
and
push
into
lods
jae
pushf
sub
mov
int3
rcl
lods
test
and
imul
mov
xor
xchg
iret
pop
mov
scas
xor
leave
ret
cmps
jle
retf
int3
fmul
xchg
call
fcmovnbe
jmp
rol
or
scas
movs
lock
shl
xor
lock
push
jle
fwait
mov
pop
inc
pop
and
xchg
xchg
fmul
or
enter
mov
ror
push
lds
inc
mov
mov
lock
movs
in
ficomp
imul
add
fst
js
nop
fwait
(bad)
out
lds
ror
mov
sbb
or
(bad)
jmp
stos
out
pop
or
xor
into
jg
retf
jae
call
(bad)
ret
fbstp
cmp
pop
cwde
push
ins
cs
jle
sub
dec
and
jl
xchg
push
stos
push
in
sbb
mov
lds
js
and
out
imul
outs
dec
fldcw
jg
fnstenv
aas
jmp
dec
out
sbb
dec
shl
sub
fadd
jne
cli
std
add
mov
retf
rcr
xchg
(bad)
push
mov
test
inc
jmp
mov
outs
xchg
dec
inc
je
dec
leave
xor
aaa
in
sahf
dec
loopne
push
inc
in
lock
push
fwait
js
sbb
mov
mov
in
ins
xchg
ja
scas
jne
(bad)
out
(bad)
jmp
in
aad
xor
es
call
dec
sub
pop
pop
xor
inc
sbb
xchg
jo
pop
int
int
pop
lea
mov
enter
xor
dec
fadd
push
dec
add
mov
mov
cmp
push
sbb
sub
lods
stos
adc
div
or
mov
mov
sar
mov
inc
cmps
xor
fs
aad
and
xor
mov
lahf
adc
jg
sbb
jne
imul
and
push
xchg
sub
data16
sbb
mov
jno
jl
call
ins
and
add
push
fstp
or
sti
mov
push
ins
hlt
sub
test
mov
scas
(bad)
mov
inc
jmp
ficom
add
cmp
fld
out
jp
jge
ins
push
push
hlt
fcomp
sub
jae
ret
mov
add
je
cmp
add
les
jle
icebp
test
inc
nop
sar
mov
addr16
loop
scas
hlt
fiadd
pop
cmp
jecxz
das
jb
loope
or
fldcw
pop
sbb
aas
inc
mov
lahf
jns
inc
into
push
dec
pop
sbb
pop
sbb
(bad)
pop
bound
(bad)
test
stos
cmpxchg
and
or
test
sbb
jg
mov
xchg
push
lods
ja
push
es
aam
cmps
fs
sbb
(bad)
call
aam
xchg
cdq
aaa
jle
cwde
ins
mov
pop
adc
retf
inc
es
add
jle
(bad)
js
ja
xor
leave
xor
lock
ret
jp
inc
inc
icebp
add
(bad)
(bad)
jl
inc
das
pmaddwd
cmp
dec
retf
dec
push
mov
rcr
imul
inc
pop
push
sbb
movs
movs
fs
or
imul
aam
lock
shr
not
xchg
mov
and
pusha
sbb
inc
inc
pushf
cmp
mov
push
xchg
xlat
gs
pop
in
popf
mov
stos
jle
mov
and
ret
out
jle
sub
jmp
sbb
test
nop
in
hlt
sub
test
mov
sbb
sbb
arpl
mov
xchg
inc
scas
push
mov
cmps
mov
mov
or
mov
(bad)
jae
jle
cmps
les
mov
out
inc
and
cmp
or
cmp
div
out
cmp
and
outs
test
push
jecxz
push
jmp
sar
xchg
adc
cmps
imul
mov
(bad)
out
xor
daa
push
and
fwait
push
mov
lahf
sub
pop
fld
ds
mov
mov
scas
out
fild
imul
sub
mov
rol
in
or
arpl
or
sbb
or
push
loopne
push
fistp
aas
mov
xor
(bad)
in
mov
xor
das
add
dec
ret
pop
push
icebp
je
inc
cld
dec
jne
push
jne
cmp
out
lods
ss
loope
fst
popa
pop
imul
pop
stos
dec
pop
jle
call
push
fisttp
jnp
cdq
out
test
popf
div
mov
cmp
(bad)
push
cmp
loop
les
cmps
and
dec
sbb
inc
stos
stos
adc
cmps
xor
into
or
push
cmp
xchg
rol
or
in
dec
xchg
ja
call
mov
jp
cmp
mov
cmps
or
pop
cmps
sub
xchg
jecxz
xchg
or
pop
(bad)
test
shl
scas
xor
pop
mov
jle
cmp
(bad)
mov
cmp
lahf
out
or
gs
pop
pop
cmp
jl
jae
fiadd
push
mov
icebp
mov
shr
cmp
dec
pop
je
jnp
jmp
add
push
ret
fnstenv
push
fmul
mov
iret
inc
bnd
mov
clc
std
xchg
data16
repz
dec
sbb
jmp
aad
imul
mov
add
sub
in
adc
adc
div
lock
ins
imul
push
ds
cs
mov
movd
mov
ja
adc
mov
fmul
add
and
(bad)
jne
pop
push
jge
and
mov
jge
int
cwde
and
jmp
(bad)
jecxz
arpl
outs
inc
cmp
inc
push
repnz
mov
mov
cmp
repnz
je
sub
inc
sub
fcmovu
xor
(bad)
shl
push
mov
pop
sub
hlt
cpuid
cmp
cmp
sbb
jmp
(bad)
in
lea
inc
jne
popa
shl
mov
add
jmp
stos
repz
lds
xchg
sub
clc
xchg
jecxz
rcl
ret
leave
add
in
mov
fiadd
gs
jbe
xor
mov
repz
cmps
xchg
out
or
ret
les
push
std
aas
mov
xchg
inc
gs
mov
int3
pop
xor
out
ret
or
sub
jne
fmul
lods
dec
cld
in
xlat
sbb
inc
pop
sub
pop
rcl
sub
sar
push
aam
sbb
test
push
data16
push
addr16
dec
and
loope
dec
and
mov
push
jle
jle
dec
add
inc
push
and
pop
inc
mov
imul
mov
dec
shl
mov
push
shl
and
inc
addr16
je
int3
xchg
fbld
(bad)
addr16
xor
loope
sbb
dec
rcl
dec
or
mov
xor
out
stos
jmp
cld
je
push
cs
jnp
mov
and
push
and
jmp
pop
hlt
into
pop
or
add
or
xor
push
dec
mov
xor
xchg
ror
jge
jne
fdivr
or
fst
adc
inc
or
mov
or
bound
pop
cmp
sub
ficomp
dec
cmps
xor
aaa
push
add
je
jecxz
add
pop
ret
or
data16
fisttp
mov
ror
mov
cmp
dec
call
int
mov
pusha
cmps
ret
shl
mov
push
cli
sub
sbb
mov
mov
maxps
repz
in
sub
aas
sbb
push
mov
(bad)
xchg
xor
adc
pop
(bad)
mov
loopne
pop
xchg
push
stos
mov
movs
mov
dec
and
cmp
lock
pop
adc
scas
mov
xor
mov
mov
add
mov
sti
mov
push
or
je
push
loop
push
mov
out
test
jae
dec
add
rcr
mov
push
xchg
jo
add
dec
movs
and
adc
jns
shl
or
jl
out
into
jl
hlt
(bad)
scas
retf
fcomp
pop
cwde
imul
rcl
popf
jmp
jo
inc
mov
xchg
mov
cs
mov
pusha
sbb
jb
pop
inc
sub
ja
mov
inc
movs
popf
xchg
push
cmps
mov
ds
cmp
and
cmps
push
aaa
xchg
add
stc
inc
scas
mov
fs
inc
pop
xchg
movs
(bad)
cdq
aaa
rcr
rcr
jb
iret
jne
xchg
xlat
inc
push
dec
pushf
xor
mov
loope
inc
jo
dec
in
adc
inc
test
add
in
inc
and
hlt
test
call
jg
sbb
add
(bad)
push
cmc
lea
test
pop
(bad)
adc
mov
fyl2x
out
in
jne
loope
add
cmp
pusha
sbb
push
sbb
mov
neg
test
jecxz
mov
xor
sub
in
leave
in
pop
aas
call
push
iret
jmp
test
call
je
mov
push
lock
jo
das
xor
add
xor
push
sub
cmp
jmp
nop
jo
xlat
bnd
adc
mov
inc
mov
clc
xor
cmp
fcomp
mov
cmp
mov
dec
ins
mov
jmp
mov
and
mov
inc
retf
out
sub
jp
inc
and
mov
test
push
sbb
cmc
add
or
push
mov
jmp
fbstp
(bad)
push
fnstenv
jmp
in
add
jne
bound
je
ds
cmp
bnd
sbb
mov
fwait
pop
js
int
enter
xchg
ret
call
movs
pusha
or
mov
dec
add
out
mov
sub
ss
lods
out
xchg
push
push
jg
retf
shl
hlt
jg
into
addr16
lods
push
out
dec
call
enter
dec
push
mov
add
jbe
xchg
cmp
imul
ja
scas
mov
sbb
xor
dec
ret
push
ja
popf
adc
test
sbb
fcomp
ror
lods
arpl
call
icebp
dec
xchg
mov
mov
mov
pop
cmps
sub
xlat
and
in
mov
test
inc
aaa
or
mov
jno
lods
add
mov
pop
push
mov
test
pop
popf
push
sbb
addr16
idiv
or
sbb
in
or
out
(bad)
(bad)
or
push
data16
neg
adc
and
imul
lahf
push
in
xchg
mov
mov
xor
lock
add
xor
push
pop
in
iret
xchg
into
dec
into
(bad)
nop
sti
push
push
jne
repnz
add
dec
ins
sub
ins
sub
cmp
push
arpl
mov
test
call
push
xor
arpl
cli
popa
sbb
mov
or
sub
inc
or
in
in
mov
mov
and
icebp
lds
mov
out
push
out
push
daa
(bad)
(bad)
mov
add
jle
data16
inc
xchg
pop
push
inc
adc
ins
arpl
adc
popa
sub
in
fidiv
push
xchg
push
aaa
mov
pop
xchg
(bad)
inc
mov
in
jae
sbb
ja
ss
add
xchg
inc
ret
sub
adc
gs
es
dec
not
jp
cmps
mov
mov
sti
add
sub
gs
mov
ror
mov
inc
mov
lods
push
nop
push
and
sar
retf
cwde
sub
push
sub
repz
int
mov
pop
out
inc
and
xor
mov
adc
sub
push
fist
mov
test
shr
bound
out
ins
jl
cli
mov
ret
inc
jo
imul
add
fild
sar
and
mov
push
dec
retf
(bad)
scas
scas
pop
xchg
inc
push
xchg
mov
iret
cs
(bad)
or
retf
cmp
cmp
inc
lods
push
(bad)
push
mov
xor
or
xor
sub
adc
cmp
xchg
inc
pop
jp
jb
mov
aam
les
nop
rcr
inc
mov
xlat
push
shl
clc
dec
jns
and
fidivr
fisttp
lock
scas
xor
cmp
pop
loop
mov
push
xor
test
lods
fwait
push
sbb
sbb
adc
jae
jl
js
adc
test
mov
neg
cwde
sahf
shr
sub
jge
mov
mov
mov
dec
jns
leave
mov
adc
adc
fs
inc
mov
pop
push
daa
fist
or
dec
(bad)
or
dec
cmps
and
stos
mov
pop
je
xchg
jns
lahf
icebp
adc
add
cdq
jl
and
(bad)
jb
cmp
dec
xor
ret
push
cmp
inc
ins
mov
cmp
jl
inc
push
test
outs
aas
movs
pop
xchg
rol
jl
cmps
ffree
aad
jmp
push
repz
stos
or
fs
dec
cmp
call
push
data16
cmp
push
pop
popf
xchg
aaa
adc
daa
inc
add
xchg
ucomiss
ins
and
push
dec
lea
shl
test
ret
and
jne
jp
popf
mov
mov
ins
sub
and
daa
jae
add
add
mov
xchg
imul
jg
mov
lods
loopne
mov
push
ins
jle
ins
movs
loop
(bad)
sub
sub
loop
enter
and
mov
mov
std
add
icebp
shr
jmp
sbb
and
out
or
pop
movs
je
jnp
mov
jb
dec
pop
stos
lock
(bad)
and
nop
push
sub
jmp
jns
sbb
add
jge
and
jl
mov
fdivr
or
cmp
add
xor
ins
(bad)
call
int3
xor
inc
bound
jmp
loop
adc
and
repz
aas
cmp
adc
mov
mov
cs
(bad)
in
jmp
loopne
pop
sahf
jecxz
cmp
or
or
inc
and
sahf
enter
sbb
pushf
(bad)
cmp
dec
mov
dec
add
fisubr
rcl
lods
les
cmc
sbb
lds
sub
jmp
adc
ja
mov
mov
inc
cmps
jl
xor
(bad)
fmul
shl
fidivr
call
test
inc
into
add
sbb
bnd
ss
shr
mov
hlt
cld
(bad)
loopne
enter
lock
xchg
or
pop
cmp
int
adc
jl
or
dec
or
pop
in
neg
jge
cs
fdivr
out
fwait
mul
pop
add
mov
jle
push
mov
or
nop
fsubr
pop
pop
cmovs
and
xor
and
xor
fidiv
lods
test
cdq
imul
aad
retf
xor
inc
fld
push
cmp
push
pop
xchg
xlat
mov
(bad)
fsub
dec
sub
push
mov
mov
fcmovne
xor
adc
mov
xor
mov
leave
or
add
test
addr16
call
loop
ret
push
add
xor
mov
imul
daa
dec
push
mov
popf
push
push
aas
js
call
shr
pop
stc
repnz
sahf
pop
into
cwde
dec
fwait
dec
lea
sti
jge
mov
jmp
mov
nop
addr16
fwait
or
(bad)
in
stos
mov
imul
data16
xchg
mov
inc
prefetchnta
aam
xor
imul
pop
pop
fwait
aad
push
ret
mov
mov
or
xchg
test
mov
pop
xchg
xchg
pushf
pop
and
inc
xchg
dec
retf
xlat
sub
cs
adc
xor
fs
add
or
inc
jmp
clc
push
mov
loopne
xchg
not
outs
cli
add
fadd
shl
adc
(bad)
out
sbb
mov
pop
xchg
fdivr
stos
icebp
cmc
xchg
push
sbb
imul
stc
(bad)
and
mov
push
cdq
pop
movs
mov
(bad)
out
mov
or
mov
cmc
adc
adc
cmps
out
xchg
in
(bad)
jae
dec
lahf
icebp
out
mov
mov
mov
(bad)
and
sbb
mov
sbb
add
fild
aas
inc
mov
ins
fisttp
xchg
pmaxub
outs
scas
pop
sbb
xchg
push
jg
outs
lods
sub
sbb
cmp
ror
out
stos
mov
or
gs
sbb
mov
test
mov
cmp
div
dec
ret
mov
loope
ins
shl
mov
mov
fldcw
test
push
push
pop
(bad)
mov
lock
dec
jge
fisub
div
or
aaa
add
push
cmps
pop
rcl
data16
pop
pop
adc
ret
jmp
mov
and
sbb
pop
(bad)
std
stos
sbb
push
sbb
push
sti
cmp
stos
mov
adc
sbb
adc
dec
paddw
adc
leave
ins
neg
sub
and
icebp
cmp
sub
popa
stos
or
push
lock
retf
popf
jmp
test
push
pop
or
mov
test
es
pmovmskb
pop
pop
or
dec
xchg
gs
sub
addr16
pop
or
stos
cli
jae
loopne
xor
rol
pop
cmps
mov
mov
(bad)
xor
rcr
repnz
aas
cld
sbb
js
adc
push
icebp
mov
out
repz
jb
pop
out
lods
jp
(bad)
stc
jnp
or
and
fidivr
scas
in
or
sti
cmp
test
mov
add
xor
mov
xchg
mov
iret
sub
lock
ins
adc
scas
out
retf
and
mov
sub
adc
and
(bad)
rol
(bad)
xor
cmp
cmp
jbe
and
cmc
fucom
push
lea
ror
pop
mov
in
idiv
popa
sbb
inc
pusha
cmp
mov
in
fstp
popa
mov
adc
mov
jo
call
jg
adc
jbe
jp
stc
repz
push
popf
push
inc
ror
je
adc
test
cmp
int3
lods
and
imul
scas
push
mov
mov
mov
pop
dec
sbb
push
mov
mov
shr
and
loope
push
xchg
out
imul
push
or
cdq
sbb
(bad)
xlat
xchg
mov
jmp
in
inc
call
xchg
xor
xor
into
or
lds
ds
lock
lock
arpl
int
push
sahf
mov
loopne
ret
in
out
inc
loopne
bound
loope
loopne
push
neg
nop
xor
xchg
adc
fwait
inc
jmp
jle
scas
and
add
daa
fmul
sub
arpl
adc
xor
mov
and
fwait
inc
mov
dec
fistp
add
call
lahf
jbe
out
xor
sahf
(bad)
nop
test
int
repz
and
lea
popa
pop
cmc
jae
pop
cli
jecxz
xchg
xchg
xor
scas
scas
sub
sub
inc
repnz
cmp
scas
and
outs
std
mov
pop
popf
into
test
fwait
stc
jb
mov
(bad)
mov
jae
push
xor
ss
movs
xlat
sub
jp
jno
outs
icebp
ret
leave
and
pushf
pop
pop
(bad)
in
lods
idiv
scas
in
popa
or
xchg
icebp
out
xchg
fsubrp
mov
sub
lods
xchg
add
lods
ds
adc
icebp
sbb
outs
ret
dec
rcl
jmp
stos
adc
jmp
inc
(bad)
lahf
sti
sub
push
(bad)
sbb
push
arpl
pop
sbb
add
les
lds
cmp
jmp
mov
imul
loope
xchg
lahf
push
and
sbb
imul
lods
cmps
iret
std
add
dec
popf
data16
(bad)
imul
or
xor
jg
or
loop
out
fisub
aad
daa
xchg
pop
repz
shr
pop
(bad)
mov
and
mov
ss
inc
out
pop
push
sub
pop
dec
jp
aad
sbb
xor
pop
jecxz
push
shr
mov
data16
jo
cli
test
or
imul
adc
mov
out
or
inc
shl
ds
add
dec
into
push
movs
dec
outs
sbb
or
outs
or
std
sbb
fs
int
push
inc
test
(bad)
cmp
fistp
retf
int3
push
push
cmp
sub
out
cmps
cli
add
or
movs
fmul
popf
fstp
aas
out
dec
aas
outs
imul
and
(bad)
popa
sbb
clc
sbb
outs
cli
fwait
(bad)
or
scas
pop
test
cld
add
mov
out
xchg
cdq
outs
pop
gs
adc
data16
mov
mov
hlt
xchg
dec
lods
push
sbb
xchg
xor
adc
mov
repnz
mov
sbb
mov
iret
pop
cmp
jp
cmp
sahf
retf
lods
xchg
sbb
es
add
and
sbb
data16
retf
aam
adc
ins
mov
sub
jl
mov
xor
or
les
push
js
xor
mov
or
push
dec
out
or
shl
(bad)
adc
fwait
mov
adc
inc
mov
cmp
mov
popf
dec
mov
cmp
rcl
mov
into
(bad)
jb
xchg
hlt
std
adc
cmps
inc
pop
je
jne
add
ja
xchg
sub
and
gs
cdq
stc
dec
fnsave
adc
mov
sbb
js
ja
mov
inc
fldcw
xchg
in
fidiv
xchg
movs
xchg
mul
retf
cmps
xchg
out
cmp
les
pop
pop
mov
mov
pop
push
dec
pushf
lea
fldenv
mov
jae
mov
pop
xchg
mov
in
leave
mov
aas
cmp
jnp
mov
and
daa
and
fadd
out
xchg
std
lahf
test
jp
sub
sub
adc
in
(bad)
mov
outs
mov
push
push
shr
sbb
mov
pop
imul
xchg
jmp
dec
mov
or
add
sub
leave
pop
jp
stc
lock
dec
sub
push
xlat
out
xor
jns
and
aam
das
adc
(bad)
jnp
push
sar
mov
fcomp
pop
xchg
int3
jnp
xchg
bnd
addr16
retf
jbe
mov
jg
mov
fsubr
xchg
xor
cs
fadd
std
mov
push
sbb
pop
std
mov
push
loopne
pop
stos
(bad)
and
and
lds
xchg
dec
pop
mov
in
jecxz
adc
xchg
les
rol
inc
retf
outs
cdq
mov
pop
add
jno
aad
mov
mov
xchg
lods
retf
outs
and
jo
inc
xor
(bad)
dec
xlat
hlt
add
xor
pop
cmp
clc
sub
jp
stc
fcmovne
or
ret
pop
inc
and
inc
(bad)
shl
dec
fisubr
sub
jg
inc
ret
cwde
int
jmp
mov
mov
cs
cmp
jmp
dec
mov
jae
mov
sub
sar
push
cmps
ins
adc
imul
arpl
fnsave
leave
(bad)
push
call
(bad)
pop
popf
push
loope
or
mov
dec
daa
fdiv
sahf
or
mov
pop
push
adc
ror
jg
stos
and
ret
int
sub
cmc
jle
adc
or
out
jns
xor
fiadd
mov
mov
call
les
cs
sub
movs
add
mov
dec
ret
dec
std
scas
mov
(bad)
fs
sub
les
inc
call
cs
xlat
push
imul
mov
bound
add
idiv
(bad)
push
inc
mov
leave
inc
scas
les
jle
(bad)
div
push
inc
mov
loopne
inc
adc
xchg
inc
idiv
aam
call
mov
cmps
fdiv
mov
xchg
dec
xor
enter
call
lods
stos
retf
mov
stc
cmp
xchg
xchg
fdivr
pop
cmp
mov
pop
xor
cmp
cmp
push
jge
xor
adc
cmp
dec
mov
mov
fst
outs
xchg
fs
dec
lock
call
popf
sti
nop
ret
movs
test
and
outs
repnz
cmps
les
push
jmp
mov
adc
mov
es
jmp
rol
xchg
xchg
dec
push
mov
les
pop
or
int
xlat
shl
in
adc
inc
mov
pop
mov
aam
inc
test
inc
and
sbb
xor
inc
cli
xchg
and
gs
dec
sub
clc
jmp
call
cmp
aas
adc
in
idiv
push
xchg
rcr
in
xlat
mov
fbld
xchg
cli
add
pop
push
and
out
mov
stos
ins
retf
pop
in
int3
adc
mov
nop
xor
add
vpsubw
clc
fisubr
sub
and
ins
inc
sub
in
inc
jge
mov
pop
jmp
jmp
add
sbb
xchg
fcomp
or
js
adc
add
ficom
fstp
push
stos
fsubr
mov
add
push
or
out
or
js
jno
mov
enter
push
mov
mov
push
adc
mov
inc
call
mov
jb
lea
add
pop
sbb
dec
jg
std
(bad)
enter
lds
adc
and
cmp
fisub
test
loop
adc
inc
pop
adc
sbb
and
test
push
xor
mov
sub
inc
ins
add
bsr
push
scas
pushf
xor
adc
sbb
mov
outs
iret
inc
test
lea
data16
xor
repnz
imul
dec
push
jl
das
push
rol
and
cdq
sti
iret
aam
fcomi
int
test
jb
xor
xchg
and
ins
repnz
lea
int3
test
push
jecxz
sbb
lock
in
cmp
cwde
xchg
call
lahf
push
adc
ds
enter
adc
and
sub
mov
adc
outs
dec
icebp
jbe
lahf
jb
jne
sbb
(bad)
push
(bad)
push
mov
adc
mov
push
out
sub
into
sub
into
mov
std
and
stc
mov
dec
adc
mov
rcr
pop
or
adc
lea
xchg
push
and
pop
test
fstp
cmps
call
mov
inc
add
and
xchg
loopne
test
inc
adc
xchg
loope
out
cmp
cmp
mov
push
mov
mov
arpl
jnp
mov
(bad)
in
test
adc
idiv
pop
mov
mov
cwde
lds
lods
sub
popf
jae
adc
sbb
cmp
dec
fld
add
cmp
pop
lods
xchg
stos
test
rol
xchg
cld
add
lock
setnp
dec
mov
aam
retf
lock
cmp
mov
loop
adc
rcr
aas
daa
push
jge
out
test
leave
or
pop
lods
clc
inc
mov
xchg
das
and
adc
lds
mov
add
pop
pop
aas
or
dec
outs
sub
mov
data16
ret
sbb
sbb
pop
xchg
xchg
mov
cmp
scas
jecxz
fnstenv
push
sub
popf
sar
xchg
test
fisub
out
ror
fnstenv
fbstp
jb
mov
ins
cmps
jp
imul
inc
test
fisttp
mov
ja
add
pop
aaa
call
xchg
mov
xchg
cmp
loop
mov
dec
mov
retf
je
adc
ds
inc
jmp
ins
cli
pop
pusha
xor
jge
lea
nop
mov
shr
arpl
or
sub
push
cwde
pop
cdq
imul
or
mov
jnp
mov
popa
sub
sub
call
add
xchg
out
and
xchg
inc
push
mov
or
or
enter
unpckhps
fidivr
xor
add
dec
movs
lock
stos
inc
cdq
ret
icebp
aaa
mov
cmps
rep
mov
shr
xchg
push
popa
push
mul
push
or
dec
pop
mov
mov
adc
loopne
outs
cmp
(bad)
xor
psrlw
sub
xchg
call
push
rol
imul
mov
dec
jnp
sbb
jl
cmps
ja
mov
ret
mov
iret
adc
gs
scas
adc
pop
sahf
je
sub
(bad)
dec
dec
mov
dec
rcl
retf
fnsave
mov
add
inc
jbe
xchg
stos
push
mov
adc
add
retf
dec
cmp
xor
jmp
not
mov
inc
je
dec
hlt
icebp
push
(bad)
ror
jns
ret
icebp
mov
jecxz
scas
push
jns
ret
mov
sbb
icebp
mov
iret
sbb
push
push
mov
jp
sbb
fs
mov
inc
aad
out
out
pop
ins
push
cmp
mov
mov
enter
mov
cmc
and
xchg
xor
pop
sub
ja
add
rcr
dec
test
inc
or
mov
pop
pop
stos
sbb
mov
je
mov
movs
adc
sub
cmp
mov
jnp
dec
int3
dec
jge
cwde
and
inc
add
std
xchg
stos
clc
cld
out
sbb
xor
aad
jo
sub
movs
fwait
add
(bad)
xor
ds
xchg
sbb
shl
mov
inc
popf
mov
ja
sbb
cmp
das
jne
and
and
xchg
push
pop
lods
int
jmp
sahf
std
mov
mov
in
scas
jo
lahf
xor
jmp
mov
(bad)
in
or
or
retf
inc
adc
sbb
dec
(bad)
dec
mov
jp
retf
shl
xor
sub
popa
mov
inc
not
and
pusha
inc
push
scas
push
into
(bad)
repz
ret
xor
xor
les
es
call
pop
jp
js
and
data16
dec
and
cmp
ins
mov
jo
dec
clc
fdivr
movs
retf
scas
ret
loope
lods
fidiv
aam
inc
(bad)
xchg
cs
mov
mov
out
or
jnp
or
dec
jno
pop
pop
pop
mov
xor
xor
sub
add
sbb
stos
cwde
fstp
sub
(bad)
sbb
cs
(bad)
ficomp
mov
inc
and
add
mov
inc
pop
std
movs
pushf
icebp
hlt
or
mov
cmp
arpl
adc
inc
cmps
add
mov
xchg
add
adc
xchg
test
xor
mov
(bad)
mov
minps
adc
fwait
xchg
test
and
sti
mov
jecxz
loope
into
mov
fnstcw
repnz
xchg
mov
gs
jbe
pop
jmp
clc
data16
or
out
fs
test
neg
lods
adc
test
mov
pop
jp
ins
sbb
or
sti
in
(bad)
aas
ret
out
(bad)
mov
jp
hlt
add
inc
sbb
and
cmp
sti
call
sar
xchg
jnp
xor
mov
out
or
jl
retf
push
fild
scas
and
lds
mov
add
popa
shl
xchg
pop
mov
mov
jmp
mov
xchg
out
jl
addr16
call
inc
lea
mov
lods
fucomi
iret
les
adc
inc
adc
jge
inc
aam
adc
pop
lods
es
std
push
jb
(bad)
repnz
scas
xchg
call
mov
xchg
shl
jp
sbb
cmps
js
fdivr
or
sbb
and
or
push
out
mov
pop
add
bound
mov
dec
inc
aad
das
dec
sbb
add
rcl
jnp
int
and
jae
mov
jmp
push
mov
jae
cmp
ja
aam
inc
bound
pop
fst
or
mov
adc
adc
gs
xchg
outs
pop
loopne
nop
mov
or
cmp
jmp
enter
dec
xor
push
cmp
dec
lods
repnz
ja
jb
into
scas
ficom
icebp
inc
int
adc
std
mov
inc
sbb
sti
inc
fiadd
int3
cmp
adc
cld
jo
push
jmp
sti
movs
cmp
add
mov
iret
adc
lock
movs
gs
inc
push
outs
(bad)
loop
(bad)
or
call
test
ja
sar
aad
push
nop
call
mov
sub
sbb
xor
or
jnp
cdq
inc
sub
lock
out
mov
into
dec
jo
inc
xchg
jmp
in
jg
xchg
retf
movs
lock
popa
cli
cmp
xchg
or
mov
call
pop
xchg
mov
rcl
ret
imul
pop
cmp
repz
add
loope
cs
push
xor
ror
push
pop
cs
movs
xor
lahf
setp
das
jmp
push
mov
fistp
int
jl
aas
outs
mul
nop
call
mov
ret
test
lods
push
aaa
rol
(bad)
stc
fldenv
and
inc
jae
push
xor
mov
mov
retf
mov
pop
adc
xchg
lahf
mov
je
sbb
gs
dec
mov
xchg
arpl
gs
push
dec
jmp
lods
shl
fs
or
mov
xor
div
lods
or
dec
inc
mov
pop
stos
and
data16
and
xor
dec
lods
or
fnstcw
cmp
not
call
fbld
cmps
das
sbb
dec
jmp
jl
lods
loop
cdq
int
cmp
sahf
xor
movs
mov
mov
sub
inc
push
xor
push
sub
push
sti
out
dec
outs
loopne
and
(bad)
fcomp
or
mov
ss
inc
xchg
mov
pop
mov
dec
xchg
and
aad
jno
gs
jg
test
ret
stos
push
aaa
mov
pop
push
aad
pop
jecxz
jne
push
cld
or
icebp
fnsave
xchg
nop
or
lea
adc
mov
(bad)
mov
jle
sar
dec
cmc
push
jo
mov
sbb
sbb
sbb
xchg
adc
data16
fldenv
xor
push
add
out
ret
pusha
jbe
(bad)
pop
or
push
ja
add
shr
xchg
mov
or
aam
mov
sbb
cmp
jmp
mov
mov
repnz
call
das
sbb
push
xchg
sub
aaa
cmp
je
mov
retf
pop
std
adc
mov
xor
mov
sbb
add
retf
loope
(bad)
(bad)
cmp
test
aam
(bad)
push
(bad)
(bad)
adc
hlt
jmp
(bad)
push
xchg
movs
stos
and
mov
std
enter
xchg
add
mov
jmp
retf
xor
imul
loopne
jg
xchg
imul
mov
(bad)
sub
sub
popa
(bad)
out
or
(bad)
jne
dec
push
sbb
leave
and
(bad)
mov
jne
mov
mov
pop
sub
add
imul
push
jmp
and
push
dec
jmp
out
dec
dec
rcl
cmp
mov
and
sub
xor
call
push
or
aaa
fwait
(bad)
sbb
add
nop
repz
jno
add
add
out
mov
jns
(bad)
pop
fndisi(8087
enter
or
lock
aas
leave
ins
pop
add
push
dec
bound
(bad)
icebp
lahf
int3
jbe
jne
(bad)
fild
push
push
mov
outs
dec
out
pop
and
jg
nop
sti
xor
fldenv
aas
sti
dec
retf
sti
js
stos
outs
sub
pop
rol
test
jnp
clc
mov
xor
sbb
sub
movs
in
inc
cs
cmp
out
das
pop
(bad)
push
daa
xchg
cli
push
lea
in
jmp
mov
pop
aaa
imul
loope
bound
and
lods
jnp
inc
dec
mov
mov
sub
out
arpl
stos
push
loopne
stos
mov
mov
jecxz
fnstenv
adc
leave
sbb
repnz
push
adc
mov
add
cwde
test
mov
dec
dec
pop
xchg
ss
ins
push
jo
fiadd
xor
add
into
gs
out
out
inc
mov
xchg
adc
outs
ret
movs
aad
mov
inc
or
shr
and
cmp
pop
in
lods
hlt
fstp
xor
add
pop
pushf
jno
push
aad
dec
adc
in
and
rcl
les
pop
aaa
push
pop
(bad)
jmp
adc
outs
hlt
call
xlat
mov
dec
out
lods
ret
mov
xchg
adc
lahf
(bad)
movs
xlat
mov
daa
push
call
aas
loop
leave
(bad)
mov
mov
xor
(bad)
data16
jmp
and
and
aaa
adc
xchg
data16
adc
mov
pushf
and
xor
cmp
push
js
in
sub
lahf
fld
mov
fwait
adc
and
mov
retf
cmp
xor
add
ret
and
fld
movs
cdq
fstp
mov
sub
dec
sbb
pushf
xchg
mov
xor
retf
nop
movs
xchg
rol
cmp
aas
or
sbb
push
scas
inc
xchg
repnz
int3
cmp
mov
rcr
fwait
and
add
add
test
leave
mov
in
xchg
mov
add
iret
jl
xchg
(bad)
and
xor
cmp
gs
les
jp
sub
test
psllq
push
and
mov
cmp
xor
mov
add
hlt
mov
jmp
test
and
sub
fwait
enter
xchg
push
rcl
aaa
arpl
jo
leave
(bad)
mov
jp
xchg
shl
call
adc
movs
cmp
inc
jno
mov
in
popf
(bad)
popa
retf
lods
outs
xchg
dec
cmc
add
shr
(bad)
repz
add
push
repz
jae
or
into
ins
movntps
aam
loopne
out
push
shl
movs
sbb
xchg
pop
(bad)
pop
in
xchg
imul
mov
mov
sbb
fucomi
stc
clc
sub
mov
adc
mov
(bad)
mov
mov
mov
test
sub
inc
xor
pusha
out
inc
cmps
push
adc
push
iret
les
sbb
or
(bad)
int3
push
mov
xchg
jne
sub
push
sar
sbb
xlat
add
inc
sbb
pop
test
adc
pop
arpl
cmp
in
xchg
int
outs
int
call
ror
add
lods
dec
jne
rcr
xchg
lock
sbb
push
shr
and
(bad)
sbb
out
in
imul
jge
push
push
mov
cmp
xor
loopne
and
xchg
and
(bad)
ja
and
dec
mov
sahf
imul
xor
vmovapd
mov
movs
pop
lods
cmp
mov
je
sbb
sbb
pop
push
pop
dec
dec
pop
imul
mov
inc
and
cmp
call
ret
ja
or
fs
mov
cld
enter
dec
push
daa
dec
mov
and
xlat
mov
xor
inc
ins
sti
pushf
jmp
cmps
je
fstp
jbe
pop
jl
push
iret
rcr
out
std
das
or
sub
outs
pop
imul
ret
fsub
aas
mov
cli
mov
jg
repnz
sub
stos
adc
jmp
call
mov
dec
jmp
outs
lods
out
xor
push
cmp
in
jp
jno
mov
in
pop
in
mov
push
jmp
loope
fs
xchg
or
lods
ror
jbe
dec
lock
fs
sbb
and
repz
mov
add
jmp
(bad)
es
sti
push
pop
cmp
and
pusha
shl
dec
call
(bad)
imul
jb
cmp
sub
jmp
(bad)
ffree
loope
stc
(bad)
pop
mov
pop
push
scas
jno
jae
mov
in
cdq
sub
pop
rcr
fwait
mov
es
mov
adc
dec
popf
repnz
rcl
push
(bad)
popf
test
cld
(bad)
repnz
xchg
ret
mov
jns
repz
retf
bts
lea
out
jecxz
mov
dec
icebp
or
enter
int
push
in
je
mov
push
fcom
jecxz
or
(bad)
dec
adc
sub
daa
sub
leave
aad
addr16
push
aad
xchg
data16
out
xor
es
std
pop
pop
fadd
jmp
das
push
mov
sahf
jge
mov
jecxz
jns
jns
and
jbe
adc
stos
faddp
out
xchg
pop
iret
mov
shl
out
push
pop
xor
rcl
into
sti
jns
jecxz
fsubr
mov
retf
xor
in
(bad)
push
cmp
push
mov
inc
into
pushf
bound
fwait
push
mov
retf
or
cwde
push
jmp
les
leave
aas
idiv
xor
xchg
dec
fidivr
sub
mov
shl
mov
sub
mov
ja
ficom
cld
adc
cmps
mov
outs
xor
mov
dec
add
mov
sbb
scas
sub
call
cs
cld
iret
and
ss
nop
imul
adc
dec
mov
xor
jge
push
mov
rcl
arpl
(bad)
std
add
lods
pop
and
int3
dec
pop
in
jno
sar
adc
jmp
jns
retf
lahf
loopne
fs
xor
fisttp
fbstp
outs
mov
push
or
mov
sbb
inc
jo
clc
enter
imul
dec
xlat
aam
jge
(bad)
xchg
push
lea
pop
aas
pushf
test
inc
sbb
jmp
iret
pop
(bad)
sub
jecxz
xchg
(bad)
cli
or
pop
mov
xor
add
cmp
inc
or
test
mov
sub
nop
and
xchg
mov
sub
stc
inc
and
je
into
mov
push
pop
scas
cmp
bnd
aad
test
mov
out
push
ret
mov
movs
(bad)
hlt
dec
into
and
xchg
xchg
jae
aaa
xchg
push
ficom
jg
nop
mov
adc
pushf
outs
and
mov
fmul
push
iret
and
and
icebp
push
mov
add
in
repnz
ret
daa
hlt
or
test
pop
mov
xor
imul
mov
xor
in
fs
mov
ins
xchg
mov
adc
loopne
xor
adc
mov
(bad)
fisubr
xchg
sar
cmp
dec
jns
sbb
inc
add
cmc
xor
loope
out
dec
leave
ret
xor
jg
xchg
mov
jb
xchg
mov
inc
jmp
push
lahf
retf
add
in
repnz
popa
outs
pop
dec
add
aam
retf
xchg
mov
dec
inc
mov
inc
adc
loopne
push
ds
movs
cmp
cmp
cmp
std
ins
inc
xchg
repnz
jecxz
jne
scas
push
sbb
sbb
mov
fild
push
pop
jbe
xchg
mov
mov
imul
mov
dec
xchg
daa
and
lods
mov
ins
daa
jne
cwde
inc
sbb
jg
clc
jae
out
fidivr
repz
or
test
scas
inc
in
sbb
cs
cmp
or
or
xchg
xlat
mov
test
push
arpl
sbb
and
and
mov
add
push
jmp
push
mov
les
pop
in
inc
es
(bad)
jg
mov
out
hlt
add
lods
out
adc
sub
dec
inc
cmp
inc
ja
pop
popf
repz
movs
pop
xlat
(bad)
mov
jmp
mov
icebp
mov
stos
push
xchg
fdiv
sub
and
mul
adc
adc
xor
sbb
adc
in
rcl
(bad)
gs
rol
mov
jb
jg
cmps
push
mov
pop
and
jb
pusha
mov
pop
inc
cmp
iret
sub
(bad)
pop
cmp
inc
push
std
adc
shl
push
pop
rol
inc
lock
(bad)
sub
sti
into
pop
jg
repnz
aam
push
popa
cmp
adc
mov
and
jmp
xor
dec
mov
out
movnti
jge
daa
in
aam
mov
imul
gs
push
fwait
int3
sbb
lods
cvtpi2ps
int3
lds
inc
jo
les
popa
ret
fdivp
sti
stc
fistp
mov
jnp
sub
mov
arpl
sub
jbe
popf
pop
lahf
adc
bound
inc
inc
fild
stos
clc
popa
outs
sbb
pusha
sbb
cmp
test
xchg
inc
mov
call
pop
push
mov
dec
loope
ds
push
mov
sahf
(bad)
aaa
or
jnp
ss
push
(bad)
loopne
(bad)
imul
das
push
lds
mov
out
push
outs
mov
xchg
mov
ds
jmp
hlt
int
jp
mov
call
mov
inc
xor
cmp
adc
out
pusha
fsubr
shl
cdq
mov
push
inc
fst
or
inc
in
and
aaa
enter
cmp
push
dec
inc
ret
dec
aad
push
cmp
out
adc
lods
push
pop
cmp
dec
sub
add
push
jg
jl
call
out
add
pop
in
push
movs
fsub
(bad)
mov
push
ins
inc
cmovg
je
pop
fwait
jp
add
push
cli
add
stos
pusha
xchg
mov
fwait
data16
add
sbb
mov
int3
lock
repnz
cmps
fcom
sbb
mov
xchg
jp
and
cmp
mov
ja
jb
xchg
or
cmp
cmp
sbb
aaa
push
mov
mov
sahf
pop
mov
outs
push
les
mov
fnstenv
pop
cmp
test
mov
mov
push
xchg
push
and
cmp
push
or
push
sbb
iret
cmp
xor
push
aaa
and
push
mov
adc
adc
in
or
jg
(bad)
xchg
enter
add
sbb
adc
shl
repnz
fcomp
mov
stos
pop
ins
fcomp
mov
sbb
pop
jb
test
add
popa
cmps
mov
cmp
(bad)
cli
mov
pop
repz
ret
outs
xchg
pop
inc
adc
sub
int3
mov
ja
or
push
jl
mov
shl
call
popa
dec
pop
dec
adc
or
add
cmp
add
sub
add
jae
loope
imul
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
xchg
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
lea
imul
add
mov
cmp
cmove
mov
jmp
lea
imul
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
lea
mov
add
mov
call
mov
mov
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
sub
add
add
mov
add
shl
add
mov
cmp
cmove
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
add
sub
add
add
sub
sub
sub
add
mov
mov
mov
mov
sub
add
add
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
sub
add
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
sub
add
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
sub
add
add
mov
mov
movzx
mov
xor
mov
and
xor
and
or
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
sub
sub
mov
mov
add
add
sub
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
pop
ret
nop
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
jmp
call
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
or
add
push
fld
mov
mov
mov
push
fs
and
mov
add
mov
mov
add
add
mov
test
or
xchg
add
add
ins
add
add
xchg
sub
test
add
inc
add
jmp
aam
add
test
mov
add
or
mov
add
add
add
mov
mov
ret
lea
fbstp
add
popa
mov
mov
je
jnp
add
or
add
mov
int3
outs
and
test
jg
sbb
jmp
mov
add
sbb
in
dec
xchg
ins
jg
jmp
xor
push
add
and
(bad)
or
pop
and
les
lahf
mov
mov
jmp
xchg
and
sub
aaa
inc
mov
daa
add
add
mov
inc
int
jg
outs
add
xor
js
bound
les
jmp
add
inc
mov
inc
and
sub
mov
jg
out
push
bnd
sub
mov
(bad)
fld
add
jmp
mov
cmp
add
jg
jmp
sbb
lock
sti
jg
jle
dec
movs
(bad)
jge
xor
hlt
push
mov
lahf
mov
ret
dec
xchg
jmp
mov
mov
mov
mov
mov
fadd
add
aam
inc
sar
add
adc
mov
add
cmc
add
mov
stos
sbb
and
add
add
push
jmp
mov
mov
mov
je
jmp
mov
js
jne
or
je
jmp
mov
js
mov
inc
and
mov
out
xchg
or
xchg
js
aaa
mov
and
je
outs
fsubr
add
push
loop
and
mov
add
jmp
mov
retf
lods
adc
loopne
add
add
mov
mov
daa
in
mov
movs
test
add
add
push
fisttp
pop
mov
call
lsl
js
add
jg
inc
js
push
nop
lahf
adc
xchg
mov
test
pusha
add
js
jns
fs
add
pop
push
add
bnd
mov
sub
jge
and
test
(bad)
add
mov
or
sub
mov
mov
lahf
mov
sbb
add
mov
icebp
cmp
imul
scas
mov
add
xchg
mov
int
add
stos
cmp
nop
xor
jmp
pop
add
xchg
mov
jle
add
sub
jl
xchg
test
nop
add
test
out
sub
xor
inc
and
lea
(bad)
add
and
sub
jmp
xor
sahf
lahf
int3
mov
mov
mov
mov
add
mov
int3
add
jle
mov
inc
add
and
xchg
jmp
add
sbb
loopne
and
movzx
jne
or
push
fs
cmp
add
scas
mov
sbb
add
nop
stos
jl
mov
jne
add
add
daa
add
xor
push
popa
ret
pushf
aas
nop
add
add
xchg
stos
add
inc
pop
add
add
push
test
add
add
sbb
add
mov
mov
mov
inc
inc
mov
and
call
add
ins
sbb
cs
add
adc
pop
add
push
repnz
cmp
out
mov
test
jmp
add
lods
push
paddsb
add
cmp
jae
push
mov
(bad)
jmp
mov
or
and
add
add
add
add
repnz
add
add
mov
fs
sahf
cld
(bad)
mov
cmp
pusha
test
add
stos
mov
adc
inc
mov
add
psadbw
jecxz
jl
push
add
add
add
mov
nop
push
fst
cmp
pop
pusha
and
push
add
or
pop
test
add
pop
aam
xor
mov
sub
shl
add
add
add
sub
add
add
call
add
add
add
inc
and
sub
add
inc
and
sub
adc
aad
jmp
mov
hlt
push
add
and
into
push
xor
scas
push
sldt
add
add
lea
fstp
idiv
dec
pop
inc
add
push
mov
push
push
push
and
sub
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
movzx
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
movzx
cmp
cmovbe
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
movzx
mov
movzx
mov
add
mov
mov
jmp
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
xchg
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
loop
pop
or
add
lods
add
sbb
add
add
inc
add
test
add
add
sahf
and
sub
leave
add
add
and
and
add
sbb
inc
add
aam
test
mov
(bad)
and
add
sub
call
add
mov
and
and
xchg
in
cdq
sahf
mov
aam
cmp
inc
add
mov
add
add
pop
mov
add
mov
and
add
add
and
mov
mov
cmc
stos
ss
inc
xchg
cld
call
xchg
add
mov
add
mov
aas
and
sub
mov
xchg
rol
(bad)
pop
add
sub
add
leave
jl
inc
and
aas
clc
rcl
sbb
inc
cmp
test
mov
add
mov
sub
and
jg
dec
pop
add
popf
call
fistp
pop
psllq
and
mov
sbb
adc
sub
push
inc
and
in
(bad)
ins
cmps
add
jmp
mov
and
sub
mov
lea
movs
sbb
add
add
pop
sahf
ds
ins
retf
in
rcr
dec
add
add
push
daa
and
sub
mov
popf
sbb
sbb
add
dec
outs
pop
bound
mov
in
pusha
add
jmp
mov
push
dec
jle
xchg
mov
jp
add
add
mov
jo
fldenv
je
inc
and
add
mov
mov
leave
hlt
mov
dec
pushf
(bad)
jp
add
add
or
jl
pcmpgtd
cmps
pop
popf
mov
outs
and
in
popa
mov
inc
jg
jmp
int
lock
sub
mov
pop
arpl
add
add
mov
push
sub
fwait
inc
and
nop
add
add
outs
mov
and
je
je
arpl
imul
call
and
and
cs
add
add
add
sub
fadd
add
fiadd
add
add
inc
and
sub
mov
lods
lahf
add
mov
test
js
inc
xchg
push
dec
mov
pushf
test
add
mov
pop
call
pop
xchg
fldenv
test
add
leave
jl
push
add
scas
in
mov
pop
je
jmp
jmp
arpl
rcl
mov
mov
pop
cli
mov
sub
sub
add
cmovne
cmc
inc
retf
dec
add
mov
inc
pop
mov
lods
inc
add
ffreep
call
push
xor
scas
fchs
call
sqrtps
movs
das
inc
cwde
sbb
add
dec
and
mov
add
(bad)
mov
push
xchg
and
add
add
movs
mov
mov
in
add
lock
add
lods
pop
add
cmp
jmp
jl
add
cmps
mov
lea
inc
add
dec
cwde
test
and
mov
push
dec
int
add
addr16
test
mov
add
movs
add
add
mov
mov
and
test
mov
(bad)
push
and
dec
mov
(bad)
hlt
add
jae
hlt
mov
imul
test
inc
cmp
sti
stc
xchg
addr16
jg
cwde
bound
scas
stc
push
cmps
and
mov
xchg
sub
xlat
xor
dec
repnz
movs
xor
add
xor
mov
mov
aam
xchg
inc
mov
add
mov
cdq
test
(bad)
sbb
mov
add
mov
add
push
mov
imul
mov
imul
inc
add
rol
and
add
mov
add
inc
test
fisttp
xchg
cld
jmp
sbb
ins
outs
xlat
mov
inc
test
add
add
mov
add
jo
cwde
and
jmp
push
out
repnz
add
fwait
and
popf
add
inc
dec
aad
sbb
add
add
cmp
jl
jg
cmp
addr16
mov
mov
or
mov
retf
cli
sub
(bad)
adc
sti
add
add
mov
mov
(bad)
sti
dec
nop
out
xchg
and
add
mov
scas
dec
aaa
add
add
add
cmps
pop
add
xchg
inc
movs
add
imul
add
pop
and
add
sub
mov
lahf
cld
dec
add
push
add
sbb
movs
add
add
add
cmps
pop
adc
dec
mov
inc
and
dec
mov
xchg
addr16
ss
cmp
add
sub
sbb
fwait
add
add
imul
cmps
push
push
dec
mov
add
jl
push
and
add
fiadd
mov
add
mov
pop
xchg
dec
aad
(bad)
jmp
pop
test
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
scas
dec
adc
ins
push
jnp
and
mov
ins
push
test
enter
mov
in
les
add
lods
xchg
std
sub
xchg
add
add
int
std
add
mov
jnp
sub
mov
and
add
add
jb
lods
add
psrlq
inc
add
pop
cmp
test
mov
jmp
xchg
mov
je
pop
test
fidiv
cmp
in
jns
test
add
sub
cmp
sub
xchg
jmp
cmp
sub
mov
and
add
jp
out
(bad)
jb
add
inc
ret
and
add
mov
xchg
fwait
cmp
lock
add
std
mov
push
mov
add
add
add
mov
sub
in
mov
push
(bad)
and
add
jmp
mov
and
sub
out
bound
repnz
add
jmp
mov
and
test
std
jns
enter
sub
mov
scas
mov
add
sub
jnp
add
test
push
add
test
fisub
add
enter
inc
or
mov
and
xor
jmp
add
bound
xchg
add
add
mov
pmuludq
add
jmp
mov
and
lahf
inc
sub
rcr
and
add
mov
xchg
jmp
mov
mov
mov
inc
or
inc
and
aaa
cmp
add
add
mov
pop
fnstenv
jle
jg
jmp
mov
mov
bound
add
add
jmp
jns
pop
mov
add
lock
cmovl
je
jns
mov
iret
mov
jmp
xor
(bad)
pop
jne
add
mov
sub
mov
adc
add
add
add
sub
mov
bsf
add
mov
mov
fcmovb
add
sub
mov
and
mov
add
sub
int
std
mov
or
mov
and
pcmpeqd
add
jmp
stc
test
pop
add
jno
jge
pop
mov
test
add
add
mov
sub
mov
and
sub
mov
icebp
and
mov
add
ja
push
push
je
jmp
mov
sub
mov
and
paddw
jmp
add
add
push
cmps
xor
and
test
inc
fwait
push
pop
pop
enter
lea
xchg
jns
xchg
mov
fwait
bound
out
pop
mov
mov
add
jne
inc
pop
sub
in
mov
cmp
add
mov
add
(bad)
cmp
jns
lods
fnstcw
cmp
mov
push
jmp
test
add
add
mov
int3
xchg
or
mov
cmp
add
(bad)
ror
mov
push
dec
jnp
jne
mov
mov
sub
inc
mov
add
shr
sti
sub
int3
jns
add
lods
test
add
add
mov
jnp
add
or
pop
add
ja
or
test
sbb
mov
cmovne
mov
dec
mov
add
push
mov
mov
mov
add
mov
scas
xchg
mov
adc
jns
mov
test
dec
add
inc
out
test
ret
mov
out
loopne
jecxz
enter
mov
cmp
call
add
add
movsx
mov
mov
(bad)
es
rol
lahf
(bad)
repz
cmovl
inc
sub
pop
int3
add
lahf
mov
mov
sub
add
mov
jne
sub
test
add
add
cli
retf
add
mov
(bad)
and
es
add
jmp
mov
cmove
xchg
iret
add
jmp
daa
add
add
retfw
movs
dec
add
stc
add
add
mov
mov
mov
add
add
pusha
jne
rol
mov
mov
mov
and
xor
mov
fidivr
mov
data16
xor
push
aad
jno
cmp
retf
pop
cmp
lea
jl
(bad)
(bad)
retf
test
mov
mov
mov
inc
(bad)
sub
push
mov
retf
pop
inc
mov
add
mov
mov
out
xchg
add
ja
mov
shr
add
push
mov
fild
mov
xchg
dec
and
nop
mov
add
pushf
arpl
inc
xchg
xor
mov
call
sub
and
add
mov
mov
sbb
outs
add
inc
or
add
add
mov
mov
jmp
mov
pop
test
xchg
mov
and
aam
popf
call
jb
inc
sahf
mov
dec
cmp
mov
and
out
icebp
repnz
adc
mov
repnz
dec
call
and
icebp
(bad)
inc
add
repz
jecxz
xchg
iret
or
test
aam
fisttp
and
add
jmp
sub
jne
mov
and
lahf
add
mov
int3
add
pop
push
mov
pop
mov
and
xor
mov
xor
(bad)
and
repnz
and
jnp
and
mov
mov
call
jle
pop
enter
sbb
mov
and
jl
mov
add
add
mov
lea
mov
mov
mov
and
add
pop
aad
arpl
mov
sub
mov
lea
cdq
push
lods
enter
punpckhbw
mov
mov
and
out
and
iretw
mov
push
scas
and
mov
add
sub
add
mov
xor
fsub
iret
setae
mov
mov
enter
fdivrp
mov
aam
lahf
add
jle
add
mov
sub
mov
add
xchg
add
inc
aam
push
inc
mov
fild
mov
pop
cmp
and
cmc
data16
(bad)
(bad)
cmp
xchg
movzx
add
mov
mov
outs
mov
mov
add
add
cld
(bad)
cmp
xchg
mov
push
mov
jb
fidivr
inc
sub
sub
push
movs
jmp
(bad)
adc
mov
add
mov
add
mov
scas
push
sbb
add
repnz
add
add
mov
add
add
(bad)
(bad)
jmp
ror
add
add
jge
lahf
mov
cmp
jns
mov
mov
add
push
jle
add
mov
add
shr
aas
sti
(bad)
js
add
inc
out
aaa
and
add
and
jo
rcl
pop
pop
gs
loopne
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
push
jmp
push
ret
jmp
call
jmp
push
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
adc
and
add
xrelease
mov
add
add
and
add
add
hlt
and
repz
stc
push
push
xor
test
add
int3
dec
mov
jae
test
add
rol
add
je
loopne
add
push
add
xor
aam
cs
mov
fwait
pusha
shl
add
mov
cli
add
repz
sub
add
pop
cmp
mov
mov
add
(bad)
mov
add
les
ret
ja
add
xchg
mov
push
mov
pmuludq
add
add
repz
sub
dec
test
add
add
jmp
mov
add
sub
mov
add
jo
jmp
mov
add
xor
pop
ret
xchg
(bad)
scas
jmp
mov
loopne
cmp
pop
mov
adc
dec
imul
dec
pop
cmc
add
daa
add
add
mov
jg
fwait
add
mov
loope
add
push
sub
dec
sahf
call
shufps
add
jmp
mov
daa
add
sub
repnz
test
mov
add
add
add
into
aam
repz
xchg
test
movs
add
add
(bad)
(bad)
(bad)
dec
imul
add
add
sub
xlat
dec
or
fneni(8087
jb
mov
popa
call
sbb
add
loopne
add
add
mov
push
(bad)
jge
scas
add
add
add
popf
test
sub
add
mov
cld
(bad)
int3
les
add
int3
add
(bad)
aam
add
pop
sub
mov
setns
add
add
lock
add
cli
mov
nop
sbb
les
(bad)
cmp
add
jmp
mov
sub
jp
or
jg
fdiv
stos
loope
add
add
jg
xchg
(bad)
(bad)
push
sub
add
jb
aaa
mov
aam
jmp
mov
int3
cmovnp
dec
test
add
mov
add
add
mov
add
mov
mov
repz
add
add
sub
jg
rcr
jle
inc
add
add
mov
aam
add
sub
sti
inc
cwde
js
test
add
xor
add
ja
aam
add
sub
inc
inc
loopne
stc
jno
cmps
add
cli
add
add
add
cmp
(bad)
pop
nop
sti
clc
adc
hlt
mov
dec
into
add
ret
and
mov
jnp
mov
shrd
in
add
sti
ja
adc
add
loope
inc
call
push
add
cli
and
add
sub
sti
inc
cwde
cmp
mov
inc
and
dec
add
fdiv
adc
cvtpi2ps
add
add
out
add
mov
and
jb
add
mov
cmp
retf
les
add
test
push
dec
mov
pop
imul
mov
loopne
mov
and
xor
ror
cmps
and
dec
imul
pusha
mov
and
scas
add
sub
mov
and
jge
xor
nop
jno
add
and
add
add
mov
retf
test
add
dec
pop
stos
add
aam
cli
scas
sub
mov
xor
test
scas
jno
add
or
add
add
mov
inc
ins
mov
test
add
add
mov
add
mov
sub
jp
and
test
mov
add
mov
add
cmps
cmp
add
cmc
jmp
in
jle
aam
push
add
or
push
xor
hlt
imul
lds
int3
dec
test
daa
cmp
sub
ja
adc
add
(bad)
loopne
jb
test
sub
mov
setle
add
add
and
add
add
jp
and
test
addr16
add
add
fidivr
pop
mov
cmovo
ins
add
add
add
sub
mov
and
sbb
fwait
push
mov
and
repz
add
mov
imul
jmpw
add
mov
sub
mov
les
test
add
jo
test
add
lds
jmp
cmp
sar
data16
scas
add
push
jmp
mov
nop
mov
call
add
enter
add
add
ins
fdiv
cmc
add
gs
mov
nop
mov
dec
(bad)
(bad)
mov
add
mov
imul
adc
les
cmp
cmp
out
add
rol
shld
mov
cwde
fdiv
lock
mov
inc
mov
dec
add
jge
or
(bad)
(bad)
cdq
jae
xor
(bad)
scas
ffree
cmp
adc
and
jp
and
mov
mov
ins
add
not
ficom
or
and
(bad)
push
inc
adc
out
retf
sbb
(bad)
or
mov
mov
xchg
mov
jmp
mov
mov
shr
daa
test
push
sub
mov
add
mov
bound
jmp
mov
xchg
jno
push
daa
dec
fst
hlt
add
add
add
mov
test
add
add
scas
adc
add
mov
stc
xchg
and
xor
jne
repz
mov
mov
mov
fcomip
mov
pop
loopne
repz
mov
dec
sub
add
sub
sbb
add
outs
clc
mov
jle
and
add
add
add
and
add
fwait
cmp
mov
push
xchg
js
or
add
add
dec
cmovl
jl
and
call
sub
jnp
sbb
cmp
int
aad
mov
jo
cmp
cmovl
xchg
dec
and
dec
test
push
add
inc
cmp
xchg
cs
lock
dec
xor
jb
repz
dec
test
int3
les
mov
dec
inc
daa
int
fistp
cmp
hlt
push
add
test
jnp
jb
cmp
mov
jmp
mov
xor
and
data16
ret
hlt
adc
add
xchg
and
jnp
add
add
add
xor
nop
jmp
mov
mov
cmp
add
scas
xor
and
sub
add
add
test
fdiv
mov
(bad)
jno
mov
call
xor
and
add
add
cmp
add
mov
xor
or
add
lds
hlt
mov
sbb
ins
sub
inc
add
and
cmc
mov
in
data16
scas
js
sub
mov
in
add
imul
popf
add
mov
add
mov
mov
shl
rol
cli
(bad)
call
sub
add
push
add
sub
xor
repz
stos
loope
sbb
add
xor
inc
inc
ins
cs
add
test
daa
add
data16
mov
repz
sub
add
add
xor
in
xor
jne
stos
and
add
add
inc
and
add
sbb
mov
jle
jb
add
add
push
mov
add
stos
mov
and
repz
mov
mov
xor
and
repz
push
out
inc
fdiv
add
sldt
add
add
std
xchg
hlt
jo
sahf
inc
cvtps2pi
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
jmp
push
jmp
push
ret
jmp
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
sahf
mov
mov
loopne
and
xchg
add
sahf
add
mov
mov
push
(bad)
ins
mov
add
xchg
ja
je
add
mov
add
adc
add
add
test
add
add
stc
push
test
leave
add
inc
add
add
mov
xchg
dec
add
adc
add
and
add
popa
sbb
pop
shr
add
leave
add
inc
and
add
mov
inc
add
jmp
mov
rol
pop
dec
loope
add
mov
push
(bad)
rol
jg
add
jecxz
mov
outs
pop
jge
jl
test
add
sbb
test
add
add
or
jl
in
fisttp
add
fisubr
add
mov
sbb
add
add
add
sub
dec
test
jl
add
test
outs
add
add
sahf
add
mov
adc
mov
(bad)
and
sbb
add
popa
add
cmp
mov
add
pop
test
stc
cdq
or
add
jmp
mov
jmp
pushf
adc
aam
pop
dec
add
cmc
repz
enter
and
add
and
inc
sbb
jl
cmp
(bad)
ror
(bad)
jecxz
sub
sbb
mov
inc
xchg
cmc
add
popa
jmp
stos
test
sub
jo
test
add
leave
jmp
mov
and
add
add
pop
inc
and
bswap
sub
dec
add
add
add
mov
add
mov
loope
jae
popf
xchg
add
add
mov
not
inc
and
(bad)
dec
add
add
and
add
adc
add
push
cmp
shl
jg
jmp
push
add
pushf
push
cmc
adc
mov
pusha
pmulhw
mov
add
mov
push
inc
mov
not
add
push
adc
aam
enter
add
ficomp
(bad)
mov
pop
xchg
dec
push
jle
add
jp
add
sbb
sahf
(bad)
into
cmp
inc
and
jg
mov
mov
in
pushf
add
add
inc
sbb
add
sahf
mov
and
aam
sub
mov
(bad)
xchg
and
add
ja
retf
dec
test
add
jg
push
in
mov
add
jecxz
stc
fiadd
add
enter
add
fidiv
cmp
adc
test
and
add
mov
sub
mov
je
jmp
dec
addr16
mov
sub
test
bswap
sbb
add
add
sahf
retf
xor
inc
dec
rcr
ja
jecxz
mov
aam
mov
in
mov
xlat
xor
test
and
sbb
add
dec
clc
and
imul
cmp
xchg
and
xchg
inc
pop
mov
add
push
sbb
and
jmp
loope
jae
xchg
add
jg
add
add
mov
sub
pop
pop
and
inc
cwde
xchg
popa
add
lock
add
retf
adc
add
test
pushf
add
jmp
mov
stc
test
fisub
inc
ins
cmp
test
add
and
sbb
add
push
add
add
jae
or
inc
loop
mov
add
add
leave
add
mov
mov
inc
add
add
fild
test
fisub
pop
and
add
test
jl
add
test
add
sbb
add
add
es
jle
les
push
mov
and
inc
add
dec
sbb
enter
pop
ror
add
adc
lds
mov
pop
mov
add
inc
xchg
push
mov
jge
sahf
add
add
aam
mov
dec
dec
repnz
test
and
and
xchg
dec
pop
mov
add
call
add
add
mov
mov
and
adc
add
add
and
jmp
movs
repz
add
inc
mov
and
add
push
mov
add
mov
lods
(bad)
sti
jmp
mov
mov
and
dec
sbb
xor
xchg
mov
rol
retf
pop
cmc
dec
dec
add
mov
add
mov
xchg
(bad)
mov
mov
mov
mov
cmp
add
jle
cwde
xlat
add
add
pop
sti
xor
jmp
inc
sti
add
add
cmovne
imul
cdq
jmp
adc
add
add
inc
mov
add
mov
lods
add
popa
inc
or
test
mov
(bad)
inc
test
jl
imul
mov
js
xor
mov
outs
mov
mov
mov
add
movzx
adc
and
and
inc
shl
dec
pop
add
add
mov
mov
dec
ja
test
inc
add
dec
add
popa
leave
ror
add
jl
mov
dec
dec
add
mov
push
add
mov
and
std
and
mov
or
(bad)
(bad)
(bad)
(bad)
mov
neg
jmp
inc
test
rol
add
mov
xchg
lea
ror
mov
dec
(bad)
add
mov
xchg
mov
and
icebp
dec
out
(bad)
call
and
fcom
and
pminub
add
in
ds
jecxz
mov
add
xlat
test
mov
and
jns
mov
movs
and
mov
mov
ja
add
add
add
mov
and
aam
add
inc
mov
cmovne
mov
jmp
imul
lods
add
add
lds
loopne
ds
or
dec
sub
(bad)
addr16
mov
stos
hlt
pop
mov
jmp
mov
mov
jmp
imul
fst
add
lea
and
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
mov
add
add
sub
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
mov
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
add
mov
mov
mov
add
sub
sub
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
sub
sub
add
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
cmp
jl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
movzx
cmp
jl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
add
add
sub
mov
movzx
add
sub
sub
mov
mov
jmp
mov
mov
movzx
cmp
jl
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
add
sub
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jge
mov
mov
mov
sub
sub
mov
movzx
mov
shl
shl
mov
mov
sub
add
add
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
sub
sub
mov
movzx
sub
sub
add
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
jmp
data16
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
lea
mov
mov
mov
mov
mov
cmp
jne
jmp
mov
cmp
mov
jbe
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
cmp
mov
je
mov
cmp
setb
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
add
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
add
add
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
add
add
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
cmp
jne
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
add
sub
sub
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
add
mov
mov
mov
sub
add
cmp
jge
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
add
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
add
mov
mov
cmp
mov
jbe
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
sub
mov
mov
sub
add
add
mov
jmp
cmp
jge
cmp
jne
jmp
jmp
mov
cmp
jb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
add
add
sub
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
add
mov
mov
sub
add
add
mov
xor
xor
xor
or
or
xor
and
mov
shl
movzx
mov
sub
add
mov
sar
add
add
sub
imul
shl
add
mov
cmp
jl
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
movzx
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shl
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
mov
add
mov
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
cmp
je
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
add
sub
sub
add
add
mov
cmp
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
cmp
jl
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
cmp
jge
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
sub
sub
add
mov
jmp
mov
mov
sub
add
mov
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
shl
shl
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
cmp
jne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
mov
sub
sub
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
mov
sub
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
shl
add
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
mov
jmp
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
mov
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
add
mov
shl
shl
add
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
shl
add
mov
cmp
jae
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
sub
mov
mov
mov
shl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
add
add
mov
jmp
mov
mov
sub
sub
mov
cmp
jne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
shl
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
add
add
sub
mov
mov
add
cmp
mov
jge
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
shl
add
mov
cmp
jae
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
add
sub
sub
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
sub
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
sub
add
add
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
sub
sub
add
mov
cmp
setge
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sar
sub
sub
add
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
and
xor
or
mov
cmp
jge
mov
mov
mov
shl
mov
mov
add
mov
shl
add
mov
add
sub
sub
shl
add
add
mov
jmp
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
shr
mov
mov
shl
mov
mov
cmp
jb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
sub
sub
mov
cmp
jne
mov
add
mov
mov
shl
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
shr
mov
movzx
imul
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
sub
add
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
mov
mov
mov
and
xor
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
sub
add
add
mov
cmp
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
add
add
sub
mov
mov
cmp
jbe
mov
jmp
mov
mov
mov
sub
add
cmp
jbe
mov
mov
mov
sub
sub
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
cmp
jb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
cmp
jne
mov
mov
mov
sub
add
add
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
test
mov
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
setb
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
add
sub
add
mov
sub
sub
add
mov
cmp
jge
mov
jmp
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
add
pop
pop
pop
pop
ret
jmp
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
shl
add
add
sub
mov
mov
jmp
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
jmp
jmp
mov
mov
sub
sub
add
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
sub
add
add
mov
jmp
mov
jmp
mov
sub
add
add
mov
jmp
mov
mov
sub
add
mov
mov
mov
jmp
mov
mov
mov
sub
add
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
sub
add
add
mov
jmp
jmp
jmp
jmp
mov
mov
mov
sub
add
add
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
shl
shl
add
mov
shl
add
mov
jmp
mov
mov
movzx
mov
jmp
jmp
jmp
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
add
mov
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
jmp
jmp
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
jmp
jmp
mov
mov
mov
sub
sub
add
mov
mov
mov
sub
add
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
add
mov
shl
add
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
add
mov
shl
shl
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
shr
mov
movzx
imul
mov
jmp
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
shl
mov
jmp
mov
mov
shl
mov
sub
sub
add
mov
mov
mov
add
add
sub
mov
jmp
jmp
jmp
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
shl
mov
jmp
mov
add
add
sub
mov
jmp
mov
sub
sub
add
mov
jmp
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
mov
add
sub
sub
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
jmp
jmp
mov
mov
jmp
mov
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
jmp
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
shl
mov
jmp
mov
shl
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
jmp
jmp
jmp
jmp
mov
shl
mov
mov
shl
mov
mov
add
mov
movzx
mov
and
xor
or
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pushf
mov
mov
mov
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
outs
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
enter
ror
add
mov
mov
mov
mov
lea
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
int3
jmp
jmp
