push
cdq
sti
inc
inc
add
push
push
je
imul
sub
or
scas
pop
ss
les
pop
sub
pop
push
dec
bound
arpl
rol
shl
xor
and
js
enter
je
enter
dec
inc
inc
and
xor
or
enter
and
xor
and
sbb
enter
test
sbb
xor
push
add
mov
add
fdivrp
(bad)
fdiv
inc
and
add
mov
and
mov
sbb
xor
nop
rol
pop
add
and
clc
hlt
stc
outs
dec
lock
mov
cmp
jne
push
jb
push
add
or
xor
in
out
inc
mov
jmp
mov
mov
or
mov
mov
add
mov
push
rol
push
and
mov
or
or
mov
inc
cmp
jne
mov
dec
adc
ins
cmp
pop
push
mov
lds
outs
mov
add
push
push
push
clc
mov
mov
jg
fcom
add
jmp
mov
dec
iret
mov
inc
add
or
inc
push
ins
int3
in
ficom
xchg
push
pop
add
push
ins
mov
neg
mov
pop
pop
pop
arpl
mov
je
jae
mov
mov
ds
outs
fs
mov
outs
call
mov
mov
jg
pop
mov
mov
(bad)
jns
mov
retf
in
jbe
fld
dec
mov
enter
mov
or
fcmovnu
into
sub
jmp
add
shl
push
mov
mov
scas
mov
mov
sbb
pop
imul
pop
pop
pop
lea
lock
hlt
xchg
push
push
pop
test
xchg
xor
neg
idiv
add
fbstp
xchg
cmps
mov
add
pop
lods
sub
sub
cmp
push
pop
cmp
pop
jbe
dec
xor
or
jmp
mov
add
mov
fnstsw
mov
add
sub
mov
pop
in
loope
sub
jle
or
xor
lods
jmp
mov
mov
xchg
adc
mov
jnp
test
add
mov
lds
mov
fiadd
(bad)
lods
adc
jge
mov
mov
jbe
and
and
add
jne
dec
cmp
push
arpl
int3
jo
in
jo
and
movs
ret
push
ffreep
outs
push
sub
test
xchg
inc
call
add
add
(bad)
dec
push
pop
js
ss
sbb
and
or
leave
adc
fistp
or
(bad)
push
(bad)
stc
leave
mov
ss
pop
or
adc
sub
adc
loope
mov
imul
rcl
mov
pop
pop
sbb
add
fst
adc
inc
adc
jae
or
scas
ins
fld
sbb
adc
test
xchg
xor
cmp
rcr
ficom
push
div
jne
stos
pop
dec
or
adc
xor
mov
mov
sbb
out
call
ror
jae
jl
or
add
sub
add
out
xor
dec
adc
or
in
pop
jmp
push
ja
arpl
push
add
inc
lahf
in
jae
in
sti
call
(bad)
adc
mov
jae
mov
retf
or
push
push
rol
js
jae
(bad)
dec
cwde
jge
pop
fadd
jne
rol
pop
jmp
fwait
mov
ins
mov
fs
pop
add
mov
and
inc
add
dec
fdivr
push
imul
imul
movs
xor
jo
jg
mov
pop
aas
jbe
cwde
mov
pusha
add
dec
pop
inc
sahf
sahf
add
inc
mov
ja
xchg
pop
ds
das
jne
popf
sbb
add
or
outs
xchg
adc
add
fnstcw
jl
in
jae
or
xchg
(bad)
mov
cli
inc
addr16
pop
pop
xchg
xchg
(bad)
out
push
push
jae
fprem
cmp
je
jmp
pop
jae
mov
call
sub
int
rcl
push
add
jns
je
js
xchg
retf
mov
or
arpl
adc
repz
mov
inc
push
push
enter
inc
xor
adc
mov
jl
and
fnsave
scas
jg
and
fdivr
mov
pop
jb
cmp
xor
push
or
in
nop
or
pop
push
xor
xchg
xchg
cmps
lea
mov
ret
in
cmp
pop
jmp
pop
jmp
je
xchg
hlt
les
es
je
mov
out
mov
xor
mov
adc
cmp
dec
jmp
fild
jo
xchg
xlat
cmp
push
movs
push
push
sti
outs
sbb
mov
push
cmp
cwde
ins
je
adc
push
in
or
mov
clc
cmovbe
fcmovnu
popf
mov
add
neg
clc
pop
ficom
inc
cmp
in
les
mov
mov
mov
out
adc
mov
mov
jecxz
mov
push
ret
add
jmp
mov
xlat
int
js
ret
repz
jle
add
out
sbb
and
imul
imul
movs
les
(bad)
or
inc
clc
jmp
xchg
jnp
mov
(bad)
inc
ret
jne
and
or
cmp
je
add
add
jne
stc
dec
inc
add
xchg
add
fistp
push
std
cmp
or
or
cmp
addr16
ins
jne
test
jns
ret
jnp
psraw
add
dec
push
mov
hlt
mov
mov
adc
iret
mov
push
mov
or
inc
adc
sbb
jbe
ret
sbb
push
or
sbb
js
mov
stc
cmp
out
scas
add
sub
sbb
or
out
mov
pop
(bad)
mov
sbb
push
pop
es
add
btc
loope
popf
mov
add
inc
imul
adc
je
or
int
loope
adc
pop
cmp
push
or
xchg
mov
ss
add
or
dec
or
je
push
clc
ret
inc
sqrtps
loope
inc
loopne
cmp
fiadd
jecxz
sub
xor
test
mov
out
test
sub
or
jb
(bad)
sbb
or
mov
popa
inc
push
add
mov
fisubr
lock
xor
mov
(bad)
std
ins
or
fadd
xchg
adc
cdq
or
and
shr
cli
pop
push
hlt
dec
jmp
or
icebp
popa
sti
jp
daa
(bad)
jb
js
mov
aas
xlat
ror
sbb
(bad)
pop
jmp
(bad)
fmul
xor
(bad)
fadd
dec
or
fnsave
sbb
cmp
ja
inc
inc
retf
cmp
aad
pusha
push
pop
xchg
out
test
mov
fdivp
jbe
lea
pop
mov
mov
test
in
or
push
call
jbe
rcl
cs
sar
jo
add
in
cmp
xchg
and
or
or
dec
pop
push
das
pop
scas
ficom
pop
dec
(bad)
(bad)
or
or
jge
jl
fs
sbb
adc
pop
outs
adc
push
clc
aaa
test
add
ja
(bad)
mov
hlt
dec
sub
out
or
sbb
push
mov
ror
and
(bad)
push
inc
lea
mov
push
cmp
pop
loopne
push
loopne
mov
dec
call
add
mov
repz
mov
jae
jmp
lock
lock
mov
sti
pop
sbb
jmp
or
fucomip
out
scas
pop
mov
lods
pop
xor
pop
fimul
mov
xchg
inc
add
push
sbb
add
push
enter
lea
ret
xor
xchg
rcl
into
pop
push
pop
int3
or
cmp
xchg
jg
iret
dec
xor
sbb
mov
mov
pop
and
push
jle
out
mov
or
pop
cmp
push
into
(bad)
stos
fstp
loopne
aad
nop
fcom
call
pop
or
fstp
sub
xor
je
shr
int3
jbe
push
ret
call
mov
ds
or
in
sbb
add
pop
daa
mov
add
xchg
or
or
sub
mov
xchg
(bad)
popa
ret
cld
dec
add
std
jb
jb
jmp
pop
(bad)
stos
jnp
test
ret
pusha
push
fwait
sar
xchg
xor
push
jb
in
dec
push
movs
jne
iret
inc
push
pushf
sub
pop
mov
push
test
scas
and
inc
bound
dec
retf
into
ror
clc
pop
ins
jle
mov
jmp
cld
adc
les
loope
or
dec
cmp
add
mov
add
lods
hlt
dec
xlat
ret
clc
cmp
aad
out
(bad)
mov
or
adc
pop
xchg
and
or
movs
push
lock
jne
icebp
push
test
jmp
inc
dec
lock
arpl
mov
sub
imul
clc
push
in
or
jbe
pop
pop
adc
inc
cld
(bad)
arpl
call
push
push
in
jg
sub
ror
adc
test
pop
loope
mov
pop
jmp
inc
les
lahf
dec
dec
inc
das
mov
mov
pop
pop
into
jo
mov
lock
sbb
pop
jne
jae
mov
sbb
mov
mov
xchg
and
push
ins
sbb
ret
cmps
cmovl
inc
push
dec
push
add
pop
ja
(bad)
cmp
popa
mov
test
fs
or
xchg
xchg
adc
int3
ins
push
movs
mov
mov
jle
add
ins
cwde
inc
xchg
(bad)
add
or
jl
sub
sub
outs
add
adc
mov
clc
or
dec
jb
push
mov
add
or
fistp
add
cmp
jns
xchg
xor
push
sbb
(bad)
inc
or
or
sbb
ja
int3
out
lods
shl
outs
mov
dec
pop
push
and
ds
mov
xchg
jo
xor
lahf
sahf
dec
(bad)
in
repz
jbe
pop
mov
xlat
nop
out
sub
mov
adc
xchg
iret
mov
jge
sub
fiadd
inc
test
mov
jmp
mov
sbb
std
fsub
int
loopne
jge
int
sub
add
bound
sti
sub
mov
cmp
add
mov
sbb
lods
push
and
push
mov
icebp
arpl
retf
and
sbb
adc
add
cmp
push
xor
out
(bad)
std
mov
adc
mov
aam
and
gs
add
in
jmp
aaa
cmp
pusha
imul
mov
adc
mov
cmp
and
sbb
nop
xchg
enter
or
xlat
adc
ror
sbb
retf
push
sub
inc
sbb
cmps
arpl
push
add
in
adc
mov
cmp
mov
lock
adc
ret
popa
jmp
xlat
int
inc
leave
add
(bad)
jbe
mov
aad
fcomp
mov
call
add
shr
pop
jmp
iret
xlat
xor
ss
jae
stos
adc
cmp
daa
add
ret
outs
cmc
push
scas
push
jmp
je
push
mov
fisttp
or
sbb
mov
fcmovu
sub
lahf
sbb
jne
mov
mov
xor
rol
out
mov
fs
ret
in
ret
jecxz
cmp
sub
mov
or
pop
or
jg
cwde
add
jo
mov
mov
xlat
sahf
or
loopne
jae
aas
inc
adc
ret
push
push
push
cmp
mov
xor
xchg
repz
and
je
mov
ins
inc
sub
push
mov
loope
add
and
jmp
je
rol
sub
movs
mov
and
rep
mov
mov
xor
lea
sbb
std
sbb
add
pop
cld
and
push
cmp
adc
mov
icebp
adc
or
call
imul
jmp
sti
push
std
mov
push
js
pop
add
fbstp
in
fiadd
sub
sbb
bound
xor
xchg
pop
sub
sbb
sub
xor
je
cmps
dec
outs
stos
and
ins
mov
mov
xchg
adc
outs
xchg
jnp
push
dec
and
sar
mov
in
jle
mov
inc
inc
adc
nop
iret
rcr
in
xor
ja
push
mov
add
inc
sub
jne
push
cmp
repnz
push
add
movs
and
hlt
lock
sub
jmp
adc
sub
int3
sbb
cmp
test
jmp
push
or
(bad)
mov
ins
sti
xchg
clc
sub
inc
dec
sub
jae
outs
(bad)
cmp
jmp
sub
pop
dec
mov
pop
cmp
pop
add
adc
mov
pop
mov
test
push
cwde
aam
sbb
sbb
ins
pop
inc
cmp
mov
ja
and
jae
outs
imul
jne
call
ror
or
out
cmc
sbb
sbb
jmp
outs
leave
mov
dec
sub
mov
in
dec
(bad)
(bad)
mov
shl
add
(bad)
jecxz
shl
stos
pop
das
fist
cld
ins
sbb
fstp
mov
inc
xor
bound
je
shl
mov
js
pop
pop
je
xor
lock
sbb
adc
aam
(bad)
mov
sub
or
cmp
ja
lea
add
add
sub
out
int
imul
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
pop
cvtpi2ps
popa
jb
dec
and
das
(bad)
pop
adc
or
into
add
outs
xchg
ret
push
aad
add
test
movs
cmps
and
cdq
inc
mov
loop
loopne
js
in
jl
test
call
mov
or
lods
push
das
cs
cmp
sti
call
pcmpeqb
gs
add
popa
pop
cmp
xlat
adc
jmp
jge
sub
in
jge
inc
stc
xor
jg
sahf
stc
sbb
jmp
fstp
fld
mov
out
(bad)
repz
cdq
lods
rol
inc
push
jb
inc
enter
in
push
in
pushf
or
ret
mov
adc
xchg
lahf
cld
adc
sbb
imul
push
out
jle
add
mov
mov
aad
sub
test
out
jg
repz
test
mov
lds
mov
int
aaa
inc
jbe
imul
cmp
mov
(bad)
mov
(bad)
jmp
mov
js
inc
cmp
xlat
fadd
outs
xor
xchg
cmc
outs
add
push
or
push
push
int3
into
(bad)
(bad)
(bad)
call
ret
inc
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
(bad)
(bad)
(bad)
dec
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
(bad)
idiv
(bad)
inc
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
mov
lds
stos
mov
cmp
or
mov
pop
out
(bad)
(bad)
(bad)
jg
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
mov
jle
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
(bad)
call
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
xchg
cmp
(bad)
mov
cmps
lock
mov
popa
mov
and
addr16
cli
(bad)
(bad)
push
daa
mov
sub
and
and
outs
bound
xor
mov
push
and
sti
movs
mov
and
jne
push
or
pop
aas
stc
or
(bad)
popa
loope
cmp
hlt
movzx
call
xor
retf
shr
push
sbb
xor
int
sub
hlt
add
hlt
push
xor
cwde
add
sub
dec
xor
mov
adc
cmc
push
out
mov
data16
aam
dec
sub
mov
(bad)
(bad)
jg
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
cmps
test
jae
push
popa
ins
jne
fninit
fldcw
lea
jo
xor
mov
inc
mov
repz
test
sbb
jbe
in
pusha
mov
or
and
(bad)
adc
push
sbb
xor
test
jecxz
cmp
xor
daa
mov
or
push
cld
xlat
mov
push
add
pop
loopne
dec
fadd
cmovns
mov
rcr
mov
adc
or
fadd
pop
sub
jmp
cmp
je
ret
sti
and
adc
pop
jnp
mov
ucomiss
mov
sbb
jne
jne
dec
push
ja
mov
mov
mov
dec
lods
xor
mov
scas
sbb
jmp
mov
add
or
sbb
push
xchg
pop
mov
push
rol
pop
or
ss
push
lea
repnz
sub
imul
lds
mov
pop
mov
inc
mov
ja
add
shl
mov
out
inc
sahf
fild
ss
or
test
add
xor
mov
ins
sbb
and
icebp
pop
jmp
pop
sbb
cmp
push
xor
hlt
xor
test
icebp
outs
hlt
mov
mov
or
inc
add
xor
or
ds
or
lods
push
sub
test
or
and
fdiv
sbb
clc
adc
push
clc
stos
or
popf
inc
lahf
mov
add
adc
out
sbb
sbb
jbe
mov
ins
hlt
mov
push
adc
xchg
out
ins
cmp
mov
add
push
add
sbb
add
push
sbb
push
push
rcr
jbe
and
inc
add
jmp
or
mov
clc
shl
(bad)
fwait
xor
leave
fxch
push
pop
loope
mov
dec
into
push
adc
loop
fcmovu
xchg
adc
mov
inc
add
jne
test
bound
stos
adc
outs
push
or
pop
mov
retf
int
call
addr16
mov
aam
cmp
cli
out
push
je
movs
jl
and
sbb
sub
ja
jbe
lock
push
add
(bad)
fimul
fs
push
repnz
mov
or
add
adc
xchg
push
cmp
je
add
mov
adc
sbb
xchg
ficom
sub
xor
(bad)
push
fld
mov
push
jge
mov
pop
add
inc
xchg
mov
test
movs
jecxz
mov
mov
mov
adc
add
sbb
sar
sub
div
dec
dec
inc
add
mov
stos
mov
push
aaa
xchg
test
pusha
fsubr
add
jmp
jo
push
push
push
push
push
inc
pop
xchg
fld
(bad)
jbe
mov
pusha
pop
xor
pop
sub
or
inc
or
jne
xor
pusha
add
lahf
mov
fsubr
pusha
pusha
ds
adc
in
xor
jp
dec
xchg
mov
pop
mov
pop
adc
out
fwait
jnp
jb
retf
sbb
leave
ret
push
mov
ret
fstp
pop
add
jg
sar
pop
cmp
push
sub
mov
cmp
add
call
jge
movs
jmp
cmp
cmp
idiv
mov
adc
and
cmp
cmp
mov
mov
sub
jmp
mov
jmp
bndldx
lods
pop
push
into
movs
mov
push
mov
repnz
push
pop
loopne
mov
pop
ret
push
and
(bad)
pop
xchg
xor
sbb
je
bnd
xor
and
pop
int3
cmp
push
inc
push
xchg
push
loopne
sbb
cli
sbb
inc
cld
out
sub
lea
add
add
or
fstp
loope
dec
out
xor
shl
or
pop
hlt
pop
inc
in
je
push
jo
cmc
(bad)
pop
mov
cmp
jne
loopne
mov
add
jns
cmp
or
add
adc
cmc
adc
imul
loop
mov
xor
pop
jl
adc
pop
cmp
sbb
sbb
loopne
scas
fdiv
fsub
das
and
push
push
sub
jg
pop
xchg
or
inc
das
sub
gs
fcom
xor
outs
lods
(bad)
mov
mov
cmp
jle
ins
add
imul
inc
fstp
outs
cmp
jg
mov
sbb
lea
fwait
jo
cmp
xor
dec
outs
adc
xor
mov
mov
dec
jo
pop
pop
pop
icebp
das
pop
mov
lea
rcl
mov
push
dec
or
jmp
pop
fild
add
add
repnz
fistp
es
gs
mov
mov
mov
repz
idiv
or
rol
inc
ror
mov
dec
aam
mov
mov
mov
xchg
jl
fisttp
mov
sbb
mov
adc
sbb
inc
pop
cli
in
push
jmp
sbb
and
dec
pop
mov
push
jl
lea
iret
inc
mov
cmp
mov
paddb
fcom
cmp
mov
cmp
lock
push
push
pop
(bad)
jl
and
popa
sbb
push
loopne
mov
and
pop
sub
cdq
add
xchg
imul
or
mov
rcr
fnstsw
sub
push
cmp
push
push
mov
(bad)
and
(bad)
cld
popf
cmp
sbb
in
out
sbb
adc
not
adc
dec
sub
lds
(bad)
add
sub
pop
aad
sbb
cmp
mov
cmp
jbe
pop
sub
lods
ss
fcomp
push
jl
add
mov
mov
sbb
mov
arpl
fist
hlt
mov
sbb
sti
imul
and
sub
pop
sar
pop
sub
dec
jl
lock
(bad)
push
sbb
push
adc
sbb
add
or
cmp
rol
dec
jne
cmp
and
scas
cs
and
sbb
pushf
loop
addps
dec
cld
shr
jmp
fdiv
xchg
dec
jmp
jnp
inc
or
lea
mov
pushf
or
jle
adc
pop
mov
pop
mov
add
mov
clc
cmp
jecxz
mov
mov
xchg
stc
mov
jne
inc
adc
fstp
sub
xor
sub
push
push
or
dec
ins
add
out
or
pop
dec
call
les
inc
clc
out
push
mov
push
jg
fadd
pop
lea
cmp
pushf
xchg
stc
jge
push
dec
mov
bound
mov
movq
or
(bad)
mov
xor
in
sub
rol
xor
das
jge
xor
jl
movs
inc
push
mov
lea
jmp
xor
retf
pop
jecxz
fnstsw
dec
add
add
outs
outs
sbb
mov
mov
pop
sub
jmp
push
inc
das
sub
and
mov
out
pop
add
xor
jmp
add
and
int
cmp
cmp
push
sbb
pusha
repnz
ins
not
adc
rcr
push
js
ins
popa
add
or
mov
movs
inc
sub
aas
dec
jo
retf
retf
mov
imul
cli
jle
loopne
or
xchg
mov
adc
sahf
out
lods
xor
add
pop
(bad)
inc
mov
adc
clc
fist
jno
clc
push
ror
pop
rol
mov
out
(bad)
sahf
mov
xor
mov
bound
push
mov
pop
setl
clc
inc
inc
in
pop
jo
retf
mov
les
push
xor
xchg
xchg
adc
aam
fsub
cmp
nop
push
pop
cld
dec
fcmovnb
or
add
cmp
or
push
es
jp
pop
jae
iret
ss
jo
cld
mov
add
dec
jmp
push
scas
(bad)
xchg
push
fild
mov
sbb
rcr
ins
daa
add
mov
lds
(bad)
inc
or
dec
pop
xchg
sbb
lea
jmp
pop
loopne
inc
or
xchg
push
imul
mov
sub
ja
add
push
shr
mov
cmp
jne
dec
je
in
add
sub
dec
ds
lahf
loop
ins
adc
ins
or
pop
loope
and
test
sub
inc
pop
cmp
jne
push
adc
xor
add
xlat
in
fdiv
push
adc
ss
jmp
or
push
cmp
mov
jns
hlt
sub
aas
pop
fnstcw
sbb
push
jmp
fist
push
out
jbe
xor
cli
dec
les
xchg
inc
adc
ror
das
jg
ficomp
pop
cld
add
cmp
mov
pop
sub
mov
stos
pop
sub
pusha
adc
jmp
mov
adc
ror
ret
xor
dec
and
into
(bad)
cmc
pop
mov
loopne
mov
push
mov
jo
(bad)
call
xor
mov
icebp
jl
icebp
xchg
adc
pusha
dec
outs
push
inc
mov
sub
in
add
or
or
push
sbb
leave
mov
call
inc
jmp
int3
push
jl
push
push
test
std
and
sub
das
push
xor
out
call
outs
xor
or
pop
or
add
aam
mov
xchg
jb
jecxz
dec
add
adc
push
mov
hlt
call
add
ds
je
cmp
push
cmp
fld
jbe
cvttps2pi
(bad)
and
dec
inc
add
or
xchg
out
sub
pop
pop
or
in
pop
jmp
jmp
sbb
jae
adc
xor
push
mov
fcmovnbe
mov
mov
or
aaa
rcl
imul
call
sbb
int
sub
adc
add
retf
mov
sahf
rcr
sbb
loope
test
jmp
sbb
sbb
mov
aam
mov
and
mov
pop
sub
xchg
or
test
loopne
(bad)
lahf
sub
fldcw
daa
jecxz
sbb
test
test
mov
(bad)
and
test
int
shr
mov
ss
push
xchg
test
push
mov
xor
or
outs
imul
or
jl
adc
mov
mov
inc
jnp
test
inc
retf
add
or
or
adc
jo
or
das
lahf
push
mov
and
push
dec
lea
sbb
mov
add
stos
inc
pusha
fwait
sti
and
imul
add
inc
pop
cmp
gs
push
aam
mov
call
pop
out
movs
cmp
jne
sbb
(bad)
sbb
aad
xor
xor
into
ins
cmc
mov
inc
pop
js
pop
(bad)
sbb
mov
dec
push
xor
mov
sbb
sbb
inc
pop
jg
mov
cmc
dec
xor
pop
lock
cld
lea
imul
add
mov
sub
arpl
inc
cmp
or
xor
inc
stos
dec
mov
add
push
pop
pushf
iret
(bad)
rcr
cmps
add
push
add
ret
pop
fldlg2
fucomip
mov
ret
dec
push
sub
sbb
inc
pop
aas
inc
add
das
imul
loopne
dec
fwait
inc
popa
push
(bad)
sti
call
add
jb
gs
xor
cs
ins
add
gs
outs
outs
addr16
js
rcl
dec
popa
ins
gs
adc
fdivr
jp
pusha
xor
test
jbe
pop
sti
test
mov
addr16
leave
jb
fisub
add
nop
sub
and
mov
mov
ds
ins
push
fs
(bad)
clc
test
(bad)
cwde
test
cs
jbe
pop
in
mov
ja
cmps
pop
addr16
add
call
pop
imul
mov
std
pop
(bad)
mov
fstp
push
push
repz
adc
pop
cmp
sub
push
or
js
retf
cmp
sub
in
lahf
dec
in
in
xchg
(bad)
or
or
popf
sbb
and
and
add
cs
mov
retf
fidivr
or
shl
pslld
xchg
cmp
mov
das
mov
ret
lea
call
data16
popa
jb
jae
or
cdq
sti
arpl
gs
sbb
and
outs
jecxz
js
and
popa
pop
sbb
pop
dec
(bad)
xor
test
or
je
xor
jne
inc
mov
adc
sbb
mov
adc
jl
xchg
loopne
dec
cmp
fcom
push
add
xor
sbb
push
and
push
add
push
nop
fsub
dec
mov
add
push
or
stos
cmp
lods
inc
sub
jge
ret
nop
or
ret
adc
adc
(bad)
aaa
clc
(bad)
mov
(bad)
sub
add
and
xchg
mov
mov
stos
dec
push
lea
cmc
push
push
sbb
rcl
mov
aam
hlt
packsswb
xchg
pop
into
dec
sub
rcr
adc
loopne
adc
jae
add
add
add
adc
ins
pop
in
or
mov
or
fwait
or
sub
inc
add
add
mov
mov
mov
fs
loop
add
pop
and
xchg
fs
sahf
or
dec
mov
or
mov
pavgb
mov
mov
pop
sti
add
or
cmps
push
sub
inc
retf
add
(bad)
pop
lods
and
add
inc
mov
inc
jg
cmp
xor
and
push
pop
mov
lods
enter
cmp
pop
mov
or
or
xor
mov
pop
sub
loop
cmp
clc
mov
adc
or
mov
std
out
ficom
or
leave
jne
fs
test
cmp
sub
lds
mov
mov
arpl
daa
fcmovnb
mov
ret
pop
mov
xor
fsub
pusha
pop
add
xchg
sbb
sbb
pushf
xor
xchg
mov
xchg
sbb
sbb
imul
adc
xlat
sbb
aaa
inc
sub
nop
add
sub
ret
push
fwait
daa
pop
adc
push
sbb
add
enter
clc
hlt
lock
and
and
and
int3
or
enter
or
enter
mov
in
sub
sbb
inc
inc
inc
push
sbb
xor
ds
xchg
xor
call
fwait
push
pop
jb
dec
jo
dec
push
in
inc
mov
aaa
je
cmps
in
lock
sbb
push
in
mov
jl
movs
in
pusha
push
adc
xor
dec
ja
and
jb
mov
jbe
aaa
test
cs
push
test
dec
mov
inc
repnz
adc
jb
add
mov
jb
push
mov
and
and
sahf
shl
repnz
icebp
repnz
and
and
and
sti
or
cld
std
(bad)
dec
enter
loop
enter
in
enter
out
call
jmp
xor
in
in
out
out
or
enter
shl
enter
aam
enter
(bad)
xlat
fsub
or
fcmovu
or
(bad)
(bad)
or
enter
ret
and
and
and
retf
or
int3
int
iret
or
enter
mov
enter
mov
enter
mov
mov
mov
xor
mov
leave
shl
xor
sbb
xchg
pop
cmp
nop
pop
xchg
adc
or
or
inc
and
lea
ins
fmul
(bad)
aas
or
arpl
je
outs
outs
clc
pop
sub
dec
clc
adc
fs
enter
dec
gs
jo
nop
push
push
pop
add
in
push
push
lods
out
cmc
jg
inc
dec
jne
dec
dec
gs
xchg
jns
das
pop
dec
cwde
mov
enter
or
outs
pop
inc
jb
pop
or
pop
cmp
iret
xor
pusha
xchg
or
or
adc
pop
ret
inc
enter
comiss
sbb
sbb
scas
xchg
daa
je
or
imul
adc
repnz
gs
inc
enter
outs
jbe
dec
fdivr
gs
ins
outs
ja
push
arpl
sub
dec
shr
test
push
pop
mov
xor
leave
fcom
jbe
imul
nop
aam
aam
xor
arpl
push
push
arpl
imul
inc
pusha
jecxz
pop
xor
outs
fs
mov
pop
nop
fcom
xchg
inc
cmp
maxps
imul
cmp
pop
or
cmp
adc
inc
popa
jae
outs
xchg
push
or
retf
or
xor
aas
add
test
retf
adc
arpl
jmp
pop
xchg
push
mov
sub
mov
push
pop
sub
js
gs
test
mov
scas
push
je
arpl
or
nop
add
inc
add
or
je
ins
loope
mov
inc
imul
or
add
or
lahf
inc
enter
pop
mov
mov
pop
sbb
outs
fs
sbb
sbb
pop
scas
inc
push
(bad)
fdiv
sub
jb
nop
je
je
aam
and
nop
mov
and
adc
popa
data16
call
jle
add
aaa
xor
push
dec
pop
or
in
ret
jae
and
or
and
push
xor
scas
cdq
and
rol
add
stc
inc
sub
cmps
out
pop
retf
mov
mov
push
ret
or
and
adc
add
mov
ds
pusha
dec
ss
pop
sbb
and
mov
push
jmp
cmp
ja
add
mov
add
jmp
inc
fistp
sti
inc
sbb
adc
mov
dec
(bad)
push
lock
cmp
jl
cmp
jbe
or
mov
imul
adc
clc
xor
into
sub
inc
jns
xor
push
inc
pop
or
jns
mul
dec
push
mov
inc
cmp
ret
mov
shl
icebp
dec
les
cli
cmp
ret
push
(bad)
jmp
jb
mov
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
and
mov
cmp
loopne
(bad)
adc
and
jo
inc
mov
test
iret
pop
push
jg
clc
mov
jmp
push
sub
fst
and
fnstcw
or
call
inc
daa
and
mov
add
fild
fild
ret
dec
adc
(bad)
jle
add
sub
add
ror
fild
stc
mov
xor
mov
shl
fcom
fstsw
sahf
jae
fldlg2
jg
fdiv
ffree
ffree
ffree
pop
retf
in
sub
add
outs
push
adc
mov
xchg
push
sub
(bad)
iret
and
mov
sub
outs
outs
inc
or
(bad)
jle
mov
mov
jmp
(bad)
arpl
push
dec
push
xlat
imul
push
dec
dec
cwde
push
(bad)
jg
ss
and
mov
les
out
push
clc
dec
inc
jmp
into
mov
mov
ret
sub
ret
pop
in
lea
mov
add
mov
sub
test
inc
ss
xchg
push
inc
cmps
cld
sbb
arpl
imul
in
stos
xor
fwait
and
out
stos
mov
(bad)
push
push
xor
mov
mov
sbb
push
mov
xor
ret
pop
sbb
cld
(bad)
mov
inc
sub
mov
add
xchg
adc
inc
cmp
in
sub
mov
add
retf
mov
mov
inc
fxch
add
out
fst
sbb
pop
pop
pop
out
add
jl
push
xchg
adc
pop
or
jae
repnz
imul
push
jmp
das
pop
fst
add
shl
mov
popa
popf
jp
and
imul
jp
jmp
fidiv
int3
fsubrp
or
aam
fcomp
add
cmp
jne
pop
pop
xlat
and
add
fsub
ret
jmp
pop
jbe
mov
sbb
mov
call
(bad)
fdiv
push
sbb
add
push
inc
stos
adc
cs
mov
loope
inc
xor
sub
adc
sub
add
mov
or
sbb
rcr
dec
shl
jg
jg
push
je
xor
movs
push
aaa
add
mov
xchg
mov
ss
add
das
add
shl
or
and
mov
sub
(bad)
je
adc
jmp
call
cli
inc
idiv
adc
or
jo
mov
hlt
adc
lods
jmp
or
mov
sbb
pop
and
fcom
pop
fidivr
mov
xchg
xor
cmp
mov
scas
jae
stos
xchg
movs
xchg
or
ins
(bad)
mov
rep
or
in
(bad)
mov
push
clc
pop
pop
mov
outs
fnsave
push
sub
cmp
jb
cmp
ja
imul
lods
sub
movzx
add
xchg
add
pop
daa
ds
or
pop
or
mov
or
ret
or
je
sub
test
ret
and
mov
or
sub
jne
lea
mov
dec
push
cmps
sub
mov
and
pop
(bad)
clc
add
and
add
stos
arpl
movs
imul
or
jbe
push
(bad)
ins
pop
pop
sub
dec
fsubr
shl
sar
mov
push
ficom
fadd
retf
sub
cmp
je
lock
outs
or
popf
lods
cdq
ins
jmp
xor
pop
repnz
mov
fiadd
push
cdq
cmp
jne
outs
(bad)
push
lds
bound
cmp
jbe
mov
jae
or
jmp
xor
and
cld
test
jmp
mov
xor
add
jne
pop
and
mov
mov
ins
aad
(bad)
jecxz
mov
or
add
clc
add
cmp
ja
(bad)
fcom
mov
out
(bad)
lahf
pop
adc
ins
movs
add
retf
push
jae
jae
leave
(bad)
mov
jg
pop
mov
add
stc
inc
je
mov
out
repnz
outs
push
inc
je
mov
inc
je
mov
dec
je
outs
jo
mov
mov
sub
ret
adc
fld
sbb
adc
ror
adc
fdivr
scas
ins
ja
jno
prefetchwt1
xchg
mov
and
xlat
outs
pop
movs
mov
sar
loop
pusha
cmp
xor
lea
dec
push
sub
cmp
icebp
mov
xchg
mov
and
dec
jl
or
ss
pop
xlat
call
push
mov
movs
(bad)
pop
jne
and
js
iret
dec
adc
xchg
xchg
data16
adc
pop
or
add
mov
cmp
fsubr
sbb
jmp
sub
ja
dec
das
ret
and
out
push
das
jo
and
jmp
mov
sti
cwde
dec
cmp
jl
jmp
add
mov
jae
retf
in
loop
ja
fcom
fadd
dec
cmp
das
push
(bad)
dec
xlat
jmp
lea
jp
loopne
push
adc
cmp
outs
jno
or
(bad)
push
or
mov
mov
stos
xchg
push
mov
scas
mov
mov
fidiv
lods
in
enter
mov
stos
loopne
sub
cmp
jne
ins
cmps
aam
xchg
loope
jmp
mov
jns
int
cli
mov
pushf
repz
sbb
(bad)
mov
rcl
xor
(bad)
js
add
jle
sub
add
or
scas
adc
xor
inc
out
stc
inc
pop
mov
mov
sub
cmp
pop
mov
lahf
(bad)
push
out
mov
fsub
in
mov
frstor
inc
pop
adc
je
add
(bad)
fcomi
ja
movsx
cmp
add
add
sbb
js
outs
xlat
sar
jmp
push
addr16
mov
dec
dec
inc
push
ins
mov
or
loop
ret
cdq
(bad)
ret
mov
jle
dec
aam
outs
or
jg
cmp
jl
sub
push
cmp
or
pop
jmp
cmc
inc
inc
je
stos
loop
pop
lock
not
mov
and
or
and
daa
std
int
jo
fwait
shr
pop
add
mov
pop
jmp
and
or
cli
neg
imul
mov
mov
mov
inc
xor
sub
fdiv
adc
mov
jmp
movs
pop
sub
push
xlat
mov
dec
scas
add
aas
sti
div
mov
inc
push
dec
je
dec
jne
(bad)
cli
cmp
(bad)
jge
stos
sbb
call
add
jecxz
cmp
add
stc
cs
test
dec
jns
jno
fnsave
or
cmp
xchg
mov
xor
das
fimul
xchg
pop
add
aas
cmp
je
mov
fdivr
inc
or
adc
inc
loop
fsub
test
or
and
inc
add
and
popf
or
sti
std
ficomp
inc
sub
sub
mov
and
or
fdivr
sti
sub
inc
add
mov
dec
xlat
pop
sbb
sub
sbb
inc
push
and
sbb
loopne
pop
fwait
mov
in
cmps
cmps
popf
pop
add
jmp
or
neg
(bad)
sar
call
imul
push
mov
inc
sbb
inc
and
pop
in
fld
mov
dec
add
fwait
cmp
and
mov
cmp
lods
push
fstp
jmp
outs
jg
test
fstsw
fwait
pop
inc
test
sub
mov
jmp
fbstp
lea
mov
jecxz
inc
jecxz
sub
dec
loope
and
add
sub
fld
stos
inc
clc
add
jns
cld
data16
xlat
dec
jge
cmp
dec
add
call
jae
inc
imul
lea
add
std
adc
mov
pop
adc
in
jmp
data16
outs
mov
mov
xor
mov
(bad)
jbe
in
xor
push
or
mov
jl
cmc
push
add
dec
out
in
fs
mov
ret
movups
in
ss
sar
mov
sub
xchg
fadd
mov
or
(bad)
jge
mov
pop
mov
sub
cmps
sbb
jae
dec
add
pop
cmp
loopne
in
ins
add
cmp
and
xchg
imul
pop
ficom
fistp
jo
or
jne
into
and
jne
push
(bad)
clc
lods
dec
adc
cmp
mov
and
and
add
mov
movs
das
mov
cmp
idiv
loope
jmp
fisttp
cmp
and
ins
loope
jl
add
outs
mov
pop
lea
fnstsw
retf
dec
push
or
adc
or
nop
lock
push
add
xchg
add
jle
xor
push
cmp
jbe
pop
je
mov
jl
push
mov
dec
or
jo
aaa
cmp
rcr
fst
ins
es
add
scas
ins
daa
xor
add
pop
fnsave
lock
push
mov
mov
outs
imul
pop
pop
arpl
and
lahf
shl
lock
sub
cmp
mov
mov
mov
out
jne
pusha
and
mov
icebp
inc
mov
dec
push
adc
fs
in
ins
imul
leave
popa
add
cmp
call
cmp
loopne
or
push
into
pop
popa
pop
sub
xor
xor
sbb
sbb
test
ds
je
dec
and
cmp
fs
push
lock
add
gs
jno
and
mov
pop
cmp
pop
popa
ins
dec
sub
xor
inc
mov
add
scas
xor
arpl
add
jns
inc
sub
mov
ins
fs
movs
cld
(bad)
cmps
add
and
fdiv
or
in
mov
arpl
mov
popf
bound
jo
push
push
ins
jle
and
cmp
sub
pop
jle
(bad)
das
push
push
mov
mov
je
(bad)
jecxz
add
hlt
push
ss
add
cld
test
icebp
dec
pop
pop
jae
gs
inc
jmp
xchg
xchg
inc
gs
fldenv
inc
outs
xabort
jo
and
ret
fsubr
jb
scas
or
adc
inc
das
ffree
mov
push
jmp
icebp
shl
sbb
je
xlat
mov
dec
lahf
add
clc
inc
je
fdivr
inc
push
rol
pop
iret
pop
stos
or
inc
inc
bt
jmp
imul
nop
out
in
rcl
aam
inc
std
cld
aas
ror
add
mov
div
ja
(bad)
mov
jle
sbb
add
sub
ret
add
push
mov
xchg
(bad)
cs
pop
je
jne
sbb
and
in
pushf
add
push
jle
outs
test
xchg
ds
fimul
packuswb
add
or
add
adc
add
outs
sbb
daa
sbb
cmp
adc
push
pop
popa
inc
fld
imul
push
dec
int3
cld
mov
jle
cmp
loope
sub
shl
cmp
fldcw
sbb
sbb
sbb
shl
sahf
sub
xor
(bad)
pop
rcl
rol
out
iret
xchg
inc
jbe
clc
or
mov
into
inc
fwait
or
and
(bad)
and
std
and
call
pop
sub
inc
add
cs
mul
mov
cld
or
xor
add
cmp
push
or
add
and
mov
enter
add
adc
add
lfs
out
pop
mov
ins
lahf
cmp
enter
dec
lea
adc
push
jl
mov
inc
add
add
mov
inc
push
mov
out
push
cmp
mov
lock
sbb
push
add
mov
mov
jmp
push
add
pop
out
mov
or
hlt
push
cmp
dec
pop
cmp
cmp
sbb
ss
sbb
mov
push
or
je
inc
lods
test
push
jne
das
test
(bad)
(bad)
jmp
and
push
movs
pop
xor
push
inc
add
(bad)
jge
ror
pop
cld
sub
push
inc
ds
rol
jae
push
mov
push
ss
push
(bad)
enter
out
bound
push
jae
push
fmul
fdiv
icebp
push
popa
mov
mov
mov
xchg
cmp
jne
mov
enter
clc
mov
xchg
int
out
ds
cmc
cmp
and
push
test
cld
mov
push
arpl
int3
lock
mov
xor
pop
xchg
call
and
push
jg
cmp
pop
sbb
mov
outs
push
fs
bound
mov
mov
push
mov
or
(bad)
aam
or
mov
or
push
cli
mov
dec
outs
add
dec
sub
jb
fnstenv
mov
adc
pop
mov
pop
(bad)
loopne
xor
(bad)
dec
inc
sub
test
pop
out
popa
sub
ret
jae
test
adc
push
popf
lock
mov
inc
movs
dec
lds
adc
or
pop
ins
rol
popf
cld
jae
jmp
in
push
lock
clc
(bad)
cmp
fwait
test
mov
sub
pop
or
jne
xchg
inc
jne
fdiv
and
mov
inc
iret
loop
cdq
rol
in
pop
cmp
adc
int3
pop
jo
enter
xor
aas
xor
push
push
cmp
je
jmp
lahf
xchg
inc
(bad)
xor
inc
xor
std
fwait
xchg
das
and
add
mov
add
push
pop
or
or
lds
sets
test
and
inc
push
mov
sbb
mov
or
jb
call
ds
mov
adc
setae
cmp
or
test
sbb
les
push
mov
push
jge
xor
mov
test
xlat
cmp
ret
push
movs
xor
(bad)
(bad)
out
imul
lea
jnp
bound
adc
cmps
dec
sar
sbb
les
enter
inc
hlt
es
push
icebp
es
mov
mul
arpl
fnstcw
pop
jmp
cwde
nop
ds
sbb
cmp
pushf
mov
movs
nop
add
mov
xchg
js
sahf
and
scas
mov
sub
and
push
pop
jns
mov
add
jmp
ins
dec
dec
pop
or
shl
mov
xor
pop
or
dec
jl
push
test
lock
jbe
lock
adc
xor
push
push
sub
and
bound
cmp
push
enter
sahf
sub
imul
push
inc
sahf
ins
scas
mov
push
imul
mov
je
xor
ins
jns
clc
lds
sub
and
add
sbb
stc
mov
or
mov
ret
cmp
pop
mov
fimul
(bad)
(bad)
and
xchg
out
and
mov
or
adc
xor
jb
adc
mov
inc
dec
sub
mov
jno
stos
mov
or
idiv
add
mov
mov
add
adc
mov
jmp
xchg
cmp
(bad)
mov
mov
inc
addr16
out
pop
fdiv
data16
adc
push
fcom
add
dec
fnstsw
push
or
pop
test
mov
pushf
std
adc
pop
or
sub
adc
(bad)
fild
jns
dec
or
inc
test
jne
mov
jmp
mov
dec
or
xchg
or
adc
adc
push
adc
mov
jge
adc
ins
push
div
leave
sbb
aam
js
cmps
sbb
xlat
or
dec
sub
cs
pop
pop
mov
sub
(bad)
and
xor
hlt
mov
fld
add
jle
mov
cmc
imul
ficom
cmc
add
ins
inc
mov
fwait
neg
std
sbb
jle
mov
mov
js
js
mov
and
add
(bad)
aas
cmp
mov
sub
int3
sub
jb
je
das
jmp
add
pop
jne
cmp
xchg
das
dec
hlt
dec
push
fs
hlt
jl
sub
inc
push
adc
lods
mov
hlt
sbb
enter
fcomp
mov
cmp
(bad)
pop
mov
push
mov
dec
test
imul
adc
(bad)
jmp
mov
mov
sub
jb
inc
mov
mov
call
stos
dec
dec
jne
add
cmp
jge
sub
xchg
inc
jne
icebp
ret
jecxz
ins
jmp
mov
setb
and
add
ins
mov
imul
mov
out
or
in
fild
movzx
fild
or
mov
sub
aam
lods
cwde
mov
jmp
lods
dec
ins
pusha
cmp
jecxz
mov
sub
fs
(bad)
outs
adc
leave
push
sbb
pop
mov
pop
(bad)
sti
cmp
pop
setne
mov
add
mov
mov
out
mov
inc
cmp
adc
sub
pop
sub
push
rol
pop
fistp
adc
cmp
xchg
add
pop
das
ss
jmp
jmp
rol
dec
idiv
push
adc
shl
sub
sbb
loop
fwait
loop
stc
push
pop
mov
rcl
ficomp
dec
cs
test
rol
and
fidiv
mov
in
sahf
push
aam
mov
or
inc
das
mov
in
push
sbb
jg
in
or
nop
mov
push
or
and
ja
and
sbb
mov
cmp
fsubr
pop
and
mov
and
pop
repnz
aam
fdivr
jae
sbb
aas
or
sub
sar
jl
iret
adc
int3
mov
movs
dec
mov
and
xor
popa
push
push
mov
outs
nop
ins
dec
aaa
push
sub
les
les
popa
rol
pusha
enter
mov
fcomp
add
push
mov
pop
and
inc
sbb
xor
arpl
mov
test
sar
dec
lahf
push
ins
das
fs
mov
les
and
fild
popa
ins
or
fs
test
or
loop
xchg
std
and
push
dec
add
push
pop
mov
cmp
or
jae
das
outs
xor
mov
push
xor
and
add
add
cmp
es
dec
push
mov
and
stos
pop
mov
sbb
pop
mov
ficomp
pop
call
imul
push
jo
arpl
add
gs
js
fdiv
or
mov
je
call
movs
push
pop
pusha
imul
mov
cmps
imul
xlat
mov
punpckhbw
je
je
sar
cmp
pop
inc
sub
xor
in
and
or
call
mov
adc
paddb
pop
push
call
lock
hlt
fmul
imul
scas
imul
jmp
xlat
dec
xchg
mov
pushf
push
jmp
cwde
pop
mov
or
push
imul
sbb
or
or
mov
addr16
data16
js
je
daa
fwait
mov
push
jo
mov
push
imul
push
imul
mov
cmp
push
sbb
mov
movs
sbb
dec
mov
dec
ins
inc
sub
int
xor
pop
cmp
inc
call
fadd
inc
call
daa
fwait
sub
mov
ins
dec
sbb
in
cmp
mov
adc
or
in
xchg
js
add
leave
push
mov
leave
xchg
(bad)
dec
xchg
and
cwde
rcl
lock
push
cmps
mov
cld
mov
sbb
pop
add
and
pop
adc
push
in
mov
add
adc
xchg
pop
sti
stos
push
xor
adc
mov
and
pop
push
in
sbb
and
xor
xor
fld
mov
and
dec
mov
movs
xchg
inc
dec
xor
push
ret
fidiv
in
xor
pop
leave
and
push
xchg
xchg
arpl
cmp
mov
and
push
or
adc
inc
loope
sbb
rol
fs
fnsave
outs
lock
ins
push
or
xor
push
clc
pop
dec
dec
and
jle
push
cmp
pop
pop
inc
sbb
and
pop
mov
std
mov
leave
je
inc
mov
and
aaa
push
adc
add
and
mov
outs
mov
popf
or
and
or
sbb
push
mov
inc
idiv
inc
aaa
dec
in
(bad)
push
fsubr
and
stc
scas
xor
test
retf
or
cmp
test
cmp
(bad)
xlat
jecxz
xlat
ds
(bad)
cmp
out
and
mov
jl
clc
ja
jo
jns
pop
jnp
xchg
cmovnp
sbb
call
shl
add
aad
xor
push
sbb
sub
xchg
inc
scas
mov
ss
mov
or
and
shld
mov
mov
je
adc
imul
and
and
and
and
or
in
call
pop
sti
out
inc
hlt
loopne
jmp
out
repnz
repnz
and
sbb
repz
repnz
out
loop
imul
sti
jmp
imul
dec
loope
loopne
add
push
pop
sti
mov
loopne
out
icebp
cld
and
out
cmc
lock
les
mov
gs
sti
push
add
in
in
in
repz
and
loopne
jmp
mov
push
js
jbe
outs
scas
repz
out
repz
sub
and
mov
sub
push
es
mov
and
pop
add
mov
and
out
jecxz
in
in
loopne
inc
popa
dec
loopne
out
out
in
shl
call
lods
cmp
mov
inc
mov
jbe
icebp
adc
cs
hlt
cli
push
and
(bad)
mov
in
add
and
cmp
mov
and
adc
test
mov
movs
lods
mov
fisub
(bad)
retf
retf
mov
add
cmp
jbe
cmp
push
lock
jecxz
jge
mov
mov
dec
lea
jp
mov
mov
inc
(bad)
outs
fadd
adc
cmp
bound
ds
pop
pop
cmp
fmul
ret
pop
fs
hlt
push
pop
mov
lods
add
outs
pop
cmp
sub
cs
stos
xchg
mov
ret
xchg
push
or
retf
mov
inc
dec
call
push
dec
outs
outs
pop
push
jb
push
mov
rcl
or
jb
fs
(bad)
stos
jmp
mov
dec
push
cmp
or
cs
inc
sub
pop
mov
jl
(bad)
std
push
imul
ret
out
mov
retf
mov
mov
push
add
xchg
mov
push
xchg
and
or
push
rol
inc
lods
jle
test
push
or
je
lods
aaa
mov
mov
(bad)
adc
adc
in
lahf
inc
jecxz
add
mov
in
mov
pop
sbb
jb
sbb
push
bound
xchg
outs
sbb
ret
(bad)
in
or
push
je
(bad)
pop
data16
outs
ret
add
clc
cmp
sbb
dec
mov
push
daa
addr16
jbe
mov
mov
in
push
in
push
jb
jg
push
push
and
pushf
es
or
xchg
push
push
add
rol
inc
inc
sub
mov
dec
outs
popa
fs
imul
jb
inc
pop
push
push
jb
cli
cmp
sub
push
add
fistp
pop
or
add
dec
rcr
xchg
enter
jge
add
xchg
adc
mov
add
push
push
or
fdiv
stos
in
test
dec
push
push
mov
in
inc
adc
mov
and
fcmovb
and
push
hlt
sbb
loopne
fsubr
test
mov
mov
push
or
test
jo
and
add
xor
nop
jno
push
sub
jo
inc
pop
push
mov
frndint
repz
ss
fwait
in
and
cld
repz
sub
push
in
sbb
mov
and
pop
sub
sbb
adc
sar
mov
inc
mov
inc
inc
clc
dec
pop
push
inc
stos
leave
iret
add
outs
dec
adc
ret
add
bound
sub
jl
push
pop
pop
ret
mov
and
cs
pop
outs
pop
jecxz
adc
retfw
push
xor
mov
xchg
rcl
cli
sbb
ds
cmp
jg
lds
mov
adc
popa
mov
ret
sar
ins
fwait
jge
push
push
sub
xchg
or
xchg
adc
inc
jge
clc
pop
push
dec
and
mov
cmp
xchg
lea
sbb
dec
sub
fadd
ins
daa
dec
cmovns
je
mov
dec
mov
pop
les
fnstenv
data16
dec
dec
add
in
cmps
imul
sub
xor
dec
push
cmp
pop
add
xor
xchg
aam
mov
mov
aam
push
mov
mov
fdiv
aas
mov
cmp
je
lods
cmp
repnz
test
inc
add
pop
or
mov
pop
or
xchg
adc
jle
jns
xchg
sbb
loopne
adc
or
or
cmp
rol
cmp
ins
dec
sbb
loopne
inc
or
or
inc
mov
xor
(bad)
aas
clc
mov
in
outs
mov
test
fst
xchg
and
cmp
pop
push
add
in
pop
rcr
mov
aam
enter
add
xchg
inc
and
in
push
enter
mov
mov
xchg
mov
xchg
push
push
lods
stos
cmp
pop
push
cmc
int3
shl
mov
aad
mov
inc
jle
jb
enter
mov
sbb
mov
jmp
inc
(bad)
les
jb
adc
out
mov
push
cmp
fwait
mov
adc
push
test
mov
jo
movs
mov
ins
and
int3
mov
and
imul
nop
and
sbb
gs
push
inc
xor
add
movs
dec
imul
mov
sbb
jb
inc
jmp
jae
outs
outs
je
cwde
sub
mov
sub
push
inc
push
jmp
in
out
in
jbe
data16
add
dec
imul
cmp
pop
push
bound
imul
jne
sbb
lds
in
pop
dec
bound
ins
push
pop
mov
pop
push
dec
outs
jo
outs
call
cmp
test
jo
arpl
outs
gs
dec
sbb
ins
rcr
scas
cmc
pushf
sti
xor
dec
pushf
mov
ins
jbe
push
dec
or
out
xchg
mov
push
mov
xchg
scas
push
mov
pusha
comiss
push
inc
pop
pop
dec
test
inc
mov
cwde
shr
pop
mov
addr16
adc
jbe
enter
addr16
addr16
mov
xor
add
stc
leave
mov
xor
mov
add
int
jbe
pop
adc
adc
(bad)
(bad)
dec
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
das
push
push
push
(bad)
(bad)
jge
sub
mov
popa
je
xor
push
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
dec
cmc
mov
add
mov
in
or
pop
jnp
push
push
pop
rcl
imul
cld
shl
adc
and
shl
dec
push
xor
shl
fs
je
shl
pushf
movs
dec
shl
int3
aam
dec
shl
in
hlt
cld
fsub
fld
aaa
add
add
add
pop
out
gs
pushf
sbb
nop
jo
jl
aam
nop
xchg
sub
cmp
dec
push
jb
push
pop
add
test
inc
enter
pop
mov
pusha
push
je
rol
cmps
fild
mov
rol
lock
shl
adc
sub
and
jg
xor
pushf
test
adc
mov
movs
push
or
mov
or
xchg
adc
test
sbb
add
push
mov
or
out
pop
mov
cmp
and
xor
push
jecxz
or
jl
pop
pusha
xor
cmp
mov
addr16
aaa
cld
jbe
mov
sbb
mov
xor
or
sbb
arpl
jecxz
pushf
lods
dec
inc
mov
test
aam
les
sub
ss
and
iret
movs
scas
pop
(bad)
dec
into
ins
mov
fcom
mov
rcr
nop
xchg
inc
sub
push
add
mov
or
loopne
mov
push
adc
sub
add
add
fs
sbb
xor
or
or
push
add
add
xor
push
pop
or
add
sub
dec
adc
dec
sbb
dec
push
cmp
icebp
add
psllq
jl
add
add
adc
push
pop
mov
das
inc
jge
int
mov
push
push
icebp
add
jmp
popa
ins
and
jae
and
iret
jne
(bad)
ja
shl
push
imul
aaa
xchg
pop
jo
add
das
add
jmp
cmp
adc
add
sbb
mov
rcr
mov
adc
and
add
dec
mov
pop
or
add
add
sub
mov
adc
add
je
inc
mov
int3
shl
or
dec
inc
inc
leave
jb
pop
mov
nop
jmp
daa
and
cld
pusha
inc
inc
push
inc
sbb
push
daa
mov
fcomp
test
inc
push
push
jbe
pop
sti
cmps
fs
mov
shr
fs
je
repz
sub
push
shl
inc
jb
xchg
cmps
sbb
ins
outs
arpl
shl
push
sahf
or
ja
push
jae
cmp
retf
push
jbe
daa
or
enter
daa
add
dec
retf
mov
xchg
out
test
mov
sub
je
lods
push
mov
dec
mov
push
lods
in
cmp
stos
push
jg
ror
shl
loopne
cmc
inc
dec
inc
push
push
fadd
stos
dec
pusha
push
(bad)
fadd
in
jb
pop
aam
jns
(bad)
push
enter
int3
ror
cmp
sbb
(bad)
rol
mov
mov
(bad)
(bad)
jmp
(bad)
(bad)
call
enter
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
call
adc
stos
dec
(bad)
(bad)
push
xchg
(bad)
fdivr
(bad)
call
leave
xchg
cld
(bad)
(bad)
mov
cld
(bad)
jmp
sahf
cld
cmps
sub
or
adc
(bad)
(bad)
jle
and
ja
(bad)
call
add
(bad)
call
repnz
add
(bad)
jmp
(bad)
dec
adc
(bad)
in
(bad)
jmp
std
(bad)
inc
cld
(bad)
jmp
(bad)
call
repnz
ds
(bad)
call
sti
dec
and
(bad)
push
call
enter
xlat
cld
(bad)
dec
pop
stc
xchg
(bad)
call
mov
(bad)
jmp
(bad)
inc
nop
pop
test
add
test
mov
adc
imul
or
cmp
mov
in
inc
xchg
pop
pop
idiv
(bad)
mov
and
jmp
fistp
inc
test
idiv
inc
xchg
jl
idiv
dec
in
sbb
mul
test
xchg
pop
sub
xchg
mov
sub
add
pop
push
pop
pop
fiadd
add
in
repnz
push
add
retf
call
and
(bad)
inc
(bad)
jmp
(bad)
dec
pmulhuw
sti
(bad)
dec
sti
(bad)
dec
daa
xchg
dec
cmp
(bad)
(bad)
dec
(bad)
and
cld
hlt
(bad)
dec
sub
inc
cwde
(bad)
(bad)
dec
leave
(bad)
jmp
repz
aad
leave
(bad)
dec
inc
jle
pop
ins
std
(bad)
call
(bad)
(bad)
aas
in
and
idiv
call
(bad)
jmp
push
and
push
adc
push
pop
pop
stc
and
in
(bad)
(bad)
in
(bad)
(bad)
push
daa
add
stc
(bad)
jmp
cld
(bad)
dec
or
jbe
add
les
out
(bad)
dec
inc
and
add
jmp
and
inc
lds
add
inc
std
(bad)
push
mov
retf
icebp
in
sub
sub
(bad)
(bad)
inc
dec
and
xchg
pop
and
jmp
add
add
adc
add
ret
add
idiv
(bad)
jp
mov
call
stc
inc
popa
push
pop
cmp
(bad)
dec
and
push
stc
(bad)
jmp
in
sbb
fmul
mov
mov
stc
push
repnz
add
add
(bad)
push
cmp
cmovl
push
rcl
mov
les
nop
movd
(bad)
(bad)
aas
idiv
dec
daa
in
add
(bad)
(bad)
cld
(bad)
(bad)
dec
daa
stc
push
add
(bad)
call
enter
mov
(bad)
jmp
add
call
outs
aas
xchg
sti
xor
jo
stc
pushf
xchg
sub
or
pop
fadd
add
ds
add
add
add
jl
jo
add
rcl
add
lahf
dec
fwait
and
add
pop
nop
jmp
and
add
stc
and
fdivr
(bad)
inc
add
xor
fmul
push
inc
and
sbb
call
add
pop
in
(bad)
call
out
(bad)
jmp
fimul
pop
in
and
adc
adc
pop
push
popf
out
and
xchg
pop
jmp
repnz
mov
add
aas
in
xor
(bad)
inc
adc
add
in
inc
test
nop
call
(bad)
inc
std
(bad)
push
stos
leave
xchg
std
(bad)
jmp
std
(bad)
push
and
mov
add
add
leave
add
add
daa
and
sbb
es
add
ds
out
(bad)
(bad)
jmp
(bad)
(bad)
push
inc
scas
inc
sub
(bad)
dec
inc
inc
icebp
mov
ret
or
retf
jb
out
repz
ror
xor
inc
xchg
mov
addr16
cld
stc
and
add
add
add
repnz
inc
std
adc
add
add
sub
(bad)
call
lahf
nop
or
or
test
out
and
or
(bad)
(bad)
dec
and
mov
jecxz
(bad)
push
and
inc
(bad)
(bad)
(bad)
mov
dec
jle
sbb
jmp
add
or
push
out
arpl
data16
(bad)
jmp
sub
adc
dec
cld
(bad)
dec
and
(bad)
push
push
add
or
and
nop
jmp
scas
sti
(bad)
(bad)
call
cdq
ins
gs
mov
dec
cmp
dec
dec
push
out
std
(bad)
inc
and
inc
and
or
jl
stc
adc
cld
(bad)
inc
add
sbb
xor
pop
test
dec
mov
add
out
or
jp
dec
sahf
or
(bad)
adc
syscall
dec
push
mov
fmul
mov
and
lea
mov
(bad)
rol
cwde
add
cmp
int3
mov
fsubr
sub
sbb
inc
cvtps2pi
pop
and
or
in
adc
add
adc
mov
add
or
adc
lahf
int
aad
or
jl
cmp
and
dec
sbb
mov
ins
jae
sub
outs
add
adc
add
aad
rol
add
cmp
push
outs
cmps
aad
push
add
enter
outs
xchg
cld
(bad)
(bad)
in
mov
inc
aad
add
and
mov
(bad)
(bad)
(bad)
jl
jle
enter
imul
push
push
stc
adc
(bad)
(bad)
jmp
ficom
out
push
pop
xor
push
push
retf
mov
aas
leave
push
xchg
inc
pop
sub
jo
push
adc
nop
mov
fld
call
mov
push
rol
sti
pop
add
push
add
push
mov
mov
mov
jle
inc
push
jmp
in
(bad)
call
cmovo
jmp
call
pop
in
add
loopne
(bad)
call
or
jmp
cmp
inc
(bad)
(bad)
(bad)
js
jl
inc
in
(bad)
(bad)
call
ror
sub
inc
(bad)
push
jne
test
call
pop
xchg
inc
jmp
xchg
cld
xchg
(bad)
jp
add
push
(bad)
(bad)
jmp
add
cvtdq2ps
add
sti
(bad)
(bad)
jmp
pop
pop
and
and
(bad)
(bad)
push
dec
nop
call
(bad)
(bad)
jmp
jp
add
mov
(bad)
call
add
add
(bad)
jmp
nop
das
call
(bad)
jle
das
stc
xor
jmp
stos
fdiv
dec
or
push
dec
push
xchg
cld
test
pop
movs
add
add
pop
leave
scas
in
(bad)
call
cld
inc
add
ins
inc
pop
and
(bad)
dec
sti
(bad)
dec
cmps
in
icebp
out
dec
(bad)
call
jnp
sti
rcl
rcr
push
adc
lock
fnstenv
adc
lods
in
call
add
mov
mov
inc
in
iret
(bad)
call
iret
(bad)
jmp
movs
call
clc
sti
jne
and
sub
inc
sub
sti
inc
dec
enter
div
xor
stc
and
repz
ss
aas
iret
dec
rcr
nop
pop
retf
add
jmp
add
ja
inc
das
add
call
push
push
dec
lods
push
test
jmp
mov
jle
dec
jne
fidivr
shl
cmps
(bad)
push
xor
pop
lock
adc
clc
sub
dec
fst
lock
call
and
inc
push
sbb
outs
or
cmp
in
leave
mov
stos
out
stos
pop
xchg
arpl
daa
add
add
xchg
cmc
in
call
sbb
loopne
xchg
out
retf
or
push
aad
test
pop
std
(bad)
dec
stc
and
std
(bad)
jmp
(bad)
inc
stc
xchg
cld
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
in
repnz
push
add
inc
add
add
in
cmp
mov
(bad)
(bad)
(bad)
fsub
(bad)
(bad)
fxch
(bad)
jmp
inc
cmp
add
add
test
or
retf
(bad)
inc
push
aad
es
inc
and
retf
(bad)
call
xor
cmp
and
in
test
nop
call
and
mov
jo
in
ja
inc
out
das
in
and
gs
cli
leave
repnz
jle
(bad)
jmp
leave
(bad)
inc
(bad)
jmp
cmp
pop
and
leave
(bad)
(bad)
cmp
or
(bad)
jmp
or
call
xchg
and
enter
push
jne
ins
dec
inc
and
cmp
and
add
dec
out
(bad)
inc
and
mov
mov
pop
inc
idiv
push
repnz
enter
adc
dec
enter
sub
jmp
sbb
stc
int
(bad)
push
xchg
xchg
imul
cmp
leave
and
daa
dec
and
push
sub
mov
test
ror
enter
(bad)
(bad)
(bad)
fmul
sub
mov
stc
mov
inc
push
out
(bad)
repnz
jmp
adc
inc
xor
(bad)
push
add
(bad)
call
(bad)
push
cld
repnz
(bad)
mov
push
xchg
stc
inc
shr
inc
mov
dec
push
dec
jo
jl
or
loopne
xor
(bad)
add
push
xchg
push
imul
in
mov
add
add
push
test
sahf
outs
(bad)
or
les
inc
jle
div
sbb
retf
xchg
imul
adc
outs
sub
push
mov
mov
jo
(bad)
cmp
(bad)
(bad)
dec
seto
(bad)
(bad)
jmp
jl
stos
jb
pop
xchg
out
(bad)
jmp
(bad)
jo
mov
xlat
adc
call
or
or
ins
mov
and
bound
daa
mov
daa
sbb
sub
push
adc
or
pop
popa
jg
jle
cmp
stos
jg
adc
push
xor
add
or
jne
push
inc
or
dec
lahf
mov
es
inc
(bad)
nop
add
inc
cld
ins
push
or
sar
xor
cdq
fistp
and
dec
sahf
mov
stos
leave
out
dec
shl
dec
rol
push
inc
inc
push
loopne
jo
adc
inc
push
push
out
rcl
xchg
nop
test
add
mov
push
push
in
sbb
call
adc
mov
lea
xchg
(bad)
jns
xchg
jl
jno
je
push
pop
push
pop
repnz
je
cs
inc
sub
js
in
inc
xor
loop
in
mov
mov
and
push
das
inc
push
push
mov
mov
pop
and
push
pop
jnp
pop
push
out
dec
push
pop
push
jb
and
mov
mov
mov
pop
or
mov
mov
sub
mov
out
push
push
sbb
pop
mov
sub
shl
and
mov
and
push
push
adc
push
stos
in
push
out
or
add
push
out
push
push
and
and
nop
inc
out
push
arpl
push
nop
mov
push
je
push
jb
push
inc
xchg
int3
push
pop
push
add
cmp
jl
inc
push
and
inc
fld
mov
sbb
xchg
sbb
pop
pop
or
nop
inc
push
or
add
inc
(bad)
stos
out
pop
aad
mov
pop
retf
dec
cmp
sub
pop
nop
mov
push
mov
out
or
sbb
test
push
pop
(bad)
push
or
xor
mov
mov
jns
sbb
pop
ss
mov
ins
pop
stos
inc
enter
mov
mov
enter
sub
shl
pop
add
aam
popf
sub
sbb
inc
stos
inc
ror
pop
push
inc
pop
add
add
inc
inc
and
or
add
out
(bad)
push
add
xchg
add
(bad)
sbb
add
popf
jle
push
in
inc
fs
call
in
inc
push
xor
in
inc
inc
das
loope
inc
xchg
jl
out
(bad)
dec
in
jmp
inc
and
(bad)
leave
(bad)
call
sub
adc
or
add
in
sbb
add
(bad)
(bad)
jmp
cdq
in
add
inc
cld
(bad)
jmp
sub
xchg
jl
gs
(bad)
(bad)
ds
jl
and
add
jle
add
stc
and
dec
pop
add
add
and
inc
(bad)
call
jl
xor
(bad)
push
sub
push
retf
add
push
fild
fs
ret
pop
dec
xlat
dec
add
sbb
dec
mov
aad
add
cmp
add
add
std
(bad)
push
pop
xor
adc
xor
int
jmp
rol
std
(bad)
jmp
clc
ds
stc
(bad)
jmp
inc
xchg
test
enter
xlat
(bad)
(bad)
jmp
(bad)
push
and
add
(bad)
call
(bad)
jmp
inc
jle
add
fstp
inc
jle
(bad)
jmp
fcos
(bad)
fdivr
(bad)
push
sub
and
xlat
(bad)
call
xlat
inc
push
dec
xchg
jl
jle
pop
(bad)
sti
(bad)
call
(bad)
(bad)
cmp
stc
cmp
add
add
enter
add
add
cmp
nop
mov
icebp
outs
or
ins
sbb
mov
sub
sub
add
push
enter
jns
(bad)
jmp
inc
xchg
(bad)
pop
sub
(bad)
(bad)
inc
add
cmc
(bad)
(bad)
jmp
cmp
(bad)
(bad)
jmp
inc
ret
xor
mov
ja
test
nop
pop
and
add
(bad)
(bad)
inc
and
jb
mov
and
(bad)
call
push
dec
jle
std
jecxz
push
sar
dec
daa
xchg
lahf
mov
(bad)
(bad)
mov
or
inc
imul
dec
(bad)
inc
leave
adc
call
xchg
dec
call
mov
dec
dec
jle
dec
push
(bad)
(bad)
jmp
adc
dec
add
jl
rcr
fadd
cmp
jb
stos
es
xor
lods
adc
pushf
retf
(bad)
ficom
mov
dec
and
dec
outs
sar
(bad)
jns
stc
sbb
icebp
(bad)
(bad)
fmul
xchg
sub
add
push
push
out
mov
and
cmp
(bad)
(bad)
and
and
loope
call
fdiv
and
loope
jmp
sub
add
and
fldcw
outs
test
in
pop
pop
push
jo
into
enter
(bad)
push
loopne
(bad)
mov
jmp
in
jle
out
(bad)
inc
int
popa
xchg
push
aaa
hlt
cmp
inc
xchg
jmp
add
add
int
hlt
cmp
daa
mov
or
add
inc
cmp
add
pusha
pmulhuw
pop
movs
add
add
out
leave
(bad)
jmp
iret
(bad)
push
and
add
adc
test
dec
stos
into
jae
pushf
push
ins
xchg
stc
mov
pusha
sbb
xchg
add
cmp
mov
jb
sub
pop
jl
cmp
or
int3
ins
lds
add
push
repnz
(bad)
push
(bad)
jmp
sbb
lea
and
add
sti
out
(bad)
(bad)
mov
add
jb
shl
pop
repnz
jle
cmp
(bad)
call
jb
jnp
push
sub
sar
push
pop
fistp
cld
or
in
(bad)
(bad)
jg
enter
(bad)
jmp
(bad)
(bad)
call
jle
(bad)
call
in
(bad)
jmp
fwait
test
jecxz
cmps
push
fstp
sub
enter
pop
push
pop
and
inc
xchg
stc
dec
mov
push
pop
pop
(bad)
inc
aas
stc
and
(bad)
inc
(bad)
dec
fs
dec
les
add
lahf
icebp
(bad)
inc
int
lahf
daa
pop
leave
or
mov
mov
cmp
dec
xlat
mov
or
push
xor
mov
(bad)
(bad)
call
sbb
cmp
jmp
inc
pop
ins
enter
mov
mov
or
mov
sbb
inc
push
in
(bad)
push
pop
push
adc
or
mov
mov
in
nop
mov
aam
std
(bad)
inc
xchg
aas
cmp
(bad)
call
(bad)
call
test
(bad)
(bad)
fcom
jmp
sub
inc
(bad)
cli
mov
sub
push
ja
push
pop
ss
(bad)
(bad)
(bad)
inc
daa
mov
mov
and
(bad)
(bad)
(bad)
cmp
ss
ins
inc
call
add
jbe
(bad)
dec
cmps
cmp
shl
leave
(bad)
sub
pop
push
fdivr
(bad)
jl
in
mov
(bad)
(bad)
cmp
(bad)
(bad)
mov
out
push
rol
sub
icebp
rol
pushf
pop
gs
gs
idiv
pop
or
cdq
sub
into
cwde
pop
scas
xor
enter
(bad)
inc
les
(bad)
ret
int3
mov
pop
jae
std
(bad)
(bad)
stc
enter
leave
stc
(bad)
call
std
(bad)
(bad)
cmp
out
clc
mov
push
stc
cmc
inc
ins
enter
je
mov
pop
jp
stos
into
fmul
retf
add
dec
out
enter
(bad)
call
and
push
shl
mov
mov
mov
pop
iret
xchg
mov
jbe
pop
add
cmp
int
sbb
cmp
dec
int3
xor
xor
pop
mov
jb
leave
hlt
nop
nop
nop
xor
not
in
rcl
or
mov
fwait
cmp
push
sbb
fs
xchg
mov
xchg
aam
inc
or
xor
(bad)
enter
xor
(bad)
jmp
and
and
or
dec
xchg
inc
fdivrp
rol
(bad)
jmp
(bad)
dec
and
repnz
(bad)
(bad)
dec
sar
jmp
in
dec
aam
repnz
int3
pop
pop
stos
(bad)
(bad)
(bad)
jl
stc
add
adc
add
jl
ds
add
(bad)
(bad)
push
stc
xchg
fsubp
(bad)
dec
push
sar
(bad)
std
sar
jmp
sar
(bad)
js
jg
jge
inc
aad
cld
hlt
call
cmp
test
cmp
xchg
je
fcmovbe
pop
fs
push
pop
aam
pop
jb
inc
pushf
and
inc
xchg
add
stc
mov
inc
fs
call
and
mov
dec
dec
jmp
or
outs
pop
mov
push
pop
in
sbb
cdq
mov
dec
xor
pop
cmp
sar
jmp
lahf
xchg
add
sar
dec
in
and
cmp
(bad)
inc
and
and
push
stc
movs
sub
fimul
and
mov
mov
sub
test
(bad)
mov
pop
in
xchg
(bad)
push
stc
and
fdivrp
jmp
dec
xor
call
pop
push
pop
xchg
jmp
jmp
mov
in
test
call
jmp
sahf
cld
xchg
rol
loop
(bad)
dec
out
push
cmc
jl
shl
mov
das
and
(bad)
and
push
gs
lahf
in
fdivr
(bad)
fs
fucomi
(bad)
jmp
mov
mov
in
fldenv
sub
push
int3
mov
in
clc
call
call
daa
xor
and
enter
push
or
repz
push
inc
pop
mov
nop
les
loop
les
sub
es
in
cmp
repz
sbb
xor
cmp
movs
cmp
mov
jmp
inc
mov
mov
push
enter
jmp
fmulp
mov
retf
pop
mov
mov
sbb
and
aaa
add
(bad)
movs
(bad)
push
jno
(bad)
jmp
in
int
sub
jmp
rol
clc
fwait
scas
or
lahf
cwde
mov
jbe
gs
clc
mov
dec
lock
enter
mov
in
push
movs
mov
xor
movs
enter
je
adc
sbb
or
fsub
loopne
or
jo
gs
inc
mov
add
lods
mov
test
dec
pop
push
dec
idiv
sbb
dec
es
mov
and
cmp
mov
in
in
mov
pop
dec
call
fs
inc
xchg
pop
xor
mov
cdq
in
in
sbb
pushf
in
add
in
lock
xchg
dec
and
or
and
leave
enter
movs
or
test
xor
imul
cwde
stc
cld
fsubr
dec
cld
add
repz
in
minps
adc
add
mov
mov
push
test
sbb
hlt
mov
mov
sbb
sbb
mov
pop
or
test
enter
repnz
aam
or
and
sahf
movs
mov
rcr
or
or
pushf
jno
cmp
repz
xchg
pop
mov
cmp
xrelease
aas
shl
xor
mov
sub
jo
scas
(bad)
call
mov
push
cmps
fucomi
inc
or
adc
push
pmuludq
xchg
pusha
fwait
int
call
repnz
cli
div
aad
xor
xchg
lods
leave
adc
mov
das
cmp
and
jbe
pushf
mov
aaa
mov
pop
and
rdpmc
push
stos
es
ins
adc
das
push
cmc
cmc
repz
test
adc
mov
cmps
lods
and
inc
sbb
push
push
sbb
xlat
pop
xor
test
gs
and
outs
jae
push
repnz
in
aaa
and
lock
jmp
dec
pusha
mov
fcmovnu
mov
setp
pop
loop
mov
push
ret
call
push
loope
in
icebp
jmp
imul
xor
fstp
call
aaa
ret
iret
inc
in
jmp
out
out
outs
dec
call
fucomi
in
sbb
inc
jecxz
push
and
push
fsubr
fs
out
jecxz
xor
or
imul
mov
pop
fidivr
dec
and
pop
cmp
push
jb
pop
or
call
jb
jne
ins
cmps
and
inc
jecxz
repz
xchg
test
pop
or
fst
mov
or
lea
in
pop
repz
fcom
rol
jecxz
add
push
ja
mov
sub
sub
jne
or
push
pusha
sti
adc
push
clc
mov
inc
push
or
add
mov
mov
push
(bad)
adc
xor
sbb
fwait
adc
pop
adc
call
or
push
jmp
test
es
push
xchg
push
mov
sbb
jp
ret
mov
inc
inc
xchg
inc
sub
pop
mov
ins
mov
jnp
and
mov
fisttp
push
cmp
or
test
xlat
inc
jb
adc
sbb
jg
or
fwait
in
repnz
push
(bad)
(bad)
cmp
xchg
add
inc
scas
mov
cmp
push
pop
hlt
mov
and
adc
(bad)
call
adc
inc
jo
add
add
pop
pop
repnz
pop
push
scas
(bad)
push
cmp
xor
add
adc
pop
push
jge
adc
sbb
adc
dec
adc
call
cmp
in
mov
fsubr
push
mov
jge
push
loope
fimul
pushf
mov
data16
add
rcr
test
in
sbb
inc
dec
push
pop
inc
nop
fs
dec
inc
dec
dec
inc
mov
push
add
xchg
mov
test
xchg
shl
stos
shl
add
push
cmp
xchg
(bad)
or
mov
mov
push
push
outs
xchg
pop
aam
mov
push
push
xchg
add
fwait
inc
lock
mov
bound
or
sbb
dec
jnp
mov
fidiv
fsubr
paddsb
mov
sar
pushf
dec
push
jmp
adc
adc
or
pushw
mov
je
ficom
sub
out
mov
jnp
in
fld
cmps
clc
test
daa
imul
xchg
sub
outs
nop
cli
(bad)
test
mov
mov
fsub
ds
ja
mov
mov
inc
adc
dec
add
test
sar
xor
mov
mov
add
call
mov
ja
push
rcr
cld
call
repz
call
call
int3
in
in
rcl
inc
or
stos
jmp
dec
outs
leave
je
push
mov
or
stc
mov
mov
mov
sbb
mov
add
cmp
sub
test
ja
push
fdivr
mov
orps
je
jecxz
shl
sti
sbb
mov
mov
mov
stc
stc
xchg
jbe
mov
fs
sar
lds
movs
(bad)
sub
retf
xor
stos
jnp
mov
in
mov
out
fs
xlat
adc
or
add
outs
mov
repz
mov
rol
das
pop
out
add
je
or
sub
ja
jo
imul
add
adc
movs
test
push
outs
inc
cmps
mov
jns
pop
or
and
js
fsub
das
das
and
jbe
aad
test
aam
ja
popa
aas
adc
js
sbb
xchg
mov
les
xchg
(bad)
cld
scas
xchg
push
les
hlt
push
ds
cld
adc
call
adc
add
es
mov
add
in
call
dec
dec
dec
xchg
mov
stos
xor
cmp
xor
idiv
mov
xchg
test
jb
call
sub
sbb
mov
sti
test
xor
mov
iret
test
lds
jns
inc
adc
or
lods
test
push
xchg
push
add
and
(bad)
scas
in
and
sbb
nop
out
pop
js
data16
jae
xor
sbb
sub
popa
add
xchg
adc
ins
and
pop
(bad)
bound
shl
inc
lock
mov
cmps
or
push
mov
call
inc
in
or
lods
pop
mov
ret
mov
and
les
sub
lea
mov
push
add
mov
je
pop
hlt
test
cmp
ss
xchg
sbb
mov
sbb
loope
mov
mov
sbb
lea
xchg
mov
push
mov
lods
cmp
jl
call
data16
inc
call
adc
sahf
inc
adc
jl
sbb
sahf
inc
sbb
loopne
and
and
and
pop
or
mov
sahf
lahf
cmps
sub
mov
shl
test
or
ds
cli
cli
pop
mov
hlt
outs
(bad)
and
call
rep
mov
mov
sub
fsubr
adc
and
sub
enter
inc
adc
pop
lea
loope
shl
xor
addr16
push
pop
lock
test
jg
int
sahf
pop
call
xchg
nop
xchg
out
sub
(bad)
jmp
imul
or
stos
pop
lods
in
sub
sub
js
mov
ja
jg
(bad)
ins
or
mul
mov
arpl
inc
pop
push
push
aad
adc
mov
xchg
rcl
out
mov
test
ins
push
daa
stc
fidiv
ins
popa
push
add
outs
jo
sub
jnp
xor
imul
jbe
je
add
aas
and
and
das
scas
sub
add
movs
add
test
or
sub
or
out
test
add
aam
pusha
test
jmp
add
into
mov
pop
jnp
dec
mov
mov
test
inc
push
jmp
add
and
xor
inc
call
fs
je
call
pushf
cmps
imul
imul
mov
sbb
push
xchg
xor
pop
inc
dec
push
jb
xor
push
xor
leave
dec
pop
cld
mov
das
inc
mov
inc
sbb
pop
push
ins
pop
enter
mov
cmps
test
mov
ins
sub
fs
call
cmps
pop
js
or
scas
pop
fwait
inc
cmp
push
xchg
jl
or
mov
fnstenv
aaa
iret
imul
outs
adc
fstp
sbb
pushf
adc
mov
push
out
les
pop
push
ret
les
adc
inc
push
jecxz
stos
jmp
xor
xchg
fdivr
dec
mov
xor
cmps
mov
jnp
dec
aaa
mov
aaa
hlt
pop
stos
push
(bad)
mov
push
and
jmp
adc
in
arpl
inc
mov
jl
adc
and
inc
push
dec
mul
pushf
xor
repz
mov
aam
mov
jmp
test
push
add
ret
rcl
enter
cmp
ret
dec
xchg
inc
add
pop
xor
movs
sbb
(bad)
enter
clc
push
enter
dec
shl
jb
cmps
imul
shl
cmp
shl
mov
xor
fsubr
cld
or
imul
out
push
cmps
ins
stos
adc
imul
jae
and
or
add
nop
scas
imul
cmps
imul
dec
mov
push
(bad)
and
inc
push
shl
sahf
mov
shl
adc
frstor
cmp
(bad)
mov
daa
xchg
call
xor
jmp
fldenv
pusha
pop
mov
inc
or
gs
cmps
push
or
dec
imul
cld
jbe
pusha
push
push
fstp
add
xchg
pop
dec
outs
adc
imul
movs
push
add
xor
mov
lods
mov
sbb
push
ins
jae
or
inc
jne
daa
outs
fdiv
fistp
mov
push
imul
dec
jne
outs
ret
pop
mov
inc
jns
inc
or
and
add
sbb
outs
inc
inc
lods
aam
aaa
or
or
and
inc
pusha
ss
imul
add
pop
mov
mov
(bad)
inc
adc
loop
push
jp
dec
xor
add
ret
stos
xor
push
adc
ss
pop
das
fsub
sub
mov
add
inc
xor
mov
loope
sub
mov
mov
pop
shr
xchg
jp
sub
ja
pushf
push
aaa
and
fs
sar
mov
ins
push
ja
or
pop
xchg
pop
and
add
add
sub
jb
cmp
bound
fs
jns
addr16
fistp
and
addr16
outs
add
jg
mov
xchg
or
jbe
jo
inc
push
gs
jne
cmp
pop
jns
mov
int
not
dec
push
outs
pop
adc
test
mov
adc
outs
mov
je
int3
xchg
div
js
xchg
ror
bound
dec
inc
call
push
outs
or
test
scas
or
inc
xchg
pop
jne
jbe
int3
sub
dec
sub
add
cmp
je
gs
mov
push
adc
sahf
jnp
mov
daa
outs
test
sub
mov
imul
adc
or
push
jae
xor
push
and
pushw
add
dec
xchg
sub
xor
xchg
icebp
push
adc
inc
push
push
adc
adc
into
faddp
rol
or
push
jmp
xchg
ins
inc
movs
popa
test
dec
adc
lds
shl
xchg
pusha
inc
inc
enter
push
popa
(bad)
gs
push
bound
push
inc
dec
dec
xor
add
or
ret
adc
mov
and
cli
or
imul
push
pop
lds
mov
hlt
je
push
ret
ret
sbb
outs
addr16
cmp
das
dec
mov
or
fisttp
inc
ret
push
jmp
ja
nop
push
hlt
adc
(bad)
(bad)
mov
sub
cmp
cmp
inc
xor
xor
xor
(bad)
(bad)
call
xor
jb
jp
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
fidiv
loop
jmp
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
(bad)
(bad)
(bad)
call
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
loop
(bad)
(bad)
(bad)
jmp
xor
sbb
jg
fnstenv
sub
cmp
pop
aaa
pop
cmp
mov
aam
fistp
jmp
(bad)
cld
cmp
cmp
cmp
cmp
add
push
cmp
cmp
push
aam
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
jbe
jl
test
mov
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
jmp
sar
aas
xor
aas
test
(bad)
aas
cwde
aas
lahf
aas
scas
aas
mov
xlat
aas
sbb
arpl
int3
push
or
fdivrp
mov
xor
xor
rcl
sbb
xlat
pop
xor
(bad)
(bad)
jmp
ins
xor
xor
xor
xor
dec
xor
push
xor
arpl
idiv
(bad)
(bad)
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
xor
xor
xor
adc
sbb
(bad)
push
mov
xchg
ss
mov
ss
mov
ss
aaa
mov
aaa
lock
push
(bad)
(bad)
(bad)
(bad)
cmp
pop
cmp
cmp
cmp
cmp
pusha
cmp
cmp
cmp
xchg
cmp
(bad)
cmp
hlt
cmp
(bad)
retf
pop
fdivr
xor
pop
xor
push
lods
(bad)
(bad)
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
mov
sbb
(bad)
xor
daa
aaa
dec
aaa
push
aaa
outs
aaa
mov
(bad)
(bad)
inc
aaa
int3
aaa
xlat
aaa
push
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
jge
xchg
lea
hlt
(bad)
sub
clc
(bad)
(bad)
push
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
(bad)
jmp
dec
cmp
outs
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
or
lock
xor
xor
xor
cwde
aaa
mov
aam
out
aaa
cmp
pop
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
(bad)
jmp
cs
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
sbb
cmp
cmp
cmp
cmp
cmp
cmp
jg
mov
(bad)
fbstp
cmp
ds
ds
(bad)
(bad)
jmp
jo
cmp
ds
ds
ds
ds
out
idiv
(bad)
ds
aas
push
aas
push
aas
(bad)
(bad)
(bad)
call
aas
es
cs
ss
ds
inc
aas
dec
aas
push
aas
pop
aas
data16
outs
aas
jbe
jle
xchg
mov
xchg
aas
clc
(bad)
mov
jne
aas
mov
aas
(bad)
aas
fidivr
out
out
aas
idiv
(bad)
call
fiadd
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
call
ins
xor
test
mov
xchg
xor
mov
mov
xor
xor
xor
xor
(bad)
(bad)
(bad)
in
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
(bad)
(bad)
jmp
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
(bad)
(bad)
(bad)
in
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
(bad)
(bad)
jmp
xor
xor
movs
xor
les
int3
xor
xor
mov
in
xor
xor
xor
xor
xor
xor
pop
xor
(bad)
inc
adc
pop
js
jl
xor
xor
xor
icebp
dec
xor
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
sar
test
add
xor
xor
xor
xor
xor
fcomip
jg
xor
xor
xor
xor
xor
fwait
movs
xor
xor
xor
xor
(bad)
(bad)
(bad)
fbld
lock
xor
xor
xor
xor
cmp
inc
xor
outs
je
xor
ins
popa
xchg
sub
movs
xor
dec
fwait
(bad)
push
xor
lock
add
jge
sar
(bad)
push
or
sbb
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
dec
aaa
xor
xchg
lods
xchg
mov
mov
(bad)
push
lock
ss
add
add
or
or
adc
adc
sbb
sub
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
hlt
(bad)
(bad)
push
pusha
aaa
fs
push
aaa
xor
aaa
test
lods
aaa
mov
mov
mov
(bad)
(bad)
(bad)
fild
aaa
fdiv
clc
aaa
add
add
or
or
adc
adc
sbb
sbb
and
cli
(bad)
(bad)
cmp
pop
cmp
cmp
cmp
cmp
out
test
mov
push
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sbb
(bad)
mov
and
cmp
jo
je
js
outs
loopne
(bad)
jl
cmp
cmp
cmp
cmp
cmp
cmp
pop
fdivr
fdivr
call
in
sbb
and
sub
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
aaa
lock
pusha
dec
jno
cmp
cmp
cmp
outs
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
jg
jge
cmp
cmp
test
lods
cmp
dec
jmp
lock
cmp
add
or
(bad)
cmp
cmp
cmp
cmp
cmp
icebp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
leave
(bad)
imul
scas
xor
xchg
jno
jne
jns
push
xor
xor
xor
xor
push
mov
xchg
in
adc
sbb
and
sub
xor
xchg
lds
loopne
loopne
cld
ss
call
cmp
jg
gs
(bad)
(bad)
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
hlt
push
cmp
fist
push
ds
cdq
add
cmp
push
clc
faddp
aam
ja
push
mov
outs
cli
outs
xchg
pop
sbb
xor
xor
xor
xor
xor
cmp
pop
add
xor
or
icebp
push
xor
xor
xor
xor
xor
fld
xor
(bad)
jmp
ja
xchg
xor
jecxz
ss
aaa
sub
cmp
cli
jmp
cld
mov
imul
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
lock
cmp
cmp
cmp
cmp
jmp
dec
out
in
dec
cld
fcomip
cmp
cmp
out
add
or
(bad)
cmp
cmp
outs
aaa
rol
mov
cmp
dec
xchg
pop
pop
jno
jp
mov
cmp
fucom
or
cmp
jo
mov
push
inc
sub
mov
cmp
test
fnstsw
repnz
ds
mov
cmps
les
(bad)
and
pop
aas
ins
aas
mov
xchg
aas
lods
aas
mov
push
xlat
aas
fninit
pop
cmp
xor
xor
xor
xor
jbe
jg
xchg
xor
xor
leave
push
(bad)
mov
xor
jbe
jle
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
std
pop
dec
xchg
xor
push
xor
pusha
jg
punpcklbw
xor
pushf
xor
mov
xor
cdq
xor
fwait
lock
(bad)
cld
movs
jmp
ja
add
or
adc
sbb
push
stos
test
pop
jg
pusha
lds
xor
xor
mov
cli
mov
test
mov
mov
xor
(bad)
jmp
jmp
add
or
push
adc
sbb
sub
ret
mov
(bad)
mov
xor
jo
je
jl
xor
push
int
mov
xor
mov
xor
sti
xor
xlat
cmp
inc
scas
outs
call
gs
ss
test
(bad)
ss
ss
jne
ss
mov
mov
sub
xor
ds
push
mov
(bad)
aaa
sbb
jmp
aaa
movs
mov
dec
fsubr
ins
movs
es
js
adc
hlt
cmp
cmp
pop
js
mov
fwait
sbb
cmp
ja
sar
call
ds
ds
push
mov
and
nop
repz
xor
xchg
mov
xlat
inc
inc
or
rol
pop
dec
cmp
lock
push
ficomp
xor
pop
push
stc
xor
ret
mov
xor
xor
xor
xor
xor
dec
les
adc
ror
add
clc
sub
xor
popa
xor
outs
xor
scas
xor
xor
sbb
xor
outs
ss
int
icebp
jae
xor
mov
bound
mov
rol
pop
add
add
or
pop
sub
xor
xor
arpl
dec
xor
gs
addr16
imul
adc
outs
jo
js
dec
xor
mov
inc
cwde
jnp
jge
jg
xor
adc
jae
xor
adc
shl
rcl
or
jge
and
inc
inc
lock
test
xor
or
or
fs
jnp
adc
sbb
sbb
and
pop
adc
sbb
fst
add
add
movs
stos
cmp
and
mov
or
push
test
cwde
das
xor
pop
repz
sub
call
shr
xor
std
movaps
(bad)
sbb
push
xor
xor
pop
rcr
pusha
pop
pop
pop
js
ins
mov
add
nop
pop
aad
imul
rcr
xchg
add
adc
lea
mov
add
or
jb
and
fdivr
dec
cs
fldenv
pop
movs
jl
in
xchg
retf
fsubr
adc
sub
movs
mov
mov
or
or
cmps
pop
adc
inc
or
sub
xor
add
sub
xchg
lock
cmp
inc
push
daa
scas
or
enter
inc
xchg
adc
and
cwde
xor
fsub
pop
and
mov
inc
xor
push
and
add
mov
mov
scas
xor
or
ins
inc
shl
enter
adc
popa
inc
jno
push
fwait
pop
fs
jno
mov
push
xchg
sbb
add
dec
fwait
sub
in
in
imul
add
or
call
(bad)
shl
add
sub
and
mov
cmp
nop
xchg
push
leave
adc
aaa
sbb
test
mov
inc
cs
pop
and
ret
and
adc
mov
and
nop
add
popa
push
sbb
inc
xor
inc
or
pop
in
in
and
and
mov
bound
inc
cs
setb
and
pop
and
sbb
cdq
popa
jb
enter
dec
adc
push
mov
ret
xlat
(bad)
(bad)
jmp
push
pushw
inc
add
jb
cmp
ja
mov
mov
mov
inc
add
test
mov
sub
jbe
mov
mov
mov
inc
xchg
(bad)
mov
add
(bad)
jnp
inc
jb
mov
xor
mov
add
xor
inc
xor
dec
add
dec
jl
and
leave
and
mov
(bad)
fist
scas
imul
and
and
sub
inc
push
sub
mov
movs
ficom
pop
sbb
ss
pop
pop
dec
sbb
sub
inc
scas
push
movs
in
add
adc
jns
test
ins
cmp
xchg
pop
aaa
push
dec
pop
nop
and
and
adc
nop
or
das
in
enter
add
nop
and
scas
dec
push
dec
arpl
mov
add
loop
push
sub
or
or
push
imul
mov
push
pushf
scas
pusha
inc
mov
inc
es
cmp
inc
scas
add
or
jns
inc
das
inc
push
inc
repnz
cmp
(bad)
call
mov
shl
mov
cmps
jne
xor
cmp
cmp
adc
add
iret
mov
pop
leave
adc
and
nop
add
test
and
call
and
(bad)
or
push
pop
ret
call
test
or
xchg
dec
out
leave
and
enter
mul
add
xor
sub
jns
call
inc
jb
shl
xchg
dec
xchg
or
mov
dec
retf
xchg
adc
and
cdq
or
and
pushf
inc
scas
in
push
(bad)
push
inc
push
mov
add
adc
add
leave
pop
nop
or
fs
sbb
sbb
inc
enter
adc
add
and
stos
mov
dec
push
retf
dec
shr
inc
jne
scas
add
adc
sub
inc
jb
and
jb
adc
push
movs
cdq
cmp
inc
dec
mov
nop
push
bnd
scas
dec
popf
nop
out
inc
xchg
mov
sbb
fstp
inc
mov
movs
mov
pop
jns
xchg
sub
sbb
xchg
pop
lds
inc
ret
mov
jl
pop
dec
into
pop
js
out
repnz
inc
out
adc
stc
or
add
and
and
add
dec
out
sub
adc
sub
xchg
inc
inc
add
daa
test
pop
inc
mov
inc
sahf
add
icebp
dec
clc
dec
bound
rcl
and
imul
mov
and
adc
mov
inc
js
adc
out
mov
push
fdiv
push
add
aam
aam
lods
xchg
sub
enter
xor
push
inc
xor
pop
enter
sti
mov
add
mov
leave
inc
xchg
push
add
push
sti
sub
pop
inc
push
add
adc
cwde
push
pop
and
sub
adc
inc
and
mov
cmp
push
push
dec
push
and
mov
mov
pop
pop
arpl
and
sti
cld
push
add
enter
push
in
and
xor
push
push
push
mov
xchg
push
lods
or
inc
sti
and
adc
add
pop
add
cdq
add
push
sti
pop
and
gs
add
mov
or
or
and
and
sti
adc
pop
and
adc
js
fs
sti
jo
or
ror
test
sbb
sub
add
push
sub
ss
sti
test
mov
test
loope
mov
fcom
(bad)
and
add
add
pop
pop
cmp
inc
and
pop
inc
and
inc
fst
hlt
add
adc
sti
inc
pop
fs
push
pop
pop
push
pop
add
push
lods
sti
push
mov
mov
fld
leave
das
adc
pop
repnz
(bad)
inc
or
mov
dec
mov
mov
pushf
and
leave
push
inc
sub
mov
xor
sub
in
and
outs
jne
add
clc
and
cs
and
ret
(bad)
mov
xor
push
xchg
fmul
inc
sbb
shl
push
or
aad
hlt
push
les
mov
es
test
push
das
stos
adc
cmc
int
add
cmp
fild
xchg
add
and
push
shl
or
dec
dec
retf
out
add
jecxz
jae
fisttp
es
stos
repz
adc
sti
cmp
xchg
or
sub
mov
icebp
fnstenv
and
mov
jnp
data16
inc
fs
add
aaa
enter
adc
retf
push
ret
dec
arpl
adc
pmulhuw
clc
stc
add
push
xchg
stc
test
jbe
in
nop
stc
jl
add
add
inc
enter
and
xor
sbb
dec
push
and
icebp
(bad)
pop
enter
rcr
and
add
repnz
addr16
jmp
or
dec
mov
mov
xchg
sub
faddp
xchg
and
cdq
xchg
sub
shl
shr
loop
xchg
inc
and
in
in
mov
enter
lods
iret
in
repnz
mov
mov
in
enter
sar
jb
sbb
add
into
pushf
nop
sub
leave
add
mov
and
loopne
loopne
xor
dec
xchg
adc
and
xor
pop
jns
out
into
mov
sbb
pop
xor
or
and
int
lods
push
mov
(bad)
sar
enter
inc
mov
ror
sbb
int
loopne
into
jmp
pop
leave
xchg
sbb
nop
out
repz
inc
or
xchg
cmp
fisub
repnz
out
dec
jb
leave
add
repnz
mov
rcl
movs
fnsave
int
mov
nop
in
push
add
popa
fsub
and
fild
pop
nop
int
mov
fsub
and
cmp
cdq
push
cwde
leave
and
enter
leave
out
enter
nop
inc
pop
enter
pop
xchg
or
or
mov
enter
fs
call
and
mov
pop
leave
add
push
nop
cmp
push
ins
jne
jb
dec
and
sbb
jp
add
dec
repz
pop
out
xchg
push
jg
in
ffree
scas
inc
cs
dec
outs
dec
mov
daa
jns
xor
xchg
push
mov
shl
loopne
mov
(bad)
push
add
add
adc
and
mov
in
push
jb
cs
xchg
cmp
das
pop
ret
mov
repz
add
sbb
xchg
push
cmp
inc
enter
(bad)
xchg
or
mov
enter
adc
das
jns
push
dec
ja
jns
inc
inc
sahf
cwde
enter
and
adc
push
and
sbb
or
sbb
or
ret
jecxz
inc
leave
add
mov
inc
dec
jge
popa
inc
shl
leave
test
enter
(bad)
shl
pop
inc
pop
int
ins
jg
enter
jg
scas
test
jns
iret
push
rcl
push
cmp
jns
iret
sar
shr
pop
test
sub
arpl
enter
out
mov
push
and
mov
inc
push
push
push
dec
push
nop
sub
int
fwait
mov
mov
ins
sub
movs
mov
or
sbb
cmp
std
mov
in
mov
out
adc
and
sub
mov
jbe
inc
cs
jo
popf
retf
adc
outs
jb
daa
adc
mov
jb
pop
jb
adc
fs
adc
jb
jb
xor
mov
jb
jb
and
sbb
leave
add
and
or
jo
and
lock
pop
jb
call
pop
jb
cwde
mov
pop
mov
test
and
push
jb
push
cld
inc
xchg
pop
jb
or
sub
dec
and
push
pop
push
call
cmp
push
mov
in
mov
repnz
push
and
mov
xchg
push
ret
mov
nop
mov
mov
mov
pop
cmp
mov
stos
mov
mov
sbb
mov
mov
pop
repnz
fisubr
xchg
mov
mov
mov
clc
adc
arpl
stos
mov
retf
dec
enter
daa
in
loopne
and
or
push
inc
or
mov
das
mov
loopne
lock
scas
in
cmp
out
out
lock
sub
push
fdivr
lock
in
in
xor
sbb
nop
sub
push
ret
pop
aam
inc
xor
jmp
loop
in
call
xchg
adc
sub
movaps
and
nop
mov
nop
and
aaa
pop
push
adc
dec
mov
call
mov
loope
jb
sub
push
shl
(bad)
aam
out
loope
and
push
mov
pop
loope
adc
sub
cmp
and
nop
or
loopne
in
or
dec
pop
adc
fimul
inc
add
daa
cmp
lea
xlat
cld
mov
pop
or
inc
ja
adc
push
out
lea
sbb
repnz
mov
outs
xor
test
pop
sar
rcr
xor
aas
jne
adc
mov
inc
cmp
jmp
xor
cmp
sahf
xchg
mov
sbb
retf
add
xor
pop
(bad)
(bad)
call
imul
mov
mov
(bad)
jmp
in
jge
jnp
and
xchg
or
pop
jbe
sahf
loopne
adc
xor
aas
add
cmp
in
data16
dec
jno
das
or
(bad)
ins
sar
sbb
mov
not
outs
sar
cmc
jge
add
sub
sub
jl
inc
sbb
loope
std
dec
rcl
cli
sbb
add
sar
sbb
cli
(bad)
jmp
or
or
dec
mov
fistp
ror
in
dec
and
fdiv
dec
jne
jl
mov
out
out
push
hlt
sub
sbb
pop
pop
sbb
cdq
cmp
push
or
mov
add
jge
leave
sub
pop
enter
(bad)
mov
and
adc
test
test
adc
fwait
aas
sub
adc
(bad)
fs
mov
sub
jo
add
ret
mov
pusha
adc
dec
sar
aad
inc
add
rol
and
adc
fisub
jge
fistp
lods
enter
sbb
add
retf
lock
add
in
call
pop
(bad)
call
mov
pop
push
jns
lods
rol
daa
xchg
fnstsw
or
push
adc
push
sub
pop
and
or
xchg
pop
adc
jmp
mov
lock
call
mov
push
ja
jne
mov
xchg
test
dec
mov
or
cs
nop
sub
xor
in
call
int
pop
nop
nop
arpl
mov
inc
pop
test
xor
(bad)
push
or
leave
inc
fcomp
es
jno
(bad)
fild
enter
mov
pop
bnd
lahf
mov
mov
pop
inc
adc
and
(bad)
cmp
jge
xor
inc
pop
les
lock
je
enter
xchg
(bad)
std
enter
in
pop
xchg
jb
lahf
add
idiv
push
jb
dec
push
mov
mov
call
xchg
js
std
and
les
call
lds
cwde
or
stc
jecxz
nop
and
repz
cmp
stos
cs
movs
fiadd
mov
pop
aaa
and
push
adc
les
sub
cvttps2pi
fwait
inc
push
bound
call
or
xchg
lods
lods
das
add
xchg
loop
out
and
or
loope
add
ret
add
int
sbb
cs
mov
call
gs
push
in
inc
cmp
lods
in
out
in
and
in
lock
add
ds
dec
leave
xchg
mov
and
bound
adc
jg
mov
loopne
jmp
adc
sbb
daa
push
cmp
fs
or
adc
cmp
push
or
mov
add
add
mov
xchg
inc
enter
xchg
cli
scas
movs
mov
and
push
xchg
jbe
inc
ss
mov
push
dec
sub
mov
add
mov
dec
pop
or
mov
xor
je
sub
in
aaa
aaa
daa
adc
mov
add
call
mov
mov
outs
fwait
lods
(bad)
test
push
sbb
repz
mov
je
iret
repz
mov
ds
repz
pushf
ins
out
sahf
out
cmp
push
sahf
out
sahf
dec
int3
add
pop
lahf
out
xor
cld
and
mov
or
pop
cmp
inc
adc
push
jne
adc
call
mov
add
jmp
std
adc
movs
or
mov
jnp
inc
inc
jne
and
test
iret
enter
sub
je
pop
enter
xor
add
stos
iret
enter
repnz
sub
pop
and
pop
xor
mov
rcr
fcom
pop
fs
jbe
push
stos
test
jae
jnp
call
mov
jp
push
fist
mov
add
adc
mov
mov
push
mov
xchg
jge
scas
lds
fcom
add
stos
jecxz
mov
ins
ss
out
add
je
enter
clc
test
push
fwait
xchg
xor
repnz
inc
out
inc
dec
ror
add
repnz
push
retf
sub
in
mov
lods
enter
test
repnz
test
add
(bad)
in
push
fnstenv
repnz
loope
mov
mov
jne
not
push
ss
adc
call
mov
aam
iret
push
pop
test
loop
or
ror
pop
cmc
fld
sub
mov
push
sbb
adc
call
test
out
out
les
mov
jmp
add
fisubr
add
jmp
push
test
adc
mov
in
and
mov
mov
(bad)
cdq
loopne
enter
pop
xchg
and
pushf
mul
inc
stos
pusha
xchg
aaa
(bad)
mov
cmps
addr16
jl
enter
cmp
cwde
mov
dec
add
in
test
js
mov
push
test
int3
sahf
aam
add
out
push
call
movs
test
sbb
gs
lea
mov
int3
sbb
(bad)
cs
test
lea
das
sub
ja
cdq
mov
stc
mov
or
das
out
ins
imul
mov
lds
and
ror
pop
ror
jo
test
push
fs
push
sbb
pushf
popf
ins
pop
test
mov
adc
xchg
xor
das
jnp
imul
push
dec
jge
fbstp
add
mov
pushf
in
jnp
add
es
pusha
push
mov
out
cmps
mov
push
pop
outs
retf
inc
pop
aas
inc
test
sub
iret
test
mov
enter
cs
sub
cmp
mov
nop
xchg
mov
std
dec
push
retf
sbb
cwde
xchg
jo
xor
shl
mov
push
shr
inc
data16
sub
xor
push
lea
frstor
or
mov
call
xor
aad
add
push
enter
mov
call
mov
mov
pusha
rcr
call
inc
sbb
adc
xchg
or
and
sti
sub
and
jo
jp
cmp
sub
jp
cmps
and
sub
adc
popa
rcr
sar
jmp
adc
dec
pop
repnz
out
adc
and
mov
adc
xor
sub
or
xor
and
adc
adc
pop
or
cmps
sub
and
loop
inc
ss
ins
mov
bound
jae
add
and
push
push
mov
and
imul
sub
mov
cmp
jo
mov
cmp
xor
push
adc
and
dec
xchg
or
inc
sbb
in
inc
mov
pop
sub
push
sub
inc
adc
xchg
jae
leave
mov
and
test
jbe
jp
dec
cmps
add
dec
fwait
inc
pop
inc
je
inc
jae
repnz
leave
mov
add
inc
add
fsub
lods
and
inc
gs
adc
jae
push
inc
dec
push
ss
dec
push
cld
cmp
enter
lods
add
mov
jo
rol
sub
cmp
enter
loopne
hlt
pop
outs
mov
fs
jl
mov
dec
mov
call
enter
add
mov
in
sub
adc
mov
xchg
xchg
(bad)
ret
jae
ja
sbb
loope
push
jg
push
out
dec
push
sub
or
sbb
leave
xchg
(bad)
jae
int3
push
add
sub
movs
aaa
mov
adc
push
pop
fs
push
aaa
mov
js
xor
dec
cmp
arpl
dec
call
jno
mov
sbb
aaa
cmps
push
das
fnstenv
sbb
xor
ja
imul
scas
cmp
push
inc
repz
push
ins
daa
pop
mov
inc
adc
jno
emms
mov
xchg
mov
mov
mov
ret
sar
shl
or
and
mov
xchg
and
mov
ret
enter
jb
ret
add
xor
rcl
sbb
dec
jmp
retf
and
retf
mov
retf
call
shl
add
cs
push
rol
xor
or
xchg
ss
dec
movs
mov
loopne
(bad)
xlat
pushf
ins
into
sti
or
lds
ds
add
xor
sbb
ins
inc
shl
leave
mov
in
push
add
dec
xor
shl
outs
sbb
mov
jb
adc
jae
sub
int
fnstsw
addps
add
scas
mov
mov
inc
add
sbb
push
push
leave
cmp
sub
pop
sbb
jge
and
xor
mov
or
test
rcl
dec
pusha
fisttp
dec
sahf
inc
sbb
sub
fs
push
push
mov
fimul
mov
xchg
push
and
sbb
test
add
xor
push
sub
pop
jb
enter
(bad)
(bad)
(bad)
push
out
xor
xor
xor
xor
fidiv
xor
adc
ja
shl
and
xor
push
aaa
(bad)
(bad)
dec
push
jb
scas
cmp
cmp
cmp
hlt
cmp
cmp
cmp
cmp
xor
inc
cmp
jmp
push
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
mov
cmp
cmp
outs
cmp
mov
cmp
cmp
cmp
(bad)
mov
push
enter
cmp
mov
adc
aas
sub
aas
xchg
nop
aas
xchg
and
aas
iret
aas
outs
mov
xor
jecxz
xor
xor
xor
xor
mov
sub
adc
sub
push
xor
cwde
xor
xor
xor
xor
xor
inc
xor
push
xor
xor
xchg
movs
xor
pop
(bad)
fidiv
lock
xor
cmp
fisttp
jno
xor
xor
xor
jnp
stc
stc
pop
xchg
xor
adc
call
scas
fnstsw
or
jns
jno
cmp
cmp
cmp
loope
cmp
cmp
lock
cmp
jmp
add
adc
xor
xchg
xor
ds
shr
in
xor
xor
xor
inc
xor
jae
lods
xor
(bad)
xor
inc
cld
outs
adc
cld
xor
xor
xor
xor
das
adc
or
test
xor
scas
std
xor
push
les
rep
inc
ins
adc
daa
add
dec
lea
mov
aaa
in
sbb
(bad)
mov
cmp
retf
cmp
inc
jmp
push
cmp
pop
cmp
push
jp
test
mov
mov
loope
cmp
cmp
cmp
cmp
or
cmp
(bad)
(bad)
mov
out
cmp
cmp
cmp
cmp
cmp
cmp
mov
sbb
cmp
gs
cmp
cmp
aas
push
aad
cmp
push
xor
push
adc
push
adc
leave
xor
xor
fdiv
push
xchg
js
xchg
lar
popf
sub
cmp
lds
inc
icebp
cmp
cmp
xor
inc
cmp
inc
idiv
ja
jle
mov
xchg
push
mov
jne
add
cmp
cmp
adc
inc
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
inc
fld
cmp
cmp
cmp
cmp
cmp
cld
fcomip
push
aaa
and
push
cmp
mov
push
pop
mov
cmp
packsswb
add
push
inc
ds
ds
(bad)
(bad)
inc
js
mov
xchg
ds
ds
sar
(bad)
(bad)
(bad)
(bad)
ds
jmp
aas
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
cld
(bad)
(bad)
(bad)
aas
bound
push
jb
jp
cmp
aas
xchg
aas
call
aas
mov
aas
in
aaa
retf
gs
xchg
push
sbb
add
xor
xchg
dec
shl
and
xor
dec
xchg
pop
xor
xor
clc
stos
xor
movs
and
xor
sub
retf
sbb
dec
fisttp
mov
(bad)
inc
jno
adc
cmp
inc
icebp
sub
fs
jl
adc
push
aad
leave
sbb
stos
mov
and
mov
js
xor
mov
mov
push
mov
mov
mov
fdiv
in
cld
aas
ss
sub
sub
sub
xor
xor
cmp
inc
lea
push
pop
ss
and
lea
mov
retf
and
fdiv
and
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
js
(bad)
jg
aaa
xor
aaa
mov
nop
aaa
xchg
aaa
cwde
aaa
pushf
aaa
mov
fdiv
test
jmp
(bad)
dec
add
adc
xor
cmp
cmp
inc
cmp
(bad)
jmp
dec
cmp
pop
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
lea
mov
pop
mov
shl
mov
movs
cmp
push
xchg
mov
(bad)
fdivr
cld
aaa
cmp
adc
adc
sbb
sbb
and
cmp
pop
fs
adc
mov
jge
mov
das
(bad)
call
cmp
enter
cmp
cmp
cmp
adc
sbb
ror
cmp
and
and
sub
sub
cmp
mov
dec
aaa
pop
mov
jg
cmp
cmp
cmp
xchg
loopne
aas
mov
add
and
sub
loop
inc
inc
adc
push
(bad)
dec
cmp
cmp
cmp
cmp
shl
xchg
dec
pop
cmp
push
or
iret
arpl
xor
xor
(bad)
dec
add
add
xor
xor
out
clc
call
xor
xor
push
(bad)
xor
ss
ss
mov
mov
clc
mov
push
aaa
inc
pop
lods
cmp
(bad)
cmp
cmp
arpl
cmp
(bad)
(bad)
fcomip
cmp
cmp
lsl
jns
lahf
cmp
in
cmp
pop
dec
push
cld
(bad)
ds
test
xchg
sar
icebp
sbb
or
lds
adc
mov
xor
nop
popf
inc
inc
push
xor
cdq
icebp
dec
in
push
scas
mov
or
and
add
xor
and
xor
xor
lds
jg
xor
cmps
push
adc
xor
dec
arpl
sub
icebp
mov
and
aaa
sti
fnstcw
jmp
(bad)
cmp
ja
mov
cmc
inc
dec
push
cmp
repnz
xor
cmp
dec
cmp
andnps
mov
data16
cmp
mov
cmp
cmp
inc
adc
push
stos
fist
xor
lock
cmp
mov
xor
stos
pop
cmp
cld
aaa
cld
cmp
cmps
cmp
lea
cmp
cmp
cmp
cmp
clc
out
pop
mov
cmp
sub
mov
ds
ds
xchg
jae
test
push
or
daa
aas
inc
pop
mov
scas
mov
in
adc
push
or
adc
pop
test
mov
mov
lea
cmp
fidiv
div
call
mov
mov
xor
xchg
xchg
mov
adc
sbb
cmp
inc
xor
cmp
xor
push
dec
xor
arpl
adc
jl
xor
(bad)
mov
arpl
cmp
xchg
mov
hlt
gs
xchg
pop
add
and
xchg
gs
xchg
cmp
push
pusha
ins
js
xchg
gs
test
jp
imul
xchg
mov
add
and
jl
xchg
(bad)
cmp
inc
test
dec
fcom
xchg
xchg
cmps
aad
push
xor
(bad)
(bad)
in
out
ss
push
add
aaa
and
das
push
adc
aaa
cmp
arpl
outs
inc
add
jg
aaa
mov
mov
test
(bad)
cmp
sub
xor
mov
(bad)
int
ja
mov
sub
or
cmc
repz
mov
fist
xor
xor
inc
xor
jge
call
or
or
push
adc
sub
xor
fbstp
xchg
sar
xor
xor
xor
mov
push
fbstp
xor
mov
xor
xor
je
or
xor
movs
test
outs
fwait
jge
push
lds
lods
xor
mov
inc
popa
add
inc
cmp
adc
or
pop
add
aaa
cld
mov
inc
cs
ss
ss
mov
mov
mov
std
adc
call
sub
aaa
xor
push
mov
shl
aaa
lock
(bad)
aaa
ror
repnz
div
add
push
cmp
cmp
call
jns
mov
nop
cmp
cmp
cmp
cmp
cmp
loopne
das
adc
push
cmp
cmp
push
std
mov
outs
cmp
and
sub
cmps
cdq
retf
xor
push
push
test
push
aad
cmp
adc
mov
movs
and
shr
sub
sub
add
mov
es
inc
adc
and
mov
sti
unpcklps
cmp
jbe
mov
add
add
add
inc
icebp
fst
add
sub
pop
fadd
push
pop
test
inc
pusha
jo
mov
xor
add
call
cmp
paddsb
fldenv
xchg
jecxz
fsubr
jns
out
add
jmp
add
mov
and
xor
add
je
jne
jb
or
pop
pop
cmp
jmp
add
jb
dec
or
lods
fwait
lods
ins
adc
adc
enter
push
arpl
dec
add
pcmpgtw
cmp
xor
push
sar
xchg
push
aaa
fwait
push
mov
es
or
mov
sbb
outs
adc
push
add
fwait
ins
jb
push
popa
in
xor
nop
sub
inc
pushf
loopne
xlat
addr16
gs
or
dec
aaa
fsub
add
stc
pop
aaa
popa
jne
xlat
lea
jb
inc
pop
bound
adc
jge
add
add
rol
popa
dec
cdq
add
or
pop
ins
ins
mov
out
or
je
iret
sub
jne
jae
jne
popf
cmp
mov
add
jae
data16
jb
or
sbb
push
imul
out
fisubr
nop
pop
dec
or
jmp
fnsave
ins
push
sbb
(bad)
mov
arpl
push
xchg
imul
xchg
je
adc
ds
xor
ins
sub
fcomp
out
aaa
outs
daa
and
xchg
outs
xor
jo
adc
fsub
jae
sbb
xchg
fdiv
mov
pop
outs
dec
pop
arpl
jae
dec
ret
outs
cmp
or
fild
sbb
imul
out
adc
xchg
xchg
mov
push
mov
xor
loope
stos
ror
(bad)
loope
lods
bound
adc
mov
jg
sbb
pusha
fnstsw
dec
jge
popa
xchg
ins
dec
(bad)
jge
add
pop
jo
cmp
sbb
mov
add
cs
pushfw
cmps
xor
iret
sar
add
packuswb
cdq
jmp
sbb
imul
or
(bad)
aaa
daa
ja
das
sub
push
ret
xor
arpl
mov
pop
aas
repz
jbe
adc
add
test
jbe
or
out
sbb
movs
scas
(bad)
push
push
push
mov
xor
fldenv
repz
add
popa
out
addr16
ss
pusha
mov
mul
ins
in
mov
adc
xor
adc
jo
arpl
fisub
xor
pop
pop
adc
xor
cmps
and
adc
bound
ja
push
pop
add
pop
repz
xchg
rol
and
imul
jae
pop
mov
and
push
pop
sti
dec
clc
sahf
add
rol
loope
dec
xor
popa
addr16
leave
ds
mov
daa
jb
or
dec
cmovge
cmp
pop
or
mov
outs
sar
sbb
jns
dec
sbb
shl
(bad)
mov
outs
gs
hlt
adc
jns
outs
sub
rcl
addr16
dec
xchg
test
pop
pop
(bad)
push
int
jns
mov
pop
adc
fld
cmps
ins
test
adc
popa
xor
inc
arpl
loopne
inc
sub
aas
jnp
and
jnp
ret
jp
xlat
adc
push
or
sbb
add
imul
dec
dec
and
adc
mov
jns
sbb
xchg
aas
jmp
sbb
add
cmp
rcl
(bad)
cmp
jno
or
sub
add
and
in
cmp
lds
or
cmp
enter
inc
pusha
cs
ins
scas
dec
in
add
push
dec
add
or
lods
inc
or
pop
into
add
je
(bad)
lock
leave
inc
jecxz
rcl
call
in
or
test
and
add
jnp
or
xor
add
jno
jp
fild
or
pop
pop
in
fisubr
mov
arpl
ins
addr16
push
pop
int
xor
xor
xchg
push
add
enter
lahf
cmp
lods
inc
pop
add
and
xor
xor
ret
add
mov
test
sub
and
mov
pop
bnd
or
push
push
push
dec
push
adc
inc
dec
gs
adc
add
xchg
aam
xor
push
js
xchg
mov
mov
pop
daa
rol
pop
and
xor
cmps
mov
add
mov
pop
xchg
in
cld
add
inc
add
mov
add
push
lds
adc
jb
add
rol
or
xor
push
mov
adc
push
mov
or
inc
xchg
sub
xchg
stos
inc
cmps
xor
mov
dec
xchg
xchg
pop
xlat
and
and
nop
cmp
outs
and
jb
and
and
mul
xchg
test
or
or
dec
xchg
or
mov
aaa
imul
xchg
mov
xchg
nop
ins
sbb
in
repnz
leave
or
fs
fisttp
inc
xchg
dec
add
xor
jns
cs
pop
xor
push
xchg
jb
repnz
outs
push
in
add
pop
add
loopne
sbb
and
xchg
adc
test
test
add
cmp
and
inc
popa
pop
jb
pop
mov
aam
adc
inc
jl
adc
pop
mov
mov
or
pop
call
sahf
inc
cmps
inc
xchg
push
mov
nop
ins
ret
gs
fs
es
daa
sbb
inc
cmps
or
retf
add
or
data16
mov
mov
xchg
aad
or
add
stos
call
cmp
sti
das
or
in
add
inc
or
inc
push
cli
imul
or
sbb
and
sbb
cmp
enter
push
enter
inc
icebp
int3
and
and
in
je
xchg
cmp
inc
cmp
into
retf
mov
retf
adc
pop
and
aad
movs
retf
nop
push
jb
sbb
rol
nop
push
jb
retf
rol
retf
adc
push
in
inc
adc
nop
pop
leave
or
dec
dec
pop
and
retf
or
daa
out
push
retf
inc
and
retf
repnz
leave
mov
sub
cmp
xchg
sub
pop
push
and
dec
dec
inc
in
sbb
sbb
dec
nop
cmc
dec
cld
dec
sub
leave
dec
push
repnz
hlt
and
nop
add
dec
and
cmp
hlt
adc
fisttp
dec
ss
outs
repnz
cs
sbb
or
leave
out
xchg
loope
shl
leave
in
nop
inc
cs
out
nop
adc
adc
adc
call
(bad)
ja
jns
das
in
(bad)
repnz
mov
sub
ror
adc
leave
lock
add
mov
sub
pop
and
lds
bnd
std
aaa
jo
push
in
add
mov
push
jecxz
or
push
ret
hlt
retf
jb
mov
fnstcw
dec
and
mov
xchg
inc
mov
cld
push
ret
push
inc
xchg
push
jb
push
push
mov
mov
push
pop
adc
jns
in
or
jb
in
xchg
inc
iret
sbb
adc
sbb
pop
retf
iret
je
pop
and
mov
pop
sbb
es
int3
push
int3
and
adc
iret
jns
and
and
push
and
adc
shr
iret
inc
enter
pop
test
fcom
leave
inc
xchg
cmp
pop
and
iret
xor
push
add
inc
pop
xor
xor
mov
sub
iret
inc
js
ins
call
dec
add
iret
pusha
pop
mov
push
iret
cwde
push
push
and
inc
fld
lock
add
iret
adc
add
lods
mov
iret
pop
das
xchg
dec
mov
mov
inc
inc
mov
or
sub
sbb
push
ss
mov
mov
inc
pusha
mov
add
iret
adc
sub
and
inc
adc
or
xchg
inc
iret
ins
push
ins
xchg
or
test
and
enter
add
pop
(bad)
push
pop
mov
jl
adc
nop
jl
and
add
pop
fadd
cmp
inc
pop
fs
cmp
dec
dec
add
xchg
pop
test
adc
xchg
dec
and
pop
rcr
sub
dec
or
mov
test
inc
xchg
push
xchg
inc
rol
inc
sahf
pushf
or
loop
jecxz
add
add
and
pop
pop
sub
or
dec
cmps
scas
in
jb
in
mov
add
adc
pop
fs
and
inc
retf
add
frstor
pusha
fs
enter
je
inc
or
jmp
retf
shl
int
add
int
sub
mov
pusha
inc
push
ret
cmp
in
fs
stc
and
in
lock
loop
inc
leave
enter
nop
pop
add
mov
and
inc
push
nop
fld
nop
and
rcr
cmp
pop
enter
js
jns
jb
cld
fs
or
test
xor
pop
inc
and
sbb
in
shr
rcr
leave
and
xchg
gs
push
enter
xchg
arpl
repnz
adc
mov
call
and
rol
add
ror
sbb
shl
retf
mov
pop
xlat
inc
ins
cmps
iret
inc
mov
loopne
xor
sbb
in
xchg
imul
xor
inc
repnz
push
outs
aad
nop
retf
xchg
iret
adc
and
and
push
repnz
in
rcr
rol
iret
dec
rcl
shr
outs
xor
retf
or
enter
outs
dec
outs
inc
in
jb
rcl
pop
outs
and
push
and
cmp
shr
rcr
shl
fwait
xchg
mov
test
add
xchg
xchg
inc
and
js
jo
jb
enter
push
pop
ret
jmp
jo
nop
add
sbb
je
ret
cdq
sub
cmp
mov
sub
add
aam
in
repnz
sbb
enter
ret
and
mov
xchg
add
ret
inc
retf
fs
and
dec
les
jns
mov
cmp
jb
gs
rol
add
adc
repz
xchg
mov
sub
fs
xor
gs
je
cld
mov
xor
sub
add
xchg
ret
repnz
je
leave
mov
jb
sub
adc
pop
fstp
jb
je
enter
ror
jb
xlat
shr
sbb
nop
pop
mov
in
jbe
(bad)
xchg
mov
ror
test
cmp
xlat
jmp
in
or
mov
rol
leave
dec
push
inc
dec
enter
lds
test
jnp
in
push
enter
rcr
push
adc
sbb
ja
(bad)
enter
cmp
xchg
les
inc
es
push
lods
push
push
xchg
iret
mov
hlt
mov
ja
lahf
in
jl
push
inc
aam
dec
shl
imul
je
es
jns
mov
cmp
hlt
cdq
sbb
inc
sbb
mov
push
fst
or
push
and
(bad)
pop
jb
sbb
jnp
lods
and
nop
xchg
ret
cmp
jnp
and
and
jns
xor
pop
add
jl
mov
sub
pop
or
adc
jg
cmp
jg
add
xchg
hlt
jg
jg
xchg
pop
and
adc
cmps
xchg
daa
adc
inc
dec
sub
inc
mov
outs
mov
hlt
jg
adc
leave
xchg
retf
inc
dec
add
hlt
jg
xchg
popa
je
stc
inc
rcl
push
jb
push
js
lock
jb
sar
fnstcw
nop
push
leave
cld
rcr
clc
or
mov
test
add
inc
repnz
pop
xlat
mov
xchg
xchg
xchg
sar
xchg
xchg
xchg
call
xchg
xchg
xchg
test
xchg
xchg
or
xchg
xchg
xchg
xchg
movs
sub
ins
xchg
xchg
xchg
xchg
or
and
xchg
xchg
xchg
xchg
mov
dec
repnz
push
pop
jb
and
fs
xchg
clc
mov
dec
or
fdivr
in
(bad)
cs
sub
inc
fdiv
xchg
dec
cs
clc
mov
cwde
and
xchg
xchg
pop
jb
xor
mov
int3
add
jo
enter
jno
lock
mov
jo
dec
mov
xchg
mov
pop
ss
test
es
cmp
mov
inc
push
repnz
movs
mov
cmp
xor
nop
sbb
mov
mov
mov
inc
push
jb
mov
mov
mov
js
inc
mov
test
jb
pushf
sub
dec
mov
and
dec
cs
clc
test
mov
test
inc
sub
shr
adc
dec
pop
inc
sub
push
adc
push
shl
mov
adc
pop
data16
(bad)
xor
xchg
mov
xor
sub
loope
aaa
icebp
ss
push
mov
xchg
ds
inc
lds
in
inc
mov
mov
and
xor
adc
cmp
rcr
mov
enter
hlt
hlt
mov
mov
xchg
adc
mov
mov
or
or
lds
and
stos
sub
mov
cmp
jmp
stc
sub
push
icebp
push
add
cmp
ins
add
push
sub
icebp
jge
push
scas
sub
sbb
inc
push
pop
push
mov
mov
and
push
pushw
popf
mov
sub
add
icebp
cmp
mov
push
pop
std
mov
add
fadd
sub
sub
sub
mov
xor
add
ins
push
test
mov
ret
jle
xor
adc
add
and
(bad)
or
jno
in
or
adc
(bad)
enter
popf
das
dec
jne
and
iret
mov
inc
rol
sbb
and
mov
in
add
lahf
mov
ret
pop
xchg
pop
and
repnz
daa
adc
cmp
xchg
xchg
ror
in
cmp
mov
mov
in
enter
mov
in
leave
and
jl
ins
mov
(bad)
test
or
loop
rcl
movmskps
add
out
and
or
daa
xor
inc
jle
mov
fwait
icebp
add
cmp
sahf
dec
int3
sub
shr
and
mov
pop
add
test
call
add
shr
xchg
cmp
add
stc
inc
inc
(bad)
pop
dec
shl
mov
and
jb
and
pop
iret
ret
jbe
pop
je
pop
fidiv
ds
mov
fwait
jmp
push
push
jo
push
enter
mov
rol
and
mov
push
arpl
mov
jnp
mov
ror
xlat
add
adc
mov
add
clc
mov
inc
add
inc
push
fnsave
add
sti
pop
outs
pop
pop
dec
(bad)
push
mov
pop
stos
outs
test
ret
into
push
nop
mov
popa
repnz
mov
mov
mov
pop
adc
add
inc
scas
mul
and
dec
cmps
fcomp
jl
jo
mov
sub
out
shl
adc
cmp
es
add
mov
in
cli
push
in
test
nop
add
out
and
ins
push
jb
mov
mov
mov
mov
aas
test
addr16
inc
xor
stos
mov
int
in
inc
(bad)
and
int
mov
scas
cwde
pop
inc
lds
out
nop
jb
enter
test
enter
jb
call
nop
and
mov
pop
xchg
scas
aas
push
xchg
ins
mov
add
repz
scas
fild
cmp
cmp
(bad)
push
scas
mov
enter
cmp
stos
rcl
movs
adc
add
inc
imul
add
adc
inc
mov
adc
xchg
pop
and
iret
adc
push
sub
fisub
jmp
and
hlt
inc
mov
xor
sub
mov
pushf
adc
dec
mov
fsubr
cmp
dec
invd
dec
fsub
sub
inc
dec
add
add
bound
sub
enter
push
xchg
xchg
xchg
mov
arpl
push
jbe
je
aaa
jb
ret
js
test
stc
enter
shr
add
adc
fs
in
in
sbb
aam
add
jns
mov
int3
dec
idiv
push
movs
add
out
mov
push
call
cmp
dec
sub
loopne
mov
fild
ss
cmp
sbb
mov
adc
sub
pop
mov
xchg
dec
repnz
ins
dec
lods
mov
enter
xchg
push
loop
add
enter
mov
sti
sub
and
add
push
inc
or
and
sbb
jae
arpl
cmp
loopne
fs
and
bound
dec
mov
or
add
test
and
pop
div
sub
and
push
push
xchg
cmp
out
dec
dec
inc
inc
jg
xor
popa
add
push
add
pop
push
aaa
lods
sub
or
mov
call
add
lods
js
clc
pop
mov
bound
add
dec
mov
jmp
test
mov
cmps
imul
scas
imul
add
cmps
imul
imul
cmps
imul
imul
ins
call
lods
adc
push
popf
add
mov
or
stos
mov
pop
push
xor
leave
adc
enter
mov
cs
jl
xchg
test
pop
mov
add
add
pop
dec
mov
call
shl
loope
xchg
dec
loopne
js
cmp
pop
cdq
lock
mov
ret
pop
or
frstor
pushf
sub
pop
pop
cmp
leave
xchg
push
dec
nop
pop
sbb
sbb
call
push
popf
jo
and
push
dec
dec
fcomi
xor
(bad)
retf
psubb
fsubr
js
sbb
pop
sbb
push
push
test
je
adc
rcr
into
js
ror
dec
cmp
outs
and
adc
into
cmp
pop
inc
mov
dec
mov
inc
mov
call
cwde
repz
mov
mov
pop
or
adc
jmp
push
sbb
inc
and
push
rcr
lahf
ins
inc
lods
test
mov
retf
fstp
and
(bad)
adc
ins
cs
fild
cld
rcl
ret
push
push
pop
jbe
sub
push
or
sub
mov
adc
mov
and
dec
pop
jb
sub
mov
xchg
movs
mov
outs
mov
retf
rcr
clc
add
aaa
dec
xlat
popf
xor
push
adc
rdpmc
fsub
dec
mov
(bad)
or
inc
(bad)
pop
pop
pop
dec
add
dec
shl
(bad)
fisub
add
adc
pop
xchg
and
test
add
pop
fnstenvw
push
(bad)
sbb
inc
inc
fwait
sub
(bad)
dec
push
mov
mov
inc
inc
add
xchg
mov
and
push
mov
add
sub
movs
nop
and
inc
stc
sub
jbe
xor
xor
xor
(bad)
mov
xor
pop
mov
shl
test
call
aaa
and
inc
aaa
out
aaa
bound
sahf
sbb
mov
mov
cmp
pop
and
aaa
fild
adc
jb
test
or
scas
mov
ret
cmp
(bad)
cmp
mov
loop
aas
sbb
jge
cmp
push
jbe
pop
add
popf
fstp
cmp
cmp
cmp
cmp
cmp
jg
mov
dec
cmp
adc
sbb
or
xchg
add
or
(bad)
out
inc
add
(bad)
xor
xor
xor
mov
mov
mov
sbb
dec
xor
mov
mov
js
xor
sub
jns
xor
mov
mov
jbe
out
stos
js
xor
xor
call
call
ins
xor
xor
xor
xor
xor
xor
test
stc
add
xor
or
pop
stos
bound
addr16
mov
mov
sahf
mov
test
mov
cmps
mov
sub
cmp
sub
jne
or
fdivr
inc
push
cmp
in
dec
cmp
cmp
cmp
cli
mov
loop
cmp
cmp
dec
ds
add
xchg
add
sub
in
aaa
xor
arpl
out
mov
push
inc
lahf
mov
mov
loope
xor
xor
xor
xor
xor
js
sub
jns
xor
aas
in
xor
sub
pop
xor
xchg
pop
aaa
test
lea
call
mov
sbb
bound
mov
or
xor
bound
mov
cmp
push
cmp
outs
or
jle
fdiv
stos
js
cmp
and
cld
or
mov
cmp
cmp
cmp
add
or
in
repz
call
cmp
xor
lea
cdq
jecxz
add
cmp
cmp
cmp
cmp
cmp
movs
inc
pop
daa
xor
int
fnsave
mov
xor
xor
cmp
ret
push
adc
jne
mov
cmps
mov
sub
cmp
push
mov
cmp
cmp
dec
cmp
add
pop
dec
pop
cmp
imul
in
fcomip
cmp
cmp
cmp
cmp
cmp
inc
inc
ja
cmp
cmp
aaa
mov
mov
icebp
mov
pop
push
mov
adc
jg
mov
add
pop
cmp
jg
cmp
fild
cmp
cmp
cmp
cmp
cld
sbb
and
push
cld
inc
sub
push
pop
add
push
jb
jp
cmp
cld
dec
inc
mov
stos
adc
retf
add
sub
hlt
mov
cmp
and
inc
push
icebp
sbb
push
ds
ds
dec
ins
fnsave
cmp
ds
ds
mov
test
enter
fsub
dec
(bad)
ds
call
fnstsw
or
adc
sbb
and
sub
xor
(bad)
(bad)
jg
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
push
ror
pop
cwde
push
aas
mov
call
daa
sar
aas
sar
fdivr
loopne
call
inc
lock
add
clc
or
adc
in
jns
call
aaa
xor
xor
xor
js
xor
xor
mov
clc
nop
xor
xor
test
movs
mov
jmp
mov
pop
add
sub
sub
nop
adc
mov
xor
cld
(bad)
call
adc
add
add
or
or
adc
adc
sub
dec
xor
repnz
mov
pusha
xor
xor
xor
xchg
inc
lds
clc
(bad)
cmp
pop
push
jl
push
in
xor
iret
call
dec
mov
sub
mov
inc
jecxz
xor
add
sti
in
dec
and
jecxz
aaa
sub
inc
inc
adc
push
dec
mov
and
out
mov
aaa
call
mov
and
inc
mov
xchg
add
imul
lds
cmp
mov
inc
add
xor
cmp
shl
lds
cmp
frstor
in
aaa
fucomi
ror
adc
add
and
mov
int3
cmp
cmp
push
mov
sar
or
cmp
cmp
out
adc
inc
push
jnp
jne
add
xor
jge
xor
xchg
xor
xlat
popf
rol
push
ins
xor
mov
mov
xor
xor
push
jl
icebp
xor
xor
mov
int
push
pop
push
sbb
scas
mov
add
xchg
cmp
cmp
xor
sub
outs
add
idiv
add
inc
and
xchg
(bad)
fbld
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmps
iret
push
add
cld
cmp
jg
daa
add
ins
mov
and
ret
xchg
fwait
or
lock
xchg
lea
ja
(bad)
xor
rol
stos
clc
mov
daa
xor
xor
mov
ds
add
sub
xor
call
ss
adc
pop
popa
ror
inc
(bad)
add
outs
aaa
sahf
aaa
movs
aaa
scas
aaa
mov
mov
xor
aaa
shl
(bad)
push
inc
or
out
out
jecxz
mov
pop
cmp
cmp
out
mov
cmp
push
scas
addr16
jns
cmp
mov
xchg
xlat
lds
into
in
lock
cs
or
cmp
adc
cmp
cmp
mov
in
cmc
cmp
inc
inc
pop
add
sbb
lea
jno
cmp
cmp
add
add
addr16
call
cmp
(bad)
cmp
cmp
inc
ds
xchg
(bad)
ds
ds
ds
ds
cmp
or
aas
add
pop
je
popf
or
xchg
mov
push
(bad)
imul
add
enter
fcom
or
pop
loopne
cmc
add
call
xor
sub
stos
ret
cmp
inc
lds
scas
mov
mov
jmp
mov
jmp
movs
cmps
movs
sub
loopne
adc
mov
lods
scas
sub
loop
das
xor
imul
movs
push
mov
xlat
mov
mov
xchg
xchg
(bad)
jmp
ret
(bad)
in
mov
add
mov
movs
sbb
xlat
loop
add
inc
xor
inc
arpl
mov
dec
mov
add
movs
jmp
not
(bad)
sub
mov
mov
std
add
test
add
inc
push
xlat
xchg
xor
jg
mov
jle
xchg
(bad)
fdivr
in
call
cmp
fst
icebp
dec
cwde
in
test
xchg
cmp
push
out
cmp
mov
fdivr
adc
int
cmp
pop
jmp
cmp
push
cld
ja
add
push
cmp
push
icebp
inc
and
push
adc
push
inc
mov
lock
add
mov
mov
mov
leave
sbb
add
rcr
scas
out
adc
iret
and
jg
mov
push
daa
cmp
aas
int3
aas
fdivr
loope
aas
push
mov
jl
pop
and
xor
std
jg
xor
xor
xor
xor
xor
pop
xor
jae
mov
adc
xor
mov
xor
xor
add
push
inc
mov
or
mov
sbb
repz
add
adc
mov
dec
mov
dec
push
or
inc
enter
cmp
enter
nop
inc
push
and
cmps
nop
add
add
call
mov
outs
enter
sub
mov
pop
rol
pop
adc
add
mov
inc
push
and
sbb
(bad)
cmp
adc
add
enter
add
and
mov
push
jb
jl
adc
add
mov
or
pusha
sub
adc
and
and
xchg
xchg
and
and
and
mov
pop
xor
and
and
enter
push
inc
xor
sbb
sub
fs
cs
aaa
ins
add
nop
sub
ins
and
mov
dec
push
mov
leave
inc
push
push
es
xchg
mov
fptan
add
jmp
inc
sbb
lods
jo
in
or
cmps
pop
pop
nop
mov
mov
xor
push
sbb
leave
or
pop
xor
push
inc
push
sub
jb
xchg
popa
sar
mov
xchg
sahf
xchg
add
adc
xchg
and
cmp
es
pop
leave
ror
mov
and
inc
mov
xchg
add
and
and
add
sub
sbb
enter
push
add
jmp
jb
dec
pop
add
and
lods
xor
test
sub
inc
pop
add
cmp
adc
mov
jg
xchg
sub
sbb
sub
xor
push
nop
sub
(bad)
retf
sbb
ret
leave
test
inc
dec
jmp
int3
enter
addr16
bound
or
mov
stos
outs
mov
sub
call
jge
push
add
dec
cmp
ds
dec
mov
or
ret
cmp
cmovl
rol
(bad)
mov
adc
mov
push
fst
or
and
nop
xchg
pushf
inc
stc
pop
stc
push
(bad)
nop
mov
arpl
add
in
in
push
leave
add
int3
adc
and
inc
jb
rcr
or
pushf
retf
popa
retf
in
das
jns
retf
cmp
sub
std
retf
inc
pop
int3
retf
dec
leave
inc
dec
test
jbe
test
inc
dec
leave
inc
pop
retf
das
dec
dec
enter
inc
stc
leave
inc
push
jb
in
leave
sub
inc
test
ss
jns
leave
push
leave
sub
in
and
nop
push
and
leave
enter
push
sbb
enter
and
in
int
lar
nop
aam
mov
cmp
push
and
(bad)
into
repnz
xchg
xchg
scas
repz
dec
push
jb
push
dec
(bad)
aad
push
loop
mov
mov
arpl
aad
enter
push
dec
cmp
cmp
loope
pushf
iret
or
dec
jge
push
and
daa
dec
in
out
lds
cmp
inc
retf
lds
lds
lds
mov
or
je
lds
sub
repnz
push
nop
xlat
mov
in
add
popf
dec
sub
leave
out
jns
dec
fsubr
dec
jmp
add
adc
or
(bad)
xchg
call
nop
dec
outs
xlat
pop
fnstsw
jl
out
cmp
xchg
cmp
dec
js
dec
adc
pmulhuw
push
xor
push
and
mov
xchg
xchg
cmps
or
sub
sub
adc
mov
push
or
sub
pop
pop
push
or
mov
gs
xchg
sbb
or
pop
aas
cmp
test
aas
fs
xchg
sbb
sub
sbb
bound
les
and
mov
add
push
push
adc
push
js
or
add
aas
je
je
test
test
and
int3
push
int3
loope
inc
inc
aas
sub
bound
mov
adc
jb
sbb
xchg
push
fmul
push
add
aas
cmp
test
aas
mov
and
inc
fld
test
xor
sbb
aas
cmp
pop
inc
inc
or
nop
aas
cwde
pop
cwde
xchg
add
hlt
or
cmp
pop
sbb
mov
lods
push
add
and
mov
or
or
add
push
aas
pusha
or
fld
sub
and
pop
fld
add
sbb
pop
sbb
adc
test
fwait
adc
inc
and
sub
add
pop
jb
push
jb
pop
dec
pop
pop
pop
adc
add
fnstenvw
xchg
mov
loop
push
mov
push
jno
enter
xchg
and
and
push
and
nop
imul
cmps
mov
inc
push
jbe
and
ins
aaa
pop
sub
push
fdecstp
push
push
add
dec
hlt
movs
cmp
retf
enter
aad
cld
sbb
lahf
out
adc
or
cmc
sbb
mov
mov
inc
xchg
mov
sbb
jb
icebp
fucomip
add
inc
jb
cwde
cmp
push
and
inc
push
and
jb
dec
scas
fisubr
and
xor
ins
or
or
out
push
push
lods
add
enter
loopne
sar
pop
jb
or
pop
push
dec
add
inc
sbb
pop
xchg
mov
enter
mov
jg
pop
and
jo
enter
mov
inc
cs
inc
(bad)
xchg
mov
cmp
cmp
add
out
push
lods
in
icebp
add
add
adc
push
repz
cmp
push
add
les
cmp
mov
ror
and
cmp
cmps
xchg
data16
jb
xor
and
stos
in
add
fsub
iret
and
aam
leave
and
dec
dec
inc
push
mov
lock
and
inc
call
lahf
sub
loop
jbe
xchg
sub
add
out
dec
mov
into
xchg
adc
outs
ror
and
jo
in
enter
iret
jb
mov
iret
mov
pop
jns
adc
iret
xchg
retf
or
or
jo
iret
and
sub
iret
nop
retf
or
xor
jo
into
jb
cs
dec
jo
into
and
jns
inc
push
leave
into
mov
inc
ss
inc
int3
xchg
lds
in
jb
fisubr
leave
nop
fst
xchg
out
dec
push
jns
pop
mov
inc
outs
in
jno
fs
ret
fld
shl
lahf
sub
test
cmp
and
jns
add
xchg
shl
stos
in
push
fsubr
lea
nop
mov
add
cmp
push
ret
enter
test
pop
(bad)
add
or
nop
addr16
push
and
addr16
jae
sbb
mov
enter
push
sbb
xchg
or
push
aam
pushf
dec
nop
xchg
cwde
push
xor
cmp
cmp
push
aas
aam
cdq
xchg
xor
cmp
mov
add
pop
lea
pop
inc
(bad)
(bad)
rcl
shr
nop
add
xchg
(bad)
retf
pop
in
add
in
cmps
shr
leave
xchg
call
xor
nop
sub
rcr
push
in
mov
mov
repz
sub
pop
fs
and
xchg
xchg
push
call
cld
dec
jae
dec
push
sbb
leave
dec
push
les
test
xor
mov
fisttp
cmc
xchg
and
and
in
or
push
sbb
push
cmc
rol
push
and
xchg
xchg
lds
or
nop
and
hlt
jl
rcl
xor
lea
sti
cmp
xchg
jl
pop
or
push
inc
cmp
nop
add
dec
or
daa
pop
aad
inc
inc
pop
xor
aam
xor
or
inc
sub
dec
push
cmp
enter
xor
dec
push
nop
and
dec
int
jb
push
iret
adc
xchg
and
push
mov
dec
test
xor
sub
xor
mov
cmp
mov
out
nop
adc
and
pushf
xor
xor
mov
pushf
pop
aam
pop
call
mov
add
inc
aam
enter
add
aam
movs
fdivr
sbb
cmp
leave
and
pushf
mov
jb
movs
mov
mov
repnz
repnz
push
fist
cmps
shr
repz
movs
retf
inc
add
or
in
fadd
nop
xchg
sub
fsubr
mov
adc
in
dec
or
mov
inc
in
and
sub
cs
in
dec
cs
or
adc
dec
repz
es
shl
add
push
je
mov
ret
or
mov
jl
pop
mov
inc
mov
mov
retf
mov
sbb
test
xchg
das
cmp
repz
sbb
adc
push
add
cmps
xor
and
stc
fucomip
mov
mov
in
push
cmp
add
lock
ss
ror
mov
fmul
add
inc
ret
mov
leave
jae
mov
xor
movs
cmp
mov
enter
aas
jno
or
enter
test
xor
and
inc
add
mov
mov
fsub
xor
(bad)
push
and
push
les
aaa
fadd
pop
dec
jns
push
mov
fild
loop
out
loopne
sbb
pop
sbb
sti
aaa
idiv
adc
and
out
out
in
in
dec
inc
rcl
lock
xor
mov
push
repz
push
loop
repnz
in
fwait
add
outs
push
lock
loop
loope
or
in
cs
cs
add
adc
adc
mov
cmp
add
jb
sub
dec
xchg
out
mul
pop
loope
or
not
leave
pop
or
repz
hlt
imul
sbb
in
repz
call
adc
push
icebp
fs
pop
arpl
ret
ret
or
fcom
stos
fbld
mov
add
push
push
push
adc
cmc
mov
mov
jp
or
pop
push
rol
sbb
xor
iret
mov
jns
popa
mov
out
mov
add
mov
test
nop
fwait
imul
mov
mov
(bad)
iret
int
dec
jle
addr16
ret
fsubr
push
mov
push
mov
iret
aas
jb
scas
xor
sbb
in
mul
and
add
stc
mov
inc
into
mov
cmps
or
ins
ret
inc
xor
addr16
inc
and
stc
mov
popf
lods
mov
jg
mov
hlt
sub
sub
jl
inc
aas
push
nop
or
out
add
inc
pop
mov
add
inc
inc
dec
jne
mov
pop
nop
(bad)
sti
xchg
fldcw
scas
sti
cmps
lock
jmp
daa
ds
jge
xor
ror
inc
xor
out
inc
retf
cmp
scas
jle
mov
fcomp
fiadd
sbb
lahf
iret
clc
sbb
mov
fwait
mov
nop
inc
scas
rcr
and
sub
sub
popf
mov
out
popa
add
mov
mov
sub
daa
mov
lea
inc
add
mov
test
add
or
xor
repnz
pop
fsubr
cmp
ret
popf
or
pop
or
sbb
int3
aad
cmp
fistp
scas
test
loop
sub
iret
fcomp
fdiv
mov
into
enter
ss
repz
jno
int3
jns
jns
and
mov
xchg
mov
xor
push
xchg
or
push
push
sbb
add
and
nop
jecxz
mov
inc
or
and
push
mov
push
mov
repz
mov
and
dec
ins
and
xor
mov
lods
fmul
nop
stos
xor
nop
(bad)
out
lods
fadd
xor
clc
sub
stos
cmps
push
retf
or
mov
adc
dec
je
jo
sar
jne
jae
push
sbb
pusha
(bad)
mov
and
prefetchw
add
and
ins
or
add
and
pop
and
mov
es
push
popa
jbe
mov
lods
scas
out
jge
adc
in
push
arpl
(bad)
cmp
push
xchg
cmps
test
call
test
sbb
pop
adc
mov
pop
xchg
je
repz
repz
into
mov
cmp
adc
pusha
js
jle
add
jmp
push
out
jecxz
stos
imul
dec
fnsave
(bad)
call
sub
aas
add
jnp
(bad)
sbb
ss
xor
inc
inc
pop
clc
sub
shl
adc
cmp
cmp
scas
call
retf
retf
in
or
mov
stos
in
push
ret
ins
inc
mov
or
pop
(bad)
cld
js
push
aad
test
nop
dec
shr
adc
outs
fs
dec
push
sub
fdivr
pop
stos
shr
fcom
and
pop
mov
cwde
or
cmp
loope
lds
pop
leave
jne
pop
push
inc
add
sahf
or
lods
call
inc
lahf
ror
jp
call
inc
inc
shr
inc
rol
(bad)
sti
repz
sub
jmp
daa
out
cmp
(bad)
scas
pop
sahf
or
mov
cmps
and
mov
push
cwde
ror
jle
xchg
inc
dec
jne
push
outs
leave
out
or
and
inc
add
stos
iret
inc
cmp
push
xchg
add
imul
stos
mov
lods
mov
popf
push
lds
sbb
mov
adc
sub
sbb
fdivr
fxch
arpl
call
bound
mov
push
xor
lods
cmp
adc
rol
jne
push
loope
stos
dec
xor
aad
fwait
and
leave
stos
pop
mov
movs
sub
xchg
lods
stos
jns
arpl
or
test
jns
inc
out
xor
loope
xchg
add
dec
push
jbe
pusha
std
paddq
adc
xor
outs
inc
xor
outs
les
in
jmp
lock
pop
push
fmul
rol
(bad)
cmp
jno
cmc
test
call
add
xchg
ins
add
ds
ret
xchg
dec
ds
leave
mov
icebp
push
mov
sbb
mov
mov
ret
or
or
and
fistp
enter
adc
jmp
mov
inc
push
test
mov
call
aas
imul
dec
xchg
pop
ret
dec
jle
test
pop
jne
xor
mov
xchg
or
ins
movs
mov
cmp
outs
sub
je
sbb
movs
(bad)
or
xor
sub
jnp
xlat
sub
mov
xor
and
cs
mov
xor
cs
das
pop
xchg
inc
enter
ins
imul
movs
sub
movs
cwde
mov
inc
int3
cli
aam
lock
call
mov
push
in
call
jns
push
or
cld
dec
ss
cmps
call
mov
ficomp
call
mov
out
in
cmps
xor
mov
xchg
mov
and
sbb
cmp
test
das
mov
les
mov
or
mov
fwait
mov
and
adc
pop
or
pusha
and
popa
stos
test
and
xor
ss
pushf
push
aaa
or
cdq
add
test
jnp
mov
ins
pop
push
les
ss
fwait
inc
lock
dec
mov
fmul
mov
test
sbb
gs
inc
adc
pop
xchg
or
jl
mov
pushf
sbb
jae
cdq
mov
jbe
mov
in
add
div
mov
pushf
repz
mov
mov
enter
jl
adc
enter
aam
sbb
enter
sub
jp
mov
in
and
test
sub
push
xor
mov
and
ror
lods
inc
ins
pop
mov
mov
adc
inc
rol
iret
inc
mov
mov
rol
imul
pushf
(bad)
ret
jge
ja
inc
inc
out
or
test
mov
xchg
cmps
cmp
xchg
mov
sub
jmp
mov
jg
call
pop
mov
cdq
ss
and
add
mov
jge
aaa
lahf
mov
mov
push
jno
xchg
mov
add
jl
sbb
sbb
and
sub
add
adc
push
jo
lock
adc
push
shl
jae
cmp
mov
lods
sub
into
pop
add
fst
mov
fmul
push
sbb
pop
pop
or
push
pushf
ss
and
adc
popa
xchg
push
add
scas
push
inc
xlat
sbb
adc
nop
sbb
and
sub
pusha
ret
aam
mov
sub
lds
adc
push
mov
fsub
mov
mov
push
dec
add
les
ror
test
add
pop
arpl
mov
cld
pop
pop
mov
loopne
call
add
pop
clc
push
das
add
dec
shl
cmp
dec
shl
push
pop
pusha
push
jo
or
cwde
mov
xor
shl
rcr
loopne
add
dec
shl
clc
add
bound
mov
sbb
rol
pop
int3
adc
push
jb
xor
cmp
enter
hlt
push
pop
or
and
lods
pop
pusha
pop
mov
pop
jmp
pop
cmp
mov
mov
int3
cld
xor
fs
rcr
dec
nop
mov
push
fisttp
lock
call
out
or
add
dec
dec
mov
mov
pop
xchg
gs
push
nop
and
pop
dec
dec
xchg
shl
je
dec
mov
xor
enter
cmp
push
mov
outs
adc
scas
pusha
or
rol
cwde
pop
sub
(bad)
sub
xor
cmp
enter
fstp
cdq
mov
and
clc
cmp
cmps
cmp
arpl
scas
jmp
mov
fadd
adc
inc
xor
add
aaa
xor
add
pop
lock
out
das
mov
jo
add
movs
push
or
and
ds
leave
sub
(bad)
(bad)
(bad)
test
rcl
pusha
push
lds
leave
jb
(bad)
lock
cmps
add
add
retf
mov
shl
mov
mov
xor
shl
sub
pusha
shl
scas
mov
into
(bad)
hlt
adc
in
sbb
push
imul
mov
movs
mov
loop
out
add
shl
ss
lds
mov
pop
mov
add
xchg
or
call
gs
sub
dec
pop
je
pop
xchg
xchg
pop
xchg
rcr
test
call
push
mov
or
mov
(bad)
push
adc
adc
cmp
or
sub
add
cld
je
imul
pop
fcomp
inc
sub
inc
test
rol
push
push
dec
dec
dec
dec
cs
dec
dec
dec
or
push
mov
mov
clc
jg
sub
xor
xor
xor
shl
loop
pop
stos
xor
ss
sbb
sub
dec
mov
cmp
push
loop
mov
idiv
add
push
sub
aas
xor
jb
xchg
jg
mov
mov
aaa
test
mov
adc
loop
stos
clc
sbb
and
cmp
clc
lahf
test
jle
call
loop
sub
stos
clc
xchg
stos
mov
cmp
fwait
pop
stos
mov
or
jmp
(bad)
aas
sahf
aas
movs
aas
(bad)
push
lds
mov
adc
fiadd
jp
aaa
add
mov
or
and
dec
add
(bad)
call
xor
xor
xor
cmp
xor
dec
xor
pop
xor
jle
pushf
stc
jg
pop
stos
xor
xor
xor
xor
adc
xor
xor
xor
jg
(bad)
jg
xor
xor
xor
xor
jae
hlt
xor
(bad)
jmp
out
adc
lods
ss
mov
aaa
int3
mov
aaa
inc
dec
cmp
mov
mov
std
cmp
cmp
mov
cmp
cmp
call
cmp
in
pop
adc
retf
add
mov
inc
adc
mov
imul
xor
loope
xor
jle
mov
and
ss
movs
or
sub
loop
sub
sub
sbb
xor
pop
aaa
test
test
data16
jle
aam
add
push
jge
cmp
inc
add
push
pop
aaa
add
jg
cmp
cmp
cmp
adc
or
mov
bound
lea
stos
loop
lea
sub
pusha
sbb
add
(bad)
jg
mov
push
xchg
stc
cmp
cmp
mov
inc
cmp
gs
cmp
add
add
push
cmp
inc
into
xor
outs
xor
xor
lds
cld
xor
xor
ss
jmp
inc
add
in
fild
mov
mov
xchg
cmp
sar
mov
adc
jmp
sub
(bad)
adc
inc
idiv
cmp
pop
imul
inc
cld
cmp
or
cmp
cmp
cmp
call
adc
push
(bad)
jnp
test
mov
mov
cmp
cmp
out
cmp
icebp
push
adc
ror
push
ins
jmp
cwde
add
mov
ret
outs
mov
js
int
ds
and
xor
inc
ds
ds
ds
bound
add
(bad)
xor
aas
sub
dec
aas
push
dec
add
sub
lds
add
add
add
push
xor
xor
fcomi
xor
and
fist
xor
xor
test
add
rcl
sub
xlat
push
shl
lds
iret
sti
js
cmp
mov
mov
mov
mov
outs
stos
pop
test
fadd
aaa
xchg
call
sbb
xor
lds
inc
iret
push
adc
js
test
sub
mov
xor
mov
xor
test
xor
outs
adc
cmp
test
mov
lods
jns
movs
and
add
push
lds
inc
aaa
adc
sub
push
pop
andnps
push
das
push
push
shl
and
addr16
fcomp
mov
pop
sbb
test
xchg
xor
fs
mov
mov
pop
int
leave
(bad)
lods
push
(bad)
jg
sub
les
enter
aam
adc
add
add
jg
call
sbb
and
and
sub
sub
cmp
pop
je
js
jl
lods
and
aaa
xor
aaa
xchg
aaa
mov
sar
add
lock
sub
sub
inc
add
dec
cmp
cmp
mov
nop
in
add
test
enter
xor
test
cmps
mov
mov
cmp
aaa
xor
fwait
push
add
cmp
inc
cmp
fwait
jle
mov
cmp
dec
add
mov
add
fdivr
in
inc
aaa
shl
lock
xchg
or
sar
rcl
xor
add
or
dec
cmp
or
and
nop
push
add
or
mov
(bad)
jg
xor
cmp
cmp
cmp
cmp
cmp
(bad)
jg
add
or
or
adc
dec
cmp
cmp
cmp
push
add
movs
mov
(bad)
lods
sub
cmp
int3
ficomp
sub
cmp
push
inc
add
fisubr
adc
and
xor
mov
xchg
popa
test
xor
(bad)
outs
push
xor
cs
xor
or
adc
add
jle
lods
cdq
push
ss
cmp
(bad)
mov
fmul
add
mov
push
add
pop
mov
cmp
cmp
cmp
cmps
inc
outs
mov
cmp
(bad)
cmp
cmp
ds
and
cmp
inc
test
cli
stos
fld
mov
xor
(bad)
cmps
lods
stos
jae
pop
inc
xor
add
mov
adc
inc
and
sub
mov
in
stc
mov
sysexit
sbb
sub
retf
xor
div
das
loop
hlt
pop
push
push
fadd
das
shl
add
cmp
add
cmp
adc
ret
cmp
inc
std
aas
pop
in
jmp
pop
cmp
mov
inc
mov
dec
pop
imul
mov
stc
mov
sbb
cs
jb
pusha
or
cmp
lock
adc
xlat
add
call
(bad)
icebp
icebp
inc
adc
out
std
add
sub
das
push
repz
(bad)
lods
ds
aad
aas
inc
aas
push
retf
jns
xchg
aas
cmps
outs
add
inc
addr16
mov
aas
cli
push
inc
out
add
xor
xor
pop
inc
das
add
xor
jnp
popf
xor
scas
in
xor
xor
push
xlat
dec
idiv
cmp
xor
mov
add
cmp
loope
stos
js
add
sub
jp
fstp
jge
push
fs
push
pop
push
add
nop
pushf
xchg
pop
scas
test
and
add
into
hlt
lea
pop
pop
add
lods
mov
xchg
pop
gs
xchg
add
mov
jmp
xchg
cwde
movs
popf
fwait
cdq
sbb
xor
push
xlat
sbb
xor
dec
ss
icebp
das
retf
push
pop
ss
ss
test
ret
ss
xlat
outs
add
out
loop
div
add
or
push
xchg
push
pop
aaa
addr16
outs
or
jns
mov
xchg
aaa
mov
fucomi
jno
cmp
cli
push
cmp
cmp
imul
inc
jnp
imul
add
test
cmp
cmp
cmp
cmp
inc
cmp
je
(bad)
cmp
clc
ds
sbb
pusha
aas
jl
xchg
aas
movs
aas
mov
mov
ror
push
ja
add
inc
das
adc
inc
mov
rcl
inc
mov
test
inc
and
inc
inc
das
add
sbb
and
ret
ret
dec
xchg
retf
dec
(bad)
loope
out
pop
or
xchg
xor
mov
clc
and
xor
push
fidiv
xor
fsub
call
inc
xor
call
dec
ss
ss
arpl
movs
inc
rcr
shl
dec
lds
aad
fidiv
jmp
cmp
xchg
pop
dec
mov
mov
mov
mov
or
daa
inc
icebp
inc
ja
inc
(bad)
out
lods
cmp
sbb
mov
cmp
pop
scas
mov
cmp
frstor
push
jae
(bad)
je
jns
fst
jmp
fwait
out
inc
pop
push
shl
outs
and
mov
sub
or
add
ds
gs
inc
es
xor
mov
mov
or
push
jb
dec
or
xchg
add
daa
aas
dec
add
cmp
pop
inc
fisttp
mov
int3
ret
iret
add
gs
mov
jbe
pop
xor
sub
sub
ins
dec
leave
adc
xchg
add
sbb
xor
adc
push
rol
jg
sbb
mov
fistp
add
jne
add
inc
mov
add
sub
xchg
lods
mov
or
or
add
pusha
mov
rol
pop
movs
add
mov
js
and
push
sub
add
add
jne
add
add
outs
pusha
inc
imul
mov
xchg
add
mov
fild
or
enter
xlat
cs
add
aad
add
mov
rol
or
loopne
rol
iret
add
add
or
mov
or
sub
add
and
das
fld
fisttp
js
into
or
add
xor
retf
xchg
sub
adc
int3
mov
lock
push
adc
es
add
push
adc
loop
xchg
adc
pop
sbb
lahf
sbb
idiv
push
add
add
(bad)
sbb
and
dec
and
or
lds
les
ja
sub
pop
and
cmp
mov
adc
out
adc
shr
dec
or
imul
pop
mov
loop
pop
mov
inc
inc
aaa
jae
das
xchg
test
dec
push
push
adc
and
int
nop
fwait
and
pushf
out
dec
xor
add
addr16
sbb
xor
popa
dec
inc
lds
pop
add
rol
add
add
mov
xor
jo
fs
leave
adc
inc
or
nop
add
add
sbb
push
retf
repz
call
nop
pop
and
add
mov
inc
xchg
shl
add
inc
push
push
xor
xchg
add
sbb
xchg
pushf
mov
dec
dec
and
mov
or
daa
ror
mov
scas
inc
dec
jae
or
xchg
add
pushf
jb
sub
sbb
loopne
xor
ins
inc
(bad)
push
cwde
lock
xchg
lods
loopne
xchg
ja
add
add
add
add
nop
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
das
inc
add
inc
add
