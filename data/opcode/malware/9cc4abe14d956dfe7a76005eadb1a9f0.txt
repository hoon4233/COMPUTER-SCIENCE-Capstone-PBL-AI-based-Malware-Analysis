outs
mov
loopne
push
add
pop
jbe
imul
fs
and
aad
and
xlat
jo
push
or
push
adc
xor
push
pop
inc
add
jb
loop
jb
imul
dec
jle
pop
arpl
add
mov
push
and
sub
pop
sub
or
aad
and
aad
or
and
add
sub
jmp
cmp
add
call
add
and
or
add
pop
sbb
push
push
call
add
mov
xlat
xchg
add
stc
pop
addr16
or
rol
inc
imul
nop
fistp
imul
pop
je
imul
xlat
pop
jb
loop
mov
xchg
std
loop
sub
inc
xchg
xlat
xor
loopne
jle
adc
(bad)
xchg
push
imul
addr16
jl
pop
jb
push
or
lea
dec
stc
inc
xchg
jb
imul
mov
pop
stc
push
xchg
jo
pop
out
xor
loopne
jbe
push
out
xor
cmp
pop
jb
out
dec
mov
pop
stc
xor
cwde
sti
(bad)
cmp
loop
inc
mov
pop
sub
mov
sub
ss
jnp
pop
jbe
xor
and
(bad)
call
bound
mov
(bad)
xchg
mov
jle
loopne
std
mov
push
lea
stc
jnp
sar
loopne
std
jmp
pop
sahf
cdq
jno
rcr
adc
mov
(bad)
(bad)
call
cdq
ja
fistp
or
jb
pusha
mov
jl
pop
icebp
les
mov
dec
xor
(bad)
outs
dec
ret
push
jb
imul
push
and
call
sub
push
jb
cmp
xchg
sub
xchg
imul
pop
call
push
lea
sub
add
pop
jb
imul
pop
xor
sahf
pop
test
dec
sub
sbb
add
pop
retf
pop
jb
cmp
mov
pop
sbb
xchg
mov
jb
or
add
xlat
xchg
push
outs
mov
pop
sbb
(bad)
push
add
jb
xchg
push
cmp
pop
call
or
pop
stos
sub
fnsave
add
jbe
inc
imul
mov
pop
sbb
fistp
call
xchg
imul
pop
lea
xchg
imul
pop
sti
and
sbb
add
mov
pop
xchg
sti
dec
xchg
push
call
cmp
add
jb
imul
in
dec
add
or
push
cmp
in
or
cmps
sti
mov
pop
sbb
add
add
repnz
xor
adc
cdq
outs
loop
test
loop
xor
pop
inc
cmp
jp
push
inc
cmp
jb
cmp
push
ss
sub
test
sar
push
call
push
dec
call
mov
add
pop
pop
jb
mov
imul
fsub
mov
push
jmp
mov
mov
sub
push
loop
icebp
in
or
mov
loop
jae
loop
inc
push
inc
push
sbb
add
packssdw
push
xor
call
push
lea
mov
jns
pop
sti
(bad)
jmp
neg
pop
inc
rol
pop
adc
sub
imul
call
loop
lea
mov
jns
pop
jnp
pop
pop
inc
rol
pop
pop
rcr
imul
mov
stos
sti
(bad)
pop
sahf
xor
xchg
mov
loop
and
loope
jb
dec
icebp
out
or
aaa
cld
cmp
imul
pop
sbb
xchg
sub
push
push
call
push
test
mov
pop
mov
call
inc
sbb
xchg
sub
push
mov
jb
lods
mov
or
imul
outs
outs
mov
pusha
outs
mov
sbb
pop
cmps
sti
(bad)
xor
mov
add
pop
or
iret
dec
into
and
stos
xor
sub
inc
imul
hlt
imul
clc
imul
mov
mov
jb
xchg
mov
mov
cmps
jae
loopne
jp
aad
jo
aad
dec
cmp
mov
lea
bound
push
cmps
dec
inc
xchg
sub
cs
stc
inc
jnp
aaa
hlt
push
pop
stc
inc
xchg
mov
mov
scas
sti
ret
sub
add
pop
jb
xchg
addr16
lds
jp
stos
fnstsw
add
mov
cmps
add
imul
pop
mov
out
add
call
or
jne
aad
adc
sbb
test
pushf
jae
loop
mov
xchg
mov
xor
loopne
jp
stos
fnstsw
add
mov
lods
sub
out
pop
jb
xchg
pop
cdq
ss
cdq
adc
cmps
pop
lock
jp
jg
cli
xchg
outs
pop
jb
xchg
sbb
pop
mov
test
pushf
pop
ret
mov
xchg
mov
mov
outs
pop
jb
xchg
pop
inc
xor
sub
test
sti
in
or
jle
loope
adc
out
sbb
jmp
mov
js
pop
stc
jge
in
dec
or
mov
pop
mov
je
mov
ret
adc
mov
movs
mov
push
mov
jae
sub
push
loop
and
or
inc
xchg
push
push
fcomp
jb
imul
xchg
xlat
aaa
clc
loop
mov
popf
mov
call
loopne
jp
mov
xlat
mov
sbb
mov
ret
data16
sub
mov
jb
cs
mov
jae
stc
inc
xchg
xlat
mov
test
add
leave
test
sti
in
or
bound
xchg
outs
adc
xor
aaa
cld
sub
add
sti
test
xlat
mov
cdq
aad
or
loopne
adc
push
add
jp
dec
fist
mov
mov
test
sahf
sub
push
loop
and
aad
or
xchg
jbe
cmp
xlat
mov
outs
sub
inc
imul
inc
imul
test
mov
and
add
mov
xor
(bad)
xchg
mov
sub
test
sti
in
or
or
xchg
ja
mov
push
add
mov
imul
xchg
inc
jb
cmp
lea
xor
push
mov
je
pop
sti
clc
push
sti
(bad)
lods
pop
inc
add
scas
sub
push
loop
and
or
shr
inc
inc
mov
pushf
mov
mov
push
ret
imul
retf
inc
imul
sbb
lea
aad
(bad)
cmp
test
mov
aaa
clc
loop
stc
push
xchg
push
jp
jp
jb
xor
sub
test
sti
in
mov
push
cmp
loope
add
adc
div
js
or
test
inc
fwait
push
sbb
mov
call
loop
retf
pop
jb
mov
aaa
in
loop
inc
shl
pushf
stos
xlat
aaa
call
cmp
pop
sbb
pop
inc
push
call
outs
mov
mov
out
shl
xchg
or
fnsave
loope
pop
stc
push
xchg
push
add
jb
test
popf
dec
push
pop
jb
stos
push
test
inc
mov
jne
outs
mov
adc
nop
mov
test
jb
stos
add
mov
out
add
call
or
jbe
inc
pop
mov
fisttp
fistp
call
push
js
sbb
add
mov
aaa
or
fidiv
addr16
or
mov
mov
loop
icebp
cmp
imul
mov
cmp
inc
(bad)
cmp
xchg
ret
call
pop
jb
xchg
mov
xchg
call
push
call
ss
mov
sbb
xchg
mov
(bad)
jmp
pop
or
jnp
mov
aas
pop
jb
loop
jae
loop
repz
xchg
jb
add
sbb
mov
pop
and
loop
mov
out
jne
add
paddb
mul
push
jb
push
cmps
jb
push
and
inc
imul
sub
sbb
mov
stos
dec
add
sbb
jmp
sub
inc
xchg
xlat
stos
sub
mov
je
pop
sub
test
mov
mov
cmps
sti
inc
cmp
mov
pop
inc
push
push
fstp
add
pop
jb
into
aad
or
and
loopne
lea
xlat
aaa
cld
jmp
rcr
sbb
mov
adc
lea
pop
jb
imul
cld
bound
pop
jae
pop
inc
cmp
out
mov
push
mov
jb
mov
mov
pop
jmp
loopne
jle
out
or
push
dec
jb
pushf
mov
mov
loop
icebp
cmp
imul
mov
cmp
inc
(bad)
cmp
aad
hlt
push
sbb
call
jb
loop
test
loop
mov
ret
xor
sub
test
sti
in
mov
push
cmp
retf
push
mov
outs
test
xchg
xlat
mov
push
mov
repnz
pop
jge
loope
jb
bound
mov
imul
cwde
xlat
mov
xchg
xlat
mov
push
xlat
sub
push
icebp
clc
jnp
adc
push
push
dec
xor
xchg
pop
stc
inc
arpl
add
sbb
cmp
jp
pushf
push
inc
add
ja
leave
sbb
add
push
mov
popa
fst
cld
imul
sub
mov
mov
fistp
jmp
xlat
mov
mov
aaa
clc
loop
icebp
gs
pop
inc
fild
pop
dec
repz
pop
cdq
adc
sbb
outs
outs
dec
cmp
dec
xor
pop
icebp
gs
pop
sti
clc
pop
cmps
sti
(bad)
sub
bound
fisttp
xchg
mov
icebp
jge
pop
push
sete
jp
pop
(bad)
xor
adc
imul
mov
jbe
imul
imul
add
inc
imul
inc
xchg
xor
push
xor
push
sub
add
aaa
or
lahf
icebp
enter
cmp
pop
pop
stc
loop
sbb
out
xchg
mov
mov
shl
jb
add
inc
lahf
push
sbb
add
pop
clc
cmp
add
popf
sbb
jb
push
cmps
call
add
xchg
mov
cmp
add
and
rol
dec
loope
fbstp
mov
cwde
idiv
xchg
mov
xchg
inc
imul
test
(bad)
call
xor
pxor
stos
add
mov
jno
pop
call
xchg
(bad)
(bad)
xchg
xlat
stos
sub
xchg
(bad)
(bad)
xchg
shl
les
mov
xchg
fnsave
mov
mov
pop
jb
out
mov
rcr
lea
xlat
aaa
cld
bound
pop
or
pop
inc
cmp
adc
sub
test
aad
(bad)
jg
jb
imul
xchg
push
mov
out
bound
imul
add
sahf
(bad)
(bad)
xchg
push
rcr
lea
xlat
aaa
cld
bound
jb
add
rol
mov
(bad)
call
call
sbb
mov
loopne
mov
push
retf
sbb
add
mov
rol
push
stc
cmp
jnp
fs
pop
imul
(bad)
loopne
(bad)
xchg
pop
jge
(bad)
pop
jb
jmp
(bad)
call
cld
jne
imul
xor
fisttp
call
call
cmp
mov
ror
add
xchg
mov
repnz
(bad)
xchg
xlat
mov
(bad)
sar
mov
jb
out
push
lds
sub
inc
cmp
and
sbb
sub
(bad)
(bad)
xchg
cwde
jbe
cmp
xor
imul
mov
mov
push
mov
pop
jb
out
cwde
jae
imul
add
cmps
loopne
pop
sbb
pop
jb
sti
test
(bad)
call
mov
sbb
add
iret
std
xchg
mov
test
xchg
fnsave
add
js
out
jmp
imul
stos
mov
rol
mov
not
(bad)
jmp
push
daa
add
mov
(bad)
mov
call
push
dec
call
div
pop
jb
push
fnstsw
sub
push
retf
pop
jb
addr16
(bad)
call
mov
sbb
add
xchg
inc
imul
std
xchg
mov
xchg
xchg
fnsave
add
js
out
jmp
imul
enter
add
rol
mov
cmc
xchg
mov
(bad)
jmp
push
daa
add
mov
(bad)
mov
call
push
dec
call
div
pop
jb
push
out
sub
push
retf
pop
jb
jecxz
(bad)
(bad)
call
mov
mov
fbld
jb
ror
adc
imul
(bad)
xchg
xlat
mov
push
icebp
loopne
pop
sbb
pop
jb
aas
stos
(bad)
(bad)
call
mov
mov
fbld
jb
add
js
sbb
push
xor
xchg
fnsave
add
ss
ss
loopne
pop
(bad)
mov
cmp
pusha
cmc
xchg
mov
(bad)
jmp
pop
sbb
mov
(bad)
(bad)
mov
call
push
dec
call
div
pop
jb
(bad)
jmp
lods
pop
add
mov
call
dec
mov
sbb
xor
push
mov
fistp
sub
mov
ja
imul
test
shl
fcom
scas
call
mov
mov
stos
push
div
outs
pop
jb
out
out
(bad)
xchg
push
stc
test
aad
(bad)
cmp
sti
inc
xchg
xlat
stos
add
mov
jbe
imul
aam
mov
jae
loop
icebp
movs
mov
(bad)
mov
fs
add
repz
push
jb
or
mov
imul
imul
out
into
(bad)
(bad)
xchg
push
inc
cmp
neg
xchg
mov
lea
fistp
(bad)
out
mov
nop
mov
mov
(bad)
(bad)
(bad)
xchg
push
stc
cmp
jb
mov
dec
add
pop
inc
cmp
not
xchg
mov
lea
loop
mov
imul
out
pop
jbe
imul
call
loopne
mov
mov
and
or
pop
jb
out
call
or
xchg
or
mov
sti
ret
call
(bad)
repz
dec
jb
out
xchg
call
mov
(bad)
xchg
push
stc
cmp
jnp
fistp
add
repz
push
jb
call
mov
(bad)
(bad)
xchg
and
xchg
mov
in
imul
addr16
in
xchg
mov
jno
imul
cmp
jb
ror
mov
ror
(bad)
fidiv
idiv
xchg
mov
xchg
inc
imul
std
xchg
mov
push
add
mov
or
mov
imul
xchg
mov
(bad)
(bad)
xchg
shl
movs
xchg
mov
loop
xchg
mov
xchg
mov
cwde
sti
push
call
out
add
and
push
mov
mov
test
paddb
div
pop
jb
into
repnz
(bad)
xchg
pop
inc
cmp
repnz
pop
stc
test
mov
dec
(bad)
jg
jb
imul
xchg
fbstp
or
pop
jb
out
test
(bad)
mov
dec
(bad)
cmp
sti
inc
xchg
xlat
stos
xor
mov
jae
imul
mov
mov
jae
imul
ds
cdq
inc
or
jb
lods
fild
call
fcmovnb
call
mov
idiv
xchg
mov
(bad)
(bad)
xchg
fstp
add
pop
jb
into
rol
jo
mov
sti
out
pop
jb
imul
(bad)
xchg
or
aas
xchg
or
mov
mov
sti
ret
call
fistp
imul
jecxz
mov
imul
mov
xchg
inc
imul
test
lea
pop
jb
imul
cld
bound
jb
call
mov
jae
imul
pusha
xchg
mov
lea
loopne
cli
call
mov
mov
test
paddb
mul
imul
call
mov
jb
imul
push
fidiv
or
(bad)
push
(bad)
lods
(bad)
(bad)
call
sbb
mov
loop
test
loop
sub
xchg
mov
adc
xchg
mov
jb
imul
add
jb
outs
mov
lea
xchg
push
sbb
sbb
(bad)
out
mov
call
dec
sti
fsubr
sti
ret
out
(bad)
call
push
repnz
pop
pop
stc
loop
mov
xchg
mov
(bad)
jmp
fist
call
cmps
(bad)
(bad)
xchg
shl
add
cmp
icebp
les
jbe
out
mov
sbb
sbb
(bad)
out
mov
call
dec
sti
fcomp
sti
ret
call
mov
bound
loop
call
fcomi
call
mov
ret
mov
mov
push
fcmovnb
call
mov
fdivrp
xchg
mov
and
loopne
(bad)
call
mov
movs
dec
imul
xchg
xchg
call
mov
test
mov
imul
(bad)
out
mov
stc
test
aad
(bad)
cmp
mov
jle
out
mov
xor
jb
pushf
mov
mov
loop
icebp
mov
imul
mov
mov
xor
(bad)
(bad)
xchg
push
stc
xor
(bad)
(bad)
xchg
push
stc
xor
data16
mul
xchg
mov
lea
mov
not
mov
loop
sbb
add
mov
call
mov
cmp
sti
and
call
or
sbb
js
and
mov
mov
jb
imul
add
call
pop
retf
pop
jb
push
mov
pavgb
and
(bad)
call
pop
jb
mov
mov
cdq
and
imul
cs
mov
mov
ins
push
pop
fild
fsub
or
xor
inc
xchg
mov
sub
cli
aad
lock
imul
test
mov
push
xlat
mov
xchg
xlat
mov
jmp
xor
add
add
adc
xor
push
mov
imul
cmp
inc
imul
xlat
xchg
add
jp
std
sbb
adc
imul
rcl
fsubrp
jnp
nop
sub
sub
pop
jb
call
pop
jb
dec
push
loop
imul
xchg
xor
outs
pop
jb
loop
jae
loop
mov
das
(bad)
xor
outs
pop
jb
loop
xor
imul
cdq
sub
mov
push
jmp
imul
out
jo
imul
imul
sbb
xchg
jp
nop
fistp
and
inc
imul
pusha
imul
inc
imul
push
jle
xchg
stos
push
icebp
loopne
push
sti
inc
lahf
pop
ja
hlt
pop
jb
push
pop
jb
jmp
push
sub
imul
jge
inc
pop
jb
popf
pop
xor
call
add
sbb
push
shl
loop
pop
enter
or
jb
outs
in
inc
imul
add
popf
pop
push
sub
je
outs
mov
push
pop
jb
jmp
or
jnp
xor
sti
push
jb
pop
mov
push
sub
je
outs
mov
jp
jb
shl
outs
add
xchg
mov
scas
sti
shr
push
sub
jmp
popf
pop
push
sub
je
outs
mov
sbb
lahf
scas
jg
pop
repnz
arpl
xor
retf
pop
jb
mov
push
sub
je
outs
mov
(bad)
pop
jb
loop
pop
enter
or
push
ja
neg
jb
imul
fbld
push
sub
je
outs
mov
cli
pop
jb
jmp
or
imul
jb
jecxz
(bad)
call
lea
jmp
or
sub
shr
neg
jb
outs
in
inc
imul
xor
inc
in
inc
imul
in
pop
jb
xchg
xor
call
in
inc
imul
inc
repnz
jb
outs
push
loop
imul
in
neg
jb
outs
in
inc
imul
add
call
pop
jo
hlt
pop
jb
loop
inc
enter
add
push
pop
inc
rol
jg
hlt
pop
jb
jmp
lock
(bad)
xor
fs
jb
stos
and
adc
not
jmp
jb
pop
pop
dec
iret
imul
push
mov
xor
jmp
push
sub
jmp
mov
jb
pop
call
add
cmp
push
shl
jmp
or
sub
sub
enter
inc
adc
jmp
mov
ja
hlt
pop
jb
fidiv
lock
push
add
xchg
inc
enter
mov
rol
jnp
add
cli
inc
pushf
push
les
call
test
mov
test
jb
out
fdiv
imul
imul
sub
push
loop
imul
test
test
jb
pusha
push
cdq
sub
add
call
pop
jo
jle
maskmovq
imul
adc
je
sub
push
jb
and
popf
pop
pop
and
push
push
sub
mov
xlat
add
shl
neg
jb
fstp
popf
sub
loopne
(bad)
aaa
imul
and
pushf
pop
pop
pop
call
pop
jbe
dec
push
loop
imul
loop
xor
jle
loop
imul
mov
dec
cdq
sub
add
retf
inc
imul
sti
push
jb
mov
adc
pop
jb
dec
push
loop
imul
loop
xor
jle
loop
imul
mov
fisub
addr16
xor
retf
inc
imul
sti
push
jb
mov
ja
fistp
mov
into
xor
pop
sahf
xor
addr16
inc
imul
loop
xchg
test
sti
in
or
or
test
lea
add
inc
imul
mov
enter
call
(bad)
xor
loop
test
loop
mov
sub
call
enter
imul
mov
repnz
enter
imul
mov
loop
jb
enter
imul
mov
adc
jb
enter
imul
add
xchg
mov
loop
icebp
in
add
inc
adc
mov
cmp
jmp
mov
idiv
ret
push
lea
lods
sbb
mov
fst
in
imul
test
sbb
add
icebp
gs
pop
repz
pop
jb
call
pop
push
mov
pop
icebp
gs
push
jb
call
sbb
(bad)
xor
pop
inc
loop
xchg
jmp
mov
aaa
mov
pop
jb
loop
inc
fsub
popf
mov
fistp
add
pop
mov
out
mov
add
push
sbb
imul
cs
out
inc
imul
xor
ret
imul
movs
cmp
push
xor
push
mov
adc
imul
mov
out
ret
pop
call
sub
inc
imul
push
(bad)
sbb
add
add
pop
lea
mov
popa
imul
inc
sub
xchg
sub
add
inc
push
lea
shl
in
mov
jb
cs
push
add
xchg
mov
(bad)
sti
ret
xor
sub
test
sti
in
mov
(bad)
mov
stc
inc
xchg
xlat
mov
test
sbb
cs
stc
dec
jnp
aas
clc
call
mov
push
xchg
aaa
call
add
inc
xchg
push
inc
push
lea
xor
lea
stos
and
mov
inc
lahf
sub
inc
lahf
mov
mov
mov
sti
push
xchg
xchg
mov
loop
and
or
cmps
inc
clc
loop
lea
xchg
sub
xchg
mov
jb
ss
daa
mov
or
pop
addr16
fistp
xor
lea
imul
fs
lea
imul
fs
lea
imul
fs
lea
imul
fs
lea
imul
popa
pop
jb
loopne
bound
jg
cli
adc
cwde
aaa
jmp
les
push
les
cmp
inc
imul
push
addr16
out
leave
jb
imul
dec
fs
jge
jecxz
jb
loop
icebp
jmp
mov
adc
mov
jg
dec
ret
sti
clc
call
pop
je
sbb
push
add
mov
jbe
add
xor
cmp
jge
mov
adc
xor
cmp
call
cmps
icebp
enter
adc
or
push
icebp
jmp
icebp
call
loopne
bound
xchg
fstp
mov
jae
imul
fs
data16
mov
fidiv
jmp
inc
call
xor
jmp
dec
add
or
clc
and
dec
push
outs
sub
mov
bound
push
sti
clc
call
pop
jbe
pop
xlat
mov
outs
pop
dec
push
imul
pusha
xlat
mov
ins
jp
push
loop
jno
jnp
cmp
cwde
add
sahf
jne
outs
dec
jae
imul
push
pop
pop
gs
cmp
aaa
xlat
mov
ins
pop
pop
push
loop
icebp
call
imul
call
mov
add
jne
sbb
push
jno
enter
adc
or
push
icebp
jmp
call
dec
inc
jae
call
cmps
sti
adc
pop
jb
imul
ds
and
ins
pop
pop
dec
loop
icebp
call
push
dec
mov
bound
ins
sti
clc
call
pop
je
push
sub
pop
jb
pop
pop
dec
jmp
jb
jae
jns
imul
jnp
adc
mov
jle
jb
imul
jmp
jb
fs
std
xchg
mov
mov
loop
icebp
in
addr16
push
mov
pop
stc
jne
mov
xor
jb
bound
repz
scas
repz
dec
xor
cs
pop
call
lods
sub
add
cwde
js
outs
sub
inc
imul
jnp
nop
add
bound
cli
push
jb
mov
mov
mov
call
pop
push
mov
pop
jge
outs
inc
dec
call
dec
arpl
and
cmp
fsubr
mov
ins
mov
loop
imul
sbb
ins
mov
inc
stc
add
sbb
sub
pop
mov
inc
jne
stc
push
lahf
xlat
bound
jbe
loop
imul
add
xchg
xlat
add
ja
mov
fstp
(bad)
outs
ins
fwait
lea
inc
jae
cmps
sti
adc
icebp
enter
lea
inc
ja
mov
sbb
add
pop
jb
imul
ror
into
inc
imul
les
sub
mov
out
and
xor
push
cmp
mov
lods
call
jb
imul
sbb
test
cwde
div
test
push
mov
pop
jne
(bad)
mov
pop
adc
repz
adc
fmulp
jecxz
mov
jge
out
lods
popf
call
xor
imul
les
loop
fcmovu
xchg
mov
jle
push
loop
add
mov
pop
imul
ret
or
repnz
jb
(bad)
sub
jne
jle
mov
xor
cmp
(bad)
ficom
jmp
imul
xchg
iret
or
cli
push
jb
out
lods
popf
call
popf
call
ja
rcr
add
call
(bad)
jmp
les
stos
mov
push
xchg
sub
pxor
jbe
imul
cwde
mov
jmp
dec
and
mov
pop
push
mov
pop
repnz
imul
push
jb
or
stos
fist
xor
loopne
cmps
fist
ror
jb
imul
hlt
test
push
push
cmp
sti
(bad)
call
pop
sti
mov
cmps
popf
call
jb
push
ret
xchg
xchg
mov
neg
xchg
mov
jb
xchg
pop
push
mov
pop
icebp
movs
xchg
inc
imul
xchg
pop
jb
fidiv
(bad)
fdiv
(bad)
(bad)
call
mov
icebp
movs
jmp
(bad)
jmp
out
xor
lea
stos
mov
stc
xor
fst
test
repz
jb
sbb
jb
sbb
fsubr
bound
imul
xor
mov
jnp
jb
nop
pop
add
sub
call
mov
lea
fistp
add
stc
test
or
imul
test
(bad)
call
jb
fiadd
jmp
inc
push
retf
sub
imul
xor
loop
xchg
xchg
mov
(bad)
jmp
out
test
sti
fldcw
pop
jno
xchg
aad
adc
shl
mov
lea
xchg
lahf
nop
add
xchg
add
mov
mov
fild
mov
imul
sbb
lea
jmp
xchg
fist
sub
sub
or
jb
out
(bad)
lods
call
dec
add
sti
xchg
test
neg
out
(bad)
lods
call
lea
loop
out
xchg
mov
(bad)
jmp
retf
out
xchg
mov
loop
xchg
mov
(bad)
jmp
(bad)
test
inc
inc
cmp
(bad)
call
loopne
cmps
fist
(bad)
call
sbb
(bad)
jmp
fcmovnb
fist
(bad)
(bad)
jmp
xchg
fist
jb
ins
jle
add
retf
(bad)
fist
stc
xchg
rol
jle
add
add
out
mov
(bad)
jmp
mov
jb
(bad)
sub
imul
lea
out
lods
call
xor
fs
(bad)
ror
jecxz
imul
hlt
test
jb
cmp
sti
test
or
add
and
fimul
imul
lahf
mov
jmp
cmp
pop
push
bnd
pop
jge
push
pop
jb
add
imul
hlt
test
jae
imul
xchg
shl
add
mul
mov
(bad)
(bad)
out
std
lods
call
(bad)
jmp
(bad)
in
mov
repnz
pop
mov
data16
jne
add
sub
fstp
jne
xlat
add
sub
adc
add
mov
mov
jle
test
xchg
fdivp
mov
fs
jb
push
dec
stc
add
pop
jb
imul
jmp
sbb
loop
xchg
fist
cdq
pavgb
xchg
xchg
mov
clc
pop
jecxz
xor
call
lods
call
lods
call
movs
mov
(bad)
(bad)
ins
pop
repnz
pop
jb
imul
jmp
dec
add
jb
push
inc
repnz
pop
jb
imul
jmp
dec
add
pop
jb
push
push
repnz
pop
jb
imul
sub
mov
ficom
bnd
pop
push
sbb
call
lea
jmp
fist
(bad)
inc
fnsave
fist
xlat
hlt
test
xchg
xchg
mov
stos
rol
aas
cld
loopne
addr16
outs
dec
lea
jmp
add
pop
add
xchg
pop
push
mov
pop
fwait
cs
mov
popf
call
popf
call
ja
rcr
add
sti
xchg
mov
mov
loop
icebp
in
push
or
jp
cmps
mov
mov
push
dec
add
aaa
jmp
pmulhuw
imul
sub
adc
jb
iret
fistp
clc
jb
jb
out
cmps
lea
iret
inc
imul
add
and
out
add
and
ret
imul
jmp
aaa
imul
mov
les
fs
mov
aaa
imul
maskmovq
idiv
xchg
mov
pushf
cmp
inc
xchg
cwde
aaa
imul
rol
imul
fs
addr16
(bad)
add
repnz
xchg
pop
jge
sub
shr
jge
aad
clc
loop
jae
loop
mov
fstp
jb
call
fidiv
jmp
les
xlat
mov
mov
cli
outs
sub
xchg
pop
pop
or
cmps
xor
fidiv
jmp
les
test
add
pop
icebp
clc
outs
sub
mov
jae
stos
pop
jb
push
fidiv
imul
sub
jbe
cmps
sti
ret
sti
push
xchg
push
les
push
test
js
sub
jne
fidiv
jmp
aaa
imul
psadbw
push
xchg
mov
jb
jge
jno
fisttp
xchg
das
dec
mov
jmp
js
cs
jae
push
stos
jne
(bad)
aad
clc
loop
jae
loop
mov
fstp
sub
jne
fidiv
jmp
les
add
mov
mov
cmp
in
pop
shl
push
pop
jb
mov
aaa
cld
loop
sbb
imul
add
bound
pop
jb
call
add
mov
push
pusha
cs
cwde
ss
push
cdq
push
and
lea
adc
sti
fcomp
mov
xor
xlat
xchg
mov
and
add
and
sbb
test
retf
pop
jb
mov
idiv
mov
lea
cmp
(bad)
xchg
mov
jb
out
jb
xchg
mov
jb
call
xlat
mov
xchg
xlat
mov
xor
mov
add
jmp
add
pop
lea
xor
call
xor
mov
loop
icebp
in
jnp
and
aam
addr16
sbb
pop
jb
imul
add
sbb
add
add
pop
jb
jmp
pop
or
xlat
mov
xchg
mov
jle
pop
pop
stc
inc
fst
pop
sahf
cdq
popa
loop
test
loop
xchg
add
add
mov
stos
dec
and
mov
push
imul
xchg
out
xor
pop
test
loop
xchg
push
push
jb
arpl
aaa
or
sbb
clc
loop
cmp
scas
and
push
mov
jb
cmp
pop
stc
inc
xchg
mov
add
daa
mov
or
inc
loop
inc
clc
loop
sbb
add
jb
imul
imul
imul
xchg
sub
scas
(bad)
add
cwde
icebp
(bad)
xchg
sub
stos
mov
mov
pushf
mov
mov
imul
(bad)
cmp
mov
push
sti
shr
lea
bound
push
cmps
sti
ret
add
push
xchg
or
call
push
and
jp
jb
add
inc
xchg
push
sbb
add
call
ret
imul
test
jae
imul
xor
and
or
mov
dec
dec
mov
xor
push
add
add
pop
sbb
imul
push
push
call
fisttp
and
pushf
mov
mov
imul
sub
pop
jb
imul
cld
cmp
jle
sbb
add
call
push
cdq
push
loop
inc
clc
loop
sub
mov
aad
or
pop
sub
pop
inc
fnclex
sbb
cmp
push
push
hlt
loopne
mov
mov
sbb
sbb
call
add
inc
imul
les
test
add
push
sbb
dec
jp
push
add
sub
pusha
fimul
imul
(bad)
outs
pusha
pop
inc
push
and
fwait
aad
cld
loop
jae
loop
mov
jbe
inc
imul
les
sub
mov
mov
cmp
das
or
sub
mov
repz
xchg
(bad)
cmp
imul
loopne
pop
call
mov
jbe
cmp
inc
loopne
pop
call
push
xor
push
or
imul
inc
xchg
xlat
mov
test
add
leave
test
sti
in
mov
push
cmp
test
stos
mov
pop
jb
push
mov
or
jb
push
mov
push
rcr
add
xlat
mov
fimul
adc
je
lods
sbb
or
add
sbb
outs
imul
loop
scas
mov
push
les
icebp
shl
in
jmp
lea
push
pop
icebp
ins
xchg
sub
jb
jmp
lea
jmp
lea
push
xchg
stc
inc
addr16
lds
(bad)
aaa
inc
pop
jb
fs
ss
push
call
fstp
call
push
paddd
movs
mov
aad
or
jmp
jge
jns
mov
add
lds
push
ffree
push
xchg
mov
mov
enter
paddusb
nop
test
push
jge
sub
push
arpl
push
ins
ja
paddusb
nop
pinsrw
gs
jb
cs
jge
sub
push
arpl
push
arpl
add
mov
sub
mov
into
loop
rcr
inc
imul
push
in
jb
rcl
cld
adc
test
pop
jo
nop
sti
into
inc
or
into
loop
sub
loop
sti
into
xor
sub
loop
sti
into
xor
push
xchg
nop
sti
into
pop
(bad)
into
loop
rcr
inc
imul
ror
mov
mov
into
test
pop
inc
loop
sti
into
inc
or
into
loop
call
into
dec
fdivr
into
loop
push
mov
nop
sti
into
adc
or
sti
adc
into
loop
sti
cmp
pop
sti
into
loop
sti
pop
mov
pop
loop
cmc
bound
add
aad
nop
sti
into
loop
and
nop
sti
aad
or
into
loop
js
loop
sti
fnsave
cmp
and
sub
dec
add
into
loop
mov
aas
loop
sti
into
loop
sub
std
xchg
pop
bound
or
inc
imul
adc
ret
mov
mov
popf
adc
rcr
inc
imul
add
into
loop
xor
loop
sti
into
icebp
clc
imul
nop
pop
or
nop
sti
into
leave
push
in
jb
loop
loop
sti
into
pop
sar
loop
pop
mov
nop
sti
into
and
loop
loop
sti
into
test
sti
into
loop
cli
into
loop
sti
into
sub
aad
push
cld
adc
inc
xor
into
loop
push
loop
sti
into
nop
repnz
into
loop
rcr
inc
imul
clc
imul
nop
pop
or
nop
sti
into
leave
ror
xchg
nop
sti
into
pop
sar
loop
pop
mov
nop
sti
into
and
loop
loop
sti
into
test
sti
into
loop
cli
into
loop
sti
into
sub
aad
popa
mov
into
inc
xor
into
loop
push
loop
sti
into
nop
repnz
into
loop
or
loop
sti
into
adc
jmp
fstp
mov
push
stc
inc
addr16
inc
addr16
aaa
cld
pop
sub
loopne
mov
sub
mov
mov
xchg
mov
add
loop
mov
sbb
add
retf
pop
jb
push
mov
aaa
cld
loop
jae
cmp
sub
jmp
mov
push
pop
mov
xchg
pop
cdq
sub
xlat
aaa
rcl
mov
jne
imul
movs
sti
stc
inc
(bad)
jmp
xchg
xlat
mov
cs
not
movs
clc
add
bound
jb
bound
add
push
les
ja
mov
les
pop
pop
adc
xchg
sub
adc
cli
inc
xchg
cli
adc
sbb
mov
mov
jb
imul
repnz
jge
movs
and
out
or
or
ret
jb
ins
shl
repnz
stos
add
pop
jb
scas
jp
pop
dec
pop
jb
push
mov
aaa
cld
call
sbb
dec
push
cwde
jge
mov
sub
test
sti
in
mov
push
cmp
push
add
mov
pop
enter
mov
loop
test
push
mov
data16
mov
inc
xchg
sti
shl
xlat
mov
ds
cmp
imul
xor
pop
inc
push
lea
mov
clc
xchg
mov
mov
stos
push
neg
frstor
popf
ror
inc
imul
ret
jecxz
add
mov
paddusw
popf
ror
inc
imul
add
iret
inc
imul
repnz
jb
addr16
mov
sbb
add
mov
call
call
jecxz
add
sbb
cmp
mov
aaa
cld
loopne
mov
adc
sbb
inc
imul
(bad)
sbb
cmp
mov
iret
inc
imul
clc
or
push
or
imul
cmps
jbe
mov
pop
stos
mov
xchg
sub
call
loop
scas
call
loopne
scas
paddusb
mov
xlat
loop
mov
xchg
pop
jb
xchg
mov
xchg
xchg
xlat
mov
fmul
mov
iret
inc
imul
mov
sub
retf
pop
sti
fsubr
mov
sub
call
call
jecxz
add
sbb
nop
push
pop
jb
mov
aaa
hlt
loopne
mov
adc
sbb
inc
imul
(bad)
sbb
cmp
stos
add
retf
inc
imul
lock
push
sti
(bad)
loop
jno
fwait
aad
(bad)
sbb
xor
aaa
lock
jmp
add
push
sbb
add
iret
inc
imul
test
xchg
mov
mov
push
dec
mov
jb
fisttp
popf
ror
jecxz
add
push
scas
mov
push
fimul
out
push
jbe
push
mov
mov
mov
(bad)
fs
stos
add
iret
inc
imul
(bad)
xchg
mov
sbb
add
add
pop
sbb
add
add
mov
cmp
imul
in
pop
inc
push
lea
or
lds
pop
sti
lock
mov
mov
push
mov
jb
and
inc
xor
sub
test
sti
in
mov
add
and
loopne
pusha
loop
sti
lock
mov
(bad)
jmp
cwde
repz
rcr
out
(bad)
fild
pop
retf
pop
jb
(bad)
xlat
imul
xchg
mov
test
pop
enter
bound
lahf
test
stos
movs
jne
xchg
inc
pop
retf
sub
loop
cli
xchg
xchg
mov
push
aas
imul
xchg
pop
cdq
sbb
jge
in
dec
or
mov
pop
mov
je
mov
ret
adc
xchg
mov
clc
inc
xchg
bound
mov
mov
cmp
imul
imul
(bad)
xchg
mov
(bad)
call
(bad)
(bad)
cmp
loop
sub
cmc
mov
jb
out
movs
(bad)
call
jb
fwait
ja
mov
xor
push
xor
push
out
mov
xchg
mov
jb
loop
xchg
xchg
mov
sti
(bad)
xchg
sub
jecxz
xor
cmp
sbb
out
cmp
mov
jb
add
(bad)
hlt
xchg
mov
jb
xchg
jmp
std
xchg
mov
jb
outs
sub
inc
imul
(bad)
out
mov
call
mov
add
idiv
xchg
mov
lods
inc
imul
call
pop
jb
jmp
dec
add
lea
add
mov
test
jb
imul
sbb
add
lods
inc
imul
fild
pop
sbb
imul
arpl
add
call
xlat
xchg
push
cmp
mov
aam
loop
inc
clc
loop
lea
jmp
gs
pop
inc
push
inc
push
sbb
add
packssdw
push
xor
call
push
lea
mov
dec
imul
call
bound
push
cmps
sti
inc
xchg
xlat
mov
xchg
xlat
mov
push
cmps
and
push
jb
push
dec
lea
mov
dec
imul
xchg
mov
dec
imul
xor
and
jge
cmps
jae
loop
lea
mov
inc
imul
cmp
(bad)
call
push
lea
mov
add
icebp
les
das
ret
xlat
xchg
push
aam
cmp
sbb
mov
xchg
xlat
mov
outs
xor
lea
dec
and
push
dec
lea
mov
jb
imul
sbb
mov
loop
and
loope
sub
mov
sbb
push
add
push
imul
xor
push
mov
jp
into
push
jb
bound
cdq
aaa
xchg
sub
push
dec
lea
xor
call
dec
lea
mov
dec
imul
pop
push
lea
mov
dec
imul
or
jmp
jb
xchg
sub
add
xor
popf
daa
mov
or
jne
aad
sbb
test
mov
pop
pop
jb
outs
dec
jb
pushf
mov
mov
ins
pop
inc
push
sbb
imul
mov
jp
push
push
jb
bound
cdq
cmp
sbb
cmp
mov
mov
inc
push
jb
bound
mov
outs
push
jb
pop
sahf
cdq
sbb
jae
add
xchg
mov
mov
(bad)
xchg
sub
add
sbb
mov
push
cmp
and
inc
loop
pop
clc
loop
icebp
cmp
imul
call
cmp
sti
inc
xchg
dec
inc
xchg
sub
xchg
pop
mov
and
add
jb
imul
or
xor
imul
aad
pop
jnp
push
pop
inc
rol
sti
(bad)
xchg
imul
sub
mov
retf
outs
sub
mov
and
shl
mov
jb
cmp
push
loop
and
or
pop
addr16
aaa
cld
and
xchg
sub
sbb
mov
mov
repnz
push
pop
cs
pop
fdivr
xlat
add
push
lea
mov
inc
imul
xlat
mov
mov
daa
adc
sbb
mov
sub
adc
jne
push
test
imul
mov
push
pop
sbb
sbb
imul
jge
jb
push
mov
aaa
cld
loop
xor
push
xlat
add
push
call
fistp
cld
and
add
push
sbb
cmp
xor
imul
cld
loop
inc
ret
mov
pusha
outs
mov
ins
fbstp
cld
enter
xor
sub
test
sti
in
mov
push
cmp
loopne
outs
inc
push
lock
scas
sti
(bad)
cmp
sti
inc
xchg
xlat
mov
mov
mov
cmp
xor
stos
sbb
xchg
imul
jge
les
fld
or
xor
scas
add
push
cmps
add
or
pop
cdq
dec
fs
dec
cmp
cmps
retf
sbb
jb
pushf
cmps
sti
(bad)
call
cmps
retf
sbb
jb
and
mov
pushf
mov
daa
lock
icebp
(bad)
or
stc
jge
or
pop
mov
jb
and
add
mov
or
jmp
mov
aad
hlt
xor
sub
test
sti
in
adc
imul
push
cmp
or
jp
neg
push
xchg
xchg
mov
(bad)
std
xchg
pop
sti
lock
scas
sti
(bad)
out
mov
xchg
mov
call
push
sti
ret
bound
fwait
cmp
(bad)
cmps
(bad)
(bad)
xchg
pop
pop
or
imul
cmp
imul
add
neg
xchg
mov
jb
pushf
sti
mov
xchg
mov
(bad)
jmp
jecxz
call
mov
out
xchg
mov
jb
imul
sub
sti
test
cmp
xchg
mov
mov
call
push
sbb
pop
jb
xchg
jb
loop
jae
loop
stc
inc
arpl
test
stos
fnstsw
add
mov
(bad)
xchg
(bad)
std
xchg
pop
mov
and
or
or
or
fnsave
inc
imul
call
call
sbb
rcl
imul
stc
call
ss
pop
lea
adc
add
mov
adc
add
js
imul
xchg
fisttp
ss
jb
or
add
test
mov
xchg
mov
xor
cmp
inc
inc
imul
jnp
ins
dec
imul
loop
mov
mov
js
imul
xchg
fisttp
lock
(bad)
fisub
push
inc
imul
arpl
inc
fild
pop
lea
or
imul
or
out
add
jmp
xchg
fisttp
lock
(bad)
fisub
cdq
inc
imul
arpl
xor
xlat
test
lods
mov
inc
imul
imul
pushf
cmps
icebp
cli
outs
and
loop
jb
sar
test
cmp
iret
cld
xchg
mov
lods
inc
imul
xchg
pop
jb
scas
dec
lea
ss
fild
pop
stc
test
ss
fild
pop
and
add
jb
call
sbb
rcl
imul
stc
call
ss
pop
lea
xor
add
mov
add
imul
call
call
ja
mov
pop
retf
or
jb
pushf
cmps
icebp
cli
outs
and
fwait
mov
mov
xchg
mov
jb
scas
push
sbb
mov
jb
fisub
gs
imul
arpl
retf
or
jb
pushf
cmps
icebp
cli
outs
and
stos
sbb
jb
imul
stc
cmp
iret
cld
xchg
mov
lods
inc
imul
mov
scas
dec
repz
jb
add
add
call
or
std
mov
jb
(bad)
or
sub
(bad)
out
or
jnp
idiv
xchg
mov
lods
inc
imul
jp
pop
jb
scas
jle
pop
sub
mov
repnz
mov
push
xor
imul
add
jmp
xchg
or
mov
cmp
dec
fild
pop
and
add
call
rcl
imul
stc
call
ss
pop
lea
sbb
add
mov
jmp
cli
sub
mov
repnz
movlps
xchg
lods
inc
imul
call
call
sbb
add
push
jb
imul
stc
call
ss
pop
lea
sub
or
leave
lods
inc
imul
call
xor
cmp
icebp
les
loope
imul
imul
pushf
cmps
icebp
cli
outs
and
mov
jmp
call
pop
jb
scas
push
retf
pop
jb
(bad)
xlat
test
lods
mov
inc
imul
imul
pushf
cmps
icebp
cli
outs
and
fwait
mov
mov
xchg
mov
jb
scas
push
call
pop
jb
repnz
mov
jbe
add
adc
imul
xchg
or
mov
cmp
dec
fild
pop
and
add
call
out
sub
imul
mov
sbb
add
test
jmp
movs
shl
add
out
loop
std
xchg
pop
idiv
out
cmps
(bad)
(bad)
xchg
sub
(bad)
std
xchg
pop
iret
mov
frstor
mov
pop
jmp
xchg
fnsave
mov
rcl
sahf
les
pop
sti
xchg
fbld
icebp
(bad)
or
(bad)
mov
cmp
sub
sub
mov
cmp
std
inc
imul
jg
sub
xlat
mov
out
out
std
xchg
(bad)
mov
imul
jmp
mov
(bad)
call
inc
inc
cmp
idiv
xchg
mov
lods
inc
imul
dec
sub
sub
jb
popa
pop
jb
repnz
movlps
add
xchg
mov
jb
call
ja
mov
pop
retf
or
jb
pushf
cmps
icebp
cli
outs
and
mov
jmp
call
pop
jb
scas
push
call
pop
jb
repnz
movlps
scas
xchg
inc
imul
call
call
loop
std
xchg
fidiv
imul
mov
cmps
(bad)
(bad)
xchg
idiv
lea
jmp
xlat
imul
xchg
mov
or
pop
stc
inc
ja
idiv
xchg
mov
jb
jmp
jb
xchg
mov
jae
imul
sub
inc
ja
mov
cmps
(bad)
(bad)
xchg
push
icebp
push
push
jb
out
cmps
(bad)
(bad)
xchg
xlat
imul
xchg
mov
sbb
sbb
(bad)
out
stos
(bad)
std
xchg
push
call
push
dec
call
bound
push
cmps
sti
(bad)
or
mov
dec
add
test
fs
lea
xchg
mov
jb
out
xchg
xchg
mov
(bad)
(bad)
call
scas
(bad)
std
xchg
mov
(bad)
call
inc
lea
loopne
mov
xchg
mov
xor
cmp
icebp
les
xchg
inc
imul
loop
retf
mov
(bad)
jmp
cwde
call
pop
jb
repnz
movlps
add
xchg
mov
jb
call
popa
jb
rcl
imul
stc
call
ss
mov
mov
dec
add
mov
add
add
js
imul
xchg
fisttp
lock
(bad)
fisub
or
imul
arpl
(bad)
call
jmp
test
(bad)
xchg
mov
(bad)
(bad)
xchg
or
lea
xchg
mov
jge
out
mov
lods
inc
imul
call
call
pusha
jb
rcl
imul
stc
call
ss
fisubr
pop
lea
adc
imul
or
out
add
jmp
xchg
fisttp
retf
mov
jb
fisub
xchg
imul
arpl
sub
xlat
mov
repnz
jb
rcl
imul
stc
call
ss
pop
lea
and
add
mov
add
imul
call
call
pusha
jb
rcl
imul
stc
call
mov
imul
imul
pushf
cmps
and
xchg
or
ds
jb
adc
add
mov
xor
imul
add
jmp
xchg
fisttp
pop
mov
jb
fisub
cmp
imul
arpl
pushf
divps
push
jb
rcl
imul
stc
call
ss
mov
mov
dec
add
mov
add
add
jmp
xchg
fisttp
lock
(bad)
fisub
mov
arpl
retf
or
jb
pushf
cmps
icebp
cli
outs
and
into
arpl
sar
test
cmp
iret
cld
xchg
mov
lods
inc
imul
mov
scas
dec
sbb
mov
jb
fisub
sar
xlat
xor
xlat
idiv
mov
cmp
imul
pushf
cmps
icebp
cli
outs
and
fwait
mov
mov
xchg
mov
jb
scas
push
sbb
mov
sbb
les
pop
cmp
imul
pushf
cmps
icebp
cli
outs
and
fwait
mov
mov
xchg
mov
jb
scas
push
sbb
mov
jb
fisub
inc
cmp
arpl
sub
xlat
mov
xchg
add
push
jb
imul
stc
call
ss
pop
lea
adc
imul
or
fld
out
mov
sbb
mov
jb
adc
adc
out
add
jmp
xchg
fisttp
lock
(bad)
fisub
mov
les
sub
xlat
mov
imul
call
pop
jb
scas
push
call
pop
jb
repnz
movlps
scas
xchg
inc
imul
call
call
bound
shl
test
loop
repz
jnp
jb
cmp
iret
cld
xchg
mov
scas
inc
imul
ds
pop
jb
scas
dec
call
pop
jb
repnz
movlps
scas
xchg
inc
imul
call
call
xor
xchg
jmp
call
pop
jb
scas
push
sti
lock
scas
sti
mov
js
imul
xchg
fisttp
lock
(bad)
fisub
lea
imul
arpl
retf
or
jb
pushf
cmps
icebp
cli
outs
and
ret
add
cmp
test
cmp
iret
cld
xchg
mov
lods
inc
imul
cmps
push
pop
jb
scas
dec
sbb
mov
jb
fisub
lds
imul
arpl
push
xor
push
xor
push
xchg
sub
pop
data16
loop
call
pop
jb
xchg
jmp
call
pop
jb
imul
hlt
xchg
mov
(bad)
cld
xchg
mov
(bad)
std
xchg
mov
cmp
lea
xor
imul
call
loop
test
loop
retf
mov
int
imul
xchg
sub
test
sti
in
mov
add
and
push
loop
mov
xchg
pop
cdq
cmp
cdq
iret
jns
pop
jge
mov
xor
out
(bad)
(bad)
xchg
mov
jb
add
xchg
mov
sbb
imul
mov
outs
sub
jae
mov
sbb
add
inc
imul
(bad)
pop
sbb
imul
xlat
scas
(bad)
inc
mov
fsubr
pop
sbb
mov
jb
push
sub
call
inc
clc
loop
sub
in
mov
add
and
loope
adc
retf
pop
jb
mov
test
xchg
mov
jp
push
pop
jge
stos
fst
std
xchg
mov
jbe
push
jb
loop
(bad)
std
xchg
mov
sti
(bad)
pop
test
inc
arpl
mov
lods
pop
and
sbb
add
or
aas
pop
ja
loop
sar
xchg
mov
jb
loop
or
xchg
mov
(bad)
inc
aad
or
ror
std
xchg
mov
call
xor
xchg
xlat
mov
xchg
xlat
mov
xor
imul
je
mov
(bad)
call
sti
test
mov
jmp
pop
jb
ds
stc
lea
mov
js
loopne
add
xchg
mov
call
xor
xchg
ss
sub
jmp
(bad)
call
mul
push
add
mov
xchg
xlat
mov
jmp
cmp
sbb
pop
jb
out
jmp
mov
jb
fild
jb
jmp
mov
xchg
mov
mov
data16
xor
pop
call
pop
jb
out
mov
xchg
mov
(bad)
call
jb
fmulp
(bad)
call
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
faddp
(bad)
call
lea
fcmovnb
std
xchg
mov
(bad)
(bad)
call
ret
xchg
push
mov
data16
xor
pop
sbb
out
mov
call
outs
mov
xchg
mov
mov
xchg
mov
jb
or
test
pop
adc
push
shl
mov
and
imul
sbb
fcmovne
(bad)
xchg
mov
retf
pop
jb
mov
imul
lea
xchg
mov
jb
lods
fistp
add
jecxz
std
xchg
mov
mov
and
out
push
ss
out
retf
mov
(bad)
push
shl
movs
xchg
mov
retf
mov
jb
dec
xor
push
xor
(bad)
out
mov
sbb
or
imul
out
mov
add
(bad)
test
mov
jb
jmp
mov
mov
lods
inc
imul
fsubr
pop
inc
cmp
icebp
les
imul
mov
sti
clc
inc
cmps
sti
(bad)
out
mov
xchg
mov
xor
sbb
add
mov
stos
sub
sbb
adc
add
imul
mov
sbb
xchg
mov
jnp
pop
xor
add
pop
jb
add
add
jecxz
std
xchg
mov
jb
imul
pop
pop
jb
jl
jb
pushf
mov
(bad)
jmp
cdq
sbb
pop
jb
out
mov
and
scas
push
add
pop
sbb
sbb
(bad)
out
mov
call
push
dec
call
xlat
pushf
xchg
mov
jae
loop
cdq
push
call
mov
pop
add
jne
into
ret
xchg
pop
inc
cmp
repz
or
jb
cmp
pop
sbb
xchg
jmp
std
xchg
mov
jb
fdivrp
(bad)
call
stc
test
mov
sti
clc
pop
cmps
sti
(bad)
xor
sub
test
mov
and
loopne
mov
mov
loop
test
loop
or
mov
inc
add
mov
loop
mov
push
push
call
cmp
push
xchg
mov
inc
add
mov
loop
test
sahf
inc
add
mov
loop
xchg
imul
xchg
push
lds
pop
mov
add
shl
adc
sbb
or
xor
push
out
loop
sahf
mov
mov
xchg
xlat
mov
outs
shl
sbb
xlat
add
mov
les
pop
or
scas
icebp
shr
push
pop
pop
jb
push
push
jge
mov
xor
push
inc
add
pop
adc
(bad)
out
je
fs
bound
cmp
sti
clc
push
sti
(bad)
cmp
inc
xchg
shl
push
outs
push
lds
pop
mov
lea
dec
jno
sbb
imul
clc
cmp
push
add
and
xor
push
mov
xor
sti
(bad)
loop
inc
clc
loop
sbb
cmp
pop
inc
push
and
and
add
pop
stc
inc
xchg
add
mov
out
pop
imul
pop
pop
jb
cmp
loope
rdpmc
ins
sti
clc
push
sti
(bad)
lods
fcmovne
loopne
mov
repz
and
out
into
loopne
mov
xchg
call
jb
mov
add
cwde
jnp
fs
add
sti
clc
pop
cmps
sti
(bad)
cmp
(bad)
call
call
sub
ficom
pop
or
push
inc
add
ret
pop
imul
loop
retf
mov
xor
xor
mov
jb
out
loop
call
(bad)
(bad)
cmp
call
sub
pushf
inc
add
imul
inc
fnsave
pop
xchg
jmp
loopne
mov
sub
pushf
mov
(bad)
jmp
cdq
inc
shr
jbe
iret
outs
mov
xor
xlat
xchg
mov
xor
add
and
loopne
jp
sub
rcr
mov
stos
lods
call
mov
add
add
sbb
imul
call
bound
push
cmps
sti
mov
movs
and
fs
(bad)
call
xor
xor
pop
icebp
les
xor
pop
test
loop
sbb
mov
(bad)
jmp
cwde
sti
lock
scas
sti
mov
lods
inc
imul
add
pop
inc
add
mov
cmp
add
jmp
xchg
fisttp
lock
(bad)
out
pop
xchg
call
jb
scas
push
repz
and
and
add
js
imul
xchg
fisttp
cmps
pop
pop
jb
or
add
test
jb
xchg
mov
xor
out
jb
xchg
mov
jb
call
ins
jb
rcl
imul
stc
call
ss
pop
inc
cmp
icebp
les
inc
fild
pop
inc
cmp
icebp
les
xor
xlat
imul
mov
lea
imul
imul
pushf
cmps
icebp
cli
outs
and
fwait
mov
jb
xchg
mov
jb
call
ins
jb
rcl
imul
stc
call
mov
xor
retf
arpl
jb
pushf
cmps
and
xchg
or
pop
mov
jb
(bad)
pop
xchg
call
jb
scas
dec
lea
ss
fild
pop
inc
cmp
push
fild
pop
inc
cmp
icebp
les
shl
pop
retf
or
jb
pushf
cmps
icebp
cli
outs
and
fwait
mov
jb
xchg
mov
jb
call
xor
loopne
mov
jb
call
pop
and
imul
or
jb
pushf
cmps
icebp
cli
outs
and
fwait
mov
jb
xchg
mov
jb
call
xor
loopne
mov
jb
call
ins
jb
rcl
imul
stc
call
mov
xor
retf
arpl
jb
pushf
cmps
and
xchg
or
pop
mov
jb
(bad)
pop
xchg
call
jb
scas
dec
sbb
mov
jb
out
pop
xchg
call
jb
scas
push
call
pop
jb
repnz
unpcklps
scas
xchg
inc
imul
add
push
inc
add
mov
loop
pop
lock
sbb
sbb
(bad)
out
pop
xchg
call
jb
scas
push
call
pop
jb
repnz
unpcklps
scas
xchg
inc
imul
add
xchg
inc
add
mov
add
imul
add
jmp
sub
add
js
imul
xchg
fisttp
lock
(bad)
out
pop
xchg
call
jb
scas
push
repz
inc
dec
jb
xchg
sub
out
pop
xchg
call
jb
out
pop
xchg
call
jb
scas
dec
call
pop
jb
repnz
unpcklps
scas
xchg
inc
imul
add
sbb
imul
or
pop
lods
inc
imul
add
outs
inc
add
mov
rol
xchg
mov
mov
call
jb
rcl
imul
stc
call
ss
pop
inc
cmp
icebp
les
lds
imul
push
cmps
sti
xlat
jmp
(bad)
(bad)
pop
xchg
call
jb
(bad)
pop
xchg
call
jb
scas
dec
call
pop
jb
repnz
unpcklps
scas
xchg
inc
imul
add
cli
inc
add
mov
add
test
or
add
mov
jmp
inc
pop
pop
jb
popa
pop
jb
repnz
unpcklps
scas
xchg
inc
imul
add
cmp
imul
or
out
add
jmp
xchg
fisttp
push
pop
pop
jb
or
add
test
jb
xchg
mov
xor
out
jb
xchg
mov
jb
call
xor
out
jb
xchg
mov
jb
call
xor
push
xor
push
ss
imul
call
loop
mov
xchg
mov
jb
out
jb
xchg
mov
jb
add
mov
cmp
(bad)
mov
cmp
(bad)
cld
mov
(bad)
call
xchg
jmp
fist
jb
stos
push
cdq
or
scas
test
loop
xchg
fist
sub
test
sti
in
mov
add
pop
and
loope
push
hlt
push
sti
clc
inc
cmps
sti
(bad)
call
mov
test
push
and
ret
add
or
aas
pop
jae
dec
(bad)
call
test
loop
idiv
xchg
mov
pop
add
call
stos
(bad)
inc
pop
movs
inc
imul
test
mov
sbb
out
(bad)
std
xchg
mov
jb
add
add
div
icebp
scas
inc
imul
fsubr
pop
sbb
imul
leave
mov
push
or
pop
jb
outs
pop
jb
out
mov
xchg
mov
(bad)
call
jb
inc
or
add
(bad)
jmp
cdq
lea
cmp
div
dec
mov
xchg
fnsave
test
pop
jb
add
scas
inc
imul
cld
xchg
mov
pop
add
div
fisttp
call
sub
call
lea
lods
xor
push
shl
mov
add
imul
sbb
cmps
pop
clc
loop
mov
shl
jb
lods
fist
add
icebp
mov
imul
data16
fistp
add
cmps
jae
loop
inc
cmp
sub
xchg
push
inc
cmp
push
xor
push
xor
push
shl
cld
xchg
mov
call
push
not
fdivp
(bad)
call
retf
pop
jb
mov
idiv
mov
(bad)
mov
jns
xor
add
scas
inc
imul
cld
xchg
mov
pop
add
mov
lods
fisttp
jmp
fbstp
(bad)
out
mov
sbb
sbb
call
loop
jnp
push
inc
sbb
push
je
add
fisttp
mov
and
jb
push
test
out
push
jae
imul
lock
inc
pop
jb
outs
pop
jb
out
loop
xchg
mov
pop
add
mov
xchg
xlat
mov
push
sbb
sub
test
mov
adc
xchg
mov
(bad)
jmp
jge
cmps
pop
jb
out
(bad)
sti
xchg
mov
test
xchg
fnsave
test
pop
jb
add
mov
mov
(bad)
sti
xchg
mov
jb
out
out
std
xchg
mov
(bad)
call
sti
(bad)
jmp
mov
mov
pop
add
jns
sub
push
inc
pop
jb
add
inc
imul
repnz
pop
jb
scas
dec
jnp
push
ja
or
ja
add
ret
out
std
xchg
mov
sti
ret
push
and
fmulp
(bad)
call
icebp
les
push
mov
ret
xchg
fstp
mov
mov
movs
call
test
loop
push
sti
xchg
mov
mov
imul
mul
jb
out
(bad)
std
xchg
mov
jb
add
mov
mov
pop
add
mov
xchg
xlat
mov
fdivrp
(bad)
call
stc
test
mov
sub
test
mov
and
loopne
jp
dec
bound
out
sbb
dec
inc
pop
jb
cs
lea
mov
sub
stc
push
lahf
shl
add
sbb
sub
imul
push
cmp
pop
retf
pop
jb
mov
aaa
lock
and
jb
jb
xchg
sub
aas
pop
jae
sbb
imul
lea
mov
sbb
jb
imul
bound
add
cwde
sti
clc
pop
cmps
sti
mov
jbe
add
sbb
daa
imul
add
add
sbb
sub
add
xchg
mov
adc
add
and
push
ror
je
imul
call
pop
or
xlat
mov
xchg
pop
mov
outs
outs
mov
sub
lea
imul
push
(bad)
(bad)
cmp
call
mov
jae
xchg
mov
(bad)
(bad)
call
mov
sti
lock
add
add
bnd
add
cwde
cdq
scas
xor
mov
add
add
jmp
(bad)
mov
sti
clc
push
sti
(bad)
fs
je
sub
inc
lahf
push
call
stos
and
xor
imul
jmp
xor
or
imul
xchg
fnsave
fld
pop
inc
push
call
inc
inc
push
sbb
add
inc
sub
pop
jb
mov
add
cdq
imul
pop
adc
mov
icebp
clc
data16
pop
mov
cwde
push
mov
xchg
xlat
mov
imul
imul
outs
xor
push
xor
push
ss
imul
add
push
add
cs
pop
jb
lods
xor
push
add
xor
adc
add
test
push
sbb
xchg
imul
inc
pop
jb
push
sbb
xchg
imul
sub
inc
pop
jb
push
sbb
xchg
imul
pop
call
or
xor
call
outs
mov
add
xor
sub
imul
add
xor
cmp
imul
add
xor
or
imul
add
xor
sbb
imul
sub
or
xor
call
or
xor
call
or
xor
call
or
xor
call
pop
mov
xlat
xchg
push
cmp
xchg
pop
les
clc
pushf
mov
mov
xchg
mov
jb
push
jns
add
jle
inc
imul
xchg
pop
sbb
xchg
imul
dec
pop
jb
xchg
mov
jb
jb
jb
enter
imul
xchg
pop
sbb
xchg
imul
sub
push
dec
pop
jb
xchg
outs
mov
pop
jb
inc
imul
and
pop
jb
mov
xor
add
xor
cmp
call
out
imul
add
push
jb
mov
xor
add
xor
sbb
call
in
inc
imul
js
sbb
push
add
xor
add
add
mov
pop
jle
inc
imul
sub
push
jb
mov
xor
add
xor
and
add
mov
xchg
xlat
mov
xchg
mov
jb
xor
add
inc
in
inc
imul
xchg
pop
sbb
xchg
imul
sub
dec
dec
pop
jb
mov
fstp
call
lods
mov
add
xchg
sub
jne
mov
cld
xchg
mov
test
test
dec
ror
hlt
pop
jb
test
je
imul
xor
add
aaa
lock
call
ja
mov
in
inc
imul
loopne
mov
cs
and
fwait
push
sbb
add
add
and
xor
inc
imul
add
call
(bad)
xor
add
xor
add
push
aad
clc
inc
sbb
push
xor
push
add
test
sub
add
std
jbe
sub
add
sbb
xchg
imul
sub
nop
push
jb
cmps
pop
inc
fstp
push
ss
jmp
sbb
mov
jb
mov
xor
add
mov
or
xor
add
add
pop
sbb
add
add
pop
sbb
add
mov
imul
arpl
call
loop
repz
mov
pop
and
pop
mov
jb
ds
add
pop
lea
add
xor
add
imul
push
add
test
fld
pop
sbb
adc
add
push
mov
xchg
imul
pop
sbb
xchg
imul
sub
adc
jge
add
or
ss
imul
sbb
test
add
pop
call
std
xor
add
xor
add
xor
add
shr
jb
retf
pop
jb
add
add
and
test
add
test
call
enter
imul
xor
jb
imul
push
mov
jb
jnp
or
imul
imul
inc
ss
imul
mov
test
add
pop
call
shl
add
xor
add
xor
add
sbb
jb
imul
push
sub
sub
add
std
call
sbb
push
xor
imul
inc
jp
add
sub
push
xchg
imul
dec
pop
jb
imul
push
mov
jb
inc
pop
jb
add
imul
adc
jno
jmp
sbb
mov
jb
out
test
add
pop
call
push
add
cmps
jae
loop
sbb
xchg
imul
pop
sbb
xchg
imul
sub
sub
pop
jb
push
fadd
imul
imul
push
sub
sub
add
std
pop
lahf
sub
xor
imul
push
mov
jb
jnp
dec
push
add
jae
imul
add
sbb
sbb
push
add
or
mov
jmp
add
sbb
xchg
imul
sub
adc
fbstp
imul
add
sbb
pop
jb
imul
add
test
sub
add
std
push
mov
xchg
imul
pop
sbb
xchg
imul
sub
adc
cmp
sbb
jb
test
jb
add
add
ss
sub
fidiv
mov
and
shl
repnz
jb
imul
push
mov
jb
jnp
pop
imul
push
jb
(bad)
jb
imul
adc
test
add
pop
call
ret
xor
loop
jae
loop
sbb
xchg
imul
pop
sbb
xchg
imul
sub
adc
or
dec
push
jb
retf
pop
jb
add
add
ss
sub
fidiv
mov
and
rcl
mov
jb
imul
push
ss
add
sbb
jg
jb
jmp
sbb
mov
jb
push
xor
add
add
and
imul
retf
push
mov
jb
imul
push
lock
sbb
imul
jg
jb
jmp
sbb
push
xor
add
add
and
rcr
push
jb
xchg
ja
mov
in
inc
imul
pop
rol
xor
push
ss
add
sbb
pop
jb
cmp
scas
fild
pop
sbb
mov
jb
imul
xchg
imul
lahf
sub
add
sbb
xchg
imul
sub
sbb
cmp
cmc
imul
jg
jb
jmp
sbb
mov
jb
push
xor
add
add
in
and
shl
hlt
pop
jb
imul
push
mov
jb
jl
jmp
test
jne
jb
jmp
sbb
mov
jb
xchg
xchg
add
pop
call
std
xor
xor
call
test
loop
sahf
mov
sub
mov
or
out
dec
call
imul
fld
pop
lea
mov
not
test
adc
scas
dec
ror
hlt
pop
jb
xchg
ja
mov
in
inc
imul
inc
fwait
push
and
xchg
add
mov
push
imul
xchg
imul
pop
sbb
cmp
sbb
sub
scas
and
xor
push
add
xchg
fld
pop
sbb
imul
add
sbb
inc
imul
pop
push
inc
imul
add
inc
xchg
jne
lock
dec
sbb
pop
jb
cmp
mov
fidiv
mov
and
rol
pop
jb
pushf
pop
dec
add
jb
pop
push
inc
imul
pop
sbb
inc
imul
add
stc
inc
xchg
jne
lock
prefetcht1
push
jb
cmp
scas
fild
pop
sbb
mov
jb
imul
pusha
retf
sbb
push
xor
push
xor
push
xor
push
xor
push
ss
add
sbb
add
or
dec
call
xor
push
add
xor
cmp
call
in
inc
imul
pop
rol
xor
push
xor
push
ss
jmp
sbb
mov
jb
out
test
add
pop
call
ret
xor
loop
inc
clc
loop
sbb
sbb
push
xor
imul
add
add
ss
fisubr
pop
sbb
add
inc
call
adc
add
arpl
mov
jge
jb
push
cmp
imul
add
add
mov
push
xor
push
xchg
imul
je
jb
imul
push
mov
jb
inc
pop
jb
add
add
add
and
xor
inc
imul
push
inc
jb
enter
imul
pop
sbb
push
mov
jb
imul
push
add
adc
lock
imul
add
push
sbb
mov
jb
out
test
add
pop
call
shl
xor
call
in
inc
imul
pop
sbb
inc
imul
jmp
adc
pop
jb
imul
add
test
sub
add
std
push
mov
pop
cmps
sti
mov
shl
add
xor
add
addr16
jb
imul
add
sbb
imul
sub
inc
imul
push
inc
jb
enter
imul
pop
push
inc
imul
pop
sbb
inc
imul
xchg
pop
jb
add
jb
imul
imul
add
inc
imul
fld
pop
sbb
sbb
add
sbb
imul
pop
sbb
xchg
imul
sub
adc
or
mov
retf
pop
jb
add
add
ss
sub
fidiv
mov
push
imul
enter
imul
push
mov
jb
jnp
xchg
add
sbb
imul
jne
jb
imul
jle
sbb
push
add
shl
jb
pop
push
add
pop
lea
add
xor
add
std
imul
xchg
pop
jb
add
add
and
xchg
add
test
call
enter
imul
pop
push
inc
imul
pop
rol
xor
push
add
adc
pop
jb
cmp
loop
sub
add
pop
jb
cmp
add
outs
xchg
sub
(bad)
xchg
dec
jb
add
xor
add
xor
add
sub
sbb
adc
pop
jb
cmp
scas
fild
pop
sbb
mov
jb
imul
jp
add
pop
lahf
sub
add
sbb
xchg
imul
sub
sbb
cmp
pop
add
add
and
xor
inc
imul
add
call
shl
add
xor
add
xor
add
fwait
imul
sub
add
inc
sbb
imul
push
add
call
enter
imul
clc
inc
cmps
sti
mov
or
in
mov
push
cmp
jb
sub
jb
add
add
pop
sbb
imul
push
push
call
fisttp
imul
cmp
pop
sti
ret
loop
jae
loop
and
retf
add
cmp
add
pop
jb
cs
and
mov
sbb
push
jb
cmp
xchg
fnsave
jae
xor
call
mov
jb
aas
xchg
add
call
inc
sti
inc
xchg
push
mov
inc
xor
push
shl
clc
cmp
mov
jae
imul
xchg
leave
mov
retf
pop
jb
mov
aaa
in
loop
sub
push
loop
repz
arpl
add
or
or
lods
imul
imul
mov
pop
inc
cmp
sti
lock
sti
mov
jge
imul
xchg
xlat
mov
jge
pop
pop
adc
jecxz
inc
imul
add
push
imul
jmp
arpl
out
xor
out
jb
xchg
mov
jb
jmp
lea
push
dec
sbb
fistp
(bad)
out
pop
(bad)
call
jb
test
ud0
arpl
out
xor
out
jb
xchg
mov
jb
jmp
lea
ficomp
(bad)
out
pop
(bad)
call
jb
push
mov
cmp
imul
pop
imul
xchg
pop
pop
adc
cmp
inc
imul
add
add
xor
xlat
idiv
xchg
mov
ud0
arpl
out
xor
out
jb
xchg
mov
jb
jmp
lea
push
dec
sbb
out
pop
(bad)
call
jb
push
mov
lods
mov
pop
inc
cmp
bnd
push
pop
adc
pop
rol
test
xor
imul
sub
mov
push
mov
pop
inc
cmp
bnd
push
pop
adc
rol
test
and
jmp
arpl
in
xor
out
jb
xchg
mov
jb
add
add
sbb
inc
imul
fldcw
pop
inc
cmp
jb
sub
ror
xor
add
ret
inc
imul
lahf
sub
bound
jns
add
fnsave
out
fisttp
mov
sub
test
mov
pop
or
sti
and
xchg
xlat
mov
pushf
or
lea
pop
jae
cmp
icebp
les
mov
arpl
push
adc
add
sub
ss
jbe
xlat
xchg
add
inc
xor
sbb
xlat
mov
aad
jb
pushf
mov
(bad)
jmp
cwde
sbb
sbb
(bad)
out
mov
call
jb
fiadd
rcl
add
test
jecxz
cmp
cwde
cmps
(bad)
jmp
arpl
in
xor
out
lahf
not
jb
jmp
cmp
jp
mov
sub
test
mov
adc
inc
scas
sti
(bad)
jmp
cmp
jp
xchg
mov
pop
inc
cmp
repnz
outs
sub
push
xor
out
lahf
not
jb
jmp
cmp
jp
imul
test
or
pcmpgtb
jmp
cmp
jp
inc
mov
pop
inc
cmp
repnz
ins
sub
and
xor
out
lahf
not
jb
jmp
cmp
jp
push
mov
pop
inc
cmp
sti
lock
sti
(bad)
jmp
cmp
jp
stc
mov
pop
inc
cmp
repnz
popa
sub
shr
add
fistp
call
jmp
cmp
jp
mov
test
mov
adc
pop
sti
lock
mov
(bad)
jmp
cwde
repnz
sub
sub
add
fistp
call
jmp
cmp
jp
jno
sub
test
mov
adc
pop
repnz
sub
dec
jmp
xchg
mov
jb
add
rol
shl
in
pushf
mov
lahf
call
neg
pushf
mov
add
fstp
call
call
mov
call
lea
pop
push
icebp
mov
imul
push
outs
or
pop
jb
mov
jb
sbb
xor
cmp
or
fistp
shl
imul
push
mov
jge
cmps
pop
jb
jmp
mov
xchg
mov
jae
imul
call
fistp
imul
xchg
mov
idiv
xchg
mov
stos
inc
imul
cld
xchg
mov
push
imul
or
out
add
xchg
mov
xchg
adc
mov
xchg
pop
push
sub
in
xchg
jo
and
xchg
pop
mov
je
mov
(bad)
sub
iret
clc
xchg
mov
jo
imul
pusha
neg
jb
push
imul
push
out
mov
xchg
mov
jb
jmp
nop
retf
push
out
mov
xchg
mov
jb
call
ss
imul
xchg
cmps
(bad)
(bad)
cmp
sti
lock
mov
(bad)
jmp
cwde
inc
cmp
(bad)
fldcw
pop
inc
cmp
sbb
mov
jb
out
mov
call
dec
inc
cmp
inc
call
fisttp
push
out
mov
xchg
mov
jb
call
shl
cld
xchg
mov
data16
jae
lahf
xchg
add
fisttp
call
call
push
imul
pop
jb
out
mov
mov
cmp
sub
xchg
out
adc
test
loop
cmps
not
mov
xchg
mov
jae
imul
push
add
idiv
xchg
mov
add
mov
add
rol
idiv
xchg
mov
pusha
add
idiv
xchg
mov
data16
neg
pushf
mov
neg
pushf
mov
mov
xchg
mov
neg
pushf
mov
mov
xchg
mov
(bad)
fcomp
test
xchg
pop
add
or
lea
out
mov
xchg
mov
xor
out
mov
xchg
mov
jb
call
mov
call
mov
cld
xchg
mov
popa
add
iret
rcr
bound
push
call
stos
mov
xchg
out
cmp
test
loop
mov
(bad)
out
mov
xchg
mov
mov
xchg
mov
adc
inc
cmp
(bad)
mov
cmp
iret
hlt
xchg
mov
jae
adc
add
idiv
xchg
mov
lea
add
add
xor
push
mov
adc
and
mov
fisttp
push
xchg
jmp
clc
xchg
mov
lea
bound
(bad)
call
call
cmp
add
xor
pop
call
lock
xchg
add
mov
xlat
xchg
mov
sub
add
and
shr
fld
cdq
push
sub
jb
(bad)
out
xor
add
add
jb
jle
jb
loop
(bad)
out
xchg
mov
and
cs
jb
add
(bad)
jg
jb
loop
pop
fsub
popf
stc
inc
arpl
inc
lahf
sub
add
call
add
lods
(bad)
jp
pop
sbb
pop
jb
ss
jb
add
loop
sub
push
jp
jb
pop
dec
jb
cmp
sti
fcomp
sti
ret
add
add
div
xchg
sub
mov
pop
sbb
out
out
pushf
call
lea
xchg
pop
jb
out
inc
jae
imul
je
sbb
or
pop
lea
jmp
sahf
jg
jb
mov
xlat
mov
sbb
mov
(bad)
sub
mov
xchg
cwde
div
sub
jg
jb
fucom
(bad)
mov
bound
lahf
test
stos
movs
jne
xchg
inc
pop
retf
sub
loop
cli
xchg
push
stc
lahf
call
lea
loope
(bad)
mov
repz
push
jb
lods
fcmovnu
in
xchg
mov
jb
loop
test
push
jl
out
repz
call
(bad)
call
mul
add
rol
ss
test
mov
(bad)
cmp
sbb
out
shr
xchg
mov
pushf
call
jb
out
std
sahf
call
lea
imul
cmps
xchg
mov
xchg
fnsave
test
mov
(bad)
cmp
sti
fsubr
sti
ret
add
sub
push
add
rol
ss
sub
inc
hlt
pop
jb
test
loop
inc
fsub
popf
(bad)
mov
out
jbe
sub
and
jb
or
sbb
push
add
add
js
jb
(bad)
jbe
call
jb
jbe
jb
cwde
cmp
push
add
rol
ss
sub
and
push
jb
push
dec
jb
loop
inc
fsub
popf
(bad)
mov
out
repnz
sub
and
jb
or
sbb
push
add
jb
sub
or
jb
scas
push
(bad)
mov
out
mov
sub
or
jb
into
xlat
stos
xor
xor
push
xor
push
ss
imul
add
pop
jb
out
jb
loop
(bad)
push
xor
push
push
call
out
packssdw
inc
ror
inc
cmp
dec
call
bound
push
cmps
sbb
out
retf
ror
mov
mov
(bad)
call
add
inc
ror
sbb
add
pop
mov
loop
add
aaa
mov
out
retf
fcmovnb
out
xchg
mov
jb
out
(bad)
out
xchg
mov
repnz
pop
pop
stc
add
jne
or
(bad)
(bad)
jmp
call
or
add
sbb
push
add
mov
call
jmp
scas
xor
pushf
mov
(bad)
jmp
fcmovnb
in
xchg
mov
(bad)
call
out
xchg
fld
pop
sti
inc
mov
stos
add
shl
loop
mov
inc
imul
rol
or
call
loop
cmps
mov
ss
imul
xor
add
aaa
shr
jb
imul
inc
mov
loop
imul
loop
ret
mov
(bad)
jmp
popf
mov
xlat
pop
jb
imul
add
jb
mov
stos
mov
mov
packssdw
add
sbb
add
add
pop
sbb
add
add
jb
mov
test
call
enter
imul
xchg
push
pop
jb
(bad)
out
xor
add
add
xor
call
call
push
jb
push
pop
jb
jmp
pop
push
sub
fsubr
pop
and
push
jb
loop
fsubrp
xchg
mov
jb
add
add
jae
xchg
retf
fsubrp
xchg
mov
(bad)
jmp
jb
loop
pop
fsub
popf
inc
cmp
imul
xor
inc
imul
fsubr
pop
sbb
sbb
push
adc
call
pop
pop
call
pop
jb
outs
xor
inc
imul
imul
repz
jb
out
(bad)
xchg
mov
jb
movs
xor
add
add
push
call
neg
add
sti
sbb
jb
imul
mov
mov
or
pop
sbb
add
jae
pop
pop
in
inc
imul
sbb
sbb
add
stos
sub
mov
jb
add
add
pop
inc
push
call
sub
ret
daa
mov
pop
jb
cmp
(bad)
and
add
mov
cs
icebp
clc
jnp
not
fisttp
add
fwait
pushf
arpl
cmp
ficom
add
dec
adc
jb
jo
arpl
imul
adc
jb
push
data16
imul
push
jb
add
jb
call
pop
jb
out
mov
imul
fld
pop
lea
add
xchg
xlat
imul
xchg
mov
mov
sub
mov
mov
xchg
call
xchg
std
xchg
mov
(bad)
(bad)
cmp
(bad)
call
bound
jb
out
mov
xchg
mov
rol
mov
or
pop
jnp
pop
xor
test
(bad)
call
xchg
mov
(bad)
call
mul
xchg
mov
(bad)
call
mov
xchg
mov
mov
xor
pop
stc
test
fld
mov
or
xchg
mov
sbb
xchg
imul
sub
jle
pop
jb
xchg
ja
mov
jb
fs
pop
imul
fistp
mov
loop
inc
clc
loop
icebp
and
imul
jo
sbb
add
push
lea
cmp
cmp
push
neg
pop
jb
pop
mov
sub
xchg
mov
jb
loop
pop
clc
loop
rol
hlt
pop
jb
cs
jge
pop
pop
jb
add
(bad)
addr16
jb
inc
pop
jb
retf
inc
imul
push
push
lea
mov
or
pop
sti
clc
pushf
mov
(bad)
jmp
cdq
fwait
add
cs
sti
test
cdq
aaa
sub
dec
add
pop
sbb
pop
push
add
bound
pop
(bad)
xor
pop
push
add
pop
jb
add
pop
jp
add
pop
inc
dec
add
pop
dec
dec
add
pop
push
dec
add
fs
push
imul
xchg
sub
ficom
add
fild
add
pop
dec
dec
add
pop
push
dec
add
push
push
sbb
push
dec
call
mov
(bad)
call
jmp
movs
mov
(bad)
jmp
xlat
fcom
fld
call
loop
xchg
std
xchg
mov
jb
xchg
outs
mov
imul
xchg
mov
inc
call
cmps
push
jb
jmp
(bad)
(bad)
xchg
mov
jb
imul
fsubr
pop
sbb
and
imul
call
add
std
xchg
mov
(bad)
call
lea
jmp
add
les
imul
add
inc
cmp
jb
push
push
jb
out
(bad)
(bad)
xchg
mov
repnz
pop
pop
stc
call
xor
push
out
(bad)
(bad)
xchg
mov
(bad)
(bad)
call
mov
sbb
add
xor
mov
or
lea
add
add
daa
add
jnp
jb
mov
mul
xchg
mov
idiv
xchg
mov
cmp
mov
xor
out
cmp
mov
jb
call
pop
jb
out
(bad)
(bad)
xchg
mov
out
imul
mov
imul
push
xor
push
add
ds
pop
jb
pop
inc
out
imul
in
pop
jb
out
mov
xchg
fnstsw
add
mov
add
add
mov
jb
bound
xchg
imul
pop
call
pop
jb
lods
fisttp
jmp
push
les
loope
ja
xchg
mov
jbe
push
and
imul
mov
call
inc
out
imul
jo
pop
jb
out
mov
clc
test
dec
add
imul
xchg
mov
div
xchg
mov
stos
inc
imul
icebp
xchg
mov
jns
imul
adc
mov
idiv
xchg
mov
repnz
arpl
adc
mov
xchg
pop
pop
and
pop
sbb
add
jb
cmp
add
call
pop
jb
out
(bad)
(bad)
xchg
mov
(bad)
call
jb
out
scas
(bad)
call
jb
scas
dec
sbb
imul
out
mov
lea
sbb
add
iret
std
xchg
mov
sbb
add
test
sbb
push
mov
or
lea
add
add
out
imul
test
fisttp
(bad)
out
scas
(bad)
call
jb
out
scas
(bad)
call
jb
scas
dec
sbb
imul
out
mov
lea
add
imul
std
xchg
mov
sbb
add
imul
or
lea
sub
imul
lea
xchg
lea
bound
push
cmps
icebp
clc
push
xor
push
add
push
arpl
call
in
inc
imul
clc
imul
call
idiv
xchg
mov
(bad)
(bad)
xchg
mov
dec
cmp
pop
sbb
sbb
push
mov
or
lea
sbb
add
repnz
aam
sti
xchg
mov
retf
sub
lea
fild
push
out
cmp
mov
jb
call
pop
jb
out
(bad)
(bad)
xchg
mov
in
inc
imul
mov
imul
push
xor
push
add
call
in
inc
imul
inc
imul
call
idiv
xchg
mov
(bad)
(bad)
xchg
mov
dec
cmp
pop
sbb
mov
mov
pop
imul
dec
shl
adc
imul
test
sar
std
xchg
mov
xor
xchg
push
les
push
pushf
add
imul
xchg
mov
div
xchg
mov
stos
inc
imul
icebp
xchg
mov
jp
imul
adc
mov
add
xchg
mov
mov
mul
xchg
mov
jb
imul
imul
imul
add
in
inc
imul
test
pop
sbb
add
mov
mov
ja
imul
jo
sbb
add
sbb
or
call
bound
push
cmps
sti
ret
add
xchg
xchg
sbb
repnz
jb
fisubr
mov
imul
out
sahf
std
xchg
mov
and
pop
lea
xor
add
push
xchg
mov
xor
xchg
xor
(bad)
(bad)
mov
call
(bad)
call
(bad)
inc
xor
(bad)
out
mov
call
xchg
inc
imul
call
xchg
jmp
(bad)
xchg
mov
jb
pop
sbb
inc
imul
add
pop
sbb
pop
sbb
add
add
ss
nop
sub
cmps
outs
pop
jb
out
scas
mov
xchg
xlat
mov
xchg
xlat
mov
imul
lock
mov
jb
out
loop
sub
enter
cmp
pop
pop
stc
loop
sbb
out
sahf
std
xchg
mov
rol
mov
(bad)
call
add
test
xor
push
xchg
jmp
(bad)
xchg
mov
jb
xchg
outs
mov
xchg
mov
jb
lods
pop
push
mov
pop
jae
imul
add
ins
fistp
push
add
mov
jae
imul
mov
scas
inc
sbb
sub
into
outs
pop
jb
xchg
outs
mov
push
dec
lea
mov
jp
mov
add
sub
test
mov
and
loopne
jp
scas
xor
clc
loop
stc
inc
arpl
imul
mov
and
(bad)
xor
push
push
lea
cmp
add
mov
das
pop
jb
pop
mov
inc
imul
call
rol
mov
add
pop
dec
xor
push
push
lea
sub
add
inc
sub
pop
jb
pusha
mov
jb
or
add
outs
xchg
sub
or
call
test
sti
(bad)
push
imul
pop
pop
or
call
jle
inc
imul
adc
inc
imul
xchg
imul
outs
pop
jb
pop
jle
inc
imul
adc
inc
imul
xchg
imul
sub
cli
push
out
or
pop
test
loop
xchg
pop
mov
inc
imul
mov
out
imul
retf
jne
aad
cmp
pop
jb
xchg
ja
mov
jb
ins
aad
and
pop
jb
pop
inc
out
imul
mov
loop
imul
hlt
pop
jb
ins
aad
js
sbb
cmp
in
inc
imul
mov
jmp
imul
retf
jne
aad
sbb
pop
jb
mov
pusha
call
dec
lea
mov
call
xlat
mov
xchg
xlat
mov
xor
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
in
or
mov
sbb
loop
xor
push
ja
imul
or
sbb
mov
dec
and
movs
cdq
sbb
push
int3
pop
bound
push
jne
mov
inc
fs
or
jle
repz
(bad)
imul
push
sbb
cmp
sub
in
imul
inc
pop
bound
imul
and
pop
bound
imul
and
mov
es
outs
mov
xchg
mov
sub
aad
and
enter
pop
and
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
imul
nop
sti
pop
jb
.byte
