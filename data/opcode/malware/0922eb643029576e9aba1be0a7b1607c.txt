mov
adc
add
jns
add
inc
nop
sbb
adc
dec
outs
je
xor
add
sbb
push
mov
je
imul
add
je
ror
cmp
imul
dec
bound
ins
fnstenv
xor
or
jno
(bad)
ins
mov
(bad)
dec
pushf
gs
popa
arpl
jo
shr
add
dec
add
jmp
or
addr16
int3
loope
jmp
cmc
dec
or
add
pop
or
or
adc
pop
or
jmp
fdiv
cmp
inc
nop
pop
pop
pop
rep
pop
aas
fwait
in
and
lock
jmp
in
adc
pop
call
and
and
xchg
or
rol
or
enter
cld
mov
xor
or
mov
xor
xor
mov
mov
adc
or
leave
inc
push
or
inc
push
cmp
and
sbb
or
enter
jo
push
fs
push
add
mov
sbb
dec
imul
je
movzx
leave
xchg
(bad)
mov
sbb
arpl
adc
push
dec
dec
jle
enter
push
mov
repnz
add
push
add
mov
test
jne
(bad)
out
fucomp
xor
pop
mov
mov
ret
lea
(bad)
inc
add
push
mov
mov
inc
cmp
jne
mov
mov
mov
sub
imul
inc
add
push
mov
mov
dec
pop
test
dec
mov
mov
mov
sti
push
or
mov
mov
pop
or
add
outs
fbstp
or
adc
mov
mov
push
push
mov
mov
mov
mov
add
out
(bad)
mov
inc
mov
ja
or
push
or
ret
ins
jg
adc
ins
loopne
inc
inc
push
add
add
jmp
leave
outs
retf
adc
or
cmp
(bad)
jmp
jo
mov
sahf
mov
add
mov
pop
pop
xchg
clc
mov
div
imul
dec
cmp
jb
mov
add
call
ja
adc
div
mov
push
cmp
pop
mov
jmp
sub
jp
add
cs
mov
stc
sub
jmp
mov
inc
mov
jnp
pop
cli
(bad)
lods
(bad)
stc
mov
lock
aam
or
jnp
test
or
jmp
sbb
sti
loope
(bad)
or
mov
mov
cmp
jle
add
mov
dec
and
pop
inc
dec
add
add
and
push
mov
sub
push
sar
lods
sti
jle
and
jecxz
add
xor
add
fistp
ds
mov
mov
mov
inc
jbe
mov
jne
js
cmp
cmp
jbe
aaa
and
fld
mov
pop
ss
(bad)
loop
ret
gs
fisttp
mov
add
mov
mov
test
out
ja
mov
add
ret
(bad)
ficomp
ja
cmp
mov
fimul
push
add
ret
cmp
fimul
mov
fild
mov
adc
sti
mov
sbb
mov
cmp
dec
sub
daa
fstp
add
mov
ror
lock
outs
or
ret
pop
loop
(bad)
cmp
mov
cwde
inc
cmp
mov
into
cmp
pop
sbb
nop
jbe
mov
cmp
pop
fdiv
add
adc
sti
push
push
shr
jmp
ins
lods
mov
ss
mov
shl
jae
mov
and
jmp
dec
push
jmp
dec
enter
inc
test
outs
jnp
dec
sbb
jae
mov
out
jae
std
xor
dec
mov
add
jb
jecxz
add
ja
fstp
inc
cmp
hlt
sbb
aaa
outs
pop
and
jns
imul
ja
dec
dec
and
pop
push
push
nop
jbe
push
mov
cdq
movs
inc
dec
inc
ds
or
jne
stos
(bad)
cs
and
dec
mov
sub
dec
cmps
pop
push
adc
pusha
movs
cmps
(bad)
pop
ja
ds
fstp
dec
add
cmp
data16
add
mov
fldcw
sub
push
pop
pusha
sbb
or
movs
add
sbb
mov
adc
es
xchg
or
add
pusha
lea
int3
icebp
jne
test
lea
cmc
test
loope
xlat
xlat
cmp
and
pop
test
pop
inc
dec
or
add
adc
dec
mov
or
stc
les
and
jecxz
add
or
fdivrp
cmp
jae
mov
(bad)
sub
inc
pop
and
mov
dec
mov
(bad)
jmp
mov
mov
pop
adc
cmc
adc
cmp
fstp
sub
sub
pop
sti
outs
jl
push
push
mov
push
pop
xchg
ins
in
cmp
or
inc
pusha
(bad)
dec
ss
or
push
push
dec
push
retf
mov
add
jecxz
mov
xor
mov
jo
mov
in
mov
ja
ret
or
add
pop
pop
fist
fimul
xchg
jmp
sti
cs
sub
or
pop
retf
test
imul
mov
mov
(bad)
mov
adc
xor
cmp
mov
pusha
mov
add
mov
pop
xor
sbb
(bad)
and
(bad)
cmp
add
adc
jg
dec
or
mov
inc
in
aaa
fdivr
jns
rol
stc
add
fld
dec
mov
jmp
push
fst
adc
fcomi
mov
or
sbb
jmp
dec
in
sar
les
cmp
repz
cwde
cmc
jne
test
(bad)
jmp
sub
lea
mov
jl
mov
in
or
sar
add
or
sbb
add
inc
out
add
push
loop
xor
std
int
in
add
cmp
or
push
or
dec
(bad)
ds
dec
dec
or
cmp
add
and
pop
inc
sbb
sbb
ret
je
add
outs
pop
jmp
push
enter
ret
pop
push
test
and
sti
push
(bad)
jo
sbb
addr16
mov
ficom
out
movs
(bad)
mov
lahf
add
pop
dec
sub
xchg
add
lock
loopne
add
or
or
adc
scas
push
pop
invd
mov
and
mov
mov
dec
mov
xchg
(bad)
jg
clc
sub
(bad)
mov
clc
or
adc
add
jae
pop
jmp
adc
mov
lea
in
sub
mov
sub
bound
push
cld
add
cmps
jae
lea
rcr
jo
mov
add
xchg
add
push
retf
mov
popa
push
add
sub
jo
mov
aaa
mov
jecxz
fs
fs
hlt
rcl
or
js
jb
pop
mov
sbb
cmp
inc
or
ss
ds
push
or
dec
xor
mov
jnp
add
in
shl
adc
inc
or
or
(bad)
out
xchg
mov
enter
imul
sbb
mov
and
mov
lock
fwait
add
or
push
adc
or
pop
cmp
xor
xchg
or
dec
cwde
sub
add
or
add
sub
jmp
or
cmp
je
xchg
adc
add
jo
(bad)
fsub
ja
outs
add
or
adc
fidiv
in
(bad)
lock
pop
movs
xor
jge
dec
mov
xchg
les
dec
and
and
(bad)
ret
xor
xor
mov
mov
sar
cmp
test
push
adc
or
shl
mov
mov
mov
or
and
call
loope
push
pop
inc
adc
je
jae
sar
arpl
ja
out
in
jne
or
cdq
pop
mov
sbb
jne
movs
sub
jge
mov
cmp
inc
jp
mov
xor
daa
(bad)
lock
fst
(bad)
jp
test
push
rol
(bad)
xchg
mov
or
mov
xlat
mov
lods
sbb
xchg
test
jmp
xor
or
push
mov
jmp
je
sti
clc
aad
or
cld
mov
push
and
pop
nop
in
and
fld
add
(bad)
call
xchg
in
mov
je
mov
ret
pusha
ret
scas
inc
push
shl
sub
mov
es
mov
cmp
dec
push
out
push
sub
xor
or
mov
sub
cs
iret
cmp
idiv
sub
pop
or
or
cdq
sbb
test
xor
mov
and
push
fwait
sub
(bad)
push
lea
xchg
jl
xchg
pop
js
cmp
jne
test
and
ins
cwde
adc
mul
scas
popf
sub
push
test
cmovb
and
fiadd
enter
inc
jnp
mov
push
inc
mov
pop
or
fs
jmp
or
push
(bad)
ss
data16
or
or
cmp
push
stos
jmp
xchg
fstp
add
adc
(bad)
mov
test
je
and
sbb
cmp
inc
mov
js
pop
jl
or
or
cmp
lea
ror
test
je
sub
sbb
push
pop
and
dec
mov
in
mov
mov
loope
sub
jge
test
mov
clc
mov
adc
popf
lods
dec
or
out
aam
or
jno
call
add
pusha
sete
adc
sbb
mov
dec
mov
inc
lods
jne
push
fld
dec
fisub
test
mov
test
retw
mov
push
pop
xor
dec
xor
adc
cmp
cmp
jl
in
fsub
mov
sbb
clc
add
mov
add
aas
les
daa
add
fnstcw
pusha
clc
aam
fbstp
xor
add
pop
xor
push
les
lods
popf
outs
inc
or
fbstp
test
mov
ror
dec
shl
mov
cmp
adc
push
jmp
call
and
pop
xlat
dec
push
fiadd
popa
sbb
pop
sbb
stos
jg
adc
jb
jp
pop
adc
jne
cwde
dec
xchg
xor
xor
adc
mov
jmp
ja
enter
ror
arpl
fimul
add
and
jbe
pusha
adc
xchg
and
cmp
add
xor
dec
clc
das
jo
push
cmp
adc
inc
add
or
xor
pop
sbb
inc
je
and
stc
leave
je
jge
ins
outs
xchg
sbb
enter
or
sbb
mov
sub
(bad)
sbb
jne
dec
pop
fst
jns
movs
pushf
stc
xor
(bad)
lahf
add
mov
xor
cmps
pop
jecxz
cmp
in
xor
xor
stos
or
jge
cmp
cwde
add
jo
mov
mov
iret
inc
or
loopne
mov
jp
ret
push
push
push
cmp
jo
iret
pop
jne
xor
xchg
adc
mov
je
mov
leave
and
mov
pop
add
pop
cmc
or
je
(bad)
test
jle
cmp
jg
sub
inc
push
jl
cmp
jg
add
mov
inc
rep
or
jg
push
xor
jmp
mov
jmp
mov
jae
sub
mov
add
mov
jmp
nop
or
pop
arpl
pop
xor
je
mov
inc
and
idiv
mov
push
inc
and
lea
sbb
std
sbb
(bad)
or
(bad)
pop
fst
xchg
cmp
or
xor
ret
mov
pop
add
and
cmp
jecxz
jnp
add
add
xor
mov
jmp
cmp
xor
fnclex
and
xor
jmp
call
call
ja
dec
aad
cmp
fisttp
push
aaa
cmp
adc
cmp
jbe
mov
mov
or
pusha
pop
sub
loope
sub
and
sub
sbb
ins
or
inc
push
ret
das
mov
jne
push
push
lahf
adc
fmulp
mov
xor
jbe
call
push
sbb
mov
ret
dec
jmp
and
xor
mov
leave
in
or
or
arpl
in
or
sub
clc
xor
or
popa
shl
xor
pushw
cmp
and
mov
add
mov
pop
imul
data16
pushf
dec
inc
jbe
mov
sbb
sub
pop
hlt
push
sbb
lock
jle
mov
and
sti
sar
or
mov
or
lea
mov
out
push
lea
adc
int3
aaa
mov
aad
mov
ins
jne
push
scas
mov
sub
shl
jae
inc
and
jbe
es
push
inc
in
dec
in
call
push
or
imul
les
mov
xchg
push
dec
clc
mov
imul
test
outs
sbb
xor
push
fadd
adc
sub
jmp
and
cs
sbb
mov
pop
sbb
add
inc
sbb
sub
repnz
stc
pop
inc
add
sub
imul
mov
pop
jo
and
loop
ror
jle
push
lea
aam
js
mov
sti
mov
outs
out
pop
movs
jne
dec
add
push
and
and
adc
mov
cmp
pushf
sbb
retf
loop
pusha
fnstcw
jnp
lea
pop
dec
push
test
icebp
std
fwait
ss
jae
cmp
out
push
iret
pop
inc
outs
dec
sub
cmp
mov
jmp
lea
(bad)
iret
push
pop
js
xor
mov
aad
push
loopne
mov
(bad)
cld
dec
cmc
shr
jmp
(bad)
adc
add
aad
adc
(bad)
xor
loope
lods
inc
mov
sbb
test
fisttp
lea
mov
or
cs
fsub
in
mov
mov
adc
pop
ret
arpl
xor
fmul
add
addr16
mov
fld
out
dec
add
jmp
sub
sbb
jae
call
adc
je
dec
mov
pop
add
cmp
in
cmp
mov
xchg
push
sbb
sbb
xor
mov
icebp
mov
(bad)
inc
adc
mov
add
ror
ins
xor
cld
imul
push
push
bnd
lock
sub
adc
fnsave
adc
div
or
adc
pop
jno
push
or
mov
mul
cmp
je
push
gs
mov
or
mov
jns
sub
je
pop
mov
mov
shr
gs
pop
sbb
pushf
aad
test
ja
and
stos
rcr
add
and
push
lahf
xor
lock
and
sbb
imul
sti
dec
xchg
sahf
sub
adc
mov
shl
aas
mov
shr
stos
mov
pop
cli
jp
stos
pop
mov
out
sbb
inc
mov
movs
adc
or
loop
jmp
cmp
js
adc
sbb
dec
xor
fnstenv
add
stos
mov
fnstcw
ret
cmp
jmp
push
adc
dec
mov
outs
sbb
jae
test
adc
or
fadd
test
cmp
je
js
jno
enter
ins
mov
sbb
je
jle
loope
mov
inc
push
pop
mov
mov
sub
or
xor
jae
popa
loope
pop
mov
es
outs
sbb
das
xor
sub
add
dec
jl
mov
js
cmp
mov
clc
in
je
cmp
push
stos
dec
jg
int
inc
mov
jmp
push
sbb
sub
pusha
mov
mov
pop
sbb
test
sub
scas
push
inc
pop
push
mov
mov
pop
jb
(bad)
aas
lods
data16
test
in
fsubr
cmps
mov
ret
push
and
or
shl
xor
pop
push
mov
push
daa
in
lock
xor
xor
push
mov
push
iret
cmp
cs
jne
adc
add
xchg
fadd
xlat
dec
lods
jmp
dec
enter
and
add
rcr
add
shl
sub
cli
add
xchg
es
add
mov
test
xor
jo
mov
in
pusha
mov
mov
or
and
shr
xchg
push
add
sub
test
xlat
sbb
inc
dec
jmp
or
(bad)
outs
cmc
xchg
or
and
jmp
adc
lock
ins
cmp
pop
adc
scas
jbe
ficom
push
bound
bound
outs
fsubr
or
into
ins
jg
lea
add
push
inc
ins
and
test
addr16
sti
sub
je
and
je
jmp
je
xor
daa
adc
mov
shr
add
sub
cld
mov
or
cmp
ja
(bad)
in
add
add
sub
lods
aad
and
dec
sub
jmp
inc
mov
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
or
je
inc
popa
jb
dec
and
push
push
ja
add
push
jbe
ins
test
aad
add
cmp
xor
mov
fbstp
xor
mov
or
nop
mov
add
dec
xor
dec
and
push
dec
je
mov
add
sub
cmp
jg
add
adc
adc
popf
mov
fimul
fistp
fst
add
xlat
nop
and
xor
cmc
inc
xor
sahf
je
fsubr
sub
mov
(bad)
xor
pop
mov
push
and
mul
sbb
add
or
jecxz
add
xor
xor
adc
adc
pop
cmp
mov
cmps
loope
repz
lods
inc
pop
and
mov
lods
jno
std
jl
ficomp
cmp
lea
adc
mov
lods
push
(bad)
xor
fidivr
adc
(bad)
daa
iret
pop
std
xor
adc
fs
or
dec
jge
inc
repnz
leave
jae
xor
sbb
std
push
add
aaa
fstp
fld
adc
out
lds
or
mov
pslld
pushf
or
daa
pslld
mov
adc
xchg
lahf
cld
and
sbb
add
aas
inc
mov
mov
pop
out
cmp
mov
xchg
mov
or
lahf
(bad)
cld
mov
xor
leave
sbb
mov
aaa
jg
jbe
imul
cmp
mov
(bad)
mov
bound
retf
jg
das
cmp
xlat
fadd
outs
xor
xchg
(bad)
call
push
or
push
push
int3
into
sbb
ror
mov
push
pop
test
enter
jmp
outs
movs
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
(bad)
push
xlat
pop
(bad)
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
dec
js
inc
mov
stos
mov
cmp
cmp
(bad)
dec
inc
mov
pop
out
sub
imul
(bad)
div
jl
xor
cmp
call
push
mov
inc
mov
push
inc
mov
push
sbb
sar
(bad)
(bad)
(bad)
push
sub
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
(bad)
(bad)
(bad)
call
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
jmp
mov
add
cmp
in
mov
lds
mov
mov
mov
popa
mov
and
dec
jmp
repz
mov
sub
and
push
pusha
les
outs
xchg
sbb
adc
and
add
es
lea
clc
push
push
or
(bad)
mov
cs
popa
call
call
add
push
xor
(bad)
mov
cmps
mov
loop
pop
cmp
mov
xchg
in
idiv
mov
mov
xor
add
scas
imul
adc
test
test
out
mov
mov
retf
dec
test
das
sub
mov
push
(bad)
(bad)
(bad)
dec
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
dec
popa
ins
jne
fninit
fldcw
cmp
mov
out
clc
mov
psubd
xor
mov
inc
mov
test
push
add
inc
test
imul
push
movs
mov
or
cwde
pop
sbb
les
rol
sbb
add
aaa
test
scas
(bad)
cmc
mov
aam
invd
sub
pop
sbb
jle
and
jo
pop
jbe
pop
mov
or
push
cld
pop
mov
xlat
stos
lods
fcom
push
rcl
test
lock
adc
outs
jmp
mov
jmp
cmp
je
pop
mov
mov
mov
jae
push
and
in
fisubr
xor
nop
sbb
jecxz
pop
fstp
mov
jbe
xchg
pop
pop
inc
dec
xor
mov
xchg
jmp
std
loop
cmp
(bad)
jb
btc
xor
cmp
rol
inc
mov
mov
inc
ds
stos
push
pop
mov
std
enter
xor
imul
cmp
xor
mov
mov
test
je
or
push
cmp
xchg
sub
out
push
imul
fsub
iret
pop
dec
and
loop
xor
jbe
pusha
mov
icebp
add
push
jb
cmp
jne
pop
pop
mov
pop
or
jne
or
adc
push
dec
lds
call
aam
adc
and
test
sti
push
xchg
scas
dec
jle
mov
or
mov
outs
mov
popa
pop
pop
div
pop
cmp
enter
mov
jnp
jecxz
aaa
dec
jl
cmp
pop
jmp
pop
mov
in
mov
mov
cmp
sub
repz
or
test
mov
add
leave
or
pop
sub
pop
fcomp
pop
xchg
cmp
mov
icebp
pop
mov
retf
push
push
push
mov
add
(bad)
sub
aam
pop
adc
mov
imul
pop
jno
nop
inc
or
or
add
sub
sub
cwde
sub
or
sbb
mov
push
jge
nop
ret
clc
dec
mov
adc
push
clc
jmp
cld
js
or
push
fistp
test
outs
sub
ja
cmp
(bad)
cmps
shl
loopne
(bad)
in
push
call
(bad)
add
add
xchg
inc
or
pop
add
push
sbb
push
push
dec
(bad)
sbb
jmp
cmp
jne
movsx
inc
inc
jmp
push
xchg
xor
jge
mov
fwait
in
xor
jbe
sbb
pop
add
enter
add
ja
aaa
dec
jne
fisub
push
inc
pop
in
push
jmp
xchg
cmps
sub
das
push
test
out
fistp
sbb
sub
cmp
cli
out
push
je
movs
push
and
ja
add
add
push
push
fild
pop
cmp
addr16
mov
xor
cmp
jbe
ret
mov
js
push
adc
std
push
cmp
pop
cld
inc
clc
jo
dec
add
jecxz
adc
push
sbb
sub
mov
mov
push
push
fcomp
mov
sub
push
mov
xchg
sti
sbb
add
sub
add
mov
sub
jnp
fstp
adc
sbb
mov
test
clc
out
push
dec
das
inc
mov
inc
add
icebp
addr16
inc
or
mov
mov
ret
pop
ss
or
mov
dec
test
pop
push
push
push
push
push
inc
pop
(bad)
sub
pusha
int3
(bad)
pop
dec
pop
pop
inc
lea
(bad)
in
fld
or
pusha
add
lahf
sub
cmps
rol
call
not
inc
sub
or
mov
mov
jp
sub
pop
lea
ss
lods
mov
fs
popa
sub
adc
loop
ins
shr
mov
add
add
ret
add
add
enter
xchg
outs
out
mov
pop
cmp
push
sub
jmp
std
pop
adc
pusha
add
call
xor
push
cmp
xchg
sub
je
sub
add
cmp
std
push
das
daa
cmp
mov
jmp
mov
es
push
iret
jmp
bndldx
into
jmp
mov
and
(bad)
or
dec
ror
push
or
sbb
sar
mov
jno
push
aas
je
sub
xor
sbb
jecxz
int3
cmp
push
adc
sbb
cli
cli
cld
imul
push
(bad)
cld
out
or
jge
loope
cld
sub
mov
pop
sub
out
mov
dec
cwde
inc
or
xor
lds
mov
or
in
je
push
aam
xor
pop
mov
sbb
add
jns
es
push
cmps
cdq
or
add
jmp
imul
mov
adc
inc
ss
cld
ss
rep
mov
dec
mov
inc
fiadd
call
adc
adc
or
pop
xor
push
add
das
in
(bad)
sbb
std
push
jne
pop
pop
pop
mov
xor
mov
jle
pop
xchg
cmp
jle
aaa
sti
or
fild
sbb
repz
add
cmp
mov
sbb
mov
out
das
dec
mov
sub
leave
hlt
out
inc
movs
mov
ret
idiv
mov
lea
scas
push
mov
add
dec
rol
jmp
pop
xlat
sub
add
cmps
sbb
mov
or
call
add
mov
inc
add
aam
sub
xor
ror
test
dec
sti
cmp
(bad)
scas
mov
mov
mov
sub
out
dec
cli
out
jmp
int3
mov
neg
sbb
inc
scas
sbb
cmc
pop
sbb
push
add
mov
mov
imul
scas
inc
dec
jo
daa
fcom
cmp
jge
ins
adc
cmp
mov
inc
mov
mov
jge
push
push
jnp
push
inc
inc
push
pop
xor
cmp
ja
cmp
mov
add
xlat
pop
add
out
jle
mov
inc
xchg
cmp
push
cmp
push
pop
ror
(bad)
call
out
movs
adc
dec
push
test
int3
adc
call
rol
cs
add
sub
cmp
dec
test
cmp
jp
push
cmp
adc
les
in
test
xor
icebp
sbb
or
jg
hlt
or
adc
sub
out
mov
lds
cmps
test
(bad)
jmp
aaa
inc
sbb
pop
push
lods
std
add
adc
inc
mov
jmp
adc
enter
sbb
add
or
popf
or
push
lahf
daa
and
push
pop
ja
inc
jg
pop
inc
jo
add
push
je
out
or
pop
add
(bad)
xchg
dec
bound
sub
test
dec
sar
push
ins
loopne
push
outs
and
mov
pop
mov
mov
(bad)
push
cld
jb
adc
imul
clc
xchg
stc
mov
mov
mov
ins
or
xor
push
jmp
push
cmp
add
add
jp
or
scas
xor
jl
call
(bad)
sar
(bad)
cld
lods
fistp
or
outs
add
cmp
icebp
cmp
sub
mov
mov
punpcklbw
retf
push
sub
stos
mov
rol
in
gs
(bad)
xor
push
sbb
call
jecxz
lods
loop
inc
pause
xor
lods
icebp
inc
outs
push
and
or
cmp
mov
in
je
add
mov
mov
in
arpl
jmp
push
cmp
mov
add
pop
add
sub
or
in
add
cmp
mov
jl
pushf
mov
inc
dec
nop
push
aam
pop
fsub
rcr
fwait
mov
sbb
loope
aaa
out
inc
dec
add
add
cld
ret
sbb
jnp
std
or
and
mov
push
cld
add
jle
push
sub
mov
lods
dec
adc
adc
push
adc
jl
sub
iret
inc
popa
inc
pusha
cmp
gs
imul
mov
xchg
pop
hlt
addr16
push
ror
sbb
addr16
sahf
mov
dec
mov
cli
bound
push
push
pop
lds
mov
dec
clc
inc
cmp
stc
std
jo
retf
mov
arpl
jno
(bad)
sbb
jmp
cmp
test
scas
mov
pop
cld
dec
jmp
mov
xor
(bad)
iret
push
mov
dec
call
sbb
add
dec
jmp
push
mov
sti
inc
pushf
sbb
test
dec
mov
jmp
push
or
dec
pop
xchg
pop
jmp
jmp
aaa
xor
ret
mov
cmps
add
shl
jmp
shl
add
push
sbb
dec
lea
jne
dec
je
in
add
ja
cmp
or
pop
add
lahf
loop
jo
pop
or
add
add
xchg
in
sub
sub
inc
pop
cmp
jne
push
out
fisub
jmp
add
jmp
in
fdiv
push
adc
ss
jmp
or
push
cmp
mov
jb
adc
inc
and
add
je
jae
aad
imul
adc
pop
or
repnz
and
adc
in
push
mov
aaa
call
xor
pop
cld
and
fild
(bad)
sbb
fidivr
sub
arpl
mov
mov
cwde
or
push
in
sub
mov
or
data16
lea
jl
xchg
jge
pop
inc
mov
sub
fnstcw
and
stc
add
(bad)
fcom
push
push
or
je
stc
cmps
cmp
inc
cmp
mov
mov
push
fimul
sbb
jo
ja
sub
mov
sbb
in
scas
inc
arpl
inc
mov
pop
aas
adc
dec
sub
pop
(bad)
push
sbb
inc
sar
dec
xor
mov
and
mov
das
jp
or
push
in
push
mov
aam
pop
xor
jmp
daa
in
xchg
cli
dec
cmp
jl
(bad)
add
mov
sti
imul
fisttp
retf
pusha
mov
mov
pop
jmp
loopne
fist
push
lods
mov
or
cmp
push
popf
mov
sti
pop
mov
rcr
popf
push
pop
rcl
call
push
sbb
call
inc
mov
mov
sahf
scas
aam
js
mov
add
pop
and
jae
pop
mov
iret
leave
add
and
cmp
pop
jb
cmp
mov
sti
out
xchg
or
movs
pop
mov
(bad)
pop
popa
cmc
adc
adc
nop
outs
xchg
dec
lahf
popa
adc
inc
push
sahf
dec
fild
rcl
pop
fwait
add
jb
push
push
or
inc
xor
jne
inc
inc
data16
daa
daa
dec
rcr
data16
and
xchg
mov
or
ja
stc
pop
mov
xor
jbe
dec
cmp
dec
mov
dec
icebp
sub
cmp
ucomiss
sbb
push
add
add
dec
or
mov
pop
jo
stos
jae
dec
cmp
bound
adc
nop
cmp
leave
inc
push
xchg
das
adc
push
fwait
aas
push
mov
jmp
xchg
jl
dec
pop
sub
shr
adc
push
lahf
jp
test
out
iret
push
sub
mov
ucomiss
mov
inc
jmp
cmp
out
pop
push
push
cmp
je
cmp
xor
jmp
(bad)
dec
adc
dec
clc
jmp
or
ins
fld
or
adc
jmp
push
mov
mov
lds
pop
cs
jg
int3
mov
sbb
pop
ins
sbb
scas
adc
(bad)
mov
inc
inc
push
fmul
ror
adc
pop
or
adc
rcl
xchg
xor
enter
ds
imul
pop
jbe
test
pop
lods
fcomi
ins
mov
data16
push
xchg
out
fistp
ret
retf
sbb
mov
xchg
ja
cmp
jmp
adc
pop
enter
pop
adc
jmp
cmp
jo
cmp
mov
mov
sbb
sbb
adc
jmp
sub
dec
or
inc
cmp
sub
sbb
loope
adc
inc
add
mov
jno
cld
ficom
add
sar
ror
ret
movs
addr16
adc
stc
sub
retf
retf
(bad)
add
je
or
dec
or
data16
je
xor
packsswb
xchg
pop
mov
mov
lahf
sub
fldenv
pslld
cmp
lea
push
das
xor
stc
clc
push
add
je
ins
test
and
pushf
test
pop
fwait
lods
push
pop
pop
add
cmp
sbb
dec
pusha
adc
adc
mov
loopne
dec
xchg
jmp
dec
jne
rcr
adc
xchg
mov
adc
psadbw
enter
popa
jge
mov
push
jb
sub
mov
jne
push
inc
xchg
cmp
sar
adc
sar
loop
cwde
cmp
sbb
sbb
push
std
add
push
pop
and
and
jae
and
(bad)
loop
xchg
inc
add
cmp
fild
xchg
addr16
in
gs
pusha
sbb
adc
or
jmp
cmp
or
pop
aas
mov
or
cmc
inc
cld
push
repz
mov
mov
and
add
or
pop
pop
aam
sbb
xor
pop
das
sub
loop
dec
sbb
leave
(bad)
or
dec
or
(bad)
outs
dec
pop
pop
jns
neg
test
ja
iret
add
or
fincstp
xor
loopne
cmp
(bad)
cmp
not
loopne
rcl
(bad)
rol
(bad)
fistp
out
jb
jmp
fidiv
sub
sbb
inc
loop
pop
test
mov
inc
xor
div
dec
pusha
cmps
cs
repz
mov
push
rcr
js
sub
jl
cs
aaa
xchg
jge
(bad)
stc
and
add
jl
(bad)
xchg
push
adc
shrd
shr
ret
or
push
loop
push
inc
call
sbb
cmps
jae
das
jb
iret
pop
xlat
loopne
pop
push
mov
(bad)
repnz
pop
add
pop
aaa
mov
dec
jg
dec
push
cmp
arpl
mov
push
sbb
inc
xchg
inc
fwait
xor
add
dec
clc
inc
mov
cmovbe
add
dec
ins
aaa
cmp
push
inc
push
call
pop
bound
imul
es
pop
mov
inc
in
cmp
je
pop
call
or
cmp
xor
xor
jp
sbb
movs
enter
scas
dec
add
outs
xor
dec
lock
xor
or
push
mov
push
push
mov
lock
inc
in
jge
bound
pop
add
sub
in
inc
dec
inc
ins
ins
test
stos
xlat
(bad)
(bad)
into
sub
xchg
ds
dec
dec
shl
out
add
dec
add
fistp
adc
add
push
lock
ret
in
(bad)
push
ins
add
push
cmp
jmp
add
dec
dec
cmp
fcmove
push
mov
add
or
add
ret
cmovg
ret
xchg
jne
mov
loop
in
push
and
addr16
ins
add
xor
mov
clc
xchg
or
(bad)
rcl
cld
push
mov
std
mov
out
add
xor
inc
fwait
sti
push
rol
cmp
mov
push
xlat
cmp
jle
bound
ins
repnz
jge
add
xor
sub
mov
or
or
test
call
adc
stos
hlt
out
and
add
fidivr
hlt
add
inc
push
push
dec
pop
ret
xchg
pop
ret
push
adc
sbb
dec
shl
xor
ror
(bad)
data16
add
nop
mov
xchg
lods
call
daa
jp
adc
jb
pop
inc
cwde
or
lds
push
sbb
add
push
cmp
ds
push
and
inc
jmp
pop
mov
mov
xor
(bad)
in
sbb
clc
movs
cmp
jne
push
inc
pusha
jae
and
push
jno
call
ret
movs
bound
stos
jno
jo
mov
inc
ins
mov
adc
mov
das
and
jnp
addr16
adc
mov
in
push
push
or
ret
xor
icebp
add
ret
jmp
push
cli
and
test
cmp
jne
(bad)
arpl
ins
dec
mov
add
adc
dec
push
mov
cmp
lock
pop
inc
push
inc
inc
std
sbb
lods
test
pop
mov
xchg
loope
xor
das
cld
ins
mov
ds
pop
js
pop
idiv
jo
stos
or
mov
mov
neg
(bad)
mul
rcl
repz
(bad)
pop
in
lods
sbb
sub
lea
pop
addr16
and
popf
(bad)
sub
rol
rol
cli
cmps
jg
int
mov
xor
inc
mov
div
jae
adc
pop
outs
std
cmp
add
or
add
inc
cmp
dec
jg
mov
dec
push
ss
mov
sub
pop
aas
or
test
push
es
cmps
ret
imul
gs
xor
cs
ins
cmps
inc
gs
outs
out
out
jmp
push
popa
je
dec
popa
ins
gs
adc
adc
mov
outs
mov
fisub
inc
inc
out
adc
sbb
pop
xchg
in
push
mov
push
fs
and
and
test
mov
cs
jne
sbb
or
(bad)
mov
pusha
addr16
mov
xor
mov
fcomp
ud2
mov
repnz
jl
sbb
adc
daa
mov
push
repz
adc
mov
mov
jecxz
repz
add
xchg
popf
sar
pop
jmp
dec
cmp
push
(bad)
fdiv
or
pop
mov
xor
in
mov
push
ret
test
pop
test
push
pop
mov
and
ss
js
fs
aaa
repz
cs
or
add
fs
movq
ja
jle
or
jb
xlat
push
arpl
gs
or
rcr
sahf
les
in
ror
sbb
mov
add
cmp
push
(bad)
mov
mov
rcl
mov
ficomp
mov
loopne
(bad)
lahf
(bad)
mov
aam
sbb
pop
add
adc
pop
scas
sub
cwde
inc
or
xor
sub
and
xchg
stos
pop
mov
clc
sbb
sbb
mov
(bad)
sub
jne
icebp
pop
into
cmp
push
mul
adc
inc
pop
mov
pop
or
ins
inc
pop
cmp
cmp
inc
shl
push
sar
adc
pop
jae
mov
(bad)
rcl
cli
retf
or
cmp
jg
add
shl
fcom
adc
fadd
fisub
enter
xchg
pop
sub
es
and
dec
je
push
jb
sub
fmul
dec
inc
enter
xor
sub
les
or
mov
adc
inc
mov
in
mov
add
push
or
dec
pop
xor
push
les
cmp
adc
(bad)
push
mov
jp
jl
add
js
scas
add
dec
pop
inc
dec
jb
mov
mov
aam
xchg
outs
cmc
jg
mov
mov
dec
inc
cmp
ja
mov
inc
jmp
shr
ret
stc
jbe
lea
cmp
out
push
shr
or
mov
or
and
or
or
or
push
xor
pop
sahf
addr16
add
push
rcl
xor
dec
or
pop
sub
mov
mov
xor
imul
and
sbb
or
fidiv
add
jecxz
push
loopne
es
dec
imul
fcomi
hlt
inc
sbb
adc
ficom
inc
jnp
and
pop
xor
jmp
xor
test
int3
dec
mov
hlt
xchg
or
inc
test
je
xchg
jae
fstp
loope
adc
je
push
mov
shl
int3
sub
rol
mov
out
add
and
or
mov
sub
lea
and
adc
jmp
fwait
pop
mov
inc
inc
dec
jmp
cmp
jae
or
add
push
mov
xchg
inc
and
cmps
ret
ins
int
adc
cs
sti
(bad)
push
jb
xor
sbb
or
xor
adc
mov
xchg
jl
sbb
rcr
in
mov
nop
out
shr
inc
je
or
cmp
adc
call
push
pusha
nop
mov
jae
and
push
retf
(bad)
fmul
dec
sbb
or
fmul
jmp
or
in
dec
rol
int
fiadd
xor
cmp
stos
ja
imul
je
adc
mov
add
mov
nop
xor
adc
clc
vmwrite
or
cmp
cmp
cmp
and
pop
cmp
test
(bad)
cs
cmp
fs
add
xor
and
(bad)
push
lahf
add
add
or
and
jge
push
add
in
mov
js
(bad)
mov
mov
and
cmps
add
enter
mov
xchg
xor
jg
pop
lea
push
push
shr
lock
std
fidiv
les
and
fnstcw
inc
mov
adc
pusha
inc
inc
sbb
nop
paddusb
loopne
add
ret
pusha
data16
pop
icebp
push
clc
pop
inc
fwait
movs
outs
sub
add
(bad)
add
inc
add
dec
ins
sahf
inc
add
test
and
push
xor
sub
sbb
jbe
dec
mov
or
add
add
sub
mov
aad
cmp
mov
neg
adc
cmp
jbe
cmp
pusha
add
mov
out
and
add
sub
cmp
push
aam
xor
and
add
pop
sub
mov
sub
push
int3
(bad)
test
pop
or
lock
or
ds
xor
push
inc
or
fild
mov
clc
pop
add
mov
in
adc
ss
inc
adc
cmp
cwde
mov
inc
hlt
mov
push
mov
(bad)
adc
ds
inc
push
push
les
popf
jne
mov
push
shl
jl
or
sbb
lods
pop
leave
jo
cld
das
cmc
bound
neg
arpl
jb
aaa
sub
mov
xor
ins
inc
push
fwait
sub
adc
cmp
sbb
clc
hlt
lock
in
call
push
loopne
fcom
ror
inc
push
sbb
rol
fs
mov
fs
inc
lods
test
fs
inc
push
mov
push
sbb
mov
jl
je
sbb
ins
push
push
pusha
pop
pop
nop
inc
push
sbb
or
adc
sbb
xor
enter
xchg
jne
xor
imul
add
inc
sti
sub
nop
and
xor
or
adc
cmp
or
enter
sub
enter
and
nop
add
sub
mov
addr16
sub
mov
and
arpl
xchg
ins
nop
inc
push
sbb
pusha
inc
push
sbb
push
dec
pcmpgtb
push
cmp
data16
sbb
nop
add
cdq
xchg
add
add
in
lock
icebp
nop
inc
push
sbb
repz
inc
push
sbb
test
stc
cli
sti
sbb
cld
std
(bad)
fs
inc
push
jmp
loope
inc
push
sbb
jecxz
inc
push
sbb
out
sbb
jmp
nop
inc
in
in
out
fs
inc
push
out
rcl
nop
inc
push
sbb
rcl
inc
push
sbb
xlat
push
sbb
(bad)
fistp
fs
inc
(bad)
fisub
push
ffreep
rcl
les
sbb
mov
leave
retf
fs
inc
int3
int
fs
inc
push
iret
mov
nop
inc
push
sbb
sbb
mov
sbb
mov
nop
inc
mov
inc
push
mov
push
sbb
sbb
cmps
xchg
sbb
test
dec
push
leave
imul
cmps
and
and
lahf
xchg
in
loop
aad
xor
jg
or
arpl
je
outs
outs
nop
pop
test
or
in
pop
jns
lods
inc
dec
gs
jo
in
pop
xchg
sbb
sub
inc
push
pop
(bad)
jg
inc
dec
jne
dec
dec
gs
outs
jb
sub
mov
push
leave
mov
pop
push
mov
std
or
outs
pop
inc
jb
pop
mov
enter
je
pop
mov
xlat
clc
push
jb
sbb
clc
push
imul
(bad)
imul
pop
or
prefetch
sbb
mov
mov
mov
ins
jge
pop
and
jbe
jns
mov
mov
jns
push
or
and
addr16
push
pusha
mov
dec
outs
jbe
jb
ins
ret
int
ja
pop
pop
arpl
dec
pop
dec
pop
fs
mov
adc
mov
outs
jo
mov
jbe
imul
mov
push
ins
fxch
jo
arpl
push
xor
and
imul
and
sbb
pop
cmp
outs
push
outs
fs
nop
je
pop
das
xchg
push
pop
xchg
pop
push
outs
imul
gs
pop
or
ins
(bad)
bndstx
inc
popa
jae
outs
sub
pop
cmc
adc
or
xchg
mov
pop
cli
adc
das
pop
retf
adc
arpl
jae
push
mov
nop
add
jnp
or
imul
ins
gs
inc
jno
pusha
add
xchg
cmp
je
arpl
nop
pushf
pop
lock
xor
pop
mov
hlt
push
pop
rol
adc
push
popa
or
jns
adc
push
jb
shl
outs
ret
push
rol
lea
pop
mov
test
push
bound
sti
lods
mov
jb
mov
push
adc
or
stos
mov
jbe
pop
push
dec
(bad)
or
mov
xadd
push
adc
gs
test
and
fdivr
adc
cs
xor
scas
xchg
add
dec
pop
or
push
nop
pushf
sub
repz
and
jnp
cmp
add
and
mov
inc
fbld
pop
inc
dec
test
jle
adc
adc
jb
mov
loop
add
add
ret
or
mov
pop
xchg
mov
in
cmps
mov
call
mov
mov
imul
sbb
idiv
sbb
push
loopne
sbb
fbstp
mov
pop
xor
dec
and
shl
adc
aaa
mov
push
ficom
mov
ins
loope
outs
arpl
popf
push
dec
test
imul
mov
adc
xrelease
add
adc
sbb
mov
pop
retf
mov
mov
add
mov
pop
mov
push
cmps
lds
xor
mov
rcr
sub
aaa
lock
pusha
adc
jp
add
fcom
stos
mov
inc
dec
pushf
jmp
pop
call
rcl
cmp
or
xor
or
cld
mov
cmp
jbe
cld
das
adc
cmps
je
mov
pop
add
jl
mov
(bad)
jns
jg
(bad)
(bad)
out
and
sti
je
movzx
add
sub
pop
outs
pop
jle
call
dec
adc
cmp
jne
lea
dec
loope
sub
xchg
mov
aaa
lds
mov
pop
les
or
push
push
int3
test
icebp
xchg
das
adc
mov
shr
ss
pop
xchg
test
mov
shl
(bad)
and
shl
jmp
lock
repz
arpl
cmp
jbe
or
mov
repnz
inc
jl
mov
adc
clc
xor
push
test
fisttp
leave
jne
clc
out
pop
sub
jns
neg
addr16
sub
mov
lahf
push
push
xor
div
dec
lahf
cmp
jb
(bad)
jg
mov
or
pop
pop
sub
sub
jbe
add
mov
sub
scas
std
ja
jmp
mov
dec
jne
xor
in
adc
leave
push
aaa
dec
(bad)
repnz
dec
in
pop
imul
cmp
sar
shl
push
push
mov
neg
or
sub
pop
pop
mov
jo
inc
jmp
(bad)
pop
out
push
add
jl
add
cmp
or
mov
or
lods
mov
je
add
out
fstp
(bad)
fild
fild
ret
sub
fild
fild
adc
ror
fild
stc
mov
xor
mov
rcl
xchg
pop
push
fcom
fstsw
sahf
jae
fnstcw
jg
xor
ret
ffree
ffree
ffree
pop
jmp
add
pop
out
and
xlat
push
sub
cmp
push
test
js
pop
mov
jnp
and
push
mov
or
sub
xchg
lock
lock
sbb
loop
or
mov
lea
dec
xor
push
sbb
ss
inc
push
fdiv
imul
push
pop
jge
jno
pop
aaa
mov
outs
mov
sub
lods
aas
test
inc
movs
or
enter
mov
mov
mov
pop
pop
and
div
sbb
pop
syscall
stos
loopne
sub
inc
adc
mov
jb
and
retf
test
push
pop
sbb
push
sar
ja
add
push
mov
mov
inc
xor
push
imul
stos
pop
sbb
neg
mov
rol
adc
ins
lock
mov
xchg
add
dec
sbb
push
(bad)
(bad)
mov
ror
push
pop
xor
pop
enter
xchg
xchg
add
sub
or
xor
add
push
retf
icebp
xor
test
and
xchg
stos
xchg
xor
jmp
or
mov
test
es
rcl
mov
inc
inc
outs
push
jl
cmp
enter
add
inc
ja
aam
loop
imul
xor
mov
sub
(bad)
jge
jp
sub
add
push
xor
(bad)
ja
push
ins
cmps
loopne
mov
fs
pop
pop
aaa
es
pop
fild
repz
je
add
test
arpl
push
fs
push
sti
and
sub
sub
aas
ins
test
lock
mov
push
mov
lea
test
add
fwait
add
push
ret
mov
add
inc
inc
adc
inc
iret
or
and
mov
inc
ret
notrack
call
int
push
and
dec
sbb
test
clc
adc
xchg
adc
mov
dec
(bad)
fsubr
push
cs
jl
pusha
sub
outs
push
jno
pop
cmp
mov
add
mov
lahf
mov
shr
in
enter
(bad)
nop
mov
fucomip
push
inc
mov
sbb
cmp
adc
xor
push
add
clc
cld
push
cmp
retf
sub
ins
clc
jbe
call
sub
dec
mov
scas
ins
or
and
mov
add
sbb
adc
mov
nop
add
push
and
jno
aas
mov
scas
stos
inc
test
(bad)
in
sbb
adc
fmul
daa
mov
add
retf
mov
(bad)
inc
(bad)
jmp
pop
mov
ins
ret
xor
(bad)
xor
ror
fsub
shl
and
(bad)
jo
push
pop
loop
sub
cli
jmp
inc
hlt
inc
mov
inc
cmp
jne
push
(bad)
(bad)
sbb
dec
inc
inc
setno
pop
cmp
pop
not
dec
je
xor
cvtps2pi
sbb
aad
ins
cmps
lods
mov
mov
push
xor
xor
inc
push
stos
add
or
lock
pusha
inc
cmp
adc
push
mov
xor
mov
outs
fs
test
ins
xor
shl
add
das
sbb
jmp
ret
loopne
mov
ja
cmp
inc
(bad)
mov
loopne
mov
retf
add
add
sbb
shl
and
adc
jl
clts
mov
mov
sub
or
cmp
and
outs
mov
sbb
rcr
pop
xchg
data16
daa
push
jb
sbb
jae
push
lea
xchg
sub
into
test
add
mov
jmp
or
and
bound
sub
fnsave
push
bnd
mov
cmp
in
jbe
sub
gs
gs
inc
out
mov
pop
hlt
adc
lods
jmp
cdq
mov
cmp
and
ror
aam
fsub
mov
inc
xor
mov
cmp
or
mov
rcr
movs
xchg
or
gs
mov
rep
or
clc
inc
or
outs
les
lods
call
outs
stc
inc
cmp
adc
xor
cmp
ja
imul
ror
add
pop
or
cmp
adc
adc
ins
jle
xor
je
sbb
test
ret
and
mov
jmp
pop
pop
pop
lea
mov
mov
dec
push
jge
xchg
and
mov
jmp
add
xchg
int
mov
ja
pop
add
sbb
je
xor
xor
movs
pop
ret
jae
cdq
pushf
dec
fsubr
shr
jg
dec
ror
jne
adc
push
mov
mov
inc
je
sahf
lods
add
xchg
or
pop
inc
push
mov
mov
cmps
inc
(bad)
into
(bad)
cs
adc
jb
cmc
jmp
adc
jmp
push
or
cmp
jbe
mov
or
jmp
push
and
mov
adc
jmp
mov
add
mov
cld
pop
and
test
call
push
and
cmp
mov
idiv
dec
fdiv
pushf
lods
clc
add
inc
cmp
push
rcl
jecxz
dec
mov
inc
cwde
movs
imul
pop
in
dec
(bad)
repz
neg
shl
add
mov
inc
je
mov
push
jmp
mov
mov
inc
je
mov
dec
je
dec
ds
push
mul
mov
mov
ret
mov
mov
jne
retf
stos
hlt
mov
call
addr16
adc
mov
xchg
(bad)
jp
push
retf
and
movs
je
ds
les
xchg
ret
sbb
adc
add
ret
mov
iret
lahf
pop
add
and
cmps
push
mov
and
sbb
cli
xor
loop
add
(bad)
outs
rcl
ret
push
dec
aam
or
sub
mov
and
and
xor
sbb
push
imul
sbb
dec
ss
out
inc
cmc
sbb
cmp
jae
or
das
sbb
fistp
jmp
add
mov
add
dec
leave
push
ins
adc
jge
xchg
pusha
jnp
inc
fwait
push
lea
xchg
inc
(bad)
sbb
call
mov
pop
outs
jge
mov
(bad)
or
pop
mov
loopne
xchg
push
mov
(bad)
mov
repnz
xchg
mov
inc
dec
mov
cmp
loopne
call
add
pop
pop
out
aam
xchg
loope
pop
xchg
mov
mov
int
cli
mov
mov
mov
sbb
(bad)
stos
mov
or
sub
sahf
push
sub
jle
adc
mov
mov
jb
jmp
fstp
cld
movzx
sub
in
cmp
push
pop
jne
lea
inc
cmps
mov
add
movs
sbb
push
xlat
cs
adc
je
add
(bad)
fcomi
ja
movsx
cmp
add
add
sbb
fld
sar
jmp
or
int
stos
dec
dec
inc
dec
inc
dec
lods
or
fcomp
mov
(bad)
or
stos
ret
jle
xchg
or
dec
or
sbb
sbb
push
mov
sub
je
mov
pop
mov
(bad)
inc
mov
je
stos
loop
pop
adc
or
inc
rol
and
daa
add
jne
pop
add
mov
push
ficomp
pop
dec
or
imul
mov
push
mov
mov
mov
pop
ss
push
cli
adc
mov
pusha
rcl
push
fldcw
sub
call
ss
mov
(bad)
cli
(bad)
in
stos
fnstsw
xlat
fstp
jmp
mov
or
frstor
push
in
inc
jne
cs
dec
jns
jno
or
repnz
xchg
mov
retf
fwait
or
adc
cmp
outs
cmc
inc
je
jnp
and
sub
cli
pop
mov
cli
mov
pop
aaa
inc
loop
fadd
fwait
add
inc
add
and
mov
sub
sub
sti
mov
sbb
sub
jne
jnp
or
sub
idiv
xor
sbb
data16
sub
sub
sub
sub
hlt
mov
cmp
cmps
je
js
lods
mov
out
jns
or
jno
fninit
push
cmp
and
jne
sbb
xchg
loopne
inc
push
sub
sbb
inc
cmp
inc
sbb
inc
and
xchg
lea
js
fld
mov
dec
adc
dec
fnsave
clc
adc
repz
aaa
call
pop
frndint
jmp
fld
fstsw
fwait
pop
inc
test
fnstsw
mov
jmp
fbstp
lea
mov
fbld
out
int
and
add
jg
pusha
mov
stos
inc
clc
add
jns
aaa
sar
sbb
int3
cmp
dec
add
call
mov
jns
add
js
mov
add
or
in
jmp
mov
(bad)
mov
fs
mov
mov
je
sti
push
or
mov
sub
dec
out
fldenv
jne
ja
adc
adc
jmp
push
mov
mov
mov
or
ret
mov
sar
sbb
sub
(bad)
out
inc
sub
mov
loopne
jae
dec
add
add
and
pusha
in
ins
add
push
mov
mov
mov
mov
pop
fwait
(bad)
sbb
or
sub
into
and
jne
push
(bad)
clc
lods
dec
adc
cmp
mov
and
and
add
mov
movs
ja
pop
out
aas
jecxz
mov
loope
jmp
fisttp
mov
adc
bound
sub
outs
xor
add
jecxz
fdiv
loop
sub
sar
mov
cmp
(bad)
aad
test
push
adc
bound
bound
xor
inc
push
push
cmp
mov
dec
adc
cmp
lea
adc
in
mov
jle
add
aas
dec
jne
xlat
gs
push
iret
add
push
outs
mov
push
add
loopne
mov
aas
mov
fstp
bound
jmp
fld
fcmovnbe
or
xchg
ret
xchg
jmp
or
push
retfw
fiadd
(bad)
jmp
cmp
jae
fimul
fstp
add
jmp
mov
sub
inc
imul
pop
sti
jbe
jb
sbb
mov
fadd
fmul
add
mov
add
push
shl
inc
pop
outs
das
ret
enter
jb
add
mov
push
(bad)
xor
mov
mov
inc
nop
add
retf
fld
pop
gs
fstp
fwait
(bad)
sub
sbb
mov
loope
mov
and
mov
push
adc
mov
sbb
mov
or
adc
retf
or
xchg
repz
outs
sbb
mov
outs
add
stc
inc
mov
mov
cmp
shl
out
fist
(bad)
add
shr
pusha
jmp
dec
cs
fild
inc
mov
pop
mov
or
sbb
or
shl
(bad)
movs
dec
mov
mov
jne
call
stos
mov
clc
dec
(bad)
mov
addr16
sti
out
je
retf
jo
cmp
in
lea
iret
adc
call
push
adc
enter
fcom
cmp
or
ss
adc
imul
enter
mov
call
lods
push
push
stos
fldcw
std
jmp
jl
push
jg
add
mov
push
fadd
(bad)
cmp
inc
(bad)
aad
and
xor
jb
add
sti
inc
fnstsw
ins
jge
cmp
ja
or
dec
adc
jnp
add
inc
dec
mov
adc
lahf
cdq
idiv
imul
mov
repnz
mov
mov
stc
add
xor
add
out
int
sbb
mov
std
sub
mov
push
inc
pusha
call
ret
dec
inc
jg
mov
sbb
pop
fs
hlt
add
and
fld
scas
jle
lahf
pop
inc
pop
clc
or
add
adc
test
ret
mov
repnz
or
mov
mov
dec
sbb
sub
fsubr
adc
mov
mov
sub
shl
sbb
xchg
sbb
push
adc
daa
pop
pop
pushf
mov
and
ins
push
inc
ret
ret
mov
push
fwait
mov
dec
cmp
jb
or
das
inc
jmp
cmp
ins
lods
sbb
or
pop
inc
ret
fmul
int
mov
cmp
sbb
mov
jge
pop
into
xor
mov
clc
mov
test
clc
push
xor
ins
mov
mov
add
mov
test
mov
cdq
cld
test
mov
push
mov
and
jb
(bad)
xchg
adc
lea
das
scas
or
cwde
sbb
daa
xlat
add
mov
popa
lods
or
pop
pop
fdivr
int
dec
inc
and
int
adc
xor
add
frstor
adc
aam
mov
ror
inc
pop
push
mov
or
adc
mov
sub
or
dec
sti
je
shr
mov
inc
hlt
ja
cmp
shr
push
or
outs
in
ja
mov
dec
out
add
fs
ret
fidivr
in
add
aaa
jecxz
xchg
mov
dec
sub
push
ds
and
pop
jecxz
or
call
mov
std
test
mov
out
xchg
adc
xor
arpl
in
in
or
outs
push
jae
out
out
repnz
mov
push
jg
fsubr
xchg
in
sbb
mov
inc
push
lods
sub
aam
outs
loope
cld
mov
mov
add
dec
mov
add
add
jne
add
push
inc
sub
mov
mov
pop
cmp
adc
push
fimul
movs
pushf
je
or
clc
or
sub
movs
imul
cld
cdq
and
not
imul
das
or
mov
ret
xor
loope
adc
xor
add
mov
addr16
push
and
stc
jo
(bad)
jg
data16
jmp
ret
pcmpeqw
xchg
je
jno
inc
mov
cmp
jne
push
sbb
lock
dec
popa
add
sub
add
mov
jns
add
add
inc
xchg
pop
fild
xor
ins
cld
fsubr
push
test
xchg
cmp
addr16
pop
jge
mov
ud0
mov
mov
add
pop
sbb
push
loop
mov
cmps
dec
jg
dec
mov
sub
jmp
adc
(bad)
int
loopne
dec
cmp
adc
sub
sbb
or
mov
pop
lods
test
sbb
fsubrp
mov
push
cmp
xchg
or
shl
inc
idiv
and
inc
push
psllq
xchg
mov
ja
pop
mov
add
add
or
mov
add
inc
rol
add
sub
xchg
push
shl
rol
cwde
je
rcr
pop
xlat
xor
pop
cmp
adc
push
push
sbb
sub
add
push
mov
adc
iret
cmp
jg
pop
(bad)
and
popa
pop
dec
and
jae
mov
adc
sbb
sbb
and
hlt
dec
movs
fild
xor
mov
scas
sbb
fsub
or
dec
add
outs
and
push
add
pop
and
pop
or
pop
pop
nop
pop
es
cmp
and
cwde
jmp
(bad)
loope
cwde
xor
lea
xchg
ror
fmul
jb
dec
test
aaa
call
je
fbld
je
add
retf
jmp
add
push
jmp
sub
je
pop
je
jmp
cmp
cmp
mov
enter
dec
jmp
mov
mov
cmp
jne
push
xchg
adc
add
test
pop
mov
add
lock
popa
inc
in
mov
test
data16
push
popw
xchg
fwait
mov
or
add
or
jle
push
movs
add
jae
movs
ins
or
sub
test
sbb
or
out
add
and
inc
push
nop
test
leave
and
add
adc
sub
inc
inc
pop
jne
(bad)
jmp
aas
sbb
add
xchg
enter
cmp
add
adc
cmp
(bad)
cmp
adc
mov
pop
shl
int3
retf
xchg
xor
cli
inc
sahf
mov
dec
inc
aam
mov
inc
es
jmp
dec
sti
mul
pusha
mov
mov
call
or
int3
sbb
mov
jae
pusha
add
cmp
aaa
movs
cdq
jae
iret
pushf
je
and
jbe
jmp
ret
push
mov
jmp
add
xchg
xor
aam
mov
sub
outs
jnp
or
pop
pop
sub
int
ret
or
loop
push
and
iret
mov
fsubr
fs
inc
or
jmp
inc
dec
das
push
dec
out
imul
add
inc
inc
xor
xor
mov
jae
mov
mov
popa
ret
cmp
or
mov
mov
das
pop
pop
add
mov
pop
js
stos
pop
or
mov
sbb
push
sub
jl
xchg
cmp
jg
push
jmp
je
xor
xor
mov
retf
adc
ret
(bad)
dec
leave
clc
mov
xchg
mov
mov
push
xchg
pop
inc
add
test
push
pop
mov
jmp
(bad)
adc
or
add
sub
jae
mov
scas
ffree
sbb
xlat
dec
adc
ret
add
loopne
dec
std
mov
outs
xor
or
xchg
adc
pusha
fnstsw
sbb
dec
add
sbb
test
je
sbb
(bad)
(bad)
cwde
adc
push
mov
cmp
mov
xor
mov
pop
add
jp
out
mov
dec
pop
jl
pop
repnz
(bad)
cmp
jne
inc
xchg
pop
inc
je
and
xor
cmp
and
aam
sub
je
dec
je
sub
std
fbld
push
jmp
mov
jmp
add
sub
popa
outs
lea
pop
clc
jle
outs
adc
pop
cmp
dec
jp
je
push
adc
push
stos
test
cmp
adc
add
mov
and
call
fwait
lods
mov
mov
cmps
sub
call
sbb
add
pop
push
cwde
cmp
jbe
outs
push
xor
or
push
add
aam
ror
add
retf
cmps
cmp
pop
adc
cmp
jg
dec
mov
push
push
add
sub
add
inc
fild
xchg
fwait
imul
add
xchg
mov
mov
push
or
pop
xchg
push
dec
push
cmp
jae
cld
xor
ret
inc
fdiv
fadd
fsub
in
in
shr
fsub
pop
(bad)
push
ret
push
mov
les
cmp
mov
test
adc
addr16
adc
int
or
xchg
mov
dec
push
inc
adc
mov
sar
cmp
adc
and
pusha
or
sub
inc
hlt
push
mov
pop
aaa
xlat
test
cmp
mov
inc
call
xor
or
add
lock
test
mov
loopne
add
and
lds
dec
jge
adc
test
jae
call
or
jmp
sbb
hlt
popf
or
sbb
jmp
inc
and
pop
push
scas
push
push
push
aaa
push
jmp
pop
sub
jo
adc
mov
out
test
push
jmp
in
aas
mov
and
jbe
in
fstp
jle
adc
fs
cmp
ret
mov
inc
not
test
popa
movs
pop
mov
or
arpl
or
cmp
pop
push
and
movs
fwait
scas
in
cmps
and
adc
hlt
pause
repnz
sub
or
push
jne
mov
push
sbb
pop
xchg
bound
fstp
mov
sub
(bad)
mov
movs
fcom
cdq
pop
and
aam
stc
push
fs
lods
out
movs
jl
xor
in
mov
push
xor
pop
gs
adc
mov
lock
pop
push
or
cli
fild
cmp
xor
hlt
and
lods
jns
mov
nop
sub
pop
mov
jmp
sub
add
or
mov
fldenv
adc
mov
inc
add
or
out
and
je
or
in
cmp
add
or
enter
add
xchg
test
ror
sbb
xchg
(bad)
lea
inc
pop
or
ds
pop
xor
loopne
add
push
cmp
xor
mov
pop
imul
lods
adc
jnp
mov
dec
pop
jge
mov
ins
or
xor
test
leave
into
pushf
xchg
dec
xchg
add
or
sbb
sbb
add
(bad)
pop
sbb
and
das
cmp
inc
aaa
leave
int
(bad)
mov
sbb
add
dec
adc
or
xchg
fucomp
fcomp
in
mov
fcom
pop
fwait
jmp
or
aam
adc
sbb
mov
and
or
shl
stc
xor
test
lods
rcr
xchg
(bad)
sti
and
jb
add
rol
retf
xchg
aad
jge
adc
dec
and
aaa
push
icebp
popf
push
lea
push
sar
inc
push
adc
inc
adc
inc
jmp
adc
cwde
xchg
popa
and
push
fst
inc
nop
push
add
into
loopne
sbb
dec
je
fsub
push
(bad)
adc
leave
push
xchg
dec
pop
loop
and
mov
adc
popa
jmp
pop
out
ins
out
scas
scas
es
add
push
push
xor
adc
ds
mov
pop
ins
cmp
movs
adc
jle
or
lea
dec
rcr
mov
lock
fist
and
aas
push
test
loopne
or
push
sub
cs
push
xlat
dec
push
in
add
in
mov
xor
and
and
and
jb
cmc
xchg
sbb
or
jmp
call
pop
call
xor
push
mov
mov
ds
je
dec
cmp
add
add
addr16
jmp
es
fistp
out
mov
dec
sub
xor
cwde
jmp
rcl
push
pop
dec
leave
inc
mov
int3
cmps
jne
add
(bad)
jo
es
outs
cmps
push
sar
mov
push
push
add
inc
cmp
or
push
push
jns
(bad)
fsubr
outs
jnp
mov
add
sbb
add
xchg
jbe
jo
xchg
cmps
in
pop
lods
xchg
push
xor
pop
mov
cmp
(bad)
inc
push
ror
clc
ret
adc
rol
or
repz
xor
xor
xor
stos
sub
lods
in
mov
sub
push
push
int
in
push
imul
jle
pusha
pop
stos
or
and
inc
pop
mov
(bad)
cmps
call
and
mov
push
pop
not
push
in
and
ins
(bad)
lea
mov
ret
outs
femms
sti
cdq
mov
sub
add
nop
inc
adc
xchg
push
mov
xchg
(bad)
cs
pop
je
jne
sbb
add
in
push
push
mov
sub
sub
pop
test
inc
inc
xor
xor
jge
addr16
imul
outs
add
jg
adc
mov
and
mov
cmp
adc
sar
adc
adc
neg
jne
imul
out
mov
add
add
add
data16
ja
lahf
sub
jbe
jp
pop
movs
test
inc
psllq
push
push
jle
xchg
add
cmp
adc
pop
inc
push
sub
push
push
add
ins
and
fist
push
xor
dec
int
pop
adc
xchg
add
cs
inc
icebp
jl
cld
shr
inc
add
or
push
fdivr
mov
mov
add
or
jl
jns
add
add
adc
mov
sbb
mov
mov
sbb
mov
out
int3
dec
jl
inc
lea
sahf
mov
add
add
add
in
pushf
dec
call
mov
pop
mov
lds
jmp
sub
outs
inc
push
add
int3
les
in
mov
dec
pop
or
hlt
sbb
loope
sbb
lods
and
dec
pop
sbb
inc
js
pop
jo
sub
hlt
push
test
and
adc
in
inc
lods
retf
dec
push
or
cdq
or
push
aam
and
or
inc
adc
inc
ds
rol
lods
sbb
pop
les
mov
inc
mov
pop
popa
sub
test
test
enter
out
mov
sbb
lods
popf
or
retf
and
xabort
adc
push
adc
sub
test
push
or
cmp
arpl
mov
sbb
inc
push
and
xor
fcmovnb
mov
cmp
or
inc
lock
gs
cld
push
or
sbb
mov
jg
outs
push
or
add
pop
sub
mov
sub
sbb
add
sar
retf
adc
mov
adc
pushf
xor
sbb
mov
loop
sub
pop
mov
cmc
outs
xor
jmp
push
mov
or
mov
inc
mov
ror
add
adc
popf
fnstcw
cdq
or
aaa
push
ret
jb
hlt
clc
(bad)
in
sub
mov
mov
sbb
inc
add
ret
scas
loopne
adc
or
or
mov
mov
xor
call
packuswb
sbb
or
or
pop
push
aas
in
mov
dec
je
jmp
xor
in
fs
inc
xor
mov
jmp
sbb
ret
mov
add
retf
pop
or
or
push
push
addr16
test
mov
out
aaa
or
mov
enter
pop
cld
cmp
pushf
xor
popa
sete
mov
xchg
jae
mov
inc
or
and
add
xchg
fstp
in
pop
data16
add
test
sbb
mov
sbb
mov
pusha
test
or
sbb
sbb
bswap
int3
mov
aaa
sbb
arpl
inc
lock
aaa
mov
mov
jo
pop
xchg
xchg
ds
jb
xor
pushf
mov
xor
or
and
xor
loop
nop
mov
stc
js
pop
cmps
adc
xchg
aad
mov
mov
mov
inc
call
aas
jmp
sbb
and
fld
mov
retf
xor
xor
lock
mov
in
and
lock
lods
imul
push
imul
enter
cmp
mov
fwait
inc
mov
adc
in
xor
jg
and
sub
mov
call
xchg
mov
popaw
mov
sbb
jae
mov
or
mov
push
adc
cmc
add
or
and
ja
jb
mov
mov
mov
or
(bad)
(bad)
and
and
dec
and
and
or
jb
and
cmp
ins
push
fs
dec
xchg
nop
pusha
push
xor
clc
adc
xor
daa
ja
add
call
pop
mov
add
add
stc
dec
lock
(bad)
mov
loopne
adc
or
in
or
out
test
add
lds
data16
sub
cmp
mov
or
push
xchg
sub
dec
xchg
dec
(bad)
cmp
or
adc
pop
or
sub
loop
stos
push
dec
or
inc
jbe
js
sbb
add
xor
adc
sub
inc
xor
ret
int3
movs
fbstp
pop
adc
int3
cmp
push
or
shl
mov
fnstcw
cs
mov
push
das
jge
pop
fstp
adc
mov
sbb
and
push
sbb
inc
and
push
or
adc
xor
loopne
test
cmp
inc
xlat
jns
add
sbb
jge
xchg
or
shr
sti
push
push
xor
repz
add
cmps
inc
xor
add
mov
aas
fnstsw
out
or
adc
cs
xchg
int
mov
dec
cmp
jg
call
inc
jmp
inc
mov
pop
sub
inc
inc
arpl
and
leave
push
or
sbb
pop
and
in
jge
or
(bad)
aad
idiv
sbb
xchg
out
pop
cmp
pop
das
and
and
(bad)
dec
sbb
or
nop
sub
mov
cmp
push
ins
jb
adc
adc
xchg
pop
dec
inc
mov
les
lds
mov
cmc
sbb
sti
sub
push
add
inc
mov
repz
test
inc
out
pop
js
jge
popa
push
aam
jb
adc
add
push
aad
mov
sub
fistp
hlt
movs
aam
inc
push
push
fisttp
sub
push
xlat
clc
adc
sbb
pop
aam
inc
inc
inc
ret
fist
shl
or
sar
cli
jbe
add
cmp
inc
xchg
jnp
pusha
mov
push
adc
inc
adc
hlt
or
sub
xchg
arpl
push
dec
scas
xlat
cdq
je
mov
dec
out
repz
and
mov
xor
add
mov
sub
js
sub
or
mov
xor
fsub
mov
hlt
jae
mov
in
push
mov
jp
or
mul
dec
(bad)
push
push
mov
sub
jb
inc
mov
mov
stos
inc
or
dec
dec
jne
cli
shl
inc
dec
or
hlt
adc
push
fst
call
and
setb
sbb
push
mov
dec
add
mov
push
mov
ja
jmp
mov
sbb
mov
cmc
sub
les
push
xchg
mov
cmp
mov
sbb
outs
add
sbb
(bad)
stc
or
xor
dec
xchg
mov
lods
jne
or
cmps
adc
or
not
jge
or
xor
xchg
xchg
ror
push
push
ss
mov
jne
jmp
push
add
xchg
shl
mov
adc
and
mov
dec
jne
push
add
iret
mov
cli
and
push
sbb
and
fild
mov
sub
xchg
call
xchg
or
dec
mov
pop
jne
(bad)
cmp
repnz
sub
nop
mov
add
jg
sbb
nop
ss
mov
xor
in
or
and
xchg
test
mov
xchg
aam
add
xchg
aam
fdivr
push
iret
xor
pushf
sar
sbb
(bad)
mov
pop
repnz
xchg
inc
mov
inc
push
and
ret
xor
xchg
les
sbb
mov
rol
shl
dec
add
pop
retf
or
int
cmp
push
mov
sub
ss
sbb
inc
sbb
xor
arpl
pop
(bad)
mov
sar
xor
das
pop
pop
icebp
out
or
add
fs
mov
mov
or
mov
jge
push
shl
test
imul
cmp
popf
and
and
ja
outs
xor
or
lahf
sbb
push
inc
ja
cdq
les
lock
gs
jle
fdiv
pop
or
adc
adc
ror
and
mov
mov
shl
inc
mov
cwde
in
daa
or
in
mov
or
fnsave
daa
and
dec
test
inc
lahf
or
dec
ret
in
mov
test
loopne
adc
stos
movs
scas
jle
push
enter
in
mov
(bad)
int3
pop
or
jle
in
js
cmc
push
pop
or
xor
adc
push
or
jae
test
adc
mov
add
ret
jle
and
dec
shr
push
mov
or
cmps
inc
cmp
in
inc
add
outs
add
push
cmc
add
mov
xchg
sahf
jmp
in
fsubr
dec
push
or
ins
xor
aam
adc
icebp
pop
sti
neg
add
jge
adc
ja
and
inc
imul
push
jo
inc
js
mov
mov
xadd
stos
mov
(bad)
or
xchg
xlat
sbb
add
mov
jg
cld
test
push
pusha
test
jb
mov
fsub
inc
fcom
jne
or
(bad)
fisubr
loop
sub
mov
jl
pop
or
and
lods
sub
inc
xchg
int3
mov
sub
jno
xor
and
call
fidiv
mov
icebp
inc
outs
dec
lds
and
xchg
loop
push
mov
adc
pop
cmp
ins
call
neg
and
fadd
mov
aas
lea
loop
loopne
add
mov
mov
add
les
dec
push
or
or
mov
or
and
or
and
or
inc
ret
push
push
les
sbb
(bad)
push
xor
(bad)
ins
out
shr
pop
mov
push
inc
push
fldenv
sbb
mov
inc
mov
push
and
jbe
inc
xlat
mov
inc
rol
test
mov
cmp
or
sahf
mov
inc
mov
push
ins
jge
enter
adc
sbb
leave
xchg
movs
unpcklps
inc
js
jecxz
mov
mov
mov
test
fldcw
and
pop
and
mov
push
sub
seta
fsub
lea
and
ror
mov
shl
inc
mov
pop
add
pop
pop
mov
inc
xor
(bad)
ins
in
and
mov
sub
lds
ret
inc
cwde
in
push
fdivr
dec
mov
fadd
cmp
and
add
iret
inc
loopne
add
fnstenv
gs
ins
shr
pop
(bad)
push
lock
xor
inc
xlat
add
cmp
dec
mov
jne
cdq
sbb
imul
ret
sub
or
in
scas
lods
and
sbb
pushf
sub
cwde
dec
jae
div
mov
shl
enter
or
mov
push
jmp
add
jae
inc
mov
xchg
test
push
mov
and
sub
sbb
aam
adc
pop
pusha
call
clc
repnz
js
dec
ja
call
aas
pavgb
xor
fadd
daa
ror
movs
enter
rol
lods
ror
mov
dec
mov
test
sub
sbb
pop
shl
fcom
sar
pop
js
jo
dec
xlat
xor
push
adc
je
xlat
pop
pop
pop
push
pop
or
(bad)
enter
inc
mov
cmp
call
xor
pop
add
or
push
imul
sbb
or
and
fcomp
movs
xor
xchg
pop
sbb
out
sub
adc
adc
cmc
push
or
cmc
or
in
cmp
add
add
enter
mov
adc
out
xor
fs
lock
nop
xchg
data16
sub
test
and
nop
xor
sbb
nop
fdiv
dec
xor
aam
ror
leave
aaa
dec
mov
das
cmc
enter
call
imul
cmc
or
push
mov
hlt
mov
repz
cmp
cmc
xchg
int
out
or
inc
call
in
leave
cwde
sbb
xchg
movs
push
pop
mov
add
push
(bad)
mov
xlat
and
sti
adc
pop
dec
mov
imul
icebp
add
adc
das
push
xchg
std
xor
push
inc
cmp
fdiv
xchg
mov
aam
push
add
dec
sub
adc
sbb
mov
fs
xchg
test
movs
and
dec
xor
sub
mov
or
adc
mov
cmp
mov
inc
inc
push
pop
leave
jg
mov
sahf
xchg
sub
pop
icebp
iret
ds
mov
cmp
fcom
inc
mov
mov
les
stos
add
and
js
mov
cmp
jg
(bad)
out
or
adc
into
inc
push
les
sbb
jnp
dec
(bad)
sub
or
leave
scas
xor
cmp
retf
test
pop
xor
xor
lods
je
pop
xor
pop
xor
and
fnsave
mov
or
fsub
nop
mov
shl
mov
pop
jb
inc
retf
mov
jne
mov
jl
mov
adc
xor
out
add
add
pop
adc
daa
lods
pop
push
push
push
or
jg
retf
aam
pop
adc
and
int3
pop
xor
stos
mov
(bad)
scas
sub
inc
adc
add
shl
or
test
jne
xchg
mov
inc
sub
mov
add
lea
push
mov
mov
jge
clc
push
jg
movs
sbb
mov
(bad)
aas
inc
mov
inc
dec
jne
inc
stos
and
and
xchg
xor
fst
push
add
cli
jns
scas
mov
lock
call
lods
xchg
mov
pop
icebp
cmp
mov
sbb
enter
loopne
fcom
lock
and
xor
shr
ror
and
sub
int3
enter
jns
or
les
pop
xor
or
je
arpl
xor
mov
rcr
adc
stos
dec
xchg
sti
add
jbe
outs
cmp
dec
inc
cmp
dec
jp
shl
in
shr
int
sbb
sahf
int
hlt
hlt
stc
(bad)
clc
clc
add
dec
pop
into
push
dec
push
lea
or
not
pop
pop
jae
inc
sbb
(bad)
iret
imul
loopne
inc
inc
mov
test
or
add
or
xor
ror
push
dec
fcom
fidivr
push
in
dec
and
ins
add
dec
popa
push
cmp
cmp
xor
and
enter
inc
iret
sar
adc
nop
mov
xchg
jmp
add
loopne
or
hlt
adc
test
rcr
and
sub
dec
or
int3
js
or
add
xchg
xchg
ss
lock
je
dec
jne
push
xor
mov
add
pop
sar
ds
hlt
mov
fs
push
pop
out
sbb
cmp
clc
or
scas
lea
es
mov
or
or
xchg
mov
cmp
xor
inc
xor
fadd
inc
loop
cdq
dec
retf
and
dec
dec
cld
mov
cmp
xor
or
inc
jnp
inc
push
imul
cwde
cmp
gs
nop
out
cmp
cld
inc
ret
jae
out
sar
mov
add
push
fistp
js
jp
add
scas
je
inc
bnd
int3
mov
xchg
fdivr
mov
cld
mov
sub
pop
push
dec
or
inc
push
fcom
and
jge
add
mov
cwde
sub
sti
in
sti
setno
ret
cld
push
adc
and
sub
cwde
jo
inc
xor
sti
mov
mov
cmp
das
jge
push
inc
clc
and
push
inc
jl
imul
cmp
cwde
adc
mov
push
push
push
cmp
add
outs
jns
add
adc
or
out
fs
fidivr
ror
adc
inc
add
mov
sbb
iret
ficom
(bad)
jmp
dec
pop
cmp
mov
or
cmp
add
out
cdq
adc
cmp
jne
cmp
je
lea
xchg
mov
retf
mov
inc
mov
dec
xchg
cld
jns
pop
mov
add
loopne
in
mov
jns
enter
jmp
mov
(bad)
aas
push
or
sub
sub
jb
test
cli
adc
dec
jg
rol
jmp
aad
sbb
or
scas
in
inc
jmp
push
jmp
add
nop
in
pop
jle
loopne
mov
mov
mov
and
xchg
jp
sub
xor
mov
fild
inc
mov
inc
mov
push
jle
pusha
xchg
pop
je
jl
shl
push
mov
adc
pop
cdq
daa
push
pop
pop
ret
mov
fiadd
jne
sbb
xor
sub
icebp
add
sbb
sub
add
xchg
call
jno
sub
or
test
xchg
pop
sbb
ins
xor
icebp
retfw
mov
or
mov
adc
sub
lds
mov
ror
(bad)
add
xchg
aad
or
sbb
bound
sbb
xchg
dec
xor
inc
mov
dec
add
lods
adc
add
jno
fcmovnb
mov
jle
mov
mov
adc
and
sbb
push
inc
or
js
add
pop
sub
xlat
daa
add
not
or
jmp
sub
jge
retf
jle
jmp
mov
and
xchg
push
std
retf
pop
into
jbe
jmp
jle
and
add
call
jne
fild
inc
sar
xor
repz
or
pusha
sub
pop
jge
jb
call
xchg
leave
int
push
cmp
mov
sbb
push
sub
fild
popf
inc
data16
mov
outs
sbb
and
sahf
mov
pop
push
dec
mov
pushf
mov
sbb
or
iret
add
inc
outs
sbb
add
lods
rcr
inc
add
clc
inc
jg
sub
sti
cli
pop
inc
jp
sub
jl
inc
imul
jnp
adc
dec
add
fs
xor
dec
adc
pop
retfw
jae
sti
jmp
push
jae
lea
in
or
or
cs
outs
mov
lds
mov
jns
add
jo
mov
jge
inc
js
sti
add
sub
pop
pop
test
or
adc
push
sbb
jne
add
add
cmps
pop
mov
inc
jae
outs
sub
and
and
out
call
imul
lahf
(bad)
pop
add
cmpxchg
and
leave
fsub
adc
xchg
cmps
adc
xchg
push
xor
sub
scas
addr16
cmp
cld
or
inc
retf
and
push
jb
mov
sub
lahf
xchg
push
lock
bound
movs
mov
adc
mov
xor
or
mov
inc
dec
jne
add
mov
je
call
aaa
pop
fwait
push
or
push
dec
ror
jno
xor
cmp
shl
(bad)
jno
jno
sub
shld
loopne
ret
mov
or
xchg
js
push
test
push
and
xchg
call
mov
icebp
jo
add
sub
sbb
addr16
inc
jle
push
jnp
xchg
imul
pop
rcr
in
push
or
sbb
ror
add
cmc
in
sub
lock
leave
jle
mov
xor
push
inc
jno
imul
or
and
or
je
movs
imul
lahf
shl
jne
pusha
or
sub
jl
inc
xchg
outs
fld
mov
fld
fnsave
mov
push
cmp
sbb
cmp
(bad)
scas
xor
or
add
or
or
dec
sar
mov
(bad)
mov
or
adc
mov
daa
mov
mov
sub
mul
pop
inc
dec
out
sbb
out
pop
mov
xor
neg
cwde
daa
push
cmp
in
and
shl
cmp
push
fiadd
inc
dec
push
xchg
mov
inc
pop
aas
mov
inc
ret
jne
or
sbb
shl
sbb
sbb
mov
jne
pop
cld
pop
jno
adc
inc
jne
in
jo
or
das
and
ret
dec
ret
and
fs
xor
push
test
mov
or
mov
pop
pop
call
mov
and
ins
loope
outs
sub
or
jmp
cmp
add
add
or
pop
and
inc
xchg
cmp
loopne
call
ss
shr
sbb
sbb
inc
jnp
sbb
mov
and
sub
adc
mov
imul
lock
clc
dec
loop
xchg
cmps
lock
push
ret
lea
xchg
(bad)
(bad)
mov
mov
xor
lea
push
mov
adc
sbb
or
(bad)
pop
popa
xchg
cmp
mov
sbb
outs
push
cmp
in
or
xlat
sbb
int3
call
sub
and
or
ret
out
in
cmp
add
sub
and
or
(bad)
pusha
mov
add
pop
add
sub
movs
cdq
jecxz
mov
push
clc
sub
stos
enter
sub
sbb
out
lock
push
inc
adc
adc
pop
jne
inc
bnd
add
shr
xchg
into
add
pop
or
push
loopne
mov
in
ins
int3
loop
and
imul
add
or
cmp
cmp
stc
jecxz
iret
pop
or
dec
es
lock
or
jo
jmp
pop
cmps
add
sub
jl
push
jne
cmp
shl
fisubr
or
shl
inc
add
cmp
jg
inc
xchg
pusha
gs
pop
test
in
mov
adc
push
mov
loop
add
jbe
inc
or
and
and
cmp
pop
aam
ins
int3
inc
mov
fisttp
adc
retf
jbe
mov
add
mul
dec
aam
adc
retf
dec
and
pop
adc
push
push
enter
or
xlat
fwait
mov
cmp
or
or
call
and
pop
clc
in
int3
cmp
sysret
rcl
and
hlt
int3
add
mov
cmp
fnstsw
je
mov
sub
and
xchg
pop
xchg
xor
mov
daa
int3
daa
sub
pop
ss
lock
int3
pop
rcl
jmp
leave
fdiv
movs
ss
das
shl
shl
hlt
ins
or
movs
vpunpcklbw
gs
in
sbb
pop
popa
and
push
in
ret
or
lds
push
pop
push
xor
adc
ret
ins
push
add
sbb
call
fisub
gs
ret
das
pusha
pop
mov
cmp
push
cmp
jmp
pop
sbb
adc
ret
push
mov
mov
cmc
jle
sbb
xor
jb
(bad)
or
in
je
cmp
pop
xchg
pop
stc
stc
add
jmp
xor
ins
mov
sub
xor
mov
sbb
xor
mov
xchg
mov
sbb
scas
cli
mov
movs
xchg
(bad)
mov
cmp
cdq
mul
jle
or
and
iret
add
jmp
add
add
dec
mov
int3
ds
fld1
jns
lock
fdivr
pop
test
lea
and
adc
add
(bad)
ret
dec
fistp
xor
rcr
mov
mov
dec
(bad)
in
je
pop
xchg
xor
repz
enter
xchg
push
xlat
mov
popf
xchg
push
ss
(bad)
lods
mov
es
and
inc
sahf
pop
and
xor
jp
pushf
int3
inc
es
scas
adc
push
inc
fcomp
jp
mov
mov
aaa
fisttp
popa
popf
push
push
xor
cmp
jmp
mov
call
add
es
xchg
xchg
xor
cmp
sub
xor
or
sbb
jne
fstp
repnz
(bad)
fs
xor
inc
in
jae
adc
hlt
ds
sbb
in
mov
add
jmp
or
dec
dec
out
cmp
sbb
je
xor
adc
stos
push
fcmovnbe
loopne
ror
dec
and
push
pop
jmp
jns
add
leave
call
cmp
and
jl
test
dec
ins
mov
ret
or
lahf
xchg
mov
mov
dec
ds
mov
pop
arpl
xchg
push
push
call
ins
ss
clc
out
fnstcw
repz
jecxz
jns
xchg
jmp
ret
shr
push
mov
sbb
add
scas
fnstenv
pushf
fcomp
movs
xchg
and
xor
pop
xor
and
pop
push
shr
imul
add
lock
pop
leave
adc
je
sub
jb
add
jp
(bad)
sbb
inc
or
push
or
js
pop
push
fmul
lds
sti
jle
jb
fld
push
jmp
repz
pop
cmps
adc
push
push
cs
clc
push
add
adc
jno
mov
jne
hlt
xchg
and
call
jne
push
imul
fucom
stc
adc
sub
inc
jo
xchg
call
adc
nop
pusha
cld
jo
push
mov
push
mov
test
mov
sahf
ret
or
cmp
sub
scas
jno
fdiv
xor
jae
xchg
jne
or
adc
or
mov
enter
(bad)
out
ins
cs
dec
hlt
push
hlt
jge
popa
cdq
and
push
mov
daa
test
push
add
and
into
xchg
dec
push
add
push
sbb
and
lock
dec
into
and
pushf
push
adc
lock
mov
sbb
sbb
and
xor
cmp
cdq
xor
out
inc
into
dec
mov
sub
int3
adc
xor
retf
and
or
fisttp
cli
je
add
push
or
mov
test
sbb
lock
add
and
fst
push
or
add
pushf
adc
add
shl
xchg
xor
cdq
adc
in
lahf
in
xchg
fdiv
or
fdiv
and
push
adc
push
gs
lods
inc
loopne
push
in
loopne
add
cmc
sbb
push
loopne
fimul
ficomp
cmp
jmp
and
jmp
bound
xchg
pusha
pop
(bad)
mov
or
mov
mov
mov
ins
mov
inc
xchg
add
ret
clc
jae
cwde
adc
sbb
push
rol
or
mov
jmp
or
or
pusha
fadd
jmp
(bad)
loope
mov
cmp
daa
and
xor
hlt
mov
fsub
pusha
aam
xlat
inc
adc
mov
sbb
cmp
(bad)
fwait
xchg
(bad)
rcr
push
sub
or
ret
mov
in
mov
out
fistp
push
in
add
test
mov
and
das
in
mov
fdivr
das
ret
pop
loopne
and
int
mov
jmp
jl
and
bswap
cmp
int
hlt
jo
sub
cmp
jnp
int
adc
jecxz
adc
sbb
or
in
xor
or
loope
clc
sub
fmul
push
fcomp
in
adc
or
jnp
(bad)
or
jnp
mov
inc
mov
hlt
stc
retf
adc
sub
das
or
fcom
enter
inc
sar
or
test
jmp
adc
cmps
mov
sub
aam
push
sbb
shr
fs
push
lds
pop
rol
movs
mov
mov
into
popf
aam
push
repnz
daa
add
jbe
dec
mov
lods
push
dec
dec
mov
fwait
mov
dec
and
ds
enter
loope
ss
push
ret
jbe
or
or
shl
xor
fwait
sub
and
enter
aam
idiv
or
inc
sub
and
test
pop
test
nop
add
xchg
ss
scas
mov
sub
movs
test
mov
xchg
xor
xchg
push
out
stc
and
sti
mov
pusha
test
or
nop
add
adc
je
mov
mov
ror
adc
pusha
imul
sbb
mov
mov
data16
arpl
mov
cmp
add
outs
inc
or
push
or
mov
push
call
and
adc
push
mov
xchg
bound
fcmovu
jl
shrd
inc
cmps
in
xlat
lods
movs
and
sbb
jne
cmp
lods
mov
out
jge
retf
dec
push
xor
mov
mov
je
adc
add
pop
adc
loop
jmp
out
fs
loopne
(bad)
or
dec
adc
fmul
sub
push
adc
jge
adc
mov
call
repnz
lods
lods
add
retf
(bad)
and
in
dec
adc
in
(bad)
out
out
xchg
sub
mov
mov
dec
mov
mov
mov
add
inc
add
pop
and
and
cmp
sar
bound
ja
mov
mov
cs
sar
mov
cdq
in
fistp
or
(bad)
sti
enter
pushf
pushf
xlat
mov
mov
ss
out
mov
pop
data16
push
add
mov
jmp
popf
das
es
retf
sbb
ror
or
xor
sahf
cld
mov
and
retf
fxch
pop
fst
in
sbb
ins
wbinvd
mov
cld
js
je
ret
jl
jns
or
cmp
std
add
and
or
xlat
adc
add
je
add
dec
dec
leave
push
(bad)
aaa
in
stc
pop
xor
sub
clc
push
push
cwde
mov
sub
sbb
mov
add
dec
inc
es
jmp
push
in
loope
in
fisttp
adc
or
sbb
jp
jge
mov
xor
sub
inc
push
nop
cmp
xor
in
in
mov
mov
add
pop
sub
or
sbb
jae
sbb
inc
aad
enter
arpl
xor
in
test
jns
jl
push
adc
xor
iret
add
sbb
ja
lock
ins
sbb
push
mov
pop
fimul
lock
pop
mov
int
adc
repnz
aam
lods
leave
and
fsub
loopne
xchg
pop
jb
in
call
and
leave
and
pop
repnz
hlt
cld
jns
repnz
or
or
add
std
sbb
jns
or
jns
hlt
cmp
pusha
(bad)
cmp
xchg
xor
adc
pop
dec
call
cwde
dec
sahf
xchg
sbb
jl
test
ins
gs
jne
mov
addr16
nop
xchg
inc
push
test
mov
and
add
outs
je
fs
mov
enter
jne
inc
imul
out
pop
outs
fs
outs
dec
jb
(bad)
xchg
inc
push
pop
outs
jb
ins
jo
inc
jb
ins
push
je
sbb
neg
rsqrtps
pop
mul
adc
pop
inc
bnd
in
outs
ins
(bad)
je
inc
jns
clc
push
not
inc
getsec
add
jb
cmp
inc
and
(bad)
push
jb
add
add
sbb
push
pop
jl
jmp
pop
sbb
ss
and
add
mov
fiadd
in
fld
or
add
cli
add
add
aas
aam
daa
fsubr
aam
cmps
imul
pusha
aam
outs
in
jae
pop
cwde
add
sub
adc
xlat
mov
add
push
inc
jne
jmp
add
and
sbb
sbb
pop
add
adc
jae
xor
(bad)
ss
lock
pop
jae
jno
sbb
inc
xor
das
cwde
push
test
xchg
inc
rcl
and
retf
cld
arpl
mov
inc
xor
jo
push
sub
ins
in
and
les
add
or
or
pop
sub
js
add
gs
xchg
mov
inc
push
sbb
popa
jns
inc
lock
sbb
push
and
fxtract
addr16
inc
inc
repnz
jb
mov
or
in
in
or
popa
or
shl
test
jecxz
dec
add
sub
arpl
inc
repnz
or
mov
mov
je
mov
or
test
arpl
mov
xchg
arpl
xchg
and
sbb
or
sub
sub
mov
cld
dec
stc
xchg
or
or
repnz
cdq
pop
jg
in
sbb
ss
add
mov
inc
rcl
mov
mov
mov
dec
adc
dec
or
in
or
in
jle
enter
in
add
out
fimul
or
test
hlt
call
enter
or
adc
inc
cmc
mov
or
das
inc
into
or
and
nop
pop
test
aad
fld
sbb
jmp
out
or
add
ja
in
or
sbb
daa
adc
jbe
popf
mov
sub
xchg
cmp
out
mov
aas
dec
je
push
or
stos
mov
loopne
xor
(bad)
into
lahf
sub
loopne
icebp
in
sbb
std
add
aaa
nop
pop
repnz
fs
nop
int
cli
nop
clc
gs
(bad)
xchg
sub
hlt
mov
dec
hlt
and
fadd
nop
int
lock
pop
in
mov
sbb
adc
call
mov
dec
fadd
xchg
jmp
mov
cmp
loopne
pop
cmp
dec
jmp
mov
add
neg
jge
or
aad
mov
enter
fcomp
enter
inc
fcmovnb
mov
add
das
jle
and
jecxz
mov
mov
mov
fidiv
mov
aam
cmc
mov
jmp
push
lds
or
and
mov
jmp
jmp
jns
test
out
push
cmp
mov
fcomp
shr
add
adc
mov
cmp
dec
jo
push
lahf
mov
imul
add
xor
test
and
ss
or
pushf
(bad)
dec
jne
pushf
xchg
pop
sub
and
mov
mov
jp
mov
pop
pop
pop
jmp
jl
vpmacssww
mov
test
mov
mov
or
xor
adc
adc
jae
or
xchg
das
les
je
and
es
and
jmp
adc
push
cmc
sahf
in
clc
movzx
lock
add
xchg
xor
lea
and
das
add
mov
cmp
popf
adc
inc
int3
(bad)
popf
int
inc
xchg
and
push
add
psubusw
add
jne
jne
mov
inc
inc
xlat
mov
inc
(bad)
add
and
push
and
jnp
fild
imul
jbe
pop
nop
add
ja
ss
(bad)
push
ss
jne
add
inc
jle
jmp
mov
mov
add
push
xor
adc
or
gs
jmp
sub
jne
sbb
pop
in
xlat
test
(bad)
stos
add
das
inc
inc
push
cmps
cmp
jmp
inc
jge
test
stc
and
dec
and
test
cmp
cld
lds
and
push
and
or
push
adc
add
push
ds
sbb
nop
and
test
add
(bad)
clc
fimul
and
fwait
add
js
sbb
or
or
sbb
add
mov
loopne
dec
push
xchg
or
in
mov
sub
push
cmp
enter
aad
adc
ins
ret
ins
or
or
add
fs
call
fistp
in
loope
sbb
mov
xchg
(bad)
sbb
cmp
jmp
in
jbe
or
jecxz
and
mov
or
jg
mov
dec
push
or
mov
pop
add
cmps
cs
adc
inc
adc
cmp
retf
shl
sbb
inc
inc
(bad)
adc
adc
(bad)
mov
(bad)
or
or
push
or
sbb
leave
stos
cmp
xor
repz
lods
jne
mov
(bad)
jl
push
inc
add
sub
jnp
add
inc
cmc
mov
add
sbb
inc
inc
mov
mov
stc
data16
mov
ss
hlt
pop
pop
add
xchg
xchg
mov
inc
(bad)
adc
mov
cmc
dec
or
inc
mov
leave
mov
inc
jmp
add
cld
data16
ss
and
jmp
and
lock
gs
test
pop
hlt
add
xchg
pop
fst
popa
mov
mov
call
in
push
cmp
or
or
push
and
lods
or
out
mov
adc
xchg
clc
scas
inc
stos
sbb
cmp
test
outs
push
aam
les
inc
in
push
inc
retf
cmp
push
sub
loopne
dec
push
dec
stos
ret
mov
fwait
test
push
pop
xchg
rcr
enter
ret
test
dec
dec
repnz
xchg
or
mov
and
mov
or
pop
lock
jge
mov
inc
add
in
add
mov
and
(bad)
hlt
nop
and
in
push
mov
mov
mov
arpl
sbb
sbb
add
jb
lahf
adc
xchg
fnstenv
adc
rcl
sbb
xor
je
scas
shl
sub
in
or
repz
pop
cmp
lsl
jo
or
inc
imul
or
cmp
in
enter
out
xchg
iret
xor
daa
xchg
jge
mov
push
lea
or
fucomi
dec
inc
stos
xlat
into
jp
and
(bad)
inc
mov
lock
add
lods
jl
xchg
call
add
push
cdq
leave
loopne
pop
(bad)
mov
or
cmp
add
cdq
in
fmul
mov
enter
sbb
rcr
inc
es
sbb
push
gs
int3
hlt
inc
enter
sbb
cmp
push
ret
fs
data16
loopne
(bad)
repnz
dec
shr
sub
jb
mov
or
shl
lods
mov
je
mov
shl
in
int
in
repnz
inc
sbb
mov
cmps
pop
ss
sbb
data16
ja
or
movs
ins
scas
imul
inc
push
popa
ret
fldenv
dec
mov
mov
fxch
push
cdq
mov
inc
mov
and
mov
fs
inc
mov
add
lods
push
test
fild
pop
mov
adc
scas
int3
pusha
mov
adc
jl
xor
enter
sbb
pushf
sbb
cwde
sbb
cmp
sbb
xchg
jmp
rcl
and
ds
sar
xchg
mov
icebp
je
ret
adc
adc
mov
add
sbb
les
mov
es
add
dec
sbb
mov
xor
xor
in
mul
daa
nop
xchg
xchg
xchg
pop
or
push
icebp
in
xchg
inc
enter
out
add
sbb
push
mov
nop
pop
jmp
cmp
sbb
dec
repnz
fs
or
push
cmp
xor
pop
repz
cmp
push
pop
sub
loopne
push
xchg
out
repnz
push
loopne
and
and
and
mov
sub
and
fistp
dec
pop
add
cmps
imul
data16
mov
push
paddd
pop
inc
add
mov
ret
loope
cmp
cwde
push
or
(bad)
jbe
daa
sub
and
dec
bound
sbb
and
or
lods
and
sub
sub
pop
mov
push
and
bound
cmp
sbb
fsubr
popa
pop
adc
fcomp
fcomp
push
and
sbb
sbb
push
cdq
and
rcl
out
mov
les
cmp
arpl
enter
les
fdiv
fwait
ins
sahf
les
or
and
sbb
retf
mov
add
and
push
and
frstor
cmps
push
jae
and
mov
leave
es
fld
cli
adc
les
sbb
rcr
sbb
sbb
mov
push
and
mov
pop
adc
popa
mov
cmp
mov
xchg
popf
mov
sbb
mov
sbb
dec
movs
sbb
mov
test
sbb
cwde
xchg
les
push
dec
mov
nop
add
nop
sbb
dec
jbe
nop
enter
sub
sbb
mov
sbb
xchg
add
mov
push
in
mov
xor
sbb
add
sub
nop
daa
push
rcr
sbb
jb
or
(bad)
in
in
hlt
in
loop
and
test
inc
repz
ins
jo
jns
outs
mov
fisttp
or
popa
push
imul
icebp
adc
fmul
pusha
add
jb
stc
fs
push
pop
ins
add
inc
outs
jne
push
aad
or
jb
outs
arpl
cs
push
dec
add
dec
aad
inc
shl
jg
test
and
fadd
setg
mov
push
outs
imul
jle
outs
ja
arpl
mov
(bad)
and
inc
out
pop
je
mov
inc
jns
push
outs
jb
cwde
add
push
rcr
sub
std
or
retf
sti
mov
out
call
push
inc
fadd
sub
test
mov
mov
jnp
mov
push
lock
or
jno
nop
fimul
mov
sub
test
xchg
cld
jl
leave
sbb
pop
jle
out
pop
aam
(bad)
out
xor
pop
(bad)
push
pop
imul
adc
cs
nop
outs
repnz
add
or
daa
adc
test
push
sub
inc
adc
and
test
pop
inc
outs
jns
xchg
adc
cmp
mov
out
push
gs
inc
mov
or
mov
add
cmp
add
sub
aas
xor
mov
leave
or
mov
sbb
movsx
push
add
and
mov
xchg
mov
add
push
jae
xchg
loope
das
pop
add
mov
cmp
xor
call
cmc
cmp
dec
bnd
push
sbb
fsubr
test
push
sub
cmp
cmp
adc
sub
xchg
push
movs
xlat
sbb
sbb
outs
push
jl
add
icebp
adc
fild
add
pop
xchg
pop
into
stos
test
xor
fst
popa
add
cmp
sub
inc
sub
jle
adc
add
add
inc
scas
cmp
push
(bad)
int3
jae
scas
push
aad
sub
lds
add
mov
fs
ret
ret
jae
or
(bad)
and
inc
mov
aaa
sub
data16
push
lahf
(bad)
stos
mov
jg
jp
test
and
sub
cmp
mov
jle
sub
add
sub
out
imul
add
or
cmp
test
sbb
rol
(bad)
push
xor
or
or
inc
retf
ficom
or
out
(bad)
popa
add
(bad)
pop
out
pop
sbb
es
push
jmp
and
xchg
mov
sbb
jle
sub
xor
and
mov
xchg
pushf
sub
cmp
setg
inc
jge
ins
and
push
mov
sbb
or
jne
xchg
inc
dec
ret
sub
sub
jmp
dec
jne
lahf
pop
movs
jns
enter
jne
cmp
inc
xor
adc
mov
inc
mov
cmp
mov
cmovno
dec
sbb
ret
call
ins
push
stos
cmp
mov
xchg
or
cmp
movs
or
(bad)
sbb
inc
repz
fnstcw
cld
mov
ins
adc
leave
jae
inc
cmc
cwde
pop
int3
rcr
or
fadd
test
dec
stos
lods
pop
lods
scas
xor
and
and
and
xchg
and
and
cwde
mov
push
enter
push
ret
xor
push
inc
push
and
lahf
dec
push
inc
div
sub
pop
mov
hlt
ret
in
loop
mov
enter
nop
sub
cmp
pop
inc
or
add
fadd
jne
ins
xchg
pop
mov
pop
push
dec
and
bnd
pop
adc
gs
in
cs
adc
inc
xchg
jo
inc
and
mov
or
pop
adc
leave
mov
fdiv
sbb
sbb
push
lds
inc
xchg
je
je
mov
push
not
pop
int3
push
pop
mov
push
pusha
ja
jae
sub
bound
loope
adc
pop
sub
push
jbe
test
dec
imul
inc
enter
inc
pop
xchg
ins
pop
mov
pop
lock
push
xor
ja
cmp
ins
mov
add
cmp
or
push
mov
xlat
inc
xor
and
sub
shl
or
pop
iret
pop
pushf
push
enter
jmp
test
mov
add
xor
ds
hlt
or
sub
push
xchg
aas
mov
icebp
jno
out
jae
dec
retf
arpl
or
add
dec
add
inc
ins
popa
(bad)
sti
adc
inc
add
push
(bad)
cmovns
inc
fs
jo
fdivr
jg
jb
daa
add
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
or
jne
jo
inc
jnp
mov
jecxz
xor
jns
rcr
inc
out
rol
mov
sub
mov
push
dec
test
dec
je
lods
jmp
in
dec
mov
adc
outs
fwait
in
xor
fadd
push
pop
cmp
jo
mov
or
cmp
popf
sub
in
xor
adc
dec
test
les
mov
sbb
inc
or
push
or
add
or
aas
ins
or
or
outs
pop
addr16
xor
xchg
ret
xor
and
into
mov
movs
dec
lsl
loopne
das
push
push
add
in
das
mov
dec
fs
daa
ins
mov
add
inc
lods
dec
das
cmp
ret
push
js
mov
scas
pop
mov
dec
jae
sub
pop
fdiv
xor
or
jg
add
mov
sbb
jecxz
add
imul
jp
xor
ins
mov
add
outs
xor
add
neg
outs
or
or
sub
xchg
and
and
mov
adc
inc
or
jb
and
or
jmp
ss
test
adc
pop
inc
call
jb
jb
add
nop
mov
sbb
xor
daa
jns
jl
inc
andps
dec
push
jbe
(bad)
repz
aaa
add
mov
adc
call
pop
or
inc
jb
jo
push
sbb
imul
or
inc
jl
sub
push
dec
fsub
ds
sub
xor
or
push
push
xor
push
xchg
or
pop
ins
xlat
jb
inc
jne
push
cmp
rcl
aad
xor
push
or
or
add
sub
(bad)
(bad)
dec
push
xchg
push
inc
or
fdiv
adc
rcr
mov
int
addr16
fadd
sbb
add
enter
jg
adc
mov
fcmovu
xor
and
enter
sub
push
adc
xor
arpl
imul
sbb
dec
aad
sub
pop
and
clc
js
pop
mov
or
fmul
out
ror
add
push
or
jbe
inc
adc
pop
mov
sub
cmp
lea
jmp
push
inc
xor
or
jl
jnp
dec
jne
xchg
stos
test
mov
ror
or
dec
inc
jmp
shl
aad
add
push
sub
adc
lods
adc
lock
and
jmp
cmp
adc
sbb
gs
push
mov
shl
xchg
enter
mov
push
add
xor
fidiv
dec
ja
pop
and
adc
adc
lea
aaa
or
leave
cli
nop
bound
pop
lods
(bad)
push
inc
pop
lock
sti
add
or
xlat
add
add
test
adc
aad
into
int
je
jle
sbb
pop
jge
sub
jle
fist
lea
add
cmp
or
jp
add
inc
add
xlat
into
or
icebp
iret
dec
cmp
je
add
add
mov
inc
lods
pusha
add
pusha
dec
jmp
sub
cmp
hlt
xchg
ins
adc
cmp
cmp
into
xchg
pop
cmp
xchg
xchg
xchg
(bad)
cmp
mov
fs
inc
das
add
mov
or
inc
or
or
leave
test
jmp
adc
mov
rol
dec
add
clc
add
mov
dec
aaa
test
add
push
sub
jmp
adc
sbb
shl
not
ins
pop
adc
cdq
loop
push
fdivr
hlt
jle
add
or
mov
inc
inc
fist
pop
adc
and
add
clc
xchg
cld
das
add
loop
call
std
jg
dec
sar
pop
add
repz
mov
xchg
xchg
imul
stos
cs
adc
and
push
push
movs
xor
leave
out
sub
adc
lds
or
xchg
sub
mov
pop
(bad)
jl
in
loope
mov
jecxz
out
or
data16
(bad)
repz
dec
cmp
inc
push
push
cs
jo
add
sbb
add
pop
xor
mov
pop
and
adc
mov
fst
fwait
adc
jp
lidtd
or
lock
cwde
dec
sub
jmp
cmp
test
hlt
add
jae
clc
adc
and
icebp
xchg
fcomp
cmc
leave
xchg
lds
inc
mov
sub
add
adc
xchg
cli
jns
sahf
fimul
xlat
pop
mov
into
lods
and
ins
push
add
(bad)
jbe
add
lds
fs
cmp
mov
cmp
dec
jo
sbb
xor
repnz
push
mov
sub
push
repz
ss
aam
adc
int
pusha
mov
stc
loopne
cmp
sub
jno
call
sbb
retf
and
enter
xor
les
lock
out
inc
xor
adc
out
adc
or
and
xor
pop
(bad)
dec
call
cmp
dec
jne
pop
mov
ja
add
mov
or
mov
add
ja
scas
pop
and
inc
pop
repnz
mov
inc
cld
aaa
push
pop
loop
repz
cld
mov
pop
inc
mov
or
pop
push
push
test
cli
mov
inc
lods
pop
inc
jecxz
mov
push
or
jnp
pop
cmp
(bad)
push
out
cmps
xchg
or
jo
sub
in
mov
adc
daa
clc
push
jb
repz
adc
jno
fist
ret
lahf
pop
ret
enter
add
mov
push
push
push
bndstx
cmp
or
mov
adc
mov
dec
rcr
xor
or
add
xor
iret
cmp
in
lds
or
sbb
pop
inc
or
jns
ds
xor
cld
lock
adc
sbb
in
push
in
pop
inc
je
arpl
or
rcl
inc
adc
mov
test
fwait
xor
das
nop
aam
xor
sahf
pop
inc
hlt
sub
ret
pop
fcom
es
xchg
loop
inc
pop
fwait
outs
cmp
add
fwait
in
add
dec
pop
inc
inc
and
cs
or
leave
and
in
(bad)
push
out
xchg
mov
and
mov
or
clc
nop
pushf
movs
dec
and
sub
jns
dec
inc
jle
jnp
fs
in
sti
dec
pop
ret
inc
movs
inc
in
sbb
or
call
sub
fsubr
sbb
xchg
test
adc
fisttp
fadd
jne
xor
rol
(bad)
hlt
(bad)
loopne
adc
inc
mov
in
or
pop
in
(bad)
sub
push
cmp
xchg
mov
pop
call
push
dec
call
mov
adc
pop
jb
fld
pop
or
sbb
dec
sbb
mov
inc
iret
push
add
or
rol
push
inc
mov
inc
daa
(bad)
clc
hlt
mov
mov
inc
dec
or
imul
pop
inc
pushf
push
gs
add
lahf
adc
nop
sub
xor
fisttp
jl
inc
mov
add
jb
xchg
inc
lods
sub
loop
and
or
fdivr
push
rol
dec
int
dec
mov
fs
call
jne
leave
es
jp
inc
jg
shl
data16
mov
xchg
or
out
cmp
(bad)
ja
push
sub
les
out
or
pop
ins
dec
mov
or
and
nop
or
pop
clc
mov
sbb
mov
mov
ins
jmp
dec
idiv
ins
leave
out
and
mov
lods
xchg
adc
dec
mov
clc
sbb
je
cmps
pop
popa
add
lock
sub
lock
ja
out
nop
into
push
or
or
jmp
ja
push
jnp
xor
scas
push
cwde
dec
sar
sub
pop
pop
rcl
push
fs
pop
add
dec
clc
rol
add
cmp
add
adc
inc
xchg
push
lock
push
adc
addr16
or
sub
or
xchg
push
ja
sub
shl
xchg
clc
dec
mov
call
hlt
mov
add
and
fsubp
push
dec
dec
sbb
mov
enter
xchg
add
inc
shr
in
push
jb
dec
js
dec
movs
mov
mov
push
paddusw
jb
fisub
jl
mov
push
in
arpl
mov
inc
pusha
adc
out
push
mov
and
push
test
leave
addr16
pop
mov
(bad)
fwait
jl
repnz
dec
mov
movs
and
leave
lea
and
ja
popa
jecxz
inc
jmp
ins
jmp
js
or
jo
(bad)
scas
jge
add
sub
inc
dec
rcl
xchg
xchg
dec
inc
mov
cmp
jne
add
and
sbb
adc
inc
push
xor
daa
add
or
scas
dec
mov
inc
test
add
hlt
xor
sub
or
inc
dec
push
div
add
xor
inc
add
sub
sar
and
mov
jae
in
out
aas
cmp
jne
test
or
push
or
rol
mov
jae
and
sub
add
xchg
push
xchg
mov
adc
in
mov
adc
inc
sub
xor
mov
mov
ret
cmp
adc
loopne
dec
add
adc
cs
xchg
add
sbb
sbb
sub
daa
add
mov
inc
xchg
sbb
pop
adc
xor
or
mov
lea
mov
fnclex
mov
and
loope
fs
retf
and
popf
and
sub
adc
and
xor
out
outs
fist
dec
adc
inc
xor
addr16
ret
sub
sbb
mov
int
leave
adc
jmp
(bad)
jle
adc
add
adc
add
ins
pop
test
imul
xchg
outs
test
xchg
adc
iret
iret
fs
add
adc
arpl
push
sub
call
cs
sbb
mov
mov
add
xchg
lock
stos
inc
clc
dec
in
inc
outs
sbb
je
jg
mov
fidiv
shr
adc
ret
or
mov
and
cmps
jmp
faddp
ja
inc
pop
pcmpeqw
ret
add
mov
ds
adc
push
shl
mov
arpl
bound
fldenv
xor
sub
test
jmp
jno
sbb
test
mov
inc
jbe
push
mov
or
push
ror
push
jecxz
stc
cmp
fldcw
inc
xor
jnp
dec
je
aam
push
jmp
out
je
int3
dec
leave
pusha
add
jle
xchg
into
xor
add
sbb
mov
inc
lea
push
pop
dec
xchg
xlat
mov
cmpps
and
push
outs
sub
add
ins
(bad)
ds
jns
dec
dec
or
pusha
imul
adc
jl
out
push
inc
repz
add
dec
xor
sub
or
add
jl
jno
movs
mov
and
pop
dec
add
fld
jne
fld
and
or
clc
jle
imul
sbb
cmp
hlt
jl
cmp
xor
jmp
ror
inc
adc
repz
shl
popf
xchg
or
push
rcr
retf
add
rol
xchg
lahf
mov
and
sahf
sub
add
mov
dec
rcl
imul
daa
pop
data16
and
mov
jecxz
fsubr
mov
int
pop
pop
cmp
jmp
fmul
pop
ss
cmp
adc
dec
sub
sahf
jmp
or
popf
pop
pop
sbb
enter
sahf
cmp
cmp
dec
xor
add
fild
push
movs
add
adc
mov
or
ins
into
xlat
and
add
cmp
(bad)
clc
sub
pop
in
mov
adc
add
xchg
sub
cmp
xchg
mov
cwde
and
data16
add
(bad)
lea
popf
push
in
test
xchg
arpl
daa
adc
mov
call
sbb
add
(bad)
fmul
or
call
xchg
movs
scas
inc
pop
fisttp
add
call
push
sub
mov
xor
push
out
sbb
mov
fsubr
sbb
retf
stos
adc
pop
add
add
sbb
dec
sbb
dec
cmp
lods
repnz
push
add
pop
pushf
shr
inc
pop
pusha
xchg
add
aaa
adc
and
sub
ss
in
out
into
sbb
retf
or
push
xchg
inc
dec
pop
retf
test
adc
xchg
sbb
js
xchg
add
jbe
std
or
adc
(bad)
pop
push
repnz
call
xchg
push
jmp
stos
inc
mov
dec
add
in
jne
pop
(bad)
ins
mov
retf
je
lock
or
sahf
(bad)
fidiv
sbb
test
loop
pop
xor
jae
in
dec
stos
mov
add
adc
ror
lea
ins
inc
clc
jmp
popa
xchg
xor
jnp
and
and
push
pop
mov
jmp
es
mov
push
ret
dec
push
sub
push
shr
push
je
mov
or
call
mov
inc
mov
cmp
xor
mov
xchg
fadd
call
cmp
icebp
mov
or
mov
pop
xor
pop
mov
enter
adc
pop
jge
xor
repz
mov
loop
add
in
and
jmp
addr16
jmp
push
leave
cwde
and
in
fldenv
fsub
enter
add
and
out
add
inc
inc
nop
xchg
fcomp
dec
mov
pop
aas
push
cmp
add
ror
sbb
sbb
push
or
test
sbb
sub
lahf
push
cmp
mov
movs
add
inc
add
jae
lock
push
dec
sbb
or
dec
jo
fild
adc
add
or
ins
cmps
fiadd
push
push
adc
xchg
add
dec
shl
or
cmp
pop
cmp
jg
xor
sub
inc
nop
mov
sub
aaa
(bad)
in
dec
aam
and
out
stos
xor
popf
retf
adc
push
cmp
or
hlt
mov
add
das
rcr
stos
xchg
inc
jo
mov
jle
movs
int
xor
mov
inc
dec
fs
add
cmp
sbb
aam
add
adc
dec
mov
dec
cmp
cmp
cld
push
mov
mov
fucomip
or
xchg
push
outs
jns
ins
xchg
into
pusha
lds
pop
pop
adc
push
jmp
jmp
inc
fld
inc
jne
or
call
mov
pusha
sub
nop
mov
mov
and
sar
(bad)
dec
cmps
in
sub
leave
add
mov
mul
retf
jo
dec
dec
pop
popa
mov
or
dec
mov
hlt
inc
sbb
cmp
dec
or
push
mov
fadd
xchg
adc
and
mov
adc
nop
jmp
mov
cld
dec
adc
mov
ja
mov
xor
cmp
jb
mov
imul
jno
sbb
jne
retf
and
aas
dec
sub
jne
pop
pop
cmp
dec
or
add
aam
add
xor
cmp
dec
in
test
add
pop
pop
cld
bound
sub
push
(bad)
mov
out
jnp
push
popa
nop
add
mov
pop
xchg
ucomiss
mov
sub
cs
icebp
sbb
adc
add
aam
and
fdivr
cmps
jmp
cld
dec
jno
inc
sub
je
add
jmp
mov
enter
jmp
adc
jl
int
xor
jbe
movs
mov
pop
mov
mov
pop
aas
mov
xchg
pop
push
push
hlt
dec
stos
push
xor
mov
and
retw
add
pop
test
fsubr
popa
mov
leave
cmps
rol
mov
sub
inc
xor
cmp
(bad)
leave
leave
or
sahf
pop
test
mov
push
aad
dec
xor
dec
mov
jge
jns
push
hlt
pop
les
jne
mov
pop
jg
mov
mov
add
lds
sub
push
pop
aam
pop
sub
or
outs
pusha
mov
mov
(bad)
nop
out
imul
adc
sub
inc
sbb
(bad)
sub
jae
in
mov
sahf
xor
dec
and
xchg
lods
mov
xchg
jne
bound
and
cmp
aaa
fist
jmp
and
and
popa
add
je
je
pop
imul
rol
into
popa
xlat
out
cmps
imul
jmp
mov
je
in
ret
add
lea
nop
cs
and
dec
fadd
jmp
pop
pop
push
fsub
ins
stc
or
jmp
mov
test
pop
add
mov
pusha
jecxz
xchg
xchg
dec
bound
or
sbb
xchg
sbb
mov
das
xchg
xchg
or
mov
hlt
or
jmp
jo
retf
add
xor
jns
sbb
scas
(bad)
sti
mov
or
dec
popa
sub
or
mov
add
adc
enter
mov
mov
aam
inc
mov
pop
shl
xchg
pop
es
xchg
add
das
out
mov
mov
retf
cmp
int3
adc
sub
jmp
int
stos
xor
dec
cs
sbb
pop
mov
push
cmps
push
add
test
xor
push
mov
push
push
cmp
fs
mov
add
push
fadd
mov
sub
jmp
pop
inc
pushf
je
into
outs
mov
mov
dec
mov
fs
lds
adc
sub
cld
fs
inc
sar
fst
mov
pop
jle
jae
and
test
mov
outs
inc
adc
adc
js
stc
xor
mov
or
mov
dec
pop
push
cmp
or
jle
inc
or
mov
std
dec
jle
in
clc
repz
dec
test
mov
sar
adc
in
jnp
dec
push
fadd
fdivr
in
mov
rcl
outs
mov
jecxz
jmp
ds
(bad)
xor
call
xor
mov
dec
mov
push
pop
pusha
aaa
and
or
push
push
sbb
xor
xor
cmp
and
enter
leave
pop
inc
jmp
in
add
or
fld
clc
hlt
fnstsw
dec
pop
cli
xchg
add
ins
iret
sub
dec
xor
outs
enter
xchg
enter
xchg
add
les
in
das
jbe
jmp
shl
add
imul
in
cmp
das
repnz
lock
add
push
sub
pusha
dec
inc
jnp
mov
jnp
sbb
and
xchg
cli
or
cmp
dec
mov
clc
mov
std
jne
and
les
ret
psadbw
dec
xor
push
sbb
xchg
push
int3
ins
add
aam
add
fmul
add
ja
fldenv
and
mov
sub
fbld
adc
pop
inc
cmp
enter
pop
sbb
add
pop
mov
jb
adc
adc
inc
mov
mov
mov
das
pop
push
inc
dec
push
sub
retf
adc
or
jb
out
sub
leave
push
loope
dec
mov
push
clc
jl
and
push
inc
and
and
test
call
adc
bound
out
repnz
xchg
or
mov
sti
sbb
pop
adc
outs
adc
sahf
xor
cli
pop
enter
(bad)
imul
mov
and
push
pop
test
jecxz
adc
out
lds
ror
push
int3
movs
inc
xor
bound
lock
xchg
addr16
outs
cs
je
div
int
push
cmp
das
ins
push
gs
xor
xor
or
adc
jo
daa
push
jp
cli
mov
jecxz
or
pop
or
or
or
cmp
sbb
sbb
push
xchg
cmp
scas
xor
adc
ins
lock
les
mov
es
fbstp
lock
sub
xchg
cmp
mov
mov
push
cmp
inc
xor
int
push
mov
push
nop
imul
push
data16
call
push
add
pop
mov
push
cmovne
movs
push
push
and
push
inc
xor
les
test
aad
fimul
push
add
or
pop
mov
push
adc
ror
popf
sbb
cwde
xor
adc
pushf
push
inc
call
xchg
call
iret
xchg
lea
inc
sahf
(bad)
nop
ins
clc
mov
push
ret
cmps
(bad)
lods
adc
jns
iret
pop
mov
(bad)
adc
adc
adc
cmp
jle
ret
xor
add
inc
add
jg
dec
jne
add
scas
sub
add
ret
pop
ffreep
mov
adc
cmp
pop
dec
(bad)
pusha
inc
lea
jge
sbb
inc
cmps
add
sbb
mov
test
mov
retf
mov
lods
pop
lods
and
mov
retf
scas
and
mov
xor
add
inc
jo
add
push
inc
mov
xor
dec
xor
mov
push
jmp
pop
sbb
add
pop
ss
std
mov
mov
inc
push
pop
xor
mov
inc
add
ds
mov
addr16
sub
outs
(bad)
in
call
les
sbb
ret
push
adc
rcl
or
fadd
xor
push
fsub
mov
add
mov
xchg
sbb
sbb
adc
xchg
add
fcomp
lock
push
jmp
add
add
pusha
sub
enter
mov
or
add
fcmovnb
(bad)
inc
push
into
inc
adc
sar
shl
push
imul
mov
push
sub
inc
aad
aaa
push
int3
pop
mov
adc
repnz
lea
ins
sbb
dec
cmp
es
sbb
and
adc
je
dec
mov
add
adc
jbe
and
xor
mov
jl
jbe
lock
push
mov
push
xor
adc
jecxz
add
push
mov
push
dec
adc
cmp
lods
cmp
pop
jmp
and
add
or
lods
int
in
pop
inc
stc
shl
add
(bad)
shl
xor
test
cwde
cmp
dec
cs
adc
push
or
adc
aam
or
inc
push
leave
and
inc
loop
xchg
test
xchg
lods
inc
das
mov
push
adc
sbb
adc
mov
aad
or
mov
jecxz
jl
xor
add
mov
and
jo
mov
inc
or
dec
outs
int3
jb
shr
add
inc
mov
dec
repz
mov
inc
inc
inc
inc
mov
add
mov
imul
mov
repnz
sbb
iret
dec
jae
inc
inc
inc
inc
dec
mov
aaa
mov
rcl
cli
fadd
jb
adc
mov
fdivr
xor
enter
in
inc
rcl
dec
lea
sub
xor
push
jmp
sbb
ror
ret
add
and
jne
mov
sbb
or
adc
stc
mov
aad
add
and
inc
inc
adc
int3
cmp
cdq
push
dec
xchg
xchg
or
cmp
or
mov
push
inc
dec
pop
xchg
in
addr16
gs
add
movs
cs
jb
imul
push
inc
dec
dec
adc
outs
mov
jae
jb
dec
adc
adc
add
lea
les
inc
push
mov
jmp
add
leave
dec
and
and
test
add
or
rcr
not
adc
xor
push
push
cmp
das
mov
gs
imul
hlt
loope
or
mov
addr16
stc
rcr
xor
or
ja
mov
iret
repz
cmp
(bad)
xlat
jmp
jmp
(bad)
ret
mov
fldenv
sti
mov
retf
mov
into
icebp
mov
lods
iret
aam
mov
(bad)
(bad)
in
sti
or
dec
fidiv
scas
xor
dec
das
adc
add
jmp
mov
adc
aam
and
add
imul
adc
pop
sbb
out
add
cmp
add
mov
add
mov
or
and
push
aas
xor
je
dec
jne
inc
or
mov
in
nop
push
les
sub
test
push
nop
stos
pusha
ins
pop
mov
mov
or
adc
jg
ss
cmp
adc
dec
repnz
ins
cs
pop
jns
sbb
or
jl
aaa
cwde
adc
je
fs
lds
cmp
mov
popa
xlat
and
xor
pop
or
cmp
pop
push
sub
lods
cmp
jnp
cli
clc
dec
mov
repnz
repz
jl
xchg
xchg
xchg
xchg
scas
scas
mov
xchg
xchg
xchg
xchg
mov
mov
cdq
xchg
xchg
xchg
mov
mov
push
add
push
inc
and
hlt
push
in
jmp
inc
xchg
out
call
adc
in
push
xor
shl
add
leave
nop
sbb
hlt
mov
and
mov
xor
pusha
rcr
(bad)
lds
push
mov
mov
inc
push
loop
(bad)
cli
rcl
jmp
dec
adc
in
sub
aaa
clc
push
fst
repnz
in
scas
push
and
inc
lods
ficomp
add
xlat
es
test
das
pop
jl
push
fs
retf
mov
or
xchg
out
cmovne
sbb
dec
cs
les
call
mov
js
inc
xor
mov
lds
in
adc
or
xchg
adc
bound
inc
mov
fs
cmps
cmps
test
fs
nop
nop
lods
scas
cmp
add
mov
inc
jge
inc
sahf
gs
(bad)
cld
jnp
dec
mov
inc
inc
aas
ins
xchg
and
or
push
or
cmp
in
and
xor
int
sub
in
call
ins
xor
mov
sub
mov
push
(bad)
pop
mov
push
push
mov
nop
sbb
cli
cli
retf
out
loop
fcom
mov
inc
inc
xchg
lock
in
pop
cwde
jno
hlt
pop
repnz
or
lea
add
sbb
aam
and
jb
dec
aaa
fld
mov
and
in
dec
(bad)
and
enter
and
add
pop
mov
or
inc
sub
stos
pop
lods
in
xchg
(bad)
sub
push
leave
add
sbb
adc
shl
icebp
sub
add
inc
jb
test
pop
adc
cmp
or
or
inc
lods
inc
and
and
and
or
pop
aad
dec
sub
movs
jns
fld1
adc
adc
and
repnz
and
cli
and
inc
xor
or
leave
inc
mov
fs
push
repnz
nop
sub
push
mov
enter
ss
adc
not
mov
mov
test
push
loopne
xchg
pop
rcr
mov
fnstenv
test
add
add
dec
xchg
mov
cmp
push
adc
je
jne
jmp
and
adc
and
push
push
dec
and
movs
mov
jo
in
inc
add
gs
xchg
fmul
mov
xchg
hlt
lods
lea
lods
mov
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
cwde
cdq
xor
xor
call
dec
sahf
hlt
xchg
xor
mov
sub
popa
sbb
adc
sub
and
and
adc
jbe
sbb
data16
test
stos
cmp
mov
and
dec
dec
mov
rcl
adc
shl
cmp
ficom
movs
imul
cmps
nop
out
clc
mov
and
call
adc
in
and
jnp
test
sbb
sub
inc
add
jnp
and
dec
pop
or
sub
pop
or
add
mov
pop
nop
xchg
rol
adc
je
mov
jns
mov
sbb
bound
leave
adc
nop
and
jb
jb
adc
adc
sub
test
je
sbb
adc
inc
xchg
push
imul
loop
cli
(bad)
jmp
add
iret
mov
cmp
(bad)
mov
ins
(bad)
cmp
push
pop
xchg
out
or
mov
mov
and
repnz
add
mov
xchg
pop
adc
xchg
imul
dec
and
and
daa
cs
stos
cs
frstor
and
mov
push
xchg
push
xchg
sub
inc
data16
jp
and
and
cmp
mov
push
cmp
nop
adc
sub
dec
and
pusha
inc
mov
lea
movs
stos
add
neg
pop
add
add
out
or
(bad)
arpl
int3
push
lods
cwde
adc
in
mov
cmps
add
inc
sbb
call
jbe
in
mov
iret
mov
shr
cmp
ret
(bad)
(bad)
and
shr
mov
add
push
inc
into
add
cs
in
xchg
inc
sbb
xor
jp
fcmovnbe
cmp
adc
in
xchg
mov
or
fadd
and
hlt
mov
dec
(bad)
or
clc
fs
fndisi(8087
dec
mov
test
ins
mov
or
add
jmp
out
mov
mov
loopne
loope
loop
add
cmp
test
test
sbb
inc
push
push
leave
fist
test
std
in
push
mov
pop
movs
mov
fsub
or
add
in
and
sar
add
mov
mov
mov
mov
enter
and
add
fwait
jne
or
pop
sub
mov
fwait
or
lock
add
push
add
movs
(bad)
xor
push
cli
inc
pop
xchg
in
(bad)
dec
enter
fnstsw
lods
mov
mov
test
out
push
arpl
test
inc
int3
shl
pop
lea
cdq
frstor
push
push
sbb
add
adc
movs
mov
(bad)
(bad)
pop
xchg
adc
es
int
and
push
clc
pushf
cmp
sub
push
adc
dec
mov
pop
xor
mov
or
dec
xchg
xchg
mov
add
fcomp
cmp
mov
iret
pause
xchg
xchg
xchg
xchg
sub
sbb
inc
xor
in
rol
ret
and
inc
retf
pop
enter
shl
inc
int3
cwde
add
pop
pushf
mov
xchg
xor
mov
(bad)
mov
inc
or
mov
sub
in
or
sbb
sbb
retf
sbb
femms
mov
jmp
and
dec
adc
push
ds
inc
(bad)
test
or
sub
rol
das
in
je
mov
(bad)
stos
jmp
in
or
add
adc
scas
xchg
dec
cmps
adc
adc
pusha
test
add
and
mov
jo
test
pop
ss
loopne
push
jecxz
mov
das
add
in
retf
jo
inc
cmp
or
or
push
or
dec
inc
pop
test
dec
loopne
inc
pusha
ins
mov
add
(bad)
es
nop
leave
inc
sub
pusha
and
sub
ss
fs
push
idiv
push
push
xor
sub
sub
add
adc
push
in
adc
aas
and
add
xchg
jmp
pop
adc
adc
ss
xor
(bad)
mov
or
add
sbb
test
pop
inc
push
mov
outs
sbb
and
clc
cmp
fiadd
jne
adc
sub
inc
push
into
mov
shl
adc
pop
add
fs
sub
xor
mov
fdivr
add
lahf
mov
add
sub
xor
dec
adc
and
sub
cmp
sub
cmp
ins
dec
cmp
js
jno
xchg
xchg
unpckhps
pop
adc
fwait
or
ins
in
push
mov
ficomp
mov
push
lea
stos
dec
mov
push
enter
inc
and
inc
sub
sbb
sbb
fstp
push
mov
mov
leave
adc
ror
nop
pop
adc
ins
jecxz
dec
push
mov
add
xchg
call
adc
jae
gs
push
dec
push
les
ins
jns
(bad)
or
imul
xchg
mov
or
sti
outs
jns
cs
xor
xor
and
or
mov
bound
inc
popa
jb
xor
je
das
inc
and
enter
in
rol
stc
and
aad
or
push
sbb
jno
nop
sub
(bad)
cmp
or
faddp
sub
add
xchg
jae
imul
fcmovnb
sub
jbe
or
cld
mov
mov
jg
js
mov
outs
aas
inc
in
outs
adc
and
xor
cmp
xchg
mov
add
push
adc
popa
ret
jbe
outs
jo
outs
adc
cdq
outs
fldenv
out
sbb
adc
jb
sub
and
test
add
adc
ret
mov
hlt
sbb
or
sbb
imul
lock
jmp
das
leave
push
push
push
cmps
add
adc
cld
inc
popa
loopne
scas
sub
popa
or
loop
mov
bound
adc
adc
jmp
inc
xchg
stos
push
sub
jecxz
pop
push
outs
push
sbb
add
fld
adc
add
jb
pusha
push
pop
adc
xor
pop
cld
popf
pop
ret
push
and
jmp
inc
mov
sub
movs
pop
push
cmp
ins
cld
mov
add
cmp
or
lea
or
xor
sbb
and
push
lods
add
and
aaa
and
add
pushf
xlat
sbb
sbb
movs
sbb
or
addr16
mov
sub
add
and
test
add
push
xchg
fadd
inc
xor
sahf
aam
pop
sub
nop
jne
in
inc
bound
clc
xchg
cmps
push
retf
or
aaa
sub
test
out
sbb
je
gs
jae
pop
arpl
fild
xchg
push
xchg
or
pusha
loope
and
mov
and
cmp
mov
in
sti
imul
add
xchg
fcmovb
in
mov
out
pop
mov
fild
mov
test
and
aad
mov
ss
mov
add
dec
test
dec
mov
push
out
push
outs
fadd
mov
or
mov
push
fidiv
mov
mov
leave
je
in
push
test
mov
mov
inc
pushf
outs
sbb
cmp
jae
and
fist
aam
inc
dec
sub
ret
fsubr
add
js
lods
sbb
pushf
retf
scas
mov
sub
mov
outs
push
xchg
mov
push
in
sbb
js
mov
push
pop
int
outs
sub
ins
adc
retf
jnp
adc
mov
es
sbb
pop
pop
adc
mov
stc
jmp
cdq
in
push
and
xchg
xchg
gs
or
dec
nop
dec
cmp
dec
inc
inc
mov
adc
mov
and
pop
packssdw
mul
lods
ror
(bad)
add
call
adc
loopne
sbb
ret
jecxz
icebp
test
cmp
xchg
shld
cmp
jmp
dec
div
push
push
dec
or
dec
pop
fdiv
mov
(bad)
pop
xchg
xor
adc
aam
cwde
cmp
jmp
fs
sub
pusha
je
push
sub
jne
ins
sbb
ss
das
adc
jno
in
mov
jmp
push
jns
stos
iret
cmp
ins
jl
cwde
or
or
add
inc
cmp
das
mov
data16
les
or
pop
not
test
lahf
bound
fs
inc
pop
fld
fld
out
dec
cs
cmp
cs
cmp
cmovae
jns
cmp
dec
xchg
test
mov
jb
xchg
pusha
mov
(bad)
das
lock
cmp
adc
icebp
jnp
xor
mov
dec
xchg
xchg
ror
or
loopne
inc
inc
push
pop
xchg
inc
not
add
fld
pop
int3
push
stos
stos
add
xor
sbb
push
add
std
loopne
add
jl
xchg
bsr
fwait
pop
push
xor
pop
fcom
and
ins
pop
ror
add
push
rol
push
add
add
sbb
inc
push
test
mov
bound
jne
adc
inc
fmul
xchg
(bad)
add
add
fild
pop
fmul
frstor
add
rol
inc
mov
xchg
or
adc
add
nop
outs
push
int3
adc
fs
lds
and
and
mov
sub
and
mov
sahf
and
cwde
or
add
or
mov
adc
retf
and
rol
cld
into
rcl
enter
adc
sbb
push
adc
and
pop
ja
and
adc
mov
cmp
or
mov
push
in
cld
inc
push
pop
push
add
pop
div
jne
adc
ss
add
add
leave
xor
cmp
sub
xor
adc
dec
and
sbb
retf
out
push
xchg
sar
pop
push
(bad)
add
lock
pop
adc
pop
cmp
adc
jge
cmp
push
cld
imul
mov
pop
and
cld
cli
enter
inc
jb
cli
clc
cli
popf
add
xor
shl
cli
mov
lock
lock
hlt
cli
inc
jb
and
cmp
hlt
adc
sti
pop
xchg
add
loopne
dec
call
cli
jb
addr16
fdivr
xchg
dec
xor
adc
add
push
cmp
jb
and
rcl
cmp
leave
neg
arpl
je
xor
leave
(bad)
les
lods
mov
lea
cwde
int3
mov
fstp
in
dec
push
mov
mov
test
movs
fld
mov
mov
mov
(bad)
nop
xchg
cmp
cmp
xchg
xchg
xchg
xchg
add
cmp
and
lea
jns
test
inc
or
add
xchg
fimul
adc
ins
int
out
push
outs
mov
data16
mov
and
les
add
sti
jnp
ret
sbb
ret
xchg
xchg
gs
sbb
sbb
pop
inc
(bad)
sbb
sbb
xchg
or
push
(bad)
pop
mov
and
xchg
and
and
mov
pop
push
mov
out
adc
mov
xchg
js
rol
fnstenv
ins
aad
cwde
rol
hlt
adc
cmps
imul
imul
sldt
lods
fmul
jns
jbe
dec
xor
mov
cmp
sub
pop
cwde
xchg
sbb
xchg
xor
xchg
(bad)
in
push
mov
mov
add
stos
sub
push
fadd
jmp
sbb
xchg
pop
in
adc
dec
iret
inc
pop
jo
dec
es
jmp
es
adc
adc
cmp
push
popa
adc
std
pop
clc
fstp
xchg
cmc
mov
ficomp
and
xchg
add
inc
xor
xchg
pushf
aas
xlat
test
sbb
add
test
pop
enter
pushf
mov
cwde
xchg
jb
pop
enter
sbb
inc
jb
mov
mov
mov
sbb
js
jl
test
xor
jb
jo
push
in
test
out
push
stos
add
or
lahf
nop
shl
mov
push
cmp
int
iret
mov
shl
jae
mov
cmp
or
mov
ss
je
mov
sbb
jmp
xor
xchg
leave
out
xor
add
jo
or
sti
mov
adc
test
mov
push
(bad)
mov
jo
mov
ficom
mov
std
pop
loopne
mov
addr16
push
and
xchg
push
add
xor
std
(bad)
cmp
xor
xor
xor
or
xor
aaa
xor
xor
adc
xor
xor
sub
xor
xlat
(bad)
mov
cmp
xor
add
xor
aaa
and
imul
xor
xor
adc
xor
(bad)
(bad)
pop
cmp
cmp
sbb
cmp
(bad)
push
xor
xor
fdiv
xor
or
lods
mov
dec
cmp
jae
jns
mov
ins
test
xor
ins
out
(bad)
push
jno
xchg
call
popf
xor
pop
xchg
push
xchg
xor
imul
inc
or
mov
mov
push
inc
ds
xlat
pop
inc
addr16
out
fistp
adc
stos
jmp
jnp
xor
xor
push
and
out
mov
lods
mov
ret
shl
sahf
or
int
idiv
cwde
add
ret
push
add
push
cmp
aaa
invd
gs
call
cmp
addr16
aaa
xor
pcmpgtw
rcl
adc
std
mov
jo
cmp
js
ja
mov
jb
and
pop
inc
pop
pop
cs
dec
(bad)
add
or
pop
push
lods
or
aas
stos
gs
add
jge
or
inc
inc
push
dec
inc
inc
mov
outs
jne
push
jnp
neg
ins
push
sti
aaa
and
add
loope
movd
sbb
jl
jns
dec
jns
(bad)
call
mov
popa
fs
jg
adc
or
or
dec
or
shr
in
cmp
je
mov
hlt
jnp
mov
movups
int
add
or
int3
jg
or
nop
jne
add
and
add
adc
retf
out
and
xchg
jo
mov
mov
dec
popa
(bad)
pop
push
dec
rol
inc
nop
test
mov
clc
or
or
and
mov
xor
sub
add
adc
loope
or
adc
loopne
and
inc
jle
retf
and
add
and
xchg
out
adc
mov
fcomp
and
fs
pop
cmp
fdivr
push
dec
enter
loopne
ret
and
jb
push
or
add
lds
sub
loopne
lock
cli
push
xor
nop
rcr
push
test
imul
mov
mov
mov
aam
cwde
int
or
jo
imul
adc
inc
mov
xor
fsub
xchg
gs
adc
fcom
fdiv
rcr
pause
sub
xchg
sar
adc
dec
cli
xchg
sbb
xor
imul
ss
pop
inc
jae
outs
pop
add
mov
push
sub
call
xor
add
loop
push
in
mov
loop
aas
adc
int
mov
shl
hlt
pusha
mov
xchg
arpl
xor
add
mov
data16
pop
les
aam
movs
pusha
leave
loopne
call
js
mov
sahf
cmps
imul
sbb
sub
cmps
adc
xor
push
ja
inc
add
sub
retf
xor
mov
mov
pop
mov
add
in
(bad)
mov
or
(bad)
in
(bad)
xlat
jo
mov
rol
and
or
pop
pop
add
adc
sbb
ins
mov
add
aam
adc
(bad)
fistp
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
(bad)
das
add
jmp
daa
call
outs
pop
gs
mov
je
xor
xor
xor
cmp
inc
inc
inc
inc
inc
inc
inc
add
dec
pop
add
add
xchg
shl
or
loope
and
pop
sub
sub
push
mov
sub
sub
add
xchg
or
aas
aas
add
es
je
and
mov
pushf
movs
lods
mov
imul
ins
call
or
shl
xor
xor
shl
dec
push
pop
shl
test
pushf
mov
mov
pop
add
add
gs
pushf
sbb
in
ins
pusha
adc
ins
in
and
xchg
sbb
jb
fs
inc
hlt
push
jb
pushf
cmp
clc
imul
sar
jmp
push
pop
and
bound
inc
fs
gs
inc
addr16
push
dec
imul
icebp
(bad)
(bad)
jmp
outs
dec
outs
dec
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
sahf
and
pop
inc
lahf
add
xchg
aas
cmp
call
adc
mov
aam
clc
shl
sub
dec
dec
shl
pushf
adc
xlat
add
or
xor
sbb
lods
add
lods
addr16
hlt
pop
hlt
push
(bad)
and
jo
push
and
pop
adc
inc
test
movlps
sbb
mov
push
sub
(bad)
pop
aam
mov
sbb
repz
fwait
or
imul
xor
mov
pop
adc
int3
data16
ja
scas
cmp
add
in
jne
sbb
aaa
cmp
xor
add
fsubr
cld
jmp
ja
pop
addr16
or
scas
inc
sbb
and
push
aas
dec
adc
scas
jmp
add
inc
add
(bad)
jb
leave
addr16
pop
add
das
pop
xlat
je
adc
cld
sbb
fwait
jmp
and
fs
xor
fstp
rcr
pop
int3
daa
xor
cmps
cmps
sbb
mov
or
ret
pushf
pop
test
in
or
add
sbb
dec
icebp
jnp
sar
das
sysenter
xor
je
jnp
pusha
push
fisubr
lock
lods
popf
div
adc
sub
or
inc
add
retf
and
or
inc
mov
inc
ds
or
or
and
push
adc
add
inc
add
add
dec
pop
pop
and
cdq
imul
push
add
push
int
xor
add
das
push
sub
mov
inc
das
inc
add
add
sti
int3
xor
xor
xor
shl
inc
or
pop
nop
dec
push
in
sbb
add
loopne
add
jg
pop
mov
int
mov
imul
jb
jb
ins
and
outs
outs
outs
je
bound
jb
outs
and
inc
push
and
fs
pushf
mov
xor
shr
inc
mov
hlt
popa
popa
fimul
pop
into
fs
xlat
pusha
popa
cmp
pop
push
fidiv
popa
fild
imul
mov
int
push
imul
push
ficom
smsw
in
in
in
mov
rcr
add
in
daa
nop
(bad)
mov
sbb
add
ins
rcl
imul
pop
enter
and
clc
mov
push
push
pop
xor
int3
fstp
fxch
xchg
jge
ds
inc
xor
and
add
or
mov
xor
cs
call
pop
and
push
popa
ret
jns
lgs
imul
in
or
outs
adc
push
push
pop
or
movs
les
test
pop
outs
push
jne
clc
(bad)
jmp
mov
mov
or
daa
idiv
fst
add
je
cmp
rcr
xor
fcmovnu
mov
inc
cld
outs
jmp
push
dec
cs
xlat
jge
imul
or
push
adc
dec
hlt
add
imul
daa
inc
shl
fnstcw
jne
sub
(bad)
call
and
pop
push
pusha
in
mov
push
call
jg
aaa
in
push
lock
jo
nop
neg
popf
jnp
or
push
inc
sbb
or
xlat
mov
fwait
or
push
add
push
fucomi
fisttp
sti
jg
mov
push
and
(bad)
jl
imul
add
jecxz
pop
or
cld
in
mov
pop
push
movs
push
mov
mov
in
imul
dec
adc
cmp
(bad)
(bad)
call
int
outs
push
push
push
pop
adc
neg
push
push
push
(bad)
pop
pop
inc
fdiv
pop
popa
(bad)
xor
lods
jmp
push
mov
pop
xor
inc
push
or
xchg
adc
sub
(bad)
call
mov
mov
pushf
sub
ss
pop
adc
sti
jg
(bad)
cmp
push
(bad)
xchg
lods
fsub
call
pop
adc
push
dec
outs
pop
std
loopne
(bad)
jg
mov
jne
cmp
ins
sub
sub
sbb
das
loope
and
(bad)
(bad)
fild
int
popa
push
stos
pop
mov
std
sbb
push
inc
addr16
xor
pop
adc
xchg
sub
adc
test
clc
out
fild
adc
adc
jae
jle
push
sub
int
cmp
(bad)
mov
push
jl
sbb
adc
dec
arpl
(bad)
(bad)
push
movs
repnz
lock
adc
sbb
mov
pop
ficomp
(bad)
add
mov
fisub
imul
or
fiadd
xchg
in
les
mov
push
mov
imul
(bad)
fistp
ins
cwde
scas
icebp
in
or
movs
inc
call
retf
push
je
mov
dec
test
jno
sbb
or
xchg
mov
xchg
das
sbb
cmps
div
(bad)
(bad)
(bad)
dec
pop
sub
fsubr
jne
cmp
push
mov
out
sar
and
repz
(bad)
push
mov
jmp
aas
bound
idiv
inc
sbb
or
add
push
fild
jmp
lods
push
push
cmp
push
or
or
rcl
pop
cmps
test
sar
(bad)
call
rcl
(bad)
jmp
or
call
outs
ss
adc
in
movs
mov
or
sbb
mov
not
jp
xchg
or
jne
ret
das
cmp
push
fneni(8087
(bad)
mov
outs
add
sti
push
xchg
shr
push
cmc
bound
dec
(bad)
(bad)
fsub
ins
mov
daa
mov
push
bound
inc
(bad)
(bad)
(bad)
push
mov
or
jle
sbb
push
sub
jbe
mov
(bad)
(bad)
jmp
je
lods
cmp
push
push
(bad)
nop
ins
mov
cmp
fdiv
sti
(bad)
call
push
sub
shr
cmp
stos
add
sbb
dec
inc
mov
mov
push
sbb
push
and
jne
sub
add
mov
mov
push
cld
mov
iret
or
dec
mov
jmp
jmp
cld
das
cs
and
fs
add
mov
cwde
cmp
or
clc
lea
(bad)
inc
arpl
fsubr
fmul
fwait
push
push
mov
das
pop
sti
push
push
add
add
aaa
add
aaa
das
mov
push
adc
pop
pop
push
aas
clc
lods
mov
push
sbb
or
inc
push
adc
aaa
inc
mov
mov
ret
jne
cmpxchg
inc
inc
xchg
fadd
mov
(bad)
jmp
test
lea
lea
imul
cmp
ret
icebp
(bad)
cmp
das
std
fsubr
(bad)
mov
(bad)
call
popf
mov
inc
inc
fdivrp
(bad)
outs
pop
cmp
pop
push
sar
push
mov
adc
data16
call
pop
icebp
pop
ret
adc
sub
add
int
fistp
das
adc
jg
adc
or
inc
inc
jmp
and
ins
repz
repnz
add
pop
sar
movs
push
bound
std
mov
clc
lock
adc
and
add
jne
push
adc
push
pop
aaa
repz
aad
clc
or
(bad)
rol
jmp
sbb
test
push
pop
push
inc
or
or
mov
mov
jmp
cmp
adc
mov
or
test
(bad)
xchg
ins
lea
mov
ja
in
jbe
add
jne
inc
xor
cmp
(bad)
(bad)
(bad)
js
jg
adc
(bad)
fild
jae
shr
xchg
jmp
mov
movs
inc
inc
das
jbe
jne
sub
repnz
in
pop
xchg
pop
push
fs
sbb
cld
ins
cmp
jb
dec
adc
fs
adc
cmp
idiv
dec
xor
lock
push
cmp
lods
sbb
jmp
mov
call
loop
(bad)
jge
sub
(bad)
xor
das
fild
in
xchg
arpl
add
add
and
lock
cmps
(bad)
mov
push
lahf
outs
add
mov
pop
push
adc
fwait
movs
sbb
and
call
adc
(bad)
(bad)
(bad)
aaa
inc
enter
mov
or
retf
jmp
adc
mov
pop
mov
sti
fst
pop
and
sbb
dec
fmul
(bad)
(bad)
cmp
dec
mov
mov
add
scas
mov
dec
add
mov
pop
daa
(bad)
(bad)
(bad)
push
and
test
pop
ret
in
daa
jmp
mov
loopne
test
dec
call
push
cmps
movs
outs
jecxz
mov
loopne
cli
cs
xor
and
(bad)
call
enter
mov
int3
xchg
sub
rol
inc
lods
ret
push
or
(bad)
(bad)
push
or
aad
je
mov
sahf
lods
aam
fs
or
mov
pop
inc
sbb
cmp
or
push
cmp
sbb
test
jg
call
repnz
mov
and
inc
adc
mov
jne
fcmovnu
mov
loop
adc
mov
sbb
mov
(bad)
call
aad
popa
aas
out
jle
ds
imul
dec
or
adc
pop
xor
lea
xchg
(bad)
(bad)
(bad)
fld
cmp
and
mov
outs
std
fild
push
xchg
mov
dec
out
cmp
(bad)
jmp
and
data16
fwait
scas
test
inc
pop
push
pop
push
ja
dec
jne
dec
add
jg
or
jg
xor
fisttp
push
pop
in
add
test
(bad)
dec
adc
test
mov
sub
aas
jnp
mov
or
call
mov
sub
xchg
jecxz
cmp
jl
add
jg
jg
ret
mov
inc
dec
dec
mov
mov
sar
cmc
pop
loop
clc
cs
clc
test
lods
les
xchg
cs
and
(bad)
(bad)
jmp
rol
fcomp
(bad)
retf
fdivr
aam
push
adc
je
or
test
push
das
outs
add
je
or
dec
je
or
cmps
inc
cmp
(bad)
(bad)
call
mov
sbb
add
movs
sub
lea
xor
mov
aaa
pop
inc
fmul
push
mov
add
(bad)
inc
jmp
in
es
(bad)
int3
jl
dec
int3
sar
push
aaa
retf
retf
pop
sbb
add
arpl
ja
cli
call
into
pop
outs
mov
cld
mov
cmc
clc
(bad)
jmp
cmp
jne
sbb
xchg
std
add
std
mov
jnp
fwait
jmp
add
(bad)
fisttp
xchg
in
sbb
xor
jbe
int
sbb
daa
ror
lock
addr16
fwait
or
lea
fisttp
in
repz
xchg
pop
call
jo
jo
leave
ins
dec
push
ins
shr
dec
jne
sar
pop
dec
fdiv
jg
jmp
add
inc
clc
sbb
and
dec
sbb
pop
mov
push
xchg
or
fisubr
cmps
mov
dec
or
(bad)
(bad)
jmp
mov
or
inc
jmp
or
lock
rol
jge
call
mov
push
(bad)
int
clc
push
int
xor
(bad)
js
jmp
fiadd
jecxz
xor
jns
aaa
mov
arpl
xchg
and
jge
pop
clc
jmp
into
fnstsw
aam
je
add
je
dec
jge
mov
(bad)
in
(bad)
jmp
adc
mov
lock
and
rcr
add
pop
add
test
(bad)
je
movhps
xor
mov
ret
mov
push
sub
(bad)
jmp
jbe
dec
push
or
addr16
mov
pop
jae
xchg
xor
add
pop
push
icebp
(bad)
cmps
jbe
adc
add
push
jmp
jmp
dec
add
jmp
call
adc
inc
dec
mov
(bad)
(bad)
push
xchg
cmp
push
fcmovnb
loope
add
and
pop
in
icebp
xor
movs
or
adc
mov
sub
call
clc
outs
sahf
sbb
cmp
rol
add
popf
push
test
ins
xor
test
das
aaa
and
mov
shl
daa
cmp
(bad)
jg
inc
sar
inc
push
arpl
sbb
shl
add
icebp
es
rep
inc
aad
mov
pop
mul
shl
sbb
xchg
(bad)
pop
mov
mov
(bad)
int
ja
fadd
mov
inc
sar
jmp
or
or
push
mov
and
or
xor
(bad)
(bad)
mov
movaps
cmp
cmp
push
jbe
adc
mov
inc
cmp
(bad)
call
pop
ror
sbb
cdq
jmp
or
clc
(bad)
call
fst
sbb
mov
sbb
js
(bad)
(bad)
call
pop
sub
out
or
neg
fs
in
aaa
sbb
or
add
cmp
cmp
mov
cmp
das
or
mov
push
cli
std
dec
add
fdivr
inc
stos
call
rol
push
(bad)
(bad)
(bad)
inc
lock
mov
or
in
mov
daa
adc
pop
or
cmp
adc
outs
std
(bad)
(bad)
in
cmp
jge
add
inc
hlt
hlt
mov
jmp
push
sub
add
(bad)
(bad)
call
mov
cmp
je
or
and
jne
xor
lods
(bad)
jg
dec
test
hlt
xchg
(bad)
test
es
jl
outs
cld
or
mov
or
jmp
fs
pop
mov
fdiv
mov
dec
das
pop
jne
cmps
cmp
sbb
cmp
and
ja
sbb
adc
fcom
fmul
push
fisubr
(bad)
(bad)
(bad)
push
add
imul
inc
fld
mov
lea
test
(bad)
(bad)
(bad)
(bad)
fdiv
push
inc
adc
jle
lea
push
add
fs
cmp
pop
mov
dec
fild
fs
push
ins
adc
fbld
ja
pop
fld
jae
lock
adc
sub
(bad)
mov
pop
dec
mov
cwde
jmp
cmps
fldcw
pop
sbb
imul
or
or
sub
aam
push
lock
imul
es
sar
loop
mov
(bad)
(bad)
stos
rcl
push
jg
or
jecxz
sub
ins
test
loope
clc
(bad)
mov
jle
mov
add
ds
cld
(bad)
mov
scas
sub
jecxz
cmp
mov
out
mov
adc
(bad)
dec
xor
push
inc
sbb
ss
int
aas
ret
dec
loop
add
int3
mov
xor
jno
jnp
fidivr
sbb
aaa
mov
sbb
inc
fisub
pop
xor
jmp
les
dec
(bad)
mov
imul
cmp
mov
(bad)
fiadd
fcomi
mov
sbb
(bad)
js
mov
jg
outs
mov
jae
shr
add
sbb
leave
jl
gs
mov
aam
sbb
pop
sbb
pop
mov
call
sub
das
je
neg
mov
or
xor
inc
cmp
lock
jl
pop
xor
mov
popf
cmp
jmp
and
ins
das
hlt
(bad)
push
dec
dec
add
add
shl
push
jmp
faddp
push
aaa
clc
xor
or
stc
pushf
sar
(bad)
(bad)
mov
or
inc
lea
out
std
xchg
cld
fwait
or
or
fs
(bad)
(bad)
call
mov
addr16
push
or
out
sbb
lods
aad
mov
or
or
clc
sar
dec
add
adc
pop
aas
sub
enter
pop
mul
ret
loope
push
adc
mov
sbb
pop
retf
add
pop
lock
dec
sub
cmps
xor
xlat
fld
and
add
jg
outs
rcl
cmp
je
jae
adc
sub
fimul
jae
sti
(bad)
fucomip
scas
in
mov
iret
push
out
emms
aas
push
lock
(bad)
(bad)
(bad)
jg
js
add
js
jo
fs
push
add
pop
sub
cmps
jno
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
xor
fistp
aaa
push
and
pop
add
push
sbb
or
add
fwait
inc
dec
jmp
(bad)
fstp
push
xor
loope
sub
sub
add
pop
inc
inc
dec
aam
pop
fsubrp
jg
jns
fwait
gs
dec
xor
adc
data16
(bad)
or
mov
add
rcl
inc
mov
sbb
(bad)
(bad)
call
mul
int
cmp
cmp
push
jl
cmp
repnz
sahf
sub
mov
ss
or
push
sub
cmp
in
and
dec
clc
push
and
rol
and
push
clc
mov
in
out
mov
and
sub
scas
lock
push
(bad)
(bad)
(bad)
dec
jb
mov
xchg
sub
aaa
and
in
pop
push
push
loop
pop
call
pop
out
mov
(bad)
fild
stos
jae
push
cli
push
push
lds
and
push
pop
dec
ins
in
mov
dec
or
in
ficomp
jmp
jmp
icebp
mov
xchg
ins
stos
or
call
les
jmp
clc
fst
mov
adc
jmp
xor
cmc
pop
mov
mov
adc
or
cld
pop
adc
jnp
ret
and
imul
lock
retf
jo
nop
adc
pop
cmp
xchg
or
cmp
or
and
(bad)
and
pop
sbb
aas
test
push
shl
pop
jmp
mov
dec
cli
push
ins
jmp
mov
mov
sti
(bad)
outs
bound
push
jle
jmp
push
mov
(bad)
aaa
(bad)
mov
fucomp
adc
or
add
mov
or
pop
add
ror
ja
clc
dec
push
push
or
(bad)
(bad)
(bad)
cmp
pop
out
add
adc
xor
mov
inc
or
cmp
add
loope
push
jno
jecxz
cmc
(bad)
jmp
inc
mov
mov
mov
xor
or
jmp
add
inc
pop
je
cwde
mov
pop
inc
dec
outs
test
pop
push
mov
ss
(bad)
(bad)
dec
cmp
pop
push
lds
imul
pop
add
aaa
jne
pop
inc
sub
(bad)
pop
loopne
dec
test
scas
add
jo
sbb
sub
push
push
sub
mov
and
and
cmp
mov
mov
clc
jmp
sbb
dec
cld
fmul
adc
(bad)
mov
scas
or
push
(bad)
(bad)
(bad)
push
scas
dec
pop
inc
pushf
mov
sub
and
bound
cld
mov
xchg
jmp
ss
aaa
sbb
adc
and
sub
inc
cmp
(bad)
(bad)
jmp
je
test
lods
push
dec
mov
xchg
in
and
add
inc
or
jmp
stos
mov
or
lds
add
in
jmp
push
add
fadd
(bad)
call
mov
call
sbb
or
or
(bad)
jmp
retf
not
loopne
arpl
dec
data16
mov
mov
jmp
add
mov
jmp
enter
call
and
sbb
(bad)
inc
and
inc
jmp
xchg
sub
das
(bad)
dec
jne
inc
call
cmp
(bad)
jecxz
fsubr
cmc
mov
or
push
sbb
sete
jg
mov
jmp
(bad)
ins
les
push
inc
mov
dec
icebp
push
pop
inc
mov
dec
lods
inc
xlat
and
aad
and
lods
xchg
stc
mov
das
(bad)
psllq
mov
push
pop
ss
and
cmovo
adc
cmp
xor
push
dec
popa
sub
(bad)
addr16
mov
push
pop
jo
pushf
dec
mov
test
sub
(bad)
jo
shl
test
les
add
push
fisttp
and
(bad)
jmp
sbb
push
outs
mov
sti
pop
jmp
test
and
loop
push
mov
add
shr
cmp
cmps
or
jg
cmp
jne
outs
jmp
das
std
pop
call
pusha
imul
dec
cli
test
mov
jmp
sar
or
inc
pushf
je
sbb
xchg
(bad)
call
outs
mov
push
or
jle
into
rcr
push
sahf
pop
ret
jmp
popf
div
or
cmp
pusha
fs
mov
jnp
dec
fisubr
add
mov
mov
cs
dec
mov
in
(bad)
mov
pop
nop
lahf
xor
inc
xor
rol
push
movs
test
xor
adc
ret
scas
and
rcr
add
push
fbld
and
or
pop
int
push
mov
cmc
aaa
int
mov
jne
imul
inc
jmp
or
xor
lea
jl
jbe
cdq
sti
ja
xor
and
(bad)
jp
pop
cld
call
cmp
mov
retf
shr
shl
inc
mov
fucomp
dec
std
inc
jl
aad
adc
xchg
mov
sti
cld
adc
(bad)
mov
fwait
mov
test
mov
add
or
pop
je
in
pop
rol
mov
int3
loope
ins
test
jg
push
pop
sub
mov
mov
inc
(bad)
jl
push
mov
mov
fdivr
call
add
neg
pop
std
mov
ret
dec
neg
sbb
or
adc
pop
jo
cmp
xchg
aad
push
data16
retf
out
mov
push
cdq
lds
je
or
(bad)
out
jl
add
(bad)
mov
adc
pop
mov
ins
test
pop
js
dec
pop
jl
or
clc
cmp
ffreep
adc
je
mov
mov
mov
mov
mov
adc
mov
xchg
mov
mov
(bad)
jmp
test
mov
int
test
cmp
push
mul
add
xchg
xor
loopne
nop
adc
jb
inc
icebp
call
xor
adc
popf
add
das
xor
add
jl
cmp
jg
(bad)
fistp
sbb
inc
push
inc
jge
fdivr
call
add
(bad)
(bad)
push
arpl
scas
mov
adc
shr
popa
push
sbb
fmul
or
call
clc
jmp
ds
or
or
mov
enter
movs
dec
sub
cmp
push
xchg
call
xchg
xor
push
xor
je
call
and
loopne
cld
push
pop
lds
fisttp
jno
or
push
(bad)
push
and
add
in
(bad)
dec
aam
xor
mov
or
pop
jae
push
pop
push
in
pop
std
or
xor
stc
mov
mov
cmp
cld
jl
aam
rcl
adc
cmp
call
js
scas
mov
inc
add
mov
add
pop
bound
jg
in
push
push
(bad)
(bad)
(bad)
push
ins
inc
frstor
and
cli
mov
repnz
mov
mov
mov
pop
jl
push
adc
loopne
mov
jmp
push
or
ret
push
inc
sub
jmp
mov
fs
push
mov
push
cli
push
xchg
push
or
push
xchg
(bad)
push
aam
mov
pusha
int
mov
sub
ins
jle
inc
(bad)
call
jmp
xchg
neg
stos
mov
fst
xor
pop
inc
xor
neg
loop
add
jmp
dec
dec
test
fimul
jb
movs
or
clc
cs
and
jg
or
imul
mov
call
imul
clc
jg
test
push
aaa
ja
pop
inc
or
xor
and
sbb
fsub
inc
(bad)
clc
sbb
or
jae
push
fisttp
repnz
jle
mov
jmp
xor
jmp
jmp
leave
jmp
pop
push
(bad)
fsubp
push
xchg
push
xchg
in
mul
hlt
mov
push
and
scas
cli
xor
fmul
adc
ins
sub
push
jmp
call
cli
lods
(bad)
pop
pop
movs
test
imul
pop
xlat
(bad)
shl
mov
dec
es
std
icebp
shl
cmp
sbb
dec
ins
mov
call
lock
push
test
ins
icebp
pop
jge
push
dec
and
(bad)
push
adc
cmp
adc
je
dec
cmp
xor
jmp
inc
popf
rcr
loopne
(bad)
fldenv
jbe
sbb
clc
test
fld
add
mov
push
loopne
xor
cmps
inc
adc
call
(bad)
(bad)
(bad)
call
push
or
sbb
std
fdivr
mov
rcl
adc
in
or
inc
daa
movs
cmp
or
clc
sub
imul
add
xor
sub
(bad)
(bad)
push
ror
push
jno
xor
rcr
inc
cdq
mov
cmp
jb
shl
cld
loopne
pop
add
(bad)
(bad)
jmp
adc
xor
sbb
push
sbb
cmc
jbe
test
hlt
inc
add
(bad)
jmp
jo
sub
inc
dec
fbld
jmp
cmp
outs
stos
mov
outs
std
mov
cmp
aaa
mov
fcmovb
test
mov
sub
mov
jle
cmp
mov
test
push
jg
cwde
and
pop
jmp
or
retf
and
adc
xor
fild
xor
vpand
or
nop
mov
cmp
sar
cld
inc
sub
cmp
lea
pcmpeqd
mov
sbb
push
jmp
adc
xchg
mov
ins
sbb
inc
cmp
pop
(bad)
(bad)
(bad)
jmp
inc
popf
cmp
pop
pushf
loopne
movs
fwait
push
adc
pop
jg
mov
mov
(bad)
pop
fdivr
jle
cmp
xchg
xchg
adc
cld
(bad)
pop
std
call
push
jo
rol
loope
xchg
jge
sub
fwait
pop
ror
add
(bad)
fucomip
mov
test
(bad)
call
jne
or
jle
sar
(bad)
(bad)
inc
sub
test
call
sub
sub
test
test
pop
cmp
(bad)
push
retf
jmp
lea
push
sub
ret
or
fisub
std
cld
out
sub
push
pop
cwde
inc
(bad)
jmp
or
mov
stc
push
rol
lea
icebp
(bad)
(bad)
call
add
xchg
push
sub
icebp
mov
mov
retf
push
fucomi
xor
or
mov
inc
mov
ss
into
mov
mov
div
imul
add
dec
loope
adc
test
and
fcmovnbe
jmp
div
daa
out
pop
dec
mov
sbb
icebp
(bad)
mov
jb
cmp
dec
inc
mov
cmp
jbe
dec
dec
cmps
data16
pop
cmc
sar
push
in
outs
sub
mul
int
outs
(bad)
jl
fild
sar
outs
or
(bad)
enter
(bad)
jmp
imul
jbe
sub
int
pop
or
jg
or
xchg
(bad)
xchg
loope
pop
repnz
xor
ss
xchg
test
mov
cli
jmp
mov
push
in
test
pop
fnclex
dec
or
(bad)
fild
das
sbb
add
ja
out
or
dec
or
call
adc
mov
push
mov
or
or
(bad)
call
jne
jnp
icebp
pop
mov
mov
je
jp
mov
clc
push
pop
sbb
xchg
add
imul
sbb
mov
mov
test
mov
sbb
inc
hlt
jmp
cwde
in
call
div
or
outs
xor
repz
push
inc
or
jmp
loop
pop
std
stc
pop
push
out
xchg
push
sub
call
(bad)
dec
icebp
push
mov
jmp
mov
mov
scas
jne
loopne
(bad)
call
push
mov
xor
mov
pop
inc
retf
dec
shl
jp
inc
ret
jo
sbb
or
mov
jle
or
pop
cmp
inc
movs
dec
outs
call
adc
loop
je
dec
or
pop
loop
cmp
mov
jecxz
cmp
imul
(bad)
(bad)
(bad)
jmp
jmp
push
jnp
sbb
inc
stc
push
push
push
jno
xchg
push
jnp
sbb
or
adc
pop
and
xor
jp
pop
lods
retf
and
add
mov
retf
sbb
mov
lods
cli
push
add
inc
mov
shl
dec
mov
jne
retf
sbb
push
or
lea
(bad)
jg
mov
inc
sub
sbb
add
dec
in
fs
dec
fs
(bad)
(bad)
jg
xor
sub
xchg
cmp
sbb
(bad)
lea
inc
and
jmp
xor
test
jo
loopne
arpl
or
dec
(bad)
(bad)
inc
cmp
ret
jae
mov
loop
push
int3
add
jmp
hlt
rol
call
jmp
mov
inc
ins
(bad)
lods
push
pop
sbb
pop
out
push
push
adc
mov
sahf
lods
sbb
lea
fwait
lock
popf
or
not
inc
or
push
mov
push
out
jmp
lock
in
add
mov
lods
cmp
jnp
and
clc
icebp
pop
or
add
jnp
mov
dec
mov
cs
ds
mov
mov
and
hlt
adc
jb
and
call
mov
cli
sbb
jno
xor
fdivr
sub
shr
aaa
adc
iret
imul
inc
cdq
add
add
push
mov
mov
out
sbb
dec
xor
(bad)
cld
pop
mov
push
fwait
mov
test
pop
icebp
jle
test
xchg
(bad)
cli
add
cmp
jbe
aas
pop
mov
(bad)
dec
add
lods
aam
add
and
mov
pusha
mov
xor
outs
retf
shl
pop
mov
fdiv
mov
and
loop
and
aam
popf
jnp
mov
out
fdivrp
dec
jmp
pop
mov
imul
mov
inc
adc
pop
shl
pop
pop
jbe
sbb
jecxz
hlt
sub
jne
sar
adc
mov
jle
pop
cmp
jbe
fiadd
(bad)
ins
adc
adc
cmp
(bad)
(bad)
(bad)
fisub
sub
mov
jno
jl
sti
inc
outs
mov
out
not
and
add
(bad)
dec
fistp
xor
lea
push
sbb
into
aaa
sbb
imul
pop
clc
(bad)
jmp
push
or
dec
jne
pop
scas
jge
xchg
push
fsubrp
pop
sub
mov
(bad)
(bad)
jmp
jo
retf
add
mov
je
rcr
mov
inc
mov
jae
(bad)
cld
jmp
jne
fcmovnb
push
pop
jne
sbb
(bad)
mov
sbb
sub
loop
or
and
lea
adc
push
mov
cld
pop
push
push
mul
(bad)
push
jge
fsubr
in
lods
xor
xor
add
push
add
mov
jecxz
push
call
pop
fdivr
fdiv
pop
or
jnp
inc
adc
(bad)
(bad)
(bad)
fistp
inc
or
fsubr
dec
adc
and
adc
in
sahf
imul
jo
pop
adc
adc
cmc
jns
pop
clc
sbb
add
shl
enter
(bad)
dec
(bad)
or
and
adc
sti
rcr
and
fnstenv
scas
stos
and
(bad)
mov
adc
popf
fidiv
cmp
pop
sub
sub
cli
(bad)
fucomip
xor
jnp
mov
sub
cld
pop
pop
cld
(bad)
mov
lock
fbld
and
or
les
imul
jmp
cld
jo
sbb
nop
push
stc
call
add
cmp
xchg
or
cli
adc
dec
std
jmp
mov
and
and
or
sub
outs
xlat
pushf
sbb
pop
jne
sbb
(bad)
jns
fidivr
fsub
adc
add
and
(bad)
(bad)
(bad)
jmp
sbb
adc
jmp
es
out
or
add
cld
pop
clc
dec
fdivr
fcmovnb
adc
test
xchg
mov
test
imul
nop
out
mov
jmp
movs
adc
push
cli
fcomp
fisubr
push
cld
sub
inc
nop
inc
mov
cmp
mov
jo
push
and
or
(bad)
and
cmp
test
or
and
das
jno
cmp
fst
push
pusha
dec
dec
push
into
sub
(bad)
(bad)
mov
and
cld
dec
inc
jmp
mov
dec
lods
jmp
sub
icebp
(bad)
call
cs
fs
jle
(bad)
mul
gs
dec
and
mov
test
pushf
sub
iret
call
and
(bad)
out
repz
and
mov
dec
pop
jns
mov
add
and
(bad)
dec
mov
xchg
sahf
test
test
xlat
sub
cwde
sub
or
cli
dec
mov
add
stos
ins
fwait
jp
(bad)
mov
or
test
cmps
fild
and
aaa
mov
and
mov
jge
rcr
inc
rcl
bound
mov
shr
or
or
add
(bad)
jmp
sub
vcomisd
outs
mov
mov
fild
or
mov
(bad)
jg
pop
ror
mov
add
and
adc
cld
mov
das
std
lahf
sar
jns
ds
sbb
dec
dec
dec
mov
jg
jg
mov
pop
xor
test
or
dec
add
(bad)
jmp
hlt
xor
jp
sbb
mov
rcl
push
xchg
xor
mov
pop
clc
push
enter
cmp
inc
pop
mov
lea
xor
cli
push
imul
fild
push
sub
mov
push
push
lds
jmp
stc
idiv
adc
sub
or
lock
push
mov
imul
out
jno
jbe
(bad)
(bad)
mov
ret
inc
ins
jge
push
sbb
bound
and
adc
sti
test
out
push
sub
loopne
sub
adc
es
shl
xor
sub
mov
cmp
ja
repnz
aad
xor
int3
mov
lock
cmp
(bad)
(bad)
mov
dec
add
sub
adc
push
xlat
jbe
das
sub
cmp
jbe
loop
or
xchg
call
sub
mov
mov
inc
fs
inc
inc
mov
jg
pop
aaa
dec
test
jp
dec
inc
loopne
rcr
add
cdq
jmp
hlt
rcl
push
pop
stos
cmp
enter
jo
xor
mov
lock
and
fcmovu
push
jge
stc
(bad)
(bad)
(bad)
jns
sub
mov
aad
xchg
pop
daa
or
adc
je
aad
scas
jmp
push
das
jno
jne
or
or
je
or
sub
adc
fisttp
(bad)
fidiv
leave
pop
push
jno
jg
lea
(bad)
loop
push
std
pop
(bad)
aaa
dec
stos
in
mov
icebp
cmp
popf
ret
push
fbld
sar
(bad)
(bad)
dec
mov
sbb
das
or
or
add
pop
js
std
cmp
jae
or
jmp
imul
fdivr
(bad)
(bad)
(bad)
call
push
and
push
mov
mov
pop
sub
outs
ins
xor
jne
cdq
xor
cmps
(bad)
(bad)
(bad)
push
aaa
fsubr
shl
inc
cmp
push
scas
test
inc
nop
or
jmp
cmps
ret
adc
cmp
fild
aas
(bad)
(bad)
(bad)
(bad)
mov
adc
dec
push
add
jns
test
sub
push
(bad)
or
popf
jp
or
clc
pop
push
sbb
outs
push
in
pop
pop
sbb
dec
mov
out
xlat
jge
test
addr16
call
push
jns
adc
mov
lock
repnz
push
cli
out
pop
idiv
jmp
or
xor
pop
movs
inc
imul
(bad)
jnp
pop
mov
aam
cli
mov
sbb
adc
aaa
(bad)
push
mov
pusha
sub
out
icebp
fbstp
call
adc
pop
aaa
mov
and
push
sub
pop
push
aad
add
das
cwde
mov
push
lods
sub
and
or
mov
xchg
sub
adc
popa
movd
cmp
icebp
dec
or
jmp
sub
jmp
pop
cli
(bad)
(bad)
pop
pop
fwait
div
push
pusha
push
mov
mov
mov
or
sub
pop
clc
xchg
int3
call
or
popf
mov
stc
jae
mov
stos
loopne
(bad)
xlat
cmp
jl
cmp
adc
call
add
lods
add
mov
mov
(bad)
(bad)
dec
cmovbe
pop
jle
fiadd
jae
mov
push
jl
dec
data16
(bad)
push
(bad)
(bad)
(bad)
inc
xor
jb
inc
sbb
jmp
cmp
stos
mov
jmp
std
sub
mov
aaa
lahf
imul
jg
push
or
aad
(bad)
dec
mov
mov
ins
aas
ror
pop
or
mov
xor
test
or
out
add
jle
add
add
sub
shl
into
sub
call
add
mov
push
sub
sub
or
cdq
dec
pop
lahf
mov
mov
outs
and
lods
push
cld
(bad)
mov
mov
xchg
pushf
sbb
imul
outs
fstp
rcr
call
cmp
vshufps
repnz
(bad)
mov
inc
or
jne
xchg
loop
sub
pop
call
mov
or
shl
ins
cld
call
test
pop
sbb
jne
mov
sar
outs
std
outs
cmp
sub
lea
(bad)
push
mov
cmps
sbb
mov
pop
clc
dec
lea
stos
inc
mov
jb
pop
mov
mov
(bad)
push
add
pop
jmp
popa
cld
jg
push
push
mov
inc
jno
mov
div
push
mov
add
mov
inc
push
das
jp
test
repz
cmc
(bad)
(bad)
cmp
pop
cmp
imul
inc
inc
dec
push
jae
cmp
outs
test
clc
inc
test
push
dec
push
outs
ja
outs
sbb
imul
add
jne
mov
jae
jp
lea
aam
sahf
jbe
inc
stos
shl
jle
pop
add
push
pop
and
aad
fnstsw
or
cmps
in
ins
stos
pop
cwde
jno
mov
test
(bad)
inc
cs
jle
jmp
ret
sub
jb
out
jmp
pushf
ins
fbld
push
cmp
(bad)
(bad)
jmp
aaa
push
ret
pop
(bad)
inc
ror
js
dec
and
adc
inc
aaa
push
loopne
fs
push
movs
and
mov
setno
inc
cmp
ds
enter
push
jns
jmp
jbe
pop
fidivr
push
pop
push
or
mov
inc
jno
test
(bad)
(bad)
mov
out
sub
dec
jbe
push
outs
imul
cmp
daa
test
or
dec
sar
jle
stos
sbb
dec
(bad)
ins
dec
push
(bad)
(bad)
inc
ss
lds
or
inc
xlat
lock
cmp
ins
add
call
push
cli
test
sar
ja
inc
cmp
adc
xchg
scas
call
mov
and
inc
push
cld
mov
call
loopne
test
jge
push
push
rep
stos
inc
or
data16
xchg
mov
outs
js
lods
mov
mov
or
mov
inc
(bad)
cli
jg
aaa
popf
ja
and
push
push
or
(bad)
jmp
aad
mov
into
adc
sub
inc
inc
dec
in
outs
mov
mov
xchg
outs
nop
xchg
mov
adc
inc
inc
or
ret
or
mov
shl
out
adc
mov
lock
div
leave
mov
cmp
pop
mov
inc
add
(bad)
jmp
add
cmps
clc
lods
scas
add
lds
sub
inc
(bad)
(bad)
(bad)
jg
sbb
stos
add
imul
or
rol
pusha
test
sti
mov
(bad)
call
pop
mov
jne
dec
mov
sbb
shl
or
xchg
sub
psubw
mov
mov
sub
out
call
add
pop
jmp
push
add
jbe
pop
fiadd
and
push
mov
xchg
stos
mov
ficomp
and
mov
std
add
stc
ror
out
test
cmc
(bad)
(bad)
jg
push
push
xor
mov
in
cmps
out
mov
jb
outs
cld
or
mov
mov
mov
mov
ins
rol
movs
inc
ja
movs
mov
push
adc
(bad)
(bad)
push
test
mov
rep
inc
inc
mov
and
pop
pop
jb
fisubr
inc
cli
xor
jp
sub
les
xchg
jge
std
sbb
rcl
in
and
push
dec
daa
repnz
inc
cmp
repz
fnsave
std
inc
pushf
adc
loopne
out
ins
jmp
sbb
mov
and
jecxz
(bad)
push
cmp
mov
ret
sbb
and
pop
stos
jns
sti
xchg
(bad)
das
std
lea
pop
sbb
cmp
ja
and
jg
call
jae
out
dec
mov
scas
cmp
cmp
pop
loope
mov
(bad)
(bad)
mov
mov
inc
iret
dec
adc
inc
sar
stos
clc
(bad)
jmp
cmp
(bad)
fisub
test
loop
jmp
(bad)
aaa
mov
(bad)
jmp
pop
mov
hlt
sub
cmps
loopne
add
pop
test
pushw
(bad)
clc
nop
pop
jl
lods
(bad)
outs
cld
jg
cdq
scas
cmp
pusha
xchg
ret
mov
inc
add
mov
(bad)
jmp
pop
int3
mov
sub
and
and
add
(bad)
(bad)
jmp
inc
je
cmp
(bad)
xlat
xor
sar
pop
je
inc
mov
push
(bad)
in
call
xor
lock
lock
(bad)
jg
pop
and
cld
pop
lea
test
sbb
inc
add
or
lock
xor
test
(bad)
dec
dec
and
fwait
or
popf
or
adc
rol
(bad)
or
je
pop
cmp
or
jmp
cld
ja
push
xor
out
neg
out
lea
push
(bad)
stc
mov
mov
nop
cwde
or
(bad)
(bad)
(bad)
jmp
cmp
dec
popa
outs
leave
xlat
pop
dec
push
mov
pop
enter
mov
sub
xchg
or
cdq
ss
fldcw
cmp
rol
inc
cmp
inc
dec
inc
fcom
ja
xchg
sbb
call
adc
or
adc
or
or
add
pop
dec
fdiv
nop
add
cwde
add
xor
xchg
test
mov
adc
adc
ds
adc
mov
and
inc
sub
or
mov
lea
in
stos
mov
jp
push
fwait
add
je
add
(bad)
push
(bad)
sti
sub
xor
cmps
sbb
mov
pop
adc
imul
aaa
inc
mov
(bad)
(bad)
mov
sbb
and
jp
sbb
test
imul
jge
jbe
sbb
pop
cli
inc
adc
cs
fstp
adc
push
test
add
(bad)
jb
call
lods
adc
inc
add
mov
push
inc
arpl
mov
mov
cld
dec
xchg
imul
push
and
lods
jo
or
(bad)
push
mov
dec
dec
dec
jo
jbe
inc
loope
aaa
cmp
or
hlt
jb
mov
mov
add
mov
(bad)
(bad)
(bad)
in
retf
fdivp
sahf
clc
xchg
push
and
cdq
pop
outs
inc
mov
stos
sbb
mov
loop
out
(bad)
fiadd
popa
push
jmp
mov
mov
sbb
jne
pop
inc
inc
mov
ja
stos
mov
(bad)
(bad)
(bad)
inc
jbe
test
push
pushf
add
shl
pop
xchg
adc
das
neg
sbb
pusha
xlat
out
stos
mov
(bad)
jmp
aad
das
cmp
cmp
je
mov
mov
fild
aaa
sub
xchg
arpl
pusha
mov
daa
add
clc
inc
pop
test
clc
(bad)
cmp
sub
mov
push
push
js
pop
cld
dec
mov
push
mov
or
fnstenv
jmp
(bad)
fidivr
adc
or
inc
ret
shl
push
or
xchg
sahf
div
retf
fistp
loop
stc
xor
mov
inc
ret
jmp
mov
cld
out
(bad)
out
in
cld
mov
jmp
clc
pop
cmc
pop
mov
cld
cmp
ss
out
cmp
push
mov
imul
in
sbb
jmp
sub
jae
mov
push
std
cld
push
test
or
hlt
ficom
idiv
mov
add
add
mov
xor
inc
mov
dec
sub
pop
adc
dec
or
add
push
add
sub
sbb
call
fucomip
mov
mov
xchg
mov
in
adc
(bad)
(bad)
mov
scas
push
lods
mov
es
mov
sub
scas
test
push
outs
movs
retf
(bad)
(bad)
(bad)
dec
test
mov
(bad)
fcmovne
cmp
ja
xlat
dec
dec
not
xor
mov
push
cmp
inc
sbb
(bad)
sbb
add
jae
das
inc
mov
mov
sub
(bad)
mov
arpl
push
icebp
mov
xor
mov
cmc
inc
icebp
jne
fst
jns
pop
cld
sahf
ins
sbb
adc
(bad)
call
cli
pop
mov
js
mov
sub
call
push
mov
mov
adc
adc
cmp
dec
popf
jmp
dec
inc
adc
jp
(bad)
ds
inc
xchg
test
shl
jnp
mov
jmp
imul
push
lahf
ja
mov
call
add
and
sub
mov
and
imul
pop
xchg
out
sbb
xor
sbb
cli
sub
nop
mov
bound
arpl
stc
push
cmp
mov
xchg
(bad)
cmp
sbb
mov
std
jg
ins
fisubr
mov
in
push
or
pop
pop
bound
outs
cld
mov
test
test
in
icebp
adc
push
test
adc
add
pop
push
mov
stc
sbb
xor
stos
arpl
pop
test
and
sbb
xor
ret
sub
pusha
movs
add
cmp
test
seto
mov
icebp
outs
add
cmps
mov
adc
xor
adc
loop
push
push
add
dec
dec
test
out
push
rcr
cld
(bad)
call
(bad)
out
fist
jb
xor
jb
xor
adc
(bad)
(bad)
(bad)
jmp
or
cmp
dec
or
sti
xchg
jnp
sub
out
cmp
push
or
cld
mov
or
inc
mov
lea
lds
or
mov
cs
xor
mov
inc
fist
jno
xor
sub
fsub
(bad)
(bad)
jl
fld
ss
or
adc
sbb
loope
pop
adc
mov
(bad)
dec
push
sbb
mov
inc
mov
jmp
retf
data16
hlt
and
arpl
cdq
or
adc
jb
pushf
ret
fcomi
or
(bad)
jmp
sbb
cmp
int
(bad)
xor
imul
ins
jmp
and
outs
lahf
lahf
adc
test
sub
push
mov
cmp
pop
lods
add
loope
(bad)
mov
imul
ins
(bad)
(bad)
jg
adc
and
mov
push
jmp
imul
cmp
jnp
jp
inc
push
iret
cmp
inc
rcr
lds
rol
dec
sbb
movs
in
push
add
push
jnp
dec
xchg
popa
pop
call
(bad)
cmp
inc
adc
adc
sbb
mov
mov
pop
jp
mov
cmp
fiadd
arpl
loope
dec
aaa
jo
repz
mov
das
std
jmp
rcl
sub
push
add
push
adc
mov
cli
dec
cmps
lds
dec
ds
add
add
(bad)
jmp
or
cmp
adc
pop
cli
(bad)
jmp
and
push
pop
mov
iret
inc
mov
sbb
sub
outs
cld
sub
sub
dec
repnz
cmp
pop
jb
mov
(bad)
(bad)
cmp
dec
pop
int3
pop
pusha
pop
mov
jb
in
pop
adc
add
lds
pop
sbb
adc
aaa
pop
sbb
push
pop
mov
in
pop
dec
aad
sti
inc
add
pop
jo
xchg
jg
sti
inc
nop
dec
rcr
gs
adc
pop
or
jae
xchg
retf
or
adc
mov
or
nop
inc
add
push
mov
xchg
pushf
mov
and
mov
xor
xchg
dec
ss
ja
pop
loopne
call
jg
pop
push
adc
lods
dec
xor
sbb
cs
ja
cmp
dec
std
(bad)
inc
push
rcr
or
and
sub
adc
sbb
cmps
fnstcw
inc
sbb
and
mov
cmp
aaa
inc
sub
inc
lods
loopne
pop
pop
adc
mov
in
sbb
push
(bad)
mov
dec
ss
dec
dec
dec
mov
pop
fwait
sar
and
js
test
(bad)
and
and
mov
jnp
pusha
in
fild
int
(bad)
(bad)
jg
cmc
sbb
inc
fadd
jmp
dec
dec
adc
int
cmp
aaa
(bad)
data16
fsub
push
popf
mov
sbb
push
test
fdivr
div
jg
or
repnz
sbb
mov
pusha
fs
aad
(bad)
jmp
fidiv
je
movs
test
sbb
cs
mov
ss
call
mov
jnp
imul
push
fs
cmps
lods
jg
outs
std
in
je
(bad)
mov
add
(bad)
jmp
sub
es
adc
pop
cli
aad
mov
and
mov
jno
inc
adc
push
lea
or
pop
adc
dec
arpl
or
jne
daa
cli
rol
inc
cmp
daa
lock
(bad)
arpl
jge
mov
or
(bad)
cmps
call
(bad)
(bad)
(bad)
call
cmp
sti
inc
jge
xor
mov
add
mov
add
imul
push
je
call
clc
mov
pop
dec
inc
dec
and
lods
sbb
pop
or
jns
stos
(bad)
or
sbb
nop
mov
or
movs
stos
and
dec
jne
dec
arpl
(bad)
(bad)
cmp
std
add
sub
push
xchg
jecxz
inc
xchg
call
lea
stos
mov
aaa
cmps
xor
pop
movs
xchg
pop
(bad)
mov
stos
add
sub
jg
sbb
inc
mov
pop
(bad)
add
iret
div
or
into
pusha
xor
test
stc
inc
mov
and
add
mov
(bad)
outs
push
je
add
sub
or
das
push
xchg
cli
jmp
dec
imul
div
xor
leave
adc
add
ja
aaa
imul
jge
(bad)
aad
sub
cmp
(bad)
inc
das
cli
retf
or
outs
jg
mov
mov
or
push
fadd
call
mov
add
mov
jmp
mov
push
(bad)
ds
cmp
es
call
sbb
ins
or
push
push
jecxz
es
lds
dec
dec
jg
pop
jecxz
and
inc
repz
sbb
dec
dec
and
pop
stos
and
imul
ret
pop
sub
(bad)
jmp
dec
push
xor
mul
mov
rol
push
push
mov
scas
fs
(bad)
mov
xor
adc
shl
lahf
setae
xchg
ss
and
jecxz
adc
loope
sbb
xchg
popa
push
add
inc
lods
fcomp
add
sbb
lods
or
jbe
push
add
add
pop
mov
add
jne
mov
out
and
sub
outs
mov
pop
jb
out
outs
dec
aaa
xor
dec
pop
push
inc
call
jns
add
pusha
push
pop
inc
adc
push
js
pop
adc
lahf
jae
add
xor
mov
jne
ins
add
xor
(bad)
out
fisttp
outs
(bad)
(bad)
jmp
push
or
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
aaa
nop
(bad)
std
dec
inc
inc
push
inc
inc
bound
mov
push
inc
push
push
aaa
mov
jb
inc
shr
std
aad
push
push
inc
push
das
push
push
retf
fiadd
(bad)
dec
enter
inc
dec
dec
inc
adc
(bad)
bnd
push
movs
or
mov
dec
popa
bound
add
cli
jl
outs
fist
jp
push
jecxz
push
jne
aaa
daa
aaa
ins
(bad)
cmp
sub
xchg
call
test
mov
xchg
sub
imul
inc
repnz
(bad)
inc
push
jae
fs
fcmovne
(bad)
jne
sub
jb
jne
xor
mov
(bad)
call
outs
and
jne
xor
in
test
gs
das
pop
popa
daa
pop
add
(bad)
jnp
push
fsub
pop
xor
div
pop
xor
mov
fs
add
mov
mov
push
and
mov
popa
dec
ins
(bad)
lods
je
mov
fild
js
call
arpl
(bad)
fdiv
dec
fs
add
and
(bad)
call
inc
inc
xlat
fmul
mov
das
xor
dec
sbb
stos
(bad)
inc
or
inc
sub
cmps
nop
xchg
xor
push
(bad)
jg
(bad)
in
jns
fbld
sub
mul
pop
ins
(bad)
outs
sub
cmp
(bad)
(bad)
call
test
imul
dec
sub
xchg
jae
inc
sub
and
push
jae
in
call
inc
bound
jge
cmp
push
push
and
push
aam
jg
(bad)
cmp
add
fidiv
in
sub
fs
fld
ja
ds
cmps
mov
ja
in
cmp
add
in
jg
(bad)
(bad)
in
mov
ret
add
xorps
cmp
gs
outs
out
stos
mov
jae
iret
sbb
retf
xor
icebp
sub
lahf
sub
or
in
pop
sub
inc
and
dec
inc
ud0
(bad)
(bad)
call
sbb
outs
daa
out
jp
sbb
and
lods
imul
loopne
push
(bad)
jg
jmp
cmp
jae
in
(bad)
push
test
and
std
(bad)
(bad)
push
movs
ficom
jae
scas
sub
mov
pop
(bad)
ins
or
cs
cmp
ins
jl
outs
ja
(bad)
dec
stc
add
imul
add
daa
dec
(bad)
je
popa
fbstp
sub
call
std
sar
hlt
add
xchg
int
cmp
sbb
pop
xor
ror
outs
xor
jge
fxch
arpl
jae
mov
add
sub
fstp
sbb
inc
add
imul
cmp
mov
or
dec
adc
cmp
fdivr
imul
retf
pop
(bad)
call
inc
cmps
mov
dec
shr
add
and
jecxz
adc
loopne
rol
inc
scas
pop
pop
test
in
sbb
adc
rcl
jmp
or
(bad)
or
int3
add
repnz
sbb
enter
and
add
inc
outs
inc
and
xor
xchg
fadd
ret
inc
cmp
aaa
dec
xor
inc
shr
jmp
ror
or
int
or
lea
enter
(bad)
movs
mov
fst
xchg
xor
fild
or
adc
adc
std
jl
jb
imul
or
pop
add
inc
cld
adc
jae
movs
adc
sbb
xor
mov
out
outs
shr
mov
sbb
js
jns
or
(bad)
(bad)
cmp
sub
sub
sar
xor
push
pop
inc
add
add
xchg
add
add
jge
enter
(bad)
(bad)
inc
lock
test
push
xchg
mov
rol
cmp
add
add
add
jbe
outs
stos
jmp
(bad)
(bad)
(bad)
(bad)
jns
and
cmps
fild
sahf
jg
jns
movs
sbb
push
popa
add
shl
(bad)
inc
into
pop
inc
mov
in
outs
nop
inc
mov
iret
mov
mov
sub
out
jle
add
out
push
repnz
mov
rcr
fsubp
stc
cmp
jle
retf
fs
add
mov
mov
ja
push
or
or
lods
mov
push
sbb
into
sbb
cmp
das
fcomp
adc
adc
adc
inc
sbb
and
fild
ins
nop
inc
push
xor
push
or
pop
(bad)
pop
inc
sbb
jo
sbb
jnp
(bad)
das
xor
outs
in
mov
pop
es
sbb
test
sub
mov
movs
outs
mov
int3
push
ins
into
outs
inc
(bad)
pop
xlat
or
pop
adc
inc
or
push
mov
mov
icebp
addr16
in
scas
add
or
std
(bad)
jmp
push
outs
push
imul
call
jg
mov
rol
jae
dec
in
sub
fild
ins
adc
lods
push
or
fadd
daa
addr16
or
inc
sub
and
in
dec
inc
cs
out
jne
push
adc
data16
outs
adc
outs
push
mul
outs
lea
rcl
adc
dec
(bad)
pop
and
jg
mov
pop
push
dec
lods
or
imul
(bad)
jle
gs
jno
pop
outs
ins
ins
xchg
dec
mov
or
outs
gs
adc
mov
mov
aam
(bad)
call
xor
cmp
sbb
(bad)
loopne
shr
outs
push
jmp
or
jo
push
ror
(bad)
fidivr
(bad)
jne
ror
jbe
cmp
xchg
add
inc
pop
(bad)
push
cmps
mov
xchg
pop
loopne
sbb
mov
ja
pop
cs
and
mov
pop
daa
fdivrp
jnp
mov
(bad)
push
jg
sbb
push
fisubr
(bad)
mov
add
fld
or
or
aam
or
ins
addr16
loopne
(bad)
inc
outs
jns
inc
jecxz
(bad)
pusha
repnz
push
je
dec
test
test
hlt
mov
ss
enter
nop
ins
enter
movs
dec
imul
(bad)
inc
idiv
(bad)
cld
inc
mov
cmps
adc
mov
add
(bad)
fnstenv
mov
xchg
inc
btr
push
lock
dec
and
sbb
fwait
sbb
test
push
adc
add
sbb
jp
adc
iret
ins
xchg
jmp
adc
jmp
adc
cwde
add
add
push
inc
(bad)
xchg
sub
sbb
mov
into
scas
adc
aaa
clc
sar
sbb
jo
or
add
daa
sbb
fstp
fcomp
jl
and
jnp
hlt
(bad)
dec
jl
mov
pop
mov
or
push
adc
jmp
stos
nop
or
cs
outs
mov
push
xchg
or
std
inc
add
es
mov
aas
dec
mov
sbb
mov
adc
fsub
add
or
int
jmp
mov
fcom
nop
add
inc
add
sub
out
cld
adc
jo
fcmovnu
push
fcom
adc
or
push
or
pusha
loope
add
call
xor
cmp
je
lds
leave
or
and
xchg
mov
rol
std
sti
jmp
add
cld
jbe
mov
inc
xchg
sub
jne
jmp
add
dec
add
mov
sub
iret
jmp
in
push
pop
mov
stos
mov
sub
cmp
ja
rcr
cmp
jne
jmp
rol
mov
mov
clc
sub
add
cmp
push
mov
mov
lea
jbe
repz
pop
or
xchg
push
or
ins
jg
pop
stc
push
dec
repnz
push
adc
cs
pop
mov
jmp
adc
mov
add
jg
dec
push
push
push
push
push
call
lea
jg
adc
and
pop
adc
clc
inc
cmp
jne
sub
jmp
mov
ja
loopne
loopne
fisttp
jae
mov
jmp
cmps
mov
(bad)
jl
rol
pop
loop
inc
push
dec
push
sbb
dec
out
or
or
outs
mov
or
mov
fs
movs
jns
sub
inc
push
das
push
push
jb
orps
inc
mov
(bad)
bound
sbb
inc
outs
(bad)
lods
outs
imul
gs
test
lea
push
xor
sub
dec
inc
dec
push
push
mov
push
push
dec
push
cs
dec
inc
and
vmwrite
sbb
pop
and
and
cli
inc
loope
mov
imul
paddb
shl
mov
push
mov
mov
je
jb
add
mov
scas
mov
sbb
pop
xor
ins
arpl
jge
popa
jne
and
cmp
sti
and
pushf
dec
push
and
sbb
pop
and
cmp
and
in
outs
jae
inc
push
dec
inc
jnp
jae
inc
hlt
xor
jmp
mov
sub
sub
bound
(bad)
lods
mov
xor
dec
clc
inc
ins
sti
and
adc
je
jge
test
adc
mov
push
xor
aad
sbb
xor
xor
ss
add
push
stos
adc
xchg
mov
cmp
lds
pop
cmp
sub
cmp
add
pop
ret
fs
xor
lock
sbb
cmp
pop
inc
cs
xor
xchg
pop
add
pop
mov
gs
sbb
and
pop
in
call
outs
cs
enter
xor
in
add
add
add
lahf
and
sbb
arpl
pop
loop
cmp
xor
mov
imul
push
pop
jnp
adc
jae
xor
and
es
dec
adc
pop
push
pusha
lea
or
jae
pop
adc
lods
je
lock
add
dec
push
sub
sub
or
and
and
lds
sub
fidiv
sbb
and
or
pop
(bad)
or
push
pusha
cmp
(bad)
sub
xor
sbb
and
(bad)
xor
pop
mov
and
pusha
fisttp
adc
cs
sbb
jl
cmp
push
cmp
sbb
cmp
mov
push
test
and
movs
fisub
aad
push
fld
and
cmp
in
dec
push
or
mov
and
dec
push
inc
push
loopne
nop
jmp
mov
(bad)
push
push
fs
imul
add
dec
cmp
imul
das
pop
xor
add
ret
jb
cmp
fild
test
xchg
fistp
or
sub
ins
push
gs
sbb
movs
test
icebp
adc
push
pusha
dec
push
mov
xchg
je
mov
mov
aad
les
adc
data16
(bad)
cmc
inc
xchg
arpl
jmp
jl
inc
sbb
add
mov
cmc
inc
cli
mov
and
push
ja
out
mov
test
icebp
inc
std
push
cs
(bad)
movs
xchg
outs
bound
add
jmp
fild
adc
test
mov
mov
xor
test
xor
or
test
ret
dec
sbb
add
xchg
xchg
xor
jg
not
ins
and
std
mov
mov
icebp
(bad)
std
mov
mov
push
dec
shl
aam
shr
push
sbb
mov
mov
shl
int
ret
les
mov
retf
jg
add
cdq
dec
es
rol
das
stc
bswap
aaa
in
mov
enter
pop
dec
pop
inc
push
jns
xlat
enter
pushf
aam
(bad)
rol
xor
out
das
pop
repnz
out
add
inc
lock
mov
cmp
fld
mov
and
leave
fild
add
push
xchg
and
adc
add
enter
and
sub
nop
add
pop
xor
lods
mov
and
xchg
pop
inc
shl
add
and
popa
add
addr16
imul
push
push
sub
cs
and
sub
outs
xchg
leave
sub
push
inc
inc
jno
ss
mov
imul
pop
ja
dec
dec
dec
sub
mov
fmul
imul
je
loop
jb
add
dec
adc
ja
daa
gs
and
(bad)
sahf
daa
pushf
dec
dec
add
ret
mov
or
push
push
inc
mov
ret
test
push
xor
ja
mov
lea
mov
call
or
and
mov
or
jle
adc
push
inc
adc
scas
outs
clc
outs
or
push
mov
call
cmp
mov
sbb
arpl
adc
call
ror
pushf
pop
mov
leave
or
(bad)
out
add
mov
or
repnz
test
pushf
int3
sbb
call
jne
inc
pop
xor
adc
repnz
jp
div
push
mov
dec
sub
fmul
test
fdiv
iret
fstp
ss
inc
add
sbb
lock
pop
and
scas
jnp
adc
jae
test
sub
add
fisttp
push
push
and
sbb
iret
lods
shl
call
adc
es
das
xor
mov
cld
sbb
and
int
dec
stc
jge
adc
(bad)
js
jbe
and
sbb
jns
(bad)
add
ins
rcr
movs
je
cmp
or
cmp
je
rcr
(bad)
fdivr
mov
rcr
frstor
mov
mov
cmp
dec
push
add
cmp
cmp
daa
sbb
push
xor
cmp
ret
loop
pop
ss
call
jbe
xor
pop
pop
mov
adc
inc
test
dec
and
push
and
mov
std
std
adc
cmp
push
mov
add
mov
into
adc
inc
add
je
or
test
(bad)
pop
push
sub
stos
inc
fcomp
shl
repz
push
lea
mov
pop
jae
call
dec
push
jmp
xor
ins
je
sbb
push
xchg
sbb
mov
xlat
fs
mov
kunpckbw
jmp
cmp
cmp
(bad)
(bad)
jnp
sbb
cwde
in
mov
(bad)
jae
adc
out
mov
jl
clc
add
or
or
jmp
add
and
sahf
xchg
adc
sbb
cmp
test
adc
dec
and
push
ins
mov
aas
add
pop
mov
sub
ds
or
mov
adc
test
jnp
adc
mov
out
fdivrp
jbe
mov
add
mov
pop
or
xchg
jmp
push
adc
push
fadd
or
ins
mov
adc
inc
adc
or
div
or
movs
and
push
mov
outs
test
push
or
jmp
jle
pop
xchg
not
push
jmp
into
(bad)
je
sub
fs
sar
sub
pusha
sub
push
pop
sub
cmc
cmp
and
je
adc
lods
retf
add
sub
or
or
pop
add
mulps
mov
je
dec
sub
inc
xor
int3
mov
push
xor
push
sbb
pop
inc
push
mov
out
jne
cmp
je
shl
(bad)
mov
or
test
loopne
jmp
adc
inc
xchg
sub
(bad)
(bad)
loope
jge
sbb
sub
in
xlat
jmp
out
ror
and
jle
add
pop
je
mov
mov
and
aas
mov
pusha
leave
ret
retf
js
test
adc
sub
push
jp
sbb
cwde
pop
adc
outs
fwait
mov
sub
add
movups
push
cmp
or
xchg
mov
mov
xor
lods
mov
aas
add
and
cwde
dec
lods
cmp
(bad)
sbb
push
or
mov
fcom
sub
sbb
fimul
mov
mov
int
dec
and
cmp
rcl
retf
or
dec
retf
ret
rol
aas
and
fisub
mov
push
pusha
(bad)
jmp
adc
jmp
inc
imul
leave
jge
pop
pop
pop
sbb
es
sbb
or
sbb
sub
ins
ret
pop
ret
inc
sbb
or
push
sbb
dec
ds
jmp
clc
idiv
jmp
cmps
lahf
arpl
in
ins
mov
inc
fstp
xchg
imul
ficomp
mov
mov
lea
adc
inc
(bad)
xchg
or
ja
in
or
mov
loopne
push
inc
lods
stos
ret
cdq
dec
lds
fisttp
dec
jg
add
cmp
fisttp
test
adc
mov
cmp
jmp
mov
test
fwait
mov
mov
mov
push
retf
inc
add
or
dec
sub
sbb
loop
push
cmp
fwait
push
pop
sub
pop
ror
js
pop
mov
jl
cmp
and
xor
cli
mov
push
mov
inc
adc
add
js
dec
adc
and
mov
ret
addr16
pusha
sub
mov
mov
mov
stos
repz
je
add
inc
es
fld
and
pop
imul
or
cld
push
jecxz
xchg
add
jmp
xor
aam
push
outs
leave
add
or
ss
mov
not
xchg
mov
mov
pop
adc
pop
mov
cld
push
mov
cld
cmp
retf
mov
inc
imul
sbb
or
push
leave
not
call
rcl
pop
and
push
mov
lea
push
ret
sti
cmp
pop
add
sbb
and
mov
mov
mov
test
jo
add
push
clc
push
lea
xchg
adc
lods
inc
shl
mov
and
imul
(bad)
jne
push
clc
push
pop
cmp
jb
add
cmp
jb
push
xor
bound
dec
add
pop
adc
retf
or
sub
jnp
inc
sbb
adc
out
and
mov
(bad)
test
lahf
mov
int3
push
mov
not
mov
retfw
cmps
mov
bound
jmp
pop
repnz
jbe
adc
and
movs
into
xchg
iret
pusha
sub
dec
sub
jns
sti
push
push
je
jle
push
add
je
call
mov
ror
cmc
retf
gs
cmp
cs
rcr
push
pop
jle
xor
bnd
jp
stc
add
popf
std
jmp
add
push
ss
ret
js
and
push
fst
jo
sub
ror
jno
push
and
cli
add
psubsw
dec
adc
sbb
push
pop
pop
imul
sub
add
sub
sbb
add
stos
inc
jl
hlt
add
ins
mov
sbb
add
out
xlat
pop
sbb
std
nop
pop
jl
shr
lea
out
push
or
xor
dec
mov
stos
push
mov
adc
rcl
cmp
loopne
dec
xlat
(bad)
cmovo
fld
mov
push
rol
and
mov
pusha
shl
out
cld
cmps
fild
jmp
cmc
jg
jmp
jmp
push
or
jmp
rcr
adc
lods
add
add
sub
dec
std
push
jp
test
mov
pop
pop
mov
stos
xchg
pushf
dec
cmp
fsubr
and
mov
test
and
add
mov
adc
pusha
or
xchg
nop
clc
and
xor
(bad)
and
inc
adc
test
mov
cmp
mov
or
jle
aas
or
xchg
retf
jne
mov
xchg
ror
cld
jne
ja
js
outs
add
add
hlt
add
call
mov
add
repz
cmp
(bad)
data16
jae
into
es
xor
push
or
mov
push
stos
sub
test
ss
pop
lahf
icebp
loopne
add
lahf
xor
into
push
loop
xchg
cmp
push
rcr
call
cs
pop
stos
je
ss
pop
push
and
lea
out
mov
or
popf
push
add
mov
clc
lods
icebp
aaa
adc
cld
sbb
fwait
cdq
nop
sub
or
movs
sub
(bad)
mov
inc
adc
and
das
les
adc
inc
pop
mov
add
dec
xor
cmp
in
fs
push
in
sub
sbb
es
cmp
clc
arpl
push
ss
js
xchg
jmp
and
push
lea
push
push
call
mov
(bad)
and
xor
adc
in
add
movs
xor
dec
push
pop
push
sbb
xor
div
jne
dec
cmps
dec
mov
pop
aaa
and
dec
mov
xor
maskmovq
or
or
add
dec
sub
cmps
scas
push
je
or
data16
mov
sar
jp
adc
pop
into
pop
mov
pop
add
fldcw
add
imul
inc
icebp
scas
push
sub
inc
add
inc
rcl
add
cmp
adc
mov
(bad)
lods
add
pop
ds
call
add
rcl
add
jl
cwde
or
sub
fs
inc
or
push
xor
or
pushf
jno
fdivr
je
xor
jnp
aam
mov
push
inc
and
sbb
mov
add
imul
arpl
mov
sbb
je
add
pop
mov
inc
sub
mov
cld
adc
xor
call
mov
or
add
mov
mov
or
mov
add
pop
sub
mov
pop
fcom
jne
pop
ret
or
cmp
sub
cmp
fcmovnu
sub
dec
adc
or
sbb
mov
cmp
adc
mov
pop
add
xchg
jmp
push
daa
clc
je
fwait
scas
add
mov
pop
mov
mov
and
fdiv
cmp
push
sub
inc
mov
into
add
daa
mov
int3
or
jo
dec
add
sub
aaa
adc
jae
or
or
push
push
sbb
in
aaa
fsub
test
ins
mov
adc
stos
adc
push
out
xlat
or
fdivr
jne
stc
push
je
mov
mov
sub
sub
sub
or
or
fs
sub
adc
rcr
loope
sbb
js
shl
inc
cmp
xchg
xor
lea
sti
lea
ret
mov
int
add
daa
hlt
sbb
xor
addr16
and
mov
arpl
dec
dec
jmp
xor
mov
sbb
imul
push
scas
iret
test
pop
data16
jnp
xchg
push
dec
pop
dec
bound
test
jo
adc
es
push
cmp
cmp
cmp
mov
fild
ret
enter
add
icebp
jmp
in
jne
pop
jl
jmp
hlt
dec
inc
and
dec
ja
ja
mov
ror
test
clc
pop
(bad)
hlt
jno
or
enter
inc
pop
or
inc
in
mov
call
outs
add
je
pop
inc
(bad)
popa
fs
mov
les
or
dec
inc
(bad)
push
sbb
sbb
je
pop
sbb
or
xchg
adc
mov
sub
lea
push
test
sub
dec
js
pushf
jmp
mov
and
inc
inc
push
inc
dec
pop
pusha
cdq
mov
jmp
test
arpl
inc
adc
sbb
mov
scas
mov
and
cld
and
shr
push
xchg
sbb
jne
sbb
out
std
inc
jb
rol
arpl
(bad)
push
or
add
sar
push
sbb
lock
sub
retf
mov
sub
inc
bound
mov
fld
push
cld
inc
adc
push
adc
mov
popf
je
ret
imul
sub
mov
dec
jns
imul
cmp
push
outs
pop
add
cld
and
push
shr
cld
dec
push
sbb
fs
sub
movs
outs
cmc
adc
jb
push
clc
cmp
addr16
or
cmp
sub
push
inc
jno
(bad)
jbe
in
pop
mov
cmp
sbb
jbe
mov
mov
rol
inc
in
sahf
retf
arpl
(bad)
enter
and
or
sub
std
sbb
(bad)
mov
pop
shr
repz
add
pop
(bad)
cli
xchg
js
jo
leave
cmp
je
inc
cmp
jne
mov
inc
pushf
mov
xchg
retf
mov
push
pop
ins
pusha
pusha
add
mov
retf
pop
mov
aam
test
sub
es
add
mov
mov
mov
dec
sahf
mov
dec
hlt
push
ins
jecxz
mov
pop
idiv
adc
fadd
jmp
rcl
inc
mov
inc
cmp
sbb
pop
iret
test
loop
add
cmp
in
sbb
fmul
jle
xor
test
pusha
add
add
outs
shr
push
pop
out
dec
retf
and
rcr
pop
les
shr
inc
dec
inc
cmp
pop
(bad)
mov
jo
mov
push
mov
sub
mov
dec
cwde
inc
push
sbb
jae
stc
jae
push
fmul
pop
cmp
ss
pop
mov
popf
mov
pop
pop
push
outs
dec
pop
ficomp
sub
push
xor
pop
stos
jmp
dec
sbb
inc
sbb
add
(bad)
sbb
add
repnz
inc
push
pushf
adc
sbb
or
test
push
mov
test
mul
fnstenv
jno
or
pop
shl
pop
push
mov
sbb
mov
cmp
add
or
adc
xchg
cmps
mov
retf
pop
push
xor
ret
in
or
or
mov
jmp
and
lea
xchg
jmp
repz
movs
je
inc
mov
iret
scas
xor
int
or
pop
sbb
xchg
mov
(bad)
(bad)
(bad)
jmp
iret
push
push
repnz
aad
je
pop
movs
je
mov
mov
fwait
imul
pop
in
mov
enter
cmp
int3
jae
sbb
sub
rcr
xor
xchg
fwait
mov
adc
inc
std
into
lds
cmp
sbb
mov
adc
aas
je
or
loopne
push
push
mov
sahf
mov
cmp
in
cmp
inc
test
mov
outs
pusha
(bad)
xor
jge
add
cmp
xchg
sub
arpl
loop
mov
push
cmp
or
dec
or
(bad)
sbb
sbb
mov
pop
sbb
jge
push
shr
push
jmp
sbb
sti
mov
xor
adc
xor
scas
ror
sbb
fld
jne
ret
jmp
xchg
sti
into
sub
cmp
in
cmp
jbe
add
or
jbe
out
add
fild
xor
add
mov
add
inc
mov
add
adc
cld
add
sahf
fcomp
inc
or
inc
push
dec
add
inc
shl
bound
shl
and
je
lock
add
ss
shl
mov
dec
retf
inc
imul
call
inc
push
fwait
cmps
jmp
or
fiadd
ret
dec
xor
shr
push
mov
mov
cmps
add
xor
dec
pop
jbe
test
xchg
dec
shl
(bad)
or
sbb
call
mov
or
dec
xor
or
add
inc
adc
sub
add
iret
add
ins
mov
mov
je
mov
psubw
pop
inc
add
fild
or
inc
pop
sbb
sub
sbb
test
jne
xchg
jne
mul
add
push
xor
mov
movaps
add
sub
xor
push
xchg
retf
shl
aas
inc
or
inc
add
add
push
arpl
inc
rol
cmp
adc
inc
push
dec
aaa
repnz
pop
arpl
inc
push
sub
ret
arpl
sub
ja
jo
ja
in
and
xor
faddp
pop
sbb
jecxz
int
jle
add
jnp
add
xor
arpl
xor
pop
fxch
pop
adc
xor
out
pop
jns
addr16
xor
pop
jns
dec
inc
das
push
scas
outs
sbb
sbb
nop
je
popf
dec
dec
mov
push
and
ins
outs
inc
cmp
push
test
jo
xor
sbb
cdq
jnp
imul
ins
sub
xor
push
jb
mov
iret
or
imul
and
add
or
scas
inc
push
sbb
dec
pop
btr
and
push
push
inc
push
inc
pop
in
xor
sti
jmp
clc
push
arpl
pop
je
mov
pop
outs
bound
jb
mov
ja
jo
addr16
imul
push
jbe
outs
cs
bound
les
inc
mov
cmp
sbb
cmp
ror
add
fldenv
xor
loopne
pop
cdq
in
not
fmul
push
repnz
ret
pop
or
add
enter
inc
aam
dec
leave
fs
or
in
retf
xchg
dec
ss
adc
cmp
xor
cdq
sub
dec
mov
add
dec
add
pop
cmp
xchg
or
add
or
in
xchg
daa
fist
adc
push
dec
pop
repnz
int3
adc
push
mov
test
fisttp
adc
popf
adc
jb
push
mov
call
clc
or
test
movs
mov
xacquire
nop
jo
adc
xchg
fimul
inc
test
ins
and
xor
adc
mov
dec
or
sub
stos
sbb
push
ja
out
fcom
and
or
push
or
inc
nop
ins
mov
mov
fcom
cmp
mov
jo
in
call
push
sub
pop
mov
ja
mov
out
sbb
jne
xor
add
div
or
fnstcw
mov
or
or
sbb
adc
dec
sbb
or
mov
jbe
call
or
add
pop
std
cmps
mov
jmp
xlat
arpl
pop
ss
das
sbb
cs
mov
stos
popf
or
add
mov
xchg
mov
mov
idiv
repnz
(bad)
mov
js
and
in
jns
and
inc
mov
adc
call
push
push
xchg
jmp
mov
sbb
dec
and
push
push
and
(bad)
sbb
mov
outs
add
call
je
aam
sbb
add
aam
add
dec
shl
imul
cwde
test
mov
mov
adc
cli
outs
and
mov
call
push
out
and
fdivp
inc
or
jmp
and
sbb
out
adc
or
pop
popf
out
push
and
in
(bad)
xor
and
or
loopne
dec
dec
mov
stos
adc
xsha256
cmps
push
mov
cmp
jl
pop
or
clc
or
pop
and
pushf
ins
push
int3
pop
add
dec
cld
add
hlt
inc
jle
je
or
cmp
pop
or
cmp
fs
les
add
rcl
stos
mov
dec
or
push
add
movs
or
or
inc
(bad)
mov
or
or
or
add
xchg
dec
sbb
pop
mov
adc
cmp
adc
adc
cmps
cmp
fadd
test
sbb
inc
mov
sbb
push
out
stos
(bad)
jecxz
or
mov
repz
xlat
rol
or
cmp
or
or
mov
and
std
mov
add
push
dec
xor
out
add
mov
push
out
out
and
push
push
jmp
or
out
push
in
call
adc
inc
cmp
nop
mov
add
mov
and
mov
pop
dec
mov
pop
dec
xchg
leave
adc
push
push
push
add
cmp
cld
push
push
mov
repz
and
xchg
lock
ins
fisub
pop
cld
mov
aaa
pop
or
fs
loopne
push
xor
jp
js
dec
fsub
jp
js
xchg
pop
mov
push
outs
not
push
je
jbe
lods
sahf
sub
outs
jo
pop
retf
cdq
push
or
mov
clc
(bad)
cmp
jl
jnp
ja
push
outs
in
mov
or
push
loop
clc
sub
(bad)
pop
pop
xchg
lds
push
mov
xor
(bad)
loopne
mov
adc
or
mov
dec
inc
fild
imul
jmp
jg
sub
push
lods
repz
clc
mov
fwait
mov
sub
rcl
or
data16
xchg
retf
inc
jg
or
nop
movs
aaa
mov
cmp
cld
je
push
cdq
out
sbb
bswap
fs
push
mov
push
sub
pop
fisubr
or
pop
inc
add
and
mov
push
add
ror
jns
and
jl
fs
push
inc
add
pop
fs
data16
or
sbb
jno
(bad)
jnp
out
mov
movs
cmps
sbb
pushf
retf
push
lods
xor
mov
cmp
push
jo
mov
cmp
add
inc
mov
call
add
shl
push
lahf
add
aaa
cmp
cmp
xor
jl
fisttp
hlt
jne
mov
push
fldenv
and
dec
mov
outs
cmp
or
rol
jne
push
call
ret
popf
mov
adc
adc
jge
lock
aam
or
inc
test
out
xor
shl
mov
or
add
fidivr
push
push
add
xor
mov
cmp
in
imul
(bad)
cmp
fwait
mov
xor
xor
idiv
mov
sub
shl
fwait
jmp
dec
dec
mov
mov
mov
loopne
mov
ret
out
inc
lods
mov
sar
dec
xor
loope
xchg
cmp
clc
jl
jo
rcl
jg
xor
retf
mov
imul
add
push
inc
adc
into
enter
and
inc
test
test
pop
data16
mov
ins
mov
popa
adc
pop
mov
out
push
dec
push
dec
push
ss
cmps
sbb
ret
inc
add
cdq
pop
jnp
imul
add
xchg
or
test
add
xlat
jle
jnp
and
push
fistp
stos
cmp
push
or
mov
push
(bad)
js
add
imul
sbb
adc
or
mov
jbe
or
mov
push
cmp
push
add
mov
sub
jmp
xchg
adc
add
sbb
sbb
aaa
inc
xchg
gs
adc
push
push
push
icebp
mov
mov
cmp
jb
inc
mov
inc
xchg
clc
test
push
mov
add
mov
inc
scas
std
cmc
aaa
inc
mov
sbb
add
mov
add
(bad)
or
pop
rol
push
pop
(bad)
mov
in
mov
jnp
jmp
out
xchg
and
pop
mov
and
movs
mov
or
cmp
add
div
push
push
inc
lock
fs
dec
and
fs
test
daa
add
inc
js
loope
imul
(bad)
cmc
clc
fwait
jns
xchg
movs
mov
jne
call
or
and
add
and
out
or
push
retf
iret
push
push
add
lea
inc
ins
es
test
mov
lock
push
pop
je
cmp
mov
sbb
popa
mov
sbb
cmp
or
xchg
add
in
or
mov
pop
mov
add
xchg
pop
mov
fistp
mul
push
je
mov
sub
dec
cmp
lods
or
retf
mov
test
xor
lea
adc
mov
pop
clc
test
dec
(bad)
xor
cmp
rol
ins
sbb
inc
std
sbb
nop
pxor
das
mov
inc
ret
xchg
arpl
ret
xchg
int
add
lods
and
xor
adc
jmp
loop
call
loope
stos
jg
pop
and
daa
push
dec
sub
fild
aaa
push
fwait
add
je
sub
adc
jae
or
fadd
sub
jmp
ins
cmp
sub
sbb
push
add
or
in
xor
dec
fld
push
sbb
fsubrp
in
(bad)
iret
xor
leave
or
leave
adc
pop
popa
mov
add
and
je
cmp
imul
mov
cmp
iret
adc
jmp
sbb
or
push
sub
adc
or
adc
mov
test
or
or
popa
addr16
sbb
push
cmp
push
dec
mov
sub
pop
mov
mov
pop
mov
jmp
mov
or
or
xor
xchg
call
fld
jo
jl
outs
in
or
scas
cmp
add
lods
add
call
(bad)
jo
sbb
push
xchg
fsub
dec
or
inc
movs
add
call
sub
pop
(bad)
push
xlat
jp
jl
mov
je
(bad)
inc
adc
movs
fs
daa
jns
push
add
xor
add
outs
add
mov
jne
(bad)
call
daa
cmp
jne
xchg
push
call
cmp
jae
cwde
ss
jge
jne
pop
sbb
aas
inc
test
or
mov
xchg
pushf
cmp
and
dec
sub
jmp
(bad)
(bad)
in
push
and
lock
arpl
mov
ror
ins
sbb
push
sbb
mov
outs
(bad)
or
add
lea
hlt
inc
pusha
mov
and
rol
cmc
add
push
dec
out
sbb
mov
xor
or
pop
sub
pop
cmp
mov
adc
mov
test
mov
pop
inc
adc
jo
push
or
mov
jecxz
inc
or
add
scas
add
adc
push
or
hlt
mov
or
stos
data16
aaa
mov
stos
jns
ss
arpl
mov
mov
xor
sbb
cld
add
pop
sbb
bound
rcl
xlat
add
dec
sub
cmp
sbb
in
(bad)
out
dec
push
jne
mov
sub
sahf
sbb
cmp
pop
inc
sbb
cmp
dec
lock
dec
pop
jo
jne
dec
jge
adc
inc
sbb
pop
cmp
adc
xchg
pop
(bad)
lock
cmp
xchg
sub
fisttp
imul
sbb
in
sbb
test
pop
clc
push
aaa
ret
clc
ss
jae
std
jb
pop
dec
and
retf
mov
and
cmp
or
repnz
sbb
in
adc
cmp
adc
jb
dec
mov
cwde
mov
sub
or
push
arpl
mov
es
dec
add
xchg
and
mov
stos
lods
mov
(bad)
push
aas
aam
test
push
add
shr
inc
ja
das
jo
daa
mov
and
pop
push
test
push
mov
xchg
(bad)
jb
lea
jmp
push
mov
call
xchg
adc
jl
outs
mov
inc
data16
cdq
push
cmp
and
adc
pop
or
pop
jne
push
rcr
dec
dec
and
loop
jl
fisttp
movups
daa
dec
bound
pop
jg
mov
gs
ja
xor
mov
add
sub
mov
xor
mov
adc
adc
mov
and
ficom
lock
or
or
imul
or
jo
mov
scas
movs
rcl
push
push
mov
sbb
jbe
outs
into
emms
mov
xor
xor
and
mov
or
and
sbb
or
push
mov
data16
aaa
sub
out
adc
loope
adc
sbb
mov
pop
inc
mul
inc
xchg
mov
push
lea
jp
mov
repnz
inc
inc
ffree
syscall
mov
xor
sti
push
jo
je
iret
out
sbb
js
push
jl
or
ins
or
adc
test
pop
or
lahf
cmp
mov
nop
mov
adc
jnp
jbe
pop
lods
add
dec
jae
or
test
add
je
lock
sbb
in
cmp
cdq
push
movs
int
stc
or
and
mov
jns
int
adc
inc
cmp
push
inc
and
dec
sbb
dec
mov
rol
push
retf
mov
mov
js
mov
sbb
push
popf
inc
mov
push
mov
or
mov
inc
inc
test
add
sldt
ror
not
mov
xor
inc
xor
adc
int3
pop
sahf
add
adc
push
pop
movs
imul
add
jae
inc
and
dec
add
inc
mov
push
push
jns
bound
mov
outs
fist
imul
adc
push
add
push
and
test
gs
mov
stos
popf
sub
gs
push
jo
sub
inc
cmp
sub
pop
xchg
pop
and
or
mov
aaa
fstp
gs
popa
outs
ins
dec
aad
xchg
outs
pusha
dec
inc
gs
fs
add
popa
jo
mov
inc
stos
push
popa
cmp
arpl
imul
arpl
arpl
ins
pop
imul
repz
stos
stos
or
inc
js
add
(bad)
sbb
jb
ins
(bad)
xchg
int
aad
dec
data16
dec
and
arpl
imul
add
lds
ret
stos
inc
inc
mov
loope
popa
add
outs
pop
and
into
push
fwait
imul
sahf
jb
int
lods
ins
mov
leave
lock
dec
adc
jb
xor
pop
inc
dec
sti
dec
jbe
push
inc
pop
add
pop
out
mov
adc
ins
adc
push
ret
sub
dec
dec
adc
sbb
hlt
popf
test
add
and
dec
and
jnp
add
adc
fld
inc
cmp
push
inc
jo
or
xor
mov
xchg
mov
adc
mov
movs
push
sbb
sbb
pop
jbe
push
xchg
inc
sub
jne
mov
jmp
xchg
sbb
jmp
jns
std
mov
div
sub
push
adc
outs
cmp
cwde
xor
and
push
mov
call
pop
inc
jmp
add
ror
and
mov
jecxz
sub
ja
jae
ret
sbb
add
mov
push
and
scas
ins
adc
repz
or
clc
sbb
rol
jl
add
lods
and
scas
imul
cmp
xchg
pop
lods
adc
and
push
pop
push
mov
inc
dec
and
xor
rcr
ja
pop
out
ins
iret
(bad)
std
pop
jae
ja
jb
dec
fwait
dec
int
xor
sub
sub
xor
jg
daa
adc
inc
inc
jo
xor
sbb
out
xor
jns
sti
dec
ret
pop
ret
fs
push
inc
inc
jbe
sar
add
add
xchg
retf
outs
lods
cmc
add
add
adc
pop
ja
dec
xchg
or
inc
jge
adc
imul
xchg
bound
jae
ins
sub
mov
lea
lea
adc
scas
nop
push
sbb
mov
jae
sahf
or
or
xchg
mov
ss
cmp
push
pop
dec
and
xchg
sub
adc
adc
sbb
add
or
dec
pusha
pop
pop
mov
dec
pop
add
xor
loopne
sub
jns
or
inc
dec
stc
pop
dec
mov
add
inc
or
lock
ret
pop
aas
push
jmp
add
nop
add
push
ss
jo
lahf
jecxz
inc
ficomp
gs
or
shr
ins
ins
add
pop
add
aam
inc
(bad)
mov
add
and
push
pop
jns
popa
xchg
push
frstor
pop
ja
lds
sub
jne
xor
dec
pop
or
pop
fs
ret
int3
ja
pop
sbb
sub
arpl
jo
jae
aaa
enter
push
inc
push
and
sbb
outs
inc
and
das
sbb
jns
out
cmp
pop
add
mov
mov
push
adc
mov
movs
stc
xor
cmps
or
sub
(bad)
(bad)
fbstp
je
outs
ss
out
cmp
out
add
shr
pop
aas
test
adc
outs
retf
sbb
push
setge
xchg
(bad)
and
jnp
loope
xchg
adc
push
pop
inc
dec
adc
mov
pop
iret
outs
addr16
add
rcl
and
or
mov
or
(bad)
push
lods
adc
popa
pop
xchg
popa
mov
popa
mov
call
retf
jb
jae
xor
sbb
in
mov
add
nop
add
(bad)
(bad)
(bad)
push
cdq
xor
es
xor
jle
lea
cwde
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
(bad)
cmp
jnp
cmp
cmp
push
add
(bad)
fistp
sub
push
in
sti
wrmsr
xor
inc
xor
jo
lods
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
mov
(bad)
(bad)
(bad)
push
sbb
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
push
and
push
mov
ss
pop
aaa
inc
aaa
dec
aaa
js
test
lea
xchg
aaa
cwde
(bad)
(bad)
(bad)
push
movs
aaa
lods
aaa
mov
mov
cmp
dec
cmp
xlat
cmp
cmp
cmp
cmp
cmp
cmp
repz
(bad)
cmp
cmp
cmp
cmp
push
cmp
loop
out
(bad)
(bad)
dec
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
mov
(bad)
(bad)
mov
cmp
mov
ds
or
cmp
push
aas
data16
(bad)
aas
idiv
dec
jmp
jnp
xor
nop
xor
xor
xor
(bad)
jmp
jo
xor
std
xor
xor
(bad)
(bad)
(bad)
inc
xor
xor
xor
xor
push
shl
pop
aaa
test
mov
sar
cmp
cmp
(bad)
(bad)
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
call
cmp
cmp
cmp
cmp
cmp
mov
ds
cmp
inc
aas
into
aas
cmc
aas
loopne
push
aas
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmps
xor
xor
(bad)
jmp
xor
cmps
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
dec
push
xor
xor
xor
xor
xor
xor
xor
getsec
outs
aaa
loop
ds
cmp
(bad)
(bad)
(bad)
call
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
mov
aas
jnp
inc
ins
sub
adc
push
xor
and
daa
and
xchg
call
outs
xor
xor
iret
xor
xor
xor
das
fdiv
xor
adc
xor
adc
xor
(bad)
dec
jo
test
xchg
xor
xor
xor
test
xor
mov
adc
sbb
mov
or
adc
mov
sbb
mov
mov
sbb
add
jae
mov
in
imul
data16
je
lds
xchg
xchg
and
or
mov
icebp
xchg
adc
fdivr
adc
gs
ss
aaa
and
out
out
das
call
jae
dec
aaa
idiv
inc
outs
pop
je
out
mov
movs
add
sbb
or
push
or
retf
sub
push
add
mov
ins
mov
push
out
sbb
sti
in
cmp
ja
and
and
arpl
fild
push
test
add
data16
jae
mov
jns
loope
mov
xor
or
push
ss
jbe
dec
inc
popa
pop
stos
mov
sbb
adc
aas
add
adc
retf
outs
or
mov
daa
xor
mov
or
jmp
dec
or
ret
ins
stos
jb
jae
sbb
and
gs
push
dec
jnp
outs
cmp
sbb
sbb
xlat
arpl
idiv
or
iret
adc
sar
stos
sub
popf
xchg
outs
xor
sbb
add
arpl
dec
pop
jne
jne
mov
pop
bound
adc
ret
sub
add
inc
pop
idiv
pop
pop
add
outs
test
and
ins
jecxz
or
cmp
or
cmps
sbb
jb
outs
ucomiss
inc
aaa
ja
dec
and
jnp
shl
mov
out
outs
pop
jg
adc
sub
sub
mov
cmc
mov
adc
dec
shl
mov
aas
rol
mov
not
shr
add
jnp
sub
mov
loope
mov
daa
cs
dec
mov
sbb
fadd
mov
cdq
cmp
cmp
iret
cs
aaa
mov
imul
pop
mov
xor
mov
push
arpl
popw
sbb
push
adc
mov
test
mov
add
or
push
popa
adc
add
add
add
pop
adc
add
xchg
into
mov
jb
push
out
cmp
jb
add
pop
push
jg
adc
or
mov
jbe
call
data16
shr
inc
xor
sbb
and
and
xor
cmp
cmp
sub
cmc
adc
mov
ins
je
data16
neg
sbb
cmp
add
fwait
mov
push
cmp
ins
jnp
out
and
push
das
inc
cmp
scas
stos
adc
or
or
rcr
jbe
bound
js
cmc
pop
inc
test
(bad)
xlat
pop
nop
ret
sbb
retf
mov
js
inc
lds
sar
sub
pop
sub
and
dec
xchg
cmp
sub
popa
aas
and
push
push
add
push
(bad)
mov
jns
mov
mov
das
rol
jmp
or
xchg
fldenv
lds
js
sub
jbe
add
mov
push
push
jne
imul
sbb
mov
xchg
xchg
sub
push
fld
addr16
and
and
fnsave
sub
mov
mov
std
leave
addr16
lock
stc
loope
pop
mov
mov
cmc
ficom
pop
or
mov
adc
cmp
push
bound
push
add
sbb
add
cmp
sbb
sub
cmp
push
jmp
add
push
lock
sti
das
push
mov
sub
sti
ins
test
fwait
add
and
mov
and
push
push
add
loope
dec
hlt
cmp
inc
pop
or
adc
mov
jns
call
add
sub
ss
pop
adc
adc
outs
outs
add
test
pop
rcl
addr16
dec
dec
xor
fsub
xchg
pop
in
add
mov
retf
(bad)
push
or
retf
shr
jmp
push
arpl
jb
arpl
outs
test
adc
jnp
jb
mov
das
xlat
adc
push
xor
(bad)
and
push
xchg
xor
shl
inc
adc
xchg
rcr
fs
fxch
inc
fst
aas
mov
ins
(bad)
call
cmp
aaa
mov
pop
fwait
cmp
sub
sbb
add
test
rol
push
fld
mov
push
push
dec
pop
jae
fldenv
add
mov
popf
or
jno
in
or
add
push
and
pop
addr16
pop
and
ror
not
cmp
or
jae
arpl
or
jno
dec
xor
pop
mov
daa
mov
int
push
push
inc
or
ret
lock
mov
push
fldcw
test
pop
repnz
or
imul
mov
jnp
out
push
jb
dec
sbb
push
push
adc
adc
xor
fldcw
test
add
sub
push
push
rol
mov
add
ins
gs
aam
stos
int3
dec
add
sbb
fwait
inc
js
push
sub
mov
adc
stos
dec
test
outs
sbb
jo
cmps
cmovne
adc
push
mov
or
cmovg
sbb
jno
cwde
cmp
and
mov
pop
and
or
mov
arpl
aad
sub
lds
pop
push
shl
adc
jns
adc
and
stos
push
es
adc
pop
fiadd
and
dec
mov
dec
pcmpeqd
sbb
inc
sbb
inc
adc
adc
add
test
pushaw
cmc
andps
xchg
xor
or
mov
pusha
and
sub
adc
ins
push
bswap
es
fs
sbb
adc
or
pop
dec
int3
xchg
lock
push
cmp
mov
push
mov
int
scas
jne
inc
mov
pop
mov
push
ret
aad
mov
dec
outs
sbb
mov
xor
adc
jnp
xchg
xor
dec
add
dec
xor
xchg
sub
xchg
cmp
pop
inc
test
or
push
xor
ret
test
or
inc
jnp
xchg
sbb
sbb
test
add
push
iret
sub
data16
pusha
mov
iret
add
mov
add
ins
mov
loope
adc
outs
inc
add
imul
push
push
outs
lock
pop
add
add
push
push
ins
sar
mov
arpl
or
xchg
xchg
add
int
jno
pop
pop
addr16
movs
dec
aas
xor
outs
cs
push
push
xchg
add
sbb
and
sub
mov
(bad)
lea
adc
pop
sbb
lock
add
lods
adc
dec
mov
das
sub
or
lea
enter
cmp
gs
ret
and
setnp
inc
nop
mov
aaa
or
inc
and
fimul
mov
fnstenv
and
(bad)
jecxz
into
mov
sbb
adc
sbb
sti
pop
add
xor
mov
fwait
int
mov
nop
enter
ins
or
addr16
lods
gs
pop
xchg
adc
inc
or
or
outs
sbb
(bad)
in
inc
push
push
outs
fninit
add
push
jae
and
add
(bad)
xor
popa
gs
inc
mov
fsub
adc
push
inc
fwait
and
movs
inc
add
rcl
adc
adc
fldcw
pop
imul
sbb
out
add
and
or
sub
adc
ss
hlt
lahf
iret
bound
loopne
fistp
mov
push
push
sar
jbe
sub
adc
or
adc
push
fadd
jbe
and
arpl
or
inc
cmps
stos
xor
(bad)
xor
aas
mov
push
mov
idiv
adc
sub
push
push
pop
nop
or
fsubr
mov
fstp
push
mov
push
jae
jo
(bad)
ret
out
push
push
add
jne
sahf
xchg
sub
aam
push
sub
cmp
pop
push
mov
outs
repnz
jae
ins
imul
lds
je
mov
and
inc
inc
in
mov
pop
inc
sub
add
aam
not
jb
mov
jne
add
sub
les
xor
je
or
and
push
adc
sub
adc
jle
or
inc
inc
xlat
clc
rcr
enter
lea
out
push
inc
lock
add
mov
sub
sbb
stc
test
test
add
imul
inc
mov
jae
or
or
or
sbb
xor
stos
call
mov
lods
push
iret
daa
gs
loope
fisttp
sar
adc
mov
add
add
add
add
and
inc
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
add
inc
add
lock
